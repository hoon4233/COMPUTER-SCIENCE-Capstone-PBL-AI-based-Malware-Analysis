mov
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
les
add
and
jb
outs
addr16
add
add
add
add
add
and
add
add
add
add
add
inc
push
dec
inc
add
add
add
add
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
add
add
add
shl
add
add
add
add
add
add
stos
add
add
test
add
add
add
add
add
xchg
add
add
add
add
retf
mov
add
add
add
add
call
add
add
lods
xchg
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
sbb
add
lock
add
add
add
add
mov
add
mov
add
add
add
xor
arpl
bound
sub
sub
sub
sub
xor
xor
popa
aaa
jge
cmp
outs
fs
gs
outs
outs
ja
inc
jo
ins
imul
xor
inc
bound
je
outs
js
cs
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
push
gs
jne
arpl
cs
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
dec
imul
push
gs
jne
arpl
cs
outs
outs
cs
add
popa
jb
inc
jae
gs
bound
dec
imul
push
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
mov
inc
loop
mov
inc
pushf
push
mov
and
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
jae
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
jle
in
pop
repnz
add
add
sub
add
add
dec
add
add
push
add
arpl
je
jne
jb
add
outs
add
add
ins
add
add
add
add
cs
add
js
je
inc
add
js
inc
add
jae
arpl
jb
imul
imul
add
add
je
stos
jo
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
jo
add
mov
inc
or
add
or
add
add
add
push
or
add
add
pop
mov
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
outs
xchg
dec
inc
inc
push
js
in
mov
(bad)
iret
jne
(bad)
mov
add
dec
out
mov
adc
mov
test
mov
xchg
sub
movs
aaa
imul
mov
cmps
addr16
jmp
mov
jnp
xor
ret
or
xchg
dec
push
aaa
fucomip
mov
cdq
sti
fmul
std
pushf
cdq
cmp
retf
or
xchg
xor
or
enter
repnz
ds
mov
out
adc
jecxz
jp
cmc
hlt
dec
mov
sbb
hlt
hlt
mov
jmp
xlat
aad
xlat
aad
cmps
stos
mov
inc
cmps
mov
mov
mov
mov
mov
(bad)
int3
popa
inc
xchg
mov
xchg
das
jg
in
mov
sti
fcmovnu
(bad)
(bad)
idiv
out
aas
(bad)
icebp
(bad)
jg
repz
fistp
(bad)
fistp
das
jbe
fild
and
pop
push
and
inc
pop
and
fs
xchg
jmp
aad
in
aam
cmp
dec
sub
mov
(bad)
push
fcmovnbe
pop
xlat
call
shl
ins
inc
and
dec
mov
(bad)
repnz
mov
sahf
cmp
dec
ret
lods
add
push
xor
int
xor
xchg
push
push
sub
jne
jns
pop
cmps
add
std
jbe
jmp
mov
frstor
imul
pop
sub
and
popa
loope
pop
jle
pop
mov
push
dec
mov
xchg
stos
xchg
ret
add
mov
cmp
xchg
cmp
ret
sbb
test
mov
mov
nop
retf
retf
in
lea
mov
fcom
shl
cmps
aas
std
jmp
sub
pop
pop
dec
inc
aas
movs
pop
stos
repz
loop
or
test
pushf
gs
push
pop
xchg
leave
in
jb
xor
inc
inc
sbb
jb
ret
std
retf
xchg
xor
cmp
sub
mov
adc
add
mov
(bad)
mov
xchg
retf
mov
in
jb
adc
mov
ins
fnstenv
jl
pusha
lods
sbb
das
stc
rcl
pop
mov
movs
test
leave
stos
in
push
add
xchg
mov
js
cmp
aaa
pusha
fnstenv
retf
mov
mov
cdq
fs
push
cli
cli
jmp
sbb
(bad)
leave
or
xor
stos
nop
leave
sub
imul
sub
adc
sbb
ret
fcomp
mov
(bad)
lds
adc
in
sub
sub
jle
xchg
sub
sti
iret
jg
repz
(bad)
lods
fsub
xchg
jae
mov
(bad)
mov
inc
ret
sar
lods
dec
sub
imul
stos
jecxz
inc
sub
add
adc
jmp
mov
and
xchg
dec
push
pop
pop
jmp
xchg
pop
jle
int
adc
fistp
mov
xchg
xor
mov
popa
xor
imul
ror
and
pop
sub
pusha
int
(bad)
push
lods
repz
cmp
mov
adc
aaa
ins
fdiv
(bad)
lea
xchg
push
inc
ficomp
loop
mov
inc
ret
pusha
sub
movs
mov
cdq
sub
sub
jo
icebp
out
cmp
aaa
mov
loopne
inc
jne
scas
ret
lods
repz
ins
xor
push
adc
adc
or
in
fpatan
lds
pop
hlt
jmp
das
test
adc
cdq
popa
push
sbb
adc
dec
fst
sbb
ret
dec
mov
mov
shl
add
cmps
lods
mov
push
jecxz
leave
jb
int3
xor
and
retf
clc
jecxz
loope
xor
mov
daa
xor
sub
inc
mov
into
pusha
jno
sub
enter
push
jle
loopne
fimul
shl
pop
push
sub
lods
mov
pop
dec
aaa
dec
(bad)
adc
out
stos
dec
sti
movs
or
mov
enter
ret
lods
cs
push
aaa
sar
xor
sub
sbb
sub
and
lods
fnstcw
(bad)
int3
data16
lahf
jle
jmp
cli
test
fadd
or
push
lock
inc
sbb
rcr
xchg
adc
adc
mov
fistp
aas
jle
xchg
mov
(bad)
push
in
ror
lds
lods
dec
cdq
pop
iret
(bad)
fst
mov
int
(bad)
jmp
cmps
lods
movs
jmp
loop
and
fistp
ds
leave
retf
and
into
into
into
add
or
xchg
xor
xchg
adc
xchg
ss
lods
xchg
push
inc
pop
cmps
dec
and
loopne
jmp
or
loopne
xor
repz
add
push
and
fs
inc
sar
mov
push
sub
cmp
sbb
adc
cmps
aas
(bad)
sub
xchg
div
test
in
mov
lea
mov
popw
shr
jbe
xchg
and
and
pop
dec
(bad)
dec
cwde
inc
mov
lea
add
test
out
outs
into
dec
push
mov
push
or
test
adc
nop
das
cmp
mov
scas
scas
scas
std
sti
mul
push
push
and
(bad)
(bad)
push
cdq
das
pop
mov
dec
es
cwde
dec
xor
loop
imul
into
nop
lods
addr16
dec
dec
sti
adc
clc
adc
inc
ror
xchg
lods
fadd
pop
arpl
cmp
call
test
xchg
pop
ds
rol
add
ja
xchg
pop
sub
and
push
int
sahf
popa
(bad)
dec
and
mov
cmovnp
retf
mov
mov
jb
in
in
clc
loope
iret
mov
lds
add
sub
into
popf
cmp
pushf
cmp
aam
adc
dec
cmp
add
cmp
in
xchg
dec
add
pop
and
push
mov
mov
outs
jl
es
sub
clc
aam
aam
ds
sub
ins
jnp
js
lods
mov
pop
mov
pop
mov
retf
xchg
das
pop
mov
jo
je
jns
xchg
inc
mov
jae
jae
inc
inc
test
inc
leave
add
adc
outs
mov
iret
call
sar
lods
mov
sar
test
cwde
clc
loopne
add
and
test
mov
popf
cmp
push
scas
ja
jge
popf
ja
mov
cmp
sub
pop
mov
mov
xchg
add
mov
sub
pusha
std
cmp
or
jmp
pusha
sbb
aaa
outs
fdivr
(bad)
jge
cmp
xor
sub
mov
or
inc
out
cs
or
loop
cmp
rcr
gs
jns
sbb
jo
push
aaa
mov
int
dec
adc
cmp
cmps
in
xchg
mov
das
adc
or
cmp
aaa
mov
lock
fsubr
hlt
mov
jg
in
mov
loop
jecxz
adc
cmp
and
test
je
repnz
or
ficomp
mov
cmp
push
enter
lods
jge
fwait
ss
add
adc
mov
shl
fcmovnu
inc
inc
pop
jp
cmp
les
lea
mov
push
push
popa
popa
popa
and
xor
adc
out
out
ins
pop
clc
jl
(bad)
xor
test
pushf
pushf
or
lock
and
mov
mov
or
or
cmps
add
dec
sbb
adc
pop
out
jle
clc
icebp
add
mov
pop
lods
lahf
ins
fldcw
xchg
imul
hlt
retf
sbb
xchg
add
pop
in
jnp
pop
imul
rol
ins
les
and
(bad)
div
loope
fsubr
jae
pushf
mov
push
and
daa
dec
dec
dec
les
fadd
cmp
jge
fwait
cmp
repz
in
xchg
and
xor
jo
test
and
repnz
std
pop
lea
fmul
lods
jle
inc
jmp
test
outs
fnstsw
or
lea
jle
shl
ins
xor
imul
in
xchg
nop
or
xor
rcr
bound
nop
cmp
mov
mov
dec
sbb
sub
cmp
or
add
stc
or
sub
push
(bad)
retf
(bad)
lock
or
call
int
int
lods
mov
mov
mov
push
loop
mov
loopne
push
loopne
fwait
mov
jo
mov
out
scas
scas
cs
inc
mov
jmp
aas
pop
imul
test
mov
mov
or
loopne
stos
out
pop
cdq
mov
push
call
mov
rcl
xor
into
into
into
push
mov
xor
add
popa
lods
cld
or
lods
push
inc
sub
cmp
cmps
pop
adc
iret
add
lods
jle
stos
or
outs
mov
dec
cwde
sub
(bad)
and
jae
jg
imul
or
daa
inc
dec
xor
mov
xchg
ror
xchg
push
mov
pop
aas
pop
push
adc
or
outs
jmp
das
pop
inc
or
and
stos
mov
cmp
and
xchg
xor
cmp
jmp
cmp
pushf
xchg
xchg
mov
xchg
pop
(bad)
cmp
je
mov
cmp
aaa
xor
xchg
xor
push
jecxz
leave
leave
adc
add
inc
repz
inc
int3
pop
movs
xor
pop
enter
inc
sub
ss
imul
sub
fcom
lea
mov
sti
gs
dec
add
sub
cmp
aam
mov
dec
or
cwde
jno
jmp
add
push
in
out
mov
xor
inc
xor
mov
dec
fcom
rol
test
xor
ins
sub
js
inc
rol
stos
mov
aam
imul
test
je
imul
dec
xor
add
sub
call
xchg
bts
add
dec
pop
mov
cs
cmp
or
cld
aad
dec
jmp
dec
into
mov
nop
imul
(bad)
adc
mov
add
jae
cmps
xor
int3
xchg
imul
dec
jg
or
mov
dec
cmp
ds
lods
add
xchg
sbb
adc
fld
inc
pop
arpl
adc
fisttp
movs
(bad)
cld
mov
std
jp
xchg
pop
sbb
cmp
imul
popa
adc
jp
out
sub
jle
sub
(bad)
xor
or
ret
pop
mov
jmp
and
sub
or
pop
dec
fidivr
xchg
mov
mov
cwde
mov
lods
sub
xor
mov
cs
push
add
xor
aam
push
cmp
lahf
or
cld
adc
dec
mov
mov
inc
fcmovbe
mov
inc
mov
cmp
mov
xor
or
test
fsub
lods
test
test
cdq
rcr
pop
inc
jle
xabort
and
nop
push
sbb
hlt
dec
dec
inc
xor
add
cmp
sub
mov
adc
xor
jg
shl
jl
push
xlat
out
or
or
sbb
lods
bound
adc
or
xor
js
xchg
xchg
mov
(bad)
(bad)
jbe
cli
jne
fs
(bad)
enter
or
mov
mov
pusha
imul
movs
jae
push
xchg
cdq
cdq
sub
dec
xlat
dec
lahf
add
sbb
imul
mov
mov
repnz
mov
dec
xchg
pusha
je
lea
inc
std
sub
movs
or
(bad)
shr
adc
xor
dec
jb
cmp
xor
sbb
push
inc
jg
adc
and
push
je
adc
ja
(bad)
lods
sbb
pusha
(bad)
mov
add
popa
int
adc
sub
push
adc
mov
xchg
mov
(bad)
pop
fisub
test
pusha
test
add
push
dec
js
loopne
in
(bad)
adc
retf
sbb
scas
or
jno
ins
test
inc
inc
dec
es
sahf
add
inc
sub
sbb
ret
push
xor
nop
or
mov
pop
mov
test
aaa
add
gs
repnz
lods
test
pop
inc
aam
jno
rol
cli
add
mov
pop
ret
(bad)
push
mov
test
bound
leave
sbb
xchg
dec
jnp
sbb
mov
in
push
ss
lahf
ds
test
fs
xor
rcl
adc
adc
outs
jg
adc
pop
lods
es
xor
in
jae
into
and
repz
out
xchg
xor
lahf
xor
jb
rol
sahf
jne
pop
push
push
jae
adc
and
pop
xchg
mov
xchg
pop
or
xor
sbb
pop
pop
push
push
push
mov
adc
mov
das
into
push
popa
lods
add
mov
repnz
dec
aam
in
pop
and
rcr
and
outs
bndldx
sti
add
(bad)
out
test
push
sti
mov
mov
or
inc
push
in
push
aam
xor
fwait
cmc
jmp
repz
ret
(bad)
jge
jns
inc
arpl
adc
lods
mov
dec
xchg
test
cmp
and
sub
sub
dec
repnz
add
inc
cwde
lahf
stos
sub
rcr
in
leave
xchg
inc
arpl
mov
and
add
cmp
aam
add
pop
shl
mov
in
sahf
sahf
push
and
jp
mov
pop
add
push
repnz
stc
xor
mov
cmp
adc
retf
mov
enter
iret
adc
cmc
clc
mov
xchg
scas
xchg
or
xchg
sahf
into
lahf
aas
dec
iret
aaa
shl
pop
push
cld
test
xchg
xor
inc
inc
and
mov
dec
ss
xor
gs
push
dec
push
test
mov
sub
cdq
addr16
push
pop
xor
gs
inc
mov
add
addr16
sbb
outs
nop
fs
cmps
stos
or
push
sub
test
cmps
out
xchg
inc
adc
xlat
xlat
lahf
cmp
icebp
daa
mov
inc
add
lds
cmp
lods
mov
push
or
cmp
hlt
mov
xor
pop
mov
xchg
inc
mov
into
mov
cmps
test
push
rcr
pop
enter
xchg
add
cmp
ds
cdq
rcl
mov
mov
xlat
pop
jmp
int
cmp
xor
push
popa
arpl
outs
outs
das
cmp
(bad)
fs
mov
(bad)
nop
adc
mov
inc
add
sbb
add
mov
fsub
mov
and
dec
dec
pop
and
push
inc
aam
in
cmps
dec
popf
mov
push
movs
mov
mov
test
(bad)
lds
adc
mov
mov
cmc
inc
inc
mov
lods
push
or
inc
aam
hlt
sub
adc
jmp
cmc
dec
mov
imul
dec
arpl
packuswb
sbb
sbb
(bad)
in
add
lods
mov
test
mov
mov
sbb
jle
push
mov
lods
cmp
cmp
ss
mov
(bad)
(bad)
shl
mov
sbb
out
call
aas
mov
pop
fsubr
scas
xor
inc
lock
adc
cmps
imul
pop
xchg
jl
test
fdiv
aam
sub
xor
repz
cmc
retf
add
outs
(bad)
je
inc
out
pop
mov
sub
jo
dec
ror
das
ror
(bad)
push
das
cmp
dec
adc
imul
lahf
push
aam
or
lds
and
dec
inc
mov
inc
jge
push
pop
leave
call
not
push
push
adc
clc
or
lds
rcl
push
ins
mov
and
cmps
pop
pop
inc
rol
jne
cmp
dec
into
sub
or
mov
add
sbb
jl
in
pop
adc
stc
out
adc
jmp
xor
jle
sub
js
inc
repz
mov
adc
fadd
sub
add
in
jmp
sub
mov
(bad)
call
test
sar
idiv
inc
arpl
or
xor
cmp
lock
movs
test
ror
inc
aam
mov
test
shl
out
cmp
sti
jno
(bad)
or
sahf
sahf
cmps
(bad)
push
sub
test
sbb
movs
dec
xchg
adc
in
fnstenv
(bad)
call
cmp
sub
fsub
mov
fcomp
fidivr
clc
jno
sbb
push
fwait
pop
nop
jns
push
mov
mov
mov
mov
add
mov
(bad)
jge
cs
inc
dec
mov
cs
or
jmp
sahf
bound
push
cmp
in
and
jge
adc
sub
mov
cwde
sbb
lock
ds
jb
out
dec
mov
adc
test
ds
jmp
in
jne
nop
inc
dec
pushf
retf
ja
push
iret
jns
mov
mov
(bad)
mov
ss
dec
add
and
and
push
dec
test
sti
out
xor
mov
jmp
push
test
and
jmp
sbb
not
std
pop
jmp
adc
push
xacquire
fcmove
aam
and
ror
test
test
or
mov
dec
jl
sub
movs
pop
lods
and
(bad)
rol
mov
pusha
(bad)
stos
xchg
ins
mov
lods
test
mov
daa
xchg
dec
inc
inc
pop
pop
and
mov
sub
aad
lea
fisttp
in
mov
ret
xor
sub
ffree
dec
xchg
fwait
fwait
mov
icebp
in
xchg
fcom
push
jg
adc
lods
pop
mov
leave
mov
mov
or
cmp
cmps
push
and
das
fistp
scas
pop
mov
jnp
sbb
xor
pop
aam
stc
stc
dec
or
out
std
or
cli
cmps
cmc
or
out
push
mov
xchg
mov
mov
iret
cmps
cdq
mov
addr16
pop
test
adc
push
aas
mov
sbb
enter
pop
inc
adc
jo
sar
xor
mov
enter
xor
sub
idiv
inc
arpl
mov
push
push
hlt
test
add
add
in
(bad)
arpl
(bad)
push
div
jge
mov
movs
push
mul
out
mov
in
push
aam
pop
in
xor
mov
and
inc
cmp
adc
pop
pop
hlt
pop
adc
mul
and
inc
fiadd
sbb
cmps
out
mov
jb
mov
pop
test
ror
(bad)
shr
stos
pop
sub
mov
es
adc
shr
jns
jb
dec
test
icebp
frstor
sar
sbb
pop
mov
loop
icebp
jecxz
and
in
outs
xor
sub
and
rcr
test
mov
leave
in
mov
(bad)
in
(bad)
ins
rcr
iret
mov
xchg
imul
daa
jmp
sar
jmp
push
mov
pop
xchg
jno
lds
int
lea
into
into
into
xchg
cmp
out
mov
frstor
mov
mov
cld
movs
pop
pushf
test
ds
iret
lock
popf
ja
mov
add
loope
in
pop
push
dec
enter
mov
push
lods
pop
aad
fimul
or
imul
fwait
mov
outs
mov
cmp
add
mov
out
xchg
inc
sti
pop
repnz
sbb
imul
nop
or
and
pop
shr
xlat
scas
neg
repnz
pop
int
retf
sub
call
xchg
call
fiadd
jecxz
lea
mov
jnp
in
xchg
cmps
jmp
xchg
sahf
sahf
sahf
jnp
out
in
fidiv
call
shl
(bad)
clc
clc
js
jne
aam
and
mov
dec
mov
das
rcl
and
fwait
cmps
std
push
sub
jle
aam
les
out
imul
xchg
outs
popa
daa
mov
fsub
xchg
pop
leave
xchg
aaa
loopne
loopne
retf
call
mov
adc
cmp
mov
rcr
iret
jns
in
pop
fcom
dec
pop
rol
xor
repnz
shr
xlat
inc
rcr
test
daa
mov
pusha
aas
in
or
fstp
xchg
cld
pop
cld
fldcw
cmp
mov
push
or
mov
cmc
(bad)
outs
sub
sti
neg
xor
jns
inc
std
in
adc
xchg
stc
xor
ins
fistp
jg
(bad)
inc
mov
pusha
dec
inc
inc
cmp
test
cmp
(bad)
stc
aaa
out
jnp
fst
cmp
pop
repnz
mov
ror
dec
lock
ret
mov
dec
cdq
xor
sahf
cmp
adc
dec
jp
setp
loop
push
dec
movs
out
mov
repz
imul
clc
jp
clc
cmp
stos
fistp
or
xchg
fdiv
add
add
call
fstp
ja
(bad)
rcl
rcr
retf
add
inc
or
mov
jne
jae
and
jns
iret
pop
jno
(bad)
jmp
fimul
jp
sbb
aas
and
and
cdq
cdq
fldcw
fadd
mov
xchg
fdivrp
sar
xor
jnp
jge
or
mov
(bad)
and
lahf
cwde
jl
cmp
(bad)
push
out
ds
pop
xor
pop
dec
sub
inc
pop
popa
gs
arpl
xlat
psubq
std
lock
jg
stc
aad
in
ret
inc
shl
xlat
out
jg
cmp
jle
ret
dec
and
xchg
pop
cmpxchg
fwait
lock
jb
cli
loope
cmp
dec
xor
sbb
idiv
xor
jmp
repz
xchg
xchg
shl
mov
fisttp
lahf
mov
mov
js
and
dec
js
mov
outs
inc
aas
in
jmp
add
arpl
mov
xchg
adc
mul
in
and
inc
retf
gs
xchg
push
jge
push
clc
inc
popa
in
xchg
cwde
retf
leave
and
rol
sub
or
nop
aas
pop
jb
icebp
test
mov
in
shl
ror
mov
mov
cmp
xchg
sub
xor
mov
jnp
repz
into
jmp
ins
and
push
jp
shl
mov
mov
out
xchg
inc
pop
mov
jbe
shl
xor
scas
dec
inc
jecxz
cmovl
mov
cld
lods
jae
jecxz
loopne
mov
sub
cdq
cmp
or
out
push
sbb
adc
push
mov
pop
pop
cmp
movs
ror
ds
and
ficom
xchg
out
pop
xor
pop
aam
xor
in
pop
cmp
in
pop
jmp
cs
hlt
add
retf
retf
(bad)
xor
loop
pop
add
aam
xor
ins
jl
(bad)
mov
lahf
mov
(bad)
jmp
in
dec
dec
in
mov
mov
test
mov
cmp
js
packssdw
sahf
mov
(bad)
in
pop
nop
test
js
cs
jg
sbb
ret
mov
mov
push
mov
pusha
pushf
popf
popf
pop
pop
pop
clc
daa
cmps
lahf
daa
loope
fs
push
jo
mov
inc
mov
sbb
jae
out
mov
add
sahf
ss
dec
sti
add
xrelease
pop
or
ins
ins
fstp
fmul
and
jle
sub
out
jg
scas
(bad)
xchg
mov
gs
dec
dec
sub
jne
in
pop
xchg
xor
cmp
dec
xchg
push
add
lods
aam
aam
and
push
sti
and
test
(bad)
jmp
mov
fmul
pop
dec
mov
sub
outs
mov
mov
iret
dec
push
mov
in
and
add
add
or
pusha
ins
ins
sub
mov
jne
cmc
ins
jle
add
mov
ins
ins
ins
int3
iret
iret
fbstp
jo
arpl
inc
ret
jno
jb
mov
xor
xchg
leave
adc
sar
jl
fnstsw
in
in
cmp
dec
fs
fdiv
fadd
pop
shl
loope
sbb
pop
pusha
lea
stos
xlat
mov
xchg
push
call
ins
xchg
leave
in
xor
jle
loope
aas
cmps
movs
fcom
hlt
push
inc
(bad)
cmp
mov
or
and
int3
sbb
sub
das
outs
cmc
jmp
outs
cmp
lods
xchg
aam
stos
ret
out
lods
pop
mov
jle
ja
leave
fstp
aaa
imul
mov
fldenv
leave
(bad)
push
into
movs
out
fistp
pop
lahf
les
call
mov
scas
fistp
mov
push
pusha
rcr
mov
xchg
out
mov
xchg
das
pop
(bad)
out
aaa
xor
aam
test
sahf
das
jnp
jge
xchg
jae
(bad)
scas
(bad)
mov
call
daa
retf
add
and
fsubr
lods
jmp
jmp
adc
(bad)
xor
adc
cmp
xchg
nop
nop
add
sbb
cmp
dec
dec
push
ret
(bad)
hlt
push
dec
push
shl
ja
(bad)
jmp
xchg
jg
outs
hlt
(bad)
jmp
mov
jnp
mov
mov
mov
and
out
adc
cmp
adc
jg
xchg
mov
cmp
jae
push
cmp
(bad)
repnz
in
cmp
(bad)
(bad)
mov
fcomp
scas
aas
and
add
mov
push
aas
pop
or
call
pop
scas
adc
add
sbb
cdq
enter
mov
repnz
out
xor
outs
rcl
icebp
cdq
inc
stos
cmp
jne
pop
xlat
dec
std
jmp
mov
jg
stc
sti
scas
stos
out
ja
(bad)
fist
jge
sbb
pop
inc
hlt
mov
cdq
mul
idiv
jnp
dec
mov
je
in
and
stos
cmc
xchg
add
xor
jmp
mov
sbb
push
scas
push
pop
push
sti
jge
push
add
call
dec
or
ss
lahf
fnstcw
mov
mov
shr
sar
sar
sar
rcl
mov
aam
mov
lods
(bad)
cmps
jge
mov
dec
jb
pop
(bad)
ror
(bad)
fild
push
push
repz
retf
push
mov
xchg
and
inc
and
or
test
(bad)
push
sub
mov
push
add
cmp
mov
mov
sbb
in
push
mov
mov
pushf
mov
repz
dec
mov
cmp
jne
jg
jp
ret
cmp
outs
sub
jle
(bad)
idiv
xor
movs
inc
cmp
pop
std
and
fst
out
fnstenv
outs
icebp
push
(bad)
sbb
div
dec
xchg
lods
push
sub
clc
in
or
mov
and
je
jmp
icebp
ret
mov
push
dec
and
and
add
cmps
push
clc
mov
jae
and
jns
sbb
cmps
lods
pop
mov
mov
(bad)
adc
jle
pop
pop
pushf
xchg
cmp
adc
pop
fcom
mov
add
in
cmc
and
(bad)
jmp
shr
je
cld
mov
in
fucomip
int3
sti
and
out
gs
xchg
in
xor
push
cmp
pop
dec
movs
popf
xor
(bad)
dec
(bad)
mov
aas
pop
ret
xor
ret
stc
inc
mul
sbb
das
pop
jmp
jmp
lock
loop
inc
jae
cmps
fs
inc
mov
push
loop
movs
push
add
dec
loope
jns
cld
rcr
mov
mov
or
adc
adc
cmp
lods
rcr
push
ins
int
pop
outs
fdivp
test
out
(bad)
(bad)
stc
addr16
xor
mov
daa
not
mov
imul
out
sbb
jg
mov
pop
mov
out
scas
push
outs
stc
idiv
mov
mov
add
mov
out
in
lahf
xchg
inc
aas
leave
pop
inc
ins
and
(bad)
mov
inc
lahf
(bad)
lea
(bad)
sub
enter
lods
out
fisttp
xor
loope
rol
cld
gs
mov
call
mov
call
pop
pop
mov
cdq
test
addr16
push
shl
fild
jle
sahf
ficomp
cdq
dec
dec
dec
pop
pop
pop
push
jl
lods
pop
cli
jmp
addr16
jle
jns
loop
xchg
xchg
dec
adc
daa
dec
pop
add
scas
cmp
out
mov
jle
mov
mov
out
xchg
sbb
pop
push
enter
dec
ins
push
outs
int3
stc
cs
mov
int
fist
gs
mov
cld
cs
stc
icebp
mov
sti
inc
push
in
jecxz
inc
add
shr
daa
add
lahf
in
jge
mov
(bad)
mov
lods
cmp
inc
loope
(bad)
push
call
das
(bad)
lock
mov
lea
xlat
xor
into
aam
lock
mov
icebp
pop
outs
cld
jg
call
push
and
hlt
mov
iret
mov
fwait
fwait
cmps
push
movs
xchg
jae
aaa
outs
retf
jl
stos
sti
shl
loop
push
iret
cld
in
cli
mov
xchg
sub
rcl
cmps
jg
adc
pop
cli
mov
jae
movs
jg
(bad)
std
movs
idiv
cs
jbe
sti
lahf
ret
pop
in
cli
stc
(bad)
xlat
(bad)
mov
mov
icebp
inc
xchg
xchg
pop
ds
inc
or
lock
aam
popa
cs
jmp
cli
jne
sbb
scas
dec
(bad)
mov
push
call
jle
sbb
out
imul
sbb
repz
loopne
les
movs
test
or
fwait
xor
icebp
dec
jl
mov
jns
in
icebp
push
test
jp
push
ja
xor
inc
cli
push
jmp
and
fist
inc
outs
mov
and
xchg
pop
movs
mov
ja
mov
inc
sub
cmp
mov
imul
xchg
adc
cmp
fnstcw
stc
xchg
imul
dec
aam
xor
retf
aam
cmp
add
add
mov
test
mov
cmp
or
mov
mov
cmc
cmp
(bad)
pop
loope
clc
sub
dec
mov
jne
cmp
jmp
pop
cld
jb
adc
push
mov
test
fist
std
sub
mov
jae
mov
pop
jecxz
adc
(bad)
push
xchg
sub
xor
jg
(bad)
ret
mov
xchg
or
popf
repz
aas
xor
sub
pop
outs
mov
sub
es
jge
lahf
lock
pop
rol
cli
sub
mov
lea
xchg
push
add
retf
inc
push
jmp
fdivrp
(bad)
idiv
call
pusha
(bad)
iret
sbb
clc
scas
jb
ja
or
fxam
pop
jg
loop
mov
add
inc
jns
test
fdivr
xlat
pop
lahf
fwait
push
popf
jns
ja
fstp
sar
cwde
ret
mov
mov
enter
sub
loope
shl
test
and
or
cmps
ja
add
cdq
push
xlat
pop
pop
cdq
popa
push
in
adc
into
call
pop
add
idiv
call
jo
hlt
inc
out
mov
pop
add
jno
(bad)
outs
jnp
cmp
push
xor
dec
cmp
rcl
jle
jnp
adc
pop
popf
cmp
stc
stc
jecxz
xor
out
dec
in
and
call
jns
jo
push
iret
daa
mov
dec
popf
fwait
data16
and
pusha
imul
fnstenv
xlat
out
mov
aam
data16
in
cli
xlat
out
mov
push
inc
clc
xor
std
lock
cwde
sub
sub
iret
and
ins
in
pop
push
push
cmps
jmp
popf
ins
je
cmps
aad
test
xchg
addr16
aad
call
arpl
(bad)
push
cmp
and
ret
shl
xchg
gs
sbb
ja
push
dec
xlat
jge
cs
pop
cmp
fs
clc
es
sub
jae
or
int3
addr16
idiv
icebp
mov
mov
add
xchg
sub
sub
jmp
adc
inc
pop
cwde
gs
jmp
xor
inc
aas
pop
ins
jbe
cmps
out
test
jp
jmp
sub
and
lock
mov
mov
jge
mov
mov
sbb
outs
iret
mov
daa
enter
imul
data16
std
int
sbb
in
je
lock
mov
outs
rol
imul
mov
mov
cmp
jnp
mov
mov
test
ret
shr
iret
push
outs
(bad)
hlt
adc
addr16
fstp
test
push
lahf
ret
fdivr
jmp
loopne
xchg
stos
mov
mov
jb
mov
pop
call
call
fs
jmp
mov
adc
jg
xchg
dec
pusha
add
jmp
ret
cmp
mov
mov
lea
fwait
jmp
(bad)
push
ficomp
imul
mov
adc
sbb
in
jne
test
xor
adc
(bad)
sbb
jns
lods
mov
jnp
bnd
loopne
(bad)
out
jmp
dec
test
ror
jecxz
dec
lods
or
pushf
out
int3
jne
sbb
imul
mov
scas
xchg
mov
adc
popf
or
jne
stos
test
cdq
xchg
lods
imul
cmps
jmp
call
and
cmp
push
jl
ror
sbb
lahf
imul
cmp
out
iret
mov
jmp
shl
iret
mov
push
fs
enter
mov
pop
xlat
adc
fadd
rol
sub
inc
out
mov
rcl
cmp
in
sbb
jmp
xchg
xor
int
ret
mov
push
cmps
add
add
test
in
popf
imul
sti
or
pop
es
add
addr16
leave
cdq
(bad)
jge
repz
mov
cmp
(bad)
(bad)
je
in
adc
mov
dec
xrelease
ss
test
jle
bound
mov
jnp
ins
fistp
out
jp
fst
in
into
pop
fstp
fs
xor
bound
inc
call
ret
inc
push
jp
ja
xchg
fucomp
out
push
out
pop
out
push
in
push
in
pop
in
push
sub
je
cmp
(bad)
je
adc
cld
add
xor
push
clc
into
mov
jo
enter
jge
dec
push
cmps
push
xor
push
cmps
data16
sub
pop
test
shr
ja
sti
jnp
lahf
lds
cmp
stos
fadd
jb
sbb
ret
repnz
sub
adc
hlt
mov
mov
mov
adc
(bad)
stc
les
jmp
fwait
pop
jae
aas
or
sti
and
idiv
fstp
adc
int
pmaxsw
dec
mov
cs
dec
mov
sti
xchg
out
ss
pop
mov
inc
mov
imul
mov
pop
mov
pop
adc
or
and
ret
push
ins
mov
cmp
aaa
xchg
mov
sar
mov
cmp
sar
push
shl
shr
fdiv
lds
dec
in
call
dec
mov
sahf
inc
jle
rol
fsub
ss
cmps
jae
dec
iret
dec
stos
fisub
stos
mov
push
out
mov
in
sahf
cmps
inc
jns
dec
aaa
add
int
aas
xor
aam
popf
stos
ror
ror
outs
pop
pop
ret
cmp
iret
mov
adc
and
(bad)
pop
test
sti
mov
fcomp
jnp
xor
loopne
aas
ret
mov
mov
(bad)
arpl
outs
repz
cmc
mov
jmp
pop
jecxz
push
loope
mov
shr
inc
cmp
mov
jl
mov
mov
fcomp
fadd
cmps
mov
into
push
cmp
adc
mov
cmp
push
xor
out
and
cmp
mov
jno
cmp
int3
fwait
mov
cmp
mov
xchg
cmps
pop
test
xchg
cmc
push
dec
xchg
pop
pushf
and
push
pop
mov
add
les
jle
stc
xchg
inc
retf
mov
pop
fstp
mov
pop
bound
aam
(bad)
pop
xchg
cmp
or
ds
loope
popa
in
inc
pop
arpl
sti
add
cmps
add
fidivr
mov
(bad)
mov
aad
pop
push
cmp
cmp
push
and
mov
out
arpl
push
mov
js
sbb
fidiv
dec
sbb
dec
jns
dec
mov
xor
pop
sub
mov
add
loop
add
popf
mov
out
dec
data16
xchg
int3
(bad)
call
shl
fs
out
stc
(bad)
sub
add
les
xor
or
xchg
iret
dec
mov
aas
int
bound
sbb
or
imul
inc
in
out
int
mov
pop
dec
cmps
dec
pop
mov
rol
arpl
lods
mov
setnp
lods
ja
pop
in
jo
lods
jne
test
loope
(bad)
int
push
dec
inc
fsubr
adc
stc
cdq
in
fwait
push
and
fldcw
cmp
push
sub
loopne
lock
fistp
and
mov
out
push
mov
xchg
dec
jmp
add
out
or
mov
mov
dec
mov
leave
sub
leave
repnz
push
sar
loop
fistp
aad
lods
iret
dec
mov
xor
repnz
imul
ins
fisttp
mov
adc
mul
mov
mov
mov
and
ret
call
xchg
add
inc
shl
jo
shr
ss
mov
test
inc
mov
jns
cmp
icebp
push
or
push
or
xchg
in
mov
push
inc
mov
cdq
mov
xchg
cmps
dec
test
data16
push
cli
mov
xchg
xchg
sub
dec
cmc
cmp
mov
dec
mov
and
mov
inc
pop
jl
(bad)
cmp
(bad)
sbb
rol
out
lods
cs
mov
adc
sub
sbb
jbe
out
fmul
jne
jg
jecxz
mov
cld
gs
mov
lods
xor
mov
xchg
and
jae
sub
retf
frstor
mov
in
es
retf
cmp
push
repz
inc
repz
mov
jnp
push
xchg
mov
cmp
xor
inc
nop
jmp
push
jmp
pop
aaa
into
mov
icebp
xchg
or
or
stos
push
jle
ret
mov
push
sti
lea
xor
adc
loop
sub
push
mov
mov
xor
mov
movs
mov
fs
add
jl
jecxz
mov
sbb
add
cmc
inc
or
inc
mov
dec
ret
cmp
sub
adc
sbb
or
mov
push
push
mov
imul
aaa
fwait
push
push
jmp
stos
inc
daa
retf
cmp
mov
jb
scas
jo
jno
jb
jecxz
pop
loope
xchg
outs
push
arpl
sub
std
int3
imul
jmp
dec
mov
cdq
add
push
loop
jecxz
inc
mov
xchg
mov
in
arpl
push
pop
cmp
jecxz
imul
out
icebp
xchg
mov
enter
add
rcl
xor
or
cmp
jge
sar
ret
push
pop
sahf
gs
xchg
sbb
cmp
mov
xchg
inc
rol
dec
pop
imul
hlt
mov
test
mov
xchg
ins
out
movs
fcmovu
ins
push
sti
pop
lods
idiv
push
mov
jo
test
xor
inc
cdq
jmp
cli
dec
inc
(bad)
(bad)
inc
ficom
nop
mov
mov
push
sti
mov
jno
stos
and
sub
hlt
adc
lea
lds
das
sbb
cs
and
movs
ficom
(bad)
xchg
out
cmc
daa
add
sbb
cmp
shl
int3
adc
sub
data16
mov
lds
ss
data16
mov
adc
cwde
int3
leave
dec
sbb
mov
xchg
pushf
int
setnp
sbb
(bad)
and
mov
scas
fwait
or
stos
mov
cmp
jb
mov
cmp
cmp
in
int
lea
call
push
cli
call
lods
or
cwde
cmps
js
les
sbb
jmp
jae
lods
je
arpl
mov
mov
daa
icebp
and
fisttp
icebp
dec
lock
or
cwde
aaa
mov
retf
cmp
push
adc
jl
stc
ds
shl
inc
stc
mov
les
loop
aam
jno
sbb
scas
movs
ror
jmp
cmp
repz
lods
iret
add
sub
retf
mov
scas
int3
mov
fadd
jmp
cmp
repz
repz
pushf
jo
outs
inc
scas
add
xor
add
ss
lods
dec
mov
fistp
inc
fxch
mov
vpcmpeqd
mov
pop
icebp
jp
mov
stc
cli
loop
fiadd
inc
inc
ret
and
retf
shl
rol
or
mov
fwait
cwde
cwde
cmp
cmp
stc
stc
add
mov
xor
jb
mov
pop
pop
pop
jns
jns
mov
scas
test
test
scas
scas
arpl
ins
ins
push
push
push
pop
pop
pop
popa
popa
popa
jbe
jbe
dec
dec
pop
pop
pop
push
push
aam
inc
mov
pushf
cmp
js
pop
pop
push
push
rcl
fcom
inc
jmp
(bad)
inc
aas
jnp
adc
je
js
cld
mov
push
xor
ror
test
mov
fs
sti
push
mov
dec
jle
shl
inc
mov
xchg
int
dec
mov
mov
mov
pop
sbb
cli
push
popa
(bad)
enter
xlat
inc
jb
mov
inc
xchg
jo
push
mov
pop
out
jno
lock
mov
mov
push
loop
pop
lods
ja
add
push
ret
rcr
sub
inc
cmp
(bad)
frstor
icebp
loop
jmp
out
in
push
push
sbb
or
jbe
mov
mov
mov
mov
in
push
cld
xchg
mov
hlt
sahf
in
ins
out
gs
push
jnp
test
pop
mov
inc
sahf
loopne
mov
mov
mov
mov
sub
fist
out
sar
into
mov
add
mov
(bad)
push
add
mov
imul
inc
inc
xlat
push
fld
and
rol
or
mov
int
lds
push
add
(bad)
sti
fldenv
cmp
mov
push
aaa
imul
push
call
xor
mov
fwait
aaa
xchg
xchg
xchg
xchg
xchg
xchg
add
aam
(bad)
cmc
cmc
cmc
sbb
nop
add
bound
imul
jbe
push
scas
mov
imul
shl
mov
lea
lods
dec
inc
movs
push
cmps
lods
dec
pop
cmp
in
mov
arpl
xlat
in
hlt
ficomp
and
call
sub
jne
xlat
jns
mov
(bad)
(bad)
addr16
mov
mov
pop
sahf
lods
ins
into
iret
and
out
or
pusha
add
(bad)
sub
sbb
mov
mov
xor
popf
stos
jne
js
inc
pop
aas
lds
lods
idiv
fstp
jo
fldcw
aad
shl
aad
arpl
popa
xlat
jmp
mov
mov
add
in
cli
cli
or
adc
pop
mov
lds
or
mov
fistp
jbe
je
je
stos
dec
mov
pop
mov
call
jae
push
push
push
data16
inc
inc
(bad)
mov
pop
fs
mov
cld
cli
(bad)
call
xor
mov
xor
cdq
xchg
daa
sub
pop
mov
push
cwde
ss
xor
outs
mov
and
mov
mov
popf
popa
jnp
lods
mov
sub
mov
sbb
or
or
and
xchg
dec
push
cmc
into
xchg
lea
clc
rol
mov
dec
inc
jmp
jnp
std
(bad)
push
pop
ins
ins
mov
cmp
jbe
loope
jbe
aad
cmp
(bad)
mov
popa
xchg
mov
stc
mov
cmp
enter
in
in
jecxz
mov
aad
mov
sub
jp
rol
jmp
mov
ds
in
cmp
mul
fwait
sbb
(bad)
(bad)
outs
imul
pop
pop
mov
inc
aad
or
test
pop
pop
push
pop
pop
sub
cmp
sbb
(bad)
js
or
mov
xchg
in
icebp
adc
push
fsubr
inc
push
popf
(bad)
ror
lea
lods
idiv
fwait
jne
mov
xor
jmp
pushf
xchg
pop
mov
out
sbb
shr
jnp
add
xchg
add
inc
cmp
mov
mov
jmp
mov
pop
out
mov
fsub
shl
(bad)
xor
mov
jmp
in
out
retf
pop
and
jecxz
mov
add
push
sub
cmp
mov
popf
dec
das
jbe
ins
sub
cmp
in
push
cmps
dec
lahf
ds
int3
cdq
sahf
sahf
sahf
pop
in
retf
pop
mov
mul
sbb
ins
call
and
pop
lds
inc
test
mov
xor
jmp
jnp
mov
push
mov
loope
cmp
call
shl
call
mov
mov
sbb
fisub
imul
pop
cmps
pop
sbb
lahf
add
shl
and
daa
cdq
jbe
aad
out
jmp
jl
lods
dec
add
push
ror
jmp
cmp
push
les
pop
mov
loopne
test
jecxz
mov
arpl
(bad)
fisub
mov
mov
and
cs
pop
mov
(bad)
jns
pop
pusha
jmp
pop
test
retf
mov
hlt
cmp
loopne
imul
fsubr
adc
repz
pop
mov
scas
pop
mov
imul
push
pop
clc
and
mov
cdq
mov
jmp
sub
test
push
push
jbe
int3
mov
adc
or
add
inc
adc
ror
rcr
cmps
call
push
mov
dec
ja
inc
out
mov
sbb
clc
mov
xlat
mov
pushf
jmp
add
mov
mov
call
in
inc
xchg
out
jno
fnstsw
daa
es
hlt
dec
inc
clc
jae
add
sub
movs
ins
outs
xchg
xchg
das
ins
daa
stos
fnsave
ja
and
dec
dec
push
icebp
and
sbb
lods
rcl
repz
scas
sub
inc
aam
adc
jmp
mov
(bad)
pushf
popf
(bad)
push
mov
or
data16
push
add
std
neg
aaa
outs
fidivr
ja
mov
ss
int3
mov
jb
inc
jl
stc
cmps
(bad)
jae
lea
sbb
ss
aam
popf
test
pop
ins
sub
adc
and
dec
sbb
or
or
ficomp
pop
pop
repz
inc
mov
push
lea
xor
xor
scas
dec
sbb
int3
inc
scas
push
push
int
push
mov
or
jp
adc
jp
fldcw
jg
(bad)
or
jo
cmps
xor
cmp
ins
mov
pushf
sahf
data16
push
stc
sbb
add
mov
ss
jno
xchg
mov
inc
xchg
lea
mov
fwait
add
sbb
shl
mov
pop
les
pusha
pop
pusha
in
jmp
mov
in
jge
hlt
push
mov
dec
imul
jmp
(bad)
mov
mov
lods
xor
push
xchg
leave
fdivr
nop
call
out
frstor
mov
jmp
add
test
sbb
out
jns
iret
out
imul
ins
fnsave
push
retf
movs
xchg
mov
xlat
dec
jmp
xchg
lods
adc
push
mov
inc
sub
push
mov
lds
test
xor
lods
stc
or
outs
mov
or
push
je
popa
mov
push
cmps
dec
mov
sbb
inc
fidiv
hlt
retf
xchg
outs
mov
das
std
out
(bad)
mov
pop
ja
mov
ss
aam
mov
sub
lea
repz
jg
mov
retf
stos
lods
lods
pop
sbb
ficomp
ds
loop
sub
jne
int
test
(bad)
(bad)
test
sbb
or
cmc
call
fcomp
out
cwde
xor
rcr
cmp
jecxz
scas
out
sbb
jle
ja
jl
mov
pop
ins
xor
or
std
popa
sub
test
lock
xchg
mov
shl
or
mov
sbb
jns
mov
jbe
sti
mov
out
mov
jge
mov
and
and
xchg
dec
xor
mov
adc
mov
and
sub
inc
and
adc
mov
aam
sahf
scas
lods
cmp
push
xchg
xchg
xchg
xchg
scas
(bad)
lock
cli
add
mov
sub
ja
push
jp
xlat
stc
sbb
lea
rcr
stos
aad
push
adc
add
std
xchg
ins
(bad)
dec
mov
cmp
out
dec
mov
loop
xor
xchg
sbb
ins
cmps
pop
stos
lods
shr
outs
ss
enter
lods
int3
(bad)
cmps
(bad)
into
scas
fld
mov
popa
sbb
cdq
retf
hlt
push
ja
arpl
ja
jmp
stos
xlat
(bad)
add
add
pop
fcomip
inc
adc
out
mov
sub
in
fcomp
arpl
fdivp
repz
fdivr
mov
dec
xor
jmp
lods
sub
arpl
test
mov
inc
jge
idiv
clc
js
out
inc
aam
div
ja
jmp
lods
xchg
xor
xchg
(bad)
xor
les
push
and
adc
pop
es
adc
rcr
cmp
adc
sbb
pop
jg
cmc
popa
ret
xchg
push
mov
leave
inc
cmps
jp
jno
sbb
jp
mov
pop
repz
aas
or
jp
aad
add
ins
cmp
ficomp
sahf
bound
lods
cmps
fld
jns
in
mov
sbb
xor
imul
pop
ins
gs
outs
imul
lea
mov
push
addr16
pop
pop
mov
in
mov
xchg
fstp
test
adc
mov
push
outs
out
jae
test
arpl
mov
fs
sbb
(bad)
mov
pop
dec
(bad)
push
inc
add
xchg
add
clc
lar
ds
xor
or
call
inc
inc
jae
lods
(bad)
fistp
mov
jg
pop
or
cmp
adc
pop
arpl
mov
scas
std
ja
pop
mov
cmp
and
xchg
add
xor
mov
and
adc
adc
out
int
stos
inc
push
pop
ds
clc
mov
popa
inc
ficomp
scas
push
pop
pop
lahf
std
(bad)
dec
xor
fmul
pop
mov
sub
sbb
jmp
call
cwde
in
lock
loope
sar
into
mov
out
add
add
cmp
mov
fst
inc
mov
jmp
out
out
sbb
dec
dec
or
retf
in
ss
sub
inc
(bad)
push
daa
cmps
ss
cmc
add
outs
aaa
mov
ins
add
sub
retf
or
retf
jmp
mov
scas
(bad)
iret
stc
xor
(bad)
sbb
cmp
inc
icebp
jecxz
adc
fwait
xor
mov
jmp
icebp
jecxz
xchg
pop
dec
popf
cli
leave
mov
lahf
add
ds
cmp
icebp
lods
pop
lahf
into
cdq
repz
lahf
jmp
fsub
xchg
jle
sbb
stc
jmp
pop
idiv
call
and
xchg
fnstsw
ja
jbe
fcom
cli
jbe
scas
jmp
(bad)
je
jns
loop
xlat
mov
jg
in
cmc
xlat
xchg
dec
mov
movs
inc
xor
sbb
and
push
pop
mul
mov
ret
fistp
inc
test
enter
in
xchg
xor
mov
mov
push
inc
(bad)
out
enter
aam
stos
rol
ret
jnp
mov
mov
lods
cmc
imul
xchg
ins
or
int
push
cmp
lods
sar
mov
dec
mov
arpl
jge
jmp
sahf
(bad)
mov
cdq
aas
cld
xlat
jg
push
push
xor
adc
add
pop
fcmovnu
push
(bad)
push
fcmovnu
inc
xlat
mov
div
mov
pop
pop
cmp
mov
pop
jbe
aas
loop
jno
ret
add
or
call
mov
test
sti
xchg
lahf
fistp
mov
jg
sti
(bad)
dec
pop
(bad)
add
aam
pop
push
push
jle
arpl
cmps
xor
sbb
mov
outs
fsubp
or
jle
push
jle
adc
lds
jg
outs
fst
es
gs
xlat
(bad)
pop
addr16
bound
push
push
jns
cli
enter
cmp
jne
jecxz
inc
pop
popf
cmp
xchg
cmc
jno
cmps
inc
cs
xchg
adc
and
xchg
mov
ret
xor
pop
sub
les
imul
bound
ins
push
push
aas
rcr
ins
aad
mov
imul
outs
jmp
or
das
pop
mov
scas
xor
sub
fcmovu
sbb
mov
icebp
mov
sbb
push
loope
push
(bad)
jmp
in
inc
sub
adc
cmp
xchg
(bad)
(bad)
gs
fcmovbe
push
movs
pusha
ins
outs
pop
arpl
jmp
add
(bad)
into
into
lods
cs
outs
outs
pop
out
out
pop
rcr
cmp
pop
pop
inc
int3
cmps
dec
push
call
clc
pushf
push
stos
sti
call
mov
jg
and
loope
or
pop
iret
cwde
icebp
stc
in
fstp
jg
xchg
popa
popa
pop
sub
les
push
fild
adc
sti
dec
pop
fdiv
fwait
ss
sub
jg
mov
jg
sub
jbe
retf
jae
(bad)
cmp
xor
pop
lahf
cmp
mov
daa
icebp
icebp
jno
shr
cmps
inc
or
mov
gs
sub
out
inc
sub
inc
sbb
or
xor
jne
xor
aam
or
mov
dec
push
ins
in
(bad)
cmc
jmp
loop
or
ins
sub
cs
dec
stos
leave
enter
outs
pushf
aas
aas
pop
pop
sub
shr
icebp
xor
outs
fld
icebp
mov
loope
push
jmp
push
jecxz
push
in
popa
pop
jmp
mov
fcmovbe
ror
sub
pop
pop
xchg
xchg
xchg
xchg
pushf
pushf
cmp
fidivr
xor
push
mov
mov
mov
stos
mov
daa
lods
pop
shr
scas
scas
jnp
fdivr
(bad)
vmread
repnz
cmp
in
int3
retf
mov
pop
jge
sti
clc
pushf
popa
mov
push
xor
(bad)
mov
(bad)
mov
mov
jg
(bad)
ret
or
add
xchg
push
div
clc
aaa
sub
sub
cli
dec
jmp
std
sub
dec
mov
mov
iret
cmp
jg
sub
mov
hlt
fld
dec
iret
das
cmp
xor
in
mov
cmc
stc
(bad)
ins
popf
ret
jp
pop
cwde
sub
popa
jmp
lods
xor
mov
mov
sub
dec
inc
pop
mov
xor
cmp
cs
and
sub
dec
dec
lods
dec
dec
stos
into
int3
fcom
pop
imul
mov
retf
pop
mov
inc
push
jns
push
mov
test
xor
int3
mov
aad
or
pop
xchg
fwait
fwait
mov
mov
pop
mov
mov
lds
mov
ins
ins
retf
pop
inc
add
fcmovnu
push
cmp
push
arpl
add
push
addr16
pop
xchg
pop
outs
outs
sti
(bad)
cmp
sbb
in
jge
fistp
push
into
dec
dec
dec
sbb
or
mov
adc
idiv
add
jns
aam
push
dec
or
sbb
push
test
inc
pop
adc
xlat
mov
sahf
je
jecxz
(bad)
std
and
fidivr
jmp
ins
aad
push
rcl
xchg
and
xchg
mov
movs
mov
bound
js
outs
fcom
pop
mov
push
jp
pop
jbe
push
pop
pop
imul
and
fld
xchg
xchg
add
jbe
popf
fisubr
xchg
cmp
or
dec
pop
xchg
xor
jb
inc
push
add
push
push
push
push
push
push
adc
mov
retf
(bad)
out
iret
lahf
scas
test
fcmovnu
cmp
into
push
mov
mov
shl
leave
mov
pop
pop
ja
mov
jns
jbe
jns
icebp
idiv
ss
mov
mov
outs
push
pop
lea
loop
(bad)
fild
icebp
(bad)
mov
rol
inc
mov
xor
jnp
(bad)
mov
gs
cld
retf
adc
xor
repnz
sub
and
dec
xchg
bound
add
xchg
mov
sub
outs
movs
cmc
xchg
mov
in
dec
push
lds
dec
data16
dec
dec
jbe
sahf
clc
clc
mul
psubb
shl
sar
pushf
jbe
clc
push
sub
pop
ins
push
out
pop
out
pop
out
ds
mov
push
add
sub
mov
pop
dec
dec
dec
enter
popa
push
arpl
loope
add
movs
sbb
stos
rcr
mov
fstp
lods
sbb
pop
rol
vpsubsw
aad
mov
sub
sub
xor
cld
xor
dec
sub
shl
push
pop
(bad)
jle
jnp
push
out
mov
jp
jae
aas
cmp
shr
and
popa
jbe
add
pop
rcr
fisubr
adc
gs
mov
jnp
icebp
movs
rcl
adc
cdq
push
cmp
pop
mov
addr16
into
into
mov
rol
retf
mul
adc
ror
(bad)
xchg
xor
lea
jbe
xchg
stos
stos
stos
jmp
out
and
ds
ins
sbb
ss
cwde
(bad)
push
dec
dec
aad
adc
cs
cs
cs
mov
jge
sahf
popf
sahf
sahf
les
(bad)
xchg
lods
push
loope
pop
cmp
aas
test
(bad)
xchg
mov
in
(bad)
xor
(bad)
(bad)
call
sti
ret
fiadd
cmc
push
jle
jnp
popa
outs
ror
sub
inc
cmp
test
pop
xchg
xchg
adc
arpl
ins
xchg
or
or
inc
adc
(bad)
push
test
jp
shl
and
or
add
jbe
mov
cmp
adc
mov
cmps
xchg
xchg
mov
mov
xor
and
sbb
xor
mov
ds
rcl
inc
pop
aaa
loop
rol
in
push
sub
sbb
xchg
and
dec
push
into
into
mov
jmp
ss
mov
cmps
mov
jbe
scas
add
fiadd
loop
clc
fcom
fld
jecxz
push
iret
mov
mov
jmp
jmp
xchg
jmp
adc
ins
xchg
mov
inc
mul
in
int
f2xm1
cmp
outs
out
xchg
xchg
dec
xchg
dec
xchg
js
jns
pop
dec
inc
daa
(bad)
cmp
fdivr
sub
jmp
mov
inc
mov
movs
lods
jns
xor
mov
cmp
je
faddp
jle
xor
cwde
ss
mov
movs
mov
mov
xor
push
sbb
arpl
mov
mov
out
cli
call
inc
inc
inc
pop
sti
sub
cmp
clc
outs
addr16
sbb
mov
shl
pop
pop
(bad)
cmp
push
mov
jecxz
add
mov
mov
(bad)
or
push
loop
add
sar
adc
stos
pop
inc
outs
fs
out
mov
mov
push
aam
inc
in
test
jne
or
xor
xor
cdq
mov
xchg
or
xchg
or
and
sbb
push
mov
sub
or
lock
mov
dec
dec
loop
dec
aaa
call
pop
pop
pop
in
ficom
cmp
cmp
xor
aad
scas
stos
jmp
fs
push
repnz
dec
jl
push
aaa
(bad)
mov
std
cmp
xor
les
out
ins
outs
outs
pop
int
xchg
sbb
mov
cli
hlt
jmp
jmp
mov
adc
sbb
dec
mov
dec
mov
jnp
loop
test
loop
lods
adc
jle
mov
sub
aad
cmp
cmp
push
icebp
rcr
lods
movs
xchg
movs
mov
(bad)
or
(bad)
or
scas
adc
pop
lods
pop
jg
rcl
or
sbb
scas
push
or
fbld
xchg
ins
arpl
arpl
imul
inc
mov
inc
daa
fwait
jno
(bad)
mul
xor
and
test
sbb
add
bound
lock
(bad)
mov
iret
pop
mov
dec
xchg
das
pop
mov
(bad)
sub
loopne
out
lahf
out
in
in
lds
mov
xor
pop
test
outs
jmp
or
add
jl
pop
push
(bad)
sub
xor
pop
and
pop
les
and
xchg
sbb
adc
rcr
and
lea
dec
dec
aaa
fwait
cdq
movs
pop
pop
inc
into
lock
adc
(bad)
fnstcw
sub
mov
inc
fst
xor
bound
imul
mov
fistp
sbb
ja
je
fld
xor
add
lea
aaa
outs
fnstsw
fidivr
loope
ds
cmp
fs
mov
ss
arpl
loope
or
cmps
cmc
mov
test
jno
xchg
pop
lock
dec
iret
aam
clc
inc
mov
dec
xchg
leave
or
adc
int
xchg
jae
push
xor
aad
xor
aad
js
lods
add
xor
or
in
mov
out
add
mov
enter
cmp
scas
lea
ret
fisttp
iret
mov
leave
rol
add
ret
lds
or
aas
js
sbb
(bad)
jo
or
mov
(bad)
neg
outs
inc
loopne
ds
pop
je
mov
or
cmp
sbb
fld
pushf
out
sub
pushf
push
push
jnp
xor
jb
call
scas
pop
test
mov
mov
std
leave
jns
xor
pop
dec
test
fwait
xchg
mov
sar
sub
sub
mov
fistp
cs
mov
and
es
rcr
sbb
push
and
jnp
mov
not
mov
call
aas
jle
icebp
(bad)
pop
cmp
inc
jecxz
outs
test
push
pop
pop
iret
loop
xor
in
mov
aam
aad
stos
sub
in
out
(bad)
and
pop
add
cmp
cmp
js
push
arpl
sub
adc
sbb
shl
jae
cmps
xor
or
ja
xor
out
mov
mov
mov
or
fcmove
cs
add
fwait
aaa
outs
inc
stos
and
add
push
pop
jge
int
(bad)
jmp
mov
mov
inc
pop
fild
lea
mov
adc
dec
mov
pop
mov
jge
ret
mov
jae
nop
int3
aad
adc
lods
mov
cs
dec
pop
popf
mov
test
lods
mov
call
rcl
push
sub
mov
mov
mov
xor
or
(bad)
stos
lods
sub
and
or
cmp
pushf
pushf
lock
xchg
xchg
jne
push
mov
xor
mov
push
and
(bad)
repnz
mov
push
scas
daa
dec
sahf
loopne
xchg
cmp
cli
jmp
enter
jo
loopne
sub
jl
fdiv
jp
cwde
mov
(bad)
jmp
sub
dec
pop
movs
push
mov
sti
test
shl
dec
outs
mov
or
xor
dec
leave
nop
rcr
das
out
fidivr
xor
or
add
aam
sbb
pop
adc
push
push
fwait
sub
shr
mov
sbb
ror
test
dec
mov
scas
adc
push
push
fistp
inc
cmp
in
add
and
(bad)
std
out
jg
das
scas
(bad)
mov
das
mov
lods
push
sahf
dec
popf
add
pop
xor
ins
data16
pop
mov
fild
adc
test
mov
adc
xor
mov
fstp
out
push
push
scas
lods
mov
inc
in
push
inc
stos
inc
inc
mov
ins
push
aam
ins
loope
je
loopne
loope
cmp
mov
shl
push
aam
sbb
sbb
sub
xor
push
and
xor
mov
stc
rcl
(bad)
ficomp
lods
or
movs
adc
mov
jl
pop
loopne
sub
jo
clc
add
enter
sub
jno
(bad)
ja
ret
je
ret
mov
jle
outs
xchg
jno
jo
add
pop
(bad)
cmc
jmp
cmp
cmps
mov
add
mov
leave
jl
fist
cmp
inc
das
xchg
add
jns
pop
mov
push
pusha
dec
mov
enter
sbb
xor
ss
push
mov
xchg
ret
lock
cmc
cmc
pop
xor
xor
lea
lea
push
dec
(bad)
(bad)
pop
rcr
in
in
mov
mov
gs
imul
mov
mov
xor
ror
cld
lahf
repnz
xchg
clc
das
(bad)
sbb
rol
sti
and
fsubr
mov
mov
into
popf
mov
dec
iret
(bad)
aam
mov
inc
stc
loope
xor
cmp
(bad)
(bad)
xor
pop
jae
jecxz
jge
shr
loope
inc
rcl
mov
pmaxub
mov
adc
pop
movs
pop
scas
mov
dec
dec
outs
mov
ins
fs
or
push
stos
sar
cld
push
mov
mov
aad
gs
xor
cs
jae
mov
dec
mov
lods
sbb
inc
call
sbb
or
mov
(bad)
int
mov
in
cmps
mov
and
sub
cmp
xor
dec
mov
pop
pop
cmp
cmovle
push
adc
xor
sbb
test
out
inc
sub
dec
rcl
pop
mov
push
mov
push
movs
mov
sub
pop
pop
cmp
ror
mov
in
add
gs
dec
fsubr
in
sbb
xor
mov
xor
repz
mov
scas
loop
and
aaa
int3
test
pop
and
(bad)
retf
punpckldq
add
mov
pop
mov
pop
outs
lahf
mov
mov
add
iret
pop
mov
cmp
xor
outs
jp
pushf
pop
xchg
or
or
cmc
pop
mov
add
scas
test
call
popf
push
and
jge
xchg
repz
rcr
js
add
mov
or
mov
out
xchg
lds
in
test
nop
ss
xor
push
mov
and
mov
mov
aaa
ja
repnz
add
bound
test
xchg
xchg
stos
in
in
mov
jge
mov
fs
scas
xchg
xor
inc
mov
retf
xor
pop
jnp
xchg
xchg
jb
jb
push
xchg
repz
retf
pop
cmp
mov
in
mov
(bad)
leave
pop
add
sbb
mov
icebp
arpl
mov
pusha
shl
fwait
mov
mov
push
and
jg
push
enter
inc
fsubr
repnz
mov
shl
push
adc
sub
cmp
xchg
xchg
push
push
push
mov
xor
cdq
add
mov
sahf
inc
push
mov
pop
scas
pop
push
(bad)
sbb
sub
push
cmps
(bad)
add
out
in
inc
or
(bad)
imul
mov
dec
into
lock
jno
sub
add
into
pop
ins
ins
adc
rol
bound
ret
or
cmp
movs
(bad)
(bad)
jle
mov
or
hlt
in
loop
cmp
outs
cmc
mov
scas
push
and
rcr
dec
iret
cdq
push
adc
adc
imul
leave
into
into
pop
mov
icebp
mov
gs
mov
(bad)
je
fucomip
push
out
inc
(bad)
jnp
sbb
dec
sti
inc
pop
hlt
inc
or
sub
pop
sub
push
les
adc
jp
mov
(bad)
aam
shl
xor
dec
adc
fiadd
push
lea
adc
sahf
fisub
dec
and
push
xlat
test
mov
sub
test
sub
retf
jg
add
fistp
sbb
adc
test
inc
in
into
dec
cmp
push
push
add
div
in
jmp
call
out
out
out
mov
jnp
mov
pop
mov
or
push
into
lock
push
pop
dec
pop
cmp
pop
jae
push
int
mov
and
and
jg
std
(bad)
int
adc
in
movs
ror
(bad)
dec
and
pop
cs
mov
lods
ins
mov
shl
addr16
pushf
sbb
adc
dec
sub
cs
xchg
jnp
test
mov
out
or
cmp
hlt
xchg
cmp
aaa
popf
loopne
jle
add
and
scas
xchg
xchg
xchg
loop
int
in
retf
mov
pushf
js
jmp
jecxz
jp
or
add
mov
and
cld
int
aaa
xchg
push
sbb
int3
rol
(bad)
jmp
scas
push
pop
call
cmc
(bad)
aas
scas
call
fisub
dec
and
mov
je
hlt
repnz
stos
inc
sub
cs
jle
jle
jno
jge
or
mov
mov
mov
mov
or
sub
lods
jg
rcr
cmps
sbb
xor
(bad)
pop
push
daa
push
aad
mov
sahf
cld
hlt
and
mov
mov
icebp
popa
mov
cmps
dec
pop
and
or
push
mov
or
add
ins
xor
test
js
pop
icebp
pop
dec
sub
mov
mov
jmp
lea
rcl
shl
fwait
nop
nop
add
sub
push
push
push
pop
pop
or
adc
xchg
sub
push
jge
or
adc
fidivr
hlt
repz
mov
outs
or
push
add
loop
movs
jo
mov
jp
jp
adc
jne
xor
aas
cmp
test
icebp
jno
icebp
push
mov
pop
and
adc
pop
or
add
xor
add
xor
sahf
add
mov
test
jle
cli
lea
aaa
xor
es
sub
fs
adc
clc
add
enter
rol
out
inc
and
cmp
test
add
loopne
add
std
test
sbb
and
cmp
xchg
cmp
dec
jg
call
sub
add
xchg
je
les
jno
pop
pop
sub
push
sub
xchg
or
rcl
dec
and
and
and
xchg
jbe
div
loope
(bad)
enter
mov
lods
pop
adc
sbb
pop
pop
lahf
cwde
cwde
mov
ret
mov
adc
shr
test
mov
push
push
test
sqrtps
popa
or
xchg
leave
das
mov
jae
ret
mov
mov
xchg
cmp
in
push
pop
nop
push
adc
mov
cmp
xchg
cmp
adc
mov
mov
ins
adc
mov
push
sub
sub
adc
sbb
add
icebp
pop
aaa
ins
fiadd
or
xchg
ins
test
test
jb
jmp
adc
and
cli
imul
loopne
les
xor
sub
sti
loopne
push
add
sbb
cmp
je
jnp
dec
add
push
xor
test
xchg
xor
adc
xchg
sub
fsub
mov
dec
imul
sbb
mov
in
cmp
sbb
sub
shl
and
ficomp
call
jp
add
xchg
xchg
test
push
mov
je
sbb
mov
fdivr
mov
add
add
mov
pop
push
iret
push
in
es
sub
jp
push
(bad)
cs
ss
movs
jne
or
xchg
inc
mov
and
mov
das
push
adc
push
ret
sub
shl
aam
push
fdivr
mov
test
adc
rcr
sbb
or
sub
add
xor
mov
jl
ret
and
loop
les
cli
sbb
mov
dec
jae
and
cmp
aaa
pop
mov
pop
pop
jns
pop
mov
es
addr16
rcr
push
xchg
(bad)
retf
test
xor
lds
imul
dec
ins
out
push
ficom
add
in
push
jl
bound
cmps
pop
sub
clc
add
jl
fdivr
lock
or
pop
int3
bound
mov
call
dec
rcr
loop
ret
or
pushf
fnstenv
jmp
test
lods
xchg
jne
mov
mov
lods
and
retf
sbb
pop
cdq
lods
inc
es
and
movs
rol
sub
and
and
cmps
inc
mov
pop
jo
sbb
inc
add
sbb
or
lock
xor
sbb
les
mov
lods
pusha
mov
push
int
push
jecxz
mov
adc
fstp
cmp
and
pop
ja
mov
sub
jp
xchg
leave
mov
jmp
mov
retf
stos
in
jne
dec
pop
and
jb
es
popa
mov
dec
or
and
xchg
add
or
add
sbb
popa
popa
dec
dec
or
inc
xchg
ret
sub
retf
mov
mov
push
pop
aaa
(bad)
mov
loope
push
xchg
scas
loopne
jo
pop
add
mov
jbe
mov
mov
jae
mov
dec
pop
popf
jbe
jns
pop
retf
icebp
sub
cdq
ins
fwait
dec
call
nop
imul
es
adc
adc
xor
xchg
enter
xchg
adc
and
sbb
mov
push
add
test
adc
sbb
or
jbe
jg
adc
es
push
mov
pop
sbb
outs
mov
in
sbb
xchg
mul
retf
fs
fwait
cmps
movs
test
sub
call
lds
adc
cmp
jo
les
or
inc
mov
add
add
dec
add
sub
sbb
fcomi
leave
in
std
fild
xor
in
mov
pop
jle
mov
push
mov
in
jns
xchg
retf
in
lea
pop
shl
cmc
jmp
les
push
(bad)
mov
push
retf
cld
pop
xchg
mov
xchg
add
mov
jb
mov
jecxz
mov
(bad)
push
mov
ins
mov
pop
xor
out
xlat
and
mov
sbb
loop
lods
push
push
adc
adc
mov
int
pop
(bad)
hlt
xchg
add
popa
fild
arpl
add
push
push
inc
fild
mov
inc
vcomiss
add
mov
jmp
jle
shr
cwde
adc
and
nop
or
lods
mov
dec
adc
retf
sub
in
jmp
test
jb
jge
jge
dec
or
push
neg
inc
sbb
push
sbb
xchg
cmp
inc
pop
mov
dec
in
in
int3
jae
fild
xor
mov
dec
lods
or
add
push
jae
add
movs
mov
sbb
sbb
adc
xor
xor
adc
imul
das
xor
xor
inc
enter
cmps
jl
fwait
(bad)
push
xlat
outs
add
mov
pop
fwait
scas
adc
mov
retf
je
xchg
xchg
jmp
and
fistp
mov
xlat
mov
xchg
pushf
xchg
xor
jmp
out
out
adc
dec
and
arpl
(bad)
and
and
mov
and
pop
mov
mov
mov
sub
or
out
test
fisubr
mov
in
aas
aam
adc
mov
retf
in
(bad)
fbld
out
rol
jl
ret
xor
xor
sbb
jle
jge
sub
sub
(bad)
cli
cmc
inc
mov
jle
int3
ret
imul
fwait
loope
arpl
or
sub
div
xchg
and
mov
shr
inc
pop
cmps
out
test
jae
adc
push
sub
mov
mov
pushf
ins
adc
adc
(bad)
jmp
xchg
imul
xor
sbb
outs
int
sbb
or
data16
out
lahf
mov
(bad)
mov
push
sbb
popa
pop
repz
push
cwde
stos
aam
das
(bad)
nop
mov
aas
movs
cmps
cwde
dec
sahf
dec
mov
push
adc
or
xchg
mov
sbb
fist
fidivr
fild
sbb
mov
lods
dec
pop
fnstenv
dec
add
stos
idiv
dec
mov
das
gs
dec
jns
enter
and
push
jl
cmp
add
xchg
nop
cwde
lods
jg
shl
loop
push
jmp
mov
call
jecxz
iret
scas
dec
aaa
loop
mov
or
fisub
fisub
fcmovb
movs
mov
inc
push
(bad)
aam
cmp
retf
dec
int
adc
sbb
mov
aas
xor
mov
sti
clc
cmp
addr16
shr
repz
or
ret
ret
and
out
lods
cwde
pop
mov
loope
mov
or
xchg
and
mov
in
int3
fsubr
jno
fnclex
or
adc
ins
sub
fsubr
and
mov
pop
xchg
mov
inc
shl
stos
mov
in
cmp
dec
jb
cmps
gs
pushf
inc
retf
xchg
das
out
int3
xor
call
aam
imul
mov
aas
shr
mov
pop
gs
fisttp
mov
sub
mov
stos
retf
push
xchg
push
dec
sub
cs
ins
push
enter
mov
jnp
inc
mov
jmp
es
cmc
xchg
sbb
or
ret
popa
mov
mov
pop
pop
cmps
sub
daa
and
push
sbb
sub
dec
pop
ficomp
mov
mov
mov
sahf
xchg
jbe
out
sti
loope
cld
inc
inc
lods
pop
mov
stos
movs
xor
adc
inc
ins
dec
pop
xchg
pushf
mov
daa
cmp
and
mov
neg
xlat
jbe
xor
test
not
ins
cmp
repz
into
xor
mov
xor
jnp
je
neg
fstp
sbb
in
xchg
repz
pop
cmp
ret
pop
iret
pop
mov
mov
das
pop
cmp
stc
shr
mov
sahf
imul
mov
mov
scas
popf
mov
scas
lahf
jg
cli
test
test
jl
stos
push
into
jl
inc
inc
mov
push
hlt
inc
xchg
xlat
inc
scas
jle
pop
inc
retf
cwde
std
mov
daa
pop
daa
adc
pop
rol
loopne
pusha
outs
outs
das
xchg
call
lock
iret
mov
rol
ins
dec
xchg
daa
fstp
pop
push
vrsqrtps
rcl
test
ret
inc
lea
dec
retf
inc
pop
cmp
sub
adc
test
rcr
stos
xor
mov
mov
sub
in
and
cmc
mov
imul
(bad)
lods
mov
adc
push
data16
out
ins
sub
test
xor
mov
push
xlat
aad
je
dec
ret
pushf
pushf
(bad)
jne
cmp
jns
xlat
mov
adc
adc
fistp
data16
lods
out
call
(bad)
and
int3
(bad)
push
dec
add
mov
(bad)
sahf
xchg
mov
std
push
shl
push
icebp
push
inc
inc
add
shr
push
bound
popf
dec
clc
daa
xor
rol
nop
xor
cmp
add
std
jns
inc
retf
push
ins
push
push
out
add
mov
ins
(bad)
push
aam
or
mov
fiadd
bound
fiadd
xchg
and
cmp
mul
dec
mov
imul
jnp
cmp
bound
fcomp
jmp
popa
int
ss
iret
dec
fistp
lahf
pop
mov
mov
rol
mov
std
popf
int
pop
jbe
into
inc
pxor
xchg
lahf
cmp
cmc
inc
sub
fdivr
imul
xor
ss
or
inc
dec
xchg
mov
movs
mov
sbb
adc
sbb
dec
mov
lds
inc
data16
dec
add
xchg
pop
xor
fldenv
iret
dec
pop
mov
mov
cmps
mov
sub
jmp
imul
in
aam
retf
jae
and
mov
mov
dec
add
mov
ins
aad
movs
and
xchg
xor
outs
test
jnp
out
mov
push
sub
mov
fs
hlt
shl
fwait
adc
xchg
bound
and
pop
pushf
pop
pop
mov
test
mov
into
test
in
cmp
mov
sbb
jl
pop
fcmovne
jecxz
mov
xor
xor
or
xchg
mov
inc
push
aam
mov
jb
or
jb
and
xor
pop
pop
rcr
sub
cwde
in
bnd
js
aas
arpl
(bad)
mov
rcl
(bad)
jmp
jge
pop
aas
data16
or
int3
lods
add
xchg
daa
pop
dec
inc
das
sti
and
push
sbb
iret
push
je
jnp
mov
(bad)
and
daa
mov
push
push
xor
lods
mov
repz
pop
push
mov
jb
arpl
loop
stos
xchg
(bad)
(bad)
sub
mov
jmp
xor
outs
fisttp
mov
mov
add
sahf
(bad)
call
sbb
fmul
cmp
cmp
jo
adc
fstp
inc
pop
mov
(bad)
out
in
sbb
cs
(bad)
daa
push
je
in
(bad)
js
in
jmp
leave
and
xchg
xchg
sbb
xchg
xchg
movs
lods
cmp
cmps
mov
leave
jns
call
jae
int3
imul
sti
jb
(bad)
mov
jmp
pop
mov
cmp
jg
cmps
mov
in
fcom
sbb
sub
inc
hlt
adc
outs
stc
mov
in
cwde
in
push
ins
inc
mov
push
into
ja
movs
nop
mov
imul
push
push
sub
fisub
or
repnz
mov
mov
push
int
test
ss
dec
cs
push
(bad)
dec
cmp
mov
retf
push
mov
test
jo
je
xlat
rol
jnp
(bad)
(bad)
out
arpl
repz
scas
call
pop
retf
rol
daa
push
lock
mov
or
mov
imul
retf
aas
push
jo
out
adc
jns
movs
mov
adc
push
(bad)
jns
cmp
sar
aad
imul
(bad)
mov
pop
fld
in
movs
cmc
push
push
cmps
inc
in
cli
jle
aam
xchg
lea
test
mov
mov
enter
cmps
jbe
cmps
push
pop
enter
in
push
pop
dec
xor
loop
mov
popa
xor
ret
push
adc
ins
jge
mov
xchg
mov
sub
jae
pop
imul
xor
xchg
rcr
dec
jecxz
aaa
out
enter
mov
xchg
jge
jnp
xchg
leave
in
cmp
test
(bad)
and
mov
push
int3
and
daa
loop
mul
outs
ins
ins
movs
seta
(bad)
call
pop
(bad)
push
shl
ja
mov
fwait
icebp
sub
sbb
push
mov
mov
pop
fs
push
aam
adc
rcl
xor
or
add
pushf
test
es
xchg
ficomp
repnz
lods
in
pop
mov
aam
cwde
mov
call
dec
out
sub
cmps
shl
mov
scas
mov
sbb
mov
test
lds
adc
lea
out
outs
and
mov
adc
and
fdivr
lds
(bad)
std
mov
cmps
pop
neg
sbb
js
retf
scas
mov
xor
push
mov
dec
jge
bound
ret
xor
rcr
fisttp
arpl
sub
addr16
jns
data16
inc
retf
je
mov
xor
dec
aas
aas
aad
cwde
test
jo
xchg
jbe
cmps
jbe
and
sub
aad
ins
stos
add
push
lds
in
push
push
adc
mov
(bad)
aam
sbb
lea
xor
test
popf
ret
pop
xchg
stos
shl
mov
adc
jb
mov
push
inc
push
or
xchg
pushf
push
stos
ins
dec
pop
inc
fisttp
enter
or
popf
fldcw
lds
mov
inc
sbb
cmp
inc
into
mov
repz
pop
pop
ret
cld
aam
xchg
sub
fsub
push
cmp
mov
int3
mov
test
mov
aaa
in
mov
pop
(bad)
out
in
in
movs
out
call
pop
int3
jle
sbb
mov
xor
adc
hlt
pop
rcl
sbb
rcl
push
push
jmp
mov
jbe
sar
popa
mov
xchg
aaa
and
(bad)
(bad)
mov
pop
cmp
in
js
(bad)
out
pop
sbb
push
fstp
sbb
jge
xchg
nop
gs
inc
xchg
adc
ins
cmc
retf
mov
pop
mov
movs
les
gs
test
fist
cmp
mov
enter
out
fist
mov
sbb
test
jno
jnp
int
mov
sub
mov
jo
cmp
fistp
inc
aaa
nop
jle
mov
mov
hlt
pusha
mov
test
inc
inc
icebp
rol
in
push
pop
or
cmps
int3
add
shl
mov
bound
stos
sahf
xchg
jg
sub
mov
inc
add
push
mov
jle
adc
loopne
shl
outs
adc
push
js
push
(bad)
mov
sbb
and
sub
les
popa
mov
(bad)
mov
dec
pop
adc
pop
pop
xchg
das
(bad)
cwde
mov
jb
cmp
test
lods
pop
mov
mov
daa
daa
lods
fst
sub
xchg
popf
std
mov
push
xchg
sub
xchg
inc
out
mov
neg
cmp
lods
call
pop
pop
jl
repz
lahf
pop
lds
inc
or
jnp
cmp
not
test
push
ds
in
sub
and
jmp
scas
ret
xchg
out
fnstsw
cli
pop
fsubp
aaa
cdq
std
sahf
mov
mov
les
mov
inc
push
xchg
out
adc
mov
push
push
xor
sbb
out
mov
inc
cmps
adc
xchg
popa
dec
jns
or
imul
scas
pop
push
mov
push
xchg
adc
loop
outs
into
fist
mov
in
cli
fiadd
jmp
cmc
mov
sbb
push
pop
mov
pop
sub
mov
sbb
mov
pushf
adc
loop
mov
(bad)
out
loop
add
mov
setg
aaa
xchg
mov
jecxz
mov
xor
lds
push
test
movs
push
ds
pop
mov
and
push
sub
fld
out
mov
push
jo
loop
shl
xor
retf
out
pop
mov
call
xchg
scas
mov
rcpps
adc
xchg
mov
add
xor
clc
movs
push
xchg
gs
push
ins
and
sbb
scas
fs
imul
cmps
rcr
jmp
fs
and
and
sbb
dec
dec
mov
popa
pop
pop
pop
popa
popa
and
je
inc
inc
cmps
rol
repz
mov
mov
dec
stc
add
jge
pop
movs
test
pop
out
int
and
inc
nop
addr16
cmp
imul
lods
test
pop
icebp
and
mov
(bad)
fdiv
xchg
or
jno
popf
xor
or
js
loop
dec
xchg
int3
mov
xor
in
call
das
pop
mov
and
outs
(bad)
dec
retf
movs
scas
retf
int3
fdiv
retf
and
pusha
lock
fist
rcl
push
mov
sbb
add
pop
and
or
(bad)
pop
iret
sahf
(bad)
and
stc
lds
mov
and
mov
mov
pop
cmps
push
inc
lds
and
jo
pop
pop
sbb
cmp
sahf
mov
ret
push
xor
rol
xor
jmp
mov
xor
jb
push
cmp
mov
dec
arpl
arpl
test
loop
call
push
and
or
out
xor
xchg
mov
mov
push
sub
sub
test
mov
sub
adc
leave
mov
push
inc
push
repnz
mov
fmul
hlt
mov
mov
movs
vpmulhw
xor
repnz
or
ret
xchg
test
adc
sub
cli
add
sub
xchg
xor
idiv
sbb
push
sub
into
popf
fwait
cdq
cdq
fldcw
pop
sti
mov
push
mov
sub
test
mov
jmp
xchg
stos
adc
mov
scas
sbb
(bad)
fwait
ret
sub
sbb
jmp
cdq
xor
dec
enter
jo
movs
mov
mov
test
in
movs
jno
xacquire
dec
pop
fwait
xchg
push
mov
imul
fmul
test
sub
in
pushf
call
mov
dec
shl
and
aad
xchg
repz
test
sar
dec
mov
fs
loop
adc
mov
jo
cmps
add
xchg
sub
lds
cmp
sub
ror
shr
or
mov
mov
xor
rcl
in
xor
xchg
pop
aaa
ins
cwde
fst
mov
outs
loope
sbb
test
or
push
adc
push
lock
xchg
into
mov
stos
adc
pop
mov
movs
sbb
inc
and
and
and
out
fwait
or
xchg
dec
mov
sub
scas
scas
fcomp
push
scas
das
ins
fiadd
mov
mov
mov
inc
mov
jmp
cdq
ror
mov
sbb
mov
adc
mov
mov
rcl
inc
mov
cdq
xor
iret
lahf
mov
mov
cld
lock
cli
and
cmp
xor
mov
jae
jp
xor
jle
xchg
loop
(bad)
ins
dec
lock
add
subps
aas
nop
fdiv
dec
test
imul
nop
enter
xchg
repz
adc
ss
xchg
inc
dec
mov
mov
cmp
xchg
pushf
test
pop
fdecstp
sub
adc
sbb
repnz
inc
retf
sub
shl
out
pop
in
mov
inc
mov
mov
fs
cmp
inc
in
xor
pop
add
into
test
or
push
pop
sbb
icebp
jecxz
adc
mov
pop
mov
fidivr
fidiv
int
hlt
and
or
jmp
cli
sub
(bad)
lock
xchg
sbb
pop
iret
vpcmpgtd
idiv
pop
xor
cmp
pop
or
lock
lds
loop
dec
mov
mov
xor
jp
mov
xchg
mov
js
shl
push
sub
hlt
bound
vcvtpd2dq
xchg
pop
push
nop
pop
pop
or
cmps
push
xchg
gs
push
out
push
mov
int3
push
mov
mov
add
outs
test
mov
bound
adc
das
push
cs
shr
ret
jg
mov
hlt
dec
out
mov
xchg
lock
loop
xor
loop
retf
jp
mov
sub
or
es
cmp
test
sub
xchg
movs
mov
mov
nop
loopne
repz
out
les
cli
popf
add
cs
fwait
mov
ss
inc
inc
ret
adc
repz
or
dec
adc
retf
aaa
outs
pop
or
int
pop
xchg
popf
sbb
(bad)
out
cld
movs
xchg
ret
lds
mov
into
lods
scas
inc
push
into
imul
call
retf
lods
cmp
or
mov
int
rcr
inc
xchg
or
movs
adc
loop
or
out
add
retf
das
xchg
add
into
test
or
mov
(bad)
pop
pop
mov
dec
(bad)
cld
dec
stos
cwde
mov
push
in
sub
pop
dec
les
mov
ja
hlt
cmp
enter
into
mov
pusha
int
call
scas
pop
push
or
mov
aaa
inc
movs
and
dec
dec
pop
xchg
sahf
mov
xor
jbe
pop
outs
jbe
jle
cmps
ret
jno
mul
mov
ins
adc
(bad)
xchg
jmp
fwait
sbb
in
int
sbb
pop
xor
data16
fbstp
and
loope
out
push
std
pop
mov
hlt
sti
out
mov
lock
test
les
outs
mov
mov
sbb
repz
(bad)
shl
pop
retf
xchg
mov
sbb
fs
test
xchg
repz
xlat
inc
mov
fnstenv
mov
xchg
mov
push
es
sub
sub
mov
adc
mov
imul
lea
mov
(bad)
pop
sub
enter
sub
lods
jne
mov
jmp
and
adc
aaa
push
mov
push
mov
or
outs
dec
xor
mov
(bad)
in
(bad)
dec
sub
adc
sub
and
dec
push
xor
lods
mov
cwde
mov
call
(bad)
lods
pop
mov
lods
push
mov
inc
outs
ficomp
cdq
mov
test
call
leave
fadd
inc
push
jno
mov
mov
repz
mov
enter
enter
pop
xor
cmp
cmp
xchg
ja
ins
arpl
(bad)
mov
popa
mov
jg
jne
and
or
nop
push
jno
jmp
sub
lea
xchg
ins
dec
mov
pushf
mov
jno
shl
dec
jno
pop
push
mov
jmp
imul
ins
int
iret
mov
test
aaa
pop
pop
and
daa
ins
das
dec
sub
inc
movs
xchg
xlat
aad
cmps
push
xchg
cmps
push
rcl
mov
jne
cmp
cmp
xchg
sbb
mov
pop
mov
(bad)
and
dec
(bad)
into
dec
mov
fdiv
lods
hlt
mov
sbb
cmpxchg
test
adc
and
movs
(bad)
mov
les
add
cmps
push
in
push
push
cli
call
std
or
dec
daa
aaa
sub
cmps
pop
test
adc
mov
in
fld
in
fld
fcom
mov
adc
add
cmp
mov
out
add
cmps
push
push
mov
(bad)
sti
jp
movs
push
cwde
mov
inc
and
out
jne
mov
mov
mov
mov
inc
and
test
movs
mov
(bad)
shl
and
jb
add
jg
call
add
sti
cli
test
iret
jo
mov
adc
mov
push
hlt
stos
mov
push
hlt
out
mov
(bad)
out
mov
pop
shr
sti
inc
cmp
sbb
sub
add
add
dec
inc
scas
inc
pusha
or
int3
add
arpl
jo
imul
or
and
outs
je
ins
gs
je
and
gs
jae
and
je
ja
ins
ins
and
and
jo
popa
arpl
and
je
and
and
jo
imul
daa
jae
popa
jae
gs
bound
imul
je
outs
outs
cs
je
ins
imul
and
jo
imul
daa
jae
popa
jae
gs
bound
imul
je
outs
outs
and
and
and
jo
imul
and
outs
and
and
outs
push
arpl
gs
outs
gs
sub
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
daa
add
add
or
or
add
or
add
add
add
add
or
add
add
stc
xchg
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
leave
dec
inc
inc
push
js
in
pop
jg
adc
sahf
lods
inc
push
sub
sub
adc
xor
inc
xchg
adc
cmp
dec
nop
idiv
inc
inc
test
adc
add
pop
out
retw
cdq
jmp
jge
ins
mov
xor
jle
out
jnp
fwait
cmp
sbb
icebp
dec
xchg
aaa
(bad)
std
(bad)
in
(bad)
xor
jge
jno
xor
cmps
leave
cs
xchg
clc
dec
mov
sub
and
push
add
and
push
sub
xchg
sbb
jb
fnstcw
out
adc
mov
in
addr16
adc
jp
mov
dec
div
inc
xor
es
sub
ja
outs
push
push
lods
adc
(bad)
rcr
in
fdivr
adc
mov
mov
pop
cmps
cld
mov
add
aad
fdivr
repz
mov
mov
mov
push
mov
mov
ror
je
mov
out
out
mov
rcr
mov
sub
jmp
jle
mov
mov
jns
aad
inc
adc
xchg
add
push
cmp
mov
ret
inc
inc
fdivr
scas
aad
and
icebp
je
mov
(bad)
mov
call
loopne
sti
aad
sub
dec
cmp
mov
lock
sbb
sbb
call
mov
xchg
push
push
xor
lds
arpl
push
cwde
in
xlat
mov
or
mov
push
xor
les
cwde
dec
sub
cmc
jp
fistp
call
out
and
pushf
add
sub
push
fist
add
and
inc
test
sub
xchg
pusha
dec
sub
ja
in
cwde
cmp
into
sbb
inc
sbb
es
(bad)
jne
pop
mov
fild
xchg
sbb
stc
fsubr
fs
arpl
adc
jno
lds
or
dec
add
push
sub
sub
add
mul
scas
push
bound
ret
pop
call
jmp
rcl
inc
inc
or
xchg
(bad)
pop
rcl
ret
sbb
xchg
push
(bad)
lock
cmp
pop
mov
test
test
inc
xor
mov
add
pop
push
retf
jmp
es
leave
adc
imul
fwait
pop
pop
mov
cwde
mov
xchg
xor
dec
jmp
pusha
call
cld
call
clc
stc
adc
xlat
dec
daa
mov
sbb
mov
sti
sbb
pushf
sub
push
outs
add
fisubr
popa
popa
sbb
mov
xor
push
xchg
add
jge
mov
lods
add
out
fld
nop
mov
and
rol
pop
xchg
and
push
push
stos
cmp
movs
mov
addr16
out
mov
test
dec
mov
push
lods
add
mov
cmp
push
sysenter
xor
xchg
pop
icebp
xchg
add
pushf
out
loope
inc
outs
mov
cmp
inc
adc
aam
xchg
mov
jb
rcl
mov
icebp
ins
push
xor
cmps
dec
(bad)
loopne
mov
mov
std
jge
aad
mov
ja
cdq
add
add
call
or
cmps
fadd
test
jle
xchg
div
(bad)
xchg
test
fimul
xchg
push
add
call
jno
test
add
mov
fnstcw
add
add
dec
inc
dec
inc
scas
inc
pusha
sub
add
mov
inc
or
add
or
add
add
add
add
or
add
add
stc
xchg
add
dec
inc
inc
push
js
in
call
jg
repz
sti
mul
pop
push
pop
jno
xchg
and
mov
rol
cmp
call
leave
mov
inc
jbe
(bad)
and
sub
mov
test
test
ss
nop
or
push
xchg
pop
and
push
fadd
pop
mov
jge
sti
int
xor
movs
push
pusha
pop
adc
loop
jmp
(bad)
stc
jg
ja
pop
adc
mov
jmp
shr
fist
and
and
jle
sti
(bad)
mov
inc
idiv
fistp
cli
psadbw
imul
nop
(bad)
pop
std
pop
movs
aas
sub
xor
in
cmp
jg
cmps
inc
outs
(bad)
dec
cmc
(bad)
xor
(bad)
mov
mov
addr16
or
jae
sub
push
dec
outs
out
je
xchg
jns
mov
loope
int3
jne
data16
shr
rcl
inc
jp
mov
add
sbb
shr
ret
cli
(bad)
in
mov
jns
ins
gs
das
sti
fldcw
mov
fldcw
add
add
inc
inc
sub
jl
lahf
mov
or
add
test
sbb
push
inc
hlt
adc
hlt
adc
xor
cmp
add
jae
fs
sub
mov
sub
dec
(bad)
arpl
push
sub
or
test
leave
or
lahf
mov
test
inc
mov
iret
or
div
xor
(bad)
and
retf
push
mov
add
or
dec
retf
push
mov
repnz
add
scas
add
pop
and
(bad)
aad
test
sub
add
xor
ja
inc
scas
jl
push
lods
mov
mov
adc
push
xor
adc
xchg
or
sbb
mov
or
xor
xchg
mov
pusha
sbb
push
pop
inc
xlat
gs
pusha
call
cmps
imul
xor
sub
js
cld
jl
lods
add
icebp
or
push
rol
mov
(bad)
or
test
cmp
jecxz
test
mov
cmp
xchg
das
ret
aad
cmps
ds
dec
and
movs
add
mov
jp
sbb
mov
cmp
test
adc
mov
push
cs
cmp
test
xchg
pop
es
push
cmp
mov
push
out
leave
pop
pop
stc
xor
out
sahf
xor
or
cmp
pop
and
jmp
sahf
repnz
les
nop
dec
cmps
imul
dec
fmul
jb
lahf
xor
inc
adc
lea
jnp
mov
mov
xchg
push
add
push
pop
or
scas
pop
or
dec
jge
stos
push
sti
fst
xor
or
inc
stos
and
sub
test
scas
popa
arpl
lea
sub
jge
mov
pop
dec
cmps
dec
inc
inc
mov
fdivr
imul
hlt
mov
scas
mov
add
push
push
or
rcr
int3
in
into
ins
jecxz
pop
xor
imul
push
inc
cmps
cmps
mov
sbb
(bad)
(bad)
imul
add
cmp
mov
mov
and
call
inc
jg
aam
(bad)
cmp
pop
mov
cmc
adc
dec
xchg
sbb
in
movs
scas
out
push
cmp
fsubr
ror
call
sbb
or
int
(bad)
repnz
test
movs
gs
jle
mov
dec
ja
push
pop
dec
jmp
(bad)
call
jle
push
fsubr
mov
dec
sub
movs
sub
adc
jmp
push
out
jp
cdq
movs
push
push
or
jl
test
pop
jne
xlat
mov
mov
inc
enter
mov
cwde
neg
(bad)
outs
push
icebp
xlat
sub
mov
mov
pop
sbb
imul
sbb
jmp
imul
sbb
jmp
mov
dec
fdivr
jns
lock
in
mov
push
inc
loop
or
bound
inc
data16
inc
jno
out
sub
mov
sub
inc
dec
cdq
ror
das
imul
outs
aas
mov
int
mov
or
jnp
fdivr
shl
shr
out
mov
call
sbb
hlt
push
fcmovu
mov
neg
cld
in
fild
into
ja
sub
xor
mov
jae
jl
nop
clc
cmps
or
adc
and
sbb
outs
sub
loopne
imul
scas
sti
fwait
jg
pop
(bad)
sub
cmp
cwde
or
test
ret
or
lahf
fcomi
shr
xchg
clc
stos
fld
imul
and
xchg
dec
nop
xor
je
sub
sbb
into
pop
cld
xchg
mov
cld
rol
adc
adc
loope
xchg
shr
dec
ins
add
mul
rol
ss
mov
adc
sub
jge
push
xor
dec
and
adc
and
in
cmp
out
out
push
cmps
inc
out
std
fst
imul
inc
cmovp
dec
(bad)
mov
les
popa
nop
dec
movs
dec
data16
jg
mov
lock
mov
ins
loopne
aad
mov
out
idiv
cs
fdiv
cmps
or
add
pusha
adc
loop
dec
inc
(bad)
push
div
lahf
(bad)
dec
and
cmp
add
imul
mov
sub
shl
adc
or
jmp
sub
xchg
loope
xchg
cmps
sub
je
fsubr
jg
pushf
pop
pop
and
mov
xchg
or
push
out
mov
push
add
cmps
or
add
sbb
retf
in
pop
into
je
ins
sbb
xchg
aaa
add
push
xchg
push
dec
(bad)
retf
inc
jmp
scas
div
cmc
mov
(bad)
out
jge
mov
mov
leave
scas
pusha
fdivr
(bad)
hlt
jmp
ret
jecxz
cmp
inc
dec
pop
dec
pop
jae
mov
jmp
mov
aas
dec
dec
movs
xchg
sbb
jp
pop
mov
pop
and
dec
sbb
inc
mov
push
lods
inc
ss
mov
fadd
pop
sub
jge
xor
ins
sbb
or
popa
outs
outs
mov
pop
jle
push
imul
test
dec
popa
lds
movs
dec
xchg
icebp
cmps
es
fadd
cs
mov
sbb
repz
ror
enter
inc
mov
retf
sub
pop
inc
dec
movs
lock
mov
jb
inc
or
inc
cmps
jbe
sti
xor
or
loop
add
dec
out
arpl
out
mov
ds
loopne
ret
dec
idiv
(bad)
div
jg
mov
add
out
sbb
mov
out
loopne
test
stos
fs
pushf
jp
adc
loop
dec
sahf
jns
sbb
out
xor
es
xchg
test
add
outs
mov
es
(bad)
bound
cmp
add
sahf
aaa
test
out
jg
mov
fistp
out
sbb
es
sub
js
(bad)
loop
fild
push
das
mov
aaa
push
icebp
fsub
xbegin
mov
xchg
adc
push
mov
shl
cli
xor
add
cmp
aam
das
shl
cmc
scas
xchg
push
jecxz
sbb
jns
int3
or
push
clc
rcl
pop
mov
lahf
add
add
loopne
inc
mov
into
or
or
fwait
inc
repz
fdiv
test
xchg
(bad)
cmc
mov
popf
iret
outs
fisubr
cli
push
sahf
push
mov
xor
adc
xlat
xlat
push
jge
stos
ja
jnp
out
retf
mov
add
cli
or
mov
xchg
inc
inc
and
test
and
sub
fdivr
mov
inc
lahf
cmp
fwait
arpl
mov
or
rcl
scas
hlt
ja
leave
movs
or
cwde
stos
btc
jnp
pop
aas
out
fild
and
xor
sbb
fwait
lds
dec
xchg
xor
fmul
cdq
xor
fadd
es
fist
movs
dec
inc
daa
es
and
jl
ins
pusha
inc
add
push
sbb
icebp
retf
pop
jmp
jmp
adc
popa
(bad)
ret
movs
fist
fmul
pusha
adc
sar
call
loope
xor
pop
mov
mov
or
das
cmovae
push
inc
and
pop
jle
jnp
adc
sub
arpl
push
das
cmps
jmp
or
pop
loopne
xor
out
lds
or
cmc
outs
sub
sub
add
fnstcw
sub
inc
ret
sub
loopne
or
aas
inc
sbb
fstp
fucom
mov
add
push
mov
add
mov
rcr
in
mov
(bad)
jle
outs
mov
dec
fidiv
cmp
add
sub
dec
dec
mov
cmp
xor
sub
mov
sbb
dec
mov
xor
jp
shr
mov
mov
dec
dec
retf
dec
icebp
mov
mov
loop
xchg
dec
or
out
mov
push
shr
add
add
sbb
je
xchg
mov
cdq
xor
sbb
xlat
(bad)
lods
mov
sbb
loopne
cwde
stos
or
pop
or
repz
sub
push
add
out
cld
mov
outs
xor
cs
inc
loop
imul
and
lock
push
aas
pop
mov
retf
mov
int3
mov
out
jge
adc
lea
jb
mov
mov
mov
idiv
cli
scas
ror
(bad)
mov
(bad)
mov
into
pop
mov
jb
in
out
out
fsubr
mov
adc
add
add
adc
mov
jns
pop
mov
jmp
std
out
mov
rol
jb
mov
arpl
call
aaa
aas
pop
jle
movs
xchg
sub
xchg
mov
pop
mov
xor
or
pusha
out
inc
movs
fs
lods
aaa
fisttp
push
or
sar
adc
loope
in
cmp
mov
inc
ret
mov
push
mov
mov
call
push
jge
mov
(bad)
outs
imul
or
xlat
(bad)
mov
loop
mov
sahf
sbb
jno
cmp
pop
mov
adc
out
loope
mov
dec
hlt
arpl
(bad)
add
(bad)
mov
sub
jp
in
mov
cmp
sub
pop
or
mov
jmp
(bad)
arpl
xor
sub
stos
stos
mov
out
(bad)
test
test
xchg
xchg
loope
mov
repnz
adc
cmp
loopne
hlt
cmps
sub
sbb
inc
push
jbe
(bad)
into
test
sar
(bad)
jb
jb
jns
test
pusha
iret
stc
push
das
mov
jbe
push
mov
push
add
add
add
mov
xchg
jmp
or
sub
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
