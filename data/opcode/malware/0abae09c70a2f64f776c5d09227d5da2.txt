rcl
add
push
sbb
dec
add
push
mov
pop
(bad)
xchg
lahf
lea
xor
xchg
int
out
(bad)
or
mov
jle
add
push
adc
fsub
js
ja
mov
mov
cmp
mov
jnp
cmp
int
or
sbb
dec
repnz
jae
sbb
xchg
pushf
jl
adc
jnp
or
jp
out
jo
sub
cmps
popa
add
mov
sub
push
jae
cmp
cmc
mov
cs
popa
cmp
inc
mov
push
and
push
push
out
je
mov
test
pop
pop
and
loop
or
arpl
inc
adc
mov
les
xchg
or
icebp
leave
mov
shl
xlat
out
in
mov
sub
sahf
inc
das
ja
nop
jo
dec
xor
in
test
retf
inc
xor
jl
xlat
repnz
in
adc
mov
jae
add
adc
lahf
pop
mov
movs
mov
xor
jecxz
or
das
out
call
xor
shl
and
add
cli
or
popf
jae
rol
popa
into
out
test
mov
cmps
(bad)
push
pop
mov
fwait
and
sub
sbb
and
(bad)
jle
jmp
add
and
push
sahf
mov
xor
in
push
test
mov
gs
add
mov
test
dec
mov
nop
lahf
dec
inc
adc
push
sar
mov
and
mov
or
push
push
loop
imul
mov
out
cs
inc
es
in
call
retf
push
shl
aad
es
fdiv
mov
jmp
pop
sub
push
aam
fsub
pop
dec
push
or
iret
test
pop
sub
mov
in
dec
xor
ins
jge
jbe
mov
jno
scas
jg
and
nop
adc
pop
push
cs
in
push
fdivr
sub
mov
jl
jbe
mov
xchg
sub
(bad)
arpl
xlat
neg
adc
(bad)
sbb
repz
and
into
loopne
push
xchg
repnz
outs
mov
push
sbb
inc
pushf
js
shl
gs
cs
dec
fdivr
bnd
fs
cmps
sub
pusha
jae
push
inc
xchg
ss
test
adc
aad
adc
test
outs
shr
cmc
mov
dec
sub
pop
mov
and
jmp
mov
dec
jo
push
mov
ficom
xor
dec
fld
or
xchg
jg
test
push
and
outs
pop
addr16
xchg
cmps
icebp
popf
push
xlat
retf
lock
mov
fdivp
sub
pop
imul
leave
mov
ror
call
js
in
scas
mov
pop
icebp
inc
call
inc
sub
cwde
and
call
(bad)
xchg
or
nop
and
test
fst
jl
push
xrelease
rol
mov
loopne
mov
repnz
aas
add
ret
and
stos
cmp
aad
hlt
jnp
xchg
iret
jg
lahf
xor
mov
icebp
jle
xor
jg
inc
push
mov
adc
push
dec
xchg
pop
xchg
push
xchg
out
(bad)
xor
stc
retf
fnstcw
xor
pop
dec
bound
sti
push
fnstenv
adc
xchg
iret
in
adc
jo
movs
nop
sub
jbe
js
rcr
xchg
std
movs
out
das
jl
pop
and
cmc
mov
cmp
shl
mov
je
or
(bad)
loop
retf
pop
cmp
(bad)
idiv
js
dec
pop
lods
xchg
adc
aad
enter
mov
dec
fstp
mov
sar
or
jle
test
out
addr16
in
dec
dec
push
jecxz
pop
das
pop
adc
sbb
scas
aam
inc
ret
inc
mov
mov
pop
mov
inc
pop
cmc
cdq
cmp
retf
push
sar
daa
push
fild
jp
dec
pop
sub
push
add
clc
(bad)
in
stos
(bad)
pushf
arpl
jmp
jecxz
jns
sub
jmp
adc
or
cli
mov
sub
ror
cwde
mov
mov
hlt
fbstp
xor
lock
stos
ja
scas
mov
test
call
sub
jmp
scas
push
xor
sahf
xchg
scas
and
mov
pop
and
sub
dec
icebp
push
loop
jne
lock
imul
mov
mov
jmp
(bad)
nop
pusha
xchg
dec
test
or
retf
jo
fcmovne
sbb
out
add
call
xor
push
fcmovnb
mov
mov
pop
es
hlt
dec
adc
or
imul
test
inc
cmp
test
jmp
push
jecxz
rcl
jg
and
imul
xor
push
int3
rol
cmc
fild
pushf
push
push
lods
push
cmp
and
addr16
out
lea
pusha
daa
(bad)
push
mov
test
push
mov
jg
mov
popf
mov
sti
add
ss
std
and
repnz
into
inc
fwait
push
nop
cmp
xchg
repnz
inc
adc
pop
and
test
adc
stc
sbb
mov
jle
iret
out
dec
call
shl
xchg
dec
outs
add
lds
es
adc
xchg
push
dec
mov
out
aam
iret
movs
prefetch
outs
jns
out
sbb
aaa
addr16
out
cmps
inc
sub
(bad)
(bad)
les
adc
cmova
loope
xor
cmp
jg
repnz
sbb
lea
imul
popa
or
frstor
mov
push
aaa
addr16
loop
cmp
adc
pop
jecxz
dec
push
xor
adc
jg
cmp
stos
xchg
bound
mov
xchg
xor
sbb
pop
fidivr
sbb
rol
inc
or
jno
dec
adc
adc
fs
dec
xor
jne
dec
lock
das
push
imul
mov
mov
sub
ret
jne
retf
sti
add
cmp
pop
(bad)
pop
(bad)
adc
outs
and
or
add
lds
pop
adc
retf
cmc
mov
jo
jno
jge
les
test
jo
call
into
test
sbb
cmps
std
push
loope
fisub
sub
data16
in
adc
jno
mov
jb
enter
jmp
repnz
in
add
or
(bad)
enter
lods
rol
mov
xor
inc
xor
mov
adc
shl
aad
cmp
xchg
cmps
test
xor
mov
retf
repnz
mov
int3
jecxz
call
jmp
scas
xchg
add
xor
or
jbe
adc
mov
or
(bad)
out
ins
fld
xchg
dec
cmp
lock
in
mov
mov
jmp
int3
add
loopne
rcl
aam
dec
nop
gs
out
and
push
test
xchg
push
mov
sbb
retf
inc
test
and
lahf
jns
xchg
sti
bnd
hlt
xchg
push
jbe
js
adc
dec
movs
ret
in
inc
inc
xchg
pop
ret
push
mov
sbb
mov
sbb
xchg
std
push
push
sbb
ret
add
pop
test
push
adc
and
out
pop
retf
xchg
xchg
xchg
sbb
jno
mov
push
aaa
rcr
adc
inc
test
jecxz
mov
or
popf
std
mov
repnz
xlat
xchg
jmp
mov
jne
sti
mov
loop
mov
or
retf
mov
not
jl
xchg
xchg
cmp
mov
mov
add
pop
cmc
sbb
and
in
cmc
test
xchg
retf
adc
popa
cmc
(bad)
xor
xchg
into
rcr
cmp
xlat
inc
jno
adc
push
imul
cs
sub
xchg
js
dec
mov
pop
stos
hlt
repz
fld
scas
adc
jle
push
(bad)
cmp
fcomip
into
(bad)
imul
aaa
in
mov
retf
xchg
ins
test
cmps
loope
sti
add
dec
fidivr
mov
cmp
pop
push
mov
in
fsub
xor
xor
add
repz
movs
aaa
xchg
cmovle
lock
fldcw
xor
jmp
adc
popa
vhsubpd
sbb
je
jo
sbb
push
inc
xor
jmp
das
icebp
dec
cmp
jmp
pop
mov
js
and
js
add
out
or
nop
pop
cmps
int
fst
cmp
push
sbb
dec
xchg
pusha
rep
jnp
mov
jl
mov
hlt
dec
push
xchg
sub
jge
xchg
cmp
fbld
sbb
xchg
push
cld
jle
sbb
lea
inc
push
cdq
imul
scas
pop
jbe
call
and
push
mov
add
pop
mov
inc
in
sub
es
xchg
shl
add
inc
aam
mov
sti
inc
scas
mov
mov
shl
in
cs
xor
xor
cmp
xor
dec
mov
mov
mov
sub
mov
pop
cmp
and
out
mov
aaa
xlat
aaa
(bad)
sbb
dec
cli
mov
in
mov
aad
push
fild
xchg
pop
sbb
mov
and
into
outs
stos
call
jno
adc
mov
mov
dec
xor
repnz
cmp
sahf
sub
sub
test
adc
push
and
int3
mov
or
cli
push
xchg
loop
or
ficomp
in
mov
mov
jno
sar
cmc
sbb
push
out
mov
leave
or
fcomip
fwait
cmc
cmps
(bad)
mov
sbb
inc
or
pop
xor
ins
pusha
cwde
mov
scas
inc
lock
add
lea
mov
cmp
inc
dec
outs
int3
iret
jmp
out
sbb
sub
mov
xchg
mov
dec
push
lods
stc
je
xor
cdq
mul
test
nop
into
inc
inc
or
outs
push
jnp
popa
in
cmps
sbb
lods
dec
sub
adc
cmp
es
mov
gs
in
cld
cmp
pop
xor
sub
push
pop
mov
mov
ret
mov
lds
nop
iret
js
mov
push
fwait
inc
js
mov
in
mov
in
aam
retf
inc
(bad)
movs
xor
add
cmp
pushf
mov
adc
add
and
fsubr
xor
sbb
jmp
(bad)
cli
or
(bad)
(bad)
cld
pop
jl
cmps
cmc
sub
inc
sub
je
jecxz
movs
adc
out
dec
jnp
or
(bad)
lods
jp
cdq
das
test
test
xchg
cwde
or
or
fnstsw
loopne
sti
scas
cmc
in
adc
and
ds
and
je
call
and
mul
jo
pop
add
ret
sub
mov
test
fidivr
push
leave
inc
push
push
adc
mov
mov
mov
or
push
dec
dec
sub
js
jmp
repz
add
or
call
push
jmp
mov
cld
jl
icebp
xor
inc
fstp
pusha
pop
rcr
mov
mov
xor
leave
inc
xchg
mov
inc
mov
push
adc
push
mov
sti
ss
adc
adc
push
cdq
push
fidivr
and
or
add
hlt
aad
scas
out
(bad)
sbb
dec
jbe
adc
cdq
call
xchg
cmps
jg
jmp
dec
pop
xor
push
dec
add
lahf
lock
mov
dec
dec
pop
mov
mov
pop
sub
xchg
(bad)
icebp
in
mov
inc
xor
adc
cmp
push
ss
shl
pop
iret
cdq
cmp
dec
aad
pop
jg
fisubr
sub
jmp
pop
fsub
dec
cmps
mov
inc
(bad)
mov
sbb
xor
sub
ss
ds
ficom
sbb
and
in
pop
movs
(bad)
jo
push
xor
push
fld
aad
into
in
mov
outs
pop
sbb
retf
mov
xlat
push
int
mov
fcomp
aad
mov
jnp
pop
dec
pop
nop
inc
in
xor
rep
(bad)
or
inc
and
cmp
dec
rcl
sbb
inc
imul
sbb
ret
inc
out
xor
ja
xchg
in
jecxz
jg
xlat
fadd
stos
add
daa
(bad)
add
je
jg
or
retf
cmp
cmp
mov
inc
inc
mov
xor
stos
outs
data16
cmps
jl
push
test
mov
mov
mov
scas
int3
add
jno
adc
out
add
int3
adc
imul
pop
pop
outs
out
idiv
inc
mov
cld
inc
pushf
je
stos
cwde
aas
fwait
aaa
xor
inc
mov
add
pop
pop
mov
popf
sbb
pusha
and
add
sahf
outs
add
cmp
repz
enter
sar
fild
arpl
cwde
nop
movs
xchg
fimul
stos
cmps
shl
icebp
fist
std
jge
mov
scas
adc
cdq
pop
push
mov
loope
sub
leave
mov
add
ret
and
imul
std
fldcw
pop
push
mov
pushf
or
pusha
cmc
test
xchg
mov
lds
xlat
inc
out
add
aam
xchg
jb
sub
jo
push
fmul
mov
inc
gs
int
hlt
inc
add
mov
lahf
aam
xchg
les
test
iret
mov
inc
cmp
rcl
js
shl
sbb
(bad)
push
movs
xchg
cmp
pop
aas
sub
sub
jne
into
div
sar
xchg
cmps
dec
lahf
ins
fldcw
inc
xchg
mov
popa
mov
lea
imul
sub
sti
jmp
(bad)
xchg
test
popa
inc
and
test
fdiv
into
das
jg
cmp
aas
push
and
mov
inc
test
mov
or
and
xor
inc
xlat
(bad)
cli
pop
movs
test
mov
mov
cmp
shr
xor
cmps
bound
push
cmp
retf
in
repz
mov
mov
cmp
push
dec
push
push
les
nop
push
cdq
jb
lock
push
xlat
pop
or
mov
aam
mov
mov
sub
add
mov
int
pop
pop
aad
add
iret
cli
in
loopne
int
mov
mov
dec
xchg
jnp
push
cmp
repz
jmp
pop
and
clc
wrmsr
lahf
sub
sti
popa
les
ret
shl
sbb
add
sbb
sub
jae
dec
xchg
jno
dec
mov
imul
cmps
jl
js
loope
or
jecxz
sbb
div
dec
adc
mov
dec
mov
call
iret
fwait
cmp
push
xchg
jnp
loop
cs
vsubsd
push
jb
stos
paddw
mov
outs
dec
aaa
mov
loope
mov
xchg
jo
sbb
mov
scas
ret
stos
xchg
sub
sbb
inc
mov
sbb
sbb
imul
dec
push
out
ins
mov
mov
add
or
js
pushf
bound
test
mov
fdivr
push
mov
movs
arpl
jp
pop
in
jecxz
test
cmp
iret
and
fisub
nop
data16
fldcw
cmp
cwde
jns
ja
and
mov
loopne
jl
pusha
add
mov
call
or
xchg
arpl
fidivr
pushf
ds
retf
push
lea
jmp
fadd
dec
pop
int3
call
scas
paddusw
push
pushf
xchg
sbb
push
imul
sahf
pop
and
add
repz
dec
lahf
and
cmp
inc
and
gs
and
fisubr
jg
jge
mov
cmp
shl
sub
mov
(bad)
cwde
jbe
fwait
xchg
int3
outs
push
pop
push
mov
inc
pop
movs
mov
jo
dec
int
mov
pop
cld
mov
nop
pop
mov
dec
xchg
inc
lods
fwait
push
fwait
cmp
ret
aad
jmp
(bad)
sti
sub
popa
int
inc
pop
lds
inc
out
pop
fcmovbe
outs
xchg
sbb
mov
adc
das
mov
mov
mov
movs
inc
inc
stos
sbb
fisubr
push
(bad)
outs
(bad)
aas
jno
push
sahf
dec
xor
test
fsub
mov
loop
dec
push
pop
test
push
int
and
xor
push
int
test
(bad)
mov
popa
call
hlt
adc
rol
mov
inc
and
push
aam
jo
aas
pop
sbb
jle
daa
out
mov
cmc
cmp
mov
xchg
add
mov
outs
lock
popf
sahf
out
or
data16
push
mov
inc
dec
push
xchg
icebp
int3
dec
lahf
mov
rcr
or
rcr
das
lods
(bad)
adc
jmp
xor
sti
in
inc
sub
imul
daa
adc
call
adc
add
push
repz
pop
push
ins
push
std
imul
dec
xor
addr16
mul
dec
repnz
cmp
popa
push
adc
ins
retf
jae
hlt
sbb
push
inc
lods
vpmullw
mov
aaa
stc
cmp
add
xchg
xchg
clc
ins
jae
imul
int3
mov
mov
sub
outs
mov
sbb
mov
das
shr
int3
dec
repnz
mov
sub
pop
sub
or
out
das
iret
movs
pop
icebp
icebp
fs
mov
popa
dec
les
push
cmp
adc
xor
sub
or
call
push
or
lock
mov
in
popf
inc
push
ins
leave
jmp
arpl
leave
(bad)
push
pushf
adc
cwde
mov
aam
adc
jns
or
jno
inc
arpl
sbb
(bad)
mov
(bad)
xlat
test
and
xchg
pop
mov
cmp
and
dec
out
ds
std
mov
repz
pop
mov
pop
sahf
sbb
and
daa
(bad)
rcr
data16
xchg
mov
in
cmp
and
dec
imul
retf
mov
sbb
cmp
adc
int
test
loop
xchg
mov
call
xchg
dec
xor
adc
hlt
sub
xor
aad
pop
xchg
fmul
loopne
movs
lods
cmps
and
mov
cli
add
mov
cmps
sub
xor
push
fbld
push
sbb
or
and
add
jp
adc
xchg
and
mov
pop
test
xor
js
xor
lea
enter
add
aam
dec
mov
daa
addr16
(bad)
mov
neg
scas
sub
pop
push
add
inc
call
jl
add
packsswb
dec
pop
stc
sahf
pop
mov
fadd
sahf
fiadd
loop
sub
mov
ror
mov
or
jl
in
popa
ss
jae
cmp
dec
out
mov
ficom
inc
lock
push
imul
dec
and
mov
pop
jl
or
fdivr
mov
dec
xchg
mov
sub
gs
or
adc
jl
cmp
push
test
cmp
and
dec
(bad)
sub
fstp
cmp
mov
in
mov
outs
movs
hlt
ret
jg
fsubr
ret
sub
aad
add
mov
lahf
lea
xor
sub
push
push
mov
sbb
xor
push
out
nop
mov
jge
cmp
imul
mov
jb
jle
idiv
jmp
cmc
shr
iret
retf
or
push
xchg
pop
pop
data16
pop
(bad)
adc
gs
push
rcl
pop
sub
rcr
or
fdiv
jg
fs
cmps
push
ins
lock
jb
xlat
mov
jecxz
(bad)
out
dec
push
mov
mov
sub
enter
cwde
cdq
sbb
fdiv
sub
cmp
hlt
mov
not
lahf
inc
jmp
pop
dec
out
xchg
cwde
ss
lds
and
pop
imul
(bad)
fild
xor
inc
and
xlat
xlat
fsub
jns
jmp
add
div
pop
xchg
dec
and
pop
repz
sbb
mov
jp
mov
popf
fstp
into
test
jne
mov
sub
cmp
shl
into
stos
stc
hlt
push
or
fcmovnbe
mov
rcl
jp
dec
adc
jae
fidivr
dec
cmc
nop
xchg
pop
mov
cmp
push
add
leave
imul
cmp
ror
xchg
add
jno
arpl
mov
push
dec
leave
mov
mov
in
xor
cdq
pop
loop
test
rcr
inc
stos
les
xlat
mov
jno
ss
lods
push
add
cmp
jno
cmc
outs
daa
loopne
lds
movs
inc
inc
and
ins
ror
inc
daa
jnp
ret
sbb
clc
ror
sub
cwde
jge
pop
pop
add
movs
test
xor
adc
sbb
aad
xchg
stos
fisttp
cmc
dec
daa
mov
jns
jmp
(bad)
adc
repz
shr
sbb
jmp
sub
xchg
test
push
leave
fdivr
fnsave
rcr
cmps
cmp
(bad)
ins
jae
adc
fistp
js
or
push
xchg
or
iret
stos
pop
loopne
sub
movs
jp
pusha
data16
adc
inc
push
out
cld
outs
or
imul
inc
movs
out
jae
or
ret
mov
mov
jno
fimul
pop
cmc
inc
push
js
(bad)
rol
sti
shl
call
test
icebp
sub
test
and
shr
stos
and
aam
in
mov
push
pop
fwait
mov
inc
shl
int3
jmp
inc
sbb
mov
cs
nop
jae
mov
jl
mov
pop
repz
pop
iret
xchg
das
cmp
fld
das
mov
push
mov
rep
sbb
mov
mov
push
rcr
in
adc
retf
xor
dec
add
add
cmp
dec
or
pusha
xor
in
mov
pop
xchg
or
push
sub
mov
dec
popa
xchg
dec
xchg
add
gs
mov
jmp
pop
cmp
ins
repnz
mov
pop
in
ins
and
sub
fdiv
xchg
cmps
dec
stos
mov
mov
mov
sbb
jno
imul
test
cs
pushf
and
fisub
dec
int
inc
aaa
or
(bad)
adc
mov
idiv
movs
add
sub
push
sub
dec
push
movs
mov
fild
inc
outs
xor
aas
cmps
push
(bad)
cmp
ffree
sti
test
lock
bound
dec
dec
jle
cmps
xor
(bad)
add
mov
push
stos
int
jo
stc
in
xor
add
mov
pop
mov
iret
push
(bad)
sti
xor
mov
push
cmps
mov
ja
push
mov
jb
test
(bad)
lock
shl
push
test
rcl
xor
push
add
push
add
jnp
ja
dec
popa
bound
scas
jns
scas
xlat
repz
cmp
jo
cmps
push
mov
push
ins
lods
enter
cwde
fs
loope
cs
xor
iret
and
fisub
rcl
nop
mov
rcr
dec
imul
sbb
aas
retf
mov
sahf
or
mov
inc
gs
clc
inc
pushf
shl
int
loop
fs
xor
inc
dec
(bad)
xchg
push
stos
in
inc
in
dec
pushf
neg
xor
scas
test
xlat
xchg
adc
push
daa
cli
rcl
adc
jb
outs
add
push
add
jne
(bad)
pusha
out
in
push
adc
push
scas
retf
pxor
mov
fdivr
pop
test
gs
jno
push
mov
or
(bad)
xor
icebp
in
mov
lock
mov
xchg
sub
(bad)
cmp
leave
sub
jge
xlat
paddusb
arpl
mov
rcl
sbb
mov
dec
(bad)
iret
pop
mov
sbb
repnz
and
adc
jmp
adc
test
ins
xchg
pusha
add
push
idiv
aaa
push
lock
add
shl
popa
pop
ss
ret
enter
ja
or
std
popf
xchg
int3
push
in
dec
mov
jo
jp
xchg
(bad)
into
fwait
xor
fistp
ss
jp
xor
ror
fild
push
push
mov
mov
das
push
mov
xor
sti
pop
stos
dec
fcomp
jmp
mov
mov
xor
xchg
rol
sub
push
push
add
inc
movs
addr16
jb
adc
popa
lods
pop
ja
fwait
mov
mov
or
mov
retf
ss
mov
mov
jb
pop
adc
xchg
and
into
mov
add
jb
xor
or
leave
jbe
mov
jp
imul
iret
addr16
push
xchg
mov
push
jp
adc
je
cmps
cmc
pop
dec
or
or
fdiv
out
cmp
push
mov
loop
dec
mov
repz
mov
adc
out
push
pop
adc
lea
mov
jae
loope
cs
add
inc
retf
movs
sub
jno
fiadd
cmp
jg
fcmovnb
mov
xchg
scas
adc
xchg
pop
daa
mov
and
inc
in
inc
in
jne
jmp
ins
in
(bad)
rcl
outs
(bad)
hlt
mov
lahf
cmp
lods
outs
scas
movs
enter
push
fwait
in
xor
push
pop
inc
jns
shl
jecxz
mov
arpl
cmp
fdivrp
dec
mov
inc
retf
push
test
(bad)
movs
mov
mov
out
push
scas
ret
enter
pop
clc
ss
ror
pop
cmp
pushf
push
outs
repz
loop
sbb
sub
xor
fmulp
mov
jns
jo
inc
mov
jp
xor
mov
fsubr
pop
fild
scas
xor
mov
in
out
adc
rol
or
add
ins
std
pop
jae
test
xchg
imul
(bad)
fidiv
sahf
fstp
ret
nop
cmc
jnp
aam
and
or
fcomp
xor
out
cmp
repnz
jo
test
stc
sub
in
mov
aam
mov
add
cmps
jnp
cmp
jmp
movs
jecxz
test
mov
shl
dec
or
shr
in
(bad)
mul
pushf
xchg
jbe
lods
stos
mov
sub
add
(bad)
jmp
leave
shr
or
inc
repnz
mov
movs
imul
xor
jmp
cmps
ins
push
cmp
jecxz
mov
stos
mov
dec
(bad)
lods
int3
mov
cdq
daa
loopne
std
jmp
clc
push
sbb
mov
jae
push
fdiv
sbb
and
popf
(bad)
addr16
pop
pop
sbb
cmp
xor
fcom
or
loopne
inc
or
mov
sub
pop
cmps
ret
ins
push
sbb
add
sbb
pop
aaa
dec
inc
pop
std
aas
cmc
mov
adc
add
repnz
push
jecxz
ror
fwait
cmc
sub
fisubr
and
data16
xchg
push
(bad)
enter
ret
pop
push
das
mov
jbe
pop
in
es
mov
xor
push
icebp
sub
dec
loope
xor
pop
adc
rcr
das
xor
cmp
stc
outs
jnp
in
sub
sub
repnz
test
sub
jl
mov
adc
adc
xor
imul
pop
lds
les
add
fisubr
inc
std
add
scas
fs
daa
pop
jmp
jl
push
int3
or
add
add
loopne
fcmove
fdivr
test
xchg
mov
jg
xor
add
stos
cwde
cmps
mov
out
mov
jno
or
stos
movs
fwait
loopne
push
and
push
mov
add
adc
fild
hlt
in
test
ja
mov
and
or
pop
dec
or
pop
movs
aaa
mov
xlat
(bad)
sub
cmp
jb
cmp
lds
cld
or
sbb
mov
shl
lock
retf
lods
pop
stos
pop
jp
js
mov
mov
iret
adc
xchg
mov
jbe
sub
and
mov
ja
mov
adc
sub
sub
movs
outs
mov
mov
jno
inc
jecxz
rep
mov
push
xchg
leave
cmp
outs
xlat
and
mov
jmp
int
jne
pushf
and
(bad)
icebp
cld
loope
fwait
mov
ret
stos
cmp
cli
xlat
call
mov
lods
sub
sbb
and
cmp
std
out
or
jg
sub
es
popa
xchg
mov
and
jle
mov
outs
push
mov
cmp
jno
das
cmp
lock
pop
and
push
ss
aad
cmp
xor
mov
in
jbe
out
push
in
xor
sti
jl
adc
cdq
adc
push
push
jmp
pop
aad
sub
adc
(bad)
sub
aaa
pusha
sub
ins
ret
sub
mov
mov
test
vmread
sbb
repz
ins
nop
xlat
push
into
je
xchg
in
mov
repz
pop
adc
cmp
fst
pop
std
ja
or
call
push
dec
in
fdiv
ss
pop
jbe
dec
and
dec
das
outs
dec
iret
aaa
je
call
push
imul
sbb
add
mov
pop
mov
ins
lods
loopne
jecxz
add
jle
mov
dec
mov
pop
dec
and
push
dec
ficomp
retf
adc
or
rcr
out
jmp
pop
mov
xlat
loope
lock
sbb
nop
xor
and
std
dec
adc
mov
loope
mov
out
lods
xchg
fdiv
sub
or
cmp
call
pop
or
and
lods
call
shl
fisub
mov
stos
cmp
sbb
mov
jnp
xchg
popf
adc
mov
stos
adc
jle
cwde
push
adc
xchg
repz
gs
mul
add
out
add
imul
jp
mov
arpl
mov
xchg
rcl
fidivr
push
pop
push
icebp
into
les
pop
lods
jns
mov
jno
sub
in
sub
sbb
lods
aad
pop
out
xor
or
and
add
and
test
popa
pushf
arpl
stos
ret
or
xor
adc
in
test
jb
push
cmps
loopne
aam
and
add
push
or
xlat
push
jle
cmps
psrlq
jo
pop
nop
and
dec
addr16
test
jge
jnp
movs
test
aas
into
pop
add
icebp
inc
mov
jno
leave
jne
pop
add
lea
mov
movs
jbe
add
push
pop
(bad)
pop
push
das
dec
jo
cmp
mov
fnsave
cmp
xchg
jl
xchg
adc
sub
mov
(bad)
lds
sbb
shl
or
xlat
test
pushf
ins
sub
cmp
ror
and
popf
mov
retf
stos
cmps
shl
out
iret
cmp
pop
cmps
arpl
mov
sub
pop
lods
outs
scas
push
nop
mov
dec
sub
mov
push
in
xchg
pop
das
mov
mov
inc
out
jmp
(bad)
daa
xor
add
fist
pusha
shl
pop
sbb
call
stos
push
popf
mov
scas
jne
stos
xchg
mov
jo
pop
bound
mov
and
jl
sbb
(bad)
nop
ror
push
sbb
sub
movs
sub
sbb
and
push
mov
sub
clc
jnp
adc
mov
push
cs
fisttp
mov
mov
nop
adc
adc
lds
aad
out
mov
jnp
pop
mov
imul
pop
jmp
pop
(bad)
cmp
les
fwait
dec
pop
into
jp
pusha
in
cmp
sbb
sar
inc
test
pop
loope
call
sub
in
push
pop
cwde
sub
jmp
sahf
cmp
xchg
(bad)
ss
dec
movs
push
cld
xlat
inc
popf
jno
shl
aas
add
push
aad
xor
add
movs
shl
idiv
test
(bad)
jle
cmps
repnz
pop
sub
push
mov
jo
mov
call
stos
std
push
inc
das
gs
scas
bound
ret
mov
xor
iret
dec
sahf
lahf
inc
or
ins
test
mov
fnstsw
mov
sub
inc
push
xchg
rcl
dec
test
push
mov
mov
pop
test
pushf
mov
push
stos
add
mov
sub
mov
leave
cmp
mov
adc
mov
repz
popf
add
add
in
movs
(bad)
xchg
ret
fsubr
xor
rol
test
sbb
adc
clc
pop
jg
ds
scas
sahf
ins
dec
out
sub
or
sbb
nop
movs
push
cmp
dec
popa
sbb
jl
inc
mov
mov
jnp
cmps
push
retf
cmp
xchg
mov
dec
sar
jnp
icebp
cmp
out
mov
mov
faddp
inc
out
shl
pop
loope
jne
ins
or
and
adc
inc
mov
push
mov
mov
sub
bound
ins
jns
mov
ss
leave
pop
cmp
jg
fdiv
sub
loop
cmp
bound
imul
xchg
mov
or
enter
stos
and
int3
ds
aas
mov
mov
ja
jnp
btr
rcl
ror
mov
rol
pop
mov
les
mov
xor
ins
cmp
inc
rol
and
mov
jl
stos
xchg
pop
pop
inc
inc
fimul
xor
mov
stos
neg
dec
ss
sub
or
ror
dec
add
int3
mov
ins
pop
pop
bound
mov
rcr
jmp
das
call
pop
fstp
xchg
out
call
xor
sbb
xor
daa
push
je
mov
int3
ins
not
add
fldcw
jmp
(bad)
fstp
loope
add
or
fwait
ss
mov
jno
int
cmp
jp
hlt
dec
js
sbb
fstp
and
sbb
vpacksswb
and
jne
retf
out
lahf
fnstenv
xchg
aaa
jnp
retf
jge
(bad)
mov
bound
pusha
shr
mov
xchg
mulps
std
xchg
stos
push
retf
loopne
(bad)
add
inc
std
xchg
out
cmc
pop
dec
out
mov
out
aad
sar
sbb
jmp
dec
mov
daa
cdq
dec
push
mov
pusha
pusha
loopne
sub
and
out
and
cmps
mov
in
cmps
push
mov
into
pop
push
clc
pop
ret
sub
mov
pusha
push
sar
cmps
(bad)
clc
out
outs
pop
loope
sar
out
ficomp
add
mov
cmp
clc
shl
daa
leave
sub
out
and
aam
loope
stos
lods
imul
add
push
inc
jl
adc
movs
dec
jno
pop
xchg
mov
cwde
in
ins
jbe
lds
test
(bad)
arpl
out
sahf
sub
sub
mov
sub
div
rcr
scas
jbe
int
ins
mov
lods
sub
cmp
test
stc
push
ror
in
mov
(bad)
push
push
fisttp
sar
xor
push
inc
aad
mov
je
test
push
inc
xor
inc
ret
call
fmul
mov
mov
lods
xchg
and
push
pop
and
pop
ret
pop
jns
push
lods
(bad)
fcom
in
in
cmc
xor
xor
mov
xchg
retf
ins
inc
ds
hlt
jbe
les
lahf
inc
inc
or
sub
jbe
stc
in
arpl
sar
out
jmp
sub
fdiv
clc
enter
je
out
jne
xchg
sub
push
pop
and
xchg
push
dec
movs
call
mov
pop
das
gs
and
repz
int
and
and
and
dec
jb
or
and
cmp
fs
mul
cmp
or
out
cmp
js
push
in
sub
push
fisttp
mov
or
pop
test
xor
pushf
push
push
cmp
mov
(bad)
pusha
or
adc
dec
mov
or
pop
js
mov
cld
mov
call
jl
lock
shl
jnp
pushf
push
xchg
daa
daa
dec
fbld
inc
outs
cwde
dec
std
mov
rol
mov
retf
shr
data16
mov
das
retf
xlat
lock
sbb
mov
xchg
push
in
inc
or
loopne
push
ins
dec
fwait
int3
ret
pop
or
data16
inc
add
add
dec
inc
add
push
leave
aad
lods
push
xor
stos
aaa
shr
cmp
int
sbb
mov
repz
icebp
dec
enter
gs
push
std
mov
mov
jae
ins
(bad)
gs
dec
inc
(bad)
cli
or
call
in
add
clc
pusha
sub
sbb
push
push
js
sub
jl
and
test
adc
mov
lods
js
sar
fisttp
inc
test
js
(bad)
hlt
xchg
aad
jbe
cmps
aam
sbb
icebp
xlat
fsub
sbb
push
mov
ds
unpckhps
push
leave
or
and
sub
int
call
ja
mov
sar
cmp
rol
fdivr
add
inc
pop
xchg
dec
loopne
adc
scas
ins
repnz
fcomp
jecxz
mov
leave
leave
sub
test
push
cdq
into
xor
cmp
retf
gs
test
(bad)
call
dec
pusha
jp
std
jl
or
xchg
cmp
inc
mov
mov
fidivr
aaa
xor
div
xchg
ret
sbb
xchg
adc
pushw
jno
mov
loope
fwait
ins
popf
test
test
jecxz
xor
mov
ins
jecxz
ja
and
xchg
aam
push
shr
cdq
jmp
aam
repnz
cmp
(bad)
push
aad
adc
scas
xlat
loopne
std
int3
xor
jl
movs
movs
inc
push
and
pop
inc
daa
scas
inc
mov
fs
mov
mov
xchg
dec
jp
adc
pop
mov
gs
cmps
inc
xchg
add
push
adc
enter
clc
fwait
push
sub
xchg
cmps
ds
xchg
(bad)
cmp
push
mov
fwait
jbe
lods
in
jno
xchg
mov
cmp
add
lds
push
in
push
fadd
inc
jp
sbb
cli
movs
les
adc
in
dec
(bad)
jp
(bad)
mov
rol
push
or
sar
fild
cwde
sbb
shr
mov
mov
fild
sub
stmxcsr
mov
paddq
nop
int3
retf
jae
stos
push
retf
in
or
xor
sub
idiv
pop
icebp
and
test
jns
xor
inc
xchg
or
bound
daa
(bad)
cli
fnsave
adc
(bad)
cmp
test
sahf
sub
(bad)
ins
cmp
sbb
cmps
(bad)
or
sub
std
mov
push
push
popf
sar
jge
sbb
jg
fbld
add
or
(bad)
sti
add
fisttp
fdivp
shr
gs
ins
push
nop
mov
cmp
or
jo
fcmovnb
xchg
test
fs
ins
lods
cmp
mov
cmp
mov
ins
xor
ss
jbe
xchg
ror
and
mov
imul
push
mov
push
les
bound
and
xchg
add
icebp
sti
mov
sbb
out
jl
pop
add
sub
push
ffree
adc
push
int3
mov
out
add
outs
add
mov
mov
into
xor
lahf
jo
ret
mul
add
mul
call
je
sahf
movs
shl
ror
fnstsw
dec
sub
push
call
and
mov
or
inc
jmp
inc
xchg
cmp
clc
int3
call
xor
outs
icebp
dec
jge
mov
sub
call
mov
push
pop
cld
ja
daa
daa
dec
pop
test
xchg
pop
adc
scas
mov
push
bound
jo
sbb
adc
lea
push
sub
jge
dec
fidiv
or
push
xchg
movs
nop
ret
jle
repnz
test
(bad)
out
loope
jno
push
or
mov
sbb
aad
call
fiadd
mov
ins
mov
call
or
jne
mov
(bad)
outs
push
and
cdq
pop
ja
pushf
mov
movs
dec
out
jnp
fscale
std
(bad)
sbb
ficomp
mov
dec
jmp
pop
pop
inc
pop
pop
rcr
jae
leave
daa
movs
(bad)
loopne
mov
in
mov
adc
ja
fs
pop
mov
mov
jnp
shl
push
inc
nop
pop
or
pop
cmp
mov
jmp
mov
xchg
dec
ret
dec
daa
and
loopne
jo
out
and
inc
(bad)
repz
xchg
xchg
mov
cmps
push
jns
test
inc
test
push
es
cmc
mov
mov
idiv
sub
cmc
mov
mov
enter
xchg
fmul
push
pop
fdiv
(bad)
aam
jmp
xchg
leave
add
or
or
xchg
cdq
shl
shr
push
retf
lods
pop
jne
mov
popf
mov
inc
mov
pop
jnp
jne
loope
sub
push
dec
movs
jae
mov
fwait
lods
cld
scas
mov
outs
ret
pushf
or
sbb
and
fwait
and
sbb
nop
sub
inc
(bad)
pop
popa
mov
scas
rcr
xchg
retf
mov
ins
or
add
jecxz
cwd
push
scas
or
and
pop
adc
(bad)
or
aas
in
mov
ss
movs
imul
dec
lods
sbb
or
in
mov
push
sub
cmp
adc
test
cmp
repnz
(bad)
movs
(bad)
stc
loop
xor
inc
mov
sub
jge
daa
scas
cmps
sti
pop
xchg
neg
test
out
push
mov
xor
sub
gs
sub
rcl
pop
fcomp
jle
xchg
jmp
dec
lahf
adc
outs
dec
pop
pop
push
jnp
pushf
repnz
mov
mov
or
mov
out
cli
adc
jb
ins
mov
push
mov
popf
jle
dec
(bad)
cmc
cmps
lock
aaa
arpl
das
ja
ret
mov
dec
(bad)
mov
test
test
aas
cmc
leave
jnp
mov
and
cmp
mov
ret
std
xchg
pop
aaa
and
sbb
cmc
cmc
jl
dec
mov
movs
mov
test
jecxz
xor
xchg
push
mov
ja
adc
jmp
lods
repnz
je
test
jmp
add
rol
cmp
mov
fs
cmp
(bad)
sbb
sar
adc
jne
and
xlat
fs
push
icebp
rcr
in
pop
ss
jge
cmp
push
xor
imul
fsub
mov
xor
les
or
sbb
sbb
adc
ret
xchg
xcrypt-ofb
cmps
push
mov
and
cmp
inc
cmps
add
jmp
xor
out
test
out
dec
sbb
movs
add
call
mov
or
stos
pop
dec
cwde
xor
in
test
and
mov
icebp
icebp
cmp
loop
jmp
sub
clc
scas
pop
xchg
lods
outs
xor
mov
hlt
cwde
aam
outs
nop
ficom
mov
xchg
loopne
(bad)
jnp
ja
adc
mov
(bad)
xchg
or
lds
sbb
and
movs
(bad)
pop
xchg
clc
inc
inc
repnz
ret
mov
sti
stc
dec
inc
outs
pop
xor
and
xor
iret
sub
cwde
sti
dec
hlt
outs
jp
(bad)
fbstp
xchg
mov
and
xor
inc
or
imul
popf
mov
fwait
repz
(bad)
jne
lds
nop
test
fs
jmp
ins
scas
mov
rcr
sub
cmp
repz
adc
push
mov
inc
sahf
and
sbb
and
xchg
adc
fisttp
cmp
jbe
mov
jmp
sbb
in
pop
ds
fcomp
push
sar
in
data16
(bad)
movnti
xor
fstp
(bad)
(bad)
dec
jecxz
imul
aam
fdiv
ins
ficomp
inc
sbb
add
xor
jle
xchg
sbb
push
pop
inc
push
(bad)
sub
mov
jnp
(bad)
stos
jp
pop
inc
sbb
mov
sub
add
and
lea
aaa
daa
pop
je
ins
jmp
nop
or
cli
mov
push
leave
ror
mov
in
sub
aam
out
jnp
hlt
cld
in
sub
fbld
das
push
rcr
mov
cmps
out
icebp
rcl
out
popa
jae
popa
inc
mov
push
inc
hlt
sub
fnstenv
int3
cmp
rcl
ror
cmp
cmp
push
inc
and
jne
or
fstp
in
jae
pop
jbe
dec
cs
jo
hlt
push
pop
push
mov
cdq
dec
fst
pop
mov
test
fcomip
movs
lahf
out
lahf
imul
mov
fcmovnu
ror
sahf
aas
call
cmc
bswap
sbb
aad
cwde
adc
mov
jnp
loope
clc
inc
or
xchg
and
jl
aaa
jbe
lock
loop
hlt
sbb
jae
in
out
or
sbb
dec
sub
or
mov
xor
jne
fcmovnu
fcom
push
mov
jb
in
lock
sub
inc
add
add
out
lahf
fs
enter
mov
mov
enter
(bad)
(bad)
nop
cmp
mov
aas
cmp
dec
loope
and
cmc
test
test
lock
(bad)
fidiv
mov
lahf
in
jl
cmp
mov
jge
xchg
mov
and
rcl
addr16
nop
xchg
add
mov
sub
into
push
add
jg
retf
xchg
mov
adc
jmp
je
inc
ror
movs
mov
add
repz
fidiv
test
sbb
cmp
ja
push
mov
xchg
xor
jecxz
rol
push
stos
xor
xchg
mov
je
push
sub
(bad)
(bad)
sub
xchg
xor
mov
fist
(bad)
dec
xchg
jmp
xchg
adc
scas
mov
ins
fadd
mov
xchg
xlat
loope
in
dec
mov
mov
scas
push
iret
je
(bad)
int3
popf
jnp
ja
cld
mov
fst
pop
mov
mov
push
and
frstor
mov
push
hlt
push
dec
mov
or
jge
pop
or
cmp
jae
push
jbe
mov
add
add
pop
ja
loope
(bad)
adc
jg
pop
dec
(bad)
pop
jp
bound
pushf
jne
xchg
jl
cli
pop
repz
or
add
mov
add
outs
dec
shl
add
dec
fs
in
scas
adc
imul
xchg
test
add
mov
push
popf
mov
aam
(bad)
dec
dec
mov
iret
pusha
cli
das
lahf
ins
cmp
and
aas
dec
aaa
and
mov
aas
loop
sbb
xchg
std
xor
in
popf
ins
test
popf
cmp
push
fadd
dec
movs
scas
mov
leave
arpl
or
punpcklbw
push
jno
jo
cwde
aam
push
int3
and
inc
ja
mov
ja
test
push
mov
add
jae
inc
out
ss
out
xchg
push
inc
iret
adc
(bad)
sbb
mov
or
sbb
jne
shl
rep
jmp
xchg
xchg
dec
cmp
aad
mov
xchg
xor
xor
aaa
jo
xlat
jno
inc
push
clc
jg
mov
sub
add
jmp
adc
stos
aaa
sbb
sahf
sahf
icebp
mov
add
pop
push
fild
push
lds
lods
or
pmaddwd
push
inc
jl
xlat
mov
retf
cmp
push
lds
ret
sbb
adc
sbb
out
sbb
sbb
in
jp
mov
call
int
fnstsw
idiv
out
jmp
in
and
sbb
in
pop
out
push
out
xor
mov
jmp
jne
mov
fld
scas
pop
pop
outs
and
add
inc
(bad)
mov
mov
and
scas
cmp
test
jae
mov
mov
mov
fcomp
pop
push
pop
fs
sbb
xor
and
add
inc
rol
aas
jl
out
int3
mov
add
sub
gs
ins
pop
cmc
repz
ins
and
add
xchg
dec
fidivr
repz
call
ja
pop
mov
jbe
mov
push
adc
je
xchg
jb
loope
dec
(bad)
jb
sti
daa
push
xor
clc
retf
push
cmp
shl
mov
data16
scas
pop
cmps
test
ss
stc
mov
pushf
outs
call
xchg
mov
ret
lock
and
xor
xchg
pushf
sub
mov
shl
sahf
arpl
fisttp
lahf
xchg
xchg
cmp
fistp
(bad)
mov
mov
loope
push
mov
into
ins
jl
(bad)
das
jns
sti
jg
mov
ins
idiv
lea
inc
jb
or
in
cmp
enter
loopne
mov
xchg
sbb
scas
lock
pop
dec
ds
rcr
(bad)
cs
mov
sahf
sub
xchg
lds
jbe
dec
ds
das
shl
jp
jbe
icebp
popf
stos
push
or
imul
fimul
sar
xor
movs
ins
sub
or
mov
dec
fidiv
xchg
ss
dec
jle
adc
push
mov
xchg
cs
dec
js
inc
inc
fdiv
fdivr
push
mov
push
outs
(bad)
adc
xor
in
xchg
fsub
pop
jle
pmovmskb
bound
stc
add
js
dec
(bad)
mov
out
iret
jne
test
addr16
shl
ins
cmp
fldcw
push
js
(bad)
pop
not
repnz
jge
mov
jno
pop
xchg
adc
imul
imul
lock
mov
xor
sub
bound
xchg
sub
rcl
dec
js
add
and
mov
adc
cli
xor
push
int3
jns
lock
popa
add
clc
cli
sub
dec
mov
scas
nop
mov
loope
jns
inc
fisub
out
fmul
aas
outs
je
(bad)
(bad)
std
cmp
mul
mov
test
inc
mov
mov
sahf
adc
adc
test
int
inc
push
out
dec
icebp
cmps
(bad)
jns
int
mov
dec
icebp
push
jo
dec
push
jg
xlat
mov
pusha
jecxz
push
xchg
adc
add
mov
scas
retf
or
(bad)
ds
pop
ins
mov
mov
xchg
mov
xchg
ret
mov
stos
(bad)
fst
inc
xchg
push
ficomp
(bad)
imul
call
mov
xor
ficom
push
test
fcom
(bad)
lods
(bad)
lds
dec
imul
iret
or
pusha
ja
cmps
test
xchg
cwde
mov
sbb
and
push
fs
jnp
push
adc
fist
loopne
and
push
jbe
xchg
inc
xor
adc
and
movs
ds
jecxz
std
(bad)
popf
cdq
stos
loope
shl
lahf
jb
sbb
rcr
cmps
add
ds
lods
mov
out
xor
in
inc
mov
fnstenv
outs
push
push
in
fxch
and
(bad)
lahf
out
sub
loope
test
les
or
add
sbb
stos
jmp
jge
jmp
inc
mov
mov
mov
lods
inc
adc
cmp
cmp
jmp
add
int3
loope
fucomp
mov
aad
pop
xor
and
sbb
inc
clc
call
aas
inc
adc
or
rol
xlat
jle
push
ret
jo
xchg
ficomp
pushf
sbb
add
ret
mov
ds
dec
das
inc
test
jno
mov
mov
aas
jg
call
cdq
cli
in
fmul
inc
pop
and
xchg
nop
jle
push
pop
mov
mov
push
pop
cmp
or
popa
pop
inc
movs
(bad)
aaa
rol
(bad)
adc
mov
loop
sahf
push
loop
lea
sbb
test
adc
stc
sahf
mov
mov
dec
jle
mov
jl
test
mov
jmp
(bad)
sbb
(bad)
bound
xchg
dec
(bad)
jmp
add
add
pushf
mov
aam
inc
pop
rcl
jb
xchg
in
jae
popf
outs
xchg
jmp
mov
mov
cmp
cs
adc
and
out
sbb
inc
fisttp
loopne
into
cs
inc
push
pop
lods
ja
ja
push
je
cmp
jecxz
mov
pop
push
int3
push
sub
test
push
loop
ret
sti
xor
mov
dec
and
jp
cmps
ret
mov
sub
ficomp
mov
and
cmp
jbe
lods
repnz
xlat
xchg
mov
adc
jle
and
das
pop
div
ret
jmp
and
retf
icebp
adc
je
hlt
pop
call
enter
icebp
js
jnp
ret
xlat
inc
arpl
sbb
sub
imul
cmp
data16
leave
push
xor
out
push
sbb
out
mov
cmp
mov
pop
call
fucomip
xchg
xchg
add
clc
push
sub
sar
and
neg
xchg
jbe
int3
xchg
push
repz
mov
and
(bad)
iret
loope
push
or
adc
in
push
jns
shl
iret
bnd
inc
push
out
imul
enter
scas
mov
mov
shl
js
jmp
sbb
pop
push
pop
aas
dec
mov
in
sbb
cs
test
sbb
lods
(bad)
lock
inc
lock
dec
and
hlt
jnp
cli
jbe
xchg
icebp
loop
mov
jp
mov
shl
xchg
jo
pusha
fiadd
or
jb
movs
or
mul
sub
xchg
hlt
jo
mov
dec
mov
scas
sub
stc
xchg
add
jmp
inc
inc
or
add
stos
xchg
cmps
dec
scas
dec
push
mov
xor
into
xlat
sar
loop
push
out
cmp
std
and
jns
rcr
pop
pop
aad
fsub
add
int
and
inc
cmc
cld
pop
addr16
xchg
jo
cs
scas
adc
and
pop
pop
jg
fiadd
push
ins
xlat
idiv
sub
loop
dec
push
mov
rcl
(bad)
jne
enter
push
shl
adc
je
push
les
aaa
(bad)
mov
dec
in
loope
sti
xchg
cmp
xchg
jbe
jnp
jmp
mov
(bad)
js
mov
add
inc
ret
cwde
cmp
ret
movs
call
push
sti
std
push
aas
xchg
jo
pusha
pusha
or
fsubr
jnp
mov
sbb
mov
into
jge
sbb
iret
dec
sti
sbb
xchg
retf
mov
outs
pop
cmp
not
and
jnp
sahf
push
jne
sti
dec
leave
into
inc
bound
cwde
lock
sub
lahf
sub
lds
test
mov
mov
dec
push
sub
inc
or
ret
or
add
dec
call
ins
gs
in
cmps
and
jmp
retf
aas
icebp
mov
ss
ret
jne
inc
sbb
mov
jb
mov
(bad)
(bad)
pop
cmp
pushf
and
lods
js
jbe
fcmovb
xchg
popf
into
hlt
mov
ret
out
icebp
add
push
xchg
das
cmp
div
fild
adc
pop
lds
out
movs
pushf
push
push
out
into
inc
fdiv
and
mov
(bad)
xor
jne
ds
mov
jno
dec
std
add
mov
inc
out
sti
sbb
sbb
(bad)
data16
rcl
inc
js
push
add
fnsave
sti
test
sbb
into
mov
add
cmp
mov
ficomp
outs
sbb
mov
inc
sub
push
or
pop
inc
cmps
sbb
lds
mov
out
push
sub
pop
push
jmp
sahf
out
(bad)
sbb
jge
pusha
push
adc
fild
lods
in
or
in
mov
(bad)
cwde
pop
jmp
sub
fucomp
(bad)
xor
cld
sub
shl
cmp
push
or
fs
int
sbb
push
ret
jnp
cmp
jecxz
jae
(bad)
std
pusha
jmp
aam
push
aam
dec
xchg
mov
(bad)
inc
in
push
sub
fimul
xor
clc
fs
popf
add
repz
sbb
pop
push
scas
aas
popa
cmps
pop
pop
mov
jbe
imul
mov
js
repz
lods
scas
mov
test
pusha
pop
xor
pop
sbb
pop
jns
jle
push
fidivr
dec
xor
int3
jmp
cld
loope
fs
push
mov
lods
push
xor
lods
or
call
ja
jb
add
pop
or
mov
outs
outs
outs
lea
jbe
out
stc
mov
jecxz
xor
gs
lgs
or
inc
sbb
lods
pop
retf
add
ins
add
outs
and
lods
adc
cmps
sub
jnp
aam
hlt
aas
jmp
data16
ret
loop
in
aaa
test
test
inc
and
mov
hlt
out
stc
lods
scas
adc
movs
hlt
xor
imul
sub
push
pop
cmp
sbb
bound
mov
xchg
mov
jmp
adc
cs
scas
sub
add
int3
repz
call
sub
leave
sub
js
pop
in
push
aam
mov
sbb
jne
imul
ret
jbe
xchg
add
mov
movs
arpl
(bad)
popa
aad
call
test
pop
test
fsub
(bad)
clc
sbb
in
sub
in
iret
jno
fistp
mov
out
pop
mov
not
nop
inc
test
or
push
stos
jb
jg
addr16
retf
dec
mov
(bad)
mov
fadd
in
mov
in
les
outs
bound
xchg
ins
ret
jecxz
mov
sahf
push
xchg
sahf
and
push
loope
maxps
inc
sub
mov
xchg
lock
and
xor
adc
pushf
and
sbb
aaa
leave
add
push
sbb
cdq
pop
test
into
jp
and
fdiv
jl
mov
push
mov
cmp
lsl
mov
and
les
fbstp
push
xor
test
jmp
push
inc
lods
dec
jle
xchg
out
pop
jmp
push
mov
pop
push
push
cli
cwde
inc
outs
shl
xchg
pop
sub
cli
xor
jnp
sbb
jno
or
push
fld
add
call
fs
mov
add
push
popf
pop
scas
int3
retf
jmp
mov
pop
hlt
or
push
mov
clc
xchg
dec
movs
fbld
movs
call
out
sahf
mov
cmp
sub
mov
fdiv
arpl
rcl
in
mov
sar
fcmove
xchg
pop
sub
cmp
cmp
cmp
fnstsw
hlt
mov
jmp
push
enter
pop
pop
imul
rcl
mov
sub
bound
cmp
pop
jnp
addr16
mov
stc
add
cmp
sub
push
ins
xchg
or
movs
(bad)
imul
push
idiv
popa
loopne
add
js
push
rol
jno
ins
push
adc
or
dec
sbb
jns
cmp
(bad)
mov
rcr
mov
ss
and
test
(bad)
(bad)
sti
movs
xchg
in
jb
mov
push
or
mov
or
dec
es
mov
shl
ret
push
cwde
pop
mov
int3
outs
xor
fisttp
fimul
adc
lods
push
int3
rcr
fisttp
pop
mov
addr16
out
xchg
xchg
sbb
cmp
inc
in
enter
test
idiv
sub
std
push
sbb
in
mov
test
or
mov
pop
push
cmps
scas
push
mov
rcl
xlat
icebp
sbb
shl
mov
dec
mov
je
mov
out
or
adc
std
fwait
test
js
sub
dec
and
lea
fist
cmc
rcr
mov
xor
sti
or
mov
in
fcomp
aam
cmps
iret
fmul
push
rol
inc
clc
imul
das
and
lock
outs
mov
cmc
rol
shld
fimul
sub
and
adc
add
dec
movs
popf
pop
dec
ins
mov
int
push
xchg
mov
mov
shl
pop
push
inc
(bad)
xchg
repz
inc
dec
cmps
push
aam
add
mov
push
aam
jnp
dec
pop
fdiv
jmp
jo
jno
cwde
lock
mov
es
fsubp
je
sub
dec
jns
xchg
mov
jge
xor
jbe
arpl
shr
out
pusha
out
iret
mov
xor
(bad)
adc
repnz
repnz
add
sbb
ficom
jne
loopne
cmp
(bad)
cmps
push
sbb
popa
sbb
setne
ins
mov
ret
or
sbb
fimul
mov
jmp
cli
fwait
pop
adc
cmovbe
es
or
fist
cmp
push
jo
push
in
jnp
xchg
add
ds
jge
sbb
sub
ror
(bad)
mov
(bad)
inc
mov
mov
out
ins
loopne
push
fisttp
std
loopne
clc
stos
jae
mov
jecxz
fmul
jne
xchg
cdq
jge
mov
xlat
or
push
pop
cmps
mov
outs
dec
pusha
jecxz
add
add
das
pop
push
mov
xor
add
fwait
(bad)
adc
xor
iret
shl
sbb
loope
jecxz
in
cmps
and
cmp
test
push
adc
je
inc
push
rcr
aas
imul
call
fdiv
inc
add
out
pop
test
test
bound
inc
lds
sub
shl
outs
and
je
pop
(bad)
into
shl
add
mov
ss
jbe
or
addr16
dec
mov
xchg
inc
fwait
pop
aas
(bad)
in
pushf
mov
jns
push
push
mov
outs
jg
push
inc
jge
aad
jg
inc
stos
xchg
lock
call
xor
sbb
loop
inc
mov
pop
pop
sbb
les
imul
sub
pinsrw
rcl
in
shr
and
cmp
div
shl
sar
push
xor
mov
(bad)
jl
adc
fdecstp
sbb
adc
xchg
fisttp
pop
inc
pop
fist
loop
jecxz
pop
xchg
outs
sub
and
int
sub
mov
(bad)
mov
adc
jle
(bad)
jnp
enter
repnz
pushf
leave
xchg
push
daa
fild
xchg
push
jecxz
add
dec
adc
mov
mov
xchg
(bad)
or
sahf
jmp
es
scas
add
sar
jne
idiv
mov
popa
jmp
pop
push
(bad)
movs
movs
push
ror
pushf
and
jmp
cmp
movs
xchg
rol
jmp
push
adc
cmp
fbstp
or
sub
shr
ficomp
xchg
test
jnp
das
jl
out
retf
jno
std
inc
jle
test
outs
push
test
pop
addr16
inc
mov
in
shr
jp
mov
retf
sbb
mov
loop
enter
test
movs
scas
out
ds
fadd
mov
arpl
loop
addr16
int
rep
xchg
push
ins
sbb
xchg
xchg
mov
dec
jns
push
inc
das
lods
daa
in
jmp
jecxz
arpl
mov
jnp
retf
(bad)
jmp
shl
xchg
fwait
dec
xchg
(bad)
ficomp
mov
mov
aam
xor
lods
adc
inc
outs
push
pop
and
aaa
(bad)
mov
push
mov
jno
push
popa
pusha
ret
add
mov
iret
add
sub
not
xor
push
fcomp
xchg
pop
mov
mov
into
in
mov
or
cmp
loope
cmps
pop
pop
js
cli
fs
js
out
push
(bad)
mov
mov
jae
or
das
cmp
(bad)
out
and
push
lods
mov
retf
or
or
and
or
xor
loope
xor
mov
and
ss
or
and
cli
xor
stc
scas
dec
aaa
mov
inc
test
add
pushf
test
sbb
xchg
rcl
pop
xor
cli
mov
xchg
xchg
loop
jb
(bad)
(bad)
adc
loope
cli
clc
push
scas
fld
out
clc
push
xchg
lock
js
in
sbb
call
arpl
push
mov
ds
xor
dec
sub
stos
cmp
jmp
dec
popa
clc
push
(bad)
lock
lahf
mov
enter
sti
jp
sub
jg
popf
mov
inc
imul
fst
daa
inc
ret
mov
jl
pop
mov
dec
and
sar
pop
fsubr
sbb
ret
dec
pop
adc
cmps
mov
mov
stc
and
sar
push
cdq
sbb
mov
mov
adc
or
jb
push
add
jl
in
sub
ret
push
in
cmps
jne
pop
jnp
xchg
test
(bad)
mov
sub
mov
inc
jp
or
mul
xor
jg
(bad)
call
sahf
ss
shl
outs
cmp
es
mov
xchg
ja
xchg
arpl
or
nop
scas
rcr
dec
rcr
ficomp
push
mov
adc
sbb
cli
or
or
aas
xchg
ret
jecxz
adc
pop
repnz
sub
mov
jle
pop
push
lea
inc
dec
pop
test
int
(bad)
push
jp
div
and
xor
cdq
push
movs
rol
jp
repz
loope
push
mov
fs
into
fnstcw
test
xor
jl
(bad)
jb
inc
xchg
jl
rcl
jb
aad
adc
inc
inc
pop
and
das
out
xchg
bound
xor
mov
cwde
les
pop
ret
dec
cmp
ret
add
sub
pop
(bad)
addr16
add
mov
jnp
xchg
icebp
in
sub
or
mov
icebp
mov
(bad)
xor
push
aaa
repnz
dec
enter
loopne
adc
mov
push
mov
cwde
les
pop
xchg
ret
push
cmp
aas
and
arpl
xchg
dec
xor
push
cmp
dec
cmp
push
mov
jp
lahf
cmps
push
push
sbb
not
in
pop
mov
xchg
cmps
sub
xor
and
xchg
test
or
and
pop
clc
push
mov
out
in
adc
arpl
in
pop
add
fstp
jbe
fimul
xchg
mov
cmp
outs
es
pop
cmp
leave
je
mov
push
mov
icebp
loopne
(bad)
gs
fst
adc
inc
into
mov
add
(bad)
dec
aam
(bad)
(bad)
cmp
in
pusha
in
xlat
lahf
push
jmp
mov
pop
inc
shl
xchg
xchg
jo
fwait
push
dec
fs
frstor
cld
pop
js
lea
das
aam
jmp
adc
or
dec
add
mov
ret
mov
mov
(bad)
rcl
and
mov
mov
xlat
xchg
mov
mov
jne
stc
sbb
mov
inc
mov
fiadd
mov
jmp
fisttp
(bad)
or
das
and
mov
out
data16
test
mov
(bad)
sti
and
xchg
lods
adc
mov
retf
cmps
test
dec
sbb
ret
iret
inc
div
sbb
test
loope
sub
movs
ins
cmp
jne
inc
sbb
arpl
sti
jl
push
(bad)
ja
cmp
nop
add
test
xchg
push
in
movs
fidivr
jno
and
cmp
xchg
pop
and
mov
aad
or
sbb
(bad)
jmp
icebp
(bad)
cld
fistp
scas
cwde
mov
add
mov
or
in
inc
out
neg
add
adc
ror
loope
sub
cmc
inc
inc
sub
mov
pop
dec
pop
dec
std
mov
inc
cmp
inc
jp
jne
xor
dec
sub
adc
jecxz
stos
or
jmp
(bad)
jg
add
mov
xchg
inc
ins
aas
(bad)
mov
sub
out
lods
sbb
int
xchg
jnp
mov
mov
(bad)
adc
xor
cmp
mov
mov
shl
mov
mov
and
std
xchg
and
loop
repz
and
cs
mov
push
and
push
ins
mov
in
arpl
sti
jge
int3
scas
(bad)
xor
sub
(bad)
pop
inc
sub
adc
sahf
sub
nop
mov
push
cmp
jmp
inc
and
push
mov
inc
cli
xor
mov
mov
repnz
dec
cmps
push
call
or
mov
mov
test
icebp
dec
ins
ret
xchg
retf
inc
cmp
or
add
movs
or
jno
mov
scas
shl
mov
xchg
popa
ins
and
jno
push
aas
ss
push
gs
jns
iret
call
pop
and
mov
pop
xchg
xor
push
inc
mov
and
pop
ret
mov
sub
push
ja
sbb
pop
int
xchg
add
loopne
sbb
mov
fist
out
pop
test
pop
mov
xor
ds
call
mov
pop
jbe
repnz
push
mov
je
imul
sub
sub
js
add
mov
cmp
rcr
adc
(bad)
xlat
jns
xor
push
out
lods
and
mov
mov
mov
jnp
pop
stc
adc
es
ret
arpl
mov
scas
(bad)
cld
push
hlt
push
mov
and
stos
sub
mul
int3
xor
mov
xchg
xor
lods
sub
jns
mov
into
test
rcr
js
xchg
push
clc
push
push
inc
push
xchg
sub
xchg
inc
das
or
xlat
fisubr
pop
(bad)
dec
xchg
pop
jno
jb
stc
out
push
in
or
in
popf
aam
xor
mov
dec
sbb
cmp
xchg
iret
push
push
fdivr
push
push
jne
repz
xor
mov
repz
dec
hlt
cmp
sbb
xor
sbb
push
es
rol
sub
test
or
or
imul
add
dec
retf
(bad)
movs
out
cmc
dec
mov
ret
int
xor
and
sbb
xchg
cmps
push
out
repnz
add
xor
mov
and
cmp
test
pop
imul
(bad)
mov
in
jo
test
mov
les
pop
or
sti
mov
push
ja
in
or
loop
pop
inc
sub
fxch
pmaxub
mov
call
mov
(bad)
xor
cs
stos
push
sub
fist
push
dec
bound
xchg
aas
int
jnp
push
imul
adc
lahf
ja
(bad)
frstor
sar
xor
inc
das
pop
jnp
arpl
cmp
add
jl
jo
mov
and
les
arpl
fbstp
add
imul
les
and
js
mov
mov
mov
cmp
sub
stos
popa
jmp
add
push
jbe
push
pop
sbb
fsub
cmp
xor
push
mov
(bad)
and
dec
outs
xchg
mul
pop
test
int
push
jge
add
ret
(bad)
push
sar
stos
mov
or
clc
fcomp
lock
adc
popf
test
add
push
ret
dec
std
mov
sub
test
daa
inc
adc
outs
sbb
lock
pop
je
outs
xchg
jns
jge
jmp
mov
mov
aam
or
push
mov
cmp
jb
fwait
retf
aaa
mov
add
ror
fisubr
sbb
test
mov
cld
call
(bad)
rol
xor
xlat
test
mov
mov
stos
imul
mov
scas
push
arpl
and
mov
mov
cmps
fwait
repnz
lock
leave
std
xor
pop
xor
adc
das
dec
into
(bad)
jmp
jge
mov
and
or
push
dec
jmp
ins
mov
test
xchg
cmp
lods
xchg
mov
test
add
add
sahf
mov
adc
sti
xor
inc
push
out
data16
repz
jo
or
pusha
gs
xchg
add
imul
sub
fisttp
hlt
mov
pop
out
loop
cmp
mov
mov
xor
shl
leave
push
inc
inc
add
iret
in
xchg
jo
fmulp
jle
out
sbb
sub
stc
mov
dec
xor
call
js
aaa
mov
push
ss
push
mov
aas
inc
push
sub
jns
ins
ins
push
retf
mul
(bad)
arpl
in
jnp
mov
push
mov
lods
stc
mov
xlat
outs
test
jno
pop
inc
int
test
mov
dec
jnp
sbb
repz
push
pop
mov
mov
imul
mov
data16
call
(bad)
jmp
retf
ds
cmp
repz
adc
sub
push
dec
cmp
jb
jnp
int
ret
stc
adc
jns
xor
enter
pop
cmp
test
fnstcw
data16
sbb
mov
pop
mov
sbb
lock
xchg
and
repz
add
ret
cmp
hlt
xor
add
mov
loop
dec
ins
pop
jo
and
ret
cmp
pop
or
or
shl
inc
icebp
xor
or
dec
ror
test
bound
out
xchg
fsub
popf
inc
lahf
xchg
data16
pop
aas
inc
and
idiv
or
stos
dec
inc
or
inc
dec
inc
fild
cdq
leave
mov
daa
mov
stos
outs
mov
pop
jae
loope
mov
add
xchg
mov
dec
fisub
test
test
mov
mov
and
loopne
in
or
mov
dec
xlat
adc
lea
aaa
inc
imul
pop
loope
stos
jg
cdq
int3
pop
fist
jmp
imul
cmp
jg
sub
mov
je
adc
sar
retf
dec
call
pop
inc
cmp
ins
xchg
bound
adc
mov
inc
add
(bad)
pop
ror
xchg
je
imul
out
pop
icebp
jbe
fisttp
inc
aam
test
xchg
inc
stos
dec
bound
aaa
ds
sbb
daa
inc
pushf
dec
xchg
jmp
mov
fisub
push
sahf
xor
iret
pop
clc
mov
dec
in
mov
sbb
sar
mov
sub
mov
movs
(bad)
sub
xchg
fdiv
into
jae
xchg
scas
sub
call
mov
jp
push
xor
test
loopne
add
jmp
stc
xor
pop
sbb
or
hlt
int
enter
imul
xchg
fcom
clc
sub
bound
pop
push
cdq
sbb
add
or
and
mov
or
call
aaa
mov
js
aas
loopne
mov
int
fisttp
mov
pop
ds
daa
scas
fs
mov
out
loop
and
add
in
stos
pop
fisubr
mov
inc
icebp
sar
call
pop
pop
mov
not
cmp
pop
xor
jl
and
test
push
push
(bad)
xor
pop
stc
int
fcomp
jb
imul
pop
cmp
push
iret
call
ja
inc
mov
int
mov
rol
pusha
xchg
push
cwde
test
arpl
add
inc
mov
mov
and
sti
jmp
sub
in
ins
aad
jo
fcom
push
mov
and
mov
ss
call
push
jle
jl
mov
jo
sub
sub
cli
hlt
fnstcw
mov
and
pusha
loopne
aad
dec
lds
out
push
jbe
loopne
mov
add
sub
adc
inc
ret
cmp
loopne
es
fs
mov
data16
push
sbb
scas
loope
push
mov
in
adc
out
ror
pop
nop
xchg
sub
cld
outs
add
shl
aam
cmps
popf
sti
mov
mov
iret
sub
jmp
and
scas
xor
nop
rcr
adc
jno
iret
xor
jmp
pop
lds
(bad)
rcr
sbb
inc
add
sbb
fmul
mov
lods
xor
in
pop
ss
jle
test
mov
mul
pop
xchg
jno
cmp
xor
pop
cwde
ins
test
xor
pop
jecxz
push
adc
lods
mov
pop
gs
fstp
jge
add
mov
dec
or
mov
test
and
xor
sub
fld
mov
push
xchg
neg
cli
ret
in
jb
rol
fbld
dec
mov
add
addr16
jp
adc
cld
xchg
(bad)
fist
push
(bad)
mov
jl
in
dec
leave
adc
jmp
in
jecxz
pop
test
adc
or
sub
mov
stos
dec
stc
repz
and
xor
xchg
scas
jmp
loop
lock
call
cmp
jb
inc
mov
aad
xchg
cmp
leave
ss
stos
jp
out
sbb
sbb
sbb
mov
sub
mov
sbb
fnstenv
mov
fnstenv
fist
xchg
xor
loop
pop
leave
add
inc
or
jo
nop
and
(bad)
mov
cmps
(bad)
retf
das
jbe
cmp
popa
mov
cmp
in
in
test
or
scas
jmp
sahf
enter
loop
inc
sbb
fdiv
test
mov
pop
inc
jae
adc
mov
mov
out
push
add
ja
inc
push
cld
push
xor
xchg
mov
in
in
ja
shr
out
out
sub
adc
sub
test
jmp
clc
mov
cld
int3
data16
mov
loopne
pop
pop
ins
adc
fst
xor
movs
inc
lock
into
add
add
ficom
cwde
mov
inc
add
xchg
jmp
outs
pop
xor
retf
sub
jae
adc
inc
nop
mov
pop
pop
int3
mov
pop
fcmovnu
js
retf
xchg
addr16
xlat
xor
jp
push
adc
mov
sub
push
movs
aad
sbb
in
cs
mov
dec
ret
shl
stc
sbb
sub
sbb
test
outs
mov
leave
push
aam
movs
xor
push
loope
sub
in
dec
cmp
sub
or
inc
jle
xchg
add
(bad)
hlt
ins
icebp
xchg
int3
test
inc
nop
xchg
stc
mov
aaa
fstp
pop
jae
leave
test
stc
(bad)
sbb
call
fldenv
(bad)
aam
lods
adc
dec
jg
pop
inc
jnp
push
cmp
and
fst
in
pop
add
in
or
out
xlat
call
mov
sub
aam
cdq
es
xchg
inc
xchg
inc
lods
mov
sbb
daa
adc
ins
sub
stos
cmc
fwait
jne
cdq
in
mov
sub
pop
xchg
jp
push
adc
ins
fmul
inc
xchg
(bad)
push
nop
sbb
push
data16
pop
xchg
nop
dec
mov
cmps
popf
stc
repz
push
scas
jmp
jnp
icebp
popa
cmp
cmps
xchg
or
push
mov
fs
push
(bad)
aad
dec
jns
scas
ds
mov
mov
ins
imul
in
in
inc
lea
pop
(bad)
aas
push
mov
jge
int
add
shl
aaa
add
or
xchg
cdq
test
xchg
sbb
hlt
cmp
out
sub
mov
test
and
mov
sub
cmp
lds
add
ds
les
fisttp
repz
xlat
hlt
mov
push
push
push
(bad)
and
adc
pop
into
mov
jle
fbld
xlat
cmp
mov
inc
and
js
mov
and
jmp
push
test
scas
arpl
stos
xor
or
jl
std
xchg
dec
add
or
(bad)
mov
sub
call
sub
xchg
rcr
push
sbb
jl
jns
test
daa
loop
stc
cmp
push
(bad)
fsubr
pusha
pop
rol
dec
bound
fdivp
sub
inc
cmp
mov
sub
sbb
cmp
test
xchg
inc
scas
ror
movs
cmp
shr
pop
or
sub
sbb
out
aad
sbb
rcl
jmp
(bad)
pusha
bound
test
je
xor
push
inc
sub
inc
and
mov
sbb
or
in
(bad)
mov
jle
inc
or
je
xchg
call
inc
(bad)
cdq
fld
loopne
dec
mov
xchg
pop
loope
lea
icebp
(bad)
cmps
dec
cmp
loopne
push
add
dec
call
les
fimul
sub
loopne
inc
fcom
cdq
adc
pop
or
adc
in
iret
es
mov
mov
les
pop
add
dec
or
jns
pushf
dec
jmp
icebp
jb
fstp
inc
sub
bound
ror
in
std
push
push
lea
aaa
pop
shl
jle
retf
aad
enter
pop
imul
adc
cmps
cli
dec
adc
imul
pop
test
hlt
pop
bound
sbb
sar
cmp
mov
leave
test
pop
jo
or
ret
mov
push
lea
cmp
push
add
mov
test
and
movs
inc
leave
jmp
jmp
mov
xchg
(bad)
ficomp
mov
aas
call
and
adc
or
dec
push
cmp
(bad)
lods
inc
and
shl
cmps
sub
fwait
add
movs
outs
push
scas
addr16
in
or
mov
into
into
repz
pushf
xor
cmc
and
jle
iret
cmp
pop
mov
mov
adc
push
adc
mov
cmp
fs
adc
push
pop
ret
mov
mov
bound
hlt
mov
mov
movs
repz
push
sbb
out
icebp
ja
fwait
aas
fcomp
popf
and
mov
in
loopne
lods
fldenv
adc
push
jg
sbb
push
out
(bad)
cld
sub
adc
mov
pop
repnz
inc
les
push
aas
add
xchg
sbb
icebp
dec
ret
mov
(bad)
in
cmp
inc
dec
sub
es
and
cmovae
popa
sub
int
mov
push
mov
into
jmp
pop
cmp
push
sbb
xchg
jae
ret
xchg
jo
daa
rol
enter
push
pop
repz
sub
fs
cmc
add
mov
stos
jmp
fldcw
push
(bad)
xor
jge
xor
xlat
push
das
sbb
out
or
lea
mov
mov
mov
imul
inc
jo
data16
pop
mov
cdq
and
out
xchg
sahf
or
cld
fbstp
dec
(bad)
and
rcl
dec
jbe
sti
xchg
mov
dec
ret
sbb
xchg
mov
ja
call
or
jg
jmp
sbb
adc
jns
enter
out
test
add
mov
aas
sub
cs
dec
movs
pop
call
sub
cmp
adc
movs
cmp
shr
out
cmp
push
ret
inc
adc
or
les
xor
mov
aam
bound
ss
outs
dec
outs
rcr
sbb
mov
mov
mov
jns
sbb
and
daa
lock
test
cwde
inc
aaa
sbb
push
inc
rcr
add
jnp
out
sub
lahf
fdiv
add
hlt
pop
or
(bad)
mov
adc
mov
jns
mov
dec
sar
xchg
mov
shr
jg
xor
cs
retf
outs
mov
sub
in
pop
aad
rol
adc
int3
(bad)
rol
or
xor
adc
jmp
ret
movs
inc
cli
sbb
in
sbb
mov
call
mov
fwait
xor
mov
sub
pop
add
or
add
mov
mov
(bad)
ficomp
fisub
out
sahf
and
push
ja
ins
and
jbe
call
mov
repz
stos
cmp
mov
and
mov
popf
rcr
out
sub
es
int3
push
or
int3
mov
jae
or
mov
cmc
push
cmc
mov
mov
ror
stos
(bad)
outs
inc
ret
cdq
not
dec
icebp
dec
retf
and
fsubr
pop
lods
sub
push
shl
sbb
test
idiv
out
xchg
les
mov
imul
es
into
(bad)
hlt
dec
sahf
sub
jmp
xchg
dec
sub
int3
stos
hlt
mov
bound
out
or
packsswb
movs
fldcw
loope
pop
retf
jg
movs
xor
adc
pop
xor
xchg
retf
dec
in
jmp
adc
and
js
outs
retf
lock
in
mov
inc
cdq
add
push
mov
loop
xor
adc
(bad)
pop
dec
aaa
jg
add
sub
mov
addr16
and
mov
fisttp
lods
xchg
mov
push
lods
dec
adc
ret
adc
sub
aaa
iret
in
jmp
lock
jg
loope
fbld
inc
xor
addr16
cld
stos
lods
dec
cwde
add
mov
test
add
mov
icebp
mov
cmp
add
mov
mov
jo
jne
and
loopne
xchg
xchg
inc
mov
xchg
scas
gs
push
mov
lods
aaa
cs
push
(bad)
aad
dec
xchg
retf
mov
sbb
daa
xor
adc
pop
(bad)
jecxz
xor
inc
push
jns
mov
adc
inc
mov
mov
je
jge
mov
jae
test
in
cmp
test
cmc
iret
mov
in
cmc
jecxz
mov
cld
mov
dec
iret
inc
mov
push
or
sub
out
lds
xor
cmp
ret
cmp
div
jmp
xor
and
mov
popa
mov
pusha
inc
fs
psubsb
(bad)
and
fstp
adc
mov
aaa
add
adc
push
call
dec
dec
jg
jl
cmp
jecxz
lds
shr
jmp
sbb
or
inc
push
jp
sub
cmps
cdq
ja
(bad)
add
mov
or
rcr
or
mov
inc
add
fdiv
fbstp
sbb
inc
in
ja
out
sub
ds
addr16
jmp
xchg
arpl
inc
in
cmp
mov
lahf
jg
mov
dec
xlat
in
imul
in
popa
in
ds
mov
xchg
and
xchg
add
mov
cmp
leave
nop
push
push
mov
lods
and
fmulp
xor
or
push
mov
out
inc
out
rcl
pop
push
scas
adc
mov
inc
pushf
lods
mov
fs
in
xor
sbb
mov
cmps
fs
mov
and
inc
mov
inc
push
and
inc
stos
cmp
add
push
xor
and
test
fxch
test
cmps
mov
inc
pusha
and
sbb
xor
dec
pop
outs
retf
data16
mov
in
fwait
test
sar
jge
xchg
add
jg
dec
loope
cmc
cdq
inc
mov
lock
dec
cmp
mov
nop
and
(bad)
outs
mov
retf
sbb
xchg
popf
sub
add
out
popf
push
(bad)
xor
dec
dec
dec
cmp
arpl
push
sbb
sub
retf
inc
aaa
push
push
dec
mov
push
sub
test
mov
sti
lea
xchg
scas
and
test
or
popf
arpl
xor
xor
std
aaa
mov
push
add
aad
pop
cmp
out
data16
aad
cvtpi2ps
sbb
xlat
mov
into
outs
aam
jmp
pop
mov
shr
je
int
repz
cmp
scas
jecxz
mov
jns
sbb
pop
shl
sub
outs
in
aaa
aaa
xchg
ins
dec
adc
aad
xchg
xor
sbb
cmps
jae
push
aaa
call
inc
adc
add
mov
add
xchg
gs
ss
hlt
daa
stos
and
xlat
loop
mul
mov
call
shl
out
jno
pop
bound
add
(bad)
loope
dec
pushf
hlt
mov
aad
fist
xor
paddq
add
jg
jno
dec
test
mov
ret
mov
and
cmps
push
mov
aad
fld
imul
adc
call
addr16
stos
loop
fwait
jp
fistp
je
sbb
ret
mov
loop
dec
jo
ds
xchg
lods
in
pop
xchg
loopne
jbe
ficomp
mov
adc
je
out
ds
pop
mov
add
clc
repnz
and
jmp
cdq
mov
inc
dec
pop
aaa
xor
scas
or
dec
inc
enter
sbb
cmp
into
dec
inc
jno
xchg
xor
test
jb
push
or
pop
mov
jp
aam
push
mov
mov
sahf
ret
xor
std
mov
aaa
gs
xor
push
jno
outs
jnp
enter
out
mov
or
nop
inc
ror
xchg
push
mov
mov
push
addr16
or
sti
mov
xchg
jecxz
rep
xor
scas
cmc
sub
sbb
fdiv
sahf
sar
and
jle
in
mov
lock
or
cmp
imul
adc
or
icebp
pop
fadd
mov
sbb
and
fstp
popf
mov
push
xchg
add
mov
dec
mov
adc
lods
xor
add
(bad)
xlat
cwde
and
add
or
xor
xor
pop
imul
gs
neg
stc
rcl
clc
enter
pop
xchg
(bad)
push
push
rcr
and
mov
pusha
daa
(bad)
jmp
dec
inc
pop
pop
cdq
jge
cmp
or
dec
std
rol
cmps
je
inc
test
enter
dec
fild
(bad)
ins
fadd
push
xor
fwait
add
push
or
lds
mov
cdq
sub
xchg
loope
pop
neg
xor
jae
outs
sbb
(bad)
sbb
fiadd
jmp
mov
add
xchg
sbb
pop
dec
cmp
fisubr
pop
outs
pusha
push
pop
pop
or
into
aad
cli
ficom
int
sub
jae
fld
push
jae
in
(bad)
(bad)
popf
scas
adc
dec
cld
xchg
push
popa
mov
stos
sbb
not
dec
mov
and
(bad)
in
jl
shl
jl
pop
and
(bad)
aaa
mov
les
xor
std
mov
(bad)
pop
ficomp
mov
cmp
sub
nop
inc
pusha
mov
fbstp
inc
cdq
pop
sbb
inc
push
pop
(bad)
fldcw
sub
xchg
ss
xlat
and
add
in
movs
add
ja
cdq
stos
and
jns
and
mov
adc
and
mov
ror
arpl
outs
xchg
cmp
pop
fnstenv
xor
inc
pop
dec
in
arpl
pop
hlt
aam
add
in
lock
jne
pop
cmp
pop
inc
xor
gs
cmp
mov
xor
nop
lock
cmps
repnz
inc
ret
rcr
sbb
dec
push
adc
push
mov
fcmovnbe
sub
mov
xlat
or
repnz
hlt
mov
add
neg
js
js
push
fnstenv
mov
xor
cmps
imul
ret
es
test
dec
(bad)
fwait
aad
pop
(bad)
jae
in
ret
int
lahf
div
push
mov
dec
jno
adc
and
xchg
popf
pop
out
ret
lods
std
sahf
jo
lds
adc
scas
jmp
sbb
call
in
xchg
lods
and
push
pushf
dec
les
push
bound
pop
xchg
mov
imul
inc
repz
jmp
aad
and
mov
scas
push
push
add
imul
dec
push
cmps
sti
arpl
icebp
jle
lahf
inc
sahf
pop
dec
mov
sbb
mov
fs
std
and
push
cdq
loope
mov
addr16
leave
xor
pop
ds
pop
inc
inc
adc
fidiv
and
sub
jecxz
sub
and
fs
sbb
inc
sbb
sub
aam
xor
ss
in
sbb
dec
call
test
out
cmp
test
dec
jle
and
mov
jp
xor
sar
adc
cmps
test
and
rol
sub
movs
pushf
mov
cmp
dec
dec
pop
jmp
scas
mov
data16
jle
jns
pop
in
dec
shr
or
in
cwde
scas
xor
pop
push
adc
nop
mov
fstp
rcl
test
and
jle
sub
mov
jecxz
movs
xor
push
pop
out
je
test
daa
cwde
movs
popf
retf
jmp
popa
aaa
pop
push
adc
adc
adc
or
push
pop
in
add
cmps
adc
cmp
mov
or
pop
fidiv
inc
jg
pop
(bad)
push
loopne
leave
cmp
mov
pop
mov
es
lds
push
mov
int
push
lea
gs
jecxz
ficomp
jp
(bad)
in
imul
mov
xchg
push
movs
mov
and
loop
idiv
call
and
cmp
jmp
adc
jns
cmp
cmps
mov
dec
xchg
push
and
sbb
pop
lods
xchg
push
sahf
and
test
scas
cwde
dec
add
inc
cs
stos
(bad)
pop
push
or
xchg
popa
inc
fiadd
mov
cdq
fidiv
inc
sub
sahf
cs
ds
mov
outs
(bad)
call
mov
fcomp
in
pop
mov
div
mov
mov
sbb
mov
push
xor
pminsw
add
loopne
jne
xchg
push
mov
outs
sub
test
lds
sar
retf
shr
jl
inc
mov
jo
stc
pop
jg
lds
xor
add
push
fdiv
sub
and
cmp
pop
(bad)
dec
shl
out
daa
into
add
xor
mov
xchg
pushf
ss
inc
call
repz
stos
jmp
add
and
call
(bad)
fmul
or
inc
dec
add
or
jo
push
pop
cmp
test
ins
sbb
adc
mov
sub
in
or
jb
and
and
sahf
sbb
aam
pop
xchg
lods
outs
movs
lods
mov
nop
mov
adc
arpl
sub
test
cmp
push
lods
rcr
shr
and
mov
jb
jo
sub
dec
mov
dec
and
or
pop
adc
aas
ds
mov
icebp
jmp
fimul
ss
push
jo
hlt
sub
aad
sub
jne
or
int3
stos
loopne
sbb
and
and
pop
and
mov
lods
cld
cs
jo
imul
out
add
cmp
push
inc
or
or
outs
pop
stos
mov
xor
mov
gs
sbb
jb
int
xchg
outs
cmps
cld
(bad)
(bad)
lods
cmp
xchg
imul
fwait
adc
(bad)
lods
adc
cld
leave
mov
rcl
je
xor
or
cld
mov
jb
movs
stc
sub
imul
cmps
retf
pusha
push
sub
ins
jecxz
cmp
push
pop
arpl
push
daa
cli
cli
mov
sub
scas
test
xchg
mov
adc
push
jg
enter
enter
pop
mov
mov
pushf
mov
aad
(bad)
jl
sub
pop
lahf
std
xchg
fsubr
push
pop
inc
mov
lds
sbb
stos
outs
int
jb
iret
sbb
inc
jo
fcmovne
pop
sar
inc
jmp
and
ret
mov
sbb
add
repz
add
mov
test
(bad)
xor
mov
bound
and
mov
mov
lahf
rcl
xor
xor
jne
xchg
pop
mov
cs
out
in
jge
pusha
fmul
xor
movs
es
(bad)
mov
mov
cmp
mov
out
in
mov
ret
aam
ror
sub
jne
inc
jle
mov
dec
imul
cli
inc
dec
(bad)
and
movs
test
das
ficom
dec
or
(bad)
jg
retf
mov
or
adc
push
rol
add
out
push
xchg
dec
cwde
pop
cmps
stos
and
and
push
lods
aam
ins
fcom
jae
pop
fistp
mov
ss
test
fmul
cmp
jbe
push
nop
mov
and
pop
sbb
enter
into
mov
pusha
dec
jl
sbb
jns
test
repz
sbb
icebp
cmp
inc
in
dec
xor
inc
pop
lahf
fistp
inc
xchg
mov
push
in
sbb
in
lss
int3
sti
mov
stos
pop
retf
xchg
mov
bsr
jg
fst
fcom
imul
xchg
aaa
out
jnp
pop
add
and
cli
imul
movs
loopne
scas
pushf
mov
push
inc
neg
call
push
or
push
or
stc
mov
popf
fiadd
out
popf
loope
arpl
test
inc
cmp
mov
(bad)
repnz
ret
mov
sar
push
and
pop
jns
(bad)
cmc
push
clc
call
int
fnsave
push
inc
jg
(bad)
in
sub
fdiv
jno
clc
ret
mov
mov
jg
pushf
fs
loopne
jbe
pop
sbb
push
leave
int3
nop
xchg
push
(bad)
xchg
mov
or
mov
mov
outs
aad
rcl
dec
sbb
push
jno
lods
loop
leave
xlat
jmp
cmps
mov
jmp
imul
movs
jb
push
inc
jno
mov
pop
mov
cmp
imul
movs
cli
mov
mov
and
and
inc
inc
in
cmp
or
movs
repnz
mov
mov
push
mov
mov
cmp
jno
scas
call
mov
cmps
or
enter
dec
nop
js
lock
loopne
dec
push
mov
xor
std
loope
dec
pop
hlt
loopne
push
and
inc
mov
cmp
popf
jno
iret
jmp
stc
mov
adc
sbb
push
test
add
in
and
call
jbe
xchg
adc
mov
or
iret
pop
xchg
retf
mov
cmps
fcom
cmp
add
dec
pop
dec
movs
ins
mov
jbe
scas
add
inc
add
inc
fwait
sahf
pop
(bad)
inc
das
cli
hlt
pop
shr
stos
jbe
mov
add
(bad)
mov
ss
lock
jbe
and
mov
xor
icebp
pop
js
and
mov
xchg
(bad)
push
(bad)
loop
xchg
mov
test
loop
inc
xor
lock
or
mov
jmp
cmovg
push
dec
or
or
fst
push
je
or
jg
mov
mov
xlat
outs
mov
inc
(bad)
add
daa
push
scas
pop
mov
and
into
pusha
sub
xor
stos
xchg
mov
jae
ret
loope
mov
mov
int3
sahf
fsub
pop
pop
push
arpl
dec
jl
add
add
jecxz
jo
xchg
pop
in
push
ja
dec
sbb
and
pushf
(bad)
mov
ja
repz
add
lods
adc
sub
out
add
xor
(bad)
xchg
inc
push
mov
inc
pop
repnz
push
pop
outs
outs
lods
dec
adc
mov
ja
test
mov
sub
xchg
xor
xor
inc
aas
rcr
sbb
in
add
xor
inc
push
mov
add
mov
retf
adc
inc
adc
fistp
outs
jbe
repnz
addr16
xor
data16
adc
dec
pop
movs
call
dec
xlat
cs
out
fdivr
pushf
int3
sahf
sbb
cmp
jb
sar
ret
fadd
xchg
pop
mov
es
fs
dec
cmps
mov
out
jle
mov
les
outs
(bad)
jnp
lods
sbb
aas
movs
test
lahf
xor
fild
test
push
add
push
push
test
mov
loop
clc
adc
inc
pop
ins
pop
fiadd
cmps
push
xchg
ja
stos
xchg
push
cmp
push
pop
(bad)
ror
and
outs
fcomi
jge
dec
add
outs
mov
mov
dec
ss
xlat
popf
dec
add
inc
cli
inc
adc
xchg
repz
adc
(bad)
mov
jl
test
mov
aaa
(bad)
jnp
data16
mov
pop
mov
dec
dec
psrlq
lock
xor
pop
sbb
out
out
mov
jne
cmp
rcr
ror
pushf
stc
pop
call
clc
outs
cwde
ret
inc
push
adc
lods
iret
sub
push
mov
push
rcr
sub
push
mov
mov
sbb
clc
(bad)
call
popf
je
jbe
pop
pop
pop
xchg
push
rcl
test
mov
lods
lahf
fisubr
or
pop
rcl
push
inc
hlt
mov
jg
jge
adc
cdq
data16
loope
les
ret
xchg
shl
scas
jp
pop
add
sbb
test
rol
movs
xchg
cmc
stos
xchg
mov
dec
mov
ja
inc
push
cli
bound
(bad)
sbb
xchg
(bad)
dec
add
sub
xchg
data16
je
je
or
or
pusha
inc
lds
nop
out
mov
loopne
push
mov
idiv
ins
push
das
and
ret
ds
in
jb
pop
inc
jl
push
sbb
sub
add
add
add
leave
(bad)
in
push
arpl
(bad)
dec
(bad)
mov
repnz
mov
xchg
pushf
repz
rcl
mov
das
lods
cwde
cmp
sub
xor
or
outs
div
fild
out
rcl
mov
cmc
inc
mov
push
add
mov
or
dec
lock
cmp
xchg
mov
retf
ficomp
push
aaa
gs
pop
inc
(bad)
adc
jmp
outs
add
push
add
cmp
ror
lds
fidiv
and
pop
inc
jo
push
inc
inc
or
movs
or
cld
div
test
dec
and
fcomp
(bad)
jmp
rcr
je
jl
dec
dec
inc
les
sahf
adc
dec
repnz
call
add
shl
pop
add
mov
mov
ja
pop
mov
fcmovnu
mov
aam
aas
in
jge
mov
add
clc
lds
dec
mov
ret
pop
xor
jno
std
mov
les
jns
imul
rol
adc
pushf
xchg
cmps
movs
stos
jae
mov
add
xchg
jb
clc
inc
jecxz
fnstsw
imul
push
sub
fs
rol
jmp
push
(bad)
bound
add
add
add
int3
dec
daa
and
mov
fistp
dec
jo
xchg
or
push
(bad)
xlat
xchg
jmp
xchg
jge
mov
fstp
xor
out
daa
pushf
dec
out
or
pop
sbb
rcl
push
pop
lods
xchg
imul
outs
pop
rcr
push
adc
mov
retf
xchg
inc
and
in
ss
lahf
add
(bad)
xchg
or
int
mov
push
ja
sbb
call
add
pop
mov
mov
mov
mov
xor
(bad)
dec
cli
mov
scas
or
lds
call
data16
dec
sbb
xchg
cmp
movs
cmp
dec
push
mov
and
pop
js
cmps
mov
cmp
ja
mov
hlt
arpl
sbb
jns
cmovle
mov
sar
es
cmp
je
div
loope
mov
pop
mov
and
loop
jo
xchg
outs
cmp
sar
loop
pushf
or
sub
inc
std
test
sbb
and
mov
push
adc
jne
jecxz
jnp
mov
sbb
popa
pcmpgtd
mov
call
std
in
inc
cmp
cld
fnsave
push
movs
mov
sbb
and
add
loope
pop
arpl
inc
retf
pop
jle
cmp
cdq
push
and
cmp
or
(bad)
sbb
(bad)
sub
mov
adc
cli
push
ret
dec
popf
cwde
dec
dec
sub
push
xchg
add
adc
jbe
cmp
mov
xor
out
daa
push
jb
cwde
jo
shl
and
in
sets
ds
jno
test
jmp
stc
call
jmp
imul
pop
mov
push
cmp
xchg
inc
inc
cli
neg
or
push
(bad)
push
push
pop
and
aam
fiadd
adc
aam
int3
adc
mov
push
xlat
and
daa
dec
mov
addr16
xchg
repz
mov
repz
mov
mov
cli
out
pushf
fs
data16
jle
repz
cmps
mov
mov
sub
xor
movs
jae
add
dec
sbb
stos
sahf
repnz
fprem
push
add
in
(bad)
rcr
jno
xchg
adc
leave
ds
mov
mov
adc
test
mov
pop
sti
and
push
inc
xchg
jbe
push
scas
pop
call
and
retf
es
mov
mov
hlt
jge
rcl
mov
bt
imul
test
cmp
jae
sahf
scas
stos
fwait
jmp
cmp
jmp
sub
cdq
(bad)
mov
and
into
hlt
mov
xchg
imul
test
pop
imul
imul
push
sub
scas
and
imul
lock
aam
sahf
xor
xchg
test
xor
jo
rcl
add
sbb
mov
sbb
int3
ins
inc
fwait
or
bound
pop
add
or
jno
in
mov
mov
inc
dec
(bad)
ins
jb
sbb
cmp
sbb
cld
stos
cmps
mov
scas
add
daa
sub
push
test
ror
cmp
imul
clc
mov
hlt
fisub
xchg
mov
push
fsub
aad
bound
call
fadd
aaa
add
test
lock
adc
sbb
scas
test
out
aam
out
mov
(bad)
push
cmps
push
inc
das
inc
xor
das
mov
jecxz
fsubp
adc
inc
ret
xchg
pop
ffree
lods
loop
push
dec
daa
fsub
cmps
mov
imul
jno
cwde
imul
push
push
xchg
xor
xor
ror
sbb
out
mov
mov
mul
push
adc
pop
lahf
shr
xchg
mov
xlat
call
iret
sbb
sub
arpl
cmps
aad
clc
test
retf
and
add
sbb
xchg
test
sbb
std
xor
std
vpshld
pminub
adc
mov
dec
xor
stc
xor
fbstp
mov
fs
repnz
mov
pusha
rcr
xor
sbb
out
mov
mov
add
mov
push
clc
call
mov
xchg
test
mov
add
fwait
or
cmp
jno
add
aam
loop
jae
xchg
add
aaa
popa
sub
mov
cmp
sbb
sub
adc
pop
inc
(bad)
(bad)
jno
in
cmp
imul
out
ja
push
(bad)
jmp
mov
inc
mov
xchg
popf
cmp
mov
das
inc
(bad)
in
jo
mov
sub
push
retf
cmp
icebp
xor
das
sbb
mov
sub
fist
add
scas
push
mov
add
jecxz
xor
push
adc
lahf
inc
scas
loope
ds
vpermi2pd
fild
gs
cli
fdiv
and
mov
ja
mov
(bad)
into
sub
or
sbb
les
(bad)
sti
cdq
in
push
mov
out
sbb
scas
dec
jmp
mov
arpl
pusha
sar
xor
push
leave
add
(bad)
jbe
cmovne
or
repnz
mov
nop
fmul
inc
add
mov
loope
shl
mov
(bad)
pop
leave
mov
cs
cmp
pop
out
hlt
inc
popa
mov
int3
test
das
pop
jnp
jno
into
dec
js
xor
push
add
sub
in
retf
ss
dec
std
pop
imul
pop
push
fisubr
mov
leave
fldcw
stc
jb
mov
test
sbb
mov
ja
(bad)
jmp
jnp
rcl
cmc
xor
push
push
push
jg
mov
retf
pop
inc
dec
add
pop
mov
pusha
(bad)
xor
jnp
cs
lods
fbstp
lock
adc
fcomp
call
out
jno
loop
sahf
int3
sub
scas
xchg
mov
pop
aam
xchg
push
sub
push
and
dec
(bad)
and
ret
test
adc
pushf
cli
fprem
(bad)
and
(bad)
pop
inc
test
cmp
popf
xchg
or
sti
popa
fnsave
wrmsr
in
push
add
sub
dec
jb
lds
fistp
(bad)
hlt
add
mov
mov
sar
xchg
ins
cli
lock
mov
xlat
ja
mov
jl
adc
xlat
sbb
add
in
sahf
lds
push
push
xchg
dec
in
inc
into
pop
out
jmp
mov
out
jb
stos
inc
enter
mov
in
adc
lahf
adc
xchg
fisub
push
add
sti
mov
mov
arpl
jp
je
popf
mov
mov
xchg
jp
xchg
popf
mov
xor
into
shl
lods
hlt
add
pop
pusha
jbe
xor
dec
push
fisubr
add
cmp
push
mov
movs
into
scas
sahf
fs
mov
dec
sub
add
jl
arpl
sub
rcr
iret
cmp
cmp
xor
imul
ds
stos
jne
(bad)
iret
add
arpl
adc
cs
cmp
stos
cmp
test
pusha
test
xchg
cli
ja
bound
div
mov
pop
dec
mov
jo
mov
in
add
inc
add
movs
sbb
aam
mov
cmc
push
mov
outs
jmp
mov
cld
repz
fisttp
mov
test
mov
jb
lds
mov
push
sub
or
mov
call
jae
scas
cdq
xchg
pop
js
push
jp
pop
icebp
dec
mov
test
mov
arpl
cmp
sub
pusha
ret
push
imul
push
dec
and
pop
scas
mov
pop
mov
jae
jge
sbb
out
mov
in
mov
fldcw
jecxz
inc
pop
push
jmp
mov
test
retf
lods
or
jns
loop
sti
push
shr
pop
(bad)
rol
imul
loopne
pop
cmp
out
icebp
clc
out
stos
mov
push
inc
mov
mov
(bad)
hlt
sub
iret
inc
xchg
jle
aas
add
pop
cwde
xor
mov
das
fild
ffreep
outs
adc
fstp
xchg
push
neg
lods
jno
in
ror
movs
pop
ror
ret
test
push
aas
dec
jnp
jne
ror
or
retf
das
xchg
jne
fs
fidiv
sub
aas
xchg
cld
pop
pop
stc
leave
loope
pop
add
sub
mov
or
loope
push
sbb
mov
mov
and
sar
inc
adc
jp
xor
je
pusha
jae
stos
or
sti
rcr
dec
ss
sti
jnp
jmp
cmp
push
out
loopne
xchg
xor
and
xchg
sub
sar
sbb
test
xor
or
lock
daa
sub
icebp
or
cs
test
add
fbstp
push
dec
jmp
lock
(bad)
icebp
sbb
lea
xchg
xchg
pop
pop
fstp
mov
xor
gs
stc
test
xchg
stc
cmc
scas
mov
mov
and
rcr
test
ss
xor
dec
jl
pushf
fld
nop
icebp
ds
lahf
dec
fild
mov
shr
sub
lahf
jmp
mov
push
cli
push
mov
imul
dec
ret
out
icebp
gs
xor
xor
push
movs
test
pop
hlt
sbb
cwde
test
int3
jmp
imul
test
int
fdivr
out
test
fisubr
stos
(bad)
outs
and
push
cld
ins
cwde
int3
pop
fstp
(bad)
movs
test
sub
ja
xor
dec
xlat
lahf
cld
je
call
xor
jb
dec
and
inc
jb
lods
add
or
lds
push
xchg
sub
cmp
mov
cdq
nop
in
inc
fisttp
and
xchg
xchg
push
jno
lock
mov
cmp
pop
fwait
inc
dec
jmp
into
sub
cmps
cmp
bound
xchg
mov
data16
push
mov
loop
call
jp
adc
mov
div
inc
jge
xchg
or
shr
dec
jg
jmp
sbb
sbb
adc
daa
mov
imul
test
push
push
loope
fsubr
jl
jecxz
sub
mov
cdq
inc
fs
jno
adc
test
pop
gs
repnz
lds
inc
or
or
jnp
cmp
cmp
sbb
sub
dec
int
dec
mov
adc
movs
retf
add
jmp
sub
jns
cld
sti
dec
call
xchg
mov
rcr
mov
loop
nop
sbb
jae
inc
pop
jmp
add
inc
pop
fmul
xchg
dec
adc
mov
fsubr
imul
sbb
or
mov
and
sub
or
aas
mov
push
in
call
or
xor
fwait
mov
fnstcw
pop
lahf
in
cmp
call
adc
mov
aam
rcr
cwde
lock
cdq
fsub
dec
gs
test
jg
iret
aad
mov
outs
sub
cmp
aas
nop
cmp
adc
aad
in
xchg
and
ins
in
data16
dec
div
es
(bad)
jo
(bad)
pop
lea
bound
ret
inc
push
xchg
sbb
dec
inc
cmp
adc
mov
in
cmp
(bad)
rol
mov
aaa
dec
pop
icebp
addr16
mov
mov
add
mov
int
push
movs
ret
or
pop
jb
imul
or
sub
xor
jb
push
(bad)
(bad)
jmp
pop
shrd
sub
mov
test
add
jno
ss
and
(bad)
mov
(bad)
pusha
test
xlat
mov
inc
sub
or
and
or
dec
pusha
sbb
aam
inc
adc
jl
adc
sub
retf
adc
idiv
lods
out
jle
aas
push
add
push
jb
cmp
xor
sbb
mov
dec
cmp
inc
bound
pop
fist
shr
push
jb
dec
push
inc
popf
mov
mov
add
ins
ret
std
ja
cmp
sbb
add
int3
iret
mov
pusha
mov
out
inc
sbb
cmp
test
inc
pop
in
(bad)
cmp
cmp
adc
imul
sub
in
dec
cmp
adc
js
pop
repz
repnz
stos
sub
jne
xchg
inc
aaa
dec
fwait
ror
xor
dec
pop
xor
rol
out
and
jae
ja
clc
adc
out
jmp
mov
dec
cmp
pop
shr
dec
inc
inc
sub
jge
mov
addr16
fsubr
or
mov
fisttp
test
mov
cld
xlat
(bad)
jmp
push
jb
sbb
jmp
or
je
lea
inc
mov
xor
mov
cwde
add
shl
sbb
jmp
les
popa
pop
pop
inc
dec
or
sub
add
dec
or
out
and
sub
fmul
fwait
xor
cmp
retf
sbb
push
push
cmp
inc
call
push
sub
clc
ja
and
mov
dec
retf
cs
mov
sub
and
int3
mov
shr
xchg
ds
ror
stc
xchg
test
pop
push
dec
push
mov
jno
ret
mov
sbb
retf
test
push
in
test
cdq
ret
pop
mov
mov
xchg
mov
inc
add
rcr
lock
pop
mov
ret
dec
sub
add
push
dec
movzx
movs
sbb
repz
mov
push
push
fist
mov
nop
or
dec
shr
or
leave
cmp
nop
mov
sub
sar
dec
push
lds
int
push
test
jnp
push
loopne
fimul
fisub
movs
ds
push
call
inc
jle
cmp
shl
pushf
add
mov
or
mov
fadd
icebp
ds
mov
dec
pop
jl
mov
cdq
adc
pop
test
add
iret
xor
not
push
mov
ss
or
mov
cmp
stos
in
jo
xor
outs
dec
test
add
pop
enter
in
fwait
dec
mov
ins
jae
mov
xchg
popa
shl
push
imul
mov
sbb
addr16
sbb
push
call
xchg
mov
mov
mov
or
xchg
or
adc
add
movs
retf
jo
cwde
das
setbe
jno
loopne
fcom
(bad)
dec
sbb
repnz
jns
ins
mov
scas
imul
push
int
push
arpl
and
jp
popa
cli
cmp
fadd
dec
push
lds
popa
sub
add
adc
inc
cld
data16
sub
popa
sar
add
scas
jbe
imul
cwde
mov
neg
iret
pop
dec
adc
fwait
or
pusha
mov
sbb
xchg
mov
loopne
jbe
out
dec
dec
xchg
cli
jae
addr16
mov
or
mov
iret
xchg
jmp
push
mov
fsub
or
inc
inc
adc
xchg
sbb
xlat
pop
test
push
mov
jle
aad
jmp
mov
(bad)
jmp
jmp
movs
nop
std
mov
(bad)
mov
push
adc
outs
mov
(bad)
mov
data16
fwait
arpl
add
aam
add
xchg
push
mov
cs
cmp
daa
dec
mov
sub
lods
shl
dec
lock
aad
sbb
mov
les
pop
jge
loope
iret
adc
jb
movs
(bad)
xchg
call
sub
in
push
sub
push
inc
jle
fstp
out
test
cmc
xor
sub
or
dec
test
les
in
test
or
enter
mov
enter
or
scas
mov
je
leave
adc
inc
repnz
mov
inc
cmp
clc
cmp
aad
clc
dec
pushf
mov
out
cmp
push
mov
sub
add
out
add
out
pop
imul
(bad)
in
xor
jmp
cs
mov
or
cmp
sbb
sbb
lods
cmps
pusha
push
xor
in
sbb
stos
xor
inc
push
cli
movups
cmp
arpl
jb
add
pop
loopne
sbb
shr
jnp
push
push
pushf
leave
xchg
push
mov
shl
pop
jmp
out
test
inc
adc
xchg
data16
dec
daa
arpl
ret
inc
dec
add
pop
stc
xchg
xchg
sbb
aam
stos
pop
jge
jne
leave
cli
lods
fisttp
fisubr
cdq
jo
mov
int
hlt
xor
fwait
dec
shl
adc
pop
xor
loop
(bad)
cmc
xchg
rcl
push
stos
pusha
push
cmp
adc
push
sar
sub
mov
scas
jp
sub
clc
push
xchg
pushf
xor
(bad)
dec
not
mov
add
mov
pop
aaa
cmp
aas
mov
out
cmp
jg
aaa
mov
sbb
rcr
ss
pop
push
lahf
loop
push
push
cld
push
enter
int3
stos
addr16
push
(bad)
ror
sbb
pusha
xchg
mov
test
and
jl
cmps
test
sub
fisubr
sbb
ffree
push
pop
jmp
outs
pop
cmc
xor
arpl
sub
mov
retf
pop
inc
mov
call
mov
in
in
or
sub
mov
inc
sahf
mov
jno
test
dec
push
loopne
ret
sbb
sub
rcr
and
xchg
(bad)
popa
dec
icebp
out
fwait
stos
sti
scas
push
jne
daa
jecxz
dec
jp
cmp
int
fnstcw
lods
aam
mov
dec
jb
in
mov
and
cmp
mov
cdq
repnz
out
inc
push
add
pop
jno
mov
push
fist
cmps
sti
mov
mov
ja
retf
fbstp
enter
or
loope
push
sbb
mov
add
sub
inc
aas
mov
inc
test
fisubr
jno
aad
shl
xor
retf
push
fisttp
retf
fs
test
push
pusha
jmp
retf
fiadd
test
aas
xchg
out
push
jb
int
das
push
mov
mov
mov
vmovhpd
dec
cmc
fcmovb
and
aaa
call
imul
lock
pop
pop
add
pop
scas
pop
xchg
sbb
mov
stos
cmp
mov
dec
mov
cld
pop
repnz
cmps
call
mov
sub
jno
push
or
xor
cmp
add
xchg
jp
sbb
data16
jecxz
pop
sub
and
call
push
es
clc
adc
retf
das
int
fisttp
test
imul
sbb
sti
lods
aas
test
das
or
xor
ja
cmp
out
cmp
lock
mov
or
xor
mov
xor
xchg
in
inc
cs
mov
cmp
jb
sbb
xor
les
xor
inc
mov
jl
test
jno
sbb
cmp
jnp
add
sbb
ins
mov
(bad)
cdq
jecxz
mov
and
xchg
pop
mov
cmps
fmul
sub
cs
inc
mov
ret
jl
les
stos
(bad)
rcr
jnp
xchg
pop
and
test
sub
xor
mov
imul
sar
jne
push
add
jg
fimul
inc
nop
jle
or
cmp
fist
jmp
or
jecxz
cmc
push
pop
sub
cs
loop
xchg
ins
or
pusha
push
mov
ss
fbld
jno
and
xor
inc
jecxz
push
xor
in
data16
inc
test
jecxz
movs
sbb
inc
idiv
xchg
repz
retf
rcl
es
loop
pop
ds
ret
mov
cwde
jp
xchg
add
js
xlat
fild
and
sub
jle
ss
cld
arpl
jo
enter
jae
in
sub
aaa
and
ss
sub
outs
data16
xlat
daa
lods
pop
retf
rol
dec
neg
adc
(bad)
stc
test
add
shl
push
jmp
cs
sub
test
jb
in
into
daa
sbb
addr16
add
mov
leave
xchg
pop
and
add
xor
loope
xchg
lods
xor
mov
jmp
mov
imul
rol
and
in
add
sub
pop
int
mov
call
mov
jmp
mov
repz
inc
(bad)
cmp
xor
and
push
fcmovu
shr
shl
aad
stos
push
les
sahf
sbb
sbb
aaa
cwde
sub
cwde
fnsave
xchg
ret
inc
cmp
popa
jecxz
sbb
add
cmp
jmp
aaa
stos
fmul
push
or
sub
xchg
popf
fisttp
mov
xchg
ret
jmp
xchg
mov
mov
leave
icebp
xor
xchg
pop
retf
jo
mov
jecxz
popa
push
out
data16
mov
ins
fwait
mov
movs
add
pop
jmp
sti
jl
xlat
or
ja
inc
fbstp
inc
stos
mov
mov
dec
inc
adc
sub
arpl
inc
mov
(bad)
test
xor
dec
arpl
sub
in
push
jne
xchg
add
popf
mov
mov
out
sbb
cmp
popf
inc
out
in
add
leave
sub
xor
dec
outs
cmp
xchg
and
repz
fsubr
and
add
dec
shr
fdiv
sbb
dec
repnz
pushf
push
mov
fs
pop
push
imul
jnp
and
(bad)
int
mov
mov
or
push
ret
lock
cmc
push
dec
jl
mov
fdivr
sar
dec
jmp
cmps
pop
cli
and
adc
cmp
mov
pop
mov
out
xor
mov
dec
pop
int
(bad)
es
idiv
clc
mov
cmps
fucomip
push
cmp
pop
(bad)
mov
ret
je
and
mov
jo
fisubr
push
test
js
xor
jne
xor
(bad)
popa
js
push
sub
movs
and
mov
cmp
pop
xor
jbe
sbb
retf
xlat
inc
or
sbb
xchg
jmp
pop
pop
or
clc
pop
ds
cld
add
jb
stc
pop
and
into
fwait
jmp
jne
loope
cs
adc
adc
stc
aad
inc
lods
es
test
xor
test
push
xor
add
xchg
leave
jae
std
sub
push
push
loop
test
xchg
cmp
pop
js
sub
push
les
imul
addr16
sub
icebp
sar
stc
fst
add
mov
sub
ror
inc
jl
cld
jmp
adc
(bad)
xor
shr
mov
xchg
popf
mov
shl
mov
xor
out
les
push
call
ret
jle
push
fbld
stos
sar
aas
mov
lds
xor
ret
hlt
mov
(bad)
and
popa
cmp
fdivr
xchg
popf
mov
pop
rcl
fs
adc
loop
fist
adc
out
call
pop
jge
push
imul
jle
pop
add
repz
(bad)
push
mov
test
hlt
fs
and
aam
adc
(bad)
shl
push
cmp
xchg
out
ds
sbb
cmp
rcr
pop
mov
push
sub
movs
clc
vpmaxub
push
push
call
sbb
mov
xor
pop
out
movs
jne
rol
arpl
and
test
ins
sbb
adc
mov
cli
lds
cmps
inc
mov
push
das
test
rol
xlat
pop
and
jb
pop
lock
and
ss
icebp
cwde
mov
add
jge
imul
dec
(bad)
mov
(bad)
and
int
pop
ficom
lods
inc
push
(bad)
aam
mov
xchg
jmp
xchg
adc
cmc
(bad)
jmp
movs
(bad)
in
mov
addr16
stos
cmp
les
or
aaa
repz
loope
stos
or
mov
mov
sar
xor
data16
mov
jp
js
icebp
inc
mov
or
retf
cmps
in
iret
pushf
mov
fst
adc
inc
pop
or
pop
or
sar
stos
sub
test
xor
xor
fmul
dec
or
add
pop
dec
retf
xchg
cmps
mov
int3
ss
jae
mov
pop
mov
and
je
cmps
mov
push
xor
stos
sbb
jbe
and
mov
dec
adc
pop
mov
pop
mov
loopne
xchg
lea
push
xor
test
sbb
inc
lock
popa
or
adc
and
mov
pop
in
mov
jmp
das
xchg
adc
or
test
xor
or
jo
adc
push
mov
icebp
into
push
scas
mov
lods
mov
or
sbb
shr
in
mov
data16
call
imul
xchg
adc
jnp
test
stos
pop
shl
sahf
jbe
popa
xor
and
fidiv
sub
mov
adc
aad
addr16
js
dec
jle
repnz
pop
mov
add
adc
cmps
mov
fnstcw
adc
outs
sub
outs
cdq
cmc
pop
cs
push
jb
call
fistp
jle
add
arpl
dec
ret
mov
cdq
add
std
add
and
lods
mov
pusha
pop
nop
push
in
dec
or
mov
xchg
mov
movs
idiv
repnz
pop
inc
stos
mov
inc
retf
push
sbb
sub
and
test
test
add
daa
or
cmps
cmps
stos
jne
lahf
xor
or
inc
mov
xor
loope
iret
test
sbb
ret
push
hlt
mov
cld
mov
daa
dec
pushf
push
sbb
(bad)
std
jecxz
in
mov
inc
outs
jg
loop
retf
fst
aad
std
daa
mov
push
lahf
cld
aaa
imul
or
jecxz
inc
mov
push
lahf
in
mov
(bad)
sbb
xchg
sub
jge
sbb
inc
jle
dec
jmp
sub
mov
push
xchg
prefetcht1
sub
popa
push
(bad)
fwait
stc
data16
xchg
sti
stos
jb
or
rcr
rol
mov
fs
outs
sub
add
cdq
mov
inc
movs
cwde
or
(bad)
ret
enter
pop
sbb
dec
shl
pop
add
shl
call
in
mov
and
push
mov
scas
dec
test
push
add
mov
(bad)
shl
aad
push
dec
(bad)
in
jp
daa
xor
cmp
or
fidiv
sub
out
cdq
push
cmp
jg
ror
dec
retf
clc
adc
xor
cmp
inc
pop
mov
movs
cmp
jns
dec
mov
or
daa
xchg
xchg
cdq
imul
xchg
inc
and
dec
mov
xor
cmp
cmps
jmp
ret
rcr
outs
cmps
aam
jg
movs
sahf
jns
xchg
dec
jg
mov
int3
mov
jnp
mov
enter
push
int
ins
push
sbb
xor
push
sahf
cmps
aas
sub
sar
inc
imul
push
mov
and
mov
mov
ja
dec
mov
mov
sub
xchg
lods
cmp
popf
clc
jge
push
push
das
jns
xor
retf
jmp
sub
je
nop
enter
repz
jmp
xor
sar
xchg
movs
sub
jne
push
xor
aam
shl
push
pop
mov
imul
jg
movs
ja
jae
and
scas
into
add
ja
add
and
pushf
in
add
xor
sub
into
repz
iret
fwait
jmp
ror
mov
push
shl
out
(bad)
repz
jo
add
ret
imul
dec
leave
or
lea
cmp
push
retf
adc
push
pop
call
mov
xchg
sar
jge
hlt
dec
icebp
or
(bad)
lods
mov
test
xchg
jp
add
sub
int3
push
pop
ret
cmc
std
xor
retf
jp
jno
mov
inc
add
arpl
and
leave
pop
or
daa
movs
and
mov
pop
jmp
cmps
xor
sbb
out
jge
pop
fcomip
cmp
mov
sub
in
shr
cmp
test
rol
adc
stc
les
jle
mov
push
popf
mov
add
mov
dec
sub
leave
jno
out
je
xchg
call
jmp
inc
mov
add
clc
fs
ds
mov
pop
cmp
repnz
adc
xchg
adc
mov
cdq
jge
xchg
sub
test
xor
push
test
lods
outs
loopne
(bad)
ret
lds
pop
or
shl
in
daa
cwde
sbb
mov
pop
inc
cdq
int3
push
idiv
hlt
neg
ins
xchg
inc
fwait
cli
xchg
xor
aam
push
idiv
stos
addr16
inc
inc
retf
add
lahf
adc
xchg
pop
rol
jbe
jle
xor
sbb
xor
mov
sbb
dec
mov
ds
in
inc
jbe
scas
push
xchg
inc
jmp
ffree
pop
ffree
inc
loopne
mul
lea
mov
jne
sbb
jnp
mov
inc
(bad)
jbe
push
sub
enter
in
and
add
fidivr
pop
and
call
pop
cmp
cdq
pop
pop
outs
fsubr
ss
pop
pop
push
imul
imul
and
pop
pop
or
in
test
lods
xor
retf
shr
mov
out
push
dec
popf
xchg
push
jns
ins
sub
pop
lahf
push
jns
cli
inc
movs
push
dec
mov
pop
adc
or
pop
aad
jnp
mov
jl
rcl
xchg
leave
jnp
std
inc
xor
bound
pop
repz
pop
cmp
and
inc
push
mov
test
adc
add
imul
fbld
push
int3
push
ss
pusha
loope
jns
scas
jns
cmp
xor
mov
loopne
aaa
mov
pop
cmp
and
xchg
lock
pusha
mov
xchg
scas
es
scas
loopne
jb
jmp
es
cmp
imul
sar
mov
jmp
and
add
mov
jecxz
pushf
pop
(bad)
or
(bad)
and
in
shr
out
ret
pushf
cli
dec
call
mov
setg
push
dec
inc
push
sbb
ficomp
adc
aad
repnz
dec
inc
mov
jp
neg
mov
cs
fsubr
add
cli
and
mov
pop
jg
add
mov
push
xor
add
push
fmul
add
rcl
lea
push
loop
pop
fiadd
out
inc
pop
xchg
add
js
or
loop
xchg
adc
jle
out
or
enter
sub
test
(bad)
loop
adc
dec
push
lods
loope
or
dec
nop
mov
out
cwde
outs
push
and
das
cmp
xchg
pop
mov
popa
push
or
out
ja
add
imul
out
(bad)
cmp
out
(bad)
out
push
sbb
mov
fwait
call
xor
mov
push
xor
dec
mov
fisub
aas
addr16
mov
(bad)
jo
dec
mov
mov
mov
js
xchg
or
ins
xor
(bad)
add
pop
cmp
(bad)
out
push
add
(bad)
cmp
sbb
cli
pop
adc
push
mov
out
pop
and
mov
mov
push
mov
cli
fidiv
xchg
outs
pushf
mov
(bad)
push
dec
hlt
xor
mov
dec
xchg
cmps
test
sar
pop
out
mov
push
arpl
dec
lea
cmc
xchg
and
pop
cmp
cmc
loopne
add
xchg
loope
cdq
popa
pop
xor
fld
sbb
sub
pop
aaa
enter
loop
fdiv
out
cmp
fdiv
jecxz
xchg
dec
push
inc
or
popa
rol
bswap
push
(bad)
cli
xor
test
popa
inc
lds
test
jmp
adc
lahf
js
jg
(bad)
cmp
dec
push
mov
cmps
iret
test
add
sbb
rcl
push
jp
jns
aas
lea
xchg
sbb
add
addr16
std
inc
mov
pop
pop
add
(bad)
mov
push
pop
icebp
mov
adc
mov
or
mov
mov
sbb
rcl
xor
sub
push
repz
rep
je
pusha
mov
mov
es
cli
movs
call
xor
or
mov
inc
dec
add
aaa
fnstcw
ss
xchg
cmc
cmp
mov
sbb
pop
into
lods
(bad)
shr
pop
les
dec
popa
sti
inc
inc
push
mov
icebp
pusha
es
and
mov
jg
int3
in
jmp
in
and
pop
add
sbb
jne
sbb
pop
mov
add
cmps
pop
js
jmp
push
pop
pop
xchg
daa
and
xchg
dec
push
ror
adc
movs
pop
ins
ss
dec
pop
jecxz
add
sti
and
and
push
push
and
xchg
daa
xchg
inc
fstp
imul
inc
or
neg
arpl
mov
outs
sbb
xchg
mov
shl
ins
call
pop
cs
mov
jle
sub
xor
push
push
jle
sbb
call
data16
sahf
mov
retf
mov
add
jo
add
xchg
sub
int3
les
cs
loope
mov
inc
ret
mov
pop
pop
sbb
pop
mov
cmp
push
push
mov
das
fcomp
xchg
cmp
jbe
mov
and
and
xchg
adc
cmp
adc
cmp
cdq
out
xor
jns
test
retf
add
adc
jbe
adc
mov
imul
jnp
jmp
je
ret
dec
mov
cmps
pusha
xor
jmp
sahf
push
pop
scas
jae
push
sbb
mov
into
lods
ror
loopne
dec
retf
pop
add
icebp
fwait
outs
mov
xchg
jmp
push
out
test
add
rcr
call
aas
rol
jo
mov
sbb
aaa
xor
jg
jecxz
leave
adc
aaa
lock
call
and
inc
push
cmp
jmp
les
cmp
movs
pop
in
or
movs
ret
sbb
push
xor
add
cmps
or
mov
pusha
(bad)
mov
ret
mov
loope
or
ret
adc
fimul
int3
mov
das
frstor
loope
test
inc
int3
stos
pop
leave
jp
punpckhdq
push
fs
cmc
jns
cmp
pop
xchg
loopne
adc
jecxz
je
test
or
outs
cmp
mov
xlat
and
dec
gs
inc
push
push
shl
fnsave
jb
xchg
aad
jmp
leave
sub
pop
dec
in
xor
test
xchg
jb
pop
push
ja
pop
(bad)
rcr
data16
sub
cmps
mov
xlat
outs
push
call
jne
xchg
adc
sbb
out
inc
xchg
push
xor
(bad)
xchg
popa
rol
shl
stos
pop
sub
imul
mov
or
push
shl
pop
adc
inc
adc
fsubr
dec
iret
popf
lods
nop
retf
ret
aad
idiv
pop
rcr
sbb
xor
repz
xchg
scas
xchg
mov
in
cmp
pop
sbb
imul
mov
(bad)
int
sub
cmp
pop
mov
jmp
lock
(bad)
mov
call
inc
add
xchg
mov
stos
jp
inc
lods
and
test
jl
mov
pop
fiadd
imul
pop
mov
or
mov
dec
fwait
mov
mov
pop
and
and
mov
shl
pop
push
pop
adc
lods
fnstenv
mov
rcr
aam
std
stos
sub
adc
push
xchg
xchg
jge
iret
and
jo
into
aas
cmp
dec
mov
ins
rcr
(bad)
outs
aam
aas
inc
cmc
fcom
pusha
dec
jg
in
mov
fstp
cmc
sbb
in
sub
inc
dec
push
fs
xchg
inc
mov
neg
pop
dec
mov
mov
and
xchg
adc
xchg
in
pop
add
call
xor
dec
into
out
sbb
xchg
ror
out
push
sbb
jbe
test
int
mov
sbb
rcl
mov
fidiv
rcr
fyl2x
xchg
pop
pop
shl
rcl
js
or
popa
lods
out
popa
retf
mov
or
scas
loop
dec
cmp
and
mov
mov
push
pop
sbb
and
stos
mov
sub
or
adc
jno
jne
loope
aad
push
pop
ss
bound
js
icebp
jno
xchg
rol
(bad)
cmp
jp
jae
mov
jns
push
retf
pop
inc
fucom
or
push
stc
cmps
(bad)
arpl
daa
sbb
adc
cdq
inc
mov
lock
inc
mov
test
dec
or
mov
dec
(bad)
sbb
xchg
popf
movs
aam
cmp
xor
mov
mov
jge
add
mov
mov
les
test
jo
call
fwait
je
(bad)
xchg
push
ret
cdq
ins
cmps
test
popf
dec
inc
push
jno
xlat
call
jl
gs
push
mov
popa
and
xor
dec
pop
jbe
mov
or
ss
jo
rol
outs
dec
cmps
mov
scas
xchg
mov
repnz
rcl
ja
cmp
iret
jns
mov
inc
inc
add
rol
mov
fisubr
push
or
add
dec
into
iret
and
add
mov
cmp
cmps
push
ret
(bad)
push
xchg
mov
into
cmp
adc
scas
mov
pop
aas
fadd
pop
ins
mov
mov
or
ret
fs
call
cwde
or
mov
daa
cmp
xor
jle
mov
sub
call
cmp
cmp
xchg
aaa
test
dec
mov
xor
pop
xlat
ins
pop
sub
lds
sbb
shl
mov
push
mov
and
jecxz
outs
xor
es
dec
xchg
mov
mov
ror
mov
loopne
ret
call
ficom
and
rcr
inc
mov
shr
(bad)
mov
sbb
xor
cmp
outs
aas
jnp
cdq
and
inc
pushf
je
out
mov
int3
fnsave
xchg
ror
adc
inc
dec
jcxz
(bad)
fstp
outs
retf
add
sub
mov
adc
jmp
push
lock
popa
mov
imul
jbe
popf
add
in
sbb
inc
push
clc
movs
iret
push
ret
xlat
push
jg
xchg
les
lds
xchg
sbb
call
outs
adc
fwait
test
lods
ins
mov
inc
mov
mov
inc
pandn
xchg
mov
(bad)
outs
ret
outs
loopne
fstp
gs
pop
jge
mov
ret
sbb
sbb
or
jp
inc
leave
xor
sub
repnz
out
out
adc
cmp
in
mov
push
fsub
fsubr
jg
pop
pop
test
lock
sbb
cs
xchg
(bad)
sbb
and
mov
leave
sub
fsubr
push
(bad)
lock
retf
popa
test
sbb
inc
or
or
shl
scas
pop
mov
mov
out
jg
and
xlat
cmp
xor
adc
in
xchg
(bad)
out
mov
mov
push
cmp
push
xor
ud0
cmp
xchg
jae
mov
jne
mov
push
push
sbb
mov
arpl
xchg
push
add
mov
xchg
hlt
addr16
dec
cdq
leave
or
mov
in
gs
pop
mov
jb
jnp
cmp
push
ds
mov
imul
and
pop
inc
dec
fsubr
inc
movs
repnz
inc
call
sti
or
adc
push
test
mov
sbb
bound
fdivr
shl
fld
mov
(bad)
scas
test
mov
mov
bound
push
lds
cmc
jle
dec
pop
and
and
popa
cli
and
mov
xchg
shl
inc
pop
stc
pop
ror
xor
pop
sub
jb
mov
mov
or
pop
imul
push
and
pop
mov
mov
cli
push
mov
add
fadd
cmp
mov
jge
add
sbb
pop
pop
xor
mov
sub
mov
fucom
add
ja
cmp
shl
xchg
scas
inc
sbb
jne
sbb
push
jne
xchg
push
repz
(bad)
jae
mov
fistp
inc
arpl
sub
daa
ret
or
xor
neg
push
pop
retf
es
dec
add
xor
mov
bound
jle
inc
jae
jnp
movs
mov
mov
dec
leave
popa
in
sbb
and
enter
cmc
dec
jno
dec
aaa
outs
mov
dec
cmc
cmp
push
fild
xchg
push
mov
aam
inc
(bad)
cmp
mov
jnp
ret
cmp
dec
imul
aad
push
ja
dec
arpl
xchg
cmp
leave
call
popa
and
cmps
pop
out
es
adc
adc
jno
ins
xchg
ds
xlat
xchg
js
aaa
sbb
dec
idiv
mov
jae
cmp
xchg
mov
mov
and
xor
fist
cmp
pop
adc
cs
add
aaa
movs
popa
mov
pop
sbb
jmp
xor
clc
or
inc
daa
and
shl
outs
push
jno
stos
mov
rol
cwde
push
dec
or
adc
fidiv
push
jmp
jmp
mov
push
adc
cmp
sbb
inc
nop
lock
shl
or
bound
add
inc
(bad)
dec
out
loop
shr
jl
jp
loope
ret
inc
jp
or
jl
xor
jne
xchg
int3
inc
jo
shr
dec
ja
sbb
and
adc
cmc
pop
pop
cmp
dec
pop
sbb
ret
das
adc
xchg
add
xchg
imul
dec
xchg
jp
jb
mov
fimul
(bad)
cs
lods
pop
fwait
mov
retf
cmp
add
pop
test
mov
pop
or
inc
(bad)
psrld
imul
dec
in
out
and
pop
fwait
stos
shl
jbe
adc
ins
int3
jmp
daa
cdq
std
cdq
sbb
leave
movs
cdq
sub
icebp
or
cmp
jae
xchg
fidivr
xor
bound
sbb
(bad)
or
add
shl
dec
adc
sahf
and
into
push
cmp
mov
cmp
pusha
add
sub
mov
jne
dec
cli
iret
mov
cs
mov
(bad)
leave
adc
iret
leave
loopne
and
jo
jl
adc
push
aaa
enter
dec
les
dec
jmp
in
xchg
je
mov
sti
dec
loope
in
cdq
(bad)
pop
jmp
(bad)
ins
add
cld
fisttp
and
inc
mov
daa
adc
mov
out
xor
xchg
stos
sub
mov
call
cld
pop
jle
enter
das
add
(bad)
pusha
jne
or
in
repz
xlat
(bad)
aaa
inc
jbe
dec
add
sub
xor
jo
cmps
gs
mov
loopne
test
das
mov
fwait
sbb
cmp
cmp
xor
rol
pop
ficom
ds
test
xor
mov
push
(bad)
adc
push
pop
jp
gs
jae
jle
ret
xchg
push
mov
ss
leave
lahf
(bad)
adc
mov
enter
enter
mov
xor
iret
daa
(bad)
iret
and
pop
out
jno
(bad)
cmp
mov
jmp
pop
and
pop
mov
retf
add
dec
mov
mov
mov
xchg
retf
scas
outs
ret
xor
outs
jo
pop
fwait
adc
inc
or
hlt
sub
mov
jae
(bad)
push
xchg
or
stos
scas
retf
cmc
cwde
call
imul
sbb
dec
xor
sub
out
iret
xlat
push
(bad)
and
popa
push
js
(bad)
mov
mov
push
inc
sbb
rcl
jnp
mov
mov
inc
mov
fadd
rcl
xchg
cmp
je
sbb
sub
imul
push
fs
sbb
bound
xchg
adc
add
push
jmp
loop
add
cwde
ss
ficomp
popf
sub
sbb
ds
ret
sub
std
ss
aaa
pop
jp
popa
(bad)
mov
outs
xchg
(bad)
test
cmp
aaa
jg
loop
push
inc
xchg
jge
(bad)
xchg
adc
in
je
stc
addr16
das
iret
sub
inc
cld
aas
push
cmp
test
fidivr
test
adc
jbe
jle
(bad)
xor
ret
dec
xchg
retf
shl
dec
sbb
push
pop
mov
jns
or
dec
cmc
fild
cdq
xor
mov
mov
mov
add
xor
imul
jne
lea
mov
xlat
in
iret
ret
imul
and
push
icebp
dec
xchg
jbe
push
sub
xlat
rcl
push
imul
scas
lods
fdiv
lods
or
loop
mov
mov
pop
mov
adc
push
(bad)
arpl
mov
icebp
inc
mov
repnz
shl
xchg
ins
jns
xlat
lock
sbb
jne
mov
outs
fld
out
sub
mov
mov
sbb
sub
sub
ds
mov
in
pop
sub
sub
popa
inc
aaa
jle
clc
adc
xor
mov
cmps
mov
iret
mov
xchg
pushf
sbb
and
in
(bad)
and
mov
popf
jno
addr16
aam
retf
inc
loopne
fild
adc
mov
adc
ins
imul
fucomip
jnp
bswap
sbb
jge
mov
cmp
fld
cmp
popf
or
imul
stos
int3
(bad)
mov
cmps
ss
call
mov
sbb
scas
daa
mov
movs
xchg
sbb
shl
mov
xor
push
mov
jns
into
pop
pop
rcl
cwde
mov
jne
loop
mov
mov
popw
loop
jge
sub
jge
(bad)
xchg
icebp
inc
dec
sub
sti
sbb
cmc
pop
movs
xor
repnz
pusha
(bad)
or
xlat
jne
bnd
mov
add
ss
mov
mov
aad
push
inc
in
dec
or
fsubr
pop
cmps
and
loope
sub
inc
mov
test
jmp
adc
loopne
rol
dec
mov
mov
movs
add
mov
or
mov
neg
adc
ins
push
and
pop
out
(bad)
(bad)
nop
out
and
out
dec
(bad)
mov
mov
enter
cmp
fcmovbe
shr
popa
in
sub
add
push
js
jle
(bad)
sbb
jecxz
cmps
nop
mov
cmp
mov
test
xchg
pop
add
or
mov
loop
pop
imul
js
mov
push
inc
out
fild
loopne
sbb
fsub
rcl
icebp
aad
xchg
sti
push
cdq
sbb
loop
addr16
std
test
inc
dec
push
inc
add
call
mov
fdivr
jmp
int
xor
xor
dec
jmp
or
enter
jnp
into
pop
out
mov
and
inc
ret
bnd
add
adc
xchg
les
jo
push
movs
hlt
xor
jg
rol
jne
stos
mov
push
add
mov
es
mov
mov
pop
into
sahf
jl
fstp
shl
add
pop
popf
js
dec
mov
push
jge
cmp
sbb
or
jno
and
dec
push
cmps
or
das
jl
(bad)
clc
pop
repz
ins
pop
test
mov
mov
xchg
ds
cmp
inc
mov
ficom
mov
mov
in
and
ds
div
and
test
or
xchg
scas
fwait
inc
test
loop
jo
xchg
pusha
or
xor
sub
les
sbb
ficom
nop
out
mov
loope
jmp
mov
iret
pop
lahf
in
call
out
xor
mov
sbb
jl
jns
pop
out
push
icebp
jne
out
mov
popf
jbe
push
xchg
sbb
adc
movs
pop
cmp
pop
xchg
push
das
hlt
add
sub
(bad)
mov
fisttp
jns
sub
ins
add
pop
xchg
mov
jno
icebp
jmp
push
and
jo
push
je
and
or
dec
pop
push
mov
hlt
ins
mov
ror
nop
push
and
sub
mov
(bad)
pop
mov
gs
push
stos
aam
inc
push
mov
pop
jge
mov
icebp
fadd
or
and
add
das
fbld
pop
call
mov
sub
pushf
cmp
mov
add
mov
inc
imul
xor
movs
xchg
xchg
ror
mov
dec
imul
dec
fmul
cmp
pusha
loope
js
or
sub
jp
inc
pop
push
or
sbb
mov
mov
adc
dec
mov
adc
test
mov
out
in
mov
ins
sbb
lods
inc
cmp
xchg
xchg
retf
xor
mov
dec
out
rcl
sbb
xchg
(bad)
loopne
outs
push
mov
repz
popa
mov
enter
cmp
jmp
(bad)
or
add
inc
idiv
(bad)
add
dec
push
shl
push
push
pusha
pop
dec
sti
push
mov
(bad)
or
xor
cmp
ror
pusha
adc
push
fist
mov
push
xchg
xlat
jae
jecxz
xor
pop
test
into
pop
mov
xchg
retf
xchg
xlat
(bad)
(bad)
or
xor
push
add
shr
mov
ins
test
jb
xor
and
mov
lea
add
mov
fild
sbb
xlat
mov
sub
pop
or
enter
mov
pop
inc
mov
int
adc
jmp
push
jbe
inc
cld
inc
sub
sub
mov
into
js
lock
pop
push
data16
fs
in
mov
stos
jp
sbb
popf
and
mov
shl
(bad)
jbe
add
push
pusha
xchg
push
cli
push
outs
mov
mov
(bad)
and
jne
mov
outs
stc
xchg
fisubr
adc
mov
jge
adc
mov
test
(bad)
(bad)
pushf
mov
push
ss
mov
daa
or
xor
pop
mov
lds
mov
or
retf
mov
pop
push
or
jnp
hlt
pop
sbb
ror
shl
add
and
cmp
and
loop
inc
xor
sbb
lahf
jmp
test
jl
push
jl
daa
dec
movs
lahf
test
xchg
push
sahf
loop
mov
mov
pop
pop
cmc
inc
mul
retf
fisubr
or
aaa
es
imul
xchg
mov
test
mov
pop
sub
xchg
mov
ret
js
call
in
xchg
mov
sti
adc
xor
dec
xchg
movs
sbb
fwait
and
and
cmp
sbb
xlat
jnp
pop
mov
mov
dec
cmp
pop
jl
jmp
jae
push
xchg
jmp
or
add
mov
gs
pusha
imul
add
addr16
retf
mov
loop
push
js
add
dec
cmp
cmp
lds
or
jg
cli
leave
and
cdq
imul
add
and
mov
fst
add
hlt
adc
xchg
stos
inc
cs
add
jecxz
cld
rcr
out
int3
mov
(bad)
xor
int3
sub
push
adc
inc
add
xor
jmp
aam
pop
in
sahf
push
cwde
sub
addr16
mov
loop
out
loope
imul
stos
mov
mov
pop
inc
fucomp
aam
push
inc
mov
mov
mov
shl
aam
cld
out
pop
and
mov
xchg
cli
rcr
mov
jmp
push
addr16
sub
dec
and
retf
mov
sub
mov
or
sub
xchg
cs
pushf
push
jne
sub
cmp
xchg
out
pushf
jne
push
shr
pop
sub
mov
sahf
or
push
jp
aad
mov
fild
enter
push
push
xor
out
xchg
mov
mov
es
popa
pop
outs
pusha
(bad)
je
sub
push
jno
xor
rol
fisttp
out
imul
in
or
jl
mov
cmps
cli
mov
mov
aas
pop
push
(bad)
jmp
je
js
jl
add
fxch
test
jp
loope
shl
retf
add
sahf
pop
adc
repnz
test
(bad)
addr16
out
stos
fst
outs
outs
xor
fld
and
add
add
ret
xor
lods
mov
mov
or
xchg
fild
inc
pushf
cmp
push
xchg
(bad)
mov
call
in
rcl
(bad)
xchg
push
inc
add
test
xchg
das
mov
int
call
stc
out
xor
xor
add
inc
sub
sub
aam
cmps
cmp
mov
cli
add
push
fistp
(bad)
jmp
cmp
ffree
das
jg
cmp
cmp
outs
pushf
ja
gs
test
out
int
cmp
add
mov
inc
data16
jno
jb
std
and
xchg
fprem1
dec
push
xchg
fld
push
mov
mov
ins
pushf
shl
mov
mov
mov
fidivr
adc
shl
inc
mul
jo
stc
popa
sti
outs
pop
mov
outs
aad
dec
ror
cmp
pushf
xlat
lods
sbb
mov
add
out
pusha
repnz
mov
xchg
jnp
sub
pop
pop
aam
mov
mov
xor
or
mov
fist
ja
xchg
and
(bad)
aas
mov
adc
xchg
or
arpl
cld
dec
jo
cdq
push
in
jae
add
cmp
fdiv
sub
aas
mov
xchg
mov
mov
repz
push
adc
inc
addr16
(bad)
push
je
fs
xchg
xor
or
mov
jge
cmps
cmp
inc
fsub
js
xchg
jae
rcpps
lahf
repnz
push
int3
(bad)
push
pop
cmp
inc
xor
(bad)
movs
shl
out
int3
jp
mov
add
cli
sub
cmp
mov
jecxz
sahf
xor
stc
test
rol
mov
data16
mov
jb
pop
pop
bound
sbb
inc
inc
and
push
aad
call
fwait
push
imul
xor
xchg
(bad)
imul
mov
inc
imul
inc
icebp
mov
fdiv
rcr
gs
sbb
clc
xor
lahf
arpl
mov
dec
dec
iret
popf
repz
jecxz
pop
mov
mov
bound
(bad)
sub
scas
push
movs
pop
push
sub
out
xor
mov
out
retf
test
pop
nop
outs
adc
cli
inc
mov
pop
dec
pop
ins
int
test
dec
ss
call
adc
pushw
arpl
and
and
leave
ret
arpl
mov
mov
dec
stos
in
scas
ja
nop
out
popf
fcomp
mov
sub
add
and
push
ins
jo
adc
mov
inc
mov
pop
pop
stos
and
int
fwait
leave
pop
fldenv
cli
imul
and
and
aad
xchg
mov
xor
jmp
je
adc
aaa
shl
xor
test
and
loope
jle
cmp
mov
(bad)
cdq
adc
mov
mov
inc
xor
jns
ficom
sub
xlat
inc
cld
add
mov
mov
mov
add
(bad)
inc
pop
outs
movs
mov
dec
pusha
pop
lods
repz
repz
dec
loope
fild
jmp
adc
fcomp
cmps
out
pop
loopne
mov
ret
cmp
mov
dec
xchg
lds
dec
and
stc
sti
mov
clc
push
shr
xchg
cmp
idiv
sub
daa
and
ror
and
(bad)
movs
sti
mov
sub
xchg
arpl
push
pushf
xlat
push
aaa
aaa
clc
mov
sbb
sbb
push
pushf
pop
in
jne
es
xor
mov
shr
xor
pop
xor
fprem
dec
call
fld
imul
das
imul
cmp
xchg
jle
fsubr
das
add
push
stos
or
out
pop
fsubr
dec
mov
push
in
sbb
push
adc
mov
or
inc
and
movs
inc
xchg
dec
out
call
jge
cmps
jle
jo
mov
sti
xchg
movs
leave
test
and
stc
rcr
ret
fwait
adc
push
xchg
stos
pavgw
push
iret
mov
dec
mov
dec
adc
add
sbb
mov
test
(bad)
mul
sbb
stos
add
pop
das
sti
call
xor
test
sbb
(bad)
sahf
ins
out
jae
pop
(bad)
jp
adc
inc
mov
push
outs
push
cmp
fs
cs
movs
sar
jg
inc
push
aas
stc
mov
mov
jmp
es
xchg
imul
out
hlt
mov
dec
mov
and
mov
and
call
mov
leave
retf
dec
mov
push
cmp
lods
ror
inc
popf
cld
mov
fild
retf
dec
inc
std
pusha
and
scas
add
and
pop
dec
pusha
dec
pop
jbe
js
xor
in
retf
cmp
mov
ror
jno
xchg
ret
mov
(bad)
cmp
hlt
add
xchg
xchg
enter
jo
mov
add
sbb
cld
or
repnz
fs
and
and
mov
int
add
or
lods
jns
push
cmp
je
jno
(bad)
xchg
jecxz
(bad)
sahf
sub
adc
add
rcl
sar
cmp
adc
dec
(bad)
xor
std
aad
mov
add
rcr
aas
and
or
loop
sub
enter
xchg
or
retw
xchg
mov
xlat
or
and
bound
retf
xor
aad
push
xor
cdq
sub
(bad)
lock
cmps
sub
dec
and
(bad)
cmp
mov
daa
gs
out
stos
aam
lea
dec
popf
push
cmp
bound
add
mov
cld
pop
jmp
jmp
mov
fsubr
dec
cdq
jl
movs
push
in
xchg
stc
in
adc
adc
xchg
jecxz
sbb
cmovp
loopne
jo
loope
(bad)
sub
jb
inc
test
mov
jmp
clc
adc
inc
push
mov
lds
je
xor
or
mov
mov
add
mov
cbw
cmp
(bad)
les
ja
inc
mov
ret
leave
push
mov
cwde
(bad)
and
(bad)
in
out
mov
sub
jb
jns
cs
test
cmp
ja
or
loope
mov
dec
add
pushf
add
cmp
(bad)
or
cs
adc
outs
add
dec
leave
jae
add
test
mov
dec
dec
sbb
ret
pop
inc
pop
retf
inc
fidivr
adc
jmp
lods
nop
cmp
mov
pop
and
popa
mov
fwait
stos
in
push
cmc
iret
sbb
dec
mov
xchg
mov
sub
iret
fbld
dec
mov
test
loop
push
cli
push
or
lds
dec
mov
cmp
adc
sub
adc
pop
dec
cmp
cld
fpatan
cmp
and
mov
mov
xor
cmp
and
sbb
inc
dec
sbb
fcomp
mov
fild
aam
push
add
das
mov
ds
inc
data16
pop
pop
push
pop
jle
call
out
cs
ror
push
adc
xor
(bad)
shr
sbb
das
cmp
in
xor
mov
adc
and
movs
pushf
(bad)
scas
repnz
sbb
out
mov
(bad)
xchg
call
and
int
ret
fsub
bnd
pop
push
inc
sar
sbb
pop
mov
sar
outs
or
inc
(bad)
push
sub
out
adc
jo
xor
mov
ins
ds
popa
lea
push
or
adc
push
arpl
lock
push
aaa
outs
xor
bound
inc
ret
cmp
mov
ror
xchg
cs
or
movs
add
icebp
push
or
(bad)
aad
das
pop
push
ret
push
aaa
gs
fnstsw
mov
jg
arpl
mov
sbb
xchg
enter
ja
mov
add
cmp
cmp
cmps
add
add
adc
xor
push
and
rcr
lahf
cwde
(bad)
jne
push
pop
mov
test
jp
shl
cmps
jns
dec
fstp
dec
sub
(bad)
xor
adc
ds
jmp
mov
cmp
scas
repnz
inc
jmp
jecxz
shr
pop
iret
in
xchg
dec
adc
push
js
stos
pushf
sets
mov
or
cwde
iret
aaa
xchg
shl
(bad)
xor
punpckhbw
test
add
push
cmps
call
adc
(bad)
(bad)
retf
mov
dec
or
push
mov
mov
sbb
pop
inc
stos
gs
loop
in
add
push
jecxz
jbe
shr
sub
or
rcr
push
mov
push
mov
dec
pop
mov
retf
xor
inc
xchg
adc
push
xchg
ins
scas
mov
xor
scas
loopne
push
ret
fistp
iret
call
pop
imul
pop
dec
gs
pop
push
add
ja
or
icebp
dec
stos
add
mov
mov
sub
dec
call
pop
dec
xor
scas
bound
mov
clc
into
mov
dec
ret
(bad)
and
jle
(bad)
mov
or
sbb
or
cmc
push
cdq
rcr
push
shr
xchg
loope
mov
cdq
es
sti
out
cld
sahf
jno
pusha
push
push
cmp
cmp
mov
fsubr
std
jns
pop
gs
enter
sbb
mov
je
mov
inc
fucomip
test
shr
in
mov
cmp
(bad)
(bad)
mov
and
stc
(bad)
pop
jnp
mov
push
dec
repnz
xchg
imul
push
in
cmp
pushf
(bad)
cwde
das
and
mov
retf
shl
cmp
jmp
call
mov
xacquire
mov
mov
cmp
pop
sar
mov
fiadd
xchg
xlat
push
mov
or
je
loope
out
jmp
or
add
xchg
cmps
mov
(bad)
mov
aad
push
jmp
jmp
and
jp
fsub
jnp
push
mov
jge
mov
jmp
and
sbb
cld
pop
and
mov
xor
mov
dec
or
jo
mov
push
cmc
mov
test
push
int3
sbb
dec
mov
rcl
in
xchg
cmp
add
jne
xlat
out
stos
dec
adc
xchg
pushf
out
add
cmps
sbb
and
mov
mov
push
jno
mov
cmp
mov
sahf
popa
loop
cmp
lock
push
cs
stc
jb
sub
out
in
or
add
adc
mov
mov
xor
sbb
ins
mov
test
int3
gs
popw
cli
push
mov
xor
add
in
cli
loope
clc
sbb
je
movs
jnp
xchg
jb
pop
out
fidivr
scas
add
into
jl
mov
inc
mov
ins
ret
mov
sahf
pop
mov
xor
repnz
mov
inc
xchg
push
jnp
mov
lods
fcmovnb
outs
lds
popf
cdq
shr
pop
jle
xchg
sub
arpl
xchg
and
cwde
jp
mov
mov
mov
dec
repnz
sbb
or
ja
pusha
fwait
add
pop
int
xor
aas
stos
dec
or
cld
arpl
and
les
arpl
rcr
iret
xchg
cmp
jmp
mov
fld
and
popf
mov
stos
jnp
dec
adc
iret
xchg
jle
adc
pop
sub
add
dec
out
rol
loope
sbb
and
xchg
test
shl
int3
repz
movs
pop
push
out
mov
xchg
inc
enter
jb
popa
lock
xchg
xchg
test
add
fninit
sbb
shl
int3
cmps
mul
xchg
gs
xchg
add
retf
movs
lods
jne
aam
out
imul
cli
jb
ror
mov
inc
dec
sti
xchg
pop
outs
cmc
and
imul
rol
push
sub
cld
call
mov
and
add
icebp
xor
cdq
inc
adc
jmp
out
shl
pop
add
xor
xchg
mov
xor
or
jo
cmps
je
movs
dec
div
jmp
stc
clc
jae
out
mov
adc
inc
ret
pop
sahf
icebp
in
lods
dec
push
push
pop
mov
or
and
mov
or
mov
adc
es
push
fidiv
dec
(bad)
inc
and
mov
cmc
xor
xor
loopne
iret
int3
les
daa
mov
mov
dec
jle
stos
add
jns
jg
add
(bad)
jb
adc
xor
xor
mov
add
sbb
adc
gs
xor
in
fiadd
addr16
mov
call
add
push
aam
adc
dec
jp
mov
push
icebp
lods
mov
lea
scas
out
mov
aad
dec
mov
fist
je
add
cmp
cmp
lods
or
xchg
nop
popa
in
add
mov
jne
jo
mov
xor
or
and
(bad)
ficomp
outs
data16
pushf
mov
sbb
cmp
ss
leave
lock
rcr
cmp
jmp
jmp
lods
add
scas
xchg
push
inc
div
jbe
pop
pop
imul
out
repz
pop
mov
cld
xchg
pop
cmp
stos
mov
cmp
ret
mov
mov
hlt
adc
add
add
outs
xor
jbe
cmovle
dec
xor
inc
pushf
in
cmp
jo
in
jp
inc
dec
push
dec
pushf
loop
ror
test
rol
inc
adc
fdiv
mov
stos
imul
pop
lods
mov
dec
cwde
ja
ror
push
and
jbe
xor
xor
icebp
in
xlat
jp
(bad)
loop
adc
pop
jne
add
aad
les
ja
inc
or
loop
pop
or
ds
fidivr
mov
mov
sar
sub
inc
popf
call
ss
mov
stos
data16
scas
ins
mov
loop
jne
cwde
scas
in
push
sub
aaa
into
repnz
fisub
mov
sub
test
in
out
pop
int3
jne
push
dec
nop
cmp
jbe
fiadd
dec
stos
add
push
pop
arpl
push
mov
jno
cmp
xlat
and
add
jne
es
fdiv
and
js
daa
mov
lods
pop
mov
pop
sub
jge
aas
mov
fdivr
fst
inc
mov
push
pop
pop
inc
push
dec
(bad)
xchg
fnstsw
hlt
push
stc
mov
movs
(bad)
adc
push
pop
into
enter
jne
into
push
(bad)
movs
scas
into
imul
(bad)
sub
inc
paddsb
mov
mov
out
shr
mov
(bad)
jae
push
fs
lds
mov
stc
fsubp
ficomp
arpl
cmps
stos
les
in
call
in
pop
retf
out
movs
xchg
stos
jp
in
das
fisttp
push
jns
push
out
cli
xchg
pop
lahf
(bad)
pop
mov
mov
xor
xor
xchg
push
iret
ins
adc
fdiv
in
xlat
call
scas
das
and
inc
jns
pop
out
jecxz
push
push
iret
ins
repnz
iret
cdq
mov
pusha
xchg
inc
stc
adc
inc
js
mov
es
cmps
das
inc
dec
(bad)
jmp
nop
add
inc
or
retf
dec
xor
mov
int3
clc
mov
and
inc
fisttp
dec
pop
loopne
push
jl
pop
add
pop
adc
sbb
sbb
(bad)
fsubp
sub
mov
inc
ja
lahf
inc
cmp
mov
push
cmp
pop
popa
and
loope
iret
or
mov
ret
ins
push
add
stos
loopne
cli
xchg
sub
sbb
je
fmulp
sbb
mov
cmps
jmp
inc
out
dec
mov
outs
imul
cld
int
sub
dec
and
or
je
push
fild
sub
push
inc
jl
in
xchg
test
adc
paddusb
cmc
inc
mov
jno
jp
stc
loopne
or
inc
sbb
stc
lds
xor
je
sub
retf
cmps
(bad)
cwde
dec
addr16
test
mov
push
dec
and
std
and
ds
pop
int3
add
rcl
add
outs
mov
push
mov
push
inc
mov
shr
(bad)
jle
mov
sahf
xchg
fimul
shr
dec
adc
mov
in
imul
setne
cwde
std
(bad)
xchg
adc
xchg
mov
pop
fbld
imul
mov
push
xchg
pop
cld
cld
and
xchg
in
cmp
inc
push
push
(bad)
lea
inc
mov
test
ret
fstp
retf
push
xchg
jb
mov
popf
sub
mov
fcomp
dec
es
rol
sub
(bad)
ror
push
inc
lahf
mov
jmp
pop
mov
out
dec
cmp
jl
and
repnz
ret
fldcw
jnp
adc
mov
mov
aas
data16
sub
mov
cmp
dec
mov
fcomp
push
test
mov
int
lock
pop
mov
leave
mov
or
cmps
jp
f2xm1
cmp
ret
int3
scas
movs
jp
mov
dec
imul
call
js
mov
push
jbe
mov
or
repnz
pop
jmp
popa
xchg
and
std
or
adc
and
fwait
loope
scas
sbb
leave
xchg
les
push
mov
ja
pop
dec
push
cmp
imul
jnp
xor
push
mov
xchg
jmp
fsubr
inc
mov
cld
sbb
mov
jmp
mov
dec
outs
mov
jb
sub
pop
nop
sub
lock
xchg
or
cmp
mov
add
pop
lock
cmp
call
pop
int
outs
scas
dec
out
stos
repz
mov
inc
sbb
inc
inc
icebp
leave
push
mov
add
push
cmc
out
dec
sbb
xchg
loope
das
adc
(bad)
outs
mov
jnp
ret
sbb
cld
mov
pop
xor
sub
loop
push
aam
dec
sti
mov
mov
add
(bad)
sbb
mov
inc
xor
pop
gs
loope
xlat
dec
xchg
pop
stos
leave
repz
inc
inc
pushf
lods
mov
int
mov
inc
nop
inc
push
pushf
mov
cmps
adc
nop
pop
dec
dec
enter
std
pop
pusha
sub
mov
dec
pop
(bad)
fs
(bad)
jmp
scas
in
repnz
aad
outs
daa
sub
jl
nop
inc
lods
inc
loopne
test
mov
test
(bad)
pop
arpl
or
outs
es
jbe
jae
stc
push
pusha
test
loope
aaa
mov
inc
push
setge
xchg
aad
bound
movs
sub
in
adc
push
pop
scas
setns
ror
stc
je
inc
sbb
dec
push
pop
adc
lock
mov
lds
pop
add
fidivr
lods
stos
(bad)
mov
cmp
xchg
pop
jecxz
jle
inc
ins
xor
mov
cmps
loope
xchg
inc
div
cs
mov
lds
imul
cmp
pop
add
inc
mov
shl
xchg
sbb
popa
or
popf
ins
ds
js
push
test
push
test
mov
dec
gs
inc
push
mov
addr16
dec
(bad)
dec
in
mov
lahf
lods
lahf
pop
mov
xchg
or
jae
xchg
fiadd
push
clc
outs
adc
loop
sub
cmps
popf
add
pop
ss
aad
ret
test
sahf
jno
xchg
outs
sub
not
mov
ja
jbe
mov
push
or
stos
fwait
push
pop
pmaxsw
jle
push
push
stos
or
inc
push
add
iret
add
adc
and
jae
pop
push
jle
in
fistp
ror
jl
enter
jecxz
pop
add
push
shl
lock
mov
out
xchg
jmp
push
mul
and
imul
and
std
test
sbb
cmp
loope
cs
jnp
mov
pop
cmps
pushf
mov
dec
std
pop
lea
in
sub
shr
and
jnp
(bad)
cmp
test
cs
(bad)
js
rcl
xchg
push
xlat
cmpps
push
cdq
inc
call
push
mov
mov
out
sub
je
cmp
adc
(bad)
add
mov
inc
cmp
icebp
cdq
jmp
pop
mov
ret
shr
hlt
inc
popf
jo
fisttp
cmps
es
mov
xchg
sub
pop
add
enter
shl
xchg
mov
xchg
xor
pop
imul
or
or
test
adc
stos
dec
cmps
cmp
cmps
mov
sbb
(bad)
loope
cmp
jae
dec
mov
mov
mov
ss
add
repz
push
cli
scas
push
clc
mov
or
(bad)
pop
add
add
push
and
and
test
cmp
in
cmp
sbb
fs
mov
jbe
inc
xchg
mov
adc
xor
cmp
in
ins
push
xchg
mov
xor
nop
cmps
out
out
push
adc
test
xchg
inc
xor
inc
mov
or
dec
ss
push
mov
adc
data16
inc
mov
jno
mov
movs
or
fadd
push
jp
add
dec
nop
pop
mov
enter
ja
push
or
in
test
imul
jp
jle
cmp
jne
dec
test
jne
data16
ret
sub
or
inc
mov
test
xchg
cmps
sbb
in
xchg
retf
sub
sbb
mov
add
ds
mov
inc
js
cld
fimul
aam
das
mov
test
cdq
push
movs
add
(bad)
out
retf
push
(bad)
jbe
pop
pop
and
add
jmp
jae
lds
xor
jnp
jnp
or
jns
lahf
and
stos
cld
imul
out
jb
add
dec
inc
jbe
sti
stc
xchg
or
jne
imul
mov
mul
call
fistp
mov
retf
or
and
out
mov
retf
fldenv
lea
in
or
test
vmwrite
ins
mov
add
sub
mov
or
fs
int
cmp
cmp
xor
in
push
cmc
cmp
pop
test
ret
adc
sbb
fiadd
in
jae
cld
aad
retf
and
push
addr16
cmp
and
inc
and
loop
aam
push
push
in
lock
jle
outs
xchg
jae
jmp
daa
sahf
(bad)
fdiv
fsubr
jnp
fs
test
pop
retf
xchg
xchg
xor
xchg
popf
js
call
and
mov
cs
pop
in
jmp
test
add
xchg
mov
jge
push
dec
dec
push
gs
stos
mov
push
or
or
and
cdq
dec
sar
imul
aam
sar
je
mov
jae
cmc
cmp
push
mov
cli
(bad)
push
test
ja
fdivp
xchg
cmp
jns
mov
retf
mov
shr
mov
fistp
aam
mov
push
push
popa
pop
mov
xchg
pop
sbb
and
push
sti
mov
outs
sub
push
sbb
cmp
mov
cmp
mov
push
(bad)
addr16
jmp
nop
jbe
cmp
call
xor
imul
sahf
sub
movs
dec
mov
fidiv
jp
jno
ss
enterw
push
mov
fstp
loopne
dec
sbb
ja
sub
ds
and
xchg
stos
jmp
into
cmc
iret
aam
aam
mov
jne
xchg
push
or
sbb
xchg
fild
xlat
mov
jbe
ffree
pushf
jns
jp
adc
mov
jg
imul
fnstcw
aam
paddd
int3
mov
pop
jecxz
inc
in
pop
inc
nop
std
ror
push
pop
push
pop
je
lods
stos
rol
mov
lahf
test
daa
inc
out
mov
push
imul
xchg
sbb
test
movs
fnsave
ins
shl
gs
cmps
inc
push
leave
dec
jae
xchg
inc
pop
mov
inc
pop
bound
dec
ins
ins
sti
out
sub
jb
repnz
fbld
jmp
bound
xor
jnp
(bad)
mov
jb
imul
sbb
fadd
pusha
enter
cmp
stos
in
adc
mov
xchg
rcl
xlat
(bad)
push
nop
sbb
xchg
sbb
(bad)
sar
mov
sahf
mov
addr16
add
(bad)
rol
dec
add
push
xor
or
call
dec
pop
add
xor
(bad)
mov
jb
mov
adc
jle
dec
imul
inc
in
repnz
xchg
push
rcr
(bad)
(bad)
sbb
in
stc
xor
pop
inc
pop
xchg
sub
fdivr
sbb
mov
xor
pop
ins
mov
fld
icebp
(bad)
dec
stos
pop
dec
retf
aad
add
aaa
xchg
sti
or
and
and
mov
test
cmp
mov
rol
call
adc
dec
inc
test
push
addr16
sub
mov
retf
xor
lea
rol
gs
or
pusha
mov
pop
aad
out
push
retf
add
test
inc
inc
add
lods
movs
neg
hlt
push
adc
iret
mov
mov
mov
dec
sub
not
fldcw
cmps
mov
ins
inc
mov
add
daa
loop
sub
nop
std
test
js
lods
pop
pusha
pop
imul
or
imul
in
lods
rcl
jmp
cmps
and
mov
js
mov
in
add
dec
out
(bad)
gs
push
pop
jp
movs
mov
sub
jne
or
jmp
inc
and
xor
scas
and
stos
and
mov
repz
jmp
mul
shr
in
shr
(bad)
mov
xchg
test
mov
pop
bnd
xor
mov
sub
pop
clc
xchg
jl
imul
add
fs
jle
out
dec
maxps
and
jmpw
(bad)
cmp
pop
jns
jle
call
cwde
cli
push
push
lods
rcl
mov
pop
jmp
fisubr
inc
pop
mov
fxch
jo
and
sahf
nop
shr
or
mov
xor
fdiv
sub
fcmovne
dec
sbb
ins
repz
sbb
push
mov
dec
dec
jecxz
mov
lods
lods
mov
hlt
ret
cli
cdq
cmps
cmps
xor
jle
ins
cli
or
(bad)
stos
sbb
das
pop
fs
pop
sbb
xor
add
sub
iret
adc
fidiv
jg
pop
dec
je
mov
out
lods
or
enter
xchg
inc
mov
sbb
cmc
mov
adc
int
mov
data16
arpl
mov
mov
sbb
mov
sbb
pop
xchg
int3
adc
neg
cmps
test
cmp
test
cmps
out
pop
ret
aaa
push
and
call
das
adc
jno
lock
retf
das
(bad)
jmp
out
std
push
mov
ja
adc
les
in
lods
(bad)
jne
ja
clc
scas
cld
push
cmc
fistp
mov
mov
jmp
or
(bad)
xchg
stc
in
les
sbb
in
pop
loop
xchg
dec
pusha
or
int3
mov
or
inc
mov
push
inc
mov
inc
jp
and
test
cmp
jl
push
rol
dec
call
out
mov
test
fstp
shl
jnp
mov
js
sub
shr
stos
mov
popa
cs
outs
out
hlt
pop
sub
sahf
stos
std
sbb
js
inc
xchg
mov
pop
test
sbb
cs
mov
sub
push
popa
push
aam
inc
test
sahf
push
ret
call
dec
in
fcomp
je
call
adc
fiadd
pop
bound
sub
cmp
inc
or
push
in
movs
jne
pop
dec
inc
or
retf
repz
push
fwait
clc
mov
add
es
(bad)
xlat
std
stc
les
outs
ja
(bad)
push
das
lock
(bad)
sub
push
iret
icebp
add
add
in
add
inc
xchg
mov
aad
repz
mov
add
push
cmp
cmp
cmp
add
lahf
lahf
pushf
xchg
and
jg
movs
shl
hlt
mov
push
mov
pusha
fimul
scas
out
jmp
xor
add
fwait
or
ret
aam
mov
lods
cmp
xchg
cld
jmp
ins
push
outs
dec
mov
xor
pop
mov
jns
xchg
call
stos
jl
and
xor
pop
mov
dec
push
movs
mov
xchg
dec
stc
pop
sbb
adc
jmp
pop
je
jp
gs
mov
jmp
xchg
cli
ret
fwait
pop
add
pop
out
pop
sbb
fs
or
xchg
dec
addr16
retf
inc
mov
sub
clc
(bad)
jnp
addr16
mov
add
imul
scas
xchg
cmp
add
or
sbb
pop
push
nop
daa
lea
(bad)
frstor
dec
jmp
push
mov
mov
lea
or
adc
mov
and
cmc
pop
mov
(bad)
sahf
mov
xrelease
inc
pop
enter
lock
in
push
test
out
push
pop
xchg
sub
test
movs
jge
push
(bad)
les
addr16
mov
sti
or
jmp
cli
xor
cld
les
fiadd
push
ja
adc
adc
jle
cmp
xchg
outs
and
stos
adc
add
popf
add
or
adc
loop
add
fisubr
mov
inc
mov
test
jns
xchg
lds
jo
arpl
ja
lahf
mov
pop
rol
mov
lea
inc
loopne
mov
mov
sub
pop
shr
hlt
inc
push
adc
call
stos
mov
cmp
fist
cli
es
add
dec
inc
jl
or
mov
imul
sub
int3
sti
push
pop
jns
sub
push
mov
or
int3
test
cli
sar
push
cmp
test
push
mov
(bad)
xchg
cmps
out
push
ss
ror
mov
xor
jmp
(bad)
sub
mov
xor
test
pop
dec
push
mov
xchg
dec
popa
add
mov
(bad)
push
mov
fcomp
rcr
jge
shl
fsubr
pop
mov
inc
test
es
mov
lods
inc
jl
idiv
cmp
adc
mov
cli
pop
dec
(bad)
ss
pop
loopne
xor
or
movs
lock
fmul
xchg
pop
loop
jns
sub
mov
or
mov
(bad)
in
inc
ret
jb
add
pop
jb
xchg
shl
push
jne
mov
xchg
repnz
cli
xor
aad
pop
call
sbb
mov
sbb
sbb
out
jae
cs
lods
jge
int3
jmp
mov
scas
mov
jae
sahf
pop
daa
xchg
inc
jmp
xchg
sbb
and
clc
sub
nop
lock
aad
sub
in
push
pop
pop
xor
loopne
fsub
aas
mul
fist
imul
sbb
call
adc
and
call
mov
sub
(bad)
aad
jle
arpl
(bad)
xchg
(bad)
aad
inc
xor
nop
cs
cs
push
call
cmps
rcl
aas
pop
xchg
call
and
rcr
mov
(bad)
(bad)
jmp
xchg
xlat
lahf
neg
xor
je
xchg
jae
test
xor
cmp
pusha
sbb
cmp
stc
xchg
sub
jbe
arpl
in
enter
(bad)
iret
bound
sub
aad
int3
lea
test
push
sbb
dec
push
push
dec
cmp
and
enter
loope
pushf
mov
je
cmc
loop
js
retf
mov
mov
mov
inc
aam
jae
jb
inc
xchg
push
rol
mov
sbb
dec
jecxz
and
xor
stos
jb
sub
add
imul
push
inc
jno
ins
mov
mov
mov
stos
xchg
sub
dec
mov
jo
shl
xchg
mov
cwde
ficomp
cmp
xchg
mov
loope
sub
dec
xchg
dec
cmovle
pop
xor
inc
mov
jns
rcr
ret
dec
pop
popf
loop
and
xchg
sar
fisttp
jne
repz
ret
aaa
test
(bad)
es
cmp
lods
cmp
push
fbstp
mov
xchg
jge
pop
dec
imul
sbb
stos
push
xchg
cmp
ror
lods
sahf
ret
fcom
out
and
loope
into
lahf
outs
push
dec
fnstsw
stos
daa
xchg
inc
ds
movs
xchg
cwde
stos
jecxz
mov
add
jo
imul
mov
leave
(bad)
push
scas
ret
stos
push
lock
inc
mov
pop
(bad)
push
pusha
sti
popa
cmps
push
nop
popf
mov
adc
stc
mov
xor
popf
xor
dec
cwde
call
cmc
je
sti
cmps
mov
xchg
xor
or
jb
push
outs
push
add
sbb
repnz
ret
mov
xchg
xchg
ins
and
xchg
and
ja
mov
jbe
arpl
lock
push
xchg
mov
push
jp
pop
fisubr
(bad)
aad
lock
push
cmps
imul
pushf
in
jbe
ficom
fwait
sbb
clc
mov
jnp
sub
jno
lea
(bad)
add
fdivr
adc
jecxz
ds
bound
or
(bad)
adc
cmp
jno
adc
fmul
push
nop
jmp
xor
int3
ins
popa
sbb
cmps
jg
test
mov
mov
es
dec
adc
adc
retf
inc
call
xor
xchg
stos
clc
inc
push
mov
scas
ins
shl
jo
repz
pop
inc
push
inc
mov
fdiv
dec
or
sar
jmp
ss
in
cmp
mov
add
xor
cmp
retf
shl
daa
hlt
pop
(bad)
(bad)
cmp
repnz
add
addr16
push
mov
push
fneni(8087
jae
mov
inc
nop
retf
xor
or
(bad)
push
and
cmp
mov
xchg
jne
das
(bad)
hlt
jo
lods
mov
loopne
or
in
movs
lock
outs
stc
iret
xchg
sub
mov
in
adc
push
pusha
jno
cmps
push
in
xchg
jp
jo
xor
sbb
in
cdq
cmp
jecxz
add
xchg
aam
dec
aaa
inc
inc
sub
out
mov
fnstcw
sbb
gs
add
cld
cld
pop
adc
ret
mov
sbb
mov
rcl
fisubr
cmp
inc
push
xor
dec
iret
sub
sbb
and
cmp
stos
sub
inc
ret
call
dec
in
sub
out
inc
invd
mov
std
mov
mov
enter
sub
inc
jmp
(bad)
mov
push
ret
icebp
lea
inc
hlt
cmp
pushf
pushf
aas
mov
das
push
xor
add
mov
shr
add
xor
sub
xchg
add
in
out
jmp
xchg
push
rol
sub
xor
jns
sub
xor
fmulp
push
cdq
(bad)
pop
adc
jbe
fs
shl
jmp
hlt
icebp
gs
inc
and
dec
push
add
das
out
sbb
inc
push
dec
test
dec
sub
ret
dec
xchg
xor
fcom
dec
out
(bad)
lock
popf
sbb
test
out
movs
sub
int3
(bad)
jmp
jmp
push
mov
mov
lock
sub
cmp
mov
ins
retf
clc
mov
sar
sbb
bound
pop
push
rol
jmp
jno
cmp
push
cmovns
mov
pushf
push
outs
in
inc
push
jmp
ins
test
sub
jmp
push
mov
call
push
xor
movs
pop
test
pop
shl
cwde
aas
jns
sub
lock
push
dec
das
inc
sbb
jg
cwde
loope
gs
out
fs
add
mov
or
test
fild
cmps
pop
mov
mov
pop
and
adc
xor
hlt
imul
mov
std
scas
and
icebp
int
(bad)
je
adc
mov
mov
loope
jecxz
mov
and
iret
add
or
mov
cli
dec
fst
mov
popf
pop
push
mov
rcl
outs
jg
jne
int3
lahf
pop
ins
into
adc
stc
sti
mov
jbe
mov
das
push
xchg
xor
cmps
mov
push
fs
imul
out
lea
sbb
sub
jp
mov
pop
xchg
retf
jnp
nop
mov
dec
adc
in
cmp
dec
call
out
retf
push
gs
test
(bad)
addr16
pop
mov
in
cmp
cmp
add
push
inc
push
pusha
lods
xor
or
popa
push
sar
(bad)
clc
cmp
or
xchg
aam
sbb
pop
xchg
sbb
dec
pop
mov
and
cld
xor
mov
pop
les
sub
imul
cld
fs
add
sbb
adc
je
(bad)
xlat
lock
ja
fdivr
cmp
inc
(bad)
cmc
(bad)
fstp
movs
(bad)
fidivr
jle
xchg
xchg
adc
xchg
inc
inc
lock
dec
and
xor
jl
xchg
xchg
mov
imul
pop
pop
cmps
mov
jl
div
into
push
mov
ja
call
test
adc
push
test
adc
mov
cmp
mov
fld
repz
push
and
add
cld
mov
mov
lahf
aad
or
sbb
and
(bad)
mov
into
inc
jnp
inc
gs
data16
ds
ds
xor
or
jns
dec
call
mov
push
aam
mov
mov
retf
add
jg
mov
scas
into
enter
mov
(bad)
push
daa
adc
and
jns
pop
pop
lods
je
push
add
stos
push
sbb
dec
jne
icebp
xchg
xor
add
adc
xor
mov
push
out
repz
retf
pop
jmp
cli
ret
push
sbb
js
jo
aam
jo
mov
pop
retf
mov
sub
loopne
daa
cmc
daa
sub
cmp
fistp
jo
cmp
xor
test
mov
mov
or
(bad)
fldcw
push
out
ins
push
bound
or
adc
les
ret
inc
add
and
outs
nop
imul
add
arpl
dec
inc
or
pusha
dec
bound
imul
(bad)
movs
fwait
pop
cmp
cmp
push
mov
jmp
fs
xor
cmp
mov
int
push
into
push
in
icebp
add
add
test
jns
fcomp
or
mov
dec
out
push
push
adc
cmps
mov
fcom
inc
leave
ja
jnp
sbb
sbb
dec
aaa
(bad)
rcr
movs
inc
and
sti
mov
sbb
ret
faddp
cmc
jge
pop
dec
dec
in
and
adc
in
test
dec
in
call
js
xchg
mov
pusha
or
jle
push
stos
into
inc
pop
cmp
aad
add
sub
bound
lea
pop
retf
mov
(bad)
aam
sub
sub
sub
mov
xchg
mov
in
adc
jno
sub
stos
imul
add
sbb
mov
mov
repz
pop
xchg
cmp
nop
mov
into
adc
inc
iret
mov
xor
jmp
ret
add
pop
stc
in
sahf
ss
data16
mov
nop
mov
mov
cwde
and
pop
jle
je
mov
xor
dec
add
xchg
or
xor
fmul
das
lea
enter
mov
(bad)
bound
cmp
add
fwait
addr16
movs
scas
aaa
(bad)
fstp
push
ror
imul
mov
mov
in
pop
mov
xor
add
inc
push
ja
sbb
call
mov
or
sbb
pop
dec
(bad)
xor
push
dec
jns
inc
fs
jbe
popf
mov
out
adc
pop
xchg
jge
retf
aaa
fmul
dec
(bad)
je
mov
std
(bad)
movs
loopne
fsubr
retf
adc
xchg
outs
pop
nop
ds
xchg
adc
mov
in
jmp
cmc
push
and
mov
test
cmp
push
xor
xchg
(bad)
cmp
pop
aam
pop
ss
in
jg
fsubr
in
push
mov
inc
sar
data16
pop
imul
sub
or
pop
stos
retf
xchg
retf
add
push
sar
movs
sbb
push
pop
out
mov
and
sbb
popa
test
push
xchg
xchg
xor
adc
mov
push
adc
scas
dec
xchg
pop
sbb
pop
mov
ja
out
pop
adc
jecxz
add
jmp
ret
dec
push
jg
loop
mov
(bad)
dec
fnstenv
pop
stos
scas
retf
cmp
lgs
retf
or
inc
push
imul
sbb
ins
iret
rcr
lods
mov
jmp
cwde
mov
out
sub
iret
popa
(bad)
rcl
pop
inc
sbb
test
inc
cmps
inc
jno
mov
imul
stos
dec
inc
xor
pop
pop
shr
xchg
test
and
ficom
call
aad
dec
and
test
mov
add
retf
adc
push
jge
idiv
mov
ins
xor
xchg
int3
clc
frstor
in
cmp
cmp
pusha
jb
ds
or
repz
into
push
inc
jmp
cwde
xlat
test
cmp
stc
sbb
inc
or
loopne
dec
xchg
fs
into
add
cmp
into
(bad)
repz
fwait
imul
adc
mov
or
push
add
or
icebp
repnz
gs
dec
jb
in
icebp
or
lods
and
xchg
jmp
push
retf
mov
shl
and
leave
cmp
add
mov
retf
sub
jecxz
stc
ror
push
fstp
xlat
mov
push
das
adc
cmp
cmp
mov
adc
xor
outs
aaa
aas
sub
cmp
cli
movs
jno
xchg
mov
dec
loopne
aad
add
pop
das
scas
pop
fimul
push
data16
jnp
xor
rcr
movs
dec
xor
iret
cs
call
aas
and
movs
iret
mov
add
retf
test
popa
call
aas
lds
cli
cmp
lea
test
mov
aaa
pushf
push
mov
(bad)
dec
add
pop
ins
repnz
pop
das
call
imul
mov
cs
scas
xlat
scas
and
sbb
and
adc
adc
pop
imul
scas
movs
cmps
and
nop
lea
leave
mov
or
and
test
lods
repnz
mov
pop
mov
xor
xchg
scas
stos
pusha
add
aas
mov
mov
cli
unpcklps
xchg
js
cmp
xchg
dec
mov
ret
sub
ret
push
add
mov
add
ins
cs
shl
or
lods
sub
fnsave
(bad)
add
pop
cmp
adc
cmp
push
inc
dec
pop
and
test
mov
jp
test
jbe
jl
and
adc
add
mov
mov
push
in
cs
inc
push
cld
movs
jle
mov
pushf
dec
iret
cmps
aas
pushf
push
hlt
shl
push
xor
xchg
fisttp
xchg
cwde
fisub
icebp
into
sbb
not
fcom
mov
sbb
cmp
or
sti
mov
repnz
les
nop
retf
add
pop
cmps
scas
sahf
ret
cmps
ins
xchg
stc
movs
mov
jae
test
in
cmp
fild
dec
push
iret
jo
(bad)
sbb
or
mov
or
push
mov
sub
fs
(bad)
iret
(bad)
out
icebp
repz
out
and
sub
ret
stc
lahf
push
pusha
jb
ret
ret
or
push
dec
aas
jo
push
cmps
push
sbb
mov
sub
scas
push
push
push
sub
je
and
xchg
jl
fadd
icebp
outs
iret
gs
inc
mov
fistp
mov
fnstsw
inc
add
jle
frstor
sub
xchg
cli
cmp
out
adc
adc
in
in
add
fisubr
fadd
pop
push
mov
pop
dec
sahf
xor
xor
idiv
dec
das
dec
loop
mov
jecxz
mov
pop
jno
je
xlat
pop
popa
xchg
adc
aam
retf
push
neg
xchg
and
mov
push
jmp
or
int
into
xlat
ret
mov
dec
mov
inc
dec
lods
jg
lods
test
scas
cmp
fld
and
add
lock
lods
ret
mov
mov
repnz
push
(bad)
jmp
rcl
ror
in
ins
ss
loopne
and
shl
daa
xor
inc
std
rcl
pop
mov
and
repz
pop
push
int3
push
loope
cmp
or
dec
iret
mov
(bad)
jmp
pop
push
xor
sar
pusha
lahf
sub
jl
ud2
test
fimul
and
cmp
daa
addr16
out
xor
scas
mov
push
pop
mov
fdivr
pop
dec
pop
xor
clc
inc
outs
cmp
int3
out
gs
in
dec
mov
scas
mov
cmc
mov
dec
gs
adc
inc
push
dec
lock
add
jl
dec
jbe
or
retf
jbe
push
arpl
repz
inc
cmp
(bad)
mov
test
jns
pop
loopne
push
outs
jmp
or
pop
mov
push
push
sbb
push
sbb
fnstcw
dec
mov
pop
mov
hlt
das
lea
movs
dec
(bad)
dec
daa
inc
dec
fisub
inc
xor
shr
pop
retf
or
test
pusha
or
sbb
adc
push
dec
scas
xchg
mov
out
xor
scas
das
sahf
dec
pop
xchg
movs
cmp
lea
jmp
push
cdq
cdq
mov
push
leave
mov
cld
cmps
or
arpl
jns
leave
sar
inc
cld
pop
inc
aad
cmps
retf
sbb
jecxz
pop
test
jp
sbb
bound
or
jne
stos
ret
adc
enter
mov
mov
(bad)
div
test
aad
ja
push
cmp
out
sbb
dec
xchg
jmp
add
hlt
mov
push
imul
xchg
(bad)
stos
or
cmp
lock
cmp
clc
mov
aas
or
xchg
sbb
sti
push
sub
mov
sbb
fmul
cdq
xor
test
jmp
dec
cli
xchg
inc
cmps
(bad)
imul
test
fidiv
les
jle
jg
jno
or
mov
inc
xchg
and
add
push
sbb
test
jmp
xor
test
div
adc
sub
frstor
xchg
mov
inc
retf
push
ja
inc
mov
push
or
inc
xor
inc
daa
aas
stos
pop
frstor
fdivr
jne
mov
push
shr
in
sbb
jg
test
push
mov
push
jle
lods
xchg
fidiv
mov
shl
retf
pop
pop
stc
cmp
(bad)
imul
aad
stos
adc
xchg
(bad)
outs
mov
add
add
je
or
pop
cs
dec
adc
mov
xor
mul
(bad)
mov
test
sbb
or
sti
es
fwait
sahf
pushf
inc
dec
ss
xor
clc
outs
jbe
add
pcmpgtb
aas
mov
jno
push
addr16
call
call
or
in
jb
mov
xor
in
jmp
xor
gs
mov
dec
retf
mov
into
push
icebp
mov
sbb
mov
mov
daa
mov
or
icebp
and
daa
jp
cld
jmp
jne
jb
test
leave
mov
lods
xor
sbb
cmp
xor
xchg
mov
inc
ret
pop
pop
imul
sahf
hlt
into
xchg
dec
push
adc
test
aaa
inc
push
test
adc
rcr
xchg
aas
push
dec
xchg
into
sbb
cld
test
fwait
fs
push
inc
dec
test
sub
or
in
dec
lods
and
pop
inc
xchg
outs
dec
and
jne
std
mov
test
sbb
sahf
out
pusha
fmul
stos
pop
into
add
das
pop
popf
loope
push
sti
loope
mov
xchg
add
mov
and
clc
in
add
mov
mov
aas
inc
pop
ins
outs
adc
xlat
jle
jo
jbe
rol
lods
cmps
arpl
pop
fnstenv
xchg
and
xchg
sub
xor
and
fidiv
mov
sbb
and
xchg
xor
mov
push
xchg
retf
popf
idiv
inc
cmp
retf
dec
dec
rcl
leave
mov
jns
push
jno
pop
out
ss
sbb
fcom
popa
cmc
cli
or
(bad)
mov
xchg
pushf
dec
pop
jae
inc
loope
or
aas
(bad)
mov
dec
loope
jb
fsub
sub
inc
inc
stc
jno
mov
stos
test
cmp
shl
mov
xor
adc
call
cmp
int
cmp
jbe
lock
hlt
cmp
stos
addr16
stos
and
fcomp
push
pmulhuw
xlat
test
mov
jg
cmps
dec
cmp
cmp
ss
adc
adc
inc
jbe
push
cld
bound
xchg
adc
mov
or
push
dec
sbb
je
adc
pop
call
js
stos
cmp
out
add
sub
mov
das
out
out
push
inc
fisub
cmps
mov
adc
sbb
or
mov
aam
xor
add
fucomp
sub
lods
into
jnp
or
mov
(bad)
mov
movs
leave
fdiv
mov
daa
pop
inc
fist
cmp
pop
jle
mov
enter
push
(bad)
dec
inc
pusha
(bad)
aad
sub
push
loopne
retf
mov
adc
dec
xor
sub
xchg
scas
in
push
call
nop
hlt
sbb
pop
int
pop
xchg
mov
mov
mov
pop
jne
into
xchg
ret
gs
cli
lods
mov
(bad)
mov
xchg
(bad)
cmp
sbb
add
dec
out
repz
mov
fsubr
(bad)
push
rcl
jns
add
jbe
pop
push
gs
int3
mov
jg
imul
(bad)
jmp
mov
jp
sbb
add
push
std
mov
mov
adc
mov
add
jno
or
and
adc
mov
aaa
and
xor
jle
pop
test
aas
jmp
mov
push
push
mov
shl
ret
add
cmp
cmp
mov
sub
adc
sub
movs
(bad)
bound
sub
mov
lea
call
and
pusha
or
movs
pusha
rcl
mov
js
lods
out
repnz
cwde
dec
fsubr
xor
ja
xor
and
out
sbb
ficomp
mov
adc
cwde
cmp
push
xchg
outs
test
jbe
cli
sub
dec
cmps
mov
movs
mov
dec
jbe
int3
movs
push
adc
sub
call
pushf
nop
mov
mov
loope
dec
scas
adc
mov
aad
outs
cmp
add
ja
xor
pushf
cdq
mov
repnz
mov
fsubr
outs
fwait
iret
jecxz
pop
jle
xor
jbe
repnz
jp
loop
and
cmps
aaa
push
add
shl
das
es
scas
into
mov
sbb
mov
cmp
lock
mov
nop
jbe
mov
mov
imul
aad
mov
add
or
and
add
sub
pop
lods
push
in
dec
mov
mov
lods
inc
dec
cmp
test
add
and
xor
or
pop
push
popa
push
xor
xor
cmp
inc
sahf
mov
adc
adc
cmps
into
cmp
call
xchg
jge
mov
push
stos
mov
in
sub
mov
sar
dec
push
inc
or
inc
push
out
xor
jmp
cs
je
mov
xlat
or
xchg
dec
pop
and
icebp
retf
fisubr
jmp
mov
push
pop
sbb
js
xchg
cmps
pushf
xchg
push
push
sub
in
push
int3
dec
leave
xchg
xor
pushf
out
ds
push
pop
pushf
aaa
div
in
inc
adc
push
sub
dec
xchg
hlt
mov
adc
jp
cwde
dec
addr16
mov
cdq
les
xor
shl
sub
mov
cs
fdivr
cwde
pop
call
adc
mov
div
or
fcompp
add
push
pop
or
ins
mov
xchg
call
adc
adc
jb
cwde
es
rcl
push
mov
(bad)
jg
retf
stos
out
sub
adc
xor
in
enter
adc
xchg
aam
in
sbb
popf
(bad)
mov
sbb
jns
nop
adc
mov
add
push
cmc
test
les
dec
xchg
call
mov
loop
dec
pop
or
movs
ins
sbb
xchg
xchg
test
dec
pop
add
jmp
jmp
js
add
add
aad
push
test
test
cmp
or
mov
sbb
jecxz
mov
addr16
mov
(bad)
sbb
outs
push
daa
mov
out
inc
lods
inc
add
xlat
cmp
sub
pop
xchg
mov
pushf
leave
call
out
sub
dec
sub
pop
mov
mov
xchg
or
fld
inc
sar
dec
bound
push
clc
ss
mov
fmul
inc
mov
fbld
mov
cmp
xchg
add
into
rcr
fst
pop
out
jmp
xchg
dec
ror
jg
sahf
imul
cdq
xchg
sub
fbstp
shr
daa
mov
out
and
cs
sti
push
pop
leave
mov
lahf
jb
call
xor
dec
pop
push
jo
sub
in
add
(bad)
jns
pop
cmps
sub
cmp
imul
(bad)
xchg
xor
shl
test
push
pop
or
cli
movs
stos
pop
inc
rcl
sbb
sbb
jmp
fcomp
sbb
mov
das
inc
ja
jg
inc
push
nop
push
retf
sub
icebp
push
popa
rol
jbe
mov
add
cmp
nop
sbb
push
lea
loop
dec
cmps
sbb
cmp
cmp
push
loopne
pop
jmp
xchg
sub
popf
mov
imul
and
xor
mov
sti
xchg
das
sub
adc
cmps
inc
bsr
div
jl
or
add
jge
push
add
xchg
and
inc
cld
inc
rol
(bad)
xor
mov
cdq
stos
and
outs
repz
mov
cmp
and
enter
iret
push
dec
and
adc
mov
mov
mov
sub
jnp
pop
movs
mov
push
pop
sbb
xchg
retf
pop
ja
int3
sbb
or
scas
jae
or
int3
ror
cdq
pop
out
xor
nop
mov
mov
jae
(bad)
sbb
xchg
in
jne
in
pop
aam
mov
sbb
jo
adc
int3
cmp
in
and
lds
xor
jmp
fstp
in
into
mov
retf
push
bound
(bad)
mov
dec
stos
mov
shr
cmp
jecxz
cmp
dec
push
jecxz
add
out
push
fwait
mov
dec
mov
popa
sbb
(bad)
or
or
daa
xor
pushf
fmul
push
pushf
pop
popf
iret
mov
daa
stos
ss
fisub
test
cmc
leave
in
pop
cmp
ret
and
jg
pop
sub
cmps
jae
and
inc
fisttp
out
dec
cli
dec
mov
cli
sbb
dec
push
bound
rcr
cmps
fwait
xchg
lock
push
jo
push
mov
pop
mov
mov
enter
cs
jl
dec
lds
(bad)
add
sub
addr16
nop
xchg
fisub
lods
sub
mov
or
and
xchg
inc
sub
(bad)
adc
int3
add
call
fwait
adc
test
cs
sbb
fcmovb
cmps
push
and
stos
test
popa
sahf
dec
xchg
inc
loope
dec
stc
xchg
into
shl
outs
iret
adc
sub
nop
test
hlt
jg
sub
mov
jmp
fs
pop
call
jmp
addr16
out
add
cmp
cmc
pop
push
pop
jl
stos
cmc
cmp
push
outs
add
sbb
cwde
ud0
scas
lods
fwait
out
adc
add
adc
retf
int3
stos
out
mov
dec
push
call
push
push
aam
pop
hlt
cmp
mov
and
sub
sub
stc
pop
add
and
loop
sbb
pop
lock
(bad)
in
cdq
inc
fs
jno
mov
cmps
dec
dec
mov
mov
leave
or
or
sbb
mov
sub
inc
loopne
pop
je
arpl
inc
dec
outs
mov
rol
adc
pop
aad
mov
push
stc
jecxz
xchg
jbe
in
xchg
jb
push
or
mov
das
or
js
xor
xchg
test
out
aas
mov
cwde
sbb
mov
pop
fild
adc
inc
add
test
jmp
fs
push
xchg
daa
adc
adc
pop
fistp
jb
test
or
mov
out
js
cmps
data16
inc
or
adc
fdiv
xchg
xchg
push
das
test
test
call
sub
rcl
add
xor
jae
adc
addr16
retf
dec
sar
pop
sbb
sbb
mov
clc
(bad)
and
nop
and
inc
nop
sahf
xchg
nop
ret
adc
and
mov
out
out
inc
mov
mov
popa
and
mov
push
fstp
test
retf
ret
ss
inc
(bad)
aaa
mov
mov
call
jg
rcr
cvtpi2ps
hlt
mov
ins
and
ret
push
jmp
retf
mov
xchg
add
xchg
hlt
pop
ror
ret
pop
scas
mov
popf
jb
mov
xor
add
cmp
add
lock
pop
(bad)
mov
out
lods
fld
inc
dec
lea
sbb
mov
sub
in
inc
aas
rol
fisttp
test
clc
daa
and
mov
in
lahf
jp
xchg
ror
stc
sub
js
mov
aad
into
ins
mul
test
movs
inc
dec
imul
sbb
enter
(bad)
push
(bad)
pop
retf
sub
xchg
(bad)
not
sub
xor
add
test
pop
ins
retf
sahf
add
lods
inc
bound
pop
jle
mov
movs
rol
push
(bad)
push
xor
fadd
push
push
retf
jmp
out
test
xor
pop
jmp
jnp
cmp
xchg
cmp
jp
cmp
imul
neg
lods
out
lods
dec
sbb
cmp
stos
rep
pop
cli
push
add
sub
call
jnp
test
inc
clc
lahf
cmps
pop
mov
data16
out
push
jmp
xchg
fst
stos
push
mov
mov
mov
push
out
fld
movs
or
jl
cld
push
mov
movs
jb
xchg
jbe
jae
jge
mov
call
daa
loop
push
icebp
and
add
dec
mov
mov
sub
les
sbb
push
pop
icebp
mul
mov
pop
adc
fcomp
and
mov
dec
push
stos
xchg
stos
pusha
ins
or
mov
and
adc
sti
shl
lods
ss
xchg
mov
mov
push
(bad)
stc
mov
jmp
sub
jns
mov
imul
mov
xchg
ins
sbb
dec
adc
test
pop
mov
sub
call
stos
ror
(bad)
sub
rcl
jge
les
ja
pop
pop
loop
hlt
add
imul
fld
mov
xchg
jle
(bad)
movs
out
jnp
cmps
push
out
jb
mov
cmp
stos
adc
mov
neg
fild
pop
popa
add
dec
pop
mul
sub
nop
xor
mov
ins
pop
dec
clc
and
in
dec
popf
lahf
out
and
loopne
in
in
fldcw
cwde
pop
mov
scas
cli
rcr
push
lds
mov
pop
fidiv
xchg
cmps
les
les
sub
sahf
adc
mov
movs
push
fdiv
dec
outs
push
jg
lods
sahf
scas
push
or
or
test
sub
(bad)
leave
jbe
sub
pop
nop/reserved
jmp
pop
mov
inc
mov
data16
retf
adc
cdq
or
xchg
lock
xor
xor
aas
ja
sbb
jns
popa
cmps
vpaddb
aas
add
sub
test
inc
lahf
(bad)
js
cmp
call
int
inc
sbb
adc
push
xchg
inc
push
and
xchg
cmps
shl
out
push
into
aaa
fst
sub
into
ret
add
rol
mov
push
sbb
cmp
ins
mov
xor
stos
mov
mov
xchg
push
mov
test
lods
ret
dec
retf
mov
cdq
mov
ins
int
sub
sub
and
jnp
sub
iret
sbb
pop
or
push
cmp
pusha
mov
fisub
shl
pop
(bad)
dec
add
test
jo
(bad)
ret
adc
and
sbb
fwait
mov
cli
stos
cwde
push
loope
pop
inc
mov
mov
sub
int3
xchg
and
rcr
test
pop
inc
daa
inc
and
xchg
inc
mov
ds
jo
lock
scas
in
fld
cs
mov
fst
addr16
or
and
mov
ret
push
pusha
jnp
mov
sbb
xchg
add
repnz
mov
cmp
sub
inc
mov
mov
mov
jmp
cli
and
mov
cli
xor
test
mov
cmps
test
pop
sti
lods
ss
loope
and
test
xor
pop
mov
imul
stos
pop
inc
cmp
dec
mov
mov
lods
fst
mov
xchg
and
jns
(bad)
xor
(bad)
and
loop
das
aad
sub
lods
aaa
fiadd
aaa
pushf
mov
out
cdq
out
jnp
fst
pop
mov
fs
ins
xchg
push
sub
xchg
sub
dec
push
lock
fadd
in
(bad)
ficomp
sub
mov
xchg
(bad)
test
cld
mov
popf
adc
je
or
in
pop
jb
ins
aas
push
pop
push
push
out
mov
jae
sub
pop
gs
jb
data16
sub
cli
loop
cmc
xor
pop
mov
and
mov
fmul
add
add
aam
out
fmulp
cmp
popf
sub
pop
push
dec
dec
fisttp
cmps
xchg
xchg
sub
sbb
mov
xchg
lahf
or
mov
sub
out
rcl
add
scas
test
les
mov
popf
faddp
sub
sbb
mov
sbb
mov
int
call
fbstp
dec
push
mov
push
and
test
push
mov
dec
icebp
ins
inc
dec
jae
push
dec
lea
mov
cmps
add
adc
inc
ret
scas
in
dec
jnp
sbb
imul
mov
(bad)
std
add
sti
fs
aaa
ins
imul
mov
mov
add
pop
das
out
call
aaa
mov
movs
dec
mov
push
add
adc
sbb
and
adc
ins
loopne
pop
scas
das
cdq
retf
sub
xor
cmp
jmp
mov
mov
int3
int3
enter
std
mov
and
mov
ja
dec
dec
aaa
inc
inc
jmp
sar
jno
mov
icebp
outs
test
dec
cmp
aad
adc
mov
xchg
movs
pop
xchg
int3
call
cmps
jb
ret
aas
loope
mov
or
push
jmp
inc
retf
repnz
add
cmps
xor
push
(bad)
pop
dec
pop
and
fsubr
dec
popf
add
mov
ins
mov
or
movs
(bad)
daa
push
in
pushf
ins
enter
xchg
(bad)
std
adc
push
cmp
dec
dec
dec
stos
sub
xchg
dec
stos
jne
lds
pusha
dec
add
and
ins
stos
stos
xchg
(bad)
(bad)
stos
adc
or
xchg
pusha
dec
out
dec
fistp
icebp
xchg
xchg
in
inc
je
pop
add
fnstenv
and
add
test
mov
mov
jle
int3
ret
jae
adc
iret
pop
push
lds
or
aaa
or
sub
(bad)
xchg
add
and
je
mov
jno
stos
add
retf
push
and
rcr
nop
pop
sbb
cmp
pop
cld
out
jl
mov
mov
aam
in
mov
call
sub
leave
cmp
or
scas
mov
and
and
pop
rcr
pop
xlat
cmps
pop
arpl
cld
dec
repz
adc
leave
jmp
inc
sbb
cld
es
ret
add
sbb
mov
cmp
jge
dec
ret
sbb
mov
inc
loop
out
bound
fadd
js
gs
(bad)
aaa
dec
daa
outs
pop
jbe
push
fwait
sti
jle
(bad)
adc
pusha
out
xchg
ror
sub
lahf
test
inc
cwde
mov
(bad)
ret
pop
cmc
(bad)
fild
inc
js
cmp
jecxz
stos
push
rcr
mov
add
jne
dec
jmp
scas
sub
mov
dec
mov
cmp
sar
stos
xor
popa
in
lods
or
inc
sahf
lods
adc
ja
xor
sub
in
rcr
mov
cld
mov
adc
mov
mov
mov
popf
fs
lods
pop
push
pop
jbe
dec
icebp
mov
pop
sub
shl
(bad)
push
mov
fisub
psubsw
xor
inc
mov
fldcw
fldcw
jmp
fdiv
xchg
mov
ret
sbb
loope
mov
adc
sbb
or
mov
cmp
lods
lea
mov
mov
adc
sub
xchg
mov
dec
mov
jp
xchg
rol
(bad)
cli
aad
and
das
mov
pop
xchg
aaa
inc
push
jmp
dec
movs
adc
mov
ret
sub
bnd
mov
das
leave
add
pop
rcl
inc
push
and
stos
cmps
outs
mov
test
gs
and
adc
cs
mov
dec
test
aad
or
jns
lods
pusha
(bad)
retf
xchg
jno
shl
xchg
in
scas
pop
push
push
dec
lock
xor
push
push
pop
fwait
xor
dec
in
push
sbb
leave
nop
(bad)
xor
jno
or
cwde
mov
ds
jp
push
aaa
dec
dec
pop
ds
dec
xor
enter
xchg
pop
cdq
ss
xchg
ins
mov
push
and
js
push
sub
push
cmps
mov
iret
scas
bound
cmps
sub
mov
ins
and
cld
cmc
adc
pushf
hlt
pop
mov
jge
xchg
call
mov
and
jmp
js
out
inc
or
cmp
jnp
mov
fadd
popf
jle
jno
aaa
xor
cmps
aaa
or
fsubr
cmp
test
sar
jmp
adc
mov
pop
push
mov
loop
adc
addr16
xor
mov
push
or
inc
xchg
xor
shl
sub
fwait
rcl
sub
(bad)
mov
adc
cdq
(bad)
aam
popf
cs
cld
sti
or
pop
fild
repnz
jne
ficom
movs
sub
xchg
push
es
ret
loopne
les
fwait
ret
push
adc
xchg
pop
ins
arpl
(bad)
stc
sbb
jb
inc
xchg
sbb
push
xchg
cmps
inc
inc
and
lock
out
push
xchg
sub
sub
rcr
mov
std
inc
in
es
pop
dec
mov
dec
inc
xchg
test
or
adc
adc
add
xchg
scas
push
cmp
clc
(bad)
sbb
repnz
ds
jmp
ror
fmul
or
pusha
cs
outs
inc
jns
cmp
cmp
sar
jmp
adc
sub
inc
cmc
or
jge
pop
repnz
int3
(bad)
mov
mov
xchg
sbb
mov
push
out
push
int3
mov
push
or
mov
out
inc
gs
call
xchg
inc
push
xor
add
mov
and
ror
fmul
cmp
cmp
mov
pop
mov
hlt
push
ds
loopne
fild
lds
imul
and
mov
jb
cmc
sbb
mov
les
jns
scas
and
pmullw
sub
ror
mov
ins
rcr
std
sub
call
mov
sbb
(bad)
adc
fdivrp
inc
add
loope
inc
add
cmp
test
pushf
cmc
cli
cmp
mov
cmp
jp
loope
pop
and
inc
or
fisttp
adc
stos
daa
sahf
fsub
and
xchg
xchg
mov
in
mov
mov
push
mov
add
imul
jbe
mov
retf
repz
int
xor
push
adc
jnp
call
in
retw
clc
ficomp
jl
test
xor
jno
arpl
cmp
xchg
sub
lods
or
aad
repz
add
test
jecxz
into
pop
inc
or
scas
pop
imul
pop
dec
mov
call
push
pop
(bad)
out
xchg
or
loopne
mov
cmp
clc
shl
dec
out
adc
call
adc
aas
sub
enter
loop
pop
icebp
or
lods
out
jns
fidiv
test
sub
ffreep
ja
(bad)
das
jmp
retf
sub
xchg
cmp
mov
inc
push
push
aaa
pop
xchg
mov
pop
sbb
add
add
loope
dec
retf
fst
cmp
mov
mov
inc
mov
sahf
ss
scas
stos
dec
cmc
or
cli
jecxz
push
shl
daa
pop
sar
adc
popf
adc
mov
sbb
retf
lahf
cmp
mov
dec
lahf
neg
shl
jne
cmc
loop
jb
shr
stc
out
std
jo
data16
imul
ret
mov
test
test
shl
xor
jbe
xchg
call
into
nop
lds
cli
enter
xor
cmp
push
xor
aad
cdq
dec
and
sbb
inc
lods
push
mov
adc
add
ficomp
into
test
fisttp
stos
clc
aaa
adc
pop
jns
add
sub
push
jecxz
and
fimul
(bad)
mov
loopne
jmp
ins
sub
mov
sub
jb
mov
cmp
stos
hlt
xchg
je
test
adc
add
inc
sbb
xchg
mov
ss
dec
scas
push
pop
pop
jo
add
xor
mov
jae
pop
popf
mov
fs
sub
xor
jns
add
sti
adc
enter
jns
repnz
iret
arpl
cmp
sub
fld
adc
lds
mov
jo
jns
xor
sub
test
shl
jnp
cmp
ror
xchg
jecxz
mov
ins
movs
nop
aaa
push
pop
mov
jg
mov
cwde
mov
std
or
movs
sub
push
pop
or
hlt
ret
test
fiadd
shr
icebp
cli
fcom
add
add
cdq
mov
hlt
sbb
aam
js
sbb
sahf
out
fwait
pop
xchg
sti
test
dec
pop
cmp
jb
and
leave
test
stc
ins
jae
cmp
pop
add
test
retf
mov
dec
jae
test
inc
int3
dec
shr
sar
inc
xchg
jmp
ret
or
xchg
inc
sbb
pop
sub
retf
cwde
inc
adc
repnz
(bad)
std
fdivr
jnp
xchg
js
imul
fistp
movs
pop
pop
mov
push
stc
addr16
inc
sahf
pop
pop
in
cli
mov
mov
imul
mov
fld
mov
scas
out
adc
push
leave
and
repnz
jmp
xchg
cmp
test
loopne
pop
jnp
in
inc
inc
sub
mov
popf
mov
popa
cdq
xor
int
jae
and
mov
dec
mov
xor
jno
push
mov
sbb
dec
mov
push
or
pushf
test
cld
xor
dec
dec
mov
mov
imul
(bad)
push
mov
shl
sahf
ds
stos
jmp
dec
pusha
ins
hlt
gs
sub
jns
push
inc
xchg
aam
cdq
jne
cs
fistp
test
imul
sub
jl
loop
xchg
sbb
jp
push
cmp
or
iret
in
mov
int3
cmp
pop
stc
and
xor
mov
pop
cmp
jae
inc
mov
fwait
shl
mov
inc
sbb
fs
mov
fiadd
xlat
xchg
or
fimul
mov
ins
sbb
cmp
or
(bad)
ja
cwde
scas
sub
or
mov
xchg
cmp
push
cli
in
std
jmp
out
es
sbb
jp
inc
pop
ret
in
fwait
into
add
cmp
idiv
or
adc
add
mov
jb
and
stc
mov
sub
adc
mov
and
or
mov
mov
(bad)
and
ins
adc
mov
and
nop
popf
and
repz
out
and
lahf
es
jae
cmps
cmp
adc
pop
(bad)
jl
mov
or
pop
cmp
jno
xchg
pusha
cld
push
fimul
fisttp
stc
or
cmc
mov
js
pop
sbb
inc
fsubr
retf
add
aad
fild
sbb
adc
push
popf
push
lea
mov
jno
dec
mov
sbb
and
popa
adc
test
test
stc
out
shl
adc
loope
movs
lock
jae
inc
in
inc
clc
movs
pop
sbb
mov
push
adc
push
in
fucom
cmps
shl
loopne
or
cmp
mov
xchg
sbb
iret
xor
fbld
jmp
aam
or
js
adc
inc
jmp
mov
sahf
cmp
lods
or
ss
dec
pop
cld
push
push
ror
lds
popa
add
enter
call
inc
xor
jecxz
push
mov
and
push
dec
push
(bad)
push
cmps
into
and
push
imul
(bad)
mul
loop
xor
mov
adc
iret
ror
ffreep
gs
iret
jmp
enter
fcom
movs
aaa
mov
pop
retf
or
outs
(bad)
pop
inc
repnz
inc
xor
retf
jnp
dec
arpl
sub
pop
mov
push
push
enter
push
mov
stos
xchg
mov
(bad)
out
bnd
out
dec
push
scas
add
inc
jecxz
mov
sub
xor
cmp
test
movs
rcr
fidivr
adc
lds
jecxz
scas
ret
cmp
stos
dec
loope
lock
in
push
mov
pop
add
int
and
fisttp
retf
xchg
ds
daa
retf
xor
pusha
inc
fdiv
addr16
add
fsubr
xor
xor
or
push
mov
mov
stos
pop
xchg
mov
pop
jmp
inc
or
aam
pop
mov
outs
mov
or
adc
sti
inc
(bad)
pop
xor
fist
mov
test
push
mov
mov
mov
loope
pop
jnp
jne
mov
xchg
jns
ss
cli
repz
js
xchg
sbb
add
or
scas
cmc
mov
dec
push
fucomip
jne
andnps
aaa
inc
gs
pop
loop
cmp
mov
dec
jbe
sbb
rcl
in
popf
xchg
push
sub
fdiv
mov
arpl
dec
push
inc
div
lds
call
cmp
aam
fst
int
hlt
add
mov
jo
jl
cmc
bound
fcomp
pushf
and
shl
mov
xor
or
add
xor
xchg
pop
rcr
iret
jae
(bad)
or
pusha
jl
dec
xor
repz
push
(bad)
idiv
or
jle
adc
stos
mov
pop
mov
outs
shl
outs
add
add
push
icebp
gs
and
sbb
das
addr16
test
lods
push
or
xchg
jno
jae
(bad)
mov
pop
gs
dec
repz
out
mov
lds
pusha
mov
lods
jl
and
jge
push
test
aas
xchg
lahf
mov
retf
or
int3
out
mov
push
int3
inc
cli
sbb
inc
push
mov
lahf
(bad)
stc
pop
xor
or
or
movs
cmp
retf
cmp
lds
rcr
(bad)
and
inc
or
jg
std
bound
jne
add
ficomp
and
and
jb
cdq
xor
push
xor
stc
fiadd
cs
jae
in
adc
mov
movs
cmp
jecxz
aas
inc
mov
std
dec
jae
jmp
pop
mov
dec
dec
mov
ror
inc
cmp
push
repnz
mov
ficom
jmp
imul
std
jb
inc
jnp
mov
fisubr
and
adc
setae
gs
lock
adc
jne
outs
and
ins
shr
outs
pop
movs
mov
mov
pop
inc
in
repz
das
aaa
or
mov
cwde
fiadd
pop
add
dec
icebp
leave
ret
js
adc
sub
in
hlt
and
and
xor
add
nop
shr
jne
fstp
sbb
pop
mov
or
cwde
repz
fsubr
add
sub
push
loop
add
sbb
inc
mov
mov
mov
mov
pushf
sub
js
(bad)
jmp
xchg
lahf
adc
or
adc
arpl
int3
clc
sub
into
sub
xchg
imul
xchg
cmp
adc
pop
cmp
sbb
icebp
(bad)
pop
and
push
aam
movs
loop
jno
imul
xor
adc
xor
mov
inc
dec
int3
idiv
div
out
xchg
xchg
retf
mov
xchg
adc
adc
mov
cmp
test
into
sub
lods
and
mov
pop
movs
outs
mov
ss
cmc
mov
add
inc
ror
push
push
pop
ins
xor
movs
and
cmp
dec
ins
cli
aaa
test
jne
fcom
jle
xchg
fs
sbb
push
int
repz
add
int3
xlat
rcl
hlt
sub
push
cmp
mov
movs
jb
stos
loop
dec
out
mov
int3
inc
or
call
sbb
push
shr
jmp
xor
add
ficomp
mov
fdiv
push
fisttp
in
shl
mov
call
or
dec
dec
mov
ret
pop
cdq
cwde
lods
adc
sub
sub
sbb
push
mov
add
xor
vrcpps
repz
fwait
jne
mov
call
jge
adc
xchg
mov
call
xchg
push
mov
xor
repnz
sbb
outs
cmps
push
and
and
mov
mov
nop
test
jns
jmp
mov
mov
or
and
rol
ret
das
xor
into
retf
outs
inc
jno
retf
(bad)
push
dec
mov
fwait
xor
pop
movs
mov
mov
scas
push
mov
add
sub
ja
mov
push
ins
out
mov
mov
push
js
arpl
daa
sbb
dec
(bad)
imul
cli
popf
cmp
mov
das
shr
das
push
leave
icebp
arpl
movups
fmul
xor
push
gs
mov
mov
cwde
push
mov
enter
in
cmp
mov
out
mov
sbb
jae
cwde
mov
scas
(bad)
and
add
sti
(bad)
loop
sar
cmp
pop
ss
rcr
in
out
push
push
cs
ret
or
mov
push
fidiv
inc
and
sbb
call
lock
adc
xchg
inc
scas
(bad)
mov
in
mov
icebp
jbe
dec
repnz
data16
rcl
jge
mov
inc
movs
dec
test
mov
inc
mov
xchg
lods
int3
jb
daa
xchg
mov
sub
lahf
mov
(bad)
sub
push
mov
jmp
xchg
jecxz
ss
addr16
push
into
stc
push
addr16
cmc
dec
outs
jg
xor
imul
jmp
aaa
push
mov
add
sbb
int
iret
lds
push
enter
(bad)
cdq
imul
imul
cmp
xlat
repnz
xchg
xchg
inc
add
pushf
ret
aad
push
xchg
nop
retf
out
and
sbb
adc
jle
adc
adc
inc
add
xchg
aad
dec
mov
adc
(bad)
xchg
out
scas
addr16
jmp
sbb
stc
push
cdq
daa
es
sbb
outs
fisttp
jnp
stos
imul
mov
push
xor
lahf
mov
leave
(bad)
clc
or
jp
js
xchg
jno
cmps
lahf
adc
das
ins
cdq
aad
push
push
xchg
push
xchg
retf
jno
fcomi
add
out
add
test
int3
shl
fs
mov
inc
out
push
into
sbb
(bad)
fmul
and
aam
jbe
je
call
fisubr
test
xor
and
pushf
push
mov
cmp
scas
jae
sti
inc
jg
mov
mov
inc
cmp
call
and
stos
aam
sub
movs
sar
xchg
jle
and
movs
push
dec
in
jbe
pop
(bad)
inc
iret
sbb
and
ja
gs
and
adc
inc
and
mov
push
jb
invd
das
iret
xor
pushf
dec
cmps
test
mov
mov
lahf
fistp
jl
scas
mov
aaa
fild
fwait
and
clc
addr16
ja
push
jge
mov
pop
inc
xchg
ins
cmp
dec
or
cli
mov
xor
fdivr
rcl
sbb
xchg
push
xchg
inc
popa
scas
je
inc
sub
ss
cmc
stc
jne
(bad)
mov
mov
retf
and
and
daa
xor
in
mov
jno
add
test
daa
adc
ja
mov
js
mov
mov
mov
and
and
loop
pop
(bad)
call
dec
int
das
mov
cmp
mov
addr16
scas
lea
pop
or
cmp
mov
xchg
adc
adc
xchg
add
pop
xor
es
xchg
mov
sbb
mov
inc
or
nop
dec
mov
mov
mov
mov
retf
loop
pop
rol
sti
out
xchg
lods
dec
jbe
js
ret
xlat
sbb
retf
jle
mov
lock
retf
out
ja
in
adc
test
sbb
mov
shl
inc
xlat
push
ret
and
mov
adc
sar
mov
sub
mov
mov
cmps
ja
cmp
sub
sbb
xor
jne
arpl
gs
sbb
frstor
repnz
cld
movs
jecxz
jl
test
cdq
test
nop
adc
and
push
stos
arpl
mov
adc
(bad)
jmp
push
mov
imul
pop
dec
in
aad
je
mov
or
shl
cmp
add
js
shr
in
es
and
shl
cmp
aad
fwait
loop
push
push
dec
pop
in
push
mov
test
cmc
mov
jmp
daa
sbb
test
mov
cwde
add
jg
mov
ret
adc
mov
cmps
scas
outs
imul
mov
outs
fidiv
mov
xor
or
sbb
mov
in
fist
and
xor
cmc
cmp
ret
addr16
ret
xchg
cmp
push
xor
sti
pop
push
push
push
pop
std
addr16
push
sub
clc
xor
or
outs
bswap
mov
cmp
sub
(bad)
fwait
pop
and
shr
loopne
pop
int
pop
pushf
pop
sub
rol
sub
adc
outs
rcl
cli
(bad)
fsub
pop
lea
sub
mov
jecxz
mov
mov
adc
hlt
dec
leave
mov
mov
pop
push
dec
xchg
cld
add
(bad)
loope
dec
gs
and
dec
mov
xchg
outs
loope
jnp
and
and
stc
jae
(bad)
(bad)
adc
xlat
push
push
sahf
adc
mov
imul
and
outs
scas
aam
gs
jl
retf
mov
retf
mov
jmp
ds
ss
rcr
xor
rol
mov
rcl
in
pop
push
jl
nop
sub
and
mov
loope
outs
adc
retf
movs
outs
pop
out
in
aam
push
stos
mov
push
cmp
mov
dec
jmp
imul
xor
mov
jp
call
sub
cwde
sti
movs
loopne
adc
xchg
sti
popa
cmps
pusha
ss
mov
xor
dec
bound
scas
adc
pop
mov
cmp
mov
es
push
pop
nop
mov
pop
daa
dec
or
int3
dec
add
rcl
add
mov
(bad)
js
pop
sahf
push
jo
mov
imul
sti
cdq
sub
mov
call
jbe
dec
cmp
or
clc
fcom
ins
jmp
and
jg
mov
pop
movs
or
out
and
repnz
iret
cmp
cwde
daa
lds
pop
pushf
scas
xchg
aas
add
mov
sbb
sti
pop
sbb
dec
in
adc
bound
scas
(bad)
js
xor
nop
mov
ret
in
(bad)
lock
or
sbb
or
xchg
add
addr16
fwait
add
push
sbb
test
mov
sbb
je
or
aad
pop
repnz
rol
gs
adc
mov
cmc
ja
scas
pop
cmp
mov
aas
xchg
fisub
test
mov
adc
loope
add
dec
jae
iret
dec
add
movs
cs
dec
add
(bad)
fwait
add
push
pop
xor
adc
push
adc
aaa
ss
push
data16
mov
inc
jmp
xchg
fld
dec
mov
lahf
push
pop
outs
push
cmps
xchg
push
lods
rcr
mov
push
pusha
bound
cmp
test
and
das
mov
movs
imul
inc
cmps
bound
scas
push
xor
inc
ins
cmp
addr16
push
dec
jmp
icebp
mov
ret
pushw
and
jno
cwde
xchg
dec
cwde
sbb
or
push
inc
mov
add
popf
mov
inc
inc
adc
in
push
in
add
hlt
adc
xchg
sbb
xchg
(bad)
popf
test
fwait
loopne
iret
lods
(bad)
sub
jp
dec
mov
int
ja
aas
test
stos
shr
(bad)
or
sbb
mov
xor
mov
cmp
les
xchg
xchg
dec
mov
xor
push
inc
pop
test
(bad)
out
repnz
movs
sahf
dec
push
loop
cmp
sbb
pop
jb
sbb
sar
scas
add
mov
rcr
pop
mov
daa
sbb
mov
sahf
adc
push
pop
cli
rol
add
inc
mov
push
xor
pop
aas
cli
test
cmps
imul
xor
lea
push
jp
mov
push
adc
push
bound
in
nop
ret
mov
fiadd
xchg
loopne
add
dec
sar
lahf
xchg
inc
adc
mov
movs
test
xchg
pop
(bad)
cdq
loop
in
sub
or
jge
cmp
inc
xor
sti
shr
mul
push
loopne
jns
sbb
push
or
int3
loope
(bad)
out
aas
movs
pop
dec
jno
aaa
push
nop
gs
test
push
push
pusha
iret
jmp
sub
mov
and
imul
mov
fist
xchg
inc
mov
pop
fistp
dec
aad
mov
sub
stos
ja
cld
hlt
out
and
mov
loop
adc
xchg
or
ins
dec
mov
mov
xor
enter
aam
mov
out
pop
call
loop
jo
mov
mov
xor
mov
mov
jne
mov
stos
xchg
iret
xor
shr
dec
jae
scas
enter
inc
(bad)
stos
imul
push
push
(bad)
xlat
fisub
cmp
sub
mov
div
sub
inc
mov
pop
cmp
nop
inc
and
enter
mov
push
iret
jle
mov
xchg
arpl
mov
dec
jmp
aaa
jnp
mov
xlat
xor
xor
jno
or
aaa
pop
inc
cli
lea
scas
cmp
aaa
int3
mov
loop
xor
jb
dec
adc
mov
ins
jnp
sub
adc
js
fistp
jns
mov
adc
push
inc
inc
xor
dec
lock
mov
dec
push
pop
ret
cmp
inc
sub
fs
inc
inc
(bad)
out
div
into
call
jl
mov
adc
mov
sbb
xchg
lods
scas
sbb
fs
in
into
pushf
scas
(bad)
in
hlt
mov
sar
push
xor
pop
pop
or
nop
sub
jp
das
add
pop
outs
or
(bad)
sub
ret
cmps
sub
rol
movs
fwait
retf
mov
cwde
and
(bad)
or
sub
call
mov
jle
mov
xchg
stc
pop
js
imul
inc
repz
mov
sub
sbb
jmp
and
bswap
pop
shl
sub
sub
mov
mov
mov
fcomp
ins
jg
jae
mov
xchg
xchg
cmp
xchg
popa
inc
addr16
ja
pop
push
sub
xor
pop
js
into
lea
mov
inc
mov
in
bound
sub
mov
fcomp
add
clc
daa
std
(bad)
sub
mov
pop
inc
loopne
jno
pop
enter
xchg
fstp
xchg
pop
xchg
shl
ins
sar
xchg
js
inc
mov
add
dec
lock
int3
jno
icebp
xchg
mov
adc
add
mov
or
inc
xor
dec
and
cs
ss
mov
out
jb
in
ins
shl
xchg
cmps
out
jne
mov
push
ret
mov
sbb
popa
js
and
jecxz
add
pop
jo
and
inc
mov
int3
jae
jg
sub
mov
mov
in
dec
mov
out
sbb
inc
hlt
jl
aaa
mov
push
data16
push
pop
push
sub
mov
test
fcom
jbe
or
mov
xchg
sbb
rcl
outs
mov
outs
not
test
and
out
mov
add
lahf
cwde
sub
push
lods
sbb
inc
cli
jne
retf
shr
out
out
jno
js
test
fsub
add
adc
mov
std
jbe
xchg
int3
ret
add
jbe
bound
scas
add
or
ja
test
push
(bad)
fidivr
sbb
fstp
inc
dec
(bad)
repnz
lds
nop
jne
inc
dec
jp
addr16
jns
xchg
ss
cmp
leave
aam
mov
mov
inc
(bad)
xchg
rcl
xchg
cmps
cli
cmp
icebp
arpl
pop
and
lock
push
mov
(bad)
pop
ins
into
neg
(bad)
ins
sub
mov
sub
into
sub
or
push
mov
or
ror
sbb
xlat
sahf
adc
cld
adc
inc
fbld
in
fwait
lock
loopne
xor
lahf
mov
mov
xor
add
mov
loope
les
out
sub
push
cmp
sub
retf
lahf
call
jg
xchg
clc
mov
out
mov
dec
mov
mov
cmp
dec
adc
jne
dec
inc
stos
and
iret
or
xchg
and
xchg
hlt
sbb
inc
out
mov
cmc
pop
mov
arpl
mov
cmp
cmp
and
push
sahf
inc
adc
mov
fst
jg
(bad)
cmp
mov
imul
sub
adc
push
cdq
loopne
hlt
sub
xchg
test
mov
int3
pop
pop
sbb
cwde
popa
xor
aaa
mov
xor
shl
out
mov
pusha
jmp
lods
cli
scas
mov
repz
mov
jbe
ins
icebp
scas
test
jmp
icebp
add
enter
fwait
and
bound
shl
inc
and
bound
xor
out
sub
jae
in
mov
jmp
sti
adc
mov
push
and
sub
cmp
ret
add
sbb
test
xchg
sbb
pop
add
or
stc
inc
xchg
rcr
ja
imul
das
sbb
add
xchg
jp
pop
adc
inc
sbb
cmp
test
mov
pop
rol
push
(bad)
adc
mov
push
lock
aad
xor
jp
push
rcl
and
mov
mov
fwait
adc
mov
test
pop
mov
in
sub
xlat
and
daa
or
sbb
jns
inc
xchg
inc
or
xor
jmp
push
pop
push
dec
xor
sbb
adc
sar
sbb
xchg
in
mov
out
fnstsw
push
int3
mov
push
xor
cmps
adc
jbe
mov
mov
scas
inc
das
inc
cmps
push
scas
sahf
fcmove
xchg
test
in
retf
fst
ret
jp
cmps
jne
cmp
jl
sub
stos
mov
jb
cs
movs
mov
fadd
pop
mov
mov
adc
pushf
icebp
or
test
adc
push
aaa
retf
xchg
jne
movs
sub
mov
psubw
mov
push
sbb
call
mov
xchg
js
inc
mov
add
mov
js
sub
iret
mov
retf
(bad)
cmps
out
das
mov
pop
xor
fidivr
aas
daa
popf
mov
lahf
push
jle
pop
jge
push
push
scas
and
sub
jmp
xchg
rcr
mov
mov
in
sub
push
nop
cmp
pushf
lahf
call
pop
inc
push
mov
mov
(bad)
jbe
js
jecxz
mov
pop
mov
jg
popa
lods
ins
cld
pop
imul
(bad)
dec
or
sub
addr16
and
out
fnstsw
add
gs
jbe
pop
mov
inc
adc
and
outs
jecxz
sbb
sub
push
xchg
dec
ins
mov
sbb
test
sbb
arpl
push
pop
sub
sbb
mov
fisubr
mov
(bad)
mov
dec
ret
(bad)
out
call
adc
push
inc
sbb
mov
das
fisubr
and
mov
test
inc
sub
jns
adc
repnz
pusha
dec
and
into
or
mov
repz
mov
cmp
sbb
mov
push
(bad)
and
test
and
jl
cmc
ins
jle
add
cmp
xchg
pop
fsubr
fdiv
xor
sbb
or
and
js
cmps
push
fdivr
and
movs
mov
retf
xor
shl
pop
mov
jl
aam
inc
sbb
in
sar
pop
mov
pop
outs
xor
leave
pop
hlt
mov
test
xor
and
and
xchg
outs
dec
push
or
inc
mov
test
les
push
xchg
inc
xchg
sub
mov
push
out
inc
(bad)
lock
inc
int
iret
mov
xchg
out
out
ror
mov
pop
popf
ja
ins
or
mov
sbb
sub
es
add
pop
fidivr
neg
adc
and
mov
or
sbb
dec
ds
dec
cld
push
int
cmps
test
mov
sub
and
imul
sbb
pusha
xchg
fisubr
inc
jns
(bad)
popa
stos
push
sbb
bound
lahf
ins
pop
test
cmp
or
and
adc
and
inc
cwde
arpl
outs
stos
cmp
pop
fstp
test
sub
inc
pop
or
repnz
in
es
mov
mov
sub
icebp
hlt
fwait
dec
and
dec
mov
sahf
and
fwait
call
mov
push
cmps
push
sbb
je
mov
cli
cmp
xor
mov
mov
mov
test
rol
jmp
les
pushf
or
movs
dec
inc
push
(bad)
sti
test
mov
jbe
outs
jnp
int3
jp
cmc
cwde
mov
xchg
add
popa
stc
mov
imul
inc
cmovge
inc
fs
and
test
mov
add
lds
and
mov
sti
outs
int
out
sahf
xlat
and
pusha
cmps
jne
sbb
aas
pop
pop
movs
cdq
dec
jbe
ins
mov
les
xchg
scas
and
and
jnp
sub
push
ins
jg
dec
inc
popf
shl
xchg
outs
mov
ins
cmp
fstp
mov
enter
por
add
jnp
push
jp
mov
aas
(bad)
nop
pop
jb
dec
dec
out
(bad)
(bad)
mov
gs
add
mov
clc
clc
fmul
movs
sbb
loopne
fstp
mov
fidivr
add
pop
jp
mov
imul
test
push
xchg
sbb
pop
sub
fwait
jmp
push
mov
mov
mov
sub
in
pop
push
leave
mov
movs
icebp
pop
dec
sub
sahf
int3
retf
in
in
ret
xchg
scas
push
lds
test
cld
xor
nop
in
or
mov
jne
jbe
ja
jbe
mov
cmc
ror
test
call
jno
loope
jae
cdq
push
imul
movs
cmp
shl
xor
test
push
(bad)
call
sbb
and
int
cmp
pusha
stos
and
test
mov
lods
mov
daa
jge
jle
sar
addr16
push
jge
adc
loope
xchg
adc
xchg
cmp
or
test
push
das
pop
shr
imul
xchg
mov
pop
inc
imul
mov
addr16
jmp
mov
dec
and
mov
inc
push
mov
jae
or
fs
movs
ins
xchg
jb
cmp
jg
push
and
xchg
sbb
fmul
xchg
push
mov
fs
fcom
ins
xchg
xor
cmps
push
shl
mov
xchg
cmp
imul
fstp
xchg
mov
pop
retf
sar
jge
xor
sbb
or
mov
sbb
cli
pop
dec
ins
in
jle
enter
mov
ret
(bad)
aas
add
mov
adc
jns
jb
dec
outs
retf
fbstp
inc
sar
enter
arpl
and
push
bound
sahf
pusha
es
sub
jp
fmul
pop
clc
or
push
push
add
pop
mov
imul
rcr
sbb
or
imul
push
aad
stc
sbb
iret
sub
mov
gs
imul
stos
pusha
(bad)
les
or
dec
adc
pop
cmp
lods
xor
pop
xchg
cmc
gs
mov
jle
adc
add
push
push
lds
test
and
cdq
into
jb
leave
aam
(bad)
stos
pop
ret
cmp
cmc
mov
in
sbb
jmp
clc
or
adc
push
mov
mov
xchg
xor
dec
pusha
dec
popa
fcmovb
push
adc
add
lea
add
pop
call
dec
std
(bad)
ja
push
bound
dec
sbb
push
fwait
xlat
je
ds
pop
pop
or
or
fs
pushf
jae
mov
mov
rcl
cmps
clc
mov
stc
inc
lock
mov
cwde
outs
and
mov
std
sbb
sub
es
add
mov
jp
cmp
xor
aad
fs
in
xor
sub
jae
loop
sbb
mov
mov
(bad)
sub
jb
stc
sti
push
aaa
int3
stos
dec
inc
cmp
or
mov
mov
jo
std
mov
pop
and
xchg
and
push
sbb
sub
cmovle
cmovae
retf
fcmovne
adc
mov
cwde
add
aam
inc
mov
push
push
(bad)
push
and
push
sbb
cmps
aas
add
aaa
mov
add
xor
es
aam
jo
push
xor
sbb
xor
fnstsw
jns
bnd
pop
push
das
and
sahf
mov
and
add
ds
xchg
fcmovnbe
ret
shl
fdivr
xor
loope
mov
mov
popf
or
adc
loopne
ins
sub
scas
pop
adc
aam
sub
mov
push
sbb
pop
push
aaa
pop
test
push
inc
cmp
iret
cmp
jnp
icebp
sbb
sar
std
sub
cmc
scas
adc
stc
mov
mov
xor
mov
jno
push
mov
lahf
fimul
inc
lods
cmp
add
ror
iret
sub
bound
mov
cmp
fdiv
je
sahf
add
nop
mov
xor
stos
(bad)
push
aaa
lds
cli
sbb
pusha
inc
add
call
mov
fwait
shl
adc
mov
or
mov
les
pop
in
retf
push
es
std
jns
inc
mov
push
sub
cmp
stos
cld
and
lods
(bad)
cmp
div
inc
cmp
fdiv
ins
add
sub
arpl
pop
fs
or
fdivr
mov
pop
push
xor
inc
cmp
clc
push
imul
add
push
aad
xchg
out
add
inc
in
lea
pop
dec
adc
add
popf
mov
rcr
push
out
inc
jp
xor
fidiv
pop
or
js
jmp
xor
shr
outs
scas
test
cmp
cmp
rol
adc
dec
enter
loope
je
inc
fbstp
mov
jae
add
fdivr
das
adc
(bad)
mov
shr
rcl
cdq
mov
mov
push
push
sahf
jg
(bad)
test
fst
xor
shl
lock
sub
enter
popa
hlt
out
das
test
lods
mov
aaa
inc
add
stc
stos
pushf
neg
dec
je
sbb
daa
(bad)
xor
pop
icebp
and
enter
xor
jae
adc
leave
fisub
imul
fisttp
in
mov
mov
dec
enter
out
out
adc
push
das
mov
dec
inc
out
enter
mov
ja
cmp
(bad)
aas
int
aad
mov
mov
pop
arpl
sahf
(bad)
mov
scas
mov
dec
inc
jno
push
test
leave
jo
inc
and
ror
mov
inc
push
jge
cmps
inc
loop
jmp
loope
xchg
nop
cmp
pop
shl
xchg
jb
or
fwait
mov
lock
jns
dec
jb
bound
xor
inc
xchg
(bad)
jae
ds
xor
daa
sub
repz
stos
(bad)
dec
rol
xchg
lds
les
retf
movd
xchg
leave
imul
push
enter
rol
pop
fdiv
sahf
mov
adc
ins
lds
stos
jmp
adc
fwait
mov
cli
mov
mov
pop
repz
popf
xchg
or
pushf
test
(bad)
xchg
and
sbb
mov
xor
(bad)
cwde
xchg
jle
inc
ret
xchg
call
push
leave
inc
push
jmp
mov
cld
cli
ret
mov
dec
or
mov
ja
les
inc
pushf
adc
inc
enter
es
or
push
dec
jle
cli
xor
and
ins
inc
ds
jge
pop
mov
mov
mov
cmp
sub
push
jno
sub
aaa
push
std
sub
int
(bad)
push
mov
xchg
stos
test
retf
cmc
pop
sbb
add
out
xchg
sub
and
pop
xchg
mov
jg
jmp
pop
or
mov
sbb
push
sub
sub
pushf
xchg
cmp
push
clc
push
xchg
cmc
and
test
lods
push
rcl
call
arpl
bound
out
push
push
jbe
fstp
mov
out
and
not
mov
cmps
and
ins
dec
int3
int
scas
ds
scas
clc
sub
xor
aad
cmp
rol
dec
xor
and
pusha
push
sbb
mov
mov
mov
in
leave
fistp
xchg
mov
cmps
xlat
adc
cmp
sbb
fwait
xchg
pop
mov
add
pop
xchg
iret
mov
lds
cmps
push
cmc
sub
push
(bad)
push
sti
bnd
sub
cdq
mov
lock
test
ret
mov
pop
and
mov
(bad)
loope
std
(bad)
mov
cmp
aas
pop
adc
mov
adc
sbb
xchg
xor
lds
cmp
test
inc
xchg
jge
pop
mov
inc
jecxz
ficom
or
out
nop
dec
stc
popf
xchg
push
out
dec
jge
(bad)
cmc
scas
add
adc
xor
fs
dec
popa
inc
scas
dec
add
cmp
sub
pushf
mov
ja
push
adc
mov
stos
loope
out
mov
in
dec
pushw
mov
push
in
mov
(bad)
cmps
shl
mov
inc
dec
sub
adc
sbb
repz
addr16
jns
add
add
add
popf
or
pop
outs
ja
mov
mov
repnz
xchg
mov
xor
lahf
sahf
pop
sub
pop
xchg
mov
mov
cmc
adc
inc
outs
fsub
jae
pop
out
xchg
jno
icebp
js
(bad)
mov
cld
(bad)
mov
ja
les
sub
nop
sub
pop
or
jp
sahf
stos
pop
or
and
and
cmp
dec
xchg
sub
cmp
push
dec
js
shl
mov
adc
aam
dec
xor
sbb
cmp
sahf
mov
mov
push
mov
jns
pop
mov
fneni(8087
aad
(bad)
jecxz
inc
jmp
jge
inc
popa
bound
jb
in
mov
lahf
sbb
ret
add
and
into
xor
mov
popf
iret
mov
repz
lahf
mov
mov
xor
das
xor
mov
mov
out
sbb
xchg
xchg
mov
sbb
mov
and
loop
jp
dec
dec
jecxz
mov
cdq
xor
dec
arpl
sti
jle
in
push
ret
test
ds
cmps
idiv
sub
sbb
mov
push
jmp
ud2
xor
mov
popf
inc
xchg
sub
pop
loopne
shl
adc
dec
xchg
and
fsubr
ss
repz
sub
nop
daa
xchg
jmp
neg
mov
push
pop
add
sbb
test
mov
push
dec
jge
ficomp
aam
call
adc
push
scas
in
cli
aaa
cmc
add
std
xchg
retf
add
adc
and
add
add
repnz
mov
and
fldcw
loopne
push
push
cmp
out
shr
and
mul
mov
shl
arpl
add
iret
jb
xchg
movs
cmp
push
inc
cmp
jno
mov
inc
in
jae
mov
fistp
(bad)
stos
std
test
dec
dec
fisubr
inc
pop
or
jle
fs
pop
dec
jae
sub
icebp
out
rol
adc
mov
icebp
lds
shr
gs
sar
stos
outs
sbb
sbb
pop
cmp
sbb
mov
cmp
loopne
jg
pop
cld
dec
jmp
push
gs
sub
stc
pop
ja
es
jne
push
dec
mov
mov
imul
icebp
mov
ds
mov
fidiv
cmp
mov
xchg
add
inc
daa
fwait
hlt
mov
jp
test
(bad)
pop
xlat
xlat
out
dec
sub
out
sbb
xor
pop
add
mov
sbb
pavgb
scas
sub
movs
sub
cbw
sbb
mov
call
lods
xchg
pushf
icebp
loop
cmp
xlat
(bad)
or
sbb
mov
call
pop
lock
repz
mov
out
(bad)
in
sbb
push
xchg
test
test
add
mov
ja
adc
call
inc
sti
in
lods
inc
or
shl
hlt
cmps
or
lock
addr16
xchg
xcrypt-cbc
cmps
adc
sbb
adc
popf
dec
ds
test
mov
rcr
scas
not
cmp
dec
pop
sbb
outs
stc
add
xor
cli
jns
in
sub
add
cmps
inc
lds
jg
sbb
or
sub
out
sub
ins
sub
int
mov
(bad)
into
imul
aam
jns
mov
sub
xchg
add
xor
jno
push
dec
xchg
les
pop
push
xor
test
loopne
dec
call
jmp
sub
sbb
adc
dec
test
cmp
les
xchg
mov
inc
leave
inc
pop
(bad)
rcl
test
mov
in
jns
movs
mov
mov
push
push
add
xor
sub
(bad)
lahf
dec
in
pop
adc
mov
jbe
pop
popf
or
pop
and
add
dec
inc
(bad)
(bad)
mov
lods
or
mov
outs
mov
push
adc
scas
pusha
cmp
xchg
adc
inc
dec
and
add
outs
out
ror
and
mov
push
jmp
jae
adc
dec
mov
mov
xor
lods
push
enter
pop
(bad)
pop
dec
add
gs
push
jbe
cdq
pop
ja
stos
fistp
or
jns
jmp
or
jp
les
add
dec
jl
aas
gs
pop
cli
mov
test
pop
dec
clc
je
stos
mov
xor
shl
push
sbb
xchg
in
add
mov
inc
popf
lds
aam
jns
mov
mov
cmc
push
adc
jle
(bad)
adc
adc
call
out
or
js
pop
inc
xlat
adc
sar
(bad)
ret
aad
cwde
add
push
xchg
adc
add
pop
sbb
jns
mov
pop
stos
aaa
in
and
push
fwait
fwait
xchg
shr
scas
(bad)
mov
(bad)
out
sub
dec
loope
fdiv
stos
or
xor
ins
jbe
push
pushf
adc
fiadd
shl
movs
pushf
mov
add
and
movs
out
push
dec
push
lock
sub
jnp
into
out
pop
pusha
imul
in
inc
aas
and
jp
adc
xor
jo
or
pusha
std
pop
scas
sbb
push
jno
ds
inc
jns
sub
xchg
stos
or
aaa
ja
sub
adc
scas
jmp
loope
inc
fild
push
jno
add
scas
inc
retf
inc
stc
xor
das
inc
jp
push
outs
loopne
mov
and
daa
or
mov
cs
mov
xor
int3
adc
xor
enter
jns
les
sahf
xor
pushf
xor
and
cmp
jg
push
js
add
inc
jo
(bad)
mov
sub
pushf
fwait
push
xlat
cmps
(bad)
addr16
inc
adc
cmc
fbstp
ret
mov
(bad)
aas
xchg
jno
sahf
(bad)
fild
push
mov
jle
repnz
push
imul
and
fbld
sbb
cwde
(bad)
test
data16
or
scas
pusha
dec
adc
push
test
shl
outs
mov
out
aad
lods
mov
inc
mov
pushf
or
and
mov
xlat
mov
movs
jnp
adc
lods
add
sbb
aas
idiv
mov
in
push
out
repnz
and
loop
in
fild
adc
adc
add
jmp
xchg
out
push
xor
sahf
jae
add
pop
pop
jge
test
xor
test
cvtps2pi
test
xlat
adc
or
pop
or
ja
sbb
push
scas
xor
pop
test
aam
pop
add
ins
mov
cs
lods
adc
cmp
jmp
dec
jne
das
ins
jbe
jns
sbb
xchg
fs
xor
aam
movs
hlt
xor
cmc
enter
rcr
push
xor
out
xor
loopne
mov
imul
out
loope
pop
loop
push
xchg
inc
inc
xor
xchg
fs
sti
cs
(bad)
ins
pop
mov
jmp
mov
push
sbb
daa
js
sub
and
cli
jle
adc
cwde
inc
xchg
push
movs
cmp
sub
jb
jo
scas
and
aaa
mov
cmp
fisub
in
icebp
mov
pop
mov
xchg
popa
and
mov
cs
and
(bad)
push
outs
pop
nop
jecxz
jo
jne
xchg
push
mov
push
jl
fisubr
and
jno
(bad)
nop
test
and
dec
xchg
in
mov
hlt
stos
cwde
adc
xchg
aam
test
mov
dec
out
dec
scas
repz
cld
neg
jle
mov
push
ins
add
xchg
shl
dec
pop
sahf
jg
or
pop
hlt
sbb
jnp
inc
mov
in
fcom
cmps
or
sub
mov
jns
adc
gs
out
dec
test
push
(bad)
and
lods
inc
mov
es
test
(bad)
aam
leave
jnp
xor
dec
push
jmp
aam
sbb
adc
arpl
sbb
daa
xor
pop
or
adc
outs
aad
adc
sub
fnstenv
jle
add
(bad)
out
push
repz
int3
push
gs
pop
push
ja
lods
gs
jge
lahf
out
cld
jl
jne
loop
ins
clc
sti
loope
mov
ins
sahf
clc
ret
scas
dec
fs
imul
mov
out
arpl
aas
adc
js
xor
dec
pop
cmps
ja
(bad)
call
mov
icebp
mov
and
sbb
cs
mov
dec
stos
lahf
pop
pop
out
mov
(bad)
ss
stos
add
sbb
(bad)
mov
jmp
sbb
lea
xchg
xchg
jg
aas
xlat
mov
mov
push
xor
xor
lods
pusha
jle
mov
out
fdiv
cld
mov
push
(bad)
push
pusha
(bad)
sbb
retf
dec
xchg
repz
adc
int
sbb
adc
leave
mov
repnz
inc
and
(bad)
call
mov
retf
adc
jcxz
dec
jg
ret
cmp
adc
mov
icebp
dec
aam
in
out
mov
jns
mov
js
jge
jmp
xchg
repnz
dec
or
cmps
jmp
fwait
retf
(bad)
fist
dec
in
ins
fnstsw
mov
bound
push
stc
aad
js
jg
push
outs
jnp
std
mov
mov
pop
ret
xchg
inc
push
test
movs
dec
and
mov
push
add
push
in
sbb
mov
dec
mov
mov
mov
mov
jecxz
push
ins
push
sub
or
js
push
pop
ins
xor
jmp
adc
movs
push
mov
cmp
dec
mov
add
stos
inc
mov
out
int
push
cmps
test
std
and
mov
pop
cmc
inc
and
(bad)
jnp
(bad)
into
sbb
scas
clc
ss
xchg
sub
mov
rcr
mov
jmp
xor
fidiv
push
mov
(bad)
push
(bad)
lods
jmp
jmp
push
adc
arpl
loop
cmp
mov
(bad)
jg
aaa
mov
in
push
cs
or
in
fisttp
addr16
jbe
fdivr
mov
push
cmp
je
int3
out
cmp
jae
and
stos
dec
push
repz
test
cmc
clc
sub
push
jmp
jmp
jnp
mov
jo
mov
scas
sbb
fist
pop
pop
lahf
fbld
ret
pusha
and
inc
adc
fisubr
popa
lods
inc
outs
pop
jbe
es
(bad)
retf
inc
sub
adc
std
dec
outs
dec
frstor
push
or
cmc
in
mov
mov
in
add
adc
xchg
and
mov
jle
dec
mov
push
sbb
addr16
jae
in
fs
sbb
adc
mov
imul
aaa
and
mov
push
std
jecxz
add
pop
ror
mov
pop
sbb
loopne
mov
xchg
inc
jmp
out
ja
jno
loopne
push
les
nop
mov
iret
or
(bad)
aam
out
xchg
xchg
rcr
in
adc
add
sub
movs
cmps
xchg
inc
inc
pop
adc
adc
pop
xchg
xor
arpl
add
daa
scas
call
push
cmp
aas
mov
fst
idiv
movs
xchg
xor
hlt
je
sbb
cmp
or
add
jbe
ror
adc
inc
dec
dec
sti
ds
adc
xchg
push
adc
arpl
and
dec
(bad)
pop
outs
adc
(bad)
fsubp
sbb
xchg
cmp
out
jle
push
mov
pop
popa
and
das
stos
aad
sbb
sbb
cs
or
loope
xor
fucomi
std
int3
mov
(bad)
je
shl
jmp
jmp
in
sti
ja
sub
mov
je
out
les
sbb
jl
out
xchg
pop
xor
(bad)
call
cmp
cmp
mov
mov
mul
lea
pop
sbb
pmaxub
das
(bad)
int
pushw
addr16
adc
sar
push
shr
xchg
xchg
sar
shr
js
les
aaa
xchg
add
or
std
das
sub
leave
inc
test
(bad)
dec
mov
add
or
mov
ins
sub
mov
dec
jmp
(bad)
lahf
adc
pusha
test
sub
mov
ja
call
scas
push
loopne
sub
mov
pop
popa
sub
cmps
and
data16
xor
push
sub
add
shl
icebp
std
repnz
fsub
jmp
add
pushf
jo
inc
mov
sbb
cmps
sub
loope
xchg
dec
mov
mov
test
pushf
jb
dec
(bad)
sbb
jle
sbb
out
ds
fs
inc
stos
movs
pop
sbb
pop
cmps
mov
add
push
push
xor
ins
jnp
dec
stos
lods
fmul
xor
sub
test
adc
xor
jg
mov
add
adc
in
jbe
mul
mov
arpl
pop
les
pop
inc
aas
sahf
jbe
cdq
xor
(bad)
andps
int
mov
ja
and
out
jb
sub
das
inc
or
and
mov
je
cmp
xchg
jecxz
(bad)
mov
in
call
fwait
dec
mov
add
or
out
movs
pop
into
cmc
int
adc
retf
push
inc
sub
popa
jmp
test
sbb
cmp
inc
mov
sbb
dec
mov
adc
inc
jmp
mov
mov
push
sub
(bad)
push
push
jl
dec
mov
retf
pop
inc
or
inc
sti
mov
hlt
jne
mov
mov
js
push
mov
cmp
mov
jne
dec
imul
dec
(bad)
xlat
jp
jge
sti
jns
sar
retf
mov
inc
push
adc
inc
mov
scas
loop
adc
pop
nop
call
jge
pop
cmp
sub
js
in
dec
ins
rcr
sub
and
bound
pusha
fidiv
dec
sar
push
icebp
jmp
shr
in
arpl
hlt
or
pusha
xchg
inc
pop
in
out
in
sub
mov
sub
or
mov
stos
inc
jbe
push
es
retfw
or
mov
push
int
adc
xor
(bad)
jp
push
outs
adc
or
ja
adc
in
mov
wbinvd
xchg
es
mov
sub
push
cmps
push
scas
mov
or
dec
or
mov
mov
mov
repz
retf
mov
in
mov
inc
jle
fwait
pop
dec
out
mov
imul
xchg
xor
pop
cmp
test
daa
fwait
cmp
adc
(bad)
and
cmp
fld
pop
fs
sub
fwait
dec
iret
mov
cmp
movd
leave
push
xchg
stc
inc
call
mov
in
inc
mov
idiv
sbb
mov
lahf
nop
push
and
mov
das
aam
xchg
nop
ret
add
dec
gs
jle
cmp
cmp
sbb
add
xor
dec
ficom
push
jmp
push
ror
mov
fcmovnu
xor
call
jmp
xor
cmc
xchg
gs
xchg
lods
sbb
jmp
sbb
push
dec
sar
into
jg
add
bound
(bad)
jnp
call
xor
jae
and
aad
pop
aad
rcl
mov
inc
dec
popa
pop
repz
sar
mov
out
sbb
icebp
retf
ror
imul
fistp
add
jecxz
push
dec
pop
and
aaa
repz
or
jmp
pop
xlat
push
mov
fsub
push
je
adc
sbb
jne
mov
inc
xor
icebp
stos
xor
and
stc
test
cmp
mov
repnz
add
mov
fcmovne
fwait
push
ins
xor
mul
jns
iret
inc
sbb
es
dec
push
mov
jmp
cmovne
hlt
mov
popa
ror
popa
jmp
add
js
icebp
(bad)
and
xchg
xor
xor
mov
push
xchg
(bad)
xlat
cmps
clc
cld
(bad)
outs
sbb
inc
push
inc
shr
adc
pop
scas
push
sbb
mov
fiadd
mov
xor
sbb
call
(bad)
dec
loope
add
jge
imul
mov
in
test
int
xchg
or
push
lods
push
fs
lods
aas
std
add
mov
aaa
lock
mov
add
gs
mov
cmp
ret
push
mov
sbb
fld
(bad)
fmulp
iret
mov
call
mov
fnsave
cld
xchg
dec
push
pusha
or
add
add
fucomp
(bad)
add
add
adc
add
fadd
fucomi
push
cmc
xchg
(bad)
mov
ins
jns
xlat
cs
lods
sub
xor
or
adc
les
xchg
jp
sub
ins
movs
shl
mov
enter
scas
adc
out
push
xchg
jmp
stos
enter
adc
and
mov
in
rep
inc
hlt
fsub
shl
shr
xor
stc
cmp
pop
std
inc
jmp
aas
sar
xor
push
(bad)
cdq
mov
cdq
nop
jbe
pop
lods
dec
idiv
pop
sbb
cmp
aam
dec
aas
and
dec
sub
std
pop
out
pop
mov
sub
mov
mov
nop
mov
rcr
test
adc
pop
in
sar
(bad)
pusha
movs
mov
dec
mov
leave
inc
xchg
add
out
clc
mov
sbb
push
daa
xor
mov
xchg
mov
push
adc
push
or
stc
sub
add
jmp
cmp
scas
ror
dec
xchg
or
adc
adc
pop
jl
scas
inc
mov
sub
mov
inc
lock
and
xchg
ds
pop
xlat
cmp
movs
aas
jae
adc
jno
mov
enter
fistp
mov
mov
ret
and
and
add
lds
inc
popa
sub
mov
imul
dec
leave
push
mov
jecxz
or
es
stc
mov
jge
and
ficom
or
add
imul
xchg
or
xchg
in
pop
dec
add
je
out
or
push
mov
into
inc
inc
cmps
(bad)
je
xor
das
aas
xchg
lea
pop
mov
push
das
or
cmp
shr
retf
jg
fistp
cwde
xchg
mov
in
push
dec
leave
inc
aaa
xchg
pop
push
jge
fbstp
inc
jnp
mov
fs
adc
lahf
lds
je
fldcw
xchg
movs
or
push
fimul
test
fcom
pop
inc
popa
jnp
add
mov
test
aaa
xor
or
xlat
sahf
cmp
jbe
xchg
jnp
xchg
mov
aaa
jnp
inc
sub
scas
call
fnsave
push
imul
dec
push
push
or
push
xchg
aam
mov
add
lahf
scas
or
mov
in
lods
test
rol
cmp
mov
mov
adc
shr
ret
cmp
mov
xor
pusha
xor
jmp
push
inc
stos
adc
stos
push
pop
xor
sar
imul
(bad)
cdq
ds
adc
or
cmp
iret
push
jmp
push
std
push
repz
repz
mov
jmp
je
into
mov
add
push
mov
or
fstp
movs
jb
into
dec
cmp
xor
push
outs
cmps
repz
(bad)
mov
stc
sub
icebp
push
rcr
ror
dec
sub
mov
cmp
dec
pop
pop
mov
retf
fisub
adc
fs
pop
rol
mov
cmp
cmp
sub
and
mov
scas
mov
and
(bad)
in
lods
outs
dec
(bad)
hlt
xchg
dec
sbb
dec
repnz
cmp
popa
sub
nop
push
push
mov
xchg
dec
jbe
jno
cld
out
aam
dec
cmc
mov
test
inc
cmp
jmp
daa
ror
cmc
adc
outs
and
data16
das
push
mov
int
popa
rcl
jecxz
xchg
imul
pop
jmp
cs
out
in
fisttp
repnz
ror
mov
xchg
clc
arpl
mov
icebp
daa
leave
das
push
mov
into
hlt
int3
frstpm(287
fwait
push
jbe
bound
pushf
push
sub
sti
sbb
xlat
fucomi
out
fdiv
enter
adc
inc
push
jecxz
mov
pop
sti
or
loopne
inc
imul
or
arpl
xlat
mov
gs
mov
sbb
xor
cmp
add
sub
pop
or
test
(bad)
imul
fdivr
jmp
test
dec
sub
mov
pop
cmp
scas
jg
cmps
dec
outs
inc
jbe
pop
aas
ret
or
xchg
lods
sbb
push
pop
mov
into
mov
inc
jmp
hlt
nop
aaa
and
cs
jmp
cmc
jo
leave
call
mov
sub
les
in
leave
gs
idiv
inc
pop
int3
in
sar
ret
in
sbb
hlt
lock
(bad)
stc
mov
sbb
mov
movs
xchg
dec
jmp
and
xor
stos
ret
push
call
xor
out
or
push
add
lods
inc
inc
and
cmp
mov
fimul
inc
jnp
sbb
inc
retf
fld
mov
push
pop
mov
int3
dec
adc
lahf
jae
les
in
(bad)
push
bound
mov
dec
add
retf
inc
push
les
sub
or
ss
test
mov
(bad)
ins
xor
inc
jle
movs
sbb
call
jo
adc
enter
lahf
fwait
ds
mov
xchg
jecxz
and
mov
jg
das
push
cwde
push
loopne
sub
mov
sub
imul
int
popa
iret
mov
inc
in
cmp
retf
mov
rcl
shl
jnp
fs
xchg
imul
adc
loop
inc
add
mov
add
mov
repnz
push
test
xchg
enter
or
outs
repz
cld
in
inc
push
cmp
pop
call
out
xor
fsub
xchg
push
ficomp
mov
dec
popf
lds
xchg
mov
add
jge
out
jg
sbb
xor
rol
dec
movs
sbb
icebp
mov
pop
fs
xchg
cdq
(bad)
(bad)
nop
add
pop
shl
in
mov
xor
jmp
sub
push
loop
mov
gs
fsubr
outs
loop
(bad)
inc
xchg
push
cdq
movs
fisttp
mov
pop
sub
inc
mov
jb
jmp
test
adc
add
dec
inc
mov
(bad)
shl
jno
fcomp
add
repz
(bad)
jmp
les
pop
add
dec
int3
pop
dec
lods
push
cs
rcl
out
pop
sbb
retf
fadd
rcl
push
es
rsm
loope
fcom
addr16
aaa
mov
jbe
in
push
lods
cmp
inc
sub
mov
ficomp
push
arpl
lods
dec
sti
xchg
jl
mov
sub
ss
fst
cwde
repz
add
push
pop
lods
add
into
imul
and
pop
fst
and
dec
mov
ins
adc
push
(bad)
sub
sahf
cmps
adc
mov
pop
retf
(bad)
mul
in
jmp
inc
dec
sbb
popf
fldcw
mov
jbe
imul
test
xchg
xchg
inc
jecxz
jmp
movs
outs
sub
inc
jmp
lods
push
cmp
push
push
mov
std
push
cdq
pop
out
pusha
lahf
xlat
int3
(bad)
into
mov
call
mov
dec
mov
sbb
sbb
mov
and
jecxz
push
into
dec
xchg
jg
sti
call
mov
pop
push
xchg
loopne
(bad)
sti
sbb
push
inc
(bad)
int3
jp
dec
mov
les
dec
into
pushfw
dec
mov
mov
sbb
(bad)
dec
xor
inc
or
pop
xlat
xchg
out
loop
mov
sahf
iret
dec
cmp
hlt
ja
popa
xchg
adc
(bad)
clc
jns
addr16
(bad)
cli
mov
mov
clc
jns
popf
xchg
jp
mov
lahf
cmp
mov
out
cmp
inc
jl
popf
fdivrp
les
das
ins
mov
sti
dec
and
xchg
gs
push
loope
rol
call
jns
sti
cmps
jle
add
mov
adc
jae
retf
mov
leave
mov
fwait
scas
test
in
pop
jae
shr
lahf
int3
cwde
idiv
outs
fiadd
test
jp
jo
imul
pop
rcr
add
sbb
xor
and
mov
push
or
add
cmp
push
lods
and
sbb
cmp
add
add
data16
mov
clc
dec
push
nop
mov
iret
das
pop
jae
add
loop
pop
sbb
push
fwait
jb
mul
(bad)
adc
imul
push
inc
(bad)
stos
xchg
or
mov
cmp
dec
inc
adc
dec
ins
mov
add
or
retf
loope
loop
push
dec
adc
gs
push
dec
gs
inc
pop
jecxz
ja
adc
jmp
push
leave
adc
xchg
sub
jge
xchg
fidiv
sub
ret
sbb
fsubr
test
sub
jg
and
out
(bad)
movs
mov
sbb
push
push
aas
push
mov
push
test
mov
jo
inc
jb
cdq
xor
test
sub
jp
inc
cmp
addr16
enter
test
sbb
push
btc
sub
add
jb
jmp
bound
addr16
mov
icebp
pushf
popf
cmp
stos
stc
mov
inc
cli
test
sub
mov
arpl
pop
enter
(bad)
jecxz
sub
outs
fistp
mov
xlat
push
cmp
xor
in
or
ins
fidiv
or
movsx
pop
cmp
in
push
pop
jge
pop
(bad)
(bad)
lea
mov
jg
retf
mov
shl
inc
and
dec
or
xor
enter
lods
jmp
xor
and
cmp
retf
mov
inc
adc
movs
test
aaa
sub
xor
aam
in
(bad)
cmps
mov
and
mov
and
jno
clc
sub
ret
add
fcomp
inc
cmps
mov
test
loopne
rol
rcr
data16
add
es
adc
das
mov
icebp
enter
push
jecxz
xchg
jle
xchg
ss
inc
adc
add
pop
pushf
adc
mov
or
mov
sbb
cmp
cmp
(bad)
pop
test
mov
out
push
mov
xchg
xor
call
out
in
pushf
add
mov
cmp
enter
add
aaa
sbb
lods
(bad)
(bad)
in
ror
je
scas
lods
lods
mov
retf
movs
cmc
push
or
dec
inc
jne
inc
outs
mov
pop
cmp
cmp
div
inc
cld
into
sub
data16
je
push
cs
inc
mul
in
inc
pop
in
cmc
in
jg
or
push
xchg
cmp
mov
add
xchg
mov
xchg
cmc
leave
jl
mov
xor
xlat
add
pop
sti
adc
rcr
jmp
mov
push
stc
sub
test
sub
arpl
jne
shl
out
int3
std
imul
and
inc
aaa
mov
stos
lds
pop
jmp
inc
movs
gs
mov
jb
or
inc
movs
pop
xchg
sbb
out
leave
adc
xor
sbb
les
push
(bad)
mov
aaa
bnd
adc
fisub
mov
jmp
adc
shl
sbb
push
in
sbb
sub
movs
shr
pop
aaa
stos
std
push
sti
arpl
push
mov
xor
inc
inc
cmc
mov
jno
pextrw
or
pop
inc
xor
mov
xor
mov
in
push
dec
sub
test
xchg
ror
daa
cmps
aad
aam
(bad)
rcr
aas
inc
outs
iret
xchg
loopne
test
adc
cmp
mov
fnstsw
dec
sub
repnz
add
sub
mov
jmp
shl
push
in
rcl
enter
adc
outs
mov
enter
push
jmp
je
pop
push
sub
cmp
xor
mov
sub
mov
fimul
push
pop
sub
fstp
clc
movs
fabs
pusha
clc
xor
fcmovb
cmp
pop
sbb
jle
inc
mov
out
xchg
xchg
or
call
int3
pushf
or
cli
mov
mov
xchg
mov
jns
cdq
icebp
pop
mov
mov
shl
add
cmp
clc
jmp
jb
mov
dec
dec
test
mov
mov
dec
iret
popa
les
lahf
pop
xchg
out
xchg
mov
mov
adc
dec
std
std
(bad)
arpl
adc
cli
mov
retf
clc
iret
mov
aad
idiv
cmps
xchg
sbb
pop
mov
mov
push
sbb
rcl
loopne
shl
aas
int3
scas
sahf
mov
pop
ins
std
out
xchg
pop
xchg
scas
mov
dec
clc
pop
xor
das
add
aam
jno
imul
add
xchg
xchg
call
test
aaa
mov
or
imul
cmp
scas
loopne
frstor
sub
retf
adc
pop
mov
or
aad
pop
in
sbb
and
sbb
dec
dec
dec
aam
inc
jae
jg
retf
push
ins
jae
inc
test
cld
je
add
jb
je
pop
cdq
dec
aam
jl
fcomp
jl
sbb
lds
loopne
fs
mov
jmp
dec
mov
pop
adc
(bad)
sub
jae
sub
outs
cmp
mov
ds
cmp
and
mov
push
add
mov
enter
mov
mov
sar
inc
adc
ins
cmp
std
jl
jmp
cmp
xchg
scas
adc
call
add
cld
aam
in
sbb
or
add
aad
pop
xor
pusha
(bad)
adc
out
pop
dec
mov
xchg
mov
cwde
shl
xor
mov
je
mov
fiadd
jp
test
xor
lahf
push
pusha
sbb
push
or
sar
outs
push
xor
lods
or
inc
iret
cmp
jb
xchg
scas
pop
jne
hlt
(bad)
fbld
and
shr
out
retf
lds
mov
push
mov
pminsw
and
mov
sub
aaa
mov
and
data16
mov
aaa
into
out
add
lds
repnz
cmp
xchg
mov
mov
ins
mov
(bad)
jge
jbe
xchg
mov
xor
sub
int3
pusha
sbb
mov
pop
sbb
push
es
cmp
into
leave
pusha
push
mov
jno
sbb
jecxz
pop
imul
fbld
loop
retf
jbe
cmp
ins
outs
pop
mov
addr16
lahf
cdq
(bad)
cld
cmp
ficomp
sbb
pop
and
test
pushf
inc
xlat
push
(bad)
repnz
rcl
repnz
imul
jbe
cmp
outs
movs
mov
call
cmp
in
in
sub
mov
jnp
enter
inc
jecxz
cwde
sbb
scas
mov
jg
outs
mov
sbb
dec
(bad)
repnz
add
cmp
nop
repz
ins
pop
mov
enter
adc
adc
je
mov
dec
pusha
mov
fstp
and
out
fucomp
add
sar
data16
xor
mov
cli
and
dec
cmp
ss
push
mov
adc
sbb
lahf
pop
jp
jge
cmp
out
pop
test
popa
outs
sbb
sub
pop
sbb
enter
test
shl
pop
push
sbb
loope
mov
adc
iret
mov
(bad)
jmp
mov
movs
xchg
(bad)
enter
sbb
sbb
inc
lods
icebp
mov
xchg
movs
in
inc
loopne
into
xor
hlt
test
dec
jmp
adc
dec
mov
gs
mov
dec
sbb
(bad)
jg
rcl
cmp
dec
mov
mov
lock
or
or
call
jl
mov
(bad)
(bad)
push
mov
stos
(bad)
mov
mov
scas
ror
mov
test
jnp
add
jbe
jb
sbb
out
out
mov
daa
and
and
mov
mov
retf
pop
imul
stc
mov
mov
xor
xor
scas
mov
aaa
cmc
and
xchg
fdivp
adc
enter
fidivr
dec
or
loopne
leave
jmp
push
xor
int
sbb
jp
mov
adc
dec
arpl
sbb
pop
mov
jne
dec
in
not
fnstsw
jp
xor
call
sub
dec
into
je
clc
fisttp
(bad)
cmp
add
push
pop
loop
mov
jnp
jo
xchg
inc
sbb
push
jmp
in
aad
sub
pop
ss
rcr
and
jbe
mov
push
pop
movhps
push
mov
inc
add
or
push
mov
ins
test
xchg
or
arpl
hlt
inc
adc
sbb
fisttp
sub
push
adc
dec
push
call
and
lods
in
add
adc
jg
es
(bad)
stc
(bad)
loop
mov
and
(bad)
(bad)
iret
and
loop
and
pop
jnp
push
test
push
sbb
xlat
icebp
scas
shr
mov
cld
mov
jnp
jg
cmp
test
enter
addr16
or
js
add
jbe
call
(bad)
ds
mov
push
push
xchg
add
or
xor
push
and
mov
cdq
push
call
outs
scas
cs
push
cld
pop
add
add
cmp
mov
dec
ret
mov
stos
std
in
mov
in
inc
xchg
fwait
sahf
xchg
xchg
ins
ja
push
adc
cmp
pop
mov
push
inc
imul
dec
test
or
lock
xchg
sbb
scas
out
lahf
clc
add
gs
scas
and
int
push
adc
inc
sbb
sbb
cmc
in
sub
or
sub
mov
retf
ficom
rol
mov
mov
and
mov
mov
mov
ror
imul
or
div
outs
lea
sbb
sbb
fistp
add
jno
ss
push
mov
scas
jae
pop
lahf
inc
adc
xchg
aam
jmp
cmp
repz
shr
out
repz
or
shl
retf
mov
cmp
pop
ins
and
or
push
loopne
test
jg
dec
rcl
mov
jmp
ins
mov
mov
outs
stos
loopne
ins
pop
imul
int
mov
iret
(bad)
loop
(bad)
xor
adc
push
jmp
dec
into
mov
daa
lods
sub
xor
in
popa
jns
daa
pop
daa
lods
mov
cli
add
or
add
and
mov
jle
xlat
(bad)
xor
out
or
mov
loope
mov
or
dec
xchg
sbb
xchg
inc
adc
jle
add
out
mov
mov
call
sbb
addr16
in
ror
mov
fbstp
daa
repz
xor
bound
in
add
retf
add
call
push
into
scas
push
sub
fiadd
mov
inc
xchg
pop
adc
xor
adc
std
adc
sbb
cmp
mov
push
cmp
mov
in
and
ins
sub
inc
(bad)
popa
mov
pop
mov
inc
push
pusha
push
cmp
clc
lea
scas
sar
imul
ud1
or
shl
jmp
sub
jecxz
sahf
xchg
dec
add
lea
push
adc
adc
jns
xor
and
daa
xchg
dec
out
mov
loopne
test
cmp
arpl
cmp
jnp
cli
loopne
mov
sub
pop
pop
xchg
shl
popa
mov
pop
and
sub
out
inc
(bad)
push
push
pusha
leave
xchg
inc
jne
cwde
jno
pop
ror
out
cs
sar
aaa
fadd
lea
pusha
pop
(bad)
pop
call
pop
jmp
xchg
and
mov
loop
sbb
stc
mov
xor
xor
mov
mov
aam
push
lock
dec
dec
mov
sbb
mov
add
js
leave
(bad)
and
adc
(bad)
in
xchg
fisttp
mov
pop
or
loopne
xor
addr16
mov
cmp
or
fcomp
push
gs
xchg
lahf
jge
mov
addr16
adc
pop
push
dec
imul
call
mov
xor
hlt
imul
mov
dec
mov
pop
rol
mov
push
call
xor
mov
mov
push
sub
outs
sub
push
inc
out
movs
pop
in
inc
nop
mov
in
mov
xor
movs
and
enter
ss
les
adc
loope
(bad)
jmp
rcl
xchg
xor
fdiv
mov
xor
loopne
lahf
push
adc
je
cmp
sbb
(bad)
and
scas
jg
fcom
dec
cmp
icebp
and
out
and
lea
ret
inc
mov
cmp
iret
inc
enter
lds
cmp
stc
sub
sub
mov
mov
stos
fisttp
xor
js
xchg
and
dec
pop
mov
mov
rol
imul
test
adc
or
aaa
ss
ins
sbb
cmps
xlat
push
jg
push
std
ins
dec
out
jecxz
sub
jle
sbb
icebp
mov
fcmovu
pushf
test
bound
movs
out
clc
mov
loop
xchg
dec
mov
repz
mov
mov
push
xchg
lahf
xor
add
ficomp
and
adc
dec
sub
push
cdq
push
xor
or
stos
mov
mov
ins
cli
cwde
stos
pop
in
pop
or
int3
mov
mov
frstor
push
sti
mov
push
and
cmp
xor
xchg
adc
iret
sbb
adc
je
pop
xor
adc
xchg
imul
call
movs
adc
fcom
mov
xchg
sbb
or
mov
or
dec
fisubr
lods
je
aas
jae
jle
pop
rcr
xchg
sub
leave
sub
in
pushf
enter
dec
xor
es
(bad)
pop
cwde
sbb
dec
jbe
sub
inc
and
leave
pop
jns
imul
test
cld
or
outs
test
ret
xchg
xchg
push
mov
pop
jmp
sub
mov
push
dec
ins
mov
rdtsc
jge
fcom
push
clc
jne
add
fdiv
fst
add
sub
lods
fldcw
test
psrlw
cmp
xlat
stos
add
cwde
mov
fst
cmp
sub
mov
outs
cmp
sti
xchg
out
icebp
push
repz
mov
mov
out
nop
sub
js
mov
outs
data16
lea
out
sbb
lods
mov
sub
xor
js
jle
mov
mov
es
(bad)
neg
or
scas
mov
mov
cmp
inc
push
jno
jb
jmp
and
and
sbb
das
aad
jnp
or
popa
pop
pop
cmp
test
push
push
dec
inc
repz
adc
inc
cmp
pop
pusha
add
test
in
add
cli
mov
jmp
jmp
shl
jmp
cs
stos
ret
mov
jmp
add
dec
popa
lods
ja
or
mov
xlat
push
xchg
mov
rcr
js
gs
sub
mov
inc
cdq
mov
into
pop
add
inc
and
xor
jle
pop
push
and
jmp
xchg
xchg
pop
inc
xchg
push
popf
fstp
pop
(bad)
repz
mov
mov
push
ror
mov
fistp
xor
cmc
lods
dec
and
bts
cs
adc
push
retf
jb
pop
bound
xchg
je
add
mov
dec
cwde
cmps
call
dec
call
ss
in
jge
mov
push
repnz
dec
jnp
dec
iret
adc
outs
mov
loope
push
bound
js
pushf
mov
xchg
fwait
inc
cld
inc
inc
adc
pop
cmp
inc
pushf
cli
and
xor
or
test
sbb
jge
pusha
jno
add
fwait
ds
xor
pop
fs
pop
jnp
xchg
punpckhwd
or
outs
stc
dec
mov
popa
xchg
mov
jmp
sbb
stos
cmps
push
adc
sbb
xchg
inc
mov
lahf
jecxz
rcr
ret
xor
loopne
add
cdq
fbstp
jle
adc
pusha
repnz
jne
inc
xchg
mov
adc
mov
retf
pushw
call
test
add
bound
lea
mov
cdq
ja
sahf
popf
dec
imul
mov
add
(bad)
jns
jp
pop
inc
das
xchg
test
sahf
(bad)
push
add
std
call
out
out
cli
test
shl
cmp
mov
lock
pop
sbb
jb
mov
and
retf
dec
scas
dec
into
movs
pop
loope
jnp
adc
outs
je
fisubr
loope
das
jmp
cmc
gs
clc
mov
sub
leave
jb
loop
stos
mov
pop
push
and
or
xor
sti
ret
les
jae
arpl
dec
jl
pop
movs
pop
cmp
mov
fisttp
test
jo
dec
mov
es
sub
pusha
cmp
xor
push
lods
ds
jns
mov
xchg
pop
jge
sbb
push
dec
pop
push
jae
sbb
add
add
call
add
pop
or
cmps
sub
das
iret
jle
push
mov
pop
and
(bad)
fs
jb
add
mov
rcr
je
es
ficom
jecxz
push
fwait
push
or
xor
xchg
sbb
mov
xchg
cmps
icebp
(bad)
out
rcl
fld
xor
faddp
xor
neg
into
sbb
sub
xor
mov
fcomp
mov
in
or
(bad)
cmp
sar
jns
mov
dec
cmc
push
cmp
push
xchg
lods
cs
mov
sub
icebp
in
cmp
and
adc
lea
push
inc
lock
imul
rol
nop
xchg
mov
popf
inc
or
inc
pop
hlt
cmps
ins
mov
ror
inc
repz
out
test
cmc
jae
lds
ret
mov
pop
int3
xchg
icebp
aam
xchg
mov
sbb
mov
pop
mov
mov
aas
mov
mov
pop
ins
idiv
xor
pop
mov
mov
fnstenv
ficomp
(bad)
jbe
gs
movs
sahf
adc
lock
enter
in
(bad)
cdq
daa
sub
mov
(bad)
stos
mov
sbb
outs
rol
enter
sbb
iret
fst
int3
cmp
in
lods
ret
pop
xor
mov
out
mov
int3
inc
out
xor
xchg
inc
mov
and
sbb
mov
(bad)
pop
imul
aaa
cmps
cdq
aam
inc
inc
test
in
inc
in
sbb
jle
jmp
mov
or
push
das
lock
push
mov
xchg
mov
fisub
add
out
dec
sbb
jne
hlt
cdq
add
js
fwait
retf
imul
mov
sub
es
mov
add
cmps
mov
and
add
jmp
xchg
jmp
xor
popa
inc
inc
bound
shr
add
or
test
js
lea
lds
fisttp
in
fsqrt
dec
xchg
ja
icebp
dec
sbb
or
je
adc
xor
aas
add
fld
ror
jno
lods
add
jno
test
aam
mov
mov
cmp
in
daa
mov
test
mov
xor
mov
push
inc
push
sub
lea
test
xchg
movs
arpl
aam
or
xchg
ret
(bad)
adc
stc
rcl
adc
stos
jp
lods
dec
fmul
jg
dec
hlt
inc
in
in
loopne
cmp
inc
mov
mov
mov
sbb
fimul
aas
lods
arpl
addr16
jmp
mov
je
push
push
jp
fwait
xchg
jne
repnz
mov
sub
xchg
sub
fnstenv
ret
jo
or
and
xor
push
test
add
sbb
leave
(bad)
inc
dec
(bad)
push
xchg
push
test
shl
jl
ins
es
outs
xchg
add
adc
xchg
fwait
in
mov
jns
hlt
mov
push
nop
fisttp
enter
mov
and
sbb
xor
mov
jae
gs
pop
retfw
sub
jmp
add
sbb
out
bound
sbb
iret
or
je
mov
imul
mov
push
es
sub
mov
(bad)
jge
std
and
adc
fist
xchg
inc
bound
mov
fucomip
hlt
add
push
loop
or
cld
daa
push
sbb
sub
adc
cwde
aam
int3
std
ret
mov
(bad)
popa
lods
mov
jl
and
rcl
or
addr16
adc
inc
push
fs
test
in
sti
and
sub
xchg
push
and
mov
popf
ror
sahf
mov
or
xchg
fcomp
jae
outs
mov
mov
pop
add
rol
push
pop
stos
jnp
imul
mov
mov
pop
out
adc
jmp
mov
cmp
adc
cmp
xchg
xor
mov
jmp
mov
ss
clc
mov
jb
sub
clc
retf
ret
jl
retf
stos
xor
adc
mul
adc
inc
add
xor
(bad)
outs
clc
hlt
rep
adc
in
(bad)
jns
mov
sbb
mov
mov
xchg
cmps
mov
xchg
call
ds
jae
push
mov
cmp
jmp
inc
icebp
sub
in
adc
lea
cs
imul
addr16
add
int
inc
mov
rcl
retf
dec
fcomp
fs
mov
hlt
retf
cmps
or
fincstp
mov
ror
jmp
addr16
mov
mov
and
arpl
add
sub
xor
adc
cmp
bound
inc
cs
pop
stc
pop
add
inc
push
retf
cdq
mov
adc
push
jo
jmp
push
add
adc
xchg
xchg
arpl
je
xor
xchg
adc
push
scas
bnd
jae
mov
inc
sub
push
cmps
mov
movs
cmp
xor
sbb
shr
sub
stos
fmul
(bad)
int
int
ss
dec
adc
mov
pusha
pop
push
add
iret
imul
sbb
adc
xchg
jo
dec
shl
popa
retf
(bad)
pop
in
cmp
fild
in
mov
daa
(bad)
push
mov
cwde
and
mov
sub
add
fstp
inc
cmc
sub
cmp
adc
pop
and
imul
aas
inc
and
jns
xchg
mov
cmp
(bad)
xor
sbb
add
fld
lahf
scas
add
or
jo
and
jle
int
cmps
hlt
ins
push
mov
retf
(bad)
popf
mov
or
inc
popa
and
mov
mov
stos
loope
push
push
sbb
mov
xor
push
xor
out
sub
mov
adc
push
pop
cmp
test
mov
popa
movs
push
cmp
mov
jmp
cmps
mov
xor
out
xchg
popf
stc
xor
test
and
sub
xor
repnz
mov
or
push
xchg
std
pop
sbb
mov
xor
and
dec
mov
pop
mov
xor
stos
sub
ror
(bad)
fsubr
mov
jmp
push
inc
or
test
ficom
pop
add
daa
scas
xor
jmp
push
in
mov
lds
sbb
mov
pop
mov
mov
dec
or
data16
call
mov
fadd
jbe
test
ror
mov
mov
hlt
ja
movs
adc
mov
mov
sub
ja
mov
cmps
cmp
(bad)
(bad)
loope
hlt
js
iret
mov
lds
mov
ds
test
sbb
test
add
xchg
dec
xchg
mov
ins
push
sbb
inc
adc
call
cmc
inc
inc
fwait
stos
movs
imul
loopne
pushf
hlt
xchg
loop
jno
dec
add
mov
fadd
cmc
stos
add
push
pop
sbb
xor
fidivr
and
shl
xor
lahf
xchg
arpl
jae
movs
mov
leave
xor
or
clc
rcl
popa
ret
pusha
fst
push
cmp
xchg
in
adc
inc
cmp
sub
xor
mov
add
cdq
mov
dec
aam
push
pop
cwde
jno
std
leave
add
jns
lods
(bad)
into
or
fadd
xchg
jbe
leave
dec
les
adc
lock
push
cmp
mov
cmps
das
jnp
cmp
sbb
into
push
dec
cmps
adc
pop
mov
arpl
scas
jp
ins
push
adc
fmul
lahf
int
adc
fisttp
loopne
fdivr
std
pusha
jnp
ror
sub
ins
(bad)
inc
xchg
pop
ret
push
xchg
mov
cli
push
sbb
cmp
inc
cmp
sbb
jg
(bad)
dec
adc
sti
xchg
pop
push
iret
in
push
jecxz
inc
mov
xchg
clc
pop
icebp
fsub
gs
test
cwde
push
mov
inc
out
jne
pop
adc
jnp
adc
das
out
and
pop
add
inc
outs
mov
(bad)
jns
js
add
adc
int3
imul
jge
lds
fidivr
add
retf
fcomip
mov
adc
adc
cmp
sbb
retf
inc
sbb
fs
jge
(bad)
inc
jle
outs
out
dec
adc
sbb
and
cld
jnp
jge
push
inc
push
or
adc
pop
xchg
pop
dec
enter
mov
pop
and
push
push
mov
pop
or
pushf
out
mov
xchg
icebp
call
push
or
das
in
xchg
pop
xchg
dec
mov
mov
or
jmp
adc
sbb
aas
icebp
xchg
dec
cdq
mov
cmp
test
mov
stos
outs
shr
mov
call
xlat
sahf
dec
fnstsw
push
pop
mov
xchg
sub
lea
icebp
push
jb
mov
lahf
gs
sahf
scas
fld
(bad)
jl
mov
stc
in
mov
jno
in
out
ins
push
arpl
xor
stc
or
push
lea
mov
xchg
call
xchg
mov
arpl
and
push
ins
icebp
push
test
or
popa
popa
mov
push
ret
loop
(bad)
imul
ds
sub
jge
jbe
sub
cs
pop
neg
cmc
pop
sub
stc
retf
adc
mov
inc
lock
pop
jmp
inc
xchg
test
das
in
retf
sub
pop
and
xchg
inc
inc
cmp
call
dec
repz
xor
xor
pop
ja
cmps
jo
mov
mov
jg
adc
rcl
sub
retf
sbb
outs
(bad)
dec
ret
pushf
and
add
out
or
dec
adc
iret
ins
add
dec
jle
jbe
hlt
cdq
ss
mov
mov
shr
stc
addr16
mov
pop
mov
mov
in
push
ins
pop
xlat
dec
add
cld
adc
stc
popf
xchg
mov
dec
push
and
and
and
ret
mov
push
ins
scas
adc
push
push
loop
cmps
jmp
(bad)
test
push
clc
imul
js
mov
push
and
popa
nop
cmp
inc
jge
or
(bad)
pop
jp
movs
(bad)
ss
(bad)
aad
(bad)
push
cmp
jb
cli
push
push
aas
xchg
fstp
enter
in
dec
data16
adc
cmp
enter
call
mov
in
pop
stos
lods
sbb
push
or
sub
inc
aad
mov
fiadd
in
jae
dec
xchg
aaa
outs
jne
out
pop
push
dec
dec
and
dec
scas
lahf
sub
add
mov
arpl
(bad)
fstp
pop
sbb
test
push
inc
xor
sti
stc
int3
stc
fs
mov
dec
mov
xchg
xchg
std
xchg
adc
adc
popa
shl
imul
cmp
sbb
jle
and
fcomi
adc
or
xor
ds
mov
clc
pop
in
lods
push
scas
push
stos
fsub
das
inc
(bad)
fstp
jl
aad
mov
fisub
dec
xchg
mov
and
shr
stos
sahf
mov
fbld
and
inc
ins
fidiv
or
jle
inc
std
and
int
and
test
mov
fcmovbe
jp
fistp
sub
out
mov
out
ja
fbld
in
dec
ds
lods
(bad)
adc
jg
std
cmp
loopne
iret
mov
loope
retf
sar
lods
mov
adc
fbld
scas
xor
invd
lock
and
adc
xor
add
call
enter
je
xchg
xlat
pop
cmp
pop
xchg
leave
fwait
add
(bad)
xchg
jg
or
mov
hlt
xchg
jge
outs
xchg
cmc
mov
mov
and
repnz
test
(bad)
jb
and
pop
mov
mov
into
cmp
enter
push
mov
push
pop
or
push
adc
cmp
xchg
fcomp
fld
xchg
loopne
mov
iret
sbb
mov
push
ins
cmp
mov
inc
inc
shl
jg
push
pop
(bad)
shr
stc
daa
pusha
pop
ss
dec
test
(bad)
push
fdivr
ret
mov
ins
mov
pushf
movs
xchg
js
mov
leave
adc
dec
int3
push
lock
mov
or
jae
pop
and
mov
dec
call
dec
sub
cld
mov
stos
fistp
inc
in
cs
leave
inc
ss
out
push
lahf
mov
push
stos
into
outs
shr
xchg
cld
(bad)
adc
dec
inc
xchg
mov
jg
cmp
xlat
fist
iret
push
mov
mov
or
fwait
lods
jge
dec
or
jl
test
fsubr
jne
xor
nop
jg
jmp
push
rcr
enter
inc
inc
cmc
adc
cld
imul
jmp
push
pop
(bad)
cli
rol
fimul
and
dec
shr
jp
and
jle
into
add
and
fistp
adc
pop
movs
adc
dec
sub
clc
stc
shl
add
dec
pop
rol
mov
jl
adc
mov
aas
shr
jge
or
push
dec
cwde
push
outs
or
inc
(bad)
mov
mov
ss
pop
and
outs
xchg
lods
aam
data16
ins
mov
push
sub
jns
jns
ins
cmps
sti
add
adc
add
jae
cmp
jecxz
ja
data16
ins
push
outs
or
cdq
aas
inc
mov
cmp
(bad)
lds
xchg
push
xchg
test
xchg
mov
add
ins
add
cmps
iret
mov
cld
mov
xlat
sub
mov
mov
pop
mov
pop
mov
adc
mov
sbb
push
sahf
add
popa
dec
jnp
sub
in
jle
mov
lea
ins
xchg
sbb
sbb
add
push
xchg
xchg
iret
stos
jnp
pop
cli
sbb
sbb
xor
adc
push
dec
outs
sub
aas
addr16
pop
adc
loope
or
pop
or
mov
adc
pop
inc
cdq
iret
or
cmp
stc
lods
mov
or
sbb
lock
jle
jb
adc
xchg
daa
or
jo
stos
mov
int3
add
pop
add
jne
xlat
shl
push
out
cmc
test
test
push
std
mov
ret
mov
loope
dec
bound
adc
or
retf
adc
es
stos
test
fist
sbb
xor
fld
xchg
lods
xchg
movs
xor
push
inc
dec
cmp
push
or
mov
shl
(bad)
int
in
jp
xor
pop
sub
pop
add
test
pushf
nop
js
dec
fadd
xchg
push
fs
cli
xchg
leave
into
std
lods
cmp
iret
jbe
or
dec
xchg
gs
adc
mov
scas
mov
jl
sbb
xor
or
and
popa
xchg
jne
pusha
adc
cmp
dec
dec
adc
scas
jne
mov
rol
loopne
stos
shl
jne
pop
int
sbb
xor
pop
adc
(bad)
push
test
mov
fcom
and
xchg
mov
and
xlat
jmp
loop
loopne
fld
fmul
je
mov
mov
out
pop
(bad)
jnp
push
and
aaa
or
popa
hlt
cmp
in
push
or
ja
movs
dec
(bad)
pushf
mov
xor
mov
cwde
fsubr
or
inc
adc
ret
mov
xchg
jmp
in
nop
out
or
xor
xchg
inc
cmp
adc
ja
jmp
mov
mov
test
dec
xor
push
or
mov
out
das
jo
in
pop
enter
or
or
stos
cmp
out
ds
xchg
ins
fsub
or
add
pop
push
xlat
push
add
sub
repz
or
push
mov
adc
cmp
stos
xchg
fucomip
gs
arpl
adc
mov
jge
mov
pop
mov
add
ret
xchg
arpl
loope
dec
fst
jmp
adc
cmp
out
retf
cmps
(bad)
or
jo
cs
xchg
dec
and
cmp
ds
mov
popa
ss
call
or
ret
mov
jne
xor
jg
fisub
fdiv
or
lods
xor
loope
push
adc
fcmovnbe
or
repnz
or
sub
dec
sub
push
jmp
dec
daa
loope
std
movs
inc
mov
cmc
sub
cmp
adc
popf
push
(bad)
movs
cs
in
jae
and
loope
add
arpl
or
leave
cmps
mov
out
mov
xchg
aaa
icebp
xchg
jg
jmp
adc
mov
push
lods
mov
xor
mov
out
add
ror
xchg
sbb
and
inc
mov
lahf
cmp
push
inc
mov
xor
adc
mov
push
jb
jns
in
push
(bad)
movs
lds
test
addr16
out
sub
jg
push
sbb
lock
jnp
push
hlt
add
jge
or
lock
jo
aad
jns
sub
xchg
out
(bad)
(bad)
popf
jne
gs
fldcw
pop
mov
ja
mul
dec
and
retf
jmp
inc
aam
adc
rcr
xchg
aas
sub
sar
cmp
sub
cmp
pop
rcl
aad
std
xchg
aam
fnsave
cwde
pop
push
outs
test
jecxz
mov
in
sub
jecxz
imul
adc
jmp
scas
push
mul
inc
dec
xor
jne
ret
stos
xor
pop
sbb
xor
dec
jb
fidiv
fisub
retf
push
pop
jbe
xor
dec
xlat
fincstp
push
sub
xchg
lock
cmp
sub
scas
mov
(bad)
shl
iret
push
repnz
shl
lea
stos
or
fist
jge
sbb
mov
stos
das
and
bound
leave
lods
jbe
jmp
test
xchg
shr
scas
xchg
xchg
xchg
stc
arpl
add
in
cmps
ds
pop
mov
jge
sbb
mov
sbb
mov
sub
div
adc
movs
pop
xchg
sub
mov
or
int3
inc
xor
add
pushf
(bad)
stos
add
mov
pop
mov
in
sub
mov
inc
or
jmp
arpl
adc
(bad)
popf
sti
loope
cmp
xchg
fisub
es
mov
adc
ds
sub
(bad)
sbb
call
sar
nop
pop
movs
pop
aam
not
ds
jle
nop
pop
push
inc
mov
test
stc
cwde
mov
out
std
adc
adc
xchg
mov
fneni(8087
mov
inc
in
cmp
cdq
retf
mov
test
dec
imul
shr
push
fcomp
cmps
and
push
push
cmp
and
add
outs
into
loopne
(bad)
push
popf
sub
or
xchg
repz
mov
test
jb
inc
dec
sbb
sbb
mov
mov
lods
add
mov
fist
std
out
fstp
test
in
pushf
je
pushf
adc
leave
test
sar
outs
outs
push
mov
leave
xor
pop
push
hlt
sbb
retf
inc
shr
mov
into
sub
push
xor
cwde
or
cmps
mov
push
int
mov
or
aad
arpl
adc
stos
adc
repz
lea
pop
add
lock
xchg
mov
cmp
jle
hlt
mov
cmp
lea
retf
sbb
mov
das
cmps
or
cdq
jecxz
xchg
jne
retf
jle
xor
out
hlt
test
gs
arpl
das
sub
add
(bad)
jnp
sbb
xchg
adc
mov
aam
dec
adc
jae
xchg
imul
out
ja
xchg
jmp
ffree
add
push
ins
and
fwait
fs
pop
jbe
push
and
sar
fidiv
fadd
pop
bound
in
dec
mov
(bad)
mov
jno
push
inc
fcom
jne
dec
test
xor
pop
sub
cmps
lock
push
push
outs
fild
std
xchg
imul
push
add
xchg
xor
push
add
jns
mov
sub
dec
pop
cmp
pop
pop
push
cli
out
sbb
aaa
pop
jl
sub
xlat
and
repz
add
test
sub
das
jno
xchg
sbb
into
ds
jbe
push
outs
cdq
xor
xchg
rcpps
xor
jecxz
fistp
mov
test
adc
jecxz
inc
push
xor
push
sub
ds
outs
lock
inc
adc
call
jne
lock
(bad)
jge
or
scas
inc
daa
xchg
xor
ret
jmp
movs
cmp
std
js
jmp
xchg
jmp
data16
test
lods
test
mov
sbb
and
(bad)
fdivr
mov
movs
mov
into
rcl
fimul
loop
sub
div
stc
and
xchg
jno
test
pop
pop
scas
(bad)
cwde
mov
punpckhbw
pop
retf
(bad)
lock
adc
or
xchg
adc
mov
int
bound
ja
loopne
add
arpl
cmps
daa
addr16
test
mov
clc
cld
push
adc
add
xchg
or
loope
pushf
inc
test
xor
icebp
mov
dec
jmp
in
mov
mov
jp
and
cmp
push
sbb
mov
iret
ficom
pop
scas
pop
dec
mov
fidiv
add
xchg
lock
test
jb
fst
adc
icebp
sbb
cmc
push
add
adc
inc
scas
inc
xor
cli
cmc
xor
les
xor
xchg
in
arpl
jg
loopne
mov
push
cmp
mov
cmp
cli
dec
(bad)
fs
cmp
xor
cmp
xchg
adc
scas
pop
jmp
outs
dec
dec
jne
call
jne
add
out
shl
or
test
daa
outs
sub
jns
sbb
enter
imul
mov
retf
(bad)
xor
inc
(bad)
sub
stos
jmp
hlt
shl
cmps
pushf
sbb
xor
retf
inc
mov
retf
mov
scas
mov
icebp
in
call
mov
dec
icebp
shr
gs
ror
adc
add
daa
(bad)
retf
push
cdq
lods
std
shr
unpcklps
pop
xor
aaa
pop
xchg
push
(bad)
scas
adc
mov
mov
repnz
lock
xchg
cmp
arpl
imul
mov
js
shl
cmp
popa
inc
add
xor
arpl
shl
mov
mov
fist
or
aaa
(bad)
xor
dec
and
and
(bad)
scas
dec
jmp
in
lea
inc
or
or
lahf
xchg
arpl
cmps
dec
test
gs
mov
mov
sub
or
movs
nop
sbb
aas
or
retf
sbb
mov
dec
out
(bad)
cmp
add
xor
les
stos
ins
mov
in
das
or
popf
daa
scas
push
pop
xlat
iret
daa
clc
add
xchg
adc
aad
push
(bad)
cld
inc
jg
add
push
inc
cld
or
xchg
pusha
or
jecxz
add
cmp
test
dec
out
cmp
pop
loopne
lock
pop
nop
outs
jecxz
lock
pslld
push
ret
xchg
mov
ret
cmc
repz
int
pushf
dec
movs
dec
push
scas
push
(bad)
sbb
dec
mov
ins
push
push
test
mov
jnp
and
jle
mov
ds
js
add
arpl
dec
cmp
(bad)
jnp
iret
ror
ds
pop
aas
retf
xor
add
jp
ja
mov
ret
or
mov
(bad)
adc
push
arpl
mov
mov
out
rcl
dec
fbstp
mov
and
cmp
push
ss
jne
scas
xchg
add
push
xlat
push
pop
loopne
sub
xlat
or
cmp
stc
mov
retf
mov
mov
hlt
jp
ja
in
jmp
jae
repnz
cmp
push
mov
in
xchg
cmp
adc
mov
shl
lahf
add
inc
add
xor
repz
sbb
inc
repz
or
xchg
sub
sub
popf
sahf
jecxz
(bad)
jecxz
pushf
stos
mov
pop
and
push
stos
ficom
push
dec
popf
iret
call
fs
sub
jno
in
jmp
call
push
jecxz
ins
fstp
pop
sar
xor
cmp
loop
pop
out
and
imul
aam
fist
xor
adc
mov
ja
mov
mov
sar
cmps
and
int
test
cmp
addr16
(bad)
xor
sub
add
in
push
xchg
and
cmp
dec
fcomp
push
and
push
xor
push
add
icebp
neg
push
sub
fs
jo
in
xchg
stos
jb
lods
adc
inc
lods
dec
add
push
or
addr16
das
aas
xchg
xchg
push
xor
xchg
(bad)
in
xor
fnstenv
mov
push
and
stc
sub
jne
and
jbe
jmp
in
mov
daa
bound
inc
pop
dec
adc
fxch
out
inc
or
jae
icebp
dec
popf
cmp
push
lods
push
dec
jg
dec
xor
push
push
jp
mov
pop
jl
or
pop
xor
push
(bad)
retf
sub
ret
loop
adc
fidivr
and
jmp
imul
push
scas
mov
dec
and
jae
nop
sub
pop
sbb
mov
(bad)
in
dec
cld
push
lock
xor
xchg
pop
push
xchg
jb
and
ins
mov
pop
inc
enter
xor
jmp
add
push
jg
call
into
mov
mov
imul
dec
sub
in
outs
inc
int3
(bad)
xchg
das
pop
jmp
dec
ds
mov
sti
or
jno
enter
xor
adc
mov
and
repnz
sbb
movs
bound
ss
addr16
sbb
cdq
or
sar
inc
jg
dec
jnp
jb
inc
mov
(bad)
cwde
xor
jge
sbb
fs
enter
fcom
jns
enter
loop
call
test
inc
js
mov
cmc
nop
loopne
mov
out
mov
and
add
push
std
inc
daa
inc
or
movs
add
cdq
fwait
jmp
dec
lahf
(bad)
lock
inc
jge
mov
add
das
fwait
popf
xor
xor
inc
mov
dec
sbb
mov
stos
in
daa
outs
mov
xchg
cld
test
(bad)
fmul
stos
daa
fimul
std
fist
leave
es
mov
pusha
or
or
ds
movs
sahf
iret
and
inc
movs
push
jmp
rcl
dec
inc
out
jno
(bad)
dec
dec
jae
cld
mov
cmp
ja
sti
outs
jmp
sar
xchg
xchg
sub
inc
sub
dec
dec
mov
je
inc
xor
aad
sar
mov
js
scas
pop
push
and
xor
pop
mov
fiadd
rcl
enter
mov
cmp
sbb
jb
nop
popa
jecxz
(bad)
scas
cmp
movs
scas
adc
cli
add
ja
sti
dec
pop
popa
pop
cmps
(bad)
clc
jmp
jge
adc
jnp
shl
lock
aaa
js
dec
jl
sub
movaps
arpl
push
inc
stos
add
mov
test
or
lock
scas
imul
jmp
push
mov
hlt
push
hlt
cmp
mov
xor
jae
in
push
jno
sbb
inc
mov
(bad)
dec
repz
adc
out
pop
jecxz
fst
cwde
sub
add
hlt
bound
rcr
test
popf
mov
std
les
fs
je
mov
cs
rcl
test
in
sub
cmp
addr16
inc
fsubr
pop
les
fldcw
mov
arpl
mov
(bad)
ins
mov
mov
sbb
(bad)
jmp
lods
stos
xor
sub
imul
inc
out
and
lds
jno
imul
cmp
mov
jne
xchg
pop
cmp
mov
xchg
fwait
in
pop
fcomp
push
(bad)
cmps
push
std
inc
mov
xchg
ret
xor
push
fs
jnp
jne
cmp
and
inc
repnz
sub
xchg
xchg
int
adc
rol
fs
imul
mov
adc
pusha
push
mov
or
pop
imul
mov
test
cmp
jge
adc
movs
addr16
mov
adc
pop
cmp
in
or
in
xchg
aad
push
fisttp
rol
add
inc
cmp
mov
pop
push
inc
lea
inc
vpmacsww
mov
es
lock
push
lock
test
push
or
jae
rcl
sahf
fldenv
popa
mov
fidivr
pop
aam
or
mov
aam
aad
add
fisttp
shl
jo
jmp
dec
repnz
push
shl
dec
mov
std
add
stos
jne
dec
cs
mov
test
mov
push
sbb
dec
fnstcw
mov
mov
jp
sbb
repnz
shr
pop
add
adc
lea
jno
call
sub
xchg
mov
cs
jne
ss
out
movs
adc
mov
xor
add
mov
lea
adc
sbb
adc
pusha
arpl
jo
cmp
cwde
test
mov
jnp
sub
pop
mov
out
dec
fistp
lea
mov
imul
fmul
dec
xor
iret
pusha
out
adc
jae
adc
cmp
nop
pusha
scas
lahf
xchg
frstor
pop
push
mov
ret
ds
inc
cmps
stos
test
jge
pop
popa
inc
push
pop
push
out
xchg
pop
sub
sbb
jbe
and
mov
pusha
pushf
add
jmp
outs
add
push
popf
mov
or
push
xchg
jbe
sub
shl
xchg
in
mov
jmp
cmp
imul
js
jnp
cmc
sbb
jns
pop
cmp
cdq
lds
xchg
repnz
in
das
pop
cdq
popf
dec
outs
and
bsf
mov
xor
pop
xor
std
pusha
push
inc
dec
or
xor
or
or
iret
gs
adc
cmp
jbe
mov
shl
pop
in
dec
inc
and
out
test
or
pushf
mov
push
mov
adc
pushf
idiv
pop
xchg
adc
push
in
(bad)
cmp
es
iret
out
test
mov
test
xchg
mov
sbb
xor
test
pop
aad
mov
pop
idiv
iret
stos
shl
and
mov
dec
add
out
gs
xchg
mov
sbb
push
lods
aad
mov
loope
les
cmp
or
cmp
popa
test
push
mov
and
rcr
push
dec
mov
mov
out
ins
lea
imul
mov
cmc
mov
inc
push
xchg
lods
retf
sar
jne
cmp
(bad)
mov
sub
mov
icebp
xor
aas
in
and
or
jae
mov
xor
ja
mov
(bad)
in
push
je
pop
ret
rcl
pop
dec
add
mov
into
mov
pop
pop
xchg
mov
push
cmp
xchg
adc
(bad)
hlt
(bad)
sbb
mov
xchg
fnstenv
xor
and
(bad)
mov
or
repz
pusha
jmp
clc
jno
xadd
je
jge
in
(bad)
mov
or
shl
ret
push
lds
add
(bad)
push
pushf
mov
push
mov
imul
arpl
(bad)
cmps
sbb
and
dec
inc
iret
cmp
sbb
scas
xchg
dec
daa
mov
push
xor
xor
xchg
inc
sahf
aas
stc
pop
gs
add
mov
int
jnp
jg
out
nop
sbb
loope
shl
dec
call
push
jp
fucomip
jmp
or
jmp
sbb
aam
jp
outs
add
sub
call
mov
outs
lock
stc
or
and
or
popf
push
xchg
or
pop
jmp
cmp
repnz
sub
jbe
xor
mov
cmp
jo
sbb
movs
cld
inc
pusha
lds
and
inc
xlat
push
inc
ret
aaa
mov
or
addr16
sub
fwait
mov
jo
bound
mov
pop
inc
jmp
inc
fmul
daa
adc
cmp
xor
mov
imul
pushf
dec
xchg
stos
dec
or
push
int3
pop
dec
pop
xchg
mov
xchg
sbb
call
jo
add
pop
fld
fiadd
add
daa
cli
sub
or
xchg
cmps
mov
test
stos
sahf
daa
in
sub
inc
jge
cmp
(bad)
or
js
pop
jb
inc
in
enter
and
imul
lods
inc
loop
mov
mov
mov
pop
popa
mov
or
push
jmp
adc
inc
cmp
stos
mov
mov
dec
mov
sub
mov
ret
dec
outs
(bad)
push
adc
out
ja
ss
loope
pushf
pop
call
xor
mov
cmp
movs
js
addr16
push
(bad)
imul
inc
sbb
retf
and
shr
(bad)
clc
mov
nop
push
or
pop
pop
sahf
or
retf
add
and
loop
fsubr
add
inc
retf
out
popf
inc
sbb
xlat
cld
retf
mov
mov
scas
or
mov
mov
pop
out
mov
popf
add
sbb
ss
jo
adc
and
sub
shl
loope
mov
in
shl
fwait
in
sahf
sar
cld
cs
lods
inc
loopne
clc
mov
mov
xor
loop
xchg
push
gs
cwde
outs
push
cmps
jbe
mov
aam
jo
jmp
enter
mov
aas
or
nop
fmul
add
push
or
outs
aad
cli
mov
push
dec
repnz
ja
cmp
xor
imul
xor
(bad)
stc
lods
add
cld
aaa
lods
cmp
addr16
pusha
xchg
std
neg
xor
jg
cmp
inc
test
shl
fidivr
pop
fst
in
jmp
push
mov
lods
ror
nop
ins
cmc
ds
shr
cli
cdq
jmp
dec
(bad)
ror
and
dec
and
lds
movs
je
call
call
pop
sbb
cmp
stos
cli
hlt
dec
push
out
push
arpl
outs
inc
ret
ror
push
fldcw
mov
aam
imul
mov
push
(bad)
jnp
push
mov
inc
lods
fisttp
bound
js
imul
sub
rol
cs
ja
(bad)
fucom
cmp
push
out
fcompp
out
arpl
lea
jge
popf
push
fisttp
fiadd
or
enter
dec
in
adc
stc
aad
xchg
xor
mov
shl
and
aas
shr
inc
enter
inc
(bad)
mov
ins
fcom
mov
pop
rcl
arpl
das
movs
xchg
call
sbb
push
in
rol
push
stos
push
sar
les
or
add
clc
retf
ja
popa
xchg
div
cmp
rcl
or
shr
mov
in
enter
imul
inc
inc
shr
push
dec
jp
jnp
shr
push
xchg
xor
fs
cmc
cld
arpl
mov
sti
sub
dec
sti
cmp
jp
sbb
and
sub
rcr
and
xchg
(bad)
pop
fistp
ss
cmc
imul
aad
idiv
aas
or
mov
scas
jbe
xchg
shl
push
out
push
jae
scas
push
push
retf
hlt
cwde
sub
add
xchg
mov
pushf
arpl
sbb
or
pop
dec
test
out
cmp
adc
icebp
mov
shl
inc
cmp
mov
xchg
mov
dec
sbb
cmp
daa
pop
jo
aad
ins
out
cmp
inc
daa
mov
mov
adc
retf
push
mov
js
int3
fcom
mov
(bad)
mov
dec
jne
pop
pushf
lds
xor
push
leave
sbb
dec
and
ror
or
inc
in
adc
not
mov
and
repnz
fcom
aaa
aad
shl
cwde
pop
sbb
sbb
push
lea
xchg
xor
mov
dec
gs
sub
adc
mov
and
push
sub
and
test
or
test
pop
xchg
add
mov
or
cmc
mov
(bad)
je
lock
in
push
ja
aad
add
jge
dec
cld
push
mov
jnp
jmp
dec
dec
ds
imul
xchg
rol
imul
cmp
mov
push
fst
inc
pop
add
mov
rcl
test
cmp
cli
push
fnstenv
push
pop
push
fistp
adc
sahf
(bad)
sub
(bad)
push
xor
loop
arpl
repnz
or
push
adc
inc
mov
icebp
jae
es
icebp
jns
(bad)
popf
xor
rol
jne
pushf
fs
xor
jne
scas
fistp
xor
sbb
fldpi
mov
aad
push
ins
xlat
push
or
jbe
lock
inc
retf
inc
sbb
outs
nop
xchg
(bad)
retf
gs
shufps
lods
(bad)
int3
test
sbb
aam
mov
mov
jno
inc
mov
std
(bad)
mov
repnz
cli
test
mov
imul
loope
(bad)
dec
aaa
loopne
dec
push
out
(bad)
add
adc
fcomip
inc
hlt
loope
lods
push
cmp
lods
lods
(bad)
cmp
push
mov
pop
xchg
jb
loop
shl
xor
jno
push
(bad)
cmp
mov
dec
ins
out
xchg
jge
push
fadd
fisttp
sbb
mov
jmp
stc
leave
loopne
mov
sub
mov
(bad)
fnsave
imul
test
rcl
mov
jp
test
inc
lock
cmp
scas
xor
pusha
cmp
pop
mov
dec
scas
inc
pop
jmp
sub
adc
je
push
in
push
dec
aaa
std
inc
rcr
cmp
pop
test
jmp
dec
xchg
pushf
(bad)
(bad)
ja
popa
lods
rcl
push
enter
push
mov
clc
loope
jmp
sti
movs
test
push
dec
and
mov
mov
ins
ins
mov
lea
push
pop
xchg
das
push
loope
jnp
lea
icebp
or
xchg
iret
fisubr
mov
lods
loop
mov
(bad)
in
sub
lods
push
jge
rcr
jecxz
in
cdq
faddp
shl
sbb
or
inc
std
and
sbb
dec
and
mov
std
or
ret
shr
or
and
arpl
es
(bad)
cs
mov
out
fimul
or
mov
or
ss
or
je
xor
mov
les
arpl
jp
or
adc
inc
lods
push
add
je
cmc
pop
call
aad
mov
mov
icebp
bound
sar
je
or
rol
dec
xor
(bad)
aad
mov
cmp
lea
cmp
lock
pop
xchg
sbb
sbb
or
cwde
inc
pop
add
data16
sub
in
clc
add
data16
popa
test
fidivr
lea
adc
ret
sbb
jae
cdq
js
sub
ja
adc
push
push
scas
push
sbb
mov
jno
mov
gs
cmp
inc
inc
shr
xor
and
das
lds
int3
jbe
gs
cmp
outs
push
enter
xor
adc
cmp
sub
loopne
and
test
rep
test
jmp
jnp
pop
loop
add
clc
add
jl
mov
cmp
fwait
mov
js
add
stos
mov
imul
or
mov
or
pusha
call
ss
into
sub
mov
adc
loopne
jg
mov
pop
loopne
gs
movs
scas
(bad)
jne
jo
call
add
mov
mov
scas
rol
aaa
lock
push
mov
das
dec
and
dec
repz
out
and
mov
jb
outs
and
adc
loopne
add
cmp
adc
add
adc
or
and
pop
mov
gs
push
fcom
adc
pop
daa
mov
cs
icebp
jp
icebp
add
ffreep
xchg
inc
or
xchg
mov
ss
aam
ret
add
pop
push
xchg
rcr
fadd
mov
adc
fwait
xchg
cmp
and
jnp
xchg
mov
jp
fidivr
in
mov
push
push
sbb
xlat
test
fcos
lods
inc
cdq
xchg
sbb
popa
out
mov
stos
inc
ins
fs
pop
mov
test
je
movs
adc
xchg
mov
xor
and
mov
mov
out
sub
gs
lds
pop
test
xlat
jbe
inc
into
pop
(bad)
(bad)
add
jo
xor
pop
nop
xchg
das
xor
xchg
push
pop
je
lahf
or
cs
cmp
mov
mov
fistp
jge
pop
xor
icebp
lods
mov
dec
je
fidiv
icebp
push
data16
cwde
sub
(bad)
push
stc
stc
fiadd
ret
dec
jo
adc
in
shr
jo
retf
imul
mov
mov
mov
xchg
fstp
stos
test
cmp
sub
sbb
xchg
sar
add
mov
pop
xchg
pusha
fcom
bound
mov
(bad)
sar
adc
inc
sub
pop
xchg
pop
fist
add
or
pop
xchg
out
inc
and
int
add
cli
int3
scas
test
xlat
adc
adc
sub
push
fmul
push
movs
fincstp
mov
icebp
(bad)
cli
mov
gs
fwait
jle
(bad)
cwde
pop
mov
pop
icebp
outs
rep
mov
sub
mov
lea
push
cmp
movs
cmp
iret
imul
xchg
or
push
mov
pop
test
lahf
xlat
imul
xor
sahf
imul
cmp
inc
nop
mov
push
mov
lahf
(bad)
xchg
cwde
je
add
push
mov
jne
xor
int
lds
clc
xor
ins
add
xchg
cmc
lahf
mov
mov
jge
mov
out
cmc
mov
inc
push
lock
enter
dec
sub
out
in
xor
cmps
jns
pop
aad
gs
mov
jecxz
je
jecxz
fidiv
sbb
hlt
ror
push
dec
pop
cmp
imul
mov
sbb
inc
call
loopne
test
sbb
mov
mov
mov
push
mov
and
push
arpl
adc
mov
push
dec
push
mov
aam
push
sub
sahf
or
add
cmps
jmp
(bad)
aam
dec
cwde
push
or
xor
add
nop
or
or
sub
dec
xor
push
hlt
sbb
hlt
push
outs
lods
pop
dec
dec
mov
int3
mul
retf
fs
or
pop
cmp
test
cmp
nop
inc
ret
adc
fisttp
or
add
pop
jecxz
pusha
sub
hlt
hlt
pop
hlt
sahf
mov
fist
sbb
arpl
xor
xchg
push
movs
xor
rcr
xchg
shl
pusha
pop
test
ret
repz
sbb
xchg
in
sub
outs
sbb
repnz
cmp
aaa
stos
popf
cmp
sbb
sub
mov
fdivr
lods
icebp
pop
adc
pop
outs
push
(bad)
pop
pusha
cmps
add
mov
jb
ja
mov
sub
push
retf
mov
fld
xchg
xchg
(bad)
and
(bad)
leave
hlt
daa
push
xor
mov
or
inc
shl
push
jns
psubusw
gs
cmps
imul
rcl
pop
jne
mov
(bad)
aam
sahf
xor
rcr
ds
pop
adc
mov
fistp
mul
iret
cdq
add
and
fs
in
into
lock
xchg
movs
mov
xchg
adc
fsubr
in
dec
sbb
ret
call
gs
rol
ss
pop
or
jae
sahf
adc
retf
or
fisubr
xor
(bad)
jne
cmp
sub
sbb
mov
pop
and
dec
lods
mov
js
jae
xchg
inc
hlt
jmp
or
cld
add
adc
or
push
cmp
pop
outs
popf
jmp
cmp
push
adc
loope
mov
enter
in
cwde
pop
outs
xor
pop
or
sbb
adc
and
sbb
add
loope
retf
(bad)
daa
data16
test
pop
movs
mov
hlt
int
push
add
rol
sbb
cmp
mov
lds
and
loopne
xchg
fs
daa
loopne
ror
shl
xchg
std
sub
stos
clc
ds
inc
lods
ffree
(bad)
push
cmp
aam
or
cmps
inc
pop
jle
jmp
dec
xchg
push
test
mov
shl
fldcw
cwde
in
pop
ja
mov
xor
or
jmp
jmp
cwde
inc
add
mov
into
sbb
in
aas
mov
and
into
dec
icebp
pushf
or
add
hlt
inc
and
pop
in
jnp
push
or
mov
mov
xor
dec
inc
inc
scas
sbb
jmp
mov
out
adc
inc
mov
and
add
lods
xchg
arpl
xchg
cmps
pop
daa
mov
out
ret
std
mov
jle
push
outs
rcl
and
mov
outs
ss
mov
push
aam
add
xchg
sub
arpl
inc
xchg
in
jmp
les
push
sbb
jle
inc
and
sub
pop
loop
out
loope
push
movs
adc
push
lods
test
ror
push
retf
popa
jae
pop
sub
addr16
mov
dec
aas
repnz
stos
aaa
mov
cmp
lahf
ror
mov
pop
sahf
dec
test
inc
mov
pop
je
fmul
fstp
stc
sub
retf
jp
xor
mov
xlat
or
fwait
mov
push
cld
inc
lock
mov
and
cmc
mov
mov
push
and
mov
or
cmp
(bad)
enter
add
push
hlt
pop
outs
and
pop
outs
sub
sti
retf
in
xchg
xchg
xchg
sub
mov
inc
jmp
fmulp
cmp
xor
movs
enter
out
or
sbb
imul
jmp
or
(bad)
push
inc
sub
sub
leave
push
and
fistp
add
test
inc
add
cld
xor
rcr
test
push
jne
jmp
mov
jge
iret
sub
xor
adc
call
jmp
jb
jecxz
fnsave
pop
mov
fs
push
int
jb
lea
xchg
jbe
pop
xor
daa
add
xor
fs
mov
or
movs
push
adc
sbb
js
jmp
pop
repz
mov
sbb
push
and
push
aas
push
(bad)
stos
dec
sub
xchg
push
pop
das
cld
pop
mov
xor
dec
dec
clc
push
pop
and
inc
pushf
fisubr
lods
mov
xchg
(bad)
imul
mov
push
loope
ins
fs
repz
pop
aad
std
jo
sbb
pop
mov
push
repnz
inc
mov
shr
fwait
sahf
ret
dec
das
mov
pop
adc
das
mov
mov
xchg
mov
inc
xor
xor
adc
sti
hlt
xor
mov
mov
aad
lahf
popf
sub
adc
pop
mov
stos
shr
shl
xlat
es
arpl
es
fsubr
js
retf
fabs
push
aam
popf
ja
sbb
mov
js
and
rcr
pushf
push
mov
(bad)
mov
pop
daa
xor
fisttp
xchg
dec
inc
inc
add
dec
psubq
lods
je
dec
in
pop
xchg
imul
adc
dec
xlat
mov
sub
hlt
jle
in
js
xor
(bad)
retf
pop
push
mov
call
lahf
mov
rol
or
adc
rcl
pushf
mov
and
or
fwait
inc
dec
sbb
jnp
pop
mov
sub
retf
jmp
sbb
and
int
ins
mov
test
and
(bad)
xchg
dec
push
and
into
push
addr16
dec
movzx
fmul
mov
shl
push
sbb
fist
cmps
sub
fsubr
xchg
imul
xlat
xchg
xchg
push
mov
ret
dec
dec
xchg
aam
pusha
int
jb
mov
test
fistp
jp
jmp
xchg
dec
loope
add
inc
imul
dec
and
jle
test
call
fsubr
xor
and
in
movs
jle
aas
push
sub
in
inc
jb
mov
std
mov
mov
out
mov
sbb
repz
pop
or
mov
cmp
add
cld
loop
adc
ss
into
(bad)
or
cmp
cdq
cmps
mov
cmp
adc
es
lock
jmp
and
pop
ror
in
cmp
ds
xlat
add
stos
inc
cmc
push
dec
std
imul
lock
jns
loopne
mov
loope
inc
sub
xchg
dec
dec
lahf
mov
mov
out
mov
add
pop
ds
cmc
mov
pop
test
stos
cmp
dec
stc
jg
xchg
cmp
lods
sub
push
popa
imul
dec
xor
or
fstp
pop
aas
das
stos
leave
mov
lea
or
add
lea
lods
jecxz
aaa
jg
pop
push
and
test
popf
mov
add
add
add
inc
push
dec
repnz
xchg
dec
push
fsub
jns
push
lds
or
xor
repnz
(bad)
popa
xchg
adc
pushf
test
cmps
pop
fild
arpl
xor
jnp
xadd
repz
test
rol
out
in
add
idiv
xor
dec
xchg
sub
xor
cmps
push
hlt
mov
mov
pop
sub
mov
mov
xlat
test
mov
and
xchg
(bad)
clc
or
jmp
pop
or
dec
popa
in
push
ins
xchg
ds
cmp
jge
mov
dec
inc
addr16
inc
mov
or
cld
mov
cmp
jns
inc
call
ds
mov
loop
repnz
dec
test
xlat
mov
loop
jle
push
fs
lods
sbb
and
cdq
cmp
or
ret
jmp
minps
fstp
pop
addr16
and
stos
or
lahf
dec
sub
sub
push
pop
shr
sbb
retf
push
or
jg
(bad)
and
pop
mov
je
dec
xchg
or
dec
mov
dec
pop
nop
je
pop
mov
push
xchg
mov
dec
aam
pop
push
popa
mov
cmps
out
xlat
clc
inc
inc
xor
les
dec
hlt
xchg
sbb
or
stc
ret
mov
mov
sub
test
iret
pop
cmp
dec
in
(bad)
xor
or
push
cdq
test
sahf
xchg
mov
jg
mov
mov
dec
push
les
add
jmp
cmc
loop
shl
mov
(bad)
pop
add
sbb
fstp
in
mov
mov
lea
adc
out
jl
mov
aas
iret
fs
cmp
push
enter
jl
ins
mov
pusha
adc
dec
pop
ins
std
outs
xchg
mov
adc
mov
push
cmp
lds
mov
mov
and
add
(bad)
dec
rcr
sbb
lock
clc
push
and
sub
ins
nop
out
pop
in
mov
sub
cmp
mov
loope
sbb
imul
cmp
dec
fcom
in
fsub
push
imul
push
aaa
hlt
loope
call
in
data16
outs
pop
jbe
js
fwait
nop
sbb
dec
dec
ins
data16
(bad)
dec
sbb
mov
std
pushf
je
xchg
pop
stc
sti
fdivr
das
push
sbb
aaa
mov
int
call
pop
sbb
rcl
out
adc
out
sbb
push
xor
add
mov
mov
sbb
and
adc
sub
or
add
arpl
jb
leave
adc
fs
fmul
rcr
mov
cmps
and
mov
cdq
fimul
mov
fdivr
cld
xchg
xor
and
(bad)
fsubr
fucomip
xor
cli
and
mov
ror
js
je
fbstp
xor
mov
mov
sbb
lock
popa
cli
pop
jmp
xlat
in
test
arpl
fs
jno
add
push
jbe
repz
cld
popa
sbb
push
sub
stos
inc
sti
and
mov
or
cld
push
sbb
div
sub
div
jmp
mov
xchg
aas
sub
(bad)
jle
movs
push
jmp
add
sti
jns
mov
pop
out
push
mov
cwde
sub
sbb
sahf
jae
xchg
push
fbld
add
arpl
adc
cmp
and
sbb
in
inc
rcl
pop
xchg
ds
neg
xor
fistp
bnd
stos
sbb
mov
ss
mov
xchg
inc
test
ss
cmp
jo
push
or
ds
es
or
or
add
test
lock
in
or
mov
aam
pop
adc
je
loop
adc
xor
pop
jnp
pop
cmp
cld
enter
cmp
push
or
fst
pop
mov
mov
mov
mov
mov
ret
scas
add
mov
idiv
or
shr
sbb
push
loop
jg
dec
(bad)
in
shl
imul
mov
or
fwait
jo
pop
mov
add
popf
inc
inc
ins
pop
cmp
cmp
nop
mov
jns
inc
pop
cwde
and
sub
push
pop
jnp
scas
mov
call
repz
(bad)
lds
inc
in
hlt
mov
(bad)
(bad)
retf
pushf
xchg
inc
sbb
fmul
xor
aam
or
sub
cdq
jge
fdiv
mov
mov
cmps
or
or
and
mov
stos
sub
add
xor
sub
cmc
mov
mov
mov
scas
sbb
cmp
push
add
into
sbb
pusha
fistp
sbb
dec
mov
jno
cmp
and
xchg
and
stos
mov
cmp
push
(bad)
jb
cwde
mov
mov
xchg
scas
mov
mov
pop
jg
repnz
bound
xchg
xchg
jo
mov
js
nop
inc
rcl
out
cdq
dec
jmp
std
jmp
ds
mov
xchg
outs
sar
js
mov
adc
mov
(bad)
mov
cmps
or
aaa
das
popa
mov
sbb
or
xlat
repnz
adc
bound
ds
cli
call
cld
je
or
scas
mov
aaa
ds
(bad)
pop
in
repnz
mov
cmps
aam
xor
push
cli
enter
mov
mov
cs
stos
ja
fiadd
push
cdq
pop
pop
in
fidivr
popa
enter
loop
cwde
lahf
push
das
aad
pop
fs
xor
pop
mov
bound
pop
add
jns
imul
mov
imul
outs
add
inc
cmps
pop
dec
jb
enter
sbb
push
into
aaa
cmp
ja
fdivr
leave
aam
imul
pop
add
xchg
vmovq
xchg
xor
inc
int3
arpl
or
mov
mov
dec
pop
mov
mov
lods
or
jle
mov
xchg
ja
fmul
or
leave
sub
xchg
call
xor
cld
ss
or
in
mov
mov
(bad)
push
sub
clc
or
sbb
jbe
jbe
mov
inc
pusha
jl
mov
xor
push
or
cdq
mov
xor
cli
loope
xchg
push
aaa
int3
mov
add
and
add
cli
idiv
pop
retf
and
sbb
ret
cmps
test
cmc
adc
les
test
cmp
dec
pop
inc
mov
pop
stos
repz
(bad)
push
sbb
mov
(bad)
std
xchg
(bad)
in
mov
lods
(bad)
stc
cmps
inc
call
sti
shr
sub
fldcw
sub
pop
adc
mov
xchg
lods
arpl
enter
xchg
jle
sar
addr16
pop
cmp
ja
adc
es
push
ja
adc
and
push
leave
dec
add
xor
dec
mov
ficom
pusha
cmp
pushf
dec
push
mov
daa
stos
daa
pop
shl
mov
add
daa
lods
scas
outs
call
inc
inc
dec
fnstenv
xchg
jno
test
sub
test
jmp
ins
push
add
mov
inc
sbb
mov
dec
push
push
test
fild
lods
jle
lock
cdq
add
adc
jbe
clc
aam
sbb
fld
xor
in
fcmovbe
out
test
fistp
pop
xor
xor
dec
dec
(bad)
jmp
fsub
pop
test
fxch
stc
outs
push
xchg
fist
fsub
stos
fadd
mov
pop
push
cmps
das
inc
retf
ret
lea
pop
inc
jl
out
pushf
popa
cmp
out
jmp
dec
aad
jnp
mov
jecxz
out
mov
xchg
jae
int
fidivr
xchg
pop
add
stos
add
push
test
nop
outs
add
ja
repnz
mov
(bad)
popf
mov
cmps
xchg
clc
(bad)
test
mov
lea
push
js
lock
pop
sbb
mov
push
or
mov
test
int3
in
or
mov
sbb
push
ror
(bad)
cmp
hlt
out
pushf
retf
pop
pop
pop
jl
ss
add
pop
nop
ret
or
mov
cmp
xchg
(bad)
ins
shl
adc
push
(bad)
sbb
push
jl
jmp
inc
pusha
out
sbb
outs
rcl
xor
cdq
push
xor
jge
(bad)
inc
hlt
(bad)
adc
test
jecxz
xchg
mov
xor
imul
int3
pop
and
xor
hlt
jmp
mov
adc
mov
or
mov
cmp
into
int3
retf
fsubp
popa
nop
fild
push
clc
xor
stos
push
movs
sbb
mul
mov
icebp
mov
ins
jmp
jl
push
clc
popa
es
adc
(bad)
fld
inc
(bad)
out
mov
xchg
loopne
sub
xchg
(bad)
sub
shr
test
das
sbb
xor
sbb
add
pop
lock
pop
pop
mov
scas
sbb
inc
mov
mov
dec
adc
sbb
xchg
mov
and
and
and
enter
jl
cmp
add
jno
cmp
mov
add
cmp
xchg
aaa
lods
(bad)
sti
mov
jmp
sub
push
test
mov
jecxz
adc
aam
pop
call
xchg
cwde
dec
push
xor
push
dec
(bad)
fdiv
mov
scas
aad
jle
sub
or
cwde
(bad)
xor
clc
scas
mov
jmp
(bad)
gs
(bad)
pop
test
rcr
sub
clc
mov
sbb
sbb
xchg
or
or
pop
cmp
addr16
lahf
mov
jmp
add
iret
ins
or
rcr
jmp
push
cmp
fbstp
or
add
and
add
fidivr
mov
xchg
dec
jg
rol
push
pop
cmp
ret
mov
mov
int3
jb
jle
adc
adc
pop
and
adc
xor
loope
std
ret
lods
inc
inc
and
test
loop
mov
data16
cdq
push
jno
dec
mov
ror
dec
xchg
mov
imul
or
sbb
test
and
xlat
nop
neg
add
fsub
fmul
push
push
ja
inc
retf
rcr
mov
mov
sbb
fs
or
rcl
sbb
mov
mov
dec
xchg
push
jmp
push
stos
popf
mov
jp
aam
jle
push
mov
mov
push
(bad)
std
mul
scas
jecxz
cmp
test
add
mov
cmp
xchg
rcl
mov
fisttp
xchg
xlat
xchg
sub
push
test
scas
jg
sub
and
mov
xchg
nop
xchg
movsx
push
inc
daa
ins
rol
push
sar
lea
ja
push
mov
int
push
fs
or
shl
(bad)
xlat
lds
aad
test
cdq
cli
sbb
fstp
aaa
enter
mov
push
es
or
pop
into
and
dec
inc
out
and
adc
mov
clc
std
fdivr
dec
nop
rcl
cmp
out
mov
adc
fisttp
push
(bad)
dec
dec
mov
mov
xchg
xor
jns
adc
stos
ds
sub
pushf
xlat
gs
or
xchg
pop
icebp
xchg
out
jb
out
inc
push
push
and
jp
sub
mov
push
je
or
inc
mov
push
cmp
cmp
(bad)
popa
or
adc
mov
in
push
xlat
int
and
and
xor
out
sub
call
shl
jmp
inc
in
xor
sbb
cmp
or
push
aas
xchg
xor
mov
(bad)
mov
std
mov
cmp
rcl
pop
adc
mov
sar
fldcw
daa
nop
add
sub
iret
add
test
push
push
or
fs
sbb
mov
mov
adc
hlt
or
es
(bad)
(bad)
cmp
sub
pop
movs
hlt
int3
div
xor
sbb
jp
sub
pop
scas
and
jp
rcr
mov
les
gs
(bad)
jp
inc
fidivr
jns
ret
les
sbb
(bad)
or
mov
add
sub
adc
pop
cmp
aam
xchg
(bad)
dec
(bad)
mov
xor
cmp
xchg
mov
pushf
(bad)
hlt
lods
lods
sbb
out
add
pop
scas
push
sub
jno
adc
shr
fist
ret
xchg
cmp
div
mov
stos
xchg
xchg
les
or
mov
scas
jae
cmp
mov
data16
push
hlt
or
(bad)
dec
ins
inc
xchg
xchg
aad
pop
mov
in
retf
repnz
je
in
clc
pop
pushf
add
cld
mov
pop
out
sbb
push
push
adc
mov
in
es
and
adc
push
imul
hlt
lods
cmp
(bad)
push
rcr
inc
fdivr
xchg
xchg
cli
test
iret
mov
jb
lea
pusha
lock
xor
pop
cmps
(bad)
mov
fdivr
xor
lds
shl
repnz
push
mov
fadd
xlat
xchg
mov
loopne
push
adc
cmps
and
clc
pop
jmp
mov
push
loope
lock
clc
dec
(bad)
mov
pop
mov
add
or
out
mov
mov
inc
add
adc
fdiv
pop
ins
push
pop
inc
sub
sub
aas
xlat
xchg
test
cmp
repnz
jmp
stos
fidiv
push
sbb
in
dec
mov
add
ins
push
retf
pop
xor
out
retf
xchg
or
or
mov
pop
shl
inc
lods
popf
inc
arpl
test
lahf
stos
and
shl
or
cmp
es
push
outs
movs
inc
push
mul
bound
cmps
jmp
xchg
xlat
repnz
jmp
jmp
and
loope
pusha
aaa
ds
add
mov
and
icebp
push
adc
out
and
les
popf
adc
cld
das
mov
push
arpl
movs
xchg
scas
clc
dec
cwde
or
ss
xor
inc
mov
dec
ret
js
xor
js
jmp
hlt
xor
sbb
mov
jg
(bad)
cmp
aas
pop
xchg
or
xor
or
adc
xchg
movs
(bad)
in
mov
xchg
imul
cmp
mov
loopne
shrd
mov
rol
jno
es
int
stc
sbb
add
mov
pop
mov
push
fist
pop
adc
ja
fist
sub
ss
inc
push
mov
hlt
sub
inc
es
mov
je
xchg
or
aam
mov
call
dec
pop
test
and
lea
outs
pop
pusha
mov
xchg
shl
cli
sub
mov
or
mov
call
jae
leave
xor
leave
retf
retf
retf
and
aam
adc
out
jg
mov
jmp
sub
or
jbe
(bad)
aaa
outs
loope
stc
pop
mov
pop
push
dec
add
or
mov
nop
sbb
js
mov
movs
jge
iret
mov
jle
pop
(bad)
dec
xor
inc
inc
fstp
and
inc
cmc
mov
sbb
fidivr
add
ss
push
popa
ins
xlat
aaa
iret
pop
sub
pop
sub
and
mov
fs
cmp
pop
sbb
inc
mov
cld
test
adc
jecxz
push
pop
push
imul
jo
in
sbb
aam
dec
ficom
les
or
out
test
test
or
push
inc
add
daa
sbb
cli
pop
shl
in
(bad)
fwait
add
imul
test
dec
aad
shr
repz
jmp
dec
idiv
jle
outs
add
mov
add
sbb
xchg
pushf
xchg
in
pusha
inc
stc
aaa
(bad)
test
push
xor
and
mov
scas
fnsave
push
jmp
adc
dec
xor
xor
cmp
lock
test
inc
jge
mov
jl
dec
sahf
push
pop
ret
outs
frstor
sbb
push
mov
iret
and
cmp
mov
shr
inc
imul
mov
cmp
pop
cwde
dec
xchg
add
sub
jg
or
cmp
inc
push
xchg
mov
and
inc
push
dec
div
hlt
xchg
movs
mov
enter
and
test
aaa
jae
sbb
mov
inc
jne
pop
add
call
ret
mov
data16
push
cdq
std
scas
sub
jbe
mov
idiv
push
xchg
(bad)
aaa
dec
gs
test
pop
ja
cmp
pop
mov
iret
pop
arpl
jo
mov
inc
ins
(bad)
mov
stc
sti
fsubr
mov
fistp
mov
xor
jno
and
push
add
inc
xor
adc
sbb
pushf
rcl
imul
jecxz
ret
lock
dec
push
mov
and
retf
inc
sbb
or
fcom
sbb
cmp
fld
jg
push
adc
xchg
test
cmps
xor
or
int3
shl
xchg
mov
ds
mov
fmul
cmp
into
ss
lock
ret
jge
pop
or
push
not
push
push
fwait
lock
or
pop
test
or
or
or
xchg
outs
fst
outs
push
popa
cwde
and
xor
push
cmp
in
push
xchg
push
das
push
stc
loopne
cmps
add
pop
xor
sbb
popf
xchg
imul
xchg
out
inc
jno
dec
sbb
(bad)
imul
imul
loopne
icebp
inc
sbb
data16
inc
pushw
fnstenv
cmp
push
xchg
or
mov
pop
enter
das
mov
scas
push
cdq
dec
sbb
jg
inc
sbb
call
jp
stos
pusha
rcr
ret
fcmovu
xchg
inc
mov
mov
dec
ins
sub
aam
int
mov
fldenv
les
xchg
outs
xlat
add
push
loop
xlat
sub
addr16
jmp
xchg
(bad)
scas
ins
fist
int3
js
je
ss
aam
enter
mov
das
jae
lds
dec
push
or
inc
rcl
imul
mov
add
fld
and
data16
pop
mov
add
xchg
(bad)
fsubp
adc
aam
cmc
ret
in
movs
adc
inc
movs
push
sbb
enter
dec
jo
add
xchg
push
popa
mov
sub
fimul
repz
sbb
inc
mov
jmp
add
jecxz
cmc
jb
popa
popa
sub
shl
in
hlt
(bad)
push
nop
cmp
out
(bad)
(bad)
fs
and
shl
jb
dec
xor
or
push
dec
outs
and
lea
dec
imul
es
xlat
xor
inc
jnp
dec
dec
mov
jne
jne
(bad)
dec
repnz
xchg
sub
adc
mov
ror
inc
fs
mov
xrelease
leave
(bad)
jo
sbb
pop
ret
push
xchg
mov
lods
jg
sti
and
pop
pop
push
add
mov
rol
imul
scas
movs
mov
dec
out
or
bound
add
mov
add
test
ret
test
cmp
loopne
scas
cmp
and
cld
in
push
stos
mov
test
fdivr
and
push
sbb
inc
icebp
xchg
mov
sub
add
xchg
sbb
add
jmpw
pop
cdq
int3
cmp
int
push
xor
leave
into
mov
data16
int
shl
sahf
mov
call
or
push
mov
aam
je
or
sbb
cld
movs
retf
add
pop
dec
ret
add
sti
cli
sbb
mov
xor
imul
bound
fdivr
pop
scas
(bad)
aam
or
(bad)
dec
cmps
ror
out
mov
cmp
data16
inc
sub
icebp
nop
xchg
mov
and
mov
or
mov
or
cli
into
sub
test
dec
xchg
xlat
cmp
iret
dec
dec
mov
dec
leave
cmp
dec
jno
cli
xchg
test
mov
cwde
lahf
sahf
push
adc
lahf
jecxz
xchg
xchg
lds
leave
call
push
loopne
les
inc
into
rcr
outs
(bad)
fwait
sbb
(bad)
cdq
inc
sub
sbb
add
ret
mov
icebp
cwde
sbb
dec
cvtps2pd
rcl
mov
outs
push
fisttp
int
dec
mov
call
lods
inc
movs
repnz
aaa
xchg
les
add
dec
pop
repz
scas
pop
inc
pop
dec
(bad)
xlat
jecxz
xor
pusha
stos
call
aas
movs
inc
adc
cwde
faddp
stos
mov
cmp
loopne
fnstsw
xchg
fdivp
test
push
inc
xchg
and
(bad)
pop
repz
ds
and
cmp
ja
jmp
sub
clc
xor
out
sar
inc
imul
pop
adc
jo
push
adc
mov
sar
adc
stos
mov
hlt
dec
icebp
call
das
adc
sub
lds
push
jmp
add
or
xchg
arpl
cmp
pusha
aad
cmp
outs
std
nop
stc
pop
jbe
call
jecxz
or
push
jb
inc
pop
fist
(bad)
mov
cs
repz
cmp
and
(bad)
mov
dec
mov
and
btr
xchg
mov
and
mov
pop
or
push
sub
lock
jg
imul
add
int
jmp
jns
mov
in
and
loopne
mov
aas
or
cmp
iret
mov
or
fldcw
mov
adc
mov
hlt
inc
scas
or
inc
aas
call
jno
jnp
sbb
jle
jecxz
lods
mov
int
jbe
(bad)
fs
mov
movs
aad
adc
jbe
mov
push
mov
lds
(bad)
pop
dec
ret
xchg
lds
mov
and
push
sub
rol
inc
movs
or
mov
add
push
test
sub
aam
mov
xchg
mov
adc
daa
pop
movs
icebp
jp
leave
xor
stc
jbe
add
sti
imul
outs
adc
(bad)
push
rcl
mov
sub
cwde
fs
xchg
mov
ds
jae
call
adc
int
fstp
cmp
cmp
data16
pop
pop
add
adc
xchg
arpl
dec
retf
mov
test
mov
shr
into
sub
pop
(bad)
lods
fcomp
push
xchg
push
jmp
popf
fidiv
mov
jle
sub
add
popa
pushf
adc
adc
in
cmp
push
ins
out
stos
jge
aad
arpl
mov
dec
arpl
and
pop
add
sbb
movs
fwait
stc
out
xchg
pushf
cs
into
xchg
inc
pop
adc
fisubr
push
das
fsubr
das
jle
cmp
in
cwde
cmp
xchg
mov
ds
pusha
inc
clc
out
or
js
mov
add
sbb
lods
call
add
push
pop
adc
retf
shl
popf
inc
retf
stc
push
stos
stos
jp
in
xchg
inc
add
fmul
adc
ror
test
push
ds
sbb
iret
mov
add
imul
xor
(bad)
push
data16
outs
cmc
xor
jns
xchg
ja
cmp
jge
shl
pushf
test
(bad)
xchg
push
cmps
jecxz
ins
fwait
(bad)
push
jae
dec
test
inc
xchg
or
and
push
lahf
sbb
adc
shl
shr
dec
fld
mov
mov
mov
ja
pop
pop
out
call
(bad)
fistp
int3
and
mov
fwait
call
in
test
outs
jo
mov
(bad)
cli
sahf
movs
push
std
cmp
push
pop
out
inc
push
in
xor
fisubr
inc
sbb
adc
mov
test
outs
lahf
sbb
cmp
das
mov
loop
pusha
and
jne
aas
add
push
xor
cmp
jnp
outs
je
jns
test
sub
cmp
mov
sbb
xchg
mov
ja
je
bnd
cmc
jle
aam
movs
cdq
int3
mov
and
test
popf
in
push
imul
popf
hlt
inc
cmp
and
mov
add
inc
xchg
pop
into
xchg
mov
int3
mov
adc
inc
jne
or
push
lods
addr16
pushf
jae
das
lods
movs
inc
lods
xchg
test
loope
and
adc
cmp
es
into
cwde
daa
call
popf
je
sub
cmp
dec
jo
mov
repz
xlat
mov
push
mov
mov
xor
imul
icebp
xchg
push
push
test
aas
jg
repz
mov
loop
xor
js
in
xor
jns
mov
fld
xchg
aam
or
std
push
xchg
sar
imul
in
or
jmp
das
or
cmps
sbb
test
jecxz
xor
cmp
fdiv
cmc
jmp
push
mov
mov
xchg
xor
lea
int
add
test
sub
adc
lods
ins
pop
(bad)
and
push
pop
push
inc
lods
xor
mov
fisubr
sub
test
dec
add
pop
adc
sbb
(bad)
cmp
sub
push
xor
cmp
loop
xchg
push
std
inc
scas
mov
in
add
int3
mov
in
jmp
mov
aad
daa
jp
or
sub
mov
psrld
ror
leave
add
int3
add
mov
iret
aam
icebp
in
(bad)
ds
sahf
cmp
mov
jb
int3
pop
sbb
sbb
(bad)
mov
sub
test
enter
jmp
push
add
cmps
and
out
clc
inc
xor
imul
cli
out
pop
cmps
shr
inc
sbb
and
(bad)
out
mov
iret
mov
adc
pop
mov
xor
movs
imul
jmp
mov
ret
loope
add
popa
sti
xor
ror
test
xchg
es
std
cs
mov
sub
outs
and
cmp
sbb
sub
jecxz
or
shr
jmp
pop
lea
fwait
dec
fcom
dec
daa
inc
add
lods
mov
(bad)
fisubr
pop
xlat
and
fdecstp
jecxz
sbb
aad
hlt
(bad)
je
push
inc
dec
jno
test
cld
test
push
aaa
jg
mov
fld
mov
shl
sub
add
int
and
add
(bad)
and
and
inc
into
fld
mov
jle
mov
xor
push
loopne
pop
stos
and
lock
or
pop
ret
dec
out
push
cwde
pop
push
daa
jecxz
fwait
imul
in
mov
int3
pop
test
push
push
addr16
imul
cmp
add
call
leave
mov
cmps
jge
xor
push
push
out
mov
pop
xor
add
or
pop
adc
cmps
cmp
sbb
in
pop
fdiv
lds
mov
stos
mov
inc
push
aaa
pop
or
mov
and
into
xchg
ins
jp
inc
adc
icebp
and
loop
inc
mov
pop
mov
add
and
(bad)
rcr
rcl
adc
and
stc
add
ja
neg
shr
loop
and
adc
inc
inc
es
out
rcl
in
pusha
repz
or
ins
add
inc
(bad)
mov
sbb
add
dec
test
adc
jnp
mov
and
fidivr
and
mov
sti
test
and
sar
dec
aad
sub
aaa
rcl
mov
adc
(bad)
jo
lea
xchg
pop
pop
dec
jo
add
std
data16
inc
(bad)
out
adc
xchg
test
stos
sub
lods
pop
bound
xor
stos
inc
mov
push
call
lds
jg
pop
(bad)
and
aas
xchg
pushf
mov
icebp
jl
jbe
and
fwait
cwde
scas
sbb
test
cmp
sbb
movs
dec
imul
or
jbe
pop
mov
push
jecxz
test
cmovbe
add
xlat
out
(bad)
push
adc
xchg
or
cmp
retf
xchg
cdq
or
loope
call
cmc
inc
push
dec
or
and
dec
outs
xlat
cmps
iret
add
mov
ss
(bad)
pop
jl
ins
cmps
push
push
sub
inc
ret
ins
add
(bad)
cmps
ins
sub
dec
iret
call
push
outs
rcr
mov
(bad)
xor
aad
jno
dec
mov
push
loope
mov
fld
push
jb
or
pop
fldenv
int
das
gs
or
je
mov
cwde
stos
sahf
gs
or
mov
fisttp
dec
scas
xchg
out
push
int
or
dec
in
adc
mov
cmc
ds
mov
jnp
jmp
cmp
cmp
adc
xor
xor
(bad)
cmp
stos
fdivr
test
mov
jmp
shl
mov
leave
(bad)
mov
ins
push
and
cli
aaa
mov
or
retf
int3
xor
mov
dec
mov
out
sbb
(bad)
adc
(bad)
push
addr16
mov
fmul
call
into
test
addr16
jl
dec
imul
xor
fdiv
jecxz
mov
jecxz
lahf
inc
loopne
call
jl
cld
jecxz
(bad)
cmp
std
xor
(bad)
add
daa
popf
adc
jb
add
enter
push
xchg
mov
push
pop
pop
sub
je
jnp
mov
test
jl
push
jns
or
sbb
retf
cmps
repnz
js
mov
stos
push
lahf
push
jle
ret
rcr
cli
cmp
and
outs
jno
ss
xchg
inc
inc
sub
sar
rcl
adc
pop
test
(bad)
rcl
pusha
daa
mov
mov
sbb
and
ss
fwait
jg
cmp
inc
xor
setbe
imul
pushf
int3
mov
fnop
push
shr
mov
js
(bad)
xchg
outs
push
xor
jbe
jecxz
cwde
jae
je
aaa
out
mov
fistp
push
mov
outs
jecxz
or
push
and
xchg
test
test
mov
in
dec
pop
int
dec
sub
cmp
jg
dec
add
mov
ins
out
dec
stc
mov
sub
dec
sub
pop
or
mov
and
xor
push
cli
xor
fcmovu
xor
clc
jmp
fcomp
sub
and
push
outs
adc
movs
push
jnp
ja
mov
call
stos
push
mov
fs
mov
in
fistp
and
shr
lds
and
test
sbb
jecxz
push
mov
mov
xchg
xlat
and
xchg
push
fwait
inc
cmp
out
pop
stc
jns
in
int3
mov
cmp
mov
das
mov
addr16
adc
ss
retf
sub
nop
jns
mov
loop
icebp
cmp
ja
ss
in
(bad)
cwde
or
adc
ret
retf
adc
scas
loopne
mov
push
(bad)
sbb
add
cdq
shl
mov
jp
call
fdiv
mov
xchg
add
jg
ret
popf
add
pop
(bad)
lods
in
add
adc
outs
cmp
or
(bad)
mov
or
mov
sub
xor
push
lods
xchg
xor
and
xchg
cmp
inc
dec
jge
fidiv
cmps
div
ret
int
popa
jmp
pop
pop
mov
scas
clc
ret
movs
ja
nop
cwde
(bad)
ds
xor
dec
push
jmp
push
cmps
test
xlat
cdq
dec
inc
inc
out
xor
rol
fistp
add
hlt
push
push
push
jae
push
sbb
daa
inc
mov
push
movs
and
cmp
or
push
and
lods
add
mov
dec
test
mov
mov
aam
js
cld
leave
adc
aas
nop
es
jno
fs
xchg
call
add
cmp
adc
(bad)
lds
jl
(bad)
ins
mov
(bad)
div
sbb
mov
jg
(bad)
rcl
ins
cmc
xor
and
test
and
out
sbb
cmp
stos
loopne
arpl
push
dec
xchg
adc
add
adc
xor
jo
adc
dec
adc
ins
(bad)
in
cmc
jne
pop
lds
popf
fadd
cmps
fisubr
and
into
repz
je
dec
(bad)
call
jnp
call
pop
mov
jge
jl
jnp
mov
and
inc
bound
jge
cmps
(bad)
jg
xchg
xchg
fiadd
mov
movs
sbb
cld
and
lea
adc
std
int
fyl2xp1
mul
jnp
dec
loopne
xchg
fstp
lods
dec
jne
sub
push
mov
imul
in
push
xlat
lahf
in
jg
sar
fisubr
clc
sbb
and
inc
movs
movs
push
push
jb
(bad)
pusha
inc
mov
jmp
mov
push
inc
push
pop
push
(bad)
xor
cmp
adc
das
ins
mov
loopne
test
into
mov
in
fistp
push
into
jle
sub
push
rol
jg
into
mov
ds
out
or
std
cmp
push
shl
mov
push
push
ret
out
les
xchg
pop
lahf
cmp
inc
mov
aam
ds
mov
mov
es
adc
add
data16
lea
les
xchg
add
xchg
gs
xchg
push
hlt
inc
inc
data16
mov
sub
xchg
push
popa
cmc
sahf
dec
push
sub
mov
pop
or
fcmovne
pop
jne
xchg
mov
les
out
mov
sbb
movs
sub
sti
dec
sub
rcl
xchg
ret
fbld
push
in
das
loopne
push
jnp
and
dec
repz
(bad)
ret
pop
or
inc
ds
aas
lock
or
cmp
mov
xchg
cmp
inc
inc
mov
popa
in
mov
jns
aam
movs
stos
outs
and
mov
std
in
pop
pop
xchg
xor
adc
and
mov
xor
fistp
and
out
pushf
jge
xchg
cs
sub
cmp
mov
adc
fwait
iret
xchg
in
ja
mov
sbb
lock
sbb
xor
and
js
ins
jbe
pop
sar
adc
jmp
dec
add
test
test
ins
aam
jbe
ins
inc
stos
xor
out
js
ret
pop
or
call
loop
jo
(bad)
xchg
and
mov
out
mov
add
push
add
sbb
aam
aaa
inc
cmp
inc
loop
mov
cmc
enter
xor
push
push
and
inc
mov
stos
fyl2xp1
adc
xor
ja
pop
(bad)
ins
pop
adc
call
int3
imul
push
ss
push
(bad)
xor
and
cmp
pop
in
dec
cld
add
loopne
outs
dec
xchg
or
pop
xor
and
into
mov
in
leave
cwde
jo
push
mov
fwait
imul
cmps
push
sbb
nop
sbb
in
cmps
loopne
jmp
or
mov
inc
ror
enter
idiv
add
pop
sbb
inc
rcr
popa
and
push
movs
dec
repnz
int3
and
dec
sub
xchg
xlat
outs
movs
pop
and
xor
cmps
cmps
sbb
push
mov
fst
movs
std
jle
pop
mov
int
popa
fidivr
gs
retf
in
pop
ins
fadd
fwait
in
call
add
dec
(bad)
pop
xchg
cwde
sbb
pop
addr16
out
daa
xor
xchg
sbb
movs
(bad)
into
stos
jbe
ret
popf
mov
bound
test
sbb
or
adc
dec
adc
int3
push
and
test
pop
mov
aad
retf
xchg
addr16
jge
adc
mov
gs
xchg
(bad)
outs
arpl
jmp
(bad)
jmp
mov
sahf
xchg
and
xor
dec
clc
push
popf
test
add
xor
mov
dec
add
aam
rcl
jp
test
push
mov
inc
pop
or
enter
leave
pop
jne
xor
adc
hlt
(bad)
fiadd
mov
and
dec
dec
(bad)
test
sub
(bad)
cli
lods
addr16
les
shl
jne
jb
push
add
push
ja
retf
mov
sbb
xchg
sub
data16
adc
jmp
sub
ins
xchg
or
cmp
xor
scas
(bad)
mov
xchg
ficom
adc
push
jl
pop
mov
mov
and
in
cmc
jbe
pushf
xor
outs
cmps
in
call
cmp
pop
jmp
das
xor
adc
mov
cmp
add
stc
sbb
nop
cmp
(bad)
ins
fs
dec
(bad)
lock
mov
test
add
jbe
call
ds
cmp
pop
or
cmc
daa
gs
stos
outs
dec
movs
xor
mov
push
retf
add
repnz
stc
sar
fs
retf
pop
clc
jo
loopne
das
xchg
retf
dec
repz
jmp
stos
cli
retf
dec
push
data16
mov
mov
push
add
clc
leave
inc
xor
push
cld
sbb
adc
cmp
out
test
xchg
rcl
jmp
or
mov
dec
xchg
fist
or
mov
and
jbe
jbe
inc
sti
rcl
test
xchg
call
pusha
cmp
ret
ret
lock
xor
pushf
(bad)
addr16
or
das
jnp
stc
xor
jle
stos
iret
pop
(bad)
mov
hlt
sti
mov
push
push
cli
push
test
cld
xchg
mov
add
and
mov
mov
inc
(bad)
loopne
jecxz
sub
cmc
mov
(bad)
cmc
mov
test
jne
pop
xchg
(bad)
test
mov
cmc
ret
idiv
or
push
inc
aam
das
sbb
cmp
inc
jmp
sar
push
in
in
xchg
lock
sbb
stos
sub
add
adc
pushf
add
xor
mov
sub
in
dec
out
sti
(bad)
repnz
and
sbb
leave
icebp
and
mov
push
add
popa
dec
xchg
and
jmp
call
dec
push
mov
bound
or
test
xor
lea
call
ins
shl
cli
adc
xchg
(bad)
xchg
aas
inc
lds
out
fwait
sbb
sbb
mov
cwde
mov
stc
test
xchg
mov
jno
(bad)
sti
mov
and
imul
lods
adc
outs
mov
pop
dec
std
dec
or
dec
xor
sbb
push
loop
arpl
dec
test
mov
sbb
inc
jle
mov
aam
pop
adc
mov
add
push
or
outs
hlt
jo
popf
dec
ror
je
sar
(bad)
test
xor
out
xchg
sbb
call
add
retf
enter
test
jbe
pop
dec
and
fstp
les
loop
test
not
xlat
xor
test
movs
jae
adc
enter
or
ins
add
mov
cmps
or
stos
jb
mov
retf
jecxz
fsub
je
mov
pop
push
(bad)
je
call
mov
adc
pop
cdq
in
lds
xor
shl
lock
push
add
retf
pop
mov
(bad)
xchg
(bad)
lods
test
mov
mov
mov
dec
mov
pop
inc
inc
in
(bad)
data16
dec
iret
repnz
bound
hlt
jp
and
sbb
out
imul
mov
pop
pop
lahf
imul
or
xor
scas
sub
mov
ficom
xchg
lea
mov
cs
test
dec
sbb
repnz
lock
xor
push
add
xchg
sbb
xchg
inc
push
mov
nop
lods
push
or
dec
aaa
xor
mov
lahf
pop
push
mov
sahf
lea
push
xlat
xchg
retf
loop
iret
jl
das
das
clc
xchg
fild
mov
pushf
das
imul
iret
inc
mov
call
add
ins
popa
xchg
stos
cwde
idiv
sub
dec
(bad)
cmc
xchg
mov
mov
scas
xchg
stos
push
out
sbb
leave
push
inc
and
loopne
adc
in
push
dec
fwait
(bad)
xchg
dec
push
ror
or
fcomp
loopne
daa
sub
jo
es
xor
or
xor
mov
add
out
daa
sti
scas
mov
rcr
cwde
mov
pop
scas
xchg
add
sbb
sbb
call
or
pop
shl
mov
sub
mov
mov
xor
je
push
test
mov
pusha
inc
test
dec
sbb
push
je
ds
mov
dec
or
and
sbb
ins
xor
je
mov
jb
push
xchg
push
fs
icebp
addr16
jmp
aam
dec
xchg
pop
lock
(bad)
ds
rcl
cmc
scas
mov
jp
xchg
enter
ins
adc
and
imul
mov
aam
lahf
ins
nop
aaa
inc
jo
fwait
jo
xchg
fisttp
pop
push
dec
stos
popf
cmc
sbb
arpl
jle
in
inc
add
inc
movs
xchg
mov
sub
imul
cmps
and
fwait
icebp
mov
enter
pop
mov
xchg
inc
les
call
cmp
jbe
push
loopne
dec
or
in
jbe
cmps
sub
inc
mov
(bad)
pop
in
ja
push
dec
xor
test
xchg
adc
stos
mov
adc
add
dec
and
inc
sbb
movs
cmp
imul
sub
cmp
movs
and
and
mov
or
les
xor
test
neg
sbb
cmps
out
pusha
(bad)
retf
lds
adc
pop
call
popf
arpl
pop
push
scas
test
pushf
or
mov
cwde
lock
repnz
cmp
pop
out
adc
test
das
in
in
aas
mov
cmp
jne
shr
inc
cmp
and
(bad)
daa
dec
push
fisubr
scas
push
neg
jo
mov
push
mov
data16
fs
or
mov
xchg
imul
push
out
fiadd
ins
nop
test
push
inc
mov
or
stos
or
xor
call
xchg
fsubr
sbb
gs
jge
loope
xor
je
xchg
ret
cmp
sub
sub
cs
enter
test
mov
cmps
mov
dec
sub
dec
pavgb
adc
adc
jnp
outs
stos
adc
lea
push
xchg
lea
gs
add
dec
std
arpl
retf
out
adc
int3
cmps
push
dec
inc
movs
leave
sbb
pop
lahf
adc
das
lock
daa
or
sub
in
leave
(bad)
mov
dec
aam
stos
inc
ins
jnp
icebp
or
xor
clc
push
int3
leave
adc
adc
inc
add
pop
mov
loop
pop
sahf
fisubr
mov
add
idiv
sub
fadd
inc
or
les
dec
and
xor
fiadd
xchg
shl
js
push
xchg
shl
pop
inc
sub
mov
dec
sbb
ja
add
xchg
ror
inc
mov
rcr
fcom
sub
xor
or
or
cmp
out
movs
rol
outs
leave
test
sbb
shl
pop
sub
jp
mov
in
out
sbb
enter
daa
aas
adc
ror
cmp
or
sti
xor
jp
aam
test
or
out
inc
mov
in
xchg
stc
push
xor
bound
out
mov
mov
push
adc
leave
sbb
jae
icebp
jne
inc
lock
pop
dec
popa
jns
imul
mov
jp
ror
jg
jo
cmp
aaa
scas
push
add
pop
push
loop
mov
jae
pop
or
js
xchg
push
or
jg
test
ss
hlt
popa
mov
mov
inc
mov
and
std
ficomp
clc
nop
cld
inc
adc
inc
ror
popa
sub
fld
clc
out
cld
icebp
push
jae
add
leave
cs
push
pop
enter
xor
mov
cmps
cmp
pushf
add
lahf
test
call
xchg
loope
or
pop
idiv
in
or
or
loope
mov
jge
pop
jle
sbb
bsr
out
mov
cmc
adc
xor
sbb
pop
xchg
movs
ss
test
rcl
xchg
mov
jmp
inc
add
ret
ds
stos
scas
pop
pop
js
test
xor
add
jmp
add
jb
pop
jmp
push
add
lods
leave
aad
xor
mov
adc
mov
cwde
xor
mov
int
aam
push
xor
popf
cmp
enter
stos
dec
movs
ret
adc
(bad)
push
jg
das
cmp
fcmovnb
sar
add
aaa
test
jbe
aas
pop
mov
jl
adc
aaa
icebp
xchg
xor
xchg
mov
xchg
adc
adc
xor
cmp
xlat
mov
dec
ja
or
or
mov
adc
test
(bad)
int3
fldenv
push
and
jb
retf
test
packuswb
ins
xchg
xor
ret
and
enter
fwait
lods
sbb
cmc
ret
pop
push
js
pop
fst
dec
cli
pop
and
mov
mov
loop
aaa
jg
and
call
iret
loop
inc
in
jae
jp
inc
mov
(bad)
loopne
mov
push
jmp
test
adc
dec
(bad)
mov
shl
mov
push
lahf
pop
mov
daa
push
sub
and
dec
cmps
out
mov
xchg
jb
cmps
iret
cmp
fsubrp
push
mov
(bad)
and
jmp
xor
data16
sbb
retf
aas
call
mov
ret
push
inc
and
sbb
pop
call
stc
dec
xchg
retf
in
mov
dec
or
call
sbb
jb
cmp
cmp
jnp
inc
out
cmp
adc
mov
fwait
out
std
aas
mov
inc
adc
pop
dec
xchg
call
ss
fwait
dec
jp
clc
sti
cmc
xchg
adc
inc
push
int3
sbb
loope
cli
xchg
xchg
sar
mov
mov
leave
outs
mov
lds
fcom
ins
pop
sub
movs
sahf
xor
sti
je
aam
xor
mov
jmp
xchg
jns
and
jecxz
xchg
pop
mov
or
and
mov
sub
mov
loopne
in
adc
mov
or
push
mov
jecxz
daa
push
loope
sbb
xor
(bad)
cmp
sbb
leave
sti
dec
hlt
push
jg
scas
jmp
dec
shr
pop
lods
imul
or
ja
dec
xchg
sahf
cmp
dec
mov
movs
jmp
cmps
data16
mov
(bad)
mov
mov
aad
adc
add
mov
cmp
js
out
call
pop
call
adc
xchg
ret
test
js
sbb
mov
addr16
(bad)
push
jecxz
in
jge
push
pop
add
xchg
push
js
je
mov
xor
cmp
lahf
cmc
nop
les
or
sar
add
pop
xor
ins
pop
int3
and
lahf
jmp
iret
idiv
ret
cmc
push
stc
push
aad
mov
pop
mov
xor
mov
shl
jl
mov
ins
pop
out
push
xchg
lods
xchg
sub
lods
adc
mov
sbb
loope
jmp
cmps
(bad)
in
jle
mov
xor
and
scas
ror
push
lock
call
or
cmp
sbb
mov
add
inc
jae
add
lods
loopne
xchg
fild
lods
(bad)
xlat
in
lea
jl
push
inc
jb
ficomp
cmp
adc
dec
inc
xchg
hlt
xor
pushf
xchg
jg
and
pop
xchg
xchg
cs
add
(bad)
fst
jg
jne
pop
sahf
mov
call
pop
(bad)
arpl
aas
fnstsw
cmp
push
mov
cmc
xchg
and
sbb
pop
cs
loope
add
test
fimul
mov
push
push
fwait
cmp
les
cs
push
pop
cmp
ja
push
dec
push
jg
scas
inc
xchg
pop
hlt
push
adc
bound
pop
cmp
jns
sbb
pop
xor
mov
dec
inc
ss
jl
mov
and
jbe
fdivr
js
ret
or
xchg
push
inc
mov
add
sahf
fist
pop
aas
mov
xor
mov
push
jmp
mov
sbb
push
jg
stos
push
repz
xor
xchg
sar
in
aam
jl
mov
sbb
dec
ins
cmps
sti
pop
add
test
imul
mov
mov
cs
imul
jnp
lahf
jl
mov
pop
cmp
sbb
cli
aam
sbb
mov
push
es
in
lea
popf
push
mov
jle
cmps
int3
pop
fnstenv
pop
jmp
mov
dec
adc
(bad)
ror
jmp
repz
mov
add
pop
fwait
sahf
test
sti
sbb
outs
mov
fwait
cdq
and
stos
out
loopne
jno
add
jbe
(bad)
jmp
xor
out
or
xchg
adc
dec
lods
dec
inc
jae
test
in
mov
test
sbb
aad
push
(bad)
cmp
fsub
loop
out
mov
in
sub
mov
inc
ret
and
push
inc
pop
ficomp
dec
test
pop
adc
aaa
jo
loopne
test
dec
pop
ror
cmp
inc
pop
inc
or
addr16
outs
sbb
sub
das
nop
int3
jl
push
in
std
ds
repz
(bad)
adc
lods
xor
out
xchg
shr
pop
and
shl
mov
inc
pop
xlat
mov
mov
pop
mov
xchg
add
push
cmp
mov
pusha
jno
loop
std
out
jmp
cmp
das
sbb
call
idiv
dec
pop
test
jl
sar
pop
mov
aam
jo
jne
pop
test
cmp
pop
in
pop
fdivp
adc
cmc
sub
sub
cmp
mov
dec
rol
dec
jmp
jge
lods
sub
sbb
enter
retf
shr
movs
(bad)
cwde
das
inc
inc
mov
xor
outs
bnd
lahf
ror
es
stos
ja
inc
test
mov
int
or
int3
adc
jmp
jne
sbb
pop
int
sub
lahf
ins
jnp
jne
std
sbb
xor
js
lods
xchg
rol
fild
jns
xchg
cld
enter
inc
neg
into
push
test
mov
jb
repz
ret
push
nop
inc
shl
sti
retf
aam
mov
cdq
cld
jne
xlat
mov
aas
das
xchg
loope
pushf
mov
fld
repz
stos
faddp
sub
aam
cmp
fdivr
mov
iret
fldenv
fdivr
cmps
jle
scas
pop
push
test
sbb
std
es
mov
add
mov
push
addr16
(bad)
mov
cs
out
ficom
repnz
and
iret
iret
pop
bswap
jns
enter
mov
rcl
test
inc
cmps
clc
ss
add
fiadd
cmp
adc
in
pushf
(bad)
mov
arpl
jp
out
mov
add
fidivr
out
sub
fadd
in
xchg
pop
mov
enter
xchg
push
mov
xchg
and
cld
das
xor
pop
retf
(bad)
pop
push
mov
aas
pop
test
add
test
adc
rol
imul
popa
or
xlat
sbb
cdq
jbe
jno
adc
inc
dec
test
jl
push
in
in
les
add
jnp
jns
sub
pop
mov
repz
fld
dec
dec
stos
fadd
xor
mov
jmp
sti
bound
pop
aas
and
inc
mov
sbb
fistp
repz
nop
nop
push
xchg
mov
out
das
jae
rol
rcr
sub
fwait
mov
sbb
mov
mov
cli
cmps
(bad)
out
fwait
lea
stos
mov
outs
sbb
inc
cli
pushf
mov
add
mov
xchg
xor
jno
cmp
jge
inc
pop
retf
out
sbb
add
jns
popa
push
cmp
daa
or
jae
test
adc
(bad)
cdq
pop
arpl
inc
inc
sub
mov
xchg
mov
and
sbb
retf
add
or
aam
jne
ins
int
sbb
dec
pushf
xchg
xchg
xor
(bad)
iret
adc
xchg
xchg
mov
inc
xchg
jmp
into
cmp
add
mov
(bad)
mov
push
sbb
xor
mov
movs
ins
(bad)
xor
jmp
mov
hlt
(bad)
adc
xor
or
out
add
xchg
push
and
mov
aad
(bad)
ds
outs
xor
adc
inc
out
aas
and
(bad)
or
pop
inc
sub
sub
mov
mov
sbb
xor
test
mov
adc
add
(bad)
add
sbb
cmp
dec
int
jno
or
lock
popf
jmp
push
inc
jb
inc
cmps
adc
pop
shl
fisttp
sub
inc
push
inc
mov
fst
rdmsr
aam
int
sub
fmul
mov
jle
les
(bad)
sbb
jge
xor
fcom
fstp
push
mov
and
aas
xchg
mov
sti
gs
pushf
fld
mov
push
or
scas
(bad)
enter
and
mov
dec
enter
jecxz
mov
fwait
inc
dec
fcomp
cld
cmps
icebp
in
(bad)
jbe
mov
jle
and
jg
add
add
es
(bad)
dec
xor
popf
add
mov
inc
fs
lods
and
add
(bad)
repnz
mov
xchg
shr
mov
popf
or
or
jmp
push
sbb
pop
mov
pop
dec
pop
mov
jae
call
jnp
call
pop
mov
add
lea
dec
rcl
or
sbb
jbe
cmp
jp
jmp
test
(bad)
lock
mov
and
dec
xor
jo
or
sbb
add
add
aad
mov
and
and
xchg
lock
sbb
fcomp
sub
or
dec
add
test
cmps
jp
std
ins
push
cwde
push
or
push
adc
popa
into
scas
cmp
movs
xor
push
xlat
movs
push
retf
mov
add
outs
add
daa
xchg
sub
(bad)
jecxz
or
les
rcr
mov
add
jl
out
xchg
add
dec
inc
lods
aas
fdiv
jo
mov
out
sub
mov
jno
(bad)
pop
pop
sub
adc
daa
fcomp
push
loopne
mov
pop
lock
js
and
repnz
(bad)
int
lds
xchg
ins
icebp
ds
jbe
dec
fnstenv
in
xor
mov
cmp
sahf
cmp
enter
xor
hlt
push
imul
outs
aad
cmp
inc
icebp
ins
xor
(bad)
div
in
retf
leave
inc
jae
lea
ja
dec
ds
hlt
and
lods
enter
popa
or
xchg
or
sub
in
pusha
jl
mov
push
push
jg
dec
mov
pop
jae
cmp
lods
inc
xor
xor
lahf
lods
add
inc
pop
dec
int
adc
imul
cmp
xchg
bound
push
push
fwait
sbb
dec
and
push
ror
pop
ja
lahf
out
and
sbb
mov
mov
mov
inc
cmc
sti
cmps
inc
pusha
jnp
movs
jne
(bad)
(bad)
in
jae
push
test
aas
popa
mov
cmc
adc
jns
sbb
call
gs
jl
push
in
and
imul
add
fcomp
jmp
cdq
enter
push
bound
push
retf
adc
sar
imul
jns
jnp
js
dec
xlat
sub
mov
jnp
es
or
lahf
jno
mov
clc
repz
call
push
pop
nop
loop
dec
pop
iret
sub
inc
(bad)
sti
fdiv
call
add
xchg
clc
fcom
mov
mov
dec
ret
retf
jle
sar
call
outs
push
dec
(bad)
jmp
in
adc
push
movs
cmp
repnz
(bad)
fdivr
mov
call
xchg
js
xor
bound
adc
mov
lods
adc
clc
das
sub
icebp
int3
pop
repnz
sti
sbb
sub
cmp
mov
shl
cmp
sub
imul
ret
nop
and
js
pop
xor
popa
pop
adc
fwait
jecxz
fisub
xchg
mov
mov
es
fimul
dec
je
jb
push
pushf
and
push
sub
mov
mov
add
xchg
mov
dec
sbb
mov
cwde
lock
or
loopne
mov
imul
dec
mov
add
xchg
mov
mov
or
jge
leave
test
pop
push
cli
inc
or
jge
add
mov
popa
out
dec
push
std
ins
and
and
js
cmp
pop
std
push
jb
scas
push
or
sub
movs
dec
pop
dec
cwde
(bad)
xlat
inc
loopne
fdivr
jb
lea
dec
inc
leave
aaa
jb
and
pop
mov
cmp
cmps
sbb
xchg
mov
call
jbe
mov
scas
jnp
dec
neg
cmp
cwde
(bad)
call
pop
add
jmp
adc
stc
sbb
xchg
pop
mov
fcom
enter
inc
adc
jo
clc
aaa
mov
popf
jbe
dec
push
cld
mov
lods
popa
rcr
xlat
inc
pop
sti
mov
into
imul
test
lds
ins
xchg
and
call
test
xchg
mov
sbb
lods
xor
dec
mov
push
aam
cwde
jge
out
and
xchg
loopne
sub
mov
mov
push
lahf
add
xchg
push
xchg
lahf
sub
pushf
cmp
shr
jo
cmps
fxch
pop
inc
and
cmp
neg
repnz
es
pushf
pop
enter
and
sbb
scas
outs
lock
and
mov
call
adc
dec
into
retf
cmp
inc
dec
sub
out
or
adc
inc
pop
gs
cmp
push
clc
into
cmp
(bad)
jne
gs
out
dec
inc
out
in
leave
push
push
cld
(bad)
ds
out
cmps
pop
fsubrp
adc
sub
fdiv
sbb
bound
mov
dec
popf
stos
add
clc
mov
push
aad
pop
outs
cdq
push
(bad)
pop
das
(bad)
jmp
jge
sub
mov
pop
jb
jge
mov
out
test
jnp
mov
jne
jmp
fld
cld
dec
outs
mov
inc
scas
test
pop
enter
aam
enter
(bad)
sbb
or
inc
sbb
xor
outs
mov
sbb
iret
and
xchg
or
cwde
ror
ficom
enter
or
jl
out
shl
sub
pop
mov
call
lods
in
mov
rcr
jne
stos
stos
call
loope
bound
push
ja
jmp
scas
stos
fisubr
cdq
shl
adc
daa
adc
out
int
or
push
hlt
jecxz
clc
mov
cmps
sbb
cmp
mov
mov
out
(bad)
sbb
mov
pop
xor
nop
jne
add
pop
pop
add
enter
addr16
dec
daa
in
mov
dec
pop
jmp
xchg
daa
mov
gs
xchg
in
xchg
or
cli
and
addr16
(bad)
ffree
bound
and
repz
fnsave
jp
xchg
dec
cmp
into
jbe
hlt
scas
dec
cmp
jp
popf
jns
std
rcr
(bad)
fld
cli
and
in
cmp
fadd
xor
test
jbe
xchg
imul
scas
mov
(bad)
mov
and
outs
loope
jle
mov
pushf
mov
fsub
es
test
ins
xchg
xchg
mov
imul
test
or
add
xchg
mov
and
cs
dec
push
in
nop
int3
xor
fiadd
in
loop
and
mov
cdq
add
lock
neg
sbb
jmp
xchg
mov
xchg
cli
mov
fdiv
(bad)
sti
push
cmp
adc
ins
std
jle
or
int3
arpl
sub
mov
pop
push
and
aam
in
mov
dec
mov
xor
retf
popa
push
js
into
int3
jmp
addr16
and
or
scas
sbb
test
in
push
mov
inc
arpl
cmp
inc
ins
(bad)
mov
call
pop
sub
dec
and
pop
cli
xchg
add
sbb
mov
in
xlat
inc
iret
cmp
mov
pushf
mov
stos
ja
out
retf
cmp
mov
xchg
fadd
inc
(bad)
jl
and
lods
arpl
lea
ins
jo
push
int3
repz
loope
add
std
(bad)
inc
add
add
popf
pusha
cmp
sahf
(bad)
ins
dec
sub
pop
nop
jno
mov
fiadd
mov
ja
push
pop
adc
sbb
mov
enter
popf
imul
cmps
inc
call
and
xchg
xor
xor
neg
dec
sub
scas
dec
fild
(bad)
faddp
sbb
repz
cmp
add
(bad)
iret
mov
or
sub
add
scas
stos
in
fwait
and
repnz
mov
popa
out
lock
dec
mov
mov
div
lahf
xlat
aad
or
or
lea
cld
mov
xchg
js
shl
and
lahf
cmp
pusha
in
scas
retf
cmp
mov
scas
adc
mov
push
clc
cmp
test
call
jae
xor
lods
mov
pushf
dec
in
push
ja
fst
jle
vpsadbw
mov
xchg
push
jle
outs
shr
or
es
ins
ja
adc
loope
lds
std
mov
dec
fisttp
dec
inc
mov
sahf
in
loopne
cmps
sbb
xchg
sub
jmp
arpl
mov
repz
or
dec
mov
clc
shl
mov
mov
outs
push
mov
cwde
add
pop
push
adc
(bad)
or
mov
pop
pop
shl
dec
arpl
pop
xor
jnp
daa
pop
cli
jmp
jmp
or
pop
lods
add
aam
mov
push
(bad)
fistp
push
fst
test
and
cmp
pop
pop
inc
fcmovnb
movlps
sub
sub
scas
add
sub
jmp
mov
add
xchg
lahf
movs
gs
xor
dec
sub
push
div
and
sub
xor
jmp
adc
and
cmp
lea
or
inc
inc
pop
rcr
cmp
pop
xchg
ja
fdivr
imul
or
nop
call
inc
ltr
lahf
xor
mov
mov
pop
(bad)
out
outs
mov
or
rcr
mov
(bad)
jae
sbb
and
mov
push
adc
shl
ret
ins
mov
std
push
push
push
lahf
jb
dec
pop
cld
dec
repz
xchg
shr
xchg
mov
ficomp
lods
cwde
mov
pop
cmp
adc
pop
push
arpl
setbe
bound
cmc
lods
ror
pop
mov
cdq
ror
sbb
or
adc
outs
jp
inc
mov
jne
adc
push
cmp
mov
adc
push
sub
push
popf
(bad)
daa
sbb
pushf
cmps
jnp
mov
lahf
lods
dec
js
repnz
fld
add
fcomp
xor
and
mov
add
in
mov
(bad)
inc
and
daa
out
ja
ret
and
ror
retf
retf
cmps
test
and
jp
pushf
add
out
pop
cmp
push
repz
mov
dec
sti
mov
pusha
pushf
retf
outs
xor
and
pop
xchg
addr16
loop
call
dec
ret
mov
test
das
xchg
jl
(bad)
jo
and
cs
mov
repnz
dec
add
dec
fcomp
cs
or
mov
and
dec
fsub
into
and
adc
loop
dec
adc
mov
xor
push
pop
addr16
ins
into
mov
cmp
fs
add
mov
mov
int
(bad)
mov
in
pop
inc
push
lock
mov
and
jecxz
mov
int
or
sbb
call
or
inc
stos
shl
pop
dec
(bad)
sti
ror
rcr
sub
aas
jp
icebp
bound
ins
or
or
mov
sar
loop
fild
sub
jne
mov
adc
repz
push
aaa
rep
jno
bound
or
js
lds
and
mov
ins
dec
push
mov
popf
mov
ret
mov
inc
mov
fsubr
(bad)
inc
popa
imul
sub
cmps
ja
xchg
jle
mov
add
call
fcomp
stc
ins
xor
ins
dec
in
xor
sbb
addr16
fsubr
and
pop
outs
mov
xchg
pop
outs
loope
adc
das
outs
rcr
jle
push
rcr
jecxz
in
cmp
ins
call
popa
loop
cs
mov
add
lds
lods
sbb
pop
jecxz
mov
or
retf
outs
xchg
dec
mov
jo
push
stc
mov
retf
test
jl
xor
and
int
add
jo
icebp
mov
sub
push
push
add
(bad)
cld
aaa
dec
aaa
ja
into
xchg
and
pop
sti
popa
adc
test
shr
ins
mov
adc
nop
ret
cmp
mov
push
adc
idiv
xor
je
bnd
and
lock
sub
call
out
cmp
in
loope
lods
push
pop
push
jl
add
fiadd
dec
jbe
out
mov
or
sub
repz
or
fstp
aas
push
fwait
mov
dec
cmps
inc
inc
aam
jge
or
cwde
lods
stc
sete
arpl
(bad)
pop
das
jno
adc
popf
dec
cmp
push
outs
cld
mov
add
ja
int
mov
int3
dec
xor
ficom
out
outs
aas
ss
ja
inc
add
dec
push
mov
inc
cs
ds
push
dec
jo
mov
fwait
stos
inc
push
fiadd
inc
ins
cmps
cwde
fadd
sub
sbb
movs
push
and
and
jns
push
mov
leave
cmc
pop
lahf
lods
mov
dec
adc
imul
in
jl
add
cli
outs
push
repnz
pop
mov
out
dec
das
push
ficomp
cmp
inc
cmp
mov
rol
jecxz
jl
mov
xchg
loope
mov
sub
sub
mov
xor
scas
jo
loop
ins
les
dec
neg
nop
fcom
adc
jge
(bad)
std
sub
sbb
(bad)
or
cmp
jle
jns
cmp
mov
or
or
and
inc
push
mov
mov
popf
cmp
movs
ins
jmp
mov
sbb
or
out
pop
add
pusha
xchg
inc
loopne
push
in
add
adc
bound
fs
and
aas
xchg
xchg
or
xchg
adc
mov
and
inc
mov
icebp
xchg
cdq
out
or
dec
fnsave
jge
out
dec
jb
sub
dec
jle
repz
add
shl
(bad)
dec
fxch
fisttp
or
imul
bound
or
data16
jge
mov
fdivr
int3
dec
(bad)
popa
aam
fimul
cmp
cwde
dec
pop
inc
or
std
xor
jmp
gs
ja
in
mov
pop
sbb
pop
mov
xchg
lods
mov
lods
out
lds
mov
daa
jp
int
mov
and
and
sub
int
add
lahf
aas
mov
and
cmp
js
pop
mov
mov
mov
(bad)
jmp
and
push
jo
(bad)
call
sub
xor
fmulp
sbb
jo
das
add
mov
add
movs
dec
(bad)
jmp
jns
test
aad
or
popf
adc
imul
mov
sub
shl
pusha
popa
ins
cmp
movs
xchg
jl
out
ins
in
inc
push
sbb
add
lahf
and
imul
add
in
jno
movs
jg
sub
mov
cmovae
jp
inc
lds
mov
imul
dec
outs
mov
out
(bad)
mov
xchg
cmp
jbe
sub
jnp
and
and
add
movs
push
in
mov
mov
xchg
enter
ins
mov
pop
pop
xchg
int
aaa
shl
shl
mov
xchg
xchg
(bad)
fwait
nop
push
call
fnstenv
outs
xor
fsub
sbb
lods
or
mov
jnp
inc
addr16
ins
cmp
add
adc
out
xchg
sub
lea
jae
xchg
mov
int
xor
dec
out
pushf
nop
jns
pop
push
mov
dec
xchg
push
lock
inc
sahf
mov
mov
popa
popf
sbb
xchg
mov
dec
std
in
and
mov
jno
adc
cmp
out
gs
out
data16
add
fs
shl
in
or
sub
mov
mov
out
(bad)
es
lods
pop
and
cmp
das
sbb
dec
dec
int3
sahf
(bad)
dec
cmp
inc
ret
outs
inc
fldcw
dec
mov
pop
ficomp
dec
jno
adc
out
xchg
dec
or
in
push
pop
aaa
arpl
mov
lock
in
mov
aad
popf
mov
lahf
lahf
xchg
mov
inc
aaa
xchg
jl
popa
jg
in
xchg
add
in
clc
push
jo
enter
neg
retf
jns
popf
repnz
cmps
or
outs
push
popa
adc
cld
in
leave
std
mov
test
outs
add
sahf
pushf
xor
sti
dec
fisttp
lahf
adc
sub
push
(bad)
fiadd
addr16
xchg
and
mov
push
fst
aas
push
inc
int
pop
mov
push
lds
std
xchg
sbb
scas
mov
leave
cli
cmp
in
sub
neg
shl
mov
sub
cmp
dec
inc
dec
clc
push
ds
xor
test
adc
sbb
loopne
in
and
dec
call
in
jns
jo
fimul
mov
div
into
mov
sbb
inc
clc
test
mov
dec
fnstenv
push
repnz
add
pusha
(bad)
out
mov
sub
jmp
jne
pop
aaa
lods
dec
faddp
mov
jmp
mov
aaa
arpl
push
push
sbb
repnz
shr
in
fidivr
fnstcw
cmp
ds
fldcw
sbb
add
sub
add
add
adc
cmp
xchg
addr16
hlt
icebp
fs
dec
je
fstcw
sub
clc
pushf
(bad)
or
sbb
or
or
fst
and
mov
cmc
mov
mov
dec
mov
inc
out
or
xchg
(bad)
dec
enter
mov
test
loopne
cmp
lahf
jae
(bad)
ins
mov
xchg
jae
stos
je
cwde
pop
mov
xchg
repnz
movs
mov
imul
int
jmp
scas
xchg
ins
js
mov
mov
push
cmp
xor
stos
and
jbe
sbb
rol
xchg
leave
push
xchg
out
xchg
xchg
lods
inc
sti
dec
imul
scas
and
(bad)
adc
(bad)
fisub
sahf
push
aas
enter
fistp
(bad)
dec
cmp
and
mov
inc
and
sbb
cs
push
adc
jge
push
inc
add
push
and
mov
mov
idiv
xchg
pop
and
jne
jp
aam
xchg
lock
loop
sub
add
shr
adc
mov
push
pop
js
add
je
jp
dec
or
in
jo
jbe
repz
fdiv
call
push
ss
repz
sub
addr16
push
inc
jle
addr16
xchg
sub
and
cmp
mov
fcmovnb
push
pop
sbb
sbb
push
or
call
adc
imul
jns
sub
jmp
and
gs
pop
pop
xchg
les
fwait
nop
cmp
mov
out
aaa
adc
out
test
es
push
mov
sbb
and
xor
xor
pop
jg
dec
data16
inc
dec
fsubr
ret
inc
xchg
mov
mov
pop
iret
cmc
aaa
xchg
sub
add
jecxz
js
sub
sti
push
ss
xchg
(bad)
sbb
test
pop
pop
aas
cmp
(bad)
xchg
mov
pop
and
mov
push
lock
outs
mov
aas
add
xchg
imul
repnz
jno
pop
rcl
ins
mov
in
mov
les
cmps
xchg
xor
push
std
cmps
lahf
mov
aad
mov
icebp
out
loop
push
fldenv
test
mov
add
cmp
or
dec
call
sub
(bad)
cdq
sbb
dec
mov
fdiv
les
add
and
shl
or
stos
pusha
mov
into
adc
outs
gs
in
inc
sub
dec
mov
lods
xor
xchg
push
push
jle
shl
xchg
popf
xlat
lahf
cmps
mov
fdivr
xchg
inc
add
fisub
(bad)
fnstcw
leave
mov
sub
out
sti
popf
xor
cmp
dec
mov
movs
dec
daa
out
or
loopne
inc
add
xchg
mov
std
(bad)
imul
inc
mov
xor
int3
cwde
movs
mov
mov
sbb
(bad)
gs
loop
dec
pop
inc
mov
push
add
inc
inc
std
cmp
test
sub
jno
scas
mov
and
icebp
mov
test
jmp
sub
xchg
out
dec
pop
push
push
(bad)
mov
(bad)
in
jnp
and
fwait
xchg
xchg
jge
ret
mov
pop
jbe
stos
xchg
xchg
mov
lds
fcomi
sahf
scas
and
sbb
inc
out
xchg
pop
retf
and
shr
cmps
idiv
int3
icebp
push
mov
push
cmp
lock
std
and
cmp
mov
push
xor
ja
cmps
push
fwait
mov
mov
pusha
lock
push
mul
or
sbb
push
add
dec
retf
fstp
popa
lods
gs
imul
dec
arpl
fsub
mov
imul
aas
inc
hlt
mov
inc
pop
cmp
push
nop
(bad)
xor
jnp
fs
cmp
arpl
cmp
mov
push
leave
jg
or
mov
ret
fimul
pop
(bad)
jno
mov
(bad)
and
pop
(bad)
loopne
sbb
mov
mov
sbb
fcmovnbe
stc
mov
pop
sub
adc
aad
(bad)
idiv
in
mov
daa
push
test
xor
xchg
inc
mov
sub
dec
xor
or
hlt
fstp
mov
or
or
dec
mov
jge
sbb
dec
sbb
stos
inc
dec
dec
adc
xchg
push
mov
jp
in
cmps
adc
imul
jbe
ss
inc
movs
xchg
cmp
out
jl
loop
mov
xchg
out
mov
int
sbb
mov
push
adc
popa
or
pop
pusha
shr
ins
outs
mov
(bad)
int
mov
xor
es
xchg
xor
dec
sti
or
fld
mov
scas
popa
mov
ss
jne
dec
(bad)
mov
loope
aam
movs
cmp
inc
cs
in
or
sub
mov
sub
push
fadd
cmp
out
push
repz
movs
cli
cs
lods
push
inc
retf
loopne
ds
xor
lds
xor
int3
adc
push
stc
sub
cmp
cmps
sub
mov
or
nop
mov
and
repnz
lds
popf
lds
and
mov
and
(bad)
rcr
inc
sub
ss
adc
mov
cld
aam
fnsave
test
or
jle
das
sbb
add
outs
push
popa
jae
(bad)
and
in
inc
xchg
in
jl
ror
push
dec
inc
sahf
fbld
out
push
xchg
mov
mov
imul
mov
cdq
cmps
(bad)
pop
in
mov
mov
ret
sbb
addr16
inc
sbb
inc
adc
ins
scas
sub
jno
dec
xchg
jbe
movs
add
pop
loope
in
neg
mov
sub
xor
(bad)
and
push
fstp
xor
idiv
lea
arpl
call
jl
mov
or
ja
fwait
cmp
or
pusha
enter
lock
mov
xor
pushf
or
or
jmp
ins
popf
dec
pop
vaddps
cmp
push
es
ins
or
or
or
xor
jmp
pushf
data16
push
in
jbe
lea
shr
stos
ret
inc
mov
mov
and
call
pop
xor
dec
div
cmp
je
stos
xchg
movs
sub
sub
jecxz
mov
in
pcmpgtb
inc
addr16
push
sbb
xchg
in
outs
fst
adc
ror
sbb
jo
cmp
int3
jp
xor
mov
cld
cmc
cmp
popa
add
sub
test
aas
xor
xchg
ror
cmps
jnp
push
jecxz
xchg
cs
adc
movs
into
mov
test
xchg
retf
(bad)
pop
(bad)
stos
xlat
pop
arpl
mov
mov
adc
lahf
cld
jl
and
in
or
dec
mov
out
addr16
mov
push
push
dec
outs
and
cmp
jg
or
push
in
or
cmp
mov
add
jg
out
(bad)
mov
jecxz
shl
aas
xlat
repnz
pop
pop
loopne
in
xchg
fdivr
bound
mov
sub
int
movs
and
adc
call
ret
xor
retf
cs
push
jno
inc
pop
ds
fwait
push
push
cwde
or
ss
sbb
sbb
leave
icebp
cs
sbb
jns
push
arpl
addr16
xchg
and
sub
out
adc
int
cli
dec
sbb
cwde
rcr
cmp
test
fsub
sbb
arpl
mov
add
dec
or
lea
shl
push
add
lods
pop
pop
ins
push
or
pop
and
dec
mov
cli
sub
mov
sub
xor
pop
(bad)
jmp
call
sti
fsubr
or
outs
or
ret
cmp
aad
jmp
ja
mov
cmp
movs
xchg
repz
and
pmaxub
aas
mov
mov
ins
adc
push
sbb
mov
jl
mov
repz
and
enter
mov
enter
lods
or
sub
mov
mov
(bad)
adc
xchg
mov
mov
dec
push
scas
je
dec
out
push
xchg
sbb
repz
or
test
dec
sbb
push
in
or
mov
lods
dec
ins
cmp
in
ret
or
fcomip
out
jmp
inc
or
push
xlat
jmp
pop
lods
sbb
jno
push
ret
mov
test
(bad)
mov
scas
pusha
(bad)
mov
lahf
jbe
out
sbb
rcl
lock
loope
fdivr
popa
mov
jg
repnz
es
adc
(bad)
shl
and
rcr
mov
lock
sub
pop
loope
push
clc
or
shl
jecxz
inc
ins
out
sub
(bad)
rcl
ret
(bad)
inc
xchg
fisttp
repnz
fwait
jge
sahf
in
hlt
outs
rol
pushw
outs
mov
in
mov
adc
jae
pop
or
cld
sbb
mov
cli
sub
stos
out
pop
adc
sub
dec
adc
cmps
sub
ret
lds
fistp
mov
jbe
arpl
dec
ja
mov
mov
scas
rol
or
xor
jg
mov
mov
xor
xrelease
pop
fisubr
sahf
adc
jns
mov
or
xlat
pop
cwde
gs
sbb
ins
and
imul
push
scas
iret
dec
add
push
add
mov
jecxz
addr16
add
cmp
dec
mov
cmp
and
push
xor
xchg
xchg
ins
popa
aad
mov
xchg
cli
test
into
faddp
pop
pop
jmp
pushf
aad
jno
add
outs
adc
les
add
sbb
lahf
and
imul
ins
pushf
imul
popa
cld
lods
shl
jecxz
test
pop
add
inc
into
xor
mov
aam
push
jecxz
leave
out
push
jns
pushf
inc
mov
mov
cmp
loopne
pop
adc
cli
dec
retf
mov
fisub
iret
mov
dec
cmp
dec
pop
mov
inc
je
add
cli
cmps
ret
std
sub
iret
or
lahf
add
adc
add
push
jmp
add
not
jecxz
and
aas
shr
(bad)
cmp
lea
mov
xor
mov
das
aas
adc
imul
(bad)
les
pop
mov
(bad)
fsubr
loope
cmps
retf
mov
cmp
cmp
out
imul
and
rcr
xor
jmp
pop
sub
jmp
pushf
(bad)
mov
fisttp
cmps
cli
and
push
push
jl
cdq
stos
je
jb
jge
daa
test
pop
cdq
push
ja
adc
or
jge
(bad)
out
cmp
enter
jne
gs
dec
(bad)
or
push
int3
cmc
data16
lock
(bad)
sar
jmp
loopne
sahf
fmul
loop
adc
nop
ss
fldenv
xchg
ins
ins
mov
jns
dec
mov
xor
ins
dec
aam
sbb
je
push
mov
and
sbb
loope
mov
idiv
cmp
movs
mov
jb
into
xchg
dec
cmps
jmp
(bad)
xchg
test
pop
mov
mov
jl
jmp
xchg
in
gs
pop
ds
dec
sahf
push
mov
push
fcmovbe
mov
lods
push
mov
xor
leave
inc
aam
ror
enter
xchg
outs
mov
out
pop
call
fcom
jp
xlat
movs
popa
jecxz
xchg
and
movs
out
ins
cdq
cmp
and
xor
jnp
xor
or
push
int
(bad)
sbb
dec
arpl
xchg
neg
mov
bound
mov
shl
cmp
jne
ret
jns
push
sub
cli
hlt
xor
jecxz
inc
out
jecxz
out
clc
(bad)
jae
sbb
jo
loop
cmc
lea
adc
mov
mov
es
cdq
and
(bad)
or
scas
xor
mov
out
int
inc
lods
fstp
je
jle
imul
dec
call
dec
clc
fnstsw
jmp
call
mov
les
cmp
xchg
and
dec
cmp
or
add
push
jno
fld
out
inc
lahf
cmp
popf
syscall
ds
mov
ins
push
scas
(bad)
adc
jecxz
jne
mov
sub
mov
xchg
sbb
cmp
adc
ret
xor
sbb
fsubr
inc
fs
pop
inc
sub
push
int
jecxz
jecxz
nop
add
or
cmp
das
fmulp
jne
lods
and
in
push
sbb
inc
pop
(bad)
mov
call
xchg
jmp
jecxz
mov
(bad)
loop
xor
xchg
sbb
cmps
jl
call
or
adc
popf
cdq
pop
rcl
ror
xchg
scas
cld
sub
inc
lds
stos
cmp
xchg
sub
mov
inc
popa
xor
cmps
retf
mov
inc
mov
or
and
idiv
aam
out
in
imul
xchg
jge
call
pand
pusha
push
pusha
(bad)
fimul
fwait
(bad)
movs
jecxz
cmp
push
jp
pop
cmp
pop
push
ror
xor
in
into
stc
scas
lods
jl
sub
fld
push
cli
loopne
test
addr16
mov
mov
and
jmp
inc
jle
mov
repnz
mov
jge
or
or
pop
mov
lds
loopne
and
fs
(bad)
repz
sbb
pop
lea
mov
push
repnz
xchg
ret
and
outs
outs
(bad)
rcr
enter
sub
imul
sub
loop
int3
jae
inc
jl
test
jne
inc
xlat
bound
and
pop
loope
and
repnz
outs
in
xrelease
fisubr
pop
or
xor
into
outs
adc
xchg
fcomp
std
retf
push
in
ja
jmp
adc
push
outs
pop
xor
pop
pop
int3
out
bound
outs
pop
push
or
stc
mov
mov
jl
xchg
bound
pop
jmp
dec
mov
sub
pop
inc
push
je
add
xor
jl
xchg
popw
daa
ret
je
popf
or
inc
fisub
jmp
xor
pop
(bad)
add
and
rcr
mov
stos
xchg
xor
cmp
inc
cmps
mov
gs
mov
ins
repnz
or
test
push
arpl
fisubr
fist
(bad)
cmps
fiadd
mov
and
sbb
test
push
xor
sbb
sbb
xor
pop
lahf
nop
sub
(bad)
or
mov
mov
mov
popa
imul
dec
add
adc
aad
outs
addr16
fcom
or
cmp
nop
sub
in
test
inc
xor
fcomi
sbb
mov
clc
mov
xchg
inc
push
xor
pop
bound
xacquire
xor
jl
push
xchg
xor
in
sub
int3
xor
pop
inc
pop
loope
pop
fwait
jecxz
and
fxch
or
mov
mov
cmp
loope
(bad)
aad
aad
mov
jns
aad
cmp
outs
lahf
pop
cmps
loope
xchg
dec
pop
lahf
ja
add
add
cmp
xchg
mov
mov
mov
cld
mov
(bad)
xlat
push
in
jae
pop
imul
and
fadd
lods
mov
cmc
test
clts
xchg
sahf
jp
leave
jnp
imul
mov
adc
popf
adc
inc
jo
stos
cmp
ret
cmps
call
cmp
and
(bad)
(bad)
pop
or
xor
jp
push
out
mov
mov
fcmovnb
push
shl
pop
xor
rol
movs
inc
out
fsubr
dec
mov
mov
jmp
fs
push
bnd
std
push
xchg
fwait
or
(bad)
sbb
dec
add
fdiv
(bad)
in
(bad)
out
jne
jno
out
or
cmps
cs
mov
push
inc
mov
(bad)
pop
jo
repnz
xchg
cwde
rcr
push
mov
lock
adc
dec
jmp
push
outs
test
pop
in
push
ins
retf
fwait
icebp
xor
scas
sbb
and
mov
adc
dec
or
fs
aad
xchg
and
jmp
dec
ds
outs
and
lds
(bad)
push
addr16
dec
mov
les
lods
jb
repz
pop
je
icebp
stc
lods
loop
loop
cmp
mov
fist
icebp
inc
int
icebp
add
movs
pop
cmp
dec
jbe
pusha
xor
leave
repz
jge
and
pop
pushf
retf
jae
xchg
fmul
sbb
mov
push
jecxz
mov
and
cmp
jle
jnp
test
xor
mov
rcr
mov
fstp
aam
daa
push
es
popa
mov
int
lock
outs
cmp
popf
mov
pop
fadd
scas
cmp
icebp
inc
and
(bad)
jp
ret
sar
clc
cmp
mov
xor
xor
out
in
xor
xor
jae
fst
shr
lahf
sbb
(bad)
or
sti
xchg
les
push
fcomp
cmp
fimul
repz
dec
xor
xor
mov
jo
mov
sub
iret
sbb
dec
xchg
or
push
dec
lods
sub
movs
out
rcl
mov
in
sti
icebp
push
sub
pop
fisttp
mov
repz
daa
mov
js
pop
adc
jne
popa
pushf
aaa
and
jmp
scas
fs
xchg
and
imul
pop
js
jne
lods
dec
in
ins
or
rol
ja
out
in
add
pop
add
mov
(bad)
sbb
sbb
dec
ins
xor
lods
jo
xchg
shl
jmp
lds
outs
daa
aaa
arpl
jg
inc
xchg
or
push
aas
popf
fidiv
in
aad
mov
div
add
stc
leave
jle
popf
les
mov
xor
or
add
movs
repnz
pop
adc
dec
mov
les
push
aas
arpl
adc
shl
sbb
(bad)
sbb
cmp
stos
cmps
fist
inc
fidiv
movs
lods
repnz
xchg
push
push
dec
aam
push
jmp
repnz
mov
scas
add
int
call
push
dec
sub
jge
sbb
outs
pushf
iret
pusha
rcl
xchg
push
arpl
ja
loope
test
int3
scas
cmp
mov
xor
mov
push
jle
mov
mov
outs
mov
aas
mov
bound
jns
ds
adc
hlt
mov
adc
dec
test
outs
mov
movs
push
cdq
cmps
jmp
xor
inc
mov
gs
popa
(bad)
mov
lea
xchg
mov
push
test
addr16
or
test
add
fdivr
(bad)
out
dec
lds
sub
mov
push
xchg
mov
mov
leave
mov
xor
cmc
adc
dec
adc
sub
jge
and
xor
mov
mov
sub
lea
mov
xlat
iret
out
test
sub
adc
ins
enter
rol
cmps
adc
outs
pop
mov
adc
inc
inc
cmps
out
and
adc
xchg
sahf
or
mov
lods
cwde
movs
inc
aas
sar
clc
imul
daa
dec
loop
aam
sub
mov
cmp
inc
into
cmp
in
test
icebp
mov
mov
ins
xchg
addr16
push
jmp
push
mov
in
jae
pusha
cmps
mov
int
cld
stc
pusha
adc
sbb
mov
iret
cmp
mov
xchg
push
cmps
ret
out
or
(bad)
bound
push
fisub
test
xor
inc
sub
jecxz
push
cli
sbb
jns
outs
jp
pop
(bad)
xor
stos
sub
push
jmp
fmul
cmc
mov
das
pop
out
mov
iret
cmp
nop
xchg
in
adc
xchg
scas
pop
xor
cmp
das
sar
sbb
cmp
inc
xchg
push
add
(bad)
out
add
and
fst
in
add
fwait
adc
stos
sub
imul
mov
inc
xor
cs
xchg
(bad)
adc
jne
lods
aaa
mov
fbstp
jns
adc
cmps
fcmovnu
fild
jnp
out
mov
frstor
mov
in
fadd
adc
ins
pop
xor
jns
xchg
jg
adc
fild
dec
jne
or
fwait
test
adc
jbe
jnp
mov
int3
and
dec
addr16
sti
jno
inc
mov
jbe
mov
data16
mov
movs
and
mov
dec
or
jmp
mov
pop
sub
cmp
sub
std
cli
jmp
scas
jnp
sbb
lods
dec
ja
jne
out
xor
sub
repnz
test
dec
mov
mov
jo
pop
pop
mov
and
dec
jae
js
ror
mov
scas
add
pop
pop
arpl
pop
leave
pusha
fs
jp
and
enter
mov
inc
ror
ret
loopne
sbb
ins
in
stos
out
xor
lods
js
add
rcl
sub
jge
push
popf
loope
add
pop
sbb
call
popf
(bad)
mov
sahf
cmp
test
jg
and
or
ror
xchg
repnz
(bad)
addr16
cmp
pop
mov
mov
push
stos
dec
add
mov
and
or
dec
push
icebp
retf
mov
mov
sbb
sbb
(bad)
data16
dec
push
xor
sub
cmp
ss
pop
jae
push
call
lahf
add
sbb
and
mov
pop
cld
adc
jmp
fsubr
sti
daa
push
cmp
xchg
jle
stos
outs
sbb
mov
sbb
push
pop
add
imul
ficomp
jne
outs
ret
jge
or
in
cmps
aas
push
js
dec
pusha
mov
sub
je
mov
stos
mov
test
daa
fidiv
(bad)
int3
nop
inc
into
call
mov
shl
jg
jbe
mov
stos
aam
popa
sbb
jae
sbb
mov
or
cmp
xchg
push
fwait
rcl
sub
mov
dec
jmp
aam
inc
inc
pop
push
push
out
push
mov
out
jae
ret
mov
cli
xor
lahf
mov
cmps
mov
xchg
loop
bswap
pop
push
dec
lahf
xchg
mov
mov
ret
rcr
sub
fstp
aas
(bad)
dec
fs
in
adc
xchg
push
adc
cmp
imul
pop
adc
lea
jo
ficomp
adc
je
fst
push
fs
fwait
cld
cmovs
movs
pop
stc
cmp
jae
in
pop
mov
data16
xor
test
push
(bad)
or
out
mov
icebp
repz
or
jne
jns
cli
ja
or
mov
cmc
popf
xchg
outs
and
add
sti
xchg
mov
retf
adc
movs
sub
lds
paddw
adc
pop
xchg
add
hlt
jne
xor
popf
addr16
mov
in
movs
aad
mov
push
push
mov
or
mov
jle
push
sbb
cmp
sub
xor
pop
ds
adc
neg
fisttp
dec
pop
xor
sub
mov
pop
fnop
jle
fs
pop
outs
push
or
jo
loop
mov
ja
outs
and
inc
sub
or
jecxz
push
fwait
in
stc
cmps
inc
addr16
xor
cmp
cdq
inc
mov
les
data16
adc
cdq
sub
cmps
mov
inc
dec
mov
mov
cmp
outs
ins
js
jecxz
and
adc
push
inc
shl
in
mov
or
arpl
out
leave
sti
sub
mov
sbb
mov
sbb
dec
mov
mov
(bad)
mov
ret
pop
imul
xlat
jmp
mov
adc
or
fs
rol
rcl
sub
shr
rol
sub
retf
pushf
dec
adc
dec
ins
mov
(bad)
cld
jp
loopne
pop
dec
mov
push
dec
push
push
inc
sbb
outs
push
jne
sub
imul
ror
call
and
inc
fdivr
inc
jg
sub
or
dec
and
repnz
ret
arpl
inc
xor
add
and
jb
mov
out
icebp
gs
mov
pop
fdiv
fxch
cmps
and
xchg
ja
(bad)
pop
and
imul
push
inc
addr16
jbe
dec
into
(bad)
jl
push
push
out
fxch
cmc
push
pop
lods
mov
inc
sbb
stos
popf
sub
(bad)
loope
mov
in
jl
leave
int
xchg
loope
push
sbb
popf
mov
push
in
mov
dec
stc
cmc
or
cld
xor
out
jne
mov
jg
js
retf
xchg
ficom
inc
and
sub
sub
xor
leave
std
jns
ins
or
test
jae
mov
or
jno
das
iret
shl
ins
and
inc
sub
or
test
xor
adc
shl
js
(bad)
pop
dec
cmps
add
(bad)
fnstenv
sbb
mov
push
in
clc
(bad)
test
(bad)
mov
push
mov
sub
les
pop
cli
xchg
pop
mov
xchg
enter
cmp
loopne
inc
cdq
sbb
adc
call
xchg
lds
mov
ja
cmc
sbb
das
lds
and
inc
test
ror
popf
dec
mov
sbb
stos
adc
mov
xlat
sub
hlt
dec
out
test
push
cld
nop
mov
push
xchg
sub
outs
push
mov
scas
mov
add
fild
rcl
adc
adc
jle
or
mov
cmps
das
stos
cmp
retf
(bad)
add
ret
xchg
lods
push
fs
(bad)
loopne
loopne
add
lods
push
fcomp
mov
sbb
xlat
fs
les
push
sbb
mov
or
add
(bad)
repz
adc
in
in
dec
or
fst
bound
sbb
stos
pop
fs
outs
or
ror
inc
sbb
mov
cmp
add
das
adc
push
or
test
lods
fwait
repz
mov
movs
jne
sbb
jno
sub
xchg
xchg
fadd
icebp
in
aaa
and
stos
fcom
push
aad
and
xlat
and
aas
cli
not
dec
dec
push
xor
adc
add
psadbw
mov
push
mov
in
pop
xchg
xlat
dec
pop
mov
inc
sahf
cmp
inc
sbb
(bad)
push
call
scas
aas
xchg
ins
pop
lds
repnz
jns
mov
xchg
lock
xor
xchg
in
mov
dec
add
lods
adc
(bad)
jmp
sbb
in
fist
mov
data16
(bad)
rcr
mov
or
icebp
jge
in
and
inc
jmp
call
add
arpl
scas
sti
scas
push
clc
adc
jo
mov
cli
xchg
adc
pop
adc
pop
jb
imul
adc
adc
mov
cdq
(bad)
jmp
and
retf
cmp
pop
loope
adc
and
fwait
imul
add
cmc
cmps
aaa
mov
jp
mov
jmp
loopne
mov
add
sti
cld
xchg
dec
xor
mov
sbb
or
shr
fidiv
scas
sub
add
call
sbb
ja
dec
cmps
jmp
jmp
mov
std
fcmovb
sub
sbb
lods
inc
ret
popa
mov
dec
data16
in
mov
outs
sbb
jge
imul
xchg
jg
add
push
mov
mov
sbb
sub
pushf
lods
jbe
xchg
nop
jg
pop
daa
cdq
scas
fild
stos
adc
sbb
mov
pop
in
sbb
(bad)
es
jg
add
(bad)
leave
enter
(bad)
cmc
fidiv
and
mov
loope
mov
pop
sub
sbb
adc
push
mov
sbb
stos
or
test
jg
jbe
call
clc
cmc
in
imul
jo
push
push
imul
dec
in
mov
dec
idiv
fadd
sbb
ja
mov
dec
xchg
popa
loope
not
cdq
add
rcl
mov
call
enter
dec
enter
inc
ins
pop
mov
add
jno
cmp
retf
jns
dec
mov
loopne
push
sbb
dec
out
aaa
mov
jbe
std
and
xor
retf
mov
cli
cs
sbb
xor
sbb
jl
jno
hlt
and
mov
pop
dec
jp
or
add
cmps
rcr
ret
cmps
sub
cwde
cmp
dec
ins
into
adc
sub
push
xchg
pop
daa
jns
enter
xor
stos
lahf
(bad)
cmps
and
or
ins
sbb
ret
into
jno
ja
test
loop
add
fwait
mul
xchg
inc
pop
sbb
inc
push
ret
jo
push
sub
rcl
in
adc
cmps
aas
push
rol
scas
cmc
out
jmp
inc
and
dec
mov
cs
jne
mov
mov
jp
xor
push
inc
push
jp
inc
cmp
leave
inc
xchg
sti
push
cmps
or
xchg
cmp
mov
and
shl
cwde
or
sub
pop
ins
stos
cdq
xchg
das
inc
movs
mov
out
jge
push
jp
or
jnp
sub
les
add
out
mov
jecxz
mov
(bad)
xlat
mov
outs
or
aaa
iret
std
or
movs
(bad)
cli
retf
xchg
imul
dec
loopne
cmp
out
stos
jmp
xchg
inc
inc
pop
or
mov
aas
movs
and
adc
call
or
(bad)
cld
dec
push
ins
hlt
pop
imul
sbb
test
cdq
outs
push
jge
fdiv
inc
jg
xchg
push
call
jmp
cdq
cld
and
sbb
cwde
pop
scas
inc
xchg
test
xchg
pop
ss
stc
jne
jbe
fldcw
adc
add
cdq
into
fild
lods
mov
fsubr
or
xchg
aad
inc
out
popf
xchg
xchg
neg
fnsave
inc
test
mov
fadd
ins
adc
jmp
sbb
jecxz
adc
dec
cwde
and
loope
sbb
xor
mov
jge
inc
out
xlat
test
xor
sbb
push
or
and
test
jmp
push
leave
sub
mov
or
mov
jge
add
xor
popf
mov
add
jg
inc
sar
bnd
retf
jecxz
iret
cwde
adc
daa
out
xor
fcmovbe
xchg
push
cmp
sbb
sahf
ds
cmp
pop
cmp
inc
add
arpl
sub
mov
mov
test
mov
push
mov
cmp
mov
mov
(bad)
(bad)
mov
adc
mov
xchg
mov
cmp
lea
jmp
shr
sti
adc
test
jnp
mov
js
sbb
mov
psubsb
jmp
push
dec
jmp
addr16
inc
xlat
mov
or
das
xchg
div
xor
dec
pop
(bad)
pop
iret
outs
jno
mov
sub
and
cmc
rcr
cmps
repz
inc
cmp
int
cld
cmp
ss
sub
lods
in
jns
push
inc
cmp
das
fmulp
mov
retf
sahf
inc
jge
or
in
dec
inc
loopne
sbb
lock
xchg
or
aaa
repz
sti
and
dec
ror
inc
(bad)
out
mov
xor
mov
mov
jecxz
add
xor
inc
cmp
(bad)
xor
jg
pop
adc
arpl
pop
sub
lds
xchg
pushf
test
outs
aad
dec
inc
(bad)
mov
jno
dec
daa
aad
lds
lods
adc
in
pusha
sar
add
inc
jp
sbb
inc
push
mov
jns
adc
xchg
sub
xor
cmp
pop
push
test
cwde
int3
sub
popa
push
out
pop
sub
push
adc
aam
mov
push
arpl
push
push
adc
sti
sbb
test
outs
or
sbb
ret
pop
sub
xchg
pop
cli
mov
ds
or
mov
sub
addr16
cwde
cmp
pusha
jns
scas
cmps
test
xchg
pop
sub
xor
push
add
jl
or
xchg
mul
and
and
pop
test
sar
push
and
or
jno
(bad)
jp
mov
neg
pushw
jle
jb
cmps
(bad)
pop
lea
or
inc
jl
xor
jbe
push
gs
scas
xor
fld
inc
int
rcl
xchg
mov
iret
retf
cmc
loope
xchg
dec
jne
jb
mov
jp
stc
dec
mov
fsubr
retf
mov
int
mov
test
push
or
(bad)
outs
adc
pop
out
sahf
add
mov
cwde
ret
es
push
xor
out
lea
inc
stos
popf
or
inc
mov
jmp
mov
fucomip
jo
jae
(bad)
mov
jmp
mov
out
ja
arpl
or
shr
jmp
imul
dec
sbb
dec
pop
cmp
daa
(bad)
pop
das
jp
sbb
add
sar
std
loope
fxch
test
ins
inc
stos
fld
call
cmp
sub
cmp
dec
pusha
mov
sub
mov
or
jne
dec
fist
loope
cwde
and
pop
xor
cmp
pushf
mov
xlat
or
imul
add
sub
fsubr
mov
fmulp
call
ins
xchg
into
mov
out
mov
add
dec
cmp
dec
inc
or
cmp
dec
mov
(bad)
mov
aaa
(bad)
icebp
into
fucomi
pop
int
loop
dec
adc
clc
sub
int3
mov
jbe
stos
xor
lds
imul
shl
adc
leave
mov
stos
mov
mov
inc
into
rdmsr
add
popf
pop
push
adc
mov
cmp
adc
xchg
or
lahf
jbe
xchg
dec
rcr
stos
jecxz
jb
mov
addr16
outs
ret
xchg
stos
addr16
imul
xchg
mov
in
mov
call
sub
pop
not
push
mov
mov
add
add
out
call
pop
xchg
std
retf
pop
mov
jp
popa
and
mov
mov
loope
push
mov
aad
push
dec
and
in
jp
jecxz
inc
push
out
test
fdiv
mov
xor
icebp
or
mov
and
data16
push
call
xchg
shr
outs
mov
adc
and
xchg
xor
imul
lea
xchg
add
adc
sub
call
lods
in
push
mov
jmp
mov
(bad)
loopne
(bad)
cld
fld
pop
add
push
int3
mov
inc
mov
sub
aam
(bad)
out
sti
gs
in
pop
add
sub
mov
imul
mov
std
jl
or
movs
ins
dec
sub
push
mov
addr16
or
jno
dec
mov
or
out
ja
mov
xor
or
aaa
fadd
push
mov
push
dec
jns
(bad)
into
ss
fwait
vucomisd
and
push
sbb
mov
call
bound
mov
(bad)
push
icebp
inc
inc
sahf
aam
adc
sbb
(bad)
popa
aam
int3
xor
ins
dec
gs
jg
inc
out
stos
xchg
pop
mov
inc
fistp
push
and
aad
or
dec
push
xchg
fimul
movs
ins
push
jp
(bad)
jecxz
aas
std
jmp
dec
fistp
inc
mov
psrad
in
add
retf
clc
loop
and
pusha
dec
cmp
fist
cmp
or
in
pop
cmp
mov
mov
popf
addr16
mov
adc
push
xchg
inc
xchg
scas
pop
cmps
mov
or
ret
push
ror
test
push
lds
mov
pop
jl
xor
cmp
dec
pop
push
xor
inc
loop
adc
xor
daa
jne
mov
nop
sub
jns
(bad)
aaa
fcomp
cmp
sti
pop
lock
out
lahf
dec
and
sub
fbstp
icebp
dec
rcr
and
aaa
dec
js
jmp
ss
and
(bad)
test
mov
fidivr
or
jo
in
inc
ret
lock
dec
mov
sub
(bad)
jmp
(bad)
push
leave
ins
dec
stos
inc
jns
dec
je
dec
inc
pop
fisttp
cmp
and
andps
imul
push
adc
cmp
je
sub
add
fdivr
jge
sahf
and
js
leave
push
pop
mov
mov
mov
out
cmp
push
daa
push
mov
lock
outs
lods
std
cmps
sbb
and
cmp
pop
faddp
push
xchg
cmp
sub
push
add
and
or
in
push
cmp
xor
pop
scas
out
xchg
add
add
outs
je
sub
push
pop
jle
call
mov
sbb
mov
push
jp
push
pop
inc
idiv
imul
xor
cmp
dec
cld
shl
xchg
pop
xchg
jg
sub
hlt
sbb
(bad)
cmps
push
sbb
retf
loope
jne
mov
or
mov
aaa
retf
jmp
sbb
xor
dec
dec
mov
add
pop
aas
ret
call
mov
ins
int
mov
xchg
mov
and
int
mov
dec
jmp
xlat
cmp
scas
pop
xchg
cmp
outs
fist
out
les
(bad)
xlat
push
mov
pushf
retf
inc
mov
push
mov
stos
cwde
mov
mov
mov
js
stc
mov
inc
xchg
scas
inc
sbb
dec
add
mov
adc
icebp
fidiv
popa
adc
outs
push
cmp
xchg
scas
int3
adc
in
xchg
and
xlat
dec
sbb
popa
sub
jns
int
add
retf
mov
mov
aas
mov
mov
out
mov
and
repz
ret
cmps
dec
fsubr
add
enter
and
cmp
xchg
xchg
xchg
idiv
ja
and
mov
fs
dec
add
adc
ds
fld
or
jnp
mov
rcr
xchg
sub
outs
xor
inc
std
mov
scas
imul
fidivr
(bad)
xchg
imul
xchg
cmp
ret
and
lds
dec
xor
test
pop
stos
pop
das
aas
cwde
and
ins
imul
(bad)
jge
addr16
push
cwde
sub
pop
shl
pop
imul
xchg
pop
pop
loope
ja
ins
jne
cld
shl
or
and
mov
pop
out
add
js
and
(bad)
add
xchg
sub
dec
or
add
xor
stos
jbe
jg
sbb
adc
jl
inc
inc
and
dec
or
jo
cwde
sub
push
pop
mov
(bad)
and
jecxz
xchg
cwde
iret
xor
dec
fisttp
push
loope
add
and
inc
cmp
int3
jne
adc
sbb
or
mov
dec
popa
push
or
inc
mov
and
or
and
push
(bad)
js
push
sub
(bad)
fs
arpl
push
sbb
xchg
dec
push
push
sbb
stos
popa
mov
xor
(bad)
mov
mov
jg
js
or
jbe
fmul
and
cmp
add
mov
adc
mov
jb
mov
fcom
adc
ret
retf
bound
iret
jbe
fstp
pop
add
inc
xor
fistp
jo
push
jne
popf
sar
cmp
xchg
sub
and
(bad)
leave
test
out
jbe
sub
retf
jl
loope
ins
adc
jne
out
mov
mov
jle
pop
js
lea
jno
add
xor
sahf
mov
popa
mov
into
pop
inc
sub
or
je
fsub
loopne
int
bswap
lahf
xchg
test
xchg
sbb
and
aad
or
sar
retf
mov
add
mov
cmp
adc
neg
sbb
pusha
fwait
addr16
xor
pop
add
sbb
jle
ds
inc
mov
or
sub
ins
daa
mov
cwde
int
in
fwait
cmp
mov
sahf
jmp
xor
fadd
inc
fdivr
in
repz
stos
adc
aam
cmp
dec
rcl
xlat
(bad)
popf
(bad)
popf
mov
xor
and
add
push
jmp
mov
cmp
and
(bad)
fild
push
adc
pop
pushf
jno
fcomp
jecxz
add
or
mov
pop
test
inc
pop
or
inc
outs
mov
sbb
and
inc
in
leave
add
jmp
jmp
mov
imul
jp
push
fst
arpl
mov
addr16
ror
pop
icebp
lahf
int3
mov
popf
mov
out
rcl
xchg
shl
sub
(bad)
inc
(bad)
mov
stc
push
in
sub
jae
loopne
push
out
xor
inc
arpl
push
les
mov
pusha
div
sbb
dec
xchg
cmp
and
lods
mov
lds
inc
mov
fcomp
dec
int3
ja
push
jg
mov
sbb
in
mov
ror
ret
pop
stc
ret
or
push
shl
call
fwait
inc
outs
mov
out
or
adc
cld
enter
mov
jne
sub
pop
ds
mul
xchg
push
aad
jae
ficomp
push
or
in
mov
xor
ffree
pop
dec
and
in
pop
ds
xor
push
cmps
mov
sub
out
in
jo
(bad)
jmp
popf
in
popa
ret
cmp
jg
push
aam
dec
cli
jmp
test
jbe
fs
and
mov
sub
jge
add
inc
fild
mov
inc
aam
icebp
std
dec
rcr
cmp
push
scas
mov
lods
fiadd
fild
daa
inc
jb
push
cwde
adc
xor
inc
cmp
idiv
xchg
sbb
ds
xchg
out
pop
inc
or
mov
xchg
mov
shl
test
cli
cmc
jae
pop
leave
add
cwde
jo
add
leave
call
sbb
inc
xor
test
movs
sbb
fwait
adc
pop
pop
stos
mov
push
int3
mov
and
inc
idiv
jb
push
xor
jo
mov
xor
test
sbb
sbb
dec
jge
test
ffreep
aam
aam
lea
das
es
mov
mov
sub
fadd
adc
rcr
cmp
mov
mov
ins
mov
and
sbb
dec
jo
jecxz
push
call
mov
out
outs
jae
dec
sbb
pop
arpl
and
inc
rcl
dec
adc
pop
cs
pop
test
xlat
(bad)
sub
jecxz
lea
mov
repz
mov
pop
push
push
sar
jmp
ret
hlt
mov
inc
fnstsw
push
dec
dec
rol
cdq
inc
and
xor
pop
loopne
inc
das
movs
pop
ins
mov
(bad)
bnd
pop
dec
aas
push
icebp
push
sbb
cld
jo
xchg
js
adc
push
mov
shl
out
out
arpl
cvtdq2ps
xchg
inc
arpl
pop
jle
outs
mov
and
ins
clc
ficomp
je
sub
cmp
mov
lds
mov
repnz
adc
fs
dec
int
or
mov
in
mov
scas
pushf
in
movs
sub
mov
mov
rcr
arpl
addr16
sbb
in
fild
imul
ins
add
xchg
pop
adc
fcom
(bad)
clc
xchg
sbb
movs
pop
scas
dec
bound
adc
mov
fstp
pop
xor
ds
xchg
aaa
pushf
test
ss
retf
and
inc
pushf
or
or
and
mov
xchg
sahf
cmp
inc
mov
test
inc
inc
and
push
or
call
imul
pop
or
sbb
je
movs
out
adc
icebp
inc
repz
js
cld
pop
jg
add
popa
or
cmc
shl
fwait
stos
and
in
leave
add
in
xor
adc
fisttp
pop
sbb
mov
or
pushf
pop
jno
cmp
jae
lahf
(bad)
adc
cli
mov
inc
dec
dec
push
sbb
push
mul
dec
or
mov
mov
cvtpi2ps
adc
fild
adc
push
mov
mov
and
dec
imul
inc
mov
sub
dec
sbb
sub
call
dec
jns
sub
sbb
out
arpl
add
jle
xchg
ficomp
push
push
loop
aaa
ror
adc
mov
cli
lds
fld
xor
pop
mov
sub
mov
sbb
das
sahf
push
pop
push
xchg
aas
into
sbb
pop
ss
cmp
shr
test
stos
cmc
out
(bad)
(bad)
or
ret
in
fcomp
dec
in
mov
and
cmps
mov
mov
xchg
and
daa
push
loop
jmp
and
pop
jl
cmp
or
jle
xchg
aas
cld
pusha
(bad)
lods
xchg
pop
shl
test
stos
shr
inc
jl
arpl
addr16
popa
push
push
cmps
sub
out
jb
pop
mov
push
cmps
popa
pushf
jnp
stc
ficom
mov
icebp
push
mov
imul
add
mov
test
push
call
ret
arpl
imul
aas
inc
xchg
fsubrp
dec
mov
cld
retf
call
lods
jle
nop
fdiv
jge
stos
pop
addr16
scas
xor
xor
or
push
mov
stc
adc
fisttp
ins
pushf
push
dec
outs
mov
pop
mov
sahf
xchg
inc
or
add
jne
aaa
push
icebp
movs
cmp
js
push
mov
dec
hlt
sahf
in
call
cli
cmps
jl
ret
push
dec
repz
nop
sbb
and
jbe
xor
fdiv
xor
pusha
push
imul
mov
pop
and
stos
es
aad
fmul
xor
sbb
jae
and
(bad)
(bad)
scas
push
dec
cmp
cmp
ret
lea
outs
xor
push
inc
aaa
mul
fs
sub
enter
js
loopne
out
or
iret
repz
mov
xor
popa
fwait
(bad)
das
and
test
jb
data16
sub
inc
(bad)
std
jmp
mov
sbb
push
stc
and
out
mov
jg
cmp
sub
test
adc
mov
jp
xchg
sub
xor
mov
cmps
pop
and
sub
dec
and
mov
pop
nop
jmp
jge
(bad)
addr16
stos
or
jmp
mov
stos
out
pushf
mov
xor
and
outs
xlat
xchg
(bad)
fidiv
loop
mul
aad
sbb
ins
(bad)
bound
outs
pop
iret
mov
pop
dec
add
xor
das
add
js
push
jmp
(bad)
cmp
out
pop
fsubr
inc
cs
push
push
int3
adc
jns
stc
pop
adc
gs
or
js
ss
jns
jge
sbb
cwde
sbb
adc
pop
data16
outs
inc
adc
cmp
pop
je
shr
xchg
leave
mov
sbb
pop
xor
xor
pop
mov
loopne
repnz
scas
(bad)
fadd
push
pop
push
add
inc
mov
sub
in
add
hlt
shl
(bad)
sbb
adc
(bad)
leave
retf
out
jb
aaa
xchg
sbb
xlat
idiv
cmp
add
jns
lahf
fistp
call
mov
mov
sbb
pop
adc
adc
push
sahf
cmp
daa
cmp
cs
and
xor
(bad)
mov
not
jne
hlt
add
inc
addr16
rol
in
call
int
add
jge
xor
call
mov
inc
mov
mov
cmp
sbb
int3
and
sub
leave
imul
and
jno
loop
in
out
leave
dec
push
or
push
int
add
xchg
retf
out
fisttp
loopne
lods
jae
mov
xor
cld
sub
cli
cmp
cmps
jne
outs
cmc
data16
(bad)
xor
icebp
xchg
pop
adc
lods
rcl
js
pop
iret
(bad)
pop
jge
mov
push
les
mov
jmp
lock
push
out
mov
push
lods
inc
adc
jno
call
int
xor
pop
inc
mov
jg
dec
mov
shl
push
jne
out
mov
inc
ror
ins
in
xchg
imul
call
xor
repz
sbb
xlat
and
int3
(bad)
(bad)
jmp
(bad)
clc
pop
mov
inc
cmp
jnp
shr
pop
das
mov
sub
call
js
push
mov
inc
pushf
push
and
shl
xchg
test
or
inc
js
sbb
nop
cmps
ss
mov
cmp
push
xchg
das
pop
ret
mov
and
inc
dec
bound
mov
mov
(bad)
bound
icebp
cmp
ss
mov
mov
or
inc
aaa
push
pop
ret
data16
fdiv
jmp
arpl
fcomp
pop
xlat
mov
or
movs
ja
js
inc
and
mov
ss
and
rcr
rcl
adc
sar
addr16
adc
dec
cmp
or
ins
scas
jb
jp
jne
pop
pop
sbb
(bad)
fist
pop
mov
outs
pop
ret
inc
jo
fwait
adc
(bad)
dec
mov
mov
pop
adc
iret
dec
mov
jns
out
test
push
int
daa
add
pusha
mov
mov
(bad)
ror
sahf
rol
xchg
stos
mov
jns
jno
je
movs
cmp
neg
dec
mov
int
fnsave
push
push
dec
addr16
out
pop
jecxz
ror
sub
repnz
sbb
xchg
pop
ss
cmp
mov
pop
xchg
out
pop
add
in
sti
repnz
and
repnz
fisubr
jns
jae
jbe
loope
sbb
jns
dec
add
arpl
out
push
lahf
in
cmps
sti
adc
or
cmp
test
inc
ins
frstor
scas
test
lea
dec
scas
daa
loopne
lds
fsubp
inc
ins
icebp
stos
mov
leave
daa
jge
fiadd
add
mov
sbb
in
in
adc
xchg
in
sub
cmp
retf
jmp
xchg
add
test
inc
push
and
lods
and
sub
nop
push
adc
call
push
xor
pushf
adc
shl
sti
cmp
sbb
fistp
call
hlt
out
sti
lahf
mov
hlt
jbe
pop
sbb
xlat
jle
in
pop
cli
daa
push
dec
data16
out
pop
scas
rol
mov
pop
fmul
adc
ss
xor
(bad)
enter
out
dec
sbb
clc
xchg
nop/reserved
jecxz
pop
lea
daa
outs
inc
cmps
test
sti
in
pop
fnstsw
cmp
push
data16
jge
jno
jns
add
xor
cmp
cli
retf
ins
dec
cld
test
pusha
mov
addr16
retf
fwait
ds
mov
dec
sub
fcmovnb
dec
push
ret
aas
sub
lock
ss
(bad)
retf
sbb
rcr
xchg
frstor
push
dec
push
mov
or
xchg
dec
sbb
mov
mov
aaa
adc
inc
rcl
mov
add
popf
cmp
mov
jle
mov
adc
sti
les
mov
jno
dec
pop
jmp
xchg
imul
repnz
mov
and
(bad)
mov
sbb
sbb
fisubr
fstp
fstp
fdiv
mov
ror
test
loop
xlat
dec
je
in
add
add
ret
xchg
xor
repz
sub
es
sti
xlat
mov
aaa
add
dec
mov
and
(bad)
rcl
push
jl
xchg
jmp
leave
adc
stos
into
mov
push
mov
xor
sub
mov
enter
jmp
and
repz
mov
fdivr
loopne
and
jo
mov
jle
pop
repz
mov
dec
push
mov
ret
fcomp
pop
jae
add
pop
test
inc
jo
leave
sub
lods
pop
loop
dec
int
push
push
lock
mov
lock
test
outs
mov
enter
cs
aaa
in
neg
fs
test
popf
out
not
mov
ja
popf
data16
dec
imul
std
arpl
repnz
or
imul
mov
dec
push
push
ja
jo
mov
sahf
scas
ret
ror
mov
cmps
(bad)
leave
jecxz
loope
out
movs
div
sub
push
mov
mov
out
or
mov
nop
xchg
sub
sbb
test
mov
cmps
out
mov
lahf
les
add
inc
xor
dec
cmc
dec
cmps
out
ficomp
pop
xchg
cmps
inc
adc
and
xchg
inc
push
cmps
and
test
xor
cmps
dec
fnstcw
es
or
or
div
xchg
jg
xchg
mov
mov
xchg
sub
push
mov
cdq
icebp
fcmovnbe
sbb
(bad)
cmps
dec
xchg
adc
mov
cwde
mov
push
lock
fadd
cmp
xor
sahf
inc
mov
scas
inc
aam
cmp
mov
dec
mov
shr
mov
jl
push
lock
lock
mov
pop
test
mov
aas
movs
lods
fbstp
push
aas
inc
cwde
sbb
mov
pop
pop
pop
aas
jle
mov
inc
std
push
rcr
add
std
adc
cld
push
lock
mov
int3
repnz
fadd
xchg
out
in
sub
pop
ret
(bad)
(bad)
xchg
jb
arpl
add
(bad)
cmp
pop
mov
movs
(bad)
mov
sub
sub
mov
or
repnz
cmc
mov
mov
jns
iret
mov
int
mov
js
pop
hlt
jne
mov
xor
jb
pop
movs
push
cmp
push
lds
call
std
inc
pop
inc
pop
mov
inc
popf
shl
rcl
mov
scas
mov
lds
adc
mov
shr
mov
and
inc
in
cmps
cwde
xchg
cmp
cmp
pop
hlt
cmp
imul
xor
mov
push
xchg
bound
xor
sub
adc
jb
retf
xchg
jno
mov
sub
pop
xor
daa
or
stos
fst
jnp
movs
mov
push
dec
mov
pop
enter
daa
pop
inc
mov
lds
test
inc
fld
mov
dec
add
inc
sti
out
cmps
sti
mov
lods
int
pop
fistp
xor
lds
pop
mov
aas
dec
hlt
daa
gs
and
pusha
mov
aaa
cmp
xchg
add
xchg
loope
or
leave
lahf
xchg
jno
dec
push
sub
lods
test
add
mov
fmul
pop
jb
cmc
std
dec
int3
daa
loope
icebp
and
scas
xchg
pop
pop
ss
or
mov
pop
aam
sbb
xor
push
cdq
stos
repz
and
jnp
mov
icebp
jo
pusha
or
mov
adc
inc
xchg
sub
cmp
jecxz
test
pop
add
inc
movs
cmps
push
xor
mov
cs
sub
sbb
sbb
enter
dec
xor
mov
push
sbb
dec
sbb
or
inc
mov
in
inc
nop
out
fsub
push
ror
into
shl
push
test
pop
fld
mov
aas
inc
ret
movs
in
(bad)
jne
xchg
push
enter
jle
mov
test
inc
ss
(bad)
and
ret
push
sahf
pop
bound
lods
or
adc
lahf
jbe
lods
push
in
loop
mov
loope
push
xlat
popf
pop
fsub
mov
in
stos
imul
(bad)
(bad)
jns
fcom
repnz
xchg
sbb
xchg
repz
mov
push
adc
fnstcw
int3
dec
xor
sub
cmp
and
ss
scas
xchg
(bad)
(bad)
or
sbb
es
inc
mov
mov
jecxz
test
add
add
sub
jl
cmp
pop
test
jmp
sbb
dec
jns
jo
shr
xlat
mov
(bad)
mov
cmp
push
adc
mov
dec
ins
add
rol
xor
test
loopne
mov
(bad)
mov
pop
je
das
mov
mov
aas
mov
fsub
test
cdq
popa
out
jecxz
or
sub
fst
inc
or
sar
push
and
cmp
mov
jecxz
pop
or
sub
lds
or
sbb
cld
arpl
stc
pop
mov
test
inc
mov
call
cmp
push
mov
outs
mov
mov
into
inc
sbb
les
pop
pusha
shl
inc
mov
jns
loope
sub
loope
ret
in
fcom
stos
data16
jecxz
add
mov
test
pusha
xor
sub
jge
loop
xchg
das
or
fsubr
aaa
mov
mov
ins
or
bswap
xor
adc
and
cmp
out
(bad)
in
sub
mov
fcomp
cmp
mov
sbb
xlat
pop
std
cmps
add
sub
retf
mov
cmp
push
mov
sub
inc
sub
aad
dec
xchg
scas
cmps
or
xchg
xchg
jecxz
add
outs
bound
xchg
ja
xchg
jno
pop
mov
leave
sti
adc
mov
pop
xchg
jmp
dec
inc
xor
ss
dec
inc
fisub
jmp
(bad)
push
dec
cld
cmp
jl
mov
mov
and
pop
mov
and
pop
in
mov
mov
push
jmp
push
into
mov
sub
or
add
cmp
sub
push
xor
xor
dec
imul
leave
pop
pop
add
jecxz
jge
inc
mov
int3
sahf
sub
inc
adc
cmps
push
adc
pop
(bad)
arpl
mov
adc
xchg
retf
mov
cmp
pop
loopne
mov
icebp
call
in
cmp
cmps
push
(bad)
out
stos
cmp
jbe
adc
or
mov
ss
mov
in
and
rcl
dec
jp
dec
div
imul
mov
or
enter
cld
enter
adc
pusha
in
js
js
inc
(bad)
or
cdq
adc
(bad)
sub
loopne
mov
out
mov
test
sub
(bad)
jne
pop
xchg
push
adc
data16
cwde
ftst
or
idiv
pop
cmp
addr16
fcom
mov
test
aaa
pop
dec
fcomp
daa
aas
sbb
mov
add
xchg
and
rcl
xchg
std
outs
sub
ss
stc
jmp
out
push
inc
sar
mov
out
data16
aam
mov
mov
push
push
xor
movs
mov
mov
retf
(bad)
call
jmp
into
xchg
dec
mov
(bad)
sahf
inc
into
inc
mov
mov
inc
popf
add
add
xlat
sahf
xchg
mov
shl
adc
imul
sbb
lahf
mov
push
xchg
repz
xlat
out
dec
(bad)
push
push
ins
out
daa
nop
(bad)
xchg
lahf
cmp
xchg
inc
repnz
pop
sub
test
rcr
jb
dec
cwde
sets
xor
xchg
mov
push
iret
jb
icebp
fisub
mov
adc
xchg
mov
test
push
add
dec
inc
sub
in
add
or
xchg
adc
retf
push
frstor
(bad)
into
mov
data16
push
movs
xchg
push
popf
into
push
mov
push
pop
stc
ret
stc
jnp
int
imul
mov
jecxz
push
push
retf
push
stos
movs
dec
lea
and
(bad)
out
pop
fisttp
gs
or
aad
and
aaa
fsubr
mov
and
jl
imul
pop
cmp
mov
(bad)
fwait
test
in
lock
add
or
mov
lahf
pop
cli
dec
je
push
sbb
fwait
sub
adc
cmp
inc
and
sub
gs
cmp
jno
mov
inc
inc
mov
test
adc
xchg
cmp
sub
jge
pop
pushf
or
gs
leave
mov
cmps
rcr
stc
lods
int3
adc
cmp
into
das
(bad)
jns
iret
icebp
mov
sbb
aam
add
dec
xchg
lahf
addr16
mov
xchg
push
retf
jb
nop
push
popa
cmp
int
add
sub
pushf
test
jno
push
sub
ret
ret
stos
fsub
dec
jmp
retf
xchg
dec
xor
add
lods
add
lods
jle
and
mov
xchg
mov
mov
sub
or
push
retf
cdq
movs
adc
cmc
jmp
arpl
imul
add
ins
push
inc
lahf
push
into
lds
test
or
and
xor
adc
shr
xchg
ins
adc
jae
cs
sbb
inc
mov
lds
jle
mov
and
out
js
pop
add
popa
mul
adc
ret
or
call
xor
shl
fisttp
mov
push
fld
fcmovnbe
leave
and
and
mov
jp
test
mov
(bad)
sbb
cdq
lock
lods
cs
inc
xor
and
push
test
mov
mov
cs
cdq
movs
mov
or
or
xor
jae
or
sti
in
(bad)
icebp
movs
mov
enter
pop
daa
daa
push
mov
pop
fist
inc
enter
loopne
cmp
push
and
jmp
mov
cs
jg
cmp
adc
scas
dec
xchg
(bad)
test
mov
or
(bad)
pop
scas
pop
xor
push
loope
pop
mov
adc
scas
outs
js
dec
out
mov
rol
js
dec
and
pop
stc
xchg
cmp
add
fldenv
mov
and
mov
sbb
adc
into
mov
inc
mov
mov
ficom
lock
add
xchg
cs
(bad)
jmp
iret
push
cmp
mov
inc
sbb
jmp
mov
and
cmp
(bad)
icebp
add
jbe
gs
loop
sub
cmc
outs
xchg
mov
cmp
inc
fdiv
mov
repnz
and
popa
sti
fwait
sub
mov
outs
stos
xor
pop
push
xor
sbb
and
cli
cmp
sub
mov
dec
pop
aad
mov
je
sar
dec
adc
mov
inc
cdq
cmps
push
and
xor
push
ret
mov
int3
aaa
std
xor
and
mov
fsubr
mov
fldenv
gs
(bad)
or
dec
jle
cli
daa
mov
jno
mov
push
or
addr16
xor
in
or
gs
xchg
pop
shr
or
lahf
mov
or
call
lods
jmp
push
cmp
mov
mov
and
xchg
data16
pop
or
push
es
out
test
pop
cs
jp
pop
mov
out
loope
mov
xchg
pop
dec
xor
mov
fisttp
fcomp
mov
ret
aam
sub
jb
and
fs
mov
inc
fwait
inc
enter
sub
movs
das
loop
fldcw
ds
or
cmps
scas
mov
push
mov
(bad)
in
inc
add
imul
stc
mov
les
sahf
dec
imul
mov
xchg
mov
loop
mov
jb
push
test
fwait
mov
daa
aad
add
sbb
mov
fild
fisubr
ss
dec
inc
sbb
dec
jbe
scas
sbb
mov
aad
pop
xor
xlat
test
addr16
popa
dec
daa
jns
xor
mov
int
rcr
push
ins
(bad)
jmp
sbb
daa
mov
jae
shl
xor
inc
cwde
sub
mov
ins
dec
test
out
mov
push
add
cmp
inc
popf
aaa
rcr
aad
sti
jmp
fstp
mov
jb
sub
sub
push
inc
dec
mov
dec
or
test
lds
test
into
sar
rcl
aaa
push
sub
sbb
jl
xor
rcr
adc
mov
aas
jg
mov
loopne
xor
fisub
test
outs
int3
inc
stos
cmps
rcr
push
pop
out
or
xchg
mov
inc
sbb
mov
leave
push
mov
push
paddusw
out
fucom
jbe
or
dec
jg
call
and
mov
sub
inc
push
daa
aad
loopne
pop
stos
sub
inc
adc
push
stos
sbb
mov
in
imul
mov
jae
or
int
xor
mov
scas
add
call
js
inc
mov
or
cmc
lahf
stc
mov
sbb
dec
lods
sub
mov
add
cmp
out
bound
dec
(bad)
and
xchg
add
rcl
adc
lods
cli
syscall
xchg
adc
addr16
fsubr
mov
je
mov
sbb
jl
es
int
cmp
stc
pop
push
and
scas
mov
repz
leave
(bad)
lock
cmc
jl
sahf
popa
add
xchg
fisub
dec
and
je
push
and
call
shl
int
mov
jg
hlt
cmp
jmp
xchg
and
(bad)
inc
or
aam
and
fs
(bad)
loop
ror
xor
xor
mov
dec
mov
aas
pop
lahf
cmp
and
inc
adc
add
(bad)
loope
push
out
adc
lods
fs
dec
sbb
push
stos
or
sub
pusha
out
jne
adc
inc
pop
aam
xchg
sbb
frstor
inc
cwde
std
xchg
test
(bad)
xor
mov
mov
or
pop
cmps
push
inc
call
or
sbb
jecxz
(bad)
mov
dec
in
call
xor
ins
outs
mov
cdq
xchg
(bad)
lods
stc
inc
out
sub
repz
in
aad
xor
stos
inc
adc
sub
out
push
sbb
and
test
jp
ret
out
in
ins
mov
ret
cmps
ss
add
mov
pop
sbb
fldcw
xor
mov
mov
into
imul
and
popf
fidivr
ds
sub
pop
jbe
pop
(bad)
in
in
push
imul
mov
popa
cmc
das
(bad)
mov
out
out
adc
rcl
push
cwde
dec
div
imul
sub
inc
imul
fidiv
cmp
sub
jle
mov
aad
pop
mov
(bad)
in
sbb
mov
adc
xchg
mov
pop
cdq
(bad)
mov
xchg
(bad)
outs
xchg
xchg
add
sbb
push
(bad)
test
cdq
cld
dec
sar
stos
jbe
xchg
lea
aas
sar
adc
shl
cmp
pop
fwait
or
xchg
inc
loopne
pop
mov
adc
xchg
leave
repz
xchg
and
pop
or
daa
inc
adc
mov
int3
ins
adc
dec
sub
add
dec
mov
pop
mov
or
cld
test
dec
cli
test
jp
fist
push
jb
mov
mov
test
xchg
fld
jbe
jae
ror
test
scas
loop
or
mov
call
or
cmp
add
mov
add
sub
das
and
ja
aas
or
inc
das
(bad)
jg
or
add
daa
cdq
or
cmp
fistp
and
mov
sub
imul
cmp
push
lea
ror
inc
pop
inc
cdq
sub
pop
jne
into
mov
or
xchg
push
mov
jb
sbb
add
push
sbb
lahf
xor
sbb
sbb
cwde
ficomp
hlt
adc
loope
imul
push
mov
sub
daa
movs
mov
add
and
outs
sbb
(bad)
dec
xchg
shl
scas
repnz
stc
xor
les
out
sub
mov
xlat
add
in
mov
sub
mov
dec
adc
mov
jno
outs
jns
mov
cdq
movs
cdq
mov
xor
jns
int
adc
pushw
sub
cmc
hlt
jmp
retf
fdivr
xlat
mov
call
jge
and
xlat
jb
push
stc
adc
pop
sub
xor
(bad)
xor
sub
inc
mov
mov
inc
int3
sti
nop
adc
aaa
mov
pushf
pusha
out
add
(bad)
fmul
pop
jecxz
and
(bad)
arpl
adc
pop
shl
dec
xor
stc
test
jne
into
or
or
aaa
int
clc
loopne
jno
inc
ja
and
sbb
dec
sar
fld
inc
lods
neg
ins
movs
jg
mov
lods
fst
pushf
loopne
repz
cmp
mov
test
scas
mov
test
gs
clc
repnz
adc
test
push
mov
in
dec
outs
bound
in
leave
sub
icebp
loopne
mov
test
cmp
scas
mov
mov
mov
push
push
outs
dec
test
cmp
adc
sub
test
loopne
adc
fisub
ss
leave
sub
cli
into
adc
std
fdivp
ficomp
jg
cmp
fcomi
xchg
ins
scas
mov
call
add
jae
and
js
out
and
leave
div
mov
call
mov
and
dec
mov
icebp
(bad)
or
das
sub
push
aaa
push
in
int
cmp
shl
shr
popf
add
cs
push
push
das
xlat
mov
push
mov
pop
lds
cmp
scas
test
into
pop
pop
mov
aaa
pop
outs
ja
les
imul
in
lds
xchg
ret
inc
sub
xor
adc
cmps
mov
pop
aas
sbb
fimul
jle
fcmovu
pop
ror
mov
cmps
jns
or
mov
dec
stos
fist
jbe
jge
popf
sub
pushf
sub
ss
es
push
and
jmp
test
add
xchg
jns
mov
mov
and
mov
adc
stc
in
pop
shl
dec
call
push
das
inc
sub
add
jmp
shl
mov
adc
mov
cwde
in
xlat
mov
and
out
jns
push
dec
iret
inc
or
cmp
dec
aad
sahf
dec
ins
adc
stos
fs
and
push
jbe
(bad)
hlt
sbb
jnp
mov
mov
lods
jmp
sub
data16
cmps
or
aaa
in
adc
call
xlat
cmp
shl
movs
pop
ss
adc
nop
xor
cli
(bad)
std
arpl
js
rcr
lods
lock
ss
loopne
sbb
push
inc
aaa
(bad)
inc
xchg
cs
shl
das
xor
sbb
adc
push
adc
push
(bad)
sbb
pop
ins
ficom
add
push
cmp
(bad)
gs
push
cld
shr
pop
sub
loop
hlt
(bad)
pop
mov
leave
icebp
in
ins
int
sti
jl
fcmovb
das
outs
cmp
mov
jecxz
and
push
mov
or
mov
mul
out
cmc
loope
and
lds
pop
sub
ds
push
cmova
iret
loop
adc
test
lea
aaa
mov
int
neg
repnz
jbe
sahf
push
popa
fist
push
les
inc
jo
clc
or
adc
cmp
xchg
xchg
sub
inc
icebp
dec
push
sbb
cld
fwait
lods
adc
fs
push
lahf
fs
dec
jns
leave
push
rol
push
cld
popa
pop
mov
pop
lahf
clc
ds
mov
or
retf
(bad)
arpl
dec
lock
sub
movs
sub
out
test
mov
jno
jle
inc
out
jl
sar
jb
dec
das
sar
xchg
in
sahf
shl
jecxz
out
pop
ins
and
jnp
es
xchg
lods
aas
pop
fmul
dec
inc
xchg
push
fld
arpl
jecxz
lods
je
call
dec
mul
jbe
dec
stos
jae
retf
clc
ficom
adc
aad
rol
adc
jg
cmp
clc
mov
push
out
xchg
js
and
int
lea
cmp
add
popa
rcr
xchg
and
aam
sbb
xor
cs
lods
pop
scas
outs
sub
xchg
mov
add
xchg
(bad)
repnz
sahf
push
iret
pop
mov
push
cmp
push
aas
mov
push
aas
cli
pusha
mov
lds
in
jg
add
jmp
(bad)
aad
stos
retf
add
or
dec
rcl
pop
adc
into
nop
and
and
cwde
cmp
adc
add
cmp
mov
popa
hlt
sub
daa
cmc
pop
jg
push
enter
mov
sbb
imul
sub
push
js
inc
fld
or
call
dec
ins
mov
dec
push
and
pop
outs
adc
dec
and
pop
(bad)
push
pop
into
adc
mov
(bad)
js
mov
push
mov
pusha
ror
xor
mov
aaa
int
add
lods
adc
rol
adc
test
idiv
fistp
daa
in
(bad)
jmp
cli
mov
pop
xchg
das
push
cld
(bad)
pop
inc
jne
mov
nop
cld
lds
outs
jne
es
pop
loop
sar
pop
lahf
mov
xlat
stc
jnp
adc
jl
sub
nop
push
xchg
adc
faddp
loop
call
into
fsubr
sti
mov
arpl
xor
ret
stos
stc
jecxz
pop
mov
or
aas
rcr
test
rcr
xchg
jge
mov
test
sub
adc
addr16
pop
lock
arpl
loop
fstp
xchg
gs
pop
dec
fwait
retf
push
aaa
inc
pop
mov
lea
loopne
mov
lods
lds
rcl
cmps
mov
in
bound
jp
inc
sahf
mov
psubsw
pushw
push
sbb
cmp
xchg
mov
or
jle
mov
sar
xlat
popa
push
mov
mov
fcomp
jl
fnstenv
inc
daa
sub
and
pop
jle
(bad)
ja
push
jp
in
jb
xor
or
mov
sbb
xor
and
imul
in
cmps
sub
cdq
sub
into
sar
inc
adc
jb
jbe
mov
jnp
mov
(bad)
add
pop
mov
xor
pushf
cmp
fwait
push
inc
mov
cmp
icebp
xchg
mov
pop
xchg
dec
loope
int
shl
(bad)
cmp
ins
ins
(bad)
fimul
mov
lods
jle
dec
push
test
pop
adc
lock
cmp
mov
add
sti
mov
or
push
mov
retf
sub
fwait
push
mov
fisubr
fmul
cmp
sub
xchg
sbb
sbb
jne
call
repnz
or
push
movs
jmp
into
add
icebp
adc
inc
xchg
xchg
mov
xor
push
sub
pop
and
leave
xor
cmp
sub
aas
gs
add
jl
push
push
int
ret
pusha
ret
or
pusha
sti
mov
or
cmp
imul
lods
cmp
jmp
xchg
inc
loope
cmp
pop
push
loopne
cmps
xor
xchg
repz
pop
and
in
mov
inc
mov
dec
xchg
out
rcl
es
fimul
sbb
lods
jno
fdivr
shl
mov
push
pop
cld
loop
inc
and
sub
clc
jne
xor
xchg
jge
xor
fs
std
scas
jnp
mov
xor
shl
outs
push
into
ss
pusha
xchg
ins
jnp
aaa
xor
xchg
test
cmc
lds
addr16
out
sbb
fs
mov
out
out
mov
jge
mov
sub
cmp
inc
jmp
out
adc
add
mov
add
inc
add
test
inc
mov
inc
test
pop
ds
and
frstor
xchg
mov
push
inc
sub
(bad)
call
sub
gs
mov
cmp
push
scas
pusha
pop
push
lahf
push
or
add
sub
inc
in
add
scas
jb
add
and
adc
das
mov
or
cmps
adc
mov
fsubr
int
xor
push
outs
aas
in
dec
xchg
in
pop
ret
inc
lds
jecxz
dec
sub
inc
jge
int
adc
cwde
mov
sbb
mov
sub
pop
(bad)
aas
movs
jae
push
or
das
cmp
add
sahf
mov
sub
(bad)
fisub
int3
test
sub
push
pop
(bad)
into
pop
div
push
outs
scas
fild
jmp
into
fisttp
pop
dec
add
fisub
fild
add
repnz
(bad)
pop
shl
sbb
ja
dec
mov
adc
int3
es
outs
xlat
or
mov
sbb
sub
xor
setae
add
out
nop
outs
sbb
mov
(bad)
repnz
push
and
test
add
dec
cs
repnz
ins
cld
pop
jb
mov
cmp
popf
repnz
xor
(bad)
jg
sub
jg
ds
iret
or
loop
dec
sub
pop
mov
imul
popa
lods
int3
adc
repnz
push
icebp
lods
or
push
psllq
cld
and
pop
xchg
or
not
jp
fsqrt
mov
loopne
add
add
ins
ins
aas
inc
loope
xor
(bad)
sbb
sub
jmp
into
push
retf
(bad)
imul
pop
pop
mov
pushf
mov
sbb
jne
inc
shl
pop
push
mov
repz
jp
sub
iret
xchg
cmc
lea
fnstenv
es
push
icebp
add
mov
pop
cmp
or
fcom
xlat
mov
cwde
call
jl
push
js
in
aaa
cmp
(bad)
mov
adc
mov
xor
lock
rcr
sub
aaa
jmp
imul
sub
pop
mov
into
xchg
fmul
jo
shr
sar
aad
in
push
sbb
fprem
push
dec
mov
in
pop
sub
adc
push
inc
dec
pusha
cmps
mov
stos
icebp
mov
in
mov
jmp
lahf
xlat
sbb
mov
loopne
jle
push
mov
xchg
mov
pushf
xor
ins
fsub
shl
mov
in
jae
cmp
test
mov
xor
xor
sbb
lods
out
lods
pop
pop
xor
add
arpl
inc
add
inc
push
inc
or
inc
popf
mov
call
add
push
add
add
dec
cmp
test
pop
(bad)
pushf
inc
jae
or
mov
xchg
push
add
mov
xchg
sub
stc
ret
ins
rcr
mov
mov
or
(bad)
in
pop
mul
inc
jmp
fdivr
xor
outs
imul
dec
les
sub
mov
jmp
popa
hlt
sti
cld
and
ins
xchg
in
sahf
arpl
push
mov
inc
out
movs
pop
adc
(bad)
out
adc
cmps
pushf
call
jo
retf
pusha
jmp
sbb
add
nop
or
sbb
lds
or
mov
dec
inc
lahf
mov
(bad)
adc
popa
push
inc
fs
in
ror
or
mov
jo
xchg
sbb
mov
mov
jmp
xchg
sub
add
(bad)
push
mov
mov
imul
push
scas
inc
sub
sub
adc
sahf
sub
stos
sbb
xchg
pop
es
xchg
call
jae
mov
sbb
push
push
mov
jmp
sbb
stos
ds
jns
mov
aas
dec
jns
iret
pop
push
mov
lsl
pop
push
enter
shr
mov
arpl
mov
mov
jne
mov
enter
jge
mov
loope
popf
es
pop
imul
stos
pop
cdq
or
cmps
push
sub
mov
pop
mov
das
inc
push
push
fidivr
or
dec
sub
mov
xchg
add
xchg
jmp
inc
cld
enter
movs
lods
cmp
jmp
test
cwde
mov
lock
xchg
or
ins
add
mov
xor
(bad)
sub
or
push
lods
jo
jp
out
les
test
and
dec
and
pushf
fisttp
leave
sub
push
and
adc
add
cmp
sub
push
dec
xchg
mov
scas
clc
cwde
inc
push
fcomp
xchg
jo
cld
popa
push
aad
(bad)
cmp
test
outs
into
push
adc
js
and
ins
pop
push
test
std
add
aas
pushf
mov
sti
mov
push
cwde
nop
xlat
fst
cdq
fwait
mov
mov
es
ds
imul
pop
mov
pushf
cmp
push
sub
mov
mov
es
sub
out
xor
test
loop
shl
mov
fwait
popf
cmp
and
add
xor
mov
mov
and
cwde
pop
mov
push
jl
lds
imul
cdq
mov
mov
mov
daa
retw
fisub
mov
test
jmp
xchg
inc
push
push
pop
dec
inc
mov
adc
or
aas
pop
stos
xchg
fldl2e
fld
mov
stos
in
enter
in
shl
dec
jns
scas
outs
mov
pop
call
jmp
mov
icebp
mov
pop
sub
xor
inc
xchg
(bad)
jno
or
xchg
or
sub
fcom
mov
or
jge
xchg
jo
adc
adc
sti
mov
add
call
repz
lock
bound
cmp
xchg
or
inc
or
ins
shl
mov
outs
jge
(bad)
(bad)
das
fmul
loopne
jo
cld
nop
je
dec
test
test
loop
test
mov
xchg
or
push
jl
out
and
push
xchg
cdq
stos
sar
lds
cmc
sar
(bad)
arpl
and
aaa
cmp
and
test
sub
lock
inc
repnz
xor
jmp
cmc
sub
call
repnz
cdq
fdivr
and
iret
sub
repnz
inc
scas
jge
dec
xchg
out
xor
lods
xchg
sub
popa
call
loope
stos
xor
or
arpl
push
fnstsw
and
or
xchg
sub
fdiv
pushf
loope
xchg
mov
pop
adc
fstp
xor
ins
(bad)
(bad)
retf
div
add
pop
lea
or
jae
or
outs
ret
pop
pop
lods
int
lahf
call
imul
push
jns
jno
fdiv
cmc
push
cmc
out
or
aas
pop
mov
jmp
int3
jae
inc
xor
inc
xor
add
repz
sub
mov
gs
stos
xor
mov
mov
int
sbb
jp
sub
or
add
inc
dec
dec
(bad)
dec
popf
or
xchg
sahf
out
mov
mov
or
xlat
cwde
mov
addr16
in
adc
iret
ins
inc
sti
repz
mov
jb
adc
in
loopne
jmp
add
lea
mov
stos
ins
dec
mov
xor
push
dec
popf
lea
enter
jl
or
imul
add
jmp
push
push
sbb
jns
lods
jecxz
loope
mov
sahf
dec
iret
pop
xor
adc
es
sbb
stc
jae
outs
daa
(bad)
loopne
jo
int
jns
(bad)
jecxz
aas
movs
ds
cmp
xchg
xchg
sub
in
sub
and
rcl
neg
sub
push
pop
ins
rol
enter
cwde
stos
dec
dec
in
loop
adc
sbb
mov
inc
mov
fsubr
jl
call
outs
xchg
and
jecxz
xlat
push
fldcw
aas
add
adc
add
push
or
inc
test
xor
cmp
jb
cwde
stc
sub
adc
xchg
les
jmp
cld
dec
pop
add
imul
mov
push
and
cmc
out
movs
test
loope
sub
dec
and
mov
test
std
movs
(bad)
fdivr
test
cli
sub
popf
xchg
arpl
shl
stc
cmp
inc
push
jmp
outs
lods
push
retw
add
in
or
ja
pushf
popf
push
retf
(bad)
and
scas
icebp
push
sub
mov
pop
add
rcl
stc
dec
jge
loop
sub
movs
add
cli
adc
dec
inc
ficomp
nop
cmp
xchg
sub
push
xchg
xchg
dec
cdq
cld
cmps
scas
out
xor
inc
inc
dec
in
outs
push
lds
movs
es
mov
xor
dec
mov
ficomp
or
inc
cli
and
lock
or
jle
not
cmp
pop
push
or
call
pop
xor
ret
(bad)
lock
mul
in
xor
cmps
mov
dec
or
ds
repz
gs
mov
jp
sar
sbb
push
inc
lahf
inc
call
sub
int3
add
ja
mov
(bad)
sbb
outs
mov
popa
test
sub
jnp
in
sar
add
lea
push
xchg
jo
in
sub
sub
inc
push
imul
sbb
ins
jp
in
aas
add
jb
push
jmp
aam
jl
inc
stos
es
fsubr
arpl
call
sub
pop
cmp
not
outs
push
jp
and
mov
add
ret
lahf
jmp
mov
cmps
mov
mov
mov
push
popa
inc
cdq
mov
(bad)
lods
push
adc
sub
retf
inc
mul
ins
pop
jl
push
adc
cs
and
aam
sub
xchg
pop
rol
in
ror
push
jbe
cmp
mov
cli
adc
push
enter
inc
xchg
jl
jecxz
cmc
pop
pop
hlt
repz
jecxz
ret
xor
jns
or
and
cmp
ret
inc
xor
sbb
sbb
mov
js
sub
data16
std
xchg
enter
retf
or
sub
in
mov
repnz
stc
cmp
mov
push
xor
nop
ds
iret
enter
fdiv
push
push
push
lods
std
shl
imul
push
lods
and
and
scas
movs
mov
je
bound
fldcw
cmp
ret
lods
aam
test
pop
jge
sub
bound
cmps
cmp
(bad)
mov
pop
inc
jl
mov
or
jmp
(bad)
div
xlat
or
iret
add
repnz
ror
adc
inc
sbb
and
retf
push
mov
push
xchg
jae
adc
out
popf
mov
jge
jns
mul
jno
push
mov
call
es
or
sub
(bad)
scas
adc
outs
jmp
je
mov
adc
popa
pop
push
sub
jp
es
sahf
les
cmp
pop
xchg
push
iret
lock
fs
rcr
mov
dec
jge
arpl
cld
xchg
repnz
add
loop
add
jae
push
es
movs
ror
pop
mov
dec
push
scas
jns
mov
inc
out
scas
fmul
imul
scas
ins
xor
mov
ja
pop
inc
bound
ret
test
sub
xor
not
addr16
data16
mov
or
pop
fwait
inc
and
xor
sti
adc
outs
mov
mul
retf
and
jnp
ret
pop
ja
mul
sar
cmp
xor
ss
push
lock
and
pop
inc
outs
adc
mov
aaa
sbb
pop
sti
mov
jnp
jbe
adc
cmps
pop
jge
outs
enter
add
jg
out
in
mov
(bad)
shr
pop
mov
std
mov
or
jmp
ss
les
inc
shl
add
pop
cmp
mov
ror
pop
pop
scas
mov
xor
nop
xlat
adc
and
scas
addr16
push
stc
rol
setle
push
dec
and
mov
or
cs
imul
xchg
or
jne
adc
and
lahf
pop
pusha
dec
sub
and
xor
dec
mov
loope
mov
mov
sub
mov
ds
ss
mov
sbb
xchg
test
cwde
sub
jecxz
cmp
push
xor
inc
dec
push
push
cmp
pop
xor
fistp
xchg
es
pushf
cmps
jno
fld
jl
mov
inc
cmp
xor
popa
dec
out
outs
pop
not
loop
mov
test
movs
mov
loopne
stc
inc
es
mov
jmp
mov
lods
and
xor
mov
leave
ins
outs
mov
jbe
cmp
(bad)
cmc
dec
in
dec
iret
rcl
xor
in
jb
adc
sbb
loop
data16
je
sbb
xchg
sub
sub
movs
jle
cmp
fistp
sub
(bad)
sbb
xchg
bound
mov
jo
cmc
and
(bad)
jo
in
inc
sub
add
mov
test
pop
scas
jbe
push
in
aam
ins
adc
jl
xchg
sub
int
xchg
sbb
pop
inc
or
(bad)
stos
jbe
add
mov
cmps
xchg
fistp
xchg
fmul
arpl
inc
push
lds
pop
(bad)
fisubr
cmp
(bad)
mov
(bad)
push
pushaw
cwde
cld
fld
jmp
aas
sar
cwde
aam
mov
push
cmp
and
push
into
jg
xor
inc
dec
dec
inc
imul
inc
lahf
mov
arpl
pop
retw
cmps
inc
push
fdiv
xor
sbb
pop
sub
adc
xchg
inc
mov
shr
cmp
cld
inc
mov
int
dec
fsin
repz
test
dec
inc
jmp
mov
and
out
pop
dec
fmul
pop
loopne
pop
fld
mov
or
(bad)
mov
gs
dec
out
xor
in
jmp
add
cli
ds
mov
fadd
jbe
push
jp
jbe
or
and
cmp
retf
fsub
dec
xchg
ss
mov
dec
out
pusha
push
sar
(bad)
int
stos
imul
mov
(bad)
jp
push
adc
or
push
das
and
mov
pop
cmp
adc
cs
or
cld
pop
aad
aas
sbb
cmp
mov
mov
mov
dec
adc
push
pop
and
xor
mov
je
xor
std
stos
or
imul
pushf
out
mov
sub
cmp
mov
mov
inc
mov
mov
add
std
and
push
out
test
ds
jns
push
inc
sub
outs
mul
dec
dec
adc
lods
rol
idiv
push
ds
sub
or
inc
lods
(bad)
(bad)
sti
inc
loopne
add
xor
mov
scas
mov
popf
mov
cwde
addr16
and
cli
adc
xchg
stos
pop
mov
int
mov
stc
and
inc
cmc
jo
cmp
sub
cwde
add
jecxz
cmps
mov
push
pop
push
dec
pop
dec
xchg
xchg
hlt
leave
cmp
adc
inc
cmp
push
cmp
aaa
ss
sbb
fmul
and
jl
mov
cmp
xchg
out
jbe
stos
mov
inc
aam
test
lock
das
mov
mov
mov
retf
std
sub
dec
outs
pop
lahf
xor
call
push
mov
in
sub
popa
inc
dec
cmps
pop
pop
push
jmp
inc
lds
jge
stc
sub
mov
push
and
push
rcr
shl
sub
push
or
les
ins
push
das
ss
cmc
pop
aam
or
pop
xchg
xchg
sbb
jge
ret
fistp
dec
cmp
mov
out
inc
pushf
pop
out
xor
adc
pop
int3
sub
sbb
ja
call
addr16
jle
jne
sbb
dec
ds
jnp
lods
mov
mov
adc
jg
xor
add
pop
sub
sbb
lods
movs
jne
lods
sbb
int3
ss
lock
mov
pop
ret
ficomp
mov
dec
dec
cmps
xor
out
mov
pop
fdiv
inc
pop
in
inc
mov
hlt
in
jmp
repz
pusha
mov
pop
cmc
jns
push
mov
lds
sbb
cmps
jnp
xchg
cmc
fadd
loopne
fcom
or
mov
call
mov
cmp
cdq
shl
imul
jp
pop
jne
in
adc
jne
add
inc
std
jb
jo
ret
xchg
leave
xor
push
xchg
lods
jp
sub
clc
push
jnp
je
push
dec
or
sub
jge
or
stc
(bad)
fidivr
ins
loop
cmp
call
pop
push
add
mov
xchg
add
inc
inc
in
mov
test
ds
repz
nop
pop
scas
jle
adc
cmp
cmp
bound
scas
retf
jge
cmp
cwde
pop
pushf
hlt
jb
fst
pop
mov
stos
in
cmc
xor
(bad)
sub
imul
js
bound
mov
dec
inc
sbb
or
sub
push
clc
scas
dec
test
xchg
(bad)
ds
mov
out
idiv
adc
int3
inc
es
jg
sub
dec
loopne
jmp
(bad)
xchg
rcl
xchg
enter
sbb
mov
dec
or
leave
add
push
sar
sub
dec
dec
inc
fldcw
sbb
xor
jg
rol
adc
cmp
sti
sub
int
mov
sub
mov
sub
dec
and
lea
or
fisubr
jnp
pop
mov
sti
xor
data16
push
lods
fiadd
loope
icebp
lds
push
cmp
data16
pop
pop
mov
add
addr16
dec
sbb
stos
loop
jge
push
lods
test
dec
sub
sbb
lds
fild
push
dec
cmps
shl
test
sbb
(bad)
jmp
and
je
cdq
jns
out
rcr
data16
fwait
int
adc
test
cmp
adc
test
int3
iret
or
sbb
xor
cmp
jbe
pushf
and
dec
jmp
push
and
icebp
call
xor
jbe
aas
inc
addr16
rcr
and
cmp
mov
popa
arpl
in
jge
xor
fsub
retf
(bad)
fdivp
lock
stos
fwait
loopne
scas
push
xor
ins
xor
stos
mov
mov
call
(bad)
jns
mov
lods
pop
leave
inc
inc
sub
enter
(bad)
adc
mov
xor
hlt
xchg
sbb
in
xchg
adc
pop
mov
inc
fnsave
neg
mov
xchg
out
lods
xchg
int3
fwait
xchg
leave
(bad)
pop
loopne
movs
or
scas
ins
sti
shr
push
in
loopne
mov
mov
jo
loope
fiadd
sub
loop
mov
(bad)
xchg
or
fs
nop
pushf
pop
stc
xchg
repz
dec
inc
mov
cmps
aaa
stc
int
sbb
push
push
add
cwde
mov
jge
add
std
out
and
test
mov
aaa
shl
scas
add
imul
lahf
(bad)
loopne
in
cmc
fwait
jbe
xchg
and
or
inc
fstp
jbe
sbb
aam
ffree
ins
dec
and
jmp
cmps
adc
int3
cmp
or
xor
int
jmp
pop
popa
lds
dec
popf
xor
data16
cmp
xor
push
imul
push
sub
adc
test
hlt
jns
inc
fsin
inc
pop
fadd
add
das
out
data16
lds
fdivr
(bad)
lods
mov
lods
push
outs
xchg
mov
mov
pop
popa
mov
add
mov
push
rcl
mov
push
(bad)
clc
loopne
lods
sbb
jno
stc
stos
dec
push
movs
sbb
or
adc
ret
mov
das
div
popa
sub
adc
jmp
push
mov
xchg
ss
test
add
pop
ins
iret
out
mov
pop
pop
stc
inc
call
xchg
imul
pop
and
xchg
jnp
out
jp
push
push
scas
inc
sub
inc
adc
xchg
mov
fdivr
add
push
jno
fcmovnb
enter
leave
fistp
ins
add
lds
retf
push
movs
push
inc
cwde
sub
cmp
push
sbb
pop
xor
sbb
pop
cmp
aas
jecxz
jmp
repz
sub
sbb
mov
mov
in
mov
std
cmp
cld
add
and
addr16
cmp
pop
jmp
imul
call
xor
sbb
movs
pop
xor
xlat
jnp
scas
jmp
repz
test
mov
enter
fnsave
dec
inc
repz
cmc
pop
repnz
je
sbb
js
outs
sbb
jge
ss
mov
cwde
push
scas
sub
jle
mov
int3
or
lock
dec
mov
dec
popf
xor
dec
(bad)
adc
ins
cmp
dec
xchg
je
xchg
fmul
js
popa
xor
loop
or
nop
outs
sbb
imul
test
mov
les
dec
sub
scas
mov
mov
xchg
les
pop
(bad)
rcl
sub
fs
movs
xchg
or
addr16
sub
fsub
pop
call
mov
xlat
mul
js
mov
push
scas
jle
js
jbe
loop
xchg
pop
stos
imul
sar
out
(bad)
pop
in
cmp
and
pop
adc
inc
pushf
add
xor
mov
shl
inc
adc
paddw
and
mov
leave
push
into
sub
fcmovb
xor
inc
es
dec
out
pop
mov
addr16
inc
das
cmps
xchg
push
es
stos
out
push
mov
je
pop
not
sub
adc
or
push
xchg
dec
mov
xor
mov
dec
mov
aas
fmulp
(bad)
push
mov
cmc
xor
iret
out
ins
popa
lods
cli
loop
test
sub
cmp
and
pop
or
jmp
cs
mov
or
ss
or
arpl
fld
push
jb
add
jb
push
or
jne
scas
loopne
pop
mov
and
ins
fwait
gs
sbb
test
mov
mov
fdiv
sti
xchg
and
bound
adc
shl
add
jecxz
int3
movs
arpl
xor
lods
repnz
sub
loope
leave
pushf
push
cmp
mov
movs
add
xchg
les
cmp
lahf
into
test
test
xchg
div
aaa
out
pop
loope
cmp
xor
dec
sbb
lds
loopne
jo
test
fnstenv
inc
fs
push
xor
je
push
jb
arpl
jmp
movs
mov
outs
xor
xchg
and
push
and
mov
adc
dec
(bad)
cmp
pop
and
sar
dec
(bad)
xor
lods
add
jmp
mov
shl
push
push
pop
sbb
mov
cmp
mov
mov
(bad)
jl
pop
icebp
jne
mov
jp
ret
push
cmp
(bad)
mov
push
icebp
dec
sti
mov
push
mov
adc
mov
icebp
or
mov
jmp
mov
pop
ret
(bad)
jl
jl
cmc
in
push
inc
in
xchg
scas
arpl
add
dec
mov
nop
movs
movs
int
push
or
xor
icebp
pop
jl
rcr
ins
or
sub
iret
add
out
out
jns
mov
call
xor
xor
sti
sub
push
jecxz
std
jb
das
jae
aaa
mov
pop
cmp
pushf
jmp
jl
push
xor
int
inc
jecxz
dec
cld
pop
test
xchg
push
jb
mov
mov
cmc
and
aaa
inc
test
(bad)
cmps
or
xor
in
test
jmp
mov
outs
les
mov
leave
daa
cdq
adc
js
inc
ja
mov
pop
dec
or
xor
xor
mov
jg
loop
dec
sub
fimul
gs
or
xlat
xchg
mov
cld
das
xor
push
cdq
dec
ret
mov
int3
call
xor
mov
jo
pop
clc
sub
cmc
add
es
ret
jmp
cmc
idiv
imul
inc
out
shl
icebp
mov
stos
xchg
mov
in
data16
add
fisttp
leave
xor
ror
(bad)
sbb
aam
call
out
jle
pop
mul
repz
cwde
jmp
loopne
or
xchg
iret
and
add
lahf
test
add
sub
dec
adc
scas
call
and
mov
std
outs
mov
cmp
retf
cmc
je
mov
fst
ror
jo
mov
test
(bad)
in
and
enter
cdq
lock
cmp
outs
ins
shl
sahf
sub
(bad)
fidiv
setnp
cmp
std
stc
arpl
scas
xchg
sub
mov
pop
and
jae
aaa
out
imul
iret
shl
push
stos
mov
push
fidiv
scas
cmps
inc
ins
(bad)
stos
sub
mov
int
sti
mov
xchg
bound
in
ins
mov
mov
sub
dec
xor
dec
jl
pop
cmps
sub
or
loop
les
test
es
mov
iret
xor
adc
imul
lea
(bad)
lds
mov
lock
mov
stc
leave
mov
cmp
(bad)
cmc
xchg
push
fcom
scas
pop
push
or
in
sahf
xor
jmp
fwait
sbb
fisubr
push
cmp
ret
shr
inc
mov
popf
in
wbinvd
ins
ins
cmp
jbe
jae
mov
push
adc
popf
mov
xchg
aam
test
xchg
into
dec
fst
inc
rep
ss
out
and
js
jp
mov
call
not
push
add
jae
test
pop
and
popf
loop
adc
pop
shl
add
popa
test
enter
lahf
inc
int3
adc
sbb
push
pop
test
cmp
add
(bad)
or
leave
mov
div
adc
hlt
adc
sub
add
mov
sub
(bad)
sbb
inc
stc
(bad)
icebp
inc
retf
jl
in
stc
push
dec
out
or
mov
push
jp
lods
pop
(bad)
ja
test
jne
adc
ret
into
pop
dec
es
out
popa
or
dec
ins
mov
jae
outs
mov
or
fwait
shl
dec
xchg
(bad)
sbb
jno
mov
ret
cmp
pushf
sub
test
nop
ficom
add
xlat
scas
sbb
add
sub
jg
inc
fwait
xchg
xchg
mov
xchg
push
je
das
mov
call
leave
stos
mov
(bad)
js
stos
pop
call
icebp
inc
in
ja
inc
in
sbb
loope
dec
pop
sti
push
cdq
jnp
cmp
pop
out
sbb
push
inc
imul
cmp
cs
pop
cmp
es
lods
mov
test
sbb
push
xor
xchg
push
out
mov
out
fs
jge
xchg
enter
pop
(bad)
push
dec
sbb
sbb
or
push
cmp
paddw
adc
push
pusha
dec
mov
sbb
ins
ss
jl
out
mov
dec
push
xchg
jle
mov
mov
pop
mov
and
pushf
push
xor
fdiv
stc
fs
cs
cmp
push
sub
imul
fwait
in
rol
sub
jmp
aad
cwde
test
cwde
es
cdq
xor
mov
mov
inc
ds
js
jnp
lods
adc
pusha
test
add
daa
out
xbegin
xchg
fimul
sbb
sub
test
jmp
cmp
cmp
popa
mov
imul
or
push
sub
lods
xchg
retf
pop
push
rcl
sub
mov
rol
or
es
fistp
fmul
push
mov
fwait
hlt
dec
mov
xchg
shl
mov
lods
mov
mov
and
cmps
shr
jb
out
pop
stos
mul
pop
pushf
mov
mov
sbb
int
fidivr
pop
pop
sub
sub
pop
and
jo
push
stos
sub
loopne
scas
enter
fwait
inc
adc
ss
jo
push
ficom
add
in
mov
mov
or
stos
jmp
not
enter
fsub
js
clc
push
enter
push
inc
sub
je
adc
dec
je
cli
adc
movlps
call
clc
imul
xlat
xchg
in
jge
push
div
iret
arpl
std
push
mov
and
fwait
cmp
mov
rcl
fsubr
repnz
xchg
(bad)
mov
xor
pop
or
test
and
mov
inc
movs
mov
sub
retf
and
ins
sbb
cmp
xor
sbb
mov
jge
clc
int3
mov
jns
or
pop
and
jmp
jb
into
cmps
push
sar
clc
mov
adc
cli
shl
jnp
pop
sahf
es
stos
daa
adc
inc
push
scas
and
sti
cdq
cmp
iret
cmp
adc
mov
push
cs
sbb
or
mov
sub
(bad)
sbb
inc
shr
retf
dec
adc
stc
int3
sbb
sub
aas
stos
mov
adc
pop
mov
mov
add
sub
out
xchg
push
stos
sub
aas
pushf
mov
fnstsw
retf
out
sbb
sahf
mov
pop
jno
fyl2xp1
pop
dec
fndisi(8087
repz
pop
adc
sbb
dec
scas
lods
xlat
rcl
push
mov
fsubr
sbb
sbb
aad
call
les
imul
mov
movs
mov
sub
xor
inc
mov
out
adc
in
ret
(bad)
dec
push
cmps
dec
jmp
stos
imul
movs
repz
xor
aam
aam
lds
ret
pop
stos
fld
shr
jle
je
inc
jmp
adc
data16
out
movs
std
mov
pop
mov
dec
dec
test
pop
out
push
and
loope
mov
dec
cmps
and
push
pop
bound
push
lea
(bad)
adc
mov
bound
lahf
inc
stos
inc
pop
pop
jg
mov
mov
jl
fdivr
cwde
sbb
mov
xchg
adc
test
out
mov
call
dec
xchg
jbe
and
aaa
xor
pop
and
mov
dec
imul
pop
push
xchg
dec
mov
add
push
push
adc
sbb
stos
adc
adc
cli
jmp
inc
mov
aad
(bad)
cwde
imul
or
mov
sti
jmp
or
push
js
inc
sahf
loop
inc
std
xchg
in
(bad)
inc
pop
fld
add
bnd
in
add
aaa
into
adc
outs
xchg
gs
xor
popf
mov
inc
jmp
retf
xor
ins
sub
(bad)
and
repnz
cmc
shl
popa
outs
inc
dec
out
sbb
jae
imul
rcr
call
pop
scas
ins
sub
adc
sub
imul
mov
mov
xor
(bad)
xchg
or
xchg
int
inc
pop
int
das
in
and
mov
mov
pop
jne
lea
ins
loop
xor
add
mov
pop
iret
push
das
jae
xor
or
xchg
int3
pop
in
pop
inc
cmps
push
cmps
sahf
push
test
add
push
xor
movs
or
test
push
cld
scas
int3
add
imul
push
je
dec
(bad)
adc
lods
mov
xchg
scas
mov
or
cmp
push
(bad)
int3
js
mov
cmp
lds
mov
and
hlt
push
xchg
daa
fld
jb
mov
imul
push
push
fwait
xchg
daa
pop
idiv
cmp
aam
cmp
jl
sub
test
xor
xchg
cli
mov
leave
repnz
xchg
push
add
std
int3
inc
test
pop
sub
mov
push
stc
cmp
iret
mov
int3
sub
ds
cmp
sbb
out
jecxz
dec
add
lods
jmp
push
add
inc
in
pop
call
cmps
je
dec
repz
jns
repz
ins
leave
inc
add
xlat
out
adc
mov
dec
jne
sub
mov
dec
mov
aad
and
mov
lahf
test
xchg
outs
stc
aaa
les
pop
push
aaa
test
ins
add
and
push
xchg
xchg
sub
retf
fwait
push
mov
xchg
lds
popa
dec
mov
inc
xchg
ss
pushf
es
ja
and
push
imul
mov
inc
pop
xor
pop
dec
imul
dec
jne
mov
das
ins
sub
push
mov
inc
cmp
xchg
lods
push
dec
in
(bad)
xchg
sub
push
add
dec
lahf
adc
in
pop
js
xchg
push
cdq
add
add
into
dec
jmp
mov
lea
sbb
ja
ret
add
inc
dec
retf
dec
lds
(bad)
xlat
fidiv
sub
(bad)
and
add
pop
fmul
mov
cmc
pop
ja
cli
xchg
sub
loop
add
ror
jle
dec
fdivp
push
and
pop
push
sti
sbb
xchg
cmp
sbb
pop
repnz
leave
clc
xor
sub
sbb
xor
enter
jo
xchg
push
hlt
sub
stos
lahf
xchg
pop
and
push
rol
xor
cmps
clc
std
inc
pusha
out
xchg
jnp
loope
in
pushf
mov
and
push
push
pusha
adc
aas
mov
mov
push
inc
(bad)
mov
jns
loope
sahf
sar
mul
mov
bound
mov
mov
and
popa
or
lods
retf
imul
mov
js
pop
retf
gs
in
retf
aas
mov
jl
cwde
ret
es
add
outs
or
dec
push
scas
shr
sub
dec
jmp
mov
adc
arpl
mov
push
loopne
pop
dec
jno
add
out
or
bound
adc
inc
xor
js
xchg
adc
push
adc
daa
and
call
pop
gs
test
ins
dec
xor
mov
loop
(bad)
(bad)
(bad)
mov
test
test
in
repnz
nop
loop
shr
fld
ja
push
jne
imul
inc
pop
push
into
rol
adc
jbe
and
hlt
clc
xchg
lds
je
xchg
mov
ss
imul
jno
pop
icebp
mov
in
mov
int3
pushf
sub
and
fsubrp
xchg
jb
jbe
imul
lea
jp
push
loopne
(bad)
mov
cmp
fadd
xchg
je
mov
imul
lock
stos
jl
retf
xchg
inc
aaa
sbb
retf
repz
mov
push
shr
aad
out
inc
xor
and
sub
pop
shrd
shl
fs
das
push
cli
pop
fs
test
test
into
fsubr
repnz
xchg
test
mov
adc
outs
jbe
jge
arpl
ret
and
pop
mov
jle
add
and
xor
mov
fldcw
iret
repnz
mov
mov
retf
push
sbb
fcomp
sbb
ror
jp
mov
inc
fadd
mov
mov
(bad)
adc
sub
add
not
mov
(bad)
mov
xor
pop
(bad)
clc
outs
cs
adc
push
and
clc
jnp
pusha
in
popa
inc
mov
outs
fldcw
dec
pop
rcl
(bad)
pop
dec
sub
cmp
xor
aaa
out
aad
dec
mov
jae
fucomip
fwait
loopne
lods
int3
mov
icebp
or
test
dec
shr
mov
mov
(bad)
jl
dec
repz
bound
les
call
loop
add
scas
shl
adc
call
daa
add
fsubr
mov
in
inc
jno
imul
jb
ins
in
lahf
test
xor
cmp
(bad)
call
cli
mov
nop
popf
mov
inc
mov
pop
xchg
fs
lods
sub
lds
and
outs
arpl
jbe
inc
dec
inc
push
dec
and
adc
mov
popa
push
and
in
cmp
pop
xor
xor
jl
ins
jno
mov
iret
add
or
dec
stos
bnd
cld
(bad)
cdq
inc
outs
push
shr
push
shl
pop
push
(bad)
mov
sahf
add
neg
imul
std
repz
cmp
add
push
jle
mov
sub
cmp
cmp
dec
xchg
mov
and
sub
fwait
xor
push
fisub
inc
lods
cmps
dec
stos
add
dec
cmc
imul
cmc
inc
adc
aam
std
ret
dec
test
xchg
mov
jge
cwde
add
bnd
push
inc
mov
arpl
fsubr
and
stc
xor
sbb
jne
push
rcr
push
sbb
or
cmp
ret
mov
xchg
outs
int
or
jbe
ins
fs
cmp
movs
xchg
cld
dec
js
(bad)
cmc
ins
bnd
lods
aaa
sbb
cmp
loopne
and
cld
je
mov
sub
call
or
jo
push
jno
add
xchg
call
push
ins
sbb
fcom
xchg
mov
mov
mov
sub
mov
stos
out
jb
ret
adc
mov
push
outs
adc
dec
paddsw
scas
mov
or
aad
arpl
pop
mov
(bad)
sbb
pushf
iret
push
aas
push
xchg
sub
int
xor
mov
sub
or
xchg
xor
movs
repnz
cmps
add
jno
adc
stc
shl
inc
(bad)
(bad)
jnp
aam
jne
dec
pop
push
test
sub
or
popa
pop
add
jle
out
fld
test
ds
(bad)
ficomp
ja
scas
lahf
sbb
add
pop
(bad)
xchg
sub
out
pop
daa
ins
xchg
add
ja
adc
mov
jl
adc
or
jmp
ins
lds
sbb
dec
push
cmps
mov
shl
push
pop
mov
push
outs
xchg
adc
xor
(bad)
scas
in
jg
sbb
mov
xor
nop
fild
sub
mov
addr16
and
fstp
stc
je
cwde
dec
ffreep
gs
jmp
fmul
repnz
or
xor
push
(bad)
xchg
daa
push
adc
xchg
in
lahf
test
dec
push
dec
gs
pop
das
sub
and
push
push
mov
cdq
push
cmp
icebp
arpl
dec
mov
sub
outs
pop
out
les
jg
out
or
xchg
pop
cmp
xor
js
sub
jmp
mov
std
or
pop
out
rcr
sub
and
sub
aam
ds
test
out
and
fwait
dec
leave
div
movs
cld
cld
and
push
int
fwait
in
pop
retf
push
pop
iret
inc
sub
push
dec
adc
mov
xchg
sub
pop
mov
les
adc
mov
cmc
icebp
sub
and
or
or
push
mov
cld
fldenv
repz
cmp
jle
(bad)
mov
imul
daa
mov
out
push
or
(bad)
mov
jnp
lods
imul
xchg
loope
ror
and
(bad)
(bad)
les
lods
pushf
inc
cmp
mov
mov
faddp
sub
sbb
stos
jno
fadd
(bad)
fsubr
or
fwait
dec
cwde
push
hlt
inc
outs
cs
sub
rol
sbb
sbb
pop
outs
xchg
call
pop
shl
(bad)
rcr
aad
mov
ins
fsub
pop
outs
call
xchg
jo
(bad)
cmp
pop
sbb
dec
call
adc
xchg
ficomp
jne
ror
call
(bad)
mov
fsubr
int
mov
mov
mov
jne
add
sahf
mov
lock
loopne
sub
xor
(bad)
xor
arpl
sub
cmps
call
icebp
fs
(bad)
sbb
fidiv
adc
adc
retf
mul
push
nop
jbe
mov
mov
gs
dec
jmp
addr16
mov
das
add
inc
push
cmc
xchg
shl
stos
mov
retf
fmul
sbb
xor
repz
ins
jp
adc
pop
mov
pop
cmp
rol
cmps
in
aaa
mov
sahf
cmp
xchg
xchg
and
shl
jp
add
clc
sub
pusha
adc
dec
jae
jle
and
ret
sub
push
xchg
push
xchg
dec
or
dec
daa
gs
push
lods
jbe
cwde
push
xchg
fisubr
adc
jne
loop
call
(bad)
mov
imul
and
dec
bswap
shr
jnp
scas
adc
add
ja
ds
adc
push
ret
pop
xor
push
sbb
icebp
pop
mov
lods
outs
adc
rcr
ins
sbb
push
les
mov
aas
jmp
cli
push
inc
popa
(bad)
push
popa
push
push
pop
push
jo
xchg
jmp
call
sar
pop
inc
ins
gs
ror
fadd
scas
cmp
into
hlt
push
add
mov
pop
out
jg
sahf
stos
sub
jle
aam
push
(bad)
cwde
dec
xorps
pop
jge
fwait
scas
jnp
ror
mov
and
xor
mov
shl
imul
loope
xchg
pop
push
int
add
jp
cdq
loope
cdq
ret
lock
xor
push
fbstp
cld
push
aam
cmps
test
or
dec
loope
inc
inc
(bad)
sub
cmps
fs
lea
(bad)
xchg
bound
inc
cmp
fsubr
out
xor
mov
stos
inc
pop
jmp
test
inc
jne
push
dec
int3
cmp
je
push
adc
lahf
mov
dec
sti
fdiv
inc
ret
dec
les
sahf
inc
push
pop
je
mov
aaa
arpl
fidivr
fnstsw
out
jbe
push
mov
mov
mov
pop
inc
in
repnz
movs
retf
lods
add
sbb
xchg
scas
sbb
lahf
pop
mov
imul
add
add
jle
xor
push
dec
xchg
aad
jo
cmp
sbb
push
(bad)
pop
fist
(bad)
cmp
addr16
inc
retf
cld
out
hlt
or
fcmove
fxch
adc
iret
mov
and
push
lahf
fiadd
sbb
pusha
hlt
mov
imul
test
or
popf
pop
js
dec
or
mov
and
sub
push
nop
ja
data16
push
mov
cmp
pushf
sbb
(bad)
inc
cdq
mov
retf
mov
inc
jmp
mov
rol
xchg
mov
sbb
mov
or
xchg
test
mov
fimul
out
dec
push
out
call
(bad)
movs
fldcw
enter
jb
and
adc
stc
mov
out
push
xchg
out
imul
ja
inc
xor
dec
xchg
sbb
jns
fdiv
pop
lock
sahf
push
sbb
dec
(bad)
or
loop
or
cwde
rol
cli
push
and
mov
jp
int
(bad)
cli
xchg
icebp
aam
retf
adc
jecxz
(bad)
fucomi
push
push
enter
call
in
xor
pop
pop
mov
std
lods
push
pop
call
push
or
call
sar
cmps
push
in
aam
push
xchg
fcom
mov
jb
stc
or
pop
sbb
push
dec
jge
push
cmp
and
cmp
dec
sub
aam
mov
setl
mov
in
das
(bad)
mov
in
xor
xor
ins
jns
ds
loope
bound
stos
pop
movs
cli
add
jge
cwde
mov
jne
pusha
push
fsub
adc
sub
out
jmp
cmps
and
ja
cs
mov
sub
movs
fstp
cmps
mov
push
cmp
setne
cmp
in
jae
dec
sbb
(bad)
cmp
pop
out
push
aam
repz
xlat
push
and
cmp
lds
das
inc
ja
in
sti
lods
fcom
cmp
fmul
xor
jmp
xor
retf
lods
jle
into
dec
popf
pop
sti
pop
add
adc
inc
or
or
rcl
aaa
sub
add
shl
mov
mov
add
push
xor
and
and
mov
jl
or
scas
sbb
ss
and
add
sbb
repnz
jns
int
and
in
sti
retf
sub
idiv
jle
xor
inc
or
ds
repz
icebp
push
fs
adc
sub
and
adc
fsubr
or
add
inc
mov
push
xchg
popa
ficomp
stc
stc
mov
xlat
aad
mov
sbb
or
loopne
add
je
shl
rcl
test
push
xor
std
inc
popf
lock
mov
jle
test
push
pop
ss
std
cli
dec
jbe
std
dec
nop
mov
call
push
and
xchg
(bad)
inc
sbb
cmp
sar
rcl
xor
call
lods
pop
adc
add
fimul
out
push
cmp
mov
fimul
dec
xchg
sbb
ss
(bad)
xor
popf
mov
mov
leave
jns
push
dec
xchg
mov
dec
pop
xchg
maskmovq
mul
out
xchg
sbb
push
sar
std
pop
mov
jb
ins
ja
jnp
in
enter
cmp
ret
repnz
sbb
(bad)
push
fxch
shl
mov
mov
adc
in
daa
push
lods
cmp
sub
cmovg
retf
or
xchg
push
jg
inc
pop
jae
fdivr
pop
add
daa
jmp
add
call
dec
or
dec
sub
sbb
push
sub
ret
mov
stc
imul
dec
retf
mov
sti
cmc
imul
aaa
add
addr16
and
inc
and
add
mov
and
xchg
xchg
inc
or
popa
(bad)
and
popf
xor
icebp
outs
enter
ss
clc
xchg
fisttp
rol
and
jne
jne
lods
scas
aam
fsub
cmp
xor
pop
xor
out
or
fcom
adc
nop
lock
enter
pop
(bad)
sbb
(bad)
and
push
in
sub
xor
cmp
xchg
add
mov
sbb
pop
mov
push
ror
movs
push
pop
xor
push
jl
mov
xlat
inc
dec
push
imul
shl
dec
push
adc
mov
add
out
fwait
mov
out
hlt
pop
push
jmp
in
add
call
xchg
push
bound
out
and
aad
shl
pop
adc
inc
je
mov
loopne
sub
adc
rcr
pop
sbb
imul
je
inc
pop
jmp
or
(bad)
xchg
pop
cmp
scas
outs
dec
popf
mov
test
or
add
popf
nop
shl
stc
(bad)
out
dec
pop
jl
fimul
jno
lds
jmp
out
jge
(bad)
retf
mov
xchg
mov
daa
xchg
int3
jg
cmp
and
popf
and
sbb
push
rcr
mov
mov
mov
neg
arpl
stos
iret
cmp
push
fidivr
push
adc
mov
sti
adc
push
mov
cmp
rcr
scas
sub
push
xchg
dec
add
jne
js
out
jb
xor
inc
adc
xchg
mov
sbb
mov
mov
adc
or
gs
cmps
pop
pop
gs
lock
dec
inc
(bad)
in
or
fxch
sbb
xchg
mov
cwde
inc
pop
out
mov
movs
dec
dec
adc
repnz
mov
(bad)
iret
and
call
jae
add
xchg
xor
mov
cmp
mov
ds
arpl
int
inc
pop
test
ins
jmp
cli
adc
xchg
movs
add
mov
cwde
(bad)
sti
clc
cmps
scas
fwait
pop
das
sub
and
xchg
cwde
mov
gs
sub
les
cs
inc
xor
cmp
xchg
pop
shl
pop
fucom
data16
je
retf
loopne
add
(bad)
xor
xchg
cmp
fiadd
imul
scas
test
xor
xor
jmp
lods
bound
lods
jge
dec
dec
ja
cmp
inc
xchg
dec
dec
aam
mov
(bad)
pop
mov
mov
aas
cmps
mov
in
push
sub
sti
dec
stos
frstor
dec
fstp
add
mov
fcom
sub
cli
pop
add
(bad)
inc
sub
and
imul
mov
shr
shr
dec
shr
mov
mov
mov
or
(bad)
jo
imul
and
int
jno
and
xor
scas
inc
shl
xlat
pop
jl
stos
hlt
and
scas
fild
in
push
xlat
mov
cli
ja
pop
jb
xor
sbb
scas
ins
jge
mov
xor
dec
out
cmp
fidiv
sti
gs
enter
push
shl
test
lods
pop
xor
mov
mov
jb
call
xlat
loope
push
xchg
and
fsubr
mov
sti
out
bound
cmp
(bad)
aam
jmp
mov
push
ja
stos
or
(bad)
es
sbb
aaa
out
and
nop
sbb
xor
sub
mov
xchg
test
or
popf
mov
inc
stos
ja
stc
jno
(bad)
fiadd
(bad)
test
cmp
dec
sbb
xchg
sub
leave
sbb
xor
repz
mov
iret
mov
stos
cld
push
pop
adc
scas
sbb
fiadd
jmp
push
dec
dec
mov
test
cmc
pop
pop
in
sbb
jo
xchg
pop
rol
(bad)
icebp
inc
out
ret
adc
fdivr
mov
xor
call
retf
lods
mov
mov
cmp
stos
leave
gs
jp
out
push
repnz
push
inc
std
dec
push
arpl
lods
outs
lahf
sub
inc
xor
push
outs
sahf
pusha
mov
mov
pop
retf
mov
mov
rcl
stc
pop
adc
fsub
xlat
fild
jmp
and
stc
adc
xor
ins
mov
and
push
lods
and
push
movs
push
push
push
movs
jns
mov
pop
jecxz
jp
push
fstp
jo
mov
xchg
cwde
dec
rcr
mov
icebp
rcl
aad
fistp
or
pop
xchg
sbb
fcomi
test
(bad)
mov
add
adc
seto
mov
add
add
sar
sub
(bad)
push
mov
push
mov
add
in
jp
or
pop
jle
clc
retf
test
repz
dec
and
in
add
cs
adc
mov
xchg
mov
loop
imul
sbb
arpl
mov
xor
jmp
mov
ins
and
aam
cmc
and
cli
xor
or
push
das
sub
jle
in
sbb
cs
mov
mov
adc
lods
in
or
mov
pop
inc
xchg
jae
dec
pop
cwde
adc
icebp
and
inc
call
sti
imul
jae
and
movs
fdiv
iret
xchg
aaa
xchg
movs
ret
or
mov
sar
and
inc
scas
int3
dec
mov
push
sahf
dec
(bad)
ins
jo
add
ja
enter
adc
scas
push
push
repz
jp
mov
dec
pushf
pop
cmc
mov
and
pop
test
loop
cmc
dec
pop
add
push
hlt
push
pop
fbld
inc
ret
jnp
sbb
xor
add
bound
jns
push
shl
fwait
pop
or
rcl
sbb
aaa
add
xchg
mov
dec
mov
jge
mov
ret
adc
inc
xor
jmp
mov
mov
sbb
sbb
xor
aad
mov
sub
ja
fdivr
jmp
scas
cmp
xor
repnz
ins
xchg
in
add
movs
xchg
mov
aaa
pop
mov
jb
push
int
cmp
imul
cdq
jl
xchg
(bad)
rol
movs
in
mov
sbb
push
cmp
(bad)
sbb
jae
jl
pop
test
jmp
js
aam
mov
stc
in
js
gs
lds
or
aad
and
sbb
nop
int
dec
or
clc
xlat
stc
(bad)
mov
retf
bndldx
lock
xchg
pusha
pushf
add
cs
call
repnz
adc
hlt
or
lods
inc
aaa
ins
repz
cmp
int
mov
icebp
cli
mov
mov
pop
popa
call
call
dec
dec
sub
iret
mov
int3
push
and
dec
push
mov
imul
pop
pop
sub
mov
inc
mov
retf
pop
dec
mov
not
xor
daa
stos
cmp
es
arpl
rol
fld
fs
(bad)
std
(bad)
jge
mov
je
test
cmp
ficomp
cmp
sub
mov
push
cdq
(bad)
adc
adc
and
sub
xchg
loope
fbld
cmp
movzx
out
rcl
sub
(bad)
or
add
out
or
stos
sub
repnz
scas
or
cld
ins
test
div
rep
sbb
or
sbb
das
aam
sbb
test
mov
and
in
daa
pop
aam
lahf
jne
add
in
jne
ret
test
cmp
adc
retf
jecxz
shl
test
xor
(bad)
ja
or
lds
and
mov
fwait
icebp
dec
ja
rol
push
or
xchg
xchg
imul
sti
stc
rcl
mov
leave
sbb
mov
xchg
lahf
sbb
mov
push
cmp
or
lahf
imul
jb
cmp
mov
mov
adc
jns
xor
in
sahf
xchg
mov
nop
mov
(bad)
out
cdq
sub
and
push
pop
adc
mov
inc
fcom
and
repnz
in
test
mov
mov
push
sub
jnp
sub
cmp
xor
and
and
cmp
mov
fadd
test
popa
push
and
pop
sub
repz
pop
push
shr
into
mov
push
cmps
cdq
in
add
dec
cmp
(bad)
aas
lods
ins
dec
push
sub
sbb
outs
cmp
in
into
(bad)
in
repz
or
pushf
dec
mov
mov
lea
popf
cli
pop
mov
ret
mov
mov
popa
retf
test
fld
call
ret
push
aad
lods
mov
(bad)
add
jmp
xor
or
jl
loopne
dec
dec
cmp
and
bound
sub
sbb
jno
cmp
mov
adc
nop
push
inc
xchg
push
ja
push
dec
int
pop
xchg
std
jecxz
dec
popa
iret
mov
das
cmp
add
xchg
bound
aaa
addr16
jnp
mov
jno
fs
mov
mov
call
inc
dec
xlat
sub
sub
addr16
out
inc
inc
cmps
push
mov
jns
add
xor
neg
cmp
ficom
and
jno
clc
sub
dec
cs
fistp
call
inc
mov
(bad)
and
pop
jmp
mov
bound
mov
sbb
repz
pop
xor
ins
das
sub
push
stos
pop
cmp
(bad)
out
mov
sbb
aad
stos
adc
fst
out
(bad)
fucomip
jb
mov
push
add
jge
aas
sahf
mov
and
sub
dec
xor
cmp
scas
push
mov
sub
or
mov
adc
mov
lods
mov
in
aaa
es
mov
retf
loop
mov
loop
dec
aad
aam
and
xor
sbb
je
popa
lods
cmp
daa
mov
jmp
mov
push
test
daa
mov
xchg
add
jmp
pop
dec
xchg
loopne
test
pushf
jmp
or
ins
sub
add
nop
(bad)
xor
mov
adc
push
int3
and
ret
mov
into
jge
cdq
movs
retf
int3
push
pop
inc
pop
push
out
ret
xchg
xor
push
push
mov
call
mov
sbb
call
out
mov
retf
mov
(bad)
cmps
adc
mov
jb
mov
dec
mov
in
sbb
arpl
cmp
movs
dec
enter
sbb
inc
mov
fbld
pop
push
(bad)
ficom
push
test
nop
cmps
fs
cs
adc
call
les
mov
lods
adc
push
rcr
jl
xor
in
fsubr
sub
xor
jl
scas
adc
sbb
jmp
ror
test
and
popa
mov
pmulhw
cmp
dec
inc
outs
adc
pop
not
push
and
fld
or
loop
add
sub
jo
dec
jmp
lods
push
xlat
pop
int3
jmp
aad
fst
popa
(bad)
jl
push
clc
dec
pop
(bad)
stos
imul
lds
jne
outs
jnp
js
adc
div
add
mov
and
jae
leave
xchg
fld
jge
(bad)
xchg
pop
jns
or
mov
scas
sbb
cmc
jo
fnstcw
ret
cmp
sti
in
fimul
aad
mov
xchg
call
xor
int
stos
push
push
adc
aad
or
jnp
pop
sbb
jmp
xor
std
ret
das
cmp
pminub
add
jno
add
mov
test
test
sbb
xchg
(bad)
xchg
cmp
and
inc
adc
mov
sbb
xor
and
inc
mov
jmp
dec
popf
cmp
test
inc
les
add
fild
fcomp
loope
dec
iret
and
push
add
sbb
inc
(bad)
cwde
std
mov
stc
ret
cmc
aad
adc
lea
push
mov
mov
and
push
pop
mov
inc
int
loop
mov
pusha
push
(bad)
mov
jecxz
data16
jns
pusha
and
mov
cwde
mov
jne
add
cld
test
dec
xlat
lea
jl
push
adc
adc
mov
jp
jns
scas
or
in
lds
push
jnp
adc
js
xchg
pop
sbb
push
adc
sub
ins
hlt
popf
fidiv
retf
xchg
stos
cwde
outs
loope
pop
popa
lea
push
nop
cwde
dec
int
(bad)
cmp
cmc
jns
fwait
test
xchg
mov
push
xchg
jne
loope
jno
xor
mov
scas
sub
mov
dec
mov
jo
xchg
push
test
ins
and
xor
sub
mov
mov
cmp
call
jge
pop
loop
popf
and
xor
pop
lock
test
mov
add
into
movs
mov
fsub
sub
xchg
hlt
xor
jbe
dec
cmp
clc
daa
push
push
and
mov
push
stc
jle
adc
inc
lds
int3
enter
adc
ds
and
push
daa
sub
mov
shr
push
bound
dec
hlt
(bad)
stos
out
iret
mov
popa
sub
adc
int
push
das
pushf
loopne
test
jbe
mov
inc
xor
jno
repnz
stos
jne
jg
xchg
xchg
mov
in
push
mov
test
pushf
ins
pop
loop
jae
xchg
aaa
mov
ins
sub
loop
xor
and
loope
scas
addr16
push
xchg
inc
xor
fcomp
cmp
je
or
pop
imul
sub
dec
vrcpps
or
scas
(bad)
sub
ja
fwait
sub
imul
push
xchg
adc
iret
jbe
cmp
xchg
and
jge
pop
xor
aas
int
es
push
scas
inc
pop
shl
jp
cmp
(bad)
in
pop
(bad)
pop
mov
lock
push
paddb
inc
stc
push
sub
jo
xor
xchg
retf
es
in
data16
das
nop
dec
xchg
add
test
xchg
jno
add
adc
loope
sub
sub
ja
loopne
adc
out
sub
cmps
rcl
stos
retf
mov
mov
and
inc
dec
pop
jle
jl
pop
into
scas
sub
pop
clc
leave
into
xor
pop
cmp
push
sbb
rcl
ret
and
push
xor
jmp
mov
in
dec
aam
xchg
in
dec
xchg
or
fdiv
pusha
nop
mov
pop
or
adc
mov
pop
repz
cmc
jmp
lods
xchg
push
xor
daa
xor
inc
addr16
dec
(bad)
sub
push
clc
daa
add
xor
lods
jg
push
pusha
lods
pop
fcomip
xchg
outs
add
pop
xchg
idiv
xor
add
jb
test
aaa
inc
(bad)
bound
mov
ret
fs
aaa
pxor
push
adc
pushf
push
ins
sub
mov
xor
xchg
nop
cmps
mov
movs
retf
xor
adc
inc
cmp
adc
dec
and
shr
pop
not
and
sub
int
inc
rol
jb
repz
and
loopne
and
mov
jns
sub
sbb
pop
or
rcl
mov
enter
dec
mov
sub
js
retf
and
xlat
es
sbb
xchg
jmp
or
cs
jb
cmc
jecxz
out
jnp
movs
or
xchg
adc
mov
cmp
inc
xor
hlt
nop
inc
int
loope
push
sbb
inc
pop
test
rcl
jecxz
xor
out
jecxz
mov
repnz
ins
mov
push
inc
mov
je
xor
dec
sbb
std
push
hlt
inc
ins
fimul
and
stc
add
cs
sbb
jge
icebp
test
addr16
fld
add
fsubr
inc
fisub
xor
mov
pop
add
inc
loope
mov
jp
ret
jmp
mov
push
rep
mov
sbb
scas
test
mov
rol
adc
or
mov
std
rol
push
or
mov
call
clc
repz
xor
les
cmps
push
js
or
jbe
pop
(bad)
sbb
clc
push
test
push
jmp
jmp
mov
jns
mov
xchg
adc
fnstsw
push
dec
scas
cmp
je
pop
cmp
adc
adc
xchg
and
xchg
rcl
pop
inc
mov
sbb
outs
ror
mov
mov
call
inc
dec
rcr
cwde
pop
dec
(bad)
jmp
iret
mov
push
jge
mov
adc
mov
cmp
xchg
xor
mov
cmp
mov
shl
push
mov
sub
test
inc
nop
jg
mov
aas
and
cmp
mov
or
clc
xchg
push
mov
mov
popf
pusha
mov
nop
dec
jmp
mov
retf
aad
cmp
sub
gs
daa
mov
int
sbb
pop
jae
mov
cmps
mov
es
ss
mov
mov
lock
dec
rcr
loopne
xor
mov
and
mov
movs
jbe
xor
pop
shl
enter
stos
cs
repnz
test
sbb
jge
adc
call
jbe
pop
push
dec
xchg
adc
sbb
jno
inc
pop
sub
push
lods
pushf
push
xor
sbb
popa
xchg
or
and
xor
and
jo
xor
call
mov
(bad)
loop
popa
ret
add
xlat
leave
push
icebp
sub
xchg
test
dec
sbb
(bad)
and
mov
dec
mov
cdq
ret
das
in
pop
mov
add
pop
adc
ja
(bad)
fcom
or
ror
xchg
imul
xchg
ror
mov
shr
sub
fbstp
mov
pop
mov
xchg
mov
xchg
(bad)
xor
fidiv
add
dec
push
(bad)
popf
fst
push
mov
pop
mov
jo
xor
mov
jg
int3
or
das
icebp
outs
movs
mov
test
sbb
push
call
int3
fistp
adc
jno
cs
pop
fild
add
cld
or
push
push
sub
(bad)
push
xchg
enter
ins
pop
sub
mov
pop
(bad)
xor
jl
mov
popa
inc
cmc
mov
jbe
pop
stos
jle
mov
rol
jne
cmp
sbb
and
pop
lods
or
mov
sub
mov
jp
or
mov
test
cmovnp
jl
stos
out
cs
lds
mov
cmp
pop
lods
and
xor
jle
mov
cmc
loop
xlat
xor
ins
mov
outs
jnp
mov
adc
xor
test
mov
add
inc
(bad)
mov
in
sub
sub
sti
add
scas
cmps
mov
aad
in
cmps
cli
push
dec
pop
mov
or
mov
or
and
cmps
mov
psrlq
iret
(bad)
shl
imul
push
fisub
stos
shr
into
and
pop
imul
les
cdq
outs
push
cmc
adc
mov
(bad)
cmovl
push
in
xchg
sub
lods
sub
sti
dec
xchg
rol
jp
jmp
ins
jmp
(bad)
mov
push
mov
dec
rol
and
xchg
sub
jg
(bad)
xchg
aaa
outs
xchg
cmp
data16
mov
mov
pushf
das
imul
push
mov
xchg
pop
int3
call
repz
lock
and
jne
jo
sar
push
pop
jmp
pop
xchg
loopne
pop
sub
xchg
lods
shr
in
jns
jle
sbb
cdq
pop
pop
sub
fwait
dec
lods
cmp
ret
retf
inc
pop
pop
idiv
(bad)
out
pop
sub
cmc
hlt
sahf
xor
cmp
aas
xchg
test
cmp
add
mov
shr
or
aas
sbb
test
std
push
xlat
cmp
jns
dec
out
(bad)
lahf
mov
cmp
leave
std
push
clc
retf
or
mov
jnp
fwait
shl
cmps
clc
sub
sbb
(bad)
cli
call
arpl
mov
push
xchg
mov
jmp
pop
shl
xchg
test
mov
sbb
movs
add
sub
cmp
xchg
test
xchg
xchg
mov
mov
xor
icebp
cmp
inc
mov
jmp
xchg
enter
push
xlat
xchg
jae
div
pushf
xchg
sar
xchg
mov
fsubr
sbb
sahf
cmp
and
xchg
imul
push
or
lods
pop
cmps
rcr
mov
cli
ins
mov
mov
mov
and
push
call
sub
pop
fbstp
leave
inc
adc
xor
fld
aaa
xchg
or
popa
push
pusha
sbb
push
pop
lods
xchg
sbb
loopne
mov
inc
cmc
lahf
pop
lock
xor
push
inc
push
ins
add
jg
movs
mov
cmps
out
mov
sub
rcr
sbb
pop
dec
push
mov
lea
pop
mov
js
lds
push
lods
stos
dec
dec
call
scas
sub
ja
icebp
mov
sub
(bad)
arpl
je
das
xor
sub
xor
add
add
dec
pop
adc
js
out
das
test
add
add
jns
push
jmp
rcr
(bad)
fwait
mov
stos
dec
mov
sti
add
in
jmp
or
mov
dec
(bad)
xchg
addr16
ss
jne
test
mov
les
(bad)
sahf
sbb
ror
pushf
ds
hlt
or
or
jle
dec
push
or
inc
daa
lods
xor
xor
and
push
fs
int3
bound
jmp
push
xlat
popa
xor
icebp
xchg
adc
loope
pop
mov
in
scas
retf
mov
xchg
and
xchg
cmps
push
in
int
pop
push
fadd
in
inc
shr
stos
jae
mov
or
movs
(bad)
fadd
iret
mov
push
mov
pop
outs
das
push
adc
add
pusha
push
aaa
and
lods
mov
ret
fsubrp
sbb
pop
jbe
data16
sub
hlt
ror
fadd
add
pop
jbe
sub
mov
jbe
cld
repz
push
adc
mov
xchg
pop
mov
loope
push
cmc
mov
jp
jge
cwde
or
xlat
(bad)
stc
sbb
out
push
rol
push
xor
repnz
or
add
jmp
sub
xor
add
in
clc
aas
push
xchg
sub
neg
cmp
push
dec
pop
out
cdq
cli
fisttp
out
jl
clc
xchg
(bad)
inc
jmp
call
xor
add
pop
hlt
lock
stos
inc
scas
mov
mov
sahf
int
fdiv
sub
cld
cmp
aas
inc
lods
cld
jecxz
sbb
rcl
or
lods
jmp
cmp
lds
mov
pusha
add
inc
dec
mov
inc
sbb
repnz
int3
pushf
add
out
add
mov
popf
sub
pop
stos
sub
retf
mov
cmc
pop
xchg
fisub
sahf
in
sub
jecxz
loope
pushf
push
out
sbb
es
scas
js
outs
scas
std
sbb
mov
gs
(bad)
xchg
add
aas
repnz
(bad)
push
ret
push
pop
movs
test
pusha
cmp
int
shr
les
push
stos
mov
cmc
push
retf
mov
fld
sub
lods
add
int3
pushf
cmp
fs
pushf
pop
sahf
push
fldenv
imul
pop
dec
add
push
loopne
cs
pushf
out
mov
ret
sar
push
cmc
in
xchg
xchg
dec
pop
jns
pushf
or
test
imul
and
lods
je
js
inc
pop
pop
xor
pop
sub
sbb
int
clc
ret
enter
jnp
test
xor
pop
neg
repz
dec
adc
sub
popa
mov
hlt
nop
push
arpl
lea
sub
mov
jae
push
nop
fidiv
or
leave
or
bound
cmp
std
lea
fwait
pop
push
jo
xchg
jg
lods
sbb
dec
pop
adc
xor
or
stc
jbe
call
adc
mov
imul
add
loopne
mov
sbb
sbb
sahf
ds
test
ds
mov
test
add
fucomi
push
mov
fmul
add
mov
pop
mov
and
cmps
test
mov
test
outs
movs
cmp
sar
not
popa
js
mov
cmp
mov
xchg
cmp
pop
cmps
adc
lock
mov
sub
fist
dec
inc
sbb
add
in
cli
out
or
pop
iret
push
inc
movs
mov
adc
push
test
mov
arpl
(bad)
xor
xor
xchg
adc
inc
sub
enter
cmc
pop
dec
les
sbb
daa
sti
shr
add
out
sub
dec
jo
je
popf
rcl
jne
push
jmp
movs
outs
shl
pop
push
retf
xchg
inc
adc
retf
cmp
add
push
xor
pusha
and
dec
add
aas
pushf
pop
and
sbb
sbb
jecxz
bnd
adc
lods
mov
or
add
cmp
fcom
dec
or
xchg
movs
jmp
or
pop
cmc
jnp
imul
mov
nop
call
dec
fwait
pushf
xor
pop
retf
mov
bound
pop
inc
xchg
ss
sub
mov
dec
jbe
shl
jne
retf
add
push
add
sub
pop
add
and
cwde
mov
cmp
sub
arpl
inc
(bad)
sbb
scas
rcl
pop
adc
enter
mov
gs
add
push
sbb
jne
jo
push
cmps
add
std
jae
lods
cmps
mov
or
push
push
pop
enter
and
pop
movs
in
mov
mov
sti
sub
pop
int3
push
push
cdq
mul
adc
or
mov
sbb
add
sbb
jmp
jne
call
fcmovu
lods
push
cmp
push
jbe
fwait
ss
bound
icebp
xor
repnz
or
in
mov
sub
add
test
sub
pop
cmps
sbb
jb
adc
push
das
cmp
iret
add
aam
or
inc
imul
pop
lods
dec
outs
fiadd
lds
jnp
imul
shl
lock
sbb
jl
mov
sahf
cdq
xchg
xchg
test
xchg
mov
add
xor
inc
ror
stos
in
bound
cmp
xchg
cld
dec
xchg
es
mov
or
xchg
retf
adc
push
lods
dec
jmp
ret
sub
aas
fiadd
mov
sub
mov
dec
cwde
xor
add
shr
scas
popf
mov
mov
jne
push
add
or
and
aam
xor
sub
sbb
repnz
add
scas
push
leave
jecxz
and
or
pop
lock
cmc
and
pop
cmp
push
mov
mov
sbb
cdq
pop
dec
dec
xchg
or
scas
ror
jg
and
mov
aad
ins
jo
pop
cwde
fsub
mov
or
mov
cmps
mov
adc
shl
pop
and
add
retf
mov
pop
pop
sub
or
mov
mov
xlat
mov
mov
test
or
mov
inc
ret
std
xchg
das
pop
dec
rcr
jne
sar
enter
push
xchg
call
mov
dec
ja
dec
out
push
fld
in
fistp
xchg
inc
clc
ret
jl
jnp
outs
in
sbb
out
mov
retf
arpl
add
jle
sti
dec
nop
nop
push
inc
stc
or
sbb
loop
adc
jle
add
dec
pop
dec
mov
xchg
mov
icebp
sbb
lock
daa
aad
popf
out
sub
adc
mov
stos
pop
leave
pop
ins
dec
inc
pop
mov
mov
je
mov
(bad)
dec
sar
jp
and
cmc
mov
xlat
fnstcw
rcl
popa
pop
scas
(bad)
fidiv
(bad)
and
out
leave
jle
pop
sbb
ins
inc
push
mov
xor
xor
dec
xor
jge
repnz
jne
pop
mov
and
cmp
ret
ins
adc
retf
ficom
scas
stos
int3
test
mov
arpl
inc
test
inc
cld
inc
ffreep
cs
dec
test
and
jbe
adc
mov
call
lock
test
sbb
push
hlt
fnstsw
ret
xor
clc
call
(bad)
jmp
(bad)
mov
(bad)
pusha
rol
and
sub
in
xor
xchg
cdq
(bad)
lahf
(bad)
repz
out
and
movs
inc
test
mov
out
fst
shl
or
or
(bad)
pop
adc
pop
fwait
ds
inc
lds
lahf
les
dec
and
jb
dec
adc
mov
sahf
ja
sbb
inc
cmp
inc
jp
imul
push
daa
fdivrp
cmp
popa
test
popa
dec
lsl
and
xor
pop
mov
jno
out
xor
imul
inc
pop
pop
mov
or
sbb
dec
inc
daa
mov
mov
pop
cmps
ds
mov
xchg
jo
(bad)
hlt
cmp
jno
inc
vpclmulqdq
lds
test
mov
popf
adc
pop
sbb
inc
dec
rcl
mov
jmp
jae
inc
or
fnstsw
jle
out
int
cdq
cmp
jmp
jbe
ja
sub
dec
inc
rcl
xchg
out
mov
in
out
js
lock
into
gs
mov
lahf
js
sbb
(bad)
xchg
mov
dec
adc
popa
mov
movs
fadd
add
ja
(bad)
(bad)
xchg
mov
dec
fwait
or
mov
gs
loope
bound
cwde
ja
mov
dec
test
mov
fisubr
data16
aam
mov
mov
shl
dec
sub
pop
stos
enter
test
inc
xor
sub
xor
mov
cmc
mov
fild
lahf
dec
inc
outs
lods
dec
push
xlat
iret
in
jle
fimul
aaa
sbb
mov
inc
mov
fisttp
pop
xor
mov
sbb
jbe
inc
cmp
and
mov
or
cli
test
retf
cdq
test
ja
sbb
push
frstor
repz
in
movnti
popf
leave
pop
scas
mov
stos
xchg
fidivr
mov
jbe
paddsw
fist
not
jo
(bad)
mov
aaa
mov
xchg
nop
fild
pop
xlat
int
out
ins
sbb
push
adc
or
arpl
mov
jmp
aas
les
push
pushf
xor
fadd
mov
shr
push
inc
mov
add
in
fsubr
aas
es
fwait
jnp
lds
add
mov
sub
mov
ret
or
aam
stos
test
push
push
(bad)
cmp
cmp
jmp
cmp
cmp
dec
xchg
lds
push
pop
lods
rcl
(bad)
movs
push
mov
or
push
cmps
daa
inc
xor
call
mov
dec
movlhps
out
cmp
mov
aas
push
push
xchg
(bad)
iret
test
and
dec
aad
jnp
scas
sbb
dec
jp
rcr
outs
imul
adc
xchg
mov
(bad)
jmp
push
or
(bad)
imul
aad
cs
xor
loopne
dec
mov
sub
mov
add
aad
sbb
retf
les
mov
inc
std
loopne
stc
fidivr
or
hlt
dec
les
outs
ins
arpl
ficomp
mov
cs
aad
sub
test
lods
test
ds
mov
and
lea
sub
loope
pop
mov
fbld
mov
sti
push
xchg
pop
pop
icebp
mov
nop
popf
sbb
jg
inc
test
adc
mov
(bad)
sti
(bad)
cmp
add
stos
ja
repnz
jo
aam
jl
sbb
mov
(bad)
stos
enter
push
pop
loope
mov
inc
mov
or
call
lahf
gs
pop
in
aas
mov
add
push
push
sti
or
cwde
movs
out
(bad)
mov
sahf
movs
aaa
je
sbb
aaa
or
mov
(bad)
push
adc
and
aaa
cwde
mov
aas
mov
sub
add
pusha
in
pop
or
mov
cli
inc
xchg
pop
int3
out
sbb
ins
sbb
int3
addr16
das
sub
pop
icebp
cmp
add
ror
mov
mov
shr
jge
repnz
imul
push
mov
in
pushf
nop
repnz
jge
fisttp
sbb
pop
lods
jp
dec
lea
jg
outs
xor
sbb
adc
cwde
pop
cwde
sti
jno
aaa
push
xor
rol
push
dec
push
add
push
mov
sbb
xchg
and
int3
push
out
xor
mov
mov
mov
pop
movs
add
mov
mov
mov
dec
cmp
clc
xor
pminsw
loope
cmp
(bad)
sbb
outs
ins
cmp
mov
aaa
dec
test
mov
(bad)
xor
sub
mov
jmp
mov
sbb
and
movq
sub
test
daa
rol
add
sbb
daa
mov
fadd
nop
jno
cmp
mov
hlt
fild
or
out
and
jne
(bad)
iret
ins
mov
sbb
enter
sbb
leave
pusha
pop
and
push
dec
sub
sbb
push
xlat
mov
es
mov
fidiv
cs
cmps
mov
es
cwde
lahf
call
push
xchg
clc
call
retw
cmc
xchg
mov
xchg
pop
and
push
dec
push
das
cmp
lea
push
enter
pop
pop
int
or
pop
inc
data16
adc
into
jno
xchg
jge
js
sbb
call
push
dec
les
pop
adc
jmp
and
jle
add
test
mov
movs
sbb
mov
and
fcom
sub
jae
mov
fld
mov
and
arpl
popf
or
call
cmc
jmp
scas
xlat
cmp
adc
iret
and
or
test
xor
and
ins
jnp
xchg
jo
out
jno
enter
stc
push
pop
cmp
ret
xchg
(bad)
mov
repnz
out
pop
hlt
sub
mov
scas
daa
nop
and
mov
pop
rol
je
aas
push
cmp
movs
ss
test
jg
test
push
push
pusha
inc
pop
add
add
cmc
xlat
adc
stos
jne
arpl
sbb
dec
popa
(bad)
jno
ins
cmps
xor
sbb
ret
jae
or
jno
jecxz
push
out
inc
(bad)
xchg
cmp
mov
scas
cmp
aaa
and
into
mov
cmp
mov
mov
adc
lea
mul
(bad)
jp
pusha
dec
cmp
xchg
ret
ror
js
(bad)
adc
inc
dec
and
and
(bad)
mov
(bad)
fisub
or
push
jnp
mov
mov
popa
mov
or
fcomp
jbe
dec
push
daa
push
loop
imul
cmp
adc
sar
test
xchg
inc
stc
mov
mov
jae
cmps
mov
or
(bad)
sbb
lea
sub
fwait
pop
and
and
js
lahf
(bad)
jb
ss
enter
ret
xchg
push
mov
or
ins
push
mov
push
das
or
ss
xchg
ins
in
and
cdq
cmc
mov
clc
mov
fcmovu
gs
and
jo
xchg
xchg
push
jl
mov
and
mov
fstp
jle
dec
jne
fwait
inc
add
in
mov
pushf
inc
inc
jnp
ss
xlat
(bad)
rcr
in
adc
jns
inc
mov
sbb
pop
jl
adc
sar
mov
in
cmp
idiv
je
jae
jmp
push
jns
fs
fmul
mov
inc
push
(bad)
aad
stos
cmp
or
inc
cmc
test
pop
add
movs
pop
sub
loop
inc
fmul
not
xchg
jp
mov
add
adc
jns
ret
iret
imul
push
sti
das
pop
and
cld
mov
jns
repnz
cmp
out
xchg
jno
js
mov
jno
(bad)
sbb
and
cwde
loop
inc
sbb
xchg
jne
push
mov
mov
mov
mov
mov
add
jns
ror
jmp
cmovnp
loope
cdq
sbb
pop
pop
push
push
push
js
lea
jmp
enter
test
xor
(bad)
pushf
sti
jae
aas
dec
ret
xor
sbb
xchg
jb
jle
pusha
xchg
ja
cmp
add
loope
and
sbb
mov
call
ss
loopne
ja
mov
jae
or
ins
adc
push
or
and
test
mov
inc
pop
inc
xchg
cmps
lock
dec
xchg
add
outs
lods
cmp
ror
cdq
pop
in
push
cwde
sbb
stos
dec
add
jno
out
mov
popf
mov
int
xlat
jno
mov
imul
pop
cld
ret
mov
stc
ret
mov
sbb
mov
scas
jo
inc
jle
jmp
adc
lds
mov
movs
sub
jo
movs
mov
data16
cmp
cmps
movs
retf
fcomp
jo
xchg
into
xchg
cmp
pop
add
iret
jecxz
mov
aam
xchg
xchg
out
out
and
xchg
pop
lea
adc
cmp
and
mov
dec
adc
jge
ror
out
lds
jg
stos
push
aaa
rcr
pop
cdq
and
mov
dec
hlt
pop
dec
leave
sbb
fmul
rcl
push
loopne
jmp
sbb
popf
pop
movs
loop
cmps
jle
imul
iret
loopne
out
inc
iret
ficomp
enter
fild
cmp
shl
aaa
(bad)
mov
hlt
sbb
pop
iret
dec
cmp
sahf
fnstsw
aaa
loopne
mov
adc
ja
loope
sub
xlat
div
popf
pop
xor
and
aas
test
movs
aas
xchg
scas
outs
hlt
cmps
pop
test
icebp
fwait
xlat
pop
and
lock
mov
mov
dec
mov
js
sbb
dec
jmp
addr16
das
lds
inc
sbb
lods
adc
mov
repz
arpl
iret
mov
jmp
test
int3
add
mov
dec
fisttp
push
test
xchg
pusha
shl
add
cdq
stos
sbb
gs
xchg
or
sub
test
and
or
scas
mov
dec
out
cmps
int
lods
mov
adc
jns
xchg
pop
push
jecxz
in
aas
fstp
ins
das
xlat
sbb
sbb
xchg
cli
inc
test
inc
add
mov
fcomp
xor
fadd
cs
add
push
jae
out
mov
mov
pop
mov
std
int
mov
clc
mov
dec
lods
pop
cmp
sti
pop
inc
mov
cdq
xchg
stos
hlt
xchg
(bad)
sbb
cmp
jo
and
jo
jne
jb
sbb
or
jne
es
leave
sar
int
push
mov
pop
stos
inc
aam
sbb
nop
inc
mov
xchg
pop
and
out
mov
jb
mov
jp
mov
jmp
pusha
shr
cmp
inc
or
lods
lods
out
loopne
add
xchg
cmps
fild
pop
int3
mov
mov
inc
pop
cmp
adc
mov
call
jnp
aaa
xor
push
retf
int
stos
pop
jmp
jb
into
das
cmc
xchg
sbb
pop
mov
mov
jnp
leave
outs
push
iret
arpl
gs
add
adc
mov
movs
fdivr
outs
mov
or
mov
jl
inc
jmp
and
cld
aaa
add
mov
int
mov
test
dec
mov
mov
lea
imul
mov
lods
jecxz
mov
xchg
imul
cmc
or
jle
inc
push
addr16
mov
jecxz
movs
lods
push
mov
retf
sbb
inc
or
int
adc
scas
cmp
pop
mov
call
outs
std
sar
push
mov
lds
sub
mov
sahf
dec
in
lea
jo
jmp
call
lea
or
ins
mov
cmp
mov
out
mov
add
mov
shr
outs
ja
add
adc
pop
mov
or
inc
imul
frstor
jl
lahf
pop
push
movs
popa
dec
mov
rol
xlat
cs
mov
inc
pop
popa
pause
(bad)
cwde
movs
test
shr
je
dec
dec
push
mov
adc
lea
cmp
leave
enter
in
mov
mov
rol
inc
out
or
cmc
dec
cmp
outs
mov
push
test
mov
and
mov
mov
out
not
cmp
push
js
lea
aaa
dec
nop
mov
jmp
add
cmp
mov
pop
mov
xor
retf
xor
rcr
stc
fcom
jp
jle
mov
mov
inc
retf
jbe
aam
mov
jmp
je
repnz
mov
add
sbb
fs
imul
outs
dec
inc
int3
fcom
pop
mov
and
rcl
in
outs
mov
ror
mov
outs
pop
iret
fdivr
enter
mov
adc
loop
ds
adc
xchg
mov
pop
(bad)
fild
cmp
mov
rol
(bad)
adc
sub
sub
jecxz
lahf
mov
adc
mov
sbb
or
sub
jg
test
scas
mov
sub
mov
out
std
jbe
jl
fadd
repz
or
xor
out
xor
xor
aam
imul
or
pop
mov
addr16
jmp
pop
ds
cmc
(bad)
pop
es
lock
je
mov
aam
and
sbb
test
(bad)
rol
dec
mov
sub
in
xchg
adc
and
jne
dec
inc
and
sbb
add
je
fld
push
mov
push
cdq
stos
or
jmp
sbb
int
repz
std
dec
(bad)
and
sub
add
sub
inc
jmp
rcr
xchg
dec
add
call
adc
sbb
fild
dec
push
(bad)
mov
stos
adc
je
inc
mov
loope
out
ins
pusha
(bad)
fldenv
sbb
stos
scas
fmul
in
es
push
test
or
sub
in
rol
pop
mov
xor
daa
jne
and
mov
jb
xchg
mov
fnop
cmps
sbb
mov
cmp
dec
ss
mov
sbb
ror
lds
sahf
xchg
jns
loop
je
mov
shl
sub
and
out
pop
enter
sbb
aad
push
ins
les
and
sbb
movs
dec
scas
js
or
lods
popf
xchg
push
std
jae
jmp
xor
dec
mov
ror
fistp
clc
push
add
sub
xchg
mov
ror
mov
fiadd
cli
aad
enter
das
push
inc
sbb
push
mov
ja
dec
mov
adc
jg
fwait
std
jae
rcl
lahf
arpl
dec
jbe
inc
mov
fisttp
push
push
pop
sub
xor
xor
les
mov
xchg
pmulhw
xchg
js
jno
shl
hlt
dec
inc
sub
sub
jmp
inc
sbb
cmp
pop
or
repz
mov
dec
out
and
outs
mov
adc
fidiv
sub
in
push
adc
scas
or
nop
adc
sbb
sbb
int3
out
mov
push
sbb
jge
or
ins
xor
and
mov
div
std
jno
out
je
lods
lds
mov
fucomp
jmp
ins
jmp
mov
push
xchg
movs
jns
aam
push
in
push
or
mov
mov
mov
cmp
add
cli
mov
push
add
scas
jns
fstp
movsx
cmps
lea
and
in
fiadd
cmp
data16
ret
outs
ret
or
jnp
cld
jae
sbb
fxch
xchg
scas
xchg
cwde
mov
lahf
dec
jl
mov
mov
bound
retf
xchg
aaa
call
jae
sub
movs
xchg
pop
pusha
movs
movs
xchg
ins
push
mov
lea
dec
lock
nop
scas
cli
loopne
xor
frstor
cmp
jge
cmps
cmc
lahf
cli
cmp
pop
xor
pop
add
xor
in
out
pop
cld
scas
jmp
inc
rcr
and
(bad)
dec
xchg
sub
mov
psllw
and
call
lock
test
dec
push
test
mov
mov
fld
sti
inc
clc
(bad)
pop
cmc
mov
adc
xchg
fist
jnp
les
test
mov
ret
or
(bad)
jl
sub
jno
scas
and
pop
mov
inc
cmp
retf
int3
into
outs
gs
test
dec
cmp
add
addr16
fldcw
dec
dec
dec
sbb
cs
jle
jbe
imul
sub
sbb
test
scas
jle
test
pop
mov
inc
data16
cli
pop
gs
arpl
sar
test
out
dec
idiv
sbb
dec
mov
int
xchg
sti
mov
mov
cmp
fs
push
mov
sub
xor
(bad)
sar
js
xchg
push
and
or
fsubr
jecxz
pop
call
fsub
lds
push
pop
jo
jl
cld
fstp
and
(bad)
sbb
enter
xchg
les
xchg
and
jae
pop
and
ss
imul
ins
xor
pop
gs
les
add
scas
xchg
sub
loope
cmp
in
jmp
pop
lods
sbb
retf
es
out
cmp
test
pushf
jl
cld
mov
les
add
sbb
dec
mov
inc
dec
xchg
pop
fdivr
push
retf
push
xchg
iret
push
mov
stos
mov
call
out
and
ja
hlt
popa
imul
xchg
int
fld
sar
daa
outs
xchg
loope
pop
pop
out
cmp
aad
(bad)
xor
lea
mov
cli
inc
jmp
sbb
out
or
(bad)
fnsave
mov
dec
cli
in
inc
inc
push
dec
mov
push
fnstsw
dec
in
ret
ins
popf
bound
and
test
stos
lea
adc
xchg
sbb
or
xchg
add
stos
jno
xchg
popa
and
std
gs
mov
jmp
test
cli
int3
jge
ss
ins
call
mov
neg
or
inc
dec
pusha
ret
ror
or
ret
loopne
in
comiss
adc
(bad)
mov
xchg
cmps
push
(bad)
xor
xor
inc
shr
mov
shl
fld
sub
jp
fimul
and
xchg
dec
ja
dec
sub
mov
or
or
push
jge
lods
pop
push
loope
mov
mov
mov
sbb
jo
(bad)
xlat
int3
ja
in
fs
sti
or
test
stos
pop
cmp
data16
or
lods
mov
or
rol
scas
std
dec
in
or
test
xchg
add
adc
clc
push
cmp
push
sbb
mov
pop
into
stc
hlt
or
mov
cmp
fstp
hlt
jmp
cli
push
ds
imul
pop
movs
mov
add
arpl
cmp
(bad)
mov
fnstenv
(bad)
and
adc
jne
mov
out
pop
ins
mov
or
add
ret
jne
mov
fbld
push
xchg
cli
xor
loope
mov
enter
jbe
out
(bad)
mov
xor
je
add
test
test
rcl
outs
pop
pop
push
xchg
(bad)
lahf
or
shr
xlat
adc
mov
out
sub
mov
pushf
jp
dec
push
xchg
test
movs
push
mov
sahf
adc
repnz
and
mov
add
mov
cmp
aaa
es
xchg
lods
scas
scas
shl
sub
pop
mov
stc
push
mov
or
and
xchg
ja
clc
jle
xlat
add
ret
adc
scas
cs
ret
(bad)
sti
sub
(bad)
in
in
adc
add
or
clc
fwait
in
dec
xchg
jo
and
jp
or
aad
rcr
iret
fcomp
pop
dec
je
add
sar
out
loop
mov
jecxz
cli
imul
fldenv
cs
add
out
add
mov
repnz
retf
jmp
mov
xchg
ins
pop
fnsave
test
popf
cmps
dec
retf
mov
sub
stos
mov
shl
out
cli
push
inc
adc
xchg
daa
in
call
or
inc
and
cmp
hlt
xchg
and
test
and
fsubr
cmp
sbb
push
retf
xchg
inc
cmp
ficomp
fmul
arpl
in
loop
jmp
fucom
test
cs
cmp
aaa
xchg
push
sbb
inc
xlat
ja
mov
stos
inc
add
or
pusha
inc
repnz
test
xlat
test
inc
in
push
shl
adc
aad
xchg
movs
(bad)
jnp
cwde
pop
push
pop
mov
loopne
inc
dec
(bad)
out
pop
inc
cmp
jge
ins
lods
shl
in
mov
add
gs
xchg
pop
bound
(bad)
stos
jg
lock
xchg
ficomp
mov
pop
mov
mov
push
jo
je
popf
pop
fdecstp
sub
lods
cmp
xchg
xlat
pop
mov
dec
and
ret
mov
retf
mul
mov
xchg
fisub
fsubr
(bad)
ins
shl
lock
sub
lock
push
out
jmp
xchg
rol
dec
push
dec
ret
mov
and
je
out
lods
(bad)
dec
aam
mov
call
cli
rol
or
jmp
push
stc
call
jecxz
xor
mov
jg
(bad)
aam
inc
mov
xchg
lods
mov
ror
nop
gs
rcl
repnz
dec
cmps
sub
daa
(bad)
retf
clc
and
mov
jnp
xor
mov
ds
and
imul
mov
out
js
inc
push
pop
fcomip
jp
fistp
dec
mov
mov
xor
sbb
das
push
in
cmp
fstp
icebp
std
dec
retf
mov
fmul
pop
dec
lea
ret
mov
push
mov
cdq
xchg
ror
arpl
dec
push
adc
rcr
ret
and
jb
fs
dec
test
or
test
cmps
mov
fstp
into
test
shr
xor
push
test
std
rol
add
ja
xlat
add
sahf
sbb
(bad)
dec
push
jne
dec
mov
adc
gs
icebp
enter
loope
add
popa
in
loopne
adc
out
pop
rcr
push
adc
nop
mov
pop
popa
ret
and
xor
(bad)
pushf
pop
sbb
mov
pop
aaa
in
push
outs
out
cmps
adc
ds
out
(bad)
das
push
cmp
fmul
dec
ret
xchg
gs
jb
push
aaa
xchg
mov
sbb
out
or
push
ja
dec
push
xor
inc
je
add
adc
movs
retf
jge
rcr
sub
xor
push
xchg
push
in
sbb
dec
test
inc
push
pop
xchg
dec
(bad)
sub
add
es
stc
out
mov
fsubr
and
xchg
dec
jecxz
mov
inc
pop
fwait
xchg
stc
xlat
inc
outs
pop
push
jb
xchg
push
xchg
stos
jb
xor
adc
ficom
inc
iret
pop
pop
push
test
xchg
sub
shr
neg
xor
add
ins
loope
dec
cmp
jmp
scas
aas
or
in
in
adc
mov
push
js
push
cmp
push
cmp
xor
fwait
xchg
xchg
out
pusha
inc
stos
or
jmp
lahf
push
int3
ret
aad
xchg
ret
jno
loop
dec
scas
sbb
pop
lds
xor
(bad)
aaa
push
cmp
xlat
add
push
mov
and
push
push
lea
push
sub
xchg
inc
jp
hlt
add
adc
outs
sti
jl
xor
sub
jno
mov
sbb
retf
test
push
add
call
adc
adc
and
or
or
hlt
jns
add
inc
stc
fild
pop
push
adc
sub
and
lahf
je
jp
mov
mov
ins
xor
(bad)
push
push
push
mov
bound
mov
xchg
pop
mov
xlat
imul
mov
(bad)
test
out
adc
or
rol
cmp
pusha
fistp
mov
pushf
jmp
aam
ret
cwde
jno
mov
or
and
out
pop
lock
data16
cmp
test
aad
int3
(bad)
xchg
mov
or
mov
mov
outs
stos
mov
daa
mov
clc
push
pop
cmps
mov
arpl
mov
jle
jns
push
xor
addr16
bound
jecxz
pop
test
mov
addr16
mov
pusha
or
scas
data16
and
jnp
ja
mov
jno
push
mov
xchg
pushf
pop
sub
leave
sar
out
dec
mov
imul
aad
rol
push
int3
call
call
lds
and
sbb
in
xchg
jns
xchg
sub
push
jb
nop
and
(bad)
sub
lods
jbe
mov
div
push
cmps
(bad)
pop
xchg
sti
cmps
or
pop
ja
pop
adc
xor
neg
cmp
lsl
(bad)
pop
mov
(bad)
ins
pop
jle
dec
push
fdivr
pusha
jo
pop
shr
inc
sub
lods
icebp
imul
sub
call
and
ror
or
xor
mov
mov
jg
dec
add
retf
jge
jmp
enter
lods
(bad)
add
cmp
nop
add
popf
ins
jecxz
outs
xchg
mov
mov
mov
mov
mov
rep
dec
shl
jae
mov
mov
gs
sub
push
or
out
jae
sahf
inc
xchg
iret
xor
stos
mov
or
repz
in
arpl
mov
sti
inc
mov
xor
hlt
mov
push
out
pop
xchg
xor
add
mov
nop
mov
and
cwde
ds
xchg
push
sub
gs
popa
shl
xchg
test
mov
xor
js
shl
push
sub
shl
jno
and
hlt
mov
(bad)
jmp
out
mov
gs
sar
rep
or
cmp
sti
call
mov
pop
imul
pop
inc
sbb
sbb
inc
ins
mov
retf
mov
sub
lea
mov
xor
fisttp
xor
sbb
mov
sbb
retf
and
pop
ss
pop
jne
push
cmp
cmp
in
mov
sti
jns
jne
push
jae
push
or
jecxz
pushf
nop
stos
lods
xchg
xchg
inc
or
mov
inc
fcom
leave
mov
mov
xor
mov
xor
call
pop
mov
movs
sub
fs
call
lahf
ss
and
stos
sub
adc
in
xor
mov
cwde
ficom
outs
adc
iret
or
clc
lea
sub
dec
lods
aas
inc
sub
xchg
mov
sbb
push
jae
mov
xchg
aam
and
outs
sub
mov
cmps
or
dec
ds
test
popa
adc
dec
pop
out
call
xchg
shr
aaa
imul
jmp
in
sub
fwait
jle
rcl
fs
sub
leave
mov
sub
or
jno
aas
outs
out
or
mov
out
retf
adc
push
fistp
or
aad
mov
scas
pop
jae
test
movs
pop
aaa
mov
jge
jae
xor
add
sbb
mov
mov
mov
pop
mov
pop
clc
cmp
mov
xchg
(bad)
fwait
out
inc
lds
data16
cmp
fstp
push
xlat
int3
into
test
out
xor
popf
pop
retf
dec
aaa
xor
rcl
mov
lea
or
loop
add
and
loopne
nop
add
(bad)
mov
add
(bad)
mov
jmp
jae
pop
icebp
shl
jg
(bad)
dec
or
repz
adc
pop
dec
sub
repnz
call
inc
pushf
push
xchg
dec
(bad)
cmp
fild
or
cld
or
cmps
cmp
lds
jno
clc
mov
sub
or
or
add
cmp
pushf
lds
push
adc
lds
in
xchg
aaa
mov
xchg
imul
mov
fmul
(bad)
push
xchg
mov
xlat
inc
add
xchg
sbb
loope
push
out
xorps
mov
ficomp
jnp
pop
lods
jmp
std
outs
mov
or
dec
aas
dec
aas
nop
stos
and
xchg
xchg
in
push
loop
call
xor
(bad)
push
xchg
call
mov
or
loope
or
cdq
pop
xchg
mov
nop
movs
or
(bad)
fisub
sbb
sbb
push
push
leave
xchg
cmp
dec
js
jnp
sahf
stos
call
xchg
(bad)
dec
lods
repnz
and
stos
dec
adc
dec
jo
cs
jo
ret
(bad)
sub
jo
sub
int
pop
mov
stos
xchg
or
push
fucomp
mul
sub
(bad)
icebp
outs
dec
icebp
adc
cmp
xor
stos
pop
sub
cmp
push
push
enter
cmp
pop
xchg
cmp
loop
lods
shl
fstp
cwde
repnz
fild
xchg
neg
cwde
out
movs
sahf
call
mov
mov
div
mov
push
push
xor
mov
mov
mov
sub
lods
cli
es
xchg
in
and
push
sub
leave
push
fild
mov
jg
inc
sahf
ror
jmp
mov
les
add
push
pop
sbb
jge
pop
dec
mov
push
aaa
xor
xor
mov
sar
rol
test
push
pop
repz
cmp
and
fdiv
dec
std
and
adc
lock
xor
test
daa
ss
pop
mov
xchg
mov
test
jnp
and
(bad)
jmp
icebp
gs
popf
xor
or
loope
imul
sbb
pop
lods
mov
jl
jmp
jne
ret
div
mov
leave
ror
or
aam
call
cmp
add
ret
pop
rcr
jns
push
pop
pop
xor
cld
push
xchg
jmp
xchg
enter
adc
int3
xchg
sbb
int
lock
mov
cmp
dec
shr
pop
cwde
cmc
scas
lods
(bad)
das
xchg
(bad)
dec
dec
inc
push
in
sub
pushf
mov
mov
jnp
shl
pop
enter
fbld
cli
mov
fidivr
mov
push
mov
dec
mov
and
mov
loop
push
mov
in
xor
jge
sub
pop
loope
mov
adc
mov
test
cwde
push
inc
fwait
dec
fwait
ins
or
lahf
loopne
adc
jns
push
call
jae
jbe
int3
mov
mov
pop
hlt
outs
inc
pusha
sub
jbe
aas
or
in
inc
loop
cwde
in
outs
stc
add
ds
mov
cmp
out
sar
cmp
pop
jb
jmp
cmp
test
std
or
aas
add
fcom
and
lds
popf
loope
add
mov
scas
sti
mov
xchg
and
xor
jns
loopne
outs
shl
inc
dec
jmp
and
dec
mov
hlt
sub
and
loope
or
fnstsw
xor
(bad)
test
add
pop
push
fldcw
rol
dec
lods
mov
lds
pusha
dec
pop
or
sbb
mov
fidiv
int3
push
adc
div
sbb
into
jp
test
mov
sbb
out
mov
or
xor
dec
push
and
mov
mov
sub
ja
mov
dec
mov
cmp
js
jb
addr16
pop
lds
fadd
mov
retf
in
jnp
push
or
add
sub
mov
inc
xor
(bad)
sti
repz
xor
jle
stc
ret
pop
fld
cmp
mov
test
xor
and
jo
xor
and
cmps
xchg
in
out
ss
call
sub
ffree
push
out
add
test
fidivr
(bad)
xor
rcl
xor
ins
test
and
mov
lock
jns
adc
inc
popf
jle
cwde
ds
fidiv
or
cmp
fcomi
jmp
js
xor
fs
inc
(bad)
fldenv
or
mov
mov
test
mov
push
and
out
cmp
std
adc
cmp
xor
add
into
jns
push
jp
xchg
popa
add
inc
jge
or
sar
jnp
lods
stos
fidiv
cmps
and
ret
std
mov
mov
jecxz
call
mov
retf
mov
mov
or
or
test
loopne
outs
lods
cmp
or
movs
mov
push
push
pop
dec
and
fadd
popa
mov
add
xor
mov
cli
dec
movs
ret
or
in
mov
dec
xor
in
(bad)
cld
arpl
hlt
cld
fdivr
push
adc
push
out
cmps
js
jl
stos
jle
cmp
frstor
retf
push
adc
or
shl
or
and
xchg
mov
xchg
leave
bndstx
idiv
stos
cmp
pop
pop
inc
jmp
and
xchg
stos
adc
pop
(bad)
sbb
mov
cwde
pushf
icebp
jp
addr16
mov
mov
lock
cli
add
mov
sub
(bad)
mov
jmp
fistp
mov
cld
jmp
es
jge
jl
mov
es
xchg
out
or
xchg
gs
nop
movs
mov
fwait
arpl
cmps
loopne
fist
enter
sar
aam
dec
mov
mov
mov
adc
clc
pusha
mov
aas
lock
pop
pushf
mov
push
out
mov
test
pop
jns
js
jo
dec
push
push
mov
into
xor
pand
jns
leave
mov
sbb
pop
jne
push
lea
(bad)
mov
ret
(bad)
dec
inc
dec
popf
sub
mov
jb
jl
test
inc
sub
add
xchg
mul
js
hlt
ds
gs
dec
inc
inc
loope
in
cmps
fs
xchg
dec
jmp
mov
push
push
mov
jmp
jno
pop
rol
push
adc
sbb
xchg
push
int
sub
mov
and
xchg
inc
icebp
bound
ds
mov
pop
cmps
add
xor
jg
test
retf
xchg
lea
dec
and
outs
inc
pop
dec
push
cmps
sub
jle
inc
out
and
mov
jg
mov
jmp
lods
and
lods
pop
xor
(bad)
cmp
push
add
mov
dec
rcr
neg
push
jns
lods
xchg
(bad)
push
xchg
mov
retf
mov
mov
pop
xchg
into
in
push
mov
mov
js
cmp
lock
sbb
add
lahf
mov
xor
ja
mov
fdiv
or
ror
fbstp
jae
sub
xor
loope
jnp
cmp
test
push
stos
int
int
(bad)
int3
mov
(bad)
adc
retf
mov
mov
pop
(bad)
pushf
call
mov
and
(bad)
mov
movs
jg
adc
pushf
cld
xchg
inc
cmp
(bad)
inc
or
xor
push
pop
pop
les
push
mov
mov
ins
daa
into
lahf
push
push
push
sub
aas
sbb
jecxz
sbb
pop
sbb
jns
push
cld
jecxz
mov
(bad)
and
daa
jmp
jae
bound
xor
fwait
sub
mov
mov
push
std
xchg
gs
cmp
leave
dec
les
mov
frstor
rol
mov
jp
div
and
mov
xchg
mov
adc
adc
loop
(bad)
push
sub
adc
cmps
dec
dec
es
or
repz
pushf
mov
popa
dec
je
sahf
out
jne
pop
jb
mov
mov
rcl
aam
inc
sbb
cmp
mov
xor
out
mov
mov
rol
sub
pop
pop
xor
add
jmp
xor
cld
test
or
xacquire
ret
and
mov
push
sub
dec
sar
pop
fsubr
dec
sub
jnp
in
ins
(bad)
sti
xor
add
jmp
pop
(bad)
cdq
pop
add
pop
cmp
push
cmp
and
ins
outs
int3
dec
loope
cmp
cmp
retf
xchg
fsubr
xchg
loop
pop
and
stos
ds
xchg
xchg
stc
int3
sbb
(bad)
div
dec
or
add
jmp
cmp
(bad)
ds
pop
xchg
sub
repnz
dec
mov
(bad)
aam
pop
push
pop
xchg
pop
push
or
pusha
mov
rcl
movs
dec
dec
mov
repnz
ins
rcr
xchg
dec
add
out
add
mov
in
mov
adc
loope
cmp
cwde
mov
mov
cmp
movs
lea
mov
fbld
pop
push
in
adc
fdivr
lods
or
jge
jnp
(bad)
sbb
in
inc
retf
mov
fisub
mov
push
sar
adc
int3
cmp
lods
sbb
loope
cmp
add
ds
and
push
and
jae
or
lock
pop
(bad)
push
les
pop
push
cmps
lock
test
jl
shl
jnp
sbb
mov
sbb
push
inc
cld
pushf
pop
stos
(bad)
shl
xor
xchg
sub
cmp
adc
or
fstp
test
sar
pushf
je
jmp
outs
inc
xchg
rcl
xor
mov
push
(bad)
inc
push
adc
shl
mov
test
ja
jg
es
sti
sub
lods
jl
xor
and
std
(bad)
jnp
jmp
pop
xchg
iret
xrelease
jae
cmp
dec
sbb
cmp
scas
add
push
mov
nop
pop
lahf
in
push
cmp
mov
fbstp
pusha
xchg
call
jb
fiadd
sub
xor
jmp
sub
loope
ds
add
aaa
jns
jmp
dec
fild
in
movs
pop
xchg
loopne
mov
inc
mov
sub
leave
ins
ret
call
cmp
add
loop
fbld
cld
adc
sub
jmp
and
xchg
or
inc
sbb
jo
lods
fisub
in
sbb
inc
push
loopne
cmp
dec
pop
(bad)
xor
data16
and
xchg
mov
xor
push
add
jb
(bad)
mov
mov
cmc
dec
call
pushf
mov
jb
les
push
xchg
sub
xchg
test
inc
and
ds
inc
mov
ss
jb
out
rcr
lahf
or
dec
and
push
xchg
jecxz
scas
mov
out
lahf
xchg
pop
mov
sub
dec
add
or
hlt
scas
jl
inc
sbb
jns
push
ret
popa
push
pop
aam
sti
hlt
inc
out
sbb
(bad)
dec
and
in
shl
test
arpl
cdq
dec
les
cld
and
push
add
push
ds
jne
inc
xchg
repnz
and
loop
adc
xor
test
fdivp
sub
jno
mov
mov
aad
adc
jb
fisubr
add
mov
enter
or
mov
sub
pop
sbb
dec
icebp
aaa
or
mov
add
nop
std
and
xor
pop
loopne
je
movs
enter
pushf
xor
adc
cld
xchg
inc
push
and
add
cmc
clc
sub
and
clc
mov
ror
leave
out
sub
std
mov
(bad)
das
mov
or
add
adc
(bad)
div
rcr
aam
std
mov
inc
jmp
mov
adc
pop
cmc
push
gs
loop
sub
imul
cs
cmp
dec
and
jge
call
mov
push
pushf
movs
jb
lock
test
sub
sub
pop
cdq
sub
and
inc
sbb
and
in
jge
mov
mov
mov
stc
jnp
retf
lods
das
xchg
inc
in
push
sbb
jl
iret
pop
(bad)
into
in
nop
cmps
and
fcomi
in
les
lods
(bad)
push
test
test
push
xchg
sar
pop
mov
in
fidivr
push
jnp
aas
pop
es
out
or
pop
loop
lds
add
adc
xchg
cdq
mov
ins
inc
xchg
adc
movs
pushf
xor
push
and
inc
xchg
das
ficom
jmp
jne
jae
fld
push
call
fld
jle
rcr
mov
out
push
jns
pop
pop
push
lods
adc
sbb
mov
pop
mov
adc
xor
mov
movs
scas
retf
(bad)
inc
mov
imul
popf
sub
xor
(bad)
popf
pop
fcmovnb
aad
pop
cmp
dec
mov
and
js
inc
push
mov
addr16
cmps
or
cmp
sbb
jne
cmc
in
in
xor
enter
std
ds
cmc
int3
sti
cli
mov
mov
aaa
les
aas
mov
pushf
jb
rcr
mov
int3
and
jo
dec
retf
jp
loope
jl
xor
cli
mov
or
repz
in
xor
push
xor
cmp
jmp
adc
fidiv
jno
out
out
xor
mov
mov
pop
adc
inc
lock
xchg
cdq
inc
sub
xchg
or
cmp
stos
mov
mov
ds
(bad)
test
imul
cld
(bad)
mov
push
mov
into
loop
push
pushf
jle
ror
add
das
sub
mov
and
push
xchg
cli
jmp
and
js
loope
in
inc
and
(bad)
rcl
movs
xchg
cmp
loope
(bad)
loop
sub
(bad)
cld
nop
sbb
and
mov
scas
sub
fnstcw
in
sub
dec
sahf
pop
in
data16
dec
aad
add
fldcw
cmp
jecxz
mov
or
jmp
adc
test
pop
xlat
mov
jno
fiadd
lahf
aas
ins
sub
iret
adc
and
cmp
pop
lods
jbe
fdiv
loop
mov
jae
push
ins
sbb
aas
mov
fstp
pop
in
cdq
inc
and
in
xchg
inc
js
ins
mov
mov
ins
sar
sbb
(bad)
(bad)
mov
xor
adc
mov
test
push
jo
out
pop
clc
pop
icebp
sbb
mov
add
cli
lahf
jbe
mov
aam
mov
or
mov
xor
not
sub
aam
loopne
push
into
popa
popa
(bad)
mov
(bad)
jp
and
push
sbb
dec
imul
addr16
push
jnp
test
and
fnstsw
inc
pop
mov
lds
aam
test
clc
into
fwait
movs
and
sub
jecxz
and
mov
mov
xchg
mov
jecxz
(bad)
in
out
shl
and
pop
and
xor
or
mov
xor
mov
xor
movs
jae
sbb
fcomip
push
adc
mov
push
jle
xchg
mov
xchg
ins
sub
pop
sub
jns
jne
mov
and
mov
sub
bswap
jl
movs
cmp
ins
mov
push
test
(bad)
cmp
daa
push
and
popf
(bad)
jnp
pop
push
ins
lds
add
xchg
cmp
push
pushf
mov
pop
push
gs
inc
jae
mov
sub
or
ins
xchg
mov
mov
mov
cmp
sbb
sub
xor
lods
fistp
pop
scas
jmp
inc
rol
inc
jo
dec
adc
xchg
xchg
xor
rcr
mov
popa
loop
push
in
add
cs
pop
out
xor
dec
cs
mov
mov
mov
mov
sub
mov
add
adc
sub
jae
push
call
push
adc
push
sub
outs
dec
pop
pusha
test
and
scas
adc
not
stos
jns
mov
mov
cmovne
xchg
mov
mov
and
sbb
std
xchg
hlt
out
sub
push
mov
pop
data16
iret
fscale
mov
push
sbb
loop
in
push
jg
test
push
dec
adc
rol
sbb
add
clc
repz
or
movs
push
and
addr16
call
pop
jecxz
or
clc
in
lock
xor
xor
cmp
rcr
xchg
cli
scas
inc
cld
scas
mov
outs
dec
mov
push
mov
ror
adc
call
mov
cli
mov
out
loope
ja
int3
hlt
dec
lock
fimul
ret
(bad)
mov
xchg
pushf
(bad)
mov
repnz
xor
mov
into
jbe
icebp
(bad)
aad
test
fiadd
arpl
mov
shr
inc
xlat
xchg
and
fidivr
in
jl
fstp
push
mov
or
clc
or
xchg
push
daa
mov
jmp
mov
mov
and
(bad)
out
pop
ds
popf
pop
cmps
test
cmp
xor
mov
ror
push
jecxz
leave
mov
jl
xchg
fwait
sahf
pop
popf
aam
pop
cld
pop
jecxz
fiadd
mov
adc
popf
ins
clc
je
xchg
inc
out
sahf
or
ins
fisub
outs
sahf
jne
mov
test
loopne
mov
mov
in
xchg
xor
sub
pushf
imul
(bad)
gs
jno
adc
mov
into
es
mov
jno
cmps
repz
lods
sar
jns
mov
dec
mov
pop
sub
xchg
mov
hlt
xchg
fs
pop
push
int3
xor
cwde
push
ret
xor
push
mov
test
mov
jp
loope
cmp
and
mov
mov
stos
ins
jo
push
mov
pop
push
dec
xchg
inc
repz
or
test
cmp
clc
mov
jmp
scas
inc
xchg
pop
mov
sub
mov
mov
arpl
enter
sub
mov
mov
jp
or
ins
inc
stos
outs
icebp
xor
data16
icebp
sub
mov
jg
xlat
push
sti
xchg
mov
xor
int
jbe
leave
pop
cld
pop
jl
xchg
jnp
in
jmp
idiv
add
xchg
int
pop
(bad)
call
outs
mov
mov
cmc
enter
or
xchg
mov
dec
xchg
or
mov
pop
test
fwait
and
cs
(bad)
pop
sbb
(bad)
push
es
mov
les
jae
fiadd
add
sub
push
xchg
jnp
inc
mov
cmp
mov
dec
dec
cmp
xchg
jno
jb
lahf
xlat
mov
iret
test
retf
and
pusha
mov
mov
popa
push
repz
clc
mov
ins
(bad)
pop
sbb
jmp
jl
jne
push
retf
adc
mov
pop
cmps
mov
xlat
inc
movs
add
hlt
(bad)
std
daa
mov
sub
loop
dec
xchg
mov
(bad)
xchg
retf
inc
sbb
adc
std
in
fsubr
adc
fidivr
and
jp
push
adc
fs
adc
lods
mov
or
dec
aaa
fsubr
pushf
in
add
clc
inc
or
sbb
(bad)
mov
popf
dec
shl
adc
and
popf
stos
jmp
rcl
cdq
out
sub
dec
shl
sub
(bad)
push
sar
push
xor
dec
sub
add
and
push
retf
lahf
mov
in
pusha
int
int3
mul
mov
sub
push
and
jle
das
add
icebp
mov
xor
fcmovnu
fsub
lods
(bad)
jb
popa
sub
jne
movs
and
imul
int
mov
cmp
jmp
sti
lds
(bad)
cmp
xor
pop
lock
(bad)
sub
je
dec
out
xchg
pop
sub
jp
and
mov
lock
imul
jmp
daa
pop
loopne
jns
das
fcom
cmp
cmp
mov
mov
pop
in
inc
jb
and
mov
xor
out
sub
cs
xchg
dec
pop
test
dec
lahf
sar
in
fwait
jne
adc
dec
nop
sbb
xlat
int
push
add
push
push
inc
mov
sub
ret
xchg
dec
dec
shl
mov
jecxz
je
mov
or
stos
call
and
xor
jbe
xlat
xor
int
pop
mov
inc
pop
sub
fstp
imul
mov
bnd
and
scas
add
push
xor
sub
ins
ins
retf
jnp
ret
imul
inc
sub
call
mov
sub
jle
mov
shl
in
mov
push
pushf
movs
mov
(bad)
jecxz
and
sub
mul
retf
xchg
and
push
cdq
jne
xchg
xor
fdivp
stc
out
js
dec
cmp
xchg
mov
call
sti
je
(bad)
into
jecxz
inc
or
and
jge
xchg
push
cdq
xchg
mov
shr
je
mov
test
sub
sahf
call
out
in
fiadd
add
mov
dec
cdq
pop
sti
or
pushf
sub
(bad)
add
xchg
sub
fild
inc
push
dec
sub
(bad)
sbb
inc
pop
jmp
int
scas
adc
sub
pusha
call
aaa
or
cmp
imul
pop
lods
jp
cli
xor
dec
test
(bad)
lock
fcom
je
xchg
nop
inc
jbe
aam
mov
das
rcl
sbb
mov
adc
adc
xchg
pop
shr
and
jl
stos
pop
retw
inc
mov
nop
and
or
nop
aad
mov
aas
mov
jbe
cwde
popf
sbb
xchg
repnz
or
rcr
test
or
sbb
mov
repnz
dec
push
ins
pop
mov
out
not
test
lods
imul
sbb
push
in
mov
gs
cs
xchg
mov
ror
inc
xor
aas
or
int
mov
pop
icebp
or
add
jmp
popf
mov
call
shr
rcr
in
(bad)
pop
pop
ss
lods
(bad)
mov
scas
jne
in
std
daa
scas
push
mov
jbe
outs
in
lock
adc
ret
mov
adc
push
call
aad
movs
and
stos
jmp
out
loop
movs
bound
adc
sub
mov
add
fst
sbb
icebp
xchg
jno
in
inc
iret
int
test
adc
mov
int
dec
and
jge
sbb
jmp
inc
sub
nop
xchg
sbb
push
jmp
push
nop
in
cmp
js
ffreep
mov
push
neg
out
jmp
cwde
pushf
xor
adc
push
and
jne
xchg
sub
mov
xor
mov
dec
dec
dec
jp
mov
imul
(bad)
push
sbb
aas
iret
dec
ficom
pop
cmp
ins
xchg
(bad)
and
scas
xor
inc
dec
inc
cmp
mov
mov
add
frstor
adc
mov
sbb
out
push
pop
(bad)
data16
fnstsw
pop
jp
or
jmp
mov
daa
or
push
mov
xchg
in
and
push
jmp
jbe
cmc
xchg
test
pushf
nop
inc
jecxz
scas
and
mov
psllq
adc
ret
in
xchg
lods
sub
idiv
test
add
dec
jbe
in
sub
mov
lahf
push
xchg
dec
fiadd
cmp
jle
loop
test
repnz
inc
adc
mov
jno
call
sbb
sbb
xlat
mov
retf
inc
daa
xor
and
xor
cwde
cmps
sbb
add
icebp
scas
scas
outs
in
loopne
mov
out
cmp
test
jmp
jmp
iret
cmp
repz
dec
ret
jb
push
xor
fmul
cmc
dec
addr16
fs
push
shl
xchg
add
inc
mov
push
adc
ins
ret
sub
pop
scas
xchg
xor
or
clc
ins
xchg
cmp
or
jl
mov
add
imul
dec
jbe
push
mov
or
stos
mov
sub
xchg
das
push
nop
and
jns
(bad)
cli
int
aam
mov
dec
cmp
std
mov
lds
call
push
inc
aad
in
addr16
sub
push
out
fs
outs
cmp
(bad)
repnz
jmp
dec
and
int
or
mov
add
(bad)
mov
test
dec
idiv
scas
mov
pop
lods
test
jmp
inc
pop
movs
jne
push
adc
ins
ret
xlat
sub
sbb
in
nop
mov
add
ret
and
sub
imul
cmps
imul
and
and
gs
ds
hlt
mov
outs
loopne
test
jl
mov
push
fadd
cmp
test
out
and
ror
xlat
mov
enter
add
enter
in
xor
in
cli
push
fwait
inc
in
es
cmovno
test
cli
nop
addr16
sub
scas
push
stc
call
sub
sbb
xlat
ins
lods
sub
adc
mov
bound
inc
das
xchg
stc
adc
mov
inc
jecxz
pop
mov
imul
xchg
inc
pop
dec
(bad)
xchg
dec
lods
xchg
or
hlt
inc
and
loope
push
popf
or
jl
push
ins
icebp
ja
les
cmc
cmps
test
jp
imul
fnsave
and
ss
lods
mov
inc
dec
push
push
cmc
xchg
and
inc
mov
and
inc
lods
cmp
loope
stc
mov
data16
gs
vpaddb
mov
in
stos
and
mov
xor
sub
push
or
popa
and
add
pop
cwde
pop
sti
jg
push
xchg
gs
int
out
jecxz
adc
mov
lea
mov
mov
aam
sti
ins
jo
xchg
lea
mov
cmp
call
lods
movs
bound
push
add
dec
test
cmp
shr
outs
ins
outs
mov
xor
loopne
das
aam
add
test
out
jo
pop
sub
jnp
mov
sub
push
jl
(bad)
outs
cmp
xor
mov
xchg
imul
cld
in
or
adc
les
ret
loope
repnz
pusha
cmps
mov
(bad)
mov
dec
dec
dec
xor
mov
sbb
mov
dec
pop
lea
call
fistp
icebp
adc
add
rcl
movs
leave
(bad)
sbb
xchg
loop
not
jno
retf
mov
stos
mov
fcom
test
or
shl
movs
(bad)
jl
adc
dec
lea
shl
test
adc
mov
lods
outs
into
xor
adc
repnz
mov
push
lods
xor
add
or
mov
(bad)
rcr
(bad)
add
push
push
pop
cmp
cmc
outs
pusha
add
add
cwde
adc
(bad)
shr
dec
xchg
ins
dec
and
xor
mov
lods
or
adc
mov
pusha
and
jbe
lock
adc
loop
shr
jecxz
popf
ins
jns
xlat
adc
dec
or
jmp
mov
pop
xchg
daa
or
cld
xor
(bad)
out
cli
mov
dec
out
(bad)
out
fs
fs
and
sub
or
ds
rcl
pop
xor
outs
in
fisubr
ret
rol
add
or
push
adc
sub
push
pop
mov
push
nop
jo
mov
pushf
std
mov
mov
scas
in
adc
pop
pop
jp
ficom
cmp
sbb
cmps
fiadd
xchg
int
in
xchg
pop
jae
or
bound
movs
call
pop
cmps
imul
push
neg
loop
sbb
loope
jle
or
pop
mov
cli
(bad)
cmp
sahf
(bad)
mov
mov
add
or
push
repz
popa
add
hlt
aas
or
push
out
jmp
or
scas
sub
adc
gs
sub
cdq
ss
addr16
and
aam
mov
add
add
movs
mov
inc
xchg
add
mov
popa
ret
call
jmp
icebp
std
das
scas
gs
xchg
sbb
fcom
cmps
mov
lahf
pop
fcom
cmp
xchg
pop
call
les
adc
and
adc
(bad)
std
xchg
xchg
stos
test
jb
mov
mov
clc
push
pop
je
ret
xor
call
jg
(bad)
les
daa
mov
dec
xlat
or
loopne
cwde
and
clc
adc
push
out
dec
ficom
xlat
cwde
int
pop
or
cmps
retf
inc
jo
push
mov
push
add
cmp
sbb
inc
push
mov
div
or
or
pop
or
shl
jp
cmp
mov
(bad)
mov
push
pop
pop
push
fdivr
stc
(bad)
adc
les
sbb
mov
inc
mov
jno
hlt
ss
out
inc
or
dec
mov
bound
nop
jmp
pop
out
xor
leave
mov
popa
mov
sub
sub
jl
dec
hlt
adc
push
aad
retf
mov
stos
mov
mov
jg
cs
stc
fsub
dec
push
(bad)
cwde
xor
mov
(bad)
call
dec
cmc
(bad)
cmp
mov
movs
or
stos
popa
sub
psrlq
fild
test
sahf
push
mov
adc
idiv
in
fcmovnb
fs
xor
icebp
pmovmskb
cld
mov
cmp
xor
into
iret
rol
out
push
fcom
jmp
dec
jp
stc
stos
push
in
fs
pop
fstp
das
xor
loope
in
inc
loop
xchg
ja
sub
pop
sbb
int
sbb
xchg
cs
xchg
inc
test
mov
add
jae
pop
jle
push
popf
scas
mov
rcr
adc
mov
pusha
xchg
ret
icebp
adc
cmp
outs
pusha
icebp
icebp
and
int3
fsub
jg
jno
jp
(bad)
call
lods
fistp
add
sbb
cmp
hlt
dec
shr
js
pop
jne
test
dec
sti
push
dec
lds
out
pop
je
add
shl
xchg
bound
dec
popa
xchg
clc
jnp
lea
outs
jnp
cmc
mov
ror
popf
push
push
call
jne
lea
xchg
xor
adc
lods
xchg
imul
std
cmp
adc
int
test
adc
jl
ins
cmps
outs
in
nop
xor
cmp
add
xchg
into
xchg
mov
xor
inc
mov
(bad)
(bad)
jmp
ffreep
(bad)
loopne
clc
jle
fiadd
mov
lea
aas
test
adc
mov
lahf
fld
mov
mov
jle
mov
jmp
dec
cwde
sbb
push
sar
js
cmp
and
sbb
in
sahf
dec
cmp
pop
scas
inc
out
repnz
cmp
dec
cmc
data16
iret
and
sbb
jmp
jp
popf
test
inc
push
adc
jo
push
fnstcw
(bad)
xor
mov
mov
into
mov
iret
dec
shl
(bad)
sbb
rcr
sub
sub
popa
mov
sar
or
mov
shr
mov
hlt
leave
rcl
mov
mov
ins
or
or
jge
sahf
(bad)
aaa
mov
xor
fcmovnb
xor
(bad)
adc
mov
and
and
inc
ror
pop
shl
sub
xor
int3
enter
cmps
test
or
mov
cdq
mov
mov
mov
jne
fdivr
xchg
cmp
retf
jae
sbb
mov
dec
pop
movs
arpl
xor
das
in
mov
icebp
jne
adc
cmc
push
popf
sub
and
loop
cmps
sbb
rcl
mov
inc
shl
scas
mov
add
daa
mov
loop
popaw
xchg
enter
push
enter
mov
sahf
jbe
test
inc
and
sub
je
imul
fnstenv
ja
jmp
mov
out
mov
in
enter
xor
icebp
sahf
aam
adc
daa
xchg
xor
xchg
mov
mov
cdq
loopne
cmp
mov
fidiv
mov
mov
std
call
xlat
aaa
pop
out
pop
mov
sar
jae
aad
pop
ins
test
out
and
mov
adc
mov
ds
fwait
jl
sub
call
loopne
ret
out
not
lock
push
mov
pop
imul
cdq
lea
popf
adc
addr16
mov
out
mov
loope
pop
daa
sub
mov
push
(bad)
ins
fs
pop
add
lods
or
push
mul
(bad)
add
mov
push
out
and
cli
inc
mov
sahf
xchg
push
jge
xchg
add
mov
ror
dec
cdq
je
dec
push
pop
scas
jg
not
push
cmps
pusha
jecxz
js
xchg
cwde
hlt
adc
and
mov
(bad)
fcomp
into
mov
mov
outs
xlat
and
mov
(bad)
adc
jnp
dec
fdivr
enter
aad
das
fld
add
jae
and
sbb
test
addr16
icebp
rcr
sar
movs
pop
xor
cmp
mov
enter
cmp
add
jb
js
repnz
aam
outs
iret
inc
test
idiv
fnstsw
pop
mov
add
xchg
sbb
sbb
lds
ret
mov
xchg
pop
inc
repnz
xchg
ror
xor
gs
lea
sti
mov
cmp
pusha
xor
idiv
ror
(bad)
lods
gs
pop
mov
lods
loope
mov
pop
pop
cmp
mov
dec
push
pop
mov
(bad)
test
jmp
sub
retf
test
jmp
movs
dec
jmp
sub
fstp
mov
adc
ficomp
push
je
fs
mov
out
cmp
jbe
popf
mov
jmp
push
in
sbb
jo
mov
jge
adc
cmps
pop
ja
add
lahf
int
popa
pop
or
mov
inc
bound
popa
in
dec
lds
xor
cmps
jle
jle
(bad)
int
jmp
jo
jns
ss
sbb
mov
ret
imul
or
push
pop
mov
adc
imul
sbb
xlat
mov
sbb
(bad)
pop
mov
out
dec
les
or
cdq
jns
mov
sbb
in
mov
test
(bad)
sub
sub
xchg
lea
int
dec
cmp
xor
movs
push
in
std
mov
lock
(bad)
dec
jge
imul
and
dec
add
test
add
daa
jnp
repnz
into
stc
ins
jmp
stos
push
pusha
cdq
cmp
jae
in
mov
imul
and
(bad)
sub
sbb
jo
mov
and
stos
pop
mov
and
add
and
dec
sti
jge
popf
mov
in
jb
xchg
mov
push
mov
add
hlt
inc
jg
test
inc
lahf
test
fst
or
aaa
jge
shl
rcl
outs
call
pushf
mov
cwde
dec
inc
push
sahf
push
mov
lock
jns
es
pop
pusha
sbb
lea
aad
dec
stos
(bad)
pop
nop
pop
into
test
or
ret
movs
dec
aas
iret
xor
imul
out
mov
sub
(bad)
jmp
test
dec
arpl
add
sar
lods
mov
add
xchg
pop
inc
stc
and
mov
icebp
sti
nop
and
retf
into
ret
sahf
or
or
dec
retf
or
shl
adc
mov
or
adc
cdq
and
sub
int
push
xor
sbb
in
fild
test
sti
mov
push
jb
rol
cli
rcr
xor
out
adc
in
pop
pop
push
leave
test
cwde
xor
mov
fcmovnu
scas
xor
adc
rcr
mov
push
mov
inc
xlat
aad
shr
rcl
xor
dec
clc
pop
addr16
lahf
inc
(bad)
jge
lahf
sub
xchg
and
push
mov
psubq
test
jecxz
nop
add
lock
dec
inc
mov
aas
and
frstor
ja
mov
cmp
or
sbb
bound
sbb
rcl
je
push
lock
rol
stc
popf
add
clc
imul
push
xchg
daa
xor
jno
loope
pop
movs
or
pushf
loope
and
out
xor
shl
fadd
aad
lahf
push
dec
ret
fstp
movs
int
ret
jp
ret
stos
dec
or
mov
sbb
ret
cmp
ins
test
test
call
push
ret
or
adc
cs
pop
xchg
cmps
inc
(bad)
out
div
ss
dec
mov
imul
sar
mov
cmc
push
(bad)
adc
mov
test
jmp
adc
jae
shr
mov
xchg
ficomp
pop
push
shl
test
xchg
mov
in
int
push
mov
cli
push
adc
icebp
sbb
in
jne
movs
mov
cmp
xor
or
sub
and
and
cmp
and
pop
(bad)
movs
push
inc
fs
aas
xlat
and
leave
sub
mov
pop
cmp
hlt
fsubr
jno
scas
sbb
add
les
inc
xor
cdq
mov
ror
cmps
adc
pop
sub
jnp
shl
ret
push
rcr
popa
clc
pop
bound
repnz
cli
daa
jmp
imul
ror
aam
mov
xor
inc
aas
adc
cmp
push
scas
sbb
or
cmp
(bad)
lods
lock
jle
loopne
ret
cmp
daa
arpl
(bad)
sub
stc
cmp
mov
adc
(bad)
jg
xlat
pop
test
add
icebp
sti
imul
js
out
cdq
jg
dec
adc
daa
or
inc
fs
(bad)
out
mov
sbb
inc
jp
pop
cmp
ss
scas
adc
xor
out
dec
loop
cmp
loop
loope
mov
fmul
sbb
sbb
fs
arpl
push
jmp
dec
jp
popf
jns
dec
out
rol
out
iret
popf
add
out
std
aam
cmps
xchg
fistp
inc
cmp
push
pop
inc
sub
mov
push
sub
push
add
popf
jb
or
and
xchg
mov
mov
shr
arpl
out
mov
out
add
out
imul
xchg
fadd
sbb
cmc
or
cmp
xchg
dec
stos
test
sti
cmp
push
stos
aaa
push
aam
pop
imul
iret
add
movs
das
jb
arpl
int
add
jle
fwait
test
ret
pop
mov
fild
jnp
cmps
outs
movs
mov
xchg
inc
cmp
stos
out
iret
int
adc
mov
jmp
and
adc
push
pop
pop
inc
aas
leave
retf
ficom
or
mov
fwait
jnp
sbb
pop
out
xchg
aad
xor
dec
lock
sub
jg
mov
fbstp
push
cmp
das
daa
lods
and
mov
cmp
(bad)
mov
das
jne
xor
nop
jecxz
ret
mov
push
out
shr
jmp
sti
dec
xchg
out
xchg
loop
in
mov
or
(bad)
scas
add
mov
mov
and
outs
mov
ds
or
(bad)
enter
push
js
lds
sub
push
lahf
leave
jb
repz
jecxz
test
xlat
add
inc
sub
adc
cmc
data16
push
dec
imul
jle
cmp
sbb
push
and
(bad)
xchg
inc
jne
std
xchg
les
jle
mov
push
fdiv
push
fisubr
je
inc
gs
lods
mov
xchg
jae
add
sub
and
ret
sub
iret
push
push
pop
pop
mov
(bad)
jno
push
or
inc
sub
enter
pop
movs
pop
dec
xor
inc
or
fidivr
push
daa
mov
pusha
sub
jbe
or
lds
and
cmc
lods
ss
inc
jbe
int
mov
(bad)
jae
mov
stos
add
stc
lahf
sbb
shl
mov
clc
add
xchg
xchg
inc
sub
pop
mov
push
and
lods
(bad)
add
inc
in
mov
pop
pop
(bad)
mov
pop
sahf
fucom
and
push
mov
dec
pop
mov
es
pushf
sbb
fisubr
jbe
fs
pop
int
pop
xor
out
dec
inc
push
mov
mov
and
adc
adc
inc
jmp
xchg
jmp
sub
std
jmp
or
icebp
mov
cmps
(bad)
(bad)
cmp
sbb
jmp
inc
mov
dec
iret
sub
xchg
pushf
retf
aaa
inc
push
out
pop
fstp
cmc
pushf
or
jl
jecxz
mov
cld
jle
repnz
loop
jae
fidiv
or
mov
jnp
jae
ja
add
sar
jle
mov
jnp
repz
(bad)
std
xor
sub
shl
add
mov
call
jl
cmp
adc
add
jns
pusha
dec
inc
int3
cs
ss
pop
and
and
out
icebp
sbb
ss
jmp
(bad)
sub
es
pushf
jno
mov
and
and
push
(bad)
shl
loopne
in
mov
xor
mov
cdq
xor
xchg
push
ret
repnz
push
gs
je
adc
xchg
arpl
pop
imul
xchg
pop
mov
(bad)
lods
add
push
addr16
mov
call
mov
lds
inc
sub
cdq
ja
in
sub
(bad)
loopne
and
aam
xchg
mov
and
jns
stos
cmp
pop
scas
push
fidivr
(bad)
mov
xchg
push
and
ins
and
hlt
inc
xor
sbb
pop
mov
pop
retf
push
out
fst
sbb
cmp
mov
pop
jmp
mov
pop
repz
xchg
mov
inc
pop
mov
ficomp
dec
cmp
xchg
outs
sbb
add
push
inc
and
nop
(bad)
pop
mov
mov
xchg
dec
into
nop
dec
int
les
mov
pop
pop
repz
xchg
or
push
or
rcr
push
mov
stc
js
cmovp
movs
cwde
(bad)
xchg
ins
jo
loopne
pop
inc
ja
call
xlat
xchg
inc
jecxz
or
test
adc
outs
sub
cdq
jmp
jb
int
out
out
pop
out
jo
mov
pusha
push
stc
push
add
xchg
pop
(bad)
shl
and
mov
push
les
call
xchg
jp
lahf
jg
fmul
imul
out
ret
push
jbe
icebp
or
inc
pop
cdq
adc
add
push
add
pop
clc
in
mov
in
aam
xchg
push
repnz
jecxz
in
or
fwait
xchg
inc
pop
mov
test
xor
adc
(bad)
xor
scas
jns
cmp
scas
xor
cmp
mov
(bad)
cmp
adc
pop
inc
xchg
pop
sub
fwait
mov
mov
and
lea
jecxz
add
in
outs
es
leave
adc
imul
lds
dec
adc
jmp
add
mov
stos
xlat
pushf
scas
fld
shr
dec
ds
push
jle
jecxz
and
retf
sbb
push
dec
cmp
cmp
sbb
mov
cdq
sbb
pusha
idiv
add
cld
test
push
sub
cmp
es
sar
test
fisttp
mov
rcr
sbb
inc
and
fnstsw
mov
mov
idiv
pop
cmp
jl
jg
cmp
std
pusha
mov
xor
push
out
add
cmp
sbb
xor
inc
dec
cmc
sub
jo
pop
inc
(bad)
inc
xchg
out
gs
xor
xor
push
repz
sbb
shl
lods
shl
addr16
cmp
pop
dec
mov
adc
cmp
mov
out
xchg
(bad)
dec
cmp
xor
add
push
ins
jle
outs
ds
(bad)
in
jno
int3
fstp
(bad)
iret
pop
adc
outs
dec
jmp
add
fs
popf
cmp
mov
xorps
push
ss
add
bound
hlt
sub
std
(bad)
(bad)
dec
jne
in
adc
loop
inc
shl
xor
hlt
sub
pop
or
fs
imul
xor
lods
jae
xor
stos
mov
dec
arpl
ds
pop
sbb
add
inc
mov
rcr
mov
sbb
(bad)
and
adc
or
jo
pop
jae
push
loope
jmp
out
xchg
ja
cwde
cdq
cmc
adc
inc
(bad)
mov
cmp
cmc
jl
idiv
xchg
xchg
push
sub
call
mov
out
dec
cld
xor
ret
fist
loop
arpl
neg
mov
xor
add
(bad)
test
adc
mov
loope
pop
push
retf
jge
sbb
fisttp
rcl
mov
loope
xor
push
sti
fimul
fcomp
dec
add
sub
mov
xlat
int
adc
icebp
in
cmp
sbb
imul
xchg
cmc
int3
ror
sbb
rol
mov
out
test
arpl
cmc
push
pop
mov
mov
shl
push
fs
inc
xor
(bad)
mov
mov
add
mov
das
inc
ins
sahf
or
sahf
inc
movs
cld
lock
or
sub
aam
and
iret
jp
std
push
aad
(bad)
into
sbb
mov
jno
cmp
push
pop
mov
in
ds
mov
movs
cmp
shl
mov
mov
xor
div
xor
out
jge
adc
cdq
cmp
mov
sub
jne
dec
neg
ja
or
(bad)
adc
cmc
xchg
xchg
cwde
stc
sbb
pop
es
rcl
out
jnp
and
mov
loop
sub
scas
and
xchg
dec
jb
scas
pop
iret
lods
inc
mov
leave
push
xchg
in
jo
daa
push
(bad)
aas
push
mov
setno
fwait
pop
ja
jnp
retf
in
in
jp
sub
lock
mov
lahf
iret
test
xchg
mov
loope
(bad)
ja
mov
fimul
push
je
sti
adc
xor
and
int
mov
(bad)
test
add
lahf
out
xchg
and
add
addr16
sub
inc
jle
inc
pop
fistp
pop
cmp
or
icebp
mov
div
mov
(bad)
xchg
rcl
pop
fs
and
(bad)
loope
stos
mov
out
inc
aas
jbe
jmp
idiv
fsubr
sbb
add
jne
mov
cli
and
cld
sub
cmp
cmp
movs
les
mov
ins
pusha
ror
adc
pop
call
outs
call
and
stc
std
and
js
lock
neg
dec
fmul
mov
outs
push
lock
data16
mov
dec
or
mov
dec
xchg
into
xlat
in
add
int
loop
mov
push
dec
jg
pop
fwait
pop
mov
push
cmp
call
je
in
test
ins
mov
jmp
retf
out
jb
ss
jp
pop
push
gs
xor
inc
mov
imul
sbb
jnp
xor
fidivr
mov
jo
mov
into
sub
dec
mov
pushf
xchg
rol
loopne
pop
inc
cmp
inc
mov
mov
mov
pop
in
pop
xchg
jmp
pop
push
mov
inc
arpl
mov
cwde
inc
fiadd
jl
push
cmps
jnp
sub
(bad)
mov
jnp
mov
jns
inc
and
sub
mov
pop
xor
popf
scas
inc
jmp
pushf
out
sbb
cmp
in
int
inc
mov
cmps
sub
aad
ds
mov
push
enter
rcl
enter
fisubr
inc
stos
test
ja
jne
mov
push
jp
mov
iret
sub
jp
mov
js
ret
or
in
mov
int
cmp
movlps
mov
fmul
adc
cmp
js
ins
stos
push
pop
retf
je
xor
pcmpgtw
enter
or
loope
push
enter
push
fisttp
lods
sbb
in
jne
int3
jno
aaa
in
mov
pop
adc
enter
in
lods
scas
repnz
and
mov
cwde
lea
sbb
das
or
push
dec
call
fdiv
(bad)
les
test
xchg
push
xrelease
stc
pop
cmp
icebp
into
add
int
iret
(bad)
mov
jp
jg
jecxz
call
je
dec
outs
ins
and
cmps
add
xchg
xchg
pop
cmp
xchg
cdq
xchg
xchg
mov
sub
xchg
not
sbb
mov
bound
ret
sbb
(bad)
fdivrp
sub
and
mov
mov
test
(bad)
fcom
fimul
jae
inc
stc
pop
(bad)
mov
lock
test
fwait
or
popa
mov
clc
scas
hlt
fisttp
lods
pusha
inc
push
jge
mov
jp
add
leave
push
test
std
enter
test
shl
sbb
mov
cmps
adc
push
cmps
es
inc
dec
fistp
mov
push
leave
jge
adc
adc
push
mov
cmp
and
sub
loope
sbb
dec
sub
and
fs
or
enter
cmp
push
jo
fdivr
inc
mov
fwait
jb
push
add
inc
div
outs
aaa
iret
mov
mov
icebp
mov
iret
xlat
aas
inc
es
cmp
mov
sub
xchg
int3
pop
inc
loopne
movs
outs
and
dec
pop
std
add
pop
mov
cbw
jp
mov
movs
outs
test
push
inc
pop
push
lock
push
cmp
retf
add
(bad)
aaa
adc
add
rcl
cwde
or
(bad)
pop
dec
aam
add
inc
pop
retf
cmps
imul
dec
(bad)
sub
jae
xor
test
stc
add
or
clc
call
jmp
mov
sbb
and
or
jae
pushf
adc
xor
jmp
mov
or
xchg
inc
neg
pop
sbb
loop
mov
mov
in
enter
pop
js
xor
cli
and
inc
mov
jns
pusha
sbb
(bad)
out
mov
into
icebp
and
jg
xchg
cmps
mov
(bad)
ins
adc
in
xor
out
push
inc
cmp
test
cmps
inc
inc
pop
scas
popa
mov
out
pop
lods
pop
retf
mov
js
pop
in
mov
xchg
je
lods
cld
js
stos
sar
aaa
sub
jns
xchg
pusha
jne
mov
adc
push
ja
int
in
das
sub
xor
hlt
jecxz
(bad)
mov
sub
mov
cmp
mov
ins
mov
sbb
jmp
retf
in
(bad)
push
imul
sti
fisttp
cmp
ror
sub
or
outs
out
cmp
call
cmp
adc
movs
and
add
out
xchg
mov
push
repz
outs
sub
add
jl
ficom
add
mov
or
ret
adc
stos
sbb
push
out
(bad)
lds
cwde
das
lods
outs
fidiv
ins
push
test
repz
test
(bad)
jnp
lea
mov
fisubr
ss
mov
add
mov
mov
adc
adc
sub
leave
or
mov
or
or
push
ss
fadd
cmp
push
fdivr
add
push
pop
sti
js
mov
or
lahf
js
popf
sub
cmps
jns
push
push
fcom
jg
adc
inc
fs
mov
les
push
enter
sbb
mov
add
and
imul
xor
mov
push
ins
fwait
cmp
mov
mov
stc
outs
jno
cmp
push
push
arpl
(bad)
dec
and
(bad)
fcomp
lods
push
popf
lods
push
or
lods
xchg
xchg
int3
inc
push
add
inc
enter
fldenv
inc
sub
pop
sub
cmp
jns
mov
mov
mov
sub
sbb
mov
jmp
retf
dec
sar
pop
push
dec
leave
das
cmc
sbb
add
add
xor
dec
add
push
and
jmp
or
xor
inc
(bad)
(bad)
dec
sbb
or
jo
shl
inc
gs
pop
jns
loope
mov
cmp
mov
mov
or
mov
ror
jae
sbb
retf
aas
cmp
dec
xor
in
aaa
retf
std
das
dec
scas
ret
repnz
push
test
cwde
test
imul
rcl
in
adc
sbb
and
nop
rol
push
inc
inc
dec
adc
(bad)
jecxz
popa
daa
iret
fnstsw
sub
cwde
xchg
adc
sbb
out
std
rcl
repz
and
int
inc
repz
jg
mov
aad
ret
cmps
mov
xor
lds
cmp
adc
jp
(bad)
jb
xor
mov
mov
or
cmp
inc
adc
cmp
mov
out
aas
imul
xchg
adc
dec
test
sub
pusha
imul
cmp
cdq
mov
xchg
xor
mov
jo
adc
cmc
pop
xchg
dec
iret
pop
rol
dec
lods
sahf
fcomp
mov
pop
jle
lds
add
mov
sub
sbb
add
push
cmps
ret
jns
pop
inc
mov
js
rol
cmp
pop
stos
clc
inc
cmp
fcomp
ret
repnz
xor
sbb
test
sub
push
adc
retf
cdq
leave
dec
xchg
add
inc
adc
xor
xor
or
icebp
jecxz
ror
fild
xor
sub
or
xchg
in
bound
das
cmps
dec
loop
cdq
jae
int3
or
xor
push
inc
lods
push
mov
stos
inc
xchg
mov
aad
add
fmul
or
xchg
sbb
dec
movs
xchg
fwait
mov
dec
ja
mov
mov
mov
test
mov
fdiv
push
pop
or
(bad)
call
cmp
pop
sub
not
push
pusha
or
pop
mov
and
jo
dec
xcrypt-ctr
cmps
pop
adc
sbb
fidiv
icebp
mov
fwait
sbb
pop
xor
dec
cs
in
xchg
push
hlt
fwait
push
dec
ret
ficomp
pop
xchg
and
popf
mov
in
leave
stos
push
clc
aad
push
pop
test
in
cmp
ror
mov
sub
dec
into
mov
std
mov
jp
and
or
cmp
xchg
fistp
mov
or
(bad)
pushf
mov
pop
lds
mov
pop
inc
bound
fwait
xlat
ret
js
out
aaa
push
cmp
test
(bad)
push
push
adc
cmps
or
mov
xchg
ss
and
loopne
mov
cmc
ret
dec
or
mov
cwde
ss
add
pop
lea
mov
inc
lods
sub
scas
add
aam
fdiv
pop
fidiv
es
push
je
ret
mov
mov
ret
inc
(bad)
mov
icebp
dec
sub
mul
loope
lock
xor
ins
mov
test
js
mov
jl
repnz
aaa
and
aas
test
lea
mov
fdivr
pop
jb
add
aas
pop
test
inc
adc
icebp
rcl
adc
mov
mov
out
imul
cdq
push
cmp
add
fwait
dec
repz
xchg
jecxz
jle
mov
cmp
das
ret
jp
add
aas
jecxz
mov
jmp
mov
sbb
push
fist
scas
fidivr
test
out
popa
rcr
fisttp
pusha
and
xchg
add
mov
dec
push
mov
sbb
jle
inc
pop
jmp
push
out
push
xor
(bad)
jne
push
mov
int
cmp
outs
jae
and
lds
mov
sbb
jnp
inc
inc
popf
adc
rol
or
mov
sub
push
push
dec
movs
jecxz
lds
cld
test
shl
xchg
mov
scas
cmps
cmp
retf
jne
cli
scas
ret
xchg
dec
xor
rcr
fcom
adc
arpl
cmp
push
jp
sub
or
lea
cli
dec
inc
call
pushf
sub
ss
fidiv
jbe
xor
outs
scas
repz
call
ins
test
push
call
int
sbb
lea
test
out
lds
ins
mov
pushf
in
pop
push
(bad)
push
dec
inc
jp
pop
sar
xor
clc
fdiv
retf
in
dec
pop
outs
dec
das
lea
iret
pop
ja
call
test
push
xor
lds
dec
ret
mov
mov
aad
nop
lods
inc
mov
call
inc
cmp
out
sbb
push
sbb
fs
sahf
cmp
jbe
adc
rcr
imul
(bad)
cld
popa
or
daa
fwait
mov
int3
xchg
mov
or
pop
int
xchg
sbb
jns
dec
jne
adc
ret
pusha
pop
pop
mov
cmp
dec
xor
mov
into
mov
cmc
jp
pop
sub
push
fxch
mov
sbb
mov
addr16
fwait
mov
inc
scas
mov
fimul
xchg
movs
icebp
cmp
call
outs
or
repnz
loopne
cmp
sub
daa
pushf
jmp
leave
lea
xor
ins
(bad)
idiv
shr
push
cmp
leave
add
ficom
loope
outs
xlat
in
and
mov
shl
icebp
lds
mov
and
add
or
mov
adc
js
sbb
ret
ret
mov
ror
mov
jl
cwde
out
loope
lods
sahf
hlt
xlat
addr16
and
shl
stc
jg
mov
adc
hlt
mov
jns
and
push
dec
je
lods
mov
mov
mov
dec
sbb
mov
push
pusha
or
pop
jle
shr
pop
jo
pop
jnp
enter
or
mov
fiadd
xor
in
jmp
pop
and
pop
sbb
or
gs
add
int
imul
or
test
mov
fistp
mov
jno
push
scas
sbb
in
pop
mov
push
add
in
(bad)
cs
push
rcl
jge
(bad)
pushf
mov
pop
retf
mov
sub
mov
jecxz
enter
lods
fstp
imul
cdq
mov
xchg
adc
call
shl
popf
scas
cdq
ret
mov
inc
jl
repz
jo
adc
and
xchg
loopne
cmc
fistp
stos
sbb
mov
stos
inc
(bad)
xchg
or
(bad)
xchg
movs
mov
imul
cld
pop
jmp
mov
cld
dec
push
cmp
inc
repnz
sub
outs
inc
adc
cs
mov
inc
xor
movs
push
lea
call
jl
ret
int
inc
push
inc
popf
cmp
cmp
push
(bad)
ja
mov
push
jns
jge
outs
mov
jmp
jg
lea
repnz
cmc
cmps
mov
out
stc
leave
sub
movaps
cdq
test
add
sbb
clc
dec
popf
lea
adc
mov
js
fist
inc
fwait
(bad)
bound
dec
out
mov
xchg
cs
sbb
sti
scas
mov
pop
into
lock
mov
xor
jbe
mov
iret
push
lds
pop
or
mov
fbld
push
and
jae
push
xor
xchg
pop
jp
pushf
sbb
pop
aaa
fidivr
jo
xor
xor
or
fnsave
dec
shr
sbb
cmp
outs
aam
ins
push
dec
cmp
inc
adc
test
mov
inc
int3
mov
out
push
stc
mov
repz
adc
shr
aam
fsub
adc
dec
dec
loop
cs
loope
fadd
add
retf
ror
or
cmp
jle
sub
in
enter
fstp
jge
mov
test
stos
push
and
bound
sti
(bad)
xchg
jl
test
(bad)
leave
sbb
stc
cmc
lock
jecxz
and
pop
sub
stos
mov
ds
sti
clc
hlt
jle
cmc
jb
jbe
pop
lods
pop
shr
lock
mov
rol
popf
sbb
repnz
pop
ins
adc
xor
dec
xor
mov
aam
sub
cmp
loop
loop
js
pop
rcr
scas
stos
or
std
inc
jno
cmc
mov
mov
sbb
ds
and
mov
iret
cmp
or
xlat
cmp
mov
pop
fimul
pop
jmp
in
in
xor
pushf
arpl
ret
pop
sbb
imul
jnp
and
or
mov
into
icebp
sub
xchg
icebp
ficomp
xor
cld
xor
sbb
pop
and
imul
and
pop
push
adc
aaa
into
xor
std
movs
jmp
mov
adc
fst
test
movs
call
pop
addr16
xchg
and
or
loop
sbb
pusha
cmp
inc
mov
jge
add
push
stos
jb
out
inc
xor
sub
test
les
cmc
adc
push
xor
mov
push
push
(bad)
xchg
xor
fistp
mov
inc
inc
dec
retf
jg
call
mov
push
loope
in
mov
mov
mov
lods
iret
aas
fld
pop
cmc
add
mov
mov
xchg
nop
out
or
inc
mov
cdq
xchg
imul
xchg
out
and
aad
inc
sbb
jno
dec
push
rcr
(bad)
daa
rcr
pop
sbb
not
cmp
rcl
dec
faddp
std
cwde
push
ss
sub
inc
jmp
sar
repnz
push
daa
gs
jmp
xchg
mov
sbb
les
sbb
loop
push
mov
fcomp
adc
fisub
or
mov
cmp
hlt
pop
xchg
aas
sti
jle
mov
shl
call
imul
inc
scas
stos
(bad)
ret
xchg
sub
call
jge
(bad)
push
cmp
xchg
cs
out
adc
data16
mov
mov
or
push
mov
sub
setb
out
and
jae
push
mov
xchg
ret
or
lea
mov
cmp
pop
add
push
jle
inc
retf
leave
(bad)
icebp
jnp
xor
div
mov
cs
jmp
mov
je
call
in
push
jbe
out
adc
in
jo
cwde
test
xchg
cmp
and
mov
enter
jne
out
repz
jle
loopne
and
dec
fwait
push
popf
mov
sbb
adc
jg
mov
dec
pushf
pop
push
(bad)
inc
mov
ins
inc
lods
inc
mov
add
cmp
test
cmc
mov
pushf
iret
xchg
arpl
pop
ret
shl
fadd
inc
sahf
pushf
sub
in
mov
repz
dec
imul
sbb
imul
jmp
inc
popf
test
pop
sub
mov
inc
mov
sub
mov
mov
jae
jno
cli
test
lahf
push
or
(bad)
int
rcl
aas
pop
push
arpl
mov
mov
in
mov
or
adc
not
adc
xor
sahf
cmp
and
das
cmps
sbb
jno
cli
and
cmp
pop
rep
call
call
outs
xlat
inc
cmp
or
cmp
scas
add
addr16
jp
inc
jo
lds
push
movs
xor
fisub
pop
(bad)
or
in
sahf
jge
cmp
enter
jb
fcom
(bad)
lea
xlat
dec
jne
imul
fs
xchg
and
das
pusha
cmc
sub
shl
bound
leave
inc
mov
push
cs
out
xlat
and
pop
call
or
sub
xchg
pop
(bad)
movs
push
cwde
mov
sub
hlt
out
ror
xor
dec
(bad)
cli
xchg
sbb
pop
ins
inc
push
ins
jb
arpl
xchg
pop
sbb
cmp
(bad)
xlat
cmp
inc
ins
and
fnstcw
popw
sbb
mov
pusha
cld
mov
push
imul
jno
lods
inc
sbb
jmp
ins
xchg
rol
sub
hlt
inc
popa
mov
mov
sbb
inc
(bad)
fld
pop
fnstenv
push
xor
jns
cmp
and
ins
dec
in
sbb
nop
push
mov
or
jmp
mov
test
movs
out
xor
mov
push
aad
or
or
dec
jecxz
inc
dec
mov
adc
adc
and
sbb
cmpnleps
test
scas
outs
mov
dec
mov
frstor
(bad)
adc
xchg
push
repnz
and
xor
cs
push
mov
in
mov
xor
mov
int
aas
sbb
sub
cs
pop
clc
jno
mov
push
mov
sbb
in
jb
sbb
jmp
add
dec
fimul
aas
or
test
mov
jg
repz
sti
movs
rol
stos
lea
inc
inc
nop
pop
ins
dec
sahf
sub
push
jl
or
xchg
jecxz
mov
sbb
ins
jne
repnz
pop
adc
inc
cmp
mov
pushf
sahf
ins
cmps
fnstsw
jo
push
pop
push
mov
or
or
fisub
mov
xchg
lahf
mov
movs
or
xchg
push
xlat
push
inc
pop
cmp
popf
pop
das
and
jg
cmp
outs
sbb
sub
xchg
cs
mov
add
int
cli
sbb
(bad)
inc
inc
mov
out
add
inc
inc
int
cs
pusha
sti
imul
cmp
mov
push
push
and
jno
in
imul
sub
adc
xor
outs
add
xor
mov
test
xor
push
cmps
sti
sbb
stos
add
jno
pop
push
jecxz
sbb
in
mov
lods
inc
or
aad
inc
je
gs
xor
push
fadd
cs
(bad)
in
pusha
jge
(bad)
outs
mov
(bad)
mov
jns
jbe
shr
add
pop
ja
fneni(8087
jb
daa
xor
pop
fwait
repz
cmc
fcom
push
mov
pusha
fcomp
push
add
arpl
mov
mov
sub
push
push
jp
or
test
cmps
pop
sbb
push
xor
out
sahf
shr
mov
sbb
add
data16
cmp
ss
aad
or
sub
arpl
adc
cmp
push
jmp
mov
pop
fistp
pop
lods
sbb
sbb
aam
mov
bound
popa
xchg
call
rcr
ins
int3
sub
loop
in
inc
pop
jns
int
test
jmp
add
dec
cmp
push
sbb
xchg
adc
fist
jle
mov
mov
js
scas
ror
xor
mov
push
andnps
sub
sbb
or
fisttp
fs
add
sub
shr
jmp
sbb
xor
popf
stc
push
or
ret
fdiv
jl
sbb
cmp
rep
mov
ret
loop
dec
loope
mov
cld
xchg
iret
fmulp
xor
mov
mov
dec
cmp
mov
fmul
pop
xchg
movs
jnp
in
cmp
push
callw
sti
pop
adc
fistp
push
cs
jge
mov
icebp
(bad)
outs
(bad)
sahf
adc
loope
xor
fistp
sti
sbb
leave
adc
and
jno
(bad)
call
cmp
aas
mov
xor
mov
jns
iret
outs
loopne
dec
mov
mov
adc
mov
data16
pusha
mov
lds
mov
mov
fimul
mov
mov
retf
inc
jb
jmp
cdq
fs
ja
sub
mov
mov
mov
int
jns
push
stos
imul
xchg
and
ror
cdq
nop
loopne
dec
jl
jne
cli
push
or
mov
aas
inc
(bad)
mov
call
test
shl
scas
outs
aad
cmps
cmp
xor
in
xor
icebp
cmc
shl
call
cmp
test
jb
add
pop
call
ror
push
mov
sahf
jmp
repz
push
sub
adc
(bad)
fisubr
push
lock
push
mov
mov
fistp
imul
ror
dec
loopne
cmp
ja
rcr
repz
test
inc
push
cmp
and
(bad)
loop
in
adc
cs
cmps
loopne
jecxz
out
jmp
sbb
popa
cmp
mov
push
stos
cwde
sbb
ins
stc
arpl
movs
add
inc
add
sahf
mov
and
jmp
add
push
jg
and
mov
out
jmp
add
xchg
popa
dec
mov
into
add
mov
mov
mov
outs
pop
mov
(bad)
enter
ret
cmp
push
xor
cmp
loope
add
inc
push
repnz
push
pop
cmp
jnp
cmp
mov
sbb
rcl
ss
or
inc
adc
in
jnp
add
stc
call
xor
les
push
fst
or
adc
stos
pop
jae
nop
jo
inc
cwde
loop
xor
xchg
push
mov
lods
leave
(bad)
icebp
int
hlt
jnp
xchg
sub
ror
cmps
ror
daa
scas
(bad)
(bad)
or
sub
aad
dec
addr16
mov
dec
ja
neg
loope
fstp
fst
or
xchg
sub
mov
push
std
jle
in
push
cwde
push
addr16
cs
addr16
int
and
jmp
cmp
test
push
sbb
mov
jl
cmps
inc
mov
int3
push
pop
pop
sub
jmp
pop
fs
mov
aaa
and
mov
push
movlps
test
inc
popf
data16
imul
into
ret
add
adc
lods
push
push
sbb
or
xlat
push
dec
gs
jae
jns
test
repz
cwde
movs
xchg
push
lds
int
dec
adc
in
pop
stos
mov
cmp
xchg
adc
sub
adc
ja
cmp
pop
imul
push
pop
pop
sub
mov
jnp
sub
jle
(bad)
sbb
xchg
lods
push
cmc
ret
xor
add
scas
xor
mov
outs
pop
cmp
iret
cmp
outs
cli
cmp
sub
mov
into
jno
cmp
rcr
xchg
xchg
jmp
xor
mov
jge
dec
add
js
mov
iret
mov
cmp
xor
out
rol
cmp
imul
mov
jmp
pop
or
push
(bad)
inc
adc
clc
and
xchg
imul
dec
outs
jnp
mov
lock
lahf
xchg
xor
cld
fs
lea
fistp
std
xor
and
jmp
mov
data16
scas
(bad)
mov
or
inc
inc
loopne
rcl
xchg
push
xchg
push
mov
adc
xchg
adc
adc
movs
ja
mov
test
imul
div
imul
mov
pop
mov
inc
mov
jmp
outs
dec
and
and
ret
bound
push
js
dec
sbb
pushf
out
daa
push
jmp
xchg
aad
movs
cmp
sub
popa
cmp
rol
sahf
jmp
cwde
outs
enter
rcl
add
les
mov
adc
and
fcom
dec
mov
jns
pop
jbe
jle
and
stos
adc
pop
or
(bad)
addr16
jle
stos
mov
out
inc
xor
vmovshdup
dec
shr
fdivrp
pop
or
test
inc
and
in
in
inc
sar
(bad)
cmc
aad
test
sahf
fstp
inc
lahf
pop
mov
jmp
mov
lea
es
jg
call
lods
mov
mov
mov
hlt
lahf
adc
and
push
hlt
push
dec
lods
push
dec
or
or
xor
sub
retf
sbb
xor
pushf
cli
mov
test
pop
in
xor
fxtract
mov
nop
jmp
pop
and
das
outs
rcl
xchg
xor
lods
pop
shl
cmp
jge
inc
xor
jo
pop
jne
fistp
push
pop
call
pop
mov
icebp
mov
cmc
imul
mov
jbe
push
cmp
cdq
pop
loop
cli
movs
pop
xor
retf
add
imul
test
mov
(bad)
ds
or
mov
pop
enter
pushf
in
fs
cmp
and
enter
jae
xor
retf
fcomp
(bad)
(bad)
or
(bad)
ficom
adc
mov
call
pusha
(bad)
div
xor
out
push
xor
adc
add
pop
mov
icebp
inc
xchg
xchg
push
jp
pop
push
xchg
add
je
xlat
add
jmp
cmp
adc
hlt
jae
sub
adc
(bad)
jns
xchg
jp
inc
pop
cmc
scas
js
mov
jnp
mov
jnp
inc
(bad)
(bad)
dec
in
(bad)
in
and
mov
adc
cmp
lahf
dec
jne
mov
repnz
dec
lods
cmps
push
sbb
pop
push
push
sbb
test
mov
adc
jmp
(bad)
cmps
cmp
movs
sbb
mov
mov
fild
in
cdq
dec
sti
call
outs
out
fdivr
int3
mov
jl
outs
xor
xchg
push
jecxz
repnz
add
jecxz
fwait
add
stc
cmp
shr
xchg
movs
cmps
pop
pop
outs
cs
stos
fwait
sub
pop
jmp
rcr
inc
sbb
push
add
popf
xor
loopne
movs
add
pop
xchg
xor
jnp
jno
ja
aas
repnz
pop
push
pop
das
mov
scas
cmc
mov
fnstcw
repz
add
lods
add
xor
loope
sub
mov
cmps
jb
pusha
ins
adc
jo
jg
imul
jg
jge
mov
(bad)
jge
rcr
add
rol
or
xor
fucomi
dec
jnp
mov
pusha
out
outs
lahf
sub
rcl
sbb
out
xchg
and
mov
rcl
mov
cld
div
loop
cmps
dec
das
scas
mov
push
(bad)
loopne
and
shl
lea
outs
xor
pushf
ror
(bad)
jno
retf
xchg
(bad)
fisttp
add
sbb
pusha
xor
ins
jmp
jnp
outs
xchg
stos
test
nop
pop
and
jmp
dec
bound
inc
or
pop
iret
or
mov
sub
jp
cmp
lds
into
adc
ins
cld
jno
push
retf
adc
cs
aam
dec
push
push
and
jle
jg
or
iret
dec
loope
sbb
jecxz
xlat
sbb
test
(bad)
pusha
xchg
loopne
ror
aad
call
sub
mov
jecxz
push
imul
push
movs
pop
xor
cmp
and
mov
clc
ror
push
jns
xlat
pop
mov
int3
fiadd
test
mov
iret
clc
inc
sub
push
inc
out
jno
and
aas
inc
fsub
jl
leave
sub
bswap
in
pushf
cmps
fsubp
(bad)
popa
and
mov
push
mov
and
ds
leave
xchg
mov
(bad)
mov
arpl
xlat
dec
jbe
hlt
fsub
dec
jb
push
int3
pop
mov
jnp
retf
jno
shr
dec
leave
push
call
xchg
call
cmps
mov
hlt
mov
test
jae
cmp
or
int
jo
add
xchg
push
cmc
(bad)
retf
cmp
(bad)
ds
sbb
pop
test
out
iret
sub
push
pop
retf
sub
dec
or
xor
mov
aaa
popa
cmp
adc
jmp
jge
movs
pushf
sub
sbb
aas
mov
(bad)
sub
inc
mov
mov
xor
(bad)
cmp
sbb
nop
and
out
icebp
movs
mov
into
loope
fdivr
int3
arpl
dec
add
cld
xchg
jae
imul
push
aad
call
inc
or
inc
fnstcw
rol
jle
imul
adc
mov
ror
push
push
in
inc
mov
add
xchg
mov
cwde
popa
aas
ins
dec
cmp
add
xor
xchg
adc
add
in
jecxz
gs
mov
push
bswap
push
xchg
out
fisttp
stc
in
dec
adc
cmp
add
push
cmp
ror
neg
add
aad
jg
(bad)
jo
fisttp
lods
test
icebp
lods
jae
outs
(bad)
push
mov
cmp
fist
pop
and
lods
inc
dec
xchg
hlt
ins
stc
in
mov
inc
adc
add
push
jecxz
and
outs
mov
mov
int3
sub
mov
les
in
xchg
xor
dec
dec
sub
shr
pop
cld
and
xchg
add
jecxz
inc
cmps
fs
mov
cwde
sbb
xor
int
bound
jns
cmp
rcr
sbb
or
or
mov
cld
add
sub
pop
mov
adc
mov
repnz
push
(bad)
stc
mov
in
cld
or
xchg
cmp
outs
les
xchg
fmul
in
xor
add
inc
jg
xor
xor
mov
dec
jmp
sbb
jno
dec
cmp
mov
call
or
push
test
stos
mov
ret
push
mov
jl
pop
clc
fimul
sahf
fwait
pop
fwait
xchg
shl
mov
sub
out
pop
mov
xor
or
nop
sub
jl
or
stos
cmp
sub
(bad)
(bad)
or
pop
cwde
sub
clc
mov
sbb
fcomp
add
shl
cmp
call
loopne
xchg
inc
cmp
lods
dec
adc
mov
mov
(bad)
cmp
loopne
pop
or
pop
mov
test
sar
jecxz
mov
fwait
pop
test
mov
aaa
sbb
fcom
jae
rcr
mov
add
imul
ins
out
xchg
jl
inc
xor
pop
mov
mov
xor
add
push
sti
out
cmp
ror
push
push
dec
inc
das
cmp
or
inc
pop
sub
adc
jle
out
sti
hlt
outs
jo
call
popf
xchg
ins
pop
scas
fcomp
lock
je
push
push
and
cmp
cmp
gs
mul
and
cmc
add
repnz
inc
sub
sbb
xchg
cmp
rcr
jne
ret
std
jo
sub
jbe
mov
jge
mov
gs
fs
(bad)
mov
dec
adc
repnz
xchg
(bad)
sub
mov
mov
xchg
imul
call
jno
test
push
fistp
sub
jge
sbb
inc
mov
test
popf
jecxz
mov
pop
mov
cmc
loopne
neg
ds
addr16
jmp
push
jb
pop
cmp
mov
test
js
sub
push
rep
imul
xor
push
mov
dec
lods
and
push
xor
ins
das
push
mov
sbb
sbb
jnp
push
imul
and
test
xor
jecxz
jmp
mov
aaa
fadd
jns
test
(bad)
pop
push
fcmovne
stos
stos
call
das
enter
call
cdq
data16
(bad)
imul
ror
add
ja
mov
lods
cmpps
push
pop
out
adc
pop
fldenv
mov
cmps
sti
popf
mov
pop
pushf
mov
out
in
pop
dec
out
div
pop
mov
jo
bound
xchg
imul
jo
jmp
aaa
add
imul
lahf
retf
bound
data16
jbe
movs
cld
sub
xchg
fdivr
cmp
daa
out
mov
cmps
mov
pop
rol
or
xlat
dec
xor
gs
inc
mov
aad
mov
cmps
imul
dec
cmps
rcr
std
lahf
xor
out
or
mov
imul
les
mov
(bad)
xchg
popf
xor
ret
ja
into
xchg
repnz
xchg
in
(bad)
icebp
push
gs
in
jns
pop
fstp
not
repz
ret
cmp
inc
pop
dec
add
mov
xchg
test
pop
mov
shl
les
mov
pop
mov
(bad)
div
fisub
(bad)
jmp
mov
movs
mov
std
pop
mov
mov
sbb
or
out
aad
(bad)
pop
std
pop
cmp
fldenv
aas
pop
gs
in
and
and
mov
pop
sub
shl
mov
mov
push
js
sbb
mov
lds
fdivr
lahf
out
bswap
test
add
in
mov
mov
or
shr
mov
jns
xor
loop
inc
jbe
mov
push
shl
mov
int
xchg
push
mov
sbb
(bad)
cli
mov
scas
mov
loop
or
(bad)
lock
mov
jecxz
xchg
xor
fsub
sub
push
loop
pop
mov
outs
icebp
test
outs
xchg
xor
push
das
add
inc
or
and
mov
js
(bad)
fmul
shr
jp
jmp
or
ficom
or
call
shl
dec
push
add
retf
fs
les
pop
movs
std
rol
or
or
ins
ret
xor
mul
push
and
jg
call
push
data16
or
pop
cmps
ja
pop
std
aam
add
jno
sub
mov
fld
jb
jne
out
add
xchg
add
ja
adc
sbb
pop
je
call
aaa
sub
pusha
aam
lahf
dec
imul
imul
push
add
mov
ret
mov
add
mov
mov
ins
pop
adc
shl
jbe
sub
shl
loop
lods
pop
lea
xchg
sbb
leave
test
pop
sbb
das
(bad)
fistp
pop
in
pusha
push
pop
mov
pop
test
and
pop
clc
out
shl
xchg
lods
mov
enter
(bad)
inc
sbb
(bad)
pop
loopne
inc
dec
sahf
stos
jno
les
fadd
jmp
mov
inc
or
or
inc
add
push
popf
push
inc
push
sbb
sub
sub
(bad)
cwde
xor
sar
gs
outs
sahf
cmp
les
jg
push
jmp
outs
test
mov
mov
jmp
lock
mov
adc
std
sar
cmp
cwde
repz
push
sub
in
aas
jle
in
es
push
xchg
pop
(bad)
inc
(bad)
adc
sub
mov
pop
xor
loopne
(bad)
push
add
test
jecxz
sub
or
rol
call
imul
xor
and
cmps
icebp
push
mov
inc
fiadd
(bad)
shr
mov
cmp
sub
shl
dec
mov
(bad)
imul
add
fiadd
sub
ins
xor
in
pop
call
cli
mov
enter
sbb
cmp
movs
cmp
add
mov
(bad)
arpl
xor
in
mov
dec
xor
adc
sub
test
in
fs
retf
(bad)
push
lahf
mov
adc
inc
outs
inc
nop
jno
lahf
sbb
int
mov
xchg
shl
(bad)
out
xor
and
shr
push
cld
inc
pop
ret
dec
(bad)
test
add
out
idiv
test
inc
int
xor
mov
xor
test
in
cmps
add
cmp
and
call
in
mov
jmp
mov
cmp
jae
enter
stos
outs
inc
xlat
popf
jns
jecxz
jo
sub
cdq
pop
jb
pusha
or
imul
mov
jl
pop
push
push
sub
or
push
adc
hlt
jo
jbe
ss
xor
cmc
popa
fadd
xchg
cmp
enter
adc
jg
(bad)
add
clc
mov
fwait
inc
cmps
ja
add
mov
pushf
pusha
ja
xchg
mov
movs
test
pop
retf
sub
xchg
je
movs
scas
mov
inc
mov
test
or
pop
push
ss
sti
fcomp
test
clc
xchg
movs
ins
cli
int3
sbb
jmp
retf
addr16
sti
imul
sbb
or
sahf
and
retf
dec
outs
xchg
adc
nop
jb
lahf
cmp
add
and
add
stc
test
add
repz
inc
rol
add
mov
bound
push
fldcw
and
inc
and
mov
gs
fisub
daa
repnz
or
mov
pop
pusha
ins
push
inc
xor
fs
jne
ins
and
push
and
mov
icebp
test
repz
jo
pop
repnz
ror
and
jmp
lods
jo
dec
cmp
jl
jnp
cmp
and
xlat
inc
push
jge
daa
push
xor
ret
push
loop
mov
adc
fwait
jo
push
imul
dec
ffree
jnp
dec
sbb
imul
xor
(bad)
jmp
dec
push
ins
cli
mov
call
mov
fstp
cmps
daa
mov
ss
shr
jo
sqrtps
or
pop
dec
mov
retf
mov
cli
enter
pop
leave
outs
xchg
dec
dec
add
das
fild
fnstsw
xchg
adc
out
mov
mov
add
push
mov
ficomp
and
mov
test
cmp
scas
mov
and
push
and
jbe
bound
(bad)
ror
mov
dec
sahf
mov
scas
pop
mov
das
push
fidiv
test
inc
add
and
imul
fild
adc
test
dec
mov
mov
loope
nop
fstp
outs
mov
sub
mov
ins
jne
mov
push
repnz
fbld
push
test
into
cmps
(bad)
pop
lods
lahf
ret
addr16
push
retf
in
cmp
outs
jo
sub
sahf
vpsllq
test
shr
popa
push
es
xchg
imul
fisub
pushf
daa
jle
cmp
jnp
inc
cmps
lea
and
retf
push
and
cs
outs
jnp
lahf
fistp
cli
div
sti
dec
inc
out
adc
add
xor
fld
mov
fsubr
jbe
add
lods
xchg
push
lock
mov
mov
cs
aad
jnp
imul
gs
lea
sub
js
repnz
xchg
mov
ja
or
dec
push
add
pop
outs
add
aaa
mov
shr
sub
(bad)
and
adc
gs
jmp
inc
inc
scas
pop
xor
add
mov
push
pop
xchg
or
pop
pop
test
push
dec
push
pop
mov
or
or
aas
js
add
imul
xor
xchg
iret
jns
inc
mov
jmp
sbb
or
mov
jle
adc
push
mov
(bad)
cmp
inc
jecxz
xor
push
outs
cwde
or
pop
outs
or
xor
lock
mov
xchg
mov
xlat
push
and
mov
gs
adc
add
js
push
fisubr
or
pop
divps
add
pop
add
pop
xchg
lods
in
xor
ret
dec
push
mov
dec
cli
retf
retf
jbe
lock
add
lods
icebp
xor
dec
(bad)
mov
and
mov
or
cld
xor
aam
push
xor
je
cmps
mov
jmp
ja
pop
sub
jp
adc
jb
pop
mov
out
popf
sub
and
bound
adc
sub
xor
int3
mov
bound
les
in
imul
jne
fnsave
stos
mov
(bad)
test
mov
pop
adc
sub
test
mov
ss
or
pop
cmps
xor
sahf
retf
cld
ficom
loopne
aaa
jl
(bad)
jge
or
adc
jne
std
push
ins
push
or
pushf
xor
fst
sar
retf
push
sar
add
sub
mov
ret
shl
frstor
inc
xor
cmp
lods
movs
cmp
push
inc
push
push
add
pop
pop
es
cmc
mov
lods
adc
popa
movs
arpl
in
retf
mov
rcr
aas
cdq
cmc
ins
neg
mov
jae
scas
mov
ins
jmp
inc
or
add
(bad)
sub
xor
cmps
jne
xchg
dec
mov
adc
xor
arpl
in
adc
mov
jns
sub
ss
inc
adc
cmp
push
push
push
push
test
shl
mov
in
sti
ja
cs
cmp
and
lock
cmp
repz
out
aaa
sbb
pop
and
cmp
mov
cdq
icebp
mov
sub
test
cwde
and
mov
xor
dec
push
pusha
sbb
leave
push
mov
or
repz
cs
xor
aad
mov
call
or
pop
hlt
imul
add
test
jae
and
arpl
pop
rcr
push
or
addr16
mov
sub
dec
push
push
pop
jl
call
mov
mov
or
(bad)
xchg
jecxz
pop
call
xchg
xchg
inc
cmp
mov
push
push
cmp
ds
cmp
stc
ins
sub
and
dec
call
outs
sbb
xchg
addr16
retf
int3
jo
out
test
sub
cmps
fdiv
ret
and
mov
jle
xchg
aas
sub
cmps
mov
push
mov
pop
push
push
je
and
call
loop
sub
and
xor
call
dec
fld
inc
popa
ror
jp
and
ins
movs
xor
xchg
inc
or
mov
ds
jge
adc
cmps
aas
shl
clc
and
add
sub
inc
jl
sub
cmp
push
or
enter
das
sbb
inc
add
sbb
leave
mov
in
fs
and
xchg
add
cmp
adc
sbb
sub
mov
sahf
inc
jp
ja
enter
lahf
jns
sbb
fstp
add
mov
push
(bad)
lods
mov
jg
xor
(bad)
scas
rcr
fisubr
(bad)
fdiv
outs
lea
aas
imul
xchg
mov
fs
pop
popf
sbb
cli
adc
(bad)
and
push
arpl
or
into
adc
das
dec
inc
loopne
std
ds
je
jmp
pop
cmp
adc
add
push
(bad)
nop
hlt
mov
repnz
daa
cmc
sbb
out
pop
inc
(bad)
fadd
mov
pop
mov
movs
xlat
les
pop
cmp
outs
das
jnp
neg
pusha
jmp
aad
jnp
test
dec
aaa
out
mov
adc
(bad)
pop
jae
fs
push
mov
retf
outs
lds
mov
ret
push
call
mov
mul
shl
enter
or
mov
push
mov
pop
mov
jl
imul
shl
ret
sar
push
xchg
jl
pop
sbb
jp
out
add
xor
push
push
jecxz
movntq
out
jg
rol
adc
xor
xlat
jmp
push
sbb
shr
cmp
xchg
push
add
arpl
adc
test
adc
outs
leave
std
add
out
inc
lods
sbb
in
test
jno
dec
mov
jnp
iret
inc
cmps
push
pop
fcmovnbe
test
and
adc
cmps
addr16
mov
pusha
sub
inc
pop
loope
pop
xlat
rol
hlt
sbb
mov
dec
jp
jo
mov
je
add
lock
movs
mov
mov
popf
push
rcl
cdq
jge
xchg
mov
cmp
xor
xor
fucomip
sub
lahf
sbb
sti
xor
fmul
dec
push
cmps
cld
xchg
enter
or
test
xchg
hlt
int3
pop
xchg
inc
adc
dec
or
xor
cmp
mov
mov
fwait
or
xlat
jne
sahf
ins
cmp
add
or
and
pop
rcr
jmp
fcomi
mov
cdq
mov
lea
loopne
ja
daa
pop
cmp
pop
sti
sbb
jbe
xchg
aaa
stos
mov
lock
std
jg
mov
pop
push
mov
push
stc
fnstcw
jae
cs
ficomp
mov
push
pop
sti
jl
dec
in
sub
push
idiv
mov
les
or
(bad)
push
repnz
mov
cli
and
loopne
xor
sbb
call
add
test
and
mov
imul
lea
dec
addr16
add
add
(bad)
out
jo
and
sbb
xchg
and
and
test
or
sub
xor
adc
pop
es
xchg
movs
push
fcomp
lock
shr
sbb
mov
movs
sbb
repnz
aam
gs
addr16
shr
jge
mov
cmp
inc
jmp
mov
scas
adc
scas
cmp
pop
sbb
or
sti
ret
mov
jns
jle
mov
jle
rol
in
adc
and
pop
add
mov
fimul
test
fnstcw
mov
aad
xchg
fisttp
test
mov
imul
cwde
sub
mov
push
dec
sub
pop
call
aaa
sbb
mov
sub
inc
mov
mov
push
adc
pop
mov
sbb
mov
into
xor
daa
into
jno
mov
int3
xor
mov
or
xchg
add
cmp
(bad)
out
mov
ss
fidiv
cmp
push
jmp
mov
out
pushf
aam
cli
ss
adc
xchg
jecxz
cmp
mov
loopne
cmp
fs
aaa
add
mov
push
mov
ins
sbb
sahf
ins
(bad)
ret
dec
mov
(bad)
jle
clc
scas
mov
cmps
fcom
out
fld
iret
out
mov
cwde
mov
imul
xor
cmp
ror
add
(bad)
mov
and
lds
and
retf
shl
mov
sub
push
jmp
test
hlt
push
sub
ror
cmp
mov
push
rcr
and
dec
scas
lock
mov
gs
adc
out
sbb
add
push
add
out
retf
fldcw
inc
xchg
clc
mov
cmp
out
cmp
cwde
(bad)
shr
sbb
ja
cs
call
or
cwde
(bad)
sub
mov
test
cmp
(bad)
popa
mov
bound
call
out
add
js
jns
test
pop
lds
daa
inc
push
sbb
cwde
arpl
sahf
jbe
sbb
mov
cwde
mov
push
sbb
(bad)
cmp
sub
test
out
cdq
mov
ins
ret
mov
mov
add
cmp
sbb
jne
cmp
add
mov
jb
mov
and
xchg
or
push
jb
std
mov
adc
and
bound
test
(bad)
and
jecxz
hlt
loope
dec
jns
je
push
mov
loop
scas
aas
es
fld
jb
jae
std
scas
xchg
out
in
dec
call
jl
adc
out
inc
mul
lea
scas
add
xchg
out
and
sti
scas
sub
cli
shl
out
add
mov
dec
sub
push
movs
and
push
sahf
clc
rcr
loopne
pop
dec
jae
popa
cmp
or
sbb
cmp
and
add
jecxz
sbb
(bad)
or
xchg
add
mov
xor
sti
movs
data16
mov
dec
mov
sub
push
stos
not
mov
mov
loope
pop
xor
mov
or
out
mov
cld
or
mov
jnp
add
ja
add
pop
data16
jge
jle
aaa
data16
les
(bad)
rcl
xchg
mov
pop
jl
cmps
out
jecxz
mov
or
scas
and
jae
ss
mov
call
(bad)
ins
inc
jbe
pusha
xor
xchg
pop
xchg
(bad)
jmp
repz
xchg
or
pop
cmps
xchg
jmp
sub
dec
xchg
xor
or
mov
jns
arpl
sub
js
inc
fwait
dec
add
retf
xchg
xlat
adc
xor
cmps
xor
jl
xchg
mov
je
xor
jns
rol
and
jmp
mov
jge
pop
and
mov
xchg
inc
jno
(bad)
mov
test
or
jbe
ret
mov
xor
pop
js
in
into
imul
jns
or
and
es
sub
push
into
adc
and
outs
mov
adc
retf
add
leave
daa
xchg
leave
cli
out
xor
mov
(bad)
popa
and
icebp
add
mov
jmp
scas
pushf
xchg
les
mov
fisttp
xchg
jmp
cld
mov
inc
cmp
pop
add
cmovne
sbb
inc
lea
sbb
fcomp
test
push
loop
iret
pop
jecxz
lea
fwait
and
imul
repz
loopne
rcr
js
xchg
stc
pop
sub
mov
popa
push
test
movs
ds
sbb
fnstsw
cwde
call
daa
loope
mov
cmp
sub
dec
push
add
sbb
mov
jae
sbb
test
mov
call
loopne
cwde
loope
fwait
mov
inc
jb
in
mov
in
pop
or
nop
jae
aam
xchg
xor
cmp
popf
jo
sub
and
(bad)
in
imul
out
xchg
lock
sti
cld
mov
mov
(bad)
jno
mov
pop
ffreep
aaa
adc
add
sub
xor
mov
xchg
cli
imul
inc
daa
mov
xor
push
pop
dec
mov
mov
loope
mov
pop
test
inc
out
hlt
ins
xlat
push
sbb
shr
xor
ss
mov
sbb
sbb
jle
aam
dec
(bad)
push
aam
sub
jl
xlat
dec
and
cmp
lds
push
nop
xchg
mov
add
scas
sbb
ins
adc
adc
adc
pop
popa
shl
mov
or
imul
push
push
mov
cmps
inc
aad
and
mov
fcom
repnz
aad
mov
cmps
dec
sti
jno
push
(bad)
aad
jo
aam
cmp
out
xchg
cmps
ja
sar
in
inc
inc
fs
jmp
sub
fcomp
cld
dec
cwde
jo
aad
sbb
call
addr16
or
loope
cli
gs
mov
das
and
pusha
add
rol
ins
(bad)
adc
fst
std
lock
(bad)
fidivr
(bad)
jle
push
cmp
popf
xchg
and
shl
xor
mov
mov
jno
je
xchg
xchg
sahf
adc
enter
fiadd
push
(bad)
jle
stos
adc
ss
mov
jl
cdq
dec
push
cmps
push
mov
dec
hlt
xor
jno
div
dec
jae
jecxz
push
push
dec
(bad)
lods
ror
mov
(bad)
aam
xor
mov
mov
pop
jecxz
mov
mov
cdq
inc
xchg
dec
or
shl
cmps
cmp
inc
lods
repz
xor
iret
outs
or
mov
sub
cmpxchg
in
out
mov
scas
and
cmp
arpl
leave
leave
xchg
jle
mov
mov
sub
cld
ror
sub
and
mov
xor
xor
push
xchg
push
out
mov
retf
mov
dec
in
push
sub
rcl
test
sahf
push
sbb
imul
repnz
repnz
(bad)
es
mov
test
pop
iret
jno
ins
mov
xor
or
sub
cs
push
vpsubd
(bad)
pop
cmp
add
mov
(bad)
icebp
hlt
stc
pop
out
xchg
jmp
adc
lahf
mov
cmp
or
out
out
xchg
js
lods
mov
cmp
inc
mov
aad
dec
movs
push
xor
jbe
mov
inc
mov
shl
jge
dec
outs
(bad)
fwait
jg
scas
(bad)
test
into
push
fmul
stos
(bad)
js
js
inc
sbb
icebp
fldenv
sub
mov
call
jg
enter
xor
add
out
mov
sub
in
add
pop
sbb
and
sbb
push
int3
ss
dec
rcl
leave
mov
mov
adc
shr
cs
or
add
test
mov
rcr
or
dec
imul
mov
mov
sbb
and
or
cmp
js
jb
test
or
pop
inc
(bad)
in
repnz
fcomp
outs
sbb
fst
test
add
nop
(bad)
cld
dec
mov
stos
and
jns
cdq
inc
mov
cld
and
das
jecxz
int3
ja
dec
stc
test
mov
dec
ss
sub
movs
xchg
sub
pop
push
sbb
pop
cmp
inc
sti
and
mov
inc
and
stc
(bad)
pop
aad
pop
bound
cmp
sub
shl
lods
repnz
in
aaa
mov
lahf
and
mov
pop
inc
test
inc
in
dec
sar
push
cwde
inc
or
movs
jmp
stos
fld
lock
and
mov
sub
cmp
scas
push
lds
out
lds
jne
push
jp
mov
(bad)
cmp
lahf
or
sahf
es
pop
scas
sub
xlat
out
push
dec
je
sub
jno
cld
jmp
cmc
inc
mov
cmp
cmp
mov
adc
cmc
mov
cmps
aad
fcomp
push
inc
xchg
adc
loop
inc
push
inc
mov
xor
push
mov
dec
xor
stc
mov
ds
(bad)
out
inc
xchg
pop
call
pop
shl
pop
jg
pushf
push
sub
inc
mov
ins
mov
addr16
adc
jge
mov
fcomp
ins
xor
rcr
sbb
cmc
jle
and
mov
jl
daa
imul
mov
out
xchg
pop
jecxz
(bad)
iret
push
push
xchg
sbb
outs
add
fsubr
push
call
add
sub
inc
stos
stos
add
out
ins
or
mov
sub
stos
sub
inc
sbb
aad
mov
fnsave
mov
fist
adc
(bad)
and
fdivr
sbb
pushf
sti
cmp
stos
setl
mul
jns
mov
pop
add
hlt
mov
mov
mov
mov
cs
cli
jno
jle
(bad)
push
rcl
fs
enter
or
and
mov
mov
add
adc
xor
imul
mov
call
inc
(bad)
(bad)
xor
mov
out
(bad)
stos
sub
rcl
ins
jmp
icebp
aas
and
es
mov
fldcw
mov
cmp
or
jmp
sbb
out
outs
(bad)
or
xor
sbb
xlat
sar
clc
shl
aam
pusha
outs
adc
mov
xor
push
or
mov
sub
stos
dec
sbb
inc
mov
mov
imul
jno
inc
mov
push
js
fdivr
push
pop
(bad)
sub
xor
cmps
xor
mov
in
cmp
adc
retf
mov
mov
jno
sbb
fnstenv
pop
ret
push
mov
jmp
stos
mov
fwait
into
cmp
cmp
sub
repz
dec
mul
lods
scas
stc
in
aaa
mov
bound
ficom
test
mov
fwait
xchg
mov
sub
sti
popf
mov
fistp
sbb
mov
jb
xor
fidiv
mov
mov
sbb
stos
movs
xchg
jmp
jns
sbb
xchg
int
scas
jecxz
cmps
inc
jo
stc
ret
scas
lahf
scas
cmp
dec
sub
sub
ja
dec
sti
sub
rol
(bad)
jecxz
mov
jl
inc
mov
cmp
nop
pop
neg
call
bound
fwait
pop
cmp
std
mov
lods
(bad)
sub
nop
loope
xchg
push
sar
push
dec
jmp
pop
cmp
popf
pop
lods
or
shl
mov
mov
mov
mov
test
fidiv
pop
jb
xchg
pop
mov
sbb
(bad)
fcom
and
fidivr
xchg
jle
retf
repnz
pop
push
dec
arpl
add
pop
sahf
popa
movs
pop
and
add
in
lahf
mov
aaa
call
mov
movs
dec
and
mov
xchg
jmp
xchg
mov
jmp
lds
idiv
push
xchg
dec
or
fisttp
push
cmps
cdq
pop
stos
mov
(bad)
xor
shl
xchg
cs
inc
add
inc
mov
call
add
js
lock
in
loop
test
mov
xor
lods
cmp
pop
dec
(bad)
add
add
pushf
cmp
test
das
sbb
cmp
retf
cmp
es
or
cmps
sub
inc
sqrtps
jae
movs
push
ffree
dec
mov
test
dec
test
mov
movs
es
enter
sbb
in
call
cmp
inc
fimul
not
push
fwait
pop
out
leave
sub
push
fdivrp
cmp
mov
adc
stos
mov
mov
lahf
aad
ja
sbb
cmovs
xor
jbe
jo
mov
into
adc
jge
push
xor
mov
add
aad
xchg
add
test
pushf
sub
popa
xor
pop
mov
push
jp
fisttp
add
mul
mov
arpl
adc
retf
data16
shr
jns
stos
fsub
mov
mov
and
ss
cmps
jbe
pop
sbb
fsubr
jecxz
cmps
cmp
repz
fmul
mov
out
fisub
fsub
and
jo
mov
jmp
jmp
or
jo
(bad)
sub
lods
scas
pop
mov
loopne
lods
jnp
icebp
sbb
idiv
xchg
dec
xor
jne
sbb
mov
pop
adc
loop
fisubr
lock
(bad)
pandn
inc
mov
scas
xchg
popf
cmps
in
loopne
adc
mov
inc
loopne
add
scas
push
sbb
leave
ins
dec
movs
jp
outs
cwde
jnp
push
inc
add
inc
cli
dec
jno
inc
sbb
ja
push
in
jno
sub
mov
inc
aaa
out
adc
call
ins
push
jno
ins
add
aad
or
repnz
lods
jp
cld
sub
cwde
clc
out
mov
fld
inc
outs
pop
ins
xor
inc
add
fs
call
pop
pop
rcr
int
mov
hlt
mov
call
sbb
rcl
movs
js
leave
adc
add
stos
xchg
add
mov
sti
push
xor
jae
nop
push
mov
add
dec
ss
sbb
(bad)
stc
inc
imul
adc
and
and
and
sub
adc
jnp
or
mov
mov
add
or
inc
dec
imul
sti
cmps
cli
repnz
cmp
in
cmc
xor
leave
xor
add
xchg
inc
push
sub
inc
icebp
(bad)
out
sub
jno
xchg
xor
add
push
popa
ds
xchg
adc
test
add
push
mov
imul
int3
jns
jo
inc
es
inc
test
or
jbe
xchg
cmp
popf
adc
dec
pop
repz
outs
sbb
xor
jg
pushf
hlt
neg
or
xchg
imul
stos
ret
mov
dec
sar
stc
cmp
add
pop
mov
lea
pop
or
mov
je
adc
mov
(bad)
pop
push
inc
sub
(bad)
jg
adc
sbb
inc
cmp
movs
nop
jns
mov
mov
loope
jmp
sub
aaa
call
mov
push
(bad)
fist
je
sbb
ins
xchg
retf
xchg
pushf
mov
pop
cwde
lock
inc
aad
test
and
xchg
pop
xchg
je
daa
scas
adc
out
call
cmc
jl
jl
and
ret
push
xchg
les
push
imul
and
sbb
ja
loop
jbe
out
pop
mov
mov
mov
fst
test
fmul
mov
xchg
hlt
nop
cmps
aam
mov
add
hlt
mov
push
xchg
popa
sahf
loopne
fist
jbe
ds
jmp
bound
add
sub
rcl
pop
push
and
cmp
loopne
xor
push
enter
push
mov
outs
cdq
in
jp
dec
mov
jbe
mov
inc
cmc
aas
or
mov
ds
test
xchg
jne
jno
cli
pop
arpl
out
cmps
in
in
xchg
and
mov
jg
mov
cmc
push
sbb
cmp
bound
xor
push
into
int
out
jmp
adc
xor
jae
out
call
dec
pop
loop
(bad)
loopne
mov
inc
cmp
jne
jbe
or
push
neg
aad
or
mov
or
mov
es
lods
imul
add
xchg
mov
(bad)
or
movs
dec
call
xor
jae
xlat
adc
mov
imul
adc
mov
stc
xchg
xchg
jecxz
icebp
out
or
cdq
mov
(bad)
dec
or
sub
pop
ins
cli
stos
shr
push
icebp
push
add
movs
jae
inc
fnstcw
shr
sub
adc
frstor
ret
pop
inc
nop
ficomp
std
jge
and
mov
and
in
loop
xor
pop
gs
lock
retf
sub
and
(bad)
jmp
xor
inc
repnz
addr16
sti
enter
jno
js
sbb
fdivr
jmp
es
pop
(bad)
jo
xor
cmp
sbb
and
mov
jns
mov
pop
or
cmps
loope
mov
(bad)
cdq
ftst
mov
lahf
aaa
scas
shr
adc
mov
and
push
movs
push
out
mov
aad
fscale
je
push
cmps
adc
jg
pop
ficom
out
mov
mov
mov
(bad)
clc
(bad)
std
jl
cmp
inc
add
rol
in
inc
shl
mov
adc
addr16
sub
test
cld
test
into
(bad)
pop
arpl
sahf
add
xchg
ds
hlt
fbstp
jne
jmp
ret
retf
std
cmp
jae
mov
sbb
sub
jbe
fidivr
sbb
push
lods
mov
inc
dec
mov
nop
mov
(bad)
fs
je
popa
fild
jge
repnz
cmp
repz
xor
test
jns
or
in
add
data16
ds
jae
and
aaa
or
sahf
inc
xor
repz
clc
xor
pop
fidiv
repnz
adc
cmp
(bad)
fsub
dec
push
push
stc
jl
cmp
lahf
inc
xchg
aas
cmp
mov
xchg
pop
inc
out
mov
jecxz
not
test
mov
mov
add
xchg
das
xchg
scas
dec
outs
adc
ss
sbb
and
sub
push
xchg
fldcw
jo
jnp
inc
jg
out
pop
in
xor
push
and
iret
pop
scas
and
iret
mov
jg
loope
pop
mov
loop
loop
lods
push
gs
test
scas
bound
xor
mov
push
mov
inc
sub
mov
mov
(bad)
lahf
out
mov
pop
leave
aam
out
inc
retf
loope
loopne
xchg
rcl
mov
lods
ins
mov
mov
dec
xchg
test
sbb
cmp
cld
jp
push
sbb
pop
push
jb
jo
aad
xchg
test
or
dec
jmp
push
jg
int
sbb
xchg
pop
inc
adc
add
daa
in
pop
sahf
or
icebp
sbb
dec
in
jl
dec
addr16
and
nop
outs
ja
test
add
mov
pop
xor
or
in
dec
mov
mov
aaa
hlt
mov
sub
fwait
scas
add
test
push
pop
shr
aam
push
not
retf
cmp
cmps
pop
ret
movs
xchg
sub
xchg
cmp
xchg
shl
(bad)
or
jb
(bad)
int3
test
ja
pop
and
call
rcl
pushf
jecxz
movs
hlt
loope
mov
cli
loop
in
add
cmp
repz
push
test
aas
xor
add
dec
push
cmp
in
hlt
pop
loop
dec
push
adc
sub
jnp
cmp
ror
cmps
das
pop
test
fcom
add
push
adc
xchg
xlat
mov
hlt
retf
imul
push
jno
pop
stos
jo
fadd
scas
sets
sbb
xchg
mov
std
daa
push
repnz
or
stos
shr
(bad)
je
jg
imul
mov
aad
dec
shl
and
mov
mov
stos
push
lahf
and
or
test
fild
dec
out
dec
inc
loope
in
adc
xchg
cmps
imul
jae
pop
pop
stc
shl
pop
and
or
pop
enter
rcl
or
jb
or
lds
into
imul
cmp
test
fwait
jbe
imul
sbb
sbb
or
mov
icebp
mov
call
pop
fcmovbe
fild
loope
cdq
fadd
popf
and
js
icebp
pop
call
add
or
lods
adc
mov
pop
loope
int
dec
sub
retf
add
out
fcomp
dec
rcl
xor
out
dec
adc
sahf
std
cmps
leave
or
adc
pop
mov
jnp
call
pop
dec
sub
adc
sub
jnp
dec
iret
ins
inc
jnp
in
in
mov
add
hlt
pop
out
jo
push
adc
call
push
inc
out
jo
fdivrp
sbb
mov
push
mov
outs
imul
or
xor
imul
test
pop
call
call
mov
ja
jo
xor
push
movs
retf
jnp
clc
lea
pop
shr
outs
cmp
xchg
push
ss
xor
in
adc
sub
mov
inc
ins
dec
pop
sti
mov
adc
in
lds
mov
out
cs
cmp
cld
jmp
add
jb
retf
mov
xchg
xor
(bad)
std
in
loopne
nop
loop
out
outs
xchg
mov
lock
jns
cmc
fnstsw
push
cwde
icebp
push
add
js
inc
mov
jb
adc
push
(bad)
in
push
gs
mov
dec
xchg
stos
int
adc
pop
cmps
jge
rol
or
adc
(bad)
jmp
inc
sbb
jns
cmc
cmp
inc
xchg
jmp
jne
xor
retf
call
je
retf
or
(bad)
mov
mov
sub
fidiv
sub
aad
fmul
add
outs
or
loopne
mov
into
(bad)
xchg
lods
cdq
adc
add
mov
sar
sbb
dec
adc
arpl
mov
jg
outs
aad
add
mov
lods
(bad)
dec
xchg
mov
sub
push
xchg
repz
mov
jmp
(bad)
shl
jnp
movs
fwait
mov
jo
or
js
mov
pop
push
push
scas
cwde
inc
jne
adc
les
(bad)
push
jns
push
popa
inc
lods
cmp
cdq
test
and
adc
mov
push
clc
fs
pop
call
cmp
push
shl
cmp
or
test
xor
out
jge
std
mov
lods
repnz
sub
std
aam
inc
or
mov
xor
(bad)
repz
jmp
or
dec
(bad)
fisub
push
bound
dec
lods
mov
out
mov
add
arpl
xchg
jecxz
gs
jmp
out
arpl
lahf
pop
jle
fsubr
sbb
(bad)
fcmovne
test
xchg
xor
ror
adc
lahf
mov
jmp
add
int3
repz
push
popa
(bad)
sar
mov
cmps
xchg
pop
popa
or
ds
ret
push
xchg
and
mov
inc
mov
daa
lea
into
xchg
cmps
xor
pop
push
adc
in
not
inc
or
cmp
cmp
cmc
into
sar
or
sbb
mov
(bad)
loop
test
inc
fmul
pop
add
idiv
fwait
es
dec
add
cdq
nop
jns
bound
repz
mov
js
push
in
pop
xchg
jl
add
adc
mov
sbb
and
mov
ins
test
inc
xor
push
mov
add
inc
or
inc
inc
ss
push
or
push
or
sub
imul
sbb
push
sub
and
sub
xchg
jnp
nop
sbb
stos
and
hlt
cdq
add
cs
sbb
xchg
pop
sub
fwait
(bad)
cmps
shr
pop
adc
and
xor
fdivr
push
jmp
fwait
nop
daa
xchg
mov
push
loopne
xor
jo
mov
loope
mov
int
or
and
(bad)
mov
xchg
jge
bound
inc
sub
jnp
jmp
mov
int3
adc
mov
sub
and
add
adc
inc
mov
fimul
inc
add
adc
sti
enter
mov
push
mov
test
shl
sub
daa
adc
scas
jne
xchg
fs
adc
(bad)
arpl
stos
cmp
and
stos
mov
fcom
adc
inc
pop
pop
scas
cmp
icebp
ret
xor
gs
not
les
(bad)
push
pop
mov
cmp
jae
xor
mov
hlt
inc
outs
ret
shr
sub
mov
movs
or
sbb
cmp
dec
inc
push
mov
repnz
jmp
jp
jg
cld
push
fst
mov
test
lea
repnz
test
mov
std
call
push
inc
jne
adc
cld
rcr
imul
js
dec
push
add
std
addr16
jp
push
xor
ins
jecxz
push
aaa
test
add
cmp
test
sbb
ins
push
cld
pop
push
pop
add
and
psubq
and
js
ins
sbb
mov
repnz
daa
pushf
inc
mov
(bad)
(bad)
mov
icebp
sbb
mov
add
into
ss
inc
inc
(bad)
(bad)
adc
out
cld
fcomp
retf
jg
jmp
or
pusha
lods
aas
aam
inc
push
mov
rol
stc
xor
and
xchg
repnz
xchg
popa
pop
shl
cmps
sti
or
inc
jmp
sub
jnp
mov
jbe
sbb
push
mov
in
mov
icebp
bound
xlat
(bad)
xlat
jo
call
dec
iret
dec
stos
call
test
mov
ror
jge
mov
push
movs
cmp
movs
das
xchg
jl
loopne
push
sub
jge
cld
cmps
and
ret
jo
inc
loope
jg
and
arpl
xchg
pop
cmp
mov
inc
lds
pop
loopne
jmp
or
xlat
adc
out
push
pop
jnp
into
fnstsw
mov
repnz
fcmovbe
xor
and
in
xchg
call
les
sbb
and
in
gs
mov
xchg
push
icebp
stc
pop
dec
imul
shr
inc
and
or
push
or
sbb
mov
lahf
fsubr
push
les
mov
mov
test
cld
hlt
xor
out
(bad)
out
mov
popa
lds
aad
retf
xor
stc
jp
jmp
xchg
xchg
pop
and
xor
add
sbb
mov
cmp
push
inc
ficomp
mov
retf
jno
jnp
ins
and
js
iret
shl
push
lods
sub
xchg
xor
gs
jo
adc
cwde
leave
scas
jne
inc
sbb
dec
or
push
int3
fisttp
pop
or
ror
jae
cmp
mov
dec
jb
enter
cdq
ja
add
dec
inc
inc
jecxz
mov
jo
sub
call
lods
push
sub
inc
aaa
inc
cs
push
mov
mov
mov
push
dec
dec
adc
cmc
stos
inc
sbb
pop
xor
sub
pop
xchg
mov
dec
sbb
cmp
retf
jmp
fisttp
add
ror
(bad)
adc
lds
loope
idiv
fcmovnb
cmc
(bad)
(bad)
lods
sub
sahf
lea
scas
sar
out
lahf
or
das
loopne
bound
daa
sbb
add
pop
mov
push
pop
outs
inc
mov
adc
xor
dec
and
jno
mov
leave
xor
popa
mov
es
or
mov
and
loopne
(bad)
cmp
mov
outs
jl
ss
call
enter
pop
xor
and
mov
les
xchg
sbb
push
dec
mov
mov
xor
(bad)
out
jle
pop
inc
aad
out
cmp
or
xchg
push
sbb
mov
int3
adc
push
cmp
sbb
std
mov
inc
pushf
adc
scas
mov
mov
aaa
cmc
xchg
adc
and
sub
(bad)
sbb
dec
in
fs
pop
inc
outs
or
jecxz
sbb
mov
xor
in
daa
out
mov
jmp
cdq
les
and
inc
push
push
test
mov
loope
(bad)
cmc
xlat
lods
add
call
adc
sbb
xchg
mov
cmp
in
mov
sub
(bad)
push
add
cmp
mov
mov
gs
das
movs
call
mov
sti
xchg
sub
test
mov
imul
adc
cmp
mov
das
retf
sti
aam
ds
jns
sub
leave
ins
mov
jmp
fisub
xor
loopne
cmc
push
bound
mov
dec
test
dec
ins
aaa
ret
inc
mov
mov
test
outs
push
cld
fiadd
dec
or
test
lods
lods
mov
int3
adc
cmc
sbb
jno
mov
mov
test
sub
xor
fs
mov
add
and
mul
out
push
mov
fild
dec
test
add
mov
(bad)
loop
loope
pusha
sbb
pushw
push
push
outs
mov
cmps
jle
stos
push
sbb
inc
inc
xchg
ss
pop
xchg
aad
push
test
mov
jne
in
pop
or
or
mov
test
sbb
or
imul
cmc
cmps
dec
(bad)
(bad)
call
sbb
cmp
add
dec
mov
ds
mov
aam
ds
(bad)
pop
std
(bad)
ins
les
cmps
xchg
xchg
pushf
imul
xchg
fld
ins
iret
add
jmp
mov
mov
loopne
xchg
mov
adc
cmp
test
hlt
stos
or
outs
push
ss
dec
mov
mov
adc
pop
aaa
clc
sub
cmp
add
lods
imul
aad
xchg
(bad)
je
dec
xchg
push
cmp
cmp
lods
addr16
rcl
xchg
xchg
stos
jns
aaa
je
lahf
retf
push
mov
mov
call
mov
fimul
inc
mov
ret
stc
inc
xor
inc
rcr
(bad)
jmp
push
fld
dec
add
dec
out
dec
repz
leave
sar
push
inc
mov
jmp
jl
mov
jns
cld
aaa
iret
in
push
out
sub
sahf
aad
test
jp
xor
lock
sbb
pop
ss
call
pop
or
add
outs
sti
pop
or
cmc
icebp
ds
cmp
ret
aad
mov
mov
cs
or
addr16
addr16
popa
xor
mov
clc
fnstenv
jge
xchg
data16
into
pushf
sahf
test
and
pop
sbb
cmp
adc
mov
sub
add
mov
or
jl
mov
sub
xchg
xchg
dec
out
add
std
fist
jno
out
popf
pop
(bad)
jmp
or
out
add
jmp
mov
push
pop
arpl
xchg
neg
dec
and
pop
xchg
push
sub
or
test
mov
dec
cmp
jo
repz
cmp
xor
sub
sub
loopne
(bad)
(bad)
xchg
sub
cdq
adc
xor
and
dec
cmc
mov
dec
mov
mov
loope
cmp
cmp
aas
push
fdiv
repz
das
sub
jecxz
fs
dec
outs
mov
cmp
fild
out
mov
push
cld
jns
sub
rcl
loop
jnp
pop
xchg
xchg
lahf
xor
add
mov
int
cmp
mov
push
dec
sbb
jno
shr
fmul
jmp
lahf
add
inc
fs
mov
push
fwait
mov
mov
push
lds
sbb
je
and
mov
test
sub
mov
fwait
or
mov
mov
push
pop
mov
pop
imul
jmp
ficomp
lods
test
sub
sbb
nop
(bad)
cld
xchg
mov
add
jp
addr16
xchg
call
jle
push
call
shr
fistp
push
aaa
je
dec
fild
cmp
add
out
dec
(bad)
imul
push
push
scas
dec
adc
or
push
or
mov
dec
movs
out
(bad)
data16
(bad)
xlat
pop
pop
mov
js
mov
in
shl
shl
pop
and
out
sub
xchg
dec
jo
xchg
xchg
in
xor
xchg
mov
retf
ret
cli
outs
mov
push
inc
loope
scas
pop
adc
xor
ror
pop
outs
(bad)
xor
stos
sub
mov
into
pop
xchg
cmp
mov
fstp
shl
mov
cmps
jnp
cmps
mov
push
shl
sbb
adc
fcmove
ds
push
fld
jmp
inc
mov
push
push
addr16
shl
lds
sub
lea
sub
ret
adc
push
mov
dec
xchg
pop
std
xchg
movs
cli
fmul
mov
dec
dec
aaa
cmp
fwait
lods
je
leave
jb
jb
sub
push
outs
cmp
dec
(bad)
jnp
call
xor
sub
sbb
cmp
clc
js
mov
arpl
imul
push
and
add
sub
lock
mov
sbb
xor
sahf
mov
into
xchg
sbb
inc
je
test
hlt
and
outs
cld
scas
push
test
dec
aam
inc
jl
xor
out
cmp
adc
inc
bound
imul
mov
(bad)
movs
fsub
cmps
hlt
cmp
xor
mov
pop
sbb
scas
sub
aaa
mov
pop
push
jmp
ret
and
out
pop
adc
push
dec
or
sub
pop
mov
stos
add
out
mov
push
mov
les
jmp
daa
repz
cmp
cld
hlt
sti
ins
inc
push
sbb
ret
inc
push
arpl
lock
popf
inc
push
loope
mov
xor
pop
xchg
out
stos
nop
retf
mov
sub
jb
sub
pop
std
adc
pop
adc
mov
dec
or
out
add
inc
cmp
mov
mov
pop
push
stc
push
or
nop
jnp
cld
shr
or
push
aam
bound
pushf
mov
pop
sbb
pop
cli
jge
mov
ja
rol
js
call
fld
(bad)
fs
aas
shl
dec
pop
cmp
arpl
xchg
or
sbb
retf
rep
in
imul
sub
imul
mov
pop
jmp
adc
dec
inc
dec
outs
in
and
aas
jo
mov
jge
sub
ja
cmp
pop
popa
jbe
stos
push
and
lds
mov
js
mov
ret
jbe
adc
pop
ja
mov
gs
ret
ds
(bad)
cmp
fisttp
cmp
mov
mov
bound
jge
xor
mov
xchg
aaa
jg
mov
in
inc
pop
pop
std
cmp
shl
jmp
lea
daa
clc
inc
or
ja
cs
mov
les
mov
lock
lds
push
popf
cli
fisubr
daa
add
mov
or
mov
xor
inc
cmp
fwait
test
aam
sbb
push
jmp
inc
pop
push
pop
xor
ja
das
loop
add
and
movs
and
sub
inc
xchg
add
aaa
test
fdivr
adc
xlat
out
mov
dec
jbe
outs
or
subps
data16
xlat
bound
movs
cmp
xchg
popa
cmp
nop
xchg
xchg
inc
xchg
repz
jecxz
ret
pop
inc
ss
enter
add
retf
add
jnp
cmp
dec
jle
sub
shr
cs
inc
or
stos
test
cmp
push
das
mov
and
push
jg
fisttp
(bad)
jge
ss
mov
ror
shl
xchg
stos
xchg
xor
dec
sub
add
xor
adc
mov
js
xchg
pop
dec
push
ds
inc
aaa
and
(bad)
xchg
inc
mov
rcl
rcl
in
mov
(bad)
cli
lods
mov
bound
xor
pop
mov
or
mov
(bad)
cwde
fnstcw
jne
xor
mov
xor
xchg
aad
pop
cmp
adc
pop
xor
mov
data16
and
jge
xchg
adc
mov
test
push
adc
jp
popf
sbb
dec
push
sbb
pop
neg
aas
mov
call
stos
jmp
into
and
sub
clc
pop
dec
shr
sahf
aaa
call
pop
jp
add
xchg
inc
jno
dec
cmc
jge
movs
lods
and
xchg
push
test
jle
sub
push
cwde
sub
xor
push
loop
test
loop
sub
div
mov
mov
test
jbe
pop
or
pop
aaa
mov
xor
into
(bad)
or
mov
aad
fdivr
add
dec
jl
xchg
call
cld
mov
fdivr
xchg
es
loopne
mov
in
clc
stos
lahf
push
into
pop
in
sub
(bad)
mov
retf
push
stos
and
out
jae
enter
pop
das
int3
cmp
and
pop
repz
jg
push
hlt
inc
sub
(bad)
shr
pop
mov
and
outs
and
add
add
inc
data16
mov
bound
bound
je
sar
out
nop
loope
(bad)
jmp
std
call
fstp
inc
xlat
mov
outs
fcmovu
xchg
add
and
mov
ins
xchg
out
aaa
sti
push
jbe
mov
jnp
adc
sbb
inc
pop
mov
fistp
outs
mov
add
and
retf
push
clc
lods
stos
dec
(bad)
repz
int3
not
push
leave
retf
arpl
or
dec
inc
fcmovnb
enter
push
sub
cmps
loopne
imul
icebp
inc
pushf
fcomp
dec
div
dec
imul
(bad)
jmp
movs
sub
fistp
dec
jmp
clc
in
std
add
call
call
test
fwait
adc
and
ins
xchg
mov
xchg
aas
fsubr
mov
add
jmp
gs
dec
jmp
sub
xchg
or
mov
gs
sbb
idiv
sub
int
cmps
mov
jge
mov
inc
xchg
inc
sub
dec
sbb
mov
pusha
sbb
inc
sbb
cmps
or
add
sub
(bad)
arpl
sub
xor
popa
ret
mov
xor
ss
xchg
repz
test
xchg
mov
and
pop
cli
mov
dec
dec
es
jmp
jno
aaa
inc
mov
push
dec
mov
xor
clc
std
mov
cmp
xor
push
hlt
scas
imul
lock
jbe
mov
sbb
sbb
jnp
and
aaa
mov
fstp
shr
shl
push
call
repz
mov
or
mov
mul
out
inc
cmovs
aaa
mov
ficomp
arpl
addr16
mov
mov
xchg
dec
xor
add
or
add
sub
sbb
shl
adc
push
imul
pop
or
cmp
push
push
sub
daa
jl
jmp
movs
ret
inc
mov
mov
pushf
fdivr
iret
pop
loop
push
pop
fcomi
jne
sbb
cmp
jmp
inc
inc
popf
sub
mov
and
ret
in
adc
pop
stc
mov
stc
mov
mov
pop
fld
gs
mul
push
scas
cld
inc
jecxz
and
push
(bad)
push
xor
dec
call
stos
sbb
rcl
adc
and
push
out
pusha
push
inc
std
sub
adc
loope
and
xlat
out
mov
repnz
mov
and
out
sub
push
int
lea
movs
out
sub
cmp
movs
arpl
aad
push
jmp
jns
rcl
outs
sbb
jno
and
lods
dec
sub
inc
mov
stc
fnstcw
rcl
lods
imul
add
clc
fistp
int3
push
jbe
shl
dec
(bad)
xor
push
cmp
movs
add
ins
nop
js
mov
inc
pop
xor
ret
ds
pop
add
mov
sti
sub
dec
out
mov
adc
or
inc
int3
or
jbe
mov
aaa
movs
xor
retf
jns
dec
add
cwde
cmps
mov
jl
or
std
mov
inc
sbb
into
imul
in
sti
clc
int
mov
test
adc
repnz
movs
mov
(bad)
adc
sub
arpl
out
call
test
movs
dec
dec
and
out
adc
push
rdpmc
sbb
pop
xchg
mov
rcr
(bad)
or
ds
xchg
sbb
inc
xor
(bad)
mul
lods
cld
jo
int3
jns
push
ret
pop
jmp
mov
pop
cmps
(bad)
sub
jo
push
rol
call
mov
jo
aaa
daa
adc
imul
dec
sti
rcl
adc
mov
and
stos
je
out
sbb
lds
js
(bad)
aaa
pop
xor
pop
jg
cmp
sbb
es
ror
pop
popf
rcr
cld
mov
pop
mov
stos
cmps
cmps
inc
push
cmp
test
test
lods
clc
xor
adc
jp
inc
push
inc
fwait
inc
xor
cmp
push
ins
jmp
pop
sub
inc
mov
loopne
jl
adc
cmp
lods
sbb
gs
sbb
or
pushf
call
pop
mov
outs
push
popa
cmp
jne
pop
shl
sti
dec
push
popa
fwait
or
adc
popf
pop
dec
and
leave
neg
mov
and
sub
mov
add
mov
rcr
mov
inc
(bad)
cdq
or
push
scas
and
cmp
pusha
cwde
sahf
xchg
rcr
xchg
cli
sbb
iret
aas
fs
stc
inc
dec
push
pop
popf
ss
fnsave
jnp
fdiv
movs
jnp
(bad)
ja
dec
jle
adc
or
jp
lahf
pop
sub
mov
dec
enter
push
dec
les
pushf
push
jle
xchg
xlat
cmp
mov
(bad)
mov
leave
int3
sub
pop
jbe
xor
jle
scas
mov
idiv
pop
loope
cli
call
mov
mov
or
leave
cmps
ds
push
ins
cmc
out
das
cmp
dec
mov
mov
or
jmp
lods
in
fs
out
hlt
ss
xchg
lods
sub
sbb
repnz
fldcw
ror
int
(bad)
cmc
or
lods
ficom
push
jno
adc
jbe
cmps
sti
sub
fwait
push
sub
pop
push
ret
stos
cdq
dec
rol
shl
pop
pop
imul
les
(bad)
or
fnsave
sub
outs
adc
push
xchg
mov
ja
call
sub
icebp
jl
xor
push
xchg
fwait
imul
aaa
cmc
and
ss
fimul
inc
xor
inc
cmp
jns
xlat
call
repz
and
xchg
into
xchg
pop
cmp
xchg
mov
sub
push
mov
cwde
sahf
icebp
ja
(bad)
out
arpl
mov
fwait
add
jae
addr16
jo
pop
jle
test
push
lock
and
ret
add
dec
(bad)
lods
cmc
sbb
sti
sub
cmp
xor
jl
sbb
call
int3
xchg
cmp
into
and
mov
sub
das
rcl
fdivr
xor
ret
jmp
mov
scas
dec
adc
lds
adc
push
test
sub
jne
(bad)
movs
mov
sar
pop
movs
xor
jp
hlt
mov
push
bound
ja
jmp
cmp
std
mov
mov
repz
cs
jl
ret
out
push
stc
add
out
mov
test
and
jmp
jmp
test
xchg
retf
outs
fwait
mov
fwait
jmp
pop
add
mov
popf
push
repnz
test
rcl
jns
adc
pop
pop
and
ret
cli
push
mov
stos
cli
dec
mov
and
xchg
add
xchg
retf
cmp
jne
movs
js
mov
xor
push
(bad)
lods
mov
test
pop
pop
pop
mov
imul
stc
cmp
fsub
jp
xchg
xlat
in
jmp
xchg
test
lea
int3
rcr
add
cmp
inc
ss
adc
jmp
pop
ss
mov
xor
or
(bad)
jb
add
out
fdivr
pushf
jae
(bad)
push
add
pop
(bad)
aad
mov
arpl
mov
push
les
daa
dec
xchg
jp
and
fild
outs
cmps
jbe
sub
pushf
cmp
jb
test
mov
mov
lahf
repz
xchg
xor
leave
jmp
mov
retf
icebp
shl
fsubr
xchg
adc
push
loopne
push
sbb
mov
xor
repnz
add
int
dec
pop
or
push
push
pop
sbb
aas
iret
dec
dec
enter
ret
and
inc
xlat
test
dec
outs
push
test
dec
mov
int
cmps
cld
(bad)
and
test
mov
aam
dec
retf
sub
movs
scas
out
mov
sti
push
sbb
into
dec
nop
inc
sbb
xor
popf
and
jle
dec
outs
aaa
mov
jno
xchg
add
jecxz
cmps
xchg
xchg
adc
ds
(bad)
xchg
push
and
sbb
or
cmp
stos
aam
fcom
ins
inc
mov
sub
push
xlat
xchg
pusha
(bad)
test
jmp
pop
cmp
add
fwait
pop
dec
dec
jp
inc
fnstenv
inc
jo
or
popa
add
scas
pop
push
into
inc
(bad)
mov
mov
movs
mov
xchg
imul
pop
pop
push
popf
stos
push
fmul
cmp
lsl
scas
push
pop
mov
repz
aad
mov
pop
jbe
pop
sahf
das
sub
cdq
js
jno
outs
adc
lds
add
sub
sbb
(bad)
jmp
and
dec
pop
sub
push
cmp
imul
pop
inc
and
add
jle
out
push
cmp
jp
sub
and
(bad)
push
dec
in
pop
sub
jbe
imul
or
(bad)
ins
xor
scas
sti
jp
pop
push
or
(bad)
mov
popf
dec
or
pop
test
imul
mov
shl
cmp
cmp
jmp
cmp
or
fld
push
jmp
and
xor
rcr
popf
mov
rcl
sub
or
in
std
retf
add
ret
jl
aam
cmps
fcomp
add
jb
and
das
ins
bound
sbb
adc
sub
jmp
mov
pop
add
(bad)
(bad)
inc
gs
ja
adc
sub
inc
mov
cs
out
fimul
int3
jp
mov
ficom
adc
in
xor
adc
(bad)
pop
push
rcl
dec
inc
sub
inc
push
inc
xchg
std
repz
out
lea
pusha
or
jno
imul
pushf
adc
shl
adc
mov
ret
xor
jnp
std
mov
mov
pop
outs
or
inc
inc
push
push
mov
jmp
sub
dec
cwde
jecxz
inc
add
jge
mov
mov
xor
lahf
fwait
add
fistp
inc
(bad)
cmps
sbb
xlat
pop
sbb
push
test
dec
sub
outs
nop
adc
repz
mov
movs
sub
xor
sar
adc
add
fcmovbe
ficom
jl
pop
xchg
leave
inc
pop
sub
(bad)
xchg
mov
cmp
ds
pushf
sar
xchg
mov
add
cs
ret
cdq
addr16
fsubp
(bad)
mov
int3
movs
ja
repnz
shl
stc
and
rep
jmp
inc
fcmovb
and
push
add
mov
ror
inc
cmps
imul
and
shr
add
retf
fucom
cmp
mov
stos
mov
cmp
test
out
jbe
retf
push
cmp
push
test
sub
ins
imul
fmul
mov
cmp
mov
bound
es
test
jle
mov
rcr
fdiv
cmp
jmp
dec
test
scas
push
add
cs
sub
xor
jp
pop
dec
push
push
es
inc
shl
aam
loop
pusha
dec
jle
cwde
rol
popf
ins
popa
adc
jne
push
jno
or
repz
js
imul
dec
call
jmp
add
ins
movs
stos
pop
sbb
pop
push
dec
add
mov
out
fnstsw
jo
push
fst
shr
mov
push
movs
aaa
(bad)
xor
ret
cmovbe
lahf
jmp
mov
mov
or
mov
mov
xchg
in
sbb
pop
(bad)
arpl
mov
stos
sar
pop
or
popf
xor
push
mov
imul
jp
ins
cmp
pop
mov
push
aaa
xchg
inc
xchg
addr16
nop
sbb
sti
inc
add
inc
cmp
les
je
loopne
stos
mov
sahf
js
xchg
into
rcl
int3
add
fsub
jbe
push
gs
and
push
(bad)
or
add
mov
and
pop
xor
dec
lods
cmp
mov
test
mov
cli
fisub
call
jge
inc
pop
or
loop
sbb
sar
int3
stos
cld
mov
hlt
test
mov
out
mov
mov
scas
rcl
out
add
sar
xchg
jl
rcl
and
push
ja
fcom
jmp
repnz
cmp
xchg
mov
cmps
xlat
lea
mov
pushf
mov
jns
iret
add
cli
daa
pop
cmp
pop
pop
loopne
or
in
fwait
inc
inc
adc
pop
stos
call
sub
popa
pop
add
or
mov
jmp
xchg
loope
pop
outs
mov
gs
repnz
les
mov
lock
stc
cmp
lea
adc
push
cmp
inc
mov
pop
aaa
ins
and
xor
push
loop
dec
nop
push
and
stc
inc
lahf
loopne
sbb
scas
xchg
inc
mov
inc
inc
mov
mov
shr
rcl
jp
dec
sub
adc
ficom
in
jo
(bad)
cmp
sub
sbb
shr
xchg
sub
fstp
lods
sub
mov
into
push
sbb
jne
ja
into
push
(bad)
push
test
jecxz
xor
ins
mov
rol
sub
mov
jno
in
or
fist
fstp
cmp
clc
mov
sub
mov
movs
inc
sub
mov
mov
mov
cmp
mov
movs
or
inc
je
or
lock
in
fist
pusha
in
cmp
xchg
(bad)
inc
rol
(bad)
(bad)
mov
pop
(bad)
push
ja
paddd
adc
mov
std
jmp
pop
fwait
shr
pop
xchg
outs
adc
sub
inc
data16
jo
xor
fs
dec
jns
add
les
imul
out
popf
jl
outs
lods
xor
jmp
shl
xor
out
imul
pop
inc
and
push
adc
add
mov
lea
cmp
in
jnp
mov
push
cmps
fstp
aam
fistp
xor
cmps
xor
jb
outs
pop
fmul
fadd
push
rol
and
jno
mov
ror
or
xor
pop
xchg
fisubr
add
pop
adc
push
sub
dec
dec
pop
mov
shl
scas
mov
js
jmp
or
gs
test
es
lods
cli
inc
jne
ss
sahf
mov
push
int
cmps
xor
dec
movs
ins
movs
stc
xchg
iret
mov
test
aaa
inc
mov
ins
sbb
push
and
dec
and
push
inc
int3
sub
fnstenv
xchg
sbb
push
sbb
add
je
and
icebp
movs
mov
fadd
cmp
stos
icebp
add
stc
adc
dec
ret
movs
xchg
mov
daa
mov
icebp
je
mov
icebp
jnp
pusha
fisttp
pop
add
mov
adc
pop
sbb
jnp
ss
loope
clc
rcr
gs
inc
or
and
adc
pushf
or
xlat
loop
mov
pop
cwde
cld
and
(bad)
dec
or
xor
dec
leave
call
in
dec
scas
xchg
ss
push
add
ins
sahf
dec
mov
arpl
mov
push
or
mov
cmp
cmp
popf
nop
std
adc
jae
cmp
call
inc
pop
xchg
es
mov
aas
(bad)
mov
enter
shl
mov
jb
push
push
pop
in
(bad)
ja
addr16
shr
icebp
adc
add
sbb
add
add
mov
outs
mov
or
movups
and
pop
mov
pop
jg
aam
ret
sbb
rol
cmps
mov
add
lods
inc
sbb
ficom
jmp
outs
mov
mov
or
das
mov
push
mov
push
mov
xchg
cmp
sbb
pusha
cmp
out
loopne
daa
pop
lock
retf
adc
dec
stos
xchg
push
sbb
adc
pop
(bad)
das
stos
mov
cs
cmp
scas
ins
out
aas
or
sti
adc
aaa
cmp
test
daa
je
xor
push
lock
imul
or
pop
and
or
leave
pop
cmp
rcr
push
pop
test
cmp
js
mov
fs
pop
aad
cmp
mov
les
call
in
xor
out
hlt
popa
mov
and
mov
jecxz
xchg
out
fwait
xor
retf
push
fimul
fisub
and
lahf
int3
cmp
push
aam
jns
popa
repnz
cmp
mov
adc
inc
or
mov
or
jae
ins
ins
call
fdiv
inc
mov
iret
or
es
pop
push
push
into
mov
fisub
aaa
int3
in
leave
or
test
shl
mov
repnz
dec
pop
icebp
adc
push
fnstcw
xor
mov
stos
jno
sahf
rcl
jo
rcl
fwait
outs
cmps
push
xchg
jb
data16
pop
dec
mov
test
sbb
outs
ja
addr16
xlat
mov
jecxz
add
loope
sub
mov
out
mov
cmp
adc
jle
jnp
jmp
es
scas
fst
aas
lock
xor
hlt
cmc
outs
inc
sub
ret
and
in
dec
scas
jnp
fcomi
jnp
jne
mov
lock
stc
in
ss
sti
in
out
js
data16
cld
cmp
mov
mov
jle
and
mov
jne
cmc
scas
dec
out
add
xor
xor
pusha
dec
adc
outs
xor
lea
loope
dec
stc
mov
mov
(bad)
mov
sbb
jmp
mov
pusha
rol
dec
pop
mov
sub
sbb
and
sub
jns
icebp
out
or
mov
dec
sbb
fs
pop
inc
dec
vmwrite
std
popa
add
stos
xor
pop
aaa
jne
dec
test
xor
fcmove
popa
test
inc
movs
rcr
shl
and
je
adc
ins
push
adc
aad
std
jmp
rol
adc
das
jne
xchg
inc
pop
xchg
mov
out
sbb
test
sbb
push
cmps
jge
into
mov
pop
cmp
mov
sub
sub
pop
pop
or
int
jnp
rcl
push
mov
push
jmp
dec
add
scas
in
mov
xlat
cmps
push
in
dec
adc
lahf
cmp
sbb
loopne
xlat
mov
inc
cld
adc
and
jg
nop
sbb
in
or
stos
xchg
cmps
add
inc
aad
fisub
and
inc
or
in
enter
jne
fcom
mov
mov
jno
mov
inc
xor
mov
dec
iret
cdq
mov
sub
iret
loopne
sti
call
retf
shl
fwait
inc
mov
call
shl
inc
(bad)
out
ins
shl
mov
data16
push
imul
stc
es
int3
std
dec
ss
loop
sbb
retf
add
int
xchg
cmc
mov
mov
das
movs
push
ror
mov
sub
or
cmp
jmp
cmp
daa
mov
repz
or
outs
or
stos
cmc
jne
dec
jp
(bad)
not
aad
xchg
push
stc
pop
scas
mov
push
or
sub
cmc
(bad)
mov
(bad)
scas
mov
jbe
sar
jg
pop
sub
xor
data16
mov
fmul
mov
mov
jmp
adc
jg
push
dec
in
xchg
push
xor
jbe
in
xchg
icebp
jl
stc
sub
adc
es
in
or
int3
ss
push
mov
jns
xchg
ret
mov
std
inc
mov
jb
in
fadd
dec
xchg
mov
int
mov
aam
dec
ins
xor
mov
iret
add
mov
pop
and
pusha
xor
adc
retf
xchg
jl
imul
fs
(bad)
pop
cli
cwde
xchg
inc
pop
push
into
movs
adc
and
repz
leave
stos
mov
mov
sbb
mov
push
push
test
add
in
cmp
jmp
push
mov
xchg
sbb
sti
mov
cmp
push
cmp
or
xchg
in
xchg
sub
xchg
or
addr16
lds
push
imul
push
scas
retf
pop
sbb
shl
in
jl
add
scas
lock
jg
pop
mov
xor
retf
imul
pop
or
sub
rcr
adc
std
mov
les
fcom
repz
adc
mov
addr16
sbb
xchg
inc
and
jae
push
xchg
mov
test
mov
pop
mov
mov
ds
or
out
outs
xchg
into
jmp
(bad)
es
sub
in
mov
aad
xor
push
mov
sbb
push
(bad)
add
inc
xor
mov
mov
pop
(bad)
jg
sar
jl
mov
cmp
push
(bad)
lods
cmp
(bad)
cmp
or
or
jge
hlt
cmps
pop
das
xor
mov
test
xor
daa
and
pushf
adc
jmp
cmp
pop
cmp
loop
pop
mov
xlat
inc
shr
inc
adc
iret
clc
push
xor
(bad)
into
push
leave
sub
pop
(bad)
movs
and
nop
das
jecxz
test
dec
sub
sub
push
cmp
jnp
jecxz
sub
cmp
or
lds
repnz
mov
(bad)
mov
add
jmp
xchg
mov
and
leave
jg
repz
sbb
dec
into
dec
out
mov
cs
adc
rcl
out
jmp
jle
xchg
xchg
shr
mov
daa
stos
fdivr
loope
or
fidiv
lds
pop
and
push
push
loop
xchg
shl
dec
sbb
arpl
push
sub
int
sbb
jmp
mov
xchg
mov
pop
xlat
(bad)
push
test
add
test
sub
xchg
in
rol
aaa
test
xchg
rcr
in
and
int
test
fisubr
jnp
push
push
shl
ins
ja
leave
or
inc
in
cmc
mov
pop
mov
(bad)
pop
icebp
push
sbb
xchg
scas
addr16
ret
repz
call
xor
mov
and
(bad)
jl
test
mov
call
dec
pop
add
inc
inc
jg
cmp
(bad)
dec
cmp
pushf
in
or
jge
in
or
inc
push
push
nop
stos
mov
(bad)
lock
dec
js
ret
inc
iret
pop
xor
lds
or
call
add
test
pop
retf
xor
outs
push
mov
or
mov
mov
adc
cmp
add
and
retf
pop
and
loopne
add
or
pop
push
stos
sbb
retf
shl
cld
and
(bad)
mov
mov
pop
outs
imul
cmp
inc
dec
lea
cdq
mov
dec
sbb
sbb
test
popa
cld
sar
pop
mov
pop
dec
jl
xor
mov
daa
pop
cmp
jns
sub
je
fiadd
idiv
repz
sbb
push
mov
lock
cmp
mov
(bad)
das
cmp
pop
call
into
or
add
pop
xor
stos
imul
(bad)
popf
ss
fcom
mov
and
in
lods
jl
dec
mov
pop
mov
mov
and
mov
sbb
cld
dec
(bad)
xlat
lock
push
shl
mov
stc
push
xchg
fstp
and
rol
loopne
jb
push
imul
jno
mov
jno
popf
arpl
stos
jecxz
fmul
push
adc
out
sahf
shl
mov
repz
adc
push
pop
test
cs
mov
mov
pop
mov
loope
and
in
pop
xchg
mov
int
adc
add
loope
jmp
(bad)
xor
je
jl
fstp
push
pop
or
movs
mov
loop
call
imul
mov
pop
fsub
es
aam
sbb
shl
sbb
and
push
mov
mov
pusha
lods
sti
mov
dec
out
mov
xor
dec
mov
sub
cmps
inc
dec
xor
adc
inc
cld
ins
mov
xor
and
and
mov
rol
sbb
dec
std
ds
mov
stos
pushf
gs
pop
(bad)
fwait
xchg
in
xor
inc
push
add
add
push
dec
or
cmp
jb
pop
mov
add
outs
mov
push
xchg
xchg
cdq
(bad)
(bad)
leave
xor
jne
retf
mov
stos
movs
pop
cmc
in
pop
pop
mov
dec
mov
sbb
movs
ins
movs
sbb
and
sub
lahf
mov
ins
nop
stos
adc
mov
sahf
mov
push
popa
cmps
les
jns
pop
jbe
jb
push
in
or
cmovs
xlat
mov
int3
(bad)
hlt
add
mov
inc
arpl
inc
xor
int
xchg
fimul
sub
arpl
jmp
pushf
retf
rol
aas
aam
and
ins
and
cmc
mov
addr16
jp
arpl
or
mov
jbe
leave
lahf
mov
sbb
pop
or
mov
(bad)
cmps
pop
push
sbb
mov
add
lods
xchg
mov
stos
or
cmps
fdivr
mov
fwait
xlat
or
jmp
inc
mov
(bad)
popf
cmp
push
dec
jle
or
stos
pushf
mov
pop
call
les
xchg
test
pop
pop
sub
cmps
bound
out
in
ins
shl
loop
jmp
retf
xchg
xchg
lods
shr
mov
cmps
div
lea
jno
es
js
test
les
cli
add
mov
adc
mov
push
mov
and
jo
sbb
sub
mov
sub
mov
push
pop
retf
cmc
sub
in
les
xchg
inc
lahf
test
aas
mov
pop
pop
push
mov
fidivr
sub
push
pop
cld
push
mov
and
push
cli
add
cld
push
pop
jbe
pop
add
scas
pop
add
jl
push
in
fstp
(bad)
mov
leave
or
dec
jp
push
jg
jmp
dec
jmp
jno
inc
(bad)
getsec
mov
imul
sub
ja
ficom
scas
nop
add
pop
(bad)
jno
and
pop
xchg
sub
jnp
div
push
dec
cmp
mov
mov
mov
dec
cdq
hlt
enter
xlat
and
pop
xchg
imul
popa
sub
in
jmp
mov
leave
jg
pop
call
fwait
inc
in
inc
cmp
mov
sbb
shl
inc
cmp
ins
jbe
xor
data16
test
mov
push
sbb
xchg
and
dec
push
inc
test
xor
jnp
(bad)
or
sub
mov
std
int3
push
and
dec
in
cmp
lahf
sub
fsub
je
and
ja
icebp
jns
in
add
aad
idiv
mov
mov
mov
(bad)
sbb
xchg
jl
mov
jae
or
ficomp
and
loop
sbb
daa
cmp
add
loopne
adc
fcomp
mov
xlat
cmp
(bad)
(bad)
jl
pop
push
repnz
inc
jne
mov
mov
jae
lahf
dec
mov
fsub
or
mov
data16
xor
xor
adc
hlt
sub
cwde
mov
rol
pop
fs
and
cwde
aas
sbb
out
jmp
mov
mov
(bad)
icebp
mul
add
xchg
(bad)
xchg
lahf
data16
rcl
mov
int3
loop
(bad)
(bad)
push
cld
ret
jp
add
xor
xor
jo
mov
ror
stos
es
repz
ror
push
jg
add
cmp
xchg
in
inc
ficomp
cwde
movs
cmp
js
stc
movs
(bad)
arpl
jne
mov
jo
inc
pop
jo
or
mov
or
push
(bad)
sbb
jae
push
fucomi
and
cmp
out
in
sbb
or
xor
stos
enter
lock
pop
mov
jle
clc
leave
sbb
dec
inc
dec
into
fs
imul
xlat
dec
stc
movs
mov
cmc
sbb
movs
sbb
(bad)
in
cmp
mov
call
mov
inc
sar
cmps
jnp
icebp
clc
push
pop
or
add
repz
dec
loope
xchg
adc
icebp
int3
jmp
jmp
mov
test
jbe
sub
sbb
adc
push
enter
cmp
sub
stos
das
mov
xor
sbb
mov
xlat
adc
fwait
lods
(bad)
dec
mov
inc
imul
nop
cli
jb
or
lea
repz
adc
loope
sbb
scas
dec
enter
push
xor
jne
dec
ret
xor
jnp
inc
movs
mov
cld
aad
cwde
cmc
mov
stos
scas
mov
std
push
ss
sbb
je
lea
jmp
add
jne
dec
bound
adc
leave
mov
sub
cmps
pop
cmp
cmp
stc
mov
jmp
ret
mov
stos
mov
sub
lods
sbb
or
mov
push
cdq
in
xchg
jnp
shl
mov
dec
sar
jl
or
jmp
scas
cmp
xchg
sub
rcl
ror
xor
jno
std
dec
inc
hlt
or
sub
retf
mov
sbb
neg
or
fisub
mov
xor
repz
(bad)
mov
movs
or
adc
mov
(bad)
fiadd
dec
inc
rol
jmp
aaa
in
xlat
adc
xor
xor
movs
sbb
dec
addr16
mov
push
push
sub
push
adc
adc
clc
loop
shl
push
and
ja
rcr
dec
xchg
paddsw
movs
mov
pusha
pop
mov
pop
rcr
xchg
(bad)
xor
mov
mov
xchg
push
pop
loopne
push
xchg
inc
jns
pop
jp
pop
mov
xchg
(bad)
lock
bnd
in
scas
je
pop
add
push
push
es
movs
and
push
mov
sti
sbb
mov
pop
hlt
adc
pop
jl
aad
nop
out
mov
sahf
sbb
shrd
fsubr
dec
cld
cmps
inc
ss
nop
adc
lahf
pop
cwde
xlat
push
inc
in
leave
adc
(bad)
mov
pop
inc
push
cmps
mov
cmp
jmp
xor
jp
xchg
mov
ja
std
pop
xchg
(bad)
mul
sub
pop
hlt
cmp
lds
hlt
ret
pop
push
mov
mov
jmp
mov
mov
aaa
inc
mov
retf
mov
popa
sahf
jb
cmp
retf
imul
sub
in
sub
sbb
out
dec
mov
push
cmps
inc
jmp
and
or
pop
adc
lods
gs
dec
cdq
outs
xor
push
cs
push
in
jb
sub
movs
inc
fsubr
out
sbb
or
daa
push
sbb
pop
xchg
fadd
cmp
aaa
dec
dec
call
mov
xor
xor
adc
pop
out
lods
and
clc
jns
stos
fdivr
popf
pop
hlt
fcmove
jecxz
or
stos
dec
pop
sub
adc
sbb
xchg
jns
dec
dec
aaa
jno
push
shl
lds
lea
xor
hlt
mov
inc
rcl
out
outs
mov
out
mov
cli
jo
adc
aam
outs
jne
movs
loop
ins
sbb
(bad)
stc
sar
jg
xor
and
rcl
inc
icebp
aam
in
inc
int3
shl
imul
xchg
dec
push
jp
pushf
fld
or
mov
inc
xchg
mov
sub
in
xchg
sub
ja
push
cmp
fild
aad
and
dec
mov
sbb
jae
aaa
ss
rcr
mov
mov
retf
pop
imul
cwde
outs
xchg
cli
fcom
shl
inc
ins
out
push
inc
(bad)
cli
sub
mov
jmp
leave
mov
movs
adc
jae
hlt
sub
sti
call
mov
js
xchg
ds
sbb
mov
stos
sbb
mov
sahf
xchg
or
xchg
or
imul
adc
das
cld
ror
lock
xor
inc
cmp
adc
and
mov
and
jns
sub
dec
call
ja
push
int3
cmp
pop
jb
cmp
ja
xchg
mov
sti
mov
mov
pop
int
enter
mov
xchg
inc
inc
push
inc
pop
mov
in
mov
out
out
scas
add
add
push
or
es
(bad)
(bad)
mov
push
push
fld
push
stos
scas
sbb
ins
and
stos
fwait
jecxz
push
cwde
mov
retf
(bad)
(bad)
adc
xor
(bad)
dec
iret
leave
mov
scas
test
dec
imul
(bad)
mov
inc
(bad)
sbb
push
mov
cmp
sbb
scas
loop
(bad)
or
cwde
jge
mov
sbb
int3
sbb
jns
mov
stos
pop
call
fisubr
es
ret
bound
adc
fidivr
int
shr
dec
or
lods
cmp
pop
lock
push
xchg
xchg
ja
xor
(bad)
xor
popf
(bad)
fld
sub
test
pop
jb
in
rol
sub
cmps
(bad)
jae
gs
dec
push
scas
pop
stos
jle
mov
jmp
das
xor
(bad)
call
pop
movs
outs
adc
sbb
ficomp
xchg
push
inc
sbb
or
retf
mov
and
outs
dec
inc
enter
or
sahf
loop
push
add
and
aaa
and
mov
or
loope
add
xlat
enter
fidivr
mov
and
(bad)
nop
fscale
imul
adc
lds
dec
sub
push
loopne
mov
pushf
sbb
retf
in
outs
sbb
mov
adc
mov
lods
stos
mov
in
adc
(bad)
sahf
loope
push
xor
(bad)
bound
cdq
movs
popaw
sub
lods
daa
inc
or
cli
idiv
jmp
(bad)
push
daa
(bad)
sub
(bad)
pop
dec
sahf
loop
xor
mov
sbb
out
xchg
nop
adc
fiadd
mov
and
repz
imul
or
mov
rol
ror
bsr
test
in
xor
rcr
icebp
xchg
and
stc
sahf
xor
add
dec
mov
gs
lods
dec
add
stos
pop
aas
iret
cmps
pop
cmp
jg
fsubr
dec
repnz
fsubr
int3
ss
test
pop
fldcw
xor
enter
mov
aas
sub
adc
fldenv
add
mov
in
in
mov
lea
aas
push
bound
dec
add
jp
add
jmp
in
shl
out
mov
test
les
xor
jns
sbb
shl
shl
adc
fwait
xchg
xor
mov
test
add
(bad)
movs
mov
cs
push
mov
test
mov
mov
retf
pushf
test
popf
add
sub
mov
mov
popf
ins
pop
pop
paddq
xchg
sub
leave
xchg
out
arpl
push
sbb
(bad)
aam
mov
cmc
out
js
shl
adc
stc
jne
push
sbb
xor
mov
shr
push
push
mov
mov
std
xchg
lea
je
pusha
jmp
sets
enter
pusha
mov
fwait
pop
sbb
cmp
(bad)
ja
jbe
out
test
lahf
cmp
ins
cmp
les
addr16
aas
arpl
clc
rcl
or
or
lods
pusha
les
xor
adc
ret
es
pop
ret
adc
pop
sub
scas
jns
mov
sbb
test
ret
and
jle
addr16
je
outs
es
sub
fucomi
leave
(bad)
pusha
push
dec
push
mov
(bad)
iret
dec
daa
mov
shr
mov
cmp
mov
push
inc
adc
daa
icebp
xchg
lds
fnsave
dec
call
out
sub
ret
xchg
mov
add
loopne
arpl
out
iret
test
dec
pop
das
lods
int3
int3
std
sbb
mov
push
out
lds
mov
push
xlat
and
icebp
or
jo
xor
retf
cwde
mov
or
jg
js
nop
call
mov
adc
loopne
daa
inc
ret
ret
sub
test
adc
adc
mov
or
mov
lock
in
call
aas
cmp
imul
sbb
pushf
jge
test
jne
scas
mov
nop
pop
sbb
mov
ret
imul
imul
xor
jmp
inc
cmc
inc
in
stos
pusha
daa
lods
loope
mov
or
mov
or
popa
loop
enter
fimul
xor
movs
cmp
push
xor
test
out
jmp
sar
and
xchg
inc
sahf
fcmovbe
in
ja
or
(bad)
push
adc
pusha
stc
xchg
mov
cmp
jecxz
sbb
add
out
loop
imul
and
xchg
push
or
arpl
jl
loope
jb
daa
push
dec
mov
mov
fdivr
pop
adc
ret
mov
sub
sub
sub
(bad)
mov
jecxz
loope
and
sbb
je
jl
(bad)
pusha
cli
xchg
xlat
mov
mov
ret
lods
fsubr
stc
loopne
jb
and
add
cli
sbb
ja
push
pop
aaa
cs
or
scas
ror
push
cmps
pop
or
add
add
and
add
aaa
ins
pop
mov
inc
jae
mov
sbb
mov
sbb
int
in
sub
xor
or
add
lods
mov
ds
gs
push
mov
inc
test
daa
xchg
mov
inc
cmps
std
jp
cmp
push
gs
mov
pushf
stos
call
outs
sbb
sub
repnz
cmps
jecxz
sub
out
mov
jle
cld
sbb
inc
hlt
not
sub
sub
cmp
lock
(bad)
(bad)
xchg
fisubr
(bad)
arpl
xor
lods
inc
das
sahf
xor
aad
ret
sbb
lea
cwde
ds
std
aad
lea
sbb
dec
pushf
aam
repnz
cmps
ins
jg
popa
and
aam
jl
jns
mov
and
jmp
clc
stos
gs
push
jnp
lahf
aam
cmc
iret
fbstp
test
rol
gs
fwait
mov
shr
mov
fild
aad
js
xor
jmp
push
lock
ja
or
loopne
call
mov
stc
es
mov
push
mov
lahf
cmps
push
or
pop
scas
(bad)
loop
xchg
push
scas
lahf
push
jmp
pop
pop
scas
adc
movs
pop
jno
mov
pop
ins
aam
das
jmp
mov
dec
js
inc
sub
dec
cmps
lahf
dec
sbb
push
inc
popf
sub
repnz
in
add
jae
add
repnz
or
xlat
lds
call
jg
jb
mov
and
pop
xlat
test
sub
sub
dec
das
sub
mov
and
mov
xor
jne
xchg
jne
push
outs
out
sbb
aaa
sti
mov
call
out
loop
pop
cmp
inc
cmp
mov
cdq
xchg
inc
mov
movs
movs
pop
add
jbe
dec
adc
xchg
fdivp
je
push
add
sti
inc
lods
or
mov
jns
les
popf
call
shl
jns
dec
sbb
popf
dec
(bad)
mov
loop
bnd
push
test
pop
(bad)
dec
loope
movs
imul
addr16
ins
inc
pop
mov
repnz
mov
sbb
or
xchg
inc
add
adc
stc
jg
inc
leave
adc
mov
(bad)
mov
mov
inc
(bad)
and
fidivr
test
movs
push
std
popa
mov
mov
inc
jecxz
mov
test
aas
lods
mov
dec
popa
mov
jo
dec
(bad)
outs
aad
js
jb
xor
retf
push
sti
rol
vpackuswb
inc
jecxz
xchg
xchg
ds
lea
mov
aad
out
fst
jmp
in
call
mov
(bad)
xchg
pop
jo
xchg
cmps
jae
pusha
inc
(bad)
imul
mov
pop
int3
in
dec
ret
mov
int
mov
xchg
add
jecxz
iret
mov
daa
outs
lods
sbb
adc
dec
and
aaa
push
int3
push
ror
or
enter
(bad)
jnp
mov
in
pop
lock
sub
es
mov
inc
mov
leave
jno
xor
pop
xlat
jo
xchg
and
jae
add
(bad)
or
(bad)
mov
xchg
arpl
frstor
and
cmc
add
mov
int3
cmp
and
xchg
mov
pushf
mov
fistp
mov
loope
dec
data16
mov
mov
and
mov
shl
jno
call
pop
fst
sub
xchg
push
fst
imul
cmp
jp
out
or
enter
mov
xchg
retf
mov
(bad)
(bad)
cld
mov
mov
shl
or
sub
dec
sub
add
add
push
xor
push
xor
sti
adc
mov
push
cmp
inc
call
test
cmp
dec
mov
cmp
push
rcr
and
outs
scas
jecxz
(bad)
ret
sub
test
add
fsubrp
xchg
movs
lea
and
ss
int3
push
pushf
stos
(bad)
(bad)
fcomp
into
in
jns
adc
cwde
(bad)
in
es
pop
push
leave
cmc
retf
(bad)
xor
cmp
fwait
rol
(bad)
fs
mov
repnz
xchg
mov
add
adc
cmps
stos
scas
test
fild
xchg
xchg
cdq
jo
jmp
cli
fnstenv
push
aam
lock
ins
push
mov
loop
push
sub
pop
xchg
xchg
pop
fld
xchg
scas
xchg
dec
das
xchg
retf
push
ins
pop
cmc
ins
ss
xor
xchg
mov
jns
mov
fdiv
clc
jecxz
add
dec
fsubr
xor
mov
popa
(bad)
fist
outs
jns
shr
and
mov
and
pop
mov
jb
ins
fsubr
push
popf
adc
mov
test
sar
xchg
push
stos
ret
data16
pushf
das
sahf
fcom
inc
sbb
fsub
dec
scas
not
mov
inc
stos
adc
cmp
popf
test
xor
cmc
cs
loope
mov
mov
cmp
mov
lock
loope
out
push
into
cmc
iret
enter
mov
mov
ds
jl
xor
adc
adc
stos
test
or
out
jle
shld
es
mov
outs
mov
ja
sbb
outs
sub
adc
cli
test
ja
mov
rcl
shl
mov
cs
sbb
jno
(bad)
inc
mov
scas
adc
and
bound
cmp
data16
pop
loop
pop
test
xchg
pop
int
(bad)
xor
arpl
sub
loopne
les
ins
xor
cmp
mov
or
jg
inc
mov
mov
push
push
pop
jle
jne
inc
adc
cmps
jnp
mov
lods
mov
addr16
in
add
cmp
sub
inc
ds
imul
outs
retf
shl
fdiv
pop
jmp
xchg
pop
dec
jno
push
lods
mov
mov
xchg
movs
int3
cmp
xchg
cs
inc
(bad)
hlt
jle
and
mov
mul
inc
or
repnz
into
jbe
les
sbb
jns
jae
add
sub
test
ins
mov
jp
push
jne
ss
retf
xchg
jno
(bad)
jmp
fild
cmp
cmp
aam
inc
inc
adc
mov
bound
in
push
add
ja
jb
xor
cmp
nop
xchg
mov
call
cdq
pop
push
mov
pop
push
cmp
and
xor
enter
int3
js
lds
inc
movs
sbb
add
aad
xchg
and
mov
out
pop
pushf
push
mov
add
xor
mov
je
fimul
push
lea
outs
jb
adc
xor
add
sbb
pop
inc
cmc
gs
pop
sbb
mov
xor
int
mov
pop
ret
mov
pop
mov
push
jl
or
sub
dec
adc
push
or
pop
rcl
fisubr
aaa
out
mov
jp
sahf
outs
dec
or
addr16
adc
and
push
push
scas
gs
fsub
jp
mov
movs
inc
push
inc
push
mov
pop
cli
retf
mov
les
add
adc
push
addr16
sub
ins
push
ja
add
iret
cdq
(bad)
jge
push
stc
aas
xor
xor
mov
add
mov
adc
inc
outs
cmps
fmul
jg
jle
mov
mov
and
imul
ss
pop
and
repnz
leave
jb
xlat
mov
ins
fdivr
dec
mov
leave
ficomp
sub
shl
push
scas
adc
out
push
sar
loop
paddusw
add
and
pusha
cdq
push
shl
dec
push
lods
and
rcl
jmp
xor
mov
sub
xchg
mov
jns
pop
jno
mov
loopne
adc
arpl
mov
jnp
es
xchg
jbe
pop
(bad)
dec
shr
sub
inc
jecxz
ds
xchg
or
jge
or
add
or
and
xchg
cdq
js
mov
pop
lods
jecxz
call
pop
shl
test
blcic
test
add
jno
pusha
adc
icebp
arpl
aad
mov
and
frstor
xor
data16
fwait
jne
enter
ds
fsub
setno
dec
mov
shl
fstp
sub
fiadd
dec
mov
adc
xor
arpl
lock
dec
aad
pusha
inc
fdivp
pop
pop
mov
adc
push
dec
mov
pusha
xor
movs
jne
or
cmp
xchg
cld
sub
inc
in
sbb
test
aaa
imul
out
and
retf
das
mov
mov
dec
(bad)
or
sar
pop
push
fstp
loop
daa
push
in
in
daa
mov
test
jo
pop
movs
mov
mov
(bad)
push
outs
mov
add
and
call
xor
or
in
mov
mov
and
sbb
adc
cwde
mov
sbb
scas
aad
xor
add
xchg
dec
es
xlat
sbb
fld
push
movs
pop
gs
jl
cmp
daa
jmp
xor
out
pushf
arpl
gs
jae
imul
mov
scas
push
mov
loope
push
jns
jno
dec
inc
adc
mov
mov
inc
ss
pop
aaa
scas
cli
pop
retf
test
hlt
push
out
repnz
pop
mov
outs
xor
int3
xchg
dec
iret
std
or
cwde
push
sub
addr16
adc
ins
adc
push
and
sar
push
push
dec
pop
add
xchg
cmps
and
or
loop
sti
cwde
mov
js
add
sub
sub
iret
xor
jl
dec
xchg
mov
es
(bad)
mov
mov
mov
fimul
cdq
jno
push
daa
popa
mov
fwait
xor
adc
xchg
div
push
mov
es
cmp
cli
movs
das
or
repnz
cmp
xchg
mov
push
and
xor
cli
and
and
in
push
in
inc
inc
adc
movs
dec
inc
or
mov
push
ds
pop
inc
js
or
adc
push
cdq
mov
fidiv
popf
scas
inc
jmp
pushf
mul
fisttp
pop
mov
dec
xor
xchg
add
lahf
cmp
inc
lods
imul
mov
gs
add
int3
mov
jmp
mov
mov
mov
and
inc
cmp
out
aas
cmp
add
movs
into
(bad)
jmp
lock
fwait
sbb
dec
mov
test
ror
fcom
aad
mov
or
sbb
mov
retf
mov
adc
enter
or
push
fwait
jb
loop
fild
sub
retf
xor
xor
cmps
and
cmp
cmp
cmp
jbe
aaa
add
rol
xchg
std
or
mov
jp
sar
movs
and
xchg
loopne
test
xor
sub
(bad)
shl
daa
lahf
in
mov
sbb
movs
frstor
addr16
fbstp
ds
fmul
loop
jle
mov
arpl
push
mov
push
out
pop
mov
and
or
ja
adc
test
or
scas
jo
pop
lods
cmp
push
neg
push
repnz
pop
and
hlt
in
sub
adc
push
mov
ret
fwait
movs
mov
and
sub
imul
pusha
fstp
pop
xadd
rol
icebp
sbb
cld
addr16
cmp
xchg
pusha
pop
js
(bad)
in
push
sbb
imul
(bad)
fdivr
add
pop
stc
test
retf
ret
nop
fstp
xchg
fild
inc
stc
nop
mov
mov
jne
jo
loopne
mov
inc
push
or
idiv
push
lock
xchg
xor
test
jle
cmp
mul
(bad)
xlat
out
push
jne
ret
mov
xor
cmp
jns
les
int3
sub
addr16
xchg
adc
or
shl
push
pusha
mov
xor
sub
jmp
cwde
(bad)
mov
jae
out
dec
inc
mov
in
adc
add
outs
repnz
xor
dec
mov
into
cdq
and
sbb
fnstsw
sbb
and
pop
sar
es
aaa
sub
adc
ss
jbe
and
xor
sub
mov
cmp
jb
sbb
fdiv
test
add
outs
cli
pusha
dec
mov
ret
mov
arpl
or
lds
sub
mov
sbb
into
ds
add
dec
cwde
mov
ret
adc
jae
repnz
pop
sbb
dec
mov
xchg
cmp
xchg
pushw
inc
not
movs
imul
dec
and
or
xchg
call
dec
in
iret
cdq
inc
push
les
inc
mov
push
adc
or
add
inc
adc
ja
inc
jl
out
lock
lahf
xor
cmp
imul
out
daa
outs
pop
fistp
mov
(bad)
neg
je
jmp
sbb
mov
ret
cli
or
jne
stos
icebp
push
xor
nop
das
int3
push
icebp
dec
jmp
sub
mov
shr
and
jnp
sub
or
shr
push
loope
cmp
cwde
add
cld
push
pusha
sbb
and
xchg
sbb
orps
push
add
pushf
(bad)
ins
dec
lea
in
add
ds
sahf
(bad)
xor
fisub
ja
loop
xor
or
push
loope
mov
mov
ins
pushf
je
xor
xor
and
mov
std
loope
bound
or
mov
or
cwde
push
hlt
push
mov
retf
mov
sub
push
aaa
arpl
(bad)
shl
mov
aad
outs
cmps
aaa
nop
sub
out
jge
aad
mov
cs
xchg
fwait
jnp
es
cli
popa
fisubr
mov
lods
sub
jle
ret
mov
(bad)
pop
into
gs
inc
inc
jmp
and
adc
or
dec
neg
fiadd
shl
test
inc
mov
mov
(bad)
(bad)
ins
push
pop
mov
imul
jbe
push
in
daa
mov
push
into
sti
push
test
(bad)
data16
in
xchg
or
sbb
out
xchg
xchg
push
mov
dec
outs
loopne
loope
or
xor
push
adc
lods
xchg
aaa
arpl
sbb
xor
xchg
push
ret
inc
jae
aam
test
(bad)
mov
sub
ret
inc
es
out
push
adc
ins
jmp
imul
mov
movs
dec
imul
xor
cli
mov
inc
add
sbb
push
shl
loope
test
leave
pop
ja
adc
ds
dec
shr
arpl
test
cmp
outs
pop
dec
xchg
mov
and
sbb
enter
in
aas
fst
mov
adc
loop
iret
(bad)
call
xchg
iret
cli
mov
data16
out
and
jmp
es
mov
push
xchg
sbb
scas
pop
out
fmul
inc
nop
scas
push
test
xor
clc
mov
dec
ret
stos
psubd
hlt
hlt
fcmovne
mov
cmp
jle
push
inc
mov
icebp
push
int
sub
cmp
mov
lods
aas
sbb
pop
inc
push
stc
xlat
rcr
adc
ret
call
push
neg
or
cmps
mov
mov
mov
outs
(bad)
jmp
mov
aad
mov
popa
into
sub
sbb
ret
int
sbb
pop
les
mov
add
pop
imul
in
lods
adc
mov
in
out
push
mov
or
sub
lods
cmp
jb
inc
add
dec
ins
hlt
jae
gs
ret
xchg
pop
push
mov
adc
inc
aaa
or
jno
xor
mov
shr
adc
movs
lock
adc
outs
sub
icebp
nop
push
mov
inc
add
add
inc
in
ja
into
stos
dec
cmp
add
sbb
push
out
add
jns
adc
retf
sub
push
push
or
ja
into
loope
mov
jp
shl
sub
xchg
or
sub
jb
aad
outs
fst
pop
or
mov
outs
mov
add
sti
cmp
out
shl
sbb
jmp
mov
push
out
in
test
lods
cmp
test
mov
sbb
nop
cmp
and
pop
leave
dec
rcl
fcmovne
out
add
int
and
xchg
cmp
jne
add
in
lds
jne
retf
mov
xchg
add
or
jbe
mov
out
loope
mov
mov
fld
mov
xchg
or
or
xchg
inc
pop
xor
retf
cli
ins
(bad)
xor
push
ficom
mov
jg
fadd
inc
cmp
lahf
aad
adc
scas
movs
fdivr
inc
sbb
and
add
les
xchg
dec
int3
movs
inc
add
movs
movs
rdmsr
cmp
mov
jnp
inc
ins
pop
lock
mov
add
xchg
es
stc
(bad)
movs
jnp
adc
cmc
outs
or
inc
fldcw
sub
mov
ds
fwait
lods
retf
cs
test
leave
push
std
das
push
xor
js
in
sbb
ja
ds
mov
mov
adc
aam
div
data16
mov
dec
inc
cld
outs
enter
ds
inc
in
fcmovnu
jmp
cmps
or
adc
xor
xchg
jmp
add
inc
jns
or
add
mov
std
ret
hlt
test
inc
movs
(bad)
jb
repz
icebp
clc
iret
dec
cmp
lock
push
inc
and
lahf
mov
test
lea
add
into
cdq
popa
nop
add
sbb
cmp
xchg
and
and
std
aaa
sbb
or
fldz
sub
mov
(bad)
into
xor
std
aas
and
cld
push
or
sbb
es
mov
pop
out
retf
test
push
push
(bad)
call
sub
sub
push
dec
mov
jle
icebp
push
inc
sbb
fdivr
cmps
jb
mov
jb
lods
sub
mov
pop
jnp
and
inc
mov
rcl
(bad)
pop
and
lods
pop
xchg
jmp
stc
sub
test
sbb
xlat
aas
(bad)
stos
mov
sub
adc
ja
rcr
jge
popa
dec
ds
outs
lock
cmp
jecxz
in
retf
out
aaa
mov
mov
sbb
lahf
in
mov
les
xor
or
fild
adc
fsubr
lods
add
ffreep
or
pop
imul
fisub
xchg
test
daa
aas
les
repz
retf
out
ret
pop
sub
pop
mov
mov
mov
add
(bad)
scas
dec
lock
mov
cmp
pop
push
or
jns
fdiv
dec
repz
(bad)
pushf
mov
xor
xchg
mov
cmc
stos
test
scas
mov
daa
adc
data16
js
mov
cmp
jl
outs
add
jmp
mov
sbb
jmp
cli
shl
pop
pop
inc
sahf
xlat
jge
aas
loop
in
das
es
nop
in
jo
pop
sub
push
or
xor
mov
sub
jo
xchg
scas
mov
pop
shl
mov
cmp
cmp
movs
jno
push
retf
imul
dec
or
scas
xchg
stc
inc
inc
mov
into
sbb
pop
scas
std
cld
mov
fidivr
sub
cli
out
xchg
lods
mov
das
jno
push
pop
inc
push
retf
xchg
mov
rep
jae
repz
cmp
xlat
je
cmp
ret
cmp
xor
push
shl
adc
or
(bad)
cld
xlat
xchg
add
inc
shl
arpl
aad
mov
loop
hlt
test
stos
mov
mov
add
out
aas
out
mov
push
pop
dec
xor
mov
(bad)
push
je
cs
int
shl
in
dec
fstp
add
test
adc
sti
push
inc
pop
dec
mov
lds
inc
jg
mov
dec
xchg
xor
in
loop
cmp
mov
sar
xor
jmp
cmp
retf
and
mov
(bad)
out
in
pop
ins
xor
push
loopne
push
cdq
sbb
(bad)
int
push
dec
mov
daa
ror
or
mov
dec
jb
xor
aad
push
ror
xor
imul
mov
imul
gs
in
jo
shl
push
ret
shl
in
lahf
mov
or
push
xlat
push
mov
and
cs
inc
and
inc
inc
(bad)
test
cld
test
ja
push
sub
test
xor
adc
inc
jle
and
in
fsubr
pop
add
aaa
(bad)
jl
or
inc
cmp
inc
mov
mov
push
push
aad
xor
mul
inc
loope
(bad)
std
and
push
fs
(bad)
cmc
jno
retf
jmp
mov
mov
jmp
ins
and
and
mov
jle
sbb
dec
leave
mov
fisttp
cmp
ret
push
push
mov
imul
xor
mov
pop
push
push
ins
dec
sahf
(bad)
outs
sti
xchg
mov
ds
lds
prefetcht1
std
cwde
sbb
sti
int3
xor
jmp
or
pushf
data16
inc
retf
xchg
adc
cwde
xor
or
shl
xchg
imul
pusha
pop
sub
shl
xchg
ins
repnz
or
xchg
cmps
pop
mov
mov
mov
pop
nop
mov
jae
inc
ja
mov
in
hlt
in
pop
push
mov
xchg
sahf
push
mov
xchg
push
dec
cdq
mov
out
test
inc
test
lock
pop
add
push
mov
sbb
mov
jecxz
sbb
and
push
cmp
lea
std
and
push
rcr
test
out
pop
xchg
pop
mov
or
inc
fcom
inc
add
push
push
fiadd
(bad)
fist
hlt
mov
xchg
ja
inc
clc
push
in
iret
popf
dec
mov
das
loop
add
stos
shl
hlt
push
mov
nop
(bad)
hlt
adc
(bad)
mov
xchg
bound
pop
xchg
pop
ja
enter
or
add
cld
xor
test
jmp
jns
sahf
sbb
sub
or
adc
mov
mov
sub
add
cmps
rol
add
call
cdq
sub
sbb
js
retf
repnz
(bad)
lea
lods
leave
out
and
add
mov
sti
push
cdq
xor
inc
sbb
add
adc
xchg
mov
es
pop
pop
cmp
in
fld
cmp
inc
inc
cdq
sub
and
hlt
pushf
mov
fsubrp
loop
mov
sub
adc
(bad)
aaa
test
in
cmp
out
aad
fisub
aas
fprem1
inc
dec
or
mov
nop
xor
inc
aaa
(bad)
das
jno
jge
fmul
mov
or
shr
inc
xchg
fnsave
retf
movups
mov
mov
les
ror
ret
and
shl
push
aad
lds
mov
or
cmp
js
test
mov
es
xor
and
cmps
xchg
push
xor
dec
inc
sub
repz
jl
mov
out
scas
cwde
(bad)
in
mov
fst
add
xchg
popa
sahf
mov
pop
(bad)
push
mov
mul
xlat
ins
xchg
and
mov
jecxz
pop
mov
sbb
repnz
mov
xchg
push
dec
fdivr
and
xrelease
jno
push
out
inc
lods
ss
stc
push
leave
pop
ficom
dec
stos
jecxz
inc
shr
pushf
movs
inc
jnp
ret
ror
por
fbld
sbb
mov
loop
jmp
int3
(bad)
push
sbb
or
sbb
jle
xor
ds
in
(bad)
cli
or
(bad)
cmc
mov
jo
mov
push
mov
push
ins
es
fs
jne
or
mov
data16
fcmovnb
add
push
ins
mov
lock
add
push
jbe
movs
mov
js
sahf
out
call
(bad)
int
scas
fisubr
das
push
cmp
out
fld
cmp
dec
mov
movlps
jne
in
inc
test
xor
fnstsw
jle
dec
jge
mov
aam
mov
jle
les
or
lock
jecxz
adc
cli
sub
dec
retf
fisub
ins
xchg
ror
loope
bound
inc
mov
mov
or
fst
pop
push
mov
ins
push
inc
and
or
sahf
(bad)
retf
mov
mov
in
and
push
jge
add
fsub
fst
fnstcw
out
xlat
sub
or
lea
jne
js
imul
iret
xchg
ffree
add
adc
scas
and
sbb
int3
test
movs
dec
fnstsw
iret
(bad)
push
pop
cmp
add
int3
adc
mov
dec
pop
pushf
(bad)
xchg
iret
mov
jp
cmps
xchg
mov
repnz
jl
(bad)
jmp
aad
fst
mov
call
shl
cmps
les
sub
adc
sub
and
or
ret
(bad)
mov
jge
fadd
ror
movs
xchg
popa
adc
fadd
pop
add
dec
pop
add
add
mov
not
adc
(bad)
(bad)
shl
mov
xchg
(bad)
sbb
xchg
mov
(bad)
in
das
push
dec
clc
cwde
xlat
pop
cmp
adc
daa
cdq
aas
sbb
out
scas
pushf
ss
pop
ins
pop
xlat
sub
repnz
ror
lds
addr16
push
xor
pop
add
xchg
or
fwait
mov
and
adc
mov
jecxz
mov
or
je
push
pop
mov
push
push
leave
(bad)
pop
sub
pop
mov
ret
xchg
outs
sbb
enter
dec
ins
stc
sbb
add
mov
lock
cmp
inc
push
test
mov
jecxz
push
mov
(bad)
adc
push
outs
pop
dec
fucomi
loop
hlt
idiv
sbb
xor
je
scas
lods
jbe
push
jb
cdq
mov
dec
scas
pop
mov
lock
sahf
test
in
mov
xchg
pop
or
mov
stc
test
das
sub
fisttp
lahf
jbe
inc
xor
fwait
aad
pop
mov
mov
inc
or
xor
dec
and
arpl
(bad)
fiadd
pop
test
outs
mov
popf
(bad)
scas
pushf
fidivr
push
jne
(bad)
sub
sahf
sub
cmp
mov
jp
push
lods
add
mov
or
das
pushf
push
psubd
jmp
pop
mov
shl
cdq
and
sub
sahf
jecxz
loopne
retf
dec
pop
jo
icebp
test
sub
dec
mul
dec
dec
sub
mov
lea
cvtps2pd
add
lea
cli
scas
retf
ror
jp
or
or
jns
xor
dec
jae
push
stos
push
out
mov
imul
stc
adc
xchg
outs
aas
outs
mov
cld
shl
test
pop
scas
pop
cmp
mov
sti
out
pop
pop
pop
jae
push
dec
inc
cwde
inc
cmp
data16
lods
pop
push
push
mov
dec
and
xchg
xchg
ins
les
daa
push
fnstenv
dec
fiadd
pop
mov
(bad)
xchg
jbe
test
in
lods
mov
mov
sub
je
add
popf
fldcw
nop
jbe
xchg
nop
mov
pop
jbe
or
scas
jo
jp
(bad)
or
sbb
jge
jp
cld
push
pop
xor
(bad)
and
rcr
push
xchg
jp
loop
mov
adc
popf
es
mov
scas
push
pop
iret
das
sar
ja
mov
ret
add
push
dec
push
data16
xchg
push
lods
shl
daa
mov
in
xor
jo
mov
scas
enter
adc
dec
sbb
inc
je
or
add
sti
xchg
xlat
rol
cmp
popf
xor
xchg
add
pushf
aam
jb
dec
pop
minps
pop
retf
add
push
sbb
mov
adc
sar
ret
mov
push
xor
mov
xchg
cli
out
adc
je
push
sbb
pusha
mov
sbb
add
in
sbb
fdiv
(bad)
cmps
test
stc
sub
xchg
and
push
inc
lods
or
xchg
mov
std
int
or
sbb
sub
mov
and
and
ss
push
inc
or
push
sar
and
aam
pop
jp
addr16
and
xor
imul
cli
js
cdq
push
pand
push
inc
or
in
loop
xor
jno
out
je
inc
scas
out
enter
ror
mov
(bad)
(bad)
ins
jg
(bad)
mov
retf
inc
cmps
test
cmp
adc
jnp
sahf
fdivr
in
mov
jmp
sub
push
ja
ds
std
jb
stos
sar
jbe
push
leave
mov
gs
lods
(bad)
mov
fist
push
push
pop
mov
cmp
dec
and
test
jmp
loop
pop
xchg
inc
add
iret
mov
inc
(bad)
jnp
mov
ret
clc
out
ficomp
add
(bad)
xchg
out
retf
sbb
aam
data16
aaa
in
sbb
jge
pop
jl
jmp
adc
cli
mov
cmp
js
aas
fwait
lods
loopne
jge
xchg
or
das
adc
dec
cmp
aas
cs
lock
call
idiv
pop
das
data16
mov
cdq
cmp
pop
and
jmp
fisub
mov
xor
push
jl
or
adc
add
movs
jo
fwait
adc
sub
push
and
pusha
xchg
jl
stos
frstpm(287
sub
sti
and
mov
push
dec
outs
loop
pop
xchg
scas
scas
xor
push
fnstenv
inc
xor
das
cwde
pop
imul
push
inc
add
xchg
sbb
loopne
les
out
stos
aad
repz
fcmovb
cdq
jbe
or
fsubr
dec
inc
test
cmp
cmps
push
test
stc
adc
fcomi
mov
and
add
(bad)
(bad)
(bad)
aaa
cwde
add
jmp
ss
cmp
mov
xchg
push
test
push
out
xchg
gs
cmp
inc
mov
loopne
test
js
ins
mov
mov
into
lods
push
fwait
ror
xchg
(bad)
pop
dec
xchg
push
and
mov
mov
cmp
push
xchg
push
push
mov
std
push
out
fistp
sti
xor
lods
cmp
and
mov
cs
cmps
jmp
call
sar
xor
mov
sub
jns
cmc
dec
ror
jg
jmp
pusha
xchg
stos
test
or
scas
jae
mov
pop
int3
pop
xor
xchg
mov
push
jg
or
mov
xor
jne
and
push
sub
sub
mov
fld
jb
daa
pop
jnp
hlt
or
cmp
out
adc
ins
cmc
int3
ret
imul
sbb
jmp
repnz
in
inc
aaa
aaa
aas
sub
jb
cli
mov
int3
push
in
sub
sbb
outs
pop
retf
inc
stos
push
ror
repnz
sbb
daa
pop
mov
pop
cmp
jb
enter
or
xchg
pop
shr
jae
or
or
lahf
jl
xor
xchg
sbb
arpl
mov
mov
ret
cmp
add
adc
hlt
fsub
test
xor
dec
xchg
std
adc
cmc
pop
jge
les
stc
or
mov
jns
dec
mov
outs
push
cwde
push
in
push
ins
mov
jns
stos
dec
cmps
pusha
add
mov
jge
fsub
adc
(bad)
pop
pushf
stos
push
rcr
stos
enter
aad
scas
dec
jle
xor
or
loopne
add
lea
addr16
add
movhps
pop
pop
call
sahf
inc
push
xchg
inc
or
add
outs
mov
mov
jbe
jl
add
adc
adc
mov
(bad)
int3
sbb
test
fs
adc
das
icebp
ins
cdq
inc
sub
es
pusha
hlt
jb
push
(bad)
rcl
pop
stos
mov
call
mov
xor
xor
aam
cmp
jle
hlt
inc
jno
add
mov
cmp
fwait
xchg
(bad)
inc
stos
sub
inc
mov
sub
in
pushf
iret
popa
pop
rcr
lds
fldcw
cmc
int3
or
test
push
sub
mov
inc
mov
sub
cmp
jb
retf
add
lahf
test
ficom
mov
jecxz
mov
pushf
ins
out
xchg
call
sbb
pop
and
mov
mul
out
lods
int
imul
adc
push
mov
out
bnd
xchg
je
inc
push
int
jae
xor
xor
pusha
or
into
dec
stos
jl
rcl
stos
ret
xchg
and
pop
pushf
xchg
xor
mov
std
adc
dec
sub
cmp
mov
adc
inc
jge
div
js
cli
iret
out
ds
cmc
jmp
sbb
ret
push
cs
out
mov
jmp
ins
sbb
shl
mov
ret
fisub
mov
cmp
cmp
mov
mov
mov
push
popf
gs
push
jmp
retf
fdivr
sub
enter
add
lahf
fnstenv
stos
cmp
sbb
or
adc
inc
mov
(bad)
mov
(bad)
cwde
jns
mov
js
(bad)
push
sub
cwde
sahf
adc
mov
arpl
jge
adc
sbb
pop
clc
std
push
dec
pusha
pop
aas
pusha
xchg
adc
add
cmp
push
pop
nop
or
shl
jg
sub
fcmovne
and
std
das
cmp
mov
sbb
jne
add
mov
imul
dec
lahf
shl
dec
push
mov
ds
inc
sbb
inc
mov
adc
outs
pop
jmp
loopne
pop
mov
fwait
scas
arpl
je
sti
push
adc
mul
stos
jo
ss
pop
out
lods
jnp
int3
push
dec
pop
xor
repnz
dec
pop
mov
sbb
jp
stc
sub
push
sbb
shl
and
push
jmp
cmps
popa
sbb
cmps
cld
enter
mov
inc
mov
and
sbb
ss
ss
dec
int3
test
dec
or
cmp
pop
push
lods
jg
xchg
xlat
sbb
or
add
js
dec
dec
rol
cmps
imul
or
cmp
jo
mov
push
inc
inc
adc
mov
imul
add
cld
inc
repz
mov
arpl
or
xchg
sub
cmps
jne
addr16
loope
xchg
inc
cmps
sub
int3
pop
les
ins
xor
int3
out
(bad)
movs
mov
mov
inc
xchg
scas
repz
jle
add
fld
bound
add
out
jmp
dec
cmps
das
jo
adc
sti
icebp
test
mov
mov
rol
jnp
call
je
dec
out
loopne
pop
pop
stos
sub
popf
outs
cmp
stc
pop
or
dec
pop
sub
(bad)
fiadd
adc
ror
retf
ja
jmp
iret
iret
aam
fst
push
js
adc
push
and
cwde
test
xchg
and
adc
(bad)
mov
and
popf
add
inc
mov
or
in
fnstenv
push
pop
jae
sub
or
clc
pop
inc
cmp
push
pusha
push
iretw
sti
lods
dec
retf
xchg
stos
cmp
mov
and
aad
loopne
dec
xor
adc
es
lea
inc
fimul
adc
aam
shl
adc
xor
aam
jae
add
cmc
mov
jle
mov
inc
sbb
push
sbb
ror
das
pop
push
pop
sbb
adc
and
hlt
cmp
imul
pusha
fwait
leave
std
lock
stc
test
test
stc
xchg
iret
xor
cli
mov
push
rol
fnstcw
xchg
pushf
fucomip
push
push
frstor
iret
mov
xlat
jp
call
or
and
dec
cwde
mov
jle
xlat
sti
call
pusha
aas
shl
fisubr
repnz
fidivr
cmp
add
ficom
push
adc
xchg
xchg
push
fstp
stos
ficomp
sub
mov
and
out
or
mov
shr
stos
sbb
popf
in
cld
fistp
call
clc
lods
jo
jo
jae
xchg
add
inc
xor
retf
pop
cld
cmp
pushf
test
(bad)
jbe
std
xor
xor
cmps
mov
test
cs
or
cli
jl
mov
bound
rcr
out
jle
std
jns
ror
pop
add
push
arpl
call
stc
mul
mov
adc
fs
mov
fs
jbe
cmp
iret
jno
mov
xor
mov
jp
ins
test
mov
mov
pop
inc
and
jg
clc
mov
arpl
in
popf
xchg
(bad)
out
std
push
repz
aas
movs
pop
repnz
hlt
retf
sub
imul
mov
mov
and
nop
cmp
test
clc
add
lds
lods
sub
adc
and
jecxz
out
outs
push
cld
icebp
stos
pop
pop
fs
dec
dec
hlt
cmp
and
mov
loop
cmps
and
xor
jmp
movs
pop
add
fcmovu
xchg
jno
mov
push
test
loopne
jl
mov
dec
xlat
cli
or
stc
je
and
lds
fidiv
cmp
add
dec
ins
push
(bad)
mov
test
xchg
inc
push
mov
xchg
sbb
push
xchg
mov
cmp
stc
ins
sbb
sub
sti
mov
loopne
call
jg
rcr
dec
xchg
pop
adc
imul
fwait
ret
sub
ins
mov
aaa
sbb
sub
outs
cmp
imul
xor
pop
in
and
fwait
jno
and
mov
xor
mov
cmp
jns
push
sbb
aas
lock
lahf
enter
xchg
push
scas
hlt
(bad)
ja
sbb
bound
(bad)
or
repnz
out
add
cmps
hlt
pop
mov
add
int
fwait
cdq
jnp
pushf
aad
inc
cld
mov
push
mov
mov
jle
adc
fnstsw
cmp
in
jmp
cmp
inc
xchg
and
xor
arpl
mov
and
fnstenv
xchg
cmp
inc
pop
stos
mov
push
adc
jmp
in
add
and
adc
ret
fs
mov
cmps
sar
mov
xchg
xor
rcl
add
(bad)
xchg
mov
or
mov
dec
xor
bound
cmp
fld
ins
adc
mov
pusha
mov
mov
ins
aaa
ja
aas
fdivr
cmc
in
inc
mov
repz
lock
into
(bad)
pop
sahf
retf
sub
sbb
jae
add
imul
call
dec
shl
sub
add
ds
mov
mov
fcmovbe
cdq
and
inc
xchg
loope
and
xchg
pop
es
mov
sbb
movs
inc
(bad)
cmc
lock
xor
popf
xor
push
ss
nop
pop
xchg
lock
jp
add
push
in
mov
sbb
jle
aas
mov
sub
inc
xor
mov
xchg
xor
int3
xor
xor
dec
inc
out
scas
ret
std
in
add
addr16
or
jne
and
mov
dec
ds
push
jmp
aas
mov
ret
cmp
mov
or
nop
pop
jle
test
leave
dec
jb
cwde
xchg
loop
cmp
daa
mov
arpl
mov
adc
or
adc
inc
stc
js
stos
fsubr
adc
jno
scas
xchg
ror
into
mov
(bad)
xchg
jo
movs
pop
mov
movs
aaa
mov
xor
dec
ss
je
(bad)
lods
sub
push
sub
push
leave
ss
(bad)
inc
imul
push
shr
or
pop
xchg
mov
daa
movs
jge
cmp
adc
jle
test
stos
jge
jmp
fs
cmp
mov
mov
sub
xor
sub
call
dec
sub
fs
sti
(bad)
sub
xor
ins
jne
xor
mov
mov
sub
movs
push
inc
mov
arpl
ins
push
(bad)
sub
int3
adc
push
ror
(bad)
xchg
xchg
repnz
(bad)
pop
pushf
cmc
in
mov
adc
out
sbb
fs
push
iret
lods
adc
outs
test
mov
mov
ss
repz
mov
test
adc
cmp
push
xor
push
cmp
sbb
int
(bad)
and
bound
xchg
mov
int
rol
ins
dec
dec
inc
mov
add
jno
stos
icebp
test
scas
push
mov
cmps
stos
bound
(bad)
(bad)
loopne
xchg
movs
fwait
stos
aam
test
dec
ret
sub
call
(bad)
std
lea
inc
xchg
loop
mov
cld
mov
pop
lea
lds
shr
gs
bound
xchg
pop
in
ds
jg
push
out
fistp
outs
mov
mov
repz
fisub
rcl
inc
mov
jge
xchg
pop
jge
js
mov
cld
mov
or
std
mov
mov
dec
cwde
sbb
(bad)
daa
stos
jns
jge
arpl
fsubrp
lahf
mov
xor
sub
pop
sbb
or
lahf
es
test
xchg
jl
retf
mov
test
lods
scas
mov
mov
mov
sbb
dec
and
xchg
and
scas
jo
and
xor
mov
add
test
dec
in
movs
add
mov
rcr
in
dec
sub
retf
aad
cld
xchg
xchg
pop
fcomp
xchg
cmp
shr
sub
fmul
mov
leave
push
sub
inc
aaa
push
popf
addr16
xchg
xchg
in
imul
jae
stos
cld
xor
mov
cmp
xchg
outs
mov
in
mov
stos
mul
js
push
out
outs
or
inc
shl
inc
hlt
cwde
dec
test
outs
lock
mov
pop
je
jmp
adc
jmp
mov
call
mov
es
cmps
mov
out
jg
jno
leave
(bad)
jne
xor
push
call
jae
fisub
pop
adc
imul
xchg
push
gs
repz
pop
ja
mov
mov
cmp
addr16
arpl
inc
mov
in
xor
mov
lahf
(bad)
push
cmp
nop
aas
ja
ins
icebp
xlat
cmp
inc
sbb
fadd
test
xchg
add
mov
pusha
add
test
int3
mov
sub
lods
mov
add
mov
(bad)
test
ja
cmps
leave
fwait
bound
push
int3
add
(bad)
ds
out
xchg
test
enter
call
movs
cmps
stc
ret
mov
int3
jmp
and
fimul
jae
inc
mov
sub
popa
cmp
adc
xchg
std
xor
sbb
je
inc
cld
mov
push
(bad)
adc
mov
aas
aaa
stos
test
in
xcrypt-cfb
cmps
daa
loop
mov
pop
fsubr
inc
pop
data16
pusha
ja
jno
xchg
push
jg
cli
dec
idiv
xchg
add
adc
mov
ins
pop
dec
pop
mov
retf
mov
xor
test
lods
aad
mov
pop
outs
cmp
imul
loop
or
dec
cmp
jns
add
inc
push
mov
stos
mov
xor
dec
aas
out
cmc
cmp
fs
scas
imul
imul
pop
add
int3
or
mov
div
call
jbe
xchg
cmp
adc
pop
gs
pop
dec
retf
push
mov
sub
and
lahf
aam
(bad)
mov
xchg
pop
cmp
jmp
xlat
into
dec
imul
cmp
inc
out
xor
sub
xchg
push
mov
inc
shl
addr16
test
push
ja
sahf
shr
in
cmps
fistp
sbb
mov
xchg
mov
(bad)
push
inc
retf
pop
dec
test
jns
ins
iret
test
leave
pop
push
nop
xchg
fsub
and
or
xor
sub
out
jae
xor
inc
inc
retf
fdiv
jp
jae
pusha
jmp
xor
or
mov
cmc
push
push
call
cmc
mov
outs
or
push
test
(bad)
fldenv
out
cs
push
sub
aam
pushf
jg
add
inc
loope
mov
and
sahf
sbb
mov
sahf
mov
cli
fadd
(bad)
push
mov
fmul
das
xor
mov
pop
xchg
add
scas
push
xor
xor
jb
jecxz
es
or
test
test
fnstenv
jo
out
or
jae
pop
cmp
sar
mov
fwait
inc
mov
lea
pop
(bad)
push
bound
jecxz
adc
dec
xchg
pop
and
xchg
push
xchg
mov
fisub
inc
push
dec
push
fwait
dec
jecxz
sbb
cmp
fidivr
in
xchg
cmps
call
or
ins
push
call
dec
adc
mov
enter
adc
cdq
push
cmovge
mov
arpl
mov
push
ret
sub
sbb
dec
hlt
cmps
lea
scas
cmps
cmp
mov
in
sub
push
repnz
and
or
cdq
cmc
js
fwait
push
out
sub
fimul
xchg
push
jno
adc
xor
add
or
mov
repz
ins
ror
ret
ins
out
sahf
push
add
ins
shr
dec
cmp
xchg
mov
fdivr
pop
adc
sbb
and
or
int3
and
xor
sbb
lea
mov
std
sbb
or
dec
inc
xlat
imul
inc
fldcw
cwde
fwait
add
ja
shl
mov
xchg
std
and
inc
inc
mov
mov
sahf
stc
push
pop
add
cli
push
mov
shr
fcomip
arpl
rcl
cdq
xchg
inc
pop
call
aad
dec
push
sahf
xor
gs
pop
test
cli
leave
xchg
fnsave
jne
cmp
jg
icebp
sub
add
fisubr
iret
iret
out
jae
not
iret
inc
sbb
or
inc
jo
pop
sar
cmp
int3
in
leave
jecxz
pop
div
add
inc
sub
sub
cmp
je
push
test
mov
push
add
ins
add
mov
jmp
cmp
(bad)
stos
mov
mov
jmp
and
icebp
dec
out
jl
add
stc
mov
mov
fwait
ins
push
add
retf
and
enter
imul
int
fldcw
out
adc
ds
int
adc
leave
test
add
push
clc
nop
push
sar
fwait
mov
mov
loop
xor
and
cwde
inc
inc
call
mov
push
pop
fcomp
scas
jno
(bad)
pop
push
cmp
sub
inc
sti
std
int3
ja
push
imul
out
xchg
jo
fimul
sub
push
sub
push
rol
push
sub
out
mov
dec
xchg
sub
adc
push
xchg
jns
cwde
imul
adc
xor
cli
push
push
popa
or
inc
jp
push
sbb
xchg
outs
add
dec
je
outs
xchg
jle
movs
push
fcomp
cmp
js
adc
push
sub
fisubr
adc
pop
fcom
jae
xlat
and
lahf
or
out
idiv
or
shl
movs
dec
shl
(bad)
stos
or
aaa
pusha
sub
dec
inc
repz
sbb
push
or
scas
jns
mov
sub
std
fild
shl
jge
popa
or
mov
addr16
sbb
pop
(bad)
lods
adc
sbb
pop
pop
and
and
sub
adc
mov
add
xor
jmp
popa
mov
xor
stos
(bad)
jnp
mov
xor
cmps
cli
add
xor
(bad)
test
leave
jmp
stos
xchg
shr
jle
cmc
sub
mov
push
sbb
jno
ds
cmps
push
xchg
in
inc
mov
loop
push
xor
mov
or
mov
sub
sub
test
and
cmp
out
inc
xchg
ins
lods
jle
adc
mov
sar
dec
and
mov
pop
lea
cld
jmp
jne
jb
popf
or
arpl
outs
mov
sbb
shl
leave
in
and
cli
sub
(bad)
fnstsw
lahf
repz
inc
cdq
repz
lea
mov
popf
and
push
sbb
in
out
(bad)
test
imul
jbe
dec
cmp
cmp
in
imul
mov
icebp
fxch
call
adc
cli
sub
into
mov
and
xchg
cmc
sbb
cwde
xor
shl
mov
xor
arpl
xchg
push
cmp
mov
rcl
jb
imul
ja
mov
and
aaa
ret
xor
and
das
sbb
popf
jle
mov
addr16
pop
add
mov
sub
aad
jnp
sub
push
test
xor
dec
xchg
test
cs
(bad)
loopne
sbb
xor
xchg
fst
dec
movs
and
adc
mov
pop
(bad)
cld
popf
add
in
push
popf
lods
mov
sbb
xchg
push
cdq
cmp
push
cmps
stos
pop
jg
mov
sahf
sbb
shl
hlt
stos
mov
enter
test
mov
scas
ins
pop
pop
cwde
rol
xchg
(bad)
or
std
mov
jbe
xchg
or
es
ss
pop
sub
mov
sub
jo
loop
xchg
xchg
mov
shr
std
ret
imul
data16
and
and
dec
or
cmp
and
mov
enter
jmp
imul
push
into
mov
cdq
sbb
imul
retf
cmp
xchg
lods
jmp
inc
bound
vmovups
dec
sub
mov
int
retf
aas
arpl
and
xchg
pushf
and
sub
xchg
les
xchg
stos
retf
jne
inc
cmp
push
add
cdq
pop
call
test
mov
movs
popf
ficomp
jmp
xor
dec
pop
lahf
dec
jmp
add
mov
sar
sub
call
push
jp
sbb
std
and
repz
imul
sbb
push
push
aad
jl
and
xchg
arpl
je
daa
lds
cli
popa
aas
adc
mov
out
(bad)
ret
push
out
lea
xchg
push
push
js
adc
call
cmps
adc
sbb
lods
je
fisttp
mov
xor
loop
sbb
jmp
call
ins
mov
mov
add
xchg
xor
outs
ffreep
lock
and
ret
pop
or
rol
imul
mov
jae
dec
push
fsub
add
push
inc
(bad)
call
cmp
add
pop
cmp
dec
mov
mov
int
push
shl
mov
xor
dec
scas
jmp
inc
mov
(bad)
clc
pop
xor
sbb
cli
mov
mov
cmp
dec
push
std
sbb
unpckhps
daa
or
jb
rcl
lea
outs
in
loopne
and
dec
mov
add
pop
adc
imul
cmp
jo
adc
add
test
pop
mov
cmps
pmovmskb
ins
(bad)
push
(bad)
jl
dec
invd
scas
jns
xchg
cmp
dec
cmc
jecxz
clc
push
idiv
dec
adc
push
scas
push
xchg
mov
cs
cli
cmps
inc
jmp
sbb
push
cmp
(bad)
fwait
push
dec
inc
xor
xchg
mov
xchg
mov
mov
mov
dec
cmp
cmp
retf
mov
jg
(bad)
mov
in
add
dec
lds
fisubr
rcl
lahf
pop
inc
or
lds
push
scas
adc
test
mov
jmp
gs
mov
sbb
inc
pop
loopne
xchg
jbe
jl
iret
rol
mov
(bad)
mov
push
adc
out
mov
jmp
repnz
mov
xor
jle
jl
into
loope
aad
(bad)
cmp
out
xor
dec
ja
cmp
mov
fwait
inc
jmp
dec
pop
inc
ss
mov
sbb
lock
je
out
sub
jb
mov
lods
jmp
std
je
jmp
jecxz
dec
mov
leave
push
cmp
ins
sahf
push
inc
or
ja
aad
fisubr
test
mov
mov
cwde
(bad)
leave
js
sub
mov
sub
loop
in
sahf
test
lea
pop
mov
add
retf
push
ficomp
ins
outs
imul
shl
jle
dec
bnd
fisttp
jle
test
mov
mov
(bad)
nop
in
enter
(bad)
and
or
push
mov
add
cmp
xchg
and
aas
pop
sbb
das
stos
sub
outs
shld
add
inc
fisub
xlat
loopne
gs
pop
mov
(bad)
jb
or
ins
test
cmp
inc
stos
sub
pop
mov
shr
daa
mov
or
and
adc
xchg
and
sar
inc
mov
sub
dec
xchg
in
sbb
inc
scas
dec
pop
in
inc
aam
mov
cwde
mov
outs
popa
push
pushf
push
xchg
pop
inc
out
imul
push
rol
xchg
push
test
jns
xor
sub
push
call
or
jno
push
mov
movs
out
xchg
inc
(bad)
mov
stos
jb
xchg
shr
jg
mov
push
adc
mov
dec
enter
cmp
sbb
pop
xchg
mov
add
jne
add
and
cmps
xacquire
xchg
pop
jmp
out
pop
xchg
loopne
pushf
lea
scas
cmp
retf
cmp
xor
push
add
into
arpl
pop
jns
sti
bound
fwait
mov
into
pop
cwde
mov
pcmpeqd
push
test
nop
shl
push
fwait
mov
int
mov
std
push
mov
pusha
add
adc
sub
sub
mov
or
push
mov
pop
gs
mov
xor
mov
sub
sbb
outs
sbb
test
call
add
jmp
push
push
sbb
loop
test
cld
adc
(bad)
outs
out
adc
mov
arpl
int3
sbb
dec
pushaw
gs
stos
enterw
push
add
dec
ret
movs
cmp
clc
es
dec
arpl
adc
cmp
xor
jo
jbe
pop
jb
add
mov
jmp
ret
sub
arpl
mov
or
add
ret
fisttp
out
ficom
popf
push
fistp
std
sub
fcom
jmp
xchg
mov
loop
(bad)
rcr
jle
jmp
int
daa
add
mov
into
sub
mov
dec
repz
in
push
fistp
dec
sub
and
vmulsd
adc
sahf
xor
jae
jae
sbb
retf
sbb
retf
sahf
call
imul
clc
test
adc
xchg
ret
push
push
loopne
jle
shl
adc
fidivr
adc
fild
xchg
sub
pop
nop
repnz
repz
pop
into
mov
dec
mov
lea
add
sbb
call
cld
jb
inc
or
dec
lea
cld
je
xor
outs
(bad)
xchg
mov
adc
fidiv
fwait
push
sbb
clc
in
call
mov
jnp
out
and
outs
ds
dec
and
adc
adc
mov
fwait
cmps
xchg
jno
lea
(bad)
inc
sbb
loope
stos
jmp
xchg
clc
add
ja
mov
movs
(bad)
sub
shr
pop
dec
ja
imul
push
jmp
fs
jge
loope
lods
jae
push
xlat
jg
jns
test
or
sbb
mov
stc
mov
scas
scas
ret
sbb
dec
in
cmp
test
mov
ror
push
rcl
(bad)
icebp
rcr
sub
adc
cmp
add
dec
cmc
bound
sub
mov
inc
mov
inc
mov
rol
sahf
dec
sub
ror
and
in
adc
clc
or
and
inc
fst
inc
and
jmp
jbe
xchg
rol
(bad)
jmp
(bad)
mov
int
mov
xlat
leave
sub
cwde
call
push
adc
and
and
push
mov
xchg
inc
mov
clc
adc
adc
pop
xor
mov
enter
or
push
in
add
sub
jnp
push
lahf
(bad)
jmp
cmp
add
leave
inc
sbb
popf
fbld
dec
xchg
inc
lahf
rcr
jle
ret
out
inc
test
push
push
(bad)
and
dec
mov
cmp
mov
lea
stos
mov
mov
outs
or
rol
mov
movs
inc
sbb
sbb
imul
lea
jp
sbb
mov
or
iret
sbb
push
popf
sub
push
dec
dec
pop
mov
call
outs
sub
and
xchg
mov
mov
leave
stos
jl
push
out
adc
mov
out
sahf
sbb
mov
stc
daa
outs
aas
xor
aam
xor
pop
fild
xlat
mov
jnp
fdiv
sbb
xor
clc
add
mov
addr16
push
mov
sar
pop
fisttp
je
cmp
pop
daa
jno
std
dec
xlat
dec
xchg
clc
dec
dec
gs
xchg
mov
mov
push
sti
push
cmp
(bad)
cdq
pushf
repnz
cmp
xor
sti
shl
in
jg
adc
mov
xchg
ins
jnp
jb
adc
cmp
stos
push
pop
fdiv
mov
mov
sub
div
js
out
xor
inc
hlt
pop
lods
mov
inc
inc
add
in
inc
clc
dec
xchg
mov
push
jns
mov
add
adc
outs
cwde
pop
lds
(bad)
out
pop
in
pop
xor
rcr
repz
fld
adc
add
js
arpl
(bad)
out
adc
loop
mov
adc
shl
xchg
sub
xchg
or
pop
in
fadd
rcr
repz
xchg
pop
adc
std
repnz
sbb
mov
mov
mov
cmps
int3
and
jbe
ds
aaa
xchg
pop
sub
and
pop
ret
dec
jne
cmps
add
jge
push
es
outs
push
inc
xchg
lds
clc
sahf
jns
sti
hlt
dec
add
mov
push
mov
rol
jne
sti
xor
add
inc
jmp
mov
jg
retf
(bad)
sahf
(bad)
jo
mov
mov
shr
cmc
gs
out
ret
dec
or
in
dec
xchg
sti
dec
repnz
add
add
aaa
add
shr
sub
mov
mov
jae
mov
pop
inc
jl
fbstp
call
pop
sub
popf
dec
sub
and
pop
les
add
inc
mov
das
mov
int
rol
imul
rol
xchg
inc
dec
std
xor
iret
test
inc
(bad)
adc
and
cld
or
xor
ss
std
cmc
mov
push
jns
in
mov
sbb
rcl
mov
pushf
or
inc
lods
nop
and
loop
mov
(bad)
mov
hlt
push
sub
xor
pop
mov
pop
test
sub
push
and
not
xchg
jg
popa
jmp
aad
lods
shl
out
fs
clc
das
cwde
inc
test
and
sbb
mov
or
mov
sar
in
sbb
out
xor
std
loope
shr
lock
aas
mov
enter
(bad)
mov
add
loope
lock
push
xchg
fcom
ds
cmc
cli
(bad)
loope
rcr
xor
jg
mov
add
das
(bad)
arpl
js
xchg
mov
jbe
ins
cmp
jne
ss
and
clc
test
sbb
mov
and
fsubr
aad
jne
cld
add
and
rcr
icebp
jbe
out
hlt
imul
dec
mov
push
mov
aaa
fild
ret
mov
jle
pusha
pop
cmp
fmul
cmp
jl
call
cdq
jmp
outs
loop
cmp
test
int3
push
ins
xchg
inc
sbb
aad
aas
jns
and
(bad)
leave
in
lods
cmp
inc
int3
dec
fild
nop
add
inc
fcom
shl
cmp
mov
sbb
pop
stos
stos
dec
pushf
cmp
jmp
pop
push
add
mov
dec
sbb
pop
cli
add
pop
std
ds
mov
adc
xor
outs
xor
repz
mov
jne
mov
xchg
sbb
and
aad
lahf
mov
bound
and
dec
xchg
ret
mov
into
shl
jbe
mov
adc
adc
ja
push
xchg
jmp
add
pusha
sub
cmp
mov
add
jg
mov
aam
ds
gs
retf
and
inc
and
out
leave
dec
lea
mov
ror
in
jmp
jp
or
sbb
cdq
aas
dec
(bad)
in
pop
sub
mov
and
pop
cmp
adc
(bad)
in
xor
inc
fidivr
dec
test
lahf
xor
(bad)
mov
or
pop
ss
jne
outs
pop
popf
xchg
das
xor
xor
and
add
fcomp
and
sbb
scas
call
out
cmp
data16
int3
sti
mov
jns
test
ins
xor
cli
std
adc
mov
sahf
sub
pop
cmp
lods
(bad)
cmp
ins
addr16
shr
cld
cmps
in
jmp
stos
inc
add
push
cmp
cdq
and
xchg
in
jne
out
jmp
xor
test
rcr
ret
push
popf
xlat
jg
cs
dec
jne
mov
movs
ins
test
nop
mov
inc
inc
(bad)
in
add
push
mov
repnz
cli
(bad)
or
imul
(bad)
pop
lock
inc
cmps
out
cmc
inc
mov
retf
inc
mov
push
aaa
xlat
iret
cmc
test
inc
jo
jg
(bad)
std
fcmovbe
rcl
imul
in
scas
xchg
adc
xor
dec
push
mov
sub
inc
sbb
sbb
mov
enter
les
push
mov
jne
sub
cmp
xor
xor
mov
mov
setno
cli
xor
adc
lods
and
imul
stos
data16
cld
test
(bad)
f2xm1
scas
xchg
xor
aam
add
dec
push
ins
pop
mov
ja
int
add
mov
fs
xchg
mov
xor
xchg
push
pushf
xchg
(bad)
and
pop
cmc
jb
leave
dec
sub
mov
hlt
mov
shl
ins
add
in
mov
and
adc
fchs
test
cdq
shl
push
sub
pop
or
dec
in
and
xor
xchg
fst
retf
lea
inc
xor
mov
daa
xor
repnz
bound
outs
cmp
sbb
es
pop
cwde
xor
vunpcklps
adc
mov
push
sub
in
lock
xchg
push
dec
icebp
and
nop
xchg
fstp
cs
icebp
icebp
mov
retf
arpl
cwde
mov
in
lods
or
cmp
add
dec
test
xchg
imul
adc
test
fld
sub
div
dec
xor
pop
xchg
mov
pushf
or
ins
dec
sbb
sar
or
sub
outs
pop
push
imul
pop
or
sbb
(bad)
(bad)
inc
xchg
loope
xor
hlt
fsubp
ja
shr
ins
cwde
mov
mov
lods
jle
gs
rcl
add
sar
out
aas
loope
xor
cmp
xor
dec
pop
sbb
cmp
dec
test
cli
mov
xchg
add
push
push
in
and
pop
adc
sbb
push
mov
xchg
jmp
push
hlt
jnp
(bad)
mov
mov
jmp
jecxz
mov
(bad)
retf
cmc
cmp
mov
ins
call
and
sar
jbe
fbstp
jg
and
lods
add
pushf
and
leave
adc
leave
pop
gs
scas
enter
popf
push
adc
or
sbb
add
imul
xor
scas
mov
jmp
loope
mov
xor
adc
or
bnd
pop
outs
push
xchg
push
(bad)
hlt
clc
(bad)
mov
std
inc
push
cmp
xchg
leave
pop
cdq
xor
pushf
jmp
popf
xchg
out
pop
xchg
aas
ja
push
int
retf
sbb
sbb
jmp
clc
movs
mov
add
aad
ret
push
jno
pop
mov
ds
ret
push
and
mov
stos
and
aaa
adc
push
fwait
pop
pop
cld
sbb
mov
je
and
sbb
jl
cli
mov
jmp
pushf
cs
movs
icebp
lds
xchg
cdq
xchg
pop
fcomp
dec
mov
mov
daa
ins
mov
fld
mov
lods
lahf
mov
mov
movs
push
sub
addr16
fistp
sbb
aad
mov
stos
push
popa
and
pusha
in
aad
stos
push
sub
mov
daa
jae
add
adc
xchg
push
xor
sbb
adc
inc
pop
xor
or
ins
mov
movs
mov
movs
enter
mov
push
arpl
fadd
(bad)
and
or
aas
cmc
in
sbb
outs
cs
les
xor
mov
inc
inc
pop
loopne
jae
cmp
enter
ins
outs
(bad)
jle
dec
mov
out
rcl
pop
es
dec
cmc
fnstsw
loope
call
es
test
pusha
mov
dec
(bad)
ins
fsubr
in
adc
daa
inc
mov
in
ins
(bad)
adc
xor
imul
movs
cmp
add
jns
(bad)
cmp
xchg
out
cmp
pop
loope
mov
loope
out
inc
xor
iret
mov
xchg
sbb
adc
xor
outs
mov
enter
pusha
and
mov
imul
pop
pop
add
loope
test
cli
dec
sbb
mov
push
nop
movs
das
xor
mov
xchg
dec
mov
cmps
sub
sar
imul
sahf
add
jae
leave
sub
jo
scas
mov
inc
scas
enter
ja
in
dec
retf
rcr
pop
mov
repz
xor
mov
push
mov
cwde
cmp
mov
stos
lock
aaa
sub
or
pusha
out
mov
repnz
dec
cdq
dec
mov
outs
xchg
jnp
xor
xor
or
shl
outs
cmp
jmp
mov
pushf
pop
sub
aaa
lods
pop
cmps
retf
(bad)
scas
and
stos
sub
sub
or
pop
adc
mov
jecxz
lods
add
fwait
mov
ins
out
mov
rcl
outs
add
pop
cwde
(bad)
lds
inc
mov
loopne
lds
jo
(bad)
lahf
in
push
outs
pop
ins
fnstenv
inc
jmp
test
rcr
movs
and
cmps
jo
sub
dec
sti
das
push
neg
call
dec
inc
aas
cmp
dec
xchg
(bad)
mov
aam
adc
xchg
in
pop
outs
pop
int3
shl
imul
aas
dec
xchg
dec
outs
push
push
xor
pop
adc
add
mov
ins
std
(bad)
nop
jge
or
cmps
js
sar
cmp
sbb
loop
retf
sar
je
movs
cmp
mov
push
sbb
cmp
push
in
sub
and
pop
aaa
scas
fcomp
mov
std
pop
or
sar
iret
dec
les
sbb
jg
lea
dec
cmp
add
sahf
mov
scas
xor
fdivr
xor
aam
fisub
or
sbb
or
push
jns
dec
mov
and
test
xchg
xor
inc
cmp
and
fcomi
lods
sbb
aam
sbb
fisttp
sbb
aam
mov
mov
(bad)
push
stos
cdq
test
scas
shr
repz
fstp
xchg
(bad)
pop
pop
dec
jno
mov
sbb
jb
movs
xchg
jno
mov
test
stos
xor
nop
cmps
push
push
pop
cmc
jns
jae
loopne
pop
bswap
sbb
jne
cwde
hlt
ret
fsubr
jb
rol
sub
sti
mov
and
mov
xchg
and
icebp
repz
js
jp
sti
pop
ret
in
pop
mov
loope
into
jns
(bad)
add
out
movs
adc
mov
inc
push
out
sub
gs
jo
scas
xor
and
and
cmp
gs
cmps
cwde
sbb
fld
or
cmp
sub
loopne
sar
test
pop
fsub
jnp
into
(bad)
stos
test
jge
sub
push
add
aad
test
repnz
sub
call
sbb
push
cmps
pusha
inc
mov
fs
add
add
popf
inc
imul
aaa
lahf
mov
xor
adc
push
and
mov
xchg
loopne
cmp
fdiv
sbb
push
ret
scas
call
fwait
sub
in
jge
xchg
xor
xchg
pusha
sbb
out
loop
movs
jno
int3
mov
cmp
sbb
dec
cwde
sbb
aas
in
add
jae
pop
lods
dec
stos
or
nop
jne
int
and
neg
adc
push
repnz
jmp
sub
iret
(bad)
shl
sbb
sbb
push
cmps
push
pop
adc
push
and
add
div
sub
and
in
inc
ss
dec
lahf
icebp
inc
cmp
nop
ins
inc
jne
(bad)
rol
sbb
cmps
imul
leave
iret
cmp
adc
sub
stos
sbb
not
stc
jp
fs
in
leave
jno
pusha
xchg
imul
adc
and
scas
ja
pop
lods
mov
xor
sub
pusha
ins
enter
or
xchg
fsubrp
mov
icebp
stos
fnstcw
aas
dec
or
stos
sbb
movs
and
(bad)
and
xchg
movs
ret
inc
sbb
inc
mov
add
push
dec
scas
jno
repz
mov
repz
sahf
repnz
imul
inc
out
inc
and
fcomp
mov
xor
fwait
dec
into
jno
in
stos
cmp
push
pusha
mov
lds
xor
fistp
xchg
or
pop
and
mov
mov
mov
pop
hlt
jns
enter
std
jmp
cmp
dec
das
fsub
aad
push
std
enter
jno
das
movs
push
and
gs
and
dec
sub
(bad)
lods
clc
jp
push
inc
inc
fs
stc
adc
popa
pop
jp
or
pop
pop
out
ins
mov
in
dec
int
xlat
inc
inc
mov
mov
push
sbb
fidivr
gs
shl
dec
movs
or
pop
mov
and
inc
outs
add
iret
jns
and
jbe
push
pop
mov
cmps
jo
enter
jbe
push
jp
push
mov
jbe
int
jg
pop
movs
lods
arpl
jecxz
mov
loope
(bad)
mov
cmp
mov
call
mov
cdq
xchg
and
fs
xlat
sahf
sti
sbb
dec
push
cmps
imul
ss
push
in
scas
leave
cmp
mov
adc
dec
xor
adc
and
sahf
cmps
(bad)
fisttp
fistp
out
ficomp
arpl
dec
inc
jl
retf
push
js
sahf
rcr
nop
or
ret
adc
mov
pop
sbb
fucomip
pop
xchg
fidiv
scas
inc
add
(bad)
dec
fimul
xor
out
xchg
mov
mov
push
iret
jecxz
sbb
pop
mov
sbb
call
or
mov
pop
push
mov
ss
sbb
repz
xlat
test
and
or
aas
cs
cmp
aas
cli
aaa
jo
cmp
mov
xlat
xor
lea
sbb
aas
call
inc
gs
mov
inc
xor
in
jl
mov
adc
and
ss
scas
popf
push
dec
cmp
pop
ret
not
(bad)
ins
push
or
lahf
push
out
dec
out
lock
push
out
scas
inc
push
xchg
call
mov
jmp
(bad)
sbb
pusha
cmp
adc
adc
mov
push
mov
ss
pop
fisttp
jnp
pop
cwde
imul
and
add
in
lds
mov
add
sub
cs
xor
push
pop
jbe
loope
or
out
cmp
ret
sbb
fild
fiadd
cmp
out
dec
jle
popa
xor
xchg
mov
je
std
cmp
push
fist
jge
and
xchg
mov
data16
stc
loope
add
bound
mov
xor
pop
inc
add
mov
sub
and
cs
pop
sub
push
pop
(bad)
imul
inc
inc
xchg
sbb
cmp
pop
push
sahf
or
and
fidivr
stc
and
cmp
dec
ja
in
xchg
cdq
shl
sbb
mov
xlat
add
cs
pop
mov
lods
adc
icebp
sub
xchg
ss
fwait
pusha
ds
imul
call
(bad)
cmp
adc
test
lds
dec
imul
int
mov
scas
jecxz
or
jbe
jl
push
jge
dec
dec
jnp
jne
sbb
cdq
div
jno
sub
or
fcmovbe
in
out
sti
and
mov
xor
adc
cmp
int3
or
lock
jns
inc
inc
or
fistp
mov
cwde
pop
ds
sub
pusha
push
jo
fsubrp
fsub
mov
xchg
stos
mov
xchg
adc
sub
push
retf
ja
mov
push
cmc
fnstsw
(bad)
add
into
scas
sbb
lahf
lods
out
pop
cmp
sbb
xchg
sbb
xor
adc
xchg
sti
movs
enter
ret
(bad)
shr
nop
sbb
call
or
xchg
pop
pushf
shl
inc
pop
and
call
mov
sub
aas
retf
jb
jle
mov
cmp
adc
fcmovnu
jbe
sub
and
ins
fdiv
fidiv
jo
push
repz
shl
adc
test
lds
movs
aaa
retf
lahf
sahf
cmp
dec
(bad)
pop
sub
or
retf
or
xor
dec
js
retf
enter
cmp
or
mov
xlat
enter
vunpcklps
mov
adc
(bad)
cli
lds
and
call
jmp
jnp
mov
pusha
mov
pop
cwde
inc
sub
pop
inc
xlat
mov
sbb
(bad)
imul
sbb
mov
mov
mov
xchg
cmp
loop
js
in
sub
movs
push
mov
mov
sub
loop
cmp
cmp
jne
scas
mov
psrld
inc
mov
cwde
cmps
jp
cmc
jb
inc
out
xor
movs
sub
sub
sbb
push
pop
imul
jmp
stos
xchg
out
inc
add
cmp
mov
sbb
adc
shl
pop
mov
mov
fcomp
cld
loopne
dec
push
stos
shr
xchg
xchg
mov
cld
in
mov
inc
jl
clc
dec
cmp
mov
ror
not
dec
outs
cmp
push
leave
push
push
mov
jg
aas
int3
cmp
dec
pop
adc
scas
cmp
mov
add
inc
lea
sbb
mov
idiv
inc
rcl
shr
push
stos
fiadd
sar
push
cmp
(bad)
ror
maxps
int3
xor
cli
scas
adc
xchg
fisubr
cmp
jns
repz
fistp
test
pop
mov
(bad)
jbe
jp
jl
mov
xchg
cmp
hlt
int
lods
fdivr
push
adc
and
dec
loopne
lods
sub
sub
and
dec
jg
dec
add
cmp
sub
push
in
or
pop
cdq
imul
fimul
fs
fistp
xchg
(bad)
pop
xchg
dec
int
mov
add
inc
jmp
inc
addr16
arpl
inc
push
or
mov
pop
arpl
xor
cli
and
and
and
add
fbld
dec
sar
into
xchg
dec
inc
pop
dec
jae
push
inc
sub
lea
xor
lock
jp
aad
mov
dec
aaa
sbb
sub
push
xor
mov
les
loop
loopne
mov
cs
rcl
cli
(bad)
xchg
enter
repnz
fmul
jbe
cmps
adc
inc
mov
pop
sbb
into
sar
add
xchg
dec
add
mov
scas
jg
jl
adc
hlt
ret
sub
sub
cmp
ins
jp
xchg
xchg
dec
xor
pusha
cmc
sub
daa
push
addr16
into
cwde
mov
rol
outs
ret
pop
jno
stc
xor
mov
ss
cmp
shr
xchg
push
cmp
push
or
pop
and
dec
pop
lea
xchg
dec
test
daa
sti
mov
sti
daa
rol
add
mov
int3
cld
sbb
inc
movs
xchg
sbb
lea
ret
iret
cmp
ret
pop
pop
sub
scas
popa
sar
fdiv
adc
scas
jg
cmp
xor
or
adc
fild
cmc
add
mov
jno
ficomp
or
dec
in
inc
and
inc
jno
xchg
neg
outs
cmps
pop
cmp
cli
mov
imul
dec
fsubr
xchg
pop
fimul
dec
ja
cmp
add
cwde
adc
int
add
push
dec
xor
cwde
cld
outs
cli
or
sti
jno
cmc
cli
mov
adc
jmp
xchg
cmp
lock
push
pop
jns
imul
adc
les
cmp
mov
cmps
cmps
or
aad
test
lock
sbb
pop
push
lahf
fmul
mov
cli
cs
sub
add
(bad)
push
fnstsw
dec
lods
loope
ficomp
cdq
mov
dec
in
outs
int
imul
pop
cdq
test
retf
loope
jno
xor
cmp
rcr
mov
imul
cmc
dec
cmp
sbb
jp
rcl
jmp
fisttp
movs
add
mov
test
dec
mov
lods
sbb
inc
add
sub
mov
mov
(bad)
jge
mov
push
nop
pusha
loope
repnz
xchg
xchg
add
pop
mov
push
jl
xchg
hlt
fild
loope
cld
in
cmp
out
xor
loop
mov
mov
in
add
loop
bound
in
push
sbb
push
push
int
inc
retf
push
mov
lock
push
addr16
test
bound
push
loop
cwde
jae
mov
sub
inc
cdq
(bad)
aaa
aaa
xlat
stc
sbb
and
mov
dec
adc
mov
xlat
sub
int
xchg
inc
fst
jmp
outs
add
das
fdivr
hlt
imul
stos
cmps
fld
pop
or
jb
sbb
push
xchg
gs
in
and
and
repz
or
or
inc
xchg
sub
inc
xchg
sbb
call
sub
pop
ret
jns
imul
sub
call
add
cmp
xchg
mov
jge
mov
pop
and
lods
test
sahf
add
iret
cmp
fstp
dec
sti
push
jle
bound
sbb
adc
sub
or
adc
xor
addr16
pop
aaa
loope
cmp
or
mov
inc
cmp
arpl
mov
pop
mov
std
add
jp
popa
pushf
pop
add
hlt
add
push
loop
ins
ins
push
or
pop
cmc
push
mov
sub
lods
push
sub
push
xor
mov
call
xchg
clc
dec
jl
loop
call
add
mov
addr16
pop
in
pop
lock
hlt
stos
xor
in
(bad)
hlt
sub
xchg
mov
jmp
sub
test
adc
add
pop
push
in
bound
gs
mov
popf
pusha
rol
loop
jo
inc
cmp
adc
inc
test
scas
mov
loopne
leave
in
inc
aad
push
sub
outs
push
cmp
iret
xor
xor
loope
jg
dec
imul
les
add
jecxz
loop
jno
xlat
pop
outs
hlt
sub
and
push
aaa
jg
mov
call
push
cmp
loop
ficomp
xor
mov
push
pop
jnp
mov
out
jno
mov
sbb
call
cld
xor
aad
sub
mov
mov
scas
jne
cmps
mov
clc
dec
push
xor
jo
xchg
gs
in
fs
out
cdq
mov
jo
push
(bad)
sbb
sub
pop
sbb
add
jmp
mov
in
cdq
scas
cmp
aaa
pop
fcmovnbe
pop
xchg
jo
push
push
and
lds
cmps
cdq
inc
xchg
push
cmp
in
aas
(bad)
push
adc
in
das
pop
cmps
dec
outs
and
push
loopne
or
cwde
sub
repnz
dec
loop
xchg
imul
jne
mov
sub
inc
pop
dec
sub
clc
mov
pushf
mov
lahf
scas
cmc
stc
cmp
mov
retf
cli
cs
pop
nop
je
mov
rcr
cmp
loopne
dec
test
call
movs
mov
jmp
mov
jne
pop
in
sub
repnz
push
sbb
(bad)
xchg
popf
dec
cdq
adc
inc
push
fnstcw
dec
not
and
xchg
and
shr
add
test
std
sbb
rcr
cmp
adc
inc
popa
lods
xor
neg
jp
mov
pushf
dec
dec
dec
inc
xchg
mov
pop
push
fs
adc
or
mov
push
cmp
outs
cmp
aad
sbb
adc
rol
(bad)
in
cli
stos
retf
adc
enter
pop
mov
cmps
mov
cmp
push
loope
sub
adc
cmp
inc
or
dec
mov
jmp
mov
pop
fs
inc
mov
repnz
test
ret
inc
cmp
push
(bad)
repz
add
enter
int3
scas
icebp
sbb
push
fidivr
gs
(bad)
into
adc
xchg
daa
lock
dec
jne
mov
mov
jnp
cdq
jg
sub
sbb
pushf
jecxz
outs
scas
adc
sbb
pop
and
jns
lea
sub
mov
jp
(bad)
repz
cmp
scas
stc
xchg
mov
adc
das
adc
in
retf
shl
sbb
outs
and
jge
aaa
js
rcr
fistp
lods
push
outs
jb
or
jne
daa
mov
xchg
lods
adc
mov
or
cmps
(bad)
mov
or
ja
cld
adc
sahf
imul
jl
das
(bad)
out
jge
xchg
or
cmps
inc
xlat
mov
sbb
dec
sahf
stos
test
jmp
xchg
repnz
sub
leave
icebp
(bad)
jp
dec
lds
mov
and
stc
sub
dec
mov
call
test
lods
aas
jl
jecxz
inc
cwde
jl
mov
mov
adc
cli
mov
mov
adc
sbb
enter
mov
sub
fs
pusha
or
xlat
and
(bad)
xor
jne
es
nop
xor
fs
cmc
in
das
hlt
cli
(bad)
aad
das
dec
mov
xor
aas
jno
mov
aas
fwait
sbb
xchg
out
jbe
fst
imul
movs
adc
mov
dec
xchg
test
push
or
cmps
mov
repz
sub
sahf
pop
pop
fdivr
pop
inc
cld
cmc
outs
(bad)
dec
(bad)
and
mov
add
xor
mov
scas
xchg
cmc
mov
(bad)
or
in
pusha
in
repz
xchg
and
sub
mov
imul
nop
mov
aam
jne
jno
jl
xchg
push
cwde
loopne
ss
scas
pop
popa
xor
in
push
xor
mov
or
das
sub
popf
es
movs
out
jo
mov
daa
mov
stos
mov
sub
and
int3
out
pop
mov
pop
xchg
mov
pop
ror
lahf
retf
and
xor
rol
cmp
ins
sbb
imul
pop
sti
sbb
jmp
inc
nop
inc
sbb
movs
repz
push
mov
out
pop
rcr
lods
and
and
aam
jmp
scas
sub
div
es
icebp
adc
stos
popf
mov
mov
jno
(bad)
dec
or
dec
movs
sub
dec
arpl
fs
(bad)
mov
or
fstp
mov
jl
mov
mov
scas
xor
test
gs
pop
movs
sub
jae
(bad)
cdq
cmp
inc
pop
ret
dec
push
movs
pop
rcl
imul
(bad)
lahf
sbb
cmps
das
inc
jno
add
add
cld
movs
and
adc
shl
test
jnp
xchg
out
jle
add
xchg
add
pop
push
loope
mul
adc
sub
inc
pop
call
push
jge
in
pop
fisubr
adc
jecxz
adc
sub
js
test
cmp
test
arpl
jp
mov
retf
fwait
pop
stos
or
ss
jp
xchg
out
push
adc
cs
sbb
jno
xor
iret
push
jmp
push
mov
addr16
adc
jmp
push
aam
jge
addr16
inc
rol
arpl
pop
loopne
adc
test
call
cdq
pushf
pop
scas
add
push
jno
push
xor
rcl
mov
pop
mov
retf
adc
mov
sub
jmp
pop
and
scas
js
jmp
loope
sub
ds
mov
mov
mov
mov
ret
jmp
dec
and
cmp
data16
dec
stc
add
jl
hlt
sub
mov
xchg
jmp
and
jbe
push
lahf
xor
in
hlt
and
sub
xchg
pop
mov
out
mov
mov
sub
fcomp
xor
mov
inc
dec
fisub
cmps
(bad)
(bad)
mov
mov
cmp
mov
or
push
imul
(bad)
mov
add
pop
retf
pop
aad
xchg
loope
mov
jmp
inc
(bad)
enter
cli
retf
out
mov
fsincos
push
test
hlt
shrd
popf
jbe
mov
mov
scas
or
mov
pop
jl
retf
cmp
adc
jmp
jb
out
xchg
mov
stos
mov
xchg
loopne
mov
(bad)
mov
adc
sub
dec
inc
pop
sbb
fild
out
mov
(bad)
xlat
mov
pop
mov
add
dec
les
aas
add
gs
mov
inc
jg
xlat
std
sbb
cs
xchg
ss
mov
cld
lods
das
out
int
inc
dec
ror
pop
mov
movs
mov
movs
and
cld
loop
mov
popa
sub
sub
sahf
inc
and
dec
xlat
stc
pusha
out
daa
mov
jl
push
add
ja
in
inc
push
(bad)
mul
jmp
retf
movs
jns
mov
test
xchg
mov
pop
fucomp
cmp
in
inc
sub
imul
or
scas
rcr
xchg
or
lea
xor
fwait
cmp
jbe
test
xor
adc
add
ficom
mov
cli
idiv
push
jmp
cmp
xchg
xlat
cmc
push
mov
adc
sub
cmp
sbb
or
daa
inc
cmp
fst
mov
sbb
adc
add
loop
mov
or
jmp
das
xchg
fdiv
xchg
or
pushf
outs
xchg
movs
jo
inc
repz
fdiv
enter
sahf
lods
imul
jmp
cli
inc
sub
aam
fadd
lds
(bad)
sahf
mov
jbe
mov
adc
aad
mov
inc
es
iret
pop
retf
cmp
or
mov
arpl
mov
sub
mov
and
cmc
mov
mov
imul
and
clc
in
cmps
nop
mov
xchg
and
imul
push
std
push
nop
pop
arpl
pushf
sbb
jmp
out
dec
outs
mov
fs
pop
cmp
jbe
dec
sbb
rcl
add
jle
cmps
test
les
out
and
sbb
jp
cmp
or
es
jl
jp
cmp
in
clc
dec
xor
stos
out
pop
stos
in
out
or
ss
cmp
dec
jo
jno
pop
dec
outs
xchg
or
addr16
mov
pop
push
repz
ja
sub
sbb
cmp
push
mul
adc
(bad)
hlt
daa
clc
les
sti
test
push
(bad)
cld
rol
daa
je
sub
mov
fisttp
xor
adc
push
jno
or
pop
sub
sti
inc
out
add
outs
pop
mov
xlat
outs
cs
fcmovu
lds
shr
lea
lods
xlat
aaa
punpckhwd
in
push
dec
mov
mov
jno
mov
lock
es
mov
adc
call
sub
stos
dec
push
sbb
sub
and
cli
jl
in
(bad)
sbb
xor
add
and
xor
mov
lahf
jl
jmp
call
inc
mov
adc
loopne
int3
retf
into
xchg
mov
(bad)
bound
add
rcr
sub
adc
cmp
mov
xchg
jecxz
int
rcl
dec
lock
stos
xor
adc
jg
das
pushf
cmc
popa
xor
sbb
adc
dec
hlt
push
arpl
cmps
shr
add
fadd
mov
and
sar
pop
jecxz
jmp
add
push
adc
fistp
dec
inc
sub
loop
or
jmp
adc
js
(bad)
fild
jge
retf
sbb
cdq
add
into
(bad)
jmp
enter
push
mov
lds
imul
fdiv
stos
inc
ficomp
into
or
and
mov
jb
stos
add
shr
(bad)
test
sti
add
fst
ds
mul
fs
sbb
das
push
ret
mov
cli
push
retf
jns
pop
sbb
shl
cdq
mov
xchg
xchg
mov
push
mov
or
mov
cmp
add
or
mov
(bad)
aam
dec
pop
ins
fcmovnu
pop
(bad)
enter
xor
dec
enter
push
fistp
jl
std
and
rcr
mov
adc
sbb
sbb
or
sub
push
pop
jmp
ins
das
inc
mov
jmp
or
xor
loop
sbb
mov
cwde
sub
mov
sub
push
add
sbb
lods
invd
fs
call
cld
cmp
inc
dec
push
scas
leave
(bad)
mul
cli
imul
xor
dec
loope
imul
out
and
push
jmp
hlt
mov
cld
shr
push
and
ss
addr16
fstp
test
or
and
adc
imul
sbb
addr16
pop
cmp
mov
iret
lea
jmp
repnz
fimul
or
cmp
lahf
pop
popf
push
(bad)
(bad)
jle
xlat
pop
imul
out
mov
or
jecxz
and
fisub
ja
sub
xchg
sub
inc
out
cli
add
mov
in
int
test
mov
mov
push
mov
mov
enter
adc
pop
mov
push
int3
inc
fs
cwde
stc
out
nop
inc
inc
test
jp
jo
call
shl
cwde
push
pop
sar
rsm
pusha
push
sub
add
sbb
(bad)
retf
lods
sub
jo
retf
mov
scas
dec
das
mul
cmps
or
aaa
cs
jecxz
(bad)
dec
or
xchg
jmp
hlt
cmps
mov
cwde
fnstcw
fisttp
inc
jnp
dec
pop
pop
jp
push
cmp
leave
int3
dec
push
fidivr
ins
pop
call
mov
cs
push
xacquire
push
push
in
add
push
arpl
xor
mov
cld
outs
rcl
adc
lahf
out
mov
cmp
cmps
or
push
das
add
jp
mov
jb
mov
test
fwait
outs
inc
ds
test
xor
mov
mov
cdq
cmps
sbb
rcl
adc
pusha
jnp
ja
cmp
retf
sbb
mov
into
inc
cmp
sahf
ret
push
push
adc
neg
xchg
stos
test
mov
ds
inc
rcl
cmp
pop
sbb
fs
add
push
dec
cmp
jb
sub
xlat
cmp
sbb
outs
adc
cli
mov
jbe
daa
sub
mov
sub
fnstenv
lds
push
daa
imul
ins
ja
mov
sti
dec
inc
repz
mov
in
lods
mov
push
inc
lock
fwait
test
enter
inc
scas
popa
jb
mov
in
out
xchg
lds
adc
push
addr16
aas
popf
xor
repnz
sub
mov
jp
pop
sub
bound
mov
sbb
lds
fild
loopne
fsub
(bad)
retf
xlat
pop
jne
pop
dec
aaa
cwde
mov
pop
out
jne
mov
out
pop
ds
push
dec
cmp
dec
inc
fst
sar
add
int3
and
(bad)
jo
and
pop
test
or
loopne
xor
inc
mov
jb
xor
in
dec
test
and
dec
scas
add
adc
adc
cmp
call
inc
sar
xlat
inc
ret
je
pop
ficom
(bad)
mov
stos
dec
aad
retf
mov
or
mov
fld
mov
adc
gs
mov
xchg
inc
inc
push
push
call
nop
out
sub
aas
mov
test
(bad)
ins
sbb
nop
(bad)
jp
leave
cld
sbb
out
or
ins
xor
mov
imul
iret
xchg
sbb
mov
outs
in
outs
inc
sub
xchg
cmp
add
lods
int3
mov
sub
sbb
mov
mov
cmp
push
mov
(bad)
loopne
push
ret
xchg
cmc
sub
and
push
jne
pop
lahf
inc
pop
push
jmp
or
xlat
or
gs
mov
push
pusha
xlat
test
xchg
xchg
push
mov
and
fmulp
push
cmp
in
xor
fild
enter
bnd
pop
and
sbb
or
aad
jmp
mov
(bad)
push
mov
imul
and
adc
mov
jg
mov
pusha
push
pop
xlat
and
fdivr
ins
pop
pop
sti
xor
loop
sub
xchg
xchg
(bad)
ror
ret
aam
sub
mov
xchg
push
or
ss
mov
adc
test
cmps
mov
sbb
mov
cmp
iret
cwde
rcl
pop
and
sbb
out
lea
mov
and
(bad)
shr
std
ror
mov
pop
movs
ins
popf
fmulp
std
jle
lock
sub
mov
ficomp
pop
dec
(bad)
outs
pop
stos
outs
or
xchg
mov
fcom
add
xor
js
jno
push
dec
jmp
mov
dec
popa
repnz
jle
cmp
pop
cmp
out
or
cmp
add
movs
adc
(bad)
dec
test
inc
or
ret
ret
jp
add
jecxz
dec
pop
pop
cmp
mov
xor
dec
fmul
enter
jge
pop
mov
rep
mov
mov
mov
pushf
(bad)
iret
shl
arpl
xor
xor
bound
hlt
cld
outs
or
xor
jo
arpl
mov
mov
mov
mov
adc
mov
jns
movq
es
(bad)
xor
cmc
jge
sub
rol
mov
inc
(bad)
mov
adc
mov
jbe
cmps
ins
iret
aam
adc
pusha
inc
pop
mov
dec
repz
(bad)
clc
push
enter
mov
xchg
scas
loop
lds
push
xchg
dec
add
mov
test
out
std
cmp
mov
pop
xchg
les
stos
xor
stc
cli
pop
data16
fldenv
push
adc
fs
hlt
outs
sahf
in
hlt
xor
xchg
adc
scas
clc
leave
mul
int3
adc
aas
xlat
sub
sub
fst
pop
pop
in
dec
scas
jns
push
sbb
scas
sbb
mov
adc
loope
mov
retf
or
inc
imul
mov
outs
aad
cmps
sub
mov
pushf
imul
mov
dec
leave
adc
or
mov
cmp
scas
mov
dec
cwde
ja
inc
shl
imul
xlat
enter
pop
pop
xor
es
adc
mov
fisub
push
je
dec
clc
push
mov
das
mov
imul
ss
inc
pop
lock
mul
ud0
aaa
cmps
pop
add
or
nop
mov
push
jle
or
mov
scas
jo
cli
push
jno
cwde
jmp
mov
stos
fidivr
(bad)
test
shl
mov
bound
rcr
imul
(bad)
popa
dec
lock
sbb
rcr
mov
xchg
push
fnsave
std
inc
call
ret
xchg
inc
cld
push
ja
fwait
pop
jb
add
pop
je
push
jge
aam
xchg
(bad)
scas
fadd
(bad)
ins
adc
popf
(bad)
mov
ret
jmp
add
call
sbb
adc
adc
js
pop
mov
pop
ins
fstp
into
jne
xor
packuswb
pusha
pusha
call
adc
adc
call
cmp
(bad)
std
or
ja
mov
cmp
mov
dec
jge
gs
jle
xor
and
xchg
aas
jnp
xor
lods
push
ss
xor
adc
push
jg
int3
or
dec
push
je
lea
mov
jp
or
jmp
rcl
(bad)
in
or
aaa
std
test
cli
jl
(bad)
aad
int3
cmps
retf
into
cs
mov
mov
adc
dec
jg
je
sbb
or
fwait
sub
mov
push
sub
sub
cmp
sbb
in
(bad)
gs
gs
and
xor
jmp
pop
test
daa
dec
nop
ret
in
mov
push
inc
outs
pop
cld
test
jo
test
jl
adc
mov
jp
ret
and
jge
scas
mov
cli
enter
push
iret
cmp
fdivrp
imul
mov
push
ret
xchg
pop
shl
test
sub
shr
les
imul
or
jns
sahf
mov
retf
pop
mov
mov
int3
cmc
sub
int
aas
test
mov
in
leave
ja
sbb
jns
data16
push
and
ss
int
in
lods
das
xor
out
mov
lock
push
fmul
inc
inc
scas
xchg
inc
ret
scas
pushf
pop
push
ret
push
(bad)
lds
shl
inc
or
mov
ss
mov
sbb
or
xchg
xor
add
xlat
sub
pop
xor
jb
fadd
jge
dec
sub
pop
pop
in
das
adc
mov
rol
(bad)
mov
leave
push
ins
mov
cmp
call
push
lods
inc
retf
inc
cmp
inc
ds
imul
sar
aas
ds
xor
fcomip
jnp
jle
or
inc
add
scas
jb
inc
(bad)
cmc
pop
scas
clc
sbb
retf
clc
push
push
sub
popa
xchg
mov
push
jle
pusha
inc
es
sbb
add
or
jbe
ret
sbb
cli
xor
xchg
outs
xchg
sub
pop
push
inc
enter
mov
mov
pop
(bad)
xchg
fcomp
aaa
adc
pop
add
sahf
loopne
sbb
cli
fbld
je
rol
repnz
push
pop
cmc
mov
pop
and
test
stos
add
sbb
adc
(bad)
ds
fs
mov
push
jl
lods
stc
stos
dec
push
and
pop
neg
jb
icebp
mov
sahf
dec
sub
cmps
sub
ror
aas
push
sbb
pop
int3
or
xchg
xchg
xchg
cmps
scas
xchg
add
dec
lahf
sub
popa
fdiv
(bad)
retf
xor
movs
sub
lds
xor
clc
pop
xor
icebp
test
push
adc
push
pop
je
cli
or
pop
jmp
inc
popa
bound
xor
jne
scas
lea
cmp
or
push
(bad)
movs
push
adc
push
cld
cmp
cmp
arpl
test
pusha
push
jnp
cmp
ficom
dec
mov
cmp
mov
cmp
scas
lea
push
jmp
sub
fs
cmp
fidivr
ins
and
cmp
les
mov
mov
inc
stc
add
gs
fstp
and
leave
out
pop
mov
into
(bad)
aam
pop
mov
jnp
dec
icebp
loop
stos
neg
imul
pop
stos
sar
push
retf
mov
es
movs
jmp
or
iret
retf
test
pop
popf
cmp
(bad)
sub
cmp
retf
(bad)
repz
nop
ds
ret
out
call
dec
pop
mov
cmp
(bad)
mov
xchg
inc
movs
push
sub
sahf
fs
add
shl
sbb
shr
sub
cwde
pop
xor
gs
fwait
push
in
xchg
mov
pop
inc
xor
or
push
sti
mov
pop
je
in
mov
nop
(bad)
mov
sbb
push
ds
jno
xor
adc
ja
mov
cli
jmp
push
cmp
arpl
int3
retf
adc
push
xlat
loope
mov
call
xchg
cmp
jmp
fbstp
xchg
das
cmp
repz
mov
cmps
push
xchg
inc
and
adc
pcmpeqb
inc
scas
arpl
and
push
xchg
lock
inc
call
pushf
xor
xor
jecxz
retf
cli
js
mov
lds
dec
(bad)
pop
fild
or
je
or
dec
test
or
daa
dec
adc
loope
inc
int3
push
loope
outs
js
lds
xor
adc
fnstcw
hlt
aam
loopne
sbb
inc
mov
imul
retf
pop
add
pop
sbb
cvtdq2ps
call
xchg
push
(bad)
mov
mov
mov
in
jle
and
jmp
addr16
(bad)
xchg
je
aaa
fmul
out
push
cli
aam
outs
call
fistp
movs
dec
jno
lahf
fsub
jb
cld
sub
dec
inc
fnstsw
sti
loope
inc
cmp
test
add
mov
clc
pop
fbld
mov
retf
lds
loope
gs
adc
adc
sbb
xor
retf
xchg
dec
add
xor
xor
or
sub
ja
jp
push
adc
cmp
out
jmp
or
dec
xor
pop
jae
push
and
clc
rcl
inc
cli
pusha
mov
pop
adc
movs
jmp
vpaddusw
lahf
and
xchg
cdq
mov
out
ds
inc
jp
push
repnz
xor
mov
add
sti
push
stc
sbb
in
aad
xchg
xchg
dec
mov
sbb
xor
or
jmp
dec
int
scas
daa
add
(bad)
cmps
push
dec
fucomip
hlt
mov
mov
push
dec
outs
sub
mov
aas
mov
jl
aaa
je
movs
ja
push
lea
or
and
inc
sbb
es
icebp
mov
daa
mov
sub
jmp
shl
movs
sbb
jns
mov
ud1
out
inc
hlt
enter
lods
xchg
mov
dec
push
cmp
cmp
and
es
mov
test
and
cwde
adc
dec
cmps
push
xor
cmp
dec
cmp
jbe
mov
jns
sbb
rcr
bound
cmp
gs
mov
mov
or
daa
rcr
data16
stos
sti
(bad)
mov
mov
sbb
pushf
sub
test
imul
fild
push
pop
inc
imul
or
cmp
loope
mov
adc
out
jb
push
add
shl
inc
xor
in
and
or
mov
and
retf
inc
mov
mov
ret
add
adc
fiadd
push
das
or
rcr
(bad)
jp
push
jl
lahf
call
(bad)
(bad)
jb
add
in
(bad)
les
inc
repnz
lock
hlt
adc
xchg
aaa
adc
jne
xlat
or
les
std
push
adc
retf
cli
in
mov
jp
jne
or
xchg
dec
adc
repnz
sbb
push
dec
pop
ss
stc
mov
lods
and
stos
enter
adc
sbb
jae
icebp
jbe
mov
adc
int
test
sbb
ja
sar
push
out
and
fidiv
or
aaa
call
pop
enter
push
xabort
jmp
fs
jmp
arpl
jmp
push
and
add
and
pusha
jmp
ror
inc
mov
add
pop
test
sub
adc
xor
add
das
push
inc
xor
fsubr
inc
xor
and
xor
inc
inc
iret
ins
xchg
lea
jle
dec
mov
shl
mov
mov
add
pop
(bad)
fadd
pminub
xchg
jp
loope
mov
add
push
bound
mov
and
popf
push
mov
push
popa
aaa
mov
ds
xchg
arpl
ret
cmp
enter
xchg
inc
das
fstp
js
cmp
pop
rcr
fldl2e
in
mov
pop
cmp
(bad)
add
cmps
das
int
or
or
push
mov
inc
rcl
xchg
icebp
jae
cli
pop
addr16
mov
stos
jno
not
out
cmp
call
aas
leave
push
inc
outs
push
aaa
or
inc
sub
cmp
add
xchg
(bad)
fistp
xchg
xor
sub
sub
adc
(bad)
sar
mul
cmp
xchg
outs
ja
fisubr
out
popw
fs
iret
mov
mov
xor
dec
push
in
xor
or
and
jno
jo
dec
sti
sub
cmps
and
mov
push
inc
dec
mov
dec
loop
and
jecxz
mov
inc
(bad)
das
(bad)
pop
cmc
push
cmc
ss
add
in
push
fdiv
out
mov
jno
test
mov
push
imul
xchg
ds
push
call
mov
mov
out
xchg
mov
mov
fstp
pop
lds
es
add
push
sub
xor
popf
pop
jmp
mov
jbe
mov
pop
out
(bad)
fs
fsubr
xchg
stos
sub
hlt
and
xchg
imul
dec
out
cmp
loop
cmc
jae
inc
jmp
movhps
dec
lahf
adc
aas
or
pop
cmp
xchg
push
enter
inc
pop
ins
in
mov
ja
dec
mov
push
jp
movs
lahf
cmp
fst
add
fisub
lock
jne
not
pushw
lock
cmc
test
sub
adc
les
pop
mov
cmp
adc
cmp
sbb
fnstcw
cli
jle
imul
xchg
cmp
stos
xchg
arpl
inc
cmp
xor
(bad)
sbb
stos
nop
ds
jl
push
xor
inc
retf
pop
lods
les
clc
mov
adc
in
xor
cmp
adc
pop
out
or
adc
cmp
jecxz
dec
inc
push
pop
mov
jmp
mov
xchg
and
jle
xchg
push
bound
ins
lods
inc
adc
adc
xchg
jne
mov
mov
xchg
xchg
and
dec
mov
inc
cmp
adc
movs
sbb
mov
xor
add
das
test
aam
and
cmp
mov
cmps
and
aad
xor
out
mov
test
retf
inc
push
leave
or
or
outs
lods
mov
xchg
xchg
in
sbb
lea
and
loope
popa
dec
ja
imul
pushf
ins
push
stos
adc
sahf
mov
inc
pop
push
inc
hlt
setno
(bad)
adc
iret
push
pop
and
aas
dec
jge
cdq
pop
lock
(bad)
xchg
add
xor
sub
push
sbb
pushf
int
shr
ret
pop
mov
ins
in
scas
pushf
loopne
xchg
mov
popf
xor
fdiv
dec
jne
out
test
ins
cs
mov
aaa
xchg
imul
clc
ds
sbb
int3
lahf
iret
sub
addr16
add
imul
test
(bad)
ss
and
sar
cmp
outs
cmp
cmp
pop
test
jbe
movs
sub
das
ins
dec
jb
test
hlt
cmp
inc
inc
jo
loop
mov
or
jo
imul
in
sub
es
outs
sub
inc
and
adc
adc
mov
mov
cwde
inc
aas
dec
call
cmp
cmps
xchg
gs
shl
xor
aad
xchg
gs
push
in
pusha
scas
cmc
cmp
arpl
in
int
or
sbb
(bad)
(bad)
into
pop
mov
iret
adc
bswap
aaa
and
ror
xchg
sti
cmp
jl
push
jo
and
inc
jge
sbb
cmp
loopne
pop
aaa
outs
lea
xchg
mov
ja
xor
int3
nop
cmp
dec
adc
fisub
lods
scas
mov
xor
pop
pop
mov
push
inc
bound
scas
out
cmp
std
test
and
dec
scas
movs
xor
or
cmovl
inc
ret
add
mov
loope
adc
movs
push
xchg
lahf
sbb
into
adc
jns
pop
fidivr
pushf
jmp
addr16
repnz
pop
loopne
xlat
popf
xor
xchg
mov
jnp
loop
movs
or
push
pop
sub
mov
sbb
aas
cmp
jmp
adc
xchg
xor
stos
js
test
mov
ins
cwde
cli
jg
pop
stos
ret
mov
mov
loop
hlt
stc
(bad)
shl
push
sbb
and
mov
ret
int3
jb
scas
cmc
and
inc
out
pusha
sar
jge
mov
popf
fisub
adc
adc
mov
stos
push
(bad)
call
jmp
repnz
cmp
ret
mov
or
inc
adc
rcr
bndstx
mov
retf
and
add
cli
dec
js
adc
pop
adc
jae
in
dec
jmp
imul
mov
jb
bound
ja
lods
dec
in
xor
push
fwait
xchg
cmp
cmp
shr
adc
mov
jns
sub
das
fwait
test
add
mov
inc
pop
xor
push
jb
jns
mov
dec
and
xor
and
lock
adc
std
xor
mov
jl
sub
loope
mov
sahf
fmul
(bad)
sbb
setns
sub
sub
data16
mov
cmp
lods
loope
xor
mov
es
aaa
push
inc
xchg
xor
jl
push
popa
jns
add
mov
icebp
scas
inc
les
push
movs
pushf
fs
push
mov
add
dec
mov
or
jns
mov
outs
add
adc
or
adc
sbb
stos
pusha
test
fwait
lods
mov
aad
movs
fist
scas
jecxz
mov
test
imul
xchg
mov
add
sbb
sbb
push
fld
test
dec
push
out
lods
sub
cli
stos
or
fs
out
xchg
mov
arpl
cmp
and
jmp
stos
test
pop
(bad)
xor
in
pop
pop
popa
push
or
cmc
les
int3
popa
or
xor
mov
repz
xchg
int
test
and
sbb
dec
adc
sahf
out
xchg
xlat
mov
pushf
and
ret
mov
mov
fdiv
dec
call
ror
xchg
ficom
addr16
jae
mov
stos
not
add
aas
popa
push
push
lods
adc
sahf
mov
ret
pop
jne
sub
popa
sbb
adc
(bad)
and
enter
mov
imul
sbb
std
je
jmp
in
sbb
mov
retf
or
repnz
mov
repnz
jg
test
fidiv
xor
jns
stos
mov
jg
xor
stos
dec
out
jmp
jecxz
cmp
xor
test
push
push
aaa
inc
gs
arpl
dec
fmulp
loopne
in
cwde
pop
cmp
lahf
dec
xchg
cdq
dec
cmp
mov
xchg
scas
cmp
jmpw
mov
sub
(bad)
es
shl
arpl
popa
mov
sti
or
stc
xlat
out
mov
pop
in
ficom
gs
add
jmp
call
sub
test
pop
adc
xor
mov
xor
jp
pop
adc
jg
mov
jne
cmps
sbb
les
aaa
mov
fldcw
mov
sub
in
inc
je
movs
and
je
arpl
inc
sbb
loop
mov
fcom
rol
xchg
mov
mov
jno
jne
sub
xor
xchg
pop
rcr
rcl
mov
rol
loopne
mov
push
jnp
mov
xchg
xchg
add
ror
ja
and
sbb
pop
sahf
jnp
inc
jmp
mov
mov
dec
test
repnz
call
dec
out
inc
push
rcr
into
clc
cwde
pop
inc
fadd
fiadd
mov
cld
cmp
adc
imul
std
xor
outs
mov
sub
sbb
ja
and
cmp
bound
rcl
mov
xchg
sbb
ss
xor
dec
and
imul
dec
jp
je
in
jo
bnd
scas
sti
dec
cdq
pop
mov
xlat
mov
enter
movs
pop
mov
outs
jns
fldenv
fstp
jle
les
fadd
and
adc
dec
repnz
add
aas
fld
mov
ins
xlat
je
retf
push
clc
lahf
mov
(bad)
mov
xor
data16
(bad)
idiv
cmp
add
stc
mov
mov
sbb
or
dec
movs
jle
mov
lock
scas
push
add
shr
ss
jne
ins
lods
sub
clc
mov
test
and
mov
or
jno
xchg
mov
fcmovnu
mov
xor
(bad)
push
es
xlat
rol
out
inc
add
pop
cmp
ins
mov
jne
or
test
xchg
sub
out
and
mov
imul
nop
cmps
jo
push
imul
adc
add
adc
scas
cmp
adc
stc
daa
ret
pop
movs
sub
add
xchg
fstp
pop
pop
arpl
inc
les
movs
pop
cmc
cld
xor
push
fstp
mov
popa
mov
push
fnstsw
fcom
jge
inc
std
nop
sbb
sub
sub
cmp
imul
icebp
xchg
repnz
mov
pushf
or
xor
pop
jp
loopne
ror
rcr
inc
and
idiv
cli
or
push
rcl
mov
sbb
popa
idiv
mov
addr16
out
mov
adc
in
fiadd
and
xchg
jp
adc
shrd
cmc
inc
xchg
je
jecxz
add
outs
outs
(bad)
popa
sbb
aam
push
mov
(bad)
ins
rcr
js
mov
imul
or
and
arpl
mov
add
fcomp
(bad)
mov
adc
or
push
mov
shr
xlat
or
clc
jmp
or
(bad)
push
bound
test
sbb
nop
cmp
call
cmp
scas
inc
stc
repz
mov
scas
ret
push
scas
mov
pusha
aad
pushf
pushf
test
je
ins
mov
and
in
push
pop
add
test
inc
movs
xchg
arpl
or
popa
lahf
or
push
jnp
xor
xchg
shl
and
aam
jnp
icebp
or
gs
data16
push
lahf
push
lods
jnp
mov
test
fwait
sub
adc
(bad)
test
inc
out
cmps
in
adc
mov
outs
sti
aaa
js
mov
cwde
dec
pop
(bad)
call
inc
and
or
cmp
dec
mov
pop
dec
push
cwde
clc
pop
and
sbb
in
ret
mov
xchg
int3
loope
out
icebp
mov
sub
jecxz
or
jle
leave
cwde
adc
mov
loope
stos
lahf
hlt
fsubr
out
dec
std
pushw
mov
push
sahf
ja
(bad)
sub
lea
imul
fs
jae
pop
(bad)
sbb
xchg
shl
outs
jne
mov
sti
and
daa
fisttp
inc
(bad)
xor
popa
cli
push
gs
adc
xchg
cmp
call
mov
sub
test
outs
sub
cmp
push
stos
push
stc
mov
leave
test
test
push
out
xchg
scas
push
aad
cmp
mov
(bad)
cli
rcl
and
sub
and
lea
pop
arpl
mov
jo
fisubr
cmc
xor
push
sbb
cmp
stos
(bad)
adc
and
stc
xor
mov
cmp
xchg
push
sub
aad
inc
push
cmp
jmp
ins
repz
js
popa
iret
retf
(bad)
popf
xchg
push
xor
and
and
mov
hlt
pop
test
in
inc
jo
pop
mov
icebp
xor
dec
dec
aaa
xchg
lods
sbb
out
or
add
cmc
lea
test
mov
in
in
push
xor
pusha
cmp
clc
fist
and
loop
(bad)
rcl
push
inc
nop
mov
out
adc
ins
mov
ret
fsub
push
rcl
cmp
jecxz
mov
dec
lahf
pop
out
mov
xchg
rcr
inc
dec
popa
jo
(bad)
out
and
pop
imul
fsub
in
out
nop
ret
add
hlt
mov
or
pop
add
popa
mov
fs
xchg
std
or
mov
mov
iret
mov
fsubp
sub
les
outs
inc
cwde
aad
jnp
retf
mov
mov
into
pop
xor
inc
int3
ret
in
or
inc
mov
call
dec
or
cmps
push
or
mov
and
pop
in
xor
dec
mov
mov
pop
dec
sub
ficom
out
dec
dec
inc
mov
mov
dec
aam
dec
in
(bad)
xor
mov
add
sbb
or
ds
mov
lea
xchg
pop
in
inc
push
out
sahf
hlt
addr16
add
pushf
repz
sbb
push
mov
push
(bad)
cmps
mov
mov
or
xchg
test
movs
(bad)
jno
(bad)
je
pushf
sbb
cmps
int3
stos
inc
shr
cmps
gs
ja
daa
jmp
int3
jmp
pop
lock
(bad)
fisttp
nop
and
and
mov
dec
(bad)
xchg
inc
pusha
rol
xchg
cmps
das
or
shr
or
cmp
shl
ins
cmps
mov
icebp
pop
mov
mov
xchg
jne
cld
out
fadd
jnp
into
test
daa
sbb
and
inc
call
inc
xor
scas
scas
movs
ins
xchg
hlt
std
in
aam
pop
or
stc
stc
cmp
xor
mov
std
fdiv
icebp
out
hlt
inc
sub
in
xchg
pop
imul
mov
int3
stc
stc
fcomp
outs
std
fldz
fs
ret
fadd
adc
jg
sahf
pop
loope
or
jmp
rcr
stc
xchg
aaa
jle
jns
or
mov
xor
lods
ins
pushf
sahf
movs
sub
shl
pop
push
lock
fst
pop
xchg
in
sub
mov
xchg
and
sbb
dec
jl
popf
push
int3
pop
push
mov
xchg
sbb
mov
adc
mov
sbb
inc
movs
int3
test
aam
or
nop
jle
or
mov
dec
pop
mov
and
leave
xor
cld
xchg
int
xor
bound
push
mov
sar
int3
xor
ja
scas
test
xor
mov
jo
mov
or
inc
pop
loopne
or
push
add
cmp
div
jmp
in
pop
repnz
mov
(bad)
out
rcl
dec
xchg
repnz
out
inc
dec
aaa
es
cdq
or
in
or
mov
scas
stos
xor
ins
cmp
scas
scas
fild
pop
aas
add
retf
xchg
je
int3
sbb
out
std
fwait
std
xchg
cs
ror
addr16
retf
addr16
xchg
and
xor
pop
jle
cmp
repnz
(bad)
fdivr
lods
ret
pop
xchg
mov
iret
aaa
inc
stc
adc
fstp
xor
xor
mov
mov
jmp
mov
movs
dec
pop
pushf
xchg
inc
aaa
fbstp
in
push
je
mov
and
aam
sub
sub
push
sub
cli
mov
int
mov
fst
push
dec
xchg
dec
xor
inc
dec
sub
cld
adc
loop
inc
ss
or
xor
jne
mov
push
das
sub
xor
cmp
or
outs
mov
pop
nop
xchg
cld
dec
xchg
jnp
dec
repz
ja
test
outs
imul
cwde
pop
sbb
cdq
in
mov
inc
dec
fadd
sub
sbb
popf
pop
mov
mov
aaa
xor
dec
adc
icebp
xchg
dec
mov
rcr
or
neg
or
enter
cmps
fmul
add
or
xor
and
xchg
cmp
push
fsubr
xchg
test
cmp
arpl
dec
aam
std
mov
in
cli
push
ds
dec
retf
add
xchg
push
pop
out
xor
outs
fisttp
leave
jne
call
add
xchg
cmp
sahf
or
inc
gs
or
fmul
push
push
and
adc
inc
retf
movs
sub
pop
push
hlt
push
ret
das
jl
mov
or
retf
push
cmps
and
dec
push
pop
aas
pop
push
push
pop
push
add
or
dec
inc
ror
inc
das
fld
call
hlt
push
xchg
psraw
dec
sub
shl
pusha
stc
cmp
out
in
push
xor
into
cmp
dec
lods
bound
jae
neg
pop
mov
fnsave
sti
pop
iret
cmp
push
repz
ffree
mov
(bad)
jg
xchg
rcr
pop
nop
push
or
mov
cld
clc
jb
sbb
adc
mov
repz
xor
call
mov
mov
(bad)
push
adc
jb
mov
ret
bound
add
unpckhps
or
stos
ret
retf
ss
mov
fmul
mov
ds
mov
or
aaa
dec
not
out
inc
loope
xchg
or
retf
ds
imul
dec
mov
add
iret
hlt
hlt
jmp
aaa
inc
std
and
mov
or
(bad)
lea
dec
and
in
retf
push
push
or
int3
fmul
call
fwait
mov
dec
push
enter
jmp
add
push
and
push
rcl
pop
cmp
sti
push
push
pop
inc
adc
pop
icebp
and
mov
out
aas
daa
sahf
leave
inc
xchg
scas
pop
shl
cmp
test
iret
jae
lods
pop
add
jmp
dec
cmps
cmps
adc
xchg
jno
mov
call
push
cmp
adc
shl
dec
xchg
sahf
inc
push
add
push
popf
xchg
dec
mov
nop
out
pop
pop
mov
pusha
mov
ror
std
stc
adc
imul
sub
xchg
xor
mov
not
rol
or
jl
pusha
lds
mov
and
vcvtps2dq
daa
dec
inc
bound
or
and
and
push
popf
aas
mov
push
xchg
les
and
adc
shl
inc
push
sti
test
sub
pop
out
fist
xchg
stc
jmp
mov
cli
jno
daa
punpcklbw
js
xor
fiadd
lods
(bad)
sbb
mov
loope
ja
repnz
dec
mov
ja
scas
adc
in
jb
jno
push
in
jnp
bound
add
or
add
in
retf
aaa
stos
push
call
(bad)
dec
inc
stos
(bad)
stos
push
push
fs
push
pop
cmc
dec
pop
sub
out
outs
mov
xchg
dec
mov
and
pop
shl
mov
jecxz
lahf
add
adc
xor
(bad)
out
or
mov
push
mov
jb
add
jb
cli
pop
inc
adc
jae
jbe
mov
and
or
pop
push
jmp
out
arpl
pop
xor
arpl
and
leave
stc
cmp
push
mov
mov
xchg
loope
push
out
es
das
js
adc
dec
(bad)
jns
ret
jmp
add
inc
or
js
mov
push
mov
adc
xor
or
mov
stc
aam
out
adc
and
vpandn
in
stos
and
adc
adc
xchg
retf
retf
outs
xor
je
ds
sti
sbb
(bad)
mov
mov
mov
xor
sub
sub
adc
sub
imul
hlt
mov
in
aam
pop
and
into
xor
add
pusha
xlat
mov
es
mov
and
mov
pop
rcl
shl
inc
jno
stos
rcr
shr
addr16
sub
cmps
fidiv
cdq
cli
outs
push
aaa
loop
movs
sub
shl
sahf
pop
inc
idiv
fist
aas
jae
repnz
loope
jge
aam
sar
cmps
jmp
or
ins
and
mov
es
mov
mov
outs
fnsave
mov
pop
pop
mov
mov
scas
pop
bound
pushf
jo
test
bound
div
jmp
dec
xchg
fs
jmp
fldenv
repz
sub
test
lds
cmc
inc
cmp
enter
or
stos
inc
retf
pop
arpl
xchg
call
push
addr16
jl
dec
ja
aam
mov
xor
(bad)
(bad)
mov
push
enter
xchg
aam
or
cmp
mov
into
movs
pushf
cmp
cli
inc
fwait
and
jo
push
adc
xor
int
jl
sub
fist
outs
cmc
or
ret
xchg
jg
sbb
(bad)
xlat
push
cdq
hlt
mov
lds
mov
add
sbb
push
icebp
xor
mov
pop
and
stos
mov
jmp
mov
and
add
mov
push
xchg
popf
cld
add
mov
adc
pusha
movs
rcl
push
jp
cmp
jnp
imul
pop
call
jle
dec
loope
stos
fs
dec
jnp
xor
enter
add
cmp
xchg
sar
js
fnstenv
xor
repnz
pushf
push
mov
mov
add
jecxz
cmp
jle
lds
or
or
cwde
pop
xor
ins
xchg
mov
hlt
les
sbb
jns
or
sub
gs
xor
jmp
adc
cmps
sbb
cmc
or
mov
jl
test
dec
lea
dec
push
shr
cs
in
mov
loope
mov
add
imul
mov
jge
aad
and
ror
adc
pushf
div
mov
rol
loope
(bad)
test
dec
aam
or
inc
dec
aas
movs
jecxz
dec
cmp
inc
repz
dec
push
in
sub
in
and
and
stc
jecxz
shl
out
xchg
and
je
mov
adc
xlat
int
jmp
lock
adc
and
leave
cwde
rcr
cdq
icebp
fisubr
inc
xor
std
outs
mov
adc
je
pop
sub
push
inc
iret
mov
(bad)
sub
cmp
bound
mov
push
cmp
cs
add
sbb
xchg
cmps
iret
mov
jl
outs
inc
inc
(bad)
sbb
dec
pop
outs
dec
mov
in
ror
push
in
inc
cli
push
and
inc
jnp
mov
mov
sbb
mov
mov
cdq
xchg
and
stos
cmp
mov
xchg
nop
(bad)
in
sahf
loop
sub
std
test
out
jb
call
adc
cmp
xchg
stos
mov
pop
sbb
pop
cs
je
gs
test
inc
adc
push
js
cmp
cmp
aas
cmc
xor
(bad)
push
sub
jno
fcmovnu
in
adc
sbb
xchg
(bad)
pop
(bad)
xor
adc
ja
fsubr
lods
jge
scas
cmp
jns
cmp
push
push
jl
xchg
fwait
in
aas
cmp
gs
ficomp
push
hlt
cmc
ss
fdiv
or
xchg
pop
adc
cwde
mov
into
push
dec
sbb
push
movs
sbb
push
push
push
xchg
bound
mov
stos
scas
sub
stos
fimul
xchg
jecxz
(bad)
jnp
xchg
aaa
pop
xor
mov
sbb
lods
xchg
call
mov
scas
ficom
cmps
(bad)
sti
popa
dec
sub
adc
retf
call
sbb
sub
cmc
sti
fnstcw
and
pop
xchg
in
(bad)
mov
enter
xlat
inc
nop
fisttp
sti
test
ins
pop
out
(bad)
pusha
js
xchg
xchg
shl
stc
sub
loope
sub
jne
enter
cmp
loopne
inc
pop
and
ret
mov
xchg
sbb
add
not
sub
xchg
cmps
not
les
movs
mov
dec
jle
aas
push
cmps
mov
push
adc
dec
xchg
movs
inc
xchg
(bad)
icebp
sbb
fld
in
mov
icebp
mov
sub
sete
in
and
pop
xor
mov
aaa
jb
add
lods
push
lahf
retf
nop
xchg
dec
test
mov
imul
stc
cmps
mov
sar
imul
xor
scas
sbb
xor
retf
add
mov
je
adc
mov
in
inc
xchg
xchg
mov
push
cs
scas
dec
int
push
shl
dec
popa
pop
addr16
adc
jl
call
test
arpl
xchg
cmp
or
add
or
lods
pop
jecxz
ins
fsubr
or
sbb
sub
mov
repz
bound
mov
loop
arpl
add
mov
leave
out
xor
stos
adc
cmp
xor
inc
repz
cmp
(bad)
adc
pop
cli
pop
je
cmps
pusha
into
test
mov
mov
lock
into
cmovb
xchg
mov
push
repz
retf
ins
push
cmp
jbe
mov
enter
inc
(bad)
out
and
or
nop
and
sbb
icebp
js
bound
out
push
js
out
push
cs
add
mov
cmc
cmp
mov
push
aad
sbb
outs
push
mov
lahf
sti
cmp
or
pushf
hlt
inc
retf
pop
lds
xchg
push
cmp
pop
jg
jns
pop
jns
jnp
push
sbb
enter
inc
dec
xor
adc
add
push
aad
pop
test
pop
pop
shl
inc
sbb
push
xor
pop
xchg
lock
add
jmp
pusha
pop
je
dec
or
push
lds
test
or
sbb
lds
call
out
mov
xchg
lods
mov
fdivr
dec
push
cmp
adc
mov
cmp
and
pop
pop
int3
fdiv
icebp
mov
or
int
push
xlat
cmc
inc
data16
push
push
arpl
imul
int
in
adc
repz
xor
mov
sub
int
loope
mov
adc
mov
add
pop
clc
inc
or
lock
sub
retf
mov
movs
dec
xchg
aaa
xchg
adc
loop
mov
jb
cmp
dec
cmp
push
inc
ds
xor
cdq
or
jnp
(bad)
(bad)
shl
inc
pop
sbb
ror
jecxz
cmc
cdq
in
push
fwait
jns
jmp
loopne
addr16
jmp
inc
or
neg
or
cmp
inc
cmps
jmp
repnz
mov
shr
into
leave
and
lahf
jmp
and
cli
add
addr16
push
jmp
cmp
lock
fidivr
es
call
(bad)
fimul
jne
(bad)
clc
pop
pop
sbb
push
loop
les
shr
xchg
aas
xor
sbb
(bad)
push
imul
mov
cmp
sbb
loopne
cmps
jbe
add
movs
sub
sub
fadd
out
pop
xor
nop
pushf
jl
or
push
out
push
add
xlat
push
mov
clc
bound
push
in
add
fnstsw
inc
mov
push
rol
movs
loope
inc
jmp
lods
in
xor
mov
mov
les
mov
inc
jg
mov
cmp
push
sub
loop
int3
xchg
sbb
jo
cmp
out
jb
cmp
mov
push
or
jmp
popf
dec
loope
hlt
mov
out
dec
jecxz
cwde
stos
pop
int3
mov
in
in
pop
mov
inc
int3
mov
aam
popf
mov
and
push
cs
pop
nop
jae
or
lock
sti
and
and
ins
ss
(bad)
jecxz
cdq
xadd
popa
das
lods
xor
push
xchg
ficomp
fnstsw
fld
aad
test
jno
lea
je
int3
push
popa
xchg
popf
mov
mov
test
test
in
ret
pop
pop
arpl
mov
adc
sahf
sbb
pusha
in
fcom
adc
ret
mov
and
push
sbb
es
hlt
adc
xchg
aad
fwait
cmp
xchg
sysexit
push
pop
mov
pop
shl
sti
inc
scas
jns
mov
or
iret
sar
outs
retf
scas
jae
in
(bad)
cmp
je
add
or
jnp
call
jp
mov
ss
jnp
imul
xor
or
movs
scas
mov
add
mov
lock
ror
add
call
lods
jns
dec
cmp
in
inc
push
enter
mov
test
sub
inc
(bad)
adc
call
mov
mov
push
lea
mov
lahf
out
jmp
hlt
rcl
fcomp
test
sbb
aaa
sbb
xchg
mov
ret
jmp
stc
dec
shr
mov
jb
add
sbb
mov
xor
mov
adc
cmps
pop
js
pop
outs
push
sbb
dec
jae
add
into
cmps
(bad)
fbld
popf
pushf
mov
jle
cmp
xchg
and
push
ja
(bad)
icebp
inc
cs
les
sub
das
and
iret
fisub
imul
repz
outs
pop
cmc
sub
xor
neg
mov
bswap
adc
ins
inc
out
inc
cmp
add
nop
retf
pop
mov
out
xchg
adc
xor
pop
cmp
loop
cld
push
ret
inc
push
adc
jno
(bad)
jns
sub
adc
lock
cmps
sub
inc
pop
scas
nop
test
cwde
shr
inc
sub
(bad)
fwait
push
pop
retf
sti
xor
and
jnp
mov
sahf
test
lahf
add
pop
test
sbb
sbb
imul
or
mov
push
lds
pop
xchg
hlt
mov
add
in
lahf
(bad)
fistp
mov
jmp
js
xchg
movs
jno
leave
lock
imul
mul
sub
aas
pop
dec
bound
adc
pop
push
sbb
mov
pop
(bad)
pop
fwait
into
inc
sub
lds
aad
mov
jmp
jmp
les
lods
mov
sbb
cmp
or
out
test
mul
repz
fsub
fdivr
int
into
out
(bad)
aad
or
fisub
jae
mov
popf
iret
out
mov
mov
and
cmp
loope
and
xor
and
mov
mov
retf
xor
inc
in
fwait
dec
fcomp
fs
mov
jmp
in
repz
sub
ins
inc
in
mov
xor
push
pop
push
jo
sahf
out
push
jg
dec
shl
xor
scas
test
push
inc
fdiv
push
add
mov
cwde
cmp
add
lahf
loope
movs
jne
xor
push
frstor
cmp
(bad)
fcom
mov
sar
sbb
sbb
mov
daa
loop
and
pop
addr16
fisttp
or
add
daa
sub
lods
call
mov
pusha
mov
push
mov
inc
mov
mov
fs
and
pop
or
mov
mov
inc
scas
leave
sub
inc
ins
f2xm1
das
std
sub
adc
icebp
cdq
(bad)
and
sub
pop
(bad)
in
adc
(bad)
int
aaa
cmp
lahf
jle
or
cmps
inc
test
lds
mov
ja
sbb
shl
into
sub
push
pop
scas
push
cmp
adc
(bad)
scas
sbb
mov
int
(bad)
ret
dec
pusha
sub
cmovs
pop
std
scas
iret
mov
and
jo
push
ret
pop
out
ss
adc
leave
cdq
popf
das
adc
ret
jle
(bad)
cmps
inc
xchg
jmp
xor
outs
in
std
and
push
leave
mov
sub
dec
inc
and
fist
add
loope
fadd
ins
out
fnstcw
sbb
inc
movs
inc
in
jbe
dec
sub
mov
push
in
dec
lods
xor
mov
xchg
jp
push
mov
fnstsw
movs
movs
sbb
dec
inc
push
lock
sub
mov
dec
daa
aas
gs
adc
mov
jne
inc
aad
ret
cmps
pusha
mul
xor
adc
pop
je
jmp
shl
cdq
mov
mov
rol
retf
test
xchg
cli
sub
cmp
mov
jae
mul
mov
add
hlt
mov
jp
mov
jg
jge
xchg
push
push
daa
pop
ins
inc
or
ss
test
out
dec
jne
inc
xchg
mov
and
jnp
fistp
fmul
ficom
push
inc
dec
call
xchg
mov
outs
stos
jb
xchg
hlt
or
pop
xlat
daa
test
jmp
loope
xor
ror
or
bound
xchg
aaa
and
sbb
out
sti
mov
pop
outs
pushf
rol
int3
push
in
stos
rcl
sahf
mov
sbb
(bad)
push
inc
in
gs
and
mov
das
js
push
mov
ret
or
mov
in
adc
mov
jle
bound
xchg
mov
rcr
jecxz
mov
cli
imul
push
mov
test
clc
push
xor
in
cs
cdq
adc
ficom
fisttp
neg
or
mov
xchg
out
pop
js
sub
add
pop
pop
pop
movs
movs
pop
dec
jne
push
mov
aam
clc
mov
mov
xlat
push
ds
push
add
xchg
adc
fcmovnb
call
or
push
dec
popf
pop
lock
dec
pop
mov
mov
xchg
(bad)
lods
addr16
sbb
mov
xchg
fwait
in
aaa
push
xor
lods
mov
jg
add
arpl
je
imul
lods
lock
and
add
sbb
jbe
mov
ret
inc
addr16
mov
and
push
mov
sub
imul
js
push
jp
cmp
loopne
lods
xor
mov
sub
retf
lds
push
div
jns
aas
and
inc
outs
dec
mov
ds
adc
push
mov
sub
add
retf
mov
jno
pop
mov
sbb
and
aas
mov
call
mov
jecxz
add
push
mov
cld
stc
sbb
inc
xor
iret
mov
scas
sub
cli
in
adc
push
dec
adc
cli
adc
enter
jnp
mov
xchg
mov
cmp
xlat
dec
lods
push
cld
jge
adc
adc
mov
xchg
(bad)
(bad)
nop
mov
mov
dec
pop
sbb
and
inc
dec
nop
fbstp
add
test
aam
mov
push
or
adc
ins
jns
stos
dec
iret
fcomp
jbe
(bad)
pop
fsub
test
adc
cmps
icebp
dec
add
dec
pop
fcomi
xchg
stc
jo
and
dec
les
movs
pop
add
push
pop
mov
sub
xchg
arpl
ret
xchg
ds
mov
or
push
pop
mov
shl
sbb
jecxz
xlat
cmp
lock
lods
or
sub
xchg
adc
mov
inc
ds
test
cmp
fmul
mov
lds
adc
scas
push
(bad)
outs
das
nop
dec
idiv
nop
or
push
push
xchg
mov
jg
mov
push
adc
jge
mov
aam
dec
and
xchg
inc
jmp
push
push
ss
add
jecxz
pusha
cld
add
dec
aas
or
rcr
ficom
or
inc
jbe
push
jge
dec
outs
cmp
xlat
push
inc
sbb
sbb
pop
(bad)
cs
cli
sub
out
add
jne
push
ror
sar
nop
sbb
iret
mov
push
(bad)
cdq
add
scas
sbb
sub
xchg
std
xchg
pop
sub
sub
jbe
push
scas
push
or
jnp
mov
fwait
mov
push
mov
rol
les
sbb
lahf
mov
fidiv
data16
lods
push
in
sub
pop
jne
push
int
mov
jmp
xchg
sub
jo
cmp
or
es
aam
popa
stos
dec
fadd
neg
xor
popf
loope
in
mov
jae
retf
add
dec
xchg
ret
in
hlt
jbe
jae
imul
movs
cmps
mov
lods
icebp
mov
jb
arpl
lahf
mov
sti
push
xchg
add
and
add
xor
and
aaa
mov
pop
test
hlt
xor
aad
not
push
ss
rcl
push
push
sar
cmp
cmp
cmp
mov
push
fcmovnu
jg
push
mov
sub
xor
js
inc
ret
sub
rcr
sub
fs
sub
pop
in
xor
xor
xchg
xchg
fimul
imul
lods
xchg
shl
dec
jecxz
iret
and
xchg
mov
jo
cmp
sub
or
xor
mov
sbb
sbb
cmp
push
pop
(bad)
sbb
inc
ins
jbe
dec
push
xchg
mov
in
inc
push
push
push
aam
push
add
movs
jnp
jnp
xchg
test
in
push
push
std
sub
and
mov
inc
pop
jbe
mov
xchg
daa
stos
mov
mov
lahf
pop
push
ss
(bad)
fmul
loope
dec
(bad)
pusha
inc
(bad)
fdivp
ret
(bad)
xor
pop
fild
and
sbb
jmp
mov
shl
popa
shl
and
sti
ret
int
imul
out
ins
lds
ret
sbb
xchg
in
mov
stos
push
outs
and
hlt
inc
ret
jne
retf
sbb
fwait
dec
or
jmp
cmp
mov
jg
mov
add
dec
pop
mov
dec
or
mov
out
fucomp
(bad)
push
xor
mov
mov
pop
mov
shr
xchg
fsubr
test
cmp
sbb
bound
or
aaa
mov
cmps
ss
xchg
aaa
sti
jecxz
push
dec
and
out
jne
add
add
mov
out
fld
pop
xchg
jmp
lea
ret
int3
jmp
jecxz
sub
jg
or
add
xor
mov
cmp
fdivr
mov
pop
jae
imul
rol
pop
push
mov
nop
mov
(bad)
js
(bad)
push
rcr
test
call
imul
push
rol
push
add
daa
pop
push
enter
div
ret
enter
fild
adc
xchg
push
repnz
mov
push
mov
in
inc
jo
rcl
(bad)
clc
in
idiv
mov
sbb
fmul
outs
sti
sub
sub
test
fnstenv
jo
inc
mov
and
and
fsub
gs
xor
add
test
out
mov
xchg
jp
out
popa
and
cmps
cdq
dec
mov
add
cmc
loope
mov
(bad)
mov
jae
rcr
push
lea
mov
adc
jle
aas
bound
ins
cli
mov
imul
jge
cdq
jl
dec
loop
push
push
sub
ret
ret
mov
pop
jmp
mov
xor
push
enter
int3
bound
bound
js
shl
or
addr16
int3
enter
(bad)
fmul
(bad)
fld
adc
pop
mov
inc
adc
dec
cmps
lahf
pop
and
adc
sub
mov
rcl
cmc
loope
das
push
mov
mov
pushf
iret
cmp
mov
popf
mov
(bad)
cli
lahf
ja
lods
mov
xor
fwait
loopne
in
pop
cmp
dec
test
jecxz
cmps
cmc
push
add
(bad)
rcl
mov
adc
and
xchg
std
inc
or
imul
push
mov
cmps
leave
fnstenv
dec
je
sbb
mov
add
stc
add
les
int3
(bad)
fs
rcr
loop
call
xor
test
pop
sbb
test
sbb
mov
and
add
inc
loopne
cmp
ficomp
cmp
cld
mov
or
bound
ins
push
xchg
pop
mov
mov
fs
dec
(bad)
int3
mov
mov
(bad)
sub
mov
or
in
or
cmp
push
xlat
and
shl
sub
leave
popf
inc
out
adc
xor
pop
add
or
int3
popf
cwde
dec
dec
sbb
push
jno
in
push
mov
inc
jl
cmp
in
inc
jle
js
jno
jb
fdivp
sbb
mov
xchg
repnz
xchg
sub
adc
mov
dec
test
in
inc
adc
sbb
jno
dec
mov
lods
loopne
pop
loope
pop
push
sahf
and
add
fadd
scas
scas
or
xlat
or
jecxz
scas
push
shl
sbb
push
(bad)
es
ret
and
jno
ja
jnp
daa
xchg
stos
jecxz
push
stos
popf
mov
sub
xlat
sbb
push
add
in
clc
xchg
dec
int3
fwait
pslld
push
xchg
not
push
mov
xor
add
loop
mov
dec
sbb
call
out
icebp
in
pop
jae
push
cwde
inc
loopne
sbb
or
and
ds
push
test
mov
jmp
xor
inc
pop
cld
adc
out
mov
rcr
cmp
call
inc
(bad)
pop
into
mov
xlat
push
jmp
sbb
in
ds
sbb
mov
into
push
cmp
xchg
rol
les
pop
int3
loop
and
jne
inc
imul
call
xchg
pusha
fstp
jmp
es
push
ss
in
shl
punpcklwd
ja
xchg
mov
jmp
add
ds
ret
add
rcl
or
imul
or
jne
outs
add
in
(bad)
ss
adc
xchg
aas
out
and
inc
cmp
inc
cmp
scas
mov
ds
pushf
xchg
cwde
out
(bad)
imul
gs
fisttp
rcl
fld1
sbb
hlt
ror
push
jg
xor
mov
outs
sub
(bad)
mul
sbb
mov
xor
shl
push
movs
loop
mov
jle
out
ss
jno
and
xchg
iret
cmp
dec
pop
mov
js
paddq
xlat
enter
pop
sbb
jmp
adc
(bad)
adc
ror
jae
arpl
sbb
neg
ins
jg
enter
sar
icebp
or
(bad)
lds
rcl
adc
fstp
pop
and
mov
mov
sahf
xchg
scas
push
push
jb
scas
sub
jno
mov
sbb
shl
jnp
mov
cli
jno
pop
sub
or
pop
les
sub
push
aam
call
sub
shl
test
lods
test
jmp
sub
pop
icebp
outs
mov
pop
dec
adc
cli
xchg
lea
(bad)
loop
int
shl
sti
mov
and
push
mov
lods
mov
cdq
fidiv
popf
call
push
(bad)
push
mov
mov
scas
(bad)
jno
bound
and
mov
mov
cmp
or
pop
test
mov
in
push
and
lods
pop
stc
push
pop
pop
mov
add
inc
xchg
push
and
jecxz
push
aam
fisttp
sbb
dec
push
xor
xchg
mov
inc
adc
in
xchg
and
pop
sahf
jl
pop
push
data16
imul
lahf
je
in
mov
mov
(bad)
popf
sbb
arpl
ins
jo
sahf
mov
sub
add
mov
aas
add
in
push
add
ret
scas
mov
cwde
cmp
into
push
(bad)
cmp
xor
ins
inc
je
(bad)
pop
pop
mov
and
pop
ja
cmp
fld
pop
movs
adc
shr
rcl
dec
xchg
(bad)
xor
xor
push
je
mov
adc
movs
out
adc
mov
xor
test
in
push
popf
jmp
(bad)
sub
push
jns
mov
mov
xchg
in
jmp
(bad)
hlt
sub
cmp
rcr
es
pop
scas
movs
in
add
dec
ud0
jno
mov
jmp
std
mov
clc
repnz
push
cmps
xchg
shr
add
movs
fwait
sbb
sbb
pop
hlt
mov
mov
ja
and
out
sbb
push
int
inc
popf
imul
fwait
aad
mov
dec
test
pop
sbb
ret
or
iret
add
fcmovb
jl
scas
das
mov
fdiv
mov
jns
iret
hlt
xchg
pop
retf
dec
dec
movs
es
sub
cmp
pop
hlt
jmp
repnz
mov
hlt
mov
cmc
pop
add
mov
pop
clc
jg
imul
cmp
and
aas
mov
or
aad
cmc
aad
pop
fnstenv
ins
adc
fwait
inc
je
daa
sub
dec
xchg
xchg
test
sub
popa
jg
cmp
loopne
and
cmp
div
lods
push
stc
dec
ins
mov
or
dec
mov
and
push
xchg
pop
mov
xchg
aad
push
jmp
icebp
inc
or
gs
jmp
outs
dec
xchg
test
xlat
js
(bad)
js
adc
lahf
jne
in
jb
shr
fidivr
cmc
dec
mov
push
cmps
retf
mov
mov
retf
sbb
mov
mov
adc
bound
or
in
inc
or
jmp
sahf
jmp
mov
inc
or
or
stos
int3
shl
imul
sub
out
dec
int
dec
dec
xor
jnp
mov
add
sbb
dec
dec
or
jno
clc
cs
pushf
add
inc
sbb
sub
lock
fsubr
xchg
cmp
cwde
inc
push
adc
sub
push
ins
dec
in
bound
pushf
cmp
fsubr
cwde
fld
jo
fbstp
and
test
mov
or
add
jmp
pop
xor
test
mov
or
(bad)
ins
into
mov
push
add
lods
pop
pushf
sub
ins
call
aad
cdq
loop
fisubr
and
add
pop
cmp
sub
sbb
or
push
jo
cmp
sahf
mov
mov
cmp
mov
inc
lahf
pushf
adc
pfadd
push
cmp
outs
out
pop
jmp
push
out
push
ret
add
sbb
daa
fdiv
or
sbb
pop
cs
lods
(bad)
unpckhps
dec
ss
lock
xchg
stc
xor
inc
cmps
and
pop
or
out
js
fnstcw
data16
loope
out
lds
push
sub
movs
fsubr
movs
arpl
mov
test
in
cmc
cwde
or
inc
cmp
movs
mov
sbb
xor
add
aad
xchg
rol
dec
add
xor
ret
jge
sub
sbb
xor
mov
fsub
lahf
xchg
add
pusha
rcr
out
jb
sbb
sbb
and
fldenv
mov
push
xor
aaa
cmps
retf
call
rol
sbb
loopne
or
pop
and
dec
xor
pop
cs
xchg
jo
out
imul
bound
mov
addr16
jae
jns
loope
inc
or
sub
jmp
xor
dec
pop
xor
and
cmp
(bad)
loopne
cmps
push
pushf
push
mov
bound
or
cmc
inc
(bad)
mov
jl
cmp
jmp
addr16
shr
repnz
test
rcl
or
shl
into
int
push
(bad)
rol
xor
xchg
push
jnp
std
adc
test
repz
(bad)
int
lods
inc
adc
call
cmp
sahf
add
fisttp
add
int
out
pop
cmp
mov
mov
leave
movs
cwde
sub
(bad)
stos
sbb
sub
loop
adc
out
out
je
inc
mov
repz
shl
jnp
stos
fmul
movs
mov
ins
gs
mov
bound
fistp
pop
(bad)
data16
push
es
jnp
pushf
popa
mov
rcl
cmp
stos
jo
stc
ret
repnz
and
xchg
or
add
sbb
cs
push
outs
pop
xor
mov
jmp
inc
repz
and
sub
pop
add
in
lea
pop
sub
sub
outs
loope
pop
loope
imul
repnz
fdivr
mov
(bad)
or
into
inc
retf
scas
test
mov
dec
sbb
mov
test
mov
push
call
(bad)
cmp
mov
xchg
movs
pop
(bad)
cmps
jmp
test
and
mov
fcmovne
sbb
ret
int3
(bad)
out
dec
cmp
leave
test
bound
and
mov
sub
movs
out
hlt
mov
pop
addr16
mov
test
enter
mov
jnp
pusha
hlt
cmp
push
fwait
sbb
xchg
pop
sbb
cmc
jns
cmc
push
loop
sub
fld
sub
jmp
mov
movs
loope
call
xchg
cmp
cmp
dec
stos
stos
inc
or
sub
and
add
imul
mov
mov
fcmovbe
pop
lods
pop
adc
xor
fld
mov
xor
stos
test
or
rep
out
cmp
cdq
scas
ret
mov
xchg
lea
pop
and
(bad)
cdq
sub
push
add
in
and
xchg
xor
(bad)
xchg
ds
cwde
aad
xor
aam
xchg
in
ud2
je
or
cli
dec
push
sbb
xchg
scas
out
movs
sub
push
cwde
lods
es
add
dec
dec
or
mov
(bad)
(bad)
mov
xchg
sbb
and
inc
in
add
cmps
fisub
leave
std
push
stc
jae
pop
push
pop
jp
hlt
lds
mov
jns
xor
cmp
mov
rol
test
or
popa
sahf
add
cwde
ffree
push
arpl
mov
mov
cmp
inc
push
es
push
das
push
inc
cld
lahf
loope
out
stc
push
push
sbb
mov
mov
stc
dec
dec
and
ror
jmp
cmps
xchg
and
adc
xchg
or
cmp
jp
ss
inc
addr16
sbb
mov
pop
pop
or
sti
or
inc
push
mov
fucomi
dec
data16
xor
adc
loop
clc
in
jmp
and
sbb
scas
inc
loop
jo
(bad)
call
mov
(bad)
test
cmc
cs
hlt
sub
outs
mov
cmp
lods
or
mov
push
js
xor
xor
sub
inc
imul
lods
mov
sti
scas
into
cwde
push
adc
mov
adc
outs
sub
pushf
in
mov
jp
iret
imul
scas
inc
iret
pop
jmp
arpl
xchg
cwde
xor
daa
in
pushf
leave
xor
xor
jg
inc
add
jb
mov
jmp
pop
sub
setno
mov
and
mov
in
and
xchg
push
ror
cmp
cmp
aas
cmp
or
push
xchg
inc
ins
call
cdq
mov
and
push
lods
inc
stos
sub
sbb
dec
push
add
fidivr
xlat
pop
or
das
pop
mov
lods
push
mov
sub
inc
add
scas
jmp
pop
push
inc
les
bound
(bad)
icebp
pop
inc
popa
mov
out
sub
imul
dec
lods
gs
adc
mov
(bad)
or
pop
mov
xchg
push
aad
xchg
mov
xor
jns
ror
jmp
cmpps
sub
test
mov
lods
aas
adc
cmps
or
rcr
and
adc
leave
inc
imul
dec
cmps
(bad)
cmp
mov
cli
nop
(bad)
ror
aaa
sub
inc
push
int3
lds
popf
lods
cli
jb
loopne
arpl
data16
repz
cmps
es
add
fsqrt
xor
or
cmp
int3
pop
adc
xchg
and
leave
mov
push
icebp
(bad)
rol
and
xlat
cmp
jl
pop
ins
dec
inc
xor
mov
call
adc
es
neg
add
lea
shl
dec
sti
push
out
xchg
or
adc
xor
dec
fyl2xp1
jnp
cmps
repnz
jmp
call
int
pop
jnp
or
cmp
cmp
jg
cmp
jmp
cmp
fwait
adc
jmp
int
xor
or
das
ds
and
mov
movs
int
das
xchg
jae
pop
out
inc
(bad)
cbw
leave
popa
pop
fs
out
movs
ret
pop
fdiv
cdq
fsubr
cmps
(bad)
cmp
push
daa
mov
push
mov
icebp
xor
call
or
sub
xor
enter
jl
sbb
das
jne
ss
lock
in
idiv
sub
bound
fisubr
mov
fs
add
or
bnd
inc
aaa
pop
cdq
pusha
pop
cmp
test
popf
sub
jns
mov
inc
shl
xlat
sbb
cmps
cmp
dec
mov
sub
shl
dec
or
shl
inc
adc
push
jle
into
fstp
lods
sbb
mov
pop
fwait
mov
and
xor
sub
jge
pop
cmp
nop
xchg
and
cmp
sub
js
xor
rcr
jge
aam
push
or
xchg
repz
arpl
imul
mov
fisubr
pop
mov
test
mov
adc
push
sub
adc
xchg
shl
pop
pop
mov
out
and
shl
or
jmp
sbb
repz
cwde
sbb
jb
jno
data16
mov
or
out
adc
inc
mov
outs
movs
lods
add
pop
sbb
push
or
mov
loope
pop
pop
popa
fisub
fs
push
or
cmp
and
adc
xor
cmp
sbb
in
enter
pop
in
hlt
jecxz
xor
cli
pushf
mov
test
scas
icebp
fbstp
pop
xchg
mov
mov
jg
xchg
daa
xlat
fcom
push
mov
add
mov
ret
(bad)
in
sbb
and
rol
mov
adc
adc
call
mov
push
fistp
mov
or
iret
out
jnp
adc
in
adc
mov
jcxz
pop
mov
stc
fmul
inc
(bad)
mov
aaa
aas
retf
outs
loopne
adc
inc
call
ret
xchg
js
enter
leave
xchg
movs
shl
xor
ds
xchg
jno
iret
cdq
fdivr
jge
cmp
xor
sbb
movs
repnz
push
xor
js
sbb
push
jno
cmps
or
sub
cdq
movsx
test
mov
cli
push
mov
push
adc
shl
cmp
push
mul
call
mov
cmp
or
jne
xor
jl
sti
cli
test
inc
adc
xor
out
in
inc
sar
movs
adc
mov
test
xor
xchg
mov
sub
inc
movs
fst
adc
xchg
mov
out
xchg
push
add
mov
and
adc
movs
jge
ss
cdq
por
xchg
dec
out
mov
cmp
mov
mov
fcmovbe
ja
call
cli
sub
mov
jno
out
shr
popa
shl
xchg
inc
in
aas
movs
aam
fst
xor
inc
mov
ficomp
inc
icebp
cli
stos
add
sub
and
dec
add
ret
adc
popf
mov
mov
into
ret
retf
pop
jns
outs
inc
cmp
cmps
xchg
xchg
lahf
out
fstp
leave
and
ins
into
pop
cmps
add
js
jmp
jge
xchg
inc
push
xor
sbb
clts
push
test
loopne
dec
loop
mov
inc
ins
fwait
sbb
push
fistp
mov
sub
mov
test
ret
ret
stos
or
xlat
xor
cld
mov
adc
xchg
pop
sahf
jp
popf
xor
xchg
repnz
add
cmp
and
pushf
jge
cwde
mov
pushf
push
or
mov
and
xchg
lds
aad
std
inc
loop
mov
stos
ins
(bad)
push
push
push
and
adc
dec
push
(bad)
in
xchg
fst
into
adc
loope
mov
adc
scas
push
push
icebp
fmulp
out
in
loopne
pop
(bad)
loopne
ss
jge
sub
jmp
cmps
arpl
imul
inc
pop
stos
jge
mov
mov
jp
mov
hlt
imul
inc
outs
sbb
loop
sti
(bad)
push
mov
jmp
dec
hlt
xor
dec
and
mov
lock
(bad)
push
jo
lea
cld
pop
sbb
mov
es
jo
xor
scas
inc
xchg
push
in
sub
out
push
mov
adc
mov
inc
pop
sbb
mov
int
adc
push
aam
mov
fistp
shl
stos
inc
retf
lea
aas
test
stos
push
push
jbe
mov
inc
int3
sub
xchg
mov
jl
mov
fdiv
(bad)
aas
neg
xor
add
movs
xor
into
mov
add
movs
ja
xchg
xor
fisub
mov
imul
mov
dec
cmp
xor
sub
or
mov
jo
ss
popf
xchg
data16
push
adc
or
mov
or
ret
sbb
fcomi
mov
dec
retf
(bad)
daa
popf
pop
pop
ja
jbe
in
sbb
push
push
jmp
cdq
dec
inc
xor
dec
stos
mov
xchg
mov
push
and
cmp
sbb
pop
retf
pop
ror
outs
je
jno
enter
or
cmp
dec
aad
mov
adc
inc
mov
pop
hlt
loopne
in
lock
xor
dec
xchg
aam
pusha
cmc
and
lods
push
imul
xchg
aaa
es
(bad)
push
mul
cmc
loop
fcmovnb
jmp
ficomp
mov
ret
pop
stos
test
ret
out
push
jle
jae
ins
mul
adc
mov
mov
sbb
in
arpl
add
mov
dec
sbb
pusha
arpl
fistp
dec
and
sub
popf
dec
hlt
mov
scas
lods
cmp
imul
add
pop
std
add
or
mov
xchg
arpl
arpl
aas
mov
adc
and
sahf
test
pushf
inc
sub
xor
ror
out
outs
aad
xor
xchg
leave
dec
sbb
(bad)
out
dec
add
fstp
mov
lods
pop
add
pop
idiv
jmp
mov
in
dec
add
repz
mov
test
xchg
cld
sbb
(bad)
fcom
mov
push
leave
mov
hlt
adc
mov
fist
daa
jmp
ja
iret
(bad)
in
(bad)
jl
cmp
int
pop
cmp
test
popf
bound
and
sbb
add
dec
fidivr
adc
sub
adc
lds
xor
lods
jle
dec
jle
in
jg
test
adc
cld
cmp
xor
push
xchg
cwde
inc
mov
push
stc
jge
xor
sahf
cmps
and
xchg
push
jg
bound
mov
push
xchg
repz
dec
cmps
or
push
mov
jp
pushf
add
fstp
mov
loopne
jecxz
aam
mov
jo
in
push
idiv
sahf
rcr
mov
adc
retf
adc
or
cli
inc
fdiv
bound
dec
mov
sbb
ins
mov
dec
es
ins
adc
lea
xlat
in
add
mov
nop
pop
in
add
(bad)
fldcw
xchg
retf
icebp
xor
loope
inc
icebp
fstp
sahf
mov
jp
gs
in
lea
ds
out
push
cmps
repz
cli
dec
or
neg
inc
xlat
scas
inc
cwde
or
mov
clc
cmp
adc
shl
outs
lahf
fsubr
push
outs
lock
mov
rcr
data16
jge
in
das
inc
fbld
xor
add
(bad)
cld
jbe
push
and
push
jecxz
fist
jmp
lock
dec
sti
call
inc
std
sub
jno
or
mov
shl
shl
aaa
retf
cli
setns
mov
pusha
or
xor
mov
cmp
adc
int3
dec
stos
inc
loop
int
int3
sbb
int
fnstenv
push
mov
call
dec
push
mov
loope
sbb
sbb
not
add
pop
dec
mov
call
(bad)
test
adc
ins
mov
mov
nop
sub
push
cdq
and
jnp
sti
fsubrp
iret
popf
call
jle
sbb
fistp
jno
add
push
mov
jge
clc
out
pop
dec
jns
mov
cmp
mov
lods
or
push
dec
push
(bad)
cmp
mov
repnz
pop
xchg
xchg
pop
jmp
mov
mov
loope
add
pop
jbe
call
inc
jno
push
inc
pop
fs
pop
mov
shl
(bad)
rol
sub
arpl
push
mov
jp
cmp
xchg
mov
push
nop
in
mov
cmp
fnstenv
mov
pop
mov
hlt
xchg
stos
popa
hlt
mov
cmp
xchg
pop
add
ds
in
ror
pushf
jmp
call
and
je
repnz
call
movs
or
pusha
cmp
cdq
inc
aas
test
mov
adc
test
outs
out
adc
adc
or
add
stos
adc
lods
dec
mov
rcr
ret
pop
pusha
fyl2xp1
lahf
cmps
sub
das
adc
jb
aaa
imul
div
xor
xlat
adc
xchg
bound
pop
pushf
js
ja
inc
and
idiv
sub
dec
add
jne
fld
pop
out
(bad)
add
ins
es
inc
es
inc
sub
xor
pop
xor
mov
sbb
out
int
repnz
out
jns
cmp
adc
stos
pop
mov
xchg
cmp
ss
(bad)
or
loope
stos
xor
into
or
inc
loopne
inc
mov
lds
nop
(bad)
fmul
out
mov
push
stos
mov
shr
dec
mov
pusha
popf
test
jp
ror
cmps
not
test
adc
sub
jae
add
add
lods
pop
or
clc
add
sub
pop
or
out
cwde
ficom
bound
xchg
aad
mov
xchg
jbe
push
xchg
cmc
in
(bad)
and
(bad)
fmul
rcl
pop
inc
and
out
scas
mov
pusha
inc
push
pop
cmp
das
mov
popf
sub
(bad)
mov
adc
js
mov
push
cmp
push
sub
xor
daa
adc
fidivr
popa
fistp
cmp
push
push
pop
shr
cmp
fst
gs
gs
pop
jmp
dec
or
mov
push
addr16
mul
mov
sub
sub
in
ins
out
or
dec
mov
(bad)
movs
jle
or
and
out
test
inc
xchg
push
and
pop
bound
pop
mov
xor
jns
and
and
xchg
jnp
pop
and
xor
fdiv
outs
xchg
lahf
call
leave
leave
or
dec
mov
xchg
push
movs
sub
sahf
shr
movs
cwde
mov
out
popf
add
mov
iret
fadd
push
mov
stos
cmp
mov
mov
stos
call
xchg
pop
jecxz
mov
enter
or
popa
dec
addr16
adc
xchg
xor
xchg
sub
push
test
test
add
frstor
and
sub
sub
fcomip
cmp
sahf
pop
add
pop
jmp
dec
cld
mov
xor
mov
adc
enter
mov
xor
fisttp
adc
arpl
sbb
jmp
(bad)
cmp
loope
in
or
outs
xor
jo
inc
sub
sbb
mov
(bad)
rcr
cwde
and
jg
cmps
into
sbb
das
imul
stos
mov
lea
cmp
out
push
cwde
jae
cmp
sub
(bad)
mov
xor
pop
dec
mov
pop
stos
jge
pop
fdiv
sub
rcl
cmps
call
push
scas
push
adc
pusha
movs
out
outs
aaa
in
and
leave
jl
pushf
xchg
add
ret
(bad)
mov
adc
and
cmp
mov
repnz
mov
mov
in
or
sbb
jbe
pusha
xchg
cmps
inc
ds
fs
cmp
or
and
sub
call
jg
xchg
popa
test
jne
jns
(bad)
sahf
xor
push
stc
leave
adc
ja
mov
sbb
call
mov
jbe
jecxz
xchg
jmp
bnd
mov
js
push
iret
xchg
adc
loopne
push
xchg
pop
dec
xchg
mov
fcomi
adc
daa
adc
in
dec
test
lods
jb
add
and
das
inc
cld
add
push
adc
push
cmp
mov
lods
cmp
inc
adc
cmps
adc
push
test
fst
sbb
lods
in
push
mov
cmp
sar
inc
mov
mov
cs
fiadd
pop
push
scas
sub
loop
aam
dec
hlt
jmp
mov
ss
mov
in
jne
sub
push
push
fidivr
push
inc
xor
xor
and
std
sbb
daa
sahf
pop
or
div
(bad)
push
adc
enter
imul
add
div
daa
retf
xchg
add
jbe
fsubr
xchg
xchg
dec
icebp
pop
push
jp
jle
xor
mov
retf
test
clc
push
add
mov
stc
xchg
push
in
xchg
mov
push
cmp
or
add
push
jge
(bad)
fdivp
add
dec
out
ret
cmp
xor
push
sbb
hlt
in
daa
lea
push
xlat
ds
dec
xchg
repnz
add
std
(bad)
xor
lock
push
sub
xor
repnz
jge
stos
aam
cmp
mov
mov
das
jp
daa
fsubr
addr16
or
cmp
scas
xchg
(bad)
sbb
lods
aad
dec
out
ror
dec
or
out
pop
push
jns
or
test
fiadd
xor
push
dec
sub
jbe
sub
lahf
pusha
cmc
inc
dec
loope
cmp
xchg
aas
jecxz
dec
push
scas
outs
pop
or
pop
inc
repnz
popa
mov
fisub
and
xchg
fsubr
push
add
inc
mov
out
adc
loop
aaa
js
mov
push
fnstenv
add
push
jmp
outs
js
stc
push
or
fistp
stos
popa
jge
or
fsub
cmp
cmp
lock
repz
(bad)
jb
cmps
pop
pop
je
or
call
mov
loope
adc
add
fbld
inc
push
dec
les
dec
aaa
test
pop
rol
cmovp
xor
jae
and
js
js
xlat
dec
ja
jno
mov
push
and
add
repnz
mov
lar
cmp
dec
ret
mov
fucomp
pop
pop
mov
rol
pop
jnp
adc
xchg
out
inc
call
arpl
into
out
call
push
dec
push
inc
pop
mov
retf
int3
or
push
mov
push
push
add
push
sub
pop
mov
inc
push
xchg
mov
cdq
inc
mov
mov
fs
sub
aaa
daa
daa
inc
xchg
ss
xchg
inc
addr16
push
aas
retf
lds
and
xchg
lds
enter
in
rol
push
ins
adc
sub
mov
(bad)
cmp
jns
not
pop
xchg
jmp
mov
cmp
cld
pop
test
mov
push
arpl
es
int
mov
adc
adc
or
mov
inc
lea
cmp
mov
popf
push
jp
mov
leave
push
mov
or
push
call
test
lock
sub
or
adc
ja
in
(bad)
mov
pop
inc
push
mov
in
ds
arpl
mov
push
ins
out
pop
and
in
inc
mov
daa
pop
clc
outs
cmc
jl
jl
in
jb
xor
inc
ss
xor
sbb
les
cmc
leave
arpl
ss
inc
mov
ret
outs
mov
nop
jg
push
push
cmps
fbld
test
jno
push
sar
sub
mov
inc
arpl
inc
sbb
or
jmp
mov
(bad)
pop
add
adc
rol
mov
int
and
ja
sbb
push
mov
pop
mov
sbb
push
outs
sbb
sub
add
popa
jbe
sbb
inc
sbb
lds
pop
fcom
fisttp
xchg
push
push
retf
data16
(bad)
push
sub
mov
(bad)
cmp
xchg
call
and
adc
cmps
xlat
aad
gs
mov
adc
cmp
nop
into
(bad)
xchg
and
ins
call
jge
or
mov
call
sbb
push
daa
sub
or
cmp
(bad)
xchg
add
mov
jne
jp
pushf
popa
jbe
lds
mov
repnz
cmp
mov
popf
mov
pop
call
repz
outs
sub
icebp
pop
push
xchg
inc
xchg
mov
dec
data16
xchg
xchg
pop
mov
aas
sbb
(bad)
lds
jne
xchg
jae
xchg
shl
out
mov
test
mov
call
scas
bnd
lds
out
and
dec
xor
jmp
daa
pop
les
fwait
push
mov
jecxz
test
jno
sbb
sub
cmp
adc
mov
(bad)
sbb
ds
or
lods
call
and
inc
cmp
lods
dec
(bad)
push
int3
out
sahf
sub
pop
or
cmc
mov
pop
test
sar
(bad)
movs
imul
js
sub
lea
push
js
jmp
mov
aaa
mov
jns
(bad)
xchg
mov
sub
cmp
int
cmps
mov
ret
pop
push
and
sub
sub
test
inc
ror
icebp
xchg
fwait
push
mov
(bad)
push
sbb
lock
sub
sahf
inc
dec
mov
sub
inc
fcomp
adc
arpl
inc
push
pusha
sub
mov
stos
inc
in
fs
cmp
push
in
add
and
fcomp
mov
aad
push
retf
(bad)
nop
jno
push
pusha
xchg
xchg
push
scas
mov
pop
sbb
out
jmp
inc
ret
sub
jmp
cdq
test
cld
push
nop
ficom
scas
imul
mov
mov
cmps
push
fld
fwait
cwde
lods
aas
aam
dec
enter
jns
cmp
add
les
mov
pop
adc
xchg
dec
inc
jl
inc
adc
pusha
dec
mov
mov
dec
hlt
popf
xchg
repnz
ds
pop
retf
retf
pushf
xlat
adc
mov
lods
fild
push
cmp
gs
lds
aaa
mov
sbb
loopne
inc
fcmove
paddusb
dec
inc
fld
mov
dec
inc
inc
scas
sub
js
xchg
in
sahf
pop
jbe
xor
inc
pop
dec
leave
pop
ror
jne
or
cmp
in
aad
not
js
mov
xor
fisttp
pop
cdq
addr16
jmp
jecxz
fild
arpl
ins
and
mov
retf
aad
jno
xchg
cwde
sub
add
jae
mov
jnp
rol
lea
mov
push
push
jo
xor
add
xor
adc
push
out
ins
dec
enter
test
fst
pop
cmp
ins
push
jle
shl
shr
fwait
movs
daa
leave
out
(bad)
outs
sbb
cmp
jae
dec
add
push
mov
sahf
pop
and
mov
or
(bad)
loopne
lods
and
ins
xchg
or
int3
aad
push
lods
lock
cmp
adc
mov
ror
pop
mov
mov
sbb
repz
push
(bad)
cli
fisttp
cmp
and
cmps
push
jmp
dec
sub
in
int3
cwde
(bad)
pop
sub
and
xor
rcr
rcr
push
cmc
gs
je
enter
loope
xlat
div
xchg
push
sub
ins
call
sub
and
retf
xchg
popa
pop
or
or
imul
clc
xchg
lods
jnp
or
cmps
xchg
ja
(bad)
shr
push
cmp
icebp
push
retf
mov
push
dec
adc
inc
int
lds
ins
inc
loope
lahf
in
data16
mov
xchg
xchg
push
(bad)
rcr
jle
sbb
pop
adc
mov
popa
pop
cli
jno
mov
shl
mov
mov
out
dec
jno
cmp
push
cmc
push
out
sahf
add
adc
jecxz
aaa
inc
repnz
sub
xor
xchg
sub
adc
stos
jo
repnz
dec
xchg
(bad)
lods
add
xchg
adc
xchg
cmps
or
jp
scas
lock
loop
push
call
test
fiadd
je
aas
jle
adc
adc
or
nop
pop
add
inc
or
and
icebp
iret
aam
mov
mov
xchg
sub
cld
jns
mov
lods
sbb
(bad)
adc
aaa
ret
bnd
mov
pop
and
(bad)
xor
adc
cmp
pop
mov
mov
jmp
mov
mov
stos
movs
add
in
outs
sub
icebp
pop
jmp
pop
addr16
pop
mov
cmp
test
jo
pop
les
fisubr
mov
xchg
inc
sub
je
inc
mov
jp
shr
inc
imul
loope
sbb
mov
xchg
or
ins
and
xor
xchg
sbb
xchg
gs
pop
inc
xchg
push
cli
std
pop
leave
inc
jge
int
adc
jle
out
jmp
xor
(bad)
enter
out
jnp
mov
pushf
mov
pop
inc
add
int3
mov
repnz
xchg
mov
test
aam
or
mov
arpl
inc
outs
jecxz
gs
xor
jmp
fwait
jmp
jge
(bad)
jno
push
xchg
out
jb
mov
or
pop
cmp
push
pop
mov
fiadd
jb
mov
repz
(bad)
xor
xor
cmp
cmc
or
xor
stc
cmp
push
lock
add
rcr
xlat
js
mov
jecxz
retf
xlat
pop
jle
xor
xchg
lahf
xchg
lods
ja
xor
fstp
sti
push
loop
bound
cmp
mov
mov
sti
into
clc
adc
fisub
sbb
jge
push
inc
fcmovnu
xchg
cmp
push
add
jb
add
nop
cmps
add
gs
in
aas
sbb
mov
jge
push
neg
cmp
int
dec
daa
cdq
in
je
cli
xchg
jno
jl
jecxz
add
jae
mov
push
out
xor
js
xor
dec
ja
mov
sbb
shl
jne
or
out
in
jno
(bad)
cmc
mov
leave
stos
out
or
pusha
jecxz
inc
sbb
pop
pop
ds
inc
out
imul
leave
test
sahf
dec
mov
jb
pop
add
mov
cs
aas
in
inc
cmps
scas
jae
ret
adc
pop
and
out
out
int3
test
inc
es
or
inc
inc
js
leave
fcom
dec
(bad)
fcom
fcmovu
inc
out
aas
jb
jmp
xlat
jmp
sbb
adc
mov
mov
pusha
pop
adc
pop
jp
rcl
xchg
cs
hlt
jge
dec
or
arpl
arpl
adc
jle
or
pushf
out
and
mov
or
int
scas
dec
pop
or
das
das
test
nop
push
push
test
sar
add
fist
add
xchg
dec
cdq
lahf
pop
cmp
outs
xchg
mov
outs
mov
shl
add
sar
cmps
cmp
in
and
cwde
sbb
mov
icebp
stos
test
out
iret
mov
push
aad
popa
popf
enter
into
cmp
(bad)
cli
mov
sub
aas
fs
or
outs
add
lea
adc
mov
rcl
fistp
mov
sbb
stc
inc
(bad)
mov
push
add
dec
xchg
push
push
lock
dec
cwde
xor
imul
sbb
cmc
pop
add
push
dec
ja
pop
xor
jecxz
and
stos
jge
int3
imul
sar
sbb
push
lds
imul
push
mov
dec
mov
xor
mov
sti
imul
mov
mov
cli
repz
xor
ins
sbb
and
(bad)
in
ret
dec
fst
mov
xchg
pop
call
sub
ficom
(bad)
retf
xchg
pushf
std
xchg
mov
fstp
mov
arpl
loope
mov
sbb
enter
popa
xchg
and
test
xor
xchg
ret
dec
push
mov
add
cmp
push
pop
push
aam
out
cmp
xor
adc
mov
cmp
cdq
test
jne
nop
pop
test
jl
retf
jbe
mov
ja
out
retf
cmp
jb
aaa
(bad)
out
mov
hlt
inc
icebp
and
(bad)
pop
hlt
jne
adc
xchg
jg
mov
dec
push
xlat
xchg
mov
dec
xor
push
aas
push
repz
cld
push
jno
pop
xor
sub
imul
dec
sub
cmp
mov
fwait
ret
mov
ss
mov
leave
inc
hlt
add
xchg
jnp
adc
jae
mov
push
retf
add
test
jae
test
(bad)
out
ss
popa
das
ret
iret
sub
mov
xchg
mov
lods
adc
daa
and
sbb
mov
sbb
adc
xor
popf
push
fmul
fidiv
push
mov
and
pop
repz
or
sbb
adc
xchg
sub
mov
in
or
mov
arpl
mov
ins
mov
loope
pushf
clc
inc
xchg
sub
add
mov
push
inc
mov
sbb
inc
in
mov
pop
sbb
xor
inc
cmp
jmp
adc
dec
pop
fs
add
pop
jmp
push
or
aam
jae
int
sub
inc
and
retf
mov
dec
fisub
mov
ja
and
adc
inc
(bad)
sbb
add
mov
jbe
aas
pop
xchg
jo
ror
outs
or
fisubr
aad
hlt
movs
icebp
and
mov
cwde
test
mov
xchg
or
pop
movs
shl
mov
add
retf
icebp
arpl
mov
lds
lock
icebp
icebp
mov
jnp
add
dec
dec
or
jle
adc
out
cmp
jbe
mov
movs
aas
jmp
out
xchg
loopne
mov
mov
add
pop
mov
int
and
push
xor
xor
je
inc
sub
sub
loope
inc
dec
pop
jb
loope
cmp
bound
stos
bound
xchg
cmp
fbld
jae
add
sti
pop
jo
cmp
jbe
call
dec
add
cmp
sar
shl
daa
fmul
mov
and
add
mov
shr
sar
xlat
into
bound
sub
pop
mov
sub
out
dec
fmul
mov
popa
dec
jae
sbb
int
sub
mov
xor
cmp
sbb
sub
xor
mov
mov
add
pop
push
mov
pop
sbb
aas
and
jle
(bad)
shl
(bad)
in
fidivr
je
mov
mov
icebp
faddp
add
mov
jl
cwde
jecxz
int3
popa
imul
inc
clc
or
mov
mov
std
cmp
xchg
cwde
jnp
in
mov
mov
jl
retf
jne
sub
in
data16
lahf
retf
pop
mov
out
test
sbb
push
xor
fsubr
sahf
repnz
jg
test
xor
test
dec
out
or
push
pop
mov
jp
mov
int3
imul
sub
imul
xchg
(bad)
dec
jg
sbb
or
sbb
sub
lahf
daa
jae
pusha
call
cwde
ins
inc
jmp
lea
cdq
jle
and
or
xchg
xchg
sar
mov
sbb
sbb
ret
sub
outs
pop
movs
add
in
out
xlat
inc
or
cmp
mov
and
jmp
push
inc
scas
mov
in
pusha
mov
(bad)
in
stc
cdq
mov
xchg
ja
cld
xlat
sbb
in
(bad)
mov
fsub
out
jl
or
dec
rcl
clc
xchg
cmps
sbb
dec
push
mov
mov
cli
mov
adc
ret
pop
pop
loope
push
jp
jne
mov
mov
imul
mov
mov
inc
cmps
sub
dec
mov
jecxz
aas
cld
pusha
mov
push
pop
stc
ret
test
or
or
(bad)
lock
adc
mov
loopne
pop
clc
outs
in
sbb
or
inc
sub
nop
xor
xor
fiadd
(bad)
out
out
or
fcom
lds
inc
imul
lock
mov
xchg
into
xchg
js
push
fisttp
jge
cdq
test
enter
jnp
jp
xor
hlt
(bad)
idiv
js
push
jmp
inc
loope
or
and
loopne
push
lahf
mov
inc
inc
fist
les
sbb
cmps
pop
mov
xor
(bad)
aam
dec
rol
call
push
mov
jle
xchg
xor
jne
(bad)
jbe
adc
je
push
sub
popf
jecxz
adc
mov
push
xchg
xor
out
pop
repz
cmp
cmp
movs
scas
push
iret
and
mov
daa
cmp
inc
dec
mov
xor
shr
or
xor
jno
sub
cmp
and
(bad)
sbb
cli
jb
push
out
daa
movs
ja
jp
mov
pop
hlt
mov
jnp
inc
mov
mov
ins
mov
out
mov
push
mov
hlt
scas
sar
ja
mov
enter
call
or
into
ret
add
lahf
sbb
les
scas
arpl
fist
dec
out
cld
rol
mov
pop
pop
ja
pop
mov
out
call
rcl
in
mov
or
aam
xor
lods
sbb
scas
push
pop
sub
in
(bad)
sub
aad
(bad)
cmp
inc
push
sbb
aad
out
(bad)
sbb
push
cmp
xchg
in
lock
and
stos
hlt
and
mov
and
and
loope
and
sbb
cmp
lock
dec
loope
sbb
aam
jmp
add
adc
jp
mov
or
xchg
pop
les
imul
cli
sub
(bad)
enter
(bad)
or
mov
sbb
and
movs
in
cmc
scas
jp
mov
and
sbb
int
xchg
mov
cmp
jmp
xor
xchg
xor
or
adc
lahf
or
(bad)
cli
pop
movs
mov
inc
xchg
mov
push
sti
(bad)
mov
and
popf
call
in
or
or
jmp
dec
test
out
pmaxsw
adc
mov
lods
push
das
aam
lock
test
arpl
mov
out
jle
add
cmps
add
stos
loop
into
add
adc
enter
push
add
mov
sbb
jb
pop
sub
add
sar
jle
xchg
fild
jno
jne
adc
fwait
cli
push
pushf
mov
js
shl
mov
ret
gs
jl
jmp
pushf
leave
xchg
mov
test
aam
mov
push
push
mov
inc
jbe
or
lahf
ds
inc
fldlg2
dec
adc
and
mov
mov
ror
sbb
cmp
mov
aas
cmp
mov
icebp
xchg
movs
xchg
out
out
cli
sub
call
bound
mov
lds
adc
mov
jbe
pop
hlt
mov
ret
xchg
in
shl
jns
imul
pop
dec
sbb
mov
aaa
dec
jmp
sub
pop
jmp
je
xchg
sbb
in
cmp
scas
leave
ret
mov
inc
dec
ss
into
es
sub
xchg
retf
jge
lock
dec
cwde
dec
or
fld
push
imul
pop
test
out
aad
inc
lock
cmp
les
iret
ret
cmp
cli
jbe
mov
fdiv
jne
add
dec
dec
inc
adc
jns
sar
retf
ss
and
sub
call
ror
in
add
popf
out
jecxz
aaa
and
push
icebp
inc
loope
xchg
push
cmps
dec
or
cmps
sub
pop
add
mov
pop
stos
mov
(bad)
xchg
in
pop
xchg
popa
retf
sub
retf
ja
aam
pop
inc
popw
push
adc
pop
rcl
dec
jns
outs
pushf
xor
repz
sahf
sub
loop
push
mov
add
and
adc
aam
and
aaa
aaa
daa
or
inc
leave
xor
add
mov
dec
jo
sahf
bound
ja
mov
pop
outs
push
fisubr
or
pop
cs
xor
enter
xchg
add
lods
scas
jno
sbb
fadd
sub
jb
mov
mov
mov
in
test
retf
in
push
mov
mov
stos
imul
in
inc
xor
ds
jp
and
movs
mov
movs
inc
dec
mov
sub
sahf
repnz
lea
xchg
pop
inc
mov
pushf
mov
xchg
adc
push
or
std
stc
aas
cmps
jmp
cmc
and
bnd
inc
mov
adc
mov
dec
sbb
iret
out
jmp
cs
daa
or
scas
sar
imul
in
push
imul
loope
popf
mov
inc
ror
jmp
sbb
in
pop
jb
inc
or
xor
movs
imul
dec
add
mov
out
mov
int3
add
ret
adc
(bad)
jne
in
call
xlat
mov
or
xor
mov
fdivr
sub
addr16
and
dec
mov
adc
in
or
scas
int
es
cli
inc
push
cmp
imul
add
aad
mov
and
sub
out
into
mov
je
add
mov
cmps
stc
xchg
dec
inc
push
daa
sbb
ss
stos
xor
(bad)
dec
cli
xchg
or
lahf
push
ins
xchg
lea
cwde
nop
fmul
mov
aas
xor
jl
mov
mov
pushf
add
or
ret
aas
jnp
inc
retf
imul
jl
fs
and
ins
pop
es
sbb
out
and
in
dec
adc
bound
jnp
test
or
loope
rdtsc
cmp
mov
(bad)
movs
xor
jmp
add
jmp
or
in
aam
pop
idiv
test
inc
arpl
inc
mov
dec
jge
test
mov
imul
(bad)
iret
out
mov
js
fstp
aaa
mov
inc
inc
add
outs
and
test
mov
fldenv
ja
mov
or
jmp
sahf
add
cmp
in
xchg
cli
sar
sub
xor
loop
push
jp
ficom
adc
sub
jno
out
fsub
mov
pushf
dec
pop
mov
cmp
lods
stos
dec
xor
(bad)
out
nop
push
cli
mov
mov
dec
js
dec
outs
shl
sbb
lock
out
in
push
mov
cmp
loopne
js
js
gs
sub
jne
rcr
ret
or
(bad)
push
or
sbb
adc
jae
test
aam
cmp
repz
cmps
jle
dec
inc
mov
pop
pop
out
in
adc
mov
jmp
cmps
mov
sar
(bad)
int3
jp
jmp
imul
jns
stos
icebp
js
or
shl
jo
outs
adc
test
push
pop
fstp
ds
fwait
(bad)
adc
test
dec
es
jle
sub
mov
call
xchg
clc
std
arpl
push
push
sub
clc
xor
mov
stc
mov
jb
ds
sub
mov
into
pop
adc
jo
add
cdq
sbb
ins
mov
sar
xchg
push
(bad)
out
adc
leave
adc
popa
(bad)
lahf
and
ror
aas
mov
(bad)
mov
stos
add
xor
xlat
scas
scas
imul
or
imul
adc
in
jl
push
sub
jb
cli
mov
popa
xor
aad
jmp
jmp
pop
ret
ins
pop
jo
mov
mov
stc
mov
push
(bad)
iret
mov
pop
inc
pop
int3
pop
pop
sbb
daa
in
out
cmp
aam
fstp
mov
out
out
(bad)
cmp
aas
pop
imul
arpl
xor
stc
ret
pop
ins
push
fnstenv
adc
lods
sub
pop
fs
inc
mov
inc
jl
cwde
mov
popf
je
jno
mov
cli
call
data16
out
push
xchg
loop
fimul
inc
aas
mov
mov
sbb
icebp
push
mov
xor
repz
leave
enter
shr
or
pop
fld
inc
int
adc
xchg
sbb
sbb
sub
daa
jae
adc
ss
repnz
push
jae
shr
sub
retf
out
(bad)
mov
(bad)
int3
sub
retf
mov
popa
push
ret
xchg
ret
lds
add
inc
xor
pop
sbb
mov
adc
rcr
jne
cmc
cs
adc
add
jmp
stc
aas
xchg
inc
mov
fiadd
sbb
sbb
leave
jns
in
cmp
xor
clc
outs
cmps
sbb
test
push
(bad)
nop
in
jo
xor
push
das
sub
imul
call
mov
test
push
je
sbb
call
(bad)
rol
jb
cmps
and
pushf
jge
aam
fild
jmp
ret
lods
xor
outs
lahf
pusha
es
mov
stc
mov
and
xchg
les
lds
das
cmp
iret
imul
stc
pop
idiv
push
xchg
sbb
mov
sbb
hlt
int3
out
ins
sub
xchg
sbb
push
inc
sbb
int3
mov
fdivr
xor
in
(bad)
js
imul
mov
outs
or
ds
aas
add
adc
mov
daa
or
mov
into
xlat
arpl
mov
mov
push
push
xor
jp
mov
in
or
loopne
es
push
push
into
push
(bad)
and
sbb
fst
imul
xor
ja
popf
pop
movs
pop
out
cmps
sub
push
push
in
hlt
ss
pop
cs
inc
jae
dec
sub
sqrtps
xor
ja
loopne
push
dec
cmp
cmp
push
add
add
mov
add
fimul
test
jae
bound
mov
repnz
aad
push
test
and
adc
sub
adc
jmp
push
icebp
ja
adc
or
mov
mov
push
outs
ds
cld
ror
mov
cmc
pop
add
mov
ret
sub
(bad)
jmp
or
popf
ins
out
lock
idiv
mov
js
hlt
adc
mov
das
add
cs
mov
pushf
or
xchg
push
cmp
sbb
jne
adc
cs
dec
lods
imul
je
scas
xor
or
push
imul
out
and
aas
cmp
jle
mov
cmps
mov
mov
loopne
and
test
jne
out
cmps
xor
rcr
add
push
aad
xchg
xor
mov
stos
mov
adc
xchg
xor
lahf
cmps
xor
mov
sar
fstp
shl
gs
add
iret
imul
and
sahf
sub
(bad)
in
neg
xchg
jecxz
add
add
jbe
xchg
test
push
loope
sub
cmp
rol
test
lods
rol
cmp
xchg
dec
mov
and
mov
stos
sbb
jno
mov
adc
inc
cmps
aam
jecxz
test
fidivr
push
jb
adc
inc
jp
mov
loop
pushf
mov
cdq
mov
int
push
add
aam
cmp
jno
popa
xchg
lea
in
(bad)
mov
test
daa
mov
or
out
and
lods
fisub
xor
test
frstor
out
int3
xor
into
movs
(bad)
xchg
add
movs
push
jp
sbb
jge
xchg
ja
imul
cli
stc
push
cld
jg
adc
or
rcr
dec
ss
xor
jg
int3
push
jmp
jbe
inc
mov
mov
sbb
cld
cs
push
jge
sbb
dec
aam
pop
mov
nop
in
xchg
inc
push
inc
fimul
test
outs
sbb
jl
jne
adc
xor
ins
push
jne
mov
fwait
sbb
sbb
sbb
mov
nop
mov
pop
test
push
repnz
mov
push
arpl
fnsave
fadd
xchg
pop
pushf
fnstcw
pop
add
mov
inc
jae
pop
mov
fnstsw
dec
adc
cmp
cli
sbb
cmp
lea
adc
inc
cld
inc
pop
sbb
mov
adc
sti
adc
jns
repz
pushf
sbb
lods
idiv
mov
fimul
fwait
jb
or
rol
(bad)
ins
int
stc
push
cmp
pop
arpl
scas
retf
cmc
iret
jnp
shr
dec
ret
je
add
pop
gs
jle
dec
push
pop
adc
es
retf
and
aas
pop
imul
imul
sub
cmp
and
fwait
call
cdq
dec
and
xor
and
cmp
cs
push
cmp
xor
sti
jo
in
lds
mov
jmp
push
mov
sahf
pop
ror
in
mov
movs
dec
add
movs
imul
das
mov
inc
imul
pushf
xor
push
les
mov
mov
ret
mov
mov
pop
cmp
sbb
fld
scas
pop
in
fiadd
cmps
or
push
sub
cmp
ret
repz
stos
out
jle
sbb
or
xor
push
test
cmc
xchg
sahf
inc
shr
push
int
retf
jae
aas
stos
les
out
add
mov
adc
push
and
xchg
xchg
sub
movs
out
and
dec
dec
(bad)
dec
dec
lock
aam
dec
add
std
and
push
clc
sub
call
jb
nop
add
adc
dec
pushf
dec
xchg
out
in
cwde
adc
xor
push
stos
sbb
in
sub
pop
pusha
add
das
cwde
add
sub
mov
gs
sub
push
loopne
sub
aam
xchg
xlat
jle
cld
or
push
jns
jmp
xor
mov
add
cmp
mov
xchg
movs
xor
adc
or
pop
pushf
iret
push
scas
jb
loop
fmul
lods
or
mov
mov
and
and
or
pop
sub
xchg
mov
and
push
jbe
jmp
or
shl
push
dec
mov
jno
call
stos
aam
pop
mov
inc
adc
call
and
mov
fistp
inc
mov
sti
inc
and
jb
loope
jle
cmp
pop
add
sbb
mov
out
test
scas
add
hlt
pop
adc
sub
in
jne
callw
retf
out
cwde
xchg
xor
scas
pop
adc
mov
fistp
sbb
and
inc
pop
inc
nop
into
ins
je
xchg
mov
stc
test
pop
outs
and
xlat
cmp
pop
hlt
and
cmp
sar
retf
aam
push
jns
fsub
enter
gs
push
shl
mov
pop
out
lock
ja
in
js
outs
or
ficomp
sbb
jmp
and
ins
lahf
ja
fs
push
sahf
jge
sub
jnp
mov
cmp
cmc
push
jne
sbb
mov
xchg
or
pop
xor
sub
or
push
(bad)
cmc
mov
push
sub
arpl
(bad)
sbb
mov
cwde
add
jp
fcomp
aam
mov
stos
cs
adc
call
or
cmps
enter
cld
and
sbb
hlt
int3
adc
adc
xchg
rol
adc
or
ja
jno
leave
test
outs
inc
bound
mov
push
mov
mov
push
mov
xlat
mov
hlt
jp
ror
and
cmc
xchg
xchg
xor
or
jo
mov
mov
mov
mov
ficom
out
lods
pusha
dec
ja
sub
jle
mov
mov
jge
loop
in
les
push
sub
cmp
cld
or
out
sbb
push
scas
loopne
in
lahf
popa
sbb
test
jb
mov
mov
sub
xchg
test
or
in
jno
out
aas
clc
ficom
mov
call
stos
jge
sub
and
fidiv
and
cmp
retf
jnp
dec
repnz
pushf
or
and
push
mov
stos
out
enter
jp
and
pop
mov
push
push
or
xchg
push
jnp
fnstenv
(bad)
xor
out
js
dec
mov
test
icebp
ret
pusha
fwait
call
mov
dec
add
jno
ret
push
and
jb
push
adc
mov
gs
sbb
or
inc
inc
bound
jb
fld
jns
mov
rol
test
jmp
arpl
add
stos
jge
iret
aaa
aas
rcr
arpl
outs
adc
pop
push
test
repnz
dec
add
stos
pop
sahf
xchg
mov
add
fsubr
adc
inc
xchg
mov
xchg
push
ins
das
shl
arpl
xchg
or
mov
int
pop
pop
and
lea
int3
mov
inc
jne
icebp
loop
hlt
loop
hlt
ret
cmp
jbe
jmp
in
ds
out
das
cwde
cs
fisubr
add
push
stos
xchg
inc
es
mov
mov
(bad)
out
xor
iret
ficomp
mov
rol
xchg
sub
add
pushf
shr
push
ins
add
inc
retf
fadd
cmp
inc
jbe
cs
dec
cmp
pop
aaa
pop
mov
into
push
push
and
mov
adc
xchg
into
adc
inc
shl
pop
int
test
scas
mov
ins
fisttp
sbb
cmc
(bad)
cld
jecxz
jnp
jmp
push
out
sar
bound
ret
pop
pop
test
stos
xor
icebp
imul
ins
cdq
push
xor
mov
ins
dec
sbb
(bad)
out
fld
mov
into
inc
dec
cmp
cli
into
jbe
and
cld
aam
xchg
sbb
xor
mov
int3
sub
jae
test
push
dec
add
push
mov
pop
(bad)
push
cmc
mov
movs
xchg
pop
fldenv
dec
rcr
movs
mov
mov
(bad)
jno
cmps
sbb
xchg
xchg
mov
inc
jae
or
push
cmp
retf
cmp
jae
imul
stos
prefetcht0
dec
push
mov
jne
xchg
push
in
shl
mov
pop
out
and
push
adc
push
cdq
and
sbb
jg
call
sub
sti
fistp
lods
sbb
jmp
(bad)
cmps
imul
jp
in
daa
(bad)
mov
popa
int3
mov
xchg
xor
shr
adc
sahf
sub
pop
inc
fidivr
in
es
push
xor
mov
and
cwde
rcl
jne
fs
sar
retf
mov
push
into
icebp
in
mov
fxsave
xchg
push
xchg
pop
xchg
pusha
xchg
jb
(bad)
mov
pop
call
aaa
cmp
pop
das
lahf
mov
(bad)
dec
and
mov
stos
jg
fsubr
mov
loop
into
add
inc
popf
int3
jae
jne
and
enter
and
sub
lea
push
mov
mov
std
add
jl
adc
jmp
out
dec
xcrypt-ofb
cmps
jmp
loop
test
mov
bound
mov
mov
adc
ss
pop
push
sub
mov
push
cdq
xchg
call
mov
adc
mov
xor
or
std
jge
add
sub
nop
into
fucomp
outs
xor
shr
dec
dec
lds
push
dec
sahf
lods
xor
xchg
sub
jmp
iret
imul
shr
xlat
sahf
retf
call
mov
stos
sbb
imul
das
rcr
(bad)
sbb
mov
lds
addr16
add
(bad)
in
lea
(bad)
dec
adc
pop
mov
mov
push
dec
jl
xor
xor
aas
dec
add
mov
pusha
mov
push
dec
xchg
stos
or
loop
or
aas
dec
aad
(bad)
test
jmp
neg
outs
cmp
cmp
dec
pushf
jmp
cdq
clc
xchg
ret
sbb
movs
bound
icebp
mov
shr
popf
or
and
push
scas
popa
pop
pop
sub
inc
lea
lods
mov
out
cmp
jmp
mov
cld
fld
scas
stc
adc
sbb
xchg
lds
or
inc
shl
lds
dec
dec
or
adc
movs
mov
push
xor
or
movs
pop
mov
pop
dec
cwde
shl
push
into
scas
sub
js
ror
imul
sbb
inc
call
(bad)
icebp
je
mov
in
or
lock
(bad)
sbb
nop
pop
mov
or
pop
xchg
cmps
sbb
xchg
dec
mov
out
scas
or
jecxz
pop
xchg
pop
pop
dec
sbb
je
lods
push
rcl
icebp
push
adc
jmp
xor
test
inc
ficom
je
adc
nop
xchg
test
jl
push
fsubr
xchg
cmp
scas
pushf
jae
or
shr
push
out
iret
out
jbe
stc
jnp
mul
(bad)
jmp
stos
sbb
mov
loopne
aaa
retf
adc
(bad)
data16
add
jnp
xchg
outs
jnp
fs
cmp
rol
cmc
cmp
jle
scas
fistp
stc
or
xchg
mov
pushf
sub
bound
jp
pop
push
sbb
sub
mov
jne
cmp
adc
jb
dec
xchg
rol
mov
imul
push
fdiv
int
mov
and
cmps
inc
xchg
inc
jbe
dec
adc
arpl
shl
ins
icebp
cli
sti
dec
add
pushf
rcr
jo
shl
sub
fcmovbe
hlt
out
gs
in
xchg
fisub
mov
aaa
mov
or
jb
test
push
mov
dec
xor
rcr
bound
inc
mov
inc
push
test
popa
test
or
jne
fidiv
adc
out
cmp
sbb
mov
and
add
cli
cdq
adc
sub
and
data16
push
and
popa
aad
xchg
or
test
(bad)
mov
jnp
jle
pop
fsubr
call
sbb
or
and
mov
pop
add
jae
aas
daa
je
mov
inc
(bad)
xor
jp
ins
loopne
jae
jne
xchg
(bad)
lock
jbe
test
loop
and
cwde
imul
jo
aam
xor
jmp
sbb
mov
iret
ss
sub
sti
or
dec
les
push
imul
mov
ins
outs
push
jb
popa
scas
jp
dec
jle
cmp
push
inc
or
and
mov
sub
sub
add
in
(bad)
out
scas
lea
xchg
pushf
push
inc
and
push
cwde
mov
push
mov
cli
fdiv
out
dec
sbb
cdq
and
enter
data16
sub
leave
mov
xchg
mov
cmps
cmp
fld
dec
cwde
add
xchg
inc
pushf
(bad)
xor
xor
sbb
xchg
loope
jbe
repnz
leave
stc
mov
or
cmp
std
(bad)
push
mov
add
mov
loope
nop
les
and
imul
cli
xor
(bad)
cli
xchg
dec
push
fst
xor
push
jnp
cld
mov
cmp
test
ror
xchg
and
ror
lods
ret
xchg
int
aam
out
add
adc
push
dec
mov
dec
mov
mov
ret
ins
call
pushf
stc
inc
sub
lds
fdivr
in
jb
enter
xor
push
sbb
sti
fdivrp
iret
outs
add
rcl
bound
in
pop
or
xor
sub
lods
(bad)
movs
sub
fs
adc
push
xchg
jo
sub
and
ja
mov
je
xor
(bad)
mov
push
(bad)
jns
push
(bad)
mov
cli
retf
iret
pop
jg
aas
and
dec
pop
adc
mov
cld
xchg
mov
(bad)
loope
and
aaa
sub
or
loop
neg
cmp
mov
scas
pop
cwde
xchg
ret
sub
dec
lods
leave
mov
je
jl
daa
xor
fnstenv
push
arpl
(bad)
xor
sbb
jno
out
cmps
pop
add
(bad)
mov
fiadd
add
add
rcl
push
jns
inc
pop
xchg
mov
sti
out
and
jl
mov
shr
popf
jle
cli
sub
enter
(bad)
out
mov
(bad)
in
ror
push
pop
jmp
lods
out
pop
adc
ret
rcl
pusha
jge
leave
sti
out
stc
cmp
sbb
sbb
adc
bound
cwde
jnp
pop
rol
test
add
ficomp
xchg
stos
mov
loope
mov
vmwrite
rol
dec
loop
ja
(bad)
gs
aaa
push
ficom
bound
xchg
lods
push
sahf
xchg
cs
ss
xchg
sbb
cmp
sbb
imul
cdq
mov
ds
call
mov
inc
adc
fsubr
stos
xor
imul
inc
movs
xlat
push
sbb
movs
inc
fisubr
push
sbb
aad
cdq
out
adc
inc
xchg
std
addr16
movs
mov
fist
or
cmp
sub
hlt
lock
call
jge
retf
andnps
cmc
mov
test
jmp
es
pop
fcom
lods
push
mov
add
test
jne
mov
dec
(bad)
out
mov
hlt
fiadd
mov
sahf
mov
adc
mov
adc
or
scas
sub
or
rol
sbb
(bad)
mov
or
sub
cdq
ds
repnz
out
sub
in
sbb
fnsave
cmps
inc
sahf
cmp
inc
(bad)
jb
lahf
jmp
dec
pop
cs
lods
scas
stc
mov
and
nop
js
xor
add
xor
shr
sahf
(bad)
mov
xor
sub
mov
pop
das
or
stos
adc
sub
xor
ins
mov
ja
lds
pop
scas
jo
jo
jmp
or
das
xor
fimul
pop
lock
loope
dec
retf
jmp
jmp
out
and
mov
jl
scas
leave
cmps
jge
fld
lods
gs
xor
sub
in
inc
mov
and
jp
lahf
test
es
mov
aaa
pop
xchg
pop
jnp
and
inc
out
loopne
mov
lods
(bad)
call
mov
adc
movs
and
or
scas
mov
scas
and
inc
sbb
das
dec
mov
(bad)
mov
mov
xchg
mov
or
in
nop
rcr
ja
mov
cld
(bad)
pop
pop
cmp
lods
outs
adc
enter
cld
lock
pop
pop
cs
push
mov
pop
(bad)
mov
xor
lds
sub
rcl
jle
jl
push
popa
xor
add
mov
xchg
cmp
mov
dec
xor
int
xor
jnp
mov
test
sbb
mov
mov
out
push
lock
mov
jae
xor
dec
movs
mov
push
mov
mov
enter
das
icebp
jno
push
pop
cmova
fild
arpl
mov
cmp
movs
xor
add
adc
xchg
sbb
push
sbb
mov
imul
push
test
rcl
(bad)
std
imul
popa
mov
inc
aaa
clc
outs
imul
push
mov
not
sahf
xchg
push
sahf
dec
js
adc
out
jae
(bad)
lds
cli
ja
gs
mov
sbb
lods
lahf
mov
mov
push
scas
loopne
sbb
sub
inc
ja
add
jnp
aam
adc
mov
out
xor
and
data16
xchg
mov
call
fdiv
cld
mov
shl
inc
gs
push
sub
out
and
xchg
mov
mov
add
push
xor
jg
movs
or
sbb
push
sbb
fwait
inc
xchg
imul
xchg
gs
inc
xchg
mov
or
pop
adc
int
sbb
sbb
xchg
and
fs
mov
iret
fwait
call
aad
ss
adc
mov
jae
fsub
pusha
sbb
fdivr
sub
cdq
or
push
pop
mov
push
aaa
or
hlt
outs
or
pop
sbb
xchg
push
leave
mov
mov
mov
jp
popa
mov
mov
mov
mov
push
and
dec
sub
(bad)
pop
retf
iret
icebp
push
loop
call
jb
lds
xchg
push
(bad)
fisub
jg
sbb
mov
jne
adc
movs
popa
loope
movs
test
mov
sub
clc
(bad)
loope
lahf
cmc
loop
jo
fcomp
(bad)
addr16
fdivrp
or
mov
xchg
call
std
outs
mov
push
or
test
aam
test
mul
aad
stos
rol
outs
sub
test
and
leave
sub
cli
push
imul
xor
in
mov
inc
inc
mov
stc
and
pop
call
inc
pop
jne
jg
mov
xchg
(bad)
shl
xor
sbb
xlat
shl
rol
dec
xchg
inc
arpl
pop
enter
mov
test
pop
lock
and
test
cmp
and
imul
mov
pusha
cmp
mov
mov
imul
and
lahf
xchg
hlt
cmp
inc
xlat
push
ss
mov
repz
push
xlat
and
lahf
push
inc
dec
(bad)
xchg
je
xchg
ins
push
shl
retf
das
cmp
jge
ret
loopne
aaa
fs
pop
or
movs
out
fdivr
lea
outs
mov
mov
sbb
call
fbstp
test
frstor
or
inc
jbe
push
jle
lods
int3
sti
jmp
(bad)
je
xchg
pop
test
mov
cmp
add
fwait
in
push
mov
or
mov
ds
add
shr
bound
jle
jmp
cmp
jmp
(bad)
fsubr
mov
repz
(bad)
adc
push
aas
cwde
les
mov
repnz
mov
mov
test
mov
lock
xor
out
push
mov
addr16
mov
(bad)
nop
leave
das
leave
or
inc
inc
rcr
hlt
xor
push
push
sbb
inc
retf
mov
mov
inc
or
xor
mov
stos
movs
inc
xor
pop
push
(bad)
pop
sbb
scas
mov
mov
push
adc
dec
and
popf
popf
fwait
xor
mov
repnz
aaa
fwait
popa
(bad)
or
rcl
(bad)
rcr
inc
out
adc
les
arpl
mov
js
test
loope
adc
div
jno
mov
dec
shl
(bad)
jno
nop
pop
xor
add
scas
shl
cld
xchg
dec
pop
or
sahf
add
add
into
aam
scas
ret
in
test
retf
push
jmp
add
mov
pop
fstp
shl
out
fimul
xor
pop
gs
leave
rol
push
sub
push
sbb
jo
clc
xchg
nop
jp
sub
arpl
nop
(bad)
cmp
in
jnp
mov
mov
adc
outs
ror
add
xlat
arpl
int
adc
loopne
mov
(bad)
cld
div
sub
push
mov
xchg
sbb
retf
fdiv
retf
adc
sub
popf
loope
cmps
pop
adc
inc
sbb
mov
push
bound
and
loope
pushf
sar
cwde
jmp
retf
dec
cld
push
les
or
inc
dec
add
(bad)
sbb
outs
adc
(bad)
in
jns
aaa
mov
in
xchg
test
xor
xor
out
(bad)
stos
pop
push
cmp
fldenv
scas
std
lock
push
xor
pop
sbb
in
xchg
jbe
sub
cmp
mov
inc
fs
sbb
call
or
mov
and
mov
cli
jl
ss
inc
cmp
jge
repz
icebp
dec
pop
inc
in
test
xchg
mov
jno
sub
lea
int3
xlat
scas
adc
out
add
mov
gs
push
or
cmc
xchg
aas
(bad)
icebp
mov
mov
sub
lds
cmp
shl
std
scas
enter
xchg
mov
shl
mov
loope
movs
sbb
lds
or
mov
mov
aad
cmp
mov
in
jnp
sahf
movs
push
xchg
ret
mov
add
pop
push
jae
rcl
mov
lods
pop
mov
add
add
ror
add
in
imul
leave
adc
mov
adc
pop
or
(bad)
rcr
repz
jle
out
js
jo
adc
cmp
cmp
dec
aam
sub
rcl
out
xchg
daa
stos
nop
scas
pop
gs
mov
ror
sbb
daa
test
movs
push
adc
sub
(bad)
xor
jo
idiv
sbb
xor
inc
stos
adc
push
movs
mov
sub
(bad)
mov
push
bound
leave
fstp
mov
out
int3
fisttp
inc
(bad)
pop
cmp
cli
pop
(bad)
retf
mov
bound
call
mov
fmul
or
or
lods
mov
std
out
ret
add
int3
push
sub
xchg
inc
inc
jg
ds
fcmovnb
sbb
test
push
out
repnz
jno
rol
jnp
sub
adc
data16
repz
jle
or
adc
sti
lea
pop
xor
mov
pavgw
adc
std
mov
dec
dec
stc
jg
add
mov
or
mov
mov
adc
into
push
pop
mov
shr
fimul
loopne
sbb
lock
cdq
push
sub
call
retf
pop
out
xchg
fcomp
ds
or
adc
push
popa
int
jnp
mov
(bad)
mov
pop
cmp
sub
in
cmp
in
jmp
jecxz
int
and
lock
xchg
arpl
cmps
push
dec
test
lods
pop
mov
or
jp
xor
dec
push
push
lods
mov
mov
les
dec
popa
mov
fist
push
addr16
adc
xchg
jle
sub
out
nop
ds
rcr
test
jg
add
sub
retf
arpl
inc
sahf
test
retf
cwde
mov
fsub
shld
cmp
movs
aaa
xchg
mov
and
test
sub
cmps
xlat
out
lods
xchg
jmp
ja
fwait
jle
adc
cli
(bad)
fcomp
xchg
shl
add
xchg
jo
(bad)
aad
mov
aam
sbb
loopne
jnp
push
cli
inc
mov
adc
bound
mov
xor
cli
or
push
lods
scas
rcl
xchg
dec
leave
test
jg
push
ret
jb
pop
out
fwait
push
xchg
out
mov
in
rcl
and
and
js
push
out
sar
cmp
sbb
fs
add
sub
or
ficom
push
xor
push
aam
ss
lds
xchg
xor
das
shl
dec
pop
pop
js
out
movs
sbb
push
mov
sub
mov
cdq
sbb
push
nop
inc
movs
push
push
stos
cs
xchg
jb
push
mov
out
icebp
pop
sub
sbb
or
out
push
inc
clc
push
cmp
pushf
mov
test
lds
(bad)
or
mov
iret
cdq
xchg
or
jecxz
loope
cmc
dec
or
xchg
jae
test
xchg
or
sub
xchg
mov
add
retf
retf
push
cmps
jle
daa
int
pop
stos
in
out
into
ins
dec
push
sbb
scas
or
push
fmul
and
sbb
dec
mov
inc
pop
add
and
cmp
xchg
mov
fdiv
hlt
gs
aas
cmc
push
daa
retf
push
sub
jbe
stos
call
outs
xchg
lahf
ror
jmpw
inc
sub
test
movs
repnz
call
pusha
mov
sub
inc
stc
push
jo
das
adc
mov
inc
mov
popf
(bad)
jnp
gs
jge
es
gs
(bad)
push
retf
add
mov
enter
dec
pop
cmp
cmp
cmp
and
adc
add
mov
rol
test
or
dec
pop
push
or
mov
sbb
pop
inc
xchg
in
bound
cmps
jp
daa
inc
bnd
xor
movs
sbb
jl
xchg
inc
push
in
cld
pop
retf
retf
xchg
out
mov
adc
dec
inc
add
test
mov
stos
fwait
push
addr16
fadd
xor
cmps
sbb
hlt
sbb
js
loope
sbb
mov
outs
pusha
and
and
xchg
push
ror
cmc
aad
jge
dec
sub
adc
loope
aaa
pop
std
jmp
movs
dec
xchg
push
bound
push
enter
or
out
sub
rcl
mov
test
out
sub
outs
sbb
ret
ja
fdivr
inc
ss
sub
inc
xor
in
in
cmp
ins
outs
pop
pusha
fistp
mov
out
fnstsw
mov
fmul
in
inc
push
push
lahf
jns
les
push
fmul
(bad)
adc
sar
out
pusha
in
mov
mov
pop
push
jns
dec
jp
(bad)
sbb
cmp
add
mov
fild
xchg
cdq
sub
aad
mov
enter
cld
xchg
jp
ffree
or
jno
add
jmp
cld
mov
fdivr
rol
std
push
pop
fstp
cli
mov
shr
sti
and
int
ret
dec
xor
das
in
xchg
dec
mul
ficomp
adc
retf
xlat
call
cmps
dec
xchg
(bad)
mov
stc
sbb
loope
mov
inc
ja
mov
loope
dec
mov
ret
jecxz
jle
ror
xchg
mov
retf
xor
pop
push
pop
imul
fld
mov
dec
ss
loop
or
test
shl
punpckhdq
cs
out
fild
add
ret
ds
mov
add
aam
add
pop
jp
or
loop
fcom
inc
pop
push
lea
lock
aaa
push
push
ffreep
xchg
xlat
(bad)
loope
and
add
jns
dec
cwde
ret
cmps
jmp
das
mov
js
mov
cmp
pop
and
das
test
xor
loop
xchg
cmp
xchg
cli
fnsave
stos
addr16
in
push
jg
xchg
add
arpl
iret
xor
inc
sub
sub
addr16
mov
pop
fs
in
std
out
pushf
and
fist
sbb
dec
pop
retf
das
mov
std
dec
sub
in
pop
pop
enter
jmp
rcl
test
jecxz
in
imul
dec
cdq
imul
fcomp
je
or
add
in
fs
add
push
jmp
mov
add
shl
ror
cdq
cwde
mul
xchg
mov
popa
push
jb
push
jae
and
lar
cld
pop
pushf
mov
pop
adc
pop
mov
pop
xchg
mov
stos
xchg
out
pop
cmp
into
call
ret
xchg
lods
sub
mov
movs
sub
frstor
shl
iret
stos
mov
sub
xor
sub
in
mov
push
xchg
rol
test
or
cmp
cmp
inc
jle
xchg
outs
dec
mov
loope
leave
out
xor
xor
push
dec
xchg
call
cwde
xchg
pusha
retf
clc
or
or
push
mov
dec
sub
dec
cmp
push
out
rcl
loop
pop
xlat
and
loop
stos
add
jae
(bad)
fmul
out
or
call
repnz
jle
jmp
scas
mov
(bad)
mov
mov
push
loope
dec
movs
add
ret
psubd
jp
rcr
mov
mov
movs
pusha
jmp
pop
test
test
mov
fld
js
add
mov
dec
(bad)
mov
int
daa
dec
mov
into
movs
pop
dec
scas
lock
and
jno
fiadd
sub
ret
mov
mov
push
shr
xchg
pop
inc
jge
or
shr
out
out
fisub
aad
sbb
dec
neg
jg
je
(bad)
mov
cmp
dec
cmp
in
out
stos
inc
jmp
test
mov
jmp
pushf
mov
fs
pop
call
jg
cmp
push
test
cmp
cdq
inc
dec
ret
popf
and
and
push
add
cmps
mov
loope
loop
adc
pop
call
add
jo
sbb
out
jne
push
inc
adc
les
push
mov
es
arpl
aad
fwait
sub
fistp
sub
mov
mov
verw
in
jmp
out
call
loopne
mov
into
pop
out
ds
int3
add
into
xchg
cmc
inc
std
cmp
mov
cwde
cmp
mov
out
test
retf
mov
pop
dec
mov
mov
and
jle
jg
ror
icebp
xchg
jmp
outs
or
mov
adc
das
ror
pop
lea
(bad)
push
hlt
xlat
mov
cmp
mov
jg
or
inc
inc
adc
xor
pop
mov
ja
jmp
push
in
mov
enter
clc
mov
out
and
pushf
mov
add
inc
pop
cmp
neg
pop
sub
adc
and
aad
or
pop
push
fcomip
fst
rol
and
add
adc
(bad)
retf
push
(bad)
pop
in
and
movs
ins
cmp
xchg
mov
and
mov
xchg
mov
push
shl
(bad)
or
aam
xchg
push
mov
shl
mov
sbb
pop
inc
adc
clc
cmp
xor
xchg
sub
cwde
in
xchg
mov
(bad)
std
outs
push
xor
fisubr
mov
push
adc
xchg
sub
inc
jge
add
aam
or
movs
fnstcw
enter
fadd
mov
pop
add
pop
pop
sbb
into
out
popf
mov
stc
pop
xchg
jmp
ret
ret
jmp
jp
adc
push
cmp
sub
mov
adc
jge
pop
(bad)
jnp
aaa
loope
cmp
retf
fdivr
mov
push
push
and
sbb
rcr
or
push
push
and
out
and
mov
loope
mov
push
sub
mov
into
xor
aas
retf
pusha
add
repnz
add
push
jl
je
jmp
dec
mov
cmp
cld
loop
mov
nop
inc
lods
cdq
xor
not
add
xchg
sar
jl
stos
xor
cmp
test
popa
dec
jg
xor
and
jle
retf
push
rol
or
jmp
cmp
pop
jb
mov
xchg
fscale
xchg
out
fidiv
push
inc
scas
jns
imul
and
push
in
sar
cli
dec
das
sahf
out
mov
pusha
popf
out
jle
loopne
stos
std
jge
into
(bad)
ret
inc
inc
lods
sar
ror
ss
pop
aam
adc
sub
push
ins
aas
(bad)
dec
cmp
sbb
inc
sbb
jne
inc
mov
or
add
pop
and
mov
inc
call
pusha
das
xchg
cmps
in
jns
imul
push
jmp
repz
nop
fsub
xor
movs
ins
mov
inc
xor
imul
or
mov
add
inc
dec
push
push
mov
fsubp
dec
aad
inc
out
movs
(bad)
hlt
js
jb
cs
jo
jno
out
ficom
sub
lds
inc
add
xchg
cmp
mov
sub
xchg
sbb
cdq
pop
mov
lods
(bad)
or
or
mov
jno
sar
xadd
cmp
xchg
mov
pop
dec
and
jle
xchg
xchg
test
jb
mov
dec
fmul
ins
and
pop
sbb
dec
jmp
sbb
aas
pop
jnp
jbe
adc
shl
mov
shl
add
pusha
jmp
mov
fnstcw
movs
in
and
or
jecxz
enter
fdivr
xchg
lods
push
add
jns
inc
or
lods
dec
movs
andnps
cmp
pop
popa
xor
pop
push
add
pop
adc
push
ds
mov
pop
mul
cli
add
lods
mov
scas
ins
test
(bad)
fst
or
or
iret
sub
pop
fwait
into
int3
(bad)
dec
in
add
je
sub
sbb
mov
std
sub
lods
sbb
xchg
out
fisub
ret
push
jnp
jmp
or
pop
xlat
out
mov
mov
mov
or
mov
dec
cwde
outs
dec
mov
lahf
test
in
inc
ins
add
sbb
(bad)
(bad)
into
mov
das
lock
adc
lods
sub
shl
movs
js
add
add
mov
add
push
xchg
stos
pop
(bad)
jmp
rcr
in
push
arpl
rcl
xchg
add
ds
dec
push
inc
xor
xor
inc
je
mov
sahf
fwait
aaa
fcmovnbe
movs
and
int
cli
repnz
lds
cmp
loop
dec
ja
or
lea
fs
xor
sub
js
jecxz
neg
xor
xor
cmc
je
sbb
cmp
ja
mov
dec
mov
adc
stc
clc
jb
clc
pop
inc
imul
cli
hlt
pop
faddp
push
sub
rol
loope
retf
imul
dec
or
push
mov
and
xor
imul
aas
shl
push
dec
stos
and
pop
xchg
mov
gs
add
jns
ss
aad
ss
jae
jnp
aad
ja
cmp
imul
xchg
mov
lods
repnz
scas
mov
stos
popa
and
icebp
sbb
cmp
mov
mov
(bad)
test
xchg
sahf
cdq
pop
push
push
or
mov
das
cmps
add
les
outs
inc
in
jmp
cmp
xor
dec
test
mov
loop
add
or
lds
inc
pop
aas
pop
rol
push
push
push
jb
hlt
aas
out
mov
sbb
fist
sub
daa
jmp
sub
sbb
nop
mov
mov
xor
(bad)
aaa
loop
xor
cmp
out
arpl
sub
and
rcl
sub
sub
fucom
aaa
in
cdq
pop
adc
inc
shr
mov
inc
mov
imul
iretw
movs
cs
add
pop
nop
adc
ss
aad
cmps
adc
adc
leave
pop
arpl
add
inc
or
xor
outs
mov
repz
cmps
ja
aam
xchg
push
int3
(bad)
aam
fst
frstor
test
jnp
and
popa
jns
and
aam
pop
jmp
gs
idiv
rol
xchg
dec
inc
sti
out
rol
and
cmp
cmps
repz
xchg
jecxz
adc
cli
(bad)
or
cmps
sbb
icebp
int3
jae
rcr
mov
adc
rcr
mov
cmps
pop
mov
fnsave
cmp
sbb
mov
jle
ins
ja
add
out
sub
ss
sbb
lds
nop
cmp
xchg
in
or
fwait
pop
push
push
sbb
adc
or
mov
outs
jge
sub
call
retf
ror
hlt
xchg
inc
lds
ror
(bad)
cmp
or
mov
je
retf
mov
out
or
and
pop
jmp
sub
test
inc
pop
xor
lods
jae
cdq
div
int
int
out
lock
jecxz
inc
ds
push
cmp
sbb
daa
jge
iret
icebp
sub
and
inc
xlat
mov
(bad)
inc
out
es
fbstp
arpl
jo
movs
pop
adc
add
out
pop
lods
pop
cmp
jg
inc
out
(bad)
xchg
add
inc
jecxz
lds
mov
hlt
sti
add
stos
inc
and
pop
imul
aas
cmovb
jb
or
mov
bound
movs
fistp
icebp
or
pop
cmp
pop
stos
repnz
jge
bound
adc
jge
push
fcomp
int
pop
mov
ds
cmp
and
pop
fdiv
pop
adc
mov
dec
add
(bad)
jb
xchg
adc
lods
das
imul
cmp
add
fcmovu
hlt
sbb
loop
cmc
sbb
xor
cwde
ins
in
popa
sub
push
rcr
(bad)
dec
loopne
gs
jge
sbb
cmp
js
arpl
cmc
(bad)
and
leave
or
mov
fsubr
movs
js
aas
pop
xchg
inc
or
hlt
cmp
enter
xchg
je
push
aas
xor
xchg
jne
fild
(bad)
pop
add
dec
bnd
xor
jmp
pop
xor
jo
jo
add
cmps
movs
xchg
dec
js
push
xchg
aas
push
je
leave
jmp
movs
dec
sbb
mov
mov
aam
movs
add
push
(bad)
aaa
pop
dec
dec
imul
outs
call
loopne
retf
push
inc
pop
movs
cmp
xchg
dec
xchg
add
push
lock
dec
cmp
mov
(bad)
in
call
imul
xchg
cmp
fidiv
jmp
pop
das
stos
mov
pop
sbb
out
mov
movs
imul
addr16
mov
cmps
mov
mov
out
push
je
sub
xor
fcmovne
gs
sahf
jmp
shl
xchg
and
movs
sub
mov
mov
sahf
inc
fdivr
mov
rep
ror
les
es
and
and
test
push
or
stos
data16
mov
mov
xchg
lock
retf
sbb
mov
je
retf
repz
jmp
scas
fimul
cmp
(bad)
hlt
lds
repz
std
movs
nop
jno
in
scas
fisub
cmp
inc
sahf
scas
push
mov
cwde
push
inc
add
push
or
lds
ss
jo
dec
sbb
test
push
lahf
cli
cmc
rol
or
xchg
daa
push
xor
pop
jge
mov
hlt
inc
loope
xor
jae
or
xor
xchg
repnz
push
adc
lds
enter
inc
xchg
arpl
iret
in
mov
sbb
cs
outs
mov
outs
adc
retf
mov
add
mov
xchg
sahf
jae
(bad)
xlat
pop
test
fcmovbe
or
ss
pusha
jle
inc
and
cmp
ffree
jg
cmp
mov
sbb
xchg
xchg
mov
adc
ds
jnp
aaa
scas
mov
out
(bad)
scas
or
retf
lock
xor
addr16
and
cmps
stos
and
xor
retf
jbe
mov
sub
cld
cs
cli
push
sub
add
int
stc
cmp
idiv
fbld
pop
inc
adc
cmp
sti
or
into
(bad)
mov
and
call
pop
jns
sbb
bound
or
cmp
jecxz
jo
test
add
call
(bad)
imul
(bad)
dec
out
inc
and
and
retf
pusha
int
mov
call
xor
sub
ja
imul
adc
dec
and
push
jne
jle
pushf
inc
pop
sub
stos
jmp
ds
fst
xor
pop
scas
jae
ja
push
pop
jbe
mov
sar
xchg
adc
sahf
xor
stos
sbb
int
pop
imul
jno
scas
fld
outs
xchg
pop
pushf
arpl
xor
out
fsubr
pop
mov
into
inc
std
add
xor
das
xor
je
add
pop
(bad)
jle
xor
or
cmp
mov
and
scas
push
icebp
popa
sub
mov
inc
dec
cld
xor
movs
je
outs
(bad)
retf
cmp
pushf
pop
inc
mov
test
and
and
pop
dec
out
jmp
xchg
xchg
sti
sub
mov
adc
jae
jmp
ret
inc
push
or
dec
daa
pop
jmp
add
fist
add
xor
jb
mov
mov
imul
push
loope
dec
gs
dec
shl
inc
sbb
dec
dec
pushf
ins
and
mov
pop
setp
(bad)
jg
push
ret
fisub
xchg
xchg
faddp
mov
rol
or
xchg
int3
push
repnz
sbb
sub
jae
dec
cli
add
loopne
lahf
mov
cmp
sub
imul
dec
movs
repz
lods
cli
mov
int
mov
mov
neg
cmp
imul
(bad)
fstp
dec
ja
adc
mov
cmps
ins
jo
sub
cmp
xlat
ins
int3
aad
stos
xlat
mov
or
mov
jne
cmp
stc
inc
pop
(bad)
loope
jo
fmulp
leave
lods
fnsave
inc
repz
retf
sar
mov
fsubr
sub
mov
add
loope
cmp
fwait
xor
fisub
imul
loop
and
lods
in
and
dec
clc
jge
sub
(bad)
sub
xchg
ficomp
jno
stc
(bad)
(bad)
pop
push
es
cmc
pop
out
aad
or
loop
xchg
cmp
xor
pop
xor
inc
mov
or
inc
in
sbb
dec
pushf
vmptrld
loopne
sub
imul
push
sbb
dec
(bad)
xor
xchg
(bad)
mov
jnp
cli
xchg
xchg
sub
daa
or
inc
in
dec
adc
cmp
sub
dec
fdivr
rcl
gs
mov
fst
addr16
(bad)
pop
(bad)
test
add
aad
sbb
and
push
adc
frstor
repnz
js
push
(bad)
loopne
jbe
or
mov
adc
nop
or
ret
cmp
add
dec
inc
in
enter
imul
push
add
jno
adc
ds
adc
mov
pop
pop
sbb
(bad)
sbb
es
mov
add
ss
in
daa
jae
aad
sar
jno
sbb
loopne
sbb
loope
stos
(bad)
cmp
rcl
imul
push
sti
sbb
dec
push
cmps
pop
and
sbb
and
int
aas
add
pop
mov
pop
jb
push
addr16
imul
jl
cmc
arpl
adc
call
xor
stc
adc
lods
loopne
mov
nop
repnz
xor
out
test
push
lahf
xchg
ds
xor
fucomi
ins
in
hlt
loope
loop
cs
mov
and
push
xor
adc
sub
push
fst
or
icebp
mov
hlt
mov
test
outs
ja
inc
xor
shl
and
into
cwde
cwde
xchg
sbb
retf
repz
inc
test
jge
mov
mov
push
sbb
ins
ja
xlat
sub
mov
push
pusha
push
push
fsubr
or
std
mov
pushf
test
outs
xchg
mov
mov
rcr
je
mov
fdivr
push
daa
push
or
outs
or
push
dec
xor
(bad)
rcl
ret
lods
xlat
mov
cld
out
mov
sbb
test
(bad)
cmc
ds
mov
retf
loop
cdq
push
popa
dec
pop
push
mov
ja
and
adc
jnp
cmp
jp
xlat
sub
dec
mov
adc
jb
mov
mov
xchg
loop
frstor
cmp
ret
jns
rcl
sub
mov
mov
dec
dec
jl
les
jmp
add
add
jg
or
and
lock
cdq
mov
mov
dec
or
sbb
call
sbb
dec
movs
xor
scas
test
xor
inc
pop
dec
dec
daa
push
stos
mov
hlt
test
mov
xor
stos
mov
pusha
pop
inc
xchg
lea
adc
mov
mov
xchg
cmp
or
inc
adc
and
gs
adc
push
adc
addr16
call
dec
mov
inc
repz
adc
jae
das
out
popa
sub
lds
js
test
fnstsw
jg
add
in
mov
push
std
adc
cli
call
in
pushf
in
fnstsw
jb
or
add
sub
scas
int
mov
mov
ins
hlt
xor
int
cmc
cmps
cmps
jge
pop
aad
pop
(bad)
(bad)
icebp
adc
pop
and
adc
ficom
push
or
(bad)
test
xchg
sub
mov
or
vmovaps
mov
mov
call
in
not
push
add
dec
iret
jmp
jge
je
mov
(bad)
xor
ret
dec
mov
movs
adc
mov
outs
add
mov
and
pop
bound
xchg
loopne
into
hlt
push
jp
jo
jg
je
mov
mov
outs
cli
dec
cld
stos
imul
mov
ins
xor
dec
sbb
shl
hlt
jmp
nop
xor
pop
push
mov
mov
mov
push
adc
jp
cmps
pop
add
mov
gs
mov
cmp
pop
xchg
jnp
bnd
addr16
inc
js
push
and
mov
jo
add
sub
lahf
aas
cmps
pusha
into
adc
(bad)
pusha
out
xor
push
mov
jne
xchg
add
push
mov
xchg
jge
lea
lahf
ret
clc
stc
repnz
and
xor
xchg
je
pop
mov
cld
mov
xor
das
call
adc
sub
adc
or
pop
scas
jae
add
cmp
lods
push
test
xchg
pop
into
xchg
sub
mov
inc
pusha
push
xchg
(bad)
xor
sub
sub
pop
retf
pushf
mov
dec
addps
jne
pop
cli
lahf
stos
stc
test
repz
jne
pop
movs
or
cmp
mov
enter
mov
adc
inc
test
cmp
test
and
jmp
dec
out
adc
sub
jns
call
int3
mov
push
mov
jg
adc
in
xchg
xor
pop
call
test
cld
dec
adc
retf
movs
mov
outs
xchg
jp
fimul
ds
out
pop
mov
aam
push
push
lods
out
std
ret
sbb
jg
sti
fs
inc
sub
call
xor
push
hlt
aas
ss
jne
loop
sub
add
sahf
mov
dec
jbe
loop
ins
pop
push
mov
(bad)
nop
inc
add
adc
(bad)
mov
test
cdq
cmp
shr
lock
call
test
mov
xor
mov
call
dec
cld
sbb
gs
dec
cld
dec
cmps
mov
inc
jg
imul
ds
cmp
mov
xchg
popa
jbe
jb
aas
mov
imul
popa
pop
pusha
dec
fist
cmp
cwde
daa
clc
dec
push
shl
cld
cmp
hlt
into
add
pop
lds
lea
xchg
mov
retf
shr
and
mov
xchg
sbb
jo
jge
sub
iret
stos
std
dec
or
push
outs
xor
mov
fcom
xor
pop
popa
or
adc
or
ficomp
pop
add
test
sbb
xchg
push
cmp
cld
mov
pop
retf
repnz
pop
xchg
scas
rcl
retf
mov
cmp
xchg
jo
mov
inc
int3
in
add
jb
mov
scas
pop
push
mov
ror
loop
cs
jge
or
pop
pop
jae
xchg
nop
lods
imul
punpckldq
add
test
cmp
mov
dec
and
out
idiv
sub
mov
imul
xor
xor
mov
jge
dec
scas
inc
dec
jb
push
shl
ja
sub
mov
sub
cmps
out
mov
jp
ret
inc
mov
jb
sbb
pop
jp
js
or
call
pop
pop
mov
imul
jae
push
mov
fld
jle
fucomip
add
in
sahf
nop
fstp
mov
test
jmp
cli
pop
call
mov
data16
int
lock
ins
mov
inc
xchg
aad
xchg
fadd
loope
sub
jge
int
aam
clc
dec
jnp
or
pop
aam
add
ss
(bad)
daa
xor
in
pop
imul
cmp
push
das
mov
jge
add
push
mov
ret
inc
pop
mov
mov
fbld
mov
sahf
adc
and
fstp
xchg
xchg
pushf
pop
(bad)
cli
ret
mov
dec
ins
mov
jbe
push
mov
jle
lods
xchg
mov
mov
add
push
ds
lods
and
gs
or
pop
fs
fucom
mov
cmps
out
jno
ret
jo
inc
add
lds
lods
mov
mov
test
sbb
add
jge
cmp
cld
cmp
cs
xor
jmp
sbb
(bad)
out
mov
leave
test
imul
pop
pop
ins
adc
imul
arpl
in
hlt
xor
addr16
je
push
(bad)
mov
adc
pop
lahf
repz
jb
ss
mov
xor
inc
(bad)
shl
jge
jp
(bad)
mov
enter
ja
pop
es
clc
leave
test
mov
jmp
dec
mov
cmp
and
nop
jmp
outs
daa
xchg
bound
sub
aad
pop
pop
mov
sub
(bad)
sbb
jb
retf
pop
mov
mov
xchg
out
fistp
xchg
mov
mov
(bad)
dec
mov
mov
fmul
loop
jl
icebp
leave
xor
sub
inc
cs
jnp
add
fcmovne
sub
push
mov
scas
gs
add
lahf
and
addr16
jae
imul
stos
mov
ret
popa
lods
retf
xor
imul
mov
or
cld
lods
dec
fdiv
add
push
repnz
cmps
loop
test
mov
inc
xor
sar
add
xchg
mov
icebp
cs
rcl
imul
adc
pusha
into
out
fucomp
xor
fsub
cmp
pop
pop
push
adc
inc
dec
cmps
mov
mov
cmps
pop
sti
ins
jecxz
shl
jp
cmp
adc
ss
lods
arpl
mov
in
mov
lahf
cld
fistp
mov
add
cmc
das
sar
fwait
push
lods
lods
test
ins
and
add
push
aas
loopne
in
sbb
push
outs
push
xor
cvtpi2ps
jb
dec
jmp
pop
or
pushf
fild
bound
push
dec
push
mov
lock
push
aas
mov
or
sub
jge
sub
or
(bad)
test
mov
ret
add
and
mov
out
or
fidiv
xor
aad
mov
adc
mov
int3
dec
mov
sbb
retf
loope
inc
mov
nop
hlt
shl
jae
(bad)
repnz
pop
gs
mov
dec
add
dec
xchg
popf
push
popf
pop
pop
push
or
mov
inc
jae
adc
out
jne
in
sub
pop
test
jle
int3
out
in
mov
and
sti
outs
retf
sbb
das
cld
mov
fwait
es
out
fucomp
ins
and
fucomip
xor
ss
mov
jge
aas
scas
fldenv
into
nop
hlt
test
xor
inc
dec
pop
jns
in
mov
push
xchg
sub
out
xchg
sub
dec
cmp
pop
inc
cmps
inc
or
pop
and
xor
call
outs
sub
xchg
popa
fimul
xchg
jecxz
mov
fld
xchg
inc
out
mov
icebp
add
mul
or
(bad)
push
bound
test
add
das
cmps
inc
sub
inc
dec
pop
(bad)
jmp
daa
inc
adc
inc
aas
sbb
mov
mov
call
push
fdiv
lods
clc
pop
xchg
les
xlat
out
aad
push
jle
or
shr
lods
mov
stos
push
jbe
ror
aaa
dec
scas
cs
cmp
sti
mov
mov
shl
aam
inc
(bad)
movs
(bad)
in
jecxz
(bad)
xor
movs
scas
loope
shr
stos
xchg
jp
pop
movs
ins
clc
rcl
push
sub
cmp
fistp
jne
xchg
cmps
ja
mov
(bad)
sahf
adc
test
sub
push
mov
ds
mov
aaa
(bad)
repnz
imul
or
mov
in
rol
cli
mov
fwait
aam
sub
inc
outs
loopne
sub
shl
inc
add
or
scas
cmps
dec
pop
mov
jp
popf
sbb
daa
cli
jg
sub
mov
shl
xor
jne
push
mov
mov
in
arpl
mov
mov
push
sbb
xor
mov
xchg
jmp
jg
retf
sahf
pop
out
test
fcomp
jne
sbb
mov
test
daa
jmp
mov
cmp
xchg
(bad)
mov
dec
mov
sbb
sbb
add
pop
out
jae
push
inc
not
xchg
pop
pop
pop
add
out
inc
and
inc
sahf
mov
aas
fadd
out
sbb
jp
test
and
jge
es
stos
inc
dec
lods
fisubr
(bad)
mov
daa
push
xlat
or
xor
movs
ja
mov
call
cmps
out
xor
cmp
stc
pop
jp
mov
add
pusha
pop
idiv
pop
pop
mov
xchg
jl
ret
je
sub
repnz
call
ss
cmp
cdq
mov
pop
ja
pop
sub
mov
movs
fwait
inc
and
mov
or
pusha
inc
inc
xchg
jg
lods
mov
mov
outs
shl
(bad)
pop
pop
inc
pop
fwait
into
outs
jb
or
out
test
stos
sub
mov
mov
xchg
out
aam
add
sbb
fwait
mov
pusha
or
xor
or
mov
push
cmp
dec
add
repnz
cld
adc
xchg
int3
and
fisubr
and
cmp
lock
and
pop
(bad)
adc
xor
out
inc
sub
xor
add
sar
ins
dec
dec
push
jno
(bad)
test
lods
xor
call
cmps
jno
push
or
nop
ret
inc
push
dec
mov
icebp
cmp
jp
fiadd
in
mov
or
addr16
icebp
jmp
adc
mov
add
(bad)
fwait
push
push
imul
and
cwde
fstp
push
clc
pop
mov
cmp
mov
inc
pop
jmp
cmp
or
add
out
in
push
gs
in
xchg
xor
jge
jns
xchg
shl
ret
es
xchg
arpl
pop
gs
fstp
out
fldcw
dec
xchg
ret
(bad)
jp
stos
push
fwait
or
mov
popa
mov
jbe
dec
and
push
and
into
dec
push
test
push
sbb
xchg
gs
mov
pop
aam
test
lock
jbe
mov
js
jl
xor
popa
test
test
cmp
jo
and
jo
adc
movs
arpl
push
or
dec
outs
push
cmps
out
popf
lahf
cmp
jno
jecxz
mov
cli
pop
mov
retf
cmp
ja
push
(bad)
movs
mov
sbb
and
outs
fisub
ret
out
and
(bad)
xlat
ss
dec
in
repnz
or
dec
jne
ret
stos
pmaxub
push
push
mov
xor
and
pop
xchg
loopne
ins
jbe
imul
fidivr
xor
mov
adc
pop
cmc
in
cmp
pop
mov
dec
fstp
mov
xlat
or
add
xchg
mov
push
pushf
fbstp
ins
xchg
cmp
arpl
pop
or
sbb
mov
add
push
mov
xchg
pushf
pop
and
push
into
dec
int
dec
xchg
jmp
push
clc
ret
xchg
cmp
cmps
adc
adc
cmc
call
stos
cmp
adc
add
or
push
loop
add
aam
sar
(bad)
sub
sbb
jg
pop
leave
mov
mov
xor
push
mov
fwait
ret
push
dec
sub
int3
mov
cwde
sbb
mov
xchg
adc
hlt
add
or
repnz
mov
aas
imul
sub
mov
ja
add
cdq
cmp
loop
ds
repnz
push
aaa
jecxz
outs
out
add
sbb
loope
jno
fmul
mov
xchg
mov
lock
std
repnz
repz
and
int3
cmp
in
xchg
ret
imul
push
fs
fwait
inc
push
fs
into
mov
dec
dec
mov
loopne
mov
aas
cli
(bad)
push
fld
leave
cmps
xchg
mov
push
retf
stos
xchg
add
outs
arpl
mov
sub
fadd
pop
dec
retf
sti
std
add
in
and
(bad)
fldcw
jmp
fisub
mov
xchg
jne
adc
jg
xchg
icebp
enter
jl
cmp
cmps
xchg
push
sbb
xchg
sbb
inc
pushf
rcl
cmp
enter
and
inc
leave
xor
cmp
and
sub
fnsave
imul
pop
inc
dec
ins
mov
cmp
fist
rol
ds
bound
repz
mov
and
iret
sub
pop
push
mov
xchg
retf
leave
mov
fisub
das
inc
repz
les
idiv
push
xchg
loope
rcr
ror
pop
jle
inc
mov
inc
lea
pextrw
jb
dec
inc
and
stos
stos
mov
mov
scas
mov
ret
neg
jge
in
pop
cmps
mov
cli
scas
pop
shl
xor
retf
pop
cwde
jb
test
sbb
cmp
inc
xchg
stc
xchg
pop
stc
pop
dec
or
push
dec
dec
cmc
fisubr
inc
mov
jb
arpl
int3
jmp
add
xor
jb
or
(bad)
adc
adc
lods
cdq
out
test
inc
cmps
inc
mov
into
shr
xchg
movs
les
ins
xchg
add
icebp
fs
ret
popf
xor
(bad)
fsubr
xchg
out
stos
in
mov
push
mov
xor
dec
fwait
pop
movs
jg
repz
xor
sbb
cli
push
imul
dec
and
pushf
retf
sahf
cmp
xchg
cmp
js
lds
aad
push
xchg
and
scas
pop
ins
(bad)
stos
and
xchg
or
sub
adc
adc
cdq
xchg
fidivr
retf
push
and
stos
iret
xchg
xchg
js
add
inc
fnsave
fnstenv
sbb
mov
ss
in
test
xchg
outs
les
test
push
mov
adc
mov
cdq
retf
inc
out
test
popa
and
pop
scas
enter
push
sbb
xor
lea
mov
jmp
cdq
fdivr
imul
cmp
sar
loop
(bad)
sbb
sub
and
xchg
and
imul
add
(bad)
fcom
adc
xor
mov
test
push
mov
mov
mov
rcl
mov
loop
pop
pusha
retf
dec
pop
cmps
sbb
xor
xchg
inc
js
dec
sti
adc
jp
(bad)
jns
enter
xchg
fmul
test
mov
sub
in
xor
xchg
out
sbb
push
xlat
fisub
call
cmc
add
ret
(bad)
adc
outs
or
xchg
pop
call
daa
adc
popf
cdq
jbe
adc
lds
shl
or
fisttp
out
xchg
pushf
inc
cs
out
pop
daa
lods
ins
xor
jae
jnp
mov
jmp
loope
push
les
repnz
shr
push
les
mov
ins
test
push
rcl
pop
and
xor
xor
icebp
push
hlt
adc
sub
dec
shl
dec
pushf
inc
dec
dec
push
and
xor
push
xchg
push
jnp
xchg
xchg
out
test
xor
cmp
mov
aas
inc
mov
aaa
add
jl
(bad)
mov
jb
call
xor
jnp
lea
push
lods
mov
jnp
dec
jge
js
retf
mov
test
xchg
stos
retf
add
jmp
inc
add
mov
push
push
add
fisttp
xlat
sub
ret
fbld
xor
dec
mov
add
aaa
vmwrite
and
stos
adc
les
fs
mov
jp
push
add
daa
xor
fstp
iret
jle
pop
mov
fisub
into
fwait
shr
pop
out
xor
jecxz
clc
jbe
mov
and
lods
(bad)
test
in
adc
and
in
pop
movs
jecxz
sahf
std
sti
xor
mov
xlat
data16
add
inc
das
mov
(bad)
pop
in
inc
xchg
outs
movs
pop
jb
xchg
xchg
mov
mov
xchg
shr
adc
paddb
cmps
mov
bound
repz
mov
popf
push
cmp
xor
jg
add
cmp
arpl
rcl
out
loop
mov
pop
jae
call
or
jecxz
aam
jge
or
adc
push
sub
mov
xchg
xor
scas
or
pmuludq
icebp
(bad)
jmp
or
dec
cmp
mov
xor
sbb
push
dec
xchg
pushf
xchg
pop
pop
jne
inc
lahf
adc
test
push
enter
pop
add
pop
mov
(bad)
jle
mov
jg
mov
push
fnstenv
push
js
out
mov
ds
jo
mov
xchg
cdq
ret
lods
sbb
mov
stos
push
pop
add
push
sahf
pop
lods
add
lock
cmc
es
idiv
jb
sar
scas
cmp
movs
adc
hlt
call
push
and
adc
push
cmp
inc
movs
lea
ja
fbld
sbb
daa
lock
and
in
into
mov
mov
jns
stos
mov
outs
add
mov
or
retf
outs
ss
push
pop
mov
leave
mov
mov
add
mov
push
clc
hlt
adc
mov
sbb
or
push
inc
inc
retf
scas
loope
and
cwde
sbb
push
aaa
push
push
xor
je
xchg
hlt
clc
cmovbe
cli
fsubr
ins
rcl
xchg
inc
jo
ror
push
stc
sti
outs
stc
xor
and
jge
cs
adc
nop
ror
nop
leave
and
leave
icebp
mov
adc
(bad)
mov
call
(bad)
(bad)
rcl
sbb
lahf
pop
call
data16
in
ret
ret
iret
test
jmp
jmp
xor
xor
sub
or
fisttp
sbb
push
icebp
jmp
outs
xchg
push
(bad)
ds
loop
sub
cld
cli
xlat
cmp
add
jbe
ins
ror
out
inc
sbb
jnp
adc
les
xchg
ret
pop
inc
jo
mov
mov
push
in
std
mov
les
inc
xchg
loopne
jns
mov
imul
(bad)
mov
xchg
xor
xlat
dec
nop
ins
cli
push
mov
and
(bad)
gs
(bad)
jae
mov
mov
jmp
add
jmp
(bad)
inc
shl
rcr
dec
call
imul
cmp
div
mov
adc
and
cld
add
sbb
inc
cmps
pop
sub
push
fld
repz
cmps
add
test
mov
out
adc
in
sub
jge
mov
push
or
push
mov
inc
shr
test
fstp
nop
ror
xor
scas
cmp
(bad)
pop
jo
out
sti
in
xchg
shl
adc
push
pushf
jp
cmp
or
or
adc
jecxz
jmp
out
jne
es
pop
mov
test
fmul
or
(bad)
pushf
jnp
mov
inc
cmc
add
stos
cs
inc
xor
cs
retf
add
mov
mov
inc
sbb
jmp
and
jmp
popa
lods
fdiv
add
fidiv
neg
xchg
pop
pop
loopne
inc
loopne
int
out
test
jmp
add
je
mov
adc
xchg
(bad)
outs
nop
in
inc
inc
pop
adc
fmul
popf
inc
imul
aaa
mov
gs
cmp
dec
add
mov
xor
push
pop
push
in
jno
fsubr
jmp
ror
mov
or
lds
push
cmps
jge
mov
stos
ret
or
adc
adc
idiv
fiadd
(bad)
clc
mov
or
(bad)
fst
jnp
rol
rol
pop
lock
call
add
lock
rcl
inc
or
ret
dec
mov
fcmovnu
into
lahf
enter
mov
push
mov
dec
add
ja
dec
movs
mov
pop
jno
fcom
pop
add
push
fs
cwde
push
pop
and
adc
mov
cmc
aam
mov
loopne
(bad)
jno
pop
pop
enter
repz
jb
call
or
into
jge
mov
loopne
mov
daa
outs
(bad)
jmp
add
sbb
pop
scas
jmp
xor
lods
ss
mov
mov
int
push
(bad)
xchg
mov
sub
(bad)
pushf
lods
stos
movs
jge
lea
push
daa
shr
loop
(bad)
jmp
xchg
ins
(bad)
cli
fcmovne
dec
add
scas
imul
fisub
xor
xlat
xor
mov
add
or
sbb
push
sub
mov
add
add
add
inc
cmp
sbb
xchg
dec
xchg
and
pop
test
cli
cmp
jle
sbb
mov
sbb
mov
enter
mov
push
xchg
mov
fnstenv
in
jb
add
in
and
imul
push
and
mov
adc
addr16
mov
outs
sub
movs
xor
repz
movs
push
push
mov
cmps
mov
addr16
or
cs
das
sbb
js
popf
dec
dec
add
(bad)
jo
adc
and
icebp
inc
xor
loopne
dec
and
aaa
mov
test
es
cmp
push
xchg
aaa
xor
les
xchg
fwait
jle
icebp
iret
cmps
sahf
mov
stos
push
in
lods
fsub
in
inc
aad
pop
and
adc
cmc
or
sub
xor
xacquire
pop
mov
jno
fstp
js
stc
cwde
add
sub
cmp
(bad)
out
lock
jno
pop
add
pop
adc
cld
push
lock
mov
fdiv
mov
or
icebp
xchg
movs
adc
cmp
and
add
sti
mov
ret
outs
sbb
movs
dec
push
leave
mul
mov
mov
into
push
in
cmps
inc
xor
mov
and
sbb
jno
loop
push
sub
jbe
vdivsd
sub
push
adc
jmp
ror
fcomp
and
xchg
retf
mov
inc
sub
(bad)
pop
icebp
cdq
out
shl
fimul
nop
mov
into
jno
pop
xchg
cmc
lods
fnstcw
jg
adc
imul
outs
sub
jbe
les
scas
add
iret
mov
(bad)
pop
cmc
dec
jl
lea
pop
inc
sub
mov
out
std
stc
ja
add
push
mov
push
jmp
scas
lea
jno
sub
push
mov
jmp
mov
adc
sub
mov
dec
mov
aaa
sahf
adc
or
fmul
outs
cmp
daa
mov
(bad)
push
aad
sub
cmps
retf
addr16
lea
dec
jle
pavgw
(bad)
fimul
fsub
mov
or
sahf
inc
into
push
mov
out
aam
stos
mov
pop
das
add
dec
pop
(bad)
jecxz
cli
xchg
ja
iret
cld
clc
push
test
cmp
jg
mov
or
push
data16
inc
jle
out
dec
push
shl
cwde
into
mov
leave
xchg
fs
outs
or
xchg
sub
sub
pop
leave
and
inc
xchg
or
or
mov
pop
ret
or
ret
es
(bad)
imul
outs
xchg
std
data16
mov
in
stos
and
popf
pop
jmp
sahf
lahf
pop
or
mov
jecxz
aaa
cmc
jecxz
jmp
(bad)
icebp
xor
sbb
adc
jae
jno
jmp
xchg
xchg
pop
or
pusha
(bad)
inc
enter
ds
aad
jno
data16
iret
mov
imul
jmp
mov
sub
adc
(bad)
js
icebp
inc
dec
rcl
ficom
sbb
jl
xor
push
jmp
mov
push
pop
add
jbe
loopne
ins
jo
clc
cmp
sub
cmps
fldcw
mov
bound
or
js
sbb
adc
iret
test
fwait
jle
and
sub
je
xchg
mov
push
or
and
pop
jg
aaa
imul
in
fmulp
inc
inc
stos
mov
mov
pop
dec
ins
clc
fs
(bad)
mov
ds
cs
cs
jl
sub
push
add
jp
cmps
xchg
or
test
js
mov
(bad)
loopne
fistp
sti
sbb
in
pop
xor
fnstcw
ins
ss
mov
lahf
sbb
scas
test
lea
inc
jno
cld
push
cwde
jns
in
sahf
xor
and
inc
xchg
dec
out
push
jbe
cmp
cld
fidivr
sbb
aas
fstp
mov
shl
mov
pop
xor
popa
pop
in
lahf
fld
daa
js
test
mov
pop
jmp
lock
sub
out
lods
mov
test
dec
test
mov
ds
jbe
ficom
int
sbb
ja
dec
cmp
outs
ret
push
bound
xor
ds
out
adc
(bad)
clc
mov
fisttp
jns
jle
jo
icebp
dec
cmc
in
lahf
dec
or
mov
sub
inc
loopne
outs
pusha
fnstsw
es
xor
shr
repz
movs
aam
int3
leave
sbb
mov
push
sbb
(bad)
sub
pop
rcl
test
inc
push
xchg
shl
aaa
in
cmp
push
or
jno
push
inc
jl
jnp
loopne
sub
test
dec
cmp
or
mov
mov
mov
mov
and
mov
push
imul
mov
ja
pop
cwde
sar
ins
call
fimul
mov
(bad)
and
jno
mov
popa
jne
stc
lahf
(bad)
out
aaa
int3
lods
jb
retf
and
dec
jge
or
dec
sti
loope
push
inc
ret
movs
cld
mov
arpl
mov
outs
add
cmps
pop
jbe
mov
inc
push
fstp
mov
pusha
ret
dec
popa
hlt
push
mov
scas
call
push
push
clc
xchg
jp
inc
test
es
inc
sti
xor
int
cld
int
pushf
test
xor
and
cli
stos
(bad)
cmp
and
jmp
cmps
outs
popf
mov
mov
mov
mov
pusha
ffreep
int
cmps
pop
or
test
scas
sar
mov
sar
jno
mov
cmc
or
mov
push
pop
int3
lahf
inc
and
fcom
fs
sub
test
jb
in
jge
lahf
push
cli
mov
fldenv
cmp
sbb
cmp
xlat
and
fdivr
cld
je
mov
push
push
xchg
and
scas
adc
cld
jp
xor
movs
xor
xchg
and
call
out
pusha
shl
sbb
xor
in
bound
shld
cs
inc
pop
or
pop
xchg
or
and
cmp
sbb
mov
cmp
xchg
xchg
sub
jecxz
dec
imul
pop
xor
pop
dec
pop
or
xchg
mov
es
xchg
bound
push
mov
ins
xchg
inc
jbe
sub
aam
ja
add
sahf
movs
jo
mov
mov
(bad)
cmp
and
cmp
cmp
mov
inc
iret
sub
cmps
lahf
nop
(bad)
outs
popa
(bad)
rcr
int
or
ja
outs
and
push
pop
mov
mov
jge
inc
push
mov
cli
pop
pop
sub
out
imul
test
daa
movhlps
push
push
sbb
pop
xchg
cwde
dec
mov
call
add
xchg
mov
or
xchg
xor
inc
bound
fsubr
xchg
out
cmps
shr
mov
sahf
retf
mov
fwait
retf
push
add
or
fadd
xchg
mov
enter
shr
into
jae
mov
dec
fwait
or
shl
mov
cmps
packsswb
fnstenv
mov
xchg
mov
sbb
jl
pop
sub
das
jb
add
cmp
and
das
adc
movs
xor
mov
jp
cmp
pop
dec
cmp
out
test
in
dec
pop
stos
push
push
lods
add
shl
into
pmaxsw
inc
sub
pop
sub
gs
int
jo
xchg
mov
or
in
jns
aad
rcr
sub
pusha
push
loopne
mov
sbb
xchg
pop
aad
movs
in
bound
xchg
sbb
sti
repnz
pop
or
mov
mov
in
xchg
push
ins
add
push
mov
pop
ds
mov
xchg
aad
je
nop
pop
cdq
sbb
(bad)
pusha
or
xchg
pop
mov
loope
adc
shl
pop
stc
pop
mov
inc
add
out
push
cmp
ins
mov
ds
add
and
pop
push
(bad)
sbb
mov
inc
dec
jne
pusha
imul
fist
sbb
iret
imul
pop
cmp
cmc
test
sbb
inc
pop
clc
cli
push
popa
fmul
cmp
mov
add
sar
cmc
mov
sub
adc
ins
cwde
cmp
ins
popf
test
add
push
adc
lock
(bad)
aas
cwde
xchg
es
xor
(bad)
fistp
aam
cli
jo
dec
pusha
leave
or
mov
or
ss
lahf
or
test
pusha
scas
mov
shl
retf
push
push
in
jo
sbb
xlat
aad
sti
pop
sub
xchg
xchg
mov
and
pop
lods
fsubr
dec
je
jo
xor
les
mov
dec
mov
ds
inc
and
imul
fldcw
mov
cld
xchg
ret
or
fs
js
clc
inc
adc
jp
pop
js
icebp
prefetch
mov
test
sub
hlt
ds
into
sahf
cmc
es
sub
mov
push
xchg
and
inc
pop
ss
pop
pop
adc
popf
cwde
test
jnp
xor
(bad)
pop
add
cld
shr
arpl
test
cmp
dec
jns
imul
lods
retf
xchg
stos
push
inc
push
in
jmp
fild
and
cmp
sub
in
lds
cmps
add
sbb
call
jge
das
vshufps
push
and
pop
les
mov
mov
mov
dec
jecxz
mov
ja
ficom
in
(bad)
stos
push
mov
push
jmp
push
push
(bad)
mul
xchg
enter
(bad)
cwde
or
jecxz
xchg
imul
xchg
bound
dec
inc
bnd
jae
cmp
sbb
mov
dec
out
mov
or
rol
and
fidivr
movs
mov
cmps
inc
mov
xchg
pop
sbb
add
sbb
add
jg
hlt
fmul
adc
push
push
cli
stos
adc
fdiv
(bad)
jae
ins
clc
jmp
sti
pop
mov
or
or
cli
mov
imul
push
push
hlt
and
outs
stos
xchg
xchg
xchg
enter
fistp
in
lods
xor
neg
cs
stc
in
aaa
mov
xchg
mov
imul
imul
aam
(bad)
neg
sbb
mov
nop
popf
xchg
pop
cmp
cmc
(bad)
cmp
or
jns
mov
(bad)
inc
jle
into
sub
xor
(bad)
jle
sub
movs
dec
int3
call
ficom
xchg
in
inc
mov
mov
hlt
ds
test
call
sbb
aaa
mov
call
xchg
data16
jo
inc
mov
push
test
mov
and
sbb
out
retf
add
sbb
and
icebp
inc
std
xlat
iret
mov
cld
jmp
ret
popa
jmp
cmp
xor
shr
pop
cmp
icebp
push
push
adc
push
xor
das
mov
jecxz
cld
jo
jg
popf
mov
add
les
fidivr
mov
mov
mov
sub
arpl
gs
fwait
push
jae
cld
hlt
inc
add
xchg
push
dec
(bad)
pop
clc
pop
cwde
push
or
mov
movs
nop
ss
dec
jno
inc
cmps
mov
adc
xor
sbb
dec
inc
jmp
adc
in
xchg
xchg
mov
pusha
add
or
ds
test
test
mov
inc
mov
ror
or
adc
jne
pop
mov
mov
imul
adc
push
sub
packssdw
mov
cmp
int
dec
pop
dec
lods
pusha
cmp
mov
inc
dec
jecxz
retf
jecxz
add
mov
fidiv
cmp
ret
fwait
xor
jp
push
add
jmp
or
cmp
jno
mov
mov
and
sbb
sub
mov
mov
pushf
mov
or
ret
mov
sti
aam
call
(bad)
adc
jecxz
mov
mov
in
ficom
inc
fst
pop
imul
xor
loop
mov
adc
cmps
mov
aaa
pop
xor
mov
sahf
(bad)
loope
je
fst
or
lds
jnp
fild
les
mov
ds
rcr
or
jl
pusha
pushf
dec
pop
add
mov
(bad)
jmp
test
push
int
test
push
dec
inc
mov
in
xchg
daa
mov
sub
mov
repnz
xchg
jbe
stos
jnp
call
cmp
jno
sahf
mov
mov
cld
adc
(bad)
call
sbb
stos
in
mov
xor
mov
and
fcmovu
inc
ror
xor
imul
movs
ret
and
(bad)
fisub
ins
sub
pushf
stos
mov
pop
mov
data16
fwait
sar
or
mov
imul
(bad)
loope
imul
sbb
jecxz
mov
jae
cmp
scas
adc
scas
dec
inc
add
imul
inc
cwde
jg
pop
out
adc
push
mov
mov
xlat
mov
lock
movs
retf
loop
dec
push
cmp
sbb
push
aad
mov
sbb
fsub
outs
cmp
add
jmp
clc
and
jle
mov
repnz
pop
jmp
adc
or
(bad)
cmp
mov
cmp
dec
or
xor
jbe
xchg
iret
and
mov
add
xchg
fmulp
inc
pop
hlt
add
test
cmp
jne
or
in
in
or
and
cdq
enter
jnp
fistp
nop
leave
mov
cmp
pusha
jo
aas
inc
xor
adc
add
sbb
pop
fisubr
pop
leave
js
pop
mov
shr
inc
dec
jmp
ret
jns
popf
jns
dec
jmp
arpl
adc
inc
cs
mov
xchg
jnp
loop
add
pop
je
push
lahf
cmps
inc
pop
fisubr
adc
sbb
leave
dec
add
sub
jmp
and
mov
jge
inc
call
sbb
xor
imul
cmp
xchg
loopne
aam
sbb
(bad)
cld
jmp
outs
out
cwde
iret
adc
mov
xchg
fdiv
aad
das
sbb
push
or
sub
data16
aam
pop
(bad)
bound
cmp
mov
mov
add
jmp
rcl
dec
aam
xchg
imul
push
inc
rcr
lods
imul
or
aad
fadd
(bad)
enter
dec
stos
cmp
or
enter
dec
cld
pop
xchg
inc
out
sub
pop
movs
mov
cdq
iret
xor
and
push
mov
xor
enter
xchg
mov
pop
or
div
int
rcl
fs
inc
ja
sub
xchg
int
stc
sub
aam
jmp
sbb
push
xor
fwait
inc
clc
ret
xor
jb
sbb
mov
jae
jmp
repnz
add
inc
(bad)
out
sub
in
jno
movs
dec
repnz
or
pusha
mov
jg
mov
dec
fld
push
or
jo
cmps
fstp
out
adc
call
xchg
clc
sbb
pop
xor
and
push
add
cli
mov
enter
sahf
fwait
nop
mov
hlt
loopne
mov
stc
pop
sbb
loopne
adc
adc
adc
jae
stos
xor
sub
mov
lock
rcl
rol
xchg
xchg
inc
mov
daa
in
cmps
push
inc
lahf
(bad)
arpl
test
pop
leave
push
ret
adc
and
xor
cdq
inc
clc
je
aad
jl
mov
jns
cmp
pop
loop
mov
dec
sbb
inc
cdq
ja
and
arpl
dec
xor
jbe
xchg
xor
js
add
cmp
pop
scas
xor
mov
ja
push
pop
das
in
mov
cmp
ret
movs
lods
(bad)
mov
sahf
pop
(bad)
lahf
rcl
pushf
lea
cs
mov
jecxz
or
xor
cmc
add
les
fsub
test
imul
mov
leave
stos
cmp
or
and
scas
dec
xchg
mov
add
jmp
ins
clc
or
add
mov
ror
cmp
mov
loopne
pop
mov
imul
repz
in
rol
shl
mov
sub
or
hlt
test
push
cmp
mov
jle
(bad)
and
mov
push
add
adc
inc
dec
cmp
add
addr16
adc
pop
pusha
das
rol
mov
inc
mov
sahf
sbb
and
out
rcr
bound
sub
inc
adc
imul
popa
cwde
clc
sub
jno
int
out
retf
jnp
aam
and
sahf
cmp
mov
ja
bound
dec
push
mov
outs
out
jge
scas
mov
dec
cmp
mov
lods
or
push
clc
lock
(bad)
test
jnp
test
add
xchg
fisttp
adc
(bad)
ins
or
cmp
xchg
or
mov
xor
call
jns
iret
int
adc
sar
xor
dec
adc
inc
push
xchg
out
xchg
in
scas
nop
jmp
call
adc
in
jbe
lahf
imul
cmc
dec
ja
test
(bad)
sbb
mov
mov
ins
or
xor
ds
fs
rcr
lock
inc
daa
pop
(bad)
push
sub
pop
das
mov
out
sbb
shl
cmps
retf
aad
inc
mov
push
mov
inc
sub
int
push
mov
or
mov
scas
movs
pop
cmps
cmps
js
sti
ds
loope
shr
mov
bound
and
mov
push
pop
mov
idiv
pop
mov
popf
xor
enter
pusha
jge
dec
js
cmps
xor
jecxz
mov
gs
pusha
push
loopne
inc
cmp
adc
dec
xor
dec
and
(bad)
fimul
lock
sub
fucomp
mov
jno
mov
jge
shl
rol
inc
es
sub
dec
adc
lock
cmp
sahf
pop
call
imul
mov
jl
cs
test
lods
inc
add
xor
xchg
adc
call
sub
mov
test
adc
dec
xor
adc
stos
or
inc
pop
enter
sub
jg
sub
aam
cmps
pop
add
shl
mov
cld
(bad)
sbb
mov
mov
(bad)
mov
xchg
test
xchg
fcom
mov
in
or
xchg
xchg
shr
stos
loope
jl
push
xchg
xlat
lea
cld
jge
pop
adc
or
fwait
dec
shl
mov
xor
push
and
cdq
push
pop
dec
cmp
mov
test
in
jle
lods
rcl
fist
mov
push
(bad)
mov
xor
mov
test
dec
out
or
xlat
cmp
xor
xchg
dec
pop
jecxz
xchg
fstp
aas
and
cmp
retf
out
mov
mov
xchg
aas
lods
inc
nop
jo
pushf
xchg
jmp
int
push
fwait
mov
stos
jp
sub
enter
lock
push
push
xchg
sar
or
mul
cmc
pop
adc
cs
xchg
rcl
outs
data16
cmp
ficom
xchg
cmp
leave
nop
inc
lock
jne
std
jmp
sbb
push
push
out
out
addr16
es
or
jg
or
inc
and
add
mov
or
call
fdiv
or
adc
das
sub
nop
(bad)
call
push
jl
shl
pop
dec
(bad)
(bad)
into
inc
sub
clc
frstor
pusha
stos
pop
cmps
mov
sti
gs
scas
cmp
add
repz
pop
dec
and
xchg
or
push
push
dec
mov
push
in
cli
fsubrp
hlt
pop
xor
pop
pop
shl
jns
mov
dec
mov
and
jmp
je
lock
cld
add
mov
fcomp
sahf
mov
dec
sar
mov
outs
outs
add
(bad)
stc
push
fbld
lods
lea
leave
jecxz
add
js
xchg
pop
sbb
lock
xlat
push
jne
in
push
jecxz
add
or
pop
in
jp
fistp
pop
mov
push
cwde
pop
cmp
and
inc
fstp
push
mov
adc
outs
in
mov
sti
jg
imul
dec
push
pop
push
push
(bad)
ins
sub
inc
xor
dec
push
lahf
imul
sub
sbb
jecxz
nop
aad
add
mov
maxps
(bad)
movs
mov
adc
movs
das
call
push
out
sub
cmps
xor
cdq
aam
inc
into
inc
jne
xor
mov
xor
outs
mov
stos
arpl
(bad)
jmp
dec
jnp
mov
imul
sub
test
add
es
cwde
or
sub
mov
aam
push
cli
lahf
fwait
mov
fucomp
mov
jg
test
retf
ret
call
xchg
and
pop
out
pop
adc
jmp
cwde
and
jb
mov
je
dec
into
pop
cwde
xchg
cmc
scas
xchg
pop
stos
int
stc
not
mov
jmp
cdq
push
cmps
and
mov
ins
pop
cmp
adc
icebp
sbb
push
jno
cmp
cld
cld
xor
icebp
fdivr
push
ficom
fldenv
xor
sub
adc
(bad)
loope
fwait
sbb
adc
lods
bound
or
fldenv
inc
mov
mov
cmps
int
(bad)
xchg
dec
adc
(bad)
push
pop
in
mov
jge
cdq
aam
int
(bad)
or
and
inc
retf
ret
mov
or
sahf
sti
fidiv
xor
loop
mov
sbb
push
add
jno
outs
dec
jle
xchg
sti
inc
fdiv
cmp
inc
in
jne
cmp
mov
sub
std
inc
pop
scas
lds
xchg
lods
dec
jbe
movs
loop
or
adc
js
sub
cwde
ret
imul
push
sbb
das
hlt
xchg
mov
sti
or
clc
in
pop
movs
or
movs
imul
scas
into
call
cmp
and
loope
aad
mov
mov
push
adc
and
js
inc
sbb
mov
cmp
aaa
sbb
call
lea
cmp
pop
cmp
pop
clc
add
retf
dec
push
popf
stos
or
jnp
or
mov
mov
add
sahf
sar
mov
pop
cmp
fnsave
jnp
ret
jmp
cmp
rol
add
jle
dec
lea
sub
outs
sar
cld
pop
sbb
sub
push
(bad)
loopne
call
or
out
shl
jb
test
cs
jbe
dec
test
gs
sahf
adc
mov
push
pop
or
cmp
xor
dec
xor
loopne
int3
pop
pop
loopne
dec
mov
cli
sbb
adc
ins
push
repnz
sbb
ss
stos
xor
test
add
push
cmp
mov
sub
les
shl
fisub
inc
pushf
neg
push
cmp
cmp
or
aaa
nop
bt
xchg
adc
(bad)
cmps
outs
xchg
test
push
adc
fadd
add
mov
mov
ins
lds
in
cld
and
iret
mov
or
pushf
retf
cwde
xor
in
mov
pop
push
xchg
in
adc
ins
mov
ins
stc
or
iret
add
push
loop
xor
cmc
push
or
(bad)
(bad)
and
jmp
mov
je
cwde
fnclex
inc
shl
pop
adc
mov
sbb
je
ja
in
into
fs
scas
ret
ss
(bad)
jmp
nop
ins
stos
jmp
xchg
xor
mov
inc
test
ins
inc
(bad)
fdiv
scas
jecxz
std
mov
pop
and
xor
fsubr
jmp
outs
dec
inc
xor
arpl
dec
outs
out
xor
in
push
sub
jp
outs
aaa
push
mov
je
push
jle
or
outs
cdq
loop
mov
pusha
jo
mov
cmp
mov
(bad)
mov
push
jmp
(bad)
js
sbb
mov
jbe
add
pop
or
rcr
dec
sti
cmps
rcl
in
pop
outs
or
jno
pusha
sub
dec
(bad)
mov
xchg
ins
fidiv
ins
jns
jmp
ja
leave
aas
sub
add
jnp
inc
mov
mov
jb
imul
(bad)
mov
xor
and
hlt
repnz
rol
xor
push
jnp
ror
cmp
xchg
pop
fs
mov
loopne
sti
add
aaa
jo
sahf
das
mov
adc
idiv
inc
dec
and
fisubr
xor
scas
aad
add
inc
or
mov
adc
xchg
adc
and
dec
inc
dec
jae
pop
sar
aas
pop
xchg
sub
pushf
iret
or
and
sub
aam
push
fsub
jle
das
cli
cmc
xchg
add
data16
dec
cmp
sahf
cmp
push
(bad)
jo
stos
push
test
js
ja
retf
int3
retf
cdq
pop
mov
ret
jno
sbb
in
push
lods
or
push
dec
loop
xchg
add
inc
loope
fcmovnb
add
inc
jno
loopne
dec
mov
inc
mov
retf
xchg
cwde
mov
fs
int
mov
dec
retf
call
cmps
xchg
adc
push
sub
cmps
xchg
mov
popa
or
pop
fbld
repz
push
xchg
sub
xlat
pop
cwde
xor
pop
push
pop
push
mov
aaa
outs
(bad)
pushf
pop
leave
or
cmp
add
mov
clc
inc
cmps
and
lock
jns
lock
test
mov
gs
shl
(bad)
mov
sti
sbb
pusha
outs
adc
sub
mov
jno
inc
and
sbb
mov
mov
sbb
das
mov
mov
inc
push
jb
sbb
inc
out
sbb
aas
xchg
xor
(bad)
ja
cld
cwde
jno
sti
mov
xchg
(bad)
test
adc
mov
in
cmp
test
cdq
pop
dec
push
dec
les
hlt
lods
mov
mov
jp
mov
mov
scas
movs
test
inc
pop
(bad)
popf
out
jno
mov
or
mov
cmc
push
inc
movs
ret
outs
and
call
xor
or
aad
pop
scas
std
leave
jns
and
adc
jbe
jno
push
mov
dec
cli
outs
dec
mov
js
push
scas
add
je
and
lahf
cli
inc
mov
repnz
adc
sti
push
push
retf
add
ret
retf
ret
push
sahf
jmp
inc
add
mov
(bad)
dec
jb
cmp
jno
push
sbb
test
inc
popa
(bad)
cs
mov
repz
(bad)
popf
cmps
lahf
mov
jmp
xchg
or
push
clc
inc
ret
adc
and
fcomi
out
imul
push
xchg
setno
xlat
push
stos
mov
les
test
pop
push
xor
push
sbb
fdivr
xchg
mov
cmp
or
shl
icebp
mov
(bad)
fistp
mov
add
cmps
adc
rcr
je
repz
sbb
arpl
dec
mov
push
aas
imul
lds
or
pop
jp
in
jle
mov
and
xchg
pusha
je
movs
jg
xor
cmp
mov
and
cmp
stc
mov
mov
jne
pop
jge
rcl
inc
jb
sbb
mov
pop
xor
jecxz
or
shl
mov
je
xor
icebp
jbe
imul
sar
sar
mov
psubb
xor
es
retf
idiv
push
jno
test
sbb
dec
cwde
ins
pop
scas
cdq
rcl
sub
jbe
fidivr
mov
or
mov
push
rcr
mov
not
mov
stos
adc
cmp
xor
adc
pop
push
fcom
stc
sub
dec
iret
xchg
outs
mov
std
rcr
into
loopne
dec
ror
fst
and
mov
sbb
jmp
fiadd
pushf
mov
and
pop
mov
ins
stos
rcl
test
adc
test
sbb
imul
outs
cmps
xchg
mov
cmp
lahf
out
cmp
call
inc
je
mov
adc
ja
clc
mov
shr
pop
aaa
pop
jmp
aaa
in
loop
lea
iret
or
(bad)
loopne
out
imul
inc
test
lock
xchg
popf
ror
in
dec
ja
fndisi(8087
fucomi
pop
cmp
fcmovb
adc
dec
push
and
dec
pop
bound
pop
sub
aas
adc
mov
adc
inc
push
jns
into
sub
mov
ins
adc
xlat
lods
xchg
lods
cmps
mov
dec
add
or
cmp
imul
cmps
out
jo
lock
mov
add
inc
cmp
neg
es
xchg
cmps
add
fcom
call
sbb
and
das
push
pusha
aaa
add
adc
daa
inc
int3
cwde
into
dec
xchg
hlt
out
fsub
enter
stos
into
int
mov
push
sbb
push
lock
cmp
sbb
adc
mov
push
xor
call
ficom
pop
and
inc
push
je
pop
imul
mov
jne
push
shr
jecxz
in
dec
in
mov
jo
cld
and
ins
xchg
int
sahf
push
xor
sub
and
sub
ins
mov
xor
pushf
dec
pop
or
mov
ja
dec
cli
add
mov
ret
add
movs
ret
stc
inc
inc
adc
retf
clc
xchg
outs
and
mov
jnp
jmp
retf
test
sub
adc
ins
jp
sub
fist
ins
ja
fdivr
loopne
xor
inc
or
mov
repz
cmp
add
movs
out
dec
lods
push
cmp
push
test
repz
outs
sub
ror
out
or
stc
std
scas
in
ss
sub
call
leave
and
into
ret
mov
je
inc
xchg
icebp
mov
xchg
aad
mov
jecxz
popf
mov
int3
dec
(bad)
xchg
loope
mov
cmp
idiv
dec
adc
push
add
inc
outs
sub
aad
outs
pop
mov
loope
cdq
in
cmp
inc
sbb
in
or
mov
or
out
outs
arpl
in
(bad)
movs
push
inc
mov
mov
dec
and
xchg
mov
out
mov
mov
popf
push
xchg
mov
bound
neg
cmp
inc
cmp
ins
xlat
fwait
dec
jne
push
inc
cwde
adc
ret
stos
push
cmp
fistp
mov
out
rol
addr16
retf
pop
cmp
cmp
clc
cwde
and
in
stos
jns
xchg
jmp
cmp
mov
mov
push
in
loopne
and
cmp
sub
ss
scas
push
retf
scas
or
dec
mov
imul
sahf
sahf
out
ss
sub
mov
and
pop
fsub
es
mov
pushf
xchg
iret
out
jbe
iret
pop
sti
icebp
add
sub
and
fs
mov
(bad)
xchg
jb
add
popf
fst
or
test
or
sub
inc
in
cmp
(bad)
xor
cwde
xchg
ja
nop
jle
ss
sub
in
fidiv
xchg
and
dec
adc
adc
mov
pop
ror
sub
mov
mov
jmp
cmps
fld
fisttp
cmp
out
mov
movs
scas
xchg
imul
imul
cmp
cmp
fwait
out
je
push
sti
add
pop
sub
adc
retf
xchg
leave
push
mov
jbe
push
push
lahf
lea
inc
jnp
ds
out
cmc
(bad)
cli
icebp
fidiv
ss
(bad)
outs
mov
icebp
(bad)
(bad)
xor
in
jno
push
fisubr
lahf
jno
sub
push
mov
retf
pop
fsub
pop
mov
pop
xor
inc
dec
into
sub
xor
jg
dec
jmp
pop
(bad)
or
jnp
lock
jl
cdq
imul
ja
sub
xchg
nop
sbb
xor
mov
jle
xlat
lods
or
xor
mov
xchg
jns
and
lods
neg
sahf
mov
mov
loop
push
cmp
rcr
mov
pushw
xor
test
xlat
out
sbb
nop
aam
fdivr
stos
xchg
xor
lods
(bad)
ja
mov
sub
cmps
nop
xchg
sar
stos
sub
or
(bad)
mov
enter
mov
cmp
imul
xor
xchg
hlt
xor
sbb
fwait
sahf
xor
nop
sub
mov
sub
mov
fist
dec
stos
mov
sbb
call
movs
into
loopne
and
sub
ret
mov
hlt
(bad)
outs
pop
and
ret
add
test
or
cmc
xor
push
push
fild
call
and
ins
ins
cmp
es
xrelease
outs
imul
shl
pop
pusha
mov
rcl
in
adc
cmp
popa
add
cdq
test
scas
xchg
and
dec
inc
(bad)
movs
ror
sahf
js
data16
xlat
cmp
inc
xor
scas
push
cmp
jge
and
call
and
lahf
xchg
rcl
or
jnp
imul
sbb
cmp
int3
outs
push
shl
sar
repnz
pop
int3
not
xchg
push
retf
dec
adc
and
push
int
mov
loop
mov
ror
loopne
iret
sub
shl
stc
jecxz
mov
xor
or
push
pop
or
jnp
push
and
jno
cwde
and
sti
imul
loopne
jge
xchg
test
mov
sub
jns
std
mov
cdq
mov
adc
xor
push
mov
dec
jmp
push
imul
dec
int
inc
dec
jmp
and
cmps
mov
int
imul
imul
leave
push
loope
cmp
(bad)
scas
jbe
jno
dec
cli
repz
sbb
test
cmp
lock
dec
outs
aam
adc
dec
test
pusha
js
(bad)
and
adc
cmps
sbb
test
push
adc
loopne
jle
in
arpl
out
lods
mov
pop
push
xchg
stc
loop
fdiv
test
fwait
ret
xlat
or
and
mov
jecxz
sub
jmp
cmp
bound
daa
or
inc
test
cmp
aaa
clc
sbb
cmp
cld
cmc
add
aam
mov
xor
cld
aaa
sbb
iret
daa
mov
dec
popa
sti
dec
cs
test
retf
mov
or
mov
in
mov
xchg
push
test
push
lods
jb
out
push
pop
xchg
pop
push
mov
pop
jmp
cmps
push
cmp
movs
jmp
dec
xchg
sahf
sub
dec
jb
test
hlt
mov
out
cli
inc
pop
scas
out
ret
dec
shl
mov
xchg
mov
not
es
in
dec
jno
pusha
mov
out
cmp
or
mov
call
sbb
retf
fmul
jo
les
jne
fstp
adc
aas
cs
cmps
dec
fs
imul
mov
mov
push
cdq
into
jns
ins
mov
xchg
jecxz
mov
aam
adc
ss
in
add
fisubr
cld
aaa
add
xchg
fsub
scas
fxch
cwde
dec
mov
cmps
add
cli
mov
push
ins
add
fcomp
jp
inc
pop
sub
xor
or
xchg
in
sti
cli
sub
xchg
ja
aas
inc
cmp
rcl
or
sbb
jns
out
inc
dec
in
mov
mov
mov
push
fild
sub
or
add
xchg
leave
test
or
into
and
or
sahf
fdiv
repnz
gs
push
lods
xor
jge
lods
(bad)
or
mov
xchg
int
retf
fmul
adc
xor
pop
xor
sbb
sbb
mov
add
ds
mov
and
ret
addr16
jns
mov
adc
xchg
pop
jl
mov
push
imul
pop
(bad)
pop
(bad)
movs
pop
adc
push
loop
mov
adc
retf
mov
ffree
ds
and
push
aad
fcmove
in
adc
push
mov
pop
out
push
in
sub
mov
lods
ss
sar
cmp
ficomp
out
movs
ror
push
push
retf
jo
inc
dec
xor
les
and
push
jne
outs
or
mov
pop
add
sbb
mov
(bad)
data16
or
dec
dec
push
and
inc
movs
sub
pop
pop
pop
in
jno
xchg
ror
push
jbe
push
mov
add
mov
ins
ss
and
xchg
dec
test
xchg
inc
add
pop
fild
adc
(bad)
leave
movs
xchg
mov
jmp
imul
jae
and
ret
fcom
pop
sbb
fsubrp
xchg
dec
cmp
fldcw
int
pop
xor
push
call
push
pushf
jae
sub
xor
aas
push
sbb
addr16
scas
cmps
sub
call
stos
cdq
vpcomub
push
(bad)
neg
cmp
sbb
mov
cmps
daa
lds
popa
cmp
fst
leave
ret
fwait
push
cmp
or
mov
daa
icebp
pop
fcomip
sbb
dec
fbstp
aaa
movs
in
div
fiadd
push
jb
test
xchg
les
int
xlat
or
sbb
sbb
sub
xor
test
mov
jo
ins
mov
and
or
sub
mov
aas
sbb
jb
add
mov
inc
shr
sub
lods
mov
scas
lods
inc
inc
push
(bad)
mov
in
or
xchg
pop
ror
sbb
outs
push
fmul
inc
ret
inc
popf
mov
cmp
shl
cdq
push
jle
push
pushf
fadd
std
jb
(bad)
xchg
in
sti
fs
pop
inc
push
cmp
fsubp
je
sbb
lds
and
sub
test
add
jmp
sbb
out
int
fs
xor
imul
arpl
add
pop
gs
mov
cmp
add
adc
mov
xchg
in
(bad)
int3
fisttp
xor
in
push
jle
pop
mov
sub
aas
imul
lods
cmp
sub
xchg
lods
or
mov
out
test
xchg
push
adc
loop
sar
cmp
or
inc
mov
mov
mov
bound
retf
test
jae
pusha
sbb
dec
or
mov
out
loope
int
inc
je
pop
jbe
pop
call
aaa
dec
es
push
ins
sti
jmp
add
push
mov
mov
arpl
inc
or
or
cld
or
mov
in
and
xchg
pop
xchg
pop
call
cmp
in
mov
imul
jge
repnz
pusha
cmp
loope
fdiv
(bad)
jl
addr16
cwde
mov
lahf
cmp
push
cmp
rol
mov
inc
xor
mov
sub
mov
clc
in
cmp
or
mov
and
lock
int
push
sbb
jg
icebp
mov
js
pop
test
test
(bad)
mov
pop
add
xor
pop
push
sahf
inc
mov
mov
inc
retf
adc
or
add
mov
aas
idiv
sub
test
pop
push
stc
jbe
rcl
fs
stos
push
cmp
inc
inc
cmp
mov
popf
pop
stos
dec
cmps
xor
mov
iret
add
push
and
sahf
sub
lds
pop
add
add
lods
daa
xor
mov
sti
sbb
inc
cmp
xor
add
stc
jne
aad
and
icebp
popf
dec
mov
and
mul
cli
mov
lods
ins
lea
ins
or
ins
retf
iret
test
mov
popa
add
add
loopne
cmp
loop
cmp
dec
or
popf
and
and
mov
jmp
cmp
mov
push
add
cwde
mov
sub
rcl
jne
mov
add
adc
pop
ror
and
loopne
pop
daa
aam
mov
popf
jge
ds
or
sahf
inc
xor
sbb
push
loope
cld
cmp
dec
mov
(bad)
mov
jle
movs
into
cld
shl
xchg
dec
mov
add
inc
dec
aaa
repnz
retf
js
or
inc
push
adc
xchg
ins
and
cmps
test
jb
adc
call
in
xor
or
jns
movs
es
add
shl
lea
jmp
xlat
dec
stc
and
pop
or
push
clc
xchg
pop
cmps
adc
lahf
xchg
or
out
outs
xchg
xchg
enter
jl
pusha
int3
push
sahf
inc
fldenv
stc
movd
adc
jp
xchg
add
xor
sub
mov
mov
out
jle
inc
js
jge
xor
stc
fisub
jmp
iret
fimul
xchg
out
adc
(bad)
shl
dec
mov
je
mov
adc
mov
in
fwait
mov
adc
sbb
mov
jge
dec
fadd
cmps
dec
imul
and
jmp
retf
mov
pop
mov
xor
sub
sbb
dec
movs
(bad)
xchg
dec
fisttp
rcl
je
sub
xchg
jnp
lods
stos
dec
and
in
test
sub
cwde
call
cdq
or
sub
mov
push
nop
aas
fdiv
(bad)
imul
idiv
shl
xchg
mov
sub
fisub
mov
jle
fild
xor
sbb
test
add
inc
sbb
mov
clc
inc
xor
xor
les
int3
mov
jp
adc
retf
(bad)
repnz
call
std
push
aad
mov
lds
cmp
cld
lods
ins
mov
mov
cli
inc
xchg
fwait
ret
and
ret
mov
xchg
out
cs
(bad)
in
gs
into
mov
dec
push
fucom
mov
push
in
movs
sbb
fcom
fxch
les
nop
dec
or
dec
std
dec
call
xchg
cvtps2pi
cmp
iret
cmps
sahf
inc
ror
mov
les
std
mov
imul
fxch
adc
into
sub
adc
je
push
fst
cmc
das
or
fwait
ror
mov
ja
fwait
inc
leave
cld
mov
dec
das
cmp
cmp
dec
test
in
aaa
test
(bad)
jl
and
push
rol
ds
shl
jmp
adc
std
sbb
repnz
sub
loopne
pop
popa
or
push
enter
pop
sub
push
sti
sub
aam
xchg
inc
mov
jge
pop
jb
dec
shr
inc
mov
push
mov
mov
mov
outs
push
push
scas
inc
inc
cmp
dec
mov
and
fcmovu
cmp
push
popa
rol
jo
xchg
mov
push
pop
movs
pop
mov
add
outs
ss
fcom
daa
pop
pusha
inc
ret
jmp
pop
mov
icebp
repz
(bad)
fimul
mov
push
dec
and
std
jmp
mov
mov
push
jno
add
sub
hlt
push
xor
xor
movs
jae
inc
or
mov
les
popf
add
(bad)
ds
mov
jno
shl
xor
in
repnz
ret
mov
or
inc
dec
jmp
ja
xor
(bad)
mov
pop
jecxz
jmp
cs
test
sar
adc
rcl
(bad)
bound
cmp
fistp
jl
loop
and
dec
mov
imul
pop
xchg
sahf
adc
inc
call
(bad)
(bad)
iret
ror
xchg
(bad)
jo
iret
mov
inc
mov
inc
into
addr16
in
ret
lock
or
inc
nop
sbb
dec
test
ja
and
(bad)
mov
shl
add
stc
xor
inc
stos
mov
jns
ja
inc
fisubr
rcl
jmp
iret
call
jns
sbb
mov
ja
fst
call
arpl
xor
fsub
mov
iret
iret
gs
sbb
bound
div
inc
and
mov
js
pop
inc
push
mov
and
es
mov
jae
lods
pop
adc
inc
sbb
stos
(bad)
stc
mov
and
inc
or
jne
sub
sbb
add
ins
nop
dec
and
fbstp
ins
sub
jp
push
cmp
push
ror
stos
push
inc
adc
mov
imul
in
aaa
adc
(bad)
nop
icebp
cmps
jmp
cld
jne
(bad)
js
jmp
cmp
(bad)
repz
mov
js
js
fcom
mov
push
jg
hlt
into
sub
mov
xor
mov
mov
mov
clc
clc
jno
pusha
and
jge
mov
in
push
stc
in
jp
pushf
sar
pop
add
mov
je
sti
out
cmp
or
jnp
xchg
mov
jne
cmp
mov
fild
mov
shl
or
repz
fist
scas
sbb
rol
test
jb
(bad)
xsha1
cmps
mov
push
xor
ins
lahf
repnz
adc
jnp
(bad)
xor
fiadd
or
sub
and
cmp
pop
add
jg
adc
mov
leave
inc
scas
rol
xchg
xor
mov
add
sub
loope
les
cmp
mov
ins
adc
addr16
leave
jmp
xor
add
(bad)
jmp
pusha
(bad)
sub
in
adc
cmps
cmc
fsub
sub
data16
dec
jmp
add
in
push
leave
xchg
in
adc
addr16
sub
and
or
mov
cmp
std
sahf
cmps
(bad)
out
mov
xor
push
mov
dec
cmp
out
test
fs
push
loopne
cmp
sub
ret
or
cmc
mov
mov
cdq
jl
mov
xor
add
sbb
fwait
push
push
scas
mov
stc
nop
jg
mov
(bad)
sahf
in
cmp
cdq
int3
push
dec
in
adc
enter
les
dec
iret
cmp
into
mov
mov
dec
mov
lahf
sbb
shr
or
nop
das
mov
mov
sub
jmp
jae
adc
rcr
pop
jb
(bad)
cmp
dec
pusha
push
pop
add
ins
or
cmp
mov
mov
clc
inc
cmp
jmp
sub
movs
cmp
aas
mov
xchg
xor
ror
mov
js
lods
xor
and
sbb
outs
arpl
sub
sbb
pop
mov
cld
or
jle
mov
inc
dec
add
cmps
pop
add
xor
inc
mov
(bad)
repz
mov
and
cmps
stos
xchg
into
inc
shr
outs
pop
sbb
mov
pusha
cdq
jns
adc
push
cmp
xor
sbb
inc
call
ja
jmp
ret
imul
sub
out
loopne
mov
cdq
mov
std
icebp
inc
xacquire
mov
mov
dec
dec
pop
and
jo
push
movs
jb
cmp
sbb
xor
mov
imul
retf
popf
mov
cmps
mov
jecxz
popf
jg
sbb
shr
repnz
jne
shl
add
pop
push
stos
cmp
adc
pop
scas
(bad)
aam
xchg
push
xchg
push
xor
mov
fisub
xchg
dec
mov
mov
dec
pop
xchg
jmp
jo
mov
hlt
dec
jnp
(bad)
jp
fucomip
adc
or
out
sub
dec
outs
mov
outs
pushf
fucomi
repz
ror
sbb
sub
enter
loope
mov
iret
sbb
mov
xchg
pop
adc
cmp
call
lock
cmc
xlat
push
pushf
mov
sbb
adc
ins
in
mov
inc
mov
out
jle
outs
fist
or
aaa
mov
or
loope
and
pop
add
dec
sbb
cld
xchg
push
pop
xchg
icebp
sub
jmp
cmp
repnz
cmp
pop
jb
les
or
scas
xchg
push
es
cmp
hlt
adc
jno
ins
out
fst
xor
ds
inc
std
mov
pop
sbb
mov
dec
mov
add
add
adc
jecxz
inc
cmps
sub
xor
jmp
not
cmp
fwait
clc
and
and
pop
dec
stos
jecxz
cmp
push
test
jecxz
mov
loope
ficom
rcr
xchg
jae
mov
mov
xor
retf
test
mov
ja
and
cmp
int3
inc
outs
inc
xchg
ja
imul
add
sbb
enter
mov
cli
adc
sbb
fs
call
and
fiadd
fbld
jl
js
xchg
cmps
jo
jle
dec
icebp
dec
outs
push
push
sbb
mov
pop
ja
popaw
cmp
adc
loope
pop
dec
scas
mov
push
shl
mov
and
sbb
pop
ds
scas
push
or
std
sahf
push
ins
aad
dec
scas
lock
mov
xor
scas
sbb
sbb
mov
mov
clc
(bad)
icebp
xor
xor
inc
cmp
push
gs
xchg
daa
and
stc
add
ret
pop
add
jo
sar
sbb
popa
or
or
mov
pushf
dec
mov
jecxz
leave
sub
or
ret
in
test
inc
aam
int3
add
inc
and
sub
int3
inc
and
mov
lea
hlt
mov
pop
ficomp
dec
push
mov
jbe
cmp
xchg
add
mov
inc
fs
loope
cli
fadd
cld
or
sub
add
fild
hlt
add
movs
adc
cwde
out
add
fisttp
xlat
jecxz
in
(bad)
std
jb
pop
mov
fsubr
add
ds
pop
lods
mov
xchg
inc
(bad)
fcomp
adc
mov
loopne
je
jbe
(bad)
cdq
dec
imul
xor
mov
sub
mov
dec
icebp
or
fisubr
sbb
or
pushf
mov
(bad)
lea
loope
jne
(bad)
not
test
xor
mov
push
adc
loopne
pop
add
test
push
ds
adc
or
add
dec
aas
jmp
dec
adc
mov
sub
shl
retf
das
and
test
rcl
cdq
mov
jne
ins
add
retf
mov
jbe
fcmovu
xchg
push
(bad)
rol
stos
pop
add
dec
lock
push
addr16
ror
adc
mov
loope
add
shr
mov
sub
xchg
mov
(bad)
xchg
adc
loope
je
jbe
lahf
pop
pop
add
stos
sbb
push
sub
pop
sub
push
xchg
mov
sub
lock
outs
or
mov
jb
dec
sar
test
mov
pop
retf
jmp
jmp
fcom
mov
(bad)
mov
inc
mov
and
sbb
mov
xor
int
sub
xor
inc
inc
push
clc
mov
push
pop
repnz
sub
lock
imul
jns
mov
call
adc
push
lods
jmp
pop
adc
fisub
mov
jle
push
jns
mov
sbb
mov
mov
push
lea
retf
and
adc
adc
jl
push
and
add
inc
or
sub
xor
pop
int3
icebp
fstp
iret
(bad)
jg
jecxz
jno
cmc
ins
pop
aas
cmp
(bad)
push
jle
jbe
in
mov
mov
loope
arpl
pusha
cmp
leave
xchg
imul
repz
cmps
(bad)
out
push
movs
inc
cs
jb
mov
mov
jae
outs
push
add
sbb
add
sbb
in
ss
clc
dec
cmp
ss
dec
jp
rcr
sti
addr16
popa
loop
cld
jl
jmp
mov
ds
je
mov
call
les
test
stc
mov
cmp
jmp
pop
xchg
mov
or
pusha
push
jg
push
test
in
or
fst
mov
inc
int3
inc
xchg
dec
mov
xchg
ror
mov
add
inc
xchg
or
cmp
dec
mov
add
dec
jno
(bad)
push
cmp
and
jo
movs
mov
or
daa
push
jmp
adc
retf
popf
arpl
shr
pop
(bad)
cmp
int3
std
xchg
xor
pop
sbb
adc
mov
jb
mov
(bad)
je
test
sti
inc
in
push
ins
cmp
or
inc
ins
pop
cmp
mov
dec
push
push
pop
mov
sbb
mov
add
inc
mov
stc
imul
jmp
jb
cwde
mov
icebp
jg
fsubrp
pushf
aaa
mov
xor
nop
jno
not
out
xor
mov
fmulp
call
xchg
adc
xchg
sbb
jl
dec
call
dec
in
stc
jno
clc
in
pop
arpl
shl
lock
sbb
mov
stos
jno
(bad)
sar
push
xchg
push
sbb
out
push
rep
addr16
das
pop
not
inc
mov
mov
neg
pop
sbb
shl
gs
and
in
jbe
sahf
mov
cdq
les
pminsw
mov
(bad)
adc
push
sbb
nop
dec
xor
out
and
mov
dec
mov
lods
out
stos
jbe
xchg
jge
push
in
fisubr
push
sbb
sbb
jge
sahf
daa
(bad)
dec
push
xchg
dec
lahf
cdq
push
call
sub
sbb
push
xchg
out
out
push
pushf
ror
or
adc
fst
cmp
addr16
scas
adc
in
xor
data16
adc
xchg
hlt
je
mov
jle
ja
inc
add
iret
jae
fcomp
cmp
and
ret
and
int
pop
ins
daa
push
test
push
xor
cmp
inc
or
(bad)
sbb
iret
push
aad
call
shl
std
sbb
(bad)
je
inc
inc
call
fnsave
imul
test
push
arpl
mov
and
inc
test
sbb
xor
cmp
jbe
xor
sahf
adc
sbb
in
stos
int
ret
sbb
data16
sub
es
sub
adc
cs
es
push
sbb
inc
in
jbe
popf
add
lahf
cmps
xor
enter
cmp
js
pop
lods
fstp
out
sub
lds
dec
cmps
aaa
in
inc
inc
iret
mov
add
mov
add
mov
inc
inc
xchg
and
or
xchg
stos
inc
xchg
jmp
sub
adc
sti
outs
adc
jmp
pop
jae
addr16
aad
push
sub
pop
mov
xlat
in
int3
xchg
jp
dec
jae
bndstx
les
mov
inc
stos
adc
fist
(bad)
fadd
mov
aas
xor
shr
or
mov
push
lahf
cli
adc
inc
lea
mov
imul
pop
push
cmovne
mov
mov
adc
dec
push
mov
cmps
dec
hlt
adc
sub
jns
aaa
stc
ins
scas
pop
mov
xchg
push
mov
sahf
mov
and
stos
mov
xchg
lahf
shl
fs
ret
and
push
xor
das
push
or
(bad)
cmp
stos
or
add
mov
adc
xchg
xchg
ret
dec
mov
and
lahf
or
jb
test
mov
or
xchg
sbb
sub
push
lock
push
fsub
in
cmp
or
shl
jb
fist
sti
in
jno
or
outs
dec
and
pop
cmp
mov
cmp
mov
cmps
call
ds
mov
cli
cmc
xchg
std
arpl
sub
(bad)
xchg
adc
scas
xor
inc
push
dec
jo
dec
xchg
add
out
hlt
add
xchg
lock
dec
bound
or
cmp
xlat
cdq
inc
adc
and
mov
mov
cs
pop
sbb
(bad)
push
arpl
inc
(bad)
call
cwde
std
je
lds
pop
popa
pop
ret
js
mov
aad
jge
or
out
cmc
sti
mov
pop
iret
jg
mov
pop
cs
mov
jne
out
mov
or
rcl
and
jmp
jnp
cmps
jnp
jmp
inc
push
fs
enter
pop
dec
push
mov
or
not
arpl
popf
mov
cwde
retf
in
xchg
retf
out
shr
ss
ss
adc
push
out
pop
repnz
mov
or
push
jno
adc
sti
push
dec
dec
xor
ret
add
adc
xchg
and
int
js
jbe
mov
enter
mov
sbb
dec
enter
inc
dec
dec
or
jae
mov
mov
mov
adc
je
les
inc
sub
mov
loopne
mov
dec
push
mov
cmp
inc
(bad)
jmp
ds
aaa
fwait
mov
inc
inc
xor
retf
push
adc
mov
push
push
call
ins
add
xor
sbb
pop
mov
xor
loop
ret
lahf
jno
push
movs
pop
loop
jo
clc
scas
aas
icebp
leave
adc
jbe
mov
xchg
inc
fcomp
(bad)
ins
add
adc
xchg
jl
xchg
xchg
scas
fmul
xor
fdivrp
cdq
jmp
push
test
jge
xchg
sbb
dec
push
outs
outs
andps
(bad)
and
outs
and
rcr
data16
cdq
clc
mov
in
xor
push
and
loope
mov
test
jb
test
pusha
push
fwait
stos
adc
mov
or
sub
popa
loope
imul
daa
jbe
fwait
add
sar
sar
enter
mov
jmp
push
or
imul
ret
sub
in
les
mov
mov
aas
fsubr
xor
lds
inc
or
mov
nop
jo
arpl
movs
mov
fadd
test
xchg
sub
mov
push
adc
repz
(bad)
fcmovne
sbb
stos
mov
imul
jle
adc
cli
lock
or
xchg
mov
dec
pop
xchg
jg
sub
dec
xor
pop
and
add
scas
retf
mov
sbb
sar
push
cmps
mov
inc
dec
pop
add
adc
outs
jg
sbb
add
adc
mov
mov
retf
int
dec
and
mov
or
push
dec
js
add
add
int3
xor
xchg
adc
jg
cs
int
div
mov
in
or
sbb
jno
push
pop
sahf
imul
pusha
dec
push
shl
div
pop
pop
push
popa
(bad)
shr
ins
pop
sbb
xor
or
int3
jmp
sbb
sar
outs
sub
scas
shl
mov
sub
sub
ins
xchg
scas
loopne
inc
test
movs
cmc
loopne
cdq
xchg
add
lods
fcmovbe
in
(bad)
dec
inc
loope
add
test
xor
push
adc
fadd
pop
cmp
cmc
gs
sub
std
cmp
inc
xchg
mov
cmps
aas
sbb
shl
cli
call
push
mov
inc
sti
out
push
imul
pop
or
shr
adc
or
mov
pop
aas
dec
push
add
inc
xchg
in
mov
stos
mov
stos
push
cmp
fstp
(bad)
sub
ret
mov
mov
dec
add
out
pop
adc
xchg
xor
xor
mov
cmps
out
cmp
sbb
test
repz
sbb
stos
test
mov
out
je
adc
fisttp
ja
mov
dec
repz
pop
retf
dec
sbb
mov
mov
aad
sbb
int
mov
inc
inc
mov
out
sti
vcvtss2si
mov
mov
es
cmp
push
push
loopne
arpl
addr16
inc
adc
xor
test
fist
mov
call
dec
xor
jbe
loopne
add
pop
div
sub
mov
mov
leave
cld
jle
or
pop
and
pop
mov
(bad)
pusha
mov
xor
out
movs
gs
cld
lahf
adc
imul
dec
cmc
in
clc
adc
mov
mov
jne
fild
or
adc
jge
dec
mov
inc
jecxz
xchg
stos
add
ret
lods
lods
dec
int
pushf
inc
into
cmp
dec
dec
cmp
aas
mov
lahf
mov
cwde
fstp
ror
in
leave
aad
(bad)
sbb
cmp
jmp
cmps
lahf
jp
dec
xchg
jne
retf
jl
inc
and
rcl
not
and
add
jl
dec
(bad)
pushf
mov
rol
ins
out
xor
sahf
fwait
sar
outs
cwde
dec
jbe
push
sbb
movs
mov
mov
cmp
lods
adc
jns
push
push
xchg
xlat
xor
arpl
imul
jae
dec
aam
pop
and
sbb
stc
je
dec
sbb
jmp
mov
sbb
pop
or
push
mov
inc
lods
mov
addr16
jne
(bad)
(bad)
stos
lea
dec
aad
cmps
f2xm1
and
popf
cmp
push
jnp
int
mov
addr16
dec
pop
or
clc
cmp
das
jle
inc
(bad)
mov
imul
loop
hlt
jp
push
pop
cdq
cmp
test
les
in
cmp
test
sbb
sub
dec
jge
inc
jne
aaa
xchg
aaa
push
fidiv
sbb
mov
pop
push
or
mov
aam
ficomp
pusha
(bad)
int
xor
xchg
xchg
xchg
mov
inc
mov
adc
das
(bad)
aam
dec
adc
xchg
inc
icebp
mul
lar
rol
sbb
test
(bad)
cmps
push
fcom
(bad)
xchg
imul
jl
stos
outs
lock
cmp
inc
mov
pushf
shr
jge
enter
mov
outs
cs
xor
nop
sub
(bad)
pop
push
jmp
xchg
shl
ja
fld
into
pop
sub
inc
cli
sbb
xchg
bound
pop
jns
xor
adc
mov
jo
xor
push
ret
xor
rcr
mov
ss
fldcw
mov
push
lock
mov
data16
pop
cdq
mov
pop
scas
xor
push
jbe
or
mov
js
push
ror
inc
jae
xor
or
jne
scas
(bad)
add
jecxz
push
in
xchg
pop
jl
pop
retf
lods
in
xchg
call
adc
daa
fbstp
jmp
and
jbe
dec
mov
and
call
sub
xor
xchg
in
and
mov
sub
mov
jae
jb
mov
(bad)
pop
add
push
sbb
pop
pop
lahf
fisttp
scas
jno
repnz
inc
sti
push
daa
mov
iret
scas
mov
(bad)
sbb
dec
out
xchg
call
sub
dec
dec
pop
fld
bound
hlt
cmp
movs
xor
sbb
inc
fs
iret
mov
dec
das
fst
mov
ins
sbb
xor
loope
pop
dec
cmp
dec
out
aas
cs
cmps
iret
js
fbstp
xor
sub
push
sub
jmp
jnp
aam
xchg
fdivr
jge
sbb
fbstp
push
mov
push
inc
cdq
enter
pop
enter
mov
cmp
xor
mov
xchg
in
pop
mov
add
(bad)
adc
retf
test
leave
ds
retf
in
je
fnsave
jo
aam
leave
sbb
and
shl
xor
mov
xchg
pop
lods
in
ss
out
aam
inc
fdiv
scas
stc
das
in
pop
cmps
mov
out
in
lahf
jmp
jne
adc
mov
inc
mov
hlt
loopne
xchg
dec
fimul
and
gs
cmps
cmp
in
in
fld
fidivr
fist
cli
sub
cmc
xor
fild
test
add
mov
jno
xchg
cdq
sbb
rcr
push
clc
pop
push
mov
pop
mov
push
imul
sbb
mov
rcl
sub
ret
add
xor
cmp
jo
and
fidivr
int
lea
test
push
call
test
retf
ret
add
popf
sbb
ins
push
test
pop
fidivr
sbb
hlt
or
in
ret
jno
or
movs
out
dec
push
les
dec
call
jns
jl
jl
jmp
xor
mov
retf
dec
push
adc
mov
dec
or
or
hlt
out
nop
xor
cli
sbb
lds
cmps
xchg
pop
pop
sub
mov
and
push
nop
enter
sti
push
adc
(bad)
push
stos
test
movs
(bad)
shl
cmps
icebp
cmp
dec
call
push
and
leave
or
ret
xor
aas
xor
jne
push
mov
mov
ins
jno
div
dec
in
cmp
loope
inc
pop
scas
sbb
sub
xchg
mov
lds
(bad)
bnd
or
stos
in
pop
dec
daa
sub
push
imul
mov
test
(bad)
and
dec
sbb
out
out
jp
xchg
in
xor
cmp
mov
sub
jmp
fdecstp
inc
xchg
pushf
or
sti
lock
les
xor
mov
neg
and
sahf
idiv
(bad)
push
cmp
dec
xlat
addr16
mov
push
in
xor
jmp
jge
pop
mov
xor
or
ffreep
(bad)
nop
cmp
inc
mov
(bad)
sbb
inc
rcl
into
js
pop
sbb
pop
add
push
popa
movs
mov
(bad)
mov
add
rol
stc
xor
xchg
(bad)
imul
push
test
mov
in
cmp
xor
xor
fsubr
fcomp
loope
push
push
test
scas
xor
xor
mov
imul
jmp
sbb
mov
xchg
pop
push
mov
nop
mov
fbstp
mov
lods
mov
jl
mov
inc
jne
dec
inc
rcl
pop
(bad)
mov
(bad)
push
push
les
and
or
push
or
add
xor
imul
jno
mov
repz
fsub
adc
inc
jmp
fstp
dec
(bad)
jmp
and
cmp
mov
jp
xor
js
sub
push
mov
cmc
xchg
mov
jb
and
push
(bad)
push
add
mov
stos
pop
gs
loope
mov
xchg
xchg
mov
jb
jo
std
rol
mov
mov
mov
shl
ret
fild
mov
sahf
mov
fcomip
dec
jno
cwde
mov
push
jl
sbb
js
ret
test
stc
shl
jle
mov
scas
fisttp
sar
add
daa
fwait
or
movs
ja
jmp
xchg
push
and
jo
mov
mov
ds
and
gs
xchg
mov
test
fild
in
imul
sbb
add
cli
inc
jbe
icebp
xor
jge
inc
dec
and
push
adc
test
ins
clc
fwait
or
scas
data16
dec
loope
and
xchg
xor
lahf
sbb
and
mov
mov
enter
dec
cwde
dec
push
mov
clc
cld
or
(bad)
ds
adc
movs
popf
scas
xchg
pop
lahf
cmc
shl
add
mov
test
rol
xor
fild
sub
outs
movs
mov
mov
jne
popf
cs
mov
add
cmp
push
sbb
imul
adc
in
sbb
data16
jmp
js
test
(bad)
and
push
mov
xor
mov
push
mov
pop
adc
jmp
ins
mov
in
mov
ins
cmps
mov
movs
xchg
test
adc
mov
jns
sbb
ror
(bad)
sbb
push
es
xchg
pop
ror
mov
cmc
jp
sub
sub
cmp
jnp
xchg
lea
push
ins
sub
gs
xchg
mov
add
inc
data16
stc
cmps
add
push
ret
not
pop
ins
movs
fdiv
fmul
push
retf
fbld
inc
cmp
in
call
jmp
scas
push
xchg
lock
loope
add
cwde
mov
stc
xchg
call
pop
push
adc
js
mov
push
jmp
int3
sub
fdivr
int
lahf
daa
cwde
mov
mov
out
clc
jbe
xor
ins
(bad)
jno
mov
pop
(bad)
pop
inc
xlat
and
push
mov
sub
movs
jno
jno
out
lahf
add
push
mov
rcl
inc
add
pusha
pop
xchg
(bad)
ins
aaa
dec
dec
sbb
gs
fld
pop
or
jnp
fst
sub
jge
shr
mov
push
outs
adc
popa
and
outs
mov
push
push
and
retf
mov
(bad)
popf
xor
ss
imul
lahf
adc
jmp
retf
adc
xchg
pop
xor
mov
fwait
and
outs
stc
pop
jmp
cmps
js
ficom
inc
popf
inc
loopne
mov
xor
push
push
mov
pop
mov
std
mov
jl
test
int
cwde
dec
sbb
cmp
jnp
sub
retf
xor
repnz
repnz
fisubr
pop
dec
xlat
ja
int
xchg
sar
adc
sbb
push
icebp
sbb
scas
rol
cmp
mov
push
popf
or
xchg
jmp
sub
cmc
jns
not
bound
aas
shr
mov
mov
leave
sbb
(bad)
aad
jl
(bad)
fild
mov
add
imul
push
sub
mov
mov
call
dec
jno
pushf
sbb
push
xor
in
(bad)
jbe
dec
push
faddp
in
(bad)
out
inc
adc
sub
test
sbb
dec
mov
cs
sbb
dec
aaa
xchg
mov
cmp
mov
ja
mov
add
mov
pop
mov
sbb
ss
es
xchg
add
pop
sbb
jle
or
stos
inc
ja
pop
pushf
stos
shr
jp
pop
jg
mov
mov
inc
pop
jne
sub
xlat
mov
jl
mov
and
int3
xchg
mov
pop
out
push
ds
jge
sar
cmp
sub
es
pop
and
jb
add
jp
lods
pusha
push
lds
daa
dec
add
pushf
aam
mov
(bad)
cld
imul
fild
loop
or
and
mov
jne
adc
push
mov
sub
loop
sbb
jae
mov
and
mov
rcl
movs
mov
jecxz
add
daa
xchg
and
popf
jmp
adc
adc
push
jbe
inc
lock
mov
pop
fistp
dec
(bad)
jnp
cmp
push
sbb
xor
seta
mov
xor
in
pop
daa
jae
or
add
jae
mov
jb
sub
mov
jmp
leave
imul
pop
retf
and
stos
add
pop
pop
call
cmp
mov
les
retf
adc
loopne
xchg
arpl
retf
stos
(bad)
xchg
inc
pop
dec
cli
in
or
mov
cs
nop
loop
cmp
aam
jae
bnd
loop
je
shr
mov
ja
mov
cmps
push
icebp
pop
xchg
xchg
fwait
leave
add
dec
sbb
ja
sbb
mov
pushf
mov
mov
loopne
into
add
out
aas
adc
iret
js
(bad)
lods
or
jnp
sub
pop
mov
adc
sbb
mov
mov
xlat
pcmpgtd
icebp
cmps
and
test
xor
adc
mov
imul
iret
and
mov
addr16
cmp
stos
sub
pop
mov
mov
leave
xor
test
and
test
add
push
dec
in
movs
and
xchg
aad
aas
or
mov
imul
sbb
imul
push
call
call
jl
dec
sbb
cmp
fiadd
(bad)
idiv
imul
movs
sbb
fwait
mov
cli
fdivr
dec
sbb
cmp
mov
jge
mov
clc
shl
(bad)
jecxz
jmp
xor
mov
or
mov
das
arpl
pop
arpl
retw
and
jnp
(bad)
inc
add
loope
inc
and
rol
scas
add
ins
(bad)
jl
xchg
cld
jae
ins
pop
add
test
or
ret
test
xor
test
icebp
test
out
jmp
adc
enter
pushf
ds
sahf
dec
and
and
xsaves
adc
fsub
add
add
mov
xchg
sar
add
pusha
mov
(bad)
cs
in
mov
mov
js
adc
mov
xlat
inc
add
xor
sub
lahf
jbe
push
scas
and
lods
jo
bnd
cmp
aad
cmp
repnz
push
xchg
cmp
leave
(bad)
and
mov
jg
sbb
shr
cdq
or
xchg
and
loopne
outs
ror
outs
add
cli
sahf
aas
out
adc
xchg
mov
out
out
int3
imul
out
xor
sbb
pop
cmps
sub
mov
mov
cmp
adc
dec
out
xchg
test
loop
inc
push
sub
xor
cld
xchg
loopne
fiadd
inc
aaa
data16
fsubr
dec
out
cs
jmp
movntq
out
lods
xor
(bad)
icebp
inc
and
or
ja
adc
mov
push
cmp
mov
scas
mov
popa
sbb
sub
mov
out
sbb
or
adc
fld
and
jb
addr16
jg
adc
jp
adc
and
cdq
mov
int
out
xor
inc
std
xchg
xor
retf
add
push
jb
sbb
xchg
adc
fmul
mov
inc
call
imul
add
cmp
push
cld
ins
dec
lods
movs
(bad)
mov
pop
(bad)
out
sub
cwde
mov
shl
inc
je
add
dec
test
push
in
lods
add
cmp
(bad)
adc
mov
fsubr
sahf
jo
push
cmp
mov
mov
stos
dec
sub
cmp
dec
jle
inc
mov
(bad)
aad
add
imul
sbb
outs
jbe
rcr
adc
sbb
loopne
mov
xchg
(bad)
imul
mov
in
stos
and
mov
das
pusha
mov
shl
cmp
ins
imul
push
stos
dec
jnp
dec
mov
les
dec
into
cwde
sbb
repz
cmp
popa
xchg
adc
cmc
or
add
sub
mov
and
jbe
inc
push
jmp
cli
jle
and
pop
arpl
in
out
mov
fs
xchg
jae
mov
mov
cdq
jno
ret
inc
add
mov
push
gs
(bad)
call
fadd
jle
mov
lahf
std
cmps
push
ins
pop
sub
and
xchg
sub
cmc
xchg
leave
adc
mov
std
pop
inc
cmp
retf
xchg
cmp
clc
jns
das
popa
sub
inc
mov
mov
push
ficom
iret
sub
mov
(bad)
xor
outs
ja
dec
jnp
(bad)
xchg
cmp
je
(bad)
bound
jae
dec
jbe
adc
int3
pop
fs
jo
lock
scas
push
mov
and
push
mov
or
neg
mov
ss
xor
aam
retf
call
push
pop
inc
or
jmp
mov
mov
dec
rol
es
or
arpl
stos
push
in
popf
dec
cmp
inc
adc
jecxz
mov
int3
das
pop
sub
mov
xor
xchg
mov
jle
out
cmp
into
outs
dec
outs
xchg
dec
test
repz
xchg
xor
clc
xor
(bad)
cmp
sar
inc
dec
lds
push
mov
mov
rcr
int3
iret
mov
outs
popa
(bad)
push
push
push
fwait
push
dec
push
inc
dec
jbe
ret
pop
jo
mov
loopne
imul
or
cmp
popa
(bad)
mov
pop
jle
retf
lahf
adc
pop
cwde
addr16
and
fidiv
call
sahf
jmp
inc
in
mov
fst
mov
lea
(bad)
mov
mov
add
xor
in
ret
mov
pop
mov
mov
and
(bad)
sbb
dec
fnstcw
ins
adc
fcom
ja
sbb
and
jle
push
adc
xchg
jo
dec
jp
jae
mov
push
adc
pop
cdq
fsubr
cdq
shl
ud2
data16
mov
xor
push
(bad)
jb
mov
push
iret
dec
(bad)
(bad)
ins
in
popf
push
xchg
mov
push
push
mov
pop
xchg
or
das
fimul
gs
mov
fisttp
add
popa
in
sbb
inc
ldmxcsr
xor
pop
jle
sbb
sub
or
jns
push
xchg
cmp
dec
inc
ficom
pop
xchg
xor
scas
sbb
stos
xor
cwde
repz
aaa
ss
jo
sub
sub
pop
pop
adc
or
repz
sub
and
bound
cmp
sbb
xchg
dec
push
mov
scas
push
or
mov
aas
push
outs
imul
mov
sbb
add
pop
pop
push
jle
fnstenv
dec
push
imul
(bad)
jl
inc
jnp
push
repz
loopne
mov
mov
push
mov
test
cmp
push
mov
jmp
push
fisttp
mov
fisubr
xchg
in
sub
sub
daa
in
push
mov
ret
sub
push
push
lods
jno
xchg
sbb
cmp
add
cmps
icebp
sbb
adc
jmp
call
or
enter
adc
sbb
(bad)
mov
dec
into
add
push
dec
fidivr
push
sub
gs
cmp
mov
inc
add
outs
xor
mov
jmp
nop
cld
(bad)
(bad)
xchg
repnz
xchg
sbb
or
(bad)
mov
lods
inc
jne
nop
aam
dec
sub
ret
or
inc
movs
repnz
mov
bnd
ficom
mov
xchg
sti
add
clc
and
mov
mov
sub
(bad)
push
lea
push
inc
inc
call
push
mov
and
sbb
loope
or
mov
test
xor
ins
in
retf
xor
xor
mov
into
add
push
pop
adc
test
mov
std
retf
mov
inc
ror
loopne
dec
push
stos
or
adc
repnz
std
aaa
fsub
mov
cwde
loop
cmp
dec
imul
adc
hlt
rcr
popf
(bad)
mov
jp
push
rcl
xor
pop
fidiv
push
test
push
fcmovnbe
sub
push
movs
addr16
mov
fs
sbb
in
scas
fwait
or
add
sub
mov
fnstenv
popa
call
sub
ins
mov
cli
retf
call
and
inc
add
ficom
sbb
adc
pop
mov
adc
push
mov
in
call
hlt
dec
(bad)
mov
sbb
sub
mov
popa
in
popa
pop
mov
mov
mov
dec
gs
dec
sub
push
stos
mov
adc
cmp
(bad)
pop
xchg
adc
xchg
leave
add
cmp
loope
imul
push
jp
std
sahf
lock
stc
jmp
cmp
mov
rcr
and
data16
ret
push
loop
cmp
scas
pop
and
(bad)
shr
repnz
ret
out
test
jle
pop
les
repz
or
and
mov
test
xor
adc
dec
ja
popf
imul
test
push
fs
call
fwait
mov
inc
enter
lods
outs
push
mov
pusha
pop
xchg
js
mov
sti
push
xchg
icebp
(bad)
or
out
xor
add
and
xchg
into
push
add
adc
je
pop
stos
sbb
xchg
mov
cmp
push
or
iret
nop
clc
adc
sbb
int
sbb
sbb
adc
mov
dec
pop
sub
bound
push
pop
gs
adc
ss
lock
sub
bound
lea
xor
popa
mov
(bad)
hlt
xor
or
adc
xor
mov
dec
or
mov
(bad)
cmp
push
xchg
loope
xor
fild
cmps
sub
idiv
adc
inc
cli
fistp
and
cmp
fwait
std
inc
or
call
(bad)
jb
or
dec
dec
movs
pop
in
(bad)
loopne
(bad)
pop
and
retf
aam
repnz
mov
(bad)
push
cmps
add
addr16
imul
cli
push
ja
fcom
stc
xchg
aas
outs
mov
xchg
and
scas
mov
div
std
adc
loopne
jnp
mov
shr
mov
into
push
or
int
adc
or
cld
icebp
mov
clc
adc
call
jmp
xor
stos
cmc
retf
sbb
outs
dec
xchg
dec
jmp
repz
das
out
test
push
lods
hlt
popa
jge
mov
bound
jb
mov
ret
or
aad
in
popa
pop
dec
cmc
ja
bound
and
pop
stc
adc
push
push
jno
inc
cs
xor
imul
and
push
loop
xor
jb
inc
jecxz
movs
ins
movs
adc
test
div
cmc
add
shr
or
(bad)
jnp
test
(bad)
out
cmp
sub
mov
lds
cmp
movs
jecxz
data16
out
pop
enter
mov
xlat
leave
adc
mul
mov
je
mov
adc
fld
outs
retf
call
outs
out
sub
xchg
add
nop
dec
push
out
hlt
add
in
xchg
mov
pop
pop
test
movs
stos
mov
mov
scas
push
div
movs
mov
int
pop
loopne
popf
xor
cmp
mov
push
sti
aad
push
mov
lock
push
addr16
push
sbb
add
xlat
pop
shl
(bad)
cld
ret
mov
pop
es
jmp
mov
jg
and
inc
out
add
aad
pop
cld
fisttp
mov
test
jbe
retf
pop
jecxz
sub
mov
js
out
nop
cmc
sar
sub
push
push
lods
pop
jno
pop
adc
inc
aad
call
xchg
and
out
jmp
in
or
loope
cmp
inc
jp
ret
fsubp
fisub
add
scas
cmp
mov
enter
add
add
pop
fcmove
sbb
jae
(bad)
ins
pop
pop
fnsave
and
fsub
and
sub
ins
jns
xor
cmp
mov
mov
cld
and
retf
inc
aad
add
mov
clc
inc
push
push
sbb
hlt
daa
add
jg
icebp
arpl
loopne
mov
or
out
loope
mov
or
imul
dec
push
repnz
cld
mov
push
movs
out
xlat
repnz
adc
mov
mov
cmp
stc
or
data16
sbb
mov
idiv
fstp
loope
(bad)
pop
fs
mov
xor
jmp
cli
jns
push
movs
add
xor
ss
repnz
test
call
fwait
das
in
(bad)
and
shl
in
xchg
push
cmp
cmc
adc
test
and
daa
sbb
clc
xchg
cmp
jbe
enter
(bad)
xor
sahf
pop
push
aam
cmp
cmp
mov
pop
jae
daa
sub
pop
jbe
(bad)
cwde
jmp
imul
xchg
mov
push
dec
mov
push
fisttp
outs
jmp
pop
push
push
adc
fnsave
cmps
scas
and
xor
shl
mov
mov
xchg
test
js
push
jp
and
push
fwait
jecxz
push
shl
xor
stc
jmp
push
adc
repnz
aad
jp
iret
scas
jmp
loopne
cdq
add
iret
std
into
out
cmps
inc
pop
dec
xlat
xor
adc
pop
add
jmp
mov
outs
sub
mov
fmul
and
xchg
mov
mov
in
cld
mov
aam
add
ret
aas
push
push
jb
mov
pop
mov
inc
cmp
cmps
jle
shr
push
jmp
test
das
sbb
in
addr16
mov
mov
mov
repnz
mov
cmp
movs
lds
and
push
jne
xlat
fild
or
jnp
inc
sub
out
cmp
ss
loop
jecxz
xor
(bad)
(bad)
scas
mov
aam
sbb
shl
out
xchg
or
add
pop
ins
and
shl
xchg
test
dec
mov
mov
cmp
jbe
inc
push
pop
out
retf
and
and
mov
mov
pop
cmp
dec
shl
call
pop
jp
mov
fcmovu
or
and
jnp
push
xchg
mov
adc
ins
dec
and
mov
or
aad
and
push
loope
jbe
inc
movs
(bad)
and
and
test
xchg
or
or
cwde
div
sbb
pop
mov
test
into
sub
rcl
and
push
imul
xor
leave
inc
retf
enter
les
out
add
sub
imul
cmps
daa
push
or
add
mov
fs
mov
cmp
fwait
or
adc
add
scas
bound
mov
jp
(bad)
cmp
pop
and
inc
sub
rcl
xchg
retf
lods
xor
fdiv
pop
or
imul
dec
into
pusha
inc
scas
out
dec
std
cmp
jg
xchg
pop
push
sub
jecxz
push
and
movs
add
inc
sbb
mov
jmp
out
cdq
dec
lods
call
lsl
bound
jge
inc
mov
stc
dec
inc
xchg
shl
xchg
ss
cmp
pop
cmps
xlat
nop
js
mov
jg
popf
ins
out
in
shl
ja
sub
add
pop
adc
cmp
lods
xor
into
inc
in
pop
loopne
mov
imul
mov
add
int3
in
in
ja
call
xor
js
repnz
cwde
gs
cli
test
or
movs
in
gs
cdq
ds
pusha
sbb
(bad)
jmp
xor
out
icebp
push
jge
inc
xor
add
sbb
fwait
or
in
aas
in
jb
push
inc
test
add
ret
int
ret
jnp
lahf
sbb
push
push
aam
lock
mov
aaa
jmp
jae
cs
xchg
dec
call
mov
add
(bad)
fdiv
pop
rcl
aad
hlt
xlat
push
xor
repz
push
jp
cli
cmp
xchg
stos
sbb
mov
test
mov
mov
stos
lods
mov
in
inc
and
pop
pop
push
clc
les
aam
icebp
fwait
std
or
fnstenv
test
mov
mov
push
adc
jle
or
sub
jp
xchg
add
div
das
dec
xchg
push
jecxz
rcr
push
xchg
into
lahf
fsubr
jo
leave
push
jp
push
cmp
sbb
push
sar
pop
js
and
ss
push
and
add
pop
das
gs
push
repnz
int3
sbb
jmp
cmp
test
ss
push
int
jg
dec
shl
addr16
aad
loop
and
or
fwait
or
cld
ins
mov
inc
sub
mov
cmp
stos
out
sbb
push
cs
lock
dec
adc
js
push
mov
push
or
add
arpl
dec
mov
movs
dec
cmp
je
xchg
and
fadd
push
or
push
add
enter
scas
or
xchg
hlt
fldcw
addr16
cdq
dec
in
pushf
push
std
into
movs
loopne
push
aad
es
mov
(bad)
aad
cmc
ins
cmc
sbb
jecxz
(bad)
xlat
loope
cmp
add
scas
mov
enter
int3
popf
mov
retf
sbb
xchg
aas
scas
push
jo
rcl
test
hlt
inc
push
ret
sbb
fild
ins
lods
mov
adc
mov
pop
retf
bswap
jg
mov
or
pop
push
mov
retf
lock
dec
fld
push
int3
mov
pop
imul
pushf
movs
jbe
scas
mov
add
mov
or
cmp
aad
pop
jg
cli
cmp
jns
mul
inc
imul
push
push
and
test
ret
jmp
call
sub
inc
scas
aaa
lahf
and
mov
and
adc
(bad)
call
imul
push
aam
mov
loopne
pop
pop
es
retf
mov
sub
xchg
push
aas
js
popa
fs
xchg
push
xor
cmc
inc
cmp
popa
mov
jmp
test
pop
outs
in
and
(bad)
or
js
jo
in
scas
dec
fcmovnu
pop
sub
lock
popf
xor
mov
sub
pop
nop
xchg
sub
mov
stos
ds
dec
scas
or
mov
out
inc
adc
or
sub
xchg
pop
and
or
xor
dec
mov
push
pop
push
cmps
mov
dec
dec
call
push
lds
mov
and
cmps
daa
pop
cmp
inc
popf
shl
sbb
mov
adc
aad
in
outs
jp
jge
rcr
sub
and
mov
sti
sbb
pop
dec
neg
outs
js
sbb
xchg
mov
jmp
mov
sbb
or
push
fistp
fcomp
test
xchg
mov
gs
jne
daa
add
jge
jg
cmp
aad
cmp
shl
xor
xchg
mov
mov
pusha
cmps
adc
sbb
pop
and
inc
leave
hlt
and
pushf
in
lock
ficom
shl
cmps
test
aas
inc
pop
ss
inc
leave
icebp
in
xor
aam
push
paddb
fwait
cmps
into
cmp
push
movs
ret
mov
inc
jo
push
outs
aaa
mov
fistp
cld
jb
xor
shl
add
mov
adc
leave
xor
mov
call
out
fcom
ins
cli
push
sbb
add
and
lea
jecxz
push
imul
or
mov
cmp
or
and
adc
xlat
les
xor
mov
aad
inc
and
add
iret
mov
xor
inc
adc
cmp
dec
cmp
jg
stc
outs
xor
hlt
mov
push
xor
lods
dec
pop
(bad)
enter
hlt
popa
cmp
ret
in
inc
sbb
ret
adc
inc
xor
lds
xor
movs
pop
sbb
cmp
scas
or
inc
jg
sub
jno
mov
test
fimul
std
daa
jmp
stos
int
push
retf
push
adc
out
(bad)
mov
mov
xor
shl
fwait
jecxz
repz
or
out
add
mov
xchg
loop
sar
push
mov
adc
stos
mov
sti
enter
adc
mov
loop
dec
jmp
mov
ins
push
cmp
push
pop
cmp
push
xor
jmp
jmp
mov
push
pop
clc
in
scas
lods
fcomp
xor
jp
dec
inc
inc
leave
xor
mov
sti
xchg
xor
jl
adc
rol
pop
fwait
or
lods
jle
(bad)
push
retf
call
jp
int3
inc
lods
(bad)
int
push
outs
jo
(bad)
loop
jecxz
movs
es
dec
jae
xor
and
jns
lea
xchg
ins
sahf
daa
dec
je
(bad)
sub
test
psubb
jnp
aam
test
push
dec
iret
fmul
(bad)
into
mov
sbb
into
cvtpi2ps
stc
cmp
fs
mov
and
je
cmp
mov
sbb
dec
inc
sub
xchg
mov
inc
cld
jle
push
jmp
cmps
loopne
aaa
aaa
xor
inc
mov
push
mov
jmp
cmps
dec
mov
dec
inc
and
lds
push
fxch
sub
sbb
test
call
and
or
shr
scas
(bad)
fild
or
mov
or
cmp
popf
push
mov
xchg
ja
inc
inc
adc
jle
mov
cmp
sahf
mov
repz
mov
sbb
adc
push
push
mov
ror
cmc
(bad)
aaa
or
retw
arpl
mov
jae
adc
inc
xchg
add
or
cmp
jne
js
jb
push
leave
jle
push
lods
(bad)
call
pushf
ficomp
cli
test
div
fnsave
push
jno
outs
ffreep
push
test
mov
push
jae
repz
loopne
stc
ret
push
fisttp
call
adc
cmp
push
jle
mov
adc
adc
ins
in
jl
leave
popa
jbe
in
sbb
push
daa
loop
out
das
test
mov
test
or
ds
imul
xor
sub
cmc
inc
gs
adc
push
adc
loope
mov
fdiv
inc
mov
pop
test
loopne
jg
push
mov
(bad)
gs
push
cmps
ret
jecxz
sub
jg
mov
push
retf
jmp
push
out
bound
mov
dec
mov
inc
lock
stc
sub
sbb
or
pop
cli
aad
(bad)
adc
lahf
mov
aaa
in
cmp
mov
cli
js
ins
or
out
push
ja
pop
push
shl
or
(bad)
xchg
jb
outs
test
or
xor
dec
jecxz
leave
xor
xor
push
cs
push
ja
rcl
sub
bsf
push
ja
fwait
mov
and
cmp
sbb
inc
xor
fld
jb
daa
cmp
aam
mov
fwait
in
inc
add
scas
mov
jns
nop
adc
ds
stc
mov
call
mov
mov
js
(bad)
cmp
xchg
xchg
rcr
cmp
or
popa
popa
cmp
pop
cmp
jb
jne
(bad)
out
das
mov
jbe
(bad)
stos
pop
jmp
mov
lock
lods
cmp
popf
clc
into
jecxz
(bad)
aas
push
lods
cwde
int3
clc
sar
inc
addr16
jp
and
xor
cdq
je
adc
cmp
push
jnp
mov
mul
lds
loope
movs
mov
dec
icebp
je
jmp
and
add
push
xor
int
pushf
push
sti
ss
or
xchg
mov
loope
push
leave
cmps
xor
push
pop
mov
mov
mov
and
pusha
adc
xchg
add
pop
push
xchg
out
jmp
leave
in
mov
xor
pop
sbb
daa
adc
scas
lods
aam
push
aam
adc
and
aad
rcl
push
lods
jp
movs
movs
std
mov
pop
sub
movs
and
je
lods
or
xor
out
mov
les
cmp
es
xor
xor
cmps
fstp
pop
sbb
mov
es
dec
stos
shl
clc
sti
mov
cmp
dec
js
ds
jg
xlat
test
ret
int3
xchg
stos
adc
ret
dec
ret
iret
xor
mov
call
xor
xchg
mov
and
test
imul
push
sub
pop
or
test
and
add
adc
inc
lods
loop
mov
ins
das
pushf
dec
rcl
int3
ret
xor
pop
ins
push
scas
or
sar
push
into
add
ret
ins
push
mov
mov
hlt
mov
jbe
imul
pop
jge
test
cmp
adc
ds
retf
icebp
sub
add
test
push
fisub
nop
out
jmp
iret
mov
idiv
sub
inc
fist
mov
push
push
call
fdiv
xchg
scas
sub
cdq
mov
call
inc
leave
xor
sti
sbb
mov
cmps
imul
mov
dec
or
iret
push
rol
or
fs
int3
jne
stos
jecxz
dec
cmp
ins
std
cmps
push
xchg
in
sbb
sbb
mov
icebp
xchg
dec
or
jns
ins
push
add
cmp
push
test
ret
mov
jl
call
push
pop
pop
retf
sti
inc
out
and
dec
xor
push
mov
out
jge
into
push
aaa
sbb
mov
jbe
xchg
xchg
ss
pop
fwait
enter
dec
(bad)
je
rol
xchg
mov
push
inc
mov
jmp
(bad)
aam
test
pop
sbb
pop
scas
call
push
addr16
gs
mov
pop
adc
push
mov
jbe
lahf
sub
lock
test
je
mov
aaa
pop
mov
fwait
sub
xchg
out
cmp
std
push
sub
dec
sub
mov
arpl
sub
div
pusha
stos
mov
loope
inc
mov
lds
neg
xor
shl
fwait
hlt
push
ins
xor
lock
mov
push
pushf
sti
sub
inc
pop
loop
xchg
sbb
dec
(bad)
xchg
sub
jne
lock
and
sub
push
pop
push
mov
dec
rol
cmp
pusha
repnz
dec
stos
xchg
jmp
pop
aaa
cmp
cmp
cmp
iret
outs
mov
mov
sbb
ds
push
push
cmp
pop
inc
pop
mov
push
mov
or
aam
adc
sub
pop
or
rol
push
or
mov
or
idiv
je
sar
xor
jno
push
(bad)
pop
pop
test
xchg
xchg
fnstsw
mov
pusha
and
inc
xor
mov
mov
xchg
add
movs
js
loopne
cmp
inc
call
sbb
jg
sbb
add
push
movs
(bad)
jle
cmc
stc
scas
jmp
iret
test
push
sbb
xchg
jne
xor
sub
out
popf
mov
test
push
(bad)
les
int
imul
xchg
jp
and
dec
mov
dec
in
jle
cmp
pushf
jno
or
repnz
neg
sub
sar
out
cmp
int3
enter
std
nop
loop
or
inc
adc
inc
sbb
inc
cs
dec
hlt
std
sub
sbb
jge
xchg
out
call
push
add
xor
mov
movs
movs
push
pop
pushf
jbe
jns
stos
fidivr
or
inc
jns
arpl
das
xlat
loop
jp
jbe
(bad)
push
stos
loop
push
lea
add
jno
pop
loope
out
mov
in
ss
jl
mov
cs
push
or
push
lods
(bad)
das
loop
jnp
in
cmp
add
or
and
imul
or
sbb
lods
outs
push
loopne
test
call
in
std
test
(bad)
cld
xor
dec
dec
aas
out
loopne
inc
add
aad
movs
sbb
cmp
xchg
pop
mov
mov
int
mov
ins
pop
es
sub
jns
dec
dec
mov
ss
mov
mov
pop
pop
or
mov
inc
retf
xor
dec
pop
cwde
cdq
cmp
sub
es
iret
push
and
add
js
(bad)
fsubrp
cmp
push
cli
pop
push
mov
ret
pop
pop
in
mov
loope
iret
cmp
sti
and
cmp
test
mov
or
mov
xlat
pop
int
push
aaa
cli
xor
fdiv
mov
jo
(bad)
lds
push
ret
xlat
adc
pop
loop
dec
sub
int
fld
sar
scas
bound
jnp
jmp
add
inc
ss
and
arpl
fld
xchg
pop
push
sub
push
jae
jmp
mov
inc
jo
fadd
push
xchg
push
ror
lods
pop
int
adc
fsubr
cmp
sahf
repnz
ds
sub
arpl
shr
cmp
ret
call
popa
jbe
out
sbb
push
push
in
and
imul
test
int3
aaa
loopne
xchg
and
ins
mov
and
adc
xor
jne
outs
std
push
cmc
mov
fisttp
pusha
pop
xchg
sub
inc
test
dec
fcom
(bad)
arpl
daa
mov
mov
lea
(bad)
sub
shl
cmp
and
retf
scas
xchg
jbe
in
cwde
sbb
stc
sti
fcom
pop
adc
js
xchg
shl
or
and
jno
mov
push
xchg
scas
js
mov
dec
aas
fst
test
push
dec
pop
mov
outs
xchg
out
dec
xor
xchg
std
pop
sub
add
loopne
je
lea
inc
call
mov
push
jae
and
pop
cmps
aad
(bad)
and
popf
or
xor
and
test
jae
(bad)
sbb
push
lods
aam
retf
pop
in
jg
adc
dec
fdivp
mov
ret
sbb
stos
(bad)
mov
out
xchg
or
pushf
dec
int
out
jge
dec
scas
pextrw
add
lock
adc
bound
sbb
sar
push
fs
cmp
retf
adc
mov
pop
jp
(bad)
sti
dec
xchg
mov
sahf
fild
bound
inc
loopne
jge
sub
inc
xchg
jp
stc
loope
(bad)
in
cmp
sbb
adc
jge
cmps
ja
push
sub
sbb
mov
dec
call
push
or
jge
jnp
jmp
loop
enter
addr16
retf
push
mov
mov
xchg
cmp
dec
mov
dec
dec
call
icebp
cwde
and
mov
iret
sub
arpl
arpl
loopne
ret
popf
imul
mov
add
in
sbb
sbb
fild
(bad)
and
call
adc
out
inc
mov
ror
ror
or
or
mov
ret
push
mov
sub
clc
xchg
rol
dec
outs
sub
lods
mov
xor
sbb
lds
out
pop
addr16
inc
push
jmp
cdq
cmps
jl
xchg
cmp
mov
inc
jnp
xor
add
aam
fmul
mov
mov
cmp
xor
dec
jg
fcomp
daa
dec
and
in
mov
sahf
lock
(bad)
cld
push
stos
adc
mov
xor
and
mov
lahf
cmps
pop
cdq
cmps
das
stos
out
retf
test
cmp
daa
mov
jmp
fstp
inc
mov
das
add
jnp
cmp
jns
sub
out
inc
das
(bad)
cs
xchg
stc
xor
jo
and
pop
aad
xchg
sti
adc
fwait
stos
(bad)
in
ret
test
mov
mov
add
cmps
mov
inc
out
sub
scas
sbb
push
mov
push
cmps
and
dec
lods
int3
mov
and
xor
out
inc
sub
cmp
neg
nop
popf
aas
and
and
adc
push
rcl
sub
aam
mov
xchg
jp
jge
jb
xor
and
mov
sub
adc
shr
or
pop
jg
mov
rcl
mov
out
test
mov
mov
mov
aam
or
clc
cwde
in
mov
mov
ins
in
and
dec
mov
push
mov
cli
dec
push
iret
lds
jmp
pop
and
and
imul
inc
sub
std
dec
mov
into
and
shr
mov
adc
jle
mov
mov
xchg
jbe
pop
xchg
jbe
xchg
push
push
mov
mov
in
xor
mov
retf
cmps
adc
test
loopne
ret
jae
in
xlat
pop
gs
(bad)
sub
dec
lods
push
lock
sub
enter
push
add
inc
iret
and
sar
add
out
dec
mov
cmp
dec
push
imul
pop
dec
mov
jb
or
pop
cmp
fcmovnb
aad
xlat
(bad)
mov
lods
or
inc
test
sbb
mov
mov
push
jnp
xchg
and
scas
outs
dec
jne
push
fs
lock
repnz
out
outs
fsubrp
sub
or
stos
push
mov
sbb
(bad)
cli
push
mov
inc
mov
stos
or
pushf
cs
movs
shl
xor
mov
mov
push
popa
pop
xlat
lock
imul
jmp
xor
addr16
mov
push
dec
imul
cli
call
jbe
sbb
cmp
(bad)
cmp
sbb
jmp
lock
out
jmp
or
nop
in
push
cmp
cmps
add
out
xchg
cmp
or
mov
jns
pop
daa
xchg
xchg
mov
icebp
and
hlt
std
dec
pop
or
cld
test
or
into
icebp
sti
jno
pop
xchg
int3
loope
mov
xchg
jno
in
push
lea
fild
xor
ins
std
mov
inc
shl
sti
fbld
push
rol
add
mov
adc
push
aaa
push
retf
pop
nop
jl
push
xchg
and
aad
mov
repz
stc
adc
pop
dec
pop
push
outs
sub
and
mov
and
or
inc
popa
fimul
mov
add
popa
call
cdq
inc
jb
pmuludq
(bad)
dec
test
inc
rcr
data16
leave
sub
mov
test
jo
cwde
push
add
pop
or
and
ins
fnstcw
imul
daa
pop
sbb
cmps
stos
pop
shr
pusha
mov
inc
inc
adc
xchg
jp
repnz
scas
loope
jns
out
ror
mov
sbb
mov
sbb
cli
dec
pop
push
pop
mov
pop
mov
(bad)
cs
out
jns
pushf
push
push
add
movs
pop
push
pop
ja
mov
xor
xchg
xor
xchg
les
push
imul
jg
scas
pushf
cmp
ins
dec
adc
ins
sbb
cmps
adc
pop
cmc
shr
jae
dec
test
das
mov
test
inc
push
cmp
mov
pop
jg
or
pushf
mov
jo
xor
or
movs
in
(bad)
mov
(bad)
sub
enter
iret
push
xor
mov
and
mul
add
sbb
mov
cmp
nop
in
push
pop
aaa
retf
pop
cld
outs
ja
adc
dec
in
mov
xchg
(bad)
int
adc
push
dec
inc
sahf
xor
cmc
sub
dec
cld
mov
fdiv
lea
imul
iret
rol
sub
iret
inc
mov
hlt
xlat
push
mov
cs
call
(bad)
retf
bound
ds
pop
lods
rol
in
sbb
add
pop
inc
push
cmp
cmc
cli
dec
or
test
mov
aaa
jmp
add
mov
dec
mov
xor
or
xchg
xor
popa
(bad)
mov
sub
stos
pop
sahf
out
test
cmp
sub
sub
adc
mov
fistp
sub
mov
sahf
cwde
outs
in
sbb
dec
add
adc
mov
cmp
jmp
adc
xor
mov
(bad)
dec
mov
les
out
pop
push
test
cmp
pop
jns
pop
pop
push
xchg
adc
mov
not
pop
ja
stc
mov
push
inc
mov
mov
inc
push
xlat
inc
int
dec
cwde
lods
out
push
mov
(bad)
push
in
add
xchg
into
loope
sub
xor
sbb
(bad)
mov
mov
xchg
mov
test
or
adc
clc
test
jbe
add
pop
push
pop
push
adc
cli
test
aas
jmp
pop
xchg
scas
push
lods
add
inc
in
push
pushf
xor
or
shr
push
xchg
push
push
pop
imul
shl
cdq
sub
aaa
aam
iret
push
pop
enter
adc
xor
push
dec
or
mov
stos
xchg
xchg
ds
pop
push
push
cmc
stc
inc
repz
cmp
and
pop
jle
inc
sub
adc
std
push
sub
loop
arpl
xchg
sub
fnsave
adc
dec
movs
jno
mov
loop
dec
inc
in
fadd
cmp
inc
sub
mov
xchg
dec
out
je
fimul
pop
ja
(bad)
mov
loope
sub
inc
popf
pop
arpl
daa
mov
sti
xor
cmp
outs
cmp
push
loopne
std
xchg
fistp
mov
cmc
and
scas
and
call
inc
outs
fld
push
jmp
or
test
aas
out
test
fsqrt
ja
outs
cmp
out
inc
jno
shr
xor
mov
mov
adc
pusha
mov
lldt
inc
inc
das
pop
imul
or
test
dec
aad
sbb
lods
jmp
sub
dec
sub
adc
outs
sar
mov
aaa
mov
dec
retf
mov
mov
dec
out
dec
imul
mov
neg
mov
push
push
xchg
pop
mov
push
mov
cmp
movs
xchg
inc
scas
jae
push
push
sbb
sbb
dec
mov
lods
inc
mov
pop
sti
bound
jnp
loopne
in
cmp
xchg
stos
(bad)
push
scas
out
push
mov
jp
rcr
into
sub
loop
cmps
or
jnp
(bad)
jno
xchg
mov
sti
in
mov
adc
inc
inc
xchg
and
shr
pop
mov
sub
loop
push
enter
jb
cmp
xor
shr
repz
mov
aam
or
mov
loop
inc
cld
push
(bad)
xchg
sti
xor
pop
gs
xchg
push
stos
pop
fst
add
add
and
mov
jle
ficom
push
push
gs
inc
dec
or
pusha
mov
hlt
not
std
and
out
es
xchg
test
mov
mov
in
cmp
adc
idiv
ror
jp
cmp
(bad)
nop
pop
sub
ret
sti
cmp
inc
cmc
in
xchg
loopne
loopne
push
jp
xchg
lea
xor
not
scas
xchg
out
ja
push
mov
cmp
sbb
mov
lods
jo
jl
jmp
push
les
push
fnstenv
hlt
push
int
std
fsubr
mov
test
outs
les
mov
add
mov
mov
xchg
jl
ret
jmp
jne
add
js
sbb
push
cld
int3
stos
xor
dec
movs
cli
mov
lock
clc
into
jne
popa
stc
(bad)
clc
sub
je
adc
fiadd
jmp
aaa
sub
out
dec
mov
aam
scas
xchg
cmp
jge
cmps
cld
movs
jmp
or
sti
ja
in
mov
test
or
xchg
pop
push
jmp
cmp
xor
inc
adc
int
sti
cmp
ror
lea
adc
inc
lds
fwait
mov
inc
or
icebp
out
js
inc
cmp
test
xchg
adc
cmp
rol
pop
mov
dec
test
loop
jle
adc
pop
dec
jmp
shl
push
sub
clc
cmp
stos
and
adc
ins
pop
xor
ret
enter
repz
jl
push
mov
or
in
shl
stos
(bad)
sar
aas
test
daa
std
call
sbb
into
stc
cmps
mov
jle
mov
mov
sbb
adc
inc
ss
pop
add
cmp
inc
add
sub
mov
inc
ficomp
repnz
adc
mov
and
fidivr
pop
das
dec
je
or
inc
push
scas
sub
mov
pop
adc
sbb
loope
mov
push
out
jge
and
stc
pop
pop
pop
mov
jns
xor
cmp
adc
xchg
je
mov
je
sbb
cmps
adc
aas
imul
sub
xor
inc
xor
int
jmp
call
push
mov
shl
ins
or
jnp
xchg
jle
enter
ins
sub
xchg
or
and
xchg
push
push
es
leave
(bad)
daa
jb
mov
pop
sbb
out
repnz
pop
and
popf
and
cld
movs
mov
push
test
adc
fiadd
int
mov
div
push
mov
cmps
dec
test
sar
xchg
in
lea
jne
mov
push
xor
cmp
inc
jb
push
fist
imul
(bad)
xchg
dec
mov
mov
jle
add
test
sub
sti
fadd
mov
adc
call
pop
pushf
lds
adc
mov
dec
or
cli
fisubr
shl
adc
sbb
(bad)
sbb
pushf
and
mov
cmp
ins
sbb
or
repnz
xchg
(bad)
mov
inc
movs
hlt
imul
in
jne
in
rcl
ins
cdq
xor
pusha
add
push
sti
dec
(bad)
scas
mov
cs
cmps
mov
push
xor
mov
jb
sub
test
xor
sub
pusha
pop
js
fwait
dec
cmp
repnz
jns
std
test
mov
(bad)
in
ret
outs
add
pop
neg
dec
mov
dec
inc
push
dec
adc
cli
inc
pop
inc
stos
rcr
shl
fcom
stos
jnp
mov
clc
jmp
loop
sub
adc
mov
cmp
jl
mov
sar
push
or
fcomp
jmp
fdivr
cmps
outs
ins
jb
enter
or
sbb
packssdw
out
jae
sub
mov
fs
clc
push
xor
lods
fistp
loope
not
and
xor
add
sahf
cli
xchg
retf
xor
dec
(bad)
in
add
jg
add
je
mov
ds
adc
fwait
imul
cmc
jb
cld
cld
add
xchg
jns
retf
add
sub
xchg
push
or
aaa
adc
push
xchg
adc
xchg
xchg
pop
xlat
outs
xor
scas
xchg
pop
shl
inc
push
jle
pushf
jnp
dec
addr16
out
fwait
inc
push
outs
mov
loop
hlt
jb
push
xchg
out
pop
push
dec
and
add
pop
add
jne
scas
add
rol
ficomp
cmps
imul
jle
dec
jbe
outs
repnz
or
fwait
sbb
jae
xchg
jno
or
test
outs
inc
push
cmp
push
fmul
xor
push
retf
fdiv
jg
rol
dec
mov
lds
test
das
cmps
push
in
jmp
cmp
ret
movs
xlat
call
sbb
sub
aad
add
mov
sbb
and
mov
sub
cld
pop
or
jl
mov
xor
je
or
push
loop
les
push
xchg
dec
push
fsubr
sbb
cld
(bad)
jmp
pusha
cli
es
out
in
shr
inc
pop
xchg
mov
ds
pop
dec
mov
cmc
adc
dec
or
push
dec
scas
mov
mov
and
cmps
sbb
mov
jecxz
sub
or
not
pop
mov
call
ret
push
inc
mov
sbb
pop
push
dec
shl
pop
sbb
xchg
loop
pusha
mov
mov
mov
or
shr
or
push
dec
data16
cmp
cmp
xor
or
xchg
xor
mov
sar
push
in
movs
add
jns
mov
or
jae
out
ins
jmp
mov
mov
in
xchg
cmp
cmps
cdq
add
fist
adc
adc
jmp
adc
push
bound
jle
push
retf
sti
dec
fwait
inc
std
cmp
fs
shl
sbb
sbb
adc
dec
sub
out
pop
add
sub
push
(bad)
aam
aaa
movs
adc
cmp
nop
jl
inc
in
popf
gs
xor
fst
ins
rol
fs
retf
fs
fsin
cwde
cmp
pop
lds
xlat
movs
retf
sti
test
sub
(bad)
adc
cli
jb
inc
push
add
std
aas
call
outs
xchg
sbb
dec
mov
(bad)
adc
bound
cli
(bad)
mov
mov
mov
jl
xchg
addr16
in
popa
movs
inc
mov
test
mov
jg
call
jecxz
out
pop
mov
lods
call
jo
dec
in
or
jecxz
leave
ret
cmp
or
clc
mov
pop
scas
lods
lahf
cmp
cmp
das
mov
push
fwait
sub
iret
mov
sub
popf
sar
xor
or
lds
arpl
mov
mov
fwait
mov
ficomp
imul
xchg
jle
mov
or
jle
pop
inc
mov
dec
push
cmp
std
xor
and
add
or
ss
rcl
or
movs
jmp
stc
nop
les
adc
aaa
adc
in
mov
and
arpl
test
adc
pop
xchg
test
pop
fild
in
mov
inc
stos
loop
(bad)
out
or
out
test
mov
xchg
cmps
xchg
mov
(bad)
or
(bad)
jbe
out
enter
pushf
jne
xor
cmp
pop
push
pop
push
pop
ins
dec
adc
shr
adc
out
add
or
mov
push
fcmovu
push
mov
cmc
lods
push
fdivr
(bad)
xor
sbb
xlat
jns
dec
icebp
(bad)
es
pop
das
fmul
dec
stc
int3
ss
lods
test
out
or
mov
clc
jmp
sub
stos
data16
cld
nop
scas
or
out
aad
mov
js
movs
mov
adc
fldcw
dec
and
mov
dec
stos
mov
and
rcl
sbb
pop
in
add
cmp
cs
ins
daa
push
sbb
dec
lahf
sub
aas
pop
push
out
or
retf
or
nop
mov
cmps
mov
ret
loopne
push
xor
out
rcr
out
cld
ss
clc
nop
pop
sub
jbe
retf
jo
adc
shr
push
rol
sbb
xchg
(bad)
cmc
aam
pop
and
mov
lea
mov
push
jl
dec
(bad)
stos
jae
pop
gs
push
adc
or
ret
inc
lods
sub
inc
cmps
inc
or
or
dec
jg
push
leave
shr
push
mov
xchg
adc
pop
rcr
outs
test
dec
sbb
jmp
xchg
sahf
add
enter
shl
ins
cmp
dec
pop
lods
leave
pop
loop
jno
mov
xchg
pop
out
repz
xchg
sub
add
mov
mov
adc
cwde
mov
cwde
call
clc
(bad)
into
mov
sub
into
clc
xchg
std
pop
sub
aam
popf
stc
add
and
cmc
inc
mov
test
ds
inc
sti
or
(bad)
scas
and
jmp
leave
mov
loop
sti
imul
mov
mov
mov
xor
or
fdiv
data16
call
in
mov
cmp
(bad)
test
sbb
fs
mov
mov
dec
retf
pop
enter
bound
sbb
pop
push
fidiv
push
ins
sub
ror
dec
inc
dec
ret
add
push
push
rcl
and
or
dec
dec
ins
cmps
pop
ja
(bad)
xchg
xchg
arpl
les
cmc
mov
sbb
mov
cmp
neg
sub
lock
adc
lahf
scas
mov
sahf
mov
scas
ins
adc
enter
gs
(bad)
lock
pop
push
in
mov
xor
add
xchg
fimul
dec
mov
mov
jo
retf
pop
cmp
mov
(bad)
lds
dec
das
add
jne
scas
sub
mov
and
push
jmp
movs
sbb
ss
xor
es
add
inc
mov
cwde
jmp
out
pop
xchg
dec
aad
aas
lds
sbb
add
and
mov
movs
push
pop
add
sub
pop
cmc
push
(bad)
cs
xchg
xor
xchg
inc
push
lods
daa
mul
cwde
pcmpeqb
scas
xor
add
lea
int
clc
js
repz
je
mov
inc
sub
movs
fisubr
std
repz
push
into
lea
xchg
xchg
jle
rol
hlt
jnp
das
mov
int
xlat
dec
(bad)
loope
gs
ins
pop
push
loope
cmp
ud1
in
xor
leave
mov
jl
adc
fs
pop
pop
shl
stc
adc
les
add
mov
pop
loopne
xchg
arpl
test
push
fisttp
and
mov
xchg
adc
pop
punpckhbw
xchg
(bad)
or
cmp
lods
push
dec
or
loope
inc
or
cmc
pop
xchg
jge
mov
daa
xchg
inc
bound
aam
push
rol
push
xor
inc
lock
dec
adc
(bad)
cmp
add
push
shl
je
in
repnz
mov
add
movs
add
mov
mov
neg
mov
pop
cmp
mov
push
retf
pop
mov
add
addr16
ror
lods
cmps
push
out
movs
and
xchg
add
mov
sub
rcr
in
xor
sub
inc
mov
mov
inc
popf
inc
fdivr
into
(bad)
stc
outs
in
push
cmps
data16
adc
(bad)
test
in
xchg
fsub
test
cs
xchg
call
or
xchg
jg
shl
pusha
sti
movs
mov
sbb
out
ss
in
fisubr
jo
daa
je
mov
ja
aas
or
imul
daa
outs
and
inc
out
test
adc
or
pusha
call
bound
fsub
out
mov
in
mov
jbe
jne
or
add
xchg
cld
sbb
fdiv
mov
call
mov
call
lock
ror
mov
mov
mov
xor
xlat
jle
sar
xor
movs
mov
xor
int
adc
mov
mov
aad
inc
dec
pop
div
leave
or
retf
adc
mov
ror
cs
movs
loopne
xchg
push
stos
fsubrp
add
stos
cmp
std
dec
sbb
add
mov
retf
push
jl
gs
fcom
jp
and
fist
lods
cmps
sbb
dec
shl
sub
xchg
ds
adc
cmp
xchg
mov
iret
(bad)
aas
mov
jnp
dec
rcr
pop
or
and
jmp
add
mov
jge
mov
mov
jge
jecxz
test
cmps
sub
cmp
cli
mov
mov
xor
je
bound
mov
sahf
mov
aaa
dec
mov
dec
and
and
fld
(bad)
jbe
dec
lods
leave
push
mov
retf
push
stc
push
cmovl
inc
xor
adc
pop
mov
fs
cwde
xchg
cmp
(bad)
loop
mov
add
pop
fsubr
and
mov
mov
test
clc
sbb
push
mov
cwde
pop
or
int
rcr
cmp
xor
icebp
rol
dec
pop
ds
or
xor
xchg
mov
xchg
imul
sahf
push
sbb
dec
into
mov
scas
mov
xor
ins
retf
pop
(bad)
sbb
jne
std
jo
xchg
test
jle
aaa
aaa
mov
mov
or
fisttp
mul
xchg
xchg
sbb
sub
or
push
pop
sbb
sub
shr
mov
idiv
fst
add
dec
pop
mov
sbb
stc
pushf
les
inc
test
push
dec
xchg
orps
call
and
lahf
sar
jns
lea
dec
pop
ins
scas
and
clc
popf
jl
and
mov
movs
mov
(bad)
xchg
test
sbb
pop
call
sub
sub
ret
push
neg
aas
ss
lahf
enter
pop
add
iret
push
adc
or
xor
sti
sahf
sar
movs
cmps
add
xor
jp
ror
sahf
call
add
mov
imul
sub
adc
or
inc
cmp
fst
sub
cdq
shr
mov
and
(bad)
ficom
push
mov
mov
popf
mov
not
int
movs
shr
lahf
mul
aad
mov
pop
mov
imul
cmp
push
inc
fist
push
stos
aam
pop
and
cmp
jl
push
enter
dec
(bad)
xor
test
cli
icebp
xchg
(bad)
rcl
or
mov
xor
cli
dec
xor
mov
push
sub
and
inc
(bad)
dec
add
shr
jbe
pop
movs
lahf
cdq
and
xchg
dec
lods
sub
outs
addr16
mov
sub
shr
mov
test
sti
mov
call
cmc
push
cmc
pop
pop
pop
pop
push
jmp
mov
push
or
sahf
xchg
add
xchg
imul
xor
adc
dec
xchg
daa
sbb
adc
push
repnz
xchg
cs
add
lds
dec
mov
fidivr
push
and
inc
xor
mov
mov
out
xchg
shr
lock
inc
add
mov
retf
push
ins
dec
dec
mov
mov
mov
sbb
pop
adc
pop
jg
aad
jge
or
jmp
(bad)
in
shr
jno
inc
push
mov
sub
dec
and
ret
out
dec
pop
retf
lahf
(bad)
leave
sub
sub
dec
in
repz
jl
dec
xchg
adc
xor
enter
dec
xor
cdq
adc
push
push
das
xchg
popa
sub
out
mov
ds
out
pop
dec
call
cmp
and
xlat
push
imul
rcr
push
jns
mov
jae
push
daa
outs
lods
push
add
std
sbb
xchg
mov
mov
mov
imul
dec
loop
neg
pop
icebp
(bad)
jmp
imul
call
inc
fmul
fs
jno
es
fs
rol
arpl
jae
add
sbb
mov
add
popa
mov
out
and
sahf
xchg
jb
in
sahf
push
loopne
xor
jne
mov
mov
sbb
iret
or
pop
pop
xlat
div
mov
push
push
or
adc
imul
stos
or
mov
jae
cmps
cmp
jb
fcomp
lock
cmc
push
std
mov
adc
mov
mov
mov
repz
ja
(bad)
cdq
movs
pop
xchg
sbb
and
mov
jmp
inc
mov
pusha
pop
push
aaa
fmul
ss
mov
adc
push
jle
push
or
(bad)
xlat
pop
shl
xor
int
and
xchg
ja
mov
shl
mov
repz
inc
out
repz
rcl
pusha
(bad)
hlt
mov
push
inc
sub
inc
sbb
mov
xor
adc
mov
or
outs
add
inc
push
xchg
add
test
cmc
and
pop
out
aaa
les
and
fs
sbb
(bad)
push
push
popa
jmp
(bad)
iret
jns
scas
or
jnp
nop
xchg
sbb
dec
enter
add
adc
cmp
push
inc
jp
push
mov
jae
inc
jno
jns
or
dec
cmp
into
pop
mov
mov
es
jp
cmp
stc
dec
addr16
ficom
xor
lods
sti
xchg
jbe
inc
cmps
outs
xchg
jl
cld
test
xchg
enter
lahf
or
stc
xchg
adc
retf
mov
jmp
rol
mov
lods
sahf
lds
jns
mov
arpl
xchg
sbb
out
sbb
jecxz
addr16
jno
mov
dec
les
mov
ret
scas
dec
sahf
mov
cmp
stos
in
push
nop
fldenv
pushf
sub
(bad)
xchg
stc
shr
shr
mov
sbb
and
(bad)
jne
cdq
pop
add
loop
mov
dec
xlat
pushf
out
add
imul
out
inc
add
imul
daa
and
je
clc
and
fst
out
xor
add
push
fsubr
loopne
and
das
adc
or
push
enter
xor
sti
dec
movs
nop
sbb
adc
movs
xor
or
rcr
fisubr
aad
fsubr
ss
popf
aaa
adc
(bad)
and
mov
jmp
mov
sub
or
je
or
xchg
data16
icebp
imul
jb
or
xchg
bound
outs
cwde
daa
sub
xchg
cli
int
pop
mov
mov
dec
ffree
and
cmps
add
push
adc
push
fwait
pop
push
out
and
inc
fwait
jg
aam
xchg
jmp
and
movs
inc
add
sub
popa
push
jbe
mov
enter
cld
inc
sbb
or
fs
xor
daa
imul
mov
test
popa
(bad)
sub
fild
(bad)
and
loope
sbb
ret
jmp
test
lods
and
les
cdq
sbb
(bad)
nop
pop
stos
xchg
mov
jbe
and
sub
lods
pop
pop
cmp
scas
fisub
aas
jmp
fdiv
mov
and
iret
mov
(bad)
mov
add
fadd
leave
cli
outs
xor
out
mov
xlat
pop
cmp
cld
xchg
sub
ss
or
fcom
and
lock
mov
jl
and
(bad)
pop
pushf
imul
outs
out
mov
jmp
mov
mov
dec
aad
aas
fisttp
xchg
xor
fsub
aas
inc
scas
call
inc
dec
jg
jmp
mov
aaa
add
sbb
out
rcl
test
push
inc
and
daa
rcl
mov
mov
imul
(bad)
cmp
and
jae
cdq
shr
xchg
xchg
(bad)
pusha
jnp
dec
dec
data16
xchg
cmp
retf
nop
jl
xor
mov
cwde
cmp
adc
and
cmp
sub
push
(bad)
ret
adc
repz
push
push
nop
push
adc
leave
(bad)
test
fidiv
pop
mov
mov
ja
mov
nop
loop
sbb
inc
js
in
or
and
adc
dec
push
sub
aas
daa
sti
xlat
in
shl
and
adc
shl
retf
fst
inc
push
outs
jmp
xor
inc
into
ja
mov
jl
and
in
out
stc
mov
pop
push
hlt
xchg
xchg
out
mov
mov
jge
data16
test
or
jg
add
repz
mov
in
mov
dec
or
rol
pop
cmps
jle
iret
popa
dec
daa
mov
or
pop
lea
mov
imul
outs
(bad)
sub
out
stos
mov
pusha
cmovp
push
iret
stos
fcmove
mov
inc
xchg
loope
pop
sbb
add
jl
cmp
add
sub
sbb
mov
lods
add
adc
cld
inc
mov
fadd
xchg
jmp
inc
mov
cmp
inc
fdivrp
mul
outs
sbb
sbb
lahf
and
add
mov
ins
ins
push
push
fstp
xor
shrd
div
pop
(bad)
sub
enter
dec
mov
jmp
fst
inc
xchg
arpl
fidivr
scas
mov
out
popf
sub
sahf
sahf
out
out
jmp
jbe
call
out
lods
(bad)
sub
iret
xchg
jecxz
cmp
out
jo
push
(bad)
push
aaa
push
(bad)
sub
dec
mov
xchg
push
push
pushf
mov
das
push
adc
dec
mov
inc
sti
mov
cwde
xor
mov
popf
jle
mov
jns
xlat
xchg
cmp
dec
mov
into
xlat
sub
imul
pop
jb
mov
ret
mov
pop
mov
(bad)
mov
adc
push
cdq
aas
stos
jo
loope
and
in
(bad)
jmp
xchg
gs
cmp
js
mov
in
xor
ins
jbe
sbb
push
je
cs
and
call
sub
popf
adc
mov
ins
sub
call
in
in
sub
fldl2e
jae
shl
dec
mov
int3
push
dec
sbb
movs
les
dec
or
jbe
cmp
icebp
dec
ret
sub
out
movs
dec
test
call
or
(bad)
stos
lods
mov
mov
sahf
mov
xor
push
sub
xor
sbb
lock
jl
mov
fsubr
lods
jnp
nop
sbb
inc
push
retf
(bad)
pop
popf
cs
repnz
lahf
jp
or
push
retf
repnz
arpl
adc
push
mov
outs
mov
(bad)
xchg
pop
jl
cmp
sbb
cdq
dec
call
retf
hlt
mov
mov
adc
push
jbe
dec
adc
add
or
jp
cmp
(bad)
ficomp
adc
adc
mov
and
sub
es
sbb
push
(bad)
mov
dec
fdiv
mov
call
mov
enter
jb
scas
sub
cli
ror
loope
aaa
imul
popf
sub
jg
jns
mov
jno
movs
push
popf
dec
out
pop
arpl
(bad)
cmps
jae
adc
dec
aam
xadd
adc
push
adc
in
ja
call
and
in
je
out
mov
xchg
test
fs
and
adc
cmp
push
popa
xor
lahf
add
xor
retf
cmp
out
jb
xor
xchg
(bad)
mov
mov
pop
je
push
mov
add
sbb
idiv
inc
scas
mov
ja
and
ret
sbb
lods
push
rcr
mov
jns
mov
mov
pop
out
push
out
mov
xchg
mov
and
movs
mov
movs
adc
arpl
sub
inc
dec
jnp
xchg
or
movs
bound
movs
dec
cmp
sar
shr
sub
mov
in
jp
sub
popf
and
pop
loop
loop
mov
pop
push
xchg
dec
loope
jae
add
loopne
imul
xchg
test
or
jno
repz
imul
(bad)
daa
push
sub
jecxz
mov
fucomi
es
mov
lods
add
test
mov
dec
cld
pop
enter
test
push
mov
not
sub
ins
jno
in
cli
xchg
push
not
mov
(bad)
aas
adc
push
or
cld
adc
adc
ins
loop
inc
call
push
(bad)
stc
aad
cmp
out
mov
(bad)
aam
push
jle
ror
das
lahf
push
pop
hlt
xchg
push
imul
sti
popf
and
xor
rol
add
or
mov
sahf
mov
imul
inc
jnp
test
sbb
mov
jns
jae
ds
pop
mov
jbe
pop
into
add
mov
push
scas
xchg
add
push
fnclex
pop
add
inc
sahf
fst
dec
das
cmp
test
pop
(bad)
mov
loope
fsubr
jae
mov
mov
in
sub
retf
sbb
add
and
fild
mov
sub
or
xor
les
mov
(bad)
pop
push
jle
or
xchg
and
xor
pop
and
add
iret
jo
jne
cmp
cld
pop
scas
scas
(bad)
stos
dec
jnp
mov
repz
(bad)
inc
clc
imul
pusha
mov
aaa
popa
jg
loopne
retf
mov
cmp
fst
adc
xchg
inc
xchg
clc
lock
gs
dec
in
add
(bad)
adc
jno
mov
(bad)
mov
fs
(bad)
enter
add
cmp
xchg
push
loope
stos
mov
jne
in
xor
cmp
push
push
add
lods
sbb
test
sbb
cmp
jbe
lods
dec
lods
cmp
xor
mov
dec
(bad)
jg
xchg
stc
cmp
and
(bad)
mov
xchg
xchg
imul
inc
mov
mov
(bad)
call
fwait
dec
jno
int3
(bad)
pop
stos
outs
leave
(bad)
(bad)
mov
xchg
lds
scas
bnd
push
movs
or
xchg
cmc
mov
mov
(bad)
pop
pop
mov
jae
stc
mov
jp
add
repz
push
sub
mov
hlt
pop
jle
jae
cmp
pop
cmp
sar
ror
retf
or
shr
jb
cmc
ss
ror
rcr
xchg
cmc
aas
out
loopne
xor
mov
scas
push
mov
fidiv
ins
xor
jmp
outs
lods
imul
sub
ror
jge
in
pop
fldcw
out
jne
rcr
sbb
dec
sbb
inc
arpl
lds
out
or
ffree
fcmovu
add
pop
test
sbb
mov
xlat
push
push
inc
call
adc
mov
jns
es
pop
mov
push
ret
dec
mov
sub
cwde
pop
pop
jg
hlt
mov
sbb
xor
add
aam
scas
sbb
pop
mov
dec
in
cmp
addr16
(bad)
jne
push
fstp
adc
inc
adc
mov
pusha
iret
jle
and
or
cmp
syscall
dec
sbb
rol
repnz
in
cmp
adc
pusha
mov
das
add
push
movs
xor
inc
push
sub
push
pop
fs
push
mov
(bad)
fdivp
xchg
jmp
inc
lds
mov
out
xchg
inc
mov
dec
test
jnp
(bad)
sbb
lea
mov
scas
loop
mov
push
jmp
mov
xchg
mov
(bad)
cmp
pop
mov
in
xchg
dec
xor
mov
nop
cdq
mov
retf
add
je
jne
xor
sub
or
mov
mov
les
push
iret
iret
fisubr
leave
add
aad
cmc
mov
(bad)
(bad)
jns
imul
pop
mov
pop
inc
retf
xchg
jo
sti
xor
xor
pop
mov
xchg
int
adc
and
pushf
loopne
in
add
pop
(bad)
mov
call
jmp
in
dec
fwait
or
dec
cmp
pop
add
inc
sbb
test
inc
or
cld
jbe
pop
ds
sbb
ja
pop
jno
adc
lods
jg
das
mov
adc
sub
leave
gs
adc
lods
div
imul
sub
fwait
js
loope
xchg
rcl
das
(bad)
mov
mov
outs
mov
cmp
mov
adc
aaa
or
imul
or
pop
mov
and
mov
xor
fbld
fadd
sahf
inc
sar
aaa
fstp
test
in
xchg
imul
xchg
stc
and
movs
add
inc
pop
add
std
loopne
cmp
mov
loopne
or
dec
push
stos
clc
jo
outs
mov
push
mov
ret
scas
xor
in
pop
push
mov
mov
test
les
mov
mov
inc
nop
xchg
dec
mov
sbb
hlt
ret
sub
imul
jae
loope
rcl
cli
aas
out
popf
fnstsw
xchg
rol
into
je
inc
pop
cwde
aas
popa
sti
ret
pushf
xor
test
jbe
sbb
hlt
jecxz
push
inc
fadd
rcr
push
popf
push
pusha
aam
cmc
cwde
jg
je
xchg
(bad)
sbb
rcl
movntq
pop
jb
(bad)
test
jg
adc
cs
sti
mov
jae
in
test
jnp
imul
mov
or
ins
adc
and
xchg
or
(bad)
xchg
xor
mov
jbe
test
clc
aaa
sar
cli
in
out
mov
fwait
scas
jno
inc
mov
out
popa
das
out
cld
jp
(bad)
ja
xor
sti
retf
clc
ss
out
imul
lods
xchg
pop
mov
fsub
pusha
stc
pop
xor
sbb
or
into
fmul
fimul
out
(bad)
mov
fcom
mov
and
inc
add
push
xchg
repz
sbb
cmp
fld
daa
aas
xlat
btc
xchg
stos
dec
jecxz
aaa
jle
xor
(bad)
dec
add
inc
pop
mov
push
imul
out
push
in
gs
shl
popf
lods
dec
arpl
dec
(bad)
cmp
std
xchg
xor
cmp
jp
ret
test
and
push
retf
ds
aam
scas
mov
sbb
add
add
retf
ret
sahf
pop
fld
sbb
popf
movs
adc
jl
mov
gs
inc
push
jmp
loop
hlt
inc
sbb
call
shl
sub
ret
fucomi
call
movs
mov
movs
jge
jnp
adc
dec
shr
xlat
xchg
(bad)
lods
fcomp
mov
enter
call
sbb
loop
push
popa
js
dec
call
hlt
pop
cdq
or
(bad)
imul
cmp
jecxz
push
hlt
or
inc
sbb
imul
sub
arpl
cmp
pop
fbld
(bad)
aam
mov
mov
scas
add
bound
or
jp
clc
dec
adc
(bad)
ret
xchg
lahf
jle
xchg
shl
btr
ss
imul
adc
lods
loopne
sar
xchg
pop
lock
loopne
jmp
ds
aam
xchg
out
inc
xchg
mov
int
ds
je
nop
adc
cmp
jnp
loopne
test
pop
pop
push
mov
sub
lock
std
aas
xor
cmc
jno
cmp
and
jmp
mov
jge
push
pushf
cs
ds
xor
cld
push
call
outs
arpl
in
sub
sbb
mov
fidiv
(bad)
mov
mov
mov
xor
xlat
shl
xchg
and
arpl
xchg
bound
test
cmc
jbe
mov
bound
aad
adc
mov
jnp
ins
frstor
fcomi
aam
jle
xchg
cmp
mov
rcl
sbb
push
mov
cmc
out
add
movs
int3
cmp
aaa
sub
or
in
lds
add
cwde
pop
in
push
pop
xchg
adc
ficomp
inc
iret
push
loop
hlt
jp
or
addr16
fnstenv
push
out
dec
sbb
sahf
retf
rcl
xor
xchg
in
jno
xchg
jno
outs
jo
leave
inc
in
sbb
dec
outs
scas
icebp
dec
jecxz
jl
(bad)
and
push
mov
das
mov
adc
push
cmp
add
mov
inc
push
jne
ins
push
test
sbb
xor
xlat
imul
repz
inc
je
mov
mov
cmp
fst
xor
mov
cmp
and
or
(bad)
leave
movs
sub
add
scas
(bad)
in
les
xlat
movs
pushf
fbstp
mov
retf
cmp
push
xor
test
in
sub
or
and
xchg
shl
mov
pop
inc
leave
pop
pop
jmp
pop
mov
inc
faddp
das
(bad)
fisub
dec
add
push
mov
lea
jl
adc
test
xlat
xchg
mov
and
stos
cmps
fadd
aas
repz
cmp
cdq
push
bound
cdq
sbb
or
inc
ss
(bad)
cmp
mov
jmp
push
xchg
cwde
pop
(bad)
push
jge
test
out
pmaxsw
mov
pop
or
add
jmp
retf
mov
fstp
inc
lods
jmp
loope
nop
repnz
mov
adc
out
mov
mov
xor
pushf
push
or
sub
sahf
lahf
xor
mov
adc
mov
div
pop
sub
xchg
loopne
movs
call
imul
mov
sub
xchg
cmc
jecxz
mov
ret
loope
inc
jnp
mov
cmp
mov
fsqrt
stos
js
rcr
ss
cmp
fimul
ret
jmp
cmp
mov
fsubr
adc
jnp
adc
jae
sbb
jns
jns
add
mov
dec
xor
mov
mov
push
test
mov
cli
pop
pop
add
sub
aaa
ins
(bad)
in
or
fs
or
push
fiadd
daa
dec
cmc
std
sbb
out
popf
mov
imul
jo
xlat
(bad)
dec
jno
and
int
mov
rcr
popa
dec
(bad)
pop
pop
xchg
(bad)
cmps
nop
inc
xchg
pop
xlat
mov
(bad)
bound
mov
jns
or
xor
popw
add
dec
xchg
sub
cmp
push
add
xchg
std
shl
and
sbb
adc
sub
mov
hlt
outs
loop
inc
fidiv
cmp
jge
(bad)
jp
ret
mov
les
mov
mov
imul
mov
sbb
pop
aaa
(bad)
cmp
ret
jae
enter
inc
popf
adc
pop
xchg
lds
in
and
leave
cmp
lods
xchg
jbe
sbb
enter
ins
and
jge
or
push
aaa
test
repnz
mov
pop
cmps
push
xor
repnz
lds
xor
int
sub
cmp
int3
pop
mov
addr16
ds
ss
(bad)
push
xchg
mov
mov
in
shr
gs
bound
rcr
xchg
mov
pop
jmp
addr16
xor
shr
or
pop
push
mov
dec
in
iret
mov
xor
jp
jo
mov
xor
dec
lahf
jl
in
xchg
enter
cmp
aad
rcl
add
pop
adc
add
add
jmp
sbb
sbb
rdpmc
pop
repz
outs
out
in
xchg
aaa
and
stos
adc
rcl
mov
inc
or
out
inc
mov
lea
push
or
add
cld
sbb
sbb
push
clc
enter
cdq
adc
mov
sub
(bad)
fst
mov
jo
jmp
int3
jecxz
sub
add
mov
sub
pop
(bad)
ins
pop
mov
jp
xchg
adc
ins
mov
push
shl
leave
mov
out
mov
xchg
ret
ins
adc
xor
cmp
(bad)
imul
stos
cwde
pop
sbb
test
dec
sub
or
lea
imul
inc
mov
fimul
mov
mov
cmp
or
aad
sub
popf
dec
pop
cld
cmp
dec
push
push
lods
mov
xlat
mov
mov
fld
or
push
push
cmp
rcr
into
add
pushf
movs
(bad)
in
adc
cmps
or
cmp
test
or
ins
(bad)
xchg
popa
fidivr
ds
pop
out
fist
jle
mov
add
outs
popf
outs
cld
jmp
adc
xchg
adc
push
push
neg
lods
mov
sub
mov
add
fs
add
sbb
cwde
inc
sbb
data16
rcl
and
xor
cmc
or
push
push
jl
arpl
dec
lock
mov
dec
sbb
ins
mov
or
and
mov
call
push
outs
sub
mov
cmp
(bad)
cli
rol
cmps
shl
dec
cmp
add
fnstcw
sar
jo
cmp
fadd
div
sub
add
xchg
inc
rol
mov
or
add
xor
cmp
std
shr
scas
pushf
movs
or
push
mov
and
cmovs
sbb
mov
(bad)
mov
aad
jge
shr
cmps
stos
xor
jmp
in
rcr
out
xchg
clc
hlt
adc
imul
mov
push
popf
movs
ss
adc
lahf
and
push
add
jmp
jl
scas
fstp
push
in
fisub
xchg
jnp
fsincos
into
or
mov
out
jno
call
ds
xchg
dec
neg
jmp
jl
sti
jb
jg
repz
cmc
mov
xor
in
dec
outs
add
sub
mov
push
outs
jnp
or
aas
fbld
call
addr16
push
jecxz
lods
lahf
mov
outs
test
jl
pop
sbb
adc
stos
fld
cmps
(bad)
clc
xchg
inc
xchg
not
or
int
sbb
and
mov
fstp
mov
test
mov
sub
mov
imul
add
mov
cdq
add
xchg
mov
fisub
fld
jae
in
aaa
xchg
fisub
imul
test
sti
cli
mov
push
rcl
int
pushf
xchg
stos
rcl
les
mov
rol
lahf
jmp
sbb
or
out
fdivrp
or
sub
sahf
aaa
xlat
in
pushf
aad
mov
xchg
push
push
fidiv
adc
dec
and
adc
jns
call
les
sbb
lahf
cmp
and
ror
fcomp
retf
push
dec
push
mov
jmp
adc
out
jl
cwde
js
xchg
push
mov
and
lahf
addr16
nop
rol
sahf
imul
xor
dec
adc
(bad)
dec
mov
xlat
outs
popa
adc
jmp
sub
pop
and
push
cdq
mov
jb
pop
sahf
jae
push
loopne
mov
hlt
out
lahf
stos
push
pop
mov
imul
(bad)
(bad)
xor
(bad)
mov
and
ja
imul
mov
call
sbb
push
ins
mov
scas
push
adc
add
add
js
jle
mov
pop
fimul
jnp
pop
pop
mov
cmps
ficomp
js
pop
fsubr
jbe
(bad)
in
add
test
ss
sbb
xchg
adc
xchg
lods
jnp
loopne
ret
sar
xchg
arpl
inc
cmp
push
mov
sbb
xlat
daa
jp
lea
mov
(bad)
adc
mov
lea
and
ficomp
push
das
repz
in
sub
adc
jmp
adc
enter
pop
fwait
mov
add
ins
std
cdq
je
add
mov
fsub
jo
xchg
xor
push
inc
and
xor
mov
add
and
xchg
in
retf
push
dec
pop
sub
push
ja
test
out
pop
xor
jns
add
dec
dec
fcomp
jne
shl
addr16
sub
int
retf
jge
dec
div
add
or
mov
sbb
cmp
pop
inc
sub
or
(bad)
sub
adc
mov
mov
clc
sahf
fadd
into
mov
lods
mov
xchg
xchg
mov
pop
xor
gs
call
(bad)
icebp
push
idiv
lods
in
xchg
int3
jp
mov
adc
sbb
or
dec
sbb
mov
or
pop
test
mov
push
push
mov
nop
(bad)
(bad)
(bad)
into
nop
and
out
dec
and
aas
adc
pop
and
push
mov
icebp
mov
fstp
loop
and
xor
push
or
mov
mov
ss
mov
jecxz
xchg
jmp
adc
adc
mov
push
xor
into
xchg
mov
popa
(bad)
stc
shr
jnp
cs
retf
(bad)
daa
(bad)
out
lahf
les
dec
pop
loop
fisttp
pop
repnz
add
xchg
dec
mov
out
out
(bad)
aam
jns
push
in
ror
aaa
jmp
dec
xor
retf
mov
sbb
(bad)
addr16
test
int3
cmc
cmp
sbb
ret
push
fmul
sbb
pop
movs
shr
rol
xchg
xchg
and
(bad)
mov
jmp
add
jae
ja
add
dec
fild
cwde
xchg
jmp
sbb
es
mov
and
scas
jle
mov
adc
sub
dec
cmp
add
and
mov
jno
jg
xchg
je
xchg
nop
aad
xchg
int3
fdivr
mov
rcl
jmp
sub
adc
into
aas
adc
mov
sbb
jmp
cmp
jb
rcl
jmp
mov
add
stc
sbb
mov
pop
enter
cmc
mov
adc
shl
push
inc
cmp
mov
scas
stc
sbb
into
jp
and
shr
(bad)
movs
in
xchg
mov
test
sahf
fbstp
xchg
dec
lods
xchg
inc
je
cmps
push
jmp
dec
leave
mov
ja
call
(bad)
mov
popf
mov
cmp
cwde
nop
inc
dec
push
dec
gs
push
sbb
cmp
inc
ins
dec
out
jae
call
das
test
mov
je
xchg
aas
and
and
mov
pop
sub
adc
rcr
xor
push
dec
(bad)
xchg
movs
lods
sti
sbb
pushf
jp
adc
add
mov
imul
les
mov
dec
and
or
stos
dec
and
fwait
jns
pushf
sub
lods
(bad)
fst
das
aas
and
pop
inc
pop
cmp
movs
pop
test
sbb
jg
pop
pop
(bad)
and
int3
pop
push
retf
mov
shl
cmp
dec
sub
cmp
mov
cwde
add
shl
daa
ss
ror
mov
lods
and
push
sub
dec
popw
imul
mov
mov
out
repz
mov
xchg
xchg
cmp
shl
inc
and
jae
and
nop
test
(bad)
adc
pop
xchg
in
(bad)
fld
jecxz
cmp
pop
dec
fidivr
dec
jno
sbb
push
lds
lods
in
aas
mov
fst
ins
mov
fs
jmp
mov
mov
test
mov
not
dec
lahf
cwde
cwde
call
xchg
aam
mov
pop
xor
inc
dec
pop
clc
xchg
pushf
ror
not
mov
(bad)
or
rol
loop
jecxz
aas
hlt
call
test
inc
xchg
iret
fwait
and
jecxz
stos
push
dec
xor
mov
xchg
stc
int
mov
sbb
sti
xchg
call
jp
and
xchg
mov
jo
shl
sbb
(bad)
pushf
xor
dec
cmp
enter
(bad)
mov
sahf
ds
aaa
div
xor
daa
pop
dec
sbb
cmp
or
rol
xor
out
pop
jmp
out
jecxz
mov
or
jle
fcomip
and
mov
fild
call
jl
push
adc
int3
scas
retf
data16
jno
jmp
push
sub
cld
inc
shr
ins
in
pusha
push
aas
inc
test
mov
inc
popf
ret
cmp
push
push
call
sar
lods
repnz
pop
lods
ss
scas
dec
test
fiadd
mov
test
test
xor
cmc
add
or
or
scas
xchg
out
outs
fimul
push
(bad)
ins
mov
in
push
xor
mov
mov
test
pop
push
mov
jo
sar
adc
dec
fcmovb
pop
adc
test
sbb
xor
pop
lahf
cdq
fild
mov
imul
nop
push
hlt
add
cmp
pop
mov
push
call
enter
test
dec
fs
pop
out
test
ret
jmp
shr
jbe
sub
sub
xchg
lock
mov
(bad)
mov
gs
cs
mov
ins
stc
(bad)
pushf
clc
sub
push
jmp
add
call
loop
dec
push
jp
out
pusha
lahf
xchg
popw
sbb
popf
call
push
push
xor
xor
jns
(bad)
fidiv
adc
inc
test
cli
fmul
ret
lock
pop
sbb
movs
test
(bad)
xchg
cmp
daa
retf
dec
push
lock
dec
mov
(bad)
cmp
cmp
ror
lods
jo
add
loopne
std
dec
lods
inc
vmovntpd
push
jo
xchg
add
inc
pop
mov
pop
jl
fwait
sbb
fild
dec
shr
xchg
gs
inc
and
js
push
mov
std
sub
clc
xchg
fimul
sahf
add
leave
add
cmp
push
mov
gs
lock
iret
daa
mov
pop
fwait
fs
jae
cli
xor
int
xchg
aaa
sub
push
sbb
fstp
dec
popf
popf
test
xor
mov
fdivp
push
jns
les
cmp
mov
in
mov
retf
push
outs
(bad)
cmp
jo
jb
cmps
(bad)
mov
out
or
in
cs
pop
fs
je
adc
loop
aad
fst
(bad)
(bad)
aaa
mov
mov
out
mov
push
fs
sbb
sahf
je
mov
(bad)
inc
xchg
jge
popa
mov
jnp
addr16
out
pop
xchg
cmps
xchg
sub
lea
cmp
dec
mov
shl
ret
enter
stos
fnsave
cmp
test
in
mov
push
stc
test
movs
aam
jbe
bound
inc
jns
popf
inc
dec
xchg
gs
add
cmp
scas
rcr
cmps
das
cmc
mov
clc
mov
cmp
call
pop
dec
clc
int
mov
adc
in
(bad)
loopne
addr16
jge
mov
cmp
cld
dec
jg
in
mov
(bad)
sahf
mov
jge
call
xor
int3
outs
aam
xchg
fscale
pop
aad
pop
daa
pusha
mov
test
mov
or
or
dec
jb
in
and
lds
enter
mov
push
and
lock
mov
inc
ja
xchg
stos
scas
ss
mov
jb
ret
mov
xchg
and
repnz
cs
adc
ins
xor
lds
icebp
ins
jo
mov
scas
daa
cdq
aam
mov
in
cmp
sbb
popa
inc
fdiv
aas
es
addr16
out
mov
xchg
and
cmp
cmps
jmp
call
cmp
out
rep
call
add
mov
das
fwait
imul
lock
mov
sub
cwde
adc
mov
xchg
inc
jp
call
fst
xor
add
add
add
mov
mov
nop
jle
cmp
inc
in
cwde
sbb
mov
mov
cwde
mov
inc
pop
repnz
(bad)
je
pop
add
xchg
and
cs
xchg
das
xchg
dec
addr16
sbb
int
mov
mov
in
push
push
mov
pushf
mov
push
imul
mov
and
scas
sub
xchg
sub
mov
jecxz
sbb
cmp
sbb
fisttp
(bad)
out
or
icebp
imul
les
mov
inc
sbb
add
pop
xchg
or
rcr
rcr
pop
mov
loopne
xor
xchg
jecxz
loope
lods
js
scas
scas
sbb
sbb
retf
mov
sbb
or
push
mov
cmp
pushf
cwde
fimul
sbb
stos
int
cmp
not
cld
mov
xor
inc
(bad)
mov
enter
dec
fsubr
mov
call
push
cmp
je
adc
sti
loope
dec
shl
ja
in
xlat
sub
jmp
mov
add
inc
scas
ja
pop
add
xchg
scas
and
xlat
stc
das
leave
test
jg
or
aad
adc
ret
dec
sbb
pusha
cmp
or
movs
xchg
fstp
in
hlt
cdq
clc
xor
retf
sub
jecxz
ret
sbb
jmp
or
das
inc
mov
add
test
or
mov
in
xchg
icebp
daa
nop
or
cmps
inc
sbb
jmp
sbb
cli
jle
mov
movs
mov
push
jns
xchg
je
push
xlat
je
cmps
pop
xor
or
pusha
add
dec
in
sbb
mov
mov
rcr
jo
bound
adc
ret
cmps
les
sub
cmp
(bad)
dec
mov
not
cmp
dec
mov
and
xchg
rcr
cmp
mov
das
int3
cmc
and
dec
shl
rcr
mov
push
jp
add
fnsave
fadd
jae
int
jnp
or
es
pop
cmp
jg
shl
clc
and
daa
out
out
xchg
lods
stos
xchg
ja
stos
mov
ins
(bad)
stc
xlat
cmc
cmps
push
inc
ja
or
ror
mov
jg
sbb
std
in
mov
inc
ins
dec
or
shl
xchg
and
lea
mov
pop
mov
add
jecxz
int3
retw
punpcklwd
leave
inc
out
popa
std
dec
fdecstp
outs
icebp
mov
adc
cmp
jmp
jnp
pop
xchg
mov
mov
sub
test
cmc
pop
bound
adc
out
xor
mov
cmp
dec
dec
push
add
mov
ja
xor
add
xor
dec
and
adc
cmp
push
sub
mov
dec
xchg
gs
sub
and
push
sbb
dec
mov
mov
xchg
int3
imul
or
or
arpl
rcl
ins
mov
arpl
sub
xchg
adc
ins
cmp
cmp
mov
sbb
pop
in
fdiv
aas
mov
(bad)
jns
add
mov
mov
pop
retf
xchg
xor
dec
stos
cmp
movs
or
dec
clc
mov
push
mov
add
inc
ins
cmp
rcr
stos
xchg
dec
lahf
rcl
mov
push
dec
push
shl
cld
mov
(bad)
cmc
retf
push
sahf
ss
and
adc
pop
stc
mov
push
vmwrite
popa
dec
push
and
and
push
imul
scas
sbb
xor
mov
jo
sbb
pop
neg
add
xor
mov
jg
les
xchg
scas
or
mov
(bad)
repz
scas
push
test
loopne
addr16
mov
clc
js
imul
std
jge
sbb
add
cwde
int3
mov
or
rep
pop
cmp
mov
xchg
inc
int3
and
xor
sbb
mov
mov
sub
sahf
sti
push
push
mov
rcl
pop
ret
xchg
push
jb
push
push
out
je
(bad)
push
add
test
or
add
inc
push
inc
mov
in
icebp
icebp
dec
stc
fldenv
push
push
mov
inc
xchg
test
mov
inc
repz
jno
mov
and
or
and
bound
(bad)
pop
cmp
(bad)
into
adc
bound
mov
adc
push
sbb
imul
push
mov
cmps
xor
popf
sub
ins
dec
push
in
sbb
aam
btc
fwait
cmp
test
push
and
es
icebp
adc
mov
mov
call
jae
push
adc
push
ja
icebp
popa
ins
jl
dec
fild
js
(bad)
scas
mov
loopne
sub
pavgb
stos
test
push
cdq
out
cli
hlt
ja
push
sub
test
scas
(bad)
sub
adc
dec
or
or
icebp
repnz
jecxz
mov
sub
push
aaa
push
jecxz
inc
xor
adc
mov
int3
not
icebp
test
mov
and
jns
xchg
adc
or
mov
xor
dec
ficom
adc
sbb
xor
push
scas
ins
push
add
retf
sahf
cmps
sub
test
or
inc
dec
scas
test
sub
mov
push
nop
push
add
pop
repnz
fwait
mov
add
cmp
push
inc
test
in
je
jmp
cmp
cmp
xchg
mov
loope
sbb
mov
repnz
adc
(bad)
ins
int
lahf
xchg
sbb
jmp
inc
and
xchg
pop
jge
aam
ret
dec
sbb
jmp
test
cmp
sti
mov
cmp
into
enter
xchg
xchg
int
pop
out
scas
loope
mov
mov
stos
xor
pop
push
add
idiv
ret
mov
sub
and
call
mov
je
mov
pop
mov
fsub
int3
push
je
mov
retf
dec
jge
inc
mov
shl
fcmovnu
mov
shl
shl
and
xor
int
mov
add
mov
js
in
push
sub
rcr
out
nop
xor
sub
or
xor
sahf
mov
cli
jl
sub
rcr
repz
gs
scas
outs
cli
jg
sbb
jmp
or
jle
cli
pushf
mov
push
out
shl
enter
adc
adc
cmps
gs
jle
xor
mov
pop
outs
bound
(bad)
dec
jg
jnp
mov
push
(bad)
sub
loopne
shl
stc
dec
aas
es
mov
push
icebp
push
leave
ins
add
mov
repz
adc
(bad)
sahf
jmp
dec
fist
cmps
dec
jl
rol
stos
out
mov
rol
shl
and
mov
sbb
inc
in
js
(bad)
cmp
push
std
mov
add
add
sti
jbe
mov
jp
or
jmp
xor
pop
add
cld
cli
movs
div
ds
dec
mov
inc
pushf
jp
pop
push
iret
sub
sbb
pop
cmp
les
mov
aad
fimul
and
rcl
add
cdq
pop
bound
nop
test
inc
xor
aaa
mov
mov
popa
inc
and
xchg
inc
cmp
mov
shl
cmp
jmp
pop
mov
push
mov
fwait
xchg
cmc
adc
xor
outs
jne
ret
(bad)
mov
cld
or
xchg
das
lds
push
mov
jno
in
arpl
xor
jge
cmp
cmp
or
or
xchg
and
clc
dec
fs
or
ja
pop
mov
pop
xchg
std
xor
jns
cmp
bound
fwait
shr
xchg
and
movs
scas
out
daa
aad
push
sub
jecxz
in
xor
inc
push
add
cmp
ficomp
clc
repnz
clc
ror
(bad)
in
pop
inc
scas
or
mov
xor
jns
dec
shl
mov
jno
cmp
push
mov
shl
pop
pop
lock
je
sar
scas
sbb
pop
repz
inc
sub
leave
(bad)
cmp
fwait
loop
outs
push
jne
inc
and
ins
push
xchg
pop
and
rcl
inc
mov
mov
dec
adc
push
xchg
fs
push
imul
lahf
dec
mov
or
das
xchg
mov
jb
pop
and
dec
and
ret
sar
int3
xchg
add
loopne
pop
and
mov
or
push
leave
(bad)
mov
test
(bad)
add
and
pop
fldcw
adc
leave
xchg
dec
sbb
lods
mov
sub
out
mov
mov
push
jmp
sub
push
ss
jmp
out
mov
ficomp
xchg
push
out
retf
not
cmp
xchg
lea
xchg
cmp
jo
mov
inc
outs
mov
imul
dec
jmp
in
sub
movs
sahf
idiv
movs
xor
cmp
sub
lahf
add
cmp
mov
xchg
(bad)
lea
je
push
and
sub
pop
mov
fwait
push
sub
cli
stc
pop
aaa
sahf
jno
sub
sbb
sub
or
iret
push
or
inc
test
push
loop
xor
call
xor
inc
call
imul
pop
lahf
mov
push
cmp
cs
lea
cmp
dec
mov
es
dec
mov
int3
sub
pop
push
stos
mov
fwait
pop
mov
out
scas
push
imul
xchg
aas
and
mov
mov
cmp
mov
pop
or
and
mov
dec
sub
and
std
mov
fild
aaa
and
mov
mov
jmp
mov
popa
xchg
push
das
inc
outs
mov
in
mov
vpmuludq
cmp
call
sub
push
sbb
cmc
(bad)
movs
cs
pop
push
push
inc
imul
inc
xchg
jl
fwait
inc
inc
push
loope
pop
arpl
rol
or
ret
pop
adc
(bad)
arpl
add
xor
rol
mov
mov
push
call
push
add
fchs
cmp
ror
push
mov
out
push
jno
mov
repnz
rol
mov
shl
pop
dec
ror
mov
cs
ins
into
or
(bad)
or
outs
pop
clc
repnz
or
call
ins
cmc
sub
inc
ins
xor
(bad)
jle
sub
sahf
mov
je
outs
dec
(bad)
ud1
add
sub
and
lea
or
or
xor
ja
cmp
test
sub
xchg
stc
or
fist
cmp
push
rcl
jnp
in
out
jb
(bad)
sub
pop
fwait
push
out
sti
xchg
inc
int
fdiv
jbe
inc
push
shr
lea
int3
pop
in
test
mov
lods
scas
xchg
sub
push
fstp
xor
sbb
int
and
sub
jns
in
cdq
into
inc
inc
cmp
sbb
out
std
and
mov
daa
inc
mov
sbb
in
es
dec
cwde
std
pop
aaa
xor
bound
push
mov
add
cmc
adc
dec
xchg
cwde
sub
pop
add
cmc
hlt
xchg
repnz
call
pop
sti
inc
sub
neg
ud0
add
add
xchg
dec
inc
jmp
sbb
lods
dec
pushf
popa
jmp
mov
push
cmp
push
bound
add
(bad)
in
pop
fisttp
jge
mov
cli
xor
sub
pop
ror
pop
je
rol
cwde
sub
push
dec
mov
aaa
repz
aaa
add
lahf
push
mov
popa
pop
pop
pop
push
arpl
lds
sub
or
push
inc
popa
pand
daa
retf
loope
xchg
and
add
jo
xor
xor
mov
xchg
sbb
popa
shl
mov
repnz
(bad)
fistp
jo
push
test
ret
xchg
cmp
arpl
mov
add
jg
pop
mov
mov
retf
data16
sti
fsubr
ss
hlt
ja
add
pop
cmc
xor
aad
outs
jmp
fmul
(bad)
(bad)
mov
sub
pop
pop
addr16
pop
push
out
lock
jns
fbstp
xchg
in
add
fcom
(bad)
pop
test
xchg
dec
pusha
leave
hlt
mov
test
daa
push
xchg
enter
push
mov
mul
ja
iret
xchg
push
mov
repnz
mov
xor
aad
push
mov
jnp
sub
arpl
xor
xchg
push
(bad)
scas
or
xor
pop
out
fdiv
dec
pop
shl
dec
dec
mov
push
mov
das
mov
cmp
daa
inc
into
cli
jns
push
inc
inc
sbb
ins
xor
out
(bad)
jno
inc
xchg
aam
xchg
popa
add
adc
retf
or
bound
shl
sar
shl
jno
scas
and
jne
and
xchg
js
aam
dec
cwde
dec
mov
mov
mov
jg
pop
xchg
mov
or
out
sbb
or
movs
adc
xor
int3
outs
dec
sbb
js
sbb
xor
aad
push
(bad)
scas
lock
rcr
mov
cmp
xor
mov
cmp
dec
and
mov
jns
call
xlat
aas
aam
fsub
or
push
mov
mov
(bad)
jmp
push
movs
push
dec
jbe
je
xor
mov
push
dec
call
out
or
mov
fcom
adc
add
cdq
out
cmc
cmps
xor
mov
leave
lods
push
and
xchg
and
jle
fdiv
sbb
mov
sub
les
pop
jbe
imul
jb
(bad)
cmp
mov
or
sub
lods
jo
push
shr
add
or
mov
cmp
xchg
or
bound
mov
or
outs
inc
sbb
dec
and
hlt
xor
loop
pop
aam
pop
fnstcw
repz
dec
jle
and
adc
jns
sub
leave
(bad)
popa
fbld
loop
lock
mov
inc
add
out
test
fistp
cmp
out
xor
std
mov
outs
loopne
and
and
dec
mov
pop
out
push
mov
pop
stc
js
imul
sti
dec
sbb
sub
clc
imul
imul
cld
pop
ss
int
cmp
arpl
scas
mov
retf
outs
jbe
mov
(bad)
pop
jg
ret
outs
mov
sti
push
push
pop
call
(bad)
leave
pop
dec
sub
inc
and
fs
pop
cmp
and
std
push
mov
mov
not
lods
mov
sbb
test
arpl
sbb
mov
or
scas
push
adc
repnz
xchg
mov
xchg
jns
pop
and
loope
sbb
adc
lock
add
fadd
cmps
xor
pop
lahf
push
and
dec
inc
push
fucomp
mov
push
and
sub
dec
ret
ja
pop
cmp
inc
mov
inc
aad
dec
pop
aam
test
in
mov
popa
jmp
pop
lods
dec
jge
mov
dec
and
pop
pop
lahf
fidivr
mov
outs
jmp
cmp
xlat
push
pop
mov
cmp
stos
lock
mov
dec
mov
bound
ret
jb
mov
out
je
mov
imul
push
sahf
push
jbe
cld
iret
pop
mov
sub
mov
dec
fucomip
out
mov
nop
adc
idiv
push
sbb
in
sbb
push
or
(bad)
popa
repnz
popa
fs
mov
mov
jge
adc
xchg
jg
jno
call
xchg
aas
call
dec
sub
mov
mov
and
jecxz
jne
cmp
xchg
sub
mov
je
nop
push
loope
stc
xor
bound
or
into
aas
call
js
in
leave
xor
enter
xchg
mov
in
xchg
mov
leave
bound
aam
mov
jb
cli
sti
test
stos
pop
inc
push
enter
or
das
mov
mov
xchg
in
and
fs
sbb
lahf
popa
cmps
mov
mov
inc
mov
push
mov
fdiv
jbe
hlt
mov
mov
(bad)
inc
js
cdq
adc
stos
add
push
mov
adc
std
outs
movs
mov
mov
or
xchg
mov
out
push
ins
jne
ds
jmp
imul
xor
in
mul
rcr
loopne
pushf
or
xchg
hlt
fld
retf
iret
cmp
mov
pop
jnp
dec
inc
cld
mov
ficomp
mov
call
div
imul
mov
clc
xchg
leave
push
scas
cli
sbb
mov
retf
and
xor
gs
sub
aam
fbld
add
sahf
pop
push
xor
mov
ds
sub
sbb
cmp
test
ret
nop
out
and
movs
push
pop
push
dec
fs
(bad)
jno
in
out
pop
call
mov
push
or
cmp
xor
xor
pop
cmp
dec
nop
idiv
cs
sub
cmc
leave
mov
fcom
jg
dec
mov
out
(bad)
xchg
adc
pop
arpl
ret
pop
xchg
(bad)
mov
test
leave
dec
div
fdivr
out
leave
pop
pop
xlat
jmp
out
retf
dec
mov
sbb
ret
mov
mov
sub
dec
cmp
ror
cld
add
out
sar
mov
ror
jecxz
sub
in
(bad)
(bad)
push
push
adc
fs
pop
jb
adc
shr
ret
test
stos
lock
adc
aad
jb
inc
fidivr
pop
mov
pop
push
push
(bad)
pop
cmp
(bad)
fwait
xchg
scas
div
stos
jnp
and
jo
fs
add
dec
call
call
sbb
out
pusha
ret
sbb
(bad)
adc
es
and
fsubr
dec
cwde
push
(bad)
bound
imul
rcr
(bad)
xchg
call
jbe
out
outs
pop
dec
int
xor
imul
mov
in
cmp
pop
jecxz
daa
pushf
mov
out
adc
xchg
(bad)
cmc
popf
cmp
je
pop
das
repnz
in
dec
ins
dec
xchg
sub
jge
test
push
sti
jmp
scas
pop
(bad)
ja
mov
pop
xchg
cmp
aas
or
xchg
popa
ret
jl
stos
ds
mov
dec
add
ins
loopne
icebp
cmps
cdq
(bad)
xchg
sub
mov
and
in
and
cmp
or
test
out
retf
pop
ret
retf
fisttp
mov
dec
enter
gs
inc
lahf
xchg
outs
fcomp
bound
int
or
fcom
jmp
xchg
add
adc
cmp
push
ja
test
test
mov
sub
sub
or
retf
adc
inc
test
and
lods
clc
das
bound
mov
mov
push
sbb
dec
jl
das
lds
mov
out
popf
mov
jmp
push
mov
jle
lds
xor
dec
es
jbe
ret
jl
push
adc
rol
call
retf
(bad)
inc
in
and
hlt
or
push
inc
aad
mov
das
ja
pop
ins
fucom
mov
out
test
dec
int
lahf
pusha
mov
push
xchg
test
aam
(bad)
stc
fcomi
jl
into
push
inc
enter
jle
loopne
cmps
aaa
mov
rol
xor
iret
inc
mov
adc
or
out
lds
sub
pop
push
loope
jmp
ret
mov
in
jl
mov
inc
adc
cmc
sub
inc
data16
adc
out
mov
jo
shl
lods
mov
xchg
pop
(bad)
sub
xor
dec
mov
pop
lahf
jmp
adc
xor
out
xor
repnz
add
jg
pop
xchg
add
jmp
cld
jmp
add
mov
cld
je
jb
xor
xchg
fsubr
daa
or
std
xor
add
sahf
xor
idiv
mov
les
ss
in
fcmovne
jg
xor
or
xchg
fdiv
adc
push
icebp
int3
dec
out
into
add
adc
inc
push
xor
xchg
into
dec
popf
les
mov
xchg
fmul
loopne
(bad)
and
jge
nop
push
icebp
fsubr
push
sbb
popa
xchg
push
retf
leave
mov
bound
(bad)
sbb
cmp
div
xor
rol
adc
clc
div
mov
jo
xor
pop
ror
push
sbb
pop
sti
push
imul
scas
cmp
stc
pop
push
dec
call
les
and
fld
aad
adc
ja
pop
out
pop
sbb
push
stos
stos
inc
stos
mov
add
push
mov
cdq
xor
fld
lods
cdq
nop
or
sbb
sahf
add
adc
mov
jl
cmp
or
mov
jmp
dec
mov
xchg
sub
(bad)
cmp
in
dec
(bad)
jecxz
cli
daa
cmp
gs
mov
stc
jecxz
cmp
or
jbe
mov
mov
and
push
test
clc
repz
mov
and
add
call
shl
inc
mov
aaa
jo
mov
mov
popa
mov
movs
xchg
inc
mov
cmp
sbb
jg
jae
(bad)
jg
popa
pop
and
adc
inc
jecxz
and
sub
test
lods
icebp
data16
addr16
jmp
and
cld
stos
and
mov
ins
adc
inc
jo
push
(bad)
mov
jo
daa
mov
js
es
jmp
enter
or
sahf
fptan
sahf
cmp
or
xlat
xor
test
repz
xlat
in
bound
inc
aad
xchg
cmps
in
or
add
xchg
pop
mov
mov
iret
in
popf
ja
xchg
fnstcw
xchg
stos
lods
mov
pop
mov
pop
xor
shl
outs
(bad)
mov
dec
pop
stos
and
hlt
test
stc
sub
cmp
and
enter
test
cmps
push
inc
call
outs
ret
rcl
std
fimul
sbb
mov
es
dec
aaa
inc
dec
mov
cvtps2pi
aam
jge
push
(bad)
sqrtps
pushf
test
enter
ror
repz
pusha
pop
or
mov
push
daa
mov
stos
pop
jae
jecxz
(bad)
into
ds
lds
movs
into
rol
test
outs
xchg
pop
push
sbb
je
sub
pushf
xchg
push
xchg
dec
sub
scas
(bad)
jns
cmp
shl
mov
push
pusha
pop
out
jmp
push
cld
shl
jno
je
mov
fs
jg
sub
outs
push
imul
daa
pop
dec
das
sub
test
push
sub
out
jno
outs
repnz
jg
movs
mov
stc
push
aam
sahf
mov
(bad)
int3
inc
add
outs
icebp
fidiv
mov
sub
daa
popf
(bad)
mov
mov
(bad)
pop
jnp
push
or
out
dec
jmp
cmp
add
out
jecxz
aas
out
daa
iret
aaa
(bad)
dec
inc
dec
cmps
or
pop
xchg
mov
movs
sahf
add
aaa
cmp
cmp
or
or
lods
or
popa
cs
adc
scas
(bad)
xor
lods
and
dec
fcom
je
fnstenv
and
pusha
fisttp
ret
mov
and
shl
pop
mov
test
xchg
jo
add
out
jo
fs
add
inc
mov
(bad)
outs
jmp
imul
push
mov
push
jne
mov
dec
mov
xchg
mov
loopne
stos
clc
stc
imul
rcl
pop
xor
sar
xchg
(bad)
or
rcl
pop
add
fild
popa
fdiv
xor
int
sbb
mov
inc
aad
arpl
jmp
mov
or
pop
or
or
cwde
or
in
retf
mov
rcl
(bad)
cdq
loope
dec
inc
push
pop
les
add
mov
push
stos
mov
mov
sbb
mov
in
mov
push
shr
add
jle
call
in
cmp
mov
cld
iret
pop
mov
loop
jmp
pop
sar
mov
into
inc
enter
data16
cmp
sar
sbb
loop
test
jg
push
sub
or
jb
sub
and
shl
xor
fsubr
cmp
push
jb
out
mov
add
scas
es
les
jl
add
ret
cmc
ret
dec
cmc
out
arpl
out
pop
sahf
leave
sub
loope
sbb
or
mov
cmps
call
mov
jmp
push
repz
or
int
xchg
mov
push
call
cmp
add
pop
out
(bad)
loopne
pop
pusha
retf
loopne
dec
not
jle
xor
jne
setnp
xchg
out
test
add
jl
xor
aam
hlt
push
in
pop
xchg
mov
push
ror
jnp
fidiv
out
fimul
mov
sub
mov
jns
call
push
dec
lea
and
out
and
aad
(bad)
jmp
stos
fstp
iret
cmp
lods
retf
scas
push
js
jno
push
int
jg
jl
pop
sub
addr16
es
pop
jns
push
ret
inc
out
adc
lods
aad
dec
out
lea
mov
mov
jp
push
loopne
lea
mov
rol
pop
xor
hlt
hlt
add
push
xchg
cmp
sbb
jb
loop
popa
mov
xor
scas
test
lods
mov
fsub
inc
aad
mov
stos
test
add
out
xor
retf
sar
jo
and
gs
jle
inc
xlat
sbb
arpl
aaa
data16
mov
mov
add
rol
(bad)
jg
stc
fstp
jmp
stc
fld
jmp
in
adc
dec
(bad)
stos
dec
int3
jp
es
jp
sub
fdivr
jno
rcl
xchg
movs
inc
or
cdq
xor
stc
inc
ret
(bad)
mov
mov
mov
(bad)
and
icebp
test
mov
rol
js
xchg
push
call
cmp
cli
test
sbb
pop
add
lock
mov
mov
xchg
rol
stos
xchg
repnz
mov
pop
adc
clc
popa
aas
cmps
sahf
mov
gs
push
mov
popf
lock
push
add
scas
neg
mov
js
sbb
nop
adc
scas
dec
or
pop
sbb
jae
xchg
pop
ins
stos
je
push
dec
ret
jge
lea
int
rcr
sub
jo
call
movs
mov
rcr
ss
push
and
xor
sub
mov
stos
xchg
test
std
sbb
jle
ds
pop
cmps
in
mov
push
xchg
or
cli
mov
jae
loope
push
jle
inc
ret
xor
sub
push
shr
mov
test
mov
cli
xlat
xor
(bad)
pop
and
shl
inc
adc
(bad)
daa
mov
aad
mov
test
push
xor
ja
movs
enter
test
iret
cmps
or
xor
popf
inc
mov
cmp
jmp
xchg
ja
add
push
rcl
dec
sbb
inc
add
ins
cs
jp
jne
int
cs
daa
(bad)
out
pop
leave
add
arpl
(bad)
cmp
or
dec
mov
jl
inc
jne
stos
ins
add
retf
ror
call
dec
adc
jecxz
mov
enter
daa
arpl
or
js
mov
pop
inc
loopne
push
xchg
addr16
ins
mov
mov
xchg
add
xor
xor
sti
fs
shl
call
shl
test
dec
nop
push
retf
mov
inc
push
ret
test
iret
(bad)
adc
dec
pop
mov
fwait
and
sub
cld
jle
dec
mov
lock
cmp
or
inc
fcomp
daa
scas
or
mov
xchg
sbb
pushf
sbb
mov
xchg
add
xchg
or
(bad)
movs
mov
sbb
call
retf
test
jle
pop
clc
out
(bad)
push
lock
and
mov
loope
movs
xchg
sbb
add
les
clc
call
leave
cmps
stos
jns
add
sbb
mov
lock
add
(bad)
sbb
arpl
jb
addr16
jns
jne
nop
lock
cmp
mov
shr
and
add
hlt
jg
lods
je
mov
int
outs
jl
mov
dec
ret
pop
imul
and
mov
pop
outs
or
xchg
pop
pop
les
sti
mov
cmp
lahf
ror
dec
int3
push
push
test
pop
mov
pusha
cmp
mov
mov
aas
adc
mov
fldcw
cmp
movs
jb
add
cld
lods
sahf
mov
scas
call
push
loopne
mov
repnz
cmp
jo
stos
es
(bad)
popa
fistp
jle
out
ficom
in
xchg
dec
lds
es
popf
movs
arpl
pusha
outs
ror
mov
test
mov
stos
cwde
cmp
pop
jno
pop
pop
mov
mov
cmp
loope
push
jecxz
call
sbb
or
sbb
sbb
cs
push
pop
mov
dec
sub
in
outs
imul
sahf
call
xchg
sbb
in
clc
ret
cmp
fld
and
popf
aaa
call
jne
add
or
mov
mov
(bad)
inc
inc
jg
xchg
ins
ins
rol
neg
xchg
dec
sar
dec
iret
sbb
push
nop
dec
call
aad
addr16
call
xchg
and
loopne
and
shl
repz
mov
jo
es
dec
aad
addr16
mov
repnz
ds
add
cmp
sbb
shl
cmp
movs
sbb
jo
or
and
stc
and
loope
fistp
clc
imul
cld
aaa
repnz
lsl
push
adc
add
pop
int
lock
hlt
ret
in
adc
fisttp
or
sahf
sbb
add
out
mov
xchg
les
(bad)
mov
vdivpd
fidiv
stc
(bad)
cli
pop
push
popa
mov
out
(bad)
push
in
inc
cmp
loope
faddp
test
fs
ret
cmps
jmp
(bad)
(bad)
inc
imul
scas
sbb
popa
js
das
dec
or
in
mov
jae
lahf
enter
jnp
aad
add
mov
lea
leave
dec
pop
lods
repz
dec
aas
stos
lods
pop
mov
and
sar
mov
popa
call
stc
jbe
dec
mov
or
jnp
sbb
cmps
fld
int3
stos
ret
out
hlt
ret
xor
dec
xchg
bnd
dec
cmc
outs
pop
sub
sbb
cs
adc
(bad)
jge
push
test
(bad)
je
sub
aam
dec
ja
adc
ror
lock
adc
cmp
xchg
aam
inc
jns
test
add
enter
mov
aas
jbe
data16
adc
xor
lods
mov
int3
and
int
retf
outs
in
xor
mov
push
xor
ja
ror
(bad)
push
std
jmp
pop
or
and
or
cmp
fsub
mov
fadd
push
sub
retf
mov
cmp
mov
(bad)
cmp
jg
add
adc
push
fiadd
or
les
push
iret
enter
pop
xchg
enter
xchg
adc
sbb
lahf
mov
xchg
ffreep
mov
jne
ins
outs
dec
lds
and
test
pop
and
sahf
ret
push
int
and
pop
xor
sbb
pop
stos
std
jnp
push
adc
sub
sahf
mov
jmp
fidivr
ret
pop
ss
ja
add
xchg
inc
xor
and
mov
inc
fistp
sbb
or
sbb
js
shl
mov
fimul
mov
scas
xchg
aas
jns
aaa
call
inc
add
xor
sub
icebp
leave
loopne
push
cmps
xchg
movs
dec
in
adc
loop
dec
inc
(bad)
rol
retf
push
test
cli
mov
xor
xchg
or
ins
and
ret
add
js
test
dec
ror
push
pop
outs
je
xlat
adc
sub
lea
jb
dec
fcomp
pop
mov
mov
cld
mov
loop
(bad)
stos
idiv
mov
dec
movs
mov
jecxz
cmp
pop
and
test
lods
mov
cmp
push
call
fiadd
xor
imul
bound
shr
out
sti
sbb
adc
nop
out
hlt
mov
pop
add
sub
fldcw
rcr
dec
mov
stc
pop
scas
sbb
dec
jecxz
movs
mov
imul
outs
pop
sub
cmps
sub
hlt
jae
test
jge
in
setge
push
es
out
mov
or
pop
fwait
sbb
sub
scas
inc
(bad)
in
xchg
xor
adc
cmp
add
mov
jae
out
out
pop
inc
sub
loope
cmps
cdq
adc
js
xchg
lock
and
push
shl
sbb
scas
mov
xlat
fldcw
add
jle
enter
or
pop
outs
dec
push
daa
scas
imul
mov
out
mov
mov
dec
aad
test
jae
fmul
fs
imul
adc
pop
bound
stos
adc
movlps
test
push
stos
push
push
pop
aam
retf
lahf
cwde
mov
mov
(bad)
xchg
xchg
lods
xor
mov
retf
push
mov
sub
mov
scas
cmps
jg
rcr
movs
mov
xchg
test
dec
stos
adc
mov
ins
xlat
mov
sub
inc
pop
ja
fwait
repnz
mov
addr16
idiv
mov
mov
sub
in
stos
cli
int3
mov
leave
add
jae
inc
shl
nop
cmc
xor
cmp
rcr
ja
mov
outs
xor
leave
add
push
test
fild
and
sub
xchg
sub
ins
or
mov
rcr
pusha
pop
and
adc
mov
out
(bad)
enter
pusha
in
dec
mov
sbb
int3
popa
loop
stos
push
mov
out
je
popf
fimul
inc
rcr
mov
neg
mov
sbb
fstp
loop
daa
cmp
(bad)
dec
outs
(bad)
pop
dec
movs
adc
mov
add
hlt
stos
jo
jbe
xlat
jmp
pop
out
and
mov
or
jl
(bad)
lahf
fnsave
push
outs
cwde
vshufps
hlt
dec
pop
cmp
jns
pop
dec
pop
cmps
(bad)
clc
inc
imul
int
sub
frstor
aam
icebp
jb
ja
push
mov
jl
inc
hlt
push
mov
jecxz
mov
xchg
cmp
lods
mov
and
push
stos
maskmovq
div
or
jb
pop
dec
push
inc
in
sbb
sbb
shl
nop
(bad)
es
loop
mov
sbb
adc
ss
adc
cmp
pop
adc
xor
pop
sti
in
pop
and
gs
movs
shr
ret
and
inc
sahf
add
mov
into
push
jg
loopne
pusha
xchg
stos
jp
jbe
sbb
or
call
add
clc
and
(bad)
jae
int3
repnz
add
or
add
mov
pusha
mov
aad
test
bound
sub
stc
and
add
rcl
add
outs
jge
loope
cli
cdq
adc
test
cmp
push
dec
mov
jae
mov
std
int3
fsub
mov
add
mov
jmp
(bad)
push
outs
xor
mov
es
rol
dec
call
push
and
movs
adc
lea
cmp
test
scas
call
mov
les
std
sbb
inc
outs
add
and
repnz
inc
int
scas
mov
jg
dec
push
out
dec
mov
lods
stc
daa
jno
rcr
dec
or
cs
push
sbb
outs
pop
mov
adc
mov
cmp
std
int
push
test
sbb
push
inc
cs
loopne
mov
cmp
lods
enter
(bad)
imul
or
jb
int3
push
shl
cmps
and
stc
mov
fst
adc
aas
test
jne
and
lods
and
mov
fadd
ds
mov
jmp
jae
ds
out
outs
cwde
ins
inc
outs
inc
cmp
adc
pusha
int
push
push
aam
sbb
inc
pop
pop
fild
adc
lds
adc
add
addr16
or
(bad)
sbb
push
pop
dec
adc
mov
jns
xor
shl
xlat
push
mov
cs
mov
mov
jl
dec
(bad)
fs
sub
imul
lods
add
xor
mov
gs
daa
cs
xor
rcr
retf
jns
xchg
add
push
loope
movs
ret
cmp
sbb
lea
je
lods
ror
or
call
(bad)
lahf
fisub
es
mov
rol
or
ror
sub
xor
xor
push
dec
test
ins
push
rcl
addr16
mov
mov
jns
dec
stos
cmp
mov
pop
push
inc
mul
rol
fs
add
or
mov
aas
xchg
fimul
mov
sub
es
pop
xor
or
cwde
add
std
outs
popf
mov
jl
pop
aam
ja
dec
(bad)
(bad)
xchg
jne
or
shr
jne
xor
lods
adc
jg
jecxz
pop
fnstcw
imul
sbb
or
(bad)
xchg
mov
xor
xchg
push
add
or
mov
inc
mov
dec
add
pop
jnp
ds
xor
cmp
repz
push
add
mov
in
retf
out
mov
retf
cli
cmps
nop
push
pop
pop
js
xchg
pop
rcr
shl
sahf
ror
iret
leave
stc
dec
aam
movs
fadd
call
outs
call
sub
cmp
mov
mov
int
xchg
fnstenv
rol
inc
cs
outs
jmp
cmps
sbb
jns
cli
rcl
pop
das
adc
out
loope
push
add
add
or
push
push
dec
add
outs
or
push
xor
mov
ret
push
loopne
add
cmp
les
fld
inc
inc
push
dec
es
and
and
test
cwde
push
xchg
xor
sub
mov
xchg
dec
jmp
sub
sbb
test
int3
sub
aas
or
jno
fimul
mov
popa
adc
shl
mov
mov
(bad)
gs
and
add
lock
popa
and
ret
aas
into
push
sti
and
xchg
shl
std
fnstcw
loope
ficomp
adc
pushf
and
dec
ins
sbb
ret
es
xor
nop
pusha
aam
jbe
cli
cwde
jno
pop
fldcw
pop
add
pop
or
imul
lahf
(bad)
mov
sbb
jecxz
scas
sub
cmp
out
cld
push
xor
mov
pop
xlat
push
daa
push
mov
xchg
push
jns
fisub
nop
xchg
lahf
lods
mov
hlt
mov
pop
jne
into
jl
mov
mov
test
loopne
dec
loopne
out
jae
cmp
add
iret
mov
into
mov
push
fisubr
pop
fs
xchg
xor
aaa
in
dec
(bad)
aas
jns
dec
fdivr
xchg
fld1
or
and
(bad)
jns
cmp
jp
push
inc
jb
(bad)
jae
mov
loop
out
cmps
pop
dec
mov
into
rcl
call
dec
xor
cmps
int
jns
pop
and
mov
mov
rcr
ins
push
clc
adc
or
xchg
jo
cmc
xlat
xchg
sub
and
out
(bad)
push
add
xchg
or
xchg
sar
sub
dec
(bad)
gs
js
mov
adc
arpl
aam
inc
das
mov
push
cmp
pop
fisubr
mov
mov
pop
jmp
mov
xor
ds
aad
shl
inc
pop
xchg
xchg
adc
sbb
add
pop
push
jo
mov
int3
mov
imul
test
pushf
into
and
adc
mov
pop
in
and
sahf
add
call
mov
in
sbb
dec
inc
add
std
sub
sbb
int3
lods
mov
dec
mov
add
mov
push
mov
pusha
sbb
(bad)
lds
retf
or
imul
mov
push
mov
bound
add
call
mov
es
stos
in
cmp
ss
mov
das
(bad)
jge
add
out
adc
cmp
xchg
out
xchg
dec
icebp
and
mov
test
and
ficom
xchg
adc
lock
sub
sahf
aam
pop
and
add
cwde
lods
out
nop
in
or
jl
xor
scas
add
and
test
in
add
xchg
test
fucomi
sbb
cmp
mov
mov
push
adc
pushf
mov
or
mov
mov
cmp
nop
xchg
cmp
pop
daa
sbb
das
xor
div
inc
rcl
mov
cmp
xor
ret
lods
and
clc
xchg
dec
bswap
mov
sub
pop
ror
test
mov
hlt
hlt
cmp
rol
bound
lea
sti
push
loop
push
adc
xor
fsubr
gs
pop
mov
inc
popf
push
call
jmp
mov
cli
mov
aaa
dec
rcl
adc
cmp
ins
fyl2xp1
xor
and
std
pop
and
mov
push
ss
push
adc
mov
mov
clc
fwait
pop
in
pop
repz
movs
mov
inc
push
xchg
fwait
and
push
xor
shl
ja
add
mov
fist
and
xor
sub
jecxz
fstp
mov
ret
call
and
mov
outs
lods
push
inc
sbb
pop
sti
cmp
lods
and
in
test
dec
xlat
pop
mov
ins
xchg
sub
and
push
outs
lds
push
repnz
loop
adc
in
test
mov
cwde
pop
sub
outs
in
and
jae
inc
test
adc
cmp
add
jae
dec
gs
pushf
pop
test
stc
mov
cmp
xor
push
lock
xchg
rcr
inc
xchg
add
and
push
or
pop
rcr
add
xor
sub
enter
addr16
pop
and
pop
(bad)
test
data16
in
sar
lahf
add
enter
sahf
ss
cld
es
cmp
lea
ins
mov
add
(bad)
sub
pop
push
add
ins
or
(bad)
stc
ret
movs
cmps
and
lea
stos
movs
shl
in
xor
adc
je
inc
xchg
lock
push
xchg
xor
int
push
sub
xor
xchg
add
dec
std
mov
xor
ret
add
ins
or
xchg
je
and
mov
cld
jge
loope
pop
hlt
sub
xor
mov
les
jmp
push
push
xchg
jne
shl
stc
xchg
mov
dec
loop
dec
add
cwde
mov
cmps
scas
mov
nop
or
mov
ss
jge
xor
clc
mov
fisub
and
and
adc
retf
int3
xchg
xor
in
cli
retf
xchg
clc
cli
iret
dec
cmp
jl
into
inc
and
jmp
xor
(bad)
fwait
cmps
fnstsw
pop
ror
jg
lock
lods
cmp
pop
pushf
push
mov
mov
jg
and
cdq
mov
mov
jmp
push
cmp
pop
sub
push
ret
fild
cli
test
pop
ins
adc
sbb
fs
or
lea
das
fcom
ins
mov
jl
shl
add
mov
add
jg
pop
es
adc
retf
or
sbb
pop
jae
or
fwait
shl
dec
shr
and
out
xor
mov
inc
add
nop
pop
int3
cdq
or
xchg
xor
adc
and
sbb
add
in
int3
js
dec
cdq
adc
jg
xor
adc
popw
(bad)
jl
data16
jecxz
mov
push
(bad)
in
cwde
js
push
xchg
loop
xlat
(bad)
popa
xchg
jmp
cmp
push
ror
test
ins
dec
jmp
hlt
loopne
iret
pop
das
and
pop
sbb
cmp
pop
sbb
test
stos
inc
jb
rcl
and
mov
mov
cmc
xchg
data16
and
(bad)
es
in
mov
fldpi
xchg
dec
jmp
movs
stos
dec
pop
in
pop
pushf
jo
jns
mov
punpckhdq
mov
jecxz
adc
xor
(bad)
cmp
xor
fcmovu
mov
enter
add
sbb
adc
add
(bad)
mov
or
outs
fsub
or
cmps
test
mov
mov
adc
fisubr
into
movs
aad
sbb
mov
mov
cmp
scas
lock
repnz
xor
adc
shr
test
iret
jb
addr16
or
fiadd
lock
sbb
in
and
xchg
add
vsqrtss
add
jno
sbb
or
mov
mov
add
push
rcl
movs
in
mov
(bad)
loopne
std
pop
inc
push
dec
push
movs
add
call
sub
jnp
addr16
aas
fsubr
cmps
lods
repz
iret
rcl
mov
xchg
mov
add
mov
gs
js
out
pop
push
mov
jo
pop
inc
push
xchg
(bad)
dec
das
cmp
cmps
push
daa
cmp
jne
inc
sbb
(bad)
test
clc
cmps
sbb
push
pop
lahf
sub
dec
cmp
sub
sbb
aam
or
lea
(bad)
aas
ss
adc
rcr
jns
mov
imul
loop
int
ret
popf
jne
dec
repnz
std
arpl
in
in
mov
push
repz
push
or
push
xor
add
into
pusha
pop
xor
dec
popf
test
mov
jmp
imul
dec
aas
test
sbb
sub
sub
int
das
jns
inc
ror
outs
adc
ret
(bad)
jns
cdq
ins
xor
inc
mov
and
fisttp
(bad)
(bad)
adc
imul
sbb
aaa
mov
ja
retf
popf
(bad)
sahf
std
test
movs
jg
sub
lock
icebp
aas
sbb
aam
addr16
or
xchg
test
pop
(bad)
leave
mov
loopne
scas
retf
movs
imul
inc
lods
inc
(bad)
jno
xor
ret
dec
mov
dec
cwde
jle
test
ins
pop
(bad)
shr
pushf
or
dec
or
dec
adc
and
in
popf
dec
lahf
das
(bad)
scas
cmp
gs
cmc
sub
add
fild
and
and
aad
leave
(bad)
cs
(bad)
into
push
lods
push
pop
push
cld
neg
cmp
adc
pop
or
movs
pop
retf
pop
pop
xchg
ss
lods
scas
mov
ret
add
imul
cmp
and
ja
or
pop
in
add
cmp
or
mov
inc
sbb
xchg
sbb
outs
lea
stc
aam
dec
and
movs
faddp
test
sbb
dec
sub
sbb
out
cli
call
out
cld
mov
aaa
sbb
push
xchg
dec
movs
out
imul
xor
(bad)
repz
pop
shr
or
dec
cmp
inc
mov
add
icebp
cmp
xchg
iret
mov
mov
cld
aad
daa
xor
and
push
xor
mov
or
push
in
fsub
sub
call
sub
call
or
dec
jle
xor
cs
(bad)
sti
pop
pop
les
in
ins
cmc
ret
repz
cmp
push
std
and
ins
test
clc
adc
jg
movs
aas
out
mov
pop
idiv
sbb
jmp
sub
mov
rcl
test
sub
jb
rol
jp
ins
pop
test
arpl
inc
repz
xor
cmps
dec
pop
jno
push
sub
xor
mov
mov
add
cmp
ins
xchg
push
sbb
stc
mov
hlt
fcmovne
xchg
test
and
push
dec
in
sub
arpl
popf
pop
pop
hlt
xchg
in
outs
test
(bad)
sbb
outs
(bad)
and
das
mov
test
mov
pop
aaa
inc
pop
cmp
mov
pop
int
icebp
(bad)
shr
pop
icebp
push
inc
pop
hlt
ret
mov
jge
mov
(bad)
jmp
outs
inc
lds
add
xchg
mov
addr16
cwde
sahf
mov
out
sub
mov
aas
adc
cmp
shl
sub
cld
rol
cmp
pextrw
mov
shl
add
lahf
xchg
mul
sub
sub
push
push
pushf
out
icebp
add
out
pop
cmp
das
imul
and
jl
push
dec
cmp
or
mov
sbb
(bad)
push
inc
shl
add
pop
test
icebp
retf
sbb
ja
(bad)
data16
mov
and
dec
push
lods
xchg
movs
int
retf
imul
xlat
add
ja
inc
int
pop
push
scas
mov
cmp
xor
dec
sbb
inc
sbb
mov
push
out
dec
loop
push
retf
inc
sti
xchg
jmp
(bad)
pusha
(bad)
pop
push
gs
push
sub
and
mov
push
ins
enter
sahf
es
jge
es
int
ds
sbb
inc
or
mov
ror
sbb
push
nop
xor
xlat
inc
mov
mov
inc
ins
mov
sub
test
sub
or
mov
sbb
cmp
aam
and
inc
jle
dec
jmp
pop
adc
int
in
pop
jl
lock
jge
jl
sbb
and
cmps
nop
or
enter
icebp
inc
popa
ins
jb
test
cmp
test
fwait
pop
pop
dec
(bad)
loop
xchg
cld
jne
xchg
stc
inc
mov
(bad)
movs
push
jl
pop
cld
push
stc
or
out
push
cmp
mov
test
pusha
and
sti
xor
mov
and
shl
jbe
and
adc
inc
mov
pop
cmp
iret
jmp
icebp
add
xor
jp
inc
stos
fnstsw
dec
inc
rol
jecxz
pushf
retf
popf
pop
cmc
jecxz
jp
ret
push
xchg
enter
bound
jle
push
retf
imul
adc
fdiv
dec
shl
jg
arpl
xchg
mov
jnp
xor
sbb
and
push
in
sbb
(bad)
sbb
rcl
or
pop
jbe
push
test
adc
push
jecxz
popf
xchg
mov
pop
iret
jmp
pop
fstp
inc
jmp
pop
pop
ret
pop
rcr
jg
sbb
dec
test
or
enter
mov
jge
mov
aad
mov
ins
shl
jmp
and
sub
xchg
and
jge
ins
pop
outs
pop
pusha
mov
shl
rol
add
sub
dec
jmp
movq
or
int
jle
mov
mov
pop
adc
imul
jecxz
ret
mov
inc
(bad)
cli
fxtract
cmps
adc
out
sbb
or
jge
push
int
add
inc
dec
and
lods
push
cmp
(bad)
scas
stos
(bad)
lods
add
pop
stc
dec
loopne
mov
mov
mov
xchg
cmc
dec
pop
sub
(bad)
mov
mov
rol
(bad)
xor
jge
xor
mov
jg
jg
(bad)
(bad)
jo
push
jnp
mov
push
mov
add
adc
in
shl
in
sbb
jp
fnstcw
fcmove
call
aas
fstp
jbe
mov
daa
lea
xchg
push
jo
push
push
push
mov
ror
aam
add
out
mov
inc
push
jmp
dec
(bad)
in
pop
and
stos
test
jmp
aad
in
stc
movs
fild
cmp
inc
add
(bad)
dec
mov
pop
popa
push
fbld
sbb
inc
cld
mov
sahf
mov
ja
push
mov
pushf
or
cld
out
jecxz
movs
dec
(bad)
jb
pop
xchg
adc
jns
int
fucomp
dec
sbb
inc
xlat
stc
cdq
ret
in
adc
(bad)
loop
hlt
in
and
lahf
add
pop
loope
cmp
test
(bad)
push
xor
data16
jmp
sub
pop
aad
lahf
out
and
jp
cdq
cmp
mul
dec
jg
arpl
mov
adc
jne
cdq
mov
scas
xor
mov
ret
add
fstp
cmp
mov
inc
add
rcl
cdq
js
out
pop
mov
(bad)
std
inc
mov
aad
xor
jmp
sub
jbe
loop
or
bound
ins
cwde
out
cmps
jmp
push
sti
jae
xchg
movs
pop
ins
les
mov
and
adc
mov
cmc
sub
cmps
popa
jb
xchg
push
inc
inc
lock
jb
xchg
push
xor
jecxz
add
fidiv
(bad)
scas
push
pop
adc
arpl
ins
outs
sbb
push
mov
or
cmp
dec
imul
cmp
push
dec
les
out
je
jnp
cmp
pusha
jge
loope
xor
xor
rcl
dec
cmp
fsubr
dec
outs
push
clc
add
xchg
out
mov
es
daa
cmp
mov
fcom
aad
mov
ret
push
mov
mov
in
adc
dec
jle
xchg
adc
sbb
sahf
mov
(bad)
stc
(bad)
ror
test
or
mov
sbb
or
push
xchg
cmp
mov
in
fs
iret
popa
xchg
add
pop
loope
pop
xchg
retf
mov
inc
dec
mov
push
inc
call
jb
mov
fwait
push
and
jge
lahf
mov
and
adc
push
hlt
xor
push
pop
adc
fst
dec
fsub
arpl
cmps
mov
out
cdq
or
adc
cdq
jp
or
mov
lea
mov
or
mov
adc
pop
hlt
mov
push
pop
jle
es
pushf
sbb
inc
leave
rcr
sbb
inc
sub
cmp
icebp
push
or
iret
sbb
cmp
lods
jge
fmul
pusha
mov
mov
cmp
mov
mov
dec
(bad)
push
mov
test
(bad)
idiv
je
jno
inc
jecxz
xchg
inc
pop
stos
sub
loope
test
and
cmp
mov
add
jne
lods
loopne
sbb
mov
shl
push
cmp
and
(bad)
enter
mov
jo
sub
mov
push
nop
inc
rcr
popf
dec
mov
xlat
and
push
out
pop
dec
add
jb
pop
mov
ficomp
push
sub
cmp
xchg
pop
out
cmp
xchg
add
xchg
jo
jnp
call
test
mov
mov
push
cmp
out
iret
daa
shr
add
or
mov
push
fidiv
mov
stc
push
push
repnz
cwde
movs
push
pop
loopne
pop
cmp
ror
xchg
mov
or
aas
push
ja
shl
push
xchg
les
xor
test
stos
mov
into
shl
dec
mov
push
pusha
cdq
xlat
enter
inc
or
(bad)
xchg
shr
int
icebp
and
dec
jp
iret
sbb
rcl
out
sar
cmp
das
into
cmp
push
jne
inc
inc
adc
aas
mov
cmp
pop
ret
or
cmp
nop
sbb
fst
aad
imul
mov
pop
hlt
mov
cmp
sub
data16
cli
sbb
cld
cmp
cmp
inc
in
nop
ins
dec
mov
mov
mov
and
test
add
or
xor
push
int3
cs
call
loop
xchg
mov
fidiv
jmp
jle
in
into
scas
cmps
xor
fldenv
push
mov
scas
sti
sbb
repnz
add
dec
push
and
jae
mov
outs
or
leave
in
fisub
push
test
sbb
adc
jmp
dec
daa
pop
push
push
imul
push
pop
mov
data16
xchg
popa
inc
or
call
je
mov
pop
leave
xchg
cdq
aas
xchg
jp
mov
lods
or
scas
jg
xchg
lods
repz
add
fwait
adc
xlat
push
cli
lods
push
inc
pop
push
inc
lods
pop
ror
xor
push
nop
jno
mov
cmp
push
aas
and
add
dec
or
js
nop
(bad)
jmp
inc
fdiv
inc
ds
lods
dec
mov
fucomip
ror
sub
ds
xor
dec
cld
and
cmovne
movs
xchg
ss
inc
xchg
and
cmp
jle
mov
inc
ret
dec
jbe
or
jo
adc
and
cmc
fld
stos
inc
push
sub
out
loopne
mov
out
adc
ins
push
cmp
in
data16
ja
pop
sbb
retw
into
test
cmp
mov
arpl
and
sub
cmp
cdq
ds
jle
jp
sbb
ins
adc
push
aam
jp
jecxz
pop
nop
and
ins
sbb
push
dec
jo
pop
mov
mov
jmp
retf
pop
pop
xor
jne
mov
mov
mov
rcr
(bad)
sub
sbb
add
and
pop
mov
push
xor
mov
jg
cmp
loop
sbb
dec
sub
lods
sbb
test
cmc
jnp
ss
leave
aam
add
fcomip
(bad)
out
enter
xor
leave
pop
jae
cmc
out
fwait
mov
dec
(bad)
div
mov
shl
nop
and
adc
xchg
mov
inc
jbe
jecxz
sbb
push
pop
cmp
sub
pop
add
inc
jp
push
adc
loopne
or
sub
(bad)
or
pop
ret
les
arpl
cmp
xchg
cmp
pop
shr
pop
sti
mov
push
sbb
pop
sti
sub
xchg
inc
aad
(bad)
mov
std
test
pop
adc
in
fs
sub
pop
xchg
dec
rcr
sbb
and
or
(bad)
fist
les
dec
xor
pop
jp
lea
(bad)
cwde
push
and
cmp
jg
ja
pop
xor
mov
and
lahf
outs
inc
push
mov
int
shr
fsub
pop
test
sub
or
or
xchg
xchg
in
fbld
push
or
cwde
xchg
mov
mov
or
xchg
jnp
ss
aaa
(bad)
mov
loopne
shl
adc
enter
jb
aad
adc
pushf
ror
and
pop
dec
add
icebp
(bad)
and
adc
add
mov
dec
jo
dec
mov
push
mov
xor
push
mov
mov
aad
cmp
sbb
sti
inc
or
xor
fst
jno
mov
in
inc
jecxz
ds
adc
std
mov
add
mov
es
and
xchg
jbe
lea
jmp
adc
hlt
cmps
adc
cli
jo
mov
enter
sahf
fs
push
lea
adc
push
mov
fucompp
jmp
adc
ds
adc
pop
xor
pop
ret
(bad)
aaa
out
sar
sbb
hlt
jno
hlt
mov
shl
mov
test
cmps
mov
ds
jnp
loop
jns
push
repz
loope
int3
add
push
pop
pop
or
scas
jb
xor
jmp
dec
lea
push
jge
jnp
adc
mov
lods
jne
dec
int3
mov
push
call
adc
dec
scas
(bad)
cli
fs
xor
lods
(bad)
aam
mov
add
lock
lahf
push
or
or
ret
int3
cmp
xchg
clc
loope
fcomp
cdq
in
mov
call
loope
imul
rol
cli
out
jecxz
xchg
repz
js
mov
icebp
or
aas
icebp
in
lahf
jb
push
sub
clc
aad
jmp
(bad)
ins
ja
xor
dec
pop
(bad)
cld
mov
push
jo
mov
dec
xor
sub
clc
cdq
repz
jle
cmp
pop
(bad)
ins
mov
and
call
fs
fild
jae
loopne
inc
(bad)
inc
push
jg
popa
enter
scas
push
mov
sub
xchg
mov
loop
outs
add
stc
mov
cmp
jb
mov
dec
jmp
shl
add
lea
ficom
rol
in
repz
ins
lock
mov
lahf
mov
mov
inc
and
sahf
retf
jb
dec
push
pop
sub
je
inc
push
push
add
aaa
stc
sbb
jle
sahf
mov
bound
fidivr
cmp
repz
push
jb
stos
xchg
mov
(bad)
hlt
xchg
cmp
imul
imul
test
test
xor
sbb
dec
add
xor
imul
push
push
(bad)
pop
les
std
dec
mov
sbb
or
movs
call
(bad)
jle
xchg
ret
(bad)
lods
js
and
jecxz
arpl
outs
xchg
test
movs
add
imul
mov
cwde
outs
xchg
stos
mov
stos
fisttp
sub
cli
ret
dec
add
call
or
jne
jnp
dec
cmp
add
xchg
retf
movs
xchg
and
int3
(bad)
pop
out
push
or
pop
out
mov
pop
test
mov
push
fbld
pop
xor
xchg
sub
ins
and
sub
retf
lea
cld
test
es
dec
je
xlat
arpl
div
push
jg
arpl
mov
xor
jae
jmp
bound
dec
push
lods
cmp
push
lahf
xchg
fbld
mov
mov
cmc
inc
stos
pop
xor
fadd
inc
lds
and
lea
sbb
imul
cli
test
or
jl
jmp
sbb
sub
and
sti
nop
jecxz
mov
jo
cmp
pushf
jp
mov
int
sub
jle
mov
xchg
sbb
je
adc
cmc
xchg
jb
dec
push
in
xchg
sub
pushf
hlt
xchg
pop
xchg
adc
not
push
lea
fisub
in
mov
cdq
aaa
xchg
sbb
cmp
int3
inc
ss
mov
shl
aas
cmps
jp
add
sub
shl
icebp
(bad)
cmp
mov
jns
stc
xor
jnp
cmc
sub
mov
cs
retf
sbb
fcmovnu
mov
mov
and
and
add
rol
add
adc
push
imul
jl
mov
inc
jnp
sub
sub
es
inc
inc
jns
inc
add
lods
xchg
popa
ret
in
mov
cmps
mov
mov
mov
xchg
(bad)
arpl
repnz
imul
and
out
inc
inc
adc
lds
mov
mov
pop
lahf
or
in
mov
repz
imul
mov
leave
push
mov
test
push
sub
lds
dec
shr
dec
retf
ins
mov
push
pop
fsubrp
test
dec
nop
dec
daa
xchg
and
aas
cmp
hlt
inc
hlt
aas
push
xchg
or
(bad)
mov
int3
jmp
mov
mov
loop
js
ficom
push
xchg
mov
mov
sub
jae
jb
xlat
adc
test
dec
sahf
push
movs
cwde
jnp
sub
mov
sbb
pusha
cmps
outs
and
xchg
sbb
sbb
mov
hlt
push
adc
mov
retf
or
mov
(bad)
or
sub
or
fst
mov
sahf
pop
cmp
rcl
fdivr
popa
ror
pop
and
aam
push
stos
retf
add
sub
jmp
push
in
cmps
or
mov
ror
in
xor
xchg
sbb
mov
mov
iret
enter
(bad)
aas
jmp
das
pop
mov
xchg
jnp
arpl
push
test
(bad)
and
adc
push
nop
popa
es
test
std
dec
lods
(bad)
and
clc
or
rcl
mov
jne
sbb
das
jae
in
inc
sahf
lods
fs
mov
xchg
int3
arpl
pop
ja
jg
aas
je
jmp
pop
aam
fs
or
cmp
push
inc
jg
scas
daa
jp
test
push
and
push
fldcw
or
dec
mov
retf
scas
fidiv
xchg
push
mov
sti
pop
mov
push
popf
inc
and
shl
dec
sub
or
xchg
inc
inc
es
jb
ret
pop
pop
xor
inc
and
inc
jg
arpl
jp
jmp
in
cli
mov
inc
stc
mov
bswap
adc
fs
xchg
mov
test
mov
into
lahf
shl
xor
sbb
pop
repz
add
inc
sub
imul
push
enter
add
sbb
aaa
pop
xchg
adc
(bad)
push
jbe
leave
cmp
lea
arpl
icebp
sub
jnp
cmp
adc
xor
or
jmp
cmps
mov
int
jbe
mov
and
daa
jns
xor
pop
add
inc
and
(bad)
mov
out
cmp
ss
sbb
cs
out
jns
aaa
lods
lahf
push
pop
mov
ins
jne
in
add
dec
push
into
inc
icebp
adc
mov
repnz
mov
in
test
jne
cmp
push
into
xchg
push
mov
pop
out
repz
out
pushf
and
sbb
in
xlat
loope
sbb
sbb
retf
pushf
jns
test
mov
push
(bad)
mov
xor
(bad)
pop
(bad)
jb
sub
cmp
inc
ja
cmc
fidivr
retf
cmps
in
scas
jp
push
adc
loope
jns
pop
sub
dec
xchg
or
sbb
std
push
dec
sbb
js
mov
daa
jb
xchg
mov
pop
add
cs
adc
mov
mov
int
test
mov
enter
call
rol
xchg
xchg
scas
pop
in
xor
mov
pop
xchg
sbb
ins
mov
lea
test
push
hlt
xor
dec
jae
or
dec
daa
lock
int
dec
mov
rol
out
pop
(bad)
ins
(bad)
outs
xor
jnp
mov
push
jb
call
arpl
sar
movs
lods
int
ins
and
aaa
push
push
(bad)
jg
pushf
clc
and
and
test
test
mov
pop
cmp
add
imul
ret
iret
mov
xor
repnz
lock
and
dec
cs
push
dec
ds
cwde
cmp
pusha
mov
aaa
inc
push
fiadd
pushf
xchg
(bad)
lahf
jne
push
cs
mov
int
xchg
aas
les
or
push
mov
fs
xor
dec
stc
mov
pop
sub
adc
mov
mov
sbb
sbb
jnp
cmp
push
mov
and
adc
out
ss
mov
jo
sbb
das
inc
sbb
adc
xchg
daa
xor
stos
pop
movs
sbb
das
cmp
xchg
sbb
add
mov
clc
dec
or
adc
cmps
aam
(bad)
shl
scas
cmps
sub
sti
dec
fwait
xchg
scas
sbb
push
es
sub
and
je
sbb
daa
inc
xchg
mov
cmps
mov
xchg
in
jle
mov
xchg
add
xor
in
les
(bad)
cli
hlt
mov
fiadd
jmp
sahf
and
jne
jnp
in
arpl
mov
and
jbe
cdq
xchg
cdq
jl
enter
loope
fisttp
push
xlat
inc
push
ret
sub
in
sahf
add
aaa
loop
or
sub
aam
dec
and
sbb
mov
mov
in
mov
inc
sbb
mov
ins
lea
xchg
std
mov
adc
bound
mov
cmps
les
dec
add
jo
add
dec
pop
cmps
push
imul
mov
or
xor
repz
test
pop
mov
fcom
mov
cmp
aaa
ins
and
lock
pusha
cli
inc
mov
std
retf
add
retf
sub
std
in
and
jo
and
stos
dec
daa
inc
pop
mov
xchg
mov
(bad)
pop
mov
test
sbb
adc
fild
lods
sbb
fs
rcl
ja
sub
jbe
add
mov
fimul
(bad)
dec
in
frstor
bound
xlat
jo
push
sahf
push
test
or
jg
xchg
push
test
sub
and
adc
xor
jae
es
ret
xchg
mov
inc
in
sub
pop
(bad)
mov
jno
mov
loopne
or
mov
ffree
shr
mov
mov
int3
sahf
ins
frstpm(287
inc
sbb
adc
out
jg
in
mov
addr16
jns
dec
mov
mov
sbb
inc
fidivr
mov
inc
push
jp
mov
add
pop
fisubr
retf
or
mov
leave
out
ret
jmp
jb
mov
sbb
mov
cld
iret
leave
xchg
adc
xor
cmps
or
cwde
adc
fwait
aad
jl
push
loop
je
arpl
jmp
sahf
jmp
in
pop
xchg
stos
adc
mov
fsub
stos
xchg
mov
loopne
mov
jo
lea
sub
mov
xlat
pusha
sbb
mov
enter
nop
test
mov
mov
cmp
or
outs
daa
not
and
sbb
mov
scas
(bad)
mov
add
dec
mov
out
pcmpeqb
mov
cmp
(bad)
mov
cmc
xor
(bad)
in
adc
out
in
push
shl
inc
lahf
test
xchg
inc
or
popa
test
mov
mov
sbb
leave
inc
adc
repnz
pop
loope
dec
jo
retf
leave
cs
es
push
push
loope
mov
inc
pop
xchg
cmp
lock
jmp
mov
xor
pop
test
mov
fidiv
inc
jg
test
cmp
inc
outs
outs
sub
inc
cli
call
xor
sti
push
imul
in
adc
dec
xor
cmp
das
push
dec
ja
mov
dec
pop
ja
mov
in
mov
pop
mov
pop
lds
leave
xchg
icebp
mov
inc
jbe
or
jmp
mov
(bad)
mov
dec
cli
or
ret
mov
ret
hlt
mov
xor
dec
jmp
fidivr
dec
sbb
xchg
cmp
inc
add
jb
dec
mov
push
aam
retf
neg
add
mov
dec
movs
sub
das
arpl
hlt
lock
cdq
js
pop
or
int3
jecxz
je
pushf
xchg
mov
in
cli
(bad)
mov
rcl
jns
push
in
inc
mov
scas
fsubp
jno
outs
and
mov
daa
sbb
mov
jmp
mov
add
xor
inc
xor
xchg
data16
xor
fistp
aas
retf
mov
imul
shl
add
stc
and
sub
pop
loope
jo
scas
xchg
mov
cdq
xor
addr16
jb
cmp
mov
or
mov
jb
jg
fldl2t
into
pop
ror
ins
cmps
fisttp
mov
cli
loop
mov
jg
call
and
loop
jle
mul
jecxz
div
and
pop
loop
ror
and
cs
pop
out
(bad)
(bad)
bound
ins
cwde
aad
shr
pop
(bad)
nop
outs
rcl
cmps
dec
inc
and
xchg
loopne
out
and
fst
jne
add
call
mov
push
mov
in
sbb
movs
pop
or
pop
aad
ja
int3
sti
les
data16
xchg
xchg
add
pop
pop
xor
pop
inc
jae
add
enter
and
push
scas
xchg
sub
mov
rol
out
mov
cmps
outs
lock
fisttp
lods
mov
and
pop
xchg
add
fldcw
inc
lods
mov
outs
sbb
outs
sbb
jle
imul
sub
jno
mov
shr
ret
movs
mov
fmul
or
sub
adc
int
sbb
xchg
jbe
aad
pop
inc
and
test
adc
pushf
jno
ja
pop
jo
xchg
pop
and
mov
(bad)
les
scas
cmps
out
mov
dec
lods
ds
in
mov
jg
push
and
adc
sub
lahf
mov
adc
scas
inc
out
pop
aaa
(bad)
mov
retf
add
fisubr
mov
push
inc
in
xchg
or
xchg
or
imul
outs
into
dec
dec
hlt
(bad)
fstp
sub
pop
test
mov
int3
jnp
aam
jmp
inc
xor
xchg
and
out
stos
or
push
push
pop
adc
shr
pusha
test
or
test
inc
rcr
pop
mov
add
repz
push
lds
jo
shl
or
jbe
movs
xchg
push
arpl
inc
jmp
mov
jno
stos
or
or
scas
fcom
and
in
jmp
clc
sbb
mov
cld
out
jmp
sbb
imul
test
jecxz
mov
ror
je
xor
mov
in
dec
ret
leave
sub
mov
cmps
jge
mov
sbb
rcl
dec
jmp
lods
mov
loopne
into
inc
js
mov
fstp
mov
(bad)
add
fcomp
mov
pushf
mov
(bad)
pop
jmp
scas
test
int3
sub
inc
push
inc
mov
jle
(bad)
add
pop
inc
inc
push
(bad)
cmp
ret
in
pop
adc
mov
pop
or
and
inc
cwde
xor
and
stos
pusha
in
pop
or
shl
scas
mov
cwde
nop
ins
pop
dec
push
xor
jecxz
clc
pusha
bound
ins
scas
xchg
sub
fwait
add
fs
popa
lock
xchg
retf
fidivr
scas
jno
fild
adc
loope
add
add
cdq
nop
or
dec
add
popa
pop
lods
and
aaa
cmp
jmp
sub
pop
pop
mov
xor
mov
test
dec
(bad)
mov
push
adc
xchg
cmp
mov
cs
adc
inc
mov
push
xor
cmps
dec
mov
mov
push
adc
xchg
cmp
xchg
add
push
ret
sub
cs
xor
das
cmp
addr16
push
movs
test
inc
jnp
addr16
adc
cli
repz
pop
(bad)
in
mov
jge
test
stos
xchg
xlat
cmp
loope
das
add
adc
xchg
push
cmp
mov
popf
pop
(bad)
(bad)
scas
cmps
outs
inc
ins
lods
push
fmul
mov
aam
movs
xor
mov
jnp
nop
cdq
fist
cld
xor
dec
jae
iret
mov
or
arpl
mov
sub
and
icebp
mov
xor
hlt
xchg
push
cmps
repz
xchg
or
imul
and
rol
popf
ins
or
ja
add
retf
fistp
jg
and
cmp
or
ss
lea
sub
shl
lods
mov
sub
xlat
out
test
int
jecxz
push
mov
cdq
fsub
jbe
adc
mov
xchg
jb
cli
hlt
dec
mov
mov
adc
xor
mov
jbe
or
repnz
adc
cmps
mov
or
aad
mov
repnz
xchg
repz
(bad)
push
xchg
iret
xchg
and
jmp
stos
outs
mov
cs
scas
addr16
pusha
push
test
mov
std
cmps
pop
sub
jae
retf
inc
adc
jbe
inc
repnz
sub
pop
jmp
sub
ret
mov
add
cmp
repz
call
not
mov
cmp
sub
pusha
neg
and
inc
push
int
cld
stos
push
cwde
ins
scas
daa
and
cld
aad
lods
movs
pushf
fdivp
push
or
aas
fdiv
outs
int
push
mov
call
mov
fstp
les
cdq
mov
pop
xchg
in
arpl
jbe
push
scas
xchg
retf
in
sbb
mov
rep
imul
inc
lahf
sub
adc
daa
or
out
cmp
sbb
xchg
or
jno
out
in
out
pop
jnp
jbe
cmc
fsubr
pop
cmc
lahf
sub
test
inc
bound
xchg
mov
mov
xlat
pop
push
sub
push
es
mov
out
xchg
dec
aam
sub
xlat
jo
dec
mov
ret
or
iret
lahf
je
pusha
push
imul
jge
pop
mov
shr
outs
pop
and
das
shr
mov
push
mov
or
mov
(bad)
mov
bound
leave
ss
ret
jns
jae
clc
ss
cmp
push
mov
int3
frstor
test
inc
pusha
or
sub
mov
mov
addr16
push
mov
mov
jb
add
cmp
push
jno
test
and
and
test
mov
mov
retf
pop
inc
loopne
enter
inc
stos
pop
repnz
pusha
jno
mov
sbb
dec
cmp
cmp
sbb
pop
int
stos
dec
mov
addr16
fidivr
jge
xor
xchg
out
aas
mov
push
lahf
jp
push
sar
out
inc
gs
or
aas
inc
aad
shl
sbb
dec
sub
adc
(bad)
and
iret
daa
cmp
popf
pop
fild
jp
xor
movs
in
add
mov
push
sbb
(bad)
mov
in
ret
pop
push
xor
cmps
xor
js
outs
test
sub
xlat
inc
jl
mov
out
arpl
adc
or
pop
xor
mov
inc
xchg
dec
(bad)
shl
lock
(bad)
ficomp
push
stos
out
xchg
iret
push
pop
(bad)
scas
fwait
aaa
push
xor
dec
pop
add
(bad)
xchg
xor
shl
ins
cli
stos
daa
test
push
sub
push
(bad)
cld
or
jae
outs
out
xchg
sbb
enter
pop
pop
in
dec
dec
pusha
mov
aas
jae
sub
sbb
jg
xchg
test
cmp
fld
jmp
jmp
mov
mov
adc
push
lods
ins
cmp
add
ret
sub
icebp
out
lods
jno
adc
in
aaa
into
pop
call
enter
ins
xor
push
xor
shl
sbb
ret
test
shl
jge
pop
push
cwde
hlt
dec
push
jle
stos
jmp
fnsave
add
xchg
and
lods
dec
ror
ins
icebp
call
sar
rol
dec
push
cs
adc
imul
inc
sbb
xchg
mov
(bad)
call
sbb
icebp
repnz
jbe
in
sub
std
aam
mov
inc
and
push
in
ficom
add
es
and
xchg
and
mov
jns
das
add
or
enter
mov
adc
inc
mov
fwait
lods
(bad)
mov
mov
mov
xchg
xchg
je
lock
jmp
pop
xchg
push
sub
movs
in
rcl
(bad)
fidiv
push
ja
js
sti
aaa
cmp
cmp
mov
sbb
pop
ins
cld
or
mov
jae
std
cmp
ret
out
mov
fst
jno
mov
cmp
ror
add
out
dec
push
pop
movs
into
fstp
imul
dec
add
mov
cmc
addr16
push
mov
aaa
xchg
idiv
push
mov
dec
js
sub
ret
(bad)
fsub
fwait
add
or
int
ror
xchg
mov
rcr
sbb
stos
in
sti
dec
jns
add
outs
inc
sbb
and
out
sub
or
test
xor
retf
dec
pop
iret
jne
imul
xor
sbb
xor
pop
loop
pop
popa
xlat
xlat
inc
(bad)
scas
stos
sub
dec
inc
shr
lea
inc
and
cmp
cmp
cli
push
add
push
sbb
sub
shl
mov
or
ds
or
ror
and
stos
(bad)
loopne
cld
and
add
ror
(bad)
pop
stc
xor
jle
loope
outs
and
popf
stos
or
inc
or
shl
mov
and
inc
rcr
in
std
mov
mov
inc
dec
sbb
mov
add
add
aas
jb
sub
xlat
pop
stos
push
pop
mov
or
pop
jmp
inc
lock
lods
inc
pop
or
les
dec
cmps
ret
push
adc
inc
cmp
xchg
fnstcw
(bad)
repnz
sahf
mov
outs
or
and
rol
push
fidiv
or
cmp
shl
ret
inc
pop
shl
sub
cwde
(bad)
in
mov
jp
mov
mov
sub
das
xor
xchg
(bad)
fstp
inc
sbb
sbb
jp
in
or
mov
cmp
inc
xlat
cmp
loop
loop
es
cmp
cmp
fnsave
sbb
shl
mov
sub
xor
repz
pop
lock
into
fsubr
std
jl
push
shl
idiv
cmps
adc
in
mov
mov
ja
inc
add
in
in
sbb
pop
jl
mov
xchg
lahf
aad
inc
dec
push
and
in
jae
fs
stc
cmp
mov
push
ins
lea
nop
mov
adc
xor
lods
sub
dec
adc
jbe
and
xor
dec
or
in
fwait
cwde
sbb
icebp
imul
clc
adc
dec
push
je
mov
clc
ins
fld
cmp
jnp
sti
xor
(bad)
stc
jl
cwde
jb
xor
mov
pop
and
cdq
test
sub
adc
mov
xor
sbb
in
xor
mov
outs
ret
sub
icebp
into
sub
push
test
mov
(bad)
add
fwait
gs
enter
test
imul
pusha
and
stos
sbb
mov
or
lds
stos
xchg
or
(bad)
and
int
cli
sahf
jmp
in
retf
ret
and
aam
call
pop
mov
add
scas
push
ja
(bad)
or
int
cmp
push
movs
cli
add
pop
jne
mov
dec
inc
push
jns
sub
mov
pop
sub
fisttp
adc
out
push
pop
sbb
call
stos
xor
pushf
sub
mov
jo
out
jb
fdiv
xor
jp
add
pushf
fmul
jp
rcr
test
fst
jnp
xor
push
dec
ror
xor
push
mov
or
fsub
cmp
jne
sub
stc
mov
dec
xchg
jo
cdq
jns
push
pop
js
cmp
pop
mov
xor
std
inc
push
jnp
cmp
sbb
add
sub
scas
jmp
mov
cmp
pop
xchg
repz
jmp
mov
dec
jg
mov
mov
and
sti
rcl
adc
(bad)
loop
rol
adc
sbb
mov
pop
mov
mov
das
or
push
add
sti
add
js
dec
dec
ss
mov
data16
jmp
retf
fs
aad
scas
call
mov
sbb
cmps
hlt
out
mov
mov
mov
data16
ror
adc
xor
adc
call
shr
fild
or
add
repz
fs
sar
mov
jno
cmps
cdq
mov
adc
scas
int
xchg
and
jecxz
(bad)
adc
jp
sahf
imul
pop
and
test
in
sbb
dec
ss
jl
mov
cmps
pusha
and
es
adc
test
fdivr
dec
movs
into
(bad)
dec
adc
sub
jge
or
ds
sub
or
xchg
jge
cld
cmp
pop
sahf
mov
(bad)
mov
pop
je
push
jno
shr
dec
mov
addr16
outs
jl
lahf
xchg
imul
iret
xor
push
pushf
ret
mov
and
push
or
dec
outs
fldenv
(bad)
pushf
cmp
in
or
daa
mov
mov
xchg
test
cwde
jb
mov
fwait
push
sbb
or
xchg
jmp
fnstsw
shr
cmp
xchg
data16
dec
pop
lods
push
jge
mov
retf
or
fbld
ins
ins
sbb
xchg
jbe
fs
imul
push
cmps
ja
dec
jae
fiadd
dec
xchg
sbb
jno
stos
pop
popf
ret
ror
jle
mov
mov
iret
pushf
push
xor
pop
xchg
call
fcomp
gs
hlt
sbb
dec
mov
mov
jl
inc
fmul
jp
ds
call
daa
gs
(bad)
jns
push
aas
test
and
push
mov
mov
add
in
outs
jo
retf
test
pop
das
pop
pop
push
aam
jp
mov
mov
clc
(bad)
repnz
js
pop
loope
adc
xchg
xchg
add
jns
sbb
mov
out
fild
sbb
aas
mov
mov
jecxz
repz
(bad)
loope
cmps
frstor
(bad)
and
xlat
int
pushf
pop
push
in
mov
push
(bad)
enter
xor
test
add
retf
js
jl
cmp
shl
dec
(bad)
sti
sub
mov
out
sub
aam
pop
ins
or
sub
icebp
add
or
sbb
aaa
shl
das
fcom
sub
jge
mov
ror
xor
in
push
mov
jb
pop
xchg
loope
leave
rol
enter
shl
cmp
movs
jmp
push
lods
imul
pop
call
aam
adc
ja
jmp
sub
cmps
les
xor
mov
push
hlt
mov
sub
push
dec
sub
(bad)
jp
popw
out
push
inc
ins
cmp
(bad)
mov
xchg
push
fucom
mov
mov
mov
push
fimul
scas
sub
and
lds
jae
push
jne
sub
shl
sbb
mov
pop
push
clc
push
pop
jne
mov
inc
pop
xchg
fidiv
sub
mov
pusha
add
sbb
sub
arpl
add
fs
lahf
jle
jb
inc
or
sbb
fldenv
pop
xchg
cmp
push
loope
jmp
sub
adc
jp
push
loop
test
sar
cmp
jg
mov
stc
dec
aas
sbb
into
add
mov
cmp
sub
sbb
repz
dec
loop
xchg
sbb
inc
cmp
mov
push
xchg
ja
iret
adc
repnz
jo
mov
stos
inc
retf
jecxz
xor
cmp
cmp
xchg
out
imul
mov
addr16
xchg
sbb
je
mov
or
and
and
jmp
and
lock
xor
add
xor
jl
adc
mov
out
imul
int3
(bad)
xchg
arpl
jae
lods
(bad)
pop
mov
lock
ficomp
and
(bad)
shl
retf
sti
loopne
fs
sahf
jg
jg
cli
mov
fistp
test
fwait
pop
and
pop
bnd
data16
or
pop
mov
xchg
mov
cmc
sub
push
cmc
int3
pop
jnp
mov
xor
xor
and
xchg
pop
add
mov
sbb
into
rol
or
sub
pop
dec
sub
cwde
adc
ror
and
pop
xlat
int3
daa
idiv
arpl
mov
jns
pop
lahf
xlat
push
sti
mov
pop
xchg
pop
test
push
mov
cmp
test
inc
ss
outs
jmp
jge
mov
xchg
cs
or
aaa
pop
in
sbb
fwait
xchg
xor
data16
rol
dec
loope
add
push
(bad)
lods
repz
cmp
cmc
int3
mov
mov
xor
(bad)
fistp
xchg
sub
xor
fs
data16
and
je
aaa
sub
(bad)
sub
leave
es
sbb
sub
ins
push
push
jg
jl
sub
jo
test
rol
popa
sub
xchg
ins
adc
xor
rcl
in
stc
ins
sub
in
ret
sbb
mov
daa
sub
xor
cmp
(bad)
push
addr16
nop
adc
add
fdiv
ins
shr
js
jmp
cmp
je
(bad)
lds
and
(bad)
std
aas
sahf
jp
dec
dec
lds
jl
(bad)
cwde
aaa
mov
(bad)
pop
adc
nop
add
xchg
loopne
imul
and
ret
aad
jno
(bad)
arpl
pop
cli
aaa
sub
popf
outs
ret
or
sar
adc
int
add
jecxz
mov
icebp
fwait
xor
add
dec
inc
push
test
jns
add
add
sub
xor
xchg
mov
jnp
or
or
adc
xchg
loopne
or
lahf
sub
and
or
loopne
(bad)
cmp
mov
inc
xor
rcl
mov
cli
cmp
xchg
outs
rol
fcom
int
sbb
(bad)
rcr
and
mov
fs
dec
out
mov
outs
cmp
je
pop
call
sub
xchg
cli
jbe
in
lds
push
mov
lds
ret
adc
jecxz
not
sub
pusha
adc
mov
dec
lahf
add
add
vmovlps
add
push
setbe
jge
in
jge
mov
lods
and
xor
popa
inc
fwait
js
fs
pop
movs
pop
pop
sub
das
jmp
outs
test
test
(bad)
cmps
std
pop
pop
jae
ins
out
stc
lea
std
inc
or
ins
mov
add
lock
push
icebp
fsub
test
ds
mov
and
idiv
inc
or
xchg
xchg
scas
sar
mov
sub
or
mov
arpl
(bad)
popa
call
retf
jp
and
dec
mov
sub
test
xor
rcl
fimul
clc
inc
call
cwde
lods
mov
sub
mov
add
xchg
cmps
sbb
pop
test
cwde
add
lods
push
and
push
mov
sub
mov
call
adc
les
sbb
sahf
jns
ds
retf
xor
xchg
mov
fs
icebp
or
in
and
jg
lea
arpl
test
push
sub
xor
sub
cwde
(bad)
fisub
out
add
in
loopne
adc
cmp
fst
cwde
jmp
jp
adc
movs
and
test
xchg
xor
and
out
push
adc
push
out
js
xor
push
sbb
out
mov
outs
inc
mov
xchg
shr
ret
mov
adc
xor
imul
das
push
pop
out
sub
imul
loope
xchg
loope
pushf
push
xor
sbb
aam
mov
popa
pop
push
fbstp
add
push
int
out
pop
add
mov
and
int3
fstp
popa
mov
retf
or
fnstcw
xor
mov
bswap
xchg
jge
test
stc
in
mov
cli
xchg
out
pop
ss
nop
imul
add
scas
xchg
ror
sub
inc
das
retf
push
ds
mov
cdq
movs
jmp
pop
adc
(bad)
lea
aaa
or
mov
fwait
mov
lahf
push
bound
sub
and
(bad)
sub
xor
imul
pop
mov
xchg
(bad)
mov
and
ficomp
sti
cmps
inc
popf
into
add
out
push
mov
sub
jp
inc
call
pop
pop
test
cmc
jnp
fsub
bound
add
adc
mov
int3
pushf
adc
ror
shl
imul
push
cld
sbb
jecxz
aad
pop
test
das
out
repnz
lock
push
lock
jo
adc
mov
xor
ds
sub
add
adc
mov
in
stos
push
cld
xor
jge
je
jp
push
retf
sahf
fstp
inc
inc
movs
test
adc
outs
stos
xor
enter
dec
or
xchg
outs
(bad)
jmp
pop
sub
sbb
sub
xor
and
sbb
aaa
cmp
jle
cmp
or
push
xchg
inc
arpl
or
jmp
jne
push
rol
adc
stc
jg
ins
outs
sub
jmp
ret
je
adc
lock
or
add
sbb
xchg
sub
ja
leave
ss
fidiv
pop
or
sub
push
ret
repz
adc
pop
fld
adc
sti
xor
shr
daa
ins
out
jl
(bad)
ret
ins
mov
test
jbe
xor
mov
test
xor
mov
(bad)
repz
enter
outs
sbb
test
scas
std
or
sti
mov
cs
push
mov
cwde
cmp
popf
add
in
dec
mov
shl
hlt
xor
daa
mov
popa
rol
shl
mov
pop
popa
int3
push
lds
dec
add
dec
or
add
(bad)
stc
and
popf
(bad)
sti
sar
gs
stos
and
mov
popa
push
cli
into
or
xchg
and
pop
inc
js
mov
outs
sbb
jno
repnz
neg
out
aam
adc
popf
inc
out
test
aad
psrlw
loope
stos
pushf
inc
and
or
mov
psubw
ds
fcomp
push
cmp
jecxz
nop
fwait
scas
in
push
add
pop
cmp
sub
push
(bad)
pop
pop
ret
je
mov
push
jmp
cmps
ret
lods
dec
jns
retf
pop
aad
jno
fmul
test
out
aad
xchg
mov
adc
inc
int3
test
std
jnp
(bad)
xor
or
adc
sbb
push
(bad)
sahf
jnp
pop
es
mov
add
pop
inc
aam
jle
mov
xor
pop
push
mov
fdiv
inc
shl
jmp
mov
fwait
ins
sub
or
cld
push
stos
retf
xlat
iret
jmp
jg
jecxz
mov
clc
add
jp
data16
test
movs
xor
rol
cmp
stos
icebp
ds
cmp
dec
add
ins
(bad)
adc
jge
stos
jae
mov
into
add
mov
cmps
mov
js
fld
iret
add
sbb
(bad)
push
xchg
test
stos
and
xlat
test
mov
je
mov
dec
pop
lods
pusha
pushf
ds
and
adc
call
loop
or
cmp
cmp
add
(bad)
loope
loop
push
xor
push
xchg
and
push
jge
test
cdq
mov
pop
add
repz
out
or
mov
cmp
leave
lods
repz
dec
nop
sbb
xor
jmp
mov
add
pop
mov
bound
in
add
mov
fwait
adc
ds
aad
and
ror
das
mov
test
(bad)
and
add
adc
mov
paddusb
gs
ins
ins
adc
mov
fcmovnu
scas
(bad)
xchg
ret
test
std
mov
xor
sbb
add
dec
pop
adc
not
sahf
mov
and
push
sbb
jbe
pop
int
adc
sbb
add
mov
and
mov
cmp
in
fld
ret
pop
pop
in
fld
(bad)
shl
pop
push
add
or
hlt
cmp
or
sub
push
(bad)
loopne
sbb
shl
add
sbb
fwait
cli
je
retf
stos
push
mov
sub
fld
push
mov
xor
mov
hlt
sbb
sub
ss
xor
pop
or
test
mov
out
pop
out
push
xchg
pop
or
mov
in
push
or
jne
sub
xchg
(bad)
cmp
add
js
retf
inc
call
jnp
mov
idiv
push
dec
mov
movs
scas
sbb
xchg
dec
push
and
movs
mov
cld
sub
or
pop
mov
sub
xor
xlat
mov
adc
sub
addr16
mov
sbb
gs
push
pop
test
aad
test
in
adc
pusha
call
outs
idiv
popf
je
mov
sub
pushf
mov
pop
movs
call
(bad)
push
jecxz
dec
inc
adc
daa
icebp
mov
and
pop
mov
adc
jno
hlt
push
dec
loop
mov
lods
mov
mov
call
dec
nop
mov
(bad)
movs
loope
push
jae
dec
retf
adc
mov
add
sub
dec
bound
inc
add
or
and
imul
jo
mov
xchg
idiv
ja
stc
aas
fcom
pop
imul
fnstsw
aam
cwde
cpuid
stc
mov
lahf
out
test
js
ins
in
retf
jmp
gs
std
(bad)
cmc
movs
mov
(bad)
jp
adc
inc
je
push
xlat
mov
repz
inc
and
sub
jns
push
inc
loopne
push
cmps
ja
push
jecxz
ret
sbb
sbb
in
je
rcr
movs
push
in
iret
lahf
std
mov
data16
push
mov
pop
sahf
push
rcl
mov
push
pop
push
mov
ja
mov
add
ja
cmp
mov
push
push
mov
jo
mov
lods
rol
jg
lds
and
daa
xchg
movs
test
hlt
cmp
push
xchg
cmp
mov
mov
repz
js
mov
in
mov
fdivr
mov
xchg
(bad)
test
stos
cli
es
dec
pop
scas
mov
retf
cmp
inc
imul
cli
mov
(bad)
cs
ret
push
jmp
push
retf
rcr
lods
xchg
cld
pushf
fnsave
adc
sbb
xchg
jbe
(bad)
data16
inc
mov
stos
shl
retf
inc
push
jle
loopne
adc
mov
bnd
xor
dec
xchg
les
add
icebp
pop
scas
xchg
jbe
mov
sbb
fldenv
iret
mov
movs
addr16
lods
mov
mov
pop
push
inc
out
dec
outs
outs
sub
(bad)
xor
ss
mov
ret
add
js
xor
lds
pop
sbb
add
(bad)
jae
mov
xor
outs
repnz
fsub
push
test
adc
sub
mov
xor
clc
jp
icebp
sbb
jl
push
fs
mov
pop
or
data16
ss
add
out
xchg
xor
loope
sti
into
xor
mov
inc
mov
enter
clc
add
hlt
mov
lea
adc
repnz
and
dec
pop
shl
shr
xchg
bound
sbb
jno
jp
fwait
in
imul
add
xor
std
jae
mov
iret
xor
jb
jle
movs
inc
out
scas
xchg
pop
adc
or
leave
repnz
arpl
cmp
int
mov
adc
test
jle
cmp
or
or
push
es
into
mov
(bad)
aaa
outs
or
call
retf
out
daa
outs
sbb
in
lahf
inc
ret
cld
dec
jae
lods
dec
adc
mov
scas
adc
mov
and
push
jecxz
ins
(bad)
fidivr
mov
mov
popa
jo
rcl
retf
push
push
fidivr
jmp
das
sub
xchg
fistp
mov
mov
mov
scas
pop
sahf
or
mov
retf
popf
inc
test
inc
lods
clc
inc
(bad)
enter
pop
rcl
out
adc
mov
xchg
lock
push
mov
or
sub
fwait
mov
or
dec
jne
retf
inc
inc
xor
sbb
aam
rol
jns
push
push
fdiv
je
pop
sub
mov
xchg
dec
fs
jle
cmps
repnz
out
sub
dec
inc
push
cmp
cmp
cmp
jae
ret
pop
push
and
call
add
fs
mov
xor
dec
mov
(bad)
movs
call
mov
imul
lods
fmul
(bad)
adc
ja
sub
loope
xor
add
ficom
inc
in
dec
test
or
add
ins
mov
test
cld
mov
push
xchg
xor
lahf
data16
dec
int
nop
dec
into
jmp
pop
dec
xor
xchg
push
or
(bad)
or
push
enter
fmul
jl
lahf
mov
shr
in
xor
scas
mov
mov
xchg
jne
add
and
cmp
push
gs
pop
pop
and
jbe
popf
mov
cld
jb
jg
mov
mov
stos
cmp
ret
outs
or
sub
jnp
mov
sbb
pop
cmp
fbld
cld
data16
test
xchg
sub
int
das
aas
jb
ds
push
sub
xor
daa
add
in
mov
pushf
mov
adc
mov
xorps
mov
in
(bad)
lock
mov
das
add
dec
popa
push
sahf
je
xor
or
xor
fst
mov
loope
std
cli
popa
inc
ror
call
repz
sbb
dec
sbb
jecxz
pop
cmps
dec
das
cmp
pop
fwait
aad
shr
ret
lods
adc
xor
js
lea
cmps
dec
cmc
test
sub
jle
or
xchg
jmp
sbb
retf
out
pop
addr16
adc
inc
add
fistp
test
push
xor
add
mov
dec
popa
aas
and
mov
das
push
and
imul
pop
mov
xchg
xor
ins
dec
ins
inc
fstp
outs
jbe
movs
enter
jae
pop
sub
jg
inc
fs
iret
push
popf
sbb
add
fnsave
fwait
into
call
xor
cmp
stos
int3
out
xor
mov
jns
cmp
enter
add
pop
sub
pop
lock
jl
jns
adc
(bad)
xchg
sbb
addr16
xchg
xchg
jl
lods
imul
hlt
clc
add
pop
enter
ins
fistp
(bad)
cmps
mov
int
shl
pop
data16
call
mov
adc
mov
pop
jns
mov
dec
mov
push
fidivr
and
pop
call
and
push
adc
jno
or
sub
adc
inc
cs
push
adc
ins
lea
data16
dec
cld
mov
xor
out
stc
adc
rcr
pop
sbb
lock
and
enter
loop
jmp
push
pop
ins
out
arpl
cmp
out
cmp
sub
std
pop
test
xchg
and
add
xor
jae
sub
mov
add
mov
out
ror
jmp
mov
or
cmp
xchg
xchg
lahf
push
in
outs
mov
stos
fidivr
mov
xchg
and
pop
scas
mov
sbb
ja
adc
add
cdq
xor
mov
shr
test
nop
movs
(bad)
fsub
mov
cdq
sbb
pop
and
ins
mov
out
popf
jne
or
into
and
repnz
adc
jmp
jno
or
stos
inc
in
fwait
popf
or
(bad)
call
(bad)
imul
mov
lock
adc
lods
xchg
aam
fmulp
cmp
ds
out
pop
popa
(bad)
sar
les
dec
mov
loop
adc
add
xor
(bad)
mov
sbb
mov
push
(bad)
sbb
out
mov
dec
outs
fwait
mov
lock
mov
jp
mov
enter
pop
pusha
mov
stos
xchg
jmp
dec
jge
mov
(bad)
icebp
stc
in
push
sbb
inc
ds
inc
les
scas
arpl
iret
dec
mov
mov
push
mov
(bad)
scas
hlt
push
test
stos
inc
pop
mov
xor
clc
cmp
in
out
inc
cmp
mov
sar
stos
dec
add
jno
mov
sub
in
add
push
add
xor
jne
mov
mov
xchg
out
loop
dec
push
out
pop
or
pop
in
cdq
retf
fbld
mov
xchg
nop
sbb
jmp
lds
mov
sti
inc
lock
sbb
sbb
cs
jge
pop
retf
sub
aam
popa
xchg
aad
ds
cs
inc
xchg
cmp
mov
adc
lds
mov
popa
js
loope
lods
ror
mov
jae
add
lods
jg
leave
push
repnz
fisttp
push
mov
lahf
inc
fild
je
test
lods
in
jns
retf
jo
adc
sar
cmp
pop
mul
jb
aaa
cmp
pop
cmps
inc
push
sub
xchg
repnz
std
jle
repz
mov
imul
and
jo
les
dec
cdq
sbb
cmps
jp
andnps
mov
cs
mov
sbb
mov
mov
loopne
and
adc
sub
push
inc
xchg
out
retf
les
cmp
cwde
mov
mov
or
sbb
jne
ins
ja
mov
das
cld
pop
or
scas
mov
movs
iret
mov
push
xor
ja
add
pop
mov
shl
sub
cmp
dec
shl
fist
in
or
sub
cmp
add
repz
test
aaa
shr
sbb
(bad)
dec
fimul
cmp
mov
scas
push
cli
mov
lods
pop
fnsave
push
sbb
daa
outs
xchg
nop
xchg
xchg
add
sub
push
xchg
or
iret
jmp
in
xchg
pop
rcl
mov
cmps
movs
ins
inc
sahf
shl
aaa
into
pop
movs
rcl
mov
pop
jbe
cmp
fistp
xchg
ret
test
xchg
or
jge
mov
bound
into
cmps
movs
jne
out
xchg
dec
push
jp
js
fsubr
pop
adc
add
call
add
fidiv
loop
cmp
outs
mov
xor
and
jno
mov
push
adc
cwd
jmp
and
jb
cmps
int
inc
xchg
sbb
dec
popf
xlat
xor
or
cmp
ja
scas
call
cmp
cmp
loop
inc
hlt
push
jbe
xlat
xchg
xchg
and
rol
jge
fnsave
popf
repnz
or
and
xchg
or
popf
sti
not
(bad)
pop
sti
std
sbb
xlat
cmp
fmul
dec
xchg
mov
or
inc
jl
xchg
cmp
(bad)
cmps
adc
push
mov
dec
imul
rcl
fidivr
mov
pop
retf
test
pop
outs
mov
xchg
(bad)
mov
out
ret
cmp
mov
arpl
push
pop
lock
inc
dec
inc
add
sbb
cwde
push
dec
mov
xor
popf
iret
dec
out
jno
jb
jp
scas
mov
mov
add
jno
push
(bad)
xchg
in
cli
int3
sbb
stc
pop
inc
xchg
mov
jg
cmc
out
(bad)
xchg
fbld
fst
cs
shl
mov
retf
stc
shr
repz
ret
call
outs
cmp
ret
jmp
cs
xor
xor
movs
lahf
mov
pop
cli
xchg
fwait
aaa
out
and
mov
lods
mov
adc
enter
sub
xlat
idiv
loop
xlat
fs
cmps
psrlq
xchg
sub
mov
push
push
test
or
sar
(bad)
addr16
pop
sbb
mov
pop
inc
mul
lahf
rcr
fs
lock
push
sub
mov
mov
jmp
inc
xchg
push
adc
or
mov
xchg
shl
cwde
and
(bad)
je
adc
xchg
xor
jns
neg
shl
inc
jle
fisttp
xchg
int3
cwde
and
jmp
push
addr16
setb
mov
ror
lods
inc
xor
pusha
shl
cli
sub
mov
std
inc
jl
ret
adc
nop
imul
adc
xor
lds
cmc
(bad)
xor
push
sbb
out
sub
mov
adc
out
aaa
sub
fxch
inc
stos
(bad)
aad
outs
fbstp
mov
mov
fcom
rcr
pop
in
dec
jo
stos
push
sbb
lds
push
rcl
popa
adc
mov
dec
sbb
fs
and
mov
sbb
mov
pop
mov
into
fild
push
push
div
movs
ins
sub
repz
xchg
mov
test
jbe
pop
repnz
sahf
call
loope
pop
mov
repnz
jne
xchg
xchg
scas
jecxz
std
imul
mov
arpl
cmps
out
jnp
push
mov
add
mov
ror
dec
xor
mov
sti
mov
cmps
jmp
mov
out
mov
add
shl
sub
sub
leave
mov
sub
push
or
icebp
jo
push
mov
inc
(bad)
jmp
(bad)
stos
fist
sbb
(bad)
popa
push
inc
cdq
or
jnp
sbb
gs
(bad)
cld
pop
loope
push
push
test
stos
sbb
jnp
rcl
add
fucom
mov
(bad)
mov
push
stos
sbb
loop
pop
retf
div
cdq
movs
stc
inc
hlt
sbb
push
jo
mov
ret
xchg
fwait
pop
pop
aas
test
mov
pop
std
nop
sub
push
imul
xchg
stos
jno
cs
test
push
sub
lock
mov
shr
inc
loopne
addr16
dec
test
jnp
(bad)
and
sbb
and
push
mov
and
cdq
sub
add
mov
dec
xchg
int
sahf
mov
pop
jle
loopne
xchg
cs
xchg
gs
pop
pop
pop
aaa
dec
adc
not
jbe
es
fwait
sbb
mov
inc
outs
aad
lea
std
call
mov
sub
sbb
mov
sub
(bad)
cmp
test
ror
push
xchg
inc
xchg
push
push
pusha
lea
xchg
int3
hlt
data16
in
mov
ficomp
jle
cs
out
xchg
fwait
neg
bound
retf
dec
adc
or
icebp
stc
dec
xchg
pop
jns
push
sub
outs
jns
sub
xlat
push
inc
loope
sbb
lldt
xor
ja
lds
jl
mov
ins
aam
fnstsw
jae
and
inc
int3
sbb
sub
inc
and
ds
dec
jecxz
pop
cmps
int
and
popf
xchg
and
jmp
fist
pop
test
sbb
fsubrp
inc
imul
in
xchg
mov
cld
leave
sysenter
mov
cmp
mov
and
push
push
push
pop
int3
xor
or
sbb
cmc
pushf
inc
out
xchg
mov
push
das
cmp
loopne
mov
pop
add
fidivr
cmp
xor
push
or
movs
push
sbb
jnp
or
jae
pop
imul
inc
and
fadd
int3
adc
es
xor
jno
sbb
pop
das
push
sahf
sub
mov
fstp
xor
pop
xchg
pop
mov
adc
neg
push
sahf
out
xchg
mov
pusha
xchg
dec
mov
repz
push
fdiv
cmps
addr16
shl
jmp
mov
fmul
mov
call
sub
sub
add
rcl
push
jmp
ficom
dec
sbb
add
jge
es
(bad)
loop
nop
push
pushf
inc
xlat
out
pop
inc
dec
xor
mov
bound
add
xchg
xor
sub
in
jno
dec
mov
and
inc
pop
dec
adc
les
loopne
push
dec
push
cdq
adc
xchg
and
mov
in
sbb
lahf
mov
sbb
aas
mov
out
out
mov
inc
cdq
mov
mov
cmp
and
jnp
movs
xor
xor
xchg
or
adc
and
neg
or
imul
arpl
mov
jns
adc
(bad)
repnz
cmps
lods
cs
push
sbb
jns
fld
and
je
bnd
pop
cdq
dec
or
daa
mov
jno
imul
cdq
div
or
test
daa
dec
leave
dec
xchg
arpl
and
outs
adc
inc
test
ror
imul
or
adc
fbstp
add
shl
xor
adc
cmps
or
int
addr16
retf
not
inc
sub
push
push
addr16
jge
fdiv
mov
mov
ins
push
outs
cmps
aas
mov
retf
outs
sbb
sar
scas
sub
das
jmp
xchg
and
cmp
inc
adc
dec
dec
push
icebp
add
dec
(bad)
jnp
cmp
mov
cdq
sub
sub
mov
jge
jmp
push
in
xor
les
loope
(bad)
iret
jl
fwait
pop
sbb
outs
ret
retf
stos
test
in
sbb
xchg
inc
es
jne
dec
xor
mov
adc
aaa
mov
gs
add
inc
mov
inc
xchg
and
dec
cmp
xor
imul
or
lds
inc
sbb
xchg
ror
into
mov
jae
stos
sub
dec
pop
sbb
pop
mov
and
inc
pop
jbe
and
inc
stos
push
sbb
cmc
cmp
cmp
push
push
(bad)
retf
jo
add
movs
mov
rcr
push
into
xchg
jno
sbb
push
xchg
gs
jno
add
xchg
push
shl
push
mov
push
hlt
out
popa
add
out
cmp
rol
dec
cmp
push
popf
ds
sbb
jbe
lods
xor
ror
jne
and
out
jne
aam
lods
xor
ror
add
push
iret
mov
js
add
xor
dec
mov
int3
fcomi
jmp
dec
inc
or
shl
push
cmps
scas
test
movs
sub
pop
call
sbb
and
pop
fist
cmp
fmul
outs
add
test
jne
cs
xchg
loope
sub
aas
arpl
stos
cli
outs
pop
sbb
push
adc
pushf
sbb
inc
pop
movs
push
add
mov
imul
out
lods
fidivr
xor
sub
adc
jmp
xchg
ins
add
(bad)
imul
add
(bad)
dec
sahf
add
or
mov
or
pop
call
addr16
je
push
retf
stos
call
or
cmp
add
jl
inc
adc
dec
sub
inc
cmc
sbb
enter
cdq
mov
xchg
push
or
cmp
push
xor
(bad)
rol
inc
imul
pushf
push
push
xor
add
daa
xchg
sbb
push
adc
aaa
mov
jo
test
repz
sub
or
pop
pop
pop
(bad)
inc
ds
and
out
add
or
hlt
call
int
push
cmp
jnp
sub
add
lock
push
retf
xor
(bad)
lea
aas
jmp
xchg
jmp
out
mov
jne
xor
mov
cdq
movnti
or
mov
ins
sub
sbb
sub
mov
test
outs
mov
leave
jae
daa
movs
adc
es
jo
sub
aad
mov
xchg
ins
add
dec
cmps
push
std
and
pop
jae
push
xor
mov
jbe
cmp
imul
fisttp
adc
out
xchg
or
mov
cmp
aaa
stos
push
stos
cmp
aas
inc
retf
dec
mov
into
cdq
mov
push
(bad)
iret
jecxz
mov
fisub
cmp
mov
sti
scas
jne
jb
dec
pop
sahf
out
scas
sar
(bad)
not
mov
dec
aam
out
jbe
push
and
xchg
mov
jle
popa
or
imul
rcl
mov
xor
push
into
adc
rcr
mov
jbe
xacquire
loopne
cdq
xor
mov
in
test
fnstsw
adc
scas
shr
jae
push
rcr
jge
push
mov
out
pushf
or
das
push
rcr
fcomp
aaa
jl
fs
ja
pop
push
in
pop
popf
mov
cwde
into
xor
outs
std
push
enter
or
add
ds
icebp
push
push
add
test
pop
out
addr16
push
std
inc
jle
fwait
psubsw
inc
in
je
adc
rcr
pop
cwde
iret
out
inc
jns
stos
sub
sti
aaa
cmps
movs
mov
and
dec
repz
push
push
shr
xlat
sub
jae
loope
dec
sbb
lods
call
cmp
mov
xchg
shl
addr16
fnstsw
inc
ss
mov
repnz
xchg
jge
or
rcl
sub
in
inc
popa
(bad)
in
add
int
adc
push
(bad)
push
mov
pop
mov
or
and
in
dec
jl
lods
lods
pop
mov
arpl
sbb
pop
lods
test
lea
mov
adc
cmp
test
int3
stc
dec
ja
(bad)
push
imul
loopne
ins
dec
dec
inc
xchg
repz
outs
jmp
jle
mov
or
sbb
sbb
imul
imul
mov
mov
mov
cmc
xchg
inc
fucomp
mov
pop
out
shr
cmp
pop
ja
dec
adc
call
sub
mov
aad
jmp
pop
aam
adc
popf
mov
pop
mov
sbb
addr16
std
dec
sbb
cmp
sbb
adc
fs
enter
je
sahf
and
mov
jecxz
cwde
jg
movs
imul
in
push
das
mov
inc
or
fisttp
test
and
and
push
jg
sar
pop
hlt
dec
mov
adc
add
dec
xchg
popf
add
ins
repz
and
sahf
fisubr
push
push
cmc
push
push
pop
fsubr
jb
sub
je
jp
sbb
aas
xchg
push
cmc
pop
inc
inc
icebp
aad
ins
lea
ins
add
dec
je
jmp
mov
aad
mov
push
dec
pop
mov
cmp
or
outs
mov
mov
sbb
pop
jg
fiadd
lahf
sub
nop
cmp
mov
in
push
daa
ret
in
cmp
mov
inc
xchg
push
jbe
adc
nop
or
jp
jle
sahf
out
retf
mov
ss
push
mov
adc
ss
rcl
cwde
sbb
loop
xchg
sub
sbb
lea
mov
(bad)
cmp
or
or
pop
pop
(bad)
out
pop
push
bound
aad
xchg
ja
inc
dec
adc
jl
xchg
jecxz
cmp
sahf
cld
arpl
call
es
jge
mov
jp
jle
add
xor
leave
push
lds
pop
fisttp
pop
jge
inc
js
sub
mov
dec
sbb
xchg
outs
inc
bound
std
loope
sub
xor
repz
push
pop
gs
adc
sub
cld
xchg
xchg
add
imul
add
push
sub
push
fld
inc
push
lds
mov
stos
sub
and
add
jo
pusha
fisttp
cmp
mov
bound
or
div
cmc
in
ja
call
mov
push
add
fsubr
xor
add
ds
test
dec
cmps
mov
fisub
out
(bad)
repz
shl
(bad)
js
lock
movs
inc
sbb
in
jne
sbb
mov
and
jne
mov
jmp
push
sub
(bad)
aaa
xchg
cld
in
jmp
sub
cmps
dec
jbe
cmp
int3
dec
mov
nop
add
pop
jge
pop
rcr
inc
cmp
or
movs
aaa
out
inc
std
or
cmp
sub
sar
mul
xlat
stos
lahf
in
movs
ss
(bad)
jne
dec
int
push
push
movs
out
cwde
fistp
xchg
inc
inc
out
cmc
int
dec
int3
stc
fstp
fldcw
mov
mov
je
mov
and
inc
les
cmc
sti
jle
cmp
cmp
dec
aam
jbe
xchg
test
lds
add
inc
jne
sub
mov
mov
rol
outs
and
in
in
dec
xchg
out
cmp
aam
mov
fs
retf
fcomip
push
mov
and
std
loopne
test
adc
push
add
data16
and
not
dec
sub
push
je
daa
mov
pop
mov
add
jne
fcomip
outs
push
gs
xchg
jne
push
dec
popa
jmp
mov
sbb
sets
jp
jo
cs
pusha
push
jp
jl
inc
push
fsubr
ins
clc
outs
fmul
test
push
mov
mov
pop
ins
sbb
xchg
loope
aaa
cs
or
xor
cld
adc
cld
retf
sub
fsubr
mov
ins
iret
enter
mov
loop
pop
outs
inc
mov
cmp
mov
test
xchg
xchg
add
xor
jmp
sub
xchg
inc
add
and
jecxz
adc
inc
mov
cmp
jne
add
pop
rol
push
xchg
call
lahf
clc
imul
fucomp
movs
push
sbb
inc
or
xchg
pop
xchg
bound
pop
aad
jge
push
shl
cmps
popa
pop
mov
ss
out
or
inc
push
lds
mov
adc
or
push
mov
mov
in
lods
loopne
movs
sahf
test
mov
neg
adc
jae
data16
dec
outs
lds
xlat
and
jecxz
(bad)
hlt
cmp
or
sub
(bad)
xor
ins
inc
sub
ret
fs
fistp
sbb
add
adc
and
jl
mov
jecxz
push
sbb
inc
dec
cmps
jb
jmp
add
daa
jmp
jns
ja
xchg
fisub
ror
fnstenv
cld
or
dec
shr
or
or
daa
fisttp
mov
je
idiv
cli
popf
xlat
lods
jmp
in
xor
push
sti
nop
mov
loope
sbb
push
sub
push
sub
(bad)
push
popa
jns
mov
imul
pop
inc
xchg
jb
fs
adc
pop
jns
cmp
xchg
xor
int
les
jbe
sub
pop
push
lock
mov
dec
imul
xchg
add
sub
sub
lahf
cmp
mov
cdq
dec
or
rol
test
mov
sub
pop
push
fsub
call
jno
jp
mov
inc
leave
pop
push
mov
and
rcr
push
push
pop
retf
stc
mov
sub
out
mov
loopne
inc
push
add
retf
and
arpl
sbb
dec
push
jmp
enter
push
jno
dec
scas
and
add
cmps
aaa
jmp
sub
cwde
aam
retf
push
fsub
sbb
outs
pop
out
mov
sbb
sub
push
clc
in
inc
std
shl
je
jne
dec
data16
test
das
adc
sbb
cmp
cmp
mov
mov
fsub
inc
rcr
xchg
retf
adc
or
test
pusha
and
pop
xchg
add
dec
sub
xor
rcr
fiadd
sub
add
ds
push
movs
imul
and
jnp
sti
(bad)
dec
ror
shl
inc
jbe
add
idiv
test
mov
(bad)
add
iret
xor
mov
(bad)
mov
xchg
mov
dec
in
push
cs
cli
adc
cs
clc
enter
js
sbb
pop
sbb
test
mov
jp
or
dec
mov
mov
retf
fild
or
fs
enter
pusha
push
nop
adc
daa
sbb
dec
inc
jne
or
bnd
rol
cmc
and
(bad)
fistp
jbe
fldcw
push
les
pop
sbb
int
mov
out
mov
mov
loope
pop
add
pop
dec
mov
popf
sub
ret
pop
sbb
test
mov
enter
leave
(bad)
fisubr
xchg
outs
imul
or
adc
(bad)
pop
add
xchg
and
fstp
fnstenv
shr
retf
xchg
ficomp
out
popf
xchg
mov
es
into
repnz
test
xchg
push
sub
xchg
mov
jmp
inc
popf
idiv
lock
or
outs
lds
movs
sbb
push
jmp
or
mov
inc
fisub
inc
mov
push
sub
int3
stc
adc
lods
sti
mov
rol
rol
(bad)
pop
in
mov
and
dec
jecxz
cli
sub
sar
push
bound
mov
xchg
addr16
rcr
xchg
icebp
xor
xchg
mov
cs
cmp
bound
test
clc
pop
retf
mov
or
add
fisubr
icebp
int3
in
cs
or
rol
in
leave
in
mov
cwde
dec
shl
imul
sbb
push
test
jmp
xchg
cmps
shr
cmp
call
shr
(bad)
mov
pop
pop
std
retf
mov
xchg
and
aad
add
push
xor
mov
pop
xor
add
test
xlat
in
dec
in
push
push
push
sub
adc
lods
ret
jae
pop
mov
dec
ds
xchg
out
cwde
imul
push
ffreep
cmp
sub
jo
in
mov
push
cmp
xchg
popa
xchg
ins
rcr
fcom
sub
add
sub
mov
(bad)
mov
pop
retf
xchg
mov
sbb
(bad)
xchg
xor
push
dec
(bad)
jmp
cdq
mov
or
jne
(bad)
das
mov
mov
pop
addr16
idiv
jmp
fs
mul
ret
lahf
test
mov
cmp
mov
mov
loopne
xchg
out
ror
pop
scas
iret
xor
xor
fisubr
adc
getsec
arpl
ins
jge
int
fdivr
test
sbb
sbb
cmc
out
loopne
cmp
mov
pop
push
xlat
mov
mov
and
push
sub
push
gs
xchg
or
inc
mov
dec
repz
cs
jns
test
data16
imul
jge
cmp
ins
cdq
out
jne
and
pop
stc
adc
adc
lea
sbb
push
mov
call
scas
clc
xor
add
mov
(bad)
gs
adc
mov
or
inc
ja
push
outs
shr
add
icebp
sub
cli
mov
in
and
rcr
pcmpeqd
adc
call
pop
stc
idiv
adc
push
cmps
jb
dec
dec
jecxz
mov
lea
mov
adc
push
jge
popa
xor
fidiv
sbb
jne
xor
pop
mov
mov
(bad)
mov
test
or
imul
jmp
mov
and
sbb
jbe
pop
scas
xchg
call
xor
push
sub
xchg
jecxz
pushf
adc
cmp
xlat
fs
pop
ds
mov
xchg
xor
xchg
xor
xchg
adc
jge
iret
ret
mov
std
jp
mov
xchg
inc
cmp
dec
lods
outs
stc
test
sub
popf
and
call
push
jge
pop
aam
sub
or
and
rcr
test
rcr
aam
scas
add
dec
(bad)
aad
aam
push
pop
in
mov
idiv
xchg
inc
push
push
fstp
iret
cmp
pop
pop
es
cmp
pusha
push
(bad)
ret
retf
cli
mov
loope
jl
ins
and
test
inc
das
inc
test
loopne
in
fnstenv
lock
pop
push
add
out
jge
rcr
shr
shl
or
xor
int3
in
inc
jge
sub
mov
out
rcr
fstp
cmp
dec
inc
ja
or
shl
daa
inc
shr
data16
imul
xchg
push
and
pop
fmul
mov
lods
sub
aas
sub
mov
sub
sub
pop
in
add
ja
ror
xchg
mov
icebp
lock
inc
jp
(bad)
push
shl
dec
aaa
test
movs
in
pop
in
push
xchg
loop
neg
inc
mov
nop
ins
in
fdiv
ins
cmp
ins
in
mov
(bad)
retf
fmul
mov
loopne
ins
mov
inc
or
cmc
in
imul
cmp
movs
(bad)
hlt
jnp
push
dec
add
out
shl
rcl
std
jnp
inc
icebp
xor
dec
mov
pop
sub
pop
add
(bad)
jp
inc
mov
and
pusha
mov
pop
and
jg
nop
jecxz
(bad)
test
xor
mov
dec
test
sbb
jmp
cld
ficom
(bad)
xor
xchg
fimul
ss
pop
pop
dec
adc
mov
inc
stc
and
pop
mov
or
(bad)
in
in
mov
inc
je
or
inc
pop
pop
add
(bad)
test
imul
push
cli
inc
in
or
cld
adc
aaa
xchg
sar
xor
mov
loope
adc
stos
lea
call
pop
js
sbb
push
adc
or
jmp
mov
aaa
out
test
mov
jae
bound
test
mov
retf
retf
and
mov
mov
bound
mov
scas
add
sub
repnz
loope
repnz
icebp
xchg
hlt
shl
jmp
xor
sub
fisttp
jp
nop
xchg
push
pop
cdq
jmp
aas
xchg
jp
pop
nop
call
test
dec
bound
jp
xor
ret
mov
into
mov
mov
add
jl
cli
jg
pop
cwde
inc
aas
in
(bad)
adc
dec
popf
and
mov
daa
cmps
lahf
push
push
add
sbb
jge
mov
ret
lds
mov
jmp
or
mov
xor
movs
daa
imul
jmp
or
rcr
push
fwait
and
jg
xor
repz
jecxz
push
aas
cli
sahf
add
stc
or
mov
cmc
inc
jno
pop
enter
les
call
loop
push
(bad)
or
jg
jmp
test
ja
aad
push
stos
imul
xor
xor
mov
or
leave
ret
les
cmc
(bad)
xchg
stc
test
push
or
cs
add
imul
mov
adc
dec
inc
mov
mov
dec
push
xchg
outs
popa
add
mov
sub
shl
jmp
dec
sbb
inc
dec
xchg
not
xor
aad
mov
lods
ret
xchg
push
sub
add
in
out
aad
jecxz
and
inc
dec
je
mov
mov
pop
mov
std
movs
xor
cmp
pop
fs
pop
test
nop
test
loop
xor
or
cdq
dec
cmp
not
or
popf
neg
retf
dec
sub
xchg
cmc
arpl
xchg
call
retf
inc
lods
in
int3
jnp
cli
fisttp
xchg
int
iret
lods
lea
into
cld
sbb
popa
dec
jge
fldcw
sar
cmp
pushf
lock
ja
aam
and
ins
mov
jle
push
xlat
ret
dec
into
scas
iret
inc
test
pop
sub
dec
push
fld1
inc
mov
dec
and
pop
add
repz
into
or
stc
ss
mov
imul
push
fidivr
sbb
and
out
jbe
movs
dec
cmc
imul
cmp
push
test
mov
leave
retf
and
mov
ins
movups
adc
push
push
das
cmp
fmul
pop
lock
push
mov
mov
push
cmp
arpl
out
call
dec
mov
cmp
mov
and
fs
gs
sti
mov
mov
(bad)
cli
xlat
jecxz
int3
inc
mov
mov
loopne
push
imul
ja
xor
ja
jo
enter
(bad)
mov
mov
arpl
imul
in
iret
(bad)
mov
sub
popa
adc
pop
ret
lods
sub
ins
add
shl
fwait
mov
popf
fwait
inc
jb
inc
sti
pop
aad
cli
lahf
mov
pushf
sar
sub
dec
mov
out
jecxz
push
and
and
push
sbb
push
jmp
scas
jmp
dec
or
scas
div
pop
and
adc
xchg
xchg
in
lods
lea
maskmovq
not
fbld
(bad)
jle
jmp
or
stos
iret
jge
ficomp
hlt
mov
scas
jnp
out
sub
jl
fdiv
cmp
outs
stos
sbb
lea
call
pop
test
adc
(bad)
shl
or
dec
xchg
pop
mov
mov
cmc
call
ror
addr16
call
mov
mov
loop
hlt
cdq
arpl
or
dec
int3
jmp
fnstenv
adc
mov
fdivrp
out
in
jge
push
dec
(bad)
sbb
push
(bad)
adc
push
mov
(bad)
mov
out
addr16
pop
scas
mov
mov
call
jecxz
out
fidivr
ins
and
xchg
xor
dec
movs
sbb
(bad)
cmp
inc
xor
xor
and
sbb
dec
sbb
cmc
into
loopne
js
aam
adc
sar
ins
sub
test
mov
dec
add
mov
pop
push
test
int3
mov
cmps
jmp
xchg
(bad)
xor
rcl
mov
xor
lods
xchg
nop
jl
popf
cmp
cmc
add
inc
cli
daa
retf
add
nop
enter
fnstenv
loopne
jecxz
mov
stc
adc
sub
sbb
call
lahf
cli
cmp
xchg
call
mov
fisttp
mov
xchg
push
inc
pop
fwait
xchg
ss
fwait
ss
ja
and
sbb
inc
stos
in
push
inc
ja
push
js
call
les
packsswb
sub
jae
icebp
cdq
dec
nop
test
push
das
call
gs
jmp
adc
(bad)
icebp
add
sub
shr
mov
and
out
push
pop
in
mov
add
mov
rcr
mov
xor
mov
add
or
mov
pop
adc
retf
lock
test
rcl
fmul
enter
jmp
enter
xor
push
adc
in
bound
sub
xchg
cmp
xchg
lods
je
add
retf
lock
pop
inc
push
mov
fidiv
jg
pop
sub
lea
mov
jmp
pop
repz
and
loop
loop
adc
fs
sub
mov
mov
add
test
aas
movs
inc
mov
mov
rcl
test
push
gs
inc
sar
aam
lock
sti
pop
int3
dec
jns
inc
gs
add
pop
cmp
add
jp
ret
imul
mov
out
dec
sahf
test
push
fwait
into
fld
mov
daa
or
call
jnp
cmp
mov
cs
or
into
dec
(bad)
dec
sbb
jge
inc
jle
cmps
inc
xor
push
rcl
gs
fucomip
sbb
add
stc
xchg
cwde
iret
ror
movs
ret
cmp
fwait
mov
sub
xchg
jle
(bad)
dec
fnstsw
popa
cmp
and
or
sub
iret
fild
ins
popf
sbb
test
mov
shl
cmp
mov
in
mov
add
jecxz
pusha
je
mov
pop
lahf
pop
sub
dec
in
(bad)
adc
fistp
and
(bad)
hlt
adc
or
fdivr
inc
(bad)
iret
pushf
push
xchg
shr
jb
pop
inc
call
mov
rol
jmp
sahf
jle
push
in
xor
lahf
xchg
sub
dec
pop
(bad)
rcr
and
aam
xchg
push
pop
in
pop
in
daa
push
nop
jmp
test
jae
jbe
clc
mov
sub
imul
and
push
mov
sti
add
inc
and
test
rcl
dec
scas
add
dec
mov
mov
lea
leave
dec
ret
jmp
leave
pushf
sbb
daa
xchg
icebp
sbb
and
dec
test
jbe
mov
mov
sub
or
test
push
iret
(bad)
mov
mov
pop
shl
or
jle
call
sub
out
push
into
jecxz
xor
jbe
push
mov
cwde
fcmovnb
sub
shr
xchg
call
or
push
cmp
add
fstp
mov
fnstenv
sbb
mov
cmp
mov
ins
jmp
dec
neg
xchg
and
imul
xlat
adc
neg
cdq
cmp
or
sbb
mov
mov
outs
jp
jno
and
sbb
out
mov
sub
push
adc
jae
fadd
cld
sub
call
sbb
dec
test
xchg
and
add
sahf
adc
or
out
fist
js
lock
mov
dec
lock
test
inc
cs
out
int
in
xor
adc
mov
stc
xchg
fwait
sbb
mov
(bad)
iret
addr16
xor
xlat
(bad)
cld
in
aad
push
fimul
call
cdq
add
test
dec
jb
cmps
out
test
movs
(bad)
dec
mov
xchg
jns
in
imul
stos
push
test
(bad)
(bad)
(bad)
out
outs
lea
test
mov
fcomp
xor
push
retf
sub
in
mov
lods
fdiv
xchg
and
cmp
jecxz
push
sub
mov
das
cmp
jne
mov
jbe
and
sar
push
mov
int3
adc
pop
fisubr
push
xor
adc
pop
xchg
out
mov
pop
xor
xchg
dec
aas
cmc
pop
and
or
dec
sub
movs
mov
jnp
jns
(bad)
mov
adc
xchg
sbb
cmc
sub
xor
push
outs
push
ficomp
add
retf
push
aad
push
(bad)
cld
cdq
rdmsr
in
cmps
push
stos
sbb
dec
(bad)
pop
sar
mov
pushf
aam
in
into
dec
in
out
dec
out
mov
sbb
cmp
sbb
jecxz
jo
inc
leave
jg
pop
mov
jae
or
xchg
scas
or
mov
push
je
cld
repz
mov
dec
ret
xor
xchg
xor
aad
enter
into
push
test
and
test
popf
pop
aam
call
pop
test
sbb
cmp
inc
lods
fs
cmps
sar
xor
mov
pop
jno
lock
sub
sahf
mov
jne
call
inc
cli
inc
hlt
adc
iret
les
xchg
push
mov
sub
mov
mov
mov
mov
test
movs
sbb
mov
lea
scas
fnsave
mov
add
mov
jecxz
jae
dec
loopne
push
repnz
add
add
(bad)
into
es
in
in
call
(bad)
fimul
pop
mov
mov
inc
(bad)
in
dec
mov
popf
sti
scas
dec
daa
data16
dec
pop
inc
mov
add
test
std
fdivr
loope
cmp
add
arpl
mov
mov
stos
jo
dec
mov
add
cli
ret
call
xchg
ret
cmp
sub
sbb
mov
or
sbb
xor
ds
push
mov
dec
aad
inc
jne
out
adc
ss
adc
sub
scas
add
add
scas
imul
outs
mul
imul
inc
lock
call
out
pop
test
jecxz
jnp
in
ror
jb
sub
xlat
sahf
loopne
pop
jno
push
out
loop
or
mov
int3
mov
sbb
mov
daa
clc
dec
inc
mov
sub
mov
jl
test
jg
es
ffreep
addr16
movs
test
nop
inc
xchg
std
mov
out
or
out
xor
clc
xor
(bad)
ins
cli
xchg
out
lds
inc
pop
sar
dec
and
dec
dec
xor
and
das
cli
enter
mov
mov
or
jmp
jl
mov
sub
jmp
in
jle
loop
das
or
mov
jmp
imul
movs
sub
out
in
xchg
retf
push
dec
ret
pop
pop
icebp
retf
push
mov
jno
add
mov
and
adc
das
out
imul
sub
jbe
iret
mov
outs
repz
out
or
psrlq
jmp
push
stos
call
cmp
jmp
popa
mov
pop
fidivr
(bad)
push
mov
sbb
int3
pusha
jae
add
xchg
or
sub
mov
pop
out
sti
jne
sub
dec
push
or
mov
jnp
push
push
cmp
and
test
std
cli
cwde
sti
clc
mov
dec
inc
outs
inc
jp
(bad)
mov
mov
push
pusha
xor
popf
mov
push
push
int3
sbb
sbb
dec
bnd
xor
test
and
(bad)
bswap
nop
add
in
fcmovu
dec
inc
pusha
and
add
dec
mov
mov
test
nop
stos
sub
sahf
or
fisttp
inc
(bad)
fidivr
pop
inc
pop
mov
pop
mov
xor
cld
retf
sub
mov
or
mov
repnz
jl
stos
adc
push
mov
cwde
(bad)
jae
in
(bad)
clc
inc
fcomp
test
adc
icebp
jmp
aad
sbb
mov
inc
xchg
in
push
mov
jnp
fcom
dec
push
mov
fs
out
xchg
fsub
cmp
out
stc
repz
pop
jnp
rcr
sub
pop
(bad)
jae
xor
sbb
mov
push
sti
mov
jo
call
imul
arpl
std
mov
stos
das
inc
das
mov
cmp
dec
xor
sar
mov
jns
pop
shr
(bad)
xor
pop
retf
loopne
adc
push
cmps
pop
retf
push
and
repz
aam
retf
repnz
int
or
pop
inc
mov
dec
or
clc
rol
mov
(bad)
jbe
es
add
mov
sub
sub
jbe
test
ror
imul
pusha
adc
mov
sar
or
aas
movs
cmp
dec
mov
xchg
out
push
imul
outs
lods
test
iret
in
(bad)
je
outs
mov
xchg
repz
aam
sbb
lea
in
or
aad
xor
push
cmps
pushf
cmp
push
inc
movs
or
push
retf
jp
dec
inc
adc
and
mov
pop
out
loope
mov
je
xchg
imul
outs
out
scas
fimul
jecxz
out
jns
adc
mov
pop
(bad)
jge
cmp
(bad)
push
adc
nop
sub
rcl
fadd
ins
add
retf
dec
dec
gs
push
push
data16
mov
cmp
pop
pop
mov
and
ficomp
dec
push
inc
and
jne
xchg
ja
push
rcl
push
xor
cmp
cmp
sbb
mov
add
add
lock
add
dec
cvtps2pd
outs
inc
jge
push
xchg
clc
out
add
out
jnp
cmp
push
ins
inc
imul
ja
sar
inc
mov
push
xor
iret
in
jl
aam
pop
retf
sub
fmul
push
mov
inc
sub
inc
mov
push
call
xchg
ret
jle
cwde
loopne
(bad)
sti
mov
test
sbb
div
scas
xchg
or
call
dec
xchg
icebp
mov
inc
mov
push
fcmovb
retf
xchg
mov
push
push
add
sub
sub
mov
mov
(bad)
cmp
xchg
arpl
sbb
fst
pop
clc
mov
fisttp
dec
mov
mov
or
lock
dec
fsub
jmp
aam
mul
(bad)
dec
inc
and
shl
mov
adc
mov
cld
(bad)
mov
inc
xor
jbe
xor
cld
inc
pop
xchg
sbb
push
adc
or
sub
pop
ret
push
sub
mov
leave
leave
popf
lahf
xchg
sub
fdiv
and
sub
mov
mov
lds
mov
or
fadd
pop
jae
mov
out
jns
mov
add
cmc
mov
inc
jno
(bad)
inc
sbb
rcl
cmps
outs
or
sub
dec
clc
add
jnp
jns
add
cmp
js
pushf
mov
dec
stos
div
cs
fnstsw
pop
xchg
pop
imul
loop
iret
adc
(bad)
cld
cmp
das
stos
test
pop
push
sar
lock
cmc
into
fisubr
stos
loopne
pop
push
inc
mov
push
xchg
or
xchg
pop
pushf
nop
xchg
daa
xlat
das
and
call
push
(bad)
es
scas
jg
and
sbb
xchg
sub
pop
inc
fnstenv
mov
(bad)
ins
(bad)
mov
repz
ja
fsub
push
or
test
xor
sbb
sub
pusha
push
test
xchg
dec
mov
mov
and
call
lds
cwde
dec
bound
and
pop
sbb
pop
adc
mov
push
push
or
and
mov
fdiv
out
ret
stos
not
out
mov
push
retf
jno
adc
call
seta
dec
scas
shr
mov
arpl
cld
mov
jmp
pusha
xchg
arpl
aaa
in
jmp
jle
mov
push
xchg
and
mov
lock
push
ret
push
push
fst
ss
or
jns
ja
and
imul
sahf
shl
(bad)
mov
imul
push
out
fstp
push
inc
(bad)
jae
push
sub
mov
adc
lahf
sbb
shl
scas
fwait
pop
jne
mov
popf
jg
mov
push
mov
outs
xchg
out
popa
arpl
dec
and
jns
sub
xor
popa
mov
or
dec
adc
lods
stc
push
lds
sbb
jmp
fsub
mov
imul
push
in
mov
mov
and
ds
mov
jbe
pusha
rcr
or
add
sar
sbb
cmp
xlat
mov
and
mov
ficomp
out
lods
mov
fcom
sub
push
aad
mov
sahf
jbe
sbb
mov
pop
inc
push
xor
shr
mov
imul
outs
xchg
scas
push
aam
mov
push
scas
mov
mov
dec
and
aas
or
pusha
sub
push
inc
fnstcw
outs
ss
jmp
xor
lods
sbb
cmp
ret
movs
(bad)
push
mov
mov
cld
pop
cdq
je
mov
jo
(bad)
test
shl
mov
in
sub
cmp
pop
ja
xchg
aad
dec
rol
dec
std
pop
in
push
adc
cmps
dec
test
push
(bad)
mov
mov
loope
rcl
popf
push
mov
xor
mov
imul
cmp
popf
jb
mov
cs
js
pop
mov
dec
inc
or
xchg
stos
sti
inc
xlat
cmp
push
jae
outs
repnz
xchg
lds
fnstsw
add
cmp
outs
cmps
lods
inc
push
loop
in
fs
mov
or
icebp
jb
fistp
push
nop
adc
rol
mov
sbb
dec
pop
out
jno
cs
mov
sub
mov
inc
(bad)
sub
nop
das
(bad)
dec
xchg
sub
cmp
nop
xchg
sbb
inc
call
sub
inc
cmp
fsub
ins
mov
push
loop
add
push
cmc
(bad)
imul
cmp
icebp
enter
xor
fwait
loope
shr
jmp
nop
int3
push
mov
sub
sub
push
test
cmp
shr
xchg
jmp
fld
push
xchg
jg
or
int3
lock
cmp
stos
xchg
jne
add
pusha
mov
pop
xchg
sub
in
leave
mov
jbe
imul
js
cmp
xchg
mov
dec
inc
xchg
or
dec
xchg
jmp
movs
lock
hlt
(bad)
push
(bad)
jb
jne
je
sbb
xchg
xchg
mov
test
pop
int3
pusha
or
xchg
pop
pusha
mov
gs
jge
adc
enter
test
pop
sub
sub
push
pop
cmp
and
cmp
in
pop
leave
inc
int
gs
es
iret
outs
jmp
cmp
jb
mov
movs
call
fld
in
jmp
dec
ficomp
mov
pop
scas
and
test
out
aaa
stos
pop
xor
inc
mov
ret
pop
scas
or
push
cmp
aaa
shr
sbb
pop
ss
nop
jg
sar
mov
or
or
mov
shl
ret
jge
pop
fldcw
add
daa
pop
sub
mov
push
rcr
jle
popa
push
(bad)
fcmove
cli
repnz
leave
cmp
dec
movs
pop
xor
nop
lds
fwait
or
lods
xor
mov
rol
or
ret
nop
aad
mov
(bad)
fbstp
iret
mov
fdiv
sbb
cdq
mov
cmp
rcr
dec
pop
stos
xchg
inc
mov
pop
adc
outs
or
repz
fisttp
xchg
mul
enter
stos
idiv
inc
add
cmp
dec
pop
retf
and
sub
data16
jae
cld
jne
int
jns
gs
call
sub
mov
data16
(bad)
fild
push
aaa
add
lahf
pusha
xchg
leave
inc
outs
or
push
pop
aam
jmp
adc
cld
clc
sub
or
push
dec
enter
bound
daa
loopne
inc
jns
mov
push
lods
mov
mov
fwait
sub
cmps
outs
outs
aad
movs
not
sbb
mov
dec
test
jb
mov
data16
outs
xchg
pop
bound
xchg
xchg
jle
imul
pop
sub
call
inc
or
cwde
push
fptan
aas
std
pop
xor
stc
lea
cmps
or
xor
push
ret
add
add
repz
cwde
les
iret
pop
mov
movs
ins
or
push
mov
sub
mov
mov
out
pop
jb
sbb
jg
retf
sub
clc
and
cwde
adc
int
rol
out
into
dec
sahf
aaa
retf
sub
sub
ins
inc
push
push
pop
add
add
xchg
lods
sub
cwde
pop
cmps
jb
call
adc
pop
xchg
int
mov
inc
push
test
call
ss
std
out
jae
sahf
inc
fst
mov
dec
hlt
push
or
out
adc
stos
fldcw
push
ror
sub
inc
ror
stc
aad
mov
dec
pop
inc
push
test
dec
imul
jo
call
bound
dec
push
sbb
ins
(bad)
out
into
sub
loopne
xchg
cmps
loope
arpl
sbb
loop
jne
js
mov
pop
inc
mov
jl
loop
mov
(bad)
aaa
mov
jle
xchg
jo
fistp
out
(bad)
mov
add
mov
push
(bad)
rol
jmp
mov
pop
jle
ret
les
out
xchg
cdq
xchg
retf
leave
adc
pause
maskmovq
imul
jl
xchg
mov
add
stc
cmp
out
lods
(bad)
shl
cmp
push
inc
lock
sar
mov
std
mov
jmp
cmps
stos
call
aas
inc
xor
mov
cmp
ds
ins
cmp
dec
(bad)
clc
call
lahf
or
xchg
es
push
mov
cmps
(bad)
mov
dec
nop
pushw
(bad)
fwait
cmp
inc
cmps
loope
inc
aas
out
popf
loope
cli
pop
cwde
or
in
xor
ds
std
inc
leave
sbb
push
test
jecxz
arpl
sbb
daa
xchg
mov
(bad)
in
sbb
xchg
out
scas
outs
jb
mov
movs
add
inc
jmp
idiv
pop
outs
or
in
movs
(bad)
iret
(bad)
popf
sahf
adc
movs
xor
scas
jmp
adc
test
shl
jl
mov
xchg
aam
xchg
pop
in
mov
or
out
sub
addr16
fldcw
(bad)
jmp
push
cs
mov
out
inc
clc
xchg
std
stos
int3
shl
cmp
int
or
pop
inc
inc
imul
mov
aad
or
jb
fstp
cmp
scas
out
in
xor
(bad)
fidiv
loope
and
sbb
jmp
ret
xchg
sbb
dec
add
xchg
sbb
xor
inc
mov
dec
jo
or
jp
scas
and
shr
int3
les
dec
push
sbb
and
retf
fdiv
add
rol
scas
jmp
sbb
push
jb
sub
push
push
push
fwait
int3
sbb
rcr
scas
aad
int
cmp
jecxz
arpl
sbb
addr16
xchg
jl
retf
ja
pop
imul
xchg
cmp
push
mov
pop
cmp
test
inc
cmp
mov
jmp
inc
test
jmp
loope
enter
ss
inc
ss
je
(bad)
and
xor
fimul
mov
or
sar
cld
(bad)
imul
mov
jns
inc
pop
mov
add
jno
mov
popf
scas
js
jecxz
movs
xor
sbb
stc
pop
enter
or
imul
int
(bad)
aas
movs
pop
pushf
cmps
pop
imul
aad
imul
jmp
pop
push
(bad)
shl
cdq
jo
inc
pop
ret
xchg
cdq
dec
add
or
adc
pop
xchg
xchg
(bad)
xchg
fcmovnu
dec
pop
mov
adc
std
loopne
add
mov
in
movd
mov
sahf
fidivr
cmp
aaa
cld
js
jl
mov
(bad)
pusha
mov
or
in
repnz
int
stc
shl
lods
les
cli
dec
add
dec
adc
cmp
push
outs
jg
les
or
inc
dec
sbb
xlat
in
ror
sahf
mov
xchg
mov
pop
mov
pop
bound
in
mov
cmp
push
xor
retf
pop
and
(bad)
push
call
sbb
cmp
cmp
xchg
jno
adc
in
mov
addr16
pop
cs
inc
or
mov
jle
je
imul
rcr
jp
push
hlt
repz
mov
push
imul
pop
ins
dec
retf
pop
bound
cli
je
mov
pop
and
iret
mov
gs
push
fmulp
mov
xchg
mov
out
inc
inc
jae
and
mov
jae
jns
cmps
mov
cdq
and
add
dec
mov
mov
mov
or
xor
fcom
push
dec
push
ror
push
mov
lock
xchg
push
push
push
sub
scas
into
(bad)
into
mov
call
sti
aad
add
sub
inc
pop
xor
cmp
in
mov
xchg
out
cld
loopne
ja
div
pop
in
sub
aam
add
daa
inc
in
jmp
and
inc
and
pop
xchg
je
gs
or
and
mov
mov
sti
mov
sub
aad
jmp
mov
or
mov
das
test
jnp
pop
cmps
aas
push
or
bnd
jnp
push
xor
outs
inc
data16
ds
mov
shl
mov
mov
in
jl
or
and
and
(bad)
jno
test
sbb
retf
leave
sub
cmc
imul
ds
or
dec
mov
cmps
cmps
jo
mov
xchg
out
add
in
sbb
mov
sbb
or
out
mov
pop
movs
inc
push
xor
jne
push
mov
aas
add
push
outs
jp
xor
jb
mov
mov
je
in
int3
xchg
ret
push
lds
dec
mov
inc
(bad)
(bad)
into
or
push
add
shr
ins
imul
mov
sub
pop
dec
and
gs
(bad)
sbb
jbe
or
cmp
mov
sbb
sar
push
ds
cmc
aad
imul
cld
cmc
shl
cs
cdq
inc
dec
aaa
js
inc
jmp
adc
jb
dec
pop
add
test
je
jle
mov
jne
mov
mov
jg
push
jae
ret
jnp
push
cwde
loope
mov
and
inc
inc
or
loop
fcomip
push
or
pop
cwde
je
jmp
sar
cmp
loope
jle
push
std
xchg
xchg
push
push
in
fs
cli
jecxz
std
ss
add
iret
(bad)
xchg
dec
xor
and
mov
adc
or
cdq
lods
cs
xchg
lods
sub
or
mov
je
xchg
adc
adc
pop
fdiv
and
adc
(bad)
cmp
je
xchg
xor
sub
mov
adc
mov
pop
(bad)
cld
test
loope
scas
es
cmp
bound
ins
xor
ins
push
(bad)
jo
push
stos
stc
out
add
dec
xor
jmp
sub
dec
adc
inc
sbb
loopne
(bad)
mov
and
out
and
push
xor
sar
test
fst
int
xor
inc
jnp
push
scas
pop
les
adc
xor
push
(bad)
fwait
adc
lods
repz
add
pslld
jecxz
lahf
fist
sub
jge
xlat
pop
push
sbb
dec
test
jae
mov
cmp
fdivr
mov
in
pusha
mov
addr16
aas
fldlg2
inc
xchg
mov
cld
jmp
(bad)
xchg
xchg
cmps
or
jmp
repz
push
stos
cli
xchg
ret
push
xchg
div
inc
push
mov
fldcw
sahf
fnstenv
xchg
xor
test
int
or
adc
xor
mov
stos
int
popa
(bad)
adc
int3
(bad)
(bad)
and
(bad)
xchg
push
enter
jns
xchg
pop
adc
lock
and
(bad)
cwde
sbb
bound
cmc
imul
dec
pusha
sbb
test
jmp
mov
push
test
pop
and
jae
fidivr
sub
ins
and
mov
mov
test
call
iret
add
fcomp
sub
dec
fwait
(bad)
psllw
push
fdivr
ja
cmp
int3
loop
loopne
push
dec
push
and
(bad)
cmps
push
movs
fsub
rol
pop
scas
mov
pushf
cld
(bad)
aad
sbb
inc
lock
push
inc
mov
jo
stc
popf
inc
push
pop
repz
mov
xor
sub
loope
inc
xchg
jp
add
int
xor
pcmpgtw
es
mov
daa
cmp
and
add
inc
nop
fcom
and
stos
or
stos
push
ins
ret
fistp
mov
cwde
(bad)
gs
imul
shl
jbe
or
repnz
int3
sub
je
pop
std
jmp
(bad)
call
sbb
imul
pop
adc
call
test
jbe
lahf
cmp
pop
mov
in
iret
rol
or
dec
adc
in
mov
and
mov
cmp
and
stc
jb
cwde
xchg
sahf
je
mov
xchg
lock
clc
imul
iret
adc
push
fs
je
mov
sub
mov
retf
xor
push
int3
pop
aad
pop
jmp
ds
cmp
push
xor
push
jae
lods
push
imul
mov
rol
or
jns
cmp
mov
mov
sbb
mov
push
jge
out
mov
pop
sub
ins
(bad)
hlt
test
(bad)
mov
retf
icebp
ins
(bad)
sbb
lock
stos
dec
mov
mov
inc
or
rcl
mul
movs
sbb
in
outs
dec
bsr
dec
jmp
shl
mov
sbb
push
mov
jle
inc
or
mov
cmp
leave
mov
pop
aas
jg
int
xchg
adc
fild
cmp
test
mov
adc
(bad)
xor
aad
(bad)
xchg
daa
cs
sbb
lock
mov
sub
cmc
(bad)
push
hlt
pusha
bound
jbe
mov
adc
mov
push
call
fadd
sahf
(bad)
ins
cli
mov
call
jl
pop
adc
test
push
cdq
scas
repnz
pop
cli
jmp
mov
aad
jp
nop
aas
xor
retf
and
in
xchg
jl
jge
sbb
and
inc
cdq
cmp
(bad)
jp
int3
dec
stc
cmovns
xchg
sbb
inc
mov
pop
cmp
mov
jb
and
lahf
xchg
cli
popa
out
rcr
popf
add
xchg
sti
int
mov
jbe
inc
xchg
out
hlt
scas
inc
test
push
out
pop
imul
jmp
pop
push
fst
aaa
inc
jmp
fwait
mov
cmp
test
lds
sbb
jmp
out
jbe
scas
retf
adc
sub
sub
xchg
sub
xchg
mov
xor
outs
sub
and
inc
xor
in
outs
xchg
push
pop
jp
enter
xor
push
cmp
fidiv
icebp
sub
(bad)
ror
jnp
jbe
cwde
repz
pop
lahf
cmc
jge
pop
mov
pop
mov
mov
ret
cmp
mov
fsubr
jge
nop
add
sbb
out
pop
cmp
loope
(bad)
imul
dec
mov
jns
cmp
mov
cmps
cmps
out
adc
sbb
inc
sahf
lods
das
push
mov
ja
fwait
ins
sub
jb
pop
std
rcr
jle
lock
mov
das
dec
cmp
popa
jno
xchg
push
popa
mov
iret
in
pop
ss
jno
out
mov
push
mov
imul
ds
std
test
xchg
lea
sub
mov
dec
(bad)
(bad)
arpl
ja
(bad)
iret
call
jg
cmp
fild
inc
fst
rcl
add
cmp
mov
or
push
ret
push
popf
pop
pop
mov
mov
sti
pop
pop
ficomp
cmp
leave
in
jne
out
sahf
xchg
retf
mov
in
adc
retf
adc
inc
xchg
sbb
pop
xchg
inc
je
fnsave
sti
scas
push
xchg
mov
mov
addr16
add
(bad)
mov
cmps
call
mov
cmp
xor
dec
call
stc
dec
stos
inc
iret
ficom
jbe
sbb
dec
mov
fcomp
imul
sub
fucomip
fdiv
das
popf
add
mov
or
ds
pop
adc
fcom
mov
cmp
cmps
rcr
xchg
xchg
mov
arpl
xor
xchg
enter
push
inc
xchg
pop
mov
aas
add
js
push
lock
cmp
inc
push
push
dec
mov
inc
dec
ret
xor
cmp
sub
rol
sub
add
in
fimul
jbe
(bad)
xor
retf
mov
mov
imul
outs
aaa
jmp
adc
add
and
cwd
popf
int
or
inc
fucomp
cdq
adc
stc
out
xor
out
idiv
pop
inc
add
sub
in
cmp
ret
jmp
imul
pop
inc
ins
jl
mov
sub
out
retf
je
repnz
addr16
aas
iret
(bad)
aas
aad
mov
push
jg
mov
xchg
imul
pop
push
dec
add
adc
aam
add
(bad)
les
and
popf
adc
adc
dec
sbb
outs
xor
(bad)
mov
popf
xor
call
out
mov
mov
lods
jle
stc
sar
jae
iret
and
mov
dec
outs
mov
and
mov
lods
push
xor
cli
xor
mov
push
or
icebp
jecxz
movs
data16
or
es
mov
retf
lahf
adc
and
sub
bound
out
bound
arpl
and
lds
sub
(bad)
mov
es
call
movs
jb
mov
mov
into
repz
mov
shr
and
push
scas
mov
mov
xor
xchg
cld
pop
jg
pusha
push
aad
outs
mov
or
ds
retf
xchg
(bad)
cmp
add
repz
in
les
push
jmp
loopne
shl
mov
in
cwde
retf
and
mov
in
std
out
inc
sbb
out
pop
xchg
pop
pusha
inc
sub
xchg
(bad)
in
mov
sbb
imul
sbb
jb
mov
ret
push
test
aam
dec
dec
fcmovb
rcr
std
scas
push
dec
xor
loop
retf
fsubr
and
stc
jge
pop
xchg
adc
div
xor
pop
push
jbe
fisttp
mov
jne
test
and
fimul
jmp
jbe
movs
sti
sti
adc
or
xor
sub
sub
ins
cwde
push
test
or
fwait
dec
adc
repnz
mov
cmc
outs
fwait
aaa
dec
in
xor
sub
xchg
dec
mov
aaa
lock
not
jmp
or
and
adc
popa
xchg
sbb
xchg
daa
inc
mov
sbb
lea
inc
into
js
cmps
imul
test
rep
push
xor
jmp
es
push
cmps
lds
and
call
in
and
jae
push
mov
and
mov
das
xor
dec
add
stc
loop
ins
sahf
fcom
bound
ja
dec
xor
xchg
(bad)
out
dec
sub
arpl
add
ret
dec
inc
(bad)
jns
add
(bad)
add
js
int
xlat
xlat
inc
xor
push
mov
dec
inc
mov
fistp
or
in
and
mov
mov
int3
sub
das
cmp
popa
fisub
jmp
rol
jmp
inc
pop
cli
xor
(bad)
arpl
test
sub
div
jmp
xchg
mov
fwait
add
xor
adc
out
add
loopne
call
or
jbe
cmp
rol
aad
cwde
(bad)
or
mov
xchg
icebp
aas
inc
ds
dec
mov
lods
sar
or
inc
add
dec
dec
and
sub
pop
retf
enter
push
cmps
fadd
hlt
fisttp
retf
adc
mov
shr
shl
mov
in
push
jmp
dec
and
push
dec
cmc
adc
adc
pop
and
or
adc
pop
lods
xchg
cmp
cmp
xor
pop
in
jp
adc
cmp
retf
lods
push
into
cli
mov
sub
mov
movs
pop
(bad)
aad
inc
and
(bad)
sbb
mov
and
icebp
(bad)
add
jge
ss
add
sub
cwde
shl
push
jb
(bad)
(bad)
jnp
fiadd
mov
or
mov
cmp
mov
cmp
sbb
dec
daa
outs
jnp
jno
sub
addr16
clc
pop
out
sti
ret
in
fwait
sbb
xlat
inc
mov
fs
ins
jno
cmp
cmp
inc
ret
dec
xor
sub
int
aaa
or
shr
xchg
jbe
ds
xor
adc
std
lods
out
call
add
ins
mov
fs
pop
leave
add
in
push
iret
daa
ja
pop
dec
or
add
out
lods
push
dec
mov
ja
xchg
mov
adc
vcvtdq2pd
cld
mov
jb
pop
or
mov
jp
bound
xchg
add
mov
xor
and
sub
loopne
movs
or
inc
dec
(bad)
sub
inc
xchg
shr
aad
pmuludq
cmps
mov
arpl
ret
out
loope
mov
shld
jl
fisub
pop
or
cmps
sbb
mov
dec
xlat
(bad)
fld
repnz
lods
jecxz
cmp
add
in
sar
in
sub
add
xchg
ror
pop
ins
mov
mov
daa
mov
out
mov
(bad)
enter
mov
lods
mov
mov
xchg
jbe
xor
sub
dec
popa
(bad)
loope
pop
les
mov
cmp
push
pusha
retf
fwait
addr16
adc
sar
push
inc
mov
mov
das
mov
cmp
or
gs
lahf
jo
stos
stos
xchg
inc
rcl
mov
mov
ret
push
loope
inc
(bad)
fwait
das
pop
pop
jecxz
mov
and
jle
jns
xchg
pushf
cli
mov
push
lahf
fisubr
ds
pusha
outs
test
xchg
pop
(bad)
aas
mov
(bad)
aas
pop
jnp
movs
push
and
sbb
rol
(bad)
xor
jg
cmp
loopne
mov
mov
sub
jne
sub
outs
outs
inc
cmp
push
mov
jb
ss
jle
outs
jmp
jo
out
sti
popf
sbb
(bad)
into
or
div
fmul
mov
dec
mov
xor
pop
inc
pop
and
xor
mov
cmp
call
not
or
pop
xchg
adc
retf
sub
adc
pushf
in
jb
inc
inc
jmp
add
into
or
call
enter
out
push
pop
pop
ss
add
add
push
(bad)
inc
icebp
sti
adc
mov
xchg
xor
pushf
inc
adc
movs
cmp
cli
sub
sub
jb
in
shl
fdivr
jns
push
bound
pop
bound
xchg
pop
push
lock
pop
icebp
or
lock
pop
mov
mov
int
pop
pop
int3
retf
pop
fiadd
jg
jmp
fdiv
adc
pusha
pop
xlat
pop
shr
inc
popa
mov
in
mov
test
sbb
imul
or
and
xor
fwait
iret
cmp
fs
movs
mov
mov
retf
es
mov
pop
lahf
jbe
or
test
xor
xchg
sti
jge
push
inc
std
jg
adc
ds
cmp
xchg
js
mov
bnd
jb
cmp
jecxz
cli
mov
pop
(bad)
pop
data16
pop
(bad)
push
mov
dec
out
inc
inc
mov
and
sub
xor
push
push
mov
push
in
jecxz
mov
fimul
mov
xchg
popa
ins
ficom
fst
fwait
in
sbb
dec
adc
mov
out
sub
(bad)
sub
loopne
ret
sbb
jno
jmp
popa
push
cdq
jns
and
push
push
or
adc
out
xor
std
mov
mul
pop
jae
ds
dec
sahf
xor
out
add
sub
fcom
dec
and
inc
inc
ins
hlt
inc
pop
fcom
mov
cmps
xchg
and
inc
pop
into
ret
mov
mov
mov
jnp
ret
dec
mov
lds
jmp
add
pusha
lds
mov
imul
stos
lea
mov
aaa
das
push
push
dec
xchg
stos
xchg
xchg
mov
cs
add
fidiv
int3
push
dec
dec
div
sub
adc
nop
push
enter
test
or
jns
xchg
cmp
ret
leave
les
cmp
in
pop
ja
into
jns
cld
mov
push
inc
jbe
cmp
cs
imul
jno
retf
repz
pop
sbb
loope
gs
jbe
mov
outs
sahf
std
(bad)
enter
mov
mov
sub
movs
fimul
pop
test
xchg
test
inc
mov
mov
pusha
cmc
xchg
xor
daa
sbb
xchg
(bad)
es
push
push
inc
(bad)
push
push
retf
adc
dec
(bad)
sbb
je
rol
or
mov
mov
dec
mov
or
es
sar
pop
sbb
mov
imul
aaa
test
(bad)
fisubr
int3
and
pop
rcr
repnz
sub
imul
jg
xor
test
sti
push
ins
adc
call
sub
pusha
mov
fidiv
add
xchg
in
in
aad
mov
fadd
mov
cs
dec
or
xchg
jnp
enter
cmp
iret
sbb
rol
test
jae
mul
rol
outs
popf
jl
add
rol
xchg
mov
stos
fldenv
adc
sub
dec
(bad)
aad
add
ins
or
pop
dec
xor
add
movs
jge
sbb
loop
xor
push
mov
cmp
pop
inc
in
outs
dec
or
dec
cmps
push
mov
bound
movs
call
inc
stos
repz
push
mov
(bad)
in
(bad)
pusha
jecxz
dec
(bad)
or
vmread
mov
sub
jecxz
cs
or
and
mov
xchg
dec
push
xchg
rep
movs
sub
xor
adc
lds
pop
pop
aas
mov
jmp
retf
mov
stos
call
xor
sbb
repnz
pushf
sub
jnp
adc
add
call
lods
sbb
pop
jno
push
test
mov
test
xlat
ins
rol
movs
adc
sbb
fmul
mov
dec
dec
push
jne
jp
mov
xchg
cmovge
mov
cmps
popf
jb
pop
sbb
stc
lds
mov
mov
rcl
sbb
sub
mov
and
cmp
push
pop
jae
or
jmp
xchg
lahf
outs
pop
(bad)
fucomip
mov
xchg
xchg
imul
mov
ret
and
dec
in
mov
push
fstp
imul
cld
data16
ins
mov
lahf
jge
ja
sbb
jno
mov
push
mov
xor
adc
daa
ret
mov
jecxz
sub
jle
jmp
shr
fisttp
cmps
pop
mov
les
sub
and
punpcklwd
inc
sbb
stos
test
jno
adc
fld
stos
mov
and
icebp
ret
cs
jo
fucomp
mov
inc
test
repnz
jmp
pop
mov
push
push
(bad)
sti
push
pop
push
pushf
daa
test
add
es
mov
in
push
push
ret
fiadd
sbb
test
(bad)
jb
aam
xchg
popf
ret
jl
movs
jg
test
int
adc
daa
and
imul
dec
push
(bad)
test
sbb
fild
in
lds
adc
lock
mov
push
fdivr
daa
inc
pop
mov
aaa
sbb
cwde
fisub
dec
jmp
add
push
loop
dec
dec
jle
pop
cdq
in
sbb
sub
or
pop
adc
mov
test
test
popa
(bad)
mov
mov
pop
pop
stos
xchg
lods
ret
xlat
pop
dec
mov
cmps
inc
mov
pop
icebp
lea
fsubr
or
jmp
sbb
add
aam
adc
(bad)
jge
(bad)
test
outs
les
dec
mov
lea
call
retfw
mov
int
mov
cld
jb
adc
jecxz
and
or
je
xchg
fdiv
jne
pop
jmp
sbb
pusha
xchg
jmp
jnp
sbb
ds
push
mov
stc
cmp
loop
xchg
mov
cmps
adc
das
and
cs
mov
iret
mov
sbb
fsub
call
lods
int3
push
adc
int3
jle
jne
std
add
cmp
mov
jp
cmps
repnz
ins
push
pop
lahf
shl
call
jl
xchg
jecxz
mov
push
mov
fwait
inc
(bad)
lods
inc
dec
add
nop
xchg
sbb
xor
push
rep
rcr
mov
xor
int
cmp
sub
sub
stos
fld
fwait
sbb
mov
push
imul
pushf
xchg
adc
lds
es
push
call
loope
jmp
in
shr
add
(bad)
mov
test
push
sbb
sub
stos
sbb
outs
pusha
pop
sbb
push
dec
pushf
sbb
ss
movs
lahf
cmp
push
ret
test
and
or
dec
ficomp
stos
xor
pop
or
and
cmp
mov
adc
xchg
aaa
rcr
cmp
imul
inc
pusha
jb
lods
adc
xor
scas
das
test
pop
jp
test
mov
xchg
or
int3
pop
inc
xchg
shl
push
xchg
stos
xchg
sub
add
dec
(bad)
idiv
enter
mov
rol
mov
bound
mov
cmc
loop
retf
test
sub
fcompp
mov
dec
nop
repz
jns
out
mov
pop
mov
mov
retf
xchg
jge
push
inc
inc
and
mov
mov
out
jg
adc
imul
in
add
inc
ds
jae
push
call
fdivr
out
in
shr
adc
(bad)
data16
lods
inc
jmp
and
ret
idiv
add
ret
push
pop
push
pop
jl
sbb
test
jnp
mov
in
jmp
xchg
mov
push
xor
jmp
and
pushf
add
and
fstp
(bad)
adc
jecxz
enter
clc
adc
mov
ret
xchg
mov
(bad)
(bad)
push
pop
int
push
sbb
and
mov
adc
mov
pushf
in
retf
stos
push
ror
pop
push
xor
sti
cmps
sub
ss
cmp
pop
pusha
add
call
inc
inc
adc
fsub
push
cdq
jbe
test
pop
jecxz
or
add
mov
(bad)
adc
jo
mov
mov
call
popa
add
pop
sbb
pop
rol
call
jo
retf
fcomi
in
movs
call
rcl
repnz
inc
push
and
inc
mov
loope
jl
jae
xchg
or
or
xchg
xchg
xchg
mov
stos
test
mov
pop
mov
xchg
test
xor
jl
mov
push
jne
push
das
test
lods
sbb
jge
mov
jle
stc
ds
fbld
fs
lea
mov
mov
push
mov
cmp
scas
push
adc
inc
fs
xor
mov
stc
sbb
shl
outs
test
(bad)
retf
sbb
dec
ficomp
add
loop
bound
and
or
cmp
(bad)
shl
sub
fistp
iret
icebp
out
ins
(bad)
inc
out
fldcw
loop
pop
add
js
stc
loop
adc
mov
int
scas
out
add
dec
cmp
test
jo
mov
out
mov
pop
xchg
fwait
fs
pop
or
sti
or
je
call
push
stc
push
lods
addr16
nop
imul
fwait
mov
ret
add
xchg
repnz
(bad)
ds
fcmovnbe
sbb
(bad)
and
cmp
lahf
je
mov
jbe
ret
push
cmp
arpl
data16
dec
adc
pop
jge
out
jmp
adc
sti
(bad)
xchg
sub
push
mov
stos
xchg
adc
ficomp
mov
mov
out
jl
inc
xchg
xor
repnz
cmps
xchg
je
shr
mov
cmc
jmp
fist
mov
mov
sub
cmp
pop
mov
lods
or
mov
cmc
icebp
cwde
iret
mov
jmp
aas
xor
mov
ret
mov
sub
neg
loopne
fnstsw
sbb
loopne
es
test
push
sbb
jae
xor
mov
xor
std
and
bound
es
les
jne
fs
inc
xor
cmp
pop
sbb
mov
cdq
or
daa
(bad)
shl
dec
and
fdivr
clc
sti
ret
pop
adc
ja
xchg
retf
sub
inc
(bad)
cmp
(bad)
cmp
push
gs
jmp
loop
dec
push
push
jecxz
sti
loop
outs
out
ficom
mov
and
sbb
je
dec
xor
add
shr
inc
xor
dec
and
outs
iret
mov
xor
and
mov
in
mov
jge
mov
ret
and
adc
lahf
and
pop
daa
ret
fwait
pop
xor
into
les
popa
or
sbb
repnz
adc
(bad)
cdq
jge
imul
sbb
xchg
ror
cmp
dec
pop
pop
leave
outs
push
push
cli
loopne
inc
push
adc
cmp
addr16
cmps
fimul
das
mov
pop
pop
jnp
ss
out
dec
dec
mov
mov
mov
jb
xchg
or
loope
pushf
mov
cmp
mov
xor
fmul
aas
retf
cmps
sbb
pop
pop
lds
inc
xor
fwait
pop
aaa
dec
inc
sti
fneni(8087
sub
push
fwait
jns
pop
mov
sub
stc
pop
(bad)
xor
iret
jno
fistp
add
arpl
inc
test
cld
add
bound
(bad)
and
jge
pop
pop
das
adc
or
lahf
jno
add
and
sbb
out
sti
mov
push
not
adc
cmp
popf
icebp
loope
sub
jnp
gs
sahf
mov
fcomp
ret
adc
sar
in
mov
cld
cmp
arpl
jl
push
in
add
and
cmps
and
jno
pop
test
xchg
fdiv
mov
dec
std
mov
sub
push
dec
and
sbb
inc
inc
ret
icebp
shl
mov
scas
inc
mov
out
and
fwait
sbb
shr
push
jmp
xchg
cmp
int
mov
push
xchg
(bad)
mov
in
mov
cmp
fs
xor
push
pusha
pop
mov
or
jo
cmp
seto
jge
ret
mov
rcl
cld
jmp
xchg
in
push
mov
inc
mov
jnp
inc
mov
mov
push
dec
xor
xchg
push
xor
out
imul
mov
enter
inc
xlat
cld
xchg
sbb
iret
jbe
movs
sbb
mov
push
mov
scas
dec
sub
dec
rcl
sar
push
mov
sbb
pop
pop
dec
out
aas
mov
cmp
adc
lahf
pop
jnp
jbe
in
inc
push
pop
scas
stc
in
out
sub
xchg
dec
jp
ja
and
push
popf
lods
add
push
repz
add
xchg
xor
dec
out
push
dec
adc
call
ret
lock
shr
jnp
pop
fadd
sub
mov
mov
aad
mov
sbb
jae
pop
inc
ret
xor
lods
add
xchg
mov
out
pop
daa
imul
pop
mov
es
(bad)
shr
lods
mov
jl
aam
popf
add
arpl
add
mov
push
inc
adc
ret
ins
xor
loopne
pop
fcomp
pop
push
clc
mov
jg
sbb
mov
arpl
adc
cli
rcr
push
add
sbb
sub
ja
jge
cmp
int3
jb
mov
jb
or
nop
es
int3
push
and
stos
sub
inc
je
or
xor
adc
stc
push
retf
mov
add
sar
pop
jnp
and
push
hlt
(bad)
lods
enter
xchg
(bad)
mov
pop
or
jno
pop
jg
lea
xor
and
and
mov
ret
mov
jle
mov
movs
jnp
std
push
xor
adc
cmp
(bad)
into
lock
shl
xchg
cld
daa
mov
imul
or
les
pop
retf
sar
push
sbb
jb
aam
cs
push
in
push
xchg
or
repz
shl
cmp
sti
ja
loopne
hlt
mov
and
sub
ret
jge
cld
jnp
pop
fwait
data16
nop
pop
push
popa
aaa
adc
cmc
jnp
sub
jno
imul
or
int3
xchg
rol
xchg
in
pushf
call
mov
push
mov
cli
sub
inc
scas
cld
sub
test
cmp
pop
cmc
pop
or
add
je
mov
jp
fs
fimul
mov
push
icebp
xor
clc
stos
mov
dec
fs
mov
cld
ins
mov
inc
setg
int
adc
fcom
aaa
mov
call
ins
jmp
xchg
clc
pusha
push
dec
sub
fwait
push
repnz
sti
les
icebp
retf
daa
in
mov
inc
hlt
mov
das
xor
mov
mov
out
add
popf
xchg
mov
mov
dec
loopne
(bad)
in
or
shl
or
data16
ds
and
imul
movs
mov
ss
retf
cmps
add
pop
xchg
xchg
mov
rcr
lahf
fidiv
dec
movs
sub
pop
pop
and
frstor
popf
cli
dec
fdivr
leave
pop
int3
enter
fisub
inc
lahf
loopne
inc
push
cmc
call
out
push
inc
lock
mov
popf
mov
movups
fnstcw
fdivr
jb
mov
mov
fadd
repz
popa
inc
retf
popa
adc
inc
stos
mov
sub
mov
xchg
retf
js
in
in
xchg
iret
mov
outs
shl
ret
and
popa
lods
ins
mov
jp
test
pop
imul
cmps
and
mov
add
outs
out
sub
in
test
into
in
test
add
adc
and
mov
das
movs
pop
cld
xchg
inc
je
clc
scas
pushf
push
pop
xor
sub
mov
cwde
mov
ins
xchg
push
or
xchg
sub
push
jmp
(bad)
div
ja
or
leave
or
mov
push
push
(bad)
sbb
or
adc
push
or
mov
shr
and
sub
repnz
adc
or
pop
rcl
in
sbb
fnstenv
sub
xor
loopne
mov
cmp
in
hlt
sbb
in
cmc
rol
inc
pop
stos
aas
imul
sti
fnstcw
mov
outs
adc
in
into
(bad)
sbb
pop
xor
jge
in
xlat
leave
aam
(bad)
mov
xor
mov
(bad)
mov
xchg
fs
push
cmp
xchg
shl
imul
imul
push
xor
sub
push
test
xor
mov
push
pushf
mov
dec
and
movs
mov
inc
sbb
cmps
cmp
mov
aaa
pop
popf
shl
pop
js
shr
mov
push
and
test
pop
fcmovne
ud0
mov
sahf
xor
cmps
imul
cdq
cli
sub
and
xchg
cmc
push
test
cli
push
(bad)
xlat
sbb
dec
sahf
aaa
jns
mov
and
ror
adc
jmp
or
xlat
sub
bound
cmc
fadd
mov
fadd
sub
cmp
sub
pushf
es
retf
cmp
mov
jl
sar
daa
jns
jno
outs
cmp
stos
hlt
(bad)
lahf
xor
into
dec
push
xor
mov
cld
popa
imul
clc
fidiv
pop
loopne
ins
inc
das
out
cmp
push
ret
ret
adc
xchg
mov
inc
addr16
aam
dec
cmp
or
leave
xchg
inc
push
dec
push
xchg
pop
bound
lfs
adc
mov
aas
add
mov
leave
xor
mov
out
inc
dec
sbb
ret
xchg
or
and
call
mov
aas
and
hlt
or
inc
jno
dec
mov
lahf
ds
mov
pop
cmp
rcr
adc
out
frstor
add
lods
pop
mov
xchg
(bad)
sub
sub
mov
mov
es
mov
clc
jnp
into
xor
loope
loop
push
pop
cmp
mov
mov
lds
sahf
out
mov
inc
(bad)
mov
aas
test
xchg
pop
push
cli
jmp
inc
inc
test
call
mov
call
je
dec
rep
dec
test
lods
je
and
repz
dec
jno
push
fcomp
pop
mov
jge
ret
mov
inc
jo
push
out
repz
and
push
mov
dec
dec
add
xlat
das
xor
cmc
inc
adc
push
(bad)
jp
inc
inc
xor
adc
ins
pushf
int
fmul
and
mov
jl
pop
add
jge
fwait
das
dec
xchg
lds
(bad)
and
ror
jl
mov
mov
fstp
data16
cmp
stos
addr16
leave
adc
or
into
dec
or
cmp
jmp
fcmovnb
dec
cmps
xlat
sbb
cli
rcl
iret
push
xchg
les
es
and
inc
push
fimul
leave
retf
dec
jmp
in
xchg
xlat
ror
inc
mov
push
jb
or
clc
dec
sub
jp
xchg
mov
sbb
(bad)
movs
bound
lea
add
mov
inc
sar
inc
and
push
shl
mov
jbe
dec
and
mov
nop
pop
sbb
add
cmp
mov
mov
(bad)
pop
jne
shl
sub
ret
add
cmp
sbb
mov
imul
leave
(bad)
je
(bad)
test
(bad)
(bad)
add
(bad)
data16
mov
rcl
or
dec
inc
mov
clc
jg
in
icebp
pop
mov
jns
jbe
cmc
out
push
daa
loopne
or
inc
lahf
nop
lds
xchg
dec
cmp
or
push
push
jl
inc
js
icebp
mov
dec
vcvtss2sd
fcmovnbe
push
nop
das
pop
mov
dec
aas
mov
mov
or
sbb
or
in
test
push
das
add
sbb
rol
mov
jno
call
push
popf
stos
shl
repz
dec
or
les
jbe
outs
jmp
fwait
aas
dec
mov
cld
pushf
jl
ds
adc
enter
(bad)
aas
push
push
rcr
pop
push
sahf
imul
xchg
call
arpl
enter
fidiv
mov
push
push
mov
(bad)
dec
ud1
sbb
cmp
ds
xchg
aas
out
mov
jmp
(bad)
add
loop
add
outs
int3
pushf
int3
jb
dec
scas
(bad)
jge
jnp
mov
in
ja
or
push
in
loope
mov
sub
mov
push
mov
(bad)
mov
and
gs
pusha
out
(bad)
out
fistp
jle
cwde
push
out
jb
xor
pop
sub
xchg
cwde
sub
cmp
or
hlt
pop
fwait
movs
nop
enter
inc
cmp
jmp
add
sti
xor
stc
mov
jmp
neg
sub
mov
shl
dec
adc
int3
test
jns
mov
or
inc
jae
(bad)
hlt
pop
and
loop
sbb
into
sahf
mov
push
and
jg
cmp
mov
ret
test
add
pop
sbb
and
ficom
cmp
enter
pushf
loope
js
enter
jl
ficom
pop
jmp
inc
sub
cmp
or
jb
mov
fdiv
adc
into
scas
sub
xchg
adc
add
push
out
cli
xchg
mov
jecxz
mov
jb
ins
popa
loope
xor
push
mov
xor
loope
pusha
mov
rcr
rol
pushf
jns
and
sbb
aad
xchg
test
leave
and
adc
mov
in
adc
add
jmp
in
mov
(bad)
jmp
pop
ja
inc
xchg
adc
ror
in
fcom
jbe
sti
and
cmc
jl
push
fidivr
mov
adc
xchg
inc
fs
ds
push
nop
test
sbb
fmulp
in
push
adc
jne
dec
push
arpl
cli
(bad)
aaa
mov
sahf
sub
and
jns
xor
inc
scas
jns
pushf
mov
inc
push
push
dec
xchg
je
or
mov
mov
push
mov
test
mov
add
shl
imul
out
jbe
cs
lods
jmp
mov
pop
test
inc
jno
push
test
push
jg
dec
push
(bad)
and
push
push
js
je
add
fiadd
inc
(bad)
pushf
mov
inc
or
mov
mov
jo
(bad)
xchg
fld
and
test
scas
dec
push
arpl
mov
mov
xor
inc
outs
jno
popa
js
dec
add
(bad)
loopne
push
adc
outs
sbb
pop
jmp
mov
ja
fmul
or
push
push
or
or
xchg
dec
or
ins
sub
div
mov
cmc
cmps
jecxz
aam
aad
ss
mov
repnz
and
lods
leave
jne
fdivr
repz
jne
jbe
je
jns
test
and
pusha
cmp
(bad)
mov
xchg
dec
arpl
stos
mov
xor
xchg
fs
mov
sbb
frstor
mov
add
adc
sub
xor
popf
and
rcl
or
add
sbb
mov
mov
pusha
jbe
out
and
xchg
test
cmp
or
sbb
push
ins
call
push
xor
jmp
into
fistp
movs
popa
mov
dec
repz
adc
xchg
pop
call
pop
iret
iret
(bad)
cmc
rol
loope
frstor
mov
inc
lods
fdivr
sbb
pop
adc
leave
test
out
ret
out
mov
sbb
push
pop
cmps
fldcw
inc
mov
adc
aam
lock
cwde
icebp
rcl
push
xchg
inc
ror
inc
test
cmpxchg
and
inc
mov
dec
cmp
loopne
int
xor
mov
aaa
mov
int3
jecxz
(bad)
mov
dec
pushf
in
loope
out
xchg
pop
dec
xor
fisub
jb
dec
inc
dec
cmc
jb
cmp
or
aaa
jge
mov
adc
call
jl
dec
mov
aam
cmp
or
xor
gs
into
inc
sbb
add
pop
jecxz
add
push
push
add
packssdw
mov
arpl
pop
out
retf
pushf
loopne
jmp
js
sbb
sub
mov
adc
out
sbb
cdq
mov
aad
rol
push
or
sbb
sahf
in
mov
cmp
lods
or
icebp
shr
cmp
cmp
mov
in
mov
imul
sub
mov
jmp
xor
mov
mov
push
and
push
mov
jb
jns
fsubr
adc
add
dec
jns
jbe
sbb
inc
sysret
arpl
fwait
int3
leave
xor
push
sysenter
data16
cli
add
and
sahf
ins
sbb
aaa
xlat
bound
(bad)
fiadd
mov
sub
xor
xor
mov
sti
sub
jle
mov
(bad)
adc
inc
pop
ret
jbe
cli
mov
add
push
xchg
sub
cwde
jg
push
and
lods
push
dec
bound
or
and
iret
xor
leave
iret
xchg
call
stc
xchg
(bad)
mov
pop
mov
(bad)
out
jmp
inc
xchg
scas
jnp
arpl
daa
and
sub
mov
mov
call
cmps
jg
sub
call
jl
mov
dec
int3
mov
bound
in
xor
cmp
pop
mov
jns
mov
pusha
shl
inc
cmp
in
in
mov
imul
push
inc
mov
sbb
sbb
sahf
nop
pop
hlt
bound
dec
test
fs
bswap
cmp
mov
(bad)
call
loope
aaa
or
call
sbb
mov
sbb
(bad)
cli
jmp
jle
dec
lock
mov
push
jge
or
and
jmp
or
and
call
mov
mov
aaa
xor
les
addr16
leave
xchg
jbe
dec
jge
add
mov
push
inc
addr16
mov
push
fdivr
bound
out
pushf
ficom
mov
cmps
movs
in
xchg
jno
fwait
lods
in
shr
ins
mov
or
push
and
inc
lea
add
in
push
push
sbb
mov
test
js
clc
cmps
or
mov
mov
repnz
mov
dec
retf
xchg
retf
push
add
dec
and
aam
arpl
jp
jl
stos
pop
movs
cli
movs
mov
push
js
cwde
xchg
loopne
pop
push
mov
lds
push
push
cmp
push
shl
cmp
xchg
cmp
jns
out
cmp
fldenvw
cmp
mov
rcr
jb
pop
aad
jbe
xchg
or
movs
fs
mov
addr16
adc
fstp
in
jno
rcr
dec
xchg
mov
and
scas
cmp
fcmovnu
in
jp
(bad)
xor
and
push
xchg
mov
xchg
dec
xor
retf
mov
dec
les
xor
jno
or
dec
inc
retf
imul
fistp
or
repnz
dec
pop
fld
jmp
and
data16
and
ja
add
add
inc
jno
sti
mov
(bad)
out
fiadd
add
push
jmp
xor
fidivr
jge
lds
mov
int3
ins
or
vmovsd
ins
inc
mov
(bad)
mov
xor
arpl
mov
sbb
lock
cmp
mov
movs
sbb
fistp
pop
cdq
mov
(bad)
dec
dec
add
xchg
ret
in
lods
push
dec
clc
into
gs
cdq
imul
mov
adc
or
clc
aas
clc
jg
jecxz
mov
aam
add
ret
pop
pop
scas
fiadd
dec
call
js
dec
inc
enter
xor
data16
pushf
arpl
sti
jge
ffree
fdivr
inc
js
movs
and
(bad)
mov
pop
ret
mov
retf
ret
lods
lahf
imul
fisubr
mov
pop
mov
rol
adc
adc
cwde
ret
and
xor
jle
jge
inc
cmp
pop
stos
xor
lods
mov
in
push
loop
cmps
out
jns
ds
inc
mov
psrlq
inc
test
out
inc
(bad)
stc
fwait
xchg
sbb
xchg
shr
addr16
inc
sub
xchg
or
enter
jmp
shr
jo
jbe
cmp
cmp
data16
out
(bad)
stos
mov
adc
adc
jae
scas
dec
sub
adc
mov
cdq
mov
ins
hlt
xchg
(bad)
add
push
cmp
jbe
sbb
ret
or
callw
loopne
aas
xor
(bad)
idiv
jge
sub
sub
mov
test
dec
sar
dec
or
cmp
dec
dec
xor
cs
fst
fisubr
nop
push
scas
scas
inc
adc
bound
nop
mov
jmp
out
mov
gs
and
cs
movs
xchg
and
imul
cmps
cmps
cli
movs
jae
xchg
add
call
pusha
icebp
xlat
(bad)
push
add
int
das
xchg
and
pop
hlt
cmps
test
sub
into
adc
add
xchg
mov
out
xchg
or
jo
repnz
ret
mov
cmp
push
(bad)
movs
inc
cli
int3
inc
test
sbb
gs
nop
jg
repnz
test
adc
dec
lods
sbb
inc
(bad)
mov
jbe
call
xchg
mov
out
or
imul
and
mov
lods
mov
sti
xor
xor
mov
lahf
add
data16
stos
cli
xchg
push
push
mov
mov
icebp
push
cmp
cmc
inc
call
test
add
lea
shl
nop
adc
mov
nop
mov
movs
ret
add
lea
sbb
xchg
aam
fdiv
inc
ret
out
mov
enter
into
icebp
mov
and
cwde
test
cmc
push
test
aas
cmps
fst
sar
pop
mov
xor
mov
data16
inc
(bad)
hlt
into
jnp
mov
xchg
gs
cwde
(bad)
cmp
bound
inc
xchg
cmps
mov
ret
aad
push
add
movs
scas
popa
aaa
rcl
cmc
sbb
add
ins
iret
call
xchg
stc
cs
int
daa
or
ret
rcl
add
mov
sbb
dec
dec
pop
lds
pushf
push
mov
mov
shl
mov
fdiv
inc
outs
sub
shr
sbb
cmp
xlat
hlt
push
aas
cmc
cmps
mov
jbe
sub
pop
xchg
add
xchg
gs
imul
sub
xchg
mov
adc
daa
ins
add
inc
retf
out
mov
inc
hlt
sbb
jg
push
or
imul
cmp
xchg
scas
and
xchg
outs
push
xchg
or
jle
pop
hlt
hlt
sub
call
mov
addr16
aad
lea
hlt
ja
or
xchg
iret
cmp
lock
fwait
cmc
sub
fdiv
push
dec
cmp
jmp
mov
fnsave
int3
inc
mov
retf
scas
sti
mov
lea
cmc
adc
inc
xchg
jge
retf
dec
cwde
int3
xor
jl
psubd
mov
arpl
xchg
(bad)
in
shr
or
test
cmovae
xchg
or
fdivr
xchg
fcom
(bad)
mov
adc
loopne
bound
aas
fimul
jecxz
call
or
div
lods
adc
jmp
loope
test
mov
pop
push
jmp
pop
lods
inc
pop
xor
adc
push
pushf
out
pop
stos
mov
inc
or
fimul
retf
sar
test
je
xchg
aas
scas
pop
adc
inc
out
inc
or
ja
daa
and
loope
repnz
mov
jp
xor
std
call
sub
repnz
sub
sbb
add
pop
ds
dec
mov
sbb
(bad)
cmp
xchg
pop
aad
or
jb
sub
mul
xchg
push
mov
adc
das
aas
sub
xor
xchg
call
test
test
rcr
aas
push
sbb
mov
cwde
(bad)
into
jp
dec
les
push
pop
stos
jmp
mov
or
mov
cs
cmp
inc
mov
push
mov
mov
in
std
mov
jo
repz
jmp
scas
mov
loope
jne
jae
std
aaa
push
jne
push
aam
out
mov
adc
mov
sahf
fstp
jno
(bad)
jae
mov
addr16
pop
lods
call
pop
mov
or
jne
stc
mov
dec
out
aas
sub
sti
neg
push
cwde
push
inc
xor
pop
xor
(bad)
and
cmps
js
mov
lahf
fwait
mov
jno
xchg
push
enter
(bad)
mov
in
pop
sub
scas
dec
add
push
inc
jno
inc
mov
dec
jnp
pop
cmps
sbb
stc
add
inc
stos
retf
and
mov
jo
test
test
outs
push
lods
fisttp
pop
sbb
mov
adc
or
xor
les
(bad)
push
cmp
push
xchg
mov
rcr
mov
imul
dec
xchg
ret
test
aam
call
lahf
cmp
shl
in
or
sbb
iret
je
test
aas
push
pop
int3
out
out
jno
xor
fimul
retf
or
mov
jecxz
dec
jae
pushf
dec
call
(bad)
mov
push
cli
repz
dec
loope
in
outs
cmp
aas
lahf
dec
popa
cmp
iret
dec
data16
hlt
ror
inc
push
dec
pop
(bad)
int
mov
xchg
xor
mul
push
fidivr
retf
fdivr
mov
sub
push
add
jp
sbb
add
mul
dec
aaa
sub
mov
add
fwait
ins
inc
or
adc
push
sbb
xor
fdiv
adc
cli
repz
pop
pop
loope
dec
pop
fwait
pop
pop
das
pop
cwde
push
mov
ret
xchg
mov
push
push
push
add
sbb
fimul
mov
icebp
gs
ret
(bad)
int
xor
jbe
adc
movs
push
pop
cwde
and
pop
mov
cld
inc
(bad)
(bad)
jmp
fstp
cdq
and
cmps
ja
stc
xor
div
push
loop
(bad)
test
sbb
imul
data16
mov
pop
mov
int
stc
in
pushf
mov
in
and
add
sbb
mul
adc
sbb
or
sub
fsub
add
mov
shl
dec
xchg
test
(bad)
cmps
and
movs
jmp
movs
xchg
push
push
push
mov
mov
dec
dec
lock
int
inc
xor
hlt
jne
hlt
mov
popf
cmp
mov
int3
cdq
outs
mov
add
adc
(bad)
sti
sub
dec
lds
popa
pop
xchg
push
test
ss
lock
imul
mov
pop
cmp
cmc
fstp
mov
pop
(bad)
push
jp
ror
mov
les
cwde
xchg
inc
lds
jb
ret
(bad)
repnz
jp
mov
movs
hlt
pop
hlt
adc
push
push
repnz
test
push
(bad)
fwait
cmc
and
dec
js
inc
and
movs
int3
xchg
scas
neg
push
and
je
std
pop
push
and
inc
pop
cld
mov
hlt
cmp
enter
ret
ret
clc
retf
cmp
scas
loopne
jns
adc
(bad)
frstor
and
dec
aaa
ja
sbb
xlat
icebp
das
xchg
mov
cs
mov
pushf
lds
leave
mov
ss
jge
jle
push
xchg
out
cmp
les
(bad)
mov
(bad)
fdivr
jmp
adc
pop
scas
int3
inc
xchg
shl
jno
popf
jmp
mov
rcl
mov
push
mov
(bad)
ss
mov
outs
je
or
dec
retf
jns
add
and
pop
cmps
push
gs
sub
(bad)
xchg
xor
xchg
rol
jae
mov
out
and
jmp
add
xchg
and
inc
jp
(bad)
or
push
xor
mov
fld
mov
inc
std
fdivr
fs
pop
mov
dec
aad
adc
pop
mov
aam
aam
(bad)
imul
int3
hlt
push
mov
ficom
inc
fimul
outs
and
bound
or
mov
push
xchg
inc
shl
lahf
inc
mov
push
clc
adc
scas
inc
cmc
and
call
hlt
movs
inc
mov
jno
cmp
push
loop
gs
neg
mov
jmp
push
daa
out
scas
popf
fcmove
inc
or
mov
xchg
ficom
mov
xchg
jle
mov
inc
jmp
add
xchg
cdq
xchg
cmps
fcmovnu
aas
test
into
gs
jle
enter
adc
ins
and
mov
fwait
loop
fstp
jae
push
pop
fsub
pop
les
or
mov
popa
stos
test
xchg
fmulp
je
pop
test
inc
inc
in
mov
mov
xlat
or
fwait
jg
fadd
or
daa
mov
inc
pop
xchg
sub
loop
repnz
(bad)
repz
xchg
pmovmskb
adc
test
jnp
mov
lods
pop
cmp
ds
jmp
stos
bound
psubw
sbb
pop
mov
push
adc
in
sub
adc
xchg
add
lods
xor
mov
daa
or
inc
add
cmp
dec
loop
ret
in
(bad)
or
mov
jp
mov
in
or
pushf
and
rol
push
pop
psllq
and
or
pop
fbld
test
enter
sar
inc
cld
pushf
lea
xchg
pop
push
xor
shl
cmp
repnz
loope
mov
popa
xor
shl
shr
or
inc
(bad)
mov
adc
sub
call
fcomp
leave
jmp
into
mov
xor
pusha
aam
fs
xor
jae
push
dec
mov
(bad)
cmc
pop
sub
jmp
jnp
sub
std
es
popa
pop
popa
stc
jne
out
and
outs
mov
pop
aas
inc
ret
test
pushw
pop
rcr
test
cmp
xchg
sub
mov
sbb
inc
cmc
xchg
jne
bound
sahf
test
icebp
mov
(bad)
icebp
pop
hlt
jno
push
push
(bad)
pusha
push
jge
cmp
and
or
aaa
cmps
inc
cdq
jmp
hlt
scas
jne
dec
jmp
fld
(bad)
es
gs
cdq
pop
jno
das
push
in
push
in
aam
and
inc
je
push
cmp
shr
pop
clc
add
ins
xchg
xor
inc
scas
lahf
imul
pop
(bad)
(bad)
jl
sbb
and
xchg
xor
mov
add
int
inc
cmp
mov
mov
call
jnp
out
push
jo
jmp
push
(bad)
pop
sar
rcl
push
cli
mov
inc
pop
adc
jp
push
add
addr16
inc
push
imul
push
cmps
lds
imul
bound
(bad)
mov
stc
popa
lods
popa
and
push
addr16
adc
pop
pop
jmp
div
shr
call
stc
jbe
in
jae
adc
scas
or
mov
xor
xchg
retf
mov
fimul
call
loope
lahf
inc
mov
out
inc
mov
and
fsubr
inc
sti
fnstsw
dec
addr16
dec
mov
movs
iret
hlt
pop
jmp
sub
pop
ss
fsubr
add
mov
and
and
adc
(bad)
rol
(bad)
fcmovnb
int
call
je
inc
out
sub
cmp
out
call
sti
ss
cld
and
cmp
jb
fdivr
or
mov
cli
in
dec
jns
mov
fs
sti
test
outs
movs
sub
xor
inc
add
add
pop
mov
sub
js
les
or
xor
mov
clc
jns
push
aam
mov
cmp
popf
call
imul
jge
stc
repnz
in
call
jle
daa
nop
inc
or
jmp
(bad)
(bad)
xor
xchg
shl
enter
xor
add
and
gs
push
mov
mov
mov
adc
aam
push
lds
pop
(bad)
adc
in
jo
or
js
into
add
add
cmp
dec
sbb
lds
sbb
xchg
mov
jae
mov
pop
stos
add
pop
jmp
cld
cmp
dec
movs
or
in
or
and
shl
out
into
mov
(bad)
fmul
jge
mov
int3
adc
sbb
jbe
lods
js
pop
and
pop
repz
cmp
jp
push
and
mov
test
(bad)
jp
(bad)
dec
retf
pop
jmp
sbb
icebp
or
stos
imul
aam
mov
add
rol
push
push
or
(bad)
xchg
push
mov
popf
cdq
inc
movs
rol
jmp
out
jmp
inc
cmc
cmp
jnp
sti
rol
adc
mov
gs
lea
push
push
test
movs
xchg
jl
test
dec
ins
sbb
data16
push
out
adc
imul
shr
add
sub
(bad)
movs
loopne
loope
sar
jae
or
sahf
push
xchg
ins
(bad)
adc
inc
mov
out
stos
mov
mov
add
mov
in
pop
out
lahf
arpl
outs
cli
push
out
ret
lods
push
dec
add
aaa
cmp
das
push
xchg
cwde
data16
mov
sub
les
inc
(bad)
hlt
inc
outs
adc
jp
cmp
dec
mov
vaddps
inc
enter
inc
aad
push
mov
rol
xchg
pusha
pop
ror
ds
repnz
mov
sahf
cmp
pop
push
push
das
out
sbb
dec
test
and
mov
daa
mov
cmp
dec
cmp
xchg
push
fs
adc
add
jmp
loopne
popa
xchg
cmp
push
dec
sbb
lahf
fnstsw
fistp
repnz
loope
test
xchg
sub
es
std
fldenv
mov
sbb
add
popa
xchg
dec
sub
jle
rol
repnz
test
loopne
xchg
sbb
retf
xor
mov
sbb
xchg
test
mov
mov
and
pop
lahf
pop
int
(bad)
jg
pop
rcr
pop
movs
xchg
inc
iret
adc
fcom
stos
sahf
jne
fchs
sbb
mov
mov
test
out
out
rcl
cmp
adc
cdq
pop
add
push
mov
mov
out
rol
inc
in
mov
test
mov
sahf
(bad)
mov
sar
xchg
jg
mov
mov
xchg
inc
ins
xchg
out
scas
dec
pop
sbb
pop
jg
cli
add
mov
mov
or
sbb
hlt
daa
add
in
lods
(bad)
and
outs
in
(bad)
cdq
retf
or
outs
and
aam
in
cmp
cmp
jle
and
popf
pushf
addr16
(bad)
inc
mov
imul
sub
cmps
shr
pop
ret
push
adc
(bad)
call
add
(bad)
mov
ins
icebp
sub
and
out
int3
test
xchg
movs
arpl
fsubr
mov
repnz
lods
mov
in
aam
cmp
mov
or
mov
sub
fidivr
pushf
add
mov
fstp
test
xor
add
sar
enter
arpl
inc
sbb
xchg
fild
in
push
jns
cwde
stos
adc
lock
(bad)
scas
pop
cdq
jmp
rol
mov
icebp
nop
imul
jp
enter
lds
(bad)
fwait
mov
pusha
sub
fimul
das
div
mov
stos
mov
push
(bad)
pusha
dec
pop
xchg
dec
in
pop
or
inc
lds
outs
xchg
and
dec
out
icebp
ins
(bad)
scas
mov
(bad)
xor
xor
mov
mov
and
ss
pop
out
sti
cli
xor
push
add
xlat
push
cmps
daa
inc
xor
jmp
mov
fst
xchg
enter
bnd
es
inc
jo
(bad)
(bad)
dec
or
xor
and
mov
cmp
lahf
ins
adc
ja
retf
out
mov
push
mov
retf
bound
mov
dec
into
ds
test
mov
shl
or
test
aas
inc
push
je
add
and
bound
xor
stos
mov
(bad)
mov
and
sbb
aaa
dec
and
dec
repz
ss
sub
pop
aaa
scas
xchg
mov
pop
adc
scas
arpl
or
jbe
dec
cmps
idiv
lods
pop
xchg
repz
and
in
adc
mov
pop
test
ftst
mov
mov
sar
icebp
push
inc
pop
mov
daa
pop
push
scas
mov
jp
ficom
dec
movs
fs
mov
and
movs
dec
lds
pusha
fbstp
push
cli
xchg
scas
clc
jae
jnp
stc
or
mul
cmp
pop
sbb
fs
and
retf
mov
arpl
(bad)
pop
cs
and
and
cmp
mov
out
aam
mov
mov
push
or
aad
stos
sub
sub
sub
pusha
mov
int
cdq
dec
loopne
idiv
xlat
mov
push
and
mov
pmulhw
or
or
mov
les
push
push
jl
push
push
jmp
(bad)
jle
cmc
out
or
cli
fcom
data16
xchg
pusha
inc
movs
jne
test
xchg
xchg
dec
xor
fcmovu
cmp
mov
add
sub
add
in
aam
jecxz
in
sbb
sub
ret
jns
loop
in
and
jmp
cmp
pop
fsub
adc
out
cmps
dec
pop
add
sbb
pop
push
xor
out
jecxz
mov
push
mov
jo
lds
inc
cmp
mov
stos
jb
jle
or
cld
cmp
push
ins
(bad)
or
outs
push
movs
jg
pusha
inc
inc
xchg
je
pop
xchg
outs
hlt
mov
cmp
pushw
dec
rcr
push
stos
ja
cli
push
dec
aas
and
mov
xchg
movs
sbb
pop
imul
mov
pop
or
repnz
pusha
push
mov
xor
mov
idiv
mov
(bad)
sub
ins
xor
jmp
fidiv
loope
loope
out
in
pop
inc
or
jle
rol
pusha
inc
fisubr
mov
pop
es
mov
mov
pushf
out
pop
xor
push
push
add
(bad)
xchg
pop
and
in
and
xchg
aas
xchg
movs
out
jge
inc
loopne
mov
in
mov
and
jnp
jge
mov
mov
inc
lea
stos
lgs
and
mov
fistp
or
xor
push
xchg
pop
ins
inc
es
and
stc
aas
fs
fnstcw
pop
xchg
jno
fdivr
into
adc
push
sub
xchg
sub
outs
sahf
push
cmp
cs
ins
add
jbe
fdivr
add
ror
pop
or
or
push
data16
pop
adc
pop
dec
xor
mov
lahf
pop
(bad)
xlat
jb
mov
xchg
int3
aas
outs
lods
test
shr
xor
out
pop
popa
xchg
jmp
das
les
pop
shl
test
jl
pop
bound
push
xor
cmps
jae
je
lock
call
enter
xor
loope
mov
cmp
aam
adc
mov
retf
mov
mov
add
dec
sub
mov
jp
aam
cmp
lods
lahf
ins
xor
leave
in
push
fcmove
out
cli
mov
jg
out
ret
mov
dec
call
ins
mov
mov
adc
xchg
jmp
push
jp
inc
mov
sub
mov
sub
sbb
sti
cmps
inc
add
ss
(bad)
adc
cmp
ret
cld
fmul
mov
jge
dec
jl
test
push
aad
sub
sub
or
mov
sbb
inc
push
repz
ss
lahf
mov
jbe
cld
retf
(bad)
cdq
mov
or
shr
xchg
adc
dec
dec
adc
test
add
jno
mov
add
hlt
cmc
jae
xchg
jmp
cs
cmps
repnz
fist
pop
daa
lds
lea
data16
int
fistp
stos
inc
test
fcmovne
or
mov
xor
cmp
inc
jns
sbb
push
mov
leave
data16
mov
ror
xor
pop
inc
or
(bad)
jl
scas
gs
inc
(bad)
fdivr
icebp
push
(bad)
xchg
lods
pop
mov
enter
add
ins
test
mov
das
and
cmp
xchg
push
push
ror
movs
fs
sub
push
xchg
xor
test
je
mul
mov
test
xchg
test
ja
mov
jbe
cs
(bad)
pop
in
cmp
ret
inc
mov
hlt
sub
mov
std
xor
jmp
and
ret
jl
in
jle
and
(bad)
cwde
mov
fidiv
loope
loope
ins
inc
sbb
loop
(bad)
cmps
leave
arpl
add
or
stc
jl
imul
pop
fnstsw
fs
sub
shr
push
jg
in
mov
cmp
jecxz
les
icebp
jbe
inc
xchg
inc
ins
(bad)
fbstp
xchg
mov
jns
mov
(bad)
dec
pop
and
push
sub
add
adc
aad
enter
xchg
rcl
push
adc
xchg
clc
imul
add
mov
jmp
inc
test
inc
je
cmp
mov
sbb
call
sub
mov
cmp
jmp
xor
jmp
data16
rcl
fld
pop
adc
lods
gs
aas
rcl
xor
sub
adc
rcr
fcom
sbb
int3
aam
mov
rol
enter
mov
int3
pop
iret
sbb
xor
(bad)
cwde
enter
retf
movs
shr
in
pop
outs
or
jae
call
jb
pop
cmp
fwait
pop
cmc
mov
fucomp
or
add
jp
pop
cdq
loope
aas
xchg
dec
push
pop
push
mov
out
pushf
inc
jmp
push
mov
xchg
push
dec
mov
and
dec
sub
icebp
lods
jle
add
push
mov
xchg
aad
pop
loopne
pop
js
stos
inc
pop
shr
fidiv
ret
add
test
mov
fdivr
cli
dec
add
in
int3
dec
test
xor
jecxz
arpl
in
outs
jnp
and
les
repnz
and
and
mov
stos
(bad)
and
sbb
imul
xor
sub
test
mov
imul
loop
pop
rol
sar
call
sbb
hlt
je
call
adc
xchg
fxch
mov
retf
bound
(bad)
hlt
gs
test
xor
push
icebp
inc
jns
pop
or
(bad)
rcr
jecxz
push
fnstenv
pop
sahf
loopne
pop
cwde
shr
sub
sub
mov
mov
lods
xchg
cwde
(bad)
mov
cdq
mov
cmps
aam
das
out
daa
cmc
fiadd
data16
xchg
cmp
inc
mov
mov
dec
or
data16
mov
cmp
icebp
and
push
popa
sbb
push
inc
pop
fldcw
jecxz
cmc
jle
adc
sub
xor
jle
dec
adc
jae
rcl
xor
aaa
retf
inc
(bad)
retf
xchg
cli
cmp
clc
dec
(bad)
mov
rcl
fs
movs
xchg
out
push
outs
xchg
ss
dec
dec
jb
fcmovu
inc
jmp
mov
lods
inc
sub
inc
push
shr
and
jae
mov
add
sbb
jbe
jmp
data16
dec
stc
xor
xchg
jnp
mov
nop
arpl
ja
cmp
das
in
pop
push
(bad)
push
and
push
or
mov
mov
loop
inc
in
and
dec
es
stc
cmp
mov
leave
js
icebp
mov
stos
dec
inc
cmp
bswap
in
xchg
xchg
sbb
adc
and
pop
jno
or
add
ror
pop
repnz
rcl
cli
jmp
mov
out
mov
retf
xchg
sbb
call
outs
and
lds
adc
xchg
push
sub
call
int
cs
dec
outs
cmp
bound
and
icebp
cmps
and
mov
icebp
fcomp
test
xor
push
daa
jns
lods
xchg
imul
cmp
imul
push
cdq
cmp
(bad)
int3
sbb
das
mov
call
inc
lea
xor
mov
movs
loope
mov
ins
jbe
inc
cwde
pop
es
jne
aad
out
xor
ins
rcl
(bad)
test
aas
mov
neg
xor
adc
mov
mov
and
(bad)
rcr
rcr
cld
or
dec
pop
ror
push
pushf
push
cdq
mov
shl
dec
sub
movs
mov
push
push
pushf
pop
repz
add
push
adc
pop
lea
or
add
xor
je
push
inc
int
sub
cmp
mov
xchg
rol
sub
dec
js
and
sbb
cld
xlat
into
pop
fdivr
pusha
pop
mov
or
adc
stc
xchg
ins
mov
test
cs
sbb
push
push
lods
mov
pop
mov
cmps
fisub
cmps
cmovp
jg
inc
jmp
inc
aad
dec
mov
xchg
sub
jl
push
xchg
call
mov
add
sahf
push
out
add
or
cmp
dec
iret
std
bound
xchg
int
and
or
(bad)
cli
call
cdq
ins
inc
dec
lea
sub
popa
and
shl
dec
es
xchg
dec
lea
scas
outs
dec
xchg
jl
adc
pushw
push
add
rol
in
daa
fwait
ss
(bad)
pop
shr
popa
xor
outs
int
stos
dec
in
jnp
ins
cmp
out
rol
pushf
xchg
jne
and
hlt
ret
inc
loope
fwait
xor
fwait
jmp
imul
aaa
mov
hlt
dec
pusha
pop
push
sub
mov
ficomp
dec
adc
cmps
scas
mov
adc
stos
sub
adc
or
arpl
retf
icebp
pusha
nop
cmp
jne
imul
movnti
dec
mov
mov
in
jno
imul
lea
add
mov
sbb
add
in
es
xor
retf
test
call
jae
test
pop
push
imul
dec
lods
std
xor
fbstp
mov
int
das
fcmove
or
push
cdq
dec
aam
push
pop
rol
shr
xchg
and
or
jmp
into
fs
cs
jb
call
repnz
mov
scas
(bad)
icebp
mov
rol
sysenter
outs
inc
jb
pop
add
aaa
push
cli
xchg
jmp
rcr
mov
ins
inc
or
jl
sub
cmp
or
jmp
jecxz
push
sti
shl
pop
out
idiv
jmp
inc
loop
sub
push
outs
push
fisttp
dec
int3
dec
mov
les
adc
adc
fs
dec
stos
sbb
xor
and
scas
or
push
lds
or
sbb
pop
sub
rcl
push
cdq
fcmovbe
lea
in
inc
jmp
mov
sbb
and
mov
ins
fcmovne
xor
jmp
or
stos
cdq
sub
push
out
gs
mov
inc
jp
and
aaa
test
scas
cwde
ins
js
adc
fdivr
stos
add
das
adc
jge
dec
icebp
xchg
popa
aas
fcom
and
mov
cmc
mov
ins
inc
sar
mov
and
inc
mov
call
cwde
and
adc
mov
imul
mov
adc
push
int3
lea
iret
push
sbb
inc
out
push
xor
push
mov
mov
xor
ss
hlt
and
and
aam
(bad)
mov
jbe
ins
inc
cmps
add
or
retf
jae
mov
inc
std
adc
in
sar
cmp
jle
add
mov
mov
xchg
lods
jmp
dec
std
fstp
ret
shl
sub
arpl
(bad)
int3
movs
(bad)
mov
gs
mov
ror
adc
cmp
jmp
sub
nop
push
mov
push
dec
leave
hlt
aam
jne
imul
pop
xchg
mov
int3
pop
imul
dec
int3
sbb
xchg
jns
je
mov
cmp
clc
or
and
inc
stos
into
push
(bad)
push
imul
mov
out
inc
loope
mov
jbe
lock
jle
nop
jge
mov
mov
adc
inc
ret
push
cmp
sub
sar
cwde
xor
sbb
ds
movs
adc
aad
inc
retf
xchg
cwde
scas
and
and
pop
push
jmp
cmps
xor
stos
lea
push
outs
jmp
and
add
sbb
je
gs
div
add
push
ror
loope
repnz
(bad)
outs
add
mov
cmps
add
inc
jns
sub
mov
jns
cmp
in
cmp
rcl
push
add
xor
das
je
fld
ud1
repnz
(bad)
cmc
nop
inc
mov
repnz
daa
rcl
mov
mov
xor
jne
xor
adc
mov
fstp
stc
sti
inc
mov
mov
dec
inc
into
rol
das
cwde
ret
test
call
pushf
inc
sahf
daa
pop
call
sub
or
pop
outs
jge
and
es
adc
fld
mov
pop
ins
cli
lea
test
pop
cmps
pushw
adc
push
inc
in
xor
ret
pop
les
sbb
retf
aam
stos
add
int3
retf
ja
out
mov
ds
call
pop
and
mov
movs
jmp
movs
xchg
(bad)
daa
into
push
jmp
adc
repz
movs
aad
mov
xor
call
cmc
adc
push
sbb
imul
cmovle
dec
cs
lods
rol
popf
pop
xchg
add
ja
jnp
dec
mov
ss
bound
in
pusha
div
jl
cmp
cmp
mov
in
dec
sahf
adc
xor
cmps
and
or
or
add
add
and
nop
aaa
xchg
push
ins
push
out
ret
ret
xchg
(bad)
jmp
mov
daa
xchg
inc
xchg
je
dec
mov
leave
jmp
mov
cmp
(bad)
aaa
pop
cmp
pop
out
jno
add
loop
push
cdq
sub
mov
adc
out
int
daa
jle
das
out
loop
std
jg
pop
cld
xor
lea
cmp
cmp
ss
(bad)
adc
cld
adc
jg
mov
dec
xor
pop
xchg
sbb
dec
dec
sbb
es
and
repnz
inc
mov
lds
ror
mov
ins
push
push
push
push
icebp
bound
stos
xor
shl
add
ret
not
repnz
dec
mov
pop
popf
pop
push
inc
sti
or
push
loope
fnstsw
js
push
mov
icebp
mov
xchg
loop
scas
xchg
in
ret
pop
xchg
leave
push
pushf
fist
or
mov
xchg
sbb
mov
pop
mov
xchg
push
push
mov
retf
pop
test
aas
and
test
dec
lea
xchg
movs
xor
jb
pusha
rol
jp
scas
pop
repz
xchg
inc
pop
mov
inc
and
xor
sub
add
xchg
add
outs
(bad)
bnd
pop
imul
fnsave
push
pop
xchg
pmulhuw
jnp
add
shl
push
imul
int
pop
imul
pop
enter
add
inc
js
adc
push
add
push
jmp
mov
sub
addr16
aad
xlat
icebp
cmp
adc
sub
int
cs
xchg
push
sbb
inc
je
(bad)
mov
movs
mov
pop
inc
push
or
sbb
pop
out
mov
pop
aam
add
ret
xchg
int
scas
push
mov
lock
dec
mov
ds
cmp
mov
and
dec
pop
ss
dec
cmp
outs
je
and
hlt
push
(bad)
xor
pop
loope
out
mov
or
int3
adc
pop
sti
fidiv
mov
sbb
mov
in
push
cld
shl
test
into
mov
add
in
or
jg
cmp
pop
and
dec
into
fwait
cmp
lea
jae
and
stos
fwait
cmps
mov
(bad)
or
and
(bad)
loopne
fnstenv
bound
mov
jmp
add
ror
pop
das
vmovhpd
sub
sub
mov
xor
mov
stos
mov
pop
push
mov
ficom
out
xchg
or
addr16
push
mov
jecxz
ret
fdivr
xchg
out
sti
ret
leave
pop
rcl
mov
ins
cld
psadbw
cmp
loope
xchg
xor
sbb
je
movs
pop
dec
or
out
jbe
int
pop
xchg
ds
dec
jmp
les
mov
daa
setg
jb
xor
push
cmc
cmps
mov
retf
push
add
test
sahf
out
xchg
mov
loope
jo
pop
fs
inc
sub
sbb
mov
fistp
stc
dec
in
popa
xor
retf
mov
xchg
jbe
stos
outs
stos
call
stc
loop
ins
dec
loope
fwait
sub
and
xor
mov
push
and
pop
xchg
(bad)
or
mov
mov
xchg
jbe
in
jns
pop
sbb
fst
dec
cmp
mov
mov
test
dec
shr
lods
mov
jno
paddw
(bad)
dec
rcr
call
outs
mov
std
cs
jbe
and
dec
lds
jmp
jp
mov
out
test
push
sbb
jae
inc
mov
mov
arpl
sub
shl
pop
and
sub
test
ss
test
push
not
sti
sbb
pop
adc
jns
call
cmp
add
xor
sti
(bad)
loope
arpl
pop
fwait
inc
jecxz
dec
pop
add
pavgw
cmp
dec
shl
mov
cmp
cli
into
sub
and
es
adc
bound
or
enter
sar
push
pop
pusha
sahf
das
stc
call
mov
in
dec
inc
nop
fistp
cwde
fsub
ins
jo
fcomp
add
xchg
fimul
pop
lds
jecxz
mov
int3
mov
nop
call
push
in
ret
jns
dec
repnz
adc
je
in
cmp
jmp
int
push
push
cmps
jo
add
and
imul
loopne
(bad)
in
sbb
pop
sbb
aas
scas
xchg
in
rcr
xchg
dec
sar
ret
or
push
mov
(bad)
(bad)
out
neg
daa
lds
push
and
pop
sbb
fistp
in
xor
mov
inc
call
call
mov
jo
test
jge
and
xchg
in
mov
pop
cmp
xor
dec
mov
daa
or
sbb
xchg
adc
mov
xchg
xor
les
and
jo
imul
enter
and
push
ja
icebp
xor
retf
sub
xor
jne
sub
pop
scas
xor
gs
(bad)
pop
dec
push
or
jae
(bad)
rcl
mov
push
inc
mov
inc
push
bound
jns
mov
mov
fwait
pop
cmp
pop
scas
fbld
outs
cmps
loope
ror
mov
mov
add
call
dec
nop
inc
ja
lock
sbb
jo
call
cmps
rol
out
repnz
mov
inc
mov
rsqrtps
jmp
cld
add
retf
jo
fstp
add
stos
test
adc
enter
adc
out
jle
push
and
dec
push
in
push
movs
add
and
aam
dec
sub
lock
sbb
sub
jne
jg
ins
mov
mov
jmp
cmp
mov
rcr
and
lea
cmp
outs
or
xor
inc
mov
jno
pusha
and
mov
(bad)
lock
out
scas
out
es
add
push
es
jbe
xchg
sbb
adc
iret
push
sub
jg
not
in
mov
xchg
sbb
(bad)
xchg
es
mov
push
push
sahf
dec
dec
sub
cmp
iret
scas
mov
test
mov
xlat
xor
push
fild
push
push
adc
repnz
rcr
cli
ins
pop
into
js
adc
int3
jp
jmp
dec
mov
pop
ds
int
cmps
ret
hlt
ret
add
cmp
xchg
pop
dec
arpl
neg
lds
neg
cmp
add
repnz
pusha
arpl
fnsetpm(287
mov
xchg
popf
inc
push
xchg
or
or
jl
or
cs
fist
xor
std
jns
lock
adc
popf
pop
sub
ins
sbb
mov
lock
xor
jno
push
push
push
fst
mul
lds
push
cmp
jo
shr
push
inc
mov
xchg
mov
out
adc
dec
inc
xchg
xor
retf
aas
movs
int3
imul
fcom
sub
jge
jle
fmul
cmc
mov
lds
jno
sub
aad
gs
sub
shl
jae
jg
fstp
pop
inc
inc
xor
out
cmc
repz
sbb
adc
fcom
je
hlt
add
add
pop
xchg
es
(bad)
loope
sub
fild
ficom
stos
jns
push
push
push
out
out
in
xor
fisttp
pop
mov
movs
std
mov
je
pop
jg
jmp
ret
(bad)
jns
das
ror
add
(bad)
sti
pusha
xchg
lods
ins
std
or
dec
sub
jb
clc
mov
cs
gs
xchg
xchg
arpl
xchg
ins
inc
aas
push
in
les
cmps
xor
test
mov
jle
push
cdq
sbb
push
repnz
cs
mov
push
jp
shl
inc
xchg
movs
scas
jae
pushf
dec
sbb
fwait
mov
jnp
xor
nop
int3
adc
(bad)
bound
lea
leave
fnstsw
add
daa
push
jae
int3
jle
add
add
mov
lods
idiv
out
push
pop
aaa
sub
enter
lahf
ficom
push
js
jae
dec
jno
ret
xchg
test
sub
sbb
push
sub
inc
sbb
xor
mov
sbb
dec
daa
xor
xchg
js
data16
adc
test
xor
xor
adc
and
dec
dec
mov
call
ret
ins
es
sar
inc
cmps
outs
das
inc
sahf
dec
cmps
retf
xor
jmp
imul
sti
in
aad
pop
fimul
pushf
ret
dec
movs
mov
xor
cld
add
lds
pop
xchg
pop
cmp
enter
mov
jno
hlt
lahf
(bad)
jb
inc
loope
or
fcom
fldenv
pop
cmp
ret
xor
sub
add
inc
iret
sub
inc
loopne
pusha
jo
fist
mov
pop
sub
inc
fcomi
outs
into
push
mov
cmps
push
pop
pop
xor
cmps
out
sbb
jle
jno
test
loopne
dec
inc
mov
lods
popa
int
das
mov
es
movs
mov
jecxz
xlat
ds
outs
loope
mov
mov
ret
sar
arpl
dec
in
movd
mov
cmp
mov
add
xchg
loop
addr16
pop
fist
ds
xor
jne
mov
sub
push
dec
in
fst
push
retf
fisub
jmp
repz
ja
xlat
scas
and
out
daa
jge
ret
repnz
adc
mov
into
cmp
in
jl
(bad)
and
or
adc
adc
ja
shl
cmp
arpl
(bad)
mov
popf
shr
dec
dec
xchg
cdq
scas
or
add
jo
jmp
leave
fwait
add
mov
jno
mov
(bad)
in
inc
gs
adc
in
shr
mov
and
add
dec
mov
cmp
or
inc
aam
fdivr
imul
add
mov
xor
shl
jmp
push
cmp
(bad)
mov
add
lods
lahf
cmp
jnp
lds
cwde
sbb
push
jne
push
cmp
test
cmp
jbe
push
(bad)
int
xor
movs
leave
adc
fcmove
add
xchg
mov
imul
push
adc
out
data16
xchg
scas
jmp
sub
inc
mov
fisttp
data16
mov
fcomp
mov
or
xor
aaa
push
mov
mov
icebp
scas
xchg
xchg
jmp
mov
repnz
aad
pop
out
ror
ret
stos
outs
xor
rol
or
jp
xchg
popa
xor
call
sub
loopne
ss
movs
jl
jecxz
retf
and
jmp
cld
pushf
and
icebp
add
daa
cmp
or
pop
mov
retf
push
and
repnz
adc
and
add
adc
mov
dec
ja
ret
cmps
add
mov
dec
xlat
in
ins
adc
sbb
mov
cs
jg
xchg
aad
or
mov
push
sbb
jbe
jne
and
push
mov
loope
jbe
push
sub
out
cmp
jp
dec
push
gs
adc
jecxz
add
cmp
ret
sub
and
jae
and
arpl
dec
push
mov
mov
xchg
push
mov
pop
mov
push
les
mov
mov
shr
push
aas
retf
adc
sbb
(bad)
mov
push
int3
mov
mov
ret
add
and
scas
push
test
(bad)
out
xchg
and
sbb
rcr
(bad)
outs
mov
(bad)
mov
(bad)
repz
add
ja
fnsave
xlat
sbb
and
sub
cmp
adc
je
sbb
mov
sub
dec
sbb
cmps
loope
push
or
and
movs
sbb
mov
jno
test
daa
xor
adc
add
mov
xor
jmp
pop
aas
or
inc
aaa
xchg
in
daa
xchg
daa
ret
cmp
mov
sub
pop
out
nop
sbb
mov
add
and
inc
shr
repnz
fld
and
and
push
mov
ins
int
test
mov
int
inc
or
mov
xchg
fadd
and
and
xor
in
xchg
imul
jge
ret
sbb
push
push
mov
sbb
icebp
daa
add
ficomp
adc
nop
(bad)
repnz
in
iret
push
jg
(bad)
cmc
dec
cli
(bad)
jle
xchg
jnp
push
mov
inc
out
or
loopne
sub
inc
inc
pop
in
mov
mov
jmp
pushf
or
push
push
rcr
xor
les
push
movs
mov
ret
ss
ret
adc
adc
push
push
push
push
jno
int
or
inc
sbb
sub
xchg
loope
jmp
(bad)
out
ins
jmp
retf
inc
pop
call
dec
(bad)
mov
adc
std
and
mov
and
jno
stos
mov
jbe
js
dec
ror
pop
enter
xor
sbb
add
scas
rcl
lock
stos
inc
cli
mov
outs
push
test
outs
and
mov
ret
cwde
mov
movs
in
shl
(bad)
push
push
or
lock
shl
ja
repnz
pop
dec
mov
sub
in
xor
mov
(bad)
sub
or
or
and
sub
add
push
add
add
mov
mov
sbb
loope
add
adc
sbb
sar
mov
xor
sti
mov
(bad)
sbb
sbb
pop
nop
into
nop
mov
push
jb
ins
adc
push
aam
ror
pop
xchg
xchg
mov
mov
push
or
lock
lea
or
gs
mov
dec
movs
push
rcl
jg
clc
mov
sub
ret
std
xchg
outs
call
and
push
clc
int3
pusha
mov
stos
imul
push
cmps
scas
jnp
add
out
and
sub
loope
dec
into
mov
bound
fist
push
xor
fsubrp
sbb
test
call
sar
xchg
inc
sub
mov
rol
inc
inc
mov
mov
out
inc
cmp
out
xor
push
clc
push
fidiv
rcr
lock
pop
call
jb
pop
test
dec
pop
in
stos
je
jle
push
daa
adc
push
fistp
push
add
push
popf
jmp
cmp
or
and
jae
sar
jbe
jl
cmp
push
popa
dec
ds
cmp
sub
psrlq
adc
aam
sbb
xchg
fwait
rol
cmp
add
out
dec
imul
jp
iret
mov
ret
in
test
movs
push
(bad)
inc
xor
mov
push
adc
push
cmp
es
pop
cwde
pop
inc
sbb
cmps
sub
dec
mov
ds
mov
xor
mov
cmp
dec
dec
xchg
ret
adc
lods
xchg
cmp
dec
pop
aam
mov
popf
adc
ss
sahf
mov
or
in
out
pop
mov
call
repz
jnp
fsubr
pextrw
push
leave
jmp
ds
lea
sub
and
arpl
pop
mov
jns
or
dec
xor
shl
inc
jb
(bad)
lahf
xor
and
mov
sub
mov
pop
xor
mov
test
mov
add
stos
jg
inc
test
fcomip
pop
add
ror
into
jb
pop
push
and
mov
fisttp
xor
or
in
add
dec
lods
ins
cmc
sbb
push
retf
into
or
lods
xchg
pop
xchg
xchg
(bad)
(bad)
lods
stos
cmps
fwait
add
and
xor
imul
cmp
loopne
inc
pop
mov
sub
arpl
jae
inc
xor
mov
xor
jg
ins
iret
pop
out
push
xor
inc
or
jnp
inc
mov
xchg
dec
or
add
xchg
jns
jne
sub
adc
pop
sbb
mov
pushf
(bad)
mov
jne
movs
fs
inc
mov
mov
pop
or
inc
je
jno
mov
mov
xchg
adc
cmp
jae
in
fnstcw
enter
jo
sub
cmp
adc
test
or
in
sub
lds
xchg
daa
enter
mov
loopne
ror
adc
loopne
dec
repz
jmp
push
cwde
push
test
retf
sahf
aaa
sbb
cwde
pop
lea
iret
sub
jle
hlt
add
mov
cmp
dec
cmp
jbe
cmp
sbb
or
imul
in
pop
cs
add
cmp
cmc
mov
add
push
aam
ins
and
fisubr
pop
mov
mov
pop
sar
pop
add
loopne
jns
shr
and
js
outs
mov
or
icebp
ins
dec
shl
or
mov
cmp
ins
or
or
or
aam
push
lock
pushf
movs
int3
xchg
(bad)
push
inc
scas
or
call
mov
je
inc
repnz
push
push
mov
add
push
sti
sbb
ret
or
xchg
out
sub
loopne
movs
in
pop
mov
pusha
mov
push
mov
sti
cmps
mov
xor
push
cmp
and
aas
mov
push
dec
cs
inc
sub
sti
cmp
or
in
fld
fisttp
hlt
cmpxchg
dec
pop
and
enter
xor
dec
dec
xchg
loopne
inc
fsubr
or
xor
aaa
and
fs
xchg
jecxz
out
(bad)
xor
mov
dec
inc
imul
sbb
pusha
(bad)
mov
cmp
arpl
out
sbb
sub
int3
xchg
xor
dec
or
cli
addr16
in
sar
jo
ret
sub
cs
inc
mov
addr16
add
in
jecxz
or
mov
les
dec
dec
test
or
pop
adc
dec
mov
fmulp
(bad)
test
cmp
add
jmp
cwde
mov
adc
in
dec
retf
idiv
push
sbb
popf
cmps
sbb
ss
(bad)
and
addr16
jb
add
jnp
stos
cmp
cmps
mov
mov
jns
loop
dec
or
shr
fnsave
dec
pop
add
xor
push
mov
lock
jmp
out
sub
sbb
sti
cmc
adc
mov
mov
icebp
push
sbb
data16
into
mov
dec
or
dec
sub
pop
add
repnz
push
and
jns
test
out
rep
in
je
mov
inc
into
jno
xlat
mov
imul
arpl
xchg
sbb
and
mov
out
jmp
movs
adc
test
bound
or
add
fldenv
into
pusha
fild
push
add
add
fwait
xchg
and
mov
sbb
ja
dec
sbb
adc
(bad)
cmc
int3
sub
popf
outs
js
jmp
mov
inc
sbb
scas
pop
xchg
sbb
cpuid
xchg
lods
dec
dec
and
adc
and
jmp
dec
cmps
shr
loope
clc
xchg
pop
xchg
and
fild
xor
push
xor
icebp
in
and
xor
jo
add
fst
dec
movs
cmp
jne
cmp
sbb
inc
cmc
mov
shr
lods
xlat
aaa
xchg
pusha
cs
mov
jbe
mov
push
and
jb
xchg
xchg
add
lds
scas
in
lea
mov
int
cwde
loope
xor
(bad)
popf
pop
(bad)
cmp
pop
in
or
in
add
ins
add
jle
cmps
ins
mov
inc
out
popa
mov
cwde
(bad)
in
cmc
sub
data16
out
cwde
addr16
pop
jne
push
cmp
imul
xchg
dec
mov
jbe
mov
aas
lods
xor
cmp
sbb
stos
daa
and
test
inc
or
test
lea
mov
rol
xchg
sbb
ror
aas
jne
ins
push
xor
inc
cmp
and
jbe
push
fsubr
aam
adc
outs
cmp
or
mov
lock
mov
cdq
and
test
or
mov
movs
stos
or
js
cmc
in
addr16
xor
jns
add
daa
adc
cmp
sti
aaa
movs
add
sub
pop
imul
cmp
into
inc
and
shl
add
mov
aad
call
or
call
pop
ror
cwde
dec
mov
cdq
(bad)
test
loopne
pop
xlat
ffree
les
jle
xchg
xchg
cmp
ss
loope
imul
inc
adc
mov
push
mov
add
inc
jecxz
out
mov
jp
mov
jmp
xor
mov
inc
xlat
aaa
push
jmp
sbb
lds
(bad)
fild
jmp
je
out
mov
cmps
mov
dec
les
jg
and
sub
xlat
hlt
dec
cmps
int
dec
xlat
gs
xchg
and
retf
ret
lahf
jp
inc
add
cld
xlat
(bad)
out
mov
rcr
(bad)
xor
sbb
stc
dec
mov
xor
fisttp
shl
scas
rcl
repnz
ds
mov
sti
leave
ins
xchg
push
mov
je
add
xchg
cdq
xchg
out
jecxz
ss
dec
rcl
sbb
mov
pop
ja
jle
test
sub
sub
test
push
jmp
sub
mov
and
fcomip
mov
mov
in
sbb
or
dec
mov
arpl
outs
push
adc
out
dec
and
lods
(bad)
jns
cdq
mov
push
or
push
ins
jecxz
jb
pusha
push
jnp
fsub
mov
fmul
inc
add
jnp
(bad)
cmp
hlt
call
scas
popa
inc
mov
inc
lea
push
lea
dec
out
fist
xor
or
sahf
sbb
adc
jno
(bad)
mov
pop
stos
sbb
sahf
aaa
add
dec
into
(bad)
push
adc
mov
imul
push
test
test
mov
in
inc
sub
cmp
jno
mov
out
loopne
xchg
xchg
adc
mov
inc
lahf
cmps
xchg
xlat
sbb
xchg
cmc
lea
adc
adc
inc
aas
mov
sbb
call
adc
jmp
and
out
test
mov
repnz
sub
and
cmps
xchg
mov
mov
stos
mov
(bad)
in
lahf
or
aas
inc
out
mov
sub
mov
jg
sub
push
mov
or
and
cmp
fist
pop
mov
jne
ficom
outs
jmp
ins
pop
jge
xchg
or
push
inc
xchg
xchg
push
ret
and
lock
mov
adc
xchg
scas
adc
fwait
dec
popf
mov
and
adc
push
es
jp
dec
pop
rcl
jecxz
mov
mov
jae
cmp
int
and
mov
stos
hlt
mov
(bad)
sub
es
pop
lods
test
movs
mov
and
xor
sti
mov
dec
mov
mov
push
jmp
jecxz
xor
push
or
call
xlat
rol
cmp
(bad)
xchg
xchg
mov
shl
xchg
add
jp
scas
jge
cmp
jns
add
mov
shl
push
mov
pop
lds
loop
sub
jmp
dec
mov
sub
inc
daa
imul
mov
mov
(bad)
int
cmc
jmp
in
cli
mov
je
mov
dec
(bad)
push
jno
movs
lahf
ds
fcomp
pop
push
aaa
add
dec
cmp
mov
into
enter
int3
xor
ins
pop
cmova
cmp
mov
or
lea
(bad)
ret
ret
call
iret
xor
pop
and
cmc
call
mov
mov
in
and
cmp
jle
loopne
adc
mov
xor
push
mov
jne
and
cli
jl
outs
mov
(bad)
es
dec
push
cmp
adc
(bad)
out
fsubr
jg
pop
mov
cmp
or
rol
inc
push
and
adc
cmps
mov
pop
push
ffree
pop
and
popa
ret
sar
sbb
jecxz
xchg
sub
pop
(bad)
pop
cwde
push
pop
add
cwde
fidiv
adc
mov
sahf
int
icebp
scas
xchg
or
mov
mov
pop
pop
outs
push
adc
stos
mov
add
pop
hlt
sbb
gs
or
stos
movs
mov
pop
rol
xor
add
or
js
movs
or
mov
inc
mov
cmp
int
dec
sbb
inc
mov
call
mov
aaa
arpl
inc
push
enter
aas
cli
push
add
lods
push
pop
add
xchg
add
jae
test
cmp
xchg
out
cmp
mov
pushf
jg
ss
movs
push
xchg
popa
out
add
and
(bad)
aas
pop
adc
test
cmp
nop
in
arpl
std
in
test
fs
or
jp
add
icebp
test
and
aas
inc
bound
(bad)
or
inc
dec
sub
call
xchg
ins
cli
test
call
cmp
inc
jo
pop
dec
jmp
push
ss
mov
push
ds
add
xchg
jmp
and
fwait
lds
sub
mov
fld
sbb
retf
int
sbb
or
out
mov
push
into
test
int3
mov
sahf
iret
call
fdiv
sub
xchg
(bad)
inc
stc
mov
xor
inc
pushf
pop
mov
mov
xor
test
mov
int
cmp
xor
std
(bad)
aas
add
cs
sub
mov
scas
clc
push
loope
mov
xchg
or
sub
mov
(bad)
pushf
cmp
and
shl
add
int3
into
xor
push
xchg
pop
dec
addr16
outs
ds
mov
popa
mov
push
or
jmp
mov
inc
cmp
int3
xor
sbb
mov
popa
cmp
test
mov
mov
(bad)
fsubr
fidivr
je
pop
stc
ds
pop
mov
scas
outs
pop
bound
bound
in
xchg
ret
in
mov
push
dec
lock
iret
inc
mov
leave
clc
adc
repnz
cmp
and
popf
scas
push
cwde
ss
inc
and
sub
or
dec
in
ficom
test
xchg
jae
mov
mov
push
cmp
sbb
sub
mov
jno
mov
inc
(bad)
scas
dec
and
mov
movs
pop
and
jb
adc
cs
(bad)
into
cmp
mov
test
shr
nop
clc
cmp
xor
lds
aaa
mul
fdiv
adc
mov
cdq
inc
retf
add
jmp
pop
pop
mov
and
daa
xor
jmp
leave
jmp
add
pop
(bad)
ror
push
push
xor
cmps
push
ret
out
pop
fcomp
xchg
push
retf
cmp
repnz
pushf
fcmovnb
sbb
xchg
push
sbb
out
jnp
sub
pop
js
push
popa
or
call
stc
inc
in
mov
jmp
mov
cmp
xchg
mov
push
js
pop
pop
inc
sbb
pop
mov
xor
cs
arpl
rcr
add
pop
into
dec
xchg
or
fs
mov
jno
xor
fwait
pop
push
lods
xchg
outs
out
pop
popf
ja
jecxz
psubw
(bad)
int3
mov
lods
psadbw
stos
cmp
inc
jl
adc
pop
dec
or
pop
pusha
retf
lea
je
cmp
bound
push
punpcklbw
ds
lock
sub
js
repnz
xchg
sar
mov
mov
fsubr
test
push
loopne
outs
daa
pop
pop
das
js
out
loop
fimul
xchg
xchg
and
pushf
(bad)
cmp
inc
(bad)
jae
fidiv
push
(bad)
test
cdq
imul
dec
das
jo
shl
pop
pop
xchg
push
pop
popa
stos
dec
xchg
xor
and
mov
call
add
and
mov
cmp
jmp
jmp
inc
mov
mov
xchg
mov
bound
dec
aas
cmp
inc
xchg
scas
cdq
and
pushf
xchg
push
sbb
fwait
aaa
cdq
xor
dec
inc
mov
dec
pop
cld
add
dec
test
mov
arpl
or
fsubr
shr
daa
jg
je
repnz
sbb
xchg
(bad)
jmp
fucomp
mov
inc
push
cmp
add
mov
dec
fmul
xor
les
sbb
mov
test
inc
adc
enter
mov
jp
jmp
not
dec
xor
adc
cmp
loop
cmp
mov
inc
and
ds
sahf
daa
push
pushf
or
jns
jbe
(bad)
mov
mov
in
mov
fbstp
adc
mov
inc
mov
out
inc
mov
jge
fild
or
bound
(bad)
pop
xor
jno
jo
jp
mov
pop
lods
mov
cmp
inc
jg
shr
jmp
jnp
bound
and
sbb
mov
in
aaa
into
pusha
pminub
stos
jg
test
mov
dec
cmovge
lock
push
mov
sahf
test
outs
in
(bad)
adc
fild
fiadd
mov
xchg
inc
mov
imul
or
ds
cmps
pop
ja
pop
xor
inc
or
out
jnp
shl
fsub
jne
shr
shr
aam
cwde
into
mov
jmp
or
int3
adc
add
gs
inc
cmps
icebp
int
pop
rcl
les
dec
cmp
jp
sub
jmp
loopne
or
jp
dec
ins
and
pusha
stc
inc
(bad)
in
js
imul
lahf
in
fcom
(bad)
je
ja
scas
pop
mov
fsin
xor
dec
xchg
out
test
aas
cdq
imul
ret
pop
push
pop
dec
jbe
sbb
add
mov
jb
out
jb
inc
pop
xchg
jecxz
sbb
data16
pop
lahf
cld
loopne
movs
inc
and
inc
out
aaa
pop
jne
frstor
mov
out
mov
ss
cmp
xor
fwait
pop
ror
clc
lods
pop
add
dec
or
add
out
mov
jns
cmp
out
clc
bound
push
call
mov
xchg
scas
or
or
mov
adc
cdq
aaa
jecxz
outs
fidivr
loope
aam
aad
rcr
and
out
mov
mov
or
jle
cmp
ja
jg
hlt
push
fwait
std
cld
outs
and
mov
dec
stos
daa
ja
lahf
inc
cmp
pop
jg
pop
(bad)
mov
mov
cmps
add
mov
outs
test
xor
pop
ficomp
push
movs
mov
pop
pop
xor
inc
cmc
sti
xchg
mov
mov
pop
jmp
repz
dec
dec
xchg
sub
add
cmc
push
outs
sbb
and
sub
movs
mov
and
cwde
(bad)
test
push
and
cmp
shr
sub
pusha
dec
(bad)
test
add
lea
mov
and
lods
lods
jbe
sbb
sub
lahf
mov
loope
jbe
addr16
lods
jne
sbb
es
fucom
lock
jne
sbb
push
pusha
not
inc
leave
jg
test
stos
inc
sbb
mov
call
xchg
cmp
mov
pop
popa
add
repz
stos
cld
fsub
mov
test
sub
xchg
mov
add
ss
mov
sub
push
push
std
sti
add
ss
lock
out
adc
xchg
(bad)
fs
mov
sahf
aas
rcr
cmp
rcr
and
fst
into
xor
pop
cld
ret
dec
je
int
(bad)
add
cwde
fmul
out
test
mov
xlat
pusha
icebp
pop
rcl
xor
jl
lods
loop
mov
jne
loop
imul
iret
fistp
ret
addr16
or
aas
xchg
cmp
mov
xlat
jo
cmp
call
xor
je
cmp
push
dec
fsub
inc
test
fs
mov
shr
pop
and
add
mov
dec
fwait
popf
dec
je
fsub
push
cmps
loope
loop
ins
ja
jge
daa
mov
mov
dec
in
fadd
inc
mov
inc
ss
test
jle
push
cmc
xchg
aas
sbb
dec
clc
mov
js
call
xchg
int
imul
sbb
daa
pop
adc
jno
arpl
movs
dec
shr
scas
jne
popa
(bad)
(bad)
dec
jl
jecxz
pop
movs
mov
inc
push
add
repnz
push
jo
inc
mov
popf
jo
inc
pop
mov
ret
inc
inc
mul
popf
cmc
mov
scas
push
pop
jns
jno
int
and
icebp
xchg
mov
push
mov
repz
aam
pop
test
int3
dec
add
inc
setg
inc
sub
add
xor
sbb
cmp
mov
push
sahf
ins
push
movs
push
and
ins
mov
cli
das
mov
adc
mov
push
aas
adc
or
aam
shl
les
pop
jae
pop
inc
aam
inc
cmp
cmp
sbb
fmul
mov
fcomp
sar
fisttp
pop
retf
cmp
das
mov
xchg
sub
adc
add
add
and
add
mov
retf
xor
loopne
retf
cmps
and
ret
ss
js
addr16
enter
loop
lahf
sub
push
add
xor
xlat
jo
xchg
imul
(bad)
xor
arpl
and
sbb
sbb
pop
mov
jge
jnp
ds
pusha
mov
cdq
jbe
push
adc
nop
iret
jge
add
jp
dec
push
scas
ror
or
push
stos
cmps
scas
pop
cmp
ins
pop
cwde
xchg
out
clc
std
jb
xor
pop
out
sar
xor
xor
lods
fcomp
pushf
aad
mov
xchg
and
jbe
daa
xor
cmp
imul
mov
mov
cmp
enter
mov
jb
mov
test
jo
push
mov
call
jno
xor
or
iret
jb
add
adc
jbe
dec
sub
cmp
mov
mov
push
cmp
cmp
pop
pop
cmp
add
xchg
stc
lock
sar
add
pop
fwait
jle
xchg
aad
mov
mov
adc
data16
jb
sbb
mov
daa
push
imul
outs
mov
(bad)
ror
xor
out
pop
push
pop
mov
jle
pop
fist
jecxz
mov
xchg
xchg
sar
inc
cmp
in
adc
and
(bad)
push
push
jmp
sub
cs
dec
cld
push
xor
push
mov
popf
dec
addr16
push
ss
sbb
add
push
mov
sub
sbb
xor
daa
data16
xchg
ins
in
mov
fldcw
inc
lahf
addr16
push
aad
outs
or
mov
add
shl
mov
jb
hlt
mov
pop
test
iret
dec
adc
pop
jno
sub
jne
(bad)
mov
pushf
enter
xchg
mov
das
rep
inc
inc
dec
xor
cmp
icebp
mov
xor
scas
inc
push
jmp
sub
mov
nop
sub
imul
int
test
shl
lds
xchg
adc
lea
loopne
add
fld
rcr
shr
cmp
dec
mov
mov
push
push
rcl
push
out
std
mov
fcmovu
add
sub
dec
add
xor
loope
push
(bad)
bound
imul
mov
adc
jle
loope
mov
xchg
outs
cmp
push
out
jp
popf
arpl
fst
jl
xor
scas
dec
push
jecxz
or
or
lods
mov
push
sub
daa
jno
rol
xchg
lods
add
retf
sbb
mov
ds
data16
push
out
add
cmp
mov
sahf
sbb
clc
das
fst
(bad)
xor
mov
pop
pusha
jmp
mov
shl
jge
repnz
cmp
rep
adc
sbb
clc
repnz
retw
ficom
ja
xor
push
jns
jmp
cmc
dec
and
(bad)
daa
(bad)
repz
jmp
inc
arpl
nop
push
push
in
int3
ins
in
or
mov
loope
push
addr16
shl
in
ins
not
mov
and
add
cmp
dec
jp
pop
push
mov
mov
mov
mov
adc
std
mov
out
push
ret
lock
ins
pop
mov
(bad)
repz
(bad)
out
jnp
in
add
jne
sub
pop
push
(bad)
enter
adc
push
in
or
and
fmulp
jbe
ficom
sbb
fdiv
mov
call
sahf
mov
add
rol
mov
and
test
aad
inc
push
pusha
aas
sbb
mov
out
cld
ss
daa
mov
xor
das
cmp
ss
idiv
mov
shl
shl
xor
pop
lahf
fst
or
dec
inc
test
xchg
bound
mov
bound
push
and
xor
mov
dec
and
mov
xchg
mov
les
shl
bnd
popa
pusha
sahf
data16
pop
rcr
inc
inc
dec
mov
mov
pop
inc
into
push
aas
fistp
ja
ret
out
pop
xor
xor
jmp
push
loop
or
mov
push
shl
stos
push
cmp
xchg
mov
fsubr
and
outs
repz
lods
ror
fwait
cld
inc
mov
push
and
add
xchg
ror
arpl
push
loop
enter
jmp
sub
clc
push
push
dec
sbb
scas
(bad)
repz
iret
sbb
adc
loop
cmc
xchg
xchg
xchg
cmps
adc
(bad)
xor
(bad)
or
mov
push
stos
inc
shl
mov
popf
js
aaa
int3
push
pop
mov
repnz
bound
aas
xchg
jb
sub
sbb
ret
pop
test
mov
mul
fisub
mov
adc
jg
ds
jge
movs
rcr
fisub
push
cld
imul
mov
xor
push
jae
sub
push
je
test
call
mov
cmp
loope
jbe
or
rcl
sbb
mov
cs
das
enter
and
movs
and
out
mov
ret
inc
or
cmp
popa
add
mov
mov
pop
mov
mov
in
dec
pop
sub
mov
add
push
outs
xchg
(bad)
retf
pop
mov
lods
iret
dec
xchg
pop
das
add
inc
or
das
jo
nop
fild
(bad)
cmp
std
xlat
aam
iret
xchg
and
in
dec
adc
movs
js
xor
push
call
push
clc
leave
lea
adc
mov
ja
in
xchg
mov
dec
ins
leave
retf
pop
adc
mov
xor
sub
scas
xchg
cmc
jmp
xor
loopne
popa
inc
fstp
stos
(bad)
call
in
jmp
movs
das
test
(bad)
and
and
int
or
test
call
and
(bad)
outs
sbb
les
add
call
and
shl
lahf
mov
mov
and
jecxz
xchg
dec
inc
fcomp
arpl
icebp
aas
jae
and
inc
push
sti
cmps
pushf
clc
retf
jo
sbb
cli
add
div
daa
mov
mov
adc
cdq
and
stc
jge
inc
mov
int3
out
and
stos
push
cld
dec
leave
lods
int
sub
adc
mov
xchg
add
(bad)
out
sar
add
packsswb
or
cmp
and
sbb
xor
sub
mov
push
and
movs
ret
inc
sbb
retf
dec
dec
pop
pop
sub
dec
dec
xchg
pop
test
iret
push
lods
mov
mov
or
mov
xchg
jle
dec
pop
loop
cmp
in
mov
pop
pop
(bad)
cmc
mov
mov
push
push
mov
or
test
aad
outs
les
lds
iret
sbb
lods
inc
add
push
rol
(bad)
(bad)
push
push
pushf
retf
pusha
fild
inc
(bad)
imul
sub
sub
sbb
push
scas
pop
sbb
cmp
pop
icebp
add
lahf
lds
(bad)
scas
test
xchg
pusha
rcr
mov
fimul
cmp
idiv
in
inc
out
push
cmp
sbb
dec
cmps
or
pop
xchg
(bad)
es
cmp
retf
stc
cld
push
int3
xchg
push
xor
jns
in
ret
fs
sbb
je
adc
push
imul
jp
imul
sub
add
rep
test
ds
test
mov
in
dec
ins
jl
or
(bad)
jl
ds
in
popa
jae
mov
add
int
pop
jle
or
adc
dec
ja
std
or
mov
sti
pushf
mov
push
pop
cld
je
sub
test
sub
xchg
sub
add
jns
dec
push
sbb
outs
clc
ror
nop
and
fistp
pusha
sbb
and
xor
outs
call
xor
dec
xchg
mov
neg
imul
xchg
jg
xchg
add
icebp
lds
sub
bswap
adc
in
inc
sbb
xchg
leave
dec
mov
and
aam
jmp
inc
jl
sbb
lods
push
cmp
and
or
jmp
jnp
das
outs
out
or
add
xor
scas
sub
jns
jmp
inc
repz
jmp
fild
lea
outs
xor
mov
test
and
sub
mov
(bad)
jbe
movs
ins
and
mov
scas
add
add
cmp
sbb
retf
jbe
retf
mov
mov
(bad)
lahf
mov
leave
leave
lock
push
push
sub
fst
adc
mov
mov
mov
mov
int3
push
into
fstp
lods
test
or
mov
cmp
push
cmp
cmp
sub
sub
or
push
cmp
mov
ret
les
sbb
adc
sbb
mov
inc
js
jg
mov
sbb
mov
dec
out
out
dec
and
fwait
std
cmp
dec
or
imul
jmp
mov
sahf
push
or
daa
xchg
sub
ds
jo
mov
cmp
jge
xor
inc
push
sbb
mov
mov
(bad)
jmp
sbb
pop
and
shr
pushf
adc
inc
sub
pushf
nop
xchg
xchg
push
mov
sbb
cmps
or
or
jo
jmp
ins
sbb
call
ret
mov
data16
and
xchg
rep
and
std
fist
pop
push
cmp
jno
pusha
pushf
out
push
and
shl
lods
sub
sbb
test
cmp
enter
retf
inc
push
sbb
leave
or
xor
jne
adc
in
push
int3
push
or
adc
mov
dec
or
ds
fcomp
inc
scas
and
mov
cmp
cmp
imul
mov
cmovns
test
fs
mov
inc
out
je
xor
add
or
fistp
das
ja
adc
push
imul
dec
fisttp
pusha
and
sub
push
xchg
jnp
pop
lock
or
mov
dec
fadd
ret
adc
les
repz
mov
pop
cmc
jnp
push
leave
lahf
dec
jne
loop
sbb
(bad)
ss
aas
sbb
mov
je
pop
cdq
rcr
add
int
sti
push
jns
xlat
add
ja
je
inc
rcr
mov
(bad)
jo
call
dec
xchg
out
mov
stos
and
mov
lods
mov
stc
sar
jp
add
sub
pop
in
jno
cmp
(bad)
adc
push
mov
imul
out
retf
push
sahf
dec
outs
test
scas
jl
movs
out
aas
pop
push
sbb
hlt
test
shl
test
add
or
xchg
or
sub
sub
cmc
mov
and
iret
not
addr16
stc
aaa
or
xchg
jle
xor
inc
push
mov
xchg
daa
adc
jae
dec
sub
inc
pusha
loop
inc
and
aaa
cmp
dec
pop
pop
xchg
hlt
shl
sbb
in
inc
retf
bound
sub
pop
fimul
test
outs
sbb
sub
adc
xchg
pop
sub
sub
outs
outs
mov
pop
add
ret
push
or
mov
fnstsw
stos
xor
clc
mov
cmp
xchg
push
jb
push
out
or
ja
mov
loope
pop
sub
mov
in
clc
aam
dec
fistp
mov
dec
leave
loopne
jmp
ret
pop
ret
jbe
pop
call
cmc
inc
aam
loop
push
lods
fwait
sub
fdivr
sbb
sub
jne
xchg
adc
jo
inc
int
es
pop
mov
or
xor
cli
sbb
jmp
push
mov
xchg
cs
jb
ins
mov
loop
out
scas
ret
pop
xor
lods
mov
mov
mov
pop
shr
pop
xchg
fst
(bad)
mov
ret
xor
mov
sbb
sti
xor
xor
add
xlat
fdivr
push
sar
xchg
loope
mov
or
xchg
pop
out
retf
cwde
jl
mov
inc
xchg
lds
mov
adc
sub
ds
(bad)
(bad)
int3
push
or
clc
and
dec
xchg
mov
push
xchg
xchg
std
dec
loop
push
jmp
movs
bnd
imul
addr16
pushf
push
mov
cmp
les
es
enter
gs
test
push
lods
or
test
mov
mov
push
sub
push
fcmovnu
inc
ja
test
test
in
push
ins
clc
mov
push
xor
jb
and
or
mov
fs
ins
std
xchg
jp
fstp
add
jmp
pop
push
scas
scas
fwait
lds
and
xor
ficomp
inc
arpl
psubsw
sub
dec
repz
scas
fwait
mov
push
cs
mov
mov
add
adc
cmp
sbb
cli
mov
imul
pop
fwait
rol
sbb
jl
mov
ds
sub
(bad)
sbb
outs
fs
mov
dec
push
loope
into
xor
adc
jmp
adc
mov
pusha
pop
sbb
xor
pop
hlt
mov
fiadd
dec
xchg
cmps
mov
out
int3
out
inc
inc
push
and
and
out
jo
mov
icebp
outs
in
sub
fimul
jecxz
fst
sub
cmc
push
add
imul
retf
arpl
sahf
int3
cmp
mov
mov
loop
das
mov
fiadd
dec
mov
mov
fs
or
cdq
mov
cli
cmc
adc
xor
sub
cmp
mov
daa
inc
adc
div
lahf
ja
xchg
or
rcl
and
or
shl
shr
adc
repnz
xchg
sub
sbb
dec
push
outs
test
loope
xor
and
cmp
and
jbe
enter
xchg
xor
clc
mov
xor
gs
in
es
div
adc
jl
inc
into
test
stc
ins
pop
cmc
xor
popa
jg
add
ins
and
pop
jnp
popa
sub
lods
jnp
or
jnp
inc
aam
outs
div
lea
test
ds
scas
xchg
mov
shl
mov
cmp
pop
outs
jge
cmp
and
je
mov
bound
xchg
xor
sar
xor
sbb
(bad)
call
and
call
test
push
sbb
adc
cmps
aam
pushf
add
std
ds
fwait
out
retf
or
fs
xlat
les
or
cmp
push
and
xor
stos
lea
jmp
fmul
push
int3
cmp
xor
sbb
and
inc
cli
push
les
sbb
add
adc
mov
xor
sub
adc
and
xor
pop
or
xor
int
and
cmps
mov
mov
fsubr
adc
test
mov
cmp
rcl
xor
xor
pop
add
jmp
in
popf
ins
nop
pop
(bad)
sbb
loope
push
mov
lea
out
jge
mov
mov
dec
lods
div
mov
mov
push
nop
fcmovne
in
fist
loope
mov
cmp
out
dec
sbb
mov
xchg
mov
(bad)
or
ins
js
inc
or
add
jl
dec
xor
jmp
aas
pop
ins
jmp
stc
cmp
xchg
jge
cmc
mov
(bad)
cli
fist
mov
pop
push
inc
es
cmps
adc
push
lods
popa
out
std
mov
and
dec
retf
cdq
inc
cmp
pop
xor
(bad)
xchg
repz
xchg
add
dec
mov
stos
aaa
push
dec
cs
repz
icebp
mov
sbb
inc
and
out
push
ret
cmp
xor
dec
dec
or
xchg
popa
rcr
js
out
loopne
aam
and
and
lods
adc
push
xor
inc
cs
jne
comiss
shl
adc
test
icebp
mov
mov
ja
dec
shl
sti
mov
mov
cmp
popf
imul
cmc
xor
icebp
pusha
(bad)
(bad)
mov
gs
sbb
jno
mov
push
ja
ds
add
dec
stos
xchg
mov
cmps
icebp
adc
add
stos
fs
or
fmul
push
(bad)
jl
in
rcl
pop
adc
dec
push
pop
jbe
ds
jmp
and
nop
sbb
and
iret
jmp
mov
popf
mov
jo
cmp
xor
add
je
mov
jne
pop
mov
fnop
add
out
call
sub
ret
push
sub
ja
out
cmc
sbb
repnz
nop
xchg
xchg
leave
inc
stos
jl
mov
xchg
pushf
aaa
dec
xor
sbb
fnsave
std
push
mov
repnz
pusha
cmp
in
jg
ja
fldenv
mov
dec
cli
jg
loop
pushf
inc
imul
or
sbb
outs
sbb
es
mov
jbe
test
popf
xchg
(bad)
pop
setl
lods
mov
ds
les
sahf
jecxz
sbb
pop
dec
xor
mov
ficomp
pop
cmps
inc
pop
addr16
and
icebp
ins
bound
outs
inc
mov
cmp
inc
fst
aad
mov
xchg
inc
sti
aam
or
int3
aas
inc
push
mov
pop
push
sbb
cmc
adc
mov
mov
fdivr
xchg
sbb
mov
mov
push
aaa
mov
mov
mov
je
cmp
movs
xchg
add
xchg
test
inc
or
xchg
xlat
xchg
outs
lahf
movs
add
std
in
dec
push
clc
sahf
push
dec
sbb
mov
pop
out
cwde
or
clc
cmp
pop
adc
sub
pop
outs
and
mul
xchg
cli
or
aaa
push
jns
shr
sbb
pop
les
ret
add
sbb
and
cmp
lods
pusha
jp
sub
mov
or
sub
rcr
imul
out
xchg
out
cmc
xor
lock
outs
movs
shl
xchg
xchg
icebp
das
(bad)
call
gs
sub
iret
popf
je
jb
ins
fisttp
fbstp
jo
push
hlt
mov
ins
shl
sbb
jno
test
(bad)
mov
mov
fwait
xchg
mov
sub
jp
lods
mov
mov
add
xchg
jmp
int3
je
repz
call
add
xor
add
and
pop
(bad)
ins
push
jb
or
xchg
out
or
sub
sub
mov
add
arpl
add
and
mov
stc
pop
scas
pop
ins
in
dec
test
call
aas
dec
aaa
adc
xchg
mov
cmp
(bad)
mov
int
(bad)
out
xlat
imul
cld
retf
cdq
inc
int
(bad)
ret
add
pop
dec
sub
in
or
mov
mov
(bad)
mov
call
xchg
cmp
mov
inc
ins
call
jl
push
and
sbb
popa
xchg
adc
loope
loopne
ror
call
mov
imul
sub
add
rcl
adc
aaa
and
cmps
xchg
jnp
std
addr16
pop
out
inc
mov
les
xchg
es
cwde
sub
pop
mov
fwait
call
inc
outs
out
(bad)
out
push
ja
aam
mov
fidiv
stos
mov
jne
dec
push
arpl
xor
mov
xchg
mov
push
sti
pop
xor
dec
jl
mov
mov
push
push
add
fwait
xor
frstor
inc
test
push
xchg
rcl
and
retf
push
ror
aam
mov
test
outs
imul
xor
and
and
jne
mov
cs
lods
pop
cwde
gs
stos
jmp
pop
mov
sbb
xchg
sbb
js
stc
hlt
pop
jmp
je
or
inc
dec
les
push
int3
and
mov
jl
mov
data16
scas
cmp
mov
fdivr
gs
jb
or
mov
push
dec
aaa
mov
and
push
sbb
cmp
mov
test
cli
faddp
imul
stos
mov
push
icebp
inc
jp
xor
dec
pushf
adc
adc
imul
add
sub
jnp
idiv
test
cs
jae
icebp
in
xchg
jae
fdiv
loopne
push
mov
leave
mov
push
(bad)
pop
call
lahf
fdiv
test
adc
add
mov
in
test
mov
scas
sbb
or
mov
dec
jmp
mov
xchg
dec
iret
or
loop
std
enter
mov
mov
cmp
ins
xchg
mov
bound
neg
xor
jmp
dec
or
and
push
test
ja
or
shl
and
jo
and
daa
mov
mov
adc
add
cli
push
add
adc
out
add
jb
push
mov
and
cmp
xor
pop
and
pop
inc
jae
ins
std
add
pusha
es
pop
and
clc
ins
cmc
mov
mov
xchg
clc
or
cmps
pop
(bad)
or
nop
ss
daa
and
out
dec
mov
test
and
sahf
mov
cmp
(bad)
cmp
(bad)
arpl
ret
lea
imul
lock
jbe
outs
or
imul
inc
jo
loop
lds
ret
mov
mov
push
sbb
push
clc
hlt
sbb
pop
and
pop
mov
sahf
dec
outs
sti
out
inc
or
xchg
fadd
jae
ins
jl
cs
push
xchg
dec
push
mov
pop
call
repz
(bad)
mov
jo
into
sbb
add
dec
ins
cmp
ins
mov
xor
ja
jg
xchg
iret
arpl
jp
fcom
iret
xchg
cmp
dec
push
cmc
adc
jne
scas
or
les
lods
dec
mov
and
add
cmps
cmp
mov
retf
jecxz
retf
xor
adc
push
(bad)
sbb
dec
inc
mov
xor
mov
sub
jnp
repnz
stos
jle
inc
inc
sahf
pop
in
xor
imul
xor
jne
jbe
scas
add
aaa
test
adc
dec
fsub
sub
sub
f2xm1
xchg
das
sbb
ins
shl
jl
adc
mov
mov
test
iret
retf
retf
int
mov
jb
outs
retf
les
ins
mov
enter
fnstenv
sahf
leave
push
out
in
jl
enter
ds
push
mov
(bad)
mov
arpl
sbb
mov
retf
je
pop
fsubr
icebp
pop
sub
movs
inc
in
(bad)
stos
or
mov
test
iret
cmp
bound
fld
cmp
mov
sub
hlt
push
jns
xchg
lods
lds
sub
sbb
push
xor
cwde
aam
mov
(bad)
movs
cmp
jg
rcr
cmp
call
pop
cmp
outs
mov
mov
xor
jmp
int
cmps
fwait
push
push
xlat
cmp
adc
int
pop
jne
xlat
mov
and
mov
add
in
cmp
pop
adc
pop
cdq
dec
ss
cmp
pop
pop
ret
push
cwde
sub
movs
(bad)
lock
stos
div
repnz
div
add
mov
inc
xchg
mov
mov
adc
xor
inc
lock
daa
cmp
inc
retf
popaw
into
or
movs
aaa
cmp
es
call
pushf
sahf
xor
and
stos
inc
popf
aas
mov
xchg
ficomp
push
stos
ret
xor
sbb
add
popf
xchg
jmp
test
repz
mov
pop
sbb
rcr
push
out
cdq
dec
(bad)
scas
in
push
adc
std
mov
jne
jmp
pop
cli
aaa
push
aam
push
dec
(bad)
pop
test
call
mov
pop
mov
pop
(bad)
xchg
cld
cmp
and
sub
iret
gs
jb
sahf
push
pop
repnz
ja
cmp
push
pop
pop
fwait
int3
cmp
sbb
lods
loopne
cmp
(bad)
aas
mov
psubsw
jmp
fnstenv
arpl
jge
jmp
das
xchg
pop
ins
in
and
push
cmc
adc
sub
retf
sub
std
int3
scas
imul
es
sahf
in
out
lea
stos
(bad)
call
pop
imul
ins
jo
rcr
mov
xchg
icebp
lds
test
outs
ins
leave
xchg
repz
repnz
jne
pop
popf
das
mov
jo
loopne
mov
ss
sub
shr
pushf
int
je
xor
shl
jecxz
adc
add
ja
mov
mov
sub
push
rcl
cmps
push
das
ins
xor
aas
stc
rcr
pop
inc
xchg
or
out
pop
(bad)
push
lahf
retf
call
mov
cld
mov
gs
mov
stos
push
jmp
pop
jmp
mov
fbld
push
aaa
add
lahf
test
inc
pop
or
fdiv
repz
mov
(bad)
call
jmp
or
cmp
sub
hlt
pop
scas
add
rcl
sub
popw
test
in
ret
bound
adc
push
lods
retf
in
and
stos
dec
sbb
aam
test
pop
int
or
pop
scas
cld
loopne
imul
pushf
(bad)
test
movs
cwde
jno
mov
popf
or
sub
pusha
jl
mov
arpl
imul
fld
mov
add
jno
arpl
inc
adc
dec
mov
cmps
les
leave
mov
repnz
mov
nop
(bad)
rcl
out
enter
lock
rcl
push
sbb
aam
out
dec
or
and
call
xchg
inc
mov
popf
mov
mov
dec
sub
sbb
int3
sub
dec
and
fwait
jnp
ds
adc
retf
inc
push
jo
sbb
aas
mov
jmp
scas
xor
stos
out
fcmovnu
xor
add
bound
sysret
push
int
pop
iret
repz
fnsave
xchg
ret
push
in
aam
arpl
ret
push
jo
mov
adc
dec
bound
les
cli
call
sub
xchg
sti
shl
cmps
rol
pop
sub
mov
push
push
xor
(bad)
cmps
and
sub
retf
sbb
(bad)
sub
or
dec
bound
dec
les
imul
movs
cwde
fiadd
xchg
cld
fistp
(bad)
jo
sbb
xor
pop
arpl
mov
adc
ins
xchg
adc
les
inc
or
imul
stos
sbb
cmp
mov
add
(bad)
push
sub
leave
mov
int3
mov
cs
xor
lock
sahf
iret
jge
fild
cmp
or
and
push
pop
or
rol
adc
jo
sbb
mov
inc
in
bound
cmp
dec
cmp
push
lea
cmp
mov
in
and
and
jp
lock
out
call
pop
dec
aas
scas
out
add
fldenv
mov
mov
mov
cmc
sbb
test
fdiv
adc
sub
icebp
sub
test
enter
mov
js
lahf
sbb
add
pop
xor
sub
cmc
xchg
retf
repnz
mov
dec
out
mov
repz
or
int
mov
xor
movs
rcr
sub
fbstp
sub
shr
into
scas
call
inc
in
fisubr
bound
rol
add
adc
test
and
pop
imul
cwde
sub
adc
jo
push
aaa
or
jmp
jnp
adc
shl
mov
cmps
int3
aas
cmp
push
mov
int3
xor
iret
fidivr
ds
popf
xchg
ja
or
cmp
mov
and
and
(bad)
shl
and
es
gs
jle
mov
jb
push
bound
jl
stc
cmp
adc
retf
mov
iret
ror
out
mov
xlat
(bad)
push
jg
stc
mov
mov
aaa
inc
or
sub
xchg
fistp
and
std
into
push
and
movs
mov
stc
cmp
cld
add
lahf
dec
fld
jp
imul
popa
popa
add
cmp
dec
jnp
(bad)
std
mov
daa
push
jp
aad
std
jo
stc
mul
enter
cmp
ds
mov
fidivr
lock
fmul
pop
fwait
inc
sbb
adc
scas
fild
cmp
adc
pop
imul
sahf
push
fstp
lods
stc
in
xor
and
jns
test
cli
jp
and
loope
mov
ds
mov
cmp
or
lods
sbb
(bad)
jmp
imul
sbb
clc
or
lds
lock
sti
mov
push
jmp
aad
jmp
test
xor
out
sbb
in
add
inc
xchg
mov
mov
jmp
xor
mov
dec
daa
lods
xor
imul
cmps
mov
ror
daa
test
retf
xor
sti
fucomi
pop
and
cmp
xor
push
lahf
loope
pop
jne
pop
cmp
sub
sub
mov
cdq
dec
xor
fmulp
pop
jle
ret
xor
pop
(bad)
mov
jmp
ins
lahf
je
mov
jge
out
push
sbb
mov
or
sub
aad
mov
pop
or
aaa
cmp
outs
adc
nop
ins
jge
mov
jle
push
adc
dec
test
lahf
dec
jb
pusha
mov
adc
push
sub
dec
jbe
sub
shl
mov
sbb
cwde
pop
mov
call
xor
mov
xchg
xor
xor
es
dec
jae
jmp
ins
mov
pusha
push
xchg
or
xor
jp
push
jle
out
clc
or
pop
adc
sbb
aad
mov
mov
mov
retf
data16
call
out
xor
mov
fmulp
pop
cs
push
xor
loop
fild
cmps
mov
rcr
leave
inc
pusha
call
in
(bad)
mov
es
cmps
das
push
pop
pop
ret
jmp
cmp
outs
loopne
xchg
out
cmp
xor
push
jb
hlt
push
cld
mov
adc
xchg
push
pop
xchg
pop
test
in
es
lods
push
xchg
popf
test
push
fwait
xchg
fcom
mov
ins
shl
pop
cmp
retf
in
and
retf
int
xor
xchg
cmp
fcmovnu
or
fist
cmp
les
iret
push
lahf
in
imul
pop
and
pop
mov
or
push
je
xchg
stos
dec
lahf
call
dec
dec
xlat
mov
ja
leave
xchg
xchg
or
mov
pop
popf
dec
xor
rcr
lods
xchg
mov
jnp
or
dec
imul
sub
icebp
mov
or
cmps
popf
fcom
sub
jmp
jno
dec
rcl
loope
adc
add
xor
std
add
jecxz
cs
fnstenv
inc
es
div
lock
push
ja
sbb
add
sbb
add
push
xor
dec
xor
sbb
or
lahf
xor
inc
mov
fild
push
into
stos
pushf
lods
jge
repz
cmps
cmp
cmp
push
fild
mov
ins
pusha
in
jne
lods
loope
out
test
clc
call
push
mov
mov
sub
pop
dec
leave
ins
js
je
jbe
inc
add
push
shr
jl
pop
jo
(bad)
mov
arpl
pop
cli
pop
mov
aad
mov
sub
in
cmps
mov
jns
adc
jmp
mov
xchg
pop
xor
arpl
inc
leave
retf
pop
fld
inc
adc
bound
push
xor
data16
stos
and
mov
jecxz
call
add
sub
sti
pop
and
sub
sub
les
cmp
aaa
add
loop
inc
fisttp
cmp
int3
daa
clc
stc
call
call
pushf
mov
retf
in
cmp
cli
cmps
in
idiv
int3
or
xchg
mov
shl
adc
es
out
rcr
and
push
addr16
shl
shl
xor
ss
mov
mov
mov
mov
cmc
pop
lahf
pop
fdivrp
mov
fnsave
loope
pop
dec
xchg
or
push
repz
cmp
dec
push
lea
cmp
arpl
(bad)
and
movs
(bad)
pop
jo
aam
cs
sti
adc
or
lods
ret
shl
aaa
xor
xchg
(bad)
jmp
cli
cdq
ficom
andnps
push
sti
nop
repz
mov
mov
xchg
outs
test
xor
movs
mov
in
cdq
bound
int3
sub
rcl
outs
xchg
xor
sahf
push
jge
inc
sub
and
cmp
outs
mov
mov
dec
mov
loope
adc
sbb
nop
push
cmp
xchg
stc
xor
popa
mov
aaa
jl
sub
ds
cmp
lahf
dec
(bad)
mov
xchg
(bad)
mov
ins
sbb
sub
cwde
push
shr
pop
inc
jle
add
movs
stos
pop
retf
pop
push
mov
and
dec
mov
and
or
mov
stos
test
jle
inc
lds
and
retf
pop
je
jno
jnp
js
lods
and
push
test
xor
ror
push
(bad)
and
mov
dec
loop
mov
loope
jnp
jmp
fbld
cmp
sbb
inc
cs
xor
cmp
repnz
addr16
push
mov
fwait
mov
mov
mov
stc
arpl
(bad)
push
bound
mov
outs
shr
pop
mov
adc
push
push
dec
add
enter
fsub
cwde
dec
out
dec
add
ficom
lahf
and
dec
jle
jo
into
movs
cld
(bad)
out
jns
sbb
ins
adc
add
mov
sub
mov
mov
repnz
mov
and
add
loope
lods
retf
aam
mov
sub
or
loopne
and
leave
cdq
lds
scas
mov
inc
push
inc
cmp
add
xor
cld
mov
mov
mov
push
cmp
loope
int
sbb
in
movs
div
fst
and
imul
int3
dec
lods
lods
stos
and
rcl
cmps
push
jae
xor
inc
lds
xchg
fidivr
adc
xor
(bad)
push
inc
retf
pop
sub
mov
adc
out
mov
ja
adc
loop
pusha
sbb
cwde
xchg
ds
ror
cmp
dec
and
jmp
ds
jecxz
movs
inc
loope
mov
fs
push
push
sub
push
test
out
in
addr16
push
cmp
xchg
and
mov
xlat
cmp
std
lods
and
fsubr
pusha
xor
jecxz
mov
in
sbb
xchg
xor
mov
xchg
nop
mov
fidiv
daa
out
adc
test
pop
ins
xchg
mov
sahf
cmps
mov
fiadd
sti
sbb
das
cmp
scas
pop
mov
pop
outs
cmp
jo
jb
push
push
mov
enter
mov
cli
push
jae
inc
cld
push
aam
jmp
sub
paddq
cli
daa
pop
xchg
sub
stc
jge
shr
neg
int3
jo
mov
arpl
dec
int
pop
mov
pop
adc
add
and
(bad)
cmp
mov
xor
into
jp
cs
call
lahf
sti
int
add
mov
inc
mov
adc
fmulp
dec
push
loope
ins
jo
sahf
hlt
or
repnz
push
or
xchg
push
adc
fild
xchg
ret
jmp
pop
fimul
dec
sub
stos
adc
mov
add
add
xor
arpl
pop
idiv
mov
add
(bad)
cmps
add
inc
cdq
mov
sbb
push
je
adc
jg
retf
and
pop
out
inc
sar
xchg
jp
ret
dec
je
arpl
inc
xor
xor
dec
jecxz
sbb
mov
(bad)
dec
add
pop
mov
jnp
push
push
pushf
jb
jmp
xor
in
(bad)
outs
add
dec
in
mov
add
cdq
xor
cdq
cs
cmp
ret
dec
mov
push
mov
or
gs
sbb
movs
adc
das
jg
fs
gs
cmp
aam
sub
xchg
inc
stos
int
mov
jmp
mov
dec
dec
aaa
push
push
or
add
enter
xchg
imul
jge
mov
clc
div
imul
jmp
pop
jne
mov
imul
mov
adc
mov
leave
xlat
or
inc
out
scas
xchg
sbb
icebp
cmc
add
cmp
(bad)
sahf
pusha
pop
pop
or
push
mov
scas
cld
mov
sub
shr
jns
xor
clc
std
inc
std
std
sub
and
fadd
call
push
inc
(bad)
or
(bad)
ret
mov
addr16
outs
daa
pusha
pop
cmc
scas
or
and
loop
mov
das
in
int3
in
int
sbb
and
shr
cmp
es
xlat
dec
lods
in
sub
jmp
es
or
cmp
inc
cmp
push
mov
inc
clc
mov
lahf
pusha
icebp
pushf
(bad)
xchg
add
dec
pop
or
mov
in
std
popa
lock
xchg
test
mov
jmp
(bad)
mov
dec
nop
push
cmp
push
pop
out
mov
and
pusha
cmps
mov
das
fild
jge
hlt
ins
or
(bad)
push
fld
jmp
mov
add
lock
out
mov
lods
cwde
lds
and
out
and
(bad)
jo
outs
outs
sbb
cmp
sbb
ins
mov
jno
xor
sub
lea
inc
sub
dec
test
call
mov
xchg
fdivrp
mov
cmps
jb
test
icebp
mov
popa
cmps
ret
call
sub
and
add
xor
or
sahf
ficomp
les
xchg
and
lods
jmp
ret
and
outs
adc
xor
mov
jo
xchg
add
push
imul
xchg
xchg
mov
add
aam
xchg
mov
or
mov
movs
inc
movs
cmc
in
and
(bad)
js
push
leave
jecxz
js
shrd
jmp
ret
bound
repz
pop
mov
out
sub
xchg
mov
push
aaa
dec
sub
ss
pop
push
push
jmp
imul
sbb
sub
jnp
in
fs
jne
lahf
sbb
jl
xchg
cmc
inc
xor
enter
xlat
push
sahf
sar
jno
push
shl
add
mov
or
cmp
mov
out
mov
fstp
cmp
popf
add
or
xor
mov
xor
xchg
pop
inc
pusha
inc
mov
nop
int3
lods
mov
hlt
(bad)
in
xor
and
mov
shl
ins
bound
add
push
loope
mov
pop
xchg
movs
daa
sub
loope
stc
xchg
fisttp
scas
pop
arpl
adc
pop
scas
not
jo
sub
ss
ins
or
fisubr
in
jbe
fwait
repnz
mov
xchg
mov
test
inc
cs
cmovl
std
popf
cli
and
pop
push
rcl
cmps
push
push
or
adc
icebp
fwait
ds
pop
stc
and
pushw
push
cmp
jl
and
push
jbe
jp
fs
and
mov
aaa
shl
es
outs
sbb
push
push
mov
shl
repnz
and
cmp
int
sub
inc
ins
mov
fcom
neg
mov
jbe
repnz
and
push
jmp
xor
or
pop
inc
inc
aaa
adc
pop
(bad)
outs
pop
inc
shl
lods
cwde
lods
aas
add
bnd
xor
sbb
sbb
popa
shr
imul
mov
push
pushf
js
js
div
movs
inc
mov
push
mov
inc
sbb
mov
push
push
pop
frstor
push
jmp
mov
sti
outs
mov
pop
xchg
adc
or
jmp
jl
ja
mov
mov
ss
push
std
mov
jmp
push
mov
adc
out
popf
outs
mov
rol
pop
fcomp
xchg
jge
nop
and
aaa
adc
(bad)
rcl
push
jae
fiadd
push
xor
jecxz
stos
inc
inc
jmp
test
dec
and
dec
fild
sub
lods
mov
pop
aad
loope
and
cdq
inc
sbb
sbb
mov
inc
and
jo
adc
cwde
xor
mov
shr
push
dec
loope
pop
stos
mov
loope
ds
cmps
add
in
bound
call
fcomip
retf
call
fdivr
cmc
fnstcw
ja
mov
fild
mov
cmp
mov
xlat
xor
aas
bound
call
xchg
cmp
adc
and
cmp
inc
pushf
sub
fs
out
or
or
inc
and
(bad)
lods
iret
and
xor
aas
loop
cmps
pop
xchg
pop
sub
and
in
fstp
imul
ja
pop
mov
scas
in
mov
loop
xlat
hlt
mov
call
pop
add
adc
in
mov
leave
cwde
fadd
mov
sub
(bad)
xchg
add
push
push
inc
js
add
ds
gs
idiv
test
xchg
sbb
jns
fs
mov
lahf
cmp
xchg
or
adc
popa
ret
sub
jl
fcom
(bad)
fidiv
adc
dec
xor
add
push
sbb
mov
pop
pushf
mov
sub
push
retf
data16
adc
sub
movs
cmp
add
jg
test
inc
aaa
loope
int3
push
cmc
scas
xor
scas
mov
fidivr
pop
jae
sub
das
mov
adc
jbe
js
mov
je
icebp
mov
aad
out
sar
or
rol
fild
fcomi
xchg
jg
jg
fld
xchg
fcom
push
ins
mov
popf
loope
sub
popa
dec
or
mov
mov
aad
xor
add
jp
sub
sub
inc
xor
sahf
add
(bad)
hlt
jg
pop
mov
mov
lock
xor
(bad)
mov
jge
daa
jnp
mov
inc
mov
addr16
mov
rcl
mov
rol
popf
add
xchg
das
test
scas
cmps
mov
cdq
cmp
out
push
mov
movlps
lock
jo
bound
imul
push
stos
xlat
dec
push
xchg
mov
bound
imul
les
test
sbb
outs
bound
or
fdivr
fsubr
cdq
mov
cwde
adc
pop
aas
cdq
(bad)
xchg
pusha
rol
mov
mov
fnstcw
adc
outs
dec
xor
sub
je
test
pushf
jnp
sub
add
in
lea
loop
or
ins
add
and
loop
and
call
mov
mov
mov
add
pushf
out
inc
fnstcw
pop
push
in
push
ret
bound
add
popa
cmps
add
call
neg
pop
mov
jmp
pusha
aad
mov
imul
push
xchg
inc
call
test
push
xor
mov
out
arpl
fwait
aad
leave
jne
sbb
into
inc
or
and
jmp
fild
or
test
stc
fcomp
aaa
xchg
xchg
ss
xchg
push
mov
popf
mov
push
fdivr
cmp
idiv
dec
and
mov
adc
and
je
dec
jg
ins
or
test
push
cmc
cmp
sub
mov
and
xchg
or
and
mov
push
xchg
xchg
iret
xchg
jl
sub
rcl
(bad)
push
adc
mov
(bad)
add
sub
mov
jmp
arpl
push
jl
das
out
dec
movs
jae
loop
(bad)
sbb
push
(bad)
icebp
lahf
cmp
xchg
pop
or
adc
out
sub
das
cmp
mov
clc
or
ds
mov
lea
aaa
or
outs
cmps
ret
push
test
inc
xor
inc
mov
add
cmp
retf
xlat
jne
jmp
popa
cmp
and
fidiv
add
push
xchg
mov
sbb
pushf
xlat
mov
mov
jne
xchg
(bad)
bswap
lods
stos
mov
push
cmp
xchg
iret
(bad)
xchg
out
hlt
adc
pop
popa
inc
fwait
aam
(bad)
in
movs
push
mov
pop
retf
or
sub
pop
repz
inc
loopne
inc
xchg
lock
xchg
mov
mov
(bad)
sbb
sbb
cmp
mov
pop
pop
lods
stc
and
and
outs
arpl
fldcw
mov
mov
sbb
shr
mov
hlt
sbb
adc
xchg
inc
adc
ret
stos
or
dec
push
jmp
lds
jne
jmp
cmp
out
fidiv
inc
(bad)
int
and
add
push
pop
adc
pop
js
(bad)
pop
ror
cli
test
in
pusha
mov
inc
push
shl
push
add
jge
xor
xor
adc
push
mov
mov
mul
loopne
add
xor
sbb
add
adc
push
cmps
and
out
out
lahf
pop
xchg
loope
ret
dec
(bad)
xor
mov
pop
adc
jmp
jp
inc
jmp
out
xor
outs
sub
das
lds
outs
add
(bad)
push
idiv
jl
fstp
and
push
test
mov
js
inc
in
into
cs
jns
add
ss
xor
std
stos
add
aaa
sahf
movs
retf
ins
out
pop
mov
mov
ret
dec
std
pop
std
xor
inc
push
xchg
fwait
lock
cdq
pop
popf
xchg
mov
mov
inc
popa
(bad)
or
imul
sbb
fst
cmp
mov
jmp
xchg
cmp
add
sub
je
xor
add
stos
pop
lock
ror
push
jmp
(bad)
jecxz
xchg
mov
jge
or
pushf
mov
repnz
jno
jg
out
mov
cvttps2pi
cmps
dec
xchg
xchg
int
sti
movs
ss
(bad)
inc
and
jge
and
push
xchg
(bad)
mov
xchg
xchg
fwait
cwde
sub
cs
call
nop
aas
jle
stc
xchg
ds
sub
in
shl
inc
dec
and
mov
lea
jmp
mov
fmul
stos
shr
sbb
and
fbld
jo
lds
aaa
test
sub
addr16
lds
in
push
mov
(bad)
mov
sub
add
lea
cli
xchg
jae
loopne
mov
loope
sbb
xchg
adc
jle
push
je
dec
add
mov
cdq
mov
lods
sub
test
call
pushf
or
mov
inc
or
push
adc
jmp
loop
inc
inc
adc
int3
jae
jns
mov
sbb
cmp
inc
mov
das
shl
inc
(bad)
lahf
cmp
movs
or
(bad)
fcomp
mov
ret
sbb
fcmovbe
inc
stos
jbe
bound
clc
mov
test
pop
ins
pop
sbb
imul
jmp
inc
mov
lods
fst
ret
and
and
dec
(bad)
sahf
xor
cmp
imul
fidiv
in
push
shr
(bad)
out
cmp
push
sar
outs
int3
fidiv
fist
in
pop
out
dec
jae
outs
ins
imul
add
retf
ss
dec
addr16
mov
in
fucomi
xchg
pop
hlt
in
xor
sbb
imul
adc
pop
or
sti
jne
test
out
mov
mov
mov
and
aaa
call
and
jl
(bad)
out
jle
in
cmp
xchg
lahf
retf
mov
lods
jns
sbb
(bad)
jp
inc
test
add
cmc
or
js
push
mov
aad
push
lds
repnz
push
scas
push
enter
out
out
in
aaa
pop
mov
and
adc
bt
push
mov
fadd
push
fwait
test
sbb
pop
int3
sbb
mov
or
xor
push
dec
scas
sti
mov
and
sti
sbb
outs
popa
cld
cs
push
jbe
dec
jle
aad
add
push
sbb
ret
(bad)
ds
jecxz
icebp
int3
sub
call
je
repnz
inc
xor
jnp
jne
cmp
adc
inc
(bad)
not
into
adc
nop
pop
sub
and
jmp
jb
inc
sbb
fstp
ja
test
sub
dec
rol
pop
shl
mov
fidiv
mov
int
mov
push
pop
dec
stc
(bad)
cmps
fiadd
pop
lock
xor
pop
leave
push
pop
popf
sbb
adc
dec
(bad)
call
cmp
ret
push
mov
add
nop
in
cmps
inc
movs
inc
push
popf
loop
add
arpl
push
js
sbb
not
mov
or
adc
and
jg
mov
mov
jle
mov
xchg
ret
fidiv
add
movs
add
mov
pop
xchg
pushf
pop
xor
mov
jmp
and
push
sbb
adc
cmp
cmp
nop
out
into
sub
out
dec
pop
test
inc
mov
mov
cwde
cmps
lods
test
mov
cdq
xchg
retf
mov
dec
int
fidivr
xchg
(bad)
data16
test
les
(bad)
aaa
test
jmp
adc
mov
add
push
mov
mov
add
dec
pop
in
pop
jge
mov
cs
mul
hlt
mov
sub
dec
sub
pop
call
aam
xchg
or
lds
mov
xchg
jo
jmp
sbb
mov
shl
clc
xchg
pop
push
cmp
in
cmp
jmp
jge
mov
retf
outs
lahf
xchg
xlat
adc
out
cwde
jle
daa
cli
cmp
aad
xor
mov
pop
sbb
push
test
mov
push
mov
cli
pop
pop
xor
pop
xor
mov
mov
inc
lahf
push
jecxz
fldcw
cmp
jmp
jmp
test
clc
in
imul
in
sbb
push
xchg
sbb
jg
dec
mov
jno
ror
ja
not
sub
jbe
pop
jns
rcl
nop
add
jp
fisttp
sar
add
cwde
mov
cld
je
test
add
pop
mov
in
pusha
das
mov
(bad)
ja
mov
adc
sub
(bad)
cs
xor
dec
jnp
xor
imul
ss
imul
push
into
pop
xchg
imul
pop
cdq
jmp
fmul
add
xor
xor
aad
enter
pushf
xor
js
sub
(bad)
xor
int3
call
pop
int3
sbb
jbe
test
mov
push
aad
jo
dec
ret
ret
inc
pop
mov
xlat
ret
pop
pop
mov
cdq
pop
jge
fist
scas
test
ficom
jmp
sbb
xchg
mov
jo
pop
mov
or
(bad)
adc
arpl
cli
push
jnp
ins
fnstcw
add
and
inc
push
jne
inc
aas
inc
int3
ja
mov
xor
lea
lods
out
cmp
ss
jno
loopne
mov
pushf
fldpi
popf
xchg
hlt
fcomip
mov
push
cmps
and
retf
fdiv
loopne
sbb
inc
cmc
mov
mov
(bad)
inc
loope
in
sbb
xchg
mov
inc
push
fist
pop
pop
mov
dec
mov
aam
mov
mov
test
bound
mov
adc
sub
leave
jnp
mov
(bad)
cmp
ror
lock
fs
icebp
pushf
sub
pop
cld
or
cmp
cmp
bound
dec
inc
mov
jb
inc
mov
xchg
xchg
sbb
cli
dec
(bad)
not
xchg
icebp
daa
stc
(bad)
pusha
aas
scas
adc
pop
cld
lods
scas
mov
(bad)
out
jo
pop
or
loopne
aad
rcr
frstor
cmc
addr16
sbb
jp
cmp
xlat
adc
(bad)
cmps
xchg
sbb
mov
mov
and
push
sahf
icebp
pop
push
cmps
pop
inc
mov
xor
test
and
lods
xor
leave
rcl
pop
mov
or
pop
mov
aas
out
jl
ret
enter
mov
ins
clc
and
(bad)
inc
outs
cli
outs
jmp
or
cmp
iret
cmps
mov
push
mov
ins
mov
retf
repz
pushf
or
sbb
out
nop
mov
(bad)
outs
jle
jecxz
sub
pop
mov
dec
movs
add
daa
cwde
les
xchg
pop
or
fucomi
or
ss
iret
dec
gs
lods
fs
imul
mov
dec
jns
fisttp
in
(bad)
cmps
sbb
inc
pop
lds
cli
js
popa
pop
adc
ins
fsub
out
xchg
jne
test
arpl
push
adc
jmp
inc
push
fbstp
push
test
pop
push
call
sub
arpl
fisubr
mov
jmp
mov
aam
lahf
mov
popf
jbe
and
pop
test
jge
test
lods
adc
pop
inc
push
cmp
adc
leave
lahf
out
or
ja
mov
test
mov
xchg
sbb
push
xor
mov
into
jmp
jmp
ss
adc
jns
mov
ds
jb
in
cs
jmp
mov
dec
sub
lock
adc
push
test
jne
mov
adc
cmp
imul
mov
adc
(bad)
mov
mov
add
or
repz
mov
push
mov
inc
xchg
dec
sub
inc
pusha
adc
sub
push
mov
arpl
cmps
pop
fdiv
mov
arpl
into
adc
and
adc
imul
rcr
xchg
data16
mov
xlat
jo
ins
push
test
mov
(bad)
or
push
fild
rcr
jno
data16
xchg
inc
or
mov
mov
and
pop
pop
xchg
cli
jno
and
sbb
fld
jnp
xor
mov
mul
mov
sbb
enter
iret
add
push
xchg
(bad)
mov
fst
dec
ror
adc
sbb
cdq
sbb
push
mov
(bad)
mov
adc
stc
cmps
jb
outs
scas
aam
lock
aad
cmp
aaa
test
out
lods
int
xor
pop
dec
ds
xchg
sar
mov
dec
push
(bad)
jle
pusha
enter
pop
adc
daa
fcomp
inc
scas
add
sahf
sbb
repnz
stos
and
pop
add
test
mov
popf
int3
push
ficom
adc
leave
inc
je
mov
loopne
out
push
sub
nop
shr
jmp
sbb
mov
cmp
xor
cmp
add
fst
pop
mov
std
mov
inc
repnz
sahf
sbb
mov
inc
aas
push
popf
test
(bad)
jecxz
push
test
movs
xchg
inc
cmc
inc
and
mov
mov
dec
add
lds
fimul
pop
xchg
ds
addr16
mov
mov
xlat
inc
and
xor
cmp
adc
xlat
add
xchg
sub
mov
retf
dec
ds
push
imul
jne
adc
xchg
or
xor
icebp
mov
dec
and
or
das
push
(bad)
xchg
push
jge
and
sub
and
mov
int
dec
fdivr
adc
sub
xchg
nop
mov
repz
aaa
pusha
inc
and
jbe
inc
cmp
jp
push
(bad)
jmp
lea
xchg
popa
fucomp
xor
daa
mov
xchg
ja
rol
rcl
or
inc
xor
mov
sbb
sbb
shl
pushf
dec
sbb
push
or
mov
(bad)
mov
pusha
mov
movs
jle
outs
sbb
xor
cmp
mov
push
fild
push
cmp
mov
push
or
pushf
push
addr16
inc
mov
inc
add
mov
jg
add
mov
inc
daa
push
cli
mov
pop
push
add
and
in
sti
fimul
ss
inc
push
adc
retf
leave
xchg
int3
in
dec
mov
call
inc
aaa
jge
into
in
add
jae
icebp
jge
jg
pop
test
outs
push
xchg
push
(bad)
cmp
movs
cld
in
fs
mov
test
dec
lods
pop
jne
cmp
mov
lea
jae
inc
ret
pushf
or
sub
dec
div
pop
add
mov
clc
add
push
add
ds
pop
aad
jg
fdivr
ret
cmp
aaa
jo
int3
pop
mov
push
mov
pushf
into
push
xchg
sti
cdq
scas
and
dec
popa
loop
dec
xchg
popf
inc
mov
mov
je
dec
hlt
jmp
adc
popa
push
and
xor
mov
dec
cmp
cmp
sbb
pushf
xor
loop
cmp
xchg
jo
jns
shl
or
mov
ret
xchg
inc
mov
sub
adc
retf
pop
jmp
push
dec
mov
inc
jo
push
stos
sub
cmp
je
jmp
lods
mov
test
bnd
in
aas
icebp
mov
adc
push
xor
inc
idiv
jg
test
bound
push
pop
xchg
ds
inc
inc
or
pop
sti
outs
cdq
shl
mov
xchg
push
ficom
mov
pop
outs
outs
xchg
jp
jle
mov
pop
sbb
adc
loop
pop
addr16
aas
cs
add
addr16
adc
mov
ffreep
add
mov
scas
and
sub
or
push
add
call
cmc
out
jecxz
inc
int3
pop
dec
aas
cmps
fwait
mov
icebp
xchg
pmaxsw
inc
cmps
mov
pop
xchg
xor
and
test
xor
jmp
mov
or
repz
sbb
push
sub
fstp
ret
stos
pop
add
enter
jne
cmp
mov
jmp
cmc
adc
or
call
out
daa
push
add
(bad)
and
inc
mov
(bad)
mov
inc
lea
imul
inc
add
mov
(bad)
mov
mov
inc
xor
push
pop
std
into
adc
mov
ds
in
cld
dec
add
jns
or
les
es
cmps
repz
jnp
popf
(bad)
xchg
test
push
dec
scas
fsub
aam
mov
push
dec
aad
xor
sbb
push
cli
pop
sub
fwait
or
mov
sub
pop
dec
adc
addr16
cmps
cmc
mov
jecxz
add
mov
xor
mov
ins
xor
add
xor
mov
cs
jnp
pusha
mov
xchg
mov
lea
mov
retf
jmp
mov
loop
cmp
jbe
jno
sti
mov
popa
and
clc
into
sbb
push
lock
cmps
je
iret
adc
push
loop
pop
or
jnp
into
sbb
jle
aam
push
mov
xor
sub
mov
les
jge
or
aaa
icebp
sub
fidiv
pop
(bad)
or
mov
pop
aas
ret
cmp
pushaw
lds
scas
pop
push
test
sbb
(bad)
cmps
(bad)
fisub
mov
das
shl
daa
cmp
pop
fstp
dec
cmp
fsub
mov
imul
test
popa
jmp
nop
jmp
or
hlt
or
adc
push
pop
push
adc
xor
test
leave
not
cwde
fst
jecxz
mov
mov
jno
jb
mov
mov
shl
paddw
out
or
jle
stc
out
or
(bad)
clc
xchg
xlat
(bad)
fidiv
sbb
movs
ret
xchg
cmp
out
(bad)
xchg
mov
inc
xor
xchg
adc
sbb
sbb
nop
jbe
lods
popa
dec
cmc
out
loopne
int
add
pushf
or
cmps
jno
pop
and
cli
ror
dec
xor
sti
imul
push
xor
popf
lahf
pop
mov
lods
stc
test
pop
push
lock
push
fidivr
sbb
inc
rcr
push
push
setb
(bad)
inc
call
retf
lea
and
addr16
aam
mov
push
loope
push
push
jg
scas
xor
mov
sbb
mov
sbb
loope
pusha
adc
fwait
stos
pop
dec
dec
sbb
pop
xor
jecxz
dec
arpl
fild
jo
sbb
or
adc
fsub
jle
popf
cmp
xchg
inc
stos
add
pop
adc
hlt
dec
shl
jnp
cdq
inc
and
arpl
push
pusha
adc
push
adc
xor
push
mov
fnstsw
pop
aam
xchg
out
mov
push
jge
sub
fdiv
in
inc
shl
scas
mov
test
jge
xor
jb
mov
or
cli
dec
lahf
jmp
cmp
xchg
mov
rcl
and
cmc
push
xchg
mov
rol
(bad)
mov
movs
popf
int
inc
push
xchg
int3
fild
scas
movs
or
in
pop
arpl
push
(bad)
jb
push
xor
call
fisubr
leave
mov
sahf
inc
jle
sar
aas
imul
add
xchg
cmp
sub
int3
loopne
retf
and
mov
dec
leave
xor
sub
mov
arpl
jne
ror
mov
enter
mov
cdq
fs
mov
in
das
add
xchg
gs
mov
cmp
cmp
(bad)
popa
and
xor
retf
lods
pop
iret
dec
frstor
lock
cmps
bound
outs
jbe
push
outs
sub
push
sahf
inc
jbe
cmps
sbb
pop
es
push
cwde
jo
sbb
call
mov
pop
mov
jle
loopne
movs
jns
ins
retf
pop
mov
sbb
mov
add
hlt
push
cdq
jae
sti
mov
pop
mov
pop
pop
js
cmp
sub
repnz
add
xchg
(bad)
jnp
nop
inc
pop
hlt
push
mov
xchg
in
sub
mov
(bad)
std
inc
and
std
sbb
sbb
mov
test
enter
mov
jp
pop
dec
stc
push
(bad)
jmp
mov
push
mov
popf
dec
dec
in
sti
adc
loope
inc
scas
mov
ja
sbb
cmp
inc
mov
pop
mov
dec
adc
sbb
aad
stc
pop
popa
push
retf
shl
mov
div
add
jno
or
retf
in
outs
out
int
scas
dec
inc
lds
mov
pop
and
jmp
movs
cmp
mov
mov
jbe
into
stos
jmp
inc
cmp
pop
cmp
mov
js
cli
(bad)
push
mov
ss
jbe
ins
mov
adc
aam
pop
cmp
les
call
out
mov
cmpxchg
stos
jo
cli
pop
movs
xor
cmps
xor
jns
cmp
and
mov
pushf
sbb
mov
movs
sti
xor
push
cmps
clc
dec
or
push
pop
inc
jmp
out
scas
inc
adc
test
add
or
aaa
cmp
mov
jae
sbb
ret
inc
pop
sub
(bad)
xlat
cld
sub
les
and
pop
retf
gs
adc
rcr
mov
mov
(bad)
loope
mov
sub
cmps
add
popa
jp
jecxz
iret
(bad)
fnsave
outs
or
call
imul
fld
jle
xor
repz
mov
movs
(bad)
ds
sar
popa
scas
ror
(bad)
les
scas
adc
mov
sbb
(bad)
test
sub
imul
pop
or
pop
ret
retf
sub
sub
ins
or
stc
repz
in
cmp
sar
xlat
pop
cmp
xchg
cmp
and
jae
jmp
mov
enter
icebp
and
or
xchg
cmp
popa
or
and
loope
in
sahf
(bad)
xlat
shr
daa
div
test
add
and
in
xor
push
push
sbb
or
scas
imul
rol
and
out
lods
in
and
int3
mov
mov
jo
pop
popf
jg
icebp
sub
jbe
push
inc
or
in
in
push
jmp
outs
mov
jp
add
bound
sar
add
xchg
stc
or
js
push
or
pop
in
repz
inc
enter
dec
sbb
or
jnp
fldenv
adc
pop
int3
(bad)
jo
shl
in
cmp
push
xchg
mov
add
movs
and
push
mov
pop
retf
jle
int
and
add
ror
in
std
(bad)
jle
and
sbb
std
sub
mov
stc
into
add
jo
ins
pop
inc
cld
cmp
push
xor
add
adc
lock
stos
xchg
xor
push
and
imul
adc
popa
imul
or
outs
in
daa
hlt
lds
add
adc
aas
cmps
outs
dec
stos
or
ret
xchg
pushf
xor
add
dec
fnstenv
lods
add
mov
jnp
adc
pop
int3
cli
jp
mov
sub
cld
or
xor
inc
test
clc
sub
push
pop
rep
mov
sbb
fwait
and
outs
sub
add
sti
or
ror
loop
fnstenv
aad
gs
shl
pop
retf
stos
pushf
inc
sub
aam
or
adc
push
mov
daa
int3
mov
push
adc
pop
pusha
into
and
div
cmp
push
pop
test
xchg
push
lahf
pop
sti
add
and
and
rol
xchg
fisub
push
bndldx
cmc
cwde
je
rcr
dec
adc
cmp
call
bound
add
cmp
ins
movs
mov
jno
lods
mov
and
and
xlat
mov
test
mov
aam
movs
iret
pop
int
scas
mov
aam
inc
pop
(bad)
pop
inc
mov
adc
bnd
scas
(bad)
inc
fistp
add
add
jp
arpl
sbb
pop
push
ror
jne
(bad)
icebp
sbb
mov
sbb
mov
fild
repz
cmp
xor
adc
cmp
jecxz
inc
fld
jmp
jo
fdiv
imul
int3
xor
pop
mov
dec
jmp
bound
sbb
ret
push
or
and
retf
mov
or
les
xor
xchg
aad
mov
rcl
cmp
in
test
loope
mov
in
cmovs
gs
leave
pop
add
(bad)
lea
test
sbb
or
adc
jg
mov
mov
cld
or
adc
push
movs
sbb
and
mov
cmp
dec
in
gs
mov
mov
jns
mov
(bad)
in
and
(bad)
enter
add
push
movs
call
add
not
and
adc
fdivp
movs
add
or
push
dec
cmp
shl
mov
cmp
pop
mov
or
xchg
jl
xchg
or
xchg
push
inc
movs
adc
sar
push
adc
repz
fdiv
jecxz
cmp
xchg
jmp
jne
inc
lods
pushf
pop
push
fwait
xor
js
pop
jnp
aam
inc
push
xchg
int
mov
xor
jb
retf
scas
dec
into
fstp
add
cmps
jge
es
xchg
out
rcr
pop
xchg
lock
enter
out
outs
mov
pop
lahf
out
movs
mov
jecxz
xchg
xor
or
lods
and
mov
fidivr
pop
and
idiv
lds
push
dec
add
cmp
and
shl
pop
stos
cs
adc
retf
sbb
and
add
inc
popf
rcl
pop
inc
call
aam
pop
inc
in
push
ret
cwde
cs
test
jle
xor
data16
push
sub
dec
pop
in
repnz
xor
loope
rol
jle
jmp
dec
add
lods
sub
push
jg
int3
arpl
mov
aam
add
gs
sub
add
ins
mov
or
in
sbb
fisttp
ret
jp
jmp
or
pushf
xchg
mov
fidiv
sub
gs
pop
push
data16
mov
mov
les
enter
adc
and
(bad)
fstp
loop
cmp
ret
and
adc
add
jl
jle
cld
into
stos
aaa
jmp
lock
pushfw
bound
mov
cmp
fs
mov
repz
pop
xchg
popf
lods
jae
push
stc
cmp
xor
aad
dec
adc
mov
cwde
pop
mov
outs
movs
cs
add
mov
xor
xchg
inc
jge
xlat
fs
pushf
dec
repnz
lea
push
lahf
inc
mov
pop
js
xchg
hlt
pushf
rol
out
and
sub
loop
adc
dec
fdiv
out
xor
dec
cmp
jae
mov
mov
ds
out
mov
mov
icebp
mov
outs
in
imul
xchg
ds
sbb
xchg
gs
push
(bad)
shr
jg
pop
pop
lahf
jne
push
lds
adc
jl
dec
cmps
iret
sub
sub
cmps
pop
dec
inc
mov
(bad)
lahf
js
and
push
and
mov
mov
into
mov
adc
push
mov
jo
xlat
nop
imul
sti
adc
add
pop
int
pop
stos
and
das
icebp
xor
and
xor
test
rcr
dec
sub
scas
add
mov
scas
pushf
icebp
(bad)
pop
xor
dec
out
cmp
cs
adc
(bad)
xchg
or
cli
sub
cmp
dec
aam
inc
push
(bad)
mov
sbb
xor
loopne
xlat
sbb
mov
stos
lods
jne
sbb
xchg
cmps
call
test
cmps
lock
cmp
xchg
jmp
cmp
pusha
pop
ins
mov
mov
cwde
add
add
inc
ins
xchg
or
jecxz
ins
adc
or
sub
js
sbb
adc
pop
cmc
leave
in
clc
add
mov
add
inc
(bad)
mov
or
sar
push
out
add
ret
push
jmp
lea
mov
push
jne
daa
xchg
sub
sub
in
ror
push
mov
outs
jae
pop
jmp
js
and
stos
jl
or
inc
and
scas
fild
push
cmp
sbb
dec
or
lahf
jo
sahf
push
idiv
fwait
mov
and
lock
leave
es
push
sti
call
idiv
dec
mov
and
enter
iret
aad
or
mov
xchg
rcl
ins
push
or
jb
jne
ins
pop
mov
movs
popa
pop
ds
sub
ror
(bad)
adc
call
sub
dec
cs
ins
adc
shr
(bad)
iret
inc
push
call
rcl
xchg
jbe
repnz
cmp
xchg
mov
outs
aas
mov
mov
shr
div
repnz
dec
jns
xor
pop
inc
ret
dec
mov
jp
push
push
scas
and
or
mov
dec
cmp
pop
xchg
arpl
pop
cmp
cmp
(bad)
jae
scas
stc
lds
lock
aam
jmp
mov
bound
std
inc
add
jl
xchg
mov
sbb
(bad)
mov
jmp
sub
cmps
and
sub
sub
xchg
inc
mov
fwait
repnz
outs
pop
je
stos
(bad)
cli
shr
mov
shr
push
and
jns
pop
inc
std
jns
cmp
push
mov
stos
sub
hlt
sbb
mov
jecxz
mov
jmp
mov
jp
out
jnp
xor
pop
cli
xchg
mov
or
xchg
mov
jl
cmp
sub
fldcw
fst
setl
loope
dec
push
xchg
pop
mov
mov
push
lods
or
rol
test
xchg
fxch
inc
mov
div
xchg
mov
cs
stos
push
add
lock
jno
fs
in
xchg
mov
mov
(bad)
sar
mov
inc
call
out
pop
gs
shr
aam
jbe
lds
add
mov
mov
cs
xor
mov
add
test
xlat
mov
cmp
add
pop
test
push
ins
out
sbb
fdiv
es
push
pusha
and
dec
shl
shr
mov
lods
pop
sbb
or
loope
shl
push
dec
mul
fild
cmp
mov
adc
jo
push
jle
test
jp
test
jp
icebp
cmps
sub
ds
ins
mov
stc
push
inc
cdq
jp
jmp
jno
retf
cmp
ret
add
bound
inc
adc
out
jp
inc
jmp
cmp
(bad)
sbb
jo
lods
inc
stos
add
iret
xchg
inc
cwde
push
add
cmc
test
add
and
or
mov
jns
pop
and
or
xchg
add
add
and
jno
adc
retf
cmp
mov
rcr
in
xor
xchg
lea
bound
out
cmp
addr16
push
out
or
es
jns
repz
jge
add
mov
cmps
icebp
addr16
mov
fisubr
or
cmp
lock
sti
push
cmp
pop
or
adc
cmp
push
xor
pop
or
rcl
jne
(bad)
dec
and
jp
sbb
out
sub
pop
xor
fldenv
dec
inc
mov
bnd
rcr
add
out
mov
data16
mov
mov
push
jmp
sbb
dec
je
pop
movs
cli
cmps
cmp
jns
rcr
push
lock
add
cmc
test
jmp
pop
push
cld
fs
pop
add
adc
gs
sbb
pop
sbb
mov
adc
adc
push
stos
ja
add
test
cmp
pop
xor
es
xlat
xor
cmp
fidiv
(bad)
not
add
xchg
cmp
repz
add
push
inc
stc
dec
sub
mov
dec
pop
push
adc
push
ror
pusha
je
call
(bad)
sbb
and
bound
mov
mov
jmp
push
rcl
fimul
cs
jno
neg
(bad)
(bad)
sbb
shl
cmps
cmps
(bad)
dec
(bad)
icebp
push
js
popf
stos
mov
movzx
pop
in
xchg
cmp
mov
mov
pop
mov
and
dec
push
add
fsubr
aad
scas
fmul
xchg
cdq
scas
pushf
inc
or
mov
loop
pop
or
test
frstor
test
adc
scas
push
iret
push
out
mov
add
and
sub
mul
or
cmc
cmp
jmp
ret
lahf
push
mov
xchg
and
push
xchg
inc
in
lock
pop
pop
push
jl
xchg
sub
add
lds
div
mov
fcmove
les
jb
xor
xor
and
out
mov
sub
(bad)
fisub
mov
cmc
mov
xchg
imul
aaa
jno
inc
mov
dec
cmp
sub
dec
fsubr
cs
repnz
xor
jg
pop
gs
loop
cmp
adc
shl
shr
movs
cmps
dec
test
inc
push
xchg
pop
out
sbb
jne
fcomp
cs
xchg
int3
sub
retf
xchg
loop
pextrw
lods
rol
push
jb
xor
pop
xor
jnp
sub
dec
es
mov
fnstsw
jns
pop
addr16
out
dec
shr
mov
pop
enter
jg
loop
into
scas
(bad)
outs
adc
sub
out
xor
shr
and
std
in
xchg
push
sub
add
xchg
xchg
mov
sub
cli
ror
gs
clc
rcr
mov
push
mov
dec
jne
mov
jge
aad
arpl
retf
sbb
icebp
xchg
sub
cs
test
jp
cmc
xchg
xchg
not
adc
mov
loopne
jnp
adc
and
int3
fidivr
and
sbb
nop
jae
das
stos
mov
fmul
mov
lds
aad
ficom
aam
jmp
pop
daa
jl
test
add
jp
dec
cmp
dec
bound
lds
push
or
cmp
sub
enter
xchg
mov
aad
test
(bad)
sahf
jb
mov
and
sub
xchg
imul
inc
stos
dec
add
scas
cmp
inc
mov
cmp
mov
mov
jg
mov
sbb
mov
cmp
ja
adc
push
lods
sub
(bad)
out
or
popf
stos
or
fldenv
lahf
dec
xchg
dec
inc
cmp
jge
ret
push
iret
call
push
fstp
mov
imul
(bad)
or
shr
std
push
pop
jno
mov
out
fwait
icebp
js
xchg
inc
aad
fsubrp
cmp
xor
icebp
out
mov
jle
add
repnz
and
cli
lock
mov
daa
imul
push
cmp
imul
sub
mov
lods
mov
jg
(bad)
aad
lds
loope
in
mov
call
push
or
pop
mov
ss
loop
sbb
jo
xchg
repz
cdq
scas
call
test
sub
add
jl
adc
jg
mov
clc
idiv
dec
movs
xor
or
xor
jne
push
popa
pop
mov
fnstenv
loop
sub
and
dec
jmp
mov
iret
das
popf
dec
js
cmp
sbb
jg
adc
pop
sti
pop
or
jecxz
xchg
sbb
and
dec
mov
icebp
sti
push
and
mov
dec
cmp
mov
movs
mov
mov
and
jns
xchg
mov
icebp
xchg
cmp
and
cmp
mov
push
stos
stos
sbb
sub
push
push
add
neg
jle
in
push
movs
ss
stos
in
mov
fcom
ret
push
cwde
xor
mov
movs
enter
test
retf
jg
lock
xchg
mov
lds
shr
and
push
push
and
jo
call
mov
nop
jne
retf
loopne
div
push
fstp
jo
inc
retf
js
retf
adc
bound
xchg
cmps
add
lods
add
and
mov
mov
fist
jecxz
mov
es
sbb
hlt
mov
push
rcl
adc
data16
shl
call
jp
push
sbb
dec
sub
mov
xor
stos
push
mov
xlat
int
cld
or
daa
fsubrp
out
es
jns
jmp
nop
inc
arpl
nop
cli
test
inc
push
and
mov
pop
(bad)
and
push
push
(bad)
and
aaa
scas
rcl
in
cld
ret
in
cwde
or
inc
sub
fidiv
adc
mov
or
or
fcmovb
cmps
push
inc
sub
or
mov
mov
sub
cs
jns
fisub
loop
or
sub
int3
mov
and
jge
mov
cmp
xchg
loopne
push
dec
into
ret
popf
pop
mov
xor
mov
jmp
outs
repz
mov
aaa
daa
cwde
sbb
ja
push
jnp
push
in
mov
pop
sbb
call
dec
inc
pop
xchg
push
pop
jmp
xchg
test
inc
mov
jp
mov
test
xchg
lahf
or
pop
call
inc
faddp
enter
outs
call
cmp
adc
jmp
cmc
stos
dec
push
scas
cmp
or
test
cmps
add
mov
fisub
dec
mov
cmp
sbb
jmp
dec
xor
sbb
imul
fiadd
cmp
and
arpl
jb
ins
mov
sub
lds
jle
pop
jmp
inc
retf
js
sbb
scas
cmc
hlt
mov
stos
mov
fld
pop
jecxz
sub
add
sub
add
je
push
lods
mov
aaa
mov
xlat
inc
lods
sub
xor
dec
cmps
jl
int
mov
or
icebp
xchg
sbb
out
push
cmp
pop
jo
lahf
xchg
sbb
stos
cmp
mov
ret
mov
test
jl
mov
dec
pop
loope
add
push
(bad)
mov
ret
mov
pop
cwde
hlt
jae
out
repnz
and
mov
mov
dec
into
ffree
mov
hlt
cmp
xchg
(bad)
(bad)
jecxz
das
cmp
into
push
xlat
fdivrp
mov
inc
mov
lods
repz
push
lds
inc
jae
mov
fwait
push
inc
dec
xchg
mov
or
add
jmp
repz
sbb
push
xor
push
pop
outs
fwait
add
pop
xchg
pop
shr
iret
mov
cli
push
xor
(bad)
sbb
sti
jns
mov
xor
enter
dec
inc
retf
scas
mov
push
bound
mov
push
ror
pop
cmp
mov
sub
dec
add
mov
adc
jnp
cmp
adc
adc
add
repz
adc
mov
mov
or
enter
scas
loop
lds
adc
iret
sahf
pop
shr
jl
jo
(bad)
lods
mov
ret
mov
pop
imul
pop
and
cmp
test
dec
arpl
js
sbb
out
stos
mov
cmp
lods
or
jmp
out
push
lods
repnz
imul
das
les
cli
shl
das
mov
push
or
lahf
(bad)
fisub
ins
pop
and
addr16
ficomp
cmp
inc
adc
lea
movs
outs
mov
adc
xor
sbb
retf
test
imul
leave
pop
test
in
cmp
jo
add
aam
xchg
retf
jecxz
hlt
mov
call
sbb
inc
das
push
iret
aaa
push
shl
mov
and
mov
addr16
loope
xchg
push
mov
and
(bad)
scas
in
subps
mov
mov
in
fnstenv
or
call
mov
cdq
mov
jl
das
add
pusha
lds
push
inc
cmps
or
xor
inc
mov
test
mov
cdq
fimul
add
mov
mov
hlt
xchg
push
and
(bad)
pop
aad
scas
dec
aaa
retf
scas
or
enter
pop
mov
enter
popa
xlat
popa
fld
pop
arpl
jmp
jmp
shl
push
xor
neg
inc
sar
sub
jnp
sub
ins
lods
hlt
(bad)
push
imul
push
fadd
inc
int3
imul
retf
sbb
lods
in
sub
std
cmps
mov
(bad)
xchg
out
mov
popa
mov
stos
pop
lahf
fidiv
std
add
xlat
jmp
mov
sbb
mov
hlt
sbb
(bad)
jmp
fwait
pop
jmp
int
pop
pop
arpl
repz
lods
dec
mov
loopne
jl
das
ret
cmp
cmp
cmp
sub
into
sbb
out
stc
cmp
inc
add
cmp
mov
add
dec
aam
mov
jmp
arpl
inc
les
shl
mov
test
pop
xchg
std
aas
sub
push
xchg
jmp
and
imul
xchg
pop
cmp
pop
or
popa
jmp
jmp
out
retf
inc
rol
sti
adc
hlt
fcom
cmc
and
scas
cs
ja
adc
sbb
pop
mov
out
les
xor
inc
loopne
pop
shr
rdpmc
add
lock
fild
mov
jmp
jbe
(bad)
popa
add
mov
loopne
and
mov
aas
movs
dec
lock
pop
add
pusha
or
pop
sahf
sbb
stc
les
js
cdq
cmp
bound
bnd
pusha
fisttp
dec
(bad)
jns
ins
adc
push
xlat
mov
mov
and
into
test
xchg
call
and
push
les
xor
xchg
add
mov
ja
imul
bound
jb
mov
imul
mov
mov
pop
loope
addr16
mov
lea
mov
xchg
out
(bad)
leave
inc
adc
or
jle
adc
adc
adc
sub
loop
cmp
sbb
push
jne
sbb
push
jnp
out
pop
adc
pop
mov
add
cmp
lock
cmp
lods
std
pop
sbb
adc
xchg
stos
(bad)
cli
ret
adc
fldcw
push
lods
xchg
xchg
mov
aam
sbb
mov
cwde
and
test
mov
shr
cmp
inc
cmps
fst
bound
sub
(bad)
rol
out
xchg
scas
xor
jns
imul
test
shr
mov
out
mov
cmp
sbb
pop
ss
fisttp
adc
and
popf
and
fstp
pop
jbe
push
sbb
sub
adc
or
sbb
imul
jp
cmps
test
retf
(bad)
and
stos
ins
js
adc
hlt
cld
sbb
aas
pop
imul
(bad)
leave
(bad)
jno
(bad)
mov
pop
(bad)
fiadd
ja
in
mov
adc
sar
cdq
test
stc
dec
je
sub
outs
adc
xchg
xor
loop
test
cdq
ror
fsub
or
add
push
aad
xchg
dec
dec
(bad)
push
daa
cmp
(bad)
cmc
(bad)
stc
loope
mov
and
dec
push
mov
(bad)
sbb
scas
pusha
inc
ret
out
sbb
push
xor
jmp
jne
outs
pop
sti
mov
sahf
pop
mov
and
mov
push
fptan
add
and
pop
jbe
rcr
scas
dec
adc
inc
pop
pop
fadd
dec
daa
mov
mov
jno
loopne
cmps
icebp
sar
pop
pop
loop
jb
add
dec
clc
out
sbb
fiadd
jge
in
popf
or
stc
mov
push
aam
jge
mov
and
inc
ins
les
cs
fwait
and
aaa
cmp
jns
fbstp
test
pop
cmp
add
xor
and
mov
mov
add
jecxz
and
imul
in
mov
push
frstor
cmp
mov
or
aam
push
out
mov
js
enter
add
adc
and
rol
xchg
add
frstor
ss
inc
sub
add
adc
cdq
pop
(bad)
and
add
inc
sub
neg
dec
sub
inc
in
jg
xor
inc
(bad)
out
cwde
inc
fnstsw
movs
push
scas
das
xchg
xchg
jg
in
mov
aad
js
mov
pop
lods
ins
cmp
xchg
inc
xchg
mov
fsubr
outs
xchg
mov
pusha
dec
push
enter
jle
or
mov
imul
or
test
xchg
daa
gs
mov
sbb
lods
mov
inc
call
call
cmp
inc
mov
loope
cs
pop
stos
xor
add
adc
mov
int
inc
pop
aas
lods
sbb
push
jae
cmps
push
jne
mov
inc
pop
mov
or
push
(bad)
mov
stc
(bad)
jnp
or
inc
loop
int
outs
or
in
movs
pop
lods
add
xchg
test
add
popf
int3
inc
fist
push
jecxz
movs
dec
(bad)
mov
fwait
clc
mov
sar
jl
mov
inc
in
popa
or
fwait
jnp
sahf
(bad)
and
sub
ds
je
dec
mov
inc
xor
addr16
jo
mov
jge
rol
and
stc
and
fwait
mov
dec
retf
pop
jecxz
mov
mov
lock
test
sub
loop
rcl
jbe
loopne
and
rcl
jp
sub
enter
out
xchg
xchg
pop
nop
pop
jmp
sbb
pop
inc
jge
dec
outs
mov
call
movs
and
jb
das
mov
cdq
push
(bad)
loopne
cmps
in
jp
rcl
sar
ja
and
pop
push
sub
xchg
mov
mov
scas
ret
pop
adc
dec
ja
mov
mov
fdiv
cmp
aad
les
fisub
into
lock
hlt
or
repz
loopne
mov
das
ss
lea
push
repz
repz
dec
xchg
xchg
cmp
mov
adc
sbb
sar
and
das
xchg
shl
mov
mov
fwait
stos
in
lods
dec
mov
xor
add
jecxz
xor
lock
lahf
fst
(bad)
jg
mov
pop
mov
outs
enter
inc
ins
mov
xchg
add
mov
imul
or
and
(bad)
mov
or
sbb
ret
xchg
inc
je
push
lock
rcl
dec
in
dec
cmp
clc
inc
(bad)
inc
fist
sahf
jge
aad
mov
cmc
lods
mov
popa
adc
scas
cmps
call
push
loopne
and
xchg
mov
pop
push
test
cwde
pop
push
test
mov
jge
or
pop
fdiv
push
xor
in
scas
out
int3
aas
mov
xchg
jle
scas
inc
push
push
ret
pushf
sub
retf
push
fs
loop
jecxz
scas
fwait
pushf
or
imul
xchg
mov
daa
pusha
test
inc
add
stc
loopne
inc
inc
sbb
nop
add
jmp
push
xor
popa
mov
xchg
inc
pop
mov
push
dec
ins
cmp
rol
test
call
jnp
cmps
mov
mov
call
nop
push
push
aad
jne
dec
fucomi
push
lahf
pop
inc
add
dec
pop
div
cli
mov
scas
adc
sbb
nop
imul
mov
gs
adc
cmp
fist
xor
repnz
cmp
ret
dec
scas
dec
mov
leave
das
mov
lods
mov
adc
or
mov
retf
aaa
ret
loope
xchg
mov
pop
adc
(bad)
test
fimul
add
push
jge
xor
and
add
mov
push
jmp
xchg
cmp
fs
sbb
dec
loop
mov
xor
shl
cmps
lods
sbb
popf
cmp
or
movs
movs
in
(bad)
xor
and
cmps
mov
retf
fcom
(bad)
pop
sub
and
out
xchg
and
push
xchg
cld
inc
jmp
call
dec
dec
jl
mov
sti
rcr
mov
neg
loop
call
lds
mov
or
push
pop
pop
mov
inc
arpl
int
mov
cmp
int
mov
inc
push
cmp
(bad)
fidiv
repnz
push
mov
mov
mov
push
mov
dec
out
sub
and
lea
and
cs
xor
xor
fdivr
not
lods
jne
stc
cli
les
mov
movs
jg
movs
dec
aas
sbb
adc
retf
cmps
jge
sbb
lahf
lods
adc
iret
jmp
mov
jno
test
or
push
dec
scas
xor
fist
push
jle
pushf
xor
cmp
jg
pusha
rcr
in
fstp
mov
int
ror
jecxz
or
inc
add
mov
jmp
xchg
aam
arpl
xchg
add
jno
sub
sub
(bad)
sbb
ins
mov
mov
inc
rcr
push
imul
cmp
in
(bad)
cmp
sti
(bad)
jmp
fxch
aad
pop
dec
iret
stos
lods
cdq
mov
mul
(bad)
xchg
out
sbb
nop
xor
adc
push
jae
int3
add
adc
push
(bad)
das
xor
retf
jne
cli
imul
xchg
xlat
sub
jb
xor
jecxz
into
out
xchg
mov
push
clc
cmps
mov
mov
jns
pop
xchg
cmp
mov
lea
inc
(bad)
dec
loope
(bad)
xchg
xchg
fiadd
pop
jmp
push
ins
add
jmp
mov
push
movs
jecxz
cs
arpl
xchg
(bad)
stc
jne
mov
jnp
sar
outs
sbb
iret
sub
fnstcw
sar
sbb
push
movs
push
leave
mov
shl
dec
xor
pop
movs
in
test
ins
adc
sub
inc
mov
in
pop
loope
aas
mov
repnz
rol
(bad)
mov
cmps
loopne
xchg
or
ret
js
mov
jo
scas
xchg
jmp
test
test
push
mov
pop
push
enter
mov
adc
scas
dec
outs
inc
loope
out
xchg
jg
mov
call
cmp
(bad)
(bad)
rol
xchg
pop
mul
push
aaa
fisub
arpl
cs
test
pop
xor
js
xlat
(bad)
pusha
jp
push
or
loope
jmp
or
sbb
jo
xor
sbb
jmp
jb
xor
fcom
mov
push
cmps
adc
sub
mov
xchg
frstor
jle
std
mov
loope
clc
sub
int
mov
or
xor
pop
ficomp
jg
push
dec
pop
popa
pop
mov
bsf
add
dec
jle
push
mov
aas
add
test
jle
xor
mov
leave
(bad)
test
es
(bad)
into
pop
jp
scas
dec
nop
ror
bound
shr
and
sbb
and
popf
xchg
aad
jmp
cmp
mov
and
xchg
lods
adc
xchg
ins
jb
adc
movs
sbb
les
dec
jge
call
adc
sub
push
repz
push
pop
cmp
data16
(bad)
in
test
icebp
dec
(bad)
lsl
clc
in
cmps
xlat
fs
clc
ins
clc
push
and
and
push
dec
or
mov
dec
adc
fcomip
test
cwde
mov
sbb
int
jo
scas
cmps
(bad)
les
mov
fld
xchg
clc
bound
ins
push
imul
scas
xchg
inc
fdivr
jle
mov
adc
shl
icebp
icebp
ins
pop
xor
push
adc
mov
xchg
sub
and
sar
mov
sub
cmps
rcr
jmp
jle
pop
sub
inc
sub
cld
stos
outs
sub
pop
test
cmp
int
sub
popf
mov
pop
push
dec
pop
dec
adc
fwait
jle
cwde
mov
inc
fcmovbe
xor
pop
pop
(bad)
push
scas
loope
dec
sbb
mov
cwde
fcomip
push
daa
jnp
fist
cmp
mov
sub
jnp
nop
out
jnp
xor
in
ret
add
xchg
xor
xor
loope
(bad)
pusha
push
out
movs
imul
ins
inc
addr16
jp
sahf
test
mov
fidivr
sbb
and
mov
or
mov
fbstp
push
pop
ja
add
int
add
in
repnz
int3
sub
pop
jae
jae
xchg
jmp
ret
inc
lock
test
retf
mov
push
adc
stc
mov
xchg
loope
es
arpl
test
or
and
call
stc
test
into
add
outs
and
pushf
adc
daa
call
iret
cmps
sbb
pop
add
jae
stos
adc
ins
mov
push
push
push
dec
rcl
and
dec
and
xchg
xlat
lods
xor
int
clc
cmp
sbb
jmp
sbb
ds
jae
push
loopne
jno
and
bound
ds
idiv
add
pop
movs
cmp
ret
sbb
loopne
rol
stos
sti
jb
(bad)
int3
loope
je
adc
mov
ss
in
into
jno
pusha
mov
ret
cmps
adc
neg
cmp
mov
mov
les
xchg
aas
fcom
sub
cdq
mov
add
pop
mov
sahf
push
push
xchg
and
outs
mov
push
ds
mov
jmp
add
(bad)
iret
mov
jge
push
dec
jo
cmp
pop
mov
mov
fnstcw
add
call
popa
fisub
test
push
add
mov
retf
jl
leave
push
scas
jle
fsub
in
std
pop
ins
sbb
shr
and
nop
jmp
pop
sub
sub
mov
retf
das
pop
xchg
mov
shl
jbe
adc
push
sbb
ss
fst
iret
test
add
arpl
xor
dec
(bad)
xor
movs
fst
sbb
add
fsubr
cld
cmp
mov
sbb
stc
jbe
sbb
stc
sahf
jg
cdq
push
mov
dec
into
inc
je
cmp
rol
das
jns
pop
fs
jmp
(bad)
jmp
lods
mov
cmps
pop
test
dec
mov
fisubr
mov
push
or
ret
mov
mov
or
and
xchg
mov
xor
pop
sbb
mov
add
cmp
jb
scas
cmp
idiv
addr16
(bad)
es
sub
loopne
or
jns
bound
xchg
aas
fnstenv
rol
mov
test
push
bound
xchg
ins
retf
ret
out
jno
dec
std
push
dec
or
imul
rcl
fscale
push
jmp
jmp
mov
sbb
stc
mov
sti
cli
les
add
jae
jg
gs
stos
cs
add
(bad)
data16
dec
pop
outs
mov
in
mov
cdq
jle
mov
mov
xchg
sub
push
sar
sub
(bad)
call
test
enter
sub
cmp
mov
lds
push
ret
xchg
xor
xchg
dec
mov
pop
fcmovb
dec
mov
test
mul
add
retf
pop
push
(bad)
jns
arpl
cs
adc
push
in
cwde
jno
pop
mov
adc
jb
repz
and
pop
pop
mov
xchg
mov
inc
dec
jnp
mov
sub
mov
mov
xchg
leave
jmp
loopne
dec
push
jns
(bad)
sub
out
mov
test
mov
cdq
dec
js
mov
pop
rol
inc
sub
jbe
jg
aad
rcl
movs
jl
test
dec
jmp
mov
lahf
mov
cmp
jl
and
sub
(bad)
jmp
add
ret
adc
fbld
scas
mov
rcl
call
mov
(bad)
das
mov
and
icebp
daa
inc
aaa
(bad)
outs
dec
out
xlat
jp
lods
pop
pop
(bad)
push
sbb
es
ror
jp
das
cdq
xor
jecxz
in
fadd
iret
xchg
lds
popf
test
push
outs
xchg
dec
fsub
inc
les
jae
into
lods
inc
jecxz
xor
call
jb
adc
mov
int
and
rcr
leave
es
or
adc
retf
push
jmp
add
enter
bound
sub
(bad)
call
sbb
xchg
retf
mov
pop
add
daa
jmp
xor
xchg
lock
ret
inc
js
aam
or
mov
icebp
pop
fdiv
fst
adc
jl
mov
arpl
repnz
jl
mov
jge
xor
test
or
jae
in
out
fnstenv
and
clts
(bad)
xor
lea
mov
adc
mov
retf
loop
mul
fld
les
jo
add
cmp
shl
je
or
mov
sub
rcr
sbb
sahf
xchg
fs
sbb
das
mov
sbb
nop
call
cmp
cmp
ins
ficomp
pop
inc
xchg
stos
aam
mov
add
int
xor
xor
xor
sbb
push
shl
cmp
push
repz
sbb
stos
test
mov
call
mov
pushf
fcmovnb
dec
mov
jl
push
sti
sbb
icebp
into
cmps
lods
jne
sbb
(bad)
and
dec
adc
outs
sub
movs
lock
jb
(bad)
repnz
cmc
lds
push
pushf
shr
add
cmp
psubq
adc
leave
jl
out
mov
and
adc
and
sbb
aam
adc
fdivp
inc
sbb
repnz
jge
lahf
jbe
mov
xchg
mov
int
psubusb
push
ja
xchg
jmp
mov
jle
inc
pop
stos
mov
jns
xchg
int
inc
add
icebp
inc
cwde
sub
jb
out
repnz
loop
mov
inc
xchg
pusha
int3
push
movs
fdivr
(bad)
pop
jmp
arpl
mov
and
fs
mov
data16
inc
fmul
xor
test
adc
mov
mov
dec
jg
(bad)
push
xor
push
cmc
retf
jne
fcmovbe
loopne
lock
sub
test
mov
inc
(bad)
in
hlt
sub
pop
add
xor
pop
into
xchg
clc
das
shr
loope
test
icebp
mov
inc
fs
jle
xchg
das
jmp
add
and
sub
jnp
pop
aad
cmp
xchg
test
jmp
in
(bad)
fwait
add
(bad)
mov
jp
cmps
dec
dec
adc
imul
sbb
mov
xchg
add
cmps
fwait
cli
movs
test
fwait
pop
stos
loop
syscall
cld
adc
mov
jns
push
add
jnp
jne
nop
add
push
jmp
jne
cmc
push
and
aas
cmps
or
xor
jbe
test
xchg
popa
mov
cmp
push
hlt
(bad)
cld
pop
scas
push
lock
xor
fwait
mov
cs
mov
xchg
shl
and
adc
(bad)
mov
push
lods
or
mov
mov
mov
mov
(bad)
xor
in
jnp
push
xchg
xlat
inc
aas
scas
cwde
jbe
arpl
xchg
and
pusha
cmp
push
cwde
xchg
mov
mov
test
aad
inc
jge
and
cmp
mov
int
push
push
fisub
jecxz
loope
add
mov
adc
test
out
dec
loopne
push
lds
fwait
(bad)
jb
xlat
jmp
or
sbb
(bad)
jnp
cmp
jns
xchg
inc
int3
(bad)
sbb
sub
add
mov
scas
mov
jb
xlat
dec
pop
jne
pop
mov
out
push
sub
xchg
retf
mov
sub
dec
cmps
mov
mov
sub
pop
xchg
fcmovbe
clc
mov
outs
test
movs
inc
test
sub
das
xchg
scas
pop
inc
mov
repnz
pop
and
cdq
hlt
pop
icebp
jge
add
lock
cmp
jp
ret
sahf
dec
push
or
xlat
or
retf
call
sub
inc
arpl
shr
sbb
jg
imul
outs
bswap
outs
add
xchg
(bad)
sbb
cmp
xchg
ret
mov
cli
in
outs
or
cwde
dec
mov
call
or
cmp
sub
stos
movs
add
push
lods
add
xchg
loope
aas
jmp
xor
pop
lahf
retf
repz
or
xchg
cmp
fcmovbe
(bad)
out
mov
mov
mov
sub
adc
inc
sub
out
jns
std
push
neg
add
retf
cmps
push
push
mov
push
scas
std
loop
xchg
aas
dec
mov
mov
and
sub
xchg
cwde
push
mov
and
enter
pop
fcomp
push
ror
repnz
arpl
xchg
rcr
ret
inc
sbb
or
or
adc
fld
xor
call
data16
sar
jp
out
pusha
mov
test
inc
test
or
ret
push
cdq
cli
sub
xchg
shr
mov
mov
push
jecxz
mov
lods
pop
ins
cmp
inc
call
push
std
outs
jns
sti
mov
aam
enter
test
push
cmp
popf
jmp
inc
pop
cmps
mov
gs
dec
pop
pop
pop
idiv
lock
pop
push
xchg
mov
jge
jns
(bad)
and
xchg
pop
imul
aaa
push
out
push
hlt
aas
inc
mov
mov
ins
ds
cdq
xor
fsub
mov
push
or
pop
or
xchg
sbb
mov
jbe
jae
dec
mov
popf
add
mov
cmp
and
xchg
xchg
ins
sahf
jbe
adc
cmp
ss
movs
leave
retf
(bad)
sub
cwde
xlat
inc
sub
jp
mov
jmp
jnp
sub
popa
sbb
into
pop
push
mov
int3
dec
popf
cli
pop
call
dec
cmp
push
arpl
fsubr
push
add
popa
sbb
cmp
cmps
daa
jmp
mov
lods
ins
mov
cmp
push
outs
sbb
or
dec
jae
sub
pop
add
shr
inc
leave
mov
or
shl
pop
dec
mov
fs
and
fstp
push
out
ds
jo
pop
arpl
(bad)
mul
add
sar
(bad)
xchg
call
push
add
cmp
gs
pop
sbb
sub
adc
retf
adc
mov
or
xchg
sub
push
push
inc
jmp
pushf
sub
(bad)
mov
out
in
cmp
std
mov
fwait
mov
xor
test
jne
sub
lods
adc
adc
pop
xor
in
sub
push
sub
fisttp
push
cli
jmp
mov
(bad)
mov
push
push
or
xor
push
xchg
adc
cmc
add
fcomp
and
retf
mov
je
sbb
mov
bound
mov
sub
aaa
mov
loop
movs
inc
in
jecxz
outs
data16
dec
jge
mov
add
pop
bound
fcmovb
lods
jb
call
fimul
jns
rol
jmp
sbb
hlt
daa
dec
mov
je
repz
sub
jg
xor
mov
inc
sbb
sbb
int
(bad)
cdq
inc
test
xchg
inc
xor
call
(bad)
or
fisubr
lods
imul
or
lods
(bad)
sti
shr
push
ds
dec
outs
push
mov
aam
and
repnz
retf
mov
hlt
cld
fmul
mov
mov
inc
rcl
push
xchg
test
jge
mov
out
jae
out
mov
jmp
fsubr
xor
jle
loop
add
ss
xchg
loopne
arpl
ret
push
enter
inc
adc
ret
and
xor
stos
xchg
(bad)
or
retf
loope
cld
popf
xor
and
pushf
cmps
mov
cmp
mov
adc
sbb
(bad)
mov
(bad)
(bad)
lock
out
ret
in
mov
repnz
leave
mov
test
pop
mov
fimul
inc
leave
enter
adc
out
into
pop
mov
mov
div
inc
mul
mov
shl
and
repz
out
int
cld
and
addr16
movs
push
sti
or
mov
add
sbb
and
hlt
mov
movs
aam
cmps
mov
or
and
mov
fwait
cmps
xchg
mov
(bad)
ss
mov
push
fucom
sahf
mov
pop
gs
ins
ja
stos
(bad)
jle
outs
xchg
bound
mov
retf
fst
mov
or
mov
lods
inc
fwait
ds
or
movs
scas
je
out
stos
js
or
rcr
add
xlat
add
fisub
sbb
pop
lds
mov
or
jbe
clc
daa
push
mov
pop
scas
int
push
das
sbb
test
gs
arpl
popa
push
and
xor
iret
push
shl
cli
adc
pop
icebp
test
bound
mov
jae
mov
cmp
push
cdq
movs
ss
inc
xchg
(bad)
test
adc
call
fidiv
or
lock
push
test
xchg
cmps
xchg
ja
aam
xchg
jno
inc
mov
push
aas
aas
mov
jp
repnz
daa
xchg
movs
mov
in
pop
pop
adc
ja
test
push
iret
add
mov
mov
sub
jbe
xor
lahf
(bad)
or
test
inc
lock
retf
sti
test
retf
push
or
mov
out
in
out
push
xchg
add
mov
push
pop
adc
sub
outs
mov
sar
pushf
mov
add
xchg
xchg
cmp
mov
sbb
hlt
scas
pop
add
dec
or
lahf
sbb
icebp
cmp
std
ja
xchg
pop
cdq
daa
jae
sahf
jne
sbb
pop
sar
jo
mov
or
xchg
jmp
popa
cmps
xor
retf
jle
xor
mov
out
lods
dec
xchg
popa
mov
push
add
adc
test
jnp
mov
out
and
fsub
dec
dec
push
push
xor
inc
(bad)
mov
mov
inc
mov
in
out
ret
xchg
(bad)
shr
cmps
call
cmp
fwait
pop
test
add
fs
test
add
push
pusha
and
ror
sahf
inc
and
jp
mov
push
jae
out
movs
std
jecxz
inc
popf
xchg
adc
jne
retf
call
lds
sbb
lea
in
aad
arpl
mov
jmp
pop
xor
inc
mov
pop
sbb
aas
mov
data16
inc
rcr
cmp
sub
les
push
mov
jmp
test
pause
adc
outs
push
inc
sbb
mov
ret
jp
sbb
scas
cld
(bad)
jmp
cmp
ds
jno
out
jmp
xchg
jae
mov
leave
and
lahf
dec
jnp
aas
and
lods
push
push
aaa
into
xchg
sbb
or
fild
jp
aad
dec
hlt
gs
add
add
push
outs
jbe
enter
es
jp
call
sub
dec
shr
pop
loopne
adc
pushf
jmp
mov
add
and
xor
and
xlat
cdq
push
ins
pusha
adc
pop
xor
ja
cmp
(bad)
not
mov
jecxz
pushf
jbe
mov
lods
and
popa
shl
mov
in
das
mov
inc
cld
dec
aad
pop
icebp
fst
loopne
inc
pop
xchg
in
adc
add
pop
add
(bad)
nop
jge
pop
mov
and
fdiv
add
mov
fld
mov
iret
mov
add
stc
cmp
daa
pop
and
xchg
mov
repnz
dec
cmp
sbb
fcom
inc
das
ins
adc
fwait
push
xchg
mov
stos
dec
cmp
pushf
cwde
jo
push
clc
push
pop
(bad)
daa
jl
push
mov
pop
sub
jl
mov
addr16
fwait
popa
add
add
add
fdivr
cmc
mov
je
pop
jb
push
or
mov
(bad)
mov
xchg
fbstp
arpl
and
ret
xor
test
aad
test
mov
lods
in
mov
shr
xchg
test
nop
scas
pop
sbb
and
sahf
fiadd
loopne
setnp
dec
sub
stc
hlt
int3
mov
mov
xchg
adc
repnz
add
fwait
mov
push
push
ret
popf
ja
push
adc
pop
test
cmp
mov
pop
or
daa
add
jbe
push
sar
in
sub
mov
cs
adc
retf
mov
inc
dec
jl
aam
or
jecxz
add
xor
mov
dec
xor
fs
pop
xchg
inc
stos
(bad)
cmp
(bad)
jae
cmp
pop
neg
dec
mov
sbb
shr
dec
int3
or
lods
into
jnp
push
xor
or
push
test
movs
or
enter
in
ins
add
dec
add
cld
xchg
repz
loopne
xchg
pop
data16
std
inc
dec
ins
std
xchg
mov
lods
add
lock
pop
jl
shl
shr
lods
repz
cmc
cdq
add
imul
not
or
dec
lods
sub
inc
pop
dec
sbb
push
scas
scas
popf
xlat
sbb
(bad)
push
xchg
sub
jg
push
in
shl
addr16
lds
inc
fmul
inc
mov
jne
rcl
loop
bound
xchg
mov
cwde
mov
xchg
cmp
out
lock
lahf
call
fcmovnb
dec
mov
ret
or
int
adc
sahf
mov
ficom
push
fs
push
aaa
outs
sbb
mov
pusha
mov
xchg
adc
in
cmc
cs
inc
and
xor
pop
jecxz
pop
xor
pop
and
jle
les
inc
imul
int3
push
inc
(bad)
fsub
ss
repnz
push
xor
dec
arpl
xchg
mov
arpl
jno
adc
leave
sub
dec
fcomp
xor
pop
dec
xchg
loope
aas
push
ins
dec
sbb
ret
aaa
ds
retf
push
pop
nop
fnstsw
add
adc
(bad)
push
mov
mov
pop
and
into
mov
mov
mov
xchg
sub
xchg
sahf
and
mov
arpl
jmp
and
and
test
pop
lods
imul
push
ins
in
cli
loope
aad
test
test
ins
push
jmp
les
cmp
icebp
cmp
add
ins
mov
push
je
xor
push
push
ret
cmp
in
mov
sbb
clc
retf
in
mov
daa
call
mov
push
sbb
dec
in
or
and
les
movs
or
call
jne
cmp
out
mov
retf
cmp
and
and
stc
inc
pusha
in
mov
xchg
movs
xchg
push
leave
retf
fs
xchg
add
push
pop
sbb
or
test
mov
and
or
repz
ins
ret
test
std
inc
and
cwde
(bad)
test
sbb
sbb
scas
cmc
std
fstp
fimul
stos
or
ss
leave
adc
gs
je
fnstenv
add
add
pop
mov
inc
popa
retf
fadd
mov
xchg
mov
scas
stc
adc
dec
ins
out
add
cli
or
cmp
rcl
cwde
iret
int
out
xchg
xchg
cmp
pop
inc
in
sar
fdiv
nop
inc
and
enter
push
fwait
mov
jnp
cs
movs
inc
inc
jno
ret
lods
mov
ja
push
push
mov
xchg
mov
cmps
inc
push
mov
jbe
add
gs
in
enter
stos
lea
(bad)
enter
and
leave
mov
jno
mov
in
sub
jne
rol
fcomp
and
mov
mov
cdq
sub
(bad)
in
sahf
int3
stos
dec
sub
je
bnd
pop
(bad)
imul
pop
adc
out
aad
stos
mov
push
xor
sub
pop
popa
jge
(bad)
(bad)
cmp
xchg
sti
pop
jns
shr
pop
cmps
loopne
into
push
jno
or
fisttp
in
inc
repnz
mov
push
fbstp
gs
rcl
mov
movups
xchg
push
mov
sbb
loop
aad
mov
jmp
mov
int3
mov
xchg
rol
add
ror
aad
jne
xchg
jnp
xchg
(bad)
out
stos
jl
push
add
jl
adc
loopne
mov
pop
ret
popa
push
sub
movs
adc
sbb
mov
or
std
fcom
pop
pop
(bad)
jne
gs
lds
lock
test
rcr
mov
mov
pop
add
xchg
or
(bad)
sar
test
lods
in
and
push
stos
push
xlat
xchg
and
mov
lods
outs
inc
mov
repnz
das
jnp
int3
push
jge
lods
scas
scas
ret
repnz
aad
sub
mov
movs
ds
inc
sub
add
push
add
sub
xlat
push
ret
stos
in
xchg
fstp
sbb
packssdw
ror
cmp
not
cmp
pop
rcl
mov
push
xchg
das
mov
push
push
out
fist
les
mov
lahf
jbe
js
popf
fistp
icebp
jne
cmp
daa
dec
into
pop
fstp
clc
push
xchg
imul
mov
mov
xchg
sbb
and
xor
lods
push
or
sub
ja
iret
dec
adc
push
mov
jbe
and
cmp
dec
or
ret
movs
fcomp
repz
mov
lods
cs
std
arpl
aam
(bad)
retf
push
fcomp
(bad)
xchg
push
adc
adc
ds
add
mov
mov
add
lock
add
out
ficom
jg
xlat
mov
je
mov
ret
lea
mov
or
clc
push
and
popf
aas
mov
movs
jbe
cmp
fbld
fisttp
adc
(bad)
dec
pop
(bad)
or
and
fadd
and
adc
xor
jmp
fucomip
shl
neg
pop
pushf
rcr
sub
add
retf
mov
fdiv
stos
loope
pusha
mov
jmp
mov
repz
adc
mov
add
(bad)
popa
sub
ins
bound
sub
mov
rcr
sub
psubw
stos
dec
mov
add
fcmovu
sar
mov
add
or
cwde
cmp
and
mov
out
xchg
fadd
xchg
imul
adc
mov
xor
and
jecxz
lods
mov
add
or
mov
or
pop
cmp
inc
inc
test
cli
jecxz
adc
cmps
rcl
mov
cmc
(bad)
cld
aam
push
in
mov
dec
sar
jle
in
scas
push
pop
sub
leave
cwde
es
or
cmp
int
call
adc
retf
retf
(bad)
cmc
hlt
daa
pop
jb
push
out
retf
loop
mov
in
or
(bad)
std
add
cwde
mov
in
jns
in
or
mov
xor
les
adc
mov
fmul
(bad)
call
mov
mov
jmp
(bad)
add
sub
jae
repnz
aaa
sub
dec
in
mov
cmc
dec
xchg
daa
mov
movs
mov
xchg
cmps
les
mov
outs
push
jge
shl
pop
int3
dec
add
(bad)
adc
push
jbe
mov
aam
cdq
sbb
int3
in
test
lods
xchg
dec
cvttps2pi
movs
xchg
pop
lods
jns
add
inc
sbb
mov
mov
or
jno
popf
mov
shl
dec
jno
or
stos
lods
pop
jno
adc
push
leave
adc
adc
xor
idiv
mov
mov
ds
sbb
cmp
int3
mov
stos
sbb
jbe
push
cmps
dec
lock
jmp
fcom
or
fst
xchg
jb
pop
cmp
aam
sahf
xchg
inc
mov
iret
dec
imul
cmp
fild
pop
ss
ret
das
pushf
aam
lds
sti
lea
inc
in
(bad)
dec
leave
pusha
fdivr
aaa
sub
cmp
js
aas
push
ror
xchg
repz
mov
mov
or
arpl
stos
les
sub
xchg
stos
push
jae
lock
mov
mov
xchg
mov
pop
mov
scas
adc
pop
int3
cdq
adc
cmps
push
ja
stos
popf
(bad)
(bad)
cmp
shl
mov
arpl
sbb
outs
je
ds
mul
repnz
cmc
pop
shl
jecxz
adc
cmova
sub
lds
mov
add
cwde
mov
repnz
fld
mul
pop
cmp
out
pop
(bad)
mov
pop
ja
mov
movs
test
lds
or
ss
stos
ret
mov
idiv
call
movs
es
aad
imul
cmp
adc
xor
daa
push
shr
xchg
mov
cmps
and
jns
mov
aas
(bad)
(bad)
cld
fistp
add
addr16
push
int
dec
inc
mov
sub
lods
out
sub
cmp
aas
sbb
push
dec
js
fsub
scas
adc
sub
pop
jl
sub
jmp
sahf
sbb
and
cld
lods
xor
cmp
adc
adc
cmp
jns
repz
xchg
push
cmp
pop
push
xchg
jge
(bad)
(bad)
jo
imul
push
test
imul
data16
pop
cmp
cmp
stos
add
xchg
aaa
imul
lea
rol
fxch
adc
lock
and
mov
mov
mov
cmp
add
fst
pop
mov
mov
rcl
ins
pusha
dec
outs
xchg
or
outs
cmp
popf
inc
pop
inc
pop
mov
sar
mov
inc
sbb
mov
dec
sbb
mov
jnp
push
mov
and
cmp
pop
pop
push
xor
push
mov
adc
sti
adc
xlat
ins
xor
xor
dec
cwde
mov
cmp
xchg
pop
repz
or
push
inc
fsub
fidivr
jmp
mov
dec
sahf
mov
push
mov
pop
iret
int
sbb
sbb
inc
data16
mov
loope
and
imul
or
sbb
cmp
mov
jnp
inc
mov
jne
adc
xor
mov
lods
and
retf
out
test
test
ret
dec
inc
mov
icebp
fisttp
add
ror
out
leave
stc
sbb
mov
data16
adc
out
add
jo
das
ja
cmp
cdq
(bad)
adc
sub
hlt
add
scas
not
lea
fmul
jp
adc
dec
mov
xchg
test
pop
mov
adc
xchg
fdiv
mov
nop
or
sub
inc
or
pusha
pop
and
(bad)
fmul
movs
push
je
xchg
mov
push
push
sub
xor
xor
xor
fstp
or
or
fist
lods
push
ret
test
jp
ror
sbb
mov
pop
retf
push
jae
into
mov
lahf
mul
sub
sbb
mov
mov
mov
(bad)
stos
pop
sar
and
push
push
jmp
stos
stos
push
fwait
jns
fwait
xchg
sub
je
or
mov
movs
xor
test
mov
test
fld
ss
cmc
mov
adc
loopne
aad
mov
xor
add
and
clc
dec
sbb
loope
add
xchg
int3
and
sub
mov
mov
jmp
pop
daa
add
aad
arpl
cmp
ss
repnz
iret
mov
test
ror
mov
jmp
inc
adc
push
(bad)
in
or
add
cmp
aam
jmp
and
dec
ins
repz
mov
adc
cmp
mov
pop
(bad)
(bad)
dec
add
out
push
bound
js
push
xor
pop
cmp
xchg
sub
add
gs
call
stos
out
mov
iret
fist
mov
adc
mov
mov
dec
sub
(bad)
adc
mov
inc
(bad)
loopne
mov
mov
dec
dec
hlt
xchg
sbb
into
cmp
push
call
fwait
cmp
push
push
dec
xor
ins
push
push
push
loopne
push
push
test
aam
pop
or
xchg
add
call
retf
dec
in
sbb
xchg
cmc
nop
aaa
mov
adc
enter
dec
lock
daa
or
jnp
inc
inc
push
xchg
les
sbb
mov
pop
js
(bad)
cld
not
and
test
in
lahf
sub
ret
test
test
jae
addr16
sahf
outs
mov
out
std
cmp
retf
fbstp
push
mov
out
pop
sbb
icebp
push
test
stc
pop
dec
mov
mov
test
or
inc
imul
stc
mov
loopne
(bad)
jmp
rcl
cs
fs
jo
dec
xchg
mov
mov
(bad)
lods
jne
in
mov
aas
fs
iret
pop
std
clc
push
mov
add
std
dec
lds
aad
lock
sub
adc
and
pushf
jno
adc
ret
adc
dec
pop
xor
call
adc
gs
out
adc
adc
pop
jnp
ss
icebp
ret
cwde
inc
sub
dec
daa
iret
imul
ret
outs
jbe
stc
mov
push
xlat
lahf
push
or
aas
and
punpcklwd
pop
enter
inc
stc
outs
sub
and
cmp
cmp
push
xor
jge
or
in
ins
jmp
sub
test
pop
jmp
ss
sbb
mov
es
mov
pop
popa
pop
outs
mov
fild
xchg
sub
popa
cmp
dec
loope
xor
pushf
loopne
sub
test
retf
xor
or
fst
stc
inc
xor
dec
push
and
mov
mov
sbb
mov
in
popf
test
es
fs
add
retf
out
adc
sbb
xor
push
pushf
imul
repnz
ficomp
icebp
movs
cmp
in
retf
test
pop
dec
mov
jmp
stos
imul
jle
mov
adc
out
jg
cdq
ja
pop
out
fstp
mov
jns
outs
rcr
and
fisubr
(bad)
xor
fisttp
arpl
mov
mov
clc
sub
retf
and
call
jns
push
sbb
movs
dec
and
pop
and
rcr
or
retf
jmp
mov
jmp
stos
in
push
mov
mov
and
test
and
fnstsw
cmp
retf
(bad)
and
lahf
or
fisub
mov
lods
mov
ret
sbb
inc
scas
cmc
dec
sbb
cmp
and
xor
int
pop
add
mov
jae
sub
das
jae
ds
mov
stc
sub
in
es
jno
nop
jmp
jmp
ret
pop
shr
push
addr16
push
aaa
jo
dec
or
rcl
movs
pop
pop
lds
mov
mov
ss
pop
pop
mov
dec
aaa
pop
add
jno
inc
les
outs
jmp
mov
pop
test
inc
test
xor
jne
adc
cwde
outs
shl
ds
inc
pop
(bad)
mov
fiadd
std
arpl
lea
add
dec
aam
imul
add
push
stos
imul
lahf
aam
inc
gs
aas
call
jmp
dec
ja
jp
es
(bad)
int3
int
or
sbb
dec
call
mov
mov
cdq
in
pop
add
xchg
(bad)
(bad)
cmp
mov
ret
jb
dec
mov
adc
iret
les
dec
outs
ins
sub
jmp
jno
mov
paddq
mov
mov
push
adc
pop
xchg
mov
push
jp
and
bound
stos
or
jmp
int
out
and
jns
sub
inc
popf
jb
ins
mov
dec
repnz
push
mov
jle
cwde
popa
jl
adc
push
iret
aam
inc
dec
pop
vandnps
loop
and
pop
fld
xchg
mov
sub
sbb
pushf
mov
in
dec
xchg
fld
xchg
jp
mov
mov
faddp
push
inc
adc
dec
inc
mov
and
mov
pop
dec
hlt
jle
xchg
add
jae
leave
push
dec
push
cmc
mov
and
lods
or
ret
adc
scas
ds
add
in
xor
push
xor
push
dec
mov
(bad)
and
pushw
lock
jmp
cmp
imul
jb
dec
mov
mov
cmp
xor
sbb
mov
addr16
jns
push
cld
inc
mov
mov
mov
jg
cmp
pop
mov
int
gs
push
mov
jl
popa
cli
xchg
lods
test
dec
xchg
jle
clc
popf
ja
sbb
aad
call
cwde
add
sti
push
inc
(bad)
mov
or
sbb
inc
and
or
repnz
test
sbb
outs
arpl
sbb
mov
mov
outs
xor
mov
xor
and
repz
icebp
test
push
cld
inc
pushw
jecxz
and
imul
cmp
ficom
or
lods
aad
jle
adc
mov
cmp
ja
arpl
lahf
stc
div
loopne
cmp
pop
inc
aam
retf
and
pusha
push
stos
pusha
jecxz
or
dec
shr
leave
push
(bad)
in
jmp
sub
outs
jmp
loopne
cmps
test
add
adc
dec
inc
pop
ret
idiv
ins
rol
mov
cmp
add
daa
hlt
jecxz
mov
imul
dec
rol
(bad)
(bad)
cmps
lea
mov
cmp
fcomi
mov
and
push
or
push
out
push
adc
std
adc
fcom
pop
ds
lock
mov
xchg
aad
jl
jp
lods
test
adc
gs
cmp
pop
xchg
neg
sbb
das
add
xlat
lods
inc
xor
jns
movs
in
jo
push
push
mov
emms
cmp
inc
pop
mov
pop
es
pop
dec
imul
daa
inc
and
outs
jns
mov
ficomp
retf
sbb
outs
call
rcl
cmp
cmp
cmp
stos
add
cmp
mov
daa
imul
inc
xchg
jns
cmp
(bad)
mov
loop
and
out
jb
imul
adc
cwde
lods
jp
dec
out
in
mov
mov
add
and
out
xchg
cmp
push
xchg
mov
int
add
push
push
jne
imul
fs
test
sbb
sbb
jno
aaa
fdiv
dec
and
or
leave
mov
xor
fidivr
ficom
pop
call
sub
push
rcr
in
push
ret
sahf
fcomp
pop
xor
jbe
sbb
push
(bad)
loope
adc
idiv
xchg
call
leave
inc
mov
in
pop
icebp
lock
add
sub
bndstx
or
xchg
retf
mov
popa
loop
ins
hlt
and
xchg
inc
push
dec
movs
xor
retf
mov
aam
xor
sbb
or
mov
pop
outs
imul
imul
pusha
je
test
leave
call
sub
or
pop
(bad)
mov
and
(bad)
mov
rol
jmp
mov
mov
push
pop
shl
sub
or
xor
ret
or
test
(bad)
clc
mov
je
cmc
jl
out
not
dec
push
rcl
ja
out
ds
or
stos
dec
add
jmp
jmp
imul
aam
sbb
sbb
cmc
mov
lds
xchg
xor
fmul
hlt
dec
leave
leave
jmp
push
pop
pop
movs
jbe
sub
push
cmps
sti
into
int
sbb
mov
into
mov
add
lods
add
ja
xchg
xchg
stc
xchg
mov
sbb
xchg
or
mov
daa
fdiv
loop
dec
sbb
cmp
xor
mov
xor
and
(bad)
cmp
lock
inc
sbb
sbb
repnz
int3
pop
inc
or
sahf
lds
cmc
or
scas
retf
icebp
xor
xor
dec
fimul
jp
jmp
popf
sub
and
test
call
mov
mov
aam
pop
or
and
pusha
clc
adc
fbld
dec
ins
loop
push
inc
pop
and
clc
sbb
clc
std
add
inc
loop
fdiv
or
or
rcr
or
test
les
pop
mov
dec
(bad)
ret
push
sqrtps
jne
jmp
mov
dec
jg
adc
xchg
out
push
or
stc
stos
mov
jmp
std
sbb
fstp
(bad)
in
mov
scas
bound
lods
out
dec
mov
jbe
fwait
jae
add
sbb
int3
jo
(bad)
adc
xor
ror
pop
into
add
dec
cmc
and
lea
ins
hlt
cmp
xchg
int3
enter
dec
mov
in
lea
sbb
movs
mov
add
jbe
adc
and
sbb
fsub
sub
mov
addr16
xchg
cmp
inc
sbb
jecxz
int3
out
push
cmp
or
xor
add
ins
xor
out
xchg
lods
outs
add
add
jp
and
(bad)
jg
cmc
sub
mov
push
pop
dec
loopne
outs
mov
xchg
xchg
pusha
jbe
hlt
(bad)
out
cmps
mov
mov
xor
fcom
daa
sbb
das
xor
cmps
imul
bound
jb
bswap
iret
cli
ds
sbb
loop
mov
maxps
in
adc
xor
xchg
mov
jbe
mov
psubb
(bad)
xor
xchg
out
and
stc
loope
or
jp
jmp
stos
test
jnp
and
mov
sbb
mov
push
fisttp
mov
and
fstp
test
in
jg
inc
adc
jle
add
mov
sub
sub
add
into
test
cmps
jg
mov
sbb
mov
mov
test
mov
(bad)
xchg
cmp
mov
les
adc
popf
cwde
and
dec
xor
mov
test
xor
jmp
aad
test
rcl
or
and
lock
push
cmc
addr16
pop
scas
icebp
cmp
inc
imul
call
out
mov
push
out
arpl
sub
je
sahf
bound
pushf
cmp
rcl
clc
or
push
fcomp
add
mov
or
cmp
test
(bad)
add
push
xor
repz
mov
adc
pop
inc
dec
mov
dec
push
cli
sahf
scas
lahf
sbb
es
sbb
dec
loop
xchg
pop
fsub
mov
jmp
pushf
and
scas
fldenv
dec
ret
inc
mov
xchg
push
repnz
or
stc
add
fadd
push
and
inc
stos
and
icebp
push
arpl
xlat
jp
xor
retf
call
push
cwde
shr
push
rol
aas
and
pop
xchg
les
ins
sar
imul
cmp
cmp
test
cmp
ror
xor
ja
xchg
dec
sub
sub
pop
jmp
data16
cwde
std
popf
cwde
pop
fstp
stc
jl
push
je
les
push
pop
mov
popa
add
pushf
add
ficomp
xchg
inc
mov
push
and
xor
jp
sbb
imul
lods
mov
xchg
jmp
push
adc
add
or
repnz
cmp
stc
cmps
add
jmp
xlat
sbb
ss
icebp
sub
into
and
add
xchg
test
add
mov
fidiv
add
or
sbb
dec
inc
mov
sub
jp
nop
push
sub
pop
scas
aaa
xor
pop
jge
(bad)
or
mov
dec
xchg
repnz
add
jmp
les
fimul
ins
inc
in
and
stos
mov
mov
aas
mov
pop
mov
(bad)
mov
xchg
sbb
(bad)
imul
jmp
data16
push
adc
mov
jmp
out
mov
cmp
mov
or
jnp
sbb
leave
clc
ds
jecxz
push
add
xor
test
stos
cmp
popa
lea
xchg
mov
(bad)
mul
(bad)
ret
cli
push
xor
dec
aaa
cmp
add
sysenter
sbb
sbb
or
cmp
out
and
xlat
pop
adc
loope
test
push
cmps
add
idiv
cmps
add
cmp
es
inc
push
sbb
and
or
or
mov
push
outs
dec
cmp
mov
shl
retf
add
pop
and
stc
mov
daa
mov
stc
aaa
cmp
mov
pop
xlat
mov
and
xchg
or
adc
sub
jg
imul
push
add
fsubr
fdiv
in
push
out
or
push
ja
mov
movs
sbb
mov
das
or
or
sar
mov
cmc
add
mov
jb
mov
adc
pop
or
(bad)
pop
and
xor
dec
out
movs
xchg
and
cs
shl
outs
push
lds
cmp
sub
mov
add
xchg
movs
cmps
aaa
cmps
fistp
adc
lods
out
fbld
xor
std
fs
stos
ret
push
imul
pop
add
ss
push
call
mov
xchg
shl
inc
sub
je
mov
mov
or
in
dec
jle
out
dec
pop
mov
repnz
and
push
lahf
inc
movs
mov
out
or
mov
mov
pop
cmp
enter
or
xor
out
adc
cmps
jmp
adc
inc
xchg
ret
xlat
push
(bad)
(bad)
pop
fist
in
inc
mov
pusha
or
mov
and
push
dec
imul
mov
popa
js
ins
inc
test
aaa
shr
lock
xchg
mov
sub
sub
xchg
jmp
cmp
and
shl
xor
iret
data16
shr
mov
iret
movs
popa
sahf
mov
push
iret
cmp
mov
inc
and
pop
sbb
or
stos
xor
mov
movs
cmp
jno
add
jecxz
loope
test
and
(bad)
cmc
lea
jmp
jmp
lea
sub
movs
(bad)
out
fwait
mov
dec
jl
mov
call
mov
mov
dec
addr16
sbb
or
jge
mov
cmp
lods
ror
vphaddbq
mov
out
or
mov
int3
out
mov
and
mov
in
push
cmp
sub
cs
push
adc
icebp
pop
xchg
outs
test
push
xchg
mov
xchg
test
xchg
mov
int3
loopne
xchg
inc
dec
xor
and
lds
sbb
test
and
dec
sbb
call
(bad)
jecxz
ret
fist
jecxz
ret
rcl
std
enter
sub
cmps
int3
mov
inc
mov
xchg
xlat
test
jne
add
jns
cmp
xor
imul
adc
(bad)
jae
out
pop
xor
movs
scas
cli
sti
ds
sti
jno
mov
add
xchg
stc
scas
mov
mov
nop
xor
pop
push
cli
retf
repnz
dec
ror
push
aad
sub
gs
inc
pop
stos
inc
or
scas
ror
daa
(bad)
loopne
sub
mov
inc
cmp
sbb
jp
addr16
loope
lds
xor
mov
mov
shr
int
push
xchg
dec
mov
mov
xchg
movs
cwde
mov
jle
dec
lahf
fnstenv
inc
and
lahf
icebp
push
ja
dec
mov
(bad)
aad
pop
xor
xor
cdq
fwait
push
jmp
in
and
(bad)
sbb
daa
mov
push
add
pop
adc
dec
sti
lods
retf
inc
call
adc
jmp
mov
xor
adc
mov
sub
es
and
mov
cmp
test
rcl
lock
loope
dec
mov
mov
out
jecxz
inc
jmp
jne
shr
dec
ror
mov
xor
cdq
in
add
mov
stos
rcr
jnp
pop
push
push
dec
adc
lods
push
movs
push
xchg
mov
cld
mov
pop
lds
mov
arpl
xchg
add
sub
xchg
retf
test
retf
das
test
mov
sub
inc
test
mov
cmp
cmp
push
into
fwait
pop
aad
scas
ja
dec
and
dec
pop
sub
add
ds
jmp
sub
xor
cmp
xchg
xchg
lock
(bad)
mov
pop
in
mov
mov
fdiv
movs
pop
mov
or
add
shl
ins
jecxz
inc
test
(bad)
xlat
sar
xchg
push
nop
leave
xchg
cmp
popf
mov
inc
jne
dec
fdiv
pop
adc
jge
in
addr16
mov
in
or
push
leave
out
stos
pusha
fs
inc
ins
push
call
clc
js
pop
inc
push
xlat
inc
push
push
je
adc
jno
ret
sbb
std
mov
bound
or
or
inc
and
daa
ins
loopne
mov
jmp
mov
xchg
pop
sbb
dec
mov
cmp
add
sbb
sbb
xor
or
sbb
scas
add
mov
pop
pop
call
sbb
icebp
stc
fs
sbb
sbb
div
lea
mov
sub
ret
sub
mov
mov
xchg
adc
sbb
push
xchg
cmps
cdq
xchg
add
inc
push
adc
pop
test
retf
mov
and
and
les
xlat
int
cmp
dec
retf
mov
movs
sub
sub
lahf
add
xchg
xor
cmp
push
push
jge
jae
or
js
aad
adc
ds
xchg
cmp
lods
fmul
jmp
movs
imul
stc
add
sub
nop
out
sbb
mov
leave
add
loopne
adc
add
dec
and
and
or
jmp
dec
lock
lahf
pop
out
repnz
hlt
jnp
imul
aad
jmp
lock
in
sbb
clc
jns
or
outs
xchg
cmc
inc
loope
or
rcl
dec
adc
out
cmp
pop
cmp
or
in
or
mov
cli
into
mov
test
scas
shl
add
lea
rcl
sbb
iret
jecxz
call
xchg
add
rcl
xlat
call
das
push
sti
pop
dec
aaa
mov
out
jno
sub
jne
popf
nop
andps
mov
leave
dec
das
mov
(bad)
mov
dec
mov
aad
xor
ja
jbe
cmp
shl
xlat
call
ja
stos
jns
fmulp
cli
mov
mov
inc
dec
push
mov
and
scas
xchg
adc
fs
cmp
vmovdqa
test
dec
inc
mov
push
cmp
jno
fwait
enter
lahf
mov
test
popf
cmp
xlat
push
mov
mov
test
loope
xor
push
(bad)
aaa
inc
and
repz
in
mov
fwait
fwait
add
lods
fsub
mov
adc
xchg
adc
mov
sar
sub
pop
sti
jg
enter
mov
cmp
mov
mov
mov
rol
mov
jmp
ror
clc
aam
daa
sbb
retf
test
mov
lea
pop
shr
xchg
push
(bad)
fisub
xchg
es
sub
jae
or
sub
aas
adc
leave
js
lock
int3
pcmpgtw
mul
adc
ins
mov
lock
jp
inc
fild
cld
mov
call
add
pop
mov
xlat
(bad)
inc
aas
mov
aas
mov
add
shr
outs
sbb
mov
dec
es
cmp
stc
stc
in
pushf
cmp
cs
mov
stc
adc
mov
jmp
shl
xchg
mov
clc
xor
push
ss
sub
jle
pop
outs
pop
jmp
jae
mov
inc
add
scas
adc
pop
mov
retf
push
push
dec
cmp
and
push
movs
aas
mov
retf
pushf
and
in
mov
push
(bad)
(bad)
retf
ficom
test
add
pop
cmp
jl
inc
cmp
xchg
fsub
mov
nop
mov
dec
xor
js
mov
push
mov
(bad)
ins
ins
mov
sub
push
add
xlat
fucomi
jo
lock
ret
xchg
(bad)
adc
fwait
pop
add
or
sbb
pop
adc
out
sbb
lods
mul
leave
scas
loop
push
lock
inc
shl
and
mov
pop
mov
es
in
imul
movs
pushf
jg
sbb
movs
(bad)
sub
xchg
cmps
into
inc
ret
sar
daa
cmp
push
sub
inc
sbb
pop
xor
add
movs
sbb
fs
fmul
call
jecxz
mov
fidiv
call
add
xor
dec
(bad)
pop
retw
pop
rcr
push
push
adc
ror
std
xchg
leave
rol
pop
xchg
outs
sbb
aaa
lods
inc
pop
push
cmp
pop
xchg
jbe
repnz
adc
inc
ret
scas
int3
mov
mov
nop
sbb
push
mov
xchg
(bad)
rep
imul
jns
cmp
fbstp
adc
es
inc
rcr
add
jp
pop
jmp
(bad)
dec
les
repz
cmp
out
ficom
idiv
test
pop
stos
popf
test
dec
daa
aas
jg
lds
shr
mov
mov
aad
mov
mov
add
sub
xchg
pop
xchg
dec
mov
test
adc
fs
movs
iret
push
sbb
ss
inc
xlat
pop
xor
ds
mov
les
adc
jo
jle
adc
xchg
xchg
sub
add
mov
dec
and
mov
add
call
or
es
aad
scas
sub
mov
movs
cwde
adc
inc
movs
retf
ss
movd
(bad)
xchg
jno
add
push
jmp
cmp
or
loopne
dec
cs
sub
mov
aas
mov
in
ret
jle
test
test
ret
repz
ins
fld
adc
xor
mov
jmp
clc
sbb
pop
loop
and
lods
fld
int
jb
test
lea
dec
fstp
out
cld
jnp
mov
iret
jge
dec
fst
aam
mov
sub
ins
inc
or
jge
ror
cld
cmp
adc
or
icebp
sub
test
pushf
and
mov
xor
push
mov
mov
int3
in
dec
in
jecxz
adc
test
stc
xor
inc
mov
lock
fstp
bound
mov
int3
xor
loop
das
mov
jb
mov
adc
scas
hlt
xchg
cwde
xchg
rol
jae
and
movs
jmp
jge
xor
adc
iret
xor
push
push
pop
mov
sbb
jb
xchg
cdq
and
rcr
mov
aas
mov
loop
lahf
or
sbb
mov
mov
xchg
cmp
sar
or
fucomp
cli
adc
xor
jmp
jno
dec
js
cmc
xor
aad
aam
test
mov
adc
dec
cmp
jecxz
cmp
cmp
mov
pop
mov
test
mov
out
in
ja
stos
js
popa
int3
cmc
mov
ins
fadd
mov
pop
cli
mov
pop
push
cmps
das
call
mov
adc
sub
sahf
xor
jb
pusha
push
popa
pop
inc
data16
gs
js
push
inc
fmul
cmp
cmps
xor
rcr
mov
imul
inc
ins
mov
mov
cmp
pop
mov
stos
inc
add
lahf
(bad)
push
(bad)
daa
scas
dec
jmp
scas
daa
mov
jecxz
in
ret
jae
and
fstp
cmp
(bad)
leave
cmp
aas
mov
aad
mov
sub
mov
pop
add
xchg
ss
add
add
outs
enter
dec
jp
and
in
sub
movs
test
jne
sbb
sub
push
lahf
movs
ret
jns
jge
adc
lds
cmps
jl
mov
xor
and
mov
mov
push
push
(bad)
jmp
out
cmp
stos
sbb
or
sbb
iret
test
sbb
mov
popa
in
clc
repz
pop
cmovbe
into
mov
aas
aad
pop
addr16
lods
pusha
(bad)
sub
fidiv
push
xor
(bad)
jmp
dec
add
cmp
std
rol
dec
(bad)
popa
cs
mov
xchg
scas
jecxz
and
mov
imul
rol
test
inc
cdq
mov
mov
sub
inc
xor
mov
cmp
dec
add
mov
sti
test
test
imul
xchg
retf
dec
imul
adc
and
dec
jbe
pop
call
das
pop
sbb
out
jmp
xchg
or
sbb
test
cmp
mov
mov
and
mov
mov
pop
and
out
ins
mov
loope
pop
push
test
cld
fcom
sbb
in
ret
inc
lock
movs
mov
pop
xor
(bad)
mov
call
addr16
shl
fsub
cmp
out
test
sbb
test
xor
dec
pushf
mov
jmp
xchg
mov
cmp
inc
adc
cmp
imul
sub
mov
aam
daa
cmc
mov
dec
xor
adc
shl
or
and
outs
ss
scas
pop
sbb
xor
enter
xor
push
test
add
jg
das
out
les
push
or
mov
scas
aad
and
push
jno
or
test
fst
fsubr
aad
mov
or
pop
mov
fist
in
cmp
jne
sar
jb
xchg
movs
cwde
das
fidiv
jae
sbb
jl
push
or
jmp
cmp
test
out
sub
mov
jne
push
cs
loope
das
mov
pop
mov
aaa
pop
cmp
mov
dec
jg
daa
call
xchg
lods
std
mov
cmp
ins
mov
shl
xor
push
jns
mov
lods
add
ret
inc
mov
loop
jbe
bound
mov
mov
sti
sub
dec
(bad)
cmp
ret
jmp
mov
mov
js
xrelease
sar
jmp
outs
xchg
push
mov
lods
dec
(bad)
sbb
ret
and
sbb
pop
mov
push
fadd
gs
cmps
cmp
ret
hlt
push
dec
(bad)
sbb
add
and
cmp
or
dec
jno
mov
add
popf
ins
test
movs
push
or
push
addr16
cmp
sub
pop
dec
lock
dec
jecxz
dec
xor
adc
popf
out
mov
pop
mov
in
or
sbb
aas
pop
out
pop
sub
aam
cmp
shl
lods
add
cmp
mov
and
fst
shl
cmp
mov
(bad)
pop
das
data16
add
int
int
xor
mov
mov
jle
jmp
aam
mov
mov
popa
cmp
in
push
lods
xchg
adc
xlat
sub
lock
mov
test
call
cmp
jecxz
call
cmp
adc
mov
and
mov
pop
fld
cmp
sub
dec
mov
mov
mov
push
nop
imul
xchg
mov
xor
ret
fisttp
sar
push
fidivr
rol
push
cwde
fistp
dec
xchg
call
(bad)
into
dec
adc
cmp
or
inc
movs
pop
push
inc
jecxz
or
iret
cli
int
es
test
out
adc
outs
test
aad
fwait
stc
sti
(bad)
or
ja
outs
xchg
xchg
push
xchg
call
cmp
js
push
outs
or
dec
dec
inc
mov
dec
pop
push
inc
and
mov
out
fiadd
fldenv
sbb
popf
faddp
sbb
sub
mov
and
or
nop
mov
sub
xor
dec
cmc
xchg
mov
(bad)
scas
jge
nop
xor
jg
add
and
call
(bad)
push
mov
rcr
dec
jne
fcomp
(bad)
enter
fdiv
jno
test
stos
ds
(bad)
sbb
test
jo
imul
mov
and
retf
sbb
stos
mov
popa
data16
inc
cld
adc
mov
ins
sbb
mov
in
(bad)
push
dec
call
shl
sahf
leavew
in
mov
dec
dec
fistp
out
adc
add
ins
aad
pop
xor
pushf
pop
sahf
test
pop
repz
das
mov
pop
and
xchg
iret
add
and
xor
adc
or
jl
dec
in
pushf
xchg
sub
push
imul
mul
push
pop
test
pop
mov
push
adc
cwde
pop
cld
das
sti
cmps
adc
and
fidiv
pop
aam
mov
dec
dec
test
sub
xlat
adc
dec
(bad)
not
xchg
mov
sbb
and
add
sbb
and
jecxz
cli
cwde
into
std
and
sbb
fbld
push
data16
push
jle
les
cmps
(bad)
jge
es
jmp
xchg
cmps
and
arpl
sub
inc
inc
xchg
and
mov
xchg
nop
mov
mov
inc
scas
cmc
fucomi
fidivr
push
aas
dec
jecxz
push
in
or
adc
mov
rol
cdq
stos
dec
repnz
sub
rcr
fcom
inc
stos
lea
stos
ret
pop
lods
hlt
(bad)
(bad)
push
stc
xor
loopne
cld
retf
mov
ror
icebp
cwde
sbb
mov
add
xor
or
cmp
mov
loope
xchg
mov
pusha
cmp
into
popaw
icebp
(bad)
mov
(bad)
loopne
jo
outs
scas
std
sub
sbb
movs
outs
repz
mov
pop
sbb
sub
jno
outs
(bad)
jmp
aaa
adc
mov
in
mov
mov
fdiv
(bad)
jge
mov
cmps
nop
xchg
adc
sub
adc
mov
adc
loope
dec
clc
or
hlt
xor
xor
push
dec
or
hlt
and
in
repnz
(bad)
mov
shrd
es
addr16
test
push
clc
stos
gs
(bad)
cmp
stc
fwait
sbb
mov
mov
(bad)
push
mov
push
dec
loope
and
adc
sbb
add
(bad)
in
cmp
push
mov
mov
loop
pop
sub
sbb
arpl
xchg
pop
xchg
jmp
loopne
mov
int3
aas
or
pop
ss
sbb
outs
or
out
xlat
repz
inc
cmp
(bad)
add
pop
xchg
jl
imul
dec
xchg
xchg
pop
xchg
outs
in
or
mov
cmp
fstp
leave
mov
mov
and
add
popf
xor
aam
dec
movs
lds
xlat
sbb
stos
hlt
and
fidiv
addr16
retf
scas
loope
xchg
sub
sar
call
ret
sbb
stos
in
adc
cmp
cli
cwde
cmp
adc
push
int
cmps
pop
xor
add
pop
xchg
lahf
mov
pop
retf
data16
mov
imul
inc
mov
dec
loope
into
add
cwde
sbb
sbb
sub
jp
cmp
cmp
jb
enter
adc
fistp
(bad)
inc
ds
aas
sub
dec
fild
cdq
dec
mov
jnp
mov
sbb
xchg
mov
sub
dec
dec
mov
ficom
in
or
sub
out
fprem1
cmp
mov
nop
popf
add
fs
mov
push
jle
(bad)
sbb
stc
xor
out
jmp
mov
loop
ss
pop
jno
add
js
iret
mov
xor
xchg
je
jp
hlt
(bad)
push
imul
mov
int3
sub
(bad)
sub
pop
cld
jo
(bad)
out
(bad)
aam
cmp
xor
loopne
jo
mov
pop
in
jg
shl
pop
sub
int
and
and
dec
pop
addr16
loopne
xor
xchg
js
into
dec
jbe
or
xchg
or
into
rol
lea
or
clc
mov
(bad)
bound
outs
pop
pop
ins
mov
scas
test
mov
mov
xchg
mov
pop
push
push
rcr
retf
adc
imul
jno
cmc
inc
adc
rcr
movs
int
adc
mov
movs
mov
sar
pusha
xor
jmp
stos
adc
ds
and
inc
jae
mov
cmps
push
and
enter
push
rcr
daa
mov
sbb
jge
jb
jbe
(bad)
jne
and
xor
es
dec
xor
mov
popa
shl
stos
out
(bad)
xor
nop
arpl
add
ss
mov
dec
and
push
or
cmps
stos
mov
rcl
push
fsubr
int
adc
nop
dec
adc
push
cld
enter
(bad)
jge
fist
mov
xchg
pop
adc
jmp
std
add
xchg
popf
into
test
pop
bound
inc
and
popa
dec
lock
sbb
and
jns
add
cmp
push
sbb
dec
lea
sbb
in
dec
popf
push
xchg
pop
add
jge
jo
ret
add
or
or
call
dec
aad
test
push
int
sub
imul
adc
sahf
call
in
popf
jnp
popa
add
push
das
or
in
imul
mov
sti
jb
outs
mov
sbb
dec
sub
adc
xchg
aaa
movs
cmps
pop
sub
mov
enter
jns
cmc
jbe
retf
sbb
(bad)
xchg
dec
lds
arpl
or
cmp
push
mov
push
push
ins
fcomp
mov
(bad)
and
fdivr
iret
mov
mov
add
mov
enter
out
call
inc
mov
cld
mov
mov
stos
lea
pusha
div
or
in
sbb
xchg
sub
iret
lahf
pop
mov
inc
jge
gs
mov
mov
fwait
mov
add
jno
pop
adc
aas
das
sub
retf
push
lahf
pcmpeqb
mov
mov
stos
xchg
pop
adc
in
adc
mov
(bad)
in
xchg
mov
dec
mov
aaa
ins
mov
xchg
cmp
outs
inc
daa
mov
inc
cmp
fldenv
stos
lods
out
inc
unpckhps
loope
lock
push
adc
xor
and
xlat
icebp
push
fsub
repz
in
fild
sbb
or
mov
push
adc
iret
iret
int
inc
out
retf
ret
xor
and
(bad)
pop
sub
ret
dec
sahf
pop
add
add
cmp
cs
mov
lds
mov
inc
fbld
ins
cdq
xor
lahf
mov
dec
fcomp
or
mov
ins
out
pop
out
mov
out
sub
sub
ror
mov
pop
loopne
fcomp
xchg
jne
aam
mov
push
ds
pop
dec
xchg
(bad)
sub
mov
cmp
jge
jbe
fwait
and
fucom
das
iret
sub
pusha
pop
aam
pop
fbstp
fild
in
ret
mov
aas
sub
sbb
es
xchg
mov
sti
shl
mov
mov
fs
dec
sbb
sbb
inc
cmp
adc
add
ins
sahf
pop
mov
je
mov
jge
mov
outs
sub
xor
es
cli
dec
cmp
xchg
sub
popa
leavew
arpl
pop
mov
stos
push
lea
pusha
sbb
push
aaa
ins
lods
adc
and
add
je
mov
pop
xchg
shr
aam
jmp
xor
sub
and
shr
cmp
sub
xchg
inc
adc
fsubr
adc
cmc
and
fs
ins
sub
js
jmp
push
mov
push
test
add
shr
jmp
push
sbb
xchg
sub
fisttp
movs
(bad)
push
inc
hlt
add
push
fcmovbe
sub
ins
pusha
jge
test
call
jl
mov
jo
fnsave
adc
xor
add
cld
push
(bad)
ror
and
stos
push
xor
jl
mov
pop
scas
scas
iret
sub
sub
sahf
mov
imul
xchg
jecxz
mov
cld
pop
jae
das
aam
inc
or
call
mov
xor
sub
les
sbb
(bad)
popf
jp
fisub
jno
jp
jnp
push
dec
mov
inc
hlt
leave
dec
pop
in
loope
cmps
call
test
xchg
jbe
outs
rcl
jl
and
popa
sbb
pop
jno
gs
addr16
inc
mul
(bad)
repnz
mov
stos
repnz
add
icebp
mov
add
jg
adc
adc
mov
loopne
add
test
or
jo
sbb
in
sti
gs
push
or
aaa
inc
cli
inc
pop
imul
cmps
in
mov
add
xor
jno
(bad)
mov
mov
mov
mov
imul
sub
es
sar
mov
pusha
das
xchg
stc
test
in
xchg
dec
jmp
add
fs
xlat
retf
ins
sub
outs
(bad)
retf
cmp
addr16
popa
stc
push
pop
mov
(bad)
cmps
iret
int3
cmp
repz
lds
sahf
mov
jb
inc
aaa
loope
(bad)
stos
cli
fwait
push
popa
test
cmp
test
test
out
and
mov
lds
das
test
pop
inc
xchg
inc
push
push
pop
mov
cmp
(bad)
ds
(bad)
sub
ror
pop
push
popa
mov
add
test
xchg
or
retf
dec
fcom
stc
xor
mov
sti
inc
or
mov
sbb
xchg
sbb
jmp
pop
mov
dec
shr
enter
mov
leave
push
out
mov
adc
add
pop
cmp
mov
sbb
adc
pop
inc
sub
je
scas
ret
fcmovnbe
fmul
jge
jno
jo
pusha
int3
repnz
fcmove
inc
(bad)
(bad)
xchg
aaa
or
mov
mov
rcr
jmp
cmps
jmp
vpmaddwd
rol
inc
aad
cmp
cli
jecxz
xor
arpl
lds
jae
cmc
imul
add
or
dec
xor
jp
test
(bad)
mov
scas
push
out
js
dec
cs
cld
xchg
xchg
or
cwde
adc
daa
iret
call
test
stos
jmp
int
fsub
aad
sbb
add
test
sub
icebp
lods
or
mov
not
mov
mov
scas
in
xchg
sar
adc
cmp
inc
fisub
adc
xchg
jmp
in
ror
pop
push
add
sbb
cmps
push
xchg
(bad)
lahf
fmul
mov
xchg
cmp
ins
jg
std
fisttp
mov
or
fild
add
lods
mov
dec
xor
dec
cdq
cmps
or
loop
add
shl
adc
cwde
aad
fnstenv
dec
pop
mov
fwait
xchg
jmp
ficom
ss
dec
rcl
ret
cmc
adc
mov
daa
imul
sbb
jmp
cmp
mov
mov
push
push
xor
in
retf
mov
movs
cs
das
mov
outs
ror
repz
out
retw
cs
outs
out
hlt
dec
mov
mul
cmps
push
dec
lock
or
xor
mov
pop
hlt
jecxz
ret
shl
or
in
js
xchg
(bad)
and
add
push
lahf
std
cld
xchg
scas
clc
inc
adc
pop
and
popa
fistp
in
fst
into
inc
ret
(bad)
mov
rcl
xchg
les
cmp
mov
(bad)
ret
push
rol
popf
movs
stc
int3
push
test
cdq
les
dec
sub
inc
sti
test
sbb
clc
xor
retf
sbb
int3
ins
out
or
pop
and
or
mov
and
lds
push
retf
push
shl
push
mov
hlt
and
pop
in
clc
bound
mov
dec
(bad)
mov
pop
pop
ds
xor
mov
div
push
add
fild
loope
sar
retf
test
loop
dec
and
icebp
stc
dec
adc
ss
repz
or
and
(bad)
push
add
sar
jg
sbb
xor
jbe
jmp
aad
call
sti
aad
xor
xor
ds
call
inc
fbld
adc
xchg
jp
pop
rcr
inc
lods
addr16
sub
imul
mov
scas
add
jnp
mov
mov
or
mov
out
movlps
sub
cdq
adc
aad
push
in
adc
mov
loop
push
xchg
test
add
push
lods
mov
in
leave
idiv
shr
repz
out
inc
cmp
ffreep
mov
adc
pop
out
scas
add
xchg
add
repz
mov
pop
in
inc
stos
retf
pop
retf
add
and
jae
or
int
mov
lahf
mov
push
pop
push
nop
sub
scas
mov
mov
in
in
adc
stos
mov
shl
pop
and
sbb
fs
adc
xchg
cmp
int3
outs
loope
xor
push
clc
bound
nop
jecxz
cmp
imul
xchg
ja
and
int
xor
call
mov
call
cwde
sub
inc
xchg
cli
cmp
sbb
sbb
add
pop
test
into
adc
sub
and
mov
xchg
sahf
sti
mov
pop
add
adc
fs
cmp
scas
(bad)
jg
xchg
inc
scas
das
jle
movs
and
mov
fmul
ficom
mov
shr
xchg
test
jno
ins
pusha
sub
repnz
dec
xlat
push
push
adc
ds
and
je
push
call
scas
push
cs
out
(bad)
aad
jb
and
ret
(bad)
call
inc
(bad)
mov
adc
sub
ret
push
pop
xchg
or
in
inc
sbb
gs
sbb
mov
mov
sub
adc
xor
out
in
adc
cwde
mov
add
rcr
dec
dec
fstp
(bad)
ins
dec
ds
add
pop
xor
(bad)
xor
out
and
xchg
xor
cmp
popa
add
lds
outs
mov
les
jmp
loopne
rcr
mov
push
movs
xor
(bad)
cmp
pusha
mov
aad
jl
sbb
push
inc
xchg
dec
pop
jmp
pop
jbe
xor
(bad)
dec
add
add
xor
pop
mov
cmp
inc
dec
mov
adc
and
(bad)
cli
das
fstp
shr
adc
lock
gs
out
and
jecxz
mov
fisttp
fs
jo
mov
fst
xlat
out
hlt
sbb
push
mov
lock
(bad)
fprem1
(bad)
jo
ja
lock
leave
cmp
pop
jp
ret
std
popa
test
int
jo
aam
fcom
retf
adc
dec
adc
adc
cmc
add
mov
inc
sti
xchg
fyl2x
jns
stos
invd
pop
inc
(bad)
cmpps
das
jnp
adc
add
cmps
and
ficomp
push
add
sbb
fwait
and
add
loopne
sub
aad
push
xchg
enter
ficom
mov
aam
inc
dec
xor
sbb
fcomp
cmp
add
imul
dec
or
and
fdivr
call
icebp
xchg
cs
stos
jo
push
loopne
nop
adc
pop
js
pop
adc
xor
lock
jae
jg
mov
shr
fisub
xor
mov
inc
test
pusha
loop
mov
sub
cmp
int3
push
sub
jbe
bnd
push
jmp
in
push
sub
pop
push
daa
aaa
jecxz
sbb
mov
xor
jle
pusha
movs
rol
lods
add
adc
aam
movs
sbb
popa
sub
push
stc
pop
out
popa
jmp
mov
push
sbb
or
pop
cmps
hlt
adc
not
xchg
push
movhps
in
popa
test
lods
ins
retf
adc
add
mov
mov
and
cmp
xchg
jge
adc
jmp
cli
std
repnz
xlat
xor
mov
and
stc
(bad)
jmp
xor
cs
repz
jl
daa
mov
rdtsc
pop
mov
in
sti
jl
(bad)
jge
rol
sub
dec
sub
retf
push
pushf
xor
sub
cmp
iret
bound
inc
cmp
push
sbb
cmp
push
rcl
(bad)
fcmove
pop
sar
addr16
in
add
enter
iret
jb
sub
push
out
sub
and
adc
in
imul
pop
ins
sbb
cmps
jae
jbe
test
adc
mov
jg
pop
jae
push
arpl
les
push
cmp
outs
jbe
sub
xor
mov
push
xlat
inc
out
and
ret
push
dec
movs
add
dec
aas
call
pop
jnp
and
xchg
fcmovbe
mov
stc
sar
(bad)
mov
push
dec
jg
imul
dec
adc
mov
jb
ss
mov
inc
loop
sti
dec
push
push
fwait
ret
shl
gs
push
in
mov
push
mov
xchg
fwait
ds
pop
push
xor
xchg
bound
cdq
sub
sbb
ja
stos
aad
and
loopne
inc
mov
jle
sbb
or
jo
loop
(bad)
popfw
repnz
fistp
fstp
push
dec
sub
sub
jo
mov
jno
fcomp
test
ins
sahf
mov
(bad)
cdq
mov
pop
(bad)
jb
adc
retf
clc
or
mov
sahf
xor
shr
into
js
jl
ins
gs
stc
push
outs
xor
out
(bad)
aaa
pop
test
in
not
movs
movd
mov
cmp
xchg
adc
aaa
mov
sahf
out
clc
pop
push
add
out
push
mov
pop
pop
mov
scas
bnd
sahf
(bad)
repnz
test
or
int3
in
loopne
imul
movs
iret
jns
dec
inc
or
mov
es
add
jecxz
adc
into
xor
dec
cmp
ins
dec
loop
(bad)
push
jmp
(bad)
cld
xchg
std
stos
retf
sub
(bad)
stos
lea
dec
call
mov
sbb
rcl
cmp
add
add
jmp
sbb
or
std
mov
stos
pop
out
jmp
gs
movs
test
fnstenv
rcr
mov
ds
xor
out
mov
test
mov
jbe
or
xchg
repnz
xor
ins
sbb
and
push
mov
repz
push
(bad)
and
push
jmp
xchg
sbb
jbe
sub
lea
cmps
call
xchg
or
fisttp
call
or
leave
sbb
cmc
cmp
rcr
idiv
pop
ds
clc
out
ins
mov
xor
sbb
fisub
(bad)
int3
xchg
jl
js
mov
mov
xchg
push
ss
xchg
and
in
mov
sbb
jle
cld
adc
dec
fstp
out
arpl
pop
imul
(bad)
jno
(bad)
rcr
pop
mov
loopne
frstor
jle
dec
pop
push
pop
sbb
jmp
test
mov
lods
ins
mov
jbe
mov
mov
cmc
aad
jno
lods
cmp
pop
iret
paddb
pop
js
(bad)
mov
jbe
mov
fisttp
jp
(bad)
dec
dec
xchg
lds
ds
int
arpl
add
in
push
and
cld
cmp
xlat
sahf
xchg
xor
ret
iret
and
fsub
fdivrp
das
sahf
call
inc
cmp
sub
sbb
or
jae
popa
mov
inc
jge
dec
inc
lods
mov
call
ret
ins
shl
call
push
std
sub
pop
retf
stc
out
jo
lahf
sti
dec
mov
jb
in
adc
jae
int3
cmc
mov
jno
inc
lods
inc
dec
std
out
pop
dec
cmp
mov
cs
dec
sub
pop
pop
jecxz
ror
fdiv
mov
xor
imul
imul
int3
mov
inc
scas
addr16
(bad)
out
or
ss
pop
imul
xor
add
test
mov
inc
aam
cmp
push
adc
(bad)
test
push
imul
inc
and
or
mov
icebp
mov
in
adc
enter
ret
inc
stc
(bad)
sti
mov
dec
ror
push
push
and
xchg
jnp
sbb
sbb
test
test
mov
pop
inc
(bad)
xchg
gs
jb
adc
dec
or
mov
adc
sub
cmp
xchg
fisubr
icebp
mov
mov
xchg
mov
ror
fadd
pop
jbe
push
or
fiadd
scas
jo
cmp
xchg
or
adc
ins
jl
jmp
sbb
in
loopne
mov
lea
xchg
inc
pushf
test
adc
daa
xchg
inc
dec
adc
hlt
imul
in
jb
inc
inc
xlat
mov
inc
add
jl
xor
inc
mov
popa
mov
push
xchg
pusha
loopne
cmp
sub
cmp
xchg
and
push
mov
in
fistp
pushf
and
ror
adc
fiadd
mov
retf
dec
(bad)
out
movs
pop
mov
fmul
hlt
(bad)
mov
cld
push
movs
inc
bound
repnz
jbe
call
test
aam
aad
jge
push
(bad)
bnd
rep
or
imul
pop
es
sbb
inc
les
pop
hlt
in
fmul
and
mov
in
sub
inc
pusha
addr16
pushf
and
ins
xchg
lea
jae
in
mov
data16
das
jno
rcr
fadd
test
adc
pop
aam
inc
inc
fcom
or
xlat
xchg
cmp
mov
mov
cwde
sbb
cmp
and
mov
dec
xchg
call
repnz
bound
jecxz
scas
mov
(bad)
mov
jl
loop
push
xor
shr
adc
shl
push
xchg
call
rcl
push
mov
nop
push
add
fild
loop
xchg
mov
jne
repz
(bad)
cmp
out
fucomp
std
dec
sbb
or
mov
cmp
das
push
lds
cmc
mov
pop
adc
dec
and
ficom
mov
mov
xor
sahf
retf
std
mov
add
call
out
and
mov
sbb
cmp
sbb
cmp
ret
fcom
aaa
in
icebp
cmp
in
pop
mov
(bad)
lea
jl
js
inc
mov
jmp
pop
jmp
shr
add
std
xor
out
scas
inc
in
mov
push
sbb
stc
mov
pop
jae
pop
sub
out
adc
jnp
cmp
push
jnp
fcomp
dec
pop
(bad)
scas
pop
mov
cmp
ret
test
push
push
jl
ins
jp
mov
shl
sub
sar
add
mov
cld
aas
mov
js
fwait
cmps
aad
lods
jmp
sti
fnstcw
shl
fisttp
rcr
gs
mov
mov
push
or
adc
in
mov
test
and
sub
xlat
mov
adc
scas
ds
mov
shl
call
inc
mov
cmp
enter
xchg
push
ret
cld
or
scas
cdq
je
jnp
ret
je
in
cld
retf
idiv
and
mov
jo
mov
(bad)
ss
xlat
inc
sbb
and
bnd
out
out
dec
ror
test
shr
popa
mov
(bad)
lock
pop
fild
jbe
fistp
adc
add
xchg
cli
in
mov
dec
into
xor
pop
jg
fidivr
addr16
and
adc
stos
arpl
dec
add
in
pop
imul
pop
leave
inc
adc
sbb
sub
jmp
fiadd
cbw
call
(bad)
(bad)
dec
dec
xor
data16
(bad)
sar
cli
int
lock
mov
or
mov
lds
adc
add
mov
mov
aam
and
xlat
retf
mov
fsubr
or
xor
pop
ds
adc
adc
out
cs
sbb
mov
jmp
enter
imul
arpl
add
out
push
cmp
ret
cmc
cmps
mov
shr
inc
stos
sub
cmp
cdq
mov
rcl
lahf
sbb
jge
mov
jl
loopne
cmps
mul
pusha
movs
dec
xchg
mov
lods
(bad)
fucompp
xor
jmp
mov
pop
test
js
mov
xchg
adc
sar
mov
dec
into
aaa
or
mov
imul
imul
adc
cmp
jb
fs
ret
cmp
cmp
stos
mov
mov
add
pop
shl
sbb
movs
aad
cdq
fisub
mov
bound
pop
push
outs
sbb
or
fld
mov
enter
hlt
jnp
adc
inc
test
rcr
daa
into
xor
mov
out
and
jne
dec
push
sahf
sub
xor
jmp
push
push
out
push
stc
movs
cmps
std
and
cmps
shl
call
sahf
push
hlt
repz
(bad)
jg
pop
in
adc
popf
xor
jl
cli
fild
mov
arpl
add
(bad)
mov
pop
mov
loop
sub
and
xchg
mov
lods
fsub
push
inc
sub
js
cmc
call
stc
sub
xchg
xor
inc
jecxz
xchg
ret
add
cmp
es
enter
xchg
or
cmc
jne
(bad)
(bad)
jecxz
xchg
arpl
jns
out
fisttp
inc
add
mov
dec
scas
rol
mov
loop
mov
test
repz
dec
jae
out
mov
in
xchg
jle
jge
cli
popa
mov
popa
lods
cmp
fcomp
jno
mov
jmp
aas
jae
inc
jle
mov
fcomp
std
mov
jae
loope
sar
and
adc
loope
mov
mov
mov
adc
ja
and
fwait
or
bound
or
add
mov
mov
test
jmp
sub
inc
icebp
aad
pop
sahf
mov
cdq
add
out
shl
jb
mov
fbstp
loopne
adc
out
jne
jle
ficom
cmp
pop
(bad)
mov
jmp
add
dec
push
ret
cmc
cmp
mov
mov
dec
lea
cmp
sub
lods
enter
jle
or
fdiv
sbb
adc
sti
and
inc
sub
and
div
cld
adc
retf
push
mov
mov
sahf
stos
adc
cmp
xor
call
loop
adc
add
fadd
data16
push
push
les
add
retf
sbb
loope
ja
dec
test
mov
pop
mov
mov
sbb
jg
or
in
cmps
or
push
movs
(bad)
jns
add
mov
arpl
jp
sbb
int
dec
push
adc
scas
pop
(bad)
pop
(bad)
imul
ins
sbb
pop
int3
fadd
jae
ins
adc
lods
dec
pop
ret
jle
mov
out
ins
rcl
dec
jae
bound
shr
daa
ret
shl
cmovae
loope
imul
mov
in
(bad)
and
xor
adc
pop
xchg
scas
push
out
pop
sub
push
mov
lock
pop
jnp
mov
xchg
icebp
repz
adc
xlat
popf
pop
sub
imul
aas
mov
push
ss
pop
cmp
push
mov
sbb
mov
adc
sbb
xor
jne
inc
cmp
les
cmps
outs
not
mov
cmp
push
jno
fs
lock
mov
add
jmp
jnp
(bad)
adc
out
ins
and
or
scas
push
test
dec
mov
sahf
cmc
sbb
mov
and
(bad)
test
adc
stc
outs
ret
sub
xchg
add
mov
sub
mov
mov
jl
fild
dec
adc
jnp
jns
ret
outs
je
add
mov
popf
mov
push
arpl
cs
add
(bad)
cld
nop
pop
xor
js
sub
bnd
fdiv
outs
dec
sar
xor
out
mov
ss
mov
mov
mov
into
fdiv
js
mov
push
push
ficomp
bound
pop
test
jbe
test
pop
push
shl
js
adc
fdivr
les
leave
inc
dec
push
pop
dec
dec
pushf
and
jp
in
stos
xchg
sub
cdq
or
inc
pop
fist
jne
stos
in
cld
test
in
rcr
mov
(bad)
mov
jns
mov
mov
js
scas
xchg
cmp
dec
adc
jmp
xor
mov
pop
sub
push
jle
inc
mov
cmp
mov
test
fwait
repz
xor
or
fs
and
popf
lods
rcr
inc
cmp
pusha
mov
dec
enter
xchg
(bad)
push
sti
int
xor
int
mov
enter
jmp
ss
into
stos
cmp
in
call
mov
pop
pushf
cmps
add
out
push
test
arpl
push
test
pusha
cmc
int3
aaa
das
loope
add
sahf
iret
dec
(bad)
hlt
xchg
push
retf
ss
sti
mov
dec
pop
jmp
push
div
stc
cmp
push
sub
and
fisttp
cmp
stos
or
sbb
ins
(bad)
imul
xor
addr16
mov
add
xlat
fbld
cdq
dec
das
add
xchg
push
pop
sbb
and
mov
dec
arpl
loopne
(bad)
lahf
imul
imul
ins
cmps
psllw
(bad)
push
sub
cmps
call
dec
jae
dec
scas
sbb
or
dec
cmp
call
cli
mov
movs
shr
cmps
jo
ret
push
xchg
mov
cmp
int
ds
and
push
adc
cmp
mov
lock
call
jbe
jno
je
sbb
add
sbb
movs
(bad)
fdivr
xor
cmp
les
jge
test
(bad)
xlat
mov
stos
call
ss
lds
inc
mov
stc
scas
sub
pop
ins
popfw
push
sub
xor
xor
cmp
mov
adc
pop
sar
add
lahf
sub
xchg
call
lahf
and
frstor
mov
or
bound
js
stos
or
test
cmp
imul
cmp
fistp
aam
leave
push
or
or
hlt
mov
xor
sbb
outs
cmp
pop
cld
and
or
fwait
push
mov
je
lods
add
jae
out
and
cmp
jge
pop
mov
sar
hlt
jle
ja
aaa
cld
add
xor
cmp
add
sti
mov
(bad)
stos
add
and
imul
loop
stos
xor
imul
mov
dec
pop
xor
sub
ficom
lock
xlat
repz
inc
xor
sub
xchg
cmp
dec
adc
jb
data16
movs
punpcklwd
pop
sbb
jo
or
test
xor
and
mov
call
stos
jb
or
jb
scas
mov
ss
jnp
ins
daa
(bad)
and
div
mov
adc
inc
aam
mov
or
and
mov
mov
daa
aad
test
xchg
mov
mov
mov
inc
cmc
aad
(bad)
jns
out
arpl
add
iret
rcr
leave
shl
add
adc
jge
sahf
mov
mov
das
xchg
(bad)
jmp
sti
inc
push
mov
xor
push
or
es
sysenter
and
ret
or
cmc
aas
xchg
sub
cmc
in
retf
fimul
xor
pause
sbb
mov
adc
lock
fldenv
inc
je
les
or
xadd
mov
ds
mov
jl
mov
push
std
xchg
xor
ins
add
ss
add
push
stos
fsub
jno
fist
xchg
(bad)
cwde
jmp
mov
fucom
jnp
jb
loope
push
or
rol
jle
out
and
ss
lea
ss
fidiv
push
out
(bad)
aaa
aas
sub
scas
aam
lods
cmps
push
add
sahf
mov
mov
lds
adc
ins
int3
push
sub
cmp
and
ins
std
or
jnp
cli
sub
loop
ret
aaa
(bad)
stc
xchg
push
mov
dec
(bad)
pop
and
sub
mul
lock
push
aad
scas
mov
jb
movs
sub
and
in
cli
ins
adc
cwde
mov
mov
or
mov
pusha
adc
shr
sbb
aam
lahf
add
aam
jmp
inc
mov
arpl
add
mov
xchg
mov
stc
idiv
mov
mov
enter
push
mov
dec
mov
pushf
jge
leave
sub
fldcw
stos
and
fild
pop
test
adc
repnz
inc
call
push
sub
dec
push
xor
cmp
push
imul
imul
pop
inc
mov
(bad)
push
cmp
stos
jmp
inc
imul
enter
test
retf
sub
cs
mov
inc
pop
cmp
inc
movs
adc
push
mov
std
stc
mov
jecxz
scas
mov
cmp
adc
or
xor
add
inc
or
jo
popf
adc
aas
mov
adc
mov
fisttp
cmc
cli
mov
jae
jmp
or
inc
mov
xor
(bad)
es
adc
jmp
dec
dec
push
pop
icebp
and
icebp
add
mov
fdivr
push
xor
or
repz
push
cmp
and
mov
push
mov
dec
inc
sti
dec
mov
dec
rol
adc
push
retf
push
scas
fst
add
scas
aaa
movs
ds
shr
pop
cmp
xor
stos
mov
movs
movaps
jo
fwait
ja
adc
dec
test
aaa
rol
mov
pop
jl
dec
(bad)
and
and
mov
and
pop
retf
xchg
dec
xor
in
outs
fucom
mov
mov
pop
jo
add
mov
push
out
ja
push
mov
(bad)
shl
js
je
fdiv
dec
xchg
push
xchg
cmps
xchg
sub
adc
pop
xchg
inc
(bad)
int
pushf
ss
inc
adc
and
push
(bad)
popa
add
adc
push
sbb
or
(bad)
xchg
xor
shl
add
adc
mov
lods
jae
aas
add
test
fcmovnbe
adc
sub
adc
in
out
pop
xlat
mov
xor
call
lock
mov
inc
fmul
repz
call
out
(bad)
and
mov
inc
fwait
xor
mov
ss
jl
dec
dec
jmp
mov
in
loop
mov
mov
and
pop
sbb
in
or
jp
add
mov
push
shl
jnp
cmp
inc
lahf
pop
jl
inc
jecxz
xchg
inc
xchg
in
cmp
xlat
stos
adc
cwde
fs
jo
mov
or
imul
test
popf
test
popa
mov
jo
dec
into
push
(bad)
fisubr
mov
inc
push
(bad)
movs
inc
and
inc
enter
and
pop
pop
mov
js
clc
cmc
pop
mov
xor
out
je
arpl
int
out
adc
cmps
aam
test
and
imul
sub
clc
push
dec
repz
call
outs
add
or
xchg
inc
push
inc
dec
rcr
repnz
repnz
dec
adc
imul
pop
imul
fldenv
pop
xlat
pop
in
push
shr
jns
add
inc
dec
(bad)
repnz
mul
jmp
cmps
addr16
mov
pop
mov
dec
add
into
aaa
aas
(bad)
out
inc
pop
xchg
inc
add
retf
mov
ror
push
jmp
(bad)
ficomp
call
mov
push
je
adc
inc
or
gs
nop
xchg
ins
mov
scas
stos
jge
xchg
(bad)
stos
syscall
addr16
mov
pop
das
test
je
pop
lea
fstp
mov
push
je
xchg
scas
loope
xor
cli
enter
adc
pop
jmp
and
daa
and
mov
inc
sbb
and
cmp
inc
push
mov
cmps
xor
sbb
pop
adc
pushf
cmp
add
jge
(bad)
ss
or
(bad)
iret
in
clc
jmp
xchg
scas
scas
adc
xchg
int
nop
xor
lods
arpl
push
ret
(bad)
cmp
cli
int
cmps
or
inc
loopne
xchg
mov
sub
inc
jge
mov
ror
outs
(bad)
dec
add
repnz
mov
pop
dec
aad
mov
dec
loopne
jge
das
dec
ror
sbb
scas
cmp
jbe
pop
movs
out
bound
mov
test
out
ss
lods
shl
jmp
mov
aam
std
sbb
and
sbb
push
lds
mov
std
int
push
ret
push
je
test
mov
jb
mov
sub
jge
(bad)
mov
push
lods
mov
mov
cmp
hlt
and
mov
ins
add
pop
les
mov
adc
inc
and
cmp
clc
retf
leave
and
in
jne
and
pop
mov
cmp
aam
xor
mov
adc
and
mov
popa
pop
lods
sub
xlat
cli
mov
pop
mov
fbstp
retf
jae
mov
(bad)
mov
stos
popf
loop
iret
sub
inc
fwait
test
repnz
lea
fs
mov
cwde
shr
mov
addr16
lds
xchg
dec
sub
lea
jo
mov
mov
mov
xor
fdiv
mov
jmp
(bad)
mov
push
xchg
fneni(8087
cwde
add
dec
sbb
jns
mov
xchg
test
mov
daa
ror
clc
adc
xchg
sbb
mov
mov
and
xchg
pop
cmps
(bad)
paddusw
mov
aad
inc
ins
or
mov
mov
sti
repnz
inc
hlt
xor
jecxz
dec
nop
xchg
jbe
inc
add
int
repnz
or
ret
lahf
xchg
gs
and
xor
push
push
push
cmp
jns
out
adc
xchg
test
sub
xchg
nop
inc
and
or
add
repnz
pop
int
pop
sti
and
loop
mov
rcl
jmp
adc
addr16
call
test
cmp
mov
add
repz
mov
push
or
xchg
mov
in
xchg
ja
sti
fsub
inc
fmul
mov
and
fist
sub
(bad)
jmp
outs
inc
cld
pop
movs
sub
cld
addr16
out
cld
mov
out
dec
in
call
(bad)
pop
icebp
jmp
inc
aad
test
adc
sub
mov
mov
in
add
adc
out
jecxz
add
pop
jae
and
aaa
ins
cmps
push
xchg
mov
(bad)
lods
dec
dec
sbb
div
inc
sbb
nop
loope
daa
mov
or
leave
xchg
dec
mov
das
cdq
sbb
test
sbb
or
(bad)
lods
add
push
sbb
add
out
push
xchg
add
rcr
in
ja
mov
adc
mov
xor
push
fwait
cdq
add
pop
ret
aas
and
int
in
dec
(bad)
loopne
adc
add
rol
test
retf
xor
inc
retf
jmp
sbb
cmp
add
jl
gs
arpl
sahf
add
xchg
retf
dec
imul
mov
retf
cmps
loop
sbb
(bad)
dec
push
out
enter
pop
mov
lods
pop
push
scas
push
int3
stos
adc
cmps
cmps
jmp
add
sub
pop
add
jl
in
das
and
push
or
push
retf
mov
popa
xchg
test
xor
enter
retf
call
addr16
rcl
data16
stos
jl
test
scas
or
add
adc
push
(bad)
(bad)
fldcw
sub
loopne
push
dec
xchg
dec
mov
jp
push
pop
sti
push
imul
or
retf
jl
jge
mov
dec
fnstsw
sbb
(bad)
scas
mov
mov
push
cmps
or
adc
(bad)
loopne
out
pop
loope
cmp
addr16
xchg
lods
mov
retf
add
jg
inc
or
inc
adc
inc
lea
jp
pop
dec
shl
jae
sub
mov
cmps
mov
call
cmps
outs
data16
sub
pusha
pop
cmp
inc
daa
mov
ds
into
sbb
fidiv
mov
mov
(bad)
in
inc
loop
(bad)
mov
inc
add
sti
inc
jb
adc
cmp
lds
(bad)
mov
and
xchg
dec
add
test
cmp
in
add
pop
or
(bad)
mov
iret
fwait
addr16
xor
in
dec
sub
push
xchg
mov
dec
xchg
ins
mov
es
in
shl
loope
mov
pop
pop
and
in
cmp
clc
adc
jg
or
pop
jnp
cmc
pop
xor
pop
jge
sti
imul
mov
ds
movs
pop
sbb
mov
xchg
loop
sub
xchg
xor
mov
mov
inc
xor
retf
and
std
xchg
mov
mov
sub
vmload
push
jmp
xchg
ins
and
imul
sbb
mov
jle
xchg
call
mov
cdq
shl
xor
jbe
call
scas
into
sbb
sbb
rol
outs
popa
pop
push
dec
pushf
mov
xor
daa
dec
(bad)
jns
ss
ret
fwait
nop
in
test
and
inc
dec
push
add
aad
jbe
sbb
and
shr
outs
push
jmp
les
pushf
ins
push
retf
cmp
pop
xchg
nop
mov
mov
scas
mov
jb
xor
pusha
aad
fadd
(bad)
test
dec
into
popf
ins
and
ror
inc
xor
dec
cwde
mov
xor
mov
stos
adc
js
mov
int
cmp
mov
mov
push
mov
adc
xchg
jne
ss
push
inc
adc
mov
call
mov
dec
(bad)
ins
jg
dec
sbb
cmps
xor
(bad)
int
pop
cli
outs
loopne
mov
xchg
retf
xchg
mov
push
xchg
push
fdivr
scas
cmps
pop
paddsw
jns
retf
iret
jo
movzx
cmc
lods
scas
jno
mov
loopne
out
test
cld
jnp
mov
add
test
sbb
aad
adc
rcl
cwde
sbb
push
mov
dec
popf
fcomp
fcmovbe
data16
add
clc
(bad)
imul
sub
xlat
pop
call
sahf
push
dec
jb
out
call
jne
or
imul
push
dec
out
mov
in
in
inc
clc
and
push
mov
out
cli
dec
cmps
frstor
scas
and
pop
out
imul
not
and
call
lods
aam
and
sub
out
sbb
dec
dec
stos
xor
nop
or
scas
push
imul
pop
xor
das
in
outs
(bad)
fcomp
add
das
inc
into
xor
aad
pop
mov
pop
cmp
sub
ficom
xchg
test
xchg
ja
test
jg
dec
fmul
fcomp
push
jo
stos
xchg
jge
imul
rcr
repnz
mov
sbb
nop
lock
(bad)
mov
leave
xchg
arpl
into
retf
xor
sbb
push
popf
adc
lea
fwait
and
(bad)
xor
leave
arpl
sub
fadd
ret
xchg
ret
aam
or
pop
cmp
mov
das
rol
jmp
inc
and
add
xchg
mov
fcomp
xchg
(bad)
or
outs
retf
imul
xchg
cmps
jl
out
aas
std
cmp
and
es
inc
inc
ss
stos
ret
or
call
cwde
loope
sub
shr
ror
jle
das
ja
mov
std
xchg
jecxz
xor
int3
jecxz
mov
sub
int
mov
pop
mov
adc
add
xchg
stc
mov
pop
mov
or
test
mov
xchg
jmp
sbb
fs
adc
jb
push
fabs
jmp
dec
icebp
adc
mov
dec
sub
movsx
adc
adc
pop
jg
addr16
mov
imul
mov
mov
xor
call
mov
cmp
outs
push
pop
adc
mov
xlat
(bad)
xlat
pop
or
(bad)
mov
add
int
cwde
stos
aaa
or
xchg
xor
bound
scas
inc
in
in
and
into
or
add
(bad)
rcr
jb
adc
pop
xchg
into
mov
xchg
sar
push
lods
dec
push
movs
dec
mov
aas
inc
in
out
jo
iret
scas
fwait
test
jle
loop
cmp
xchg
loop
bound
sbb
imul
mov
dec
mov
dec
adc
dec
xchg
out
scas
fwait
out
bound
int
rcr
mul
inc
jb
fs
nop
not
mov
bound
leave
loopne
inc
leave
sbb
dec
fbld
inc
aad
push
mov
mov
clc
shl
hlt
mov
enter
and
pop
ror
jo
ret
cs
loopne
mov
push
sub
into
mov
push
(bad)
inc
dec
aad
mov
jecxz
in
push
retf
es
pop
test
xor
cdq
in
cmp
int3
rcl
sbb
inc
pushf
out
push
loopne
jecxz
pushf
popa
adc
jnp
popa
(bad)
out
movs
int3
jg
mov
push
jl
adc
cwde
jmp
ja
inc
cmp
mov
dec
jg
rol
jnp
pop
cwde
or
pop
dec
jbe
jmp
jo
outs
cmc
cld
jecxz
fsubr
ins
ss
sub
mov
or
cmp
add
inc
retf
(bad)
xor
ins
mov
push
int
shr
jbe
in
push
in
cs
aam
jecxz
bnd
js
(bad)
mov
leave
jb
add
out
xor
xor
jle
dec
shr
push
call
pop
push
loopne
mov
ins
xchg
push
repz
fcomp
pop
and
imul
push
es
mov
dec
adc
int3
aaa
dec
ins
and
in
sbb
push
xor
shl
rol
hlt
xor
push
xchg
(bad)
ror
repnz
adc
mov
ja
imul
test
imul
adc
jmp
jmp
fmul
push
xchg
add
adc
jbe
fnstsw
push
bound
add
in
and
cmp
adc
mov
push
lock
scas
pop
mov
and
and
mov
or
mov
ja
ins
daa
pop
pop
pushf
pop
js
mov
movs
fwait
cmp
or
in
fdivr
stos
cmp
jne
ins
push
xchg
sub
cld
bound
mov
inc
int3
inc
fwait
sub
daa
leave
adc
or
xor
je
dec
push
add
in
push
imul
addr16
mov
pop
and
mov
sbb
push
in
std
jmp
cmps
shl
inc
imul
lahf
shl
add
dec
cmp
(bad)
xchg
or
popa
rol
cmps
test
jg
(bad)
prefetch
or
les
es
pop
xor
pushf
addr16
lds
call
or
xchg
mov
xchg
inc
add
retf
popa
pop
inc
push
popa
sub
shl
adc
jb
push
rcl
das
lahf
cdq
mov
in
dec
xchg
int3
push
cmps
pop
dec
pop
xchg
leave
std
outs
push
inc
jp
mov
mov
pop
dec
push
xchg
cmp
sbb
mov
sub
pop
leave
in
ss
inc
loopne
mov
pop
jae
fstp
ds
jno
(bad)
ficomp
out
lods
inc
int3
dec
xlat
pop
mov
lods
xchg
arpl
sbb
mov
inc
sbb
jp
cmp
or
cmc
or
jmp
jno
and
jmp
xor
shl
out
fmul
dec
xchg
mov
mov
push
pop
adc
mov
pop
cmp
(bad)
aad
sbb
stos
mov
fs
loop
cmps
jo
pop
enter
xchg
cmps
add
pop
mov
or
mov
sbb
push
out
mov
je
inc
adc
mov
adc
mov
inc
xlat
(bad)
daa
in
scas
sbb
(bad)
xchg
inc
pop
jmp
add
cmp
mov
aaa
jno
fdiv
in
dec
jl
div
push
jno
popf
mov
xchg
outs
fnsave
push
jl
mov
sbb
fimul
cdq
out
fbstp
mov
push
les
cli
lea
xchg
mov
retf
and
jmp
bound
inc
mov
adc
fistp
loope
(bad)
mov
les
dec
push
enter
mov
int
in
adc
pop
movs
jnp
test
mov
shl
dec
dec
jg
jg
or
loop
call
pop
(bad)
or
inc
lods
cmp
dec
or
pop
add
gs
rcl
mov
mov
jge
push
movs
cmps
out
repz
jno
inc
test
adc
sub
add
cmp
shl
popf
repnz
sar
outs
fistp
and
imul
mov
adc
adc
jo
shr
mov
movs
popa
sbb
adc
pop
push
aas
lods
xor
xchg
lock
daa
lods
fstp
test
fst
shr
aad
push
sub
test
in
test
sbb
sbb
mov
sub
add
mov
mul
dec
sbb
adc
and
inc
das
jg
adc
shl
adc
shl
dec
pop
xchg
addr16
mov
cmp
inc
and
inc
inc
fcom
cwde
movs
push
adc
inc
push
repnz
sub
sahf
pop
(bad)
dec
repz
sbb
scas
ins
xchg
(bad)
out
xlat
rol
ret
out
mov
xor
mov
mov
dec
jae
out
and
test
cmp
(bad)
sub
mov
aad
cwde
mov
push
mov
repz
lods
and
call
adc
inc
(bad)
dec
cmp
adc
out
sti
dec
shr
cmp
or
leave
dec
mov
mov
sbb
pusha
rcr
inc
sti
push
pop
jmp
xor
sub
xchg
add
cmp
mov
add
mov
iret
arpl
fld
fadd
jb
xor
into
mov
sub
add
pusha
xchg
pop
sub
adc
adc
pop
call
add
inc
pop
mov
push
jb
repnz
outs
jne
(bad)
xchg
aam
stos
fs
lea
xlat
adc
sbb
fs
jmp
adc
das
pop
xchg
push
sub
test
pop
retf
add
daa
dec
mov
mov
out
ins
lea
and
fadd
jp
arpl
lds
xchg
clc
out
int3
xor
retf
out
sub
jno
and
aaa
jle
mov
jge
sbb
jl
imul
xchg
sbb
jmp
mov
sub
outs
add
icebp
adc
jno
mov
pop
push
stos
or
fcmovb
inc
and
jb
adc
mov
retf
mov
sbb
or
inc
aaa
sub
lds
adc
hlt
in
stos
jb
in
outs
movs
push
add
jge
dec
and
inc
sub
dec
jns
add
cmp
adc
in
xor
push
cmc
jmp
in
leave
stc
xor
mov
out
sti
push
fld
jo
arpl
out
ja
(bad)
sbb
repz
add
ret
out
ficom
aam
(bad)
out
sbb
sbb
sub
inc
mov
arpl
and
ret
and
dec
and
add
popa
into
jbe
movs
xchg
cmc
jnp
mov
fmul
jle
fcomp
add
aam
outs
je
or
ror
shl
xchg
repz
leave
cmps
xchg
loop
cmc
aam
sub
jnp
loope
mov
jne
or
or
cdq
stos
mov
daa
xor
add
inc
mov
loope
sub
lahf
test
push
sti
push
xor
sub
dec
mov
or
mov
jmp
xchg
out
ins
data16
pop
sahf
mov
push
sub
mov
(bad)
in
xchg
iret
scas
pop
je
push
movs
and
jo
pop
adc
pop
rcl
sbb
xor
and
xchg
out
es
or
xor
cmp
popf
enter
data16
or
ret
in
add
push
(bad)
sbb
pop
cmp
sahf
xchg
mov
aad
stc
loop
clc
fst
xchg
push
leave
ffree
mov
xor
mov
pop
aaa
jns
leave
(bad)
hlt
loopne
cmp
dec
call
pop
scas
cmps
cs
sub
mov
es
cmp
mov
push
fs
retf
dec
in
rcl
push
sbb
mov
or
inc
and
(bad)
jle
jb
aam
dec
lods
or
jl
(bad)
jnp
int
fidiv
pop
sub
push
mov
sub
fwait
jmp
inc
mov
daa
and
push
imul
inc
loop
(bad)
mov
push
inc
mov
add
mov
retf
sbb
push
mov
scas
jno
imul
repz
mov
sbb
cmp
outs
jecxz
aam
inc
cmp
or
push
dec
mov
mov
jg
enter
gs
shr
sti
ret
dec
inc
out
rol
popa
mov
jbe
(bad)
(bad)
sbb
xchg
inc
mov
xchg
pusha
test
dec
inc
and
cmps
je
mov
clc
dec
jmp
sbb
and
(bad)
dec
jns
int3
int3
lea
ror
popa
sub
inc
mov
jmp
outs
sbb
lods
or
sub
(bad)
and
adc
stos
push
bound
push
xchg
cwde
imul
xor
icebp
mov
(bad)
cmps
xor
and
fisttp
jbe
xchg
pop
xchg
(bad)
jno
cld
push
call
test
adc
mov
mov
push
cld
fwait
add
ret
add
dec
add
jne
in
out
pop
mov
xchg
loopne
push
test
retf
fst
test
ins
dec
enter
daa
ss
test
stc
cmp
sub
jbe
mov
jo
mov
imul
xor
jne
cmp
or
movs
ficomp
push
movs
(bad)
int
sbb
xchg
dec
pushf
push
es
jo
fisttp
dec
mov
or
rol
push
pushf
push
bound
mov
movs
addr16
sti
les
add
nop
pop
pop
inc
push
sahf
sub
ins
jae
shl
mov
or
push
pop
rol
fild
repnz
mov
out
cmps
scas
pop
je
ins
fnstenv
clc
pop
add
dec
jmp
movntq
call
dec
cmp
loop
clc
hlt
mov
mov
stos
call
cmps
push
push
dec
mov
and
sbb
lahf
mov
pop
push
mov
test
jecxz
inc
(bad)
sti
jg
push
enter
stos
and
push
jl
fstp
hlt
push
jle
dec
sbb
jge
rcr
stos
data16
dec
lock
pop
call
test
jne
sbb
cmp
or
xchg
out
mov
stc
push
or
jge
mov
xlat
mov
bndstx
cs
or
mov
xchg
mov
xchg
data16
mov
add
cmc
xor
push
and
cli
inc
andnps
test
int
jns
jg
mov
and
pop
stc
aaa
push
enter
xchg
popf
adc
xchg
sub
mov
aas
ror
lds
mov
xor
and
cwde
mov
fld
add
aaa
jge
stos
dec
retf
sbb
adc
sbb
ds
jns
loope
in
fcmovnbe
imul
push
or
mov
dec
sub
stos
push
jne
test
add
cli
dec
sbb
call
cmps
std
add
adc
jae
(bad)
enter
clc
sbb
or
sbb
sbb
mov
shl
loop
mov
inc
sbb
add
sbb
fidivr
jae
lods
add
jmp
aas
fimul
(bad)
ret
pop
push
xor
add
adc
add
push
pop
lds
push
in
imul
dec
dec
setl
cmp
std
iret
adc
xlat
les
or
daa
leave
mov
pop
pop
xchg
sbb
inc
fadd
mov
nop
rcl
xor
mul
pop
push
push
cmps
mov
mov
dec
jl
mov
add
(bad)
jle
scas
add
push
outs
cli
ret
and
test
(bad)
mov
adc
sbb
add
(bad)
out
cmp
int3
aad
(bad)
push
movs
xchg
fucomp
cmp
jg
mov
jns
dec
dec
mov
test
push
out
or
mov
popa
std
pop
dec
fcomip
pop
push
cmp
push
imul
sub
std
xchg
jecxz
popf
dec
lds
cld
lahf
jecxz
inc
sub
jp
mov
test
icebp
addr16
xlat
dec
xor
fisttp
bnd
xor
inc
movs
test
and
js
dec
jle
gs
int
je
cmp
(bad)
not
mov
or
ret
push
fwait
pop
scas
dec
sbb
mov
movs
loopne
mov
sti
fld
sbb
cld
int
pop
add
xchg
xchg
jo
dec
and
sbb
aam
push
push
or
stos
sub
outs
sbb
sar
inc
jae
jnp
sub
mov
mov
movs
retf
mov
xchg
ins
and
or
xor
fucomp
aaa
jb
pop
pop
mov
scas
cdq
(bad)
xlat
jle
mov
and
add
jmp
xor
jno
arpl
adc
jnp
mov
cmp
std
test
in
adc
push
jecxz
loopne
mov
test
imul
ins
enter
inc
pushf
sub
call
cdq
add
adc
mov
sti
scas
jne
mov
push
inc
xor
retf
je
mov
add
in
jl
and
jns
sub
in
icebp
push
mov
mov
jo
call
jae
loope
xchg
inc
and
adc
fnstcw
ins
cmp
shr
jl
jp
call
call
bound
into
scas
fldcw
push
jns
mov
adc
cli
mov
iret
call
cmps
cdq
cmps
inc
out
test
mov
inc
iret
shr
push
push
or
(bad)
mov
xchg
adc
inc
mov
jmp
call
icebp
xor
xchg
arpl
mov
es
in
popf
lods
xchg
add
push
cmp
sub
push
mov
repnz
xchg
shl
push
xchg
jp
or
add
xchg
pop
cwde
out
cmp
pop
aam
rcl
sbb
add
xor
sar
jge
xlat
add
jmp
jle
add
shl
in
cld
mov
cs
mov
sqrtps
shr
adc
rcr
lahf
xchg
jo
lock
xor
push
adc
inc
lods
pop
scas
mov
out
lods
aad
sub
dec
ret
test
xor
sar
and
and
pop
add
xchg
les
pusha
xchg
sub
repnz
test
xor
or
cmp
cmp
sbb
sbb
sbb
inc
or
retf
adc
jecxz
jne
pusha
inc
push
mov
pop
push
ds
pop
jg
push
retf
ins
shl
setg
shr
inc
call
aam
mov
jmp
pop
mov
rol
mov
adc
push
dec
add
xchg
sub
scas
jbe
test
dec
lods
push
retf
adc
mov
scas
sbb
mov
daa
das
loopne
(bad)
cwde
aam
push
xchg
cmp
xchg
or
int
in
popa
enter
xor
push
shl
cmp
xlat
outs
daa
popa
and
fidiv
push
pusha
mov
xor
inc
jle
test
or
mov
and
imul
imul
jge
adc
sahf
cld
mov
push
adc
cwde
jmp
sub
dec
inc
nop
sub
jmp
xchg
xor
stc
arpl
stc
dec
inc
and
mov
data16
cmp
dec
ins
and
push
xchg
pop
ins
not
dec
xchg
mov
scas
mov
jge
mov
aas
sub
mov
mov
ret
shl
lea
call
icebp
nop
xchg
cmp
mov
cmps
xchg
cmp
fstp
cmps
mov
jbe
dec
cmp
mov
add
fist
fimul
test
(bad)
aas
js
push
push
jle
inc
xlat
xlat
mov
aas
fdiv
xchg
ins
ret
lock
sub
sahf
jnp
fadd
and
mov
ja
inc
mov
test
test
aam
xchg
inc
cmp
adc
lds
ins
jne
pop
xor
outs
outs
(bad)
xor
push
inc
cs
mov
test
jl
pop
adc
pop
push
pop
arpl
inc
dec
sbb
and
pop
push
sub
push
inc
and
mov
pop
sub
in
arpl
repnz
dec
jge
mov
jo
pop
xor
(bad)
jl
mov
sbb
sbb
push
mov
repz
nop
and
scas
jae
iret
data16
jge
sbb
scas
adc
cmp
xchg
dec
jno
retf
out
sbb
stos
std
jmp
inc
sub
sbb
xor
sub
mov
dec
lds
adc
jp
pop
lock
or
(bad)
fbstp
and
outs
add
stos
cmp
xor
ret
fnstcw
repz
stc
push
ret
or
cli
stos
or
movs
push
inc
mov
jmp
sti
mov
ja
mov
adc
lea
mov
add
mov
lds
stos
imul
jg
cmc
ficomp
add
sbb
xor
or
mov
xchg
movs
movs
lahf
(bad)
test
cmp
mov
popf
mov
xor
inc
inc
adc
xor
test
mov
ficom
sbb
rol
repz
ret
dec
cs
mov
scas
std
imul
mov
jo
or
retf
movs
std
jmp
add
xchg
test
xchg
sti
rcl
or
popa
stos
pop
jl
sub
fs
test
jle
je
xchg
in
adc
stos
pop
out
scas
dec
push
sbb
fs
and
adc
push
push
stos
mov
pop
les
sub
mov
sbb
cs
inc
ds
inc
mov
pusha
call
mov
arpl
mov
push
and
push
movs
nop
(bad)
jp
or
jns
pop
mov
gs
rol
jge
cmc
pop
xchg
das
addr16
pusha
add
cmp
cs
das
mov
movs
add
lods
mov
in
adc
jbe
clc
jg
enter
neg
lahf
fisttp
fisubr
inc
jmp
inc
sbb
inc
loope
sub
sub
cmc
and
cs
fwait
mov
aaa
outs
scas
pop
inc
cmp
vmaxsd
aaa
xor
ds
icebp
add
fwait
mov
lea
lock
outs
xchg
jle
in
or
sbb
rol
xor
rol
loope
loop
pusha
data16
jno
fisttp
retf
jns
add
nop
mov
ja
pop
xor
repz
in
das
js
push
outs
je
dec
mov
pop
cmp
ficomp
arpl
(bad)
jmp
jmp
dec
dec
sub
fcom
popa
iret
das
cwde
imul
xor
(bad)
je
icebp
shl
repnz
arpl
push
mov
jb
pop
and
or
int3
dec
(bad)
les
mov
push
push
cld
mov
jp
adc
and
lods
mov
cmp
movs
in
loopne
and
inc
push
xchg
sbb
push
int3
and
addr16
fild
into
sub
sub
mov
push
es
in
cmp
aam
inc
push
mov
push
xchg
call
aad
add
aam
mov
pop
shr
scas
xor
jnp
daa
push
jge
(bad)
gs
mov
loop
(bad)
shl
cmps
pop
outs
scas
mov
xchg
or
out
pop
js
cmc
je
std
jmp
imul
cdq
push
xchg
push
test
inc
cwde
adc
and
aad
xchg
addr16
adc
jmp
jecxz
hlt
arpl
hlt
loop
cmp
stos
(bad)
stos
inc
sub
push
cmps
sub
pop
sbb
pushf
test
pop
fldenv
xor
int
pusha
mov
add
(bad)
pop
push
ins
push
aam
in
scas
dec
adc
add
xchg
or
fisttp
push
mov
ins
xor
pop
xchg
(bad)
std
sahf
dec
mov
in
sar
dec
jmp
sti
adc
pop
mov
jbe
fisttp
cmp
cs
popa
iret
inc
mov
pop
mov
cld
mov
and
aas
ficomp
int
in
mov
pop
imul
mov
movs
mov
lahf
mov
pop
test
xchg
ja
and
je
int3
(bad)
call
leave
jp
sub
adc
xor
inc
lods
and
es
inc
in
pop
aaa
pop
leave
pop
adc
push
adc
inc
fldenv
add
sub
dec
pop
adc
in
mov
sbb
pusha
jbe
sbb
in
pop
or
dec
pop
sub
sub
mov
(bad)
inc
pop
xchg
aad
jg
mov
mov
repnz
mov
adc
mov
test
sub
mov
mov
jne
icebp
mov
daa
mov
mov
pop
or
repz
mov
and
inc
dec
xchg
loopne
dec
dec
mov
test
dec
inc
cmp
dec
mov
cld
or
repnz
(bad)
sbb
aad
mov
dec
fcmovnb
and
fiadd
aam
xchg
dec
or
(bad)
test
cmc
ret
add
sub
ror
sub
test
pushf
outs
in
or
rcl
push
sbb
push
out
dec
pop
sahf
cld
out
pop
dec
test
in
sbb
(bad)
addps
repnz
and
scas
push
cdq
dec
jl
sbb
mov
jge
mov
call
shl
pop
cdq
sub
pop
sbb
mov
movs
or
jle
adc
out
nop
or
jne
dec
push
jle
mov
xchg
mov
mov
xor
ror
hlt
adc
test
add
sub
and
mov
push
sbb
adc
push
imul
pop
lds
stos
ss
scas
inc
inc
icebp
xchg
pusha
stos
scas
stos
es
mov
jo
pushf
fist
or
or
or
pushf
xor
inc
xlat
repz
in
mov
mov
loopne
sahf
jns
or
test
scas
mov
rol
adc
jne
inc
push
ss
int3
xchg
inc
je
js
pop
lea
xor
fistp
and
cmp
leave
dec
adc
ret
jne
lods
xchg
les
popa
ds
movs
or
cmps
shl
mov
pop
cmc
dec
xchg
pop
jmp
(bad)
(bad)
ds
in
lea
push
stc
lods
movq
in
dec
ret
add
ss
loop
popf
xchg
push
mov
outs
mov
ffreep
dec
idiv
xor
mov
jo
addr16
mov
jle
ins
add
jmp
out
daa
xor
push
clc
mov
xchg
int3
(bad)
ss
lds
dec
xor
in
pop
lock
hlt
loope
iret
call
pop
cs
sub
repnz
(bad)
out
in
loop
mov
inc
sub
xchg
lock
jns
bound
mov
mul
xchg
cli
mov
and
das
dec
sub
sbb
rol
pop
or
sub
sar
retf
push
xor
sbb
pusha
cmp
(bad)
nop
stos
inc
and
sbb
xor
pushf
dec
push
enter
fisub
jb
or
pop
(bad)
sbb
sub
mov
mov
xor
daa
push
add
ins
or
mov
add
sub
daa
fdivr
rol
push
inc
in
cmp
repnz
lods
pop
in
xchg
rol
sahf
pop
ja
mov
cmp
jae
sbb
(bad)
retf
xor
out
scas
dec
xor
jbe
call
dec
jp
xchg
mov
fsubp
ret
adc
cmp
lods
sub
clc
mov
les
cmps
mov
mov
nop
dec
clc
push
pop
mov
add
shr
or
mov
sahf
push
mov
out
movd
add
add
mov
out
xor
mov
cmp
clc
dec
enter
ret
mov
add
imul
fstp
shl
sub
cdq
jno
push
or
sbb
jle
sbb
inc
(bad)
(bad)
outs
aad
add
retf
mov
sub
(bad)
test
mov
int3
mov
imul
inc
jmp
xor
push
xor
sar
mov
cmp
div
sbb
adc
xchg
std
or
ja
jmp
pushf
mov
and
cmc
pop
and
imul
push
dec
ret
xchg
and
out
jnp
mov
and
outs
push
dec
xchg
ja
or
clc
ret
call
aad
cmps
xor
sbb
(bad)
xor
inc
or
jbe
imul
push
test
lock
adc
and
(bad)
int
or
mov
pop
leave
cdq
int3
pusha
repz
repnz
jae
dec
ret
loop
mov
pop
ins
pop
jmp
fld
jo
movs
xchg
enter
(bad)
leave
dec
or
cmp
and
or
sub
(bad)
xor
arpl
pop
sub
outs
(bad)
pop
mov
sub
ret
push
cmp
xchg
rcr
xchg
sti
dec
add
hlt
sbb
out
(bad)
cmps
popf
mov
mov
mov
fwait
xor
adc
cld
repz
sub
xor
dec
xchg
jno
add
or
inc
(bad)
mov
add
xor
push
out
fnstcw
sbb
inc
iret
sbb
leave
add
call
push
pop
sbb
pop
outs
pop
push
cmp
outs
retf
sub
loopne
sahf
aaa
test
add
in
dec
ins
aam
sbb
test
scas
or
fs
bound
test
ja
mov
pop
inc
rol
push
iret
repz
xchg
out
dec
sbb
pop
mov
cmps
pop
pop
push
sbb
pop
sbb
pushf
lock
cmp
jae
mov
pop
pop
push
pop
sbb
rcl
adc
mov
jle
xchg
aad
adc
xchg
ins
enter
fdivr
into
aam
call
popf
sbb
sbb
in
sbb
clc
cmc
aam
sbb
rcl
(bad)
cmp
mov
cs
inc
sahf
inc
pop
das
and
and
push
not
es
movs
lods
ds
outs
sub
jmp
ret
fidivr
mov
push
mov
push
adc
xor
test
repz
out
fnstsw
pop
add
test
cdq
or
cmp
xor
das
je
int
xlat
in
(bad)
loop
pop
(bad)
mov
cmp
popa
mov
push
jb
cmp
dec
dec
push
push
std
mov
sub
sbb
call
imul
and
xlat
sub
in
sub
loop
sub
fbstp
sahf
enter
inc
push
mov
push
jbe
mov
and
pop
(bad)
jg
stos
popa
pop
inc
jp
stos
mov
jnp
(bad)
jmp
(bad)
mov
push
sbb
mov
(bad)
(bad)
imul
(bad)
retf
and
fnsave
test
int3
push
call
in
out
pop
mov
call
sahf
pop
sahf
sbb
test
inc
cli
dec
sbb
xor
stc
xor
std
dec
adc
retf
mov
loop
mov
aaa
jbe
xchg
pop
xor
push
sub
sbb
jl
iret
dec
jae
popf
out
jl
xor
sbb
jns
push
or
pop
and
fsubr
mov
dec
pusha
stos
pop
mov
popa
js
ret
mov
fimul
jge
imul
mov
and
sbb
loopne
sbb
stc
outs
test
mov
outs
stc
es
inc
fnsave
jbe
pop
mov
popa
push
dec
jno
xchg
push
sbb
inc
xchg
ret
in
xchg
fistp
test
inc
mov
inc
out
fistp
and
retf
stos
fild
sub
and
int3
mov
xchg
test
out
out
mov
inc
shr
call
xor
xchg
pop
cli
jo
sbb
out
(bad)
test
(bad)
adc
or
xchg
fdivr
lahf
or
test
ret
stos
fmul
jl
scas
fcom
and
and
pop
aam
add
enter
sub
adc
mov
test
add
add
mov
ss
or
dec
int
push
pop
push
shl
movs
xor
cdq
mov
lods
add
push
or
fidiv
addr16
xlat
add
or
xor
gs
lea
push
cli
movs
mov
xchg
in
mov
pop
jns
and
add
mov
xchg
pop
mov
push
int
xchg
ret
fsub
fs
jmp
mov
call
adc
lds
out
imul
sbb
ins
inc
repnz
mov
cwde
lea
xor
ins
(bad)
scas
test
imul
add
dec
push
and
jge
dec
shl
loopne
mov
stos
and
sub
iret
loope
xchg
cld
mov
fadd
div
or
mov
inc
popa
lahf
(bad)
add
cdq
sbb
stc
shl
(bad)
loopne
jg
dec
gs
aam
popf
mov
dec
mov
jmp
xor
test
pop
and
jle
aaa
mov
cs
shl
imul
xchg
cmp
xor
sub
cwde
aas
clc
jo
call
xchg
jnp
cmc
adc
retf
jp
(bad)
or
mov
fistp
clc
sbb
push
add
cmp
pop
ins
enter
mov
dec
in
ja
mov
test
inc
(bad)
je
mov
ret
std
(bad)
jp
fwait
add
inc
xchg
mov
mov
loope
jge
jne
fnstenv
pop
pop
ftst
retf
add
in
cmp
dec
sbb
pop
fistp
mov
popa
ins
in
adc
add
xor
aaa
ss
fidivr
inc
vmread
cmp
jb
(bad)
sub
xchg
f2xm1
data16
jmp
rol
cmp
push
mov
sbb
xchg
cmps
hlt
xor
nop
shl
loopne
cmps
rol
xor
aas
mov
scas
jns
dec
push
clc
or
popf
xor
lahf
call
cs
lds
inc
iret
hlt
inc
addr16
mov
fs
frstor
sub
push
(bad)
mov
push
mov
mov
jle
das
mov
inc
xchg
jl
adc
sbb
dec
retf
push
mov
in
jle
sub
addr16
mov
and
(bad)
cli
pop
(bad)
sbb
inc
arpl
pop
add
dec
fs
mov
inc
adc
xor
add
push
mov
mov
lods
dec
movs
cmc
in
sub
cmp
pop
jb
scas
mov
dec
xor
mov
jns
lds
cmp
or
stos
(bad)
push
or
ins
stc
or
mov
mov
in
es
add
cmp
and
xor
mov
cwde
mov
mov
pop
xor
xor
inc
cmp
xchg
out
ins
enter
mov
test
or
nop
dec
inc
sub
adc
mov
mov
inc
sar
sbb
ja
push
bound
cmp
push
jmp
or
inc
mov
cmps
test
dec
push
jg
(bad)
call
repz
sbb
xchg
sub
or
mov
lods
xor
xor
sub
shl
cmps
jb
mov
dec
sub
ins
xor
add
movs
sbb
sbb
jmp
dec
cs
adc
fwait
mov
out
cmp
pop
jmp
loope
or
inc
mov
cmc
in
cmp
pop
or
popf
(bad)
and
add
ficom
lods
sub
das
bound
fdiv
dec
retf
sub
mov
in
hlt
(bad)
ror
ret
(bad)
ret
sbb
mov
mov
aas
jmp
in
imul
mov
outs
mov
fwait
je
adc
or
sub
jmp
xor
pushf
clc
push
rcl
fst
in
out
inc
dec
fsub
mov
push
fsub
jge
js
dec
inc
pop
xlat
pushf
ja
ficom
sbb
js
out
aam
fisubr
(bad)
xor
mov
adc
arpl
sbb
mov
lahf
dec
mov
fisubr
mov
xor
in
int3
call
cmp
fstp
fst
test
int
lds
mov
cmp
repnz
hlt
xor
mov
call
adc
(bad)
mov
in
adc
ret
loopne
adc
sbb
pop
mov
cmp
pop
shl
mov
sbb
mov
fs
cwde
shl
rol
mov
fidiv
sbb
pop
daa
mov
or
cmps
je
inc
int
pop
jl
out
loop
xchg
add
sub
cmp
xor
int3
push
xchg
outs
or
push
xor
dec
inc
cmp
je
inc
cdq
movups
shl
push
xor
cmp
cmp
push
repnz
dec
ror
jne
add
push
ret
jo
fwait
push
movs
pop
or
add
mov
shl
sub
js
push
cmp
and
and
sbb
push
mov
push
sub
pop
or
xor
mov
call
dec
ins
iret
jnp
add
mov
ret
pop
and
fdivr
pushf
mov
mov
xor
mov
outs
xchg
pop
loop
mov
xor
mov
jg
out
or
mov
cli
xchg
mov
jne
loop
sar
sbb
sbb
push
mov
sbb
ret
adc
jecxz
cli
xchg
loope
push
imul
scas
lds
cmp
sbb
div
sbb
outs
ins
enter
rcl
jg
int
push
fdivr
ins
in
fs
inc
fsubr
inc
dec
es
jno
sbb
push
sbb
daa
sub
mov
or
jp
push
movs
mov
jge
push
test
xor
mov
stos
dec
pop
push
test
in
iret
in
pop
cmp
aas
(bad)
out
arpl
or
sbb
xor
mov
jg
fst
add
stos
ds
mov
std
sub
add
mov
aam
and
mov
out
push
jmp
dec
sub
ret
pusha
dec
(bad)
icebp
popa
std
or
add
sahf
fs
test
fwait
adc
pop
(bad)
xchg
rol
call
cdq
into
push
(bad)
aaa
imul
das
and
dec
loop
arpl
ins
mov
popa
sub
mov
add
jae
test
ins
shl
mov
inc
xor
and
jge
movs
xchg
fwait
out
sahf
bound
cmp
mov
into
pop
pop
xor
leave
mov
and
mov
or
sbb
mov
out
sub
lock
ret
adc
adc
mov
imul
mov
or
jne
out
mov
xchg
fdiv
xor
jmp
sbb
cmp
into
ret
push
and
sub
lea
fsub
in
pop
add
cmp
ja
pusha
ret
jle
fdivr
mov
out
jl
test
cmp
arpl
addr16
xchg
aaa
pushf
adc
xor
leave
fdiv
xchg
cmp
cmc
mov
push
or
fdiv
dec
xor
jno
lds
push
cmp
lds
jle
in
mov
clc
aam
sbb
push
mov
(bad)
ins
xor
call
fucomip
jae
jl
cdq
and
data16
nop
lahf
aad
sub
and
mov
mov
mov
lds
mov
or
xchg
int
jae
call
sub
push
jge
jo
cmp
xchg
in
aas
and
loopne
fistp
jecxz
jb
mov
mov
dec
push
or
inc
loope
push
test
adc
aaa
dec
or
movs
push
inc
xor
dec
mov
lods
sub
daa
daa
(bad)
data16
es
jmp
push
fwait
fwait
out
aaa
jbe
push
bound
pop
lock
sub
or
and
and
cld
jns
loope
push
and
mov
aas
push
pop
fcom
and
ins
adc
cmp
pop
repz
dec
pop
icebp
sbb
pop
adc
lock
imul
inc
cmp
sub
test
sub
aad
or
loop
xor
push
xor
cld
cmp
sub
test
jmp
lea
out
sbb
ins
inc
add
inc
cld
xor
lods
movs
dec
into
and
xor
inc
not
cmps
test
das
sub
mov
int3
gs
mov
mov
dec
dec
fdiv
xchg
rcl
aad
mov
into
xor
xchg
adc
sti
cs
cmp
call
cs
sub
into
in
pop
ss
sub
cmps
ret
les
push
stc
pop
mov
push
inc
into
daa
out
fistp
fstp
imul
push
and
lds
adc
gs
adc
enter
ss
in
lods
or
repz
cmp
cmp
inc
int
ja
xchg
and
pop
test
sub
dec
sub
and
pop
mov
mov
adc
in
jle
ds
mov
jne
jg
lahf
js
and
rcl
cmps
sub
mov
push
ficomp
mov
cmp
pop
inc
add
and
push
pushf
int3
test
shl
cmps
or
dec
das
clc
sti
mov
iret
push
xchg
out
xchg
shr
fnstsw
fldcw
inc
cli
cli
cmp
pushf
mov
ins
rcr
cmp
(bad)
jg
and
or
jmp
xor
sbb
icebp
cs
les
addr16
pop
or
es
lods
lock
jge
ror
or
into
jns
pop
adc
(bad)
mov
sbb
daa
inc
ins
lods
out
jno
fimul
mov
or
mov
rcl
sub
xor
daa
fstp
cmp
add
aad
mov
shr
sub
ror
loopne
or
and
push
xchg
mov
inc
jmp
push
jb
adc
ror
lds
mov
and
xchg
and
retf
int
cmp
push
cld
retf
scas
xchg
outs
mov
(bad)
aas
outs
pop
push
lods
outs
call
xlat
adc
retf
add
in
jnp
pop
cmp
dec
mul
idiv
call
sub
xor
sub
(bad)
lea
call
xchg
stc
or
cmp
out
jns
das
dec
push
cmp
call
add
and
int3
pop
imul
sub
loopne
sbb
clc
adc
sub
dec
xchg
mov
sbb
pop
adc
icebp
popa
push
sbb
retf
jmp
fcomp
jge
ffreep
out
test
repz
sub
or
shl
mov
mov
daa
cld
push
fsubr
and
outs
hlt
xor
jecxz
ret
mov
xchg
or
nop
mov
jnp
fisub
mov
xor
movs
call
sub
aam
cmp
add
sbb
inc
lahf
das
push
adc
(bad)
sub
test
sbb
mov
fiadd
mov
mov
dec
ret
sub
xchg
mov
sar
out
push
lods
test
push
jle
cmp
push
mov
push
lds
std
pop
push
jns
push
mov
and
sbb
ror
xchg
pushf
cmp
and
mov
mul
cmp
inc
cld
inc
loope
into
scas
add
jno
sub
pop
movs
call
mov
shr
(bad)
adc
jl
idiv
push
adc
adc
mov
ins
in
jecxz
jno
mov
inc
add
mov
(bad)
mov
add
mov
jl
cmp
leave
loopne
cmp
hlt
dec
stos
push
fld
loope
xor
jne
xchg
or
xchg
ins
push
clc
call
arpl
or
xor
push
test
adc
inc
and
pop
or
dec
push
mov
push
test
xlat
cmc
adc
jno
xchg
pop
addr16
addr16
jb
fwait
pop
xchg
cmp
push
test
(bad)
(bad)
fstp
xchg
fisttp
popa
pop
scas
mov
outs
mov
xor
xor
(bad)
scas
repz
leave
mov
dec
aas
push
jle
jne
mov
push
(bad)
not
movs
js
inc
mov
int3
out
call
fcmovu
push
mov
pusha
repz
sbb
repz
dec
aas
sub
cld
adc
mov
mov
jb
jb
sub
dec
stos
and
shl
add
in
push
pop
inc
mov
leave
cmp
ds
mov
stc
cmp
ror
jle
push
dec
stc
sub
(bad)
loop
in
ja
sar
dec
rol
fwait
sbb
push
stc
ret
test
pop
rol
pop
pop
or
and
repnz
fwait
xrelease
inc
inc
mov
mov
sub
cmps
sub
scas
xor
inc
loopne
loopne
ss
fdivr
dec
jl
push
repz
pop
jns
cmp
inc
es
sub
and
scas
jnp
fmulp
xchg
xor
adc
enter
sbb
fisttp
fwait
push
inc
pop
mov
xchg
sbb
ja
js
dec
js
lahf
push
dec
fld1
psrld
imul
out
or
mov
(bad)
nop
shl
out
push
dec
mov
cmps
fwait
bound
into
movs
fnstsw
lods
scas
(bad)
and
call
arpl
jecxz
(bad)
jmp
push
scas
add
mov
es
hlt
mov
adc
xchg
movs
xor
jmp
stc
adc
mov
lock
lahf
cdq
repnz
jbe
sub
jecxz
xchg
push
push
rcl
jae
xor
push
imul
stc
fiadd
sar
mov
test
call
std
adc
stc
ds
cmps
and
outs
clc
icebp
int
sbb
cmp
pop
jae
(bad)
mov
cld
imul
jmp
clc
or
dec
mov
mov
or
retf
sbb
out
mov
sar
cmp
iret
jmp
cmp
or
push
mov
nop
call
repz
out
loop
out
sub
je
pop
sti
jnp
or
sbb
rcl
lahf
mov
cmp
cmp
sub
cmp
mov
xor
and
mov
mov
(bad)
call
dec
div
dec
sub
sahf
(bad)
mov
jb
test
shl
out
ja
sti
pop
jns
rcl
dec
test
popf
addr16
js
jbe
pop
rcl
mov
adc
push
ds
aaa
cld
loopne
pop
lahf
or
jge
push
and
mov
mov
xor
jg
xchg
ja
movs
imul
add
shld
shr
sub
jecxz
xchg
call
adc
adc
mov
div
addr16
and
rol
dec
loope
jg
xor
repz
jb
idiv
xor
sub
pop
xchg
xchg
dec
push
cmp
jle
mov
aam
sbb
mov
xchg
scas
xchg
loopne
call
ret
imul
push
xor
cmp
cmp
xor
jnp
call
mov
outs
imul
push
popa
sbb
cmps
mov
push
gs
ins
int3
pop
mov
test
xchg
mov
jno
push
in
addr16
sub
icebp
arpl
sahf
cli
xor
inc
inc
inc
pop
jnp
imul
push
add
outs
mov
sub
add
mov
inc
repnz
xchg
sub
jae
cmp
sub
sub
fld
xor
(bad)
and
jno
pop
mov
ins
inc
out
cmps
ins
ror
mov
inc
add
mov
mov
data16
mov
sbb
mov
mov
pop
out
mov
adc
ja
and
cmp
jmp
test
mov
clc
retf
enter
xchg
sbb
lea
(bad)
test
dec
push
jae
movs
aas
aaa
fstp
fld
dec
xchg
retf
aaa
xor
in
lods
and
fwait
xchg
mov
cwde
stos
mov
jmp
pop
aam
dec
popf
add
leave
loop
shl
(bad)
jns
sub
inc
dec
xchg
add
lock
movs
adc
into
lahf
pop
enter
sbb
mov
in
add
xor
xchg
add
jp
jg
mov
es
frstor
lea
rol
loope
sbb
repnz
sti
adc
into
xlat
das
push
jp
xchg
adc
sbb
fistp
cmp
lock
or
rcl
and
mov
fidivr
(bad)
jmp
sub
add
inc
addr16
sahf
pop
mov
pop
test
inc
dec
setb
push
jge
jns
push
mov
stc
retf
cmp
scas
jmp
cmp
push
cmps
add
dec
sub
cmc
lods
iret
and
ins
xchg
mov
(bad)
jne
add
cmps
fwait
sub
out
push
movs
xchg
cld
cdq
xchg
hlt
jmp
in
adc
jno
and
xor
or
daa
and
or
out
(bad)
imul
push
lds
cmp
cmp
fstp
retf
inc
int3
mov
fdiv
add
adc
jno
xchg
movs
aad
aam
sub
xor
stos
imul
(bad)
cmp
retf
fild
push
cld
sbb
mov
stos
jecxz
inc
mov
out
add
(bad)
push
mov
xchg
pop
xor
push
(bad)
je
imul
push
movs
pop
stc
ret
or
push
pop
sbb
xchg
call
loope
xchg
in
shl
xor
pop
mov
xor
push
test
mov
or
movs
add
mov
mov
push
icebp
ins
add
fwait
jns
sbb
or
icebp
sub
ss
mov
test
jbe
mov
inc
iret
jmp
inc
xchg
and
cdq
scas
ins
adc
and
imul
dec
add
sub
pop
test
int3
imul
push
mov
or
in
sub
popa
push
xor
inc
loopne
jle
jnp
stos
pop
(bad)
std
fmul
cmps
pop
cmp
inc
sub
in
mov
and
pop
xor
inc
cwde
out
in
or
ins
add
js
sbb
sbb
jmp
sub
and
and
cdq
mov
js
push
ficomp
push
rcl
xor
and
or
push
push
push
aas
loopne
loopne
mov
aaa
test
gs
jne
add
in
inc
cwde
push
adc
add
or
jno
aad
imul
xor
cmp
fnstsw
in
and
aas
jbe
dec
mov
mov
inc
aam
retf
ret
lods
xor
cs
ss
and
cmps
inc
add
outs
pop
(bad)
pop
xor
adc
out
out
in
xchg
dec
sub
test
data16
rcl
fld
xor
neg
push
or
add
xor
pop
jb
in
mov
push
push
fstp
xchg
dec
push
les
mov
add
movs
sub
add
pop
das
ja
sub
cmp
ficomp
in
js
adc
jo
lahf
gs
cdq
ficomp
div
dec
daa
xchg
xchg
push
mov
cmc
stc
loope
loop
rol
cdq
sub
add
sahf
or
inc
js
js
pop
mov
jb
(bad)
lds
push
clc
mov
in
adc
mov
retf
cli
mov
(bad)
jmp
fs
jmp
dec
gs
shl
inc
fstp
mov
xor
call
mov
jle
fs
push
and
adc
das
outs
cmp
xlat
dec
int3
adc
scas
ds
and
jno
shr
sub
mov
cmp
es
adc
stos
or
fld
aad
sub
mov
test
pop
test
inc
int
mov
dec
call
sub
xchg
jmp
fs
push
sbb
les
and
clc
div
mov
or
mov
aad
jp
cmp
sub
aas
jle
int3
sti
push
int3
fs
push
imul
fldenv
test
test
in
inc
xchg
dec
aam
rcl
or
loopne
push
es
mov
shl
inc
mov
popa
fmul
fwait
jnp
xlat
pop
cs
cmps
ds
push
add
rcr
(bad)
mov
and
adc
clc
adc
jmp
ins
push
push
daa
bnd
mov
(bad)
lock
pop
adc
mul
(bad)
outs
dec
push
push
add
sbb
mov
pop
into
scas
lahf
dec
(bad)
out
pop
push
call
sbb
inc
enter
jmp
movzx
jb
cmp
push
test
mov
es
addr16
dec
jae
push
cmp
mov
shr
adc
add
cmp
pop
push
mov
jmp
enter
rcl
sbb
jmp
out
push
pop
lods
xchg
ret
mov
(bad)
and
mov
lods
mov
dec
cmp
bound
jg
int3
daa
push
dec
sbb
js
loope
push
and
jns
int
and
dec
pop
test
dec
jl
or
and
cmp
mov
xchg
test
js
and
ins
jb
aam
mov
ret
adc
in
jl
fcom
inc
sub
in
imul
pop
cdq
dec
mov
jnp
add
enter
sub
pop
ret
rol
test
popa
jg
dec
mov
data16
sub
fsub
scas
sub
xchg
and
outs
and
jb
out
xor
scas
jne
push
pusha
js
loopne
dec
push
out
cmp
sbb
ficomp
adc
int3
fcom
aam
rol
mov
mov
jo
dec
test
pop
dec
test
gs
xchg
cmp
idiv
and
outs
adc
ret
enter
push
xor
mov
push
xor
adc
std
and
imul
dec
repz
imul
fs
ja
mov
sub
jecxz
adc
and
idiv
loope
xchg
leave
push
jno
sbb
xchg
xor
adc
bswap
xlat
jmp
cmps
push
xchg
inc
mov
xchg
adc
jg
and
pop
(bad)
cld
fbstp
js
and
lods
ret
aas
jnp
inc
fild
fisub
or
arpl
mov
or
mov
in
aad
(bad)
retf
mov
out
retf
cli
sub
addr16
rol
retf
mov
xor
push
cwde
les
mov
fidiv
or
jae
in
pop
adc
daa
pop
dec
sbb
and
inc
add
xchg
rol
xor
(bad)
stos
ins
cld
fcmovnbe
or
push
int
test
pushf
dec
jl
out
stos
jns
test
or
in
in
icebp
dec
cmp
cwde
aas
cdq
cmp
sbb
lods
or
mov
xchg
or
mov
lods
push
nop
repz
mov
ret
pop
jmp
fld
dec
ins
outs
adc
jecxz
scas
cld
scas
adc
jbe
(bad)
fdecstp
mov
mov
mov
xchg
out
not
(bad)
hlt
arpl
enter
scas
icebp
rcl
xchg
sub
sub
jl
mov
rcr
adc
cli
inc
mov
inc
shr
in
fild
push
push
fs
xchg
adc
pop
leave
ret
std
pop
sbb
repz
les
(bad)
push
ror
test
pop
sbb
mov
imul
cmp
sub
mov
call
add
jbe
ins
out
add
sub
jno
ds
xor
shl
out
add
xchg
mov
adc
sbb
mov
mov
nop
in
rcr
inc
cmp
sub
push
add
lock
(bad)
or
int
sbb
mov
mul
or
jl
sub
lods
add
and
jp
aad
data16
push
xchg
rol
jmp
pusha
in
addr16
inc
and
adc
ds
fdiv
dec
push
stc
cmp
call
pop
jno
push
lods
cmp
xchg
xchg
pop
cmp
loope
jl
jle
jbe
test
dec
iret
repnz
cld
cmps
jnp
and
mov
mov
and
cmp
cld
push
sbb
adc
and
faddp
add
les
push
mov
cmp
sbb
imul
cmp
mov
hlt
dec
jae
mov
and
mov
out
xchg
retf
retf
mov
mov
and
imul
mov
dec
inc
xchg
inc
xchg
xchg
xor
ss
push
sbb
xor
out
aad
xor
(bad)
mov
leave
push
cmp
mov
push
repnz
retf
lahf
fiadd
iret
and
(bad)
shr
xor
in
jecxz
xlat
call
jg
xor
mov
adc
xchg
std
popa
ret
es
ins
jmp
xchg
fcom
movs
pop
dec
mov
sahf
cmp
gs
call
data16
ja
jo
mov
in
leave
int3
das
cwde
cdq
jl
retf
mov
(bad)
xlat
and
std
dec
leave
lock
aas
mov
pop
push
push
sbb
ins
sbb
cmp
leave
loope
xchg
dec
mov
aas
push
pusha
pop
add
xchg
out
clc
mov
inc
jp
inc
cs
cmps
mov
int
movs
pusha
test
ror
mov
out
call
push
(bad)
jl
rol
push
dec
fwait
sahf
add
cdq
mov
repz
hlt
mov
data16
pop
mov
push
inc
sahf
in
hlt
aad
sub
je
in
add
push
loope
(bad)
retf
rol
or
call
or
scas
retf
or
(bad)
fmul
jge
push
jp
(bad)
mov
adc
jp
in
jl
mov
rol
loop
and
jo
mov
adc
clc
(bad)
xlat
xchg
(bad)
dec
cmp
cdq
adc
pop
mov
stos
mov
pop
fstp
dec
adc
dec
xlat
cdq
fiadd
or
bound
mov
icebp
rcr
cmp
xchg
lods
mov
mov
pop
mov
lds
pop
pop
cmp
je
std
daa
hlt
test
mov
nop
or
es
pushf
cmps
cmp
in
ret
jns
dec
pushf
cmp
mov
add
mov
mov
(bad)
or
adc
pop
stos
xor
call
sbb
push
call
dec
or
(bad)
sti
fisub
inc
maxps
lock
je
jne
inc
mov
sub
push
mov
push
fucomp
mov
mov
stc
cdq
mov
in
push
sbb
sti
sub
je
std
cmps
jge
xor
jmp
sahf
cmps
adc
sbb
in
push
mov
cmp
mov
sbb
and
stos
pop
xchg
xchg
xchg
fld
add
xchg
mov
lahf
mov
cli
jmp
mov
iret
push
push
in
not
push
std
hlt
hlt
ror
dec
push
inc
add
stos
sbb
hlt
in
loop
jo
jbe
outs
sub
sti
je
imul
pop
push
inc
jne
cld
into
pop
pop
xchg
cdq
fxch
or
nop
or
lods
pop
xor
sbb
fs
call
push
(bad)
call
jp
push
fnstsw
add
fadd
pop
mov
xchg
cmp
jb
xor
cmp
out
lods
dec
mov
mov
mov
or
mov
ret
pop
dec
lds
jb
aad
(bad)
and
dec
stos
repz
pop
push
add
(bad)
mov
fidiv
arpl
ds
jecxz
sub
div
dec
test
cs
gs
cld
jg
call
call
fiadd
mov
jl
mov
fdivp
add
mov
and
dec
ret
mov
cmc
into
sub
xchg
test
xchg
mov
cdq
scas
mov
(bad)
push
sar
(bad)
cmps
inc
sbb
mov
ins
jns
iret
mov
enter
cmp
(bad)
xabort
daa
jo
movs
cmc
ficomp
add
retf
cdq
or
dec
test
test
inc
xor
jmp
sar
jno
daa
sti
xchg
mov
outs
and
push
lds
push
xor
sahf
mov
mov
xor
mov
dec
jmp
jmp
jnp
push
lock
ins
xchg
sbb
xchg
sbb
leave
lock
movs
outs
cdq
sub
inc
gs
je
inc
jle
adc
inc
aam
fs
mov
adc
sbb
rcr
jb
fs
jl
dec
fdiv
jnp
aad
mov
mov
fwait
test
jnp
push
sub
and
jns
aas
cmp
imul
dec
mov
add
xchg
(bad)
jns
jecxz
out
(bad)
mov
add
addr16
push
and
adc
and
sbb
stc
pop
dec
push
sbb
xchg
(bad)
adc
cmp
test
mov
in
pop
call
push
sub
fist
lods
jne
jp
lahf
inc
dec
retf
into
push
xchg
ret
neg
stc
mov
cmp
in
inc
push
xlat
imul
push
(bad)
mov
das
jnp
inc
cwde
test
and
outs
(bad)
mov
int3
xor
cmp
nop
xor
add
xchg
jmp
mov
mov
cmp
add
pop
sahf
mov
mov
imul
lods
fmul
inc
jge
or
neg
loope
leave
shr
sbb
ret
mov
or
imul
cmp
test
cmp
rcl
stc
adc
add
repz
and
dec
jmp
xchg
aad
add
loopne
or
xchg
lods
shr
stc
pop
out
fs
mov
xor
mov
shl
arpl
loope
xchg
in
out
fs
jno
std
mov
mov
and
cmps
adc
xchg
mov
and
sbb
mov
cld
mov
cli
inc
xchg
xchg
inc
loopne
aad
mov
add
mov
dec
or
mov
retf
dec
in
movs
js
loope
nop
test
and
fwait
in
ss
xchg
(bad)
repz
repz
(bad)
ins
mov
xor
fs
test
lods
xchg
js
mov
jne
sub
fisubr
cmp
enter
addr16
jb
jecxz
ficom
xor
arpl
(bad)
std
dec
xchg
inc
push
int3
cmp
out
sbb
or
adc
dec
sbb
enter
add
mov
and
cmp
cmp
inc
cwde
inc
jo
push
imul
push
mov
scas
mov
mov
fstp
dec
add
add
stos
dec
mov
lock
xlat
mov
mov
add
icebp
jo
adc
push
cmps
(bad)
ds
mov
into
cmc
cmps
mov
pop
dec
sub
push
cli
test
dec
jnp
jae
in
pop
aaa
aad
xchg
xor
sub
jae
cwde
jle
push
mov
mov
retf
lods
lods
jecxz
cmp
popf
out
sbb
lods
aas
stos
mov
mov
or
xchg
pop
retf
or
data16
inc
dec
int3
popa
cwde
push
popa
call
movs
sbb
cmc
div
ret
sub
in
adc
outs
add
or
adc
cli
fdivp
sbb
fwait
push
or
aam
scas
fwait
inc
sub
or
add
push
lods
inc
mov
mov
mov
addr16
cmps
mov
mov
jno
retf
mov
sub
add
sbb
les
jno
sub
cli
call
mov
stos
mov
loope
imul
jmp
(bad)
pop
mov
inc
xor
pextrw
kmovd
mov
outs
jmp
out
xor
push
in
je
sub
or
(bad)
pop
mov
gs
sbb
pop
mov
dec
add
mov
ins
retf
jecxz
xor
ja
or
pop
or
rol
ins
pop
(bad)
in
jle
sub
push
in
push
shr
or
or
jl
pop
push
xor
icebp
add
shl
jmp
mov
cmp
jae
and
sub
popf
or
or
mov
fwait
push
scas
push
lea
dec
fild
movs
adc
scas
add
lea
(bad)
lods
lods
sub
mov
mov
dec
hlt
data16
pop
pop
stos
jl
mov
sbb
xchg
push
inc
jp
jae
int
push
adc
arpl
add
fild
add
cmps
xchg
xchg
xrelease
out
out
call
push
xchg
dec
out
xlat
xchg
sar
add
lahf
sub
jns
jnp
dec
pushf
push
dec
ucomiss
mov
add
xchg
push
lock
jmp
fild
sbb
inc
inc
lods
push
and
jecxz
adc
dec
cmc
push
or
mov
push
jnp
ror
movs
pop
dec
cmp
outs
mov
and
pusha
es
dec
xchg
ins
push
loope
movntq
push
xor
and
jecxz
es
xchg
jnp
jo
stos
mov
shr
jnp
inc
shr
enter
outs
mov
pop
(bad)
addps
push
ret
jmp
aas
ret
call
outs
add
cmc
mov
(bad)
ror
push
add
add
xor
cmps
lock
sbb
mov
fild
dec
out
push
inc
shl
push
push
(bad)
push
cdq
daa
arpl
sub
nop
mov
clc
stc
popf
imul
pop
iret
cli
fnstcw
addr16
outs
push
stc
das
data16
inc
pop
jp
push
inc
fmul
or
cld
sar
mov
cmps
es
add
repnz
mov
in
in
push
jmp
int
cld
sbb
sub
sahf
adc
dec
push
pop
outs
xor
cmps
test
jl
pop
lea
das
loopne
je
inc
nop
mov
or
addr16
cwde
scas
cmp
and
dec
mov
jnp
(bad)
mov
mov
test
push
push
aaa
ret
xchg
adc
fwait
cmp
add
stos
cmps
adc
mov
dec
sub
or
jbe
sbb
jae
xchg
or
repz
fild
inc
xor
mov
sbb
pop
add
call
js
into
add
loopne
xchg
mov
or
pop
xchg
sub
leave
xchg
inc
cli
mov
ins
out
xor
aas
add
daa
add
xchg
loope
push
mov
pop
lods
loope
ror
retf
fwait
idiv
pop
xlat
mov
jle
test
cmp
fistp
sbb
jne
lds
sub
mov
cmp
mov
jp
in
pusha
mov
shl
fucomp
inc
call
mov
pop
jne
es
add
inc
cmp
pop
outs
xchg
ror
jle
xlat
dec
jl
cs
les
mov
jl
push
movs
sbb
xchg
push
into
mov
add
push
not
fcom
retf
adc
dec
aam
sub
push
mov
outs
cwde
hlt
ja
or
ret
inc
lea
dec
mov
popf
jmp
inc
(bad)
mov
int3
sub
(bad)
je
push
pop
cmps
inc
addr16
inc
pop
rcr
std
push
dec
jno
scas
cmp
stos
mov
call
cld
dec
mov
into
shl
enter
sub
movs
mov
xor
call
in
popf
(bad)
(bad)
xlat
add
and
sahf
or
leave
sub
push
xor
mov
xlat
add
inc
pop
cwde
lods
lea
push
fsub
jge
ds
mov
xchg
pusha
in
rol
pop
jmp
xchg
dec
or
into
icebp
cmp
sar
leave
sub
imul
pop
mov
dec
fstp
push
xchg
pushf
adc
or
fwait
ins
jmp
xor
pop
iret
outs
retf
adc
or
aad
sub
jo
and
pop
mov
mov
add
mov
jnp
cmp
sbb
inc
xchg
dec
cmp
or
mov
leave
ds
scas
stos
cmp
mov
push
dec
adc
mov
adc
xchg
pop
retf
push
or
retf
sub
aaa
out
xor
jnp
in
adc
fwait
jmp
lock
call
shl
(bad)
shr
push
cmp
adc
mov
add
out
ds
lea
sbb
add
repz
icebp
mov
adc
push
bound
mov
inc
mov
sbb
retf
push
addr16
push
fsubr
xor
jbe
mov
add
pushf
call
adc
xor
in
ss
popf
test
loope
stos
mov
sub
or
out
sti
xlat
pop
lock
push
add
or
dec
stos
dec
xchg
xor
or
fwait
ds
and
jg
call
pop
mov
test
mov
das
in
loop
push
xor
pusha
test
dec
hlt
in
adc
jl
inc
leave
pop
xchg
push
mov
xchg
les
jmp
mov
xor
adc
ins
out
int
shr
iret
dec
lock
aaa
jo
push
push
clc
ret
bound
outs
mov
fldcw
stos
or
sahf
mov
pop
(bad)
pop
push
mov
mov
in
sbb
pop
jnp
pop
mov
sahf
and
test
jecxz
and
aad
push
outs
arpl
xchg
jo
(bad)
js
bnd
dec
and
ret
mov
or
xor
sti
jno
cmp
ins
adc
fdiv
ret
(bad)
fistp
fwait
aam
sbb
xor
sbb
ja
es
(bad)
(bad)
pop
dec
push
(bad)
sahf
popa
sbb
pop
mov
inc
div
cmp
lahf
push
or
test
sbb
sub
push
pop
fs
call
(bad)
lahf
adc
inc
rcl
ret
dec
mov
lahf
outs
and
xor
sbb
xchg
ja
xor
aad
test
dec
arpl
push
and
mov
mov
mov
jae
inc
jle
pusha
mov
aas
push
leave
cdq
cmc
stos
ins
test
nop
arpl
sbb
adc
(bad)
aaa
test
data16
sub
add
ret
sbb
call
(bad)
cmp
cld
jp
mov
lock
xchg
dec
ins
jle
sub
mov
pop
sub
in
test
cmp
hlt
popf
inc
inc
cwde
outs
ret
stc
sub
mov
(bad)
aam
lahf
cmp
xchg
xor
dec
pop
je
sti
fnstsw
fnstenv
pop
test
adc
or
out
fs
cld
movs
adc
adc
ja
in
or
pusha
sub
icebp
dec
pop
aad
and
jge
cli
rcr
(bad)
loopne
push
mov
mov
mov
sbb
xlat
xor
pop
comiss
jge
jb
stos
mov
ja
pop
dec
xor
fwait
sti
(bad)
mov
je
or
push
outs
push
int
adc
aam
(bad)
jae
cmp
dec
mov
inc
adc
mov
ficom
mov
sbb
pop
ins
movs
(bad)
xor
repnz
xor
fimul
popf
pop
lods
mov
movs
or
lahf
mov
rol
push
fxch
mov
cdq
push
pusha
adc
frstor
loop
ret
adc
in
ret
xor
sub
aad
out
ficomp
loop
inc
in
pop
or
dec
sbb
imul
push
add
cmc
sub
adc
add
call
dec
push
sub
aaa
aad
(bad)
xchg
fist
push
mov
and
push
push
loopne
push
jb
jecxz
cmps
inc
sti
imul
add
sbb
out
sbb
mov
pop
pop
outs
fistp
mov
mov
xor
push
cmp
jb
or
sahf
push
xor
jo
rcl
xchg
rcr
push
clc
cwde
fdiv
inc
ret
std
xchg
and
in
inc
ja
cmp
inc
push
and
cmp
jb
push
xchg
(bad)
std
ret
lea
xor
cmp
push
push
sti
test
ds
jmp
stos
sbb
shr
and
retf
xchg
adc
add
sbb
jns
push
or
dec
loopne
fld
nop
retf
fstp
cmp
enter
es
pop
mov
test
hlt
mov
sub
pop
call
inc
inc
or
pushf
cmp
daa
test
jae
stos
cvtps2pi
adc
pop
sbb
pop
inc
push
add
or
int
add
add
outs
fisttp
xor
test
pop
cmp
fwait
dec
lods
fidiv
xchg
xchg
cmp
imul
mov
jle
mov
test
mov
push
div
xchg
test
jp
cld
mov
and
ret
fdiv
mov
pop
jge
ds
das
xchg
dec
jae
aas
aad
add
sub
fnstcw
cmp
mov
(bad)
stc
data16
sbb
repz
xchg
dec
or
sbb
mov
sti
mov
xchg
jecxz
pop
or
sbb
cld
repz
je
push
sbb
rcr
or
bound
neg
pop
jmp
push
sbb
mov
jp
ret
cld
or
pop
hlt
xchg
mov
mov
cmp
in
pop
cs
sahf
xchg
fmulp
les
pop
mov
mov
popa
test
bound
aam
jmp
mov
(bad)
dec
mov
push
sbb
mov
jns
popf
jmp
jg
sbb
imul
lock
or
retf
mov
jl
fidivr
rcr
mov
pop
mov
mov
jmp
mov
jo
xchg
(bad)
cmp
inc
cmp
(bad)
inc
mov
inc
test
fisttp
ror
lds
jns
lds
push
std
mov
xor
pop
int
add
fidivr
cmp
int3
aam
dec
sbb
cmp
xor
sbb
fild
xchg
push
ss
sahf
out
outs
mov
push
lock
inc
shl
dec
(bad)
enter
sbb
dec
xor
pop
retf
loop
cmps
xchg
pop
push
shl
xchg
pop
add
dec
bound
mov
mov
movs
inc
ja
jp
aam
ds
mov
pop
sar
xchg
(bad)
lea
(bad)
test
addr16
test
gs
pop
adc
sub
out
jnp
cmp
jl
dec
cmp
aad
fwait
hlt
les
shl
sbb
cli
or
repz
xor
xchg
xchg
jmp
aam
mov
repnz
not
xchg
inc
cmp
mov
and
call
test
scas
mov
shl
out
outs
jb
out
das
cmps
ss
cld
and
pop
push
js
call
ret
mov
les
clc
pop
pop
aas
fisubr
cmp
xchg
xlat
cmps
fcom
mov
daa
int
jmp
inc
or
mov
fmul
cmps
aas
lds
adc
xchg
retf
es
mov
or
dec
call
push
clc
pop
mov
push
push
pushw
xchg
push
jecxz
lods
mov
loopne
jmp
and
adc
out
xchg
push
cmp
xchg
pushf
dec
xor
pop
sbb
scas
scas
cmp
jae
add
and
jo
lahf
xchg
imul
retf
pop
pop
aas
enter
mov
lea
aam
xor
or
in
test
cmc
push
push
mov
jae
or
aaa
xchg
ins
jns
xchg
aam
and
dec
fcomp
mov
fs
lods
mov
mov
pushf
nop
mov
(bad)
(bad)
sbb
jl
stc
dec
ror
jge
pop
jb
dec
fmul
jmp
rol
(bad)
int
mov
dec
imul
clc
outs
cmp
mov
icebp
dec
push
xchg
mov
rcr
dec
sub
fnclex
aam
mov
call
add
xchg
popa
test
int3
fidivr
retf
icebp
xor
add
iret
sub
xchg
mov
adc
pop
and
stos
inc
scas
sub
out
adc
out
inc
or
jbe
or
stos
xchg
inc
xor
mov
sbb
cmp
pop
dec
cdq
inc
push
push
out
lock
adc
jno
jne
jmp
jae
fidivr
mov
pop
or
in
jmp
push
out
xor
cdq
dec
mov
pushf
cmp
shr
inc
pop
ins
pop
mov
fadd
jg
gs
int3
cmp
push
cs
les
cli
sub
jns
or
add
sti
adc
(bad)
add
mov
adc
lds
xor
inc
mov
dec
jge
mov
das
nop
inc
int3
out
fcom
add
cmp
ins
ret
adc
mov
cmps
xchg
sbb
pop
lds
pop
fdiv
int3
and
jbe
(bad)
inc
(bad)
mov
mov
pop
xor
push
mov
pop
push
push
xchg
mov
jecxz
jmp
dec
rcr
pop
and
xchg
xchg
les
loop
xor
jno
xchg
pop
inc
push
mov
dec
inc
adc
or
jmp
in
(bad)
xchg
sbb
icebp
lock
add
jmp
scas
xor
nop
lds
jmp
test
retf
xor
sub
gs
daa
mov
test
gs
and
and
push
scas
popa
iret
sbb
or
dec
push
data16
sub
mov
stc
test
cwde
out
pushf
imul
add
and
sar
shr
das
pusha
(bad)
ret
ins
rol
sbb
add
sbb
cmp
push
push
jno
ret
(bad)
cmc
retf
or
in
das
repnz
push
(bad)
dec
pop
or
xchg
dec
aas
pop
jns
inc
push
hlt
adc
or
aaa
add
mov
shl
int
fimul
les
shl
stc
jne
repnz
loop
push
mov
cmp
imul
call
xchg
pop
mov
push
mov
or
mov
fs
xchg
stos
rol
inc
inc
sti
cmp
sbb
jne
jbe
and
gs
aaa
add
gs
into
jno
mul
push
inc
stos
cwde
int
xor
test
js
xchg
or
pop
and
imul
fs
cmp
and
xchg
push
shr
test
shr
or
jl
mov
sbb
jmp
mov
adc
pop
pop
mov
pop
into
test
mov
shl
rol
retf
jbe
sbb
xchg
inc
sub
int
push
inc
jo
in
xchg
jns
xchg
icebp
push
xchg
and
xor
or
push
mov
mov
cmc
xchg
ret
in
mov
and
pop
mov
push
scas
dec
push
xor
inc
pop
out
jae
in
pop
outs
icebp
fcmovbe
inc
es
mov
add
ror
or
movs
adc
or
and
adc
xor
icebp
jl
push
jno
sbb
inc
inc
inc
cld
nop
sti
out
lods
xchg
mov
pop
outs
repz
int3
inc
(bad)
dec
mov
not
and
mov
mov
xor
ficomp
and
lsl
loopne
dec
enter
add
jg
inc
popa
popa
mov
mov
jbe
sub
xchg
push
lds
or
inc
int
or
sbb
pop
(bad)
fcomp
add
loop
stos
xor
sbb
jno
push
cmp
cmp
cmp
dec
loop
into
mov
add
add
pop
xor
add
add
sub
mov
test
(bad)
addr16
xchg
popf
inc
jg
add
pusha
pusha
dec
xchg
loopne
dec
mov
rcr
xchg
gs
(bad)
mov
cmps
sbb
imul
pop
out
loop
and
lock
jo
dec
test
mov
and
push
enter
and
xchg
adc
jle
pop
test
daa
lods
jge
test
fwait
scas
cmp
mov
into
mov
addr16
mov
mov
lock
jne
pop
jg
pop
push
ret
in
push
adc
gs
(bad)
cmp
xchg
mov
add
sub
sub
mov
cmp
mov
pop
jl
push
add
mov
fucomp
mov
div
(bad)
in
mov
sbb
cmp
(bad)
sbb
loopne
retf
outs
adc
mov
movs
fwait
stos
clc
xchg
push
mov
push
gs
push
addr16
test
pop
out
nop
pop
xchg
aad
xor
pop
in
cmp
stos
jmp
mov
dec
ins
loope
mov
xor
mov
aaa
ds
mov
jo
in
sbb
shl
mov
int3
jmp
mov
sub
ret
rcl
pop
idiv
fsubr
cmp
jecxz
mov
xchg
mov
in
mov
and
clc
cmps
in
mov
sar
push
fwait
mov
mov
fcom
mov
adc
pop
mov
cmp
push
in
mov
shr
ror
mov
repz
xchg
cmps
and
out
fstp
pushf
iret
jb
mov
(bad)
(bad)
dec
and
imul
stos
fist
pop
test
inc
retf
or
mov
push
inc
add
mov
arpl
dec
push
and
push
leave
sub
std
xor
mov
ds
cli
adc
sti
mov
(bad)
ffree
arpl
push
dec
pop
pop
xlat
xor
js
(bad)
rcr
shl
call
mov
jno
dec
daa
sbb
add
jae
dec
xor
pop
add
mov
ins
and
push
lds
mov
arpl
jp
stos
out
in
and
mov
xor
push
sahf
mov
ret
push
(bad)
xor
push
sub
ss
lahf
adc
icebp
push
leave
push
shl
aam
pop
xchg
out
xchg
pop
xchg
mov
jbe
lock
push
movs
mov
jecxz
ds
sub
aas
mov
jo
sahf
daa
mov
repnz
cmps
mov
dec
adc
retf
xchg
not
aas
ret
sbb
pop
mov
arpl
das
cmp
arpl
dec
out
movs
or
(bad)
rol
mov
cmp
outs
sub
std
stos
xchg
mov
or
push
xchg
pop
neg
int3
xor
xor
clc
bound
dec
adc
leave
jne
fs
push
mov
sbb
cwde
into
into
scas
sub
scas
jns
in
jle
xor
add
sub
pop
lds
in
jge
out
mov
out
dec
cwde
lods
int
push
mov
pop
jmp
fsubr
scas
hlt
adc
retf
ss
shr
rcl
data16
xor
inc
fidiv
xor
cli
shl
(bad)
xchg
mov
cs
push
cs
cmp
call
mov
mov
dec
sbb
mov
mov
aam
mov
push
test
adc
aad
repnz
and
rcr
test
jb
into
addr16
inc
xor
popa
cmp
int3
out
jmp
cdq
pop
sti
jmp
jp
ins
in
cmp
jmp
pusha
sahf
pop
mov
popa
xor
shr
or
pop
mov
sub
aas
jae
pop
iret
movs
in
sbb
push
inc
mov
test
outs
retf
sub
aaa
(bad)
out
sub
push
sub
cmp
out
xor
daa
(bad)
xchg
test
dec
sbb
loop
repnz
cmp
xor
inc
jmp
mov
retf
xor
xchg
inc
into
cmp
loop
and
adc
inc
and
push
push
mov
loope
mov
fsubr
imul
push
lds
or
in
imul
repz
mov
dec
scas
out
idiv
xor
xor
sbb
xchg
mov
pop
stc
ffree
inc
mov
add
sub
and
jns
xchg
rcl
aas
out
pushf
inc
cmp
xchg
retf
dec
jge
leave
scas
mov
and
cli
dec
jmp
sub
mov
push
dec
cmps
push
int3
pop
fimul
dec
jns
and
pop
loopne
jmp
pusha
adc
int
sbb
push
test
in
add
cmp
jl
dec
push
jnp
jecxz
dec
gs
jecxz
lods
ja
in
xor
cwde
in
pop
iret
mov
(bad)
pop
sti
ds
cli
lods
test
ins
jo
sub
jns
neg
mov
adc
mov
push
sub
add
xchg
outs
shr
xor
(bad)
cmp
pusha
jo
int
int3
mov
adc
outs
test
or
jns
iret
push
mov
mov
in
jne
add
and
xchg
add
xchg
jnp
jecxz
xchg
les
aad
pop
cmp
movs
xor
jb
jbe
mov
jmp
inc
neg
cld
inc
mov
sub
mov
out
push
rol
jns
jno
int
call
das
daa
push
das
mul
mov
push
js
in
mov
dec
push
push
inc
loope
inc
xchg
out
pop
test
movs
and
jmp
sbb
in
out
jp
or
or
xor
sbb
fadd
popf
out
call
cmps
nop
cmp
jmp
std
sub
ds
mov
loopne
movnti
push
or
mov
popf
je
or
movs
stos
std
inc
and
std
in
adc
mov
dec
pop
xchg
loope
mov
sbb
xchg
push
mov
mov
adc
loope
mov
inc
mov
push
push
ror
fiadd
mov
js
push
mov
outs
xchg
mov
clc
inc
mov
pop
arpl
sub
mov
and
xor
and
scas
add
sbb
dec
aam
dec
sbb
retf
jnp
js
push
pop
in
out
cmp
mov
mov
sub
ret
outs
adc
cs
frstor
(bad)
dec
lods
cli
imul
adc
adc
lea
sub
test
test
add
cmp
loop
mov
cdq
clc
adc
or
fs
or
pop
mov
jg
data16
sub
nop
pop
retf
retf
retf
dec
cmp
jg
inc
das
mov
adc
push
sub
popa
push
dec
(bad)
outs
add
call
and
outs
and
fiadd
push
push
sub
stos
fcmovnbe
or
xchg
jmp
and
scas
cmp
dec
inc
call
imul
lods
gs
fild
push
lods
fistp
jp
mov
add
jle
inc
jge
dec
repz
mov
cmp
retf
bound
test
sbb
mov
retf
jmp
push
jb
and
(bad)
icebp
adc
jb
jl
cli
ja
fwait
mov
or
shl
jne
mov
cmp
dec
out
mov
xlat
cmc
adc
cmp
dec
lods
scas
xchg
fld
mov
adc
std
adc
adc
xlat
push
int3
fdivr
or
cmp
xor
fsubr
(bad)
dec
or
jne
jecxz
inc
sbb
push
jno
jb
xor
addr16
inc
sbb
xor
mov
dec
nop
push
mov
jle
pop
rcpps
xchg
ficomp
dec
pop
sar
xor
(bad)
or
push
xor
js
sti
xor
jmp
push
retf
(bad)
dec
cmps
leave
or
mov
mov
mov
sbb
ret
mov
sub
add
in
jge
or
mov
les
sar
mov
push
push
push
shl
div
mov
mov
jecxz
add
or
test
inc
rcr
cmp
imul
mov
test
js
cli
push
xor
jmp
test
cmp
inc
mov
dec
test
jge
mov
xor
sub
mov
movs
shr
lods
stos
cdq
sar
pop
cli
mov
(bad)
out
icebp
fild
mov
and
jmp
shr
push
mov
xor
ins
sbb
mov
adc
inc
mov
dec
or
mov
xlat
and
repnz
js
sbb
movs
in
(bad)
fdiv
aas
outs
sub
test
xor
or
push
add
pop
adc
fnstcw
lea
pop
pop
jecxz
(bad)
sub
daa
sub
shr
sbb
push
cmp
in
or
jle
mov
cmp
or
and
or
cmp
loope
xor
popf
pop
fs
lods
arpl
add
(bad)
(bad)
rol
adc
mov
lahf
mov
sbb
adc
outs
cmp
repnz
(bad)
jnp
mov
aad
mov
ss
sbb
pop
bound
cdq
xchg
(bad)
jl
test
push
push
out
bound
outs
std
ins
sub
xchg
bound
push
and
stos
or
fbld
sbb
jb
sbb
mov
push
inc
pop
popa
mov
mov
mov
sbb
int
pop
std
add
cld
test
push
loop
shl
aas
sbb
lds
sti
sbb
mov
add
xor
(bad)
jg
lods
inc
test
test
fs
pop
enter
or
retf
les
cld
add
and
adc
xchg
inc
jno
(bad)
xchg
fistp
mov
or
pop
retf
pop
mov
jns
cmc
(bad)
push
dec
lahf
int
cwde
mov
sahf
out
jo
das
fist
xor
ss
jnp
xchg
add
inc
test
or
push
and
mov
in
inc
ins
jge
leave
mov
and
push
aaa
pop
push
jle
add
rol
sar
jecxz
(bad)
pop
push
lea
add
pop
jbe
adc
inc
fist
repz
push
ror
dec
stc
mov
(bad)
mov
xchg
daa
jo
inc
push
mov
gs
push
and
mov
adc
lods
test
bound
ins
xchg
sub
test
cli
mov
int
rcl
cmp
test
add
jb
mov
mov
add
fs
into
int3
pop
retf
xor
movs
jg
mov
cmp
inc
jmp
and
aaa
ret
and
loopne
mov
xchg
mov
and
(bad)
cmp
addr16
xchg
(bad)
xchg
mov
mov
sbb
adc
fsub
(bad)
push
mov
out
inc
or
jg
add
std
inc
push
js
add
lahf
outs
int
repz
stc
mov
ret
loop
adc
out
sbb
scas
out
(bad)
pop
loopne
and
mov
ret
sahf
inc
mov
cmps
push
cmp
ins
mov
sbb
mov
out
clc
(bad)
adc
and
enter
stos
clc
imul
inc
cmc
push
cmps
dec
dec
stos
jmp
or
push
push
add
inc
in
push
dec
ret
out
cmp
jns
push
add
not
xor
cmp
sahf
jle
out
pop
sbb
cmp
lods
and
out
fist
sub
in
lds
icebp
xchg
loop
sub
xchg
push
inc
stos
fcmove
arpl
ret
imul
into
push
mov
mov
sub
(bad)
sub
sbb
sub
dec
add
movs
lds
imul
shl
dec
sub
add
adc
xchg
lahf
pop
xor
in
mov
push
ins
add
ret
dec
sub
mov
sbb
mov
and
jmp
fistp
cmps
xchg
gs
fstp
ror
add
cmp
(bad)
mov
clc
mov
cmp
pop
mov
aad
call
sbb
mov
dec
std
push
push
adc
stos
mov
and
ret
mov
adc
fstp
fiadd
out
sbb
dec
clc
and
out
in
movs
rcr
xlat
lods
retf
mov
sbb
fstp
ins
loop
je
fistp
std
cmp
mov
cmp
aam
aaa
cdq
cmps
sbb
fsubr
lods
mov
ins
mov
xchg
push
inc
sti
push
mov
int3
popa
sahf
inc
push
add
ds
or
pop
stc
frndint
(bad)
push
rol
cmp
cmp
cmp
loop
ds
lahf
xor
cdq
loop
lock
(bad)
adc
icebp
out
cwde
cmp
push
sub
sbb
mov
sub
test
stos
(bad)
ins
mov
fild
and
mov
jg
jae
push
dec
and
inc
sbb
pop
(bad)
mov
arpl
pusha
and
jg
into
xor
mov
idiv
add
pop
loop
mov
sub
cmp
cmp
fbld
mov
jno
mov
out
or
inc
xor
daa
(bad)
leave
fild
out
(bad)
jle
(bad)
jno
xlat
push
je
lods
rcl
aam
sub
rcl
aaa
sub
mov
sub
out
cmps
inc
pop
out
xchg
or
sub
movs
jae
pop
sbb
xchg
jmp
pinsrw
and
movs
adc
inc
repz
pop
sub
cli
fidivr
aam
pop
outs
mov
mov
cdq
dec
adc
mov
or
sar
test
jmp
nop
or
cld
je
fiadd
jmp
outs
repnz
pop
cmp
es
jae
ror
sub
fnstsw
(bad)
xor
push
sbb
aad
adc
jne
mov
sbb
cmps
or
jno
(bad)
out
aad
stos
inc
ror
pop
int3
or
or
mov
push
xor
cmps
jg
aam
xchg
dec
jnp
cmp
(bad)
xor
and
fiadd
or
or
push
clc
cmovs
mov
rcl
mov
ins
enter
xchg
xor
dec
stc
js
jbe
sbb
jp
adc
lock
imul
dec
inc
repz
icebp
daa
pop
xchg
push
sbb
adc
mov
mov
jne
pop
and
jmp
shl
sbb
sbb
dec
jmp
push
out
(bad)
(bad)
pop
movs
jecxz
inc
mov
scas
inc
fnstsw
ror
sbb
inc
addr16
dec
mov
mov
cs
out
sub
jmp
adc
pop
(bad)
in
add
cld
jb
test
in
xor
jmp
repnz
mov
outs
add
inc
les
shl
xchg
cmps
jl
jle
sbb
add
and
jb
cmps
in
cmp
aaa
jns
fst
outs
loope
adc
mov
call
arpl
mov
stos
and
clc
ficomp
or
jno
inc
arpl
pusha
lds
jl
mul
push
xchg
dec
cmp
je
(bad)
ins
cmc
(bad)
sub
inc
push
js
inc
test
cwde
(bad)
clc
adc
into
repnz
ja
fisub
jne
xchg
dec
hlt
adc
gs
repnz
cs
push
sub
scas
outs
and
and
dec
cmp
das
lods
push
out
packuswb
and
cmc
stc
pop
cmp
les
cmp
mov
sub
test
mov
xchg
test
jge
push
mov
into
mov
cdq
call
mov
jns
(bad)
jg
test
dec
sbb
ds
scas
xchg
imul
iret
sub
push
pop
shl
fldcw
xor
mov
adc
in
xor
imul
mov
daa
fild
push
sti
sub
inc
rcl
icebp
lods
cmp
jns
jo
clc
cmc
ds
test
xor
repz
out
iret
movs
and
daa
sbb
lahf
sub
xchg
or
inc
pop
mov
dec
mov
(bad)
in
jmp
in
int3
mov
xor
iret
rcr
cmp
push
sub
cmps
dec
ja
nop
shl
dec
xchg
pslld
in
movs
or
lea
je
in
sub
shl
shr
xor
movs
mov
popa
jae
(bad)
mov
adc
mov
ror
pusha
and
adc
jp
nop
daa
out
inc
idiv
stc
cdq
add
inc
dec
call
icebp
add
clc
cmp
push
inc
rol
push
mov
daa
push
mov
inc
test
hlt
in
scas
mov
call
(bad)
xor
test
mov
es
sbb
shl
lahf
cs
xchg
loopne
adc
gs
retf
lahf
add
imul
ins
aad
push
inc
ins
xchg
sbb
jp
int3
out
es
call
out
mov
fadd
scas
fisubr
jne
sbb
dec
sbb
mov
(bad)
pushf
jecxz
cs
scas
in
int3
shl
jae
daa
jbe
jle
xchg
call
xchg
fs
icebp
leave
pop
mov
cmp
loope
in
jbe
xchg
dec
push
inc
xchg
ins
icebp
mov
mov
loop
jmp
lods
xor
mov
je
btr
xchg
(bad)
and
out
cld
adc
imul
dec
(bad)
aas
mov
inc
test
inc
popf
or
inc
sbb
aad
xchg
mov
cld
push
fldpi
dec
add
mov
stos
xchg
ror
int3
retf
fdiv
xchg
mov
cmp
xor
add
and
fstp
adc
loop
dec
xor
fs
loopne
fisub
mov
mov
xchg
ror
cdq
pop
loope
arpl
stc
cmp
mov
mov
sbb
ret
mov
mov
cmp
mov
pusha
div
or
sar
loope
int3
sbb
and
lods
push
test
(bad)
jnp
jb
and
push
mov
outs
imul
fstp
xor
jo
dec
mov
test
cmps
retf
in
cmovae
pop
inc
movs
dec
das
fstp
pushf
jl
push
pop
pop
scas
inc
or
add
inc
sbb
push
adc
in
xchg
test
stc
popa
cmp
cmp
int
mov
ds
in
mov
or
and
or
mov
fst
hlt
clc
cmps
je
mov
sbb
ins
inc
add
jbe
lock
scas
adc
xchg
add
push
pop
or
popa
inc
xchg
mov
imul
out
or
mov
pop
out
adc
inc
adc
aas
cmp
push
sbb
or
mov
outs
sbb
int
or
ins
pushaw
leave
jno
lock
sar
jns
mov
stos
mov
and
xchg
sbb
cmp
pop
(bad)
cmp
sbb
shl
stc
inc
jno
pop
pop
jno
mov
xchg
sub
popa
xchg
fdiv
fist
stos
dec
rol
jbe
sub
adc
or
loope
cld
in
out
mov
dec
inc
je
push
arpl
mov
push
out
and
arpl
cmps
add
push
sub
ins
and
or
ss
fmul
daa
jb
loopne
xor
call
or
xchg
imul
fistp
fst
fcomp
xor
inc
aam
or
test
dec
xor
push
mov
push
jo
repnz
sub
push
ins
jg
sub
cmp
pop
(bad)
adc
fadd
(bad)
pusha
stos
mov
dec
jns
sub
adc
xchg
call
cmp
lahf
xchg
add
lock
movs
jecxz
mov
mov
pusha
pop
sbb
or
jmp
and
or
push
repz
jne
pop
push
bound
stos
dec
mov
lods
stos
xchg
cmc
cwde
in
xchg
sbb
shr
je
mov
sbb
mov
cmps
fst
push
jb
aam
imul
cmps
test
push
or
lock
inc
sbb
xchg
shl
xchg
fcmovnb
(bad)
(bad)
adc
or
lea
test
jge
xor
dec
cli
clc
fld
rcr
jno
in
in
mov
sbb
sub
add
fwait
shl
dec
xchg
cmp
je
js
push
dec
push
out
sbb
mov
mov
jno
inc
add
imul
dec
sub
push
inc
call
pusha
in
aam
sub
push
fild
fist
pop
dec
sahf
shl
pop
xchg
mov
mov
sub
outs
push
jne
push
scas
sbb
adc
aas
adc
in
mov
data16
inc
sbb
popf
cmp
mov
cmp
test
pop
fs
pop
mov
inc
es
or
lea
aam
jmp
sbb
or
pop
add
test
ss
cmps
mov
pop
xchg
je
repnz
jp
mov
pop
jg
data16
adc
inc
cmp
repz
xchg
pop
mov
mov
jne
hlt
cmp
jae
add
scas
and
add
ins
(bad)
cmps
dec
mov
(bad)
das
icebp
div
mov
daa
sub
push
hlt
and
sub
sbb
adc
mov
push
rcl
push
(bad)
sub
adc
pop
lds
cmps
test
pop
into
adc
push
inc
sbb
jo
enter
popf
jmp
cmp
jmp
repnz
push
adc
jne
not
scas
inc
push
sbb
mov
(bad)
cdq
and
jmp
inc
pusha
adc
mov
cld
sti
imul
and
mov
ficomp
nop
das
mov
rcl
inc
push
mov
fistp
clc
(bad)
push
mov
out
xchg
ins
xchg
xor
xchg
nop
int3
cmp
push
lods
out
jg
jmp
fldcw
adc
pop
mov
and
or
xor
jecxz
int
popa
sti
retf
fsub
jg
aad
sbb
es
shl
mov
add
sar
jae
mov
hlt
test
jl
lods
add
hlt
popa
adc
jo
jbe
inc
dec
push
mov
icebp
jecxz
or
fmulp
jbe
into
int3
cmc
cli
pop
jno
dec
xor
retf
xchg
xor
and
cmc
mov
xchg
jno
sub
mov
sbb
lea
sub
les
es
imul
sbb
pusha
sub
ss
xor
in
cmp
imul
les
xchg
lods
popa
std
or
cmp
ror
xor
cmc
mov
call
cmps
scas
mov
leave
pop
dec
jo
sub
mov
outs
in
xchg
xchg
push
push
arpl
aas
push
test
or
test
inc
pop
loop
jbe
int
and
sbb
mov
daa
lods
add
fst
movs
aam
push
mov
xor
mov
popf
imul
sub
and
jne
addr16
loopne
push
and
call
push
addr16
sbb
pop
xchg
push
jmp
ss
fld
cmc
xchg
mov
or
loop
outs
sub
enter
dec
jo
and
push
(bad)
cmps
outs
and
call
(bad)
jmp
jmp
fs
int
sbb
lock
retf
inc
adc
fwait
sbb
scas
retf
fld
add
iret
mov
pop
outs
lods
(bad)
push
mov
inc
gs
push
cmps
dec
jle
ja
sub
jp
jns
or
scas
cld
icebp
imul
aad
hlt
xchg
cmc
mov
xchg
dec
ffree
fwait
adc
int
rol
inc
mov
sub
sahf
fdivr
and
pop
out
xor
dec
or
xchg
in
cmp
mov
mov
fistp
in
repz
jbe
lock
pop
inc
cdq
ins
popa
inc
rcr
int
pop
call
sub
in
dec
sub
adc
xlat
or
movs
adc
lods
movs
aad
fldcw
push
lods
mov
jle
pop
outs
jno
out
mov
(bad)
in
scas
cmp
out
push
and
outs
pop
mov
out
jno
mov
into
or
into
imul
lods
ficom
(bad)
gs
xor
es
and
add
fmul
dec
add
jg
cmp
sub
xor
es
mov
mov
xor
sahf
add
push
add
paddsw
out
inc
into
sub
jg
add
repz
add
rcr
and
or
sub
aad
push
ds
jl
fs
xchg
mov
inc
(bad)
stos
add
fld
mov
test
hlt
push
pop
call
jno
dec
jnp
out
and
xor
scas
lahf
loope
add
mov
mov
xor
lds
ret
sbb
je
mul
addr16
leave
adc
aad
dec
mov
push
xchg
add
inc
mov
aad
cmps
xor
mov
je
mov
sub
add
ficomp
cmp
jge
xor
ins
out
inc
push
or
clc
jge
outs
dec
mov
rcl
push
push
popa
sub
jne
scas
jo
out
jl
mov
arpl
cmp
stos
jge
cmp
dec
lods
jno
das
push
test
(bad)
mov
mov
ss
test
ficomp
jle
sahf
or
stc
inc
int3
aaa
sahf
cmps
jnp
pop
sbb
nop
ss
mov
(bad)
mov
mov
dec
push
push
jbe
jmp
sar
and
jmp
mov
ss
retf
sub
pushf
jecxz
add
mov
sbb
dec
mov
lds
sub
cld
xchg
mov
ins
xor
stos
xchg
jge
jge
daa
jne
in
sbb
enter
mov
pop
movs
push
js
mov
jmp
in
ficomp
mov
(bad)
mov
push
nop
outs
push
mov
or
mov
sbb
jnp
jge
repnz
and
leave
(bad)
addr16
stos
(bad)
or
and
pop
cdq
adc
xchg
sbb
out
das
cmc
call
mov
mov
mov
sbb
sub
xchg
in
jmp
and
rol
inc
cmp
movs
je
(bad)
aaa
push
(bad)
dec
push
push
iret
ja
mov
jp
fisubr
mov
push
data16
pop
push
cmps
jno
(bad)
mov
test
hlt
aaa
add
xchg
sbb
aaa
xchg
enter
inc
add
xchg
test
sub
fs
fcomp
or
sub
faddp
fst
xchg
into
cmp
popa
add
mov
dec
mov
jmp
lds
pop
dec
clc
mov
fstp
aaa
inc
push
adc
(bad)
outs
movs
jo
mov
(bad)
xchg
jnp
nop
loope
xchg
pop
scas
in
cmc
mov
ins
stc
cmc
mov
dec
in
cli
jo
mov
inc
mov
xchg
and
pop
(bad)
fs
push
sub
push
add
out
inc
dec
jmp
adc
fdivr
(bad)
sahf
inc
push
cmps
in
and
(bad)
xor
loop
mov
jns
js
aad
mov
stc
std
dec
sahf
or
pop
mov
ins
ds
xchg
fsubr
xor
out
scas
inc
sbb
repz
push
outs
out
mov
push
mov
inc
(bad)
in
cs
shl
adc
pop
test
dec
int
jp
popa
mov
jge
pop
int3
add
push
rcl
call
inc
stc
scas
push
adc
lods
xor
test
mov
adc
pushf
xor
ffree
ds
add
int
popa
pushf
jg
mov
mov
rcl
sub
adc
cmc
ret
jmp
ss
and
fs
fisubr
test
std
mov
fldln2
pop
jo
sar
loopne
xor
add
or
cmp
jns
push
mov
leave
xor
(bad)
es
out
push
mov
mov
pop
dec
and
mov
stos
xchg
pop
sti
and
daa
pop
shr
je
xchg
mov
pusha
sbb
pop
out
retf
out
or
addr16
dec
pop
ja
adc
add
or
mov
nop
(bad)
sub
fdivr
movs
(bad)
mov
mov
inc
outs
xor
and
cmps
xor
adc
push
cmp
outs
out
mov
popf
ss
inc
out
and
lahf
jle
aas
shr
stos
js
cmps
popa
arpl
fdiv
lods
cmp
mov
pushf
dec
push
inc
shl
jg
cdq
pop
add
std
shl
pop
sub
popa
fwait
jo
cmp
stc
dec
dec
xchg
mov
xor
aaa
dec
mov
mov
dec
(bad)
sub
js
mov
and
dec
test
inc
stos
inc
or
jecxz
mov
fwait
arpl
aas
stos
les
or
jb
jne
ret
mul
sbb
call
jge
pop
cmps
scas
and
test
pop
retf
fdivr
outs
mov
lods
cmps
shr
(bad)
pusha
stos
mov
es
xor
das
lock
ror
jbe
nop
ds
out
aaa
mov
movs
mov
push
push
cmp
jns
push
pop
std
push
lods
sbb
push
sahf
mov
seta
lds
or
pop
pop
aam
mov
adc
dec
and
jmp
mov
push
push
pop
js
dec
adc
dec
(bad)
cs
mov
add
pop
push
mov
xchg
scas
add
pop
cmps
and
cs
push
mov
sub
cld
imul
test
std
pop
and
jge
cmps
cmp
mov
jbe
es
push
ja
lds
and
in
jne
jo
adc
xchg
retf
push
sar
outs
arpl
push
test
inc
aam
pop
sub
mov
mov
test
inc
mov
in
jo
cmc
or
nop
mov
jmp
dec
js
xchg
adc
and
mov
in
mov
sar
jno
(bad)
fidivr
pop
jl
aas
xlat
inc
loopne
(bad)
fld
sbb
les
push
loope
sub
std
std
enter
or
cmps
pop
xchg
sbb
sbb
and
push
fcom
gs
test
cmps
rcr
jmp
jecxz
loope
(bad)
inc
iret
repz
jbe
ror
cmps
push
into
lock
arpl
or
xor
std
xchg
(bad)
movups
xor
fldcw
sahf
jnp
inc
rcl
adc
push
cmp
ins
jmp
fwait
cmovbe
push
setne
mov
mov
loope
scas
push
and
mov
stos
pop
jl
jle
xchg
(bad)
adc
jo
mov
lods
pop
stos
add
in
xchg
xchg
push
and
adc
mov
cmp
sbb
imul
add
aad
mov
mov
out
les
adc
add
in
and
push
add
xchg
hlt
addr16
call
mov
ror
push
jno
repnz
inc
pop
cld
test
pop
ds
inc
jno
xchg
mov
add
or
loopne
push
mov
add
push
cmp
pop
(bad)
jp
fistp
inc
jns
rcr
movs
iret
enter
adc
xchg
ret
lods
lods
pop
popa
or
cmp
mov
dec
fdivr
sbb
push
xchg
mov
pop
dec
cwde
pop
mov
icebp
loopne
mov
inc
retf
dec
inc
jo
test
mov
fwait
cmp
in
loopne
push
gs
and
pop
jbe
adc
push
jbe
daa
and
xlat
dec
mov
pop
and
cmp
frstor
call
cmp
push
and
xor
enter
(bad)
sub
(bad)
dec
xor
xchg
xchg
xor
mov
sub
push
ins
jmp
dec
ret
pushf
ja
ret
lock
addr16
jne
iret
pop
ins
outs
add
clc
je
das
rcr
ds
imul
mov
outs
mov
pop
dec
loop
call
inc
jbe
and
or
push
pop
add
out
inc
ds
cmp
mov
pop
sbb
mov
jbe
in
pop
jae
sbb
xor
out
xchg
pop
rcl
add
cmps
mov
jmp
loopne
repz
iret
push
lock
push
xor
fldcw
(bad)
or
xchg
xor
adc
repnz
adc
jl
push
shr
test
lods
test
sbb
bound
cmc
ss
push
out
pop
inc
shr
mov
jo
pop
sbb
cmp
adc
(bad)
jne
(bad)
enter
dec
jbe
xlat
jbe
jbe
add
pop
shl
push
out
ja
gs
shl
mov
jb
fidiv
push
movs
int3
inc
(bad)
aas
xor
xchg
add
int3
mov
adc
sbb
push
call
dec
mov
mov
cdq
cmc
repz
call
push
fmul
test
mov
rol
repz
fmul
in
out
mov
inc
xchg
xchg
cmps
(bad)
in
push
test
stos
pop
fisttp
cli
test
jp
cld
ss
xor
loopne
add
pushf
stos
jmp
aam
movs
sti
(bad)
mov
stc
test
push
pop
cs
sbb
jbe
call
and
mov
out
test
adc
xchg
stc
jg
mov
add
test
shl
mov
adc
icebp
neg
jl
pop
sub
xor
jnp
aas
and
or
or
imul
xor
xor
cmp
gs
jle
mov
and
add
and
int
clc
bound
xchg
retf
and
call
sub
cmps
xor
(bad)
(bad)
or
mov
mov
daa
ja
clc
fsub
ins
xor
mov
test
aad
ins
add
ret
cmp
inc
dec
push
paddd
xchg
stos
fcmovnbe
and
repz
out
pop
inc
cmp
iret
rol
mov
ins
xor
sbb
mov
dec
pop
das
pop
inc
xor
es
xchg
sub
nop
shl
sbb
movs
test
into
hlt
xor
aaa
rcl
dec
jae
xor
scas
mov
fld
repnz
test
sub
loopne
jno
mov
lds
sti
ret
in
imul
repz
mov
xor
cs
push
push
inc
add
in
mov
sahf
imul
shl
outs
fisub
pop
or
mov
jge
pop
push
and
movs
icebp
dec
jo
shl
mov
inc
ja
icebp
adc
das
std
cmp
ror
mov
fld
test
xchg
fs
into
dec
mov
xor
inc
xchg
mov
and
sbb
pop
mov
add
pop
mov
hlt
inc
cli
xchg
add
movs
ja
pop
loop
les
mov
bound
and
repnz
ins
fisubr
stos
(bad)
jmp
pop
and
mov
dec
popf
ret
aaa
jae
ret
push
shl
rol
(bad)
pop
out
pop
mov
outs
pop
adc
das
mov
adc
(bad)
mov
adc
mov
mov
sbb
sub
mov
add
jl
rep
mov
mov
int
fbld
out
loop
jge
lahf
jbe
lds
arpl
xchg
push
stos
xlat
push
jge
test
and
movs
mov
cmp
pusha
outs
cmp
retf
and
cs
push
xor
cwde
dec
repz
xchg
imul
jae
xor
fnstsw
or
jb
popf
enter
movs
iret
xchg
xor
mov
push
xor
mov
call
cli
fisttp
push
cmps
mov
in
mov
jns
sar
stos
in
mov
cmp
retf
test
dec
sbb
sahf
mov
bound
test
aad
jns
mov
mov
or
imul
cmc
jo
pop
sbb
push
shl
fdiv
add
iret
call
inc
cli
loopne
sbb
mov
add
pop
pop
cdq
xor
mov
ror
(bad)
xchg
sub
sbb
outs
mov
rcl
(bad)
ret
inc
lods
mov
fcmovne
in
jb
and
sbb
push
sbb
xchg
xchg
mov
and
push
loop
inc
xchg
or
hlt
stos
pop
and
dec
cmp
xor
jmp
data16
sbb
lea
fwait
pop
nop
mov
lahf
retf
push
push
sub
daa
cld
ds
mov
sbb
xchg
fmul
scas
test
mov
xchg
arpl
icebp
sbb
xlat
sub
push
(bad)
cli
dec
and
call
dec
pop
rcl
dec
test
je
sahf
jmp
mov
push
xor
loopne
in
xchg
aaa
push
jle
call
leave
pop
mov
(bad)
pop
vdivps
and
dec
(bad)
push
xchg
ins
scas
je
cmp
fs
and
sub
mov
aaa
out
lahf
jl
ret
lahf
lods
pop
pcmpeqd
fnstenv
mov
or
add
mov
jae
and
add
add
dec
es
pop
and
cmp
pop
mov
fwait
sub
adc
jmp
mov
jle
test
loopne
rcr
stos
fwait
ins
test
cmp
in
xchg
scas
mov
mov
push
(bad)
jne
aam
scas
sub
inc
pop
lods
ja
ds
and
xchg
gs
imul
or
mov
out
idiv
xor
dec
xchg
(bad)
(bad)
fs
pop
in
cli
and
lods
and
imul
adc
adc
xor
xchg
fisttp
daa
xor
jmp
cmp
lods
pop
fs
cmc
mov
js
push
into
pop
xchg
push
fcom
cmp
xor
cmp
add
push
dec
and
cwde
adc
mov
jecxz
adc
sbb
pushf
or
cwde
add
sub
stc
jbe
in
loope
jnp
xchg
lods
gs
fsubr
or
in
call
inc
lea
je
ins
add
out
push
iret
sbb
or
mov
adc
cdq
pop
cdq
sub
stos
clc
lock
(bad)
retf
adc
xor
push
mov
and
cmp
dec
sbb
adc
stos
cmp
stos
or
jb
add
mov
add
popa
repnz
sbb
call
inc
mov
loopne
jmp
fild
je
cli
jae
cmp
popa
stc
push
mov
not
int3
push
movs
add
jge
dec
fcomp
push
test
xlat
dec
mov
aas
mov
loopne
jecxz
stc
cmp
popf
js
test
jns
sbb
inc
div
in
dec
sahf
fadd
jecxz
mov
cld
shl
mov
mov
mov
sub
stos
jecxz
xlat
jmp
cmp
adc
push
in
add
sbb
jge
lock
push
xchg
data16
or
lahf
test
inc
sbb
or
sub
(bad)
mov
xchg
daa
cmps
cmp
retf
adc
fdivr
adc
pop
pop
mov
(bad)
lods
ud0
dec
mov
aad
and
rcr
leave
add
cwde
cmp
aas
adc
sub
outs
cmp
add
xor
pusha
dec
adc
add
jmp
hlt
dec
jbe
(bad)
sahf
cmps
jge
ss
test
sbb
and
dec
push
test
sti
and
es
or
aad
das
rcl
xor
mov
stos
das
popf
jp
test
xchg
test
or
out
shr
(bad)
mov
out
push
sbb
mov
pop
adc
jmp
mov
xor
push
fstp
sub
sub
test
loope
icebp
repz
mov
dec
jno
int3
pop
xchg
add
ret
sar
in
cld
test
xor
dec
mov
pop
leave
fld
fimul
dec
jmp
mov
lods
(bad)
xor
mov
in
aam
cs
push
in
mov
shl
(bad)
mov
push
jo
(bad)
out
or
ds
je
cmp
out
fcomp
xlat
xchg
jge
xlat
aaa
test
mov
or
test
shr
jbe
or
cmc
(bad)
dec
lock
pop
repz
fcomp
and
ret
mov
ret
jle
mov
pop
out
icebp
xor
or
iret
sub
or
or
aad
repnz
add
add
rcl
mov
dec
add
push
cs
cwde
sub
pusha
sub
mov
add
jae
push
cmp
movs
fidiv
jp
push
dec
loop
sbb
leave
es
cs
push
in
idiv
aaa
fcmovnu
xchg
sbb
bound
jge
sbb
pusha
adc
mov
test
jl
pushf
mov
mov
mov
add
(bad)
repz
loope
pop
xchg
dec
cs
mov
es
dec
or
shl
mov
cmp
cmp
cmp
mov
cwde
and
mov
jge
mov
and
pop
xchg
imul
and
out
pop
mov
mov
lahf
lds
or
cdq
outs
mov
inc
mov
jne
xlat
fsubrp
shl
es
sub
adc
mov
out
mov
pop
and
mov
or
fiadd
mov
mov
cmps
rcl
iret
mov
lahf
das
stos
jb
pop
mov
fstp
cmp
dec
leave
shl
ja
mov
push
sbb
sub
shr
push
out
cmovo
cmp
je
fist
cmp
aam
repnz
cmps
into
out
xlat
cmp
cmp
fadd
xchg
in
in
cmc
int
or
(bad)
sbb
into
idiv
repnz
shl
in
sti
add
outs
push
push
cld
xchg
out
int
cwde
xchg
clc
dec
mov
pop
pop
xor
fistp
pusha
adc
repnz
dec
add
mov
push
hlt
jae
or
aam
outs
mov
jmp
adc
(bad)
push
mov
ss
cld
in
and
arpl
(bad)
retf
(bad)
out
imul
test
jp
in
sub
inc
mov
movs
push
xchg
xchg
xchg
xor
in
rcr
aaa
pop
icebp
enter
iret
movs
xchg
ins
or
jmp
fdiv
or
aad
pop
mov
mov
mov
inc
xchg
fstp
in
lock
cdq
cdq
int
cmp
test
push
imul
test
cmp
popf
call
push
xchg
adc
dec
ins
and
pop
jmp
cmp
pop
sub
in
mov
jle
push
lock
sub
inc
aam
lahf
pop
push
push
lds
mov
aad
or
sub
jo
lods
mov
imul
add
push
test
imul
fst
fstp
mov
not
cmp
inc
sub
stos
fcom
stos
and
into
dec
xchg
loopne
jg
cmp
pop
in
jb
xchg
cmp
push
(bad)
lds
cmps
and
repnz
jmp
loopne
jmp
cs
shl
outs
pop
mov
ds
jge
sbb
sub
jle
lock
cmp
push
sbb
aam
hlt
rol
mov
call
retf
loop
outs
or
das
push
ss
jmp
shl
mov
out
mov
cmp
and
and
pop
cmps
repz
shr
sbb
mov
cmp
imul
inc
loop
inc
mov
cmp
dec
lods
push
mov
jg
gs
in
mov
lea
icebp
jl
aam
xor
fs
stc
pop
fild
lock
jp
or
dec
loopne
push
add
mov
iret
mov
pop
and
or
shl
(bad)
hlt
fisttp
inc
push
ins
xlat
repz
mov
inc
adc
fmul
rol
repz
dec
ret
retf
aas
pop
shl
pushf
adc
adc
jb
daa
or
lods
cld
bound
pop
adc
or
push
adc
pop
xchg
ret
lods
or
mov
push
cld
xchg
dec
adc
cmp
mov
jb
and
test
pop
mov
push
cmp
scas
sahf
mov
aas
inc
lahf
movs
inc
mov
xor
cmp
push
pop
mov
jge
or
pop
or
es
out
sbb
imul
pop
(bad)
mov
pop
mov
add
pop
ja
mov
in
in
outs
js
cmp
fstp
xchg
loope
push
dec
lods
imul
retf
outs
(bad)
push
fnstcw
dec
imul
mov
jno
fbld
pop
push
int3
scas
dec
pop
dec
cdq
inc
(bad)
lods
dec
xchg
jmp
ja
inc
inc
je
fisttp
sahf
or
outs
mov
xlat
jae
jne
in
das
sub
nop
(bad)
dec
jle
fs
cdq
and
jbe
jnp
fld
adc
mov
outs
sub
pop
sub
pop
sbb
bound
mov
sbb
mov
shl
push
mov
daa
xchg
icebp
sbb
push
add
add
pushf
cdq
es
loop
pop
adc
add
out
fsubr
add
push
or
loop
aas
adc
lods
sbb
ret
and
mov
aam
test
xlat
mov
call
inc
mov
gs
(bad)
shr
mov
outs
in
cmp
fscale
aaa
in
pop
popa
xor
dec
ret
test
outs
mov
(bad)
loopne
mov
xchg
shl
pop
push
sbb
mov
push
fs
inc
(bad)
clc
movs
jecxz
in
mov
jecxz
outs
mov
fucom
fdiv
xor
xchg
dec
inc
rcl
sbb
nop
add
leave
adc
int
in
adc
mov
mov
int
dec
bound
gs
loop
lahf
mov
sar
fcom
leave
pop
in
add
xchg
ds
imul
jnp
push
jno
dec
ja
jnp
push
enter
dec
enter
(bad)
hlt
inc
(bad)
mov
repnz
and
je
or
(bad)
in
jbe
hlt
popf
repz
fidiv
cli
fisubr
movs
rol
xchg
and
pop
in
out
test
pop
mov
or
retf
mov
add
dec
pop
mov
ins
lods
or
lahf
adc
mov
mov
push
and
push
scas
push
stc
adc
adc
leave
fdivp
xchg
add
rol
je
in
iret
add
xchg
repnz
cli
or
sub
push
mov
addr16
jle
pop
ds
add
push
in
fist
dec
cmp
and
cmc
xchg
bsr
je
test
adc
add
jecxz
dec
sbb
cwde
add
hlt
inc
sahf
add
fcmovne
xlat
mov
retf
shr
test
dec
popa
inc
adc
icebp
adc
dec
ror
jnp
push
or
inc
or
mov
sbb
mov
push
les
rcr
js
mov
call
hlt
stos
(bad)
mov
xchg
gs
and
imul
and
cmp
ja
mov
cmps
scas
cwde
xor
push
lods
cmp
pop
or
dec
fimul
enter
jge
aad
mov
and
jno
sub
or
lds
call
mov
cwde
jne
xor
push
dec
or
cmp
push
or
ins
std
ror
test
retf
jae
ins
xchg
fcomp
test
cwde
pop
pushf
add
in
mov
loopne
or
xor
lds
cld
pop
or
mov
mov
iret
pop
or
sbb
out
int3
xor
bound
addr16
int3
shl
fidiv
push
dec
jmp
addr16
out
addr16
adc
xchg
push
das
cmc
sahf
sub
(bad)
out
not
sub
mov
std
shr
xor
push
retf
fisttp
mov
ret
jp
ss
int3
movs
push
mov
mov
sbb
mov
jb
inc
iret
(bad)
and
js
and
or
adc
cld
es
pop
inc
inc
imul
lods
sbb
jae
or
scas
popf
fsub
in
sub
dec
daa
mov
loopne
mov
mov
pusha
mov
add
not
cmps
ss
mov
pop
cmp
call
popf
cmp
ja
mov
aas
in
or
add
and
out
dec
sbb
push
cmps
out
aas
cmp
dec
imul
and
sbb
sub
xlat
stos
ror
inc
or
xchg
aam
loope
xor
add
pop
inc
jno
lods
(bad)
dec
lods
xor
pop
cmc
mov
mov
xchg
ins
mov
cmp
jo
fstp
fwait
cld
xor
shl
out
add
popa
mov
add
(bad)
popf
adc
repnz
pop
inc
mov
ins
sbb
jo
push
ret
(bad)
cmp
je
rol
mov
push
sub
popa
push
or
xor
out
imul
cld
test
xor
mov
(bad)
dec
retf
jae
jo
outs
jae
sbb
push
cmps
adc
add
add
jle
lock
xor
in
jg
je
out
adc
add
imul
sti
mov
mov
inc
push
mov
dec
fmul
loopne
inc
inc
nop
pop
ror
cmp
dec
pushf
dec
pop
sub
dec
and
rcl
push
sahf
and
cmp
fxch
mov
pop
jg
push
jge
call
cmps
adc
jmp
into
cmp
ds
jg
jbe
test
sahf
adc
cdq
mov
jmp
dec
stos
into
jne
shl
jmp
shr
daa
or
iret
lods
dec
and
pushf
sub
push
and
push
bound
xlat
int
add
mov
cdq
pop
xor
xchg
inc
dec
jns
popa
cmp
xchg
(bad)
hlt
fs
cmp
inc
mov
loope
in
push
cld
push
adc
ret
cmc
dec
fxch
pop
call
(bad)
repnz
in
out
mov
mov
adc
adc
fcomp
mov
pop
mov
push
add
adc
icebp
in
adc
or
and
je
sub
addr16
adc
dec
shr
scas
mov
lods
cmps
dec
out
jns
das
fild
mov
into
mov
pushf
inc
push
pop
sub
sar
dec
aam
inc
dec
ficomp
inc
jmp
(bad)
scas
ds
scas
cmps
add
clc
sub
cmp
loopne
sub
inc
and
mov
vsubpd
mov
xchg
or
push
mov
mov
aas
xchg
adc
jno
jp
mov
out
js
xor
in
mov
ret
fidivr
imul
aaa
and
scas
mov
adc
xlat
popa
iret
jo
inc
push
scas
movs
in
mov
shr
es
pusha
pusha
mul
in
(bad)
(bad)
cld
jg
xchg
mov
das
cmp
mov
je
loope
push
and
std
xchg
movs
not
fldenv
mov
test
jp
add
(bad)
lods
ja
scas
cmps
test
and
pop
pop
jbe
sub
pop
loope
jno
and
and
pop
ins
mov
or
jge
not
outs
retf
mov
fs
pop
ror
mov
adc
stos
xlat
sbb
jne
ret
or
(bad)
in
or
aam
mov
mov
adc
in
add
mov
push
into
cmps
xchg
fstp
xlat
xchg
pop
mov
xor
mov
loopne
inc
out
movs
pop
gs
jns
pushf
or
bound
mov
lds
mov
out
xchg
adc
movs
das
xor
cmp
dec
sub
mov
mov
cmp
push
inc
xchg
(bad)
loop
and
pop
das
ret
ins
push
jge
pop
mov
lock
(bad)
lock
mov
add
or
dec
mov
nop
repz
jmp
ret
jbe
xchg
xchg
cli
loop
adc
shl
fs
mov
cmp
out
push
adc
dec
int3
add
push
pop
pop
cdq
loopne
out
es
mov
mov
cmp
imul
add
sti
jbe
stos
sysenter
out
mov
xchg
ror
sub
mov
addr16
fidiv
mov
fcmovb
inc
push
in
push
sbb
cmp
sub
cmp
daa
es
or
inc
xor
loop
or
or
sub
xchg
dec
shl
leave
xchg
ja
mov
in
jmp
sbb
sub
inc
xchg
popf
inc
aam
bnd
shl
mov
xchg
inc
push
rol
bound
mov
out
xchg
sbb
mov
push
jecxz
lods
bound
hlt
push
push
loope
in
push
sbb
outs
rol
(bad)
dec
test
jge
nop
mov
xchg
leave
pushf
adc
(bad)
sub
inc
and
daa
xchg
dec
mov
adc
ret
sti
out
dec
pop
mov
xor
inc
push
test
out
adc
sbb
sahf
and
mov
es
mov
dec
retf
sbb
inc
jl
mov
jo
lock
mov
sti
sub
pop
xor
sti
cwde
mov
pop
sub
xchg
jmp
sub
xchg
jle
xor
retf
out
test
pop
xchg
sbb
test
xor
ret
jmp
sub
xchg
mov
test
std
push
int
call
or
or
(bad)
cmp
cmp
popf
(bad)
jns
pop
cmp
jp
js
inc
mov
inc
fwait
cmc
inc
xchg
shl
dec
leave
mov
mov
mov
xchg
shl
retf
cli
dec
pushf
out
push
mov
into
ja
sar
cmps
test
int
je
repz
push
hlt
cld
pop
xchg
aas
jmp
xor
cmp
imul
jmp
and
(bad)
push
into
push
popa
arpl
dec
rcr
outs
lahf
mov
sub
aaa
out
cmc
in
mov
into
jnp
fisub
in
mov
fnstsw
push
sub
ins
add
jmp
ficom
fidiv
cdq
enter
sub
xor
lds
sub
call
dec
bound
cmp
push
sahf
js
push
mov
cmp
xor
sahf
sti
adc
cmp
inc
jmp
ja
iret
repz
dec
test
and
or
lods
push
sbb
pop
call
xchg
test
sbb
adc
or
pop
in
pop
mov
dec
ds
mov
call
lock
sbb
fs
jmp
push
xor
cmp
jg
sub
jae
pushf
jge
and
xor
jb
leave
hlt
cmp
(bad)
push
mov
cmp
mov
or
pushf
in
fdivr
adc
jmp
xor
jns
sbb
js
cld
xor
dec
dec
cmc
iret
xchg
sar
mov
mov
inc
sti
push
hlt
mulps
rcr
(bad)
repnz
dec
mov
and
mov
mov
push
push
jmp
jne
scas
mov
mov
push
sti
loope
cmps
movs
inc
outs
fsub
lahf
aam
hlt
mov
mov
cmps
addr16
sbb
loop
shl
push
ds
push
imul
(bad)
shr
scas
jns
out
lock
sub
ins
ja
cmp
cwde
(bad)
dec
mov
and
xor
mov
push
and
icebp
or
retf
mov
in
adc
dec
addr16
iret
push
xchg
pushw
add
mov
pop
outs
xor
dec
les
fld
xor
add
cmp
loope
mov
or
push
mov
sbb
lahf
jae
adc
fwait
inc
xor
jmp
mov
xchg
mov
stc
sub
jb
cli
xchg
mov
mov
mov
cli
fdiv
adc
add
cdq
lds
xor
ds
retf
lods
mov
and
ins
push
jle
cmp
jb
addr16
xor
inc
cmp
add
and
or
inc
outs
call
and
inc
xor
pusha
mov
mov
push
in
lods
sbb
clc
dec
int
(bad)
xchg
push
push
sbb
xor
and
or
mov
pop
fs
aaa
adc
mov
cwde
into
add
cmps
push
(bad)
push
movd
xor
and
out
or
outs
scas
mov
cmp
or
es
ja
cmp
scas
(bad)
fbstp
addr16
arpl
ins
and
push
and
ins
cmp
stc
cli
cmp
icebp
add
xchg
data16
inc
dec
push
fcomi
inc
cmp
xlat
in
add
cmp
jae
jecxz
jmp
lea
adc
and
aam
in
jl
popf
xor
pop
sub
mov
(bad)
ror
popf
js
dec
test
mov
and
cli
sbb
push
push
mov
mov
add
retf
adc
popf
popf
mov
push
add
pop
sbb
and
aas
ja
xchg
out
enter
sub
cmp
nop
(bad)
(bad)
push
rcl
push
mov
mov
stc
imul
stos
mov
cdq
mov
das
and
sbb
mov
popf
mov
int
imul
cwde
ss
xchg
iret
test
int
cmp
out
mov
cdq
mov
std
pop
clc
jo
sbb
and
xor
cmps
add
(bad)
test
ins
hlt
(bad)
mov
dec
pop
and
shr
pop
xchg
jbe
mov
cmp
fs
lods
pop
pop
sbb
mov
enter
ret
aad
(bad)
mov
outs
push
pop
xor
cld
movs
movs
jnp
inc
stos
inc
or
adc
stos
hlt
sbb
and
mov
adc
push
pop
sub
xor
mov
lock
jmp
cmp
stos
dec
out
(bad)
rcr
add
mov
jge
xchg
pusha
imul
dec
jmp
rcr
push
ret
sbb
xchg
mov
retf
add
cs
cmp
in
cld
mov
cld
stc
mov
sbb
push
sbb
arpl
ins
xchg
sbb
xlat
inc
sti
lock
mov
sbb
fisub
or
pop
inc
jl
fmul
cmp
jnp
mov
jbe
jmp
cmp
and
dec
jb
gs
jp
push
xchg
pop
adc
add
add
push
mov
adc
mov
(bad)
cli
movs
cs
enter
xlat
nop
xchg
mov
mov
ins
dec
mov
stos
in
loop
push
ja
imul
ret
or
mov
ror
mov
test
cmps
jecxz
and
enter
fnstenv
inc
mov
lock
dec
in
(bad)
jmp
loope
xchg
aam
mov
push
retf
call
xor
cli
fcomp
xchg
shl
push
xor
stc
mov
sar
pop
jecxz
dec
and
lods
dec
inc
add
pop
xchg
popa
ja
data16
clc
in
inc
or
sub
or
cwde
ficom
cmp
push
mov
dec
cwde
xor
push
mov
inc
adc
xor
jo
inc
inc
jmp
xchg
adc
jge
hlt
arpl
push
jne
call
ins
loop
pop
scas
cs
jmp
lds
xor
inc
and
or
push
push
adc
jae
sbb
push
mov
loopne
cdq
out
jb
std
cmp
cmp
fiadd
inc
rcl
into
test
and
cli
jecxz
xor
or
push
add
sub
ret
outs
xchg
scas
add
push
jae
dec
das
add
push
xor
fisub
int3
ret
inc
push
fist
jecxz
pop
mov
add
in
add
add
aam
aas
jmp
(bad)
xor
iret
add
mov
cs
pop
cmp
popa
sti
bound
jge
or
mov
jecxz
lock
sbb
xor
fisub
cli
adc
and
pop
fisttp
xchg
enter
cmp
xor
data16
xor
push
inc
xor
add
dec
add
into
push
inc
push
push
mov
cld
mov
leave
dec
push
jle
repnz
pop
mov
push
mov
int
dec
jg
nop
dec
shl
push
cwde
(bad)
loop
mov
outs
jmp
repz
enter
xchg
cli
jmp
lahf
cs
xor
and
add
nop
enter
xor
(bad)
out
dec
cmp
mov
xchg
lods
mov
pop
ret
cdq
sub
sub
sbb
cmp
out
pop
dec
xor
aam
push
push
and
stos
pop
in
gs
cs
fst
test
adc
std
and
mov
les
inc
dec
jae
add
adc
in
imul
xchg
icebp
add
stos
jg
sub
stos
pop
dec
test
(bad)
jp
fidivr
outs
xlat
adc
shr
(bad)
aam
push
dec
jle
fwait
ret
cwde
ds
aad
and
in
fsub
popa
ror
(bad)
(bad)
xchg
stc
cmp
data16
adc
jg
mov
push
mov
cld
mov
ins
jno
xor
retf
mov
jg
sub
leave
jnp
(bad)
neg
arpl
div
gs
sbb
xchg
out
xlat
(bad)
dec
sbb
cld
cmc
jae
in
jo
and
jecxz
xchg
push
inc
push
inc
iret
push
sti
push
add
adc
sbb
cwde
xor
mov
pop
leave
inc
ret
push
add
push
adc
ret
add
out
int
mov
pusha
mov
cmp
inc
push
mov
mov
cmp
loopne
fiadd
stos
pop
adc
push
add
pop
lea
cmp
adc
sar
ret
call
data16
mov
scas
pop
cmp
in
std
lock
sbb
imul
jnp
mov
mov
movups
ja
pop
mov
xchg
aam
ss
lahf
test
mov
fwait
or
sahf
inc
sbb
mov
test
sbb
mov
jo
mov
xchg
daa
xchg
mov
inc
jle
je
xchg
push
jo
call
loop
xchg
outs
pop
mov
xchg
sbb
mov
xchg
mov
sbb
cmp
imul
inc
fstp
mov
out
out
pop
push
push
add
jnp
mov
dec
jl
push
xchg
call
push
jmp
mov
fild
mov
jecxz
xchg
and
xlat
cmc
mov
mov
jmp
fild
stc
inc
add
fwait
scas
add
mov
fwait
inc
sti
mov
repz
or
mov
cdq
std
push
cmp
jnp
and
(bad)
pop
sub
scas
(bad)
push
fisub
lods
mov
enter
inc
dec
stos
fistp
ins
ror
jo
and
cmp
mov
xchg
xchg
push
(bad)
jmp
adc
sub
cmp
add
push
fidiv
out
shr
test
sub
sti
popf
or
cwde
jb
cmp
hlt
(bad)
int3
sub
enter
lods
in
inc
cmp
sbb
xor
add
push
fnstsw
ficom
push
lahf
inc
and
xor
push
clc
in
in
(bad)
imul
movs
inc
mov
dec
and
or
xor
cmp
repz
inc
mov
ror
test
ror
pop
xchg
add
cmps
inc
push
lahf
aam
jmp
fiadd
mov
in
inc
cdq
fcomp
sbb
mov
aaa
call
xor
adc
fisubr
lock
es
shl
push
loop
dec
jecxz
movs
pop
pop
mov
xchg
adc
(bad)
inc
sub
ja
jo
aad
(bad)
dec
call
jbe
add
cmp
add
and
les
pop
std
(bad)
data16
fisttp
push
inc
dec
dec
out
pop
cmp
icebp
inc
popa
dec
cmp
mov
jp
fcom
das
cli
jmp
sbb
xor
mov
(bad)
fsub
js
fld
fcmovu
scas
or
stc
mov
ss
sbb
neg
fidivr
fwait
cmps
mov
jns
mov
add
inc
push
pop
mov
test
jbe
jnp
cmc
movs
mov
call
mov
jo
jg
repnz
popa
daa
inc
sub
out
loop
dec
out
adc
pop
jne
inc
out
push
pop
nop
push
add
in
pusha
or
xchg
jp
sbb
jge
push
popf
cmp
pop
rcl
mov
data16
out
push
out
fisubr
js
cs
xchg
lods
dec
test
cmp
add
mov
mov
in
mov
rcl
jecxz
js
or
jp
nop
lods
add
iret
call
cmps
add
arpl
pushf
sbb
jno
test
outs
or
sub
test
je
mov
xchg
and
adc
lahf
addr16
(bad)
mov
retf
mov
add
test
xchg
enter
lods
sub
test
xor
ss
call
cmps
dec
ja
and
stos
and
lods
out
or
xchg
loope
retf
push
sub
pop
ret
icebp
das
std
in
and
and
pop
ins
rsm
pop
int
adc
push
inc
pop
jnp
push
imul
rcr
icebp
jo
push
cmp
sar
or
rol
and
je
out
or
xchg
jle
push
ds
push
pop
sahf
enter
sub
sub
sbb
push
and
add
or
inc
in
enter
not
mov
clc
pop
cmp
imul
imul
nop
mov
into
and
sub
add
pop
mov
ins
stos
mov
inc
ins
test
mov
jmp
xlat
adc
inc
bound
jle
adc
push
mov
cmp
jecxz
fldcw
mov
and
cdq
or
das
int3
mov
adc
shr
mov
aam
outs
aaa
pop
or
inc
popf
mov
jg
test
mov
aaa
in
cmp
js
mov
aad
loope
mov
movs
std
fs
cmp
and
iret
sub
pop
repnz
jle
leave
push
dec
nop
scas
jle
loop
pop
aaa
xor
repz
mov
lods
(bad)
retf
pop
out
jmp
xchg
(bad)
fidiv
test
mov
adc
mov
sub
dec
fs
aas
sbb
fstp
jmp
or
dec
or
cmp
cmps
jmp
cmp
mov
mov
ret
pop
loopne
in
cmp
lock
inc
adc
mov
(bad)
stos
outs
add
mov
dec
pop
adc
lods
or
arpl
xor
ds
mov
push
pop
test
cmc
div
pop
mov
cmp
pusha
cld
in
scas
and
cmp
mov
mov
fisubr
xor
rol
(bad)
cld
add
add
ins
ror
rcr
xchg
or
sbb
jnp
sub
pop
push
lea
sub
iret
daa
pop
or
outs
inc
cmp
mov
inc
int
jmp
ja
add
imul
mov
test
jmp
(bad)
(bad)
ficomp
test
cmps
xchg
movs
add
inc
adc
inc
push
jno
mov
cli
push
pop
leave
iret
(bad)
pop
pop
stc
sbb
sbb
pop
out
or
dec
mov
cdq
pop
jg
mov
sahf
dec
xchg
aaa
retf
pop
mov
popa
cli
(bad)
rcl
sub
fisttp
xchg
xchg
pop
cs
lahf
cmp
and
push
in
push
push
pop
mov
adc
pop
test
add
int
pop
adc
mov
xor
inc
mov
mov
jb
clc
into
cmp
in
jno
mov
scas
mov
fisubr
cmps
ins
mov
cwde
dec
js
jp
repnz
xor
mov
icebp
sub
mov
jmp
push
ror
nop
pushf
and
sub
dec
scas
xlat
sbb
pop
in
sub
and
stos
sbb
dec
and
es
push
mov
pop
cmp
cmp
shl
inc
add
jb
xlat
jmp
add
int
jmp
shr
mov
sbb
mov
retf
in
addr16
or
sbb
sar
repz
inc
xor
pop
ds
pop
push
getsec
jl
shl
adc
jge
ret
clc
gs
xor
nop
jle
je
repz
aaa
pop
fbld
shr
mov
movs
cwde
fst
popf
push
and
sbb
in
out
sub
stos
inc
mov
dec
add
push
xor
xchg
pop
push
shr
cmp
cmp
pop
je
(bad)
pushf
and
xor
jle
out
stos
jo
fiadd
cwde
dec
nop
out
fst
cmc
(bad)
dec
arpl
push
mov
movs
out
mov
repnz
lahf
cld
fiadd
fcomp
loop
cmp
cmp
mov
or
sub
push
jp
cmp
mov
ds
add
rcl
ret
jne
add
push
ret
jns
cld
in
push
add
enter
pop
mov
aas
cs
sub
(bad)
mov
leave
dec
mov
pop
jae
fild
jno
fcmovb
call
sbb
cmps
movs
and
jle
fcomp
inc
test
je
(bad)
xchg
ja
or
lea
mov
popf
or
adc
gs
jge
dec
xchg
dec
sbb
mov
pop
pop
movs
xchg
inc
pop
pop
adc
add
imul
and
xor
popf
cld
xchg
xchg
adc
mov
adc
retf
sub
mov
fcmovu
ja
cmovb
mov
jmp
(bad)
out
and
sub
pop
and
aad
add
test
(bad)
stc
arpl
push
cwde
ror
cmovs
cld
je
mov
stos
call
mov
sbb
aam
dec
adc
in
retf
cmp
ret
and
dec
jge
or
rcl
sub
add
fsub
mov
jb
mov
repz
aaa
cs
movs
cwde
shl
lds
and
sub
cmp
call
cmp
mov
xchg
dec
icebp
pop
push
adc
repnz
loopne
ins
in
test
mov
(bad)
cmc
test
fstp
and
adc
add
sahf
scas
sbb
stc
jmp
lahf
jnp
push
mov
(bad)
call
addr16
dec
pop
iret
in
in
cmp
jmp
iret
jb
mov
pop
dec
idiv
inc
dec
inc
test
mov
mov
inc
dec
sar
imul
or
aas
xchg
out
add
xor
sbb
jns
xchg
xchg
scas
loopne
int
pop
out
pop
push
pop
(bad)
fwait
adc
push
dec
stos
popa
(bad)
dec
or
test
leave
adc
xor
(bad)
sbb
ins
pop
adc
sub
and
fcmovnbe
clc
mov
inc
scas
inc
cmp
adc
mov
lahf
mov
sub
add
ins
stos
std
push
sbb
movlhps
mov
push
cmp
loopne
mov
push
adc
fwait
inc
xor
mov
cmps
mov
cmp
retf
shr
mov
in
and
ret
jle
data16
and
add
cmc
shr
dec
dec
add
fdivr
sub
fwait
sbb
add
scas
(bad)
iret
cmps
clc
hlt
add
cmp
jo
jmp
sahf
push
scas
cdq
not
out
mov
adc
into
jle
pusha
aad
mov
push
jle
mov
push
(bad)
outs
push
pop
pop
pop
lods
fistp
fisubr
add
or
les
inc
sub
mov
es
pop
aaa
mov
dec
xchg
mov
add
or
jp
mov
adc
mov
repnz
inc
dec
dec
aad
fstp
pop
lock
cmc
push
aas
push
adc
fmul
outs
movs
dec
and
cmp
pop
sbb
std
iret
(bad)
mov
dec
fs
mov
pop
mov
push
or
sbb
or
sub
fnstsw
fwait
repz
and
mov
or
ins
in
mov
icebp
jge
hlt
lods
or
jb
fmul
push
jge
ins
adc
pop
pop
shl
push
adc
jle
mov
push
bound
shr
xor
xor
push
add
mov
mov
arpl
into
pop
jns
lahf
xchg
fs
movs
xchg
pushf
mov
cmps
sub
jmp
and
mov
ror
test
and
loope
fdiv
push
pop
dec
jo
sbb
popf
mov
fimul
sar
mov
add
mov
add
aaa
enter
mov
mov
xor
sbb
dec
push
fimul
push
addr16
pop
fisttp
jb
nop
es
ret
shl
data16
out
aad
test
jne
sbb
pop
xor
mov
out
jns
fcmovne
aad
sub
xor
lods
bnd
mov
mov
jl
xchg
jae
ins
ja
sub
mov
add
in
adc
jle
outs
enter
sar
inc
sbb
dec
cmp
mov
fsub
cwde
sbb
jno
or
mov
push
popa
sub
movs
adc
loope
pop
cmp
retf
push
sub
out
int3
nop
pop
add
mov
ds
imul
push
or
sti
jne
int
out
ret
or
fnsave
lods
clc
(bad)
loop
mov
mov
cmp
cmp
xor
lods
pop
mov
push
fdivr
in
pop
pop
nop
std
test
shl
xor
enter
js
jnp
test
sbb
call
xchg
cwde
or
or
enter
cmps
sub
test
inc
inc
loop
jo
mov
outs
leave
sbb
retf
std
out
push
jmp
push
xchg
add
and
leave
jb
jmp
icebp
xor
mov
retf
xor
lods
add
es
push
mov
sbb
por
mov
cmps
mov
imul
jge
jg
dec
xchg
dec
push
and
mov
iret
test
(bad)
cmp
ror
dec
stos
mov
mov
not
fsubr
int3
jp
jne
popf
sub
pop
push
int
imul
mov
in
cmps
fsub
scas
pusha
cli
jnp
mov
retf
mov
(bad)
adc
and
inc
mov
mov
lods
aad
rcl
dec
repnz
in
arpl
inc
ret
dec
adc
(bad)
iret
jecxz
int
pop
push
push
fisubr
daa
and
rcr
int
jb
es
and
jne
pop
adc
add
cmp
ds
add
enter
adc
push
sti
xor
ror
jle
mov
push
fldcw
mov
xchg
mov
ja
mov
mov
lea
cmp
add
cmps
jne
out
int
add
adc
call
mov
or
mov
daa
leave
push
fcmovbe
mov
bound
leave
pop
fxch
icebp
mov
addr16
push
push
sub
lock
pop
test
out
test
out
stos
adc
cmp
and
pop
bound
int
fcomp
jg
jo
sbb
ror
sahf
adc
or
xchg
(bad)
gs
in
xlat
mov
cmp
jmp
push
mov
loop
adc
cmc
and
scas
test
nop
xchg
fs
cmc
adc
jb
test
mov
push
call
iret
into
adc
jne
push
enter
jno
dec
sbb
xchg
fxch
sub
retf
jp
sti
imul
fcmovnb
cmp
cmc
std
popa
add
iret
pop
cld
dec
jmp
call
lahf
fld
mov
aad
jmp
call
rcr
jmp
inc
sbb
sbb
inc
ds
or
imul
imul
out
iret
pushf
pop
pop
and
fdiv
lahf
xor
xchg
leave
popa
dec
mov
xlat
imul
stc
inc
push
mov
inc
or
inc
out
dec
adc
mov
mov
ss
cmp
dec
mov
push
adc
mov
fisub
scas
pop
mov
and
mov
xchg
(bad)
inc
dec
(bad)
imul
jmp
gs
ret
xor
and
mov
lods
clc
popf
push
dec
jg
out
call
pop
ficomp
or
jmp
(bad)
xor
scas
mov
inc
mov
sub
xchg
ins
lds
xor
in
mov
xchg
imul
in
push
push
addr16
jno
sbb
loopne
jno
call
mov
xchg
xchg
rol
clc
aad
xor
jns
retf
sub
rcl
(bad)
les
enter
hlt
aam
lahf
jns
in
inc
mov
jne
xor
pop
shl
xchg
shl
sbb
jge
pop
and
cmp
pop
inc
je
adc
bound
cmp
mov
mov
xchg
fidivr
push
fsub
push
pop
fmul
push
test
or
mov
scas
xor
add
fs
sahf
add
mov
ins
jo
jp
data16
ret
pop
cmp
add
aam
sbb
fisub
jmp
jno
mov
into
in
xor
mov
out
sbb
fcom
mov
cmp
mov
cmps
push
cmp
pop
and
mov
cmp
xor
daa
dec
pcmpeqd
sub
pop
pop
sub
dec
push
xor
and
push
inc
cmc
ror
xchg
scas
bound
cmp
inc
xor
jnp
in
data16
ins
addr16
lods
jmp
and
call
scas
sub
cmp
and
cmp
xor
mov
fwait
iret
pop
xchg
mov
jge
jbe
repz
cmp
pop
adc
dec
jle
js
fsubr
sbb
fadd
jl
mov
xchg
dec
psubb
cmp
popfw
push
imul
bound
adc
and
push
cmc
push
jne
mov
cmp
jbe
or
pop
(bad)
cmp
mov
inc
xor
dec
or
cmp
mov
ror
sub
in
loope
jnp
mov
jg
mov
add
mov
or
sbb
imul
test
dec
push
or
inc
jnp
push
in
or
add
xor
addr16
cmp
movs
sbb
jg
(bad)
ret
pusha
loop
and
fidiv
mov
jge
ins
arpl
xor
rcr
cmp
xchg
cmps
(bad)
pop
push
mov
adc
cmps
mov
adc
xor
sbb
inc
sbb
and
xlat
and
push
adc
lea
jp
mov
cmp
popf
int
cmp
lock
pop
fdivrp
mov
dec
call
fucom
scas
fwait
lds
jne
out
mov
daa
hlt
mov
xlat
push
jl
mov
push
xchg
shl
pop
fcom
popf
ror
cli
or
je
push
arpl
ds
movs
add
das
fucomip
addr16
repz
add
fcmovnbe
jne
xor
movs
dec
inc
jl
lahf
sub
xchg
xchg
jge
and
popf
ds
out
xor
test
inc
push
sbb
push
cmp
inc
lods
pop
dec
sub
sar
setnp
fwait
cs
jmp
cwde
add
mov
mov
sub
in
jmp
pop
jle
movs
and
xor
or
hlt
add
fist
adc
push
(bad)
pop
adc
repnz
bound
adc
push
cdq
lahf
cmp
nop
adc
jl
lock
pop
outs
adc
mov
pop
pop
dec
idiv
out
imul
ds
add
sub
in
mov
stc
mov
jg
or
div
push
int
loopne
and
shl
leave
shr
push
xor
out
into
push
sbb
fmul
sub
movs
out
push
arpl
stos
popa
and
es
xor
push
xor
(bad)
bnd
push
outs
or
xor
adc
cmp
(bad)
cmp
cmp
inc
fcom
jecxz
pop
ins
jno
lock
mov
dec
and
xor
mov
adc
push
push
loopne
rcr
scas
mov
mov
push
sbb
rcl
call
ffreep
pop
lahf
fcomi
mov
cmp
test
outs
adc
jne
movs
adc
or
iret
into
pop
push
into
ror
jg
mov
push
pop
sub
sar
cdq
sti
inc
retf
mov
xchg
in
jo
movs
popa
test
xchg
mov
sti
jmp
popa
pop
mov
fmul
cmp
repnz
mov
xor
push
xor
push
test
and
mov
in
lds
stos
mov
add
mov
ins
ja
xlat
jge
ins
fld
sub
fs
add
ficom
xor
xchg
ficomp
scas
xchg
jp
leave
imul
out
xchg
cmc
pop
jp
movs
(bad)
arpl
(bad)
push
mov
inc
push
adc
test
repnz
retf
or
xor
out
aad
fcomp
aad
retf
shl
pop
pop
stos
push
jno
jae
pop
retf
xor
push
bnd
loopne
sub
or
xor
dec
(bad)
stc
test
mov
or
fidiv
inc
pop
icebp
and
jecxz
fimul
push
cmc
gs
fstp
fadd
adc
mov
push
adc
imul
imul
cmp
out
mov
fisttp
aas
and
or
lods
sbb
repnz
test
ja
fist
add
fimul
rcl
push
out
jge
xchg
ret
mov
mov
push
push
sub
xor
clc
cmps
imul
adc
jmp
jae
and
test
jp
repnz
fwait
cmp
jle
mov
mov
jp
pop
sub
inc
add
add
ss
ins
les
mov
jae
inc
jmp
les
out
js
scas
icebp
stos
mov
mov
out
neg
jne
ror
push
push
cli
enter
cld
adc
dec
mov
add
push
xchg
ret
cmp
mov
popa
jne
fs
std
mov
inc
inc
(bad)
(bad)
mov
lea
adc
pop
gs
div
sbb
fstp
xor
movs
pop
ss
pop
icebp
jp
jbe
dec
leave
sub
ins
pmullw
pop
outs
cwde
sbb
ret
mul
cdq
bound
popa
sbb
cmp
stos
dec
inc
jae
cmc
jl
pop
fs
lahf
cli
mov
std
ja
dec
enter
ds
les
(bad)
data16
data16
sti
scas
xchg
pop
fwait
outs
push
jbe
sbb
jae
mov
jne
aam
ss
push
push
aam
push
(bad)
pop
cmp
jmp
sbb
mov
sbb
js
aaa
in
inc
sub
xchg
jb
aad
push
hlt
retf
and
mov
das
cmps
in
(bad)
nop
mov
add
push
pusha
pushf
pop
xor
inc
mov
cmp
fs
mov
pop
push
movs
xor
push
pop
call
pop
rol
icebp
stos
pop
sub
xor
xchg
push
inc
xchg
and
imul
icebp
cmc
inc
sub
pop
dec
xchg
push
and
imul
push
into
test
sbb
pop
xchg
(bad)
mov
stos
dec
and
aaa
out
into
adc
or
retf
and
jbe
loopne
(bad)
inc
icebp
mov
add
test
jge
mov
(bad)
or
mov
sub
cs
mov
cmp
mov
push
movs
add
mov
pushf
call
loopne
cmps
in
jmp
sbb
outs
cmp
rol
aam
sbb
(bad)
sbb
xor
mov
retf
lds
dec
xor
jbe
loope
fimul
mov
cmp
pop
or
dec
jmp
sbb
mov
and
xlat
lahf
movs
add
mov
leave
rcr
sub
or
cdq
xchg
movs
bound
(bad)
movq
lock
lds
mov
push
clc
loop
push
pop
push
add
dec
mov
dec
pop
push
push
jno
aam
stc
pushf
dec
push
cmp
arpl
adc
xor
cdq
shl
inc
ror
cmp
repz
repnz
cli
and
in
(bad)
in
repnz
cmps
and
and
cmp
dec
push
clc
jl
arpl
mov
ret
std
imul
push
movs
int3
mov
int3
xor
mov
es
mov
gs
sub
ficomp
sub
rol
jg
jo
or
xor
mov
pop
outs
or
cs
fisttp
shr
fs
jns
std
dec
fwait
adc
xlat
sar
popa
in
add
lds
out
inc
xchg
or
dec
dec
daa
add
mov
imul
cmp
cmp
cmps
cli
and
cwde
nop
in
push
shl
cmp
xor
jne
dec
ins
mov
(bad)
mov
je
movs
xor
cmp
jge
(bad)
sub
or
cs
adc
or
ins
mov
or
pop
adc
mov
ds
fisub
movs
sbb
jge
imul
enter
xchg
add
push
mov
jle
xor
sub
addr16
add
adc
not
sbb
mov
sbb
lds
sahf
cmp
iret
out
mov
or
shl
sar
push
cmc
mov
popf
xchg
and
inc
imul
inc
push
cmp
dec
add
cmp
mov
mov
retf
or
xchg
cmp
mov
addr16
cmp
clc
mov
mov
fwait
out
retf
inc
pop
xor
ret
setle
je
xchg
xor
push
or
add
test
fdiv
(bad)
lds
(bad)
stc
mov
add
mov
xor
push
inc
xchg
lods
mov
out
push
int3
shr
fiadd
and
pop
xor
icebp
jp
das
je
inc
call
fstp
inc
shl
icebp
nop
sbb
push
clc
in
xor
add
cld
shl
inc
(bad)
std
das
pop
movs
mov
sti
push
mov
vmaxsd
add
pop
mov
mov
sbb
push
jmp
mov
pop
jnp
pop
aam
dec
mov
inc
popf
mov
(bad)
data16
scas
mov
adc
loope
add
mov
ror
jp
sub
scas
ds
fst
pop
adc
test
adc
mov
xor
push
hlt
mov
lods
pushf
stos
cwde
pushf
xor
mov
adc
push
fucom
das
push
pop
outs
shr
nop
add
push
sbb
xchg
in
jle
in
test
mov
mov
ss
fcomp
mov
mov
mov
test
adc
aad
sahf
sub
jp
leave
imul
sti
int
into
add
xor
inc
je
fdiv
pop
sub
push
add
test
cmp
out
fs
or
push
mov
ret
push
loopne
aam
shl
inc
pop
lsl
imul
mov
dec
adc
adc
pop
(bad)
sar
call
mov
repz
pop
sbb
cmc
add
mov
jle
and
loop
add
cld
aam
movs
arpl
add
xchg
lock
cmps
ror
aaa
mov
jl
sbb
scas
jmp
lahf
inc
cmp
inc
push
not
fimul
adc
mov
push
mov
hlt
int3
fidiv
pop
pop
in
fistp
call
jnp
inc
mov
adc
jg
call
stos
test
mov
retf
cmps
adc
retf
add
popa
test
sub
rol
pop
xlat
shr
sub
loopne
cmp
add
xchg
pop
out
mov
cmp
adc
xchg
sbb
cdq
jle
ins
dec
inc
jne
pop
and
mov
shl
mov
xor
outs
ret
sar
inc
or
dec
or
jb
inc
icebp
por
xchg
out
retf
inc
mov
(bad)
sti
mov
mov
jmp
jo
movs
lds
jmp
push
mov
xchg
mov
mov
adc
jmp
syscall
push
jg
and
push
mov
mov
pop
das
sub
jno
fdiv
stos
test
mov
ret
jmp
ss
mov
inc
xchg
pusha
shl
adc
or
push
scas
fldenv
(bad)
hlt
clc
mov
dec
mov
fadd
pop
xor
sub
mov
and
pop
cmp
dec
jnp
popf
jp
ss
or
cli
adc
ins
cli
scas
jne
xchg
popa
pop
pop
into
mov
sub
sbb
cld
(bad)
je
add
fcomi
int
ret
das
mov
(bad)
mov
sub
dec
retf
jns
shr
out
aad
adc
les
xchg
push
or
push
gs
jp
stos
push
or
inc
(bad)
hlt
gs
out
in
loope
test
fwait
shr
imul
ret
jns
test
imul
(bad)
lods
jmp
into
xsaveopt
lea
leave
jne
mov
or
sbb
adc
jmp
jle
cmp
jl
sub
sub
fstp
mov
ret
xor
ins
fs
xchg
cmp
mov
(bad)
or
(bad)
pop
ja
jnp
stc
cwde
or
add
ins
hlt
in
mov
adc
bound
inc
and
add
xchg
rcl
ins
adc
sub
pop
dec
inc
(bad)
xchg
push
jle
pop
mov
outs
ds
mov
movs
ret
lods
jmp
inc
mov
mov
add
dec
add
(bad)
stos
sub
jge
mov
(bad)
adc
jbe
mov
ds
xlat
ja
adc
(bad)
mov
cmc
fnsave
dec
popa
jno
or
push
jl
int
pavgw
and
movs
dec
mov
popf
pop
popf
test
call
jne
push
adc
inc
outs
xchg
xor
ss
cmp
pusha
jmp
ret
jmp
and
cmp
push
inc
pop
cmp
pop
out
add
fnstsw
stos
sub
int
out
mov
jmp
adc
xchg
out
mov
leave
xchg
xchg
retf
fwait
aaa
shr
aad
and
mov
lods
xchg
pcmpgtw
xchg
(bad)
jecxz
push
push
aad
pop
jbe
jle
stc
mov
adc
add
jmp
call
jno
mov
dec
xor
repz
xor
(bad)
leave
dec
test
inc
add
xor
mov
mov
ja
jnp
jmp
adc
in
xor
icebp
add
int3
iret
enter
sar
in
fild
jge
in
scas
bound
xor
ss
mov
fcom
adc
and
pusha
(bad)
aad
adc
sti
push
call
jmp
das
or
add
aaa
mov
jb
stos
aaa
inc
mov
loopne
mov
push
adc
push
sbb
mov
stos
pop
push
ror
push
jne
adc
aad
sub
lods
stos
push
jae
mov
mov
adc
sub
popf
dec
sahf
mov
jae
int3
rcr
add
hlt
hlt
dec
fwait
out
mov
das
fnstsw
aad
stos
xchg
pop
inc
cmp
mov
cmp
ins
js
dec
push
adc
int
cmp
dec
mov
cmc
fisttp
shl
das
push
popa
pop
dec
xor
cmp
pop
add
(bad)
xchg
sub
jg
daa
jl
in
push
lock
dec
jge
hlt
(bad)
cld
mov
mov
xor
pop
ss
jmp
ret
push
mov
popf
cmp
mov
ror
cmp
aas
cmps
xchg
inc
pop
cmps
ficomp
daa
mov
jne
loope
and
sub
cmp
dec
sbb
push
cwde
addr16
and
inc
cli
jo
je
adc
pop
push
sub
push
shl
dec
jp
add
mov
cmp
xor
push
mov
imul
cmp
imul
movs
lds
outs
push
xchg
cmp
mov
xchg
and
xor
les
mov
loopne
sub
or
setae
shl
xor
sbb
ret
jbe
add
retf
add
enter
mov
cli
sbb
sub
leave
in
std
and
ins
into
xchg
dec
push
cdq
lea
adc
xchg
xor
movs
pushaw
mov
(bad)
idiv
in
push
jle
push
pop
sahf
push
cmp
or
scas
cmp
rcr
jo
sbb
shl
cmp
sar
dec
mov
repnz
cmp
xchg
jns
sub
dec
je
bound
or
loope
or
xchg
inc
jmp
shl
mov
fist
nop
rcr
bnd
ss
loopne
lock
out
jo
das
(bad)
inc
dec
sar
int3
mov
mov
mov
and
out
test
fstp
pop
retf
scas
pop
jo
jmp
fadd
adc
pop
push
in
mov
pop
add
pushf
imul
addr16
mov
jno
ja
scas
adc
out
mov
sub
mov
jecxz
jmp
push
iret
push
inc
push
fiadd
push
je
in
daa
adc
push
sub
es
mov
xchg
jne
hlt
and
mov
dec
dec
sbb
push
ret
aam
dec
(bad)
(bad)
(bad)
fs
rol
mov
cli
fadd
cs
test
or
or
or
mov
add
push
mov
imul
test
(bad)
movs
xchg
xchg
out
adc
push
not
ja
pop
fstp
or
or
add
call
retf
jnp
das
stos
fs
ss
mov
loop
push
inc
fmul
fcomp
(bad)
(bad)
out
mov
(bad)
(bad)
call
leave
scas
pop
fnsave
fwait
nop
mov
cdq
sbb
imul
push
mov
mov
sub
call
ret
inc
jmp
adc
dec
mov
cmc
test
rcl
and
pop
jecxz
adc
(bad)
mov
sub
outs
sbb
mul
mov
sub
movs
xor
fbld
add
sti
sub
das
xor
push
sti
xor
iret
xor
shl
std
nop
sti
mov
fbld
ds
jge
jns
xchg
jnp
das
mov
cwde
loop
lock
pop
jb
sub
js
je
mov
ficomp
movs
push
in
xchg
inc
movs
xchg
sti
scas
add
movs
out
xor
hlt
push
loop
jle
push
add
sbb
cmp
xchg
idiv
outs
fadd
and
lods
inc
shl
out
shl
scas
dec
repz
rol
enter
mov
jb
fucomp
ins
ret
push
(bad)
dec
add
xor
icebp
pusha
mov
or
pop
sbb
cmp
loop
scas
xchg
xor
mov
xchg
add
leave
out
jno
jg
icebp
dec
(bad)
pop
inc
retf
push
es
aad
loope
sahf
fistp
cmp
ds
lea
xchg
loopne
xchg
mov
lahf
pop
sbb
fild
jmp
adc
inc
movs
out
jp
dec
pop
pop
in
adc
push
xor
out
xchg
inc
dec
push
push
mov
mov
cmps
inc
pop
pop
imul
xor
push
xor
cmc
pushf
lods
cli
fidivr
add
xor
and
and
jne
iret
call
jo
inc
cwde
out
call
push
and
cmp
fs
aad
(bad)
out
mov
test
ds
bnd
add
or
jmp
push
push
pop
lods
mov
sub
sbb
pop
aaa
lea
aam
inc
mov
or
push
repnz
push
lods
pop
adc
and
mov
xor
sar
inc
pushf
and
pop
in
sub
rcr
mov
sub
jbe
or
test
jge
fiadd
hlt
add
adc
(bad)
(bad)
mov
xor
sbb
movs
jge
cmps
sub
pop
popa
cmp
ins
sub
pop
jle
jmp
inc
fwait
test
sbb
cmp
xor
inc
or
sbb
mov
inc
lahf
cmp
ficom
push
xchg
adc
stos
daa
sbb
cwde
repz
push
sbb
push
xor
mov
js
in
bound
ror
mov
aad
jecxz
adc
mov
inc
jnp
sub
or
aaa
scas
div
(bad)
lock
inc
xor
push
clc
mov
sbb
mov
sar
fucomi
das
ss
stc
push
daa
or
movs
bound
test
adc
popf
stos
jns
out
aaa
in
rcl
movs
xor
jns
das
push
mov
dec
mov
adc
ret
add
sbb
jbe
imul
rcl
daa
pop
das
(bad)
jnp
ss
pop
jb
jns
cmp
jns
leave
jb
adc
cli
pop
shr
out
fstp
jle
mov
pop
and
ret
in
in
daa
jnp
aaa
mov
(bad)
popa
sti
sar
inc
imul
mov
xchg
test
xchg
pop
in
xchg
mov
mov
push
in
das
test
ss
pop
rep
jns
jns
das
xor
movs
aas
or
ins
pop
cmp
sbb
or
xchg
fs
shl
in
cmp
popa
mov
jns
mov
pop
inc
sub
adc
mov
or
fucompp
call
mov
add
les
nop
add
cmp
push
ins
xor
and
jmp
add
scas
lahf
pop
ins
pop
sahf
je
imul
out
std
xchg
hlt
and
lock
lea
test
pop
inc
sub
sar
add
sbb
in
fst
(bad)
nop
add
cmp
xor
test
cwde
mov
in
xchg
into
push
sbb
adc
cmp
push
xchg
enter
push
daa
retf
dec
or
or
jae
xchg
and
shl
stos
mov
lods
mov
sbb
mov
in
jmp
(bad)
rcr
xchg
mov
jmp
inc
jne
pop
faddp
call
adc
dec
idiv
popa
aad
push
call
mov
or
or
cmp
cmc
fcomp
test
and
jmp
push
push
nop
or
aam
pushf
cli
enter
jno
sbb
inc
add
dec
movs
xchg
push
mov
sti
dec
mov
gs
mov
dec
push
mov
inc
std
dec
(bad)
dec
scas
enter
jmp
push
sbb
(bad)
fistp
adc
sbb
pop
(bad)
mov
mov
dec
inc
mov
jmp
pop
and
ins
sub
int3
ror
ja
add
adc
ja
fdivr
pop
cs
push
mov
dec
cdq
dec
in
sbb
aad
xor
fnsetpm(287
aad
cmc
sahf
lods
jo
mov
mov
pop
pop
jmp
shr
(bad)
(bad)
or
sti
xchg
add
cmp
sti
fstp
out
pop
rcr
or
std
push
cld
dec
mov
inc
dec
stc
and
or
or
lahf
push
movs
dec
ret
push
enter
div
xor
jp
retf
lahf
(bad)
xchg
jmp
fwait
dec
clc
dec
outs
sub
xchg
jl
in
cli
push
outs
sub
xor
dec
ins
inc
fist
add
rol
inc
mov
pop
loope
pop
and
dec
fst
imul
neg
jp
dec
inc
or
and
xor
iret
mov
(bad)
or
rcr
sti
or
mov
add
dec
mov
jl
mov
lds
mov
ins
sub
in
fcomp
test
mov
cld
mov
xchg
add
pop
sub
push
xlat
outs
add
xchg
pop
sub
sbb
pusha
popa
jmp
int3
cmp
adc
jge
bnd
lods
xor
xchg
cmp
repz
test
xchg
popf
push
jmp
jle
mov
mov
jnp
inc
pushf
mov
fisubr
mov
push
pushf
xchg
mov
xlat
adc
mov
lods
gs
cwde
jle
les
sbb
rol
cmp
outs
push
fsubr
test
pop
mov
pop
dec
cld
sub
imul
adc
xchg
mov
and
jg
aas
(bad)
and
fcmove
inc
push
or
jo
in
or
dec
ins
stc
mov
mov
mov
test
xchg
test
cmp
loop
and
lods
stos
out
xchg
cwde
xor
xchg
je
nop
jb
dec
fdivr
add
das
mov
pop
sub
js
or
cli
push
mov
pop
push
mov
sbb
pop
cdq
sub
loopne
mov
call
scas
rol
or
and
sbb
outs
icebp
and
adc
stc
out
das
jb
inc
les
mov
push
mov
xor
neg
loope
push
jbe
pop
mov
pop
fisttp
lods
aaa
and
mov
push
enter
jae
inc
push
jb
enter
loope
stc
icebp
adc
push
mov
cmp
xchg
std
enter
out
cdq
jmp
push
shl
mov
aaa
imul
xchg
push
jle
pop
pop
inc
cmp
jmp
dec
pop
pop
push
sub
outs
jne
imul
dec
icebp
mov
jno
mov
jnp
jmp
popf
cwde
add
xchg
ja
cmp
cmp
jmp
sbb
nop
(bad)
loope
fs
and
push
rol
fld
or
jecxz
mov
enter
xor
stc
fmul
pop
aas
out
push
xor
xor
aad
mov
jns
jp
adc
in
xor
out
in
xor
xor
sahf
and
add
ins
repnz
(bad)
dec
sbb
(bad)
xchg
jno
stos
push
inc
add
rol
mov
sub
pop
(bad)
xlat
jle
test
scas
js
je
pop
fsubp
jns
xchg
cmp
pop
mov
rcl
or
jmp
xor
pop
add
push
jo
das
icebp
sub
jns
jmp
std
(bad)
(bad)
push
int3
xchg
sbb
outs
ins
ins
ficom
dec
dec
push
int
push
rol
inc
mov
dec
dec
in
mov
jl
sub
mov
adc
sub
stc
dec
mov
fstp
jecxz
nop
sbb
out
out
cmps
mov
shl
clc
cli
iret
(bad)
lock
data16
retf
retf
jne
lock
xchg
add
dec
fistp
dec
push
mul
mov
mov
jle
dec
xchg
rcr
scas
inc
pop
stos
adc
cdq
jmp
loope
pop
push
pop
inc
pop
(bad)
aaa
adc
leave
or
mov
dec
mov
les
outs
pop
icebp
ret
cli
out
call
out
gs
fs
jge
rcr
cmp
clc
movs
outs
pop
ffreep
adc
ss
out
retf
imul
jmp
fistp
(bad)
sbb
(bad)
popa
pushf
cmc
cmp
push
jns
out
mov
sub
mov
lahf
mov
inc
ret
mov
dec
inc
retf
mov
pop
jmp
retf
in
in
xor
xchg
cld
leave
xchg
jge
mov
jg
cmp
not
rcr
rcr
jo
es
imul
add
mov
sub
sub
cli
leave
ficom
jbe
retf
sar
fsub
mov
in
test
mov
mov
jns
mov
mov
xor
mov
test
and
pop
dec
es
push
sbb
int
in
push
(bad)
fs
js
imul
addr16
or
mov
pop
cmc
(bad)
data16
rcl
mov
call
test
(bad)
aad
mov
xchg
retf
xchg
inc
mov
sub
in
cmp
sbb
jge
aaa
xchg
scas
retf
mov
add
movs
hlt
jbe
jae
aad
div
mov
pop
sub
sub
hlt
lahf
(bad)
mov
inc
adc
push
mov
or
retf
adc
loop
pushf
movs
iret
dec
lock
enter
inc
mov
push
imul
sub
ins
cld
fadd
mov
clc
sbb
outs
rcl
(bad)
sub
dec
adc
cmp
shl
loopne
sub
imul
pop
and
jecxz
sbb
loop
inc
jmp
adc
jno
or
ins
xor
add
addr16
push
gs
aam
jl
jnp
mov
sub
movs
cmp
jecxz
inc
dec
imul
dec
mov
outs
mov
ss
test
cmp
cmp
push
sbb
xchg
(bad)
mov
std
add
add
mov
lock
sub
sub
mov
leave
jbe
mov
mov
and
sti
sub
sbb
retf
aaa
push
pop
in
pop
sbb
xchg
ror
iret
mov
je
jmp
sub
repnz
xchg
(bad)
cmp
and
push
or
call
scas
and
sub
test
push
push
or
mov
push
push
scas
pushf
sbb
shl
ja
cmc
(bad)
fld
outs
add
(bad)
xchg
sbb
adc
fist
hlt
out
push
jg
push
push
add
push
scas
inc
inc
movs
sbb
add
cs
inc
out
cmp
cmp
cmp
retf
adc
sbb
shl
enter
xor
push
sahf
jbe
in
add
mov
(bad)
xor
pop
xor
fild
ja
in
cmp
dec
(bad)
xor
in
ss
fcom
adc
inc
adc
xor
addr16
iret
out
rol
sbb
dec
and
js
ret
push
push
pop
lds
mov
fwait
imul
jmp
push
and
mov
aam
aam
ja
add
jno
dec
(bad)
sti
daa
(bad)
xlat
pop
mov
adc
pop
push
mov
loope
and
jbe
adc
scas
ins
pop
cmp
sti
movs
add
add
clc
add
cmp
(bad)
cmps
cmp
sub
pop
xor
pop
rol
xchg
jge
lods
rcr
call
ins
mov
xor
xchg
mov
push
jbe
iret
push
aaa
xor
je
bound
das
mov
imul
pop
jg
cli
stos
sti
imul
ins
dec
sbb
pop
or
popf
jnp
fs
xchg
loope
push
loopne
xchg
rcr
loope
and
sub
jmp
repnz
aam
fs
lods
test
inc
int3
dec
scas
dec
push
jmp
push
aad
inc
int3
js
pop
stos
jmp
add
push
fsub
inc
pop
ja
outs
movs
push
inc
ror
jmp
pop
test
ret
cli
rcr
das
pop
fadd
stos
jmp
sti
sbb
fld
stos
retf
(bad)
cmp
sbb
jmp
(bad)
pop
ror
lods
in
jl
popf
out
test
xchg
cmp
leave
push
(bad)
(bad)
aam
test
sbb
imul
xchg
jo
sub
popa
sbb
jo
jg
xchg
jmp
shl
adc
fsubr
int
fucomi
jge
scas
sahf
inc
mov
xchg
iret
scas
pop
cmps
scas
aad
or
and
or
dec
xor
jl
(bad)
adc
adc
push
fs
or
or
mov
fmul
mov
inc
dec
in
out
sbb
jge
lock
or
sub
xchg
xchg
sbb
nop
or
jno
and
enter
shr
xlat
je
test
sub
push
mov
lods
cmp
mov
test
jle
stos
adc
fsubr
pop
mov
inc
or
pop
push
mov
adc
dec
sbb
dec
ins
adc
iret
jg
pop
hlt
push
xchg
jmp
sbb
or
xor
pop
jp
sbb
pop
aad
fs
fld
hlt
lock
mov
pusha
dec
clc
mov
aad
gs
test
rcr
ins
mov
out
cmp
adc
ror
nop
add
lea
hlt
call
dec
cmp
inc
push
add
xchg
(bad)
movs
sub
or
loope
(bad)
cwde
stos
push
sbb
fcom
out
test
repnz
or
sub
fwait
mov
dec
add
aas
dec
mov
fdivr
mov
push
cli
loop
push
int3
inc
outs
mov
cmp
push
daa
out
add
cmps
xchg
pop
cmps
inc
xchg
sbb
cmps
sub
ficomp
mov
pop
or
and
bound
or
push
daa
xchg
or
jmp
and
or
les
call
adc
mov
mov
rol
and
jb
mov
xchg
push
mov
sbb
test
sbb
das
jmp
shr
shl
outs
retf
lock
dec
leave
pushf
sub
call
jg
inc
jle
pop
lahf
jl
sti
jae
mov
xchg
test
pop
(bad)
pop
fldenv
mov
sahf
push
mov
pop
or
ret
sub
add
cs
out
ds
mov
mov
lea
neg
pop
sahf
mov
imul
in
cwde
jne
in
fldenv
adc
imul
jg
pop
movs
lock
icebp
je
mov
rcr
imul
push
mov
inc
popa
mov
adc
jno
sti
cdq
pop
add
xchg
ror
mov
dec
setge
xchg
inc
sti
inc
(bad)
sahf
cmp
fstp
lods
movs
pushf
dec
aad
cmp
mov
xor
fisubr
add
mov
popf
push
addr16
dec
lods
mov
cmp
sahf
loopne
std
xchg
mov
sbb
push
in
mov
pop
ror
sbb
dec
pop
dec
icebp
cmp
mov
cli
test
(bad)
addr16
xchg
mov
push
cmc
lods
es
(bad)
icebp
mov
jmp
xor
xor
fs
mov
arpl
push
mov
sbb
or
pop
inc
out
and
mov
mov
xor
ffree
fstp
ss
lock
repnz
out
or
ret
dec
popf
int3
sub
or
jbe
or
mov
inc
mov
bound
mov
ja
or
inc
add
or
xchg
scas
mov
call
mul
popa
adc
mul
push
push
adc
or
mov
cmp
push
cmp
or
je
shl
nop
sbb
add
in
cmp
adc
inc
jecxz
mov
mov
mov
pop
dec
in
jl
cmp
xor
inc
cld
ror
cmp
arpl
ficom
adc
pop
inc
xchg
jae
les
mov
inc
sub
dec
nop
pop
jg
xchg
in
movs
xchg
and
xor
cmps
pusha
jae
das
(bad)
jmp
in
pop
je
aas
dec
std
adc
inc
pop
cmp
sub
inc
test
lods
pop
and
aas
das
xchg
dec
test
imul
adc
inc
adc
jmp
out
out
int
xchg
add
int3
jmp
mov
(bad)
addr16
stos
dec
pushf
push
ffree
jle
pop
sub
in
retf
ins
xor
add
jp
adc
aaa
sub
or
pavgw
mov
and
ror
cmp
and
cmp
pop
cld
adc
or
mov
data16
ins
popf
out
stos
jg
hlt
jge
repnz
rcl
mov
jne
mov
push
jmp
dec
sub
or
out
inc
ret
and
mov
outs
mov
cmp
nop
cdq
xor
dec
inc
mov
cmp
int
adc
add
loop
push
inc
cmp
mov
ins
inc
sbb
je
iret
dec
sbb
jp
cmp
out
push
mov
ds
jno
sti
les
jmp
or
sub
push
pop
add
icebp
sbb
lods
mov
cli
mov
jle
xchg
mov
addr16
fist
aad
dec
rcl
push
or
daa
push
or
or
push
sub
pop
std
cmovs
mov
popf
sbb
fcmovnu
jne
and
je
push
fs
ret
loope
lods
xlat
into
std
gs
mov
test
adc
inc
leave
ins
add
mov
(bad)
nop
push
retf
pop
cmp
retf
fsub
add
into
xchg
stc
jb
pop
in
mul
pop
mov
stc
xor
std
out
in
hlt
aad
out
sahf
adc
leave
and
inc
movs
in
and
push
xor
lds
fisttp
cmp
fsub
call
call
popf
loope
in
dec
push
mov
jne
movs
xchg
mov
lock
ins
lea
and
xchg
xor
lock
call
push
inc
test
ffree
out
add
shr
out
mov
xchg
jecxz
test
daa
adc
iret
push
add
popf
add
mov
test
aad
or
mov
inc
mov
fist
dec
in
jl
ds
cmp
loop
mov
imul
pop
cmp
out
push
loopne
pop
out
movs
push
cli
push
pop
stos
out
ja
mov
mov
jbe
jl
fdivr
pop
test
add
icebp
ds
jge
cmp
xchg
cmp
ins
or
inc
inc
call
pop
mov
pusha
enter
jnp
cmp
iret
sbb
das
fdivr
cmc
mov
push
and
rcr
int
push
jp
sti
out
scas
inc
fdivr
or
mov
mov
inc
add
mov
fs
xchg
inc
imul
cmp
inc
sar
jb
xor
dec
or
test
dec
sub
clc
jl
cmp
scas
sub
fsub
push
or
pop
jns
cwde
jo
sub
into
adc
and
pop
pop
loope
nop
jno
sar
out
add
daa
inc
xchg
(bad)
sti
aas
ret
cld
jg
dec
inc
imul
je
add
xchg
cmp
pop
dec
push
pusha
xor
pop
les
inc
in
out
jne
iret
add
xchg
in
cmp
cmp
push
xchg
rcl
dec
data16
rol
out
or
in
loop
push
inc
mov
or
mov
ins
std
popa
in
fisttp
adc
or
push
and
push
push
and
ror
ror
dec
mov
jecxz
test
nop
jmp
out
int
cmps
push
fwait
outs
sub
mov
ds
dec
in
jmp
out
cmp
push
sub
mov
mov
sbb
addr16
mov
shr
fstp
or
sub
jp
scas
jb
push
test
ret
or
aaa
push
sbb
ins
adc
cmps
fs
lods
aaa
call
inc
sbb
xor
dec
sahf
add
ret
xor
jmp
mov
nop
and
add
xor
std
pop
dec
repz
push
aaa
shr
or
inc
mov
xchg
test
leave
inc
jp
aaa
fsubrp
arpl
repnz
jecxz
retf
sbb
xchg
push
sbb
arpl
adc
sub
data16
call
inc
ins
jne
jmp
dec
inc
lds
xchg
nop
fwait
push
daa
mov
stos
inc
mov
jmp
xchg
aam
test
lods
arpl
sbb
lds
dec
sbb
and
addr16
repnz
sub
lahf
pop
dec
xor
int
mov
es
cmps
xor
jmp
clc
adc
pop
mov
or
jle
push
mov
ss
mov
push
lods
push
mov
or
je
xchg
bound
inc
lock
in
fwait
hlt
pop
mov
sahf
push
xlat
dec
jb
inc
xchg
sub
dec
icebp
or
sti
rol
int3
push
hlt
xchg
call
out
pop
jnp
dec
push
shr
loopne
test
mov
or
xchg
sar
inc
add
mov
xchg
(bad)
fsubrp
stc
lock
dec
dec
shl
cli
loope
cmp
aaa
test
dec
loope
in
rcl
lods
(bad)
dec
sbb
pop
out
fsubr
sar
js
or
shr
fstp
loope
mov
cwde
jb
dec
pop
push
add
pop
faddp
mov
or
rcr
fwait
ss
loope
fwait
nop
stos
xor
fsubr
sbb
les
jge
jl
adc
mov
ret
loop
mov
jp
mov
jo
daa
lods
popf
or
mov
fild
dec
mov
ds
std
movs
hlt
sbb
fnsave
add
or
xor
cwde
jle
and
mov
push
out
in
dec
mov
cmp
jp
rcr
mov
movs
out
jmp
cmp
jnp
mov
xchg
and
mov
lods
jmp
adc
mov
dec
gs
dec
fstp
dec
push
sbb
popa
mov
je
pop
scas
nop
cmp
cdq
mov
pop
or
scas
jb
sub
hlt
cmc
dec
fwait
jge
add
movs
sbb
(bad)
cwde
inc
push
sub
sub
inc
push
adc
push
xchg
or
and
cmps
int3
das
mov
mov
mov
inc
dec
retf
add
(bad)
retf
out
pop
sbb
mov
and
jmp
push
sub
and
sar
xchg
inc
in
loope
sub
retf
rcr
or
sbb
mov
add
jno
mov
(bad)
out
fs
adc
inc
int
sub
inc
jle
lock
push
push
fcomi
ds
mov
je
xor
test
mov
repz
int
jecxz
test
inc
and
mov
aaa
int
sub
push
sbb
sahf
imul
arpl
mov
lds
leave
repnz
enter
jle
(bad)
and
jb
add
dec
jmp
iret
add
cli
sub
cmp
cmp
sbb
shl
jns
push
sub
imul
inc
push
daa
cld
pop
popa
out
mov
js
aas
adc
in
cdq
add
popf
dec
add
jecxz
dec
sub
and
xchg
mov
mov
add
xchg
(bad)
jmp
enter
adc
push
shr
loop
dec
test
pop
jecxz
outs
jmp
fcom
xor
and
xchg
add
outs
jecxz
outs
sub
repz
xor
dec
enter
mov
push
xchg
ja
push
leave
jb
hlt
fwait
push
adc
xchg
inc
jge
push
xchg
inc
dec
aaa
in
ret
push
je
test
adc
mov
leave
hlt
imul
cmp
mov
repnz
mov
mov
sbb
stos
shl
jb
and
mov
inc
xor
dec
sbb
jno
xchg
(bad)
or
out
dec
aam
mov
mov
es
jg
in
fs
test
(bad)
cdq
(bad)
int
and
add
push
dec
mov
fdiv
adc
cmc
mov
cs
dec
mov
pop
cmp
xor
mov
repz
pop
call
pop
pop
xlat
push
pusha
jle
push
clc
hlt
cmps
(bad)
(bad)
xchg
jge
mov
fcomp
jl
call
out
mov
inc
call
adc
sar
add
xlat
sbb
js
sbb
mov
jge
scas
mov
stos
js
outs
jecxz
test
imul
pop
push
scas
mov
mov
loope
sbb
loopne
sti
call
bound
sub
xchg
push
cli
test
stos
dec
push
cli
sbb
sbb
mov
adc
mul
dec
addr16
lahf
jnp
pop
dec
in
outs
sbb
xchg
mov
mov
cwde
fs
stc
loop
sbb
inc
addr16
inc
xchg
jl
dec
xchg
cmp
xchg
xlat
jecxz
xchg
xchg
int3
outs
scas
lds
lods
and
int
popa
adc
call
test
cdq
loope
fs
xchg
fadd
xchg
shl
push
sti
or
jmp
(bad)
and
in
and
push
popf
push
push
adc
cmp
push
ret
xchg
outs
sub
sub
jmp
fnsave
loop
outs
adc
icebp
out
xchg
add
cld
xor
sti
mov
xor
mov
and
(bad)
sti
inc
mov
mov
test
outs
data16
sbb
stos
stc
adc
mov
xchg
jae
and
xchg
cmp
shl
jmp
retf
push
jle
data16
cmp
ja
pop
stos
pusha
cmp
inc
jecxz
icebp
sbb
out
clc
cmp
push
adc
mov
jns
dec
aaa
fs
and
dec
sti
jbe
fucom
hlt
mov
adc
in
adc
xchg
mov
push
ja
and
popf
mov
push
or
dec
mov
mov
adc
dec
aam
(bad)
std
gs
cmp
out
mov
jne
xor
push
icebp
(bad)
and
loope
jecxz
pop
inc
popf
ja
ficom
add
daa
hlt
fs
call
xchg
mov
mov
js
es
xor
mov
test
cmps
and
mov
(bad)
ss
and
dec
pushf
jne
in
sbb
je
jmp
nop
mov
int
outs
in
es
dec
pop
lahf
stc
shr
or
or
stc
dec
outs
in
mov
mov
dec
mov
aam
mov
push
(bad)
xor
sbb
popf
test
std
push
dec
mov
out
fistp
dec
test
neg
mov
mov
pop
gs
adc
cld
int
push
arpl
(bad)
ins
adc
inc
cmp
outs
(bad)
rol
sti
outs
inc
mov
jb
jmp
add
out
imul
ds
jns
out
(bad)
gs
adc
pop
data16
imul
fild
push
sar
es
test
ret
add
jg
sbb
dec
cdq
scas
xor
out
or
inc
(bad)
cmps
add
mov
bound
push
inc
sar
test
pop
sbb
mov
mov
mov
jb
mov
cmps
xchg
cmp
ins
out
das
sti
out
das
xchg
shr
push
mov
inc
test
dec
add
cwde
inc
inc
ds
xchg
or
fisttp
sbb
(bad)
jnp
xor
scas
in
cwde
jecxz
hlt
(bad)
shl
fild
xor
lea
cs
xchg
rol
xchg
enter
outs
call
xor
jp
ss
loopne
ss
test
ss
inc
sub
xchg
mov
aaa
test
cmc
xchg
imul
push
push
push
add
push
les
push
js
(bad)
in
fidiv
test
(bad)
cmp
inc
sub
sub
inc
movs
mov
stc
add
jmp
or
(bad)
aas
and
popa
(bad)
push
sbb
adc
cmp
mov
sub
xchg
rol
cmp
inc
sub
add
cmp
mov
enter
loope
sub
mov
push
add
xchg
(bad)
jns
adc
fwait
add
inc
movs
sub
and
jno
pop
mov
fnstenv
shl
jl
xlat
clc
outs
in
cmp
mov
aam
fwait
dec
xor
pop
rcl
std
push
das
xchg
xchg
mov
fdivr
push
mov
jns
cwde
and
aaa
pop
xchg
cwde
xor
cmp
aas
push
(bad)
arpl
xchg
mov
pop
or
jbe
add
inc
repnz
pop
mov
outs
leave
mov
js
out
in
out
and
jl
in
jecxz
movs
cwde
mov
loop
inc
popa
inc
je
movs
mov
adc
adc
test
stos
fwait
test
(bad)
enter
jge
inc
mov
(bad)
mov
xchg
dec
mov
(bad)
shl
cwde
test
cmps
xor
call
mov
or
jp
sti
push
cmp
gs
stos
in
imul
enter
xor
cmp
sbb
sbb
dec
(bad)
sahf
aad
into
and
out
jge
adc
lds
sbb
jbe
fiadd
sbb
dec
sbb
scas
mov
int
not
cld
nop
loop
inc
xor
lahf
dec
mov
mov
hlt
sub
xchg
fst
lods
outs
repnz
sub
and
in
jge
nop
fwait
(bad)
xchg
fisub
or
jp
mov
outs
adc
adc
int3
(bad)
outs
retf
shr
and
(bad)
sbb
ret
mov
add
aas
sti
push
popf
add
inc
retf
pop
sub
sub
cmp
mov
xchg
retf
mov
in
sar
jnp
lds
gs
adc
inc
and
or
sahf
xchg
dec
adc
and
sbb
xor
jp
xchg
dec
pop
cmp
retf
xor
cmp
dec
pop
or
in
fdiv
dec
xchg
mov
das
or
push
mov
xor
cs
clc
fs
cmc
nop
xor
enter
mov
shl
inc
pop
int
jno
ins
sub
cmp
mov
imul
bound
or
mov
sub
pop
int
gs
jo
fadd
in
arpl
xchg
push
pusha
je
dec
fdivp
repnz
mov
add
repz
jns
fmul
ins
cmps
popa
lods
or
repnz
sbb
cmp
sbb
stc
inc
xchg
push
dec
idiv
jb
ss
adc
(bad)
dec
out
xlat
call
lock
rol
inc
ror
add
lock
les
sahf
pop
inc
xor
or
std
lock
cmp
icebp
lods
and
xor
jecxz
jae
dec
into
sar
cmp
dec
sbb
cwde
xchg
mov
out
ret
jmp
mov
scas
adc
int3
out
xchg
cmp
jbe
push
mov
push
cmp
adc
test
mov
adc
cmp
inc
cmps
push
dec
and
jb
hlt
addr16
lock
lods
xchg
data16
jecxz
xor
or
pop
xor
ins
push
mov
adc
fisttp
inc
cmps
adc
outs
xchg
ja
shl
test
and
mov
dec
in
jae
add
xchg
test
mov
into
enter
ja
jmp
ficomp
and
std
xor
ffree
mov
setae
(bad)
jmp
out
xor
or
dec
jl
daa
scas
cmp
jmp
lahf
cmp
sbb
dec
adc
and
cmc
je
clc
mov
in
xchg
mov
sbb
ret
(bad)
(bad)
fsubr
or
fiadd
aaa
bound
xchg
sbb
loop
fist
test
mov
out
pop
das
mov
xchg
mov
dec
xor
js
dec
xchg
dec
xor
adc
test
int
out
lods
sub
or
cs
xor
xchg
mov
paddsw
xor
xchg
cmp
test
imul
sbb
pop
movs
dec
retf
mov
add
xor
jmp
sbb
ds
mov
push
inc
adc
loopne
test
jno
cmp
outs
inc
cvtpi2ps
xchg
pop
sbb
rol
dec
pop
(bad)
add
lds
lock
push
adc
cs
lods
fldenv
popa
push
add
int3
test
mov
mov
cmp
push
push
jne
shl
in
imul
dec
ins
push
xchg
pop
cmp
fsub
sbb
inc
in
jnp
mov
cmp
sbb
rcr
add
inc
mov
(bad)
div
push
pop
push
xor
ficom
shl
enter
jmp
pop
retf
cmp
leave
int3
mov
mov
or
pusha
lock
nop
imul
inc
cmp
test
fcom
xchg
cmp
sub
dec
cwde
and
ja
add
retf
in
mov
pop
aaa
or
(bad)
loopne
sbb
mov
dec
mov
ror
movs
or
push
xor
cdq
call
fisub
jl
dec
jbe
mov
xor
lods
fnstsw
push
popf
loope
(bad)
push
xchg
mov
enter
sub
adc
mov
mov
inc
jl
es
add
pop
cmp
repnz
mov
push
or
and
sbb
add
inc
sbb
pop
out
loopne
adc
pushf
shr
sahf
imul
outs
adc
lea
cdq
mov
adc
fcomp
(bad)
data16
xchg
push
je
retf
mov
inc
out
mov
jmp
(bad)
xor
pop
aas
ret
inc
adc
in
jp
push
mov
into
fwait
cld
(bad)
jecxz
add
pop
into
sahf
pop
fs
xchg
adc
pusha
mov
nop
cmps
ret
push
push
addr16
jl
inc
fdiv
mov
add
jmp
leave
sub
ja
jecxz
test
mov
stc
pop
dec
fidivr
dec
lea
fnstcw
rol
cmp
dec
xchg
xor
xor
fdivrp
push
sub
adc
mov
ss
mov
(bad)
and
in
repnz
add
adc
in
xrelease
xor
aad
dec
in
fwait
push
mov
jne
scas
scas
inc
jle
test
rol
nop
and
repz
xchg
add
mov
jl
sti
out
add
ret
(bad)
es
pushf
fist
dec
aad
inc
scas
mov
jns
xor
inc
fidivr
repnz
jmp
mov
shl
sub
jnp
(bad)
out
cmp
rcr
cmp
fdiv
jo
jno
xor
ret
push
xor
or
mov
scas
sub
jbe
div
int
retf
push
imul
adc
pop
add
mov
(bad)
cmp
ret
push
mov
inc
xchg
fimul
inc
adc
xlat
imul
mov
dec
int3
in
out
test
pop
pop
sti
enter
mov
xor
dec
mov
ret
call
ret
outs
das
ja
and
das
imul
mov
stos
bound
or
pop
bound
pusha
ror
dec
loopne
ret
mov
es
adc
xor
(bad)
xchg
inc
sbb
cmp
ret
mov
xchg
sar
inc
sub
(bad)
pop
sub
adc
mov
lods
mov
shr
stos
jo
in
sbb
(bad)
fstp
cmps
dec
sub
mov
mov
scas
cmp
rol
or
push
loopne
xor
cdq
daa
mov
and
ins
jg
dec
out
popf
(bad)
push
(bad)
aad
mov
jb
addr16
mov
scas
dec
ficomp
(bad)
outs
cmp
pop
aaa
out
push
jle
shl
pushf
jo
xor
sbb
cdq
or
cmp
aam
(bad)
xor
xor
shr
pop
and
test
xchg
adc
scas
fiadd
mov
movs
not
ja
push
loope
push
jp
mov
or
push
outs
push
mov
jmp
or
jnp
sbb
leave
pop
push
push
mov
fwait
shr
jns
aaa
or
ins
sbb
sbb
fild
call
add
lea
scas
loop
fs
movs
repz
xor
jge
add
and
addr16
push
xchg
and
fidiv
dec
aaa
rcr
retf
in
retf
xor
into
mov
xchg
cmp
pop
in
daa
out
jmp
mov
sbb
and
in
mov
sbb
or
sub
mov
mov
sbb
loop
retf
iret
pop
xchg
jmp
or
mov
dec
mov
push
adc
pop
fldenv
push
fstp
push
push
inc
or
cdq
mov
xor
out
(bad)
mov
cmp
and
pop
sub
outs
loope
cmp
and
(bad)
jo
push
sub
pmullw
sbb
in
jmp
mov
xlat
inc
sub
loop
push
mov
call
mov
das
scas
js
gs
or
into
mov
ds
mov
shl
push
sbb
repz
sbb
jo
adc
fs
jo
jnp
jnp
xchg
scas
sbb
stc
fistp
and
ins
rcr
std
push
and
fmul
cmp
xchg
(bad)
imul
and
mov
mov
push
ins
into
movs
in
mov
jbe
inc
in
sbb
xlat
mov
dec
movs
in
out
je
ficom
inc
enter
cwde
aaa
inc
xchg
xchg
dec
outs
dec
pop
cmps
xlat
fs
dec
retf
retf
jge
test
int
neg
jae
pop
pushf
cmp
test
push
out
dec
inc
jnp
mov
neg
mov
js
sub
and
mov
pop
push
sbb
push
lds
out
jp
cmps
mov
inc
xor
lods
aam
add
dec
out
pusha
cmp
jmp
mov
push
dec
or
cmc
mov
cmps
bound
pusha
mov
lock
sbb
jno
aaa
lahf
call
mov
stos
mov
inc
dec
pop
push
xchg
cmps
hlt
std
dec
cmpps
xchg
pop
repz
les
sub
or
xchg
mov
es
sbb
fist
and
imul
cwde
push
sub
mov
dec
mov
nop
hlt
arpl
movs
pop
sub
push
ret
lea
and
sbb
dec
pop
test
out
stc
add
jne
mov
call
mov
inc
lods
inc
jl
xor
push
test
cmps
fdiv
and
inc
xor
test
je
in
mov
in
xchg
xchg
sub
dec
ss
sub
aad
dec
jecxz
call
jg
les
jmp
arpl
ins
(bad)
ficomp
and
dec
xlat
inc
shr
cmp
mov
sbb
scas
pop
popf
fwait
mov
xor
and
and
mov
xchg
rcr
mov
repz
mov
pop
or
mov
adc
mov
pop
dec
shr
add
dec
inc
rol
add
std
mov
sub
mov
aas
(bad)
cs
or
cmp
idiv
loope
mov
xlat
sbb
inc
jae
ror
xchg
add
hlt
hlt
loopne
ror
dec
mov
lock
xchg
inc
xor
daa
aam
add
sar
jmp
cdq
and
pop
ror
adc
mov
and
cmp
mov
les
lods
es
mov
cmp
loopne
lds
in
call
lods
push
mov
aaa
mov
dec
sbb
inc
mov
xor
jg
sub
push
push
push
fdiv
dec
add
test
ins
pop
(bad)
jmp
push
sahf
and
jmp
pushf
xor
xchg
outs
cli
add
or
scas
push
and
inc
movs
(bad)
mov
mov
les
push
xchg
je
mov
mov
jge
jae
test
in
or
xor
lahf
cmp
cwde
lods
inc
sbb
stc
pusha
or
in
out
mov
jp
rcr
push
dec
repnz
mov
xchg
dec
add
ret
sub
and
pushf
in
jae
pop
cmp
fbld
xor
inc
cmp
mov
movs
cmp
lahf
aad
mov
mov
xchg
ds
(bad)
xor
aas
out
jno
xchg
xchg
and
dec
sar
out
adc
inc
mov
repnz
add
hlt
jno
push
mov
cmp
sti
(bad)
ds
xor
mov
mov
push
push
cmp
cmps
into
jg
ficomp
adc
jno
lds
sub
push
jmp
push
xor
in
cmp
jne
fwait
rol
jns
(bad)
jmp
fst
mov
jmp
sti
inc
inc
js
(bad)
call
test
out
or
xchg
mul
dec
jnp
ret
arpl
cwde
mov
outs
xor
push
cmc
mov
daa
cmp
jae
dec
(bad)
scas
push
out
mov
and
dec
sub
test
push
aad
mov
test
popa
test
mov
push
add
xor
mov
ficom
loope
(bad)
mov
test
loopne
mov
and
mov
faddp
inc
inc
cwde
sub
inc
ds
out
dec
mov
sar
or
jno
jle
xor
fprem1
je
pop
push
idiv
push
push
fdivr
mov
adc
push
ds
out
aam
daa
ja
add
enter
outs
outs
push
mov
repnz
cmps
movs
pop
iret
lods
dec
ret
dec
mov
daa
cmp
das
and
cmps
push
loope
xor
fdiv
inc
dec
or
fld
jno
outs
xchg
int3
(bad)
in
adc
in
iret
jmp
xchg
or
stos
push
pushf
int
lea
sbb
and
push
pop
cli
xor
stc
sub
repz
mov
pop
cld
and
out
mov
mov
mov
xchg
jae
inc
adc
aam
pop
cmp
jmp
ret
sbb
fldcw
ins
outs
scas
leave
icebp
xor
aam
arpl
push
or
or
cmove
jmp
ja
dec
inc
jae
clc
repnz
pop
jmp
addr16
imul
test
or
stc
xchg
jp
pop
(bad)
es
pop
cwde
jle
jle
neg
push
push
sub
mov
ins
adc
fmul
inc
or
mov
cmps
jge
sti
jne
push
pop
jge
bound
mov
xor
loop
sbb
push
xchg
pop
lods
fsub
jns
popf
hlt
or
xor
jl
std
mov
js
xchg
loopne
data16
push
ret
es
lods
xchg
push
pop
adc
push
mov
movs
add
lock
sahf
addr16
mov
in
push
addr16
stos
pop
jbe
cmp
mov
pop
sbb
jns
adc
jecxz
sbb
ins
out
cmps
imul
jb
cmp
mov
jge
push
aaa
adc
jle
mov
shr
rol
movs
cmp
ds
(bad)
dec
adc
cmps
fsubr
xchg
cdq
stos
rol
icebp
addr16
bnd
cmp
ds
sbb
cs
mov
xor
dec
inc
sub
ret
adc
inc
retf
pushf
cmp
(bad)
icebp
xor
jmp
mov
ss
jne
mov
adc
mov
or
inc
xchg
cs
mov
fld
(bad)
mov
adc
mov
iret
or
cli
pushf
xor
or
mov
mov
and
sub
lock
xor
sbb
int
div
and
mov
(bad)
jecxz
std
inc
mov
mov
push
mov
sub
clc
pop
pop
push
mov
push
je
jns
in
mov
jle
adc
in
cli
nop
sub
outs
mov
ins
movs
fnstcw
(bad)
repnz
cmp
push
in
cmps
xlat
and
xor
rcr
out
fld
scas
in
mov
dec
sub
ret
loop
xor
mov
dec
fs
test
loop
mov
inc
pop
jmp
daa
mul
sahf
xor
fs
add
dec
xchg
fmul
cmps
push
inc
mov
shl
(bad)
ja
mov
fwait
daa
call
jge
push
cmps
in
fisttp
cmps
repz
out
and
sbb
out
push
or
aad
aad
pusha
xor
push
arpl
xchg
sub
mov
sbb
movs
loop
neg
es
mov
ror
push
adc
mov
aaa
jo
repz
pop
cmp
sub
repnz
dec
sar
xor
in
pop
fcmovb
fstp
iret
dec
cwde
jp
int3
adc
in
fsub
movs
or
popa
cwde
pop
out
out
pop
cmovns
test
adc
adc
scas
and
mov
mov
jnp
data16
ins
push
mov
retf
dec
test
in
bound
aad
adc
add
pusha
dec
mov
inc
shl
sbb
sub
add
nop
add
stos
mov
mov
mov
inc
in
add
and
mov
dec
stos
fbstp
jge
xchg
mov
call
rcr
mov
push
and
and
dec
xor
mov
scas
xor
jmp
imul
xchg
mov
cmps
(bad)
out
dec
pop
mov
mov
popa
test
xor
imul
cmc
int
jno
adc
das
or
ins
dec
js
pop
lods
push
sbb
dec
pop
ret
mov
mov
ror
sub
int3
jmp
push
enter
inc
pop
into
movs
adc
out
mov
and
push
or
scas
adc
iret
push
call
xchg
fild
jle
push
mov
dec
xor
ins
stos
je
xor
dec
rol
dec
pop
ins
movs
mov
cdq
pop
shl
mov
push
push
lahf
movs
xor
mov
mov
cmps
repnz
pop
mov
sub
rol
mov
jb
or
xor
sbb
push
(bad)
xchg
test
lea
clc
jbe
xchg
lahf
xlat
fcomp
and
aam
into
cdq
cmp
pop
or
jno
add
sbb
adc
pushf
jno
nop
mov
int
inc
enter
rcl
xchg
mov
sub
push
loop
mov
shr
or
mov
pop
lds
dec
(bad)
mov
sbb
fsubp
arpl
or
adc
ret
jle
imul
push
(bad)
or
fwait
iret
ins
popf
dec
jb
je
sub
pop
out
xchg
clc
into
xchg
aaa
dec
pop
rcl
push
movs
adc
lahf
mov
pop
lea
adc
dec
push
inc
mov
movs
mov
in
adc
in
xor
retf
jle
rol
enter
xchg
test
mov
aam
out
sbb
pop
push
or
push
push
fs
test
cs
rol
push
retf
xchg
or
pop
pop
sub
fsub
adc
push
jne
mov
retf
adc
fsubr
inc
fidivr
ret
inc
and
popf
cmc
into
xor
mov
ror
ror
mov
cmp
adc
repz
out
stos
or
add
lahf
push
sbb
(bad)
or
mov
sbb
sub
ja
loopne
jg
jnp
movs
push
sbb
sahf
repz
push
add
xlat
mov
les
pushf
inc
in
retf
out
inc
mov
add
adc
cmp
dec
je
cld
xor
iret
jecxz
mov
jno
enter
mul
pusha
jb
dec
push
movs
out
(bad)
push
(bad)
aad
repz
and
arpl
xor
mov
sub
xchg
add
(bad)
pop
inc
sub
pop
(bad)
cmc
inc
in
dec
mov
dec
cmp
cs
inc
(bad)
aaa
iret
xchg
pop
fwait
daa
icebp
sbb
or
popf
pushf
push
jge
add
mov
mov
es
imul
std
inc
rol
test
add
cmp
add
retf
cli
xchg
adc
jb
jno
mov
imul
popf
xchg
sbb
jmp
out
enter
retf
shl
inc
xor
enter
xor
adc
cli
test
xor
push
fyl2x
jns
popa
js
pop
xchg
pop
push
lods
enter
fcom
mov
cld
test
sbb
mov
imul
inc
inc
mov
int3
jb
retf
ss
into
leave
add
iret
fwait
jg
pop
jecxz
mov
mov
add
sub
cs
retf
or
cmp
movs
xor
add
jmp
fild
fidivr
sub
xchg
sub
inc
aas
and
(bad)
xchg
sbb
lods
sti
push
mov
cmp
lea
and
sub
push
and
test
pusha
xor
lea
cmps
sahf
fdiv
xor
leave
add
test
fcmovu
sub
in
(bad)
inc
mov
dec
clc
add
mov
ret
mov
xor
(bad)
xor
adc
mov
(bad)
push
repnz
fs
mov
lea
sahf
ret
push
and
jle
sub
mov
aad
daa
cdq
sub
mul
add
jo
pop
push
test
mov
mov
ja
or
rol
jmp
(bad)
scas
sti
pusha
loop
mov
dec
hlt
lock
cwde
stos
push
leave
jns
movs
in
vmaxpd
iret
shl
daa
sbb
mov
fist
ds
out
add
lods
sbb
or
shl
fmul
sub
dec
dec
sbb
cmp
jecxz
cdq
cdq
outs
or
xchg
jg
loop
push
out
or
and
push
sub
push
test
dec
mov
js
pop
and
std
mov
xchg
cmc
int3
jecxz
xor
pop
ret
mov
dec
mov
lods
call
loop
mov
int
push
sub
sub
pushf
pop
(bad)
cmp
mov
inc
add
xchg
pop
inc
mov
xchg
mov
gs
or
cli
jae
sbb
and
inc
or
shl
mov
cmp
add
pop
mov
or
cdq
jmp
out
loope
scas
sbb
out
jmp
cmc
add
int3
inc
gs
clc
js
out
inc
push
mov
rcl
arpl
and
inc
pop
jmp
scas
pusha
sub
sub
mov
movs
out
mov
mov
fist
hlt
inc
lahf
out
pop
lea
xor
dec
movs
pop
aam
mov
lea
inc
into
ficom
pop
cmp
or
jbe
mov
test
cs
inc
adc
ret
sub
int3
jge
fdivr
jg
inc
shl
pop
hlt
xor
push
jo
ins
fld
lock
pusha
cli
scas
xor
fnstsw
cmp
push
xchg
jae
(bad)
or
outs
into
fs
les
(bad)
cmps
lahf
mov
dec
push
ins
inc
mov
ds
(bad)
in
pusha
ins
sbb
fs
push
retf
jb
push
mov
jp
int3
hlt
xchg
ss
ffreep
mov
dec
imul
mov
jmp
inc
or
or
xor
iret
add
dec
lahf
ins
lea
imul
sbb
fidiv
xchg
pop
xchg
add
test
outs
(bad)
push
jle
sbb
xchg
ror
mov
adc
icebp
xchg
loopne
das
pop
inc
fimul
pop
(bad)
clc
ret
sbb
mov
lods
movs
adc
push
mov
sahf
push
mov
xor
cmps
jle
and
xor
xlat
fldenv
jo
icebp
imul
outs
mov
xor
push
sbb
cs
sub
dec
mov
cs
arpl
xchg
pop
jae
pop
xchg
call
and
int
cmp
movs
ja
outs
add
daa
inc
popa
inc
and
(bad)
ja
sub
sahf
mov
in
pop
les
dec
mov
mov
(bad)
icebp
jmp
or
pusha
fnstsw
popa
addr16
enter
sub
(bad)
arpl
mov
inc
pop
hlt
dec
sub
push
shl
cmps
mov
adc
inc
inc
fwait
rcl
test
and
pop
push
xchg
mov
or
mov
lock
and
cmp
in
retf
add
sbb
mov
push
(bad)
imul
(bad)
out
mov
daa
imul
iret
jle
push
pop
xor
cmp
push
sbb
cmp
in
mov
jno
dec
retf
sbb
xchg
jmp
out
dec
add
imul
mov
out
cmps
jge
cmp
xor
jmp
sbb
stos
jmp
mov
enter
int3
mov
inc
enter
xchg
(bad)
jmp
lea
sti
movs
std
xchg
shl
into
aaa
cmp
or
pop
mov
sbb
popaw
xor
and
loop
into
mov
inc
test
push
mov
ins
popa
pop
(bad)
xchg
movs
xor
in
and
cmp
stos
fistp
mov
daa
xor
sub
pop
fwait
jb
pop
push
xor
mov
fadd
(bad)
mov
push
jp
mov
sbb
test
ins
aas
sub
dec
inc
jge
or
out
sub
mov
jmp
inc
jecxz
loop
jne
loope
push
lahf
mov
jae
mov
shl
mov
pop
adc
imul
inc
iret
cmps
sbb
lock
mov
fild
imul
(bad)
nop
call
push
mov
and
xor
pop
adc
cmps
retf
cmps
icebp
sub
mov
popf
mov
or
jmp
jg
pop
push
(bad)
pop
fiadd
adc
inc
push
push
(bad)
pushf
stc
repz
repnz
mov
push
xchg
cmp
jae
push
loope
mov
sub
and
xor
jb
fld
mov
jmp
add
ins
fsub
test
ror
and
xchg
call
xchg
out
dec
dec
sbb
dec
repz
mov
mov
jmp
xchg
jmp
call
loope
mov
addr16
test
pop
push
por
push
enter
jl
add
jecxz
jne
xchg
sbb
and
or
lods
sbb
jg
test
inc
movs
cli
out
je
in
cmps
outs
or
adc
sbb
rcr
xchg
imul
xchg
inc
jl
cmp
fcomi
jg
xchg
int3
popa
cwde
xor
mov
push
sub
cmp
slwpcb
cmp
mov
push
mov
mov
jg
cmc
ds
mov
mov
inc
fnstsw
leave
(bad)
dec
ret
adc
fsubr
or
bound
and
dec
inc
push
xor
pop
jmp
pop
cli
jbe
fsubr
cmp
and
adc
mov
jne
add
or
xchg
mov
(bad)
fcomi
enter
jbe
pop
dec
fstp
popa
push
mov
jl
xlat
or
cmp
jbe
push
ret
dec
(bad)
sahf
int
adc
push
ret
pop
shl
movs
test
dec
jp
cmc
fmul
cs
mov
(bad)
ror
cmp
test
xlat
add
stc
fdiv
jb
mov
(bad)
mov
dec
cwde
lahf
jge
int
or
mov
cld
adc
out
mov
mov
jp
stos
call
sbb
mov
mov
xchg
pop
pop
ret
lahf
psubb
xor
call
neg
call
inc
out
js
pop
ds
imul
scas
dec
push
push
pusha
arpl
(bad)
je
cmps
fsub
mov
xchg
fwait
add
ss
mov
aaa
imul
(bad)
mov
loopne
outs
aam
popf
loop
pop
sar
cmps
fwait
in
loope
mov
sbb
addr16
dec
fimul
imul
cmp
in
lods
fnstenv
sub
add
int
loop
pop
leave
bound
sbb
out
or
mov
inc
sbb
scas
scas
ja
xor
sbb
mov
rol
sub
in
xchg
add
or
inc
dec
push
add
sbb
mov
fs
and
and
call
and
pop
popa
xor
mov
add
lods
push
mov
fcmovnb
add
mov
pop
pop
aam
pop
js
lahf
or
inc
rcl
mov
leave
lahf
es
daa
cmp
jmp
or
movs
mov
in
and
push
mov
addr16
jae
mov
aas
in
jbe
in
or
aad
mov
ins
aad
cmp
jl
fnstsw
xchg
push
push
ins
xchg
sbb
jle
ror
jecxz
cmp
mov
ds
sbb
pop
mov
or
loopne
dec
out
pushf
addr16
push
rcl
cli
pop
stc
adc
push
jle
cmp
arpl
push
icebp
dec
mov
imul
mov
mov
xchg
call
enter
std
sub
push
ins
rol
add
in
paddw
or
lock
cs
arpl
push
ror
xor
cmp
aaa
or
pop
sub
sbb
cmp
leave
mov
xchg
dec
dec
cmp
xchg
mov
fstp
mov
mov
jne
aas
mov
lods
dec
stos
cli
in
cmp
xchg
test
push
ds
xchg
sbb
shr
push
pop
pop
dec
cmp
arpl
(bad)
jbe
test
and
rcr
jbe
cmps
cld
enter
cwde
cld
cmp
dec
imul
pop
fnstcw
cs
adc
jmp
js
cmp
in
dec
mov
or
sub
inc
out
lea
call
clc
ins
out
stos
push
add
lahf
push
inc
enter
test
and
mov
cmp
lea
out
and
cwde
call
dec
imul
pop
adc
std
daa
push
mov
repz
or
iret
or
iret
jbe
daa
call
in
jle
(bad)
adc
lahf
jae
ret
xor
leave
mov
ret
mov
mov
popa
dec
sti
sub
inc
jmp
fldcw
dec
pop
sbb
inc
and
mov
rol
or
mov
sub
les
test
daa
mov
push
cld
cmp
xlat
in
pop
add
adc
pop
pop
sbb
push
mov
aaa
in
cmp
int3
dec
lock
inc
cmp
inc
in
xchg
mov
repnz
jg
stc
(bad)
jmp
inc
cdq
mov
add
shl
xor
add
xchg
mov
mov
les
mov
mov
add
cmps
jnp
je
repz
mov
mov
fwait
push
dec
jno
xlat
dec
movs
(bad)
daa
xchg
cmp
or
inc
in
xor
pop
adc
lods
out
inc
xor
ror
ret
scas
int3
call
mov
ins
jo
xchg
pop
retf
xor
out
sbb
jp
add
inc
xlat
call
dec
jno
adc
nop
fld
test
cwde
cli
adc
js
call
mov
sti
inc
(bad)
fist
popa
(bad)
mov
pop
sar
xor
loopne
leave
imul
push
das
cmps
inc
in
mov
pop
adc
jnp
fsubr
xor
popa
retf
sahf
add
mov
daa
test
dec
in
mov
gs
inc
adc
gs
and
das
pop
shl
pusha
or
daa
jmp
cld
iret
sar
jnp
fisttp
scas
jle
add
push
gs
cwde
dec
shr
into
movs
sbb
and
dec
cs
jp
mov
push
lds
outs
loope
jns
push
push
std
xor
xchg
or
push
shr
imul
in
in
jo
lea
outs
xchg
lock
dec
sbb
lds
cmp
dec
pushf
cmp
push
inc
xlat
mov
mov
sub
pushf
ins
xor
cs
into
pop
ds
xor
fidivr
dec
int3
arpl
daa
mov
sbb
aaa
xchg
mov
out
paddsb
das
neg
xor
adc
icebp
jns
test
sbb
xor
pop
jns
sub
(bad)
stos
sbb
out
cmp
adc
mov
mov
or
cmps
xchg
test
pop
jg
scas
mov
test
fsubr
mov
movs
mov
push
popa
push
fmul
mov
jnp
in
xlat
mov
test
push
dec
les
mov
aas
and
mov
sub
sbb
stos
xor
scas
hlt
lds
jecxz
and
aad
mov
pop
cmp
pop
int
int
retf
push
sub
cld
(bad)
scas
arpl
fcom
cmp
adc
arpl
xor
pop
popf
xchg
popf
xchg
sub
pop
shl
cdq
imul
int3
stc
mov
shl
mov
mov
pop
push
mov
add
mov
das
in
sub
sti
cmp
dec
xchg
les
out
mov
fcomp
aas
xchg
dec
inc
push
std
pop
dec
lock
into
call
push
lahf
jle
cmp
fdiv
or
dec
dec
and
or
dec
(bad)
push
fs
mov
push
dec
test
dec
push
xor
pushf
daa
shl
enter
jmp
call
mov
stos
inc
xor
fs
js
out
clc
call
adc
or
outs
xchg
cli
xor
je
imul
jmp
and
sub
repnz
jne
cmp
push
retf
mov
(bad)
js
cmp
pusha
add
sbb
cdq
lea
sub
popw
sub
cwde
shl
mov
jle
mov
(bad)
daa
jmp
dec
xchg
out
dec
xchg
cmp
xchg
ins
test
sbb
lods
jecxz
push
inc
xor
cmp
arpl
(bad)
or
outs
xchg
jns
jne
mov
xchg
arpl
pop
daa
dec
psadbw
pop
arpl
jno
jno
movs
fs
pushf
push
mov
cmps
out
xchg
mov
inc
inc
push
fidivr
push
mov
jmp
popf
iret
push
sub
sub
sub
rcr
or
mov
jl
lea
neg
fnstsw
ja
cmps
mul
dec
pop
enter
stc
shl
cs
test
jmp
mov
das
sbb
jbe
(bad)
dec
test
sar
js
xor
bound
sub
push
in
movs
cmp
out
neg
lods
neg
iret
mov
cs
cs
mov
leave
scas
cmps
jge
pop
cs
dec
out
mov
sbb
scas
mov
pop
jmp
cmp
mov
cmp
int3
adc
dec
bound
add
mov
outs
ret
push
popa
fisubr
xor
xor
xchg
jmp
fbld
test
ja
mov
push
sub
and
ds
xchg
pop
repz
mov
xor
xor
das
adc
hlt
dec
push
or
mov
sub
cmp
ja
pusha
push
sub
pusha
mov
fild
std
push
or
jg
cmp
(bad)
ficomp
pop
fdivr
push
cmp
inc
inc
or
pop
jp
fldcw
ins
sub
mov
mov
pop
adc
dec
loop
xchg
mov
sub
mov
xor
das
mov
cmps
mov
push
sub
bound
cmp
pusha
lds
into
xor
stos
sbb
imul
inc
cdq
sub
call
aam
retf
sub
mov
xlat
pop
xchg
in
lods
cmp
xchg
cld
sbb
xor
je
jl
pop
jne
mov
pop
sbb
pop
clc
pop
icebp
out
aas
dec
int
icebp
ins
leave
fld
aas
fild
ja
jecxz
or
call
outs
call
fmul
in
int
adc
jmp
xchg
mov
push
cli
test
call
dec
xchg
mov
inc
loope
jbe
cmp
cmp
adc
test
les
xchg
xor
icebp
mov
daa
(bad)
mov
jp
scas
pushf
dec
std
aam
clc
fsub
sar
pop
cmp
out
das
add
leave
inc
jnp
imul
dec
mov
leave
js
fiadd
in
movs
aam
mov
out
aas
and
shr
dec
jle
mov
mov
in
mov
sbb
fild
add
ds
fidivr
or
cmp
rcl
pop
sub
jns
stos
add
mov
cmc
fisub
inc
add
or
and
xchg
aas
xor
out
(bad)
pop
push
mov
pcmpeqd
das
push
cli
lock
jge
imul
mov
dec
(bad)
gs
mov
es
sar
cmc
push
int3
and
pop
and
inc
jns
jle
aaa
push
outs
(bad)
stc
pop
scas
push
mov
iret
je
mov
push
clc
fwait
pop
fs
test
push
(bad)
movs
sbb
push
sbb
push
xor
or
call
xchg
push
pop
pop
leave
pop
add
sub
shr
into
sar
jne
retf
gs
xor
iret
out
sti
sub
xchg
fwait
push
xchg
pop
lock
adc
and
scas
xor
(bad)
bound
sti
repz
sub
adc
test
cmc
cdq
jns
inc
xacquire
pop
call
cmp
leave
mov
xchg
cld
(bad)
in
jne
(bad)
jnp
bound
(bad)
cmc
sbb
fbld
lods
inc
imul
xor
dec
or
ins
dec
cwde
push
and
or
adc
dec
cli
pop
lods
mov
inc
mov
cmps
sbb
out
pushf
js
shl
mov
pop
imul
loopne
fs
(bad)
mov
iret
and
jp
loop
mov
mov
shl
dec
cmp
mul
mov
jb
mov
adc
sub
jns
and
icebp
sar
sub
fs
ror
(bad)
ffree
fidiv
outs
jo
fistp
je
enter
or
pop
mov
jno
jb
push
or
cmp
inc
dec
mov
ins
xchg
out
into
int3
leave
mov
cmp
(bad)
mov
pop
mov
pop
xlat
jmp
mov
adc
adc
pushf
dec
stos
push
hlt
mov
lods
mov
inc
leave
cli
in
xor
pop
adc
imul
xor
mov
cmp
sahf
xchg
shr
push
outs
test
xchg
out
shr
mov
int3
(bad)
pop
jns
test
sbb
kmovb
(bad)
sub
jb
inc
mov
dec
ret
push
xor
mov
lock
mov
and
inc
lods
out
dec
xlat
in
inc
sbb
(bad)
dec
push
add
push
xchg
inc
add
bswap
add
xchg
icebp
push
lahf
push
fidiv
repz
lock
pop
lds
cmp
dec
fimul
inc
and
aad
pusha
jmp
cmp
mov
cld
push
and
icebp
jo
and
call
sub
xchg
or
outs
xchg
mov
add
pop
in
loop
push
jmp
iret
add
aam
daa
dec
sub
jmp
inc
daa
popf
enter
aam
xor
outs
in
or
or
jns
push
fs
mul
xchg
adc
push
adc
mov
pop
js
inc
adc
ja
loopne
sbb
jle
push
fwait
loopne
sbb
(bad)
sub
ja
pop
xor
add
jb
add
add
mov
nop
jp
adc
mov
out
or
sbb
je
xor
test
cdq
lods
jecxz
arpl
pop
push
push
adc
in
xchg
(bad)
cvtpi2ps
cmp
enter
inc
jmp
outs
adc
std
jle
int3
fstp
sub
ss
int
fist
ret
scas
dec
or
mov
and
adc
pop
jl
adc
scas
psubusb
popf
lds
enter
dec
int3
mov
jl
out
mov
pop
aad
sub
or
mov
cmc
add
iret
lock
push
gs
xor
mov
test
jbe
leave
shl
adc
dec
inc
adc
jecxz
mov
fstp
sbb
arpl
ins
sub
push
repz
cld
cld
lock
cmp
(bad)
pop
adc
test
cwde
ss
fidiv
fwait
push
mov
iret
jmp
dec
in
loop
mov
adc
fadd
mov
clc
xor
ror
scas
xchg
mov
xchg
rol
xchg
emms
cmp
add
inc
jmp
mov
xchg
and
dec
stos
or
pop
or
cld
int3
out
dec
scas
jno
clc
jnp
adc
or
push
sar
xchg
jmp
or
jmp
adc
jns
icebp
neg
icebp
(bad)
rcl
mov
sbb
sub
(bad)
(bad)
popf
cmp
mov
(bad)
mov
xchg
xor
add
lds
jb
push
test
(bad)
inc
in
dec
pusha
add
pop
enter
inc
mov
lea
and
push
pop
in
mov
push
sbb
(bad)
inc
push
jno
inc
mov
cmp
adc
mov
add
(bad)
mov
into
(bad)
dec
cmc
cmps
shr
movs
xchg
movs
retf
xchg
inc
or
or
pop
jns
mov
stos
xor
cmp
xor
jno
mov
out
inc
leave
inc
mov
js
push
and
cs
pusha
lods
shl
ficom
xchg
rcl
mov
clc
arpl
dec
retf
arpl
mov
and
and
add
mov
mov
cmp
mov
and
mov
int
adc
cmp
sub
pusha
loop
(bad)
sti
ret
pushf
push
mov
inc
cmp
lahf
scas
pop
test
lods
or
jge
push
neg
ss
jle
pushf
cmps
xchg
imul
(bad)
fidiv
xchg
test
and
lock
pop
or
cld
cmc
dec
lea
push
hlt
mov
imul
push
sub
icebp
outs
jae
jno
xor
mov
and
in
pop
xchg
mov
lods
and
adc
clc
test
sub
mul
jmp
inc
pop
pushf
cdq
mov
call
push
adc
fadd
add
xchg
stc
mov
addr16
sub
mov
add
je
adc
out
cmp
popa
dec
cmp
fidiv
add
loopne
stos
xchg
jae
or
dec
push
push
jbe
mov
xchg
outs
addr16
fs
in
je
mov
and
fist
and
mov
icebp
jp
lahf
adc
xor
or
das
sbb
out
xchg
movs
call
cmps
cmps
(bad)
loope
stc
ss
dec
push
inc
push
stos
inc
cmp
inc
and
stos
or
mov
in
add
mov
ins
push
dec
sub
adc
mov
push
cs
cmp
xchg
jns
ror
ror
mov
scas
or
inc
inc
idiv
pop
mov
or
lahf
movs
icebp
dec
imul
repnz
(bad)
inc
dec
pop
out
dec
pop
retf
xor
push
xor
cdq
repz
cwde
ret
repz
fistp
fsubr
outs
pop
int3
mov
inc
outs
test
ss
mov
ss
sbb
aad
jmp
ret
fild
push
icebp
dec
jae
sbb
call
ss
aaa
sbb
imul
jl
loopne
pop
scas
stos
adc
push
push
jmp
xchg
mov
xor
sbb
loop
sbb
rcr
xchg
cdq
leave
cmp
jmp
adc
or
dec
addr16
call
mov
pop
shl
jbe
dec
xor
cmp
leave
adc
clc
fidivr
jno
inc
xchg
lods
in
mov
(bad)
fst
in
mov
lahf
retf
es
movs
imul
outs
jecxz
jl
adc
jg
mov
add
and
pop
inc
stc
pop
jb
pop
scas
into
repz
mov
jmp
ins
sbb
sub
and
push
test
ja
jle
pop
loope
mov
jmp
aaa
test
sbb
int
push
mov
popa
cli
fimul
push
add
inc
pop
mov
adc
icebp
in
call
mov
dec
(bad)
rol
push
add
push
es
and
test
pushf
cdq
and
xchg
dec
stos
mov
sbb
jns
adc
sahf
and
jno
add
test
jmp
mov
das
sub
imul
mov
test
(bad)
jg
jle
movs
sub
add
push
add
es
inc
inc
inc
or
and
rcl
mov
daa
fnsave
fcmovb
pop
or
xchg
push
adc
xor
dec
popaw
jb
out
dec
and
mov
repz
sub
or
dec
add
jp
jnp
jp
xchg
fsubr
mov
out
add
fbstp
sbb
dec
aaa
inc
inc
arpl
push
loopne
gs
pop
mov
pop
jne
adc
test
sub
test
sti
or
fidiv
and
lods
mov
(bad)
sti
inc
cmc
pop
dec
sub
loopne
ss
jp
xchg
jp
(bad)
outs
or
dec
fwait
xlat
aas
dec
xor
icebp
fidiv
and
pop
(bad)
xchg
lock
cld
xchg
movs
out
sbb
mov
inc
or
inc
mov
pusha
ja
(bad)
xlat
jnp
pop
aad
adc
cdq
(bad)
jl
in
pop
dec
retf
fst
mov
cmp
jnp
popa
(bad)
shl
out
sub
lahf
push
inc
cmp
jne
add
sub
xchg
pop
daa
cdq
in
es
push
ins
test
lods
aam
jnp
(bad)
out
and
xlat
mov
rcr
sub
cmpxchg8b
push
sbb
adc
fidiv
dec
sbb
pop
shr
and
lea
cs
push
gs
mov
outs
xchg
jbe
xchg
mov
cwde
stc
outs
(bad)
jno
movs
(bad)
cmps
mov
retf
inc
xlat
or
mov
ficomp
lock
hlt
mov
adc
cs
jbe
push
sub
xchg
ret
jno
shl
ret
sahf
mov
outs
int3
popf
lock
or
fidiv
and
or
(bad)
fcom
(bad)
fcomp
inc
lds
movs
and
leave
cmp
mov
mov
add
test
sub
adc
xchg
bound
ja
lods
jno
or
xor
arpl
ins
jnp
imul
mov
dec
lahf
lock
jae
sub
add
stos
xchg
mov
ds
jle
fst
jno
cmp
cwde
mov
jmp
cmp
mov
pop
xchg
into
nop
cdq
push
jmp
loop
aad
(bad)
leave
call
adc
mov
es
fidiv
pop
add
and
xor
(bad)
(bad)
pop
jbe
cmp
dec
pop
(bad)
fst
jne
movs
std
adc
shl
ficomp
mov
xlat
jp
or
cmp
jo
add
push
call
adc
xchg
(bad)
mov
mov
inc
call
cwde
inc
sub
cmp
je
(bad)
xor
retf
test
inc
cmps
sar
sbb
fldcw
mov
and
imul
mov
outs
fsub
and
or
aam
cmps
mov
cmp
ss
pop
jno
fiadd
inc
and
add
shl
adc
mov
loop
mov
add
and
mov
mov
mov
ja
mov
imul
pop
retf
sbb
(bad)
(bad)
loop
movs
iret
mov
pop
rcr
xlat
push
sbb
jecxz
push
bnd
daa
in
inc
pop
leave
je
inc
pusha
xor
push
jnp
xor
in
mov
pop
fadd
hlt
mov
ret
mov
sbb
cmp
(bad)
jp
lds
add
bound
lea
in
jb
xchg
outs
cmp
pop
dec
int
iret
(bad)
leave
pop
or
int
in
rcr
fs
xchg
leave
inc
rcr
mov
fwait
jmp
dec
stos
push
inc
cmps
rcl
imul
loope
dec
test
add
cmp
scas
jbe
jmp
or
and
das
rol
mov
cmp
add
cmp
jno
jle
inc
test
mov
push
xlat
jecxz
shl
data16
test
dec
rcl
lds
ds
rcr
fwait
movs
jecxz
fbstp
lods
int3
mov
cmp
cld
scas
(bad)
nop
push
sub
jg
sbb
jmp
test
mov
mov
sub
push
sub
jecxz
ds
push
and
push
pop
pop
pusha
or
xlat
nop
pop
push
mov
xor
cmp
lods
add
sub
std
pop
int
mov
test
push
retf
fld
retf
push
fs
je
jmp
lock
or
mov
ja
cmps
pop
fsub
or
jg
xor
jo
out
xchg
cld
adc
sbb
lds
gs
retf
lods
ins
push
xor
pop
mov
mov
lock
xor
dec
in
sahf
(bad)
cmp
inc
and
lods
sti
sbb
stc
popf
je
and
mov
mov
and
scas
icebp
leave
cmp
retf
mov
push
clc
and
cli
dec
fsubr
stos
jae
sbb
mov
retf
movs
adc
jg
out
cli
inc
cmp
or
or
fistp
iret
mov
out
sbb
fidivr
scas
js
push
xor
adc
pop
and
xchg
adc
dec
cmp
jae
dec
push
mov
mov
add
icebp
hlt
dec
shl
popa
scas
sbb
inc
loope
shl
xchg
(bad)
cli
inc
cmp
pop
or
popa
cmp
jns
xlat
cmps
mov
cmp
fs
ins
aam
push
sub
mov
fild
mov
lea
outs
test
add
adc
retf
mov
out
ins
jg
xchg
ficom
sub
push
test
xchg
test
movs
mov
mov
ja
fadd
xlat
pusha
bound
add
mov
inc
fsubr
shr
enter
icebp
xchg
rcr
(bad)
or
movs
jbe
add
aad
popa
(bad)
rcl
mov
mov
mov
adc
retf
loope
test
adc
out
jns
cld
or
(bad)
mov
ds
cli
push
mov
and
loopne
daa
pop
cmc
add
sub
inc
xor
dec
enter
pop
or
push
mov
fmul
mov
push
mov
inc
push
dec
mov
pushf
pop
mov
fnstsw
rcl
jmp
cli
scas
sbb
jg
ret
and
das
pop
scas
sub
push
or
cmp
dec
je
or
or
pop
int
jmp
clc
dec
pop
aam
lods
das
sbb
(bad)
sub
(bad)
es
xchg
stos
fistp
cmp
mov
lahf
cmp
pop
fsubr
mov
leave
cmp
mov
xchg
hlt
dec
aad
call
lods
mov
lahf
xchg
aas
mov
fs
std
dec
jmp
inc
add
mov
sbb
in
add
xor
jmp
xchg
mov
cwde
adc
mov
jo
cmp
in
add
ja
jge
inc
xchg
push
sahf
clc
out
out
out
loop
mov
sti
dec
test
mov
and
xchg
inc
int
ror
push
ins
mov
fnsave
and
mov
cdq
push
test
imul
mov
and
mov
call
inc
or
cwde
add
ret
pop
xchg
pop
outs
jne
ins
sar
mov
pop
mul
das
xor
neg
aam
dec
xchg
xchg
aad
scas
mov
ficomp
xchg
gs
push
clc
sub
sub
push
cmp
add
inc
jl
push
mov
inc
stc
out
push
iret
dec
jmp
sub
dec
inc
or
mov
ins
mov
mov
xor
push
stos
inc
jb
mov
and
int
js
hlt
xchg
mov
mov
sub
pop
jae
ret
dec
movs
test
adc
ror
inc
lock
sbb
mov
loope
js
jg
push
imul
xchg
adc
mov
fidivr
xchg
(bad)
arpl
jmp
lods
cmp
repnz
stos
xchg
mov
or
sbb
cmp
pushf
(bad)
xchg
jbe
mov
xchg
shl
xor
push
adc
cdq
push
test
jl
fadd
pop
or
out
dec
jle
movs
push
sbb
xchg
xor
pushf
xor
iret
cmps
dec
mov
enter
fptan
xor
cmp
inc
pop
push
arpl
test
ds
(bad)
mov
inc
sub
dec
(bad)
rcr
fisub
and
xor
sbb
mov
cmp
int
jecxz
loope
mov
daa
xchg
push
(bad)
push
out
jno
mov
in
xchg
test
and
adc
push
(bad)
out
js
mov
pop
hlt
dec
mov
mov
pop
push
mov
sbb
and
cmp
sbb
push
mov
cmp
mov
gs
xchg
dec
nop
xchg
imul
test
cwde
loope
cwde
xchg
aam
adc
popf
fldcw
out
leave
mov
mov
clc
adc
jne
lock
mov
xor
cmps
or
repz
fbld
test
out
je
sbb
(bad)
in
mov
sub
addr16
daa
jl
mov
jns
imul
push
add
pop
cmp
mov
mov
lahf
sub
ds
or
stos
shl
pop
or
and
arpl
sbb
pop
addr16
mov
scas
add
test
mov
call
imul
xor
cmps
pop
cdq
int3
xor
or
and
jmp
xchg
mov
mov
jae
mov
xor
cld
pop
mov
outs
xor
lds
lock
(bad)
int
nop
test
(bad)
retf
scas
pop
ds
in
xchg
or
dec
mov
sbb
outs
sahf
push
ins
data16
mov
int3
push
outs
lahf
xchg
xor
pop
loop
fst
jbe
jne
out
(bad)
ss
jl
pop
and
mov
and
loop
call
xchg
aaa
(bad)
lock
ins
add
(bad)
sub
push
icebp
arpl
mov
or
jl
push
ds
mov
pop
test
jmp
scas
mov
add
leave
mov
test
(bad)
jmp
cld
mov
sub
outs
inc
outs
fisubr
xor
movs
lods
enter
push
out
pmovmskb
mov
shl
mov
sub
scas
jge
and
scas
push
outs
jnp
mov
scas
fnstcw
cli
xor
push
call
in
lods
mov
enter
shl
and
jmp
outs
imul
or
sub
lahf
lods
adc
push
jns
clc
push
ins
and
movs
cmp
out
adc
dec
lea
bound
or
adc
clc
inc
inc
pop
in
std
popa
out
inc
mov
inc
mov
add
cmp
test
in
jge
sti
pop
jl
and
sbb
cmp
movs
retf
jge
dec
pop
mov
mov
stos
or
cmp
lods
imul
jmp
mov
sub
lds
xlat
mov
and
out
(bad)
lods
or
jmp
xlat
pop
push
xchg
(bad)
ds
into
xor
sbb
add
lods
je
mov
adc
adc
in
cmc
imul
pop
xchg
mov
mov
push
mov
(bad)
cmp
in
mov
cmp
call
dec
test
sbb
push
pop
outs
dec
mov
test
sub
cli
outs
fdiv
adc
cmp
dec
mov
addr16
inc
bound
pop
add
das
mov
push
sub
mov
add
int
retf
cmp
jno
iret
push
inc
lahf
sub
int
dec
add
or
pop
mov
push
adc
xchg
(bad)
pop
js
dec
dec
mov
lds
in
in
jns
or
dec
mov
test
sub
mov
scas
inc
and
jns
jg
mov
mov
pop
mov
cli
sbb
sub
lock
dec
repz
jb
xor
xchg
adc
stos
daa
js
call
pop
(bad)
fs
gs
push
dec
mov
jg
nop
rcl
retf
out
cmp
jns
aas
jno
cmp
clc
fisub
push
idiv
cdq
pop
push
sub
data16
cmp
shl
and
scas
sub
jne
fcmovu
ss
adc
into
push
jmp
adc
(bad)
fsubr
out
jecxz
lock
jmp
mov
movs
sub
sub
aas
std
es
les
retf
ja
cmps
ins
inc
cmp
lods
push
lods
ret
push
cmp
and
xor
jle
scas
bound
pusha
xchg
mov
add
int
xchg
xor
xchg
call
sahf
pop
mov
outs
xchg
sub
daa
jne
cmp
lods
fistp
or
scas
outs
adc
xchg
mov
cld
mov
cdq
repz
mov
sbb
mov
xchg
sbb
adc
hlt
sbb
mov
pop
pop
in
fstp
sti
dec
ins
sub
xchg
cmp
div
add
inc
and
add
ror
sahf
test
inc
(bad)
sbb
stc
jmp
outs
and
shl
sub
lods
sub
pop
addr16
leave
xchg
push
mov
mov
fstp
dec
(bad)
ret
xlat
popa
sar
(bad)
inc
mov
jle
inc
test
loopne
mov
pop
inc
dec
and
pop
scas
and
and
fimul
mov
dec
lock
(bad)
or
idiv
enter
retf
test
add
nop
mov
add
jnp
pop
pushf
cmps
cmc
shr
mov
fwait
pop
sub
outs
mov
mov
or
loopne
mov
ficomp
repz
(bad)
push
or
sbb
dec
mov
cli
add
retf
inc
fist
je
sbb
cmc
into
pop
or
and
xchg
leave
ins
movs
add
push
nop
mov
loop
test
out
jmp
add
(bad)
xor
int3
xchg
fimul
ret
mov
and
xchg
mov
mov
cmc
add
aaa
and
iret
jo
pop
xchg
in
mov
ret
fistp
jp
push
xchg
sbb
mov
div
jp
push
cmc
fxch
js
add
cmp
cmp
xchg
jo
add
or
mov
mov
imul
dec
jb
mov
iret
cmp
cld
jmp
loope
inc
(bad)
ffree
retf
and
pop
inc
push
mov
pop
and
jl
(bad)
jno
shl
jo
add
aam
add
dec
mov
jno
lods
ror
jecxz
jo
popf
pop
inc
mov
cmps
hlt
in
sub
aad
pop
data16
rol
ds
mov
pop
xchg
lock
lahf
sti
push
xor
lahf
test
push
data16
push
mov
cdq
dec
jnp
mov
cmp
adc
jo
mov
adc
shl
sahf
dec
fbld
movs
inc
retf
jne
mov
cmp
inc
in
fld
pop
jl
inc
or
imul
sbb
jecxz
test
mov
adc
in
pusha
into
fimul
aas
mov
pop
xchg
call
scas
cmp
mov
jo
fwait
dec
icebp
jecxz
inc
das
and
pop
dec
sbb
pop
xchg
aad
xchg
xor
in
sti
sti
adc
call
test
test
shr
clc
add
jl
mov
cmp
sbb
lods
int
or
mov
add
jg
xchg
sub
mov
pop
bound
pop
mov
cs
out
pushf
add
xor
rol
popa
aaa
(bad)
adc
jae
loope
or
das
fcom
dec
loopne
push
mov
jns
cmp
adc
(bad)
mov
pop
das
daa
(bad)
push
jns
mov
aaa
lahf
div
inc
call
outs
retf
je
data16
aaa
imul
push
mov
test
mov
inc
test
mov
jne
pushf
repnz
pop
push
mov
adc
(bad)
and
add
sub
add
xor
outs
xlat
sbb
xor
inc
ss
test
mov
cld
mov
add
push
imul
js
mov
or
adc
(bad)
inc
dec
ds
dec
std
xchg
add
jns
and
addr16
pusha
in
cli
pop
adc
sub
mov
call
int
out
lock
jae
xchg
adc
mov
push
neg
addr16
push
pop
sub
push
call
jge
or
push
mov
sar
test
cmp
iret
loop
mov
pop
in
test
mov
test
movs
lods
or
sti
scas
xchg
xchg
mov
inc
stos
icebp
sbb
or
mov
fwait
pop
pop
fwait
ins
or
jge
mov
sub
jl
fs
xor
adc
mov
bsr
xchg
mov
(bad)
loop
retf
stos
jmp
sbb
adc
ja
dec
push
(bad)
jmp
addr16
or
sub
add
cld
out
lods
bound
xor
adc
rcr
jnp
jmp
out
(bad)
and
(bad)
in
sti
popa
or
inc
mov
test
imul
inc
jecxz
xor
and
or
xor
out
mov
adc
adc
out
mov
popf
rol
cmp
cmp
shr
icebp
sbb
imul
fisttp
cs
lods
add
or
mov
(bad)
repnz
xchg
pop
(bad)
sbb
jmp
mov
inc
cli
in
das
(bad)
and
shl
popf
mov
dec
popa
(bad)
scas
popf
add
mov
pop
xchg
jmp
call
push
or
sub
or
cmp
arpl
adc
cmp
jno
or
xchg
inc
out
or
test
out
out
xlat
ret
adc
mov
dec
adc
or
dec
inc
inc
into
sub
add
call
push
and
sti
sbb
push
or
push
and
adc
leave
dec
adc
cmp
sbb
les
or
retf
xchg
(bad)
addr16
ret
mov
ficom
jge
pop
cwde
call
shl
xor
lds
sub
das
imul
stc
cs
jge
xchg
ret
or
cwde
jg
ins
jbe
and
add
sti
mov
adc
mov
xor
cmp
add
rol
adc
lods
adc
in
sub
hlt
pop
stos
or
sbb
xchg
ficomp
jge
icebp
iret
das
cmp
stos
movs
sbb
xchg
jo
sbb
mov
test
nop
arpl
scas
js
mov
ds
imul
nop
mov
jne
lods
pusha
retf
gs
repz
ins
pop
mov
into
add
jge
fs
retf
imul
mov
lock
ret
cmps
ror
imul
sti
adc
sub
sbb
outs
push
lods
add
cmp
out
loope
ret
jp
fisttp
and
lods
int
pop
shl
sbb
pop
sbb
and
jge
(bad)
and
push
xchg
push
mov
or
adc
ja
add
add
ror
fwait
(bad)
iret
inc
sub
stc
jae
sti
push
(bad)
sub
ror
adc
sbb
mov
cdq
sti
dec
rcl
pop
and
mov
fstp
xor
aaa
pop
adc
bound
(bad)
mov
adc
test
xchg
outs
inc
into
popf
aaa
fs
ficom
aam
jo
out
mov
push
div
retf
mov
nop
jbe
dec
mov
pop
out
rcl
push
jg
bound
inc
arpl
xor
xchg
aad
and
inc
scas
or
aaa
rcl
cwde
arpl
in
mov
lahf
mov
or
js
(bad)
cmp
fsubr
aaa
into
and
js
pushf
inc
or
inc
aas
popa
imul
cmp
jge
inc
dec
xchg
out
loopne
mov
sub
inc
push
ins
imul
das
cs
sar
xchg
pop
inc
sub
add
in
mov
xchg
jmp
mov
jg
loope
adc
rcl
lods
inc
inc
or
adc
jns
sub
cmp
movs
or
ror
in
outs
pop
das
xor
pop
test
cwde
cmp
or
enter
dec
push
loopne
jg
sbb
addr16
mov
cld
into
push
mov
fwait
jne
jmp
les
into
(bad)
stc
sbb
cwde
inc
out
fldcw
hlt
ins
jge
pop
push
jnp
cld
inc
leave
loopne
and
jle
inc
(bad)
ret
lods
ret
pop
scas
mov
mov
and
popa
or
gs
nop
nop
inc
jo
lahf
xor
and
(bad)
fdivr
fnsave
test
mov
mov
pop
and
retf
mov
ja
mov
rol
cdq
pop
call
lods
es
in
loopne
push
aaa
(bad)
rcl
stos
sub
stos
out
xchg
jns
fyl2x
push
dec
inc
add
xchg
xchg
adc
rcr
xor
add
sub
pop
das
in
(bad)
sbb
mov
sub
cdq
nop
loope
sbb
or
pop
ja
repz
fadd
mov
pop
jo
(bad)
xchg
(bad)
cmp
pop
pop
in
mov
das
imul
push
sbb
(bad)
sub
es
xlat
fimul
sar
lds
retf
dec
mov
ins
mov
xor
inc
fs
aad
jo
ret
ja
jl
and
int
ror
xchg
and
jne
jns
in
cmp
adc
sub
fs
xor
lea
out
pusha
jg
sub
jo
mov
xchg
mov
adc
jge
test
push
loop
jp
jp
mov
repnz
mov
push
or
push
xor
mov
jb
ins
xor
sar
pop
ret
out
lahf
popa
dec
sub
or
xor
mov
daa
lods
inc
retf
fdivr
div
inc
sub
lahf
cmps
mov
pop
xor
push
cmp
or
add
clc
inc
into
cmps
ss
pop
cmp
dec
add
scas
cmp
jo
inc
xor
(bad)
iret
lea
mov
jmp
das
xor
cmp
test
int3
inc
stc
ja
nop
mov
popa
add
movs
xor
and
push
mov
jb
sub
inc
push
and
lock
(bad)
xchg
retf
mov
aam
popa
pextrw
pusha
mov
retf
cmp
jae
(bad)
xchg
adc
cdq
adc
repnz
push
neg
sahf
loop
push
call
xor
pop
jns
aad
cmp
xchg
fwait
sti
jae
loope
imul
pop
mov
xchg
fnstcw
rcr
sub
xlat
addr16
xchg
mov
jp
cmps
mov
xchg
pop
and
repnz
or
xchg
dec
or
and
pop
iretw
or
(bad)
and
je
or
adc
adc
in
sahf
hlt
scas
dec
inc
pop
(bad)
push
mov
ret
je
sbb
es
loop
pop
ficom
inc
inc
fsubrp
push
retf
adc
mov
mov
sbb
rol
pop
(bad)
outs
xchg
scas
shr
mov
repnz
cwde
js
lds
sar
pop
adc
dec
test
ret
sbb
mov
hlt
cli
jp
in
jge
(bad)
mov
mov
or
push
mov
outs
and
out
test
in
lock
cs
inc
dec
icebp
cwde
pop
push
jae
fcomip
push
repz
call
ja
mov
stc
or
pop
cmp
sub
pop
mov
pop
mov
sub
push
jp
push
int3
loopne
stos
lods
xchg
mov
cmps
push
hlt
cld
(bad)
cld
inc
jmp
adc
jb
pop
dec
addr16
xchg
in
cli
jno
repnz
jbe
imul
push
xor
and
sbb
adc
cmp
dec
or
dec
fidivr
in
call
pushf
mov
je
mov
test
fwait
add
fild
dec
out
xchg
je
jae
pop
jo
icebp
jbe
adc
cmp
shr
dec
push
sbb
sbb
sahf
nop
mov
leave
paddd
movs
jbe
nop
(bad)
cs
mov
adc
repnz
mov
and
xchg
push
lea
inc
out
pop
adc
xor
sbb
xor
push
(bad)
jge
int3
outs
pop
jg
fnstsw
cmp
ret
test
ins
dec
adc
call
fimul
fcomp
stos
push
dec
test
sbb
out
and
bnd
push
inc
aad
scas
jle
inc
adc
push
(bad)
mov
jmp
hlt
add
cmp
cmp
popa
sahf
add
aas
imul
ret
push
cdq
adc
retf
(bad)
xchg
je
out
mov
inc
mov
dec
ret
adc
shl
xchg
xor
fld
inc
jg
or
pop
jne
mov
fdivr
addr16
outs
adc
dec
retf
adc
lea
add
adc
xor
stos
movs
mov
into
js
je
call
test
in
push
imul
dec
f2xm1
jb
hlt
aam
jge
add
sub
sub
aas
pop
mov
cmp
jno
sahf
mov
dec
ucomiss
test
mov
mov
es
jb
addr16
add
(bad)
int
xor
pop
aam
and
aaa
jge
loopne
dec
push
ficom
into
sbb
push
lahf
inc
mov
movs
aas
sbb
and
leave
sbb
shl
add
and
jno
fcomp
cmp
xor
(bad)
test
xor
in
pop
aam
adc
retf
ror
xchg
repz
repnz
mov
daa
pop
mov
ja
mov
movs
inc
arpl
loop
fcmovnb
rcl
sub
lock
mov
pop
mov
xchg
cmp
xlat
(bad)
out
push
xchg
and
(bad)
fmul
jl
mov
test
leave
xchg
mov
clc
(bad)
aad
push
addr16
sbb
xchg
clc
inc
call
inc
fucomi
fiadd
lock
jl
or
mov
in
imul
xor
add
leave
rcl
adc
sub
cld
xor
in
enter
pop
dec
jp
leave
or
push
lock
jmp
jmp
cmp
imul
dec
lods
ins
adc
jnp
fwait
push
jns
inc
jle
js
fincstp
sbb
in
imul
in
in
mov
rcr
mov
cmp
push
pmaxsw
and
pusha
daa
data16
xchg
out
and
es
(bad)
add
fsubr
movs
mov
inc
push
fidiv
bound
loopne
push
xor
fbstp
mov
cwde
add
addr16
xchg
(bad)
ficomp
ds
out
mov
cmp
adc
xor
je
dec
div
arpl
jge
mov
push
bound
or
int3
(bad)
pop
int
jb
jmp
aaa
cmp
cmp
dec
mov
cmp
lods
hlt
dec
std
push
retf
mov
call
xor
jae
mov
jl
jp
mov
pop
in
mov
retf
icebp
jae
cmps
out
test
cmp
push
outs
and
in
(bad)
jmp
call
les
imul
and
xor
mov
ss
jmp
and
or
cwde
xchg
xor
mov
xor
bound
ins
test
sub
(bad)
movs
cmp
push
aad
scas
sub
popf
std
scas
mov
pop
fsub
inc
mov
not
mov
inc
test
sbb
sub
push
out
jnp
mov
xchg
popa
fimul
lock
into
or
sub
test
cdq
jnp
ins
arpl
mov
jo
fidiv
test
repz
and
mov
fmulp
sub
fwait
call
popa
push
ret
inc
fidiv
mov
or
sahf
pop
xor
rcr
push
outs
in
cmp
xor
lods
sbb
ss
pop
iret
mov
mov
bound
sahf
push
mov
mov
cs
outs
test
(bad)
aad
loopne
mov
adc
loop
xchg
cdq
add
xor
sar
js
push
cmp
push
sar
pop
or
ss
mov
jge
mov
or
push
call
outs
adc
pushf
and
mov
cmc
lods
push
mov
add
mov
and
aad
call
cmp
icebp
cvttps2pi
enter
cmps
sub
ret
dec
add
mov
inc
into
cmps
fst
and
movs
dec
scas
mov
inc
idiv
test
js
push
fild
xchg
adc
jbe
jmp
sar
lea
ret
sbb
(bad)
icebp
adc
jp
or
mov
adc
out
pop
inc
ret
mov
cmc
addr16
fcmovne
(bad)
rcr
inc
imul
shl
leave
imul
scas
inc
and
or
xor
mov
sub
inc
pusha
aam
xchg
adc
imul
mov
ror
mov
adc
int3
retf
in
int3
daa
or
add
test
adc
jmp
push
mov
dec
int
sub
mov
cmps
cld
arpl
jmp
loopne
loop
cmc
mov
jns
mov
in
inc
push
jg
adc
fs
repnz
aam
adc
daa
repnz
fild
adc
inc
or
mov
cmps
mov
je
sti
jno
ins
inc
xchg
es
retf
out
and
out
or
aam
xor
mov
(bad)
cmp
jmp
jle
xchg
call
pop
mov
sbb
inc
lods
add
(bad)
cdq
push
(bad)
sub
ins
jecxz
cmp
mov
dec
scas
push
mov
jp
push
into
jo
sub
or
pop
scas
adc
movs
mov
jmp
(bad)
mov
mov
ret
(bad)
int3
(bad)
xor
out
push
test
cli
into
rcr
mov
loop
mov
outs
jmp
sti
shr
test
dec
jmp
lahf
adc
pcmpgtd
hlt
xor
bound
shr
jns
je
sbb
fild
aam
je
mov
adc
clc
(bad)
cmp
inc
sub
dec
data16
jle
out
scas
and
sbb
stc
cmps
jb
cmp
lea
mov
push
fisub
sub
sub
pop
push
in
mov
movs
lods
inc
or
jl
bound
add
adc
jno
xor
xchg
pop
jp
pushf
and
sub
sbb
sub
cmp
fdivr
rcr
daa
cmp
(bad)
add
sahf
mov
mov
inc
dec
inc
mov
add
ss
neg
jbe
xchg
adc
and
and
ror
outs
pusha
popa
(bad)
and
clc
das
pop
jne
jnp
jge
in
call
les
pop
out
jo
outs
inc
xchg
pop
jecxz
stos
push
mov
in
pop
inc
mov
mov
call
enter
fstp
or
enter
sub
xlat
inc
and
inc
add
je
mov
cdq
mov
(bad)
jmp
mov
outs
sub
and
in
xor
pop
mov
ret
dec
cmp
jae
cli
adc
cdq
call
mov
mov
adc
add
mov
and
mov
inc
rcr
pushf
jae
fist
fcomip
xor
test
push
sti
daa
mov
xlat
push
out
sti
adc
loopne
aad
add
mov
xchg
add
xchg
jp
mov
retf
push
outs
or
lahf
lds
stc
push
mov
pop
loope
and
nop
out
outs
movs
loopne
fidivr
jl
outs
mov
hlt
call
shl
mov
rol
out
cmp
jle
adc
sbb
test
push
ret
out
not
adc
jmp
dec
loopne
in
mov
cwde
std
cmps
popf
sub
mov
lods
mov
imul
mov
pusha
test
adc
sub
(bad)
jo
xchg
adc
inc
lods
mov
fidivr
loop
into
int3
int3
push
mov
add
les
test
and
push
sbb
lea
jb
je
pop
fcomp
mov
sbb
imul
jge
adc
lahf
pop
retf
cmc
push
sub
lds
adc
or
sbb
add
data16
pop
xchg
fdivr
cld
adc
dec
(bad)
sub
jmp
dec
cmp
out
test
int3
lods
mov
clc
(bad)
jmp
mov
pop
pop
mov
sti
xchg
dec
ds
punpckhwd
jp
popa
inc
jne
dec
out
cmp
fucomip
icebp
cmp
mov
ror
mov
bound
inc
dec
sti
mov
aas
out
leave
shl
mov
out
jb
hlt
jg
and
sbb
jmp
mov
call
and
sbb
adc
fs
push
cmc
pop
add
sbb
ins
push
ss
sbb
jne
push
jle
pushw
cmp
(bad)
or
jmp
mov
xor
and
add
(bad)
and
pusha
mov
or
jnp
push
jne
push
dec
cmp
or
push
push
and
dec
lods
and
pusha
ss
mov
fdivr
dec
mov
pop
bnd
int
adc
shr
aam
jno
fwait
out
pop
imul
inc
scas
and
sbb
adc
repz
cmp
fcomp
lds
and
cmp
xor
xchg
call
pop
add
loopne
sar
push
loope
xor
jge
lock
movs
jne
mov
add
dec
clc
xchg
pop
and
fsubr
enter
sbb
jbe
(bad)
adc
pop
jl
adc
xchg
and
push
adc
adc
vucomisd
xor
imul
mov
and
enter
adc
add
xchg
jae
das
test
inc
cld
cld
pop
retf
sbb
data16
mov
fild
or
int3
and
leave
rol
adc
cmp
push
fwait
scas
jbe
cdq
retf
xchg
xlat
jnp
sbb
push
scas
jns
(bad)
in
push
cmp
dec
sub
sub
cmp
jmp
xchg
sub
mov
push
mov
test
mov
loope
mov
neg
push
jp
(bad)
jo
mov
call
cmp
or
cmp
fsubr
cs
xor
imul
mov
mov
mov
test
push
pop
out
fstp
mov
push
cdq
pop
inc
ds
mov
push
jmp
jmp
mov
(bad)
iret
sub
push
cmp
xlat
into
mov
movs
push
mov
xor
mov
sbb
sub
ss
inc
pop
push
add
aad
mov
fisttp
sbb
or
and
ins
sub
loope
icebp
pop
stc
out
stos
sub
push
sub
popf
mov
fld
stc
loop
gs
sub
rcl
xchg
pop
stc
xlat
mov
lods
in
ror
adc
(bad)
jno
repnz
sti
lahf
(bad)
out
je
mov
inc
pop
aad
xchg
(bad)
imul
rcl
cmp
inc
ret
into
enter
sbb
or
adc
sbb
jns
arpl
jb
mov
rcl
xor
xor
mov
add
test
retf
xchg
mov
cmp
mov
mov
or
push
cmp
mov
mov
and
mov
jmp
cmp
cmp
mov
mov
and
push
lea
popa
clc
add
bound
and
test
addr16
sbb
add
repnz
push
shr
inc
jp
or
jo
xchg
cmp
or
dec
ret
xchg
aad
inc
xchg
popf
loop
mov
add
or
jno
js
call
jecxz
inc
mov
and
xchg
pop
sbb
fdiv
mov
mov
in
cmps
xchg
sbb
ins
pop
pop
jge
push
ror
or
inc
xchg
push
fcom
cdq
push
ja
leave
aas
adc
out
aaa
in
call
fs
cmp
cmp
mov
test
fsubrp
or
pop
and
bnd
test
and
(bad)
dec
sti
in
cmp
push
lods
bound
adc
pusha
je
aam
fst
fs
ins
pop
mov
add
mov
je
outs
mov
dec
shl
dec
xchg
aad
out
mov
test
lock
push
xor
imul
lahf
push
jle
lods
fst
call
fs
test
(bad)
jp
adc
sub
dec
aam
fwait
sbb
retf
lods
push
push
adc
dec
push
push
push
xchg
cli
ret
(bad)
pop
(bad)
popa
push
mov
fisttp
into
pop
lods
popf
jb
cwde
nop
out
out
hlt
aaa
sbb
jbe
bound
cs
scas
mov
popa
and
bound
mov
test
push
mov
addr16
pop
ret
lahf
(bad)
xchg
retf
jne
jnp
(bad)
push
bound
aas
adc
ror
fcomp
mov
inc
push
adc
enter
dec
not
cmp
dec
outs
or
push
fcomp
aad
push
xor
and
xchg
retf
popf
ret
sti
in
pop
cmp
inc
lods
sbb
fild
test
mov
mov
cli
xchg
icebp
jnp
ss
or
mov
and
cmp
jnp
dec
sub
test
test
popf
aam
mov
cdq
cmp
xor
rcl
mov
stc
mov
dec
jge
or
(bad)
push
xor
cmp
push
les
or
adc
inc
jno
inc
(bad)
retf
push
es
sub
mov
imul
mov
or
sbb
dec
mov
inc
mov
outs
mov
inc
movs
sub
xchg
xor
xchg
sbb
arpl
xchg
jnp
xchg
xchg
out
scas
push
pop
inc
dec
in
loopne
mov
cwde
xor
push
addr16
out
mov
imul
pop
movs
test
das
dec
mov
adc
cmp
mov
sub
push
lea
wrmsr
stc
test
ffreep
fst
(bad)
test
dec
imul
mov
outs
movs
lahf
jno
cmps
(bad)
pop
enter
stos
jb
popf
repnz
xor
addr16
imul
mov
js
mov
cmc
stos
cmp
sub
jbe
arpl
push
test
ret
test
mov
sar
mov
mov
cmp
retf
popa
sub
test
jge
loop
push
pop
mov
das
in
loopne
mov
and
mov
stc
xor
inc
mov
sbb
jmp
xor
in
inc
add
dec
test
pop
mov
int3
hlt
sub
sub
adc
data16
mov
pop
rcr
cmp
out
dec
and
xchg
hlt
(bad)
jecxz
lock
in
xchg
mov
dec
mov
fadd
mov
push
fsubr
mov
jnp
and
pop
pop
xchg
sub
jmp
sub
outs
mov
(bad)
call
ja
test
retf
aad
mov
fs
cmp
or
xchg
jb
(bad)
cmc
or
call
int
dec
jmp
or
daa
(bad)
mov
fwait
cmp
cmp
jl
jmp
call
dec
cmp
stc
std
fldenv
jns
add
cs
pop
sbb
xor
jo
push
and
and
test
fwait
dec
dec
arpl
adc
jmp
iret
push
pop
jnp
ds
sbb
push
sbb
test
adc
mov
nop
lds
add
xchg
push
inc
movs
cmp
xchg
outs
sub
rcr
movs
cdq
jb
iret
push
pop
sub
test
inc
mov
adc
jae
cmps
in
sub
lods
repnz
cmp
loope
sbb
sub
jb
add
sbb
test
ds
mov
cmp
loop
ss
pop
xlat
jle
sbb
fcomp
jnp
or
cmp
xchg
movs
sar
jb
xor
hlt
dec
xlat
aaa
repnz
pop
cwde
sbb
xchg
stos
mov
mov
test
daa
movs
daa
add
mov
(bad)
lahf
dec
mov
or
call
call
mov
add
jno
mov
or
outs
xchg
mov
inc
sub
ins
push
add
pusha
jmp
jp
in
sbb
push
mov
dec
or
imul
inc
mov
xchg
mov
cmp
mov
inc
setnp
mov
jmp
push
dec
cmp
add
jbe
test
ins
jecxz
test
or
mov
icebp
add
rep
push
test
nop
push
int3
aaa
dec
jb
popf
aas
jg
inc
xchg
fcmovb
inc
cmps
retf
test
mov
jns
mov
fbld
mov
sar
outs
(bad)
mov
rol
lods
pushf
lods
test
mov
in
mov
jbe
cmp
xor
out
xor
fisttp
das
mov
pop
rcr
ror
stc
push
and
cs
push
(bad)
pop
sbb
outs
(bad)
rol
cmp
mov
fnstenv
jle
mov
push
call
lea
lds
sub
mov
mov
ins
imul
sub
inc
ds
stos
adc
inc
and
rcr
pop
push
repnz
ror
sbb
das
ins
xor
dec
jnp
mov
aaa
jmp
les
repz
jno
mov
dec
in
mov
adc
je
pop
(bad)
inc
mov
pusha
sub
(bad)
outs
(bad)
mov
retf
fwait
add
bound
sub
add
xchg
xchg
xchg
(bad)
adc
das
jno
xchg
aaa
sbb
cmp
mov
mov
xor
mov
cdq
xchg
cmp
data16
(bad)
mov
xchg
mov
ror
out
bound
jno
ror
fnstcw
mov
xchg
adc
ds
stc
in
popf
sbb
fisttp
je
rol
mov
jge
popa
pop
in
mov
out
mov
and
in
mov
pop
push
xchg
cmp
rol
sub
push
jae
shl
sbb
repz
mov
cmp
push
lahf
fiadd
pop
inc
jl
inc
inc
ds
sar
cmps
pop
jmp
push
int
not
or
das
pop
mov
inc
pop
pop
ins
movs
push
lds
jp
imul
pop
mov
push
pop
cmp
(bad)
out
loopne
out
imul
jo
outs
fisub
cld
and
popa
dec
mov
ret
or
mov
mov
mov
and
out
push
xor
xlat
aas
cs
out
and
jmp
xchg
sub
add
push
sahf
ror
jns
js
js
jecxz
xchg
push
call
sbb
push
sbb
inc
or
mov
nop
cld
mov
adc
aas
sbb
ds
cs
jmp
sbb
jbe
(bad)
iret
in
mov
fadd
(bad)
adc
xor
xchg
call
lods
push
xor
add
jnp
retf
xor
stos
ja
sbb
imul
ins
mov
pop
pop
gs
cmp
jo
push
hlt
sar
fdivrp
pushf
or
jnp
push
jo
cmp
fwait
xor
not
mov
cmps
ins
mov
inc
jbe
je
repnz
and
and
test
push
test
(bad)
push
les
pop
sub
out
adc
pop
dec
push
push
aam
cli
(bad)
xor
rcr
jnp
(bad)
out
pusha
sbb
and
repz
mov
outs
je
daa
gs
jb
mov
or
imul
cmp
mov
test
call
hlt
mov
push
inc
pop
push
in
mov
push
sti
and
mov
sti
rcr
inc
add
mov
jns
sub
cmc
sbb
out
dec
stc
ins
fidivr
(bad)
mov
xor
lea
pushf
je
es
call
push
test
fisubr
hlt
push
leave
loopne
inc
xor
scas
adc
adc
inc
jmp
clc
mov
push
fidivr
int
loopne
jp
xor
mov
sbb
scas
dec
test
cmps
jmp
pop
adc
rol
sar
and
jnp
fcom
sbb
adc
jge
jae
icebp
add
hlt
mov
xchg
cdq
fmul
and
sbb
mov
mov
dec
and
test
div
fsubr
dec
jae
inc
mov
test
sub
adc
ss
xor
in
xor
enter
lea
pop
hlt
rcr
enter
xchg
test
std
retf
sub
retf
mov
retf
mov
dec
sub
add
popa
arpl
dec
dec
mov
lea
pop
xchg
in
mov
add
outs
add
out
push
mov
nop
or
mov
ins
clc
sbb
out
sbb
fistp
add
mov
fiadd
test
jle
das
loope
and
jge
ret
inc
cmc
xchg
lock
ficom
pop
mov
xchg
fld
mov
mov
inc
(bad)
loopne
cmp
and
dec
or
jns
outs
mov
test
(bad)
push
cmps
mov
sbb
shl
cs
sbb
cld
jae
cmps
pushf
cli
inc
mov
test
pop
mov
es
bound
cmp
or
jg
inc
dec
add
mov
nop
xchg
cmp
pop
sub
ret
xlat
dec
popa
push
adc
mov
and
pop
cmp
les
xchg
test
mov
sbb
and
or
xchg
adc
pop
jae
and
xlat
jge
dec
mov
retf
dec
cmp
inc
ror
inc
iret
loopne
iret
repnz
(bad)
(bad)
out
ins
jg
fimul
xchg
gs
cmp
jmp
arpl
or
and
sub
mov
int
cmp
xor
setae
rcr
jle
jns
cmc
(bad)
cmp
les
out
adc
fxam
stos
dec
(bad)
xor
pop
mov
lahf
dec
push
mov
clc
fs
push
cmps
adc
sbb
sub
repnz
inc
sub
pop
jp
mov
mov
sahf
arpl
mov
jns
iret
call
mov
stos
aam
xchg
xchg
adc
das
sub
out
adc
and
pop
push
inc
lods
jecxz
imul
mov
and
or
add
finit
and
xor
sub
xor
jle
ja
jle
add
push
mov
in
cmp
out
inc
inc
push
push
rcl
mov
adc
das
cmp
pop
cs
ds
add
cmps
in
scas
or
jae
arpl
jbe
ss
sbb
stc
stc
mov
pop
and
jp
push
sub
dec
xor
mov
ret
aas
push
clc
lods
push
ret
mov
mov
mov
je
jmp
xor
jle
clc
scas
jl
mov
leave
mov
jmp
fwait
or
xchg
enter
xchg
sub
fbld
pushf
lods
or
cmp
sbb
mov
and
jmp
pop
dec
push
out
rcl
or
movs
fst
out
dec
add
fisubr
test
mov
stc
test
jle
mov
loope
mov
xor
bound
(bad)
aad
cmp
jne
mov
jl
and
mov
pop
in
(bad)
jb
scas
sub
sbb
or
jbe
movs
shl
popf
lods
sub
sub
add
ss
ficomp
gs
sti
out
dec
add
imul
jle
bound
cmp
or
mov
or
mov
mov
shl
inc
iret
sbb
popf
inc
add
mov
arpl
xchg
mov
ins
add
push
xchg
in
xchg
mov
das
mov
cmc
out
mov
(bad)
shl
adc
mov
lods
clc
pop
nop
aad
lods
mov
inc
data16
adc
movs
inc
das
jg
jmp
mov
cmp
adc
push
fdiv
(bad)
clc
push
add
pusha
add
push
mov
xor
pushf
xor
into
leave
add
and
nop
add
test
(bad)
push
jmp
push
xor
call
jae
ret
xchg
retf
bound
(bad)
call
xchg
and
ds
push
xchg
mov
test
mov
inc
lds
xor
push
in
test
aad
(bad)
clc
sub
adc
or
bound
cmp
rcr
cld
xor
cmc
scas
push
mov
mov
push
fwait
repnz
data16
push
sub
xlat
push
mov
xchg
xor
arpl
inc
test
movs
bound
mov
cmp
popf
repz
ficom
mov
inc
addps
adc
gs
sbb
cmps
enter
aad
aas
push
hlt
xchg
repz
ror
leave
inc
xchg
adc
je
(bad)
or
call
stos
popf
pop
aaa
out
movs
jge
dec
inc
ret
mov
add
adc
inc
xchg
sti
push
mov
cld
cmp
outs
outs
mov
mov
inc
or
popf
test
sti
inc
or
xchg
jge
sub
fwait
sbb
inc
cmp
or
jge
(bad)
ficomp
xor
dec
outs
inc
in
xor
into
pop
xlat
out
pusha
inc
das
cmp
cs
dec
push
dec
out
daa
cli
sub
dec
mov
cld
(bad)
outs
nop
pmulhw
cmc
out
add
dec
pushf
push
xchg
icebp
sbb
xchg
jns
sub
xchg
ins
scas
loopne
jne
mov
fild
sub
adc
aam
movs
jnp
mov
sti
adc
test
out
ret
inc
jbe
or
sub
push
outs
or
fwait
movs
(bad)
aaa
into
lds
bound
jmp
dec
xchg
scas
hlt
xchg
mov
pop
daa
inc
in
mov
mov
fcomp
ss
aas
inc
push
ss
cdq
gs
sub
push
adc
inc
out
daa
add
push
call
mov
mov
add
adc
cmp
popa
(bad)
mov
lea
ret
or
jg
and
fcom
imul
aad
mov
sub
aaa
mov
sbb
pop
stos
and
ins
inc
call
ror
rcl
add
mov
fst
jbe
mov
jmp
test
idiv
mov
sbb
fdiv
dec
pop
je
push
ret
jmp
div
mov
jp
xlat
cmc
shr
push
scas
fisubr
pushf
aad
inc
ds
pop
loop
(bad)
int3
mov
in
pop
int
mov
cwde
mov
adc
xchg
cwde
push
jge
test
adc
nop
dec
xor
test
pop
fidivr
outs
xchg
push
test
add
jnp
sbb
cld
mov
adc
lods
pop
(bad)
or
jmp
mul
cmp
inc
adc
sub
aaa
ss
(bad)
movs
fstp
inc
and
shl
in
xchg
jp
mov
mov
cmp
std
mov
mov
repz
xor
and
adc
das
clc
cmp
lds
or
adc
jle
aad
mov
fld
mov
add
into
dec
cld
adc
push
cmp
jp
mov
mov
mov
or
jo
dec
enter
data16
cmp
out
add
xchg
bound
mov
js
adc
stos
movs
jle
loope
loop
mov
xchg
inc
adc
jno
pop
push
push
or
inc
repz
hlt
mov
dec
pop
jmp
xchg
pop
jo
sub
sbb
jmp
inc
mov
mov
xchg
jae
imul
leave
daa
xchg
dec
pop
pushf
rcr
sub
add
(bad)
scas
daa
pop
lods
jne
hlt
dec
push
iret
sub
(bad)
dec
test
shr
fadd
dec
sbb
xor
(bad)
imul
aad
lods
sbb
jmp
stc
jmp
dec
movs
sbb
fs
sub
pop
(bad)
fnsetpm(287
(bad)
push
add
inc
cmp
out
sysret
jnp
in
shr
add
push
mov
mov
mov
in
pop
outs
adc
cmps
data16
stos
xor
es
pop
pop
sbb
leave
ds
retf
mov
ret
repnz
jmp
cmp
lock
imul
push
ret
aad
push
rol
cmps
loopne
cmp
mov
es
mov
xor
add
aad
arpl
sub
(bad)
call
push
mov
or
jmp
xor
out
sub
dec
cmps
push
mov
es
pop
nop
jns
mov
cwde
in
sbb
push
fadd
pop
shl
mov
test
jbe
test
mov
cmp
bound
add
pop
(bad)
call
or
imul
popf
jns
mov
cdq
add
mov
cmc
lahf
cmc
xor
push
pop
adc
dec
dec
(bad)
loopne
ret
jns
mov
dec
jmp
xchg
in
enter
movs
retf
or
xchg
stc
jecxz
(bad)
jnp
popf
jnp
push
scas
add
shl
cmp
cmp
and
loope
mov
std
cmp
cmp
push
mov
pop
and
fcomp
sar
popf
mov
or
add
or
(bad)
push
fsubr
(bad)
retf
dec
daa
fcom
scas
sbb
cld
or
jae
fwait
sahf
int
inc
add
(bad)
jae
mov
outs
shl
mov
je
sub
xchg
and
in
jb
lds
jmp
xchg
imul
push
fsubr
(bad)
mov
retf
mov
mov
fnsave
mov
gs
movs
clc
inc
jae
push
cmp
int3
mov
or
sbb
xchg
(bad)
adc
dec
jp
xor
inc
push
aam
out
outs
mov
cmp
pop
push
add
or
das
int3
(bad)
cmp
pop
out
xchg
jmp
inc
loop
aas
lods
das
(bad)
sub
int3
test
mov
idiv
lods
iret
push
add
push
lahf
iret
in
mov
or
xor
js
xor
jo
or
call
jecxz
and
dec
retf
jg
or
or
pop
ss
xchg
lea
das
inc
ins
inc
popa
mov
std
iret
pusha
js
pushf
add
cmps
cmc
inc
sub
(bad)
and
emms
ins
lods
adc
sbb
inc
inc
mov
test
pop
stos
into
inc
sbb
test
mov
add
or
stos
test
jmp
pop
xchg
pop
aas
(bad)
fs
add
add
cmp
sbb
movs
mov
jecxz
gs
cdq
clc
inc
shr
adc
cmc
dec
bound
je
rcl
pop
push
add
or
or
jbe
jae
cld
pushf
mov
sbb
cmp
dec
test
or
test
sar
mov
pop
dec
fsubrp
jecxz
rcl
jne
push
dec
js
pop
dec
fsubp
xor
rcr
mov
and
fcom
ds
inc
std
mov
les
mov
fisubr
mov
stos
mov
add
(bad)
jmp
mov
and
les
btr
test
mov
ja
xchg
push
and
and
mov
xchg
xchg
pushf
jecxz
mov
mov
nop
std
pop
pop
cmp
and
cmps
aad
out
jae
(bad)
fbld
mov
aaa
cdq
xchg
or
pop
nop
ret
retf
lock
cmp
test
mov
or
hlt
loopne
sub
xor
js
addr16
div
(bad)
lahf
aaa
dec
pusha
dec
aad
pushf
cmc
and
enter
sbb
lods
ja
fisubr
add
icebp
mov
mov
(bad)
adc
add
cmp
jmp
add
je
cmp
aas
push
inc
push
movs
pop
sar
out
mov
lahf
sub
mov
mov
xchg
mov
mov
mov
cmp
movs
inc
cmp
dec
shl
ret
adc
test
arpl
dec
jg
dec
mov
ins
cmp
test
loope
inc
and
mov
push
(bad)
test
loop
loop
movs
pop
test
push
(bad)
push
gs
lahf
enter
xor
cmps
mov
shl
and
lds
push
pop
push
ficom
jb
pusha
pusha
or
dec
cmp
out
test
fs
jecxz
add
cwde
cmp
or
cdq
aad
mov
sbb
xchg
pop
cmps
cmp
stos
jp
xor
in
xor
push
clc
add
shr
test
dec
scas
ja
int
mov
add
in
add
int3
addr16
or
push
add
out
jno
repnz
and
daa
xchg
movs
sub
mov
out
or
jns
fst
pop
add
cmp
mov
ja
mov
aad
das
sbb
shl
push
mov
clc
je
mov
push
mov
sub
mov
stos
cmovle
repz
inc
adc
pop
cmp
xchg
loop
out
outs
repz
std
mov
cs
(bad)
push
xchg
adc
jne
inc
(bad)
sub
jno
scas
in
cmc
test
add
test
(bad)
std
jg
ins
dec
test
mov
pop
sti
mov
ss
movs
mov
shr
not
jne
lods
hlt
fnsave
(bad)
hlt
test
repnz
clc
test
and
stos
test
inc
xchg
mov
xor
inc
pop
jnp
sbb
int
nop
ins
adc
gs
cmc
mov
xchg
jbe
repnz
push
push
dec
gs
std
ret
jne
pop
add
pop
test
mov
rcl
dec
pop
iret
jp
outs
repnz
mul
mov
mov
inc
dec
enter
idiv
push
xchg
sub
pop
je
mov
and
or
mov
mov
test
mov
les
jecxz
rcr
mov
retf
fcmovne
les
addr16
test
call
sub
pusha
and
dec
cmps
gs
inc
inc
movs
leave
cmp
push
cmp
inc
inc
rcl
mov
inc
mov
nop
mul
lock
adc
pop
xchg
push
leave
push
scas
and
cmp
dec
xor
ins
add
ja
xor
pop
and
xor
in
ficom
retf
pop
cwde
push
div
xchg
ds
out
mov
push
mov
xor
inc
pop
inc
push
adc
xor
fld
dec
jne
aam
xchg
scas
scas
mov
icebp
pop
fucomip
mov
adc
xchg
pop
(bad)
outs
outs
pop
fnstcw
mov
fdivr
cs
sbb
pop
repz
fbstp
push
aam
pop
mov
dec
ds
mov
mov
test
je
test
jp
popf
mov
in
sub
scas
mov
aad
jg
mov
ins
into
dec
mov
xchg
rcr
je
cmp
hlt
inc
iret
cmp
test
xchg
js
or
add
mov
xlat
rol
rcr
and
outs
xchg
cmp
xchg
push
iret
dec
clc
jae
pop
mov
mov
push
outs
ds
sbb
push
lods
sub
and
aaa
aad
push
leave
cmp
mov
and
mov
in
icebp
dec
jecxz
adc
mov
or
sub
movs
fwait
and
add
mov
sti
mov
push
xor
xor
(bad)
and
sub
repz
xchg
xchg
jle
jb
call
and
or
mov
push
aas
sub
xchg
ret
mov
outs
inc
sbb
and
or
pop
test
jmp
call
jmp
js
ja
lea
ret
mov
in
(bad)
adc
jbe
jns
pop
push
jecxz
mov
fsub
pop
push
retf
pop
cmps
ins
xor
dec
sar
cs
xchg
lahf
movs
jmp
das
xor
rcl
cmps
push
pop
push
mov
xchg
adc
xchg
pushf
add
mov
adc
adc
adc
or
test
mov
fs
out
test
and
bound
inc
dec
mov
xchg
out
push
pop
jle
push
imul
call
mov
sbb
mov
sub
xchg
pop
ret
pop
popf
xchg
arpl
jp
ja
sbb
cmp
xor
mov
call
push
aad
popf
or
js
sar
mov
loop
fwait
and
(bad)
push
sub
add
loopne
xchg
pop
iret
es
in
or
scas
pop
inc
outs
sbb
imul
mov
jne
loope
das
data16
jl
stos
xchg
jge
ret
adc
or
push
inc
aam
in
jo
cmps
cdq
and
es
in
xor
push
inc
sbb
fcomip
push
cdq
push
dec
clc
pop
push
mov
cdq
jbe
popf
aad
and
sbb
jmp
pop
add
sbb
push
mov
inc
mov
inc
(bad)
sub
and
pushf
xor
fdivr
sub
push
pop
push
imul
in
inc
div
fcmovbe
int3
mov
mov
jno
jae
int3
lods
idiv
enter
inc
jg
movs
(bad)
mov
outs
dec
out
push
aam
inc
jmp
call
rol
push
jle
xchg
je
adc
xchg
test
adc
xchg
gs
adc
jne
rcr
enter
(bad)
in
jmp
xor
sbb
loope
test
mov
stos
dec
jo
inc
in
sbb
mov
xchg
(bad)
stos
addr16
and
add
cmp
and
test
jp
lock
pop
sbb
loopne
mov
lds
push
iret
pop
adc
push
xor
adc
dec
ror
dec
or
add
xadd
mov
cli
into
pop
lds
push
sub
mov
in
add
mov
sbb
cmps
xor
sbb
push
popw
pop
out
js
mov
test
mov
fadd
fild
sbb
cmp
jnp
ret
bound
mov
push
cmps
or
stos
xor
sbb
aas
mov
mov
retf
pop
or
in
sbb
jne
lds
setnp
sub
test
test
out
push
jp
int
in
shl
sbb
dec
repnz
cli
cmp
and
push
lods
cmp
in
ss
sub
stos
int
adc
cmp
adc
pop
mov
pop
mov
shl
cli
cli
jmp
jp
ds
stos
mov
sbb
mov
cmp
pop
xlat
mov
iret
mov
add
inc
mov
xor
xchg
dec
jne
add
out
push
test
sbb
cmp
inc
push
jns
mov
fisttp
sub
jnp
pop
movs
lock
cdq
add
ja
das
dec
mov
into
inc
shl
into
pop
xchg
and
into
cwde
sub
jecxz
(bad)
and
(bad)
push
pop
gs
fnstsw
pop
std
test
dec
cmp
push
pop
sub
ror
and
sbb
stos
out
jo
mov
mov
sub
lods
sub
pop
mov
cli
add
or
pmaddwd
cmp
(bad)
mov
rcl
(bad)
fadd
test
inc
mov
shr
mov
jmp
idiv
daa
out
xor
jge
outs
mov
(bad)
jbe
sahf
in
jmp
sbb
xchg
js
jmp
cmps
mov
fs
push
jb
xlat
cmp
xchg
clc
dec
xchg
inc
mov
dec
out
jmp
mov
pop
fs
sar
jg
and
fadd
add
inc
and
lahf
sbb
jl
and
ja
call
jecxz
dec
sar
popf
call
pop
push
dec
and
popa
pop
sub
cmp
sbb
es
rol
in
xor
(bad)
dec
and
add
ror
outs
aas
shl
les
stc
sub
(bad)
in
pop
or
imul
in
push
(bad)
pushf
mov
test
mov
fwait
pop
pop
test
add
pop
in
clc
(bad)
stos
fcmovnu
sbb
mul
and
popf
and
ins
cmps
pop
loopne
mov
rol
iret
pop
repnz
jne
xor
movs
clc
gs
int3
cmps
cwde
cdq
ja
inc
and
rcl
fnstsw
add
and
stos
dec
cmp
xor
dec
test
test
lds
sahf
sahf
mov
inc
fisttp
test
dec
or
add
push
adc
pop
ja
(bad)
pop
cdq
push
sub
pop
sbb
mov
jbe
ins
cs
mov
aad
ins
xor
mov
repz
popa
cmp
mov
iret
int3
dec
cmp
lock
pop
es
retf
mov
mov
adc
add
push
lods
jg
inc
add
in
test
mov
sti
or
icebp
inc
das
cdq
jmp
push
xchg
je
add
pop
out
out
lahf
rol
shld
test
inc
and
sbb
es
ds
mov
rcl
shr
gs
loop
jle
pop
pop
daa
pop
push
xchg
popa
out
sub
sahf
test
add
mov
int
out
mov
mov
(bad)
xor
jnp
or
cmp
cmps
sub
xor
bnd
outs
and
jp
jo
aas
cmps
add
cmc
les
cmp
out
and
pusha
pop
std
(bad)
mov
in
addr16
xor
jecxz
pop
stos
movs
stos
xchg
mov
add
cmp
arpl
arpl
pop
dec
(bad)
push
sbb
xor
push
xchg
movs
sub
ror
outs
dec
out
or
lds
dec
xchg
in
sbb
jge
stos
sahf
jecxz
test
addr16
sbb
out
gs
inc
cmp
mov
sub
inc
pop
xor
cmp
or
and
and
add
cmp
aad
or
xlat
cmps
ins
sub
test
add
add
packuswb
js
sbb
dec
jecxz
call
call
imul
cmps
inc
repz
dec
jmp
push
mov
mov
cmps
fcomp
stc
out
jns
rcr
jb
fucomi
scas
lods
xor
mov
or
pop
ret
ret
scas
and
outs
(bad)
jbe
jmp
mov
call
es
mov
shl
jecxz
cs
or
arpl
xor
(bad)
imul
scas
cdq
sub
xchg
fucomi
mov
rol
movs
and
sti
popf
jecxz
cli
jle
dec
adc
sub
mov
int
fmul
(bad)
xchg
mov
mov
(bad)
push
repz
inc
out
sbb
add
mov
out
adc
ror
cs
outs
mov
hlt
xor
imul
add
dec
inc
sbb
lock
dec
movs
adc
mov
icebp
push
jecxz
push
stos
adc
aas
cli
jmp
push
dec
sub
pop
aaa
mov
fucomip
test
arpl
repz
repz
mov
fcmovb
xchg
lea
into
jmp
retf
or
push
jp
ss
push
pop
xchg
(bad)
leave
push
aad
pop
sub
sbb
xchg
movs
adc
pop
stos
scas
aad
jae
adc
dec
ss
mov
jno
xor
popf
cmp
xor
lods
imul
cli
ss
mov
sbb
not
inc
cmps
sbb
lea
mov
(bad)
outs
or
fld
jbe
movs
inc
jl
div
sub
arpl
jo
(bad)
and
je
add
pop
stos
mov
add
add
xchg
scas
es
iret
loope
aad
loope
icebp
jmp
xchg
dec
shr
imul
jnp
test
and
inc
push
sahf
movs
scas
pop
sub
retf
jne
pop
xor
cmp
xor
pop
(bad)
je
pusha
loope
cmp
fst
cli
xor
int
or
cmp
mov
dec
in
fcomp
fisub
enter
jmp
and
scas
(bad)
retf
hlt
clc
(bad)
mov
fs
sub
cwde
pop
aas
mov
sahf
ss
and
aam
mov
fsubp
out
(bad)
mov
xchg
std
fistp
popa
pop
or
sbb
or
sbb
test
pop
dec
mov
test
stc
int
das
movs
push
ins
mov
ds
into
popf
jbe
ins
cdq
daa
(bad)
jb
sbb
or
mov
fdivr
inc
scas
sub
nop
jb
stos
loop
mov
in
popf
ins
and
popa
ret
sub
cmp
outs
lock
add
mov
pop
repz
retf
repz
sti
out
add
dec
push
pop
mov
push
aaa
pushf
repz
pop
sar
push
cmps
dec
or
sub
(bad)
cmp
pop
or
ins
cmps
cmp
pop
ja
lock
ficomp
retf
mov
xor
adc
aas
push
ss
lahf
call
mov
cwde
sbb
cmc
and
cmp
mov
rol
push
retf
or
and
push
outs
or
jmp
mov
int3
pop
sub
pop
push
adc
mov
pusha
mov
pop
mov
sub
call
int
jecxz
movs
mov
imul
cmp
mul
ins
rcl
fstp
fcmovb
xor
push
inc
vaddpd
sub
jo
mov
arpl
sbb
jb
xor
adc
pop
fiadd
fiadd
xor
mov
pop
fldcw
outs
adc
repnz
xchg
jl
inc
fwait
imul
sahf
cdq
add
scas
pop
sub
gs
jle
nop
jmp
xor
jmp
in
jg
stos
inc
pop
jl
pop
(bad)
cwde
cs
repnz
sub
pop
pop
mov
hlt
shl
cmp
ficomp
sbb
mov
jb
test
addr16
ret
dec
shl
(bad)
jmp
cmps
jne
sbb
xchg
les
jp
ror
lods
inc
push
leave
shl
add
adc
pop
jmp
and
mov
push
dec
or
ds
into
cmp
sbb
xchg
mov
sbb
pop
xchg
and
popa
sub
lea
and
jnp
add
loope
adc
iret
pusha
add
shl
xchg
pop
xchg
adc
adc
or
in
in
xor
or
data16
loop
popa
xor
outs
retf
or
sbb
and
ss
xchg
pushf
jecxz
cmps
jp
xor
pop
sbb
sahf
daa
mov
mov
and
cmp
cmps
loopne
sbb
es
or
cdq
ss
stc
shr
jo
fnstsw
cli
xor
xchg
rcr
ins
daa
sub
iret
sbb
add
jno
fwait
sub
loopne
add
rcl
iret
js
ins
add
cli
icebp
mov
xor
(bad)
retf
call
ja
js
test
stos
pop
adc
push
lock
adc
dec
(bad)
xor
sbb
loopne
and
imul
rcr
sub
shl
mov
adc
sub
shl
retf
cmp
test
add
outs
add
scas
xchg
cmp
adc
adc
sbb
movs
sub
xchg
xchg
std
jmp
js
lea
mov
and
dec
int3
test
loopne
repnz
inc
mov
fst
cmps
popf
cmp
cmps
popf
dec
cmp
add
mov
rcr
xchg
out
xchg
xchg
jbe
shr
push
dec
push
add
stos
movs
imul
ja
xchg
cli
(bad)
xor
hlt
mov
aad
add
mov
or
jl
stc
inc
pop
repnz
sub
mov
dec
rcr
sbb
mov
aad
loop
xor
(bad)
sbb
xacquire
ins
cli
in
add
or
add
stos
out
jmp
popf
loop
je
push
sbb
adc
arpl
pop
ja
sub
test
mov
test
mov
ins
adc
loope
ror
jg
dec
ins
ret
lahf
out
xor
jne
mov
pusha
jmp
lods
mov
mov
iret
enter
dec
jp
cmp
xchg
ins
outs
dec
push
shr
dec
int
pop
movs
mul
mov
sub
into
fprem
push
pop
dec
xchg
xchg
xor
inc
jno
js
cmp
push
ret
es
mov
pop
cmp
movs
fstp
pop
cld
push
cmp
int3
movs
mov
mov
cmp
cmps
movs
sbb
loop
sub
jo
retf
ret
mov
int
(bad)
js
inc
cli
aad
aad
add
and
adc
xchg
pop
ins
jns
inc
pop
add
sbb
jecxz
cwde
mov
fwait
inc
repnz
fdivp
sbb
ins
mov
repz
movs
and
pop
xor
hlt
iret
cmps
fwait
and
pop
fwait
bound
scas
lahf
pop
sbb
pushf
sub
ja
cmp
jo
or
add
adc
pop
sar
sar
pop
mov
pop
addr16
xchg
(bad)
xor
dec
mov
adc
ds
xchg
test
or
adc
loopne
jmp
sbb
mov
mov
pop
mov
popa
mov
sub
inc
mov
push
xchg
gs
mov
leave
(bad)
and
fsub
pop
mov
jae
rcl
lahf
push
jmp
and
outs
xor
fidivr
retf
adc
repz
iret
cmps
je
adc
xchg
gs
push
push
xchg
xadd
xchg
repnz
and
repnz
or
add
and
push
add
popf
ret
and
xchg
ret
pop
adc
jle
or
fldcw
es
(bad)
mov
repnz
jbe
std
jg
shr
(bad)
push
add
adc
mov
mov
sub
mov
cld
rcl
fisubr
inc
inc
lods
sar
icebp
jnp
jo
pop
loopne
or
test
inc
sbb
imul
outs
jle
test
js
cmps
(bad)
out
fimul
mov
push
xchg
in
dec
ins
ficom
stos
cmp
sub
mov
fnsave
stc
stos
pop
mov
sub
ds
xchg
fidivr
inc
ret
fld
lahf
mov
(bad)
call
mov
push
sub
sbb
icebp
or
mov
aam
pop
add
popa
shl
sbb
push
xchg
mov
cmp
sbb
outs
sub
add
adc
pop
sub
pop
pop
int3
xchg
or
popa
into
loopne
sbb
sbb
sub
mov
sub
adc
sbb
js
cmp
push
jg
stos
sbb
adc
arpl
cli
nop
push
sbb
dec
xlat
jmp
jns
or
retf
push
loop
pop
retf
pushf
call
shl
xchg
test
jmp
mov
inc
adc
call
jmp
pushaw
sbb
sub
aas
adc
and
retf
add
div
repnz
adc
xacquire
mov
add
jmp
not
ja
ja
inc
cwde
sbb
mov
push
add
and
add
lods
pusha
jle
push
push
les
push
inc
adc
cli
stos
fsubr
(bad)
shl
pusha
inc
dec
sub
mov
jle
shr
sbb
or
and
sub
sahf
and
pushf
jecxz
loop
stc
test
cmc
jb
psllq
inc
push
mov
cmp
outs
fadd
or
add
ins
arpl
add
in
iret
push
add
fsubr
ins
sub
pop
push
adc
adc
into
movs
call
jge
add
sbb
adc
dec
fdivr
(bad)
dec
shr
cwde
xchg
push
lds
clc
sbb
(bad)
ja
inc
ins
dec
cli
out
out
dec
call
cmc
inc
dec
xchg
dec
jg
push
ins
cmp
sbb
popa
mov
ds
cdq
dec
mov
or
or
sub
aaa
dec
ss
es
popa
fldcw
jno
pop
ret
jge
xchg
pop
xor
mul
ins
fwait
(bad)
into
pop
cld
sbb
mov
jp
aas
sbb
push
push
fwait
out
into
push
mov
sub
sti
outs
jp
xchg
sbb
out
fadd
inc
lods
std
xlat
mov
mov
or
inc
rcr
adc
push
jg
lahf
jb
dec
mov
inc
or
ins
dec
arpl
stos
sub
mov
pushf
sti
and
xchg
xor
and
sar
aad
mov
dec
mov
cld
push
cli
out
popa
sub
push
mov
int3
dec
int
or
ror
jo
mov
jo
sub
push
pushf
clc
(bad)
sbb
mov
lds
inc
pop
repz
aas
outs
int
dec
lock
sub
push
arpl
pop
imul
xchg
sbb
out
mov
jae
sbb
pusha
inc
les
xchg
or
jnp
jecxz
push
cmp
in
mov
int3
lods
inc
in
push
push
movs
jg
(bad)
loopne
or
push
cmc
adc
add
retf
sbb
test
shr
loop
loop
mov
mov
jmp
dec
xor
stc
repnz
loope
sub
call
js
sti
push
mov
ror
mov
out
sub
xor
fisttp
std
and
je
call
clc
add
out
xor
fptan
div
adc
movs
cli
xchg
inc
fld
jns
pop
adc
add
push
xchg
push
loope
out
not
jbe
or
pop
jl
out
push
dec
std
test
cmp
lock
test
mov
dec
add
(bad)
(bad)
mov
and
inc
scas
int
mov
pop
and
inc
mov
jle
sbb
retf
xchg
retf
push
sbb
imul
pop
mov
test
or
mov
jo
mov
adc
jb
pop
fild
leave
cmp
lds
das
in
and
or
push
cmc
fst
(bad)
ret
lahf
cmps
test
add
jg
pop
pop
test
xchg
xor
mov
icebp
(bad)
jle
inc
pop
addr16
cli
test
xchg
and
pop
or
xor
int3
iret
cmc
imul
enter
pop
mov
gs
dec
test
loop
ret
jle
push
adc
les
hlt
inc
in
int
popf
outs
ret
call
fisttp
outs
mov
mov
mov
pop
and
push
ror
add
ss
and
add
dec
push
imul
pop
push
mov
mov
sti
cmp
mov
mov
out
(bad)
sahf
jae
mov
pop
out
pop
dec
mov
jno
scas
and
sbb
push
(bad)
and
mov
push
add
hlt
push
jno
cwde
cmc
inc
and
mul
mov
xor
xchg
lock
scas
pop
cmp
cmps
inc
mov
mov
(bad)
pop
frstpm(287
cmc
fwait
test
fsubr
add
enter
xor
mov
mov
cwde
ins
into
aas
adc
push
sbb
push
imul
push
adc
mov
push
push
xor
test
test
push
repz
inc
in
jmp
xchg
pop
retf
es
and
retf
jns
xor
adc
sub
(bad)
xchg
js
ret
add
jmp
ins
into
or
aaa
jl
daa
xor
jg
sbb
out
pop
test
cwde
adc
movs
shl
fwait
push
sbb
icebp
(bad)
push
mov
inc
in
imul
add
mov
sub
inc
pop
iret
call
inc
movs
mov
leave
sub
pop
xor
dec
gs
and
jns
push
mov
push
fcmovb
push
mov
mov
clc
(bad)
daa
cdq
cmp
loopne
and
xchg
xchg
into
outs
mov
cmp
sahf
int
mov
rcr
jle
in
mov
cld
ins
xchg
pop
sbb
mov
jno
xor
icebp
inc
bnd
cmp
div
hlt
cmp
push
ja
cmp
or
sub
sub
and
pop
jns
cmp
jne
sbb
sahf
(bad)
clc
(bad)
jp
pop
jmp
aaa
cmp
or
ss
rol
push
mov
mov
add
sub
jae
rcl
sbb
fst
push
and
out
inc
call
sub
aas
cmps
mov
cmp
xor
cmp
repnz
mov
adc
cmp
cs
pushf
lahf
ror
xlat
or
adc
mov
fidiv
aaa
add
cmp
fadd
inc
stos
int3
call
lock
enter
test
(bad)
sbb
inc
fcomp
mov
(bad)
movs
inc
lds
aas
add
mov
sub
jp
lock
mov
dec
(bad)
inc
in
lds
pop
es
mov
daa
dec
and
xor
outs
sbb
out
cli
mov
int
cmp
bound
dec
in
sbb
ret
push
es
adc
push
xor
pusha
out
std
jmp
or
neg
int3
sbb
mul
add
cld
sbb
jae
in
xchg
push
pop
mov
dec
fucomi
sar
ds
fwait
test
mov
mov
std
bts
inc
xor
(bad)
mov
test
jmp
rcl
sbb
pop
test
mov
sub
fiadd
xor
adc
stos
push
or
xor
sbb
cmp
ficomp
pop
int
inc
pop
jmp
or
aam
mov
out
add
lock
sti
iret
hlt
and
pop
adc
paddusw
in
(bad)
xor
adc
rcr
lahf
(bad)
bound
pop
shr
arpl
mov
cmp
jmp
in
pusha
xor
or
xor
(bad)
sub
ins
das
rol
js
sbb
add
js
sub
(bad)
cs
xor
icebp
nop
mov
cmc
jns
repz
retf
xchg
dec
scas
dec
or
jae
xchg
mov
test
enter
test
(bad)
(bad)
inc
sub
inc
jp
ins
loop
push
test
repnz
mov
push
je
xor
pop
inc
mov
shl
dec
iret
and
mov
out
cld
push
pop
stc
cmp
cmp
adc
cdq
outs
jl
dec
inc
es
adc
cmp
lahf
adc
and
add
mov
ds
and
in
test
mov
add
int
sub
mov
xchg
mov
pop
loop
enter
push
add
idiv
sbb
out
sub
pop
out
loope
setge
into
adc
mov
xchg
out
mov
dec
aam
jmp
mov
xor
or
jle
inc
mov
dec
xchg
outs
pop
test
js
push
cdq
(bad)
ds
leave
jg
imul
mov
movs
pop
mov
sahf
sbb
pop
repnz
jo
nop
out
scas
mov
and
and
sar
inc
dec
pusha
shl
push
inc
jb
inc
stos
or
mov
sub
inc
dec
pop
adc
in
jb
dec
pop
pop
in
cmc
jo
sbb
fmul
fidivr
shl
std
xor
and
pop
add
in
jmp
sub
mov
out
out
push
push
icebp
add
xor
xchg
jecxz
jb
inc
scas
mov
stos
pop
push
pushf
pop
pusha
sar
popa
nop
mov
xchg
xchg
cmp
out
out
cmp
int3
or
mov
add
loope
repz
cmp
adc
(bad)
dec
push
and
int3
in
loopne
stc
push
mov
je
int
(bad)
sub
(bad)
sbb
scas
pop
movs
dec
pop
out
in
in
pop
scas
ja
cdq
xchg
imul
mov
inc
push
outs
pop
inc
out
les
pop
inc
mov
or
fidiv
hlt
pop
or
inc
ret
mov
int3
out
cmp
inc
out
jb
jge
out
idiv
arpl
adc
xor
cli
pop
ficomp
cmc
jo
xchg
mov
mov
sub
in
mov
retf
and
cs
cmp
lea
rcl
sub
jp
test
inc
sbb
addr16
xchg
in
psubq
jp
test
jge
mov
(bad)
mov
and
adc
test
xchg
sbb
sub
scas
pop
das
into
xchg
or
fwait
adc
stos
push
mov
pop
fild
xor
xchg
aad
lods
sub
mov
mov
aad
enter
or
mov
sub
cmp
retf
data16
jb
outs
mov
cmps
xor
in
mov
and
and
sub
cvttps2pi
mov
mul
cmc
mov
cmp
add
sub
push
mov
sbb
fsubr
adc
sub
cmp
clc
ja
xchg
mov
daa
leave
xchg
add
es
pop
mov
fisttp
xchg
shl
or
adc
lds
adc
ins
rcl
sub
adc
sub
setnp
cmovnp
popa
ins
sbb
sbb
movs
outs
sbb
ins
clc
fs
push
sub
push
aaa
mov
xchg
outs
stos
jae
cmps
lea
popf
cmp
iret
pop
dec
mov
or
push
mov
fnstsw
sar
clc
mov
jle
mov
or
or
push
sbb
in
mov
sbb
ds
jge
mov
ret
adc
sub
pop
push
sbb
loope
(bad)
in
cmp
add
ret
cmp
cmp
stos
xor
adc
xor
jae
repz
sub
mov
xlat
in
test
call
test
mov
out
jl
ret
push
add
add
inc
in
adc
sbb
mov
sbb
inc
shl
and
loop
cmps
jbe
imul
in
cwde
push
lock
xchg
fsubr
in
mov
xchg
or
popf
adc
push
jno
mov
out
jg
(bad)
es
loop
adc
mov
data16
rol
cld
std
cmp
add
adc
nop
jae
xor
and
and
push
sbb
je
xchg
sub
sbb
lods
and
cdq
or
(bad)
repnz
jb
adc
lock
jmp
xchg
out
pop
xlat
sub
idiv
jmp
cmp
inc
push
adc
mov
mov
retf
mov
add
fucomi
jmp
cmp
leave
aas
lahf
cli
dec
arpl
cmp
cld
dec
adc
in
lahf
add
shl
mov
shl
sub
xor
sbb
push
scas
cmps
pushf
sub
shl
mov
mov
mov
jo
call
cmps
out
mov
inc
ror
movs
mov
dec
cmc
icebp
sub
xor
cs
test
adc
sbb
call
pushf
mov
or
sub
xchg
std
ror
jo
imul
or
dec
push
sub
inc
int
adc
cld
dec
or
test
mov
inc
push
in
xlat
xchg
loope
cld
(bad)
dec
push
iret
aad
jl
icebp
xor
call
jno
adc
and
pop
loopne
jno
mov
jecxz
(bad)
xor
jmp
pop
pop
adc
and
mov
push
lods
cmp
jl
mov
push
mov
stc
mov
and
cmp
int
ja
aaa
mov
xchg
sbb
inc
shr
dec
jl
mov
push
imul
retf
cmp
int3
cli
lods
lock
pop
call
sub
ret
xchg
add
mov
add
push
test
sub
sbb
or
dec
aad
xor
push
data16
arpl
sub
lds
ds
mov
imul
je
dec
xor
push
test
outs
pop
inc
fistp
mov
jb
adc
outs
pop
sbb
pop
stos
inc
test
mov
fwait
lock
sbb
cmps
xor
dec
add
lods
jnp
into
clc
test
ret
adc
mov
xchg
retf
sub
cmp
nop
inc
lds
icebp
clc
dec
xor
add
xor
push
push
add
iret
mov
mov
das
jmp
aas
jb
dec
in
rcl
aas
addr16
add
cmp
movs
mov
aad
ss
ret
es
int
outs
ror
aas
iret
aam
es
and
or
std
rol
test
ins
cmc
mov
(bad)
mov
mov
cld
sbb
mov
adc
xchg
or
cmp
mov
adc
inc
repz
jecxz
retf
rol
test
jmp
xchg
mov
iret
inc
(bad)
jb
cs
xchg
(bad)
mov
push
sub
dec
push
push
stos
push
cmps
inc
jl
mov
push
xor
pop
add
lock
mov
sar
iret
add
outs
frstor
les
fnstcw
iret
adc
dec
ret
inc
or
dec
stos
mov
loopne
lds
xchg
sti
add
movs
push
(bad)
loop
pop
repnz
and
imul
push
mov
leave
mov
mov
dec
test
(bad)
dec
(bad)
data16
dec
inc
push
ret
add
cmpxchg
cmp
sbb
and
mov
push
dec
dec
ret
adc
inc
dec
adc
imul
cmp
or
jns
sub
(bad)
dec
stos
mov
lods
imul
ss
mov
cmp
std
stos
into
sbb
mov
mov
loopne
add
mov
xchg
push
dec
sub
sbb
(bad)
sti
sbb
push
div
test
pusha
cli
jp
push
sar
frstor
outs
jecxz
dec
pop
add
cmc
fimul
int3
mov
sub
lods
and
push
int
pop
sub
xchg
push
mov
mov
popa
or
bound
psrlw
lock
in
push
clflush
leave
test
(bad)
cmp
xor
les
inc
xchg
mov
test
and
or
inc
or
mov
addr16
ja
into
jne
out
mov
stos
mov
push
jno
ss
inc
shl
lock
xchg
aad
(bad)
fsubr
int
jmp
jmp
push
sub
and
ins
xor
inc
jnp
jmp
mov
adc
pop
inc
dec
xchg
fdivr
mov
sub
dec
(bad)
mov
aas
jmp
jbe
mov
sbb
pop
cmps
fadd
pop
jno
and
jl
jbe
jne
sti
jl
jae
jb
loope
sub
xor
popa
das
xor
xor
daa
or
lods
ret
and
(bad)
shl
jl
scas
push
repz
cld
out
popa
jb
sahf
repnz
cld
mov
mov
pop
cdq
mov
adc
cld
in
int3
pop
ja
jne
rcl
in
and
mov
sbb
xor
or
sbb
or
xchg
in
ja
(bad)
lock
iret
nop
mov
addr16
sub
imul
mov
sub
fmul
xchg
fmul
out
je
cmp
cmp
stos
push
mov
xchg
jge
rol
jnp
push
adc
xor
or
inc
cmp
stos
jmp
cmp
nop
inc
xor
test
xchg
setge
rcl
fcom
sar
enter
call
xchg
sub
inc
xchg
cld
imul
cmp
out
xor
add
and
out
pusha
add
ret
test
div
xchg
cmp
sbb
jbe
jl
aad
sub
sub
cmp
inc
shr
shl
mov
xor
mov
and
mov
add
ficomp
and
js
adc
xchg
mov
shl
push
mov
retf
fwait
mov
xor
sbb
ds
scas
dec
dec
sub
int3
cld
(bad)
sbb
push
lea
out
aam
stc
pop
xchg
pop
jle
repz
adc
and
dec
add
lahf
outs
adc
xchg
test
cdq
not
push
int
sahf
outs
in
and
(bad)
stc
push
or
iret
mov
inc
das
dec
mov
pop
daa
adc
mov
stos
stc
aam
xchg
cmc
xchg
outs
dec
std
and
ds
mov
stos
imul
adc
imul
out
and
pop
jnp
ficomp
popa
lahf
outs
and
pop
adc
test
jae
pop
push
pop
pop
jmp
hlt
or
jne
popa
jnp
cmp
dec
cmps
clc
inc
inc
mov
dec
add
xchg
mov
xor
xlat
leave
lds
push
aaa
fstp
push
jne
sub
jns
jae
lea
cmp
lahf
popf
pusha
xchg
test
fs
movq
shl
(bad)
pop
cmp
xchg
loopne
dec
out
cwde
mov
jp
ins
popa
push
stos
mov
dec
in
inc
or
jp
daa
ficom
popa
in
cld
nop
push
jmp
ret
jl
and
push
cmc
lahf
xlat
je
sbb
stos
fwait
mov
or
lods
cmp
cwde
mul
pop
jbe
adc
sbb
adc
mov
cmp
aam
and
or
fwait
mov
popa
in
sub
push
das
scas
loope
sti
cmps
dec
out
ror
or
push
xchg
push
xchg
ins
mov
xor
test
ins
cmps
stos
push
(bad)
mov
cmp
dec
lods
mov
sub
jmp
and
or
add
sbb
xchg
retf
call
adc
aaa
stc
sbb
imul
dec
sti
xor
cmc
add
xchg
xor
cli
imul
mov
lods
push
cmps
push
inc
and
adc
inc
fistp
mov
les
inc
pop
mov
inc
(bad)
lods
not
hlt
jo
and
enter
stos
mov
call
push
add
xchg
jg
(bad)
rep
imul
sbb
pop
add
out
xor
jb
mov
xchg
adc
sbb
dec
dec
shl
mov
cwde
push
push
sbb
or
cld
mov
sub
sub
fldcw
mov
xchg
ret
inc
jae
cmp
mov
push
push
enter
(bad)
push
inc
ret
pop
mov
lahf
es
adc
and
inc
in
adc
aas
sti
sar
mov
(bad)
push
out
xor
aaa
and
mov
jecxz
aad
jmp
mov
sbb
retf
inc
pop
fisttp
pusha
sub
dec
dec
jb
pop
adc
(bad)
or
push
jmp
test
mul
and
add
xchg
sbb
mov
inc
inc
lock
xchg
int3
pop
stos
sbb
jge
out
retf
into
nop
cwde
mov
mov
add
inc
adc
mov
or
cmp
sar
aad
call
ins
mov
and
add
and
sub
jns
and
cwde
inc
daa
test
dec
inc
out
dec
aam
sbb
leave
mov
pop
adc
and
dec
jle
popf
jb
sub
and
(bad)
xchg
enter
lods
test
mov
pop
mov
mov
mov
cmc
dec
inc
std
mov
loope
cmps
es
ins
pop
push
mov
retf
push
mov
or
push
sbb
dec
lea
inc
movs
int3
push
jmp
dec
xchg
push
lds
jnp
jle
add
mov
push
clc
sbb
in
inc
push
sbb
rol
sub
xchg
sbb
jmp
in
pop
fxch
jno
int
lock
jle
pop
or
in
inc
loope
cld
add
sbb
jns
and
fisub
pop
rcr
add
sti
imul
pop
pop
out
inc
ja
lock
(bad)
mov
repz
push
loop
stos
lds
mov
retf
xor
pop
call
mov
and
push
in
aam
sub
inc
sbb
test
fbld
xchg
adc
cmp
in
inc
jge
and
sahf
frstor
aam
jl
jge
popa
jg
mov
or
hlt
mov
or
jge
fsubr
cli
mov
sbb
sub
test
mov
pop
xchg
mov
dec
xor
dec
enter
pusha
xor
(bad)
or
push
jmp
repnz
(bad)
sbb
test
push
or
cs
xlat
fnstsw
ss
adc
jns
jmp
pop
jp
add
std
ins
ret
bound
ins
enter
xor
and
xlat
inc
jge
outs
fmul
push
add
call
imul
ss
xchg
mov
push
add
xor
pop
mov
push
push
mov
or
xchg
cmp
mov
adc
aad
sbb
pop
push
dec
lods
xor
xchg
not
(bad)
cld
std
pop
ret
push
sub
xchg
lds
imul
popf
and
cmp
push
loope
dec
popf
add
cdq
push
mov
push
jg
and
pop
jl
dec
data16
bound
xchg
sbb
test
or
js
xchg
pop
xor
jp
push
pop
mov
jb
movs
inc
aaa
jp
retf
data16
jns
mov
ficom
inc
jns
mov
out
jge
int3
cmc
jle
sub
pop
movs
aam
xor
inc
(bad)
scas
test
jae
xchg
aas
sbb
imul
xchg
outs
mov
or
mov
test
(bad)
addr16
dec
movs
add
retf
movs
cmps
inc
test
lock
pop
loop
mov
in
(bad)
in
js
je
(bad)
cmp
dec
mov
popa
pop
xchg
sub
pop
mov
repnz
cmp
and
and
out
sub
and
pop
cmp
push
icebp
fnstenv
loope
mov
mov
xor
lea
out
fidivr
mov
outs
test
adc
jl
stos
cmp
test
push
mov
iret
gs
and
adc
jle
push
jo
dec
jnp
mov
pop
test
retf
sti
adc
shr
cdq
mov
out
mov
into
xor
sub
mov
push
inc
mov
scas
sbb
cmps
js
push
inc
movs
inc
adc
pop
sti
arpl
xchg
jmp
dec
cmp
fisubr
fdivrp
mov
xchg
and
aad
inc
and
jmp
loop
sub
mov
retf
nop
xchg
xchg
sbb
retf
mov
aas
push
dec
jmp
ins
les
aas
jns
out
or
cwde
and
out
add
jg
mov
pop
div
lahf
iret
dec
xchg
pop
mov
and
mov
jmp
jge
mov
movs
js
scas
(bad)
in
ja
push
repnz
inc
(bad)
rcl
fld
test
pop
dec
mov
fsub
das
div
fstp
test
push
inc
add
mov
pushf
pop
xchg
cli
jne
mov
imul
pop
lds
xchg
and
push
popf
xchg
repnz
arpl
lods
adc
push
retf
loope
ja
jae
cmp
retf
push
inc
les
test
dec
movs
or
mov
imul
ins
and
movs
jmp
sbb
cmp
or
xchg
shl
and
loop
ret
sub
mov
mov
or
xchg
leave
or
div
loopne
scas
js
sbb
sub
adc
repnz
fs
enter
mov
mov
pop
ret
cmp
jecxz
fistp
lock
enter
cmp
lahf
jno
jge
and
jmp
ror
xor
mov
and
and
sbb
clc
hlt
dec
mov
dec
sub
sbb
add
data16
test
or
sbb
ja
xor
pop
or
sbb
cmp
fcomip
retf
fwait
ja
mov
jbe
inc
cdq
add
mov
lahf
nop
sub
xchg
and
jb
push
in
or
clc
cmps
in
mov
(bad)
stc
cmp
jecxz
frstor
sahf
fdivr
mov
push
daa
imul
idiv
inc
enter
fcmovnb
das
fmul
fisttp
inc
int
mov
sub
mov
lds
(bad)
xlat
ins
je
dec
scas
ss
and
mov
shl
pop
or
inc
cmp
(bad)
retf
push
(bad)
test
mov
xor
mov
pop
cli
inc
test
ror
push
sub
cmps
mov
enter
pop
mov
push
mov
pop
xchg
repnz
nop
scas
popa
or
cld
xchg
adc
add
out
test
xor
icebp
iret
pop
adc
mov
pop
and
inc
dec
cmc
in
push
push
cmp
dec
stos
jl
pop
jns
ds
jbe
cmp
into
inc
cmp
ret
jno
imul
rcr
retf
bnd
stos
mov
inc
ss
stos
sub
mov
cmp
ins
test
addr16
jmp
jp
and
stos
xor
dec
add
or
cmps
aas
cmp
stos
pop
mov
test
mov
sbb
or
out
test
xor
dec
mov
rol
jno
dec
in
inc
sub
inc
repnz
out
jmp
cmp
data16
adc
fs
push
ret
and
je
loopne
addr16
sub
scas
cmps
cmp
xchg
jne
jl
push
xchg
pop
xchg
add
and
add
inc
mov
add
retf
or
add
imul
cs
and
add
cmp
dec
mov
sub
scas
(bad)
jecxz
lea
test
aas
adc
push
push
jmp
xchg
sahf
scas
add
jg
in
xor
jmp
mov
inc
push
fs
fisub
retf
inc
out
sub
lods
lock
outs
fsub
mov
cmp
repnz
push
fisttp
sub
out
add
push
fs
and
out
inc
or
lea
jle
sub
(bad)
int
mov
ret
call
in
dec
push
enter
mov
jl
xchg
test
mov
dec
lahf
pop
cmp
sbb
arpl
jb
xchg
adc
out
repnz
ret
loope
jne
in
scas
xor
in
inc
fidivr
mov
dec
push
pop
mov
sub
(bad)
out
imul
jmp
(bad)
icebp
sub
pop
dec
mov
add
jmp
xor
mov
cmp
pop
xchg
pusha
mov
dec
xlat
in
add
push
rcl
pop
pop
shl
scas
cmp
ds
lea
and
cmps
aas
mov
aam
stos
shl
sub
js
cdq
cmp
fsubp
xchg
and
ins
and
aam
ds
stos
and
add
push
ja
ss
xor
dec
mov
jl
jle
pop
push
pop
push
pop
popf
sub
(bad)
and
add
xchg
imul
add
and
mov
loopne
and
xchg
(bad)
(bad)
ins
cmp
loopne
push
ret
pop
push
xor
jbe
data16
mov
jmp
and
inc
jmp
call
xchg
cmps
mov
sub
dec
popf
movs
popa
or
mov
push
icebp
xchg
mov
cmp
xchg
ret
aas
ins
inc
mov
push
sbb
mov
in
sar
adc
sub
les
pop
sub
mov
shl
cmp
clc
adc
icebp
cmp
hlt
imul
xor
add
ret
mov
lock
repnz
push
adc
mov
mov
cld
sbb
retf
jle
jbe
jnp
dec
or
push
adc
sbb
sub
test
mov
mov
ss
stos
push
in
mov
xchg
pop
adc
sbb
stos
push
fdiv
fsubr
lea
sub
inc
nop
xchg
mov
out
xchg
jns
pushf
ins
sbb
call
dec
lock
and
cmp
cmp
int
mov
mov
out
cmp
aas
dec
test
adc
stc
and
mov
pop
push
sbb
cmc
je
inc
dec
fcom
arpl
add
add
mov
mov
imul
lock
out
sbb
jecxz
push
xchg
cs
mov
(bad)
dec
push
inc
push
or
xor
push
mov
mov
push
mov
cmps
xchg
jns
pop
xor
push
mov
inc
mov
aas
jo
fild
(bad)
or
pushf
dec
push
test
outs
pop
cmp
scas
movs
pop
in
dec
adc
xchg
cli
cwde
data16
pop
xor
jl
cmc
add
pop
mov
into
sub
or
xlat
fisubr
cs
or
jecxz
stos
jno
xor
jnp
repnz
mov
jl
push
dec
pushf
xor
jne
fld
dec
adc
ss
bound
mov
cmp
and
mov
mov
movs
mov
inc
pop
mov
dec
jle
xchg
ins
cli
(bad)
cmp
test
aad
sub
cmc
aam
ja
and
fimul
xchg
stc
addr16
nop
pop
push
jmp
xlat
mov
dec
push
add
push
fidiv
cmc
sbb
push
push
push
cwde
inc
or
in
bound
ret
fcom
and
lods
in
jae
sahf
sbb
pop
cmp
stos
(bad)
gs
mov
dec
mov
push
pop
dec
retf
lahf
shl
dec
jmp
sti
jp
xor
out
leave
jge
adc
pop
inc
imul
inc
or
or
dec
loope
and
and
jl
in
mov
jmp
ins
fcmovnu
rcl
addr16
scas
sub
hlt
xchg
cli
ja
fst
dec
in
xor
sbb
mov
repnz
sbb
dec
movs
add
shl
icebp
jmp
jg
mov
leave
sbb
xor
add
loope
cmps
inc
add
movs
clc
cmp
xchg
mov
mov
stos
add
enter
popf
sti
xor
mov
in
aas
or
add
(bad)
and
(bad)
stc
sub
test
pop
mov
xchg
cmps
movs
inc
(bad)
adc
push
mov
xor
and
ror
aam
call
or
mov
or
push
ja
enter
xchg
adc
jecxz
fwait
add
js
sahf
cdq
pop
xor
mov
push
inc
repnz
inc
adc
jbe
push
jmp
pusha
mov
jno
movs
adc
pop
mov
inc
xchg
fnstsw
cmp
clc
out
mov
mov
dec
loope
movs
les
mov
aaa
push
fiadd
ret
jp
mov
or
cmp
movs
mov
inc
sub
add
mov
es
stc
pushf
mov
jnp
das
leave
leave
outs
pop
sti
mov
jp
jae
fs
mov
ror
lods
mov
dec
aas
icebp
sub
in
xchg
sub
sbb
xchg
(bad)
sub
xor
mov
sbb
mov
dec
inc
inc
inc
movs
sub
pop
dec
out
(bad)
icebp
enter
lock
inc
test
adc
jp
sbb
icebp
scas
cmc
and
sbb
rol
out
xor
cmps
xchg
iret
mov
fmul
add
repnz
pop
stos
or
daa
lds
push
leave
mul
into
aam
(bad)
inc
mov
mov
inc
out
inc
xchg
dec
rcl
fstp
(bad)
xchg
dec
sub
in
test
mov
inc
xor
std
and
jecxz
add
into
adc
add
pop
arpl
mov
adc
pop
retf
stos
jg
stos
adc
jbe
pop
ss
inc
cdq
fwait
inc
and
mov
call
scas
jecxz
hlt
into
pop
aaa
mov
dec
js
test
int
push
sub
lds
mov
in
cmp
movs
sbb
into
jo
inc
in
std
push
imul
sbb
ins
xor
pop
inc
push
sar
inc
mov
pusha
mov
int3
iret
inc
push
fld
cmp
and
xchg
xor
sbb
je
inc
jbe
pop
xchg
or
xchg
dec
inc
icebp
shr
pop
fs
add
sub
pushf
xchg
mov
mov
mov
stos
in
xor
mov
jge
mov
push
or
mov
xor
sbb
jmp
movs
pop
cmp
jmp
or
add
cmp
push
mov
fbstp
xchg
movs
test
xlat
aaa
call
jae
daa
icebp
cmp
fucom
pushf
jle
xchg
in
call
jl
enter
xchg
out
jns
fmul
sbb
mov
cli
push
rcr
pusha
loopne
and
cmp
jmp
les
into
(bad)
mov
inc
sbb
pop
ds
or
push
adc
push
add
jo
xor
shr
stc
into
xchg
mov
sbb
cmp
sub
mov
jo
int3
cmps
aas
sti
mov
out
sahf
mov
out
cmp
cmp
cs
stc
icebp
repz
leave
int3
xchg
in
sub
and
sbb
adc
fs
and
movs
sbb
into
sbb
and
test
mov
stos
add
es
lds
sub
(bad)
pop
into
in
push
mov
adc
daa
shr
imul
test
lods
add
imul
mov
into
add
xchg
lea
xchg
sbb
pop
mov
div
or
inc
or
or
pushf
pushf
cmp
adc
fmul
scas
dec
sub
retf
jg
push
jle
jg
inc
xchg
adc
and
rcr
in
mov
and
test
or
int
leave
xchg
(bad)
cmp
in
(bad)
cmp
add
in
xchg
add
push
push
xor
xor
hlt
xlat
call
not
cmps
(bad)
in
inc
inc
iret
pop
xchg
inc
addr16
clc
(bad)
mov
sub
jg
cld
pop
hlt
inc
jnp
fiadd
ret
dec
mov
popa
outs
(bad)
push
loope
inc
mov
retf
lahf
xchg
fst
dec
dec
repz
xchg
dec
jno
dec
fisubr
sbb
lock
imul
xor
mov
daa
cmp
shl
fs
add
adc
mov
mov
imul
enter
dec
sub
aaa
cdq
sbb
pop
in
mov
jmp
inc
jne
xchg
cmp
sbb
cmp
(bad)
sub
in
xchg
xor
adc
pop
stos
add
lds
sub
leave
fisttp
jmp
dec
sub
xor
sbb
mov
sub
(bad)
jns
les
adc
push
stos
push
(bad)
out
mov
popa
xchg
sbb
sub
jmp
cmp
cld
mov
in
hlt
fs
jne
aaa
int3
push
jae
lds
cmp
loopne
sti
in
mov
pop
pop
and
jle
icebp
or
ins
push
es
sbb
es
xchg
stos
sar
cdq
lods
cmp
enter
jo
sub
jecxz
xor
scas
test
iret
retf
pop
xchg
retf
xchg
in
(bad)
int
mov
inc
cmp
add
xchg
stc
jbe
push
inc
pop
retf
outs
(bad)
jns
cmps
call
or
or
lds
push
mov
aam
ins
sub
inc
pushf
(bad)
inc
jl
mov
push
jg
add
sbb
cld
xchg
div
sbb
pop
mov
icebp
call
fisubr
ins
cmp
cs
pop
cmps
lea
and
neg
cdq
mov
mov
or
add
adc
dec
out
loopne
sub
xor
ins
add
loop
add
cmp
jge
sbb
rol
inc
cmc
aas
or
cmp
sub
cmps
mul
dec
inc
jns
movs
push
movs
loopne
outs
imul
outs
cmp
lods
jg
sahf
cmps
fwait
and
loopne
xchg
sub
jle
arpl
xchg
mov
cli
sbb
shr
lods
imul
sub
mov
jno
cdq
add
sbb
inc
mov
and
pop
cld
jbe
dec
mov
and
ins
(bad)
loop
push
pop
arpl
xchg
and
mov
ds
push
jp
or
sahf
sbb
in
mov
test
stc
retf
ror
mov
and
fbstp
cmp
int
aas
daa
mov
push
(bad)
sbb
inc
cmp
outs
ins
mov
inc
xor
arpl
call
mov
je
call
inc
cdq
jmp
les
mov
adc
rcr
add
popf
aas
sahf
and
inc
xchg
adc
push
ja
xlat
inc
mov
out
push
pop
in
push
js
fs
dec
adc
nop
ins
push
aaa
push
push
add
mov
gs
add
sti
mov
call
scas
mov
sub
fs
dec
push
in
arpl
fs
add
ret
out
xchg
addr16
imul
xchg
(bad)
mov
(bad)
and
aaa
sbb
sbb
movs
push
cld
cmp
pushw
daa
leave
js
fistp
xchg
test
scas
push
sbb
dec
mov
fstp
jb
iret
add
in
outs
jno
jnp
dec
xor
pop
mov
or
push
add
popf
mov
mov
fnstsw
data16
aaa
xor
xor
lock
sbb
call
inc
popf
repnz
out
daa
mov
sub
xchg
add
pop
pop
sbb
scas
das
sti
mov
retf
mov
test
bound
lods
inc
xor
ja
std
ror
stos
lds
inc
mov
ja
pop
sahf
(bad)
cld
add
sbb
jge
(bad)
xor
in
std
mov
push
and
jle
ror
stc
lods
fadd
in
adc
fisub
pop
lods
(bad)
aas
dec
stc
add
dec
add
bound
call
push
es
stos
mov
popf
cmp
jmp
sub
icebp
test
mov
loope
cmps
inc
imul
sahf
mov
or
gs
xchg
arpl
cmp
pop
or
popa
movs
loopne
mov
repnz
or
sub
dec
retf
sbb
push
fst
add
in
jl
aas
mov
xor
mov
sahf
fisubr
jecxz
ja
sahf
sar
addr16
fadd
push
stc
pop
loopne
clc
mov
aaa
call
lea
push
(bad)
mov
(bad)
adc
inc
pop
mov
pop
jmp
out
icebp
push
and
lock
es
imul
sbb
push
push
out
or
fcmovnb
cmp
pop
push
nop
fistp
ins
or
cli
(bad)
sti
cmp
mov
mov
cmp
fist
mov
ror
test
icebp
push
aam
lods
sbb
jg
sahf
inc
jge
mov
inc
mov
adc
pusha
or
lods
imul
mov
mov
jne
adc
sub
and
xor
sub
xor
clc
xchg
dec
leave
xchg
lea
stc
lods
ror
pop
push
or
iret
clc
pop
mov
sahf
scas
neg
not
aad
jge
mov
leave
pop
jl
cmp
sbb
out
inc
in
push
inc
add
mov
gs
cmp
movs
adc
pop
jae
jo
in
cmp
cmp
or
push
pop
cmps
mov
and
and
lahf
sbb
add
or
push
fwait
pushaw
sub
mov
cmc
ret
inc
rcr
inc
pop
pop
sbb
ror
mov
fld
adc
lahf
sahf
push
and
gs
adc
xor
movs
jnp
lods
mov
push
lds
mov
popa
xchg
or
call
sbb
fsub
pop
mov
btr
test
fwait
loope
retf
aaa
xchg
pushf
mov
push
mov
mov
xchg
push
pop
cmps
jo
fild
mov
fild
mov
mov
mov
lds
addr16
jnp
pop
bound
lds
(bad)
mov
dec
mov
inc
jl
lahf
scas
inc
ret
movs
or
pop
adc
or
retf
mov
inc
xchg
cli
dec
jb
ds
sbb
xchg
cmp
mov
nop
mov
xchg
(bad)
sub
pushf
repnz
jp
xchg
adc
les
mul
sub
inc
bound
mov
or
lods
and
xor
jo
or
push
int
iret
and
mov
popa
ror
lods
and
xchg
cmp
aad
test
mov
dec
mov
retf
pop
mov
push
mov
fiadd
pop
and
dec
push
(bad)
into
into
pop
adc
sbb
mov
mov
retf
xchg
movs
xchg
jne
dec
ret
mov
and
or
cmp
fld
mov
pop
push
sbb
and
sbb
pop
rcl
retf
or
mov
int3
pop
(bad)
mov
pusha
test
mov
int3
mov
dec
mov
pop
push
inc
int3
addr16
rcl
xlat
aam
data16
pusha
or
cmp
(bad)
rep
int3
jmp
int
dec
cdq
sub
jmp
cmps
iret
in
in
sbb
lock
loope
xor
sahf
(bad)
cmp
(bad)
jbe
jl
mov
dec
mov
cli
jl
in
cmp
jmp
out
jnp
xor
xchg
xchg
mov
imul
es
dec
and
ss
or
(bad)
fstp
hlt
ins
js
inc
and
cmp
xlat
popf
ss
popf
stc
fdiv
or
addr16
dec
mov
inc
pushf
mov
xor
je
pop
jne
shr
mov
rcr
push
mov
sbb
pop
sub
fisubr
enter
(bad)
in
rcr
ror
mov
dec
mov
frstor
xor
add
test
dec
sbb
xchg
or
add
cmp
mov
clc
jae
dec
int3
xor
test
pop
lahf
(bad)
sub
jb
fcomp
stc
sub
rol
das
inc
add
pop
xchg
jle
and
dec
add
lods
aad
xor
mov
(bad)
in
ja
adc
cmp
add
fs
ffreep
cmp
inc
in
mov
cli
lea
outs
pop
dec
addr16
push
mov
stos
std
jo
cdq
adc
dec
pop
mov
neg
or
outs
pusha
mov
cmp
adc
jmp
mov
imul
mov
fst
mov
cmps
jmp
xchg
pop
add
push
pop
jne
xchg
dec
or
inc
dec
test
inc
mov
mov
aas
ja
mov
sub
mov
call
xchg
js
cmp
pop
ins
push
loop
icebp
add
sub
iret
pop
or
cmp
retf
add
xor
dec
stos
fdiv
call
lds
pusha
loop
xchg
mov
dec
aam
cmp
cli
mov
int3
mov
mov
or
adc
cmc
(bad)
repz
sbb
and
or
je
sub
js
and
or
pmulhw
jl
inc
in
xlat
enter
or
ds
rcr
cmp
cmp
or
push
xchg
adc
push
and
lods
cmp
stc
into
popf
add
rcl
push
push
pop
dec
and
imul
std
pop
adc
mov
ret
xchg
sbb
lods
(bad)
fldenv
inc
(bad)
outs
add
hlt
in
fwait
pop
fwait
ins
push
mov
mov
or
sub
mov
sub
bound
sahf
inc
xor
xor
call
vfmsubadd213pd
sub
ins
xor
out
pop
xlat
out
jecxz
stos
call
xchg
xchg
jmp
adc
mov
xchg
lock
fcomp
jmp
and
dec
shl
retf
sbb
add
jmp
lods
xchg
or
in
clc
jb
sub
scas
shl
je
xchg
jne
out
les
mov
test
je
stc
xchg
pop
popa
xor
and
jbe
cmp
cmp
test
std
sub
in
add
push
push
jmp
fs
test
loop
pop
out
cmp
lahf
mov
int
inc
in
pop
push
mov
or
jno
mov
xchg
xor
xchg
movs
jg
cmc
aad
in
push
adc
jne
pop
add
das
xchg
ss
dec
loop
outs
jns
aas
xchg
(bad)
leave
sar
neg
add
rcl
push
ds
shl
imul
cs
rcr
add
sti
pop
mov
jmp
lds
imul
mov
jbe
hlt
xchg
cmp
mov
imul
sub
and
outs
mov
cmp
test
clc
jecxz
mov
call
cli
aas
adc
(bad)
fstp
dec
shr
add
cmp
clc
stos
imul
mov
repnz
jge
cmp
cwde
popa
movs
les
(bad)
aad
inc
jmp
shr
pop
fidiv
push
outs
les
(bad)
pushf
or
xor
adc
sbb
and
fldenv
xchg
lods
add
mov
jp
(bad)
mov
lock
in
(bad)
out
inc
cmps
jb
lock
add
mov
in
aam
adc
imul
outs
add
ror
mov
pop
hlt
mov
popf
in
add
addr16
sbb
ret
ins
lahf
mov
inc
mov
out
loopne
xchg
outs
cmp
imul
mov
out
test
sub
daa
(bad)
sub
xor
popa
jno
in
fisttp
imul
movs
or
or
sbb
in
(bad)
mov
add
inc
fwait
jg
push
xchg
mov
pushf
mov
or
stos
in
ins
xchg
dec
inc
add
aam
adc
mov
cmp
push
xchg
sub
sbb
push
xor
cmps
repnz
in
push
mov
(bad)
pusha
xlat
adc
jmp
add
push
pop
es
retf
cwde
outs
xor
retf
mov
gs
call
add
scas
mov
hlt
adc
push
imul
leave
add
cmp
lods
jno
dec
jb
pop
or
scas
jnp
jmp
loope
add
pop
retf
aas
ret
adc
dec
test
pop
out
and
add
mov
imul
xor
sbb
xchg
imul
jle
cdq
xor
out
ja
imul
not
sbb
ds
inc
push
xchg
sbb
jae
aas
mov
push
sbb
jle
sahf
mov
cmp
int3
mov
cmp
cld
(bad)
fmul
sub
sub
(bad)
(bad)
and
pop
xchg
jmp
out
jmp
ss
sbb
xor
test
dec
push
push
(bad)
sbb
dec
pop
lock
cmp
pop
push
js
ss
jmp
outs
out
cld
cdq
fadd
imul
stos
pusha
mov
sbb
nop
outs
je
addr16
or
aad
dec
shl
mov
fnstsw
push
dec
(bad)
scas
and
add
adc
cmp
in
not
in
inc
sub
dec
xor
ret
dec
sbb
popf
jecxz
sar
sub
lahf
stc
das
mov
call
jne
setae
dec
enter
scas
mov
cmp
stos
mov
or
mov
inc
loope
and
es
iret
jle
jl
loop
dec
mov
jle
or
inc
mov
into
lods
in
push
mov
or
add
(bad)
ficomp
and
pop
ins
mov
pushf
mov
icebp
imul
jge
or
arpl
adc
imul
inc
loopne
jns
cmps
cmp
movs
ss
in
mov
(bad)
jmp
ss
pop
ret
es
mov
retf
sbb
dec
pop
fdiv
sahf
in
adc
inc
leave
and
int3
test
fs
and
gs
int
retf
inc
push
pop
inc
push
or
pop
mov
clc
rol
dec
pop
mov
into
jnp
xchg
sub
mov
ror
call
icebp
ds
jecxz
fwait
adc
cmp
and
pop
movs
popf
jl
rcl
imul
cwd
add
ins
retf
adc
inc
sub
or
cmc
not
cli
pop
push
in
cmp
cmp
inc
mov
call
mov
adc
xchg
call
adc
sbb
inc
pop
mov
push
mov
shl
xchg
pop
imul
add
jge
mov
std
(bad)
rcr
fisubr
dec
push
out
mov
sub
add
imul
and
in
mov
pushf
sbb
add
xchg
movs
inc
(bad)
ds
cmp
clc
std
sahf
adc
add
jb
or
jl
bound
addr16
or
inc
xchg
xchg
add
mov
add
bt
or
sbb
idiv
sar
pop
push
adc
mov
cmp
(bad)
(bad)
lods
sti
sbb
cld
aaa
pop
out
mov
push
stos
sub
fsin
jnp
push
cwde
xchg
jno
adc
xor
dec
rep
mov
adc
add
xor
jb
and
lods
push
das
add
adc
inc
adc
es
pop
sbb
xchg
repnz
outs
pop
inc
jge
add
mov
dec
aaa
push
push
mov
xor
mov
sbb
sar
les
in
cmps
repz
ja
icebp
pop
push
or
cwde
mov
jmp
dec
retf
ret
jl
mov
sub
ds
push
jp
ror
mov
les
pop
fidiv
outs
and
dec
test
rcl
xchg
fisub
xchg
outs
je
fdivr
test
pop
out
fdiv
in
rol
xchg
xor
icebp
imul
add
mov
inc
je
mov
pop
xor
mov
xchg
mov
(bad)
push
imul
mov
in
mov
mov
dec
rcr
bound
adc
mov
mov
ffreep
sbb
inc
pop
repz
or
add
out
inc
out
cli
scas
fsub
cmp
sbb
xlat
or
inc
movs
and
cwde
daa
(bad)
ds
lods
(bad)
stc
popa
push
les
mov
ins
jb
sbb
xchg
adc
xchg
mov
and
push
mov
adc
hlt
lods
pop
outs
out
lods
retf
and
int3
dec
repnz
mov
je
jg
xchg
div
test
stos
jg
adc
fstp
es
mov
and
adc
jmp
push
fnstenv
adc
ret
mov
(bad)
cld
xchg
jmp
stc
aam
ds
push
adc
xchg
mov
arpl
pusha
mov
cmps
sar
lods
sahf
push
popa
movs
ins
call
cmp
(bad)
cmp
push
add
jmp
lea
mov
jbe
push
retf
cli
sbb
jae
clc
stc
fs
and
nop
movs
xchg
jno
inc
fisubr
push
outs
dec
cs
and
test
in
dec
fwait
clc
popa
push
popa
pop
xor
pop
mov
cwde
inc
mov
jmp
fnsave
push
sub
sub
nop
jno
jecxz
mov
in
imul
stos
fs
std
dec
repnz
(bad)
pop
or
cmps
mov
push
mov
push
(bad)
je
lock
or
xor
xor
shr
in
xchg
dec
xchg
and
dec
out
jbe
movs
std
jno
push
xor
(bad)
cmps
jl
push
jns
inc
ds
push
cmc
fyl2xp1
sub
cmps
lock
cmps
adc
pop
scas
stc
(bad)
adc
pusha
imul
(bad)
test
dec
pushf
dec
(bad)
add
pop
stc
mov
(bad)
mov
iret
dec
xor
retf
sub
std
shl
mov
daa
call
jo
call
pop
mov
(bad)
retw
mov
adc
fist
gs
cmp
push
sbb
pop
cmovne
les
and
or
ffreep
mov
add
cmp
inc
adc
xor
sbb
xchg
ret
cwde
sbb
adc
sub
dec
je
mov
ret
ja
jmp
(bad)
mov
or
outs
sti
or
in
in
sti
lods
sub
jno
gs
inc
int3
or
and
jle
inc
mov
sub
ja
iret
pusha
icebp
or
lods
add
fwait
sbb
add
dec
mov
sub
jns
(bad)
mov
movs
aad
sub
scas
add
pusha
dec
aad
imul
popf
xchg
pop
sbb
mov
push
out
adc
pop
iret
ret
add
xchg
shl
push
call
mov
xchg
pop
retf
repz
add
lods
xor
cmp
jg
adc
fbld
jmp
daa
cmp
jl
jle
xchg
(bad)
cmc
stc
(bad)
popf
sub
pop
xchg
lods
shl
or
or
inc
sahf
std
cdq
sbb
cmp
imul
or
cdq
push
adc
adc
retf
xchg
arpl
fdiv
adc
push
aad
mov
sbb
sti
sbb
daa
push
jg
push
sbb
jle
push
sbb
retf
inc
pop
call
mov
(bad)
inc
dec
test
adc
jns
fwait
loope
mov
ss
fnsave
movs
cld
iret
mov
sar
imul
push
fmul
pop
mov
or
(bad)
mov
leave
repnz
stos
mov
js
cmp
ficom
mov
or
loopne
lock
lods
jb
mov
bt
xor
ins
dec
scas
imul
sahf
cmc
icebp
mov
xor
jb
pop
nop
in
arpl
(bad)
dec
(bad)
pop
sti
mov
sub
dec
jle
xchg
add
dec
fmul
std
dec
pop
outs
xor
xchg
fdiv
popf
jl
dec
mov
lea
fwait
xchg
(bad)
jb
xchg
call
dec
cmp
sub
nop
aad
out
aam
std
in
call
pop
push
or
(bad)
in
icebp
ds
ins
sbb
xchg
pop
dec
sar
call
mov
out
mov
xchg
arpl
div
add
std
jae
ins
addr16
mov
mov
faddp
push
push
jb
xor
test
leave
rol
push
or
cli
clc
rcl
sbb
jg
ins
repz
pop
ret
push
std
mov
push
es
and
fistp
fisttp
aam
rol
mov
mov
push
mov
ja
xor
stos
jns
push
popf
mov
jl
pop
push
push
movs
ins
sbb
push
push
cmp
push
aas
push
cmc
dec
jp
push
enter
pop
les
xchg
push
movs
pushf
mov
arpl
std
outs
xchg
fild
bound
jns
nop
lods
mov
xchg
mov
sbb
jo
inc
imul
inc
lods
pushf
imul
fwait
push
cld
data16
std
enter
aam
mov
push
aad
pop
cmps
fwait
mov
push
mov
sub
xchg
in
ss
stos
retf
ja
dec
adc
sub
jmp
lahf
cwde
ds
dec
cdq
out
daa
push
ins
pop
pop
popa
mov
int
pop
popf
lods
jle
aad
mul
(bad)
cmc
jo
mov
lea
xor
pop
mov
in
sbb
adc
mov
inc
xor
xchg
rol
test
je
mov
or
ret
fnstcw
out
outs
cli
inc
mov
cmc
aaa
ins
mov
add
jge
pop
or
addr16
js
cmps
xor
clc
mov
mov
movs
xlat
stos
hlt
aaa
std
fisttp
ins
sti
xor
repz
enter
daa
lock
dec
sti
jne
push
loop
push
arpl
out
cmps
lods
sub
pop
xor
ret
int
or
push
ins
jo
out
pop
movs
jp
sub
mov
jmp
sub
adc
mov
adc
xor
out
adc
outs
jns
fcomp
push
xchg
sbb
or
ret
xor
mov
adc
iret
mov
loopne
and
test
movs
repz
test
mov
dec
sbb
mov
fucomi
call
in
adc
lods
sahf
std
mov
add
shr
inc
gs
dec
jne
cdq
aaa
cwde
fwait
cmc
ss
jno
xor
mov
and
cdq
or
popa
sti
add
clc
cdq
sbb
push
cmp
mov
ss
push
inc
clc
jb
inc
stc
out
jmp
dec
sbb
xor
jmp
xor
mov
test
out
inc
jecxz
push
lds
mov
pushf
sahf
leave
push
jge
call
not
sbb
pusha
es
aam
movs
js
and
inc
push
test
je
xchg
jnp
mov
daa
adc
je
test
and
add
mov
jg
stos
and
mov
mov
sahf
stos
into
jmp
cld
mov
jnp
mov
adc
or
int3
retf
fcomp
sub
add
sbb
fild
cmp
popf
cmps
ret
fstp
jne
dec
fadd
add
xchg
clc
imul
xchg
add
cli
fcmovbe
dec
js
adc
loop
sbb
add
aaa
ins
hlt
sub
or
loop
push
repz
leave
sar
test
sbb
adc
shl
fcmovne
mov
push
xor
rcl
adc
cwde
inc
shl
xlat
movs
addr16
or
cmp
push
mul
sub
and
clc
push
sub
mul
shl
sub
sbb
mov
ins
push
jmp
or
xchg
add
inc
mov
in
mov
dec
popf
sub
mov
(bad)
cmp
mov
in
jmp
dec
arpl
test
pop
pop
retf
jnp
hlt
and
mov
pusha
sbb
jg
xchg
cld
nop
cld
push
sub
cmp
and
fcom
jge
jl
hlt
hlt
pop
ror
je
ja
outs
xlat
jge
dec
out
push
(bad)
aaa
jle
pushf
adc
test
aas
or
retf
sub
push
int
sub
fmulp
jg
(bad)
mov
sub
icebp
in
(bad)
in
jge
lock
test
cmp
sub
pop
jne
mov
fsubr
(bad)
out
xlat
jne
adc
or
jecxz
mov
xchg
inc
sub
aas
xor
sub
xchg
pop
cmp
add
xor
enter
push
cmp
sahf
jmp
mov
add
ret
or
sbb
repnz
popa
jns
not
fnstsw
lock
outs
sahf
cmc
and
cli
push
enter
adc
(bad)
loop
std
(bad)
ds
aas
push
jnp
retf
fcmovnbe
mov
push
adc
movs
test
enter
mov
(bad)
ja
repnz
push
xor
mov
aaa
sbb
cmp
pop
mov
test
or
sub
mov
xor
mov
pop
movs
das
push
or
(bad)
push
mov
icebp
dec
cdq
stos
inc
push
pop
sbb
repnz
jno
or
dec
and
fstp
add
jnp
mov
outs
lahf
xchg
sbb
pop
test
stos
or
pop
aam
daa
dec
xchg
aaa
adc
(bad)
mov
or
push
adc
sar
or
out
xchg
fld
xor
dec
add
or
icebp
mov
jns
into
pop
test
es
sbb
xchg
sbb
fstp
(bad)
fistp
lea
push
lds
or
mov
push
pusha
lds
add
fs
dec
or
adc
imul
push
jmp
sub
scas
inc
push
lock
and
xchg
sbb
nop
lea
dec
ret
sbb
fwait
sub
dec
shl
xor
dec
and
js
fisub
loope
push
xor
shl
test
sub
mov
and
(bad)
nop
sbb
mov
lods
push
inc
shl
sub
lds
cmp
add
int
imul
retf
xchg
mov
in
test
outs
push
cwde
int3
xor
pop
push
call
lds
(bad)
sbb
adc
inc
mov
lods
dec
push
or
xchg
cmps
or
js
ret
dec
vcmpps
push
adc
or
bound
jbe
push
and
(bad)
push
push
mov
pop
dec
xor
hlt
sbb
repz
int3
sbb
neg
bound
in
sub
mov
out
cmp
cmp
mov
add
test
push
push
jo
(bad)
stos
aaa
retf
call
data16
pushf
and
pop
mov
jnp
out
sbb
aaa
dec
test
das
loopne
(bad)
fwait
dec
(bad)
movs
jno
ret
sahf
sahf
ja
add
or
mov
in
push
mov
rol
les
in
adc
mov
mov
xchg
pop
test
xor
mov
adc
sahf
js
xor
mov
imul
aas
aas
test
push
loop
mov
arpl
out
xchg
fsubr
adc
sub
fwait
scas
push
xor
inc
stc
es
inc
sbb
in
xor
sbb
xchg
cmp
jmp
and
imul
outs
cmp
out
dec
mov
je
loope
xchg
fidiv
mov
int
jae
in
sbb
or
enter
or
pop
mov
xchg
adc
add
and
jno
mov
jmp
add
or
test
jno
jecxz
cmp
or
sub
mov
leave
cmc
es
adc
ret
sbb
in
ds
pusha
jae
xor
cld
jmp
xchg
jle
and
xlat
mul
add
les
lods
pop
sub
mov
inc
iret
rol
push
mov
jo
push
(bad)
push
add
push
and
lahf
xor
mov
push
call
cdq
adc
cmp
test
dec
pop
mov
cmp
pop
adc
scas
in
in
scas
lea
sti
jg
sbb
int3
xchg
mov
sbb
fs
adc
mov
in
xor
mov
add
push
mov
cmp
icebp
jle
push
sub
xchg
and
(bad)
jmp
add
and
mov
jmp
cdq
call
mov
xor
out
movs
into
out
cmp
push
(bad)
lds
mov
inc
jmp
xchg
loope
push
inc
cmp
and
jp
cmp
sub
gs
jle
pop
adc
jg
std
adc
scas
addr16
push
dec
ret
ret
add
or
dec
in
repnz
mov
ret
push
xor
call
movs
repz
lods
fld
bound
ds
add
inc
int3
test
sub
xchg
lods
sbb
xchg
mov
dec
adc
mov
jns
sbb
adc
fdiv
xor
adc
sbb
fxch
mov
les
test
ins
(bad)
int3
mov
jno
jg
sti
add
test
cli
cmp
xor
cli
and
jo
mov
fisub
pop
ds
repnz
out
jp
pop
add
int
sbb
lsl
mov
rcl
cmp
mov
popf
dec
adc
or
jge
jle
popf
cmp
adc
iret
ret
dec
in
push
stos
xor
hlt
xor
das
push
popf
mov
dec
pop
ins
cmp
push
leave
scas
pop
push
in
jns
stos
or
mov
pop
inc
push
mov
rcl
push
cmp
addr16
lahf
or
add
call
cmps
and
mov
jne
ja
test
hlt
mov
mov
ror
mov
push
xchg
mov
mov
cmp
rcr
mov
xchg
aad
imul
xchg
mov
push
cmp
jb
pop
(bad)
cmps
mov
inc
in
or
push
pop
mov
push
adc
fidivr
retf
je
mov
or
hlt
leave
imul
add
dec
dec
out
test
gs
lods
or
adc
scas
std
xchg
dec
cmp
dec
xlat
sub
push
dec
mul
div
mov
pop
mov
outs
jb
lahf
jns
xchg
xlat
push
cwde
sub
(bad)
(bad)
xlat
sub
pop
lds
mov
ds
repnz
mov
sbb
jnp
ins
adc
ss
xchg
sub
movs
add
call
int
lea
test
xchg
xor
sub
addr16
jp
mov
scas
les
xor
mov
and
imul
dec
ret
xchg
lods
or
int
loop
retf
add
je
jecxz
inc
loopne
sbb
dec
or
sbb
cmps
aam
hlt
int3
dec
mov
imul
jle
mov
das
and
adc
and
sub
das
ja
outs
bound
xor
pop
push
cmp
popf
pop
cli
push
push
stos
aam
gs
int
jecxz
loop
jecxz
mov
aam
sub
pop
adc
mov
cmp
pop
(bad)
push
push
push
lods
mov
mov
add
in
cmp
dec
(bad)
xor
xor
fld
mov
sbb
mov
cmp
fisttp
in
adc
inc
dec
lods
jle
mov
cli
and
and
mov
mov
or
cmc
ret
push
vmovdqa
cld
or
gs
dec
cli
add
add
into
retf
nop
mov
nop
js
shl
imul
shl
retf
(bad)
out
add
fldcw
mov
stos
in
aas
imul
mov
dec
lock
outs
and
cmp
mov
mov
xchg
mov
mov
test
sub
lods
adc
mov
sbb
int3
mov
jle
hlt
cdq
rcl
mov
popf
cmp
call
sbb
cmc
repz
add
dec
sub
pop
push
push
add
or
retf
sar
fsubr
pop
dec
call
mov
lock
enter
popa
hlt
push
sub
aas
mov
sbb
(bad)
jnp
or
nop
mov
jo
cmps
and
sbb
xrelease
scas
push
xchg
sbb
add
shr
mov
jne
lahf
loope
pop
test
in
repz
jb
xchg
or
call
sub
jo
push
pop
dec
lea
pop
xchg
pop
ret
lahf
test
cld
ficom
mov
pusha
xor
test
imul
inc
retf
xchg
(bad)
mov
and
push
jge
xchg
popa
pop
push
push
dec
inc
jg
cwde
loope
xlat
test
lods
(bad)
add
or
xchg
test
xchg
or
je
sbb
pop
iret
xor
rcr
sub
pop
(bad)
movs
or
cmc
push
imul
add
mov
jge
push
in
hlt
shl
shl
int3
and
mov
stc
lock
cmp
stos
sahf
shl
xchg
mov
pop
mov
clc
aaa
ja
xchg
adc
jp
pushf
sbb
pop
call
popa
movs
test
int
sbb
add
(bad)
sti
add
leave
jnp
or
aaa
push
cmc
clc
cmc
jo
adc
add
jnp
inc
mov
jle
outs
xchg
(bad)
enter
cmp
xchg
retf
aad
loopne
arpl
dec
add
sbb
retf
fild
adc
test
hlt
pop
pop
xor
sbb
ror
and
shr
adc
es
movs
jb
push
pop
xor
stc
ins
fsubr
adc
mov
movs
cmp
jecxz
push
pop
mov
nop
repnz
inc
scas
out
in
das
xchg
es
or
add
adc
retf
ret
pop
push
rcl
xor
(bad)
out
cmc
cmp
mov
pop
cmc
pop
das
pop
clc
mov
dec
cmpps
xor
pusha
xchg
movs
(bad)
cmp
xor
stos
sbb
mov
xchg
cwde
dec
inc
or
dec
push
cmp
je
fs
push
xchg
repnz
in
jb
jne
jp
cld
aas
cld
enter
jo
or
or
push
inc
out
or
fimul
cwde
push
loopne
sub
dec
push
mov
aaa
push
mov
aaa
stos
outs
push
ins
xchg
push
mov
ret
(bad)
call
mov
xor
inc
sub
(bad)
mov
xchg
jg
fild
push
pushf
ret
fistp
and
scas
push
sar
fild
pop
sar
arpl
push
cmp
inc
sub
push
dec
imul
adc
push
call
mov
xchg
ss
mov
lock
arpl
pop
lds
cli
add
pop
addr16
movs
sub
add
stc
mov
jge
push
aaa
jb
pop
inc
scas
push
xchg
push
or
pop
add
xor
(bad)
aad
xchg
mov
sbb
fdiv
pop
ret
mov
in
mov
xor
xlat
xchg
fdiv
fabs
inc
add
adc
in
leave
mov
push
test
mov
inc
mov
cmp
ss
push
mov
adc
repz
ret
leave
cld
rcr
xchg
inc
sbb
add
test
test
mov
fbstp
push
adc
mov
shl
lods
retf
stos
(bad)
fs
push
or
ss
jbe
adc
inc
push
mov
aad
mov
pop
imul
lahf
aam
cmps
and
call
lods
xchg
iret
add
xchg
lock
or
call
loopne
inc
sbb
ja
cmp
cmp
pop
call
cmps
jecxz
ds
stos
mov
imul
mov
sbb
ficomp
mov
adc
jnp
out
lock
inc
sub
dec
cmp
jo
imul
je
(bad)
stos
pushf
mov
cwde
loop
or
sahf
inc
inc
adc
sbb
loopne
(bad)
dec
es
ins
xor
in
add
and
jmp
test
inc
shl
leave
xchg
sti
loope
icebp
addr16
jecxz
(bad)
aam
sbb
sti
pop
and
neg
push
pop
into
in
(bad)
cmp
adc
mov
push
gs
(bad)
mov
jo
in
cwde
lods
or
cmp
lea
dec
paddw
ret
stos
inc
adc
xchg
push
sti
mov
stos
jecxz
out
xchg
(bad)
lods
xor
jno
cwde
ins
inc
jo
jecxz
out
push
and
out
push
mov
call
out
js
or
outs
(bad)
pop
sbb
addr16
es
out
mov
and
xor
in
xchg
(bad)
cmp
or
xor
pop
dec
cmp
mov
lods
into
dec
push
(bad)
add
push
repz
mov
dec
aas
add
xor
dec
cmps
add
xor
sahf
add
or
in
jne
pop
jnp
mov
mov
ror
jbe
rol
and
(bad)
out
call
sub
inc
call
movs
xor
jae
inc
outs
and
dec
lahf
mov
sbb
inc
out
je
jmp
or
push
rol
xchg
push
pop
adc
xchg
jl
inc
mov
push
pop
call
cmc
mov
inc
pop
sub
aam
adc
pop
push
push
fisubr
jmp
ins
pop
cmp
pop
pusha
sbb
mov
jnp
iret
push
or
mov
pop
call
popf
sub
adc
retf
aaa
rcr
cdq
adc
jae
les
and
adc
jg
pusha
xlat
add
ss
pop
bound
push
sar
out
in
push
pop
repnz
stos
lds
int3
enter
push
shl
sub
aam
mov
clc
loop
inc
in
push
xchg
mov
arpl
fwait
cs
adc
inc
jle
push
in
lock
gs
aaa
arpl
cmp
and
jbe
pushf
in
mov
mov
add
cmp
pop
lods
mov
into
arpl
out
pop
xchg
icebp
xor
inc
loopne
test
stos
cmp
sti
add
nop
xchg
sub
or
pushf
retf
iret
out
and
dec
adc
js
and
inc
std
lods
cwde
push
mov
and
cmp
pop
jecxz
jno
sbb
mov
fnsave
or
fnstsw
(bad)
push
data16
jg
retf
stc
mov
ja
xchg
and
retf
cmp
(bad)
mov
xor
xchg
scas
cmps
aaa
pop
mov
shl
stc
jbe
inc
aas
jg
add
cmc
enter
cmp
adc
fwait
repnz
sahf
pop
test
es
sub
jae
xchg
sub
test
arpl
scas
or
sbb
cmp
sub
aam
sbb
fisub
movs
jmp
sbb
cwde
ins
push
ret
outs
xor
push
mov
in
mov
adc
(bad)
int3
shl
pop
cld
sub
aaa
cmp
and
jnp
jp
dec
pavgb
inc
addr16
sbb
sub
dec
and
leave
jmp
xchg
js
out
fdiv
xor
sbb
jmp
add
pusha
pop
retf
ins
xchg
test
ret
in
popf
adc
shl
cmps
pop
(bad)
in
outs
loope
sub
dec
fst
cmp
xor
aad
imul
frstor
xor
fst
and
pop
xchg
pusha
inc
pop
xor
movhps
ret
int3
pop
mov
inc
xchg
and
outs
pop
inc
dec
xchg
out
(bad)
rcr
sub
leave
cmp
dec
cs
pop
lahf
loopne
inc
test
(bad)
push
dec
mov
das
cmp
xchg
pop
test
sbb
jo
cmp
div
xchg
adc
xchg
adc
sub
ret
inc
add
loop
sti
inc
ds
and
dec
imul
shl
mov
or
pop
add
pop
into
push
ja
std
sub
gs
dec
pop
xchg
jns
cmp
dec
dec
jmp
xor
js
div
sti
das
jae
mov
sbb
fiadd
mov
adc
aas
mov
test
xor
test
dec
(bad)
cmp
xchg
aam
sub
stos
cmp
not
aam
rol
push
rcl
ss
xlat
mov
adc
push
add
xor
fimul
mov
xchg
push
es
rcr
lods
leave
xchg
mov
into
out
lahf
ror
iret
jecxz
repnz
movs
addr16
daa
(bad)
jge
or
cli
cdq
add
mov
ss
in
cmp
mov
gs
retf
mov
pushf
into
aaa
jns
pop
cmp
jbe
xchg
dec
ins
sbb
fidivr
push
pop
(bad)
in
mov
inc
mov
cmp
or
add
bound
xor
repz
sub
mov
iret
pop
popf
push
leave
std
scas
gs
sar
fcom
sar
mov
cmp
pushf
or
lds
das
cmp
jmp
das
pop
xchg
stos
push
mov
mov
daa
xchg
xchg
jge
xor
bound
push
ror
mov
dec
adc
mov
lods
pop
dec
sub
mov
dec
push
lahf
popf
int
pop
stos
sub
jo
lahf
and
in
rcl
lahf
mov
fld
mov
mov
pop
jl
lods
and
xchg
dec
push
test
repz
popf
ret
dec
fsubr
into
imul
add
loop
pusha
in
mov
stos
and
or
ins
fwait
push
sub
sub
xchg
ret
mov
sub
out
iret
fwait
mov
and
push
(bad)
loope
sar
jmp
pop
cmp
mov
or
mov
call
xchg
xor
outs
scas
nop
popa
aaa
jle
push
and
sub
pop
out
bound
retf
lods
stos
add
sub
xchg
pop
push
stos
fdivp
jns
sub
inc
xor
mov
pop
dec
cmp
fsubr
pop
mov
cmp
push
int
xlat
popf
(bad)
push
xor
loope
sub
mov
mov
test
or
jg
sbb
dec
inc
cmp
pop
clc
sub
pop
sub
pop
push
sbb
sbb
jle
jg
push
aad
iret
je
xor
pop
mov
ja
sub
push
cmp
pushf
sub
loope
cs
out
in
retf
aad
mov
sbb
or
or
movs
push
push
jl
xchg
xchg
neg
stos
adc
sub
pop
xchg
mov
ror
jl
sbb
enter
fdiv
mov
push
cdq
sbb
pop
loop
xor
(bad)
ins
xchg
xor
ja
ret
push
fsubr
ffreep
in
div
cmp
jmp
outs
shr
fs
dec
push
cmp
in
repz
out
pop
fnstcw
or
mov
outs
ja
inc
pop
push
mov
call
xchg
ins
les
jo
and
(bad)
mov
int3
lahf
sahf
arpl
(bad)
ror
push
inc
xor
or
mov
inc
in
out
hlt
sbb
retf
or
scas
push
mov
rcr
jno
data16
adc
mov
(bad)
fsub
retf
scas
ror
loopne
sbb
jmp
imul
lea
xchg
pop
call
mov
pop
cmps
test
(bad)
jl
dec
dec
or
pop
xchg
push
dec
je
cmp
shl
and
mov
fadd
in
lods
cmp
xor
ret
lds
cmc
shl
leave
lea
sub
jo
test
jae
or
or
jne
psrld
inc
(bad)
fnstenv
scas
scas
jnp
mov
ins
or
add
outs
sub
push
call
xchg
push
xchg
xor
popa
mov
adc
mov
retf
inc
iret
cmps
inc
sbb
mov
cmps
jl
leave
dec
ror
xor
loopne
dec
inc
adc
xor
imul
in
(bad)
icebp
clc
cmp
dec
or
std
fcomp
retf
or
aad
gs
ret
sbb
dec
ja
(bad)
cwde
jge
xlat
push
in
movs
jl
pop
pop
call
or
dec
fsubr
out
pop
dec
pop
fldcw
dec
inc
in
jl
xor
inc
sub
jle
mov
xlat
or
cmp
push
outs
push
xchg
and
cdq
test
bswap
movs
in
daa
or
push
jno
inc
dec
xchg
fld
lods
icebp
inc
les
pop
retf
int3
fild
sub
ret
push
xchg
inc
frstor
mov
adc
xor
push
inc
xchg
sbb
repnz
push
cmp
cmps
out
shl
(bad)
call
dec
jge
mov
rcl
test
mov
add
or
je
in
or
es
out
mov
dec
nop
jmp
mov
shl
push
ja
imul
call
fimul
frstor
(bad)
or
mov
fisttp
aam
mov
clc
ins
mov
or
jmp
arpl
lods
xchg
jge
arpl
lods
mov
lods
out
inc
test
stos
jno
in
cwde
fwait
das
repnz
loop
into
dec
icebp
mov
aaa
xchg
fbstp
pop
mov
pop
fstp
push
cld
adc
sar
mov
(bad)
push
sub
call
imul
je
adc
mov
(bad)
mov
out
repz
inc
imul
dec
loop
loop
pop
or
lea
push
ds
(bad)
(bad)
jle
push
leave
inc
test
xor
stc
retw
dec
push
xchg
vfnmsub132ss
xchg
fiadd
test
xchg
lock
add
cli
mov
add
cld
mov
mov
mov
unpckhps
test
inc
sub
xchg
adc
and
(bad)
loopne
fs
xchg
nop
(bad)
sub
ja
cli
out
fwait
js
nop
int3
or
sbb
mov
sub
or
ja
sahf
aaa
pusha
and
cld
pusha
ins
out
xchg
(bad)
cli
mov
movs
jmp
loopne
add
jp
ss
popa
retf
pop
leave
adc
jle
cmp
into
es
jo
mov
arpl
sub
ss
test
sbb
cmc
mov
test
lods
dec
xor
cmp
push
inc
dec
add
and
aas
retf
sar
adc
jecxz
xor
cli
jmp
iret
call
sbb
sar
enter
scas
dec
test
ret
mov
or
(bad)
outs
shr
sbb
jecxz
mov
cdq
mov
mov
xchg
movs
adc
and
test
xor
xchg
test
sahf
mov
mov
in
mov
sub
sbb
sahf
push
sbb
addr16
xor
adc
imul
mov
call
push
mov
push
jae
sub
sahf
sub
jge
pop
pop
movs
(bad)
fidivr
cs
inc
dec
loopne
repnz
in
push
push
add
xchg
stos
mov
fistp
pushf
cdq
xchg
or
sbb
mov
daa
inc
push
scas
xchg
(bad)
adc
out
ja
outs
or
pushf
mov
cmp
out
cmps
fisubr
sbb
add
(bad)
fucompp
cwde
sub
inc
and
or
xchg
cmc
outs
adc
das
pushf
pop
and
push
pop
push
sbb
or
out
xlat
jb
add
pusha
pop
pop
inc
xchg
pushf
cmp
lods
xor
pop
mov
adc
and
jp
stc
test
cwde
fsubp
and
test
frstpm(287
sahf
xlat
ficom
and
push
pop
xor
pusha
stc
adc
mov
(bad)
in
inc
adc
mov
dec
xchg
xor
test
shr
mov
cmps
std
adc
sbb
gs
mov
sub
push
retf
inc
mov
fucom
sbb
in
sub
sbb
shr
scas
and
sub
das
sahf
push
push
addr16
outs
hlt
out
popf
in
fcom
and
or
cdq
sahf
xchg
mov
xchg
dec
ror
pop
movs
xchg
in
adc
(bad)
lods
fs
mov
adc
mov
aam
clc
pusha
mov
repnz
(bad)
js
sub
call
jg
and
cdq
xlat
cs
xchg
in
sub
xchg
xlat
repnz
js
and
scas
setge
mov
jmp
inc
das
push
icebp
sbb
pop
outs
sbb
in
xchg
adc
cdq
div
mov
mov
push
push
aas
xchg
loop
ds
and
push
or
mov
push
data16
dec
cmps
dec
je
call
int
iret
hlt
repz
xchg
shl
adc
cmps
fmul
aaa
fxch
iret
sbb
dec
(bad)
aaa
dec
dec
loop
mov
jb
iret
mov
mov
dec
cli
fisub
(bad)
adc
(bad)
test
mov
out
inc
fimul
push
mov
cmps
inc
cs
cs
sbb
push
(bad)
xlat
jne
push
pop
push
add
xchg
stc
mov
jae
pop
mov
jge
adc
mov
and
cmp
js
leave
push
cmps
jne
stc
ins
sub
popf
add
sub
icebp
jo
enter
out
in
clc
mov
popf
xchg
pop
cli
xor
pop
out
cmp
sbb
mov
cmps
cmp
mov
nop
iret
cwde
mov
js
(bad)
push
inc
cld
imul
test
push
outs
jle
fdivrp
retf
cmp
test
scas
stos
sbb
jns
test
mov
(bad)
cmc
outs
iret
sub
cwde
cld
sbb
xor
lods
imul
push
bound
inc
int3
mov
cmp
int3
dec
fwait
dec
jge
cmps
rol
clc
ins
in
popf
jl
mov
cmc
xchg
ja
enter
cmp
loopne
jno
xchg
cmp
pop
or
lock
cmc
loop
les
imul
in
lds
arpl
cmc
shl
cmp
in
lods
in
loope
movs
hlt
mov
lds
inc
mov
jg
data16
jl
test
loope
add
mov
int3
adc
sub
sub
sti
inc
stos
mov
fiadd
stos
mov
test
fcomp
jno
call
out
pop
mov
movs
pop
clc
xor
lods
ss
sub
dec
inc
cmps
xchg
push
(bad)
rcr
enter
lods
add
adc
int
fwait
cmp
jb
repz
test
in
pop
in
cmp
push
sbb
mov
adc
ret
or
cmp
ret
rcl
mov
push
in
pop
mov
inc
test
xchg
cmps
cli
xlat
or
dec
mov
stc
lea
adc
in
jp
addr16
ret
dec
and
dec
fwait
ret
cmps
jecxz
xor
pop
push
jne
sub
adc
mov
xor
mov
and
(bad)
outs
pusha
inc
jle
jo
loopne
enter
je
adc
mov
mov
movs
mov
in
ret
movs
adc
mul
rol
mov
mov
sbb
mov
mov
lds
xchg
and
adc
in
fldlg2
pop
fsubr
sub
cmp
popa
fistp
push
fwait
or
adc
lds
jbe
mov
ins
adc
jle
popa
iret
lock
sub
or
inc
or
and
pop
shl
lock
push
add
sar
mov
das
mov
xor
cmps
sbb
pop
mov
xchg
sbb
jmp
push
fnstsw
pop
mov
pop
jo
popa
sub
mov
call
popf
movs
test
enter
sub
dec
repz
mov
inc
xor
xchg
adc
cmp
movs
adc
fneni(8087
inc
test
lock
mov
(bad)
lods
(bad)
pop
and
fstp
lahf
loopne
xchg
inc
push
dec
dec
cmp
jo
jp
push
(bad)
sti
popf
rcl
cmps
fwait
test
(bad)
push
push
xor
push
pop
dec
jnp
and
cmp
xchg
dec
dec
js
push
gs
inc
test
lea
jb
xchg
or
cmp
push
add
and
neg
or
xor
(bad)
scas
enter
pop
ja
leave
xchg
jno
fidiv
pop
xchg
jne
jno
sub
cmp
(bad)
fwait
xchg
shl
adc
add
dec
inc
imul
fimul
fwait
mov
and
ret
and
pop
pushf
push
mov
xor
cmp
cmp
mul
(bad)
rcl
(bad)
jmp
sub
xchg
mov
pop
mov
adc
mov
fistp
mov
fld
push
fsubp
xchg
pop
ret
fs
dec
inc
xchg
data16
cmp
loop
adc
fcomp
jle
pop
push
mov
lods
xor
add
bound
ficomp
xchg
xchg
aam
gs
jge
push
pop
push
pop
into
movups
imul
cdq
mov
mov
mov
mov
xchg
push
int3
nop
dec
cmp
jno
mov
dec
mov
test
int
or
popf
outs
or
pop
mov
leave
push
test
fsubr
mov
daa
push
fidivr
ret
mov
mov
sub
xlat
stos
jns
mov
push
js
cli
fwait
push
adc
push
dec
cmp
mov
xor
inc
int
sub
mov
cld
push
cmp
fdiv
in
out
push
jg
shld
outs
cwde
pop
int
retfw
cmp
push
adc
inc
xor
fimul
mov
loopne
(bad)
arpl
retf
call
cmp
cs
sbb
dec
test
sbb
fld
xchg
add
fstp
jle
mov
jmp
mov
jg
sub
leave
xchg
xlat
mov
sbb
lea
stos
inc
push
xlat
pop
ret
stc
test
lods
lahf
mov
out
mov
imul
lahf
sub
xor
push
stos
cmp
imul
or
dec
mov
adc
jae
sub
jbe
imul
clc
mov
or
or
test
mov
pop
mov
aam
mov
cld
clc
rol
mov
(bad)
leave
sbb
(bad)
(bad)
fadd
mov
or
adc
inc
mov
(bad)
(bad)
out
or
pop
mov
sti
xchg
rcr
sbb
xchg
adc
add
cmp
fistp
xor
imul
pop
jae
mov
jmp
sbb
push
rcl
into
(bad)
loopne
pop
std
icebp
fimul
and
sahf
mov
popf
loopne
xor
push
aad
addr16
push
punpcklwd
pop
pop
mov
dec
pushf
cmc
fs
mov
scas
pop
push
cdq
loope
fidivr
lds
pop
iret
jae
clc
outs
or
ret
mov
jg
mov
add
jmp
(bad)
fild
sub
jmp
sub
sub
iret
loop
inc
(bad)
int3
adc
es
sbb
mov
mov
leave
inc
cmp
(bad)
in
pop
cwde
pushf
or
cdq
ret
pop
mov
outs
lods
movs
clc
push
loop
cmp
xor
add
cmp
cmps
sbb
push
loopne
jmp
or
inc
sub
out
pop
clc
fbld
gs
mov
shr
or
lahf
ret
or
push
jbe
int3
sub
and
cmps
adc
out
pop
call
xchg
dec
cmp
mov
inc
mov
dec
add
jmp
and
or
in
lea
stc
shl
imul
sub
fdiv
aam
ins
sbb
lahf
scas
jp
aad
jnp
outs
ret
inc
ret
pop
or
xor
fsub
jmp
inc
lea
inc
jnp
arpl
adc
adc
in
test
jge
push
xor
jmp
jb
dec
es
adc
or
and
call
sahf
or
push
mov
mov
(bad)
jg
ds
pop
leave
inc
or
xchg
add
add
dec
add
jbe
cs
sub
rol
lahf
mov
adc
cmp
test
ins
pop
push
rcl
or
cmc
push
hlt
sbb
cwde
mov
xor
jl
cli
int3
mov
mov
jmp
sbb
and
add
aad
pop
frstor
test
into
xchg
shl
add
pop
rcl
int3
add
mov
cmp
ins
mov
sbb
arpl
sub
xor
sbb
or
mov
push
out
fnstsw
out
mov
fbld
dec
retf
(bad)
mov
xor
dec
cmps
call
repz
pop
mov
pop
mov
div
shl
inc
inc
loopne
sbb
mov
aad
push
inc
or
imul
ins
gs
lods
sub
icebp
neg
cli
or
popf
xchg
or
fwait
jb
sbb
leave
jp
and
in
dec
push
mov
in
push
inc
mov
das
cmp
mov
sub
loope
mov
cmp
jmp
add
test
lods
mov
xor
cmp
rcl
int3
adc
or
mov
jp
popa
dec
inc
(bad)
xor
push
xor
mov
xchg
daa
cs
std
or
push
pop
rcr
aas
(bad)
push
or
pop
or
xor
dec
jmp
inc
mov
cmp
add
cmc
dec
sbb
mov
aas
mov
push
adc
into
(bad)
push
dec
push
movs
jp
nop
xlat
cmp
jb
pop
daa
aad
fcmovb
xchg
into
or
stos
cmc
mov
sbb
or
push
mov
or
pushf
dec
mov
dec
mov
scas
adc
jmp
xor
xchg
test
call
lahf
cmp
jp
xchg
(bad)
jns
and
lds
mov
scas
pop
cmp
mov
pusha
cmp
inc
and
add
enter
lock
cmp
arpl
das
movs
push
fmul
sub
mov
lds
or
bound
push
xchg
mov
test
pop
and
xor
jnp
push
fist
in
out
test
hlt
imul
xor
(bad)
push
(bad)
into
jg
repnz
jecxz
cmps
popa
ds
lea
jae
pop
inc
int
and
(bad)
cmp
call
(bad)
idiv
ss
scas
pop
cmps
dec
mov
mov
jge
or
aaa
push
gs
adc
push
sbb
ret
mov
enter
sbb
hlt
mov
push
sbb
mov
jge
mov
outs
push
aas
mov
sahf
stc
pop
add
inc
xchg
jp
push
dec
in
adc
push
sub
in
lea
ffreep
pushf
popa
inc
sub
out
lods
stc
xor
jmp
lods
or
stos
sbb
scas
mov
call
push
nop
add
pop
sub
xchg
ror
cli
(bad)
add
mov
movs
js
inc
or
inc
sbb
dec
inc
mov
jecxz
popf
xor
adc
pusha
sahf
jge
inc
ins
mov
cmps
cmps
arpl
mov
mov
pop
sahf
test
or
jmp
rcl
dec
fisttp
cmp
in
call
dec
add
lock
xchg
jno
mov
pusha
pop
add
pop
lahf
stos
fwait
dec
adc
sbb
jmp
and
adc
jmp
jl
xor
test
loop
xor
rcr
test
cwde
lahf
lds
loope
cwde
aaa
mov
push
xchg
jg
shl
ficomp
mov
(bad)
mov
sahf
ret
int
xor
cmp
outs
jns
push
enter
mov
and
mov
imul
push
mov
jmp
inc
retf
jne
dec
jbe
pop
xor
je
test
push
jnp
xchg
in
repz
jecxz
dec
pop
fsub
call
mov
test
imul
addr16
inc
out
inc
cmp
ret
and
retf
jns
iret
popa
(bad)
lock
stc
mov
jmp
cmp
cdq
outs
nop
rol
sbb
outs
dec
or
add
sbb
push
test
add
je
inc
or
mov
lea
mov
imul
pop
sub
imul
mov
cmp
jae
lock
test
jmp
and
push
adc
movs
dec
add
stc
add
sbb
call
xchg
retf
das
icebp
push
pop
(bad)
mov
ret
addr16
push
mov
shl
gs
stos
and
push
push
out
mov
cs
aad
call
xor
scas
sub
fwait
ins
jmp
js
dec
xchg
sti
in
lods
jb
ret
cmp
imul
mov
ret
std
dec
in
out
fld
sbb
jbe
or
call
in
add
iret
dec
ret
xchg
adc
mov
in
scas
jae
cld
add
fmul
jp
cmp
pop
repz
mov
cmp
into
mov
inc
out
stc
and
xor
push
cs
sub
call
scas
sahf
frstor
inc
mov
enter
inc
jle
movs
jge
sub
mov
(bad)
fstp
sub
int
xor
cwde
jae
loop
add
sub
cld
jg
or
pop
into
mov
movs
cmp
xlat
xor
mov
in
adc
outs
inc
jb
(bad)
pop
jns
jae
pop
mov
mov
std
sbb
cmp
inc
mov
outs
in
dec
xor
mov
add
pop
stc
fst
xchg
arpl
mov
ins
adc
pusha
outs
add
shl
dec
cwde
push
test
in
sbb
mov
pop
mov
xchg
cli
mov
push
mov
sti
xor
aas
fwait
add
outs
retf
out
ret
xchg
or
leave
fldcw
fistp
ss
xchg
stc
icebp
adc
sub
cmp
fdiv
jno
mov
fstp
add
jl
ror
ror
xchg
retf
rol
mov
inc
push
out
dec
and
cwde
xor
fst
and
dec
mov
inc
mov
cmc
sub
xlat
les
stos
pop
jecxz
idiv
cmps
xchg
addr16
lock
and
jmp
or
hlt
jge
imul
jo
inc
and
lds
int
fidivr
push
xlat
in
lock
dec
dec
cmp
jge
loop
fiadd
add
sbb
into
sub
mov
dec
ret
loop
fwait
std
cmp
mov
and
dec
mov
inc
lds
xchg
xor
sub
push
sbb
in
(bad)
cmp
les
pop
mov
ja
fisubr
mov
imul
sub
sar
aad
mov
nop
xchg
cmp
inc
out
ins
xchg
aaa
cmps
pop
mov
test
pop
pop
mov
mov
std
jge
pushf
xchg
aas
or
loop
clc
int3
xchg
cld
cld
stos
mov
hlt
and
add
xchg
pushf
xor
jmp
scas
push
mov
jge
jbe
or
sub
pop
xchg
scas
inc
lods
movs
sub
pushf
push
cmp
jp
sub
pusha
or
(bad)
adc
push
out
xor
lock
inc
push
push
inc
jl
sbb
call
fdivr
scas
and
xor
sub
out
ins
scas
jo
inc
jae
dec
cmps
dec
and
cmp
push
sub
jnp
and
or
aam
fiadd
daa
sub
adc
retf
ret
stos
test
mov
add
and
xlat
push
mov
pop
in
adc
jge
rcr
subps
stos
pop
mov
inc
shl
cli
xor
fdiv
rcl
or
inc
shr
fstp
es
in
or
(bad)
jecxz
loope
int3
pop
xor
dec
(bad)
xor
neg
xlat
out
loopne
adc
xchg
test
lods
or
daa
xor
mov
pop
pusha
or
jg
addr16
retf
stos
sub
imul
sahf
xchg
ss
xor
sub
and
cmp
sub
in
in
mov
xchg
mov
dec
mov
xchg
dec
cdq
cmp
(bad)
rcr
(bad)
gs
pop
sar
sahf
test
add
mov
mov
jp
fild
call
jns
adc
mov
mov
or
pop
push
imul
into
xchg
loope
out
jg
adc
test
iret
inc
pop
inc
push
jne
lock
and
inc
lahf
jno
mov
dec
pop
jno
popf
xchg
jnp
mov
sahf
mov
les
scas
push
sub
push
push
addr16
mov
cwde
mov
jb
xor
mov
push
pop
test
and
xchg
les
lahf
pop
xchg
adc
xchg
mov
xor
xor
cmps
mov
popa
sub
mov
out
arpl
pop
repz
sbb
pop
fist
xor
loop
cmp
mov
imul
jp
xchg
mov
sbb
cmp
add
push
adc
data16
cdq
loop
sbb
sahf
(bad)
je
imul
aam
mov
popf
push
cmps
gs
loope
xor
jns
or
push
jmp
cmp
fld
aam
push
jb
mov
xchg
mov
retf
lahf
mov
int
jno
icebp
adc
loopne
xor
aaa
mov
xchg
dec
push
cs
js
mov
sbb
jmp
adc
xor
mov
add
cmp
aas
adc
xchg
loop
(bad)
(bad)
nop
sub
and
rcr
and
fimul
loop
test
pop
nop
cmp
jne
xor
and
imul
mov
popfw
daa
pop
jno
movs
pusha
retf
scas
mov
je
sub
test
js
shl
push
dec
or
xchg
lea
fwait
clc
pop
arpl
push
jbe
push
dec
pop
test
dec
retf
std
rcl
popa
mov
xor
fld
mov
ins
push
cmps
cmp
lea
int3
sub
jb
(bad)
xchg
xchg
add
pusha
mov
fmulp
xor
ret
nop
mov
out
idiv
fcmove
dec
push
div
pop
mov
jmp
movs
fbld
setle
mov
push
xchg
in
hlt
arpl
sbb
cs
mov
cdq
enter
test
xor
sub
xchg
cmp
cwde
sub
shl
mov
(bad)
fist
xchg
scas
aad
test
push
(bad)
lods
sub
dec
lahf
mov
jmp
mov
mov
imul
enter
shl
mov
jp
les
jge
add
imul
push
mov
in
cmp
xchg
push
sbb
cwde
mov
popf
out
mov
imul
and
rep
outs
stos
leave
xchg
adc
jns
dec
mov
adc
gs
jmp
push
shl
cmps
outs
fisubr
bound
mov
mov
adc
ret
inc
cmp
imul
mov
inc
and
mov
mov
mov
adc
sbb
leave
cdq
cmp
mov
mov
rol
into
push
fsubr
dec
push
inc
mov
xchg
cmps
fdivr
ror
xchg
push
scas
(bad)
dec
scas
xchg
es
adc
les
fs
daa
push
imul
fnstcw
clc
cdq
stos
ja
ins
sbb
fbstp
push
pop
xchg
not
shl
test
repnz
pop
push
xor
dec
jmp
(bad)
add
ror
cmp
mov
icebp
and
inc
sub
inc
ficomp
scas
imul
xchg
or
pop
cmps
cwde
sub
xor
cmp
outs
xchg
xchg
aad
mov
pop
rcl
jb
add
cmps
in
(bad)
pop
pop
sub
xchg
call
int
xor
adc
lods
xor
fdiv
shl
es
cmp
fcomp
adc
ret
pushf
loope
adc
inc
sbb
ja
inc
ficom
pop
aaa
daa
sbb
mov
push
adc
mov
pushf
xchg
jb
fxtract
addr16
ins
ret
jo
retf
hlt
cmp
arpl
dec
icebp
repnz
add
pop
loope
stc
push
mov
idiv
fdivp
mov
push
push
inc
adc
xchg
sbb
jne
push
cmp
loopne
or
mov
rol
and
push
aam
sbb
cs
sbb
add
ds
inc
mov
out
pop
cld
(bad)
rol
scas
inc
jae
lods
mov
test
sub
push
test
aaa
ror
push
ins
fstp
movs
mov
pushf
inc
sub
pop
xchg
add
cwde
(bad)
icebp
lds
addr16
es
mov
cmp
xchg
mov
pop
inc
pop
test
cmp
mov
or
pop
test
cdq
mov
jbe
pop
push
xchg
adc
shr
int
std
ins
ss
(bad)
enter
pop
jno
dec
cmp
cmps
adc
xchg
mov
sti
and
xlat
scas
xor
je
mov
or
pushf
(bad)
xor
cmp
fs
in
dec
rol
jno
dec
enter
mov
jge
and
pop
(bad)
repz
outs
icebp
out
pop
dec
ja
add
psllq
pop
data16
cwde
and
add
sub
(bad)
pop
add
sti
into
test
jnp
pop
std
lods
push
adc
push
push
cld
in
les
inc
mov
ret
sbb
ins
jg
adc
arpl
or
clc
mov
retf
pop
jmp
dec
fwait
hlt
cmc
es
mov
sub
cmp
imul
fwait
and
scas
dec
jle
mov
or
or
jg
dec
mov
jle
scas
cwde
scas
pop
pop
loopne
mov
dec
je
mov
inc
in
pop
leave
mov
dec
inc
adc
xchg
mov
and
pop
inc
pop
push
push
pop
adc
xchg
test
mov
cmp
lock
pop
cmp
ds
fild
sbb
jnp
add
mov
push
retf
rcl
in
out
pop
fiadd
test
mov
rcl
xchg
jnp
std
xchg
movs
mov
lods
push
push
jae
sbb
dec
inc
popa
es
or
cmp
rcl
out
rol
into
(bad)
xor
pop
test
in
adc
addr16
and
and
and
sub
mov
xor
rcl
mov
mov
and
and
lods
sub
xor
dec
repnz
mov
xchg
push
mov
mov
mov
rcr
jnp
sub
jle
dec
int3
scas
mov
or
xchg
pop
gs
push
xchg
repz
out
data16
pop
mov
jecxz
enter
lods
push
idiv
loopne
cmp
pmulhuw
out
cmp
int
ja
dec
cmp
mov
xor
sub
repnz
sbb
(bad)
arpl
ret
cmp
mov
cld
cld
dec
ret
enter
pop
and
jmp
jmp
out
cmp
(bad)
lock
sbb
xor
prefetcht0
lgs
pop
inc
push
and
mov
sub
mov
sti
mov
lods
pop
fisubr
xchg
mov
mov
push
mov
sub
mov
loope
push
push
and
les
add
adc
mov
and
adc
adc
fdivr
rcr
add
sti
outs
cld
(bad)
cli
sbb
movs
not
lods
test
mov
fld
clc
arpl
push
jl
mov
jg
xchg
fwait
cmp
hlt
pop
dec
int3
cli
push
adc
sub
dec
bound
push
popf
xor
scas
inc
adc
adc
pop
cmp
mov
cmp
ret
mov
addr16
dec
adc
dec
xchg
std
xchg
push
push
sbb
ds
push
push
push
push
cmp
mov
inc
call
in
repz
div
repnz
add
sub
in
mov
lds
int
stc
jle
das
mov
xchg
iret
xor
sub
sub
or
cmc
dec
jae
pop
push
pop
mov
mov
test
pop
inc
js
mov
mov
cmps
loope
adc
call
mov
test
jmp
lahf
rcr
stos
push
js
xlat
add
and
aad
sbb
retf
xor
int
inc
aaa
movs
sbb
stos
fild
lahf
pop
in
pop
ins
and
inc
or
retf
inc
push
je
hlt
les
retf
push
push
mov
lock
and
daa
mov
cld
leave
cmp
into
in
pop
xlat
and
fild
xchg
cmp
or
outs
inc
mov
cmp
in
jmp
call
in
or
push
gs
outs
pop
int3
dec
pop
(bad)
sbb
push
dec
iret
repnz
cmps
scas
movs
sahf
and
iret
cmp
and
sbb
adc
cmp
retf
sub
shl
cmc
retf
jecxz
inc
adc
test
sbb
xor
call
push
leave
mov
add
lds
imul
xchg
xchg
push
in
xchg
mov
clc
loop
xchg
dec
(bad)
sub
das
inc
rol
mov
jmp
cmp
je
and
jl
sbb
or
pop
push
fucomp
movs
inc
push
sbb
lahf
mov
sbb
and
sbb
daa
int3
movs
imul
fwait
mov
(bad)
pop
cmc
xor
cmp
test
hlt
dec
jecxz
dec
popf
sub
push
shl
mov
jl
dec
push
xor
jmp
and
dec
xchg
daa
popf
pop
dec
ja
call
out
mov
lds
inc
cwde
pop
ins
inc
sar
in
ins
push
dec
movs
ins
sub
dec
repz
ds
jl
add
mov
movs
mov
ja
pop
jp
push
mov
xchg
stc
inc
bound
mov
rol
xrelease
xchg
add
push
xchg
lods
int3
dec
pop
outs
std
(bad)
and
push
dec
loopne
dec
loop
loop
xchg
adc
cmps
add
inc
ja
jno
add
fs
mov
popf
pop
dec
fmul
push
fild
adc
neg
loopne
mov
outs
xor
fs
mov
cmp
push
and
(bad)
(bad)
out
in
shl
pop
mov
cmps
pop
push
pop
cmp
cli
js
or
int
aad
pop
shr
repnz
rcl
mov
mov
adc
adc
xor
aad
mov
sbb
stc
adc
push
hlt
sub
addr16
arpl
xchg
adc
daa
test
push
and
adc
jecxz
mov
mov
pop
xlat
push
sub
(bad)
push
xor
in
push
or
cmp
adc
add
xor
aam
jecxz
and
int
call
retf
cmp
xor
lahf
mov
or
sub
rcr
int3
cmps
bound
out
outs
cmp
repz
xchg
(bad)
xor
xor
jmp
mov
fisub
jb
dec
pushf
mov
mov
push
gs
dec
popa
(bad)
xor
movs
pop
pop
jns
mov
and
mov
gs
push
push
shr
mov
mov
mov
and
out
jmp
push
mov
into
cmp
out
popf
inc
sub
jge
and
fisttp
pop
scas
mov
test
aad
pop
test
dec
aaa
test
push
pop
(bad)
dec
mov
xor
push
cmps
aaa
or
(bad)
push
aam
arpl
(bad)
jns
xor
mov
stos
fdivr
imul
in
in
leave
aaa
daa
adc
enter
mov
in
div
stos
arpl
imul
and
mov
aam
push
push
sbb
sub
xor
shl
das
int3
ja
cmp
xchg
aaa
inc
(bad)
cmps
add
xchg
dec
or
shr
stc
aam
lods
pop
std
push
sbb
(bad)
lahf
sub
sbb
sbb
sbb
js
loopne
lods
or
or
(bad)
xor
ror
pop
xchg
add
pop
inc
(bad)
pop
mov
push
and
loope
shl
push
fist
outs
mov
adc
push
add
mov
add
jns
pusha
(bad)
in
inc
push
mov
adc
ja
mov
lock
xchg
dec
gs
in
ds
xor
mov
ret
push
ins
test
call
adc
pusha
push
clc
or
out
or
shr
aas
mov
jge
mov
mov
addr16
lods
ret
mov
int
push
outs
pop
mov
jmp
dec
in
mov
xor
les
movs
leave
shr
(bad)
hlt
add
int3
mov
push
jge
mov
jno
test
clc
add
mov
outs
ins
aad
inc
neg
xor
repz
repnz
xchg
push
push
or
and
pop
xor
or
mul
cmp
mov
shr
cmps
icebp
and
mov
loopne
push
les
stc
sbb
call
cmps
frstor
jge
adc
mov
and
adc
jmp
sbb
mov
mov
pop
mov
movs
addr16
(bad)
push
idiv
in
fsub
and
pop
inc
cmp
ror
sar
cld
and
icebp
nop
jecxz
xor
pop
loop
mov
adc
and
mov
add
jnp
dec
dec
pop
dec
bound
ins
(bad)
pop
mov
add
ja
(bad)
sub
lods
pushf
js
pushf
mov
mov
fnstsw
mov
jmp
add
outs
or
aad
mov
and
sbb
lea
pop
jo
mov
mov
nop
out
add
xor
adc
clc
jmp
adc
push
jo
popf
popa
fldcw
arpl
and
aas
mov
jp
inc
mov
outs
mov
mov
xchg
outs
leave
and
add
inc
pop
out
inc
int3
hlt
(bad)
xchg
ret
sub
fwait
cmp
xlat
dec
lock
ins
sbb
jns
iret
cmp
add
jbe
jp
adc
add
fst
adc
lods
jnp
sub
scas
cmp
dec
icebp
sub
shl
or
adc
and
es
xor
test
and
cdq
adc
jno
rol
push
mov
mov
xlat
mov
xor
loop
xor
aad
jl
lds
mov
mov
jns
push
sbb
mov
(bad)
stos
and
scas
push
sub
fs
lahf
lahf
stos
jp
sbb
push
outs
ret
pop
cmc
inc
sub
cmps
fidivr
and
adc
xor
sahf
imul
cmp
sahf
mov
push
stos
jmp
jne
or
pop
dec
dec
xor
mov
cli
dec
aad
xchg
sbb
and
push
inc
pop
jge
test
fild
xchg
xchg
loopne
adc
xchg
pop
sbb
imul
mov
(bad)
and
call
sbb
xchg
push
adc
ss
scas
sub
adc
leave
mov
(bad)
mov
dec
into
jns
cmc
dec
aam
mov
pop
scas
mov
mov
test
adc
inc
sub
aad
xlat
push
retf
call
mov
dec
sar
sub
or
hlt
inc
push
fnstcw
mov
jae
retf
or
lock
leave
popf
mov
or
inc
out
xchg
jle
fcmove
(bad)
(bad)
mov
ds
out
sub
movs
icebp
sahf
pusha
out
sbb
mov
je
xor
mov
cmp
push
inc
mov
pusha
in
sbb
ins
xor
or
cld
ror
aam
ret
mov
cmps
inc
jb
and
push
nop
xor
outs
pop
mov
ret
test
daa
fbld
test
movs
dec
cli
int3
lods
dec
scas
cwde
sahf
add
cmp
or
jnp
jecxz
adc
(bad)
ins
inc
ins
cwde
popa
add
mov
xchg
retf
push
mov
dec
fst
jg
mov
ret
xchg
in
xchg
fucomp
(bad)
rol
cmp
enter
xor
les
and
jg
dec
cmp
add
dec
rcr
xor
das
out
pop
test
lds
mov
and
sar
out
ror
iret
and
pop
sub
add
pop
sti
js
out
xchg
mov
sbb
loope
(bad)
into
outs
push
arpl
fadd
inc
sub
mov
mov
inc
or
and
inc
sbb
cmp
fistp
fld
cld
mov
imul
mov
clc
jp
out
add
dec
xchg
repz
mov
aaa
aaa
das
mov
jmp
imul
pop
cmps
mov
jecxz
test
(bad)
jg
sti
push
adc
fwait
xor
sub
shr
rcr
jl
mov
call
(bad)
neg
loopne
mov
pusha
ds
jmp
inc
stos
leave
xlat
jb
fcom
cmps
adc
lea
inc
and
arpl
or
add
inc
imul
je
xor
xor
cdq
popa
mov
rol
pop
xchg
push
adc
popf
adc
jb
sbb
inc
pop
fist
iret
les
into
add
or
jbe
loop
mov
jo
leave
cli
repz
test
popa
stos
(bad)
pop
or
js
es
fidiv
xchg
mov
rol
mov
add
cli
push
adc
(bad)
fst
push
cmp
out
or
nop
icebp
jo
out
xlat
rcr
adc
cld
stc
scas
and
fstp
xor
int
adc
dec
rcr
outs
aam
aad
pop
push
xchg
xchg
(bad)
cs
ins
inc
mov
stc
mov
fcmovnbe
adc
sbb
std
pushf
mov
ret
and
add
push
bnd
ds
jmp
mov
inc
push
fmul
mov
clc
jne
cmp
cmp
dec
cmps
fisubr
xchg
aad
mov
rcl
pop
(bad)
mov
or
xlat
push
xchg
mov
sbb
mov
cld
jge
pop
fxch
fnstenv
inc
adc
test
xchg
fmul
and
adc
out
pop
xor
mov
adc
movs
adc
jbe
rcl
js
jno
push
das
stos
call
in
mov
daa
jae
dec
test
es
loopne
push
test
clc
neg
adc
retf
xchg
ficom
jg
dec
pop
mov
xchg
dec
scas
inc
dec
inc
mov
push
js
rcl
pop
sbb
jno
mov
sub
sbb
(bad)
fadd
xchg
sar
ds
pop
and
enter
or
adc
inc
fimul
sbb
jmp
sar
xor
mov
and
mov
call
xchg
mov
addr16
ins
retf
popf
out
jb
mov
mov
jmp
xchg
cwde
xchg
hlt
ror
fs
sbb
inc
push
pusha
fidivr
pop
pop
cmp
retf
cli
cli
(bad)
jp
mov
(bad)
xchg
xchg
mov
jae
fadd
fldenv
fmulp
mov
loopne
ret
(bad)
pop
xchg
xor
movs
or
movs
or
xor
sub
jnp
mov
data16
mov
gs
xchg
(bad)
repnz
cmc
mov
xor
fs
(bad)
fwait
(bad)
jmp
cmp
jmp
jno
test
popa
xchg
int
sar
cmps
pop
jp
jmp
pop
lods
jmp
mov
and
fild
gs
cmp
pop
sbb
adc
stos
ror
xor
mov
push
call
xor
out
pop
push
sbb
sti
xchg
jns
mov
mov
dec
pop
jge
repz
cs
add
movs
icebp
push
movs
jno
mov
loop
pop
cmp
pop
aaa
and
dec
sub
jmp
fmul
inc
lds
push
mov
jne
xor
fdiv
lea
cs
sahf
mov
loop
aad
mov
movs
ds
jno
dec
dec
pushf
or
movs
sar
aam
sbb
add
jge
mov
mov
(bad)
aam
clc
aas
mov
aaa
sti
je
mov
ret
nop
arpl
scas
aam
or
fcmovu
mov
jge
adc
jae
inc
xchg
leave
mov
(bad)
pop
or
sbb
inc
test
(bad)
test
and
addr16
bound
pop
push
xchg
push
data16
sbb
pop
inc
call
sub
and
xlat
test
dec
xchg
ror
sbb
dec
mul
mov
pop
jp
xchg
loop
fucom
jnp
and
mov
or
stc
rol
into
lock
inc
repnz
iret
lds
xchg
inc
repz
jo
cli
aaa
mov
pusha
and
add
jmp
pop
dec
pop
mov
dec
xor
mov
shr
push
and
xor
push
adc
out
ins
(bad)
fs
mov
xchg
push
mov
mov
push
mov
icebp
pusha
mov
ja
dec
fbstp
xlat
push
mov
jp
adc
lea
test
out
fwait
add
cmp
add
jecxz
sub
inc
test
mov
movs
nop
pusha
sub
pause
loop
mov
(bad)
pop
sahf
adc
pop
xor
jns
xchg
mov
bound
xchg
jb
test
lock
fwait
mov
mov
pop
or
mov
cli
aas
push
lea
pop
add
jno
cmc
iret
stos
outs
fsubr
ror
rol
push
cmp
mov
iret
dec
retf
jae
dec
mov
xor
jbe
mov
cld
push
(bad)
or
mov
bound
mov
mov
hlt
dec
test
sbb
rol
jo
fcom
dec
mov
lock
mov
jg
add
std
mov
dec
das
adc
add
add
sub
out
sbb
rcr
in
and
pop
adc
push
outs
xchg
jle
outs
push
out
sub
out
push
jb
iret
add
arpl
leave
test
pop
shl
fcmovnb
xchg
pop
mov
push
fsubr
or
es
sbb
mov
repnz
daa
jmp
pop
jne
test
enter
hlt
mov
xor
add
mov
inc
or
xchg
jl
pop
out
popf
mov
and
fsubr
cmp
jns
fiadd
mov
cmp
sub
scas
idiv
aad
(bad)
in
mov
aad
sbb
jmp
clc
ficomp
jle
int
mov
push
push
dec
inc
rol
mov
mov
jae
and
mov
xor
dec
sbb
out
test
icebp
imul
and
fdiv
fild
pop
mov
xlat
adc
and
int
xchg
pop
mov
aas
pop
ins
sub
into
icebp
hlt
pop
icebp
mov
mov
stos
(bad)
sbb
mov
loopne
mov
rol
bound
mov
xor
js
mov
inc
jnp
jecxz
das
jg
sub
leave
add
and
jge
repnz
cmc
in
mov
cmp
ss
xchg
xchg
push
sahf
call
jne
inc
pop
or
(bad)
adc
lock
loope
call
inc
pushf
movs
cdq
xlat
popa
nop
sbb
pop
repz
jg
pushf
(bad)
(bad)
faddp
pop
cdq
rol
pop
jg
pusha
mov
ins
cli
repz
or
add
call
ins
mov
pop
xchg
daa
cmp
jns
adc
sbb
jo
cli
mov
retf
sub
and
bound
pop
inc
adc
push
push
mov
loop
add
push
sahf
mov
retf
mov
test
or
clc
pusha
pop
push
cld
fbld
and
scas
and
inc
lods
repnz
ror
xor
cmc
int
cmp
dec
dec
sbb
pop
mov
into
mov
mov
cli
mov
fstp
scas
push
sub
cld
adc
movs
inc
adc
(bad)
int
in
or
arpl
aas
pop
push
arpl
mov
xor
repz
cld
loope
fidiv
pushf
push
sbb
sbb
cmp
in
sbb
xor
loopne
xchg
idiv
and
sti
pop
sub
clc
jmp
leave
jle
ficom
out
sbb
fwait
movups
jecxz
cwde
lds
add
mov
fst
mov
ficom
adc
pop
cmp
or
jnp
jo
fistp
(bad)
(bad)
mov
jnp
fisubr
jg
retf
fldenv
cmps
jne
adc
xchg
bound
adc
dec
or
dec
and
mov
loop
outs
and
cmc
push
adc
dec
push
out
scas
and
arpl
movs
jmp
jnp
add
adc
sub
fist
fild
gs
mov
fucomp
pop
xor
mov
mov
ja
pop
test
inc
adc
hlt
dec
sub
lock
sub
xchg
mov
lds
push
inc
cmp
mov
clc
jnp
jbe
add
mov
or
xor
xor
cmp
popa
in
sub
xor
pop
add
ficom
xchg
mov
pop
dec
inc
gs
(bad)
jecxz
dec
sub
xor
sbb
xor
call
loop
rcl
and
out
into
dec
jne
retf
int3
in
cld
jno
inc
xor
test
das
pop
adc
idiv
ins
retf
js
pop
movs
mov
out
retf
jecxz
mov
in
xor
pop
icebp
sbb
aam
adc
out
scas
add
movs
jo
ins
mov
add
call
push
or
popf
jbe
jb
out
pushf
push
push
movs
xor
push
cmp
sbb
lds
jo
rcr
mov
cmp
push
test
cmp
add
iret
ss
sub
fst
rol
mov
std
sub
pop
nop
loope
inc
xchg
lods
jge
mov
(bad)
out
(bad)
mov
or
mov
ja
inc
rcr
sub
mov
rcl
clc
into
jge
inc
jno
or
sub
xchg
out
pop
call
jmp
pop
adc
adc
xchg
arpl
repz
push
jle
jp
imul
dec
std
adc
jp
jnp
packuswb
sbb
iret
sub
enter
pop
mov
or
inc
in
fcom
inc
sbb
push
vcvttsd2si
push
sub
ja
fnstsw
rol
ret
fwait
sub
sbb
mov
hlt
fldenv
adc
jle
imul
xor
mov
inc
xchg
icebp
xor
jnp
mov
jne
dec
cli
push
sbb
shr
loopne
pop
dec
mov
popf
shl
jmp
xor
popf
cmp
jg
mov
or
addr16
jmp
ds
xor
sub
inc
gs
lahf
out
sub
inc
ror
mov
sbb
or
jmp
inc
ret
push
ins
inc
or
pop
jne
in
rcl
add
jae
xchg
retf
cld
jp
and
xchg
test
mov
sbb
inc
mov
stc
stos
mov
test
repz
ds
push
icebp
and
loop
shl
sub
fwait
out
pop
sub
loopne
or
pop
jge
push
and
shr
fxch
push
movs
jge
or
pop
pushf
jg
icebp
xchg
cmp
fisttp
sbb
frstor
pusha
outs
aad
ins
loop
rcl
xchg
sub
nop
or
stos
sbb
xchg
add
sbb
(bad)
mov
mov
pop
(bad)
(bad)
rcr
adc
dec
cdq
mov
pop
in
call
sbb
mov
pop
imul
cmp
in
jp
sub
jg
mov
fisttp
and
jnp
xchg
enter
and
stos
loope
fcom
mov
mov
sahf
sbb
out
sub
inc
xchg
addr16
or
imul
mov
pop
icebp
pop
into
xor
es
cmp
add
fnstsw
fwait
cmp
xchg
push
inc
push
push
imul
mov
inc
test
fisubr
daa
sub
jbe
sbb
les
pop
loope
sub
push
xchg
enter
repz
xchg
fldenv
lea
dec
dec
scas
mov
or
popf
jmp
xchg
sahf
jbe
cdq
dec
cmps
iret
lods
cmc
jmp
into
push
imul
xchg
dec
cmp
mov
aad
hlt
push
add
add
jbe
sub
jmp
push
add
dec
and
pop
dec
push
push
adc
cmp
scas
popf
xchg
adc
or
iret
fcom
push
jbe
stos
push
or
div
pop
inc
int3
cmp
gs
pop
sbb
xor
adc
je
hlt
(bad)
movs
stos
fs
sbb
in
or
push
jmp
jge
jg
retf
aam
dec
ret
cmp
aam
inc
aad
loope
xlat
push
inc
outs
inc
pop
popa
adc
xchg
xor
pop
or
stos
mov
jmp
sahf
adc
test
mov
rol
jns
jmp
sahf
or
mov
jno
cmp
dec
ja
enter
sbb
adc
(bad)
dec
daa
xor
sbb
mov
bound
sbb
mov
or
xchg
sub
(bad)
xor
add
aad
imul
add
cmp
(bad)
mov
cmp
mov
mov
pop
add
push
push
mov
sbb
test
lods
popf
cmp
sub
fs
jp
call
addr16
sub
jnp
inc
icebp
iret
movs
fimul
hlt
push
sbb
out
xchg
sar
jae
mov
(bad)
sar
ins
cmps
fcom
jbe
mov
jno
cmp
les
test
xor
sbb
pop
in
(bad)
jmp
ret
push
or
mov
mov
xor
addr16
add
(bad)
mov
mov
push
lea
mul
lock
xchg
sub
loope
mov
mov
cdq
inc
sbb
neg
leave
jne
pop
(bad)
add
ja
lods
shr
inc
in
ins
daa
push
jnp
test
mov
jp
ret
mov
add
call
inc
jp
sbb
dec
dec
dec
cmp
and
shl
dec
xchg
movs
test
mov
add
jne
add
ror
and
mov
test
repnz
aas
adc
(bad)
xor
xchg
sahf
arpl
sar
(bad)
jno
arpl
cld
out
(bad)
jle
sub
pop
popf
fimul
add
lahf
cmp
xchg
imul
fimul
xlat
xchg
inc
pop
int
outs
je
bound
or
inc
mov
inc
jg
jo
jg
mov
cmp
lods
test
jg
sub
(bad)
lds
dec
nop
jae
sahf
jl
stc
out
cmp
sbb
jnp
xlat
das
cmp
in
enter
in
retf
push
scas
sbb
xchg
mov
retf
fiadd
push
ret
and
inc
es
fcmovbe
fdiv
and
(bad)
add
and
(bad)
lock
adc
lea
into
iret
lods
sub
ret
into
adc
and
mov
mov
mov
repnz
cli
xchg
push
and
adc
jmp
aas
sbb
(bad)
mov
mov
sar
sahf
scas
test
repz
(bad)
shl
test
dec
fild
fcmove
mov
inc
leave
test
sbb
int
aaa
rcl
dec
add
fld
xor
xchg
pop
sahf
inc
mov
xchg
sbb
dec
loop
push
pop
ins
call
(bad)
jmp
fisub
sbb
push
div
push
mov
mov
pop
dec
test
pop
(bad)
cld
or
cmps
(bad)
and
fs
pop
sbb
cwde
pushf
test
mov
test
out
sbb
ret
aam
xchg
dec
pop
out
movs
shl
add
ror
xchg
mov
dec
xchg
or
call
lods
nop
aam
mov
in
pop
cs
sub
mov
xchg
fcom
mov
(bad)
retf
pop
mov
aam
pop
loope
xchg
dec
push
bound
mov
mov
arpl
mov
adc
movs
sbb
stos
fst
inc
adc
xor
sbb
iret
popf
and
and
or
mov
fimul
iret
gs
stos
push
adc
cmps
shl
movs
cld
adc
hlt
iret
push
adc
adc
(bad)
pop
in
push
inc
fisubr
inc
jmp
ja
dec
inc
jl
arpl
jmp
iret
push
adc
adc
jb
and
and
mov
add
cmp
(bad)
arpl
dec
sbb
nop
dec
add
call
sbb
dec
mov
iret
fist
jl
mov
sub
sub
enter
mov
leave
outs
dec
mov
add
pop
je
pop
sbb
ror
dec
inc
jmp
mov
inc
daa
test
sub
sub
lahf
push
ss
clc
or
popa
out
hlt
out
cmp
sub
sar
cmp
jecxz
leave
add
cs
push
outs
stos
in
dec
pop
xor
sub
or
mov
add
mov
push
mov
push
xchg
ss
adc
scas
pop
push
push
add
jne
aaa
pop
mov
push
mov
push
xor
in
in
jmp
loop
in
xor
mov
shl
xchg
test
mov
retf
pop
call
jmp
setbe
xchg
add
rcr
sbb
xor
push
dec
jg
push
jne
mov
(bad)
pop
div
idiv
jecxz
jmp
out
sbb
outs
aaa
aaa
push
fstp
mov
adc
retf
mov
pop
ins
not
lahf
outs
lock
adc
push
daa
dec
pop
out
ins
add
push
retf
push
jl
cmp
cld
pop
jmp
push
xchg
shl
or
add
cmp
jne
daa
lods
sbb
xor
xchg
push
xchg
fs
scas
xchg
repz
iret
xchg
or
add
(bad)
std
clc
pop
jb
inc
(bad)
lock
adc
cmp
mov
mov
xchg
pop
jbe
movs
mov
or
push
push
sub
mov
lods
pop
jmp
ret
pusha
pushf
leave
mov
xor
inc
rol
jl
shr
inc
xchg
cmp
test
push
adc
xlat
and
pop
aas
mov
gs
push
test
xor
pusha
jg
inc
xchg
data16
jg
inc
(bad)
pop
xchg
adc
jbe
jns
push
fucom
mov
out
sbb
sbb
into
(bad)
(bad)
jp
fdiv
ds
test
and
xor
add
mov
(bad)
and
and
xchg
sti
out
(bad)
aam
add
js
xchg
fwait
int3
pop
and
or
cmc
mov
loope
fidiv
dec
sub
das
jl
ins
xchg
add
xlat
les
outs
out
pop
lock
sti
inc
arpl
xor
imul
xor
cmp
in
fisub
push
out
jmp
jne
cdq
push
ins
fild
fnstenv
je
stos
jbe
cmp
cmc
xchg
xor
out
cmp
int3
stc
mov
mov
mov
jg
sub
daa
int
pop
pop
xchg
gs
fcmovnbe
in
out
pop
out
clc
sbb
add
pushf
comiss
adc
in
mov
popf
fs
in
call
push
mov
call
and
retf
mov
push
dec
pop
inc
adc
adc
hlt
test
and
stc
add
jno
fiadd
push
ret
cmp
push
xor
loope
pmaddwd
mov
jbe
mov
sar
mov
cs
fiadd
dec
mov
shl
or
les
jns
adc
push
xor
sar
fucomp
inc
mov
std
frstor
fnstcw
leave
xor
mov
xor
retf
jno
lahf
not
mov
dec
scas
mov
sub
push
cmp
loope
cmp
iret
pop
sub
mov
clc
mov
ss
aam
xchg
cli
ins
and
xchg
out
mov
jbe
dec
or
out
and
test
cmps
jecxz
mov
lods
test
or
aaa
cmps
add
int3
sub
imul
mov
or
mov
iret
fnstcw
xchg
ja
mov
stos
adc
je
sbb
rol
mov
adc
push
dec
push
sub
cdq
cmps
and
repz
test
(bad)
jmp
pop
mov
adc
pop
sar
pop
aam
loope
xor
pop
add
popf
inc
sub
xor
xchg
(bad)
pushf
outs
cld
pop
push
dec
mov
dec
jmp
pop
cmp
push
ja
jg
push
pop
dec
nop
mov
dec
cld
or
fmul
cli
and
cdq
not
enter
outs
mov
jb
in
retf
sub
add
mov
int3
xchg
jmp
fstp
push
lods
dec
pop
rol
adc
fldcw
xor
fdivr
outs
pmaddwd
arpl
sbb
ret
aam
and
repz
ror
ins
ins
in
xor
or
mov
test
jno
ret
push
sti
cmp
rcr
ficomp
stc
fld
lods
imul
mov
call
mov
ret
out
aam
pop
cmp
mov
dec
sbb
mov
ins
sbb
cmc
sub
sbb
(bad)
inc
jno
(bad)
in
and
fdivr
int
ss
imul
mov
mov
(bad)
xor
icebp
and
push
pusha
push
icebp
movs
push
adc
cwde
jne
push
adc
rcr
and
push
push
jo
ret
jb
cmp
push
xchg
sub
in
mov
daa
bound
add
test
mov
(bad)
arpl
inc
inc
arpl
fld
fimul
movs
push
outs
xor
and
nop
shl
ja
cmps
lock
jge
je
out
lods
jo
or
mov
enter
mov
jle
or
fld
scas
(bad)
cmp
jno
push
daa
imul
fsub
dec
mov
fbstp
xlat
mov
pop
inc
jno
sub
lods
pop
not
mov
in
jnp
or
sub
int3
inc
jne
or
mov
add
mov
pop
adc
pop
cmps
jg
sub
popa
fdivr
sahf
ss
ret
sbb
dec
in
(bad)
sbb
mov
div
mov
and
stc
shl
jns
cmp
sub
vpunpckldq
enter
inc
jb
hlt
xor
dec
fnstcw
sbb
mov
imul
je
mov
stos
mov
stc
bound
stc
sub
cdq
test
sti
xchg
scas
scas
push
scas
fld
xchg
sub
pop
not
xor
push
out
mov
dec
les
cmp
mov
add
shl
add
dec
push
sub
cmp
jno
cmp
cs
cwde
leave
addr16
hlt
pop
not
call
pop
xor
adc
dec
mov
mov
icebp
repz
sbb
enter
cwde
xchg
inc
xor
sub
ret
sub
cmp
call
add
mov
jbe
or
lock
pslld
push
cmp
lock
mov
cmp
mov
jmp
lods
pop
inc
outs
imul
pop
fiadd
mov
lds
sub
jl
lock
pop
loop
(bad)
stos
push
or
sbb
jns
test
mov
push
stos
sub
sar
pop
dec
std
retf
xor
pop
push
fwait
sub
stos
stos
les
push
cdq
scas
enter
arpl
repz
mov
mov
repnz
sub
outs
inc
outs
mov
pop
mov
retf
and
mov
or
(bad)
int
pop
js
ins
minps
xchg
xchg
mov
js
rcr
xchg
scas
clc
pop
mov
add
push
sbb
mov
or
xchg
ret
dec
dec
rcr
mov
leave
mov
adc
xor
sub
(bad)
test
mov
or
push
clc
out
push
xchg
cmp
pop
push
data16
mov
sub
ins
push
xor
je
test
mov
fdiv
adc
dec
and
dec
sbb
cmp
rol
inc
(bad)
int
fistp
lahf
xor
ret
sti
out
xchg
test
adc
xchg
inc
xor
push
repz
jecxz
jno
sub
cmps
pop
xor
int3
dec
fmulp
ss
test
push
out
outs
cwde
es
mov
dec
in
inc
jnp
add
sub
test
pop
dec
or
movsx
cmp
inc
jne
xchg
addr16
retf
add
clc
pop
jmp
fld
pop
lahf
out
xor
clc
sub
call
cs
popf
stos
mov
adc
xchg
neg
vpaddd
lds
push
sbb
loop
adc
push
dec
jnp
jle
lea
je
call
cmc
fbld
ret
pop
imul
imul
arpl
mov
or
fcom
arpl
sub
xor
adc
sbb
jmp
shr
xchg
lods
fidivr
mov
add
push
xchg
jae
xor
xor
cmp
sub
xor
push
inc
adc
sub
sar
mov
or
pop
shl
sbb
bound
dec
int
data16
ror
movs
test
cmps
inc
ficom
stos
das
jns
mov
mov
pop
sub
jmp
push
aaa
sbb
sbb
adc
out
add
stos
mov
rol
mov
fisubr
mov
inc
sbb
push
aad
or
in
dec
mov
loopne
dec
mov
sbb
fisub
call
outs
and
sti
addr16
adc
scas
or
inc
test
mov
movs
xchg
ins
pop
xor
pushf
mov
sbb
jl
xchg
ror
aad
test
push
xchg
sbb
cmp
pop
mul
xor
fsubr
(bad)
enter
out
jo
inc
js
or
cmp
or
inc
fs
mov
(bad)
mov
dec
push
jmp
mov
xchg
jo
lods
push
jno
sbb
fs
movs
push
test
ret
push
imul
pop
in
mov
icebp
inc
adc
int
aaa
cmps
lahf
aas
jnp
cs
stos
cld
push
scas
cmp
pop
movs
push
inc
les
ret
ror
mov
pop
hlt
pop
fist
sbb
into
mov
rdmsr
mov
jmp
jl
(bad)
pusha
fmul
mov
jns
fdivr
xor
adc
inc
data16
bound
dec
dec
adc
dec
out
ins
mov
pop
cmp
adc
add
repnz
shl
(bad)
rcl
push
clc
mov
leave
lods
pop
jb
jg
lds
cmp
or
stos
mov
xchg
cwde
nop
inc
adc
ins
fadd
in
pusha
aas
push
or
xor
fcomip
pop
mov
mov
mov
fstp
jnp
cmps
and
mov
repnz
mov
repnz
or
ret
loopne
leave
jb
pop
and
out
dec
push
sbb
sub
imul
dec
adc
dec
mov
sbb
mov
inc
mov
sti
push
les
push
or
cdq
addr16
fwait
fs
sub
push
mov
sub
int
jmp
in
jno
push
push
cmc
inc
stos
cld
xor
mov
jmp
adc
out
cmp
pop
dec
xchg
pop
fs
xor
push
aaa
and
adc
adc
js
jmp
shl
mov
xchg
jbe
enter
imul
push
bound
lds
jbe
xchg
fidivr
push
outs
pusha
out
mov
test
cmp
adc
mov
popa
into
ds
call
dec
xor
xchg
jg
shl
gs
enter
mov
aad
setnp
hlt
fs
jp
fimul
inc
scas
sub
daa
pop
xchg
cmp
ins
not
xchg
or
push
inc
or
inc
or
arpl
jmp
cmc
add
jb
dec
fwait
stc
outs
and
iret
scas
lea
iret
mov
pop
stos
mov
repnz
inc
or
dec
cmps
sti
pop
cmp
fisubr
jle
sub
push
pop
jge
cmps
pop
ror
or
sub
cmp
inc
and
(bad)
(bad)
fbstp
out
push
leave
sahf
add
sbb
adc
mov
cmp
retf
lods
push
mov
and
mov
stos
leave
mov
or
fiadd
adc
out
xor
cmp
psubsw
push
in
int
inc
pop
rcr
inc
sub
(bad)
loop
and
mov
push
mov
or
xlat
mov
pop
sub
outs
push
int3
and
mov
les
add
pop
mov
out
sbb
test
add
pushf
das
push
mov
mov
pushf
xchg
or
inc
adc
rcr
lds
add
cmp
jle
jg
fdivr
xlat
das
pxor
pop
xlat
add
mov
jmp
jle
cmp
mov
fisubr
mov
shl
sub
xchg
push
scas
add
test
jg
in
lods
pop
or
lock
loope
daa
fmul
pop
jbe
dec
or
and
mov
cmps
stos
(bad)
mov
ret
int3
adc
cli
mov
(bad)
stos
xor
pop
call
push
adc
adc
inc
adc
ret
pop
iret
sbb
and
fdivr
add
into
scas
mov
push
sub
mov
das
gs
and
std
jno
loop
push
and
push
xchg
pop
push
fistp
fcom
jo
in
push
mov
sub
(bad)
push
xor
retf
dec
pop
mov
jns
call
test
push
xchg
xor
adc
mov
fcomi
shl
js
and
xor
sti
cmp
xor
mov
pop
enter
das
test
sar
xchg
sub
sbb
arpl
clc
ror
mov
mov
mov
fistp
movs
comiss
inc
adc
inc
pop
cdq
out
xchg
jle
es
inc
clc
js
rcl
aam
sub
shl
test
out
cdq
mov
out
out
xchg
jae
adc
cmp
push
add
mov
mov
cld
mov
sbb
dec
jbe
fisttp
cmp
sub
lock
cs
xor
popa
cwde
pop
shr
or
and
in
sub
add
div
or
ja
aad
xchg
pop
mov
in
dec
jmp
dec
dec
add
movs
loop
mov
and
pushf
test
pushf
test
loop
hlt
aad
jle
and
fsubp
sbb
xchg
mov
sbb
push
push
add
pop
push
push
imul
dec
(bad)
adc
aas
pushf
mov
gs
(bad)
jmp
lock
mov
ret
test
xchg
jo
jl
jl
push
dec
ins
fnsave
push
repz
daa
int3
cmova
fwait
ror
cmp
scas
test
xchg
cli
into
dec
pop
jg
mov
pop
xchg
sub
rcl
pop
push
xchg
jl
push
test
(bad)
out
ins
mov
jmp
movs
enter
sbb
xor
cwde
fldenv
ins
dec
xchg
lds
ja
aam
loope
aad
sbb
xor
sub
in
lds
and
adc
mov
dec
movs
jb
aaa
cs
ins
fsub
xor
out
mov
rcl
lods
in
ficomp
dec
jb
cmp
jo
xchg
add
ins
cmps
repnz
int
out
jo
xor
push
inc
xor
fnsave
int3
lods
adc
arpl
sbb
xchg
xor
dec
pop
push
aaa
add
xor
int
add
xchg
xchg
scas
pop
stos
lahf
test
push
jns
pop
aad
add
xor
call
mov
cs
inc
xchg
mov
mov
pop
mov
and
aas
ret
mov
or
jp
(bad)
(bad)
cmp
cmps
or
cmp
mov
cmp
push
das
repz
retf
jbe
mov
and
retf
call
sub
jp
iret
retf
mov
inc
xchg
jmp
mov
add
and
mov
push
jecxz
fidiv
or
push
sti
fld
fld
into
ret
leave
(bad)
out
push
aas
mov
sub
sub
jmp
dec
sbb
sbb
imul
cli
add
ds
retf
mov
xlat
add
stos
mov
push
xchg
mov
retf
pop
push
out
out
xchg
icebp
ret
inc
mov
das
retf
aam
ds
mov
mov
mov
dec
sbb
dec
inc
push
div
mov
loop
stc
dec
outs
adc
out
fs
sub
or
repz
mov
sar
and
jecxz
ja
cmp
in
sahf
inc
out
cmp
lea
push
fsub
pop
jnp
mov
lds
and
aam
popa
mov
mov
cmp
mov
mov
add
push
imul
mov
mov
ror
or
push
and
jnp
pop
xchg
das
inc
pop
out
rol
cmc
xchg
adc
popf
cmp
loop
mov
test
retf
cmp
hlt
imul
mov
aam
and
jae
xchg
rcr
ret
and
jbe
mov
sub
repnz
pop
dec
or
mov
ds
idiv
ficomp
xor
cmps
sbb
jmp
sub
js
jae
sar
add
inc
shl
retf
repnz
mov
loopne
mov
addr16
xchg
push
add
adc
adc
cld
sar
jb
add
cmps
xchg
jb
jmp
mov
pop
enter
jns
lods
test
jmp
out
imul
and
int
dec
bound
retf
cmp
sbb
dec
dec
scas
lahf
and
mov
(bad)
lea
pop
add
or
arpl
ret
hlt
sbb
cli
xchg
sbb
(bad)
in
mov
mov
loopne
shl
mov
inc
mov
add
inc
sbb
push
dec
shl
xchg
lods
sub
aam
pop
cld
jecxz
fild
push
adc
ficomp
push
test
xchg
mov
lods
or
call
pop
jnp
daa
pusha
aam
addr16
(bad)
sbb
test
add
adc
push
inc
js
pusha
sub
dec
sbb
xlat
jne
push
lds
or
scas
inc
call
mov
jmp
and
outs
sbb
ds
js
stc
or
pusha
dec
daa
mov
fldenv
pop
xor
and
test
dec
or
hlt
mov
cmp
fimul
clc
inc
cmps
sub
dec
pop
fidivr
mov
push
retf
mov
imul
inc
xor
mov
mov
mov
repnz
mov
stos
imul
cmp
sub
aad
call
mov
jge
test
sub
push
repz
jmp
sub
outs
imul
movs
lock
jno
test
cmp
pushf
in
or
sbb
xchg
loope
add
or
add
adc
xchg
iret
dec
cmp
cmp
jae
adc
and
xchg
lahf
jmp
xchg
adc
mov
sti
mov
ins
add
mov
fisttp
iret
xor
es
repnz
mov
movs
mov
nop
clc
adc
add
push
sbb
push
pushf
pop
adc
rep
and
(bad)
adc
cmps
mov
ror
cli
inc
cmp
mov
mov
cli
(bad)
pop
test
in
cmps
lea
add
fisub
dec
dec
mov
inc
sbb
add
(bad)
inc
push
retf
mov
adc
hlt
inc
bound
push
or
cmp
loope
leavew
repnz
cmp
or
into
mov
xor
out
mov
pushf
cmp
cmp
pop
rcr
mov
outs
mov
pop
movs
(bad)
enter
ja
sysexit
dec
fst
inc
cmp
xor
(bad)
into
ja
add
jmp
cmc
mov
fst
xor
loope
mov
stos
retf
jp
mov
stos
mov
inc
lahf
push
mov
xor
push
loope
(bad)
mov
push
mov
out
fbstp
pop
pop
jne
mov
or
jmp
mov
and
sbb
bound
or
inc
retf
adc
pop
and
loope
icebp
fs
test
addr16
bound
xchg
and
out
dec
adc
dec
sbb
inc
xor
movs
cmp
scas
push
inc
push
jo
outs
adc
bound
jno
xlat
in
pop
stos
faddp
mov
retf
out
and
dec
and
jp
lock
leave
push
mov
inc
cmp
dec
sub
fcmovb
add
ret
inc
push
fwait
dec
xchg
mov
ins
test
cmc
cmp
(bad)
cmc
dec
jbe
sbb
nop
and
iret
not
movs
add
cmp
jno
xchg
pushf
xor
movs
(bad)
ja
and
stos
xchg
arpl
in
cmp
sbb
repnz
shl
xor
aaa
jbe
(bad)
stos
xchg
cmps
nop
jnp
bound
scas
(bad)
cmp
push
repnz
inc
push
cld
jp
sbb
mov
pop
xcrypt-ofb
cmps
stos
rol
mov
popa
mov
enter
(bad)
outs
mov
pop
mov
sub
int
outs
or
loopne
loope
jg
dec
jmp
fwait
xor
cmp
jb
cmps
mov
ret
adc
sbb
sar
sub
mov
jno
pop
and
(bad)
adc
pop
xor
lea
jb
mov
sbb
jge
into
jno
fistp
cmp
pop
push
out
cld
into
push
mov
(bad)
pop
pop
inc
xor
dec
ins
cwde
adc
cli
xchg
mov
or
cmp
imul
in
cdq
xor
lahf
mov
stos
xchg
retf
das
jmp
cs
sub
mov
push
out
inc
inc
mov
xchg
test
push
les
pop
add
hlt
rcr
mov
rcl
mov
iret
xor
jmp
cli
int
push
xor
repnz
cmp
xlat
mov
or
xor
imul
mov
arpl
jmp
mov
inc
scas
pop
jecxz
movs
in
ficom
push
xchg
push
sub
fs
sbb
jle
xchg
pop
in
mov
gs
into
jbe
add
jns
cmc
fwait
imul
shl
hlt
mov
std
cdq
and
add
nop
inc
(bad)
sbb
xchg
es
jge
cwde
adc
test
(bad)
int
dec
and
rol
or
in
(bad)
jmp
and
aad
jge
bound
xchg
add
xchg
popf
gs
dec
add
add
push
das
or
mov
adc
in
fstp
loop
jecxz
jae
(bad)
adc
jbe
fist
dec
dec
cmp
pop
push
cdq
leave
cld
jns
cmps
and
push
cmp
or
mov
push
jmp
mov
pusha
pop
mov
xor
jo
lods
int
dec
mov
cmp
shl
aam
fs
jno
std
sbb
mov
xor
inc
adc
dec
push
aad
lds
or
and
mov
adc
movs
ins
mov
adc
pop
mov
jmp
imul
xchg
cmp
pop
mov
push
rcr
cmp
loopne
jmp
push
out
dec
pop
scas
mov
mov
fimul
pop
test
xor
pop
iret
fldenv
add
xlat
fdivr
les
xor
cmps
pusha
lods
nop
inc
ds
or
sbb
xchg
std
(bad)
outs
push
push
sbb
ret
pusha
pop
rol
or
retf
jecxz
pushf
mov
sbb
add
push
push
lahf
and
(bad)
fstp
jl
push
cmp
ins
pop
rol
cmps
cmps
and
fadd
arpl
add
lds
push
fstp
lahf
dec
jmp
hlt
lea
dec
xchg
adc
jae
add
rol
push
xchg
or
cmp
retf
jae
ja
pop
xor
xor
sub
ftst
add
mov
pusha
sti
addr16
push
push
dec
and
xchg
aas
sbb
jl
pushf
icebp
aam
imul
or
stos
in
ins
iret
shl
clc
int3
fstp
cmp
pushf
add
pop
sbb
(bad)
and
pusha
mov
lahf
das
pop
and
cmp
sahf
sbb
outs
cli
add
cdq
pop
xchg
cmp
les
sbb
mov
icebp
and
data16
inc
adc
mov
xchg
jo
jecxz
(bad)
adc
xchg
mov
movs
ins
adc
test
inc
jmp
push
bound
dec
lods
aad
fnclex
enter
mov
out
(bad)
and
push
sti
sar
shl
jnp
test
mov
mov
dec
pop
adc
ds
add
sub
fs
jnp
cmp
mov
inc
mov
adc
movs
cli
ror
cwde
xchg
mov
nop
inc
test
or
loope
mov
sub
in
dec
and
in
popf
(bad)
or
dec
popf
les
or
cmc
fcmovb
and
cwde
das
jb
(bad)
ficom
xor
sbb
sub
fnstenv
iret
out
mov
inc
cmp
mov
xchg
ja
in
pop
sub
jb
out
daa
sub
adc
imul
rcr
jmp
ror
repz
call
inc
in
enter
pop
pop
(bad)
mov
loop
cs
ja
retf
sbb
(bad)
outs
adc
je
test
cmp
jbe
out
push
int
dec
dec
xchg
push
icebp
inc
mov
ja
adc
xchg
dec
push
cmp
fld
das
or
pushf
jge
jmp
push
lds
push
std
cli
sti
cmps
xlat
addr16
mov
inc
mov
xchg
retf
(bad)
data16
or
rcl
sbb
and
in
shl
sahf
cmp
cmps
pusha
mov
in
test
and
clc
mov
push
int3
xchg
aam
mov
xchg
mov
jb
and
in
(bad)
das
xor
push
sbb
aas
mov
xor
ins
shl
dec
push
stc
inc
fstp
cmp
dec
inc
inc
mov
sub
fwait
shl
mov
cmp
fild
(bad)
rol
into
push
pop
rcl
(bad)
int3
cmc
call
inc
cdq
sbb
jg
add
jae
adc
dec
js
add
or
sbb
stos
loopne
add
sub
inc
or
sar
lock
or
aaa
sub
lock
adc
cmps
mov
test
in
dec
lea
(bad)
call
push
fwait
movs
push
retf
es
mov
jle
lods
(bad)
lea
inc
push
pop
imul
imul
push
inc
or
cli
mov
sbb
pop
test
add
adc
and
test
outs
add
jge
neg
into
pushf
imul
and
js
pushf
jb
mov
jg
and
or
out
repz
sub
or
es
ret
cwde
add
out
inc
call
jbe
stos
int3
shl
add
adc
gs
add
xchg
mov
jle
xchg
xchg
cmp
mov
icebp
sub
jne
lods
mov
dec
cmps
jbe
mov
xor
aaa
mov
cmp
add
stos
mov
mov
sbb
fbld
fwait
mov
pop
dec
add
scas
adc
jbe
dec
push
push
mov
add
sbb
cld
mov
fidiv
and
icebp
mov
cwde
xor
push
dec
push
jnp
out
movs
lods
sub
pop
or
pushf
sbb
push
sub
xor
mov
jge
mov
shr
(bad)
mov
push
xor
addr16
out
mov
and
pop
leave
sbb
push
enter
fsubrp
inc
push
icebp
pop
mov
mov
jecxz
gs
icebp
sub
jmp
sbb
inc
cmc
jbe
and
(bad)
xchg
test
cmp
pop
scas
jb
pop
and
fistp
arpl
bound
shr
ret
xchg
movs
mov
std
jle
xor
fcom
test
dec
(bad)
push
mov
pop
xchg
ja
pop
mov
sub
mov
xor
pushf
mov
cdq
push
jne
daa
xor
mov
sub
(bad)
repz
mov
xchg
xor
imul
pop
cmps
ficom
add
lods
inc
cmp
dec
ins
and
mov
mov
ins
clc
xor
push
sub
out
inc
mov
(bad)
sar
scas
aas
xor
xchg
enter
xchg
lods
and
mov
mov
sub
xchg
cmp
mov
or
cld
jnp
js
call
xchg
adc
or
dec
jg
mul
(bad)
in
inc
dec
inc
xor
ja
icebp
ds
add
xor
xchg
add
pop
jbe
scas
xlat
gs
cs
aad
adc
pusha
xlat
xchg
lahf
jl
les
nop
mov
adc
(bad)
(bad)
or
retf
(bad)
or
repnz
inc
and
mov
ja
js
cmps
cmp
ds
jne
adc
sahf
sub
into
js
lods
call
loopne
dec
push
in
aaa
test
or
mov
call
sbb
mov
imul
push
cmp
cmp
pop
sub
aas
jl
lods
out
sub
les
ja
mov
ret
xchg
cmps
lods
dec
imul
test
loopne
js
(bad)
cmp
retf
inc
jmp
xor
call
ficomp
push
lds
or
sbb
movs
inc
add
fnstenv
aam
mov
imul
ins
ret
sbb
ss
mov
outs
mov
call
addr16
dec
jle
xchg
es
mov
mov
(bad)
ja
loop
pop
pop
(bad)
sti
daa
loope
mov
push
push
pop
fidiv
cmc
(bad)
clc
adc
mov
into
or
jp
bound
sbb
fst
sub
xor
or
mov
inc
mov
fsub
ins
lods
je
xor
retf
push
enter
mov
and
jmp
cmp
add
lods
movs
adc
(bad)
je
push
pop
jno
sub
mov
jmp
test
idiv
dec
sbb
sbb
mov
(bad)
std
cwde
aad
push
mov
xor
pop
(bad)
cmp
(bad)
sbb
mov
ficomp
ins
loopne
add
sub
adc
pop
sub
inc
cdq
mov
pop
pushf
pop
dec
hlt
and
dec
adc
or
ss
ret
fld
adc
push
daa
xchg
xlat
jmp
mov
pop
(bad)
sub
mov
push
push
retf
push
or
dec
push
inc
int3
mov
sbb
jg
pop
(bad)
adc
cmp
fisub
add
mov
push
dec
push
idiv
cmc
or
fcom
fcmovnu
das
xchg
sub
jbe
cli
call
jp
dec
jl
or
scas
pop
inc
in
(bad)
cwde
adc
clc
or
test
adc
fcmovne
shr
adc
jle
add
leave
into
dec
pushf
sbb
scas
les
dec
and
dec
lods
mov
imul
std
jp
mov
fucomp
or
call
ret
(bad)
es
sub
int3
das
imul
sub
sar
sbb
mov
js
addr16
sbb
icebp
shl
fisubr
xchg
imul
inc
sub
or
and
(bad)
ror
out
inc
stos
adc
jno
pop
adc
rol
ret
and
push
jmp
mov
xor
(bad)
ins
shr
xchg
fdivr
xor
in
add
fidivr
es
xchg
arpl
mov
rol
add
adc
xor
xchg
out
dec
sbb
cmps
ror
cmp
push
stc
mov
jecxz
add
or
fs
popa
lods
shr
mov
xor
jle
xor
sbb
jg
push
xchg
ret
xchg
out
sub
push
cdq
and
cli
repnz
mov
ins
push
sub
jne
mov
pusha
ret
js
xchg
fsubr
jae
ss
data16
in
les
sub
addr16
mov
push
mov
add
mov
scas
add
push
(bad)
xchg
xor
fist
mov
fiadd
call
mov
bound
rol
and
(bad)
in
xchg
lea
sub
icebp
out
jmp
push
sub
jns
sub
jo
pop
retf
jno
(bad)
cmp
xchg
(bad)
inc
push
mov
loopne
repz
and
xchg
js
and
dec
cmp
(bad)
popf
or
xchg
jmpw
jns
inc
cld
add
nop
ret
sahf
jmp
sub
and
mov
cmp
push
mov
and
gs
jmp
inc
push
jp
add
jp
add
pop
dec
dec
imul
adc
and
int
push
xor
sbb
lea
sbb
stos
cmp
aam
(bad)
enter
push
push
repz
sub
pop
mov
or
cmp
and
loopne
lods
and
clc
and
fiadd
enter
sbb
rcl
xchg
add
push
inc
push
mov
or
xchg
push
scas
adc
ins
mul
adc
test
fs
aad
pop
aad
sub
pop
push
mov
clc
and
cmp
loop
cmp
sbb
or
xor
out
lahf
cs
jl
dec
mov
or
clc
adc
inc
ret
and
jbe
jns
or
pusha
pop
das
inc
sbb
out
add
das
add
addr16
and
jmp
push
dec
loop
jecxz
cmp
stc
cdq
out
outs
mov
std
dec
cmp
and
sbb
cli
xchg
test
or
out
int
(bad)
daa
out
mov
shl
ret
mov
push
push
mov
mov
cmp
mov
enter
adc
pop
and
test
rol
inc
js
push
lods
out
inc
jge
out
mov
sub
(bad)
rep
and
or
xchg
xor
stos
cwde
push
mov
sbb
xchg
sbb
cmp
and
add
mov
ret
mov
jb
test
ins
push
in
sub
shr
loopne
rcr
push
and
jbe
jle
pushf
jnp
lods
cmps
fsubp
adc
cmp
and
xor
sub
fistp
loop
fidiv
imul
sahf
cmp
dec
imul
jmp
mov
aas
cmc
cmp
por
mov
jo
cmp
or
in
popa
mov
test
pushf
stos
bound
retf
ror
sbb
cs
pop
inc
sahf
test
test
aas
cli
mov
pop
mov
add
neg
(bad)
jo
push
out
push
inc
daa
cmp
sti
cld
aaa
jle
mov
stos
out
pop
mov
jns
dec
ds
mov
cmps
cmp
mov
ins
stc
inc
cmp
mov
stos
jmp
(bad)
fst
fistp
ins
mov
push
sbb
aad
push
mov
lock
(bad)
push
pop
sbb
and
jge
out
rcr
and
sub
sbb
xor
ret
imul
xchg
imul
jb
jle
jbe
or
pop
rol
retf
jmp
xchg
neg
pop
dec
jne
aam
jo
mov
jle
inc
cmp
outs
mov
(bad)
cmps
iret
mov
sub
pop
sub
out
int3
adc
or
test
xchg
cmp
mov
xor
loope
push
jns
scas
sub
ins
sub
push
arpl
xchg
mov
jmp
fwait
lods
cmp
mov
es
dec
dec
inc
mov
jmp
mov
imul
mov
daa
cld
adc
int3
xchg
and
jle
(bad)
in
outs
scas
retf
add
jae
jecxz
cli
cmp
xor
mov
mov
scas
iret
push
push
das
retf
adc
inc
fimul
add
out
pop
dec
std
(bad)
dec
in
mov
call
out
mov
xchg
pop
dec
mov
jne
in
xchg
jle
pop
dec
pop
addr16
fiadd
gs
push
out
add
cmp
inc
adc
repnz
jnp
jp
js
call
in
clc
mov
lahf
jno
xchg
cli
out
cwde
push
dec
push
ins
mov
and
gs
fldenv
(bad)
mov
xor
imul
lea
lahf
add
clc
mov
repz
arpl
loope
leave
ret
lds
lea
pop
inc
xchg
nop
pop
sbb
push
xchg
mov
mov
dec
inc
sbb
ret
repz
out
rcl
cmp
and
mov
out
out
mov
cwde
mov
lea
mov
mov
mov
add
cmp
or
loopne
mov
sbb
cmp
mov
pop
(bad)
pop
dec
add
pop
xchg
pop
stos
push
inc
mov
lods
test
stc
fwait
ja
sbb
in
movs
jnp
xchg
add
and
xor
push
xor
mov
scas
adc
enter
pop
pop
mov
mov
add
mov
imul
xchg
lock
scas
inc
add
xor
add
inc
cwde
das
and
add
cwde
fldenv
adc
rcr
sbb
ffreep
call
cld
cmp
cmp
mov
or
call
ret
ffree
aad
fidiv
ds
xchg
adc
faddp
cdq
and
pop
xor
push
rcr
mov
sub
cmps
rcl
sbb
add
xor
imul
std
test
jmp
dec
push
jle
inc
or
ins
bound
pusha
pmulhw
or
mov
aas
addr16
sbb
leave
rol
jno
fcomp
cwde
and
les
mov
jg
jnp
scas
shl
adc
movaps
icebp
sbb
mov
add
push
cmps
push
sub
ds
add
jle
jnp
adc
sub
cmp
xlat
jb
xchg
shl
retf
cmp
test
pop
mov
lock
add
pop
xor
inc
ss
in
sbb
jae
and
stc
push
adc
popf
xchg
jmp
(bad)
and
movs
dec
xor
(bad)
(bad)
pop
jb
sbb
or
or
push
add
js
sub
mov
xchg
mov
out
(bad)
in
adc
inc
das
push
stos
dec
mov
loope
into
inc
sub
sub
pushf
nop
pusha
test
mov
mov
or
xchg
or
call
dec
and
cmp
mov
in
adc
pop
aad
daa
fwait
mov
mov
inc
retf
jmp
call
data16
neg
dec
and
or
lods
enter
ret
fild
xchg
jae
mov
add
(bad)
hlt
movs
inc
mov
jo
retf
jae
mov
test
int3
fs
and
addr16
xor
xor
mov
rol
jo
jl
ja
mov
or
dec
lock
jno
test
int3
lahf
push
push
inc
inc
popf
mov
xchg
rcr
addr16
cmps
or
add
push
ss
sub
idiv
comiss
add
lods
jp
dec
dec
mov
mov
mov
xor
or
mov
xchg
jge
push
push
mov
icebp
ror
je
sbb
pop
sub
adc
cmps
gs
jl
aad
aas
jle
sub
jge
and
jns
loopne
rcr
push
push
sar
in
dec
sub
popf
scas
add
jmp
das
imul
sub
push
xchg
add
rol
mul
jno
jnp
push
fnsave
jl
fist
or
sbb
imul
pop
and
xlat
inc
retf
mov
ja
mov
stc
ret
adc
rcl
fsubr
aad
push
or
jmp
and
mov
pop
dec
shr
mov
pop
lahf
sub
test
xchg
(bad)
add
dec
imul
and
mov
test
xchg
dec
jnp
jnp
cmps
sbb
fisttp
gs
adc
jle
jno
cli
or
dec
and
fs
inc
jg
fdivrp
jmp
jne
hlt
or
aaa
jmp
rol
adc
mov
push
mov
pusha
pop
jle
fsubr
xor
pop
inc
das
sbb
adc
push
call
sahf
(bad)
push
cmp
pusha
adc
ret
cmp
sbb
in
arpl
fisub
push
outs
inc
inc
hlt
or
lods
and
pop
lods
dec
outs
mov
test
test
jecxz
sbb
mov
cmp
test
sbb
push
jae
jnp
jne
retf
ret
mov
xchg
xor
outs
cli
test
loopne
int3
or
(bad)
cli
xchg
xor
jb
pop
inc
dec
push
push
push
dec
fwait
add
test
repnz
mov
mov
paddq
adc
es
push
stos
das
push
mov
sbb
movs
xchg
(bad)
add
cmp
cli
pop
pop
test
adc
aas
mov
push
imul
sti
cli
pusha
cld
je
fcomp
int3
xor
jbe
sti
fstp
mov
or
ret
rol
and
fmul
pop
(bad)
push
push
and
xchg
mov
xor
and
pop
dec
xchg
es
push
mov
push
fnsave
loopne
xchg
(bad)
into
dec
ret
sti
cld
push
loope
(bad)
jbe
lds
loope
dec
jbe
sahf
and
xor
add
or
inc
clc
test
mov
mov
fcomp
jno
sbb
mov
sbb
rol
sar
xor
mov
call
inc
adc
and
dec
cld
cmps
push
call
loop
data16
rol
sti
mov
ret
into
dec
pusha
mov
scas
fild
add
repz
ror
sub
jae
cmp
add
cmp
xchg
cs
sub
int
xchg
aas
xor
and
fild
add
xlat
fisubr
sub
add
xor
mov
jo
jmp
mov
push
test
mov
(bad)
dec
cwde
jmp
std
(bad)
mov
mov
mov
fnstsw
mov
mov
dec
cmp
push
addr16
sbb
in
bound
and
sbb
xchg
jnp
lds
xlat
dec
aas
das
pop
or
jle
pop
out
jno
stos
mov
mov
add
xor
ds
inc
push
retf
dec
pop
mov
push
retf
mov
(bad)
call
push
sub
aaa
mov
pmaddwd
inc
inc
sub
xlat
out
mul
push
push
mov
inc
xchg
shl
in
lods
mov
dec
std
cmp
es
out
mov
lahf
out
fwait
bound
jne
push
pop
movs
mov
(bad)
jmp
dec
imul
jl
add
jl
xchg
movs
pop
in
scas
sbb
test
ret
imul
or
push
pop
adc
outs
enter
push
pusha
mov
fsub
inc
div
adc
cdq
cmp
xchg
mov
test
xchg
sbb
les
arpl
mov
pop
lea
mov
and
dec
dec
fnstenv
dec
jl
xchg
aaa
inc
and
idiv
pusha
stc
imul
jge
imul
addr16
out
cdq
pop
jg
mov
dec
mov
adc
xor
imul
sub
mov
and
mov
inc
jg
xchg
inc
and
mov
cwde
mov
and
push
jmp
ds
ror
dec
fst
jl
add
std
leave
lods
lods
dec
fstp
push
pop
cmc
jns
push
mov
loope
test
xor
jle
or
mov
shr
nop
push
xchg
jp
jp
adc
sbb
repnz
call
fsubr
je
pushf
ds
popf
mov
shl
pop
add
jmp
movs
mov
popf
(bad)
shr
xchg
push
ficomp
adc
(bad)
in
loop
psrld
pop
jnp
test
in
xchg
xlat
inc
jecxz
adc
sbb
mov
outs
das
dec
inc
mov
sbb
and
mov
mov
mov
jle
push
pop
mov
fwait
stos
mov
scas
dec
leave
xchg
push
add
mov
int
pop
sbb
sbb
cdq
sbb
sbb
cmp
add
(bad)
cmp
push
dec
adc
push
icebp
sub
(bad)
cli
mov
(bad)
cmps
into
add
pushf
ins
pop
push
add
xor
adc
adc
xchg
dec
or
inc
or
pop
test
sub
jmp
push
je
movs
mov
inc
cli
(bad)
stos
push
mov
fnstsw
mov
inc
jnp
and
push
clc
lock
cld
nop
rcl
dec
push
int
and
loop
fisttp
(bad)
mov
mov
cld
xor
push
jmp
or
push
or
jg
mov
aas
sbb
and
pop
ret
sbb
popa
pop
out
sub
fld
mov
pop
mov
aam
push
lea
loop
pop
adc
clc
loope
out
test
outs
and
sbb
inc
sahf
fsub
popf
push
ds
sbb
xor
xor
xlat
dec
idiv
call
and
dec
int
or
(bad)
mov
mov
or
push
fwait
cmc
enter
(bad)
das
pushf
movs
mov
jmp
and
test
dec
xchg
bound
xor
or
hlt
adc
xor
adc
add
shl
pop
enter
jp
mov
xchg
push
ret
(bad)
ss
imul
mul
xor
(bad)
cmp
dec
call
sub
mov
xchg
pop
add
push
xchg
out
ins
mov
jmp
push
les
push
ss
sbb
mov
mov
jno
loop
xchg
int3
cmp
dec
mov
pop
xor
rcr
jmp
aam
ins
add
jle
rcl
push
jmp
loopne
rcr
imul
mov
daa
in
mov
dec
and
clc
jl
adc
nop
(bad)
mov
xchg
je
sub
rcl
pop
mov
dec
mov
mov
jge
push
cmps
mov
push
(bad)
scas
cmp
lods
int3
lea
aas
rcr
rcl
push
push
shl
cmp
jg
arpl
xchg
lea
jne
mov
mov
pop
inc
out
hlt
mov
cld
hlt
push
into
xchg
shr
iret
adc
hlt
cmp
push
or
es
inc
leave
adc
leave
mov
pop
add
aam
adc
icebp
data16
or
in
xor
dec
sar
pop
push
cmp
inc
pop
add
inc
fdiv
pop
cmp
add
add
int
rol
dec
clc
mov
inc
xor
(bad)
pop
cmc
into
fidiv
xchg
shl
std
cdq
fbld
ret
loope
pusha
push
xor
(bad)
jmp
cwde
mov
xchg
or
pop
bound
(bad)
cmp
adc
mov
and
push
cld
fwait
pop
jmp
sub
cmc
add
imul
out
fcomp
push
les
sub
scas
(bad)
iret
jno
cmp
test
xchg
mov
cmps
fsubr
xor
js
sub
cmp
xchg
mov
pop
inc
xor
sub
div
cmp
pop
and
lods
jmp
pop
test
xor
mov
sub
pop
ficomp
repz
retf
(bad)
clc
cmp
inc
xor
jl
jg
ds
or
jns
cmp
pop
and
ret
cmp
lods
and
mul
sbb
mov
push
shl
retf
cmps
mov
mov
inc
mov
sub
cdq
test
push
ficom
scas
adc
dec
scas
sbb
enter
test
daa
push
xor
ins
xor
leave
inc
(bad)
popa
dec
add
dec
mov
add
rcr
fist
js
std
mov
test
cmp
push
dec
lods
inc
imul
icebp
xchg
addr16
hlt
std
lock
mov
in
aaa
mov
mov
add
jmp
ret
scas
test
nop
cmps
push
int
jo
(bad)
jmp
jecxz
and
call
xchg
sti
test
stos
ds
cwde
outs
movs
sbb
or
xchg
adc
into
outs
bound
lds
scas
inc
cli
iret
test
out
cs
inc
sbb
push
inc
loope
ja
or
jb
clc
sub
or
push
sub
dec
div
stos
sti
mov
push
loopne
and
mov
aam
cmp
ins
xor
mov
int
jg
test
push
add
shl
xchg
and
leave
and
mov
out
test
add
add
push
loopne
cmp
inc
mov
dec
and
mov
mov
dec
fdiv
cmc
fsubr
fwait
ret
jge
scas
sbb
mov
out
adc
push
dec
ret
daa
fadd
popa
cmp
xor
and
pop
cmp
add
jecxz
aad
loopne
in
bound
mov
xor
inc
fdivrp
adc
test
cmp
sbb
add
or
add
xchg
dec
push
push
lods
imul
and
pop
cmps
mov
push
sbb
inc
xor
shl
int3
mov
pop
in
push
jne
cmp
loop
cmp
fstp
jne
aam
jo
push
jmp
inc
sub
add
ins
dec
mov
sti
mov
jmp
popw
stos
ja
or
test
pop
(bad)
icebp
addr16
cmps
or
mov
jno
mov
jp
lods
adc
daa
pop
adc
sub
cmp
outs
call
pop
cwde
lods
push
pop
dec
je
pop
xor
outs
mov
pop
enter
add
inc
dec
sbb
push
jo
mov
ins
xchg
add
aas
(bad)
ss
outs
rol
dec
cmp
mov
pop
jne
inc
dec
out
xchg
lods
cmp
dec
lods
fadd
test
int3
jb
inc
xchg
dec
aas
ss
push
add
ds
dec
lods
je
daa
xor
inc
push
enter
xchg
pop
shl
ins
fisub
and
sbb
gs
neg
jnp
dec
sti
cld
mov
xchg
mov
xor
jns
or
jae
ins
ror
mov
imul
ror
fcom
xchg
shl
popa
sub
mov
jle
xor
outs
cmp
jge
stos
or
stos
inc
int
push
ja
inc
nop
cdq
sbb
mov
pushf
dec
call
xchg
jbe
adc
fisub
sub
push
retf
inc
and
inc
iret
and
test
push
nop
test
sub
repz
repz
gs
push
adc
or
pop
retf
jne
mov
push
fidivr
or
fidivr
pop
dec
mov
cwde
fwait
sahf
adc
std
and
jmp
xchg
cmp
mov
es
or
and
fisub
mov
adc
stos
not
sub
sub
mov
pop
sahf
cmps
jp
inc
mov
sub
add
adc
push
out
add
cmps
(bad)
push
mov
or
in
fcomp
test
int3
mov
or
imul
cmps
push
mov
inc
pop
cmp
int3
pop
mov
xor
jg
cld
sbb
nop
(bad)
mov
sar
pop
in
icebp
ror
and
sbb
mov
fldenv
cwde
sbb
pusha
cmc
inc
inc
push
sbb
push
(bad)
mov
mov
pop
retf
mov
aas
jbe
pushf
pop
jge
inc
push
dec
cmps
jmp
mov
std
jl
rol
hlt
sbb
shl
jp
jmp
fimul
jae
pop
shl
fsubr
pop
ret
jno
adc
cmp
cli
stos
test
enter
push
repnz
fstp
xchg
xor
mov
jecxz
pop
jne
dec
push
sub
add
or
mov
or
mov
sub
cmp
fiadd
stos
jns
inc
test
push
mov
test
nop
hlt
dec
int
sub
adc
inc
pusha
pop
xchg
jnp
(bad)
imul
pop
mov
mov
cmps
mov
inc
movq
adc
and
mov
(bad)
pop
jmp
sbb
fidiv
xor
mov
bound
sbb
add
shr
int
hlt
lods
aad
rol
jge
stc
stos
sahf
loopne
cmp
xchg
inc
mov
mov
retf
jge
rcr
push
std
inc
sbb
rcr
inc
mov
adc
icebp
in
fs
mov
ret
or
popf
loop
or
cwde
(bad)
push
mov
pop
xchg
xchg
pop
iret
xchg
sahf
enter
mov
and
mov
(bad)
lods
jne
push
xor
mov
or
mov
jl
and
dec
mov
ffreep
and
or
push
dec
(bad)
xchg
mov
lds
hlt
push
imul
lahf
and
jecxz
cwde
shl
cmp
push
lock
xchg
out
pop
aaa
and
sub
lods
jmp
sbb
std
in
pop
adc
sub
out
mov
iret
pop
sbb
in
pop
add
push
cmp
daa
test
shl
cli
cmps
inc
outs
in
pop
leave
push
mov
test
lock
push
pop
or
xchg
push
jmp
mov
and
mov
push
repnz
sahf
scas
mov
jno
add
mov
cmc
adc
dec
xchg
jecxz
sbb
lea
mov
mov
cmp
push
fnstsw
shl
ds
leave
out
push
bound
jp
fcomp
mov
and
cmp
jl
mov
adc
ins
cld
pop
pop
dec
(bad)
fisubr
dec
and
jmp
int3
and
sahf
pop
and
push
cmp
in
xor
adc
jae
xchg
sahf
call
xor
test
adc
adc
stc
add
jmp
aas
jecxz
fs
js
pop
popf
pop
clc
xchg
mov
sbb
push
test
shl
or
mov
xchg
stos
scas
iret
pop
inc
(bad)
sbb
jno
jp
shl
outs
je
pop
ins
ret
imul
fnstsw
mov
cmp
or
dec
pop
out
je
cld
call
fldenv
popa
lods
dec
jae
mov
adc
cmp
jnp
ret
xchg
loope
mov
cld
lds
stos
xchg
jle
fmul
or
shl
jle
popa
jmp
xor
jle
pop
test
loopne
inc
push
xchg
gs
outs
into
push
cdq
out
push
jne
mov
aaa
inc
mov
shr
shl
push
jne
test
add
pop
push
ins
lea
adc
adc
push
adc
outs
adc
(bad)
or
push
push
lahf
mov
lods
mov
retf
dec
pop
pusha
add
xor
sub
sbb
add
daa
and
fsubr
jge
loope
ret
pop
add
push
icebp
and
mov
push
hlt
js
sar
push
sub
retf
das
int
leave
dec
pop
stos
aaa
out
bound
stos
jbe
icebp
(bad)
cwde
jno
popf
cmps
daa
jno
jmp
sub
pop
in
fist
mov
dec
(bad)
sbb
and
sub
dec
cli
push
icebp
pop
out
shl
fisubr
mov
push
xchg
test
imul
jbe
je
xor
cmp
ins
into
retf
scas
pop
retf
mov
sub
dec
pop
mov
mov
jno
xor
inc
les
leave
in
stos
rcr
adc
jns
out
mov
inc
dec
(bad)
aad
repnz
mov
push
outs
cmc
ret
adc
lods
retf
sub
add
mov
imul
rol
shl
cs
aas
outs
ds
lds
(bad)
(bad)
sbb
inc
bound
xor
les
and
mov
loop
jne
fldlg2
add
and
and
ror
sar
aam
xor
aaa
cmp
ds
das
loope
shl
iret
int3
xor
lahf
xor
dec
pop
fdivr
es
outs
push
cli
mov
fs
movs
mov
xor
xlat
pop
imul
int3
stc
inc
shl
and
ss
movs
out
xchg
push
inc
push
(bad)
cmc
out
cmp
iret
lock
jnp
push
sub
sar
(bad)
scas
and
scas
aam
(bad)
mov
xor
mov
and
(bad)
xor
inc
pop
jnp
push
aam
adc
daa
ds
mov
sub
xchg
mov
pushf
cmps
in
das
test
sbb
xchg
mov
xor
pop
cmp
cwde
inc
mov
rcl
pop
sub
xor
scas
sub
xchg
dec
ficomp
out
pop
xlat
test
call
mov
xchg
xor
iret
aaa
aam
push
mov
retf
(bad)
mov
pop
fadd
test
sbb
in
rcl
pop
jbe
popf
mov
adc
imul
push
out
dec
pop
dec
ds
mov
inc
xchg
or
movs
pop
shl
ret
out
pop
in
nop
sub
jbe
push
mov
cmps
and
jae
or
jne
push
mov
sar
fcomp
(bad)
cmp
sahf
mov
lock
jecxz
mov
jnp
mov
xor
mov
add
or
out
gs
jp
and
fisub
fmul
and
movs
push
pop
jnp
mov
imul
dec
int3
dec
out
bound
(bad)
sbb
pop
test
xor
and
xor
and
imul
inc
or
pop
xor
ficomp
mov
pop
or
inc
add
inc
mov
lods
or
mov
push
xor
sbb
retf
ja
dec
in
xchg
sbb
iret
jp
sti
and
push
mov
mov
mov
rcl
dec
sti
fucomip
inc
pop
clc
daa
arpl
aam
xchg
movs
pop
or
fld
mov
test
call
pop
push
cmp
mov
push
sbb
cmp
pusha
cli
sub
loopne
adc
cmp
pop
(bad)
xor
jle
xchg
shl
int3
pop
jmp
push
fisttp
mov
repz
xchg
(bad)
mov
sbb
inc
adc
and
ja
push
add
cmp
xor
mov
cmp
mov
ins
repz
or
jno
mov
lods
and
jno
das
int3
in
sub
ret
ins
mov
ins
mov
ins
mov
ins
call
out
into
ss
shl
push
pop
(bad)
sbb
sahf
int3
push
xchg
add
pop
imul
xor
dec
das
pop
cwde
xchg
scas
pop
jge
mov
rcr
or
inc
add
jmp
add
dec
syscall
or
jmp
imul
jno
stc
inc
xchg
fcomp
pop
pop
xchg
mov
hlt
inc
mov
sbb
xlat
lock
push
test
mov
sbb
mov
and
ror
test
xchg
or
retf
in
sbb
adc
push
aam
mov
sbb
aad
dec
jo
in
out
add
sbb
fcom
shr
sub
pop
dec
nop
add
mov
mov
cs
jbe
stc
lods
push
add
inc
xchg
aam
popa
jae
daa
mov
and
xor
mov
movs
test
lods
xor
mov
stc
jbe
inc
int
ins
xchg
push
jns
std
(bad)
pop
in
push
cmps
daa
cld
int
sub
pop
dec
stos
test
ficomp
or
aaa
ds
xchg
sbb
ror
adc
push
and
pop
dec
movs
ins
in
cmps
xor
outs
xor
outs
dec
add
test
movs
pop
cdq
test
stc
clc
arpl
call
bound
enter
pop
or
bound
pop
outs
es
popa
mov
mov
imul
jae
cmps
add
in
and
fld
sbb
inc
xor
adc
cmps
ins
jae
leave
and
mov
inc
mov
fst
push
imul
ret
cmp
mov
pop
dec
lods
inc
gs
cmps
out
and
bound
ds
pop
jne
outs
fdecstp
mov
(bad)
aad
dec
mov
or
es
pushf
mov
mov
cmp
pop
loope
add
(bad)
mov
pop
adc
test
loop
dec
mov
push
or
(bad)
mov
and
das
ret
cwde
loope
jmp
cmp
rcl
xor
cs
hlt
lahf
and
mov
movs
mov
fwait
cmps
adc
aam
push
lahf
(bad)
mul
test
pop
push
push
pushf
mov
xchg
mov
cmp
and
pop
adc
mov
test
sub
xchg
sub
push
jmp
jns
and
pop
push
push
pushf
sbb
xchg
ror
or
mov
or
sahf
and
fldenv
mov
jge
clc
in
or
jmp
test
pop
ss
push
out
push
in
add
loope
in
shl
das
mov
movs
inc
mov
add
pop
mov
ins
cld
test
jnp
or
inc
jne
cmc
push
jmp
inc
cmc
shr
mov
inc
bound
mov
xor
pop
or
xchg
loopne
ror
adc
jg
dec
sub
jbe
xor
adc
imul
pop
ret
in
xchg
sub
and
push
outs
pop
xchg
fld
pushf
dec
xor
jge
push
js
test
cmp
push
dec
push
pop
adc
clc
ficomp
out
lds
lahf
nop
gs
mov
not
nop
adc
push
sub
push
mov
and
add
push
fwait
mov
jge
xchg
pushf
jns
popf
aas
mov
inc
xchg
adc
call
shr
outs
aam
or
int
xor
les
push
xchg
int3
sub
xor
inc
scas
mov
ror
or
push
mov
sub
test
repnz
sti
imul
ins
jns
dec
es
daa
out
sbb
mov
or
call
out
aam
mov
fcmovne
mov
int
dec
in
pop
in
out
fisttp
pop
aas
xor
call
retf
fdiv
mov
dec
or
add
popf
ret
pop
in
jmp
aaa
adc
xchg
into
dec
fld
xchg
xor
bound
and
jmp
cld
test
in
cdq
push
ret
sub
addr16
push
inc
cld
xchg
int3
mov
stc
scas
inc
sub
test
mov
mov
add
push
inc
rcl
hlt
in
sub
mov
or
popa
sbb
fnsave
inc
jmp
push
cmps
pushw
inc
cmp
push
pushf
or
xchg
jae
sbb
in
sub
dec
pop
scas
jecxz
xchg
cmp
add
pop
bound
fwait
mov
sub
adc
bound
out
enter
mov
loopne
out
push
xchg
mov
mov
and
jp
scas
dec
mov
sbb
adc
cmp
stc
aad
into
inc
stc
cmp
mov
into
pop
push
and
stos
in
pop
mov
mov
xchg
jl
call
outs
ja
mov
sub
sbb
enter
mov
popf
(bad)
retf
aas
retf
pop
or
add
mov
std
push
xchg
or
popf
jmp
(bad)
in
fs
pop
jno
push
ficom
loope
out
or
neg
push
xchg
or
stos
inc
cmp
lahf
mov
inc
lahf
movs
add
out
xchg
std
mov
sub
jns
push
adc
js
mov
mov
jns
and
stos
gs
cmp
pop
push
xchg
mov
retf
inc
push
mov
mov
call
imul
xchg
inc
out
(bad)
fidivr
sbb
pop
aam
mov
mov
imul
or
out
mov
mov
idiv
sahf
stos
and
pop
xchg
fsubr
xchg
data16
jae
mov
into
(bad)
cmp
xchg
and
sar
pusha
iret
xor
aaa
lea
dec
jle
xchg
ins
xchg
arpl
mov
push
movs
cmp
je
imul
inc
les
mov
es
sub
movs
sub
dec
scas
cmc
dec
arpl
pop
xor
popf
stos
push
bound
mov
cmc
jmp
das
inc
mov
xchg
xor
aam
gs
das
dec
in
mov
xor
mov
xor
arpl
jo
jmp
xor
or
pop
dec
xchg
cmp
sahf
and
fdivr
(bad)
test
and
loope
adc
cmp
sbb
pop
sbb
outs
psubusw
pop
mov
xchg
mov
cmp
data16
mov
mov
fld
or
sbb
fstp
sahf
inc
or
mov
jae
inc
outs
pop
outs
out
dec
jae
jg
outs
das
mov
sub
mov
adc
pusha
nop
pop
sbb
fld
or
pop
and
inc
mov
shl
dec
imul
pop
pop
pop
push
sbb
aam
inc
cmps
inc
loop
adc
or
fsub
jecxz
loopne
popf
das
enter
dec
inc
or
inc
stc
test
xor
inc
sub
je
dec
jne
test
dec
xor
add
shl
push
inc
pop
ja
mov
add
or
inc
xor
shl
fdiv
adc
mov
mov
imul
fnstcw
into
enter
dec
sbb
xchg
sub
cwde
sub
cmp
dec
daa
scas
sbb
cwde
stos
xchg
xor
cmps
mov
loope
push
fldcw
pusha
cli
sub
scas
out
cld
data16
inc
dec
popf
sbb
sub
xor
outs
rcr
call
loop
(bad)
push
fnstcw
data16
xchg
pusha
out
rol
adc
(bad)
sbb
and
pop
push
add
repnz
jnp
fbstp
aad
and
imul
push
mov
cmc
adc
ins
(bad)
adc
mov
fcomp
push
push
scas
fsub
jge
adc
aas
imul
adc
int3
imul
and
popa
int
jmp
cmp
fwait
aam
inc
jnp
add
rol
sub
or
fldenv
fsub
mov
leave
cmp
addr16
mov
fldcw
jmp
ins
test
(bad)
mov
mov
movs
push
mov
call
xor
adc
lods
fistp
mov
jno
data16
ins
dec
and
mov
adc
(bad)
rcl
sbb
and
mov
lea
and
push
mov
mov
sub
aad
std
push
loopne
out
cli
inc
cmp
cmc
and
scas
call
in
push
loope
sub
int
movs
int3
mov
dec
pop
sbb
cmp
sbb
dec
inc
fwait
pop
push
lods
ficom
xor
cwde
jb
int
mov
inc
xchg
sub
add
sbb
xlat
adc
int
in
mov
arpl
jno
imul
imul
xchg
in
mov
ss
repnz
in
inc
or
push
arpl
xchg
cmp
xor
adc
mov
in
je
pop
mov
addr16
cmc
push
(bad)
out
cmp
fistp
push
mov
fwait
leave
inc
inc
xor
stc
imul
imul
out
pop
int3
jae
dec
sbb
mov
push
cs
mov
mov
dec
mov
fadd
loopne
bound
fldcw
or
hlt
push
sub
lahf
pop
mov
aam
mov
mov
push
adc
or
xchg
push
dec
jle
adc
inc
sbb
addr16
or
dec
mov
jb
push
pop
jg
sbb
adc
daa
push
cmps
aas
pop
or
inc
cmp
in
or
movs
gs
and
loope
int
mov
sub
or
dec
mov
add
and
push
inc
jl
outs
xlat
and
stc
lock
(bad)
jecxz
retf
push
xchg
inc
dec
push
mov
jg
loop
popf
cmp
or
lods
dec
and
mov
push
xchg
xor
push
push
mov
dec
dec
and
aaa
and
(bad)
out
pop
sub
nop
out
mov
jmp
das
sub
push
loope
out
mov
(bad)
js
or
(bad)
movs
icebp
and
inc
adc
test
mov
int
loope
les
jo
push
repz
and
pop
jbe
outs
add
or
clc
popa
aaa
xor
and
mov
cdq
shl
cmc
arpl
test
adc
hlt
sbb
mov
cli
ins
fisub
popf
pop
push
cmc
mov
xchg
lahf
sub
int
icebp
iret
push
sub
push
xor
sti
pop
(bad)
inc
mov
retf
add
sbb
push
jmp
jns
mov
dec
imul
push
add
add
and
cmc
jecxz
inc
sub
cmp
inc
sbb
imul
jl
jmp
sbb
daa
push
lds
ret
arpl
in
aad
sub
cmp
adc
shl
xchg
leave
out
daa
fdivr
lock
xor
nop
xchg
in
and
push
xchg
lea
xchg
jecxz
imul
pop
jne
ret
xchg
scas
sub
les
loope
cdq
and
clc
xor
cmp
mov
fiadd
stos
(bad)
ss
out
nop
sub
fistp
cld
pop
test
xor
jb
mov
ins
and
push
fwait
mov
dec
and
mov
and
inc
mov
pop
(bad)
fdiv
aas
mov
inc
adc
icebp
push
adc
and
add
inc
mov
inc
cmp
mov
data16
sbb
sub
and
xchg
jno
pop
sub
ins
call
mov
push
ret
arpl
mov
mov
mov
jge
es
fucom
test
jmp
push
xlat
mov
mov
jmp
push
lar
js
call
in
jae
ins
mov
(bad)
adc
ins
dec
ror
dec
int3
mov
lods
push
adc
sbb
mov
fst
xor
(bad)
clc
xchg
add
out
add
push
jae
sbb
mov
enter
inc
leave
xchg
jge
popf
cmp
in
sub
add
mov
jne
and
xchg
sbb
movs
jle
jmp
movs
ds
and
les
add
jmp
push
clc
jb
pushf
mov
gs
inc
inc
cmp
js
nop
fild
sub
sub
or
int
xchg
sub
jecxz
or
add
repnz
jmp
int
push
stos
xchg
xor
jle
test
aam
mov
aas
pop
adc
or
lock
das
test
into
mov
cmps
pop
dec
std
movs
and
pop
push
ror
imul
mov
inc
sub
jne
mov
or
push
loop
or
cli
inc
dec
int3
push
retf
fild
inc
lods
(bad)
repz
mov
jo
js
or
dec
xor
or
cli
imul
xchg
mov
shr
mov
retf
adc
xchg
pop
or
push
retf
out
gs
dec
stos
mov
mov
rol
sbb
ds
js
inc
inc
mov
or
movs
mov
imul
leave
add
adc
call
stos
mov
gs
inc
cwde
inc
jmp
and
inc
loope
cld
pop
fs
push
inc
xchg
adc
or
shr
mov
ja
pop
(bad)
dec
add
push
ret
push
jp
fcmovu
shl
adc
mov
pop
retf
(bad)
loopne
push
or
(bad)
dec
cdq
xor
icebp
jnp
push
mov
(bad)
out
mov
fist
push
test
add
mov
push
xchg
pop
std
sub
in
sti
xchg
and
pop
fcom
xor
pop
ffreep
mov
mov
adc
(bad)
push
movs
in
call
popa
iret
and
mov
(bad)
fcmovnbe
inc
sub
jle
jg
add
in
or
mov
daa
jle
add
jge
mov
adc
stc
push
xchg
je
clc
push
fistp
cdq
push
into
fdiv
and
mov
ret
popf
jmp
pop
pop
inc
js
dec
mov
imul
jg
lea
sbb
nop
imul
sub
pop
test
aam
or
ins
ret
pop
cmp
jo
in
outs
rcl
or
mov
mov
(bad)
pop
dec
or
push
pusha
jg
pop
(bad)
dec
test
(bad)
jns
jecxz
xchg
cmp
sub
pop
cld
retf
pop
add
and
out
das
mov
(bad)
rcr
jo
call
(bad)
dec
std
(bad)
gs
dec
push
(bad)
fimul
xor
push
xchg
lahf
push
(bad)
sub
xor
clc
mov
or
jg
ret
sbb
in
xor
pop
dec
add
xlat
fist
jo
pop
mov
xchg
scas
pop
ret
repnz
cmp
test
lock
int
mov
or
loopne
xor
shl
xchg
int3
jmp
or
mov
icebp
adc
xor
push
xchg
or
dec
pop
mov
dec
not
inc
pusha
inc
js
jbe
lds
jno
(bad)
(bad)
fimul
data16
dec
je
arpl
mov
mov
sub
test
cs
adc
js
scas
sbb
bound
sbb
sbb
sbb
push
pop
mov
imul
inc
add
sub
lahf
push
jecxz
add
mov
or
enter
xor
rcr
inc
jne
lds
or
(bad)
sub
cmp
mov
ins
or
in
sub
mov
pop
fdiv
pop
test
fwait
push
mov
dec
fsub
mov
repz
fs
dec
xor
stos
or
push
push
pop
dec
inc
dec
push
push
arpl
lock
cmp
loopne
arpl
mov
rcr
mov
inc
xchg
jo
jge
cmp
xchg
mov
shr
loopne
mov
pushf
dec
ins
sbb
arpl
cmps
add
fidiv
xchg
das
cmc
push
xchg
or
adc
adc
jo
js
mov
adc
ds
mov
imul
ds
mov
int
mov
xchg
inc
push
push
sub
pop
mov
xchg
loope
add
push
lods
xchg
mov
inc
jo
cmc
fwait
xchg
push
ds
mov
outs
dec
dec
add
mov
imul
and
enter
add
retf
cld
jg
dec
(bad)
xchg
mov
dec
fld
and
ror
js
jae
mov
das
fs
sub
enter
cmp
scas
add
jl
jge
xchg
test
sub
shl
aam
mov
iret
adc
cs
pop
push
inc
(bad)
pop
aaa
scas
ss
mov
lea
jo
call
jns
cmps
and
cld
dec
leave
jle
mov
and
clc
pop
sub
cwde
add
jbe
loope
mov
test
xchg
xor
retf
das
mov
pop
push
ficomp
xor
(bad)
cmp
pop
ss
mov
rol
test
add
loopne
enter
dec
fdiv
pushf
out
dec
xor
mov
inc
cmp
fadd
xor
test
call
jmp
stos
mov
push
and
dec
fnstcw
mov
mov
push
jbe
mov
bound
inc
add
jl
mov
or
lods
and
gs
xor
test
lea
xchg
(bad)
movs
lods
popf
mov
jae
mov
sbb
shl
pop
jae
lahf
ret
ret
cli
push
inc
inc
call
mov
cmp
jo
ret
rcl
push
xchg
mov
sub
pop
mov
push
out
sub
loope
in
xor
push
dec
jo
mov
fisttp
repz
fwait
dec
push
outs
pop
pop
mov
pop
jns
adc
cmp
inc
cmp
xchg
cmove
out
cmp
retf
retf
mov
or
mov
mov
jecxz
sbb
hlt
(bad)
push
daa
into
lahf
dec
test
ins
and
push
mov
sbb
dec
adc
mov
cmp
icebp
push
lock
popa
popf
sub
repnz
or
ret
sub
js
jno
dec
dec
ror
loope
out
mov
or
cwde
cwde
and
addr16
repz
add
icebp
fwait
ins
ins
sbb
imul
mov
iret
std
fisttp
pop
inc
inc
cmp
mov
or
adc
aas
add
mov
ins
loopne
mov
and
inc
inc
mov
popa
fcomp
movs
xor
or
movs
fstp
xor
iret
fbstp
push
sub
addr16
loopne
mov
xlat
ror
add
xchg
lods
xor
mov
out
retf
xor
mov
mov
xor
dec
dec
imul
cli
out
enter
jp
cmp
jae
or
fmul
pop
(bad)
out
mov
xor
fidiv
push
push
dec
nop
jecxz
pop
mov
fidiv
adc
mov
test
sub
enter
jmp
sub
rcr
fnsave
lods
lods
xor
rol
data16
push
fnstsw
pop
mov
dec
das
int
into
imul
jmp
ds
sar
xor
xchg
pusha
test
in
xor
inc
call
paddb
pushf
or
mov
shl
pop
dec
(bad)
js
retf
dec
cli
bnd
xchg
jp
fnstcw
pop
div
mov
pop
aas
inc
mov
cdq
xor
jbe
inc
cwde
pop
(bad)
lods
xchg
addr16
jae
add
pop
(bad)
xchg
mov
adc
inc
icebp
sbb
clc
shl
mov
xor
ficom
mov
jbe
mov
cwde
dec
pop
jmp
or
loope
dec
and
jmp
ins
inc
fldenv
mov
lahf
aaa
inc
cmp
outs
ins
xor
sub
mov
loop
cld
popa
xchg
pop
sbb
lods
test
retf
inc
jp
adc
jmp
int
cmps
or
add
xor
out
inc
or
cld
push
ins
loop
pop
sbb
jmp
scas
fcmove
ins
xchg
fsub
cwde
xchg
cmps
xchg
fdivr
pop
fild
jo
push
test
(bad)
repnz
movs
jne
and
not
and
push
aaa
jge
inc
jg
mov
mov
sbb
rcr
or
inc
fwait
js
outs
xor
dec
repz
mov
and
outs
fs
jmp
dec
fwait
sub
out
dec
sub
jmp
or
xlat
shr
push
nop
add
les
xchg
jae
lods
mov
and
push
push
arpl
popf
in
jns
or
les
lods
push
xor
addr16
movs
jne
xor
mov
jno
ds
jo
adc
test
adc
mov
loopne
je
pop
pop
scas
xchg
sti
lods
or
xchg
loop
fst
rcl
outs
mov
sub
push
push
add
retf
in
pop
or
push
or
popf
mov
mov
cmp
retf
push
add
pop
outs
sbb
aaa
cmp
repnz
outs
jp
lea
xchg
dec
rol
jne
adc
fisubr
jp
fsub
aam
lds
xchg
pop
repz
arpl
repnz
(bad)
ret
fsub
outs
adc
inc
pop
out
outs
jmp
out
pop
pop
push
gs
movups
cmp
pop
scas
shr
add
repz
sar
add
mov
out
cdq
cmc
sbb
not
xor
retf
mov
lods
shl
out
mov
call
jmp
sub
ja
jne
(bad)
(bad)
stos
(bad)
and
cmp
and
icebp
mov
cmp
or
push
jl
or
test
repz
call
push
scas
(bad)
xchg
cmp
ds
cmc
test
push
(bad)
ss
cwde
jmp
mov
adc
dec
dec
xor
mov
and
pop
mov
je
or
jl
adc
push
pop
inc
cmp
add
test
mov
sti
aas
inc
je
ja
jg
jae
fistp
daa
cld
cmp
or
and
dec
cs
(bad)
mov
sub
pop
daa
jae
mov
test
test
addr16
push
lahf
mov
out
popf
mov
mov
mov
add
dec
xchg
aad
jp
ret
loopne
cmps
jge
imul
out
popf
push
adc
rcl
jae
repz
imul
xchg
cmc
inc
push
in
hlt
int
mov
ret
pop
push
sub
bound
rcl
mov
jns
and
shr
sahf
test
cmp
hlt
push
adc
ret
sbb
in
int3
xchg
outs
mov
in
mov
mov
add
loop
mov
arpl
and
pop
push
(bad)
out
or
mov
retf
leave
popf
dec
sbb
adc
xor
outs
pushf
jle
int
addr16
js
out
inc
mov
and
ins
jns
jg
xor
add
test
lods
mov
xor
idiv
mov
sub
push
mov
cmc
and
shr
mov
mov
sbb
inc
push
sbb
add
nop
mov
push
jo
adc
ins
push
jae
(bad)
mov
cmp
cmp
push
mov
jp
or
das
mov
cmp
out
in
or
mov
pop
or
mov
and
(bad)
stos
and
in
pop
scas
or
cmp
sub
inc
int
xchg
mov
mov
mov
inc
xchg
daa
sahf
inc
jo
hlt
in
or
loopne
imul
pop
js
jns
jns
loop
loop
int3
sub
mov
(bad)
sti
pop
cmp
mov
cmp
jle
loop
popa
lea
adc
sub
out
push
test
fidiv
clc
ja
je
mov
and
hlt
jae
fiadd
add
sub
add
aad
das
sub
sbb
xlat
inc
add
shr
xchg
sub
push
xor
cmp
aas
pop
adc
loop
rol
xor
rcl
lock
lsl
jge
cmp
sub
xchg
mov
or
addr16
push
adc
push
cld
test
cmp
xor
and
cmp
sbb
and
cmp
pop
xchg
push
adc
and
ror
bswap
mov
es
ficom
ss
out
movs
and
sub
mov
imul
mov
lea
dec
fucomp
fsubr
or
adc
inc
les
addr16
mov
stos
jmp
xor
mov
xchg
cdq
adc
cwde
dec
sub
lods
stos
adc
dec
dec
or
call
aaa
cmp
jno
cmp
movs
pop
jmp
mov
pop
rcr
and
sub
xchg
ds
pop
push
test
mov
mov
xor
mov
(bad)
scas
lahf
add
add
addr16
sbb
aad
mov
sub
add
and
jno
sbb
fwait
in
mov
or
addr16
sbb
jp
loop
cmp
xchg
sbb
or
(bad)
aas
pushf
sub
cwde
lods
cmp
icebp
cmps
imul
pop
test
cli
mov
js
or
jns
push
js
add
sti
outs
cmp
dec
ret
(bad)
test
mov
cmp
dec
push
jo
outs
xchg
mov
jecxz
mov
cld
(bad)
imul
cld
lock
xchg
lods
push
bswap
cmp
mov
call
icebp
and
mov
xchg
or
mov
mov
sbb
mov
or
xchg
xchg
jp
mov
mov
jnp
mov
shr
and
gs
push
sbb
dec
dec
enter
cmp
cld
(bad)
adc
mov
jo
es
leave
pop
fist
sub
xchg
push
(bad)
jge
jnp
ins
push
iret
fistp
cmp
lock
mov
mov
dec
dec
push
retf
adc
add
or
fyl2xp1
cmp
push
or
push
mov
int3
jmp
push
push
pusha
ror
xchg
aam
xchg
ja
faddp
xchg
ficomp
daa
mov
std
(bad)
pushf
xchg
pop
repnz
cmp
loope
mov
shl
sbb
cmovb
imul
mov
out
fwait
mov
out
lds
dec
push
xchg
inc
loop
xor
clc
ins
(bad)
sub
aam
push
or
(bad)
pmulhuw
loope
or
retf
js
popa
or
inc
xlat
sbb
mov
dec
cmps
sti
xor
data16
mov
add
pop
xchg
inc
sbb
mov
stos
and
pop
and
in
and
loope
sbb
fldcw
lahf
or
sub
add
icebp
mov
mov
xchg
fnstcw
push
mov
retf
push
lea
jae
adc
xchg
mov
inc
add
test
jg
neg
xchg
pop
jle
dec
xchg
pop
je
mov
push
cmp
push
fnsave
or
sbb
pop
js
out
mov
mov
enter
sbb
push
pop
xor
inc
outs
cs
xchg
sub
out
out
sbb
pusha
xchg
or
add
pop
enter
xchg
and
jmp
cmp
pop
inc
vprotq
xlat
sub
sbb
sbb
loope
pop
lods
dec
cmp
stos
sti
mov
rcl
fstp
xchg
pop
test
stos
fs
or
mov
mov
popa
jb
pusha
xchg
mov
sub
sub
adc
jbe
mov
mov
in
dec
pop
or
or
fdivr
add
scas
div
push
pop
push
nop
es
cmc
mov
cmps
scas
adc
stos
and
fs
xor
mov
out
mov
rcr
push
call
stc
sbb
pop
(bad)
pop
shl
xor
stc
pop
mov
lea
imul
lahf
jl
mov
push
mov
out
(bad)
cmp
jg
jae
pop
sub
je
inc
mov
jo
add
stos
dec
cmp
xor
dec
test
test
sbb
pop
inc
push
mov
dec
mov
xor
mov
push
jmp
push
fst
mov
dec
std
push
mov
pop
jge
or
int
push
test
push
adc
inc
sbb
mov
pop
mov
and
imul
pop
add
jae
lds
in
sbb
xchg
ret
dec
hlt
adc
jg
lea
cmp
pop
pop
scas
stc
sub
cmp
or
sti
push
push
xor
nop
jl
jns
int3
jbe
mov
mov
test
xchg
fcmovbe
lock
(bad)
mov
js
inc
jb
adc
dec
retf
pop
sbb
push
mov
cwde
lods
cmps
sbb
cmc
sti
mov
mov
js
(bad)
popf
cwde
sub
loop
add
sub
es
lds
add
xchg
iret
and
daa
cli
shl
sbb
xchg
ret
shl
jecxz
push
mov
add
(bad)
stc
add
mov
jno
fst
xchg
add
mov
and
in
jb
pusha
in
cmp
icebp
mov
pop
es
jmp
jno
imul
cmp
sub
mov
mov
xchg
jmp
add
and
fs
shl
aaa
mov
xchg
dec
inc
ret
retf
pop
lock
addr16
push
nop
scas
push
in
inc
into
cmp
enter
jb
xor
push
lds
xor
jnp
fistp
or
imul
(bad)
fwait
mov
std
(bad)
(bad)
not
mov
push
jb
mov
fsub
xchg
in
sar
sub
shr
test
rcr
pop
out
push
out
pushf
add
(bad)
push
dec
pop
push
stc
test
retf
aaa
and
out
jp
ins
mov
adc
cmc
rol
stos
ins
xchg
inc
stos
xchg
mov
or
outs
sbb
dec
movs
xchg
jne
int
dec
sahf
js
or
sub
cmp
adc
in
mov
test
enter
add
ret
xor
adc
das
pop
mov
or
(bad)
fs
ds
nop
jnp
jno
sub
in
and
push
adc
adc
push
and
out
addr16
cmps
cmc
icebp
sub
pushf
jp
iret
(bad)
(bad)
movs
mov
xor
or
push
clc
rol
and
dec
ret
xchg
push
aam
outs
cmps
mov
dec
stc
cmp
pop
mov
pop
cmp
xchg
cmp
es
pusha
adc
(bad)
sbb
in
jmp
mov
(bad)
pop
das
lea
inc
scas
enter
xchg
call
stos
stos
fsub
imul
les
cmps
ret
xchg
jp
pop
mov
or
dec
(bad)
jns
outs
fist
xchg
xchg
mov
ja
shl
fistp
and
pop
repnz
adc
shl
jmp
inc
sar
or
sbb
leave
in
fs
and
shl
outs
or
push
ret
mov
sub
rol
push
push
sub
int3
(bad)
in
mov
aaa
(bad)
std
sbb
mov
mov
inc
dec
lahf
fild
cmps
clc
in
shl
push
rol
jg
mov
lods
adc
sbb
mov
dec
jae
and
shl
inc
ds
arpl
rol
mov
retf
jns
popa
ficom
xchg
or
xor
xchg
sub
xchg
popf
sbb
fnstcw
inc
sub
adc
mov
out
xor
fnstcw
ror
gs
fwait
nop
rcl
ja
xor
inc
stos
enter
add
shufps
jmp
add
les
sar
fild
movs
sbb
outs
mov
cdq
shl
pop
mov
cmc
in
cmp
or
aas
(bad)
mov
xchg
and
stc
cmp
cmp
add
add
push
call
jnp
call
push
add
stos
sbb
jle
mov
dec
xor
mov
xor
mov
js
jmp
cmps
nop
cmp
mov
add
mov
sub
arpl
mov
mov
rol
stos
or
ud2
xchg
jle
inc
call
mov
jne
in
adc
sbb
sub
sub
xchg
sar
inc
cmp
or
jmp
gs
push
(bad)
int3
ds
xchg
js
mov
outs
in
pop
ret
test
ss
outs
test
fmul
or
and
imul
sub
mov
pop
mov
fnstenv
mov
test
jl
ds
psrlq
scas
pusha
jge
repnz
jne
pop
std
adc
add
cdq
adc
xor
mov
mov
ror
movs
or
xchg
push
stc
lods
mov
jp
sub
fbstp
dec
xchg
fnsave
loopne
fwait
fs
inc
cld
jnp
jne
jge
inc
cmc
mov
push
jbe
lods
pop
cs
mov
icebp
sar
pop
fdiv
push
push
fsubr
or
fwait
push
sub
dec
mov
lahf
cdq
sub
mov
fstp
xor
mov
xlat
sbb
jg
mov
mov
add
repnz
adc
fcom
jmp
xor
push
sbb
sbb
inc
outs
adc
xchg
retf
aam
and
push
and
stc
mov
mov
xchg
dec
test
inc
xchg
mov
mov
sbb
jno
lods
mov
scas
repz
xor
sar
rol
or
and
neg
repz
out
and
and
xchg
lods
pop
cli
dec
enter
or
retf
lods
repz
retf
fidiv
inc
(bad)
into
or
arpl
out
pop
sbb
ss
jmp
push
dec
adc
scas
xor
jo
enter
add
add
dec
pusha
iret
xchg
xor
scas
loopne
daa
xor
jl
and
xor
pop
imul
or
mov
jp
test
mov
or
cmp
fcom
pop
(bad)
mov
aam
lds
inc
sub
(bad)
imul
sti
rcl
daa
or
int
cmp
cwde
pop
loopne
imul
rcl
and
sub
call
call
test
xor
popa
dec
stos
or
sub
data16
ja
inc
cmps
add
inc
fucomp
jns
ret
cmp
jnp
mov
push
scas
cmc
aaa
jl
pop
inc
push
adc
sbb
push
je
xchg
xchg
inc
std
or
xchg
lods
xchg
lods
dec
sti
outs
fld
sbb
push
dec
inc
out
lods
aad
(bad)
out
cmp
mov
pop
fucomi
jns
outs
outs
cmp
aad
fadd
imul
mov
jns
ja
fsub
mov
xchg
mov
sahf
mov
push
cmps
sti
xchg
xchg
xchg
call
(bad)
outs
mov
mov
mov
push
arpl
mov
int3
pop
sbb
xor
(bad)
iret
lods
dec
xchg
push
fucom
jmp
jmp
fcom
mov
int3
test
test
gs
add
les
retf
mov
loop
not
outs
sub
push
dec
xchg
js
push
pusha
mov
push
popf
sbb
mov
sahf
and
movs
push
lea
jg
jle
jmp
and
inc
sub
into
in
mov
adc
ds
mov
cs
sbb
adc
rcr
cwde
lods
loop
test
xchg
test
shl
bound
mov
xchg
xor
ret
xchg
arpl
hlt
mov
loope
jge
cmps
nop
aad
adc
lock
pop
pop
mov
(bad)
out
mov
add
retf
xchg
ret
jmp
hlt
imul
xor
xor
shr
loop
iret
jmp
aad
mov
ss
iret
push
sbb
jmp
sbb
int
jp
dec
push
push
cs
out
add
fdivr
es
dec
jnp
inc
lds
cmp
loope
mov
ds
cmp
out
cmp
pop
xor
aam
daa
std
ret
pop
imul
enter
in
shl
jmp
adc
out
mul
in
ja
ret
jb
pusha
(bad)
fistp
fstp
dec
xor
cld
jg
jno
sbb
shl
rol
scas
mov
shl
cli
imul
pop
jbe
xor
push
lahf
dec
mov
mov
inc
push
jb
das
push
movs
mov
jae
std
push
mov
arpl
and
sbb
ins
lods
imul
enter
fistp
cmp
(bad)
ror
mov
sub
xchg
(bad)
pop
into
mov
out
pop
mov
mov
pop
mov
(bad)
cmp
ins
xor
sti
std
outs
(bad)
fldcw
adc
fsubr
dec
sub
sub
call
(bad)
pop
inc
(bad)
sti
movs
mov
mov
ins
jmp
push
pusha
cmp
arpl
pushf
in
dec
mov
je
sbb
sub
int
sub
add
mov
sbb
xor
mov
fisubr
test
scas
pop
jb
lahf
sbb
sub
add
fild
cmp
add
pop
mov
ins
retf
stc
bound
leave
and
cmp
gs
es
cmps
inc
out
imul
jb
out
mov
inc
push
int
sti
mov
inc
into
xlat
or
pusha
adc
mov
inc
js
div
movs
adc
enter
sar
sub
test
outs
add
lods
shl
in
rcl
stos
outs
je
push
jl
push
or
dec
dec
adc
into
and
adc
sub
cmp
mov
xor
pusha
mov
pop
call
pop
(bad)
mov
pop
mov
out
mov
jae
xchg
jmp
dec
and
sub
arpl
jne
sahf
ds
pop
retf
mov
mov
adc
jmp
push
mov
mov
mov
sub
or
pop
ss
mov
or
imul
movs
gs
cmp
cwde
ret
(bad)
push
jl
test
sbb
xor
sub
inc
mov
loopne
mov
in
push
popa
fdivr
pop
adc
mov
adc
xchg
ins
ins
test
fld
cmp
push
iret
mov
imul
enter
and
sub
ins
and
enter
xor
push
and
jae
jp
rol
cli
xchg
mov
push
sub
xor
loopne
sub
dec
mov
and
dec
scas
sbb
jp
jecxz
shl
mov
mov
cdq
xor
fdiv
aad
fsubr
pop
pop
adc
adc
dec
inc
scas
ror
(bad)
cmp
xchg
mov
push
leave
xchg
inc
ds
sbb
jne
sti
adc
or
jmp
jmp
cli
push
push
sbb
das
cmp
daa
cdq
cmp
inc
inc
cmp
cmp
xor
aas
loopne
xchg
movd
fdiv
dec
inc
(bad)
(bad)
sub
sub
ss
inc
imul
or
cmps
sub
sbb
dec
sbb
nop
sbb
lods
pop
scas
add
cdq
movs
int
fcomp
dec
xor
jmp
je
or
enter
inc
cdq
mov
mov
cmp
cmp
pusha
or
xor
xchg
es
xor
sub
outs
fdiv
lds
dec
xor
(bad)
sub
bound
jmp
in
test
mov
out
xor
xor
hlt
jmp
jle
xchg
ins
inc
add
or
js
test
fisub
adc
fadd
cmp
push
push
sbb
mov
jbe
xchg
nop
ins
repz
arpl
mov
mov
aas
shrd
jnp
(bad)
aad
nop
mov
sbb
jne
sbb
mov
lock
push
inc
add
call
pop
push
stos
jecxz
jo
adc
ins
push
scas
loope
sbb
pusha
ds
sbb
fisubr
mov
add
adc
mov
push
cmp
sub
je
jmp
ins
mov
push
cmp
adc
sub
xor
sub
mov
fdivr
fadd
sub
pop
arpl
jns
dec
mov
dec
in
pop
push
xlat
mov
xor
jo
cs
(bad)
cmc
jno
dec
inc
(bad)
push
sub
xor
mov
xchg
push
push
clc
push
mov
push
outs
call
xor
sbb
sbb
daa
cli
mov
fs
sub
xor
cmp
push
call
or
sub
pop
xor
fst
mov
test
daa
in
cmp
mov
int
retf
ror
scas
or
sti
push
dec
and
imul
jns
mov
js
imul
dec
adc
cmp
push
repz
mov
mov
sbb
jnp
pop
arpl
sub
xor
mov
sbb
push
pop
fnstcw
ret
cmp
cmp
sti
rcl
and
mov
jne
stos
adc
ds
in
xor
mov
mov
lea
push
fdivr
fwait
test
pop
outs
icebp
or
xor
inc
adc
icebp
es
xchg
sbb
rcr
pusha
int
js
sub
sbb
cdq
add
jno
adc
cmp
enter
mov
cwde
test
scas
sub
movs
cwde
fisttp
mov
mov
sti
fsub
cmp
ins
imul
and
sub
loop
sub
adc
inc
push
cmp
inc
add
aad
pop
scas
and
addr16
ins
rcl
and
and
outs
ss
cmp
mov
ret
mov
cld
repz
mov
and
cmp
cmc
scas
cmps
int
inc
fnsave
bound
movs
aad
adc
pusha
mov
sub
xchg
callw
xchg
retf
mov
sti
js
fadd
jb
movs
and
jae
mov
fwait
push
in
cmp
pop
jge
int
add
into
pop
outs
xchg
pop
mov
push
scas
imul
stc
mov
push
fisttp
push
cmps
retf
movs
aad
retf
mov
dec
repnz
pusha
or
dec
jl
xchg
aas
pop
xchg
dec
cmps
jmp
pop
inc
add
mov
aaa
pop
out
fiadd
add
mov
push
imul
dec
sub
push
mov
sbb
pop
cmp
adc
outs
(bad)
fld
inc
add
ja
xor
imul
dec
mov
cli
test
inc
xor
ror
icebp
push
inc
sbb
aad
(bad)
std
fidiv
inc
push
push
cmps
rcl
aas
xchg
rcr
leave
mov
les
push
(bad)
das
movs
jg
xchg
push
imul
jge
push
lock
sti
clc
jno
cmps
out
cmp
inc
neg
add
fs
loope
iret
movs
xor
mov
add
mov
rcr
cdq
mov
frstor
imul
in
hlt
imul
or
jo
retf
sbb
jge
jns
int3
nop
test
sbb
hlt
jecxz
fdivr
mov
inc
xor
mov
mov
in
pop
sub
lock
(bad)
js
or
in
ror
jne
dec
and
cdq
cmc
and
cmc
push
cmp
adc
sbb
test
loop
test
mov
push
cwde
popf
push
enter
xor
pop
fidivr
movs
adc
cli
aam
push
pop
ins
sti
mov
mov
sbb
in
and
ret
ror
inc
retf
fld
lock
test
addr16
add
leave
sbb
mov
retf
pushf
mov
add
into
mov
iret
mov
pop
sbb
sti
push
add
dec
leave
dec
jne
or
or
mov
shl
popf
and
cmp
adc
js
adc
imul
mov
xor
sti
lods
mov
outs
mov
fadd
cmpxchg8b
test
jns
sub
mov
add
mov
scas
retf
jae
jo
int3
mov
lock
fistp
and
rcl
lock
add
mov
fwait
xlat
mov
les
push
sbb
pop
xlat
int
in
sbb
dec
call
clc
nop
aas
adc
cmp
sub
lds
inc
push
or
lods
cmp
or
sti
or
add
cmps
lahf
stos
push
sub
imul
mov
adc
push
leave
add
adc
rcl
add
or
lods
in
mov
cwde
cmp
push
mov
cmp
adc
daa
xchg
sbb
cmps
cdq
xchg
push
pop
cwde
xor
and
(bad)
or
fld
jecxz
lods
mov
xchg
mov
dec
test
lock
fsubr
loop
sub
and
fcom
inc
mov
shr
pop
nop
aaa
int
(bad)
dec
xor
mov
adc
xchg
enter
xchg
mov
in
add
push
pop
cmp
js
ins
pop
and
xchg
xchg
aad
in
into
add
xlat
adc
and
dec
inc
adc
push
inc
dec
jle
call
shr
cmp
jne
dec
mov
mov
data16
mov
mov
call
mov
es
movs
jne
mov
outs
dec
aam
jecxz
sti
movs
jp
in
mov
sbb
and
jp
test
js
mov
jmp
push
dec
inc
std
data16
rcl
pop
sbb
cmp
in
pop
xor
xchg
cmp
retf
lock
jle
jnp
pop
test
popa
xor
sub
cld
pop
stc
mov
add
inc
pop
pusha
shl
sahf
mov
lea
data16
push
fs
xchg
fcom
xor
adc
sbb
stos
out
mov
pop
(bad)
mov
push
jge
outs
cmp
hlt
loope
sbb
lods
pop
mov
add
or
inc
lea
and
call
shr
or
out
jo
push
iret
ins
fisttp
pusha
push
xor
aam
rol
jnp
jns
icebp
mov
leave
pop
inc
sub
std
sub
mov
add
aaa
(bad)
es
es
xor
enter
jne
or
sub
mov
push
cmp
fild
or
sbb
pop
pop
xlat
or
jge
inc
jmp
in
add
pop
sub
imul
ret
inc
call
test
repnz
push
push
aaa
dec
jno
mov
xchg
adc
pop
hlt
int3
mov
cmp
sqrtps
pop
nop
sbb
and
mov
pop
mov
dec
and
bound
mov
call
ss
inc
std
inc
mov
add
jge
sub
leave
(bad)
aas
xchg
or
lods
push
push
les
mov
jne
cmp
ret
ud2
mov
(bad)
aaa
test
xor
lods
pusha
out
jmp
xchg
xor
mov
or
xor
xchg
adc
and
js
mov
sbb
add
mov
iret
fimul
add
addr16
or
test
sbb
dec
icebp
pop
pop
fmul
xchg
inc
jecxz
or
xchg
fist
push
xchg
bound
mov
daa
adc
sar
stc
cmp
adc
inc
cmp
cmp
sbb
mov
push
add
push
mov
mov
or
test
inc
sti
mov
out
ds
pop
pop
outs
and
jecxz
or
shl
sbb
and
jmp
sub
mov
or
out
and
inc
sbb
mov
push
add
xcrypt-ecb
cmps
leave
addr16
xchg
xchg
dec
xchg
xor
daa
fild
add
hlt
enter
aam
fcomi
push
(bad)
out
or
and
stos
xchg
push
add
icebp
dec
test
ficomp
xor
mov
add
cmps
xor
aaa
test
pop
push
jl
cli
push
jmp
test
shl
push
push
mov
push
sbb
in
sub
inc
(bad)
(bad)
add
or
xchg
dec
popf
daa
in
mov
mov
mov
addr16
std
push
cmps
adc
cdq
and
pop
push
inc
stos
lods
pop
es
jbe
or
cdq
inc
push
pop
cdq
or
sub
or
pop
ds
push
add
push
je
and
test
sub
inc
(bad)
stos
cmp
sbb
mov
pop
popa
test
mov
push
mov
in
movs
jmp
inc
push
mul
fsubrp
jne
push
test
xor
dec
and
xchg
sbb
cmp
loopne
push
and
fldenv
mov
add
inc
mov
cli
ficomp
call
pop
ds
mov
rol
nop
push
popf
sti
push
sbb
daa
push
pop
ds
adc
ficom
retf
int3
out
jmp
cmp
push
mov
neg
adc
ins
das
sti
cld
mov
and
rcr
sbb
adc
call
mov
in
(bad)
out
pushf
test
xchg
cld
and
jmp
sbb
ror
ins
movs
dec
bound
cld
sar
xor
inc
push
aaa
fwait
jle
std
xchg
aad
iret
sub
pusha
sbb
retf
pop
pop
ror
push
stc
(bad)
sbb
aaa
cmp
inc
sbb
xor
pusha
jne
pusha
test
idiv
repnz
(bad)
loopne
test
mov
rcl
in
mov
aaa
mov
mov
lock
pop
shr
rcl
mov
xchg
mov
inc
pop
dec
dec
jae
out
sbb
inc
or
mov
lea
repz
jno
movs
pushf
repz
js
arpl
test
mov
scas
sub
repz
(bad)
rcl
jge
sbb
pop
ficom
ret
adc
imul
inc
jns
dec
inc
cmc
imul
bts
neg
cmp
and
call
jle
xor
mov
dec
sub
shl
mul
xchg
fs
xor
adc
clc
mov
xchg
mov
test
jmp
jne
adc
xor
dec
js
es
jg
xor
fs
das
cmc
shl
mul
cmp
push
fmulp
xchg
mov
xchg
mov
mov
pop
inc
add
data16
cwde
push
ret
stos
cli
or
add
imul
push
push
das
fnstsw
inc
ret
pop
or
pop
lock
ffreep
add
mov
es
sbb
push
jo
in
retf
stos
lods
jmp
mov
and
adc
ins
mov
mov
pop
dec
pop
mov
hlt
add
sbb
icebp
adc
(bad)
leave
lea
bound
sbb
mov
push
inc
repnz
ins
pop
add
repnz
repnz
xor
dec
jg
xchg
inc
or
and
fs
mov
pusha
sub
adc
mov
xchg
mov
in
ds
sub
ja
repnz
ins
out
fwait
or
in
(bad)
jg
leave
ins
jae
movs
jl
fst
jmp
mov
xchg
cmps
push
add
mov
arpl
lock
jecxz
inc
jnp
mov
or
sbb
add
mov
(bad)
jle
mov
mov
js
shr
pop
jbe
sbb
ret
jecxz
sub
sub
retf
add
out
or
pop
in
cmp
arpl
std
pop
cmc
inc
inc
(bad)
sbb
test
rcl
cs
push
xor
pop
xchg
retf
mov
mov
mov
bnd
leave
mov
shl
outs
add
lock
les
sub
push
(bad)
in
inc
mov
adc
push
mov
jl
xor
jmp
sub
sub
xor
mov
and
jmp
test
dec
mov
add
in
mov
push
or
out
cmp
mov
mov
outs
ret
fist
fcmovnb
cli
mov
int
or
fld
sub
inc
out
xchg
add
iret
in
(bad)
(bad)
sti
and
xchg
mov
enter
mov
add
jp
cmp
jmp
cmove
mov
daa
icebp
iret
mov
(bad)
pop
dec
sub
call
inc
shr
or
sub
out
jnp
paddd
xor
retf
inc
imul
add
leave
pop
outs
xchg
xor
leave
add
or
stos
out
jmp
inc
and
cwde
jmp
cld
test
dec
mov
xchg
adc
aas
and
and
cwde
mov
fst
jge
sbb
icebp
fstp
dec
add
adc
push
test
les
jb
out
xchg
mov
retf
jp
xchg
jns
fmul
xchg
(bad)
push
into
std
inc
mov
js
push
jmp
pop
jo
pop
dec
movaps
sbb
inc
xchg
call
add
xchg
mov
cwde
je
sub
stos
push
scas
fst
sbb
aas
pushf
jl
scas
into
test
mov
call
ins
out
mov
fsub
call
xchg
push
sub
popf
sbb
movs
hlt
mov
jmp
out
fs
and
xchg
jg
cmp
sar
jae
clc
lea
push
sub
mov
sahf
inc
lock
pusha
lock
mov
lock
fs
mov
out
cdq
enter
movs
mov
sbb
adc
fsub
in
push
xchg
jle
pop
mov
scas
pop
lea
push
jp
ret
fstp
in
pop
inc
scas
push
xor
xlat
xor
xor
dec
mov
xor
cmps
lods
sbb
pusha
mov
adc
addr16
xchg
jmp
pushf
pop
push
inc
sub
lods
fdivrp
dec
mov
sbb
add
test
jp
mov
cmc
imul
aas
inc
ret
fmulp
jb
pop
sbb
(bad)
and
push
add
out
jmp
adc
mov
pop
pop
pushf
xor
xor
movs
push
inc
(bad)
mov
repz
jnp
or
in
jp
sbb
mov
shr
sub
inc
xchg
inc
mov
stos
movs
dec
aaa
mov
div
out
or
daa
xchg
ds
lods
cli
add
jl
repnz
pop
jnp
xlat
dec
retf
mov
imul
mov
adc
adc
movs
add
push
popf
cmp
inc
or
jecxz
pop
cld
loope
cli
cmc
and
add
scas
inc
pop
ins
jmp
push
mov
inc
adc
jg
adc
(bad)
pusha
stos
push
and
repnz
xor
cwde
out
jle
icebp
in
mov
sbb
ss
stos
cmc
jge
mov
adc
sar
iret
dec
(bad)
stc
jl
aas
push
adc
mov
pop
jmp
dec
shl
je
dec
mov
or
push
pop
int
xchg
jo
aad
sub
js
sub
retf
fisub
inc
sbb
xchg
inc
xchg
cs
jne
push
pusha
popa
lahf
es
retf
ret
cwde
(bad)
les
mov
out
mov
mov
fs
fwait
bswap
cs
cmp
jnp
push
mov
cmp
xchg
mov
jl
neg
out
fsub
hlt
inc
ins
adc
mov
sbb
pop
movs
jmp
mov
pop
out
pop
jecxz
push
ins
xchg
mov
iret
stc
repz
cmp
cld
lock
adc
sub
lock
xchg
adc
repnz
fwait
mov
movs
dec
(bad)
xor
pop
movs
shl
popf
xchg
jecxz
jmp
icebp
call
repnz
xchg
repnz
sub
(bad)
clc
push
mov
add
cmps
jnp
scas
lock
push
ins
cmp
fst
inc
daa
out
fwait
or
pop
mov
push
cwde
dec
rcl
xchg
jmp
not
iret
push
mov
mov
jle
ins
jge
and
fcom
sub
inc
addr16
cs
dec
outs
retf
mov
sti
dec
fnstenv
mov
adc
nop
fiadd
xor
and
jbe
xor
mov
imul
in
pop
and
daa
maxps
inc
cli
cwde
cs
xor
daa
sbb
adc
push
mov
nop
sbb
sti
pop
out
inc
pop
aas
(bad)
psubusw
push
mov
adc
fisttp
xor
and
cmc
sub
sbb
inc
sbb
inc
push
pop
imul
adc
dec
mov
outs
neg
pop
test
add
mov
mov
fstp
fisubr
cmps
stos
enter
xor
xchg
push
clc
call
pushf
shl
dec
mov
mov
lock
or
push
daa
retf
push
dec
cmp
shr
xor
push
inc
xchg
sahf
in
lods
mov
sar
hlt
stos
cmp
cmp
aad
or
lea
aas
sbb
xchg
test
rcr
dec
cmps
pop
retf
pop
lea
xor
xchg
(bad)
xchg
dec
jbe
xlat
jb
(bad)
adc
jno
retf
(bad)
outs
jmp
adc
jnp
ret
cmp
movs
xlat
out
out
push
mov
(bad)
retf
ja
fincstp
enter
push
shl
or
(bad)
clc
add
call
les
ror
cs
xchg
rcr
and
es
inc
mov
clc
cwde
daa
jmp
fdivr
mov
push
mov
and
test
pop
shl
mov
out
inc
xchg
xor
jno
xlat
add
xor
stos
imul
sbb
cli
mov
test
out
push
or
jmp
(bad)
aas
mov
add
popf
inc
push
or
adc
mov
jecxz
sar
stos
or
add
lahf
(bad)
jp
mov
mov
scas
xor
lods
test
mov
cdq
pop
sub
mov
mov
aad
add
int3
lods
sbb
mov
xchg
dec
mov
xor
popf
dec
retf
fist
retf
leave
fstp
jge
pop
stc
mov
inc
fst
bound
push
test
in
sub
inc
jg
cmp
fild
test
xor
xlat
mov
xor
and
(bad)
scas
outs
mov
outs
mov
sub
jns
inc
setle
shl
adc
cmp
pop
xor
iret
sbb
inc
icebp
(bad)
aaa
sbb
sbb
mov
sbb
sahf
out
xchg
lahf
dec
push
ret
retf
xor
push
adc
cmps
pop
pop
out
jb
inc
jmp
gs
xchg
leave
fstp
and
or
mov
sub
retf
fs
shrd
mov
xor
mov
and
inc
sub
mov
mov
(bad)
add
mov
rcl
adc
ins
(bad)
dec
adc
mov
lock
mov
mov
push
outs
or
mov
push
add
mov
dec
je
jmp
push
(bad)
and
pop
mov
and
ins
leave
xor
push
ror
in
push
sub
inc
pop
in
bound
cli
or
lods
outs
and
stos
fnstsw
scas
jl
cmps
test
mov
add
mov
data16
ja
loope
pop
pop
lods
into
inc
stos
stc
fstp
stos
xchg
out
jno
pop
iret
mov
xor
mov
sbb
push
outs
fist
fwait
and
je
jmp
jp
push
stos
idiv
(bad)
sub
imul
adc
outs
mov
push
jge
jb
lahf
xor
in
les
aaa
inc
add
ss
fnstsw
cmc
iret
and
shl
sbb
xchg
pop
pushf
pusha
enter
jb
es
jne
jns
and
imul
test
mov
dec
cmp
push
aam
stos
repnz
inc
lds
shl
ucomiss
in
pop
test
cmp
mov
fs
lock
pop
loopne
jbe
leave
jmp
xchg
fs
jne
push
add
xor
pop
ret
mov
ret
sbb
push
xor
mov
xor
and
inc
sub
sti
sub
pushf
inc
sbb
mov
xor
and
ror
arpl
xchg
mov
ds
xor
outs
sbb
fiadd
pop
das
and
fisub
pop
leave
loopne
jmp
xchg
jmp
xchg
and
es
leave
test
retf
ret
xlat
xor
jns
(bad)
push
std
fdiv
inc
jae
jmp
ins
int
push
imul
call
leave
lods
repnz
add
cli
xchg
bound
xchg
jne
clc
cld
or
mov
push
bound
push
mov
cmp
mov
pop
push
fidiv
pop
fmul
enter
aad
imul
or
mov
add
ret
outs
add
xchg
pop
pop
pop
jmp
popf
ss
sbb
in
sub
ret
jl
icebp
xchg
mov
fs
push
sbb
fstp
nop
jnp
in
fild
outs
(bad)
pop
jecxz
mov
in
in
pop
mov
rol
into
sbb
hlt
jo
les
pusha
cwde
(bad)
test
(bad)
mov
js
int
cld
cmps
rcl
arpl
push
jne
imul
stos
neg
or
in
iret
xor
int3
test
jno
xor
lds
adc
cmp
jle
(bad)
movs
fdiv
push
arpl
inc
jmp
and
call
retf
mov
or
lock
sti
outs
retf
adc
sub
int
add
pop
sbb
xchg
jle
adc
mov
or
fmulp
add
scas
(bad)
lahf
outs
jle
xor
out
hlt
in
sti
stc
cli
jecxz
pop
sbb
mov
mov
inc
adc
mov
or
pop
std
xor
cmp
sub
xlat
arpl
push
jno
sbb
inc
fist
rcl
push
adc
sub
dec
xor
fldcw
push
xor
mov
in
cmc
mov
sbb
cmp
push
bound
cmc
bound
rcl
mov
push
xchg
xchg
cmp
into
or
jae
pop
js
xchg
pusha
sub
nop
iret
inc
pop
cmp
in
xchg
loope
cmps
(bad)
imul
adc
mov
test
std
inc
mov
sub
mov
dec
jg
stos
inc
sar
test
add
sub
mov
push
movs
dec
mov
out
fisub
mov
xor
mov
aaa
xchg
pop
test
call
jno
xor
nop
mov
inc
mov
adc
dec
pop
lea
jmp
into
xchg
in
test
retf
jmp
call
mov
out
jge
mov
int
rol
add
movs
mov
mov
sub
out
mov
pop
sbb
adc
push
test
arpl
mov
push
push
or
bound
xchg
xor
mov
xchg
or
cmp
int3
xor
jl
push
iret
sti
add
call
or
popf
jmp
fidivr
push
push
mov
rcl
mov
call
ins
fld
sbb
push
cmp
and
aad
pop
test
bound
out
inc
test
inc
xchg
(bad)
sahf
jge
sub
or
std
lock
lds
cmps
daa
jb
iret
mov
dec
cdq
icebp
and
and
push
add
lea
and
sbb
pop
jmp
sbb
cmps
push
outs
lock
and
mov
xor
mov
fdivr
xor
jae
sub
sub
outs
inc
das
cmps
inc
xor
jecxz
or
pop
jae
fsub
inc
into
mov
pop
cs
add
sub
cmp
out
outs
jg
stos
cld
adc
mov
xchg
loope
mov
in
(bad)
jbe
test
rol
inc
xchg
dec
mov
out
pusha
jbe
nop
js
(bad)
jmp
fdiv
out
or
adc
dec
inc
sbb
pop
mov
lea
fwait
repz
pop
mov
push
test
mov
loopne
scas
out
cmc
inc
push
jle
(bad)
and
icebp
add
add
mov
inc
inc
mov
or
mov
test
sar
les
or
cli
dec
sbb
(bad)
(bad)
push
push
sti
mov
test
in
jae
(bad)
test
call
nop
std
push
lods
inc
popa
cld
cmps
cmp
jl
outs
retf
test
jmp
mov
xor
aad
stc
adc
jecxz
adc
call
fsub
mov
pop
aam
aaa
lods
test
imul
sub
fistp
pop
outs
sbb
inc
dec
xchg
push
adc
xchg
inc
fld
js
sub
bt
cmp
pop
adc
stc
jb
push
in
inc
jo
ins
sub
test
mov
cmp
pusha
mov
pop
out
or
mov
out
or
(bad)
loop
and
div
inc
movs
dec
xor
pushf
or
int
jno
mov
pop
mov
push
xor
xor
cs
mov
jmp
or
mov
lea
sbb
loop
or
adc
and
leave
cmp
clc
fwait
jl
inc
and
push
sub
adc
in
ins
sbb
int
in
fimul
pop
fcom
in
mov
mov
imul
cmps
pushf
mov
jns
pop
inc
test
xor
mov
into
icebp
and
xor
rcl
mov
jmp
js
adc
aaa
xor
loopne
jecxz
je
and
pop
cld
aas
sub
call
retf
sbb
std
mov
bound
xchg
mov
cmps
loop
mov
fstp
jmp
mov
popf
ror
pop
mov
popf
test
or
aad
jmp
mov
(bad)
mov
sbb
in
pop
jmp
enter
adc
dec
ss
xor
mov
leave
jbe
(bad)
les
xor
ja
xor
fld
leave
daa
adc
cdq
gs
sar
mov
sub
loop
push
lea
or
repnz
(bad)
into
(bad)
ror
cmps
xchg
fist
xor
mov
push
gs
jmp
xor
fld
or
daa
dec
fisttp
xor
ret
outs
and
call
popf
mov
pushf
mov
leave
push
out
out
sub
aam
sbb
pop
outs
lahf
push
adc
jl
ins
(bad)
popf
jge
add
xor
fucomi
test
mov
daa
cwde
sub
add
cmp
mov
mov
jo
mov
dec
lds
xor
sbb
hlt
inc
daa
push
arpl
mov
pop
imul
cmp
sub
(bad)
mov
mov
and
fistp
loopne
mov
xchg
push
dec
mov
lods
hlt
dec
cmc
jno
loope
pop
jecxz
add
xchg
pop
imul
inc
fs
dec
stos
inc
jo
sub
sub
arpl
or
jle
pusha
int
sub
mov
sub
mov
das
mov
stc
cmp
push
push
ds
shl
mov
out
adc
push
jns
jmp
cmps
xlat
(bad)
or
les
or
jmp
not
out
jbe
js
fisub
pop
dec
mov
out
and
imul
mov
adc
inc
jg
mov
ja
mov
shl
lods
ror
pushf
push
pop
popf
adc
(bad)
push
aam
mov
popa
cs
loope
mov
fwait
es
out
stc
call
loopne
mov
mov
cmp
ins
push
data16
mov
call
pop
ret
dec
inc
xor
xor
sti
movs
push
dec
aam
mov
clc
fprem
aad
inc
outs
cmp
pop
enter
jmp
aam
(bad)
mov
xor
vmread
aam
add
add
push
or
dec
jnp
es
mov
(bad)
repnz
jle
hlt
mov
shr
mov
cli
ret
idiv
adc
ret
je
test
ja
pop
or
mov
jmp
mov
cmps
jecxz
xchg
mov
std
ficomp
sub
inc
dec
inc
sbb
add
int3
xchg
dec
cmp
in
mov
and
scas
and
out
pop
and
scas
jae
nop
inc
cmp
xchg
pop
sti
xchg
mov
push
sub
sub
rcl
shl
lock
jae
pushf
mov
xchg
cmp
mov
xor
movs
rcl
sbb
push
push
adc
cmp
push
stc
cli
lds
sar
pop
xchg
sbb
in
psubsw
xor
into
nop
fcmovnb
sahf
cmps
in
jno
xchg
and
jae
inc
shl
mov
lea
rcr
jmp
shr
and
pop
(bad)
push
add
fdiv
outs
je
or
or
xchg
add
outs
xchg
cdq
inc
lahf
test
popf
inc
mov
(bad)
fstp
xor
shl
mov
retf
push
repz
(bad)
int
enter
inc
lods
mov
xchg
or
sub
xchg
loop
jnp
cmp
(bad)
mov
call
cmps
sub
push
mov
mov
xchg
mov
test
outs
retf
cmp
sbb
pop
test
adc
stc
rol
cmps
mov
sub
push
and
idiv
pop
es
sub
das
push
dec
std
jmp
stos
xchg
icebp
jge
mov
add
gs
xchg
push
sahf
mov
into
inc
sar
fiadd
repz
add
std
pop
add
mov
adc
cmp
cmp
push
enter
call
movs
aaa
movs
xor
movs
repz
cli
outs
fisttp
ins
in
mov
mov
loope
cvtpi2ps
mov
sub
fcom
push
add
movs
outs
xor
fldcw
scas
in
fidiv
mov
cmps
sub
ins
fnsave
test
pop
mov
outs
retf
test
outs
lods
cld
cmp
mov
mov
cmp
xor
fwait
aas
push
outs
js
(bad)
inc
cwde
jns
mov
pusha
mov
out
push
push
fdivr
pop
mov
cmp
and
mov
jbe
call
in
fistp
cmps
dec
and
jo
inc
scas
dec
sbb
jl
bound
inc
or
pop
add
cli
dec
ds
stos
mov
mul
adc
mov
jae
xchg
ins
or
mov
push
jp
(bad)
cdq
jge
jmp
retf
sub
ins
jnp
xchg
in
iret
out
sbb
mov
xor
mov
jbe
cmp
sbb
dec
lds
pop
xchg
test
cmp
lea
test
jle
jp
out
inc
add
mov
scas
mov
jmp
push
pop
pusha
adc
sar
sub
push
and
mov
jbe
call
cmp
hlt
jge
jne
xchg
cmp
pop
adc
and
jecxz
mov
dec
xor
pop
jo
pop
add
push
sbb
mov
cmp
jbe
and
pushf
mov
inc
ja
pop
into
cwde
or
pop
in
push
xor
dec
push
in
test
into
gs
mov
mov
clc
mov
dec
mov
ins
hlt
daa
dec
sub
fisttp
int
push
xchg
sub
xchg
test
addr16
pop
(bad)
push
ja
dec
fiadd
mov
add
mov
xchg
add
in
fild
add
inc
sahf
xchg
fcomp
int3
ret
cwde
jge
imul
fcmovne
pop
jg
mov
mov
cdq
fild
std
shl
xor
sbb
mov
inc
in
out
cdq
fild
inc
xlat
cmp
in
xor
fwait
ret
data16
mov
stos
xchg
adc
leave
inc
bnd
inc
stc
mov
xor
and
pushf
(bad)
ss
sbb
aam
xchg
sub
jmp
mov
test
jbe
in
cmps
outs
add
lds
cwde
sub
dec
jecxz
bound
jmp
(bad)
sti
sbb
sbb
dec
movs
xor
xchg
dec
or
push
jbe
dec
imul
push
call
cdq
jae
hlt
dec
mov
mov
or
js
(bad)
pop
ret
ss
and
(bad)
outs
mov
popf
jae
ins
lods
pop
sub
fadd
es
or
jnp
pop
cmps
jnp
xchg
sbb
pusha
ins
sbb
xor
sub
sub
and
mov
mov
cmp
psubb
setg
int3
in
test
xchg
or
leave
sbb
dec
push
add
inc
out
icebp
addr16
xor
mov
add
into
cmp
push
pusha
fdivr
sub
in
dec
sbb
les
or
js
addr16
xchg
and
jg
or
stos
stos
dec
ss
mov
inc
fidivr
fs
adc
pop
push
jmp
ins
jle
ds
test
lock
shl
jmp
jecxz
pusha
mov
push
in
mov
pop
cdq
stos
ss
pop
hlt
repz
inc
les
ret
sbb
loopne
lock
cmp
fwait
dec
mov
adc
lods
or
(bad)
out
or
jl
inc
xchg
xor
mov
mov
movs
lock
push
test
(bad)
jge
out
cmp
cmps
test
(bad)
clc
mov
idiv
cmp
push
int3
stc
add
and
sub
push
(bad)
test
test
dec
out
dec
shl
sub
je
cmp
cmp
pop
sbb
outs
pop
pop
lds
push
xchg
cld
jbe
jb
outs
iret
sub
fidivr
xchg
bound
mov
jnp
int3
jne
stos
aad
jne
lds
out
or
pop
jge
jmp
test
pop
shl
xlat
push
aam
inc
mov
pop
inc
jbe
add
cmp
mov
dec
(bad)
mov
inc
scas
(bad)
stos
inc
movs
mov
cmp
push
cmp
and
loopne
std
mov
stc
ret
(bad)
rcl
sahf
or
cli
aas
jg
call
scas
stos
repz
sub
adc
shl
inc
stc
inc
mov
xchg
push
cmps
xchg
adc
dec
ja
bound
jmp
mov
ficomp
int
aas
pop
int
aaa
out
repz
jb
add
clc
lahf
jns
(bad)
retf
inc
ja
mov
(bad)
cli
cmps
or
shr
pop
inc
stc
or
mov
mov
add
fcmovnbe
test
(bad)
(bad)
loopne
or
push
lahf
rcl
cmps
jle
xchg
les
xor
stc
sahf
mov
pop
pop
push
dec
mov
bound
lahf
adc
mov
(bad)
or
adc
cs
loopne
loopne
mov
jmp
fucomp
push
and
dec
loope
mov
enter
pop
hlt
adc
add
push
pop
xchg
mov
jns
or
pop
stos
inc
xchg
hlt
sar
(bad)
not
lahf
dec
inc
sub
es
dec
aam
icebp
mov
xchg
(bad)
je
cmps
les
or
jecxz
cmc
pop
xor
into
rol
ins
push
mov
add
sbb
fadd
scas
repz
jns
addr16
pushf
scas
cmp
stos
or
cli
inc
or
lods
popf
xchg
addr16
fs
scas
ficomp
je
lods
call
shr
out
pop
je
and
in
pop
xor
xor
pop
mov
xor
inc
xchg
cmp
fs
inc
push
jb
icebp
jecxz
cmp
xor
out
icebp
loope
jbe
ret
pop
inc
mov
adc
sub
xchg
cmp
out
cmc
dec
jl
arpl
mov
ficom
cmps
ins
sar
aam
and
gs
dec
mov
dec
aaa
cmp
mov
xor
push
xchg
outs
test
mov
nop
xchg
and
add
sub
push
leave
fdiv
sbb
inc
cmp
addr16
sub
lds
(bad)
(bad)
movs
movs
pop
ret
dec
inc
jb
jo
mov
cs
cwde
add
xchg
push
ret
mov
aam
cdq
out
xor
fld
(bad)
dec
fisub
dec
scas
push
adc
loop
in
addr16
pop
or
inc
bound
sbb
pop
mov
test
pop
in
jo
outs
rcl
jecxz
sub
call
pop
inc
mov
push
mov
push
or
std
xchg
push
adc
inc
pusha
aam
ret
inc
xor
dec
adc
jae
cmc
push
stc
ins
adc
sbb
jmp
sahf
dec
mov
jmp
pusha
(bad)
xchg
adc
jmp
pop
or
cmp
mov
addr16
pop
mov
push
xor
add
dec
dec
outs
in
add
xchg
addr16
shr
xor
sar
dec
scas
pop
dec
or
and
scas
or
sti
movs
cmp
shr
add
sahf
loop
scas
adc
pop
adc
inc
jmp
pop
sub
pop
sbb
lods
sbb
sub
es
mov
clc
div
push
xor
add
jmp
jno
add
inc
push
adc
adc
jmp
inc
dec
add
ss
test
mov
pop
cdq
in
outs
sbb
dec
fst
fiadd
mov
inc
scas
cmps
(bad)
icebp
mov
add
pusha
mov
push
xchg
inc
mov
xor
mov
shr
sub
es
movs
adc
gs
sbb
adc
or
(bad)
push
inc
xor
call
fwait
cmp
push
push
loope
out
xchg
push
mov
sbb
stos
stc
inc
dec
retf
push
adc
in
in
adc
cmps
ss
test
cmps
popf
hlt
ficomp
bnd
fidiv
mov
loop
ins
push
push
lea
loop
imul
xchg
fistp
inc
or
scas
cmc
sahf
stos
mov
dec
movs
xor
dec
dec
push
popf
cs
xor
fstp
paddw
mov
aad
shr
add
mov
sbb
sub
stos
leave
jmp
iret
xor
stc
and
sub
push
shl
push
daa
aam
repz
cli
pusha
movs
cld
(bad)
ss
sar
cmp
sub
movs
hlt
sbb
stos
sub
stos
stos
pop
push
sbb
std
stos
sub
rol
sbb
out
bound
fwait
cdq
jne
jle
int3
xchg
scas
adc
mov
xchg
into
jle
out
push
call
or
int
fwait
dec
xchg
jecxz
loop
js
lahf
mov
scas
ins
adc
(bad)
clc
mov
xchg
call
vcmpss
adc
rcl
lea
adc
cmps
psrlq
adc
rol
and
push
aam
lods
repnz
and
xlat
enter
jp
mov
mov
and
mov
lock
dec
pop
data16
lods
rcr
nop
in
push
dec
loopne
sub
add
cmp
adc
mov
sahf
ret
int
mov
xor
mov
sub
jmp
push
in
pop
xor
not
dec
(bad)
fs
int3
sbb
and
aas
in
mov
inc
mov
push
inc
pop
fdiv
xor
std
sbb
xlat
push
add
and
call
jl
ja
jb
(bad)
sbb
(bad)
mov
je
jp
sub
popa
pop
stos
loope
jb
and
mov
push
inc
sub
loop
dec
mov
test
lds
test
xchg
das
push
(bad)
fld
(bad)
or
fsubr
imul
xor
aas
dec
mov
into
ja
mov
(bad)
and
jnp
cmp
fnstsw
push
xchg
sub
sub
inc
popf
and
sbb
dec
daa
shl
retf
rol
call
push
push
std
mov
xor
mov
push
clc
in
adc
sub
xchg
fdivp
push
adc
shl
sub
sbb
xchg
xor
pop
scas
les
mov
ja
ret
ss
push
jns
jmp
call
lahf
mov
and
vmaxpd
mov
mov
jg
mov
cdq
fmulp
movs
push
aam
pop
mov
jo
pop
pop
jle
movs
aam
cmp
sbb
or
inc
push
cmp
nop
test
and
fnstenv
push
pop
xchg
mov
fwait
retf
xor
jecxz
jle
scas
in
lds
in
or
imul
in
outs
jmp
daa
arpl
int
fisubr
pop
xor
cdq
mov
xor
or
xchg
jl
add
mov
ins
cli
clc
icebp
pop
adc
push
sub
adc
push
mov
shl
loop
push
test
in
mov
cmps
jae
inc
pop
push
cmp
sahf
sub
and
jne
xchg
xlat
jecxz
xor
cmp
push
mov
in
xchg
aam
jb
jno
or
std
js
xchg
sahf
sub
xor
sub
shl
mov
mov
and
adc
mov
test
push
mov
(bad)
xor
adc
fs
pop
hlt
clc
aad
push
gs
cdq
dec
fwait
mov
leave
adc
inc
loopne
ins
push
xchg
gs
ds
xchg
jo
inc
arpl
repnz
dec
xor
xor
test
cmp
mov
push
loop
push
and
adc
arpl
cmp
(bad)
cmc
push
imul
mov
pop
sti
test
fidivr
aad
xchg
xchg
cmp
xchg
sbb
xor
inc
xchg
inc
pop
int
mov
jle
add
adc
pop
sbb
icebp
pop
mov
mov
jns
std
shl
icebp
sub
mov
mov
ss
dec
xchg
push
push
inc
sbb
test
shr
jno
xor
xor
sub
test
jecxz
jp
pop
inc
imul
inc
std
neg
push
pop
cmps
jmp
and
data16
imul
cmp
ja
ja
xchg
jp
shl
repz
outs
mov
xor
in
data16
cmps
test
pop
cmp
inc
ds
dec
int
data16
test
aas
dec
sbb
cmp
push
fdivr
mov
jae
(bad)
mov
gs
inc
cmps
cld
adc
clc
mov
mov
cmp
push
and
jbe
aam
mov
aaa
popa
loope
jp
cs
in
loop
mov
test
push
test
pop
inc
add
push
mov
add
fisttp
int3
jae
sbb
mov
adc
add
call
into
adc
ret
jnp
test
shl
fstcw
dec
(bad)
sbb
inc
mov
jb
and
push
mov
or
or
shl
test
dec
sub
adc
stc
push
scas
cli
pusha
das
pop
xchg
scas
sub
mov
mov
out
in
dec
push
inc
mov
xchg
dec
mov
(bad)
stos
inc
xor
inc
test
pop
jg
bound
addr16
loopne
dec
sub
int
mov
or
inc
cli
je
loop
and
sub
outs
das
sub
xchg
xchg
fisubr
jge
pop
mov
ins
or
sbb
push
inc
lods
adc
jecxz
mov
loope
inc
and
mov
mov
mov
in
cmp
cdq
inc
pushf
mov
dec
and
add
xchg
in
outs
out
rcr
sbb
popf
and
lods
scas
sub
loop
icebp
dec
pop
cmp
sets
retf
mov
ds
lea
jns
xchg
jecxz
(bad)
lahf
test
mov
ffreep
leave
push
cmp
or
pop
dec
mov
hlt
push
mov
inc
and
xchg
jmp
push
sub
pop
call
test
sub
leave
addr16
or
and
push
(bad)
loopne
lock
les
shr
cwde
fnstcw
sbb
mov
jnp
imul
sub
js
add
pop
sub
mov
dec
stc
push
pop
fsub
pop
fcomp
adc
ins
cmps
ror
(bad)
sbb
mov
mov
je
mov
(bad)
or
enter
sbb
jle
pop
test
xchg
and
daa
xchg
sbb
jb
cmps
pop
sub
fist
sti
nop
gs
loope
sbb
test
test
in
jmp
pop
dec
(bad)
div
jns
imul
cmp
jecxz
bound
mov
and
push
push
xor
adc
call
fadd
xlat
ins
add
adc
das
retf
test
stos
lods
pusha
shr
rcr
mov
dec
cs
push
mov
(bad)
(bad)
nop
popf
gs
icebp
dec
popa
lahf
js
jmp
mov
sbb
add
aaa
fidiv
jl
cmp
ret
lea
adc
xor
jle
mov
ror
and
mov
test
fmulp
retf
sub
scas
sbb
adc
inc
jle
pop
xchg
inc
xchg
or
into
sti
retf
mov
sbb
ror
mov
and
xchg
inc
les
outs
inc
adc
sahf
adc
pop
pushf
cmp
pop
fidivr
pop
lods
in
inc
cmp
rol
(bad)
and
inc
and
(bad)
or
sbb
mov
xlat
inc
(bad)
leave
fsubr
ins
cli
(bad)
pop
sbb
fistp
jecxz
pop
adc
inc
or
xchg
test
jb
out
sbb
xor
retf
clc
push
or
push
sar
jae
adc
or
mov
push
aaa
push
mov
mov
outs
sar
add
call
jmp
rcl
rol
xor
outs
clc
addr16
push
mov
movs
ret
out
xor
or
stos
iret
shl
xor
jne
lods
xchg
outs
xlat
jl
aam
mov
call
es
xchg
in
mov
hlt
aas
inc
pop
mov
mov
js
mov
sub
daa
int3
sahf
es
lds
stos
mov
mov
test
cdq
(bad)
iret
jg
leave
push
(bad)
inc
sbb
pop
stc
(bad)
popf
adc
adc
(bad)
jbe
fbstp
jb
mov
enter
lds
stos
outs
cmps
push
pop
(bad)
idiv
rcl
xchg
out
jo
inc
or
push
push
jnp
adc
jmp
inc
idiv
cmp
ss
sub
inc
(bad)
mov
pop
xchg
fwait
dec
add
mov
add
ret
int3
mov
jmp
mov
cwde
jmp
or
xchg
les
lds
aam
aas
xor
test
sbb
(bad)
cmp
jge
(bad)
repz
mov
movs
(bad)
sub
(bad)
push
lods
push
cwde
ret
(bad)
int3
lock
cmp
ds
push
cmp
test
mov
cld
sbb
jle
loop
shl
fmul
movs
int
ror
movs
sbb
adc
outs
mov
iret
movs
cld
and
lods
sub
int3
pop
scas
sub
cli
push
fldenv
cmps
push
add
repnz
push
test
xchg
and
jno
sub
push
pop
adc
leave
dec
mov
rcr
lea
inc
sbb
sahf
ins
adc
or
test
inc
stos
dec
jl
rcl
push
mov
and
out
das
sahf
cmp
xor
jg
repz
mov
clc
add
jnp
push
inc
adc
mov
mov
push
xchg
pop
fs
sar
jmp
loop
fiadd
call
jne
in
pop
xlat
clc
or
sahf
add
adc
imul
mov
sub
in
call
pop
dec
adc
(bad)
call
inc
jo
add
pusha
mov
and
xchg
and
pop
lods
or
test
adc
cmp
ins
je
loopne
add
pop
int3
adc
sbb
cmp
fadd
loope
lea
clc
mov
mov
inc
inc
bound
bound
and
add
mov
mov
inc
test
pop
xchg
sar
xchg
add
je
mov
or
push
ss
les
sbb
retf
leave
jns
(bad)
sahf
mov
stos
fmul
fisttp
outs
cmp
or
dec
std
int
jg
aad
fs
mov
daa
nop
xchg
repz
pmulhuw
aad
loopne
scas
add
jo
sbb
pop
and
sub
int
sub
sub
aaa
or
ficomp
in
(bad)
adc
sti
sub
cli
je
test
jnp
and
inc
imul
ret
mov
mov
push
gs
mov
cs
(bad)
fwait
mov
je
sbb
lods
pop
fadd
cmp
inc
mov
xchg
xor
xor
(bad)
stc
xchg
dec
jmp
cmp
sub
mov
jnp
(bad)
daa
mov
push
in
rol
pop
out
nop
and
sbb
repnz
(bad)
stos
test
and
aad
loopne
jae
imul
push
xchg
pop
push
ins
xor
jge
imul
ss
je
lock
sbb
je
fld
in
in
xchg
popa
xor
cmp
stos
outs
mov
or
es
pusha
loope
inc
push
clc
mov
push
mov
or
and
fstp
mov
pop
xor
add
cmp
repz
push
fcomp
cmp
cmp
mov
test
loope
or
je
sub
test
mov
mov
or
mov
cmp
retf
xor
test
mov
push
pop
push
sbb
sub
dec
aam
mov
ins
outs
inc
push
scas
add
js
adc
addr16
dec
mov
pop
jmp
ja
mov
or
or
and
js
cwde
not
scas
sub
cwde
add
add
fimul
push
pop
imul
stos
pop
and
add
jg
pop
add
ja
test
sbb
or
stos
pop
sbb
xor
sbb
pop
cmp
inc
stc
stos
mov
mov
jecxz
sti
jl
sbb
mov
sub
pushf
xor
movs
xor
cmp
ins
inc
push
push
pop
dec
ucomiss
jmp
xor
std
les
dec
xcrypt-ecb
cmps
or
bound
or
mov
in
pop
sbb
imul
push
cmps
in
stc
(bad)
aad
inc
sar
jge
stos
sahf
scas
(bad)
mov
movs
pop
xchg
je
pushf
sub
sub
(bad)
mov
adc
(bad)
cs
jb
inc
pop
jecxz
or
jns
xor
loopne
push
ja
push
data16
jmp
inc
cmp
lock
xchg
ss
push
movs
sar
aad
push
xor
and
les
and
jae
in
xlat
pushf
sub
iret
pop
pop
aam
(bad)
daa
test
mov
data16
cs
rol
jns
jmp
leave
mov
push
pop
aam
pop
ins
push
fst
xor
cmp
jo
lods
leave
xchg
ins
jp
out
adc
cmc
cmp
cli
gs
cmp
jge
jecxz
cwde
mov
or
shl
inc
out
inc
(bad)
jnp
out
mov
and
hlt
ret
cmps
shl
fsub
ins
push
fidivr
jg
pop
add
mov
test
pop
mov
jmp
xor
xchg
popf
shr
aas
test
adc
fstp
gs
lods
add
test
sub
push
bound
fdiv
sbb
daa
test
inc
add
or
(bad)
cli
cmp
pop
push
sub
adc
mov
out
xor
cmp
mov
jp
add
(bad)
repz
mov
dec
jp
lahf
sbb
ins
addr16
cdq
sub
rol
inc
(bad)
loope
(bad)
fiadd
cmps
cmp
inc
stos
xchg
mov
stos
ds
pop
mov
pop
retf
mov
or
cmc
inc
mov
and
jbe
aam
pop
push
mov
dec
or
and
loopne
stc
xlat
pop
xchg
fadd
adc
iret
jmp
push
fcmovb
jbe
inc
mov
test
cmp
fstp
dec
or
xchg
mov
jbe
and
mov
aas
xchg
in
mov
push
cdq
xchg
pop
aas
fcom
sub
mov
ret
mov
add
cmp
call
push
xor
dec
sbb
adc
and
jne
pop
or
enter
imul
jae
cld
repz
daa
lods
xor
jmp
inc
or
scas
test
push
pusha
xor
dec
xchg
das
and
shl
mov
push
js
adc
outs
sbb
adc
lahf
div
xor
xchg
xlat
out
mov
aas
lds
and
cmp
and
ins
(bad)
shl
int3
arpl
mov
je
fild
push
jmp
pushf
repnz
call
mov
add
outs
sub
aas
imul
(bad)
or
out
nop
adc
jl
cmp
push
lahf
or
add
ds
xchg
dec
xor
pavgw
(bad)
push
test
dec
push
inc
inc
mov
popa
je
ret
nop
ins
fisttp
and
jmp
fcomp
pop
retfw
or
ret
sbb
jno
pop
xor
neg
ins
lea
scas
lods
add
jae
je
mov
xchg
out
outs
add
lods
stos
(bad)
std
xchg
inc
mov
neg
inc
inc
int3
jl
aad
and
sub
mov
push
lahf
lods
mov
push
setno
sub
leave
cmp
mov
push
lods
dec
out
push
add
cli
xor
fdivr
jne
fwait
push
inc
dec
adc
mov
dec
enter
inc
dec
xchg
mov
psubsw
out
pop
loop
icebp
cld
stos
sahf
loop
data16
test
jle
and
clc
stos
retf
cmp
xchg
movs
xchg
sbb
adc
mov
mov
out
fcom
xor
sub
inc
jae
xor
push
mov
jp
mov
cmp
push
mov
cmp
das
xor
lods
loopne
push
xchg
lods
aas
and
int
xchg
jbe
or
loop
pop
pop
push
aas
out
mov
or
(bad)
cmps
add
inc
movs
jno
xlat
inc
mov
lods
mov
adc
loope
sbb
pop
inc
add
mov
arpl
scas
das
jmp
repz
fstp
push
aam
pop
int3
das
and
pushf
(bad)
stos
lods
loope
ret
inc
pushf
movs
jnp
(bad)
pushf
xchg
call
popa
cmp
dec
mov
sub
sub
stos
imul
mov
inc
cmc
in
or
push
outs
int3
pop
enter
mov
jbe
test
jbe
(bad)
mov
dec
fnstcw
xor
push
ret
pushf
xchg
and
mov
dec
and
jg
dec
sbb
stos
(bad)
dec
xchg
rcr
mov
in
sub
add
pop
pushf
hlt
mov
(bad)
into
nop
jmp
xchg
shl
div
adc
mov
jmp
gs
xchg
sub
mov
ror
or
aas
add
mov
pop
pop
in
mov
dec
pop
enter
mov
xchg
je
lock
pop
fistp
into
mov
stc
pushf
(bad)
and
add
adc
adc
jge
pop
fcomip
mov
dec
repnz
scas
xchg
(bad)
cmp
xor
imul
ret
pusha
jbe
or
mov
inc
inc
test
mov
push
mov
fdiv
cdq
scas
mov
cli
stos
add
addr16
retf
cmc
pop
mov
lods
xchg
fldenv
not
icebp
sar
cmps
punpckhbw
mov
std
ss
mov
sbb
dec
das
ror
mov
ret
jb
leave
xlat
and
jnp
bound
ja
mov
add
(bad)
push
jae
add
mov
popa
adc
arpl
cmps
cmps
ja
icebp
test
mov
pusha
dec
adc
enter
cmc
fdivr
jne
es
pop
and
sahf
outs
cmp
mov
pop
inc
push
jmp
sub
xchg
es
loope
jo
xchg
ret
test
sub
or
add
add
dec
cmp
sbb
pop
xlat
mov
addr16
std
imul
xchg
jno
adc
out
fcomp
lock
jb
or
sbb
fwait
(bad)
icebp
xbegin
xor
push
ja
div
cmc
jne
loopne
mov
fdivr
or
xor
ss
xor
or
fld
aaa
arpl
dec
xlat
scas
mov
dec
sbb
xor
inc
in
and
popf
mov
pusha
aaa
mov
daa
sahf
jno
or
mov
push
mov
cdq
test
cmp
movs
mov
adc
loop
xor
je
jnp
fxch
icebp
inc
lds
arpl
rcr
fwait
(bad)
lds
cwde
retf
xchg
sahf
call
enter
gs
dec
addr16
popa
sbb
pop
add
jg
retf
(bad)
jae
cmp
mov
popa
aad
or
sbb
cwde
xchg
daa
(bad)
mov
jae
mov
xor
add
or
mov
push
adc
cs
jge
aaa
pop
pop
lods
mov
jno
sbb
jae
daa
pop
call
(bad)
das
sbb
(bad)
xchg
loop
outs
mov
(bad)
repz
pop
fdivr
mov
scas
and
mov
push
and
loop
cs
or
(bad)
and
std
cs
mov
jb
sti
addr16
ins
sbb
fimul
inc
push
or
adc
js
je
out
mov
adc
pop
or
fs
pop
popa
cmp
inc
pop
mov
je
rcl
out
mov
mov
pop
and
shl
popf
pop
mov
jecxz
sub
jae
lock
xor
mov
call
clc
jmp
dec
inc
out
imul
push
mov
cwde
pop
(bad)
scas
inc
xor
fbstp
sbb
jmp
pop
push
inc
sub
adc
push
iret
cmp
in
pop
(bad)
iret
dec
repz
pop
and
aas
push
cli
ins
fldenv
not
push
(bad)
jp
push
aaa
inc
bnd
and
call
retf
add
push
or
adc
xchg
clc
hlt
pop
(bad)
pop
or
addr16
pop
aas
or
cmc
mov
aam
aaa
lods
ret
inc
jbe
hlt
or
stc
dec
iretw
adc
dec
mov
mov
mov
nop
imul
imul
mov
sub
rcr
fsubp
out
sub
and
ds
ror
test
jmp
dec
inc
rcl
xchg
inc
mov
xchg
lea
in
gs
mov
ins
gs
and
xchg
sahf
in
xor
and
fist
call
xchg
xchg
jne
imul
(bad)
repnz
ret
dec
jno
mov
push
jne
push
dec
les
mov
sbb
mov
push
dec
mov
movs
push
(bad)
scas
gs
out
popf
mov
cwde
stc
out
addr16
lock
mov
or
pop
xlat
icebp
sahf
push
jae
xchg
cwde
lea
mov
and
lds
adc
lds
mov
add
mov
outs
jmp
xor
dec
cli
add
fist
jae
ins
mov
aam
aaa
push
data16
sbb
fwait
or
sub
(bad)
adc
aaa
fild
sub
cdq
ror
push
xor
out
xchg
int3
push
addr16
pushf
pop
mov
(bad)
mov
cmps
jne
cmp
call
maxps
fwait
div
loope
inc
mov
pop
popa
movs
jns
in
sub
fdiv
fucom
jle
addr16
std
scas
sti
fcom
adc
push
cmp
or
rcl
out
cmp
mov
jmp
or
sub
stos
xor
imul
arpl
je
mov
ret
pop
fwait
sar
xchg
test
in
jl
mov
imul
into
push
mov
lahf
add
mov
dec
add
ja
mov
push
mov
clc
loop
add
sbb
mov
(bad)
outs
mov
and
or
dec
gs
push
mov
and
fisub
pop
xor
cmp
xor
mov
push
jle
popa
xchg
pop
loopne
loop
sti
sub
xchg
mov
jp
mov
xchg
mov
in
fdivr
mov
std
add
mov
(bad)
gs
or
jbe
jmp
or
mov
dec
jle
push
inc
in
xchg
inc
jg
shr
retf
ds
and
fnstsw
test
test
xor
std
dec
test
das
mov
js
dec
out
push
imul
lods
mov
(bad)
fbstp
xor
sbb
div
ret
daa
mov
loop
mov
dec
adc
mov
iret
jge
mov
and
imul
mov
pop
add
fwait
aas
hlt
inc
sub
imul
js
daa
ins
dec
dec
mov
enter
dec
mov
push
cmp
dec
ss
mov
jmp
sar
sti
xor
add
push
test
jmp
add
fucomi
repz
cmp
pop
pop
shl
xchg
test
fisttp
imul
inc
push
add
sbb
stos
outs
mov
test
inc
or
ss
cwde
setne
cwde
mov
or
mov
fiadd
mov
mov
cmps
push
psrlq
cmp
adc
push
mov
std
pop
or
add
dec
popf
sub
jmp
scas
and
xor
or
int
inc
dec
pop
sub
fild
movs
test
std
mov
jns
mov
push
loopne
xor
jne
or
mov
sub
xchg
add
sub
sub
push
imul
jg
nop
(bad)
ficom
jns
int3
ins
inc
ja
addr16
jb
sbb
mul
push
(bad)
cmc
bnd
mov
(bad)
je
shr
stc
jge
(bad)
icebp
or
stos
xchg
add
jnp
daa
stos
das
lods
int
std
dec
mov
jnp
push
inc
fucomip
add
stos
xacquire
mov
test
inc
in
sbb
inc
lahf
test
sbb
cmp
cli
dec
nop
xchg
out
jmp
mov
retf
inc
xchg
sub
mov
xchg
inc
popa
dec
xor
pop
sbb
dec
(bad)
jnp
and
sub
arpl
gs
lea
cs
push
push
enter
rol
das
xor
or
imul
add
cmps
and
cmp
jns
xor
sub
js
ret
xlat
inc
cmp
aaa
mov
lods
dec
inc
add
fimul
jae
mov
mov
and
pop
rcr
int
mov
fucomp
(bad)
test
pop
outs
loopne
arpl
fwait
cmps
sti
data16
sbb
aaa
jb
leave
lock
mov
sub
pop
xor
in
adc
mov
ret
mov
jmp
int
and
inc
and
ss
xchg
pop
jl
shl
push
push
dec
adc
inc
mov
stos
lods
retf
aad
int
xchg
jge
adc
or
sar
pushf
ja
or
push
div
test
repnz
push
cmp
pop
xor
(bad)
mov
sub
inc
(bad)
out
lods
sbb
lods
movs
div
jo
lahf
cdq
and
ror
rol
jecxz
aas
pusha
mov
neg
cmp
scas
dec
lods
push
mov
out
or
push
cmp
xchg
ins
inc
js
inc
es
mov
or
call
adc
lock
dec
ror
pop
call
push
mov
mov
retw
repnz
sbb
add
jecxz
adc
push
dec
or
shl
(bad)
repz
mov
rcl
inc
clc
lea
fld
mov
lds
into
pusha
inc
(bad)
int3
add
or
fdivr
mov
test
xchg
jl
mov
call
add
fsub
lds
add
dec
mov
imul
xlat
shl
xor
out
xchg
jnp
out
je
mov
or
push
scas
pop
xchg
sbb
xor
and
dec
xchg
test
mov
jecxz
je
or
pop
pop
add
or
fstp
shl
mov
jmp
or
jge
ficom
leave
mov
and
shl
stc
sub
aaa
repz
movs
xor
enter
mov
cmp
dec
pop
(bad)
jnp
xor
lds
bound
fcmove
out
push
mov
mov
inc
jbe
jg
mov
mov
mov
out
(bad)
jmp
push
cli
pop
sbb
pop
enter
fs
xlat
jb
loopne
sbb
push
inc
sub
test
fiadd
push
jg
mov
push
std
(bad)
push
repz
in
std
xchg
mov
pop
push
addr16
aaa
sbb
inc
int
sub
iret
cmp
dec
jns
inc
aas
stc
dec
(bad)
sub
aaa
pop
les
add
mov
sub
cld
mov
push
pop
adc
test
lahf
addr16
bound
ss
loope
mov
mov
dec
jl
in
or
(bad)
mov
sbb
ror
xchg
scas
scas
(bad)
pop
aas
into
in
das
inc
aam
clc
loope
hlt
ds
retf
les
sub
scas
push
imul
neg
add
scas
cmps
jmp
mov
aam
ror
mov
movs
sub
sub
or
add
(bad)
lock
cmps
adc
dec
mov
int3
fisubr
pop
push
mov
call
pusha
sub
jmp
cwde
imul
sbb
lods
adc
mov
fld
mov
lods
xchg
cmp
sbb
lods
ror
push
cmp
xchg
jl
adc
xchg
add
sbb
in
inc
sub
push
enter
push
mov
bound
(bad)
mov
jne
(bad)
cs
cmps
fdivr
mov
ins
es
scas
inc
and
cmc
js
fidiv
pop
dec
rol
add
and
fs
int3
push
xchg
jno
imul
lds
ds
fisub
js
mov
cmps
stc
xchg
(bad)
xor
sti
mov
ss
fidivr
pop
mov
jno
jno
icebp
mov
xchg
inc
dec
sbb
movs
push
push
pop
xor
scas
inc
rcr
test
xchg
je
mov
addr16
and
push
cdq
sub
scas
xor
mov
or
test
jmp
add
nop
dec
nop
stos
jle
cli
dec
retf
popa
jo
pop
lock
jecxz
pushaw
cmc
not
cld
push
cld
sahf
ret
sub
mov
int
inc
sbb
mov
add
jl
jo
rcl
and
call
ror
inc
adc
inc
dec
les
jecxz
dec
push
push
into
sbb
mov
adc
push
mov
dec
adc
cmp
mov
mov
out
xchg
push
jp
dec
mov
das
out
cmp
mov
in
ja
enter
out
sbb
pop
ins
cmp
sbb
cmp
(bad)
jns
repz
pop
loop
ins
int
mov
clc
in
lock
out
fimul
push
ins
push
fwait
int
cmp
jno
nop
dec
mov
xchg
rol
lds
std
imul
add
sub
call
push
xor
test
xor
dec
sbb
and
and
sub
mov
rol
iret
loope
test
jbe
imul
mov
push
shr
fwait
jg
push
sti
or
add
bnd
inc
inc
rol
push
int
neg
test
out
ret
shl
mov
scas
out
push
xchg
std
or
and
sub
jmp
cli
movs
std
or
enter
leave
or
aad
add
sbb
das
cmp
sbb
popa
outs
push
arpl
jb
cmps
mov
lods
movs
fsubp
mov
repz
mov
push
sahf
push
arpl
cmp
popf
fs
repz
jns
sub
ss
xor
push
gs
mov
cwde
adc
sbb
xchg
lods
call
xchg
adc
jb
jb
retf
lods
or
retf
(bad)
pop
jbe
cmps
dec
popf
xor
cmp
adc
ins
mov
inc
push
and
rcl
arpl
cmp
ret
repnz
(bad)
xchg
xchg
loopne
das
or
push
cmp
dec
stc
sbb
sub
push
dec
pop
lahf
fild
add
enter
call
lock
(bad)
push
out
mov
shr
mov
mov
and
jmp
shr
into
je
hlt
out
mov
mov
sub
inc
call
cmps
mov
dec
leave
dec
nop
mov
sbb
jmp
mov
mov
jmp
mov
mov
data16
mov
stos
xchg
add
jp
in
pop
pop
and
pop
fldenv
(bad)
imul
ja
or
adc
xor
adc
push
retf
mov
push
cmp
loope
mov
push
jmp
outs
ins
aaa
popa
sbb
imul
call
jecxz
cmp
jge
jbe
mov
jg
xchg
add
pop
push
pop
bound
cmp
jg
sbb
loope
sub
mov
test
cmp
pop
fdiv
test
push
or
push
retf
xchg
out
push
mov
adc
movs
dec
pop
pop
cmp
(bad)
sbb
out
(bad)
inc
test
fst
cli
push
dec
cdq
mov
dec
mov
mov
push
rcr
sub
movs
mov
clc
loopne
and
fld
imul
imul
pop
add
dec
shl
lea
fisttp
sub
frstor
mov
pop
(bad)
sbb
mov
repz
mov
movs
imul
sub
lahf
cmp
cmp
fldcw
fadd
outs
cmps
xchg
xchg
shl
xchg
es
push
pop
inc
mov
ins
mov
ficom
(bad)
adc
es
ficom
sub
cld
inc
(bad)
js
sbb
int3
and
test
mov
add
xor
pusha
cmp
xchg
mov
fcomp
ret
pushf
cmp
in
idiv
xor
nop
inc
cmp
loope
ret
cld
inc
fchs
sub
loope
mov
aam
cs
arpl
xchg
or
call
cdq
aaa
mul
cmc
and
lds
and
(bad)
icebp
mov
jae
cmp
xor
in
xchg
(bad)
mov
xlat
ficom
ficom
mov
jmp
add
sbb
push
test
jle
mov
jge
dec
shr
jno
gs
xor
mov
(bad)
fnsave
adc
test
ins
ds
repnz
sti
add
out
xchg
sbb
lahf
in
ds
aas
arpl
test
daa
ins
dec
das
dec
push
retf
jne
rcr
cmc
dec
jbe
sub
popf
xchg
aad
icebp
shl
push
mov
mov
pop
div
pop
inc
int
dec
das
sti
or
rol
xchg
les
add
and
sbb
mov
and
fs
pop
pop
sbb
mov
outs
mov
dec
sbb
or
loopne
cmp
push
test
mov
neg
inc
xlat
cmp
jmp
mov
add
mov
das
xor
pop
inc
add
sub
mov
mov
add
pop
push
xor
cmp
loop
inc
xor
js
inc
test
jle
sbb
cwde
addr16
jbe
int3
cwde
cmc
pop
ror
mov
imul
movs
mov
std
sahf
pop
jno
push
(bad)
sbb
xor
dec
add
push
pushf
fmul
sbb
repnz
in
ret
fistp
std
xor
push
xchg
push
sahf
retf
cmp
mul
or
jmp
pavgb
mov
xlat
(bad)
out
ret
cmp
inc
sub
ror
or
cmps
(bad)
mov
push
outs
or
xchg
pop
mov
call
sahf
bound
neg
pop
adc
sub
xor
mov
mov
push
jge
pushf
sti
jno
jmp
add
cmp
iret
dec
fdivp
outs
nop
sub
std
mov
rol
push
jae
bound
xchg
mov
sbb
out
push
int3
shr
jnp
or
inc
retf
mov
ds
cmp
or
clc
jmp
lahf
fcomp
mov
mov
sbb
hlt
pop
mov
pop
ins
aaa
push
mul
push
xchg
call
or
jmp
push
mov
popf
or
cdq
push
sub
aam
out
cmp
mov
xchg
pop
(bad)
inc
xchg
loop
cmps
fcomp
movs
scas
mov
aas
sbb
popa
retf
lock
xchg
inc
in
outs
inc
fdivr
push
movs
mov
sub
call
pop
mov
pushf
dec
mov
pop
call
leave
cs
adc
aam
cmp
js
(bad)
pop
fisttp
into
movs
lock
neg
mov
outs
pop
sti
add
pop
dec
loopne
test
jnp
cmp
hlt
inc
lods
hlt
xor
push
pop
es
push
cmp
ins
jp
ins
out
xchg
mov
dec
and
cwde
(bad)
sub
ins
cmp
fdivr
mov
mov
cmps
jecxz
js
fistp
mov
xchg
rcl
pop
scas
(bad)
out
sbb
fcomp
int
push
cmp
or
js
out
xchg
mov
dec
sbb
adc
sub
in
cld
je
push
adc
xchg
mov
in
add
cmp
jmp
inc
xor
add
or
sti
mov
rol
sub
inc
sub
ror
inc
lea
stc
sub
cmc
mov
xchg
or
stos
fiadd
(bad)
push
retf
cmp
xor
das
mov
jb
cmovns
pop
pop
aaa
stc
pop
popf
inc
mov
mov
mov
jno
pop
aas
addr16
mov
cs
cli
scas
mov
fst
xchg
mov
mov
mov
popa
mov
mov
dec
dec
pop
das
pop
mov
int
cdq
out
scas
popa
xchg
xchg
xor
jmp
mov
js
xchg
sahf
and
and
mov
sub
(bad)
aam
arpl
xor
add
push
mov
repz
fild
mul
xchg
inc
in
lea
addr16
mov
dec
ret
adc
inc
dec
arpl
sti
xchg
add
inc
ret
or
fistp
inc
mov
mov
add
sub
in
in
inc
sub
mov
fld
lds
aaa
jae
add
add
push
xor
mov
(bad)
mov
mov
sbb
or
loop
mov
pop
cmps
cmps
leave
push
dec
inc
das
mov
mov
out
imul
ds
inc
(bad)
test
and
mov
fs
ret
mov
jnp
(bad)
pusha
sbb
jle
xor
test
and
fldenv
fsubrp
push
mov
push
mov
fbld
sahf
repz
mov
pop
punpckldq
dec
adc
cmp
adc
fwait
loopne
sub
sbb
mov
fdivr
loope
jnp
jge
push
mov
xchg
push
cmp
mov
(bad)
nop
test
ins
mov
in
sbb
xor
scas
stc
xor
scas
inc
cmp
cwde
mov
and
xchg
adc
sbb
push
sbb
(bad)
loopne
mov
adc
dec
ins
jns
fcom
mov
pop
stos
jb
jb
out
push
jnp
test
inc
cs
jg
jecxz
add
cmp
cli
pop
ds
iret
lods
push
popa
pop
adc
or
scas
xor
cmps
mov
xchg
push
dec
stc
dec
cmps
and
repnz
pop
jp
mov
pop
xchg
fcom
mov
xor
adc
pop
xchg
retf
pop
add
repnz
dec
pop
cmp
rcl
stc
xchg
sub
inc
jae
inc
(bad)
cmps
adc
cld
ret
in
jns
adc
addr16
or
mov
outs
pop
jge
mov
(bad)
fnstsw
nop
jmp
sub
mov
jo
ins
inc
clc
mov
push
das
pop
add
pop
arpl
(bad)
jb
jl
push
dec
push
test
ret
scas
push
pusha
jbe
or
push
stc
xchg
push
(bad)
dec
mov
or
out
jp
inc
pop
fs
lock
sbb
stc
(bad)
cli
gs
test
scas
xchg
fst
or
sub
jmp
ret
mov
iret
cmp
add
out
lock
push
into
xchg
ret
mov
pop
adc
jnp
test
xor
std
imul
add
add
pop
fild
pop
and
jg
push
cmp
fisub
sbb
bound
aas
adc
sub
mov
lea
ret
push
adc
js
mov
mov
stos
jb
push
and
aam
push
xchg
inc
retf
jmp
cld
dec
sbb
daa
dec
xchg
mov
aam
icebp
enter
dec
mov
mov
cwde
out
in
test
leave
sub
mov
jmp
mov
sar
xchg
adc
cmps
aaa
adc
fisttp
daa
gs
dec
xchg
mov
mov
shl
in
cmp
je
add
stos
cmp
push
xor
arpl
(bad)
xlat
mov
pop
and
mov
adc
arpl
(bad)
xchg
sub
xchg
cmovl
test
xchg
sbb
call
retf
pop
in
sub
xchg
stc
xor
mov
outs
(bad)
jge
add
mov
jge
stos
out
sbb
test
xor
xchg
mov
test
jb
inc
imul
push
test
pop
rcr
stos
test
jg
je
pushf
or
xor
xchg
xchg
nop
fadd
sbb
fstp
stc
or
xor
pop
inc
enter
daa
cmp
cmc
fisttp
mov
bnd
aas
and
push
mov
push
pop
rcr
or
push
ins
iret
loope
jle
and
push
bound
mov
jae
pop
xchg
das
daa
ja
sub
push
mov
(bad)
sbb
jg
xor
fcomip
repz
mov
inc
loopne
push
test
rcr
loopne
imul
add
mov
sub
mov
imul
fistp
jle
cmp
pop
fisubr
add
daa
call
lahf
or
fcomp
push
xchg
mov
xchg
add
xchg
pop
and
pop
in
push
out
je
int
mov
sahf
xchg
fdivr
data16
adc
inc
sbb
jb
mov
push
sahf
icebp
xchg
(bad)
aad
xchg
icebp
repnz
call
daa
into
sub
stos
mul
pop
mov
pop
mov
lods
xor
and
jmp
pop
jle
add
jle
sub
aad
push
cld
sahf
sbb
ret
cmp
jg
mov
adc
ficom
xchg
fcmove
jb
push
sbb
pop
sbb
cmps
jle
imul
clc
push
int
jb
add
sub
push
movs
shr
fwait
jmp
ss
clc
add
mov
repz
pop
dec
or
mov
adc
mov
test
jp
and
loopne
cmp
or
aaa
test
add
mov
inc
and
inc
scas
stc
addr16
mov
dec
cld
test
int
push
mov
jo
jle
dec
out
mov
sub
jno
leave
fidiv
(bad)
sub
xchg
mov
push
cmp
or
retf
mov
dec
aaa
inc
xchg
popf
xor
out
mov
adc
jmp
mov
aaa
mov
movs
mov
mov
jo
(bad)
das
add
retf
mov
aad
(bad)
test
ins
in
retf
dec
mov
mov
test
rcr
dec
outs
fistp
pop
add
push
jge
test
xlat
popf
mov
cld
jle
test
adc
sbb
cwde
mov
fadd
inc
popf
inc
mov
pop
addr16
push
ins
inc
arpl
or
(bad)
or
scas
mov
mov
jmp
push
cmp
sbb
sub
add
pop
rol
adc
mov
call
ins
in
bnd
pop
(bad)
xchg
loope
retf
and
loopne
nop
push
jle
push
ds
mov
das
xchg
test
pop
adc
jno
mov
mov
icebp
cmc
jo
call
nop
cmp
add
pop
fwait
dec
xchg
adc
sub
rcr
loop
dec
clc
pop
mov
push
cld
sub
mov
rcl
jns
aaa
push
and
dec
scas
inc
pop
cmc
outs
fbstp
test
xchg
cmp
jmp
jne
pop
jbe
or
xor
imul
inc
dec
sub
inc
aad
push
pop
cmp
push
xchg
adc
pop
sar
jecxz
sahf
cld
or
stos
ins
jb
mov
ss
jae
mov
out
stos
es
enter
cwde
test
loop
ins
sahf
pop
mov
xchg
lock
arpl
int3
push
xchg
mov
into
lahf
xchg
bound
xor
push
jl
jo
icebp
push
add
mov
sub
cmp
push
jg
das
adc
fnsave
pop
bswap
test
gs
or
xor
fcmovnb
int3
(bad)
stos
add
cmp
adc
aad
pop
cmp
jecxz
inc
fistp
das
pop
std
adc
pusha
xlat
pop
call
add
jge
call
(bad)
fist
call
loope
stos
sar
adc
fnsave
sub
pop
mov
push
jno
shl
mov
fisttp
ficomp
xlat
dec
dec
leave
jmp
sbb
inc
jl
and
adc
mov
ret
adc
(bad)
jns
repnz
jl
jmp
dec
dec
dec
cs
lahf
mov
lahf
xor
push
mov
add
mov
pop
cvttps2pi
add
push
retf
mov
mov
pop
xchg
xchg
mov
dec
out
xor
sub
mov
cdq
pop
add
arpl
sbb
add
push
idiv
push
push
retf
call
pop
inc
scas
lds
mov
dec
mov
test
mov
mov
or
fwait
les
fst
sub
and
xchg
mov
lds
mov
or
inc
adc
pop
fwait
sbb
sahf
ins
adc
inc
es
ds
dec
mov
mov
ds
fst
popf
sbb
dec
ret
iret
outs
mov
dec
or
xchg
jecxz
sti
(bad)
(bad)
mov
push
sub
xchg
dec
js
push
cmp
scas
mov
dec
test
jp
mov
add
ja
inc
xor
cmp
adc
js
and
(bad)
mov
(bad)
push
imul
jmp
adc
pusha
ret
dec
adc
outs
test
xchg
and
int3
fdivrp
push
inc
sub
mov
jns
jmp
sbb
mov
(bad)
mov
repz
iret
fidivr
xchg
inc
jae
sbb
cmp
mov
xchg
xor
inc
cmp
ror
mov
test
mov
inc
lods
pop
call
shl
inc
cld
mov
sbb
sub
adc
mov
mov
sbb
push
rcl
add
ds
and
ret
xor
push
ret
add
popa
pop
jb
ins
test
das
aaa
jl
mov
shl
pop
aaa
dec
daa
out
cmp
pop
dec
mov
aaa
shl
int
xor
sub
ret
ret
xchg
cmps
jmp
or
mov
aas
outs
and
pop
xchg
or
and
sti
shr
data16
stos
mov
pop
pop
aam
jge
mov
cmp
jl
inc
js
sub
push
aaa
push
fnstenv
mov
xchg
aam
call
dec
out
fild
xchg
push
test
rcr
sub
inc
movs
out
call
test
xchg
mov
adc
mov
pop
mov
mov
cmp
xchg
sbb
mov
pushf
or
movs
unpcklps
add
xchg
pop
sub
xchg
push
cmp
and
stos
adc
test
lods
sahf
mov
pop
xchg
fist
inc
push
int3
popa
out
add
daa
pop
jno
push
pop
cs
loop
fmul
cmp
xchg
pop
push
(bad)
(bad)
dec
sti
call
std
or
addr16
inc
leave
mov
pop
aam
push
mov
inc
xchg
inc
daa
mov
ficomp
out
inc
sar
jo
dec
mul
cmp
pop
pop
(bad)
pop
inc
das
out
mov
arpl
xchg
pop
adc
int
or
sbb
mov
jne
push
repz
movs
std
cwde
pop
pop
cmp
enter
mov
pop
cld
cmp
jne
inc
dec
mov
push
mov
in
jp
shl
sub
fistp
inc
ud2
sub
les
scas
cmp
inc
and
mov
xchg
add
xchg
(bad)
cdq
pop
jmp
pusha
ds
sti
mov
fdiv
adc
ds
xor
push
cmp
or
add
xor
lock
daa
shl
mul
mov
gs
outs
jmp
and
dec
lea
xlat
in
jle
pop
cmp
dec
ret
ins
jb
xchg
rcr
push
cli
popa
mov
adc
adc
hlt
jle
push
push
add
and
outs
cld
inc
inc
mov
in
data16
sar
cmp
xchg
js
ins
ins
nop
aam
aam
mov
or
dec
out
add
mov
dec
cmps
mov
cli
addr16
cmp
mov
push
(bad)
jmp
mov
sub
ret
pusha
jmp
jmp
sbb
cmp
outs
adc
mov
jg
ret
xor
in
fwait
scas
jno
out
out
loope
sub
or
pop
add
js
pop
jo
scas
das
loopne
icebp
repz
retf
das
leave
outs
mov
imul
fs
add
(bad)
es
stos
mov
pop
xor
pop
in
dec
cmps
sbb
or
add
pusha
pop
jb
sub
add
cld
movs
sub
cld
pop
stos
push
movs
ds
mov
dec
imul
pop
push
lea
adc
sbb
cwde
or
pop
lahf
cld
dec
bnd
inc
inc
adc
xor
and
mov
jno
adc
gs
and
mov
out
(bad)
cmp
add
mov
inc
clc
sbb
and
adc
inc
pop
pop
sub
pop
scas
adc
rcl
aam
hlt
mov
data16
hlt
adc
xchg
xor
ret
lea
shr
(bad)
shl
jmp
adc
adc
push
inc
xor
inc
push
lods
test
(bad)
out
ins
xor
pop
retf
push
cmp
mov
ficomp
add
jecxz
fcomp
mov
pop
pop
fs
xchg
sti
out
push
pusha
arpl
mov
test
imul
scas
stc
ret
sub
out
lahf
sbb
dec
push
psubsb
or
pop
sbb
outs
(bad)
push
aaa
mov
das
lods
out
mov
mov
mul
int3
xlat
mul
imul
and
jb
stc
pop
mov
and
adc
xchg
jno
in
imul
hlt
fld
ins
sbb
jnp
je
or
rcl
xor
cs
mov
ja
push
jg
into
gs
mul
push
aam
mul
push
mov
push
mov
mov
mov
(bad)
dec
in
and
dec
add
and
mul
retf
add
pop
pusha
xor
cmp
ret
cli
pop
repz
mov
in
rcr
add
lds
in
loope
or
inc
je
sub
adc
xor
xchg
hlt
in
out
sbb
push
jne
xchg
movs
(bad)
push
mov
inc
pop
mov
mov
lahf
daa
jge
bnd
in
pop
sbb
scas
xor
mov
cmp
inc
sti
repz
idiv
stos
mov
daa
add
ret
in
js
clc
pusha
mov
or
test
push
jmp
add
jmp
push
cld
adc
mov
test
mov
dec
retf
push
movs
add
ret
movs
xchg
sub
mov
nop
mov
push
cmps
pop
jecxz
enter
fwait
mov
fisub
(bad)
std
retf
ficom
xchg
je
pushf
jne
sbb
xor
dec
sbb
das
dec
mov
mov
jmp
stc
push
loop
movs
in
pop
(bad)
mov
shl
sbb
test
ins
repz
dec
push
sub
mov
scas
push
push
aas
adc
shl
xor
pop
or
mov
mov
jno
jnp
or
(bad)
and
dec
js
jo
outs
jmp
and
cmp
shr
mov
cmp
retf
test
jle
dec
pop
outs
pop
scas
dec
jl
cwde
mov
mov
pop
test
shl
fnsave
pop
(bad)
mov
sar
test
and
stos
xchg
ja
mov
out
or
cmp
dec
(bad)
jmp
out
cld
popa
in
scas
test
loope
cmp
arpl
mov
icebp
mov
popa
xchg
and
sub
sbb
adc
mul
pop
lahf
sete
push
aad
adc
jge
hlt
mov
mov
iret
retf
jo
mov
int
push
pop
mov
sbb
jle
fcomp
inc
xor
sbb
stos
cld
cmp
and
cld
imul
mov
jnp
cwde
mov
inc
dec
fwait
out
xchg
arpl
cdq
stos
mov
(bad)
pop
mov
repz
(bad)
adc
int
retf
jno
cld
pop
cmp
add
mov
in
adc
aam
xor
cmp
push
inc
inc
xor
scas
daa
hlt
mov
push
daa
add
jns
dec
add
test
mov
nop
and
push
loop
adc
cmp
stc
inc
add
fwait
mov
aam
mov
pop
mov
push
fadd
pop
iret
xor
push
sbb
lds
and
xchg
sub
in
test
nop
jl
and
clc
dec
ror
cli
std
fdiv
bound
jns
inc
ins
leave
xchg
push
test
jb
in
jbe
repnz
and
and
cmc
ret
adc
adc
xor
retf
cdq
push
xchg
into
mov
pop
sub
and
jb
or
xchg
test
xchg
sbb
ret
movs
sahf
ret
xor
out
dec
sbb
popf
sbb
idiv
lods
shl
pop
adc
cmp
cmp
push
loopne
fs
dec
jl
or
es
sub
test
inc
inc
ins
jne
mov
stos
and
pop
mov
aad
jl
daa
pop
add
dec
dec
add
add
int
popa
(bad)
xor
mov
mov
lods
inc
add
bt
dec
shr
movq
mov
call
ror
stos
mov
shl
test
pop
mov
mov
mov
or
fst
add
imul
cdq
cmc
push
jae
(bad)
ret
and
nop
shr
inc
cmp
std
xchg
and
pop
out
push
sub
xchg
xor
jp
xchg
into
and
pop
or
addr16
mov
arpl
loope
imul
lock
mov
or
ins
pop
mul
into
aad
sbb
ins
(bad)
mov
rol
cwde
jne
loopne
xchg
xchg
stos
sub
popf
sub
aad
mov
mov
jmp
or
rcr
sub
fiadd
stos
das
mov
loope
lea
push
lahf
push
add
fwait
out
fldcw
adc
pop
mov
xchg
in
bound
and
dec
sub
push
pop
inc
adc
push
rcr
fwait
or
imul
out
add
xor
sbb
(bad)
mov
leave
dec
out
je
into
outs
fsub
shl
fistp
in
(bad)
sub
pusha
jle
cli
repz
xchg
adc
cmp
mov
mov
mov
addr16
mov
mov
test
jg
inc
lahf
std
in
xchg
aad
retf
push
pop
dec
xchg
les
lds
js
sbb
int
movs
gs
das
push
pop
pop
inc
or
adc
call
ds
rcl
enter
fist
test
add
js
scas
mov
(bad)
fs
ret
cmp
cmp
ret
or
(bad)
je
(bad)
mov
pop
sbb
pop
xchg
out
je
rol
or
mov
mov
imul
push
and
push
dec
ja
inc
push
pop
sahf
aas
pop
aaa
xchg
sbb
cmp
lahf
pop
ficom
xchg
pop
fmul
sbb
inc
xor
fs
xlat
xchg
cdq
scas
dec
in
mov
and
and
(bad)
scas
and
add
sub
inc
jp
add
fdivp
push
scas
push
(bad)
pop
movs
outs
shl
push
jmp
pop
ficom
fwait
mov
ror
js
das
fdivr
stc
and
ins
lahf
xor
pop
cmp
mov
imul
rol
ret
sbb
mul
mov
loopne
pop
pop
and
outs
or
ret
in
adc
lods
pop
mov
sub
sar
jnp
std
jo
(bad)
add
xor
fld
pop
push
in
mov
loopne
out
outs
jne
pop
lock
std
scas
and
pop
call
jnp
jmp
leave
inc
mov
test
aaa
pop
pop
dec
mov
inc
push
sahf
imul
je
call
imul
push
push
lods
cmp
jo
ret
xchg
dec
push
push
jno
clc
int
xchg
or
push
sbb
sbb
repnz
test
pop
pusha
mov
jl
inc
enter
and
sub
enter
mov
xchg
fidivr
add
mov
scas
les
sub
cld
xor
xchg
mov
mov
fwait
mov
aaa
test
sti
pusha
cmp
mul
cli
aas
pusha
enter
push
jmp
mov
push
inc
cld
bound
jno
ss
fistp
inc
mov
ja
lods
dec
add
jp
retf
jmp
dec
es
leave
cmc
clc
cdq
dec
or
mov
cld
movs
xor
dec
daa
fldcw
and
push
call
inc
imul
addr16
sar
(bad)
loope
xor
aas
(bad)
stos
lods
cmc
into
pop
in
adc
cmp
mov
adc
aad
cwde
in
dec
icebp
repz
jmp
pop
jmp
cmp
adc
lock
pop
movs
lea
jne
fistp
mov
xchg
call
push
or
ret
int3
sbb
les
inc
mov
sbb
lock
cmp
rep
(bad)
fst
xor
fild
or
push
pop
mov
xor
pop
xchg
push
push
mov
call
movs
cmp
(bad)
push
mov
lds
adc
xor
add
test
cmps
neg
push
jnp
mov
dec
popa
in
in
pop
push
add
fwait
xor
mov
ret
push
movs
hlt
fwait
scas
jne
js
test
push
pop
js
js
jnp
push
call
adc
mov
lea
add
fild
je
dec
pop
ins
adc
sub
aas
jbe
jle
test
mov
mov
adc
jno
jp
or
lea
ins
nop
mov
jbe
stc
jmp
add
bound
pop
pop
shl
pop
push
js
xor
fsubr
loopne
mov
das
rcl
jae
(bad)
sub
sar
mov
jae
jecxz
ret
clc
or
loopne
xchg
cwde
xchg
xor
jle
int
xchg
pushf
xchg
je
jg
int3
push
(bad)
jge
dec
xor
loop
sub
iret
sub
sub
sbb
and
sub
ret
lock
push
fistp
gs
pop
in
sbb
jl
and
mov
call
sub
jecxz
ins
mov
retf
cdq
sub
out
add
(bad)
loopne
lea
cmp
mov
loop
add
fwait
test
pushf
jmp
mov
xchg
inc
bound
jmp
jb
ins
lods
nop
sub
xchg
clc
fnstsw
cmps
or
retf
mov
dec
gs
and
ja
and
jmp
shr
and
out
inc
in
pop
push
std
cld
inc
xlat
pop
push
outs
test
sbb
fisub
fdiv
dec
xor
retf
scas
mov
addr16
pop
mov
call
sbb
or
outs
dec
mov
dec
cmc
leave
aaa
xor
iret
cmc
fwait
sbb
mul
mov
add
repnz
lock
jbe
xor
fcom
test
sbb
cwde
test
stos
dec
scas
fisttp
xor
out
push
dec
add
arpl
dec
nop
xor
aad
mov
scas
test
test
or
lock
jo
cmp
jno
std
mov
mov
sub
sub
pop
jle
stos
dec
lods
out
in
daa
sub
xchg
push
cmps
xor
out
xchg
mov
mov
out
mov
fwait
jae
and
leave
ins
add
cli
sbb
aam
mov
pusha
test
fmul
jne
cwde
retf
dec
fldenv
and
jo
(bad)
icebp
xchg
xchg
mov
mov
cld
loopne
sti
xor
mov
adc
push
pop
outs
mov
sbb
and
pusha
lods
or
(bad)
sbb
cmps
add
sub
std
jg
aas
add
out
sahf
xor
push
call
xor
ret
jbe
lods
pop
jge
dec
js
aas
pusha
es
ror
sbb
dec
inc
and
jbe
push
fs
clc
cmp
pushf
dec
push
test
fiadd
xchg
adc
jg
sub
fild
sub
cmp
pusha
out
xchg
dec
xchg
repz
data16
dec
and
retf
mov
nop
ins
test
push
add
xchg
loop
pop
xchg
sub
cmps
sbb
and
inc
inc
imul
jp
popa
shl
sbb
cmps
pop
dec
retf
mov
pop
and
jg
ficomp
cmp
imul
aam
test
mov
inc
jmp
pop
das
cmps
mov
fcomp
or
sbb
fist
retf
cmp
(bad)
adc
loop
cmp
mov
sbb
aaa
movs
stos
pop
cdq
inc
lea
in
retf
adc
jb
xchg
mov
arpl
ret
idiv
sub
imul
xchg
in
jne
fstp
fiadd
ja
call
cmp
or
mov
cwde
fisttp
aam
jbe
out
or
pop
jg
mov
sbb
jae
cs
in
and
lahf
mov
in
sbb
mov
mov
inc
ins
(bad)
scas
aas
mov
dec
leave
mov
mov
pop
aad
cs
call
fistp
je
repnz
rcr
loope
cmps
jo
inc
aam
mov
mov
outs
cmp
int
dec
sbb
adc
outs
xor
jg
es
xchg
out
and
push
test
sub
imul
cmps
add
dec
jbe
adc
test
dec
movs
or
setns
sbb
or
dec
je
cdq
xchg
jo
aaa
mov
dec
jno
aam
into
or
out
rcl
mov
push
icebp
push
sub
push
arpl
mov
jbe
cmp
fild
adc
std
dec
sub
shr
std
mov
jno
sar
popf
mov
jbe
dec
mov
push
out
mov
inc
pop
mov
and
ins
pop
and
cmp
add
mov
xchg
test
jns
mov
stos
test
cli
fwait
mov
in
(bad)
js
mov
out
gs
cmps
es
clc
dec
(bad)
jl
mov
das
(bad)
xchg
mov
stos
scas
push
mov
lahf
mov
mov
test
out
in
mov
call
fdivr
sub
lea
push
mov
pop
out
inc
and
mov
adc
iret
dec
std
in
pop
inc
je
gs
cdq
call
loope
test
push
xchg
cmps
adc
mov
push
mov
ja
adc
cs
stos
(bad)
xor
inc
repz
test
fld
jmp
adc
inc
(bad)
je
mov
aaa
or
or
mov
ret
cmp
adc
cli
pop
enter
and
imul
adc
cdq
jns
jge
inc
pop
fs
fisttp
stos
es
int
push
sbb
out
mov
stc
push
and
push
cmc
mov
aad
mov
out
xchg
(bad)
jecxz
rcr
adc
loope
xchg
pop
mov
lods
sti
mov
cmps
mov
inc
sub
ret
test
leave
popf
jbe
sar
or
xor
arpl
adc
or
mov
pop
mov
add
and
fsubr
push
sbb
xor
add
and
xor
ins
sahf
sub
fimul
cmp
jg
repnz
jne
stos
cmc
imul
xchg
ins
not
push
add
rcr
gs
idiv
cmp
mov
xor
repz
dec
test
out
popa
dec
jbe
add
out
gs
cmc
mov
cmp
movs
ror
imul
in
loope
iret
loop
pop
mov
jne
shl
jecxz
cdq
jmp
ds
push
jle
cmp
and
or
cmp
les
popa
ret
mov
dec
stos
cmps
das
icebp
cdq
retf
test
daa
sbb
xchg
dec
fbstp
fsub
loop
nop
mov
(bad)
xchg
lds
xor
rol
cli
and
movs
mov
lock
lods
inc
repnz
mov
jl
dec
mov
jo
or
shr
(bad)
mov
aas
or
inc
inc
inc
(bad)
adc
mov
ss
pop
jb
mov
add
sbb
daa
cwde
jg
adc
loopne
scas
or
or
std
mov
pop
arpl
inc
aaa
call
pop
dec
enter
mov
add
movs
retf
xchg
mov
or
out
push
hlt
retf
mov
loop
outs
jbe
jnp
adc
adc
mov
push
pop
pop
shr
jl
mov
lahf
icebp
jno
adc
jnp
imul
dec
ja
aaa
jl
xor
(bad)
outs
xor
dec
repnz
jbe
xchg
rcl
sbb
adc
sti
adc
inc
jecxz
xor
sub
push
mov
inc
enter
pop
ins
sub
or
ficom
add
cmp
mov
push
lahf
div
add
not
dec
arpl
ret
pop
jmp
inc
xor
mov
aad
mov
and
pop
adc
jmp
(bad)
test
lahf
fmul
aad
mov
scas
and
dec
add
test
or
add
iret
dec
repz
dec
jle
mov
push
sbb
push
ffreep
jnp
jno
dec
les
cmc
aas
xchg
cmp
or
sbb
mov
and
fwait
pop
ins
or
in
lahf
fidivr
or
cmp
movs
cdq
or
xchg
mov
outs
dec
lahf
jnp
mov
inc
(bad)
rcr
xchg
xchg
jne
xchg
shl
mov
in
ins
shr
jle
adc
mov
scas
sub
jns
pushf
cdq
push
push
sbb
jmp
test
call
pop
int3
lock
out
or
aam
stos
call
add
xchg
fild
ins
loopne
je
mov
jmp
pop
ss
mov
cmp
rcr
mov
mov
pop
mov
pop
ret
gs
in
adc
test
jno
add
and
pop
sahf
adc
inc
pop
mov
mov
jns
data16
xchg
retf
adc
xchg
retf
sti
xlat
call
xchg
inc
mov
pop
div
and
popf
mov
jl
in
rcl
pop
outs
xchg
call
(bad)
fs
inc
nop
jno
popa
cmp
daa
lahf
shl
push
inc
jae
push
lods
repz
sbb
push
in
fst
inc
movs
pop
in
xchg
push
dec
repnz
shr
or
lock
cmc
sub
add
add
retf
push
jmp
cmp
ret
mov
shr
test
rcr
jno
aam
dec
enter
(bad)
test
pusha
mov
retf
adc
mov
inc
jle
lock
daa
mov
into
push
or
push
or
iret
mov
int
xor
jl
sbb
clc
jno
add
fwait
(bad)
mov
jo
adc
dec
and
mov
enter
enter
add
jne
outs
or
jl
xor
push
inc
repz
add
and
cmc
push
icebp
dec
fincstp
mov
imul
add
mov
mov
into
mov
sti
add
push
lods
pop
int
jb
(bad)
mov
jne
sub
cwde
mov
adc
ret
add
pop
xlat
test
xchg
mov
jbe
dec
xchg
jbe
dec
fbstp
lods
sti
into
cwde
push
or
xor
lods
pop
mov
ins
inc
lock
push
lock
adc
mov
adc
mov
cdq
es
and
fstp
outs
ss
ja
dec
loopne
xchg
(bad)
and
sub
ds
repnz
jl
mov
push
cmp
and
push
ins
mov
cmp
sbb
adc
add
xchg
adc
add
mov
das
(bad)
sub
cmp
adc
xor
es
sub
adc
pop
hlt
sahf
or
movs
sbb
rcl
sbb
clc
std
xor
push
pop
cwde
test
xchg
daa
mov
in
xchg
jne
ja
cmp
push
test
xchg
pusha
movs
call
cmp
add
(bad)
cdq
ins
xchg
sbb
dec
rol
ficom
cmps
ins
das
cmp
icebp
imul
outs
xchg
adc
mov
or
adc
dec
fisub
pop
test
scas
dec
aad
xor
mov
adc
icebp
inc
popf
push
xor
pop
xlat
enter
aad
iret
cmp
push
aas
retf
or
cmp
jl
lds
clc
ss
inc
cli
add
and
in
jg
inc
sbb
dec
push
jno
call
sbb
int3
shl
or
div
lea
dec
dec
mov
(bad)
or
ins
test
pop
pop
push
(bad)
std
jno
(bad)
hlt
arpl
sub
and
mov
sub
clc
mov
stos
jnp
push
jmp
or
pop
ja
ins
add
pop
sub
data16
fs
pop
lods
(bad)
sbb
jle
popa
push
pushf
xchg
pop
jbe
in
add
add
adc
mov
sbb
mov
inc
hlt
pop
sar
mov
inc
xchg
mov
sbb
(bad)
mov
xor
not
fsubr
into
shr
jne
lds
add
adc
into
or
ja
pop
jbe
pop
sar
pop
mov
pusha
mov
xchg
stc
repz
cs
fsubrp
mov
stc
and
mov
sbb
jp
jno
sbb
ins
les
sbb
sbb
in
int3
sbb
cdq
js
das
in
test
cmps
(bad)
pop
lods
shr
add
xor
jmp
cmp
add
loopne
lahf
out
push
daa
sar
mov
stos
pushf
imul
or
jbe
sub
and
out
and
push
pop
icebp
mov
dec
push
sub
or
pop
and
mov
xchg
pop
call
sub
inc
test
shr
and
xchg
mov
rcl
int
enter
imul
adc
xchg
lods
lock
ficom
push
daa
inc
jmp
mov
scas
pop
sub
stos
fisttp
or
imul
sar
test
out
xrelease
mov
jae
call
cld
bound
jne
and
push
sti
div
sub
mov
xchg
dec
nop
retf
inc
mov
clc
neg
lods
pushf
mov
fld
stos
das
movs
fnstenv
scas
inc
pushf
stc
mov
adc
pop
inc
in
dec
mov
std
cmp
mov
mov
ja
cmps
loopne
xor
stos
sub
fst
loopne
pop
arpl
mov
mov
pushf
dec
(bad)
in
in
adc
ins
ror
(bad)
lahf
mov
test
mov
in
cmp
sbb
cmp
mov
push
fdiv
loop
(bad)
sub
popf
add
and
test
nop
xchg
mov
xor
pop
in
mov
sub
ror
pushf
frstor
pop
xchg
das
pop
push
and
ins
adc
call
push
or
inc
es
test
jnp
aas
inc
xchg
cs
inc
arpl
dec
jno
xor
mov
or
aad
loope
(bad)
in
test
pop
lods
mov
imul
mov
mov
test
xor
cmp
retf
and
inc
not
inc
mov
xchg
or
clc
mov
and
leave
pop
ja
cwde
movs
add
ficom
add
add
push
stc
std
xchg
popf
loope
xchg
dec
cmp
loopne
push
mov
mov
or
pop
pop
movs
mov
add
and
sub
or
sbb
cmps
push
push
jbe
loopne
in
lock
in
fld
pop
dec
pop
imul
or
pop
test
pop
stc
fistp
aad
push
pop
push
sbb
sti
aam
xchg
jb
xor
xchg
test
xchg
xchg
je
ja
(bad)
dec
fisub
or
inc
xchg
out
(bad)
adc
push
lea
popf
aaa
add
mov
popa
sub
cmp
(bad)
adc
enter
mov
loope
mov
(bad)
xchg
int3
lods
(bad)
ss
cdq
jle
or
inc
sahf
in
sahf
dec
stos
ret
jmp
setnp
pop
stos
dec
outs
das
in
sub
add
add
movs
mov
stos
cmp
pusha
in
and
push
call
lea
cli
xchg
stos
mov
movs
imul
iret
pop
inc
cdq
dec
push
pop
jmp
mov
push
mov
int
div
xor
jmp
in
cmps
jbe
je
sub
(bad)
sbb
and
xchg
push
xchg
ds
mov
and
pop
ins
mov
push
pusha
out
pop
cmp
sub
adc
adc
cs
mov
popa
cmp
xchg
repz
retf
dec
stc
std
fsubr
dec
imul
xchg
adc
(bad)
sub
std
iret
aad
xor
sbb
mov
fs
fimul
ret
xchg
out
xor
call
push
rcl
scas
and
push
sbb
or
inc
leave
add
aaa
(bad)
shl
fistp
adc
ret
cmp
and
jns
pop
dec
cmp
xchg
dec
add
mov
test
or
repnz
jno
jnp
xor
sbb
lock
outs
sub
pusha
fstp
idiv
jg
mov
dec
add
std
push
into
xchg
dec
jne
add
rcr
jne
mov
sbb
data16
int
push
inc
mov
pop
xchg
dec
movs
ss
xor
popa
dec
std
enter
popa
jo
xor
mov
test
jne
gs
jl
in
dec
mov
mov
push
or
pop
jmp
adc
mov
cmc
sbb
(bad)
mul
mov
imul
inc
(bad)
jo
cdq
jmp
outs
popa
inc
sti
into
loope
dec
cmp
mov
mov
adc
lahf
loopne
adc
xor
mov
into
fld
(bad)
into
in
dec
sbb
mov
jecxz
es
neg
inc
loope
mov
stc
sub
push
stos
sbb
dec
ror
shl
inc
aaa
and
mov
pop
lahf
popa
adc
imul
mov
pushf
(bad)
cmp
sahf
arpl
sbb
sbb
pop
add
cdq
mov
sahf
mov
outs
xor
cdq
push
lods
in
xchg
cld
pop
pop
xchg
push
aam
cmc
ret
and
shl
push
or
push
cwde
jmp
and
mov
ins
or
enter
lods
and
stc
in
xlat
cmp
push
add
lahf
mov
(bad)
adc
jo
sti
ins
adc
popa
and
in
xor
mov
out
test
and
lahf
enter
xchg
and
ret
pop
push
add
add
icebp
imul
loope
(bad)
push
dec
sbb
retf
pop
mov
pop
dec
call
push
fisub
inc
test
lods
retf
mov
aad
das
dec
add
sbb
les
mov
lahf
lea
add
and
mov
out
and
mov
cmp
add
xor
jg
out
and
ins
jnp
pop
cmp
sar
mov
sub
in
mov
js
cld
popf
call
cmps
pop
out
(bad)
pop
cmps
and
int
dec
dec
hlt
inc
lea
arpl
fiadd
mov
ins
pop
test
jae
lea
add
jnp
mov
sahf
inc
call
jno
pushaw
addr16
pop
(bad)
cmp
inc
enter
das
jno
(bad)
cld
mov
into
je
dec
loope
out
sub
sub
adc
dec
xchg
aad
cmps
mov
cmc
cmp
adc
push
in
dec
ds
test
ss
push
int3
adc
jnp
push
fadd
cmp
aas
cdq
adc
add
sbb
js
xor
mov
mov
loop
aas
call
xchg
cmps
push
pop
adc
clc
push
push
stc
ins
loop
push
cli
dec
xchg
inc
rcl
out
mov
inc
lods
icebp
jns
jg
push
sahf
stos
dec
pop
cdq
std
sbb
sbb
pop
pop
adc
mov
and
inc
mov
inc
enter
out
test
jmp
(bad)
jle
ja
push
add
fs
sub
repz
out
mov
xchg
clc
mov
fisttp
nop
and
dec
and
inc
pop
vcvtpd2ps
cmc
push
jl
pusha
test
daa
mov
pop
push
add
call
cdq
pop
and
jno
and
pop
cmc
pop
xor
push
mov
xchg
repnz
sti
and
fsubp
xchg
lods
and
fsub
cli
movs
jbe
add
popa
push
mov
add
pop
nop
mov
lahf
or
hlt
jmp
push
shl
mov
xchg
pop
outs
fsubr
xor
adc
xchg
push
aad
jmp
outs
fld
xor
inc
popf
add
pop
in
ins
aas
test
xchg
outs
mov
out
inc
test
loop
daa
test
(bad)
rcr
push
push
scas
mov
cdq
or
push
add
movaps
fisub
int
fsub
xor
pop
out
ja
xor
cmps
jp
sahf
mov
mov
pop
test
jle
in
fsubr
xchg
mov
sar
mov
xor
das
gs
mov
cwde
scas
in
dec
jne
jge
hlt
test
mov
aad
aam
popa
and
sbb
and
push
or
stos
js
in
(bad)
cmp
ja
pusha
(bad)
in
add
sbb
push
retf
outs
lahf
(bad)
inc
out
mov
cs
and
xor
sbb
push
jnp
mov
outs
neg
mov
neg
aam
pop
xor
mov
call
lea
mov
imul
push
shr
push
lods
retf
ja
test
sahf
fsub
adc
xor
cmp
pop
adc
shr
sbb
in
test
fcmovnu
retf
xchg
popf
jg
loope
in
fld
repz
imul
push
ret
loopne
mov
scas
pop
sbb
jge
xchg
or
bound
in
or
adc
mov
pop
dec
inc
inc
and
(bad)
lock
pop
ins
lods
sbb
jg
mov
jns
out
inc
imul
pop
push
lea
pop
add
fdiv
inc
jmp
adc
mov
cmp
mov
push
jns
mov
mov
imul
mov
mov
out
inc
cmp
in
repnz
fwait
ins
jmp
imul
rol
in
sub
xchg
inc
jbe
std
inc
pop
in
popf
pop
lods
inc
shl
push
pop
loope
jmp
cwde
(bad)
imul
repnz
xrelease
stc
stos
push
mov
fadd
pop
cmc
out
xchg
mov
or
push
and
push
pop
sbb
test
je
arpl
mov
inc
sub
loopne
and
mov
popa
clc
js
ja
pop
out
sub
pop
xchg
dec
inc
hlt
and
cmps
xlat
or
not
movs
aad
inc
clc
fst
enter
lea
dec
xchg
or
retf
pop
xor
out
pop
test
jbe
loopne
push
fldcw
fsubr
nop
inc
(bad)
cdq
mov
xor
cmp
lea
cld
call
call
sub
mov
lods
adc
inc
test
shl
bound
call
inc
adc
call
arpl
cld
mov
mov
dec
lock
gs
mov
push
ja
mov
push
cmc
es
push
fld
jecxz
nop
cdq
dec
fnsave
push
les
pop
test
not
lahf
cmp
pop
jns
ffreep
(bad)
ret
nop
sbb
rcr
aam
mov
pushf
inc
rcr
neg
retf
mov
cmp
or
cmp
mov
xor
dec
xchg
adc
fs
sbb
xlat
cmps
sbb
sbb
xlat
pop
mov
cmp
mov
pop
or
movs
and
dec
pop
adc
and
je
inc
mov
mov
mov
sbb
xchg
mov
mov
inc
shl
push
push
movs
mov
jecxz
jl
jno
add
call
xchg
cmp
in
adc
sub
lods
test
aaa
xor
cmc
ja
mov
ret
cli
fistp
mov
int3
fst
add
daa
in
add
sbb
mov
sahf
mov
aad
loopne
or
cmc
mov
adc
push
mov
add
jp
jne
sub
(bad)
int3
and
mov
sti
adc
cmp
mov
sbb
ins
xchg
cmp
mov
aaa
cmp
ret
cli
cmp
cwde
inc
(bad)
(bad)
adc
movs
push
push
inc
cmps
add
sub
outs
adc
popa
inc
js
sub
sbb
push
inc
sbb
repz
retf
out
popa
lods
jo
pop
cdq
sub
arpl
movs
ins
jmp
cld
ret
mov
movs
mov
push
popf
push
xchg
inc
rcl
xor
push
xor
inc
repz
push
xchg
sbb
sub
nop
jmp
cdq
inc
jl
(bad)
xchg
retf
or
rol
inc
ja
fild
dec
push
xchg
lds
and
push
adc
scas
inc
sahf
fsub
out
outs
in
mov
into
pop
fsub
out
sbb
sbb
mov
test
(bad)
cld
aaa
movs
es
iret
push
pop
sbb
jo
or
xor
mov
(bad)
xor
jb
xor
ins
and
aas
leave
sbb
mov
push
call
mov
stos
test
mov
stos
call
ror
sub
pushf
mul
mov
les
es
cwde
(bad)
ins
sbb
inc
xchg
retf
add
rol
and
aad
jp
ss
shr
jmp
dec
fcom
push
mov
sbb
mov
cmp
popf
aas
inc
inc
inc
mov
cmp
ja
daa
add
test
mov
sbb
ja
fwait
dec
into
div
push
mov
pop
repz
repnz
add
cmp
cmp
push
ror
mov
enter
aam
dec
iret
iret
adc
imul
mov
fcom
or
jo
std
pusha
(bad)
dec
mov
in
imul
ret
retf
sbb
icebp
and
push
jp
add
sub
sub
inc
mov
cwde
or
enter
mov
enter
cwde
inc
xor
sub
mov
add
(bad)
cmc
or
push
mov
xlat
push
mov
lods
loope
ret
cdq
aaa
inc
xor
test
inc
xchg
sar
(bad)
fidiv
or
xchg
(bad)
stc
sub
jecxz
adc
inc
pop
push
sub
and
mov
xlat
add
dec
retf
push
pop
pop
push
sub
inc
and
fnstsw
mov
sbb
dec
std
cmc
mov
dec
jnp
das
and
arpl
xchg
mov
mov
xor
ss
pop
sub
test
or
out
or
jmp
scas
mov
aaa
in
imul
or
jno
scas
scas
sbb
ret
movs
in
repnz
xor
inc
jnp
stos
or
adc
sti
mov
mov
ja
movzx
outs
jns
mov
or
inc
(bad)
fmul
mov
enter
adc
cmc
cdq
repz
dec
(bad)
mov
jg
rcr
adc
xor
inc
sub
push
daa
sbb
add
cmp
popf
add
jb
pop
sub
cld
fimul
adc
sub
xor
cwde
inc
rcl
cmp
cmp
dec
hlt
push
sbb
mov
lea
and
push
pop
test
or
ss
pop
add
xor
out
pop
and
mov
out
dec
rcl
and
in
mov
or
in
mov
outs
sub
jne
movs
mov
xlat
in
mov
jg
pop
jne
imul
les
daa
push
xchg
xchg
gs
(bad)
(bad)
mov
mov
xor
sub
dec
lods
xor
lea
xor
and
retf
cli
dec
adc
outs
add
stos
xchg
dec
sub
inc
and
cmps
loope
cpuid
sub
sahf
stos
call
cld
sub
addr16
neg
cld
sub
cmps
hlt
xchg
push
ins
cmp
and
adc
xchg
pop
sar
fsub
sub
push
jb
clc
mov
push
mov
inc
loopne
std
push
(bad)
imul
in
test
outs
mov
inc
out
les
pop
mov
fs
or
les
mov
mov
pushw
imul
push
outs
dec
fstp
ins
cwde
and
fs
test
dec
inc
jo
cmp
xor
mov
sub
das
push
mov
mov
imul
cmps
sub
sub
stos
daa
aaa
sbb
xor
mov
jmp
pop
(bad)
call
repnz
fist
das
push
pop
push
das
dec
inc
mov
lock
and
adc
dec
std
jge
movs
lahf
ins
ficomp
cmp
dec
sub
adc
push
adc
in
mov
and
mov
aad
jns
pop
movs
fsub
les
test
nop
icebp
mov
(bad)
fwait
sbb
xchg
sub
mov
cmp
stos
in
ficom
sub
fs
fadd
shl
lods
arpl
mov
xchg
adc
outs
mov
movs
mov
mov
inc
cld
mov
jmp
mov
icebp
mov
out
adc
push
and
fstp
xor
push
dec
js
pop
add
popa
dec
in
push
(bad)
pop
fsubp
js
cmc
mov
imul
loopne
lahf
fwait
push
shr
popa
stc
mov
scas
(bad)
sti
or
pop
outs
mov
or
sbb
xchg
out
outs
dec
mov
shr
loope
int
pop
rcl
push
hlt
mov
push
mov
scas
jae
jmp
arpl
dec
or
sub
push
test
adc
lods
mov
add
not
or
xchg
sub
ror
cmc
xor
ja
into
pop
loop
aam
loop
dec
ret
cmp
enter
hlt
pusha
or
sbb
imul
fsubr
push
les
xor
adc
xor
stos
inc
mov
cmp
pop
sub
cmp
loopne
dec
inc
aad
test
inc
popa
int3
mov
adc
or
add
mov
std
fsub
xchg
or
sub
call
lahf
shr
push
lods
adc
inc
pusha
and
shr
in
pop
xchg
out
movs
jecxz
fwait
iret
xchg
cmp
movlhps
retf
xchg
add
es
fcomp
and
mov
pusha
sub
aad
dec
adc
dec
fs
xchg
xor
jmp
jge
call
xor
jne
pop
xchg
fwait
mov
push
add
stos
imul
je
push
ficomp
iret
call
xor
mov
loopne
and
jo
and
mov
mov
in
(bad)
mov
lods
jl
dec
push
enter
adc
(bad)
popf
sub
jge
imul
lods
push
jle
push
test
dec
jbe
jge
mov
aaa
push
adc
gs
dec
js
xor
lds
mov
dec
fist
repz
mov
sbb
rcr
inc
or
mov
inc
push
clc
adc
sub
mov
mov
in
pop
sub
or
jp
add
mul
retf
dec
cdq
out
(bad)
jne
mov
push
scas
pextrw
sub
aad
gs
dec
or
cmp
ret
add
add
das
cmp
push
ins
fnsave
mov
(bad)
sbb
clc
xor
imul
xchg
clc
and
sub
loop
bound
mov
sbb
dec
lahf
sub
nop
xlat
popf
cld
mov
inc
stc
xchg
xor
mov
dec
cmp
xor
mov
add
xchg
pop
or
xchg
jno
cmp
retf
fist
fmul
pop
or
push
xchg
pop
push
sbb
shl
pop
jne
movs
call
pop
enter
jl
retf
rcr
hlt
jl
imul
mov
(bad)
cmp
xor
test
enter
xor
fnstcw
mov
jae
repz
mov
std
dec
mov
push
mov
push
(bad)
enter
mov
aad
add
dec
imul
mov
hlt
scas
dec
jnp
add
adc
inc
cli
rcl
xor
xchg
add
push
out
enter
call
dec
outs
jg
mov
adc
jno
adc
mov
push
adc
je
(bad)
sbb
fs
outs
shl
outs
mov
popa
das
aas
or
mov
mov
ja
in
shl
mov
stc
mov
mov
sbb
in
pop
aaa
scas
jp
xor
les
mov
retf
test
loope
pop
add
jmp
add
sbb
xchg
or
nop
dec
mov
addr16
sti
loopne
xchg
scas
stc
or
ja
in
rol
int3
push
push
(bad)
adc
add
cwde
or
sub
mov
sbb
fwait
popa
js
push
sahf
(bad)
cmps
pop
push
mov
fdiv
inc
pop
dec
(bad)
mov
jmp
dec
mov
adc
jp
jmp
popf
xchg
dec
inc
in
les
dec
dec
fidivr
mov
in
shl
inc
aas
inc
mov
push
fdiv
and
sub
push
pushf
loop
movs
jae
lahf
call
cmp
add
out
jp
mov
fisttp
retf
and
cmp
stos
rcr
shl
ret
sbb
cld
jnp
js
pop
or
cmc
sub
mov
dec
jecxz
leave
rol
lds
jmp
stos
push
icebp
test
push
sti
add
les
push
adc
imul
dec
mov
jae
jmp
pop
or
stos
cwde
test
clc
sbb
je
sti
leave
dec
mov
and
test
dec
push
sub
add
mov
shl
and
sub
jo
scas
ds
xor
ret
pusha
mov
mov
pop
cmp
or
or
jae
xor
scas
mov
fsub
push
imul
add
mov
aam
out
aas
das
fcmovne
pop
push
fisub
inc
pop
sbb
dec
call
aaa
or
ss
sub
mul
call
jmp
cmps
inc
in
pop
mov
mov
jbe
push
mov
imul
retf
jecxz
jne
lods
sub
push
dec
mov
mov
jle
pop
in
int3
std
cmp
sti
aaa
in
inc
and
adc
inc
add
aad
call
ja
int
into
clc
fwait
mov
pop
jmp
pop
add
mov
cli
mov
cmp
mov
jmp
mov
mov
fcomp
je
aaa
pop
icebp
call
push
enter
mov
shl
sub
cmps
adc
push
test
or
sbb
pop
push
popa
jl
mov
clc
stos
mov
fiadd
cmp
out
retf
or
cwde
push
imul
sub
fisub
fld
sbb
add
arpl
stos
data16
sub
pusha
jecxz
pop
xchg
fsubr
cmp
sub
and
jnp
iret
lea
out
push
adc
test
pop
mov
mov
jnp
out
sbb
pop
push
fwait
(bad)
dec
sti
pop
xchg
add
mov
pop
in
retf
dec
in
rol
shl
adc
aam
or
mov
xchg
imul
jp
test
rcr
jns
loopne
ds
hlt
iret
les
push
and
(bad)
fstp
loopne
mov
push
xchg
mov
daa
inc
sti
das
xchg
or
jl
rcl
bnd
dec
mov
push
leavew
push
stc
mov
pop
sub
push
dec
add
scas
push
adc
or
push
mov
fsub
out
xlat
or
mov
mov
jnp
icebp
fs
mov
hlt
lahf
mov
pushf
nop
stc
leave
ins
and
push
aaa
aam
lods
mov
and
(bad)
pop
inc
jo
outs
mov
push
mov
jb
test
shl
ins
xchg
lea
rcr
lahf
sbb
aam
enter
and
sub
mov
xchg
push
lods
xor
cld
aad
es
stos
cs
mov
push
js
repnz
div
retf
add
adc
std
mov
mov
jae
mov
ins
clc
adc
into
xor
leave
cwde
in
mov
mov
xor
fwait
leave
call
call
sbb
xchg
mov
xor
dec
push
mov
jo
clc
loope
cmp
push
gs
sbb
lahf
fimul
inc
sbb
jp
aam
fldcw
in
mov
sti
icebp
ss
imul
mov
inc
jo
test
int
xor
push
mov
popf
mov
mov
cdq
pop
cmp
dec
pushf
stos
in
pop
pop
sbb
mov
jmp
jno
fisub
mov
adc
or
mov
dec
imul
int
and
xchg
adc
jns
or
loop
sbb
and
fucomip
movs
pop
mov
arpl
mov
fwait
(bad)
cli
push
sti
dec
push
jb
out
and
cs
loope
inc
es
cmp
inc
mov
scas
jle
js
cdq
stos
push
fidiv
mov
iret
cwde
inc
pop
shr
and
xchg
fcomp
adc
dec
iret
jnp
cld
int
into
(bad)
stos
imul
aaa
push
enter
push
lds
sbb
cli
pop
mov
and
inc
test
xchg
jmp
mov
mov
inc
fist
push
(bad)
mov
rol
mov
jg
sub
pop
add
loop
xchg
(bad)
(bad)
das
rcl
arpl
movs
xor
int
dec
mov
adc
xchg
pop
sti
pop
int3
clc
retf
iret
loop
out
push
xchg
out
xlat
xchg
cmp
ins
mov
out
outs
xor
sub
test
int3
hlt
sub
les
adc
mov
inc
cmp
rol
jns
cwde
jbe
cmc
jns
jmp
mov
push
pop
xchg
push
cmps
push
rcl
push
pop
test
sub
stc
cmp
sti
out
inc
cdq
sbb
les
popf
int3
xor
push
mov
push
or
add
data16
xor
scas
inc
and
repnz
(bad)
or
push
lods
pop
push
xlat
or
(bad)
dec
xor
test
mov
cmp
add
xchg
aaa
outs
out
repnz
push
cmps
(bad)
shl
ret
and
fbld
pop
jnp
cdq
into
fnstsw
shr
inc
sub
push
mov
and
rcl
pop
and
int
pop
xchg
not
mov
add
xor
stos
in
and
and
mov
nop
mov
mov
aaa
fs
and
test
fcmovnu
sub
xlat
sbb
push
or
cli
(bad)
xchg
push
push
stc
std
xor
popa
mov
xor
push
sti
(bad)
js
xchg
lock
add
mov
jns
mov
mul
xor
dec
nop
inc
mov
(bad)
cs
test
xchg
jmpw
loope
loopne
in
jmp
jno
cli
stc
push
or
bound
fidiv
js
test
(bad)
enter
jecxz
mov
pop
test
xchg
push
adc
cmp
rol
scas
ror
shl
jno
pop
xor
dec
dec
popf
loop
pop
pop
add
scas
xor
sbb
repz
add
repnz
test
out
mov
mov
lds
(bad)
cmp
call
jbe
sbb
push
xchg
sbb
push
pop
sti
jmp
sub
stos
mov
adc
in
cmps
dec
push
xor
mov
mov
xor
mov
pusha
std
add
push
pop
retf
mov
inc
dec
cwde
test
inc
repz
test
test
retf
and
add
jecxz
hlt
outs
sbb
add
ret
arpl
popa
add
push
xchg
inc
inc
call
pop
push
jl
or
das
sbb
leave
ja
(bad)
aas
int3
(bad)
stc
lods
jmp
retf
sub
inc
inc
in
iret
lahf
stos
sbb
adc
jp
push
push
jbe
pop
and
mov
sub
leave
rcl
lods
out
pop
ficomp
in
push
adc
(bad)
stc
call
inc
div
sti
scas
nop
push
cmps
pop
dec
xchg
aaa
mov
sete
and
dec
(bad)
jg
ret
pop
or
adc
inc
repz
stos
inc
iret
call
dec
mov
test
out
jae
mov
out
push
sub
mov
add
mov
in
fdivrp
jnp
test
push
outs
sub
outs
mov
ret
int3
fld
adc
scas
jmp
fwait
pop
fsubr
dec
test
jl
xor
jo
retf
sbb
in
scas
(bad)
adc
into
loop
fmul
add
in
fs
int
leave
or
stc
aas
ins
imul
pusha
mov
and
xlat
adc
pop
arpl
add
mov
test
into
iret
jmp
mov
(bad)
aam
pushf
imul
push
xor
push
mov
add
cmp
mov
jg
fisubr
cmp
jg
je
das
push
cmp
cmp
nop
dec
jge
jns
adc
sub
mov
fidivr
out
sbb
popf
mov
cli
pop
aam
mov
and
push
ins
rcl
loop
shl
fwait
iret
aam
sbb
movsx
les
loop
out
xchg
sbb
mov
inc
adc
and
dec
rol
adc
dec
sbb
jo
call
cwde
pop
push
call
push
icebp
push
inc
cmp
or
dec
test
jae
(bad)
and
or
popa
fadd
xor
add
jno
into
pop
test
push
sub
out
sub
sub
push
cmps
sbb
mov
test
inc
xlat
iret
popa
iret
cmps
stos
dec
sar
cmps
mov
adc
pop
push
cmp
out
lds
test
test
sar
ffree
movs
mov
mov
pop
iret
dec
add
xor
pop
sbb
mov
ss
xchg
imul
xchg
int
retf
jmp
mov
lds
(bad)
stc
movs
sti
out
pop
sti
inc
addr16
retf
test
movs
mov
scas
push
or
cli
add
(bad)
fsub
jg
ins
push
out
into
pop
test
enter
gs
js
xchg
xor
mov
lock
lods
sub
mov
cmps
out
int
jo
jo
mov
aam
ss
dec
loopne
iret
xchg
mov
je
cmps
cmp
xchg
mov
clc
outs
push
rcl
imul
movs
mov
push
jo
sub
scas
jae
mov
cmp
(bad)
and
pushf
jl
jno
and
pop
or
mov
mov
leave
mov
into
jbe
add
push
mov
popf
cdq
jl
sub
mov
leave
retf
rcr
cmp
jns
push
test
(bad)
(bad)
popf
ret
mov
and
retf
jecxz
fstp
sar
sub
popa
sub
mov
sahf
std
jg
push
cmp
mul
mov
idiv
pop
inc
mov
dec
nop
mov
test
ficom
shl
jecxz
std
and
xchg
call
shr
mov
sbb
pop
inc
cmp
mov
add
jmp
scas
jo
addr16
mov
add
jbe
pop
retf
dec
fcom
dec
sub
add
lds
dec
xor
push
leave
aaa
aas
mov
shl
mov
or
ret
adc
mov
loop
aaa
cwde
stos
adc
call
(bad)
xor
jns
cwde
mov
push
es
mov
daa
jg
xchg
test
icebp
sub
xor
retf
in
nop
aas
xchg
pop
fisub
push
int
lahf
and
inc
lock
outs
cmps
pop
int3
lock
pop
jne
mov
mov
outs
jecxz
jge
cdq
call
call
cdq
test
stc
(bad)
mov
adc
cmp
rol
gs
ins
mov
loopne
dec
hlt
jge
mov
jne
mov
xor
xor
pop
inc
js
and
fisub
jo
adc
leave
jmp
retf
fwait
push
std
aas
or
mul
test
gs
arpl
and
push
jnp
xor
or
fstp
aam
aaa
pop
popf
fwait
(bad)
mov
sbb
mov
std
cmps
or
and
(bad)
cdq
hlt
enter
call
icebp
das
xchg
jmp
pop
out
cmp
loopne
and
repnz
hlt
ja
xor
test
fild
jbe
test
jmp
call
dec
lods
addr16
mov
jg
jl
mov
sbb
adc
fucom
cmp
lahf
mov
lea
sti
cs
add
dec
fmul
dec
(bad)
pop
shl
mov
xor
pushf
or
nop
jle
ins
jecxz
das
and
daa
les
lods
aad
imul
div
mov
push
loop
movs
out
lods
sbb
int
lea
adc
fidivr
dec
retf
out
and
inc
pop
adc
sahf
shr
(bad)
adc
imul
jmp
dec
cmp
(bad)
mov
jmp
jge
sbb
into
retf
stos
xor
das
mov
sbb
sbb
lods
enter
pushf
jne
adc
outs
aaa
cs
xchg
ficom
retf
in
jg
ret
push
sti
shr
outs
call
xchg
shr
paddq
and
mov
std
das
sbb
fist
sbb
jnp
push
jbe
lahf
test
test
shr
push
cwde
pushf
mov
(bad)
call
ror
mov
fadd
imul
mov
shr
sbb
mov
mov
scas
or
imul
push
fld
adc
js
xchg
mov
test
sub
push
aas
xor
xchg
and
popa
or
sar
pop
mov
or
ret
(bad)
out
xor
or
int3
jp
out
(bad)
push
call
mov
mov
mov
jo
cmp
cs
es
mov
retf
fsubrp
les
int
dec
mov
sub
mov
xchg
loopne
mov
and
imul
xchg
xchg
scas
fcmovbe
mov
retf
sbb
adc
cmp
or
setns
dec
outs
push
and
mov
xlat
mov
and
xor
xor
lahf
push
es
sbb
mov
add
fsub
mov
scas
leave
xchg
jne
es
aaa
sub
sub
outs
data16
std
add
mov
rcl
jg
cmp
jl
push
or
cmp
jmp
es
mov
pop
mov
dec
ret
mov
push
shl
push
mov
shr
pop
xchg
add
sub
or
cmp
fs
xor
sub
fcomp
mov
stc
adc
push
dec
xor
xor
in
xor
(bad)
push
sub
(bad)
stc
jns
jne
(bad)
cmp
cli
test
out
sub
loope
mov
call
and
les
mov
das
sub
pop
and
fsub
xor
mov
or
mov
jne
jo
stos
xchg
mov
call
xchg
mov
dec
push
mov
fmul
aam
mov
loope
mov
add
inc
(bad)
mov
int
jae
jnp
mov
or
(bad)
pop
cmp
outs
add
push
ja
imul
(bad)
pop
in
clc
push
iret
fst
xor
xchg
int3
or
mov
data16
jl
mov
mov
outs
addr16
shr
in
and
adc
mov
test
mov
push
es
mov
pop
mov
das
(bad)
hlt
pop
and
mov
mov
popf
pushf
cli
sub
sahf
(bad)
pop
xchg
icebp
pop
inc
fsubrp
movs
sub
mov
(bad)
dec
dec
test
mov
(bad)
int3
or
jg
sbb
retf
retf
add
popa
stc
sub
push
cdq
lock
pop
aaa
cmps
outs
pop
and
lahf
mov
mov
dec
dec
mov
mov
mov
or
aam
leave
mov
out
add
lahf
outs
call
mov
xor
shl
rcr
sbb
test
retf
xchg
into
push
or
cmp
std
sub
xchg
test
sahf
mov
inc
jmp
dec
ret
aam
rcl
and
mov
add
mov
popf
pop
dec
pusha
call
ja
ins
mov
aas
and
sbb
mov
out
retf
mov
into
ret
ficom
maxps
out
ror
ret
call
pop
ss
mov
cmp
int3
out
std
mov
xchg
pop
dec
call
movs
mov
test
xchg
cmp
jnp
dec
aam
sub
bound
pop
rol
mov
dec
cli
or
xchg
mov
dec
scas
and
jno
adc
cmp
xor
imul
shl
sbb
in
repnz
mov
dec
cmp
fild
repnz
or
mov
outs
aas
mov
outs
shl
lods
add
ss
inc
rcr
xor
wbinvd
int
repnz
mov
(bad)
ret
jecxz
out
xor
push
or
aad
lea
push
add
jp
stc
xchg
inc
inc
adc
mov
adc
cmc
cld
xor
xchg
pop
cmp
dec
daa
icebp
push
mov
js
lods
push
fs
test
stos
sub
add
ins
daa
fstp
pop
outs
lods
shr
in
add
mov
or
es
cmp
nop
jbe
xor
(bad)
shr
mov
dec
fild
cmp
mov
ret
loop
push
jne
pusha
jge
retf
sub
adc
mov
(bad)
mov
jg
aad
jmp
or
inc
fcmovnbe
jb
vpsubd
xchg
(bad)
mov
rol
mov
xchg
cli
cmps
out
je
xor
std
jmp
or
xor
xchg
sub
xor
cmc
and
sbb
mov
add
mov
jmp
adc
dec
cmp
pop
jge
out
mov
jno
or
mov
ins
sbb
js
test
ror
fimul
xchg
sbb
pop
or
cdq
xchg
imul
popf
sbb
std
push
adc
sub
fs
(bad)
sub
dec
pop
ss
loopne
cmp
mov
fdivr
fcomp
or
into
mov
jmp
fnstenv
pusha
xlat
rol
cmp
ss
jge
lahf
cmc
and
cmps
push
add
sub
inc
mov
jle
in
sbb
or
inc
and
sub
add
test
inc
mov
inc
je
adc
loope
adc
sti
out
xchg
mov
std
push
imul
movs
jle
xlat
jbe
lods
int3
fmul
(bad)
call
and
cmp
leave
int3
mov
sbb
movs
xor
rcl
push
pop
dec
xlat
popf
movs
stc
add
dec
cmps
mov
cmp
push
stos
jb
sbb
test
or
xor
jl
xchg
cmps
int
add
loop
(bad)
les
mov
inc
and
shl
pop
arpl
inc
push
cmp
or
pop
xchg
in
aas
inc
jmp
mov
pushf
cdq
xchg
es
cmp
(bad)
and
into
sub
ins
into
cs
and
and
pushf
dec
ins
mov
call
inc
and
in
outs
push
cmp
xchg
das
pop
pop
xor
out
cmp
stc
hlt
and
jne
pop
inc
mov
out
mov
mov
lds
in
pop
or
push
popa
ss
in
pop
mov
jno
jno
and
push
sti
sahf
nop
jmp
or
inc
push
and
ror
das
pop
add
pop
mov
jnp
adc
or
adc
fsub
pop
inc
movnti
jecxz
cmp
rol
sbb
adc
loopne
sti
test
icebp
jnp
pop
jle
outs
jecxz
sti
scas
hlt
fistp
add
scas
(bad)
push
mov
mov
fs
push
sub
dec
inc
(bad)
add
(bad)
arpl
cmc
repnz
push
dec
loopne
sub
mov
aas
mov
jne
xchg
add
daa
sub
dec
sti
xchg
cmp
xchg
dec
loop
mov
inc
out
dec
inc
or
repnz
jmp
jnp
je
stos
lock
aad
xor
pushf
fcmovb
rol
jl
cmp
mov
mov
pop
hlt
lods
icebp
pop
cwde
mov
fimul
mov
retf
inc
addr16
in
bound
mov
retf
ja
push
das
xchg
ins
(bad)
adc
fimul
bound
shl
inc
xor
movs
icebp
repnz
idiv
push
jecxz
push
or
and
mov
inc
sub
xchg
jecxz
sar
xchg
ins
call
mov
in
add
push
xchg
lock
call
push
jle
mov
xchg
xchg
push
retf
repnz
cmp
jecxz
test
mov
fidivr
cmp
cdq
sbb
ins
cdq
push
adc
(bad)
aas
int3
jb
mov
dec
ds
inc
ror
in
cld
cmps
sahf
add
repz
lahf
outs
sbb
sbb
test
mov
mov
in
cld
aas
out
jbe
loopne
sbb
or
les
pop
mov
es
call
cmc
and
(bad)
mov
into
cld
dec
jg
dec
push
inc
lahf
ins
jmp
sbb
sar
std
je
out
jmp
fild
sub
cwde
lahf
test
aam
icebp
mov
(bad)
loopne
sbb
dec
cs
ins
cmp
sub
dec
mov
add
test
mov
adc
pop
cmp
jmp
sub
jb
fild
jno
pop
out
adc
push
fild
lea
add
cs
nop
aaa
push
xor
out
sub
and
mov
and
sar
mov
dec
outs
xchg
adc
(bad)
and
pop
mov
push
jl
in
hlt
daa
sbb
mov
stos
es
mov
je
(bad)
push
leave
push
sbb
xor
jp
cmp
popa
add
(bad)
or
pusha
adc
(bad)
mov
jmp
mov
iret
dec
vminps
pushf
ins
dec
loop
into
pop
fs
sub
mov
pinsrw
pop
jb
cmp
mov
pop
inc
dec
dec
cld
call
rcr
ret
inc
scas
cs
mov
cli
iret
or
mov
rcr
test
das
in
sub
aam
jnp
mov
pop
xor
pop
mov
and
add
hlt
dec
xor
mov
xchg
movs
add
and
ret
outs
adc
loopne
jb
pop
test
xchg
pop
add
push
adc
aad
pop
mov
mov
add
xor
mov
mov
les
imul
sbb
ds
out
push
ins
xor
data16
pop
xchg
mul
pop
cmp
jbe
test
stos
stc
jb
stos
xchg
es
lock
sub
jmp
or
(bad)
push
sub
repnz
das
jl
in
add
in
inc
fsubr
jl
aas
jne
dec
jbe
les
in
inc
xchg
adc
push
push
pop
mov
clc
cmp
jb
iret
and
or
or
inc
in
mov
jmp
inc
inc
dec
inc
cmp
mov
xchg
data16
fsubrp
out
or
rcr
stc
arpl
clc
jae
aam
movs
(bad)
inc
mov
sbb
pop
jb
mov
mov
mov
ret
(bad)
cmp
popa
or
fld
out
addr16
mov
mov
clc
lahf
outs
add
enter
cmp
ds
outs
xchg
xchg
ja
cmp
int
jge
jmp
and
aam
into
sbb
cli
sub
jmp
std
jo
jns
jl
sub
pop
in
test
sbb
inc
mov
call
adc
xor
aaa
aaa
pop
sti
jp
adc
cmps
jb
mov
mov
sbb
add
add
sub
xor
jg
push
sti
dec
test
pop
or
dec
popa
jmp
movs
loop
fnsave
mov
dec
cmp
cdq
push
in
int
outs
(bad)
je
rol
cmps
imul
(bad)
shr
push
mov
or
mov
iret
test
sbb
xlat
jle
sub
mov
push
inc
sub
or
sbb
sbb
dec
test
scas
fs
leave
lock
pop
loope
add
fst
push
push
dec
pop
push
dec
nop
sbb
in
pop
test
add
sub
xchg
sub
test
add
jns
rcl
call
repnz
add
mov
mov
jmp
sub
push
xchg
das
cmc
mov
cmps
xchg
out
mov
sbb
scas
add
push
movs
sub
or
ret
rcl
outs
xor
adc
stos
shr
jbe
aaa
ins
add
cld
lahf
pop
loopne
jg
sahf
stc
xchg
clc
addr16
cs
inc
xchg
movs
pop
mov
out
leave
in
and
xlat
sbb
xor
les
adc
lods
inc
ret
out
lock
cli
pop
fst
jmp
mov
mov
xchg
and
jb
sub
mov
sbb
adc
push
and
repz
fisttp
push
scas
jnp
dec
stc
stc
xor
pushf
inc
xchg
and
test
scas
daa
data16
jp
dec
leave
add
es
xchg
clc
jp
pandn
mov
pop
adc
jle
scas
xlat
mov
out
lock
dec
dec
cmps
jns
push
sub
adc
jle
out
popa
jmp
push
out
lods
(bad)
push
fwait
xchg
dec
ja
mov
lock
add
std
ds
pop
sub
stos
xchg
pop
retf
jns
dec
loopne
add
movs
pop
mov
rol
imul
retf
push
ret
push
jle
sbb
sub
gs
(bad)
push
ret
push
shl
or
and
inc
mov
imul
pop
mov
not
jmp
sub
and
mov
dec
cmps
inc
cwde
xor
cmc
adc
aam
cmps
mov
mov
rcr
lods
or
hlt
and
xor
sti
or
push
jae
stos
sbb
fild
loopne
jecxz
std
lock
jecxz
jp
stos
sub
xor
into
adc
pop
cld
jl
sub
pop
in
sub
call
in
cwde
arpl
por
jae
push
loop
jae
push
aas
nop
aad
mov
stos
das
mov
dec
je
jp
cmps
mov
jmp
mov
iret
mov
add
inc
es
test
ds
ficom
fmulp
pop
hlt
and
adc
and
push
ror
add
cmp
scas
pop
jmp
int3
out
outs
dec
xchg
jmp
fld
and
mov
mov
es
dec
movs
es
leave
adc
into
out
ja
xchg
loopne
inc
pop
inc
int
cmc
ficomp
(bad)
imul
ret
mov
inc
outs
lods
adc
cmp
pop
pop
lea
mov
lods
jmp
shl
push
dec
out
xchg
out
mov
arpl
aad
add
not
xor
mov
loop
loopne
inc
cmp
in
push
gs
mov
mov
imul
fdivr
mov
nop
cmp
out
mov
shr
adc
ret
pushf
(bad)
ret
jle
pop
leave
push
test
arpl
sbb
xor
rcr
repnz
mov
cmp
adc
repz
adc
xor
(bad)
sbb
pop
in
outs
mov
adc
adc
pop
dec
mov
push
mov
scas
inc
pop
adc
test
popa
fstp
push
jmp
cmp
lods
or
in
xchg
xor
test
push
aad
fld
iret
mov
repz
(bad)
imul
mov
jp
cmp
fcom
and
sbb
call
sbb
jmp
movs
nop
into
es
stc
dec
shl
sbb
rol
rcl
fstp
arpl
sub
rcr
cmps
jge
ror
stos
pop
aas
and
lods
xchg
out
repnz
mov
test
fs
cld
mov
shr
stos
test
(bad)
js
test
add
sub
mov
cmps
mov
(bad)
loope
sub
les
shl
inc
das
sti
mov
jmp
das
sub
dec
mov
dec
(bad)
inc
stc
inc
(bad)
call
xchg
repz
fstp
int
stos
dec
dec
fiadd
jne
add
xor
scas
dec
loopne
fstp
pop
dec
jmp
sub
int
movq
cdq
out
jb
or
xor
dec
sub
and
ret
retf
int3
jl
xor
out
test
aad
mov
mov
jns
cld
cs
pusha
out
sbb
lahf
dec
push
fsub
jmp
dec
dec
cli
fcmovnbe
mov
pop
sar
xchg
loop
call
mov
ficomp
jmp
test
xchg
cld
popa
fist
xor
or
xchg
adc
mov
movmskps
dec
in
fadd
pop
mov
dec
xchg
jmp
xchg
inc
popa
sub
push
es
push
xor
popa
fbstp
stc
repnz
xor
loop
jbe
jmp
or
sti
or
sbb
sbb
inc
sub
cmp
daa
shl
lock
fistp
pop
mov
ds
sub
ror
int
clc
sub
pop
rol
xor
jle
jmp
mov
dec
test
sbb
cs
inc
push
lock
jp
hlt
add
dec
mov
icebp
mov
sub
loope
pop
and
pushf
iret
nop
movs
arpl
xchg
out
sbb
mov
test
fcomp
xchg
test
outs
in
mov
sbb
retf
and
and
ja
movs
shl
imul
in
jl
imul
jle
mov
shl
inc
outs
jne
dec
mov
jae
xor
cmps
pop
pop
jne
xor
and
inc
mov
shl
mov
sti
add
push
push
push
mov
sti
imul
clc
dec
repnz
cmp
mov
cdq
mov
sti
pop
nop
retf
xlat
push
jbe
xchg
adc
arpl
or
push
cmp
sbb
jno
test
pop
cmp
cs
and
frstor
in
sbb
xchg
push
cmp
sbb
call
add
jmp
sbb
dec
loop
cmp
dec
jmp
imul
xor
imul
mov
out
imul
inc
aam
add
mov
jnp
daa
mov
ins
mov
pop
adc
jl
pop
inc
jg
xchg
dec
imul
(bad)
sub
clc
fs
pop
into
aam
push
(bad)
cli
enter
rcr
test
test
js
mov
cli
xor
(bad)
clc
adc
jecxz
repz
and
mov
sub
aam
push
iret
inc
mov
pusha
out
xchg
aaa
int
xchg
xor
call
je
pop
fisubr
jl
(bad)
out
outs
fucompp
xchg
cwde
(bad)
into
add
aad
jo
sub
popa
mov
(bad)
icebp
test
ins
xchg
mov
xor
push
fs
and
lock
dec
aam
dec
call
jecxz
(bad)
aam
aam
jge
outs
cwde
jo
retf
das
mov
ds
call
fwait
mov
into
test
in
icebp
repnz
xor
scas
push
jp
cmp
sbb
pop
fwait
xchg
xchg
xor
mov
push
add
add
data16
pop
dec
mov
mov
sub
cmc
cmc
call
xchg
mov
jo
popa
mov
sti
shl
jmp
mov
test
inc
mov
push
mov
test
cs
out
fs
in
mov
mov
push
gs
retf
rcl
mov
ret
adc
xchg
and
push
iret
cmp
call
sub
jecxz
loope
ret
jp
in
pushf
test
or
jmp
sbb
jne
inc
and
sub
mov
movs
(bad)
and
std
enter
mov
std
movs
dec
std
das
mov
rcl
nop
jnp
icebp
scas
outs
xchg
pop
inc
movs
push
fwait
push
hlt
sub
fdiv
movs
jmp
in
shr
push
sbb
inc
or
repz
sbb
lods
aaa
aad
int3
inc
bound
push
xor
icebp
inc
inc
push
sar
or
pop
mov
xor
xor
out
iret
or
sar
dec
and
sar
jo
imul
(bad)
jle
xchg
int3
test
fwait
loop
pop
pop
imul
test
xlat
enter
cli
jle
(bad)
adc
fidiv
arpl
adc
fcom
cmp
xor
mov
sar
iret
(bad)
lock
sahf
xchg
scas
mov
loop
mov
adc
(bad)
jne
cmc
sbb
imul
push
push
repnz
cmp
jmp
and
sbb
aaa
imul
inc
or
call
mul
mov
int3
bound
(bad)
loop
sahf
out
sub
shr
popa
movs
or
pushf
aaa
lods
jne
rcl
dec
fwait
lahf
xor
or
mov
jl
or
sbb
into
ins
jmp
xlat
fisubr
jge
shl
ss
adc
xchg
xchg
and
in
outs
(bad)
inc
xchg
or
sbb
ins
stc
sub
aad
cdq
xchg
loop
inc
aam
out
adc
mov
lea
pop
(bad)
jns
sub
push
leave
pop
sti
xor
push
jnp
pop
sahf
cld
ds
pop
test
mov
out
and
test
scas
jbe
mov
std
lock
neg
jecxz
xchg
cmp
ins
fwait
psllq
jl
mov
lock
icebp
das
jge
sbb
xchg
sub
scas
loopne
pop
add
sub
pop
call
cdq
sbb
or
sub
push
pop
fld
shl
lods
dec
mov
xchg
push
dec
sbb
enter
jbe
lock
jno
bound
int3
shl
je
call
ret
mov
pop
jecxz
jns
add
(bad)
(bad)
jmp
stos
loopne
xor
aad
in
icebp
int3
pop
cmc
pop
lods
or
cdq
jne
cmp
mov
out
and
dec
jo
jns
popa
or
jp
inc
iret
or
sub
xor
fld
mov
jno
cdq
addr16
inc
and
xchg
cmp
aam
lea
(bad)
mov
cmp
call
shl
cmps
dec
ds
rol
outs
push
mov
jle
adc
mov
call
rcr
loope
std
idiv
mov
int
adc
dec
(bad)
cmps
fcomp
test
int3
in
ds
pop
hlt
inc
shl
inc
xchg
dec
and
test
out
and
enter
pop
fcmovnb
call
js
jl
inc
stos
push
mov
add
jle
cmp
pop
dec
icebp
mov
mov
xchg
int
sub
jns
rcl
inc
cli
push
pop
test
mov
dec
outs
jb
rol
cli
out
inc
add
mov
rol
cmps
int3
js
bound
ud0
aaa
out
xor
rdpmc
retf
lods
mov
enter
(bad)
mov
int3
and
sbb
cld
inc
push
push
je
mov
sahf
cwde
into
daa
rcr
xchg
push
es
xor
and
std
(bad)
movs
rol
into
(bad)
push
mov
cmc
stos
leave
test
adc
test
xchg
add
jb
aas
mov
adc
aad
xchg
dec
(bad)
aad
mov
adc
dec
popf
fsub
pop
pop
pop
mov
xor
fidiv
cmp
ret
or
imul
leave
xchg
sbb
jmp
jb
push
or
xor
pop
and
stos
sub
xor
cmps
repnz
pop
in
jge
jge
js
jl
xchg
fcom
sub
cmp
cmp
sub
int
mov
adc
out
pop
push
dec
and
rcr
(bad)
cmc
lock
push
dec
stc
aas
push
movs
sub
push
enter
stos
mov
int
outs
inc
pop
es
in
or
xchg
mov
or
xchg
push
sahf
pop
xchg
or
sub
inc
xlat
movs
dec
xor
imul
(bad)
xchg
cli
jp
jle
loop
mov
lock
jp
(bad)
jnp
retf
sbb
ret
push
loop
sbb
out
pop
mov
mov
mov
daa
je
out
mov
jnp
or
adc
or
cmps
leave
inc
xor
mov
(bad)
out
stos
scas
or
add
cdq
and
cmp
inc
mov
mov
loop
mov
mov
add
push
and
push
cmps
dec
retf
pop
and
mov
pop
call
inc
cmp
xchg
call
inc
cmps
fs
shl
sbb
retf
test
mov
dec
sub
cmp
mov
test
xlat
aam
aaa
(bad)
xchg
stos
add
mov
loope
xor
xchg
mov
es
sbb
push
imul
(bad)
iret
call
sbb
lods
inc
mov
mov
mov
arpl
push
jg
sbb
sbb
popf
mov
cmps
(bad)
add
dec
lods
out
cmp
and
test
out
dec
mov
ret
xor
mov
ins
es
movs
push
sahf
fs
lahf
mov
mov
mov
call
mov
ror
sbb
mov
push
cld
clc
in
jmp
call
adc
pusha
ja
cmp
int3
dec
mov
neg
(bad)
ins
xor
cli
out
cmp
hlt
xor
push
mov
(bad)
mov
imul
das
loop
lds
dec
mov
aam
(bad)
idiv
jo
xor
pop
push
add
mov
mov
ins
mov
xor
fist
push
push
aaa
ins
xchg
cld
scas
test
adc
xchg
es
ret
pop
pop
je
mov
aas
mov
pop
add
call
ja
mov
fsubr
rol
and
mov
mov
test
movs
add
inc
repz
and
cs
mov
cli
dec
sub
push
add
inc
fwait
in
mov
imul
cmc
icebp
xchg
inc
jmp
movs
imul
mov
movs
mov
out
mov
popa
aaa
mov
push
xchg
add
sar
lods
lock
jae
mov
hlt
retf
cs
gs
popf
inc
call
push
mov
addr16
and
hlt
ret
mov
shr
cmp
lds
jge
scas
mov
fsubr
pop
rcr
jmp
dec
ret
push
jne
mul
out
push
imul
std
jo
jp
pop
or
fisttp
sub
push
call
test
pop
in
dec
mov
sub
arpl
jbe
fnsave
pop
rcr
and
xchg
push
jo
add
fimul
mov
jno
push
adc
mov
mov
xchg
in
scas
sbb
fwait
pop
jne
xchg
pop
mov
pushf
mov
mov
add
or
and
jno
int3
mov
test
sub
lock
jno
jb
or
into
(bad)
and
adc
xor
adc
push
pop
pop
outs
nop
add
inc
dec
nop
bound
imul
push
sub
cmps
ins
(bad)
mov
mov
(bad)
xchg
mov
xchg
dec
cmps
aam
cmp
xor
jge
cmp
imul
push
push
or
test
pop
das
mov
int3
arpl
pop
inc
xchg
and
fidiv
pop
cwde
mov
jo
ret
jb
xor
pop
lea
cs
inc
mov
cmps
out
mov
xchg
pushf
iret
imul
mov
jnp
dec
ret
jnp
pop
jns
pop
adc
loope
mov
jmp
ins
popa
sbb
push
imul
or
inc
xchg
into
jo
adc
adc
rcl
fcmovu
or
daa
inc
push
bound
inc
or
cmp
mov
mov
inc
add
retf
mov
mul
lods
arpl
xchg
arpl
xchg
mov
xchg
push
sub
mov
out
rcr
mov
xlat
push
push
cmc
adc
int3
cmps
inc
cmp
and
fadd
into
dec
test
pop
sbb
push
mov
pop
xchg
cmps
jp
(bad)
lods
shl
or
cmp
xor
cmps
add
inc
and
jl
sub
popa
or
outs
cmp
mov
aaa
mov
shl
lods
pop
rol
inc
push
xor
mov
cmps
test
and
dec
mov
repnz
lock
mov
inc
popa
jo
mov
repz
jnp
mov
sbb
nop
cld
addr16
pop
scas
test
xchg
pop
movsx
lea
or
mov
xor
test
pop
xor
aaa
cmp
pop
cdq
mov
ins
xor
cmps
pusha
adc
fist
pop
push
or
cmps
popf
push
daa
test
call
cmp
ds
push
jnp
ret
xor
fldln2
outs
jg
push
push
push
sti
inc
sbb
stos
dec
loope
mov
sbb
ja
fisubr
clc
add
les
or
retf
adc
inc
and
mov
push
fdiv
movs
jb
sub
stc
je
rcl
pop
adc
cli
fcomip
clc
inc
fdivp
or
nop
sub
inc
aaa
add
jmp
push
ins
xor
jmp
mov
pop
cmp
imul
cmp
jmp
sbb
dec
push
cmp
jecxz
jo
sbb
or
hlt
arpl
sbb
daa
jns
xchg
cmc
cmps
pusha
cs
scas
cmp
in
(bad)
neg
pop
jo
sar
lahf
scas
push
(bad)
mov
push
push
pop
push
sbb
and
jnp
jne
and
mov
mov
out
fimul
cmps
jo
inc
js
mov
mov
jle
std
xchg
jg
stos
xor
je
adc
lds
sub
(bad)
sub
nop
rol
scas
push
fcomp
ins
rcl
jge
push
cwde
push
cmp
sbb
or
out
cmp
xor
add
xor
movs
mov
push
cmp
dec
aaa
push
addr16
stos
mov
mov
pop
mov
int
ror
add
mul
add
fs
pop
or
popf
loop
out
xchg
stos
sbb
mov
push
pop
push
sbb
mov
dec
repz
adc
mov
sub
xor
call
dec
cld
and
cld
cld
jno
popf
sbb
call
xchg
adc
ja
nop
cmp
mov
cmp
mov
inc
in
inc
call
sbb
es
nop
sti
fimul
inc
cld
call
dec
sti
movs
adc
push
or
push
out
jns
cld
xchg
ficomp
inc
ja
push
jecxz
mov
mov
adc
fld
dec
and
adc
fadd
hlt
jecxz
adc
movs
dec
loope
int
add
push
lea
test
xlat
jg
nop
sbb
(bad)
adc
jl
cmp
dec
aaa
shr
jo
push
je
add
(bad)
pop
(bad)
fdivr
inc
aas
cld
jge
mov
popa
mov
ja
sub
inc
popf
cmp
dec
outs
sar
icebp
sbb
xchg
adc
inc
sbb
retf
bound
xchg
mov
lock
je
mov
mov
jl
sub
ret
mov
jmp
repnz
popa
mov
in
pop
dec
add
bound
lds
fs
sub
or
pusha
sbb
push
push
xchg
xor
inc
dec
rcr
add
mov
ficomp
sbb
shr
cmp
mov
into
pop
jo
xlat
sub
fmul
mov
aam
dec
sub
outs
dec
fldcw
adc
push
xor
imul
and
push
(bad)
or
ss
ret
aam
add
cld
out
ret
lahf
in
sbb
dec
jmp
and
xor
pop
xchg
scas
mov
push
lods
into
shl
out
mov
pop
push
adc
stos
out
retf
push
push
jo
cmp
and
fistp
fbstp
and
in
stos
test
mov
je
in
jb
pop
call
push
pop
xchg
sbb
xor
mov
jge
jbe
pop
in
mov
xchg
adc
or
scas
mov
adc
pop
mov
mov
push
jge
sti
and
add
inc
(bad)
call
jne
and
push
mov
push
mov
shl
jl
repz
ins
adc
dec
pop
pusha
leave
ja
sar
lds
push
push
or
(bad)
mov
jmp
pop
cmp
xchg
push
out
dec
dec
shl
aaa
(bad)
mov
pop
pop
cmp
dec
cwde
int3
cs
and
movs
retf
mov
xchg
jae
nop
pop
fnstsw
cmps
ds
(bad)
jmp
rcl
mov
add
jmp
jle
xor
in
ds
pop
and
xchg
fsubp
cmp
(bad)
fchs
cmc
inc
cmc
jnp
pop
sbb
xchg
xchg
fidiv
and
nop
fdiv
mov
mov
mov
fwait
ds
loopne
data16
add
mov
dec
out
xchg
fsubr
fisub
in
xor
(bad)
in
sbb
nop
inc
xor
inc
xlat
call
(bad)
out
and
push
jns
in
cmps
enter
(bad)
mov
lock
dec
sub
jl
ret
aaa
cmp
xchg
jae
mov
arpl
push
xor
jns
cmps
or
xor
mov
xlat
xchg
cwde
dec
xor
sbb
in
ret
pop
nop
mov
scas
mov
pushf
stos
dec
popa
cmp
jne
xor
movs
pop
cmps
addr16
push
xor
and
lea
cmp
cmps
add
ins
icebp
xlat
lods
int3
cmp
es
out
push
xchg
cmp
and
jnp
push
std
dec
push
inc
mov
add
jecxz
push
xchg
str
mov
stos
pop
cmp
cmp
inc
(bad)
scas
out
push
je
push
mov
jb
fwait
cmps
mov
jle
dec
cmc
ja
sbb
cld
jne
mov
add
adc
sbb
xchg
mov
or
xor
fucomp
adc
jle
aam
in
cmps
cmp
add
mov
fs
retf
rcl
push
ret
mov
mov
ret
add
(bad)
add
pop
add
sbb
sub
pop
lods
jmp
sbb
cmp
sti
push
or
pop
sbb
lods
pop
pusha
cdq
cmp
cmc
adc
hlt
pop
(bad)
add
jge
ins
outs
fcomp
aad
xor
jg
sbb
sar
pop
scas
xchg
mov
xchg
push
xor
movs
das
imul
pop
mov
test
and
dec
fisub
loope
lods
ss
test
xchg
test
add
and
mov
mov
jmp
mov
jge
push
mov
cwde
cli
mov
or
add
aaa
mov
dec
mov
ja
in
out
sbb
data16
xchg
and
cli
xor
dec
jle
add
sbb
paddsw
ficom
lea
jmp
out
dec
std
push
pop
pushf
test
les
mov
dec
call
(bad)
in
ja
pop
out
sbb
pop
fbld
addr16
sub
push
lahf
fs
cmp
icebp
inc
and
xor
cmps
add
xor
pop
pop
jo
inc
push
out
test
mov
add
adc
aad
mov
jne
in
mov
fdivr
fs
sbb
in
xchg
mov
lea
cli
xor
jns
repz
out
aad
fcom
mov
test
lods
fsubp
movs
lds
mov
lock
rol
adc
adc
and
rcl
adc
imul
xchg
clc
dec
neg
sar
sbb
xor
pop
add
inc
int
outs
ins
sub
pop
frstor
pop
push
outs
or
scas
call
sub
fisttp
test
cmc
mov
or
push
rcr
jmp
aaa
mov
fadd
popf
outs
add
add
cs
mov
daa
es
mov
cmp
popa
or
push
adc
lods
sbb
in
sbb
jp
loopne
mov
mul
jg
xor
adc
and
adc
lods
and
aam
or
loop
push
mov
clc
sbb
ins
pop
add
stos
call
xor
pop
xchg
retf
xchg
fst
je
movs
adc
daa
(bad)
dec
mov
in
aad
xchg
imul
sbb
out
cmp
and
hlt
mov
sbb
jge
jno
mov
into
imul
mov
or
jmp
pop
iret
pop
pop
(bad)
cli
mov
cmp
push
mov
push
sar
mov
add
fidiv
pop
ds
mov
jbe
and
ror
movs
mov
mov
xchg
(bad)
xchg
ss
or
test
dec
mov
add
mov
mov
xor
pusha
sbb
stos
ds
add
aas
mov
mov
adc
inc
mov
push
pop
push
cli
inc
add
cmps
push
jle
ins
mov
dec
icebp
shl
std
inc
mov
(bad)
mov
jmp
int3
pop
pop
pop
call
push
push
movs
leave
pushf
mov
ret
clc
mov
das
call
shr
test
cli
jl
int3
int
cmps
and
pop
xchg
fsub
and
fcmovu
sahf
cmp
jge
xchg
sub
retf
mov
lahf
fstp
mov
inc
mov
mov
jne
jmp
loope
cdq
scas
jl
sub
add
popf
jb
mov
cmp
or
push
aas
movs
les
add
inc
inc
rcr
mov
icebp
mov
dec
push
cmps
mov
push
and
mov
call
out
repnz
pop
cmp
jmp
and
xor
cmps
or
mov
mov
inc
cmps
xchg
or
mov
cs
push
pop
mov
popf
sub
or
sbb
add
mov
jae
mov
ret
div
xor
cmp
fcmove
inc
loop
adc
ror
mov
mov
js
dec
iret
aaa
mov
imul
dec
mov
jecxz
push
ss
jp
mov
mov
std
mov
mov
test
push
lods
adc
pop
lea
push
add
or
shr
xor
adc
add
pop
add
jb
sbb
leave
(bad)
cmp
jle
lds
loop
sbb
adc
out
jne
fs
xchg
sti
jbe
sub
mov
pop
pop
cwde
push
in
mov
(bad)
(bad)
arpl
add
dec
inc
int3
xor
push
jbe
call
sub
movs
sbb
add
imul
shl
das
mov
inc
push
stos
xchg
stc
push
fs
mov
push
add
cs
xor
or
inc
push
jbe
outs
cmp
sbb
gs
add
inc
jb
and
mov
cmp
cmps
dec
add
jmp
retf
clc
mov
or
push
rcl
jp
(bad)
daa
(bad)
sub
retf
hlt
repnz
inc
enter
lock
push
dec
cmc
pop
(bad)
popa
jl
enter
inc
(bad)
loopne
popf
xchg
push
icebp
aas
jle
xor
jnp
iret
mov
push
xor
push
mov
mov
sbb
xchg
into
int3
pop
mov
inc
xor
sub
cwde
cwde
ds
dec
xchg
xchg
cmp
test
lods
mov
neg
mov
ficom
adc
(bad)
ret
test
sbb
xlat
addr16
addr16
jmp
mov
mov
jg
div
test
aam
repnz
adc
xor
aaa
adc
test
xor
lock
in
cmc
sbb
mov
add
mov
pop
adc
inc
push
shl
dec
jmp
ss
jle
test
int3
ins
mov
dec
jmp
popf
mov
out
out
add
and
nop
cli
mov
mov
inc
xor
xor
fs
add
adc
mov
sti
dec
xchg
sbb
and
sti
hlt
xchg
pop
inc
call
jae
int
inc
sub
(bad)
mov
add
pushf
xor
repz
xor
shl
in
and
xchg
mov
jb
jp
add
dec
jl
jp
leave
mov
adc
xchg
(bad)
(bad)
mov
test
adc
adc
xchg
sbb
mov
test
(bad)
out
cmp
xchg
jmp
cmp
add
test
hlt
xor
mov
imul
cmp
std
fistp
pop
cmp
or
ftst
stc
or
ja
xchg
test
scas
or
hlt
fild
lahf
and
or
push
mov
sub
mov
dec
jp
into
push
std
dec
daa
mov
adc
sti
mov
and
inc
or
popf
pop
in
xchg
test
in
in
pop
xor
ss
add
or
ins
sbb
jns
rol
jmp
aas
lea
xlat
ins
sbb
fbld
jge
or
push
rcr
loopne
iret
cmp
imul
pop
mov
test
mov
fnstsw
adc
call
or
pop
and
popa
dec
add
fwait
add
sub
sar
mov
in
movs
ins
mov
adc
adc
lock
(bad)
daa
xchg
mov
clc
adc
arpl
rol
push
xor
ins
sahf
and
ret
adc
in
or
not
jns
adc
mov
push
sub
retf
dec
mov
inc
inc
loope
dec
(bad)
aad
ds
jg
and
mov
lods
mov
sti
jecxz
icebp
fadd
push
ror
jb
sub
xchg
jae
or
pushf
in
pop
shl
mov
pop
or
mov
mov
mov
cmp
lods
inc
mov
xchg
jo
repz
sbb
adc
movs
mov
sub
sbb
leave
div
adc
inc
(bad)
test
mov
jmp
xchg
add
mov
jnp
call
and
inc
popf
lods
pop
xchg
leave
inc
dec
mov
gs
call
in
cmc
ds
out
xchg
push
dec
shr
call
imul
sub
mov
inc
daa
sbb
xchg
ror
and
or
test
cmp
sbb
mov
ret
and
gs
push
int3
push
mov
mov
sbb
xlat
dec
push
or
inc
or
inc
push
mov
hlt
mov
sahf
int
dec
cmp
call
dec
dec
mov
lods
ds
jo
test
retf
xchg
xor
mov
jo
push
sbb
data16
aad
mov
mov
cmp
pop
sbb
rol
mov
(bad)
fs
xchg
sub
jbe
les
lea
pusha
inc
mov
lea
adc
test
(bad)
xchg
push
fs
cmp
mov
cmp
repz
inc
pop
addr16
push
stos
pop
loop
cmp
jnp
and
push
fadd
mov
imul
jmp
(bad)
out
scas
lahf
out
push
call
xchg
into
(bad)
sti
pop
xchg
pshufw
aam
dec
fidivr
movs
int
mov
js
jp
sub
mov
imul
jmp
mov
inc
sbb
mov
push
xor
mov
(bad)
out
pop
and
inc
popf
add
jne
mov
inc
push
aaa
lahf
xlat
xchg
or
jns
imul
sub
(bad)
push
adc
cmp
std
adc
es
fcom
inc
imul
iret
pushf
movs
pop
or
cmp
aas
not
mov
and
xchg
jmp
mov
mov
mov
push
cmps
mov
test
gs
xor
cpuid
(bad)
repnz
data16
jbe
lods
std
mov
(bad)
mov
stc
xchg
stos
stc
adc
(bad)
movs
add
add
jmp
outs
(bad)
fist
add
daa
outs
nop
push
vcvtsd2si
xor
jnp
dec
outs
arpl
scas
mov
scas
pop
lods
in
call
xchg
inc
ret
mov
ret
outs
push
jg
enter
mov
fnstcw
push
and
gs
xor
adc
lock
shr
jg
adc
loope
idiv
inc
(bad)
frstor
mov
mov
out
lods
(bad)
hlt
sub
dec
or
jl
call
add
dec
cmps
loope
pop
out
daa
rol
xor
std
pushf
pop
xor
sti
cmp
sub
cmp
xchg
call
(bad)
outs
dec
adc
pop
dec
loope
xor
cs
or
shl
pop
lods
fimul
pop
push
add
xor
sub
(bad)
mov
dec
xchg
lahf
inc
push
sbb
push
add
xor
neg
sbb
jno
jae
cli
pop
pop
iret
data16
movs
cmp
jmp
aad
test
or
dec
adc
arpl
and
add
rcl
sbb
out
fist
xchg
pop
jge
xor
in
lahf
stc
popf
dec
or
jae
sub
jg
sti
popf
sub
(bad)
jb
mov
out
xchg
imul
sbb
sub
pop
xor
dec
mov
imul
lea
popf
mov
jge
(bad)
mov
ror
jp
jecxz
xchg
push
or
cmp
js
in
xor
ins
push
bound
enter
mov
xchg
jg
(bad)
cs
ds
ins
clc
push
cli
jecxz
mov
and
jge
(bad)
mov
add
daa
pop
inc
repnz
push
in
or
xchg
adc
scas
and
int
or
pop
sti
sbb
fwait
xor
not
mov
jno
shl
push
out
scas
inc
xchg
add
(bad)
call
loopne
push
sub
sar
outs
stos
or
adc
mov
sar
test
cwde
repz
es
jns
rcl
int
pushf
repnz
retf
push
sar
cwde
loope
je
sbb
lods
ss
jno
push
sahf
retf
mov
mov
nop
cli
cmp
dec
rol
stc
mov
in
mov
div
jp
(bad)
mov
pop
and
push
and
(bad)
ds
cmc
xchg
loopne
jbe
cwde
fiadd
rcr
push
hlt
xor
repnz
aad
std
add
cmp
sbb
xchg
xor
xchg
(bad)
not
repz
mov
push
xchg
enter
mov
lock
xchg
cmc
mov
adc
push
jnp
sbb
ja
jmp
rcr
sbb
jge
push
enter
mov
mov
push
jg
call
cld
scas
jl
mov
in
into
adc
ret
out
jg
cmp
popa
leave
out
adc
mov
dec
(bad)
cmp
jmp
(bad)
jno
fldcw
xchg
push
cmp
fcomp
cmp
xor
into
sahf
iret
ins
(bad)
push
mov
xchg
or
data16
mov
dec
leave
aas
sub
int3
jmp
push
add
ret
mov
jbe
inc
(bad)
mov
(bad)
xchg
push
sub
in
clc
loop
fstp
inc
dec
dec
pop
inc
adc
imul
mov
test
gs
xchg
mov
js
loope
inc
rcr
outs
popf
push
cmp
loopne
call
mov
cs
or
pop
xchg
(bad)
adc
push
or
inc
add
arpl
sub
jmp
gs
sub
retf
add
stc
add
or
(bad)
cmp
sub
or
ror
add
dec
daa
out
pusha
push
fist
sbb
lahf
test
sbb
ins
ffree
cbw
fisttp
jg
inc
mov
lock
stc
(bad)
ror
xchg
loope
pop
pop
rcr
nop
pop
add
(bad)
out
mov
dec
rcr
sub
push
ficom
sbb
sub
(bad)
cmp
test
add
and
jmp
adc
call
mov
mov
xchg
and
ins
int3
call
mov
push
xor
cld
jg
ret
xor
ror
xor
fmul
mov
(bad)
adc
xchg
inc
xor
pusha
fldenv
sbb
push
in
push
stos
jecxz
adc
sbb
mov
pop
into
inc
and
pop
jl
mov
sti
je
test
call
mov
stos
pop
pop
dec
push
call
out
call
stc
int3
jg
jle
mov
cmp
jmp
icebp
jae
push
(bad)
scas
mov
xor
sbb
jle
shl
enter
cmp
retf
xchg
ffreep
adc
mov
(bad)
mov
jg
cmp
xor
inc
fadd
lahf
sbb
cmp
or
xor
jmp
fs
mov
into
jge
cmps
or
mov
pop
mov
(bad)
xchg
jmp
fcomp
jmp
jo
out
cdq
nop
push
inc
lods
arpl
into
push
cmp
data16
(bad)
cwde
retf
adc
aad
dec
lahf
cmps
pop
mov
pop
dec
sar
add
push
jns
lea
jno
clc
je
mov
stos
push
lds
aas
int3
test
cmp
lahf
daa
add
stos
jmp
push
dec
push
pushf
inc
mov
fs
outs
imul
hlt
sub
xchg
mov
imul
mov
and
push
ror
pop
dec
cli
mov
sbb
and
int
js
push
sbb
pop
fcomi
out
mov
retf
fisub
jno
jae
add
jns
in
fwait
or
cdq
mov
adc
fsub
loop
mov
push
loope
mov
mov
adc
call
push
outs
inc
enter
pop
cmps
mov
add
jbe
dec
xor
iret
std
bound
mov
push
popf
lock
xchg
mov
or
repz
int3
sub
mov
movs
fist
inc
mov
out
mov
jg
sbb
fsub
(bad)
cmps
or
cmp
push
jo
lods
or
mov
out
icebp
lods
adc
out
add
popa
pop
jae
sub
mov
xchg
pop
aad
and
push
mov
mov
cmp
pushf
fwait
int
sbb
mov
(bad)
pop
inc
mov
and
lea
aam
hlt
out
jg
mov
dec
and
jns
xor
xchg
loop
out
sub
sbb
cdq
lahf
in
sub
xchg
popa
add
add
sub
outs
or
retf
jnp
into
jnp
es
in
dec
inc
cmp
dec
das
push
fsubr
ja
adc
xor
hlt
push
jmp
inc
pop
repz
(bad)
fmul
rcr
out
sub
dec
inc
xor
lods
dec
les
dec
and
in
cmp
inc
jns
daa
not
or
cmp
loopne
push
pop
xor
dec
jle
xor
in
shl
je
ret
bound
adc
in
rcl
xchg
sbb
adc
add
dec
retf
repnz
adc
mov
lods
ins
cmp
es
xchg
popf
xchg
mov
mov
cmc
pushf
int3
mov
cmp
jecxz
push
out
les
xchg
call
adc
jns
int
sub
cld
test
jg
jecxz
fdivr
xchg
jne
sub
sbb
aas
cmp
mov
and
fcmovnbe
mov
push
hlt
mov
outs
mov
call
mov
and
call
push
mov
sti
lods
stos
adc
out
lods
fstp
mov
cmp
inc
and
imul
xchg
aad
(bad)
xchg
lods
fnsave
push
xor
dec
jecxz
lods
pop
sub
adc
out
pop
dec
mov
mov
sub
jo
push
lock
mov
out
retf
stos
pop
lods
mov
pop
cmp
xor
fist
inc
push
sub
cmp
push
fistp
(bad)
jbe
push
mov
rcr
mov
(bad)
iret
clc
or
gs
dec
mov
sbb
mov
pop
inc
ret
inc
cmps
jmp
xchg
push
loope
out
add
push
jae
in
mov
xchg
xlat
mov
fimul
push
rol
adc
ret
mov
ror
aas
ficom
ja
mov
in
xor
sbb
xchg
in
and
into
mov
adc
xchg
xor
addr16
aad
and
mov
mov
xchg
mov
ss
pop
pop
push
ins
inc
rcr
dec
push
scas
pop
push
ds
xchg
pop
cmc
xchg
sub
and
stc
dec
es
mov
ror
cmp
imul
pop
or
je
xchg
mov
div
adc
fdivr
xor
lods
jb
rol
jg
push
mov
jecxz
adc
mov
and
pop
into
inc
inc
mov
out
(bad)
and
or
outs
mov
ficom
enter
lea
or
out
mov
data16
(bad)
pop
clc
and
cld
daa
stos
mov
mov
mov
xchg
stc
and
call
mov
scas
jmp
cmc
mov
inc
pushf
pop
add
stos
push
inc
xchg
sbb
popf
sbb
cmp
ret
adc
fisttp
adc
mov
push
jge
pop
mov
call
mov
or
jnp
repz
add
adc
(bad)
mov
ror
mov
jecxz
jb
xlat
pop
add
ins
cs
jp
leave
in
call
retf
fbstp
xor
adc
out
stos
mov
xchg
movs
push
stc
iret
sbb
call
push
or
sahf
imul
inc
ins
and
fs
out
cmp
mov
(bad)
repz
xchg
pop
popf
fild
add
xchg
jne
mov
pop
cli
movs
rcr
daa
sub
loop
adc
sbb
sbb
pop
push
xchg
aam
adc
mov
jne
mov
xlat
dec
aas
add
cli
jb
addr16
xchg
test
ret
or
xor
add
fcomp
jmp
mov
mov
adc
sbb
imul
dec
push
dec
sahf
rep
mov
push
adc
bound
ja
in
pop
cmp
dec
adc
gs
and
jge
scas
into
int3
(bad)
mov
mov
sub
mov
adc
adc
dec
scas
mov
push
loope
mov
(bad)
jae
sti
lock
sbb
xchg
inc
test
mov
or
(bad)
fdiv
sbb
dec
and
push
leave
inc
adc
int3
xor
enter
cld
test
adc
jo
mov
pop
inc
aas
cld
xchg
cli
idiv
xchg
sbb
and
in
in
sbb
retf
mov
enter
xchg
jecxz
popa
cmps
aad
into
jo
in
lds
cmps
call
inc
data16
xchg
dec
cs
repnz
into
xor
hlt
add
or
sub
jo
stos
fbstp
into
inc
(bad)
repnz
rcr
sbb
sbb
adc
add
fnstcw
jge
aam
cmc
xchg
je
cmp
jbe
leavew
jne
mov
inc
push
popf
stos
jmp
stos
jge
xor
push
jbe
mov
loop
dec
mov
mov
test
sub
and
xchg
in
jmp
idiv
ins
stos
(bad)
mov
mov
cmp
das
std
sbb
mov
adc
frstor
gs
aas
into
add
jp
je
inc
pop
out
mov
and
mov
xchg
mov
out
pusha
popa
shr
in
cmp
test
inc
enter
xor
or
out
leave
cmc
cli
and
leave
les
bound
push
pop
mov
push
movs
dec
fiadd
cmps
fiadd
stos
xchg
pop
test
push
shl
pop
xlat
xor
pop
retf
xlat
mov
adc
dec
repz
rcr
sti
(bad)
jl
mov
or
xchg
dec
in
xchg
add
cmps
mov
push
mov
popf
jecxz
sub
sbb
(bad)
jp
sbb
cmp
cdq
enter
nop
xchg
inc
ret
push
lds
dec
int3
jo
mov
cmp
daa
fist
push
jmp
(bad)
std
jne
icebp
xlat
jnp
in
bound
lock
cmp
jg
dec
jp
push
je
je
icebp
jne
mov
aaa
sub
not
ins
int
xchg
dec
mov
aas
clc
mov
sbb
(bad)
loope
push
sbb
mov
pusha
mov
inc
out
xchg
icebp
adc
clc
add
add
push
pusha
pop
imul
dec
repz
lea
out
ins
xor
push
mov
inc
sub
push
inc
adc
mov
mov
sub
cmc
leave
inc
xchg
push
movs
adc
jne
xchg
cdq
jae
lods
pop
shl
jns
mov
push
mov
adc
pop
and
cld
cmc
es
cmp
aaa
adc
xchg
mov
jle
jmp
(bad)
aam
popa
ficom
jae
sub
mov
push
jae
jo
pop
add
ja
jecxz
jb
ss
jmp
sub
push
cmp
adc
push
lea
mov
mov
pop
sub
stos
mov
lods
dec
fs
add
daa
int
pop
sbb
es
cmp
fwait
mov
and
mov
sbb
out
(bad)
aam
(bad)
sar
or
dec
mov
or
and
mov
cmp
mov
fdivr
cmp
mov
sub
pusha
jecxz
and
or
push
adc
ficomp
call
(bad)
shl
or
in
ds
push
push
repz
push
ins
imul
or
cmp
jle
call
fnsave
mov
or
cmps
adc
gs
cbw
in
dec
dec
loope
test
jmp
jp
in
out
jmp
pop
loopne
imul
into
adc
or
cmc
retf
mov
ror
das
and
ret
outs
inc
or
inc
lods
xor
mov
xor
lahf
adc
push
cwde
out
inc
lock
mov
cs
pop
mov
xor
out
imul
fsub
mov
mov
pop
repnz
out
hlt
sbb
push
mov
in
fwait
sub
sbb
fs
sbb
push
and
jmp
dec
sbb
les
pop
repz
int3
std
je
sahf
xor
ins
push
popa
mov
jmp
xor
cmps
xchg
adc
pop
gs
leave
push
mov
push
ret
hlt
pop
bound
dec
inc
mov
or
or
ret
dec
pop
push
iret
mov
test
and
imul
or
or
arpl
retf
bnd
test
xor
cmp
leave
sti
mov
icebp
add
sahf
imul
cmp
jno
and
ret
pop
jp
xor
xor
push
dec
xlat
fcom
push
test
shl
adc
aad
aaa
adc
mov
cwde
shl
ficomp
pop
call
sbb
inc
add
clc
mov
pop
add
mov
out
fs
dec
jno
push
int
pop
jle
or
inc
mov
movs
xchg
lahf
dec
xchg
popw
adc
mov
(bad)
gs
call
sub
mov
add
rcl
add
int
sub
adc
pop
mov
ror
jae
fcomp
clc
int3
jnp
sbb
or
mov
inc
nop
or
cdq
shl
sar
icebp
popa
icebp
movs
cmp
sub
mov
ins
mov
mov
pusha
mov
stc
mov
das
js
adc
xor
sub
popf
xchg
push
sbb
(bad)
lahf
jl
and
inc
push
xlat
movs
imul
imul
ss
xor
scas
inc
in
clc
shr
ins
jmp
jno
cmp
fist
mov
xchg
clc
icebp
mov
sbb
fs
jno
xor
jb
dec
int
call
pop
lds
(bad)
movs
pop
aam
xor
outs
popa
mov
cmp
call
push
adc
data16
add
jo
push
jge
bound
sub
movs
mov
lods
in
sub
add
nop
lods
retf
xchg
xor
popa
jge
mov
ds
or
inc
cwde
ss
sub
fdiv
and
sub
dec
xor
hlt
gs
sub
fcom
adc
dec
call
test
add
mov
mov
out
push
js
xchg
loope
or
outs
sti
dec
sbb
enter
jbe
test
xchg
cmps
shr
dec
add
inc
inc
pop
aas
mov
daa
xor
sbb
sbb
push
dec
dec
xchg
adc
pop
jne
in
int
jmp
sahf
or
(bad)
pop
jae
xchg
jecxz
fnstenv
pop
aas
mov
retf
setns
cmp
idiv
and
cs
sub
jmp
xchg
add
in
dec
xchg
fadd
sti
leave
push
sub
lock
lods
int
sbb
add
shl
push
(bad)
addr16
mov
fstp
int
xor
aam
and
sub
inc
imul
inc
out
mov
iret
sub
push
dec
sub
or
adc
fld
inc
adc
sub
mov
call
das
idiv
shl
inc
out
pop
push
jg
lods
jecxz
xchg
jle
mov
loopne
pushf
sub
fiadd
mov
xchg
jns
jno
sub
dec
out
inc
call
adc
or
popf
inc
and
gs
repz
aad
and
mov
fcmovbe
add
neg
gs
xchg
pop
push
sbb
fsubr
movs
fimul
push
cmc
bound
pop
(bad)
icebp
jbe
pushf
int
or
fldcw
not
sbb
bound
setge
jno
jo
cmps
mov
add
add
add
retf
dec
cdq
push
push
std
test
stc
jmp
(bad)
(bad)
fadd
add
out
fst
push
movs
movd
or
out
push
xchg
xor
int3
mov
lock
add
in
push
fld
ficomp
pop
jb
pop
xor
add
gs
mov
test
gs
scas
cmps
imul
mov
add
ds
popf
pop
jae
repnz
cwde
mov
scas
shl
cmp
mov
lods
lods
push
or
fs
and
icebp
cli
mov
mov
cmp
shl
dec
add
push
mov
cmc
out
std
jmp
inc
push
inc
cdq
cwde
fst
dec
loop
test
push
ins
cmps
addr16
mov
cmp
shl
call
out
test
inc
aad
mov
pushf
and
inc
ret
cmp
cmp
lds
add
rcl
and
aas
add
les
je
cmp
outs
shl
imul
stos
mov
mov
add
aaa
push
adc
pop
outs
sbb
xlat
ss
mov
idiv
fst
mov
loope
mov
xchg
fisttp
je
or
adc
and
cmp
(bad)
dec
shr
xlat
stos
dec
cli
aas
push
mov
mov
cmps
sub
fbstp
sahf
(bad)
in
mov
and
xor
fistp
xchg
aam
cwde
js
test
cmp
inc
cwde
mov
jnp
(bad)
aad
sbb
call
scas
xor
cli
dec
retf
add
popf
sbb
dec
pop
jb
test
push
in
push
stc
test
and
stc
ins
nop
cmp
cli
mov
and
mov
sti
ror
fst
enter
dec
popf
stc
xchg
(bad)
add
sub
add
(bad)
rol
addr16
aas
(bad)
call
mov
sbb
mov
inc
fstp
sbb
sub
gs
jbe
repz
out
imul
mov
dec
xor
prefetchw
jmp
ins
jns
mov
push
adc
inc
push
pop
pop
xor
sti
inc
mov
inc
pop
jmp
into
jmp
sahf
mov
push
in
pop
push
xchg
int
(bad)
xchg
clc
lods
xchg
jmp
repnz
cmps
lea
mov
push
xor
inc
ins
jmp
lds
mov
fidivr
xchg
add
fdiv
push
sti
push
jmp
inc
out
and
mov
test
mov
push
jmp
cmp
js
dec
mov
lea
out
loopne
ins
xor
mov
mov
jno
pop
mov
inc
pop
add
mov
adc
das
stos
retf
in
and
scas
inc
jae
mov
jp
sbb
cmp
icebp
rcr
and
fimul
or
stos
shl
adc
lods
jae
nop
scas
adc
test
xlat
mov
cmp
sub
loopne
cli
xchg
mov
cmp
mov
or
fs
xor
jecxz
aaa
test
add
jp
fistp
sbb
cmps
mov
mov
pop
push
push
popf
jp
and
pushf
dec
and
mov
iret
add
rol
xchg
test
and
and
stos
or
jno
xlat
(bad)
jl
stc
jbe
mov
adc
xor
jp
js
(bad)
ror
cmp
adc
xor
mov
stc
xor
or
fisttp
and
retf
jecxz
sub
shr
cmps
fisttp
loop
aad
(bad)
loopne
push
cmp
push
jo
cmps
bound
dec
xchg
addr16
and
jb
popa
fldenv
in
neg
sbb
sbb
jl
lock
pop
ds
sub
imul
stos
push
push
out
xchg
inc
lods
enter
dec
lea
push
iret
in
push
(bad)
in
adc
add
push
jo
lahf
rol
imul
inc
mov
sub
add
jge
test
pop
add
pop
sti
xor
adc
xor
inc
xchg
pusha
not
outs
xchg
jecxz
fwait
jp
addr16
test
cmp
addr16
mov
push
imul
inc
jmp
dec
jp
sbb
pop
sub
adc
push
dec
cmp
sbb
dec
sti
cmc
xor
scas
(bad)
iret
mov
jge
sbb
and
or
sbb
mov
out
mov
clc
mov
adc
fwait
lods
or
imul
test
sbb
pop
mov
adc
inc
std
jmp
or
aaa
pusha
stc
loop
inc
jle
iret
pop
sub
lea
inc
mov
lahf
xchg
adc
mov
in
push
clc
pop
or
add
mov
cmp
call
mov
and
inc
in
add
cmp
out
xor
or
xchg
xchg
out
mov
(bad)
dec
pushw
and
int3
out
cld
in
out
mov
int
add
scas
retf
sub
aaa
aam
ja
mov
mov
lds
fldpi
dec
xor
push
movs
jae
mov
in
data16
add
jmp
add
jnp
pop
mov
xchg
or
imul
outs
ret
adc
ja
cmp
out
mov
mov
inc
(bad)
ror
arpl
mov
(bad)
jb
hlt
(bad)
jg
xchg
mov
cwde
add
das
xchg
inc
add
xchg
mov
fs
imul
loopne
mov
mov
push
and
mov
hlt
sub
(bad)
jb
jnp
mov
mov
mov
mov
mov
or
movs
(bad)
mov
inc
fiadd
push
dec
jae
cmps
cmp
sbb
retf
inc
ins
push
push
mov
mov
ja
inc
mov
and
sbb
inc
mov
and
in
xchg
xchg
loope
cmp
inc
repnz
iret
es
out
enter
je
add
jle
(bad)
sahf
sbb
adc
sbb
iret
int3
xor
and
daa
push
sar
loop
lock
xor
xchg
mov
sbb
(bad)
and
jmp
ins
or
into
sahf
xchg
dec
xchg
(bad)
in
and
xlat
cli
test
mov
mov
aad
and
loope
xor
add
retf
or
(bad)
cmp
mov
jne
jno
test
fucomip
add
dec
pusha
imul
inc
adc
cwde
cmc
jmp
enterw
dec
leave
mov
adc
mov
stc
and
inc
cld
scas
jbe
adc
mov
inc
and
pop
and
adc
adc
sahf
(bad)
test
fidiv
test
xor
or
fs
add
cld
and
push
dec
(bad)
aam
or
pop
pop
fdivr
jge
mov
movs
and
pop
sbb
cmp
cmp
mov
leave
sbb
pop
dec
arpl
adc
cmp
adc
jne
out
mov
jno
inc
cmp
xchg
cmp
popa
mov
mov
cs
jo
das
or
std
jo
pop
or
jb
and
in
cmc
test
addr16
push
vfmaddsubps
out
movs
xor
dec
fs
inc
adc
push
adc
cmp
push
cmp
mov
dec
aas
mov
leave
mov
xor
aam
call
and
test
xor
cs
repnz
cmps
cmp
neg
inc
daa
push
pusha
sbb
mov
cdq
or
mov
push
jae
je
fdivr
fwait
test
(bad)
setns
sbb
jo
std
ret
popa
sbb
xor
movd
jae
xlat
scas
lods
(bad)
sub
push
leave
repz
xlat
fcomp
cmps
inc
jae
fcmovbe
push
scas
jns
push
leave
dec
push
mov
add
jmp
jg
pop
clc
xor
adc
jge
or
cwde
or
push
hlt
pop
jns
xchg
xchg
lods
adc
mov
push
ficomp
pop
fcmovu
in
mov
lock
xlat
xchg
sbb
in
xor
inc
xor
aaa
cmp
cmp
int
mov
clc
iret
rcr
mov
out
push
fwait
inc
fucomp
dec
ds
loop
inc
(bad)
fdivr
loope
jl
jp
dec
sar
sub
cdq
stos
pop
pop
cld
or
jb
retf
aad
in
add
mov
mov
loopne
dec
sub
mov
cmp
test
inc
shl
int
clc
xchg
cmp
pop
call
les
call
push
adc
pop
fcmovb
bound
xchg
sbb
dec
hlt
cwde
mov
push
sbb
int3
inc
sbb
out
imul
xor
ret
push
test
sbb
std
pusha
adc
mov
xchg
call
out
dec
js
fxch
(bad)
push
pusha
jl
inc
dec
and
jae
je
ficomp
cmp
add
jae
mov
lahf
ja
cmc
fs
and
cmps
mov
js
jmp
test
add
pop
hlt
bound
jb
and
out
jno
dec
cmps
sub
shr
or
or
push
sub
mov
loopne
cli
fwait
dec
mov
and
xchg
js
push
fild
vpextrw
lds
out
add
xor
cdq
push
push
movs
neg
das
sbb
mov
mov
fwait
rol
ror
pop
repz
cs
sub
pop
push
in
xchg
or
dec
loop
or
ins
sti
push
ins
ins
fcom
sbb
fcom
mov
cli
out
mov
test
mov
jg
stos
fld
js
jne
xor
jmp
jl
mov
aad
sub
xor
jg
cwde
aaa
inc
push
loope
jmp
or
fcom
pop
es
lahf
je
adc
(bad)
mov
fisubr
xor
and
int3
inc
dec
xor
(bad)
out
mov
and
pop
adc
fisttp
pop
add
pop
(bad)
stos
xor
jl
fbstp
popf
adc
cmp
mov
mov
pop
or
repz
ins
jns
jns
cmp
cmc
add
jae
stc
xlat
das
xor
adc
mov
cwde
outs
out
or
add
pop
ja
pop
add
fstp
sub
add
in
xchg
pop
mov
sub
dec
outs
sbb
nop
jbe
xor
xor
cmp
and
sbb
clc
mov
test
leave
aad
pusha
fcomp
add
mov
fiadd
pusha
test
cwde
js
jge
xlat
xor
xor
lea
push
fucomi
push
(bad)
xor
imul
popf
add
cmp
pop
aad
in
cmp
loop
mov
adc
ja
mov
mov
cld
fs
adc
call
mov
ficom
(bad)
cwde
out
sbb
pop
cmps
mov
xchg
inc
or
sub
mul
push
sbb
cwde
inc
out
xchg
pusha
mov
push
repz
pop
in
outs
cdq
and
mov
adc
loopne
push
lods
loop
cs
lods
(bad)
test
mov
into
mov
dec
mov
push
xchg
push
jp
addr16
mov
movzx
pusha
(bad)
(bad)
imul
in
xor
imul
test
sar
jno
or
jle
mov
inc
call
dec
sbb
mov
stos
mov
(bad)
pop
iret
daa
xor
arpl
sub
pop
push
ins
cld
movs
pop
jl
clc
lods
pop
bound
(bad)
mov
(bad)
mov
mov
xchg
loope
mov
pop
enter
xor
lds
mov
xchg
mov
in
inc
popf
nop
or
xchg
int
add
xchg
loop
jmp
xor
mov
jb
cmc
add
fimul
stos
movs
push
push
(bad)
adc
inc
and
outs
sub
test
xor
sahf
lods
fdivr
in
dec
inc
cld
setae
push
repz
sti
lods
jl
jl
push
mov
scas
mov
mov
jb
pusha
mov
stc
dec
pop
stos
fild
add
aaa
icebp
int
test
ss
xchg
jmp
mov
cld
pop
cs
repz
cmp
push
jmp
mov
(bad)
clc
cmp
jno
jl
or
shl
mov
xlat
test
sub
dec
mov
xchg
cmc
mov
movs
push
sub
sbb
xchg
mov
aad
mov
or
stos
and
push
daa
test
lds
shl
push
dec
jbe
jmp
jmp
sbb
je
mov
dec
(bad)
ins
out
mov
ret
xlat
and
mov
xor
mov
dec
ins
les
jno
inc
hlt
sahf
mov
in
mov
icebp
cwde
int3
or
sti
mov
and
call
sar
mov
int3
jmp
sub
dec
scas
pop
push
fmul
add
push
daa
ficomp
cli
inc
sbb
fcomp
pop
scas
cmp
lahf
inc
aad
add
shl
mov
dec
cmps
add
push
push
adc
call
push
adc
outs
int
xchg
test
stc
out
fisubr
pushf
fld
lock
or
and
call
mov
mov
xor
mov
(bad)
in
nop
pop
iret
add
clc
aaa
clc
dec
inc
dec
jo
hlt
pop
aaa
push
jmp
repnz
cs
mov
xor
call
repnz
pop
ror
in
retf
xchg
(bad)
sbb
stos
dec
sub
push
adc
sti
mov
push
pop
out
pop
je
mov
popa
dec
dec
mul
repz
outs
int3
jns
fmul
in
adc
jecxz
call
dec
mov
sbb
mov
sub
mov
(bad)
sbb
retf
dec
push
std
jo
neg
xor
mov
retf
jl
and
(bad)
mov
cmp
test
jp
jb
xor
adc
addr16
repz
fwait
or
xchg
jnp
and
ror
retf
add
je
jo
mov
jnp
xchg
(bad)
pop
add
repnz
cmps
movs
jb
cs
pop
inc
dec
sub
or
enter
add
mov
mov
repz
inc
jae
imul
imul
into
mov
leave
xchg
or
data16
dec
jne
xchg
sub
mov
sbb
pop
daa
(bad)
pop
or
aam
ja
pop
int
sbb
das
loope
aad
pop
mov
(bad)
or
and
pop
je
sbb
xchg
xchg
test
int3
lock
pop
data16
mov
in
pop
xor
scas
push
pop
pop
dec
mov
jns
(bad)
cld
push
out
mov
rdmsr
sub
pop
push
inc
adc
xchg
arpl
add
retf
jecxz
fmul
push
pop
mov
fcom
push
shl
and
lods
xor
das
movs
and
fcom
js
outs
mov
mov
lods
out
clc
jns
call
gs
pop
pop
pop
mov
push
repz
and
aaa
or
mov
pop
mov
dec
jg
hlt
out
jmp
cmp
(bad)
xchg
push
fs
xchg
and
repnz
or
(bad)
pop
scas
adc
in
arpl
add
mov
fimul
cmp
mov
pop
pop
jno
inc
ds
push
xchg
adc
out
pmuludq
or
cld
dec
cmps
pop
out
pushf
xor
bswap
cmps
pop
jnp
mov
retf
es
es
test
or
sub
cmp
sbb
scas
mov
cmp
mov
js
mov
(bad)
adc
xor
and
inc
nop
mov
jno
imul
shl
xchg
out
dec
test
jmp
loop
imul
adc
std
mov
neg
jp
std
mov
sub
cmp
(bad)
fnstcw
xchg
pop
xchg
dec
popf
adc
cwde
scas
or
shr
cmc
or
mov
mov
pop
arpl
adc
cmp
call
adc
cld
pop
jle
movs
into
inc
retf
add
gs
pushf
adc
nop
mov
pop
jae
(bad)
into
dec
pop
add
dec
pop
dec
imul
xor
and
or
in
push
(bad)
cmp
adc
cmp
cmp
mov
test
lods
mov
mov
int3
or
mov
jmp
push
loope
and
mov
jbe
nop
cmp
dec
mov
jge
movs
mov
(bad)
outs
dec
test
int3
jbe
imul
rol
or
mov
push
cmp
push
push
adc
test
pop
mov
add
fsubr
dec
mov
xor
inc
mov
jnp
arpl
mov
adc
mov
push
jns
cdq
icebp
in
or
(bad)
(bad)
stos
jb
cmp
ds
xchg
xor
and
cmp
test
inc
push
sbb
iret
ins
inc
es
xchg
or
sub
add
jecxz
je
out
lods
(bad)
push
push
hlt
jno
cwde
call
jl
dec
sub
dec
add
scas
or
or
sti
daa
cmp
test
fst
sub
cmp
lock
sbb
pop
pop
arpl
(bad)
lock
mov
in
adc
rol
xchg
mov
mov
xor
jp
cld
push
mov
(bad)
in
cmps
dec
fcomp
xchg
jle
fisubr
ss
popa
xchg
mov
std
mov
dec
jo
xchg
dec
mov
out
adc
push
test
inc
mov
add
pop
jae
xlat
sbb
adc
lahf
add
mov
arpl
jmp
or
test
adc
mov
mov
loopne
adc
fisttp
retf
aaa
inc
xor
dec
add
stos
xor
mov
inc
in
xor
pop
sar
xor
xor
test
scas
adc
or
shl
adc
nop
(bad)
shr
mov
js
jno
sub
fstp
mov
cdq
(bad)
adc
ins
sahf
add
stos
pusha
cmps
mov
sub
add
adc
scas
cmp
pop
shr
inc
and
mov
bound
pushf
cmp
nop
call
or
or
mov
(bad)
cld
and
aaa
(bad)
adc
(bad)
jmp
jno
dec
in
lahf
loopne
cs
adc
xor
push
enter
push
mov
aas
popf
loop
loop
jno
sbb
int3
mov
shl
cld
test
xchg
and
add
movs
(bad)
and
pop
mov
mov
outs
(bad)
cmp
das
mov
inc
mov
fisttp
mov
inc
mov
out
ss
(bad)
nop
dec
or
les
lds
add
pop
ins
mov
and
cs
add
adc
(bad)
or
jmp
sub
jns
aas
std
loop
xor
pop
pop
dec
xchg
(bad)
adc
fld
out
repz
in
mov
sub
dec
mov
rcl
xchg
imul
mov
sub
pop
(bad)
arpl
mov
mov
jae
idiv
mov
inc
and
into
fistp
pop
push
(bad)
inc
mov
and
mov
ror
loope
dec
xchg
add
imul
jb
push
daa
scas
dec
jne
sub
xchg
ss
jmp
add
(bad)
mov
iret
pop
sar
mov
daa
add
test
push
jl
and
stos
fs
sar
int3
push
xchg
out
nop
in
out
add
movs
add
aad
cmp
popf
adc
cli
cdq
sbb
pop
loopne
aam
addr16
cld
cmps
das
sbb
sahf
lea
repnz
add
jno
xlat
sbb
aas
sub
dec
add
lods
in
xor
aaa
jmp
shl
pop
call
sbb
or
shl
adc
push
inc
sahf
cmp
loop
ins
pop
xor
push
sub
repz
and
or
sub
jmp
xor
ds
mov
loop
imul
das
pop
pop
or
jnp
mov
or
in
and
ret
mov
int
add
add
sbb
scas
dec
jno
dec
sbb
div
pop
add
dec
add
sub
gs
out
push
sbb
sbb
and
inc
pusha
add
cdq
dec
push
dec
cmps
into
add
lahf
and
mov
data16
loope
mov
adc
lock
sub
mov
push
test
jo
sahf
jmp
xor
mov
pmuludq
ins
and
cmps
push
pop
dec
mov
mov
and
and
lods
stc
jle
mov
ins
push
add
ins
neg
shr
hlt
cmp
ja
data16
cmps
and
sbb
mov
xor
mov
push
adc
or
push
xchg
lea
push
cmps
xor
cmp
repz
std
adc
xor
(bad)
jne
push
jle
fcom
jle
mov
mov
xchg
and
ins
jno
xlat
inc
cmps
stc
aas
dec
jo
dec
nop
(bad)
or
pop
pop
mov
push
es
mov
mov
mov
pop
xchg
xor
dec
push
icebp
ins
mov
push
imul
sbb
cdq
add
or
pop
out
push
and
test
cmp
mov
push
imul
enter
jne
int
sub
sub
mov
and
jnp
xor
sbb
ja
push
mov
jecxz
push
inc
sbb
sub
(bad)
fstp
xchg
sar
repz
fld
loop
cdq
ret
hlt
push
shl
into
das
fisttp
inc
jno
out
lds
mov
push
(bad)
jb
mov
pop
cmp
mov
gs
das
or
sbb
xor
jbe
lods
loop
xor
and
jecxz
sbb
cld
xor
jmp
and
fsub
jmp
sahf
pop
sub
div
dec
outs
inc
xchg
pop
test
adc
call
popf
jmp
mov
hlt
push
cmp
mov
mov
adc
pusha
inc
sub
sbb
neg
retf
mov
cmp
cmc
cli
cdq
dec
lahf
push
dec
into
pop
enter
cmps
pop
hlt
les
mov
test
xchg
add
out
sub
mov
inc
mov
lock
std
add
rcl
push
adc
(bad)
jo
mov
mov
aam
or
or
jge
pop
lock
inc
mov
and
aam
mov
retf
repnz
and
xlat
cmps
sbb
stc
add
jp
stc
mov
in
repnz
cmp
sub
es
in
add
lods
and
xchg
jns
pop
push
add
or
and
mov
fwait
(bad)
imul
inc
cmp
jg
call
test
(bad)
int3
mov
jno
sub
pop
cli
mov
and
into
mov
retf
dec
stc
adc
push
adc
push
push
xor
(bad)
dec
out
fidivr
out
mov
jmp
cs
xchg
adc
cmp
mov
imul
jmp
push
sbb
add
inc
mov
call
mov
bound
or
(bad)
jmp
movs
rcl
sub
mov
add
data16
shl
fucom
jl
lahf
mov
sub
clc
pop
call
xor
out
iret
hlt
jb
inc
and
jbe
cmp
scas
jg
adc
fidivr
or
loop
fst
out
fwait
leave
fbld
cmp
(bad)
in
shl
sbb
int3
cmp
sbb
adc
mov
(bad)
cli
retf
jo
pop
jmp
scas
jmp
add
inc
xchg
icebp
les
bound
inc
jo
cld
adc
mov
dec
(bad)
dec
inc
stc
idiv
and
in
ins
retf
or
mov
pop
test
out
cli
outs
pop
jmp
(bad)
jp
and
(bad)
loope
xchg
ins
sti
into
jp
mov
or
sub
pop
leave
xchg
push
adc
inc
push
cmp
push
(bad)
stos
ficom
xlat
mov
xchg
aas
aaa
popa
xchg
mov
(bad)
ds
jae
jmp
in
cli
adc
pushw
xchg
pushf
mov
and
outs
xor
jns
fs
pusha
jmp
mov
enter
pushf
fldenv
fwait
stos
ja
ror
pusha
leave
data16
mov
mov
sbb
ins
test
jmp
jmp
inc
xchg
inc
inc
ret
movs
popf
mov
scas
ins
sbb
push
retf
dec
xchg
inc
cwde
(bad)
loopne
mov
out
rol
clc
cmp
pop
xor
add
push
cwde
retf
xor
(bad)
push
js
xor
cmp
jae
sub
push
imul
mov
xchg
(bad)
in
sahf
icebp
and
push
adc
dec
mov
cs
clc
ret
test
adc
ja
arpl
cmp
xchg
fsubr
cmps
cmps
shl
mov
lods
icebp
push
sub
mov
xchg
cmp
in
inc
add
outs
in
std
sub
cs
xor
inc
cli
or
mov
mov
call
xchg
mov
clc
jmp
ror
sbb
and
mov
cmp
push
(bad)
and
mov
xchg
cmp
pop
cmp
push
dec
mov
xor
jp
dec
jl
movs
push
ja
fninit
pop
mov
dec
push
sub
das
std
sbb
movs
and
push
or
cmps
jmp
mov
jae
dec
push
shr
fs
push
mov
aas
or
jp
addr16
jbe
add
xchg
mov
retf
int
push
or
data16
xor
add
or
or
fdivr
jge
popa
push
scas
cwde
out
jle
ret
xor
fsubr
lods
xor
push
les
div
adc
stc
shl
adc
mov
fs
cmp
dec
cmp
xchg
leave
inc
mov
mov
ror
pusha
movs
loop
inc
xlat
mov
adc
stc
sub
mov
test
cmps
push
aas
scas
nop
in
mov
cmp
pop
repnz
sti
add
sub
inc
stc
push
mov
cmps
dec
sbb
(bad)
sbb
pop
jge
jb
and
adc
mov
jne
test
xchg
xor
div
test
xchg
hlt
mov
mov
add
sub
xor
std
inc
cmp
mov
ins
dec
sahf
outs
into
mov
iret
outs
pop
test
mov
arpl
sahf
add
xchg
cmp
in
mov
cmp
xor
cmc
pop
aas
dec
lods
cmps
call
cmp
add
mov
fimul
cwde
(bad)
pop
add
sbb
lock
inc
xlat
mov
adc
xor
ror
dec
push
ss
push
cli
push
sub
imul
and
mov
in
les
scas
mov
(bad)
cld
popa
add
xor
mov
mov
xchg
jo
(bad)
and
fsubr
inc
xor
into
out
test
push
adc
jmp
sbb
repz
dec
sub
pop
scas
popf
jo
leave
sub
and
and
inc
xchg
test
ds
mov
add
inc
jns
jge
mov
ss
inc
stos
das
or
fist
xor
adc
stos
sub
(bad)
cmps
sub
jl
adc
mov
adc
imul
pop
pop
dec
sub
stos
pop
fcmovu
shl
mov
and
in
xor
adc
icebp
pop
jmp
into
pop
cs
xor
sbb
stos
xor
mov
inc
inc
div
dec
in
ins
inc
cmp
xor
fisub
adc
xchg
push
xchg
ja
scas
xchg
aam
mov
(bad)
ss
out
in
push
jmp
(bad)
or
pop
mov
inc
mov
aaa
mov
cdq
xlat
out
cmp
(bad)
out
push
inc
scas
push
jecxz
jp
ss
out
jecxz
sti
out
arpl
jb
fs
out
repnz
pop
sub
dec
xor
aad
add
test
cmps
push
scas
sar
mov
xor
and
or
stc
mov
addr16
pop
push
in
adc
push
adc
jno
cdq
jbe
pushf
call
or
jecxz
and
sbb
mov
in
mov
mov
adc
push
jmp
adc
adc
mov
lahf
loope
(bad)
dec
repnz
call
sbb
inc
adc
cld
ins
enter
mov
icebp
xor
sbb
loopne
push
mov
cwde
add
int3
dec
rcr
leave
loope
loop
inc
test
fsub
mov
xchg
xchg
mov
jnp
pop
cmp
xor
mov
ds
mov
jo
pop
push
arpl
inc
fwait
sub
inc
clc
fs
fs
mov
outs
xor
mov
mov
(bad)
push
into
mov
scas
stos
mov
inc
inc
mov
mov
daa
xchg
and
pusha
fld
js
push
push
cdq
xchg
xor
xor
test
(bad)
or
add
and
cdq
frstor
out
jnp
cmp
sbb
xor
and
push
int3
aas
sub
dec
sub
jl
mov
xor
ret
cmps
lods
dec
fadd
clc
pop
jmp
add
cmp
jmp
push
inc
cli
push
cmp
inc
mov
and
ins
imul
pusha
in
xchg
cwde
sub
push
imul
xchg
test
rol
hlt
mov
sbb
gs
shr
mov
fcom
adc
es
lahf
leave
or
push
fiadd
xlat
mov
xor
cmp
jge
test
movs
out
pop
ins
sbb
icebp
jp
aam
shl
cmps
outs
xor
dec
imul
and
pop
cwde
jge
cmp
mov
push
pop
sub
cmp
fwait
pop
cmp
add
cmp
std
aas
ret
shl
xchg
jae
mov
add
dec
ins
lock
js
add
(bad)
sti
dec
fs
xchg
scas
mov
jbe
js
sbb
cmp
jecxz
cmp
dec
ss
jnp
aam
loope
neg
fstp
test
icebp
lock
out
es
xchg
bound
retf
jmp
push
adc
shr
fstp
pop
mov
data16
xchg
xor
jo
int3
pop
fs
ret
push
scas
shl
inc
(bad)
mov
dec
push
xchg
push
jmp
push
add
sub
inc
ds
fild
xor
jo
aad
outs
xchg
fwait
jae
jno
cmp
into
xchg
push
sub
mov
or
aas
sub
dec
repnz
neg
lahf
out
scas
push
sub
cmps
lods
addr16
sbb
je
lea
mov
dec
loopne
fldcw
jns
jnp
fwait
inc
xchg
pushf
shl
shl
inc
out
pop
jno
sti
test
fsub
out
fild
inc
xchg
inc
adc
and
push
cmp
movs
sub
and
pop
xor
stc
push
pop
movs
movs
call
dec
mov
xor
ins
mov
shr
pop
pop
fst
xchg
adc
push
imul
adc
push
pop
pop
iret
test
xchg
jge
mov
lds
dec
cmp
bound
data16
fwait
test
(bad)
in
lock
xor
out
push
or
iret
aam
xlat
lahf
rol
cdq
out
mov
inc
stc
(bad)
ffree
(bad)
xchg
adc
pop
out
out
imul
(bad)
movs
(bad)
mov
fdiv
dec
add
or
cmps
fstp
fld
sbb
sti
push
pop
add
retf
sahf
fld
mov
jo
aas
sub
jle
mov
loope
push
or
inc
jb
xchg
cdq
inc
out
retf
inc
add
add
xor
xchg
push
or
xor
popa
dec
jne
fisub
inc
add
(bad)
add
cmp
xlat
enter
pop
ins
and
(bad)
mov
push
xor
sub
pop
xchg
cmp
loope
xchg
add
add
aad
pusha
mov
jmp
sub
pusha
add
push
jge
pop
jp
push
outs
mov
cmp
retf
dec
or
pop
cwde
adc
xor
or
inc
and
loop
cmps
fucom
out
call
xchg
jns
rcl
pop
movs
out
mov
add
add
enter
add
inc
pop
scas
push
pop
mov
rol
sar
in
lock
pop
daa
mov
sti
(bad)
loop
and
adc
inc
jle
loopne
lods
jle
adc
fiadd
mov
lock
sub
mov
dec
jecxz
retf
imul
jo
aas
frstor
or
mov
test
sub
or
aas
adc
das
mov
xchg
xor
mov
repz
jp
sti
test
mov
xchg
mov
mov
stos
adc
or
jl
cs
and
bsf
mov
jle
sbb
in
rcl
xchg
sub
data16
push
leave
int
test
dec
iret
sub
int3
aaa
scas
and
mov
mov
adc
in
and
retf
es
clc
xor
pop
add
setae
test
int
inc
push
push
ss
xchg
adc
outs
xor
sbb
pop
and
xor
in
adc
push
popa
dec
sbb
cmp
cmp
push
test
fld
es
mov
or
xor
add
jp
rcr
mov
xor
lods
sbb
adc
lock
xor
or
cmps
rol
or
popa
popf
xchg
adc
pop
scas
gs
gs
pop
sbb
push
sub
mov
mov
pushf
icebp
adc
dec
adc
and
cmp
adc
js
mov
int3
cmp
and
push
test
loop
sahf
sbb
ss
sbb
adc
sub
(bad)
in
add
ret
push
or
fadd
lock
add
mov
cs
jb
ss
sbb
mov
cmp
inc
loop
pusha
push
pop
inc
imul
inc
lahf
(bad)
dec
out
add
xor
mov
std
loop
push
add
in
jmp
outs
fld
xor
in
hlt
and
inc
pop
(bad)
cmps
in
push
jmp
push
sbb
fst
dec
sbb
jge
mov
xchg
mov
stos
cmp
pop
(bad)
gs
jb
in
push
adc
repnz
and
push
nop
dec
fimul
and
outs
daa
in
or
sbb
mov
add
(bad)
aad
jo
sar
push
pop
popa
fwait
call
sahf
cdq
das
mov
and
mov
push
mov
lock
pop
and
lods
rol
xor
adc
sub
adc
daa
das
jle
into
and
or
inc
stos
pop
stos
xchg
inc
push
ja
arpl
cmp
aad
sbb
fst
cmp
cmp
jns
pop
jbe
push
ja
mov
pusha
cmps
stos
or
test
push
mov
push
cmp
mov
nop
or
stos
fwait
ds
mov
lds
cmp
pop
jne
pop
jp
sbb
mov
lds
push
imul
and
retf
jo
jmp
test
jnp
call
add
xchg
xor
or
xor
es
arpl
adc
loope
adc
jbe
fs
popa
ins
jl
test
arpl
or
and
push
jle
arpl
sub
add
mov
jae
je
pop
fcmovnbe
dec
adc
xor
dec
(bad)
lahf
xchg
test
outs
outs
mov
xchg
fadd
jmp
or
pop
xlat
mov
call
and
jmp
sub
scas
sbb
jmp
fs
pusha
out
in
frstor
mov
int
and
xor
test
std
cdq
xor
jne
test
xchg
test
(bad)
sbb
pushf
div
dec
inc
xchg
inc
adc
or
pop
fidiv
imul
test
jg
cmp
jmp
jl
sbb
mov
pop
sub
jne
test
mov
outs
pop
sub
in
jecxz
mov
adc
push
xchg
cmp
jecxz
repz
es
js
add
iret
sbb
jne
adc
jle
dec
sbb
push
sar
or
popa
(bad)
loop
pop
pop
fsubrp
int3
loop
in
inc
adc
add
cmp
jmp
mov
clc
and
nop
enter
pop
sbb
shr
xchg
cmp
xchg
inc
int3
test
stos
jle
imul
push
std
push
(bad)
(bad)
leave
push
imul
xchg
imul
fpatan
pop
sbb
dec
xchg
push
adc
inc
and
sahf
add
or
mov
(bad)
inc
outs
or
les
push
or
adc
dec
and
or
out
loop
pushf
(bad)
and
(bad)
mov
les
cmp
pushf
popa
pop
out
movs
mov
das
int3
jmp
push
inc
(bad)
cmp
pushf
rcl
dec
lods
popf
sub
jae
jmp
scas
mov
lahf
push
mov
aad
cmps
and
in
sbb
es
jns
pop
and
dec
ins
mov
dec
popf
shl
scas
aam
repnz
cmp
mov
fnstenv
pop
sti
lea
xchg
in
mov
dec
sub
sahf
div
jnp
push
in
inc
data16
add
sub
or
addr16
cmp
sbb
sbb
(bad)
in
mov
fwait
cmps
cmp
movs
cmps
bound
sbb
fisub
sbb
neg
rcl
(bad)
adc
dec
xchg
cmp
adc
mov
das
popf
xlat
pop
push
shr
fld
push
pop
iret
inc
sbb
push
int
adc
mov
jb
push
jmp
cld
add
pop
xchg
lods
mov
pmaxsw
jle
and
dec
dec
mov
test
inc
mov
or
cli
ret
cmp
adc
push
cmc
fst
ret
mov
adc
inc
data16
movs
into
jmp
cmp
rcl
ficom
int
push
ja
adc
retf
inc
pop
in
cld
or
jbe
pop
mov
daa
pop
stc
jmp
jg
or
dec
ret
dec
in
shl
stos
xor
fnstsw
aam
and
mov
push
ins
(bad)
or
xchg
cli
movs
loope
xchg
in
and
lea
jle
stc
and
dec
inc
fsubr
lods
sub
fisttp
cmp
push
loop
ret
cmp
jg
outs
ret
ins
ins
xor
scas
inc
icebp
pusha
je
rol
xchg
(bad)
xor
movs
arpl
sub
adc
hlt
fadd
shl
cwde
ja
pop
ins
js
push
addr16
fwait
jbe
mov
xchg
loop
addr16
push
bound
mov
cmp
xor
mov
jp
ret
sahf
cmp
(bad)
lods
jle
pop
mov
adc
push
icebp
mov
sub
sub
push
lds
cmp
je
push
add
adc
popw
push
ds
mov
inc
mov
jno
out
mov
mov
mov
mov
push
mov
sub
clc
into
retf
dec
(bad)
into
(bad)
lahf
cmp
or
icebp
stos
(bad)
mov
dec
inc
(bad)
in
push
test
aas
push
gs
(bad)
sbb
mov
or
std
push
xor
dec
cmps
xlat
add
dec
repnz
sub
sahf
fcomip
and
and
mov
stos
sbb
int
pop
adc
in
out
inc
loop
in
icebp
fs
xor
arpl
into
add
out
push
into
cmp
cmps
sahf
inc
enter
xor
cdq
das
cmp
add
pushf
call
or
stc
out
lods
stos
inc
fiadd
fadd
push
scas
sti
(bad)
fisttp
(bad)
(bad)
hlt
jmp
xchg
scas
movs
mov
rcr
cmps
es
shl
xchg
in
xlat
and
cmps
jge
rcr
and
push
dec
inc
jnp
cmp
push
retf
out
mov
leave
call
dec
call
dec
lock
lds
push
or
bound
mov
scas
sub
cmp
xchg
mov
shl
inc
xlat
ret
out
nop
shl
cld
and
mov
push
or
sub
mov
push
repnz
loop
pop
lock
xchg
push
in
cmp
sbb
cdq
push
push
test
sti
movs
dec
pop
aam
fwait
xor
fisttp
es
cmps
push
pop
aam
icebp
ret
rcr
addr16
pop
or
mov
(bad)
std
mov
rcr
enter
mov
push
mov
jns
ins
movs
retf
data16
add
add
and
pop
xor
hlt
cmp
loopne
inc
in
cmp
idiv
ins
test
xchg
out
loopne
jno
adc
push
rcr
int
nop
in
(bad)
fst
scas
movs
jecxz
retf
pop
repnz
mov
std
sahf
retf
inc
push
popa
test
imul
mov
mov
adc
jno
fwait
retf
dec
rsm
push
test
sahf
mov
xchg
cmp
call
aaa
inc
inc
sar
sub
and
dec
(bad)
bnd
in
stos
xchg
add
lock
ret
or
cwde
cmp
popa
jl
lock
daa
pop
mov
push
(bad)
jb
sub
cmc
push
xchg
test
cmp
xchg
push
repz
cmps
loope
xlat
or
stc
out
pop
inc
sti
(bad)
adc
sub
fisttp
mov
(bad)
push
mov
sub
es
mov
je
push
loope
rcr
pop
pop
jmp
and
mov
inc
jns
rcl
clc
sub
cmp
dec
push
add
add
mov
dec
cmp
xchg
push
inc
mov
sbb
jmp
in
in
out
jg
mov
cmps
adc
adc
mov
imul
iret
std
out
or
cmc
scas
fidiv
jge
sub
ja
fdivr
(bad)
es
jbe
out
push
cmp
hlt
mov
dec
repnz
or
ja
idiv
cld
shl
das
lock
cli
out
mov
fisttp
push
jl
xor
add
push
adc
icebp
call
and
fstp
enter
vmovq
jp
lea
or
enter
sti
out
enter
mov
loop
inc
int
lods
in
cmps
test
out
scas
clc
jecxz
cmp
in
and
xor
pop
dec
jmp
loop
out
or
cld
(bad)
ss
inc
mov
dec
fistp
cmp
or
scas
(bad)
repnz
inc
test
push
and
push
xor
mov
movs
xor
popa
mov
jb
retf
movs
pushf
test
fld
jbe
in
stos
add
pop
or
fld
and
inc
sub
mov
mov
dec
mov
das
popa
fidivr
add
movs
dec
popf
cmp
(bad)
pop
dec
(bad)
cmp
(bad)
xchg
test
and
push
push
inc
cmps
cmps
mov
inc
fidivr
adc
test
push
std
leave
clc
xchg
cli
jns
pop
jecxz
push
not
ins
fcomp
mov
cmp
dec
mov
mov
xor
jns
cmp
adc
(bad)
jl
mov
xchg
neg
pop
mov
mov
cmp
dec
adc
outs
dec
cmp
pop
jb
nop
test
xor
mov
add
mov
stc
imul
mul
adc
ficom
or
mov
loope
aad
in
jae
xor
out
mov
mov
adc
cmps
test
sbb
iret
mov
sbb
xchg
cld
push
pop
mov
xchg
xchg
mov
sub
ror
rol
rcr
inc
mov
lock
inc
dec
xchg
enter
int3
push
jmp
retf
and
aam
das
jge
inc
jp
or
push
cdq
(bad)
fwait
ja
loopne
cmp
xor
(bad)
pop
mov
jp
add
cmovl
pop
retf
and
add
rol
fidivr
out
inc
jle
pop
add
inc
hlt
jmp
std
sub
das
(bad)
cmp
pop
sub
je
movs
or
mov
fdiv
mov
sbb
pop
clc
mov
mov
sub
cmp
loope
fistp
mov
aad
xchg
jmp
nop
xchg
lahf
aaa
sub
push
das
fwait
inc
cmp
aam
stos
lods
rol
inc
test
fidivr
add
cld
and
sub
lahf
sbb
and
jae
push
std
or
rcr
fdivr
ins
jno
sbb
hlt
test
loope
out
sar
lods
and
jecxz
scas
or
cmc
dec
inc
inc
or
or
add
cmp
jle
dec
cli
inc
out
mov
pusha
(bad)
out
aam
xchg
xchg
ror
call
xor
into
ss
fild
in
call
fs
outs
pop
fpatan
cmc
adc
xchg
fisttp
sub
adc
cmps
jb
adc
push
and
inc
into
push
xchg
and
in
sub
int
push
jae
and
out
pop
pop
mov
cli
movs
dec
scas
ins
or
fstp
icebp
mov
jge
xchg
pop
mov
outs
mov
adc
les
pop
push
in
neg
fstp
cmp
hlt
jo
les
add
(bad)
sbb
out
and
or
jns
out
xchg
push
mov
mov
lock
cdq
xor
jnp
xor
adc
or
lds
jns
mov
inc
xchg
daa
pop
mov
xchg
leave
sbb
and
std
lahf
fcomp
mul
in
fnstcw
stos
push
xor
mov
sti
cmps
push
mov
cmp
xor
cmp
sbb
jb
nop
mov
lahf
mov
stc
push
pop
or
push
fnsave
fisubr
test
pop
mov
xor
fiadd
pop
out
fs
sub
stc
xchg
jno
xchg
out
(bad)
outs
xor
in
lods
or
add
mov
mov
jp
xchg
daa
js
movs
jle
inc
loop
aad
inc
jg
stos
push
cwde
mov
jl
data16
and
lods
mov
sbb
pop
inc
call
jmp
repz
int3
and
das
cmps
out
or
dec
jge
add
sar
mov
or
xlat
lds
mov
std
jno
push
mov
rcr
fisub
push
ins
ds
lahf
inc
adc
dec
fcomp
xchg
clc
add
popa
xchg
ror
mov
lods
add
leave
mov
cli
mov
aaa
rcr
push
cs
xchg
push
in
sbb
out
add
loopne
jmp
mov
xchg
sbb
cmp
jo
stos
loope
xlat
mov
imul
pop
xlat
shr
adc
or
inc
mov
cmp
les
add
or
repz
sub
adc
call
retf
mov
and
xchg
dec
leave
mov
(bad)
dec
or
jo
xchg
xchg
sbb
inc
in
pop
fidiv
or
inc
fmul
das
dec
dec
loop
ret
call
xor
gs
jge
push
inc
mov
pop
sub
sbb
cli
mov
cld
mov
mov
test
jecxz
jmp
lods
lods
fild
icebp
imul
pop
pusha
mov
push
ins
pusha
imul
or
sbb
add
and
lock
repnz
sub
pop
and
ins
jmp
pop
sahf
je
hlt
aas
int
repnz
mov
retf
or
out
pop
inc
fcomi
fwait
add
popf
xchg
je
nop
gs
cmp
mov
imul
inc
sub
or
cmp
jl
xchg
cdq
cs
in
lods
pop
leave
or
mov
xor
jp
or
rcl
outs
mov
mov
dec
mov
mov
fwait
retf
xor
add
inc
pop
mov
xor
mov
dec
inc
adc
jle
cmp
aas
clc
mov
add
in
arpl
arpl
enter
bound
adc
lahf
push
stos
mov
in
and
and
push
das
cmp
adc
es
cli
gs
pusha
out
stc
nop
cmp
sbb
ins
popf
mov
in
mov
inc
pop
dec
mov
fwait
das
cld
int3
mov
mov
inc
push
pusha
rcr
daa
and
sbb
add
add
cmps
scas
data16
mov
call
sbb
(bad)
in
scas
lods
cwde
scas
jge
push
out
mov
and
hlt
fwait
sub
sub
arpl
xchg
jl
in
imul
test
call
shr
sub
mov
pop
stos
(bad)
cmc
cmp
xchg
add
jbe
in
xchg
imul
ja
mov
stc
mov
or
dec
or
cwde
pop
mov
cmp
fisub
out
and
and
call
and
inc
clc
jge
pop
mov
mov
sahf
add
test
pop
pop
dec
mov
xchg
sbb
jnp
mov
loopne
call
cld
cmp
inc
mov
sub
stos
mov
mov
cmps
mov
bswap
(bad)
retf
push
pusha
btr
jle
(bad)
iret
gs
popf
cdq
pop
xor
aad
jno
neg
mov
movs
cmp
push
repnz
sub
ja
inc
or
sub
fisttp
sub
mov
inc
cwde
and
add
scas
mov
push
in
sbb
popa
ret
xchg
dec
add
addr16
dec
das
ins
adc
jno
push
pushf
out
adc
retf
xor
jmp
lahf
xor
daa
and
cwde
sub
retf
(bad)
xchg
out
mov
imul
xchg
mov
dec
out
mov
push
ins
fs
fs
mov
jp
je
imul
mov
mov
pusha
retf
lock
in
jle
ins
push
lods
in
xor
dec
push
xchg
push
out
add
fild
jp
std
ss
or
cmp
aas
jb
imul
adc
mov
jnp
in
adc
mov
xor
push
rcr
add
sub
ins
test
add
ret
pop
xchg
mov
xchg
pop
sahf
pop
pop
inc
repnz
in
dec
cmp
cmps
push
pop
lahf
sub
xor
sbb
xor
nop
or
cmp
dec
outs
cmp
xor
xor
call
dec
inc
mov
jmp
movs
loope
outs
call
or
sti
adc
(bad)
or
in
push
repnz
(bad)
xor
xor
add
ins
push
std
jp
dec
push
mov
hlt
or
in
cs
xchg
pop
and
and
adc
stos
sub
idiv
imul
adc
aaa
add
adc
push
pusha
mov
inc
cdq
mov
nop
sub
inc
in
ds
mov
dec
and
retf
and
dec
cmp
mov
dec
jno
push
stos
jo
imul
jg
add
xchg
jp
or
pop
retf
mov
(bad)
repnz
lods
push
fwait
cmp
push
ret
ins
sar
imul
mov
xor
dec
cmp
fdiv
cmp
push
mov
mov
ret
add
pop
sbb
addr16
bnd
xchg
(bad)
xchg
sub
fsub
pop
scas
jmp
aaa
adc
pop
cld
aad
lods
cmp
inc
repnz
imul
push
ss
scas
jmp
retf
cdq
popf
inc
mov
js
data16
xchg
lds
into
ins
shl
xlat
pop
call
in
mov
shl
out
shl
fisub
xor
or
jnp
scas
jns
jns
shl
xor
xchg
jle
cmps
xchg
push
stos
pop
mov
nop
jnp
pop
pop
mov
frstor
add
mov
dec
out
mov
pop
fstp
jle
aas
mov
test
and
cmp
inc
adc
sbb
movs
adc
stos
inc
lahf
shufps
inc
fist
jl
outs
je
jl
or
int
jge
mov
and
xchg
and
fidiv
ds
sbb
or
je
int3
jp
aaa
jbe
fild
lods
call
sbb
test
sub
stos
xchg
mov
ss
repz
dec
into
popf
mov
mov
inc
in
jb
rol
out
mov
frstor
jns
and
call
pop
gs
or
in
hlt
stos
add
xor
aaa
cwde
nop
fistp
xchg
jbe
dec
xor
jb
pop
(bad)
mov
cmp
pop
sbb
movs
and
push
and
push
cmps
mov
shl
cmp
pop
sub
jp
sar
or
xchg
xchg
ss
loopne
mov
pop
jae
imul
pop
aam
and
push
lods
mov
mov
sbb
mov
into
jae
(bad)
shr
jp
or
sub
inc
cmp
fnstsw
in
dec
push
data16
and
mov
pop
or
sub
sbb
xor
sub
and
les
(bad)
test
push
xchg
daa
cmps
push
pop
std
aas
or
loope
dec
adc
push
cli
pop
xchg
loopne
hlt
ins
jl
in
push
push
mov
mov
dec
cmp
movs
icebp
call
lods
xor
sbb
xor
jb
inc
cmps
pop
and
cs
scas
movs
xchg
popa
and
mov
mov
add
xchg
fsubr
ins
jl
inc
es
cdq
push
add
aaa
and
and
or
aam
jbe
imul
aaa
add
cld
in
arpl
xor
xchg
retf
out
or
inc
sti
lods
mov
(bad)
mov
fist
call
fild
retf
add
mov
sub
mov
scas
dec
jne
shl
xchg
stos
mov
inc
iret
mov
push
(bad)
push
sahf
adc
mov
xchg
jae
pop
push
cwde
jno
jmp
ja
sbb
xor
mov
fnsavew
dec
jecxz
dec
sahf
lods
pop
xchg
inc
js
fcmovnbe
cmp
jg
inc
loope
mov
fisubr
mov
outs
inc
jno
ret
jl
add
stc
nop
jns
scas
scas
addr16
div
call
in
sahf
xor
xchg
mov
jb
mov
xchg
sbb
jg
rcl
or
mov
(bad)
repz
push
loop
sahf
xchg
ins
jmp
adc
int3
dec
ss
sbb
bound
or
sbb
jae
ins
sub
or
mov
pop
xchg
les
or
jge
cmp
or
push
(bad)
inc
sub
push
ret
cmp
mov
pusha
or
or
xchg
sub
push
inc
xchg
test
test
inc
leave
dec
mov
inc
mov
das
out
cmp
push
xor
lock
cmp
jmp
add
fimul
inc
adc
idiv
(bad)
mov
adc
shl
iret
dec
dec
and
xchg
jmp
ss
pop
jle
or
ffreep
mov
loopne
push
fcomp
pop
xor
fisubr
push
lea
jle
(bad)
mov
dec
push
xchg
outs
fs
ins
lods
inc
pop
mov
in
sub
xor
sbb
jle
(bad)
popf
ja
in
or
or
mov
rcr
dec
push
clc
pop
and
push
and
push
sub
in
inc
fndisi(8087
xchg
pusha
cdq
mov
or
sbb
in
inc
inc
cmp
add
sbb
js
loope
(bad)
movs
fcomp
mov
adc
sub
adc
mov
fadd
dec
xchg
ror
loop
in
outs
popf
scas
jmp
cmp
ffreep
out
retf
jns
gs
ds
xchg
in
xor
jp
cmps
outs
pop
ja
push
test
jmp
xchg
sbb
fs
popa
lock
push
daa
cdq
xor
loopne
or
jle
daa
in
xchg
(bad)
xor
iret
xchg
mov
jb
cmp
shl
push
sbb
jns
inc
cmp
cdq
cwde
fidiv
or
mov
neg
rol
adc
mov
cmp
sub
pop
sti
push
mov
adc
sti
sub
cld
mov
not
es
pop
or
xor
and
mov
shr
shl
jmp
or
adc
rcl
mov
out
outs
inc
xchg
imul
outs
shl
mov
push
xchg
fstp
in
dec
inc
push
xchg
inc
std
ja
icebp
mov
int
sub
js
outs
xchg
ret
dec
arpl
call
and
adc
imul
ins
in
adc
pop
jmp
pop
int
xchg
cmps
xor
cmp
lahf
ja
cdq
mov
adc
mov
cdq
pushf
iret
std
movs
push
inc
cmp
mov
loopne
jl
xor
imul
out
cmp
jb
cdq
out
loop
sub
test
das
jg
cmp
lods
xor
and
lods
enter
outs
dec
out
xchg
push
cmp
add
psrad
(bad)
xchg
mov
leave
adc
hlt
lods
add
sbb
mov
sub
fucomi
pop
inc
sub
mov
xchg
push
add
scas
jp
adc
dec
cmp
or
inc
xchg
imul
movs
dec
lds
lods
mov
xchg
push
cli
add
pushf
inc
cmp
mov
(bad)
mov
cmp
test
pop
sub
ins
sbb
add
add
mov
mul
js
xor
sbb
mov
jp
inc
repnz
loope
jg
js
mov
icebp
das
fimul
adc
ror
and
scas
outs
push
lods
inc
fs
xor
cmp
dec
jo
mov
scas
xchg
(bad)
push
pop
adc
in
ins
hlt
jae
push
inc
mov
sub
mov
pop
inc
cs
add
mov
ds
ficom
sub
arpl
push
add
push
cmc
bound
cmc
pop
das
leave
test
pop
imul
out
push
pop
es
test
sbb
repnz
lea
xchg
in
call
xchg
push
fimul
int
movs
pop
into
push
mov
test
shl
ret
sbb
mov
nop
imul
ret
rol
cmp
dec
hlt
idiv
mov
cmps
movs
rcl
sbb
mov
iret
pop
jle
adc
int
loop
and
imul
stc
popf
cmc
mov
push
ins
inc
sbb
cmp
sbb
iret
xchg
jp
lahf
mov
movs
sahf
mov
adc
ret
sbb
adc
mov
dec
xchg
sub
std
mov
pop
jo
or
ret
cmp
inc
iret
xchg
gs
pop
push
imul
dec
retf
into
repnz
cmp
push
call
jp
xor
dec
test
div
shl
hlt
mov
add
adc
sahf
jne
and
xor
leave
loope
fwait
in
mov
shl
mov
out
fisubr
retf
and
sbb
inc
cmp
hlt
cmps
fsubr
mov
add
xor
cmp
add
cmp
push
mov
out
gs
and
cmps
ret
dec
jns
ins
adc
fimul
call
jbe
or
call
(bad)
xor
test
stos
jle
xor
cmp
es
popf
nop
out
inc
test
mov
xchg
xchg
leave
fisubr
push
test
int3
adc
lods
jmp
fisubr
mov
and
out
xchg
stos
fidiv
push
inc
xchg
sub
jns
mov
mov
adc
lahf
sti
aad
mov
cdq
or
iret
je
int
sub
rol
cld
push
outs
add
jp
pop
jmp
pop
push
inc
cmps
rol
mov
imul
cwde
xor
std
mov
iret
lahf
adc
scas
mov
mov
inc
lods
std
push
inc
rcr
pop
lds
cld
ret
jno
or
repz
sbb
jbe
adc
inc
cmc
retf
push
push
jmp
push
xor
movs
add
ret
outs
leave
mov
(bad)
in
in
adc
push
cmp
xchg
aad
hlt
fdivr
js
mov
pop
jp
pop
mov
test
push
(bad)
mov
sahf
movs
data16
je
cld
sub
and
dec
sbb
lock
push
enter
or
add
shl
sub
xor
sub
xchg
je
push
push
pop
daa
fisub
dec
jle
out
daa
jp
sbb
inc
xor
in
cdq
cmp
sbb
cmp
sbb
mov
jmp
cdq
push
lea
(bad)
push
call
fiadd
xchg
and
test
mov
hlt
xor
lock
out
cmp
xor
sbb
sub
sub
pop
mov
or
mov
scas
lods
pop
scas
fsub
mov
mov
leave
inc
sbb
pop
inc
sbb
jbe
xor
ins
sahf
shl
lahf
retf
in
sbb
inc
mov
call
movs
fwait
in
jecxz
mov
pop
mov
add
std
mov
cmp
bnd
adc
or
out
dec
dec
sahf
add
clc
pusha
lahf
mov
inc
dec
js
adc
in
adc
add
ret
mov
lods
xor
cmp
and
pop
mov
inc
int3
mov
jae
mov
imul
add
ss
mov
mov
cwde
in
cmp
xchg
in
or
dec
mov
ficomp
loopne
cdq
xchg
mov
outs
jge
cmps
fsubrp
cmps
frstor
mov
test
movs
(bad)
pop
(bad)
into
or
cmc
push
aam
sbb
iret
mov
xchg
adc
ss
xor
outs
cmps
cmp
add
and
mov
pushf
clc
in
mov
jecxz
clc
mov
push
outs
mov
and
xchg
das
outs
adc
xchg
cmp
lahf
add
xor
movs
inc
mov
jae
es
pop
popf
cld
add
xchg
out
dec
mov
sub
push
out
test
ja
mov
retf
sub
fcmovb
inc
or
mov
jle
inc
mov
hlt
xor
in
cld
into
jns
cmp
daa
pop
xor
add
dec
xor
ror
inc
sub
arpl
fcom
xor
popa
sbb
add
cmps
cwde
sahf
fdiv
jg
jno
xor
in
sub
mov
inc
sub
xor
mov
pop
mov
sub
rol
ins
jns
arpl
or
ret
inc
pop
cmp
xchg
cmps
push
inc
xchg
retf
(bad)
cmp
jae
push
(bad)
clc
xor
ficomp
jne
sbb
sbb
retf
cmp
cld
popf
adc
jle
cmp
sbb
jge
or
int3
icebp
retf
adc
push
aad
push
pusha
shl
ss
pusha
sub
daa
add
jl
adc
pop
xchg
daa
sub
pop
dec
test
js
sbb
in
clc
cmps
shr
mov
pop
nop
(bad)
fldlg2
add
inc
into
ja
loop
cmp
pop
idiv
mov
pop
mov
xchg
push
push
aas
xchg
mov
mov
xchg
pop
inc
inc
jl
into
hlt
(bad)
js
(bad)
push
jnp
mov
int3
mov
es
sahf
inc
iret
dec
std
sub
not
mov
or
xchg
in
or
repz
inc
aaa
(bad)
sbb
pop
and
and
mov
pusha
xor
icebp
retf
and
dec
pop
arpl
cs
inc
imul
mov
cwde
adc
add
or
sbb
pop
(bad)
imul
and
inc
push
sbb
add
sbb
loop
push
sti
loopne
inc
call
rol
xor
mov
xor
mov
jns
fsubr
in
scas
cwde
adc
shl
pop
pop
daa
mov
pop
cmps
mov
scas
add
jge
push
push
xchg
ds
loope
cwde
fild
cmps
sub
popf
les
push
lods
mov
aam
xchg
retf
pop
sar
ret
xchg
test
xchg
sbb
push
inc
push
sbb
cld
adc
xlat
jl
fxch
jne
call
inc
ficom
push
jb
call
outs
jo
inc
and
fst
nop
loope
jecxz
cwde
fistp
mov
outs
pop
stc
inc
pop
push
das
gs
nop
xchg
sti
(bad)
aam
sub
adc
push
mov
imul
sub
sub
fidivr
aad
test
pop
sbb
in
lods
enter
sbb
in
mul
dec
xor
push
outs
jno
mov
loope
xor
mov
adc
ret
not
mov
mov
gs
adc
sub
mov
in
je
xchg
jae
mov
test
in
and
(bad)
loope
xchg
loopne
fistp
adc
sahf
loope
cs
rcl
and
test
pop
inc
cs
pusha
stos
mov
cmp
sbb
adc
lods
mov
inc
sbb
jmp
(bad)
ja
ror
ss
rol
(bad)
mov
dec
xchg
jp
js
dec
jp
mov
add
pop
mov
outs
mov
mov
jae
xlat
mov
aad
xchg
xchg
mov
ret
mov
push
adc
pop
mov
jge
push
xor
xor
(bad)
arpl
sbb
cld
fbstp
and
pop
and
out
xor
nop
jle
jl
xor
(bad)
add
cld
xchg
(bad)
xchg
mov
cmp
adc
outs
jecxz
cmp
and
sub
sub
push
sar
sar
repnz
icebp
xchg
and
or
lods
loopne
mov
stos
or
fwait
cmps
jge
mov
hlt
sub
xor
mov
(bad)
sbb
lods
fs
sub
clc
je
call
addr16
cmp
sub
enter
(bad)
pop
test
inc
pop
mov
jge
push
mov
movs
xchg
mov
dec
mov
add
add
sar
sbb
loop
sbb
sar
jns
mov
sub
add
jae
dec
in
push
cmc
pop
inc
arpl
arpl
add
or
cdq
scas
jbe
cwde
mov
xchg
push
xchg
dec
xor
push
push
jp
cdq
into
jae
pop
sti
(bad)
pop
shr
inc
xchg
lods
add
fsubr
mov
jmp
in
lods
dec
ins
test
and
test
out
push
test
sub
sar
inc
xchg
cmp
cmp
in
in
dec
ds
inc
cdq
stos
mov
ror
sub
jle
test
cmp
loopne
jo
mov
(bad)
cmps
or
cmp
dec
mov
inc
je
adc
mov
mov
clc
ja
call
icebp
pop
je
mov
jg
inc
retf
stc
arpl
pop
mov
ror
add
retf
and
arpl
jbe
test
fwait
das
pop
cs
ror
ret
jbe
lds
imul
jno
ds
mov
add
es
mov
xchg
clc
and
push
mov
iret
ss
sbb
xchg
out
pop
inc
(bad)
inc
jne
push
or
mov
push
mov
popf
out
dec
push
(bad)
rol
(bad)
pop
mov
or
sbb
pop
cdq
mov
inc
fist
and
sub
push
cld
or
or
jo
fild
xchg
or
ret
test
jnp
sub
scas
sub
cmps
jmp
std
and
cmc
mov
inc
mov
aas
aas
lock
cld
out
cmc
dec
pop
push
sub
cmc
in
mov
or
arpl
jmp
nop
mov
adc
mov
addr16
mov
mov
imul
xchg
mov
retf
outs
test
xchg
cs
add
aas
add
push
cwde
adc
shl
iret
pushf
mov
sar
lods
ds
outs
inc
mov
dec
stos
dec
stos
push
inc
sub
jl
fld
xor
pop
or
mov
push
dec
mov
xor
mov
(bad)
add
xchg
lahf
or
mov
mov
fisub
iret
xlat
sub
mov
aam
test
mov
cmps
ret
outs
cmp
pop
test
jne
fsub
pop
push
mov
and
or
jne
xchg
out
jne
inc
cld
lods
xchg
daa
int
ja
adc
fmul
lods
imul
inc
scas
inc
(bad)
(bad)
push
test
jne
lahf
ret
out
and
jg
imul
lahf
ret
xor
les
pop
fs
(bad)
scas
sbb
sar
popf
xor
pushf
push
adc
outs
cdq
imul
or
push
mov
cmps
movs
daa
jne
nop
mov
retf
scas
fld
jmp
push
shl
dec
mov
jmp
cdq
and
xchg
into
push
cmp
in
pop
clc
xchg
bound
mov
inc
in
mov
daa
sub
pop
(bad)
movs
jecxz
dec
ja
(bad)
sahf
mov
dec
lahf
inc
push
icebp
into
sub
out
fsubr
mov
jbe
jecxz
mov
cli
cld
sbb
rol
out
(bad)
jne
fdiv
adc
xor
and
xchg
addr16
movs
popa
repz
add
test
or
cdq
push
pop
jg
(bad)
sbb
add
cwde
mov
jno
ss
pushf
mov
outs
jo
add
dec
jl
pop
mov
jbe
ins
lods
in
jmp
add
in
mov
pop
aas
dec
push
les
(bad)
loop
ins
jmp
inc
call
pop
jns
xchg
stc
cld
push
xor
stos
call
scas
gs
cmp
mov
outs
jmp
cli
aaa
xchg
inc
adc
xor
pop
xor
pop
or
adc
mov
xor
or
aaa
bound
nop
or
hlt
loopne
push
ds
inc
add
dec
push
mov
mov
pushf
push
and
lahf
out
add
dec
js
xor
cmp
imul
mov
sbb
lahf
mov
popf
jo
stos
xchg
xor
adc
loop
or
in
mov
pop
sub
jno
lods
lea
adc
scas
mov
mov
mov
pushf
and
stos
int
(bad)
push
sti
(bad)
fst
and
sbb
(bad)
dec
add
sbb
cdq
push
xor
in
jnp
dec
mov
lds
jle
mov
hlt
lahf
sti
scas
xchg
sti
fwait
xchg
mov
mov
sub
push
ret
cmps
cmp
adc
les
scas
mov
ins
cwde
ret
inc
sub
mov
pop
aad
and
mov
sub
scas
lds
sbb
xchg
ret
add
sub
sbb
retf
cld
dec
xor
pop
pop
mov
jg
vcvtsi2sd
sbb
(bad)
in
stc
sbb
xchg
xor
fldenv
std
mov
xchg
and
aaa
push
call
jnp
out
xchg
jne
inc
nop
arpl
fstp
mov
loope
jle
mov
sbb
sbb
cs
xor
pop
xchg
cli
into
sbb
or
mov
outs
mov
or
lea
ror
out
mov
pop
imul
mov
or
sub
sub
test
mov
fcom
mov
mov
sub
sub
push
inc
test
add
stc
xor
inc
jle
mov
or
ds
or
xchg
cdq
test
xchg
aad
pusha
sbb
les
in
out
mov
(bad)
leave
adc
xor
sbb
das
addr16
iret
sub
push
enter
mov
cmp
inc
arpl
dec
xchg
jnp
adc
lods
test
(bad)
icebp
mul
adc
test
and
scas
mov
push
dec
add
xchg
dec
push
pop
xchg
mov
cli
pusha
dec
shr
popa
stos
movs
es
(bad)
or
and
data16
sub
dec
lds
mov
int
dec
pop
mov
fs
push
scas
test
repnz
lds
pushf
popf
outs
inc
cmp
jns
aas
dec
fadd
mov
add
mov
push
shl
in
movs
cmp
repz
mov
mov
out
push
js
pop
shl
sub
retf
xchg
js
mov
jbe
xchg
jp
ret
in
mov
xor
or
jecxz
or
je
push
pushf
fsub
cwde
sub
jge
aas
in
inc
xchg
into
mov
adc
ins
call
dec
sub
jle
scas
sbb
lock
cli
and
jb
push
inc
add
push
adc
rol
lock
cld
jp
pop
rol
mov
loopne
mov
add
jbe
add
push
stos
add
mov
(bad)
fwait
mov
(bad)
std
sbb
adc
pop
gs
ficom
movs
mov
fwait
xor
mov
cdq
add
aam
jmp
mov
push
dec
jge
and
gs
and
pop
or
out
cmp
xchg
jbe
pop
mov
mov
int3
sub
or
add
and
int3
nop
popa
pop
lahf
div
es
sbb
fcomi
in
ficomp
es
sbb
mov
jns
(bad)
mov
dec
inc
out
sub
mov
in
(bad)
push
addr16
in
pop
mov
ror
in
fstp
mov
add
mov
dec
cmps
loope
push
sub
arpl
loop
out
aad
jns
mov
xchg
mov
mov
pop
ror
in
jnp
outs
cmc
xor
xor
jno
cmp
inc
inc
mov
lds
sbb
and
inc
outs
cld
sbb
sar
and
sub
jns
xchg
je
cmp
int
mov
rol
adc
sub
jae
addr16
mov
lds
mov
cmps
mov
(bad)
push
inc
inc
jmp
jp
or
adc
nop
pop
push
cmc
inc
pop
xchg
std
jmp
gs
xor
cmc
out
cmp
aaa
int3
movs
cmps
iret
ins
les
jne
sahf
push
fld
sbb
pop
add
fldenv
enter
add
dec
push
iret
out
int3
and
mov
fisub
mov
mov
inc
or
bound
daa
jb
dec
cmp
mov
pop
jecxz
mov
(bad)
jmp
adc
lahf
pop
test
cmp
cmps
aaa
int
lds
aam
cmps
sahf
sbb
in
movs
push
stos
mov
rol
loope
loop
mov
call
out
das
out
mov
loope
retf
or
loopne
popa
sub
mov
out
cld
push
xor
pop
aaa
icebp
sub
or
sbb
cdq
(bad)
cmps
(bad)
js
enterw
das
cmps
repz
xor
ja
ja
retf
jbe
pop
data16
push
sub
sub
cld
nop
pop
pop
int3
outs
dec
aad
test
out
in
pop
out
sub
sbb
or
fldl2t
cmp
sti
pop
jno
adc
test
mov
retf
cmps
nop
and
std
cdq
popa
scas
jno
xchg
aaa
lldt
ret
daa
popf
data16
in
mov
cli
push
icebp
fmul
(bad)
(bad)
das
mov
and
call
fisttp
mov
sbb
ja
sub
dec
leave
xor
mov
pop
dec
push
sahf
or
add
loop
mov
xchg
fcmovnbe
cmp
push
jecxz
jo
mov
cmps
iret
inc
cwde
add
push
xchg
dec
push
aam
or
xor
push
popf
js
(bad)
rcr
and
jp
inc
sub
push
sbb
ss
ins
push
push
retf
jo
cmp
add
and
enter
cmp
es
iret
inc
es
aad
sub
aas
pop
stos
loopne
xchg
inc
sahf
adc
inc
jbe
(bad)
shl
adc
lods
hlt
xchg
jg
xlat
hlt
mov
sub
pop
cmp
mov
cmp
inc
lock
cmp
les
pop
xadd
arpl
rcr
sbb
ins
mov
dec
xor
ret
lock
ret
jmp
lea
fs
push
cwde
fadd
retf
xchg
aas
jl
ret
int3
sbb
test
pop
retf
test
lahf
shl
push
sar
inc
mov
dec
pop
rcr
stos
push
outs
sub
test
daa
xor
xchg
xor
sub
jp
xchg
adc
and
(bad)
leave
add
mov
mov
pushf
(bad)
pop
cmp
and
and
add
sahf
lea
test
scas
stos
das
cmp
icebp
cmc
jg
cmp
and
retf
rol
cld
xor
daa
jmp
xchg
aad
sbb
pop
xchg
out
daa
ret
repnz
out
xchg
and
repnz
adc
or
ror
mov
inc
in
jne
add
cmp
xor
movs
stos
mov
or
jmp
fmul
jmp
add
shr
enter
push
daa
retf
xor
and
outs
ror
daa
cmp
jnp
jnp
fisubr
xchg
push
xchg
cli
test
xor
and
not
aas
add
gs
lds
or
stos
pushf
sbb
pop
pop
gs
imul
xor
(bad)
call
test
retf
repz
add
call
mov
cmp
or
rol
lahf
idiv
push
out
adc
loop
cmp
pop
push
inc
push
add
adc
fiadd
cdq
lods
shl
dec
clc
je
es
int3
inc
test
push
mov
mov
xchg
call
js
xor
into
mov
push
mov
inc
push
sahf
call
adc
push
cmp
addr16
xor
daa
sub
test
fdivr
xchg
mov
sbb
cmp
pop
mov
mov
call
mov
out
jae
push
aas
lds
(bad)
pop
shl
cmps
movs
mov
or
je
adc
js
xchg
aas
mov
loopne
jbe
(bad)
sti
sub
inc
ret
xchg
mov
and
stos
das
sub
idiv
cmp
pop
das
and
out
gs
push
inc
shl
not
mov
imul
test
xchg
mov
(bad)
pop
repnz
hlt
push
mov
xor
call
cmp
cmp
jecxz
cmp
test
aam
leave
icebp
jmp
dec
mov
push
jg
and
pushf
sbb
lds
dec
mov
inc
scas
push
cmp
aas
adc
(bad)
iret
jmp
pusha
arpl
sub
push
or
mov
xor
sub
ror
(bad)
mov
shl
rol
mov
pushf
mov
ss
jnp
imul
sbb
sbb
int3
imul
jmp
ins
hlt
push
mov
test
mov
retf
dec
pop
fdivr
jle
xor
or
add
jge
scas
sti
or
dec
dec
dec
das
lods
sbb
sub
jae
hlt
dec
mov
jmp
test
nop
out
mov
or
push
inc
loopne
clc
xchg
inc
retf
adc
dec
add
push
cmp
test
int
test
cmc
jb
push
out
sbb
pop
dec
dec
popaw
cmp
add
add
out
aam
imul
test
rep
sti
and
and
xchg
push
add
inc
enter
xor
ds
aaa
and
dec
cs
xchg
clc
sub
mov
in
cmp
fild
aam
js
and
rcl
push
add
outs
not
inc
fwait
test
mov
add
mov
(bad)
lock
cmp
data16
test
cli
cmp
cli
mov
jg
les
mov
fisub
or
fldcw
mov
adc
jle
add
shr
ins
cmp
(bad)
cmp
pop
push
jb
mov
mov
call
or
icebp
or
retf
dec
mov
jl
jle
xchg
jo
jmp
cmp
aaa
cdq
mov
pop
dec
ss
btc
cdq
push
pop
push
fild
mov
in
cmp
stos
and
xor
(bad)
or
lds
add
mov
fistp
int3
fimul
outs
lds
hlt
fmul
fild
call
sti
add
cmp
push
jp
xor
in
or
(bad)
xchg
or
pop
rcl
push
add
iret
push
adc
pop
fwait
adc
scas
shl
sub
sar
in
lods
lock
cs
int
mov
data16
mov
nop
mov
jnp
stos
(bad)
aaa
jns
out
sub
loop
aaa
movs
mov
in
ret
into
call
shl
in
mov
pop
test
xchg
ror
rol
js
mov
test
jge
int3
adc
out
and
fbld
fst
xchg
popa
cmp
pop
loopne
stc
jg
pop
and
(bad)
cmp
xchg
(bad)
adc
cmps
je
sub
rcl
scas
inc
pcmpgtw
sub
(bad)
retf
jno
and
push
jae
mov
lds
jmp
sub
dec
pushf
or
jp
adc
addr16
jl
xor
cmp
or
pushf
adc
scas
mov
mov
push
ss
movs
fsubr
imul
test
rcl
jno
cmp
xchg
and
mov
inc
aam
sub
nop
test
push
in
call
mov
sahf
and
cmp
in
sar
mov
mov
stc
popf
nop
cmp
loopne
test
xchg
ficom
mov
add
outs
push
ins
mov
rcl
les
and
fdivr
aas
pop
leave
retf
jp
and
int
stc
dec
sbb
xchg
cmp
jmp
fld
jae
sub
jecxz
xchg
sub
shl
je
xor
push
lods
mov
jge
cmp
or
shl
fstp
lahf
fmulp
fbld
inc
and
int3
mov
icebp
mov
test
push
and
and
dec
push
imul
cmp
(bad)
rcl
aas
xlat
dec
shufps
fcom
jp
mov
loopne
adc
lahf
mov
push
push
stc
aaa
jae
aas
mov
mov
shl
sub
addr16
mov
mov
out
adc
sub
mov
in
nop
test
fidiv
inc
dec
retf
push
dec
std
xor
ins
add
shl
or
stos
add
inc
data16
fld
push
mov
mov
xchg
and
icebp
out
cmc
cld
fwait
sub
cmp
push
xchg
aaa
loope
push
push
(bad)
cmc
and
lds
or
inc
jbe
mov
jbe
fisubr
ins
mov
sub
or
sbb
das
retf
inc
out
dec
adc
jb
push
mov
pop
adc
loopne
fisttp
dec
cmp
jno
sub
inc
retf
jno
jge
push
repnz
xor
push
or
jne
jbe
jb
mov
outs
jmp
mov
das
dec
and
push
mov
lock
cld
imul
add
mov
mov
mov
ja
cwde
pop
adc
out
adc
adc
scas
xor
push
pusha
push
and
xor
add
inc
jmp
fnsave
pop
inc
outs
arpl
sbb
pop
hlt
hlt
xor
sub
shr
xchg
mov
sbb
in
xor
mov
adc
jmp
ds
dec
jmp
retf
clc
scas
(bad)
rcl
inc
add
aam
int3
xchg
jg
fdiv
jl
mov
sbb
lahf
std
daa
mov
jge
repnz
nop
stos
stc
not
pop
and
inc
mov
adc
rol
nop
(bad)
cmp
je
fist
pop
xchg
cmps
dec
xchg
xlat
sbb
sbb
xchg
test
cmp
or
dec
cs
outs
les
lods
adc
ror
and
pushf
push
mov
clc
and
adc
outs
in
loop
sub
mov
iret
ds
cs
dec
mov
(bad)
xor
dec
push
shr
hlt
xchg
addr16
or
aaa
mov
pop
daa
rcl
in
aad
aam
in
inc
aad
sub
pop
mov
or
stc
jne
push
out
pop
ret
mov
xor
adc
and
sbb
enter
hlt
dec
mov
add
jne
xor
jae
xchg
xor
jl
adc
cli
dec
mov
sti
outs
and
pop
sub
js
cmovns
lds
push
cwde
movs
scas
mov
pop
and
lea
inc
push
mov
push
adc
sbb
(bad)
loope
in
xchg
bound
mov
jge
jae
add
shl
outs
fwait
push
stos
adc
push
movs
push
retf
leave
xor
sub
or
push
mov
mov
sbb
sub
pushf
pop
add
call
ds
out
mov
xor
shr
int3
hlt
mov
retf
je
rcl
mov
mov
xor
lods
jl
hlt
gs
fs
mov
inc
jno
pop
arpl
jae
les
xor
test
retf
sub
jge
movs
jmp
(bad)
std
ret
cmp
es
push
ins
adc
hlt
call
cmp
sbb
fmul
inc
xor
and
enter
je
rol
push
je
leave
push
push
(bad)
pop
cmp
lock
das
pop
sbb
and
ret
mov
mov
add
cwde
mov
lods
adc
not
cmps
scas
mov
sahf
ins
mov
mov
mov
fdiv
mov
and
in
les
(bad)
xor
pop
sar
stos
cs
mov
fistp
pop
mov
cmp
mov
pushf
or
push
sbb
pop
pop
rol
sub
inc
push
cmp
pop
adc
dec
sub
push
sub
dec
or
sub
iret
test
inc
test
add
and
leave
or
mov
test
add
aad
popf
xchg
mov
fdivr
in
push
adc
sbb
mov
(bad)
jg
hlt
es
enter
and
gs
test
arpl
outs
push
ds
les
cmp
ja
adc
pop
out
sahf
pop
inc
and
xor
add
fdiv
sar
sbb
shl
and
pop
mov
jge
jg
push
sar
cmp
pop
xor
repnz
add
pop
scas
data16
dec
int
pop
fadd
ja
xor
ss
scas
mov
std
mov
mov
gs
fisubr
adc
lods
lods
push
ret
outs
hlt
leave
dec
sbb
dec
clc
xor
add
xor
gs
xor
jp
jae
add
add
aaa
popf
inc
(bad)
enter
push
imul
daa
dec
inc
dec
dec
jge
mov
cmp
mov
jae
jmp
loope
add
pop
xchg
out
xchg
mov
inc
mov
out
jbe
sar
mov
fxrstor
mov
mov
jge
pop
dec
(bad)
icebp
mov
movs
xchg
add
mov
add
jbe
sub
xchg
jle
(bad)
dec
fimul
jno
add
shl
cmp
xchg
aam
call
test
xlat
sbb
stos
leave
adc
loopne
mov
push
push
les
add
sbb
bnd
or
popf
jmp
xor
scas
test
xor
pusha
lds
shr
dec
mov
jge
in
xchg
jne
lock
jns
mov
mov
dec
adc
imul
adc
lods
call
test
cmp
lds
jecxz
gs
aaa
cwde
imul
(bad)
xchg
je
hlt
mov
(bad)
mov
inc
int
mov
int
push
add
lock
mov
scas
ds
or
push
pop
jne
xor
std
dec
nop
adc
dec
in
push
xor
pop
cmps
in
inc
jge
pop
fwait
inc
inc
rcr
cmp
sbb
jg
adc
push
shl
jmp
cmp
popa
call
mov
or
and
mov
sub
cmp
and
sub
push
push
sub
ja
sbb
adc
movs
data16
in
cwde
add
mov
sub
outs
pop
sub
sar
push
mul
ret
pop
mov
idiv
je
jecxz
sub
mov
inc
gs
dec
ficom
out
cmp
xor
cmps
sub
cld
xchg
rol
data16
and
(bad)
in
fwait
dec
mov
jp
push
adc
xchg
xor
cmp
jmp
cmp
test
int
pop
sbb
mov
lods
adc
hlt
out
xchg
outs
das
aas
fnstenv
and
ror
out
adc
xor
and
arpl
fstp
inc
dec
lods
in
mov
les
inc
repz
aad
add
or
enter
stos
neg
push
or
or
scas
nop
sbb
or
xchg
push
dec
shl
rcl
xchg
mov
cmp
out
je
ret
(bad)
mov
neg
(bad)
push
clc
in
str
out
gs
xor
mov
shl
jle
dec
push
arpl
sub
lods
aam
dec
mul
jns
pushf
lahf
jge
mov
int3
out
mov
loopne
movs
out
push
inc
js
xlat
inc
js
inc
enter
cdq
jne
dec
jecxz
add
or
inc
pusha
mov
jnp
iret
int
cmp
(bad)
int
lds
sbb
outs
push
loopne
lock
ja
imul
mov
nop
inc
and
dec
test
lea
inc
mov
cli
dec
int
icebp
adc
xor
or
nop
cmp
es
iret
daa
lds
or
cld
xor
rol
adc
(bad)
ins
js
stos
jp
das
pop
jae
popa
dec
inc
stos
pop
call
jp
adc
clc
lock
int
retf
dec
cmp
loopne
enter
push
retf
inc
out
inc
pop
(bad)
retf
fwait
jbe
and
fistp
fsub
xor
adc
adc
in
loope
mov
out
fbstp
popa
repz
je
jmp
rcr
ja
ret
icebp
fwait
mov
adc
bound
push
data16
stos
mov
aad
pop
push
sub
mov
adc
sbb
jb
pop
imul
mov
sub
pop
ss
cmp
loopne
jne
test
mov
jge
pop
xchg
(bad)
faddp
pop
xor
push
jmp
cwde
xchg
pop
movs
jge
lahf
xchg
aas
cmp
sbb
adc
sub
jo
sbb
jle
mov
je
jae
aaa
ss
jg
mov
or
fisub
inc
pop
inc
(bad)
dec
fldcw
adc
add
jmp
sbb
jo
xchg
push
fwait
or
xor
xchg
sub
test
sbb
pop
mov
jo
add
test
scas
enter
jecxz
xchg
bound
sbb
push
ret
adc
mov
sub
mov
push
out
inc
inc
adc
dec
dec
call
xchg
ret
fdiv
lahf
adc
(bad)
scas
and
jne
call
enter
cmp
test
push
cmp
ja
jecxz
or
push
in
xchg
dec
stos
out
xchg
mov
scas
pop
dec
div
aam
inc
popa
or
sahf
xchg
xchg
dec
push
jmp
mov
sub
mov
pusha
imul
mov
sub
cmp
shr
aad
int
jl
leave
push
add
xor
fsincos
inc
mov
pop
retf
out
shl
not
sub
push
es
jb
xor
aad
aad
icebp
cmc
xor
mov
pop
aaa
adc
cmp
daa
movs
xchg
mov
mov
mov
mov
mov
dec
cld
pop
mov
mov
pop
cdq
push
push
sub
mov
xor
pop
pop
(bad)
and
xor
in
and
pop
jl
sub
inc
sub
and
(bad)
test
icebp
mov
call
xchg
pop
pop
pop
popa
mov
mov
sub
lods
mov
fist
out
or
aam
add
(bad)
(bad)
or
(bad)
jo
sar
or
cmp
jmp
into
push
in
lods
mov
and
dec
fst
mov
mov
jmp
inc
mov
jae
or
loop
dec
mov
call
sbb
in
aam
adc
stc
pop
xor
ror
mov
movs
test
shl
xor
push
imul
scas
xchg
in
les
and
enter
add
test
popf
jae
out
imul
dec
add
in
pop
outs
aam
bound
aaa
out
dec
mov
pop
dec
sub
mov
(bad)
(bad)
(bad)
in
das
(bad)
sahf
dec
xchg
popf
cmc
fild
dec
jo
ror
lahf
mov
dec
fdiv
jno
jmp
aad
daa
inc
fldcw
jecxz
mov
mov
dec
inc
mov
mov
out
rol
dec
adc
and
and
fwait
cs
cmps
and
sbb
xchg
mov
xor
xor
lahf
popf
mov
jne
xlat
xor
pusha
test
or
or
arpl
jmp
inc
and
cmp
fist
dec
aaa
mov
push
add
mov
movs
sbb
int
push
out
push
cs
movs
pop
dec
push
repz
cmps
stos
sub
xchg
call
adc
add
dec
adc
adc
out
bound
neg
add
or
into
maxps
call
ret
or
outs
dec
repz
jae
push
lds
jl
enter
jle
arpl
ret
int
pushf
fcomp
or
mov
popf
push
jl
(bad)
cmp
jns
or
hlt
xchg
pop
sub
xchg
ins
mov
push
add
je
or
jbe
daa
and
push
inc
rol
xchg
sahf
xor
stos
jmp
popf
cmp
pop
mov
pop
ss
mov
inc
mov
adc
call
into
shl
sub
pop
inc
lods
pushaw
xor
dec
nop
into
pop
jg
mov
cdq
cmps
cmp
je
mov
dec
cmp
loopne
call
adc
mov
scas
sub
mov
inc
adc
loopne
repz
xor
push
jae
fwait
mov
stos
and
cli
bound
bound
xor
inc
or
mov
cmp
xchg
jno
scas
mov
mov
test
(bad)
cld
dec
add
adc
test
ror
repnz
das
bound
mov
cwde
mov
popa
jecxz
dec
bound
out
outs
test
mov
movs
sbb
idiv
mov
adc
adc
and
or
fucomp
xchg
or
fsubr
adc
cmp
xchg
cld
mov
mov
mov
cmp
xchg
sbb
xor
pop
push
cmp
bound
(bad)
push
retf
mov
or
jno
les
arpl
or
sahf
(bad)
scas
mov
test
push
sbb
and
dec
test
es
ficom
mov
xor
dec
pop
es
adc
lods
or
jns
push
mov
lods
xchg
push
rcr
fisttp
and
pop
jmp
and
or
xchg
jb
xchg
cmp
ret
addr16
mov
cmps
pop
and
in
fucompp
je
push
ds
jbe
adc
cmp
inc
inc
mov
ret
xchg
pop
stos
jmp
sbb
imul
mov
fwait
jnp
movs
pcmpgtw
rcl
imul
xchg
adc
sbb
lea
push
sbb
call
cmc
mov
out
cmc
sahf
(bad)
test
ins
lods
shl
outs
mov
fcom
loop
sub
jb
jge
xchg
add
xlat
push
clc
or
jl
fwait
hlt
adc
mov
popa
cld
jecxz
dec
adc
jecxz
in
mov
rcr
data16
jb
fisubr
and
or
rcl
test
popa
enter
loop
sub
jnp
enter
shr
sub
jbe
jae
call
rol
pop
shl
fstp
lods
cmpxchg
mov
outs
inc
xchg
scas
sbb
mov
fs
mov
sub
add
stos
fild
sar
push
add
mov
popf
movs
mov
xchg
fistp
mov
stc
adc
leave
aas
adc
sbb
and
iret
and
(bad)
fnsave
rcr
sub
fld
sub
push
push
mov
push
push
jg
push
xor
adc
(bad)
repnz
xor
push
std
pop
loop
jnp
jo
xchg
xchg
int
or
addr16
retf
(bad)
das
aaa
clc
movhlps
(bad)
inc
arpl
mov
mov
push
sub
mov
fucomp
xchg
rdpmc
cmp
out
mov
(bad)
xchg
outs
mov
bound
sub
cmp
and
push
pop
sub
fsub
pop
bnd
in
stos
and
mov
or
lds
fcmove
mov
addr16
cmp
rcl
sub
sbb
outs
dec
jb
retf
out
xchg
xchg
or
popf
js
aaa
int3
cmp
leave
pop
xor
clc
shl
ficomp
ret
jbe
clc
xor
icebp
push
stc
inc
dec
aam
cmp
mov
sti
enter
aam
in
loop
adc
movs
out
cmp
pop
cmovp
arpl
fimul
sub
adc
pushf
sbb
sub
stos
jo
sbb
hlt
jnp
mov
or
dec
jecxz
cmp
push
ret
pop
sbb
nop
out
xadd
and
mov
sub
stos
fisttp
ficomp
daa
loop
mov
push
in
mov
out
imul
pop
into
call
vcomisd
xchg
jle
enter
arpl
dec
mov
mov
ret
mov
mov
inc
push
xchg
sub
mov
psrad
or
lods
inc
aaa
add
xchg
xchg
mov
mov
mov
mov
in
pop
mov
pop
loope
ror
sub
clc
push
sbb
std
pop
lods
jg
std
dec
pop
jmp
pop
and
jmp
aaa
shl
xchg
xchg
mov
jge
out
loope
and
jne
jl
test
shr
push
sub
inc
cmp
mov
dec
gs
sub
outs
push
and
or
push
scas
imul
aaa
nop
mov
cmp
loopne
mov
pop
lods
jne
xor
xchg
push
inc
sbb
stos
scas
xchg
cmp
mov
xchg
or
inc
mov
push
(bad)
gs
sub
xor
or
push
cs
shl
jne
mov
cli
cmps
mov
test
and
jecxz
mov
mov
jb
cmp
loop
adc
call
das
dec
mov
das
mov
icebp
or
nop
sbb
jg
retf
mov
call
adc
fist
cmp
aad
dec
call
cmc
mov
outs
dec
xchg
fld
in
inc
inc
call
xor
dec
scas
and
and
sbb
sbb
mov
mov
cmp
das
out
add
jo
dec
rcr
jno
aaa
xchg
push
or
xchg
out
addr16
xchg
mov
lds
or
add
sub
cmps
mov
call
mov
xchg
mov
jnp
mov
fidivr
mov
ins
cmp
mov
mov
push
lods
(bad)
ud2
aam
xor
or
clc
mov
xchg
bnd
out
adc
and
cmp
pop
push
ins
pop
retf
retf
(bad)
cmp
jle
(bad)
int
pop
inc
int3
ins
mov
scas
outs
aam
shr
stc
push
fadd
or
out
aam
dec
ins
pop
sbb
push
adc
fisub
mov
das
add
int3
mov
(bad)
mov
pop
std
mov
adc
lods
pop
ins
or
add
cmp
(bad)
test
cmp
fnstenv
mov
retf
jmp
mov
in
nop
stc
je
(bad)
arpl
inc
addr16
fistp
(bad)
jnp
out
(bad)
pop
dec
lds
mov
aaa
sbb
pop
push
scas
xor
push
gs
jmp
clc
sbb
fmul
push
sub
call
out
call
mov
into
inc
les
in
jmp
jnp
push
sahf
repz
fsubrp
inc
sbb
xor
xchg
mov
dec
push
in
movs
xchg
mov
ror
daa
mov
jl
mov
push
jg
mov
sahf
adc
and
(bad)
outs
sbb
lds
push
cmp
sub
xor
add
inc
push
xchg
cmp
in
add
inc
sub
jnp
inc
sbb
sbb
pop
bswap
in
inc
pop
fldcw
ja
xor
and
das
push
stos
frstor
add
popa
jo
mov
inc
dec
mov
push
loop
daa
daa
mov
sbb
cmp
push
inc
add
hlt
pop
inc
imul
fwait
adc
jae
mov
push
inc
les
sub
push
or
adc
xchg
xchg
xlat
or
lea
fisttp
cmp
test
push
mov
nop
sbb
mov
push
(bad)
in
or
out
mov
lods
outs
(bad)
das
mov
loope
addr16
mov
cli
mov
mov
pop
jo
or
sub
in
push
xchg
loopne
push
retf
pop
and
in
jo
sbb
dec
pop
cmc
xchg
inc
fmul
xlat
pop
pop
inc
repnz
fsubr
mov
and
cwde
out
mov
sub
and
ins
or
sub
add
jns
fsub
pop
xchg
(bad)
cwde
mov
fdiv
in
out
lods
jae
popf
into
aad
mov
pop
or
cld
not
daa
mov
in
inc
add
test
repz
loope
xlat
iret
lock
and
cld
mov
sub
pop
pop
inc
sub
push
pop
loop
xchg
(bad)
dec
imul
call
mov
and
sub
and
pop
dec
pop
xchg
jecxz
into
mov
ins
xlat
test
adc
inc
pop
and
cmc
neg
add
dec
sub
jae
jl
jecxz
add
sbb
loope
xor
inc
mov
mov
cmp
cmp
movs
es
mov
xchg
xchg
jp
mov
loope
stos
aam
cli
xchg
clc
add
and
pop
xchg
push
sbb
enter
fisub
pop
or
cmp
call
test
mov
out
ds
out
pop
mov
add
sahf
repz
xchg
push
dec
dec
sub
xlat
add
arpl
or
jmp
mov
add
dec
retf
popa
jl
jge
test
test
sahf
and
mov
out
loopne
std
sbb
mov
lahf
fisttp
push
jl
mov
xchg
movs
inc
test
std
div
or
xor
pop
pop
iret
mov
inc
pop
add
sbb
out
dec
mov
cli
jnp
(bad)
daa
jnp
rol
jp
inc
xchg
call
fidivr
xchg
ret
clc
lock
or
std
ret
aad
inc
or
movs
std
sub
inc
cmp
out
xchg
dec
mov
in
xor
pop
call
shr
xor
fsub
sbb
ror
test
popa
jnp
adc
mov
xor
(bad)
push
fs
or
in
ret
pop
cwde
rol
xor
add
int3
imul
xor
ja
xchg
push
rcl
and
ja
and
add
jne
push
xchg
mov
in
push
std
push
in
jno
jmp
xlat
sub
pop
jb
mov
sbb
pop
push
fs
and
xlat
popa
lea
add
adc
(bad)
stos
idiv
add
aaa
add
dec
lods
aaa
push
adc
data16
aas
cmp
cmp
mov
lock
and
ret
pop
cmp
xchg
test
mov
cmp
mov
add
or
inc
jmp
hlt
imul
sbb
add
enter
xor
push
mov
stc
(bad)
xchg
inc
daa
gs
adc
jns
jmp
inc
fdiv
nop
lea
fcom
dec
mov
inc
lods
dec
(bad)
retf
js
sub
mov
jl
out
int3
out
hlt
call
jb
hlt
retf
retf
retf
cmc
mov
aam
xor
cdq
pop
dec
sub
iret
ss
in
sbb
je
or
stos
test
xor
(bad)
inc
clc
mov
add
cdq
sbb
pop
popa
cmps
scas
xchg
mov
and
leave
in
jmp
lds
inc
pusha
sub
enter
push
cmps
cwde
jns
mov
dec
push
int
leave
pop
push
inc
dec
icebp
lods
pop
popf
mov
mov
test
stos
xchg
fs
rcr
sub
mov
inc
xchg
imul
xchg
jne
dec
call
dec
std
ds
xchg
xchg
fwait
xchg
shl
cmp
xor
cs
mov
ficomp
cmp
inc
sti
movs
bnd
(bad)
shl
inc
adc
or
xchg
push
pop
xchg
lea
add
fcomp
and
add
rcr
add
std
int
int
(bad)
(bad)
jl
mov
mov
jmp
add
or
xor
outs
ror
mov
mov
pop
dec
xor
mov
push
ins
mov
cmps
jp
fdiv
mov
pushf
movs
cmp
dec
dec
stos
outs
daa
cmp
(bad)
and
imul
js
out
xchg
pop
add
ss
(bad)
mov
sub
test
pop
push
std
mov
inc
(bad)
mov
sbb
sub
bound
out
jnp
sub
mov
pop
stc
enter
je
pop
aad
pop
jmp
paddw
adc
xchg
in
jb
inc
test
mov
mov
dec
int
pop
mov
xchg
jae
test
jne
adc
mov
add
out
add
adc
loop
test
jp
adc
fcomi
aas
sbb
mov
pushf
lea
stos
inc
ds
xlat
sub
adc
sub
sub
sbb
add
pop
ss
push
and
pop
or
jl
ins
cmp
shl
sub
stc
xor
movsx
adc
add
int3
xor
lods
(bad)
sahf
mov
cli
push
xlat
popa
fidiv
jp
repz
mov
pop
cmps
icebp
sbb
inc
aad
jmp
mov
(bad)
loope
bndldx
jns
out
push
xor
push
push
jae
mov
arpl
cmp
and
xor
call
pop
sahf
sbb
in
rol
dec
mov
cli
jg
aad
push
je
fdivr
imul
jb
jecxz
(bad)
and
add
add
cmp
leave
fdivr
xor
adc
dec
mov
xor
ins
icebp
pop
mov
dec
or
jp
inc
sub
imul
sbb
ins
pop
xor
cmps
pop
push
lds
js
push
and
mov
into
sti
jmp
pop
xor
cs
loop
outs
and
adc
mov
jl
jno
mov
pop
push
and
mov
dec
fwait
iret
jne
fimul
(bad)
fidiv
pop
adc
and
add
mov
jnp
inc
scas
push
sahf
push
pop
stos
add
lods
mov
pushf
cmps
sbb
xor
sub
fwait
movs
mov
sub
jl
sar
pushf
scas
xchg
ror
jbe
dec
scas
cmp
push
out
dec
iret
repnz
mov
test
sbb
cmp
iret
dec
rcl
test
inc
dec
repz
jmp
xchg
and
outs
ins
fistp
push
mov
or
in
pop
das
(bad)
xchg
in
xor
loope
inc
xor
push
mul
mov
adc
dec
and
in
fnstcw
mov
inc
cmps
xchg
shl
adc
xor
xor
mov
pop
xor
push
ror
pop
jle
fcmovnbe
mov
addr16
pop
call
add
dec
adc
out
jmp
cwde
and
sub
out
leave
mov
je
sbb
push
push
(bad)
push
pop
mov
inc
fs
sti
(bad)
(bad)
fimul
mov
mov
js
mov
xchg
xchg
sub
je
repnz
mov
sub
not
dec
inc
mov
retf
lods
call
std
addr16
popf
addr16
cmp
mov
add
fcom
xchg
pop
ret
add
dec
or
icebp
push
nop
nop
and
fucomp
shl
mov
dec
div
(bad)
pop
das
sbb
jns
cmovbe
cmp
popf
pop
pop
push
sbb
jmp
lahf
aaa
in
xchg
(bad)
and
mov
and
(bad)
ss
pop
inc
or
or
add
push
test
xchg
xor
mov
add
xor
out
ret
repnz
xor
test
fucomp
lock
ss
jns
in
dec
(bad)
loop
cli
or
arpl
adc
cmps
fcomp
faddp
outs
stos
out
mov
in
pop
pop
(bad)
add
(bad)
adc
mov
popa
stos
cmps
loopne
in
stos
in
loop
push
das
cmps
repnz
pop
call
xchg
sbb
in
add
sub
inc
cmps
dec
sub
xchg
push
push
and
ret
adc
jl
stos
mov
xor
pop
xchg
add
sbb
mov
push
and
outs
push
bound
scas
fsubr
dec
xchg
pop
mov
add
pop
pop
dec
jmp
or
cdq
(bad)
lods
mov
out
data16
das
retf
in
aad
xlat
cmp
dec
push
xchg
push
idiv
rcl
jecxz
and
(bad)
mov
xor
repz
sub
inc
xor
pop
push
sbb
push
jle
jae
mov
adc
mov
stos
cmp
jae
mov
cmc
fbstp
mov
shrd
repnz
pop
lds
movs
pop
loop
in
sbb
mov
mov
mov
adc
mov
jns
cmps
and
(bad)
cdq
ins
jl
std
test
pop
jmp
and
jns
pavgb
in
mov
dec
mov
xor
mov
push
pop
inc
out
rcr
and
inc
pop
and
dec
imul
shr
movs
inc
shl
xchg
ficomp
mov
fdivp
mov
pop
push
into
mov
cmp
sub
arpl
dec
mov
sub
loop
add
jg
rcl
mov
and
jns
and
mov
dec
add
mov
jle
jle
out
pop
pushf
add
leave
lods
push
jecxz
mov
or
test
xor
(bad)
movs
mov
adc
sub
(bad)
sub
scas
ss
xchg
cwde
sub
fwait
sub
mov
and
into
push
push
cli
mov
jl
inc
mov
ss
in
push
in
repnz
adc
outs
and
cmpnleps
ins
call
shl
sub
jg
fisubr
aas
retf
jge
hlt
jge
outs
xchg
test
add
jmp
outs
lfs
(bad)
ror
pop
test
cwde
cmp
ficomp
lods
or
sub
popf
xor
movs
(bad)
jns
cmp
call
sbb
inc
xor
dec
clc
jbe
inc
nop
and
fnstcw
pop
push
cmp
jecxz
cwde
jmp
int
aas
int
or
pop
jecxz
push
cmp
fsubr
mov
test
sysenter
pop
pop
leave
adc
jg
pop
pop
sbb
adc
or
scas
sbb
sbb
iret
mov
sahf
jge
not
and
inc
pusha
lahf
mov
push
mov
inc
push
jmp
repz
push
stos
pushf
sahf
aas
sbb
and
ins
mov
in
cmps
mov
pop
mov
xchg
xor
movs
rcl
cmps
sti
shl
cmp
loop
(bad)
and
dec
sbb
push
push
cmp
dec
js
dec
call
sbb
ds
lock
jne
je
sbb
gs
outs
leave
jmp
and
push
add
sti
pop
aam
add
rol
xchg
push
ret
(bad)
gs
add
dec
jne
call
scas
es
xor
sar
and
mov
or
push
xor
jmp
push
jge
retf
push
int
cmp
out
(bad)
test
rcr
dec
push
call
not
push
mov
inc
mov
js
dec
dec
mov
add
push
pop
and
push
and
cmp
xchg
ret
add
xor
aas
pop
and
(bad)
out
(bad)
sahf
mov
cmps
and
out
sub
sbb
mov
cli
mov
sbb
pop
movs
retf
cmps
sbb
lock
sbb
jne
repnz
es
jge
out
push
sub
mov
in
mov
mov
jae
cmps
sub
enter
popf
adc
mov
retf
and
xchg
mov
sar
mov
xchg
repz
ins
rcr
pusha
test
lds
push
inc
add
ins
shl
popf
neg
inc
mov
inc
clc
fadd
lods
add
mov
loope
in
sahf
xor
ja
fdivr
out
mov
lods
or
ret
clc
or
rcr
stos
mov
outs
mov
das
adc
call
mov
ja
sbb
and
lock
test
sbb
scas
pop
cld
imul
icebp
add
fwait
leave
(bad)
jns
jnp
(bad)
cmc
xchg
mov
adc
aad
imul
push
sar
iret
jl
dec
push
jge
sub
movs
jmp
repnz
call
mov
inc
push
sub
outs
int3
(bad)
jns
mov
repz
cli
imul
and
aaa
je
nop
or
inc
mov
imul
push
cmp
aad
pop
int
dec
xor
add
mov
ror
repz
mov
or
call
ins
test
push
and
mov
inc
mov
xor
fist
cmp
retf
jbe
jle
cmp
stos
jno
das
and
adc
inc
xor
cmp
push
bound
loope
adc
cdq
cmp
xchg
jl
push
and
les
jns
push
sub
test
retf
jnp
ins
in
lods
jbe
xor
neg
test
add
cmp
lock
stos
test
add
(bad)
pop
mov
cmps
call
xchg
cmps
nop
cmp
or
inc
or
je
lods
leave
dec
cdq
and
std
pushf
pop
mov
lock
xor
push
xchg
fmul
mov
push
lahf
shr
leave
add
sub
pmaxub
ins
icebp
push
inc
sbb
pusha
ja
out
adc
call
pop
call
inc
xor
mov
push
(bad)
cmps
sbb
xlat
retf
mov
test
scas
mov
je
push
jp
fdivr
xor
xor
mov
mov
xchg
jae
xor
jae
sbb
sbb
inc
sub
push
mov
cmp
sbb
ja
cli
sbb
outs
stc
mov
sbb
xchg
sbb
jae
adc
mov
popf
fstp
rol
ins
cmp
hlt
out
pop
inc
loope
fnstenv
fxch
cmp
aas
ror
fwait
loope
es
and
dec
adc
mov
mov
popa
mov
iret
jns
xchg
ins
mov
pop
mov
mov
pop
cmp
cmp
aaa
stc
imul
dec
lods
sbb
inc
std
inc
scas
pop
cld
hlt
xchg
jl
jno
cld
retf
ins
cs
(bad)
rcr
inc
repnz
jmp
jg
dec
mov
outs
mov
pop
in
adc
mov
push
jo
inc
jmp
mov
mov
dec
es
aaa
out
inc
sub
(bad)
sahf
add
sar
mov
inc
dec
mov
sub
fsub
test
cmp
push
pop
adc
push
xor
jge
ja
mov
cmp
xor
lds
ror
mov
sahf
pop
scas
adc
and
sbb
pop
push
or
xchg
inc
inc
(bad)
sub
int
cmp
mov
xor
mov
scas
(bad)
test
movs
jmp
in
aam
aaa
fld
out
in
xor
xor
push
mov
arpl
xor
scas
movs
mov
scas
mov
das
mov
add
cmp
icebp
in
inc
mov
ds
mov
sbb
dec
and
push
out
int3
xchg
cmp
cwde
rol
adc
jmp
lahf
fdivr
dec
pop
dec
sbb
mov
out
and
mov
test
pop
xchg
fild
repnz
fwait
mov
cmp
sbb
or
mov
cmp
icebp
cmp
aas
push
scas
iret
push
mov
fcom
xchg
(bad)
sub
adc
(bad)
das
adc
imul
mov
scas
pop
ror
imul
push
and
xchg
xor
inc
jns
retf
push
lods
pop
dec
call
push
and
jle
jge
test
addr16
jnp
nop
xor
dec
mov
nop
add
sar
shr
jb
movs
cmps
repz
out
push
push
je
or
out
push
xchg
adc
cmp
push
outs
adc
sti
imul
pop
imul
fst
sbb
faddp
adc
inc
ja
daa
jmp
or
fdiv
pop
xor
and
loop
shr
adc
cmp
ret
dec
push
fld
scas
push
sub
int3
(bad)
pop
and
fs
das
sub
cmp
lock
mov
jl
xchg
pop
jbe
loope
das
jle
sub
fwait
in
mov
aam
cli
idiv
leave
push
test
dec
xchg
bound
mov
mov
sub
retf
xchg
xchg
sub
adc
jnp
push
mov
cmps
arpl
xchg
div
imul
frstor
cmp
in
xor
out
push
les
lahf
sbb
ss
jb
xor
iret
mov
jmp
fist
je
js
cdq
cmp
out
aad
or
and
je
test
push
or
pop
scas
jmp
xor
punpckhbw
adc
sub
or
pop
sub
jae
or
pushf
or
xchg
sbb
or
lock
clc
lahf
outs
inc
fdivr
add
imul
loop
inc
daa
scas
xchg
push
cdq
push
movs
loope
enter
mov
pop
mov
jbe
sub
ret
outs
movs
out
jmp
jne
xchg
nop
shr
mov
jb
cmp
jb
sbb
and
iret
ins
in
shl
push
(bad)
mov
dec
push
ds
sahf
imul
push
loopne
push
push
int
dec
mov
adc
mov
xor
fs
das
leave
(bad)
cmps
push
in
icebp
push
outs
call
lock
repz
mov
mov
mov
jle
inc
xor
rcl
ror
fwait
xchg
aad
push
inc
mov
mov
btc
adc
fisubr
cdq
stos
jg
arpl
xchg
iret
mov
(bad)
(bad)
cmc
ins
add
call
jae
inc
in
mov
mov
cdq
es
inc
ret
js
je
dec
movs
out
mov
sub
cmp
cwde
movs
xor
pop
mov
repz
test
and
mov
ret
popa
repnz
push
mov
add
arpl
inc
mov
out
icebp
sbb
das
das
inc
mov
fimul
and
(bad)
xor
and
adc
pop
gs
rcl
rep
cli
cld
xor
int3
fidivr
loope
dec
mov
jp
jl
sbb
cwde
jo
je
xor
and
add
mov
sar
mov
sbb
popf
xrelease
test
and
xor
jno
fstp
mov
loopne
cmp
(bad)
push
sbb
mov
cmps
dec
or
sbb
sub
ds
iret
repnz
push
or
sub
dec
jo
mov
ror
into
add
lods
jmp
mov
and
popa
mov
dec
add
fisubr
test
xchg
enter
adc
push
popf
mov
scas
loopne
inc
imul
pushf
aas
xchg
loopne
in
aaa
fidivr
xchg
daa
push
rcr
retf
and
mov
mov
test
in
retf
test
sbb
mov
enter
js
ret
sti
and
sub
imul
cmps
cwde
clc
loope
mov
push
addr16
neg
icebp
xor
sub
xchg
daa
(bad)
mov
out
push
retf
dec
jns
dec
cmp
fist
clc
stos
test
push
mov
push
sti
dec
jmp
pop
jns
int3
enter
adc
shl
jb
push
aad
mov
inc
jl
dec
pop
and
or
xchg
imul
imul
sub
cmps
dec
and
(bad)
outs
nop
stos
sub
mov
jg
inc
sbb
xchg
shl
mov
sub
sbb
cmps
push
sbb
test
mov
fdivr
dec
data16
pop
pop
inc
ffree
push
mov
dec
xchg
pop
mov
(bad)
lahf
dec
sbb
in
push
and
ds
push
mov
pop
jg
out
popf
es
popf
mov
lods
int
or
pushf
jb
ror
outs
hlt
xchg
in
and
mov
aas
jg
inc
sbb
repnz
(bad)
sub
ja
dec
aas
je
mov
hlt
(bad)
fist
imul
icebp
dec
mov
pop
pop
or
xchg
ss
and
aad
xchg
lods
fstp
aas
jne
jle
lock
and
pop
mov
loopne
mov
outs
std
mov
push
mov
mov
adc
call
shl
adc
(bad)
in
out
push
ret
push
call
xchg
aad
sahf
mov
daa
jp
pusha
bound
pushf
jbe
rcr
dec
push
mov
imul
mov
stos
jo
mov
ds
xchg
cmp
js
nop
and
sar
mov
nop
and
dec
add
sbb
jbe
sub
mov
xlat
fld
push
jecxz
xchg
xor
xor
test
sahf
and
and
dec
mov
dec
inc
pop
jns
retf
fimul
pop
xor
(bad)
cmps
in
pop
imul
pop
pop
cmp
fwait
and
ficomp
mov
xchg
sbb
cld
lock
mov
push
mov
iret
sti
clc
fucomp
andnps
cmp
xchg
mov
xor
inc
mov
shl
pop
mov
popa
sub
mov
add
leave
jmp
mov
sbb
cmp
hlt
mov
dec
and
cmp
call
sub
imul
cli
inc
mov
and
in
xchg
sub
xor
pop
mov
movs
shl
(bad)
fdecstp
sub
adc
jo
ss
xchg
imul
arpl
stos
pop
(bad)
cmp
mov
xor
sub
imul
in
in
jecxz
shl
outs
jne
pop
outs
outs
sub
push
or
lods
rcl
cmp
jno
movs
lods
xchg
xor
cdq
mov
cmp
nop
mov
add
fdivr
sbb
xor
stos
dec
inc
add
jnp
sbb
inc
push
sub
cs
(bad)
cli
mov
addr16
pop
cdq
cmp
inc
push
xchg
sbb
cmps
pop
or
adc
lods
shl
addr16
sbb
imul
movs
mov
mov
jne
and
test
sbb
push
jl
and
push
call
xor
addr16
in
cs
xchg
or
xchg
jl
xor
aaa
ins
push
hlt
cmp
out
xlat
jnp
fwait
mov
outs
and
into
jns
scas
popa
cmp
movs
jns
adc
jl
sahf
sti
mov
sbb
ins
add
jae
adc
ret
push
jge
call
push
lods
test
or
xchg
iret
sbb
add
push
sbb
inc
sbb
mov
sbb
inc
cli
retf
sub
sbb
ins
daa
dec
ins
clc
jnp
cmps
inc
and
cmp
hlt
push
in
xchg
loop
sar
xchg
ftst
mov
or
std
mov
shl
jo
sbb
jno
aaa
sbb
movs
sbb
lock
fild
test
xor
xchg
in
add
fcomp
daa
sbb
jecxz
or
adc
sahf
or
cmp
xlat
and
cmp
push
xor
imul
lea
or
xchg
or
popa
jne
retf
mov
xchg
mov
stos
cld
adc
mov
popa
fbld
das
and
pop
or
cwde
nop
push
cli
(bad)
fcomp
jmp
es
jbe
les
and
lods
mov
popf
call
mov
cmc
inc
pop
pop
fimul
pop
jno
pop
jecxz
sub
mov
sti
(bad)
popf
adc
jl
data16
(bad)
arpl
jl
xchg
dec
mov
mov
jg
ret
mov
and
xor
gs
xchg
cmp
push
ins
sbb
test
ror
cmp
movs
and
xor
in
ror
cdq
dec
bsr
mul
mov
jle
mov
adc
(bad)
in
pop
imul
jmp
push
dec
cmp
icebp
adc
push
rcl
xor
out
ins
or
jle
mov
xor
rol
or
dec
(bad)
pop
rol
sbb
mov
and
aad
cmp
inc
xchg
outs
dec
nop
mov
add
sub
hlt
mov
mul
stos
sub
sahf
sub
sbb
pop
xchg
mov
mov
fadd
shr
popf
stc
dec
(bad)
xor
pop
sbb
inc
fidiv
stos
daa
jg
push
xchg
icebp
or
test
mov
into
pusha
xchg
imul
cmp
mov
cli
or
scas
sub
pop
repnz
(bad)
frstor
adc
sub
cli
xchg
mov
aam
jmp
mov
hlt
mov
push
sub
int3
xor
pusha
cmps
lock
cli
xlat
int3
stos
sub
dec
dec
hlt
fldcw
pop
je
scas
pusha
xor
aam
mov
push
pop
sahf
cmp
pop
adc
in
mov
and
inc
sbb
mov
mov
mov
movs
jmp
jmp
int3
xor
jne
lahf
dec
pop
mov
and
js
add
out
imul
push
ret
xchg
test
pop
jl
adc
push
sbb
ror
dec
lods
sub
pop
inc
jmp
mov
xor
aas
data16
daa
sub
push
aaa
pop
xchg
inc
popf
mov
sti
sti
dec
cs
ja
inc
adc
add
pop
loope
out
jl
fcom
in
loop
inc
test
daa
pop
loope
addr16
inc
aaa
jnp
(bad)
push
and
hlt
jp
xchg
inc
lock
loop
mov
inc
aam
xchg
push
cli
pop
and
lock
jge
lds
xlat
mov
sub
inc
sbb
jmp
cdq
mov
shl
cmp
pop
jne
pop
dec
aaa
movs
shl
mov
lahf
leave
lds
jae
adc
ja
xor
sbb
lea
es
imul
inc
cs
movq
ret
jne
xchg
inc
mov
lods
jno
or
pushf
rcr
pop
int3
add
(bad)
mov
std
xchg
and
xchg
fisub
pop
push
cmp
clc
cld
arpl
push
mov
in
(bad)
pop
in
in
rep
rol
mov
cmp
dec
mov
xlat
adc
or
or
pop
inc
loope
mov
je
adc
stc
arpl
mov
sbb
sbb
inc
les
push
movs
mov
adc
add
pop
fistp
(bad)
lods
imul
lods
jno
pop
jge
jae
mov
outs
leave
les
jnp
loope
clc
and
or
fwait
mov
repnz
jno
jecxz
sub
shl
mov
cmp
test
xor
dec
xor
inc
jge
shrd
jmp
jno
(bad)
mov
xchg
mov
call
adc
jae
data16
mov
hlt
dec
ret
push
xchg
ins
adc
loopne
adc
push
ret
mov
lods
repz
xchg
pop
jl
xor
(bad)
outs
popa
adc
sahf
ret
pminsw
ins
mov
popa
fstp
loopne
inc
sub
ret
cmp
cli
repnz
iret
push
inc
cld
pop
js
mov
popf
pusha
add
pop
jnp
pusha
sbb
aad
repz
test
mov
mov
adc
test
mov
lock
jae
sbb
ja
repnz
adc
fld
call
cmp
fnstsw
mov
in
aaa
fistp
ffreep
cmps
mov
repnz
inc
aaa
xchg
aaa
or
push
xlat
inc
pop
retf
ds
arpl
push
jne
ins
pop
push
dec
xor
data16
test
push
cmps
or
fsubr
enter
and
and
pop
(bad)
jae
jns
mov
fsubr
inc
push
bound
mov
push
out
les
int
fwait
out
push
es
inc
ficomp
inc
shr
add
cmp
popf
cmps
mov
xor
mov
fisub
xchg
popf
inc
in
and
xchg
dec
push
test
popa
pop
dec
cmp
and
jl
clc
cmps
mov
jecxz
push
xlat
mov
stc
xchg
push
mov
out
inc
sub
stc
xor
setbe
lods
clc
scas
fidiv
jmp
loope
out
ss
mov
cmp
fs
in
sbb
icebp
movs
in
xor
xchg
lods
in
dec
mov
jg
xchg
pushf
push
xchg
pop
mov
ins
iret
loop
inc
(bad)
and
leave
or
jmp
push
ds
mov
outs
or
(bad)
cmps
mov
pop
(bad)
mov
clc
and
popa
mov
mov
test
fidiv
(bad)
ficom
mov
and
add
jl
ss
xchg
sub
arpl
dec
out
cdq
sub
loopne
dec
push
jle
sub
xchg
mov
inc
pushf
or
movs
push
gs
pop
lsl
push
popa
and
pop
push
es
or
pop
fucomp
leave
int
xchg
sub
in
rcr
outs
sbb
pop
movs
sahf
imul
icebp
jmp
call
(bad)
loope
mov
cmp
inc
addr16
mov
xchg
call
mov
mov
(bad)
shr
push
cmp
std
xchg
pop
xlat
loopne
fist
(bad)
je
nop
xchg
xchg
daa
lds
in
sti
or
sahf
inc
into
add
cmps
ds
mov
rcl
adc
out
in
ds
mov
inc
repnz
jp
or
iret
mov
dec
xor
and
mov
(bad)
xor
sub
mov
(bad)
test
jae
sahf
aas
cld
jmp
hlt
mov
movs
pop
ins
lock
jge
std
pop
shl
jns
jo
iret
aad
jbe
or
cmp
fild
repnz
sahf
imul
int
inc
(bad)
cmps
into
ja
rcr
push
sub
fnsave
pop
cmc
int
jae
sahf
cmp
xchg
adc
xchg
hlt
sub
stc
scas
xor
dec
or
lahf
adc
sbb
mov
sbb
xchg
push
push
or
sub
setbe
push
retf
jg
rol
retf
sahf
mov
push
lods
pop
(bad)
mov
outs
jns
es
rcl
arpl
add
jns
rcl
pop
inc
add
cmp
in
adc
outs
push
cmp
pop
ss
cmps
mov
or
cdq
enter
mov
jle
adc
pop
add
cmps
fistp
pop
out
xor
int
xchg
inc
mov
out
loope
fwait
imul
jnp
bound
cmp
fcom
dec
mov
inc
pusha
cmp
jle
iret
lods
mov
or
stos
ds
cmp
popa
mov
out
inc
inc
pushf
push
ret
jb
daa
loope
xor
lds
add
outs
test
je
jecxz
push
and
ja
push
data16
stc
movs
push
shl
inc
inc
sub
dec
(bad)
adc
cmps
adc
imul
cmps
ss
sbb
and
mov
jae
ror
dec
adc
fnstenv
js
and
ror
into
hlt
dec
push
ja
test
jecxz
test
call
inc
arpl
fidiv
arpl
mov
ret
imul
pusha
jno
loop
and
jp
mov
sti
xchg
sbb
aas
mov
test
add
jl
shl
and
xchg
sbb
mov
pop
leave
pop
jge
xor
sti
mov
inc
push
les
adc
sbb
lea
test
(bad)
cmps
jp
xor
push
cmps
xor
pop
dec
sahf
shl
shl
das
retf
lods
call
popa
dec
jnp
movs
fiadd
pop
jle
call
sbb
xchg
ins
leave
add
jo
or
push
fdiv
xor
in
mov
push
test
popf
jo
or
add
inc
jmp
pop
jne
jle
mov
js
pop
jbe
(bad)
enter
pushf
das
mov
inc
push
or
xor
mov
shl
shl
sti
xlat
push
sti
pop
adc
fnstcw
movs
arpl
and
mov
shl
cmp
cs
inc
in
retf
pop
push
and
or
adc
or
and
sti
pop
cmp
hlt
mov
add
adc
mov
add
stc
lahf
and
movs
shl
das
or
mov
adc
push
dec
jns
cmp
popa
int
adc
fsubr
xor
ss
pop
mov
and
cli
call
push
mov
std
add
shl
jmp
inc
ficom
ins
shr
add
mov
mov
aaa
jecxz
sbb
lea
add
cmps
aas
rol
pusha
fdivr
xchg
push
jb
gs
in
mov
adc
iret
lahf
adc
sbb
fmul
cmp
dec
lods
imul
xor
retf
jmp
xlat
shl
sub
or
mov
adc
cmp
jne
or
test
mov
jl
sar
ja
mov
jp
leave
stos
pop
arpl
cmp
xchg
push
cld
inc
pop
js
test
lods
sbb
mov
xchg
fisub
hlt
sbb
mov
pextrw
mov
inc
sbb
mov
sub
push
or
unpcklps
(bad)
lock
or
fist
lock
lods
scas
les
stos
out
dec
add
shl
add
sub
and
adc
sbb
add
cld
int
test
(bad)
rol
fwait
test
adc
pop
daa
push
bound
fsub
mov
cli
xor
cwde
loop
std
idiv
mov
lods
cmp
jne
cmp
or
js
sub
add
dec
push
fwait
into
dec
outs
cmp
and
mov
xchg
cwde
(bad)
in
iret
mov
in
retf
bound
in
push
dec
rol
std
and
mov
xchg
inc
test
xchg
xor
clc
inc
in
test
adc
adc
fidivr
mov
movs
push
enter
xor
dec
loope
jb
jp
loopne
dec
push
mov
gs
mov
icebp
fimul
sub
cli
jmp
dec
add
add
imul
inc
cdq
sar
rcr
(bad)
movs
enter
xor
rcl
repnz
mov
xor
ins
add
test
jl
and
xlat
shr
into
pop
repnz
pop
les
jmp
pop
pop
cwde
std
push
inc
and
xor
(bad)
mov
adc
sar
int3
pushf
stc
call
pop
cmp
mov
ja
inc
jae
pop
xchg
xchg
rol
lods
stos
sbb
outs
ss
js
(bad)
sub
and
ins
clc
xchg
int
push
iret
push
in
aaa
ret
in
ss
mov
imul
cmp
and
mov
xchg
mov
ds
inc
aam
cs
jae
call
sbb
cdq
jb
pop
test
aaa
mov
jmp
xchg
adc
test
ret
cmp
cmp
ds
mov
(bad)
test
aam
bound
mov
setp
push
shr
pop
sub
push
retf
jl
fs
push
repnz
mov
lahf
icebp
or
push
add
or
mov
mov
(bad)
js
cmp
mov
xor
cmp
and
pusha
ror
loopne
(bad)
rcl
fstp
icebp
inc
scas
cmp
and
es
repz
(bad)
popa
arpl
pop
ins
mov
scas
rol
push
sar
pop
jae
(bad)
(bad)
in
nop
daa
xor
sub
xchg
scas
stos
leave
jl
mov
push
std
push
pop
sbb
nop
or
fcomp
push
inc
adc
test
and
iret
mov
rcr
enter
out
test
ficom
test
outs
fsubp
test
sbb
lea
pop
adc
cmp
dec
adc
repz
xor
xchg
or
out
or
xchg
mov
js
(bad)
fld
fmul
and
jecxz
adc
xor
add
mov
push
mov
fsubrp
cli
outs
shl
into
sub
sbb
loop
lds
fild
xchg
call
push
xchg
out
add
out
cmp
push
sub
sbb
jo
fdivrp
int3
push
adc
dec
int3
and
hlt
in
test
(bad)
loop
scas
dec
mov
add
jno
fwait
mov
xor
mov
mov
dec
or
dec
push
dec
xor
in
sti
sbb
xor
ds
or
mov
inc
mov
stc
in
retf
push
call
stos
outs
shl
leave
ins
lock
cmp
sub
mov
cmp
or
xor
leave
push
jo
stos
enter
dec
and
outs
stos
out
fild
pop
pop
mov
test
popf
xchg
data16
sbb
pusha
pop
rcr
ss
jle
lds
mov
mov
sti
mov
stos
fcom
fsubr
call
push
mov
bound
jmp
mov
cld
pop
mov
fcomi
sub
mov
out
ds
outs
and
dec
jle
jg
cmps
cmps
stc
das
cmp
pop
xchg
rcl
jo
popf
(bad)
fcmovne
or
pop
dec
stos
jg
xchg
xchg
pop
xor
dec
out
arpl
sbb
test
rcr
add
sub
ror
or
test
fcomp
pop
xchg
aaa
jmp
fstp
mov
aaa
jns
and
jno
dec
es
push
pop
call
pop
push
sbb
adc
add
in
push
neg
cmps
adc
jns
lds
imul
inc
mov
int
pop
ja
xor
push
rcr
psrlq
mov
pusha
out
xchg
imul
gs
ds
add
std
idiv
pop
enter
cld
scas
jns
adc
push
rol
loop
and
jb
stc
ja
lds
xchg
sbb
fimul
sub
stc
mov
clc
movs
mov
(bad)
ret
xor
and
int
push
ficomp
jo
icebp
mov
stos
cwde
jl
test
push
fbstp
inc
loope
adc
jecxz
jo
repnz
push
jno
loope
push
mov
mov
adc
pop
pop
bound
bound
cmps
mov
leave
ins
push
mov
and
mov
aam
cmp
cdq
add
mov
ror
jg
lock
mov
aam
jno
sub
cdq
movs
inc
push
mov
shl
add
sbb
stc
popf
fwait
cmp
inc
ja
int3
pop
fisubr
or
lods
es
push
daa
sub
std
(bad)
or
aam
not
mov
sub
inc
fldcw
mov
jo
repnz
fld
adc
mov
(bad)
dec
mov
rcr
outs
add
imul
(bad)
mov
(bad)
clc
ins
ror
pop
xor
call
mov
jmp
inc
bound
cmp
in
mov
jns
add
ss
push
mov
sbb
xchg
fstp
nop
retf
stos
in
idiv
(bad)
xchg
push
(bad)
lock
scas
stos
sub
mov
pusha
sti
or
ror
test
sbb
add
(bad)
push
scas
(bad)
imul
fst
or
cmp
xor
push
jmp
pusha
sldt
sbb
inc
sub
sbb
(bad)
fidiv
sub
push
or
push
aad
enter
cli
call
dec
and
test
and
push
sub
fdivr
and
(bad)
sti
in
and
rcl
outs
adc
and
dec
jno
rcr
mov
xor
push
in
or
adc
sub
in
(bad)
xor
lods
mov
push
cmp
xchg
lds
adc
sub
xor
cs
in
push
out
mov
call
pop
shl
pop
js
fidivr
xchg
jnp
push
cmp
mov
push
shr
push
fcomp
lea
pop
dec
add
fwait
iret
jns
cmp
mov
mov
mov
sbb
(bad)
jns
not
fwait
bound
pop
mov
lock
and
imul
pusha
push
aad
mov
cmp
scas
fs
test
inc
inc
sub
jno
dec
inc
int
xor
or
or
xor
or
out
push
dec
cdq
push
test
push
sar
test
mov
retf
aam
xchg
sbb
fsubr
jne
cmp
inc
popf
hlt
in
lock
cmps
pop
and
je
xchg
movs
push
mov
lods
mov
or
add
jbe
in
or
pop
out
sub
or
inc
fs
push
push
out
mov
ja
push
lds
xchg
mov
test
pop
in
xchg
(bad)
mov
fbstp
push
aam
lds
mov
dec
xor
nop
xor
dec
std
pop
jmp
(bad)
(bad)
pop
push
jmp
push
cmp
push
rol
stos
daa
cdq
push
push
aam
push
fistp
cmc
cwde
jns
xchg
cmc
sub
out
push
test
cli
xor
push
jmp
and
sahf
(bad)
repz
pop
pop
jge
add
xchg
and
test
call
cs
loop
loop
push
jg
xlat
sti
mov
icebp
xchg
or
mov
je
jns
add
lahf
pushf
in
(bad)
xor
xor
add
sbb
ret
cdq
mov
push
adc
adc
inc
aam
das
adc
rcr
and
or
xchg
cmp
add
inc
repnz
push
dec
sbb
mov
mov
dec
sbb
push
push
imul
in
daa
cmp
jp
xchg
cmc
xchg
lods
shl
loopne
sbb
dec
pushf
mov
call
pop
(bad)
ins
leave
push
add
jo
jnp
push
ror
and
retf
scas
jnp
(bad)
xchg
das
in
fsubrp
or
mov
jecxz
adc
jo
push
sub
test
loop
xchg
retf
sbb
mov
icebp
aam
fdivp
mov
sbb
jae
push
scas
pop
scas
and
ror
out
fadd
out
out
xchg
mov
push
imul
push
fsubr
mov
(bad)
in
jno
jp
push
aaa
pop
stos
mov
mov
push
in
inc
std
xchg
and
es
add
sbb
pop
aam
ss
push
push
xor
push
mov
jae
add
jge
retf
leave
cmp
dec
test
fisub
mov
movs
mov
pushf
pop
sub
dec
in
jbe
jmp
dec
aad
xlat
aaa
gs
mov
lods
ins
fadd
mov
ret
xor
adc
pop
dec
adc
lock
sub
movs
(bad)
cmp
xchg
stos
mov
(bad)
gs
inc
push
cdq
in
sbb
jl
or
cmp
pop
scas
xor
jbe
scas
jnp
std
dec
in
stc
leave
fimul
enter
dec
fs
out
icebp
fistp
rcl
das
aad
jecxz
push
test
push
ret
pop
jge
push
mov
mov
das
sahf
mov
and
sbb
cmps
sub
shl
xlat
mul
cmp
pop
test
not
stos
in
ss
out
sub
xchg
imul
sahf
cdq
inc
pop
pop
push
scas
mov
popa
aam
mov
loopne
fwait
push
push
sub
ret
psubusb
lods
sbb
or
int
push
popf
sub
fstp
adc
inc
xor
xlat
scas
xor
in
in
or
mov
xrelease
mov
sub
bound
out
push
clc
adc
js
jne
jb
movs
add
xchg
movs
push
(bad)
pop
stos
cmp
cmps
xchg
mov
cmp
pop
jg
push
push
call
fucomi
jb
cmp
popa
cmp
nop
or
mov
out
cld
jae
pop
pop
sub
mov
sbb
movs
add
scas
dec
hlt
adc
adc
push
cmp
aaa
adc
test
les
or
test
jne
mov
fcom
fbld
pop
or
std
out
push
(bad)
pop
enter
test
enter
enter
inc
xor
sar
scas
sub
push
cmc
xor
gs
push
mov
dec
jb
or
and
add
push
lods
shr
xor
jmp
dec
cld
fs
mov
pop
jns
cdq
retf
mov
cmp
int3
sbb
ja
popf
idiv
aaa
push
call
pusha
inc
gs
inc
pop
dec
arpl
lods
gs
lds
aad
add
sbb
shl
ja
adc
imul
push
pshufw
cwde
xor
fwait
addr16
push
xor
mov
adc
bound
movs
cmps
xor
push
xor
inc
ret
add
or
loop
inc
outs
jns
sbb
fmul
in
mov
scas
xchg
sti
test
jge
adc
and
leave
fbstp
xadd
lock
ret
out
(bad)
cs
fsubr
mov
cmp
psrlq
mov
and
adc
jl
imul
pop
(bad)
mov
scas
sahf
into
jmp
idiv
xchg
mov
aas
mov
xor
imul
push
les
xchg
and
push
push
mov
jmp
pusha
mov
or
clc
mov
mov
adc
add
mov
and
imul
inc
pop
fdiv
push
popf
sbb
ror
or
dec
scas
pop
mov
dec
pop
cld
mov
(bad)
div
shl
arpl
jl
sbb
fstenv
inc
and
test
clc
mov
jle
sub
push
mov
mov
xchg
(bad)
mov
stos
jb
cwde
sub
cmp
sbb
sbb
es
add
std
xor
fcomp
and
ror
lods
imul
or
popa
sti
iret
xor
in
or
push
in
outs
sub
outs
push
and
mov
xor
daa
pop
pop
scas
cmp
adc
mov
inc
adc
sub
or
sub
add
mov
enter
test
xchg
cmps
inc
out
scas
jne
stos
cmp
(bad)
push
add
dec
sahf
xchg
mov
out
(bad)
hlt
and
pop
pop
js
push
fwait
outs
dec
push
daa
int
jg
test
test
mov
out
pop
and
mov
in
outs
popf
mov
jo
cmp
stos
push
xor
mov
in
pop
sub
inc
adc
jmp
cmp
mov
pop
pop
retf
loop
push
adc
mul
into
into
ins
mov
pop
add
push
lea
das
mov
int3
shr
mov
jecxz
or
xchg
into
add
cmc
adc
jmp
leave
xor
adc
movs
dec
and
jmp
loope
pop
shr
dec
aas
shl
dec
xor
sub
jg
js
fwait
data16
inc
retfw
and
adc
cmp
push
inc
cmc
inc
mov
push
push
retf
pop
jecxz
mov
ret
rcr
mov
rol
jns
scas
in
mov
inc
dec
in
loop
cmp
and
out
jnp
and
mov
pop
neg
fsub
movs
in
sub
xchg
and
cmp
cmp
pop
test
data16
mov
cwde
loope
enter
test
push
xchg
inc
outs
pop
std
loop
popa
or
xchg
cmps
repz
loop
ss
pop
icebp
aaa
out
iret
idiv
xor
ins
inc
call
pop
jo
and
adc
pop
aaa
fst
or
xor
jecxz
sbb
inc
xchg
jge
dec
mov
xor
dec
mov
mov
leave
push
loopne
test
sbb
loope
mov
add
retf
test
test
cmps
mov
pop
mov
icebp
or
jne
das
inc
add
push
out
in
jl
pop
or
mov
inc
and
push
mov
adc
mov
xor
jp
mov
or
push
fsub
je
ret
push
and
mov
stos
cs
dec
dec
xchg
into
mov
add
sub
push
xchg
stos
or
sub
adc
(bad)
sar
jo
(bad)
dec
and
rol
jo
and
adc
popa
xchg
xor
out
or
call
cwde
jbe
int
jmp
call
es
(bad)
ds
sahf
dec
stc
mov
nop
mov
movs
jae
dec
jl
sahf
xchg
test
add
inc
aas
sub
lahf
xchg
or
(bad)
rcl
sbb
xor
int3
jle
fcmovu
sbb
fwait
cmp
inc
cli
mov
test
dec
(bad)
push
std
in
inc
inc
jle
fisttp
ins
jne
push
lea
inc
adc
in
mov
mov
scas
xlat
mov
pop
dec
imul
sub
dec
pop
cdq
(bad)
fs
xor
mov
push
ins
xor
dec
mov
jp
lods
imul
pop
xchg
cmps
mov
mov
cli
add
inc
movs
add
and
mov
jnp
clc
pop
(bad)
repz
jae
daa
mov
mov
repz
pusha
jbe
mov
fwait
mov
jb
pushf
dec
pop
pop
loop
out
cli
iret
xchg
adc
xor
push
add
xlat
sbb
and
cli
out
add
xchg
add
mov
add
push
cld
jns
in
sbb
outs
push
mov
sub
loope
jo
push
fwait
jmp
shr
jnp
repz
or
jo
sbb
add
add
cwde
jns
pusha
scas
call
and
cmps
fild
stc
cdq
out
leave
inc
cmp
repnz
test
aas
iret
pop
xlat
sub
sub
fnstenv
cmp
or
mov
push
sbb
jg
dec
cmp
cld
pop
xor
xor
jl
push
mov
push
scas
mov
pop
sbb
jo
push
scas
mov
pop
out
adc
cmps
daa
lock
div
sbb
shl
sbb
out
xor
in
inc
jle
push
mov
iret
dec
neg
retf
xchg
icebp
movs
cmps
ins
lds
cld
pop
daa
fcmove
adc
cld
retf
out
or
lock
mov
iret
cwde
sti
xchg
or
inc
cwde
jmp
repz
push
pushf
mov
fsubr
add
mov
add
mov
daa
pop
retf
inc
rol
sub
mov
adc
fdiv
stc
sahf
je
and
adc
inc
mov
(bad)
jo
add
cmp
sub
jns
les
sahf
sub
xchg
xor
rol
jge
in
xor
nop
and
int
out
inc
sub
cli
dec
repnz
mov
xchg
or
(bad)
inc
pop
xchg
sbb
mov
adc
inc
sbb
cli
stos
(bad)
sub
std
cdq
jmp
cmp
adc
shr
pop
xor
imul
or
pop
test
inc
cmp
pop
outs
ror
jecxz
rol
xor
mov
shr
cwde
(bad)
mov
popf
mov
adc
out
mov
les
add
mov
lahf
shr
cs
sbb
push
call
sbb
add
call
jne
in
popa
jmp
and
adc
out
or
or
pop
mov
ds
test
cmp
shl
imul
mov
bnd
dec
pop
div
xor
pop
neg
repnz
sahf
nop
aam
int
pop
loop
push
into
mov
(bad)
push
jb
mov
rcl
cli
xor
adc
leave
out
imul
fwait
out
enter
push
mov
movs
xchg
sbb
push
iret
adc
add
(bad)
dec
mov
retf
add
jecxz
(bad)
(bad)
dec
pop
pop
(bad)
or
dec
xchg
test
pushf
pop
(bad)
lahf
push
div
cmc
test
add
dec
mov
mov
(bad)
push
movs
icebp
mov
adc
cdq
xchg
fcmovne
and
or
(bad)
aaa
pop
mov
xor
or
lds
inc
(bad)
xchg
mov
adc
dec
pop
sti
jl
or
inc
jne
push
ins
(bad)
or
push
xchg
adc
sti
test
or
pop
ja
fsubr
rol
adc
add
jmp
bound
add
push
mov
fidivr
and
mov
rcr
mov
inc
outs
fisttp
lahf
jl
and
imul
aaa
add
cmp
push
outs
xor
js
shl
pop
fcmovnu
or
ja
jge
pop
add
jmp
aaa
ret
sbb
jae
or
mov
xor
aad
in
mov
adc
pop
(bad)
jp
mul
mov
and
mov
add
inc
jne
and
hlt
jbe
sbb
xchg
pop
xchg
pop
mov
xor
or
jnp
(bad)
enter
mov
cmp
mov
jmp
cmps
mov
sbb
push
pop
xor
daa
fist
inc
cli
mov
test
sbb
dec
xchg
bnd
cmp
push
mov
adc
pop
das
ja
bound
movs
jns
popf
imul
stos
dec
aas
cmp
mov
test
cs
and
repz
aad
xchg
icebp
ins
or
adc
push
sub
fadd
xchg
pop
mov
add
mov
dec
nop
rol
adc
mov
xchg
cmps
cwde
std
mov
sbb
pop
aaa
cs
movs
jae
in
bound
jbe
jb
mov
idiv
mov
in
es
xor
addr16
rcr
adc
enter
lock
push
sub
data16
mov
iret
ja
push
lahf
imul
sahf
xor
mov
int
bound
mov
pushf
aas
repz
fsubr
sahf
cmp
adc
pop
aaa
shr
mov
cwde
push
repz
ins
(bad)
pop
mov
xor
nop
lock
add
xchg
dec
out
jge
scas
mov
pushf
jecxz
ss
or
and
pop
mov
jns
call
jnp
cmp
stos
sub
arpl
or
jno
cmp
pop
adc
test
push
popa
ficom
xchg
sub
dec
ret
pop
jl
push
aas
cmps
cmc
sbb
jne
xor
test
xchg
cmp
(bad)
jge
adc
adc
mov
sub
(bad)
dec
je
test
(bad)
out
adc
jo
fnstenv
cs
rcr
ds
xchg
mov
sub
pop
pop
(bad)
bound
adc
scas
out
pop
or
and
fs
jp
aad
repz
mov
jbe
(bad)
retf
dec
int3
mov
outs
xor
jge
jae
test
xchg
mov
mov
mov
cli
sub
loop
(bad)
scas
into
add
add
jno
jns
daa
outs
pop
or
mov
dec
or
sub
lock
retf
inc
pop
mov
xor
add
pusha
fcomp
clc
addr16
or
aam
ja
xchg
imul
js
jo
pusha
mov
inc
xchg
xchg
movs
mov
push
mov
push
xor
test
pop
int3
dec
mov
in
inc
and
dec
rcl
(bad)
aas
pop
jnp
daa
pushf
mov
outs
mov
test
and
js
clc
(bad)
and
dec
fild
dec
jmp
int3
mov
or
arpl
cdq
sahf
pop
mov
(bad)
fmul
add
pop
push
jecxz
sbb
mov
push
mov
fidivr
push
in
sub
mov
lock
mov
mov
cmp
pusha
or
(bad)
push
int
xchg
sub
or
xchg
gs
enter
aad
ss
sbb
sbb
mov
arpl
fucomp
int3
pop
inc
cmp
ins
mov
out
pop
inc
leave
fisubr
aam
fsubr
cmp
xchg
dec
pop
xor
jmp
push
mov
jb
mov
sbb
imul
mov
adc
iret
icebp
adc
dec
inc
in
jg
push
sbb
jge
mov
out
and
jb
dec
idiv
xchg
popf
js
push
push
inc
imul
(bad)
arpl
aaa
nop
sub
sub
or
sub
xor
out
or
push
sub
mov
fstp
adc
xor
push
pushf
xchg
jmp
in
jnp
retf
xor
pop
adc
in
pusha
sub
cmps
adc
cwde
jmp
pop
jmp
(bad)
sbb
mul
pop
aaa
and
sbb
(bad)
div
dec
jg
push
fmul
mov
les
push
outs
push
out
pop
test
cmp
icebp
and
sub
test
out
jno
cli
loope
pop
xchg
sub
add
scas
mov
js
movs
test
cmp
xlat
stos
or
jmp
cmp
mov
mov
sbb
scas
fwait
mov
sbb
cmp
mov
add
loope
mov
or
xor
adc
aam
sahf
mov
enter
push
adc
inc
adc
mov
jge
out
jb
push
(bad)
or
cmp
adc
leave
mov
icebp
imul
inc
adc
out
das
cli
adc
cmp
arpl
retf
sub
test
xchg
loop
rol
push
jmp
imul
push
test
mov
aad
bound
(bad)
in
or
sub
and
sub
xor
adc
dec
data16
push
mov
mov
imul
and
jle
retf
les
mov
push
inc
into
outs
mov
adc
mov
lds
push
or
jno
sub
jecxz
xchg
sub
sbb
dec
loope
in
lock
mov
ins
and
push
in
sub
icebp
pop
addr16
add
push
jno
jnp
jp
jg
cmp
cli
rcl
jmp
dec
dec
in
dec
cmp
mov
add
or
in
inc
xchg
jno
(bad)
or
inc
xchg
shl
shl
and
ret
rcl
add
xchg
shl
xor
cld
call
js
pop
jge
inc
pop
xchg
aad
es
pop
mov
xchg
push
xor
movs
es
imul
sub
jmp
loope
add
mov
mov
xchg
inc
add
xor
jb
arpl
jmp
call
xor
adc
sub
pusha
not
jmp
mov
inc
out
out
pop
inc
mov
out
mov
pop
ins
scas
fist
adc
js
jp
test
and
imul
push
shr
sbb
push
test
xor
es
push
sbb
jnp
sub
inc
arpl
lock
pop
es
xchg
inc
push
pop
adc
or
add
test
movs
scas
loope
or
xlat
xor
mov
js
and
mov
ja
test
dec
mov
pop
out
adc
shl
adc
repz
pop
into
or
sar
xchg
lds
mov
ffree
test
cwde
adc
sahf
sub
xor
cli
jp
sub
call
jl
inc
je
test
dec
add
bound
mov
sbb
div
sti
stos
or
rol
xor
add
pop
cwde
retf
neg
ret
daa
add
out
add
out
mov
movs
aaa
push
push
sahf
mov
sub
pop
mov
inc
dec
cmps
pop
mov
jp
call
push
mov
xor
adc
call
jne
pop
xchg
call
push
dec
push
and
push
mov
mov
push
int
adc
daa
movs
mov
xchg
push
(bad)
ror
cmps
jne
pop
sbb
jno
mov
or
lahf
cs
je
mov
xlat
or
jo
pop
aad
sar
mov
mov
or
(bad)
(bad)
jmp
call
sbb
(bad)
icebp
jg
fstp
push
sub
scas
seto
pushf
bound
inc
repz
push
retf
(bad)
cmp
(bad)
bound
adc
jno
dec
aaa
sub
imul
jl
mov
lock
cmp
sub
jae
loope
inc
es
jmp
pop
pop
arpl
xor
call
jp
push
jo
sbb
pop
push
sub
jae
rcl
lods
sbb
sub
push
pop
push
xchg
sbb
pop
xor
cli
(bad)
mov
mov
aaa
push
cmc
mov
xchg
cwde
mov
or
mov
pop
out
jg
out
call
and
enter
push
lods
or
scas
cmps
and
inc
adc
lods
dec
(bad)
stos
daa
cmc
lock
sbb
push
xor
xchg
jae
cmps
mov
mov
cmps
and
cmp
inc
push
and
xchg
push
xchg
dec
mov
lea
xchg
fldcw
shr
xor
int
movs
(bad)
lahf
gs
mov
and
ins
mov
xor
inc
mov
xchg
cwde
pop
data16
int3
pop
ins
sub
push
mov
xchg
(bad)
pop
or
stos
jp
sbb
mov
mov
mov
nop
mov
jmp
jge
inc
mov
and
push
add
les
leave
xor
call
ss
cmp
pop
pop
jmp
ret
cld
stos
mov
xlat
cld
ss
test
pop
jae
mov
les
cmps
sub
and
sbb
clc
out
(bad)
test
mov
sbb
cs
pop
xlat
popa
jne
cmp
scas
push
aas
movs
jmp
ins
inc
sbb
cmps
jmp
nop
cmp
jns
test
jecxz
xor
cmp
xor
cmps
shl
jle
mov
int
or
or
and
lods
cmp
ficom
cld
xchg
mov
scas
mov
push
adc
push
shl
aas
out
vpsubusb
in
fdiv
push
inc
cmp
stos
jle
xchg
inc
adc
add
shr
dec
cmp
adc
pop
pop
sbb
dec
jnp
lods
fisubr
sbb
cmc
aad
or
and
popf
(bad)
pop
cmp
cwde
pop
jo
cli
out
clc
int3
retf
lahf
push
cld
jmp
and
or
push
clc
push
push
out
lods
or
movs
frstor
sti
xor
lods
aad
test
lds
cmp
popf
outs
jp
jns
mov
inc
pop
imul
mov
sbb
movs
out
ret
(bad)
in
pop
call
sub
mov
jne
push
dec
(bad)
fs
loopne
sahf
inc
or
int3
cmc
pushf
xor
sub
imul
adc
iret
jmp
les
div
adc
outs
popa
push
xor
dec
push
(bad)
(bad)
ret
cmps
xor
sbb
inc
inc
jo
rol
add
int3
jno
add
adc
shl
inc
sbb
push
xor
adc
test
xor
mov
mov
inc
test
loopne
mov
pop
scas
ja
jo
stos
mov
or
mov
out
shr
sbb
dec
pop
call
sbb
push
and
outs
push
xor
lea
or
jle
mov
inc
pushf
mov
mov
dec
xor
pushf
cwde
sbb
aam
repz
pushf
loope
push
add
pop
or
push
pop
cwde
pop
and
xchg
adc
das
cmps
jno
mov
pop
loop
push
es
(bad)
mov
shl
add
imul
(bad)
movs
inc
xchg
add
dec
ds
mov
sbb
or
mov
dec
fsub
neg
xchg
sub
mov
mov
popf
dec
mov
mov
stc
fwait
popa
sbb
outs
push
imul
jg
jns
jo
rol
add
adc
dec
inc
stos
dec
aaa
scas
or
dec
sti
cmp
dec
dec
into
dec
(bad)
ja
mov
xchg
mov
cmc
in
shl
jl
push
fsubp
xchg
mov
dec
mov
mov
rcl
jb
sub
retf
loope
daa
dec
adc
mov
xchg
cmp
jmp
call
mov
and
stc
ja
xor
int
cmp
loop
aaa
popa
push
es
cmp
xchg
ret
mov
and
dec
mov
sti
pop
add
repz
fsub
dec
push
xor
add
pop
test
not
js
jp
sahf
add
call
or
fdiv
and
jl
sub
(bad)
in
les
(bad)
dec
or
inc
popf
std
cs
sub
imul
lods
es
div
push
pop
loop
or
iret
jge
mov
loop
lods
(bad)
mov
rcl
ja
out
jge
push
sub
xchg
retf
out
(bad)
imul
les
jecxz
mov
jl
outs
mul
dec
out
cmps
adc
push
add
imul
sbb
iret
mov
mov
pop
fdiv
xor
sbb
popf
aaa
xchg
inc
add
push
ss
cmp
pushf
inc
jne
ret
adc
mov
ss
mov
retf
and
data16
jecxz
rol
jns
clc
or
jb
dec
or
arpl
mov
sbb
jmp
pop
aaa
je
je
xchg
xor
xchg
pop
retf
push
and
(bad)
in
xchg
xchg
xchg
repz
ror
gs
sub
mov
shr
mov
fwait
push
xchg
mov
mov
xchg
mov
jne
jno
cmc
dec
push
add
sub
inc
(bad)
repz
push
xchg
adc
dec
stos
bound
dec
inc
iret
push
test
cmp
stos
mov
push
mov
adc
sub
cmps
xor
nop
mov
jecxz
xor
inc
fistp
push
sub
pushf
imul
inc
cdq
push
jge
mov
retf
outs
or
pop
xor
adc
xchg
ins
push
cmp
cmp
push
(bad)
adc
ret
mov
and
adc
xlat
push
sub
xor
rol
mov
mov
iret
mov
out
iret
jmp
sub
nop
fadd
pop
mov
xlat
lods
pop
es
fild
retf
shr
iret
xor
jle
or
sbb
imul
push
xor
xchg
test
aaa
inc
es
outs
ror
repnz
push
movs
mov
xchg
jl
(bad)
xchg
into
cmc
inc
and
cs
sbb
repnz
cmp
jae
cli
ret
jmp
sbb
scas
into
mov
pop
lock
xchg
test
jecxz
in
sahf
pop
pop
cli
push
and
push
mov
inc
bound
jl
stc
imul
int3
jle
pop
ficom
aam
iret
cld
das
pushf
and
sbb
cmps
sar
in
cmp
or
xchg
push
dec
test
push
js
mov
mov
sbb
lods
mov
(bad)
mov
dec
push
pop
stc
push
pop
xchg
mov
adc
dec
cmps
int3
lods
aam
mov
shl
xor
jmp
cmps
sbb
je
lods
adc
cmps
outs
out
loop
cmp
loop
xor
fisub
(bad)
in
xlat
push
pop
pop
ret
rol
rol
movs
jno
cmp
in
pop
ret
stos
add
xor
ret
and
cmps
xchg
inc
cwde
les
jge
lods
fcomp
in
xchg
lahf
jbe
dec
dec
int
into
or
les
adc
jle
or
sbb
mov
sub
stc
inc
sar
add
popf
sub
dec
test
and
dec
xchg
aad
mov
jmp
test
xor
jmp
jno
inc
out
dec
xor
shr
(bad)
xchg
mov
and
sub
jmp
jb
mov
sub
nop
and
cli
and
xchg
jp
es
hlt
popa
clc
ins
outs
bnd
jp
or
jmp
lock
xchg
mov
mov
dec
ret
xor
in
push
vmwrite
js
iret
add
cmp
neg
frstor
ja
mov
sbb
shl
xchg
mov
sbb
adc
loope
mov
pop
push
call
xor
mov
or
dec
shl
retf
mov
xchg
xchg
cmp
sbb
(bad)
xchg
sbb
out
add
outs
aad
ror
fld
add
inc
daa
popf
int
pop
mov
cmps
das
fadd
inc
hlt
push
cwde
inc
mov
lods
lahf
cmp
cmp
jp
pop
xchg
fldlg2
nop
mov
mov
inc
imul
aam
mov
fsub
lahf
mov
lock
mov
xchg
stos
dec
scas
cs
dec
push
mov
mov
sub
scas
xchg
sub
addr16
cmp
imul
sahf
push
sbb
and
mov
imul
cmp
rol
popa
inc
add
hlt
mov
into
inc
xor
cmp
(bad)
loopne
push
dec
test
and
xor
movs
(bad)
cmp
out
sub
mov
adc
adc
adc
pop
jg
loope
je
mov
bound
xor
(bad)
clc
cmp
xchg
sbb
sub
in
xchg
shl
das
xchg
mov
cs
out
mov
aam
std
and
dec
rol
das
mov
sub
push
aas
pop
(bad)
push
sub
ds
push
mov
or
inc
clc
test
sub
cmps
push
fldenv
lea
xor
xor
in
dec
sub
push
adc
fnsave
sahf
jbe
pop
inc
or
hlt
out
cli
mov
inc
scas
pop
cmp
out
mov
mov
mov
retf
and
mov
add
push
jno
and
jne
lock
mov
mov
push
mov
loope
push
mov
cs
in
stos
push
jmp
xor
jge
inc
dec
cmps
inc
jle
mov
pop
dec
add
mov
jbe
xchg
jge
je
xchg
div
je
pop
and
add
jno
push
xchg
or
dec
xchg
inc
ins
push
xchg
dec
pop
sbb
jb
xchg
mov
(bad)
xchg
cmc
clc
sbb
mov
out
leave
xor
movs
xor
sbb
je
inc
outs
xor
and
addr16
scas
repnz
addr16
sub
ins
and
push
push
mul
inc
lahf
pop
pushf
mov
sbb
add
sub
and
and
or
call
or
(bad)
stos
shl
jecxz
cmp
test
pop
out
sbb
ja
cmp
xchg
lock
cmp
mov
push
mov
loopne
sub
dec
cmp
call
(bad)
outs
loope
jle
inc
add
repnz
and
sbb
mov
out
enter
push
sub
outs
mov
mov
mov
lea
clc
out
fisub
cli
repz
sub
lds
mov
dec
mov
aaa
and
test
movs
arpl
xchg
xchg
sub
pop
out
inc
pop
int3
inc
pop
ret
jmp
cmp
outs
stc
xchg
fs
(bad)
dec
sbb
jg
inc
push
aas
mov
in
dec
popa
sbb
sahf
call
or
cmps
xchg
fistp
xchg
stos
mov
mov
mov
mov
and
retf
sub
mov
jmp
ret
lea
or
xchg
lods
xchg
inc
xlat
scas
test
push
stc
sar
jmp
push
dec
mov
fyl2xp1
sbb
push
movmskps
xchg
rcr
inc
jl
jae
std
mov
adc
not
ror
aas
mov
call
movs
xlat
out
rol
(bad)
outs
fisub
pop
xchg
lods
fisttp
adc
(bad)
jno
leave
jbe
jg
bound
add
scas
mov
shl
lahf
mov
xor
jne
cmp
into
inc
and
mov
push
pop
xor
sbb
xchg
cmp
jae
mov
sub
jle
adc
cmps
rol
jmp
(bad)
(bad)
pop
pop
call
push
icebp
fcompp
pushf
push
rcr
aaa
mov
push
xor
add
jb
fwait
pop
test
dec
and
mov
jecxz
rol
cmps
mov
jne
hlt
outs
sbb
jo
or
cmps
or
ja
rol
repnz
jl
popa
or
aad
push
push
or
out
pop
xchg
jp
cdq
xor
jp
call
movs
mov
mov
sbb
mov
cmp
jno
mov
sbb
push
and
pusha
out
arpl
cmp
jmp
repz
or
adc
aas
inc
icebp
call
ins
dec
pop
dec
out
jl
pop
cli
xchg
jno
or
jbe
mov
jle
hlt
loopne
push
mov
mov
or
bound
in
mov
push
mov
xchg
and
fldcw
into
mov
idiv
in
xchg
rol
fwait
push
push
aad
sub
inc
and
test
ds
icebp
jbe
and
push
cmp
or
aas
scas
iret
fs
cmp
notrack
xor
add
dec
add
adc
inc
pop
test
cmp
ins
lea
stc
cmps
mov
add
stc
xor
pop
out
cld
mov
mov
ret
mov
(bad)
rep
jns
(bad)
movs
add
mov
xor
push
movs
rcr
dec
rcr
adc
dec
ins
into
ds
mov
push
and
imul
and
xor
fnstsw
add
pop
inc
(bad)
jnp
push
add
jns
pop
outs
jnp
and
pop
dec
dec
mov
mov
add
push
mov
sub
inc
out
inc
sti
mov
int
arpl
and
xchg
aas
popa
jle
and
xchg
xlat
jae
adc
cmp
cmp
lds
inc
xchg
or
xchg
xchg
add
push
ret
push
xor
cmc
inc
pop
arpl
cld
pop
addr16
scas
or
mov
cmp
nop
stc
and
imul
jmp
daa
mov
dec
cli
rcl
movs
and
inc
mov
pop
push
(bad)
scas
pop
lods
or
xchg
(bad)
dec
fnstcw
mov
push
push
push
cmp
imul
shr
add
hlt
pop
lds
ins
and
test
js
out
jmp
call
push
sub
in
cwde
dec
cmps
(bad)
arpl
fiadd
pusha
mov
pop
gs
fcomp
mov
dec
sbb
and
ja
xchg
stos
jg
mov
cmp
sub
retf
mov
inc
add
push
fldcw
ficomp
or
icebp
mov
nop
in
iret
sub
jmp
jo
dec
xor
or
cmp
inc
inc
xor
sar
pop
lea
or
lods
bound
shl
jge
pop
fild
fwait
pop
(bad)
std
mov
add
jl
sub
dec
pop
lahf
xor
xor
inc
(bad)
xchg
jp
cdq
mov
and
popf
or
loop
adc
dec
inc
inc
xchg
cld
push
test
ins
or
movs
sbb
out
dec
clc
imul
lods
fild
retf
in
mov
ss
fbld
pop
jmp
shl
loop
jg
cmovs
(bad)
pop
loopne
mov
push
fs
or
cmp
or
aad
loop
retf
xlat
pop
jbe
loope
in
inc
sub
pop
sahf
pop
sti
repz
das
pusha
pop
push
mov
jmp
xchg
add
(bad)
xchg
fcomp
(bad)
push
loope
push
cmp
mov
mov
jmp
mov
dec
sbb
loop
mov
inc
icebp
xchg
push
cld
jb
out
ja
sbb
test
and
jl
inc
leave
mov
mov
fmul
(bad)
adc
lods
scas
push
adc
inc
add
sbb
hlt
int3
out
ret
xchg
test
in
jmp
mov
or
dec
mov
mov
xchg
rcr
mov
mov
add
mov
fcmovnbe
push
and
clc
scas
cmp
sar
dec
add
idiv
ss
mov
pop
adc
sbb
iret
std
lock
dec
cwde
aas
push
cmp
cmc
test
out
aad
mov
xor
loopne
fst
jge
push
xor
sar
test
pusha
push
rcl
(bad)
mov
mov
and
push
cmp
clc
jmp
inc
pop
dec
aam
add
mov
push
cmc
dec
dec
mov
ja
leave
jo
aaa
mov
lock
(bad)
mov
inc
cmp
mov
jbe
sbb
and
add
add
xor
test
push
notrack
(bad)
bound
add
jnp
fdiv
adc
scas
imul
sub
add
cmps
in
jge
inc
jecxz
push
jns
sar
push
add
std
inc
ja
add
lea
sbb
mov
test
arpl
pop
adc
repz
adc
rcl
and
sub
scas
ins
mov
dec
loope
sti
cmp
cmp
imul
pop
jmp
in
cmps
neg
push
sub
mov
icebp
fsub
mov
in
dec
das
jne
int3
scas
icebp
loopne
adc
jmp
(bad)
and
bound
retf
or
dec
mov
ror
mov
lock
push
xor
mov
enter
lock
dec
or
aas
jno
rcr
out
inc
in
mov
xchg
jmp
xor
pop
loope
sbb
loop
pop
enter
or
inc
and
sub
(bad)
jmp
mov
push
popa
sbb
mov
(bad)
aas
cmp
es
daa
in
mov
not
stos
cmps
or
xor
xchg
jge
loopne
or
ret
and
out
jg
ins
test
jno
or
or
fnsave
mov
out
pop
setne
dec
imul
cmps
leave
sbb
mov
push
jo
mov
mov
lods
and
and
mov
add
in
mov
pop
cmp
sub
dec
in
test
push
xchg
jp
outs
ins
popf
loop
lea
std
dec
push
stos
sub
mov
inc
jmp
adc
je
in
push
inc
(bad)
xor
cs
pop
adc
fdiv
and
pop
mov
sti
jno
js
jmp
or
cli
inc
and
or
pop
push
xor
sbb
mov
cmp
pop
sbb
jae
mov
sub
cs
cmp
mov
inc
rol
push
jmp
sub
mov
pop
xchg
daa
push
jp
cli
iret
es
in
mov
inc
lahf
test
mov
bound
sbb
aas
sub
dec
and
mul
out
clc
jne
jmp
push
aam
xchg
push
out
mov
or
sub
add
mov
and
push
sbb
fldenv
sub
addr16
scas
inc
fcomp
push
mov
int
mov
ds
lods
sbb
xchg
cmp
popa
rcl
xor
xor
mov
sub
scas
push
int
loope
cmc
lahf
test
cmp
pushf
jmp
jp
out
push
mov
fsub
inc
lods
inc
jnp
and
sbb
inc
xor
mov
add
xchg
mov
adc
sub
hlt
clc
cmovno
mov
aaa
xor
bound
lds
cmpps
xor
out
dec
stos
lods
jmp
int
xor
popf
mov
xor
daa
cmps
(bad)
loope
and
test
imul
add
jno
dec
(bad)
xchg
cli
loop
sub
xchg
mov
pop
jb
mov
mov
lds
pushf
dec
pop
int3
je
jmp
je
out
mov
xchg
and
jbe
test
push
lods
sub
push
aas
aaa
cwde
sbb
jns
call
sub
or
pop
mov
mov
mov
jmp
push
adc
fdiv
jbe
stos
adc
and
jae
into
cmp
leave
sub
jl
daa
bound
pop
cdq
xchg
mov
repnz
pop
mov
jo
pop
test
jo
mov
fwait
in
lods
lock
add
clc
out
(bad)
shr
(bad)
lds
sbb
pop
or
repnz
xchg
(bad)
jl
fisubr
xchg
and
or
cmp
into
out
test
mov
add
fld
sbb
fist
mov
lock
lock
test
or
not
(bad)
std
xlat
in
call
ret
call
lock
mov
icebp
mov
cmp
push
scas
pusha
aam
jmp
fld
in
xchg
mov
psllq
fwait
sbb
pop
ja
call
mov
(bad)
xor
mov
xor
push
retf
repz
cmps
pop
je
mov
cmp
leave
inc
adc
xchg
enter
dec
inc
xchg
inc
gs
push
scas
in
(bad)
sub
jne
fsubr
movs
daa
and
mov
sub
les
rcr
stos
push
dec
jno
aas
retf
xor
dec
mov
outs
and
arpl
iret
lods
pop
jg
jecxz
or
sub
leave
sub
out
in
mov
inc
lods
call
xlat
mov
adc
mov
std
or
js
(bad)
cmc
xchg
adc
cmps
rcr
call
clc
inc
fucom
mov
in
dec
jns
aam
lds
popa
out
jg
sub
ins
mov
loope
and
push
js
jnp
mov
into
and
addr16
out
call
leave
pop
movs
ret
stos
mov
mov
ret
lds
sub
pop
jle
mov
cmc
inc
(bad)
fsubr
mov
pop
sbb
xchg
loope
or
loop
cmp
gs
fdivr
push
mov
fisub
fmul
adc
imul
or
in
sub
cmp
xor
mov
and
sbb
imul
or
pop
lahf
add
sbb
in
rol
add
pop
mov
sub
sahf
call
out
jg
jb
mov
ss
(bad)
mov
out
pop
adc
inc
mov
lea
lea
push
adc
ins
cmp
jp
loop
ret
or
adc
lock
mov
sub
pushf
lahf
int
ret
or
dec
sub
dec
fsubr
fmul
addr16
jno
cmps
push
dec
jl
addr16
and
minps
xor
loopne
pop
jnp
aad
popa
nop
push
or
jne
sub
mov
outs
loop
sub
jp
xor
mov
call
cli
mov
add
popf
mov
int3
movs
movs
lahf
repnz
pop
pop
jae
loop
add
sbb
jae
mov
xor
sub
shl
or
ror
add
push
mov
ins
mov
and
lock
pop
loope
xchg
cmp
sbb
adc
jo
sub
xlat
jecxz
mov
sbb
dec
rcl
pop
pop
aam
ret
fcom
sbb
inc
shr
sbb
ins
push
test
(bad)
out
leave
mov
movs
pop
out
cmp
rcl
xchg
pop
movs
aas
stos
jecxz
aam
pop
scas
test
into
cmp
popf
mov
pushf
dec
adc
jle
add
lea
jle
mov
les
call
arpl
shl
enter
icebp
stos
adc
cs
push
in
fwait
sub
and
inc
mov
mov
pop
xchg
and
dec
xor
add
add
xor
add
cld
leave
adc
test
mov
or
in
adc
std
ins
in
xchg
mov
lahf
cli
mov
xchg
add
mul
sahf
adc
pushf
cmps
xor
pop
dec
xor
inc
cli
retf
xor
push
push
cli
movs
dec
sbb
mov
adc
ret
(bad)
push
rcl
push
repnz
sub
xchg
rcr
call
sbb
xchg
push
inc
add
dec
jle
and
jno
daa
cmp
js
daa
loop
je
gs
ret
or
push
bound
add
in
mov
fs
jno
add
rcr
hlt
(bad)
xor
inc
xor
pop
imul
aas
sub
loop
inc
cmp
or
jb
mov
xor
xor
sub
sar
outs
stc
test
jb
push
cmp
and
pop
pushf
inc
mov
cmp
cmp
icebp
inc
mov
or
jno
or
inc
addr16
and
mov
call
in
jno
sub
mov
xor
jno
push
inc
adc
mov
jge
dec
cli
in
cmp
fldcw
loopne
ret
or
add
xchg
jmp
or
cwde
sub
mov
mov
xchg
int
push
ret
sahf
outs
push
icebp
mov
(bad)
fwait
inc
ret
dec
pop
shl
pop
xchg
fld
push
cwde
movs
xor
ins
xchg
iret
movs
(bad)
fsubrp
pop
aam
pop
push
add
sbb
sar
dec
cld
test
push
xchg
loop
jno
shl
or
mov
dec
ins
ret
sbb
mov
mov
pop
cmp
mov
je
jno
push
inc
test
cwde
cmp
cmps
push
stc
addr16
enter
mov
mov
sbb
and
sbb
call
jns
mov
mov
ret
lds
test
sbb
idiv
push
jmp
xadd
and
std
jge
dec
push
jnp
mov
mov
cmps
jns
xchg
test
movs
iret
(bad)
jno
cmps
sub
inc
pop
movs
mov
dec
cmc
or
jge
push
xchg
sbb
sbb
stos
in
sbb
(bad)
dec
enter
int
(bad)
pop
imul
retf
mov
mov
jmp
int
jmp
shl
imul
(bad)
jnp
sub
stc
je
scas
cmp
int3
outs
mov
cmps
leave
clc
inc
jl
add
aas
cmps
pop
cmp
mov
lds
inc
mov
xchg
shl
loopne
fwait
dec
out
and
jnp
loope
xor
jbe
sub
lock
hlt
fistp
pop
call
enter
jns
stos
aas
add
add
or
imul
ret
or
int3
test
and
lahf
cmp
frstor
repnz
push
push
cmp
pusha
aas
xor
push
cli
imul
movs
jecxz
jns
(bad)
sbb
sbb
rcl
dec
jl
xchg
pop
jmp
xor
xchg
xor
(bad)
mov
gs
cmp
cmp
repz
into
pushf
xchg
mov
inc
add
pop
push
hlt
add
push
jg
sar
inc
xchg
fcmovu
pop
cmc
retf
and
cmp
jo
(bad)
js
test
cmp
jmp
enter
gs
mov
jg
adc
add
push
pop
outs
sar
fsub
leave
mov
pop
ins
jae
loope
push
sbb
mov
sbb
and
pop
pop
xor
jbe
int3
jg
loopne
(bad)
cdq
jne
xlat
addr16
inc
mov
and
rcr
fiadd
repnz
push
retf
jle
stc
fimul
test
sbb
pop
out
inc
pop
mov
push
xor
sub
and
mov
xchg
enter
mov
scas
add
inc
ins
cld
adc
jbe
pusha
nop
mov
fnsave
and
mov
xor
pop
jae
pushf
add
ds
test
add
ret
fisub
in
xor
add
loop
ss
fsubr
lods
cli
mov
jmp
call
and
in
popa
pop
push
mov
pop
jae
test
xchg
inc
jecxz
push
les
add
jno
mov
jle
das
or
retf
pop
sbb
lods
clc
lds
jb
inc
xchg
pop
xor
hlt
fdivr
imul
call
js
mov
stc
sbb
cmps
das
loope
mov
inc
inc
fild
inc
mov
xor
push
pop
sbb
xchg
fdivr
mov
mov
dec
mov
stos
push
push
xchg
sub
mov
mov
push
xor
xchg
shl
push
push
retf
ret
mov
jo
rcr
add
hlt
loop
mov
in
inc
push
pop
cmp
hlt
aam
adc
shl
jno
repz
out
daa
adc
cmps
jl
mov
cmp
fimul
adc
dec
mov
mov
pop
xchg
jl
mov
sub
cmps
mov
push
std
sti
test
add
xchg
ja
and
int3
jo
jmp
mov
int
sub
lds
pop
dec
ret
lods
out
mov
popf
(bad)
sub
repz
xchg
adc
stc
out
sbb
imul
cld
jmp
sub
dec
jle
(bad)
(bad)
nop
fist
xchg
outs
shl
(bad)
mov
mov
and
ja
xchg
inc
adc
lds
in
cmps
mov
iret
adc
shl
sub
adc
push
sub
sub
jae
push
fsub
or
inc
ins
jns
xor
jg
fidivr
(bad)
cmp
(bad)
imul
xchg
pop
jecxz
jb
retf
xor
lahf
and
xor
sbb
jno
gs
out
mov
call
pushf
push
arpl
cmp
push
pop
push
std
(bad)
mov
(bad)
and
(bad)
ins
in
xlat
add
test
in
mov
mov
movs
mov
mov
movs
les
pop
fcomp
sub
push
cdq
sbb
mov
adc
adc
sub
mov
data16
out
cmp
xor
jmp
xor
inc
mov
aaa
daa
das
sbb
dec
inc
dec
bound
out
xor
dec
sub
xor
inc
xor
aad
pop
inc
and
nop
mov
mul
mov
push
dec
dec
imul
add
xor
and
push
push
test
inc
pop
fistp
loop
jmp
popa
je
into
push
xchg
inc
fiadd
mov
test
aad
jmp
jbe
sub
push
(bad)
movs
jge
pop
mov
mov
(bad)
jp
dec
nop
ja
jecxz
lds
out
mov
sub
or
cli
jle
dec
mov
aad
push
sub
enter
inc
js
int3
not
jne
mov
fild
pop
pop
pop
clc
lock
sub
lahf
dec
test
imul
cmp
xchg
adc
and
mov
push
mov
leave
mov
mov
nop
add
push
adc
sub
xchg
or
lock
iret
arpl
mov
pop
xor
or
lods
out
lds
es
jecxz
retf
pop
std
jo
sbb
dec
gs
jg
retf
pop
cmc
xchg
jne
scas
adc
push
pop
jmp
lods
push
hlt
pop
call
adc
jbe
outs
fild
inc
xchg
mov
das
outs
cmp
fst
ja
mov
retf
and
xor
mov
jae
dec
xchg
outs
jl
enter
mov
and
sbb
push
(bad)
cmp
les
jmp
mov
shl
(bad)
dec
dec
jne
push
bound
xchg
aad
aaa
leave
and
inc
stos
mul
add
lods
ds
sti
mov
mov
fild
loope
fadd
ins
add
(bad)
int3
push
xchg
outs
cld
aas
pop
mov
jo
pop
dec
jle
outs
imul
jg
push
mov
movs
and
add
shl
retf
rcl
outs
call
or
in
in
mov
or
adc
std
mov
jbe
mov
push
lock
(bad)
and
pop
mov
or
adc
mov
jl
jmp
sbb
jmp
dec
push
(bad)
in
jb
or
arpl
and
lods
test
test
jns
loope
and
mov
hlt
outs
sbb
push
pop
lds
test
mov
(bad)
jno
mov
xor
add
adc
rcl
outs
(bad)
pop
ja
leave
jp
js
cmp
mov
adc
jnp
mov
hlt
and
mov
scas
out
jg
or
shr
bound
xchg
shr
in
popf
jecxz
into
mov
sbb
out
sbb
sub
jno
aam
mov
push
aaa
dec
and
add
and
adc
fist
jbe
loope
shl
outs
xlat
test
xchg
mov
mov
xchg
and
cmp
ins
mov
es
mov
pop
add
inc
adc
pop
retf
aaa
sar
add
cmp
xlat
mov
sub
dec
in
bnd
inc
xor
mov
jecxz
out
mov
dec
icebp
call
xor
rcl
jmp
(bad)
jns
add
stc
xchg
mov
xor
cli
mov
or
jno
scas
fld
sbb
nop
repnz
cmp
je
sbb
mov
jbe
leave
das
mov
or
dec
mov
xor
or
cdq
mov
lods
mov
pop
cmps
xchg
fnsave
movs
sub
mov
aas
es
sub
xor
retf
arpl
cdq
mov
sbb
mov
or
xchg
sub
neg
or
sub
daa
jb
fwait
mov
dec
dec
mov
add
inc
aaa
jge
xchg
pusha
add
ret
sbb
sahf
aaa
jb
icebp
sub
adc
aam
(bad)
add
xor
popf
mov
dec
out
clc
xlat
jnp
into
and
aas
xchg
push
mov
fidiv
inc
jmp
(bad)
pop
jae
in
xchg
mov
or
dec
int
inc
inc
mov
mov
out
test
imul
jmp
jbe
cmp
loopne
or
stos
icebp
or
dec
pop
lea
sub
shl
push
push
adc
xchg
and
rcl
ss
es
loopne
(bad)
adc
iret
aam
bound
aaa
addr16
mov
or
(bad)
and
mov
and
cmp
rol
mov
idiv
ja
xor
push
outs
mov
pop
inc
mov
shr
mov
int
aaa
mov
pop
sub
jp
inc
call
dec
mov
out
adc
jg
inc
pushf
cmps
scas
fs
sbb
sbb
pop
popf
loopne
shl
loope
inc
or
aam
loopne
cld
sbb
cli
cwde
call
jl
sub
pop
pushf
fsubr
out
into
imul
add
cmp
xchg
push
mov
cmp
in
bt
pop
dec
cmp
out
mov
and
rcr
loop
retf
inc
stc
mov
xchg
mov
int
add
ret
pop
aam
push
sbb
gs
lods
test
push
scas
cmp
push
imul
int
dec
xchg
jle
inc
movs
wrmsr
add
pusha
push
popf
iret
or
jg
xor
push
add
test
add
jg
mov
add
mov
inc
add
addr16
fs
ins
push
mov
cli
fstp
imul
mov
push
adc
shl
rol
push
pop
std
aad
repz
push
jmp
push
and
or
pop
push
cmp
setle
xchg
mov
jmp
fimul
mov
jne
sub
lock
push
enter
dec
clc
out
mov
js
scas
dec
jnp
retf
popa
and
out
xor
mov
jle
lock
mov
cmp
and
jne
or
jne
xor
and
sbb
dec
daa
xchg
loop
xor
inc
push
sub
cmp
lds
clc
mov
add
dec
mov
xchg
imul
xlat
cld
push
inc
fadd
xlat
mov
jnp
pop
or
lds
daa
stc
cmps
push
mov
(bad)
je
xchg
stos
adc
push
fstp
arpl
call
push
adc
xchg
sub
scas
loope
push
and
pop
repz
xor
xor
mov
(bad)
fdiv
loop
jnp
rcl
mov
pop
mov
jne
in
pop
jbe
push
add
cmp
popf
nop
stc
pop
retf
loopne
adc
xlat
cmp
jle
cmp
dec
sub
addr16
aad
push
test
jns
sbb
jne
icebp
ret
cs
jo
ja
sub
mov
(bad)
pop
outs
mov
inc
mov
xchg
fnstsw
movs
jl
lea
push
sub
stos
xchg
rcl
scas
imul
fisub
retfw
inc
and
rcr
adc
pop
ss
stos
and
jg
pusha
push
dec
mov
call
push
pop
pop
jp
fist
fnstenv
ror
xor
or
fwait
mov
loope
mov
xchg
leave
dec
inc
bound
jl
(bad)
and
(bad)
pushf
sub
inc
dec
(bad)
push
sub
xlat
loopne
cmp
or
out
xchg
mov
outs
int3
xor
jmp
mov
aas
js
out
xor
sub
pop
mov
mov
imul
adc
push
in
sbb
retf
fimul
xchg
ret
sub
cld
scas
nop
mov
fcmovnb
in
mov
sbb
sbb
stc
fldenv
into
icebp
xchg
bound
loop
mov
leave
enter
xchg
sbb
mov
addr16
pusha
sub
inc
mov
iret
inc
add
in
jne
sub
(bad)
sbb
cmps
addr16
jb
sar
adc
jne
leave
mov
inc
mov
cmp
int
fnstcw
jge
push
jp
out
cmps
sbb
ret
ds
xor
mov
jns
mov
nop
imul
in
lea
in
fs
add
outs
mov
nop
xchg
popf
pop
outs
mov
xchg
outs
cld
fiadd
pop
sub
aaa
push
je
daa
jbe
inc
arpl
(bad)
rcr
(bad)
in
mov
push
leave
mov
inc
sbb
loop
stos
(bad)
loopne
inc
inc
loopne
test
mov
mov
movs
xor
xchg
je
retf
cdq
xchg
addr16
push
pop
popa
xlat
mov
iret
push
adc
mov
dec
xlat
xlat
loope
inc
mov
sub
jns
push
pop
or
out
aam
inc
jo
aas
movs
and
dec
adc
cmc
inc
push
inc
shl
lods
repnz
cwde
sub
pop
jle
xchg
cmc
and
dec
test
adc
mov
sbb
inc
inc
xor
mov
dec
xor
sti
mov
cdq
xor
jle
mov
(bad)
bound
and
add
push
js
pop
and
fldcw
sbb
sbb
popa
push
mov
loopne
sub
mov
int3
sub
loopne
add
push
cli
mov
call
add
out
addr16
pop
neg
mov
and
mov
out
pop
test
adc
sbb
cdq
push
jge
sub
clc
test
ret
adc
popa
shr
ins
xchg
jg
sub
or
jg
cs
jnp
cwde
leave
jle
sub
aaa
or
test
out
popa
sar
adc
mov
mov
jns
pop
jnp
sbb
cmp
neg
cmps
inc
ror
sti
xlat
push
pop
cmp
adc
and
mov
aad
mov
aas
or
cmp
and
pushf
adc
sbb
loopne
cmp
hlt
xchg
stc
cmp
imul
push
push
or
sbb
inc
arpl
mov
call
push
mov
into
adc
mov
lock
aad
bound
scas
push
xchg
or
inc
xchg
jns
outs
cdq
mov
pop
jl
and
jg
mov
jb
test
test
or
sbb
sub
cld
repz
loopne
dec
sub
cld
mov
adc
dec
push
sar
sub
popa
popf
repnz
push
fcomp
loop
aam
in
in
gs
pop
adc
out
add
ret
or
je
or
mov
inc
popf
push
fcmovnbe
cmp
or
fs
xor
xchg
(bad)
pop
test
lea
cmp
jb
sbb
fst
fnstenv
fcomp
mov
movs
and
or
cmc
icebp
sar
lods
fs
jmp
and
arpl
jo
xor
enter
(bad)
jmp
bound
sbb
sbb
jmp
xchg
ja
jbe
and
adc
jns
push
dec
jne
or
sub
cmp
mul
xor
jmp
arpl
sub
mov
mov
jp
xor
jno
in
push
and
jp
cmp
retf
fstp
jmp
inc
and
sub
xor
fcomp
leave
pop
sbb
cmp
inc
and
or
jno
int
and
inc
xchg
shr
stos
fwait
pop
pusha
test
and
dec
jmp
or
adc
push
pop
inc
lea
xchg
in
mov
outs
(bad)
xchg
sbb
out
lds
into
mov
fisttp
adc
inc
mov
xchg
call
and
sbb
push
out
xchg
test
je
imul
cld
adc
sub
call
call
and
inc
cmp
ja
adc
jne
les
sub
inc
jae
outs
cmp
push
in
mov
stc
jns
push
adc
dec
in
xchg
and
mov
sub
nop
sbb
ss
pusha
mov
mov
inc
in
pop
sub
adc
mov
push
aam
inc
jp
js
pop
imul
arpl
inc
iret
push
sub
pusha
arpl
dec
fsub
mov
jno
adc
inc
cmp
mov
std
call
mov
mov
inc
or
cmc
rcl
sahf
ins
pop
xor
(bad)
pop
lods
es
push
out
movs
outs
jmp
mov
cwde
sbb
push
int
lock
ja
jp
or
(bad)
hlt
jecxz
xchg
jl
out
push
scas
movs
out
cmp
fadd
jge
cmps
cmp
lahf
inc
jb
movs
lds
and
xchg
jo
sbb
xchg
cmc
sbb
loopne
add
mov
mov
dec
test
and
mov
in
repz
movs
hlt
test
(bad)
lods
mov
rcl
jge
sar
pop
adc
push
jmp
mov
add
pusha
pushf
and
outs
sar
inc
pop
das
movs
pop
mov
sbb
shl
inc
rol
ins
test
and
or
in
inc
mov
pavgw
mov
(bad)
xchg
cmp
daa
mov
xor
jl
lods
dec
popa
loope
push
in
out
sbb
aas
pop
inc
rcl
iret
inc
adc
stc
movs
adc
jmp
movs
popf
std
cmp
mov
adc
lods
dec
ffree
popa
xor
sbb
in
in
es
retf
popf
pop
(bad)
push
cli
inc
jg
stos
pushf
frstor
sub
cmps
retf
daa
push
sar
imul
enter
xchg
sbb
rcl
dec
movs
int
mov
mov
or
adc
pop
aas
push
ror
cmp
dec
pop
xchg
icebp
sbb
push
dec
popa
and
push
or
pop
in
and
adc
adc
fucom
xor
push
mov
repz
cmp
and
shl
bound
push
imul
ds
adc
loopne
js
push
jns
mov
retf
stos
sbb
mov
out
fyl2x
dec
repz
arpl
xlat
ins
mov
lods
inc
mov
xlat
pop
and
call
pop
mov
jg
jns
out
icebp
cs
adc
mov
ret
push
xchg
cmps
stos
fisub
(bad)
movs
jnp
push
xor
cld
xchg
sahf
pop
sub
pop
dec
dec
inc
dec
sbb
push
or
jb
cmp
xor
dec
pop
mov
int
test
les
inc
aam
inc
dec
das
mov
call
ins
out
shl
iret
sbb
lods
idiv
mov
or
xor
js
sbb
lods
jg
cmp
sbb
push
in
and
add
sub
test
jp
inc
dec
xor
xchg
cmp
or
cmp
sahf
adc
or
idiv
sub
mov
pop
lock
(bad)
cld
sbb
jle
sbb
add
ins
pop
imul
daa
data16
xchg
je
cmps
jge
in
ins
leave
add
fwait
loopne
rol
push
gs
sbb
enter
in
shl
nop
ror
into
xor
out
xor
popf
mov
dec
lea
inc
cmps
gs
movd
imul
xchg
cli
fidivr
arpl
out
cmp
adc
sbb
ret
into
or
xor
dec
das
dec
push
push
into
fs
add
and
inc
and
add
or
js
jne
or
gs
sahf
sub
jecxz
pop
(bad)
jb
sti
adc
lock
shld
fist
aaa
stos
sub
add
xchg
leave
sar
test
push
sbb
lods
ret
inc
lds
jg
sbb
call
xchg
test
cmp
idiv
scas
cmps
scas
xchg
inc
mov
mov
lock
push
stos
sbb
or
and
ins
(bad)
dec
fild
mov
cwde
pop
xor
sbb
xchg
cmp
cmps
mov
dec
in
inc
xlat
test
(bad)
xor
and
xchg
dec
sub
add
loopne
dec
int3
mov
cmps
std
cdq
loop
pop
sahf
out
and
inc
mov
or
data16
cmp
jp
daa
scas
sub
mov
nop
cmps
stos
retf
mov
int3
mov
mov
test
pop
pop
jae
psrlq
movs
adc
cmps
out
and
fsub
mov
leave
retf
xchg
inc
dec
adc
inc
popf
in
mov
jmp
cli
xchg
jp
jge
fstp
in
push
in
shr
and
pop
cmp
ins
lods
std
inc
out
enter
cmp
js
dec
adc
push
or
push
loopne
fistp
mov
lea
mov
jmp
and
clc
fisubr
pusha
popa
pop
aam
rcl
push
sbb
mov
xchg
dec
mov
dec
idiv
sbb
sub
sbb
int3
(bad)
gs
test
fdivr
movs
cmp
pop
test
ja
jl
xor
mov
retf
les
in
js
inc
and
add
pop
pop
cli
lahf
hlt
pop
cmps
dec
clc
jl
pop
jp
sar
sub
repz
add
inc
mov
mov
sbb
lock
ins
pushf
fld
push
mov
pop
lahf
dec
icebp
scas
sub
shr
int
shl
dec
outs
push
das
jg
and
inc
pushf
sub
lock
dec
fs
stc
mov
xchg
push
push
cmp
push
adc
push
cdq
mov
retf
jno
mov
xchg
push
mov
fcomp
mov
and
jmp
pop
sbb
sar
add
rol
or
retf
adc
fld
add
pop
dec
cmp
sbb
(bad)
js
shrd
xor
or
icebp
mov
repnz
mov
shl
leave
xor
inc
push
fdiv
loop
xchg
mov
js
xchg
adc
in
(bad)
fstp
mov
xchg
inc
es
fucomi
push
jb
or
pop
fs
adc
dec
movups
lods
pop
icebp
cmp
aad
sub
fwait
xchg
and
les
sbb
sbb
cli
inc
shl
ins
retf
loop
sar
test
add
out
scas
pop
mov
out
cmp
lods
dec
lds
and
jns
sub
adc
(bad)
and
jecxz
and
pop
cmp
push
ret
popf
ds
mov
inc
xchg
loopne
mov
push
mov
add
inc
lds
(bad)
mov
or
adc
sbb
popf
sbb
dec
ss
push
call
sub
scas
mov
push
ficomp
mov
cdq
ret
in
xor
(bad)
fxch
pop
sbb
adc
in
adc
fsubrp
les
inc
jnp
lahf
cmps
xor
iret
xor
push
into
jp
cmp
test
mov
jo
adc
lea
fsub
or
ret
ret
movs
mov
nop
out
das
cmc
mov
inc
mov
fs
fsubp
jmp
ret
cmp
mov
sub
out
add
es
inc
cdq
mov
data16
test
mov
in
pop
(bad)
jo
ret
dec
xchg
jmp
jecxz
fdivr
jo
je
aam
jg
mov
mov
mov
mov
aam
jmp
or
xchg
xchg
aam
pop
sbb
call
ds
imul
cmp
push
addr16
or
(bad)
scas
mov
sahf
out
cmc
add
cmps
jge
push
mov
ss
inc
std
lods
nop
ret
sub
inc
xchg
in
outs
xchg
and
xor
mov
jmp
out
leave
adc
push
mov
mov
jge
push
sub
mov
rcr
xor
pop
xchg
sub
sbb
fiadd
inc
push
adc
push
test
and
lods
sbb
add
cmp
mov
dec
mov
pop
clc
mov
ss
retf
cwde
cs
adc
adc
xor
ins
les
and
test
jge
loope
mov
jb
push
(bad)
fild
inc
mov
out
fldenv
inc
stos
xchg
sbb
mov
xor
int
pop
ins
hlt
fnstcw
add
scas
jmp
jo
mov
sub
mov
mov
mov
repnz
dec
xchg
push
mov
ss
popa
xchg
arpl
add
std
das
cmp
sub
mov
ret
outs
inc
dec
sti
pop
aas
or
sti
mov
sbb
push
shl
adc
push
cld
scas
stos
xchg
mov
push
sti
push
jbe
pop
jmp
jmp
pop
or
(bad)
jae
iret
fist
dec
out
cmp
cwde
inc
adc
es
sub
jo
cmp
pop
xor
int3
pop
add
stos
std
jnp
sar
scas
lock
mov
pusha
sbb
cvttps2pi
call
mov
addr16
bnd
pop
jo
cmps
adc
push
test
mov
adc
or
mov
jnp
daa
cmps
jl
in
enter
cmps
fist
pusha
call
jno
cld
xlat
sub
xchg
jne
or
push
stos
push
inc
push
leave
ror
popf
pop
fcomp
mov
and
jo
jb
sbb
or
lods
sbb
xchg
pop
push
xor
adc
and
je
inc
sbb
add
pushf
leave
fsub
imul
sub
cmp
and
mov
pop
ret
call
stos
add
std
mul
ror
dec
stc
aam
mov
sysenter
jmp
push
(bad)
xorps
inc
cmps
rol
cmps
data16
xchg
inc
push
jle
int3
fiadd
aaa
out
xor
pop
xchg
mov
outs
jne
push
sub
add
push
jmp
jne
stc
mov
data16
std
aam
mov
mov
sbb
rcr
sub
mov
pushf
sar
test
jbe
pop
cmp
(bad)
adc
sub
(bad)
popf
hlt
inc
lds
xchg
loop
add
scas
jge
adc
and
mov
and
(bad)
xchg
jmp
push
xchg
mov
xchg
mov
in
pop
adc
fld
sub
jne
adc
daa
xchg
inc
adc
cmps
sbb
nop
ficomp
mov
shr
push
retf
test
add
push
not
pop
int
jmp
mov
inc
dec
or
imul
push
mov
dec
sbb
loope
outs
stos
sub
pop
mov
sub
push
in
pop
lds
sbb
fistp
add
test
cld
xor
aaa
in
add
inc
sbb
cmp
sub
mov
mov
push
xor
or
jae
dec
adc
(bad)
cld
pop
jns
sub
sbb
rol
(bad)
retf
dec
push
movs
das
retf
xchg
scas
ss
xchg
adc
mov
jnp
cmc
movs
xor
inc
cmp
ret
jbe
adc
add
aaa
and
add
and
xchg
ds
pop
adc
outs
xor
ja
xchg
push
push
add
fucomi
dec
in
dec
xchg
test
sub
or
inc
push
test
ja
sub
push
xchg
push
int
daa
retf
sbb
(bad)
push
xchg
scas
add
or
cmps
nop
add
inc
and
jmp
ins
hlt
call
daa
sub
sub
clc
jl
(bad)
test
dec
aad
test
pop
repnz
repz
and
retf
cmp
cmp
cmps
mov
jle
addr16
cmp
xor
mov
pusha
sub
dec
jl
icebp
and
or
mov
mov
mov
rol
fisttp
test
push
xor
sub
pop
mov
mov
push
cmp
mov
(bad)
push
sbb
lods
pop
clc
lea
sub
outs
sub
test
jno
and
stos
mov
in
mov
(bad)
inc
sbb
cmp
push
jge
idiv
ret
xor
sbb
movs
(bad)
dec
push
add
dec
lahf
ds
dec
pop
sub
sbb
out
(bad)
pop
xchg
fild
sbb
cwde
ja
add
test
std
stos
add
push
or
fst
pushf
push
shl
mov
pop
ret
iret
mov
mov
xor
out
ins
hlt
and
fadd
ror
in
pushf
retf
repnz
neg
shr
inc
cs
cli
popf
lds
loopne
stos
je
add
xor
fld
aaa
dec
and
and
sbb
jecxz
bnd
inc
jge
bound
xchg
xchg
xlat
push
aas
mov
out
lods
arpl
xor
adc
dec
mov
cmp
loope
push
sub
push
or
jo
lahf
inc
in
jo
mov
test
mov
xchg
jmp
and
mul
jns
out
mov
test
pop
pop
adc
popf
sbb
cwde
mov
pop
add
and
cdq
mov
int
rcr
pop
das
sub
outs
xor
jo
cmp
adc
mov
jge
jb
es
pop
int3
retf
add
push
mov
mov
lock
dec
dec
add
mov
hlt
xchg
mov
xchg
fadd
stos
sbb
cwde
or
std
add
and
sbb
ins
lods
enter
repnz
sub
out
in
mov
cmps
cs
aad
mov
in
inc
retf
pop
call
mov
out
push
scas
push
cmps
jae
add
jl
popf
pusha
(bad)
push
xchg
cld
and
test
fisttp
sar
or
sbb
das
and
pop
inc
cmps
(bad)
fcomp
arpl
aaa
adc
add
xchg
das
jne
lock
mov
push
push
and
cs
add
push
sub
dec
es
push
dec
sar
iret
adc
cli
push
in
pop
jmp
cwde
dec
in
pop
mov
mov
push
out
repz
(bad)
and
pop
sub
xchg
xor
stos
pop
xor
jnp
cmc
mov
pusha
sub
rcr
out
les
js
fmul
sub
and
repz
hlt
add
sub
loope
xchg
mov
pop
pop
or
ja
or
js
(bad)
xchg
repz
or
push
out
stos
jp
push
icebp
xchg
sbb
mov
fcom
and
out
adc
hlt
pop
dec
xor
into
leave
jo
movs
inc
aaa
sub
dec
cli
hlt
xor
fwait
mov
push
jecxz
push
bound
mov
outs
sahf
aad
xchg
inc
ss
ss
arpl
fistp
stc
add
jmp
aad
lock
cmp
jmp
loope
(bad)
xchg
inc
jns
repnz
or
(bad)
js
mov
add
stc
ins
xchg
ss
cmp
lods
cs
leave
(bad)
sbb
out
add
cdq
bound
scas
pop
jp
add
inc
daa
sar
out
mov
loop
and
pusha
inc
imul
add
pusha
push
mov
push
icebp
push
mov
cmp
lea
imul
mov
sub
add
push
push
push
jp
pusha
mov
icebp
pop
push
loope
mov
repz
inc
add
jl
out
mov
jns
sbb
dec
fadd
rcr
xchg
sub
icebp
popa
or
call
sub
jns
mov
or
jns
movs
es
pop
sbb
daa
and
fwait
clc
push
or
scas
in
cmp
(bad)
in
mov
fdiv
adc
sub
jne
mov
fsub
es
in
out
push
push
pop
shr
das
jb
adc
loope
add
mov
push
add
lock
mov
rol
fistp
cmp
jb
(bad)
movs
add
dec
jecxz
inc
inc
add
add
out
sub
mov
pushf
mov
ret
test
leave
repnz
adc
adc
imul
and
retf
push
out
inc
rol
sub
xor
imul
lea
inc
push
pop
sbb
jp
jns
xchg
mov
or
xchg
mov
aam
inc
pop
xchg
scas
jae
dec
push
xchg
out
imul
sbb
inc
repz
rcl
es
xchg
dec
mov
jecxz
stc
ficomp
inc
add
cmp
int3
(bad)
ins
xchg
jno
dec
sti
adc
xchg
ficom
es
mov
(bad)
fadd
xchg
and
cwde
cmp
sbb
cmp
jbe
pop
push
lahf
push
cs
fist
loopne
push
push
test
rol
mov
dec
mov
adc
jb
iret
popf
cld
mov
repnz
je
push
cmc
lahf
shr
sbb
add
adc
add
mov
mov
add
lahf
pop
adc
stc
push
leave
stos
mov
stc
fwait
cmp
xchg
xchg
(bad)
pop
xlat
pushf
adc
xchg
push
mov
jmp
sub
das
add
ror
inc
cmp
iret
pop
dec
jno
or
das
je
mov
and
jae
loope
inc
push
pop
je
mov
mov
push
retf
cmc
push
lea
mov
xor
dec
xchg
push
sub
jg
dec
lds
jge
xor
inc
and
xchg
adc
icebp
repnz
xchg
cmp
xchg
push
mov
stos
push
stos
cs
sub
dec
mov
int3
cmps
cmps
sahf
popa
jae
je
push
push
pop
imul
xor
lods
adc
int3
sub
lods
sub
loop
sbb
jp
adc
push
data16
sub
jne
in
hlt
fwait
sar
sbb
repz
pop
xor
push
jnp
cs
cs
mov
mov
push
std
lods
ffree
repnz
inc
js
adc
cmp
xchg
lods
push
out
popa
add
add
sub
aam
bound
cmp
mov
add
imul
repz
sbb
mov
cmp
or
dec
mov
cmc
pop
sub
push
xchg
div
aad
jnp
add
addr16
dec
jp
repz
movs
fdiv
jecxz
inc
pop
sub
je
mov
ja
inc
pop
int3
xchg
out
sub
adc
ja
pop
in
(bad)
adc
pop
aas
jne
enter
lods
test
addr16
and
add
jg
pop
iret
sar
mov
xchg
add
(bad)
mov
jp
push
mov
into
xchg
pushf
push
jne
fisttp
pop
jbe
pop
xchg
mov
loopne
push
or
xor
sbb
imul
fdiv
int
stc
push
dec
xor
xchg
xchg
mov
jae
pop
enter
push
outs
ins
(bad)
cmps
xchg
addr16
cmc
in
stos
pushf
hlt
fimul
dec
mov
out
xor
hlt
shl
pop
add
mov
fisub
xchg
jg
pop
in
xor
ds
xchg
aas
sub
add
cmc
fild
out
add
fmul
cdq
popf
push
add
inc
bound
fsubr
inc
inc
ins
jno
xor
jno
jne
pop
(bad)
adc
call
cmp
(bad)
jmp
dec
add
sahf
into
xor
mov
dec
sbb
adc
out
jns
jmp
iret
inc
sub
inc
sub
mov
mov
sub
ins
xor
xchg
push
and
out
pop
dec
hlt
xor
mov
dec
dec
inc
mov
and
jbe
movs
scas
push
outs
sbb
sub
add
add
mov
mov
xor
jmp
xor
xchg
sub
dec
aam
neg
or
jo
or
sbb
xor
(bad)
jl
loop
xchg
mov
jnp
test
cwde
pop
fadd
jo
fcom
and
add
xor
or
push
jp
pop
ins
data16
adc
cli
fimul
frstor
pop
push
cmp
and
ss
push
pusha
mov
mov
xchg
repnz
jbe
adc
add
es
lahf
daa
daa
push
pop
or
jno
mov
fiadd
sar
dec
outs
xchg
aam
push
cmp
push
leave
and
sub
or
neg
cmp
sbb
scas
jb
in
ins
js
xor
pushf
sub
nop
dec
mov
ret
and
sti
in
inc
test
aas
mov
retf
jecxz
sbb
xchg
adc
sti
dec
fmul
pop
pop
mov
push
jbe
push
daa
adc
cmp
add
jecxz
stos
pop
std
add
add
jno
fiadd
jae
and
imul
xchg
and
jno
in
inc
mov
scas
ss
cmc
and
sbb
and
mov
push
xchg
push
inc
or
(bad)
sub
cwde
cmp
in
mov
out
(bad)
adc
jmp
cli
jae
fcomp
xchg
mov
int3
pop
mov
mov
and
mov
inc
sti
lds
push
cmp
mov
ja
int3
pop
adc
xor
aam
stos
and
push
push
out
add
cmps
aam
lds
cmp
inc
fisttp
ret
loopne
push
add
sbb
cmc
imul
push
sbb
aam
xchg
adc
sub
or
sbb
pop
in
adc
mov
mov
dec
jae
mov
dec
sbb
dec
shl
fwait
pop
aad
(bad)
jp
je
test
push
in
add
ds
into
xchg
adc
stos
add
ror
lahf
mov
push
dec
mov
inc
add
mov
fwait
imul
push
aaa
xor
leave
fcmovbe
icebp
mov
add
jl
pop
adc
or
mov
cmp
int
jecxz
sub
clc
movs
retf
je
mov
cmps
jl
scas
mov
adc
sub
sub
push
pop
les
dec
mov
jg
arpl
in
mov
inc
ins
ds
jg
jmp
pop
add
cmps
sub
and
leave
out
out
ja
dec
xchg
mov
and
test
xlat
rcl
ds
int
call
loope
idiv
push
add
aad
or
shl
and
hlt
dec
unpckhps
inc
mov
push
je
out
and
dec
or
push
mov
int3
jbe
call
cld
sbb
push
call
push
cmp
push
daa
mov
nop
aad
push
cmp
dec
push
or
push
push
or
(bad)
sbb
xchg
movs
loop
sub
push
adc
cmps
inc
rcr
dec
cmps
sbb
sbb
xchg
mov
push
shl
sub
inc
in
into
push
xchg
or
stos
xlat
in
int
mov
into
aas
idiv
inc
(bad)
jnp
and
cmc
dec
cli
ret
pop
ss
(bad)
xor
push
dec
(bad)
(bad)
movs
inc
loope
jo
mov
cs
jp
in
adc
mov
(bad)
jl
imul
sub
mov
imul
out
loope
pop
ins
movs
test
cmp
and
cli
out
add
adc
jae
lahf
ins
jno
xor
pop
sbb
cdq
ret
sbb
mov
int3
pop
inc
or
sbb
pop
addr16
and
outs
xchg
mov
mov
mov
(bad)
xor
mov
div
jbe
mov
fmul
xchg
mov
push
call
jmp
xlat
jns
sbb
xchg
popa
ret
icebp
sub
push
xor
cli
sbb
adc
jg
je
add
sbb
mov
adc
loop
es
iret
jl
cmps
nop
or
cmps
mov
cmps
out
(bad)
sbb
ds
in
test
adc
pop
lahf
mov
aad
and
ja
mov
dec
retf
inc
or
imul
or
add
push
out
cmp
ret
inc
outs
sahf
loop
cmps
imul
jne
fsubr
xchg
sbb
les
es
and
cmc
mov
test
xchg
and
ret
(bad)
stos
mov
jmp
pusha
icebp
leave
add
adc
add
hlt
mov
push
dec
out
loop
cmp
(bad)
mov
std
xchg
vpmovmskb
dec
jbe
sub
mov
repnz
aas
test
inc
test
xchg
mov
popf
jb
or
shr
and
jp
rcl
leave
or
mov
or
jns
jmp
cmp
pop
aam
div
jmp
mov
test
push
or
test
xor
sbb
cwde
mov
add
les
inc
jae
jmp
ds
sbb
addr16
cdq
ds
jle
sbb
mov
shr
sbb
cmp
lahf
in
ja
repnz
cs
sub
add
pop
shl
dec
arpl
dec
ret
mov
push
xor
clc
sub
cmp
pop
mov
mov
cdq
jmp
push
xor
sbb
dec
xchg
xor
outs
test
cmp
xor
popf
lds
mov
lock
in
or
repz
scas
dec
push
or
mov
lock
mov
in
in
sub
or
push
pushf
or
push
xor
xor
push
int3
jl
cdq
cmps
clc
test
imul
jo
or
or
popa
int
int
dec
sbb
jp
sub
ss
loop
dec
jl
xchg
(bad)
jg
iret
cdq
adc
movs
push
sub
(bad)
mov
mov
ficomp
leave
fisttp
aas
or
pause
dec
in
pop
pop
jo
retf
pusha
jae
add
out
pusha
dec
add
lods
test
xchg
cwde
dec
rcr
xlat
push
leave
mov
add
and
lods
push
imul
cmps
and
mov
push
or
mov
xor
or
aaa
mov
lock
pop
mov
daa
clc
xchg
enter
inc
stc
pop
mov
out
or
lods
leave
dec
out
popf
push
out
ret
retf
movs
jb
xchg
fistp
cdq
push
cmps
pop
ins
sbb
jb
fistp
outs
cli
jno
mov
ud1
mov
(bad)
aam
xchg
sbb
ret
cmp
arpl
add
fs
mov
jge
pop
les
cmp
icebp
mov
sub
sub
inc
adc
cmp
bound
outs
or
or
test
rol
jmp
cmp
xor
loop
pop
out
push
xchg
push
arpl
jmp
or
push
test
ror
and
mov
or
or
mov
jecxz
jl
retf
push
(bad)
aam
sahf
adc
xchg
mov
dec
jb
mov
pop
popa
sar
inc
xchg
add
cmp
jae
sbb
data16
aaa
jae
mov
out
dec
pop
aas
es
pop
retf
push
jle
rcr
dec
sub
jbe
mov
adc
cdq
in
pop
adc
mov
inc
int3
cmps
dec
push
mov
mov
ins
mov
shr
mov
enter
inc
cmp
dec
push
shl
jmp
mov
and
inc
sbb
xor
mov
jp
aam
sahf
les
int
outs
pop
in
inc
mov
call
movs
dec
cmc
push
(bad)
js
inc
mov
ret
xlat
mov
outs
sbb
mov
repz
cmps
inc
push
sbb
stc
(bad)
stc
int
pushf
ins
mov
adc
jp
push
cmp
jmp
rsm
or
dec
loope
lock
enter
(bad)
lods
inc
mov
pop
fidivr
lods
clc
loopne
sub
add
mov
loop
in
xchg
es
fldenv
in
ds
les
retf
or
repnz
jle
push
adc
test
ins
or
mov
xor
ucomiss
adc
sub
imul
in
lods
addr16
lea
(bad)
cmp
jo
(bad)
cmp
in
inc
xchg
mov
test
sbb
or
loop
je
gs
hlt
fdivr
ds
xor
in
pop
xlat
fnstcw
ret
push
cs
xchg
xchg
mov
cdq
into
mov
cmp
xchg
enter
ficomp
scas
xchg
sahf
movsx
and
cli
dec
inc
xor
or
aaa
fbstp
xor
mov
cs
inc
push
sub
sahf
inc
and
pop
das
cmps
arpl
aaa
ror
pop
push
fs
mov
xchg
mov
ficom
into
pop
push
mov
cmps
mov
out
adc
fsub
mov
stos
shl
cmp
or
pop
inc
add
jns
retf
lods
mov
or
sub
movs
or
xor
sti
fwait
pop
(bad)
push
mov
fwait
aad
jle
fwait
movs
jl
into
jns
icebp
jbe
or
fisubr
inc
ret
aad
xchg
push
jne
sbb
dec
jnp
mov
and
mov
fwait
mov
test
stc
loopne
in
in
ja
loope
out
add
push
stos
pop
xchg
or
imul
lahf
retf
jmp
shr
cdq
cmps
mov
sub
push
(bad)
cmp
push
mov
pusha
(bad)
neg
jl
and
mov
pop
mov
lods
mov
dec
push
nop
pusha
sbb
jge
addr16
xor
dec
ror
mov
data16
cmp
sbb
imul
imul
rol
cmp
dec
add
sub
sub
sub
enter
int3
loop
hlt
jmp
mul
inc
or
pop
mov
mov
mov
inc
iret
stc
jno
push
sbb
mov
add
pusha
sbb
pop
inc
popf
inc
repz
stc
gs
fiadd
mov
and
loopne
mov
in
adc
sti
inc
mov
ret
and
cld
test
push
out
stc
fstp
cld
cmp
push
clc
aad
fcmovnb
mov
mov
icebp
mov
cmp
sub
push
xchg
fwait
mov
leave
pop
clc
and
pop
push
adc
jb
sbb
jno
push
sbb
popa
xchg
add
sbb
sbb
les
inc
ror
sar
lods
pop
xor
pop
call
icebp
repnz
push
fucom
aas
int3
jmp
arpl
fist
addr16
icebp
test
push
inc
mov
mov
icebp
fwait
adc
adc
fs
pop
cmp
cwde
mov
fist
xchg
daa
sti
pushf
cmp
xchg
pop
aad
pop
shr
cmc
push
lahf
jo
pop
dec
(bad)
std
dec
dec
cmp
leave
or
imul
pushf
push
mov
lods
cmc
and
mov
add
xor
add
cmps
jns
mov
and
sbb
mov
jg
mov
add
push
push
sub
jb
inc
xor
jmp
mov
inc
loop
or
pop
test
sub
mov
mov
sahf
pop
pop
shl
stc
bound
or
enter
loopne
sbb
push
xor
and
nop
inc
cmp
push
repnz
mov
es
fnstcw
push
jne
and
mov
sbb
popa
lea
in
into
nop
adc
fnstenv
jg
xchg
cdq
or
inc
xchg
adc
push
add
xor
sub
pop
inc
into
retf
mov
mov
sub
addr16
cld
adc
scas
pop
js
movs
push
sbb
imul
enter
out
and
out
or
jl
sbb
pop
xchg
push
push
sub
or
sub
xchg
test
mov
sbb
cmps
sub
icebp
add
mov
xor
ret
mov
pop
cvtpi2ps
add
xchg
hlt
mov
idiv
xor
inc
push
and
mov
arpl
mov
out
ins
xor
pop
dec
mov
pop
add
int3
pop
add
nop
xor
or
mov
mov
cmps
or
shr
cmp
pmuludq
pop
(bad)
push
pop
sbb
inc
(bad)
out
inc
das
xor
xor
xor
jl
enter
adc
arpl
into
dec
dec
inc
pop
loope
dec
in
inc
xchg
mov
imul
jnp
jmp
adc
rcl
xchg
pop
inc
add
mov
stc
mov
test
aaa
stos
add
in
add
inc
sub
jmp
repnz
(bad)
jmp
jl
fwait
test
mov
sar
std
sub
shl
and
mov
sub
sbb
cs
or
mov
jp
mov
jmp
mov
and
adc
rcl
and
xor
xchg
sub
jle
and
(bad)
sub
lea
jmp
inc
ss
mov
add
xor
mov
mov
inc
push
and
mov
add
out
cmp
not
mov
inc
fwait
inc
das
lahf
and
aaa
hlt
jmp
or
cmp
cmc
fisubr
jns
jbe
pop
test
push
movs
js
rcr
adc
jl
sahf
das
xchg
cmp
mov
imul
sub
imul
daa
cs
and
out
cwde
mov
imul
fs
push
xchg
sub
and
lahf
mov
cmc
inc
xchg
in
call
inc
(bad)
sti
int
and
sbb
mov
xchg
bound
aad
icebp
mov
jge
pop
mov
and
mov
sahf
jecxz
inc
xchg
shl
(bad)
cmp
ja
inc
inc
(bad)
ret
pop
mov
leave
call
or
lds
jp
dec
add
adc
aas
pop
test
pop
js
xchg
lahf
mov
jns
xor
cld
jmp
cmp
sbb
cli
or
neg
in
xlat
fld
bound
retf
xchg
retf
mov
sub
test
cmp
lods
stos
sti
lahf
push
stos
mov
popa
loop
sub
sbb
and
push
es
pop
or
lods
retf
jp
jb
mov
xor
inc
sub
sar
cdq
test
or
loope
pop
xor
loopne
sbb
sar
add
jle
adc
pushf
les
sbb
mov
ins
icebp
loopne
bound
arpl
icebp
jle
cmp
(bad)
adc
cwde
mov
mov
scas
sub
ret
add
sbb
xchg
mov
push
mov
les
push
cmp
dec
les
neg
nop
pushf
push
xchg
push
jl
pop
xchg
sub
or
in
cmp
icebp
add
mov
lods
imul
stos
fistp
in
jle
mov
pop
aad
xchg
jae
dec
aas
xor
retf
aad
stos
jb
shr
cmc
add
xchg
pop
mov
adc
cwde
mov
iret
sti
dec
sbb
adc
sub
push
lods
sub
fst
cs
and
xor
shr
pop
ret
aas
mov
cs
aad
fld
stos
mov
or
cmp
int3
push
sahf
repnz
pop
xchg
dec
addr16
pop
xchg
jne
gs
xor
enter
shl
xchg
mov
adc
adc
aad
not
shl
jmp
les
(bad)
cld
mov
sub
ss
inc
lods
in
retf
dec
(bad)
push
cwde
adc
pop
push
xchg
repz
retf
int
adc
sti
or
sub
(bad)
arpl
xchg
push
rcl
call
pop
shr
pop
push
sub
xchg
jg
jne
stos
or
sub
mov
pop
rcl
rcl
(bad)
movs
jl
jp
push
test
das
cmp
in
test
inc
sbb
lods
and
rcr
shl
sbb
cmp
push
lock
lods
inc
repz
bound
ss
(bad)
hlt
add
dec
push
dec
(bad)
imul
out
sub
aam
dec
pop
jmp
mov
jle
frstor
test
rcr
stos
pop
cs
sbb
cmp
mov
mov
mov
fisub
imul
push
mov
xchg
ss
mov
fsqrt
xor
std
aad
jp
test
enter
dec
mov
push
mov
cmp
lods
dec
inc
jle
test
jge
mov
mov
ins
loope
mov
ss
lahf
dec
out
mov
xchg
cmc
rcl
inc
add
loop
jg
sahf
push
clc
mov
daa
pop
add
adc
retf
popf
js
dec
dec
in
xlat
cs
loope
aas
push
or
jbe
(bad)
loope
popa
mov
xor
adc
mov
retf
mov
or
xor
or
jmp
ror
push
lds
push
icebp
mov
mov
xchg
jo
pop
pusha
push
cmp
jmp
cs
push
sbb
(bad)
fidiv
shr
aam
addr16
clc
or
and
inc
add
jb
xchg
cmp
stos
sbb
(bad)
sbb
in
fs
sbb
sbb
pop
repz
jp
lock
dec
mov
(bad)
jecxz
or
cmp
push
in
nop
xchg
cmc
add
cmps
inc
int3
in
scas
in
pop
cld
lea
lahf
inc
cmp
cdq
dec
test
adc
fdivr
scas
aam
pop
sub
test
sti
jecxz
or
cmp
int3
je
adc
mov
mov
pop
sbb
add
loope
test
push
or
xchg
sbb
jb
iret
inc
aas
in
xchg
jo
cs
je
rcl
fnsave
push
pop
fsub
adc
mov
inc
in
call
dec
mov
sti
les
dec
mov
xchg
fwait
mov
(bad)
(bad)
cmp
sahf
mov
ficom
leave
dec
sub
out
(bad)
mov
inc
adc
int
jbe
add
outs
and
push
push
mov
ins
scas
mov
or
std
mov
add
scas
imul
mov
scas
sub
leave
js
shl
push
jl
jb
xor
loopne
gs
dec
xchg
cmp
test
icebp
cli
fild
xchg
dec
rcl
cmps
fisttp
mov
mov
or
lods
jns
xor
jne
fsubr
fs
lock
pop
dec
or
or
test
add
(bad)
out
stos
test
(bad)
adc
mov
cmps
es
cmp
in
movs
stc
neg
xchg
adc
cmp
mov
sub
sbb
cmpxchg
cmp
xor
or
sbb
pop
pop
loop
loop
jo
fmul
mov
sub
in
cmp
call
in
xchg
sbb
or
repnz
cmp
sbb
pop
mov
push
fisubr
mov
bound
pop
ds
push
adc
mov
cmp
sub
mov
fisub
jnp
lods
imul
add
adc
lods
pop
sbb
sbb
scas
and
(bad)
add
push
xchg
cmp
pop
mul
setne
add
xchg
das
mov
or
test
outs
retf
rol
push
test
(bad)
mul
daa
ins
inc
adc
fisub
lds
xor
mov
fst
push
mov
mul
cmp
rcl
jge
sub
mov
xchg
pushf
jmp
and
jnp
push
enter
mov
(bad)
cmc
xor
fimul
mov
push
and
(bad)
pop
pop
lea
mov
and
pop
stos
and
or
push
mov
adc
or
cmp
fcos
jp
adc
(bad)
pop
sbb
inc
sbb
repz
pushf
xlat
ins
push
stos
xchg
loopne
pushf
arpl
pop
pop
pop
push
mov
jmp
inc
dec
stc
xchg
mov
adc
push
js
je
cmp
pop
and
addr16
ret
or
loopne
cs
mov
int3
loopne
or
cld
add
mov
jl
cmp
push
lock
inc
jb
mov
add
xchg
loope
xchg
call
cmp
loopne
sbb
push
push
xor
push
test
arpl
mov
aad
xchg
shr
(bad)
mov
inc
sbb
add
or
(bad)
jge
sbb
lock
inc
mov
movs
in
mov
inc
mov
pop
inc
pop
mov
xor
arpl
ja
mov
fwait
jmp
(bad)
imul
test
rcl
add
hlt
mov
mov
sub
popf
push
aad
mov
push
sub
bound
je
pop
xchg
pop
fs
jo
call
push
js
xchg
mov
lahf
xchg
mov
fld
mov
mov
ja
jo
inc
in
das
test
sbb
(bad)
pushf
mov
(bad)
push
dec
mov
int3
retf
cmp
stc
xchg
shl
in
inc
fisttp
push
or
and
mov
jmp
pop
add
and
inc
sub
cdq
adc
sub
mov
aas
pop
cmps
shr
test
stc
jp
dec
lods
fild
ret
or
hlt
mov
call
fiadd
(bad)
xor
and
pop
mov
loop
stos
xchg
mov
retf
push
adc
and
loop
jno
dec
retf
jae
fwait
popa
movs
cmp
push
cmp
and
scas
dec
lea
cmp
out
push
ins
sbb
inc
stos
pause
xchg
mov
mov
mov
mov
arpl
mov
sahf
sbb
in
out
inc
fsubr
test
scas
inc
(bad)
lock
sub
(bad)
in
xchg
vpmacsdql
repnz
sbb
xchg
cmp
out
xor
adc
das
imul
xchg
push
gs
std
stos
push
wbinvd
jnp
pop
adc
cmp
pusha
(bad)
rcr
(bad)
sub
ins
lods
inc
push
and
rcl
data16
test
jl
and
pusha
mov
pushf
rcl
push
jb
enter
cli
pop
leave
add
inc
adc
outs
in
mov
push
dec
jl
xor
sub
mov
and
adc
jl
aad
pop
cli
ret
(bad)
dec
lods
sbb
clc
push
sahf
test
push
sub
out
imul
mov
fs
shl
scas
in
sbb
pop
mov
add
push
pop
enter
cli
mov
push
and
dec
pop
ds
inc
aas
pop
lock
dec
mov
sub
mov
xchg
fild
ins
mov
mov
scas
test
cmps
rcl
das
test
xor
jae
pusha
cmp
dec
popa
adc
addr16
pop
push
inc
pop
xor
imul
call
sub
sbb
repz
outs
push
or
push
xlat
and
pop
in
xchg
or
adc
or
aam
mov
pop
fcomp
and
loope
in
sbb
out
(bad)
xor
(bad)
fld
pop
or
out
mov
and
pop
dec
out
test
cmc
xor
adc
mov
dec
fisttp
ja
dec
aas
or
or
sti
dec
jnp
add
xor
cmp
mov
xchg
cmp
mov
hlt
xchg
jno
inc
or
dec
aam
cmp
(bad)
inc
and
jmp
xchg
fnsave
scas
adc
and
sbb
fstp
xchg
inc
sub
das
aad
imul
mov
push
(bad)
sbb
outs
sub
xor
jnp
retf
iret
mov
mov
mov
sub
xchg
or
ud1
fdivr
inc
cmp
xchg
xchg
mov
pop
leave
loopne
inc
shr
mov
dec
pop
jo
icebp
xor
mov
in
shl
or
mov
sbb
test
xlat
fist
pop
inc
stos
inc
mov
pushf
pop
cwde
(bad)
xchg
sbb
push
mov
push
push
fdivr
cmp
repz
shl
cmp
pop
out
icebp
arpl
jmp
cmps
dec
mov
mov
and
jmp
out
push
jle
or
cmp
inc
lods
mov
adc
sbb
leave
or
sbb
call
mov
or
movs
dec
repnz
adc
xchg
jae
fidivr
call
push
nop
data16
sahf
sbb
icebp
hlt
pop
mov
jb
gs
int
pop
iret
neg
or
xchg
fdivr
daa
add
or
mov
rcl
bound
push
das
cli
(bad)
sub
push
jo
push
inc
iret
nop
sub
mov
push
mov
sbb
mov
jne
jbe
cmp
aas
push
pop
pop
ins
pop
mov
or
aas
adc
jo
mov
cmp
pop
xchg
(bad)
test
jns
and
mov
adc
sbb
out
dec
daa
cmps
push
pop
not
push
adc
fucom
test
lods
and
or
push
xchg
and
cmp
inc
test
push
pop
pop
cmp
jmp
sbb
jo
mov
rcr
push
movs
push
ret
call
xchg
inc
fs
inc
jecxz
inc
xchg
jo
or
icebp
test
es
loop
add
pop
movs
xchg
addr16
xchg
(bad)
jo
dec
sar
clc
out
and
dec
je
jno
in
jmp
cli
pop
xor
sub
push
xchg
imul
std
mov
dec
dec
add
mov
(bad)
mov
dec
enter
aam
xor
lahf
or
mov
popf
cli
dec
sub
(bad)
fild
push
jg
sub
push
mov
inc
fdiv
inc
mov
push
inc
xor
mov
fcomip
bound
mov
shr
inc
sub
aam
ds
shl
jne
xor
cmp
out
jecxz
bound
inc
push
xchg
sub
loope
push
sbb
pop
xchg
int
sar
hlt
mov
sti
dec
push
pop
add
push
outs
push
xor
xchg
ins
sub
or
mov
cmp
fnsave
addr16
and
push
push
or
mov
daa
fdivr
and
scas
movs
jne
mov
dec
inc
mov
int3
movs
push
sbb
pushf
pop
xchg
pop
gs
mov
lock
push
or
sub
ret
push
jle
test
mov
mov
aas
adc
test
sub
or
clc
xchg
mov
pop
xchg
pushf
xor
ins
push
test
loope
jp
icebp
push
les
cs
pop
add
add
scas
sar
shl
fcomp
mov
dec
das
jb
jmp
jl
fiadd
mov
jae
adc
ret
das
xchg
(bad)
fist
in
xchg
fs
adc
popf
mov
test
pop
sub
xchg
add
repnz
adc
aas
sbb
dec
sub
push
pop
popf
std
fldenv
cmps
(bad)
mov
cmp
dec
icebp
sbb
inc
sbb
mov
aad
mov
mov
cmp
dec
cmp
jecxz
rcl
repnz
adc
mov
dec
in
sbb
mov
ret
imul
outs
(bad)
fiadd
outs
jmp
jg
inc
cmp
mov
std
xor
icebp
cs
or
sub
add
sub
cdq
mov
pop
test
(bad)
sbb
jno
inc
aad
aas
cmp
sbb
les
mov
test
loope
mov
mov
sar
xchg
pop
sub
out
das
ins
test
rcl
cli
into
repz
pop
add
pop
inc
cvtdq2ps
test
sbb
cmps
test
ds
push
movs
lds
pop
into
imul
dec
mov
add
sti
arpl
dec
lods
imul
addr16
imul
(bad)
push
lahf
rcr
cli
pop
movs
sbb
sub
sbb
shr
push
rcl
jmp
jmp
(bad)
jecxz
pushf
fmul
lea
mov
in
daa
cwde
dec
test
call
aad
sbb
das
sbb
dec
scas
dec
cdq
(bad)
in
mov
xchg
and
out
popf
sbb
test
lea
add
in
cmps
or
sub
ficomp
lods
call
call
loop
pop
fnstcw
or
mov
xchg
push
dec
add
cmps
ret
retf
movs
xor
pop
(bad)
stc
(bad)
and
sbb
dec
sahf
(bad)
shl
jbe
or
aas
ds
xchg
pop
outs
sbb
mov
sub
ret
iret
sbb
cmps
mov
jmp
dec
mov
inc
push
cli
outs
movs
mov
repz
xor
inc
xchg
fcmovnb
xor
stos
in
cld
aam
in
mov
vpmaddwd
add
adc
hlt
mov
xchg
and
or
cmps
fs
sbb
mov
fnstsw
add
pop
fistp
fdivr
push
jl
ja
lods
cmp
lock
aas
hlt
or
sbb
ret
ins
mov
fs
frstor
bound
sub
inc
repz
fwait
mov
sahf
mov
pusha
xor
mov
cmp
loope
js
ins
push
xor
xor
clc
jl
or
fisubr
mov
jmp
add
bound
mov
pop
leave
sar
fcomp
js
pop
lods
pop
fs
retf
shl
cmc
xchg
(bad)
push
sbb
mov
data16
out
lahf
dec
ins
mov
and
mov
cmp
adc
inc
cmp
neg
imul
xor
inc
xor
add
fidiv
mov
and
mov
sbb
xchg
ret
xchg
push
jg
xor
popf
mov
adc
pop
push
ins
lahf
push
stos
aam
lahf
shl
movs
and
stos
cli
sbb
xchg
inc
cmp
test
mov
call
push
cs
mov
jae
daa
fs
xchg
or
in
xor
div
add
mov
stos
mov
ins
into
and
pop
push
imul
addr16
cdq
pop
(bad)
pop
and
xchg
fs
cmps
ror
(bad)
adc
or
mov
cmc
outs
add
outs
pop
out
cmp
xchg
xor
ins
mov
fcom
je
jge
data16
xor
xchg
add
sbb
fsubr
es
xchg
jge
ret
add
xor
push
sub
fs
jge
mov
shl
cmp
xor
mov
xor
dec
ins
stos
mov
or
call
dec
adc
push
cdq
sar
jp
or
push
jmp
inc
lahf
test
hlt
arpl
jg
aam
push
pop
dec
sub
aam
dec
das
dec
into
stos
or
sub
mov
into
enter
sbb
aad
jbe
pop
mov
lods
jne
ja
fstp
(bad)
sbb
sbb
inc
pop
sub
pop
xchg
jmp
in
cli
icebp
std
outs
mov
and
xchg
js
xchg
mov
(bad)
push
in
mov
fwait
ret
loope
add
ret
loope
mov
adc
mov
pop
sti
int
es
adc
add
(bad)
mov
mov
leave
or
pusha
out
outs
lea
cs
add
call
sub
outs
dec
dec
call
stos
aas
jns
cld
or
ficomp
xchg
pop
jo
pop
(bad)
pop
sub
adc
ja
and
pop
cmps
push
(bad)
out
sahf
call
daa
or
mov
pop
mov
std
push
push
adc
iret
mov
int
or
(bad)
clc
mov
pop
jecxz
mov
into
in
daa
fidiv
add
retf
adc
mov
or
nop
pusha
inc
mov
jae
rol
(bad)
clc
arpl
dec
pop
pusha
imul
add
mov
mov
jb
cmps
adc
push
jnp
adc
push
retf
les
addr16
(bad)
fld
test
loopne
aad
inc
push
pop
aas
cmc
sbb
cmp
push
(bad)
xor
jae
mov
jo
xlat
pop
rcl
xor
fiadd
pop
mov
cmps
or
mov
rcl
dec
shl
sbb
pushf
ss
fidivr
repnz
jne
push
jle
jle
xchg
sbb
dec
lods
sub
jge
cmp
mov
stos
enter
cmc
in
jge
sub
loopne
hlt
ret
jnp
and
mov
out
test
test
sub
fstp
dec
popf
mul
cmps
push
jmp
add
mov
mov
mov
bound
jl
adc
mov
ror
mov
dec
mov
(bad)
aaa
mov
sti
inc
adc
cli
xor
jl
mov
or
pop
add
in
mov
jo
push
xor
dec
xor
fsubr
(bad)
jle
mov
fs
mov
fisttp
out
pushf
cmc
mov
into
or
loopne
div
mov
cmp
xor
aam
aas
les
std
dec
inc
push
repnz
pop
fst
or
fistp
dec
(bad)
js
outs
sti
das
mov
retf
cwde
and
and
mov
mov
mov
stc
sub
test
pop
cmp
jae
jbe
cmp
fadd
mov
xor
mov
out
dec
in
dec
fsub
je
(bad)
sub
std
jo
xor
stc
les
add
hlt
lods
in
mov
xchg
mov
cmp
test
neg
(bad)
xchg
scas
push
pop
fld
push
inc
and
jmp
add
push
or
mov
mov
push
xchg
ret
xchg
lock
imul
repz
jecxz
add
cwde
stos
inc
jl
loop
mov
test
sub
push
js
cld
mov
dec
out
xor
in
jo
mov
int3
push
mov
pop
daa
bound
test
pop
cmp
fiadd
push
xchg
rol
xchg
imul
mov
or
iret
leave
fld
(bad)
pop
push
pop
mov
pop
ret
mov
jne
inc
enter
cwde
leave
mov
sub
iret
fmul
add
sti
inc
pop
dec
cmp
push
xchg
or
mov
mov
cmc
scas
jl
in
aad
sbb
retf
scas
and
inc
mov
xor
idiv
inc
or
pop
pop
jns
inc
test
push
sub
sbb
inc
sbb
adc
jge
mov
aam
test
cdq
stos
fs
stos
adc
or
stos
dec
nop
mov
ins
mov
jecxz
retf
shl
mov
test
out
rcr
(bad)
mov
fs
jp
sbb
mov
push
ret
xchg
outs
push
aas
sbb
xor
jns
leave
lods
in
and
xlat
mov
movs
push
push
push
jg
adc
out
push
gs
jg
or
ja
xchg
xchg
loop
repz
(bad)
retf
retf
iret
or
adc
xchg
pop
fbld
pop
or
or
xor
mov
sub
inc
dec
push
jl
push
adc
jmp
cmp
and
dec
push
push
inc
popf
lods
int3
outs
xchg
sub
ins
fisttp
fcmovnu
add
retf
inc
mov
ror
(bad)
xchg
ret
lods
push
imul
jl
adc
or
jl
jmp
push
jmp
mov
popf
xchg
test
iret
cdq
(bad)
scas
dec
xor
sbb
or
fld
gs
or
movs
movs
mov
mov
jmp
lock
stos
xor
ins
jns
sub
push
in
sub
in
shl
loopne
jg
in
in
adc
adc
aas
test
les
lahf
jle
mov
repz
mul
pop
jp
in
push
xor
mov
das
sbb
pop
and
pusha
pop
ret
dec
inc
mov
pop
movs
or
cmps
loop
sbb
jmp
jbe
outs
mov
iret
es
xchg
cmp
mov
sbb
mov
fwait
stos
out
adc
js
jp
mov
repnz
add
xchg
inc
imul
cwde
retf
inc
ins
cmps
or
fnsave
mov
or
mov
out
xchg
movs
mov
push
gs
sub
pop
into
fstp
sub
rcl
cmp
and
cs
mov
jl
jns
and
mov
push
int3
xor
(bad)
and
push
cmp
push
jg
inc
mov
cmp
bound
pop
jae
mov
mov
clc
bound
push
cdq
lods
in
lock
aam
rol
cwde
or
fld
ficom
inc
lock
cld
lock
push
inc
adc
test
mov
add
xchg
dec
push
mov
cmp
cmps
xchg
mov
mov
lock
mov
add
ins
(bad)
data16
aad
(bad)
stos
jnp
not
lds
push
mov
inc
dec
lods
cwde
ins
pop
sbb
push
sub
mov
pop
mov
push
cmp
mov
dec
ins
pop
(bad)
push
retf
je
(bad)
jg
mov
sub
fiadd
mov
xor
sahf
or
lahf
cmp
js
jl
pushf
add
mov
mov
push
call
fisttp
push
sub
loop
inc
push
dec
fld
pushf
cmp
inc
sahf
fucom
sar
test
lods
(bad)
leave
lds
mov
inc
sub
jmp
stc
test
push
or
daa
and
hlt
mov
mov
push
shl
push
pop
in
cmps
aas
pop
add
mov
dec
jne
mov
mov
sbb
shr
mov
mov
cmp
xor
inc
sbb
sbb
and
pop
mov
jne
lea
xchg
or
out
cmovnp
inc
cmp
xlat
cmp
cmp
aad
mov
std
adc
fcom
push
sub
(bad)
iret
xor
push
mov
leave
xabort
ins
repz
les
fidiv
cmp
lahf
cmps
(bad)
scas
and
rcl
inc
loopne
adc
scas
cmps
mov
out
movs
and
loop
or
in
lods
dec
push
sbb
adc
pop
(bad)
or
nop
mov
ret
out
stc
nop
fwait
stos
bound
push
stc
js
pushf
jle
add
mov
test
inc
push
mov
mov
jno
push
test
sub
add
out
push
test
lahf
sar
xchg
and
inc
ss
xchg
xchg
shl
aad
nop
sbb
jb
sbb
test
xchg
repz
mov
inc
fbstp
sub
int
dec
inc
pop
cmps
xchg
imul
inc
movs
xchg
and
ror
lds
idiv
mov
scas
push
pop
sbb
pop
shr
sbb
adc
sbb
inc
jl
pusha
pusha
cmp
mov
mov
ret
mov
mov
ds
ins
aas
test
sbb
xchg
add
sti
mov
push
fadd
or
cdq
je
cmps
cs
inc
nop
sub
mov
add
jo
pushf
jp
lock
or
test
fistp
jge
pop
outs
and
xchg
jmp
shr
adc
sahf
and
adc
es
pushf
ror
fstp
jae
and
loopne
sub
js
xchg
jo
les
adc
or
imul
(bad)
inc
mov
fisub
in
sub
and
jnp
pop
jns
pop
adc
jmp
sti
cmc
ret
mov
sub
jns
dec
mov
ins
xlat
mov
push
pop
add
test
or
inc
and
lods
ja
push
(bad)
les
jge
adc
and
imul
pop
sbb
mov
jp
mov
dec
ds
mov
ss
int3
sti
xor
jecxz
imul
jge
das
push
std
pop
mov
leave
lock
les
mov
mov
xchg
mov
jne
push
xchg
cmps
xor
ss
mov
or
pushf
mov
mov
sar
or
in
(bad)
mov
nop
fdiv
bound
jo
bsr
imul
je
neg
scas
sub
stos
cwde
fdiv
mov
gs
add
dec
push
retf
idiv
or
std
adc
sbb
iret
inc
sub
mov
xchg
mov
ffreep
(bad)
bound
cmp
pop
dec
sub
mov
addr16
rol
push
jle
test
pushf
js
push
pop
adc
loope
pop
ror
in
test
mov
stos
xor
dec
cld
sbb
out
sbb
jmp
stos
sbb
leave
lds
imul
xchg
push
rol
adc
out
mov
rcl
dec
iret
jge
cmp
inc
fldcw
sub
xchg
or
(bad)
sahf
fincstp
mov
push
cdq
push
xor
shr
dec
lock
iret
adc
jbe
je
push
xchg
mov
push
add
xchg
in
pop
cs
dec
outs
movs
scas
mov
int3
(bad)
adc
fadd
fld
pop
lock
mov
pop
adc
and
in
out
scas
sub
push
mov
dec
dec
sbb
sahf
leave
mov
fistp
cmps
or
sub
enter
add
fcomip
loopne
adc
and
adc
mov
lahf
and
jae
sbb
cli
add
dec
mov
sbb
xchg
repz
ss
push
outs
aas
ds
xchg
(bad)
sbb
rol
sbb
sub
add
outs
stc
xchg
jno
loopne
fld
in
inc
adc
aad
ja
ins
out
aaa
mov
out
daa
int
xchg
inc
in
mov
cmp
inc
movs
cdq
push
mov
out
xchg
inc
cmp
cmp
pop
add
es
in
scas
nop
mov
ins
xchg
inc
fisubr
xlat
test
add
mov
or
mov
add
cmp
sbb
loop
mov
and
mov
ret
aaa
dec
(bad)
sub
test
jl
ss
(bad)
fsub
push
inc
shl
dec
push
scas
int3
mov
lahf
stc
and
addr16
call
loope
adc
not
mov
sahf
aad
lds
adc
mov
dec
test
xor
pop
push
mov
call
mov
ja
add
in
fidivr
add
xor
mov
lods
pop
dec
mov
cmp
xchg
push
ja
jg
dec
sub
sbb
add
add
emms
outs
sbb
inc
push
sub
pop
out
in
pop
or
add
add
clc
jmp
stos
clc
sub
stos
out
cmp
mov
movs
jl
mov
clc
dec
test
dec
dec
cmp
outs
das
jle
mov
mov
dec
in
loop
mov
daa
ds
popa
push
out
icebp
in
out
out
push
add
cmp
dec
sub
in
lahf
fstp
out
aam
or
mov
imul
fwait
adc
mov
push
ins
popf
pop
clc
mov
xor
retf
stc
jmp
sbb
shr
shl
ds
loope
retf
jmp
dec
je
adc
test
fcomi
sbb
jo
mov
jb
mov
jns
pusha
push
add
out
inc
adc
pop
adc
lods
inc
enter
aas
mov
(bad)
pop
sbb
rcl
mov
imul
rcr
rcpps
add
push
sub
pusha
sub
and
sbb
push
ss
sbb
mov
xor
pushf
jb
stos
lods
push
mov
mov
gs
test
xchg
xor
xor
ja
hlt
sbb
shl
and
xor
and
cli
mov
mov
fcom
mov
fistp
sub
das
dec
push
xchg
test
add
inc
imul
xchg
or
out
(bad)
and
pop
(bad)
cli
test
out
mov
cmps
mov
xor
mov
inc
sub
add
pushf
ret
jmp
nop
jl
or
outs
adc
into
add
fdiv
clc
push
xor
inc
imul
pop
xchg
mov
sub
(bad)
jns
or
mov
stc
std
xchg
pop
loope
xchg
shl
in
adc
call
sub
mov
mov
cs
and
jbe
jp
bound
push
outs
sub
mov
xchg
mov
adc
mov
ret
jo
ins
or
jnp
cdq
fisub
lods
pop
lds
sbb
push
cld
xchg
xor
jnp
xor
sub
dec
pop
xor
inc
jbe
ins
and
call
fidiv
fist
dec
push
mov
xor
mov
jb
xchg
out
sub
cli
aam
mov
xchg
inc
out
repz
cmc
inc
sbb
jmp
sub
mov
cwde
xor
test
and
jp
pop
inc
fdiv
(bad)
mov
pop
sbb
pop
push
(bad)
jge
push
ja
rcl
add
mov
in
push
push
xor
or
lock
push
sub
xor
mov
and
xchg
mov
and
cmp
push
pop
push
pavgb
cmp
ss
mov
stc
mov
out
mov
loope
ror
mov
aaa
aad
jmp
pop
div
lock
mov
add
popf
gs
(bad)
mov
jmp
lahf
stc
jmp
ss
nop
data16
inc
jle
ds
xchg
jecxz
test
inc
lods
es
aas
scas
pop
jmp
rcr
aaa
jmp
xor
and
icebp
adc
aaa
pop
loope
pusha
inc
cmp
pop
and
cmp
ror
sbb
repz
shr
mov
push
add
xchg
call
jnp
pop
cmp
cld
stos
jae
xor
and
bound
ret
dec
hlt
sbb
xor
pop
mov
cld
push
mov
retf
xor
mov
inc
push
pop
sbb
cmp
jmp
push
inc
lds
adc
mov
imul
inc
dec
rol
icebp
pop
pop
repnz
shl
mov
mov
jg
lods
(bad)
adc
out
dec
xor
pushf
mov
js
ins
mov
daa
sbb
push
popa
retf
std
cmps
cmps
or
in
push
jne
inc
jl
xlat
stc
mov
push
mov
ret
movs
mov
adc
mov
lods
jae
push
ret
rcr
mov
jno
lea
jmp
sub
sbb
lea
js
sti
loopne
add
inc
push
jns
cmp
cmc
fld
es
add
mov
cmps
and
cmps
mov
mov
push
add
pusha
loopne
sbb
adc
jp
std
loop
mov
sbb
rol
mov
inc
sub
add
xchg
mov
ret
cmp
daa
enter
or
pop
ret
in
push
daa
ret
ja
pop
or
pushf
mov
hlt
das
data16
cdq
xor
fcomp
add
ret
xchg
jns
jmp
sti
cmp
sub
scas
push
pop
or
mov
mov
sub
adc
push
mov
mov
fcomp
lahf
stos
xchg
out
push
iret
and
rcr
inc
mov
sbb
shl
lods
test
inc
arpl
imul
in
push
and
fmul
retf
xchg
movs
shr
retf
test
jb
icebp
xlat
mov
and
aas
int
cmc
iret
pop
out
mov
les
mov
inc
jae
mov
rcr
aam
mov
int3
stos
call
rcr
popa
iret
mov
sbb
lahf
inc
pop
dec
inc
xchg
popa
shl
pusha
popa
shl
(bad)
cmc
inc
das
jg
push
ret
test
sub
xchg
push
fild
es
or
push
mov
sbb
mov
xor
sbb
mov
sub
shl
mov
lods
mov
gs
cmp
mov
sub
cmps
(bad)
cld
daa
and
pop
dec
aaa
imul
push
inc
jecxz
into
std
pop
sti
sbb
les
clc
mov
push
push
test
cli
mov
jl
adc
cwde
sub
adc
xor
sub
mov
(bad)
icebp
fistp
inc
push
ret
rcl
pop
adc
adc
mov
jno
js
and
ja
adc
mov
loop
(bad)
mov
out
sahf
mov
and
adc
repnz
pop
push
pop
fdivr
(bad)
lock
sti
shl
vpmacsdql
xchg
ins
cmps
mov
inc
scas
push
popa
or
aas
jmp
outs
or
call
mov
xor
(bad)
adc
mov
out
inc
call
outs
loope
xchg
push
xchg
sub
jmp
sub
lahf
out
inc
sub
mov
(bad)
jge
dec
sbb
mov
test
sbb
and
pusha
fsub
jmp
fdivr
push
hlt
bound
fcmovbe
xor
retf
mov
cmps
(bad)
out
adc
pop
or
push
sbb
xor
sbb
sub
into
adc
pop
mov
push
(bad)
sbb
inc
adc
les
outs
push
dec
mov
test
jae
mov
daa
mov
iret
mov
xchg
mov
pusha
shr
push
push
cmc
pop
(bad)
ret
and
nop
add
mov
inc
outs
sbb
out
jl
sbb
shr
mov
ins
pop
xor
mov
loope
cmps
ins
jle
(bad)
sbb
pop
mov
stos
mov
sub
ficom
data16
cs
pop
int3
cmp
ret
dec
jp
cdq
aam
pushf
clc
and
push
mov
call
jg
stos
sbb
or
in
shl
fcomi
or
mov
test
call
fnstenv
or
push
fs
mov
cmc
or
in
mov
inc
jnp
in
mov
xor
xor
mov
pushf
cmp
jbe
inc
cli
hlt
add
sahf
popa
sahf
(bad)
inc
jp
sbb
retf
addr16
loopne
pop
(bad)
mov
and
div
sbb
test
or
(bad)
dec
push
retf
add
add
add
ins
aas
mov
or
or
pop
scas
jmp
scas
xor
push
aad
or
add
ds
mov
stc
test
test
push
dec
jne
push
or
sub
add
xchg
movs
pushf
pop
xor
aam
pop
jg
outs
(bad)
mov
inc
inc
pop
xor
pop
cmp
jle
je
iret
pop
(bad)
push
pop
sub
cs
sbb
call
and
dec
shl
push
in
cmp
retf
mov
out
jmp
sti
test
mov
sbb
cmc
scas
mov
mov
or
cld
add
fs
xchg
pop
imul
clc
xlat
cmp
sub
push
mov
jg
jge
stos
fwait
xor
loope
xchg
push
add
jo
popa
adc
into
mov
lods
inc
jae
lds
push
push
push
idiv
cmp
or
shl
fmul
adc
xchg
repnz
xchg
sbb
mov
dec
(bad)
loopne
dec
push
movs
mov
xor
pop
out
cmp
call
jae
cmp
xor
repnz
popf
cmp
call
mov
stos
lea
(bad)
daa
sahf
adc
nop
lods
jg
jae
outs
mov
push
pop
inc
cld
loope
mov
add
in
fild
je
mov
fisub
mov
inc
rol
jmp
or
retf
mov
out
jmp
push
lods
retf
jno
adc
adc
push
mov
sub
gs
aad
mov
xor
mov
push
scas
mov
adc
loop
pop
mov
xchg
cwde
jbe
or
inc
inc
add
addr16
mov
cld
mov
(bad)
dec
icebp
cmc
call
mov
loop
cmp
jecxz
in
sbb
in
out
inc
xchg
xchg
mov
sbb
(bad)
icebp
aas
jbe
aam
(bad)
in
outs
xchg
cdq
mov
mov
jbe
ins
imul
test
mov
pop
jmp
mov
gs
push
dec
adc
xlat
cmp
xchg
xlat
pop
inc
int3
push
cmp
stos
fwait
retf
pop
adc
cwde
(bad)
mov
aas
xor
stc
or
inc
clc
in
rep
pop
icebp
ficomp
je
mov
(bad)
aas
outs
rcl
xor
or
ja
hlt
dec
dec
mov
aam
mov
xchg
mov
or
xlat
lods
mov
(bad)
cld
movs
add
inc
cmp
and
adc
leave
or
imul
retf
outs
sub
int3
jge
inc
ficomp
test
xchg
inc
test
and
mov
or
loop
gs
mov
outs
mov
sbb
inc
call
ret
and
xchg
fcomp
std
fcmovb
add
sbb
dec
or
mov
sbb
sbb
rcr
fist
stc
sub
out
push
inc
push
sar
dec
hlt
repz
push
icebp
and
jp
loopne
fst
shl
jns
fidivr
and
arpl
repz
ficom
das
stc
dec
add
xorps
ds
pop
pop
aas
ss
aam
sub
mov
or
ret
out
mov
mov
pop
pop
mov
repnz
sbb
xchg
mov
pop
mov
push
push
out
xor
sub
dec
out
add
fwait
arpl
popa
dec
xchg
jmp
mov
ss
loopne
mov
fadd
mov
jne
(bad)
(bad)
into
popf
mov
mov
ins
stos
loopne
inc
xor
cli
add
imul
jmp
test
test
stc
loopne
mov
mov
sti
loopne
or
pop
add
push
inc
xor
dec
popa
cmps
cmp
mov
pop
popf
in
enter
int3
fdivr
addr16
std
add
sbb
jo
inc
jae
pop
sub
in
sar
bndstx
movs
mov
and
dec
mov
gs
js
jo
xchg
fsub
jb
cmp
out
inc
mov
mov
retf
push
test
jge
stos
out
mov
push
lods
ins
out
jnp
adc
inc
xor
lds
sub
into
mov
sbb
push
and
jno
in
pop
(bad)
(bad)
test
ret
fmul
mov
xor
repz
or
sbb
es
loop
jno
popa
retf
loope
fmul
ins
mov
fistp
les
mov
xchg
imul
add
hlt
xchg
ret
push
sbb
stc
pop
inc
popa
mov
pop
(bad)
shl
cmp
xchg
pop
ds
xchg
and
mov
cmp
sub
pop
inc
int
push
pop
shr
inc
push
(bad)
ret
cmc
inc
jno
adc
jg
outs
(bad)
xchg
fwait
adc
test
jb
mov
ficom
mov
adc
mov
dec
fisttp
sub
(bad)
das
sar
mov
lahf
int3
scas
cld
xor
pusha
js
mov
jmp
inc
(bad)
jge
lods
jns
mov
mov
mov
mov
inc
sub
icebp
cdq
mov
test
ja
cmps
inc
jo
pop
loop
inc
xor
pop
push
lock
sub
sti
jmp
int3
push
adc
jnp
outs
xchg
push
mov
test
imul
movs
pop
jae
mov
add
fsub
(bad)
fadd
push
or
arpl
dec
push
inc
mov
xor
adc
jge
lods
jle
in
rcr
mov
das
jno
jmp
stc
push
enter
adc
jge
ins
retf
out
dec
mov
mov
sbb
sti
pop
das
ret
in
lock
push
loopne
mov
std
sbb
pop
leave
push
(bad)
out
and
xchg
pop
pop
ds
cwde
in
inc
jno
fdivr
sub
cmp
icebp
and
pusha
pop
repz
xor
xchg
or
adc
sub
pop
in
aad
shr
dec
pop
lock
mov
ss
xchg
lods
pop
arpl
arpl
xor
pop
icebp
into
out
push
adc
mov
mov
retf
inc
inc
(bad)
jp
(bad)
fdiv
mov
sub
xchg
into
or
mov
push
mul
jmp
lds
in
add
mov
dec
cmp
fwait
or
into
pop
jmp
sub
lahf
clc
int
mov
movlps
xor
aaa
imul
in
sub
sub
mov
mov
mov
sub
sbb
xchg
mov
pop
clc
test
cli
fcmovb
das
movs
aas
pushf
cmp
push
and
or
or
icebp
xchg
inc
iret
sti
imul
mov
jns
imul
pop
mov
xchg
xor
xchg
mov
xchg
int
cmp
and
sub
test
ss
leave
shl
mov
mov
cmp
xchg
or
cmc
sbb
cmp
loope
mov
xchg
sbb
sbb
push
movs
xchg
inc
mov
call
cmp
test
pop
(bad)
loopne
dec
sbb
jge
daa
clc
xchg
lea
aad
fldenv
inc
mov
push
push
out
daa
out
xchg
test
aad
pop
jbe
jmp
mov
mov
add
into
mov
inc
stos
or
repz
sub
cld
(bad)
xchg
mov
push
rcl
ss
push
xchg
icebp
or
add
mov
push
xlat
iret
fstp
xlat
outs
jmp
sub
sub
inc
aaa
mov
sub
ins
sbb
mov
scas
int
cmp
enter
adc
lahf
lds
je
hlt
sub
imul
xor
pusha
xor
adc
xor
pop
sbb
dec
dec
scas
push
cmp
mov
in
jne
inc
fs
scas
push
push
test
int
arpl
ins
mov
sbb
in
mov
mov
ins
ss
xor
repz
pop
sub
xchg
inc
jb
fcomp
test
mov
and
sub
aam
pop
rcl
sub
jb
xchg
jnp
addr16
das
cmps
push
xchg
xchg
push
loopne
push
push
add
dec
xchg
pop
scas
pop
test
adc
or
xlat
pop
les
(bad)
jp
fstp
shl
jo
push
cs
mov
scas
dec
sti
sub
sub
pop
jnp
add
sahf
fwait
stc
and
adc
data16
cdq
push
pop
lock
cmc
add
ins
(bad)
ins
test
test
jecxz
lock
mov
or
pop
gs
aad
js
fs
pop
pop
aaa
pop
push
mov
pushf
jmp
nop
or
inc
inc
(bad)
ror
and
sti
neg
mov
ja
outs
xor
test
dec
mov
gs
call
sbb
inc
sbb
cmp
fxrstor
mov
fdiv
jb
std
scas
xor
xchg
xchg
stc
int
sub
es
js
jae
fisubr
pusha
icebp
dec
pushf
mov
add
dec
pusha
loop
jge
sub
std
and
fiadd
sbb
mov
dec
fld
cmp
out
push
and
mov
mov
mov
(bad)
sti
sbb
push
lods
cmp
call
js
les
xor
rcr
inc
fs
out
daa
cmc
push
cmps
repz
xchg
xchg
stos
inc
ins
adc
push
sub
ins
daa
or
std
cli
jmp
shr
or
(bad)
jo
or
dec
(bad)
popa
sub
push
(bad)
js
sub
int
aad
pop
xor
addr16
loopne
mov
push
xor
jl
xchg
pop
push
(bad)
movs
imul
out
mov
mov
popa
pop
push
adc
add
iret
ja
jo
shl
cld
add
add
daa
or
pop
lods
(bad)
add
ins
fsub
out
pop
inc
retf
lahf
push
cli
out
and
loopne
sbb
cmps
push
fs
push
fnstenv
shr
shl
(bad)
push
pushf
out
pop
cmp
jl
(bad)
jb
cmc
adc
jg
mov
imul
inc
outs
xor
in
psubusw
sahf
ret
sub
outs
leave
dec
daa
cdq
xchg
jnp
rcl
int
jle
leave
pop
shl
and
stos
add
add
fistp
cmp
and
push
mov
scas
ret
imul
mov
push
shr
pop
into
shr
jecxz
xor
cli
mov
scas
outs
ficomp
inc
add
shr
cli
outs
pop
imul
push
xchg
jecxz
fs
mov
daa
push
aam
adc
pop
cmc
imul
mov
cs
outs
cld
inc
int3
mov
fidivr
mov
in
cmps
rcl
cmp
mov
cmp
outs
icebp
adc
sub
lea
inc
mov
iret
arpl
and
pop
mov
lock
pop
imul
ficomp
sub
mov
add
jle
lds
aas
adc
cmp
gs
inc
jb
xor
fsubr
in
repnz
retf
fisub
dec
sub
jbe
mov
rol
sbb
mov
hlt
push
mov
call
ja
or
popf
cvtpi2ps
out
lea
add
adc
mov
bswap
ror
jae
dec
push
jno
push
ror
lea
mov
movs
iret
lods
xlat
pop
call
mov
mov
ss
loope
test
retf
sbb
or
and
data16
mov
push
cli
js
jle
imul
sbb
ss
outs
sub
jb
mov
adc
imul
mul
cwde
outs
jl
in
xchg
nop
sbb
mov
in
xor
push
jne
adc
add
das
(bad)
adc
out
sti
scas
lods
loopne
bts
fst
ret
dec
ret
ds
and
push
jae
inc
(bad)
sti
and
in
jbe
push
fnstcw
test
or
xor
xchg
movs
pop
add
jp
add
not
lock
mov
les
or
rcl
bnd
mov
and
lods
pop
out
aam
stc
mov
dec
lock
aad
addr16
dec
ret
and
sbb
cld
cmp
int
ds
push
retf
(bad)
aas
das
lock
xchg
sbb
jmp
and
mul
pop
mov
push
and
mov
test
les
out
push
inc
mov
inc
xor
in
inc
xor
pop
push
jmp
cmp
xlat
mov
movs
gs
sar
pusha
push
and
push
sti
sbb
sub
dec
rcl
in
mov
cmp
jmp
into
mov
mov
fcmovb
dec
rcr
adc
retf
mov
push
pop
inc
jo
or
(bad)
sbb
push
gs
jmp
inc
push
adc
xor
sahf
mul
or
sbb
mov
cmps
cmp
mov
test
mov
bnd
cmp
mov
cmp
mov
inc
inc
inc
out
(bad)
push
mov
push
outs
push
into
scas
test
cdq
sbb
mov
stos
add
xchg
cmp
inc
add
adc
stc
cmps
mov
(bad)
pop
leave
xchg
mov
cwde
(bad)
dec
movs
xlat
fst
es
scas
movs
enter
mov
repnz
or
fsubp
(bad)
xor
or
xor
call
mov
xchg
push
imul
add
rep
push
xlat
mov
stos
push
push
mov
add
xchg
jb
dec
dec
dec
call
mov
mov
mov
push
lods
push
cmp
out
xchg
push
inc
push
in
cld
sbb
in
test
retf
cmc
dec
ins
push
inc
and
fnstcw
rcl
push
mov
sti
mov
and
movs
test
stc
leave
pop
mov
jge
add
and
mov
push
or
(bad)
leave
mov
mov
sbb
inc
add
fwait
icebp
aas
jg
pop
rcl
dec
fidivr
sbb
mov
push
lahf
sbb
or
fiadd
mov
bound
test
dec
push
outs
mov
lea
int
dec
jmp
test
nop
inc
sbb
xchg
bound
lock
in
dec
mov
add
fmul
cdq
push
sbb
sbb
fstp
adc
aaa
add
xor
jl
add
fistp
jmp
es
js
outs
ret
icebp
out
lahf
push
mov
pop
dec
js
sbb
sub
ins
pop
clc
mov
ret
loope
dec
push
out
dec
add
fistp
push
mov
mov
xchg
repz
dec
gs
rcr
into
pop
sub
lods
(bad)
pop
pop
jne
jnp
push
mov
(bad)
cmps
pop
(bad)
(bad)
jnp
imul
or
outs
rol
scas
mov
mov
call
call
stos
aas
aad
and
add
mov
or
mov
inc
sbb
imul
popf
mov
rcr
mov
add
sbb
outs
push
test
lds
xlat
out
mov
shl
jmp
imul
out
test
out
mov
js
pushf
pop
out
call
je
xor
icebp
jge
and
mov
mov
xchg
mov
sub
ja
mov
pop
fstp
out
ins
rol
or
lods
rol
dec
out
cmp
jne
les
and
popa
dec
push
stos
mov
cmp
jne
cmp
popf
dec
push
jbe
inc
cwde
shr
pop
int
push
push
stos
inc
xchg
(bad)
xor
pop
test
xchg
pop
cmp
inc
test
repnz
mov
xchg
and
std
jo
and
ret
inc
rcl
and
adc
dec
mov
ror
dec
adc
not
inc
adc
lock
cmp
inc
nop
jecxz
mov
call
inc
mov
pop
nop
(bad)
dec
shl
test
push
ss
(bad)
cmp
jp
jbe
in
gs
add
mov
xor
sbb
adc
leave
movs
cmp
jmp
mov
or
push
pop
out
add
pop
inc
out
ds
movs
sub
mov
or
xchg
jnp
stc
sbb
hlt
js
loopne
mov
pop
mov
ins
out
cdq
xchg
push
les
hlt
or
shl
xchg
das
ret
(bad)
xchg
cmp
jno
add
lods
xchg
mov
sbb
aad
fisub
sbb
leave
cmc
inc
mov
xchg
jg
mov
aas
push
aad
xchg
mov
leave
sub
mov
leave
sub
test
sub
outs
xor
xlat
movs
jns
or
or
movs
bound
mov
ror
ret
jmp
cmps
xchg
nop
popf
call
or
mov
add
add
aad
fsub
mov
es
inc
int3
inc
sub
mov
mov
(bad)
sub
arpl
mov
jecxz
adc
lea
div
sub
inc
cmp
div
pop
in
daa
les
dec
ret
repz
pop
dec
hlt
clc
mov
xchg
ror
stos
mov
pop
outs
outs
pusha
push
nop
adc
jb
sbb
mov
aam
fidiv
ret
inc
inc
jmp
cmp
lea
pop
push
mov
(bad)
in
mov
scas
push
fldcw
sub
pop
jp
in
test
std
adc
jne
retf
call
shl
loopne
sub
mov
stc
jns
jmp
xor
dec
inc
inc
imul
adc
lahf
mov
pop
loope
ret
mov
cmp
imul
mov
aaa
adc
rol
sbb
mov
(bad)
jae
inc
test
pusha
outs
dec
pop
sbb
mov
push
push
sub
fs
popa
test
lds
dec
aad
pop
nop
dec
cmc
jg
aas
sub
hlt
xor
sbb
inc
shl
(bad)
out
pushf
mov
adc
jle
dec
inc
xchg
jl
mov
aam
dec
jmp
fdivr
push
lock
mov
cld
mov
dec
ins
pop
inc
jbe
jbe
mov
or
sbb
repz
xor
pushf
mov
rcr
push
jmp
mov
add
mov
or
inc
xor
sub
repnz
cdq
aad
bound
out
xor
dec
and
(bad)
fidiv
push
stc
pop
gs
retf
and
or
inc
sbb
jmp
xor
mov
dec
lods
adc
push
ret
mov
jmp
jmp
push
sub
je
in
arpl
ror
inc
outs
mov
push
ins
scas
push
getsec
xor
cmp
pop
xchg
cmc
xchg
idiv
movs
outs
or
or
fs
cli
mov
add
mov
orps
std
xor
pop
aas
push
xchg
add
inc
cmp
(bad)
jmp
test
pop
mov
fild
aaa
jg
test
and
pop
cmp
sub
mov
js
mov
and
cmps
in
imul
mov
mov
cld
sub
add
mov
sub
(bad)
mov
rol
xor
int3
inc
arpl
mov
fist
cmps
pop
sub
repnz
scas
pop
inc
inc
gs
mov
fcmovnb
jg
mov
dec
jo
add
push
sbb
rcr
ficomp
adc
stc
pop
in
repnz
enter
adc
pop
test
jmp
cmp
xchg
enter
scas
and
xchg
jecxz
fistp
nop
push
xchg
and
leave
jmp
mul
addr16
in
cmps
mov
mov
sub
mov
push
cmp
call
jecxz
xchg
int
push
inc
ins
mul
loope
in
test
test
adc
sub
imul
mov
jg
dec
adc
cld
and
movs
pop
add
into
mov
adc
movs
ss
xor
mov
(bad)
aad
or
loopne
sbb
dec
sub
cmps
add
retf
movs
xor
mov
movs
aad
pop
fs
ret
pop
jg
fistp
loopne
or
call
imul
data16
pushf
push
mov
inc
mov
push
adc
ja
shl
pop
sbb
(bad)
fwait
add
mov
(bad)
popa
aad
out
or
(bad)
test
adc
aas
outs
(bad)
std
dec
inc
into
xchg
push
add
jle
xchg
enter
jmp
sar
js
adc
shr
movs
imul
mov
sti
dec
jns
push
inc
xchg
mov
xor
scas
xchg
mov
rol
dec
ins
les
loope
adc
enter
inc
mov
aaa
push
jle
xchg
in
xor
mov
loopne
dec
or
xchg
cmp
jbe
push
and
loopne
mov
bswap
aaa
clc
jne
outs
scas
dec
repz
pusha
in
stos
repnz
add
scas
faddp
mov
inc
outs
frstor
je
loop
mov
jl
or
add
dec
fimul
lods
push
mov
nop
jg
rcr
cmp
and
cmp
movs
xchg
jmp
xchg
adc
jp
mov
scas
pop
(bad)
mov
mov
(bad)
fld
xchg
mov
dec
sbb
in
jg
pop
(bad)
sbb
cmp
adc
out
jne
test
xrelease
daa
retf
jne
in
aam
cli
mov
popa
cmp
mov
lods
jmp
jb
hlt
arpl
cmp
and
(bad)
and
rcr
xor
sti
push
pop
mov
sub
add
dec
add
fwait
shl
bound
inc
sbb
popa
add
add
stc
(bad)
mov
xor
push
jp
cmps
stos
sbb
xor
jge
jmp
jge
or
pop
xchg
ret
mov
adc
mov
lods
pop
pop
pop
push
xchg
test
xor
add
xchg
push
inc
test
jae
jns
pop
dec
nop
js
sti
xchg
dec
nop
dec
sbb
shl
sbb
xchg
fdivr
dec
sub
mov
ss
xor
fsubr
fwait
retf
lahf
mov
mov
push
das
inc
lea
add
mov
iret
inc
mov
(bad)
aam
(bad)
outs
push
frstor
mov
sbb
sub
ss
ja
xor
in
sub
ja
jbe
mov
mov
sbb
retf
mov
mov
sti
push
(bad)
retf
lds
or
dec
sbb
dec
fdivr
sub
mov
mov
push
mov
in
cdq
out
test
or
lock
lods
js
fwait
xchg
xor
sar
das
test
push
cmp
pop
mov
fistp
pop
mov
mov
lahf
and
jbe
push
(bad)
add
ds
pop
and
loop
sub
jl
test
push
in
sti
retf
jns
(bad)
adc
xor
clc
push
dec
call
dec
or
dec
std
add
mov
xlat
lds
pop
into
scas
mov
aad
call
dec
adc
js
xchg
js
jae
retf
dec
xor
test
pop
shr
dec
in
jle
es
mov
xor
push
fnsave
mov
inc
fisttp
xor
sub
cmp
mov
xor
cmps
repz
add
inc
scas
aaa
xor
leave
retf
mov
add
(bad)
push
fild
cli
stos
sbb
pop
inc
jno
enter
cli
dec
push
inc
sti
add
mov
fnstenv
test
pop
dec
(bad)
inc
lods
or
add
rcl
pop
cli
pop
add
arpl
jg
cli
xchg
out
iret
add
enter
sub
sbb
cld
sub
xchg
cmp
push
sub
mov
sub
vmread
adc
add
jne
movs
mov
repz
add
jge
lea
pushf
shr
fisub
cli
cdq
pop
add
pop
xor
mov
mov
in
loope
cld
daa
mov
cmp
mov
cli
xchg
dec
xchg
repz
push
in
call
and
out
or
(bad)
cmp
sub
xchg
jo
jecxz
xor
fcomip
psllq
add
and
cmp
jne
repnz
jle
add
ret
push
shl
mov
std
cmp
retf
aam
cld
(bad)
in
(bad)
repz
cld
mov
sbb
movs
test
jmp
bound
fcmovnu
imul
(bad)
pop
add
outs
fcomp
mul
fsubr
cmp
ss
jl
xor
dec
dec
rcl
push
jg
pop
jmp
in
or
xchg
xchg
inc
sahf
ds
or
pop
jne
sub
rcr
and
xor
xor
(bad)
xor
mov
(bad)
aaa
cmp
mov
push
push
loop
push
sub
pop
mov
jecxz
adc
pop
(bad)
sti
out
icebp
sub
cmp
add
sub
shl
les
stc
js
les
cmc
pop
mov
mov
data16
loop
dec
fwait
mov
aas
pusha
jbe
push
sub
sub
inc
sbb
mov
test
div
(bad)
mov
retf
jle
dec
test
pushf
pop
dec
clc
adc
sub
inc
aam
jecxz
sbb
scas
or
test
out
inc
(bad)
inc
xor
repnz
popf
pop
fidiv
ins
cli
lds
mov
push
loop
pushf
fisubr
cdq
dec
jbe
popf
aaa
mov
jbe
(bad)
xchg
inc
imul
inc
or
out
test
mov
repz
pop
cmp
adc
add
addr16
aas
jne
test
inc
mov
int3
xchg
jge
and
pop
adc
add
adc
mov
(bad)
inc
sbb
push
jbe
daa
jo
add
inc
jns
sbb
and
sbb
sub
ror
scas
popf
fsubr
push
fst
sub
mov
mov
lock
cli
mov
mov
mov
aas
cwde
fadd
dec
push
xor
pop
xchg
adc
jnp
mov
inc
call
inc
xor
xor
ins
out
or
add
sahf
mov
sub
mov
bound
aam
mov
aad
lock
xor
dec
mov
jle
fnstenv
dec
ret
mov
dec
(bad)
sbb
imul
inc
xlat
cdq
mov
and
int
sub
xchg
fisttp
sub
inc
es
sbb
in
inc
cmc
pop
icebp
inc
scas
push
sub
movs
sbb
sahf
cmp
arpl
aam
dec
scas
dec
imul
dec
loop
push
retf
enter
xchg
aaa
sbb
mov
js
or
test
add
std
pop
or
ror
pop
jle
stc
jge
aad
daa
loopne
xchg
pop
in
jecxz
mov
(bad)
xor
frstor
sahf
mov
mov
loope
jbe
inc
sbb
lock
jnp
(bad)
(bad)
popa
and
add
mov
ret
mov
adc
in
jne
bnd
dec
xchg
jl
push
jmp
(bad)
mov
jge
cmp
repnz
rcl
outs
sub
xor
aam
sub
add
or
sub
sub
inc
fild
cmp
sub
jno
lds
cmp
sub
or
inc
jg
fsubr
movs
or
xchg
pop
mov
pop
outs
pop
retf
das
adc
dec
retf
dec
test
push
(bad)
mov
shl
fs
mov
sub
nop
jnp
push
xor
pushf
and
ds
inc
sub
int3
in
xlat
dec
sbb
dec
in
add
mov
stc
call
test
repz
add
lds
pop
mov
repnz
stos
test
outs
jle
or
jo
add
xor
lock
fsub
mov
in
inc
(bad)
outs
lock
add
jle
mov
sub
cmp
loop
add
call
xlat
clc
inc
popf
add
or
pop
sub
sub
mov
xchg
aaa
mov
stc
xchg
imul
mov
mov
dec
or
bndldx
(bad)
int3
and
repz
add
dec
dec
mov
rcl
xor
in
jo
clc
mov
std
push
or
mov
popf
sti
cwde
cmps
in
push
mov
sbb
call
jecxz
adc
int3
fdivr
ret
daa
adc
inc
lea
jp
xor
cld
enter
daa
movs
mov
xchg
cmps
leave
jo
imul
mov
mov
or
test
xor
xchg
sbb
ins
cwde
mov
sub
inc
pop
imul
ficomp
inc
add
pusha
push
xchg
shl
mov
ja
push
ret
test
(bad)
fisttp
inc
test
mov
mov
test
inc
sub
xchg
jmp
push
sbb
pusha
call
fwait
pop
out
or
call
pop
pop
or
in
loope
mov
movs
pop
or
lock
push
mov
daa
mov
imul
std
push
push
mov
mov
jge
sub
xchg
test
mov
mov
je
popf
or
je
push
test
lahf
das
std
xchg
jmp
sbb
xor
les
rcl
xor
push
leave
push
sub
inc
pop
lahf
or
mov
mov
cmp
adc
stos
into
jbe
jmp
jb
lea
test
adc
push
pop
add
xchg
aam
call
out
or
xchg
addr16
xchg
inc
outs
cmc
sti
loopne
mov
cmp
scas
xchg
test
and
jae
xor
xchg
(bad)
xchg
movs
sub
or
in
arpl
mov
mov
inc
and
adc
shr
std
fidiv
or
pop
retf
rcl
sar
lock
push
and
cld
std
cli
loopne
out
adc
hlt
jp
cli
adc
es
scas
out
popa
mov
sub
push
lea
jp
call
xor
pop
rol
pop
div
clc
test
(bad)
stc
mov
mov
fprem1
ret
je
stos
(bad)
jge
hlt
aad
popa
retf
call
dec
fldenv
ret
(bad)
inc
aaa
xor
scas
and
ret
sub
icebp
or
jmp
push
pop
shr
adc
jo
mov
dec
addr16
or
rol
cwde
lock
mov
loope
lods
push
mov
in
pop
iret
cmp
dec
out
mov
pop
fdivr
mov
int3
xchg
adc
in
xchg
aam
add
xor
mov
or
out
lods
push
adc
and
xor
lods
push
leave
shl
imul
(bad)
fbstp
sbb
repnz
cld
popa
icebp
sti
(bad)
(bad)
rcl
mov
pop
sub
lahf
fdiv
xor
inc
jmp
fnstenv
out
xchg
dec
ja
retf
(bad)
shl
xor
sbb
mov
les
inc
xor
or
je
push
aam
add
cld
in
push
in
(bad)
sti
fsub
call
test
jbe
das
sub
rcl
pop
clc
mov
enter
popa
repnz
jae
mov
pop
leave
in
icebp
pop
push
pop
jno
inc
xchg
dec
mov
dec
call
sbb
sub
mov
ret
std
loop
mov
lods
mov
mov
dec
add
mul
aas
(bad)
hlt
int3
int
nop
das
inc
outs
jle
inc
jp
hlt
arpl
cmp
xlat
jmp
and
jge
pop
pushf
cmp
xor
fwait
repz
cmps
inc
popa
dec
in
fadd
inc
popf
inc
pushf
mov
pop
adc
rol
pushf
xchg
jmp
dec
test
sbb
pop
mov
outs
les
bound
ret
aas
movs
push
ss
fidivr
ins
sub
shl
int
add
mov
dec
lods
pusha
xchg
jo
sub
jbe
jb
pop
enter
mov
dec
jno
dec
(bad)
add
rcr
lods
es
rcr
inc
cmp
popa
and
cmp
jbe
in
sahf
repnz
cmp
xchg
shr
dec
jge
cdq
xchg
hlt
and
cmp
mov
xchg
jg
(bad)
mov
fcomip
ins
sbb
mov
wbinvd
dec
lods
dec
inc
cmps
mov
push
outs
xor
inc
mov
jle
inc
mov
cdq
cmp
fincstp
push
mov
mov
loop
not
fbstp
pop
shl
sahf
xor
stos
fmulp
jmp
test
repz
fs
adc
adc
push
xlat
mov
aaa
iret
inc
mov
pop
xchg
lock
imul
inc
adc
mov
cmp
pop
stc
repz
push
or
sbb
aam
ret
loop
leave
push
pop
xor
leave
das
xchg
push
xchg
jnp
repz
outs
nop
mov
and
lods
dec
fld
and
(bad)
push
jp
cmp
xlat
out
data16
nop
adc
dec
int3
mov
aaa
(bad)
mov
nop
int
nop
mov
jno
cmp
push
jb
out
sub
jo
or
loopne
das
mov
cdq
jl
aaa
push
ins
cmc
rol
cmc
jg
jl
cld
adc
out
test
jge
sti
sbb
pop
push
xor
outs
mov
inc
div
cli
ss
and
or
inc
mov
and
popa
adc
jl
dec
fcmovnb
loopne
inc
jl
aam
lock
sar
sbb
inc
popf
lods
inc
fsubr
add
int
or
mov
xchg
xchg
dec
out
clc
mov
xor
les
ins
push
push
xor
push
ins
mov
push
stc
dec
cmc
aaa
adc
aaa
cdq
ja
adc
iret
icebp
mov
sbb
dec
add
xchg
(bad)
in
jnp
mov
or
(bad)
loopne
jg
push
xlat
adc
sbb
iret
movs
ins
jnp
imul
in
pop
test
or
sbb
scas
mov
adc
xor
xlat
jmp
nop
ret
jl
out
ja
sar
mov
push
or
adc
test
or
ins
pop
icebp
pushf
stos
loop
js
mov
sar
adc
cdq
popa
jecxz
xor
fcmovbe
pop
and
gs
js
fist
xchg
stc
mov
dec
add
loopne
cmp
popa
repz
lods
pushf
inc
movs
bound
xor
lods
loopne
pushf
pop
mov
mov
daa
iret
hlt
je
push
cmps
dec
cmp
inc
inc
xor
addr16
(bad)
or
push
ficom
add
(bad)
cmp
mov
ror
pushf
test
fiadd
mov
sahf
jns
dec
aaa
jnp
cmp
push
jg
add
mov
jno
adc
jp
cli
clc
out
xor
or
fmul
dec
lods
aam
mov
movs
in
mov
imul
inc
mov
fnsave
push
dec
sbb
adc
outs
jmp
sar
mov
je
addr16
lods
sbb
push
stc
popf
lea
pop
inc
adc
(bad)
je
fwait
inc
into
jns
pfnacc
push
and
movs
fistp
xchg
rol
sti
mov
jns
add
or
icebp
jno
add
test
cmps
lods
lods
ja
movs
pop
(bad)
jl
dec
hlt
addr16
stc
ret
shr
sub
lods
pop
or
ror
mov
xlat
fnstcw
xchg
(bad)
mov
xchg
and
jmp
cmps
div
sbb
jno
imul
pop
cmc
pop
push
bound
and
mov
in
and
dec
sub
fstp
aam
mov
ret
dec
xchg
pushf
aam
outs
mov
xchg
js
(bad)
scas
test
add
or
adc
out
mov
ja
gs
mov
imul
mov
mov
je
test
call
popa
pop
or
mov
test
in
lahf
popa
outs
xchg
cmps
dec
pop
mov
sbb
fstp
gs
jno
rcr
sahf
adc
xor
xor
fwait
xchg
daa
add
dec
and
push
iret
leave
cmp
in
pop
ins
jg
lds
mov
loope
adc
(bad)
mov
stc
push
fsubrp
sti
(bad)
cmp
addr16
cld
mov
imul
(bad)
loope
dec
(bad)
pop
sub
enter
adc
js
cmp
sbb
push
cli
and
jmp
ja
push
adc
inc
std
sub
adc
test
mov
adc
mov
pop
mov
cmc
mov
push
add
imul
jmp
out
jge
push
dec
pop
bound
xchg
xchg
mov
xchg
inc
mov
adc
mov
js
mov
ror
xor
aaa
iret
or
fdiv
inc
mov
stos
imul
iret
rol
inc
inc
mov
mov
inc
push
in
retf
push
mov
and
inc
mov
sbb
cmp
pop
dec
dec
inc
or
je
push
sub
sub
in
xchg
and
pop
jns
xor
add
mov
cwde
adc
movs
jnp
jns
pop
add
icebp
bnd
jecxz
and
add
cmp
in
enter
push
loopne
adc
cmps
xor
push
xlat
add
loopne
add
mov
pop
lahf
lea
lds
popa
fdivrp
sbb
push
jl
push
xor
dec
sbb
inc
stos
sbb
sbb
(bad)
lock
cmp
stos
sar
loop
cmp
(bad)
pop
aam
adc
jmp
mov
retf
adc
inc
mov
shr
cli
xchg
(bad)
shl
in
mov
js
mov
mov
push
cld
(bad)
jb
jl
leave
cdq
xor
test
add
push
outs
mov
xchg
jp
(bad)
fucom
aas
mov
cmp
add
repz
les
sub
mov
(bad)
xor
pop
dec
call
jecxz
push
dec
xchg
push
mov
adc
pop
pusha
(bad)
lods
sbb
in
sub
mul
jp
push
movs
out
push
mov
dec
sbb
add
pop
test
xlat
adc
retf
add
jmp
fwait
addr16
retf
hlt
sub
(bad)
js
xchg
mov
adc
add
mov
sub
mov
popf
mov
push
mov
and
dec
in
mov
arpl
ret
arpl
inc
mov
idiv
pop
cmp
rol
jno
fstp
sub
fimul
mov
xchg
add
mov
mov
rol
cmp
in
btr
pop
add
xor
jns
jmp
mov
(bad)
test
leave
mov
mov
les
outs
add
jg
test
jno
push
addr16
aaa
dec
clc
loop
pop
add
mov
or
fwait
xlat
imul
xor
xor
or
sahf
cs
fwait
aaa
mov
lea
jmp
mov
mov
xchg
rol
xchg
nop
and
shld
call
mov
xchg
xor
mov
mov
pop
adc
or
push
pop
inc
cmps
or
aas
fcomp
shr
ror
dec
call
out
dec
xor
mov
sub
mov
jge
xchg
jp
inc
mov
nop
retf
push
mov
jmp
xchg
sub
mov
popf
xchg
in
loope
and
scas
and
out
outs
cmp
idiv
pop
mov
dec
outs
adc
add
mov
mov
add
loop
and
inc
fistp
in
imul
or
mov
mov
inc
xchg
and
mov
jmp
sub
mul
bnd
nop
out
(bad)
jns
adc
mov
inc
fst
dec
out
out
scas
or
adc
cwde
inc
jge
add
cmp
retf
xchg
dec
movs
add
adc
dec
outs
sahf
popa
adc
dec
sub
jbe
and
add
ja
fs
out
xchg
jle
js
fwait
jns
test
adc
mov
jp
loop
mov
mov
or
sub
cld
loop
lds
mov
mov
pop
daa
pop
inc
iret
aas
data16
push
(bad)
xlat
data16
inc
dec
int
add
pushf
test
mov
xchg
cli
and
sbb
mov
sub
xor
pop
shl
xchg
loope
xor
shl
fneni(8087
sbb
ins
pop
pop
in
jne
dec
cs
xchg
and
pop
or
pop
xor
mov
aaa
mov
mov
inc
(bad)
test
(bad)
mov
int3
and
dec
mov
mov
pop
or
xor
mov
jmp
xor
dec
fadd
(bad)
hlt
push
mov
mov
lock
sub
sbb
addr16
or
dec
ins
and
mov
lock
les
data16
dec
dec
and
mov
fwait
mov
movs
dec
das
fld
outs
test
adc
add
outs
or
retf
mov
int3
loopne
push
mov
clc
push
mov
inc
mov
sub
(bad)
pop
mov
not
ss
daa
mov
pop
mov
call
sbb
jg
movs
cmp
loope
mov
mov
dec
scas
push
cmc
sahf
and
add
xchg
cld
sub
push
daa
test
xchg
mov
mov
icebp
mov
das
add
cmps
aam
mov
and
mov
sub
aam
mov
das
cmp
dec
cmp
pmullw
aad
push
inc
mov
xor
inc
jp
jmp
inc
iret
jno
xchg
bound
in
lea
movs
xchg
cmc
push
enter
stos
retf
rcl
(bad)
jo
(bad)
in
aaa
xchg
popa
mov
xor
push
dec
call
ins
xchg
mov
mov
mov
add
std
or
inc
jmp
sbb
add
add
xchg
sbb
test
pop
xor
adc
jns
std
in
xor
(bad)
in
mov
add
ficom
int3
es
int3
arpl
and
and
ror
push
adc
cmp
sub
inc
mov
cli
out
add
push
mov
sub
push
jle
shl
fistp
fnstenv
into
test
mov
xlat
push
pop
add
data16
jmp
mov
call
mov
les
mov
mov
jnp
dec
inc
mov
cwde
or
inc
mov
cmp
(bad)
cmp
clc
fistp
inc
mov
jbe
dec
pop
add
mov
or
add
cmp
pop
lahf
mov
mov
int
mov
xor
or
daa
or
int
stos
test
(bad)
into
mov
pop
jmp
out
(bad)
sub
pop
psubusw
xor
jg
cmc
mov
mov
(bad)
fadd
pop
rol
jb
sbb
ss
mov
jbe
ror
pop
stc
shl
jl
add
push
mov
sbb
popf
mov
push
sub
sti
test
pop
add
sbb
or
(bad)
ss
sbb
ror
inc
(bad)
stc
xchg
mov
outs
dec
lods
fsub
push
add
call
sar
jo
xor
xchg
jae
cmp
push
mov
ds
in
stos
pop
sbb
nop
add
call
bound
dec
(bad)
popf
ja
mov
mov
imul
scas
pop
das
jno
push
daa
adc
es
cli
inc
sahf
stos
sbb
rcl
out
aam
ins
fsub
mov
push
mov
in
jp
movs
div
shr
cmp
das
pop
add
rcr
jp
sahf
stos
scas
sub
cmps
jmp
inc
mov
lods
push
xlat
fwait
cmc
outs
jae
fidivr
test
jae
mov
inc
sar
and
mov
adc
mov
ret
dec
push
add
ret
add
jmp
lahf
xor
cmp
mov
gs
inc
jl
mov
mov
inc
xor
icebp
dec
pop
hlt
cmp
inc
sub
or
mov
pop
push
xchg
rol
aam
js
std
les
mov
jmp
movs
retf
mov
xchg
mov
dec
push
inc
call
and
xchg
add
fld
ja
jno
retf
add
xchg
mov
sahf
fucomi
inc
js
adc
div
sbb
pop
js
ins
mov
add
xchg
ret
sub
cmps
xchg
sbb
xchg
repnz
push
or
movs
pop
ret
pushf
or
popf
cdq
ficom
sti
jp
adc
clc
and
xchg
jp
sbb
outs
xbegin
lahf
sub
scas
cdq
mov
retf
push
leave
hlt
ds
imul
or
mov
es
mov
push
scas
jo
icebp
or
xor
xchg
neg
(bad)
in
les
enter
dec
addr16
gs
outs
(bad)
jg
int
mov
lahf
pop
aad
sub
pop
addr16
in
mov
sahf
and
inc
pop
dec
scas
std
xlat
inc
test
jmp
hlt
fcmove
bound
aam
into
call
pop
int3
rcr
les
xchg
test
mov
(bad)
and
sbb
daa
out
fisttp
mov
xor
push
shr
dec
js
add
stos
lds
and
jae
out
fwait
add
jnp
dec
mov
mov
pop
inc
jecxz
dec
(bad)
out
hlt
xchg
cmps
outs
in
leave
adc
and
outs
mov
sub
xchg
cmp
add
dec
pop
scas
or
push
mov
mov
push
ss
xor
inc
imul
rcr
dec
in
inc
in
cmps
jecxz
inc
pop
not
jae
adc
jb
adc
sbb
daa
cmp
dec
scas
call
pop
mov
scas
sub
shl
retf
xchg
neg
loope
or
cmp
mov
scas
and
inc
adc
lods
rcl
repz
push
sub
fwait
test
xchg
sbb
jmp
push
cmp
xchg
fild
cmp
(bad)
pop
fidivr
pop
out
sti
(bad)
in
sub
jle
push
add
cmps
jnp
movs
push
rcr
fsub
push
add
mov
in
rcr
pop
jle
jbe
stos
dec
xor
out
inc
call
ss
sti
push
outs
pop
mov
(bad)
iret
or
jmp
dec
mov
cmp
push
sbb
imul
stc
cld
push
(bad)
lahf
dec
loopne
jns
loopne
mov
bound
stos
scas
lods
das
fs
test
aaa
inc
jbe
inc
hlt
daa
cmp
adc
scas
inc
nop
gs
cs
cmp
jo
stos
in
mov
loop
outs
and
jbe
mov
xor
arpl
pop
outs
(bad)
(bad)
je
inc
mov
gs
dec
mov
and
shr
sub
jb
ficom
xchg
dec
imul
mov
imul
cmps
dec
call
adc
enter
mov
pop
adc
or
sbb
mov
xchg
xor
fnstenv
jne
rcr
and
in
sahf
test
and
sbb
bound
jne
or
frstor
sbb
(bad)
pop
ror
fs
fcmovb
cmp
mov
push
sbb
cmp
std
xor
pushf
dec
dec
mov
mov
lock
fcomp
jmp
data16
loopne
xor
jbe
out
ds
jle
movs
jmp
mov
movs
lahf
psubsw
inc
push
arpl
test
xchg
lock
cmp
loope
cmp
fcmovne
push
clc
ins
rcl
into
outs
xchg
xor
adc
cmps
xchg
in
inc
ins
out
mov
mov
push
mov
sbb
out
ss
shl
stos
xor
add
push
iret
jp
or
ds
sub
cmp
pop
dec
adc
add
xchg
test
fnstsw
jns
mov
cdq
sub
push
mov
out
jmp
mov
dec
out
cmp
pop
sub
clc
scas
jbe
mov
xor
mul
iret
std
out
stc
inc
iret
inc
cmp
xor
rol
retf
mov
add
adc
fnstsw
arpl
cmp
retf
ret
push
jo
xchg
and
and
push
xor
repz
inc
fist
enter
push
xor
iret
mov
xchg
hlt
add
and
mov
adc
jbe
and
and
and
jmp
stos
jnp
icebp
fld
in
dec
js
cmc
push
push
xor
and
scas
repnz
pop
movs
cmp
xchg
cmp
aas
fs
jae
inc
mov
hlt
jnp
mov
movs
jno
movs
pop
gs
lock
xchg
repz
repnz
scas
(bad)
clc
in
cmps
sbb
mov
fsubr
inc
pop
or
adc
sub
lea
adc
nop
sahf
mov
dec
mov
xchg
add
inc
xchg
push
test
jnp
jg
aam
(bad)
outs
test
lock
repnz
test
in
and
sahf
push
cmc
xchg
rcr
mov
clc
push
ins
pop
mov
cmp
stos
sbb
scas
lds
js
hlt
sbb
dec
mov
adc
mov
mov
xchg
xchg
cdq
call
xlat
out
sub
out
lahf
push
push
sahf
cmc
xor
sahf
fwait
cmp
sub
retf
pop
in
xor
cld
cmp
lea
imul
call
lahf
test
jmp
inc
jo
jecxz
push
call
sub
fdiv
jp
cmc
jo
lods
inc
push
sub
sbb
xchg
fcmovne
add
mov
shl
and
je
inc
and
loop
ss
mov
or
lock
and
inc
shr
call
push
mov
lods
in
or
rcr
ss
sahf
pop
in
rol
mov
cli
or
aad
lock
mov
sbb
out
int3
test
adc
mov
cmp
pushf
jp
jecxz
adc
nop
inc
std
dec
and
fcomp
sbb
jg
bnd
xor
add
jp
shr
outs
test
fwait
inc
dec
outs
pusha
push
nop
jmp
cmp
mov
inc
pop
adc
cli
pop
cdq
rol
mov
adc
movs
je
out
add
mov
lock
push
mov
sub
mov
in
cmps
jmp
jl
movs
xchg
into
add
pop
push
cmp
das
mov
or
xchg
and
jne
int
stos
xor
out
mov
jp
fs
jno
out
jne
push
xor
hlt
jmp
jbe
xchg
adc
div
(bad)
push
js
mov
into
push
sbb
push
in
push
mov
xor
cmp
or
xchg
and
call
inc
daa
inc
iret
push
sub
mov
fild
dec
stos
mov
mov
jmp
cmp
fldenv
(bad)
call
inc
icebp
push
mov
or
fs
loopne
mov
pop
push
in
sbb
sub
ds
int
stos
and
mov
mov
push
into
sar
(bad)
jge
cmc
icebp
mov
outs
adc
cmc
jp
lea
lods
xor
out
mov
movs
jo
ds
push
inc
outs
jo
xor
sub
(bad)
enter
pushf
scas
(bad)
push
mov
rcl
aam
inc
ror
mov
jae
hlt
cmc
pop
sbb
mov
or
pushf
pop
or
jmp
call
cdq
mov
shl
cmp
mov
fisttp
loope
inc
cmp
lock
xor
or
xchg
push
rcl
jnp
jp
mov
push
fnstsw
xchg
(bad)
fdivr
xor
xchg
lock
mov
(bad)
ds
mov
rcl
pop
(bad)
cmps
mov
in
popf
dec
or
adc
and
iret
fnsave
call
xor
sahf
bound
or
imul
pop
inc
sub
imul
outs
shr
push
add
movs
test
mov
mov
mov
add
repnz
jge
and
mov
or
jo
mov
cmp
ret
hlt
push
dec
cmp
xor
das
add
xor
xor
fs
mov
std
push
or
inc
mov
cmp
fist
leave
sbb
xlat
and
clc
cmp
out
mov
sub
in
lock
xchg
fmul
(bad)
in
sahf
mov
mov
push
xchg
pusha
inc
jg
cmc
mov
in
std
cwde
mov
jb
imul
das
add
popa
xchg
aam
fdivr
pop
shl
pop
movs
popf
mov
push
lods
cmp
pop
inc
jo
sbb
lods
fwait
std
lea
dec
adc
cs
push
in
cmps
out
adc
pusha
inc
mov
pop
add
ror
push
push
or
in
mov
fsub
cmp
jnp
movs
add
xor
retf
jb
call
sbb
sub
scas
imul
neg
push
inc
jae
data16
les
sub
xchg
clc
mov
push
or
and
stos
fld
push
aad
xor
movs
dec
xlat
imul
call
outs
js
shl
pop
iret
xchg
jmp
inc
push
dec
fmul
sbb
xchg
in
mov
mov
ficom
test
cdq
std
mov
das
in
in
adc
push
adc
cmp
inc
sar
pop
and
inc
and
sub
sti
mov
xor
pusha
popa
inc
ss
out
in
sbb
or
push
std
add
lock
mov
mov
bound
push
fistp
(bad)
pop
mov
mov
fstp
cwde
loop
mov
push
cmp
push
adc
test
sbb
loopne
call
mov
jle
cmp
jecxz
or
call
adc
pushf
movs
jmp
mov
ins
inc
push
and
(bad)
gs
das
lods
add
adc
sbb
adc
aaa
jle
pop
and
inc
ror
adc
loop
scas
dec
retf
das
jbe
mov
popa
mov
test
mov
dec
add
stos
inc
jbe
lea
mov
es
iret
push
test
(bad)
sub
cmps
dec
cmp
std
adc
add
push
test
jmp
mov
mov
sbb
mov
xchg
sti
jnp
dec
sbb
mov
xor
mov
js
mov
retf
ret
icebp
push
(bad)
repnz
sti
sbb
mov
lods
je
ins
mov
sbb
adc
aam
adc
outs
and
xor
cli
dec
inc
addr16
xchg
leave
shl
inc
pop
sbb
xchg
pop
push
xchg
sub
push
je
jmp
adc
jle
dec
ffree
in
movs
adc
cmp
sti
stos
ret
cwde
lahf
les
retf
test
xor
sahf
mov
in
xor
loope
dec
les
daa
sub
xor
mov
loop
lods
jbe
inc
jno
mov
out
popf
pop
mov
push
xor
lahf
std
ss
aaa
es
adc
test
popa
test
fld
add
or
cmps
mov
sar
xor
dec
loop
dec
call
fnsave
sub
and
ds
sbb
sub
pop
mov
js
rcr
jnp
mov
cwde
pop
add
pusha
jne
mov
xor
mov
xchg
add
and
xor
dec
sahf
xchg
and
mov
xor
dec
icebp
test
imul
mov
data16
and
fild
adc
aas
stos
shl
inc
sub
mov
std
add
enter
xchg
pop
mov
sub
int3
adc
dec
pop
and
push
mov
push
hlt
sar
sub
inc
out
sub
add
xchg
popf
fistp
jns
or
jae
lds
fimul
and
mov
out
pusha
lock
repz
jge
leave
test
int
dec
push
frstor
aas
add
stos
fist
test
jl
mov
shl
adc
and
xchg
push
xchg
xchg
cli
adc
sbb
out
bound
ret
rcl
std
jg
jmp
mov
js
retw
xor
inc
push
test
and
sub
fs
pop
std
mov
sar
sub
mov
mov
mov
retf
rol
push
and
fist
pop
sbb
retf
jmp
xlat
or
xchg
inc
data16
out
int
shl
out
ins
hlt
test
jbe
jbe
push
mov
adc
popf
xchg
imul
stos
dec
mov
popf
cmp
pusha
jns
fiadd
mov
aam
fnsave
xlat
in
sub
jle
push
call
mov
in
addr16
(bad)
mov
mov
xlat
imul
mov
pop
lods
push
jno
or
xchg
cmp
mov
sbb
and
add
test
or
and
shl
inc
stc
inc
(bad)
lock
sbb
ret
das
ja
pushf
stos
ret
test
mov
push
xor
cmp
ja
sub
jo
fcomp
jp
fisttp
xor
scas
outs
mov
cwde
in
fisttp
and
mov
inc
cmp
std
les
mov
jmp
movs
jns
cld
cs
sbb
mov
mov
push
push
inc
sbb
js
mov
dec
aad
es
dec
and
and
sbb
dec
aam
int
xchg
xchg
mov
out
add
push
pusha
fsubr
dec
jo
cmp
adc
scas
jg
dec
mov
mov
xchg
mov
pushf
pop
repnz
sbb
addr16
cs
inc
sbb
or
loop
test
in
into
mov
sar
retf
jecxz
jae
ja
retf
push
jmp
inc
stos
loop
jg
mov
jnp
gs
cmp
ins
arpl
hlt
arpl
inc
jmp
or
cmps
dec
pop
jg
xchg
push
sub
pop
cmpxchg
mov
push
inc
pop
and
inc
in
out
inc
and
iret
retf
cli
repnz
pop
lods
ja
sbb
add
mov
cmps
sub
add
lea
test
call
mov
dec
mov
mov
xor
xchg
data16
add
add
lea
imul
mov
mov
and
repz
inc
fwait
push
addr16
jns
out
xor
jp
xor
dec
pop
or
aas
bswap
icebp
dec
scas
xchg
nop
cs
sub
mov
mov
mov
out
mov
ins
push
jno
mov
push
pop
pop
aad
scas
xchg
lea
cmp
inc
int
add
ficom
cmp
lock
stos
sub
xchg
loop
sbb
mov
aaa
inc
adc
sar
outs
jae
and
sbb
les
push
pop
mov
outs
dec
fbld
dec
cmp
(bad)
pop
adc
cmp
repz
or
inc
inc
push
dec
mov
xor
sub
sub
push
pop
inc
ins
scas
or
push
inc
adc
sbb
xor
imul
push
dec
hlt
outs
ja
dec
dec
pop
in
test
adc
add
mov
jo
iret
mov
mov
repz
sbb
(bad)
lods
(bad)
jmp
push
mov
jo
sbb
adc
xchg
scas
mov
xchg
ja
stos
mov
cld
rcr
jecxz
jp
popa
jno
xchg
cmp
loope
and
push
bound
mov
into
xchg
mov
in
sub
push
imul
jno
push
add
rcr
repnz
jae
stc
outs
mov
cdq
mov
mov
iret
xchg
loope
and
and
mov
and
lods
retf
in
cli
pushf
or
lds
mov
out
adc
scas
mov
add
push
ror
jno
and
and
imul
shr
mov
add
inc
sar
sbb
shl
imul
inc
cmp
add
das
aaa
movs
test
aad
jne
outs
push
iret
in
outs
cli
or
imul
and
and
movs
(bad)
ret
out
push
or
mov
mov
dec
adc
repnz
add
arpl
xor
xchg
ins
add
loopne
outs
aas
xchg
add
cmc
pop
cmp
push
out
dec
popa
dec
mov
pusha
sub
jecxz
mov
pop
mov
adc
sub
out
inc
add
xchg
inc
jno
push
inc
dec
push
or
mov
xchg
shl
cwde
add
push
add
sbb
pop
xor
push
rcl
inc
cmp
outs
mov
sbb
mov
xor
out
popa
cmp
push
cld
xchg
clc
adc
dec
sbb
mov
sbb
push
sbb
mov
mov
jb
or
cwde
rcr
outs
jg
arpl
sub
(bad)
int3
scas
pop
icebp
mov
fimul
pusha
sti
into
pop
add
daa
in
(bad)
inc
add
loop
inc
jg
lods
test
dec
jae
mov
inc
paddb
pop
je
lods
push
xor
jae
jmp
ins
mov
movs
fldenv
aam
loop
xchg
xchg
mov
popf
out
jg
sbb
mov
pop
or
arpl
scas
jge
shl
xor
shr
loopne
jnp
pop
push
jb
and
hlt
mov
inc
push
jo
sbb
cmps
ins
bound
mov
in
xchg
inc
add
jno
or
in
adc
add
xor
sub
sar
sub
daa
lea
idiv
shl
mov
mov
lds
je
or
pushf
sbb
imul
push
inc
mov
jno
mov
mov
dec
jg
loop
xlat
push
jnp
mov
mov
outs
fnstsw
in
or
or
fcom
or
sbb
hlt
mov
or
clc
xchg
xor
imul
mov
popa
fbld
sbb
test
sbb
not
lock
retw
out
mov
call
mov
and
shufps
xor
imul
sar
pop
push
sub
adc
xor
or
xlat
xchg
mov
jmp
mov
es
add
pop
aaa
movs
(bad)
in
xchg
cmc
cwde
es
adc
lea
xor
jno
pop
xchg
mov
gs
add
shl
loop
lahf
push
mov
inc
dec
movs
push
pushf
lahf
jmp
inc
fmul
shr
je
dec
xchg
add
aaa
ret
fcmovnbe
mov
inc
fmul
pop
jne
mov
popa
add
stos
pop
push
cmp
cmp
mov
xchg
adc
dec
and
jle
jbe
call
inc
inc
sub
movs
pop
sbb
or
mov
push
jb
adc
mov
pop
jns
push
in
movs
dec
mov
xchg
xor
jg
ins
dec
neg
data16
pop
js
ret
std
push
icebp
aam
jmp
dec
shr
lds
std
add
psrld
cmp
adc
sub
repz
dec
push
fbld
or
add
add
sub
mov
out
rol
xor
sbb
push
sbb
dec
push
gs
push
jo
repnz
mov
(bad)
sub
cs
mov
or
ins
adc
fnclex
aad
inc
mov
mov
add
mov
gs
(bad)
(bad)
out
scas
cdq
xor
or
mov
adc
(bad)
pop
(bad)
sbb
lea
shr
mov
dec
lock
ret
inc
ret
ins
sub
xlat
mov
xchg
les
mov
mov
adc
test
xchg
cmc
push
jne
mov
(bad)
adc
jmp
inc
dec
enter
jns
shl
lods
ins
jae
mov
mov
mov
sbb
adc
std
cld
push
or
jae
xchg
out
add
mov
aad
leave
call
jge
test
pop
js
sbb
xor
or
mov
cmp
jo
ret
ja
mov
sub
repnz
push
mov
sbb
and
pop
dec
adc
cmps
mov
repnz
xlat
mov
jo
(bad)
xor
mov
mov
and
pop
sbb
xchg
mov
mov
pop
xchg
push
or
retf
icebp
push
push
iret
xchg
dec
mov
jbe
call
inc
cwde
push
movs
jmp
aad
mov
ret
clc
popf
pusha
stc
out
imul
fisubr
mov
stc
push
addr16
jb
mov
test
sti
sub
pop
push
leave
fild
lahf
mov
pop
mul
push
or
sub
and
imul
or
jge
nop
push
shl
std
popf
dec
cmp
jg
xlat
retf
mov
and
fsub
mov
push
or
add
xchg
inc
mov
(bad)
jp
ins
pop
or
ds
loop
and
(bad)
cmp
mov
in
popa
lock
jl
mov
push
push
ins
outs
in
sbb
push
(bad)
xlat
out
or
daa
jnp
std
add
outs
scas
or
cmp
or
xchg
icebp
outs
pop
xor
add
(bad)
pop
xor
xchg
mov
jne
(bad)
sar
rol
mov
jmp
repnz
mov
cld
addr16
mov
adc
dec
push
mov
jns
pop
fidivr
sahf
mov
and
aas
xchg
mov
jno
out
hlt
or
mov
jmp
pop
xchg
dec
dec
mov
jne
test
(bad)
xor
xor
mov
(bad)
punpckhwd
jnp
lods
leave
cwde
pushf
inc
mov
ror
enter
ins
jne
stos
leave
inc
ins
push
pop
cmc
fs
lahf
and
sub
ins
out
es
ja
inc
or
pop
dec
mov
jo
mov
xchg
jns
push
(bad)
pop
retf
imul
rcl
sub
and
ss
call
lds
and
add
pop
sub
mov
mov
pop
xchg
xchg
ja
(bad)
in
cmps
xor
push
dec
mov
pop
xor
adc
rcl
adc
xchg
push
cmps
inc
aaa
out
adc
(bad)
push
and
push
adc
rcl
jle
or
fcomp
pop
ret
xor
outs
xlat
sbb
leave
mov
adc
adc
or
adc
mov
add
pop
xor
and
cld
aam
ror
gs
mov
push
iret
xchg
mov
js
push
xor
shl
pop
sub
dec
or
sub
adc
lahf
xchg
dec
std
retf
icebp
xchg
stos
cmp
pop
cmp
xchg
test
sub
mov
dec
sub
fcmovnu
loopne
sbb
in
push
ss
mov
out
ret
xor
lods
mov
push
push
fsubr
shl
aam
push
add
jle
xlat
push
aad
pop
loopne
or
js
repz
imul
mov
stos
xchg
ret
les
ror
loope
mov
bound
mov
push
cmps
cmc
hlt
in
xor
mov
repz
gs
push
add
cmp
jmp
cs
in
xchg
cmp
push
push
cld
mov
stos
(bad)
sub
out
popa
loop
jno
and
xchg
mov
sbb
mov
gs
mov
clc
loop
xor
push
jb
mov
sbb
stos
xchg
loopne
retf
rol
ins
fld
jns
jge
loope
or
mov
(bad)
bound
xchg
push
jl
test
ret
(bad)
popf
jge
mov
push
xor
out
icebp
shr
retf
xchg
retf
ror
push
mov
daa
repz
fwait
sub
mov
stos
mov
cdq
cmp
vcvttss2si
and
cmp
dec
or
cmp
inc
sti
sbb
pushf
jecxz
cmp
cs
cmp
hlt
mov
push
dec
stos
ja
add
sbb
jl
sub
adc
mov
dec
xchg
jg
mov
mov
aad
xor
stc
ins
aam
cmp
mov
jg
mov
scas
mov
push
aam
adc
in
and
aas
leave
jp
ins
sti
mov
push
shr
mov
inc
(bad)
jns
mov
cdq
test
jmp
sub
cmps
ss
(bad)
inc
out
les
jno
mul
jp
retf
jp
fdiv
xor
inc
loopne
jne
scas
in
mov
aas
dec
sub
sub
ret
inc
ficom
pop
cmp
mov
or
ficomp
mov
sub
stos
loope
pop
pop
push
adc
cmp
and
adc
je
lea
pop
sub
sbb
pushf
stos
hlt
pop
mov
mov
sbb
xchg
(bad)
rol
loop
jae
sub
mov
lds
jo
jae
pop
push
cld
dec
xlat
popa
cli
add
mov
mov
and
xchg
shr
pop
xor
enter
xchg
rdpmc
je
fcmovu
lods
icebp
clc
dec
in
call
aaa
test
pop
idiv
inc
je
dec
dec
fisttp
pop
xchg
lods
sti
cli
(bad)
push
pop
jge
clc
hlt
push
jle
icebp
(bad)
in
mov
adc
xor
js
cmp
les
jns
xchg
ret
shr
aam
mov
cdq
jmp
fiadd
jnp
cmp
loope
fcomp
and
scas
inc
loopne
sbb
sub
pop
ins
nop
cmp
inc
pop
and
stos
xor
fadd
push
jmp
gs
addr16
pop
and
sti
adc
rcl
sbb
jle
inc
dec
cmps
aaa
inc
stc
and
mov
int3
jae
loop
jp
mov
daa
popa
je
mov
dec
outs
fdivrp
jno
retf
sbb
daa
cli
test
ret
or
pop
(bad)
mov
push
lods
dec
jl
cmp
sub
dec
pop
loope
repz
inc
(bad)
data16
out
pop
std
push
test
ret
ins
sbb
rol
gs
repz
scas
ss
imul
pop
sub
cmp
push
dec
fwait
xor
mov
pop
out
dec
or
or
mov
xchg
aas
pop
cmp
inc
push
(bad)
ffreep
mov
push
invd
or
cwde
jmp
adc
leave
mov
repz
jnp
fldl2e
cli
scas
ds
out
jge
scas
mov
adc
pop
sar
pushf
(bad)
jnp
xlat
add
adc
shl
xchg
mov
jns
(bad)
xor
xor
(bad)
popf
sub
and
mov
fs
pop
cld
lods
xor
call
or
pop
xor
pop
(bad)
aam
aas
mov
and
jle
inc
scas
icebp
mov
inc
or
addr16
or
rcl
jae
outs
out
push
push
inc
pop
mov
cmp
cmp
(bad)
xor
bound
lahf
xlat
out
mov
data16
(bad)
adc
mov
popa
jno
jecxz
(bad)
test
xchg
mov
add
stos
outs
mov
lea
adc
sub
cld
dec
mov
int3
call
mov
pop
mov
push
outs
rcl
out
movs
cmps
xlat
sbb
push
fxch
mov
imul
out
mov
into
fisub
xchg
sbb
pusha
push
retf
cdq
ret
or
sbb
dec
out
fcom
mov
js
sbb
dec
inc
sbb
cmps
mov
not
ds
fdivr
icebp
xor
enter
daa
xchg
sbb
jmp
adc
lods
pop
(bad)
jmp
dec
dec
loope
sbb
xchg
mov
movs
cmp
lods
pop
loope
sahf
cwde
mov
push
sbb
xor
add
lahf
loop
dec
cmc
test
les
jne
nop
cmp
dec
jmp
xor
push
stc
push
fwait
stos
push
aad
std
dec
test
jnp
iret
enter
rcl
inc
jle
sbb
js
(bad)
shr
(bad)
int3
or
xlat
add
push
gs
call
mov
test
(bad)
call
fcomp
pop
ds
dec
cmp
push
leave
mov
rcl
cmps
std
int3
and
iret
cmp
and
sbb
nop
cmp
leave
jmp
sbb
loope
jae
or
jecxz
test
lahf
mov
test
mov
adc
imul
push
fsubr
or
lds
movs
leave
rcr
cli
mov
add
mov
xor
int3
nop
iret
xor
mov
paddsb
loope
cmp
mov
dec
sub
stos
je
adc
leave
xchg
mov
push
xchg
rcr
imul
xor
jmp
call
mov
push
fidiv
fwait
ja
dec
jns
ret
jmp
mov
or
cmc
pop
xor
and
jle
cli
mov
fadd
ins
test
add
cmp
jbe
xor
pop
test
retf
cmps
scas
cmp
test
push
scas
inc
or
and
cwde
sbb
shr
push
pop
mov
aam
adc
rol
inc
test
cli
pop
mov
or
mov
cmp
jne
popa
or
jmp
fs
xchg
call
fbld
pop
pop
nop
adc
and
adc
cdq
mov
cmp
push
pop
add
push
adc
sbb
cmc
mov
(bad)
pop
into
sub
and
jbe
dec
inc
pop
je
aaa
sti
int
push
sub
loope
shl
ret
popa
popa
(bad)
fisubr
adc
shl
sbb
mov
sbb
xchg
sub
in
add
or
in
call
xor
in
mov
mov
ja
dec
jmp
push
in
xchg
jge
test
jl
pop
test
out
clc
sub
out
das
jmp
outs
ret
mov
call
int
push
fwait
xchg
lahf
push
sub
inc
stc
(bad)
in
stc
jmp
push
in
push
mov
dec
dec
xchg
cld
xor
scas
jb
cmp
push
pushf
bound
sub
rcl
jecxz
or
inc
mov
cmp
outs
iret
jp
call
movs
aad
mov
add
cmp
push
pop
sub
imul
inc
ja
js
adc
ds
cmp
rol
outs
mov
jp
xchg
pusha
loope
xlat
cmps
popf
lock
addr16
sti
test
arpl
mov
repnz
add
xor
pop
adc
loopne
cmps
mov
push
retf
inc
mov
in
(bad)
sbb
dec
dec
dec
adc
mov
xlat
rcr
(bad)
ficom
mov
xchg
jmp
fdiv
movs
pop
push
repz
mov
test
push
out
mov
mov
fadd
dec
ficom
xchg
das
arpl
cmp
stos
ret
cmp
dec
ds
(bad)
movs
cmp
(bad)
pop
in
pop
jno
loope
mov
mov
mov
in
jne
int3
sub
xor
sbb
xor
dec
and
xchg
adc
pop
mov
out
mov
aaa
bound
mov
push
(bad)
outs
or
mov
mov
and
fdiv
mov
and
(bad)
addr16
xor
je
push
pusha
sar
xor
dec
xchg
mov
idiv
jmp
adc
cdq
dec
rcr
add
pop
xchg
sub
dec
adc
(bad)
icebp
idiv
aaa
in
pop
aas
shl
mov
retf
mov
mov
pop
cmps
das
jb
fisttp
cs
fild
xchg
cmps
mov
mov
mov
outs
jo
retf
push
addr16
mov
and
es
aas
adc
pop
or
pop
fwait
test
cmp
lods
gs
fstp
(bad)
mov
scas
stos
cmp
xor
retf
out
adc
loope
mov
dec
ficomp
test
sti
push
sub
dec
daa
xchg
cmp
adc
xor
fwait
inc
in
jne
mov
and
repnz
scas
mov
sub
scas
shr
mov
rcl
sti
loope
arpl
mov
pop
jle
out
dec
or
or
jmp
cmp
mov
and
push
jge
mov
ret
xchg
stc
adc
data16
mov
int
cli
neg
jg
jno
adc
ins
(bad)
or
mov
xchg
(bad)
push
sbb
(bad)
jns
sub
pop
add
nop
xchg
shl
dec
dec
adc
stos
cmp
fild
adc
arpl
pusha
cld
pop
sbb
or
mov
fidivr
pop
cmp
pop
and
aas
data16
push
mov
sub
mov
mov
sahf
mov
mov
dec
add
stc
data16
cld
(bad)
sub
mov
mov
mulps
xchg
gs
pop
push
pusha
stos
retf
mov
cmp
add
lock
mov
(bad)
cmp
mov
out
retf
and
sub
cmps
retf
pushf
lahf
push
cmp
sub
pop
popf
and
movs
fisub
jl
jge
les
lock
lahf
arpl
lods
mov
loop
jmp
and
out
dec
sahf
fcmovnbe
jbe
push
hlt
mov
add
call
mov
stc
add
mov
add
mov
hlt
mov
sbb
xlat
jbe
or
imul
push
push
jmp
loop
(bad)
xor
push
ja
test
cmp
ins
arpl
cmp
jo
jecxz
stos
test
outs
mov
repnz
loopne
fsub
jl
jnp
nop
test
int
std
lahf
pop
xor
xchg
cld
in
or
lock
adc
repz
push
dec
push
ins
xor
loope
add
mov
rcr
mov
and
scas
mov
loopne
stos
jl
(bad)
xor
es
mov
scas
dec
out
pop
xor
xchg
pop
sub
cmp
ins
call
test
fdiv
pop
not
xor
mov
mov
loopne
jle
adc
mov
push
daa
xlat
xchg
sbb
clc
adc
cli
lock
sbb
xchg
push
bound
daa
out
iret
jo
mov
xchg
cmp
fbld
je
mov
adc
push
sub
fdiv
cmova
push
sahf
data16
es
push
clc
mov
sbb
in
cld
je
call
cli
int3
std
int3
jmp
in
mov
cld
in
dec
cmp
(bad)
push
or
push
outs
inc
outs
call
jmp
mov
loope
mov
stos
adc
fnstenv
mov
cmc
mov
and
cmp
mov
adc
popa
adc
push
cmps
add
fisttp
sbb
in
call
ret
push
xor
jne
dec
mov
xor
popf
jae
or
(bad)
sub
and
pop
iret
mov
or
outs
cmp
(bad)
push
sub
(bad)
fs
cli
mov
imul
cmp
jmp
cmp
cs
jae
mov
in
repnz
cwde
add
lahf
and
stos
pop
push
mov
and
out
iret
(bad)
leave
add
inc
cmp
test
je
outs
dec
aad
jl
sub
mov
and
and
test
jae
sahf
jmp
scas
aad
sub
mov
imul
xchg
or
pop
or
sub
pushf
call
movs
add
push
aam
test
push
sbb
push
dec
or
jmp
inc
and
push
stos
mov
jns
push
ffreep
mov
sbb
enter
cli
sub
add
jo
dec
call
imul
add
loopne
push
push
mov
dec
dec
scas
sti
fcom
or
cmp
test
ret
mov
inc
xor
adc
and
add
dec
pushf
sbb
cmp
out
xchg
and
mov
adc
shl
pop
outs
pushf
fidivr
jle
inc
cmps
(bad)
mov
fiadd
sbb
stos
pslld
or
loopne
mov
icebp
adc
test
test
inc
fimul
dec
inc
popf
fidiv
mov
cmp
or
nop
sbb
fldenv
push
lods
jecxz
(bad)
sbb
repz
jne
mov
jp
loope
imul
cmps
sub
sbb
pop
mov
dec
and
not
mov
test
mov
xor
and
mov
movs
ins
and
sub
ins
xchg
mov
xchg
mov
pop
inc
and
fcom
movs
stos
retf
sbb
sahf
cwde
mov
pop
int
or
movs
jae
call
cmp
pop
movs
push
ins
fld
mov
(bad)
fld
rol
call
stos
(bad)
inc
shl
mov
dec
push
aaa
mov
das
mov
mov
mov
mov
add
movs
and
push
push
xor
dec
cmp
dec
xchg
mov
and
inc
loopne
xlat
and
fadd
mov
and
call
mov
les
movs
add
cwde
mov
add
ret
xchg
sahf
sbb
lahf
dec
push
or
jae
push
mov
cwde
bound
cmp
lahf
ins
cs
or
fdivr
cmc
adc
rcr
hlt
cmp
jl
sbb
jmp
mov
mov
jne
call
jb
cld
lods
xor
sqrtps
scas
sub
hlt
mov
adc
xchg
repz
rep
inc
les
adc
adc
or
sbb
arpl
mov
ror
ja
(bad)
(bad)
pop
inc
add
pop
xor
out
shl
adc
sbb
loopne
xchg
inc
data16
imul
xchg
lahf
int3
cmp
dec
test
sub
test
fld
lock
push
dec
dec
out
mov
pop
cmp
push
pop
into
test
jae
jmp
dec
and
outs
jae
push
call
retf
mov
xchg
mov
mov
adc
sbb
sub
aam
pusha
les
mov
lahf
out
jecxz
or
sbb
das
cli
push
sbb
(bad)
pop
outs
adc
jmp
call
pop
lahf
cmp
retf
cwde
inc
sub
sub
popa
iret
jle
div
out
adc
leave
and
sbb
sbb
retf
adc
push
dec
push
pop
out
out
pop
(bad)
fldenv
rcr
mov
dec
and
xor
xor
retf
cmp
add
cmp
aaa
and
arpl
mov
jmp
cmp
or
pop
lahf
mov
push
mov
test
arpl
pop
(bad)
and
movs
jmp
repz
lods
fscale
scas
mov
cmp
inc
fmul
add
push
loop
cmp
mov
rol
ja
pop
fnsave
cmp
ins
imul
test
xor
xchg
pop
fisub
mov
add
mov
ss
sbb
retf
push
add
arpl
bound
test
xchg
shr
dec
mov
cmps
iret
loop
inc
out
imul
ds
out
xchg
pop
lods
sub
pop
pop
lock
sub
sbb
fidiv
lea
push
lock
mov
ror
(bad)
mov
and
sub
dec
add
lods
mov
mov
loop
popa
xchg
add
inc
cmp
inc
test
adc
fdivr
pop
scas
lahf
lahf
cmc
cmp
ds
enter
popa
in
adc
sbb
xlat
pop
sbb
stc
fisttp
adc
jmp
cld
mov
xor
mov
fld
fdivr
cmp
xor
jl
test
mov
mov
fsub
mov
or
sbb
adc
scas
ret
mov
pop
stos
pop
lods
cmp
inc
mov
pop
cmp
mov
icebp
adc
xor
movs
rcr
cli
shr
popf
frstor
adc
inc
mov
ret
xchg
xchg
leave
call
mov
push
les
mov
jno
mov
loop
pop
popf
std
xor
sahf
xor
cmp
enter
aam
inc
jmp
cdq
jne
inc
addr16
pop
(bad)
and
sbb
pop
sub
call
xchg
clc
ret
mov
adc
push
push
jno
pop
mov
push
adc
add
add
xchg
(bad)
nop
fcmovnu
in
sti
cmp
mov
cmp
data16
stos
dec
push
sub
mov
int3
out
jg
clc
stos
xor
pop
pusha
es
cmc
mov
fdiv
scas
jno
adc
scas
sbb
push
scas
out
js
out
aas
add
jmp
or
jle
dec
pop
xchg
add
movs
pushf
ins
scas
push
dec
jno
rcr
mov
mov
cmp
inc
adc
push
jp
jne
imul
and
or
sub
mov
jo
sub
clc
mov
or
push
and
mov
in
sub
cli
ror
mov
jns
test
mov
out
jnp
mov
xor
bound
mov
push
jecxz
scas
cmps
leave
dec
jbe
cmp
push
dec
and
adc
ds
pop
je
xchg
stos
mov
pop
mov
aad
lahf
jb
push
push
push
(bad)
mov
loope
fidivr
lea
push
fcomp
or
xchg
clc
hlt
mov
sub
call
test
pusha
and
and
add
or
outs
pushf
push
inc
aaa
dec
or
xchg
or
in
adc
jns
jl
xchg
mov
dec
inc
and
cdq
mov
leave
jl
clc
(bad)
xor
mov
or
push
sbb
(bad)
inc
mov
add
es
mov
jmp
ja
mov
mov
(bad)
adc
pop
dec
lods
jb
test
adc
jl
lds
cld
out
in
jge
sub
push
push
shl
fstp
in
cmp
sbb
dec
out
add
cmps
pushf
pop
ret
clc
rcr
xchg
test
aaa
cmp
je
jbe
daa
ret
and
popa
and
jecxz
adc
sar
dec
cmp
or
loopne
mov
call
pusha
call
stc
(bad)
repz
sbb
pusha
add
sub
or
bound
pop
mov
pop
pop
pop
mov
xchg
sti
dec
add
mov
mov
fisub
or
xchg
lahf
xchg
int3
mov
lods
inc
xchg
pushf
ror
sub
sti
outs
mov
push
loop
pop
and
retf
outs
(bad)
inc
mov
sahf
sub
cmp
fcmovbe
int3
mov
pop
sub
mov
push
movs
cmc
jb
mov
enter
xchg
mov
ja
mov
and
mov
test
sub
test
pop
loope
pop
and
add
or
pop
mov
arpl
and
test
ret
and
call
ret
test
pop
mov
push
mov
into
cmp
data16
xor
fdivp
cmp
out
push
dec
pop
stos
lahf
add
lahf
aaa
jno
mov
lea
or
mov
ds
sub
mov
dec
xchg
mov
outs
movs
jne
int3
mov
leave
cld
popa
dec
add
cmc
mov
into
mov
xor
cli
cmp
fild
mov
lea
adc
je
push
addr16
mov
push
mov
clc
jbe
inc
mov
call
test
or
xor
(bad)
push
sysexit
lahf
mov
imul
pop
sar
xchg
pop
shr
and
movs
sub
cmp
addr16
mov
mov
jbe
fidiv
fnsave
ins
push
pop
push
stos
jb
fimul
push
pop
stos
adc
adc
mov
lds
inc
mov
lods
dec
sbb
pop
and
jo
daa
(bad)
ins
(bad)
xchg
rcr
push
jo
push
mov
outs
xchg
stc
pop
and
mov
hlt
ret
(bad)
pop
mov
aam
jno
(bad)
into
aaa
jmp
mov
cwde
or
and
ins
ins
mov
in
push
and
shl
xchg
sti
les
xor
pop
or
xchg
sub
mov
xchg
mov
jle
xlat
add
sub
out
mov
call
mov
scas
inc
adc
into
mov
xchg
sub
repz
add
dec
add
leave
sub
jle
inc
daa
stc
and
fcom
dec
xlat
push
mov
jns
jmp
fdivr
or
ins
mov
shl
add
je
dec
fisubr
sahf
in
mov
repnz
fcomp
dec
inc
pop
dec
js
ret
jge
fsubr
mov
cmp
(bad)
loopne
pop
cmc
gs
or
frstor
out
pusha
fld
pop
pop
mov
jb
cmps
jmp
or
aad
cmp
push
jnp
inc
mov
add
mov
xor
lods
ds
fnsetpm(287
stc
icebp
dec
mov
jecxz
shl
add
shr
sbb
xor
mov
test
cmp
ins
sbb
xor
pop
or
movs
mov
scas
je
imul
sbb
dec
sub
mov
fs
lds
jp
jle
adc
rcr
mov
in
add
rcr
imul
xchg
mov
inc
cmp
fild
cdq
in
rcl
push
jmp
jle
adc
shl
or
cmp
cmp
(bad)
call
ins
sub
clc
std
dec
(bad)
leave
fdiv
div
push
mov
mov
mov
aaa
jg
ds
mov
cld
sub
inc
pop
push
jg
sub
es
aas
mov
add
pop
lods
mov
sub
push
push
dec
loop
cmp
inc
loope
mov
mov
xchg
adc
mov
lea
movs
out
cs
sti
mov
rol
or
push
test
loope
xor
cwde
cmp
call
ss
and
jb
mov
pop
xor
push
mov
test
movs
jb
in
sbb
jecxz
shr
mov
stos
pushf
inc
repz
push
or
cmp
ins
das
adc
pop
out
mov
int3
fdivr
pop
in
mov
or
icebp
jle
test
(bad)
scas
dec
cld
cmp
and
pusha
xchg
dec
fbstp
jno
xchg
pop
sub
lods
cmps
fldenv
xor
das
inc
mov
pop
push
jbe
pop
pop
rcl
mov
or
xchg
out
pop
lea
cmp
imul
ret
jmp
jb
adc
cwde
dec
int3
popa
frstor
inc
cli
add
add
pushf
repz
mov
push
cmp
xchg
jmp
and
mov
je
out
push
mov
sub
mov
mov
inc
xor
or
push
cmc
mov
jns
(bad)
das
xchg
sbb
sbb
call
xor
sbb
in
iret
mov
cwde
stc
test
xor
lds
out
popf
enter
jae
or
lds
aaa
cmp
or
hlt
cmp
es
pop
xchg
adc
sbb
aam
or
loopne
xlat
out
or
popf
cli
mov
bound
mov
mov
lock
loopne
xchg
xor
mov
ror
lea
fdiv
loopne
add
jmp
or
sbb
aad
push
jno
and
xchg
pop
add
cmps
(bad)
mov
out
xor
push
xchg
sbb
inc
cmp
and
sub
mov
icebp
pusha
retf
mov
mov
fcmovbe
std
aaa
push
je
outs
sub
or
sub
jno
pop
or
and
cwde
and
cmp
cmp
xchg
lahf
loop
jge
push
aaa
loopne
lea
sbb
mov
les
jmp
sub
or
lea
xchg
js
cmp
lds
push
mov
cmc
push
pop
sahf
cmc
js
xlat
hlt
jno
pop
add
aaa
retf
(bad)
aad
cmp
cli
jmp
jge
mov
test
mov
jl
das
xor
(bad)
add
and
pusha
xor
lds
add
popf
jmp
call
ss
push
les
push
add
mov
(bad)
dec
xlat
adc
icebp
outs
popa
es
stc
sbb
ins
scas
push
ficomp
shr
sbb
fyl2x
sar
sbb
aas
(bad)
js
lock
stc
or
cwde
sub
in
mov
push
fdivr
repz
mov
ficom
hlt
daa
(bad)
mov
loopne
sbb
inc
push
mov
jmp
cmp
addr16
add
cmp
or
push
aaa
outs
adc
cs
(bad)
sbb
pop
(bad)
std
into
xchg
dec
add
sub
lods
and
(bad)
(bad)
in
cs
and
push
dec
lods
jno
in
retf
imul
cmp
popa
push
outs
mov
pop
icebp
fst
retf
mov
cmp
imul
ins
(bad)
fndisi(8087
and
in
icebp
sbb
cld
ret
(bad)
repnz
xchg
sbb
popa
loopne
adc
pop
(bad)
cld
stos
(bad)
(bad)
loop
hlt
movs
outs
adc
add
fstp
lds
sub
inc
jg
dec
xor
and
inc
and
and
stos
jne
xor
clc
add
add
and
cmp
aas
jns
test
lds
xor
mov
xchg
xlat
or
mov
imul
inc
stos
cmp
out
ins
pop
jae
mov
xor
push
mov
jmp
sub
push
inc
sub
pushf
add
mov
lods
std
(bad)
fnstsw
mov
int3
inc
sbb
(bad)
or
mov
sbb
sbb
pop
and
adc
scas
cmp
stos
or
sahf
cdq
cmp
mov
sahf
stos
jmp
and
inc
cs
inc
inc
jnp
mov
sahf
(bad)
outs
xor
push
sub
fwait
ds
(bad)
out
arpl
pop
inc
neg
add
outs
add
mov
jmp
nop
mov
xchg
dec
fwait
cmp
xor
enter
lods
fild
fistp
push
cmp
popf
ja
addr16
mov
pusha
call
repnz
retf
xor
xor
sahf
fiadd
repz
cmps
jge
loop
push
mov
aas
add
pop
sub
popa
into
int3
ror
test
clc
mov
mov
(bad)
jno
arpl
dec
test
aaa
fcomip
call
outs
outs
retf
sbb
xchg
mov
pushf
jno
push
jb
sub
and
stos
cmps
data16
mov
sub
cmp
push
xchg
movs
sbb
cmp
loopne
mov
aad
or
lods
cdq
fwait
dec
adc
loop
or
pop
in
add
xchg
pushf
add
retf
inc
mov
inc
pop
push
imul
movs
imul
aam
cmp
fdivr
adc
imul
mov
mov
push
adc
bound
jbe
xor
mov
imul
dec
push
or
bt
mov
fcomp
cmp
jge
adc
fsubp
jmp
fwait
repnz
or
cmp
pushf
xchg
inc
mov
dec
hlt
mov
rcr
mov
popf
fnstenv
out
push
or
fs
adc
gs
mov
sahf
mov
jb
cs
cld
or
sub
rcr
add
jmp
(bad)
sbb
movs
xchg
push
pop
mov
ja
pop
jbe
scas
mov
xor
movs
xor
or
(bad)
sub
jns
sbb
rcl
movs
int3
gs
pop
mov
nop
push
pop
xchg
test
adc
sbb
(bad)
ss
fdivr
and
repnz
mov
rol
sub
push
jmp
xlat
dec
fs
cli
adc
lahf
loope
movs
(bad)
fldenv
xor
xchg
mov
jmp
xor
sbb
sub
dec
cld
in
sub
xor
push
mov
pusha
xchg
ret
das
sub
add
mov
jo
aas
sub
add
jecxz
or
lods
int
xchg
ret
sbb
mov
add
ins
(bad)
retf
test
gs
add
mov
push
(bad)
int
out
add
ins
bound
xor
hlt
fidiv
in
gs
retf
cmp
mov
inc
dec
imul
cmp
addr16
add
mov
cmc
in
ins
ds
iret
outs
dec
jae
jge
imul
fsubrp
outs
adc
popf
sub
lds
inc
push
xchg
jne
cmp
and
push
or
inc
data16
adc
sub
mov
ins
jle
push
xchg
sbb
sub
sbb
sbb
sub
in
mov
sbb
call
adc
fist
call
dec
adc
(bad)
mov
and
aaa
lock
out
aas
repz
imul
mov
ja
xchg
sub
inc
stc
sbb
inc
out
jbe
xchg
test
mov
retf
jle
pop
mov
xchg
shl
hlt
sub
push
push
and
call
leave
lods
aam
mov
add
out
xor
inc
xor
add
mov
xor
jle
mov
(bad)
sbb
(bad)
dec
ss
pop
jmp
adc
and
add
popf
loopne
add
dec
pushf
es
inc
xchg
fstp
sbb
push
fwait
call
sbb
in
icebp
cs
aam
jne
sub
sub
mov
ret
test
mov
outs
adc
inc
clc
fnstsw
in
iret
ret
cmps
out
sub
xchg
adc
mov
shr
add
ds
(bad)
sub
hlt
dec
inc
movs
pusha
pop
jb
xchg
mov
jns
rcr
adc
and
arpl
nop
popf
jmp
pop
repnz
(bad)
jecxz
fsubr
or
gs
in
aas
out
aas
in
(bad)
mov
mov
stos
inc
xchg
cmp
adc
test
dec
jnp
cmp
stos
xchg
jnp
mov
fild
jbe
jmp
mov
xchg
lods
(bad)
jl
cwde
inc
xchg
mov
hlt
add
mov
cmp
jae
add
mov
or
loope
mov
xor
daa
mov
and
js
sub
cdq
repz
add
sub
gs
xor
sub
loop
dec
dec
inc
das
gs
push
int3
repz
stos
stc
fnstenv
sbb
mov
in
or
dec
or
xchg
in
test
aas
jecxz
mov
mov
in
pop
push
(bad)
sar
dec
adc
into
dec
push
int
not
sbb
sbb
adc
xor
out
inc
add
xchg
lahf
rcr
clc
in
aam
sbb
(bad)
push
inc
(bad)
call
push
cld
mov
add
inc
popf
pop
xlat
leave
inc
jp
jmp
movs
in
gs
adc
popf
jecxz
mov
dec
ret
sub
int3
int3
je
push
shl
icebp
mov
jmp
into
push
pop
and
push
(bad)
movs
jno
mov
data16
cmp
test
in
adc
(bad)
pop
or
bound
xchg
adc
inc
inc
std
pop
sar
xchg
fmul
and
cwde
rol
js
or
cs
fdivr
lods
fidivr
push
push
std
sbb
mov
and
add
test
jl
inc
cmp
cdq
out
clc
mov
inc
jne
add
and
jg
mov
pop
jo
movs
pop
pop
xchg
ret
ins
retf
(bad)
bnd
(bad)
dec
mov
xor
cmp
add
lea
inc
mov
das
jp
inc
sti
sbb
fs
lds
push
pop
add
movs
jecxz
cmp
aam
pushf
fwait
inc
rcl
in
shl
popa
mov
call
arpl
inc
push
add
xor
or
cmps
call
dec
xor
outs
xchg
adc
xor
sbb
les
mov
mov
push
dec
inc
mov
push
shr
dec
inc
jnp
out
hlt
xchg
das
push
add
push
js
lea
inc
aaa
cmp
popa
push
and
push
ss
xor
mov
sbb
mov
mov
sbb
xchg
and
pop
inc
cmp
or
loope
lods
push
gs
fwait
hlt
ins
popa
pop
cwde
pusha
cwde
pop
inc
mov
adc
aad
fisubr
adc
inc
adc
ret
sbb
rol
out
clc
adc
fst
test
jno
lahf
add
cdq
ja
xor
mov
jne
jmp
dec
or
xor
lods
enter
cmp
push
mov
mov
pop
xchg
mov
inc
ja
int3
in
cwde
sahf
cmp
ins
xchg
cdq
stos
cmp
mov
xor
ins
mov
sub
sub
js
jmp
or
loop
in
aam
dec
inc
ja
sar
dec
das
jl
xor
add
push
ss
cli
add
inc
fisub
or
pop
es
stc
data16
inc
pop
or
fisubr
cmp
add
xor
mov
jg
imul
mov
cmc
fist
das
aas
je
stc
lahf
push
gs
or
nop
out
ret
(bad)
aad
retf
iret
sbb
xchg
cwde
ret
data16
stos
jg
imul
jmp
cs
scas
adc
and
xchg
pop
dec
sbb
and
in
mov
xchg
cwde
add
sbb
sbb
dec
add
xor
add
outs
push
xlat
cwde
or
push
icebp
ds
dec
inc
mov
je
adc
adc
cmp
int3
std
sub
std
std
std
add
jae
and
out
(bad)
jbe
pop
lods
xchg
(bad)
jbe
or
mov
lods
jae
outs
push
jne
scas
scas
loope
pushf
fwait
repz
lea
aas
iret
mov
int
push
cmp
ins
sbb
push
aaa
out
test
or
cs
sbb
mov
dec
imul
idiv
jne
inc
imul
lea
mov
outs
push
mov
adc
loop
call
pop
cli
sahf
inc
cmps
add
lea
sar
jg
iret
pop
ds
out
mov
daa
ret
pop
out
popa
fwait
sbb
daa
jge
xor
es
es
mov
sub
xchg
sar
mov
lock
div
call
dec
sti
cwde
mov
xor
and
cmp
mov
push
std
jo
pop
cdq
cs
inc
clc
inc
call
(bad)
test
xchg
mov
loopne
cmc
push
cli
nop
inc
jmp
leave
inc
xchg
pushf
sbb
xor
mov
fidivr
mov
retf
pop
ror
or
movs
cmp
sub
or
dec
or
je
push
cdq
cdq
pop
mov
mov
(bad)
pop
pop
push
dec
and
dec
js
sbb
jle
add
xchg
mov
push
jl
out
jle
je
fdiv
(bad)
pop
mov
ins
adc
test
aam
mov
xor
fs
inc
jns
push
or
xchg
sub
mov
stc
jg
add
jbe
andnps
jmp
(bad)
loopne
sub
imul
cmps
mov
iret
ret
jp
add
cmp
mov
cli
inc
jle
inc
cli
es
jnp
out
push
add
clc
dec
hlt
aam
shl
inc
test
into
mov
aad
mov
or
pop
fs
xor
pop
pop
(bad)
mov
dec
mov
sar
mov
mov
xor
pop
push
xor
xlat
adc
stc
pop
retf
repz
cmp
or
in
(bad)
icebp
mov
int3
(bad)
mov
mov
jl
movs
test
retf
or
adc
fidivr
inc
scas
mov
lahf
push
mov
sti
mov
xor
arpl
addr16
xor
xchg
jp
jae
(bad)
adc
mov
jne
mov
pop
inc
sbb
push
push
fwait
int3
dec
ret
std
scas
pop
or
out
shl
or
sbb
inc
and
loopne
cdq
and
movs
inc
nop
shr
loopne
leave
loopne
daa
retf
mov
out
test
imul
or
xor
stos
push
fldenv
into
ret
retf
div
xchg
pop
rcl
fstp
jae
mov
out
ret
or
addr16
sahf
jle
xor
sub
dec
mov
fistp
loop
adc
adc
loop
and
cmp
pop
(bad)
shl
cmps
les
add
push
mov
add
cli
mov
into
sti
jmp
jmp
test
test
inc
mov
enter
sub
retf
or
cwde
pushf
pop
mov
nop
sub
push
sahf
daa
adc
pop
cwde
fwait
push
stos
adc
ret
sub
sbb
dec
es
adc
and
push
xor
adc
jge
cmp
punpcklbw
ins
dec
xor
ficom
cmp
dec
aad
xor
cmc
cmps
dec
lahf
call
and
leave
repnz
std
int
fist
sbb
cwde
add
jecxz
es
sbb
clc
call
push
cld
sahf
(bad)
xchg
mov
fst
or
sub
es
jns
sub
cmps
hlt
mov
adc
cmps
stos
jle
cmp
jo
lds
(bad)
cmp
add
jae
inc
lahf
xor
inc
sbb
or
(bad)
std
loope
mov
gs
in
dec
clc
sar
add
jmp
lods
pop
mov
mov
cwde
mov
add
fld
sub
je
sahf
cmp
inc
into
(bad)
dec
and
rcr
xchg
pop
xchg
mov
jg
cmc
mov
pop
push
add
add
sbb
add
ja
leave
dec
sub
pop
dec
or
jmp
sub
xor
into
mov
aam
ror
add
jle
(bad)
lods
into
inc
pop
sbb
sub
movs
or
data16
dec
or
fild
push
push
cmps
inc
jmp
or
arpl
ret
and
cdq
rcr
loope
fsubr
pop
cmc
sub
jge
fst
xchg
aad
pop
inc
inc
push
fidiv
popf
int3
pop
jae
add
mov
xchg
aaa
add
adc
mov
cmp
pushf
sub
cld
sahf
hlt
xchg
(bad)
or
fldcw
and
xchg
jmp
push
sub
mov
out
pop
jns
test
fsubrp
je
ror
mov
shl
aad
inc
push
retf
neg
hlt
push
sub
es
aam
add
xchg
jo
out
pop
gs
adc
jge
test
ret
push
cli
jnp
or
stos
sbb
jbe
lods
leave
popf
cmp
loopne
cmp
inc
push
push
mov
mov
(bad)
pop
les
mov
sbb
icebp
cmp
loope
xor
xchg
mov
or
in
scas
push
lods
jne
jmp
ror
push
ss
int3
inc
inc
sbb
es
iret
retf
les
clc
push
xor
push
inc
rcl
and
mov
xor
mov
and
cdq
cmp
push
or
cmps
cs
daa
dec
int3
push
push
xchg
mov
out
scas
xchg
retf
and
sub
push
jl
pop
or
and
ret
loope
inc
sub
push
addr16
push
aas
popf
inc
sub
sbb
push
aaa
fild
pop
test
dec
add
test
xor
mov
retf
data16
dec
pop
dec
push
xchg
mov
mov
ins
mov
jp
sub
stos
xchg
and
das
fld
bt
xchg
shl
xor
enter
adc
push
jmp
dec
mov
arpl
cmp
mov
inc
cmp
icebp
aas
xor
inc
dec
fs
xchg
sbb
pop
mov
xchg
stos
mov
sub
test
dec
pushf
or
int
inc
and
mov
add
push
rcl
out
int
mov
je
or
adc
pushf
je
push
mov
scas
pop
ror
xchg
cmps
push
fistp
push
loop
xchg
cld
sub
test
pop
jecxz
cwde
push
sub
and
movs
and
fwait
cmp
jno
(bad)
cmp
xlat
fcmovne
xor
mov
ja
jmp
fidivr
cmp
rol
sub
scas
push
xchg
fcom
cs
rcr
adc
inc
fs
sar
repz
mov
fucomi
js
mov
in
fldcw
jne
jge
lock
nop
jbe
inc
mov
fwait
(bad)
xor
mov
out
jno
in
fnstenv
outs
push
repz
enter
cmp
sub
fadd
cmp
cmc
fld
dec
dec
mov
pop
jmp
cmp
mov
dec
nop
ds
dec
mov
add
test
retf
add
mov
xchg
mov
cwde
imul
pop
pushf
inc
pop
dec
and
cwde
stos
je
xor
loop
sahf
enter
leave
test
nop
(bad)
push
pop
mov
outs
in
test
xor
dec
pushf
xchg
lods
fild
outs
aad
push
mov
lock
test
dec
lds
mov
inc
mov
sbb
xchg
pop
dec
aas
mov
and
mov
ss
xor
jnp
test
out
xchg
mov
mov
mov
adc
jae
cld
cli
xor
add
dec
stc
mov
cdq
or
cmps
je
aam
retf
outs
mov
xchg
xchg
pop
test
pop
mov
pusha
(bad)
repz
or
or
inc
push
sub
fs
mov
jmp
xchg
pop
xchg
gs
(bad)
fldenv
mov
add
sahf
pop
fisub
sub
sub
mov
(bad)
and
nop
jne
xchg
ds
xor
movs
xchg
inc
pop
pop
push
in
sbb
loop
gs
jo
mov
pop
add
lods
iret
mov
scas
shl
mov
mov
xor
or
mov
loop
test
test
or
or
mov
icebp
lds
lock
adc
jno
cmovno
dec
ja
pusha
test
or
or
fist
inc
jb
or
(bad)
cdq
and
inc
in
sbb
(bad)
in
jb
int3
idiv
mov
push
jnp
ss
mov
leave
mov
sbb
mov
ss
dec
add
and
in
sbb
aam
shl
popf
jnp
adc
out
xor
retf
sti
mov
xchg
mov
popa
ins
jo
push
xchg
push
int3
sub
ds
cmps
sbb
jne
cmp
cli
cdq
js
or
sub
ds
imul
icebp
mov
adc
pop
sub
sbb
dec
mov
cmp
sub
aas
mov
in
sub
inc
jecxz
inc
out
jne
dec
pusha
popf
add
frstor
scas
jmp
push
mov
das
pop
rol
or
cwde
and
jl
in
pop
dec
js
test
shl
imul
lods
addr16
jne
inc
sbb
dec
fucom
sbb
(bad)
ret
cmp
add
dec
pop
bound
pushf
(bad)
mov
out
div
retf
mov
push
loope
sub
push
stos
lods
mov
nop
leave
adc
in
outs
out
ret
test
adc
popa
pop
cdq
ror
(bad)
jg
push
xchg
(bad)
je
cli
adc
dec
mov
jmp
into
iret
xor
shl
inc
pop
cdq
pop
mov
xor
aaa
cmp
dec
xchg
test
jae
(bad)
mov
fild
imul
fisubr
shl
ins
cs
push
aas
mov
inc
push
mov
cmp
or
xchg
nop
or
test
lock
mov
mov
sub
dec
test
stos
xor
jmp
mov
mov
inc
hlt
pusha
mov
sti
push
dec
ins
add
or
mov
cld
bound
(bad)
ror
xor
jbe
cmps
jge
push
ds
sbb
sub
pop
jae
inc
paddusw
xchg
dec
mov
dec
(bad)
and
cmp
inc
iret
or
(bad)
dec
cld
int3
stc
fldenv
shr
xor
jecxz
mov
xlat
fsubr
adc
stos
add
or
push
pusha
faddp
sbb
pop
retf
push
sbb
mov
(bad)
ins
jns
icebp
cwde
push
dec
mov
sbb
(bad)
fadd
inc
aad
ret
repz
jg
in
inc
pop
enter
psllw
dec
prefetchw
or
push
mov
mov
jge
in
ret
sbb
xchg
push
scas
sub
ins
dec
in
push
fmul
sub
ret
inc
xchg
inc
mov
lods
push
xor
sahf
dec
push
adc
lahf
xchg
inc
popa
cli
mov
xchg
jp
ret
push
test
ja
repz
fstp
jp
cs
mov
ret
jge
dec
(bad)
std
loope
iret
sub
xchg
sub
fcomp
push
xor
push
cmp
pusha
mov
jge
xlat
cmp
sahf
cmps
enter
loope
pop
enter
rol
jge
add
cmp
cld
scas
inc
pop
jns
mov
and
cmp
mov
(bad)
fbstp
retf
nop
adc
push
sahf
psubsb
in
push
sbb
xchg
inc
xchg
dec
pop
mov
jecxz
sti
adc
mov
cmps
adc
pop
(bad)
jle
jae
fistp
adc
sub
mov
inc
sub
xor
mov
jb
daa
inc
pop
popa
add
jmp
sub
sub
adc
lods
int
(bad)
mul
mov
dec
dec
inc
ins
lea
adc
aaa
adc
xlat
in
adc
jmp
in
add
sub
mov
mov
or
bound
inc
sahf
mov
(bad)
mov
out
jg
jns
adc
sbb
or
dec
pop
test
xchg
fadd
addps
xor
jmp
repz
fcomp
call
xchg
xchg
inc
fnstsw
cmp
add
int3
shl
jbe
sbb
(bad)
pop
out
mov
iret
mov
popa
leave
mov
subps
and
or
xchg
outs
fucomi
out
cmp
adc
ficom
outs
xchg
push
aad
cmp
push
jmp
jb
mov
stc
sar
sub
sbb
adc
mov
jle
push
jo
mov
pop
lds
repnz
sti
xor
xchg
xchg
neg
mov
pop
xchg
imul
das
jecxz
(bad)
in
fistp
arpl
add
ror
or
xor
test
dec
neg
or
mul
sti
fild
sub
adc
cmp
lock
ret
or
aas
mov
repnz
sub
call
cs
pop
dec
push
into
test
sbb
hlt
or
mov
xor
add
ins
or
cld
mov
aad
push
jne
cli
xchg
xchg
sub
in
call
inc
lods
data16
gs
pop
mov
mov
or
rcr
jb
mov
std
xchg
jno
idiv
scas
std
pop
call
in
movs
push
jmp
iret
inc
xchg
hlt
lock
cmp
jg
sbb
call
sbb
fld
cmp
adc
ret
jne
cli
stos
pop
cs
mov
std
dec
push
inc
pop
sub
fsub
call
sbb
repz
leave
pop
sub
cmp
adc
inc
cli
push
cmp
fwait
adc
xor
mov
pop
ss
mov
es
sbb
cs
push
icebp
inc
scas
push
hlt
cmp
jno
je
jbe
xor
sbb
inc
(bad)
iret
add
mov
data16
les
mov
xchg
icebp
fs
pop
mov
fdiv
test
xchg
push
adc
jecxz
cld
lds
out
pop
pushf
add
mov
bound
mov
push
fcmovb
gs
ins
ret
push
aad
repz
shl
shr
add
popa
xor
mov
jbe
jo
and
xor
xchg
fmul
rol
adc
imul
gs
aaa
mov
mov
inc
sti
mov
adc
xor
push
push
cmp
fnstcw
sbb
push
sub
mov
cmc
aaa
test
pushfw
mov
adc
inc
mov
jecxz
sar
sub
mov
adc
xor
test
nop
cmp
in
retf
mov
push
push
mov
jecxz
cld
shl
loopne
pop
jmp
pop
sbb
cmp
push
add
xor
jp
(bad)
lahf
aam
cld
mov
sub
and
(bad)
loope
sahf
jmp
idiv
ds
jo
in
fidiv
pop
out
daa
in
jns
push
add
(bad)
xlat
(bad)
(bad)
out
ins
jo
inc
into
mov
xchg
in
popa
nop
dec
jl
and
cmp
mov
pop
(bad)
test
mov
jmp
cmp
xchg
rcl
or
inc
adc
push
push
jecxz
movs
mov
(bad)
call
xchg
inc
out
mov
scas
dec
fsubr
cmc
mov
xor
aam
ja
add
xchg
inc
dec
in
and
xchg
push
lds
or
jmp
adc
push
loop
shl
lahf
rol
adc
scas
dec
xchg
pop
adc
lock
dec
lods
ret
jmp
push
adc
(bad)
in
xchg
mul
or
fucomi
int3
ss
add
enter
jmp
mov
dec
push
popa
ja
sti
mov
jl
pop
js
test
cmp
pop
es
movs
idiv
fidiv
hlt
jo
ja
push
nop
enter
add
mov
popf
lea
test
sub
test
cmp
mov
adc
cwde
aam
test
adc
cmps
dec
lods
in
pop
mov
sar
mov
xor
jne
div
and
lods
xor
imul
ins
adc
dec
xchg
xchg
inc
dec
dec
out
fld
pop
int3
das
xchg
(bad)
sbb
sbb
jecxz
stos
pop
lock
sbb
test
pop
add
and
fwait
sbb
loop
adc
push
stos
or
rcr
xchg
xlat
pop
in
adc
pushf
jmp
in
fdivr
(bad)
mov
push
pop
jl
pop
test
shr
pop
jae
and
sub
mov
cli
ror
lea
jle
mov
jecxz
cmp
mov
jo
daa
jg
in
dec
out
cmp
jge
ins
ror
xchg
push
sub
scas
test
idiv
retf
std
cwde
rcr
movs
movs
sbb
cmp
pusha
mov
pop
inc
xchg
mov
out
jnp
or
ins
mul
push
pop
lods
push
inc
stc
dec
bound
jb
cmps
(bad)
pop
add
add
bound
shl
and
cmp
xchg
and
jno
mov
jb
adc
add
lods
(bad)
or
add
dec
add
or
xor
sub
adc
in
mov
mov
adc
aaa
ins
add
push
test
mov
dec
addr16
inc
push
jnp
push
mov
retf
test
sub
xchg
arpl
in
pop
nop
(bad)
aad
pop
nop
fwait
scas
dec
xor
nop
xor
push
and
mov
mov
je
fucom
iret
loope
es
mov
outs
cmp
pop
out
mov
(bad)
rcl
imul
mov
mov
cli
mov
adc
(bad)
cmp
mov
jmp
loope
ror
and
ret
fisubr
add
leave
repz
scas
addr16
mov
jo
add
sbb
out
adc
ja
(bad)
or
xor
mov
psrld
add
mov
out
xor
xchg
adc
out
pop
cmp
cmc
outs
test
adc
outs
or
pusha
dec
pop
icebp
or
sbb
adc
mov
mov
mov
fimul
sbb
cdq
inc
pop
dec
adc
cmp
test
pop
mov
push
call
pop
outs
stc
xchg
in
adc
imul
pusha
xchg
stos
mov
jne
mov
in
sub
push
test
cmp
outs
xchg
cdq
inc
sub
inc
xchg
pop
sub
nop
mov
inc
or
repnz
rol
cmp
and
enter
not
add
test
jle
loope
dec
dec
imul
loope
stc
xchg
mov
dec
add
mov
push
mov
rol
jp
inc
pushf
fcomp
mov
cbw
(bad)
pop
add
rcr
mov
out
push
vphaddwq
mov
outs
add
dec
sbb
movs
add
fisttp
cmps
pop
lods
mov
xor
cmp
and
jecxz
xchg
jl
call
ficom
test
dec
jl
dec
add
sbb
test
push
mov
or
and
xchg
pop
test
scas
shl
jp
imul
fwait
pop
in
or
mov
and
xchg
mov
movs
lock
mov
mov
scas
idiv
add
jmp
pop
add
das
mov
test
inc
bound
popa
xlat
(bad)
repnz
imul
mov
(bad)
outs
add
outs
aaa
cmps
ret
sub
sti
aas
daa
sub
ret
pusha
adc
fwait
jbe
mov
je
adc
or
dec
adc
popf
in
pop
loop
jmp
sbb
jecxz
sub
mov
push
add
mov
pushf
or
jle
mov
add
jecxz
cdq
data16
es
add
(bad)
pop
xchg
(bad)
loopne
cdq
and
push
xchg
mov
push
(bad)
sahf
call
test
fs
xor
sbb
xor
aam
add
std
inc
xor
not
xlat
push
into
dec
jmp
ror
sub
(bad)
mov
mov
jmp
in
cmp
pop
mov
lahf
ret
sub
sub
fwait
sbb
inc
fimul
xchg
cmp
cmp
clc
sar
mov
adc
jno
add
xor
sbb
dec
in
(bad)
sub
jns
cdq
mov
mov
jae
mov
push
js
xor
or
in
mov
lock
lods
push
scas
xor
aaa
inc
ja
push
push
or
lds
nop
mov
mov
adc
adc
inc
stos
out
popf
iret
dec
xchg
loope
in
xor
int
mov
push
ss
fwait
sub
fst
xor
sub
ret
inc
int
push
aam
jle
(bad)
push
mov
mov
jmp
in
test
or
cs
push
mov
adc
jge
in
cmps
int3
out
adc
call
mov
ror
(bad)
push
gs
dec
pushf
cld
dec
shl
mov
movd
jmp
cmp
and
scas
mov
mov
dec
and
add
xchg
pop
sbb
xchg
dec
ds
adc
push
xchg
or
stc
sub
inc
fld
imul
leave
mov
je
xchg
push
adc
sti
inc
cmp
or
cwde
(bad)
mov
pop
jo
je
mov
test
js
xchg
jle
es
das
sbb
pop
cmc
enter
es
test
jl
and
loop
(bad)
clc
es
mov
or
mov
inc
adc
sbb
xor
jl
and
int3
sub
or
or
sub
or
lods
mov
push
inc
inc
and
inc
pop
lds
(bad)
pop
push
push
in
add
mov
lock
stos
daa
fadd
and
pop
popa
(bad)
(bad)
movs
das
mov
iret
dec
push
aaa
pop
xchg
mov
xchg
cmp
(bad)
xor
mov
fcomp
xchg
test
mov
shl
aam
jp
pop
cmp
ficom
mov
mov
push
ret
pusha
xor
fmul
retf
out
ins
je
jno
sahf
dec
stc
mov
xchg
cmp
je
pop
(bad)
jmp
imul
mov
cdq
jmp
pop
out
push
sbb
call
test
xlat
adc
and
rcr
inc
sub
imul
and
push
and
dec
shl
dec
test
out
jo
sbb
ret
dec
outs
pop
aas
mov
fist
cs
imul
cmc
or
rol
into
mov
jmp
adc
pop
jmp
and
adc
xchg
push
or
mov
cmps
cli
scas
mov
push
scas
call
push
iret
xchg
test
scas
jmp
cdq
addr16
pop
xor
jnp
push
gs
mov
push
enter
push
cmp
(bad)
shl
sub
xchg
popf
aad
cmps
lahf
adc
std
popf
ret
xchg
aas
aam
push
dec
xor
pop
leave
adc
loope
push
jle
xchg
test
cmp
std
sub
mov
and
pusha
push
fucomip
lods
push
sub
dec
jl
adc
mov
dec
dec
mov
test
aaa
mov
rep
xor
popa
outs
in
jmp
jbe
sbb
cmp
add
rcr
pop
lahf
mov
dec
adc
bound
cdq
aad
out
nop
pop
pusha
lea
aaa
xchg
test
out
pop
xor
mov
or
fdivr
(bad)
test
in
mov
imul
xchg
jl
pop
xchg
cld
add
fmul
pop
push
jb
fucomi
adc
arpl
sbb
cmp
cli
adc
mov
jg
lahf
or
inc
jg
push
jle
in
data16
(bad)
adc
adc
clc
dec
sub
stos
pop
loope
jge
imul
add
cmp
mov
movs
and
sub
mov
cmp
jmp
mov
adc
sbb
lea
out
lds
cmp
out
mov
lahf
push
sub
sbb
pop
fcmovbe
and
jmp
adc
dec
lods
sub
imul
jle
inc
mov
aad
inc
loopne
mov
mov
inc
(bad)
rol
imul
retf
cmp
pop
adc
lahf
mov
loopne
out
dec
xor
xlat
inc
mov
jle
ins
call
mov
cld
mov
mov
sbb
push
push
sbb
call
arpl
aam
mov
loop
push
enter
cmc
dec
adc
retf
pop
inc
sbb
pop
call
cdq
aas
pop
jne
test
mov
sbb
xchg
hlt
imul
sub
popf
fild
mov
cwde
repz
lods
adc
cwde
fldenv
and
adc
repnz
sbb
inc
ret
and
jne
stos
xchg
cwde
repz
aas
out
xchg
xor
jb
jle
imul
ror
aaa
xor
leave
fidivr
inc
ds
jo
mov
jecxz
xchg
push
push
mul
stc
mov
mov
inc
dec
push
cmps
inc
add
cmp
pop
mov
or
pop
daa
test
ins
pop
sbb
mov
movs
push
mov
fisub
lods
retf
mov
xchg
jnp
pushf
dec
inc
jecxz
addr16
sub
stos
sbb
loope
cmp
inc
push
mov
inc
adc
or
dec
(bad)
jmp
js
mov
dec
and
add
dec
cs
int
scas
jne
aaa
xlat
lahf
aaa
shl
enter
ret
xchg
iret
ss
cmp
fist
inc
dec
ud1
test
cmp
adc
push
or
outs
push
pop
call
push
gs
jb
stos
or
mov
xchg
pop
es
push
cmps
dec
les
pop
jb
cli
rol
das
mov
int3
inc
pop
stos
js
std
clc
pop
inc
int
std
std
xchg
xchg
test
lods
cmp
lds
jle
in
daa
retf
loope
cmp
cmp
test
add
mov
cmc
adc
inc
arpl
inc
inc
sbb
nop
push
dec
push
xchg
add
and
ret
loope
loopne
adc
cld
sub
je
dec
dec
pushf
mov
inc
xor
in
sbb
xor
pop
jge
adc
cld
les
inc
mov
sbb
pop
into
fs
cld
jno
mov
pop
clc
fwait
mov
fucom
popf
popf
rol
dec
adc
or
sub
or
mov
push
lods
add
sub
cmps
loope
dec
cdq
aas
dec
push
std
adc
adc
in
out
fcomip
jge
push
scas
inc
addr16
stos
dec
ret
and
lods
xor
push
add
cs
call
sar
and
test
not
loopne
(bad)
pop
cmps
neg
test
movs
(bad)
das
inc
maskmovq
div
das
fwait
ja
push
fisubr
int
push
fwait
dec
xor
xchg
jl
pop
int
jns
out
push
clc
in
shl
scas
xchg
icebp
rol
ins
mov
sub
in
jae
popf
push
or
lods
movs
inc
inc
cmp
iret
fs
push
int3
(bad)
js
inc
inc
int3
repz
jmp
jb
mov
push
stos
loop
xchg
ins
lods
gs
movlps
or
dec
lods
pusha
retf
jecxz
xor
sub
mov
in
cwde
gs
xor
jmp
dec
sub
mov
jae
dec
xchg
or
xchg
cs
sti
call
rcl
in
jne
pop
mov
scas
cwde
mov
dec
fnstcw
cmps
mov
add
outs
sub
out
in
dec
sar
(bad)
out
adc
jge
inc
outs
xchg
xchg
cld
mov
cmp
mov
out
aam
cwde
inc
aas
cmp
pop
add
xor
leave
jns
nop
add
inc
sub
jl
jl
js
lahf
std
add
movs
or
push
je
shr
push
mov
pop
or
or
dec
in
lods
sub
fidiv
add
aad
sub
sahf
rcr
pop
mov
scas
xchg
jmp
sub
mov
fcomi
mov
and
hlt
rol
(bad)
dec
bnd
jl
movs
rcr
dec
bound
cli
popa
add
repnz
sub
push
addr16
and
inc
pop
jae
add
cwde
das
pushf
into
mov
and
mov
aad
sub
push
ja
cdq
cmc
les
outs
add
push
daa
sbb
sub
cs
jnp
mov
mov
aam
inc
popf
loopne
xchg
inc
and
sbb
dec
mov
frstor
imul
out
push
mov
jnp
mov
mov
mov
push
sub
(bad)
in
into
dec
fnstcw
hlt
add
jno
retf
out
into
stos
scas
sar
jo
loopne
cmp
mov
sar
dec
fst
jle
adc
mov
inc
adc
dec
mov
pop
jnp
std
movs
add
lods
(bad)
xor
fcom
adc
push
xlat
sbb
xchg
pop
loopne
add
cs
ret
repnz
mov
clc
jnp
rcl
(bad)
cwde
jns
dec
imul
mov
push
fisttp
cmp
or
inc
cmc
push
sub
rol
call
push
mov
or
jge
scas
das
out
xchg
rep
cmp
out
sub
cmps
fidivr
std
or
cmp
movs
pop
mov
sti
fcom
add
shl
sti
nop
add
mov
push
and
mov
xor
inc
loopne
icebp
adc
js
in
cmps
mov
dec
inc
cdq
jae
or
ds
(bad)
xor
inc
and
dec
shl
cmp
inc
mov
imul
push
fwait
and
or
(bad)
loop
xor
in
or
adc
(bad)
loope
add
mov
xor
and
jns
shr
jg
(bad)
popa
jns
pop
push
pusha
push
(bad)
out
dec
dec
test
mov
out
lods
lock
jns
jmp
dec
pushf
popa
cmp
cmp
out
imul
and
mov
and
and
movs
cmps
mov
jbe
repz
pop
or
and
rol
jmp
jl
pop
dec
mov
adc
mov
sub
inc
popf
pop
inc
xchg
mov
(bad)
xor
mov
scas
cmps
mov
cli
push
sub
mov
fstp
add
fdiv
imul
and
xchg
(bad)
adc
sbb
cmp
pop
fcom
repz
data16
cmc
in
aad
sub
dec
out
retf
jbe
stc
jge
or
jecxz
test
fisub
(bad)
in
jae
sahf
or
cdq
inc
inc
add
(bad)
lods
repnz
or
js
mov
arpl
push
(bad)
mov
repz
cld
int3
and
dec
and
xlat
popa
in
popa
into
inc
ror
push
test
xor
les
psraw
arpl
pop
aad
xor
mov
cmps
retf
jne
cmp
push
retf
or
(bad)
popf
cmp
outs
dec
push
out
sbb
or
pop
mov
jmp
sar
push
loope
inc
jns
adc
sbb
sub
outs
jmp
cmp
lds
out
in
dec
cmps
cmp
push
ret
xor
adc
or
out
pop
lock
add
or
cmp
jnp
(bad)
sbb
les
dec
ficomp
mov
movs
jmp
leave
xchg
shl
jne
adc
lock
sbb
lds
ret
pop
cmc
out
(bad)
adc
mov
and
sub
test
iret
es
data16
in
mov
mov
sub
pop
sbb
pop
jo
enter
out
ins
mov
dec
and
aaa
xor
into
pop
adc
ss
mov
sub
test
dec
int
idiv
lock
jmp
add
xchg
jb
cmps
out
loope
lods
movs
jo
scas
call
ret
scas
xor
mov
adc
test
fs
outs
mov
out
out
out
jnp
sub
sub
sub
jge
jne
clc
rcr
ror
test
lods
cmp
inc
ds
dec
mov
jle
lods
add
ret
mov
lods
pop
jb
mov
inc
and
test
rcl
xchg
cmps
data16
aaa
inc
retf
rol
inc
outs
fwait
pusha
inc
sbb
xchg
js
xchg
mov
push
(bad)
aam
adc
add
pushf
out
repnz
xchg
dec
jmp
popa
add
nop
not
jae
sub
mov
call
push
stos
push
add
jmp
jae
js
not
mov
cmps
imul
mov
ins
fwait
cwde
fidiv
div
out
push
pop
adc
mov
stos
cwde
lea
adc
call
pop
enter
shl
add
cmps
jmp
fsub
bound
pshufw
and
jmp
add
mov
mov
sub
xchg
fs
imul
into
lods
in
pop
or
mov
std
scas
sbb
es
xchg
sub
js
scas
jo
mov
push
add
js
xor
sar
dec
add
mul
mov
repz
sti
aaa
push
or
inc
(bad)
movd
(bad)
jno
sub
cmp
mov
adc
shr
add
fisubr
push
mov
cmps
fsubr
ret
arpl
xchg
lea
push
mov
push
mov
add
and
or
mov
aaa
xor
mov
les
jae
mov
push
js
xchg
push
mov
inc
into
mov
mov
push
je
std
daa
data16
fstp
in
inc
sub
push
inc
add
inc
into
mov
outs
adc
pop
cmps
dec
xchg
iret
xchg
jo
cdq
call
ret
stos
data16
sub
adc
sub
shufps
shl
add
ja
push
cmp
add
fucomp
mov
inc
mov
or
icebp
fucomp
inc
loope
jle
push
or
icebp
sub
leave
div
dec
cdq
mov
mov
fs
icebp
ins
ja
or
pop
xor
test
push
es
sbb
cmp
jmp
sub
jl
mov
sub
jnp
and
popf
fidiv
ss
(bad)
addr16
(bad)
sbb
les
retf
stc
dec
(bad)
(bad)
jmp
sar
aad
cli
pushf
sub
fidiv
mov
ds
push
and
outs
and
ret
jmp
les
add
jmp
fcmove
shl
xchg
sti
xor
je
scas
ror
pop
dec
movs
sbb
mov
scas
or
xor
and
dec
(bad)
push
mov
mov
push
int3
push
mov
jno
inc
or
add
(bad)
sbb
mov
adc
pusha
push
(bad)
sbb
(bad)
sbb
add
xchg
int
push
pop
cmp
pop
dec
in
je
stc
cmp
cmp
sub
adc
lods
mov
xchg
outs
pop
dec
movs
jge
push
jmp
addr16
ror
das
inc
inc
jno
movs
pop
and
or
jb
popf
fistp
fbld
rol
enter
fdivp
sti
cwde
cwde
and
adc
pop
(bad)
es
cdq
mov
ja
imul
outs
sbb
xor
out
xchg
inc
in
es
adc
adc
or
pop
leave
and
es
or
pusha
(bad)
cmp
add
xchg
ficomp
pop
jne
test
and
test
mov
jmp
scas
push
out
or
mov
pusha
pushf
cld
mov
or
(bad)
push
stos
jl
movs
(bad)
imul
cld
sbb
je
cmp
rcr
repz
mov
add
inc
stc
sbb
mov
leave
adc
mov
add
pop
mov
xor
jl
dec
xor
pop
dec
test
and
(bad)
jmp
mov
mov
mov
pop
mov
xor
push
xchg
cmp
inc
push
sbb
or
adc
test
mov
add
bound
add
in
bnd
std
inc
mov
cld
jg
(bad)
sahf
in
jge
inc
scas
sub
pop
add
arpl
sbb
aaa
imul
fsubr
push
push
(bad)
cmp
ror
loop
add
xchg
(bad)
sbb
clc
loop
repz
bound
mov
adc
ret
movs
nop
and
pop
push
xor
pushf
adc
inc
out
loop
setge
jge
mov
jmp
sbb
ja
outs
xor
mov
data16
and
add
test
daa
in
or
jg
mov
or
or
retf
push
ss
in
cdq
push
scas
mov
pusha
out
ins
fdivrp
jne
dec
(bad)
(bad)
push
jg
das
or
mov
and
push
mov
cmp
xchg
mov
mov
cwde
add
mov
shl
or
dec
movs
or
push
fistp
fld
dec
(bad)
addr16
jmp
pop
gs
call
js
cmp
fist
and
lds
add
cmps
or
mov
arpl
int
ror
cmc
loop
movs
push
ins
ja
call
sbb
mov
shl
pop
in
push
jne
pop
sbb
mov
dec
fsubr
iret
leave
sbb
sub
cs
push
push
adc
fld
stos
add
es
mov
or
pop
jl
icebp
repz
ret
push
leave
mov
test
jge
or
push
push
lods
mov
test
jne
dec
out
mov
int3
push
and
or
sub
push
cmp
mov
inc
mov
inc
dec
pop
adc
jecxz
pop
xchg
xor
cmps
aaa
sar
loopne
data16
pusha
pop
out
jl
outs
jmp
rcr
sbb
or
dec
or
sahf
out
inc
dec
nop
icebp
cmps
xor
push
cdq
push
ja
arpl
shr
ds
lock
mov
mov
pop
adc
mov
(bad)
(bad)
dec
stos
and
add
pop
clc
aam
retf
fs
adc
jle
pop
repnz
cld
jnp
into
mov
icebp
adc
pop
inc
mov
call
adc
fwait
clc
dec
ins
mov
cmp
enter
data16
jle
and
ja
(bad)
dec
inc
test
mov
pushfw
loopne
psrad
(bad)
inc
fcomp
in
daa
mov
loop
push
mov
and
xchg
sbb
mov
std
ins
cs
ret
dec
fisub
sbb
push
ss
mov
cli
lock
mov
mov
mov
(bad)
retf
or
stos
inc
shl
movs
xchg
xor
fdivr
shl
repnz
jbe
clc
mov
jle
jl
int3
sub
arpl
xor
imul
xor
mov
ficom
adc
icebp
out
vmptrld
aaa
hlt
mov
pop
xor
dec
test
mov
fdiv
push
addr16
popf
jecxz
ja
add
inc
mul
loope
(bad)
xchg
sub
dec
pusha
ret
loop
mov
into
mov
and
pop
xor
mov
or
imul
bound
fs
gs
sbb
sub
push
xchg
or
add
dec
mov
outs
xchg
jl
push
pop
sbb
cmp
sti
loope
mov
or
outs
bndldx
adc
clc
scas
movs
rcr
sub
aas
rcr
mov
nop
inc
imul
mov
add
mov
jo
sar
out
inc
adc
sub
mov
(bad)
jl
add
jp
loopne
add
mov
mov
pop
loopne
or
out
arpl
retf
xchg
xchg
aas
aam
xchg
out
add
mov
ja
or
sti
push
imul
popa
stos
xchg
jnp
ins
lods
jecxz
push
inc
(bad)
shl
xor
pop
adc
mov
into
int3
mov
gs
ds
popa
add
aas
push
fsubr
ret
sub
outs
sahf
popf
shl
pop
xchg
shl
or
xchg
lea
xchg
sahf
sar
pop
push
push
mov
dec
je
jge
mov
cmps
and
inc
cmp
cmp
leave
mov
jmp
xchg
dec
or
mov
ds
sub
jnp
add
nop
popa
mov
scas
mov
mov
test
jae
xchg
cmps
loope
jmp
mov
cmps
mov
inc
jecxz
cmp
icebp
ret
repnz
in
repz
dec
dec
xor
bound
xor
pop
cli
or
into
adc
stos
sub
cmp
add
out
retw
inc
jmp
bnd
mov
cmp
shl
mov
mov
add
or
adc
push
jge
jle
dec
add
sbb
xor
lds
leave
das
xor
add
mov
pushf
fnstcw
push
int
cld
pop
test
mov
lahf
xor
sahf
adc
stc
cmc
cmp
cmp
push
mov
dec
es
ret
or
pop
push
je
cmp
push
imul
(bad)
mov
mov
enter
daa
or
push
(bad)
ja
and
retf
das
adc
fadd
int
xchg
pop
call
xor
dec
or
clc
adc
and
shl
ficomp
cmp
mov
pop
or
inc
mov
add
gs
shld
mov
mov
push
(bad)
ja
movs
xchg
mov
je
neg
sbb
dec
xor
and
ins
ret
and
pop
xor
arpl
xor
inc
xchg
jnp
(bad)
out
xor
call
add
pop
push
call
jmp
pop
mul
movs
sub
in
das
sub
mov
gs
dec
adc
popf
lock
loope
cmp
leave
xchg
cmp
imul
cwde
or
adc
sub
imul
outs
outs
popf
push
(bad)
lea
sub
sub
ror
dec
test
nop
cmps
mov
ins
test
mov
push
sbb
test
hlt
push
aam
jl
add
mov
aam
icebp
aaa
cmp
sar
into
add
mov
mov
add
inc
push
fld
push
jnp
bound
jnp
push
jmp
addr16
inc
jg
out
loop
ret
push
cwde
jge
stc
pop
jne
icebp
inc
mov
ins
into
or
gs
popf
repnz
popf
adc
xor
mov
mov
mov
sbb
dec
popa
imul
into
repnz
fimul
out
and
dec
leave
fiadd
retf
into
mov
mov
outs
cmp
dec
shl
in
adc
lea
pop
mov
test
pop
push
ins
adc
dec
pmaddwd
mov
mov
cmc
fwait
out
sti
sub
adc
aad
imul
push
mov
jl
dec
movs
xor
call
mov
cld
and
push
dec
adc
mov
ror
nop
test
adc
jecxz
mov
cmp
mov
sbb
jecxz
adc
jmp
jae
sbb
scas
test
fistp
bound
or
test
ss
jmp
ret
scas
mov
lahf
ficom
jl
jmp
loop
adc
mov
repz
mov
mov
sub
mov
pop
xor
jmp
test
mov
das
sbb
aas
fnstsw
daa
lock
enter
ret
cmps
fimul
push
imul
loop
dec
mov
stc
scas
fmul
(bad)
ds
pop
xchg
mov
pop
icebp
retf
cmp
pop
cmp
fcmovne
sti
aam
mov
jbe
arpl
fldenv
ja
dec
sub
mov
pop
adc
sbb
push
and
in
call
scas
xor
cmc
int3
lods
xor
cmc
in
test
mov
mov
push
mov
mov
out
sbb
and
lods
cmps
pop
push
aas
fnstenv
cdq
pop
(bad)
sbb
out
pop
xchg
ror
jecxz
jp
cli
icebp
mov
leave
or
push
and
inc
pop
mov
mov
push
call
inc
pop
inc
int
fs
adc
sub
fcmovne
outs
jg
into
push
pop
mov
jno
sahf
not
out
lds
fwait
ds
out
in
or
repz
jns
cmp
es
sar
mov
jb
push
ins
aam
inc
mov
mov
outs
out
push
jp
cmp
fsubr
movs
and
ret
daa
jnp
jo
mov
xchg
fdivr
mov
and
xchg
mov
popf
inc
loope
add
jnp
stc
mov
push
(bad)
cmp
or
xchg
add
psadbw
test
(bad)
daa
push
jmp
inc
shr
inc
jle
xlat
idiv
(bad)
xor
rol
mov
lahf
lock
xor
add
(bad)
in
adc
ds
stos
ret
js
adc
inc
push
cdq
call
(bad)
in
jne
stos
inc
xor
outs
xor
pop
scas
loopne
je
inc
jg
sub
jmp
mov
mov
jecxz
adc
pop
enter
inc
adc
(bad)
and
ja
fs
pop
test
lea
xchg
mov
in
mov
aas
(bad)
retf
popa
xor
or
out
mov
ficom
rcl
mov
cmp
jbe
aad
mov
lea
xchg
or
ja
xlat
(bad)
sbb
xchg
ror
lock
xor
ret
dec
rcl
add
movs
jmp
fiadd
inc
mov
push
sub
dec
in
scas
fwait
div
mov
stos
leave
push
push
lds
mov
mul
inc
std
lahf
iret
cmp
mov
not
out
adc
cwde
rol
mov
ds
inc
and
aas
pop
jp
leave
pop
(bad)
sub
fsubr
cli
pop
rol
mov
sbb
mov
mov
inc
dec
das
fistp
ins
and
xchg
jne
or
fiadd
enter
outs
mov
imul
ins
cwde
mov
push
iret
into
sub
mov
sub
pop
xor
cmp
mov
sub
add
adc
aad
loopne
cmp
scas
cmps
mov
hlt
in
xor
repz
mov
sub
cdq
outs
push
mov
rol
clc
in
pop
sub
xchg
mov
xchg
scas
inc
add
mov
push
push
(bad)
faddp
shl
mov
icebp
out
inc
jns
out
in
test
xchg
or
scas
or
fisub
dec
xor
sub
push
push
sub
shl
inc
(bad)
in
stos
mov
rol
jge
lea
dec
or
daa
(bad)
cwde
push
sbb
push
loopne
jns
(bad)
int
fnstsw
or
add
pop
push
int3
jmp
fs
jb
ja
add
adc
stc
pop
cmp
sub
cmps
dec
mov
cs
fisubr
out
xchg
pop
cmp
stos
push
fisub
push
and
es
and
ins
mov
sub
adc
lods
inc
icebp
push
lea
jo
fmul
push
or
add
jns
dec
sbb
xchg
loope
sbb
jns
inc
test
cmps
add
sti
jl
es
mov
or
in
shl
xor
gs
sub
pop
test
stos
push
dec
cmp
mov
or
mov
in
es
mov
movs
cmp
sbb
xor
sub
imul
xor
pop
pop
mov
mov
fnstenv
int3
xor
inc
cwde
inc
arpl
pushf
push
push
fs
es
aad
cld
fwait
push
jg
ret
aad
in
pop
loope
push
jno
pushf
mov
mov
mov
xchg
pusha
test
stos
loopne
repz
into
in
lea
std
mov
outs
adc
jp
xchg
nop
xor
adc
cmovs
test
retf
dec
imul
in
(bad)
and
scas
stos
or
test
mov
sbb
pop
adc
inc
je
mov
push
movs
out
(bad)
loopne
lahf
in
(bad)
xlat
sar
fisubr
out
out
jae
adc
leave
stc
imul
xchg
xlat
add
dec
repnz
lea
mov
js
lahf
adc
jmp
shr
jle
mov
mov
mov
mov
iret
sbb
fadd
push
scas
lock
push
or
sub
fmul
fcomp
arpl
mov
cmc
ja
in
jecxz
fxch
pop
(bad)
lea
add
jbe
xlat
xchg
sahf
dec
ret
rol
fwait
or
jns
fisub
lock
xchg
mov
pop
mov
and
cmc
je
test
bound
test
dec
jne
push
xchg
scas
mov
or
sti
rcl
xchg
arpl
das
jnp
mov
xchg
(bad)
cli
icebp
add
ror
enter
or
or
add
fwait
imul
iret
mov
jecxz
imul
bound
sub
lock
iret
(bad)
dec
lods
arpl
gs
xor
add
das
mov
pushf
and
arpl
xor
push
(bad)
rol
cmp
dec
adc
int3
cmp
adc
push
pushf
pop
dec
out
stos
jp
cs
inc
mov
movs
pop
int3
xor
jmp
fst
jp
out
or
aad
cmps
(bad)
jp
and
jne
outs
sti
mov
pop
mov
loope
(bad)
jae
xlat
push
xchg
out
outs
repnz
xor
sub
in
inc
mov
xchg
(bad)
sbb
lahf
shl
inc
jmp
add
mov
movs
fsubr
rcl
mov
shr
pushf
pop
ficom
das
and
xor
js
cmps
stos
cmc
mov
inc
and
jge
and
jge
retf
jp
(bad)
fnstsw
stos
call
xchg
repnz
mov
mov
mov
das
jmp
int3
addr16
jecxz
ins
fsubr
inc
in
mov
retf
pop
ret
lds
sar
sub
fld
mov
xchg
ja
sub
sub
xor
mov
cmp
addr16
out
jecxz
je
jmp
lods
scas
nop
sub
add
movs
dec
or
hlt
or
ret
fistp
mov
std
aad
xchg
xor
xor
dec
mov
dec
aam
xor
int
or
scas
sar
mov
add
add
addr16
cmps
pop
das
mov
repz
lahf
push
in
mov
and
mov
loope
push
add
and
out
(bad)
jae
mov
mov
inc
cmp
iret
inc
repnz
std
mov
cmc
xchg
and
jmp
xchg
jnp
push
inc
jg
push
jae
mov
push
adc
sbb
clc
add
pop
dec
pop
js
push
xchg
push
jecxz
mov
sbb
jo
cmp
call
mov
je
ins
push
test
jp
jle
bound
cmp
or
and
xor
mul
dec
push
inc
sbb
xchg
rcr
mov
sbb
addr16
stos
scas
dec
mov
pop
push
lods
push
mov
cld
bound
jmp
sbb
add
leave
(bad)
shl
pop
clc
lock
push
mov
popa
push
ins
lds
ss
pop
leave
loope
stc
mov
pop
xchg
ins
sbb
cwde
call
out
push
push
iret
retf
into
add
sbb
sub
xor
inc
ss
lods
inc
add
icebp
jae
xchg
mov
pop
mov
mov
push
and
jecxz
pop
test
mov
dec
mov
push
push
push
jg
cld
inc
fiadd
lods
retf
mov
icebp
aaa
push
outs
lods
lds
ss
and
loope
dec
fld
fnstsw
mov
xchg
dec
pop
and
mov
jl
push
mov
popf
cwde
jg
dec
xchg
into
jns
xor
dec
cmp
mov
adc
retf
adc
dec
sub
pop
out
test
loop
cli
adc
and
les
sbb
or
sbb
add
mov
(bad)
xlat
sbb
and
add
aas
jns
mov
xchg
jbe
fcomp
pop
mov
sbb
loopne
dec
jo
and
fwait
xlat
mov
or
in
retf
lahf
repz
pop
inc
mov
cmps
jb
retf
scas
leave
mov
mov
lea
mov
dec
shl
rcl
xor
adc
push
ins
repz
test
(bad)
and
stc
pop
fwait
or
pop
lods
jo
or
scas
push
(bad)
xor
sbb
mov
and
sahf
dec
out
lock
imul
xor
fsubr
scas
dec
sub
sbb
das
pop
bound
mov
fsub
mov
test
shl
nop
pop
cmp
jp
pop
cmp
cs
lods
inc
loop
(bad)
iret
shl
adc
jae
fadd
lds
mov
addr16
sar
fcmovb
or
pop
fwait
(bad)
or
jno
nop
or
push
dec
sbb
popf
cmp
mov
rcr
mov
add
cmp
loopne
inc
fistp
adc
add
mov
or
push
mov
push
(bad)
inc
mov
pop
shr
jl
mov
xor
cld
and
cmp
pop
ja
adc
retf
test
xchg
lds
pop
loopne
imul
in
jne
ins
jno
pop
ins
mov
push
test
loope
push
xor
pop
repnz
bswap
mov
sub
(bad)
mov
test
call
fsubp
pop
stos
popf
out
or
cwde
inc
push
or
xor
das
ss
mov
hlt
(bad)
xchg
scas
or
mov
xor
pop
scas
mov
add
(bad)
xlat
in
add
in
xchg
dec
jb
mov
fiadd
outs
int
mov
pop
xchg
cld
or
mov
inc
push
inc
test
or
jae
in
popf
xchg
movs
add
enter
data16
call
dec
cmps
scas
sub
add
test
dec
xor
scas
pop
mov
push
pop
sub
push
sbb
mov
or
fisub
add
mov
or
or
js
xchg
rcl
cli
iret
cdq
dec
mov
push
mov
outs
sbb
imul
sbb
push
and
inc
or
mov
add
imul
xchg
push
mov
sbb
loope
test
popa
pushf
ror
cs
test
imul
jmp
dec
lods
mov
sbb
imul
mov
xchg
scas
js
in
pop
movs
je
jne
xchg
xchg
fdiv
(bad)
out
je
or
ins
mov
and
and
mov
fistp
aaa
test
fsub
push
dec
outs
xor
mov
movs
cmc
cdq
scas
icebp
or
cmps
lods
push
push
pop
sub
xchg
rcr
std
out
mul
or
ins
pop
cmp
jbe
mov
gs
push
inc
cmc
mov
add
popf
cmp
mov
popa
pushf
fsubrp
(bad)
or
inc
icebp
mov
adc
sahf
push
aaa
in
imul
push
adc
or
push
jl
std
push
test
pop
sbb
mov
pushf
xchg
icebp
ret
inc
jnp
mov
pop
add
sub
out
ret
mov
(bad)
sahf
add
ins
cmp
ror
mov
jb
mov
mov
pop
jmp
scas
outs
or
jg
cmp
(bad)
sub
test
faddp
movs
jmp
or
jae
push
retf
cdq
cmp
dec
jae
jmp
je
push
lahf
(bad)
adc
xlat
loopne
imul
cmp
stc
scas
mov
push
dec
cmp
dec
mov
and
in
or
and
jo
arpl
movs
mov
or
mov
add
add
mov
shr
sbb
sar
sbb
dec
jg
stos
cdq
lea
push
xor
cld
xor
push
add
fldenv
push
jbe
add
jge
xchg
rcl
pop
jno
or
shl
sub
shr
jns
or
mov
jp
test
imul
mov
push
inc
neg
scas
or
xchg
xchg
adc
sub
and
pop
pop
xor
fsub
or
cmp
movs
out
pop
sbb
loopne
add
dec
stos
popf
xchg
and
mov
es
jg
add
pusha
fild
dec
pop
aas
fidivr
hlt
jnp
mov
into
pop
aaa
imul
dec
imul
clc
in
adc
pop
cs
mov
scas
cmp
inc
sub
lds
outs
in
jbe
lods
repz
popa
sub
cdq
sub
fidivr
cmp
mov
fs
mov
sub
mov
leave
xchg
sbb
mov
test
(bad)
mov
mov
aam
std
mov
and
mov
mov
push
and
pop
inc
aas
add
add
add
cld
sar
test
mov
sahf
jmp
mov
out
js
mov
mov
pushf
ja
fild
popa
pop
cmps
fisub
(bad)
cmp
nop
das
push
imul
add
cdq
scas
je
sbb
push
push
fnsave
add
rcl
outs
test
(bad)
out
cmps
jo
push
inc
pop
test
push
fmul
jle
sar
inc
inc
inc
in
imul
inc
aam
les
and
cwde
adc
xor
(bad)
fild
lock
ins
and
mov
xchg
das
adc
and
mov
xor
dec
pop
outs
loopne
and
pop
sbb
pop
mov
push
rcl
imul
sub
iret
mov
xchg
fst
xchg
inc
push
cli
retf
jno
sub
pop
dec
push
jns
add
inc
aaa
sub
les
in
mov
int
iret
jns
mov
js
bound
or
jmp
fidiv
inc
pop
gs
in
xchg
adc
sar
retf
sub
enter
or
clc
sahf
sbb
cmp
jl
(bad)
mov
cmp
mov
(bad)
(bad)
(bad)
xor
dec
sub
div
ss
or
dec
out
retf
das
cmps
inc
mov
mov
rol
movs
bound
shl
arpl
cmp
push
and
xchg
mov
retf
adc
pusha
outs
stos
xchg
call
mov
add
call
stos
ins
(bad)
mov
or
jo
in
and
and
repnz
rcr
popf
sbb
aad
pop
push
clc
mov
pop
mov
cmp
cwde
jno
imul
fmul
adc
mov
push
xchg
fstp
shr
pop
pop
pop
loopne
mov
pop
mov
xchg
pop
js
(bad)
in
jno
frstor
and
and
pop
sbb
sub
test
jns
call
and
loope
mov
frstor
fdivr
es
pop
mov
push
xchg
jle
shl
sub
xchg
sub
pop
call
and
push
mov
loope
cdq
xor
mov
and
xchg
test
xchg
pop
(bad)
rol
(bad)
jbe
xor
cdq
fs
fdiv
mov
fsub
mov
jns
(bad)
lea
test
xor
clc
xchg
pop
cli
jae
pop
xchg
rcr
pushf
push
pop
mov
inc
icebp
aad
cmp
(bad)
mov
push
xchg
shl
je
or
mov
mov
sbb
rol
sbb
cmp
ror
jge
mov
jbe
mov
pop
cwde
cwde
cmp
dec
(bad)
cli
jg
or
xor
test
cwde
cmp
mov
loope
je
das
rol
pop
cli
adc
jo
sti
inc
je
imul
jno
enter
xchg
in
sub
dec
loop
jnp
fdiv
out
movs
push
jae
xchg
outs
out
rcr
dec
(bad)
mov
ja
xlat
ret
pop
xchg
test
(bad)
sahf
jmp
adc
or
mov
or
jae
cmp
or
pop
fs
mov
inc
std
inc
repz
fsubr
in
(bad)
lea
les
or
push
pop
inc
enter
jb
pusha
repnz
mov
aas
sub
test
not
xor
inc
mov
fs
sub
add
mov
int
push
push
fucom
fs
and
xor
adc
or
dec
push
jbe
push
xlat
dec
call
shl
inc
mov
jb
data16
test
test
lods
int
xlat
push
mov
mov
test
xchg
or
mov
cdq
cmp
add
fucomip
call
push
leave
fwait
jge
pop
mov
cdq
aad
sub
sbb
push
cwde
cmp
and
mov
retf
pop
ins
jae
and
in
(bad)
sbb
jae
and
sar
movs
mov
loop
(bad)
pop
ret
sbb
pop
imul
gs
mov
cmp
dec
test
mov
push
mov
in
add
pusha
jmp
mov
pop
mov
xchg
dec
popf
cwde
(bad)
pop
mov
ficomp
hlt
or
call
in
shl
inc
xlat
jmp
mov
ror
push
mov
cmc
aad
repnz
or
mov
sub
xchg
xchg
cmps
test
mov
and
pop
mov
adc
push
jg
imul
cwde
xlat
test
jge
dec
outs
xchg
in
cmp
aad
jp
xchg
aam
push
push
lods
dec
into
adc
xor
dec
xchg
mov
mov
retf
mov
(bad)
pop
ss
cmps
lea
addr16
sar
push
sub
jae
jo
jmp
aam
lea
inc
or
mov
jle
xchg
dec
outs
sub
idiv
adc
int
dec
xchg
clc
sub
push
mov
or
cmp
add
pusha
pop
mov
sbb
(bad)
and
push
cmp
ret
(bad)
mov
mov
popf
jp
ins
dec
xchg
sbb
sub
mov
pop
bound
mov
xchg
jmp
ds
bound
into
(bad)
movs
jle
jg
je
push
xor
or
enter
jne
mov
jmp
or
pusha
imul
pop
out
mov
pop
inc
imul
jecxz
jne
push
cmp
fstp
jecxz
enter
pop
and
jbe
fisttp
xor
(bad)
rol
pop
les
mov
mov
xor
(bad)
lods
in
and
inc
not
ficomp
js
adc
xchg
push
sar
adc
ins
mov
mov
out
(bad)
mov
ins
cmp
cmc
iret
and
div
ja
jbe
movs
mov
jmp
push
scas
or
push
mov
adc
(bad)
(bad)
movs
pop
(bad)
adc
pop
cmove
xchg
fisttp
loope
push
jb
push
jmp
in
fisttp
push
popf
hlt
jge
cmc
xchg
mov
cmp
pop
push
ror
mov
gs
jb
add
and
gs
test
out
imul
imul
fs
mov
sbb
add
and
out
adc
sbb
adc
in
imul
cmp
sub
nop
scas
xor
dec
push
mov
outs
dec
fs
aam
(bad)
mov
in
rcl
movs
push
xor
pop
test
mov
test
or
pop
jmp
adc
mov
test
stos
jns
inc
pop
add
xchg
sti
out
(bad)
popf
mov
loope
lods
push
sti
and
add
mov
out
add
aad
add
in
xchg
mov
(bad)
jmp
mov
ret
inc
cmp
or
call
(bad)
retf
adc
jl
call
adc
(bad)
lods
pushf
or
es
imul
add
add
fstp
mov
daa
push
fxch
adc
(bad)
cmps
call
pusha
mov
add
sub
inc
popf
mov
jbe
xor
fistp
mov
movs
sar
test
dec
mov
scas
sub
push
ins
mov
leave
pop
imul
sub
xor
xor
leave
lock
jo
retf
jno
pop
movups
xor
sbb
lock
mov
mov
movs
push
std
or
xchg
out
mov
pop
lahf
jb
inc
push
cmc
or
sbb
aam
ror
jl
leave
stos
mov
fistp
aad
jbe
out
add
and
mov
(bad)
into
imul
mov
lods
and
inc
leave
mov
retf
or
mov
cld
inc
cmp
cmp
inc
cmps
and
sbb
ja
inc
or
inc
shl
in
cmps
sar
pop
ror
cmc
ffree
push
ins
push
cwde
xor
imul
mov
cmps
jbe
js
push
loope
sub
dec
adc
in
out
push
mov
retf
add
in
arpl
pushf
jae
dec
fcomp
cdq
jge
call
cmp
je
push
clc
leave
xchg
fwait
in
adc
push
jecxz
sbb
ins
and
stc
rcl
jg
mov
push
int3
test
mov
cwde
daa
iret
sub
sbb
fucom
std
mov
inc
mov
ss
ffreep
dec
cwde
les
ror
xchg
pushf
pop
ror
pop
daa
aad
and
sub
sub
ins
arpl
mov
pop
lods
mov
(bad)
es
and
fst
(bad)
xor
jno
sub
push
inc
and
mov
xchg
mov
jecxz
and
push
sbb
sar
(bad)
xor
out
and
cmps
dec
dec
(bad)
sar
add
adc
dec
inc
or
aam
int
ja
inc
aad
or
jl
ins
mov
rcr
mov
dec
cs
shl
arpl
add
push
test
test
adc
test
clc
cmp
cli
out
iret
mov
call
push
fidiv
and
out
pop
repz
cmp
adc
push
mov
fdivp
adc
sub
retf
mov
movs
add
and
loopne
or
ror
pop
sub
sti
imul
dec
je
jge
mov
add
inc
pusha
xlat
mov
mov
add
call
out
repnz
sbb
sahf
pop
jge
cmp
fadd
xor
das
(bad)
mov
mov
mov
adc
mov
inc
cdq
(bad)
jmp
fadd
and
daa
jmp
inc
cdq
inc
inc
dec
and
loop
jle
xchg
sbb
mov
out
or
or
inc
adc
cs
inc
test
call
lods
nop
sub
outs
adc
inc
jp
popa
cmp
jge
in
cwde
xor
out
and
cli
add
sub
es
stos
test
sbb
icebp
pop
lea
out
sahf
dec
ss
pop
push
or
add
pop
into
mov
in
movs
retf
sbb
iret
ja
jecxz
aad
clc
out
(bad)
dec
jg
ret
shl
inc
sbb
xor
jbe
mov
pop
pop
inc
mov
popf
outs
je
nop
in
ss
and
es
sub
sbb
lea
pushf
fs
xchg
in
adc
mov
push
addr16
pop
or
xlat
ds
sti
imul
mov
jno
xlat
repnz
add
aam
pop
dec
sbb
pushf
mov
mov
mov
lahf
or
mov
xchg
sub
push
add
pop
sub
ss
mov
xor
call
shl
shr
cmps
shl
sbb
mov
in
adc
cld
sub
bound
cdq
leave
pop
sti
add
pop
out
push
pushf
in
mov
shl
sbb
xlat
jecxz
adc
addr16
(bad)
push
add
test
sub
and
mov
sti
fs
mov
push
scas
or
sbb
(bad)
xor
sti
mov
inc
xor
xor
sbb
sub
loopne
loopne
inc
int3
int3
mov
iret
fisttp
inc
outs
fs
xchg
push
popf
push
pop
jns
jecxz
shr
mul
jl
add
fist
push
jmp
jbe
mov
jecxz
push
mov
out
mov
loope
dec
imul
fisttp
cmps
call
adc
jno
in
arpl
dec
push
xchg
sbb
out
fcomi
jle
jl
sti
in
js
or
call
mov
cmp
popa
push
mov
call
shr
push
mov
xor
xor
call
inc
jecxz
sbb
cmps
or
sbb
outs
stc
out
(bad)
jle
not
shl
mov
sub
outs
mov
int
and
sbb
sbb
lods
call
xchg
inc
data16
lock
or
sub
test
ror
ds
add
sbb
jno
test
stos
int
sub
out
push
scas
mov
xchg
cmps
or
dec
retf
call
sub
ja
bound
ror
test
mov
nop
pop
dec
pop
cmps
dec
ins
into
fs
(bad)
push
or
xchg
cmp
in
hlt
ror
lds
(bad)
dec
cmps
enter
retf
lock
movs
mov
xchg
and
jge
fsubr
ret
pop
std
pop
push
fcmove
jbe
js
lds
test
mov
mov
or
or
xlat
push
pop
loopne
adc
xor
pushf
mov
outs
mov
cs
or
and
inc
daa
retf
dec
lock
call
jo
(bad)
push
xchg
popf
lods
in
jae
jmp
cmp
stos
xor
mov
dec
mov
out
sbb
xchg
mov
xchg
push
jmp
cmc
sti
(bad)
cmp
nop
and
jo
mov
test
pop
pop
cmps
mov
movs
lea
mov
not
push
(bad)
loopne
push
lods
fwait
out
das
inc
ret
mov
pushf
cld
cs
in
stc
jle
aas
je
sahf
xor
inc
lahf
(bad)
push
add
outs
dec
xor
mov
jno
inc
lds
push
int3
mov
daa
dec
adc
jmp
cwde
jne
gs
imul
pop
push
push
nop
jns
jmp
add
inc
lods
addr16
retf
sub
call
xlat
stc
(bad)
mov
sar
not
sub
cs
sub
nop
push
cdq
iret
in
adc
sbb
out
pop
sbb
pop
mov
jmp
mov
ss
sub
sbb
lahf
xor
icebp
adc
xlat
cli
cs
leave
and
mov
dec
out
rcr
aaa
ror
add
mov
mov
and
arpl
repnz
adc
cld
jnp
(bad)
mov
repz
mov
adc
mov
jno
movs
pop
jge
cwde
(bad)
cmps
lea
adc
je
fnsave
jnp
fwait
add
ins
mov
pop
test
enter
fdivr
push
dec
mov
push
xlat
jmp
pop
rcr
int
push
(bad)
xchg
pop
ror
mov
arpl
stos
fs
shr
ins
push
dec
cmp
cmp
push
sbb
icebp
xor
fst
fsubr
pop
mov
enter
clc
jmp
aam
rcr
(bad)
call
sbb
mov
xchg
push
icebp
sbb
and
inc
nop
js
sbb
xchg
out
fucomp
or
sbb
lahf
inc
push
or
adc
add
fidiv
mov
test
outs
stos
cmp
rcr
std
push
add
pop
lock
int
mov
out
fwait
daa
std
cmps
std
loope
cmps
(bad)
stos
out
stos
or
jbe
xlat
push
fsub
popa
(bad)
pop
sbb
loope
pop
pushw
dec
outs
shl
test
les
cwde
enter
dec
int
(bad)
(bad)
xchg
loope
xchg
add
movs
push
outs
jno
mov
bound
retf
test
xlat
xchg
sti
pop
pop
frstor
inc
les
leave
mov
clc
inc
movs
jmp
mov
ins
mov
sub
bound
stos
adc
pop
(bad)
rcl
pop
inc
hlt
js
push
or
cld
sbb
dec
ret
xchg
test
data16
mov
jno
mov
add
rcl
dec
shl
pop
sub
mov
pushf
mov
mov
xor
and
mov
pop
psubusw
scas
mov
adc
inc
xlat
sbb
jns
xchg
inc
mov
xlat
jp
jae
jne
xor
mov
jmp
outs
adc
movs
iret
pop
cwde
mov
and
cmp
scas
movs
xor
fs
add
fcmovne
cwde
addr16
aad
into
sub
cmp
arpl
int
pusha
iret
outs
push
pop
sahf
int3
fucomi
sti
aaa
cmp
je
in
mov
in
outs
sub
push
add
mov
das
add
shl
aaa
inc
mov
mov
jnp
sub
mov
push
fisub
fs
sbb
or
mov
or
leave
sar
adc
repz
pop
pop
jae
pop
sbb
push
bound
jmp
mov
ds
mov
hlt
lods
cmp
mov
inc
movs
les
pop
enter
aaa
sub
int3
push
stos
jno
sub
imul
into
popa
xor
sub
cmps
cs
jecxz
or
outs
xchg
arpl
mov
jle
icebp
push
and
cmp
sub
ret
(bad)
sub
xchg
pop
and
ins
les
sub
fild
sub
lods
jo
ins
js
out
aam
or
dec
sbb
fadd
push
mov
pusha
fdiv
lods
mov
call
xchg
cdq
movs
push
xlat
push
ds
pop
sub
mov
cmp
js
test
push
(bad)
aaa
stos
retf
pushf
jg
dec
(bad)
and
call
fisttp
adc
mov
cmp
jg
in
xor
out
mov
jo
in
add
jl
in
xchg
pop
cmp
sbb
pop
iret
in
mov
(bad)
push
out
(bad)
loop
fadd
adc
cmp
pushf
jo
ss
in
jge
or
ins
add
popf
xchg
mov
jo
lock
ja
jne
jmp
cmp
fcmove
mov
or
hlt
mov
imul
stos
ss
test
cmps
adc
bound
xor
add
call
cld
leave
pop
das
push
jne
fdiv
sti
mov
inc
in
arpl
ins
sub
add
add
xchg
jl
shl
dec
repz
xchg
mov
mov
or
(bad)
ret
int
push
jle
push
or
xchg
inc
mul
or
scas
push
mov
xchg
rcr
xchg
or
js
jmp
adc
pusha
pop
push
mov
lds
mov
mov
mov
sar
push
popa
enter
push
push
jge
push
inc
in
add
inc
add
popa
fwait
push
pop
pop
ins
and
daa
in
xor
sar
sub
out
xor
out
mov
(bad)
ins
or
mov
inc
inc
cwde
lods
adc
or
rol
fdivr
adc
mov
cld
xchg
or
(bad)
stos
mov
fcom
iret
movs
in
test
inc
sub
pushf
jmp
cmp
xchg
gs
movs
xor
ret
(bad)
stos
pop
or
mov
outs
sti
icebp
in
fsub
sbb
and
and
and
sub
lea
aas
pop
jns
pop
int3
cmps
fcomp
cdq
or
xor
mov
aas
xchg
stc
push
jmp
loop
jnp
out
shl
int3
push
add
test
jecxz
sub
sbb
mov
clc
es
xor
sahf
xchg
aad
(bad)
out
pop
imul
pop
dec
mov
out
std
sub
in
add
aaa
jmp
mov
cmp
test
fsub
and
xor
and
dec
add
and
sbb
jge
push
addr16
test
call
jle
cmova
(bad)
push
jnp
cmp
loope
pop
mov
ret
dec
xchg
sbb
dec
pop
mov
ins
fisubr
rcr
jne
out
cmp
retf
mov
xchg
jg
mov
retf
into
mov
sub
enter
loop
jb
xchg
ja
std
not
pop
push
jns
dec
push
js
rol
out
dec
popa
mov
cmp
inc
xchg
jg
adc
pop
bound
out
mov
out
jle
inc
mov
sub
sbb
ins
xlat
fbld
mov
arpl
adc
mov
push
sbb
daa
mov
mov
and
pop
es
imul
push
mov
std
xor
mov
loop
fimul
rcl
push
sbb
stc
dec
or
out
jle
push
dec
push
mov
inc
adc
or
es
dec
or
cli
stos
xor
fwait
div
or
shl
sbb
loop
pop
(bad)
pop
mov
sbb
das
call
loope
test
sub
in
test
lods
adc
sub
(bad)
out
es
(bad)
rol
stc
ret
out
push
ins
xchg
arpl
rcr
and
xor
inc
aaa
js
sub
push
cwde
push
xlat
ret
icebp
popf
cmp
inc
push
or
cli
lahf
ja
add
shl
arpl
int
pop
sub
ficomp
sbb
inc
xchg
cwde
out
mov
xor
lfs
in
or
sbb
jge
popa
xchg
sbb
sub
pop
sbb
fdivr
mov
clc
lods
sti
push
mov
stc
cmc
push
push
jns
cmp
inc
dec
and
test
cmps
xor
das
inc
movs
test
popa
aad
fwait
add
and
xor
mov
in
fiadd
adc
sti
mov
sub
mov
lods
mov
mov
clc
(bad)
fs
arpl
push
into
mov
cdq
cli
sub
pop
ins
sbb
cmp
ins
int
cmp
jle
icebp
pop
icebp
push
xor
push
pushf
inc
mov
and
or
lahf
inc
sub
xchg
sar
or
ret
xlat
xchg
sbb
imul
movs
and
mov
jle
sbb
mov
bnd
rcl
fild
adc
cmps
pusha
pop
sub
and
mov
jle
push
xor
jb
test
sbb
cmc
pop
cmp
and
jmp
jl
add
dec
inc
inc
call
sbb
iret
mov
dec
fwait
and
dec
lea
(bad)
push
shl
outs
push
jmp
dec
jmp
sbb
into
jns
aas
pop
imul
test
popa
fdiv
sub
inc
mov
jne
js
aam
push
movs
int
addr16
js
scas
inc
push
dec
sti
fcom
rol
xor
adc
movs
xchg
inc
or
or
stos
mov
lods
ret
iret
xchg
ins
mov
or
and
sti
xchg
pushf
les
(bad)
dec
adc
jl
xor
fsubr
and
mov
pushf
sahf
imul
adc
jge
pop
push
jne
pop
arpl
jge
sbb
cmp
pop
mov
xor
loopne
jae
sbb
jns
lock
pop
push
stos
call
push
inc
pop
outs
lds
adc
das
cdq
pushf
inc
sar
and
mov
sbb
pop
das
xor
dec
js
or
xor
inc
add
mov
jo
sbb
sub
cmp
xor
fwait
pop
jge
dec
mov
stc
push
in
push
xor
xor
dec
arpl
fidiv
dec
push
imul
xchg
adc
sbb
addr16
imul
inc
aad
or
add
mov
fisubr
inc
(bad)
ficom
or
sbb
(bad)
imul
dec
push
dec
mov
pop
and
jg
inc
push
stc
fmul
call
jae
adc
mov
push
xor
in
pop
sub
pop
aad
fld
pop
mov
in
jne
cmp
xchg
sbb
jmp
pop
cmps
je
add
stos
jl
inc
or
push
mov
repz
pop
je
repz
and
rcr
pushf
xor
cmp
test
outs
jns
scas
adc
sbb
in
push
imul
pop
fisttp
sub
movs
iret
in
call
and
jnp
in
xor
call
jae
jnp
(bad)
shl
xor
mov
push
rcl
pop
pop
sub
xor
mov
test
ins
shr
cmc
popf
ins
or
cmps
xor
xlat
(bad)
pop
add
xchg
fcomp
jbe
push
jecxz
aad
mov
inc
sub
dec
imul
repz
mov
pushf
inc
add
js
cli
ss
jmp
enter
data16
int3
jb
xchg
inc
addr16
call
sub
and
das
inc
sbb
add
mov
xor
int3
push
movs
sub
dec
push
mov
xchg
mov
xor
(bad)
(bad)
fisub
hlt
push
xchg
push
mov
jmp
cmps
sbb
stc
imul
mov
sbb
mov
mov
push
icebp
test
shl
test
mov
inc
gs
dec
xchg
mov
xchg
sbb
fnsave
sub
xor
sub
mov
cmp
xchg
jg
retf
and
aam
hlt
(bad)
mov
daa
pop
xchg
mov
shr
push
xchg
jg
add
icebp
stos
rol
inc
cmp
fidivr
enter
mov
inc
fisttp
mov
(bad)
ds
int
push
xchg
(bad)
hlt
or
cmp
jno
mov
rcr
movs
inc
mov
int
jb
aad
stos
xchg
jl
outs
ins
icebp
mov
lods
fisttp
xchg
mov
mov
add
push
and
push
movs
ss
cmp
push
imul
ins
rep
popf
arpl
in
jb
fbstp
retf
mov
lds
int
out
adc
mov
xor
mov
mov
mov
jb
aad
sar
jo
adc
fistp
mov
icebp
mov
jb
aaa
push
jne
mov
(bad)
sub
mov
lock
mov
or
dec
dec
lahf
add
mov
lods
inc
aam
push
dec
jb
pop
ins
scas
and
inc
pusha
inc
test
xlat
scas
and
rcl
retf
out
icebp
xor
(bad)
into
lea
sahf
sub
int
inc
mov
jmp
jg
xchg
dec
cli
and
pop
ftst
sbb
fdivp
pop
(bad)
repnz
data16
mov
sahf
or
aaa
xchg
stos
add
in
jae
sub
imul
xor
repz
not
pop
fisub
or
pusha
int3
cmps
inc
call
inc
jmp
or
pusha
ja
fs
xchg
pop
push
push
int3
xchg
xchg
cmp
cmp
or
add
fiadd
push
inc
mov
jmp
or
lock
dec
or
ret
fcmovnu
pop
cmp
stc
mov
xor
(bad)
sti
inc
dec
into
add
addr16
mov
push
push
mov
ret
cli
sar
sbb
icebp
mov
sahf
mov
push
push
mov
into
les
es
retf
pop
mov
mov
inc
shl
ret
(bad)
in
adc
pushf
push
scas
pop
jge
and
or
cmps
rol
enter
jnp
shl
mov
xchg
adc
mov
bnd
push
sub
clc
outs
mov
push
loop
enter
push
pop
push
js
lods
(bad)
jb
mov
gs
push
cld
pusha
aam
int3
gs
jbe
mov
arpl
neg
sub
jmp
shl
aad
sbb
cmp
xor
mov
lods
mov
xor
clc
jno
add
(bad)
mov
out
repnz
adc
jmp
sub
dec
mov
or
scas
hlt
pop
retf
add
into
mov
push
push
iret
xor
pop
stos
jnp
cmp
xchg
shl
adc
mov
imul
adc
iret
adc
inc
inc
out
cmc
sti
mov
add
inc
pop
mov
(bad)
scas
loope
jne
ds
fdivr
sub
sub
cld
mov
int3
dec
xchg
retf
pop
xchg
xor
xchg
stos
and
rcr
jnp
adc
fisub
stos
mov
pop
call
test
les
push
das
push
test
stc
int3
fnstenv
cmps
mov
dec
cmp
pop
inc
add
jae
inc
test
cld
or
(bad)
test
std
test
int3
pushf
or
xor
jp
jb
rol
mov
mov
and
out
aam
lods
mov
fistp
mov
gs
xchg
adc
lock
xchg
cli
outs
in
dec
fs
or
mov
xor
repz
xchg
adc
sbb
out
icebp
stos
aad
inc
adc
xor
outs
jne
cmps
sbb
aad
out
pop
cmp
outs
xchg
mov
push
mov
fcomp
loope
pop
int3
mov
adc
mov
or
pop
(bad)
inc
push
or
stc
mov
hlt
and
adc
xchg
xchg
adc
mov
mov
adc
fist
std
bound
popf
cmps
ja
test
movs
mov
sub
mov
and
(bad)
int
adc
jne
fnstsw
inc
loop
fimul
movs
xchg
or
adc
fiadd
lock
pushf
and
xlat
mov
sbb
shl
ins
dec
sbb
movs
and
jecxz
into
pinsrw
jns
retf
fwait
xor
out
add
iret
mov
pop
(bad)
pop
and
add
call
popa
push
mov
repz
jp
jb
add
add
pop
xchg
addr16
and
movs
mov
cwde
mov
call
sbb
in
mov
or
int
mov
mov
dec
fs
push
add
in
push
adc
cld
shr
adc
(bad)
cmp
pop
jbe
pop
aas
cmp
clc
mov
mov
adc
mov
push
xchg
cmp
loope
icebp
popa
nop
lds
inc
push
push
inc
mov
mov
add
sub
lea
cmp
push
(bad)
das
stc
loopne
xchg
adc
rol
cmp
mov
mov
inc
cli
ja
pushf
xchg
xor
push
paddsb
xor
call
dec
pop
ret
xchg
sub
adc
daa
xchg
jns
mov
add
imul
repz
setl
or
xchg
jb
add
xchg
dec
outs
enter
arpl
popf
sub
shl
inc
push
adc
add
jns
mov
xor
mov
out
sbb
inc
pop
add
jne
fnstsw
dec
or
out
jmp
pop
pop
aam
dec
sti
xchg
adc
and
xchg
in
add
dec
pusha
and
sti
sahf
cmp
cmps
in
mov
scas
test
outs
jo
add
mov
test
ds
xor
in
mov
inc
xor
mov
xor
mov
adc
dec
xor
ja
sti
jb
stos
mov
out
test
loope
xor
jge
das
loopne
or
dec
cmp
icebp
nop
mov
std
add
fnstenv
and
and
mov
ins
or
add
mov
fcomip
mov
jb
xlat
mov
add
lock
ds
add
data16
sar
ror
xlat
lods
push
inc
adc
push
jp
adc
pusha
and
pop
mov
lahf
sahf
int
sbb
sar
out
or
popf
sbb
test
push
iret
and
or
push
out
pushf
jp
pop
adc
pop
in
in
add
push
jno
test
xrelease
inc
test
out
jbe
fsub
sub
shr
sub
inc
cmp
mov
sub
fst
xor
ficom
pusha
aaa
in
xlat
inc
xlat
(bad)
cmp
sbb
bound
xor
mov
add
imul
mov
ins
cmp
ins
das
mov
jnp
in
std
jae
mov
jne
lods
push
pusha
jno
sbb
mov
leave
pop
(bad)
fwait
dec
bound
push
adc
xchg
test
out
adc
jne
cs
jmp
fwait
mov
adc
rol
dec
(bad)
lods
mov
or
daa
rcr
cmc
jbe
dec
std
pop
and
xor
mov
jmp
js
mov
dec
stc
ss
cmc
mov
mov
ins
clc
inc
lock
and
js
scas
std
sbb
mov
sbb
adc
in
sbb
inc
jbe
sbb
or
xchg
jecxz
(bad)
pop
xor
add
or
dec
pusha
cmp
mov
mov
adc
jnp
and
jae
out
(bad)
retf
jae
xor
cs
mov
dec
and
loope
pop
enter
sti
jo
mov
jnp
dec
dec
outs
cld
ds
xlat
daa
push
icebp
(bad)
xchg
xchg
push
mov
push
int3
dec
adc
push
add
cmc
shl
int
mov
inc
mov
jecxz
xor
xchg
loope
push
lods
mul
inc
aam
cmp
pop
cmc
in
stos
sbb
in
stos
repnz
adc
imul
lods
scas
dec
cmp
push
fisttp
std
lods
pop
sub
frstor
bound
mov
int3
arpl
jns
jmp
mov
jmp
repz
ja
neg
xor
sub
adc
vcvtps2dq
shl
cwde
dec
cs
add
pop
add
xor
jmp
and
mov
addr16
rcr
cmp
pusha
dec
cmp
fst
(bad)
clc
add
cmp
sub
push
xor
jle
ins
pop
dec
or
dec
mov
mov
cwde
test
jg
xchg
pop
out
fisttp
xor
lods
nop
push
or
fmul
sbb
xchg
in
imul
lods
sub
shl
jp
clc
adc
popa
repnz
lods
cmp
js
mov
nop
out
pop
sub
pop
jecxz
clc
out
pop
sub
sbb
dec
bound
(bad)
cs
leave
sbb
pop
nop
mov
add
xchg
call
pusha
cmp
pop
or
ret
push
adc
jnp
jbe
inc
push
mov
sahf
retf
dec
mov
xchg
mov
lods
inc
das
sar
clc
add
xchg
bound
push
sahf
sbb
das
adc
pushf
mov
stc
inc
cmc
cli
mov
(bad)
adc
jmp
pop
jne
out
and
mov
sub
adc
sti
jae
push
mov
ret
lds
add
pop
bound
fistp
cmps
sbb
jg
cmps
aaa
push
jp
sbb
scas
cwde
or
sti
call
pop
in
pop
lahf
pop
cmps
inc
add
das
loope
leave
dec
pop
lahf
push
jmp
pop
push
push
mov
fwait
int3
mov
js
outs
movs
(bad)
iret
adc
in
sub
repnz
imul
and
retf
push
and
jmp
adc
dec
and
sub
ret
cmp
xchg
xchg
pop
js
jmp
ds
inc
push
ins
add
std
jg
push
cmps
and
dec
gs
aam
leave
repz
dec
mov
pop
fld
pop
cmp
and
clc
add
clc
call
mov
outs
push
mov
add
mov
add
idiv
lock
pop
sub
mov
ror
(bad)
jne
sbb
mov
aaa
in
popa
rcl
xchg
sbb
push
adc
and
scas
ins
push
lods
rcl
into
ins
(bad)
fadd
cmc
inc
movs
mov
mov
cmc
jne
add
sbb
loop
and
sbb
jnp
es
fiadd
and
push
inc
dec
clc
push
fsubr
rcr
adc
call
stc
push
cmps
daa
mov
pop
retf
inc
push
call
out
pop
inc
jbe
sub
icebp
arpl
sar
out
mov
nop
cmp
mov
pop
sbb
je
in
inc
(bad)
idiv
fdiv
cwde
jg
cld
into
daa
enter
jnp
pop
mov
rcr
fxch
inc
sti
mov
jb
mov
lea
push
sahf
shl
lods
mov
stos
cmps
enter
js
mov
dec
icebp
out
dec
fs
mov
in
xlat
ret
adc
test
mov
push
sbb
push
add
sub
sbb
mov
jp
test
fidiv
mov
or
test
aaa
popf
or
mov
pop
add
cmps
sbb
xchg
sahf
jecxz
sti
mov
bound
jle
fbstp
(bad)
adc
hlt
cmp
(bad)
push
add
xchg
fld
mov
call
out
cdq
arpl
fwait
ss
pop
setb
and
pop
retf
xor
fwait
mov
mov
push
xchg
adc
mov
push
mov
cmc
sbb
and
daa
pop
add
outs
dec
sar
fistp
ins
inc
stos
sub
mov
pop
out
repz
je
push
lods
cmp
lods
popf
push
jbe
jo
in
cwde
dec
mov
cmp
mov
shr
sub
and
cmp
sbb
jo
mov
cmps
sti
and
jno
test
push
mov
xchg
loop
xchg
and
ret
cmp
add
push
and
cwde
adc
pop
inc
into
sahf
shr
test
push
pop
je
cdq
mov
outs
add
push
xchg
or
in
add
mov
stc
sbb
in
pop
adc
jmp
stos
adc
fdiv
popf
push
out
iret
enter
mov
inc
or
hlt
adc
cmp
(bad)
jb
mov
mov
push
push
mov
call
call
sub
xchg
sar
cmps
cmp
jg
mov
call
xchg
mov
push
jmp
std
jns
stc
(bad)
ins
push
sahf
(bad)
cmc
pop
rcl
or
xlat
cmp
push
out
mov
cmp
dec
mov
add
xor
aas
scas
movs
or
imul
xor
cmps
icebp
jmp
cmp
dec
jg
test
in
xchg
or
out
adc
sahf
xor
hlt
add
fiadd
inc
stc
dec
dec
jno
sti
test
(bad)
cmp
cmp
clc
push
adc
cmc
jno
fimul
movs
retf
and
mov
inc
out
jmp
mov
add
cmp
cmp
xchg
pop
jb
iret
adc
cmc
ds
pop
push
inc
pop
cmp
dec
out
inc
(bad)
imul
fwait
adc
sub
cmps
out
lods
xor
ins
xchg
mov
jmp
sahf
sub
add
mov
ret
std
xor
test
push
sbb
popa
loopne
(bad)
jmp
mov
push
retf
mov
mov
jns
ins
pop
jp
cmps
xor
or
jge
loope
int3
(bad)
xor
inc
add
xchg
push
jo
xor
xlat
cmp
mov
shr
or
sti
add
sub
dec
ds
nop/reserved
es
int
dec
xor
neg
sbb
mov
cmps
dec
mov
or
push
sub
push
push
popf
retf
not
in
popa
cmp
sahf
cdq
loopne
jns
retf
std
repnz
out
pusha
stc
mov
inc
mov
jp
rcl
gs
or
mov
or
pop
cmc
aad
lahf
aas
sahf
or
mov
aad
push
dec
pop
and
hlt
in
sub
cmp
inc
out
dec
push
push
mov
push
jns
sub
xor
xchg
xlat
jge
sbb
pop
test
repz
mov
fisub
clc
dec
lahf
dec
sar
icebp
es
nop
and
mov
dec
jecxz
mov
out
or
call
imul
div
daa
icebp
je
cmp
dec
xor
push
and
jmp
mov
mov
shr
mov
stc
fsubr
jae
cdq
xchg
xchg
mov
sti
mov
popa
mov
push
push
sti
sbb
mov
pop
shl
jnp
(bad)
iret
ds
inc
jne
inc
pop
mov
ds
stos
jge
add
and
mov
sbb
xchg
push
inc
aad
mov
gs
retf
sbb
adc
jecxz
mov
jmp
sub
inc
xchg
lock
sub
nop
aaa
es
pop
sub
jl
and
inc
shl
dec
sub
xchg
adc
je
inc
cmp
jb
lods
pop
nop
getsec
repnz
fldenv
jmp
ins
add
or
ret
jbe
ins
adc
outs
mov
in
xchg
inc
xor
mov
push
popf
imul
xor
mov
or
adc
imul
ret
cmps
or
bound
fbstp
mov
and
sub
or
add
loope
cmp
stos
clc
or
in
push
fiadd
sbb
ror
inc
jns
ins
inc
sub
or
test
push
or
test
inc
mov
jmp
imul
rcr
repnz
aad
shl
push
hlt
clc
(bad)
xor
xor
push
je
xchg
mov
mov
fisub
in
dec
arpl
pop
mov
aad
sti
cvtps2pi
test
xchg
push
pop
add
mov
mov
adc
rol
ins
sbb
push
js
dec
jg
pop
in
outs
lock
adc
fwait
mov
adc
std
or
lea
mov
(bad)
(bad)
stc
mov
dec
jp
ds
jle
dec
or
or
or
lahf
sub
popa
sahf
lods
mov
fnstcw
push
pop
pop
int
sub
mov
into
movs
adc
jo
rcl
shr
cmp
add
ror
xchg
inc
pop
push
cli
outs
sti
test
fcomp
xor
inc
out
cmp
cli
je
(bad)
pop
push
fimul
lods
sbb
scas
and
cmp
mov
adc
lods
fld
inc
aam
(bad)
jmp
and
out
push
sub
cdq
xor
or
das
leave
movs
dec
nop
test
scas
popf
or
cmp
repnz
or
lds
pop
out
test
mov
sub
fcom
jg
inc
or
mov
jp
inc
shl
push
scas
ds
or
pop
frstor
scas
rcl
lock
test
in
mov
jnp
pop
scas
fsub
clc
in
jp
xchg
push
leave
or
out
out
neg
xor
icebp
cld
leave
icebp
out
stc
sbb
mov
test
rcr
es
adc
inc
cwde
cmp
cli
movs
sbb
idiv
fwait
mov
mov
add
out
xor
aaa
mov
test
popf
scas
mov
scas
xor
adc
movs
(bad)
dec
push
shl
lds
lahf
imul
std
retf
sbb
sub
and
lock
aas
je
xchg
stos
test
enter
sub
ror
popa
add
ror
mov
out
fldenv
push
mov
dec
hlt
call
mov
cli
and
push
ret
sub
aam
mov
repnz
mov
mov
jmp
push
lea
mov
fild
xchg
in
push
pusha
push
outs
push
enter
xchg
repz
sub
push
mov
pop
jmp
(bad)
retf
mov
mov
mov
lods
fcom
sub
mov
icebp
pop
mov
jl
inc
cmp
mov
adc
mov
add
rcr
jb
std
popf
xchg
mov
dec
mov
xchg
es
inc
pop
push
adc
push
fdivrp
xor
ret
sub
mov
pop
mov
mov
xchg
jmp
mov
sbb
ror
daa
mov
sti
pushf
sbb
movs
push
outs
jmp
dec
mov
jmp
dec
add
fld
dec
mov
sbb
test
and
inc
mov
pop
retf
mov
adc
aaa
lds
in
ins
or
int3
cmp
aaa
mov
pushf
mov
sti
pop
test
cwde
ins
cmp
or
rcl
rcr
clc
ins
out
mov
and
in
out
lods
stos
mov
cmp
mov
mov
cli
nop
clc
fdivr
jbe
sbb
xchg
cmp
jmp
mov
push
gs
stc
inc
nop
ret
inc
icebp
mov
lds
dec
ss
or
jl
ror
or
add
jp
shl
sbb
clc
sar
ja
and
pushw
push
loope
sub
fadd
neg
imul
add
test
dec
and
dec
mov
jg
fwait
call
mov
test
mov
fnstcw
loopne
mov
jl
inc
dec
imul
std
ja
xor
rcl
or
iret
jmp
neg
ret
mov
cmp
sub
bound
push
mov
pop
mov
pushf
cmp
jbe
nop
xchg
pop
mov
loop
inc
call
outs
aam
xlat
push
cmp
test
movs
cmp
and
call
outs
ror
jmp
inc
shr
mov
dec
pop
xor
jne
cmc
aas
and
mov
inc
adc
sub
dec
and
xchg
(bad)
(bad)
aaa
or
js
cli
outs
jg
mov
jmp
pop
ins
push
sub
int3
or
ret
push
fsub
sbb
sbb
adc
into
push
mov
and
sub
sbb
or
push
sahf
iret
in
mov
fwait
in
and
daa
xchg
xchg
jmp
xor
push
push
xor
dec
xor
imul
and
scas
mov
sbb
in
stos
adc
dec
cmp
sub
push
jns
nop
push
cwde
imul
cwde
in
or
call
pop
hlt
aad
in
icebp
ror
loope
pop
xor
inc
pop
push
mov
fbstp
or
inc
stos
test
mov
jae
inc
jb
mov
xor
mov
xor
outs
and
(bad)
and
push
nop
pop
cwde
jb
xlat
push
pop
addr16
stos
cmp
push
stc
mov
nop
push
inc
pop
push
adc
outs
clc
fisubr
jg
lods
(bad)
icebp
scas
sbb
cmps
std
mov
stos
out
inc
mov
and
retf
fld
xor
push
test
dec
mov
push
in
stos
pushf
mov
out
inc
out
dec
lds
adc
mov
jns
mov
mov
ja
sub
push
mov
xchg
rcl
pushf
push
xor
cmp
mov
push
lods
jnp
xchg
dec
lods
push
or
in
push
xchg
js
xchg
cmp
sub
test
enter
outs
idiv
or
ds
adc
sub
stos
or
xchg
fisub
inc
or
pop
mov
test
jle
dec
or
movs
outs
outs
add
das
pop
ds
xor
dec
xchg
cmp
sbb
movs
rcl
mov
mov
mov
movs
retf
push
movs
xchg
push
adc
aad
aad
mov
mov
loope
push
out
das
(bad)
cmc
inc
mov
cmc
push
inc
es
push
or
adc
cmp
dec
pop
pop
and
mov
sbb
sbb
and
call
or
add
mov
cli
in
jl
or
mov
aam
xchg
cmp
xor
pop
jp
mov
mov
adc
cs
icebp
xchg
loop
cwde
xchg
or
adc
fbstp
cmp
add
jnp
cwde
clc
mov
daa
ffree
push
aaa
repz
mov
fcomi
cli
in
int
test
cs
mov
scas
cwde
js
popa
aaa
ins
mov
mov
ret
cmps
les
cmps
pop
inc
out
call
mov
push
pop
adc
pop
mov
js
jb
cmp
mov
adc
cmp
sbb
scas
ds
je
repnz
(bad)
call
ss
jae
jl
adc
add
inc
fdivr
dec
add
movs
aaa
cmp
and
and
retf
sbb
adc
ret
jle
xor
mov
pop
pushf
outs
cmc
push
test
mov
sbb
lock
pusha
arpl
aaa
add
dec
push
cmp
sbb
xor
shl
ds
or
push
repz
fcomp
out
add
mov
cmp
(bad)
xchg
jp
mov
dec
inc
push
and
pop
outs
out
and
inc
xor
movs
test
int
mov
adc
bnd
inc
mov
add
out
dec
cdq
leave
inc
jne
cdq
std
loop
cmp
inc
jae
fidivr
cmc
retf
pop
adc
retf
shl
cwde
icebp
mov
mov
add
cs
inc
ret
scas
dec
xor
into
popf
in
cld
sti
mov
lea
int3
outs
gs
mov
adc
add
xchg
neg
xchg
xchg
cwde
hlt
push
enter
cmp
cmp
cmp
movs
mov
aaa
jmp
lods
(bad)
aad
enter
and
pop
dec
int3
push
xor
iret
lds
in
and
inc
cmp
call
jge
add
xchg
outs
aad
enter
mov
rol
jmp
jno
mov
adc
xchg
enter
push
enter
dec
dec
aas
push
out
dec
inc
test
or
sar
cmp
imul
or
ins
pop
cmp
addr16
test
rcl
fisttp
shl
ds
(bad)
jb
pop
arpl
repz
aad
mov
or
loopne
icebp
and
mov
push
inc
ja
jecxz
mov
popa
in
test
adc
sbb
push
outs
addr16
test
movs
shl
call
sub
push
jbe
iret
xor
das
dec
xchg
cmps
cmp
int3
repnz
jle
test
push
cmp
sbb
rol
inc
mov
mov
push
lock
sbb
mov
jae
xchg
adc
push
retf
add
and
sub
jecxz
in
jg
pop
ds
jp
mov
test
das
cmc
in
lock
shl
sub
push
(bad)
jg
in
in
retf
mov
arpl
(bad)
iret
xor
dec
das
jle
movs
xor
sbb
and
rol
cdq
hlt
and
shr
xor
mov
mov
(bad)
mov
test
mov
stos
inc
call
or
push
jbe
(bad)
call
push
(bad)
cmps
call
test
add
shr
sar
and
inc
daa
cld
jns
(bad)
retf
jo
add
retf
rcr
cmp
sbb
jmp
sub
and
popa
add
mov
pop
mov
call
fs
sbb
push
repz
pop
in
xchg
mul
xchg
push
xor
(bad)
aaa
and
jl
lock
into
retf
cli
cmp
retf
ins
imul
cmps
lods
jne
hlt
push
add
ins
sub
cli
adc
push
cmp
pop
test
loop
(bad)
fidivr
or
pop
xchg
jnp
inc
xor
mov
movs
outs
push
mov
lahf
mov
ror
shl
ins
adc
retf
jge
and
hlt
adc
jne
dec
xchg
add
cmps
push
inc
sahf
pop
inc
inc
jb
repnz
sbb
jmp
xchg
or
mov
mov
into
cmp
xchg
ins
loopne
enter
mov
in
(bad)
jbe
jb
sbb
jae
jne
xor
pop
jecxz
cwde
mov
xchg
out
data16
xchg
leave
cmp
inc
mov
popa
xor
pusha
into
scas
iret
pop
daa
mov
cli
and
xchg
and
or
xchg
mov
push
or
or
or
call
mov
mov
test
jo
pop
and
mov
pop
adc
jne
retf
out
jae
mov
jl
jecxz
stos
es
mov
(bad)
or
(bad)
jno
pop
sub
push
daa
aas
neg
dec
jl
jns
dec
push
push
lds
adc
adc
mov
xor
inc
xor
js
jno
adc
stos
mov
adc
out
iret
mov
mov
jmp
imul
sub
hlt
xchg
xchg
sbb
or
fwait
xchg
pop
jl
dec
ror
and
xchg
in
inc
ret
push
xlat
bound
and
pop
retf
lods
mov
and
leave
inc
lods
dec
pop
ret
cli
ds
icebp
daa
addr16
idiv
pop
jo
cld
mov
push
stos
lods
push
dec
in
div
jnp
push
iret
xchg
enter
mov
test
push
scas
or
adc
cld
sbb
adc
pop
mov
mov
ficomp
sub
arpl
inc
and
fimul
js
sub
sbb
sbb
lods
cmp
pop
jecxz
sub
or
fstp
dec
aaa
mov
sbb
pop
or
sbb
outs
add
or
jle
push
pop
das
jae
mov
aaa
pop
adc
push
outs
scas
loop
sbb
sub
popa
mov
cmp
scas
das
xchg
dec
dec
mov
imul
icebp
xor
es
aaa
loop
fisttp
out
sbb
sub
dec
xor
push
push
retf
add
stc
dec
(bad)
xchg
xchg
aam
call
push
aaa
(bad)
rcl
mov
(bad)
jb
jne
std
sahf
mov
(bad)
clc
nop
retf
js
lods
sub
xor
adc
(bad)
and
or
stos
dec
out
test
mov
cmc
jp
mov
add
vpsubusw
idiv
es
loope
mov
or
mov
cmp
sub
test
es
gs
xor
inc
sub
adc
(bad)
ret
mov
mov
sbb
(bad)
mov
cvtdq2ps
pop
leave
mov
or
cwde
addr16
ror
dec
retf
xchg
femms
outs
jbe
(bad)
inc
rcl
iret
out
jns
mov
add
pop
gs
into
pop
xlat
xchg
jne
in
add
xchg
movs
out
fnstcw
push
jecxz
cmp
movs
mov
sbb
jle
add
jbe
adc
pop
sub
mov
sub
(bad)
int
mov
neg
ss
test
mov
dec
push
lea
sbb
add
dec
int
paddsw
cmps
repnz
cld
retf
or
icebp
mov
shr
pop
out
cmp
inc
add
xchg
ror
xchg
test
push
cmp
sub
inc
add
jle
inc
data16
int3
push
rcl
mov
add
or
mov
push
mov
sub
pop
inc
ds
fild
lods
xchg
sbb
adc
jl
nop
(bad)
test
and
inc
loope
les
out
pop
or
icebp
mov
ret
scas
retf
in
dec
sar
pop
add
mov
js
push
aaa
or
fs
sbb
imul
push
mov
fld
dec
adc
and
out
and
loop
mov
inc
call
push
push
dec
fnstsw
xlat
add
ud1
jne
inc
or
or
or
aad
cmc
out
sbb
addr16
mov
fdiv
aad
add
cmp
leave
test
test
jns
cwde
and
pop
enter
aas
and
cwde
test
dec
int
pushf
bound
xor
(bad)
outs
shr
xchg
xchg
pop
mov
inc
fisttp
pusha
push
and
loopne
(bad)
mov
pushf
std
data16
mov
lods
jb
add
mov
jmp
or
mov
popf
pop
adc
icebp
sbb
cli
add
mov
ds
jbe
or
enter
inc
cmps
xor
std
mov
ds
ror
ja
mov
ja
mov
mov
stos
mov
or
out
out
dec
jb
adc
stos
mov
add
inc
jg
mov
xor
sub
out
aam
jne
mov
lds
mov
repz
xchg
jge
shr
ret
xlat
imul
pop
out
xchg
clc
jb
adc
push
popf
push
addr16
mov
lahf
pop
cmps
adc
mov
adc
sbb
imul
leave
push
lods
data16
xor
mov
rcr
cs
cdq
(bad)
cmp
shr
mov
jne
(bad)
pop
leave
das
call
lock
mov
movs
outs
imul
add
leave
mov
or
nop
pop
iret
pop
sar
add
jle
mov
pushf
cmc
lods
xchg
mov
dec
outs
add
in
imul
sbb
fnstenv
sbb
dec
je
pop
ret
add
bound
pop
pop
bound
fidivr
adc
ret
stos
sbb
sbb
cld
lock
leave
and
dec
ret
popf
enter
lods
cwde
iret
inc
pop
ret
pop
fwait
mov
retf
in
dec
test
stos
xor
pop
jmp
pop
ss
repz
loop
(bad)
xchg
hlt
aam
arpl
jo
fild
ror
jmp
jle
mov
fst
mov
div
inc
or
inc
test
push
pop
cmps
add
add
ficomp
sbb
and
xchg
sahf
lods
das
push
inc
sub
scas
cli
and
cmp
cmp
xchg
(bad)
xlat
into
mov
out
mov
mov
pop
call
gs
loope
inc
ins
add
push
push
in
pushf
addr16
popa
and
jae
aad
aas
inc
fidivr
movs
int
aad
jns
mov
mov
mov
fcom
mov
pop
loope
(bad)
data16
push
das
popf
leave
cmp
fs
test
mov
xor
push
stos
shl
jns
inc
or
jae
pusha
xchg
and
aaa
scas
retf
ucomiss
mov
xor
in
cli
aaa
jns
sti
leave
jecxz
imul
jg
ror
pop
test
or
cmc
push
jg
ins
mov
push
mov
loope
mov
lea
mov
mov
adc
mov
movs
push
mov
mov
or
leave
imul
std
inc
push
dec
test
fcom
loopne
xchg
pop
or
jmp
add
pop
cmc
inc
push
arpl
xor
cmp
cmp
aad
lahf
pop
loop
jbe
repnz
ret
imul
pop
pop
into
dec
aas
pop
sahf
retf
iret
or
or
(bad)
fwait
inc
sbb
cmp
pop
xchg
scas
add
cmp
mov
add
cdq
pop
(bad)
push
jo
cmp
sbb
(bad)
cs
jns
xchg
sub
cmps
cmps
xchg
mov
or
ret
cdq
js
add
shr
and
mov
repz
push
mov
sub
(bad)
mov
pop
cwde
cmp
fsubr
cmps
ret
dec
cmps
jb
jge
pop
sbb
lods
mov
cli
and
lahf
fcmovu
pusha
(bad)
into
(bad)
outs
jl
shl
add
xor
jne
ret
mov
xchg
add
dec
mov
cld
pop
shl
xor
jle
and
data16
adc
fisub
pop
cld
sahf
pop
dec
mov
cmp
loop
out
les
push
sub
lds
(bad)
mov
mov
std
adc
dec
pop
push
pop
lds
fdiv
dec
and
push
inc
sub
mov
cmp
add
cdq
imul
stos
inc
repz
test
push
push
adc
cmps
cdq
in
mov
jbe
or
ja
xor
inc
scas
sti
adc
sub
cmp
add
inc
popf
pop
xor
push
(bad)
mov
mov
inc
jmp
sbb
scas
ror
fidiv
cmp
call
xchg
xor
xchg
push
xchg
outs
dec
sti
ret
xor
fnstsw
dec
or
sub
stos
fdiv
sbb
ret
jns
(bad)
sbb
adc
in
and
mov
repnz
ds
pop
rol
sub
mov
cmp
mov
int
call
mov
jecxz
ret
stc
xor
sub
jbe
ds
push
repz
add
adc
lea
pop
hlt
mov
inc
out
cmp
pop
dec
inc
stos
sti
data16
mov
jmp
mov
or
mov
shr
pushf
fdivr
popf
loopne
jp
or
sub
push
fwait
ret
sbb
jne
mul
sub
and
jmp
in
sub
inc
call
adc
xor
outs
inc
add
lock
sbb
sub
je
bound
xor
(bad)
adc
or
fsub
xchg
push
cmp
cmp
leave
cdq
adc
shl
mov
out
jns
adc
adc
xlat
icebp
jno
jnp
pop
or
push
xor
mov
out
or
push
mov
push
mov
movs
jnp
and
popa
mov
stc
into
sbb
jge
leave
icebp
add
hlt
jg
mov
pop
mov
mov
mov
xchg
adc
sbb
vmread
aaa
retf
xor
sbb
loop
xor
fucom
sub
fldenv
mov
sahf
and
pop
(bad)
xor
ins
loop
in
lock
or
sbb
retf
jo
adc
or
clc
and
or
sub
pop
cmc
nop
sbb
aaa
out
(bad)
repnz
cmp
jmp
lahf
mov
enter
cld
into
jb
test
cmps
push
push
mov
adc
icebp
xchg
add
sub
sbb
xchg
xchg
inc
icebp
mov
out
imul
jp
mov
dec
xrelease
push
jns
test
outs
and
pushf
rol
retf
out
in
ins
aad
mov
hlt
mul
rol
imul
inc
cmp
std
sbb
dec
cld
pop
(bad)
repz
aas
pop
imul
dec
in
fcom
dec
mov
jle
std
sub
outs
jge
push
mov
mov
ds
dec
cmp
call
in
jns
add
ret
and
mov
shl
shl
icebp
sub
push
and
and
push
inc
xor
dec
or
jmp
mov
in
les
cmp
sbb
adc
(bad)
jns
jmp
or
adc
jns
cmc
cmp
push
or
jns
xchg
pushf
or
jmp
xchg
mov
sub
adc
mov
mov
jg
(bad)
and
(bad)
icebp
xlat
scas
jg
jmp
scas
(bad)
call
xchg
mov
mov
jne
out
scas
aam
in
packuswb
add
lahf
into
popa
add
mov
shr
mov
mov
sub
mov
jno
jecxz
fsubr
sar
jmp
add
fcomp
pop
jmp
xor
arpl
mov
ss
or
mov
imul
imul
nop
inc
mov
rol
test
pop
inc
test
pop
pushf
out
test
adc
scas
cmp
popf
jbe
and
jae
in
stos
xor
pop
jnp
mov
jl
sbb
jnp
inc
inc
icebp
add
fldcw
lods
sub
and
mov
ins
int
imul
in
fidivr
or
sbb
mov
call
outs
aaa
(bad)
push
jecxz
sbb
mov
into
or
dec
fiadd
mov
ds
jmp
sar
les
adc
or
cmp
jge
repnz
(bad)
mov
inc
in
push
dec
jns
cmps
sbb
(bad)
test
sub
xchg
fidivr
push
ss
(bad)
test
sti
aam
push
pop
leave
lods
fxtract
adc
lods
popa
add
jecxz
ds
ins
and
int
mov
xchg
xchg
syscall
pop
mov
push
fadd
mov
addr16
test
dec
adc
mov
xchg
push
(bad)
ss
mov
pop
jl
dec
stos
xchg
mov
push
daa
clc
call
or
dec
out
lock
das
sbb
in
sbb
cli
add
dec
dec
mov
cmp
and
les
mov
add
outs
sbb
rcr
inc
pop
add
mov
and
sub
clc
sbb
out
xchg
daa
pop
jge
test
mov
bnd
mov
iret
int
leave
lods
cs
cmp
out
jp
push
xchg
retf
jp
inc
or
gs
sbb
add
dec
sub
jecxz
xchg
sbb
mov
dec
mov
outs
and
sti
aas
dec
pop
and
add
hlt
xor
sub
and
push
fmul
cmp
aad
fcmovnbe
iret
out
mov
jl
pop
xchg
jb
sbb
sub
in
and
jnp
xor
std
jl
mov
push
pop
xchg
scas
pop
call
mov
push
popa
aaa
(bad)
jmp
femms
sar
inc
inc
pushf
pushf
lods
push
das
je
daa
into
add
pop
test
xchg
mov
dec
mov
movs
jge
sub
mov
lea
push
mov
loopne
(bad)
jns
xchg
ret
lock
(bad)
mov
lods
mov
xchg
out
outs
rcl
jae
sub
push
xor
push
sbb
cmps
iret
in
(bad)
dec
arpl
mov
sbb
sahf
xchg
mov
adc
xchg
lahf
out
aad
sub
out
and
xor
aaa
movs
cmp
mov
cld
push
movs
sub
je
test
or
lds
test
sub
popf
cmp
push
mov
repnz
inc
adc
das
shr
ss
sub
sub
mov
mov
inc
cld
ret
(bad)
stos
sbb
push
inc
sbb
sbb
adc
test
push
fst
pop
(bad)
ficom
aas
xchg
sahf
push
push
xlat
pop
popf
mov
sbb
je
out
lahf
fisub
push
pop
gs
xchg
mov
xor
lea
inc
mov
neg
out
call
in
push
jo
clc
clc
imul
jno
cmp
and
std
call
sub
sub
loopne
int
scas
icebp
in
js
inc
jo
mov
cs
fnstsw
push
jne
mov
addr16
add
pop
sbb
mov
dec
jp
mov
adc
retf
mov
aam
fs
ret
bt
jg
and
dec
mov
repz
mov
pop
jle
push
pop
addr16
adc
faddp
(bad)
clc
(bad)
sbb
cwde
and
mov
dec
in
add
pop
int3
stc
xor
or
or
xchg
xor
cmp
sbb
popa
test
pop
aaa
or
int
call
int
mov
nop
les
loope
sbb
retf
push
jle
ins
lods
into
sbb
aaa
cli
in
jge
sub
retf
(bad)
mov
es
scas
dec
adc
fwait
jg
ffree
test
scas
inc
or
or
cld
jbe
adc
ret
std
and
jg
out
adc
fild
aam
jp
popa
push
shr
mov
rcr
lock
add
fisttp
push
add
nop
fcomp
mov
or
loope
and
out
xor
movs
adc
das
scas
xor
imul
xchg
xlat
push
mov
mov
in
scas
mov
into
out
jl
mov
pop
push
sbb
int
out
inc
in
or
and
jp
mov
movs
gs
addr16
xchg
(bad)
add
test
ja
mov
int3
adc
call
mov
stos
call
es
jno
and
mov
pop
mov
mov
mov
daa
not
cmp
xchg
fdiv
pop
inc
or
xchg
loope
xchg
mov
xchg
jo
jle
xchg
inc
push
inc
sbb
int3
mov
push
retf
mov
or
or
ja
retf
lock
adc
dec
stos
xchg
and
in
jno
out
imul
fwait
movs
dec
in
ror
iret
mov
jno
dec
sub
out
lea
jge
lods
lea
add
(bad)
jne
push
mov
(bad)
mov
add
sbb
cmps
push
shr
mov
sub
imul
in
jae
and
sub
ja
movaps
fsubr
and
stc
into
(bad)
ret
and
cld
out
mov
popa
gs
loopne
in
lds
mov
mov
mov
shr
loope
in
fcom
sbb
pop
in
stc
test
iret
mov
mov
mov
jg
sbb
icebp
xchg
fdiv
mov
dec
fmul
outs
xchg
mov
ret
cs
xchg
es
xchg
xor
push
push
mov
jo
int
sbb
push
icebp
and
mov
xchg
and
mov
jg
out
and
push
jl
cmp
jmp
push
lods
push
shr
adc
fdiv
retf
mov
adc
or
xchg
add
xchg
add
or
or
add
xlat
cwde
push
in
sub
mov
pop
aaa
pushf
dec
in
ins
pop
pop
(bad)
and
jle
mov
jle
lock
push
mov
dec
xchg
lock
das
enter
push
add
cs
(bad)
(bad)
fsub
jnp
pop
out
fist
xchg
or
adc
pop
pop
in
mov
add
rol
and
test
sub
jg
test
dec
(bad)
jns
movs
jmp
fcom
cli
mov
or
mov
xchg
jl
sbb
mov
jle
jae
inc
xchg
fwait
mov
das
jnp
ss
dec
bound
lods
stos
or
cwde
call
pop
les
mov
aam
mov
sbb
enter
cmp
cmp
mov
cdq
sub
stc
lods
push
inc
(bad)
jg
ss
xchg
push
cs
sub
cmps
out
mov
inc
out
dec
sub
pop
sbb
push
or
jae
pop
cmp
mov
ss
imul
xchg
adc
enter
das
and
call
jae
imul
push
aas
movs
(bad)
jmp
sahf
and
mov
mov
test
std
repnz
(bad)
fisub
pop
jnp
mov
add
out
xor
and
cmovle
jmp
fsubr
jb
xchg
jne
into
test
out
aas
sub
iret
in
ret
loope
mov
ins
mov
in
and
fadd
and
xchg
mov
add
sub
outs
lds
pop
inc
int3
retf
inc
ja
mov
sub
or
push
out
or
dec
outs
(bad)
cs
std
repz
mov
test
add
or
dec
movs
and
scas
cli
dec
jbe
int
dec
push
(bad)
loopne
dec
neg
jnp
fist
sub
mov
jae
cmp
imul
sbb
daa
test
sahf
ret
add
sbb
aas
xor
loop
and
out
cmc
rol
push
test
sub
dec
adc
fistp
aas
jbe
cmp
(bad)
enter
sahf
inc
imul
xor
mov
sub
scas
fidiv
mov
popa
sub
pop
sub
fisttp
or
into
shl
and
jecxz
pop
jns
daa
adc
(bad)
jmp
pushf
mov
mov
test
pop
and
sub
mov
and
(bad)
cmp
add
shl
bound
js
xchg
add
je
mov
push
psubw
push
push
stos
arpl
iret
jno
fcomp
or
bound
ret
inc
stos
xor
add
arpl
pop
sub
pop
div
and
hlt
pop
call
and
sub
test
and
mov
cmp
retf
fmul
jmp
and
(bad)
xor
mov
sbb
inc
and
sub
inc
nop
outs
fdiv
adc
adc
shl
retf
imul
loope
or
dec
nop
ds
and
out
(bad)
push
ret
es
(bad)
daa
into
sahf
cmp
cmp
jne
and
in
sbb
retf
mov
mov
movd
inc
push
ins
data16
movlps
adc
lahf
rcl
ja
push
pop
js
and
push
add
xor
push
call
fidiv
adc
int3
(bad)
mov
inc
xchg
shr
jl
mov
xor
cmp
xor
jmp
add
cmps
pusha
adc
dec
sbb
xchg
retf
(bad)
pop
dec
fld
ins
ss
jno
jno
popf
jb
add
test
mov
call
ins
mov
test
adc
xor
sti
lods
dec
das
adc
adc
jo
xor
add
sbb
mov
lahf
inc
pop
fsubr
adc
call
or
retf
fwait
mov
mov
iret
xchg
loope
test
pop
in
or
add
in
and
pop
mov
add
loopne
lods
jo
les
(bad)
mov
(bad)
fisubr
mov
cmps
pop
xor
dec
cmp
push
push
xchg
add
enter
pop
outs
xchg
add
or
mov
leave
inc
cmp
xchg
dec
mov
or
popf
add
pop
cmp
(bad)
lahf
fwait
jecxz
adc
sub
and
inc
dec
jns
mov
test
ds
xor
lahf
shr
jp
cmp
push
mov
jle
and
sub
bound
mov
push
mov
dec
dec
adc
jo
inc
mov
mov
pusha
mov
ror
dec
add
mov
fnsave
int3
mov
jb
sbb
arpl
sub
popf
dec
add
leave
inc
and
rcr
(bad)
test
fdiv
test
out
pop
dec
mov
pop
in
ror
jl
cmp
shl
int3
addr16
retf
cld
jg
mov
or
pusha
and
push
jb
in
(bad)
push
push
gs
inc
pop
jge
dec
and
in
adc
call
pop
lahf
outs
or
out
loope
hlt
jne
(bad)
ins
dec
push
mov
inc
add
into
div
rcr
add
jo
jo
cdq
cmp
jmp
shl
jg
sbb
addr16
cdq
inc
pop
dec
jae
pop
aad
scas
jl
cmp
mov
or
xchg
ret
dec
add
mov
and
imul
xor
add
out
out
inc
mov
fnstsw
jae
pop
cmc
ins
leave
call
mov
addr16
sbb
icebp
fild
sub
inc
mov
add
fstp
icebp
stos
aam
xor
gs
add
in
adc
push
or
mov
sti
loop
stos
xchg
in
mov
test
inc
mov
inc
dec
icebp
inc
jle
push
jmp
retf
mov
bound
not
ins
out
sbb
clc
add
stc
imul
adc
in
xchg
fnstcw
jmp
pop
ins
dec
aaa
dec
cmp
mov
pusha
xor
push
daa
enter
or
retf
jne
sar
jge
in
add
es
dec
mov
sbb
fist
out
sti
sub
aas
dec
fmul
stos
xor
cdq
addr16
adc
movs
fadd
ss
scas
sub
or
add
inc
jl
call
fld
ficom
lods
mov
add
push
sbb
(bad)
in
mov
mov
loope
jge
adc
arpl
test
mov
retf
jne
lods
push
(bad)
movs
nop
fldcw
cmp
sub
and
jl
sahf
test
xor
pop
jbe
ror
sub
in
mul
stos
pusha
ret
rcl
loope
xchg
mov
das
movs
out
pop
mov
popa
and
add
xchg
cli
pop
xor
add
inc
or
mov
addr16
ds
xor
jl
fstp
das
shr
adc
add
sub
mov
dec
rcr
cs
pop
xlat
(bad)
cmc
sub
adc
fistp
leave
xchg
xor
xchg
ret
shr
add
sahf
add
mov
inc
jmp
mov
jns
scas
mov
outs
test
scas
scas
cmps
in
cmp
sbb
jecxz
sbb
push
pop
xchg
mov
shl
in
xchg
push
retf
stos
stos
mov
loope
ja
rcr
std
(bad)
mov
aaa
(bad)
fcmovb
jae
xor
xor
retf
jecxz
adc
mov
mov
imul
jle
jbe
jp
lods
dec
cmps
add
sbb
cmp
rcr
aam
pop
jmp
scas
loopne
mov
out
xchg
mov
and
dec
mov
add
loope
cmps
test
fisub
fsubr
fs
sti
je
mov
jnp
ja
loop
cmc
cmc
pop
cs
mov
int3
xchg
jnp
cmp
lods
test
cli
stos
test
sbb
and
adc
xlat
out
cmp
adc
bound
jae
adc
(bad)
mov
nop
push
push
add
sahf
jne
arpl
push
inc
pop
xchg
arpl
test
xchg
fadd
xchg
lods
(bad)
mov
sub
xchg
sahf
add
jp
cmps
fsub
mov
cdq
cld
cwde
mov
push
mov
lahf
and
or
sub
fwait
dec
or
dec
push
mov
fwait
pop
add
retf
out
sar
stc
and
stc
gs
adc
jo
dec
leave
cmp
ins
fbstp
fcomp
mov
inc
lahf
xor
sbb
lds
sub
mov
clc
aaa
fwait
cmp
pop
out
push
xchg
fs
mov
jb
mov
pop
push
outs
and
sti
mov
test
cwde
idiv
jmp
call
aad
jmp
outs
call
xor
imul
fst
and
(bad)
fdiv
jnp
in
adc
ror
and
xchg
ret
jo
lea
cdq
imul
inc
mov
popf
mov
inc
je
add
and
push
cmp
fist
js
sar
mov
adc
(bad)
stos
push
popa
(bad)
pusha
xchg
daa
cmp
xchg
push
ds
fnstsw
ret
loop
pop
jmp
inc
outs
mov
jl
mov
and
js
bnd
loopne
mov
fnsave
imul
std
out
xor
jmp
xchg
inc
cmp
les
(bad)
int3
xchg
add
jns
rol
fldenv
fdiv
in
jne
xchg
cwde
stos
stos
jno
xchg
leave
cdq
push
test
mov
hlt
mov
sub
je
mov
loope
sbb
pop
fsubr
mov
(bad)
xor
add
xor
jmp
add
push
aad
mov
icebp
es
sbb
shr
mov
cmp
or
xchg
dec
shr
push
int
xchg
iret
jmp
outs
mov
xor
xlat
adc
out
icebp
outs
jmp
idiv
add
js
outs
loopne
pop
adc
int3
push
inc
clc
xchg
out
cmp
in
mov
lods
aam
sbb
xchg
cmc
mov
sub
inc
les
jno
les
sub
loope
xchg
jecxz
pop
jmp
int3
push
lds
xchg
pop
push
enter
or
dec
aam
dec
xchg
imul
ret
gs
adc
cmp
ret
(bad)
sbb
lock
sub
mov
dec
vsqrtss
iret
mov
pop
imul
in
ds
inc
mov
sub
movs
mov
ror
(bad)
fwait
daa
mov
sbb
(bad)
mov
add
mov
jmp
cli
pop
pushf
mov
xchg
dec
daa
dec
jno
aam
or
arpl
test
or
popa
cli
jge
or
cmp
and
xor
pushf
inc
loop
dec
nop
repnz
mov
cdq
loope
xchg
(bad)
fwait
aad
aam
mov
out
mov
outs
adc
fbstp
and
out
leave
push
add
cmp
cmps
sti
push
int
push
fbstp
mov
dec
inc
movs
popa
and
xchg
pop
jae
dec
pop
test
or
and
adc
xlat
add
iret
xchg
sahf
fsubr
sar
in
pop
sahf
aas
(bad)
mov
cdq
imul
push
inc
daa
xchg
mov
mov
xlat
xlat
int
pop
jp
movs
pushf
out
add
push
add
fwait
cmp
hlt
fisubr
jge
sti
inc
mov
fldcw
cli
inc
cmps
and
pop
or
jne
push
xchg
sbb
loopne
imul
in
je
and
fmul
dec
xor
dec
mov
popa
data16
push
out
and
xchg
xor
cs
push
push
lea
jne
cdq
test
rcr
mov
and
ret
mov
mov
pop
add
addr16
call
xchg
imul
daa
sub
adc
mov
xor
sub
(bad)
jmp
xor
pop
xchg
pusha
pusha
mov
and
rol
mov
addr16
das
pop
dec
(bad)
imul
push
cmp
outs
sbb
xchg
call
xor
test
cmp
cdq
mov
mov
push
movs
xor
dec
retf
inc
je
cmps
aam
jnp
push
in
jo
pop
xor
mov
loope
aas
in
test
adc
jle
xor
std
or
leave
xchg
imul
int3
pop
sub
add
lods
jp
int3
adc
mov
jmp
dec
sbb
cmps
xor
pusha
mov
add
sub
adc
inc
outs
pushf
add
add
cdq
mov
xor
xchg
dec
jne
or
cmp
punpckhdq
stc
push
cmps
inc
mov
scas
and
adc
shl
adc
call
jnp
push
mov
lock
out
mov
or
add
sbb
and
add
popf
mov
xor
mov
mov
retf
jle
cmp
je
cmp
das
mov
(bad)
in
push
into
addr16
jo
inc
add
fcomip
jmp
xor
cmp
and
cmp
ja
fld
gs
inc
jmp
xor
xchg
stos
aad
mov
sbb
rol
xor
cmp
mov
je
pop
dec
cli
cmp
sub
sahf
and
lods
and
mov
outs
jnp
imul
push
das
adc
xchg
push
movs
lods
rcr
cmp
xchg
mov
lock
test
dec
add
sbb
sar
ror
cmp
out
daa
ins
addr16
inc
lods
ss
or
add
int3
or
jp
sbb
jbe
hlt
push
xor
adc
sub
ins
dec
pop
adc
xchg
(bad)
push
sub
sbb
int
sti
xor
lods
in
mov
xchg
popf
pop
xchg
dec
sub
les
into
inc
movs
push
es
mov
sub
test
mov
rcr
clc
cmps
call
inc
push
div
jno
mov
cwde
ins
xchg
retf
ins
test
pop
jno
xor
cli
xor
ds
(bad)
repz
mov
jbe
cld
jo
shl
retf
(bad)
popa
retf
movs
fsubr
push
loop
inc
popf
and
mov
sub
cmp
mov
leave
and
aaa
cwde
add
in
in
and
fidivr
ror
sub
mov
jle
push
out
scas
retf
hlt
mov
mov
mov
fist
xchg
fst
call
add
sub
add
test
mul
push
and
mov
xchg
inc
dec
imul
les
and
pop
push
jnp
cli
je
ret
and
sbb
lock
loop
or
adc
addr16
pop
pushw
inc
sbb
into
loop
in
ins
out
push
sbb
idiv
fsubr
sbb
movs
xrelease
xor
ja
fimul
push
(bad)
push
iret
cwde
mov
jae
in
pop
lds
shr
sub
bound
arpl
mov
movs
aad
cmp
(bad)
pop
ret
mov
mov
xchg
mov
xor
int
call
movs
nop
stos
sub
cmps
scas
mov
in
push
xchg
xor
jp
aas
outs
lock
push
nop
lds
push
push
dec
sti
cmp
jg
out
sub
jg
call
sbb
stos
out
aam
jnp
or
pushf
stc
popf
add
mov
ss
in
inc
cmp
int3
pop
arpl
ss
inc
mov
daa
xchg
mov
adc
sbb
test
dec
mov
les
call
in
aam
push
aaa
lahf
adc
int
inc
fwait
leave
xlat
dec
adc
mov
mov
out
into
mov
push
stos
xchg
jns
sahf
inc
fwait
mov
repnz
mov
ja
int
jge
dec
aas
and
cmp
test
jb
cmp
icebp
pushf
adc
mov
test
imul
add
out
int3
gs
xchg
movs
sbb
ret
cmps
and
aaa
aad
dec
jecxz
repnz
mov
ret
inc
pop
add
mov
inc
cmp
arpl
(bad)
jbe
ins
sbb
rcl
stc
pop
out
aad
and
iret
push
shr
ja
jbe
mov
sbb
xor
jb
cwde
mov
lahf
add
rol
inc
mov
push
inc
movs
ins
aad
mov
fwait
push
mov
mov
std
or
adc
out
cld
movups
lock
rol
lea
adc
mov
ins
daa
rol
repz
rol
std
fucomp
aas
pop
pop
pop
loop
lahf
mov
pop
rcl
shl
xor
iret
and
(bad)
mov
push
inc
push
ins
out
outs
arpl
aaa
nop
and
sub
add
les
mov
cli
ja
shl
sar
fwait
pop
cs
mov
and
fdivr
sbb
aaa
and
sbb
cmp
mov
ins
addr16
daa
popa
es
inc
out
mov
jmp
int
sub
mov
ja
out
cld
push
ret
arpl
adc
pop
iret
or
loop
popf
scas
cmp
sbb
sub
sti
dec
xlat
sbb
add
dec
push
mov
jmp
jp
sbb
pop
outs
cmp
xor
pushf
and
xchg
fyl2xp1
and
cmp
or
pop
and
shl
bound
push
in
sub
aad
aam
fsubr
arpl
push
sbb
inc
test
iret
add
sub
cmc
and
in
mov
dec
daa
cs
ficom
mov
inc
mov
xchg
add
pop
jecxz
push
adc
cld
xchg
lods
outs
xor
mov
popf
movs
rol
loope
mov
inc
rcr
jp
xchg
add
rcl
hlt
stc
sti
bound
into
and
or
cld
loop
idiv
in
sbb
adc
xor
pop
or
xchg
mov
pop
call
mov
cs
sahf
mov
dec
sub
xchg
sub
sub
shl
mov
into
sub
cmp
cmp
pop
leave
mov
loop
js
sbb
(bad)
jg
push
fcom
dec
mov
ficomp
mov
adc
ins
jp
fucomip
outs
push
mov
lods
adc
cmp
fldenv
mov
pop
mov
add
mov
jb
stos
mov
xor
adc
arpl
dec
dec
cmp
push
or
aas
sar
mov
lods
stos
neg
jb
push
rcl
clc
push
mov
mov
fs
inc
ss
not
fnstenv
mov
sub
dec
sub
out
pop
es
sub
fwait
pandn
ins
jne
inc
pop
push
xor
mov
sub
std
sbb
cmp
xor
xor
mov
les
xor
int3
shl
sti
or
loop
fcomp
mov
sub
inc
mov
rcl
sub
int3
push
or
stos
push
retf
cmp
push
push
jne
out
ror
add
fidiv
sbb
movs
pop
ret
add
aad
xchg
add
out
jo
inc
les
inc
(bad)
mov
pop
or
add
adc
scas
push
dec
aad
xor
sbb
(bad)
jecxz
aam
inc
lods
adc
int3
rcl
pop
pusha
es
ds
cmps
jmp
adc
loop
xchg
ja
jns
sbb
or
xor
sbb
pop
repz
mov
mov
popf
cmp
into
push
inc
mov
mov
adc
mov
jnp
enter
cld
cmp
jg
sbb
daa
jl
imul
out
in
cmp
outs
shl
in
push
sbb
push
mov
ds
mov
ja
(bad)
mov
(bad)
jo
neg
push
stos
or
pop
mov
mov
pop
loopne
imul
jbe
mov
adc
int3
cwde
clc
inc
dec
fadd
(bad)
xchg
out
rol
jmp
enter
mov
mov
pop
lahf
retf
jmp
adc
jecxz
xor
lods
ds
jo
sbb
retf
int
cld
out
and
xchg
jmp
std
xchg
repnz
or
mov
pop
xchg
in
sbb
shr
push
mov
mov
xchg
dec
jae
sbb
outs
inc
fstp
sub
es
pop
mov
xor
sahf
repnz
cmc
adc
add
inc
shl
add
lock
fs
test
inc
push
mov
cmp
clc
cmc
add
pop
sub
or
or
or
jle
aas
jge
in
std
bound
dec
shl
cmp
add
xor
inc
pop
push
inc
sbb
iret
ins
pop
std
ds
push
xor
aad
adc
sti
in
dec
sbb
jb
and
cmp
add
sbb
jg
loopne
cmp
rcl
adc
in
(bad)
mov
jl
outs
out
mov
and
ror
pusha
pop
lds
and
ror
(bad)
enter
in
retf
movs
pop
pop
sub
adc
cmp
adc
sub
inc
xchg
lock
popa
xlat
not
clc
sbb
jbe
jmp
or
iret
clc
xor
aas
rcr
push
inc
cmp
movs
adc
retf
out
enter
stc
cmp
popa
jle
shl
cmc
out
xchg
jp
add
popf
rcl
sub
jmp
inc
(bad)
int3
mov
shr
mov
mov
mov
jmp
call
mov
xor
retf
mov
push
iret
loope
jnp
mov
mov
movs
out
push
xchg
mov
cmps
mov
fstp
lahf
(bad)
add
lods
call
cmp
mov
or
arpl
or
push
aas
adc
mov
mov
loop
or
knotw
push
ds
sub
aad
nop
xor
rcr
cmc
aad
jno
dec
sbb
mov
nop
mov
inc
add
jno
adc
clc
sahf
aas
cdq
mov
sbb
movs
lods
push
sbb
fst
ja
adc
xor
cld
daa
in
xor
xchg
fcom
or
xchg
add
jl
push
mov
mov
mov
lods
loope
xor
adc
hlt
mov
jecxz
cld
daa
jle
adc
cmp
fs
in
retf
mov
mov
cli
mov
sbb
neg
sbb
iret
(bad)
out
pop
mov
xchg
popf
jbe
cld
les
cs
push
icebp
push
fcomp
out
stos
and
cld
call
jno
sbb
or
iret
fucom
sub
(bad)
fs
aaa
rol
mov
push
je
lods
rcl
and
inc
mov
es
jl
ret
jne
aad
adc
in
pop
push
add
pop
cs
xchg
push
cmp
inc
lahf
jb
xchg
xor
jne
lock
mov
push
rcr
dec
out
pusha
mov
enter
jno
fcmovb
mov
sub
(bad)
lds
xchg
inc
jl
xor
sbb
fldcw
dec
jno
in
movs
mov
mov
xor
(bad)
mov
adc
dec
ret
mov
adc
das
pop
push
pop
xlat
pop
rcl
test
pop
out
call
in
jmp
lea
cmp
adc
ret
int3
ja
fst
(bad)
mov
fsubr
scas
xor
repnz
outs
ret
cmp
test
and
je
jns
sub
cmp
inc
icebp
ret
shl
clc
fidiv
clc
sti
pop
xchg
sar
and
lods
je
push
test
ficomp
xor
(bad)
adc
test
or
(bad)
idiv
inc
adc
pop
adc
mov
out
cmp
xchg
shl
ins
lahf
or
mov
out
jns
fdiv
pushf
dec
shr
or
or
push
sbb
and
ins
push
or
and
int
stc
es
cmp
adc
mov
mov
add
cmp
xchg
(bad)
jg
out
call
pop
mov
nop
aam
xchg
xchg
rcl
test
mov
out
test
jno
fwait
inc
add
mov
repnz
mov
idiv
pop
es
adc
jne
clc
test
in
push
cli
lods
shl
scas
rol
and
(bad)
pop
add
leave
fadd
test
mov
jae
add
les
pop
adc
cmc
popa
dec
pop
cs
and
xlat
scas
es
dec
add
or
aas
rol
xor
enter
mov
daa
pusha
mov
adc
cs
in
inc
aam
hlt
add
push
repnz
add
add
and
loop
pop
pop
outs
popf
loope
out
sbb
mov
push
pop
sub
pop
push
xchg
jg
lods
rcr
or
pusha
bound
adc
push
xchg
fcomi
jmp
into
std
out
loopne
icebp
xchg
dec
fs
mov
enter
inc
out
in
clc
pusha
iret
push
test
cdq
mov
pop
sbb
outs
cmps
sti
jge
xor
std
into
rdpmc
xor
call
xchg
neg
sbb
leave
lock
push
cs
or
mov
rcr
mov
and
pop
add
call
lods
xor
(bad)
repnz
pop
mov
enter
in
sbb
cmps
out
pop
jmp
add
jmp
out
in
cmp
cld
pop
repz
push
mov
lahf
inc
mov
(bad)
hlt
je
rcl
stos
(bad)
(bad)
xor
sub
js
nop
fcomp
pop
movs
test
or
clc
dec
loopne
rol
lds
xchg
and
loopne
cs
or
mov
imul
add
dec
pop
adc
(bad)
bts
lods
adc
sub
mov
not
mov
xchg
dec
push
pop
push
cmps
fistp
addr16
fst
inc
inc
cmc
cmp
(bad)
je
inc
mov
ins
sti
xchg
xlat
call
jecxz
test
xchg
fidivr
pop
clc
adc
adc
push
sar
jnp
enter
loope
pop
imul
jne
enter
dec
mov
xor
(bad)
outs
xchg
fbld
mov
fidiv
inc
nop
je
js
xchg
lods
in
(bad)
out
sub
loope
aam
sbb
aam
dec
ins
dec
outs
imul
lods
mov
iret
ss
and
jne
inc
push
(bad)
icebp
(bad)
inc
arpl
adc
push
mov
int3
into
inc
retf
out
addr16
cmps
jae
popf
jl
mov
xlat
ds
jge
xor
and
mov
retf
sbb
into
fstp
mov
aaa
sbb
push
cld
mov
xor
dec
enter
sbb
dec
fisubr
pop
test
pop
or
xor
mov
aad
cmp
mov
xchg
or
lock
(bad)
sahf
jle
add
and
cmp
or
data16
out
mov
das
ret
div
cmp
mov
xchg
clc
call
dec
cmp
push
iret
pop
ins
dec
aam
movs
ss
imul
mov
jmp
hlt
cdq
sbb
jg
stos
out
jecxz
gs
or
(bad)
(bad)
jmp
dec
fwait
sub
and
jmp
fwait
dec
in
push
cli
das
cmp
aas
adc
add
popa
fsubr
icebp
and
cmps
or
mov
call
(bad)
lahf
sbb
cmps
das
dec
adc
icebp
jne
arpl
xchg
pusha
out
std
fcmovu
sar
xor
adc
cmps
inc
int
mov
sbb
fmul
inc
and
fisttp
pop
jmp
or
addr16
push
jmp
sub
mov
mov
stos
in
dec
or
dec
push
xchg
jl
aaa
inc
inc
sub
data16
pop
in
(bad)
cmps
mov
push
int3
dec
inc
mov
dec
fld
adc
icebp
xchg
mov
rcl
out
test
bound
loope
nop
xlat
push
mov
cmp
movs
xchg
inc
bnd
jle
pop
push
mov
pop
dec
xchg
adc
adc
adc
imul
xchg
in
nop
mov
out
xor
jg
rcl
daa
loopne
test
sbb
add
sar
add
mov
mul
sbb
jge
ds
ret
mov
lahf
add
add
sub
lods
jae
imul
jnp
aas
stos
mov
inc
ds
sub
push
or
imul
loop
adc
mov
out
arpl
ins
and
mov
int
scas
in
push
dec
rcr
mov
fldcw
xor
shl
test
mov
xor
sbb
ins
and
loopne
mov
daa
inc
test
rcr
mov
dec
mov
and
loop
adc
repnz
or
mov
xchg
aam
add
mov
mov
bound
out
mov
stos
iret
push
test
sub
dec
out
and
cmp
xchg
mov
xchg
or
cdq
aas
call
mov
push
cmp
ret
mov
dec
jmp
cmp
adc
and
xchg
mov
cmps
push
dec
xor
ror
das
mov
push
xor
scas
or
shr
mov
lea
sbb
mov
call
test
retf
repnz
cdq
jp
adc
cmp
pop
sbb
scas
test
int
xchg
clc
sub
xchg
sub
and
ret
in
dec
dec
ins
stos
add
cs
es
shl
push
xchg
or
sbb
adc
jae
push
sub
fmul
lock
pop
push
jmp
enter
and
ja
xchg
movs
xor
jle
cmp
and
sbb
mov
xor
iret
fcmovnb
fxch
std
jl
adc
imul
mov
gs
mov
fcom
scas
daa
push
retf
ret
pop
lds
jle
lock
mov
jle
xchg
ret
mov
xchg
xor
push
jo
pop
lahf
jno
push
add
sbb
push
inc
jne
loop
sbb
mov
movs
dec
inc
(bad)
outs
cmp
mov
scas
inc
in
test
out
adc
jle
imul
jg
add
cmp
inc
push
outs
arpl
xlat
aam
sbb
mov
push
movs
and
hlt
repnz
pushf
inc
lea
xchg
mov
push
fwait
test
stos
retf
push
dec
sbb
pop
inc
mov
inc
xor
cmp
pop
inc
mov
outs
cli
dec
push
dec
stos
adc
(bad)
test
add
add
adc
sbb
repz
mov
dec
fistp
push
mov
rcr
int
movs
xchg
jo
xor
inc
sbb
cli
lahf
cs
jo
mov
pop
xor
jae
shl
rcl
scas
mov
ja
push
mov
out
repz
and
(bad)
shr
outs
stc
push
inc
xchg
sti
daa
outs
xor
into
jmp
retf
pop
push
jl
scas
and
inc
fiadd
daa
test
sub
cmp
int
sub
loope
xor
xlat
imul
adc
jne
mov
add
int3
addr16
mov
mul
jo
cmps
push
xchg
push
cmp
gs
cmc
sar
leave
add
inc
sub
jne
out
je
mov
arpl
fist
mov
adc
hlt
xchg
retf
jg
mov
pop
ret
push
(bad)
fsub
push
mov
xchg
mov
push
add
add
inc
mov
imul
scas
push
ss
adc
cdq
push
bound
push
cmps
dec
ret
dec
inc
mov
in
ins
add
mov
(bad)
clc
pusha
cmp
mov
or
pop
cmp
mov
repnz
out
adc
sbb
leave
test
mov
test
mov
call
aad
xchg
fdivr
push
mov
mov
mul
and
in
lods
(bad)
popf
mov
push
xchg
pop
pushf
mov
cmp
enter
mov
out
mov
mov
push
mov
dec
mov
outs
pop
and
or
mov
out
and
mov
movs
mov
in
push
sub
add
mov
bound
add
pop
inc
push
push
jb
jne
dec
fmul
cmp
clc
mov
and
jmp
ret
cmp
push
out
mov
push
call
lahf
sbb
xor
dec
mov
pop
push
test
cmp
jno
loop
loope
cmp
jecxz
into
push
xchg
aad
or
mov
or
dec
out
sti
inc
ret
outs
lods
loopne
(bad)
jmp
mov
mov
mov
and
adc
test
ins
sbb
or
cmp
iret
push
mov
adc
je
ds
dec
dec
popf
xchg
out
mov
loope
xchg
jo
jne
sub
mov
(bad)
mov
dec
test
mov
xchg
push
dec
fs
pop
jns
mov
or
xor
popa
inc
inc
fdiv
adc
ja
inc
cli
sub
in
jae
test
(bad)
sti
sahf
push
jne
push
div
cmp
ss
mov
xor
iret
push
jle
arpl
adc
cmp
adc
pop
mov
mov
out
sub
int3
loop
push
cmp
mov
pop
xor
arpl
adc
loop
aas
dec
pop
stos
call
sahf
idiv
leave
xor
fisttp
mov
test
movs
or
(bad)
cld
pusha
and
hlt
adc
xchg
sub
(bad)
xor
push
or
inc
add
xchg
cmp
cmc
xchg
rcr
test
ror
inc
int3
in
(bad)
or
sub
sub
(bad)
adc
sbb
jne
ficomp
xchg
push
push
(bad)
fwait
pop
xor
rcl
sub
inc
dec
adc
mov
xor
and
jmp
or
mov
test
aam
sbb
pop
aad
(bad)
aam
ror
mov
repnz
stc
sub
je
int
cmp
mov
daa
(bad)
repz
(bad)
out
and
test
pop
adc
clc
lahf
sahf
fst
lds
mov
cli
push
xor
adc
mov
fimul
ss
jnp
xchg
imul
mov
addr16
in
rol
scas
int3
and
shl
push
in
xchg
jg
cmp
in
fsubr
sub
and
pop
cmps
aaa
add
fwait
push
addr16
jmp
das
popa
pop
fistp
sar
out
scas
gs
xor
xchg
out
inc
repnz
xlat
in
push
jecxz
dec
jge
mov
sbb
mov
jge
lds
cdq
je
push
pop
in
out
sbb
xchg
adc
int
inc
mov
ja
pop
dec
cmp
ss
idiv
aaa
(bad)
jge
daa
cmp
dec
fwait
mov
xchg
fadd
dec
jmp
jp
or
stos
mov
push
jne
fcom
mov
or
or
ret
or
add
scas
and
outs
sub
mov
test
inc
fisub
xchg
out
cli
cmp
aad
ja
sti
fs
call
les
jmp
sub
add
ja
ins
xor
pushf
adc
or
pop
xor
adc
ins
nop
cmp
pusha
dec
int3
sbb
fdivp
mov
lahf
add
or
dec
(bad)
or
rol
in
icebp
mov
outs
gs
inc
jnp
or
add
dec
push
sub
je
icebp
add
push
sub
pop
ins
inc
cwde
mov
aad
push
mov
sub
sbb
enter
(bad)
or
repnz
sbb
xadd
bound
lods
shl
nop
jnp
rcl
sbb
stos
out
ret
xor
out
mov
add
push
and
dec
retf
push
or
in
xlat
sbb
sbb
push
xchg
test
(bad)
jmp
nop
mov
adc
out
icebp
aaa
pop
mov
jnp
popa
dec
neg
rcl
jge
loopne
int3
cmp
or
adc
mov
add
sub
mov
aas
ficom
dec
je
test
callw
push
pop
pop
push
jnp
out
stos
push
cmp
inc
in
cwde
mov
pmullw
movs
nop
xchg
add
cvttps2pi
mov
daa
push
fisubr
arpl
js
mov
hlt
test
lods
mov
cs
fbld
(bad)
pop
lahf
xchg
xchg
sbb
cmps
ret
mov
add
cs
sbb
mov
mov
aaa
xor
in
ret
push
adc
sub
push
pop
(bad)
mov
rol
(bad)
mov
mov
adc
retf
xor
sub
inc
xchg
popa
mov
das
fsub
popa
xchg
pop
xor
test
xchg
adc
std
(bad)
jmp
arpl
add
pop
js
std
aas
pop
mov
adc
fcmovne
mov
jmp
or
(bad)
(bad)
jmp
sbb
cmps
sahf
mov
push
push
fcomp
out
repz
mov
aad
jmp
xchg
inc
mov
into
jmp
jo
sbb
mov
lock
es
add
jmp
jg
mov
sar
loop
gs
adc
les
imul
aad
(bad)
push
jo
jg
jmp
cs
adc
sub
adc
sub
das
jo
bound
enter
retf
jg
outs
cdq
jp
ins
lods
repz
push
imul
pushf
ret
add
les
out
mov
mov
mov
ins
inc
sub
adc
retf
aas
cmps
mov
retf
jl
pusha
or
int3
add
aad
cmp
stos
mov
ret
ret
(bad)
stc
dec
sahf
aam
jo
mov
mov
mov
popf
out
shr
xchg
ins
(bad)
cmps
xchg
mov
inc
lods
jnp
rcl
out
xor
int
retf
dec
mov
jecxz
(bad)
sub
xchg
out
sub
std
pushf
mov
xchg
loope
cmp
cmp
and
outs
pop
adc
lods
adc
bound
lock
pop
cs
push
fst
mov
cmc
sub
gs
mov
and
pop
inc
(bad)
xlat
push
push
inc
addr16
ds
outs
popf
jecxz
and
mov
mov
pop
movs
ja
std
adc
(bad)
jecxz
pop
test
test
jo
(bad)
xchg
shl
jbe
push
push
ins
cmp
(bad)
adc
cmps
pop
pop
aam
popa
adc
and
fst
mov
mov
ja
dec
mov
imul
imul
cmp
and
cmp
cmp
(bad)
leave
mov
cli
call
and
in
in
inc
inc
test
sbb
fwait
xor
jecxz
jl
ret
fwait
out
aad
or
pusha
sahf
sar
shr
mov
ret
inc
add
or
dec
jno
push
pop
enter
push
neg
lea
lahf
jp
addr16
lds
sub
popa
inc
icebp
xor
test
mov
inc
nop
dec
sub
xchg
mov
fcmovb
lock
jmp
inc
les
push
xchg
cwde
inc
cld
or
mov
xor
mov
jl
loop
retf
sti
inc
xchg
fld
pop
cmc
push
jae
dec
xchg
popf
es
movs
daa
jl
jb
add
cli
inc
cmp
dec
pop
xchg
jo
adc
jg
xchg
mov
xor
sbb
icebp
in
fdivp
sub
jle
scas
rol
loopne
int
ret
push
fisubr
jo
and
lock
(bad)
repz
popf
cmc
clc
(bad)
or
retf
or
sub
pop
scas
jno
dec
push
or
sub
imul
jbe
std
sub
adc
push
ret
and
movs
xor
dec
xchg
push
icebp
mov
ret
push
and
jmp
jmp
dec
scas
mov
mov
and
lea
mov
sbb
lea
cmp
pop
call
push
mov
adc
xor
ret
arpl
fadd
std
sbb
mov
hlt
sbb
and
repz
mov
sahf
jmp
out
out
stos
and
dec
mov
push
mov
test
jnp
add
xor
push
xchg
pop
leave
pop
dec
dec
sub
hlt
in
loope
lds
push
fadd
call
outs
push
mov
jg
xchg
adc
js
fcomp
inc
fst
cmp
or
adc
adc
dec
dec
fbld
xor
in
shl
xchg
pusha
dec
inc
adc
aas
les
xor
clc
push
inc
push
aas
dec
dec
xchg
or
inc
inc
jge
xor
aam
cld
in
leave
mov
xchg
loope
scas
test
add
add
jne
inc
push
jmp
in
sbb
push
mov
dec
mov
xchg
repnz
mov
pop
cdq
push
dec
shl
cwde
inc
dec
lds
loope
ja
test
jno
push
or
dec
loope
iret
inc
sub
cld
push
lods
iret
add
stos
jmp
add
rcl
mov
cmp
jb
adc
inc
aad
pushf
push
push
jno
xchg
cmc
aad
push
in
mov
jnp
mov
jne
or
hlt
xchg
jns
jb
dec
or
xor
in
xor
int3
clc
cmp
lods
push
push
sbb
adc
jae
repz
shl
cmp
(bad)
pushf
js
das
push
fiadd
sub
push
push
or
(bad)
mov
(bad)
or
lds
ret
and
adc
add
push
sbb
or
mov
jmp
cmp
ins
out
jbe
ds
or
or
inc
(bad)
les
aam
test
cmp
xor
push
jl
xchg
push
jo
jmp
mov
inc
pop
nop
shl
arpl
xchg
xor
lock
sbb
enter
xor
push
push
int
dec
or
jns
ja
cmps
out
pushf
mov
mov
mov
jge
ret
retf
dec
adc
mov
rcr
call
xchg
lods
push
cli
xchg
loop
jb
in
inc
ins
dec
cli
(bad)
cmp
mov
mov
adc
fsubr
dec
ja
mov
xor
and
lea
cli
les
pop
mov
inc
mov
(bad)
hlt
fldpi
(bad)
int
iret
test
dec
jle
sbb
jg
jmp
sbb
stc
dec
daa
xor
ds
mov
in
mov
mov
pop
push
lods
std
fisubr
mov
in
add
dec
sub
dec
fdiv
cld
pop
push
test
int
iret
ret
ficomp
scas
pop
aad
jne
sub
xchg
xor
mov
imul
fbld
arpl
jbe
or
xor
jge
jmp
cmc
cmp
lods
jp
mov
jmp
es
xchg
fidivr
inc
das
mov
iret
and
mov
sbb
mov
xchg
mov
add
loop
cmp
jp
dec
repz
xor
add
sbb
sbb
addr16
inc
daa
pop
fldenv
out
xlat
sub
inc
adc
sar
jmp
jbe
cmps
(bad)
rcl
sbb
mov
adc
(bad)
mov
push
fs
mov
leave
ret
push
call
dec
and
sbb
ret
jecxz
das
jp
sub
shr
int3
shl
enter
inc
mov
rcl
dec
lods
xor
ins
jo
out
out
jns
pop
test
mov
daa
ret
mov
adc
les
stc
test
xchg
bnd
cwde
sub
or
(bad)
jnp
mov
adc
in
cld
fucomip
jbe
fld
pop
ret
and
dec
or
pop
jmp
popf
(bad)
sbb
inc
inc
or
nop
add
das
mov
stc
aaa
out
mov
and
lea
mov
(bad)
push
cmc
lea
mov
dec
out
mov
mov
loope
scas
(bad)
xor
je
iret
std
repz
loopne
pop
push
dec
rol
or
call
jnp
jae
cmp
pop
mov
sahf
xlat
ja
repz
jo
(bad)
pop
mov
and
mov
shr
dec
sbb
push
cmp
mov
pop
cmp
pop
shr
adc
push
xor
imul
add
dec
bound
out
xchg
cmp
daa
mov
adc
dec
fcmovnbe
popf
ss
js
cwde
je
int3
ds
ins
fldenv
pop
dec
test
nop
jp
and
(bad)
pushf
sbb
and
or
imul
call
pop
or
dec
lahf
xor
hlt
shl
fmul
inc
leave
dec
mov
and
das
fldcw
aas
outs
mov
add
cdq
pop
xchg
cmp
lea
fs
and
pushf
sub
fistp
mov
and
dec
data16
pop
dec
inc
jb
scas
mov
jmp
dec
fist
in
dec
retf
jo
cmps
adc
stc
enter
lds
mov
cld
mov
add
ds
data16
add
dec
add
retf
gs
cmp
lahf
jne
cmp
jns
jecxz
mov
icebp
cmps
pop
cwde
cwde
jns
jae
adc
pop
mov
push
and
leave
int3
jno
jecxz
mov
cmp
push
jno
lods
add
mov
std
out
mov
repnz
pop
popa
mov
cmp
and
fs
and
push
jno
not
dec
scas
jg
icebp
daa
inc
shr
shl
dec
sub
sbb
scas
mov
mov
pop
pop
fidiv
pop
enter
imul
gs
inc
out
fadd
leave
xor
dec
stos
imul
repz
cmp
jmp
pusha
ins
cmp
dec
fcomp
enter
dec
cmp
sub
dec
fwait
shl
inc
(bad)
loop
xor
push
xchg
std
rdtsc
cmp
or
adc
inc
out
in
sub
mov
pop
jns
das
and
ins
idiv
pop
lock
mov
fcomp
xchg
jbe
cmp
jns
dec
das
cli
cmc
fstp
mov
(bad)
mov
aam
xchg
mov
xor
shl
pop
clc
shr
push
loop
xchg
xchg
xchg
sbb
in
cmc
add
pushf
jge
add
mov
test
scas
jbe
inc
jmp
sbb
jne
mov
dec
pop
add
jmp
push
js
and
call
(bad)
adc
scas
mov
(bad)
addr16
div
mov
jmp
and
cmps
mov
pop
xchg
jo
mov
(bad)
or
dec
ss
ds
add
jg
xor
add
retf
into
test
pop
push
add
sub
mov
clc
mov
adc
ret
sti
daa
shr
ss
mov
ret
add
adc
xchg
dec
clc
ja
mov
ret
mov
ja
stos
add
test
call
(bad)
idiv
xor
les
in
adc
pop
retf
lea
mov
mov
es
jno
iret
add
mov
es
fadd
jo
cmp
or
cs
fldenv
and
mov
jmp
jg
inc
lods
pop
cmp
movs
mov
inc
add
xchg
and
mov
or
xchg
jg
xor
mov
ss
xchg
and
call
mov
mov
sbb
push
inc
ret
dec
pop
stos
cmp
xchg
call
push
mov
lods
sub
or
fiadd
test
aam
dec
adc
daa
and
sbb
aas
cmp
in
lahf
mov
xchg
cdq
push
mov
jbe
int3
hlt
cld
sar
stos
pusha
not
or
pop
mov
lds
mov
sar
ins
inc
pushf
mov
mov
(bad)
shr
std
adc
dec
es
(bad)
adc
movs
ret
push
lds
rol
adc
inc
shr
mov
mov
repz
xchg
cmp
(bad)
lea
cmp
fcomp
nop
xchg
loop
push
(bad)
dec
mov
mov
test
jno
mul
pushf
ins
nop
arpl
fimul
push
icebp
mov
sub
mov
(bad)
cmp
mov
lods
and
xchg
mov
push
pop
add
sbb
das
stos
retf
aaa
mov
lock
cmps
add
div
cmps
pusha
or
lods
cmp
aad
inc
and
and
imul
mov
lods
test
jge
sti
xchg
push
add
inc
stos
adc
pop
imul
and
pop
mov
out
xchg
or
imul
out
adc
lods
cli
(bad)
mov
inc
(bad)
inc
bound
call
out
dec
pop
and
sbb
sahf
push
jae
shl
pusha
adc
adc
rol
xor
push
sbb
(bad)
push
or
xor
xchg
lock
stc
push
adc
jno
fwait
push
adc
ja
cwde
outs
xchg
mov
fmul
ds
lds
or
mov
push
pop
inc
scas
jne
jns
scas
inc
dec
fisttp
addr16
imul
xchg
mov
xchg
jle
mov
and
popf
sbb
sti
repnz
cmc
adc
in
pop
in
jge
in
jl
fdiv
pop
sbb
xor
xchg
adc
pop
popf
and
push
mov
fdivr
pop
test
push
inc
sbb
ins
sub
adc
retf
mov
pop
fsubr
je
xor
xor
movs
ret
daa
jae
xor
std
in
push
retf
mov
les
cdq
test
in
cli
fnstsw
dec
test
scas
in
dec
daa
pop
push
int3
cmp
lock
(bad)
movs
add
gs
jg
push
lock
inc
push
or
xchg
or
lea
mov
dec
nop
and
jnp
outs
add
mov
in
gs
rep
sar
mov
push
call
cmps
adc
adc
in
and
sub
add
jle
shl
push
imul
xor
and
push
mov
sbb
jne
cmp
push
iret
into
lock
jl
icebp
aam
push
cmp
idiv
push
in
daa
adc
call
mov
in
and
fs
dec
sahf
arpl
aam
xor
in
cs
push
cdq
mov
push
(bad)
pushf
ins
or
and
sub
jg
sbb
dec
(bad)
and
and
(bad)
aam
sub
fwait
jns
imul
sub
or
xchg
fadd
mov
lock
push
push
or
mov
xlat
mov
pusha
dec
mov
das
mov
pusha
pop
es
call
add
out
ds
mov
pop
sub
mov
sti
popa
push
cdq
fmulp
adc
mov
lds
and
iret
fwait
pop
popf
ror
jg
std
or
popa
jge
sub
inc
ins
cmp
xchg
push
dec
ret
mov
inc
jne
imul
ins
clc
push
push
ins
sbb
dec
sub
(bad)
cdq
cdq
add
cmc
ret
(bad)
enter
fld
cmp
jbe
adc
or
rcl
mov
call
mov
xchg
xchg
sbb
in
mov
movs
mov
add
cmp
scas
leave
push
pop
jbe
(bad)
cmps
outs
fstp
js
rol
cmps
lods
shl
adc
adc
gs
and
pop
mov
sub
push
ins
(bad)
div
mov
sbb
sbb
jne
mov
xchg
xchg
cmp
outs
out
adc
aam
ins
push
cdq
outs
jg
dec
sbb
int
sub
(bad)
mov
adc
repnz
lods
(bad)
icebp
cmp
loop
fcom
pop
adc
add
repnz
push
sti
push
out
xor
mov
leave
xchg
push
push
xchg
mov
retw
push
adc
push
cld
ficom
ret
out
inc
or
sbb
gs
inc
or
adc
jne
mov
mov
sbb
mov
ins
mov
lods
stos
pusha
ds
cmp
pop
aad
nop
sub
pushf
lock
and
mov
jmp
xor
and
mov
sub
or
mov
xor
push
cdq
adc
into
ins
in
adc
test
dec
mov
push
js
jbe
and
(bad)
lods
popf
jne
dec
fcomp
pop
xor
jno
repnz
cmps
cli
push
mov
int
xchg
push
addr16
test
and
mov
jae
dec
jne
inc
test
cwde
jno
pop
ror
imul
(bad)
jl
retf
xor
mov
sbb
cld
adc
add
jns
fild
xchg
sub
jns
movs
jbe
fstp
cmp
sbb
sub
mov
xor
sahf
cmps
popa
repnz
mov
cdq
fdivr
jle
dec
outs
out
test
popa
adc
sahf
xchg
pop
jmp
(bad)
nop
add
fs
sbb
aad
add
cs
call
popa
and
xchg
inc
xchg
mov
pop
fistp
lock
enter
stc
lock
jae
dec
ret
std
mov
fwait
test
jnp
mov
inc
fdiv
or
das
push
pop
aaa
lds
stc
add
rol
js
std
fmul
inc
adc
das
in
jne
ret
sub
loope
ss
sti
adc
dec
data16
pushf
jmp
and
cmp
sar
sub
mov
and
xor
mov
mov
add
hlt
xchg
lea
(bad)
jns
(bad)
cdq
sub
imul
loop
mov
xchg
iret
clc
inc
push
push
clc
stos
xchg
cmps
cmp
std
(bad)
jnp
inc
dec
jo
and
xor
or
ret
ret
or
cmp
test
cmp
aad
jnp
ja
inc
std
jo
retf
retf
pop
sub
stos
aam
pop
jnp
xchg
sbb
aam
add
stc
push
mov
or
lods
aam
cmps
call
cmp
shl
cmps
push
jp
popa
sbb
into
sbb
and
pop
push
sbb
in
mov
ret
jg
retf
hlt
and
sbb
test
(bad)
(bad)
cmc
sub
add
mov
popf
sar
mov
and
mov
add
out
sbb
pop
cmp
jp
lock
rcl
in
(bad)
cdq
dec
jmp
aas
xlat
inc
popf
imul
dec
movs
push
push
or
push
cmp
icebp
push
push
sub
popa
jb
and
fdiv
xor
push
js
mov
or
cmp
jl
addr16
cmps
sbb
xor
or
jmp
xchg
inc
sub
mov
out
xor
push
inc
pop
ret
add
pushf
add
adc
mov
xchg
sub
dec
fdivr
hlt
sbb
and
ja
mov
das
pop
and
mov
xor
clc
inc
call
mov
fistp
or
add
sbb
dec
call
mov
mov
mov
mov
stc
daa
mov
mov
int
mov
ja
call
cmp
je
iret
out
and
mov
inc
ret
(bad)
ds
popa
pop
hlt
mov
sbb
mov
cwde
cli
jb
sub
push
mov
jl
outs
ret
clc
mov
cmp
adc
pop
and
mov
push
mov
pop
movs
cmp
mov
pop
scas
add
dec
adc
or
pop
popf
lea
dec
cmp
mov
ret
sbb
out
fstp
test
(bad)
inc
add
jmp
out
retf
jae
leave
sub
pop
sub
ret
lds
shl
clc
lods
push
sbb
xlat
enter
lea
add
leave
jl
dec
xor
mov
fcmovu
mov
out
jg
retf
scas
stos
ror
push
cli
out
sub
mov
fldcw
cmp
inc
sub
and
add
fdivr
inc
(bad)
push
inc
xchg
sbb
fisttp
sti
ins
sbb
outs
jle
mov
lahf
out
repz
fisubr
repz
out
ficom
out
add
push
and
out
fdivr
in
mov
dec
std
std
dec
gs
inc
sub
in
add
push
mov
test
push
mov
sub
ds
imul
and
push
adc
addr16
push
and
ror
dec
push
push
loopne
shl
mov
xchg
sub
fld
jno
push
arpl
in
push
push
xlat
mov
jo
pop
mov
(bad)
mov
int3
or
push
lock
fimul
jbe
xor
fs
daa
lods
(bad)
xchg
adc
cli
out
sbb
imul
inc
aaa
loope
xor
pop
fisttp
fisttp
call
xor
pop
mov
out
sub
mov
ret
scas
aam
in
inc
jg
pop
xor
std
xlat
ds
or
xor
jmp
leave
das
xor
les
jbe
in
ja
xchg
cs
call
loopne
or
shr
xor
add
mov
mov
push
and
mov
pop
fisttp
int3
cmovs
pop
push
xor
xchg
inc
push
icebp
das
sbb
adc
inc
out
jbe
stos
mov
in
pop
nop
mov
ret
cmp
jnp
push
rol
clts
mov
sub
ret
jb
movs
xor
pop
push
fcom
and
fcmovne
xchg
clc
lock
pop
ins
push
adc
inc
and
jp
jae
lds
data16
clc
dec
ficomp
jge
or
shl
stos
in
jae
xor
push
test
inc
inc
(bad)
inc
and
dec
addr16
mov
popa
xor
xor
fiadd
gs
or
call
inc
and
push
ins
std
call
out
sub
mov
jae
imul
xchg
in
rcr
dec
push
adc
and
(bad)
fidiv
add
push
adc
mov
xor
jne
add
jns
scas
jne
mov
les
icebp
popf
mov
sbb
jle
fadd
and
lea
(bad)
std
bound
cli
mov
mov
nop
call
pushf
cmps
jg
mov
push
push
movs
arpl
pop
sub
mov
xor
dec
movs
dec
fwait
mov
mul
ret
push
(bad)
mov
in
and
ins
cwde
fcomp
dec
mov
mov
sahf
sub
sbb
test
mov
jns
out
mov
into
cld
addr16
adc
jnp
std
cmp
xchg
enter
loope
(bad)
xor
int
cwde
cld
in
push
loopne
shl
or
call
inc
or
les
push
xor
xor
sub
push
daa
repnz
xchg
jo
pop
xor
pop
jge
xor
pop
bound
aam
inc
add
mov
sbb
popa
inc
adc
fisttp
adc
inc
mov
pushf
dec
jmp
int
pop
dec
push
cmp
popf
jge
dec
pop
dec
jmp
xchg
fadd
loope
shl
outs
xchg
fsubr
data16
out
pop
pop
mov
sbb
nop
movs
imul
je
repnz
lods
call
scas
in
adc
je
out
or
(bad)
or
in
scas
out
popf
dec
imul
pop
xchg
retf
pop
adc
mov
sahf
ss
sub
call
push
dec
mov
jbe
icebp
jmp
mov
or
lahf
fcomp
mov
push
lahf
or
dec
cmp
stos
cs
inc
jp
cwde
push
loopne
arpl
fst
adc
lods
pop
(bad)
mov
jl
div
and
arpl
call
mov
jge
mov
out
push
(bad)
jns
repnz
das
dec
ret
jp
(bad)
int
popa
push
mov
addr16
mov
out
repz
repz
or
sub
jnp
or
clc
adc
fnstcw
enter
and
aas
cwde
jge
push
fs
repnz
dec
movs
data16
pop
imul
sbb
(bad)
ds
test
hlt
repnz
jecxz
add
cmp
add
stos
push
das
into
cmp
outs
mov
add
outs
scas
sub
cmp
mov
push
push
inc
mov
inc
stos
cmps
xchg
mov
ins
push
jle
arpl
popf
cmp
or
push
mov
in
pushf
jg
lahf
fimul
iret
and
pop
gs
dec
mov
sbb
pop
fdivr
ror
sbb
adc
adc
mov
adc
mov
test
dec
lds
cmc
mov
adc
sbb
loop
repz
arpl
sbb
addr16
stc
mov
rol
bound
inc
cmp
xor
adc
jns
stos
cs
dec
sub
cmc
xchg
pop
or
ds
sbb
or
pop
mov
mov
stos
xor
jp
mov
imul
push
arpl
fiadd
fwait
test
repnz
outs
addr16
add
(bad)
mov
mul
cmp
mov
add
add
in
mov
lods
or
push
adc
mov
fild
outs
and
loop
std
pushf
hlt
xchg
mov
and
cld
vminss
jo
(bad)
dec
(bad)
fiadd
aad
inc
je
pop
xor
add
jmp
pop
mov
push
lds
mul
popf
leave
mov
or
cmps
pusha
mov
dec
nop
push
pop
arpl
ja
js
ja
sbb
push
aam
xchg
popf
loope
xchg
in
push
push
mov
pop
push
xchg
call
jmp
xchg
(bad)
jnp
es
test
cmp
sub
into
mov
mov
jmp
xchg
mov
cli
adc
shr
fst
(bad)
push
es
loopne
mov
pop
aaa
jge
dec
mov
cmp
outs
scas
dec
imul
pusha
iret
outs
push
dec
cmp
data16
sub
test
xchg
dec
add
xchg
jmp
xlat
sbb
and
cmp
xchg
pop
inc
cwde
test
push
test
shr
hlt
or
stos
ja
aam
arpl
inc
mov
cmp
in
scas
lds
in
retf
sahf
jno
arpl
and
push
scas
inc
enter
or
dec
push
rcl
and
out
iret
jb
icebp
jp
jmp
std
imul
adc
push
pop
scas
push
cmp
js
cmp
jge
mov
out
imul
call
and
dec
cmp
js
push
(bad)
fidiv
xor
add
xor
movs
push
mov
inc
out
add
adc
adc
sub
or
inc
imul
aaa
push
sti
es
ror
sbb
sahf
inc
cmp
mov
in
jae
xor
push
mov
ins
stos
sti
push
shl
or
sbb
pop
cmp
sbb
push
xor
xchg
and
xor
jns
mov
push
lds
pop
add
repnz
pop
push
ss
and
cmp
pop
mov
and
js
out
repnz
sbb
mov
ja
pushf
mov
or
les
popa
sbb
and
and
pop
pop
mov
pop
out
es
lods
in
fisttp
adc
sub
data16
retf
scas
retf
loop
fbstp
push
cmp
test
add
aad
adc
jb
les
mov
dec
in
mov
popf
mov
(bad)
gs
sub
loop
into
mov
xchg
into
cmp
repz
stos
ret
jo
push
popf
rol
pop
out
sar
dec
lea
lods
dec
cdq
pop
sub
jmp
gs
and
cmp
imul
cmps
or
rcl
es
cmp
inc
sub
mov
add
pcmpeqd
add
aas
int
fild
dec
retf
pop
and
sub
xchg
or
pop
and
dec
fcom
sub
call
(bad)
adc
out
scas
int3
jae
mov
loop
loopne
or
jmp
scas
mov
push
xchg
add
push
popf
add
lock
imul
or
push
xor
pop
loope
jg
xor
mov
mov
push
inc
outs
sub
jge
out
mov
sar
js
sub
aam
xchg
fld
and
jns
popf
ins
ss
(bad)
mov
aaa
adc
push
jle
cwde
xchg
nop
and
loope
adc
out
fld
and
cld
and
(bad)
jmp
fnsave
out
mov
movs
sub
fiadd
jg
retf
icebp
adc
push
(bad)
sbb
fs
mov
sahf
push
cmp
aad
inc
leave
out
rol
cmp
mov
jmp
or
fnstenv
dec
mov
rol
into
and
lahf
add
aaa
sub
rcr
sbb
add
sar
loopne
jae
pushf
into
mov
cmp
sub
inc
sbb
mov
dec
lds
pop
int
cmc
mov
ja
push
sub
popf
or
hlt
and
js
gs
mov
shr
xor
inc
mov
test
pop
fistp
(bad)
in
ror
inc
pop
mov
loop
movs
inc
fisttp
pop
sbb
(bad)
pop
arpl
(bad)
dec
xchg
mov
adc
retf
jp
imul
add
pop
adc
jmp
lock
and
repnz
shr
or
(bad)
cs
ins
jne
ret
inc
outs
xchg
adc
jnp
ins
xchg
aaa
jge
and
stos
sbb
push
jl
inc
ins
jmp
pusha
out
xchg
sbb
repnz
mov
and
sahf
movs
xchg
dec
add
pop
jle
ins
add
fdivp
in
mov
xchg
ds
lds
call
loop
jnp
push
cmp
pop
jb
test
or
jle
xchg
xor
call
add
jecxz
inc
icebp
pop
sub
adc
and
mov
mov
ja
daa
leave
cwde
je
sbb
mov
mov
retf
fcomi
call
sub
push
jae
ins
and
loopne
ret
in
popf
add
mov
repz
inc
cmp
mov
test
jecxz
mov
das
jmp
sahf
stos
push
xor
lock
div
(bad)
test
ret
xor
data16
pop
clc
test
cs
xor
lds
or
jmp
or
push
int
(bad)
push
(bad)
push
cmc
hlt
shr
mov
push
test
int
stos
and
movs
and
mov
sbb
gs
mov
lea
dec
inc
cwde
js
mov
mov
mov
push
mov
sub
std
sub
mov
outs
cmp
out
pop
movs
mov
mov
push
mov
mov
and
or
inc
scas
mov
repz
pop
adc
mov
retf
cli
xor
xchg
pop
mov
add
cwde
imul
ret
test
sbb
in
cdq
inc
pop
repnz
pushf
pop
fldlg2
cmp
es
jmp
xor
sahf
push
loope
(bad)
leave
sahf
pop
add
xchg
mov
pop
test
mov
cli
pop
or
popa
sar
(bad)
dec
mov
dec
dec
jp
dec
popf
push
cdq
xchg
jg
sub
sbb
xchg
call
or
shl
adc
xor
popa
jle
pushf
mov
es
movs
cmp
sub
mov
arpl
cmp
shl
dec
lods
inc
rcl
loop
stos
jge
dec
dec
xor
hlt
mov
fldcw
ds
xchg
jmp
jb
ficomp
or
xor
sub
fcom
push
mov
aam
dec
(bad)
xchg
repz
push
into
hlt
lds
dec
sahf
mov
jb
push
push
std
cmc
repz
add
ret
cmp
int
add
dec
bswap
lock
xlat
sahf
push
cmps
int3
daa
xchg
scas
jns
jmp
xor
ss
push
cld
xor
and
mov
sbb
call
pop
in
mov
add
pop
add
lods
add
and
retf
add
sbb
xchg
mov
test
shr
fnstsw
mov
sub
add
rcl
shl
mov
aad
test
jbe
push
imul
ins
inc
scas
shl
outs
leave
jne
dec
pop
in
fisttp
add
das
aam
push
aam
jp
mov
and
xor
cmp
pop
mov
cmp
adc
jmp
jp
add
fmul
cwde
xchg
sbb
push
jl
fld
jecxz
and
xchg
add
cmp
rcl
xor
xchg
adc
pusha
adc
loope
stos
jnp
cmp
inc
jne
enter
lahf
jecxz
fdivr
push
in
push
out
hlt
mov
div
lods
ss
xor
push
inc
mov
sub
inc
push
xor
fadd
mov
out
mov
push
in
mov
push
pusha
or
ins
in
pop
cs
mov
cmps
mov
arpl
movs
bound
dec
cmp
add
cli
movs
jmp
adc
cs
inc
(bad)
rcl
shl
int3
jb
push
mov
cmc
popa
and
dec
push
ss
xchg
pop
push
cmp
jb
out
in
ds
aaa
mov
cmp
xchg
cmp
lods
xchg
test
repnz
jns
mov
mov
or
or
mov
stos
mov
jo
in
mov
add
inc
jnp
jge
js
adc
and
das
gs
lahf
test
enter
or
xchg
into
ret
(bad)
jmp
xlat
or
mov
dec
adc
sbb
call
scas
sbb
push
push
pop
cmc
inc
pop
inc
dec
jb
pop
inc
and
mov
inc
lea
mov
dec
js
lahf
adc
jae
xor
dec
ja
dec
xchg
adc
div
inc
pusha
push
add
lea
in
sub
ds
adc
lahf
and
xchg
and
add
sub
test
pop
loop
xchg
push
dec
ficom
mov
mov
fistp
bound
add
lea
xor
shl
es
xchg
or
xor
jne
inc
dec
add
inc
imul
and
imul
dec
repz
jg
cwde
inc
call
mov
movntq
jne
mov
sbb
mov
inc
xor
shr
adc
push
and
cmp
sti
add
fnstcw
es
shl
cs
push
or
lods
(bad)
in
popa
in
mov
sbb
test
pop
(bad)
call
leave
add
mov
addr16
mov
cwde
lahf
mov
and
fadd
jle
push
(bad)
mov
data16
sub
imul
es
imul
aad
js
push
cmp
lahf
jmp
xchg
sub
daa
inc
(bad)
retf
fistp
(bad)
mov
out
jb
shl
mov
cmp
pushf
inc
cmp
inc
sbb
mov
scas
add
push
test
mov
fcom
out
mov
fs
pusha
sbb
int
mov
rcr
push
mov
pop
cmp
add
xor
js
or
inc
xor
fidiv
mov
sbb
xrelease
mov
jb
pop
sbb
repnz
dec
ins
cmp
inc
mov
pop
pusha
mov
shl
movs
arpl
aam
add
loope
test
push
mov
retf
sbb
add
leave
pop
xchg
adc
fwait
iret
lds
(bad)
sahf
xor
mov
xor
into
pop
xchg
jg
int3
and
aam
jg
sbb
mov
(bad)
clc
rcr
mov
dec
and
xchg
mov
arpl
xor
aas
imul
push
outs
and
out
add
popf
loope
iret
jo
dec
ss
sbb
xor
sbb
add
les
scas
pop
cmp
retf
jb
dec
pop
aas
fcomp
test
add
or
push
dec
mov
dec
sub
sbb
mov
inc
push
cli
clc
int3
test
xor
(bad)
push
in
popa
jmp
push
jne
cmp
and
call
(bad)
xchg
sbb
sti
inc
in
sub
mov
lods
push
not
jmp
mov
out
cmc
mov
jno
xchg
movs
xor
enter
push
jns
mov
std
adc
lock
jmp
and
aad
fscale
sbb
daa
repnz
jbe
test
add
(bad)
idiv
xor
sbb
sub
mov
jecxz
in
ja
mov
loopne
jbe
outs
adc
(bad)
xor
out
(bad)
outs
int3
push
aam
xchg
leave
popf
mov
rol
dec
repnz
lahf
sbb
iret
inc
or
aaa
in
pop
das
mov
outs
bswap
das
push
fwait
aam
inc
retf
mov
mov
std
mov
pop
dec
ja
lahf
std
gs
sub
jae
xchg
inc
call
sub
adc
daa
adc
push
ja
inc
pop
or
lahf
imul
xchg
clc
push
push
imul
sub
test
lea
js
out
pop
(bad)
and
and
push
xchg
jmp
cwde
push
popa
jmp
push
add
push
in
add
mov
jmp
adc
push
pop
je
rcl
xchg
outs
scas
ret
dec
sbb
pop
jg
outs
mov
xchg
ss
mov
in
push
pop
es
mov
mov
ficomp
repz
ret
loope
push
cmc
in
(bad)
push
cmps
adc
es
ins
jno
pop
push
inc
arpl
pop
lea
pop
sbb
mov
(bad)
out
cmp
mov
cli
inc
cmp
outs
jnp
movs
(bad)
test
adc
dec
inc
imul
rol
jb
fs
push
jo
in
cmp
and
push
fdiv
lea
fnop
dec
adc
push
cdq
mov
cmps
mov
xchg
jp
outs
out
pop
fwait
jecxz
pushaw
das
jbe
ins
out
and
adc
movs
mov
jmp
mov
mov
ins
(bad)
test
mov
jge
and
push
hlt
fist
pop
out
data16
sub
lahf
rcl
xlat
add
test
mov
sub
cmp
jnp
aas
ja
pop
out
pusha
pop
popa
sub
and
(bad)
aaa
and
xchg
icebp
adc
sub
dec
iret
enter
adc
adc
movs
dec
sub
into
enter
aaa
mov
and
sub
xchg
data16
sti
sub
neg
lahf
cs
(bad)
add
jg
cmp
or
jg
test
in
mov
int
out
ror
inc
adc
pop
fwait
addr16
in
adc
jle
ins
mov
xchg
cwde
sub
outs
ror
ror
cdq
outs
rcl
into
add
mov
or
inc
push
test
push
test
out
add
(bad)
(bad)
cmp
jmp
stos
aaa
push
adc
jno
push
add
xchg
xor
mov
sbb
or
sbb
sbb
bound
pop
mov
dec
or
push
pop
or
push
or
and
add
rcr
pop
(bad)
cwde
nop
cmp
xor
pop
push
enter
xorps
mov
clc
ficomp
mov
fisttp
cmps
js
(bad)
adc
jle
int
retf
xor
jp
or
std
mov
dec
mov
mov
lock
retf
push
jg
(bad)
push
mov
std
pop
mov
dec
bound
xor
inc
enter
lahf
push
sub
dec
mov
js
lahf
ja
mov
mov
imul
jle
test
sub
out
inc
or
push
push
adc
(bad)
mov
dec
les
(bad)
into
add
mov
not
add
imul
lods
jmp
enter
or
xor
fild
mov
stc
inc
push
dec
div
adc
movs
jmp
rcl
stos
idiv
cmp
rcl
xor
inc
pop
xchg
jl
push
mov
iret
ins
out
out
je
inc
outs
xchg
pop
scas
lea
(bad)
imul
xor
xchg
push
sbb
xor
(bad)
sbb
xor
add
mov
or
imul
mov
into
push
push
xor
shl
jno
bound
mov
push
inc
mov
push
dec
lock
sbb
ficom
outs
push
mov
jp
test
sbb
test
xchg
shl
sub
adc
ret
fs
cmp
inc
test
retf
repnz
test
aas
lea
jae
ret
mov
xchg
inc
pop
push
pusha
hlt
ins
cmp
popf
mov
std
dec
jmp
inc
add
adc
mov
jb
xchg
mov
shr
mov
imul
sbb
out
xchg
repz
(bad)
push
sbb
out
or
xor
add
and
add
sar
loope
dec
mov
int3
cld
pop
push
fild
pop
mov
and
ror
push
dec
sub
mov
xor
cli
mov
pop
sar
dec
dec
cmp
les
scas
cmp
mov
mov
fidiv
push
(bad)
gs
cld
inc
push
pop
jno
sub
les
dec
cld
daa
fisttp
lahf
xchg
outs
sbb
jge
aas
mov
jmp
fst
ret
nop
or
xchg
cs
dec
cmps
idiv
xor
cld
daa
scas
pop
mov
and
add
mov
(bad)
mov
pop
pop
mov
das
xchg
cmp
mov
rcr
pop
xchg
enter
inc
xor
adc
leave
cmp
sahf
sbb
shl
and
mov
cmps
inc
not
out
mov
sub
jl
add
xor
mov
ja
aad
mov
scas
dec
xor
jne
cmp
push
cs
inc
jne
adc
(bad)
(bad)
es
leave
popa
inc
jae
sbb
mov
adc
push
(bad)
cmps
push
daa
hlt
cmps
inc
mov
inc
mov
mov
data16
mov
pop
push
pop
dec
ret
xor
push
mov
gs
loop
fist
mov
inc
xchg
int3
ins
je
sti
cmp
(bad)
xor
xchg
loopne
neg
add
int
in
fcomp
cmp
movs
outs
and
pop
je
in
sub
scas
push
(bad)
sbb
gs
mov
cmc
clc
mov
(bad)
mov
mov
(bad)
iret
mov
icebp
cmp
cmps
xlat
ds
dec
add
jo
xchg
push
cmps
pop
xor
shr
int
imul
pushf
and
mov
xor
pop
cs
inc
into
jl
es
and
sbb
into
test
adc
xlat
lds
cs
addr16
and
add
add
xchg
mov
out
repnz
stc
imul
ins
and
bnd
xchg
sti
es
push
paddq
(bad)
lds
cmps
sub
sti
lods
xor
idiv
fnstcw
jecxz
fiadd
lds
and
adc
pop
lock
mov
and
scas
shr
into
mov
js
lods
push
ret
call
in
jge
mov
pop
jno
inc
mov
mov
aad
xchg
loopne
mov
(bad)
retf
mov
mov
adc
add
scas
xlat
push
adc
retf
aas
push
aaa
push
retf
rcl
mov
pop
adc
loope
xor
inc
pop
dec
push
fxch
pop
adc
(bad)
iret
adc
test
xchg
inc
retf
cmp
add
mov
fs
ss
add
and
stc
mov
mov
mov
int3
mov
iret
sub
iret
sub
sbb
out
sbb
pop
dec
pushf
aam
jmp
nop
int3
push
mov
ins
(bad)
call
imul
cli
xor
cli
fnstenv
adc
sub
fsub
dec
cli
adc
push
lds
repz
test
out
mov
push
imul
push
popf
xor
stc
js
cmp
push
inc
std
xchg
cmp
jmp
test
arpl
enter
fld
mov
fnstcw
xchg
jg
xchg
push
xchg
(bad)
in
inc
or
cmpxchg
bound
(bad)
dec
stos
mov
mov
adc
sbb
sbb
dec
xor
inc
xchg
xor
test
or
sbb
fimul
leave
or
add
mov
fs
ret
mov
lahf
pop
adc
loope
stc
adc
add
pop
(bad)
adc
shl
mov
jno
push
push
stc
call
push
xor
cmp
fdivr
sub
lods
push
add
mov
ret
mov
pop
fwait
loopne
add
jns
mov
xchg
shr
outs
les
dec
ret
sub
fcom
test
rol
mov
push
cmp
imul
lahf
or
out
(bad)
ss
aam
mov
outs
js
xchg
inc
sub
jle
sub
push
dec
add
push
and
lods
mov
pop
imul
and
dec
or
adc
pusha
int3
pop
xor
lds
sbb
dec
sbb
ins
out
xor
add
dec
pushf
xchg
xchg
stos
mov
jle
mov
add
adc
pop
jg
out
cmp
or
or
arpl
dec
call
push
clc
and
dec
fs
cdq
sub
xor
sbb
and
pop
test
cmp
inc
xchg
jo
adc
xchg
and
inc
mov
xor
out
mul
js
xor
sbb
rcl
push
(bad)
fld
pop
dec
mov
mov
push
jmp
hlt
loope
xor
mov
in
test
je
cdq
mov
sub
xchg
(bad)
iret
cmp
jo
and
out
or
(bad)
sbb
mov
push
dec
and
cwde
cmps
push
sbb
out
and
retf
jp
pusha
add
movs
and
xlat
js
rol
rcl
mov
dec
jle
movs
pop
retf
aaa
nop
xchg
add
push
loopne
bnd
push
jns
and
push
ins
mov
ror
pop
jo
push
or
or
shl
neg
dec
and
fnstenv
adc
hlt
add
inc
aaa
shr
cs
cmps
jg
cmc
push
sbb
sbb
test
sbb
mov
push
repnz
hlt
movs
lea
movs
retf
jge
in
mov
(bad)
add
mov
pusha
mov
leave
pause
popa
mov
pop
add
test
mov
xchg
jo
jmp
pop
outs
add
cmp
test
xchg
movs
pusha
ret
jmp
xchg
ss
loopne
xchg
jecxz
lds
jmp
retf
jp
pusha
mov
int
cli
mov
mov
std
pop
mov
add
and
(bad)
clc
push
jp
aas
push
jge
rol
mov
mov
pop
fcomi
push
xor
push
push
scas
test
and
mov
inc
add
test
inc
iret
jl
adc
das
clc
pmovmskb
cmp
test
sub
push
fstp
loope
sub
cld
mov
mov
adc
ins
push
jb
aam
xchg
jecxz
movs
jae
nop
test
lods
dec
cld
test
and
psrad
mov
call
into
xchg
lahf
xchg
and
push
aad
or
push
inc
sbb
or
xor
jnp
arpl
add
cwde
add
aad
aas
pop
les
jmp
adc
loop
(bad)
xor
fnstenv
mov
and
js
movs
(bad)
dec
ficom
jp
sub
mul
(bad)
aas
imul
push
ss
mov
xor
and
xor
inc
xor
inc
cs
xchg
ins
out
push
dec
mov
pop
out
outs
(bad)
jnp
mov
cld
rcr
out
inc
xor
dec
shr
jg
cmc
and
fimul
xchg
arpl
icebp
aam
pop
push
mov
(bad)
retf
pusha
xchg
sub
cwde
mov
sub
cmp
jecxz
bound
cmp
and
mov
into
fs
or
inc
jg
jp
push
(bad)
push
xchg
jae
stos
pop
mov
scas
adc
loopne
scas
je
mov
imul
loopne
or
aaa
mov
fwait
fwait
or
scas
inc
sub
ins
fist
mov
paddusw
popf
jae
xchg
out
mov
loopne
inc
sub
das
iret
sub
(bad)
jb
and
aam
adc
mov
popa
pop
scas
push
inc
jl
inc
shl
jbe
sbb
jo
or
ficomp
std
push
out
mov
xor
inc
xchg
iret
sub
nop
call
and
nop
xor
inc
rol
mov
pop
pop
sub
mov
cdq
and
mov
dec
add
jg
ins
push
ror
fwait
mov
push
inc
int
sbb
inc
add
imul
cdq
jns
sbb
pusha
or
mov
inc
enter
test
xchg
lods
push
out
loope
mov
dec
ffree
int3
sub
mov
push
dec
cdq
(bad)
jmp
fild
jno
push
push
dec
sub
jmp
ins
scas
sub
inc
push
sub
sub
or
stos
xchg
sbb
fnstsw
leave
dec
sahf
cmp
xchg
stc
sub
sub
stc
sub
inc
xchg
iret
or
push
cmc
sub
and
call
dec
or
push
outs
in
mov
ss
ja
mov
mov
aad
mov
xchg
and
(bad)
mov
scas
sbb
push
mov
mov
adc
push
xor
xchg
loop
jge
test
loop
sub
xor
xchg
or
ins
add
mov
(bad)
movs
ds
mov
jmp
sub
jnp
cmps
mov
and
jns
cmc
ror
sub
icebp
(bad)
ror
cmc
sahf
pop
pop
arpl
gs
mov
dec
fsub
ins
fldenv
ins
fisub
sbb
test
loopne
call
mov
jmp
push
xchg
adc
push
xor
dec
ror
and
dec
ret
sbb
enter
movs
jnp
mov
push
mov
add
xchg
aam
jns
nop
sub
dec
sbb
mov
inc
sbb
scas
sysret
int
data16
pop
out
cmps
lock
xchg
into
cmp
ret
addr16
test
(bad)
inc
xchg
or
sub
test
(bad)
(bad)
enter
pop
mov
icebp
sbb
scas
sub
and
in
(bad)
dec
and
xchg
outs
mov
inc
cdq
add
cmp
mov
cmp
fidiv
ins
lea
stc
ret
pop
dec
sbb
das
lds
and
retf
fidivr
int3
add
mov
push
bound
mov
adc
xor
js
fdivr
adc
fst
aas
and
cli
lock
bts
inc
sub
mov
pop
call
inc
pop
mov
sub
popf
hlt
(bad)
mov
aad
add
xchg
(bad)
in
fimul
neg
dec
cmc
test
xlat
stos
dec
sbb
jle
sbb
leave
mov
mov
shl
lds
vsubps
or
xchg
int
sti
aam
sahf
sbb
push
into
mov
not
jns
sub
mov
mov
xor
sti
std
loop
add
fist
hlt
rol
icebp
frstor
out
push
adc
cwde
fmul
mov
loop
and
push
sub
cwde
les
jg
out
sar
xchg
(bad)
call
fimul
push
ret
sub
fwait
and
dec
call
adc
sbb
pop
ficomp
ins
xchg
push
sbb
adc
jg
jns
ret
jbe
and
mov
and
lods
in
xlat
jnp
mov
leave
lds
cmp
sbb
test
pop
dec
data16
inc
fwait
or
dec
fs
lea
lods
cmp
inc
and
ds
xchg
fisub
jle
pop
push
pop
jg
or
repnz
cwde
cmps
cli
xchg
or
stos
mov
xor
cli
clc
mov
adc
retf
xchg
mov
mov
scas
fwait
jbe
or
jns
pop
xor
movs
and
and
add
mov
adc
fwait
or
lahf
movs
jo
dec
lods
lds
cld
xor
jae
xchg
push
inc
xor
loopne
cmp
leave
pop
mov
push
dec
xor
cwde
lahf
adc
push
push
dec
std
cs
adc
mov
in
sub
enter
adc
scas
cmps
mov
jne
add
aam
(bad)
scas
adc
mov
ja
mov
pop
cmps
fisub
pop
jle
lock
push
out
fbld
xchg
imul
mov
int3
or
lock
mov
or
xchg
adc
pop
push
sub
idiv
mov
(bad)
sar
push
in
lea
jb
div
mov
add
enter
addr16
adc
push
sbb
scas
or
mov
cdq
ins
xor
add
and
adc
lea
cmp
fsubp
inc
add
ja
les
sub
and
and
adc
mov
iret
sub
adc
and
icebp
imul
sub
in
mov
mov
imul
inc
xchg
fiadd
out
mov
mov
xchg
cmp
and
jge
pop
fcmovnbe
adc
inc
cwde
add
dec
movs
(bad)
cmc
pop
cmps
cdq
daa
dec
sub
inc
fwait
in
mov
sbb
push
jl
pop
das
sbb
push
jae
test
lds
daa
mov
sbb
jg
cdq
xchg
icebp
call
sub
cmp
and
jmp
add
adc
push
cld
add
imul
arpl
cmp
rol
push
imul
out
lods
xchg
sahf
test
(bad)
jl
adc
fnstsw
stc
mov
dec
jle
pop
int3
jbe
stos
cmps
cmp
gs
lods
jnp
test
xlat
dec
mov
in
lea
mov
fst
pop
mov
nop/reserved
sub
and
inc
push
jbe
push
leave
enter
xor
lds
and
repz
fmul
out
dec
xchg
add
push
sbb
add
jp
pop
loope
mov
sbb
push
mov
fistp
sub
adc
mov
cld
icebp
div
cmp
je
push
and
mov
call
xchg
inc
pop
fimul
neg
test
adc
add
hlt
loopne
jmp
pop
or
(bad)
repnz
movs
fcom
shr
mov
into
xor
jae
sbb
inc
cmc
(bad)
cmps
out
adc
add
(bad)
xchg
xchg
sahf
sub
stos
mov
(bad)
stos
pop
jmp
test
cmp
add
(bad)
or
jecxz
pop
dec
aaa
mov
push
mov
sub
sbb
repz
xchg
pop
shl
dec
aas
je
add
pop
adc
xchg
loope
jno
fucomp
sub
daa
rcl
lock
sbb
and
test
push
arpl
push
mov
cmp
pop
and
push
in
ss
adc
loopne
fadd
jmp
cs
jmp
daa
out
jge
popa
adc
mov
add
xchg
(bad)
or
mov
sbb
(bad)
clc
jp
(bad)
cmp
call
(bad)
repnz
inc
and
test
nop
data16
xchg
arpl
mov
jle
out
xchg
mov
mov
xchg
clc
scas
or
pop
jecxz
cdq
adc
imul
dec
xchg
jmp
leave
(bad)
aad
(bad)
ds
mov
inc
ret
sub
test
les
jmp
test
mov
jbe
adc
xchg
cmp
add
mov
scas
dec
mov
lea
cmp
jbe
sub
sub
or
or
dec
xchg
rol
in
mov
in
lods
adc
std
shl
cmp
pop
sbb
sub
push
push
stos
out
push
scas
loop
rol
and
mov
jp
or
test
scas
div
adc
dec
add
hlt
aam
or
mov
inc
(bad)
dec
jecxz
add
mov
and
and
sub
inc
fwait
sub
pop
int
jmp
loopne
mov
pop
bound
pop
movs
mov
xor
jae
not
jno
xchg
pop
mov
mov
ret
jmp
xchg
dec
sub
int
outs
leave
or
mov
mov
mov
mov
shl
jae
imul
xchg
sahf
imul
sub
mov
pusha
mov
ja
xchg
pop
and
xor
(bad)
or
jmp
je
inc
ss
popa
mov
(bad)
push
xor
sub
shr
dec
xchg
loopne
dec
or
sub
data16
out
das
xchg
test
dec
(bad)
xchg
je
push
pop
loop
pop
adc
dec
loopne
push
add
enter
sahf
sti
and
or
jge
jo
popf
fadd
(bad)
rcl
pop
xchg
ins
out
sbb
mov
cmp
sub
mov
outs
mov
xor
fsub
dec
mov
jb
inc
mov
cmps
stos
xchg
fstp
lods
mov
das
popa
and
mov
cdq
inc
loop
enter
leave
push
xor
mov
mov
test
add
cmp
dec
pop
nop
stos
call
leave
or
adc
call
mov
add
aaa
dec
rol
lods
mov
cmp
sti
push
mov
cmp
cmp
inc
add
jno
in
dec
sbb
lods
out
iret
mov
test
jo
popf
xchg
mov
sbb
cwde
jo
cwde
shl
sbb
(bad)
cli
cmp
lods
xchg
stos
imul
jo
push
push
les
(bad)
lahf
inc
rcr
movs
xor
scas
dec
lods
dec
mov
inc
lea
test
mov
in
sub
leave
sub
std
outs
inc
jno
js
out
sahf
xchg
fiadd
mov
aas
aad
out
fwait
push
sub
sbb
lds
loopne
sub
adc
pushf
aad
mov
dec
jae
cld
rcl
out
cmp
lahf
and
dec
test
jns
test
mov
cmps
(bad)
push
xor
in
push
jl
xchg
and
jae
das
xor
mov
xor
mov
jnp
leave
fwait
retf
int3
push
mov
es
xchg
push
div
call
pop
xor
sbb
pop
lods
or
mov
sti
inc
mov
pop
cs
retf
pushf
xor
pop
or
sahf
mov
dec
or
leave
test
mov
jne
hlt
rcr
dec
pop
inc
add
jno
je
mov
mov
lahf
outs
mov
cmp
dec
inc
jbe
jae
push
leave
aaa
cmps
fwait
into
adc
xor
push
sub
cmps
loop
fisubr
(bad)
lock
add
std
add
iret
in
repz
push
and
in
aaa
jns
push
jp
jb
xchg
pop
js
je
jl
jp
cmp
(bad)
fldenv
adc
enter
pop
outs
or
mov
in
push
arpl
mov
xor
imul
movs
loop
leave
adc
push
sbb
shl
pusha
cmps
mov
mov
rol
repz
test
pop
pop
pop
pop
les
lea
adc
out
shl
adc
pop
jb
dec
push
test
sub
jae
xor
push
inc
fadd
pushf
not
movs
jae
and
ins
fnstsw
ffree
cmp
mov
mov
jge
je
inc
cdq
retf
mov
mov
push
scas
sbb
nop
jne
nop
xchg
mov
xor
outs
mov
arpl
sti
sub
out
sti
sbb
mov
jae
loopne
cwde
add
sub
jns
arpl
addr16
callw
xor
and
into
dec
push
add
das
xor
pop
dec
inc
(bad)
mul
fdiv
and
fsub
mov
push
mov
into
dec
aam
jns
daa
shl
fwait
(bad)
clc
mov
push
ret
jo
xchg
sbb
pop
mov
adc
vmovhpd
dec
and
rol
in
mov
jl
cmps
or
xor
xabort
mov
das
xchg
daa
aas
test
sti
push
adc
fadd
sbb
inc
cmovle
xor
mov
mov
test
push
ins
cli
loop
dec
pusha
rcl
mov
push
inc
or
inc
les
cmp
xor
arpl
out
lock
fstp
imul
mov
inc
repnz
fld
sub
and
shl
mov
cmps
push
jmp
mov
nop
out
imul
test
loope
sti
inc
test
mov
xchg
push
xor
inc
sbb
adc
mov
nop
sbb
mov
adc
push
ds
adc
icebp
jbe
sub
push
aaa
sbb
pop
sbb
mov
push
retf
jmp
dec
inc
mov
adc
hlt
pusha
inc
mov
cmp
push
ss
dec
lahf
pop
sub
sub
cmp
iret
ins
stos
sbb
adc
or
add
mov
fsub
data16
(bad)
push
jl
xchg
ins
cmps
pop
add
fldcw
pushf
fcom
call
in
cmp
mov
mov
xor
sub
or
je
stos
neg
add
iret
jecxz
mov
pusha
pop
xchg
(bad)
pop
loopne
inc
adc
dec
pushf
imul
arpl
fisttp
js
push
mov
jo
inc
cmp
movs
mov
xor
mov
stc
push
popa
pusha
ret
or
dec
sbb
ins
fild
ss
rcl
mov
cmp
fistp
enter
rcl
pop
cmps
jbe
stos
and
ja
inc
imul
xchg
ins
push
repz
sub
mov
jne
xchg
pop
push
xchg
pushf
jg
fisubr
jmp
sub
push
ret
ret
pop
push
pop
mov
sbb
(bad)
out
mov
ret
pushfw
adc
mov
or
fcomp
mov
lods
pop
imul
aad
sar
in
xchg
cmps
shl
leave
add
test
test
pop
xchg
or
outs
pop
int
pop
shl
pop
sub
xor
ins
rcr
and
cmp
jns
ins
ss
fisttp
pop
jb
xor
push
mov
scas
pop
in
mov
rol
test
jle
call
call
adc
mov
(bad)
popa
dec
or
inc
xchg
lds
mov
cmc
mov
(bad)
loopne
scas
adc
cmp
cmp
mov
mov
ret
daa
cmp
mov
sub
dec
mov
daa
in
mov
push
or
dec
sbb
push
mov
jns
sar
jb
ds
dec
sbb
push
xor
pop
dec
in
sub
stos
mov
jne
and
mov
(bad)
sub
(bad)
int3
aas
rcl
int3
sbb
cmps
or
sbb
jbe
dec
sti
fs
cmps
scas
mov
sbb
add
imul
jmp
nop
dec
mov
add
jbe
rol
add
inc
pop
retf
rol
leave
in
clc
arpl
cmp
stc
cmps
fbld
aad
add
mov
fwait
mov
push
xor
out
mov
sbb
lahf
adc
sbb
sbb
and
movs
test
sub
enter
jl
lock
mov
dec
shl
mov
sbb
loopne
enter
mov
inc
jo
js
dec
fs
mov
mov
push
rcr
push
inc
inc
sub
push
addr16
loop
cwde
or
movs
cmp
sub
es
xchg
loop
sbb
fsubr
adc
xchg
and
push
movs
push
das
inc
enter
push
mov
int
sub
loop
dec
fs
push
jecxz
in
(bad)
jge
or
or
pusha
sub
xchg
popf
mov
sub
lods
stc
lea
aaa
test
cmc
pushf
out
push
pop
inc
adc
shl
aaa
repz
xchg
sbb
dec
push
ret
and
cmp
aas
mov
dec
mov
xor
xchg
movs
popa
adc
mov
(bad)
mov
loopne
iret
loopne
pop
and
adc
stos
push
or
(bad)
aaa
pop
inc
xor
ret
in
out
cmp
stc
xchg
adc
mov
sub
bound
mov
mov
mov
xor
test
call
mov
shl
dec
(bad)
retf
pop
pusha
adc
repnz
inc
retf
in
push
aam
ins
jbe
push
in
movs
xchg
fdiv
pusha
out
mov
call
ret
sbb
in
push
adc
jle
mov
mov
add
ret
xor
jge
mov
cmps
fsubr
inc
imul
add
fsub
inc
shl
stos
out
icebp
inc
push
jmp
adc
pop
call
jmp
adc
dec
sub
std
ret
sub
std
outs
dec
ss
outs
add
mov
lock
mov
xchg
mov
iret
fisubr
mov
loopne
inc
pop
fnsave
fnsave
adc
repz
push
clc
cmps
clc
xchg
test
mov
push
adc
sbb
rcl
or
add
mov
cmc
xchg
cmp
cmp
call
ins
dec
pop
out
jne
push
and
out
dec
or
daa
cwde
out
jge
inc
cmp
les
xlat
cmp
jge
push
mov
cmp
sbb
xor
jle
data16
jne
sub
mov
ja
in
aam
cmp
or
cmps
sub
jl
push
mov
fidiv
sub
cmp
clc
scas
dec
inc
push
pop
repz
ror
and
(bad)
jnp
sbb
fld
jae
mov
fstp
xchg
mov
adc
(bad)
sbb
sub
fldlg2
cmc
pop
jl
repz
mov
ret
stos
loope
(bad)
mov
icebp
or
shr
test
(bad)
(bad)
pop
(bad)
iret
jo
pop
loope
scas
inc
or
push
nop
inc
retf
shl
pop
mov
aam
aas
out
stc
out
nop
cmc
mov
dec
movs
ret
test
lods
test
mov
xchg
and
dec
gs
mov
fstp
jnp
mov
fbstp
sub
lods
add
bound
hlt
out
or
inc
rcl
inc
stc
sar
sahf
retf
push
les
sub
adc
popf
or
loope
add
xor
xchg
pop
cld
test
adc
outs
cmp
cld
adc
js
retf
mov
cli
not
mov
int
lea
fisub
shr
aam
or
out
int3
cmps
adc
pop
jb
cmc
pushf
call
sub
add
rcr
test
cld
dec
outs
mov
add
enter
jp
out
ins
rol
cmp
jbe
je
retf
adc
pop
dec
out
mov
jl
cmp
repnz
mov
enter
iret
loope
jnp
push
(bad)
mov
(bad)
and
arpl
inc
sub
xchg
inc
push
imul
mov
push
pop
imul
(bad)
xchg
sub
pusha
aad
sbb
xchg
add
mov
je
lea
(bad)
fist
in
dec
xor
in
shl
adc
jae
sbb
popa
xor
gs
pop
retf
mov
pop
add
cmp
sub
xchg
rcr
je
sub
int
dec
sub
pushf
retf
shr
loop
push
icebp
lahf
push
int
in
gs
mov
fcom
sahf
mov
sbb
pop
pop
scas
inc
mov
sbb
mov
jb
mov
aam
xchg
bound
xor
icebp
(bad)
xlat
imul
pop
imul
jo
jg
pop
mov
outs
enter
mov
adc
mov
outs
or
(bad)
cmp
pop
adc
nop
jmp
rcl
pop
push
ret
sti
in
in
cdq
adc
es
and
add
jge
hlt
and
rcl
adc
xor
add
(bad)
lods
daa
call
ret
fidivr
sub
fbstp
mov
mov
inc
add
test
jg
repnz
scas
xor
cmp
mov
in
mov
xchg
(bad)
inc
cmc
rcr
dec
iret
not
xchg
sbb
das
cmc
(bad)
xor
gs
push
lods
stos
xlat
sub
fs
iret
push
mov
push
and
mov
sub
fistp
xor
and
or
or
inc
hlt
xchg
les
xor
mov
and
cs
mov
push
and
test
loop
push
fs
shl
(bad)
inc
cmp
ja
xor
lea
pop
enter
pushf
cdq
dec
fild
cmp
jne
xor
test
dec
fs
out
jbe
push
and
ins
outs
pop
dec
ret
mov
movs
test
and
es
call
movs
pushf
lea
jno
mov
pushf
sub
sub
enter
cli
sub
and
pop
push
pushf
addps
fsub
push
call
dec
call
mov
sbb
inc
dec
cmp
enter
sbb
shr
sbb
xchg
pop
test
jmp
int
add
add
jp
outs
ror
stc
ficom
push
push
push
leave
outs
mov
popf
into
sub
mov
shl
fbstp
mov
stos
femms
(bad)
sbb
dec
mov
inc
sub
sub
mov
loop
jne
xor
or
movs
dec
cmp
xlat
xor
pop
(bad)
xchg
pop
icebp
push
xor
ins
or
fstp
inc
push
sbb
mov
dec
dec
daa
dec
adc
cmp
dec
mov
jo
movs
adc
jne
inc
add
in
xor
in
aam
mov
xchg
push
cli
sub
or
or
in
jecxz
rcr
out
(bad)
pop
jo
xchg
cmp
sub
inc
mov
sahf
pop
xchg
push
jle
std
ss
or
jmp
enter
dec
xor
(bad)
ins
stos
cmps
jb
xchg
dec
add
scas
pop
not
cs
sub
sti
mov
into
push
cmps
rcr
std
call
popf
call
sub
popf
movs
xchg
jle
fisubr
ins
(bad)
aas
fnsave
iret
jo
mov
mov
addr16
(bad)
lods
push
xchg
push
pusha
pop
fbstp
add
lods
xchg
test
mov
push
cmp
jp
fisttp
or
push
ja
imul
retf
and
xor
pop
cmps
movs
cmp
mov
adc
aam
pushf
fnstcw
(bad)
cld
sar
pop
mov
push
or
pop
pop
mov
scas
add
jmp
jns
data16
sbb
cdq
lods
pushf
and
imul
in
pop
sub
jge
enter
mov
jmp
jo
and
mov
or
add
sub
sbb
es
dec
mov
adc
cmps
addr16
je
arpl
push
scas
pop
sub
xchg
sbb
xchg
cmp
mov
sub
(bad)
xlat
and
scas
xchg
xor
fcomp
push
loop
fild
sub
fwait
inc
cmps
fistp
retf
dec
push
int3
ins
push
sub
in
add
es
xchg
and
shr
mov
sub
int3
cs
lds
sub
enter
and
gs
cli
std
inc
sub
and
push
enter
idiv
pushf
movlhps
out
test
nop
xchg
pusha
fsubr
add
sub
jmp
jno
mov
scas
loope
dec
or
pop
out
push
jnp
add
aam
aam
push
sub
in
mov
(bad)
rcr
dec
pop
ja
xchg
sbb
sub
clc
cmp
ss
rcr
mov
jp
cwde
icebp
pop
sti
ins
data16
cmps
mov
cmps
add
enter
mov
shl
mov
and
mov
loope
inc
pusha
fst
ret
out
scas
leave
inc
cli
sub
sar
inc
mov
jb
ins
stos
test
lahf
and
xlat
enter
lods
and
sub
push
mov
sub
test
adc
jae
pop
add
iret
mov
xor
fs
mov
fnstsw
rcl
ret
cmc
jecxz
dec
inc
and
push
mov
int
imul
mov
add
inc
adc
dec
xor
cmps
pop
cmc
pop
mov
inc
mov
mov
pop
push
push
mov
imul
iret
add
pop
sbb
mov
outs
imul
xchg
push
test
sbb
push
xor
icebp
pusha
movs
xor
movs
pop
jle
inc
neg
sbb
pop
je
push
popa
mov
or
push
(bad)
in
lea
cli
cmps
or
jbe
xchg
or
out
fwait
and
xor
mov
cdq
mov
out
fsubrp
aad
repnz
jbe
push
fbld
std
or
test
dec
sahf
inc
dec
mov
sbb
add
push
test
cmps
and
loop
xor
(bad)
stc
or
push
imul
dec
lods
fisubr
mov
mov
leave
aam
jecxz
jle
mov
enter
add
(bad)
xchg
and
add
fcom
jmp
push
aaa
sub
xchg
add
aas
inc
int
dec
cmp
push
mov
sub
or
mov
jmp
repz
sbb
js
inc
sbb
add
repnz
push
lock
mov
inc
adc
cmps
mov
inc
inc
cmp
sysexit
mov
dec
aam
aam
cwde
daa
hlt
sub
mov
and
data16
xor
iret
mov
sbb
cmps
test
xchg
inc
xor
jae
and
rcl
and
sbb
int3
push
pop
xor
jbe
and
inc
cmp
cld
dec
or
fisttp
popa
pushf
mov
lahf
xchg
test
mul
in
inc
leave
xor
inc
fsubr
sub
call
test
and
hlt
fistp
dec
xor
xor
and
inc
gs
sbb
adc
ins
jmp
xor
fs
aad
push
add
arpl
stos
test
dec
(bad)
jno
inc
in
cmps
adc
jno
outs
or
idiv
stos
jno
push
pop
lock
xlat
repz
push
aam
arpl
or
test
inc
push
in
pop
out
mov
(bad)
push
jge
lea
sbb
ror
xchg
cs
dec
fwait
mov
xor
add
test
pushf
loope
mov
cwde
scas
out
or
push
cmp
mov
aaa
daa
and
push
sub
mov
jg
adc
jo
les
add
cmp
xchg
cwde
push
das
jno
stos
jl
inc
jb
xchg
jle
movs
mov
xchg
mov
test
dec
pop
cmps
loope
jbe
pusha
push
imul
mov
sbb
ret
ds
repz
pop
push
push
or
call
test
aam
xchg
jae
dec
xor
xor
cmp
imul
xchg
mov
loope
push
pop
call
cmp
(bad)
cmp
adc
imul
cmp
(bad)
pop
adc
mul
into
push
adc
ja
push
or
jmp
mov
movs
sbb
xor
(bad)
in
push
xor
xchg
test
mov
shr
lds
aad
fmul
xchg
mov
cmps
mov
pop
lods
and
add
mov
lahf
imul
call
in
data16
arpl
push
fcmovb
dec
ja
pop
fs
pop
add
pop
imul
aas
add
ins
or
xchg
(bad)
icebp
movs
and
push
int
in
fisubr
pop
in
rep
pop
or
cli
cmp
test
std
out
js
jb
dec
pop
push
out
scas
stos
pop
adc
fsubr
inc
cmp
in
push
iret
mov
lock
popa
xor
cmp
push
and
push
adc
pop
push
lods
fbstp
shl
sbb
fild
loope
scas
(bad)
ins
ror
mov
pop
jo
nop
add
test
movs
fdiv
cmp
cmp
push
sar
int
or
push
pop
stc
mov
mov
ins
je
cld
add
xor
push
(bad)
clc
not
shr
(bad)
push
mov
push
jbe
push
push
push
jle
mov
in
xlat
gs
add
push
fstp
ins
addr16
and
cmp
fdivr
mov
mov
repnz
pop
lea
rcl
addr16
or
adc
loop
les
cdq
push
add
xchg
xor
out
push
and
xlat
das
test
mov
or
mov
mov
movs
xchg
adc
or
fcomp
(bad)
(bad)
adc
mov
push
inc
mov
mov
mov
mov
scas
mov
cmp
das
and
xchg
sbb
lods
cmp
pop
jns
jbe
and
sbb
addr16
push
push
mov
and
add
adc
dec
pop
(bad)
sbb
into
pusha
pop
sub
xor
sti
outs
adc
xchg
xor
push
mov
mov
dec
into
out
nop
mov
test
and
(bad)
push
out
aas
dec
ficom
push
adc
and
ret
cmp
ret
hlt
xor
mov
sti
sub
cmps
mov
pop
gs
jmp
cmp
mov
sbb
and
scas
inc
loopne
xchg
ins
nop
(bad)
adc
aas
test
sbb
dec
jno
add
jle
repz
pop
movs
ficom
mov
sbb
int3
retf
add
inc
jnp
retf
add
test
(bad)
out
or
cs
fsubr
or
pusha
ins
inc
jp
adc
xchg
imul
dec
call
sbb
jg
popa
out
or
in
jmp
ret
cmp
pop
xchg
jae
adc
inc
and
lods
push
dec
jl
out
das
in
adc
stc
je
cmp
in
scas
dec
dec
sbb
mov
and
sub
repnz
mov
loop
mov
add
and
bound
inc
scas
test
mov
sub
lock
ret
int3
xor
retf
pop
es
std
cmp
cmps
mov
mov
dec
inc
mov
xchg
jns
ds
jb
sub
popa
leave
int3
xchg
out
dec
es
in
dec
mov
sub
mov
dec
sbb
and
add
dec
jnp
jp
loop
aam
jns
dec
(bad)
aaa
aas
ins
dec
aaa
stc
mov
push
aad
fbstp
sti
mov
mov
lahf
sub
cmp
jl
out
sbb
mov
adc
in
xchg
jns
(bad)
mov
fnsave
jmp
mov
aam
mov
scas
mov
cmps
lds
push
int3
fadd
aaa
mov
xchg
in
gs
and
dec
or
icebp
sbb
mov
mov
mov
mov
(bad)
icebp
movs
xor
loope
dec
mov
pop
pop
dec
pop
push
pop
sbb
mov
inc
into
sbb
repz
push
cmp
push
mov
xchg
ror
adc
adc
mov
add
inc
inc
dec
dec
adc
inc
gs
mov
jmp
push
pop
cmp
fnstenv
sbb
and
xchg
stos
cmps
lods
into
js
aaa
int
pop
clc
pop
mov
imul
loopne
fstp
sti
xchg
jo
pop
cmp
das
test
sti
fisttp
ds
cmp
or
out
enter
dec
fsub
mov
jae
fbstp
or
cmc
mov
cmp
pop
adc
popa
enterw
ins
(bad)
push
push
pop
xor
xchg
je
ins
test
mov
adc
jg
sub
inc
retf
xchg
add
xchg
xchg
xchg
gs
sti
or
in
ret
cmps
mov
cmovp
imul
mov
push
fwait
jge
jno
div
cmp
mov
jl
ins
and
cmps
das
in
push
pop
fcomp
jno
xchg
adc
lods
xchg
mov
mov
dec
sub
mov
outs
(bad)
ins
call
push
std
call
lods
xor
xor
mov
ss
mov
addr16
mov
ss
scas
adc
xchg
jp
mov
retf
lock
sbb
and
mov
and
imul
push
jmp
xlat
add
and
adc
xchg
out
pop
xchg
idiv
add
pushf
out
xchg
pop
popa
jmp
sbb
fs
adc
test
retf
clc
in
cld
cwde
dec
sub
mov
mov
xchg
or
cmps
jp
jns
vpmacsdql
pushf
fdivr
popf
in
cdq
push
mov
clc
jo
(bad)
sar
out
aad
push
out
fst
cmp
les
sub
lock
push
inc
add
cdq
mov
mov
mov
adc
das
outs
and
movs
cmp
push
lahf
and
loopne
call
pop
outs
scas
lea
setp
pop
cld
sbb
test
push
daa
jbe
arpl
mov
fist
mov
sbb
sub
pop
xchg
lods
mov
push
in
xchg
mov
sbb
add
dec
es
or
ret
add
sbb
pop
pop
push
xor
pop
rcl
jmp
push
dec
jns
dec
mov
loope
les
cmp
pusha
mov
je
mov
and
ins
dec
stos
and
xor
in
xor
xor
inc
mov
and
repnz
mov
mov
mov
sub
sbb
cmp
pop
repnz
mov
inc
dec
jbe
fisttp
call
xor
loope
and
jne
jne
shl
xor
mov
push
iret
jo
jl
mov
cmc
and
add
call
xchg
push
shl
jno
pusha
das
xchg
push
lahf
in
mov
xor
mov
fsubr
out
out
fistp
aam
mov
pop
jno
mov
sbb
sub
(bad)
and
push
mov
dec
out
popa
rol
mov
(bad)
fadd
jbe
dec
cdq
or
sbb
and
sbb
pop
sbb
pop
inc
sbb
push
adc
or
cmp
fwait
jl
sbb
xor
mov
sbb
and
pop
sar
jle
mov
push
outs
cmps
jb
sar
leave
fucomp
int3
rol
xchg
mov
or
ss
test
pusha
shl
dec
sahf
dec
xchg
mov
mov
lods
add
inc
retf
mov
int3
and
jbe
outs
sub
adc
add
dec
ss
stos
std
loopne
jmp
inc
add
into
mov
daa
and
xchg
push
push
cmp
mov
jo
rcr
test
cld
aaa
mov
int
add
inc
call
int
outs
je
mov
dec
cmp
lock
das
sub
stos
cld
mov
mov
inc
inc
adc
adc
mov
in
bnd
mov
mov
out
push
pop
cmps
jmp
repnz
ds
sahf
push
(bad)
aad
stos
push
nop
pop
xchg
push
mov
mov
inc
cli
mov
mov
adc
imul
xchg
pushf
inc
add
cmp
out
xchg
enter
jmp
push
(bad)
cdq
icebp
aaa
mov
push
mov
cmp
mov
push
add
(bad)
ins
pop
lea
pop
pop
mov
sahf
ret
mov
adc
jnp
sub
xchg
pop
jge
(bad)
xor
ds
cmps
js
push
inc
sub
out
out
out
and
or
sub
and
loopne
add
cmp
xor
or
in
popf
retf
pop
mov
fisttp
mov
bound
aaa
pop
stc
jno
imul
out
adc
push
hlt
mov
mov
mov
xchg
inc
fcom
(bad)
call
idiv
or
(bad)
sbb
arpl
cmp
xor
inc
push
imul
aad
sbb
sub
std
sbb
inc
xor
xchg
dec
test
cmps
loop
push
ficom
pop
inc
(bad)
jle
cmp
rol
dec
inc
xchg
jne
mov
out
pop
push
cmps
push
xor
mov
push
or
stc
popa
repz
shl
js
mov
xchg
mov
pop
mov
xlat
mul
sti
int
and
dec
jns
loope
out
enter
movs
inc
sub
and
cld
in
or
and
out
neg
jae
push
inc
and
push
fld
cmp
ins
cld
push
fcomp
(bad)
inc
sbb
jge
mov
push
or
dec
out
xchg
cmovns
les
scas
fwait
cdq
mov
sbb
dec
popa
adc
aaa
ja
sub
pop
mov
lahf
jno
sub
ja
push
into
imul
pushf
push
(bad)
push
xchg
and
jo
lods
js
fs
mov
inc
mov
pop
sub
sbb
cmc
dec
sbb
pop
cmp
sbb
push
adc
in
scas
cmp
aad
sbb
addr16
ror
movs
dec
xchg
fldcw
inc
movs
mov
sub
in
pushf
xchg
jge
test
in
add
xchg
test
rcr
call
mov
or
imul
dec
adc
or
add
leave
std
outs
dec
leave
push
mov
jmp
jns
aas
cwde
ja
xchg
xchg
jns
push
xor
sub
add
addr16
jne
sub
(bad)
movs
int
mov
adc
test
mov
scas
push
xlat
retf
mov
shl
push
mov
inc
or
into
push
inc
mov
xchg
add
dec
sbb
cld
pop
addr16
and
call
enter
ins
dec
nop
int
sbb
cmp
in
mov
loop
add
hlt
iret
pop
xchg
popf
in
xchg
inc
scas
pop
pop
dec
push
adc
xor
jg
iret
scas
std
mov
push
ins
sbb
das
and
lods
mov
dec
ret
mov
add
pop
int
jnp
call
sub
mov
add
or
adc
test
imul
mov
scas
das
aas
movs
xchg
mov
out
mov
inc
mov
leave
jmp
cmp
mov
outs
pushf
data16
jnp
retf
(bad)
fwait
ss
mov
mov
mov
call
daa
addr16
sub
outs
dec
leave
add
loope
and
cmp
adc
pop
mov
retf
mov
mov
xor
jge
mov
sub
in
push
cwde
(bad)
dec
dec
aaa
lods
cmp
mov
push
shr
xchg
test
sub
push
iret
dec
dec
jle
adc
and
sub
add
fidivr
retf
add
loope
pop
bswap
lea
xlat
inc
aas
mov
aaa
fisttp
lods
and
movs
rcl
into
(bad)
xchg
enter
mov
sahf
pop
jmp
sahf
push
adc
inc
sub
(bad)
dec
test
daa
gs
push
lods
and
push
(bad)
js
icebp
arpl
enter
ins
into
mov
ret
jb
add
xor
neg
dec
popf
pop
mov
(bad)
jo
or
stos
or
test
sub
shr
call
add
imul
mov
push
jae
pop
ret
pop
xor
(bad)
add
mov
jl
sbb
out
ror
ins
scas
and
js
data16
test
push
sub
test
pop
mov
mov
test
(bad)
in
mov
xchg
sbb
pusha
sub
aad
pop
mov
shr
(bad)
mov
inc
adc
and
cld
test
and
xchg
fbld
inc
mov
mov
adc
dec
jne
jne
test
fiadd
mov
fild
add
push
adc
push
stos
adc
shr
push
clc
and
imul
or
repz
cwde
sbb
js
mov
dec
hlt
sub
cmp
out
xor
aam
ja
hlt
imul
and
repz
xchg
add
not
push
inc
sti
dec
arpl
(bad)
leave
mov
pop
pop
push
mov
jmp
sub
push
push
xlat
dec
sbb
pop
sbb
outs
mov
rcr
jle
jecxz
sbb
push
mov
push
fcmovbe
aas
popf
push
adc
dec
mov
imul
mov
call
mov
sbb
clc
dec
mov
mov
shr
cmc
dec
stos
add
loope
push
lds
xchg
iret
adc
xchg
cmp
pop
adc
mov
fmul
push
inc
rcr
fcomi
or
inc
fisubr
std
push
mov
sbb
ja
pushf
test
das
mov
inc
inc
jmp
lds
jl
jle
dec
sbb
leave
icebp
sbb
icebp
xchg
mov
retf
xchg
add
fcom
dec
or
cmps
(bad)
adc
jae
scas
je
(bad)
dec
les
adc
sbb
movs
sti
jns
xor
add
inc
jge
adc
sub
ror
out
mov
(bad)
icebp
adc
test
ja
cld
dec
ret
cmps
movsx
fs
jecxz
iret
push
jge
xchg
dec
push
inc
stos
sbb
mov
inc
or
lds
cwde
pop
pop
xor
mov
add
add
adc
into
sub
cdq
dec
mov
jmp
iret
dec
clc
sbb
cmp
je
adc
movs
mov
add
and
mov
fisubr
sbb
adc
shr
push
xchg
or
push
das
int3
xchg
das
ins
aad
popa
std
push
fist
adc
test
test
cmp
dec
dec
or
pusha
and
push
jbe
jge
nop
xchg
bound
push
loope
nop
arpl
arpl
test
sbb
repnz
data16
lock
stos
loop
sub
imul
mov
jb
movs
xchg
lods
dec
gs
cmp
aad
mov
inc
fistp
fcomip
lods
ins
or
addr16
sti
movs
(bad)
out
or
mov
fmulp
rcl
jb
lods
sub
mov
retf
pop
jb
add
push
jbe
shr
jbe
sub
in
mov
loope
mov
jmp
and
fld
pop
cld
xor
ret
inc
or
mov
xchg
adc
mov
add
fs
push
push
adc
push
js
dec
ret
mov
lds
movs
sub
cmp
fwait
and
dec
and
(bad)
cmp
jg
sub
fwait
pop
inc
add
mov
and
jge
paddq
xor
push
daa
jno
jb
(bad)
or
sbb
int
mov
fcom
xor
call
loope
test
popf
cmp
(bad)
jnp
iret
stc
push
pop
gs
add
or
pop
xchg
lds
pop
mov
pop
jmp
sbb
or
inc
dec
out
xor
cmp
jmp
jg
mov
add
mov
frstor
int3
sbb
iret
test
out
hlt
dec
fstp
clc
xchg
add
jg
pop
adc
js
pop
cmp
das
and
mov
sti
mov
jg
data16
pop
sub
sub
xchg
in
adc
add
cmp
jl
ja
jg
pop
cmps
ss
call
jmp
or
ja
sbb
cmp
and
repz
nop
sbb
inc
xchg
xor
xchg
pop
mov
mov
aas
dec
dec
xor
out
xor
cld
popf
mov
mov
leave
in
push
fcom
fst
xor
popa
(bad)
cmp
test
pop
and
gs
mov
and
jb
int
sbb
xor
shl
add
stos
or
dec
sub
mov
and
pop
cmps
(bad)
xchg
aam
in
std
out
cmp
push
jns
adc
or
xor
loope
dec
mov
retf
ret
xor
loopne
xlat
mov
cs
push
test
mov
ss
mov
xchg
mov
retf
and
and
jp
ins
icebp
cld
es
sub
push
cs
add
daa
jg
loope
out
mov
gs
outs
inc
push
dec
in
lods
adc
clc
mov
std
movs
cmc
call
pop
push
(bad)
fcomp
dec
and
xchg
fcomp
cmp
jae
fxch
push
fcmovu
out
pop
int3
test
cli
movs
xor
loope
repnz
popf
xchg
out
rep
mov
or
faddp
jbe
dec
and
fimul
push
pop
fadd
jge
scas
cmc
scas
std
fs
pop
sar
hlt
out
aam
cdq
in
bound
sub
ins
xor
adc
xchg
or
or
or
imul
test
repz
shr
pop
fcomp
dec
jle
int
dec
ds
lahf
mov
or
imul
clc
or
push
add
das
or
ficomp
xor
data16
out
cli
dec
out
test
loop
iret
dec
es
rcl
test
add
pusha
ror
dec
dec
hlt
cmp
pop
or
aas
fcmovu
xor
pop
mov
or
loop
daa
imul
(bad)
les
(bad)
xlat
and
lea
push
mov
mov
arpl
xchg
cmp
in
(bad)
sub
mov
jge
shl
sbb
add
(bad)
in
push
and
outs
sbb
dec
dec
outs
call
ret
cli
sub
lahf
cmp
and
push
pop
cmp
(bad)
push
xchg
dec
loop
jbe
add
in
or
pushf
stos
dec
cdq
retf
xchg
lea
stc
mov
bound
lods
push
and
(bad)
out
ins
xchg
movs
fidivr
sbb
(bad)
or
inc
mov
push
mov
mov
fadd
pusha
jmp
jl
ins
test
xchg
fwait
inc
fst
popf
sub
adc
push
adc
lods
add
pop
dec
pop
cmp
ds
sahf
cmovg
mov
push
test
mov
sar
lods
fsubr
push
jns
pop
push
(bad)
mul
aam
or
cmp
mov
loop
xor
inc
dec
adc
loop
test
jne
sub
mov
cmp
in
mov
mov
sbb
dec
lahf
std
test
jbe
popa
retf
test
out
into
(bad)
(bad)
cmp
fild
xchg
aam
mov
jo
push
jae
cmc
jbe
mov
rol
push
pop
jl
push
pop
pop
jno
aam
or
movs
pop
push
popa
lock
nop
call
out
lock
enter
sub
push
mov
dec
popa
add
sub
and
sbb
cmp
pusha
out
add
in
jmp
xor
sbb
inc
cmps
jmp
rcl
inc
and
or
pop
jns
bound
out
pop
jecxz
lock
sbb
ror
jbe
pusha
sub
daa
stos
aam
or
aad
ror
mov
inc
inc
xchg
fcom
sub
push
ins
inc
inc
push
sub
scas
daa
into
aas
ret
repz
mov
mov
in
sub
pop
inc
jb
xchg
out
aas
clc
stos
retf
shr
ins
adc
sub
mov
outs
jb
xchg
pusha
and
jecxz
test
sub
add
mov
adc
mov
adc
loop
rol
out
xor
div
aas
sbb
fld
xor
dec
and
add
jle
and
mov
cwde
pop
adc
fnstenv
ficom
xor
cli
ss
xchg
mov
fwait
int
mov
je
or
mov
(bad)
xor
ror
push
imul
jns
pop
(bad)
neg
into
mov
adc
dec
retf
or
pop
or
jge
movs
xor
inc
sahf
(bad)
nop
out
inc
sbb
xchg
les
mov
test
jnp
mov
nop
sub
sub
pop
stc
inc
xchg
fist
xor
int3
fs
mov
std
fyl2x
js
pop
add
popa
sbb
jp
ror
sub
leave
pop
jecxz
call
scas
aaa
pop
mov
cli
lahf
push
add
xchg
ret
dec
outs
fincstp
out
adc
jmp
(bad)
shr
mov
sbb
inc
mov
lods
in
retf
ret
addr16
movs
dec
movs
std
push
dec
ins
(bad)
adc
jle
and
and
add
fmul
das
popf
je
into
mov
scas
mov
adc
cmp
mov
mov
sub
cs
jb
pop
push
fdivp
shl
mov
or
call
jb
std
add
lds
push
stos
ss
push
sbb
je
jbe
xchg
dec
xchg
mov
(bad)
sbb
imul
mov
aaa
xlat
sbb
mov
inc
sbb
repnz
das
sub
ss
daa
aam
loope
ret
jae
dec
fwait
data16
mov
pop
and
ss
out
test
inc
or
adc
into
iret
call
in
loop
(bad)
push
mov
pushf
mov
sti
idiv
push
leave
mov
dec
ins
jbe
aad
cs
(bad)
js
pop
fiadd
jle
mov
rcr
scas
or
dec
hlt
int
adc
sub
or
test
imul
mov
push
sbb
xchg
xchg
ja
call
or
call
lds
mov
inc
in
xor
sub
daa
jl
dec
outs
cwde
hlt
test
cmp
bound
push
jg
dec
mov
and
out
pop
es
stos
lea
adc
xor
or
aam
enter
sub
in
lock
jmp
xor
(bad)
je
into
cmp
inc
div
(bad)
ret
ins
or
hlt
fcmovu
mov
push
cmp
and
lea
je
sbb
arpl
mov
fucomp
add
outs
retf
mov
aas
out
dec
sar
scas
cmp
xchg
xor
push
ss
std
add
ins
adc
mov
add
sbb
push
xchg
pop
mov
jmp
ffree
sbb
pusha
psllw
pop
mov
test
xlat
loope
sbb
call
mov
sbb
and
mov
popa
ja
faddp
and
xor
mov
pushf
cmp
mov
mov
inc
shl
jo
sub
mov
mov
cdq
fsub
push
inc
inc
je
div
fs
fs
push
jnp
imul
ds
adc
(bad)
in
adc
add
and
stos
cmp
inc
test
call
shl
cli
push
add
(bad)
and
or
sbb
inc
push
rol
aad
and
and
aaa
xor
dec
adc
test
mov
stos
mov
ror
lods
bound
icebp
pusha
mov
scas
jnp
loope
dec
jmp
loop
loope
into
xor
movs
leave
fist
call
(bad)
mov
repnz
push
jne
dec
xor
inc
cmc
xor
fisub
dec
xchg
ins
jns
cwde
ret
std
jmp
or
jnp
adc
mov
and
fdivr
jb
lods
in
imul
and
pop
jnp
loop
imul
out
push
xchg
sti
ja
xor
loope
(bad)
push
lds
or
jo
cmc
add
sti
dec
inc
shl
mov
das
mov
ja
xor
xchg
xlat
dec
add
imul
and
pop
js
inc
mov
and
pusha
leave
mov
(bad)
cmc
jbe
loope
xchg
not
ds
or
and
scas
stos
or
scas
ds
ror
jl
stos
pop
in
sbb
ss
xor
push
mov
out
imul
out
js
sbb
push
mov
adc
loopne
ret
xchg
in
cmp
adc
fwait
add
mov
loopne
ins
sub
in
mov
cmp
imul
dec
cmps
sub
jecxz
mov
mov
push
inc
mov
adc
xor
aas
test
popa
aas
adc
jnp
inc
leave
adc
fldcw
fnsave
add
and
loope
int3
aas
dec
stc
jge
mov
ficomp
inc
ins
mov
xchg
pushf
xchg
not
jae
cmp
int3
mul
fstp
outs
xchg
iret
call
icebp
es
mov
or
mov
imul
add
inc
push
mov
cmp
sbb
inc
inc
sbb
faddp
jge
loop
aad
aaa
inc
aas
nop
add
mov
in
push
call
gs
dec
cs
add
out
fwait
test
xchg
or
push
das
xchg
mov
ret
xor
(bad)
call
(bad)
adc
push
xchg
push
or
(bad)
mov
inc
mov
lds
pop
test
cmps
cmp
dec
fwait
cmp
jno
jbe
mov
rol
dec
dec
xchg
cld
xchg
sub
in
sub
fxch
xchg
hlt
cdq
add
(bad)
iret
xchg
(bad)
jmp
jno
sbb
aas
or
xor
packsswb
arpl
imul
aam
jp
cwde
push
call
outs
jb
cmc
jl
(bad)
jg
test
jl
aaa
push
cld
inc
cmp
repz
fs
scas
mov
outs
push
mov
mov
mov
add
mov
bound
or
mov
jl
mov
xor
cmp
mov
push
dec
dec
sub
push
icebp
call
dec
mov
ja
imul
jge
mov
push
xor
repnz
dec
dec
mov
jge
leave
mov
shl
xchg
mov
js
enter
cmp
pop
xor
inc
push
outs
mov
push
into
and
into
ret
ja
je
cmps
dec
pop
push
pop
pop
out
pop
xor
cmc
pop
rcl
fld
mov
push
(bad)
fadd
addr16
lods
inc
sar
mov
add
pop
and
loopne
outs
mov
xchg
cld
out
mov
(bad)
adc
jno
shl
daa
(bad)
mov
cmova
pop
dec
mov
xor
sahf
nop
pop
fistp
into
cmp
dec
jl
pop
and
add
clc
push
lods
mov
in
ss
sbb
int
movzx
ins
jo
inc
add
dec
jp
xor
clc
sti
sbb
sub
mov
out
lds
xor
jge
mov
stos
jp
neg
mov
or
mov
mov
dec
pushf
inc
arpl
scas
retf
rcr
sub
cs
test
js
mov
add
add
jp
out
lods
or
lock
push
test
retf
pop
movs
je
sar
push
adc
lods
sti
sub
fsub
sbb
fsub
push
(bad)
xchg
sahf
push
mov
js
pop
outs
xor
and
inc
push
jns
fimul
pop
aaa
add
mul
jae
add
xor
cdq
jbe
jp
repz
dec
and
push
push
inc
stos
stos
pop
and
sub
in
test
mov
sub
and
gs
test
add
lds
ins
fwait
xor
iret
mov
and
xchg
mov
sbb
pop
or
mov
mov
jge
(bad)
jb
data16
repnz
popf
jl
dec
xor
cmp
sbb
xor
mov
sbb
nop
sbb
mov
jb
loope
loopne
cs
pop
xchg
jl
mov
sbb
arpl
and
cli
and
fmul
cmp
sti
or
xor
(bad)
int
dec
fsub
out
and
mov
fs
or
adc
test
jno
mov
cli
retf
sub
xor
cwde
add
shl
scas
cld
jp
jle
test
xchg
cwde
test
push
and
call
push
pop
push
adc
cmps
sar
sbb
jle
push
div
(bad)
in
adc
(bad)
ds
sub
dec
xchg
or
xor
pop
bound
xchg
cld
iret
cmp
pushf
cmps
repnz
aas
inc
ret
mov
daa
ror
dec
rcr
xor
scas
or
mov
int
xor
nop
cdq
lods
push
xor
data16
inc
shl
stos
mov
cmps
jns
xor
adc
mov
inc
pop
retf
ds
fisub
(bad)
adc
repz
(bad)
ficom
or
addr16
add
test
sub
pop
xor
mov
inc
ins
xchg
(bad)
out
cli
loopne
xor
call
sbb
xor
test
xchg
mov
aad
loop
scas
call
fcomp
(bad)
sbb
dec
sub
not
sbb
cwde
jae
inc
mov
(bad)
enter
mov
fisub
cmp
push
pop
adc
or
jmp
mov
je
push
mov
aam
dec
mov
mov
cs
fs
(bad)
jae
mov
stos
pushf
adc
push
std
xor
rol
icebp
inc
add
dec
cmp
mov
push
jnp
sub
xchg
mov
in
pushf
retf
loopne
cmps
dec
ja
inc
cs
imul
push
adc
callw
fwait
add
adc
pop
fwait
imul
xchg
or
mov
in
out
(bad)
mov
inc
fld
ss
sti
mov
push
das
cli
inc
mov
mov
and
lds
add
push
test
test
sbb
sbb
sub
adc
dec
or
sub
popf
push
gs
dec
push
xchg
cmp
stos
push
jl
nop
push
adc
hlt
sbb
in
shr
sub
(bad)
cld
or
sbb
adc
lahf
(bad)
jmp
mov
or
xchg
or
loopne
shl
js
push
shl
inc
mov
dec
out
pop
and
pop
lahf
push
add
jo
nop
movs
gs
stc
jge
lods
(bad)
push
sub
mov
call
inc
dec
push
mov
dec
push
js
xor
cmp
outs
sub
cmp
std
cmp
pop
test
retf
inc
xlat
fimul
mov
mov
xchg
ret
jns
pop
cmp
out
ret
pusha
cmp
xchg
xor
shl
jns
sti
push
cs
aaa
es
pop
and
xchg
mov
adc
jns
or
inc
popf
jne
int3
mov
sub
jg
(bad)
sub
mov
and
pusha
ret
into
xchg
dec
ja
mov
in
test
and
daa
fnstenv
jl
and
xchg
jnp
lea
jg
or
(bad)
push
stc
inc
cmp
sub
iret
enter
hlt
or
mov
jmp
dec
hlt
das
(bad)
out
jmp
adc
push
mov
sbb
dec
lods
and
jle
push
popa
jb
jno
jmp
or
cmp
(bad)
jmp
les
mov
sar
mov
clc
and
mov
inc
dec
gs
mov
(bad)
in
xchg
fcmovb
test
aas
je
xor
pop
aas
adc
fidiv
add
shr
inc
inc
and
jb
push
test
hlt
push
scas
sar
xor
test
retf
fwait
xchg
js
xlat
pushf
rcl
or
and
xchg
test
(bad)
xchg
in
xlat
scas
cmps
mov
cmp
cmp
daa
scas
movs
in
sub
aas
or
and
pop
sbb
pop
sub
pop
sti
inc
or
cli
cmp
loop
(bad)
or
setae
pop
mov
mov
pop
pop
mov
or
or
call
loope
rol
ret
mov
test
pop
add
adc
add
mov
in
scas
add
xchg
cmps
call
sti
mov
pop
scas
mov
movs
retf
jmp
jecxz
les
push
in
and
ret
push
cmp
cdq
aaa
lock
mov
xchg
sbb
push
sbb
mov
pushf
cdq
cmp
sub
mov
sub
adc
xchg
adc
lahf
push
pop
int
adc
adc
jae
jg
inc
sbb
pop
js
movs
in
aad
in
xchg
popa
or
into
cmp
cmp
mov
(bad)
mov
outs
mov
pop
mov
sbb
fnstenv
iret
xchg
add
dec
lods
push
in
xor
inc
inc
dec
mov
ins
dec
inc
jp
jno
and
mov
mov
ss
add
test
push
lahf
dec
(bad)
(bad)
movs
dec
lods
pop
(bad)
push
ror
(bad)
mov
data16
jbe
fldenv
jecxz
jle
add
test
outs
add
fcos
adc
sub
mov
sub
sbb
scas
and
cmps
hlt
in
xor
test
jmp
jbe
adc
int
add
test
jns
xor
js
and
xchg
xlat
add
add
mov
scas
(bad)
(bad)
inc
leave
mov
jmp
inc
cwde
enter
mov
cmp
sub
sub
fsubrp
(bad)
xchg
inc
ss
pusha
push
push
mov
(bad)
out
and
xchg
sar
pop
out
sub
jne
daa
sub
dec
es
mov
jp
std
mov
jmp
ins
push
lds
popf
pop
popf
push
dec
cmp
loope
pop
neg
sub
in
ret
mov
mov
iret
fs
loope
jno
inc
cmp
arpl
loopne
dec
pop
inc
imul
into
jmp
bound
xor
sub
inc
jb
hlt
adc
retf
add
xchg
add
daa
sub
sbb
pop
enter
mov
out
or
pop
and
movs
cmp
popa
and
push
sub
dec
fsub
in
js
ja
movs
das
aaa
stos
inc
test
lahf
pop
ret
xor
push
push
int3
dec
cmovp
dec
cli
ret
fist
aaa
xor
mov
push
lock
push
mov
nop
(bad)
adc
jns
cmp
dec
add
adc
(bad)
jne
outs
ins
sub
cmp
add
mov
test
clc
fdiv
fisub
and
sbb
(bad)
cld
pop
adc
cmp
mov
xchg
mov
and
dec
mov
pop
push
dec
js
lods
add
xor
mov
push
cld
lock
cmps
lea
mov
daa
out
clc
fs
inc
mov
pop
jl
fdivr
lahf
fdivr
sbb
push
push
mov
ds
mov
push
jg
outs
mov
add
fldcw
sub
aaa
adc
inc
nop
sub
enter
(bad)
cdq
out
mov
ror
and
std
jmp
int3
cld
mov
in
inc
mov
cmp
jle
cmp
scas
pop
jmp
sub
dec
in
(bad)
cld
mov
push
mov
cs
add
dec
aas
xchg
cmp
cmp
push
cmp
push
mov
mov
dec
jecxz
daa
(bad)
sub
sbb
xchg
(bad)
push
rcr
pop
jmp
mov
arpl
and
mov
cmp
jge
dec
push
xchg
pop
in
adc
push
mov
dec
jmp
inc
xor
(bad)
xchg
xor
cmc
into
bound
xlat
mov
call
sub
(bad)
clc
fdivr
rcr
(bad)
movs
out
test
clc
in
retf
mov
xor
mov
sub
call
nop
ret
jae
(bad)
leave
fdivr
xlat
push
fbld
xor
repz
loope
adc
mov
xor
or
pop
cmp
cmps
mov
jbe
imul
xchg
mov
mov
xchg
jmp
inc
xchg
add
cmc
dec
in
out
xchg
jnp
adc
pop
mov
pop
pop
clc
in
push
inc
pop
push
cmp
ins
je
mov
ret
ins
pusha
sbb
aam
shr
jmp
ja
cmp
ds
ja
add
fwait
loope
or
xor
daa
cmps
xchg
jo
cmp
push
mov
cmp
push
fs
xchg
jl
das
or
or
call
mov
push
mov
pmaddwd
or
cs
add
cdq
(bad)
fisubr
les
inc
inc
jmp
pop
ja
(bad)
push
pop
lods
xchg
mov
mov
ficomp
mov
je
push
mov
push
add
mov
repnz
add
js
shl
jle
scas
js
cmp
or
ficomp
lods
mov
repz
out
lods
bound
ret
jg
out
vmovaps
inc
out
xlat
lahf
push
int3
test
push
mov
imul
lock
pusha
add
sub
pop
mov
jae
movs
fs
sar
lods
adc
mov
out
dec
out
jo
sub
push
add
fstp
or
mov
shl
loope
arpl
dec
adc
and
nop
push
cli
and
push
dec
mov
fisubr
ret
jns
push
(bad)
imul
inc
adc
dec
cmp
xchg
xchg
sti
jmp
pop
xor
jmp
push
sbb
je
mov
push
cdq
in
out
and
push
mov
(bad)
(bad)
cli
sahf
sbb
inc
out
and
out
and
sbb
or
mov
push
pop
mov
adc
outs
cmps
es
xor
mov
aad
or
lahf
adc
lahf
mov
repz
ins
stc
xor
cmps
fld
stos
scas
sbb
adc
jp
inc
sti
inc
pop
loopne
pop
ror
inc
popf
lods
push
and
and
or
cmp
pop
enter
jl
jnp
adc
cwde
sub
push
push
repz
nop
xor
es
test
mov
mov
fisubr
cmovno
jecxz
cmps
test
mov
pop
ins
hlt
icebp
sbb
jae
dec
mov
add
add
cmp
scas
das
js
into
in
and
jge
cmp
or
mov
cmps
dec
ret
xchg
in
test
xor
inc
pop
mov
aas
pop
(bad)
arpl
xchg
jecxz
pop
adc
sub
movs
sub
dec
outs
je
in
mov
(bad)
std
call
call
push
xchg
stos
push
dec
xchg
xchg
and
ficomp
aaa
ins
stos
fmul
outs
or
mov
in
xchg
adc
call
cmp
xchg
(bad)
adc
xor
xchg
adc
dec
and
out
mov
push
xor
loop
adc
dec
ret
popa
retf
jo
scas
cwde
ja
pop
es
sti
or
imul
add
fsub
pop
adc
sub
rcr
cs
lods
add
aaa
stos
mov
push
loope
dec
push
sbb
cdq
dec
lahf
movs
mov
arpl
push
xchg
retf
push
frstpm(287
cs
mov
mov
pop
push
mov
fimul
push
aas
sub
sub
pop
movs
(bad)
int3
pop
inc
and
inc
outs
aas
jecxz
in
xchg
(bad)
iret
inc
jle
jp
imul
inc
cmp
dec
out
mov
jle
xchg
pop
cwde
sub
add
ja
sbb
cmps
stc
push
(bad)
sbb
and
shl
je
out
dec
mov
adc
jp
adc
pop
sbb
mov
fwait
jle
int
stc
push
fisttp
scas
mov
and
(bad)
popa
adc
inc
test
or
push
dec
or
jbe
in
mov
inc
and
imul
adc
fadd
jns
or
xor
mov
fs
push
je
mov
xor
shl
pop
pop
daa
mov
xor
dec
or
in
ins
pop
adc
pusha
inc
jne
jno
and
inc
jmp
mov
lock
xchg
rcr
add
ja
fcomip
cmp
(bad)
sub
add
push
xor
sub
xlat
add
mov
and
pop
int3
ja
pop
rcl
aad
test
pusha
mov
push
neg
das
add
xor
pop
add
adc
inc
mov
(bad)
mov
sbb
shl
xchg
(bad)
push
xchg
ficom
imul
xlat
mov
push
or
or
scas
add
ror
fucomip
retf
jg
cmp
xor
cli
push
sub
push
fild
or
outs
lods
aaa
xchg
jns
mov
xor
xor
xor
mov
fiadd
(bad)
jmp
lahf
jno
scas
xor
mov
jb
icebp
xlat
(bad)
fimul
or
jno
mov
cmp
data16
push
push
cdq
test
and
fstp
repnz
inc
push
push
fs
outs
dec
cmp
ficom
dec
fistp
in
pop
mul
xchg
stc
mov
xchg
adc
adc
movs
xor
movs
popa
push
int3
push
std
scas
mov
iret
cmc
out
fcomp
xchg
fidivr
mov
push
sbb
rol
(bad)
(bad)
pop
lds
addr16
cmp
(bad)
dec
push
loopne
xchg
xchg
push
std
sbb
push
fbstp
pop
imul
test
mov
data16
sti
mov
add
or
outs
mov
and
push
scas
stos
jnp
sub
cli
sbb
popa
mov
push
stc
dec
and
ins
cmp
outs
push
icebp
ret
and
mov
inc
pop
dec
fstp
out
mov
je
xchg
xor
xor
dec
dec
loop
scas
test
les
jmp
clc
inc
loop
xchg
pop
int
mov
push
push
inc
aad
jb
icebp
cmp
push
aaa
dec
sahf
sti
(bad)
jmp
fsubr
adc
std
lods
add
add
mov
je
pop
mov
lock
push
adc
aam
cli
xor
out
inc
adc
outs
aam
(bad)
sbb
jmp
jmp
add
test
xor
cwde
mov
ins
mov
repz
lods
ins
outs
xlat
xlat
jp
shr
mov
xchg
ds
xlat
(bad)
fmul
and
clc
(bad)
jge
enter
cs
mov
mov
sar
fcom
(bad)
fild
out
inc
cmc
call
push
sbb
dec
add
ja
fadd
inc
loope
mov
test
push
ss
mov
fs
add
mov
addr16
in
mov
jmp
push
mov
bound
gs
xchg
inc
lds
ret
adc
stos
cld
push
add
dec
jecxz
add
arpl
add
sub
inc
shr
into
sahf
mov
in
mov
shl
sbb
xchg
push
add
je
mov
in
imul
test
xchg
es
iret
xlat
mov
add
inc
cmps
and
add
adc
outs
je
inc
call
xchg
and
mov
pop
(bad)
fstp
jp
add
sahf
add
mov
lock
cmp
sub
int3
jmp
(bad)
pop
inc
mov
ss
out
les
inc
(bad)
out
or
imul
lods
fidiv
sub
xor
in
cs
fnstcw
pop
inc
out
hlt
xchg
pop
and
sar
loopne
push
sar
xor
sbb
sub
rol
jl
and
fnstenv
jecxz
pushf
pop
xchg
into
lock
movs
into
cmp
mov
out
fmul
pop
cwde
add
jg
adc
icebp
add
cwde
sahf
adc
adc
or
nop
pop
mov
imul
and
test
cdq
out
inc
or
xchg
fdiv
or
and
sbb
cwde
jbe
pop
les
jb
outs
xor
cmps
daa
and
aas
jbe
sub
retf
call
or
sub
mov
mov
cmp
mul
push
scas
jecxz
dec
mov
out
sbb
ret
jae
es
clc
inc
data16
movs
xchg
adc
popf
jbe
jecxz
inc
dec
and
and
es
retf
push
pop
dec
mov
out
pop
sbb
mov
daa
mov
pop
scas
sub
sub
dec
mov
int3
lods
push
jbe
mov
mov
adc
cmps
mov
aam
push
lods
es
cmps
mov
jecxz
add
fisubr
std
or
pop
test
mov
fsubr
es
sbb
push
dec
mov
fs
inc
aaa
mov
popf
cmp
nop
xchg
fwait
inc
scas
stos
xor
sbb
xchg
addr16
jp
or
and
das
pop
loopne
fwait
outs
jno
sahf
jno
(bad)
je
and
push
sub
add
cmp
dec
shl
adc
fdivrp
mov
adc
push
(bad)
sub
inc
adc
imul
and
xchg
adc
cmc
int
cmp
cmp
xchg
jnp
mov
mov
mov
cld
inc
mov
jo
aad
or
push
xchg
scas
mov
jo
push
mov
in
push
xor
into
cmp
xlat
outs
popa
sub
frstor
popf
pop
xchg
lds
sub
mov
test
pushf
iret
xchg
cmp
rcl
mov
imul
adc
xor
popf
(bad)
cmp
(bad)
rcl
(bad)
mov
adc
fwait
or
aam
icebp
pop
out
dec
lock
test
ins
xchg
call
or
fld
sbb
dec
pop
popa
inc
lods
outs
repnz
push
push
retf
pusha
mov
add
sub
scas
jb
sbb
dec
jp
xlat
dec
jmp
cmp
rcl
sbb
mov
repz
pop
sub
retf
fcomp
add
pop
div
loope
jnp
cmc
mov
ror
outs
ret
jne
mov
jbe
xchg
add
sbb
xchg
leave
in
cmp
dec
jo
add
shr
jae
stos
jecxz
ins
lods
mov
jmp
bound
pushf
inc
shl
or
ja
cli
cmp
inc
sub
add
fisubr
inc
loope
not
mov
clc
ja
bnd
inc
jp
push
pop
sar
mov
add
lahf
ret
adc
div
jo
lock
mov
dec
stos
xchg
mov
inc
ret
and
stos
xor
jns
adc
mov
jae
jns
ds
lahf
cmps
ds
adc
cwde
sbb
jns
mov
push
sub
icebp
xchg
dec
mov
mov
or
outs
push
mov
inc
and
jmp
add
movs
dec
inc
pop
lock
gs
lahf
inc
mov
cmps
aas
adc
xchg
out
stos
push
pop
and
or
and
xchg
mov
pop
shl
ss
or
cmp
shl
and
and
inc
push
xchg
mov
lds
sbb
sbb
adc
test
and
pop
adc
loopne
push
sub
inc
pop
test
sub
xor
push
movs
jmp
adc
xor
outs
sbb
push
jp
fsub
jno
inc
mov
sub
jb
mov
add
imul
loope
shl
rcr
and
gs
xchg
sub
rcr
stos
loop
add
(bad)
addr16
xor
add
cwde
adc
add
jmp
cmps
or
pushf
and
mov
(bad)
fild
add
es
sbb
inc
mov
mov
test
xchg
retf
mov
pusha
jl
adc
cmps
out
rcl
jnp
cs
mov
sub
ror
ins
mov
in
adc
mov
mov
(bad)
je
pop
sti
(bad)
into
data16
pop
dec
in
pop
in
fnstcw
push
mov
daa
inc
mov
stc
das
push
jae
pop
test
push
mov
jne
or
icebp
sets
jecxz
test
test
push
(bad)
aas
pop
push
jnp
ds
push
daa
repnz
sbb
jmp
xor
mov
push
into
inc
push
or
add
add
fadd
jecxz
mov
xchg
cmp
ret
cli
out
adc
add
add
sub
fmul
test
mov
cmp
pop
in
push
ds
sbb
xchg
dec
and
fdivr
jecxz
aas
cmp
inc
mov
inc
mov
fldenv
mov
push
mov
lods
or
mov
xchg
push
jnp
stos
sbb
cmp
outs
stos
cmp
mov
(bad)
(bad)
test
sub
iret
mov
retf
jbe
add
dec
test
das
sbb
mov
xlat
icebp
popf
mov
and
jbe
pop
test
push
cmps
int3
cli
push
out
aas
shl
mov
pop
mov
sub
mov
movs
ja
mov
xor
je
push
movs
mov
movs
stc
jno
mov
jo
int
xchg
sub
dec
fistp
xchg
add
cmc
jbe
push
cmp
stos
idiv
pop
lods
pushf
les
pop
jecxz
lods
pushf
cwde
mov
jmp
sub
dec
cmp
mov
stos
imul
sub
or
leave
xchg
inc
jo
jl
sub
cmp
js
sahf
xchg
mov
movs
mov
test
lods
mov
(bad)
outs
sbb
pop
pusha
sub
mov
push
and
mov
lock
dec
inc
xchg
adc
mov
pop
or
pop
and
sar
movs
dec
or
pop
sub
neg
imul
xchg
jmp
pop
cmp
jbe
outs
mov
rdpmc
popf
call
xadd
mov
cmp
mov
sub
pusha
ret
xor
call
daa
fstp
sar
mov
or
daa
sbb
xchg
repnz
xchg
mov
icebp
out
into
xchg
dec
sbb
ret
(bad)
mov
adc
mov
outs
mov
stc
xchg
sbb
shr
loopne
cmps
cdq
add
add
fimul
sbb
aas
jno
test
rcr
out
or
mov
xchg
lods
stc
ret
iret
stos
jp
(bad)
or
sub
push
aaa
movs
cwde
scas
mov
push
(bad)
push
cli
das
xchg
enter
sahf
out
in
lahf
jmp
or
jo
(bad)
test
retf
jns
mov
lds
fldcw
fistp
repz
lahf
mov
dec
or
mov
ret
pop
xchg
push
mov
(bad)
mov
iret
mov
cmp
and
adc
jmp
addr16
sub
pop
fadd
sub
daa
in
pop
enter
and
jecxz
lods
fidiv
push
pop
inc
and
das
bound
sub
dec
mov
pop
or
movs
jne
(bad)
aam
mov
dec
jno
adc
xor
fst
imul
add
ss
or
jne
or
pop
mov
jp
aas
mov
xchg
inc
inc
adc
rol
sbb
xor
cmp
pop
dec
(bad)
nop
add
sbb
push
jae
retf
fist
push
mov
xchg
(bad)
sbb
mov
hlt
cdq
aam
mov
fadd
loop
pop
retf
xchg
or
or
or
sub
sbb
pop
sbb
in
mov
stos
es
and
inc
push
mov
sbb
lahf
inc
dec
and
sbb
call
xchg
and
pop
aad
aam
aas
jbe
ror
cmp
test
setb
adc
imul
or
out
mov
mov
mov
add
add
mov
jmp
loop
outs
push
mov
fsub
ds
push
cmp
push
push
aam
fs
jg
fist
test
sbb
les
test
mov
jno
push
xor
repz
inc
sbb
pop
int3
mov
add
cdq
and
sbb
dec
jecxz
dec
outs
jecxz
jne
stos
xor
push
xchg
inc
xor
jb
sub
aad
and
jl
push
fcomp
mov
xchg
shr
ret
push
add
pop
js
repnz
add
test
rep
inc
dec
dec
jge
pop
mov
shl
dec
idiv
jp
aam
jbe
mov
mov
cli
push
ficomp
imul
cmp
out
fdivr
inc
push
push
fidivr
or
adc
pop
cmp
pop
jne
(bad)
ret
mov
sub
ror
xchg
jge
mov
xor
xor
xchg
jle
pusha
movs
les
mov
mov
xor
cwde
mov
(bad)
push
std
dec
pop
pop
push
jp
fsubr
stc
sahf
mov
out
in
dec
stos
cmp
je
xchg
xor
mov
mov
jno
dec
add
rol
sbb
sar
in
scas
ss
adc
mov
imul
(bad)
xor
adc
pushf
adc
push
mov
jo
adc
jno
in
cdq
retf
add
shl
mov
push
rep
or
in
adc
inc
js
cmp
jmp
out
jmp
mov
test
xlat
pop
mov
adc
pop
dec
push
mov
xor
mov
in
dec
popf
popa
gs
push
mov
mov
out
test
pop
cmps
ficom
add
sti
mov
ins
ds
jge
fs
push
leave
lahf
xchg
dec
iret
sub
pop
push
aam
lods
lock
or
adc
mov
ds
jne
cli
mov
mov
pop
dec
push
push
or
ja
test
shl
inc
lock
out
xor
movs
xchg
jne
in
in
push
cmp
and
adc
mov
out
sub
inc
(bad)
pop
cmp
inc
jge
cmps
nop
ja
pop
jne
fsub
verw
fwait
mov
inc
jge
test
push
mov
pop
lea
mov
fld
pop
mov
push
fidiv
add
fisttp
xor
add
ret
jae
fwait
push
out
inc
push
mov
add
or
adc
cmp
dec
jl
or
lods
sub
pop
xor
out
fiadd
popf
pop
out
daa
adc
loope
jp
cmp
das
ret
jmp
in
cmp
push
or
mov
daa
sbb
mov
mov
mov
(bad)
call
(bad)
cs
pop
xchg
dec
in
inc
aad
jns
aaa
pop
dec
sbb
div
popf
push
cli
aaa
pop
xchg
rol
add
ins
xchg
repnz
test
int3
mov
pushf
out
scas
xchg
pop
inc
sub
cld
pop
(bad)
lods
cmp
jl
mov
xor
and
test
(bad)
or
xor
rcr
outs
hlt
inc
inc
and
invd
dec
jecxz
push
out
retf
and
inc
inc
rol
xor
jg
and
repz
ret
int3
or
repnz
lock
cmp
mov
and
js
adc
push
sbb
adc
xchg
mov
jge
xchg
fadd
mov
and
push
mov
les
push
movs
out
jmp
add
cmp
cmp
adc
ret
push
mov
mov
push
movs
test
dec
push
test
sub
inc
jge
cmps
call
(bad)
jmp
mov
std
out
in
mov
and
pushf
mov
ds
popf
fchs
push
enter
retf
sbb
push
jle
xor
xor
in
xchg
xadd
mov
mov
call
mov
push
js
arpl
nop
test
jle
adc
sub
test
pop
jecxz
xor
loopne
test
lds
test
movs
or
xlat
sar
mov
dec
mov
pop
inc
pop
inc
inc
retf
cld
cld
inc
punpckhwd
xchg
repz
(bad)
xor
pushf
adc
loope
aas
mov
sub
sub
push
mov
cs
daa
rcr
stos
dec
mov
ins
movs
cmp
xchg
cs
lock
mov
adc
test
nop
retf
sub
je
xor
into
sub
int3
hlt
push
out
mov
add
pusha
mov
cmp
mov
imul
sub
push
dec
push
or
xchg
and
push
test
cwde
gs
push
jae
jno
ins
sbb
test
fs
fsubr
mov
icebp
(bad)
pop
aam
in
test
inc
iret
adc
xor
xchg
pop
outs
popf
test
inc
stos
jmp
std
cli
xor
add
movs
jg
je
inc
jle
adc
sbb
jb
mov
aam
push
jnp
sub
or
and
jno
fnstcw
jg
jae
mov
rol
retf
lods
xchg
jg
fist
imul
cmp
or
ret
test
sub
mov
lods
inc
cmp
dec
ss
loop
and
or
dec
mov
jecxz
jno
mov
sbb
mov
add
and
movs
jno
fs
xor
push
or
inc
mov
call
out
stc
ror
push
pop
imul
cmp
adc
jl
cmps
jae
in
mov
xor
xchg
xchg
or
sti
inc
sub
sub
das
mov
lock
mov
sbb
xchg
dec
loope
pop
repnz
lahf
lods
and
movs
xlat
and
in
gs
test
scas
popa
test
pop
fist
push
adc
stos
popf
jecxz
aad
xchg
movs
scas
push
cmp
into
cmp
(bad)
mov
les
in
jle
mov
addr16
xor
stos
repnz
jae
mov
jg
dec
sbb
mov
and
push
dec
clc
pop
int
adc
sbb
(bad)
fcom
and
cdq
sti
pop
pop
cmc
dec
es
xchg
push
push
xchg
push
xor
sbb
sub
mov
mov
nop
dec
xchg
cmp
push
xchg
ds
test
sbb
pop
inc
std
push
jecxz
das
adc
outs
sti
sub
push
inc
cmp
cmp
mov
nop
out
scas
mov
jns
inc
stos
xor
pushf
jne
int
out
adc
aad
sar
das
sar
lock
dec
mov
cmp
adc
out
iret
js
ds
xor
cld
jg
xchg
xchg
or
push
push
inc
mov
je
mov
dec
sbb
dec
loop
data16
aad
xor
inc
sbb
add
inc
lea
mov
mov
pop
lods
imul
and
jb
push
ja
sbb
rcr
inc
sub
cli
mov
das
and
leave
sub
push
xchg
or
inc
ret
pop
inc
xor
adc
jg
test
fisub
sbb
cmp
inc
pop
xchg
(bad)
fs
call
mov
mov
dec
lea
xor
loope
sbb
or
cmp
mov
xor
mov
movs
sbb
(bad)
test
scas
jne
das
enter
or
cwde
push
push
xlat
mov
arpl
inc
popa
stc
movs
or
jmp
sar
pop
outs
jbe
sbb
xchg
sub
xchg
nop
mov
sub
fild
repz
in
push
rcr
popf
pusha
mov
rcl
jns
jno
jl
fmulp
call
jb
rcl
leave
outs
and
cdq
movs
mov
sbb
sbb
cmps
jmp
(bad)
nop
dec
je
pop
inc
cmovo
mov
xchg
repz
mov
out
sbb
cs
cdq
daa
xchg
outs
mov
jns
enter
mov
mov
xor
cmps
loopne
adc
pop
cld
js
mov
lock
adc
and
retf
cli
inc
fdiv
rcr
(bad)
mov
and
rcr
retf
mov
inc
sub
call
sbb
(bad)
sti
(bad)
shl
invd
inc
hlt
mov
mov
push
add
(bad)
rol
sbb
push
mov
mov
popa
rcl
sbb
sub
dec
pop
mov
iret
and
mov
sub
jnp
mov
add
sub
test
mov
movs
daa
add
or
mov
sbb
mov
pop
shl
shr
and
leave
fistp
jb
mov
push
xchg
dec
out
mov
or
jo
mov
lds
int
push
add
fwait
outs
pop
rol
fisub
xor
dec
cs
push
call
pop
(bad)
mov
xchg
addr16
jle
cdq
sbb
mov
xchg
mov
(bad)
inc
pop
fidiv
or
loopne
ret
pop
in
pop
(bad)
iret
daa
dec
cmp
pop
test
sub
(bad)
imul
out
out
dec
lods
inc
jnp
fmul
mov
jge
cwde
jb
popa
jg
push
mov
idiv
or
data16
pop
loop
movs
adc
les
cli
mov
mov
and
xor
sti
outs
pop
into
mov
pop
shr
jge
cmp
and
xchg
lods
dec
or
pop
xor
xor
loope
mov
pushf
jmp
add
xor
sbb
loope
shl
in
scas
fimul
mov
test
ins
dec
loop
push
(bad)
mov
stos
rcl
push
in
add
and
test
push
imul
adc
jge
push
div
or
mov
std
daa
iret
cmp
lock
dec
rol
popf
call
arpl
mov
mov
test
sub
int
and
push
inc
cmps
xchg
jns
push
imul
(bad)
pop
imul
arpl
sbb
jnp
lahf
retf
in
xchg
sbb
mov
mov
shr
rol
pop
lock
pop
(bad)
mov
mov
mov
push
adc
mov
cmps
rol
retf
pop
push
pop
xor
cmp
fwait
push
frstor
mov
cmc
or
sbb
mov
test
retf
jb
pop
pop
fstp
popf
into
repnz
jae
cmp
sub
mov
inc
ins
and
(bad)
retw
sbb
div
cmp
mov
mov
outs
dec
leave
cs
sbb
je
(bad)
loopne
stos
xor
mov
mov
jecxz
stc
jns
cmp
mov
repnz
mov
mov
cmp
in
in
pop
rcl
aaa
fild
pop
retf
cdq
push
xchg
cli
bound
mov
ror
pop
test
loop
xchg
stos
fwait
sub
sub
pop
pop
push
jecxz
dec
cmp
jne
adc
out
cld
out
add
cmp
add
jmp
add
add
test
clc
rol
lock
call
retf
dec
fcmovnb
mov
add
xchg
mov
adc
pop
popa
mov
sbb
sbb
cmp
sub
fidiv
iret
sub
jno
lock
dec
inc
aam
jmp
lea
test
out
jno
xchg
out
mov
shr
enter
(bad)
cmc
ss
mov
call
pop
daa
and
int3
xchg
cmp
adc
hlt
cmp
scas
nop
ror
ss
jg
dec
iret
mov
jp
clc
add
or
retf
popa
test
adc
pop
repz
sahf
test
xchg
mov
mov
xchg
ret
push
call
inc
push
or
pop
sahf
sub
inc
sahf
mov
push
test
sbb
cmp
sar
out
mov
add
push
push
ds
ins
fs
pushf
add
stos
inc
pop
cwde
loopne
sbb
xchg
aad
sbb
aaa
les
xor
push
jmp
es
(bad)
cmp
push
and
or
or
(bad)
adc
adc
inc
fld
mov
sahf
aam
xor
add
test
jnp
(bad)
mov
mov
cmp
add
repz
jmp
icebp
push
xchg
or
and
in
(bad)
jecxz
jp
mov
jo
in
icebp
daa
movs
in
xchg
xchg
jg
daa
aas
xor
and
and
js
jmp
stc
dec
cmp
mov
jno
pop
aaa
add
stos
xchg
sub
cmp
sub
or
mov
sbb
fbstp
aam
jne
pop
leave
jnp
mov
push
cmps
xchg
inc
pop
fdivp
and
out
dec
adc
outs
mov
inc
push
mov
jmp
cmps
inc
fwait
and
int
or
push
or
sub
and
dec
sbb
jp
jl
out
jae
inc
push
cmc
ja
inc
push
cs
cwde
daa
popa
fstp
sbb
movs
adc
nop
in
shl
push
and
push
mov
ins
push
nop
shl
std
lods
sti
mov
cmp
xor
bnd
mov
adc
xor
rcl
mov
xor
push
in
mov
popa
add
pop
js
loope
call
xor
xchg
xor
loope
cdq
jge
cmps
and
cmp
mov
push
bound
repnz
ror
test
or
das
xor
inc
xchg
fwait
mov
mov
add
jp
push
(bad)
loop
cmp
test
imul
popa
inc
xchg
mov
or
aam
outs
sub
mov
icebp
xchg
cmp
push
and
inc
outs
sar
jge
jge
pop
push
mov
sbb
jne
dec
loopne
inc
push
jb
mov
cmp
shl
and
push
ffreep
pop
mov
push
push
pop
xchg
inc
ret
lods
pop
stos
ins
(bad)
push
and
mov
push
jno
jecxz
mov
and
in
dec
movs
je
cmp
lods
cmp
pop
test
inc
add
movs
adc
mov
or
call
push
xchg
adc
xlat
hlt
or
add
push
pop
cmp
mov
cli
clc
jge
popa
inc
xchg
sub
sub
ficomp
add
or
push
lock
repnz
das
inc
adc
and
sbb
mov
jg
aas
inc
xchg
pop
ffreep
push
scas
xchg
or
jmp
in
jns
xchg
(bad)
cdq
stos
lock
test
sub
call
and
mov
jg
pop
push
mov
inc
leave
push
add
call
add
fcmovu
shl
mov
sbb
or
pop
push
dec
(bad)
cmp
mov
mov
retf
mov
mov
mov
ficom
pop
cmp
xchg
xchg
(bad)
daa
xchg
arpl
push
xor
xchg
ret
or
sub
sahf
cmps
cs
gs
cmc
adc
rol
test
or
pusha
fisttp
test
jns
data16
fist
or
shr
inc
cmp
cmp
fwait
imul
sub
hlt
jmp
out
pop
push
ds
repnz
mov
leave
movs
popf
cmp
in
stos
cmps
sub
out
ins
rcr
and
scas
jbe
jl
dec
xchg
adc
lods
sub
mov
mov
or
adc
mov
cdq
xor
cld
xor
out
test
jo
fcomp
and
xchg
sub
fldenv
fisub
adc
pop
jge
ss
and
jae
xchg
nop
cmp
mov
add
inc
inc
xchg
jae
mov
scas
mov
pop
ret
xor
mov
dec
mov
aad
shl
xor
movs
ja
push
gs
adc
mov
xchg
into
xchg
fcom
dec
fsubp
aam
pop
mov
je
cmp
movs
push
mov
or
das
rcr
sub
sbb
pop
pop
inc
jbe
mov
inc
adc
and
pop
aas
sbb
mov
mov
adc
leave
(bad)
or
je
jbe
cmp
jno
sub
pusha
mov
aaa
outs
imul
sub
(bad)
sbb
push
xchg
xchg
cli
mov
vpshlb
and
out
imul
ja
push
or
pop
ret
(bad)
scas
repz
popf
movs
mov
test
leave
call
add
push
in
mov
dec
mov
das
jle
neg
ret
cmp
mov
fdiv
pop
aaa
xor
and
out
push
(bad)
imul
test
mov
add
out
mov
outs
dec
aam
das
mov
aaa
adc
pushf
cmps
mov
xchg
pop
inc
push
mov
dec
mov
bound
push
test
mov
dec
cwde
pop
pop
mov
ds
(bad)
fucom
iret
and
test
xchg
addr16
fbld
cmp
xchg
scas
mov
mov
mov
test
sbb
dec
pop
jp
pop
imul
push
push
fidiv
adc
fmul
push
mov
sbb
mov
xor
adc
inc
shr
adc
adc
loop
scas
sub
(bad)
and
outs
sbb
sbb
pop
mov
lds
movs
call
cli
shl
cli
sahf
aam
pop
lock
fst
cmp
sahf
sbb
scas
jo
std
dec
shl
daa
in
outs
mov
movaps
mov
loope
inc
xchg
xchg
mov
lea
es
in
lds
sub
jl
pop
xchg
es
or
add
repz
mov
jno
cmp
test
ret
ja
ret
and
fist
fs
xchg
sub
stos
adc
arpl
stos
(bad)
mov
fdiv
jmp
leave
int3
nop
repz
cmp
lods
scas
call
fcomi
icebp
push
or
xlat
loop
cmp
idiv
xor
mov
jbe
lahf
gs
movs
push
mov
mov
xchg
and
jg
adc
mov
pop
push
ror
mov
(bad)
push
and
mov
adc
cmps
sbb
pop
int3
mov
mov
cmc
fcomp
xor
in
pushf
lock
lock
bound
sbb
ss
fwait
aaa
scas
ret
in
test
sbb
inc
retf
sub
mov
test
ficom
jp
mov
loop
in
gs
push
or
mov
cdq
ins
or
xor
and
adc
xor
out
mov
push
xor
aas
sub
push
mov
das
sub
cwde
pop
jne
gs
out
push
ret
add
dec
int3
nop
jmp
add
and
jnp
cmp
ds
mov
mov
aad
xlat
cmp
jae
imul
xchg
es
cwde
ins
adc
ret
fmul
fimul
popa
nop
ficom
gs
into
test
sahf
fwait
aam
mov
inc
or
mov
mov
fisttp
pop
xchg
mov
repnz
inc
test
enter
ror
jmp
cld
into
ds
pop
jmp
mov
xor
sbb
retf
int3
fwait
or
ret
pop
mov
inc
lods
cmp
mov
loopne
push
add
cmp
jnp
mov
neg
xor
mov
and
ret
js
mov
or
fsub
into
test
adc
sub
in
cmp
xchg
adc
xor
shr
fxch
jo
test
(bad)
mov
add
cli
test
addr16
mov
jge
mov
scas
pop
xor
(bad)
je
loop
push
adc
fwait
mov
in
pop
into
push
push
push
or
mov
pop
in
pop
push
xchg
movs
scas
jnp
pop
mov
xor
in
adc
test
sbb
and
push
mov
or
push
mov
out
cmp
mov
mov
sub
mov
or
sub
jl
stc
icebp
gs
arpl
icebp
ror
les
push
cmps
push
loope
or
mov
jecxz
dec
aam
ror
mov
cwde
fidiv
inc
das
push
or
xchg
stc
aaa
dec
test
xor
sub
call
sti
fcmovnbe
scas
int3
dec
adc
xor
xor
add
fbld
cli
iret
inc
lock
movs
sbb
jecxz
or
cmp
push
outs
mov
push
outs
scas
out
cmp
jge
cmove
add
mov
cs
cmps
adc
gs
ins
cwde
dec
pop
sub
enter
pop
aam
dec
mov
loope
ins
xchg
por
lea
or
inc
mov
cli
movs
pop
bound
pop
add
mov
pushf
into
push
gs
xchg
rol
test
sbb
add
pop
call
mov
lods
fidivr
jp
cmc
push
hlt
out
xor
mov
out
push
sub
daa
stc
cmp
movs
xchg
icebp
imul
fcom
loope
xor
xor
pop
aas
push
or
inc
pushf
or
rol
pushf
and
lea
mov
or
or
int
rcr
ds
stc
mov
mov
add
xchg
push
inc
outs
inc
(bad)
lods
fwait
push
lea
inc
xor
aad
ret
cmp
mov
mov
fsub
cmc
fldenv
outs
mov
gs
fidivr
mov
cmps
mov
fwait
retf
mov
xchg
repz
daa
lock
sub
dec
sub
mov
int3
mov
mov
mov
ds
icebp
arpl
cs
mov
fwait
dec
mov
pop
pop
push
(bad)
call
jno
dec
arpl
into
and
or
cmc
add
popa
mov
jne
cmc
xbegin
cs
ja
retf
mov
xchg
aam
push
xchg
movs
jl
ja
dec
mov
mov
mov
les
or
mov
shl
jmp
arpl
or
loope
test
outs
jne
clc
into
add
repnz
movs
mov
mov
repz
mov
pop
test
or
adc
adc
ret
inc
cdq
repz
mov
xor
push
lods
nop
movs
ja
test
mov
pop
xor
sub
(bad)
es
mov
fwait
les
inc
mov
std
cmc
dec
bound
xchg
add
mov
in
syscall
imul
lock
mov
inc
or
aas
cmp
sub
mov
push
aad
pushf
icebp
mov
jns
aam
loop
jg
loope
fimul
jmp
fisttp
mov
sub
mov
sub
iret
adc
mov
fscale
xchg
pop
fcmovb
test
and
std
and
outs
fldl2e
(bad)
jmp
and
sub
push
mov
icebp
(bad)
sub
daa
xor
mov
fbstp
ds
cmp
xor
and
dec
pop
ins
mov
adc
(bad)
xor
inc
mov
aaa
popf
mov
push
mov
into
ror
loop
inc
xchg
jnp
pop
and
loop
sahf
icebp
iret
cli
add
jo
lods
fimul
jae
in
arpl
pop
sub
jle
jp
dec
xchg
mov
cs
cmp
or
xchg
and
push
jns
pop
mov
iret
jmp
pop
loopne
jb
sub
or
sub
retf
adc
(bad)
popa
add
inc
inc
sub
mov
aaa
out
imul
jg
stos
jns
mov
loop
stc
aas
or
xchg
push
xor
jne
sbb
jbe
mov
sub
xchg
mov
mov
sahf
imul
sub
int3
test
loopne
push
dec
and
xor
xchg
adc
std
xchg
cmps
test
xor
or
sub
stos
fisub
lds
std
fwait
stos
or
nop
xchg
neg
aam
ror
adc
or
dec
lahf
push
sub
or
jne
scas
pop
fst
push
int
xor
aam
jmp
sub
sub
sar
cmps
sub
inc
call
stos
repz
sbb
fst
cmp
std
fcmovnb
cmc
and
or
cmp
dec
mov
sbb
in
mov
ins
test
inc
sbb
add
sbb
adc
jae
sub
in
enter
sbb
outs
jle
mov
popf
xchg
mov
push
push
cmc
pop
and
cmp
(bad)
jmp
xchg
push
sbb
jnp
jl
inc
cmp
aad
inc
inc
inc
jo
sub
add
inc
movs
aad
xor
and
add
dec
sbb
add
test
xchg
sub
mov
retf
ins
and
mov
jae
ins
sbb
stos
adc
ror
outs
ja
jge
jp
imul
sub
adc
cmp
(bad)
clc
mov
fst
arpl
in
bound
aas
jne
adc
adc
push
lods
dec
shl
push
fsubr
fst
mov
push
mov
cs
dec
aas
cdq
mov
xor
(bad)
or
dec
cs
mov
jecxz
jp
sub
add
mov
mov
dec
add
shr
or
stos
sbb
popf
cmp
test
popa
mov
enter
mov
inc
push
cmp
fld
std
adc
hlt
jo
arpl
cmp
push
hlt
xchg
les
add
test
(bad)
pop
arpl
std
and
xor
sbb
xor
(bad)
scas
test
ja
aas
inc
jb
cmc
xchg
scas
cmp
mov
xchg
(bad)
push
add
popa
mov
mov
out
sbb
pushf
clc
jo
stos
push
dec
retf
mov
jmp
jle
ret
leave
adc
jne
(bad)
sar
int
dec
out
push
(bad)
pop
jns
daa
or
call
dec
sub
in
xor
movs
mov
popf
push
movs
jo
xor
pop
(bad)
aam
cld
(bad)
(bad)
dec
loop
cmp
test
add
js
shr
sbb
mov
fnstsw
outs
pushf
fidivr
mov
push
cmps
retf
pushf
das
ins
add
mov
cmp
mov
cs
sbb
arpl
mov
out
daa
std
aad
adc
in
inc
jb
xor
xchg
xchg
xchg
ret
and
pusha
call
dec
jno
xchg
push
mov
fsub
arpl
loopne
out
movs
push
push
arpl
outs
cmp
dec
daa
jns
dec
xchg
mov
mov
icebp
stos
sahf
mov
adc
retf
and
jns
mov
and
sbb
int
shl
pop
push
data16
sub
and
iret
add
movs
fs
sub
sbb
sbb
call
aaa
(bad)
mov
xor
add
xor
push
lock
push
push
xchg
inc
or
add
push
jmp
das
movntps
lock
mov
sub
ins
xchg
mov
cmp
xor
sti
fstp
call
inc
push
cwde
add
and
jbe
test
xchg
pop
leave
es
outs
jmp
aam
pop
xor
push
sub
xor
mov
fsubp
mov
xor
ja
adc
jne
pop
retf
test
mul
pop
neg
(bad)
cmc
dec
rcl
scas
mov
jne
dec
adc
adc
inc
stos
mov
sbb
pusha
add
xlat
adc
xchg
mov
nop
ins
lods
dec
mov
pshufw
mov
mov
ficomp
shl
jmp
inc
dec
cld
sub
jge
xchg
call
jns
mov
dec
xor
sahf
xlat
popf
cmp
cmp
das
aad
inc
into
shl
jg
adc
loopne
or
out
adc
or
push
add
cs
jns
out
ret
shl
mov
out
test
push
aam
adc
mov
xchg
test
push
mov
push
mov
jne
cmp
popf
aaa
lds
and
imul
adc
jp
jne
push
inc
and
pop
shr
test
jecxz
cmps
mov
dec
outs
outs
sbb
dec
sbb
mov
pop
xchg
outs
dec
outs
les
mov
clc
and
mov
fst
jecxz
ficom
lahf
or
rcr
dec
iret
mov
xor
mov
shl
out
adc
(bad)
sbb
jb
out
rol
inc
mov
jmp
scas
arpl
test
jge
jmp
clc
mov
xor
ins
jae
hlt
mov
push
ins
mov
dec
js
mov
push
inc
sub
popf
xchg
push
mov
xchg
jl
jg
jnp
xchg
ins
push
and
pop
cmc
push
in
sub
adc
add
jns
pop
inc
add
(bad)
sub
loopne
push
int3
and
dec
or
xchg
push
imul
pop
push
and
and
(bad)
xlat
loopne
jae
mov
add
xchg
enter
aam
cmps
mov
out
push
adc
sub
cdq
int
adc
mov
cwde
pop
pop
in
imul
int3
shr
adc
jle
xor
ror
pop
out
inc
xchg
pusha
adc
inc
pop
popf
and
and
loopne
sbb
lahf
inc
mov
rcl
or
and
aam
cmp
pop
xor
inc
(bad)
rcl
add
lods
movs
push
xor
pop
mov
jnp
pop
jae
jae
stos
push
mov
(bad)
dec
pop
call
loope
mov
fsubr
push
movs
(bad)
movs
(bad)
imul
cmps
lds
adc
xchg
ins
sbb
repnz
xchg
rcr
xor
lahf
sbb
mov
mov
jns
xchg
aad
cdq
cmps
sub
pop
mov
mov
scas
jmp
xchg
(bad)
jo
ret
dec
dec
out
imul
daa
in
xchg
ins
mov
aaa
aas
sub
out
fwait
jns
out
std
lock
jg
adc
enter
into
mov
(bad)
pop
cmps
xchg
cmc
jbe
shl
arpl
test
push
mov
adc
(bad)
cmps
(bad)
xor
pop
fild
fdivr
pop
xchg
fist
and
xchg
enter
dec
inc
ins
dec
pushf
jne
call
dec
mov
fs
addps
fs
jl
mov
(bad)
fdivr
adc
pop
xor
xchg
lods
imul
xor
cmp
test
jmp
or
pop
lods
mov
add
dec
movs
movs
pop
mov
xchg
mov
shl
xchg
jne
adc
jb
dec
es
dec
xlat
mov
jecxz
bound
ficom
xchg
enter
xor
xchg
inc
clc
or
(bad)
aad
shr
dec
jecxz
push
cmps
or
nop
mov
adc
and
movs
mov
nop
inc
adc
jo
adc
loopne
sub
(bad)
sbb
and
(bad)
fwait
loope
add
adc
fbstp
add
cmp
retfw
test
cmps
push
aas
pop
ja
xchg
push
(bad)
push
dec
xor
add
dec
scas
addr16
jge
scas
push
xor
outs
inc
sbb
clc
mov
mov
add
popa
jmp
dec
dec
cmp
cs
inc
clc
push
arpl
shr
cmp
jecxz
or
imul
js
inc
stc
xchg
bound
xchg
call
mov
pusha
inc
cmp
mov
daa
dec
push
or
in
sbb
xchg
jb
ret
add
xchg
cmps
pop
push
mov
mov
mov
mov
dec
sbb
pop
xor
jnp
imul
push
cmps
sub
mov
and
mov
xor
test
cmp
mov
pop
pop
and
xchg
add
fwait
(bad)
shl
mov
pop
push
ror
or
add
out
int
adc
out
fs
stc
(bad)
js
pop
fiadd
fmul
pop
sbb
sti
mov
mov
or
call
jnp
pop
jmp
jle
inc
pop
shr
mov
mov
retf
fsubrp
push
iret
inc
adc
cmps
and
repz
push
mov
or
das
adc
cmc
sbb
mov
dec
push
sbb
imul
mov
mov
cmp
in
pop
xor
lea
call
ds
dec
sub
out
inc
add
mov
xchg
jg
arpl
add
retf
cwd
xor
push
and
and
xor
test
pusha
jmp
cmp
cmps
mov
pop
mov
mov
outs
popf
push
daa
dec
pop
and
push
pushf
jle
adc
ret
std
jo
es
jo
mov
mov
mov
mov
jo
test
mov
cmp
repz
stos
fist
push
std
cmp
cmp
in
add
sbb
mov
out
jle
int
ins
push
nop
lods
mov
xlat
out
aam
loopne
ror
iret
and
dec
dec
jmp
fmul
in
sahf
sti
movs
adc
push
and
or
(bad)
cli
test
outs
xchg
es
xchg
iret
(bad)
mov
loopne
cmp
or
(bad)
stc
in
ds
adc
or
mov
das
lods
(bad)
js
cmp
sti
rcr
dec
loope
and
jb
inc
lahf
jle
in
pop
int
sahf
jmp
std
push
xchg
out
fimul
test
js
shl
push
fmul
jbe
mov
addr16
inc
into
adc
pop
push
js
(bad)
fmul
adc
stc
into
adc
ins
jmp
sbb
and
lods
cmps
sub
iret
jb
retf
cmp
jno
sub
ficomp
imul
and
mov
addr16
in
(bad)
xor
sub
mov
imul
lahf
cwde
sub
adc
mov
sub
mov
push
ret
out
ins
sbb
cmp
ret
jnp
popa
std
mov
jmp
push
inc
jne
test
retf
sub
movs
mul
add
xchg
xor
stc
or
mov
fadd
ja
scas
xchg
imul
shl
and
(bad)
loopne
mov
dec
mov
mov
or
add
cmc
sub
jge
push
jmp
mov
(bad)
pop
push
xor
scas
push
cmp
inc
scas
push
in
lock
adc
(bad)
push
enter
sbb
adc
aad
cmp
in
sub
mov
shl
call
mov
jne
and
sub
and
add
sub
sar
cs
mov
xchg
xchg
es
dec
adc
cmp
mov
sbb
(bad)
stos
mov
imul
inc
add
in
shl
test
fstp
xchg
mov
pop
pusha
cmp
mov
std
sub
aad
adc
ins
mov
dec
in
movs
lods
loop
ja
stos
xchg
add
je
jmp
jecxz
aam
iret
add
mov
xchg
sar
cmp
cmp
pop
add
stos
mov
inc
dec
dec
vmovhps
xor
cvtps2pd
jmp
jae
aaa
and
jmp
shr
mov
add
xchg
pop
ins
pop
rcr
mov
rcl
cli
jle
inc
repz
xchg
fbld
push
bound
mov
(bad)
sahf
cmp
push
cs
out
jl
outs
xor
stos
and
mov
jecxz
mov
add
xchg
push
cmps
adc
cmp
cmps
mov
movs
jne
mov
and
xor
(bad)
sbb
or
mov
xlat
xchg
stos
mov
sbb
mov
adc
addr16
and
jb
mov
mov
jne
xlat
xchg
push
jmp
dec
pop
ror
mov
push
fldenv
dec
(bad)
mov
push
inc
cmp
nop
adc
push
mov
jg
arpl
jmp
movs
shl
out
mov
aas
outs
int
and
cmc
inc
rcr
jge
stos
fstp
inc
jmp
pop
(bad)
scas
es
mov
(bad)
and
in
xor
pop
sub
mov
lea
unpckhps
(bad)
ja
or
sbb
movs
lods
(bad)
mov
dec
xchg
mov
pop
push
dec
imul
mov
and
inc
bound
and
or
pop
inc
repnz
inc
outs
and
dec
bound
shr
mov
fsub
mov
inc
imul
cmp
and
adc
jbe
mov
pop
mov
aad
lock
lock
jmp
sti
imul
add
add
stos
aas
js
out
ret
mov
into
gs
ret
sbb
adc
inc
add
xchg
repz
mov
in
jnp
out
scas
dec
(bad)
std
push
sbb
dec
xchg
rep
mul
ins
div
dec
ins
std
outs
outs
ror
int3
and
lea
mov
xchg
push
push
bound
rcl
push
push
(bad)
shr
addr16
out
adc
adc
cli
mov
pop
adc
das
rcl
aad
jmp
xchg
pop
scas
mov
jo
ds
test
or
sbb
xor
add
xchg
mov
(bad)
daa
dec
mov
add
jmp
add
mov
outs
push
ins
push
xor
dec
dec
xlat
scas
cmp
xor
adc
xchg
int3
push
(bad)
and
dec
ins
jp
bound
pop
xchg
inc
add
xlat
shl
cmp
loop
pop
dec
lea
jge
ds
lods
stos
lods
movs
dec
add
dec
cmc
fldenv
test
in
cmp
fwait
xchg
cmovbe
add
icebp
popf
dec
push
sbb
(bad)
pop
inc
adc
sub
cmp
rcl
iret
jl
push
add
movs
push
enter
push
mov
or
add
pop
test
jmp
popa
mov
mov
(bad)
test
pop
ds
jo
test
inc
sub
inc
push
mov
or
and
out
cmc
scas
jecxz
pop
cmp
push
push
cli
push
push
sub
nop
sbb
les
sbb
in
pop
or
xor
clc
pusha
and
mov
push
sub
cmp
(bad)
mov
fisttp
cmp
jo
push
into
cmp
outs
jnp
jno
lds
pop
retf
test
cmps
stos
cmp
out
mov
ds
stos
add
pop
icebp
mov
pop
mov
push
mov
cmp
arpl
hlt
pop
mov
push
or
rcl
int
ret
fbld
(bad)
push
pop
les
cmc
mov
retf
hlt
mov
out
adc
dec
dec
aaa
jp
mov
cli
mov
mov
or
mov
call
xlat
or
mov
inc
mov
and
cwde
jge
inc
movs
retf
cs
out
jle
addr16
jecxz
lock
shr
mov
sbb
sub
aas
adc
outs
push
mov
jle
cmp
jg
mov
nop
jo
mov
jno
in
jp
aas
aaa
scas
push
sbb
or
ins
or
jbe
test
pop
(bad)
xor
data16
xor
xchg
push
ud1
fwait
(bad)
cld
cmp
(bad)
pop
push
lahf
das
aad
call
fs
scas
out
or
bound
mov
ds
jnp
mov
ds
movs
stos
je
lahf
xor
addr16
lock
jl
pop
push
mov
jmp
cdq
sbb
pusha
jecxz
or
mov
cmc
popa
enter
div
and
loopne
sbb
dec
stos
sub
in
jae
jg
push
dec
mov
and
mov
pop
cmp
sbb
and
mov
iret
int3
mov
arpl
scas
lock
loop
lds
lock
or
loop
sub
sahf
mov
jno
mov
mov
push
fiadd
sub
gs
dec
in
and
adc
mov
and
inc
aad
sahf
adc
std
push
hlt
mov
mov
pushf
test
(bad)
pusha
adc
dec
xchg
ja
pop
movs
sub
bound
scas
mov
rcr
cld
les
out
nop
aad
xor
daa
push
xor
xchg
and
out
mov
aaa
mov
hlt
std
scas
gs
sub
add
mov
dec
test
sbb
sub
mov
es
daa
xchg
fcmovb
mov
mov
inc
mov
cmp
(bad)
mov
imul
(bad)
xchg
xchg
sbb
imul
mov
push
xchg
popf
fst
push
push
cmp
retf
pop
loopne
pop
and
sub
mov
scas
push
cmc
sahf
cwde
dec
inc
sbb
ins
fisttp
icebp
fist
or
test
adc
cmp
call
jmp
scas
rsqrtps
int
ret
loop
pop
inc
xor
sti
stos
sti
inc
mov
adc
aaa
loope
pop
ret
ret
ret
mov
mov
mov
test
and
cmp
xor
in
cmps
add
jns
dec
push
aad
push
push
push
sub
push
cwd
xor
add
test
cmc
ins
(bad)
movs
inc
mov
and
aam
div
mov
ins
or
mov
xor
push
loop
imul
dec
out
push
fbld
retf
les
adc
scas
push
mov
push
hlt
fdiv
das
lods
xlat
or
xchg
and
add
or
cli
push
and
shr
inc
scas
sbb
nop
(bad)
lods
cmc
mov
jo
fistp
mov
inc
loope
inc
or
adc
(bad)
add
rcr
push
xor
mov
aaa
and
pop
xor
add
dec
enter
retf
lods
mov
push
rol
dec
dec
(bad)
sti
cmp
sbb
les
scas
loopne
pop
mov
aas
ja
fwait
ins
jb
lea
add
push
jp
cmp
mov
scas
popa
fdiv
jnp
sti
sub
loope
repz
ret
or
or
fstp
fs
jl
out
add
mov
cmp
lock
xlat
cwde
adc
int3
push
cmc
scas
pop
mov
pop
or
pop
imul
push
dec
cmp
jno
mov
enter
out
or
enter
xchg
inc
dec
pop
leave
push
fcmove
mov
clc
subps
pop
out
jno
call
or
ja
rcr
neg
sub
fwait
mov
jb
jge
int
jmp
enter
rcl
jno
clc
jmp
sub
adc
xor
sbb
in
stos
jne
iret
int3
loope
ins
movs
jg
add
test
lods
scas
loope
sub
movs
test
bswap
enter
and
repnz
fidiv
mov
(bad)
inc
shl
mov
cli
mul
mov
jp
and
or
outs
int3
and
push
ss
mov
lds
or
int3
jg
dec
dec
inc
sbb
les
add
lods
mov
cli
add
cld
adc
scas
repz
pop
popa
iret
xor
push
cdq
mov
call
dec
and
test
mov
dec
les
fcomp
cmp
xchg
add
xchg
push
mov
add
jp
(bad)
or
sub
(bad)
mov
push
or
imul
and
mov
sbb
fnstenv
std
lea
aaa
push
and
ins
pop
shl
enter
movs
imul
push
xchg
addr16
iret
pop
push
sub
paddsw
push
rcl
sub
aaa
mov
pop
mov
xor
in
jmp
push
out
jle
retf
add
cdq
call
stos
(bad)
push
sti
mov
lds
or
or
into
xchg
ficomp
lods
repnz
mov
xchg
aas
fbld
gs
cmp
repz
int3
stc
es
mov
sub
faddp
lods
movs
sub
xchg
sub
xor
loop
fisub
push
sbb
push
sbb
pop
xchg
push
mov
icebp
(bad)
push
xchg
ret
inc
jbe
(bad)
out
push
mov
stos
jno
popf
test
jl
xchg
and
mov
outs
shl
jge
cmps
mov
cmp
lds
in
mov
mov
mov
and
pop
mov
ss
pop
dec
mov
gs
popf
dec
in
xchg
dec
jb
push
scas
and
xchg
arpl
sbb
cdq
pop
ficomp
out
stc
dec
pop
lock
scas
mov
sub
jmp
call
addps
sbb
scas
ds
daa
inc
xchg
loope
lea
or
int3
pop
enter
add
xchg
push
or
sbb
sbb
iret
cld
out
or
arpl
jg
stc
movs
scas
ins
add
jo
daa
push
mov
jae
mov
mov
mov
cmp
scas
xor
mov
mov
hlt
pop
mov
out
cwde
jb
xor
pushf
ins
rcl
je
push
js
daa
jb
jmp
lods
pop
jmp
(bad)
push
and
pop
sbb
cmp
push
retf
popa
sbb
ja
dec
test
and
outs
mov
sbb
repnz
fdiv
and
dec
lock
jge
test
fdivr
jecxz
mov
sub
pusha
rol
int
pop
or
inc
scas
mov
xchg
call
mov
dec
fld
fwait
loope
gs
gs
mov
or
sbb
jp
ror
and
mov
and
daa
and
aam
popa
rcr
out
adc
fdiv
icebp
pop
sbb
mov
sub
cwde
jmp
jp
outs
fs
add
mov
inc
pusha
or
xor
push
mov
addr16
jbe
sbb
(bad)
repnz
dec
ins
jge
aaa
sbb
jb
mov
ror
mov
mov
adc
jo
hlt
pop
mov
jl
inc
mov
inc
in
and
dec
adc
xchg
xor
ins
movs
dec
iret
lds
fwait
dec
push
rcr
mov
test
add
dec
aam
ds
or
and
push
aaa
lea
cmps
mov
js
inc
fwait
leave
or
add
fisub
cmp
add
mov
pop
pop
cs
mov
push
in
rcr
data16
sbb
stc
ds
mov
sysexit
nop
xlat
xor
les
xchg
sbb
enter
retf
adc
add
out
cs
rcl
imul
mov
clc
sbb
and
retf
cmps
scas
inc
sbb
stos
fs
push
outs
fcomp
sbb
push
inc
or
rcr
out
or
jns
fst
and
adc
jmp
inc
pop
mov
xor
or
xchg
mov
rcl
cmps
popf
mov
icebp
mov
or
(bad)
cmp
sub
add
push
push
or
adc
outs
xchg
lock
dec
ins
cmp
push
into
imul
push
inc
push
retf
push
ds
pop
out
pop
fwait
adc
mov
gs
sahf
cli
stos
dec
lahf
jecxz
(bad)
sahf
addr16
ja
test
sbb
fcomp
mov
paddsw
fadd
iret
cdq
and
mov
jmp
mov
mul
mov
jg
(bad)
mov
inc
adc
adc
xchg
and
imul
adc
inc
fist
xchg
fstp
xchg
out
in
jle
sahf
mov
test
scas
inc
and
pop
dec
dec
sbb
push
rcl
inc
lods
mov
pop
inc
lea
into
repnz
aad
(bad)
sub
out
out
jmp
and
scas
and
gs
int
mov
add
adc
int3
out
fidiv
shl
fwait
sbb
mov
loopne
repz
xchg
push
dec
add
arpl
sub
or
jp
mov
add
out
ret
fdivr
ret
adc
xor
mov
jne
jnp
jne
push
sub
inc
inc
inc
pop
fidivr
jmp
xor
cmp
mov
mov
mov
push
jmp
xor
rcr
push
jno
mov
ret
and
es
sub
cwde
sub
or
and
add
stos
cmp
jae
fild
lock
cwde
adc
stos
push
mov
sbb
(bad)
repnz
out
(bad)
jne
sar
scas
mov
sub
test
mov
push
cld
stos
jno
retf
call
scas
sar
std
and
scas
scas
nop
cmc
retf
or
imul
push
lock
mov
fist
cmps
dec
mov
add
fsub
mov
dec
fs
icebp
push
push
push
popa
xchg
mov
mov
fisubr
ret
rcl
sbb
jecxz
cmp
pop
scas
add
jge
fnstsw
inc
int
inc
dec
adc
sub
or
cmp
movs
test
test
xor
fwait
mov
fwait
popf
dec
sar
mov
(bad)
push
sbb
sbb
mov
clc
jns
pusha
cmp
(bad)
fisubr
pop
sbb
stos
pop
push
sub
mov
ret
mov
mov
pop
lods
add
popa
imul
fnstsw
sub
rcl
jns
xchg
mov
call
les
adc
repnz
movs
mov
dec
mov
in
xchg
pop
fidiv
stc
lea
inc
ins
test
lods
push
sahf
cmp
repnz
aam
or
sbb
cs
ror
sbb
xchg
push
jp
push
fld
das
clts
push
fcmovbe
pop
ficomp
test
sub
cmp
call
int3
jl
dec
push
pop
test
pushf
aad
out
mov
mov
mov
out
xchg
int3
mov
(bad)
xchg
push
push
sbb
mov
test
stos
add
loopne
imul
icebp
inc
sbb
mul
add
push
in
int
mov
sub
pop
aaa
and
scas
or
jp
rcr
or
ret
mov
jno
dec
jmp
sbb
xor
(bad)
sti
iret
mov
out
test
aad
sub
xchg
icebp
adc
out
dec
cmp
xchg
jge
sbb
fs
test
mov
mov
(bad)
mov
pusha
imul
xor
jmp
xor
popf
pop
or
ja
rol
mov
push
popf
in
inc
adc
dec
jno
out
sub
ret
sub
or
in
test
fdiv
or
nop
inc
in
ror
mov
movs
dec
shl
loop
ficom
imul
xchg
js
(bad)
xchg
enter
mov
cli
outs
cmp
out
dec
data16
push
imul
fadd
jo
retf
inc
std
sub
cmp
in
push
fidivr
mov
arpl
cmp
mov
add
inc
out
mov
out
repz
(bad)
cld
jmp
jge
xchg
fimul
daa
popf
ds
sti
dec
cld
in
cmp
mov
mov
cmps
out
test
or
mov
fbld
adc
lods
add
jbe
add
jno
shr
mov
js
push
loope
dec
mov
das
mov
sbb
xchg
and
and
jns
pop
test
pop
push
int
in
push
cmp
leave
dec
das
clc
mul
retf
mov
rcr
es
jle
dec
inc
push
aaa
or
inc
fwait
add
ds
imul
sbb
mov
cli
sub
pop
sub
inc
inc
div
outs
call
dec
cmp
add
nop
ret
iret
pop
mov
dec
lahf
jnp
or
call
push
push
loopne
mov
mov
sub
push
test
sub
icebp
and
js
cld
pop
mov
sti
ror
ds
fs
mov
mov
retf
into
ins
pushf
fisub
push
daa
xor
push
mov
ficomp
mov
ret
sub
imul
mov
xchg
out
dec
mov
rol
ins
jnp
push
shr
ins
ror
mov
lods
push
(bad)
mov
ss
adc
fdivr
adc
cdq
cmp
ds
push
jo
jbe
cmp
sub
ins
pusha
cld
ret
jg
sbb
(bad)
rcr
add
mov
call
adc
retf
cmc
jle
inc
out
sbb
add
xchg
mov
push
xor
cdq
aas
inc
rcl
shl
out
cmp
inc
jb
dec
dec
scas
xlat
scas
cmp
jo
cmp
jmp
and
ss
(bad)
cmps
adc
push
sbb
mov
xchg
pop
out
mov
add
shr
and
cmp
js
mov
dec
adc
or
cdq
pop
mov
out
lock
das
adc
sbb
sbb
ins
xlat
push
adc
sbb
push
lea
or
sbb
dec
cmps
enter
sub
push
lods
pop
dec
push
dec
jnp
or
enter
cmp
mov
xlat
les
mov
sub
dec
sbb
shl
stos
cs
(bad)
jl
test
pop
scas
stos
sahf
mov
aas
pop
cmp
add
dec
push
pusha
daa
push
iret
in
call
cld
push
dec
mov
mov
scas
std
pop
outs
pop
enter
jecxz
daa
icebp
sbb
fs
push
dec
dec
push
xor
dec
push
stos
retf
aam
mov
cld
or
inc
dec
mov
or
mov
stc
and
(bad)
(bad)
jnp
pop
push
or
sub
jb
shl
mov
cmp
mov
jge
(bad)
hlt
mov
and
mul
mov
pop
mov
ins
cmps
jb
xchg
xchg
shl
rcl
cmp
sub
cli
push
sbb
adc
and
out
(bad)
ror
jg
(bad)
out
add
in
sub
call
and
mov
sub
das
je
ds
mov
stos
(bad)
sub
fistp
pop
sub
int
dec
(bad)
fld
adc
(bad)
xor
je
xchg
xchg
xlat
jnp
mov
sbb
adc
pop
rcr
jmp
sbb
cmp
sbb
sub
xchg
(bad)
in
out
jl
adc
daa
jnp
retf
test
mov
push
dec
mov
jae
and
add
mov
mov
fidiv
add
inc
ficom
sbb
es
sbb
xchg
mov
xchg
neg
sbb
xor
std
inc
mov
pop
enter
add
es
mov
xchg
fwait
mov
jge
inc
sbb
shl
outs
sub
jno
sub
jb
sub
lahf
out
cli
outs
loop
pusha
scas
js
fistp
adc
mov
mov
test
imul
jle
mov
fild
push
bound
mov
jl
jmp
in
in
imul
push
nop
inc
iret
cmp
sti
pusha
add
arpl
ins
inc
retf
nop
or
adc
xchg
push
cmp
sbb
lea
popa
call
fidivr
mov
lock
lds
sub
adc
mov
ror
jae
int
dec
mov
mov
stos
rcr
stc
mov
not
xlat
adc
bound
xor
push
inc
test
xor
inc
mov
add
xor
cli
imul
mov
aas
inc
xor
mov
bound
push
(bad)
cwde
fcomp
call
add
es
and
hlt
pop
outs
or
dec
mov
cmp
rcl
loope
xor
rcr
xchg
add
into
jbe
push
and
dec
adc
mov
push
and
cs
sar
sbb
push
and
fmul
mov
sbb
(bad)
hlt
adc
mov
cmps
shr
and
test
inc
aad
sahf
jp
jmp
mov
daa
sub
push
stos
jg
cli
mov
xor
repz
scas
ret
push
je
fsubr
ret
mov
xor
shr
movs
xor
std
and
(bad)
stos
mov
pop
cld
nop
repnz
ror
pop
sbb
es
inc
jle
cmp
mov
cld
mov
in
cs
push
stos
mov
fs
adc
aam
je
cmp
mov
push
adc
fbld
xchg
aad
inc
fld
sub
inc
mov
inc
(bad)
push
mov
fidiv
mov
mov
retf
aas
call
push
test
and
out
pop
movs
or
push
pop
add
leave
mov
mov
cmps
mov
jae
ret
sti
pusha
adc
mov
out
inc
pop
inc
bound
sti
jmp
icebp
or
cs
test
cwde
popf
loop
sbb
pop
cmp
js
or
sub
cmp
lods
ds
out
std
neg
xchg
mov
xchg
dec
mov
fdivr
sti
push
icebp
mov
leave
mul
pop
inc
pop
xchg
cmp
dec
cdq
ins
(bad)
jnp
test
ret
mov
and
cmps
sub
cmp
loope
scas
jmp
ret
stos
jbe
sti
hlt
cld
rol
add
stc
add
sbb
cmp
pop
stos
pop
cmp
das
xor
and
add
lea
cdq
adc
mov
pop
pop
or
xor
psubusb
push
into
add
pushf
jns
xchg
sub
shl
cmp
lahf
jo
push
idiv
dec
mov
sub
movs
std
pop
shl
jbe
in
out
mov
cmp
rcr
pop
inc
rcl
add
aaa
pop
bswap
jbe
cmc
pusha
out
dec
push
push
loope
xor
jp
pop
mov
shr
jmp
lahf
cmp
pusha
int3
mov
cwde
cdq
ficom
vcvttsd2si
sbb
popf
retf
ror
xor
int3
sbb
ds
aad
fwait
stos
aad
push
rol
xchg
jo
jns
es
dec
dec
gs
sbb
ror
mov
or
mov
in
fmul
into
jecxz
mov
pop
adc
add
push
fadd
xor
cmp
inc
mov
push
sub
outs
pop
movs
xor
mov
xchg
mov
call
lahf
xchg
jnp
out
dec
enter
mov
pusha
loope
cmps
add
movs
inc
aam
addr16
je
push
test
inc
lea
ja
ret
push
in
imul
jbe
(bad)
mov
ins
inc
gs
push
cmc
cmps
shl
clc
outs
sub
mov
shl
inc
(bad)
(bad)
mov
xor
fimul
push
cmc
push
(bad)
mov
mov
clc
aam
xor
inc
jp
icebp
test
addr16
aam
in
mov
adc
iret
mov
cli
lahf
lods
(bad)
ror
xchg
add
push
popa
push
shl
je
sub
arpl
shr
mov
call
xor
and
sbb
jbe
inc
sar
dec
in
push
mov
pop
jp
rol
jmp
jbe
xor
int
mov
cdq
in
adc
ins
or
popa
in
aad
sbb
jp
cmp
add
in
cmp
push
aad
mov
sub
jbe
mov
jns
iret
int3
scas
das
push
loop
aad
arpl
lods
lods
retf
sbb
into
push
scas
cmc
jae
inc
rcr
push
add
adc
mov
fstp
fidiv
mov
shr
jbe
mov
pushf
mov
test
test
std
jp
setl
fimul
icebp
cdq
fcmovnbe
push
(bad)
push
add
jno
frstor
rcl
adc
shr
in
fadd
xor
dec
fmul
fnstenv
cmps
or
rcr
xchg
retf
dec
mov
push
inc
inc
jns
sbb
repz
std
add
out
adc
ret
icebp
dec
fbld
pop
jno
pop
cmps
mov
inc
pop
pop
pop
sub
aam
loope
loop
fxch
call
fsub
sbb
sub
hlt
push
dec
movs
loopne
jae
shr
adc
mov
movs
call
fs
or
mov
mov
lods
outs
cmc
cld
jns
mov
jns
iret
xchg
xchg
data16
fidivr
adc
push
cmp
push
cmc
repnz
lods
lods
xor
sbb
push
sahf
outs
cmp
pop
or
fisubr
movs
jne
cmp
jg
jmp
cmp
adc
xchg
push
push
add
call
inc
xchg
les
js
fidiv
jbe
sub
test
data16
push
dec
pop
xor
cwde
shr
jbe
pop
xchg
iret
fcom
sbb
dec
mov
mov
(bad)
aad
jle
add
stos
(bad)
dec
xchg
mov
pop
xor
and
pop
out
mul
iret
pop
shr
mov
pop
nop
pusha
ins
test
jb
jnp
ins
push
sub
push
pop
cmp
hlt
mov
ins
mov
adc
mov
dec
xchg
xchg
lods
xchg
jge
fst
jae
ret
jo
fcomp
dec
std
mov
bound
add
push
push
add
mov
jle
ret
pop
inc
jg
scas
add
cdq
fcomi
pop
lods
mov
dec
add
pop
arpl
iret
jmp
mov
mov
jbe
pop
in
ret
cmps
je
nop
dec
cmp
adc
xor
jg
cmps
test
xor
cmps
add
inc
bound
xor
ins
adc
xchg
bnd
jle
js
mov
cmp
sub
jno
loope
sbb
mov
push
adc
int
or
or
dec
jbe
pop
mov
push
cmp
push
adc
popa
mov
cmp
and
mov
add
push
jl
(bad)
daa
sbb
cmp
test
dec
(bad)
cmps
or
pop
inc
mov
shl
pop
jecxz
dec
and
jmp
cmp
mov
or
stc
ds
out
cwde
inc
pusha
or
adc
mov
mov
xor
(bad)
push
jnp
cmp
cmp
ret
xor
je
fdivr
xchg
xchg
lds
aad
pop
cmp
sar
sub
and
sub
gs
pop
add
inc
cmp
cmp
jl
xor
sar
fdivr
jl
and
add
aas
cmps
sbb
das
stos
popf
add
call
push
xchg
add
outs
add
movs
ret
mov
adc
enter
and
jge
sbb
jno
scas
add
cmp
stc
or
push
in
stc
rcr
pusha
not
xchg
call
adc
stc
ja
imul
sti
int
cld
mov
pop
stos
push
rcl
jns
loope
outs
stc
jecxz
in
out
fldenv
fcomp
retf
mov
jmp
call
sbb
pop
icebp
xchg
pop
dec
push
jne
and
rcl
out
les
ins
inc
scas
ins
mov
xor
(bad)
ror
hlt
int3
mov
and
jecxz
xlat
fisubr
mov
outs
outs
lds
xchg
sbb
jmp
out
dec
pop
adc
aaa
or
and
xor
push
aam
mov
lahf
jp
lock
out
jmp
jp
add
pop
push
mov
xor
test
inc
mov
cmps
(bad)
push
pusha
gs
add
inc
dec
xchg
lods
jnp
ret
cli
fstp
inc
push
cmp
test
shl
lahf
stos
gs
xor
push
mov
xlat
pop
mov
mov
leave
loop
ins
cmp
sub
xchg
mov
cmp
imul
xor
xchg
adc
lds
pop
mov
pop
out
mov
hlt
add
pop
add
mov
or
imul
mov
mov
arpl
or
out
in
clc
repnz
ins
shr
scas
mov
push
sti
ror
mov
inc
pop
cdq
out
or
enter
test
or
or
lods
mov
popf
in
es
std
cs
fiadd
jmp
mov
or
cld
lahf
inc
and
jmp
xchg
outs
mov
push
fcomp
sbb
js
add
ins
sub
push
pop
lds
push
and
add
addr16
repnz
xchg
fldcw
mov
in
push
pop
pop
lock
push
mov
mov
(bad)
mov
or
dec
les
pop
sub
jmp
mov
out
mov
fcmovb
mov
mov
xor
inc
jno
inc
jmp
push
lods
ds
cmps
rol
cld
(bad)
cmp
add
jo
cdq
je
push
out
iret
aas
and
fmul
push
jb
jecxz
(bad)
loopne
dec
sbb
sti
or
popf
sub
mov
or
inc
add
fld
ins
test
dec
and
inc
das
xor
call
push
dec
call
push
lea
or
dec
sbb
inc
sub
mov
cmps
xor
jns
cmps
pop
cmp
mov
dec
icebp
ror
jno
jae
enter
sbb
leave
mov
dec
pop
imul
or
pop
push
imul
xlat
push
and
or
mov
stos
adc
call
and
retf
mov
aas
sbb
xor
and
ja
je
out
imul
or
mov
(bad)
inc
inc
xchg
pop
inc
ficom
pop
xlat
in
or
loop
iret
outs
xor
gs
icebp
mov
jmp
cmc
jmp
xchg
inc
loop
mov
push
mov
cmps
pop
cwde
sbb
inc
mov
(bad)
rcr
fwait
dec
cmp
repz
xchg
adc
xchg
jne
movs
sbb
mov
push
fptan
sub
(bad)
popa
sbb
push
mov
jl
(bad)
push
and
inc
pop
(bad)
adc
sbb
xor
jne
out
dec
rol
push
jbe
mov
repz
(bad)
xor
mov
aam
add
inc
and
xchg
inc
pop
or
adc
(bad)
cmp
jp
jmp
adc
fsubr
out
sub
jmp
out
jno
jecxz
lods
fwait
or
sub
fmul
rol
stos
enter
dec
xlat
mov
ja
inc
jae
mov
mov
movzx
(bad)
push
adc
dec
sub
ret
and
cmc
imul
pop
icebp
cmps
loope
mov
sub
mov
ins
mov
cli
iret
daa
mov
jp
repnz
adc
aad
xchg
jno
rcr
mov
mov
loopne
enter
int
add
cdq
retf
es
div
add
add
pop
sbb
out
adc
xlat
and
fwait
psubw
cld
xchg
or
lods
div
push
jno
imul
mov
inc
fwait
scas
rol
aas
jg
dec
push
ds
mov
daa
lods
icebp
sbb
js
xchg
jecxz
pop
xchg
mov
jbe
rol
adc
push
dec
loop
cs
and
or
fs
rol
fwait
adc
fisub
push
and
add
rcl
mov
retf
aaa
jnp
int
mov
pop
cmp
mov
mov
sub
inc
pop
test
retf
mov
outs
mov
xor
(bad)
aam
cdq
xor
mov
xor
adc
pop
xchg
add
pop
cmps
fidiv
jno
dec
retf
movs
repnz
sbb
xchg
iret
cld
jo
icebp
dec
xlat
push
and
sbb
push
push
in
movs
jmp
cmc
or
imul
scas
jns
or
jmp
retf
into
popf
cmp
leave
dec
stc
mov
adc
arpl
and
jb
out
dec
adc
dec
cmc
gs
push
fwait
lahf
pushf
pop
adc
mov
js
fmul
mov
mov
inc
(bad)
mov
sbb
pusha
jno
out
inc
call
lds
repnz
mov
fs
in
xchg
xchg
jl
mov
dec
loope
es
lock
lods
jmp
(bad)
cmp
mov
aas
pop
popa
in
xor
mov
mov
mov
js
test
imul
sti
or
push
stc
ret
xchg
xchg
sbb
loopne
and
sub
push
xor
adc
sub
ror
adc
pusha
jmp
xor
sub
pop
or
(bad)
aam
xor
sbb
or
fwait
cmp
ja
repz
clc
loop
mov
push
test
fwait
xchg
data16
out
repnz
dec
mov
mov
sbb
pop
movs
movs
mov
pop
imul
sbb
mov
push
fdivr
mov
push
add
and
cdq
scas
in
data16
push
lods
xor
out
lds
retf
adc
jge
jo
lea
or
mov
adc
std
xchg
jle
sub
ss
push
xchg
pop
or
push
lods
sahf
lods
inc
aaa
repz
mov
leave
jmp
retf
adc
mov
in
mov
sub
(bad)
(bad)
enter
adc
jmp
mov
fnstsw
jge
test
push
shl
shl
adc
cmp
fwait
pop
push
ret
mov
cmp
mov
loopne
jns
neg
into
mov
vpshufd
sub
jae
sbb
and
dec
sbb
push
xchg
or
add
add
fwait
loop
(bad)
jbe
test
xor
loop
sbb
scas
in
pop
and
icebp
dec
popf
fs
cld
loopne
popf
jo
fist
mov
jge
test
std
cmc
out
mov
hlt
mov
dec
das
sub
cmp
loope
fild
ret
rol
mov
and
jns
mov
stc
cdq
jne
aad
out
test
push
dec
dec
dec
xor
push
mov
loope
jo
and
lods
sahf
or
jmp
test
jmp
iret
fs
add
mov
clc
rol
sub
adc
push
pop
or
sbb
jp
jns
jae
rol
mov
(bad)
imul
xchg
pop
cld
repz
out
push
inc
push
js
or
jl
inc
(bad)
fmulp
call
cmp
(bad)
dec
add
and
and
aad
mov
or
shl
sbb
(bad)
add
retf
cs
mov
ins
pop
out
xlat
mov
xlat
stos
in
push
stos
mov
stos
retf
sbb
jo
or
fdiv
add
arpl
add
mov
retf
cdq
xchg
xchg
jmp
dec
xor
xor
sahf
clc
(bad)
test
sahf
or
(bad)
stc
(bad)
fst
or
pop
or
xchg
aas
jae
lahf
(bad)
stos
rcr
data16
jle
adc
sahf
mov
imul
jns
dec
mov
lods
jp
loop
retf
cmps
test
and
cmp
test
jmp
mov
retf
icebp
jge
repnz
loopne
gs
xlat
dec
ja
int3
xchg
adc
retf
arpl
jg
push
sub
push
pop
pushf
dec
add
jmp
mov
leave
ret
cdq
inc
mov
daa
mov
bound
sbb
xchg
ins
and
int
fucomi
jp
inc
push
stos
test
lods
stc
fldln2
div
push
dec
ret
jmp
xor
stos
xor
nop
mov
adc
jmp
in
xchg
ja
add
dec
cwde
sub
icebp
sub
(bad)
dec
dec
adc
xchg
or
inc
add
pop
int
ja
and
pop
xlat
pop
arpl
imul
push
xor
fild
mov
mov
jnp
xor
lfs
pop
test
mov
lods
loopne
sub
outs
inc
push
sub
out
mov
imul
push
loop
mov
les
test
je
lods
add
clc
xchg
mov
xor
cmps
add
aad
jmp
cld
fucomi
mov
fs
aam
aam
cmp
push
ja
test
in
sbb
xlat
(bad)
fcmovnbe
ins
xchg
ror
and
mov
hlt
mov
movs
inc
lds
imul
leave
cdq
(bad)
pop
(bad)
sub
int3
gs
xor
mov
add
(bad)
enter
sar
and
outs
mov
wbinvd
stc
jp
xor
sub
inc
daa
dec
(bad)
shr
je
shl
js
(bad)
mov
xor
pop
xor
leave
adc
inc
dec
ins
cmp
push
data16
sti
(bad)
pop
fwait
les
sub
cmp
gs
push
dec
popa
and
cmp
xchg
call
push
lahf
test
mov
outs
movs
xchg
mov
hlt
int
and
loopne
je
scas
mov
mov
or
mov
cld
test
cwde
push
sbb
les
add
fwait
sbb
mov
xchg
cpuid
and
pop
add
pop
sbb
add
add
or
ret
retf
xor
fist
cmp
mov
mov
mov
loope
xlat
sub
ins
mov
mov
adc
mov
ins
mov
fild
leave
mov
das
icebp
jbe
mov
mov
hlt
or
adc
mov
hlt
xchg
mov
mov
scas
out
mov
out
icebp
push
adc
test
push
or
retf
shr
cmp
pop
mov
and
push
lods
rcr
sahf
sub
adc
sbb
mov
push
test
xchg
popa
fs
mov
mov
(bad)
bnd
push
mov
iret
add
mov
mov
mov
int
cmp
dec
mov
js
jmp
jns
or
jb
ja
lahf
mov
retf
mov
adc
clc
pop
pop
mov
mov
stos
mul
cmps
mov
push
sbb
sub
mov
mov
push
or
sbb
fnstenv
jbe
add
loope
push
push
or
cmp
cmp
ss
sub
jp
cmp
out
mov
rol
jmp
sub
into
loope
(bad)
add
movs
sub
xchg
cmp
pop
push
shl
xchg
mov
dec
test
sub
in
xchg
push
shl
out
imul
or
jns
inc
xchg
sahf
sbb
ret
fisub
mov
lock
sub
in
jl
bnd
sar
aas
ins
js
sbb
mov
in
cs
mov
push
add
fwait
ror
mov
sub
pop
or
ins
sar
xor
mov
movs
(bad)
sbb
inc
mov
xor
sbb
and
(bad)
div
loop
mov
lods
stc
push
(bad)
sar
push
adc
test
sbb
fucom
sub
scas
cmp
test
jmp
pop
stc
das
inc
korw
out
dec
jne
push
call
adc
movs
push
hlt
push
es
fisub
mov
lea
inc
lock
lods
mov
ror
xchg
ret
mov
test
jg
(bad)
aam
bound
mov
jp
in
mov
pop
add
mov
loopne
push
cmps
sbb
ret
mov
outs
mov
scas
ss
fidiv
std
cmp
xor
jle
push
hlt
les
push
repnz
scas
sbb
or
inc
sub
int
(bad)
push
shl
jne
pop
adc
cld
push
dec
cmp
(bad)
(bad)
mov
fs
xchg
not
movs
jecxz
(bad)
into
push
(bad)
sar
dec
ja
mov
xor
add
push
shl
jns
adc
sub
repnz
xchg
imul
imul
adc
cld
in
in
xchg
cmp
cmps
ret
mov
imul
dec
push
and
mov
push
lods
jg
shl
cmp
pop
mov
mov
outs
ret
bound
ja
lds
std
mov
add
ret
mov
gs
dec
imul
je
lea
fwait
push
mov
adc
xor
dec
mov
sti
sahf
sbb
jbe
mov
or
lods
popf
test
or
in
sub
xchg
stos
lds
adc
int3
adc
jbe
and
je
icebp
nop
(bad)
inc
fist
bnd
pop
(bad)
adc
mov
xor
ror
outs
jbe
mov
repnz
adc
out
cmp
sub
pop
and
in
sub
cmp
mov
adc
rcl
iret
push
mov
jne
push
mov
sub
inc
cmps
xor
pop
jbe
inc
push
cmc
(bad)
cdq
push
ret
lods
mov
test
xchg
sub
gs
ins
sub
sbb
stos
dec
in
outs
(bad)
je
lds
dec
sbb
jno
ret
das
or
lods
mov
imul
out
popa
mov
outs
cmp
add
adc
pop
scas
cmc
inc
or
push
repnz
cmp
ss
sti
movs
repnz
dec
push
stos
not
mov
add
inc
xor
sub
cmp
push
cdq
mov
out
out
cmp
inc
mov
imul
out
rcr
or
aaa
lods
push
inc
xchg
in
mov
pushf
shl
in
dec
add
mov
ret
repnz
dec
pop
rol
mov
out
fs
push
inc
aas
xor
repz
rcr
leave
mov
xor
enter
div
and
jnp
loopne
sbb
sub
dec
cwde
dec
fs
mov
clc
in
sub
arpl
mov
and
mov
test
push
cmp
hlt
test
int3
imul
test
out
aad
mov
aas
(bad)
and
and
pop
mov
jmp
call
jb
push
sbb
loope
imul
sahf
ret
scas
mov
push
loopne
test
dec
and
mov
jns
test
inc
ja
stos
adc
ja
add
and
movs
aam
icebp
aam
inc
test
ret
xchg
out
int
into
fistp
adc
sbb
pop
les
jg
push
inc
loop
adc
sbb
push
and
mov
ja
adc
add
pop
or
mov
mov
sti
or
fmul
lods
xchg
inc
or
mov
cwde
adc
jge
mov
cmp
loop
push
clc
je
aad
mov
inc
repz
std
cmps
(bad)
jo
out
in
xor
out
inc
dec
sbb
in
popa
movs
dec
test
pop
xor
mov
or
fisttp
push
inc
jl
sub
mov
retf
mov
iret
not
push
fwait
dec
jbe
dec
xchg
mov
push
jmp
pop
jno
out
xchg
dec
inc
pop
pop
addr16
outs
das
imul
jl
mov
cmp
jmp
cmps
shl
mov
xor
and
icebp
sbb
sbb
test
rcl
xchg
out
out
jno
pop
into
xchg
leave
je
repz
cmp
cmp
fwait
adc
int
push
mov
mul
mov
jmp
rol
cmc
cmps
hlt
xchg
inc
pop
pop
mov
cli
lahf
ds
loope
jp
add
int
and
and
retf
pop
inc
fiadd
mov
(bad)
imul
scas
jne
js
cmp
or
test
sbb
sar
jl
mov
and
(bad)
sub
int3
das
pusha
lods
in
dec
mov
sub
rcr
mov
inc
xchg
arpl
leave
outs
ret
loopne
repnz
push
and
sti
mov
mov
mov
inc
dec
xchg
retf
xor
push
shr
stc
push
(bad)
js
xor
push
mov
dec
je
pop
push
dec
cwde
repz
sub
leave
dec
adc
out
(bad)
loop
icebp
xor
xchg
out
jae
ins
mov
loope
scas
pop
lods
cmp
shr
xchg
(bad)
loope
push
dec
popa
xchg
(bad)
fisub
nop
ja
jo
aam
in
fisubr
cmp
ja
mov
retf
pop
push
(bad)
sbb
in
add
xor
pushf
ret
mov
(bad)
in
repnz
pusha
cld
and
adc
cmc
mov
mov
adc
push
mov
pop
jl
xor
test
mov
mov
call
int
std
enter
sub
mov
sub
scas
push
mov
icebp
mov
xor
xchg
mov
jge
(bad)
jecxz
popa
retf
inc
mov
cmps
jle
push
mov
inc
call
loope
loop
js
add
mov
psubb
and
ja
pop
enter
jae
mov
stos
mov
sub
mov
add
jne
mov
pop
xchg
pop
lahf
ins
pusha
in
mov
iret
adc
dec
xchg
cmps
jns
movs
(bad)
(bad)
ret
xor
ss
mov
cli
pop
xchg
mov
push
xor
shr
(bad)
cmps
fwait
mov
pop
xor
push
sbb
iret
fucomp
cmp
xor
jae
cmp
cmp
neg
xchg
mov
adc
and
inc
pop
test
adc
push
xchg
fimul
pop
int
add
push
out
sub
mov
sub
lock
hlt
mov
in
xor
mov
(bad)
cli
cmp
imul
(bad)
rcl
xor
int
mov
in
sbb
sbb
adc
out
mov
or
push
rcl
pusha
(bad)
lock
inc
cmp
aaa
fst
mov
pop
jae
cmps
sbb
sbb
aad
test
iret
retf
xor
adc
mov
ja
push
adc
and
cmp
cmps
adc
retf
sahf
and
cli
push
fsubr
mov
fs
shr
and
and
cs
jnp
sti
nop
or
jno
arpl
jns
jmp
add
(bad)
(bad)
rcl
ret
lds
leave
out
ds
mov
lods
jo
sub
ret
test
xchg
xor
jmp
jbe
sti
push
in
lods
cwde
shl
adc
pusha
xor
xchg
sub
mov
fild
sub
ffree
aad
sti
pop
sbb
mov
mov
jb
jge
cmp
and
scas
cld
fidiv
sahf
repz
jns
icebp
sbb
push
sub
(bad)
mov
pop
add
xchg
sbb
ss
(bad)
dec
dec
out
mov
repz
jbe
stc
and
fisttp
mov
or
enter
mov
sub
xor
shr
push
lods
daa
das
and
push
inc
jae
add
jg
or
jmp
lar
jmp
push
out
inc
cwde
dec
ror
push
test
and
push
mov
and
sub
lea
inc
iret
mov
rol
adc
push
push
jae
inc
pop
mov
mov
mov
retf
xchg
cld
jo
test
mov
dec
in
or
jns
jmp
xor
imul
pop
push
and
jmp
ins
loop
aam
in
mov
cli
push
xor
mov
pop
pop
push
and
scas
xlat
movaps
shl
cwde
and
pop
ror
xchg
mov
mov
rcl
call
dec
mov
add
in
jg
and
out
add
sbb
xchg
call
aaa
popa
int
xsaveopt
arpl
mov
js
das
ror
cmps
icebp
test
dec
push
inc
adc
aad
int
out
xor
mov
js
out
jle
push
stos
xchg
je
dec
cmps
adc
int3
adc
sbb
mov
push
out
pop
imul
int3
xlat
jmp
xchg
in
arpl
lods
mov
addr16
test
not
xor
dec
movs
(bad)
out
pop
push
shl
pop
xor
clc
and
adc
jecxz
jle
mov
inc
fild
add
ja
adc
stc
pop
in
in
call
push
mov
out
push
push
push
xchg
das
xor
test
icebp
push
pop
inc
test
pop
push
int
aam
repnz
xchg
cmps
xchg
pop
(bad)
(bad)
mov
jmp
inc
dec
neg
pushf
pop
push
fs
pop
and
nop
cmp
loopne
pop
sbb
add
pop
adc
cli
xor
inc
hlt
push
or
call
dec
push
popa
and
add
jle
pop
and
cld
jno
pop
inc
iret
adc
push
dec
es
xchg
js
adc
arpl
sub
xchg
lea
fld
jg
movs
xor
lods
pop
ss
push
xor
mov
in
enter
sub
jge
mov
push
ror
pop
dec
sbb
call
clc
leave
jge
mov
inc
add
xchg
sbb
jle
cmc
daa
xor
mov
psubsb
scas
mov
inc
adc
jp
popa
(bad)
mov
and
xchg
or
pop
or
mov
sbb
popf
cmps
mov
arpl
jnp
rcr
xchg
sbb
int
test
jbe
pop
cdq
jp
add
jne
gs
repz
cmps
adc
mov
adc
or
std
cmps
div
outs
push
inc
jecxz
sbb
mov
jmp
jg
inc
dec
popf
xchg
(bad)
js
sub
dec
jns
pop
mov
jl
mov
sub
fstp
mov
push
and
mov
pop
cs
push
sti
push
je
test
mov
outs
aas
mov
cmps
inc
test
shr
mov
xchg
xlat
mov
fild
pop
jecxz
and
add
popf
arpl
inc
push
add
and
cmps
xor
icebp
add
ja
sub
js
mov
mov
jmp
call
jmp
pop
cmp
int3
xchg
retf
xchg
xor
jne
(bad)
push
scas
movs
inc
or
out
jle
mov
adc
call
jb
fstp
add
sub
add
arpl
lods
or
xor
fiadd
push
lea
dec
pop
pushf
xor
lock
push
shl
mov
inc
cmp
outs
sbb
mov
mov
(bad)
xor
daa
adc
stos
adc
in
aas
imul
div
xchg
pushf
rcr
jns
or
repnz
ins
cmps
popa
inc
jecxz
fcomp
and
(bad)
out
xor
ret
fwait
in
inc
push
cmps
xchg
jmp
push
and
mov
mov
and
jb
jbe
cmps
cdq
jl
fld
ds
cmp
xchg
sbb
mov
mov
jg
pop
jo
mov
js
jb
fdiv
jmp
sub
test
adc
lea
(bad)
in
xor
and
imul
or
add
jno
fcmovu
in
mov
push
pop
fadd
fnstcw
ss
into
dec
imul
xor
mov
dec
(bad)
mov
jmp
call
pop
cmps
cmp
and
and
ins
addr16
aaa
popa
stc
sbb
ret
jo
inc
aam
ds
sbb
and
or
loopne
add
aas
(bad)
js
sub
mov
dec
stos
push
mov
jl
push
out
dec
or
bound
adc
call
rcr
into
or
inc
sub
mov
leave
ret
sbb
jbe
or
jle
jmp
add
or
jg
xchg
movs
test
mov
sbb
lods
xchg
adc
ins
and
cmp
push
xchg
mov
sub
into
les
fcmovb
imul
push
jo
jecxz
jae
fcomip
sbb
call
jne
sub
push
mov
imul
std
call
jecxz
int
mov
sub
dec
pop
(bad)
(bad)
nop
xchg
cmps
aad
dec
das
adc
out
jg
add
sbb
mov
jnp
push
(bad)
imul
(bad)
dec
data16
(bad)
jnp
imul
xor
cs
mov
out
ror
je
mov
cmps
pop
loopne
sar
sahf
mov
repnz
xor
outs
das
push
xchg
in
jo
popa
mov
jnp
repnz
in
dec
movs
add
jp
stos
fwait
stc
jmp
gs
sbb
push
ds
mov
and
outs
push
jg
and
lahf
fbstp
sbb
mov
mov
psubq
cmp
xchg
mov
fld
shl
push
loop
mov
or
lea
xor
sbb
imul
pop
add
xchg
add
push
push
imul
das
jmp
(bad)
call
outs
jo
mov
xchg
fadd
xchg
adc
xchg
aad
out
xchg
mov
shrd
add
stos
dec
push
or
cmp
xchg
add
dec
cmp
cdq
out
lds
ds
bnd
or
inc
xor
lods
jno
or
or
loopne
mov
fwait
shl
jge
mov
lea
rcl
pop
loopne
repz
dec
jo
xchg
(bad)
cmps
fsub
shl
jne
mov
push
jns
mov
sahf
jmp
bound
loope
and
jns
hlt
inc
popa
sbb
aad
fwait
pusha
xchg
in
inc
push
sub
(bad)
inc
add
sbb
pop
xchg
xchg
push
dec
mov
inc
and
jbe
(bad)
and
dec
sub
nop
jo
(bad)
sbb
adc
sub
sub
retf
les
jo
xor
std
xchg
fnsave
dec
push
pop
dec
test
lgs
icebp
loop
clc
pshufw
popf
push
jae
fadd
add
xor
in
cmps
in
leave
hlt
cmps
jne
add
and
shr
imul
fcomp
jb
jge
sbb
ds
xor
sub
mov
cmovbe
push
adc
out
sar
(bad)
mov
push
pop
jbe
pop
mov
sbb
movs
push
popf
aad
cli
or
imul
ds
das
jnp
mov
mov
hlt
mov
fcomi
shr
add
aas
js
push
lock
fbstp
loopne
or
fisttp
je
dec
xor
jp
push
sub
mov
fsub
je
mul
xchg
jecxz
adc
inc
movs
mov
sub
mov
sbb
mov
jle
sbb
aaa
xor
xchg
mov
icebp
dec
sbb
or
xchg
jp
sub
(bad)
shl
xor
dec
cwde
loop
jnp
jmp
sahf
ret
test
xor
mov
std
pop
outs
mov
out
sahf
shl
test
shl
iret
sti
cmps
fsubr
repz
cmp
es
hlt
fs
shl
ret
sub
mov
outs
es
jnp
loope
sub
jg
push
fs
or
push
aaa
mov
xor
lahf
stos
arpl
sub
jl
xor
ja
mov
xlat
jns
push
mov
jge
and
fisttp
test
lods
jp
and
setne
ror
jge
jmp
mov
mov
push
mov
arpl
sub
out
xor
sub
fiadd
nop
jl
aam
cdq
xor
fistp
aam
adc
ja
clc
sub
aaa
lahf
repz
inc
jl
aaa
mov
clc
inc
adc
inc
cmp
mov
repz
sbb
xchg
adc
(bad)
or
cs
std
ins
push
sahf
push
movs
mov
xor
add
mov
xchg
es
xchg
jb
pop
lods
jmp
aad
pop
loope
jns
aaa
and
arpl
add
mov
stos
int
cmp
es
add
inc
and
pop
cld
cmps
(bad)
ret
and
les
imul
into
adc
add
mov
cli
int
and
lods
sub
push
ins
push
sti
pop
add
jg
mov
frstor
inc
pop
retf
adc
gs
jno
or
outs
pop
test
call
adc
dec
adc
xor
mov
mov
xor
fcom
add
and
ret
data16
dec
inc
loope
mov
adc
enter
bswap
inc
popa
out
mov
ficomp
or
test
inc
aas
mov
xor
xchg
jae
outs
mov
retf
mov
lods
and
dec
xor
lods
fild
add
push
mov
fs
fisttp
jl
mov
loopne
fdivr
add
sub
mov
movs
adc
push
sbb
mov
adc
push
cmp
je
test
sub
je
into
jbe
clc
stc
mov
inc
scas
gs
out
fild
daa
fld
ss
js
push
push
ja
push
jnp
je
test
or
and
repz
int3
repnz
pop
mov
loopne
call
xchg
mov
mov
mov
fdiv
repnz
(bad)
ds
jle
aam
lahf
loop
mov
shl
test
mov
pop
cmp
and
ds
dec
sub
sbb
jge
in
popf
add
loop
add
and
test
jne
dec
ror
xor
and
push
ins
cmp
stos
repz
mov
outs
xchg
or
ss
addr16
lea
push
push
or
jge
sbb
pop
jne
mov
and
jg
mov
cmp
jle
dec
out
push
xor
in
scas
xor
push
add
pop
push
fwait
ins
(bad)
adc
int
rcl
imul
ss
or
add
int
jbe
inc
leave
ss
icebp
inc
je
fiadd
xchg
mov
jmp
mov
cmp
and
or
pop
sbb
and
(bad)
adc
cmps
sbb
fsub
(bad)
je
add
or
rol
pop
push
cmp
popa
adc
jbe
jns
sub
xor
jnp
xchg
shr
mov
or
and
shl
xor
or
aaa
ins
movs
stc
cmp
mov
adc
cmp
pop
xor
rcr
jne
fdiv
sbb
inc
cmp
dec
mov
push
xor
cmp
mov
xor
stos
xchg
dec
mov
mov
pop
and
inc
mov
jle
je
xchg
cmp
mov
mov
test
dec
xchg
pop
xlat
mov
push
mov
iret
adc
jecxz
gs
xor
xor
and
aad
add
sub
sub
mov
mov
sub
mov
scas
adc
in
adc
cwde
aad
lahf
rol
push
xor
das
and
mov
xchg
out
out
fiadd
test
push
(bad)
call
cmp
pop
mov
xchg
push
ins
xor
(bad)
out
pop
test
xor
movs
push
push
scas
stos
rcr
jmp
pop
js
pop
cmp
bound
aas
addr16
sbb
test
push
(bad)
out
inc
pop
repz
sbb
mov
imul
push
add
enter
imul
add
movs
leave
std
retf
pop
sub
adc
(bad)
aad
mov
sar
or
push
and
mov
inc
in
shr
inc
imul
and
add
mov
and
lods
mov
ret
or
sbb
js
scas
ror
popa
sub
sbb
xor
sub
ss
cmp
(bad)
pop
xchg
pop
pop
call
ins
pop
std
jns
nop
xor
inc
aad
shr
jo
aad
inc
stc
or
dec
mov
shr
js
not
adc
fadd
xchg
jmp
ss
xchg
jbe
adc
cld
pop
or
dec
arpl
in
push
popf
or
or
lds
xchg
mov
adc
jbe
adc
clc
(bad)
popa
jle
enter
cmp
or
jecxz
or
jns
popa
push
and
(bad)
xor
push
inc
cli
cwde
mov
ja
cwde
push
(bad)
mov
movs
mov
cs
jbe
jae
out
jae
sbb
sahf
dec
or
mov
xchg
inc
or
mov
in
mov
mov
mov
rcr
adc
hlt
and
dec
sub
fistp
icebp
fisttp
pushf
add
pop
movs
out
(bad)
lock
cmp
cmp
je
inc
jo
pop
adc
inc
sub
push
and
pop
mov
jae
or
push
xchg
cmp
fild
and
fnsave
pop
arpl
inc
pop
imul
test
dec
mov
mov
idiv
or
imul
inc
icebp
mov
lea
outs
pop
push
push
inc
repz
test
lock
inc
cs
fadd
xchg
shl
pop
jae
push
aam
lea
inc
mov
mov
les
push
loop
test
shr
fadd
push
stos
dec
pop
and
in
mov
add
loopne
mov
mov
mov
adc
mov
xchg
repz
mov
add
or
pop
iret
and
ret
sub
in
push
xor
add
data16
aas
inc
add
xor
sahf
fisub
push
xchg
and
enter
test
mov
hlt
idiv
mov
mov
add
mov
mov
(bad)
ja
movs
in
add
fbld
mov
mov
pop
dec
(bad)
adc
imul
inc
out
shl
sub
(bad)
lahf
fs
loope
xchg
shr
sbb
scas
in
push
lock
into
sub
jmp
sub
push
or
xchg
add
jae
dec
bnd
jle
pop
retf
sub
inc
repz
aas
push
dec
popf
xchg
loopne
sti
ja
(bad)
push
jecxz
sub
push
adc
jne
xchg
lock
xchg
mov
das
dec
xchg
call
test
push
call
call
jmp
(bad)
cs
outs
jmp
mov
in
adc
jl
xor
or
or
enter
movs
mov
lds
inc
loope
mov
mov
mov
cdq
mov
dec
nop
cs
(bad)
fisttp
jns
and
inc
movs
retf
adc
ret
pop
xor
int3
imul
scas
fwait
push
arpl
das
sub
xchg
mov
mov
pop
xor
fidiv
mov
stos
cmps
xchg
int
sub
xor
(bad)
in
mov
push
retf
sub
lahf
nop
outs
scas
jbe
cld
mov
cmps
in
sub
ja
push
push
repz
out
jl
mov
test
sub
mov
add
arpl
push
pop
add
adc
in
rcr
push
enter
mov
in
inc
push
nop
pop
addr16
sar
push
mov
sub
add
iret
(bad)
cmp
mov
cmp
add
ror
fidiv
lock
push
xchg
xor
adc
retf
out
jbe
das
push
ja
cmc
add
hlt
dec
xchg
ins
and
in
js
aad
adc
adc
jg
sar
(bad)
push
mov
test
sar
jne
jnp
sub
xchg
fcomi
cli
loopne
jns
popa
repnz
cs
jnp
and
push
or
(bad)
mov
adc
lock
popf
push
mov
add
add
jmp
aad
loop
xchg
mov
adc
pushf
aas
pop
retf
cld
fistp
in
movs
scas
(bad)
shl
sahf
repz
and
icebp
jp
mov
sub
fucomi
xchg
mov
adc
aam
out
or
test
pop
test
das
inc
retf
(bad)
mov
or
rol
push
retf
in
jle
std
adc
cdq
fbld
rcl
icebp
call
or
aas
ins
xor
and
mov
jle
inc
mov
fldcw
sbb
(bad)
jb
cmps
and
add
mov
jbe
jg
jmp
test
mov
jno
or
mov
push
mov
popa
shl
and
xlat
mov
mov
xor
popf
mov
std
inc
xchg
adc
mov
cmps
bound
adc
and
or
dec
mov
dec
fadd
or
sti
in
push
retf
add
(bad)
clc
sbb
inc
imul
fs
push
lahf
dec
fistp
sbb
jmp
jg
test
movs
cmps
in
ja
xchg
lea
test
mov
add
adc
sbb
cmp
in
push
mov
arpl
cld
pop
(bad)
gs
aas
lods
ins
mov
jl
in
jg
in
test
mov
adc
scas
sbb
mov
xchg
mov
mov
movs
xor
jge
xor
sbb
lds
cmp
fwait
mov
xchg
jg
xchg
xchg
pop
add
(bad)
stos
push
loopne
fbstp
std
cmp
jle
(bad)
ror
lss
(bad)
outs
mov
pop
ja
stos
in
cdq
push
inc
and
pop
mov
ins
jb
ins
pop
(bad)
jl
stc
bound
movs
mov
add
mov
inc
mov
sbb
add
int
push
arpl
lods
shl
fmul
pop
push
scas
retf
mov
fucomp
cmp
bound
jle
mov
fwait
dec
push
mov
loopne
arpl
mov
mov
mov
sub
push
adc
jae
fwait
jmp
jnp
ficom
jl
in
and
sub
pop
inc
lahf
arpl
xchg
xchg
iret
or
(bad)
das
retf
repnz
aad
not
fstp
es
out
jno
pop
jp
cdq
or
xchg
int
aad
fimul
clc
aad
sbb
or
push
mov
lock
cmp
icebp
in
dec
xchg
(bad)
sub
add
xor
push
mov
jo
ja
data16
scas
sub
cmp
(bad)
les
repz
(bad)
xchg
stos
pop
test
mov
xchg
int3
retf
rol
adc
inc
adc
nop
cs
cli
jg
sbb
popa
add
enter
push
and
sbb
mov
pop
inc
call
js
or
add
xchg
js
neg
gs
cmp
bound
sbb
push
repz
fmul
xchg
add
jb
mov
add
cmps
mov
into
inc
ror
dec
mov
mov
call
arpl
xchg
shr
push
mov
out
dec
adc
jmp
push
aaa
inc
cmp
mov
sub
mov
test
(bad)
or
xchg
sub
stos
and
jmp
push
jmp
mov
adc
fwait
retf
adc
test
sub
retf
fdivr
jae
dec
sbb
in
lods
mov
daa
pop
mov
sbb
dec
ss
dec
mov
inc
fidiv
jmp
xchg
mov
clc
push
and
jg
add
mov
cld
pop
rcl
mov
das
mov
mov
fsub
out
test
or
inc
xchg
push
add
cmp
ins
pop
aas
call
imul
idiv
jo
and
int
add
cmps
vhsubpd
push
out
shl
(bad)
mov
fsubr
sbb
mov
iret
fild
lea
shl
rcr
sbb
mov
(bad)
iret
or
out
xchg
in
sub
adc
xchg
nop
dec
aam
mov
fidiv
fisubr
std
push
cmp
lds
pop
ror
push
push
fdivr
sbb
fldenv
jne
aad
(bad)
ss
inc
sahf
add
pop
inc
cmp
dec
xchg
mov
pop
lds
pop
mov
ret
mov
sbb
dec
shl
call
xchg
(bad)
adc
pop
push
and
dec
adc
cmp
mul
es
pushf
leave
stc
sar
imul
mov
inc
and
jno
addr16
(bad)
ror
xchg
dec
push
add
xorps
dec
sar
add
add
(bad)
(bad)
adc
cmp
and
cmc
(bad)
and
test
cli
jmp
pusha
jge
ja
or
xchg
test
in
stos
gs
pusha
movs
popa
xchg
jae
mov
fcomi
push
ds
add
test
out
not
adc
mov
mov
xor
or
scas
mov
rcr
pushf
xlat
xchg
sbb
pop
test
inc
mov
enter
repnz
adc
adc
cmp
(bad)
cmp
push
add
lahf
iret
sbb
dec
lock
mov
mov
push
dec
arpl
mov
cdq
in
scas
inc
inc
stos
push
ss
ror
fstp
sbb
dec
jns
imul
lds
cmp
inc
aas
popf
xlat
and
mov
sub
jle
pusha
(bad)
or
cdq
and
and
test
fld
mov
push
push
pop
inc
outs
adc
mov
adc
inc
scas
sbb
imul
hlt
sbb
sub
out
aaa
sub
push
xor
inc
hlt
scas
test
mov
xchg
jo
or
or
sub
cmp
jns
sti
add
retf
cld
enter
leave
lea
shl
xor
inc
jne
or
mov
xchg
jns
xchg
sbb
bound
bound
retf
sbb
mov
ds
mov
jbe
xor
xchg
xchg
xor
dec
adc
outs
hlt
mov
push
sbb
push
pusha
pushf
mov
adc
lods
outs
leave
xlat
data16
movs
mov
mov
jecxz
mov
(bad)
out
and
ins
jae
cdq
lock
into
outs
aam
imul
pop
adc
sub
rcl
push
dec
push
adc
je
sub
or
inc
das
push
shl
out
jg
ret
movs
cli
scas
mov
cmp
daa
lahf
cdq
xchg
fisttp
adc
adc
or
pop
mov
retf
fcom
xor
xchg
lock
adc
leave
lods
cmps
inc
js
adc
cmps
addr16
shl
and
imul
xor
(bad)
mov
push
sar
sahf
sbb
(bad)
pop
test
rcl
or
je
pop
les
rcr
call
mov
outs
add
and
jnp
mov
mov
es
mov
pushf
(bad)
scas
ret
pop
in
fmulp
cdq
test
inc
push
dec
fmul
scas
jmp
add
test
pop
lods
mov
clc
jo
jns
loopne
mov
retf
rcl
outs
mov
xor
(bad)
loope
jns
dec
clc
mov
pop
pop
jno
pop
bound
retf
mov
lods
adc
jmp
outs
fisttp
imul
fisttp
call
test
repnz
inc
add
sbb
pusha
dec
pop
js
ss
out
push
cli
outs
daa
pop
and
jo
mov
cld
cmc
cmp
fimul
test
mov
retf
iret
test
inc
test
test
xor
cmp
push
inc
popf
xor
aam
cmps
add
mov
dec
lahf
dec
jmp
push
test
inc
fwait
jp
repz
jge
mov
or
mov
call
push
mov
xor
jne
call
and
jmp
sub
or
sub
call
sub
jae
arpl
xor
sbb
in
popf
sbb
aam
mov
pop
pushf
inc
fidiv
adc
sbb
mov
les
jge
sar
cdq
mov
or
and
idiv
shr
lea
adc
cmp
icebp
pop
addr16
es
ins
mov
push
inc
pusha
cmp
sub
xor
jo
movs
dec
mov
lds
jp
lds
cmp
repnz
sahf
sub
xor
cmp
hlt
shr
fsub
repnz
(bad)
rcr
sub
inc
pop
loope
jmp
popf
and
sub
push
add
std
mov
arpl
ds
rcr
lea
sub
movs
not
(bad)
jbe
dec
sub
jmp
(bad)
into
jge
loope
outs
sub
cmp
nop
sub
add
call
xor
popf
jmp
les
and
mov
jae
xor
push
scas
and
leave
pop
and
sbb
mov
mov
dec
stc
inc
cmc
mov
push
into
out
test
stc
sbb
jno
retf
fcmovu
mov
pusha
dec
lahf
ins
das
cmp
cdq
or
jb
nop
in
repz
je
cmp
xchg
mov
pop
sub
mov
(bad)
adc
into
mov
adc
xchg
push
push
adc
and
adc
jg
pop
daa
mov
sub
gs
out
jbe
pop
xchg
xchg
push
add
sbb
pop
add
shl
test
sub
and
cmc
xor
sar
cmp
inc
pop
push
mov
xor
cmp
nop
test
sub
inc
xor
dec
sahf
lea
movs
inc
(bad)
jl
std
or
scas
push
mov
ror
lahf
mov
and
dec
or
xchg
in
mov
aas
push
cmp
lods
call
scas
cmp
cmps
jmp
test
mov
mov
jb
and
loopne
scas
(bad)
(bad)
out
(bad)
in
clc
lds
lahf
std
xchg
push
mov
mov
mov
and
sub
push
movs
push
ror
ret
jmp
xchg
mov
ds
dec
or
push
sub
mov
xor
stos
push
test
mov
pop
xor
ret
mov
add
mov
mov
pusha
nop
or
mov
mov
or
fwait
pop
clc
mov
pop
xchg
mov
xchg
jl
ins
hlt
jmp
xor
dec
into
mov
jg
pop
popa
clc
and
xchg
dec
mov
jecxz
push
out
mov
and
fld
push
ret
inc
out
jmp
leave
popf
mov
xchg
pop
pop
mov
mov
xor
out
mov
or
das
xchg
pop
test
test
jp
popf
imul
mov
aaa
dec
jnp
mov
movs
pop
stos
(bad)
jmp
ror
imul
mov
xchg
inc
pop
xor
push
and
rcl
mov
cmp
fld
xor
dec
ins
add
sbb
arpl
jns
cwde
jmp
pop
neg
xchg
add
in
xchg
add
fidivr
and
movs
adc
xor
outs
cs
adc
inc
push
sbb
fild
fild
push
jge
pop
push
mov
xchg
in
(bad)
mov
inc
push
or
sub
fucomi
enter
les
xor
mov
movs
dec
or
rcr
(bad)
enter
cmp
popa
or
je
loopne
movs
js
xchg
cmps
jns
and
cli
test
hlt
add
enter
jno
dec
ins
aaa
xlat
mov
leave
sub
cmp
mov
cli
and
push
loope
out
je
adc
cmp
pusha
sub
cs
mov
outs
dec
and
call
cmps
sysenter
pop
dec
ja
adc
mov
mov
mov
dec
or
sbb
push
jbe
cmp
xor
or
(bad)
cmp
push
sbb
test
mov
pop
mov
rcr
mov
or
jb
and
mov
pop
dec
movs
cmp
out
mov
mul
fwait
inc
push
inc
xor
lahf
cmp
lea
xchg
mov
rep
sbb
mov
xor
adc
sub
mov
and
fcom
push
(bad)
xlat
in
and
dec
or
mov
ror
push
dec
mov
xchg
icebp
ss
popf
adc
xlat
repnz
inc
mov
xchg
jo
jmp
add
xor
jo
fist
xor
(bad)
in
out
fimul
sbb
data16
sbb
sub
(bad)
pop
in
cmp
add
mov
and
(bad)
das
scas
xchg
dec
scas
jg
dec
(bad)
jns
aad
xchg
mov
sahf
pop
std
sub
pop
daa
mov
ror
ss
fmul
push
xor
mov
xchg
push
or
ss
lock
rol
ss
scas
cmp
or
sub
hlt
dec
push
and
mov
xchg
iret
jge
sub
test
cs
pop
mov
push
push
cmp
in
inc
pop
or
(bad)
cmps
fadd
les
cmc
push
mov
jo
jb
das
adc
test
xor
fs
xlat
jmp
in
mov
shl
(bad)
mov
adc
inc
xor
jne
fwait
outs
mov
sub
cld
fstp
shl
(bad)
sub
sbb
cmp
cmc
sbb
cwde
mov
push
mov
mov
loop
ss
and
es
sub
and
dec
frstor
pop
pushf
adc
shl
mov
outs
dec
inc
out
and
scas
adc
xchg
adc
or
(bad)
fdivrp
mov
pop
ins
xchg
add
hlt
ss
sbb
retf
(bad)
(bad)
in
test
sub
mov
fcom
rcl
sti
sbb
push
test
cdq
mov
dec
fsubr
adc
cmp
jae
fs
and
popa
mov
sbb
sub
call
cmp
int
push
(bad)
mov
cs
fcmovnbe
cmp
fs
loope
(bad)
(bad)
movs
and
pop
mov
aad
jo
mov
xchg
and
clc
stos
xor
push
xor
and
setae
jp
or
xchg
ins
mov
movs
mov
ror
cmp
mov
les
cmp
push
cmc
or
xchg
xchg
adc
xchg
sbb
cmp
fxch
mov
add
test
dec
jbe
or
(bad)
clc
mov
sbb
xor
sub
cmp
leave
jge
mov
cmps
sub
je
nop
iret
inc
mov
test
fisub
shl
pop
inc
or
aaa
fwait
cmps
push
aas
sahf
fcom
or
div
pop
pop
int
call
jns
loopne
jmp
mov
stos
pop
pop
sbb
mov
aaa
out
test
xor
jb
cs
push
mov
mov
outs
out
xchg
(bad)
and
mov
adc
sub
mov
mov
inc
test
mov
rol
scas
dec
cmp
push
into
jle
lea
fwait
cmp
push
(bad)
sub
push
sub
xor
movs
inc
cmc
movs
mov
out
aas
and
sahf
and
cld
sub
iret
ds
enter
nop
imul
pop
out
inc
imul
cmc
add
xor
in
push
pop
ret
xchg
pop
xor
xchg
dec
cli
mov
out
xchg
ins
mov
retf
fst
mov
sbb
add
dec
fs
shl
ror
pop
jnp
ins
jmp
and
gs
sbb
ss
xor
cmp
push
or
mov
repnz
xor
sbb
xor
xor
int
xchg
outs
or
xlat
mov
and
int
mov
jg
mov
mov
jecxz
scas
fwait
mov
pop
xchg
fwait
pop
cmp
pop
push
fisub
test
mov
popf
and
pop
push
ffree
popf
cmp
div
stos
mov
loope
add
inc
test
xchg
mov
xchg
in
xor
lahf
cli
inc
jmp
(bad)
jb
or
mov
mov
pop
(bad)
iret
stc
jp
push
sbb
jl
out
dec
mov
aas
sub
jbe
enter
sub
pop
std
mov
dec
sbb
fsubr
leave
xchg
dec
arpl
test
das
imul
mov
sbb
mov
imul
cmc
push
sub
pop
retf
ss
and
add
pop
push
icebp
push
xchg
ror
jmp
(bad)
shl
cwde
vmread
inc
inc
sahf
movs
sbb
rcl
mov
gs
adc
ins
addr16
and
jp
inc
gs
mov
xchg
and
xchg
sbb
sbb
dec
lods
sub
jecxz
xor
mov
cdq
and
jb
jae
lahf
inc
jge
and
aaa
cmp
and
les
mov
sti
or
data16
push
hlt
fnstenv
in
sub
sub
add
and
mov
jmp
pop
shr
pop
gs
pop
xchg
adc
add
xor
jl
xor
jbe
cmps
jbe
imul
aaa
cld
lahf
(bad)
stos
dec
inc
cmps
cmc
shr
mov
fld
std
js
adc
imul
std
cli
sbb
mov
adc
pop
pop
mov
sar
mov
dec
sbb
and
jl
loopne
ficomp
jo
aas
push
outs
mov
arpl
je
iret
in
lea
fiadd
call
in
out
ficomp
mov
int
mov
retf
dec
(bad)
pop
fadd
arpl
mov
aas
cmp
fist
sub
out
mov
scas
sti
mov
arpl
enter
jnp
sbb
pop
cs
clc
push
arpl
jecxz
into
push
test
push
hlt
dec
xchg
loop
xchg
int3
addr16
fmul
or
push
retf
pop
push
mov
test
jg
(bad)
fistp
sti
fiadd
sub
or
dec
add
sub
inc
ja
sti
wrmsr
push
adc
test
xchg
add
leave
outs
lea
sar
loop
loope
add
and
push
add
scas
add
jg
cld
ret
mov
nop
and
push
repnz
scas
and
add
test
aad
fucomi
rcl
popa
mov
adc
in
out
pop
lock
mov
push
and
jecxz
int
and
lock
ins
xchg
not
ds
ror
lock
jnp
mov
or
pop
push
xor
xor
test
aas
add
mov
xor
inc
rcl
fild
xor
pop
xor
sti
dec
dec
(bad)
cli
jmp
aas
dec
and
xchg
cmp
mov
cs
fdiv
sahf
cmc
sbb
ins
dec
fwait
mov
and
outs
jp
and
mul
dec
hlt
push
pop
pushf
lds
dec
std
inc
out
sti
rcl
es
sub
cmp
cmps
stos
push
std
movs
fldcw
fnsave
jle
imul
lock
jne
mov
jg
jo
cwde
mov
cmps
add
lock
and
and
ror
jl
fldcw
jmp
push
je
mov
xlat
mov
add
frstor
mov
sbb
push
(bad)
enter
jecxz
dec
retf
fwait
scas
lods
adc
out
fst
aam
jge
pusha
mov
sbb
jno
ror
and
cmp
test
ror
mov
push
xchg
xor
pushf
mov
ret
and
xor
pop
mov
adc
mov
jmp
mov
dec
jp
xor
xchg
inc
in
xor
rcr
or
xor
out
test
test
into
jp
pop
cs
retf
imul
dec
fcmovnbe
stos
fistp
mov
sub
sbb
movs
ror
ret
push
inc
mov
jne
adc
sbb
int
addr16
outs
mov
popa
xchg
add
in
ret
retf
push
ficomp
pop
out
enter
jp
xchg
sahf
test
dec
pop
leave
lea
out
adc
xor
pushf
mov
out
imul
push
bnd
mov
cmc
push
aas
loopne
inc
mov
outs
jb
out
push
jle
sub
enter
ja
cmp
inc
cli
push
je
inc
pusha
jo
(bad)
out
cmp
and
sbb
int
adc
push
imul
jp
aam
or
sub
mov
and
ret
xor
ss
in
jmp
xchg
jl
dec
jecxz
push
mov
jo
ss
mov
lods
test
mov
xchg
adc
jp
cld
cmp
xor
and
mov
cmp
jmp
retf
rcr
aam
call
test
adc
jae
xchg
mov
scas
mov
sti
cmp
imul
bound
fld
repnz
mov
mov
pusha
out
ss
ror
ins
push
es
rcl
retf
aaa
fldcw
xor
repz
ins
sub
sbb
in
pop
or
push
(bad)
std
nop
pop
cmps
pmuludq
mov
dec
fwait
or
ret
and
inc
jle
add
in
fwait
test
jg
or
sbb
inc
ret
repnz
add
sbb
jo
popf
xchg
or
jo
or
inc
mov
retf
in
lahf
xrelease
ret
in
scas
cmc
cmovge
inc
pusha
mov
int
or
mov
std
outs
pusha
jb
cmp
repz
fwait
shr
jge
mov
and
mov
pop
adc
cmp
in
push
sub
lods
es
dec
push
(bad)
outs
(bad)
dec
jbe
and
aaa
loop
nop
ret
xor
pop
xchg
dec
gs
ret
call
mov
sub
lods
xchg
enter
mov
dec
sbb
(bad)
cmp
jge
inc
cs
mov
inc
and
xor
mov
dec
sub
nop
add
or
in
data16
inc
push
(bad)
outs
je
push
(bad)
(bad)
out
sub
movs
xchg
push
cmps
loop
cld
jnp
inc
dec
jmp
mov
(bad)
lds
mov
inc
or
dec
pop
lea
jmp
(bad)
movs
add
push
sbb
cwde
xchg
ja
jmp
sbb
les
(bad)
loope
daa
test
mov
push
xchg
pop
push
jno
aas
add
sub
xchg
pusha
fdivr
call
aas
lds
mov
add
xchg
div
or
fwait
cmp
(bad)
inc
ret
adc
adc
hlt
inc
xor
sahf
push
popf
dec
in
inc
pop
push
inc
pop
jne
add
jmp
out
and
jo
dec
jmp
mov
or
sub
pop
and
lods
cmp
or
shl
stos
lahf
bound
les
jg
xor
mov
rol
inc
into
aas
cwde
jbe
and
fist
mov
stc
mov
and
and
dec
mov
test
jae
pop
sahf
jmp
inc
clc
test
ds
add
daa
inc
in
fsub
push
clc
inc
(bad)
aas
lock
lahf
loop
pushf
sahf
sub
loopne
mov
fbstp
mov
pop
inc
loopne
xchg
out
(bad)
(bad)
cmp
scas
inc
sti
inc
jnp
push
push
adc
xchg
add
cmc
jge
xor
mov
retf
dec
(bad)
sub
into
mov
inc
neg
mov
lds
movs
pop
jl
fidiv
and
(bad)
jmp
es
pop
ret
or
cmp
scas
sbb
adc
and
mov
mov
mov
jb
imul
bound
xor
add
xor
js
frstor
mov
js
mov
pop
dec
je
call
inc
das
or
lods
pushf
dec
jbe
xor
sub
std
out
inc
dec
add
mov
add
ss
mov
sub
adc
sbb
ins
xchg
dec
jl
cld
hlt
jecxz
repnz
mov
in
mov
mov
outs
aad
aaa
cs
int3
mov
sbb
pop
dec
shr
jmp
mov
data16
jle
ds
cdq
and
inc
xchg
mov
ins
jmp
ret
call
int3
mov
push
or
inc
mov
mov
clc
shl
sub
inc
dec
cmp
fadd
cmp
scas
xor
jle
push
fdivrp
gs
cmp
scas
push
ins
je
mov
mov
inc
or
xor
loope
jg
and
or
mov
cld
inc
test
jnp
cmp
dec
mov
mov
adc
out
mov
xchg
or
xor
(bad)
in
ret
pop
inc
(bad)
xlat
push
(bad)
inc
jo
outs
icebp
iret
cs
pop
mov
pcmpeqw
lahf
not
test
push
lods
push
xchg
jno
icebp
mov
adc
mov
movs
or
push
cwde
es
fiadd
xchg
add
cs
xor
std
sub
shl
xor
cdq
(bad)
lock
cmp
fild
retw
sbb
dec
rcl
pop
add
cmp
lods
fldcw
mov
iret
dec
into
jge
add
push
or
int3
pop
jnp
into
inc
cli
nop
icebp
jno
lds
push
leave
sub
fucom
and
arpl
ficomp
sbb
sbb
frstor
(bad)
jle
fcmovu
popf
xchg
mov
arpl
test
loop
or
or
adc
arpl
or
mov
ret
cs
sbb
adc
adc
imul
imul
cli
aad
loop
inc
and
adc
add
sub
jp
mov
inc
sub
retf
dec
inc
pop
adc
adc
inc
jmp
jno
adc
fld
repnz
lods
lds
dec
push
mov
sub
dec
(bad)
mov
sub
sbb
mov
xchg
ins
sahf
out
movs
xchg
mov
ret
pop
push
inc
nop
fdivr
mul
inc
jl
pop
cmp
sbb
xchg
add
dec
je
pop
dec
arpl
ins
std
rcr
lahf
std
scas
ret
xchg
add
jne
xchg
xor
xlat
sbb
mov
mov
leave
inc
clc
ja
lods
sub
rol
shr
lods
push
add
cmps
ss
outs
movs
icebp
mov
jle
loop
cmc
jne
sbb
stos
adc
in
in
mov
aad
xchg
push
adc
xchg
pop
ret
xlat
in
xchg
cmp
mov
inc
out
add
shl
bound
add
cld
in
xchg
fimul
mov
mov
push
jne
retf
je
ds
jb
mov
(bad)
inc
mov
push
pop
pop
jecxz
mov
mov
movs
lods
jne
mov
or
cmp
xchg
sbb
outs
std
mov
add
inc
jge
out
bound
push
xor
xchg
pop
fisubr
mov
shl
push
xor
neg
(bad)
movs
lods
xor
inc
call
out
jne
cmp
in
or
test
inc
push
jno
(bad)
mov
sti
test
movs
mov
movs
repz
cwde
cmc
(bad)
clc
fist
add
or
retf
inc
dec
mov
mov
push
adc
scas
add
repnz
clc
mov
(bad)
mov
xchg
fiadd
das
ins
out
pop
por
and
cmp
mov
jmp
(bad)
aam
addr16
xor
mul
inc
sahf
retf
cld
mov
push
sub
and
jae
aas
into
mov
cmp
inc
fsubr
sub
lods
mov
jmp
mov
lds
shr
lods
push
cmps
call
inc
aas
xlat
jnp
std
or
out
jns
cmc
mov
and
mov
repz
jnp
aaa
inc
and
adc
xor
add
cmp
dec
push
das
fs
rol
retf
sub
(bad)
call
pop
into
jg
adc
push
ds
pop
int
push
sbb
movs
jg
test
mov
xchg
mov
ror
fsub
not
fstp
pop
and
fbstp
xor
call
mov
pop
sub
iret
cmp
out
add
lock
adc
outs
mov
popa
mov
xchg
inc
mov
sub
mov
mov
jg
inc
sub
ss
iret
mov
or
jb
pop
arpl
push
shl
adc
sub
fidivr
mov
bound
mov
xor
ret
mov
fnstenv
jno
dec
sbb
test
and
leave
jp
mov
outs
cmp
jge
mov
dec
cmp
sbb
pop
ins
test
cmp
pop
fadd
es
inc
xchg
jg
cld
int
and
pop
test
je
aam
mov
push
mov
pop
and
xor
rcl
adc
mov
test
adc
mov
retf
ins
xor
nop
xor
inc
ss
sub
dec
push
mov
cmps
jge
lock
pop
lods
jns
sbb
cmp
or
cmp
scas
sbb
mov
push
mov
stos
mov
lods
les
push
add
shr
ja
push
pop
and
div
and
stos
jns
pop
call
and
popf
(bad)
add
push
ja
je
or
push
push
or
cmp
xchg
popf
enter
jo
jp
fisub
into
xchg
rcl
sub
arpl
push
movs
mov
lods
popf
aam
je
(bad)
out
dec
aaa
aam
fmul
(bad)
sbb
mov
jns
xor
cmp
xchg
xchg
loopne
fnsave
nop
fcomip
(bad)
inc
enter
jge
or
(bad)
mov
retf
inc
xor
ins
sbb
popf
mov
or
jns
shr
mov
(bad)
rol
dec
inc
loope
pusha
cmp
mov
aad
jecxz
sub
pop
mov
jmp
mov
push
pop
sbb
scas
push
mov
xchg
inc
mov
rol
pop
sbb
xchg
push
mov
add
fbld
cmp
dec
in
fld
xor
test
pop
das
xor
adc
fsubr
xchg
mov
mov
inc
push
leave
sbb
inc
xchg
and
pop
pusha
rep
jmp
or
pop
xor
aad
shr
loop
bnd
push
sub
sbb
adc
out
mov
rcl
test
lods
rol
dec
fimul
out
cdq
data16
adc
daa
movs
pop
push
in
cmps
push
cmp
xor
jb
and
out
clc
pushf
fst
inc
repnz
cmp
in
loop
xor
stos
push
sbb
or
pop
into
xchg
pushf
pop
push
fcom
scas
xor
imul
mov
int
retf
inc
scas
mov
loop
jmp
in
and
test
add
sub
les
call
aas
ret
and
and
or
mov
push
int
mov
xor
mov
stos
push
inc
dec
int
sbb
pop
pop
out
xchg
loope
cmp
xlat
pop
push
(bad)
jbe
scas
in
or
lods
out
cmps
rcl
push
jp
xchg
push
sub
fstp
xor
(bad)
jmp
and
stos
xor
or
sub
ficom
jnp
mov
dec
jmp
pop
sub
cs
nop
repnz
sub
push
ror
dec
dec
frstor
inc
inc
sub
add
mov
add
cli
shr
mov
jmp
in
and
jge
add
lods
xchg
int
sub
push
and
test
xchg
push
cmovne
xchg
cmp
(bad)
cmp
fcmovnb
pop
cmp
cmp
add
ret
jle
mov
mov
ins
sbb
dec
mov
je
mov
(bad)
mov
add
or
movs
call
or
mov
ins
ins
xor
adc
sub
mov
ja
ds
mov
xchg
push
push
je
ss
mov
outs
or
jle
cmc
mov
pop
pop
pusha
sbb
jnp
outs
(bad)
ds
sti
pop
dec
push
jo
xchg
push
in
push
cmps
das
and
cmp
mov
adc
or
and
fiadd
cmp
and
jbe
inc
in
fild
pop
sub
clc
cmp
repz
jmp
(bad)
cli
mov
mov
stos
mov
repnz
mov
inc
cmp
outs
sbb
arpl
ss
push
scas
and
cmp
jne
and
xchg
cmps
mov
(bad)
popa
rol
mov
test
repz
pop
xchg
inc
push
sti
cmp
and
aad
push
repnz
fstp
push
mov
cmp
and
add
test
add
cmp
je
sbb
mov
pop
and
rol
jp
dec
dec
rcr
(bad)
sub
push
mov
jmp
jnp
shl
jne
inc
jg
mov
or
mov
int
in
in
fwait
je
stos
add
lahf
cmc
inc
je
scas
movs
dec
imul
outs
jmp
and
pop
inc
mov
(bad)
pop
xor
xor
inc
int3
popf
aam
inc
pushf
jne
dec
adc
aaa
out
cwde
fwait
mov
pop
icebp
or
nop
mov
leave
push
mov
sbb
sub
inc
dec
sbb
repz
into
jnp
cdq
fdiv
xor
loop
add
xor
(bad)
les
xor
sahf
jle
neg
sub
push
dec
ss
loop
cld
pop
repz
add
jnp
adc
out
or
and
or
jge
(bad)
out
xchg
inc
cld
xor
mov
dec
add
cmp
repz
dec
ret
fwait
pop
fldcw
adc
and
mov
pop
jae
jge
pop
xor
aad
out
fsubp
mov
cmps
add
gs
in
gs
pop
adc
pop
fst
xchg
sbb
das
imul
and
sbb
js
push
jno
mov
out
lods
push
mov
popf
js
jge
lods
ss
rcr
sbb
test
mov
adc
mov
pop
fild
enter
js
cmp
inc
addr16
inc
jge
inc
xor
clc
lock
sub
xchg
(bad)
jge
test
js
ss
mov
xlat
ss
(bad)
fstp
or
arpl
(bad)
push
cmps
push
ins
cdq
cmp
ret
jecxz
dec
or
and
test
leave
cmp
stc
adc
jmp
sub
jno
jae
cdq
in
sbb
dec
pop
jl
sub
jg
(bad)
bnd
lock
xor
imul
push
aam
clc
and
(bad)
sbb
pop
scas
(bad)
and
xlat
vpextrw
mov
and
int
push
push
scas
into
ds
mov
push
add
xchg
test
mov
push
enter
and
add
mov
xchg
(bad)
pop
sbb
adc
nop
fld
add
mov
sbb
mov
dec
add
out
gs
jmp
call
hlt
movs
sbb
jo
or
jmp
sbb
clc
dec
cmp
(bad)
and
pop
mov
mov
ror
shl
jae
ret
cld
test
push
inc
mov
call
icebp
mov
pop
inc
and
std
mov
mov
in
and
inc
rsqrtps
scas
shr
pushf
xchg
fisubr
cmp
sbb
adc
outs
dec
inc
add
mov
pop
and
sti
ins
outs
adc
xor
add
aas
dec
jge
lods
xor
push
dec
cmc
or
shr
(bad)
arpl
mov
int3
fs
mov
sahf
mov
ret
fisttp
cmp
retf
dec
add
aad
mov
mov
mov
cld
dec
push
les
mov
and
(bad)
mov
cmp
cdq
sbb
into
lds
cmps
ret
iret
imul
sbb
cmp
cmp
rcl
jg
aas
jmp
shr
lods
movs
mov
dec
mov
push
ret
jl
nop
push
lahf
daa
and
jbe
addr16
and
cmp
mov
inc
movs
and
ds
into
out
push
jno
jnp
push
push
mov
mov
mov
mov
add
je
push
call
test
(bad)
xchg
inc
cli
jb
adc
pop
xlat
xchg
xchg
jae
mov
xchg
add
scas
scas
inc
(bad)
mov
test
inc
sbb
add
xchg
or
in
scas
fcom
mov
mov
dec
clc
jg
and
jne
ror
inc
mov
sbb
call
sahf
mov
loopne
cld
inc
rol
xchg
adc
add
into
js
or
jns
mov
in
daa
pop
jmp
mov
mov
popf
retf
fsubr
mov
dec
fidiv
daa
(bad)
(bad)
adc
lock
bswap
cdq
xchg
addr16
out
ror
and
lods
jle
in
mov
jo
mov
pop
adc
jle
jp
mov
in
push
lahf
fild
daa
mov
cmc
mov
push
jno
movs
mov
pop
out
mov
jbe
sbb
jmp
stos
lds
test
adc
mov
push
mov
mov
adc
cwde
std
mov
std
(bad)
and
cmps
retf
sub
xor
cmc
gs
cmovb
xchg
sub
mov
fidiv
jecxz
sub
cs
retf
gs
fisttp
call
je
out
and
sti
dec
push
jge
add
push
sub
sub
mov
lds
add
into
and
ficomp
and
or
jmp
jmp
xor
dec
sbb
fwait
lahf
cmp
sar
mov
inc
add
sbb
ds
add
imul
lods
or
push
mov
loope
push
mul
aad
in
fadd
ja
and
sti
pusha
xor
mov
and
loopne
ss
popf
mov
xchg
loopne
push
jno
rcr
mov
shr
jl
loop
push
movs
test
std
inc
(bad)
aam
pop
out
ffree
xchg
push
lea
dec
cmp
popa
mov
inc
mov
mov
mov
push
xchg
jge
xchg
int3
xor
ret
cmp
les
outs
fild
inc
leave
out
pop
fimul
test
int3
mov
sub
push
jbe
push
pop
mov
pushf
mov
push
xor
arpl
(bad)
retf
xor
adc
push
retf
cmp
xor
mov
jmp
imul
shl
dec
or
stos
xchg
dec
out
js
inc
mov
pushf
jnp
or
cmp
in
jo
sub
inc
push
dec
fsubr
push
adc
int3
xor
mov
inc
push
addr16
rcr
cmc
sbb
pop
push
jno
mov
dec
sub
shr
or
sbb
mov
inc
push
ss
cmp
(bad)
cmp
dec
add
fs
sbb
inc
adc
dec
shr
jmp
dec
sub
frstor
and
call
rol
dec
xchg
aam
sbb
test
push
call
push
je
jb
stos
fscale
sbb
add
pop
mov
push
hlt
add
jo
ins
aad
mov
and
dec
pop
push
loop
push
or
push
outs
test
sbb
mov
mov
(bad)
and
addr16
add
pop
popa
js
mov
inc
lahf
and
xchg
adc
sub
jns
pop
jbe
cmp
push
cli
inc
test
and
xor
jmp
mov
test
loop
mov
test
out
mov
mov
outs
push
push
inc
lods
aaa
mov
dec
pop
inc
add
lock
adc
push
mov
imul
sbb
sti
rcr
cmps
cmp
leave
daa
jae
mov
push
mov
loop
in
cmc
lahf
pop
or
leave
imul
and
mov
cmc
xchg
dec
(bad)
mov
fadd
mov
fstp
jmp
imul
arpl
dec
lea
out
mov
je
push
(bad)
dec
out
lods
inc
stos
mov
mov
push
in
mov
pop
pushf
adc
pop
(bad)
call
cmps
jl
pop
sub
(bad)
sub
push
mov
call
or
sbb
and
fucomp
and
cdq
stc
cmps
xchg
ficom
fmul
mov
ret
pushf
scas
lahf
inc
jmp
push
stc
or
adc
or
ret
(bad)
inc
sub
mov
pop
or
push
fistp
dec
adc
test
jo
push
dec
arpl
lock
mov
mov
xchg
stc
mov
or
cmp
xor
or
int
(bad)
lahf
retf
cmps
add
jnp
inc
scas
or
std
das
jg
dec
jo
mov
test
in
jmp
rol
scas
(bad)
sbb
inc
pop
xor
in
mov
fstp
gs
cdq
ins
xchg
lds
adc
add
push
cmp
je
(bad)
mov
in
inc
aas
neg
addr16
pop
je
shr
push
xchg
jmp
sub
or
fimul
mov
pop
pop
and
inc
push
icebp
cmps
call
push
sub
jo
sahf
call
and
mov
not
cli
test
push
scas
sahf
lock
sub
push
jecxz
mov
retf
dec
inc
test
call
out
iret
stos
cli
popf
jle
lods
add
(bad)
jnp
jg
xor
mov
mov
and
sti
(bad)
or
aam
mov
mov
adc
pushf
test
loopne
xchg
adc
jl
outs
in
inc
xlat
pop
inc
inc
push
lods
jne
pop
je
or
xor
nop
cmp
ins
sub
lods
ds
pop
push
mov
push
mov
shr
adc
cs
and
and
dec
dec
icebp
xchg
dec
push
jp
dec
sbb
inc
push
dec
lea
pop
or
cmps
movs
out
je
mov
mov
in
mov
in
int3
mov
inc
add
jp
dec
sub
call
cmp
fcmovbe
mov
cmp
pop
pop
cmps
and
sbb
push
add
mov
add
mov
je
dec
sbb
and
xor
pop
dec
pop
xor
mov
or
das
stc
daa
and
lahf
and
pop
fimul
fs
mov
(bad)
je
cdq
inc
jg
popf
or
or
or
xchg
pop
rcl
ret
add
xor
add
aas
adc
adc
and
into
cmps
jns
sub
out
pop
repz
loopne
jg
add
and
sbb
into
inc
repz
sbb
and
xchg
xor
aad
sbb
leave
adc
push
and
mov
mov
leave
clc
xchg
sbb
into
or
hlt
js
je
aad
mov
mov
aas
fist
add
stos
mov
pop
jp
cmp
enter
es
jne
jno
arpl
rol
add
jbe
mov
adc
pop
cmp
stos
xchg
test
stos
adc
out
aaa
(bad)
movs
sbb
adc
test
mov
inc
inc
pop
test
and
sub
adc
outs
jg
shl
or
int3
cmp
and
dec
std
ds
imul
adc
xor
int3
fwait
cmp
mov
gs
repz
inc
mov
shl
enter
xor
sub
pop
fsubr
mov
in
aad
(bad)
stc
test
test
pop
call
ins
push
repz
mov
addr16
jecxz
jp
fcomi
test
sub
jb
and
push
inc
cmc
push
ret
xlat
push
data16
dec
aad
cmp
shr
mov
mov
retf
inc
xor
stc
aam
inc
and
dec
xchg
lds
mov
ret
sahf
xchg
popf
add
outs
popf
mov
ror
ret
or
in
sub
arpl
jle
(bad)
mov
pop
xor
inc
jb
cmps
ja
pop
push
mov
or
dec
xor
es
cmp
cmp
inc
xchg
or
inc
sti
xchg
xor
or
ds
sub
fidiv
pushf
and
(bad)
lods
fnstsw
mov
xchg
fldenv
add
sar
inc
jl
or
xchg
sbb
stos
out
mov
enter
(bad)
loop
retf
sbb
fimul
pop
pop
cmp
adc
add
fcmovbe
fidiv
std
imul
xor
inc
add
sbb
aaa
popf
ds
leave
mov
pop
das
add
ja
je
add
ja
pop
xchg
pop
push
adc
js
mov
mov
adc
scas
push
retf
pop
lds
pop
mov
sti
sti
push
inc
data16
mov
xchg
xor
aaa
repnz
jle
xlat
repz
iret
sahf
mov
and
sar
dec
iret
loope
fs
adc
mov
xor
or
push
in
inc
xlat
gs
xchg
call
push
cmp
mov
adc
call
mov
aas
(bad)
jno
push
mov
ret
jl
(bad)
xchg
push
stos
inc
dec
ror
xor
cmps
add
add
mov
lahf
stos
xor
sub
jb
mov
pop
cli
sub
mov
pusha
xchg
jno
mov
pusha
sub
jl
jno
push
dec
fsub
add
xchg
ss
and
push
adc
sbb
sub
mov
rol
not
push
icebp
xchg
idiv
dec
aas
pop
std
mov
xchg
jo
dec
in
mov
imul
jmp
xchg
fld
inc
mov
mov
and
outs
mov
repnz
ja
mov
lahf
mov
add
mov
mov
inc
push
dec
enter
push
sahf
and
call
xchg
xor
and
jns
jmp
mov
mov
cwde
or
mov
dec
jecxz
jg
mov
sub
lds
sub
std
inc
xchg
iret
call
mov
mov
push
xchg
jge
sub
movs
xchg
xor
push
pop
jae
mov
mov
jmp
loope
std
stc
pop
push
das
js
scas
pop
out
or
sbb
dec
sub
fdivr
jne
scas
xchg
dec
jp
pop
sar
inc
fidiv
in
outs
(bad)
hlt
mov
pop
int
ja
adc
adc
and
pusha
adc
shl
loope
add
adc
movs
or
push
sub
lds
jmp
mov
add
cdq
jmp
fs
jecxz
enter
mov
sti
pop
xor
mov
cmp
push
nop
iret
movs
inc
scas
xchg
push
xchg
in
arpl
ror
outs
jae
mov
js
aaa
ds
push
leave
jae
add
outs
mov
aad
cmp
out
xchg
jnp
sub
xor
fisubr
imul
nop
ret
mov
xchg
jne
out
pop
test
dec
(bad)
popf
sub
sub
push
push
jb
daa
cdq
jle
aad
shr
lock
pop
ds
pop
cwde
xchg
fnstsw
imul
push
lods
in
xchg
and
mov
mov
adc
push
sti
cmc
xor
pop
gs
outs
mov
jp
cli
mov
test
aaa
lods
mov
in
xchg
arpl
(bad)
outs
inc
test
pop
fwait
push
lock
push
iret
adc
mov
sbb
imul
mov
dec
into
sar
stos
imul
mov
pop
xchg
jl
jmp
mov
push
imul
mov
cmc
adc
and
sub
div
aaa
sbb
adc
xlat
cld
cld
fcomp
xchg
fnstcw
add
sbb
pop
jnp
adc
xchg
ja
outs
adc
sbb
inc
dec
(bad)
nop
xchg
inc
aam
es
leave
or
xlat
out
add
inc
xlat
lea
jmp
mov
push
jb
dec
sti
aas
mov
sub
outs
test
leave
inc
adc
ds
adc
pop
xor
jg
add
out
das
cli
pop
jb
mov
add
inc
or
sbb
xor
pop
xchg
pop
lock
jmp
sahf
ficom
(bad)
jnp
stos
adc
outs
cmp
cdq
lahf
cmp
retf
jg
pop
mov
cli
sub
ret
inc
xchg
clc
and
stos
fwait
jo
cmps
sbb
imul
out
mov
jae
and
enter
rcr
sub
inc
stc
cmp
xchg
mov
ret
fisubr
ds
(bad)
pop
shl
xor
daa
cmp
fidivr
xor
sub
cmp
jns
daa
dec
adc
xchg
into
jecxz
pop
lahf
pushf
pop
jp
out
ret
aaa
push
idiv
and
retf
pop
fadd
add
jns
retf
pop
mov
std
js
cmp
mov
neg
sar
sbb
mov
add
or
aad
push
aam
js
sbb
out
jns
xchg
outs
fsubr
gs
mov
lahf
mov
add
das
mov
mov
mov
inc
in
(bad)
jb
fimul
mov
or
je
push
call
pop
popa
sbb
pop
or
xor
leave
cli
mov
sbb
or
sar
mov
sub
fisttp
neg
int
loopne
mov
rcr
lahf
mov
test
fs
xchg
fiadd
xor
xlat
mov
or
adc
jmp
and
pop
sub
push
push
fimul
add
scas
icebp
test
mov
retf
das
bound
aas
push
sub
aas
xchg
jo
cmp
int
inc
mov
imul
in
cmp
adc
lock
jg
or
sub
mov
pop
jl
fst
sbb
nop
cld
out
outs
or
or
pusha
inc
xchg
das
lods
jg
in
mov
dec
fidivr
or
imul
mov
jge
or
push
in
(bad)
mov
int3
(bad)
jne
imul
push
stos
add
xchg
cld
test
mov
mov
clc
inc
mov
das
or
clc
push
jecxz
es
je
jle
jp
repnz
inc
outs
lds
cmp
push
adc
and
adc
xor
mov
inc
push
push
fld
leave
dec
inc
mov
sub
loopne
mov
mov
test
pop
jnp
mov
pop
sbb
popf
lea
adc
push
dec
retf
(bad)
mov
in
xchg
push
repz
fs
push
cli
cdq
pop
jb
(bad)
stos
xor
cmp
add
mov
push
leave
inc
lahf
jb
mov
retf
mov
stos
mov
jecxz
es
dec
push
in
fcmove
xchg
call
out
and
sub
adc
rcr
daa
add
jae
cmps
inc
adc
and
sbb
jmp
sar
push
ret
sar
inc
aam
pushf
cmp
pop
push
jb
add
sbb
push
movs
loop
mov
dec
sub
add
jecxz
cmps
imul
cmovno
sahf
inc
push
sbb
push
mov
in
outs
int3
jne
test
addr16
push
xor
lahf
dec
cs
ret
ins
mov
je
push
add
sti
into
add
mov
scas
push
and
mov
push
clc
aam
xchg
retf
arpl
(bad)
repnz
jl
mov
or
sub
pop
or
dec
adc
loop
push
dec
ror
sub
mov
inc
and
sahf
push
imul
sub
mov
aas
adc
inc
std
xchg
cmp
adc
fs
rcr
fmul
call
and
add
neg
dec
jecxz
xchg
aaa
inc
mulps
retf
xor
mov
call
dec
hlt
push
fcmovne
sub
mov
(bad)
in
std
out
push
pushw
dec
sub
arpl
jle
cmp
hlt
into
push
jg
movs
push
gs
inc
push
mov
mov
or
dec
push
mov
or
inc
add
pushf
and
dec
pop
in
sar
adc
cmp
pop
(bad)
test
jmp
call
cs
cmp
fnstsw
mov
and
pop
xchg
retf
imul
add
(bad)
cli
retf
in
and
sbb
nop
call
xor
xchg
dec
inc
mov
jno
dec
sar
hlt
in
mov
push
movs
aaa
add
xor
mov
pop
pop
lock
imul
mov
retf
mov
iret
cmp
mov
xor
ja
shl
dec
add
sub
popa
push
sub
mov
sahf
pop
jmp
mov
imul
hlt
push
xor
mov
jmp
sub
pusha
cmp
aam
cmc
mov
mov
(bad)
jbe
jne
adc
inc
(bad)
mov
leave
pop
cmp
pop
les
add
and
xchg
xchg
add
pop
and
xchg
jp
test
cmp
mov
adc
in
xchg
rcr
jbe
xchg
cmp
push
inc
xchg
pop
push
loope
mov
xchg
(bad)
and
inc
(bad)
or
push
push
push
xchg
cmp
push
ret
jle
inc
int
cmp
sub
mov
nop
push
jbe
adc
out
mov
imul
mov
adc
jns
cli
mov
sbb
pop
loope
and
das
inc
fsub
lea
cmp
loopne
das
push
add
ret
js
inc
push
xchg
ins
ins
cld
stc
add
fisub
add
test
(bad)
inc
and
mov
les
mov
push
sbb
enter
push
pop
mov
test
pop
lods
sub
iret
cld
xchg
fwait
(bad)
mov
ss
cld
jne
pop
xchg
xlat
loop
aam
in
and
cmp
pmuludq
retf
ins
pusha
push
mov
push
pusha
aad
and
adc
cmc
pop
mov
pop
sahf
or
loope
in
mov
les
dec
lea
jo
jne
into
std
xchg
out
pusha
pop
push
xchg
test
test
jns
popf
mov
mov
pusha
mov
jp
and
mov
mov
mov
das
xchg
jb
jp
lea
loope
sbb
fsub
fisttp
ror
js
stos
add
(bad)
out
mov
scas
ins
cmp
dec
js
xor
xchg
mov
jnp
dec
pop
cmc
cld
push
jo
jecxz
stos
or
(bad)
in
cmp
dec
int3
repnz
pop
jns
outs
ss
pop
cld
cmp
pop
inc
cmc
mov
inc
ins
adc
mov
out
adc
and
mov
jl
inc
adc
sbb
stos
js
jp
leave
rcl
push
cli
hlt
fimul
mov
jmp
xor
fmul
repnz
fmul
fisttp
pop
aad
lea
mov
or
pop
fstp
ret
mov
mov
aaa
das
fadd
jp
pop
fisubr
test
rcr
mov
sar
jmp
jecxz
mov
test
jae
int
lahf
ds
or
aam
sbb
dec
je
out
addr16
fs
iret
push
(bad)
jge
ret
sub
mov
jo
xor
test
xchg
dec
ins
mov
dec
mov
dec
fdivr
xor
pop
cmp
or
xor
loopne
mov
pop
push
test
sub
enter
sbb
jae
or
or
hlt
rol
scas
(bad)
push
or
imul
push
push
and
adc
int3
loopne
inc
(bad)
xor
icebp
aas
adc
dec
movs
or
push
jp
shr
icebp
ja
das
or
cld
mov
push
xchg
or
leave
clc
lods
fiadd
jmp
test
ss
fisttp
sti
push
mov
jmp
aaa
inc
inc
cmp
cdq
mov
out
in
imul
arpl
mov
push
and
jmp
adc
ins
hlt
aad
test
ret
rcl
adc
pop
jnp
sbb
ficom
cmp
xchg
rcr
and
jnp
jecxz
inc
jne
or
jp
mov
sar
repnz
push
stos
push
xchg
adc
inc
fstp
mov
mov
cmp
or
cmp
sbb
cld
int3
mov
inc
fcmovnb
xor
popf
adc
mov
xor
push
aaa
cmp
ret
sbb
xor
or
xor
xchg
shl
mov
fist
or
fld
mov
push
mov
cmps
stos
repz
and
and
dec
mov
mov
adc
les
into
pop
imul
jmp
mov
test
into
xor
sbb
js
shl
mov
movs
pop
clc
call
mov
and
push
xor
sub
push
fstp
push
mov
cmp
sti
jae
sub
ja
retf
out
cmp
mov
push
sbb
test
cli
leave
jno
cmp
mov
repnz
mov
and
mov
push
popw
cwde
cmps
ja
inc
mov
popf
dec
cmp
into
xor
stos
sub
xchg
in
lahf
js
cmp
ss
cmp
div
icebp
add
out
(bad)
jne
mov
dec
inc
lahf
sbb
push
int
pop
mov
mov
xchg
or
outs
cmc
dec
outs
lods
pop
jge
lods
and
adc
ffreep
retf
nop
ficom
or
mov
and
jg
jno
in
pushf
ja
mov
test
cmp
leave
inc
cmps
or
and
xlat
loop
mov
sbb
lds
push
xchg
pushf
out
xchg
push
mov
inc
jecxz
je
and
or
sub
pop
xchg
mov
out
pusha
cld
mov
stc
popa
and
rcl
mov
lds
inc
(bad)
(bad)
aad
or
push
enter
test
cwde
mov
sub
into
enter
stos
jmp
loop
neg
mov
fiadd
(bad)
xchg
mov
mov
sti
ror
out
test
lea
xchg
mov
or
mov
push
fstp
test
jbe
pop
mov
shl
imul
jbe
stos
out
push
or
inc
in
cmps
adc
ret
mov
ret
not
jp
std
mov
fwait
das
(bad)
fst
loope
xor
mov
push
(bad)
mov
pop
add
mov
xor
fsubp
dec
push
cmp
jecxz
fisub
inc
ret
cwde
and
rcl
dec
hlt
lock
imul
shl
xor
inc
ins
sub
lock
fs
add
mov
daa
dec
jmp
dec
sub
rcr
pop
dec
dec
test
imul
dec
mov
fnsave
or
xchg
jne
enter
xchg
mov
cmp
inc
cmps
or
sbb
dec
out
jnp
sub
mov
std
push
push
pop
xor
push
add
mov
mov
sbb
push
mov
jbe
je
and
jbe
aad
mov
sub
sub
xor
push
inc
sahf
push
aaa
add
in
mov
ss
inc
mov
push
stos
mov
push
inc
sub
popa
adc
and
cli
cmc
sar
call
fdiv
cmp
ficomp
fnstsw
fdiv
lods
dec
cmp
push
inc
in
aas
inc
or
xor
cwde
bound
mov
and
and
punpckhdq
sar
mov
dec
xchg
xchg
sti
push
mov
fld
push
jbe
mov
stos
cmp
jmp
mov
sub
leave
inc
inc
enter
xlat
cmps
ds
push
adc
popf
mov
inc
xchg
xchg
jge
je
xchg
(bad)
lods
enter
mov
cli
test
mov
jp
sbb
es
or
mov
in
pop
inc
add
pop
adc
mov
mov
xor
call
out
movs
lea
or
and
sub
outs
cld
cmp
jo
sub
test
bound
test
mov
inc
int
push
dec
int3
jb
outs
sahf
xchg
mov
fistp
les
aaa
mov
pop
fild
call
aam
sub
and
loopne
cmc
jp
sbb
xchg
cmps
jno
sbb
or
jp
jnp
cs
mov
mov
cmc
les
sub
push
loope
pop
or
push
xchg
push
call
pop
sbb
xchg
dec
and
cmc
dec
pop
sbb
push
jo
out
std
add
jne
sahf
inc
lods
stos
dec
mov
jmp
mov
lahf
dec
retf
repz
in
adc
addr16
sbb
or
pop
aaa
and
sub
outs
pushf
out
clc
inc
and
test
mov
cmp
nop
je
sbb
jbe
loopne
xlat
mov
cmps
sar
push
jge
out
fcmovnu
inc
mov
jns
lock
add
sub
stc
test
cld
xor
sub
sub
fsubp
mov
adc
adc
or
adc
mov
test
xchg
adc
or
fiadd
adc
and
and
cwde
sub
mov
aam
imul
movs
int3
(bad)
and
(bad)
mov
push
loop
and
or
pop
cdq
loop
mov
mov
pusha
repz
popa
es
js
and
mov
xor
lods
xor
mov
xor
ja
cmps
mov
xchg
stc
rol
ins
aad
loope
loope
dec
call
pop
test
cmps
outs
fist
xor
mov
mov
repnz
sub
mov
rep
sahf
dec
out
popa
push
push
adc
mov
test
add
jl
shr
je
gs
xchg
pop
icebp
(bad)
nop
dec
lahf
cmp
lea
rol
push
repz
lods
pop
push
sub
rep
stos
inc
adc
call
pop
push
sbb
popa
xor
ds
call
cmp
adc
ss
xor
mov
out
mov
push
push
add
and
(bad)
push
cwde
mov
cmps
test
lahf
jb
add
lods
shl
xlat
pop
lods
rcr
shl
xchg
sub
mov
sub
push
popf
lods
xlat
aas
sbb
retf
or
out
mov
lock
(bad)
sub
std
sbb
or
in
test
sub
push
xchg
push
aam
fisub
repz
jp
inc
fst
std
add
jmp
add
add
jno
bound
out
pop
jo
pop
gs
push
jle
fist
movs
cwde
add
xor
cld
mov
cmp
pusha
jo
mov
xchg
arpl
sub
mov
retf
inc
mov
call
add
add
jle
(bad)
push
cmp
mov
hlt
bound
jge
jnp
mov
xor
scas
pop
or
mov
pop
popa
pop
ins
jo
add
or
inc
inc
dec
push
xor
xchg
data16
adc
call
fmul
cdq
xor
dec
push
in
(bad)
ja
xchg
fcmove
jp
sbb
test
gs
jnp
jle
scas
xchg
jg
adc
xlat
lock
pop
jecxz
and
out
adc
test
cli
in
aaa
cwde
arpl
data16
sbb
xchg
lahf
in
or
push
add
imul
inc
push
dec
pushf
xchg
and
pop
fcomip
out
or
sbb
mov
je
iret
cdq
rcr
lods
pop
out
xor
xchg
or
adc
fwait
enterw
inc
xchg
(bad)
(bad)
lods
or
imul
mov
push
dec
ss
or
mov
in
fcomp
inc
xchg
xchg
sbb
cmps
sub
inc
ja
gs
add
dec
(bad)
cld
ins
retf
cmp
mov
repz
imul
push
cmp
sbb
sbb
mov
in
dec
call
daa
jg
or
pop
xchg
cmp
jne
add
mov
jo
std
push
shl
and
jne
iret
sbb
or
and
(bad)
push
outs
jo
mov
mov
loopne
enter
cmps
fadd
mov
pop
call
dec
and
jmp
mov
jmp
xor
jno
jle
xchg
dec
mov
dec
pop
push
jbe
das
ja
jae
ret
ror
movs
aam
loope
or
mov
xchg
mov
inc
sti
xchg
int3
jnp
jnp
ja
xchg
std
or
jle
inc
pusha
ret
push
dec
inc
dec
inc
jmp
pop
push
enter
dec
xlat
fcomi
mov
push
not
mov
(bad)
scas
jnp
cli
xor
jl
mov
push
cmp
xor
and
into
ret
(bad)
xlat
xchg
nop
(bad)
xchg
xlat
sub
pop
aad
(bad)
push
cmp
add
jo
fld
pushf
addr16
cmps
or
mov
mov
mov
push
mov
ret
mov
mov
pop
ss
clc
idiv
cmp
lea
sbb
rcl
call
dec
push
ss
sub
hlt
mov
push
mov
mov
add
cmc
mov
fadd
adc
push
mov
pushf
into
cdq
retf
or
mov
and
mov
pop
fbstp
daa
sub
aaa
nop
movlps
sub
out
sbb
into
or
ret
(bad)
retf
inc
xchg
fadd
bound
cli
fcom
push
dec
es
lea
ret
or
rcl
inc
test
xchg
sub
call
imul
xchg
cmc
sti
add
mov
hlt
lods
push
out
mov
mov
pop
cs
rol
dec
call
syscall
mov
jg
sbb
adc
popf
loope
sub
xor
shl
fs
dec
cmp
push
es
aad
aad
mov
xchg
xor
mov
test
pop
outs
or
(bad)
retf
enter
jg
dec
jno
ret
add
das
mov
jbe
ret
add
cdq
ficom
inc
in
cs
mov
add
lods
jae
popa
or
xchg
clc
hlt
shl
adc
fimul
popf
inc
fmul
loopne
xor
sbb
addr16
mov
pop
cmp
data16
std
mov
lea
or
mov
ror
rcr
sub
in
imul
(bad)
adc
aam
jnp
xchg
fcomp
(bad)
aad
mov
ror
jb
mov
mov
pusha
inc
xchg
int3
push
fchs
mov
pop
xchg
jmp
fcomp
lea
mov
aas
push
cld
push
mov
mov
add
push
popa
lods
push
rep
xchg
cmc
and
xchg
jmp
inc
jne
fcmovbe
rcl
cdq
sub
int3
outs
ficom
sub
ins
mov
addr16
out
cmp
push
mov
xchg
dec
je
ins
and
or
aas
mov
mov
pop
test
mov
xchg
sbb
push
cmp
dec
inc
out
es
fmul
mov
dec
push
jmp
push
dec
and
and
jmp
lea
xlat
cli
push
(bad)
sbb
(bad)
and
stc
jmp
test
push
dec
add
mov
retf
movs
test
inc
xchg
mov
mov
dec
rcl
mov
mov
sub
mov
aad
(bad)
mov
les
test
fld
lods
int3
xchg
add
cmp
xchg
adc
inc
test
hlt
xchg
ss
outs
cmp
pop
test
jg
iret
push
sub
xor
fcmovne
or
test
call
(bad)
(bad)
jg
ret
push
mov
fild
sbb
mov
lock
jecxz
push
add
push
ss
push
rol
push
outs
sub
and
mov
mov
data16
call
xor
imul
jle
dec
in
mov
mov
imul
sub
int
mov
lods
nop
jb
cmp
jne
cmp
pop
sar
dec
and
pop
scas
adc
imul
xchg
xor
jge
hlt
stos
push
or
inc
arpl
pop
and
lods
cwde
mov
mov
scas
dec
loope
lea
mov
cmps
mov
out
sub
movs
test
add
lds
adc
sbb
sbb
mov
stos
pop
loope
shl
cmp
sbb
stc
cmc
inc
and
mov
scas
mov
xchg
dec
in
loope
cmp
mov
aam
ins
and
add
xchg
cmp
lock
adc
xor
imul
sub
inc
xor
mov
movs
push
test
jno
mov
call
adc
push
das
dec
push
pop
or
aam
mov
sbb
(bad)
mov
jmp
es
xor
adc
mov
arpl
push
add
sahf
or
xchg
shr
mov
outs
out
dec
ficomp
cmp
mov
jp
imul
xchg
mov
add
sti
ror
mov
cmp
ins
loop
jge
mov
or
stc
mov
mov
xchg
stos
xor
popf
sbb
jno
inc
or
mov
pop
imul
fcom
daa
jo
push
inc
adc
xchg
iret
push
leave
ins
mov
add
(bad)
pop
out
je
cwde
repz
jae
jle
or
xchg
test
mov
fisub
dec
jmp
ja
(bad)
jmp
arpl
ins
xchg
repz
test
mov
fstp
mov
cdq
inc
lock
daa
mov
in
int3
adc
and
bound
adc
lods
retf
add
in
or
xchg
inc
jmp
(bad)
push
jb
add
aam
jno
sub
inc
sbb
add
aaa
shl
xchg
cwde
adc
xor
imul
test
call
inc
mov
jecxz
scas
imul
adc
and
daa
adc
hlt
cli
push
out
out
and
sub
jbe
lea
std
mov
or
jl
lea
jmp
out
fistp
call
sti
aam
pop
(bad)
into
jne
jmp
fiadd
dec
mov
loop
fwait
mov
add
je
ficomp
adc
cmp
je
xor
ins
push
nop
jmp
mov
cwde
mov
stos
jns
imul
jo
inc
push
adc
mov
enter
dec
or
dec
adc
repnz
enter
xchg
data16
cli
retf
psllq
mov
data16
mov
sub
repz
cmc
cmp
fild
push
fistp
mov
mov
mov
out
loop
mov
xchg
pusha
or
rcl
mov
or
sbb
lods
push
or
sbb
fist
mov
xor
enter
aad
sbb
fwait
add
sub
push
test
and
jbe
sbb
je
gs
inc
pop
int3
out
jb
sbb
sub
and
fild
jl
or
xchg
dec
add
fs
in
cmps
rcr
imul
aad
pop
pop
dec
ja
jmp
ds
out
mov
fstp
lods
mov
daa
in
adc
add
xchg
dec
mov
loope
aaa
stos
movs
leave
or
call
repz
call
ror
dec
retf
fcmove
pop
(bad)
rcr
mov
or
sub
test
xor
mov
lods
aam
sbb
movs
lods
mov
test
dec
imul
and
cs
cmps
dec
cmp
mov
sub
js
xchg
or
(bad)
jmp
mov
lods
or
mov
or
inc
push
into
(bad)
lea
jb
push
mov
mov
adc
mov
cli
adc
xchg
and
out
add
loop
popf
jg
jl
out
mov
cmp
add
fs
adc
sbb
int3
shl
add
add
fist
mov
xchg
in
daa
outs
aaa
lods
leave
ja
loop
cmp
add
rol
push
leave
cmp
iret
clc
sub
jnp
and
fisttp
out
test
push
jne
int3
cmp
push
fdiv
in
adc
ja
(bad)
jecxz
jecxz
sbb
pop
cmp
push
in
cwde
dec
test
in
stc
pop
xor
sub
mov
xor
pop
push
(bad)
cmp
sub
and
push
jg
cmps
xchg
cwde
and
pop
mov
frstor
loope
xchg
xchg
sub
jge
push
mov
lods
mov
addr16
push
je
lods
aas
cs
stos
(bad)
fimul
cdq
cld
enter
sub
rcr
jne
sbb
jne
or
ret
aam
cmp
jecxz
out
xchg
icebp
and
and
inc
adc
aas
cmp
std
cwde
stos
pop
fdivr
mov
int3
mov
jl
adc
xor
aam
jbe
hlt
pop
and
pushw
add
mov
xor
movs
xchg
jne
dec
adc
retf
js
sub
lds
jecxz
mov
mov
fucomi
mov
and
fsubr
ror
pushf
inc
lea
ja
push
pop
aam
scas
call
or
sbb
rcl
je
jb
in
in
loop
aaa
mov
nop
cdq
mov
dec
aas
sub
imul
shr
push
rol
jge
pop
in
daa
ja
leave
icebp
int3
cmc
rcl
mov
jle
cmp
inc
pushf
mov
dec
out
mov
mov
mov
repnz
loop
adc
mov
std
sahf
lods
add
mov
dec
xor
pop
jl
jb
in
xchg
cmp
cmp
jbe
pop
enter
mov
xor
out
cmp
jl
jg
in
add
inc
scas
test
inc
call
shl
mov
loopne
dec
les
pop
call
ss
addr16
das
sub
jo
aas
scas
add
and
cmp
adc
sbb
pop
rcr
sub
add
mov
rol
imul
lds
and
mov
bound
or
lods
xchg
pop
aad
and
dec
or
(bad)
(bad)
sbb
addr16
or
lods
pop
xchg
inc
popf
and
lahf
out
mov
ss
push
sub
not
jg
(bad)
(bad)
call
popa
icebp
lahf
nop
data16
mov
data16
jne
addr16
mov
aas
out
cmp
sub
inc
cwde
jns
jo
jne
pop
popa
ror
enter
rol
ins
cmp
xor
call
ficomp
or
cmp
dec
jmp
jl
outs
arpl
loope
push
icebp
add
xor
sbb
imul
cmps
movs
add
fmul
(bad)
mov
stos
enter
scas
pop
and
leave
cmp
sti
dec
movs
and
or
bound
or
in
and
ins
add
ja
enter
movs
inc
jno
stos
out
push
xchg
loope
gs
scas
mov
ret
in
dec
shr
jle
pop
bound
mov
xor
daa
mov
pop
or
stos
jmp
pop
shl
fsub
aad
push
jo
ins
fucom
lods
and
add
mov
pop
mov
les
outs
adc
movs
mov
shl
(bad)
aad
mov
ret
retf
jle
(bad)
jne
adc
(bad)
cld
pushf
mov
pusha
pop
add
sbb
cmp
das
pop
nop
fmul
test
xlat
aaa
ds
retf
mov
fild
(bad)
cmp
aad
aad
jbe
sbb
mov
mov
dec
and
xchg
mov
lahf
popa
or
in
inc
mov
movs
mov
xchg
pop
das
xchg
pop
popa
push
ja
call
repnz
loope
es
pop
jo
imul
dec
out
mov
adc
dec
mov
arpl
hlt
cmp
inc
mov
inc
pop
mov
fwait
inc
jecxz
out
dec
mov
inc
ret
dec
fcomp
xor
imul
jmp
push
mov
mov
mov
inc
dec
dec
sub
fidiv
sub
fnstsw
sti
fucom
mov
movs
pop
jp
cmp
sub
or
(bad)
push
(bad)
aam
inc
inc
and
mov
call
(bad)
test
dec
xor
and
push
xchg
fstp
push
cli
mov
shl
xor
out
(bad)
fisttp
pop
and
dec
ss
xor
mov
cld
ja
or
sub
jl
and
rcl
je
scas
adc
cmc
xchg
data16
aam
in
or
cs
les
popf
mov
mov
xor
imul
ja
ja
dec
rol
or
mov
mov
sbb
jmp
ror
xor
adc
and
xor
cmp
or
pop
sbb
repz
loope
jbe
cdq
push
lock
inc
sub
add
div
pop
jmp
je
ret
ins
movs
mov
or
pop
push
xchg
mov
pop
cwde
test
and
jge
rcr
imul
xchg
clc
jno
lds
dec
addr16
repnz
sub
js
nop
int
popa
push
xchg
test
ins
pop
mov
hlt
inc
loop
xor
and
mov
or
mov
add
add
cwde
int3
mov
xchg
std
fisub
jo
shl
cdq
inc
cmp
mov
leave
jno
loopne
retf
jne
ffree
call
movs
mov
mov
loope
pop
xor
in
dec
fiadd
mov
sar
lods
cmp
lods
(bad)
ja
add
pop
jp
cmp
cdq
push
sub
adc
and
xchg
inc
mov
in
mov
scas
repz
call
rcr
or
lock
fstp
push
fistp
test
stos
sbb
pop
sub
jo
jnp
lock
pop
sub
test
jno
pop
push
add
inc
(bad)
lock
mov
in
arpl
inc
adc
lock
mov
dec
xor
shr
cmp
sbb
icebp
pushf
adc
loope
inc
dec
jle
adc
in
and
aas
leave
mov
aad
loope
mov
xchg
pop
push
stos
das
mov
inc
sub
retf
push
or
retf
sbb
mov
inc
pop
xchg
iret
fadd
jecxz
jne
into
(bad)
push
ror
mov
mov
xor
loop
jne
inc
gs
leave
test
int
into
(bad)
rcr
xchg
and
cmp
jmp
je
in
ins
jg
outs
inc
pop
je
ret
sub
cld
arpl
push
dec
push
jnp
push
cli
paddq
rcr
(bad)
fdivr
test
pop
adc
jno
sbb
lock
jmp
cld
pusha
idiv
xchg
sub
gs
pop
clc
lds
int3
add
mov
dec
hlt
push
push
stos
sub
cld
jae
ret
lods
cmp
push
lods
cmp
mov
dec
pop
mov
popa
cmp
js
and
inc
sub
sti
push
push
(bad)
sti
cmc
loop
shl
nop
arpl
mov
or
jmp
adc
push
mov
pushf
jecxz
add
or
dec
pop
jg
adc
sub
outs
scas
ret
(bad)
ins
out
lock
add
or
add
jmp
and
daa
in
in
xlat
ss
mov
inc
cmp
adc
fst
sar
imul
stos
mov
add
sahf
cmps
pusha
mul
jmp
cmp
jle
push
dec
push
sub
arpl
xchg
push
repnz
sub
lods
pop
and
mov
adc
push
push
adc
pop
inc
mov
in
rol
stc
sahf
shr
mov
xor
sub
inc
adc
mov
(bad)
hlt
sahf
jg
(bad)
mov
jnp
fld
cmp
mov
push
fnstcw
cld
xor
mov
jmp
push
inc
adc
(bad)
and
dec
je
jl
xchg
pop
rcl
push
inc
jb
dec
jge
sti
or
xchg
or
sti
lahf
dec
loop
sbb
rcr
or
movs
pop
mov
mov
add
ret
jmp
daa
inc
vmovss
lods
push
jno
fld
fld
ret
js
mov
push
mov
or
xchg
mov
sub
in
cmc
icebp
dec
mul
loop
nop
popa
jmp
dec
scas
xchg
mov
(bad)
cmp
xor
add
dec
inc
fs
fisttp
test
inc
leave
sub
inc
mov
mov
push
or
jge
add
pop
mov
adc
aaa
jb
test
add
jmp
std
jmp
sbb
jne
pop
rcr
or
cld
popf
and
inc
bound
pop
xor
js
or
or
lock
inc
sbb
add
ins
mov
mov
je
aaa
add
sub
jle
jecxz
xchg
add
jno
call
loopne
xchg
ss
mov
inc
mov
pop
(bad)
mov
out
mov
in
and
call
js
pushf
gs
dec
(bad)
adc
jl
repz
push
enter
push
shl
sub
mov
mov
clc
stos
pusha
xor
mov
adc
cdq
mov
icebp
out
cmp
in
shl
and
iret
lea
pop
ss
push
pop
push
xor
jno
ficom
mov
and
leave
mov
dec
icebp
adc
(bad)
dec
xor
push
cmps
jmp
push
push
test
push
les
sbb
mov
push
jp
sub
aam
cmp
push
inc
jge
mov
rcl
mov
scas
das
jle
out
push
mov
mov
ins
pop
mov
ror
ja
ins
icebp
(bad)
push
in
xor
(bad)
cld
pop
dec
fld
int3
lds
icebp
neg
test
push
inc
xor
aaa
jno
mov
pop
hlt
mul
and
in
test
push
mov
adc
xchg
add
(bad)
mov
jno
push
pop
clc
loopne
popa
mov
xchg
ins
xlat
aas
hlt
in
mov
jecxz
(bad)
arpl
adc
jecxz
push
add
cld
in
xlat
(bad)
fldpi
push
push
sbb
or
cmp
jle
inc
leave
ins
xor
xchg
pushf
iret
sahf
das
js
hlt
sbb
(bad)
mov
mov
hlt
movs
sbb
push
and
loopne
or
pusha
test
outs
jnp
xlat
cmp
adc
arpl
test
mov
test
push
sahf
jns
dec
jbe
jl
xor
xchg
out
jnp
repz
add
call
push
sub
hlt
add
loopne
cmc
ror
cmps
xlat
xlat
movs
xor
loopne
je
pop
pop
sub
out
pop
out
mov
push
jns
push
(bad)
jbe
jg
sub
cmps
mov
pop
mov
lods
add
or
(bad)
jnp
mov
push
rcl
pop
xchg
push
popf
add
test
cs
mov
cmps
and
mov
loope
push
retf
mov
xchg
test
xlat
dec
leave
ds
dec
sbb
push
call
pop
mov
fild
int
pop
popa
mov
fldenv
(bad)
cmps
in
pop
pop
ins
xchg
(bad)
xchg
aad
ins
cli
push
push
xchg
pop
sbb
pop
and
inc
int3
cs
mov
adc
cmp
pushf
add
sbb
sahf
xor
jecxz
mov
shl
repz
in
fcmovb
dec
nop
mov
out
repnz
imul
sbb
inc
jle
cmp
das
stc
daa
and
cmp
leave
lods
sbb
rol
push
lea
in
in
(bad)
(bad)
cs
shr
xchg
std
add
pop
xor
pop
mov
xchg
fwait
mov
and
aas
stc
icebp
(bad)
jle
les
mov
ds
sub
pop
test
lea
inc
and
mov
or
mov
(bad)
int
jecxz
pop
pop
test
imul
jmp
nop
xchg
pop
push
outs
push
push
xlat
mov
mov
xchg
rcr
jb
imul
dec
int3
les
out
stos
and
add
arpl
and
rcl
push
sub
xchg
rcr
sub
ja
jle
iret
mov
adc
mov
push
jo
scas
popf
stos
pop
mov
jmp
call
mov
mov
mov
mov
jmp
fbld
aas
xchg
inc
mov
gs
jl
xor
call
outs
jns
bound
imul
add
mov
cmp
jmp
cmp
popa
(bad)
pop
sub
sbb
add
leave
data16
and
(bad)
jno
jnp
daa
jae
fld
cmp
inc
sahf
leave
(bad)
(bad)
mov
jo
xor
ds
add
pusha
pop
mov
ins
movs
jb
sahf
lods
mov
adc
mov
xchg
push
add
(bad)
mov
push
jg
mov
add
pop
dec
(bad)
jno
outs
mov
pop
sti
dec
and
or
not
ror
scas
movs
add
push
jmp
xor
jl
ret
cli
mov
sub
leave
aam
aas
repnz
push
sub
movs
(bad)
mov
fst
jecxz
jle
sub
dec
stos
adc
sub
lea
shr
psubd
in
jbe
xchg
fstp
retf
(bad)
aaa
mov
hlt
pop
adc
dec
sub
inc
cmp
cmp
and
mov
cmps
stos
xor
add
adc
mov
adc
dec
and
outs
rcl
jl
dec
adc
mov
pop
dec
mov
shl
nop
inc
inc
fwait
into
(bad)
mov
adc
adc
ja
int3
pop
dec
dec
(bad)
rcr
in
fwait
in
or
xor
cmp
and
and
xor
in
shl
dec
xor
mov
aad
jecxz
cmc
fwait
icebp
sbb
add
fstp
jbe
pop
mov
retf
mov
jge
ret
inc
and
sub
xor
pop
inc
pop
mov
addr16
xor
push
call
les
int
jb
or
sbb
mov
test
call
push
or
sbb
(bad)
xchg
xchg
dec
xchg
or
sbb
push
mov
cmps
mov
es
mov
sub
push
pop
mov
sub
adc
jp
pop
cmp
repz
mov
xchg
(bad)
inc
or
retf
cli
push
fstp
cmp
cli
clc
call
in
dec
cmovl
adc
mov
jg
add
mov
add
lock
push
clc
mov
shl
add
or
daa
mov
or
mov
ret
retf
and
cmp
pop
inc
push
stos
xor
mov
cmps
dec
repz
push
hlt
in
ret
fisub
cmp
mov
jae
dec
jge
imul
cli
ret
inc
pop
test
inc
call
rcr
pushf
fimul
nop
in
outs
xchg
pop
retf
lods
imul
add
imul
jae
in
bound
sbb
aaa
fs
adc
arpl
mov
dec
jnp
xlat
out
cmps
dec
das
mov
sbb
mov
mov
mov
xor
repz
mov
cdq
push
jae
inc
(bad)
leave
sbb
(bad)
xchg
sbb
cmps
leave
ds
xor
rol
cli
jbe
ins
sub
and
or
jg
sub
ror
push
push
jmp
dec
sbb
fiadd
and
icebp
div
mov
push
pop
in
dec
xchg
mul
lods
mov
test
test
bound
imul
lods
pushf
fwait
jnp
mov
jno
bound
mov
xchg
sahf
xor
cdq
mov
cmps
sub
mov
mov
test
push
gs
shl
or
adc
cli
sbb
add
in
xor
std
sar
popa
mov
mov
inc
es
sti
or
or
push
aas
loopne
push
inc
adc
dec
fild
push
std
inc
sti
and
and
sbb
loopne
sti
push
and
sbb
inc
sbb
cdq
pop
cmp
ins
pop
mov
mov
xor
dec
daa
jmp
xor
fisubr
popa
mov
and
pop
jg
iret
push
inc
push
fisttp
loop
pop
ins
hlt
sete
sti
cli
scas
gs
sahf
outs
std
in
push
jne
lods
leave
les
pop
dec
dec
pop
dec
push
pop
sbb
cmp
add
dec
fsub
cmp
test
ret
xor
xlat
jae
cmp
inc
sub
push
cdq
jl
dec
pop
imul
jg
(bad)
add
dec
sbb
in
add
inc
test
out
cmp
mov
stos
pop
cmc
pop
adc
pop
dec
or
loop
hlt
xor
mov
inc
xchg
movs
cld
cli
dec
ficom
sub
test
shl
mov
fstp
ror
(bad)
fwait
xor
adc
clc
in
mov
jno
inc
test
movs
les
jmp
aaa
cmps
or
in
div
fadd
add
cmp
cdq
retf
dec
aas
stos
inc
jmp
das
jmp
out
cmc
pop
xchg
(bad)
mov
fs
cs
fsub
loopne
popa
iret
pop
repnz
and
imul
scas
sub
es
ja
add
outs
aas
bound
fisub
fild
(bad)
cmps
stos
fsub
std
fimul
loope
jno
mov
call
mov
stos
jo
push
inc
por
or
les
sbb
je
sub
jb
mov
jb
das
das
sahf
jmp
push
push
mov
push
in
cmp
inc
or
repz
mov
pop
sahf
xchg
mov
cmps
dec
push
lahf
xchg
loope
xchg
xor
adc
xchg
dec
pop
mov
add
add
std
arpl
aam
pop
xchg
jae
jnp
dec
mov
pop
fiadd
pop
out
cmp
imul
inc
ror
shr
inc
sub
fisub
cwde
ror
add
adc
adc
sbb
push
cld
cmp
mov
add
in
mov
cmp
mov
mov
shr
fsubp
out
lods
mov
adc
out
in
cli
pushf
sub
pushf
or
lods
push
fild
lock
mov
sub
mov
inc
xlat
sbb
retf
dec
adc
cmps
bound
aam
xchg
add
ds
lds
cld
sbb
fdivr
outs
ins
sub
cmc
pop
inc
daa
enter
aad
div
fidiv
jl
sub
lds
pop
cld
add
test
inc
cmp
push
adc
fldenv
fcmovnb
mov
inc
int
mov
push
xchg
outs
aad
sbb
sub
dec
dec
out
xor
and
(bad)
pop
ficomp
aaa
outs
clc
sub
scas
outs
pop
les
and
or
xchg
lods
loope
push
es
call
jmp
mov
jp
retf
movs
gs
mov
xchg
fbstp
int
adc
inc
icebp
mov
test
mov
or
inc
daa
ins
xlat
jno
jns
daa
cdq
jmp
call
push
xchg
xor
xchg
(bad)
or
xchg
and
xor
call
mov
dec
cld
(bad)
mov
shl
les
mov
stos
jb
sub
or
arpl
cmp
(bad)
cmp
pusha
fwait
mov
in
ins
js
nop
es
dec
mov
dec
push
ret
outs
hlt
xchg
lods
(bad)
pop
cmp
movntps
jg
cmp
xor
aaa
mov
push
lods
mov
jbe
jo
repnz
jle
rcr
ds
enter
pop
out
(bad)
iret
sbb
js
in
shr
mov
(bad)
popf
xchg
mov
xchg
xchg
dec
jge
push
std
ins
aad
ret
inc
push
test
mov
div
push
push
fisttp
scas
adc
jns
jno
and
clc
adc
or
xchg
dec
jmp
repnz
cmp
sbb
cmp
cli
cmps
call
adc
sub
repz
xor
mov
int3
fdivr
sub
mov
pop
(bad)
lods
in
and
fs
jg
xchg
mov
cmp
ja
lea
xor
cli
jmp
je
pop
ds
retf
stos
mov
inc
mov
fwait
js
sbb
mov
mov
call
stos
std
push
nop
cwde
add
fwait
ins
rcr
loope
shl
aaa
cmp
mov
(bad)
cld
jb
jmp
js
cmp
inc
sub
inc
nop
push
push
add
lods
xchg
imul
jo
fnstsw
pop
scas
jb
jbe
adc
inc
push
sbb
in
into
shl
adc
fmul
mov
or
loope
cmc
imul
adc
xchg
add
data16
outs
dec
sbb
sbb
dec
stos
addr16
cmp
mov
in
push
inc
rol
popa
sar
cmp
push
data16
in
(bad)
inc
mov
inc
ficom
addr16
loope
adc
scas
pop
pop
mov
mov
push
leave
sti
dec
xchg
bound
int3
xchg
mov
mov
mov
out
ja
mov
loop
dec
sahf
popa
frstor
dec
loopne
std
push
add
stos
cmps
ret
imul
out
sti
push
jne
bound
icebp
sbb
out
sbb
addr16
or
daa
stos
adc
retf
es
or
add
or
gs
adc
push
push
in
out
cs
inc
jle
test
je
cld
or
cmp
and
(bad)
ficom
dec
sbb
or
(bad)
cmp
adc
dec
xor
arpl
jne
jecxz
jnp
(bad)
lock
(bad)
jmp
jne
stc
and
ret
pop
cli
jb
push
popa
mov
push
(bad)
mov
jecxz
push
mov
fwait
push
mov
lea
gs
cmp
fsub
pop
rol
rcl
xlat
mov
mov
out
test
iret
and
and
cmps
imul
push
lods
fs
ja
sbb
push
push
scas
out
mov
jne
jb
nop
imul
pop
retf
push
mov
add
mov
mov
cmp
test
cmp
add
pop
and
pop
push
out
and
sub
and
sbb
cmc
and
inc
mov
and
das
mov
and
and
mov
(bad)
cmc
fistp
pop
add
(bad)
inc
mov
sub
je
es
arpl
clc
mov
and
outs
std
or
mov
adc
push
sub
sahf
dec
and
jnp
adc
push
xor
pop
xor
push
jnp
mov
lods
mov
loope
mov
pop
push
fsubrp
inc
int3
mov
ins
aas
or
lds
rcl
dec
jecxz
ss
ror
jnp
cli
shr
mov
pop
pop
test
xlat
sahf
icebp
mov
imul
addr16
xchg
call
mov
jbe
pop
in
push
mov
or
test
movs
stos
sub
inc
imul
add
stos
fimul
cld
je
fcom
ins
loopne
jnp
pusha
jl
loop
push
pop
and
(bad)
jmp
(bad)
jp
push
adc
dec
and
cmp
and
ret
shl
rol
dec
outs
imul
pushf
mov
pushf
sbb
daa
dec
mov
mov
sub
scas
or
adc
arpl
jecxz
loop
fistp
aad
jno
dec
mov
mov
adc
ret
cmp
out
stos
lea
jmp
add
gs
push
cmp
int
add
jo
jecxz
out
popa
pop
pushf
nop
xor
jae
xchg
xchg
fmul
mov
push
dec
mov
mov
push
or
stos
inc
loope
jge
and
out
ror
pop
inc
adc
mov
pusha
cmps
mov
outs
jg
dec
adc
xchg
mov
aad
pop
push
stos
ret
jb
pop
mov
sub
(bad)
std
fwait
sbb
sub
xchg
or
daa
inc
jmp
das
(bad)
cmps
pusha
sub
das
sti
icebp
jnp
stc
and
sbb
sub
mov
gs
(bad)
test
mov
pop
sub
and
push
cs
xchg
fidivr
(bad)
jmp
push
cwde
mov
mov
int
pop
in
cmp
or
adc
jne
sahf
pop
push
data16
or
sar
(bad)
icebp
loop
std
xchg
fidiv
lock
hlt
jl
call
jmp
stos
ss
ss
mov
fsub
inc
aaa
pop
sub
cmp
repnz
popf
cmp
daa
xchg
or
aad
mov
ja
lods
jbe
inc
sub
daa
lods
push
(bad)
sbb
or
es
inc
dec
arpl
and
jge
or
ret
shl
or
cmp
xchg
adc
sbb
pop
sub
imul
jb
pushf
cmp
cmp
pop
mov
jno
aaa
mov
stc
rol
and
add
ja
test
mov
jo
push
xchg
je
shl
lods
xor
pop
icebp
sbb
pop
cmp
div
gs
fcomp
cmp
mov
out
cmp
sub
jns
push
bound
inc
cdq
cwde
(bad)
sbb
nop
lods
adc
mov
dec
sbb
pop
ss
in
cs
xchg
add
cmc
repnz
retf
xchg
ret
arpl
and
fstp
mov
jl
cmps
cld
adc
mov
inc
inc
rol
xor
pop
push
jg
popa
xchg
mov
cmp
mov
xchg
fwait
(bad)
std
or
push
test
sub
jae
retf
in
push
adc
scas
in
xor
out
imul
pushf
dec
pop
sar
dec
or
xchg
cmps
sub
aad
pop
outs
inc
push
scas
and
out
mov
mov
sub
cmp
jae
xor
xchg
scas
adc
jnp
ja
aaa
cld
test
push
test
into
push
push
cmps
stc
xchg
ins
sub
push
sbb
aad
mov
xchg
mov
fisubr
fwait
retf
int
jmp
sbb
pop
inc
inc
mov
add
rcl
stc
add
mov
out
inc
jnp
mov
out
xor
shl
repz
cmp
push
pop
inc
rcr
xchg
xchg
mov
das
push
repz
jne
js
jb
add
mov
inc
retf
inc
dec
pusha
pop
(bad)
(bad)
push
sahf
mov
js
aad
rcr
stos
cs
cmc
xor
and
out
daa
add
mov
sbb
repnz
pusha
lods
std
pop
push
add
sub
inc
int3
mov
xchg
aam
adc
cmp
test
or
cmp
lds
dec
cmc
xchg
dec
mov
push
xchg
test
pop
sar
clc
fadd
mov
gs
xchg
mov
push
xor
pop
imul
loop
or
push
ins
inc
xchg
mov
arpl
out
in
jg
inc
into
sub
(bad)
jecxz
cmp
es
jl
jae
and
bound
adc
pop
cli
or
pop
mov
outs
mov
add
test
jp
shr
(bad)
jle
ror
data16
push
inc
mov
int3
mov
push
add
inc
mov
pop
jo
rcl
cmp
aas
cmp
iret
add
pmuludq
pop
retf
(bad)
test
pop
mul
jns
out
and
mov
sub
lds
(bad)
sub
pusha
arpl
xor
cdq
mov
jge
jecxz
adc
cwde
icebp
lock
pop
mov
js
hlt
and
inc
mov
mov
xchg
add
(bad)
xor
fisubr
(bad)
and
push
(bad)
fistp
xor
ror
mov
jecxz
add
mov
pop
adc
ss
add
sbb
or
or
sub
loop
pop
inc
(bad)
aad
jbe
jle
jg
outs
xchg
es
add
arpl
mov
mov
adc
dec
std
idiv
rcr
xchg
xor
hlt
xor
test
je
das
sbb
cmc
mov
loopne
lds
and
shl
pop
and
dec
and
out
inc
shl
movs
add
fcomp
mov
or
in
and
test
dec
arpl
loopne
sbb
mov
call
stos
sahf
xor
mov
sahf
ins
test
test
and
pushf
(bad)
scas
push
scas
fdivr
int
mov
(bad)
fbstp
arpl
sub
popa
(bad)
jmp
sar
push
pop
test
mov
sub
imul
push
imul
mov
pop
pop
xor
jg
std
loopne
ins
sub
std
and
pop
pop
test
cmp
pop
pushf
xchg
mov
fisttp
fisttp
nop
sbb
inc
or
jge
leave
fld
int3
xor
xchg
xchg
dec
inc
loope
pop
push
fcom
shl
pop
xchg
loopne
fstp
cmc
inc
xchg
(bad)
nop
mov
mov
aam
lock
outs
mov
stos
mov
inc
jne
sbb
jmp
cli
cld
push
ins
cmp
les
cmps
mov
jle
and
gs
dec
sbb
mov
imul
mov
cli
popf
or
lock
or
pop
mov
aam
jecxz
adc
hlt
inc
inc
mov
gs
stc
push
adc
xor
pop
push
mov
mov
xchg
fadd
ror
(bad)
lods
pop
call
pop
mov
pop
shr
inc
xor
lds
push
outs
adc
retf
xchg
setl
icebp
sub
jp
loope
mov
cmp
cmp
xchg
push
arpl
jb
mov
xor
xor
bound
aad
icebp
stos
in
leave
popf
or
push
rol
pop
into
in
repnz
cmp
mov
ss
fdivr
ins
sbb
and
div
mov
pop
in
inc
loope
or
cdq
pop
fstp
and
aas
aad
jl
(bad)
les
pop
out
lahf
jecxz
stos
(bad)
mov
lahf
arpl
lods
stc
mov
cdq
fwait
js
xor
add
mov
dec
mov
xor
jmp
popf
pop
adc
mov
scas
aas
and
or
in
loope
bound
and
fwait
mov
and
lea
les
sahf
xlat
stos
xchg
push
mov
mov
dec
dec
push
daa
and
ror
rcl
jbe
cmps
out
and
mov
cmp
into
cmp
and
cli
xor
inc
sbb
test
xor
repz
lahf
xchg
xlat
sub
ss
add
ss
sti
pop
mov
sub
inc
fs
gs
fwait
add
stos
and
adc
inc
imul
jns
xor
mov
push
xor
cmc
stos
(bad)
lock
mov
rcl
mov
or
in
add
retf
test
fwait
or
mov
sbb
bound
sahf
ja
jne
jb
jmp
jns
jl
mov
inc
sti
inc
into
pop
imul
mov
jge
shr
mov
(bad)
sti
shl
or
call
push
add
out
jle
xor
mov
loope
fs
hlt
mov
cld
rol
mov
cmp
sub
pop
cmp
arpl
lahf
dec
cmp
pop
pop
enter
inc
sub
rol
enter
(bad)
cld
mov
lock
cmp
sar
les
(bad)
mov
js
cmp
pop
dec
cld
xchg
cwde
mov
jns
fbld
xchg
mov
mov
int
pop
jae
pop
jmp
ja
cmp
sbb
push
pop
dec
dec
nop
mov
pop
(bad)
mov
test
outs
test
push
and
add
jle
xchg
daa
pop
test
lock
mov
pop
or
shl
jmp
ret
jl
cmp
mov
inc
push
jne
aas
(bad)
sub
or
jge
pop
jp
pusha
pusha
or
inc
ss
ja
sbb
mov
rcr
leave
out
inc
cmp
cli
inc
mov
fisttp
jne
push
inc
push
das
xor
pop
sahf
mov
lock
pop
mov
dec
xor
(bad)
mov
imul
adc
stc
int3
std
sbb
and
adc
daa
cmp
inc
add
(bad)
push
in
repz
sub
cmps
hlt
mov
(bad)
adc
cmps
stos
xor
push
adc
inc
sbb
fst
pop
push
fadd
jns
mov
mov
into
cld
sub
cmp
fwait
data16
jae
cmp
push
cmp
jmp
jle
push
cmp
jno
stos
loop
xchg
dec
(bad)
cld
or
stos
jg
add
and
or
call
fbstp
(bad)
xor
les
sub
pop
aad
daa
push
popf
pop
fcmove
cli
mov
cdq
mov
xchg
lods
jnp
inc
mov
xchg
sub
jb
xchg
ja
jo
and
xchg
lock
xchg
dec
clc
shl
inc
aaa
fld
mov
aaa
in
pop
mov
xchg
rcl
aam
icebp
test
aad
(bad)
jmp
lock
nop
arpl
(bad)
and
or
ret
ja
in
cld
in
nop
stos
xchg
fmul
or
imul
mov
lahf
cwde
stc
hlt
fstp
outs
cld
ins
aad
jo
ja
adc
aad
push
out
sbb
xchg
mov
clc
(bad)
cmp
jno
ffree
jl
lahf
sub
jne
out
adc
outs
dec
shr
fldcw
out
xor
pop
xor
movs
fist
mov
or
xchg
adc
sbb
pop
xchg
pusha
int
pop
scas
push
dec
adc
jecxz
xchg
mov
xchg
dec
ins
push
mov
ror
inc
rcl
jns
xchg
add
and
(bad)
in
outs
ficom
scas
retf
dec
pop
or
jmp
cmc
sbb
movs
adc
lock
pop
fsub
pop
cmp
jl
sahf
sub
xchg
movs
neg
mov
adc
jo
out
xchg
inc
xchg
jle
sub
mov
in
xor
pusha
pusha
cmp
adc
inc
clc
rcr
jl
shl
mov
sahf
imul
shl
and
arpl
xor
xchg
pop
sub
xor
pop
mov
jl
daa
jb
adc
sub
lea
mov
add
mov
dec
or
jle
in
gs
es
icebp
jmp
push
xor
cmp
cli
bound
xchg
pop
mov
xor
mov
mov
test
push
jge
pop
adc
xor
mov
and
mov
xor
mov
inc
lods
std
or
dec
sub
addr16
push
imul
sub
and
sub
add
jmp
inc
repz
std
pop
mov
inc
movs
pop
movs
and
(bad)
xor
and
shr
imul
(bad)
fidiv
lds
lea
test
out
outs
rcl
rcl
push
mov
jecxz
xchg
loopne
(bad)
pop
mov
xchg
out
xchg
cmp
out
add
mov
sbb
sub
fbstp
aaa
push
pop
cmc
call
(bad)
jae
mov
inc
call
test
rcl
dec
cld
push
pop
jecxz
xchg
call
int3
jmp
add
sub
mov
xchg
lahf
scas
enter
push
cmc
jmp
int3
xchg
cmps
dec
jl
push
cwde
cmp
and
pushf
leave
call
(bad)
call
sbb
mov
int3
xchg
cmps
gs
shl
nop
sbb
adc
add
mov
arpl
pop
in
lds
int3
int3
dec
pusha
pushf
aad
fdivr
and
rol
dec
call
jno
xchg
mov
data16
scas
cli
fisttp
jae
mov
rcr
add
(bad)
ror
jmp
int
jmp
cmp
cwde
test
jle
sbb
xor
kandw
ss
xor
(bad)
rcr
pushf
mov
mov
fmul
inc
rcl
jl
adc
in
pop
loop
jmp
or
fstp
adc
loop
xchg
cmp
push
jae
in
outs
pop
lds
xor
push
mov
jl
add
and
jmp
xchg
mov
popa
mov
lods
leave
test
js
leave
pop
and
and
lahf
cvtdq2ps
push
jbe
fs
call
test
sbb
lods
inc
sub
adc
into
sbb
inc
fs
retf
add
push
iret
clc
sub
mov
lds
xchg
sbb
lahf
pop
mov
jmp
pop
push
lock
enter
inc
mov
icebp
mov
mov
popa
jno
inc
in
add
call
outs
into
cmp
mov
ss
lods
addr16
jno
imul
and
xor
popf
scas
or
add
jmp
adc
fmul
add
sbb
jl
fiadd
xchg
movs
in
aad
test
xchg
cld
mov
mov
push
pop
icebp
sbb
(bad)
or
inc
pop
repz
mov
(bad)
pop
ins
push
dec
dec
sbb
ror
call
adc
lahf
sub
movs
dec
cmp
cmp
out
or
xchg
jg
ins
xchg
xchg
into
inc
push
rol
pop
adc
cmps
cmp
or
mov
test
jb
jo
(bad)
fcmovnu
xchg
(bad)
cdq
movs
loop
xor
lods
mov
call
loopne
and
cld
scas
ds
xor
loop
in
outs
ds
out
outs
push
neg
sub
scas
ret
adc
mov
jb
imul
mov
mov
cmps
xor
(bad)
js
int
dec
scas
fcmovnbe
cmp
add
push
std
outs
mov
push
jo
sbb
lds
stos
shr
cld
push
dec
push
stos
pop
test
test
mov
arpl
movs
push
sub
movs
sbb
adc
mov
inc
cmp
shl
sbb
pop
cdq
push
into
pop
mov
jp
repnz
pop
pop
(bad)
clc
xchg
adc
push
pop
int
nop
xchg
dec
push
push
dec
sbb
and
adc
cmp
sub
add
stos
mov
enter
xchg
fcomp
jmp
sti
cwde
mov
adc
sbb
push
push
xchg
adc
mov
xor
jo
mov
daa
xchg
inc
mov
adc
push
push
lds
mov
pop
adc
cdq
repz
aas
add
dec
mov
xlat
sahf
cmp
(bad)
mov
or
cmp
mov
sbb
xor
sbb
jmp
fistp
loop
mov
sbb
xlat
jmp
pop
add
gs
loopne
add
inc
(bad)
push
inc
or
mov
sahf
sbb
xor
jo
jb
add
outs
lods
int3
pop
shr
dec
mov
pop
xor
jge
lahf
pop
retf
pop
fst
push
jmp
add
xchg
xchg
pop
mov
inc
sub
pop
shl
in
ret
pop
push
test
xchg
mov
sbb
imul
or
ins
das
icebp
mov
jle
test
aam
es
sbb
add
or
adc
and
stos
sahf
fst
sbb
test
jle
sbb
daa
or
jnp
in
(bad)
mov
and
add
push
sub
xor
neg
jp
outs
jmp
push
cmc
aad
pop
mov
(bad)
cmp
mov
or
scas
aad
push
ss
fcomp
stos
push
dec
xchg
pusha
test
popa
lahf
fsub
cli
jmp
and
jbe
cmc
sbb
js
je
adc
xor
pushf
mov
shl
push
jmp
xor
sti
scas
ds
mov
mov
cmp
dec
loop
cmc
cmp
out
pushf
add
cmp
imul
push
arpl
add
adc
iret
aas
shr
adc
es
into
js
add
mov
lahf
sub
xchg
scas
dec
ds
pop
into
push
adc
fwait
mov
mov
jmp
pop
push
mov
stc
or
cmp
sbb
(bad)
out
and
jmp
jo
fild
hlt
mov
les
mov
add
sbb
add
mov
retf
add
ja
add
fisubr
xchg
cmp
rol
xchg
rol
pop
shr
cmp
pop
dec
pop
rcl
mov
mov
jmp
jge
mov
(bad)
jmp
sub
add
and
mov
fistp
add
mov
into
xchg
ffree
add
pop
jno
scas
mov
fmul
aas
mov
and
add
mov
test
jo
sbb
push
popa
mov
or
pop
push
mov
mov
mov
add
jg
cs
cs
js
add
outs
jno
push
test
sub
cmc
xor
stos
fs
xchg
ins
das
push
mov
sti
sub
push
shl
cmp
pop
inc
xchg
out
mov
ds
or
(bad)
mov
pop
les
jmp
push
or
sub
fwait
daa
sub
cli
jmp
push
jp
test
or
cmp
stos
pop
cmps
push
test
mov
ds
jbe
ja
or
jae
pop
xor
jge
jg
adc
mov
cmc
dec
aaa
sub
sbb
pushf
and
xchg
cmp
in
ds
mov
add
shr
sbb
xor
pop
adc
adc
mov
call
mov
or
mov
popa
and
ror
pop
sbb
pop
test
lahf
pop
les
and
xchg
outs
jmp
mov
sbb
das
out
adc
out
stos
arpl
mov
sar
jge
dec
inc
mov
add
nop
jle
stos
sti
and
stc
dec
inc
aam
and
jns
jge
xor
int3
pop
stc
cmps
sub
cmp
aas
pusha
jbe
pop
inc
fdivr
imul
stos
test
jmp
or
movs
outs
sbb
int3
lahf
inc
mov
inc
cmp
sbb
test
inc
mov
and
les
in
rol
push
lea
and
(bad)
jp
repnz
jg
jmp
inc
(bad)
not
inc
lods
jp
push
add
(bad)
jnp
(bad)
neg
fwait
repz
mov
mov
lods
adc
xlat
repnz
loopne
fidiv
clc
lea
lods
cvtps2pd
xor
xchg
sbb
ds
pop
fstp
mov
popa
(bad)
sbb
cld
jne
and
mov
mov
jg
lods
cwde
out
aas
lods
ret
fucomp
xchg
test
in
pop
mov
les
inc
pushf
push
xchg
jbe
cmps
inc
or
dec
inc
shr
pop
test
cmc
lds
out
xor
outs
(bad)
out
jecxz
mov
mov
xor
imul
shl
enter
sbb
sahf
pop
cmps
repnz
jge
mov
jl
xchg
ror
cmp
je
lock
xchg
push
(bad)
retf
cmp
fistp
enter
stc
dec
pop
in
fistp
ja
mov
repz
jmp
movs
pop
cwde
out
scas
mov
das
inc
rcr
mov
lock
movs
cmp
into
sbb
mov
xor
sub
into
cdq
inc
sub
cdq
push
loopne
sub
and
adc
jecxz
xchg
inc
mov
and
mov
test
pop
jo
cmps
mov
pop
(bad)
mov
add
sbb
sahf
int
inc
mov
test
xor
mov
mov
rep
sbb
iret
jge
cwde
mov
add
clc
inc
jo
mov
mov
repnz
sbb
sbb
cmp
sbb
pop
arpl
loop
inc
mov
inc
aad
pop
(bad)
fcmovbe
sub
dec
loop
pop
ror
pop
nop
mov
sbb
pop
add
aas
or
add
daa
(bad)
in
or
mov
xchg
xchg
mov
lods
imul
cld
add
cmps
retf
out
push
push
push
les
jno
sbb
leave
repnz
and
sar
mov
lahf
lods
inc
mov
rcl
push
xor
or
movs
mov
int3
pop
xchg
or
sub
dec
sub
ficom
mov
and
jg
mov
mov
cmps
pushf
sub
push
aas
mov
nop
popa
add
push
xlat
icebp
dec
std
in
imul
icebp
xchg
fiadd
or
fcom
out
pop
add
dec
xchg
cmp
mov
mov
mov
mov
test
outs
lahf
cmp
jp
inc
out
lods
mov
sbb
pop
dec
mov
enter
fcom
xor
or
push
into
inc
shl
call
shr
cmp
xchg
mov
imul
lock
ret
cmp
adc
push
push
popf
inc
iret
das
cli
fisubr
cmps
ds
in
je
shr
and
xchg
and
out
sbb
imul
test
stc
pop
pop
jp
ins
pop
xchg
mov
mov
sbb
or
mov
fiadd
xor
jle
push
in
fst
inc
test
mov
lds
call
lds
sti
sub
mov
rcr
repnz
pusha
iret
adc
mov
std
stos
mov
xor
mov
xchg
and
ss
ret
outs
sti
movs
mov
in
neg
cmc
cmp
add
fist
jno
enter
sub
dec
fs
pushf
pop
jg
cs
jle
mov
push
add
popa
scas
dec
test
adc
and
fdiv
inc
leave
and
xlat
push
pop
push
jmp
or
ins
mov
jo
dec
push
mov
fld
loop
or
arpl
retf
push
cld
out
idiv
xor
int3
sbb
call
xchg
fldenv
mov
cli
mov
mov
jo
jp
mov
bound
adc
or
dec
in
push
xchg
mov
jne
out
out
push
push
and
jecxz
push
cli
xor
jno
pop
sub
stos
xor
nop
mov
jnp
push
and
jmp
int
add
lea
ins
cmp
mov
ins
mov
popa
cmp
mov
js
nop
jmp
adc
mov
adc
ins
inc
jecxz
mov
leave
and
dec
cdq
fs
lahf
(bad)
addr16
mov
lods
dec
pop
xchg
sbb
retf
dec
fdiv
jg
jae
test
adc
retf
test
cmp
(bad)
retf
jl
and
push
outs
movs
jne
cld
popa
mov
and
pusha
inc
aas
outs
xchg
ror
test
push
jo
out
loope
mov
xchg
gs
retf
outs
mov
xchg
dec
fdiv
adc
xor
test
xchg
xor
jmp
sbb
and
sub
mov
cmp
cli
lea
jo
stos
xchg
sbb
hlt
sbb
sbb
sahf
retf
xchg
je
xor
test
sbb
(bad)
fadd
adc
(bad)
in
cmp
ss
add
push
cli
pop
and
mov
xchg
push
xchg
cmp
jbe
adc
cmp
cmp
(bad)
test
lahf
dec
push
movs
jmp
jl
and
xchg
inc
lods
in
scas
ins
xor
xor
call
jle
jp
push
mov
or
or
movs
push
shr
fnstenv
cli
jnp
(bad)
jne
fistp
cmp
fyl2x
pop
and
dec
movs
aad
icebp
(bad)
ficomp
call
stos
cmp
inc
ins
out
xchg
leave
sar
imul
les
or
sbb
adc
dec
retf
inc
or
bound
mov
std
and
lods
or
xchg
int3
aam
sbb
jb
fild
fxch
ret
movs
xor
push
sbb
push
out
sub
jne
inc
pop
cmp
mov
mov
das
push
or
and
xchg
push
imul
and
pop
jmp
fld
fwait
xor
js
push
sub
xchg
rcl
pop
ret
jo
inc
rol
les
mov
out
push
or
pop
mov
xchg
jmp
jae
repz
gs
cmp
out
or
repnz
in
sahf
and
or
or
and
push
inc
push
xchg
sbb
inc
dec
add
mov
stos
pop
sti
cs
sbb
rcr
ror
adc
repz
add
movs
xlat
cwde
lock
fnstsw
push
stos
add
ja
fsubr
push
mov
push
xchg
and
loope
daa
cmp
jp
pop
out
(bad)
in
sub
mov
mov
pushf
mov
and
cmp
dec
jmp
lock
lahf
sub
adc
out
int
inc
mov
mov
(bad)
movs
inc
mov
test
xor
xor
fmul
rcl
(bad)
cmps
xchg
das
inc
in
mov
fs
add
jnp
in
xchg
or
mov
push
inc
pop
in
jno
ss
jns
sbb
or
and
dec
sub
adc
in
xchg
test
mov
mov
jmp
imul
sbb
and
dec
push
dec
push
imul
pop
pop
jae
(bad)
fdiv
jne
mov
jbe
outs
push
pop
sbb
mov
and
pop
repz
xchg
(bad)
xchg
int
xor
and
mov
jle
stos
mov
addr16
daa
jp
and
loope
mov
and
pop
dec
xchg
adc
adc
aaa
xchg
pop
cs
hlt
pop
dec
stos
adc
es
push
push
and
rcr
dec
mov
pop
imul
stos
add
clc
jne
loopne
jae
dec
inc
pop
jb
xor
or
out
mov
or
cmps
(bad)
jge
ret
and
dec
in
mov
aam
adc
pop
push
fidiv
push
ret
pop
dec
lahf
or
pop
mov
adc
push
mov
in
jno
mov
inc
inc
xchg
loop
clc
sar
in
cmp
inc
loopne
mov
ret
lock
xchg
mov
popa
push
gs
xchg
pop
xor
cmps
pushf
and
pop
xor
popf
inc
or
ror
mov
mov
loope
mov
jecxz
sbb
add
es
fisub
add
(bad)
cs
aad
dec
les
jg
inc
sub
mov
rep
or
add
fisubr
inc
out
push
(bad)
xchg
(bad)
loope
dec
test
js
push
sahf
das
mov
loop
shr
mov
jg
retf
fcom
std
sar
dec
push
jle
cmps
stos
push
les
adc
das
lea
fnstcw
or
bound
(bad)
adc
cdq
mov
mov
mov
dec
inc
push
push
inc
out
and
js
jbe
mov
(bad)
outs
pop
mov
pop
dec
jmp
add
xor
ror
push
(bad)
fcmove
and
sub
inc
sbb
pop
sub
pop
pop
adc
(bad)
cld
loop
inc
test
cmp
inc
ret
pop
mov
pop
shl
lods
pop
sbb
cld
ins
inc
pop
mov
ret
lods
mov
aaa
test
in
ret
cmp
push
adc
mov
mov
int
ja
(bad)
and
jbe
pop
push
inc
sub
in
sti
gs
push
xchg
bswap
jmp
pop
imul
push
clc
leave
js
pop
sbb
xchg
adc
dec
outs
loop
stos
cwde
outs
mov
fs
push
fcom
sbb
pop
push
mov
(bad)
aad
fcmovu
fisubr
daa
(bad)
std
jl
and
add
pop
jns
xor
(bad)
shl
mov
imul
sub
stos
(bad)
shl
stos
mov
cmps
xchg
rol
es
(bad)
fadd
or
icebp
mov
fcmovnbe
jnp
repz
mov
push
into
xor
adc
ins
test
cmp
add
nop
in
enter
push
sbb
pop
and
adc
inc
mov
add
push
jl
add
repz
stos
inc
jmp
or
stos
test
mov
xchg
daa
aad
push
push
or
outs
test
cmps
outs
fstp
and
cmps
repnz
jns
mov
push
push
cdq
jge
mov
gs
mov
pusha
xlat
sub
push
les
addr16
xchg
dec
(bad)
cld
ss
stc
mov
pop
cmp
pusha
sar
push
outs
popf
loopne
aas
push
add
ss
sti
adc
adc
test
jmp
test
sub
fcmovnbe
fdiv
sbb
loope
inc
mov
dec
test
ds
jl
and
cmp
cmps
mov
mov
sub
stc
inc
in
xchg
push
mov
aam
inc
(bad)
sbb
xchg
icebp
daa
push
out
mov
or
and
or
xchg
pop
cmp
pop
sbb
mov
mov
cmc
cmovae
mov
push
cmp
xchg
lods
inc
mov
or
add
xlat
lods
out
dec
gs
xchg
or
(bad)
repnz
out
test
or
fwait
push
xor
mov
loop
push
push
out
dec
dec
sub
ins
movs
xor
icebp
imul
mov
cld
pop
jo
pushf
fadd
mov
not
inc
sbb
mov
int3
retf
jno
fcomp
retf
pop
cmc
ins
fist
in
repz
lds
data16
movs
je
cmp
sub
out
into
nop
sahf
sahf
mov
xchg
xchg
pop
lahf
sbb
out
dec
pop
daa
icebp
rol
lea
lock
jo
cld
cmp
loopne
mov
fs
pop
push
sahf
push
mov
push
mov
imul
stos
or
xor
in
dec
pop
mov
and
dec
in
sub
pushf
retf
cmp
fmul
dec
cdq
cmp
lahf
iret
adc
adc
mov
pop
jp
ja
dec
xchg
add
cmp
cli
popa
idiv
jne
add
xor
nop
push
leave
dec
fnstsw
xor
ror
hlt
inc
das
and
mov
jle
popf
jnp
test
mov
inc
mov
fadd
or
xchg
pop
xchg
pop
jo
sub
push
mov
sbb
xchg
inc
icebp
retf
into
jge
xchg
jno
in
mov
pop
icebp
xor
push
jmp
gs
jb
add
mov
mul
jo
or
and
mov
xor
sub
fdivr
and
adc
fild
inc
push
xchg
sti
(bad)
lock
adc
mov
cdq
add
retf
push
cmp
sub
ja
and
jns
and
xor
and
aas
push
int
mov
jae
mov
ror
addr16
ins
cli
jo
outs
xchg
and
mov
inc
jmp
ret
stc
mov
icebp
xor
add
push
pop
out
mov
xor
outs
push
inc
mov
sub
lods
int3
cmps
add
adc
in
dec
mov
fldcw
scas
cdq
cwde
stos
add
and
es
cmps
cmps
fmul
mov
int3
add
xlat
sbb
and
jae
jmp
imul
cwde
dec
test
rcl
ss
pop
fwait
out
inc
stos
jns
mov
jo
dec
dec
mov
ja
sti
dec
hlt
or
hlt
mov
retf
push
pop
dec
dec
cmps
xor
rol
or
pop
fidivr
xor
adc
retf
pop
in
es
push
repnz
fadd
cmp
mov
pop
add
xchg
add
adc
(bad)
out
call
mov
and
out
ds
into
int3
loop
outs
(bad)
push
repz
mov
xchg
inc
stos
in
neg
sbb
mov
mov
ret
jg
lock
fimul
aam
pop
mov
scas
ins
jg
and
mov
sbb
xor
int
sbb
cli
stos
in
fdivr
into
into
pop
cmp
and
imul
je
nop
inc
pop
xchg
scas
scas
in
add
mov
mov
or
into
inc
call
or
add
adc
xchg
das
(bad)
mov
ins
push
xor
adc
dec
nop
and
inc
daa
jno
ds
(bad)
in
or
inc
(bad)
sub
xor
sub
adc
add
dec
push
test
fwait
sub
pop
mov
aaa
adc
mov
pop
mov
call
jne
mov
jns
mov
mov
xor
sub
push
das
fs
sbb
add
cmps
cmp
push
sbb
in
mov
popf
call
and
push
sahf
leave
inc
ret
sbb
adc
sub
rol
idiv
and
mov
ins
pop
mov
imul
xlat
pop
ds
mov
xor
int3
retf
aaa
mov
int
push
neg
movs
ret
mov
jb
mov
cmps
out
add
inc
cmps
dec
mov
lahf
mov
popa
add
mov
push
xchg
mov
adc
jp
mov
aaa
imul
arpl
lods
adc
cmps
and
jmp
in
stos
outs
inc
dec
sub
aas
aaa
mov
mov
lea
mov
mov
jge
push
cmp
sub
sub
out
and
add
in
dec
rcr
mov
add
mov
mov
xchg
cdq
mov
fdiv
or
das
xor
inc
pop
adc
push
fsub
call
retf
fdivr
or
mov
div
xchg
xchg
jbe
scas
es
inc
fild
pop
add
xchg
xchg
cmp
sbb
inc
aas
add
ret
xchg
push
xor
jle
and
or
lds
mov
push
jo
xchg
int3
lahf
imul
xor
or
ins
adc
inc
popf
cdq
ret
test
dec
sub
hlt
ins
mov
loopne
or
jb
cli
add
or
or
in
pushf
or
in
xchg
inc
cmp
mov
jnp
and
xchg
fnsave
sub
test
cdq
inc
jmp
stos
je
movs
js
adc
rcr
out
ret
nop
sub
(bad)
neg
into
adc
stos
xlat
dec
add
inc
push
daa
cmp
in
mov
bound
cmc
(bad)
inc
call
es
push
(bad)
mov
adc
add
push
stos
test
outs
mov
cli
mov
or
sbb
loopne
shr
push
ror
loop
inc
and
adc
push
mov
leave
pop
inc
jp
repnz
dec
xchg
ins
stos
clc
xor
ds
pop
dec
enter
shl
mov
sub
ss
inc
call
pusha
leave
pushf
ds
in
loopne
mov
dec
fs
fmul
mov
jle
mov
mov
jbe
dec
adc
and
outs
cmp
inc
and
test
inc
xor
jmp
out
pop
cmc
mov
into
shr
ss
cs
sbb
add
mov
mov
adc
call
fs
jbe
sub
stos
das
push
in
inc
xadd
xor
fs
in
push
cmps
pop
repz
cld
js
sub
call
or
sbb
adc
xlat
and
jmp
ret
lods
xor
dec
adc
sub
add
icebp
and
cwde
pop
hlt
cmp
push
add
pop
scas
mov
test
jbe
xchg
and
mov
(bad)
clc
lods
bound
jl
cmps
and
or
dec
xchg
fistp
rcl
(bad)
sbb
les
or
jno
jge
pop
outs
sahf
fnsave
dec
repz
add
mov
jno
mov
jg
cmovl
add
pop
and
mov
jns
sub
dec
test
daa
(bad)
icebp
in
sbb
pop
dec
push
fild
adc
int
repnz
inc
mov
or
mov
inc
jge
pop
xor
aaa
cmp
test
lea
in
repnz
dec
in
shl
cmp
xor
shl
in
jmp
cwde
mov
xchg
mov
(bad)
scas
sbb
repnz
daa
push
mov
jmp
inc
pop
enter
mov
sub
movs
gs
cmp
push
aas
xor
jle
pop
and
pop
pop
push
outs
outs
push
sbb
pop
jge
inc
leave
imul
sub
cmp
ja
pop
aaa
mov
pop
fld
addr16
sub
addr16
test
or
jns
or
mov
mov
test
jg
inc
enter
gs
jg
jmp
std
adc
jae
mov
into
xchg
jp
call
fwait
or
in
dec
sar
mov
addr16
or
adc
(bad)
fs
lahf
idiv
inc
mov
sbb
fwait
inc
or
cmp
(bad)
and
je
pop
test
adc
repnz
push
jno
push
lds
mov
dec
mov
dec
lahf
dec
mov
aaa
in
sbb
or
les
cdq
sti
fst
cdq
jl
pusha
sbb
cmp
fbstp
imul
push
pop
test
or
mov
ja
cmps
pop
jp
ds
pop
pop
ret
push
mov
jns
or
fisttp
or
mov
add
mov
mov
ret
out
sub
dec
ss
inc
pop
shl
in
cld
imul
xchg
addr16
push
cmp
ja
push
dec
idiv
inc
shr
sbb
(bad)
xlat
xor
pop
mov
pop
movs
jmp
out
or
ja
and
mov
int
and
or
(bad)
xchg
push
push
mov
push
aas
aaa
stos
in
ins
lea
xchg
popa
(bad)
cmp
fst
jae
cmps
adc
mov
jg
dec
lahf
xlat
rcl
jns
mov
xchg
mov
add
xor
and
repnz
jo
xchg
mov
lods
shl
dec
test
push
mov
pop
inc
and
jne
out
neg
ins
pop
sbb
xor
or
mov
retf
sub
and
std
mov
push
cmp
mov
clc
stos
mov
(bad)
idiv
sub
push
arpl
jmp
loopne
sbb
push
fs
inc
dec
stc
movs
fcom
dec
bound
mov
sti
movs
push
daa
or
jns
add
pushf
push
int
push
in
fadd
repnz
movs
clc
ins
sti
leave
ins
mov
jmp
sbb
call
cmps
mov
out
lods
add
xor
adc
add
mov
xlat
inc
in
cli
loop
ins
xor
(bad)
push
inc
sti
inc
aas
movs
pop
mov
pop
add
jb
loope
jl
shr
ds
dec
hlt
cmp
and
mov
divps
add
in
sbb
shl
adc
int
pop
pop
add
pop
rol
cdq
push
fsub
sahf
add
xor
add
aaa
mov
leave
or
push
mov
cmp
aas
mov
xchg
cmp
pop
jle
xor
imul
xchg
arpl
mov
sub
push
sahf
fcmovu
inc
stos
dec
(bad)
fld
or
push
aaa
leave
xchg
sbb
push
sub
or
push
mov
fnstcw
jge
mov
das
out
sar
mov
cmp
push
pop
cmps
xchg
cmps
gs
retf
ret
mov
retf
sub
xchg
repz
pop
mov
loopne
in
mov
push
outs
push
push
ins
fistp
aas
jmp
test
shl
aas
and
int3
push
lea
dec
addr16
mov
adc
gs
aam
pop
push
icebp
and
inc
pop
mov
aaa
push
mov
inc
or
or
lea
in
adc
aad
adc
pop
add
cmp
mov
int3
jecxz
cld
jns
sub
cmps
sbb
add
scas
rcr
je
dec
stc
jb
xchg
lods
sub
and
jne
aaa
pop
push
push
sub
push
aas
ja
fcom
sbb
pop
xlat
call
pop
imul
test
das
into
and
pop
movs
scas
or
test
clc
pop
and
cmp
out
or
shl
leave
loopne
retf
scas
jns
jl
inc
sbb
shl
mov
ror
mov
jmp
inc
adc
xchg
cmp
div
mov
add
daa
mov
retf
inc
mul
clc
cmp
xlat
(bad)
inc
ja
push
xor
and
xchg
fucomp
shl
and
pop
sar
push
in
and
dec
(bad)
scas
xor
addr16
inc
xor
arpl
mov
inc
scas
pop
ret
push
mov
cmp
mov
(bad)
pop
pushf
pop
div
cmp
push
dec
mov
mov
vpmullw
sub
dec
inc
out
sub
dec
pop
test
and
movs
and
cwde
movs
mov
jecxz
into
cmps
idiv
outs
loope
xor
data16
push
ret
stc
sub
jns
pop
aas
inc
xor
jl
xor
popa
jg
mov
int
xchg
push
mov
(bad)
dec
stos
clc
int
out
push
cs
jg
imul
fisubr
cld
push
sbb
scas
mov
hlt
push
mov
xchg
int
retf
adc
sahf
ins
ss
jmp
mov
out
adc
leave
or
jmp
repnz
inc
rcr
xor
adc
dec
mov
inc
aam
ror
lods
mov
rcl
and
sar
lods
out
int3
lock
loop
mov
pop
ret
cmp
rcl
stos
or
test
xor
mov
push
mov
aaa
int3
xor
add
ret
jp
aas
mov
pop
out
mov
lds
jmp
test
cmp
xor
aaa
clc
mov
daa
and
or
aam
dec
add
mov
(bad)
cdq
rcr
inc
enter
sub
mov
fidiv
clc
and
into
je
pop
dec
retf
push
sub
push
pop
ss
add
push
mov
cmp
mov
push
add
push
stos
sub
aas
cdq
cli
fs
xor
dec
xchg
inc
push
jo
(bad)
fdiv
fdiv
aas
leave
xor
pop
xchg
imul
xchg
or
arpl
pop
add
movs
in
arpl
loope
imul
stos
mov
xchg
mov
sbb
pop
inc
push
cmp
scas
call
cdq
adc
call
pop
sahf
adc
inc
int
adc
inc
jae
ret
les
push
cmc
and
pop
sub
div
repz
mov
dec
or
pop
add
mov
sbb
popa
xor
nop
inc
retf
add
divps
je
das
lods
lahf
jmp
fadd
push
ins
mov
repz
sbb
jmp
jns
pop
and
jae
mov
leave
test
cmps
adc
je
ret
push
adc
outs
and
cmp
push
adc
jge
and
xchg
lahf
dec
jbe
jno
(bad)
cmp
stos
outs
cs
ja
data16
push
xchg
mov
jmp
add
or
fild
cmp
mov
pop
(bad)
std
pop
and
fidiv
push
and
call
int
iret
add
mov
mov
and
sbb
pop
js
pop
iret
out
jbe
xchg
(bad)
daa
push
xchg
das
call
adc
xchg
mov
inc
sbb
shl
dec
mov
inc
sub
push
add
fs
mov
pop
cwde
outs
daa
mov
add
rol
test
js
mov
loope
xor
inc
mov
adc
jle
lock
daa
mov
arpl
data16
mov
fst
out
scas
mov
pusha
push
bnd
test
dec
mov
cmp
lea
mov
or
pop
push
scas
repz
popa
mov
pop
push
data16
(bad)
ins
in
outs
mov
(bad)
mov
lea
push
fwait
bound
inc
dec
xchg
mov
mov
lahf
inc
inc
sub
cmp
push
(bad)
pop
adc
test
je
xchg
adc
cli
add
sbb
inc
pop
xor
dec
cmp
test
call
cld
xchg
add
in
std
pop
push
inc
mov
cmp
cmp
ja
ds
mov
out
fdivr
mov
pushf
ficom
mov
jae
icebp
and
movs
imul
mov
xchg
and
and
cmp
mov
int
sbb
fwait
xor
pop
jnp
repz
dec
inc
cmp
lahf
shl
push
or
add
mov
cwde
sti
mov
push
call
xor
aam
mov
adc
imul
cld
retf
shl
pop
or
clc
cwde
or
aas
dec
ja
clc
push
jge
xchg
es
leave
push
adc
sub
ret
(bad)
and
cs
jmp
aam
push
push
sbb
sbb
push
movs
mov
lahf
cmc
out
push
outs
iret
aad
loope
and
ja
ficom
mov
(bad)
cwde
pop
call
dec
retf
xor
adc
(bad)
(bad)
mov
add
and
sbb
into
inc
inc
jle
(bad)
dec
inc
stos
mov
or
fcmovbe
mov
mov
mov
cwde
out
nop
rol
dec
mov
xlat
cmp
xchg
icebp
sub
xor
mov
(bad)
adc
adc
cs
ret
or
stc
in
xlat
fcomi
dec
ret
sbb
sbb
and
cmc
jb
mov
jb
or
inc
pushf
push
xchg
jge
cli
scas
fmul
ret
inc
adc
mov
mov
xchg
lods
and
pop
std
mov
into
lods
mov
(bad)
pop
das
fimul
icebp
repnz
int3
push
test
xor
jae
xchg
jmp
inc
or
call
xor
sbb
fwait
out
mov
mov
adc
nop
sbb
fst
xchg
pop
push
jl
out
ficom
or
(bad)
std
xchg
add
sub
xor
add
push
xchg
xor
sti
mov
sbb
(bad)
in
xor
retf
mov
and
sub
packsswb
scas
cdq
repnz
int
aas
std
shr
mov
pop
fadd
les
dec
jmp
push
out
out
dec
shl
pop
test
out
sar
rcr
xor
es
add
pop
pusha
jne
in
loope
ror
stos
jecxz
dec
xlat
(bad)
sub
cmp
xchg
addr16
not
mov
push
hlt
mov
in
jne
jge
(bad)
sbb
and
mov
stos
jns
fistp
dec
mov
retf
and
adc
or
mov
call
popf
dec
out
stos
rcr
push
shl
cmps
adc
xrelease
sahf
push
inc
sub
adc
push
mov
push
out
ret
rol
ins
pop
xlat
jno
or
mov
clc
jnp
xor
(bad)
pop
sbb
(bad)
xor
(bad)
pusha
out
dec
dec
cdq
sub
mov
push
repz
pop
push
retf
fcmovb
aaa
or
push
je
xlat
cld
jg
adc
call
stos
scas
(bad)
xchg
lock
xor
mov
and
jmp
sub
dec
or
neg
pop
test
scas
adc
xchg
ins
mov
retf
jns
imul
test
repz
(bad)
fld
jp
xchg
or
lds
mov
cmp
lock
(bad)
idiv
popf
and
and
mov
imul
push
sub
ror
inc
xor
xor
xchg
pop
in
mov
stos
inc
mov
stos
js
fwait
popf
or
add
cmc
js
adc
mov
rcr
and
movs
add
mov
adc
cmp
sub
jl
loop
adc
mov
clc
stc
mov
cmps
sub
jecxz
mov
and
cmp
jns
xlat
js
(bad)
push
stos
mov
aad
push
iret
es
xchg
icebp
pop
or
push
mov
adc
and
cmp
and
push
xchg
or
push
repz
push
leave
data16
lods
push
xor
and
stc
xor
or
pop
fs
xor
xlat
mov
fwait
push
xchg
lods
jge
sub
dec
xor
movs
push
mov
mov
cmp
cmp
sti
and
push
bound
in
fsub
fnstenv
pusha
jge
cwde
or
jne
test
jmp
daa
sbb
push
loopne
fs
sar
aam
loope
xchg
and
push
aas
fnsave
sbb
(bad)
jno
movs
lods
loope
arpl
dec
dec
outs
sbb
jge
and
cmp
aaa
cmps
js
pop
imul
adc
out
push
and
fwait
shl
inc
js
sbb
push
push
in
push
fld
cmp
jle
sub
popf
repnz
push
(bad)
aaa
mov
(bad)
(bad)
lock
push
jns
jne
add
xor
pop
rcl
and
js
scas
xchg
xchg
lock
cmp
cmp
sbb
jns
mov
jbe
(bad)
push
mov
mov
adc
lods
sti
cdq
scas
cmps
cmp
jb
sahf
test
out
mov
jo
hlt
rcl
jae
out
mov
cmp
imul
rol
cld
js
ret
mov
add
sub
push
jle
cmc
inc
into
jg
jo
test
aad
repz
mov
fstp
jl
push
in
bound
push
sub
gs
test
push
outs
add
mov
ins
sub
or
dec
mov
hlt
clc
push
jne
cmp
gs
pop
and
cwde
mov
push
add
test
out
jg
pop
loop
fld
stc
inc
std
push
xlat
xchg
mov
push
enter
and
rcr
mov
sbb
pop
rcr
cmp
pop
clc
xlat
add
retf
pop
pop
cwde
(bad)
jne
(bad)
sub
das
inc
aas
lods
pushf
xchg
movs
cmps
mov
cmp
jge
cmp
mov
inc
cmc
es
push
sub
and
shl
stos
enter
xchg
push
sub
(bad)
cmp
add
push
loop
adc
sbb
(bad)
cld
daa
inc
cmps
mov
loop
rcl
cmp
aas
sar
jp
sub
lea
pop
adc
mov
stos
int3
stos
and
(bad)
arpl
push
sbb
daa
mov
(bad)
jmp
fisub
jg
rol
(bad)
dec
adc
outs
cli
adc
(bad)
int
ror
jb
lahf
stos
dec
sub
push
stc
mov
mov
jbe
dec
aas
and
cmp
and
xor
jg
jge
mov
ins
jge
cmove
mov
and
and
shr
(bad)
jp
hlt
test
movs
jp
push
clc
cmp
arpl
add
mov
xor
mov
fwait
leave
or
jbe
fstp
jbe
push
xchg
xchg
retf
repz
imul
int
mov
mov
push
sahf
adc
push
loope
sbb
imul
mov
sti
sbb
call
loop
pop
out
and
pop
loop
dec
dec
ror
repnz
ja
sub
mov
repz
push
push
ss
mov
and
sub
sbb
push
hlt
jmp
pop
xchg
add
xor
movs
dec
adc
loope
stos
ss
fs
sbb
sbb
inc
fadd
cmc
in
jl
fisub
test
push
pushf
sbb
ret
xchg
ins
int3
dec
xchg
loopne
gs
ret
pop
mov
sbb
and
sub
mov
leave
mov
cmps
push
pop
ror
or
mov
fidivr
cdq
add
test
pop
stos
ret
mov
mov
pop
gs
int3
shl
daa
mul
inc
pop
mov
jo
fst
xchg
int3
fisttp
(bad)
(bad)
sub
lahf
and
sti
or
push
mov
leave
fsubr
out
and
sub
fbstp
and
mov
jo
dec
or
stos
jl
mov
push
es
and
outs
test
in
and
out
sub
out
mov
nop
mov
test
aad
arpl
inc
pop
movs
lds
sub
sub
frstor
xor
xchg
mov
xor
fistp
xor
adc
out
push
les
aaa
inc
xor
not
pusha
ucomiss
ds
push
mov
inc
fidivr
pusha
out
or
inc
repz
ficomp
xor
jge
test
lds
cdq
add
pushf
pusha
retf
int3
mov
scas
sub
fs
scas
cmp
pop
xor
or
push
cmc
add
sbb
sub
jecxz
dec
sub
lods
imul
ja
mov
push
and
stos
aam
lods
fwait
rcr
mov
adc
xor
outs
adc
xor
(bad)
mov
or
inc
jb
rcl
retf
jg
inc
std
nop
inc
neg
hlt
ret
push
outs
inc
xchg
cmp
bound
mov
jbe
lea
cmp
test
es
ret
out
scas
and
neg
out
(bad)
lods
mov
sbb
push
scas
retf
js
int3
movs
lods
xchg
test
test
xchg
xor
loop
xchg
enter
mov
mov
push
cmp
mov
and
mov
sub
iret
mov
ins
and
iret
and
test
inc
pop
ja
mov
and
jg
in
in
sub
or
les
push
push
sub
inc
jg
mov
push
lods
out
pusha
jno
bnd
ss
les
pop
call
fwait
cmp
xchg
loop
stc
and
jno
xor
pop
je
or
hlt
mov
push
movs
inc
and
in
or
mov
mov
cmp
lods
scas
mov
cmp
shr
sub
repz
imul
push
add
sub
fwait
cs
aaa
mov
rcr
aaa
push
imul
jg
movs
stos
xor
cmp
outs
xlat
sbb
pop
pop
add
outs
adc
xchg
div
adc
stos
rcl
jnp
in
pop
push
pop
push
in
inc
add
sub
mov
sub
aaa
dec
cmp
aad
mov
daa
mov
push
test
push
and
into
sub
not
ret
or
jecxz
and
mov
lahf
outs
mov
adc
cmp
push
add
stos
dec
cmp
add
add
sbb
in
mov
out
cmp
jns
push
pop
out
fisttp
call
gs
pop
mov
pop
xchg
mov
xlat
lea
and
mov
inc
iret
pop
sub
stos
push
xchg
jmp
repz
jae
(bad)
int3
sub
jno
mov
sub
ds
pop
mov
test
mov
shl
das
(bad)
nop
int3
jo
dec
jecxz
mov
icebp
jl
sub
pop
in
ficom
out
fs
and
or
push
dec
mov
cmps
ins
sub
inc
pop
mov
fisttp
mov
lods
fcmovne
sub
je
out
and
mov
sbb
or
nop
ret
or
std
cmps
jae
push
leave
mov
pop
mov
stos
call
sbb
jge
and
ret
rol
sbb
pop
pop
cmp
pop
mov
inc
adc
bound
ret
xor
jno
dec
call
push
nop
stos
and
mov
pop
inc
sbb
les
call
and
inc
inc
hlt
push
xchg
pop
cmc
jbe
cdq
std
loopne
sub
xor
mov
push
mov
push
add
push
fwait
setae
aas
stos
and
add
push
jp
(bad)
loopne
xchg
cmp
cmp
dec
jg
dec
xchg
push
fdiv
cmp
mov
out
lds
xchg
clc
cmc
in
in
and
xchg
sub
out
sub
shr
inc
cmp
xor
test
and
int
cmp
ret
pop
and
aad
in
pusha
test
mov
pop
iret
sar
or
inc
(bad)
sbb
pop
mov
pop
movs
mov
inc
mov
sbb
cmp
xlat
cmp
sub
and
not
mov
cmp
in
addr16
neg
add
test
xor
fs
outs
and
mov
mov
sub
jl
sub
mov
mov
(bad)
cmp
leave
sbb
mov
ins
mov
adc
and
and
cmp
jg
aas
add
sahf
fwait
daa
sub
jne
popa
jo
xor
jnp
xchg
repz
mov
ror
pop
sbb
dec
mov
test
xor
aam
sub
jecxz
or
movs
repnz
mov
sbb
aad
stc
in
leave
dec
xor
ret
test
add
loopne
rcl
adc
add
ret
jecxz
mov
jp
or
arpl
imul
add
gs
adc
pop
jg
cmps
jmp
loope
push
retf
sbb
jp
or
xor
push
adc
mov
jmp
jmp
xchg
xor
or
mov
push
push
arpl
mov
imul
pop
mov
outs
int
das
add
movs
inc
push
push
and
push
mov
arpl
xor
mov
repz
inc
adc
test
stos
out
sub
inc
in
sti
int3
mov
adc
ins
jns
jo
pop
dec
retf
mov
(bad)
pop
loop
stc
add
or
mov
pop
sar
in
data16
xor
pop
push
sbb
and
int
dec
xor
inc
sbb
fldln2
int
sub
in
cmp
aaa
push
nop
mov
sbb
cmp
call
xor
mov
not
and
call
sbb
jecxz
push
pop
or
jno
aam
add
dec
dec
test
fsub
or
cmp
out
push
test
(bad)
loope
dec
and
imul
pop
call
out
mov
jo
cmc
outs
add
dec
daa
je
leave
icebp
xlat
rcr
fisttp
lods
retf
xor
call
mov
jae
fwait
adc
cs
mov
and
inc
pop
loopne
inc
add
repnz
xchg
xchg
mov
pop
(bad)
dec
cdq
sub
cmp
or
and
test
jno
mov
cs
(bad)
sbb
cmps
inc
mov
mov
fidiv
test
hlt
stc
pmaxub
sbb
sub
dec
pop
jmp
inc
jl
(bad)
(bad)
enter
xchg
push
retf
sbb
push
inc
jne
mov
sub
and
movs
loope
xchg
out
mov
nop
(bad)
adc
fimul
mov
out
cmp
das
mov
or
repnz
jnp
xor
(bad)
mov
cmp
in
adc
xor
shl
jp
clc
ret
sub
mov
dec
xlat
scas
into
mov
xlat
jb
mov
inc
sbb
cmp
mov
stos
cmp
add
call
dec
in
lods
mov
shl
xor
(bad)
jmp
jne
xchg
sbb
int3
fcomp
and
lds
les
(bad)
pusha
cmps
jg
data16
mov
cmp
mov
stos
mov
jo
icebp
jle
int3
adc
mov
pop
nop
ins
xor
lahf
sub
outs
push
mov
jae
sub
and
test
adc
mov
leave
ja
and
mov
mov
add
loope
mov
arpl
or
pop
shl
div
daa
sahf
mov
enter
mov
add
inc
loop
ret
adc
cli
(bad)
push
or
cli
pop
mov
xor
cmp
xchg
push
sub
or
or
stos
rcl
jne
addr16
(bad)
retf
or
sbb
idiv
hlt
and
xchg
mov
jmp
dec
inc
sub
jle
push
movs
(bad)
push
mov
call
ins
xor
rcl
sbb
test
mov
inc
adc
cld
sar
call
sbb
ja
add
xchg
test
out
dec
retf
(bad)
jns
pop
in
pushw
xchg
addps
(bad)
cmp
cmp
mov
mov
jb
cdq
(bad)
popf
lea
pop
jp
test
bnd
call
push
sub
fld
std
dec
jmp
pop
dec
sbb
xchg
inc
mov
and
(bad)
(bad)
shl
in
clc
pusha
inc
rcr
je
movs
cwde
mov
push
xor
ins
dec
dec
push
push
sbb
ror
lods
pop
jle
les
retf
data16
pop
mov
jecxz
mov
retf
and
lds
call
and
xchg
xchg
cmp
or
xchg
adc
cld
jns
dec
xchg
pop
rcr
aam
ds
lds
mov
dec
mul
dec
sbb
xor
dec
xor
ins
add
(bad)
jmp
ja
sub
js
hlt
sahf
mov
push
daa
adc
ja
cld
mov
and
cmp
jmp
imul
pop
out
push
jmp
fst
in
scas
ins
jge
cmp
dec
loopne
(bad)
push
sbb
mov
adc
push
mov
jg
repnz
in
add
add
jae
jg
push
cmp
xchg
cmp
pop
dec
movs
push
pop
sti
fs
mov
mov
out
imul
mov
(bad)
fnstsw
inc
mov
ret
xor
shl
xchg
daa
add
cmp
test
in
inc
jnp
ret
cmc
dec
xchg
mov
mov
lods
jae
ins
pop
daa
aad
mov
mov
inc
out
sbb
pop
mov
mov
out
setne
dec
or
xor
inc
mov
adc
jg
mov
fcomp
sub
rol
(bad)
ds
mov
xchg
jle
(bad)
and
dec
push
add
push
xchg
lea
mov
out
sub
sbb
ja
stc
(bad)
sti
in
inc
in
idiv
mov
sar
pusha
adc
lock
fadd
add
outs
stc
test
fnstsw
adc
imul
scas
sti
test
inc
out
push
xchg
aaa
xor
inc
test
and
loopne
aaa
xor
jp
call
xchg
out
std
adc
inc
jmp
arpl
rcr
cmp
adc
mov
outs
or
pop
(bad)
xchg
cli
out
les
push
popa
push
rol
jg
cmc
adc
xchg
xor
mov
and
test
or
out
fild
(bad)
pop
lea
imul
lods
out
loopne
fs
mov
addr16
or
fs
mov
inc
fisub
sar
nop
lds
jmp
cmp
xchg
aad
(bad)
outs
add
lahf
les
xchg
into
inc
cmp
sub
inc
mov
jbe
push
loopne
scas
cli
xor
push
and
mov
(bad)
mov
(bad)
fidivr
ss
mul
pop
fdivr
push
daa
fwait
in
fistp
jmp
loopne
pop
aam
rol
hlt
inc
dec
push
mov
push
outs
mov
xlat
loop
ja
push
or
xor
out
fldcw
fld
das
test
cmc
(bad)
jns
pextrw
pop
cmp
icebp
adc
adc
inc
sub
out
cli
mov
repz
add
leave
adc
sbb
out
bound
cld
ret
push
push
imul
repnz
jp
sub
retf
mov
lock
test
mul
add
(bad)
outs
inc
dec
int3
push
repnz
sbb
outs
movs
and
mov
cmp
sar
ja
iret
jns
clc
xor
jl
and
cdq
dec
pop
push
jnp
outs
ss
ror
mov
je
gs
loop
inc
pop
stos
sub
clc
add
jae
cld
sub
or
xchg
or
lods
mov
mov
in
push
shl
pop
inc
mov
xor
mov
int3
loopne
sbb
adc
jmp
es
adc
inc
cmp
push
mov
sti
movs
xchg
push
pop
out
pusha
mov
jne
pusha
fadd
jl
push
daa
and
sub
ja
clc
add
int3
mov
mov
and
shr
inc
(bad)
scas
mov
fdivr
pusha
inc
into
xchg
push
lock
and
int3
mov
das
adc
sub
mov
xor
mov
inc
xor
mov
or
clc
sti
retf
xchg
(bad)
cli
gs
xchg
dec
shr
mov
dec
xor
adc
and
mov
mov
sbb
mov
stos
xor
or
xor
pop
hlt
fisub
jnp
jl
cmp
dec
cdq
jle
sbb
and
dec
jmp
sahf
mov
pop
adc
inc
add
les
push
or
fadd
push
fmul
(bad)
out
call
dec
push
lods
pop
sbb
test
pop
outs
pop
jo
rcr
and
adc
mov
mov
xor
(bad)
sbb
mov
sub
mov
add
test
push
cmps
inc
jne
mov
xchg
outs
xlat
iret
xchg
xor
mov
repz
iret
or
das
std
mov
pop
mov
jne
rol
fbstp
js
sar
jle
xor
fst
mov
int3
jae
push
pop
mov
pop
mov
and
ret
jmp
and
xchg
adc
int3
lahf
mov
jae
add
fidiv
scas
and
lods
in
stos
enter
stos
and
jecxz
pop
jmp
mov
adc
frstor
adc
daa
cmc
inc
sbb
mov
xchg
jae
xchg
mov
xor
retf
inc
add
xor
pusha
fisttp
sbb
shl
adc
mov
call
jp
xchg
mov
inc
pop
jmp
jp
outs
popa
xchg
or
jge
call
dec
mov
div
sbb
xchg
adc
pop
cdq
push
push
cmps
push
mov
test
sbb
and
movs
sub
add
mov
mov
inc
mov
mov
and
mov
inc
xchg
and
sub
cmp
stos
packssdw
into
push
frstor
out
or
jno
icebp
add
in
lock
outs
cmc
mov
mov
aaa
inc
not
jo
in
jne
cmp
xor
xor
js
cmc
mov
test
(bad)
enterw
fwait
mov
sysexit
jns
out
mov
push
fcom
mov
sbb
aaa
aam
out
retf
stc
dec
xor
push
mov
push
addr16
sbb
jnp
fistp
je
in
sbb
daa
dec
push
dec
jg
and
adc
shl
retf
aam
mov
div
dec
xor
lahf
xlat
(bad)
test
or
push
lea
mov
inc
mov
jae
cmp
lock
mov
and
nop
daa
aas
and
mov
push
cmp
je
pop
xlat
(bad)
cmp
fs
add
and
dec
mov
sbb
or
and
iret
add
add
stc
ds
xor
stos
les
cmp
fsub
sbb
or
and
arpl
or
repnz
ss
jl
xsave
ret
jmp
or
addr16
jnp
mov
jno
jmp
push
psraw
neg
xor
(bad)
repnz
addr16
xchg
stc
shr
mov
or
rcr
imul
arpl
hlt
sub
retf
cdq
cmps
mov
mov
adc
xor
cdq
xor
pusha
mov
pusha
idiv
mov
mov
or
and
retf
pop
daa
call
adc
lock
xchg
je
mov
loope
repz
inc
cmp
dec
adc
sahf
test
pop
xchg
aas
inc
sti
clc
dec
inc
sub
xchg
adc
sub
jg
(bad)
addr16
int
xchg
fldcw
(bad)
sub
push
in
or
add
sub
fidivr
adc
out
inc
and
sbb
pop
hlt
fs
mov
add
stos
lods
push
sar
(bad)
dec
inc
push
dec
inc
mov
ret
add
popf
lahf
or
popa
(bad)
push
call
push
mov
adc
dec
test
mov
cld
push
jno
leave
and
add
imul
rcr
cmp
mov
scas
push
cmps
mov
sub
xchg
dec
(bad)
out
fsubp
and
jae
mov
pusha
lods
mov
cld
inc
pusha
xchg
popa
pop
inc
nop
rol
cmp
in
aaa
loope
bound
pop
push
jg
ins
push
jl
jp
mov
les
mov
mov
cld
mov
cmc
shl
jmp
and
loop
sbb
stos
popf
inc
mov
es
adc
in
or
jae
cs
ret
shr
add
push
out
xchg
jnp
push
dec
dec
and
cmp
mov
ficom
mov
mov
inc
cmps
stos
gs
cwde
das
and
ins
add
xor
xchg
dec
outs
pop
jmp
jmp
push
int3
adc
mov
cwde
clc
add
xlat
or
fstp
sbb
mov
cmp
aaa
mov
pop
pop
cmp
xchg
xchg
mov
inc
jge
sahf
arpl
adc
lods
mov
or
mov
adc
jo
int3
mov
sub
out
(bad)
movs
loope
cmp
cmps
inc
jno
and
push
dec
outs
inc
sahf
jmp
sbb
push
mov
inc
pop
mov
add
pop
xchg
xor
movs
cli
fisubr
sub
cmp
push
mov
sar
or
pop
push
jl
push
cld
shl
aaa
add
adc
aaa
jo
add
dec
jge
or
jp
ret
cmp
xchg
inc
push
in
out
mov
or
mov
pop
int
cmc
iret
push
add
and
mov
adc
inc
push
mov
and
sbb
lahf
xchg
push
jno
dec
outs
ret
cmp
call
int
xor
pop
sub
cmp
imul
mov
push
arpl
ret
mov
inc
sub
inc
mov
or
shl
pop
fldcw
push
daa
dec
ins
arpl
std
xchg
add
push
cli
bound
bound
icebp
jp
pop
cmps
dec
fs
cs
mov
std
jle
arpl
movs
pop
or
add
stos
in
xchg
sbb
cmc
jp
aad
data16
pop
xchg
loop
out
xchg
mov
ins
cld
pop
or
sub
push
sub
sub
jns
adc
sbb
xchg
push
add
retf
mov
or
ds
jmp
sub
repz
add
lds
mov
test
lods
and
scas
aad
pusha
dec
outs
cmp
test
jmp
(bad)
clc
xor
(bad)
bnd
dec
cli
sbb
test
dec
js
dec
push
or
(bad)
fnstenv
adc
xchg
cmps
cmp
adc
jl
mov
stos
dec
ja
dec
pop
das
hlt
pop
ss
xchg
mov
pop
sahf
dec
pushf
xor
scas
cmp
cmps
ins
out
leave
sub
fcomp
jecxz
ins
or
(bad)
xchg
retf
retf
mov
lds
ss
leave
add
lods
nop
push
pop
shr
(bad)
in
es
jge
test
fwait
mov
mov
cmps
jo
cmp
dec
mov
xchg
mov
cmp
sub
test
sbb
pop
cs
inc
push
hlt
out
xor
dec
in
jbe
leave
aaa
mov
mov
repnz
imul
add
push
xchg
add
data16
ins
inc
ja
xchg
xor
icebp
ja
sahf
cmp
sub
cli
sbb
and
pop
sub
cwde
shr
push
aam
jl
mov
dec
jmp
xchg
xchg
push
cld
xor
sar
(bad)
ins
inc
ret
sbb
xchg
inc
fdivrp
dec
lods
fild
mov
add
adc
mov
xor
jmp
push
mov
xchg
jl
xor
pop
enter
fstp
mov
(bad)
(bad)
call
scas
scas
rcr
or
jmp
inc
out
(bad)
pop
fdivr
lods
in
aad
movs
dec
cmp
mov
mov
and
leave
call
adc
ins
repnz
ret
pop
sub
fisubr
mov
popf
cwde
pop
jbe
loope
sbb
mov
(bad)
pusha
cmc
sub
in
push
ret
(bad)
setle
xchg
push
jae
or
cmps
and
dec
out
je
adc
repz
cmovbe
out
into
pop
hlt
jne
das
sub
or
lods
fcmovnu
hlt
mov
cmp
cmp
stos
jle
adc
in
adc
sbb
fisttp
push
test
(bad)
xchg
jbe
icebp
dec
ja
mov
dec
aam
call
rol
mov
in
sbb
aam
(bad)
inc
nop
imul
cmps
imul
mov
test
jp
push
sub
sbb
shl
aam
add
std
xor
popa
stos
mov
pop
ins
fsub
cmps
ja
mov
or
vpavgw
aad
push
sti
mov
bound
mov
pop
adc
aas
mov
and
mov
xchg
ss
iret
pop
(bad)
stos
cmc
(bad)
dec
(bad)
ja
jle
inc
jg
dec
mov
in
or
imul
imul
cdq
loop
fimul
(bad)
jp
pop
ins
cdq
jge
scas
and
fnstcw
fs
push
jp
jp
push
sub
(bad)
popf
imul
mov
xchg
jns
mov
(bad)
mov
sub
sub
pushf
dec
cmp
sbb
rol
cmp
push
enter
sbb
lods
pop
push
cli
mov
cwde
fs
sar
jb
cmps
or
aaa
and
loopne
jo
test
test
ins
das
cdq
mov
mov
add
inc
addr16
xchg
repnz
jno
jnp
adc
mov
add
idiv
adc
xchg
or
mov
mov
pcmpeqw
cmp
xchg
inc
ret
dec
repnz
repz
out
aad
xchg
and
leave
jecxz
stc
xchg
out
mov
div
iret
in
cmp
or
aam
push
add
cdq
mov
mov
add
lahf
daa
inc
mov
sbb
xchg
sbb
xchg
cwde
into
pop
and
push
pop
mov
aaa
dec
sbb
xor
cs
xchg
icebp
xchg
loopne
mov
cdq
je
dec
test
jmp
outs
pusha
cld
jae
pusha
xchg
cmps
les
int
and
in
add
jbe
div
inc
jne
mov
out
sbb
push
pop
sbb
mov
shl
push
mov
ds
std
cmp
lods
mov
pop
sub
jb
sub
adc
daa
je
aad
xor
add
cmp
and
imul
repz
or
add
fwait
jmp
lods
dec
fdiv
add
xor
outs
adc
xor
xchg
in
dec
pushf
add
mov
aad
into
fs
shl
jnp
mov
hlt
sbb
repnz
hlt
in
mov
and
cmp
outs
bound
addr16
test
mov
and
repnz
mov
in
dec
lock
add
push
dec
xlat
enter
pop
jnp
or
test
jle
adc
adc
test
daa
pop
xchg
addr16
jno
jl
xchg
int
xor
lds
pop
and
mov
call
mov
jno
mov
rol
call
test
and
ret
sub
xor
xchg
push
sub
loopne
pop
sbb
movs
push
in
stos
or
adc
call
sbb
xchg
rcr
xchg
pop
sbb
dec
mov
dec
mov
(bad)
xchg
sbb
xchg
sbb
cwde
push
pusha
movs
mov
(bad)
push
push
or
sbb
lods
fnsave
aaa
xor
call
in
loope
add
cmp
sbb
and
pop
sar
pop
test
mov
pop
lock
pusha
std
adc
xchg
repnz
mov
inc
mov
adc
daa
cmp
(bad)
aad
jbe
xchg
int3
fnstcw
lea
call
ret
fbstp
rcr
ds
dec
dec
loop
std
adc
add
(bad)
test
(bad)
mov
mov
fsubr
sub
push
call
inc
or
(bad)
(bad)
mov
inc
ret
ret
adc
and
inc
pop
cmc
ret
adc
and
pushf
mov
xchg
mov
add
das
test
xor
clc
push
and
sti
cmps
pop
mov
push
dec
and
call
dec
jl
(bad)
jb
jmp
popf
lahf
loop
add
test
mov
call
jmp
push
(bad)
or
mov
jp
push
fcomp
cs
int
clc
xchg
xor
jb
rol
sub
out
sub
inc
inc
xor
cwde
mov
icebp
ss
ror
ret
or
add
lea
inc
movs
rcr
pop
cmp
lods
inc
inc
inc
(bad)
rcl
test
sub
lea
mov
dec
imul
in
mul
test
in
stos
repz
cli
jle
mov
sbb
or
outs
mov
pusha
stc
sub
dec
call
inc
push
stos
stos
xchg
out
pop
or
lea
jo
mov
mov
aas
dec
jae
(bad)
mov
movs
popa
sbb
fidiv
jne
dec
ret
push
std
(bad)
xchg
fstp
outs
aam
xchg
test
add
sbb
adc
repnz
mov
cmp
jns
dec
icebp
push
fwait
mov
into
mov
mov
and
pop
adc
retf
aas
cmp
(bad)
push
dec
fnstsw
mov
and
cmp
cdq
pop
or
push
ja
lds
sbb
sub
mov
push
mov
adc
xchg
cld
mov
mov
cli
and
pop
or
xchg
mov
lds
retf
adc
div
in
inc
sar
and
loope
lea
das
sbb
jne
outs
int3
xchg
clc
xor
pop
(bad)
add
mov
and
fistp
mov
add
xor
dec
ficom
scas
fwait
sub
inc
sub
stos
dec
mov
ins
dec
xchg
pushf
enter
push
rol
(bad)
mov
test
imul
inc
push
push
pop
or
gs
out
pop
push
jbe
movs
or
push
(bad)
test
xor
dec
arpl
jmp
cdq
mov
and
inc
in
les
add
mov
xor
adc
or
into
scas
cmp
outs
dec
(bad)
fsub
or
shr
and
mov
call
aad
test
(bad)
inc
(bad)
rcr
push
(bad)
xor
xchg
dec
mov
mov
loopne
and
or
push
mov
rol
into
stos
xchg
daa
ds
push
mov
cs
cmc
sub
or
pop
mov
sbb
shl
inc
je
sahf
mov
aas
and
es
sbb
mov
cmp
xchg
mov
push
cmps
xor
mov
mov
stc
push
jne
fimul
fcomp
out
pop
mov
mov
aad
(bad)
mov
mov
arpl
mov
xchg
shl
push
or
outs
repnz
sub
push
cdq
dec
fwait
adc
xlat
lock
mov
add
xchg
arpl
pop
push
and
clc
cmp
cwde
jbe
aam
pop
or
stos
pop
dec
popf
shl
mov
mov
shl
jne
scas
nop
outs
sub
je
and
adc
xor
ss
call
xchg
lds
test
adc
out
in
and
push
mov
(bad)
cli
jns
ja
or
mov
mov
pusha
jmp
jge
neg
mov
shr
and
call
jp
or
cmp
mov
cmp
xor
icebp
pop
ret
outs
sar
les
arpl
mov
xor
in
sbb
pop
xor
inc
es
mov
xor
jae
movs
mov
mov
popf
inc
les
cwde
cmp
(bad)
cmc
or
adc
mov
mov
fst
xchg
sbb
cmp
push
or
mov
std
xchg
xchg
out
ret
mov
mov
adc
xchg
dec
ds
mov
int
xchg
mov
arpl
and
mov
mov
out
sahf
cmp
push
sbb
test
pushf
pop
adc
pop
xor
xor
jbe
(bad)
into
jns
test
inc
aam
push
pusha
xor
retf
int3
bound
cdq
sub
adc
jae
push
into
pop
pusha
mov
fs
imul
mov
sahf
pop
jno
inc
(bad)
cmc
mov
or
jo
push
bswap
std
push
loop
sbb
mov
sbb
inc
lods
adc
and
pop
arpl
mov
in
dec
or
cmp
mov
pop
xchg
cli
sbb
adc
fwait
aam
lods
push
(bad)
not
mov
aaa
sahf
out
mov
imul
jb
test
(bad)
xor
data16
call
or
icebp
mov
js
xor
mov
mov
and
jecxz
sub
or
lods
rcl
movs
fsubr
jnp
loopne
retf
push
shr
xor
aad
pop
(bad)
ffreep
out
and
inc
icebp
jle
or
jns
ret
mov
sub
std
ds
addr16
out
ret
mov
sbb
pushf
xchg
(bad)
loopne
jmp
push
(bad)
hlt
push
jl
fwait
cmps
push
(bad)
cld
dec
cmc
pop
rol
pop
stos
and
lds
mov
shl
das
and
xchg
mov
mov
sbb
inc
test
dec
sub
inc
int3
xchg
out
ds
or
xchg
pop
imul
inc
pop
es
loope
in
imul
xor
sahf
adc
scas
pushf
xor
mov
sub
or
into
mov
out
movs
adc
(bad)
in
inc
xchg
cmp
cmps
(bad)
mov
int3
ret
dec
fstp
in
or
lods
arpl
cmp
(bad)
or
and
cmps
xchg
stos
rol
shl
dec
xor
outs
jo
add
cld
retf
rcr
pop
and
neg
and
clc
mov
xor
cmc
cmp
imul
or
mov
sahf
or
pusha
jne
push
cmp
push
mov
or
aam
pop
stos
push
xchg
into
ins
mov
mov
push
loope
repz
jmp
xor
data16
push
pusha
mov
imul
pop
scas
lods
and
adc
xchg
pop
mov
div
cs
pop
pushf
loope
jns
add
or
dec
aaa
jno
int
fnsave
ins
(bad)
std
(bad)
test
mov
adc
inc
into
repnz
xor
pushf
out
dec
lea
push
ja
retf
sbb
xlat
fsub
sti
xchg
imul
cmp
(bad)
jo
and
inc
hlt
fist
inc
shl
adc
xchg
in
jp
aad
jne
cmp
mov
inc
ds
push
cmps
dec
and
fidiv
fcomip
push
cli
dec
pop
mov
daa
cmp
lods
mov
rcr
cmps
fist
mov
cwde
(bad)
fsub
enter
test
adc
clc
adc
push
sbb
add
ins
aam
inc
mov
mov
sbb
les
sbb
xchg
loopne
out
or
addr16
cmp
push
and
xchg
lock
fiadd
cli
retf
adc
out
out
mov
scas
int
xchg
leave
push
xor
and
and
ss
daa
adc
lods
std
jnp
stc
sub
imul
pop
xor
ss
sub
inc
mov
nop
stos
and
sbb
fild
cmc
or
mov
or
and
lahf
int3
dec
sub
jb
mov
int3
(bad)
adc
std
mov
add
or
dec
xor
nop
movs
jmp
scas
aas
mov
cmp
mul
test
aam
adc
mov
mov
pop
int
jl
sub
ss
jne
sbb
mov
ror
push
xlat
loopne
push
js
in
mov
xor
fistp
jl
xor
sbb
das
or
and
lods
retf
cli
pop
out
xor
mov
pop
add
les
mov
call
(bad)
jp
jo
ss
adc
in
repz
leave
mov
add
mov
add
xor
outs
(bad)
in
int
mov
pop
sti
ja
xor
je
mov
add
aas
sbb
fsub
outs
add
cld
sub
inc
dec
in
(bad)
pop
(bad)
mov
xchg
push
push
sbb
fadd
out
sbb
fdiv
jp
mov
gs
pop
out
nop
out
hlt
aad
loop
push
retf
cmc
sbb
mov
cmc
rol
lods
mov
(bad)
jnp
mov
sub
out
xchg
adc
dec
sbb
push
xchg
adc
mov
leave
push
mov
add
(bad)
(bad)
es
xchg
adc
pop
sbb
cdq
jne
xchg
sub
xlat
or
and
jmp
jns
jl
jge
dec
xchg
(bad)
jg
test
mov
or
(bad)
and
sbb
inc
repz
out
xor
adc
cmps
xchg
cs
pop
out
mov
sbb
and
xor
lods
inc
lods
and
mov
lds
jno
ja
out
xchg
or
xor
push
xor
fwait
iret
fwait
xchg
outs
cmp
jmp
dec
popa
or
icebp
push
or
push
mov
push
cmc
jmp
cdq
mov
(bad)
fdiv
test
cmp
add
lahf
xchg
loope
mov
jne
fwait
pop
sbb
dec
retf
call
shl
stc
mov
jmp
retfw
lds
jmp
clc
mov
push
call
jge
sbb
sbb
rcr
gs
add
adc
test
movs
into
and
popa
out
rcl
js
ret
sbb
rol
mov
in
jb
push
inc
call
test
jmp
mov
sub
iret
call
fmul
rcl
out
inc
das
popf
mov
adc
addr16
pcmpgtw
mov
out
fs
add
xor
loope
hlt
test
mov
ret
pop
jg
(bad)
sbb
and
ret
aas
xlat
pop
cld
sub
outs
push
enter
lahf
cmp
test
push
mov
adc
adc
sbb
rcr
sbb
xchg
dec
mov
sub
or
pop
ds
lldt
fidivr
push
icebp
cmps
addr16
sub
mov
jecxz
dec
jl
adc
adc
out
pushf
std
mov
push
xchg
adc
dec
fpatan
std
xchg
jp
popf
xor
mov
jns
jmp
push
sub
jne
jmp
add
add
inc
add
scas
(bad)
rcl
or
lods
or
fs
fisub
scas
xor
jmp
jp
loop
ror
cmp
push
jge
push
cs
out
hlt
sub
cld
(bad)
push
jbe
and
mov
les
add
xor
data16
bound
test
and
int
scas
xchg
ins
mov
icebp
shl
mov
and
add
call
fldcw
ss
ds
add
dec
inc
sti
popa
retf
xchg
idiv
repz
cmp
scas
cmc
inc
dec
pop
inc
mov
adc
lds
leave
push
jecxz
shr
xchg
mov
in
push
inc
dec
out
pushf
jmp
jno
test
inc
dec
add
loopne
(bad)
stc
cmp
sbb
lods
mov
pop
icebp
test
mov
mov
std
ins
icebp
aam
dec
cwde
sahf
out
lahf
jmp
bound
scas
xor
jns
xor
fst
(bad)
push
inc
xor
fcmovnu
jp
push
enter
addr16
push
mov
adc
pop
jmp
cld
adc
mov
push
ret
jb
mov
push
es
cmp
cmps
test
jo
xchg
jo
pop
jae
jnp
popf
ret
mov
cmp
popa
adc
ror
mov
es
retf
lds
xlat
(bad)
dec
movs
xor
aad
mov
in
inc
push
retf
aaa
jns
pop
and
jmp
fsub
jae
push
movs
inc
mov
fucom
xchg
mov
(bad)
pop
sub
or
(bad)
fcomp
pop
jmp
hlt
stos
add
jl
mov
mov
bound
and
push
adc
fdiv
data16
push
cs
dec
ss
mov
push
mov
rcl
add
dec
and
out
fist
pushf
sbb
fisttp
test
dec
std
repnz
(bad)
xor
add
aas
mov
ret
fild
movs
mov
and
cmp
pop
xor
out
repnz
bnd
call
sahf
and
cmp
fwait
mov
sub
inc
xor
arpl
cwde
cmps
push
dec
int
xor
fsubr
dec
mov
pop
cmps
outs
jo
dec
mul
out
lods
mov
imul
add
cwde
fadd
fcom
retf
cmp
movs
clc
imul
(bad)
dec
stos
dec
mov
adc
in
adc
mov
and
cmp
pop
faddp
bound
xor
sub
jge
sar
std
(bad)
jmp
test
fiadd
cdq
adc
push
xchg
jmp
xchg
xchg
das
xchg
iret
pop
jle
ror
fidiv
movs
dec
(bad)
push
(bad)
cld
call
das
mov
out
xchg
adc
cmps
test
inc
push
fsubr
fwait
and
sub
xor
dec
mov
sub
stos
mov
push
mov
ffreep
pop
cdq
icebp
cwde
clc
inc
mov
sti
arpl
(bad)
stos
or
shl
fist
cmp
pop
inc
or
nop
movs
sar
inc
mov
test
mov
and
loopne
dec
mov
aam
sar
mov
es
adc
mov
push
mov
cdq
pop
and
push
jnp
(bad)
jae
fcomp
lahf
cmp
or
xlat
mov
inc
fcmovbe
mov
lock
mov
daa
jns
in
(bad)
xchg
inc
add
dec
loopne
sahf
(bad)
pop
inc
call
inc
cmc
imul
bnd
pop
push
jl
mov
add
mov
push
jne
hlt
sbb
or
push
mov
jle
push
ficom
sbb
adc
pop
jns
inc
jg
call
and
add
mov
and
jne
push
jg
test
add
(bad)
jno
inc
lds
add
dec
dec
sub
js
enter
mov
sub
jae
test
xchg
in
addr16
out
pop
jmp
sub
arpl
das
or
push
xchg
and
push
sti
scas
popf
pop
div
mov
lods
retf
(bad)
aad
jno
mov
out
fcom
scas
add
mov
pop
pop
gs
fxch
icebp
jnp
repz
mov
adc
(bad)
inc
shr
cwde
sub
test
jbe
mov
xchg
dec
xchg
cmps
clc
or
pop
sub
sbb
or
popa
aaa
ret
lods
sbb
ins
lods
out
jns
mov
xchg
das
push
add
jecxz
or
cmp
stos
shl
jg
enter
push
repnz
sub
cmp
stc
dec
sets
out
outs
mov
cmp
fisttp
fild
add
ja
mov
shl
lods
pop
pop
fcmovnu
lods
fiadd
sbb
repz
pop
retf
in
lahf
idiv
sbb
fs
ss
mov
(bad)
rcr
pusha
mov
mov
push
mov
cmp
cs
and
in
and
cmp
dec
jmp
cmp
sbb
xor
mov
lea
imul
call
mov
and
push
push
and
in
mov
jp
dec
stos
pop
test
imul
or
cdq
lods
ss
sar
or
cmp
(bad)
xchg
dec
sbb
test
jb
dec
add
xchg
and
and
mov
adc
hlt
jae
cmc
push
das
addr16
fadd
jno
fistp
push
nop
imul
(bad)
xchg
std
mov
imul
lock
sbb
mov
out
cli
bound
jle
adc
ja
(bad)
pop
inc
(bad)
or
adc
or
test
adc
cmp
dec
push
sbb
jmp
(bad)
push
(bad)
in
add
push
iret
repz
in
pop
ins
rcr
or
dec
xlat
not
sahf
push
call
mov
dec
lahf
and
lds
dec
daa
mov
pusha
test
es
in
and
sar
fnstenv
arpl
jns
jecxz
dec
add
pop
out
stc
stos
les
and
jno
popa
mov
lods
(bad)
aaa
cmc
in
daa
test
nop
add
dec
sub
pop
pop
xchg
lahf
rol
lods
sub
mov
pop
cmc
mov
(bad)
push
loope
inc
adc
jmp
call
test
mov
fistp
add
mov
imul
jge
je
hlt
arpl
xchg
and
cli
int3
imul
lahf
pop
dec
(bad)
imul
arpl
push
inc
pop
jo
out
ins
loope
or
icebp
pop
jnp
imul
jno
jno
mov
sub
in
sbb
aad
std
jns
inc
adc
inc
mov
and
cmp
and
je
cs
push
cli
fcomp
ror
mov
jecxz
sbb
mov
add
aas
stos
imul
jb
call
retf
add
lods
cmp
jnp
repnz
dec
mov
xchg
mov
outs
or
mov
jmp
mov
dec
add
push
(bad)
out
jecxz
int3
popa
aaa
data16
in
inc
lods
fld
test
jno
push
push
cmp
xor
sub
sub
cwde
out
stos
adc
out
loopne
ret
sbb
mov
stos
popf
cli
imul
test
rcl
and
cmps
pop
mov
pop
sahf
dec
jmp
add
pop
jmp
pusha
push
inc
adc
loope
jle
mov
(bad)
push
rcl
cmps
inc
arpl
out
jecxz
jmp
dec
push
mov
mov
repz
jge
pushf
pop
movs
shl
retf
pop
xlat
dec
mov
repz
dec
xchg
out
fild
inc
aaa
dec
or
jmp
out
mov
int
shr
js
add
jmp
int3
jmp
or
icebp
stos
jge
aad
adc
mov
popf
js
jns
dec
xchg
cmp
fsub
scas
cmp
out
jl
stc
jmp
push
fisub
jnp
pop
jge
outs
aad
adc
push
dec
sub
jp
mov
mov
and
fwait
sub
dec
repz
cs
fmul
jl
stc
add
das
dec
clc
xchg
jl
sub
xor
pop
pop
ja
push
jle
popf
jnp
je
mov
cmp
int
pop
sub
push
and
imul
cmp
pushf
jb
adc
jne
sbb
pusha
mov
xor
mov
xor
test
jge
pop
add
mov
rol
mov
pop
pop
in
jecxz
jnp
sub
xor
in
popf
dec
mov
pop
add
dec
int3
jns
into
mov
push
lahf
nop
xchg
dec
stos
retf
pop
into
push
scas
cmp
sti
repz
pop
fwait
(bad)
js
xor
sub
sti
(bad)
sti
sub
sbb
mov
out
and
int3
pop
sbb
out
int
fimul
shl
cmp
and
out
in
xchg
loopne
xchg
cmp
jg
in
daa
mov
jecxz
add
mov
mov
retf
sub
clc
jmp
test
loope
and
mov
(bad)
nop
dec
sub
adc
loop
adc
ins
xor
xor
inc
jo
xor
das
push
adc
test
in
push
xchg
cmp
sbb
mov
mov
cmp
sbb
(bad)
sub
push
cmp
sti
sahf
dec
ret
inc
fcomip
inc
into
sti
stos
ror
outs
xor
call
mov
test
in
div
or
aam
aad
push
retf
push
dec
arpl
pop
mov
loope
jp
gs
jns
push
or
lahf
pop
pop
push
mov
inc
ret
hlt
imul
adc
int3
cmp
mov
cmps
push
iret
test
hlt
jge
mov
jp
pusha
test
iret
sbb
mov
inc
cmp
int3
xchg
cwde
mov
lea
jl
shl
xchg
mov
fsubr
jnp
(bad)
cmp
out
in
and
push
pop
pushf
ret
push
fcmovu
nop
dec
push
cmp
dec
and
add
inc
xchg
fdiv
pop
pop
cmp
and
frstpm(287
cld
js
pop
das
add
jmp
cwde
xor
mul
loope
jae
push
xor
popa
test
loopne
sahf
xchg
jmp
inc
jge
xchg
sbb
ins
loope
rcr
stos
lock
outs
rol
mov
loop
dec
xchg
js
int
nop
pop
in
in
push
lock
pop
int
enter
ds
add
push
lea
iret
inc
adc
dec
mov
ja
jbe
xor
add
cmps
sub
adc
jg
dec
sti
cmp
mov
or
sub
push
cmc
shr
sbb
mov
fwait
test
fadd
call
or
mov
dec
cmp
adc
mov
pop
mov
gs
jb
cmp
cmps
mov
data16
(bad)
inc
shr
rol
mov
jge
xchg
ds
xchg
jl
jno
call
adc
ficom
fstp
mov
add
cmp
push
clc
not
popa
jl
cld
or
mov
(bad)
cmp
add
xchg
(bad)
mov
repnz
daa
push
leave
cmp
jmp
mov
nop
adc
mov
(bad)
shr
jecxz
adc
dec
xor
cdq
fild
pop
iret
mov
cmp
sub
test
add
sbb
cmps
sub
mov
shl
stos
add
fs
sar
arpl
add
clc
xchg
pop
enter
sub
push
mov
data16
addr16
fimul
jmp
je
or
stos
adc
shl
inc
stos
shl
inc
push
pop
lods
sbb
out
cmp
clc
ss
mov
push
push
pusha
ins
push
add
mov
sbb
retf
xchg
sbb
sbb
pavgw
jmp
sub
push
popf
adc
js
inc
sahf
sbb
pushf
and
push
mov
mov
sahf
inc
inc
repz
push
or
std
fs
and
hlt
xchg
inc
icebp
pusha
shl
and
ja
sub
fwait
out
mov
in
pop
cld
dec
les
or
mov
call
lods
cld
xchg
(bad)
cmp
je
xchg
dec
push
rol
ret
cmp
jno
mov
lock
shl
movs
nop
pop
test
add
mov
push
gs
adc
leave
fwait
ins
or
push
mov
iret
mov
leavew
or
movs
loopne
mov
mov
enter
lock
(bad)
jl
ror
push
xchg
add
sti
retf
dec
push
gs
xchg
loope
xchg
push
cmp
fcom
push
jb
ss
jb
push
jl
push
push
jno
icebp
loope
(bad)
jge
sahf
shl
aaa
std
ret
gs
retf
rcr
lods
or
in
lock
pop
sahf
mov
push
in
xor
mov
jmp
mov
idiv
das
in
dec
cs
mov
inc
mov
jne
push
push
lds
hlt
push
inc
adc
dec
xchg
or
push
add
lods
retf
add
ss
push
mov
in
loopne
add
mov
test
add
xchg
add
fldcw
mov
test
mov
stos
push
mov
cmps
jno
loop
push
in
adc
and
iret
and
cmp
inc
pop
mov
jg
rol
das
mov
pop
cmp
call
mov
lds
scas
jp
idiv
push
cwde
mov
(bad)
adc
push
bndldx
mov
pop
stos
and
iret
jp
dec
enter
in
mov
das
pop
addr16
pop
call
aaa
retf
push
clc
sub
or
mov
xchg
mov
addr16
int3
scas
jmp
test
inc
sub
inc
loope
xor
fs
rcl
inc
int3
scas
test
xchg
adc
xchg
js
ins
jno
jge
and
es
scas
and
dec
fs
stos
popf
stc
push
jmp
(bad)
es
cmp
sbb
les
push
iret
mov
sbb
cmp
jb
sbb
mov
test
rcl
xchg
imul
cmp
jmp
aam
(bad)
loopne
outs
xor
repnz
loopne
mov
pusha
shr
cmp
ret
xor
pop
inc
out
mov
ret
out
jne
cmps
movs
lea
dec
aam
dec
mov
fs
sbb
mov
inc
pop
jmp
sub
loope
xchg
in
iret
fwait
and
pop
add
leave
and
fcomi
dec
stos
mov
stos
cmps
xchg
rol
retf
lods
dec
in
push
and
aas
push
jmp
shl
xchg
hlt
xchg
lods
mov
cwde
push
pop
lods
out
stc
imul
in
push
cld
loop
aaa
(bad)
loope
jp
mov
(bad)
inc
dec
jge
cmp
cmps
test
dec
mov
lds
xchg
xchg
(bad)
cmp
mov
sub
loop
lods
or
mov
imul
mov
sahf
mov
mov
sti
mov
jne
ret
loope
cdq
mov
adc
repnz
gs
retf
cwde
cmc
(bad)
sti
and
mov
sbb
xor
call
lea
call
xchg
outs
cwde
add
push
daa
mov
and
xchg
popf
inc
inc
mov
jmp
fst
xchg
pop
mov
je
je
fld
push
cmp
xchg
jl
out
xchg
push
mov
iret
pop
(bad)
push
xor
mov
ja
sbb
repz
mov
out
mov
mov
loop
mov
lods
stos
mov
mov
xor
pop
stos
outs
xor
stos
fs
pop
jg
cmp
cmp
inc
fcomp
js
(bad)
mov
mov
sbb
cli
sbb
cdq
enter
mov
stc
push
ja
clc
jnp
dec
pop
mov
imul
(bad)
push
lea
jae
pop
jns
jb
outs
xchg
(bad)
sbb
sbb
shr
pop
xchg
fsub
aaa
and
xor
sbb
jp
cld
push
fs
(bad)
adc
nop
(bad)
test
(bad)
(bad)
dec
xchg
cdq
mov
mov
or
push
aaa
sbb
adc
bound
les
ret
cmp
mov
fistp
sbb
pop
pop
jnp
sbb
daa
out
int3
mov
xor
loopne
inc
lods
cmp
cmp
(bad)
xchg
adc
popa
jl
xor
sbb
mov
add
pop
xchg
clc
in
mov
inc
cmp
loop
add
dec
jmp
mov
jmp
retf
mov
iret
mov
or
jns
sub
xlat
dec
call
mov
sbb
xor
inc
div
pop
mov
ror
jl
lahf
push
mov
fs
cdq
mov
mov
call
or
loop
addr16
iret
pop
inc
add
in
add
rcr
dec
or
mov
sbb
adc
jbe
add
data16
(bad)
xchg
pop
add
fucomp
pop
stc
es
and
jecxz
jno
pushf
mov
mov
cld
inc
jno
not
int3
cmp
sub
jnp
(bad)
xchg
(bad)
retf
shl
xchg
test
outs
cli
or
clc
into
mov
jmp
xchg
popa
push
mov
bsr
cmc
bound
and
fimul
(bad)
xor
icebp
arpl
sbb
es
add
sbb
and
xor
aaa
jg
fist
scas
ror
dec
ret
and
mov
popw
or
mov
jns
fist
mov
lahf
xor
or
enter
imul
stc
pop
pop
pop
scas
xor
stos
xlat
iret
adc
scas
loop
dec
mov
ds
add
fdiv
sub
in
mov
enter
cld
pop
inc
mov
mov
pop
push
icebp
cmp
cld
int3
std
push
inc
push
fild
scas
data16
shr
dec
shl
imul
jp
push
(bad)
xor
pop
stos
ret
xor
loopne
out
not
jae
push
adc
stc
les
je
jmp
mov
mov
cmps
loope
xor
retf
fyl2x
mov
in
inc
cs
movs
rol
and
xor
jo
mov
sbb
and
jae
movs
in
sub
les
lds
mov
xchg
in
pop
sbb
les
mov
fcmovb
rcl
push
fcmovb
neg
xor
div
adc
cmp
jnp
push
and
cmps
lods
(bad)
and
std
xchg
es
aas
sub
fst
jnp
cmp
mov
out
pushf
sbb
pop
ds
or
dec
pop
shr
ss
mov
cmp
sub
icebp
lea
sub
dec
pop
pop
jno
scas
mov
add
mov
or
mov
add
add
(bad)
ret
and
inc
daa
inc
cmp
idiv
ins
(bad)
and
dec
mov
outs
test
movs
xchg
js
xor
inc
in
adc
mov
mov
push
xchg
xchg
xchg
test
lock
push
sbb
(bad)
jo
jmp
je
sbb
adc
mov
fsubp
cld
(bad)
push
data16
sahf
and
sub
aas
mov
mov
inc
ficom
lods
retf
dec
addr16
jg
mov
adc
xchg
dec
lahf
movs
into
ret
push
xabort
dec
mov
adc
loope
dec
and
add
xor
mov
pcmpgtd
push
push
jmp
dec
outs
mov
pop
mov
and
movs
mov
ss
arpl
xor
adc
mov
mov
or
mov
push
xchg
jo
inc
add
add
ins
scas
ror
jmp
scas
call
mov
adc
loop
xchg
inc
or
test
sub
in
push
cmp
lahf
xor
push
sub
and
xchg
retf
jbe
sbb
movs
push
push
inc
lea
push
mov
hlt
or
adc
push
inc
movs
and
cs
xor
push
and
sub
loope
dec
push
retf
xchg
mov
or
pop
pop
ds
sbb
push
xchg
xchg
mov
inc
repnz
fwait
movs
ja
aaa
cwde
and
scas
aas
sar
iret
mov
shr
sub
xchg
jns
dec
inc
xchg
pop
in
and
push
enter
scas
jb
dec
fnstsw
xor
adc
inc
jp
xchg
int
jno
xor
cmps
dec
mov
iret
sahf
xchg
into
xor
mov
cld
out
cmp
mov
shl
loop
test
or
rcl
and
pop
pop
inc
push
scas
cmp
(bad)
and
call
pop
fwait
ins
xor
aam
jl
xchg
xchg
arpl
loope
pop
mov
cmp
sar
jle
shr
and
(bad)
jge
addr16
cwde
push
shl
lds
dec
sbb
inc
and
sar
mov
repz
pop
out
dec
pushf
stc
sub
inc
push
cmp
cmp
adc
mov
(bad)
test
inc
xchg
ins
lahf
xchg
loop
jle
hlt
je
stos
inc
std
ret
jnp
xlat
and
mov
(bad)
div
test
out
fsub
pop
rcl
pop
sub
jo
ret
lods
fist
int
pop
sub
popa
push
lahf
xchg
jle
ins
mov
add
mov
aaa
xchg
xchg
xor
and
jp
outs
cmp
xor
out
pop
cmp
push
jl
fnstenv
in
dec
movs
xchg
rcr
and
loopne
adc
adc
call
(bad)
dec
jne
inc
xor
es
das
push
scas
mov
xor
add
mov
inc
push
jb
jmp
dec
aaa
inc
shl
jns
xor
imul
sti
(bad)
scas
xor
sub
test
leave
bnd
jmp
fs
adc
jmp
dec
sub
dec
push
add
push
div
or
cmp
dec
sahf
mov
push
scas
push
xchg
jbe
pop
adc
enter
loopne
test
inc
adc
xlat
jb
movs
fcmove
sbb
addr16
push
inc
pop
mov
popa
mov
out
sbb
xchg
repz
test
fld
adc
aad
mov
xor
mov
sbb
add
fsub
jg
(bad)
(bad)
fisubr
cmps
xchg
pop
jne
call
ror
cli
push
jns
dec
sub
dec
fdecstp
mov
and
clc
nop
push
cmp
xor
aas
mov
pop
mov
or
and
jae
cmp
or
mov
imul
int
(bad)
mov
fdiv
pop
ds
or
pop
push
movs
jbe
mov
seta
or
bound
push
mov
out
push
sub
mov
movs
pusha
aam
mov
and
loope
loope
pop
or
mov
cmp
inc
lock
dec
or
fnstenv
(bad)
mov
add
sbb
sub
pusha
jnp
ins
in
call
into
in
xchg
push
or
inc
test
fldenv
inc
pusha
std
pop
inc
adc
fs
sub
mov
or
xor
aaa
aaa
cli
mov
popf
js
mov
mov
adc
fist
(bad)
scas
mov
sub
sub
jno
aaa
push
add
pop
mov
call
aaa
push
ss
jnp
out
and
sub
adc
cmp
xlat
out
add
sbb
add
movs
repnz
test
pop
(bad)
mov
inc
jo
or
loope
mov
js
push
add
push
ficom
dec
push
jecxz
and
mov
(bad)
mov
xchg
in
mov
sub
adc
or
rcr
sub
fdivr
test
loop
test
mov
loope
push
xor
and
sahf
out
in
mov
sbb
jmp
(bad)
fdiv
shl
mov
dec
hlt
xor
lea
jle
mov
add
into
mov
aam
test
fisub
inc
pushf
sub
add
repnz
sub
stc
mov
fst
gs
test
fcmovnb
je
movs
mov
adc
mov
xchg
loope
ins
mov
xchg
cmps
push
cwde
mov
dec
xchg
mov
and
mov
cmp
sbb
push
hlt
movs
cmp
stos
cld
add
cwde
jl
aas
mov
pop
mov
pop
sahf
jae
fdivr
dec
movs
iret
add
cmp
mov
ss
ss
bound
dec
cdq
(bad)
xchg
(bad)
jle
sbb
jmp
jecxz
xchg
jae
sub
arpl
dec
rcr
lahf
mov
mov
stc
neg
rol
shl
das
xchg
adc
dec
add
push
nop
sbb
imul
fsubr
inc
mov
loopne
push
iret
push
xor
pop
lods
fsubr
xor
(bad)
pop
pop
jno
mov
test
sub
es
push
repz
mov
pop
mov
mov
cmp
rcl
sbb
lods
push
aaa
push
cli
hlt
div
out
cld
cdq
fabs
test
push
inc
mov
icebp
or
outs
shl
dec
jl
loop
repnz
add
mov
sti
and
lods
jnp
or
jle
data16
int
and
pop
movs
rol
sub
movs
inc
ret
dec
pinsrw
xor
sbb
addr16
leave
stos
in
and
stc
ret
push
push
stos
add
or
xor
push
jno
jbe
iret
pusha
pop
sub
dec
(bad)
push
xchg
call
add
jge
sar
ins
stos
ror
cmp
xlat
mov
ins
test
fld
mov
dec
inc
fnstcw
mov
nop
jne
fist
jno
pusha
inc
fistp
lock
shl
and
ins
push
fs
sbb
leave
mov
pop
or
lea
enter
ret
push
jns
sub
cmps
test
push
retf
sub
push
retf
aam
mov
cmp
push
(bad)
push
inc
adc
xchg
bound
and
jo
jmp
jae
imul
adc
fnstenv
ret
jmp
pushf
hlt
(bad)
cwde
add
mov
rcl
test
int3
dec
mov
sbb
enter
stos
inc
mov
ss
pusha
and
pop
push
mov
(bad)
cmp
jne
cwde
sub
sbb
jmp
dec
push
test
call
adc
inc
pop
in
(bad)
sub
stos
mov
add
call
into
cmpxchg
sbb
cld
xor
cwde
inc
add
xor
std
(bad)
jmp
jp
and
(bad)
rcr
lods
aam
push
das
(bad)
jl
stos
pop
test
pop
push
mov
xor
jnp
xchg
pop
stc
repz
mov
(bad)
push
icebp
loope
xlat
cmp
call
adc
push
add
xchg
or
add
(bad)
xor
icebp
cmp
and
push
inc
popa
cmp
xor
push
psllq
icebp
loop
ror
repnz
and
out
inc
sub
mov
(bad)
pop
xor
in
aas
mov
pusha
or
push
rol
int
mov
call
or
mov
jnp
shr
xor
add
pop
(bad)
mov
and
ror
or
(bad)
push
pop
int3
sub
adc
cld
in
push
(bad)
aaa
retf
and
dec
(bad)
pop
cmp
mov
jbe
inc
xchg
push
pop
cwde
push
cmp
hlt
pop
mov
aas
pop
ins
mov
sub
sub
sbb
dec
(bad)
jmp
mov
xor
aaa
sti
jne
or
cmp
int3
jecxz
ret
xchg
loopne
test
mov
movs
fisubr
push
ins
dec
outs
jne
lea
cmps
cwde
frstor
inc
rcl
sub
cmps
pusha
mov
pop
mov
ja
test
or
lds
outs
jp
stos
int3
mov
push
adc
lock
retf
je
push
add
test
out
sbb
mov
imul
adc
add
cmps
mov
inc
retf
sub
cmps
ret
outs
jns
aam
hlt
ja
icebp
sub
mov
jg
popa
or
or
pop
pushf
mul
lods
xchg
rcr
mov
mov
jnp
jg
mov
ins
xchg
in
sbb
(bad)
push
fcomp
jnp
ret
les
mov
dec
inc
mov
inc
int
outs
fsubrp
cli
jmp
outs
xchg
pop
leave
add
mov
shr
pop
aas
add
pop
imul
test
jae
jecxz
jns
pop
arpl
pop
push
ds
jl
mov
mov
sub
mov
pop
mov
call
rol
out
jle
cmp
out
push
retf
ss
add
add
or
jg
aas
call
sbb
in
ins
mov
jle
jno
add
lods
icebp
aad
shl
nop
sahf
int3
and
and
mov
fnstenv
in
inc
fprem
jmp
ins
push
jbe
mov
ret
xchg
push
push
in
jnp
jg
out
jo
out
pop
test
cmp
repz
and
in
aad
(bad)
das
repnz
fs
sub
mov
cmps
sub
or
out
xchg
ret
shl
cmc
out
xchg
or
cmc
rcr
jmp
xor
inc
test
inc
ja
mov
scas
cmp
jae
test
mov
in
stos
push
popa
adc
es
test
jge
lock
or
js
inc
dec
out
dec
xchg
or
int
rol
lock
xchg
mov
lds
(bad)
dec
pop
icebp
or
and
push
dec
add
ror
add
js
dec
aam
mov
mov
out
jne
in
fstp
xor
xchg
test
and
pushf
and
sbb
mov
daa
inc
jp
jmp
cmps
xchg
popf
in
in
popf
retf
sbb
cmp
inc
shr
push
add
pop
and
daa
push
and
xor
jmp
jg
jmp
cli
xchg
lea
call
cmp
cmps
jmp
out
xor
movs
add
stos
je
fistp
call
shr
mov
sub
xor
mov
fisttp
fldenv
adc
push
cmp
inc
pop
pushf
push
adc
scas
mov
aaa
daa
xchg
fstp
cmp
sub
scas
arpl
lock
mov
sti
fs
pop
pusha
sbb
mov
fiadd
inc
aaa
add
sub
pop
ins
cmp
sbb
imul
push
pause
jae
out
enter
dec
mov
loopne
stos
and
jns
push
lds
stos
add
outs
mov
ficomp
ficomp
dec
data16
inc
sbb
mov
mov
in
sub
pop
pushf
stos
or
shl
sbb
dec
mov
and
sbb
(bad)
dec
sub
mov
mov
dec
pop
ret
ja
repz
pop
xchg
mov
and
push
jle
mov
sub
div
dec
sbb
lock
fcomip
(bad)
xor
push
sbb
mov
aaa
ds
pop
(bad)
nop
jmp
outs
pop
or
sbb
ficom
add
mov
mov
outs
or
push
ins
adc
adc
mov
adc
mov
jmp
retf
addr16
jbe
adc
les
dec
jae
adc
ret
in
(bad)
rcr
push
daa
sbb
lock
fild
popf
lods
cmp
jle
push
pop
inc
mov
test
mov
imul
ja
dec
(bad)
cwde
imul
inc
ins
frstor
bound
pushf
imul
mov
jbe
shl
xchg
mov
pop
or
call
jmp
add
loop
nop
and
js
cmps
or
(bad)
jmp
mov
pop
dec
and
bound
or
(bad)
push
mov
fs
mov
adc
sub
cmps
scas
addr16
dec
arpl
pusha
xchg
fild
scas
fidiv
ret
stos
leave
sahf
dec
cdq
fsub
inc
stc
add
cmp
jnp
push
aaa
cs
(bad)
cmp
mov
cmp
xor
(bad)
push
(bad)
and
jne
(bad)
call
rcl
sbb
push
int3
stc
push
jb
dec
repz
xchg
sub
pop
mov
dec
imul
mov
jmp
pop
xchg
retf
adc
mov
les
jnp
(bad)
minps
mov
add
pop
push
sub
scas
mov
jae
inc
arpl
sub
dec
xlat
jb
icebp
jmp
out
jo
stos
mov
fimul
mov
jbe
or
jmp
das
mov
push
test
enter
add
cli
jmp
xchg
int3
jmp
(bad)
mov
outs
div
outs
ror
loop
fisubr
xor
call
cmps
sahf
cs
and
dec
retf
sub
mov
adc
mov
jecxz
push
sar
and
shl
inc
inc
imul
div
dec
sub
call
ror
push
adc
mov
fcom
out
in
les
pop
icebp
pop
dec
rcr
js
push
jne
xor
imul
mov
dec
mov
sbb
jb
mov
mov
inc
int
pushf
mov
cmc
cmp
jp
pop
push
stc
push
adc
js
ja
jno
cmps
in
clc
xor
pop
(bad)
cdq
popf
xchg
lods
xor
cmp
mov
mov
mov
add
and
repz
push
inc
retf
inc
std
aad
fdivr
sbb
xchg
mov
pop
bound
nop
sub
ror
iret
xchg
mov
push
inc
or
add
pop
adc
and
cld
adc
in
cdq
mov
ins
loop
push
sti
sbb
cwde
dec
mov
fild
pop
and
pop
adc
push
xchg
inc
jp
push
popa
cli
mov
sbb
mov
jbe
add
test
bound
jmp
pop
jge
xlat
out
dec
xor
mov
jae
leave
icebp
int
test
popf
mov
fbld
and
repz
dec
mov
and
(bad)
jecxz
sbb
in
lock
clc
clc
sbb
mov
and
push
imul
lods
test
or
jbe
mov
stos
pop
push
imul
xor
pop
pop
stos
jp
sbb
sub
add
popa
push
outs
mov
dec
aad
jmp
cmc
loopne
mov
add
xchg
stc
push
fnsave
icebp
or
mov
pop
pop
and
call
and
and
sub
jns
add
add
mov
inc
or
cmp
into
mov
or
add
outs
mov
imul
jp
in
in
cmp
imul
ret
call
pop
cmps
in
stos
pop
mov
pop
or
mov
and
jae
push
imul
mov
pop
mov
outs
std
fisubr
mov
sub
add
mov
pusha
adc
push
xlat
ds
push
push
bound
leave
xor
push
aaa
jns
std
jns
div
outs
cmp
ins
pop
and
stc
call
stc
loopne
loope
inc
push
and
retf
retf
lock
xor
icebp
sub
xor
cmps
fcom
cmp
push
fmul
rol
das
push
test
cmp
cmps
out
stc
inc
sahf
leave
gs
dec
fidivr
cmps
bound
fdiv
push
inc
jecxz
mov
data16
loopne
int
ficom
lds
iret
xchg
jns
jnp
aad
add
jl
mov
pop
loopne
into
sbb
sbb
inc
cmp
cs
pop
adc
adc
pop
push
lock
gs
stos
jmp
dec
pop
leave
test
cmc
nop
cmps
ja
retf
mov
std
lods
jmp
(bad)
popa
xchg
fiadd
out
aas
xchg
add
push
and
pop
cmps
fisubr
fs
mov
jo
inc
and
(bad)
mov
jl
lahf
or
mov
nop
shl
ja
xlat
test
add
ds
call
push
dec
pop
mov
in
(bad)
pusha
xchg
in
mov
or
add
jp
and
mov
pop
mov
into
mov
mov
sub
out
mov
inc
movaps
pop
push
mov
cmp
imul
jle
leave
sar
xor
test
stos
dec
dec
mov
cmp
cli
push
or
fistp
pop
test
retf
shr
jmp
jecxz
jns
adc
out
jae
cmp
pop
lahf
jmp
xor
xchg
call
pop
adc
lea
mov
fdivr
test
out
dec
add
das
push
adc
jecxz
fbstp
pusha
jnp
push
sbb
pop
mov
fsub
sub
rcr
cmp
pushf
je
aad
and
(bad)
adc
xor
add
sbb
loope
je
mov
cli
sahf
clc
idiv
dec
movs
cld
lahf
sub
sub
cmp
pop
ret
rcr
mov
or
add
test
imul
mov
lock
in
loopne
sbb
pop
inc
pop
xchg
ins
cmps
popf
imul
lea
pop
das
enter
ret
xchg
mov
minps
cmp
and
fwait
add
iret
dec
aaa
add
pop
add
add
xchg
loope
push
mov
retf
mov
fldenv
lods
adc
out
mov
scas
pop
(bad)
adc
or
adc
mov
pop
add
mov
push
sti
push
or
call
(bad)
cmps
fs
mov
les
shl
xchg
shl
loopne
sub
pop
callw
ja
jg
mov
xchg
push
xchg
push
sbb
aaa
retf
(bad)
fmul
inc
add
xlat
or
outs
mov
(bad)
stc
mov
fwait
xchg
scas
sub
push
inc
dec
(bad)
jp
push
push
shl
cwde
pop
mov
or
cmp
xchg
retf
ja
sbb
(bad)
sbb
out
sub
add
cmp
clc
adc
inc
clc
inc
fcomp
sub
outs
call
jl
pop
gs
(bad)
sub
mov
xor
or
xor
add
mov
sar
aam
push
xchg
mov
mov
jae
pop
push
pop
xor
mov
mov
movs
(bad)
popa
stos
out
(bad)
dec
stos
mov
das
icebp
sbb
fbstp
or
fdivp
fistp
into
out
(bad)
pop
outs
xor
sbb
fisttp
and
call
dec
mov
dec
xor
xor
sub
mov
fcom
xchg
sub
iret
loopne
adc
jge
jl
(bad)
push
sahf
(bad)
and
jmp
mov
and
mov
jmp
mov
mov
scas
aas
and
scas
xor
dec
lea
cmp
or
push
xchg
jae
mov
jbe
pusha
in
(bad)
pop
xor
enter
pop
dec
xchg
int
inc
inc
mov
mov
sahf
ret
mov
jge
pop
xchg
sbb
xchg
mov
xlat
das
addr16
pushf
leave
leave
sub
(bad)
pop
pop
push
inc
in
adc
push
sahf
adc
stc
(bad)
dec
jl
sbb
sub
xor
mov
xchg
cmps
out
iret
xor
je
loope
inc
jmp
icebp
mov
pop
adc
sub
cmps
xchg
cmp
test
out
cmp
aas
retf
mov
mov
arpl
push
xor
mov
xor
aas
pop
cmp
in
fld
mov
mov
sbb
jmp
icebp
sub
lahf
mov
scas
std
leave
bound
int3
shl
xor
push
cmps
xor
push
xor
fisubr
inc
into
fidiv
adc
mov
mov
and
jmp
push
movs
mov
mov
mov
scas
hlt
mov
test
push
dec
or
in
dec
cmc
in
imul
call
mov
scas
sahf
or
xchg
or
or
fcomi
xchg
movs
cmp
push
or
loopne
mov
(bad)
in
push
inc
shl
movups
mov
addr16
mov
call
adc
adc
adc
jg
mov
into
sub
div
inc
or
outs
jno
sub
add
nop
adc
mov
inc
xor
xchg
and
jo
cmps
jge
into
mov
add
jno
sti
bound
addr16
add
std
mov
mov
(bad)
xchg
or
fdivr
cmp
ds
pop
out
stos
lock
jnp
or
mov
bound
and
movs
cmc
int
ins
pop
xchg
or
fdiv
and
jg
sub
mov
mov
jmp
lea
int
cmp
sub
sbb
lea
add
fcomp
mov
mov
dec
or
bound
mov
(bad)
ret
test
mov
or
xor
pusha
push
or
sbb
retw
dec
enter
test
loopne
out
(bad)
xor
fincstp
shr
jae
or
lahf
pop
mov
and
fcmovbe
or
dec
cmp
pop
inc
mov
cs
test
xchg
call
ror
stos
in
jg
pop
js
(bad)
int
sahf
cmp
xor
outs
inc
pop
mov
mov
out
fiadd
retf
adc
mov
mov
inc
clc
xor
fld
inc
add
lahf
inc
inc
dec
test
movs
sbb
sub
xchg
cmp
ds
mov
aad
pop
mov
(bad)
out
sub
and
xchg
das
imul
and
in
push
fidivr
push
inc
cmps
mov
sub
stos
das
repnz
rcl
sbb
or
sub
jbe
lods
inc
fldcw
dec
mov
add
or
sbb
xchg
sti
push
sbb
jmp
xchg
ja
fpatan
movs
sub
sar
out
xor
call
mov
mov
or
popa
dec
idiv
adc
sbb
scas
and
sbb
out
(bad)
leave
add
(bad)
cmp
sti
hlt
sub
push
les
push
stc
push
retf
(bad)
and
iret
sub
out
and
cmp
mov
push
xchg
test
mov
pop
mov
mov
ret
(bad)
xchg
mov
mov
cmp
and
xchg
ficom
xor
in
int
out
xor
scas
dec
mov
xchg
(bad)
shl
push
sub
(bad)
mov
cli
adc
adc
mov
inc
push
cmc
das
ins
inc
(bad)
adc
and
imul
enter
adc
cmp
cmp
adc
jle
cmps
sub
cmp
or
in
test
loopne
mov
int
popa
(bad)
mov
add
jmp
repz
push
cmp
(bad)
and
push
jmp
mov
int
pop
or
push
adc
cmps
sbb
cmp
aam
xchg
push
sbb
mov
cmp
lods
repnz
test
or
ret
(bad)
ins
das
push
popa
jnp
jecxz
pop
rcl
mov
inc
push
and
mov
leave
xchg
movs
out
sub
jp
test
ja
inc
call
and
popf
push
sub
sbb
cmp
leave
or
(bad)
adc
mov
pop
fimul
outs
and
pushf
lds
cdq
pop
dec
mov
mov
sub
cwde
hlt
outs
in
xor
ja
sub
hlt
sbb
push
jp
stos
jnp
add
jns
jmp
sbb
stos
ret
push
push
(bad)
jbe
jbe
ror
or
adc
dec
adc
ins
inc
xor
scas
adc
mov
pushf
push
cmp
loope
sub
ins
or
add
adc
repnz
jno
sbb
xor
inc
mov
push
sti
inc
and
lods
dec
rcr
inc
adc
or
int3
hlt
add
or
mov
xchg
mov
(bad)
mov
push
push
xchg
loope
mov
jecxz
jno
pop
mov
pop
not
mov
stos
jle
sbb
dec
out
add
mov
(bad)
aas
sub
mov
xchg
mov
xchg
pop
rol
xchg
lock
pusha
aad
in
sub
(bad)
cld
xor
sahf
mov
sub
push
adc
fwait
pop
pop
mov
push
add
mov
sub
int3
mov
sub
xchg
adc
adc
aad
lea
jb
pop
pop
pop
ret
push
lahf
call
fidiv
loop
idiv
les
jp
dec
mov
cdq
push
cmp
sbb
xchg
mov
adc
ror
mov
push
xor
out
pop
lods
xor
push
jecxz
out
pop
or
jmp
and
push
out
mov
mov
ins
xchg
mov
sti
rcl
lods
enter
lods
(bad)
popf
shl
sbb
dec
push
test
cli
sar
cmc
cmps
lds
ss
inc
aas
ja
cli
fist
enter
stc
popf
je
imul
and
fsub
dec
push
fistp
inc
jmp
out
movs
and
mov
or
mov
xchg
xchg
dec
ss
nop
test
xor
jg
sbb
sbb
or
mov
bound
push
or
xor
rol
fcomp
into
cdq
push
enter
push
cli
cld
and
push
sub
leave
xchg
inc
lds
sub
in
aaa
jge
or
push
push
outs
and
addr16
das
gs
call
sub
enter
jle
dec
das
mov
pop
xchg
xchg
dec
shl
xchg
jle
dec
repnz
mov
mov
sbb
pop
push
mov
sub
test
cmp
mov
(bad)
(bad)
push
adc
add
jg
cmp
xor
pop
xchg
pop
jb
jne
js
(bad)
cmp
cmp
pop
mov
xchg
bound
add
pusha
test
pop
pop
sbb
ret
fwait
xor
outs
js
and
cmp
jns
stos
cli
or
xchg
jl
outs
movs
and
xchg
lock
push
lds
xor
mov
cmp
jno
push
push
push
jg
jno
mov
hlt
dec
imul
mov
test
test
int
dec
es
add
mov
pop
imul
inc
jns
bound
mov
inc
lods
jmp
and
sub
sub
loopne
adc
lods
and
xchg
pop
push
test
or
clc
jp
sbb
aad
dec
jle
sub
ss
jl
int3
es
iret
inc
lds
je
pop
cmps
cmc
sub
jbe
lock
sub
fyl2xp1
pop
add
test
retf
xor
int
data16
fdiv
mov
mov
pop
retf
jmp
cli
arpl
pop
mov
fs
ror
push
mov
push
adc
push
sbb
mov
mov
repz
xor
push
cmps
jecxz
dec
and
mov
hlt
dec
cwde
sbb
outs
pop
xchg
pop
jp
cmps
idiv
mov
pop
int
jae
sbb
lock
ja
sub
jg
mov
sbb
js
test
push
pop
mov
jle
ins
(bad)
sbb
inc
nop
or
ret
push
in
(bad)
push
inc
mov
jo
not
jmp
jecxz
push
cmp
push
dec
and
retf
sti
xchg
cmps
add
std
sub
mov
daa
in
adc
test
pop
fnstsw
mov
dec
xchg
out
fwait
pushf
lock
std
cmp
ds
enter
push
into
aad
stos
in
dec
sub
mov
hlt
in
cmps
mov
sbb
out
pop
pop
sbb
addr16
(bad)
pop
jle
or
shr
jp
cli
adc
sub
pop
mov
les
call
push
xchg
sar
call
enter
pusha
cld
loopne
iret
cmp
cld
outs
sbb
cmc
xchg
pop
loope
jp
mov
mov
add
xchg
(bad)
push
and
mov
xor
jg
sub
lods
imul
mov
mov
jmp
rol
fisubr
sub
adc
dec
test
out
outs
jns
in
fist
adc
aas
and
adc
dec
sti
cmp
mov
cmps
mov
ret
push
test
pop
xchg
xchg
fistp
stos
mov
ror
sbb
dec
das
and
mov
test
stc
jle
cmc
xchg
imul
jle
int3
add
mov
movs
ss
pusha
xchg
out
test
loopne
ds
aad
mov
cmps
push
mov
mov
xchg
pop
lock
dec
jmp
out
test
test
sbb
loop
push
push
jbe
and
sbb
fs
movs
mov
sbb
sbb
cmps
inc
hlt
add
push
adc
outs
cmp
sbb
call
sub
xchg
or
mov
std
xor
inc
test
test
xlat
xchg
sbb
cmps
fisub
and
test
outs
push
cmp
shl
push
jb
push
div
out
addr16
int
cld
push
jmp
pushf
jecxz
ins
push
inc
cmc
xchg
clc
test
test
movs
pop
(bad)
mov
mov
pop
ds
ret
xchg
mov
and
fcom
mov
in
dec
mov
mov
into
and
push
push
ret
rol
xchg
add
repnz
xchg
arpl
dec
jle
cmp
test
cmp
mov
out
xchg
inc
pop
mov
into
test
mov
jl
sub
call
lea
outs
ja
xor
ja
in
xor
call
test
inc
pop
mov
dec
inc
sbb
mov
dec
(bad)
std
js
cwde
inc
mov
xor
ja
mov
mov
sub
shl
inc
test
out
pop
lods
imul
push
sbb
mov
mul
sub
retf
das
cmps
scas
es
sbb
pop
jmp
loopne
inc
jnp
outs
jmp
pop
addr16
loope
jmp
data16
mov
jmp
dec
sub
mov
ror
adc
mov
mov
inc
push
jp
call
addr16
jbe
(bad)
pushf
inc
cld
inc
leave
mov
cmp
sub
addr16
sub
xchg
inc
or
xor
retf
dec
repnz
cli
push
dec
retf
fs
(bad)
imul
sbb
pop
and
aad
push
dec
push
ror
cmp
jle
push
enter
ins
lods
pop
icebp
push
mov
aam
jb
xchg
iret
adc
sub
xchg
cmps
push
sahf
(bad)
mov
test
inc
cmps
xchg
call
out
bound
enter
pop
je
push
mov
loope
mov
jmp
jl
shl
leave
dec
lock
lods
jmp
fs
and
or
and
js
mov
inc
faddp
out
in
pop
cld
fist
aas
xor
and
xor
cmps
ffreep
test
pmaddwd
(bad)
neg
xchg
xchg
pop
cmp
movs
xchg
popa
or
scas
test
(bad)
push
scas
test
mov
icebp
ret
retf
icebp
push
push
lock
icebp
sahf
mov
outs
push
pop
retf
data16
push
test
mov
inc
bound
xor
jmp
fs
int3
aas
idiv
add
push
xor
pop
add
sub
add
sbb
shl
pushf
sbb
ds
add
add
xor
out
in
push
(bad)
adc
jle
sub
out
pop
pop
aad
push
call
bound
jns
repz
ins
jecxz
and
jg
sub
test
ds
out
mov
add
je
ins
sar
rcl
inc
push
(bad)
shl
jmp
push
sbb
jge
mov
xchg
ja
add
xchg
fistp
sub
sub
add
enter
lahf
mov
sbb
and
sbb
cmp
sub
inc
dec
xor
xor
pushf
sbb
pop
xor
out
in
outs
push
fs
nop
xchg
push
lods
xchg
cmp
cmp
push
pop
loop
sahf
jl
inc
push
mov
enter
sahf
imul
test
loopne
lods
sti
push
cmps
pop
xchg
call
push
dec
repnz
push
sti
and
push
inc
jnp
call
mov
jo
sbb
xchg
push
pop
icebp
push
out
inc
test
sbb
mov
shr
imul
jb
ja
(bad)
push
jge
inc
and
ret
adc
jne
out
sub
push
test
iret
jmp
arpl
sub
jno
div
inc
es
retf
imul
push
mov
sub
inc
push
aas
add
or
push
ret
fild
dec
pop
xchg
xor
lods
sub
sub
sbb
ror
(bad)
movs
ret
imul
call
dec
stos
ret
adc
jns
sub
movs
fldcw
stos
arpl
lea
xchg
cmp
dec
sar
popf
lods
enter
and
dec
arpl
rcl
aaa
nop
imul
scas
sbb
pop
pop
push
mov
and
inc
pop
xchg
cmc
sub
xor
into
push
cmp
(bad)
retf
and
or
xchg
and
fnsave
out
(bad)
jl
call
adc
jae
xlat
cwde
into
fisubr
shr
scas
push
sub
push
or
pushf
pop
cmp
sbb
jmp
in
scas
and
dec
jg
int
pushf
push
jmp
push
mov
mov
dec
retf
(bad)
(bad)
jne
lods
jb
mov
popa
cmps
cwde
or
and
sub
(bad)
cli
jns
cli
in
push
push
jle
add
or
cmp
(bad)
fwait
aaa
(bad)
into
sbb
sahf
fs
test
sar
and
dec
out
sbb
pop
(bad)
pushf
outs
inc
jg
dec
sub
inc
jns
sub
add
popf
int
in
rcr
xor
call
mov
test
add
adc
cmp
inc
fs
and
call
call
repnz
push
mov
fld
mov
pop
pushf
loop
jo
movs
xor
mov
xchg
lock
mov
and
shr
(bad)
fs
add
mov
bound
pop
jb
adc
mov
mov
aaa
sbb
in
cmp
je
test
or
cmps
test
scas
inc
cmps
sbb
sti
hlt
adc
inc
jle
xor
dec
fld
out
and
hlt
enter
xor
xchg
cmps
pop
std
add
in
iret
mov
mov
add
lea
rcl
outs
push
into
sbb
movs
mov
and
jmp
movs
sti
inc
jg
inc
out
xchg
fmul
ror
and
pop
scas
sbb
into
js
add
pop
jp
dec
outs
in
xlat
cmc
test
test
add
push
das
popa
imul
cmp
in
cmc
pop
int3
aam
js
push
fcomp
sub
clc
adc
js
mov
or
jp
fcmovnbe
add
out
fiadd
js
mov
inc
adc
rcr
test
push
(bad)
adc
xchg
(bad)
dec
adc
or
add
daa
cmp
jl
pop
dec
nop
les
mov
(bad)
fchs
sbb
mov
mov
mov
pushf
mov
scas
das
mov
adc
call
retf
add
push
xlat
lock
cwde
int
mov
clc
dec
jle
jb
pop
jl
lahf
or
sar
retf
mov
xchg
rcl
test
sbb
clc
sub
jnp
jns
adc
pop
fdiv
pop
aaa
push
mov
in
inc
in
sub
xor
and
mov
in
mov
and
(bad)
jno
pusha
retf
js
test
div
pushf
mov
jmp
or
in
pop
mov
and
dec
loopne
arpl
jae
push
mov
mov
ss
retf
cmp
adc
dec
popf
addr16
out
push
push
ins
mov
or
(bad)
mov
add
add
dec
(bad)
cmp
(bad)
pop
(bad)
aad
repz
pop
push
(bad)
sahf
adc
cmp
ret
fnsave
or
pop
idiv
not
js
idiv
(bad)
dec
mov
hlt
add
pusha
mov
xchg
or
and
and
jmp
outs
add
add
iret
mov
inc
enter
lods
mov
push
test
mov
dec
out
in
outs
dec
jae
and
sbb
or
fld
sbb
sahf
cmp
cdq
fs
shl
cmp
repz
or
dec
iret
cmp
push
mov
fwait
mov
in
dec
add
cmp
xchg
fild
fdivr
add
sbb
pusha
jns
loope
add
ret
sahf
inc
or
jnp
jnp
inc
js
out
or
push
in
lea
fld
cmps
sti
daa
cwde
or
mov
mov
inc
ja
jne
jne
add
pop
in
xchg
mov
mov
pop
test
fbld
pop
lods
jecxz
addr16
(bad)
mov
add
mov
cld
pop
or
and
mov
aam
cmp
out
mov
jp
mov
jmp
pop
in
shr
pusha
or
xor
(bad)
(bad)
out
ins
jecxz
bound
xchg
(bad)
fnstsw
iret
xor
or
sub
jb
mov
push
pop
add
mov
lock
dec
pop
fiadd
shl
push
rcr
in
(bad)
popa
add
dec
and
enter
out
aaa
clc
adc
add
mov
xor
xor
gs
in
les
cli
push
pop
mov
aam
dec
and
mov
jo
sub
push
sub
jmp
mov
xor
stos
iretw
pushf
sahf
leave
inc
shl
lock
dec
push
sbb
mov
add
mov
dec
test
(bad)
mov
pop
add
add
mov
aaa
mov
fadd
outs
add
ret
cwde
sub
push
cmp
cmp
iret
sbb
xor
stos
mov
(bad)
push
jmp
sub
pop
and
bound
inc
sbb
mov
jl
outs
sbb
scas
into
sbb
cdq
xor
fadd
jbe
pop
ins
ins
test
push
mov
(bad)
cmc
jmp
ss
sub
xchg
(bad)
mov
int
adc
jae
or
enter
mov
shr
lds
dec
jecxz
clc
cmp
push
xlat
leave
push
pop
fwait
outs
cmp
pop
and
push
xchg
fyl2xp1
test
lahf
and
add
(bad)
iret
mov
xchg
shl
cs
add
nop
repnz
mov
inc
mov
sub
mov
sbb
cs
xchg
dec
lock
pop
jo
pop
dec
dec
xchg
adc
lds
jne
inc
jno
push
outs
test
(bad)
test
sub
pop
xchg
hlt
xchg
xchg
add
(bad)
in
mov
stos
fs
pop
iret
pushf
out
mov
imul
test
ja
cdq
ins
cwde
add
dec
and
sbb
fwait
shl
int3
shr
(bad)
sahf
mov
mov
xor
ins
loopne
adc
fs
adc
cmp
mov
push
xchg
arpl
stos
lods
(bad)
mov
(bad)
sub
inc
sbb
sets
cmp
je
cmps
(bad)
in
(bad)
sbb
dec
and
pop
inc
cmc
stc
adc
rcl
aad
pop
jecxz
fist
aas
xor
inc
xor
addr16
in
jae
xor
cmp
inc
and
push
mov
xor
retf
or
(bad)
mul
repz
or
xchg
pop
les
outs
jmp
sub
out
sar
fst
inc
mov
aaa
scas
adc
mov
mov
adc
lods
test
stc
sub
push
movs
pushf
xor
cdq
pop
cmc
adc
(bad)
enter
pop
jg
adc
cwde
ss
cli
mov
mov
scas
outs
stos
cmp
movs
ret
and
scas
(bad)
mov
repz
adc
inc
jp
aaa
imul
sbb
in
aas
jp
adc
lods
test
out
jbe
xchg
movs
or
loopne
xor
jne
inc
jno
(bad)
shr
mov
sbb
mov
clc
leave
fsub
xchg
test
dec
push
mov
mov
inc
sub
sub
int3
cmp
push
sub
sar
inc
and
push
leave
lods
and
cmp
ret
(bad)
and
stc
add
mov
nop
adc
add
and
or
and
pop
xor
(bad)
jns
sbb
mov
call
sbb
or
jb
sbb
out
bound
add
test
or
stos
div
imul
dec
xchg
add
cmp
inc
pushf
in
mov
(bad)
out
aam
std
mov
ror
pushf
and
mov
xchg
dec
call
push
cmp
sbb
lods
sbb
mov
in
inc
daa
clc
fdiv
and
cmp
inc
test
mov
xor
and
popa
adc
cmp
rol
xlat
adc
push
rcr
add
cdq
aas
push
sbb
das
ror
pop
mov
out
fs
bound
pop
mov
sub
fcomp
scas
xchg
cmp
repz
mov
cmp
dec
aaa
add
xor
push
mov
cmp
into
sbb
pop
ja
sti
sbb
pop
frstor
das
jae
xor
push
int3
sbb
mov
pop
or
arpl
jecxz
sar
jp
sbb
fld
push
jecxz
mul
add
shr
leave
aaa
pop
mov
sub
pop
test
mov
je
jnp
pop
mov
lds
jns
mov
mov
fucomp
pushf
or
test
gs
fild
jp
outs
pop
fwait
lds
cmc
mov
enter
js
mov
dec
mov
stos
mov
test
mov
repnz
jns
cmp
sub
xor
cli
fist
add
gs
in
jmp
sub
xor
add
gs
fcomp
pop
adc
inc
ins
add
retf
sub
push
ret
or
scas
sahf
sbb
int
pop
bound
in
std
aaa
mov
push
mov
js
pop
mov
fstp
add
mov
xlat
fadd
sub
mov
inc
cmp
pusha
xchg
scas
ret
icebp
and
cmc
mov
out
test
inc
ja
fld
lahf
mov
mov
add
and
xchg
mov
lods
jl
sbb
and
div
or
pusha
loopne
scas
icebp
push
das
sti
cmp
or
(bad)
pop
fidivr
cwde
lea
pop
push
mov
mov
mov
das
xchg
mov
sbb
clc
div
out
ds
push
fs
out
sub
xchg
cli
mov
mov
jg
(bad)
pop
stc
xor
pop
add
lea
sbb
mov
or
lds
add
add
pop
out
in
rol
lods
movs
inc
idiv
xlat
cld
dec
sub
dec
jmp
in
ja
fcmovu
popa
das
or
adc
xchg
call
fsub
pop
enter
dec
daa
jg
mov
push
xor
sbb
lea
out
mov
push
pop
xor
cmps
clc
mov
sub
test
push
push
sbb
retf
push
into
aas
lahf
js
loope
mov
aam
mov
rol
scas
hlt
pushf
fstp
(bad)
clc
scas
xor
push
xor
jecxz
dec
jmp
cmp
lods
sahf
not
xchg
leave
adc
daa
pop
jno
fwait
pushf
outs
dec
and
ret
xor
pop
fs
ret
jae
cmp
repz
push
les
retf
fisttp
iret
dec
push
scas
push
adc
jmp
in
inc
add
xor
repnz
in
add
push
lea
dec
rcl
sub
xor
adc
(bad)
in
and
cwde
arpl
xchg
shl
cmps
das
mov
aam
mov
inc
xchg
ins
add
jl
mov
pop
in
pop
movnti
jp
ror
inc
push
iret
mov
adc
mov
in
dec
dec
dec
dec
in
rol
nop
movs
repz
dec
(bad)
mov
or
pop
pop
or
scas
stos
dec
cs
lds
outs
fdivrp
test
inc
inc
pop
dec
jmp
gs
das
es
stos
int3
pop
dec
jns
adc
xor
mov
push
and
aam
jnp
out
sub
add
lea
sbb
and
(bad)
dec
add
inc
scas
ins
dec
add
pcmpgtb
shr
adc
mov
stos
(bad)
scas
push
cmp
cli
dec
mov
jo
retf
movs
lock
retf
dec
test
(bad)
xor
imul
adc
daa
and
mov
imul
or
movlhps
div
pop
sbb
dec
(bad)
aaa
dec
push
mov
stos
pop
jl
fwait
inc
pop
push
outs
daa
xchg
cmp
mov
ds
or
mov
aam
add
mov
push
inc
inc
test
push
out
(bad)
fwait
adc
sub
push
call
push
add
and
movs
cmp
mov
gs
pop
push
out
(bad)
mov
or
in
mov
retf
dec
das
in
sbb
loope
lds
push
int
xchg
jns
std
cdq
fdiv
pop
int3
sbb
aad
jecxz
aad
fld
sbb
lea
or
adc
test
inc
xchg
dec
sub
dec
in
pop
out
inc
dec
mov
xor
clc
mov
adc
pop
cld
lock
push
push
(bad)
fcmovne
pop
test
neg
sbb
xor
rcl
jno
call
sbb
xchg
add
(bad)
call
xchg
ins
jns
or
ja
or
push
xchg
mov
ss
call
cmc
add
push
xchg
adc
cmp
push
push
cmc
cwde
aas
lds
lock
adc
dec
dec
arpl
mov
mov
xor
fdivr
jle
jecxz
mov
pop
in
dec
mov
in
cmps
rol
mov
mov
xchg
pop
lea
fwait
pop
mov
retf
call
mov
jnp
xor
cmp
test
int
xchg
sub
pop
add
fisttp
in
(bad)
ins
sub
dec
sti
test
test
push
lods
pandn
xor
sub
(bad)
push
loopne
pop
std
shr
add
lds
add
ins
add
sbb
(bad)
stos
cwde
mov
movs
lea
pop
les
neg
scas
jae
out
mov
cwde
test
push
xor
loope
jb
adc
pop
jg
fcomp
cwde
xor
test
mov
and
dec
dec
jb
inc
fwait
mov
out
dec
(bad)
push
outs
and
mov
ss
test
adc
not
lea
mul
bound
or
push
xchg
(bad)
mov
add
ins
push
aad
cmp
outs
pushf
mov
dec
jmp
sbb
xchg
mov
or
jnp
and
mov
push
jmp
ret
and
xchg
out
lock
cmps
xchg
add
clc
lock
cli
mov
xchg
xchg
cmp
push
(bad)
cli
pop
call
jle
add
add
retf
pop
cmp
ret
or
xlat
js
or
aad
movzx
pop
sahf
jae
and
(bad)
mov
fsub
dec
gs
(bad)
add
mov
mov
call
sub
add
dec
retf
ret
cmps
out
xchg
in
cmp
sbb
xchg
jge
xor
inc
or
test
inc
sub
outs
imul
and
xchg
ss
leave
fisttp
daa
or
es
pop
stos
mov
or
cs
shl
test
fs
jle
add
sbb
out
loope
mov
mov
(bad)
xchg
or
das
pop
xor
and
shl
aaa
jg
ja
xchg
cwde
sti
inc
xchg
loope
call
or
ds
rcr
pop
jnp
pop
je
fstp
push
mov
ret
push
test
jb
ja
xchg
jge
mov
push
fidiv
inc
inc
cmp
xlat
jnp
push
js
fs
stos
push
inc
push
jns
inc
scas
adc
jnp
loope
mov
int3
call
(bad)
dec
xchg
scas
and
push
pushf
dec
popf
push
outs
inc
pusha
addr16
adc
mov
clc
add
loop
add
inc
popa
mov
movs
aas
sbb
repnz
ror
jo
push
ins
(bad)
ret
sbb
sbb
neg
cmp
cmp
mov
add
ret
aad
adc
xlat
loope
fldenv
repz
dec
mov
ja
jge
lock
mov
lds
pop
pusha
pusha
mov
mov
cdq
pop
jbe
lods
or
out
add
mov
retf
pop
and
dec
sub
jae
shl
adc
or
hlt
mov
aad
pop
inc
clc
pop
xchg
mov
test
cmp
xchg
div
loop
mov
ds
movs
shr
jno
mov
in
pop
xchg
ins
stos
xlat
cmc
ins
mov
or
(bad)
sbb
std
inc
(bad)
inc
adc
pop
push
loope
and
pop
pop
in
test
sahf
retfw
add
in
pop
out
and
add
aas
out
in
inc
lock
jmp
xchg
xchg
jge
pop
cli
leave
(bad)
repz
mov
(bad)
jge
dec
push
es
xor
xor
retf
jle
mov
aas
mov
mov
pop
mov
ret
cwde
nop
test
and
(bad)
call
ins
cwde
dec
cmp
ds
inc
(bad)
push
jl
mov
jae
sub
cwde
pop
adc
repnz
popa
pop
inc
fcmovnb
mov
sbb
icebp
add
xchg
pop
pop
ins
push
loopne
push
xchg
jns
(bad)
dec
add
mov
add
mov
mov
dec
mov
loop
mov
adc
add
cmp
and
xchg
jmp
dec
test
cmps
bound
js
stos
cmp
or
cmp
mov
fimul
in
(bad)
pop
dec
movs
movs
cmp
dec
cmp
push
mov
aas
inc
sub
movs
call
jl
lock
push
gs
fsubp
pop
xchg
lods
loopne
ss
inc
iret
nop
dec
xchg
adc
dec
pop
xchg
out
inc
stos
sahf
daa
lahf
sahf
lods
(bad)
or
inc
inc
sub
adc
lods
push
sbb
mov
pop
xchg
or
mov
movs
jb
div
adc
pop
nop
xor
push
mov
push
push
pop
mov
sub
ret
xchg
pop
pmulhw
out
jmp
fcomp
(bad)
test
add
jmp
js
sub
outs
mov
xchg
out
pop
mov
repnz
jg
test
fs
jp
or
mov
inc
xor
jge
add
icebp
jae
stos
inc
mov
jno
or
cmc
dec
scas
inc
pop
in
xchg
cs
xchg
xchg
inc
lds
pop
jno
sbb
shl
xor
(bad)
xor
mov
push
inc
dec
cmp
adc
xor
out
test
hlt
(bad)
dec
inc
je
in
ret
jae
shl
dec
push
mov
in
sbb
bound
sbb
or
and
sbb
pop
push
lahf
call
mul
arpl
cmp
fwait
jle
aam
(bad)
ret
dec
data16
cmp
iret
push
or
xor
sbb
inc
inc
jecxz
ds
jmp
adc
lock
out
or
inc
jp
js
jno
movs
pop
or
adc
push
lock
pop
cs
rol
stos
or
std
inc
jmp
xchg
inc
inc
xlat
ja
inc
xchg
test
repz
ret
cmp
jl
mov
xchg
push
adc
std
xor
(bad)
push
adc
pop
pop
(bad)
nop
ds
jne
cmp
fadd
cmps
test
add
popa
and
push
add
pop
lods
aas
repz
xor
ror
jmp
(bad)
fwait
aaa
add
mov
sub
cld
(bad)
and
dec
xchg
lods
sti
sahf
xor
ja
sahf
inc
xchg
push
jg
mov
aad
fidiv
mov
mov
xor
add
or
inc
jmp
inc
sbb
repnz
pop
xchg
cmc
bswap
mov
mov
(bad)
mov
add
adc
jnp
mov
cmps
lock
pop
iret
test
enter
je
call
xor
jo
ins
push
out
in
push
xor
stos
data16
and
data16
out
push
mov
icebp
fs
in
mov
jno
push
pop
inc
stos
ret
cmp
shr
adc
test
sub
imul
pop
repnz
dec
add
ficom
lods
out
mov
inc
dec
mov
pop
mov
dec
and
leave
dec
out
imul
icebp
inc
push
lods
jmp
add
jbe
cmp
(bad)
xchg
jnp
mov
scas
or
push
nop
leave
popa
movs
mov
ror
sub
mov
pop
mov
outs
(bad)
dec
jmp
push
mov
sub
sbb
push
or
mov
(bad)
fmul
mov
clc
sbb
and
add
fild
push
sbb
movs
arpl
cmp
leave
dec
xchg
push
das
lea
pop
mov
cmps
(bad)
out
or
frstor
pop
sbb
mov
movs
or
adc
or
mov
popf
mov
inc
fsub
jecxz
cmp
cmc
sbb
pop
push
stos
outs
mov
push
arpl
dec
sub
fistp
sahf
adc
rcl
(bad)
xchg
and
(bad)
pop
push
sbb
dec
je
out
mul
and
xor
jae
pop
aam
clc
add
mov
jb
ficom
sbb
xor
add
xchg
rol
sbb
fadd
fmul
push
ds
ins
inc
or
addr16
ds
(bad)
mov
(bad)
jbe
inc
sub
push
icebp
test
dec
in
sub
mov
xor
(bad)
cmp
std
mov
push
scas
stc
xchg
ja
(bad)
std
fdiv
push
pop
mov
xchg
inc
or
rcl
leave
hlt
inc
out
(bad)
retf
jecxz
stc
fs
xchg
adc
jmp
sub
(bad)
int3
push
out
arpl
jo
cmp
lahf
jb
mov
scas
dec
mov
mov
in
jnp
dec
mov
das
sahf
xchg
outs
push
mov
adc
in
addr16
enter
pop
mov
sbb
or
jnp
xor
jle
jno
cmp
outs
sub
xchg
jge
sub
sbb
cmp
and
cmp
movs
(bad)
jbe
cmp
mov
ins
movs
ins
(bad)
inc
jg
call
sub
inc
ja
push
push
mov
movs
pop
lock
daa
popf
or
mov
sti
ror
addr16
pop
stos
mov
fwait
outs
jno
fstp
and
add
std
or
mov
cmp
nop
aam
and
lods
mov
cld
push
xchg
mov
cwde
test
push
fcomi
add
mov
(bad)
mov
jns
xor
push
push
pusha
aas
mov
fnstsw
ins
dec
stos
jo
sbb
push
(bad)
call
shl
int
and
hlt
and
add
or
sub
daa
loopne
cmp
mov
vpmaxub
into
mov
fdiv
mov
xchg
mov
xchg
mov
inc
mov
aaa
(bad)
ins
int3
inc
dec
jp
push
jge
pop
out
test
cmp
mov
cmps
data16
add
push
loope
mov
sbb
lods
mov
or
inc
ret
inc
sbb
cs
inc
(bad)
fdivp
in
mov
push
cmp
sbb
scas
ds
jecxz
in
fdiv
jecxz
sti
inc
imul
ss
dec
ja
movs
mov
adc
fnstcw
fild
rol
inc
div
out
pop
jmp
adc
leave
ror
(bad)
adc
(bad)
out
mov
int
sub
ror
mov
mov
push
xchg
xchg
sbb
pop
mov
mov
pop
xchg
or
cmp
sub
sar
cwde
xor
push
cli
loope
adc
repz
push
pop
movs
mov
adc
ja
jbe
aas
add
imul
lea
retf
cmc
fwait
pop
mov
jle
or
ret
xchg
push
movaps
(bad)
sub
in
popf
jl
sbb
pop
mov
cli
sbb
mov
jp
stc
aaa
push
sub
scas
repz
cdq
sar
iret
inc
push
imul
sahf
pop
xor
jl
and
inc
pop
(bad)
mov
call
jne
fs
ins
mov
sbb
lods
clc
jb
mov
cld
cmc
mov
retf
mov
loope
out
cmp
inc
sub
inc
stos
(bad)
cmp
mov
mov
push
int
sti
jg
aaa
and
pop
cmp
add
es
pop
pop
adc
(bad)
pusha
push
test
jmp
push
dec
mov
out
jbe
mov
enter
add
xor
arpl
mov
xchg
gs
lods
into
repnz
dec
or
ins
imul
ret
ss
inc
jnp
arpl
(bad)
in
dec
push
sub
loope
push
test
int3
add
jno
inc
adc
push
ins
adc
xchg
pop
repz
inc
xchg
dec
enter
mov
mov
cld
mov
push
mov
pop
sbb
faddp
or
xor
dec
xchg
in
pop
ds
(bad)
pop
fldenv
cmp
sub
push
xor
repnz
mov
pop
dec
pusha
cmp
fidiv
cmp
mov
in
cld
mov
or
int
(bad)
push
test
fdiv
dec
es
clc
dec
into
jmp
ret
lea
jge
mov
cld
repnz
xchg
(bad)
ret
es
call
pop
adc
nop
jp
cmp
(bad)
jae
jbe
mov
jmp
xchg
icebp
pop
(bad)
iret
add
mov
mov
jno
jne
xor
or
or
push
je
lock
xchg
dec
adc
push
push
pushf
inc
outs
sub
cli
das
in
clc
(bad)
stos
popf
stos
pop
dec
cmp
dec
sbb
mov
pop
jae
jmp
sbb
and
cmp
fidiv
jl
repnz
repz
jl
inc
mov
rol
pop
cli
mov
cmps
dec
push
lods
xchg
cdq
test
adc
xchg
jne
inc
aad
mov
lea
mov
cmps
in
cmp
or
lods
push
(bad)
scas
cwde
clc
or
push
lods
mov
mov
xlat
in
add
xor
scas
cli
dec
inc
adc
cmp
mov
or
pop
ficomp
retf
jmp
repz
fistp
retf
rcr
and
cmps
fld
fwait
xor
mov
or
or
enter
pop
mov
out
clc
pop
inc
jg
xchg
pop
outs
fdivr
sbb
mov
xchg
xchg
push
mov
jl
loope
mov
push
not
xchg
(bad)
cmc
jmp
sbb
mov
iret
aas
push
in
or
mov
call
arpl
xchg
ret
and
ss
mov
sub
lahf
cld
mov
ins
(bad)
inc
mov
adc
scas
cmp
jne
std
lods
mov
cmp
or
mov
clc
mov
xchg
arpl
and
and
es
push
imul
lahf
lods
rcl
xchg
push
arpl
jle
inc
ins
jae
add
jb
xchg
xor
gs
subps
or
adc
sub
retf
sti
push
addr16
(bad)
cmps
mov
ins
pop
jmp
mov
or
cmc
mov
shl
jbe
call
(bad)
shr
mov
adc
hlt
push
movs
adc
jnp
sub
fild
mov
cli
add
(bad)
mov
xchg
retf
adc
push
aam
and
inc
mov
test
xor
adc
loopne
lock
ror
pusha
jg
pop
fsubr
lock
addr16
mov
ss
ret
pop
fs
ins
inc
sub
out
(bad)
jno
lods
mov
rcl
inc
xchg
jp
(bad)
xchg
pop
mov
pop
add
imul
aas
in
lock
and
call
sbb
mov
and
dec
les
fistp
push
(bad)
sub
in
js
xchg
xor
cmc
fwait
mov
mov
or
mov
inc
cmp
call
sbb
sbb
inc
ret
imul
sti
loope
xor
and
das
adc
mov
xor
mov
dec
jge
inc
retf
add
(bad)
adc
outs
cmps
mov
aad
and
sub
push
retf
js
xchg
popf
sub
mov
ficomp
aam
push
mov
not
mov
xor
mov
(bad)
jg
or
mov
into
adc
adc
shr
cmovl
xchg
adc
popa
or
and
cdq
dec
call
(bad)
xor
stc
pushf
push
lds
fsub
rol
or
das
xchg
into
shl
int3
jne
add
test
inc
mov
push
sar
out
in
pop
fcmovu
cmc
sub
jmp
cli
aad
xchg
call
loopne
and
repz
rcr
and
push
loop
pop
stos
adc
aaa
mov
or
leave
xor
dec
popf
cmp
aam
sub
xchg
(bad)
sbb
sbb
out
or
cmp
jmp
imul
fucomip
dec
sbb
lods
rcr
ret
push
mov
or
mov
jne
outs
and
sbb
pop
or
sahf
sti
ins
ja
xor
ret
aaa
cmp
push
int
in
and
inc
cmp
mov
rol
inc
(bad)
cwde
push
daa
or
pop
jae
pop
lds
jmp
fild
add
mov
inc
inc
dec
mov
mov
das
pushf
(bad)
call
mov
sbb
mov
sub
sub
loope
enter
fwait
and
(bad)
fnstcw
aas
jecxz
adc
popf
mov
mov
sti
adc
ja
xlat
cmp
and
xor
adc
enter
rcr
inc
xor
repnz
xchg
add
or
and
call
jmp
(bad)
mov
jo
(bad)
out
push
push
(bad)
pop
or
(bad)
and
mov
je
cmp
shl
lock
and
mov
cmps
and
test
add
pop
push
fcmovnb
mov
xor
add
and
ins
outs
imul
add
jo
loop
mov
dec
adc
pop
js
(bad)
push
pop
std
cdq
mov
or
test
popf
ins
mov
fs
and
rol
mov
rcr
dec
fldl2t
mov
ja
xor
adc
or
xchg
icebp
pop
in
pop
int
push
adc
test
out
mov
sub
vmulss
ret
call
mov
dec
add
mov
mov
or
or
jb
in
inc
ficom
pusha
mov
sti
fs
and
adc
(bad)
jae
rcr
cdq
je
outs
lock
or
rol
mov
jmp
ins
loopne
jle
fcom
inc
cs
jmp
pusha
div
xlat
js
mov
push
cs
pusha
add
sahf
aad
mov
fsubr
mov
push
mov
imul
add
sub
iret
and
cmc
(bad)
and
mov
loopne
inc
loope
jp
mov
or
sub
aaa
cmps
shl
inc
mov
push
mov
push
push
mov
mov
sahf
jns
sub
fbld
mov
in
or
das
mov
sub
ds
mov
xchg
sti
sub
imul
mov
repz
or
mov
and
jge
in
leave
scas
mov
nop
or
mov
push
dec
xor
push
mov
test
cmp
dec
mov
add
sbb
fsubp
stos
jmp
je
gs
sbb
popa
(bad)
inc
and
mov
pusha
inc
gs
jae
enter
add
(bad)
inc
add
(bad)
cld
enter
or
jmp
sub
mov
sub
xor
lea
jl
stos
clc
ror
pop
pop
xor
out
ror
fnstenv
jle
call
dec
pop
xchg
mov
mov
stc
nop
mov
pusha
jl
pushf
mov
sub
mov
dec
imul
(bad)
mov
jl
mov
cmp
in
mov
xor
in
icebp
push
fild
in
jae
scas
jg
pop
enter
ja
fcomp
ja
sub
nop
sbb
or
sahf
movs
ret
ins
xor
aad
cmp
test
pop
repz
sti
pop
arpl
js
pop
es
fdiv
push
push
jbe
sub
lock
loop
cli
(bad)
popf
jno
in
jno
fidivr
adc
mov
mov
jmp
xchg
outs
clc
or
cwde
push
jmp
pop
sub
mov
mov
(bad)
mov
mov
sub
jmp
pop
icebp
sbb
xchg
or
inc
stos
xor
out
jno
out
xor
pop
or
inc
cld
pop
xor
dec
sar
in
ror
repnz
mov
mov
les
imul
repz
jno
(bad)
or
(bad)
push
ficomp
pop
in
fldcw
retf
imul
fstp
adc
add
pcmpgtd
and
pop
sbb
dec
mov
jg
mov
pop
loope
fisub
push
mov
cmp
or
or
bound
cdq
sub
or
mov
ins
stos
test
jnp
daa
push
in
xor
dec
push
es
push
call
(bad)
jmp
retf
neg
pop
inc
ins
retf
inc
mov
faddp
add
test
cmc
sahf
shl
dec
xchg
sub
jecxz
lock
push
add
xchg
jge
mov
mov
xchg
or
add
dec
ss
jbe
mov
cmc
mov
push
dec
push
ins
lds
ret
mov
mov
or
jl
(bad)
cmp
pop
aad
push
cmp
xchg
sbb
push
sbb
push
lock
xor
sbb
idiv
xchg
pop
cwde
push
push
fist
arpl
pop
test
push
std
enter
hlt
jle
test
mov
es
dec
xor
ss
ror
add
mov
jns
mov
ror
hlt
dec
outs
and
lods
out
xor
add
out
jg
lods
cwde
inc
ret
mov
(bad)
ins
cmps
pop
ds
sbb
adc
cmc
push
ins
sbb
jecxz
xor
or
or
push
adc
jo
inc
adc
in
loopne
jle
cmc
call
push
sub
mov
dec
inc
int
sbb
mov
and
sbb
jne
jl
push
push
dec
sub
mov
adc
jecxz
pop
mov
(bad)
dec
fstp
out
push
push
inc
pusha
cmp
mov
retf
mov
(bad)
(bad)
mov
dec
ins
(bad)
inc
cmp
mov
jle
push
je
add
jb
or
cmp
shl
scas
xchg
ror
lock
scas
call
loope
mov
xchg
add
dec
leave
sbb
cmp
dec
shl
sbb
push
popa
jmp
call
sahf
sbb
sbb
push
popf
test
sbb
sub
jmp
int3
test
inc
cs
aaa
inc
mov
retf
ret
or
push
daa
int3
adc
mov
sbb
pop
jnp
dec
xor
(bad)
mov
push
ja
shl
outs
inc
sbb
adc
inc
jae
mov
movs
scas
std
jb
stos
sbb
jmp
bound
sbb
jge
fmul
stos
dec
jbe
adc
js
stc
add
dec
sbb
mov
(bad)
sbb
push
cs
ror
je
imul
loop
test
ret
ret
mov
rcl
stos
les
jmp
xchg
sbb
jno
clc
adc
aad
gs
xchg
enter
xchg
ja
pop
pop
sbb
inc
cmp
and
mov
dec
cmp
dec
repnz
nop
and
adc
cmp
in
fcom
repnz
loop
test
xchg
or
sub
cwde
and
iret
cmp
sub
sbb
jo
fxch
into
fwait
clc
(bad)
pop
cmp
push
cmps
sub
fdivr
mov
in
stc
cmp
mov
sub
std
xor
js
cmps
enter
jmp
pop
out
aad
(bad)
xchg
add
mov
add
mov
adc
adc
(bad)
add
scas
pop
test
pop
lods
std
inc
imul
ss
push
fnstcw
pop
int3
popf
shl
push
jecxz
cmps
mov
aaa
push
lock
jb
pushf
(bad)
in
test
and
jp
jmp
pop
dec
mov
mov
mov
jbe
pop
loop
xchg
and
into
jl
inc
pop
clc
(bad)
xchg
sahf
xor
mov
out
jns
fsubr
ja
cld
or
mov
(bad)
sub
dec
data16
jb
xchg
or
add
test
sar
std
inc
sub
push
mov
inc
(bad)
pop
fld
loope
stos
ds
jle
xchg
pop
pop
pusha
xlat
loope
adc
dec
lods
jns
cmps
mov
inc
push
in
adc
push
xchg
push
das
mov
push
sbb
xchg
mov
mov
push
cmp
(bad)
retf
imul
sub
lods
xchg
or
icebp
(bad)
scas
adc
mov
mov
mov
jmp
out
lahf
into
out
aas
(bad)
cmp
sbb
sahf
sbb
push
sub
inc
loopne
mov
inc
xor
(bad)
jmp
dec
sbb
imul
sub
adc
arpl
xchg
adc
(bad)
(bad)
out
retf
and
loopne
mov
iret
jge
add
loope
popa
arpl
mov
shl
sub
mov
sbb
iret
inc
addr16
push
sbb
jne
cmp
fwait
(bad)
ins
es
sar
inc
retf
loop
push
(bad)
je
cmps
popa
iret
rep
(bad)
jb
outs
mov
mov
sbb
fdivr
xchg
cmps
out
xor
mov
daa
stos
ror
jne
pop
div
sbb
nop
mov
ret
cmp
stc
lds
pop
adc
jl
idiv
inc
pop
loope
pop
js
fwait
add
pop
push
add
xor
jl
dec
push
cmc
retf
fdivrp
in
dec
aas
sub
in
and
inc
test
mov
mov
pop
and
adc
cmp
sbb
pop
and
dec
lds
int
movsx
push
push
pop
mov
xchg
xchg
clc
shr
cli
scas
jne
cli
jg
daa
(bad)
fidivr
adc
dec
(bad)
mov
xchg
jmp
dec
sub
inc
sub
sub
scas
push
aam
pop
je
fstp
add
retf
xchg
dec
ret
xlat
cld
adc
mov
jg
pop
xor
add
inc
cdq
pop
fisttp
pop
and
sub
or
es
xor
and
pusha
fnstenv
(bad)
scas
xchg
add
mov
stos
inc
ror
mov
mov
mov
mov
scas
jmp
xor
fprem
cmps
mov
or
jae
push
jo
fisub
ret
push
in
lahf
imul
nop
pop
add
int
aam
mov
add
retf
and
adc
ss
adc
ss
inc
xchg
retf
imul
and
mov
jmp
jo
jg
xchg
jne
fs
aam
add
(bad)
mov
add
stos
mov
mov
test
pop
popa
pop
and
ja
sahf
jmp
stc
fscale
into
xor
mov
mov
jb
stos
cmp
xor
stc
mov
cwde
(bad)
add
in
push
mov
in
sub
hlt
xchg
cwde
in
push
pop
repnz
imul
pop
cmc
cmp
add
popf
sbb
or
sbb
retf
fild
and
xchg
daa
(bad)
jmp
mov
jge
add
adc
and
or
mul
add
mov
gs
xlat
push
in
ss
or
and
jns
inc
into
mov
pushf
and
scas
aad
xchg
sub
pop
or
dec
mov
ss
push
mov
cmp
scas
test
out
(bad)
xchg
push
xchg
aad
adc
data16
push
(bad)
and
cld
fistp
nop
cwde
mov
adc
mov
xchg
mov
lock
xor
xor
cmc
jb
icebp
xchg
scas
add
jecxz
inc
(bad)
std
adc
into
cmp
ins
xlat
call
stos
stos
mov
mov
mov
in
push
jecxz
sbb
mov
repz
mov
or
cmp
jo
mov
sub
test
push
mov
cmp
sub
leave
pop
sub
pushf
sbb
aas
mov
loop
inc
pop
pop
dec
ins
pop
dec
int
ins
adc
pusha
in
fdivr
add
add
mov
(bad)
shl
retf
and
pop
jmp
jae
(bad)
dec
cmp
ret
push
shr
and
inc
mov
pop
(bad)
jmp
(bad)
push
xor
push
push
or
xor
cmp
not
jmp
sti
sbb
sub
icebp
inc
cmp
iret
out
cli
jg
int3
(bad)
sub
jae
aas
gs
rcl
cdq
neg
mov
xor
ds
rcr
mov
(bad)
ins
jl
lods
sar
call
mov
clc
sbb
je
stc
mov
or
pusha
cld
les
sub
xor
sub
pop
mov
push
inc
xchg
ss
xchg
inc
and
and
aaa
push
shl
and
ficomp
xor
or
mov
add
sbb
add
cmp
sar
and
ins
jno
sbb
outs
pop
les
scas
call
pop
inc
loopne
aam
loopne
dec
xor
sub
loopne
out
test
int
sub
outs
ja
clc
or
daa
ss
ret
inc
das
push
sbb
mov
into
mov
loope
mov
rcr
daa
and
mov
ins
pop
mov
das
dec
and
aam
pop
test
ret
mov
inc
mov
sub
or
shr
daa
imul
icebp
sub
sar
ins
test
fdiv
and
(bad)
out
or
call
fistp
mov
sbb
add
jo
inc
int
jp
pop
or
(bad)
addr16
(bad)
js
sahf
sar
push
jl
pop
(bad)
fcmovne
hlt
cmp
jmp
dec
jae
addr16
retf
outs
sti
xchg
cmp
not
jnp
jmp
cmp
mov
les
mov
into
jbe
fimul
pop
cmp
push
movs
mov
jnp
not
pop
ins
cmc
test
fidiv
and
mov
xchg
xlat
push
jnp
out
fwait
xchg
jmp
and
ins
pop
loop
xchg
mov
or
xor
jo
dec
sbb
test
dec
mov
inc
xchg
adc
mov
adc
jl
pusha
dec
repz
mov
fwait
push
cmp
call
jo
pop
ja
jns
mov
mov
sbb
daa
ins
int3
(bad)
mov
add
dec
mov
push
fs
daa
jl
jg
rcr
jbe
sbb
xor
xchg
dec
pop
push
stos
pushf
dec
mov
xchg
and
adc
pushf
push
pop
outs
sbb
jmp
pop
sub
push
jb
cmps
push
sub
shl
test
inc
int3
out
sub
xchg
loopne
cwde
lods
movs
push
add
fld
pop
aam
mul
cli
adc
and
into
mov
stc
aam
xchg
add
fcmovbe
push
lods
pushf
stos
add
inc
adc
xor
push
shl
xchg
pop
fs
dec
push
repnz
xor
les
pop
xchg
pop
stos
scas
push
or
cs
adc
imul
dec
pop
lea
popa
and
push
mov
jne
stc
lahf
cmp
movs
out
out
pop
mov
add
or
aaa
xor
(bad)
les
and
add
cs
push
cmps
les
add
cli
int
and
mov
jae
push
or
js
xor
sub
mov
pop
fst
push
scas
cli
add
inc
rcr
in
jne
ffree
es
and
xchg
(bad)
(bad)
jb
pop
ins
rcr
ins
jno
sub
shr
push
js
push
sbb
pop
dec
push
cmp
dec
lods
sti
rcl
pusha
adc
and
and
lods
mov
push
fadd
xlat
dec
cwd
std
popf
adc
enter
test
mov
imul
dec
cs
movs
sub
js
data16
or
xor
stos
test
aaa
xchg
and
call
mov
test
inc
mov
adc
lods
jp
into
or
repz
inc
cdq
stos
add
stos
dec
cld
ja
neg
cld
push
sub
jmp
scas
imul
fsubr
inc
clc
test
mov
stos
cmp
shr
(bad)
fidiv
xchg
fstp
es
xor
lock
push
inc
inc
(bad)
arpl
mov
and
adc
aad
fst
outs
pop
xchg
inc
pusha
lods
push
cmp
and
mov
out
movs
adc
shr
loopne
movs
enter
adc
fwait
int3
cdq
addr16
fdiv
std
pop
inc
or
lahf
repz
fucom
retf
sbb
or
sbb
mov
xor
cmc
out
movs
mov
sti
and
pop
mov
into
js
call
jno
mov
pusha
leave
cmc
mov
scas
add
and
mov
cmp
cld
sub
or
in
ss
(bad)
jmp
pop
or
push
stos
jne
mov
inc
das
mov
mov
outs
sahf
pop
jl
mul
ret
mov
rcr
fst
mov
push
fdiv
outs
adc
int3
test
pop
test
ret
mov
mov
test
scas
aas
add
inc
es
jl
out
jb
rcr
cmp
scas
shr
or
inc
cmp
mov
sub
jge
mov
mov
mov
push
mov
xchg
in
cmp
dec
(bad)
cmp
cmc
popa
and
pop
pop
aaa
mov
xor
stos
test
and
popf
sub
mov
repz
sbb
push
pop
nop
cmp
mov
arpl
icebp
adc
out
or
or
cmps
pmulhw
fs
ret
pusha
xor
fbld
cmp
jo
cmc
lea
(bad)
fisub
imul
jl
fs
cmp
sub
(bad)
or
fbstp
std
fiadd
adc
adc
aad
cmp
dec
add
rol
inc
sbb
out
inc
dec
pop
sub
inc
ret
jbe
and
dec
test
mov
inc
js
pop
js
xchg
aam
loopne
jecxz
jae
in
int3
rcr
xchg
stos
push
dec
adc
push
mov
lods
rcl
adc
loope
and
pop
cmp
sub
(bad)
pop
loop
cmps
(bad)
jg
(bad)
out
and
test
push
icebp
push
lds
lea
sahf
mov
push
repz
scas
iret
dec
jns
pop
mov
add
(bad)
test
add
cmp
xchg
nop
ds
(bad)
mov
cmp
mov
sub
(bad)
arpl
add
and
push
inc
dec
out
pop
pop
dec
mov
in
ins
jb
gs
cmc
(bad)
cmp
pop
xchg
ret
aam
jmp
jbe
repnz
mov
aam
push
cmp
lahf
pop
std
shl
int
fcmovnb
xchg
dec
shr
popa
iret
in
pop
inc
pusha
mov
call
daa
sti
ds
shr
inc
dec
sub
or
ja
or
jmp
mov
push
stos
dec
cmp
sbb
adc
lock
xor
cmp
jle
je
pusha
add
jge
add
adc
loop
add
loop
sbb
movs
and
pop
aaa
inc
mov
ret
mov
cli
in
cmp
ins
loopne
and
jno
inc
mov
jl
ins
arpl
push
xor
lds
idiv
les
(bad)
jge
push
mov
or
iret
cmps
in
push
or
scas
ss
in
jnp
stc
mov
movs
sbb
stos
mov
or
add
fst
cmps
ins
(bad)
stos
or
ins
mov
xor
loop
xchg
hlt
jae
dec
sbb
enter
xor
jo
(bad)
sub
aas
inc
adc
pop
pop
cmp
stc
ds
or
mov
xor
mov
das
sub
jae
or
stos
xor
jle
movs
xor
pop
mov
mov
cmps
(bad)
ins
(bad)
mov
call
adc
aaa
aam
mov
adc
aam
sbb
pop
dec
imul
sub
inc
mov
sub
stc
xchg
cmps
mov
and
jmp
clc
inc
pop
stos
cdq
outs
popa
jo
shl
xor
stc
push
sub
fldenv
or
stos
mov
jmp
mov
mul
xchg
(bad)
out
dec
mov
or
mov
imul
jge
enter
idiv
xor
outs
pop
lods
push
cmp
addr16
jmp
sbb
jmp
cmp
add
lds
shl
test
adc
aam
pop
iret
push
sahf
(bad)
sub
rcl
ins
lahf
dec
lods
xchg
push
enter
sbb
xor
and
cmps
in
shr
add
iret
mov
xchg
xchg
pop
push
loopne
pop
xchg
or
inc
jmp
mov
pusha
cmp
pop
lea
mov
mov
sub
sahf
lods
sti
icebp
outs
movs
inc
stc
sub
test
and
fimul
lods
dec
nop
aas
(bad)
mov
mov
mov
mov
dec
mov
jle
mov
out
call
repz
mov
mov
(bad)
xchg
adc
fisub
inc
add
jns
jecxz
enter
into
mov
sbb
mov
and
leave
cmp
scas
mov
mov
fld
xchg
mov
icebp
shr
fbld
push
test
in
or
jge
jne
push
repnz
xor
mov
jecxz
jb
push
enter
xchg
fcom
mov
adc
sbb
fcom
cmp
mov
push
lods
es
cld
or
leave
gs
dec
fucomp
inc
imul
ret
js
lods
outs
adc
test
fsubp
les
retf
push
int
add
lock
ficomp
or
ffreep
aaa
sub
or
lods
(bad)
cmp
shr
hlt
(bad)
mov
mov
out
cmps
popf
mov
fsubr
inc
and
daa
fisttp
(bad)
out
push
ror
ret
mov
cmp
add
popf
out
push
fmul
sbb
imul
rcl
dec
xchg
cmp
int3
stos
xor
pop
xchg
pop
(bad)
lods
cld
sub
sub
cld
or
cmp
cmp
push
sbb
paddq
cwde
jnp
xchg
sub
mov
lds
dec
dec
dec
jno
in
fistp
xchg
aam
setnp
(bad)
out
fdiv
test
movs
out
inc
jnp
cmp
imul
mov
jnp
xor
cmps
lods
mov
push
stc
dec
aaa
sahf
imul
mov
xor
std
ret
sbb
xor
push
cmp
jle
inc
pop
movs
adc
cwde
fisub
cdq
inc
xor
rcl
dec
push
mov
std
int
lods
outs
sub
push
sbb
int
aas
cmps
ins
and
or
ins
xchg
idiv
pop
cwde
addr16
sub
add
sub
stc
sahf
xor
sub
inc
out
nop
sbb
pmulhuw
loopne
sbb
inc
ror
pop
mov
outs
and
cdq
out
call
popa
jae
xchg
mov
ret
call
adc
pop
jge
(bad)
call
xor
cmp
movs
(bad)
mov
mov
jbe
ret
data16
push
cmp
cmps
pop
retf
scas
xchg
sbb
(bad)
int3
cli
loop
dec
popa
or
(bad)
pushw
jne
lds
int3
dec
sti
adc
mov
sbb
jmp
pop
inc
cmps
sar
sub
lea
fbstp
dec
push
add
and
lds
mov
adc
push
xor
gs
test
adc
popf
mov
add
fnstcw
cmp
and
enter
push
ret
push
xchg
fst
and
cld
outs
jle
adc
dec
adc
inc
or
arpl
xor
mov
mov
iret
add
sbb
or
dec
test
xchg
(bad)
lds
loope
pop
loop
and
xchg
loopne
dec
and
push
fisubr
jne
pop
data16
xchg
repnz
cli
ret
cmp
xchg
sub
xchg
hlt
jecxz
shl
dec
loope
mov
mov
fdiv
repz
mov
mov
adc
xor
pop
in
mov
pop
aaa
call
imul
mov
sbb
fiadd
jle
sub
cmp
xlat
pop
jge
mov
(bad)
adc
repz
pop
pop
outs
lea
mov
mov
xchg
fwait
sbb
adc
sbb
sar
mov
(bad)
leave
pop
sub
push
cmp
add
cmc
or
bound
push
cmp
nop
push
mov
arpl
lds
bound
ins
add
mov
mov
dec
jnp
fsubr
add
push
ret
mov
and
xor
out
leave
inc
jmp
into
sar
inc
dec
in
call
std
xor
loop
shl
sub
imul
mov
xchg
add
pop
jo
out
xchg
in
inc
lahf
ret
test
xchg
mov
data16
repnz
gs
dec
xchg
sub
cmc
retf
push
loop
sbb
xor
dec
leave
push
xor
rol
pushf
mov
or
mov
mov
imul
ins
aam
lahf
out
push
adc
out
mov
sbb
push
sub
xor
dec
push
xlat
mov
out
and
sbb
dec
pop
dec
xchg
je
jp
jge
mov
clc
sub
xor
cs
pop
sub
sbb
sbb
call
mov
retf
xor
or
jno
and
inc
sub
nop
sbb
xor
adc
ret
mov
movs
pop
or
mov
mov
jecxz
cmp
mov
adc
pop
push
jl
mov
ret
or
aas
mov
lock
pop
stos
jge
mov
icebp
xchg
and
xor
inc
cmps
dec
mov
mov
shl
clc
es
ror
sub
sar
loop
dec
mov
or
loope
nop
inc
add
inc
sub
sbb
leave
stos
test
leave
and
cmp
mov
imul
mov
dec
cmp
call
add
xor
mov
push
add
jmp
sti
sbb
xchg
xchg
clc
and
jbe
popa
mov
mov
aam
and
les
js
ins
hlt
jbe
add
lea
inc
popa
fist
sbb
sbb
out
(bad)
test
je
jle
shr
stos
dec
call
loop
inc
mov
pop
xchg
icebp
ret
cmp
jne
scas
(bad)
repz
sbb
mov
lahf
xchg
jecxz
push
daa
ins
push
mov
jnp
movs
ror
test
or
sub
rcl
out
jbe
dec
or
mov
inc
xor
lahf
mov
mov
cmp
sub
dec
fistp
test
movs
call
fsqrt
xchg
fsubr
or
xor
stos
repz
xor
(bad)
das
stos
mov
arpl
inc
jb
fist
bswap
dec
jbe
sti
sar
fdivr
jp
sub
outs
lahf
adc
cwde
xchg
or
jle
add
or
iret
sub
(bad)
push
fsubr
int
jp
test
mov
loop
cld
in
sub
jb
xor
xchg
or
out
movs
push
sbb
fisub
ret
dec
jmp
retf
adc
jb
leave
sub
or
das
sub
shl
inc
xchg
mov
mov
mov
outs
mov
push
inc
js
fs
jnp
push
inc
mov
mov
ficomp
inc
(bad)
movs
adc
push
jnp
push
loope
cdq
test
popa
leave
repz
ret
test
mov
imul
out
pop
fld
adc
pop
sar
mov
add
inc
sti
sbb
(bad)
lea
and
das
out
xlat
push
pop
add
and
mov
sahf
cmp
dec
xchg
not
shl
inc
mov
enter
(bad)
mov
jg
jmp
dec
xchg
mov
pop
div
arpl
and
les
rcr
jg
jns
lea
adc
jmp
iret
jp
mov
xchg
mov
fisttp
and
stos
xlat
push
cmps
(bad)
aaa
sahf
sub
jne
pop
jmp
jo
arpl
jmp
repnz
mov
mov
cmp
add
fdivrp
(bad)
mov
test
mov
cmp
mov
ins
shl
push
mov
push
idiv
lods
pop
(bad)
out
add
movs
pop
sbb
call
mov
fnstsw
lea
ret
outs
cld
sahf
test
fisttp
mov
jbe
jbe
test
cmp
rcr
cmp
shl
jb
inc
jbe
jg
adc
add
retf
es
add
pop
loop
lods
adc
(bad)
nop
repnz
xchg
pushf
cmps
xchg
xlat
test
jns
(bad)
cdq
dec
dec
test
lods
push
pusha
push
cdq
push
inc
lds
dec
xchg
mov
pusha
cld
mov
inc
adc
dec
aad
sub
add
xor
inc
dec
jg
das
add
retf
push
fldcw
arpl
ja
(bad)
mov
and
iret
lods
rol
pop
dec
mov
sub
xchg
cs
xchg
das
cmp
add
jmp
push
jmp
dec
(bad)
test
ds
cld
movs
mov
adc
mov
add
cmp
scas
push
movs
mov
jmp
mov
nop
fcom
or
mov
fsub
(bad)
and
mov
in
movs
ja
out
mov
lods
push
js
sbb
or
dec
popf
and
push
pop
pop
pop
movs
sbb
push
hlt
(bad)
bnd
mov
xchg
jl
and
cwde
xchg
xor
pushf
xchg
in
jo
daa
scas
sub
enter
in
out
fwait
xor
jne
mov
push
call
adc
sbb
cmp
pop
xor
cwde
imul
lock
clc
push
mov
push
pusha
iret
pop
inc
je
jmp
pop
lods
jo
clc
out
mov
jmp
lahf
das
inc
dec
sub
and
retf
gs
mov
dec
xor
adc
in
(bad)
add
sub
or
sub
cmc
dec
cmp
mov
jmp
push
dec
cmp
adc
ins
jl
xchg
hlt
push
loope
je
xlat
push
xchg
addr16
nop
cwde
sub
jmp
mov
scas
push
and
retf
xor
mov
inc
and
jmp
add
loopne
pop
(bad)
ss
mov
xor
mov
adc
(bad)
test
out
mov
(bad)
xor
cmp
icebp
adc
outs
inc
sub
das
popa
nop
mov
push
clc
test
xor
inc
iret
call
adc
mov
es
lahf
ret
xchg
add
out
push
pushf
movs
xor
ja
push
out
ss
outs
mov
rcr
push
push
ret
pop
mov
push
push
fstp
cmps
and
rcl
xor
(bad)
and
arpl
pop
stos
mov
jge
mov
rcl
dec
out
or
jmp
xor
sub
sbb
int
push
aam
ss
mov
and
mov
je
push
outs
pop
fsub
repz
ret
xchg
xchg
push
sub
out
data16
add
ret
scas
mov
test
out
mov
icebp
mov
ror
jmp
inc
cmp
and
in
stos
fisubr
push
sbb
xchg
pop
loope
sar
ds
arpl
sbb
std
cmp
cmc
and
mov
dec
fbld
and
xor
leave
push
and
adc
and
test
iret
jge
cmps
mov
ret
rol
pushf
lahf
in
jl
fidivr
xor
aas
loope
inc
test
mov
pop
out
jne
retf
mov
sbb
bound
and
push
jnp
mov
mov
xor
out
mov
adc
daa
jbe
ret
in
loopne
push
xchg
fdiv
dec
inc
std
outs
xchg
ss
add
(bad)
push
and
and
ret
not
dec
mov
(bad)
out
sub
(bad)
mov
sar
inc
sar
shr
scas
addr16
push
cmps
loopne
(bad)
imul
pop
add
repz
stos
jp
add
push
sahf
jae
mov
je
mov
ins
mov
sub
or
inc
jae
clc
imul
fisttp
bound
push
xchg
adc
xor
mov
sbb
jl
test
sar
add
add
pop
cmp
mov
cvtdq2ps
mov
add
jle
mov
adc
js
push
jbe
pop
mov
cmc
xor
lock
xchg
test
cdq
xor
mov
xchg
aas
jge
(bad)
xchg
imul
jmp
hlt
add
adc
adc
je
push
jae
dec
stos
lahf
mov
mov
scas
call
inc
mov
jmp
fsub
fsubr
pop
push
adc
sbb
jnp
mov
push
ret
add
pushf
test
ret
dec
xor
adc
sub
dec
imul
(bad)
(bad)
ss
test
dec
mov
fistp
ja
jnp
ret
aad
xor
fild
icebp
cmp
push
(bad)
jb
add
aas
rcr
shl
mov
adc
xor
push
fwait
sub
mov
ror
ins
nop
mov
sub
cmps
scas
retf
jmp
les
pusha
pop
jecxz
stc
dec
mov
jb
dec
or
push
pusha
ror
xchg
call
call
pop
inc
jbe
loope
sbb
fs
mov
cdq
push
aad
int3
aaa
popa
sar
lea
mov
ins
imul
out
cmps
xchg
mov
pop
dec
(bad)
test
jle
xor
jb
push
jmp
mul
test
out
sbb
mov
cmp
sahf
test
push
xchg
test
adc
dec
jmp
ret
add
mov
cmp
iret
sub
cmps
stc
mov
cmps
and
push
mov
sub
dec
or
pop
stos
cmp
int
mov
out
es
sbb
rcl
jo
stos
scas
xchg
loope
inc
cmp
cmp
ror
lods
fs
push
sbb
xchg
mov
imul
xor
je
fcomp
out
mov
mov
pop
jb
loope
mov
inc
or
pop
ins
xlat
cmc
stc
les
adc
adc
mov
jg
add
lahf
sbb
adc
mov
iret
jg
repnz
stc
cmp
mov
jmp
and
js
out
add
loope
outs
imul
mov
push
mov
mov
test
adc
dec
pushw
inc
inc
fs
cmp
test
push
push
adc
push
jmp
retf
test
leave
ror
sbb
add
cwde
dec
cmp
pop
add
mov
mov
jnp
xchg
xchg
outs
retf
mov
lods
xchg
cmp
imul
popa
out
adc
xchg
les
loope
loope
(bad)
movs
mov
xchg
xchg
mov
leave
ja
cld
cmp
dec
icebp
mov
ins
enter
retf
sub
fnstenv
dec
pop
mov
pop
mov
je
mov
stos
sbb
push
or
stc
ins
pop
adc
jecxz
pop
(bad)
in
push
push
fs
lds
(bad)
mov
jmp
xor
sti
lahf
dec
(bad)
cmp
pushf
in
rol
push
add
retf
adc
jl
mov
or
mov
push
xchg
pop
mov
sbb
jo
jmp
push
jle
jge
adc
sahf
cmp
pop
pop
out
xor
mov
pop
cmp
scas
aas
or
ins
pop
out
mov
mov
stc
inc
fldenv
dec
test
jne
push
mov
test
outs
in
leave
clc
out
das
add
xor
inc
xor
popf
add
daa
mov
in
add
lods
mov
ret
xchg
mov
rol
push
add
(bad)
in
mov
pop
and
mov
pop
fisubr
loop
popf
popf
xor
and
cdq
hlt
call
sbb
mov
hlt
mov
(bad)
arpl
(bad)
xchg
push
mov
mov
mov
dec
add
lods
xor
mov
push
sbb
int3
push
popf
fcomp
mov
ret
cmp
and
sub
stos
sub
adc
icebp
nop
repnz
test
call
aas
cdq
mov
or
xor
xor
pop
push
in
loop
push
nop
in
dec
je
mov
jecxz
xchg
ret
es
mov
test
sbb
cmps
cld
cs
(bad)
pop
sbb
loopne
fucomip
(bad)
adc
mov
retf
mov
adc
loop
xor
in
test
(bad)
icebp
xchg
cs
fs
scas
int3
inc
sub
mov
jne
push
jb
rcr
pushf
xchg
sbb
adc
pop
daa
shr
dec
fsubp
and
mov
push
pop
push
aam
fwait
jno
xor
inc
cld
stc
int3
cmp
cbw
cmps
test
into
mov
pop
in
rcr
pop
aas
ja
lods
cmp
rol
sub
jge
fwait
pop
daa
repz
inc
mov
fsub
ds
cmps
test
inc
das
ins
and
shr
inc
add
repz
xor
sub
adc
shl
lock
loope
jno
cmp
fisttp
iret
adc
movs
push
iret
cdq
in
addr16
bound
mov
sti
stos
jecxz
sbb
sbb
xor
mov
push
push
and
aad
in
ret
cmp
lods
or
and
int3
push
leave
push
mov
jbe
imul
add
(bad)
jno
xchg
push
aad
stos
lock
lock
jge
sub
ret
mov
dec
mov
int3
inc
scas
add
dec
mov
dec
dec
xchg
iret
add
mov
mov
hlt
ret
iret
shl
stc
cmp
adc
test
(bad)
mov
ja
jae
pop
mov
test
inc
mov
mov
popf
lds
mov
jmp
aaa
xor
push
outs
daa
and
inc
add
lods
xchg
mov
mov
stc
into
pop
outs
cmc
mov
push
(bad)
mov
push
add
lock
jge
repnz
add
mov
inc
mov
fdiv
dec
sbb
jecxz
int3
into
mov
pop
push
push
and
pop
repnz
jp
ret
add
popf
inc
fldcw
cld
xor
jno
or
add
jb
xchg
pop
clc
(bad)
jno
push
fistp
imul
xchg
int3
pop
add
and
xlat
jo
call
mov
cs
push
bound
out
pop
ds
sti
pop
jecxz
xchg
sub
rol
out
int3
ss
test
sbb
sub
ja
sahf
into
loopne
pop
xlat
dec
das
xchg
adc
inc
cdq
(bad)
stos
jge
cmp
mov
jbe
pop
ds
movs
inc
(bad)
push
mov
mov
jbe
(bad)
je
stos
sbb
inc
fstp
enter
and
pop
ret
xor
mov
aad
pop
jl
mov
pop
les
push
inc
call
pusha
das
jmp
iret
pop
mov
sub
dec
paddsb
mov
gs
adc
or
out
mov
(bad)
push
stos
lahf
aad
or
adc
xlat
scas
outs
sub
adc
push
fisubr
cli
push
push
mov
fwait
push
or
gs
mov
add
in
mov
sbb
or
loope
push
not
iret
loopne
sbb
jp
pop
mov
xchg
push
psllw
mov
fnstcw
dec
das
sti
in
push
jns
sbb
xor
adc
sub
fs
sti
scas
mov
sbb
cmp
and
das
cmps
fiadd
mov
cld
push
repnz
mov
dec
push
jg
loop
jne
nop
and
ret
scas
fwait
xchg
jo
sbb
scas
repnz
aas
jbe
xchg
pop
fcomp
fsubr
(bad)
inc
mov
outs
xor
xor
dec
(bad)
cs
and
or
test
or
xor
pop
std
mov
mov
mov
mov
xor
xchg
jmp
pop
push
pmaxub
mov
cmc
sbb
add
popf
repz
add
lods
gs
dec
popf
inc
mov
mov
std
out
inc
aas
sti
rcr
rcl
dec
cmc
loope
inc
fcomi
out
jp
xchg
movaps
push
adc
cmp
xchg
xchg
pop
dec
cmp
das
push
je
inc
mov
sbb
sub
push
xor
movs
jbe
retf
mov
js
gs
xor
xchg
aas
inc
imul
loope
call
adc
push
sbb
mov
mov
mov
nop
outs
aad
pusha
into
xor
cs
fisttp
adc
add
push
(bad)
dec
adc
jmp
xchg
jbe
mov
sbb
mov
test
jb
or
xor
movs
cmp
in
cmps
fiadd
pusha
nop
jl
out
jg
ds
sbb
(bad)
mov
loopne
dec
test
scas
push
test
sub
and
cmp
ja
jbe
loopne
cmp
test
and
aaa
cmp
and
cmp
xchg
scas
sbb
fs
out
popa
inc
jae
adc
adc
lea
add
push
xchg
dec
test
push
hlt
add
sub
imul
popf
mov
nop
shl
fld
lahf
adc
ja
xor
div
push
and
arpl
mov
sbb
pop
mov
push
sub
pop
add
ins
adc
and
lahf
push
cmp
stc
es
cmp
mov
sbb
idiv
pop
jle
bound
jo
aam
ret
shl
sub
push
mov
hlt
jne
aas
xchg
shr
cmps
retf
push
sub
lods
mov
ret
clc
fild
push
mov
pop
sbb
mov
mov
pop
lahf
jne
aas
and
dec
fmul
lods
mov
and
mov
and
ficomp
push
mov
jg
imul
mov
imul
jne
outs
jb
dec
mov
or
out
and
mov
cmps
aam
fmul
jmp
(bad)
dec
mov
int
jnp
cmp
and
jno
rcl
movs
xor
ja
xchg
mov
cs
adc
(bad)
ss
jb
in
sbb
hlt
and
aas
mov
pop
aaa
ror
fsubrp
pop
and
add
imul
in
out
jmp
push
ja
push
xchg
gs
sahf
jne
out
and
ins
pop
push
add
sti
add
call
xor
jns
mov
fidiv
add
mov
or
and
cmps
sbb
std
pushf
jmp
bnd
mov
mov
push
ins
sub
sar
retf
mov
arpl
out
mov
pop
(bad)
dec
repnz
sti
mov
in
dec
jmp
(bad)
jmp
cdq
test
dec
es
xor
in
loope
jae
mov
sub
lods
pop
int
sub
dec
mov
sbb
repz
pop
stos
dec
sahf
(bad)
int
(bad)
ror
cld
iret
sub
lods
sub
sbb
jae
loop
sub
xor
inc
iret
std
mov
aas
loopne
sbb
ds
and
out
dec
inc
in
pop
jno
pop
into
stos
mov
pop
xor
xor
cdq
mov
cdq
movs
repnz
test
add
jmp
(bad)
mov
ss
movs
aad
rcr
int
dec
mov
push
repnz
sub
mov
repz
and
and
push
dec
mov
jbe
retf
add
rcl
les
cmp
mov
or
adc
dec
cmp
add
mov
sbb
adc
leave
(bad)
into
inc
retf
sub
sbb
pop
fwait
sub
jmp
movs
xor
inc
les
sub
mov
jb
cmp
pop
or
les
or
aam
int
out
imul
or
add
mov
fcom
repnz
in
jg
pop
adc
pushf
sbb
in
retf
test
push
and
fs
push
(bad)
dec
test
add
inc
das
mov
cmp
je
outs
jle
and
loope
mov
in
mov
ret
sub
mov
(bad)
pop
sbb
das
push
mov
or
(bad)
jl
and
mov
adc
test
sub
add
push
push
push
ficomp
add
in
add
stos
mov
xchg
ins
inc
or
mov
jno
rol
add
jnp
push
pop
ret
in
mov
adc
cmp
xchg
scas
lahf
ficomp
push
test
mov
retf
add
jae
inc
ficomp
lds
add
scas
mov
sbb
clc
add
add
pop
sub
or
stos
mov
jg
sub
sahf
cli
stc
fadd
(bad)
sar
push
or
aas
fwait
iret
(bad)
cmp
rcr
mov
xchg
and
(bad)
aas
mov
inc
cmc
inc
addr16
test
mov
mov
push
sub
xchg
xchg
cmps
ret
lock
dec
and
(bad)
aam
sub
fcom
add
shl
mov
xor
xchg
push
daa
mov
pushf
adc
std
ja
pushf
push
nop
push
jmp
xor
xchg
adc
ret
call
mov
mov
fidivr
not
inc
stos
arpl
dec
xchg
ins
dec
sar
das
sub
mov
test
(bad)
xchg
sar
stc
inc
fs
mov
cli
lahf
push
fisttp
mov
fsubrp
mov
push
imul
jo
test
add
shl
fdivr
rcr
or
das
and
mov
xor
mov
sti
rcr
(bad)
mov
sub
scas
mov
add
pop
add
les
pop
sahf
and
sub
leave
stos
xchg
not
cmps
or
push
push
dec
rcr
hlt
fistp
inc
invd
cdq
push
in
xchg
dec
pop
data16
mov
lds
clc
and
add
popa
jmp
pop
or
mov
outs
dec
dec
int3
mov
mov
shr
stos
es
sbb
loopne
addr16
adc
stc
fnstsw
or
sbb
in
sbb
mov
mov
sub
(bad)
out
outs
or
mov
std
push
mov
in
jb
rol
mov
popa
imul
mov
leave
push
mov
mov
mov
in
mov
xchg
adc
pop
or
pop
cmp
or
out
in
jmp
cs
icebp
shr
ror
mov
mov
mov
fld
shl
test
sub
jbe
inc
dec
in
dec
or
push
cmp
sar
addr16
out
xor
shl
inc
mov
outs
mov
dec
retf
xchg
out
adc
sbb
pop
dec
ret
inc
jnp
and
je
fldcw
pop
fucomip
push
(bad)
(bad)
cwde
sbb
cmp
lds
jo
cmp
or
and
mov
dec
inc
dec
popf
xor
mov
jecxz
in
or
or
mov
cli
icebp
or
xchg
loop
mov
xchg
pop
stos
adc
push
adc
cmp
clc
xor
sub
scas
retf
cmp
in
xchg
xor
loopne
jmp
mov
or
add
cld
popf
adc
loopne
jmp
xor
dec
adc
(bad)
dec
test
enter
xlat
imul
cs
add
scas
xor
push
mov
pop
ds
add
cmp
js
xchg
je
scas
fidiv
pop
add
(bad)
lods
fsubr
cmp
jb
push
mov
sar
rol
fsubr
mov
ins
lods
mov
and
mov
jecxz
jmp
out
push
jb
out
les
pop
add
icebp
sub
std
(bad)
jmp
jg
inc
adc
dec
pusha
repnz
popa
push
pop
aaa
(bad)
std
adc
inc
lea
bound
iret
loop
cmp
scas
xor
xor
sbb
pop
sub
xor
xor
cli
js
rcl
sbb
jecxz
sub
mov
arpl
push
jae
add
aam
fnstcw
push
sbb
mov
sahf
inc
fldcw
push
and
outs
fs
pushf
push
repnz
sub
(bad)
xrelease
call
jno
bound
test
xor
ins
mov
sub
xchg
imul
cmc
cmp
pop
xor
scas
inc
fs
inc
aas
movs
sbb
test
mov
int3
adc
dec
icebp
sub
pop
aas
push
push
sub
aas
cmp
shl
(bad)
stc
push
lods
xor
(bad)
aas
mov
mov
ror
cld
dec
pop
mov
popf
jmp
jmp
fst
push
in
loope
mov
shr
jecxz
sbb
adc
jge
je
das
call
add
push
enter
mov
int
mov
sub
ror
jbe
dec
test
sbb
ret
mov
mov
jno
sub
sar
sti
mov
bound
dec
call
mov
and
fmul
fwait
aam
loop
mov
sbb
pop
scas
movs
aas
call
mov
jle
add
call
xchg
test
cmp
inc
jae
aas
mov
in
cs
jecxz
push
jg
dec
xlat
adc
dec
mov
ret
scas
mul
jmp
push
and
lea
icebp
or
pop
sbb
pop
in
jns
imul
enter
hlt
and
and
fwait
sbb
inc
inc
shl
or
shr
pop
adc
mov
clc
out
je
shl
and
jae
and
popa
fist
adc
cmp
cld
popf
bound
cmp
mov
or
out
addr16
add
shl
inc
push
add
lods
cli
push
push
iret
sub
mov
pop
popf
mov
ins
sbb
sub
jne
leave
sub
push
pusha
and
rep
push
adc
mov
enter
mov
xchg
shr
xchg
ror
call
sar
loope
nop
(bad)
sub
push
xchg
imul
jl
add
lea
or
cwde
xchg
int3
push
test
push
jecxz
call
daa
cmp
xchg
adc
jecxz
retf
jp
aaa
fld
sub
fcomp
push
push
add
sar
jno
jns
mov
ds
in
xchg
pop
dec
adc
loop
or
imul
jl
loopne
inc
sar
mov
mov
mov
loope
adc
cwde
aad
cmp
push
mov
or
mov
pop
sub
cmp
mov
ja
jmp
mov
lock
pop
xchg
sbb
les
or
hlt
retf
int
cwde
dec
in
nop
adc
sub
adc
xor
xchg
aad
inc
push
arpl
in
ins
lds
lods
aam
push
fmul
stc
loopne
xchg
push
leave
mov
cld
shr
mov
mov
or
lahf
pop
sbb
loopne
movs
mov
imul
movs
cmps
dec
shl
into
(bad)
push
add
push
test
movs
and
call
ins
mov
cli
mov
add
mov
loop
push
ds
lea
fsub
std
sub
popf
hlt
hlt
add
nop
leave
(bad)
jl
jl
xchg
adc
fsub
cdq
adc
lds
ret
clc
inc
ret
cs
pusha
dec
pcmpeqw
ss
repz
out
push
cli
arpl
pop
push
or
loop
arpl
lods
sbb
and
jb
arpl
imul
and
call
rcr
and
mov
jo
xchg
sbb
cwde
loope
dec
push
stc
xor
sub
in
xchg
xor
fwait
push
sbb
clc
pop
lock
sbb
scas
pop
inc
xchg
ret
add
dec
inc
fld
xchg
xchg
mov
mov
add
dec
xchg
add
ret
dec
dec
fwait
jp
and
push
cmc
push
imul
into
mov
cmp
dec
adc
in
mov
icebp
adc
fs
(bad)
loop
push
push
inc
sbb
mov
push
cwde
cmp
leave
push
sti
mov
push
pop
aas
gs
xlat
repz
popa
fs
rcr
mov
daa
mov
clc
pop
pop
pop
mov
push
pop
aam
in
repz
mov
pop
or
ret
cmps
pusha
jmp
adc
aaa
pop
jns
fldenv
and
sub
pop
(bad)
jae
push
stos
add
ret
pop
xor
in
mov
fcmovnu
mov
cmp
arpl
imul
pop
aaa
gs
retf
jmp
dec
push
pushf
cs
aam
std
and
inc
das
(bad)
push
(bad)
test
ret
jne
movs
pop
inc
adc
lahf
sbb
add
dec
pop
xchg
sar
out
lock
cmp
sub
int
xor
es
or
fisub
fdivr
stos
jae
add
imul
neg
jmp
ror
enter
xlat
sbb
sar
fstp
iret
scas
push
mov
(bad)
pop
pop
test
push
test
cld
mov
je
push
sub
lds
inc
shl
mov
pop
mov
(bad)
js
retf
call
jae
in
sti
jns
add
cs
shl
jecxz
das
push
adc
popf
push
sub
mov
mov
add
mov
jl
repz
into
cmp
loop
pop
stos
jb
xchg
jmp
je
jnp
mov
mov
cli
xchg
jbe
mov
aas
and
leave
mov
mov
cmp
jg
fimul
sbb
fimul
jb
add
mov
addr16
push
xchg
mov
mov
jne
hlt
jno
pop
(bad)
std
mov
fcomp
push
gs
inc
or
repnz
add
out
fimul
xor
push
cmps
xchg
test
outs
fidivr
mov
movs
push
jo
dec
pop
jmp
rol
jge
sbb
test
jns
xchg
or
lea
push
in
rol
mov
cdq
adc
lods
mov
dec
lods
ror
push
xchg
push
mov
mov
imul
sub
pusha
push
loopne
lahf
retf
stos
retf
pop
pop
scas
imul
lods
rcl
sti
mov
lods
in
(bad)
movs
sbb
cdq
sbb
popa
pop
das
xor
adc
xchg
(bad)
in
in
mov
repnz
popf
loopne
mov
or
stc
xchg
lock
out
int3
cmp
out
mov
push
bound
retf
jp
sahf
repnz
aad
inc
mov
or
or
je
idiv
aas
imul
cmc
loope
xor
mov
jmp
(bad)
jnp
in
cmp
or
je
cmp
or
aam
aaa
fs
push
pusha
mov
scas
inc
jbe
xor
cmp
jns
ss
fwait
mov
es
sar
ret
push
ins
aas
test
jnp
cmp
stc
mov
xchg
arpl
sahf
and
push
sbb
out
inc
stos
scas
mov
sub
fs
enter
jns
lods
add
mov
jo
adc
fistp
retf
enter
inc
mov
and
adc
adc
push
push
adc
aad
add
cli
ins
test
xor
aas
test
inc
push
sbb
scas
mov
(bad)
sub
into
or
shl
or
push
loop
xlat
loopne
push
or
adc
stc
repnz
das
push
int
sub
jge
push
mov
inc
lds
jbe
(bad)
xchg
stos
push
enter
or
in
inc
dec
mov
sti
retf
call
cmp
mov
xor
in
ins
sbb
repnz
push
inc
xchg
clc
mov
jnp
ds
jmp
jg
popa
xchg
lds
retf
mov
mov
shl
inc
xchg
dec
jecxz
sub
push
cli
mov
xor
ins
jmp
jns
dec
sti
lods
jb
rcl
das
xor
ror
inc
cwde
mov
ss
aaa
scas
xor
mov
int3
cmp
push
int3
dec
sub
jne
imul
cmps
fucomi
cld
stos
ret
or
push
and
pop
xchg
cwde
stos
bound
inc
sub
cmp
dec
inc
cmp
sbb
push
int3
push
lahf
push
sub
movs
xchg
sahf
cmp
inc
sahf
mov
in
imul
test
jns
jns
adc
rol
lods
cmps
lahf
lods
xor
inc
les
repz
sbb
mov
out
xchg
(bad)
adc
(bad)
(bad)
or
adc
add
cs
lods
jae
popf
add
stc
(bad)
xor
fs
push
or
into
in
mov
mov
in
das
inc
test
pusha
fnstenv
pop
jmp
fadd
ret
sub
fsub
mov
xor
inc
ds
enter
lsl
add
test
cld
test
push
fcmovbe
out
dec
push
outs
cld
push
mul
jb
inc
cmp
and
xor
mov
aad
adc
addr16
fcmovnu
dec
outs
xor
mov
lea
fwait
pop
xchg
ret
fidivr
out
(bad)
addr16
jnp
enter
mov
jae
jmp
in
imul
movs
leave
dec
jmp
sub
stos
push
adc
mov
xor
movs
ret
cmp
int
shl
dec
test
pop
push
or
retf
int3
sbb
jne
cmp
retf
jp
pop
xchg
ins
push
mov
nop
cmp
sub
jl
call
fwait
mov
mov
add
sbb
sbb
fcomp
jb
jb
mov
ds
push
push
xchg
sbb
in
and
mov
pop
mov
dec
dec
mov
xchg
repz
push
(bad)
pop
int
inc
pop
fild
outs
scas
or
mov
sub
in
add
(bad)
loopne
mov
inc
inc
add
iret
xchg
xchg
mov
and
ret
div
or
clc
dec
mov
pusha
clc
ss
repz
ret
xor
fisttp
cld
in
cwde
(bad)
mov
mov
fsubr
dec
call
add
jge
pop
call
mov
fiadd
outs
repnz
adc
cmc
jne
cmp
mov
dec
push
jbe
mov
ficomp
movs
push
push
cmps
aam
ror
xor
add
sahf
mov
sbb
cmp
hlt
hlt
stc
retf
mov
jecxz
mov
dec
xor
arpl
pop
adc
push
mov
pop
inc
mov
(bad)
retf
(bad)
xchg
std
jg
jge
xlat
stos
pop
pop
outs
push
(bad)
add
push
dec
(bad)
hlt
loope
stos
xor
addr16
retf
mov
in
mov
pop
xchg
and
pop
push
jb
mov
call
aam
jmp
les
mov
push
loop
dec
aas
jmp
stos
lods
in
xor
add
mov
loopne
cmp
in
ret
inc
inc
scas
inc
xor
add
sar
fisub
and
test
add
fwait
mov
int
cmp
pop
mov
and
out
xor
inc
les
push
(bad)
sbb
sub
jle
rcl
test
int3
shl
xchg
mov
(bad)
outs
outs
dec
fsub
hlt
pop
pop
mov
pop
adc
loop
jmp
add
mov
out
mov
xchg
stc
imul
push
aaa
sbb
cmove
mov
cdq
jnp
test
fcmove
loope
sbb
xchg
sbb
inc
mov
ins
ins
xor
cmp
push
push
call
scas
shl
and
add
and
sub
les
push
dec
sahf
lds
jmp
aad
mov
bound
(bad)
aas
int3
mov
das
xchg
inc
push
push
inc
(bad)
xlat
mov
jge
push
div
mov
sbb
xor
cmc
call
sbb
mul
fbld
or
sbb
out
imul
push
fsubr
inc
push
ret
mov
jecxz
xchg
adc
lods
pop
mov
xlat
sub
imul
mov
sub
repnz
and
pop
xor
sar
and
ds
dec
and
repnz
cmp
cmp
inc
nop
adc
or
daa
push
das
popf
mov
pop
lahf
ins
lods
out
fstp
repz
add
gs
imul
data16
ins
retf
addr16
aam
pop
jle
aad
mov
retf
aam
mov
int
jae
lds
std
or
not
int3
ins
push
clc
sahf
fnsave
in
mov
mov
adc
test
push
test
mov
rcr
xchg
push
mov
or
adc
je
jle
xor
ret
jg
stc
mov
fmul
int
mov
dec
push
or
jnp
rcr
in
jecxz
sbb
add
push
out
cmc
js
bound
mov
aam
inc
iret
mov
test
scas
mov
add
sti
out
push
imul
fdivr
jmp
ss
jne
(bad)
cmp
sbb
xchg
push
pop
push
xchg
sub
outs
mov
mov
test
pop
in
(bad)
fld
sub
mov
dec
daa
mov
sbb
loopne
ror
pushf
mov
pushf
mov
loop
inc
in
add
aaa
mov
cmp
jno
pop
jne
out
jle
in
retf
inc
cdq
mov
dec
sbb
sub
lds
ret
scas
cwde
pusha
scas
movs
js
inc
sbb
add
pop
xor
jge
(bad)
push
jno
xor
stc
mov
cwde
or
xor
cmp
fs
je
fnstcw
sahf
and
dec
loope
xlat
ja
mov
jl
lock
iret
xchg
leave
ret
pop
(bad)
popa
movs
stos
lods
ss
repz
fsub
xor
mov
cmps
cdq
cmp
jle
pop
lds
daa
std
xchg
out
fisttp
enter
pop
test
les
pushf
pop
pop
add
xor
out
add
(bad)
dec
out
add
push
add
xor
jns
fs
into
sbb
add
and
jecxz
dec
mov
pmaxub
sub
xor
adc
dec
jmp
push
ss
loopne
add
jnp
shr
push
and
or
jmp
xchg
imul
pop
data16
push
call
sbb
mov
cmc
jne
xchg
lea
addr16
dec
std
leave
shr
dec
test
fs
pop
mov
mov
cli
cmp
xor
xchg
add
xor
add
xchg
aaa
scas
stc
sbb
push
int3
adc
adc
pop
sbb
in
daa
ins
mov
push
and
into
xchg
xor
push
ret
push
movs
imul
ins
loopne
outs
inc
inc
jg
xchg
mov
jns
jne
and
xchg
pinsrw
shr
xor
loopne
inc
test
mov
test
fcomip
call
into
adc
sar
cmp
push
ror
stos
pop
addr16
mov
aas
mov
shl
or
loopne
mov
inc
lods
lods
std
mov
test
stos
jb
std
mov
pop
push
adc
xor
out
pop
test
add
pop
mov
aad
(bad)
cmp
ret
push
sub
and
pop
pop
push
xchg
jbe
fbstp
mov
scas
out
ret
pop
jb
shl
ret
adc
pushf
dec
adc
xchg
add
fnstcw
mov
(bad)
push
fst
call
jb
movs
daa
pop
sbb
test
jns
cmp
pop
loopne
sub
rcr
not
push
(bad)
adc
arpl
je
inc
test
xchg
mov
adc
movs
xchg
imul
and
jno
pop
es
xchg
add
imul
jbe
(bad)
cmp
jno
int3
into
xchg
pop
sbb
outs
jnp
xchg
scas
fstp
push
and
jge
fcom
and
sbb
dec
in
jmp
push
jg
adc
retf
mov
and
imul
(bad)
fdiv
jmp
jmp
scas
push
popa
and
loopne
fimul
inc
popa
mov
call
fwait
mov
out
cmp
xchg
iret
cmp
fidiv
dec
gs
loope
jne
xor
jecxz
jno
xchg
adc
dec
dec
in
ror
stc
cmps
ins
(bad)
sub
sbb
xchg
int3
adc
inc
movs
cmc
into
sub
add
pusha
pop
push
loop
push
xor
mov
or
mov
add
in
xor
mov
cld
xor
push
jb
pop
push
sub
fldl2e
imul
rcr
cmp
sahf
sub
xchg
popa
jnp
sbb
mov
mov
clc
inc
imul
or
mov
out
dec
jmp
jle
les
in
mov
dec
sbb
stos
imul
test
add
push
cli
push
add
in
out
daa
fld
loop
cmp
sub
sbb
or
inc
jg
ds
js
cmp
hlt
inc
dec
add
lods
lahf
leave
mov
dec
dec
mov
in
ds
push
jae
sar
loope
sbb
stc
int
or
in
aad
jg
pop
(bad)
into
icebp
cwde
cwde
cmps
shr
outs
push
jns
ins
xchg
mov
ins
push
ins
imul
add
jns
add
outs
xor
xchg
mov
popf
mov
mov
lahf
mov
fwait
push
and
jb
push
mov
push
mov
mov
int
pop
mov
(bad)
jmp
dec
data16
and
xchg
and
(bad)
xchg
push
mov
sbb
inc
pop
loope
div
and
imul
(bad)
xor
ja
inc
nop
mov
pop
mov
push
test
xor
mov
es
das
adc
cmps
push
sub
add
xlat
mov
mov
scas
jo
test
sti
test
pop
jnp
gs
repz
scas
(bad)
jle
cmp
inc
out
stos
add
shl
icebp
and
or
or
jb
aad
pop
cmp
push
xchg
cdq
in
(bad)
dec
addr16
xor
stc
(bad)
sti
test
pushf
arpl
pop
aad
sti
retf
outs
xor
inc
add
int3
push
std
int
adc
push
jno
cwde
cmp
xchg
arpl
sti
cmp
xchg
test
dec
or
jg
pop
sbb
mov
(bad)
call
imul
scas
lock
bound
cmp
rol
mov
(bad)
arpl
mov
or
jmp
cmp
jmp
(bad)
in
pop
scas
add
and
loope
inc
cs
popf
push
mov
pop
lods
mov
stos
sbb
xor
xor
mov
push
pop
and
mov
(bad)
jmp
mov
js
rcl
js
add
inc
xor
mov
or
or
das
push
mov
fst
mov
adc
inc
xchg
repnz
jle
xchg
add
mov
mov
inc
clc
sbb
sahf
xor
jne
les
dec
loope
test
cwde
mov
sbb
lods
sub
ror
sahf
xchg
das
stc
sahf
ret
or
xchg
and
push
rol
xor
ja
mov
(bad)
stc
test
mov
das
push
and
xor
das
mov
xor
les
imul
aas
push
xlat
cmovno
jb
out
cmps
icebp
fmul
push
dec
push
aaa
in
cwde
cld
mov
and
idiv
inc
xchg
mov
dec
sub
mov
dec
shl
es
push
sar
mov
push
imul
icebp
jns
arpl
mov
(bad)
(bad)
lahf
lods
ins
out
push
iret
jecxz
outs
push
add
(bad)
pop
das
mov
cmps
hlt
rol
cmp
xor
cmp
add
outs
inc
inc
dec
arpl
shl
push
mov
pop
outs
add
mov
push
cmps
jp
rcr
pop
cmp
imul
cmc
ins
test
cmp
xchg
js
(bad)
repnz
adc
add
push
mov
cdq
cmp
cmp
sbb
sbb
lock
and
call
mov
das
(bad)
sub
xchg
aas
(bad)
and
adc
pop
ja
xchg
sub
inc
hlt
push
cs
out
xor
jns
imul
and
out
nop
(bad)
repnz
icebp
lahf
mov
sbb
xor
aaa
fisttp
inc
sub
xlat
int
icebp
cmp
retf
xor
cmp
rol
push
jmp
aad
sbb
xor
loopne
call
add
lahf
gs
sbb
xlat
or
sub
mov
pop
xchg
mov
test
popa
pop
adc
mov
adc
push
out
push
xchg
adc
test
pop
lods
(bad)
jl
push
cmp
stos
mov
movs
and
fmul
push
out
cmp
int3
into
push
sub
inc
mov
scas
retf
jb
ja
xchg
fxch
out
outs
imul
stc
jmp
jbe
add
dec
inc
push
inc
retf
or
(bad)
inc
sar
sub
mov
and
and
push
adc
jg
fstp
mov
rol
xor
lock
shl
pop
mov
ret
fwait
push
test
jns
push
(bad)
dec
icebp
inc
nop
cmp
inc
inc
sbb
adc
ret
(bad)
movs
lods
fidiv
jg
mov
xchg
push
imul
cmps
xchg
ss
pop
mov
nop
scas
push
jl
movs
pop
fwait
outs
test
or
mov
inc
mov
sbb
dec
outs
xchg
sbb
retf
adc
mov
popf
into
sbb
mov
xchg
lea
cmp
mov
aam
movs
fcmovnbe
inc
fstp
pop
jnp
rcl
popa
push
push
fisttp
inc
xor
jp
mov
ja
push
(bad)
popa
sahf
sub
dec
add
mov
sbb
fs
popf
lahf
adc
loopne
sahf
sbb
dec
dec
loope
loopne
dec
loop
lods
mov
scas
jge
jnp
aas
aam
mul
cmps
js
(bad)
jmp
mov
bound
xchg
(bad)
mov
push
popa
stos
stos
jge
push
cs
loope
mov
clc
xchg
jle
inc
mov
pop
cmp
add
jl
sub
stos
iret
inc
cwde
aas
push
inc
ja
cwde
shl
mov
push
sbb
lock
push
popa
gs
test
jb
loop
jp
outs
jnp
inc
push
xchg
call
outs
popa
cmp
jmp
les
retf
sbb
pushf
push
ror
addr16
mov
imul
adc
dec
ret
pop
mov
add
dec
pop
shr
adc
aad
aad
mov
cmp
adc
mov
xor
gs
jg
jmp
dec
adc
outs
inc
and
jg
inc
test
sbb
aas
or
outs
and
lahf
icebp
mov
fwait
popf
pop
shr
dec
sbb
rcr
push
fst
out
sub
jae
push
jl
cwde
(bad)
push
xchg
test
xor
adc
adc
mov
cmp
rcl
in
dec
in
cmp
xchg
es
addr16
cmp
xchg
jmp
in
cwde
adc
mov
imul
lea
and
push
or
xchg
outs
stc
or
inc
in
sub
adc
cwde
daa
scas
(bad)
or
adc
dec
push
stc
mov
lahf
repz
adc
stos
and
cmps
mov
sbb
lds
(bad)
cmp
or
scas
or
xor
adc
gs
mov
pushf
ret
or
mov
fnstsw
jecxz
scas
pop
adc
imul
push
pop
ret
jb
adc
sub
pop
fdiv
pop
stc
push
into
adc
pop
retf
pop
dec
mov
add
sub
aaa
xchg
ror
jo
(bad)
cmp
push
add
adc
in
lahf
fst
xor
cwde
and
inc
add
pusha
sbb
mov
and
cmp
dec
icebp
ret
add
les
sub
loope
dec
es
out
repz
and
pusha
addr16
leave
mov
jno
sub
and
or
jne
push
xchg
sti
xchg
stc
mov
add
jmp
(bad)
popf
jge
repz
jbe
sbb
js
and
sbb
pop
and
adc
dec
jmp
add
inc
je
stos
cs
aam
xor
call
les
dec
cmc
cmps
xchg
push
jecxz
sbb
push
js
cld
(bad)
imul
adc
retf
test
test
iret
lock
clc
ja
call
pop
repz
cld
jne
inc
daa
or
in
jbe
mov
and
mov
add
inc
das
or
stos
xchg
or
repnz
inc
jmp
mov
cmp
jg
sbb
dec
dec
mov
bnd
pusha
xchg
adc
ja
xor
pop
jmp
fs
cmps
add
shl
mov
adc
aaa
dec
lock
fwait
push
jbe
clc
bound
lea
xchg
loop
and
les
xor
in
loop
shr
(bad)
stc
rcl
sub
sbb
out
sbb
in
pop
sub
out
mov
dec
dec
test
jb
add
inc
and
(bad)
xchg
push
xchg
aad
jno
icebp
push
pop
or
out
xchg
ins
xchg
cmp
mov
ins
aad
add
pop
cmp
adc
inc
xchg
fadd
ret
scas
repz
clc
cwde
cmp
pop
jmp
cld
in
mov
pop
xchg
pop
ds
enter
test
mov
and
push
dec
jecxz
cmps
sbb
or
idiv
cmps
add
sahf
adc
in
loop
std
mov
cdq
mov
add
je
mov
fisubr
cmp
xor
imul
mov
adc
movs
and
outs
mov
cmp
or
shr
cwde
arpl
inc
and
push
pop
xor
xor
jnp
mov
xor
add
imul
mov
sub
inc
sahf
pop
scas
sub
imul
jns
push
cmp
mov
xchg
shl
int3
xchg
cmp
dec
sbb
add
je
add
sub
sub
in
push
mov
test
lahf
add
popf
mov
enter
(bad)
jmp
cmp
jge
xchg
rol
cmp
inc
icebp
jg
mov
es
cmps
xchg
sbb
pop
mov
call
int
test
in
xor
int
pushf
stos
or
xchg
pop
out
add
lods
imul
mov
call
push
and
out
pop
call
pop
aad
cmps
stos
int3
addr16
xlat
xchg
xor
aam
in
test
mov
pop
pop
mov
xchg
jg
jo
dec
or
popa
cmp
cmps
push
xlat
(bad)
inc
dec
(bad)
jmp
or
dec
fiadd
and
not
dec
pop
sub
jecxz
jne
or
jecxz
mov
push
stc
sbb
mov
(bad)
cmc
out
mov
add
retf
or
jae
pop
(bad)
xchg
push
daa
aaa
jg
push
adc
pushf
call
pop
fild
xchg
xchg
sbb
jmp
inc
daa
sub
or
add
(bad)
into
dec
or
pop
sub
es
sti
xchg
push
xchg
test
push
mov
pop
cs
xchg
scas
mov
pop
cwde
sub
cmp
mov
daa
in
test
xor
imul
jae
xor
adc
or
mov
movs
dec
mov
movs
inc
sbb
jmp
in
jae
mov
mov
pop
cmps
mov
sbb
cmps
pop
mov
nop
push
adc
mov
addr16
movs
clc
pop
fisub
fisub
out
das
cmp
jbe
cli
jg
sahf
mov
inc
pop
pop
jo
add
inc
in
and
push
mov
fsubr
inc
jl
push
push
dec
cmp
sahf
js
js
pop
fcomp
pushf
lahf
clc
fcmovnb
dec
sub
add
mov
imul
fdiv
and
mov
fwait
pop
cs
xlat
sahf
inc
pusha
enter
mov
aas
out
adc
mov
repnz
les
pop
lock
sub
repz
jae
lock
daa
lock
add
mov
stos
push
jae
(bad)
mov
loopne
dec
stos
push
pop
xor
mov
inc
sti
mov
test
push
sub
jle
adc
pushf
sbb
mov
fs
mov
or
push
push
jns
and
cwde
cmp
and
xor
cmc
test
mov
push
inc
mov
and
mov
jns
les
test
mov
or
inc
mov
sub
xor
data16
sub
mov
mov
pop
sti
ret
dec
icebp
pop
mov
sbb
push
push
lahf
dec
stos
lods
xchg
mov
cli
xchg
cmc
lock
out
hlt
in
pop
mov
ja
ins
mov
popa
or
mov
sbb
pop
aaa
sub
jl
cmp
xchg
dec
jns
out
mov
aad
cli
sbb
jne
movs
jl
push
js
retf
pop
dec
jge
xchg
mov
mov
mov
push
out
mov
das
push
push
cmps
add
imul
rcl
adc
mov
jmp
ret
and
in
or
out
outs
and
loope
sub
arpl
inc
loope
sub
push
push
fwait
dec
jbe
cmp
and
movs
mov
push
dec
and
mov
fdiv
and
in
jg
push
add
xor
inc
add
push
xchg
mov
push
sti
fnstcw
xchg
cwde
in
adc
fisttp
and
test
xor
mov
mov
fstp
and
push
pushf
cs
sbb
arpl
out
jg
ds
movs
cmp
adc
(bad)
jae
(bad)
loopne
int
add
inc
pusha
or
adc
das
add
push
shl
clc
or
std
icebp
loop
or
pop
mov
jnp
push
scas
in
pop
adc
xor
xor
mov
loopne
aas
bound
mov
dec
mov
adc
repz
jo
cmps
popf
cmp
and
add
jge
dec
inc
xchg
jbe
call
sbb
(bad)
push
(bad)
sbb
mov
xor
jle
mul
pop
pop
add
cld
scas
cdq
dec
xchg
es
jnp
imul
out
mov
push
and
adc
(bad)
fisubr
pop
xchg
push
adc
lds
and
out
icebp
fbstp
ins
mov
mov
and
or
inc
(bad)
xchg
in
in
retf
(bad)
mov
xchg
in
in
pop
in
inc
dec
lods
push
jne
aas
sar
or
daa
dec
mov
movs
(bad)
cdq
cdq
scas
push
cmp
out
push
arpl
call
stos
retf
mov
add
dec
icebp
sub
cmc
sahf
cwde
xchg
pop
mov
rol
mov
iret
adc
dec
fwait
rcl
add
aas
les
jbe
pop
xor
mov
pop
adc
repnz
pop
mov
std
fstp
loope
mov
xor
fldcw
inc
push
or
hlt
out
shr
stc
pusha
xchg
pop
dec
mov
mov
xlat
push
arpl
fcmovnb
adc
adc
and
push
cmc
scas
dec
jnp
inc
fs
sub
push
and
lods
adc
and
stos
or
xchg
rcl
xchg
push
loop
mov
es
scas
data16
lahf
adc
aaa
gs
call
retf
mov
lods
dec
loop
sti
mov
adc
mov
enter
push
mov
popf
jge
xchg
or
xchg
cdq
jmp
(bad)
fst
addr16
push
nop
(bad)
jb
(bad)
push
daa
fisubr
xor
aas
add
sbb
mov
push
adc
adc
xchg
cmp
dec
fs
(bad)
out
call
xor
jb
and
push
mov
xlat
pop
loopne
or
leave
or
loopne
xchg
mov
dec
sbb
push
loop
adc
sub
adc
int3
sbb
fcomp
inc
and
mov
pop
lahf
mov
or
push
lea
cmps
mov
push
pop
push
adc
xlat
je
in
and
aam
aad
cmp
cli
dec
add
nop
adc
(bad)
dec
pop
or
push
push
mov
pop
dec
adc
out
fwait
call
sbb
sub
repnz
jno
jl
ret
fild
(bad)
daa
gs
mov
sbb
loop
out
fsubr
adc
cmp
icebp
mov
jae
clc
icebp
dec
xor
shr
or
mov
(bad)
arpl
sub
sbb
pop
add
mov
in
add
xchg
into
stc
cs
add
lock
outs
pop
jp
loopne
bound
or
mov
push
test
nop
sbb
call
pusha
dec
dec
xchg
(bad)
loop
in
mov
mov
test
test
cmp
ja
ins
test
mov
adc
es
call
push
or
iret
add
repnz
pop
sub
daa
or
adc
aam
jns
add
and
push
add
inc
cmp
mov
daa
inc
shl
add
(bad)
std
and
push
mov
sbb
xlat
xor
(bad)
push
and
mov
inc
push
int3
sar
sbb
test
scas
cdq
push
stos
mov
mov
mov
add
mov
inc
out
loopne
jecxz
(bad)
cmps
(bad)
int3
loopne
mov
push
(bad)
pop
jb
enter
mov
es
fidivr
adc
lock
(bad)
push
pop
and
scas
jecxz
push
in
jne
popa
jmp
in
mov
jmp
adc
in
ficom
cli
cld
and
dec
dec
push
lock
in
pop
into
xchg
loopne
seta
mov
pop
mov
fcomip
(bad)
js
mov
dec
sub
pusha
sub
iret
mov
arpl
mov
jl
sub
loopne
int
push
jecxz
das
retf
leave
cmp
add
fdivr
or
xor
xor
xchg
ret
test
mov
pop
ins
or
loop
test
cmp
xor
jg
add
addr16
enter
fist
jl
jecxz
push
add
push
push
xchg
scas
in
push
pop
dec
(bad)
mov
in
loop
movs
jne
xchg
ja
adc
ud2
mov
scas
or
jge
stos
sub
(bad)
cmp
ds
loopne
add
lea
fdiv
popf
mov
stos
mov
pusha
mul
in
inc
div
ins
xchg
xor
jne
dec
inc
fdivr
imul
movs
sub
mov
push
mov
pop
fld
and
push
stos
cmp
retf
iret
imul
(bad)
out
inc
push
loop
sub
dec
xchg
dec
rol
pop
std
inc
repz
jnp
sub
sub
add
pop
push
in
test
xchg
pop
push
(bad)
popf
and
jl
cmp
out
dec
dec
sti
mov
mov
xchg
arpl
das
jo
xchg
data16
aaa
sub
or
repz
add
jge
and
data16
out
dec
movs
lahf
pusha
scas
in
sbb
stc
mov
stc
inc
sub
and
inc
jmp
sub
mov
retf
imul
jecxz
out
pop
xchg
mov
movs
xor
adc
imul
mov
sahf
or
dec
shl
xchg
(bad)
in
cdq
mov
cld
repz
mov
(bad)
mov
mov
push
mov
push
pop
test
sbb
int3
outs
push
push
xor
je
inc
outs
rcr
adc
push
jmp
in
nop
mov
mov
add
mov
shr
adc
out
out
jbe
cmps
mov
loop
or
or
pop
lea
ret
xor
lods
scas
adc
xchg
aas
rcl
sub
(bad)
pop
ds
shr
mov
jle
and
idiv
dec
adc
mov
xchg
popf
sbb
xchg
movs
jne
fucomp
inc
or
adc
fldcw
cwde
cmp
or
adc
dec
jmp
stos
cmp
xchg
in
in
ds
push
dec
loop
sub
(bad)
not
cmp
mov
test
out
stc
xor
xor
pop
xchg
stc
es
and
xchg
push
and
sbb
jmp
(bad)
cmp
fcomp
and
cmp
(bad)
out
jge
loope
dec
test
sahf
jle
inc
pushf
popa
aad
cmp
in
adc
push
pop
ds
adc
mov
pusha
or
push
hlt
push
adc
test
adc
std
or
sbb
push
cmp
aas
aad
idiv
inc
or
mov
xchg
mov
outs
jmp
and
bound
ja
push
ins
aas
cmc
xor
push
loopne
pop
mov
lods
lock
xchg
stos
jne
enter
sahf
push
into
outs
repz
shl
sbb
pop
add
jle
addr16
and
js
sbb
les
es
imul
popf
pop
push
pop
cli
cmc
outs
cmp
push
jno
fs
sub
cli
add
xchg
mov
in
mov
leave
jnp
sbb
imul
xor
push
mov
in
in
jmp
orps
sbb
addr16
jns
mov
in
push
jmp
js
mov
push
cmp
mov
cmps
dec
inc
cmps
gs
ins
add
inc
pusha
cwde
and
pushf
imul
or
and
mov
push
jg
or
adc
sbb
test
arpl
mov
lahf
mov
jnp
and
(bad)
lahf
or
sahf
dec
jb
sub
inc
add
(bad)
dec
jno
mov
jns
ins
ret
jnp
jb
cli
add
imul
lahf
js
add
sbb
inc
dec
int
mov
mov
lods
rcr
int3
bound
cmc
ror
mov
sub
stos
mov
popa
mov
test
in
cmp
jle
outs
xchg
loop
sub
xor
push
aas
les
(bad)
dec
pop
in
jmpw
add
inc
add
dec
xlat
repnz
jp
aaa
jecxz
int
mov
repnz
dec
xchg
mov
es
fadd
lods
and
xor
pop
jg
xchg
ss
jno
in
nop
mov
push
and
mov
mov
test
pusha
mov
(bad)
shrd
retf
mov
jge
pop
imul
mov
xchg
fcomi
iret
and
mov
inc
and
je
mov
sbb
imul
pop
sbb
xor
pop
sti
outs
cdq
aam
jecxz
mov
and
inc
adc
sbb
pop
in
mov
and
cld
mov
ret
cld
xor
cmp
push
gs
sbb
jg
inc
mov
dec
mov
test
jne
outs
mov
and
repz
xor
or
into
sub
sti
out
mov
sahf
mov
(bad)
fisubr
xor
enter
shl
xchg
and
jmp
and
mov
mov
hlt
dec
icebp
enter
adc
mov
and
sbb
mov
mov
inc
mov
lock
xor
xchg
or
push
aam
cmp
jmp
repnz
pop
mov
adc
test
fidiv
ja
xchg
retf
fs
lds
jmp
mov
mov
and
icebp
out
xchg
sbb
mov
xchg
push
mov
pop
clc
jmp
ja
cmps
dec
outs
and
and
je
loopne
ins
jge
pop
mov
mov
mov
sub
sti
sar
lods
jnp
add
adc
(bad)
fimul
in
inc
jl
ret
mov
rcl
in
loope
(bad)
xchg
cmps
ror
inc
cli
loope
fistp
mov
retf
in
outs
mov
bound
xchg
cli
int
inc
mov
and
and
or
mov
and
(bad)
sbb
pop
int
sbb
add
les
es
sub
out
mov
mov
or
imul
ret
mov
jne
sahf
pop
sahf
sub
pop
popf
cmp
addr16
loop
sub
fs
(bad)
lahf
dec
and
neg
inc
iret
icebp
inc
sbb
shl
xor
fimul
jo
iret
fidivr
cmps
nop
or
cs
and
mov
call
gs
je
pop
sbb
xor
cmc
das
and
xchg
dec
jne
sub
fwait
out
out
out
movs
popa
cmp
inc
ins
es
pop
adc
sub
inc
ins
xor
push
mov
pop
pusha
sar
lods
add
jg
add
fild
or
sbb
out
out
inc
icebp
aaa
shl
iret
mov
iret
jns
mov
xor
popa
inc
mov
and
mov
mov
cmc
je
loopne
and
mov
jmp
scas
je
jecxz
push
pushf
fwait
xchg
and
jl
adc
daa
and
add
and
std
jbe
jbe
out
cmp
sahf
mov
xor
jno
inc
inc
push
add
arpl
fistp
fidiv
icebp
mov
xor
mov
aaa
and
pop
outs
mov
hlt
cmp
push
and
ins
or
(bad)
gs
pop
(bad)
or
ins
cmp
loope
icebp
(bad)
adc
add
pop
lea
sbb
outs
lods
das
cmps
pop
ror
or
xor
dec
in
bound
fwait
mov
es
mov
arpl
and
lods
scas
mov
xchg
stos
fbld
push
mov
iret
test
stos
(bad)
mov
mov
mov
loope
and
(bad)
(bad)
fstp
sub
mov
loope
aam
push
mov
loope
rol
out
imul
add
push
cmp
xchg
outs
leave
or
add
mov
xor
cdq
das
mov
popa
push
push
sbb
icebp
test
adc
outs
(bad)
push
pop
add
mov
cmps
in
and
iret
mov
fsubr
pushf
pop
fist
or
test
fadd
call
int
outs
pop
imul
xor
xor
dec
movs
in
imul
cmp
mov
sub
mov
and
popa
es
adc
sbb
call
xor
pop
lea
(bad)
fnstenv
dec
(bad)
adc
dec
in
pop
shl
adc
and
pop
enter
je
mov
dec
and
mov
fwait
test
loop
xchg
mov
cmps
and
sub
and
jns
jne
fnstsw
pop
add
mov
int
fild
and
mov
fsub
popa
pop
out
mov
cmc
stos
xor
push
push
cmc
in
lds
inc
or
or
pop
jecxz
rcl
push
sub
js
push
dec
test
fwait
outs
cmp
pop
push
data16
jne
push
imul
sbb
ds
mov
mov
dec
sbb
sub
fst
cmps
jle
loopne
loopne
shl
int
inc
xchg
mov
dec
sub
and
out
mov
pushf
lods
test
sub
das
popa
inc
call
jmp
sbb
mov
mov
dec
shl
mov
adc
int
int3
sbb
or
cld
(bad)
cmp
inc
xor
std
imul
cmps
adc
mov
outs
mov
loopne
lock
and
ficom
adc
jns
(bad)
fsubr
xchg
and
out
je
repz
jg
ss
retf
inc
lea
xor
push
lahf
jo
fdiv
adc
fldz
(bad)
mov
dec
xchg
add
pop
and
jmp
loopne
inc
int3
es
xchg
cmp
pop
inc
sbb
loop
pop
jo
xor
inc
and
cs
mov
dec
iret
mov
lods
dec
ins
push
nop
mov
(bad)
iret
das
fiadd
shr
dec
aad
inc
xor
push
mov
in
xor
cs
xchg
or
mov
mov
(bad)
in
or
cmp
daa
add
shr
jg
or
cmp
dec
int3
std
add
shr
lods
xchg
push
stos
mov
in
js
xchg
xchg
or
xchg
(bad)
cs
aas
ficomp
mov
hlt
test
loop
imul
pop
scas
xchg
mov
pop
or
repz
inc
(bad)
cwde
sub
std
lds
push
mov
mov
outs
cdq
xor
mov
das
loop
rcr
inc
ret
adc
inc
push
adc
push
inc
sbb
popf
nop
inc
cs
cwde
jp
mov
inc
mov
movsx
gs
sub
aad
xchg
popa
fld
fwait
shl
or
and
xchg
data16
repnz
mov
jmp
ja
sbb
daa
xlat
xor
(bad)
mov
or
pop
cmp
rcr
inc
pusha
cwde
inc
add
call
int
mov
(bad)
sar
lock
add
push
lea
ins
adc
push
push
dec
in
sbb
mov
ss
pop
into
aas
xchg
or
cmp
add
mov
and
add
out
push
and
loope
mov
rcr
mov
add
cmps
add
cmps
push
(bad)
cmp
fistp
push
test
(bad)
ss
jge
add
add
rcl
out
stos
sub
aad
fchs
int
add
push
ins
push
(bad)
out
or
dec
movs
xor
dec
sbb
cli
sahf
push
loop
pop
xor
mov
rcl
mov
cwde
push
cdq
les
mov
xlat
xlat
add
and
xor
imul
sar
sar
popf
pop
sub
fs
ret
push
and
sbb
ss
out
inc
push
add
inc
movs
mov
test
xchg
pop
xchg
lods
lock
add
lods
or
popf
shr
movs
repz
and
mov
aam
(bad)
inc
xor
pop
call
sbb
(bad)
loope
mov
sub
xchg
test
std
cmp
push
in
imul
in
movs
adc
inc
ds
ds
fdivr
rol
mov
pusha
xchg
mov
fdiv
mov
cmp
inc
pop
mov
out
inc
mov
sahf
iret
leave
mov
stc
xor
add
fisubr
out
add
sub
jp
mov
xrelease
ror
shr
lds
dec
or
pop
lahf
add
push
fdiv
xor
in
jp
sub
loope
dec
dec
jle
or
frstor
fadd
cld
push
lock
lods
inc
scas
sbb
xor
mov
in
sub
bound
les
aam
(bad)
mul
or
repnz
inc
popf
mov
gs
sbb
xchg
sahf
push
jne
stc
in
movs
jg
and
aam
mov
xor
int
in
mov
mov
mov
loope
(bad)
jg
dec
(bad)
add
jg
out
pushf
add
dec
mov
push
dec
and
and
(bad)
jmp
sbb
int3
cmc
and
call
push
jns
ret
popa
jg
mov
or
xor
jo
arpl
test
mov
pop
mov
push
fwait
rcl
push
cli
jne
or
test
mov
xlat
das
mov
push
je
xchg
mov
and
addr16
cwde
outs
sti
pop
xchg
inc
inc
xor
adc
cmp
or
mov
ror
scas
jne
adc
rol
ins
popa
pop
push
xlat
mul
xor
lea
or
cmp
xor
aad
ja
xchg
push
sahf
adc
mov
js
dec
dec
sti
sti
mov
jl
push
data16
sbb
lods
sbb
inc
js
jp
rol
add
xor
push
mov
retf
mov
dec
out
(bad)
ss
rol
arpl
bound
sti
jno
icebp
int
mov
dec
inc
int3
xor
pop
outs
fwait
leave
idiv
push
xor
test
sbb
or
mov
add
movaps
mov
xlat
cmps
mov
clc
rol
fwait
or
xor
inc
stos
in
xchg
jp
stos
sbb
cmp
mov
aad
jmp
pop
or
and
(bad)
cmp
inc
pop
pop
dec
mov
pop
shl
cli
fstp
std
sub
adc
xchg
ficomp
mov
push
or
pop
stos
jmp
popa
call
jecxz
jp
repnz
mov
dec
test
lahf
loopne
ins
pop
test
dec
jne
movs
bound
rol
hlt
dec
add
in
mov
mov
mov
push
add
jbe
or
and
leave
mov
adc
mov
sub
dec
std
aam
push
movs
jne
mov
adc
or
pop
mov
inc
mov
(bad)
push
icebp
dec
cld
nop
arpl
fisttp
pop
jmp
in
cdq
jb
sub
lds
jmp
out
std
push
in
push
loop
ins
mov
cs
into
pop
xchg
inc
ja
pop
(bad)
add
inc
xor
inc
or
ins
inc
jp
cmp
(bad)
pop
repz
dec
jns
stc
ins
sti
loop
push
rcr
cmp
inc
stos
leave
inc
or
cmp
loopne
and
or
shr
repz
adc
xor
or
pop
cmp
fcmovnu
stos
jo
xchg
cdq
mov
add
or
inc
sysret
mov
adc
test
mov
push
sar
mov
mov
sbb
xchg
push
(bad)
lods
je
pop
xchg
iret
inc
out
or
jg
mov
nop
mov
adc
mov
outs
or
in
rcr
shr
in
mov
push
cdq
jl
ins
jge
or
scas
aaa
(bad)
test
dec
fdivr
sub
fs
test
sub
sti
lods
cs
adc
arpl
mov
out
push
in
cmp
outs
push
push
sbb
movs
mov
test
xchg
inc
xor
lods
or
pop
push
push
les
sbb
dec
push
adc
push
cmp
mov
jge
xor
push
clc
outs
inc
pop
cmp
ins
sti
push
(bad)
mov
adc
sub
pusha
lods
xlat
mov
adc
in
aaa
daa
cdq
jmp
mov
jle
xor
jl
int3
xor
fnstenv
and
or
pop
imul
mov
shr
ds
jmp
ss
in
inc
pop
mov
push
push
xchg
jbe
cmp
inc
jb
div
or
adc
fnstcw
push
pop
xor
scas
and
or
mov
inc
and
xor
push
jb
std
cmp
enter
xor
(bad)
cs
fcom
aas
push
ror
push
xchg
ret
mov
adc
in
cmp
xchg
jecxz
or
iret
and
jge
cmps
cmc
sar
cmp
popa
mov
ja
ins
cdq
call
or
clc
cmc
mov
push
adc
add
pop
xor
add
mov
(bad)
call
les
int3
xchg
iret
lds
jmp
xchg
jmp
fs
mov
mov
std
jmp
push
sub
ret
or
loop
inc
inc
sti
ds
inc
jecxz
add
clc
push
repnz
stos
adc
cmp
mov
es
mov
add
dec
aad
mov
mov
sbb
into
cdq
mov
xlat
shl
int3
les
int3
test
push
lods
popf
mov
lahf
aam
fstp
nop
or
pop
js
jne
cmp
lock
in
push
rol
cmp
je
nop
xchg
ss
xlat
or
test
int3
out
(bad)
or
lds
sbb
cwde
add
iret
dec
mov
ud0
out
(bad)
aaa
pop
call
test
dec
jbe
movs
popa
mov
jns
test
push
jge
data16
stc
retf
cmp
call
fsubrp
pop
xchg
add
mov
test
inc
scas
stos
sub
add
xchg
add
mov
push
cmp
push
inc
aas
pop
inc
fst
test
jne
push
adc
jl
in
hlt
add
scas
push
jg
scas
push
fdivr
fcomp
dec
mov
cmp
daa
sbb
and
enter
sbb
jmp
ins
fcmovnbe
mov
mov
fsub
rcr
sahf
jns
jbe
das
loop
cmps
mov
jmp
(bad)
sbb
(bad)
fnsave
pop
jp
push
pop
inc
fcomp
adc
(bad)
lods
pushf
fimul
sbb
imul
addr16
jnp
dec
lods
or
jns
shl
pop
or
jns
in
mov
in
adc
in
mov
cmp
in
pop
jb
aam
cmp
in
jg
iret
movs
stos
and
cmp
jl
jle
jnp
es
outs
iret
out
push
aad
retf
lods
jg
adc
mov
xchg
sub
into
jno
add
sbb
repnz
ret
dec
dec
mov
mov
gs
fwait
jns
shl
inc
mov
cdq
sbb
pop
mov
lahf
mov
aad
out
div
xchg
icebp
mov
mov
(bad)
jmp
push
sar
jp
loope
imul
cdq
mov
mov
scas
aaa
cmp
jns
and
into
aam
pop
xor
cmp
inc
ja
mov
cmp
push
xchg
sub
jns
cmp
sub
ja
add
mov
xor
mov
sub
mov
mov
adc
sahf
mov
and
ret
adc
cs
faddp
xor
mov
jns
nop
jge
sahf
push
xchg
clc
cli
adc
pop
sub
inc
fistp
mov
mov
(bad)
or
and
enter
or
sbb
and
inc
sbb
jle
fldenv
sti
push
pop
cmc
int
out
pop
pop
cld
fwait
pop
in
(bad)
lock
shl
mov
jmp
xor
icebp
pop
mov
inc
enter
div
adc
mov
push
push
ja
lahf
sbb
retf
pop
xor
jg
push
ficomp
or
jle
sbb
nop
pop
sbb
lea
mov
retf
lds
jp
inc
loop
loope
addr16
ret
jge
stos
out
call
test
mov
xor
xchg
add
movs
lods
jae
jge
pop
dec
fcmovnu
or
hlt
and
loope
fmul
and
add
scas
mov
int3
xor
ss
adc
loop
adc
mov
push
cmps
xchg
scas
sbb
out
xor
retf
stos
cld
mov
aaa
mov
dec
add
inc
cmp
sbb
mov
add
ror
xor
cmc
loope
iret
out
aaa
sbb
dec
cld
ds
or
pop
pop
outs
mov
sahf
inc
int3
adc
xor
popf
cmp
fcom
mov
call
iret
retf
xchg
fdiv
sbb
repnz
fcom
mov
jp
hlt
lods
mov
add
push
sbb
lea
jp
adc
dec
sub
out
adc
mov
stos
pop
shl
xor
mov
popa
repz
call
movs
pop
ror
xchg
jns
push
loopne
adc
fstp
pop
inc
sub
push
sub
scas
mov
je
(bad)
stos
dec
movs
shl
iret
mov
xchg
je
xchg
sub
cmp
hlt
jl
push
lahf
or
xchg
loopne
out
loop
add
push
and
sbb
fwait
rol
cld
lds
mov
xor
inc
gs
ror
into
sbb
dec
mov
outs
cmp
adc
inc
in
nop
cmp
repnz
xchg
and
jnp
xchg
iret
xlat
xor
mov
push
mov
mov
mov
loop
inc
add
xchg
xor
mov
aam
mov
fidivr
push
add
enter
ret
mov
arpl
movs
mov
xor
push
mov
mov
jno
test
inc
or
cdq
sub
inc
mov
xchg
jbe
in
es
and
in
call
add
jae
mov
sbb
xor
sub
popa
xchg
stos
test
call
xor
add
sub
inc
loope
inc
add
mov
xor
in
mov
dec
clc
std
(bad)
outs
cwde
ror
sti
sub
cmp
cmp
pusha
push
int3
aaa
loopne
hlt
xchg
mov
hlt
sbb
cmp
gs
pop
cmp
add
mov
popf
dec
loopne
aam
leave
xchg
dec
jbe
mov
jbe
push
out
and
mov
jmp
dec
outs
dec
add
out
mov
mov
mov
into
ins
ror
imul
cli
sbb
ret
aad
jno
dec
xchg
add
cmp
dec
jno
call
fwait
cdq
js
mov
arpl
xor
pusha
fild
push
mov
sub
int3
cmp
imul
mov
sbb
fwait
adc
sbb
sti
push
(bad)
cli
aad
fldenv
sub
cmps
aaa
inc
jbe
retf
stos
imul
mov
push
cmp
sbb
mov
repz
sahf
add
scas
cmc
test
sar
outs
imul
(bad)
in
stos
add
mov
loop
jge
sub
cmp
cmc
cdq
push
std
xchg
sbb
aaa
xchg
imul
icebp
and
rcr
push
mov
cli
and
scas
xchg
not
stos
and
cwde
cmps
icebp
pusha
out
mov
in
mov
add
icebp
popf
into
test
scas
or
mov
adc
cdq
dec
mov
(bad)
adc
inc
jbe
leave
jno
lods
pop
mov
xchg
dec
dec
mov
adc
aaa
jg
das
loop
mov
mov
fsubr
in
stc
in
jmp
add
cmp
adc
mov
push
push
and
or
fwait
(bad)
cld
push
xor
sbb
loope
cmp
push
pop
push
cmc
aas
js
pop
(bad)
cdq
jle
fiadd
push
sbb
sbb
inc
mov
cld
lea
movs
aaa
psubsb
sub
fidivr
xchg
fistp
movhps
sub
sub
test
clc
imul
or
into
cmps
aas
xchg
cmps
xlat
push
movs
cmp
scas
lock
imul
or
cdq
or
ret
jbe
aaa
xchg
mov
pop
repz
mov
mov
adc
add
add
xchg
in
pushf
jb
xor
(bad)
jmp
mov
adc
dec
es
mov
call
mov
repz
loop
cdq
arpl
pusha
jecxz
pushf
fbld
bound
xlat
jb
les
jecxz
and
adc
jle
adc
arpl
add
or
inc
test
sar
mov
hlt
and
jle
inc
popf
jne
jp
outs
xchg
adc
and
mov
or
cmp
(bad)
and
lods
jo
stos
or
fld
test
test
jns
fild
cmc
icebp
or
jbe
nop
dec
cmp
(bad)
adc
push
dec
jmp
pop
fwait
addr16
cld
leave
sub
cmp
iret
cmp
cmp
mov
mov
push
inc
scas
ret
(bad)
jmp
xchg
xchg
cdq
inc
outs
in
cmp
aas
stos
and
or
cmps
es
test
pop
sbb
bnd
push
jp
adc
stos
dec
sahf
into
test
or
or
xor
pop
jge
add
and
sbb
enter
loopne
bnd
pop
cs
shr
inc
dec
adc
push
or
mov
dec
(bad)
retf
scas
xor
xchg
sub
and
call
pop
and
repnz
mov
(bad)
cmp
push
mov
movs
sub
pop
mov
jno
std
test
push
sub
sbb
push
add
and
aaa
imul
pusha
mov
imul
mov
test
push
inc
jp
jle
loop
ins
sti
movs
mov
test
mov
cs
nop
jg
in
std
push
ins
cmp
fst
dec
out
inc
cwde
mov
lock
push
pop
scas
imul
jp
jo
arpl
mov
mov
jnp
test
sub
inc
add
jge
pop
push
popa
mov
ins
jo
es
fwait
mov
out
dec
add
pop
(bad)
int
enter
xchg
mov
push
aam
mov
js
cmp
pop
sub
daa
mov
dec
xchg
pop
popa
cmp
leave
push
rcr
arpl
sbb
scas
xor
pop
xchg
mov
or
iret
(bad)
pop
or
mov
sub
adc
mov
mov
fdivr
sbb
mov
push
fist
mov
sub
retf
lds
ins
push
add
push
and
mov
jl
mov
lea
fistp
stos
add
or
jae
in
jno
mov
scas
xchg
mov
ror
(bad)
cmp
xor
jl
sub
fistp
xchg
inc
mov
leave
loopne
inc
mov
fcom
xor
jg
imul
in
mov
rcl
(bad)
push
test
jo
cmp
push
or
or
shl
rcr
jno
sbb
fadd
std
sti
jmp
aaa
bound
sub
mov
stc
stos
push
xchg
repnz
inc
push
sbb
xchg
arpl
push
rcr
cmps
loopne
rol
test
daa
ins
pop
shr
sub
hlt
dec
sar
daa
mov
hlt
lods
jnp
dec
or
mov
pusha
jp
ins
aas
jns
into
arpl
or
dec
test
add
mov
dec
mov
inc
(bad)
xor
mov
cli
jecxz
nop
stc
jbe
mov
imul
xor
pcmpeqw
jae
lock
xor
push
cmc
stos
jbe
and
mov
push
mov
ret
sub
add
pop
ja
dec
mov
sub
aam
loope
inc
sbb
xor
dec
sub
data16
xchg
mov
xchg
aad
xor
mov
jo
push
stos
lds
mov
sub
mov
push
rol
imul
add
adc
rcr
retf
repnz
push
arpl
push
mov
adc
xor
mov
push
cs
and
xor
sar
mov
jbe
add
xchg
dec
fistp
mov
movs
inc
pop
fisttp
dec
xor
lock
adc
or
sbb
pop
inc
adc
jmp
and
hlt
fsub
sbb
push
pop
aaa
add
sub
adc
sti
shl
stos
sbb
xor
adc
retf
ins
xchg
cmp
inc
sbb
xchg
in
pop
lock
(bad)
jp
enter
pop
loopne
pop
in
mov
xchg
add
jge
jmp
adc
jnp
jge
mov
and
mov
mov
xor
xchg
inc
mov
mov
push
cmp
push
clc
retf
dec
pop
movs
push
arpl
add
pop
jbe
ins
sub
push
lock
xchg
ja
adc
or
jl
test
test
sbb
pop
xor
das
jecxz
mov
retf
(bad)
sbb
mov
or
test
add
imul
mov
mov
xchg
push
sub
pop
cmp
jmp
and
or
adc
mov
or
retf
and
xchg
icebp
sub
cmp
retf
mov
add
mov
adc
jecxz
int
or
cmps
sub
retf
sbb
rcl
sub
shr
movs
pop
mov
cmp
xchg
fwait
sbb
out
or
stos
cdq
pop
pop
cmp
pop
adc
loopne
dec
mov
mov
mov
out
xchg
js
ret
add
jne
cmp
or
pop
jp
adc
pshufw
sub
sbb
dec
int
mov
dec
aad
pop
xchg
fs
push
test
sti
mov
out
fnstsw
ret
sti
add
out
or
adc
in
mov
mov
mov
or
sub
adc
stos
fisttp
stos
sahf
mov
or
xor
retf
xchg
sahf
lds
bound
jle
inc
call
popa
add
jecxz
jmp
jle
out
xchg
test
pop
icebp
mov
adc
jno
ss
mov
xor
and
js
call
aas
pop
xor
cwde
and
mov
sbb
(bad)
out
out
xlat
aaa
mov
fwait
jbe
mov
retf
sbb
call
int3
gs
and
add
je
ss
mov
fidivr
lods
es
sub
adc
inc
jle
mov
cmc
mov
(bad)
pop
ret
stc
js
push
push
ins
jl
jne
sub
retf
jle
push
or
test
or
mov
out
mov
imul
fistp
pop
data16
ds
xchg
push
dec
ret
aas
dec
add
inc
mov
and
mov
movs
test
mov
movs
outs
sub
loope
mov
mul
int3
pop
ins
xor
ss
fmul
xchg
(bad)
adc
rol
jns
or
add
mov
movs
ins
inc
dec
add
mov
mov
and
pop
and
xor
stos
rol
test
xchg
dec
jp
test
loopne
repnz
pop
adc
and
loope
dec
jmp
ficomp
cld
mov
dec
aad
ja
test
cs
and
fwait
inc
fld
dec
mov
stc
out
cmp
pop
ss
fild
push
jl
(bad)
daa
adc
adc
jo
xchg
jmp
jp
ffree
(bad)
(bad)
aam
cmps
stc
mov
pushf
in
sub
call
int3
test
lahf
mov
sbb
xchg
xchg
adc
sbb
mov
test
pop
mov
mov
inc
inc
cmp
adc
lods
sub
add
jo
pop
imul
pushf
lods
pop
and
pop
inc
mov
push
push
mov
lahf
dec
xchg
inc
repnz
mov
(bad)
jmp
arpl
std
cmp
adc
test
je
jle
inc
lea
push
add
push
outs
icebp
icebp
cmp
mov
fist
scas
mov
in
loopne
fsub
stc
mov
retf
test
test
jle
mov
sub
ucomiss
add
in
fsubp
mov
int
jo
push
stos
mov
(bad)
mov
sti
cmp
cmps
xor
mov
or
dec
(bad)
aad
in
xchg
adc
popf
sub
fsubr
std
stc
inc
ret
cmp
out
stc
int3
ds
pop
rcr
mov
pop
sub
dec
jecxz
pusha
mov
mov
pop
fiadd
fwait
dec
cmp
inc
in
loope
test
dec
inc
mul
mov
jmp
cmc
outs
mov
outs
loop
xchg
(bad)
(bad)
imul
sbb
call
cmp
test
dec
xlat
into
fcmovbe
pop
scas
add
mov
aas
cdq
inc
(bad)
mov
test
sub
cli
(bad)
das
mov
sbb
bound
jns
xchg
mov
cmp
mov
cmp
dec
cmps
push
add
jmp
inc
aad
sub
pop
fist
or
js
lock
xchg
push
int3
mov
pop
sahf
xchg
or
cmp
fsubr
shl
push
push
in
xor
loopne
ja
dec
fdivr
(bad)
in
aad
push
jmp
xor
mov
cli
outs
ficom
push
cdq
sub
psadbw
loopne
movs
ss
fstp
aas
or
lods
adc
ja
pop
xor
out
aas
lock
call
popf
out
aam
leave
cld
pop
push
sbb
jmp
jb
mov
xchg
sbb
(bad)
test
inc
out
pop
not
dec
sti
jg
add
scas
rcl
dec
pop
mov
xchg
out
call
scas
ins
stos
(bad)
aad
js
adc
adc
int
add
dec
push
addr16
and
cmp
mov
lods
push
in
outs
sub
call
xchg
adc
jle
or
pop
pop
xchg
test
div
fwait
ss
rcl
inc
jmp
out
leave
cmp
push
cwde
mov
xchg
dec
sub
hlt
test
cmp
fcomp
shr
mov
(bad)
mov
mov
lahf
sbb
mov
mov
adc
inc
mov
adc
inc
sub
pop
xchg
rcl
inc
push
(bad)
jp
add
dec
inc
jae
sbb
pop
sti
movs
lds
shl
fstp
sub
jl
sub
cli
fwait
pusha
loopne
push
sti
(bad)
inc
lock
cwde
mov
lea
xchg
int
cmp
dec
ret
jecxz
jg
cmp
or
arpl
sahf
mov
inc
fisubr
jecxz
pop
push
jecxz
jo
xlat
and
or
xlat
loop
mov
cli
cli
push
xchg
int
dec
and
stos
dec
retf
mov
adc
fbld
(bad)
jns
cwde
cwde
dec
fst
mov
ror
pop
adc
adc
push
test
sbb
bnd
dec
inc
in
mov
dec
(bad)
lahf
out
mov
push
sbb
stc
jae
shl
call
call
sti
pop
fnsave
(bad)
or
lahf
mov
lahf
stos
out
bound
addr16
mov
lea
add
adc
shl
mov
test
mov
xor
inc
out
pushf
pop
add
scas
pop
xchg
jb
and
dec
inc
in
dec
movs
mov
xor
aad
adc
je
stos
sub
mov
push
(bad)
out
jp
sbb
sub
or
and
test
xor
mov
retf
mov
test
jne
inc
cmps
(bad)
retf
into
outs
mov
pop
jl
adc
inc
loopne
aad
add
jg
jg
inc
pop
xor
mov
cmp
or
fsub
js
aam
mul
repnz
xor
aaa
call
pushf
pop
sbb
adc
cmp
movs
mov
mov
add
dec
pop
push
hlt
add
jne
in
dec
adc
and
es
mov
pop
sbb
enter
fsubrp
inc
add
repz
mov
je
sub
pop
push
cmps
fdiv
mov
fcomp
data16
mov
idiv
add
jno
retf
es
mov
lock
xlat
mov
push
sub
mov
loopne
dec
xor
in
pushf
outs
fucomi
sbb
neg
lahf
adc
inc
mov
(bad)
aam
(bad)
pop
mov
mov
stos
add
movs
jae
add
clc
sbb
cmp
xchg
and
xor
stc
mov
xor
data16
mov
stos
stos
aas
rcr
push
inc
xlat
jno
push
sub
push
mov
push
mov
cmps
push
and
dec
dec
add
mov
mov
mov
(bad)
mov
jecxz
adc
stc
std
inc
dec
pop
sbb
(bad)
(bad)
sub
icebp
and
fucomip
inc
xchg
jle
jbe
out
inc
or
test
in
mov
pop
jle
push
sbb
push
lods
pop
dec
add
(bad)
test
retf
push
out
sbb
sub
xchg
lds
jecxz
in
fstp
scas
pop
pop
inc
xor
or
lds
movs
lods
xor
push
adc
sti
js
(bad)
mov
jae
es
daa
data16
movs
int
jbe
pop
or
sbb
xchg
jns
shl
push
jg
jnp
xor
jp
sub
jl
hlt
test
cwde
lea
cmp
push
retf
mov
(bad)
sub
arpl
or
xor
sbb
mov
dec
ror
imul
sub
xchg
or
push
dec
imul
cmp
out
push
or
xor
push
sub
shr
push
stc
xor
push
packuswb
push
call
into
in
add
push
(bad)
mov
pop
div
sub
out
mov
inc
and
fidiv
int
fs
xor
pop
shl
push
pop
or
jmp
sbb
pop
mov
or
push
push
mov
mov
cmp
or
pop
out
gs
bound
mov
push
xchg
push
inc
mov
lods
(bad)
jbe
mov
jne
mov
cmp
mov
test
mov
jae
xor
repz
rcr
add
pop
cmps
lods
or
dec
mov
mov
icebp
push
or
sub
inc
lock
add
xchg
jno
out
mov
mov
lods
inc
or
(bad)
(bad)
xor
add
mov
sbb
mov
das
shr
sub
inc
adc
cmp
adc
xchg
sbb
jg
and
mov
ins
sub
int3
sbb
outs
movs
mov
mov
mov
push
pop
inc
aas
out
jmp
leave
xor
mov
lock
imul
cmp
mov
jge
cmp
mov
jno
sti
or
aam
es
cmp
out
sub
dec
jecxz
rcr
bound
out
fbstp
push
add
shr
pop
ins
sti
loope
cmp
pop
fnsave
cli
pop
pop
mov
jmp
enter
cld
mov
or
mov
add
das
repz
test
sbb
daa
xchg
jae
xor
jnp
cdq
fdivr
fld
cmp
push
xor
test
dec
mov
mov
mov
scas
push
popf
mov
mov
je
sbb
stos
or
daa
push
jmp
int3
mov
sbb
ins
js
or
enter
or
call
movs
in
adc
adc
das
fcom
adc
popf
mov
mov
xor
adc
jg
addr16
call
push
xchg
retf
fcmovb
push
and
sub
imul
mov
push
inc
imul
and
xor
lea
fnstsw
ja
js
or
call
cmp
dec
mov
ror
idiv
les
movs
mov
adc
add
cmp
jo
mov
inc
and
jle
rcl
cmp
scas
dec
add
sbb
ficomp
dec
jmp
cs
nop
push
cmp
std
lds
inc
mov
(bad)
pop
hlt
sahf
mov
gs
outs
mov
lahf
or
sbb
sbb
js
cmps
(bad)
sub
xchg
sub
jecxz
adc
cmp
lds
xchg
adc
hlt
push
mov
dec
and
ss
add
les
inc
call
lock
mov
jno
mov
es
nop
lock
imul
popf
jle
or
mov
push
arpl
bound
out
(bad)
push
sub
xchg
add
outs
cmps
test
jno
fdivp
lods
xor
jecxz
pop
lods
inc
imul
mov
out
inc
cwde
sub
cmc
mov
add
lea
xor
clc
cmp
cwde
jle
push
jle
lock
imul
test
jmp
gs
or
mov
jo
jp
sbb
imul
outs
and
mov
or
xchg
lea
jge
(bad)
jl
pusha
sub
sbb
jno
and
pop
mov
dec
sub
loope
mov
mov
dec
inc
pusha
and
retf
push
sbb
js
sbb
or
dec
ins
add
push
ins
cmp
fld
jecxz
lds
lods
out
pop
adc
popf
xchg
fwait
and
push
js
mov
pop
cmp
out
cmps
hlt
inc
stos
cmp
sub
push
jge
sub
mov
mov
movs
mov
fs
popf
adc
dec
adc
scas
je
and
fsubr
xchg
out
scas
fs
jp
imul
mov
xor
sub
mov
xor
imul
add
movs
retf
jg
sub
addr16
pop
adc
mov
aam
loope
dec
cmc
push
adc
lods
loope
aaa
nop
imul
out
xor
scas
sahf
xchg
in
mov
movs
mov
test
je
out
adc
ret
cld
sub
sub
xor
scas
lods
out
jno
in
cwde
cmps
xchg
and
loop
dec
dec
stos
cmc
push
ror
mov
sub
repnz
mov
imul
loopne
xchg
rcr
jle
call
push
dec
or
sub
out
or
sbb
movs
call
outs
(bad)
call
jns
xor
mov
pop
loopne
xchg
sub
inc
inc
inc
lock
pop
mov
ja
cmp
mov
std
iret
(bad)
(bad)
fdiv
mov
aas
push
xchg
adc
dec
popf
cdq
or
mov
scas
sub
mov
mov
in
pop
fldcw
jae
dec
sub
js
fsub
jne
mov
rcl
mov
jg
push
mov
cmp
sub
out
retf
test
rol
sub
mov
lds
repnz
faddp
popf
dec
or
dec
sahf
daa
sbb
xchg
sar
jg
cmc
inc
cmp
push
mov
xor
sbb
jmp
mov
jne
push
push
ins
mov
adc
cs
push
(bad)
mov
mov
pop
mov
shl
(bad)
jmp
cmc
int3
mov
popf
inc
scas
outs
dec
pop
into
popa
test
es
rep
in
sbb
fistp
mov
ds
pop
popf
imul
sbb
xchg
mov
pop
push
jo
xor
bound
sbb
and
sbb
imul
push
mov
sbb
mov
fisttp
jae
stc
in
xchg
dec
sbb
enter
in
lahf
ret
xor
lea
add
mov
adc
movs
push
sbb
mov
cmp
pop
fcom
inc
pop
mov
and
pop
jbe
or
out
lods
xchg
ret
mul
dec
jp
jge
xchg
(bad)
and
jp
fld
mov
push
imul
aad
add
push
pop
jmp
sti
sar
imul
and
lock
mov
jle
lods
pop
adc
daa
sbb
ins
mov
push
je
jg
jbe
movs
sbb
es
or
pop
sub
push
mov
jmp
xor
cmp
jp
loop
imul
inc
pusha
push
fdivp
jno
xor
out
loop
cmp
push
aad
lock
cli
xor
or
cld
cdq
popf
cmps
lods
pop
mov
push
(bad)
loopne
jp
or
inc
mov
mov
pop
pop
mov
out
inc
fild
push
mov
shl
dec
jecxz
hlt
add
aaa
cli
icebp
repnz
jmp
jns
adc
add
jo
lds
(bad)
and
mov
xchg
xlat
push
and
xor
xchg
sahf
lods
ins
jb
fisubr
inc
stos
and
add
(bad)
stc
(bad)
cmc
mov
adc
push
fstp
mov
xchg
pop
cmp
jae
mov
pop
je
icebp
xchg
push
push
jae
push
retf
and
or
push
push
clc
into
mov
sbb
icebp
sbb
pop
cdq
xor
xchg
inc
inc
mov
push
push
adc
fild
xchg
add
or
lods
mov
lods
int
inc
inc
out
cmp
inc
fs
adc
nop
adc
icebp
cmovne
xchg
mov
scas
sbb
je
adc
lods
adc
dec
mov
js
inc
or
lock
sub
leave
mov
mov
jmp
aam
jge
jmp
xor
add
test
xchg
pop
cwde
cmp
xor
mov
int
mov
mov
in
and
mov
cmp
jge
xchg
pop
mov
cld
mov
imul
add
cmp
mov
cmp
pop
cmp
in
sti
aaa
test
das
movs
ja
aam
adc
in
lds
test
ins
ins
inc
jnp
dec
push
sub
ins
sbb
sbb
outs
pop
loop
pop
in
and
cs
test
sbb
or
gs
adc
sub
frstor
mov
adc
fld
xchg
enter
mov
mov
push
in
dec
xor
repnz
mov
fwait
div
cmps
imul
and
loop
cmp
push
and
sti
push
push
xchg
mov
clc
sbb
xor
ss
adc
(bad)
pushf
jmp
jl
lds
inc
and
mov
push
mov
or
adc
push
adc
lea
mov
xor
ins
into
pop
in
dec
psrld
addr16
arpl
int
es
inc
push
xchg
leave
mov
movs
imul
repz
scas
ret
push
pushf
sti
xchg
xor
div
pop
push
sahf
shl
dec
(bad)
xlat
call
fxtract
test
gs
fimul
fist
in
inc
popa
adc
leave
fcomip
jle
aad
adc
sub
dec
je
arpl
jo
pop
mov
aas
xchg
test
(bad)
das
leave
(bad)
in
mov
jg
shr
or
rcr
cwde
leave
jbe
ret
xor
fld
and
mov
mov
stos
sahf
xchg
pop
cmp
int3
and
mov
data16
push
push
mov
addr16
lahf
cmp
inc
imul
pop
add
add
iret
std
and
out
aad
fwait
scas
inc
sbb
mov
fcmove
lds
stos
in
or
int3
jmp
xor
xchg
cmp
stc
and
xchg
jno
xor
dec
test
cmp
pop
mov
cmp
cmp
sub
ja
mov
lods
jmp
out
(bad)
neg
dec
or
adc
mov
jno
sahf
hlt
in
xchg
aaa
xchg
mov
add
inc
leave
dec
sti
xor
out
mov
xchg
pop
in
adc
rep
mov
retf
and
jno
ret
inc
sbb
cdq
dec
sti
pop
retf
cmp
outs
(bad)
jmp
mov
inc
mov
fxch
mov
pop
xchg
cmc
movs
stos
jo
sub
sbb
aam
push
out
sub
add
sti
scas
or
int
inc
push
xchg
std
push
(bad)
add
out
dec
push
call
aam
not
mov
add
dec
in
xchg
inc
add
leave
stc
sub
int3
and
out
repz
rcr
sbb
dec
pop
jmp
jmp
aaa
adc
lock
lods
jle
popf
sar
mov
aam
sbb
loop
or
movs
push
outs
pop
jp
jmp
das
xor
xlat
push
leave
jg
or
(bad)
mov
cli
inc
ficomp
xchg
dec
das
loope
std
ds
aaa
xchg
add
sbb
sub
push
bound
ins
inc
inc
xchg
sbb
xchg
aam
ficomp
pop
add
arpl
push
pusha
not
sti
mov
mov
jle
clc
and
mov
cmp
inc
or
pushf
mov
add
adc
dec
ss
lods
fmul
mov
jns
add
jns
(bad)
xor
jge
push
add
and
and
inc
lods
pop
jo
aam
add
add
dec
cld
add
xchg
int3
shr
fsubr
fild
fimul
fwait
dec
dec
xchg
fucom
fs
out
repz
pop
fwait
popf
aaa
mov
ror
(bad)
daa
adc
adc
int
stc
outs
(bad)
mov
sub
mov
sub
push
or
cmp
idiv
jae
gs
imul
xor
cmps
xchg
xor
inc
into
int
call
or
jb
mov
xchg
movs
and
out
dec
shr
push
add
daa
(bad)
pop
dec
jae
sub
pop
xor
sbb
(bad)
mov
mov
fiadd
shr
cmp
mov
inc
and
out
mov
cmps
mov
cld
jae
sub
call
nop
cmp
clc
cwde
cmps
sub
push
scas
fucomi
push
add
jl
mov
add
sti
push
push
adc
sbb
loopne
rol
jl
jg
inc
shl
sbb
fdivr
mov
mov
loope
outs
sbb
jns
in
cli
mov
je
inc
sbb
jmp
and
xchg
fld
lods
push
jno
inc
mov
lahf
push
xchg
daa
lods
xchg
sbb
xlat
out
stos
test
ins
out
int3
nop
cld
dec
scas
cmps
add
sub
push
mov
pop
sbb
ja
mov
and
adc
cmp
nop
shr
ffree
lods
mov
test
pop
(bad)
pusha
jp
dec
push
cmp
jae
adc
cmp
jle
dec
dec
div
mov
cmp
repnz
stc
or
add
stc
rcl
adc
jle
dec
inc
pusha
pop
aas
scas
(bad)
push
in
jle
add
xchg
jo
movs
mov
dec
cmc
sub
xchg
push
out
stos
cmp
imul
call
(bad)
mov
repz
mov
sbb
mov
mov
dec
jge
pop
std
sub
outs
pop
in
cwde
or
jb
mov
jmp
pushf
mov
jae
mov
out
cdq
push
adc
or
in
xor
stos
mov
ins
fist
and
dec
push
push
nop
jl
out
aaa
xchg
pop
mov
or
jl
or
xor
pop
and
jmp
xor
scas
push
(bad)
dec
cmp
push
inc
mov
inc
jl
pop
inc
jo
or
xchg
mov
test
stos
mov
mov
icebp
out
repz
xchg
xchg
in
sahf
mov
int3
shl
imul
jnp
pushf
and
jnp
neg
push
or
pop
test
pusha
mov
mov
in
and
mov
repz
cmp
(bad)
xor
clc
lea
loop
lds
xchg
xchg
push
mov
popf
adc
sub
dec
ret
pop
cld
test
cmp
and
rol
mov
push
test
hlt
jle
xchg
sub
mov
aaa
adc
add
pusha
ss
xchg
cdq
rol
sahf
(bad)
out
mov
pop
ja
or
ins
xor
dec
test
in
push
pop
idiv
add
shr
enter
outs
push
jb
aam
cmp
mov
pop
add
xchg
mov
or
xor
cmp
add
pop
push
imul
and
pop
pop
xor
aam
jb
ret
push
xor
mov
lods
jnp
mov
and
sbb
mov
fistp
sub
lods
(bad)
fwait
nop
fcmovb
push
pop
mov
jecxz
mov
mov
shr
enter
mov
adc
xchg
sub
(bad)
adc
mov
stos
inc
cmp
shl
inc
dec
jb
mov
fmulp
fdivr
lahf
enter
jg
or
popa
test
mov
std
pop
adc
cld
adc
xchg
retf
ficomp
jge
sub
xor
daa
or
add
ja
dec
pop
or
inc
lock
dec
pop
jmp
(bad)
jp
adc
gs
stos
into
add
or
jo
pop
push
lahf
test
(bad)
xchg
jne
daa
imul
inc
mov
cmc
aam
mov
sahf
adc
icebp
in
xchg
hlt
cld
dec
jno
mov
popf
add
push
das
push
dec
mov
dec
cmp
or
mov
movs
not
jb
enter
jp
fwait
push
push
jmp
clc
mov
popa
mov
or
inc
mov
or
mov
mov
dec
cld
loopne
push
mov
jne
pop
sub
std
mov
push
dec
gs
xchg
push
jge
iret
push
movs
xor
int3
xchg
pusha
jb
sub
icebp
aam
movs
cmp
ins
std
scas
int3
outs
fwait
pop
fcmovnb
cwde
xchg
in
outs
mov
jmp
cli
test
and
push
inc
(bad)
adc
int3
inc
mov
leave
sub
retf
or
inc
and
loope
cmp
sbb
bound
mov
inc
push
add
sub
xchg
shl
bound
mov
jl
in
jg
cdq
test
(bad)
ins
mov
mov
dec
lods
lds
fisub
xlat
aam
iret
adc
and
cmc
je
sub
out
fcmovnbe
test
mov
dec
xchg
outs
jne
pop
cs
xchg
in
mov
into
sar
mov
xchg
or
mov
xor
std
ret
scas
push
and
mov
mov
xlat
and
dec
sub
in
mov
mov
cld
cmp
xchg
push
pop
call
call
fsubr
or
or
aaa
ret
dec
rcr
pushf
jnp
mov
adc
pop
jno
sub
stos
mov
jnp
lahf
mov
xlat
pop
push
shl
lds
lds
push
ret
sbb
xchg
jns
rcl
xor
(bad)
jo
dec
ficomp
xchg
out
ss
add
repz
and
sbb
daa
adc
or
push
jnp
xchg
clc
cmp
outs
imul
mov
push
into
and
sbb
jmp
mov
adc
loopne
fxch
(bad)
sbb
hlt
loopne
sar
pop
pop
or
dec
imul
mov
mov
adc
popf
fcomp
mov
int
dec
rcl
iret
and
push
mov
or
lods
and
pop
xor
adc
in
jno
retf
pop
and
jb
in
adc
jmp
movs
(bad)
push
(bad)
jnp
test
add
pop
sbb
xor
add
adc
adc
nop
imul
jp
les
pop
mov
mov
jne
aas
and
loop
adc
or
dec
aam
jnp
jp
and
mov
js
into
call
mov
dec
xchg
out
(bad)
sbb
add
push
(bad)
in
cmp
(bad)
ins
mov
inc
repz
fcom
sbb
div
pop
aas
cmp
push
push
js
out
sub
cmp
inc
xchg
or
nop
test
pop
aaa
inc
jmp
inc
cld
pop
push
xchg
int
xor
(bad)
dec
int3
adc
lea
sbb
loopne
call
mov
mov
test
pop
pushf
mov
add
test
xor
das
dec
mov
push
stos
mov
lods
retf
adc
leave
push
add
enter
mov
jo
ins
mov
jge
fdivr
outs
mov
fs
out
cmp
lods
movs
mov
dec
jmp
push
aaa
shl
mov
mov
sahf
sub
xchg
out
xlat
lods
imul
iret
cmp
xchg
cmp
lods
cmp
pop
js
lds
out
adc
ret
into
out
jmp
test
icebp
and
mov
cli
xchg
push
push
mov
out
shl
ret
push
bound
inc
popf
lods
(bad)
fadd
in
rcr
fisub
retf
stos
popa
inc
push
sub
xlat
enter
xor
test
add
ds
mov
adc
out
fdivr
stos
movs
test
sub
inc
dec
jns
popf
and
sub
fidiv
addr16
mov
dec
outs
cld
push
call
fadd
sub
stc
cmps
xchg
pop
or
mov
and
in
add
je
(bad)
mov
jp
adc
mov
adc
loop
and
div
or
outs
push
in
cld
loop
(bad)
icebp
lods
popf
pop
xor
ss
inc
dec
jmp
cdq
ror
sbb
adc
ins
xchg
push
pop
mov
popf
jl
outs
lds
inc
xchg
mov
aas
loop
mov
xchg
dec
sahf
repnz
ror
xor
cmp
ss
mov
pushf
pop
xlat
push
es
mov
push
shr
xor
jno
(bad)
mov
sub
(bad)
xor
jg
add
shr
dec
mov
pop
mov
sub
test
imul
adc
faddp
addr16
gs
and
sub
repz
mov
jbe
dec
fld
outs
or
sbb
or
xor
js
and
jno
cdq
inc
lds
repz
jnp
das
cmp
in
cwde
adc
loop
inc
jle
fsub
cs
push
sti
mov
imul
cdq
ret
sbb
mov
fcomp
pop
idiv
int3
or
push
(bad)
push
mov
xor
mov
inc
mov
int
mov
mov
add
stos
dec
popf
xor
(bad)
ds
stc
cmp
jb
mul
cmp
push
leave
pop
push
sar
mov
jp
mov
outs
mov
inc
jmp
mov
cdq
adc
sbb
gs
iret
sub
sbb
gs
leave
scas
in
mov
enter
jo
inc
in
cmp
adc
movs
adc
or
xor
cs
or
adc
ss
fdivr
mov
sub
scas
lahf
out
mov
sbb
xor
mov
jne
in
push
pop
jne
ret
and
pop
(bad)
loopne
inc
imul
ins
sub
ds
jb
push
push
mov
test
xchg
or
jae
imul
inc
mov
bound
mov
mov
loop
(bad)
loopne
sub
cmp
jmp
cld
shl
and
xor
jno
inc
ins
popa
and
arpl
stc
jbe
pop
mov
sbb
adc
test
test
inc
or
sbb
xor
sbb
push
push
or
jecxz
lock
cmps
sub
call
arpl
or
and
bound
mov
push
ret
mov
pop
aaa
and
movs
or
rcl
inc
es
hlt
adc
mov
cwde
rcr
and
pusha
xor
lea
xor
cmp
push
ret
pop
xor
mov
es
dec
int3
lods
cmp
ret
fnstcw
adc
lea
test
jb
jmp
jg
mov
(bad)
mov
xor
movs
xchg
retf
dec
push
xor
ja
mov
ins
dec
sub
call
loop
retf
cmc
mov
xor
push
jnp
mov
call
dec
xchg
lods
dec
in
clc
outs
xchg
movs
test
test
ins
inc
jbe
cwde
mov
push
cs
fld
sar
adc
data16
or
push
fwait
mov
dec
enter
outs
xchg
inc
cmp
test
mov
add
jno
jecxz
cmps
xchg
or
fistp
out
stos
mov
push
mov
xchg
fwait
imul
mov
cmp
je
cmp
xor
mov
stos
push
pop
test
sar
fwait
int
pop
cli
jo
xchg
pop
std
jns
ret
mov
popa
jge
lea
push
mov
mov
enter
dec
or
pusha
out
lods
mov
scas
and
mov
ret
dec
int
cmp
xor
dec
test
shl
mov
mov
stc
bt
bound
mov
mov
outs
or
dec
jno
sbb
adc
stos
arpl
add
inc
inc
cdq
aad
test
sub
test
dec
inc
rol
and
cld
shl
xchg
cwde
daa
mov
fimul
mov
pop
outs
dec
ss
sub
(bad)
push
cmp
das
stos
and
cmps
pop
dec
lds
jmp
mov
jmp
fisttp
mov
mov
iret
lock
scas
dec
jmp
or
outs
or
add
stos
idiv
ds
cmp
sbb
daa
mov
ret
fistp
mov
xchg
jge
fimul
div
imul
jmp
add
adc
jmp
pusha
pop
retf
fs
cmp
dec
aas
mov
adc
sbb
sub
iret
stos
dec
daa
jl
mov
adc
or
sbb
lods
leave
js
add
pop
inc
jbe
cmp
(bad)
xchg
pop
cs
sub
bound
mov
mov
scas
in
push
mov
loop
mov
call
movs
adc
jmp
rol
inc
inc
outs
or
aam
leave
icebp
xor
nop
lods
ficomp
and
ret
jo
cmps
clc
pop
add
iret
sbb
dec
xor
mov
jmp
fsubr
es
cdq
hlt
cld
push
aas
mov
pop
xchg
sub
cmp
pushf
js
fist
data16
jg
dec
dec
xchg
cmp
mov
inc
repz
xchg
test
iret
outs
mov
call
call
outs
push
xchg
in
(bad)
mov
and
fs
jmp
or
mov
rcl
icebp
sti
jne
cmp
sbb
in
out
adc
shr
push
jmp
addr16
int3
mov
cmp
xor
cmp
clc
push
mov
es
stc
or
fstp
in
dec
aaa
rcl
or
add
pop
jp
push
xchg
mov
fidivr
sbb
push
add
(bad)
xchg
out
add
out
add
add
shr
push
rcl
arpl
fsub
sub
push
pop
pusha
lods
mov
dec
in
loop
pop
into
js
shl
loope
adc
inc
push
ja
push
pop
xchg
xor
xor
dec
loop
push
push
dec
out
cmp
adc
cmp
aam
jg
idiv
mov
or
iret
js
test
sub
push
test
jo
cmp
adc
popf
jp
cs
scas
sbb
mov
in
xor
test
dec
inc
push
mov
inc
sbb
imul
jne
sbb
mov
(bad)
bound
and
ds
cli
movs
imul
enter
retf
mov
repnz
jnp
loopne
out
push
mov
xchg
fisub
inc
mov
cmp
push
repnz
stos
jmp
ret
ins
mov
not
mov
fild
loop
xchg
mov
pop
jl
mov
pop
push
cmp
cmps
fstp
or
pop
int
jnp
sbb
je
mov
and
jl
xchg
or
sbb
xor
aaa
cdq
pop
add
sbb
ins
push
daa
inc
jb
and
sub
adc
and
jle
inc
int
aas
mov
push
js
mov
push
inc
pop
test
xchg
jno
shl
call
jo
dec
fs
in
stc
std
retf
sbb
hlt
lea
xor
jle
jp
or
cmp
sub
and
jo
in
xchg
clc
test
push
lods
adc
xchg
pop
ins
pop
sbb
and
xchg
mov
(bad)
cmps
mov
test
add
mov
stos
call
sbb
jmp
xchg
sub
xchg
aaa
jle
(bad)
movs
and
retf
mov
pop
mov
xor
retf
and
int
adc
mov
daa
js
or
aam
ret
cdq
bound
sbb
or
mov
mov
std
mov
dec
js
daa
retf
sub
xlat
jnp
jae
aad
sahf
lock
xchg
or
neg
lds
adc
pop
mov
mov
cmp
sbb
sub
pop
aas
sti
add
aam
dec
sbb
dec
xor
(bad)
cmp
test
xchg
js
pop
xlat
sbb
mov
mov
xchg
adc
stc
and
in
dec
mov
xor
sti
cwde
mov
jmp
pop
inc
mov
and
inc
jmp
fwait
jne
xor
cld
addr16
xchg
mov
xchg
idiv
dec
test
lods
ds
scas
mov
in
test
sbb
mov
xor
xchg
mov
fcom
jecxz
or
arpl
add
and
pusha
fnstsw
cmc
les
jle
enter
pop
cmp
pop
xchg
mov
and
movs
pop
mov
cmps
jnp
sbb
push
dec
cmp
add
cmps
dec
scas
dec
cmp
(bad)
cmps
movs
push
cmps
lahf
xchg
lods
in
(bad)
jmp
movs
jle
out
inc
mov
test
sub
inc
add
jp
in
jmp
cdq
dec
out
mov
gs
push
(bad)
adc
repz
cmp
stc
lods
or
and
adc
pop
(bad)
mov
dec
dec
les
dec
mov
(bad)
imul
push
or
lea
mov
mov
mul
mov
enter
xchg
xchg
psrlq
cmp
fimul
ret
cmp
cwde
cdq
add
add
inc
add
rcr
scas
xchg
cmc
mov
jae
xor
aaa
(bad)
(bad)
sub
es
scas
or
movs
mov
sub
pop
mov
mov
jle
add
test
(bad)
pushf
jo
es
outs
mov
movs
and
inc
je
dec
icebp
mov
daa
stos
rol
adc
sbb
pop
mov
out
sbb
es
daa
out
xchg
push
push
ins
outs
add
jbe
js
xchg
fstp
iret
int
dec
jmp
in
push
xchg
cmp
sbb
and
adc
(bad)
loopne
adc
push
into
daa
push
popf
sub
loop
sbb
ja
pop
inc
lods
push
adc
lea
lea
out
jne
add
and
or
cmc
jb
cmp
push
fild
xchg
add
pop
mov
imul
jmp
push
or
test
pop
div
scas
enter
neg
pop
cmps
add
(bad)
xchg
jge
pusha
push
dec
xchg
pop
ins
xchg
das
in
cli
dec
sub
adc
adc
mov
pop
adc
mov
cli
scas
jmp
sbb
push
pop
mov
out
push
ftst
cmps
mov
xchg
out
into
dec
rol
repnz
lods
fnsave
jo
jmp
dec
push
mov
jle
in
sbb
pop
ss
pop
pop
scas
sub
fcmovnbe
imul
test
add
add
xor
fisttp
inc
inc
into
fwait
push
jl
std
out
push
jl
scas
sar
std
int3
pop
pop
xchg
sub
mov
dec
mov
outs
fdivr
fst
or
push
add
add
cdq
inc
push
lea
pop
dec
mov
xor
mov
add
dec
es
add
jge
xchg
leave
mul
sbb
inc
or
mov
mov
cmp
(bad)
push
push
out
ficom
pop
and
jb
pop
das
xchg
adc
loope
push
aam
add
add
push
jae
mov
mov
mov
mov
int3
popf
jg
cmp
call
popa
xchg
scas
or
out
fld
out
dec
push
inc
out
stos
and
bnd
jmp
sub
cs
pop
xchg
sbb
pop
leave
xor
outs
outs
push
jle
jecxz
xchg
jo
mov
mov
jnp
jbe
cmp
xchg
sub
mov
retf
pop
fbld
adc
(bad)
push
ret
(bad)
push
push
sub
add
popf
cmp
add
jl
(bad)
jmp
cwde
lods
mov
push
xchg
mov
mov
xchg
addr16
test
push
sbb
mov
inc
adc
add
mov
(bad)
push
bound
ds
sbb
loop
loopne
mov
clc
pop
xchg
ficomp
popf
mov
inc
ins
aaa
pop
les
fadd
jl
jo
adc
pop
movs
add
(bad)
jmp
dec
mov
movs
imul
xor
mov
dec
je
sbb
hlt
inc
sub
movs
jge
inc
in
ja
pop
mov
shr
fst
hlt
nop
fucom
dec
rcl
jno
mov
mov
push
mov
or
daa
in
mov
mov
pusha
jp
jle
test
mov
sbb
rol
xor
adc
movs
rol
in
dec
push
pop
sbb
lock
and
cmp
mov
mov
jne
mov
xchg
je
push
dec
add
push
push
mov
aaa
jae
movs
in
push
and
jge
ret
js
jle
mov
jbe
inc
aas
outs
add
xor
push
enter
(bad)
out
popa
ret
sub
add
mov
int3
adc
mov
push
push
push
(bad)
cwde
ins
jmp
push
push
(bad)
xor
dec
aam
push
in
sub
(bad)
fdiv
mov
popa
daa
or
fwait
xchg
xor
fisub
and
clc
sub
pop
and
sub
mov
adc
std
ds
sub
push
fwait
cwde
add
vunpckhpd
adc
xor
ss
hlt
or
mov
inc
hlt
clc
movs
xchg
in
xchg
jbe
mov
or
xchg
(bad)
ins
cmp
cli
cwde
mov
pop
adc
xchg
cmp
pop
cmp
xchg
js
and
clc
mov
dec
aas
daa
push
adc
or
sub
xchg
push
std
dec
xor
jecxz
mov
clc
add
hlt
xchg
(bad)
fwait
stos
mov
push
mov
lds
xlat
add
pop
adc
mov
stos
inc
fild
(bad)
xchg
dec
ss
paddsb
aad
dec
inc
xchg
sbb
fldenv
xchg
xor
aad
pop
inc
pop
loop
gs
cmc
(bad)
std
sbb
xlat
jl
(bad)
jle
add
sbb
in
test
aad
and
in
mov
inc
arpl
sar
mov
pushf
mov
mov
or
xchg
jle
ins
xchg
add
xor
inc
std
cmp
clc
repz
inc
fild
pop
sbb
cdq
mov
pop
(bad)
stos
sub
sbb
inc
push
fs
push
sbb
shl
xchg
out
pop
hlt
pop
jo
lea
sub
pop
push
shl
icebp
ret
dec
fild
mul
xlat
add
arpl
aaa
out
popa
imul
mov
pop
dec
aaa
pop
xor
pop
mov
inc
and
xor
dec
pop
int
sahf
xor
ins
sbb
in
repz
cmp
jbe
imul
or
repnz
xor
outs
shl
add
push
fild
(bad)
fwait
call
fidivr
aaa
out
add
push
(bad)
in
loop
mov
loopne
adc
enter
sbb
inc
pop
xchg
adc
out
repnz
xchg
dec
(bad)
dec
(bad)
mov
retf
jmp
mov
hlt
add
sbb
enter
ret
xor
call
std
mov
pushf
dec
xchg
cmp
(bad)
icebp
test
xor
jb
shl
sub
dec
ds
rcr
rcl
and
icebp
fcmovu
dec
(bad)
push
add
inc
clc
(bad)
stc
repnz
aas
pop
jae
sar
retf
xchg
mov
xchg
aas
shl
mov
push
push
aas
shl
aaa
test
inc
mov
in
je
pop
loop
mov
icebp
cs
mov
js
out
pop
out
je
xor
push
sbb
mov
rcl
ret
push
push
add
add
gs
stos
dec
enter
adc
dec
icebp
pop
pop
(bad)
sbb
mov
out
jb
stos
cld
jle
adc
leave
jae
pop
xchg
imul
mov
repnz
dec
sahf
pushf
pop
js
pop
gs
pusha
sti
ins
repz
or
inc
sub
xchg
push
sahf
xchg
lods
rcl
adc
popf
cld
cmps
cld
cmp
shl
int
(bad)
or
push
xchg
dec
ret
stos
xor
enter
push
cmp
fist
jp
inc
(bad)
shl
jmp
outs
jg
jo
cmps
add
dec
push
cli
add
retf
in
scas
lds
jl
mov
pop
shr
and
jle
test
pop
pop
int3
jne
pop
rcl
stc
(bad)
and
retf
retf
ret
cwde
jmp
pop
pop
push
pusha
popf
add
stos
pop
gs
xor
repz
clc
push
rcl
and
xchg
cmps
xchg
jno
xchg
mov
xchg
ror
mov
in
mov
call
push
pop
in
imul
stc
push
fcmovnb
mov
in
iret
or
dec
fisubr
mov
inc
imul
imul
add
hlt
loope
dec
jno
rcr
mov
adc
fsubr
push
mov
adc
(bad)
out
mov
or
sub
mov
pop
out
dec
mov
xor
(bad)
in
mov
ja
in
push
ss
(bad)
shr
(bad)
push
dec
adc
sbb
mov
vpmulhuw
inc
adc
aas
push
frstor
ror
push
inc
mov
scas
shl
add
fcmovne
inc
pop
xchg
icebp
mov
push
cmp
int
out
cmp
inc
and
or
dec
adc
ss
in
hlt
jecxz
xor
stc
jge
movs
push
fld
adc
cli
inc
jns
outs
or
xchg
rcr
mov
mov
in
cmp
sbb
pmaddwd
cmc
pop
mov
cmp
rcl
mov
xchg
(bad)
lahf
out
mov
call
mov
idiv
mov
adc
inc
add
push
lock
dec
mul
add
leave
hlt
scas
std
stos
add
xor
aaa
cmp
inc
test
lock
bound
enter
frstor
and
aaa
push
sub
fiadd
adc
mov
push
(bad)
inc
leave
mov
adc
enter
mov
loope
xchg
nop
lds
sub
sbb
push
ja
das
sub
sbb
or
jg
push
fstp
leave
jecxz
mov
fdivr
inc
mov
sub
in
(bad)
aas
mov
push
mov
retf
lea
mov
ret
jl
cs
leave
and
mov
dec
and
push
std
adc
das
pop
push
mov
loopne
xchg
xor
sbb
loop
xor
stos
pop
adc
call
add
out
adc
mov
bswap
push
sbb
jns
aas
shr
push
sbb
dec
stos
pop
cmp
xor
jnp
xor
ins
sub
and
add
cmps
out
cmp
dec
dec
outs
(bad)
xlat
mov
pop
into
scas
div
adc
xchg
mov
mov
xor
outs
adc
(bad)
jae
(bad)
push
stc
mov
into
add
fnstsw
stos
sub
(bad)
adc
or
rol
inc
mov
imul
mov
packssdw
inc
adc
outs
mov
inc
xor
fld1
test
data16
pop
rol
pop
stos
(bad)
mov
lods
inc
cmp
adc
dec
in
jecxz
xchg
fs
mov
dec
xor
loope
mov
pop
ret
lock
mov
cmp
lock
mov
repz
push
push
int3
hlt
inc
arpl
inc
cwde
sbb
push
pop
stos
(bad)
scas
xor
mov
dec
call
ins
xchg
gs
cdq
out
out
xor
xlat
jae
jl
int
outs
ins
sub
pop
jl
xchg
cld
jg
xchg
mov
ret
push
sub
push
fdivrp
xchg
mov
jle
mov
inc
push
(bad)
aad
push
not
mov
test
sbb
(bad)
cmp
out
push
stos
jle
sub
movs
mov
cmps
stos
dec
ins
sub
aam
add
cli
in
pushf
pop
fldenv
mov
inc
xor
and
aad
aaa
mov
xchg
stos
xor
dec
push
or
mov
pop
repnz
test
cmp
ficom
test
sbb
out
add
inc
dec
mov
inc
test
sub
retf
stos
repnz
dec
pusha
dec
mov
mov
cld
or
in
(bad)
adc
and
pop
ja
inc
jl
inc
jnp
xchg
sbb
daa
dec
movs
rcl
mov
ins
int3
leave
pop
jle
mov
fwait
iret
fsubp
lds
ss
push
jne
mov
or
(bad)
jmp
adc
mov
call
fadd
jmp
pop
ffreep
or
ret
inc
ret
sbb
sbb
mov
imul
push
iret
ja
repz
les
test
push
mov
scas
mov
(bad)
dec
loope
(bad)
cmp
ret
push
add
pop
ds
imul
mov
test
or
ss
shr
mov
sbb
xchg
adc
es
sub
mov
dec
or
add
cmp
jge
and
ins
xchg
js
add
in
mov
pop
ds
vhaddps
ss
retf
out
out
xor
daa
xchg
stos
mov
gs
fcomp
cmp
ja
push
ins
inc
loope
arpl
mov
add
pop
adc
xchg
cdq
xor
sub
xchg
push
adc
scas
test
mov
popf
call
enter
sub
xlat
dec
cmps
jb
add
stos
push
sbb
push
jo
cdq
shl
xchg
cmps
scas
loop
pop
je
movs
neg
in
xchg
sub
fld
out
fidiv
mov
lds
pop
fwait
and
xchg
out
push
loopne
scas
test
mov
xor
aaa
ds
add
cmp
dec
js
pop
and
retf
clc
fs
sbb
inc
lods
or
jno
imul
rol
fidivr
mov
retf
sbb
xor
mov
stc
aad
out
cdq
xchg
nop
cmp
add
into
imul
push
mov
fimul
les
push
icebp
sbb
push
jp
jmp
int3
ins
sbb
add
je
out
xor
push
sub
aad
push
xchg
lods
push
and
bound
sar
ja
sub
xchg
inc
sar
repnz
mov
push
test
into
mov
or
push
xchg
dec
push
adc
jbe
repz
sub
sub
inc
pop
call
mov
push
xor
push
int3
xchg
dec
xchg
xlat
adc
dec
dec
mov
push
pop
js
call
sub
daa
ss
in
xor
pusha
adc
add
xchg
dec
sbb
cmps
out
mov
xchg
outs
pushf
enter
sti
or
cs
mov
js
in
lods
data16
cli
jecxz
mov
mov
dec
repz
sar
cmps
std
leave
outs
daa
int3
push
push
rcl
pop
mov
ret
jbe
retf
cdq
inc
add
mov
xchg
mov
add
mov
cmp
dec
sub
daa
repnz
xchg
mov
add
call
jns
xchg
pusha
cmp
mov
mov
stc
xchg
sub
add
sti
lahf
pushf
pop
out
pop
cmc
ja
daa
mov
or
mov
mov
cwde
jge
(bad)
fistp
scas
inc
xor
(bad)
sub
sub
jle
dec
mov
sbb
jl
add
je
inc
mov
out
add
fsub
inc
and
addr16
add
js
inc
repnz
jmp
mov
mov
(bad)
mov
push
loope
push
ins
push
xchg
fcmovnb
inc
dec
sub
jl
sbb
push
iret
xchg
repnz
(bad)
mov
jae
jg
dec
cli
cs
sar
(bad)
fcmovnu
mov
mov
es
sub
cmp
pop
mov
lock
push
ss
or
fadd
mov
sub
push
ins
bound
sub
add
(bad)
fdivr
outs
sbb
rol
and
cmp
and
inc
into
xor
dec
test
call
jmp
and
xchg
cmp
clc
mov
mov
jp
arpl
jp
and
nop
clc
sbb
mov
imul
add
dec
push
rol
mov
pop
outs
imul
call
adc
jns
and
movs
retf
sahf
cmp
xchg
fcomp
pusha
into
jns
xchg
add
jg
movs
sbb
call
xor
(bad)
dec
push
idiv
jmp
push
aam
or
push
inc
and
lahf
pushf
dec
imul
call
adc
dec
aas
(bad)
sbb
push
push
add
ins
sub
lahf
aam
xchg
jo
dec
pop
cmp
xor
aas
arpl
dec
mov
adc
inc
inc
dec
hlt
push
mov
pop
shl
cmp
inc
cmp
jmp
into
sub
add
jecxz
mov
mov
push
sbb
xchg
loope
or
retf
dec
add
ja
jmp
mov
(bad)
movs
into
adc
repz
mov
rol
jbe
mov
cmc
adc
and
ret
lock
retf
retf
lods
jg
cwde
cmove
ror
sbb
dec
loopne
test
dec
out
popa
pop
ins
int3
pop
test
in
int
out
std
xor
ror
test
sub
mov
or
push
mov
arpl
mov
jns
das
jle
cs
mov
out
jle
cmps
jo
mov
outs
mov
lahf
fwait
(bad)
scas
outs
retf
jae
add
test
stc
shl
bound
imul
add
add
mov
(bad)
popa
or
neg
aas
out
dec
psubsw
stc
add
add
pop
adc
xlat
xor
cmp
xchg
shl
pop
movs
mov
xchg
or
fs
repz
pop
or
mov
mov
and
cmp
pop
xchg
jg
adc
inc
int
arpl
lahf
shl
in
call
cmps
jge
imul
adc
jp
cmp
mov
mov
adc
and
cmp
xchg
pop
push
xlat
push
jle
jnp
jmp
or
dec
push
outs
jae
and
into
imul
jbe
mov
jl
mov
sbb
fcomp
lahf
sbb
xchg
or
or
or
inc
call
out
cmp
ret
ss
cdq
rcr
dec
jnp
jl
lahf
icebp
(bad)
stos
stc
jnp
in
add
sub
jns
ins
imul
xchg
pop
adc
fsub
sub
pop
pop
sahf
les
cli
inc
loop
xchg
or
jae
cmc
sar
add
sub
les
in
jge
adc
xchg
sub
in
mov
sti
push
sub
push
cmp
add
gs
mov
dec
(bad)
and
cs
adc
jno
cmp
xchg
mov
jnp
mov
mov
lods
mov
jle
loop
(bad)
add
jo
iret
sbb
js
pop
pop
jmp
push
fwait
and
outs
mov
nop
fld
lock
xchg
push
push
sub
pop
adc
adc
dec
fisubr
sbb
pop
retf
sbb
stos
pop
adc
xor
dec
inc
add
jnp
jmp
rcl
dec
or
mov
mov
nop
cld
int
dec
lea
mov
or
sbb
push
test
xchg
jnp
mov
jmp
adc
or
in
leave
or
mov
ss
shr
test
xchg
mov
inc
xlat
xchg
imul
std
adc
loop
jne
in
fdiv
fisttp
call
xor
mov
out
cli
popf
mov
daa
jmp
pop
mov
cmp
jae
in
div
xor
je
das
sub
inc
or
pop
imul
dec
test
and
inc
push
mov
push
cs
stc
add
imul
stos
inc
pusha
add
scas
movs
fcmovnb
(bad)
and
jno
push
int
ret
cmps
jnp
push
lock
jmp
jnp
es
add
sbb
jl
sbb
inc
out
jg
pop
add
push
js
loop
mov
xor
cwde
pop
mov
adc
push
push
cmp
sub
cmp
push
stos
mov
pushf
xlat
ret
mov
cmps
push
jno
xor
xchg
jbe
out
pop
hlt
cmp
sti
push
ins
scas
mov
push
sub
mov
and
xor
jnp
sti
jmp
jmp
cmovae
scas
jle
ret
pop
lea
jecxz
outs
inc
xchg
adc
cmps
push
(bad)
mov
mov
fcomp
jle
mov
mov
fst
jge
pop
sbb
and
dec
mov
push
sbb
movs
jecxz
rcl
and
mov
mov
mov
xchg
sbb
loope
adc
jb
neg
inc
movs
adc
push
icebp
outs
pop
mov
jns
stc
sbb
or
test
ja
imul
ror
imul
movs
xor
pop
test
push
jle
cs
pop
pop
stos
callw
sbb
sbb
xchg
xlat
lods
mov
xlat
jo
sub
or
lods
mov
sti
lock
mov
fmul
xchg
xchg
mov
jecxz
sbb
push
and
inc
jge
scas
out
leave
jg
hlt
(bad)
int3
adc
rol
cs
mov
add
call
das
mov
and
jnp
sub
test
adc
gs
scas
xchg
xchg
mov
rcl
lock
cmp
pop
fstp
jb
xor
sub
mov
push
in
pop
xor
enter
les
sbb
and
xchg
mov
aas
pop
dec
fwait
in
mov
xor
push
pop
loop
jecxz
sbb
and
fbld
movmskps
test
ret
(bad)
jbe
sar
dec
cmp
mov
sbb
stos
adc
pushf
int
nop
pop
scas
(bad)
push
sahf
pusha
and
adc
xlat
mov
jle
push
bound
movs
add
aaa
or
xchg
sti
cli
repnz
popf
mov
pop
popa
sub
call
dec
cdq
cmps
scas
mov
add
dec
adc
dec
push
jnp
loop
imul
inc
es
xor
mov
inc
sahf
mov
mov
mov
rol
sahf
pop
jb
adc
outs
out
mov
pop
gs
(bad)
aam
mov
inc
retf
jle
cdq
(bad)
int
jb
sub
in
sub
into
out
push
mov
fs
mul
dec
daa
sahf
(bad)
adc
test
or
lods
shl
dec
dec
bswap
adc
jnp
aam
mov
outs
scas
cmps
cdq
sbb
jmp
mov
push
push
jo
pop
test
shl
dec
mov
pop
shl
sub
or
inc
mov
sbb
ret
cdq
dec
les
in
imul
xchg
fmul
dec
sbb
and
cli
sub
iret
and
add
cmp
inc
iretw
sub
add
cdq
and
sub
mov
shr
mov
(bad)
cmp
push
or
data16
ret
cmp
add
dec
jae
xor
dec
adc
les
xchg
aam
std
stos
outs
mov
ja
imul
xchg
push
mov
cmc
scas
(bad)
mov
inc
xchg
fld
push
push
sahf
pop
daa
and
jns
aam
shr
das
jb
xor
je
cli
xchg
mov
jmp
push
xchg
mov
cmp
pop
push
cli
add
adc
adc
dec
mov
adc
loopne
pop
(bad)
mov
dec
sub
mov
pop
js
xor
sub
(bad)
cmp
movs
(bad)
jp
std
cmp
in
adc
add
leave
jmp
add
cmp
imul
inc
push
sub
out
dec
(bad)
out
xchg
(bad)
cdq
mov
sub
(bad)
mov
and
adc
lods
lds
(bad)
sub
sub
and
jbe
inc
pop
mov
xor
out
sahf
and
in
test
movs
mov
adc
neg
xchg
jp
sahf
sub
xor
and
add
lea
cmp
aad
movs
adc
stos
sbb
mov
inc
and
retf
arpl
xchg
cmc
push
leave
out
adc
xchg
pusha
enter
jl
push
mov
or
test
fimul
retf
mov
dec
sub
fwait
test
jne
fsub
and
mov
lahf
ret
not
fldenv
pop
in
add
adc
test
dec
pop
push
adc
ss
pop
pusha
adc
xchg
xchg
xchg
jp
add
popf
xchg
pop
xor
adc
aad
xchg
xor
mov
nop
dec
test
out
cmp
fwait
sub
adc
popa
mov
jne
data16
add
call
xchg
(bad)
or
cmp
xchg
mov
std
ds
movs
mov
mov
inc
fs
cmp
push
std
inc
and
xchg
and
inc
adc
cmp
xchg
int3
sbb
movs
mul
out
ds
sbb
lock
sbb
jle
stc
and
jmp
mov
and
bound
aad
adc
test
int3
dec
jge
and
imul
xor
test
xor
daa
adc
jge
mov
icebp
pushf
popa
jae
sbb
(bad)
adc
cmp
mov
outs
iret
sub
jo
push
movs
inc
jmp
nop
sbb
or
add
je
jge
(bad)
(bad)
pop
pop
in
or
data16
push
cwde
jae
cwde
add
push
push
ins
sub
or
cs
aad
push
inc
stos
jl
ds
sub
sub
dec
push
not
inc
mov
push
and
pop
mul
push
mov
cmp
xor
dec
pop
push
jg
dec
mov
cmp
xchg
mov
mov
fst
das
ret
fnstcw
and
inc
nop
cmps
stos
stos
jno
or
(bad)
arpl
mov
mov
(bad)
sbb
into
rcr
fisubr
sbb
xchg
int3
sbb
cs
out
mov
fbstp
jns
cmp
cld
fistp
pop
mov
xchg
enter
imul
and
(bad)
mov
movs
lds
and
(bad)
xchg
inc
repnz
ja
sbb
jmp
cdq
js
push
mov
xor
sub
outs
ret
inc
xlat
xor
retf
scas
(bad)
pop
sti
test
xadd
fldcw
xchg
adc
int
imul
dec
xchg
xchg
pop
push
(bad)
push
outs
loopne
sbb
xchg
les
fisttp
lds
dec
mov
cmps
push
ret
(bad)
in
jmp
arpl
scas
xchg
inc
shl
daa
add
(bad)
add
add
outs
mov
in
in
push
mov
cmp
imul
lock
pusha
sahf
mov
xchg
je
xchg
inc
arpl
lahf
or
mov
xchg
(bad)
push
jnp
aam
icebp
or
call
xor
stos
fucomi
or
ror
ficomp
pop
xchg
mov
xchg
xor
push
jecxz
out
pushf
jb
or
ss
movs
cmp
inc
jecxz
push
sub
jne
xor
sub
in
pop
jecxz
mov
icebp
test
sbb
sub
outs
and
je
inc
ret
sbb
lods
aas
or
xor
call
movs
ds
movs
fiadd
shr
cmps
mov
mov
popf
out
dec
fwait
mov
jne
cmps
out
xor
adc
sub
inc
dec
dec
in
xchg
test
test
push
jl
pop
loop
cmps
(bad)
rcr
xor
sub
cmp
mov
and
jns
lods
mov
mov
icebp
adc
ins
dec
fisubr
fwait
inc
inc
test
push
aad
scas
add
mov
into
cmpxchg
daa
jl
pop
daa
in
into
sbb
inc
dec
ucomiss
lods
ret
mov
std
mov
jp
mov
ret
(bad)
mov
std
repnz
call
stc
js
dec
cmp
push
cmp
mov
and
push
(bad)
adc
jno
ret
cmp
enter
aas
movhlps
mov
pop
sbb
xchg
(bad)
sbb
adc
add
adc
out
mov
sbb
jb
mov
and
push
shl
popf
cmp
(bad)
mov
push
mov
outs
call
pop
loopne
mov
sub
shl
push
pop
lods
sti
cmp
xlat
ss
xchg
(bad)
mov
xchg
retf
in
into
and
jnp
in
jl
or
or
mov
pop
xchg
inc
jge
lods
jecxz
popa
adc
cmp
jb
dec
(bad)
sub
or
mov
cmps
shl
mov
mov
push
aam
adc
outs
call
adc
sbb
leave
(bad)
sahf
dec
adc
dec
pextrw
mov
out
xlat
and
push
(bad)
jae
ins
bound
ins
xor
or
call
outs
call
imul
call
sub
mov
dec
inc
xor
inc
jp
(bad)
mov
jp
jmp
push
cmp
ja
mov
mov
mov
scas
mov
pop
test
idiv
das
dec
push
test
pop
stos
ins
(bad)
int3
arpl
int3
inc
imul
test
jno
fwait
adc
loopne
int
lock
mov
fcmovb
(bad)
xchg
cwde
add
cmp
dec
add
pop
lahf
and
shl
mov
jae
mov
icebp
(bad)
xor
test
pop
jo
adc
xchg
leave
sbb
jl
dec
ret
das
and
icebp
push
jnp
iret
mov
lock
ins
add
xchg
sbb
jle
outs
lahf
nop
leave
cmp
cmp
xor
movs
mov
(bad)
imul
fst
fldenv
lods
jb
mov
aas
dec
test
scas
pop
add
setno
ins
cmps
lahf
ret
sbb
or
gs
(bad)
std
mov
test
jecxz
mov
fist
push
jo
mov
pop
adc
repnz
xchg
dec
lods
inc
out
inc
mov
aaa
dec
ret
xchg
adc
sub
mov
shl
movs
ror
sbb
jge
add
dec
pusha
fisttp
sahf
in
inc
jbe
push
movs
sub
xor
pop
dec
out
scas
outs
scas
mov
out
cdq
pushf
push
retf
push
mov
inc
je
mov
jno
jecxz
sbb
neg
inc
stos
clc
add
or
cli
ss
rcr
pop
inc
std
dec
ret
int
xcrypt-ofb
cmps
lods
mov
adc
sahf
test
mov
lds
seto
dec
adc
or
mov
mov
xor
mov
xor
nop
and
cmps
ja
gs
mov
jae
fisubr
jge
and
(bad)
jo
repz
loopne
iret
and
(bad)
cmp
pop
adc
je
aaa
add
mov
xchg
mov
push
nop
cmp
and
callw
imul
jne
jge
aad
cmp
(bad)
ins
xlat
adc
dec
pusha
xor
sub
clc
lock
shl
jae
or
in
call
sbb
outs
pop
stc
es
in
(bad)
push
mov
shl
adc
sub
enter
sub
jge
mov
jbe
pop
movs
out
dec
daa
into
mov
add
sti
mov
int
ins
pop
push
mov
xor
stc
pop
sub
mov
repz
out
mov
aas
ins
loop
out
pop
jne
cmp
scas
mov
movs
mov
jae
in
cmp
(bad)
jb
sahf
scas
mov
call
dec
xchg
dec
adc
jmp
push
pushf
or
sar
jmp
pop
jbe
inc
in
mov
jmp
push
mov
add
lahf
cli
jns
cmps
pop
jecxz
(bad)
fstp
(bad)
adc
adc
mov
sbb
add
or
dec
mov
or
stos
xor
mov
enter
sub
mov
pop
sbb
or
ja
(bad)
popf
adc
mov
mov
and
sahf
jg
sub
dec
pop
and
imul
cmp
dec
push
and
gs
mov
js
inc
je
pusha
mov
inc
repnz
das
xchg
aad
jo
movs
rcr
and
fnstsw
adc
mov
call
and
jmp
fidiv
adc
add
or
iret
dec
mov
into
stos
fdivr
inc
aas
(bad)
pop
outs
and
xchg
xchg
pop
cmps
iret
mov
test
inc
mov
popa
lods
xchg
mov
jns
repnz
shl
jnp
loop
in
mov
cmc
and
(bad)
mov
mov
pop
loope
cmp
ret
or
cmps
fild
push
mov
sbb
rcr
repnz
retf
(bad)
cmp
and
ss
jo
test
jecxz
push
retf
ins
shl
test
std
push
mul
push
cli
pop
retf
mov
bswap
mov
xor
fdivr
daa
ret
fbld
loop
cdq
sbb
sar
ret
mov
test
push
nop
mov
cmp
(bad)
cli
rcr
dec
jae
push
call
ins
pop
mov
push
adc
icebp
cli
(bad)
pop
sub
shr
cmc
mov
mov
push
and
adc
push
cmp
movs
adc
in
add
inc
in
or
setg
ss
mov
inc
cmps
stos
mov
(bad)
jg
and
mov
push
adc
fcomp
sub
rcl
mov
jge
pushf
sti
jmp
push
xchg
xor
pop
dec
out
stos
fsub
add
adc
test
(bad)
jbe
mov
push
push
inc
mov
mov
pushf
fst
sub
cmps
sub
inc
xor
sub
lea
or
(bad)
and
mov
mov
jp
fucomip
pop
popa
outs
jmp
mov
iret
outs
sub
sub
sbb
xor
mov
push
popa
or
pop
sub
aad
mov
pusha
cli
inc
jb
cmp
jne
dec
movs
xor
mul
fld
stos
ins
jns
mov
(bad)
sahf
mov
push
sub
mov
pop
cmp
dec
jb
aas
mov
pop
lahf
(bad)
sahf
ret
add
mov
and
and
adc
std
xor
test
(bad)
sub
xor
sbb
or
(bad)
(bad)
pop
adc
mov
pop
retf
shl
(bad)
jns
and
jne
movs
test
adc
mov
sbb
adc
(bad)
fadd
jbe
inc
mov
scas
out
out
mov
add
outs
adc
jmp
sub
jae
rcr
loope
xchg
iret
and
fld
aam
sti
mov
push
test
mov
retf
(bad)
addr16
outs
xor
das
sbb
push
xlat
and
or
sub
add
mov
jmp
repz
push
jne
lds
mov
jb
and
pop
bound
cwde
xchg
(bad)
rcr
jmp
adc
mov
xchg
js
pop
lahf
pushf
(bad)
jp
mov
pop
dec
dec
callw
imul
hlt
xchg
stos
arpl
jmp
inc
inc
into
test
dec
fadd
test
jne
cmp
rcl
or
ret
sbb
mov
dec
xchg
sub
jae
or
xor
add
push
mov
stos
sub
inc
mov
xor
pop
or
in
call
or
ret
mov
adc
inc
sbb
jae
mov
shl
out
mov
popf
movs
or
xchg
stc
rcl
mov
jg
jno
cmps
addr16
neg
sqrtps
mov
xchg
and
bound
jmp
punpckhwd
data16
push
sub
test
pop
addr16
sar
ds
aam
adc
mov
push
daa
xlat
in
xor
xchg
inc
sbb
lds
add
mov
mov
ret
call
fs
xchg
add
sub
pop
mov
xor
mov
mov
call
test
push
mov
xchg
jecxz
out
loope
outs
out
inc
sbb
add
lfs
dec
(bad)
dec
mov
mov
shl
add
arpl
mov
cmp
push
mov
bound
sbb
mov
or
icebp
mov
dec
movs
dec
mov
ja
ficomp
xor
push
hlt
or
cwde
loope
hlt
js
inc
jne
inc
add
push
jne
retf
sbb
enter
cmp
scas
imul
call
popa
and
arpl
ins
fs
push
cmps
or
mov
jg
adc
dec
pop
stos
jecxz
fwait
or
shr
sbb
(bad)
sbb
mov
sbb
adc
dec
mov
mov
sub
mov
ins
repz
pop
jb
mov
add
mov
jle
jl
or
shl
jp
es
xor
xchg
sbb
ror
xor
xor
cli
in
mov
jmp
xlat
mov
mov
test
sbb
pop
stos
push
gs
jbe
sbb
(bad)
cli
aad
jo
adc
call
xchg
sub
repz
xor
dec
pop
retf
push
jns
shl
pop
jl
retf
retf
mov
leave
mov
inc
mov
jp
ret
push
sar
jae
mov
sub
sub
xor
mov
mov
imul
xor
mov
into
sbb
loopne
lods
push
push
mov
int3
and
pusha
sub
mov
es
in
rcl
je
sub
pop
xchg
outs
pop
add
xor
imul
add
inc
sbb
lea
mov
aas
mov
je
cdq
push
mov
lods
dec
popa
mov
es
dec
pop
pop
pop
jmp
(bad)
rcr
test
sti
mov
scas
lods
bound
pop
add
push
and
(bad)
add
sub
mov
mov
ds
addr16
mov
adc
mov
scas
pushf
cmp
(bad)
cld
data16
pop
mov
and
dec
inc
mov
(bad)
retf
int
jle
push
jl
fldenv
cld
sub
fild
mov
(bad)
hlt
xor
je
sbb
int3
daa
scas
fistp
mov
cld
push
jns
dec
pop
ja
or
cmp
pusha
mov
or
sub
and
fwait
sbb
inc
push
jmp
add
mov
inc
mov
and
je
or
fwait
xor
push
nop
gs
push
add
das
mov
hlt
pop
xor
icebp
mov
or
stc
or
test
mov
mov
lods
hlt
lods
shl
shr
xchg
mov
and
in
sbb
(bad)
sbb
nop
cmp
push
leave
icebp
sbb
mov
xchg
loope
hlt
test
pop
sub
push
shl
xchg
dec
or
jne
js
dec
push
jb
push
loope
xor
add
sub
push
dec
imul
rcl
xor
pushf
or
(bad)
aas
or
div
mov
outs
cmc
sub
test
adc
shl
jae
mov
jge
ja
in
mov
movzx
or
(bad)
ins
add
cwde
cmp
mov
leave
ror
dec
dec
lock
xchg
xor
jle
cmp
add
mov
pop
hlt
dec
adc
in
scas
mov
(bad)
sub
adc
aas
xor
mov
(bad)
add
aad
pop
and
push
fs
cmp
loopne
pop
jecxz
jns
xor
fsub
sub
sub
fist
jnp
movs
pop
mov
mov
xchg
inc
mov
jge
dec
icebp
cmp
jle
pusha
pop
jle
lods
cmc
nop
out
jle
out
pop
pop
pop
aaa
test
js
mov
jb
lahf
sub
pop
outs
sbb
popa
add
fwait
inc
sub
(bad)
test
out
mov
jnp
sahf
cli
nop
cmp
push
and
in
mov
je
stos
adc
inc
out
scas
mov
aad
clc
cmc
mov
cwde
or
dec
sub
sahf
fstp
or
push
into
jns
xchg
push
test
sbb
es
out
ret
(bad)
lock
push
fwait
inc
out
xor
js
xchg
ficom
mov
pop
xor
das
sti
xlat
bound
out
jno
arpl
push
popf
pop
das
sbb
mov
sub
mov
mov
pop
pushf
mov
sahf
jae
xor
jo
icebp
or
xchg
clc
cdq
jne
jns
inc
fimul
int
mov
jl
add
sbb
add
lods
pop
adc
jg
ins
enter
sahf
jmp
ds
pop
sti
addr16
jge
push
(bad)
push
jbe
inc
inc
out
push
mov
jmp
outs
dec
in
add
retf
repz
or
sbb
cwde
rol
adc
inc
mov
pop
pop
js
lds
gs
pop
cmp
ss
call
in
daa
shl
jb
rcr
cmp
jne
je
sbb
rol
jno
lock
xchg
and
retf
dec
daa
push
push
jnp
sbb
mov
clc
movs
int3
(bad)
dec
pop
push
call
cmps
xlat
add
inc
push
jmp
pop
jne
in
cdq
addr16
adc
fld
sahf
push
leave
xor
aas
push
neg
jp
pop
out
sbb
jb
adc
sub
xor
mov
push
add
pop
dec
imul
imul
mov
cmps
mov
rcl
xor
and
loope
xor
mov
loopne
out
mul
loop
stc
pop
add
cmp
dec
sub
cmp
add
int
xlat
test
jg
aaa
(bad)
sbb
int3
jns
fdivp
pusha
cmp
lahf
xor
mov
jg
mov
inc
and
call
fcomp
imul
inc
sbb
inc
rcr
mov
mov
or
push
int
mov
xchg
fistp
dec
movs
mov
add
add
mov
adc
stos
pop
scas
movs
and
cs
aas
ins
adc
cmp
sbb
scas
lods
fdivr
retf
jmp
outs
lahf
std
sub
push
ins
fisub
hlt
mov
inc
push
cmps
jp
inc
(bad)
sahf
movs
xor
sbb
sbb
adc
cwde
call
dec
loope
jae
lods
lods
in
dec
test
lods
stos
aas
mov
xchg
loop
div
imul
jb
aad
scas
or
repz
cmp
jge
xchg
inc
setb
jecxz
dec
jmp
cmp
pop
push
pop
stc
movs
inc
aaa
push
les
stos
clc
pop
aad
add
and
cmp
ss
out
cmp
(bad)
(bad)
popa
xor
fnstenv
cdq
pop
jmp
mov
cmps
mov
into
xor
(bad)
jle
das
xor
sub
mov
adc
inc
pop
pop
mov
mov
data16
in
fst
jne
das
ins
gs
gs
pushf
in
inc
shl
cdq
mov
push
(bad)
push
outs
inc
ret
mov
lahf
shl
cwde
fild
retf
mov
fadd
xor
mov
fstp
cmp
adc
jle
fdivr
push
data16
pusha
mov
cdq
push
jge
popf
and
and
leave
sub
fimul
push
(bad)
outs
test
push
in
adc
mov
inc
cmp
mov
adc
sub
jg
jae
mov
pop
add
push
push
cdq
aad
mov
repnz
adc
push
mov
neg
pop
shl
xchg
mov
jb
cmp
mov
cld
push
add
fisttp
bound
mov
jo
sahf
jl
add
pop
scas
jae
and
inc
inc
dec
or
fwait
adc
enter
loopne
mov
outs
push
xor
jp
xor
adc
retf
mov
mov
sahf
(bad)
mov
pop
push
cmp
pop
add
not
inc
enter
adc
outs
(bad)
xor
or
test
xchg
xlat
js
push
xor
cmps
aad
sub
mov
or
mov
jae
pop
mov
std
cmc
in
mov
call
sub
in
mov
mov
gs
cwde
movs
inc
cli
dec
mov
cli
mov
dec
push
inc
cmps
imul
fs
mov
sbb
dec
cmp
cmc
arpl
sbb
jne
xlat
rcl
test
loope
pusha
adc
dec
dec
pushf
(bad)
fdivrp
mov
pop
ds
cmp
cdq
dec
mov
outs
std
mov
pop
test
jns
es
cmps
cmps
(bad)
mov
add
pusha
int3
sbb
mov
lahf
aas
scas
stos
pusha
sbb
(bad)
jl
and
adc
stc
bound
arpl
(bad)
cs
push
jge
mov
(bad)
enter
dec
mov
push
repnz
sub
ja
cdq
retf
aas
clc
loopne
call
inc
clc
mov
pop
mov
mov
pop
push
mov
loopne
shl
jecxz
mov
imul
in
inc
or
push
jno
fwait
xor
inc
rcr
ja
pop
inc
ret
into
jns
cmp
add
cs
xchg
jae
xor
bound
mov
mov
sub
jns
pop
cmc
jb
adc
pop
xor
ss
lahf
xchg
outs
dec
mov
outs
push
sub
and
shr
push
sub
icebp
sub
(bad)
sbb
mov
not
pop
hlt
mov
or
push
push
cmp
daa
cld
sub
xchg
dec
in
(bad)
loope
fstp
push
ins
retf
(bad)
mov
aad
push
vorps
push
es
xor
inc
sahf
ficom
cmp
jbe
ret
out
stc
add
ficomp
sti
std
jno
push
mov
enter
shr
dec
inc
inc
int3
inc
int3
js
or
xor
push
clc
arpl
pop
scas
lea
cmp
jae
in
adc
sub
xchg
fwait
imul
out
cdq
ins
xchg
jno
into
xchg
jp
mov
ret
arpl
clc
adc
inc
fimul
int
dec
xor
and
(bad)
sbb
addr16
adc
xchg
clc
or
retf
adc
call
sub
retf
cdq
in
sbb
out
jb
shr
pop
cmova
push
repz
or
push
pop
enter
nop
fsub
mul
add
enter
or
sbb
jno
sbb
in
lods
xchg
push
add
in
pop
sti
repz
int3
out
adc
(bad)
js
jge
fsub
add
push
mov
adc
fdiv
aam
test
(bad)
divps
hlt
call
cs
bound
jne
out
dec
mov
mov
jmp
xchg
test
inc
stos
outs
ja
fidiv
ja
inc
xchg
out
call
imul
shl
mov
push
adc
cs
pop
xchg
pop
repnz
outs
push
mov
and
dec
stos
in
sbb
sub
pop
pop
xchg
lods
xchg
(bad)
jecxz
push
fist
out
mov
cli
out
(bad)
mov
ja
call
mov
sub
adc
in
pop
sbb
or
out
push
outs
mov
aaa
mov
cmc
push
mov
jbe
inc
bts
pop
cmp
dec
or
addr16
mov
inc
xor
add
lods
cld
or
ins
sahf
shl
push
jo
sub
ja
mov
call
jmp
sub
xor
mov
ins
sti
out
int3
adc
sbb
(bad)
psrlw
aaa
mov
fild
mov
ja
mov
(bad)
sar
adc
ss
jmp
push
dec
or
sbb
nop
ror
test
inc
stc
mov
xchg
pop
jmp
mov
push
mov
ins
mul
cwde
je
fidiv
in
cwde
cmc
push
jb
pop
neg
xchg
sbb
xchg
cwde
mov
xchg
jl
lahf
dec
sub
push
mov
mov
repnz
js
mov
dec
sahf
xor
cmp
fsqrt
bound
stc
push
in
cmc
fs
mov
mov
js
inc
mov
call
inc
int3
xor
fsub
iret
jle
hlt
test
cmp
in
es
sar
sar
pop
push
nop
adc
test
fild
out
fisttp
enter
daa
sti
mov
call
pushf
mov
enter
cld
clc
movs
lds
sahf
das
mov
movs
add
cld
(bad)
cs
fist
xchg
jbe
add
sbb
daa
arpl
jnp
pop
mov
cmps
dec
fucomip
pushf
pushf
cld
sar
call
xchg
pop
popf
xor
jge
push
je
xor
add
js
dec
clc
xor
add
fs
sbb
mov
call
push
fs
aam
(bad)
add
outs
sbb
inc
inc
jge
dec
cmp
push
cli
inc
dec
xchg
sub
loop
xchg
ins
cmc
and
sub
sub
cdq
cmc
pop
ss
push
aam
lds
outs
mov
xchg
xor
in
sahf
std
fsub
cdq
jecxz
mov
add
(bad)
xchg
pushf
rcl
push
imul
adc
sar
jne
add
mov
inc
jmp
and
mov
mov
call
inc
test
cmp
add
repz
sbb
icebp
das
icebp
jl
cmps
and
dec
cmp
test
xor
outs
(bad)
repz
pop
ins
dec
pop
aam
sar
jl
xlat
imul
(bad)
mov
test
xchg
jl
clc
jmp
jmp
in
mov
mov
pop
pop
icebp
call
std
mov
test
sbb
adc
loopne
nop
js
mov
stos
and
pop
or
inc
xchg
popa
ja
repz
(bad)
fist
sbb
out
xor
out
add
sub
dec
sbb
ret
adc
out
jbe
dec
mov
push
cmps
mov
cmc
fstp
cmc
aaa
mov
push
loope
mov
outs
lods
mov
mov
add
in
popa
out
push
mov
mov
dec
pop
repnz
imul
inc
out
in
icebp
and
jb
(bad)
leave
retf
jns
(bad)
xlat
pop
in
fbld
dec
repnz
(bad)
retf
pop
ret
ror
and
adc
jle
movs
scas
addr16
scas
cmp
jbe
fdiv
push
mov
fs
and
fiadd
push
sub
ficomp
loop
movs
pop
or
test
xor
(bad)
mov
fs
andnps
sar
mov
inc
(bad)
mov
mov
out
in
popa
pusha
mov
mov
pop
fwait
push
cmp
imul
icebp
nop
adc
adc
mov
outs
loop
loope
ja
sub
test
or
cwde
sub
jns
dec
inc
test
or
rcr
fstp
sti
out
mov
(bad)
push
cmp
ss
and
imul
fmul
sub
retf
xor
(bad)
mov
adc
mov
mov
or
xor
shl
(bad)
cmps
(bad)
(bad)
xor
adc
cwde
cs
sar
jae
call
popa
aas
push
ins
inc
stc
sub
xor
mov
jae
ret
stc
mov
dec
and
pop
loopne
fcom
data16
mov
push
ins
pop
loopne
call
outs
fwait
in
addr16
test
ror
repnz
leave
dec
(bad)
and
cdq
mov
cli
jmp
and
adc
lods
push
xor
add
jnp
inc
in
lods
aas
ja
fcomp
adc
shr
mov
mov
outs
dec
and
mov
xchg
dec
inc
repnz
push
jno
adc
inc
sar
imul
(bad)
hlt
cs
xor
out
jge
lock
pop
sub
icebp
retf
mov
push
pusha
push
mov
and
fstp
sub
shr
pop
ins
jmp
mov
aam
clc
and
push
sahf
mov
dec
inc
jmp
cmp
shl
mov
jae
push
adc
stos
cmp
xor
cld
lock
loopne
mov
bound
mov
or
cmp
jnp
loope
dec
ret
dec
mov
gs
pop
mul
(bad)
in
movs
xor
sar
adc
dec
mov
mov
mov
or
(bad)
dec
xchg
repnz
push
ficomp
or
nop
pop
mov
mov
push
or
aas
pop
xchg
ret
popa
outs
(bad)
or
adc
cmp
pop
push
sahf
push
loop
xchg
xchg
arpl
sub
add
pop
pop
jge
inc
call
mov
movs
inc
jle
add
movs
ins
stc
xchg
aad
or
shl
mov
popf
or
or
rol
pushf
iret
sti
jns
outs
or
cmp
pop
cmp
mov
cmp
lods
test
sub
mov
sbb
retf
test
arpl
mov
xchg
cwde
sub
fs
(bad)
mov
in
outs
rcr
cmps
adc
inc
mov
stos
cmp
jg
hlt
test
inc
cmp
cli
push
ds
xor
loopne
arpl
sbb
cmp
jmp
cmp
test
cmc
clc
cld
(bad)
(bad)
repz
outs
inc
push
ins
sub
loop
jmp
mov
outs
jmp
leave
lods
jno
lods
inc
ja
mov
add
inc
popf
cmp
nop
out
sub
mov
(bad)
ss
adc
sub
test
jae
inc
fxtract
push
and
(bad)
jno
sub
fiadd
cli
mov
cmovne
cld
das
fisttp
xchg
mov
sti
cmps
leave
mov
mov
cmp
cdq
or
scas
and
sti
xchg
pop
fild
mov
adc
lock
cmp
lahf
xchg
jge
jge
adc
lds
push
aam
imul
sub
cmp
test
jmp
repz
xlat
fs
cs
cmp
mov
mov
mov
clc
and
pop
inc
retf
xor
(bad)
in
es
fstp
and
ret
icebp
pushf
fidiv
pushf
push
jl
fisub
jp
pusha
inc
or
adc
mov
data16
mov
call
call
sbb
into
lock
sbb
lahf
sbb
ret
retf
gs
(bad)
mov
aas
repnz
mov
sub
in
xor
cld
mov
aas
cmp
das
sub
pop
push
daa
xchg
(bad)
(bad)
xchg
mov
clc
adc
push
jmp
movs
sub
mov
ins
mov
aad
daa
xchg
sbb
dec
lahf
shl
scas
out
lock
cmp
sbb
jae
and
xor
imul
out
enter
jmp
pop
push
scas
sbb
and
test
jp
je
movs
aad
xor
sahf
push
inc
icebp
lods
pop
mov
add
or
retf
jnp
sar
or
aad
mul
push
sbb
push
popf
std
je
dec
test
fidivr
sbb
mov
cld
into
dec
xor
sahf
pop
sar
adc
aam
mov
fs
pusha
punpckhbw
icebp
add
ss
push
call
xchg
mov
add
retf
pop
outs
fs
hlt
adc
idiv
(bad)
fcmovbe
add
inc
sbb
add
lds
jge
ror
rcr
popf
jae
mov
addr16
in
das
cmp
loop
lahf
cmp
stos
loop
repz
cmp
or
jmp
xor
add
sbb
xchg
sub
mov
(bad)
loope
pop
(bad)
adc
cs
jl
and
dec
mov
popa
or
or
aad
(bad)
stos
add
sbb
lea
xchg
lahf
sbb
fwait
int3
ja
jg
jno
rcl
mov
adc
mov
jno
pop
iret
scas
stc
cmp
or
pop
sbb
jo
inc
mov
pop
mov
(bad)
cld
dec
(bad)
hlt
pop
adc
movs
sub
dec
repnz
loopne
sar
adc
xchg
mov
mov
int3
loop
mov
xchg
dec
or
add
das
inc
adc
jnp
sbb
add
add
mov
cdq
pop
out
pop
add
loop
and
(bad)
in
jge
jns
test
in
xchg
inc
jl
stos
loope
sub
pop
pop
imul
adc
and
or
sbb
ror
xor
sub
mov
ins
xchg
wrmsr
rcr
imul
add
xchg
dec
add
daa
js
pop
pop
pop
mov
sub
adc
mov
xchg
mov
sahf
inc
scas
sbb
xchg
iret
aas
adc
xor
pop
rcl
add
jle
enter
(bad)
call
iret
mov
push
data16
xchg
adc
mov
lods
fstp
(bad)
in
add
mov
nop
icebp
fwait
jecxz
and
and
mul
stos
pop
jmp
pop
adc
add
mov
iret
sbb
pop
jo
ficom
shl
sbb
mov
shr
inc
in
iret
xrelease
fidivr
loope
jae
push
aas
int3
cmp
test
lds
or
out
std
out
stc
hlt
frstor
neg
imul
idiv
nop
js
or
xor
fild
cwde
mov
mov
retf
dec
rcr
push
push
sub
mov
(bad)
jg
fimul
xchg
xchg
rol
popf
adc
in
rcr
test
sbb
addr16
xchg
dec
push
stc
sar
jno
inc
retf
jbe
pop
rcr
mov
ds
lods
sub
sbb
pusha
adc
fst
mov
jae
hlt
(bad)
mov
outs
jmp
test
jne
xor
sub
shr
jg
fisttp
leave
inc
test
mov
dec
xchg
push
add
fistp
mov
mov
cmps
adc
push
mov
pop
aas
add
stc
push
fwait
imul
pop
pushf
test
arpl
lods
sahf
cmps
dec
inc
mov
out
dec
push
mov
and
lods
fistp
jl
push
jmp
pop
retf
(bad)
jmp
cmp
add
dec
pop
pop
xchg
xchg
sub
inc
iret
jge
or
pop
push
mov
inc
and
inc
popa
jbe
dec
(bad)
cmc
mov
and
icebp
xchg
sbb
ds
inc
aam
push
sti
scas
cmp
into
inc
add
stos
and
dec
cmp
(bad)
bound
adc
aaa
dec
ja
add
adc
repnz
add
cdq
jne
ret
mov
arpl
push
inc
gs
shl
sub
lods
out
nop
inc
mov
mov
xchg
add
jne
dec
pop
fcom
js
stos
fidivr
sub
mov
push
sbb
ret
enter
push
fcmovnu
mov
sub
mov
mov
(bad)
repz
in
in
mov
jae
(bad)
fstp
(bad)
es
jbe
pop
pop
call
int
cmp
xchg
or
stos
mov
xchg
ins
fstp
pop
adc
ror
test
sub
adc
inc
or
and
pop
mov
dec
adc
push
mov
test
adc
(bad)
adc
adc
test
push
sbb
cs
mov
ins
data16
in
imul
sub
jp
xchg
nop
cld
loope
mov
fs
fst
add
sub
jne
lea
or
pop
push
int3
cmps
rcr
dec
in
fwait
inc
cmc
es
pop
out
cwde
mov
push
test
les
mov
ret
or
imul
adc
leave
pop
adc
dec
or
sbb
jl
ja
je
(bad)
push
idiv
enter
data16
add
dec
dec
rcl
and
dec
loopne
mov
jnp
mov
xlat
outs
dec
adc
pop
mov
adc
das
mov
ins
mov
xchg
inc
int
inc
(bad)
ss
sbb
cmc
sbb
push
lock
enter
call
push
sub
cs
retf
hlt
lock
iret
dec
sbb
adc
imul
xchg
mov
icebp
in
test
add
push
test
movs
and
xor
or
call
inc
je
and
leave
ror
loopne
not
cmp
aaa
dec
or
and
pop
push
adc
popa
jecxz
outs
arpl
cmp
scas
xchg
jle
dec
mov
and
cmp
and
jmp
sbb
mov
jb
scas
jae
int3
fs
cdq
pop
pop
test
imul
test
jne
rcl
mov
aas
cmc
les
(bad)
mov
pop
or
sar
stc
mov
mov
cli
fstp
cli
xchg
add
push
sar
sbb
loope
dec
sbb
jno
mov
fmul
std
push
ins
les
(bad)
(bad)
xchg
in
jno
repnz
cmp
fdivr
add
mov
sub
jmp
xor
popa
arpl
test
fld
movs
adc
test
jg
pop
icebp
xor
mov
pop
pop
cmp
(bad)
shl
js
cmc
inc
sahf
fwait
leave
dec
cdq
(bad)
repnz
(bad)
imul
dec
das
arpl
ret
jl
or
test
add
mov
movs
pop
mov
push
test
fisttp
jo
not
and
ret
ins
(bad)
jl
lea
adc
inc
jbe
aam
stos
xchg
mov
sub
jmp
dec
enter
cmp
sbb
lods
fnstcw
push
fcomi
and
aaa
dec
out
cmp
mov
push
out
and
call
push
mov
mov
loope
inc
fstp
sti
lea
jo
xor
pop
ja
ret
add
and
into
std
push
xor
out
je
bound
or
jl
push
and
xchg
pop
cwde
inc
ficomp
cmp
cmc
aaa
mov
test
rep
sbb
push
xchg
adc
mov
shl
push
mov
and
inc
mov
mov
jb
adc
fiadd
repz
add
lods
outs
jno
mov
xchg
ja
dec
(bad)
aaa
nop/reserved
mov
push
sub
imul
imul
das
xchg
adc
or
in
push
fcmove
js
dec
pop
pop
sub
outs
mov
push
lds
jb
xchg
arpl
dec
or
pushf
aam
sar
movntps
dec
les
frstor
inc
xchg
sbb
mov
in
push
mov
xor
es
and
mov
sub
daa
lahf
jg
mov
cmps
mov
daa
pop
jge
mov
mov
jns
dec
aam
mov
imul
iret
call
ja
fidiv
les
inc
outs
push
cwde
dec
mov
movs
ja
ja
daa
int
pop
pop
dec
pop
ret
dec
add
mov
push
cmp
das
bound
gs
lds
stc
inc
shr
xchg
mov
dec
test
jl
jg
jnp
push
mov
lods
fldenv
push
imul
ftst
xchg
add
rcl
add
ret
fcomp
cdq
jmp
mov
sub
sub
sbb
jb
dec
adc
lods
xchg
(bad)
sahf
mov
dec
pop
pop
arpl
out
nop
mov
dec
xchg
imul
aaa
push
jmp
add
mov
xor
jecxz
inc
add
clc
popf
out
sahf
add
cmp
adc
in
mov
fiadd
aas
ss
in
(bad)
mov
call
outs
lock
shl
jmp
cmp
repz
xor
leave
std
mov
test
das
adc
lods
jg
mov
ret
loopne
in
out
(bad)
sti
ret
scas
mov
sub
xchg
dec
jg
jbe
cmp
jg
pop
adc
rcl
pop
out
cs
mov
test
jae
arpl
adc
adc
sbb
push
ficom
addr16
jo
sub
jmp
mov
stc
fcomp
outs
or
dec
mov
mov
(bad)
je
xchg
push
stos
dec
ficomp
iret
add
test
inc
jp
pop
pop
nop
or
call
push
cmp
cmc
inc
inc
push
dec
pop
dec
retf
stos
je
sub
lahf
mov
dec
fbld
call
mov
pop
inc
loope
xor
jnp
mov
fs
in
push
push
mov
dec
inc
xor
cs
push
js
fmul
repnz
repnz
pop
ins
jne
jb
or
cmp
pop
mov
add
mov
add
test
mov
dec
mov
mov
sbb
mov
daa
and
adc
loop
inc
sub
push
and
ja
push
into
inc
repnz
and
imul
cmp
xchg
das
pop
mov
jbe
rcl
push
es
inc
movs
nop
cs
xor
jg
fbstp
call
jecxz
int
imul
add
pop
icebp
mov
ret
or
add
bound
mov
mov
mov
sub
aaa
out
pop
xlat
pop
and
cmp
push
jmp
jg
dec
loop
aaa
push
jne
mov
push
cs
das
(bad)
ins
fcom
push
loopne
sti
inc
sbb
leave
inc
dec
jecxz
mov
sar
xchg
ret
pop
test
retf
push
(bad)
sbb
push
push
(bad)
adc
mov
adc
cmp
cli
push
scas
fsubr
aad
iret
mov
rcl
arpl
ins
push
add
inc
pextrw
dec
cld
mov
xchg
push
cli
shl
mov
dec
lods
mov
and
sub
mov
stos
add
mov
ffree
xor
inc
inc
and
adc
fisub
aad
ret
sbb
mov
push
aaa
mov
inc
mov
arpl
mov
xlat
arpl
inc
test
pop
mov
adc
cld
xchg
repnz
xor
movs
ds
retf
push
stc
daa
jne
and
nop
cmp
inc
fs
and
pop
std
or
test
and
and
pop
sti
mov
jb
outs
rcl
aam
adc
pmaddwd
and
and
test
adc
jl
test
(bad)
and
xchg
loopne
mov
cld
lea
dec
call
test
(bad)
sar
push
jle
sbb
or
mov
jb
push
xchg
jmp
sub
fmul
rol
inc
or
outs
fsub
fmul
es
xlat
js
or
test
dec
ss
fwait
inc
adc
clc
movs
sbb
fwait
dec
pushf
dec
mov
sar
push
mov
pop
ror
(bad)
(bad)
and
fimul
(bad)
jp
pop
push
or
sbb
push
or
mov
mov
jecxz
push
out
xor
sti
rcl
adc
(bad)
mul
and
jle
fs
pop
lods
jle
(bad)
mov
pop
mov
pop
dec
test
retf
bound
sbb
retf
fmul
add
and
jmp
lods
imul
(bad)
in
int3
ss
popf
mov
mov
cmp
sub
fs
loopne
into
and
out
sub
test
pop
(bad)
push
pop
in
or
in
pop
xchg
dec
mov
mov
into
or
jae
cmp
push
repz
mov
test
neg
fbld
add
pop
xchg
ss
shl
pop
in
cmp
add
push
cmps
push
retf
add
dec
inc
inc
cmp
jo
dec
or
cs
mov
repz
cmp
mov
xchg
xor
test
into
push
xchg
sahf
inc
xor
cdq
dec
lock
pushf
repnz
sub
jmp
push
es
dec
fcomp
sbb
push
scas
rcr
js
sub
mov
sbb
sub
loope
test
sub
test
push
jg
sub
pop
mov
mov
push
sub
into
ins
adc
cmps
pop
xor
sbb
mov
sti
mov
jmp
loope
push
ror
dec
sbb
jmp
mov
test
mov
xchg
jo
mov
and
dec
push
jb
mov
imul
mov
sub
mov
and
and
mov
clc
add
cmp
adc
mov
jnp
pop
or
jle
pop
and
jbe
das
rol
add
movs
mov
das
xchg
dec
call
mov
lods
or
inc
or
call
inc
rol
push
(bad)
inc
ficomp
das
clc
jno
jno
or
dec
sar
inc
inc
mov
push
mov
pop
adc
push
fidiv
idiv
push
leave
and
int
xor
(bad)
adc
dec
sbb
es
jne
mov
mov
out
and
mov
leave
mov
mov
and
dec
les
(bad)
cs
inc
lods
mov
lahf
mov
icebp
sub
jb
or
xchg
enter
xor
push
pusha
and
(bad)
lds
imul
and
std
or
lods
sti
sbb
dec
retf
test
shr
cmp
sbb
xchg
icebp
cmp
in
push
mov
rcr
push
add
inc
ret
jbe
int3
xor
sub
pop
cwde
jmp
jp
mov
push
mov
sbb
mov
mov
pop
push
cli
hlt
jecxz
push
test
mov
add
adc
movs
or
sti
dec
push
and
xor
scas
lahf
stc
inc
aam
ret
daa
xchg
in
loop
(bad)
inc
jmp
mov
ret
data16
cmp
lea
jmp
xor
test
pusha
mov
in
test
out
add
cdq
fadd
xor
sahf
mov
jmp
ins
adc
pop
adc
adc
imul
call
js
dec
push
daa
inc
gs
test
addr16
gs
sbb
adc
popa
scas
sti
fld
scas
push
or
push
mov
xchg
imul
cwde
mov
jp
xchg
std
mov
push
and
enter
mov
pop
in
into
(bad)
jb
mov
retf
and
dec
adc
jp
pop
mov
cmps
push
mov
mov
pmaxub
in
ds
and
fucomp
retf
push
fs
arpl
es
mov
lods
adc
inc
xor
in
pop
pusha
xchg
ss
loop
cmp
mov
mov
pop
out
pop
add
xchg
dec
imul
pop
push
out
das
push
(bad)
(bad)
imul
cmp
jo
call
ins
ja
lock
cmp
cmp
(bad)
fs
sbb
fcomip
inc
pop
add
sti
and
out
lea
xchg
xor
hlt
out
dec
mov
test
adc
inc
pop
(bad)
stc
xor
adc
loope
sub
and
inc
stos
fdivr
ins
or
mov
xchg
push
ret
stos
out
xlat
test
pop
les
adc
shl
dec
aas
vmread
mov
leave
test
and
jmp
adc
cmps
jbe
adc
pop
pop
xchg
frstor
shl
data16
aam
xchg
mov
fwait
je
pop
loopne
add
mov
fcmovnb
mov
adc
out
jmp
mov
pop
cmp
jae
inc
pop
push
ret
leave
test
push
inc
cmps
mov
inc
cmc
sub
xor
cmp
enter
ss
test
mov
(bad)
push
mov
mov
movs
xor
and
test
jl
test
sub
pop
jne
retf
sub
pop
cmps
jmp
(bad)
into
push
lea
stc
jo
test
pushf
mov
or
pop
cmps
daa
jge
mov
pusha
outs
sti
and
xchg
neg
test
imul
lods
or
mov
ret
push
bound
inc
ret
inc
mov
test
fs
and
imul
push
xchg
cmc
xchg
out
xchg
nop
jns
lods
cmp
(bad)
and
jnp
and
sbb
or
cmp
pop
mov
mov
jmp
xor
push
or
lds
stos
test
in
xchg
xor
push
int
aas
pop
xchg
std
pop
scas
loope
daa
ss
cwde
fs
jmp
mov
pop
mov
xor
or
mov
cmc
not
adc
sub
jge
aam
cmp
mov
dec
cdq
mov
mov
cmps
xchg
xor
leave
push
cli
sub
mov
cs
push
push
(bad)
xchg
fidiv
push
outs
mov
cmp
push
in
in
push
xor
mov
push
sub
jnp
in
inc
inc
outs
jmp
ror
xor
lock
out
mov
dec
popa
lods
mov
inc
aaa
xor
sub
mov
mov
pop
pop
push
or
stos
(bad)
retf
pop
xlat
aaa
mov
imul
or
adc
outs
mov
mov
inc
mov
fs
mov
xor
les
sub
sub
xor
scas
cmps
adc
outs
out
cmp
enter
pusha
jno
in
(bad)
cld
jecxz
pop
outs
dec
icebp
call
adc
repnz
les
push
push
enter
push
jg
bound
jo
fld
and
sub
mov
dec
jmp
sbb
mov
call
ror
lea
pop
bound
cmp
mov
xchg
loope
cs
mov
neg
sbb
add
jmp
lock
imul
jae
and
adc
imul
mov
jae
call
cmp
sbb
(bad)
xor
pop
clc
loopne
aaa
sub
sub
jl
test
pop
and
dec
adc
or
lods
push
jp
(bad)
jmp
pop
shl
push
dec
enter
push
adc
(bad)
out
imul
or
gs
std
sbb
scas
jbe
jnp
mov
mov
pop
retf
inc
mov
add
fwait
loop
inc
aad
mov
ja
mov
sbb
pop
icebp
adc
lds
xor
cdq
sbb
daa
add
xchg
jge
clc
xor
xchg
or
imul
add
pop
addr16
out
jl
mov
cmp
scas
push
mov
addr16
push
and
lds
mov
ret
int3
xchg
push
pop
ja
mov
and
retf
mov
sti
push
stc
or
and
jo
and
and
push
xchg
add
loop
pop
cmp
lahf
stc
aam
(bad)
and
fiadd
mul
fnsave
fst
pop
fst
mov
ffreep
and
sbb
xlat
jnp
cmc
in
lds
sbb
pop
fidivr
rcl
pop
or
les
sub
jo
jmp
std
outs
in
loop
sbb
bound
cmp
mov
popf
mov
rcl
push
cmp
xchg
pop
dec
inc
jecxz
std
popa
xor
add
mov
outs
(bad)
daa
xchg
mov
(bad)
mov
pop
mov
cmp
jmp
dec
lea
ds
fst
out
mov
loopne
rcr
sar
jbe
inc
hlt
(bad)
dec
cmp
in
shl
cmp
mov
repz
sbb
inc
push
mov
ficomp
jl
sbb
mov
pop
cmp
hlt
mov
ret
(bad)
cmc
out
pop
ja
call
sub
mov
arpl
jecxz
xchg
cld
add
fcmovne
les
out
outs
shl
adc
(bad)
mov
adc
ror
repz
xor
xchg
sub
sbb
cmp
jge
repz
(bad)
sahf
and
mov
call
cli
add
push
dec
fs
jns
pop
lea
push
mov
push
cmp
call
(bad)
jno
pop
scas
fwait
push
mov
push
dec
arpl
cdq
mov
adc
mov
dec
pop
adc
mov
mov
and
jns
pop
pusha
(bad)
lock
cli
pop
jb
imul
xchg
sbb
stc
inc
js
pushf
ror
sbb
dec
arpl
pop
push
test
push
sahf
out
ficom
dec
rol
cwde
in
cmp
ss
sbb
cmp
xchg
sbb
push
aas
sub
bound
lods
scas
scas
iret
mov
aad
jmp
jge
and
daa
into
fidivr
imul
stos
call
(bad)
js
cmc
pop
test
push
mov
jmp
mov
cmp
imul
xor
mov
mov
sub
xor
loopne
in
cld
mov
sar
cmp
or
jmp
ror
mov
cld
cwde
sbb
jmp
cmp
das
sub
cdq
pop
sbb
enter
jb
(bad)
mov
pushf
(bad)
loopne
cmps
dec
xchg
jns
movs
xor
jns
out
movs
xor
mov
daa
lods
sub
shl
loopne
ror
lock
shl
popf
mov
bound
and
mov
push
xchg
dec
in
push
loopne
xchg
pop
mov
push
(bad)
mov
mov
daa
imul
loopne
daa
push
pop
retf
loope
xchg
mov
xor
mov
adc
mov
inc
ds
fwait
stc
in
fnstcw
ret
mov
add
mov
dec
mov
sub
dec
js
xlat
adc
shr
stc
fistp
pop
sbb
(bad)
mov
or
xor
mov
adc
test
fdiv
mov
sbb
pop
mov
add
sub
or
push
in
icebp
xchg
push
and
add
movs
and
icebp
push
rdpmc
(bad)
ficomp
mov
fldcw
jno
jge
nop
pop
sbb
push
mov
out
jle
inc
push
mov
and
xchg
and
mov
or
jg
jno
sub
lock
add
xchg
mov
adc
cmp
mov
sti
test
stos
or
imul
push
pop
inc
pop
fld
push
and
jle
out
test
or
rol
cmps
jae
icebp
hlt
push
aaa
pop
sbb
out
mov
aaa
and
push
fcom
lea
jbe
arpl
jle
outs
jnp
cli
xchg
dec
fldenv
inc
mov
adc
ret
ins
(bad)
push
pop
(bad)
icebp
daa
sbb
bswap
xor
adc
es
pop
jle
cmp
inc
ror
stos
jne
fsave
dec
dec
jnp
in
push
ror
addr16
fsubp
mov
mov
mov
or
cmp
jns
es
cwde
mov
ins
xchg
pop
cdq
jge
cmp
push
mov
fmul
pusha
push
lock
sub
loope
jae
mov
push
repz
jae
rcl
cmp
add
sbb
xchg
cmp
ror
jl
scas
(bad)
cmc
sbb
je
xchg
or
jns
dec
xchg
pop
iret
add
sbb
mov
call
ret
pop
sbb
sbb
adc
xor
cli
cs
fnsave
hlt
test
cmp
and
sub
add
adc
in
jnp
push
setge
hlt
xor
cld
or
jno
dec
mov
pop
aas
inc
pop
clc
jg
outs
pop
ja
and
ret
test
out
mov
in
adc
inc
mov
es
push
mov
push
fisub
xchg
jns
inc
mov
jp
bound
clc
and
ins
fsub
dec
clc
push
push
shr
jecxz
popf
lock
adc
pop
dec
inc
xchg
pop
ins
retf
jp
xchg
sub
adc
xchg
adc
scas
(bad)
fsub
xchg
repz
xor
fisttp
push
xchg
loop
call
xor
fcomp
dec
xor
repz
push
popa
outs
adc
and
dec
inc
or
or
faddp
sub
jno
lahf
(bad)
icebp
sub
in
ret
push
cwde
ror
adc
xchg
cmps
dec
xchg
fwait
imul
inc
ja
pop
cmps
pop
and
jp
or
pop
cli
test
mov
cmp
pop
inc
sub
add
addr16
jmp
ins
movs
push
inc
aad
gs
inc
cs
or
aam
xchg
xchg
and
inc
ret
pop
in
mov
xchg
lds
push
or
int3
pusha
mov
daa
into
outs
addr16
xchg
xchg
push
mov
xchg
xor
cmc
mov
test
mov
cmp
shl
jg
sub
int3
dec
add
shl
inc
jge
fld
ja
xlat
mov
out
xor
(bad)
jmp
cmp
mov
loope
mov
mov
pop
mov
or
lods
and
jmp
add
fwait
pop
sub
shl
sbb
adc
es
cdq
mov
xlat
mov
sbb
clc
push
push
mov
sub
aaa
nop
xor
fld
dec
iret
inc
dec
mov
lahf
jbe
fstp
int
popf
mov
or
idiv
in
jmp
xchg
icebp
out
or
into
push
or
data16
pop
mov
mov
mov
aas
xchg
mov
cmp
xchg
cmps
cmp
out
add
jle
cmps
add
or
loop
mov
sbb
cwde
std
mov
gs
cmc
xchg
add
push
adc
cmps
push
mov
cmp
mov
mov
and
sub
(bad)
add
sbb
rcr
into
(bad)
jle
cmp
ins
in
movs
loope
push
ins
out
xchg
ins
sti
call
mov
movs
jg
cmps
out
inc
ins
int3
in
pop
arpl
push
hlt
cmp
sub
jb
xchg
add
mov
jo
mov
iret
mov
pop
stos
xlat
(bad)
push
push
mov
test
es
inc
outs
mov
push
loope
xchg
enter
xor
or
xor
push
mov
cmp
jmp
jb
pop
xor
add
daa
adc
aas
pop
jnp
retf
or
cmp
sbb
shr
movs
ss
js
inc
adc
xchg
cmp
add
mov
aam
cmc
fidiv
out
or
dec
inc
hlt
in
and
pop
xchg
std
mov
pop
shl
fwait
icebp
push
xor
cmp
add
push
ja
pop
lea
jb
repz
clc
push
push
add
into
mov
mov
fadd
mov
pop
mov
dec
test
sub
rcr
std
cmp
lods
aam
sbb
test
pop
jge
mov
xchg
sahf
xor
jbe
(bad)
xchg
inc
retf
mov
sub
pop
jp
(bad)
aas
adc
mov
dec
pop
(bad)
adc
or
test
xchg
mov
das
push
cmc
adc
test
push
ins
jle
or
fnstsw
test
mov
loope
adc
dec
push
(bad)
das
nop
mov
les
inc
scas
xchg
fidiv
xor
(bad)
test
adc
lods
inc
pop
pop
jo
cs
jle
pusha
inc
push
jmp
add
sub
fstp
adc
jle
lahf
test
mov
dec
hlt
sub
adc
and
lahf
mov
mov
mov
sbb
or
imul
test
cmp
mov
mov
pop
shl
rcr
mov
lods
inc
adc
xchg
pop
loop
xchg
mov
dec
inc
cmp
jecxz
mov
xor
jmp
ds
into
outs
xlat
repz
add
into
in
and
and
or
sbb
out
in
out
mov
fcom
dec
inc
stos
mov
ds
push
(bad)
mov
je
lods
(bad)
push
nop
and
or
cmp
mov
int
jl
stos
mov
jno
cmps
fmul
int
sub
fidiv
mov
dec
and
(bad)
xor
sti
repz
mov
pop
xchg
cwde
fcmovnb
call
jl
pop
call
fisttp
lahf
jge
mov
cmps
popa
pop
repnz
lods
push
out
arpl
xor
(bad)
mov
add
call
test
inc
pusha
cmp
mov
jecxz
xchg
ret
or
iret
jne
test
cmc
sbb
mov
mov
(bad)
enter
cmp
jmp
pop
push
mov
ins
shr
imul
cmc
ret
cmps
(bad)
sub
mov
cmp
sub
sub
ss
(bad)
pop
or
xlat
jmp
es
pop
cmp
sub
dec
mov
(bad)
loope
xchg
sti
lahf
adc
ror
mov
pop
pop
jns
add
mov
test
and
int3
fsub
pop
jp
push
pop
sbb
push
jecxz
ret
adc
loope
pop
or
push
rcr
adc
in
push
stc
aaa
aad
sub
xchg
sbb
movs
mov
add
push
jl
icebp
or
hlt
ret
clc
jns
inc
jnp
(bad)
ds
sub
dec
outs
nop
xchg
push
sub
and
ret
inc
or
jae
xchg
lahf
and
pop
lahf
adc
clc
mul
pop
jno
test
outs
leave
test
(bad)
add
jns
xor
outs
(bad)
mov
add
or
push
mov
and
mov
repnz
pop
xor
ins
repz
fcom
or
je
aad
into
repz
dec
je
xor
fdivr
shl
or
(bad)
and
dec
imul
jecxz
mov
dec
or
icebp
dec
cmp
jmp
rol
jmp
shr
pop
jns
fstp
cli
pushf
mov
jb
cmp
jno
inc
enter
fcomp
pop
or
jo
mov
or
pop
xor
xchg
mov
loope
push
repz
mov
sbb
mov
ds
jo
repz
push
mov
cdq
xchg
inc
mov
add
jne
sbb
sbb
inc
add
xchg
jb
and
ja
push
jmp
repz
adc
arpl
mov
jnp
jl
xchg
ret
xchg
js
mov
and
sub
out
mov
leave
js
pop
dec
retf
add
sbb
xor
test
fist
jns
inc
mov
retf
in
jmp
jns
(bad)
aam
retf
jge
jae
(bad)
push
inc
adc
inc
ss
popa
(bad)
push
aam
push
cmp
pop
mov
cli
pop
jnp
add
in
xor
sbb
add
pop
loope
cmc
retf
xchg
arpl
inc
cmp
daa
scas
push
imul
and
xor
lds
or
lds
dec
std
mov
lea
push
dec
fld1
add
sub
int
adc
cmp
mov
fisub
cwde
cmps
xor
fwait
xor
retf
(bad)
add
jmp
adc
push
mov
int
cmps
daa
mov
out
cmp
cmc
jge
(bad)
inc
cld
in
pop
lods
sub
fisttp
sbb
inc
mov
adc
push
test
push
cmp
xor
test
or
push
enter
add
push
mov
div
dec
cmp
(bad)
in
repz
fsub
test
cmp
jmp
cld
inc
inc
push
sbb
xor
fisttp
xor
(bad)
sub
ja
pop
dec
enter
cs
dec
pop
ja
add
dec
dec
aad
cdq
call
into
(bad)
sbb
je
add
out
xor
sub
shr
jns
adc
imul
loope
inc
xchg
cwde
sti
mov
push
pop
push
or
mov
add
push
adc
push
fsub
sbb
xor
fcom
popa
or
push
scas
push
in
ja
dec
adc
cmp
addr16
out
cmp
rcr
xor
(bad)
stc
xchg
lods
es
dec
mov
shr
push
mov
out
pop
jle
push
not
arpl
dec
ret
jmp
rcr
xor
sbb
scas
add
ins
stos
sbb
cmp
dec
icebp
xor
outs
mov
sbb
loopne
push
test
xchg
and
fst
out
movs
sub
ret
and
repz
call
stos
sti
and
(bad)
inc
ins
xchg
faddp
or
dec
push
out
call
out
jg
pop
add
jno
out
jg
mov
aaa
cli
imul
cmp
dec
dec
and
pop
(bad)
and
outs
xchg
adc
inc
retf
mov
jecxz
add
mov
outs
jbe
xchg
div
mov
not
and
inc
sbb
and
dec
data16
jne
dec
loop
(bad)
pushf
sbb
jae
cmp
jne
retf
(bad)
xor
sub
imul
jl
xchg
xchg
dec
scas
mov
xor
js
jmp
stc
dec
not
enter
adc
popa
(bad)
(bad)
xchg
push
pop
data16
jle
dec
jbe
stos
dec
and
jns
mov
fistp
or
pop
data16
retf
cmp
push
mov
mov
sbb
in
cdq
xchg
adc
movs
sbb
mov
cmc
lahf
mov
bnd
repz
mov
addr16
pop
retf
adc
cwde
dec
push
pushf
fld1
inc
je
sub
mov
mov
sti
retf
pop
sbb
or
or
or
sub
les
shl
mov
out
mov
cmp
sar
loopne
les
test
movs
cwde
or
sub
int
pop
imul
push
ret
sbb
clc
lods
mov
lds
pushf
dec
push
jnp
repnz
lods
add
jmp
retf
movs
adc
push
cmc
(bad)
lock
adc
cmp
adc
jnp
inc
xchg
mov
or
bsf
push
in
daa
mov
xchg
call
outs
adc
hlt
in
or
mov
(bad)
sbb
std
mov
in
add
std
jg
sbb
ret
push
aam
sub
inc
inc
mov
inc
adc
lods
ss
sbb
ja
fmul
xlat
dec
xor
cld
mov
shl
jmp
addr16
rcr
ret
and
rol
pop
pop
ja
xor
and
into
repz
jg
rcr
jo
fbstp
sub
sbb
add
xor
fadd
mov
mov
dec
push
xor
pop
idiv
mov
into
mov
and
movs
call
ds
(bad)
mov
int
cmps
aaa
scas
pop
adc
cmp
mov
sub
push
hlt
retfw
cld
cli
lahf
in
mov
pop
mov
into
inc
adc
out
or
adc
repnz
lods
or
mov
or
fstp
rcr
add
repnz
xchg
and
stos
sub
mov
sbb
inc
rcl
inc
das
fimul
mov
mov
xchg
push
sub
jmp
and
stc
arpl
retf
pop
pop
jns
sti
ret
mov
inc
mov
jge
adc
mov
call
jl
fwait
inc
xor
jno
push
dec
inc
xchg
xor
imul
lock
mov
fwait
sbb
mov
and
stos
jg
ds
jae
mov
mov
ins
mov
ja
cmps
mov
lods
in
dec
cli
push
push
cdq
cmp
push
mov
xchg
xor
sub
popa
dec
and
int3
ja
mov
or
cmp
in
pop
pusha
sti
push
in
mov
cs
push
int
mov
add
push
inc
test
jg
ret
ret
add
test
jmp
cwde
sub
pop
cmp
add
sbb
(bad)
imul
std
sahf
sbb
outs
rcl
and
imul
test
inc
sub
shr
add
mov
bound
mov
leave
fld
out
stos
int3
loop
cwde
and
jge
popa
xchg
aas
mov
scas
fimul
retf
adc
data16
rol
inc
shl
sbb
pushf
mov
imul
outs
jb
sar
out
pop
aad
jecxz
ret
dec
sbb
mov
xchg
mov
stc
idiv
adc
sbb
and
jo
inc
sbb
stos
sar
sub
movs
push
push
adc
fidiv
xchg
mov
pop
pop
adc
rcl
add
cld
(bad)
dec
inc
pop
call
and
popf
cmps
mov
shl
jg
test
nop
pop
mov
push
in
mov
xchg
adc
xor
push
push
sbb
ins
xor
pop
pop
shl
repz
daa
das
jge
fild
ds
sbb
movs
scas
out
add
xchg
fs
ret
mov
sub
aad
inc
pop
mov
adc
in
outs
loop
jo
aam
xchg
sbb
mov
outs
imul
repnz
movs
shl
es
movs
mov
scas
xchg
inc
adc
adc
dec
test
push
sahf
push
sti
dec
rcr
fstp
lea
out
in
push
mov
xchg
leave
or
(bad)
and
and
idiv
xchg
in
aaa
ins
test
outs
jg
sti
or
inc
xor
jle
lahf
out
and
mov
push
sub
not
adc
pop
retf
fistp
jae
in
cmc
mov
jg
mov
loope
adc
pop
mov
stc
ficomp
sahf
ss
push
pop
inc
mov
shl
add
aam
xchg
mov
in
loop
cmp
das
lahf
stc
add
loope
imul
pop
fmul
mov
dec
(bad)
mov
dec
pop
in
mov
xor
out
cmp
lods
mov
(bad)
fs
outs
push
or
jg
sbb
xchg
dec
pop
ins
test
add
iret
sbb
and
mov
jnp
jecxz
lods
xchg
push
aaa
pop
loope
mov
add
mov
inc
movs
mov
repz
sbb
xchg
inc
push
or
js
idiv
sub
adc
out
cmp
push
sub
jge
movs
xchg
js
xchg
xor
pop
shl
sub
int3
nop
in
xchg
inc
jbe
mul
xchg
jae
jp
sbb
jbe
movs
push
fld
push
push
lock
xchg
inc
enter
jno
cwde
inc
mov
jb
jmp
cmp
jae
and
div
(bad)
push
cmps
or
mov
jg
adc
loop
(bad)
push
enter
mov
les
xchg
(bad)
push
lock
mov
inc
adc
or
lods
(bad)
je
sub
mov
jb
push
aas
les
loopne
movs
cmps
dec
push
cmp
xor
sbb
push
pop
jl
and
addr16
cmp
pusha
xor
mov
sub
xor
outs
outs
push
cs
(bad)
adc
mov
cmp
push
scas
ja
jbe
loopne
leave
lds
test
pushf
sub
es
frstor
mov
std
dec
mov
lahf
mov
in
cdq
sub
mov
test
adc
pop
fsub
sti
sbb
sub
and
push
stc
adc
mov
pop
and
cmp
xor
aaa
xchg
aam
sub
mov
ror
mov
xchg
(bad)
sbb
inc
and
jmp
jg
shl
cmp
enter
sahf
aaa
scas
xchg
xchg
jne
push
shl
cmp
jmp
xor
xlat
stos
lahf
inc
adc
jmp
xchg
inc
call
and
scas
jnp
imul
push
push
ficomp
js
adc
and
mov
test
push
ins
in
(bad)
movs
push
jle
loope
mov
gs
cdq
mov
lds
lock
mov
jg
fwait
dec
out
sub
sbb
lods
jo
xchg
push
retf
outs
pop
ins
shr
mov
out
cmp
aaa
cmp
mov
das
aas
enter
cmc
fmul
push
pop
lea
dec
outs
(bad)
jecxz
push
rcl
inc
jo
gs
xchg
mov
xchg
push
test
dec
cmp
xchg
(bad)
xor
(bad)
in
stc
jne
dec
push
and
sub
mov
push
sbb
rcl
mov
jge
bound
jl
jle
mov
repnz
aaa
out
inc
gs
pop
mov
es
sbb
mov
call
push
pop
add
lahf
jnp
mov
out
jns
retf
ror
loopne
(bad)
push
jns
or
pop
scas
sbb
call
sahf
lods
(bad)
push
pop
jp
push
aad
in
mov
add
(bad)
scas
aaa
sahf
jmp
cmp
fsubr
jmp
push
nop
cld
inc
ror
out
pop
mov
dec
and
sbb
sbb
lock
xchg
mov
ret
adc
sbb
aam
ror
int3
int
fdiv
adc
dec
sbb
(bad)
aad
jp
xor
push
jl
jecxz
dec
pushf
and
mov
ja
pop
push
movs
into
jns
(bad)
movs
movd
push
push
test
sbb
jns
mov
in
xor
div
jnp
out
sahf
xchg
pushf
ror
(bad)
cmp
movs
int3
sahf
xchg
aad
add
push
call
or
add
sub
leave
jge
sbb
inc
call
pop
nop
out
ins
fcomip
xchg
adc
sti
je
and
jns
fadd
adc
std
dec
sbb
inc
into
jmp
sub
sbb
movs
pushf
lods
jbe
add
jbe
outs
add
xchg
or
popa
in
sub
pop
test
pop
ins
mov
pop
test
inc
inc
xchg
or
ret
loop
and
shl
or
scas
mov
lds
(bad)
sbb
inc
add
pop
push
int3
imul
push
jae
cwd
int3
dec
dec
lahf
xchg
pop
xchg
(bad)
je
ss
push
mov
or
pushf
enter
repnz
loopne
bswap
les
add
mov
movs
movs
lods
test
mov
inc
pop
nop
push
pop
cwde
stos
pop
not
inc
xor
loop
loop
xor
sbb
xor
call
out
aaa
lahf
inc
push
call
push
fstp
xor
adc
or
mov
dec
xchg
stos
mov
and
iret
fdivp
les
outs
aad
(bad)
mov
(bad)
shl
or
mov
test
les
sar
mov
pop
inc
pop
sbb
(bad)
in
in
aas
add
and
data16
shl
or
sbb
fucomi
sbb
xor
xchg
cmp
xor
xchg
leave
mov
in
push
in
pop
mov
shl
mov
xor
call
fistp
xchg
cmp
or
mov
push
mov
jns
mov
mov
(bad)
or
or
mov
rcl
push
cmc
je
aad
dec
int
shl
mov
shl
xchg
cmps
call
rep
pusha
jp
push
movs
sub
jo
lahf
sub
std
cmp
or
out
adc
jae
aas
dec
mov
push
iret
inc
adc
dec
daa
les
ret
mul
sbb
hlt
mov
test
fsubr
retf
cmp
out
cdq
das
add
cmps
ins
jns
pop
ret
rol
jmp
fs
rcr
dec
dec
pop
shl
jle
cmps
mov
lea
cmp
test
in
jp
cmp
out
retf
outs
pop
scas
(bad)
int
loope
mov
(bad)
ins
mov
(bad)
cld
mov
inc
retf
push
jnp
mov
jmp
cmp
sub
pusha
mov
pop
and
std
sub
and
test
fisub
mov
shl
cmp
xchg
fcomp
outs
pop
xor
idiv
fs
ret
add
fnsave
jne
mov
jo
push
jo
aam
push
xchg
mov
cwde
jmp
mov
out
fmul
pop
shl
call
xor
and
add
or
rdmsr
jbe
mov
es
sahf
mov
rcl
xor
add
fild
pop
dec
or
xchg
in
test
(bad)
fcomp
test
and
mov
adc
jl
(bad)
pop
addr16
imul
dec
dec
fnsave
sti
leave
dec
add
leave
xor
mov
jl
and
loopne
add
loop
sbb
ret
scas
test
and
jl
push
fst
repz
push
leave
outs
xchg
adc
dec
imul
cmp
xor
(bad)
jle
jbe
fadd
mov
lea
and
pop
jecxz
mov
adc
adc
pop
push
out
popa
sbb
aad
cmp
xor
stos
popf
mov
pop
fsub
add
aam
mov
inc
in
inc
or
cmp
aas
pop
push
rcr
dec
cmp
add
or
adc
imul
mov
fnstcw
mov
inc
mov
xlat
mov
or
(bad)
in
and
int3
push
add
cld
push
arpl
push
sbb
mov
(bad)
xchg
fmul
shl
nop
pop
cmp
jmp
inc
mov
jno
adc
jne
mov
mov
push
jbe
cmp
fcomp
jae
inc
mov
xchg
push
add
call
add
inc
mov
leave
lock
retf
xchg
sbb
hlt
mov
popa
jle
fsubr
push
add
push
gs
xchg
out
(bad)
mov
mov
popa
dec
jmp
sbb
xor
pusha
repnz
ins
mov
jmp
(bad)
hlt
cmps
hlt
cmp
retf
test
inc
xchg
aad
(bad)
dec
push
bound
sub
pop
cmc
pop
sbb
dec
daa
pusha
push
jbe
popa
xchg
pusha
nop
dec
cmps
(bad)
lods
in
repz
xchg
or
nop
leave
(bad)
int
or
and
outs
gs
add
test
stc
je
aaa
icebp
sbb
jg
test
shl
jp
add
loop
sar
jge
xor
inc
jp
inc
sar
push
xor
mov
retf
pop
fnstcw
add
addr16
adc
or
sbb
cld
and
stos
jmp
jo
xor
repz
add
(bad)
cld
hlt
imul
xchg
test
pop
mov
(bad)
push
add
loopne
mov
push
dec
(bad)
jmp
movs
and
js
(bad)
(bad)
push
test
faddp
stos
ins
push
add
push
xor
imul
jl
fist
in
das
out
adc
pusha
jle
xchg
xor
outs
out
mov
push
cli
jne
xor
pop
(bad)
mov
add
push
sub
pop
fwait
or
pushf
adc
dec
jb
stos
pop
xchg
ror
in
jae
inc
pop
inc
pop
shl
jl
jmp
std
adc
sbb
ret
data16
mov
movs
cmp
jns
(bad)
iret
and
fst
jne
ror
cmp
pop
xor
jg
sbb
lea
imul
pushf
lea
or
std
(bad)
test
out
out
push
ret
mov
dec
outs
lds
mov
daa
ins
imul
push
mov
je
out
shl
ins
dec
jns
sbb
pop
push
test
aaa
retf
mov
mov
sub
cmp
ret
rcl
lahf
adc
inc
or
cmp
push
lock
pop
and
xor
jecxz
mov
adc
outs
or
mov
cmps
lock
in
jo
xor
jle
je
dec
fiadd
call
pop
mov
dec
jecxz
call
pusha
mov
pop
repnz
jns
rcl
test
and
ficomp
mov
cdq
in
dec
and
xor
out
sbb
jmp
mov
push
(bad)
or
mov
dec
cmp
retf
mov
movs
jmp
test
inc
jecxz
push
xchg
lea
xor
add
loopne
test
or
xchg
push
pop
xor
fdiv
mov
fisub
jecxz
enter
push
pop
sub
or
xor
inc
sub
cdq
int3
mov
jecxz
(bad)
mov
mov
out
(bad)
popa
adc
adc
mov
lahf
fs
test
and
ror
jnp
push
fist
jge
mov
dec
fst
imul
pop
pop
xchg
scas
sbb
pmaxub
cmps
push
out
inc
mov
popa
sub
sub
push
les
mov
test
hlt
aaa
imul
cmp
mov
shl
cmp
or
mov
js
shl
sub
xor
dec
fmul
mov
inc
jbe
ds
xchg
xchg
pop
jno
iret
and
mov
mov
xlat
pop
lods
adc
cmps
and
idiv
in
imul
jae
in
xchg
mov
loopne
aas
or
shl
aad
test
mov
imul
outs
sub
addr16
inc
add
push
mov
and
sub
scas
xchg
pop
adc
shl
dec
pop
cmp
rcl
add
add
ds
push
lock
mov
mov
sti
jg
add
mov
sbb
sbb
into
mov
enter
cmp
outs
push
cmps
jecxz
std
int
std
cmp
xor
and
mov
jb
scas
out
add
rcr
jg
sbb
jge
cwde
ins
fcomp
mov
cmp
mov
and
gs
(bad)
call
cmps
arpl
retf
das
push
int3
sar
dec
nop
dec
jmp
outs
(bad)
dec
lock
cmps
jb
push
sti
or
mov
mul
pop
pop
in
ds
jno
jl
pop
and
gs
xchg
aad
fstp
rol
xor
adc
xor
xchg
stos
pop
push
sub
loopne
mov
icebp
inc
or
test
mov
fcomp
fldln2
sub
pop
mov
leave
and
pop
mov
adc
loope
xor
jp
mov
xchg
xchg
fidivr
div
adc
jno
xchg
cwde
cmc
fbld
cdq
fmul
fucomi
add
fsub
loopne
pop
fld
ret
sub
or
fimul
test
fsubr
or
stos
loop
and
popa
jnp
in
(bad)
mov
cmp
mov
pop
sbb
out
dec
add
xor
mov
call
loope
xchg
movs
in
data16
sub
mov
xor
cmp
inc
cmp
jnp
mov
pop
lods
xor
addr16
mov
mov
(bad)
pop
jp
mov
ret
xchg
inc
movsx
dec
sub
stc
fldenv
dec
jl
jae
dec
dec
or
sub
lods
data16
out
es
lods
push
cli
js
dec
scas
imul
inc
cli
cwde
cs
and
mov
or
mov
cmps
test
test
stos
and
aam
pop
xchg
clc
xor
push
cli
mov
or
ja
xor
cmp
sar
adc
das
and
mov
scas
rol
or
fdivr
rcr
pop
outs
cmp
hlt
hlt
arpl
loopne
fild
mov
xchg
xor
jl
push
addr16
loopne
cmp
pop
or
dec
cmp
jmp
or
mov
bound
jecxz
rol
push
sbb
or
sbb
movs
mov
fistp
dec
loope
jnp
mov
fidiv
xor
icebp
push
pop
and
sbb
sub
push
cs
cdq
cwde
bound
aam
pop
repz
push
out
sbb
je
imul
fdiv
xchg
arpl
sub
adc
xchg
dec
test
add
outs
mov
loope
mov
jno
ss
stos
out
(bad)
clc
imul
mov
fcmovnu
and
outs
in
push
inc
js
(bad)
sbb
jnp
shl
mov
popw
pop
and
mov
ins
sbb
jge
out
dec
iret
jecxz
out
popf
inc
adc
mov
(bad)
cmp
lock
out
and
pop
mov
xchg
sti
outs
mov
or
lods
and
or
aam
test
stc
fld
retf
cdq
mov
sti
aad
test
cs
push
pop
ret
jecxz
push
fadd
hlt
xchg
test
out
dec
test
inc
leave
adc
pushf
rol
jg
mov
dec
(bad)
cli
add
cs
mov
test
add
push
hlt
(bad)
jns
add
call
push
sar
adc
aam
fst
jmp
or
xor
xchg
mov
xor
aas
jmp
and
sbb
pop
adc
add
hlt
pop
jecxz
dec
cli
addr16
daa
gs
aam
aam
pop
dec
clc
in
pushf
sbb
xlat
sub
cmp
ss
sti
rcl
les
dec
push
out
fcom
call
fist
mov
mov
div
test
and
push
push
mov
mov
pop
pushf
sbb
cmps
out
mov
int
pop
pop
fbstp
je
add
ins
in
mov
rol
(bad)
and
inc
pop
(bad)
mov
jbe
adc
outs
lock
sbb
ja
dec
jmp
sub
mov
lods
mov
icebp
stos
and
fdiv
std
pop
xchg
pop
outs
les
mov
push
int
xor
scas
outs
shr
test
fldcw
lods
mov
mov
iret
pop
shl
shr
cmp
scas
loop
xchg
mov
mov
push
pop
call
mov
xchg
js
out
push
lods
out
in
repnz
xchg
mov
in
jp
push
mov
test
push
daa
(bad)
or
push
cdq
inc
adc
mov
aad
pop
pop
fmul
sub
aaa
mov
mov
fcom
scas
dec
lea
lods
call
sar
xchg
mov
jbe
pop
xchg
sbb
xchg
rol
(bad)
xor
jmp
mov
mov
dec
adc
sub
jb
push
das
(bad)
mov
push
(bad)
in
pusha
adc
add
push
jnp
popa
sub
push
test
das
and
pop
cwde
(bad)
xor
jecxz
fxch
adc
jmp
xchg
adc
hlt
inc
sbb
ja
sub
dec
xlat
push
inc
out
je
das
xlat
push
jp
loop
ss
inc
dec
arpl
aam
lods
mov
fbstp
(bad)
(bad)
jle
dec
movups
div
pop
lods
lods
mov
mov
popa
pop
xor
xchg
sub
stc
mov
mov
es
lea
fmul
inc
cmp
je
mov
jecxz
loop
aad
jg
xor
dec
push
cmc
fmul
call
pop
or
mov
aad
fcomp
test
mov
jnp
outs
jmp
shr
add
stos
sbb
push
inc
jne
(bad)
fcom
ret
adc
into
sub
and
mov
or
mov
mov
lahf
stc
popa
or
jb
jnp
cdq
inc
jecxz
scas
idiv
repnz
in
sti
cwde
mov
jecxz
mov
ins
inc
imul
stc
inc
sub
gs
adc
int3
bound
loope
aad
jge
jp
dec
bound
dec
push
(bad)
mov
daa
adc
mov
mov
jae
xchg
test
test
dec
leave
outs
pop
scas
lea
sub
ss
pop
inc
int3
adc
and
add
dec
jbe
mov
dec
int
xor
mov
ds
xor
stos
pop
sahf
(bad)
mov
mov
xchg
push
loop
sbb
mov
imul
popa
jns
scas
mov
mov
loopne
dec
or
cld
fstp
fxtract
sub
sti
mov
mov
cmp
jbe
sbb
jno
repz
lods
xor
hlt
xchg
mov
sbb
sub
cmps
pop
pop
ins
shr
scas
xchg
pop
imul
lock
bound
mov
mov
mov
mul
push
sbb
push
sbb
inc
push
pop
and
iret
gs
pop
out
aad
xlat
mov
adc
jge
cmc
pop
add
ror
pop
add
add
mov
call
push
jmp
mov
test
repnz
stos
clc
jle
mov
cmp
imul
cmp
sar
imul
das
fidivr
cmp
lds
xor
in
inc
in
xchg
clc
in
daa
jne
cmc
shr
add
and
fadd
in
xor
ror
js
push
imul
pop
mov
cmp
dec
ror
pop
js
sub
or
(bad)
mov
push
mov
dec
mov
in
cmp
sbb
mov
push
mov
inc
pop
(bad)
cmps
stos
jp
movs
and
repz
aaa
test
dec
mov
in
fisub
jns
rcl
mov
leave
push
ss
inc
iret
fwait
popa
in
and
xchg
xchg
movs
js
cmp
ficom
add
pop
test
xlat
push
inc
hlt
jecxz
(bad)
call
retf
pop
push
inc
mov
ds
push
cmp
repz
xlat
or
ror
mov
pshufw
sbb
mov
sub
movs
fwait
cmp
imul
cmp
ror
rep
dec
pop
not
aaa
ret
sbb
imul
retf
xor
lea
fcmovb
popa
popf
push
mov
cmp
aas
mov
mov
test
or
mov
sub
xor
push
pop
outs
jnp
fsubr
in
adc
test
loopne
sti
push
xor
leave
movs
mov
cmp
mov
xchg
stos
inc
aaa
movs
das
add
popf
push
sub
adc
aaa
jl
js
aad
in
cmp
add
pop
idiv
js
(bad)
or
sbb
movs
outs
jnp
in
mov
leave
outs
mov
push
add
in
out
hlt
inc
int
lock
fisttp
clc
cmps
add
push
pop
cmc
jp
xchg
jno
jecxz
retf
aam
dec
jle
fs
cmp
nop
pop
loope
popf
push
and
jle
and
adc
ret
jb
jae
mov
cld
in
and
push
ret
jle
inc
in
mov
je
(bad)
ror
inc
sub
adc
pop
sbb
fnstcw
(bad)
cmc
jo
rcl
mov
into
jmp
mov
int
jg
or
push
and
ins
dec
mov
xchg
sar
leave
(bad)
call
test
imul
sub
cmp
cmc
pushf
dec
movs
mov
es
add
and
enter
or
adc
cdq
popa
mov
cs
repz
jb
mov
test
out
jmp
cwde
repz
in
rcl
call
mov
mov
loope
shl
inc
pop
aas
adc
pop
fnsetpm(287
push
xchg
(bad)
mov
fs
ret
mov
sbb
(bad)
jno
scas
sub
cld
xor
fbstp
int3
mov
xor
idiv
pop
test
(bad)
add
or
xchg
inc
or
cld
iret
dec
lahf
ins
push
loopne
test
pop
das
mov
inc
push
imul
and
out
mov
outs
popa
push
out
pop
xchg
daa
movs
xchg
movs
lods
jg
int3
xor
clc
add
pop
push
mov
push
xor
jae
aaa
pop
add
ret
xchg
or
mov
mov
mov
cmc
aas
pop
sbb
jp
push
bndstx
leave
lods
adc
das
(bad)
mov
mov
mov
loopne
pop
xchg
cmps
xor
mov
xchg
mov
add
xor
or
jns
pop
push
fs
adc
test
test
je
add
inc
xor
dec
cmp
inc
fs
scas
or
xchg
or
aad
mov
sbb
div
mov
sbb
ror
int3
mov
test
inc
push
pop
iret
ins
stc
iret
aad
sbb
lea
std
lea
adc
std
sub
shr
imul
or
mov
push
pop
lods
int3
in
sub
lods
adc
jo
adc
sub
cmp
jg
push
les
mov
inc
icebp
push
dec
inc
add
enter
icebp
nop
(bad)
loope
in
out
test
dec
jb
(bad)
push
dec
mov
clts
cs
push
addr16
mov
rcl
pop
addr16
fwait
stos
fistp
sub
fwait
dec
mov
scas
aas
adc
mov
xchg
inc
in
shr
das
push
inc
lock
test
das
retf
or
mov
and
lahf
inc
aam
out
pop
mov
div
sbb
jno
call
adc
in
repz
xor
loop
out
enter
or
test
push
pop
add
(bad)
aad
xor
cmc
cmps
pop
mov
xchg
pop
jns
cli
data16
loop
inc
xchg
lock
loop
add
adc
mul
fcomp
(bad)
add
dec
(bad)
mov
dec
mov
inc
arpl
sbb
(bad)
cli
pop
or
or
inc
stc
cwde
rcr
dec
or
cwde
dec
test
pushf
mov
call
mov
push
xchg
test
sbb
pop
or
jne
retf
inc
sbb
out
mov
pop
aaa
fwait
imul
enter
aaa
inc
adc
mov
cmc
push
test
mov
or
aam
cmp
xor
rol
test
sbb
aas
jns
cmps
xor
mov
xor
mov
xchg
mov
into
mov
mov
push
or
dec
je
data16
lods
(bad)
jmp
not
push
sbb
out
fstp
xor
out
ror
outs
jge
pop
xchg
cmp
jp
test
call
in
sahf
jb
mov
push
sub
inc
mov
aad
xor
fwait
mov
cli
imul
mov
or
jp
jo
add
push
pop
push
cmc
popa
xor
push
in
xchg
mov
xlat
(bad)
mov
ss
daa
jbe
cmps
mov
inc
xlat
sub
add
mov
mov
fnstcw
enter
ret
out
fwait
stc
push
das
pop
adc
dec
(bad)
jge
jb
outs
xchg
pop
pop
jae
aam
jns
and
pushf
mov
shr
adc
fnstsw
inc
and
fwait
outs
repnz
cwde
test
out
sbb
aam
add
daa
into
xlat
cld
jl
ss
inc
mov
mov
push
jbe
xchg
dec
jge
add
push
ins
add
mov
bound
ins
test
icebp
inc
add
into
cmp
popa
and
sub
xlat
cmps
mov
scas
lahf
pop
(bad)
or
xor
push
ret
daa
jg
push
clc
adc
jo
jl
jmp
ror
mov
or
adc
rol
xchg
aad
cmp
mov
mov
mov
sub
cmps
push
(bad)
movs
(bad)
movs
fist
mov
bound
(bad)
das
lock
stc
pop
mov
aad
lahf
jne
ins
cmp
fs
xor
and
stos
fs
lds
out
cmp
xor
push
addr16
dec
lea
popa
and
mov
test
popa
and
mov
call
rol
ror
aaa
mov
sbb
out
mov
mov
xor
lock
jne
jne
sbb
jae
ins
cld
(bad)
adc
rcl
push
mov
xchg
inc
cmp
adc
mov
frstpm(287
dec
rcl
movs
adc
in
das
mov
mov
les
cmp
hlt
leave
pop
xor
inc
mov
inc
addr16
push
mov
lock
adc
jmp
lock
pop
mov
pop
sbb
adc
inc
shl
test
movs
inc
push
outs
mov
mov
cmps
daa
pop
jecxz
mov
sbb
aam
test
lods
push
adc
test
mov
inc
adc
dec
xchg
push
sub
pop
inc
icebp
inc
je
jmp
cmps
lods
sub
punpcklwd
cmp
rcr
hlt
cmp
shl
rol
and
sub
mov
dec
xchg
ins
cmc
adc
mov
mov
sbb
mov
mov
lock
mov
mov
add
popf
in
and
das
aad
xor
int3
cld
jg
fimul
js
arpl
sbb
mov
pushf
dec
add
into
(bad)
stos
cmp
fdivr
stos
adc
push
jmp
push
call
mov
jl
dec
pop
cmp
in
and
and
dec
popf
rcr
cmps
inc
retf
push
pop
scas
xchg
jle
(bad)
and
jmp
ds
loop
daa
push
push
mov
mov
pop
fist
mov
aam
sahf
adc
pop
cmp
dec
push
sub
test
mov
(bad)
hlt
add
mov
and
sub
std
xor
cli
int
fwait
mov
or
js
and
mov
mov
out
and
push
fild
es
pop
cld
xchg
(bad)
repnz
lea
out
movs
xor
sahf
mov
pop
into
cmps
jmp
adc
fldcw
cmp
jp
xchg
imul
loope
lahf
sub
cmp
and
hlt
cs
inc
adc
push
push
pop
(bad)
iret
aas
mov
out
adc
ret
mov
xchg
inc
sahf
retf
mov
sar
add
test
mov
pop
dec
sub
sub
into
imul
xchg
mov
ss
xor
jmp
push
cmps
dec
dec
outs
and
mov
or
sub
ins
mov
and
push
frstor
and
and
pop
div
pop
sbb
add
jmp
or
aam
pop
and
push
or
inc
stos
movs
test
inc
dec
and
loope
xchg
and
sbb
or
in
ret
sub
(bad)
mov
mov
pop
mov
fnstenv
adc
nop
adc
lods
fadd
fld
div
fld
jp
lods
pusha
inc
rol
lahf
cmp
int
(bad)
mov
mov
adc
cmps
aad
repz
fst
fwait
jge
xor
loope
pop
adc
movs
mov
mov
aam
fwait
and
jle
mov
mov
pushf
xor
push
lods
lods
shl
movs
in
sub
push
xchg
enter
inc
fnstenv
push
sbb
and
dec
shl
stos
push
and
xchg
mov
xchg
and
(bad)
xchg
jp
ret
in
retf
pop
test
cmp
jmp
inc
mov
dec
and
cli
adc
add
nop
sahf
(bad)
mov
and
mov
ins
and
fadd
std
popa
jnp
jb
jnp
cmp
mov
pop
pop
xchg
inc
in
call
movs
std
cs
(bad)
dec
neg
dec
call
dec
pop
outs
jno
hlt
pop
add
js
mov
pop
push
rcr
jge
sbb
pop
mov
xchg
inc
inc
aam
hlt
sahf
mov
or
jo
cwde
cmps
push
push
scas
pop
retf
aaa
sbb
pop
imul
or
mov
jae
mov
popf
cmp
dec
sbb
jnp
and
pop
sbb
sti
pop
adc
mov
add
pusha
ins
pop
sahf
push
mov
sub
sar
mov
daa
cli
inc
ds
add
pop
and
mov
sti
les
fistp
sub
loop
jecxz
sub
sbb
jmp
add
fidiv
je
scas
pop
icebp
cs
add
ss
cmc
jle
add
jne
not
push
dec
cli
in
ja
xchg
scas
and
bound
fistp
fidivr
push
mov
jmp
sti
mov
lea
bound
xchg
lods
sbb
movs
paddb
gs
push
sbb
es
adc
push
inc
stos
jg
int
mov
imul
add
shr
xchg
sub
ret
jecxz
out
sub
push
mov
adc
mov
lahf
inc
or
mov
das
xor
adc
sbb
jne
adc
in
rcl
(bad)
shl
pusha
rol
add
push
push
outs
(bad)
mov
and
pop
pushf
dec
cli
push
sub
lahf
ds
cdq
push
hlt
xchg
adc
pop
cmp
pop
mov
jmp
push
dec
pop
addr16
cdq
pop
push
mov
fwait
sbb
jae
mov
cmp
mov
imul
xchg
(bad)
dec
loop
sbb
test
or
inc
sbb
or
xchg
xchg
(bad)
fdivr
push
loopne
xor
lock
ins
hlt
mov
or
cld
mov
dec
pop
pop
iret
mov
test
or
dec
nop
into
sbb
adc
xor
dec
cdq
shl
xor
push
pop
scas
fcom
ja
or
out
sbb
cmp
jmp
and
ja
lds
xor
or
icebp
inc
jl
daa
enter
mov
rcr
arpl
leave
mov
iret
jns
jecxz
std
inc
es
adc
cmp
gs
cmc
addr16
push
ss
jmp
rcl
jns
push
(bad)
and
into
js
mov
inc
clc
dec
xor
xlat
add
mov
outs
xor
sub
jmp
je
adc
mov
loope
pop
inc
(bad)
adc
cmp
sub
xchg
fs
(bad)
aas
jno
out
mov
add
mov
outs
jecxz
or
mov
imul
test
dec
jmp
and
cmc
pop
and
cmp
pop
push
mov
mov
pusha
jp
push
sub
pop
outs
fild
data16
(bad)
jno
popa
loope
je
aas
inc
out
sar
mov
sbb
out
pushf
cwde
(bad)
xor
dec
and
cld
cli
test
mov
das
sti
add
rcr
push
dec
sub
jo
les
ss
cmp
fcomp
in
cwde
stc
adc
mov
dec
mov
dec
cdq
sar
mov
push
mov
ret
sbb
dec
sub
cli
adc
dec
xchg
xchg
push
push
jbe
(bad)
cmp
push
add
arpl
xchg
xchg
sahf
fdiv
mov
cli
push
add
mov
sbb
loope
or
and
test
mov
pop
pop
lods
out
lods
add
test
mov
pop
mov
sbb
scas
cmp
push
sub
out
popf
mov
xchg
ja
cmps
ret
xchg
sub
or
hlt
adc
dec
cmp
cwde
dec
pop
jo
repnz
mov
sub
dec
(bad)
mov
add
pop
sar
jmp
rol
inc
cmp
icebp
cmps
mov
or
adc
jg
push
test
imul
xor
cs
mov
nop
aam
inc
jo
lods
pusha
or
add
mov
pop
addr16
lods
mov
xchg
jmp
enter
and
test
push
stc
sbb
cmp
outs
mov
ror
mov
out
fadd
ins
outs
clc
jle
in
call
imul
cmps
outs
dec
mov
mov
mov
jb
mov
cdq
inc
or
jae
shr
fwait
mov
xchg
adc
mov
mov
pop
cwde
bound
fimul
add
shl
mov
push
xchg
jmp
mov
mov
fwait
jb
call
loop
mov
call
push
out
fisttp
mov
dec
dec
inc
pop
test
pop
and
out
scas
jg
imul
xchg
mov
leave
int
and
mov
lock
adc
(bad)
mov
pop
or
movs
xchg
push
popf
int
aad
push
fsubr
dec
cs
dec
and
dec
aas
(bad)
cld
cmp
push
fcom
pop
mov
dec
jmp
xchg
jbe
stc
mov
push
push
ins
push
mov
xchg
in
or
fild
add
push
push
sti
mov
div
jns
mov
push
jl
out
imul
popf
mov
scas
xor
test
lahf
repnz
mov
jge
mov
sti
mov
nop
repnz
rcr
test
sar
jae
xor
imul
shr
fadd
and
sbb
mov
aas
jmp
loope
loop
push
or
dec
push
jge
jmp
push
outs
(bad)
std
mov
dec
push
cld
imul
icebp
aaa
or
xchg
(bad)
inc
arpl
ins
test
sub
cmova
xchg
jecxz
shl
out
jmp
add
mov
lds
mov
hlt
xchg
scas
jo
jb
test
or
lahf
ds
(bad)
adc
pop
mov
push
inc
repnz
and
mul
cs
inc
push
scas
jnp
push
add
jae
shl
mov
aam
push
and
mov
sbb
mov
cmp
add
xchg
jp
mov
stc
or
mov
add
stc
push
jecxz
int3
push
stos
add
or
mul
push
(bad)
mov
cmp
pusha
cmp
(bad)
mov
add
fidiv
ret
shl
hlt
iret
sub
or
pop
inc
sti
imul
fsubr
mov
imul
stos
sub
imul
cdq
sub
mov
lahf
sbb
(bad)
nop
push
loop
add
sbb
sbb
mov
cmp
mov
cmp
popf
pop
movs
mov
jge
in
es
and
les
movs
js
push
leave
or
inc
adc
call
mov
int3
ins
xchg
je
jl
test
adc
mov
ficomp
(bad)
mov
dec
fild
test
inc
push
outs
mov
add
repnz
lock
mov
jl
mov
ja
jae
cmp
movs
movs
mov
in
ds
mov
xor
(bad)
shr
hlt
lahf
into
jmp
sub
mov
fs
mov
int3
mov
mov
cwde
xor
add
push
mov
xchg
imul
pop
lds
out
xor
(bad)
lods
jecxz
in
pushf
adc
bound
scas
inc
pop
or
pusha
popf
jge
daa
vpsubusw
ficom
fdivr
or
das
dec
movs
retf
stc
sub
mov
mov
mov
bound
(bad)
test
movs
cld
and
rcl
jecxz
scas
fwait
test
shl
std
addr16
shr
inc
mov
ins
ss
cmps
inc
icebp
xor
movs
mov
xor
and
pusha
nop
mov
(bad)
xor
fistp
jmp
inc
icebp
popa
sub
sub
cmp
pop
mov
adc
mov
cmc
enter
dec
fsub
mov
daa
loope
(bad)
aam
fldenv
arpl
and
shr
js
(bad)
int
shr
pop
lods
xchg
lahf
adc
xchg
mov
inc
and
dec
cli
daa
outs
test
shl
retf
sub
sub
sbb
push
push
sub
xor
(bad)
jnp
repnz
adc
or
add
pushf
gs
cmp
pusha
fiadd
jno
xor
test
jl
out
dec
jno
repnz
jmp
mov
mov
cmp
jg
and
lahf
mov
lods
out
jge
sub
mov
repnz
(bad)
int3
push
aad
leave
nop
cmp
bound
out
(bad)
rol
aas
mov
push
daa
sub
test
psadbw
dec
fld
cld
outs
mov
ror
jnp
jns
add
rcr
push
jge
push
dec
and
iret
ins
inc
cld
dec
sbb
push
mov
imul
inc
test
cmp
js
out
push
rcr
cmp
jo
pushaw
bound
sbb
retf
or
outs
aam
mov
inc
xor
pusha
mov
(bad)
(bad)
mov
inc
mov
push
dec
and
div
fidiv
adc
outs
ret
inc
push
mov
into
cmp
push
neg
inc
mov
jbe
stc
in
jmp
jle
and
rol
mov
clc
gs
xchg
in
push
cmp
hlt
jg
fst
psubusb
fcom
pop
jg
mov
sub
push
mov
aaa
pop
jle
dec
jl
mov
jg
cmp
cmc
or
lahf
jp
cmps
rcl
and
(bad)
mov
cmp
xor
cdq
jnp
adc
mov
xlat
imul
jnp
(bad)
or
scas
movs
sub
inc
pop
repz
pop
stos
movs
mov
out
enter
dec
xchg
mov
sbb
lock
ret
shl
ja
sbb
gs
inc
test
shr
xchg
xchg
dec
and
mov
add
pusha
xchg
and
cdq
ret
ss
or
mov
and
and
inc
or
jge
out
arpl
xchg
push
ret
mov
ret
add
cmps
and
inc
push
xor
in
call
lsl
ret
test
mov
jg
mov
es
and
dec
cmp
add
leave
xor
pop
pop
xor
and
add
jg
push
mov
mov
loope
pop
imul
pop
add
(bad)
jnp
jmp
push
sub
pop
mov
mov
adc
xchg
mul
add
jge
outs
rcr
mov
and
mov
(bad)
call
lods
adc
pop
scas
iret
lods
adc
sbb
lods
mov
scas
pop
(bad)
mov
sbb
int
fdiv
fisttp
bound
mov
sbb
pop
cli
leave
test
mov
jecxz
dec
outs
sti
cmps
push
in
jmp
gs
mov
movs
pop
aad
mov
push
popf
xor
sub
imul
in
inc
loopne
xchg
js
pop
popf
mul
mov
or
shr
mov
sar
push
scas
xlat
cmp
inc
sbb
fwait
push
xor
cdq
add
pop
out
out
push
adc
daa
jne
cmps
pop
sub
out
(bad)
mov
inc
cdq
movs
fiadd
jl
add
das
pop
pop
xchg
inc
stos
or
int3
mov
cmp
mov
cwde
xor
push
js
jns
cwde
mov
add
push
adc
jno
cs
sub
loope
les
adc
and
mov
mov
cmc
cmp
sbb
call
sub
mov
std
mov
push
mov
mov
inc
in
jp
loope
dec
mov
stos
cwde
fs
sti
movs
pop
stos
fadd
mov
mov
loopne
enter
cmp
push
mov
dec
push
pop
popf
jmp
pop
(bad)
jnp
ret
cwde
xlat
mov
in
xlat
clc
jne
inc
dec
rcl
jg
jb
(bad)
sahf
call
aam
lea
dec
mov
mov
dec
into
jecxz
sbb
mov
inc
cmp
xchg
ficomp
push
std
jmp
and
push
jl
cmc
inc
gs
loopne
dec
mov
xchg
retf
and
mov
pop
(bad)
fidivr
int
shl
fwait
dec
(bad)
or
cmp
ret
scas
repz
pop
test
push
or
mov
push
push
or
push
scas
cmp
xlat
test
inc
dec
popf
or
rcl
int
mov
movs
xor
fs
push
xlat
sub
xor
sub
icebp
stc
fldcw
sub
pop
jg
in
jo
push
pushf
jmp
dec
jo
cdq
push
je
or
(bad)
push
retf
imul
cmovno
movs
and
push
test
mov
lods
test
mov
test
(bad)
fdivp
jle
or
mov
addr16
test
jo
mov
lds
rol
in
xor
in
outs
int
push
push
(bad)
cmp
fincstp
fnstenv
mov
aad
push
sbb
adc
add
into
fxch
imul
jmp
mov
xchg
retf
outs
loop
clc
push
xlat
xchg
mov
inc
addr16
xchg
xchg
mov
popf
mov
sahf
out
pop
movs
jbe
inc
int
sti
mov
inc
inc
lods
shl
(bad)
leave
mov
xor
(bad)
in
scas
push
repz
mov
mov
dec
mov
test
sbb
addr16
lock
cs
movs
hlt
mov
dec
xchg
dec
sub
pusha
dec
pop
push
pop
adc
(bad)
in
dec
imul
dec
jno
jo
shl
clc
repnz
arpl
aas
push
jecxz
mov
push
fsub
ja
test
and
popa
dec
sbb
inc
mov
dec
mov
adc
xchg
adc
pop
mov
(bad)
jb
mov
imul
jge
and
inc
lods
cwde
sbb
mov
sar
(bad)
lock
sar
fwait
sub
shl
(bad)
pop
sbb
sub
cmc
xchg
inc
aas
icebp
jge
call
popa
mov
in
jbe
mov
nop
sbb
imul
mov
mov
mov
scas
mov
rcr
out
cli
retf
clc
sbb
call
pop
mov
outs
and
cmp
ss
add
sub
xchg
dec
jp
cdq
out
sahf
push
push
movs
loopne
adc
or
call
repnz
mov
dec
ss
cmp
and
mov
call
sub
cld
push
mov
in
pop
dec
pop
imul
inc
mov
sti
stos
cmps
xor
pop
push
sub
adc
sbb
les
sub
gs
in
sbb
test
mov
xor
sbb
inc
loope
cmps
inc
out
movs
jb
fmul
xchg
je
je
push
inc
je
xchg
fsub
sti
es
lea
iret
and
ret
in
inc
pusha
push
add
and
push
mov
jo
mov
neg
mov
out
fldcw
lds
ret
lahf
jg
sahf
push
mov
jmp
retf
jb
or
neg
out
loopne
data16
jge
xchg
repnz
pop
cmps
lods
mov
out
jmp
retf
clc
pop
adc
into
es
push
lds
stos
movs
sub
fdivr
or
dec
pop
cs
jg
jae
and
xor
mov
lahf
outs
aaa
jp
aad
mov
ja
or
std
adc
test
(bad)
mov
lods
inc
pop
adc
jg
iret
mov
lock
jno
adc
inc
pusha
dec
retf
dec
add
xchg
xor
push
lahf
shl
mov
mov
and
mov
lds
js
aad
imul
dec
(bad)
arpl
jno
das
scas
js
das
shl
mov
iret
jne
lea
mov
addr16
xor
xor
std
add
bound
mov
pop
jge
pop
ins
xor
inc
pop
rcr
ret
push
into
pop
pop
(bad)
out
gs
add
dec
xor
xchg
add
adc
mov
scas
(bad)
lea
jo
mov
dec
mov
jmp
cmp
mov
pop
retf
cmp
add
stos
dec
jae
lahf
mov
call
test
sbb
out
inc
and
xchg
fstp
sbb
xor
js
cmp
jo
scas
jnp
int
jnp
std
std
xor
addps
test
add
sbb
sub
adc
xchg
cmps
xchg
or
and
(bad)
push
push
pop
xlat
mov
pop
add
scas
(bad)
clc
(bad)
jg
lock
push
stos
out
mov
inc
push
imul
mov
sbb
pop
fsub
cmp
sbb
ret
in
leave
test
repz
lds
push
(bad)
lds
call
cld
mov
jg
sub
mov
test
mov
xchg
pop
in
aam
xchg
cld
cmps
dec
xchg
out
xchg
aas
enter
jmp
push
mov
icebp
aad
jb
mov
hlt
ret
fsubr
aaa
ds
in
int3
test
pop
movs
arpl
jne
sbb
sub
loopne
jmp
mov
repnz
lock
push
mov
sub
xlat
cmp
push
daa
mov
ret
sub
sub
(bad)
fstp
or
addr16
jo
pusha
dec
cs
xchg
xchg
clc
sar
out
or
jae
and
pop
push
cmp
add
ins
jecxz
dec
cwde
sbb
bound
xor
add
enter
das
mov
hlt
outs
sbb
call
ja
lock
scas
mov
mov
scas
mov
ret
arpl
or
jl
xor
adc
cmp
mov
es
pop
pop
(bad)
in
ja
xor
fst
(bad)
je
xor
xchg
cmp
mov
jnp
ins
idiv
test
outs
cmps
push
fimul
cmp
dec
push
inc
push
inc
adc
sub
xor
ins
jnp
fwait
push
sbb
pop
and
shl
je
or
pop
out
sahf
sbb
sub
adc
inc
idiv
cld
or
mul
loopne
bnd
or
add
in
dec
in
cmp
in
xor
add
out
lea
fnstenv
jle
adc
adc
fisubr
cwde
mov
test
adc
push
repnz
push
test
popf
adc
cmp
lahf
inc
pop
sub
sub
fnstsw
sub
int3
aad
cmc
ffree
mov
inc
daa
dec
inc
mov
movs
ror
mov
js
lds
(bad)
sub
xchg
scas
mov
pop
cmp
mov
sub
add
add
gs
repnz
push
mov
in
or
jp
push
and
mov
mov
mov
sub
mov
fs
dec
lds
or
mov
vfmsubadd213pd
or
sar
inc
ss
mov
push
repz
hlt
pop
retf
xor
add
or
frstor
shl
bound
adc
shr
sbb
(bad)
pop
test
ficom
fld
push
mov
mov
call
cwde
dec
test
add
daa
cmp
ss
xor
cmp
loopne
push
cmp
cmp
add
add
mov
(bad)
mov
fmul
shr
sbb
je
jbe
pop
add
jg
mov
mov
outs
fs
in
push
pusha
push
pop
push
xchg
add
clc
inc
fbstp
out
inc
std
xchg
into
test
(bad)
and
mov
push
lea
in
stos
lds
sbb
and
xchg
push
(bad)
mov
gs
jl
je
mov
ficomp
leave
movs
mov
jb
add
mov
cmps
jp
loopne
jne
xlat
das
loop
aas
retf
mul
test
xchg
mov
cmc
push
inc
pop
inc
jmp
and
jo
call
fidiv
fwait
imul
rcl
cmp
sbb
sub
pusha
pop
test
push
dec
aas
mov
lahf
or
pop
clc
mov
or
jl
xor
mov
xchg
add
mov
pop
or
cli
shrd
into
inc
pop
mov
jb
ins
add
sbb
in
in
adc
adc
dec
xlat
pop
nop
iret
mov
sub
fcom
aad
mov
pop
aaa
mov
add
fcomp
addr16
je
pop
adc
push
jecxz
and
dec
imul
(bad)
mov
pop
fs
sahf
xchg
jle
push
test
(bad)
sar
sbb
mov
ret
in
fsubp
push
lahf
nop
fiadd
lods
ins
inc
inc
cmp
jo
adc
fdivr
mov
mov
push
dec
xor
inc
sti
stos
sbb
pop
adc
les
sbb
sahf
bound
jmp
push
enter
mov
mov
repz
test
cmovae
xor
sub
jns
cld
dec
cmp
mov
test
enter
jae
cld
movq
inc
aas
adc
xchg
xor
add
imul
fistp
pop
push
and
ret
and
mov
addr16
or
in
cmp
test
jns
push
call
dec
sub
push
lahf
sbb
in
add
sti
mov
pop
mov
cpuid
sub
mov
sbb
xchg
pop
xchg
pop
push
(bad)
jle
clc
inc
sub
and
sub
xor
push
mul
jmp
mov
add
lea
jmp
das
xor
jecxz
lods
dec
push
test
int3
popa
sub
add
cmp
jo
push
dec
add
bound
push
out
and
inc
push
push
xor
mov
and
test
xchg
sar
push
inc
retf
push
vmread
cld
daa
xchg
inc
cs
(bad)
call
mov
inc
into
add
jae
loopne
cli
mov
or
cmps
ret
jo
dec
inc
sbb
pop
cmp
inc
push
lods
das
repnz
popf
and
inc
rol
xchg
call
pop
jo
aad
jne
outs
mov
xchg
int3
jno
fs
in
mov
out
add
in
add
les
mov
cli
jp
push
mov
jns
lods
jl
aas
das
adc
adc
repz
data16
xor
push
cwde
pop
std
push
sbb
sbb
cli
push
inc
xchg
shl
les
es
ds
gs
in
cs
inc
or
popf
mov
push
ss
pop
pop
xlat
rcr
test
into
sti
arpl
mov
call
lea
mov
add
mov
cdq
jge
inc
mov
add
mov
mov
into
dec
rcr
and
pop
jbe
jnp
ret
xor
jbe
jl
pop
pusha
and
sub
mov
fxch
aam
popf
daa
ror
into
(bad)
fucomip
pop
dec
ret
cmc
adc
call
dec
add
cmp
stos
push
cmp
aaa
jp
pop
pop
mov
shr
lods
mov
dec
adc
xchg
push
adc
adc
mov
push
push
cmp
or
popf
push
dec
xchg
les
add
jmp
fisttp
cmc
(bad)
cmp
sbb
loope
cmp
push
pop
lods
gs
mov
aam
xchg
mov
adc
or
cli
mov
adc
mov
imul
cdq
pop
xchg
xor
shl
cmp
nop
mov
shl
aas
pop
and
jmp
in
(bad)
add
cs
or
adc
and
ss
dec
test
rol
sub
cmp
push
arpl
ret
or
in
inc
ds
jle
stos
daa
ins
fist
loope
ja
cli
cmp
push
movs
mov
dec
es
and
fiadd
xor
push
dec
idiv
sbb
adc
loop
xor
fld
mov
xchg
in
xchg
mov
call
add
xchg
fst
pushf
jbe
or
adc
mov
in
dec
sub
xlat
mov
daa
fcmovnb
dec
das
and
mov
pop
shl
in
lods
push
cmp
adc
call
push
popa
in
inc
or
retf
ja
shr
cmp
in
(bad)
arpl
mov
xor
push
dec
lods
loop
or
cmp
ins
pop
mov
test
and
ja
sbb
stos
mov
add
push
jns
cmp
adc
pusha
clc
pop
sub
rcr
dec
mov
imul
aas
xor
lea
push
loop
ror
inc
mov
xchg
adc
fist
enter
out
inc
jle
das
pop
in
addr16
int
mov
test
fwait
out
mov
es
ror
out
rcl
int3
cwde
fld1
(bad)
test
pause
lahf
xchg
out
push
aas
jbe
pop
push
sbb
jge
mov
cmp
inc
fs
aas
int3
pop
je
je
mov
loopne
mov
cli
pop
loop
mov
ins
xchg
popf
mov
jge
jo
mov
loope
mov
add
lock
or
mov
sar
sub
iret
or
inc
and
fs
dec
into
push
xchg
das
rol
outs
test
outs
mov
cmp
jbe
pushf
and
add
test
cmps
sub
adc
inc
sbb
add
xchg
stc
xchg
cmps
xchg
or
(bad)
xor
(bad)
jmp
mov
int3
sub
test
shl
bswap
cmp
shr
lods
jno
xor
imul
lea
arpl
xchg
dec
sti
iret
and
inc
add
push
xchg
jo
mov
xor
xor
jbe
dec
test
xor
pop
or
shl
pop
and
xor
push
inc
jnp
jl
mov
imul
sti
and
mov
in
pop
ja
ret
dec
repz
pop
sbb
push
and
pop
iret
xor
lds
push
cmps
leave
sub
adc
mov
and
xchg
add
mov
repnz
and
rol
pop
pop
adc
aaa
inc
pop
and
(bad)
repz
imul
pop
loopne
lea
xor
add
cmp
(bad)
mov
push
loop
sahf
(bad)
and
pop
mov
mov
sbb
push
push
push
mov
aas
push
rsqrtps
ins
stc
cmp
jge
in
pop
scas
mov
xor
int3
daa
mov
movs
pop
loop
xchg
dec
jge
pop
xor
push
adc
mov
mov
mov
std
mov
dec
mov
jg
pop
retf
mov
retf
xchg
mov
mov
jb
jne
pop
in
aas
mov
mov
das
(bad)
mov
sbb
jns
mov
iret
js
or
mov
(bad)
shl
movs
scas
iret
sti
in
nop
retf
arpl
dec
inc
push
nop
cs
cwde
cs
dec
mov
add
xchg
or
retf
add
mov
rcr
dec
push
sbb
or
cmp
mov
xchg
test
pop
es
aaa
jl
shl
movs
xchg
mov
dec
mov
in
std
sbb
adc
nop
stos
sahf
mov
dec
repnz
jmp
mov
stos
mov
and
fdivrp
push
inc
mov
aam
add
fidiv
test
mov
leave
js
or
pop
imul
xor
cdq
and
mov
ins
jl
out
test
dec
xchg
aam
mov
scas
retf
push
sub
pop
jmp
cs
out
cmps
sahf
push
(bad)
pop
jg
loope
loope
pushf
push
xchg
inc
ins
iret
xor
pop
fdivr
or
push
gs
jno
mov
rcr
scas
gs
push
mov
int
xor
mov
cld
pop
jmp
sbb
pusha
ftst
shl
push
mov
in
outs
xor
cdq
sub
push
push
int
cmc
test
call
mov
icebp
out
in
aaa
dec
jmp
shl
arpl
in
cmps
aas
les
cdq
xchg
xchg
cwde
cmp
xchg
add
cwde
repz
xchg
sbb
sar
enter
xor
arpl
out
pop
dec
xchg
adc
xchg
scas
aaa
repnz
xchg
dec
pop
pop
cli
cmp
push
data16
(bad)
hlt
enter
pop
inc
fsub
iret
push
test
dec
inc
jns
loopne
pop
call
test
retf
fsub
push
(bad)
push
mov
cmp
pop
dec
jg
sub
dec
dec
mov
sub
test
mov
dec
mov
sbb
jp
xchg
icebp
faddp
cmps
mov
in
fwait
jmp
push
mov
dec
fs
lahf
pop
in
sbb
xchg
push
fcmovnu
outs
test
and
or
mov
stos
vcvtss2sd
retf
pop
test
jp
aad
lods
mov
lods
out
fadd
enter
repnz
xor
js
and
ficom
cwde
jmp
pop
ret
adc
dec
out
xor
xor
out
or
mov
outs
inc
dec
adc
adc
dec
sbb
es
add
not
and
int3
pop
outs
jl
cmc
push
jns
and
xchg
adc
mov
and
mov
int
sti
xchg
rol
loopne
sar
test
lock
sub
mov
pop
call
and
sbb
loope
sbb
push
mov
out
repnz
mov
adc
sbb
in
iret
and
(bad)
inc
pusha
shr
iret
sbb
inc
pop
pop
sbb
retf
sub
mov
ret
cdq
pop
movs
adc
repz
addr16
push
inc
ins
jl
test
sbb
test
mov
add
cld
inc
mov
jbe
mov
pop
mov
stos
cld
icebp
or
(bad)
sbb
or
rcl
push
dec
sub
pusha
sar
shr
sbb
cs
and
jmp
jmp
jg
outs
pop
mov
cs
clc
pop
rcl
out
or
mov
xchg
cmp
sub
xchg
sub
xor
loop
inc
pop
cmc
sub
scas
nop
fistp
push
pop
cld
push
sbb
mov
lds
xchg
jne
mov
push
movs
jmp
mov
movs
jmp
dec
or
mov
leave
lea
pop
iret
and
lds
jg
adc
mov
inc
pop
mov
rcr
test
test
ret
loopne
pusha
ret
lods
and
dec
add
cli
jo
inc
xchg
lods
mov
adc
scas
cmp
or
movs
fwait
rol
(bad)
push
mov
(bad)
out
in
add
adc
stc
xor
dec
(bad)
aad
lds
jo
shl
stos
cld
es
jecxz
mov
xchg
xchg
out
sbb
loop
data16
dec
sub
jb
cmp
ret
cmp
call
scas
adc
jmp
mov
in
and
popf
daa
push
xor
ins
sti
inc
sahf
loope
adc
pop
xchg
cmp
stos
jmp
out
inc
and
rcl
pop
jmp
jnp
(bad)
cs
pop
add
push
imul
outs
mov
es
mov
loop
cmc
xchg
leave
push
in
shl
sar
or
cmp
mov
cmp
sbb
movs
loop
sbb
fst
in
mov
test
mov
adc
cmps
mov
aaa
cdq
rcl
cmp
int3
int
add
out
push
(bad)
mov
movs
adc
xor
dec
push
jge
add
imul
xchg
jbe
or
xchg
ss
cdq
cmps
xor
cmp
jecxz
xchg
pop
out
lahf
mov
add
pop
xchg
sahf
cmc
push
mov
sbb
push
add
add
ret
retf
add
pop
mov
fwait
popa
xor
rcl
in
ret
mov
movs
dec
stos
pop
lock
jmp
sti
imul
clc
in
mov
cwde
or
push
lock
xor
popf
retf
mul
pop
enter
(bad)
or
cvtps2pi
ror
ror
pop
das
inc
mov
mov
xchg
adc
test
jae
call
dec
clc
mov
push
pop
cdq
pushf
sub
imul
mov
pop
rcl
push
enter
jae
xchg
nop
mov
ins
jnp
jge
iret
mov
shl
sbb
pop
cld
pop
cs
jnp
cmps
or
in
mov
fiadd
out
icebp
aas
ror
ret
pop
rcl
mov
dec
xchg
outs
retf
mov
dec
adc
test
fldenv
into
(bad)
or
outs
out
dec
push
pop
idiv
jge
and
or
daa
mov
fmul
jno
stos
add
cmp
cmp
sbb
push
jmp
add
pop
mov
or
pop
inc
and
sub
es
test
mov
xchg
fist
movs
pushw
nop
pop
test
xchg
inc
push
jecxz
push
into
int
pusha
enter
mov
push
push
sbb
pop
sub
bound
inc
dec
inc
cwde
sbb
pushf
mov
jmp
add
dec
sti
jne
data16
inc
push
(bad)
xchg
repnz
lods
bound
ffreep
popa
stc
inc
dec
ds
xor
mov
sar
js
mov
popf
in
pop
pop
enter
mov
inc
js
xchg
aaa
popf
xor
stos
sbb
into
clc
push
sahf
(bad)
leave
cmc
mov
pop
push
aaa
test
mov
or
test
jbe
inc
add
addr16
arpl
dec
mov
mov
lods
movs
mov
arpl
inc
or
int
and
cwde
mov
push
xchg
and
repz
xchg
pop
mov
cmp
pop
bound
out
mov
aaa
sbb
lods
(bad)
rcr
out
mov
sti
push
(bad)
popa
mov
jae
cdq
inc
sub
mov
cmp
jle
into
cmp
lods
cmp
and
clc
dec
stos
and
pop
or
xchg
mov
loop
mov
jge
out
pop
adc
pop
push
bound
push
adc
pusha
add
movs
out
mov
cdq
(bad)
(bad)
pop
in
in
adc
retf
shr
nop
ins
adc
xor
ret
jbe
push
fnstcw
push
mov
pop
add
adc
sbb
stos
sub
sar
std
iret
shr
jmp
lea
ja
sbb
push
and
jge
leave
cmps
fnsave
lock
out
popa
or
push
arpl
adc
dec
jmp
adc
test
xchg
mov
inc
aam
xor
gs
xchg
iret
push
mov
cmp
push
push
mov
and
movs
(bad)
jmp
add
add
adc
je
and
or
jnp
ins
loope
xchg
shr
dec
(bad)
retf
retf
imul
je
sbb
mov
pop
test
mov
aaa
mov
cmps
fcomp
enter
dec
out
mov
push
mov
mov
and
push
adc
jmp
mov
loop
push
jae
xchg
loopne
inc
dec
cmc
cmp
shr
xchg
popa
(bad)
jle
and
in
aad
hlt
xor
shl
jl
pop
out
pop
dec
aad
daa
cli
jge
aas
data16
fsubrp
std
aaa
jle
pop
xchg
nop
adc
xchg
pusha
fnstenv
sar
test
add
mov
mov
pop
imul
loope
jmp
sbb
dec
jecxz
push
fcom
fstp
out
fisttp
jl
mov
fxch
gs
mov
or
mov
icebp
call
int3
(bad)
jl
(bad)
(bad)
jae
cmp
iret
sub
push
lock
fsubr
loope
call
xchg
mov
aam
pop
ins
mov
aad
pop
push
fdivr
cmp
adc
(bad)
les
(bad)
in
mov
jp
jnp
aad
jp
lea
fcom
cmp
and
sti
pop
push
pop
xor
sar
stos
fild
sbb
clc
cmps
out
mov
mov
xchg
not
sub
mov
lds
add
xor
lahf
or
inc
test
push
loop
es
stos
std
shr
fidiv
mov
retf
imul
ficomp
test
push
lahf
inc
mov
xchg
pop
daa
sahf
ja
sub
outs
imul
push
jnp
fst
jge
push
gs
mov
xlat
outs
sub
in
jle
ja
mov
out
xchg
nop
and
xchg
cdq
and
push
push
test
pop
out
retf
in
lea
loop
adc
or
push
fadd
pop
dec
cmc
or
xor
adc
and
mov
add
mov
nop
shr
mov
sbb
xchg
mov
cmp
xor
ss
jb
inc
ficom
pop
mov
and
push
push
jnp
imul
xchg
jns
call
sbb
xor
test
movs
push
mov
loop
test
mov
out
fidiv
lock
dec
enter
icebp
and
les
jecxz
and
jo
bound
es
push
into
cmps
sub
ror
or
or
retf
cmc
or
adc
push
inc
(bad)
mov
(bad)
arpl
dec
outs
int
jle
(bad)
jp
jmp
inc
xchg
leave
sub
add
out
mov
pop
icebp
cdq
fdivrp
jb
std
and
retf
pop
and
in
inc
and
movs
in
lahf
and
or
fist
xor
sbb
mov
mov
push
xchg
stos
iret
or
ror
jae
xchg
ret
xor
jno
inc
outs
(bad)
xlat
retf
pop
inc
test
jg
neg
cmp
adc
xor
stos
push
sahf
loopne
movs
sbb
int
lea
xchg
xor
mov
push
addr16
inc
push
inc
sbb
or
adc
inc
jg
div
outs
sub
mov
pop
arpl
mov
shl
fisttp
mov
cmp
lock
mov
xchg
mov
(bad)
mov
arpl
cmp
stos
jnp
fdivp
and
push
inc
mov
push
lahf
or
iret
cmps
jne
add
(bad)
push
scas
int3
(bad)
(bad)
fiadd
inc
aam
pop
(bad)
jb
xchg
push
daa
and
adc
movs
enter
pop
jnp
mov
ins
xchg
mov
shr
dec
loope
pop
mov
mov
outs
call
or
in
dec
jno
enter
dec
lock
cmp
cdq
inc
xor
adc
jno
ror
xchg
mov
inc
or
cmp
in
push
clc
loop
pop
mov
call
sub
shr
mov
add
in
push
jns
pop
lds
cmp
(bad)
dec
mov
cmps
int3
mov
lods
push
or
imul
imul
jnp
scas
(bad)
xchg
in
ds
jo
push
inc
popf
xor
into
or
std
pop
(bad)
lds
test
imul
push
and
test
mov
and
inc
adc
jl
sti
sti
and
pop
icebp
push
push
popa
push
arpl
mov
sub
jo
mov
dec
shl
adc
inc
inc
mov
dec
cmps
cmp
imul
clc
mov
or
cdq
adc
out
sub
push
hlt
repz
add
xchg
cld
sbb
mov
jecxz
or
fcomp
lahf
les
fdivr
push
cmps
cmp
je
cmc
or
mov
or
retf
cmps
sub
in
fidiv
std
bound
mov
push
push
mov
sbb
hlt
and
nop
inc
enter
dec
xor
jmp
lods
int
fimul
cmp
sub
fild
pop
dec
ins
(bad)
add
fwait
mov
jbe
xlat
adc
fwait
push
pop
aam
fstp
outs
dec
(bad)
mov
out
mov
adc
sub
into
mov
lea
cmp
jge
or
repz
call
sub
lods
add
test
test
outs
mov
xor
sub
mov
sub
ins
stos
jmp
jmp
cmp
and
fwait
inc
or
inc
aaa
mov
push
pop
or
test
out
jge
cmp
sub
dec
xor
add
cmp
sub
sbb
mov
into
jmp
aaa
in
lock
ins
adc
gs
cmp
inc
inc
dec
rol
pop
mov
mov
mov
cld
add
and
mov
mov
adc
xor
add
or
dec
jo
push
and
popa
(bad)
icebp
sbb
sbb
sub
nop
cwde
jo
sbb
mov
jo
mov
xchg
lds
mov
xor
xor
sub
stos
mov
mov
jnp
sbb
lds
shr
xchg
aad
mov
cwde
cld
ins
mov
in
mov
call
add
lock
mov
inc
mov
dec
or
ss
adc
mov
ret
adc
push
and
inc
mov
je
test
cli
test
xchg
inc
mov
dec
mov
das
(bad)
adc
and
repnz
fidiv
mov
adc
cmp
xor
repnz
out
fs
sti
or
sub
fdiv
es
shl
push
fimul
arpl
leave
(bad)
xchg
cmp
aam
shr
(bad)
cdq
lods
jp
test
sub
call
mov
out
mov
stc
adc
inc
fbstp
cmps
pop
sbb
mov
iret
dec
jno
cmp
test
out
jo
retf
mov
inc
xchg
(bad)
or
test
pop
iret
clc
push
mov
and
loop
outs
sub
or
arpl
ins
int3
outs
push
dec
mov
int
mov
daa
cdq
xor
cld
mov
pop
stc
jb
xchg
fadd
mov
or
(bad)
ficomp
xchg
cld
push
adc
arpl
mov
cmp
add
(bad)
mov
inc
aaa
push
popa
ins
adc
sti
pop
and
loop
pop
icebp
or
test
adc
mul
add
push
xchg
nop
scas
push
mov
sub
jle
jg
lock
test
scas
(bad)
jnp
ins
cmp
push
aaa
fwait
jne
mov
or
bound
imul
sbb
daa
aad
mov
inc
out
adc
rcl
int3
cmps
hlt
nop
fstp
fwait
xor
cmp
or
push
or
and
or
cmp
push
xchg
mov
lds
call
push
cmp
push
pop
mov
push
dec
inc
leave
lods
test
cmp
or
xor
fst
das
shl
add
adc
jbe
jmp
sbb
aam
mov
inc
jae
pop
sub
iret
adc
rol
pop
fimul
sub
cld
rcl
test
push
icebp
mov
sub
call
fnsave
fcmovu
dec
push
sub
imul
adc
push
mov
xchg
jo
xchg
punpckhdq
int
adc
or
dec
mov
add
xor
int3
cdq
jns
adc
and
pop
adc
popf
pop
sub
daa
mov
retf
mov
(bad)
pop
mov
call
cmp
jle
sub
ins
popf
cmps
mov
xor
mov
in
jae
std
sub
out
sbb
inc
int
shr
enter
adc
jle
pop
dec
mov
fdiv
aad
in
xchg
cmps
or
icebp
rcr
sbb
xchg
add
(bad)
fcmovnb
inc
loopne
dec
lods
inc
pop
daa
in
ja
dec
ret
push
test
sub
push
jb
mov
js
bts
ret
mov
jae
cmps
ficom
push
jbe
(bad)
mov
call
fld
es
add
add
jecxz
xchg
das
add
sub
ss
add
sar
mov
loope
fucomp
adc
sub
js
pop
mov
xchg
pop
pop
adc
jg
sbb
popf
rcl
mov
pop
rol
gs
add
popa
in
cmc
add
add
adc
(bad)
enter
fcmovu
fisub
sub
stos
jge
call
jmp
mov
xor
pop
fidiv
ss
jg
cmps
add
jb
call
out
push
fimul
jg
nop
dec
imul
sbb
and
xor
inc
daa
xor
jge
sbb
(bad)
sahf
mov
cli
sub
dec
mov
sbb
mov
cwde
dec
mov
cmps
outs
ins
sub
or
icebp
sub
lods
pop
cwde
mov
gs
adc
int
test
shr
lods
add
and
push
int
ret
test
dec
xchg
imul
xor
adc
or
pop
movs
cmp
adc
shl
and
ins
icebp
les
dec
out
mov
aaa
fst
xlat
and
xlat
and
push
cli
mov
stc
mov
jecxz
jge
dec
inc
jl
mov
or
movs
sbb
out
jmp
iret
dec
data16
lds
or
inc
shl
arpl
add
push
jmp
fsub
aas
cmp
cmps
shr
cdq
mov
jl
scas
jl
loopne
gs
inc
lods
dec
pop
or
push
call
repz
ja
daa
pop
ja
jno
out
rcl
xchg
adc
xchg
adc
cmp
or
sub
mov
(bad)
movs
cmc
mov
vpcmpeqb
enter
(bad)
jp
pop
inc
fcomp
lods
loopne
xor
xchg
sar
(bad)
sub
xor
add
jmp
jmp
jmp
in
fs
sbb
mov
mov
mov
pop
(bad)
mov
out
pop
lods
jno
mov
mov
retf
mov
dec
pop
jnp
inc
cdq
adc
loope
imul
mov
pop
bound
lods
xor
je
rcl
jge
jge
sar
push
lea
sub
adc
in
jno
or
mov
inc
xor
jnp
dec
jns
les
push
stos
cwde
xchg
xor
mov
add
out
push
mov
out
pop
dec
(bad)
int3
mov
shl
jnp
cmp
sub
mov
lock
dec
movs
mov
retf
cdq
inc
fs
out
pusha
inc
xor
pop
cmp
(bad)
fsub
cli
in
fwait
mov
inc
outs
xor
sub
cdq
gs
dec
mov
fstp
jecxz
pop
mov
out
push
retf
cmp
sbb
jmp
mov
sbb
pop
ss
pop
retf
sbb
jno
sub
jbe
sbb
push
sub
dec
in
dec
adc
mov
fsubrp
mov
pop
xor
xchg
cdq
jno
sbb
rol
ftst
or
lods
stc
inc
fiadd
aaa
outs
xor
inc
add
loopne
fimul
jae
push
pop
mov
arpl
dec
pop
loop
xchg
ja
dec
(bad)
bound
mov
xchg
loop
lds
jno
mov
in
push
mov
and
inc
inc
mov
push
jb
sbb
shr
xchg
add
push
in
fwait
fwait
or
test
cmps
repz
push
paddsb
mov
cs
xchg
sbb
cmp
rcl
inc
xor
cmp
(bad)
push
dec
add
mov
es
loop
sar
dec
movs
ficomp
or
jo
in
leave
jmp
and
not
mov
in
sbb
jg
fisub
jg
mov
push
popf
xchg
cld
adc
sbb
daa
out
aas
add
je
sbb
mov
inc
cmp
iret
cmp
and
std
sahf
imul
mov
dec
cmps
(bad)
call
push
lock
cmp
dec
test
loope
push
int
mov
div
fdivp
push
push
inc
jecxz
nop
cmp
push
in
std
sbb
shr
adc
(bad)
xor
fistp
scas
mov
adc
push
ja
aad
cmp
lahf
adc
sub
imul
adc
jns
add
das
jns
jge
mov
movs
mov
fdivr
aad
xor
or
add
or
inc
mov
ss
and
faddp
test
lock
arpl
shl
fild
ret
jg
push
add
aad
push
jl
cmps
outs
fwait
sub
or
(bad)
cmp
bound
cmp
jp
jmp
jno
mov
cs
cwde
pop
inc
lods
pop
inc
xchg
inc
pop
jmp
(bad)
repnz
js
mov
in
sbb
and
xchg
sbb
pusha
pop
test
popf
ror
and
dec
mov
pop
add
xchg
mov
jnp
jge
pop
bound
sbb
(bad)
push
ins
jae
ret
mov
sub
sahf
shl
js
vdivps
pop
das
cmp
cmp
or
xchg
jo
and
lds
push
(bad)
push
adc
std
mov
cmp
bound
adc
imul
dec
into
int3
sahf
loopne
mov
les
cmp
aas
sbb
xchg
jmp
ja
xor
pop
outs
scas
shl
test
push
mov
shr
jnp
mov
cmc
jmp
pop
mov
adc
xor
add
mov
shl
add
add
imul
inc
neg
fld
sub
xchg
fldcw
stc
psubsb
aas
aaa
pop
or
inc
push
cli
popf
out
das
jne
and
inc
jg
mov
jns
fstp
or
pop
fdivr
and
xchg
test
js
add
xchg
cmp
scas
jo
sbb
push
retf
mov
mov
retf
mov
push
mov
push
mov
or
rcl
ins
or
inc
inc
mov
repz
movs
dec
js
sbb
ss
push
scas
enter
fwait
(bad)
imul
dec
aaa
mov
je
(bad)
mov
or
fmul
test
loop
scas
lds
fldenv
loope
inc
mov
(bad)
arpl
pushf
jnp
loope
xor
push
repz
aas
sub
fimul
not
cmps
retf
test
call
addr16
shr
mov
frstor
sbb
aad
jmp
mov
sbb
jg
dec
into
leave
dec
inc
mov
les
and
xor
loop
sub
std
mov
clc
sbb
gs
addr16
movs
mov
jle
(bad)
jb
cmp
out
cmp
sub
mov
mov
dec
test
clc
sub
xchg
rol
sub
sub
hlt
stos
or
or
(bad)
jle
outs
cmps
lahf
and
dec
dec
jo
push
(bad)
or
and
pop
pusha
test
and
pop
ds
pop
sbb
scas
push
adc
fimul
mov
aas
inc
pusha
jg
or
xchg
ins
xchg
adc
pop
inc
mov
dec
dec
lods
das
(bad)
xchg
xchg
aad
iret
das
iret
rol
pop
fisubr
or
pop
sti
xor
frstor
pushf
add
in
daa
mov
mov
push
jo
mov
mul
pop
int3
add
xlat
cmp
pushf
int3
adc
shr
std
and
ins
sbb
and
(bad)
xor
or
push
aam
gs
aam
cwde
sbb
sub
adc
dec
xor
and
test
xor
xchg
and
cmp
dec
mov
fs
add
push
ror
mov
sbb
daa
adc
psllq
jle
dec
dec
sbb
rol
shl
cdq
or
movs
sti
idiv
add
sub
pusha
clc
repnz
bound
cmp
(bad)
sub
addr16
loopne
ss
retf
mov
inc
lock
nop
sub
in
nop
out
pop
inc
pop
pop
jmp
mov
fcmovb
test
adc
and
add
sbb
int
mov
jbe
pop
cmp
jl
or
mov
pop
add
cmp
outs
mov
cmc
mov
(bad)
(bad)
mul
sbb
aam
jmp
mov
xor
fwait
mov
sub
dec
push
out
push
or
xchg
jecxz
cwde
sbb
add
jecxz
call
in
out
nop
sub
test
xchg
adc
pop
sub
mov
or
push
dec
mov
xor
pusha
add
cmp
sti
push
fiadd
mov
(bad)
aas
or
cmps
or
xor
push
xchg
add
jecxz
mov
ins
daa
or
add
sti
stc
jp
neg
in
imul
dec
cmp
jl
scas
aaa
or
in
or
mov
out
hlt
mov
sbb
fld
lods
push
jmp
outs
fucomip
xchg
mov
add
push
(bad)
gs
fwait
sbb
cmc
imul
sub
(bad)
out
xchg
add
inc
xor
mov
jl
mov
data16
sbb
sub
fcmovnb
in
inc
sub
aam
fcomp
stos
and
gs
hlt
cmp
mov
cld
les
aad
pop
shl
hlt
add
lock
retf
fisubr
test
and
inc
loop
js
test
das
jno
or
mov
(bad)
enter
lahf
sbb
xchg
bound
test
mov
ss
jno
dec
mov
ret
cmp
fs
mov
cmp
jae
rol
ret
icebp
lods
mov
add
not
push
repz
das
ret
fbstp
cmps
xor
mov
jo
stos
call
dec
pop
inc
ins
aad
mov
cmp
loope
inc
jne
jbe
shr
sbb
jecxz
and
jle
push
add
jbe
retf
ret
mov
xor
call
out
xchg
jae
es
leave
and
in
and
dec
mov
and
icebp
cmp
cmp
pop
jno
xchg
cwde
or
stc
rol
ds
push
lods
stos
cdq
ins
cmp
hlt
push
fsub
cmp
das
loope
dec
pop
loopne
jno
rcl
pusha
test
xor
(bad)
call
fs
bnd
xchg
ins
pop
sahf
pop
push
test
mov
lock
and
xchg
mov
inc
adc
retf
mov
push
stc
scas
jmp
dec
pop
sbb
xor
jle
xchg
ror
lahf
jb
idiv
inc
loopne
jg
cmp
repnz
imul
imul
and
scas
sahf
cmc
xchg
aaa
pop
ret
pop
push
inc
rcr
dec
out
or
push
jmp
bound
rcr
jmp
pop
pushf
outs
push
push
add
add
std
xlat
sbb
xchg
fnsave
pop
dec
js
xchg
jno
fidiv
fild
jo
cmp
sbb
in
mov
mov
mov
outs
daa
mov
push
jle
push
daa
in
mov
lea
add
inc
mov
jnp
sbb
enter
les
or
xchg
mov
adc
shr
adc
movs
sar
push
and
cli
stos
dec
inc
addr16
mov
daa
inc
sbb
inc
pushf
and
retf
xor
cmps
popf
stos
push
daa
fmul
popf
shl
imul
pand
retf
cmps
mov
and
sub
bound
retf
cmc
mov
clc
int3
shl
mov
jle
in
pop
push
sub
in
dec
and
push
pop
jo
sub
(bad)
das
cmp
add
out
stos
xor
iret
pop
push
sti
inc
sbb
call
into
and
sub
imul
push
mov
and
cld
imul
(bad)
retf
rol
mov
pushf
scas
and
mov
test
inc
mov
mov
cmps
and
clc
pusha
or
dec
jnp
fisttp
cmps
mov
jmp
and
push
sbb
mov
je
and
dec
(bad)
xlat
push
test
leave
aas
cdq
aaa
ins
int
je
daa
pop
push
mov
sub
jle
pop
stos
fistp
add
iret
and
sub
lea
xchg
dec
mov
jmp
into
bound
xchg
cld
jae
cwde
loop
rol
and
cmps
add
pop
mov
(bad)
xor
jmp
mov
neg
retf
mov
clc
aam
int3
push
and
lods
fadd
rcl
sbb
out
add
jecxz
call
movs
inc
stos
xor
cmc
js
xor
in
push
adc
daa
inc
or
div
repz
movs
jmp
inc
push
(bad)
fcomp
inc
stc
fstp
outs
(bad)
mov
adc
cmps
pop
ret
add
fidivr
add
add
gs
sub
push
xor
sbb
mov
pushf
push
sar
sub
xor
cwde
daa
in
mov
dec
stos
dec
lea
mov
cmps
into
push
fistp
into
push
test
out
data16
cs
sub
leave
sbb
ja
retf
int3
pop
mov
push
cmp
push
push
or
push
lods
jl
push
add
dec
in
mov
fstp
enter
mov
sub
mov
gs
push
inc
in
pushf
aam
out
inc
daa
(bad)
es
dec
test
jmp
vzeroall
add
adc
dec
dec
adc
jmp
std
pop
addr16
iret
icebp
and
jecxz
xchg
add
fwait
pop
and
push
lea
mov
out
(bad)
lahf
imul
out
xchg
ja
les
and
lods
mov
adc
fild
pop
data16
loopne
cmp
push
dec
xchg
hlt
repz
sub
(bad)
stc
mov
add
(bad)
mov
xchg
nop
pop
dec
popf
xor
or
adc
jg
and
pop
sbb
in
xchg
imul
cmp
lahf
es
xchg
loope
stos
mov
prefetchw
add
xchg
jecxz
inc
xchg
stos
pop
mov
push
sub
les
sub
pop
jns
push
(bad)
push
jns
outs
stc
icebp
stos
pop
les
mov
(bad)
xchg
repz
sub
aas
arpl
mov
outs
test
mov
cmp
cld
mov
rcr
xor
fisub
cmp
mov
and
pop
jge
(bad)
push
jo
add
inc
fbstp
or
fild
cwde
(bad)
mov
sbb
mov
mov
ins
dec
jle
in
and
xor
or
inc
sub
jo
out
cmp
add
add
and
test
inc
mov
ficom
jo
ffree
fsubr
inc
push
shl
jecxz
sub
dec
push
(bad)
lock
cmps
xlat
pusha
mov
mov
(bad)
or
xchg
xchg
mov
les
cdq
movs
cmp
test
pop
(bad)
cmp
xchg
push
mov
mov
ror
or
iret
mov
scas
cmc
fwait
inc
call
mov
test
out
adc
sar
aam
lds
fnsave
push
sub
iret
pop
in
pop
xchg
in
push
adc
adc
test
ds
cmc
daa
inc
dec
(bad)
retfw
inc
sbb
lock
xchg
pop
inc
stos
inc
aaa
add
imul
and
ret
or
xor
pop
ins
mov
cmp
or
movs
mov
xchg
jecxz
and
xor
pushf
movs
add
ins
scas
mov
cdq
mov
ja
fld
(bad)
add
jg
loopne
xchg
mov
xor
xchg
xchg
mov
jmp
outs
lods
add
push
sub
dec
cmps
aam
idiv
or
in
sub
adc
aam
fwait
sbb
dec
das
xchg
leave
mov
lds
jmp
std
xor
cwde
lea
jmp
mov
pop
lahf
mov
in
mov
xchg
adc
mov
mov
dec
pop
shr
jmp
mov
mov
rcr
popa
cmp
pop
scas
mov
pop
jg
dec
aas
scas
jmp
adc
push
stc
mov
pusha
(bad)
xchg
aam
cld
daa
jl
inc
mov
jae
les
stc
bound
rol
dec
(bad)
xlat
sahf
push
fwait
or
push
cmovae
mov
and
dec
lods
mov
inc
push
cmp
mov
xchg
es
cmps
faddp
addr16
xor
jo
add
sbb
xor
ror
push
mov
imul
mov
out
int
jge
pop
pop
fidiv
loope
or
std
pop
fs
jbe
test
mov
fcomp
in
sbb
int3
cmps
mov
int
test
imul
jmp
pop
mov
sub
loopne
test
xlat
xchg
shr
pop
sti
test
aas
adc
mov
fs
lods
pop
fdivr
pop
cmps
int3
popf
call
loop
cli
and
jle
(bad)
out
out
or
sbb
movs
xchg
movs
loopne
sbb
out
add
es
mov
and
popf
push
es
out
movs
popf
jno
xchg
hlt
add
add
(bad)
scas
popa
js
in
or
scas
imul
xchg
mov
popf
xchg
pop
pusha
ret
int3
push
shl
mov
inc
call
aaa
dec
popf
popa
jne
data16
addr16
test
fist
inc
mov
jmp
cmp
dec
aad
movs
call
ficom
test
pop
add
mov
ror
sbb
push
sbb
das
pop
xchg
cdq
jmp
(bad)
rcl
in
jnp
add
lea
xchg
jo
enter
fwait
jno
inc
aaa
xor
les
sbb
pop
adc
into
mov
jmp
xor
int
adc
sar
ss
mov
aad
mov
pushf
test
repnz
std
imul
icebp
sti
std
xor
sbb
in
mov
mov
jae
fbstp
aam
adc
mov
mov
and
shl
fwait
dec
push
mov
mov
fistp
pop
lds
int
or
and
mov
add
jmp
cmp
pop
clc
inc
outs
outs
push
mov
cld
(bad)
xchg
adc
xchg
(bad)
sbb
adc
repz
cmp
jl
adc
inc
fild
inc
addr16
cwde
rol
push
sahf
mov
mov
popf
fcomp
xchg
push
jge
jge
xor
cs
mov
mov
jnp
adc
push
inc
(bad)
shl
pop
(bad)
pushf
push
vmovups
imul
xor
stc
call
xor
js
cmps
mov
dec
pop
stc
sbb
cmp
xchg
sbb
enter
frstor
lods
loope
mov
inc
adc
xchg
dec
push
add
stos
aaa
push
daa
cs
in
cli
dec
lea
mov
mov
sbb
xor
push
xchg
arpl
jmp
sbb
dec
jl
inc
cmps
add
push
mov
js
bound
sub
pop
cmc
dec
fmul
sub
cmp
mov
sub
cmp
imul
pop
push
push
outs
sbb
scas
call
fbstp
lods
(bad)
push
cmp
xchg
xchg
sbb
add
scas
lods
jmp
call
cmp
call
mov
ror
fs
(bad)
cmp
fnstenv
and
jns
pop
push
or
mov
and
add
cwde
mov
fmul
mov
cmp
test
fwait
(bad)
cmps
sbb
data16
or
ror
aaa
xor
les
shl
sahf
not
jb
fdivr
lea
xchg
xor
pop
dec
xor
jnp
sub
mov
js
inc
sub
nop
outs
pop
int3
dec
cdq
mov
push
cmps
dec
inc
and
cmp
mov
cmp
mov
pop
push
retf
adc
jle
adc
pusha
xlat
sub
gs
sbb
cmp
mov
push
clc
and
addr16
xchg
sbb
gs
push
lahf
pusha
push
ror
mov
ficomp
or
jnp
(bad)
jg
or
in
(bad)
xchg
push
das
shr
mov
adc
pop
pop
call
(bad)
movs
mov
lods
cld
inc
fwait
mov
imul
fucom
xor
xchg
mov
shl
int3
xchg
loop
jle
outs
lods
ret
and
adc
out
lahf
fistp
shr
pop
mov
pusha
ror
out
or
sbb
push
mov
ffreep
inc
mov
mov
mov
mov
nop
retf
aas
(bad)
inc
push
lock
mov
sbb
out
lea
retf
dec
mov
push
push
mov
xchg
or
in
push
cld
pop
sar
sbb
pusha
mov
add
cmps
lods
cdq
out
jecxz
out
add
and
mov
xlat
repz
or
in
out
stc
movs
xchg
and
ret
jge
in
loope
or
push
xor
mov
xchg
jnp
imul
inc
loope
jns
xchg
movs
ds
loop
mov
hlt
in
and
call
(bad)
adc
clc
inc
and
jmp
dec
(bad)
jp
mov
repnz
loop
mov
int3
mov
jge
bound
cmp
into
cs
xor
xor
loope
mov
sub
inc
pusha
and
mov
mov
dec
xchg
aad
mov
sub
mov
not
cs
add
mov
mov
mov
sub
or
add
out
mov
xor
pop
ins
mov
retf
jmp
jmp
std
xor
jb
out
enter
scas
sub
in
cmp
ins
cmovo
shl
cmp
sub
push
out
fs
mov
adc
mov
inc
xor
pop
fisttp
bound
inc
les
(bad)
xchg
add
cli
rcl
out
shl
shr
gs
outs
lds
adc
idiv
push
jae
xor
aad
xchg
mov
pop
mov
adc
xchg
pop
push
call
in
pushf
sub
lods
mov
and
push
pop
sahf
ds
add
push
dec
jnp
lods
sub
int
xchg
sbb
cmp
call
mov
repz
loope
push
mov
jbe
mul
jnp
adc
fcomip
inc
out
xchg
pop
push
mov
mov
and
mov
mov
pop
mov
push
mov
outs
popa
jp
(bad)
out
ret
push
popf
inc
(bad)
call
test
adc
cli
inc
cmp
dec
popa
mov
in
mov
imul
ja
push
add
pusha
std
xchg
push
call
pop
sbb
test
test
xor
es
xchg
add
retw
mov
sahf
pushf
and
repz
mov
arpl
scas
inc
test
push
ret
dec
ds
sbb
stos
scas
outs
mov
inc
mov
add
inc
cmp
rcr
aaa
xchg
dec
dec
xchg
daa
xor
into
cmp
ret
js
cwde
or
mov
and
std
inc
mov
mov
into
ret
in
inc
xchg
mov
daa
movs
pop
mov
std
xor
push
cmp
icebp
mov
mov
mov
mov
cmc
sbb
adc
loope
adc
cmp
mov
and
and
icebp
sub
out
aas
mov
mov
sub
xor
jg
enter
or
or
enter
push
push
pop
push
xchg
(bad)
xchg
inc
push
(bad)
adc
mov
push
sub
mov
jnp
mov
mov
push
fcomp
cli
xor
mov
pushaw
push
fadd
(bad)
inc
inc
push
inc
push
scas
mov
fidivr
maskmovq
idiv
or
mov
fimul
call
xchg
mov
jmp
add
add
sbb
xchg
mov
repz
xlat
dec
xor
cwde
in
fdiv
or
and
mov
rcr
mov
hlt
xor
cmc
test
jns
push
nop
jmp
ret
sub
xor
adc
inc
jmp
mov
jecxz
push
repz
(bad)
pusha
fxch
jmp
es
sahf
jecxz
xchg
push
xchg
(bad)
repz
xchg
imul
jo
fsubr
mov
aad
cdq
push
retf
in
inc
mov
(bad)
jp
push
test
mov
cs
pop
cmp
cmp
test
pop
repz
enter
dec
data16
iret
pop
adc
inc
cmp
fmul
sbb
cmp
dec
push
mov
sbb
sbb
in
(bad)
aad
add
pusha
test
ja
cmp
push
ret
addr16
daa
stc
inc
in
add
pop
jbe
mov
or
dec
jb
sub
push
dec
sub
fwait
loop
pop
dec
mov
inc
sbb
cmp
jns
pop
inc
rcl
jns
xchg
xor
xor
ficom
(bad)
pop
ins
mov
mov
mov
and
dec
ja
push
stc
dec
and
cmp
mov
jae
mov
mov
stc
shl
repnz
jmp
test
stos
jns
out
ja
dec
retf
daa
cmps
sbb
sbb
or
mov
aad
test
pop
fst
mov
popf
ds
sbb
mov
or
fs
add
dec
dec
jo
jmp
add
fld
inc
cmps
out
out
dec
mov
jge
test
xchg
jno
arpl
mov
pop
cmp
call
outs
test
dec
xor
retf
(bad)
ins
lods
pop
xor
popa
sbb
cwde
in
leave
mov
ja
movs
ins
dec
cmps
xor
sar
xor
retf
adc
lods
iret
mov
leave
push
xor
inc
inc
and
or
fwait
add
(bad)
add
inc
cli
dec
addr16
pop
test
push
jbe
push
mov
pop
sbb
jb
ja
push
jbe
or
xchg
push
or
add
pop
mov
rcr
sbb
dec
inc
(bad)
mov
ret
out
sti
enter
test
cmp
jle
xchg
pop
xchg
inc
mov
retf
or
sbb
iret
call
push
addr16
repnz
repz
ret
or
loop
cdq
into
push
in
jo
xchg
mov
dec
sub
push
push
mov
out
inc
ins
in
bound
cwde
inc
jne
fdiv
das
fstp
inc
push
repz
aad
or
sbb
lock
leave
sbb
movs
dec
push
out
xchg
stos
sub
fs
add
call
jo
mov
scas
cmps
dec
into
adc
mov
inc
in
out
push
in
sub
out
les
mov
fmul
sbb
test
and
aam
fmul
xchg
or
inc
test
mov
dec
inc
pop
aam
jns
inc
aad
scas
xchg
jmp
das
loopne
sbb
sbb
test
sti
dec
mov
inc
sub
push
mov
fs
repz
or
addr16
or
sti
lods
and
mov
mov
sbb
int
sub
sub
cmc
mov
cmps
pushf
scas
sbb
xchg
pop
add
es
xor
inc
mov
js
mov
ret
cs
pop
call
push
(bad)
mov
mov
push
scas
mov
pushf
jge
sbb
jae
mov
je
imul
adc
bound
fwait
cmps
test
mov
cdq
adc
int3
jmp
push
add
xor
leave
sub
xchg
or
sub
test
fdiv
jp
js
out
pop
addr16
mov
(bad)
mov
in
ss
push
mov
add
aad
jmp
aam
rcl
repnz
adc
mov
retf
cmp
mov
xchg
xchg
out
dec
xor
sar
push
imul
mov
xor
add
or
jne
or
loope
fist
xchg
je
sbb
scas
out
push
mov
out
jl
push
mov
rol
mov
add
push
sti
test
or
jno
xchg
xchg
add
xchg
sub
mov
and
je
cmp
xor
jne
bound
push
xchg
jge
push
pop
push
pop
mov
setae
pusha
jmp
outs
bound
clc
ins
mov
pop
or
daa
nop
ret
popf
pop
sbb
or
pop
scas
or
scas
mov
cwde
jbe
xchg
jo
inc
shl
sub
test
xor
adc
idiv
jbe
mov
test
nop
jbe
fucomi
push
addr16
dec
cmp
add
adc
imul
xchg
pop
rol
jne
leave
cli
pop
in
(bad)
add
and
add
mov
aas
scas
and
adc
out
add
push
push
xor
add
jnp
sbb
push
pop
es
sub
inc
mov
out
sub
(bad)
in
out
mov
inc
sub
(bad)
dec
movs
push
push
lds
loop
sti
fidivr
gs
mov
add
jg
pop
rol
out
mov
out
sub
ja
inc
loopne
lods
jno
rcl
jp
cmps
push
push
push
nop
mov
(bad)
sub
adc
add
push
je
pop
iret
retf
push
out
inc
dec
fidiv
addr16
or
xchg
in
movs
adc
push
xchg
or
push
fisubr
imul
sahf
add
mov
dec
std
adc
pop
fwait
jne
xor
mov
xor
bound
add
test
add
ja
bound
mov
outs
out
scas
popf
clc
aaa
daa
fdivr
jmp
pop
push
fstp
out
shl
icebp
mov
jmp
(bad)
es
jnp
pusha
sahf
fistp
or
aad
sbb
or
jb
mov
sub
and
pop
adc
dec
sbb
adc
pop
push
nop
inc
xchg
(bad)
nop
jle
xor
hlt
int
and
or
and
enter
call
xchg
fcomp
fldenv
in
mov
inc
jmp
icebp
inc
clc
fld
add
cmp
jae
adc
movs
push
test
into
div
push
clc
fild
mov
mov
push
push
call
mov
fxch
int3
lds
or
adc
in
cmp
jge
jecxz
pop
aad
add
pmaxub
out
mov
pop
adc
sub
sahf
inc
pop
nop
fldenv
inc
rsm
sbb
retf
out
dec
inc
xor
mov
pop
in
mov
mov
sbb
int
sub
push
int3
jb
(bad)
push
sub
test
mov
dec
cmp
and
imul
mov
imul
pop
mov
dec
in
cmp
or
out
mov
dec
shl
(bad)
dec
imul
loop
or
mov
sti
mov
xchg
ds
(bad)
rol
sbb
sar
mov
cmp
push
outs
scas
lea
(bad)
fcom
mul
outs
sbb
mov
push
lahf
push
add
add
mov
mov
je
jmp
pop
push
ds
sahf
std
push
xor
ja
mov
sub
cmp
mov
and
sbb
mov
mov
shr
hlt
push
ret
sub
frstor
inc
push
bound
cmp
inc
inc
inc
iret
xchg
sahf
(bad)
ins
(bad)
jne
push
and
cmps
(bad)
pusha
jns
adc
not
add
inc
xchg
jle
dec
lods
sbb
jo
jg
stos
cmp
mov
test
leave
fist
dec
stc
and
nop
mov
dec
jg
inc
repnz
and
ja
mov
xchg
test
stos
out
leave
adc
adc
pop
mov
inc
mov
push
data16
or
dec
in
dec
mov
lea
xchg
ror
(bad)
not
stos
sub
inc
ins
inc
enter
popa
jbe
push
mov
inc
add
shl
les
jl
inc
cmp
or
adc
sbb
mov
(bad)
pop
xlat
les
test
stos
icebp
sbb
mov
pop
sub
xchg
push
inc
(bad)
shl
dec
in
shl
psrlw
in
ja
sar
cmps
mov
aad
cmps
push
es
fcmovu
cmp
dec
and
cli
mul
xor
adc
mov
add
and
aaa
fadd
and
adc
mov
daa
sub
inc
cwde
jnp
and
cmps
mov
xchg
mov
jns
dec
sub
test
cmp
xchg
cmp
dec
jns
sub
sbb
cmp
sub
gs
add
dec
sbb
jbe
sub
mov
add
fmul
ins
fwait
xlat
mov
ficomp
test
ret
fcom
jns
movs
push
xchg
dec
ss
rol
pop
int
imul
add
sbb
mov
jns
retf
or
pop
outs
push
xchg
out
out
jne
mov
sbb
in
retf
loope
(bad)
stos
clc
and
test
enter
jb
out
xchg
in
data16
sbb
dec
adc
cmp
lahf
movs
stos
fsubrp
adc
or
(bad)
dec
xchg
leave
xchg
hlt
out
xlat
and
inc
bound
arpl
sbb
xchg
inc
outs
ret
dec
or
popa
sub
out
in
xor
jnp
mov
ins
mov
sub
sub
jp
xchg
je
xchg
mov
shl
mov
loope
cmp
ja
(bad)
movs
jmp
test
lods
jo
jnp
movs
pop
mov
xchg
(bad)
mov
pushf
inc
call
outs
add
scas
and
stos
push
or
test
sub
jmp
and
fild
test
out
jmp
push
fcom
out
int3
add
test
and
data16
mov
fsub
or
pusha
es
mov
xchg
add
call
lds
loopne
pusha
jmp
loopne
icebp
cmp
sbb
fsub
movs
push
mov
and
or
enter
outs
mov
jge
in
loop
(bad)
jle
and
aam
ror
sub
pushf
sbb
lock
xor
push
ds
sub
jnp
sahf
mov
mov
mov
push
and
scas
sub
rcr
cmps
mov
push
jb
arpl
je
loope
mov
shl
stc
mov
hlt
cmps
push
dec
push
(bad)
mov
and
cli
dec
xchg
adc
lahf
mov
mov
sti
loopne
int
mul
mov
(bad)
clc
cmp
(bad)
fistp
sub
daa
mov
jae
xor
test
imul
fxch
mov
cmc
test
xor
xchg
rol
in
addr16
mov
aaa
bound
in
cmc
enter
xor
adc
stos
in
cmps
ds
dec
pop
lahf
comiss
mov
sti
leave
cld
inc
xchg
mov
pop
sbb
aas
pop
cmp
fcmove
mov
jp
iret
push
js
adc
fisttp
cwde
fcom
retf
fistp
fisub
mov
sub
xor
xor
out
mov
mov
push
or
scas
iret
push
(bad)
adc
ret
adc
push
add
pop
ret
adc
gs
mov
dec
popf
xchg
and
scas
dec
mov
mov
mov
add
and
loopne
add
into
out
mul
lds
loope
daa
fimul
add
imul
sbb
dec
hlt
mov
xor
ja
xor
mov
push
add
ins
jl
push
xor
imul
sbb
xchg
ffree
cmps
cmp
rcl
pop
mov
popa
(bad)
call
mov
xchg
outs
xchg
inc
loopne
shr
stc
dec
ret
nop
imul
mov
fwait
push
sub
ins
jle
push
inc
call
push
clc
sbb
mov
mov
dec
test
fist
shl
mov
xchg
xchg
aad
retf
cmp
fisub
xor
pop
cmc
cli
js
mov
add
mov
(bad)
(bad)
ret
inc
pop
stos
cwde
push
iret
xor
cmc
iret
jle
sub
(bad)
jae
push
push
fcom
add
pop
add
(bad)
sub
sahf
std
jg
adc
call
outs
dec
adc
add
iret
movs
fptan
add
and
test
mov
pop
test
add
pop
adc
or
dec
sbb
xchg
test
dec
sbb
cmp
clc
test
mov
and
pop
push
adc
scas
dec
sub
leave
xor
out
test
cmp
mov
mov
mov
dec
push
lods
mov
in
jnp
and
and
jbe
xchg
mov
sbb
out
int
stos
ror
pop
or
or
push
cmp
or
shl
ins
mov
or
and
and
xor
icebp
jecxz
das
in
ds
(bad)
ins
jbe
aas
shl
xor
(bad)
clc
mov
jnp
popf
ds
cwde
sti
pop
add
sar
push
xor
add
sbb
jmp
out
jmp
(bad)
(bad)
movs
pusha
(bad)
mov
mov
and
or
cmp
and
push
icebp
rcr
pushf
jmp
jecxz
or
lea
dec
int
out
inc
scas
xor
in
sbb
mov
clc
mov
pop
or
(bad)
cmp
push
and
sti
imul
inc
aad
arpl
ins
dec
popa
(bad)
xchg
pusha
ret
fnstenv
cmp
or
mov
mov
stos
or
sub
mov
inc
jo
xchg
mov
sbb
retf
push
jns
mov
inc
in
xchg
mov
imul
or
retf
xor
movs
add
push
mov
loopne
xor
push
int3
xor
mov
loop
fwait
push
lods
xor
pop
call
and
add
aas
into
ret
dec
xchg
lock
mov
inc
adc
mov
mov
ret
pop
scas
adc
pusha
fadd
mov
sbb
fidiv
xchg
ror
pop
in
mov
leave
xchg
sahf
push
retf
push
jnp
jns
push
shr
sub
je
cwde
dec
pop
xor
test
adc
mov
leave
data16
dec
jecxz
pop
je
es
add
ss
push
lahf
jb
sti
push
xchg
pop
stos
adc
xchg
lds
or
push
sbb
mov
mov
popf
add
and
cdq
aaa
xchg
popa
loope
jo
scas
sbb
lahf
imul
call
or
xchg
dec
jl
bound
adc
shrd
pop
pop
hlt
and
loopne
std
imul
jmp
sub
jno
data16
pusha
imul
loop
pop
pop
mov
mov
push
mov
fadd
sub
rol
ret
ja
dec
inc
cmc
rcr
int
pop
ficomp
sub
lods
stos
xchg
int
or
xor
sub
jne
shr
popf
sub
push
inc
(bad)
fst
out
xchg
mov
repnz
loop
mov
sar
xor
sbb
rcl
and
imul
adc
jl
std
ins
popa
cmps
pop
repnz
rcl
fimul
fs
jnp
test
shl
ins
ins
jecxz
jnp
mov
add
mov
and
sbb
mov
pop
sub
fs
dec
and
mov
mov
cmc
fmul
push
and
stos
test
and
and
adc
xchg
fs
jmp
push
mov
sub
and
pop
cmp
in
repnz
xor
jae
and
pushf
jmp
pop
sbb
cmp
sbb
jp
js
mov
add
pop
lahf
stos
mov
add
and
loop
and
aas
js
fst
cmps
pop
adc
xor
push
jmp
retf
mov
repz
in
loop
iret
and
mov
popa
push
cdq
or
pop
mov
adc
mov
repz
cmp
addr16
arpl
jmp
or
inc
push
xor
in
add
cmps
dec
mov
cmp
pop
cli
push
fidivr
mov
retf
fiadd
movs
bound
lds
cmp
fwait
xchg
mov
jmp
cmp
inc
cdq
cs
cmc
push
xor
sti
ja
add
std
and
pop
fistp
xchg
jo
and
pop
stos
pushf
or
jmp
mov
push
fwait
xchg
or
adc
sub
jo
div
mov
mov
jmp
pop
push
ins
inc
push
inc
jecxz
mov
cld
fdivr
sub
push
aaa
and
nop
scas
dec
aas
rol
lock
xchg
lea
mov
je
mov
in
(bad)
pop
mov
xor
ja
cmc
dec
inc
push
imul
jne
push
xor
cmove
xchg
inc
pop
mov
inc
mov
inc
and
mov
inc
xchg
cmps
sahf
xlat
into
jbe
es
sub
xor
cli
adc
xor
jmp
inc
inc
mov
test
mov
push
and
jmp
push
cmps
push
mov
jmp
(bad)
fcomp
repnz
xor
mov
aas
and
into
and
movups
std
movs
mov
xlat
sar
mov
jne
js
fld
or
or
push
inc
sbb
hlt
and
aaa
daa
leave
jo
loop
fimul
and
jmp
xchg
and
aaa
test
pop
mov
fistp
inc
movs
ret
mov
adc
loop
sub
mul
sbb
daa
mov
mov
pop
or
dec
add
cmp
adc
pushf
cmc
movs
mov
outs
sbb
push
aam
ret
jmp
jbe
loopne
call
outs
in
pop
test
xor
mov
push
lds
call
push
inc
jl
int
retf
adc
lock
pusha
push
sti
(bad)
push
ins
mov
scas
adc
lds
in
aam
pop
push
ss
adc
pop
jnp
(bad)
cli
fsubr
dec
int
inc
inc
shr
fstp
ins
push
in
jo
jle
movs
xchg
or
ret
mov
enter
bound
loope
addr16
sbb
stos
popa
mov
xor
test
sub
fisub
dec
(bad)
mov
mov
sbb
popa
mov
icebp
push
jle
enter
pop
and
ins
and
clc
cmp
popf
dec
mov
rol
mov
shl
xor
or
outs
jns
sbb
mov
adc
xor
int3
pop
arpl
jle
jecxz
loopne
push
mov
fucom
stos
push
xor
mov
lahf
pop
and
arpl
sub
(bad)
and
daa
xor
inc
jmp
dec
mov
push
push
mov
or
jne
fcom
add
and
ret
jne
popf
add
in
imul
mov
pop
loope
sub
mov
sbb
mov
sbb
adc
dec
or
inc
fistp
adc
cdq
sbb
jns
sub
ins
pop
fdiv
adc
and
daa
mov
or
and
pusha
jp
pusha
mov
or
(bad)
in
add
ror
outs
aad
mov
jbe
mov
daa
jae
out
test
jecxz
fcom
adc
call
mov
jns
and
cmc
or
lds
imul
pop
xchg
enter
xchg
cmp
jge
jbe
inc
outs
xor
xor
dec
mov
in
xchg
popf
and
or
push
inc
push
je
xchg
hlt
or
stos
xchg
jl
das
push
and
add
push
mov
jmp
jl
mov
dec
mov
add
sbb
jae
imul
lahf
shl
pop
pop
sub
sub
mov
test
lods
and
fist
xor
nop
xchg
dec
or
test
push
and
pop
mov
je
leave
inc
fs
pop
outs
mov
hlt
pop
push
(bad)
psrlq
stos
pop
inc
adc
push
or
jmp
cmp
repnz
mov
adc
xchg
stos
das
mov
mov
jle
ret
vhsubps
pusha
adc
xor
bound
sub
mov
out
les
(bad)
cmp
push
test
dec
sar
xor
in
xor
pop
out
adc
cs
rol
or
fs
(bad)
retf
push
add
scas
pop
lods
cwde
adc
pop
cmps
dec
sar
adc
mov
mov
sbb
sti
jnp
xchg
or
cmp
scas
dec
int
iret
push
cmp
push
jne
dec
loopne
fs
push
outs
out
pop
(bad)
ror
ins
arpl
scas
add
(bad)
std
(bad)
addr16
in
lds
sub
iret
int
xor
in
mov
mov
mov
fs
(bad)
cmc
inc
out
mov
lea
sbb
mov
pop
pop
(bad)
lock
popa
sub
in
lds
jo
pop
into
mov
sub
out
ds
pop
in
sub
pop
stc
in
out
int3
cvtpi2ps
mov
pop
cmp
mov
ds
(bad)
in
xchg
xchg
cmps
adc
adc
js
cmp
add
lea
add
les
adc
movs
sub
push
inc
ds
inc
sbb
fwait
mov
inc
pop
mul
in
in
test
loope
cmc
push
loope
aam
in
cwde
cwde
ja
sbb
or
lods
outs
ss
push
nop
sub
repz
inc
pushf
outs
mov
jo
ss
and
stos
mov
into
sbb
pushf
inc
lds
ja
out
(bad)
and
adc
cmc
das
mov
xor
dec
mov
lods
sub
push
mov
push
cli
loope
lods
sahf
dec
test
sbb
jno
dec
(bad)
js
pop
ss
dec
fld
push
and
movs
inc
mov
clc
inc
pop
loope
lea
pop
sub
ja
int
lods
jg
jo
int3
rcl
or
stc
aam
sub
or
imul
mov
push
xchg
(bad)
lods
into
jg
jle
and
shl
dec
lea
dec
lahf
mov
cmps
hlt
and
call
mov
das
in
bound
mov
test
add
xchg
add
jg
dec
adc
xor
repz
loop
in
inc
inc
lds
retf
mov
jg
in
inc
jmp
fcomp
mov
enter
adc
clc
push
(bad)
in
ins
xlat
fistp
xchg
sbb
adc
call
fsubr
enter
retf
or
cmp
or
and
call
cmp
mov
sbb
cmp
sub
je
pop
sbb
mov
mov
mov
adc
xchg
fs
push
jecxz
cdq
aam
fadd
retf
mov
sub
pop
test
imul
adc
cld
xchg
pop
jle
jbe
stos
pop
xchg
and
inc
pop
sub
ins
fs
hlt
stos
sbb
retf
adc
push
into
data16
push
mov
sub
cmp
sar
out
sbb
(bad)
sahf
sbb
aas
test
les
shr
push
addr16
mov
mov
out
mov
sbb
out
ds
call
mov
icebp
jnp
js
mov
mov
adc
in
pop
mov
jmp
dec
popf
data16
dec
call
(bad)
loopne
cmp
rol
inc
mov
inc
or
inc
push
mov
aaa
test
jle
jno
int
lock
aad
xchg
push
push
popa
adc
call
inc
leave
int3
rol
dec
cld
and
lea
repnz
pop
push
xchg
test
in
popa
mov
and
sub
mov
stos
cmp
jle
int
push
adc
sub
lock
sub
mov
mov
sub
pop
sti
lock
pop
or
inc
lds
xchg
push
jmp
dec
pop
in
call
push
push
sbb
fnstsw
fwait
in
fst
movs
dec
test
mov
mov
pusha
sub
dec
enter
add
cmp
mov
push
and
pop
mov
cmps
pop
call
scas
loopne
outs
mov
adc
push
js
mov
and
scas
mov
mov
leave
lods
call
ret
sbb
cmps
mov
jp
shl
cmp
fisubr
jo
je
nop
or
in
jmp
outs
or
push
cld
in
into
mov
nop
pushf
adc
retf
clc
jo
int3
mov
mov
jae
addr16
clc
sbb
inc
js
sbb
std
xchg
pop
nop
mov
das
fild
test
or
push
adc
ret
lds
inc
add
adc
or
imul
mov
mov
ins
mov
movs
jmp
adc
jbe
sbb
mov
pop
xor
(bad)
int
adc
cld
or
or
loope
popf
outs
xchg
leave
cmps
dec
enter
pop
or
push
or
adc
dec
pusha
pop
and
stos
(bad)
outs
adc
pop
mov
out
dec
jmp
mov
call
add
pusha
xlat
adc
jae
ficom
sub
aad
idiv
inc
jbe
out
cli
fidivr
mov
lock
and
cmp
stos
inc
mov
fisubr
sbb
push
pushf
inc
adc
xchg
scas
jbe
push
push
inc
inc
mov
out
cmovns
je
mov
jae
stc
mov
ins
mov
lock
mov
push
xor
fbstp
inc
jecxz
pop
int
inc
add
add
jbe
call
loope
fcmovne
in
iret
cli
addr16
xlat
retf
sub
mov
add
cmps
outs
push
shr
pop
das
sub
into
dec
pushf
jmp
icebp
aam
sbb
xchg
das
push
inc
loope
ror
(bad)
rcl
push
push
kmovw
cmp
ins
arpl
arpl
call
push
add
in
and
aam
push
add
test
fucom
push
jne
cld
dec
ror
cld
hlt
repnz
add
int
sbb
jne
subps
dec
int
xor
or
or
sbb
xor
jb
nop
jb
jle
cmp
pusha
push
push
xor
jl
loop
inc
aad
xor
ficomp
sbb
(bad)
fmul
pop
clc
js
mov
jne
xchg
stos
loopne
loope
imul
fidivr
sbb
jmp
push
cmp
mov
adc
icebp
js
int
jp
in
popa
push
leave
cmp
jge
xchg
add
ss
fs
fwait
or
das
(bad)
js
push
mov
jge
fsubp
pop
xor
ins
inc
mov
and
lds
pop
jae
jmp
fstp
fiadd
rol
xor
xor
or
test
cmps
push
mov
or
xchg
xchg
shl
inc
loopne
pop
ins
push
mov
push
mov
xchg
in
outs
clc
jno
aas
inc
repnz
in
mov
fldcw
fsub
pop
sbb
fbstp
inc
cmp
fcmovnu
push
std
into
dec
mov
jno
pop
pop
aaa
jmp
call
dec
mov
je
mov
cmp
int3
mov
gs
jmp
test
shr
mov
adc
out
and
mov
add
add
into
js
movs
sub
xor
les
mov
sub
popf
in
pop
nop
or
push
test
je
cld
and
inc
mov
sub
push
ret
inc
dec
data16
sub
add
sahf
dec
retf
xchg
add
and
test
jmp
cmp
aad
inc
or
lock
sbb
jmp
cs
sub
lahf
fwait
jo
clc
rcl
test
test
adc
push
push
mov
xor
pop
mov
inc
xor
mov
mov
aaa
cmp
ret
stos
add
cmp
fstp
call
pop
jae
sbb
(bad)
std
pop
pop
rcr
loop
cmp
mov
aaa
dec
vpmullw
xchg
or
pop
mov
sub
push
fisubr
push
cmps
dec
sub
loop
jnp
sub
or
scas
fdivrp
or
ja
lea
xchg
into
outs
mov
xor
sbb
aaa
inc
lds
mov
shl
call
cmp
adc
and
int
sub
cwde
fs
and
popf
xchg
rcr
leave
jg
js
jmp
vunpcklps
xor
mul
test
inc
dec
dec
ror
push
fcmove
jb
xchg
(bad)
sbb
mov
mov
in
add
lock
sbb
cmp
mov
pop
cmc
retf
dec
mov
pusha
imul
push
imul
or
cli
xchg
je
movs
adc
repnz
pop
stc
cld
xchg
in
ins
ja
stc
sbb
jbe
mov
leave
jmp
retf
sbb
popa
or
pop
imul
mov
adc
jnp
and
mov
xor
pushf
das
or
mov
sar
push
call
enter
js
aas
mov
lea
inc
imul
sar
cdq
push
les
push
add
lods
add
and
and
or
or
lods
in
xchg
aas
add
inc
inc
ja
mov
jge
dec
test
mov
mov
popf
jecxz
and
imul
dec
add
sti
addr16
sar
cmp
inc
stos
stos
adc
xchg
push
ret
pushf
fimul
cmp
lahf
mul
mov
lea
dec
inc
jo
jne
adc
xor
push
xchg
sbb
sub
adc
dec
inc
cs
mov
xor
cmp
mov
mov
test
jbe
arpl
mov
xchg
mov
inc
sbb
cmp
inc
xchg
das
sub
mov
add
push
mov
rcr
inc
xor
xor
call
popf
and
add
pop
int3
sub
pop
xchg
fiadd
imul
pop
imul
mov
add
add
jne
imul
retf
push
cmp
xchg
int3
mov
icebp
inc
mov
(bad)
repz
dec
retf
leave
sar
loopne
fnsetpm(287
punpckhbw
and
dec
repnz
push
ins
(bad)
loopne
rol
inc
xlat
push
loope
sahf
mov
jg
ins
clc
mov
xor
pop
mov
mov
shl
cmp
pop
cmp
push
imul
out
add
push
out
push
mov
mov
jb
int3
pushf
push
mov
mov
lock
jl
mov
enter
rcl
std
cdq
add
cld
jp
fisubr
fsubr
add
mov
loop
or
das
enter
(bad)
in
add
aaa
je
mov
jmp
imul
ror
cmp
xor
mov
jg
push
pushf
mov
inc
std
rcl
dec
push
jmp
pop
xor
add
jmp
xchg
or
dec
sbb
cld
push
out
mov
pop
ss
in
or
fs
shl
aaa
retf
int3
arpl
adc
pop
outs
dec
sbb
ins
cs
sbb
xchg
push
inc
ins
jl
daa
mov
cli
lea
add
out
inc
nop
fwait
sub
cmp
movs
or
sub
pop
mov
pop
fst
sbb
int
ins
es
lds
vcvttss2si
cmc
repz
adc
stos
leave
sbb
mov
repz
ins
(bad)
push
push
or
and
adc
inc
adc
fst
ret
ds
add
pop
aaa
cmp
push
loopne
stc
jge
mov
outs
and
bound
int3
cmp
ins
mov
push
push
fidivr
jmp
pop
imul
loop
arpl
push
gs
mov
mov
push
inc
add
jnp
pop
cmp
sub
dec
(bad)
ret
(bad)
in
ret
aas
in
mov
mov
mov
sub
out
stc
adc
test
mov
dec
jns
mov
inc
mov
or
pushf
add
jge
sbb
fisub
xchg
repnz
sahf
push
dec
fldcw
test
push
call
imul
ss
imul
sbb
mov
inc
add
aaa
dec
test
loopne
push
scas
int
jb
push
dec
sub
loopne
sub
xor
pmaxub
adc
sub
sub
loope
stos
call
xor
inc
lock
gs
icebp
stos
inc
retf
cmp
adc
popf
mov
stos
(bad)
ret
shl
scas
aaa
add
push
lock
sub
shl
pop
and
add
or
mov
cmp
xor
dec
jg
mov
in
js
stos
arpl
es
pop
xlat
scas
sbb
and
mov
mov
stos
iret
fnstenv
push
mov
out
fs
cmp
add
pop
cmc
pop
repnz
cmp
add
loope
je
(bad)
nop
lock
adc
(bad)
jmp
out
mov
repz
jbe
jmp
pop
fwait
mov
push
sbb
test
dec
mov
xor
mov
mov
test
in
ins
fisub
test
ret
rcl
aad
loope
jae
aad
ficom
in
and
mov
adc
loopne
cmps
sub
(bad)
out
fist
mov
sbb
push
jnp
mov
push
xchg
jbe
aas
ficomp
and
iret
push
imul
repnz
outs
aam
pop
sub
add
xor
or
enter
push
call
dec
daa
leave
add
sub
jge
das
fisubr
hlt
cwde
enter
sub
ds
(bad)
aad
out
imul
out
clc
daa
ror
push
sti
xor
aas
add
dec
cmp
pop
pushf
aas
gs
data16
sbb
mov
call
and
add
jbe
ret
sub
retf
pop
pop
mov
ror
loop
mov
or
(bad)
popa
xchg
addr16
inc
cmp
add
inc
inc
popa
imul
les
pop
test
iret
cmc
mov
movs
xor
rcl
fnstenv
movs
sub
cmps
je
rcr
xor
mov
and
xchg
cmp
(bad)
push
out
ret
or
retf
int
or
fdivp
cwde
movs
fistp
icebp
inc
add
pop
xchg
adc
js
push
adc
(bad)
adc
test
jmp
clc
ret
jno
ret
or
das
push
adc
outs
pop
lods
cmps
sti
sbb
lds
pop
stos
sahf
xchg
hlt
push
lods
mov
cwde
retf
out
mov
mov
jae
xchg
add
pushf
dec
xor
mov
in
jle
and
lods
cmp
pusha
push
stos
fiadd
cmp
in
jg
add
in
nop
in
stos
in
scas
scas
into
push
arpl
outs
ret
icebp
sbb
in
test
sbb
popa
test
xor
sbb
lahf
aaa
ins
xchg
test
jb
mov
je
jg
add
jecxz
push
add
pop
sub
adc
int
lea
icebp
and
pusha
sbb
sbb
push
or
aam
push
fmul
test
pop
pop
sti
push
mov
jle
cmps
(bad)
rol
jno
ja
in
xchg
mov
stos
mov
out
into
shl
xchg
test
in
lahf
shr
or
sti
pop
dec
mov
jl
mov
xor
adc
mov
adc
jecxz
les
lock
push
mov
aas
mov
mov
push
enter
movs
fild
cmp
int
icebp
fs
or
cs
arpl
mov
xor
mov
push
add
adc
pop
call
or
loopne
or
dec
hlt
add
iret
fldenv
pop
(bad)
dec
jecxz
ss
movs
shl
push
out
daa
test
xor
adc
xchg
xchg
lds
mov
jne
add
push
jge
adc
popf
xchg
xor
cmps
dec
std
(bad)
ja
push
pop
mov
js
mov
hlt
mov
cmps
pop
push
cwde
xchg
rcr
xchg
popa
jnp
rcl
iret
mov
ins
mov
das
or
iret
sbb
cmp
adc
pop
pop
stc
push
(bad)
aas
adc
add
mov
test
jno
inc
clc
xor
push
es
dec
jb
inc
bound
jae
lahf
mov
sub
fsubp
cmp
fld
test
push
sub
or
or
popa
outs
mov
pusha
mov
hlt
cli
je
jge
mov
xchg
sti
popf
add
imul
pop
fstp
test
cmp
loop
jmp
(bad)
xor
call
dec
cmps
add
rcl
pop
push
and
push
add
ins
fsubr
adc
inc
push
jne
push
gs
stc
sbb
shl
push
out
dec
imul
loop
jecxz
loopne
mov
xor
arpl
pop
ret
jp
test
mov
push
je
je
imul
pop
push
rep
ficomp
dec
pop
or
sbb
mov
xlat
fwait
popa
or
mov
aam
xchg
ins
and
xchg
call
imul
aam
xlat
ja
add
mov
pop
fcom
(bad)
sub
dec
fidiv
adc
stos
fsubr
pop
aas
retf
mov
je
out
inc
mov
in
cld
retf
inc
dec
mov
call
and
shl
jmp
sbb
mov
test
add
xchg
aad
add
dec
xor
push
aam
or
scas
fldenv
pop
cwde
jno
pop
(bad)
bnd
dec
or
pop
shr
imul
arpl
call
dec
mov
sahf
inc
mov
ja
popf
cdq
sbb
dec
mov
pushf
inc
aaa
push
mov
xchg
adc
jl
ror
jp
lea
aaa
jp
inc
rcr
and
dec
ins
mov
mov
cmps
inc
jl
sub
sahf
rcr
daa
push
(bad)
call
mov
mov
push
sub
cli
(bad)
jmp
call
scas
cmp
jnp
daa
mov
pop
xor
dec
sub
aas
xchg
sti
push
scas
inc
test
add
lds
dec
xchg
inc
bound
ds
sub
add
mov
test
mov
movs
pop
sbb
mov
test
xchg
fisub
pop
ret
dec
cmp
jns
sbb
lea
jns
(bad)
ss
adc
icebp
sbb
jecxz
mov
in
cmp
test
pop
dec
aad
inc
gs
sub
sahf
inc
inc
test
fadd
cmps
xor
mov
loop
cmps
lock
jb
stc
jle
out
pop
ins
add
mov
std
add
or
retf
pop
ds
add
imul
cli
out
mov
jl
das
sub
mov
outs
ins
lahf
daa
xchg
jmp
and
sub
or
cdq
ins
sbb
mov
mov
retf
mov
jge
add
xor
out
mov
inc
jae
pop
mov
and
outs
xchg
jecxz
fstp
jbe
jbe
dec
ja
bound
fadd
shr
inc
add
hlt
loop
dec
ins
icebp
rcr
xor
data16
pusha
es
mov
sbb
daa
inc
sbb
mov
sub
nop
(bad)
push
ret
add
repz
adc
cdq
cmp
sbb
and
loopne
cmp
jbe
das
ss
sub
sahf
lods
jo
xchg
inc
lock
test
sbb
clc
stc
neg
xchg
stos
stos
mov
shr
mov
shl
mov
cmps
pop
repnz
stos
and
stos
mov
and
mov
cmp
cmp
inc
ins
popf
xor
scas
xchg
in
jmp
jns
pop
in
(bad)
repz
jno
jbe
xor
sbb
pop
(bad)
sbb
cmp
retf
xchg
call
mov
pop
fwait
cdq
imul
fsubr
enter
and
adc
pop
pop
and
dec
cs
sub
cmp
in
ins
test
call
cmps
adc
mov
test
xchg
mov
or
xchg
or
adc
xchg
add
push
(bad)
mov
or
mov
(bad)
adc
inc
repnz
cmp
cmp
ins
xor
mov
cwde
je
arpl
push
out
mov
(bad)
into
stos
push
mov
xor
hlt
add
fisub
pop
stc
or
das
add
inc
cmp
jge
inc
mov
(bad)
cmp
fbld
pop
mov
call
outs
push
pop
and
jg
hlt
mov
test
ds
repz
mov
sub
std
cmps
add
leave
push
cmps
mov
imul
lock
jp
scas
add
sub
mov
cmps
cmp
(bad)
sub
mov
retf
jp
sub
je
xor
fdiv
lock
mov
cmps
jns
repz
fadd
in
fisub
cs
xchg
lock
jb
lea
int3
jle
enter
mov
out
fisttp
pop
das
xchg
mov
push
in
lahf
out
mov
mov
ins
and
les
xchg
aas
sti
ja
inc
xor
sbb
jl
in
xor
icebp
repz
popf
push
into
ins
adc
or
ds
daa
std
mov
out
arpl
mov
aaa
lods
jbe
dec
sbb
test
repz
out
pop
cmc
dec
push
ins
sbb
add
or
retf
les
ja
sar
pushf
shr
pop
daa
leave
arpl
jb
pop
mov
inc
lods
inc
es
imul
inc
mov
sub
add
ficom
repnz
fs
loope
mov
xor
les
mov
(bad)
loopne
inc
retf
pushf
imul
repz
mov
mov
or
mov
sbb
mov
adc
ret
(bad)
mov
pushf
repnz
pop
inc
push
mov
jle
(bad)
(bad)
pop
sub
xchg
mov
out
lea
cmp
jecxz
in
sbb
jne
das
mov
mov
cmps
mov
daa
lahf
adc
aam
xchg
(bad)
sti
loopne
push
adc
idiv
push
out
(bad)
fidivr
lods
cmc
pop
push
adc
adc
pop
mov
enter
sbb
push
pop
cmp
inc
jecxz
hlt
push
or
sbb
sti
and
sbb
icebp
adc
add
loope
iret
or
push
arpl
das
scas
outs
in
jne
in
push
dec
pop
mov
jo
(bad)
pop
rcl
xchg
inc
or
or
ja
inc
mov
adc
not
repnz
mov
pushf
mov
call
jmp
mov
pop
outs
jbe
aad
test
pop
and
push
jge
lods
mov
mov
gs
sar
fsub
push
shl
pop
jbe
daa
out
jmp
(bad)
and
retf
mov
ret
dec
test
and
fisub
cmp
dec
movs
(bad)
push
nop
cmp
(bad)
int
push
aaa
sbb
rcl
int3
clc
js
test
daa
rcr
xchg
mov
cmp
pop
ins
jb
push
shl
push
ins
adc
mov
mov
repz
dec
add
cli
and
fcomp
(bad)
xor
out
sub
cdq
aad
pop
aaa
loop
nop
(bad)
xlat
add
sahf
gs
xchg
hlt
clc
hlt
push
add
sub
pop
int
arpl
xor
leave
jge
fs
aad
in
mov
mov
scas
push
cmps
sub
pusha
mov
mov
leave
pop
xchg
cmp
sbb
inc
sub
enter
test
lock
push
sub
aaa
or
mov
nop
and
scas
cmps
adc
add
es
clc
(bad)
push
rcl
call
pop
mov
pusha
(bad)
dec
repz
inc
loope
ja
ins
push
mov
sbb
cmp
rcl
cmp
icebp
lea
lds
mov
or
test
shr
popf
int
xlat
icebp
sti
movs
mov
in
inc
(bad)
jg
fdivp
int3
sbb
lock
inc
cmps
(bad)
pop
retf
fs
pop
fld
inc
int
sbb
mov
mov
(bad)
sbb
pop
les
mov
push
lds
jge
(bad)
call
hlt
pop
xchg
sti
push
push
jge
jno
jno
mov
imul
and
mov
dec
cmp
cmp
sahf
mov
mov
fsubr
jbe
popf
jmp
outs
ja
adc
movs
push
inc
xchg
dec
rcr
cli
enter
shl
fsub
pop
addr16
imul
jg
nop
pop
or
xor
cmp
and
das
pop
mov
out
sub
loope
mov
(bad)
aad
mov
xchg
rcl
inc
les
pop
test
pop
mov
xchg
fs
push
mov
add
mov
push
hlt
aaa
(bad)
loop
mov
pusha
and
out
jno
fmul
mov
pop
aad
sbb
mov
div
mov
bound
xchg
lods
pop
cmps
jmp
mov
aaa
in
pop
mov
xlat
adc
sub
out
lods
jmp
pushf
inc
aad
mov
cmps
call
adc
jo
pop
mov
jbe
in
ret
jmp
push
test
sub
adc
push
not
jg
movs
mov
xor
test
pop
int3
mov
xchg
fnsave
inc
pop
xor
jns
mov
mov
cmp
xlat
ds
jmp
scas
sbb
dec
push
mov
mov
adc
fbld
in
and
mov
and
dec
ja
sub
sbb
add
mov
imul
mov
adc
stos
dec
mov
in
add
imul
sbb
push
leave
lds
repz
sbb
into
mov
and
xor
sub
add
shr
loop
aad
add
pop
pushf
clc
movs
xor
dec
inc
stos
clc
and
push
cmp
daa
lods
adc
push
nop
ror
cmp
xchg
fisubr
std
mov
xchg
loop
mov
pop
(bad)
xor
mov
cmp
lods
sbb
pop
mov
imul
pop
retf
jecxz
xor
lahf
aam
in
pop
jecxz
inc
mov
stos
(bad)
mov
lock
mov
jns
mov
adc
loopne
pop
sbb
sub
sahf
jp
idiv
test
and
push
cli
vpextrw
lds
mov
in
jl
loope
push
jge
leave
shl
daa
(bad)
paddsw
loope
pop
mov
sti
retf
bound
aad
out
call
popa
addr16
ror
xor
test
dec
xchg
jle
add
nop
js
rcl
dec
data16
es
ret
jb
rol
into
cmp
pop
jbe
repz
xchg
aam
cmc
jg
je
shl
sub
(bad)
adc
sub
fcom
in
(bad)
arpl
xchg
or
sub
jne
das
add
pushf
outs
ds
pop
inc
jae
jno
pop
jne
leave
int3
in
std
xchg
sbb
mov
mov
jp
je
test
scas
addr16
cmc
mov
push
xlat
pop
xchg
xchg
cli
rol
add
inc
inc
xchg
out
daa
or
mov
lock
loopne
leave
das
xor
test
push
xor
mov
in
lds
ds
arpl
fs
data16
je
jno
xor
cmp
push
jecxz
mov
mov
push
sbb
jo
mov
in
add
fsubp
xor
and
sbb
xchg
and
jo
loope
mov
mov
jno
push
push
sbb
dec
cmps
add
jmp
popf
fnstcw
and
jbe
xchg
sbb
into
repz
cmp
inc
adc
jne
dec
mov
cmp
je
stos
mov
aaa
adc
call
clc
pop
nop
fsub
mov
arpl
cmp
(bad)
add
mov
mov
jle
inc
stos
push
sbb
jb
mov
cmps
sub
int3
out
push
sub
xchg
push
repz
div
sbb
mov
adc
or
jmp
jle
repnz
jo
aam
or
and
imul
mov
inc
mov
cmp
test
fxch
jbe
cmp
lea
fs
cmp
or
es
(bad)
out
lods
jnp
mov
mov
lahf
cld
dec
aad
outs
sbb
in
aam
dec
xor
mov
and
inc
leave
ins
lds
pop
push
scas
inc
ins
retf
sub
mov
cmp
in
pop
and
mov
ins
push
lock
push
lds
pop
xchg
sar
mov
lock
hlt
cmp
jge
outs
out
cld
push
call
add
loopne
mov
(bad)
mov
push
mov
arpl
jge
call
(bad)
out
mov
repnz
xchg
xchg
jl
pop
push
aam
inc
call
and
ror
adc
mov
or
mov
cmp
shl
mov
retf
adc
mov
fcmovne
inc
add
pop
pusha
push
jnp
fcomp
jb
jo
pop
test
mov
or
je
mov
inc
adc
mov
ror
or
fsub
pusha
ja
pop
jg
push
aam
xchg
aad
mov
pop
sbb
fcmovnbe
aaa
repz
adc
and
pop
jmp
add
das
loopne
imul
mov
movs
test
or
xchg
xor
leave
je
jle
test
ficom
xor
movs
xor
sub
pop
stc
jbe
shl
data16
and
rol
xchg
sub
jle
ins
imul
push
xor
ins
jge
dec
clc
pop
into
stc
mov
call
fs
inc
add
loop
mov
sbb
ret
sti
jmp
or
dec
cwde
call
das
cld
icebp
rol
mov
cmp
jecxz
outs
mov
mov
rep
rol
jmp
jno
iret
sbb
mov
and
clc
and
adc
mov
in
je
mov
sar
sbb
adc
lods
pop
mov
adc
add
int
out
dec
test
inc
test
cdq
shl
repz
test
ret
aaa
or
add
cmc
(bad)
xlat
ds
jle
or
jmp
fiadd
push
mov
aas
call
cmp
test
push
dec
pop
aaa
push
imul
(bad)
bound
push
loope
xchg
repz
push
pusha
cmps
pop
loopne
push
add
cmp
and
fnstenv
div
xlat
mov
stc
adc
xchg
xor
mov
pop
add
test
lock
jg
popf
mov
push
sub
mov
push
mov
fwait
cmps
push
dec
icebp
(bad)
gs
(bad)
adc
inc
fisttp
dec
xor
cs
adc
addr16
xchg
add
dec
into
xor
ds
movs
mov
(bad)
dec
les
cmp
aam
stc
sti
jge
jmp
sbb
xchg
outs
jge
vcvtsd2ss
xor
pop
pop
push
ja
push
mov
mov
push
pop
push
mov
aad
fld
and
in
xchg
int
out
xchg
jle
dec
push
mov
(bad)
push
mov
movs
enter
push
icebp
movs
scas
pop
add
lods
mov
ret
mov
repnz
shr
mov
jmp
adc
mov
ins
call
je
cmc
retf
adc
pop
cld
sbb
cs
bound
sbb
sbb
pop
push
xor
aas
or
adc
data16
jmp
pop
jmp
clc
aaa
ds
add
xor
pop
adc
cmps
pop
and
loopne
pop
test
jge
mov
jb
xchg
ret
mov
fadd
mov
cli
or
mov
jecxz
push
and
mov
add
jne
and
stos
xchg
push
scas
xor
or
ss
xchg
mov
adc
pushf
mov
sub
(bad)
pop
cmp
add
inc
pop
cmp
lea
je
sbb
inc
xor
push
jecxz
movs
ret
popa
pop
cmps
aaa
jp
pop
dec
pop
clc
xor
or
cmp
sbb
ds
inc
pushf
out
xchg
jg
sub
jl
ror
scas
cwde
mov
mov
outs
jo
jne
jmp
adc
or
mov
and
shl
ffreep
xlat
pop
lea
jp
xor
dec
dec
sbb
push
jmp
je
gs
inc
mov
lahf
sub
dec
pop
movs
cdq
ja
jmp
pop
inc
push
int
pop
adc
push
cmps
pop
stos
pop
nop
cdq
jne
pop
mov
(bad)
push
push
pushf
xchg
mov
push
dec
loop
dec
push
leave
sub
sub
mov
push
push
loope
retf
out
inc
je
movs
fidiv
outs
jmp
cmp
rep
cmps
lahf
addr16
pop
adc
mov
mov
(bad)
fdivr
and
js
pop
mov
(bad)
cmp
movs
enter
int
jg
ins
mov
(bad)
jp
ja
sub
jo
pop
cmp
test
and
icebp
xchg
and
xlat
or
push
mov
push
ins
mov
test
mov
fadd
cmps
das
sahf
mov
sub
sub
iret
inc
cmp
jns
push
or
dec
or
sbb
shl
adc
mov
mov
outs
stc
adc
inc
stos
in
shl
sub
arpl
push
popf
(bad)
js
stc
push
or
sub
bnd
fcom
fld
mov
fstp
add
xor
nop
cmc
ror
call
imul
int3
jge
jmp
cmp
neg
hlt
adc
push
or
dec
or
sub
sub
fs
sub
lahf
shl
mov
inc
jbe
sub
fbld
arpl
mov
jle
add
std
fs
(bad)
in
imul
hlt
dec
cmp
test
cdq
mov
imul
loope
push
(bad)
lods
dec
jae
rol
adc
ss
pusha
push
ret
rcr
scas
sahf
mov
in
je
cmp
push
add
mov
pop
adc
cmp
sahf
inc
mov
shr
jle
or
ffreep
xor
out
or
xchg
adc
call
push
cld
inc
ret
jecxz
mov
add
pop
lods
jmp
(bad)
xchg
mov
retf
push
jmp
xchg
ins
into
adc
mov
sbb
and
and
cmp
push
(bad)
xchg
jno
mov
scas
push
sbb
add
push
(bad)
pop
or
cdq
jae
or
ins
fldenv
movs
mov
xor
stc
lahf
and
aad
push
imul
stos
and
test
(bad)
sub
es
sbb
dec
daa
mov
fsubr
xchg
jbe
pushf
push
loopne
ret
fsubr
and
add
les
push
daa
pop
jns
add
imul
into
mov
clc
jo
arpl
mov
adc
cli
idiv
add
call
push
and
pusha
cmp
push
pop
aad
jno
xchg
sub
xchg
or
in
scas
sub
jbe
push
sahf
cmps
mov
mov
jmp
sub
jmp
mov
inc
popa
test
in
push
xor
add
adc
movs
movs
jnp
cmp
daa
sbb
jg
add
popa
lods
mov
push
in
bound
div
mov
or
scas
ret
or
xchg
or
mov
into
dec
dec
lahf
push
add
adc
outs
push
test
xchg
dec
loop
cmp
sahf
pop
inc
enter
mov
es
push
inc
cmps
inc
jae
pop
shl
xchg
in
aam
pop
mov
sub
lds
pop
adc
xchg
or
dec
out
sbb
fiadd
adc
sub
fs
jae
push
mov
repnz
lods
push
in
fidiv
imul
cmps
mov
leave
sbb
popa
imul
sub
or
push
inc
(bad)
inc
aaa
push
(bad)
xor
add
cmp
push
sub
mov
jae
aas
cmp
pop
mov
push
jmp
push
in
mov
arpl
sbb
pop
aaa
xor
mov
iret
test
jp
cwde
not
mov
sub
inc
jo
cld
xor
xchg
popf
lds
mov
call
cdq
mov
stc
aaa
adc
scas
mov
jmp
xor
pop
pop
pop
fisub
stos
dec
pop
cmp
cmc
jb
jl
xlat
xor
lods
enter
or
cld
xchg
add
iret
xchg
pop
sub
fnstenv
iret
xor
or
pusha
push
sub
pop
loopne
cmp
and
mov
adc
jbe
or
jmp
xor
mov
sub
lahf
gs
cmp
sti
fcomp
ds
movs
sbb
add
aaa
sub
(bad)
xor
sub
dec
out
pop
fucompp
add
mov
lea
inc
ins
xchg
and
mov
mov
mov
push
jbe
cmc
movs
iret
shl
cmp
adc
sbb
in
mov
and
pop
push
jnp
inc
push
dec
mov
out
icebp
mov
out
test
mov
push
fadd
out
adc
push
pop
and
and
mov
cmps
clc
fdivr
stos
xchg
sahf
fwait
aad
or
cli
dec
js
cli
adc
gs
mul
out
push
sbb
mul
pop
cmp
xor
scas
mov
(bad)
retf
mov
add
popa
out
js
adc
push
lods
loope
bound
xchg
cdq
mov
(bad)
hlt
push
test
pop
jb
out
or
dec
out
pop
mov
lahf
and
xchg
cmp
pop
inc
leave
add
dec
ins
nop
inc
cmp
dec
fwait
xor
cmc
xchg
fs
push
mov
fist
sahf
push
iret
aaa
(bad)
and
(bad)
lds
in
cmp
sbb
jmp
or
out
(bad)
fld1
adc
sbb
ror
in
push
shr
push
xchg
int3
pop
sub
adc
mov
cmp
push
inc
push
ror
ja
cmp
push
xchg
scas
mov
jns
pop
push
inc
mov
mov
mov
push
fst
push
add
cmp
clc
or
xor
push
cdq
jmp
mov
hlt
fs
imul
add
dec
pop
inc
dec
adc
shl
cmp
pop
nop
iret
mov
push
push
ds
mov
jp
cmp
cmp
xor
or
les
clc
xchg
fstp
hlt
xchg
fcomp
(bad)
sbb
inc
loopne
pop
and
sub
repz
stc
lods
icebp
outs
jg
mov
imul
dec
ja
sub
jb
sbb
mov
retf
and
loope
xor
sub
mov
mov
daa
mov
mov
push
fstp
call
outs
fs
and
ret
jo
mov
cmp
mov
pop
mov
adc
(bad)
int
sti
lds
mov
in
bound
out
sub
ss
lea
fwait
push
sbb
xor
je
test
addr16
div
pop
mov
jl
push
inc
pop
inc
inc
mov
stos
or
sub
(bad)
pop
adc
pop
inc
push
popf
imul
sub
shl
cld
sub
sbb
test
cmp
push
bound
div
push
dec
jecxz
data16
call
cld
retf
dec
xchg
sbb
in
cmp
int3
sbb
not
mov
push
test
ret
movs
inc
pop
mov
out
sub
sahf
popa
dec
sbb
mov
inc
es
mov
data16
jb
dec
inc
xchg
jno
cmp
ss
(bad)
fst
aaa
xor
inc
(bad)
cmc
pop
jne
pop
xor
mov
outs
sar
xor
jge
sub
pop
push
das
test
in
pop
mov
xor
repz
retf
mov
xor
ret
or
ja
retf
cmp
test
jcxz
jo
and
cmp
out
push
loop
and
test
inc
lahf
fld
jmp
out
mov
jnp
jns
xchg
dec
in
add
or
(bad)
push
out
inc
mov
mov
pop
stc
icebp
shl
in
enter
add
adc
jecxz
push
add
fs
adc
push
fucom
or
push
dec
sub
sub
repnz
mov
pop
push
(bad)
outs
dec
xchg
xor
push
mov
shr
out
sar
lock
inc
sub
retf
cmp
mov
es
push
js
outs
mov
movs
in
ja
push
aad
xor
mov
adc
fnstcw
loopne
pop
mov
out
cmovbe
outs
pushf
mov
pop
push
sti
cmc
aam
les
inc
mov
jno
dec
retf
push
mov
mov
test
push
(bad)
clc
push
sbb
scas
xlat
cmp
je
mov
les
movntps
push
lahf
mov
mov
push
pop
imul
mov
aaa
ja
shr
ins
pop
imul
push
js
outs
push
ins
adc
jnp
stc
push
test
jecxz
ror
gs
shl
or
fisub
sti
pop
or
repz
jo
xchg
mov
mov
fadd
cmps
bound
push
cmp
and
aam
out
(bad)
lods
inc
bnd
mov
and
and
mov
(bad)
jnp
jle
popa
mov
mov
addr16
mov
retf
add
cli
cmp
rcr
push
adc
pop
jg
out
(bad)
test
sti
and
jmp
test
sahf
cmp
mov
(bad)
jmp
pusha
lahf
mov
imul
inc
cmp
das
cmp
cli
popf
push
jnp
lods
ins
mov
inc
(bad)
popf
mov
or
ret
add
jnp
es
ja
bound
pushf
repnz
dec
dec
fnsave
int
popa
pop
push
mov
xor
fcom
std
cwde
outs
lea
test
dec
pop
int3
out
mov
jmp
sub
ror
jle
xor
dec
sbb
sub
(bad)
pop
adc
mov
xchg
add
cmp
je
pop
and
cdq
jae
mov
cmp
cmp
aam
int3
mov
lods
jo
sub
push
fcmove
das
inc
or
ret
mov
imul
add
(bad)
ds
cld
mov
jp
mov
xchg
das
scas
inc
movs
mov
test
xor
pop
push
lods
daa
dec
xor
cmp
jne
out
pushf
sahf
add
icebp
loope
jae
push
icebp
cli
icebp
pop
sahf
les
stos
jmp
adc
out
pop
addr16
ficomp
cmp
ffreep
sub
dec
sbb
push
cmp
and
sbb
xchg
push
imul
sbb
inc
rcr
xchg
out
mov
pop
xchg
fs
dec
xor
fsubrp
sahf
or
loopne
and
jl
in
mov
and
pop
cwde
push
fdiv
jl
psubq
jl
adc
cmps
cwde
dec
test
or
cli
push
cwde
mov
sbb
add
mov
sbb
cmp
icebp
frstor
inc
xor
sbb
inc
cmps
and
add
retf
lds
les
xlat
jne
sub
mov
aad
mov
pop
pushf
push
xchg
jecxz
cmp
pop
jmp
or
ja
bound
in
adc
pop
stos
mov
xlat
jge
ficom
repz
mov
mov
cmp
nop
sbb
cmp
loop
lods
into
jb
inc
aaa
shr
push
xor
dec
mov
pop
jnp
sbb
daa
fistp
mov
pop
jl
or
mov
loope
inc
or
add
loop
or
cmp
jb
jle
mov
cmp
rcr
xor
push
in
cmc
xchg
les
inc
dec
mov
or
loop
pop
and
mov
cdq
adc
dec
daa
scas
cmp
lahf
(bad)
and
cli
mov
pop
(bad)
in
jo
cmp
pop
jle
mov
repz
(bad)
jno
xchg
call
and
(bad)
in
ja
popf
mov
test
loope
std
inc
cld
repz
leave
lds
jnp
mov
stos
test
ret
or
push
sub
jo
lock
out
maxps
ss
jmp
lea
inc
mov
push
test
mov
imul
push
fs
or
fcomp
xchg
lahf
sbb
dec
adc
ins
(bad)
out
ficom
or
in
jge
mov
jo
outs
imul
mov
xchg
adc
push
neg
sub
and
and
add
loope
stc
push
mov
pop
mov
mov
cmp
(bad)
push
pop
lods
pushf
mov
loopne
pop
fld
je
inc
jae
out
cli
cdq
pop
or
dec
sbb
loope
nop
lds
cmps
leave
and
xor
bound
scas
cmp
and
push
cld
sbb
xchg
jecxz
leave
test
push
sub
aad
mov
dec
(bad)
cmp
rcr
fiadd
and
inc
jne
jbe
ret
fwait
into
or
add
xchg
add
dec
pop
ficomp
dec
repnz
fcmovnu
inc
sbb
(bad)
(bad)
mov
adc
in
jno
popa
jne
push
jae
or
out
sahf
pop
lods
loop
repz
push
into
mov
mov
lahf
je
hlt
or
jbe
mov
popf
bound
mov
mov
leave
pop
jl
or
sar
inc
xor
jb
mov
pusha
test
shl
shl
inc
leave
cmp
and
aaa
(bad)
lea
dec
mov
mov
mov
sahf
out
repz
lahf
inc
std
ds
adc
imul
(bad)
cmp
add
nop
fisttp
mov
adc
adc
test
xchg
jbe
cmc
imul
mov
add
push
loopne
mov
or
in
xor
call
in
lods
mov
inc
addr16
xor
xor
movs
jmp
cli
into
mov
nop
inc
ret
out
jnp
jbe
daa
aad
mov
mov
mov
pop
adc
loop
adc
(bad)
jnp
add
inc
popa
arpl
jl
xchg
jne
sbb
mul
sub
dec
pop
pop
push
xchg
test
jle
inc
mov
xor
test
mov
pop
aad
icebp
adc
jmp
adc
pop
mov
inc
les
pop
movs
mov
xor
dec
sbb
into
add
pusha
push
popf
clc
or
fcom
pop
outs
xchg
xchg
add
in
into
fisubr
ja
aad
mov
mov
push
mov
push
mov
clc
pop
pop
jb
call
test
sti
add
inc
retf
push
fbld
inc
ds
push
dec
lock
lock
mov
cmc
addr16
mov
adc
mov
inc
inc
add
cmps
inc
mov
jp
push
out
(bad)
call
(bad)
cli
stc
xor
mov
outs
arpl
adc
loopne
nop
xchg
icebp
pop
fld
idiv
mov
addr16
es
mov
and
jg
into
mul
js
test
sub
call
jle
mov
arpl
scas
add
inc
outs
sahf
and
fld
mov
ds
es
test
mov
push
ret
aam
in
mov
or
push
mov
sbb
pop
xlat
mov
or
sahf
mov
sub
xchg
arpl
xchg
mov
out
jge
lea
aas
ds
dec
daa
jno
mov
xchg
pop
inc
aas
push
cs
in
push
(bad)
(bad)
push
dec
jae
sub
add
pusha
push
idiv
pop
or
xchg
les
addr16
movs
imul
inc
test
(bad)
push
gs
mov
outs
or
and
jmp
pop
inc
pop
iret
sbb
mov
pop
das
ss
adc
jl
cmp
ffree
lock
jb
xor
in
or
sbb
sub
cmp
(bad)
loope
ds
in
push
jmp
add
cmps
inc
stos
add
pop
inc
fadd
ror
pop
jecxz
jnp
mov
aaa
cdq
add
mov
jb
adc
popa
sbb
sub
jnp
ja
aas
mov
mov
(bad)
cs
add
test
outs
jo
lds
mov
adc
sahf
mov
inc
aas
leave
test
mov
enter
mov
popa
in
sbb
mov
ins
iret
cmp
lock
push
pop
cs
iret
add
jno
jg
js
jb
scas
das
jne
out
sti
(bad)
in
and
dec
fldpi
and
jg
jns
int
ja
sahf
gs
push
jb
push
cmp
jl
xchg
jbe
test
stos
inc
int3
out
data16
sub
jo
adc
mov
push
(bad)
dec
mov
sbb
movs
jbe
xchg
out
pusha
lods
in
or
xchg
cmp
jge
push
scas
stc
cmps
lahf
mov
bound
cdq
lds
pop
mov
push
in
and
leave
mov
in
fwait
std
pushf
pop
out
xor
cmp
mov
push
jmp
sub
inc
cmp
cwde
push
mov
mov
xchg
pusha
sbb
fdivr
bound
sbb
mov
movs
ret
or
pushf
lds
add
and
jge
sub
sar
and
jae
dec
jl
inc
push
inc
xchg
mov
test
push
sbb
aam
adc
mov
in
in
arpl
es
add
gs
push
xlat
out
mov
int
sbb
jle
xor
inc
xchg
movs
cmp
add
inc
or
iret
push
or
push
inc
pop
sti
mov
sub
mov
push
cmp
push
stos
mov
pop
add
loop
mov
aam
mov
mov
addr16
cmps
pop
or
std
and
push
adc
jmp
ja
cmp
scas
fld
je
jb
fwait
in
(bad)
stos
in
push
push
mov
dec
daa
or
xchg
je
enter
stc
mov
add
mov
pop
pop
jge
xor
xchg
das
pop
imul
jne
or
jae
push
mov
in
in
xor
dec
fiadd
jnp
js
dec
fidiv
les
inc
(bad)
mov
fistp
adc
xor
push
rcl
add
shl
int
ret
imul
loopne
(bad)
shl
mov
mov
mov
mov
mov
fst
xchg
cmp
in
jbe
sbb
inc
push
lods
and
out
ins
dec
test
xchg
les
pop
test
ja
jge
and
pop
pop
ret
iret
fisubr
inc
ret
xor
out
es
cmp
movs
hlt
sbb
mov
and
inc
aaa
mov
xchg
je
mov
mov
xor
xchg
shl
push
add
nop
and
pop
push
fnstsw
icebp
and
mov
iret
(bad)
in
in
popf
and
cmp
iret
neg
mov
xchg
inc
leave
jge
pop
add
mov
push
mov
icebp
push
fisubr
fadd
inc
push
in
lods
fadd
xor
cmps
(bad)
imul
mov
leave
inc
mov
sbb
popa
push
and
sbb
xor
mov
es
xchg
adc
sar
push
fnstsw
lock
aam
cmp
(bad)
popf
sbb
pop
adc
out
ins
icebp
push
icebp
movs
mov
xor
div
mov
jg
sub
pop
lods
inc
or
sub
pop
movs
jne
loope
leave
sbb
iret
pop
push
inc
fadd
inc
test
ror
xchg
and
bound
call
fidiv
fbstp
push
and
or
jmp
push
pop
adc
pop
add
into
sbb
hlt
or
aas
les
out
(bad)
fistp
or
fs
aas
jle
sub
push
mov
adc
out
cmp
add
mov
mov
mov
sbb
inc
dec
xchg
inc
or
sbb
(bad)
cmp
lock
inc
cmp
outs
(bad)
cmc
pushf
mov
jnp
mov
xor
fld
cmovnp
jecxz
adc
or
mov
pop
push
push
push
mov
push
cdq
xor
push
jge
mov
div
adc
xchg
mov
retf
mov
adc
xchg
push
add
sub
cld
sbb
pop
ret
sbb
and
sub
push
lods
sar
pusha
shl
inc
ret
and
(bad)
adc
add
(bad)
and
(bad)
lahf
jge
outs
jmp
mov
jmp
jecxz
inc
and
xor
icebp
xor
sbb
xor
bound
std
mov
inc
ret
mov
cmc
test
sub
jl
lock
fcomip
clc
xchg
gs
jl
fisubr
mov
pushf
ror
mov
and
fdiv
loope
repnz
nop
rcl
dec
jp
pop
xor
call
xor
jmp
and
cmp
inc
jmp
mov
pusha
lahf
mov
out
loop
xchg
adc
outs
dec
dec
in
xchg
xchg
mov
retf
mov
lods
push
and
mov
sbb
mov
adc
mov
push
ja
push
cmp
fmul
and
gs
lods
sar
aaa
sbb
adc
nop
mov
cmp
xor
mov
js
inc
and
push
and
or
mov
hlt
xchg
mov
cs
mov
call
inc
scas
aaa
xlat
xchg
cmp
cmp
or
bound
clc
push
ds
xor
dec
retf
add
and
xchg
mov
pop
push
std
loope
jmp
or
dec
std
int
cmps
or
loopne
ins
fstp
outs
retf
shr
jno
xchg
out
jno
loop
and
dec
xor
or
mov
shl
mov
dec
pusha
mov
iret
in
mov
out
add
and
mov
int
jmp
(bad)
and
outs
repz
xlat
adc
stos
fnsave
cs
cmp
movs
mov
mov
and
loopne
or
imul
lea
jns
mov
jns
jns
jl
icebp
pop
retf
pop
pop
pop
jl
repnz
xor
nop
cmp
or
cmps
inc
pop
or
fadd
ror
dec
and
lods
dec
lea
or
push
nop
lods
repz
cld
cvtps2pd
xlat
icebp
push
out
dec
pop
cmp
(bad)
retf
add
enter
add
cwde
icebp
cmps
pop
rol
mov
mov
add
inc
ds
xlat
test
loop
cmps
ror
push
or
mov
sti
pop
fcom
push
popf
or
(bad)
xchg
aad
aad
jmp
inc
xlat
cdq
test
cmp
push
(bad)
mov
dec
pop
push
adc
fidivr
and
enter
mov
jecxz
stos
and
mov
add
ss
xchg
mov
pop
out
mov
fwait
inc
loopne
jnp
cdq
das
mov
mov
das
inc
sbb
hlt
sub
jae
jbe
mov
cmp
push
lods
fsub
mov
daa
push
jnp
fs
adc
push
push
fsubr
cmp
push
and
repz
xchg
loope
and
daa
in
push
test
lods
xchg
and
and
xchg
pushf
mov
cs
jle
mov
dec
in
pop
fld
retf
add
push
sub
sub
hlt
in
push
repnz
inc
pop
push
jbe
add
push
inc
adc
mov
test
mov
ret
pop
popf
in
add
mov
retf
mov
icebp
mov
jae
inc
mov
fiadd
aad
xor
add
mov
dec
cs
pop
jmp
es
fisub
pop
pop
leave
retf
int
call
xchg
ret
pop
out
movs
mov
in
leave
icebp
fistp
outs
dec
cmps
push
test
inc
cld
inc
mov
inc
dec
bound
movs
mov
sti
rcl
sbb
movs
jecxz
or
xchg
lahf
dec
mov
sahf
add
out
add
push
cmp
add
invd
in
mov
lahf
ja
repz
lahf
adc
(bad)
adc
rcl
pop
xor
aaa
dec
dec
mov
or
add
lods
xor
mov
inc
int
add
nop
jo
std
sbb
and
pop
pop
in
out
pop
cmp
xchg
sbb
js
in
hlt
in
push
ja
sbb
stos
xchg
out
push
and
dec
push
movs
sub
push
fmul
mov
ins
inc
fnstsw
ret
cmp
sbb
pop
adc
repz
and
lods
ror
fwait
add
hlt
jge
inc
and
sub
jle
mov
pusha
das
outs
jnp
cmp
loop
cmp
(bad)
jmp
xchg
mov
push
inc
cld
mov
cdq
sub
push
imul
xor
mov
call
add
nop
dec
(bad)
iret
mov
mov
push
push
(bad)
cdq
enter
ret
imul
jecxz
icebp
ds
or
test
xor
mov
and
xchg
add
mov
ins
push
in
mov
or
mov
adc
mov
scas
sbb
movs
dec
cmps
sbb
in
dec
adc
rcr
outs
sub
mov
popa
repz
retf
mov
icebp
cwde
addr16
arpl
mov
jae
dec
mov
icebp
in
lahf
test
mov
push
cld
or
xchg
xchg
pusha
lds
mov
xchg
inc
aas
push
xchg
cmp
push
xlat
fsubr
je
push
fiadd
push
xor
(bad)
aam
fdiv
sahf
sbb
hlt
inc
xchg
adc
pop
shl
inc
test
jae
int
pop
loope
cmp
in
jno
loop
and
mov
jbe
das
les
sbb
ds
xlat
jns
mov
inc
enter
sbb
sbb
mov
sbb
leave
mov
inc
(bad)
aam
lods
les
and
scas
add
lods
inc
out
push
push
cmp
push
(bad)
sub
or
popa
inc
sub
pop
mov
jo
fidiv
pop
dec
adc
xchg
mov
mov
inc
out
sbb
mov
mov
shl
sbb
stos
movs
pushf
fmul
dec
or
mov
jnp
push
pusha
sub
pop
iret
outs
mov
add
inc
(bad)
mov
es
mov
xchg
into
cmps
popf
dec
sub
sbb
sbb
aas
sbb
cmp
ss
test
out
cmp
jns
or
mov
lds
mov
shl
jb
mov
sub
mov
jne
hlt
cmp
sub
sbb
jns
dec
or
fmul
and
in
dec
xchg
retf
jo
pop
jo
and
in
adc
(bad)
call
and
mov
sub
shl
sub
ud1
jae
je
ins
mov
das
xchg
jecxz
xor
es
dec
mov
outs
dec
lea
and
(bad)
pop
xchg
ret
xchg
ror
cmp
inc
xchg
mov
jmp
ror
out
add
or
fwait
push
xchg
lds
lahf
retf
retf
jg
and
push
das
fs
lds
iret
adc
popf
cld
sub
jmp
mov
sub
jae
mov
out
retf
mov
and
loopne
cmp
pop
sub
push
imul
mov
pop
outs
pop
sbb
and
into
xor
fdiv
loop
mov
(bad)
lods
jl
cli
mov
adc
mov
shl
jns
data16
mov
mov
xlat
mov
in
ins
out
js
ds
xchg
lods
jmp
or
pop
xchg
dec
inc
xor
ss
(bad)
aam
cli
or
cmp
or
add
jnp
clc
retf
cmp
fcomi
sbb
test
fcos
add
fadd
or
ror
mov
enter
call
mov
lods
iret
add
pop
call
mov
div
adc
ret
std
push
xor
outs
repz
pop
or
das
sti
adc
test
push
xchg
sti
inc
out
mov
pusha
daa
adc
or
sahf
inc
xor
int
retf
ret
(bad)
aad
or
pop
dec
lock
rol
(bad)
in
dec
add
jle
stos
or
jnp
sub
jp
lahf
in
int3
ret
aad
xor
mov
or
aaa
or
sbb
jecxz
in
xor
adc
lods
imul
mov
push
dec
sub
and
adc
or
nop
mov
jb
push
pop
push
xchg
sub
je
ror
loope
repz
aaa
xor
or
rcr
push
or
add
jnp
out
xchg
into
gs
int
mov
mov
push
mov
lods
jne
cmc
add
sar
jmp
pop
jmp
rcr
dec
in
pop
aas
mov
jne
mov
xchg
and
sub
ffree
dec
idiv
test
cmp
pop
and
fdivr
inc
and
dec
mov
cmp
imul
add
scas
jbe
jge
add
inc
test
enter
push
add
les
retf
ins
movs
push
loope
inc
shl
jne
xor
xlat
adc
sub
lods
daa
jmp
adc
or
pop
and
hlt
das
aam
sahf
jmp
inc
call
sbb
or
xchg
inc
nop
retf
adc
cld
movs
stos
xchg
hlt
adc
inc
or
xor
pop
mov
cmp
push
ja
neg
mov
pop
test
inc
xor
fxch
imul
stos
cmp
lea
push
ins
pop
jg
mov
push
stos
sub
inc
fiadd
scas
es
shr
inc
mov
mov
and
add
in
mov
inc
ins
dec
adc
ins
sbb
(bad)
jmp
pop
hlt
xor
jnp
add
pop
or
push
mov
sar
sahf
or
stos
mov
mov
dec
ja
sbb
push
jo
in
jne
repz
cmps
out
fs
imul
xor
(bad)
sub
and
repz
pop
mov
out
sub
cmps
sbb
lds
jmp
push
adc
add
ins
sub
outs
lds
inc
in
sbb
xor
(bad)
xchg
fdivr
inc
sub
pop
cmp
arpl
clc
lods
pop
ins
test
xor
out
sbb
lods
pusha
cmp
popf
hlt
ror
aad
pop
push
adc
xor
add
inc
xor
mov
int
jno
retf
push
inc
es
imul
clc
ret
xor
sbb
out
stc
popf
pop
xchg
mov
loope
sbb
pop
cmps
jg
xlat
shl
push
test
lds
xor
in
push
lahf
add
sbb
jo
dec
mov
jae
push
pushf
xlat
cld
imul
adc
sbb
ret
inc
fstp
adc
pop
(bad)
or
pop
les
mov
mov
pushw
test
test
sub
mov
test
dec
adc
(bad)
ds
mov
or
adc
cli
mov
xor
sbb
cmp
fidivr
retf
push
sbb
inc
and
adc
adc
adc
dec
and
fadd
lock
xchg
mov
adc
scas
push
cmps
xchg
out
pop
push
pop
jle
loopne
jbe
hlt
cmps
lea
ins
mov
and
jnp
stos
sahf
in
cmp
adc
cmc
rcl
mov
ja
xor
mov
stos
lods
pop
xchg
(bad)
jmp
adc
add
sbb
out
cmp
xchg
retf
ja
mov
mov
pop
dec
in
sbb
and
fdiv
xor
test
retf
loopne
jl
call
sub
jmp
repnz
je
inc
ins
clc
mov
adc
cmp
adc
(bad)
jle
and
popf
mov
inc
push
sub
xor
leave
push
sub
sbb
cld
test
sbb
add
nop
mov
cdq
cld
pop
push
les
jle
lea
in
pop
pop
(bad)
adc
mov
add
jg
push
cmps
call
fwait
ror
fimul
je
int
mov
mov
cmp
cli
movs
mov
jbe
jmp
inc
add
jp
xchg
mov
and
push
lock
movs
pop
je
ja
mov
out
fadd
push
in
ror
mov
nop
(bad)
dec
push
retf
mov
pop
or
mov
enter
inc
jp
rcl
popf
push
jmp
in
cmp
pusha
push
mov
nop
outs
shl
lock
int
add
(bad)
mov
push
mov
enter
sbb
sub
cs
jl
std
test
shl
or
mov
sahf
add
movs
in
jl
shr
xrelease
pop
out
mov
and
cmp
ficomp
xchg
jmp
or
or
cmp
mov
inc
lods
jge
stos
call
jnp
sbb
cmp
push
pusha
sbb
leave
mov
push
in
pop
je
push
aas
dec
inc
loop
adc
dec
mov
pop
out
xchg
xor
mov
in
mov
sub
dec
sbb
sbb
mov
push
int3
xchg
sub
jbe
and
ins
hlt
lea
mov
push
adc
mov
retf
dec
aad
push
cmp
scas
aam
push
loopne
fwait
(bad)
scas
call
neg
mov
mov
shl
mov
fiadd
dec
jl
icebp
xor
outs
pop
sub
xor
pop
js
and
pop
cmp
in
neg
test
and
xor
inc
aas
(bad)
arpl
mov
mov
hlt
xchg
jb
mov
add
(bad)
mov
xchg
pop
mov
shl
loope
iret
inc
sbb
lods
aaa
stc
or
or
jae
add
sbb
mov
add
arpl
movsx
sub
adc
(bad)
xor
add
xchg
fdivr
bound
fadd
sbb
mov
jl
pop
out
xchg
sbb
inc
jle
mov
sub
jae
pop
bound
jno
imul
sub
jmp
inc
sub
jo
ins
(bad)
into
sbb
aad
dec
lahf
adc
inc
add
imul
xchg
int3
jae
or
nop
mov
xchg
xchg
xor
pop
ss
xor
xor
pusha
xlat
retf
add
mov
mov
sbb
add
or
das
loopne
out
pop
pop
mov
sbb
cdq
dec
mov
xor
popa
cwde
xor
aaa
sbb
stos
test
xor
cmp
cmp
mov
call
in
fs
and
mov
sub
adc
fstp
dec
cmp
(bad)
pop
xor
pop
mov
xchg
rol
and
jns
sub
push
cmc
sub
jb
hlt
iret
dec
xor
add
dec
xchg
jbe
adc
out
or
ins
dec
je
(bad)
adc
out
iret
in
inc
dec
mov
test
jb
add
imul
mov
push
or
call
sub
(bad)
int
inc
xlat
pop
ins
pop
scas
dec
push
les
not
daa
repz
jb
xchg
fadd
add
aas
arpl
mov
push
and
cmc
shl
and
pusha
jp
push
push
and
scas
or
push
sbb
add
xor
mov
cmp
imul
test
and
jecxz
xor
lds
push
ins
or
jge
dec
inc
or
jmp
inc
(bad)
in
add
jp
pop
push
fld
sbb
lds
mov
mov
sub
aam
enter
test
adc
or
mov
or
pop
mov
jbe
mov
sub
push
fdivp
xor
loope
mov
mov
sar
adc
pop
and
stc
arpl
adc
inc
lods
mov
out
repz
mov
dec
push
std
mov
test
inc
sahf
pop
xor
mov
pop
std
push
push
hlt
xor
sar
out
add
les
jns
xor
mov
mov
adc
pop
or
sbb
js
inc
mov
mov
scas
repz
ret
or
jb
adc
jo
lock
mov
mov
out
cwde
cmp
mov
jge
icebp
(bad)
scas
scas
cmps
test
aam
nop
scas
(bad)
cli
imul
mov
test
jle
ret
dec
pop
js
(bad)
mov
in
mov
mov
in
(bad)
mov
test
popa
mov
adc
lods
mov
movs
and
push
iret
and
inc
jmp
jnp
in
in
retf
sbb
mov
call
lahf
pop
sub
arpl
adc
mov
stc
mov
xor
mov
leave
sti
dec
rcr
inc
push
pop
mov
dec
cmp
les
ins
stos
dec
mov
jmp
fild
xor
lods
jecxz
jg
icebp
in
fcmovnbe
and
cmps
mov
ds
cld
sbb
mul
adc
repnz
into
aad
out
or
mov
inc
test
(bad)
push
mov
(bad)
cmp
(bad)
cld
xor
inc
sti
imul
fmulp
(bad)
int
mov
sahf
mov
push
push
xchg
sahf
scas
inc
lds
adc
inc
repnz
clc
mov
lahf
in
push
inc
test
icebp
fld
adc
lock
dec
dec
or
xor
fnsave
add
jmp
mov
jbe
icebp
fld
cmps
arpl
ja
lea
add
bound
or
mov
mov
lods
retf
dec
js
jmp
mov
ins
add
cwde
addr16
scas
sbb
sbb
sub
daa
rcl
jmp
or
sub
sub
and
ja
loope
and
loope
imul
lea
dec
or
(bad)
fst
jmp
cmp
add
(bad)
cmc
rcl
test
data16
mov
pop
je
add
or
xchg
pop
jo
mul
mov
jbe
or
inc
jmp
mov
sbb
ins
and
pop
pop
xor
pop
js
es
std
sbb
mov
jp
pop
xchg
adc
cwde
adc
xchg
ficom
jae
push
movs
(bad)
jle
lods
loop
out
sahf
ss
pop
or
or
jne
jmp
lea
push
in
mov
jae
mov
or
(bad)
cmp
mov
fdiv
jo
add
xchg
in
neg
and
jo
or
jge
out
test
mov
dec
and
div
push
lods
mov
mov
mov
xor
or
shl
jbe
mov
xor
out
mov
dec
sub
add
lods
inc
cmp
dec
sar
dec
movs
jp
ins
ss
lea
call
(bad)
std
pop
adc
xor
test
xor
arpl
push
xor
ror
imul
push
mov
int3
push
out
jge
jne
ret
movs
enter
add
movs
scas
jg
mov
repnz
push
stos
ret
test
sub
imul
in
inc
pop
test
movs
fistp
clc
push
xchg
sti
and
leave
cwde
jecxz
iret
out
fst
sub
(bad)
xchg
out
pop
and
imul
sub
cmp
cmovnp
out
mov
fist
xlat
or
xor
outs
sar
mov
shl
test
dec
add
xchg
ins
dec
out
push
cmc
mov
iret
xor
lods
sub
mov
cmp
out
xchg
shl
jmp
imul
inc
xlat
or
daa
mov
xor
jno
inc
out
mov
fistp
imul
cmp
add
repz
push
sahf
mov
out
(bad)
dec
dec
or
(bad)
ds
test
sub
sub
or
(bad)
dec
and
sub
je
(bad)
js
aas
add
pop
cs
and
pop
test
stc
fcmovbe
dec
shl
movs
test
push
mov
inc
mov
xchg
cld
and
iret
pop
add
lea
inc
loop
xor
and
inc
cdq
dec
pop
push
stos
push
mov
inc
js
xchg
call
jmp
stos
dec
int
pop
sub
and
fnstenv
cld
rcr
sahf
cli
mov
jge
daa
or
popf
iret
xchg
cwde
dec
jmp
imul
loop
mov
jmp
xor
xor
nop
leave
add
outs
or
icebp
lods
lods
test
ins
sar
(bad)
test
iret
mov
(bad)
idiv
(bad)
out
xchg
cmp
dec
ficom
out
mul
inc
call
(bad)
lea
adc
sub
mov
gs
xlat
mov
dec
push
push
pop
xor
lods
and
iret
dec
jmp
xor
xchg
(bad)
retf
cmp
jno
push
sti
push
cmp
aaa
pusha
int
clc
ret
push
dec
jo
retf
or
stos
dec
pop
inc
enter
push
xchg
xchg
movs
dec
mov
repnz
xor
and
int3
leave
dec
in
mov
mov
lds
sub
mov
test
mov
fistp
cmp
mov
mov
imul
pop
xor
mov
mov
mov
jmp
or
(bad)
jg
sbb
jbe
fwait
mov
mov
sti
(bad)
push
imul
sbb
loope
add
ret
cmps
or
scas
es
mov
dec
cwde
arpl
sbb
cs
mov
(bad)
mov
sub
jno
loope
xchg
and
loop
lahf
sbb
popa
xchg
or
and
aad
inc
inc
and
in
pop
(bad)
jne
retf
mov
fmul
pop
xchg
ret
(bad)
jmp
sbb
into
retf
dec
scas
dec
mov
jle
aaa
test
fiadd
les
mov
stos
imul
xchg
pop
arpl
xor
lds
icebp
scas
and
sbb
outs
fstp
add
sti
ja
jo
or
int3
cwde
and
cmp
xor
push
inc
and
adc
loop
pop
jmp
jnp
xor
lds
xchg
ds
push
cmp
xor
(bad)
int3
in
and
outs
jmp
add
xor
push
lods
mov
add
or
adc
mov
daa
daa
xchg
popa
mov
pop
sti
in
xchg
test
jns
pushf
pop
dec
(bad)
test
adc
sar
push
push
aaa
test
xchg
xor
push
fwait
mov
aad
popa
add
xchg
sub
pop
bound
xchg
in
scas
hlt
pop
daa
into
inc
xchg
sbb
mov
sub
cmp
xor
cmc
ds
fistp
mov
sub
fnsave
add
mov
mov
mov
xlat
pusha
mov
and
not
stos
int3
and
iret
add
das
pop
push
outs
mov
mov
push
jle
or
aam
test
int
leave
pop
pop
div
jns
and
sub
dec
sbb
add
retf
xor
mov
repnz
jmp
mov
mov
push
(bad)
aaa
cmps
cmp
sub
or
xlat
pop
mov
aam
pop
rol
out
(bad)
(bad)
lds
pop
mov
xchg
cmps
dec
push
add
out
lahf
into
push
add
mov
test
sbb
dec
pop
or
enter
dec
dec
mov
push
and
jns
test
push
add
clc
stos
iret
ja
in
mov
push
inc
cs
xchg
and
jg
dec
sti
jns
add
dec
push
jne
mov
aam
jge
neg
outs
or
pop
jns
pop
popa
sar
pop
pushf
push
dec
dec
popa
lods
aas
daa
mov
push
cmp
hlt
xchg
in
cli
test
dec
lea
push
mov
nop
rcr
adc
gs
dec
sti
jle
hlt
xor
inc
call
mov
cmp
ss
inc
mov
das
cld
or
lock
lods
sar
mov
xlat
add
test
mov
js
inc
pop
imul
sbb
adc
xchg
xor
sti
hlt
icebp
cmc
xchg
or
iret
mov
mov
pop
ret
xor
sbb
int3
movs
movs
fs
cwde
pop
xlat
fisubr
jle
or
movs
sbb
xchg
mov
sub
call
or
jmp
pop
dec
movs
mov
jno
mov
cs
movs
mov
adc
nop
jge
adc
mov
add
cmc
sbb
into
cmp
push
lea
rcl
imul
stc
rol
popa
pop
in
retf
jecxz
rcl
inc
mov
mov
jno
pop
jb
cmp
inc
retf
cli
sub
dec
xchg
leave
xchg
jmp
mov
in
movs
adc
xor
or
add
test
mov
push
cmp
push
retf
sahf
add
inc
mov
and
ret
call
mov
(bad)
loopne
(bad)
inc
jmp
push
lods
aaa
jb
(bad)
outs
adc
xlat
mov
pop
xchg
mov
mov
xor
(bad)
mov
neg
push
cwde
addr16
push
les
int3
out
dec
mov
adc
pop
mov
xchg
rcl
retf
jns
inc
push
xchg
dec
mov
dec
jg
cmp
jae
aam
jge
dec
iret
outs
inc
jmp
mov
or
rol
movs
(bad)
in
std
dec
cmp
mov
fs
fild
aad
add
push
xchg
inc
push
and
mov
iret
(bad)
in
xchg
push
dec
test
mov
pop
pop
sbb
fldcw
out
movs
fist
cmp
jecxz
pop
mov
mov
sbb
cmp
data16
push
mov
sahf
or
fwait
punpckhbw
or
mov
sbb
movs
adc
je
dec
adc
dec
pop
mov
outs
mov
adc
push
jb
inc
shr
add
pushf
mov
pop
xchg
mov
sub
pop
add
xor
ret
mov
fmul
xor
(bad)
jnp
add
sti
mov
outs
sub
out
or
shl
inc
std
xchg
push
and
jmp
jne
xor
cmps
imul
or
mov
dec
xor
inc
dec
xor
dec
pop
cmp
(bad)
shl
test
fcom
ss
mov
hlt
pop
je
or
js
dec
mov
pop
retf
clc
aaa
fcomp
loop
mov
clc
jle
add
push
cld
aaa
enter
leave
push
test
mov
push
shr
cmp
adc
sub
loope
push
out
xor
sub
adc
popa
push
jl
bound
rcr
xchg
jnp
dec
retf
add
fmul
popf
sub
or
and
scas
jo
shl
mov
push
sub
push
sbb
fstp
sahf
adc
add
test
lock
test
inc
scas
aad
pop
imul
push
out
scas
stos
(bad)
jg
xchg
cmc
fisttp
lock
int3
shl
mov
sbb
or
repnz
mov
cmps
dec
jb
enter
fst
retf
mov
mov
(bad)
movs
loope
mov
fcom
cmp
add
fisub
jl
daa
and
xchg
(bad)
lds
cmp
push
shl
in
pop
sub
add
sub
push
xor
pop
inc
inc
nop
enter
sub
mov
add
jp
outs
jae
xor
test
imul
ficom
loop
add
les
lea
loope
enter
fldcw
mov
jecxz
pop
dec
xor
movs
pusha
or
fcom
inc
cmp
popf
push
(bad)
aad
out
jmp
ret
dec
js
int
and
repnz
sbb
push
add
arpl
imul
call
push
sbb
pop
push
popa
les
outs
xor
push
mov
gs
jno
and
push
fild
push
xchg
ins
stos
dec
inc
xchg
retf
adc
mov
cmp
clc
(bad)
cwde
xor
fwait
jmp
ins
pop
sub
call
mov
stc
jns
add
sub
loope
leave
loope
into
xchg
jbe
cmps
mov
sbb
lock
xchg
mov
inc
pop
test
jmp
repnz
adc
push
lods
inc
dec
xlat
rcl
neg
cld
icebp
pop
stos
stos
or
lods
inc
xor
cs
push
aad
xor
add
and
fwait
jp
lods
push
fcomi
das
xchg
pop
arpl
or
xor
mov
mov
stos
rcl
xor
adc
stc
bound
imul
sub
cmc
dec
xlat
sub
add
nop
add
out
cmp
xchg
lods
cli
clc
jg
pop
inc
mov
(bad)
cmp
pop
lahf
mov
aad
int3
lock
pop
out
out
pop
fsubr
dec
mov
fwait
pusha
xchg
out
sub
aad
sub
cmc
cmc
rcl
push
repz
ds
push
sbb
daa
adc
xor
mov
imul
sbb
call
jmp
add
jnp
adc
fcmovnbe
pop
push
jp
int3
and
add
(bad)
push
cwde
and
push
mov
inc
adc
and
sub
popa
aas
push
fld
fbstp
pop
les
mov
and
jne
ja
inc
mov
mov
mov
and
jne
icebp
add
movs
push
fwait
mov
popf
jl
lods
iret
pop
add
sbb
jle
mov
cmp
out
lahf
push
pushf
cmp
aam
xchg
mov
mov
mov
inc
dec
je
pavgb
and
sub
fucomi
lea
xor
imul
adc
leave
xor
leave
mov
(bad)
jnp
and
cmc
popa
and
xchg
jne
int3
xchg
sub
in
xor
sahf
sahf
and
adc
cmps
test
dec
sbb
xchg
fldenv
or
push
adc
(bad)
cmp
mov
test
push
fsubp
iret
cld
xchg
sub
jl
rol
lods
mov
repz
stc
inc
add
das
push
or
fcmovnbe
adc
jo
sub
adc
cmps
gs
fsubr
push
cdq
in
sti
ins
test
sub
(bad)
or
(bad)
sti
push
cld
rol
arpl
sar
push
ins
xor
scas
sbb
out
inc
mov
push
ret
adc
imul
sbb
jmp
cmps
inc
bound
call
or
dec
scas
(bad)
mov
push
mov
cs
mov
dec
and
mov
jnp
mov
and
(bad)
fldenv
fst
popa
icebp
stc
aam
clc
sub
sbb
push
mov
or
dec
adc
leave
call
inc
mov
inc
jecxz
fstp
inc
out
mov
cmp
add
jae
mov
fidivr
leave
(bad)
fwait
mov
or
inc
mov
lahf
iret
scas
sti
scas
dec
loope
jmp
push
xchg
sbb
sub
xchg
xor
inc
stos
ins
mov
adc
pushf
loopne
rcr
test
mov
mov
retf
fnsave
scas
not
in
dec
jae
imul
and
push
mov
or
div
add
dec
pop
pusha
(bad)
and
add
sub
pop
inc
loope
mov
mov
loopne
inc
mul
xchg
dec
sub
mov
js
jle
mov
mov
mov
loopne
push
mov
adc
inc
(bad)
xchg
fadd
or
mov
inc
(bad)
xchg
enter
movs
mov
mov
dec
movs
inc
cwde
add
dec
stos
push
jmp
loop
inc
sbb
sub
psrad
pop
mov
or
xchg
xor
mov
mul
repnz
out
pushf
js
cmp
inc
jp
in
lods
jae
inc
rcr
sub
push
xlat
loop
faddp
lods
push
cmps
jge
jo
pushf
cdq
retf
int
ret
call
jno
mov
jne
adc
mov
jae
pop
sbb
mov
xor
movs
jbe
sbb
fdiv
mov
icebp
mov
lods
fdiv
mov
lods
xchg
add
xchg
mov
push
pop
lahf
retf
add
adc
aam
inc
mov
int3
sahf
xor
movs
movs
(bad)
leave
push
pusha
leave
push
fcom
jns
mov
pop
jns
icebp
aad
cwde
sbb
add
xchg
xchg
pop
iret
sbb
imul
icebp
mov
outs
xchg
jae
and
in
push
mov
(bad)
push
inc
add
mov
push
sub
add
cmp
aam
cmps
mov
cwde
add
mov
push
mov
loope
movs
mov
leave
call
dec
dec
mov
ficomp
loope
pop
cmp
mov
scas
sbb
call
(bad)
sbb
dec
icebp
jbe
xor
dec
xchg
mov
inc
ins
jne
nop
adc
sbb
push
jno
jne
cmps
stos
fs
je
lea
sub
ins
xor
jmp
mov
loopne
icebp
movs
stc
lea
inc
or
sub
popf
xor
cmc
mov
jge
pop
std
bound
stc
add
cld
out
dec
push
test
adc
dec
ins
les
pushf
cmc
xor
test
retf
fiadd
fdivp
les
adc
inc
xchg
scas
aaa
add
mov
sar
test
pop
(bad)
lds
mov
ins
push
jmp
mov
mov
push
push
es
lahf
das
add
lahf
pusha
mov
ds
cmp
cmps
aam
aam
cmps
int
mov
xor
sbb
xchg
jne
and
cli
rcr
fdiv
cmps
and
add
ret
mov
add
push
inc
fs
jnp
dec
mov
jg
ja
mov
dec
lea
pop
es
addr16
movs
cdq
push
xchg
pusha
xor
mov
gs
sbb
cmps
cmp
(bad)
fldcw
cmp
icebp
mov
mov
jns
call
hlt
sbb
shr
les
aam
adc
mov
cmps
cmps
add
(bad)
mov
fisttp
push
and
inc
shl
and
sbb
push
lahf
push
test
sbb
retf
sub
inc
xchg
inc
xchg
mov
dec
adc
dec
mov
dec
xor
mov
test
iret
sbb
cli
inc
rcr
or
(bad)
mov
idiv
dec
pop
mov
pop
ret
shr
rcl
mov
ins
push
xor
out
and
pop
pusha
clc
stos
in
test
add
add
popa
mov
loope
mov
int
cdq
push
shrd
sbb
test
ror
jno
jge
clc
test
imul
pop
pushf
mov
ror
gs
test
add
js
mov
dec
(bad)
xor
sub
mov
(bad)
cmp
(bad)
leave
stos
stos
jmp
jge
push
mov
push
jp
lahf
push
mov
push
mov
jmp
sbb
jmp
pop
pop
xchg
call
xor
sbb
mov
retf
push
xchg
sbb
imul
std
sar
xchg
cmp
jl
or
push
jbe
add
sub
jge
sti
sbb
lods
sub
cwde
test
scas
into
push
inc
or
enter
xchg
jae
inc
rcr
mov
jbe
lock
aam
sub
jp
jnp
pop
shl
cdq
dec
pop
lods
cmc
sub
mov
xlat
adc
call
inc
imul
aaa
xor
(bad)
aad
sti
mov
mov
es
je
es
lahf
pop
jg
popf
into
lea
(bad)
and
pop
inc
cmc
mov
mov
cmp
loop
pop
aas
adc
inc
outs
cmps
sbb
push
sbb
dec
mov
dec
cmp
repnz
(bad)
jg
or
fsub
cmc
ret
jmp
cmp
adc
in
mov
jnp
movs
pusha
shr
cmps
mov
push
and
push
loopne
xchg
pop
fcmovne
enter
neg
push
fnsave
scas
mov
adc
mov
jl
movs
ficomp
js
icebp
push
sbb
pop
sbb
(bad)
sub
fidivr
mov
scas
aaa
push
retf
mov
fwait
in
aam
aad
xor
sbb
add
sbb
xchg
jmp
sub
xchg
test
jo
or
cld
imul
dec
bnd
ja
mov
add
fstp
inc
mov
jb
retf
cli
out
inc
aaa
rcr
xchg
mov
add
ret
mov
push
out
leave
loop
xchg
inc
dec
sbb
inc
or
inc
cmp
call
cld
in
arpl
cmps
adc
cdq
pop
mov
call
js
mov
out
popf
bound
int3
mov
cdq
scas
imul
stos
in
std
(bad)
jb
pop
lea
push
dec
sahf
in
jne
inc
(bad)
xor
pop
clc
mov
adc
sub
mov
fimul
mov
in
out
test
push
in
(bad)
mov
and
jae
dec
mov
(bad)
ja
ss
fadd
cli
shr
imul
adc
pop
es
jne
mov
sub
push
sbb
pop
or
mov
(bad)
cs
imul
cmp
push
(bad)
int3
and
(bad)
mov
jmp
mov
mov
rcl
arpl
pop
mov
lods
ret
cmp
cmp
addr16
pop
dec
mov
mov
ja
adc
xor
mov
push
jae
jmp
cmp
ficomp
fcom
call
mov
or
adc
dec
cli
aas
sub
mov
add
in
xchg
aad
adc
outs
add
xchg
inc
dec
into
ror
int
popa
ret
adc
std
xor
lods
repz
mov
syscall
cmp
fist
int
movs
push
xchg
pop
fcom
gs
jmp
mov
sti
jp
mov
inc
shl
into
xchg
xor
cmp
dec
mov
imul
call
hlt
mov
adc
mov
mov
aam
out
daa
jp
inc
scas
gs
rcr
xchg
jmp
inc
lahf
mov
outs
pushf
test
adc
sbb
jb
cmps
sbb
arpl
adc
sbb
fbld
(bad)
mov
(bad)
iret
jbe
lds
mov
mov
mov
int
cs
cmp
es
lds
or
sahf
call
fistp
inc
pop
push
sub
(bad)
lock
ins
xchg
and
jg
inc
push
xor
hlt
sbb
(bad)
mov
ret
or
ds
and
mov
scas
hlt
sbb
pop
cmp
push
jl
fadd
cmp
sub
cmp
(bad)
push
xor
fistp
sbb
cmp
cmp
mov
jmp
sbb
pop
cld
imul
outs
fwait
pop
jne
add
pop
adc
add
mov
outs
shl
push
retf
cmp
add
xor
arpl
mov
stos
idiv
add
add
retf
mov
and
sar
inc
rcr
repnz
xchg
es
ja
or
or
mov
shl
jle
and
sbb
adc
arpl
icebp
int3
sar
push
in
stos
(bad)
push
fcomi
pushf
mov
jno
iret
stos
aaa
popf
or
aas
in
adc
inc
push
xchg
stos
pop
pushfw
mov
push
push
aad
movs
pop
pushf
popa
sub
pop
cmps
or
imul
jbe
into
ror
pop
gs
cmp
sbb
sahf
inc
(bad)
or
pop
aaa
lds
mul
out
cdq
cmp
jp
(bad)
popa
push
iret
loopne
loopne
mov
add
cmp
adc
push
std
test
mov
and
or
dec
jp
mov
dec
cmc
(bad)
xlat
mov
out
jnp
aas
pop
adc
ds
fnstcw
dec
cmps
fcmovne
jge
dec
pop
xor
loope
cmp
sahf
wbinvd
pop
mov
gs
push
dec
cmp
mov
int3
sub
enter
xchg
jns
sub
out
pop
cmp
inc
xchg
cs
cmps
jl
push
cld
jle
es
mov
ret
sbb
popf
mov
call
jg
mov
xor
mov
adc
pop
xchg
xor
mov
cli
push
fs
test
imul
lahf
pop
cmps
shr
and
dec
push
push
sub
mov
ins
ins
bnd
cli
daa
movs
stc
daa
mov
call
dec
bound
and
(bad)
and
pop
lock
xor
outs
push
inc
pop
repz
out
test
xor
test
push
dec
sub
mov
sbb
mov
fucomp
mov
cmp
cmp
or
pop
(bad)
jbe
jecxz
test
inc
push
mov
dec
cmp
nop
pop
push
cmp
std
lods
sbb
shl
retf
sbb
imul
add
out
int3
pop
xor
sti
and
cwde
and
pop
in
fisttp
pushf
iret
mov
add
push
sub
(bad)
retf
inc
movs
xchg
sub
mov
inc
mov
jle
das
fcomp
push
adc
in
jmp
cmp
and
cmp
clc
sbb
push
jl
(bad)
xor
imul
xchg
lds
or
mov
cmp
inc
std
(bad)
pop
outs
test
adc
dec
push
arpl
imul
jbe
ja
or
int
add
inc
pop
stos
mov
mov
and
and
dec
push
pop
mov
bnd
repnz
mov
push
fnstsw
pop
mov
xor
jnp
(bad)
push
pop
add
mov
aam
xchg
in
pop
fneni(8087
jo
into
pushf
push
iret
dec
shr
and
fstp
in
xor
into
inc
call
movs
dec
adc
pop
outs
pushf
cmp
outs
or
jge
sub
movs
std
mov
lahf
sbb
aaa
and
ror
sub
scas
icebp
push
mov
dec
xchg
mov
xlat
sbb
pop
push
mov
pop
test
test
fcmovnb
pop
sub
or
xchg
xchg
sub
push
fld
data16
xchg
stc
fidiv
scas
sbb
mov
ds
enter
jno
xchg
jmp
push
cli
sar
je
lods
cwde
mov
arpl
ret
movs
cs
pop
push
inc
mov
jae
(bad)
test
sub
and
adc
xchg
fnsave
mov
repnz
push
pop
stos
cmp
push
(bad)
popf
mov
or
mov
cmps
(bad)
sbb
mov
or
jle
xchg
aas
pop
test
mov
(bad)
mov
aad
cmc
adc
inc
sub
sub
jb
loop
rol
fist
xchg
(bad)
imul
and
or
mov
out
jo
outs
nop
dec
dec
js
and
ret
repnz
rcr
xchg
push
data16
sub
and
jbe
dec
and
and
mov
ds
retf
enter
movs
packsswb
(bad)
movs
jbe
jo
mov
ror
and
shr
cmp
adc
addr16
rcl
cmp
pop
(bad)
jmp
xor
and
dec
sub
dec
(bad)
clc
aaa
add
push
leave
push
mul
sub
les
loopne
sbb
inc
js
sub
push
sub
mov
fist
ins
dec
pcmpeqw
xchg
sub
mov
shl
nop
ret
dec
and
jg
fisubr
out
mov
push
push
cmp
add
out
mov
xor
jecxz
jge
inc
fist
dec
pop
push
sub
dec
or
mov
mov
aaa
mov
pop
jl
xor
mov
loopne
fadd
(bad)
(bad)
inc
push
xchg
div
push
aas
jbe
inc
aam
int
jge
mov
je
mov
pusha
dec
sub
xor
mov
pop
pop
fisttp
sub
cmp
enter
push
add
adc
addr16
xchg
mov
pop
or
sar
(bad)
loop
mov
test
jl
int
pop
in
call
lahf
std
int3
cmp
cmps
add
jbe
mov
pusha
dec
push
lds
call
jns
push
jbe
mov
push
sbb
mov
add
inc
inc
js
sbb
and
mov
dec
push
or
mov
mov
hlt
sbb
daa
(bad)
mov
mov
xor
jno
rcl
(bad)
lahf
mov
call
mov
sahf
mov
inc
xor
les
cmp
shl
sbb
jecxz
int
adc
leave
mov
cmp
ins
xchg
and
gs
jmp
mov
cwde
test
das
and
mov
mov
(bad)
jns
out
xor
dec
cmps
mov
ins
stos
sbb
jo
xor
ficom
clc
adc
pop
fs
call
nop
in
jmp
adc
push
and
in
jnp
jo
enter
sub
add
adc
mov
push
xchg
mov
imul
(bad)
jb
sbb
imul
or
mov
movs
jne
test
xchg
mov
xor
pop
sub
lds
jp
pop
push
push
mov
cwde
jp
xlat
(bad)
xor
or
mov
popf
mov
adc
in
pusha
cs
mov
sbb
xor
or
(bad)
sbb
xchg
and
iret
mov
lds
add
and
sub
xor
or
push
sar
push
jns
inc
aas
cmp
rcr
jne
sbb
addr16
shl
pop
mov
scas
sbb
fcom
and
jo
retf
and
sub
xchg
test
push
(bad)
jmp
dec
sub
sbb
cmp
mov
repz
jne
adc
mov
jl
(bad)
jmp
bound
or
mov
pop
inc
call
fdiv
mov
pop
out
shr
mov
in
das
fwait
movs
(bad)
rcl
fdivr
xchg
add
jb
fstp
in
fs
and
ja
push
push
(bad)
movq
enter
pop
pop
std
jb
and
js
lea
in
cwde
stos
aas
inc
imul
gs
mov
lock
adc
fxch
cmp
inc
rcl
addr16
movs
lahf
and
mul
mov
jne
adc
dec
xlat
dec
adc
hlt
frstor
rcr
and
and
cdq
jae
out
pusha
xchg
pop
scas
outs
jb
xchg
mov
xchg
lock
xor
cmp
add
cmps
call
inc
retf
dec
xchg
das
in
mov
dec
popf
xor
std
adc
sar
ss
in
inc
sub
xchg
dec
pop
daa
or
arpl
cmp
dec
(bad)
js
mov
arpl
cli
and
dec
and
test
inc
sub
sbb
pop
xlat
ja
dec
cmp
cmc
ret
pop
test
mov
mov
jle
mov
fsubr
xor
sbb
je
adc
sub
dec
add
lds
adc
push
arpl
jb
dec
out
push
dec
jg
sub
jo
mov
ss
inc
test
mov
lds
les
inc
imul
xor
repnz
pop
outs
out
cmps
pop
push
mov
jl
push
cmp
into
aad
in
push
dec
sbb
test
inc
out
add
push
lahf
sub
aaa
sti
xor
aam
(bad)
scas
(bad)
call
ja
aas
mul
mov
lds
(bad)
js
addr16
adc
cmps
ret
sahf
inc
dec
adc
mov
lods
ret
icebp
sub
(bad)
and
cmp
push
mov
dec
(bad)
mov
mov
push
adc
cmps
push
leave
inc
or
sub
cli
dec
xor
out
es
mov
lds
fisub
add
(bad)
pop
iret
or
mul
mov
fucomip
bound
inc
clc
jmp
call
repnz
fwait
jmp
sub
cmp
fnsave
arpl
mov
xchg
dec
nop
xchg
xor
mov
sbb
push
cdq
or
and
xchg
clc
dec
dec
adc
aam
jne
aas
sahf
sbb
adc
repnz
daa
or
stos
cmp
cdq
into
push
mov
test
rcpps
fwait
sub
scas
cmp
aas
je
scas
fld
imul
dec
inc
xor
arpl
ja
data16
push
in
or
fldenv
jae
mov
vpsraw
inc
inc
cld
in
mov
fist
dec
lahf
sbb
clc
outs
push
addr16
or
mov
pop
ret
ss
or
inc
int
stos
mov
jecxz
mov
add
xlat
mov
and
mov
cmps
out
xchg
xchg
test
inc
aam
push
retf
shl
cld
stc
call
fs
inc
cmp
or
lds
cmp
aas
retf
jae
inc
mov
movs
sti
mov
dec
inc
loop
rcl
scas
and
mov
(bad)
mov
cwde
aad
cmp
(bad)
(bad)
cmc
repz
push
jae
jo
push
sahf
js
add
and
out
out
cmps
pop
dec
inc
sub
adc
outs
mov
sbb
cmp
xor
loope
xor
cld
cdq
mov
loopne
mov
jb
cmps
fst
dec
scas
sbb
push
jb
or
push
ja
adc
call
loopne
ret
mov
cmp
inc
mov
jmp
xchg
fnsave
rcr
mov
xor
into
sub
ret
mov
retf
ror
imul
rcr
push
mov
xchg
dec
shl
ja
sar
mov
mov
jge
icebp
inc
sbb
add
xor
pushf
jae
mov
mov
lahf
cmp
leave
call
or
and
and
sub
xchg
rcl
into
pop
ret
cli
adc
jecxz
call
loopne
xor
jge
fidivr
sub
js
and
xchg
(bad)
fst
pusha
dec
repz
inc
add
pop
lods
repz
dec
sbb
and
pop
nop
xor
mov
nop
xchg
sahf
cmp
pop
std
adc
es
movs
ins
gs
sbb
push
cdq
in
(bad)
retf
loop
adc
aaa
js
mov
xchg
(bad)
ja
push
stc
rol
aam
cmp
xchg
add
cdq
outs
sbb
add
js
mov
sub
push
dec
xor
xchg
xor
jbe
cli
enter
adc
cmps
aaa
pop
mov
addr16
xor
pusha
xchg
shr
sub
out
test
stos
imul
dec
dec
sub
out
xor
add
xor
shrd
jns
xor
push
cmp
setge
call
fsubr
ss
test
mov
jno
add
xor
mov
or
mov
cmp
inc
push
cmc
movs
out
data16
sub
cs
pop
les
and
fwait
(bad)
pop
add
imul
(bad)
leave
mov
mov
xor
ja
out
mov
js
sar
shl
pop
ret
out
call
inc
std
mov
clc
out
in
xor
push
xchg
dec
mov
ins
jg
inc
cvtpi2ps
mov
pop
and
mov
int
pop
or
dec
mov
int3
mov
xor
jo
leave
(bad)
push
mov
mov
jo
add
dec
inc
cmps
jge
xchg
jp
cdq
call
das
xor
aad
popf
cmps
mov
in
dec
ins
ret
mov
stos
call
out
xchg
ret
add
jmp
fnsave
movs
jns
or
scas
daa
dec
scas
pop
mov
dec
or
sub
loop
mov
xor
adc
jle
inc
aaa
xchg
addr16
inc
xchg
mov
dec
jbe
push
xlat
dec
outs
jmp
fsubr
dec
mov
stc
dec
fist
rcr
xor
out
pop
pop
ficomp
fbld
mov
or
push
inc
mov
xor
or
or
cmps
add
clc
or
icebp
lods
test
mov
and
data16
jg
pop
mov
(bad)
repz
pop
cmp
(bad)
sbb
add
pop
add
std
(bad)
movs
mov
push
fldcw
jnp
push
cmp
retf
dec
pop
scas
mul
xchg
out
xor
stos
mov
(bad)
(bad)
add
ret
popa
ja
xchg
in
fmul
ja
xor
stc
icebp
icebp
add
sahf
loope
retf
sar
adc
sbb
add
jle
daa
gs
lea
xor
loope
jle
sub
mov
cmc
or
(bad)
push
call
jmp
movs
or
pop
adc
imul
xor
cld
stos
fxam
mov
stc
push
js
cmp
es
sbb
sar
mov
pushf
cmc
and
sbb
mov
loop
fs
or
mov
xor
mov
sahf
shl
into
jle
mov
sub
xchg
(bad)
jae
mov
sti
mov
data16
push
into
cld
inc
repnz
pop
int3
and
scas
jmp
inc
fisub
stos
add
xchg
ja
push
pop
mov
sub
adc
cmp
push
(bad)
cmovne
pop
jmp
retf
jb
fadd
daa
inc
mov
in
mov
sub
and
xchg
mov
inc
shl
lea
dec
in
sub
(bad)
mov
sbb
cmps
mov
mov
ret
or
xlat
popf
jmp
mov
sub
retf
sti
jne
js
fsubrp
stc
gs
ret
xchg
or
(bad)
lds
cmc
out
popa
mov
aam
icebp
jne
repnz
ss
add
push
mov
popf
cmp
(bad)
dec
pop
mov
and
movs
xor
xchg
mov
jp
call
imul
movs
arpl
dec
imul
fst
loope
xchg
es
aaa
int3
cmps
pop
mov
repnz
retf
(bad)
aas
cmp
bound
cmps
push
aaa
and
xchg
jmp
retf
dec
mov
call
in
and
arpl
in
inc
xor
mov
fnstenv
pop
nop
hlt
into
sub
imul
inc
scas
mov
add
and
xchg
mov
sbb
mov
mov
sbb
jmp
rcl
dec
cs
not
mov
fdivr
xor
mov
lds
cmps
test
pop
bound
mov
xchg
test
xor
jl
pop
loopne
sub
push
jecxz
jl
pop
movs
lods
cmp
cs
cmp
push
ds
aad
push
ins
lahf
pop
loop
rcr
mov
ret
shl
call
mov
fild
out
shr
ins
aas
es
popa
addr16
scas
fucomp
jecxz
dec
xor
out
mov
push
fidiv
pushf
inc
repnz
cmp
mov
pop
lds
test
sub
cs
clc
bound
xchg
fist
mov
aam
mov
and
and
pop
imul
pop
mov
sahf
cmp
pop
pop
xor
stc
mov
sub
push
pop
cdq
popf
mov
jo
jae
mov
test
out
push
push
mov
test
pusha
push
jnp
sbb
cmp
outs
inc
sub
retf
jno
add
mov
sub
popa
and
add
pop
add
popa
and
outs
adc
cmp
js
cmp
adc
cmps
jl
enter
mov
fiadd
idiv
add
lds
jmp
test
push
xor
push
les
jbe
adc
enter
cmp
jbe
push
xor
inc
push
mov
jne
popa
sbb
retf
(bad)
fld
cmp
pop
xchg
cmp
jp
and
mov
(bad)
js
in
lods
push
hlt
arpl
xchg
add
rcl
pop
fsub
dec
neg
call
push
or
xchg
inc
mov
or
shr
xchg
mov
fistp
xchg
sti
jno
fisub
ficom
in
inc
adc
cmp
in
enter
cmps
loope
les
xchg
out
jge
mov
pusha
fnstenv
xor
repz
mov
(bad)
xchg
jecxz
inc
cmp
aad
ficom
rcr
cs
xchg
and
adc
in
xchg
push
pop
pop
inc
shl
mov
pusha
imul
mov
push
lds
sbb
ja
pusha
inc
jne
or
mul
mov
sub
aam
unpckhps
mov
call
(bad)
jno
xor
ret
push
in
cmp
cmp
std
inc
xchg
mov
mov
ret
xor
push
pop
outs
jo
pop
jbe
xchg
adc
outs
icebp
repnz
dec
stos
sbb
pop
lods
mov
or
jle
gs
imul
leave
sahf
mov
movs
lea
daa
mov
jg
jmp
hlt
pop
mov
jae
add
xchg
nop
push
xchg
cdq
in
add
fwait
inc
lods
inc
clc
sub
ret
mov
pop
mov
sti
jl
jnp
repz
pop
fcomp
or
sub
jnp
in
add
push
cmp
sbb
inc
jle
sahf
mov
mov
aaa
jb
and
stos
stc
sbb
retf
jecxz
icebp
push
sbb
ja
push
shr
into
in
adc
and
pusha
stos
inc
nop
sbb
dec
pop
sub
and
ret
jmp
fadd
sub
jne
or
mov
imul
out
and
jp
std
call
or
push
xchg
int3
arpl
das
and
ds
pop
cdq
add
mov
xor
xor
iret
jl
add
movs
cli
ds
dec
adc
xor
ret
popa
push
and
movs
mov
rcr
shr
jns
jo
add
sub
dec
pop
jmp
out
add
dec
cld
jmp
addr16
clc
add
daa
xchg
dec
jl
cmp
pop
xchg
dec
(bad)
cmp
lods
(bad)
jge
jo
pop
test
popf
push
xchg
xchg
and
sub
cmp
jne
mov
fisttp
mov
test
stos
call
mov
inc
or
je
inc
bound
int3
(bad)
sbb
or
icebp
(bad)
cmp
push
int
xlat
xchg
or
adc
cld
jbe
adc
add
mov
enter
pop
into
hlt
sbb
loopne
inc
jbe
or
xlat
cmp
(bad)
dec
dec
lahf
jne
xchg
xchg
mov
outs
sub
and
add
push
lods
push
jnp
pop
scas
sti
and
out
(bad)
xchg
inc
aaa
push
mov
loope
mov
out
adc
call
mov
cli
mov
dec
je
sbb
pop
lods
inc
retf
lods
add
movs
jo
pop
dec
jnp
adc
sub
mov
mov
push
(bad)
jg
jmp
pop
dec
cs
push
fstp
or
loopne
inc
les
sub
fild
mov
daa
iret
cmps
mov
sbb
dec
sub
outs
rol
imul
pop
rcr
cli
cmp
jmp
iret
cld
xor
loope
lds
sbb
loopne
mov
add
add
repnz
cwde
movs
xchg
push
mov
ss
int3
or
ret
jno
or
cwde
pop
mov
daa
icebp
dec
xchg
(bad)
bound
add
sbb
(bad)
hlt
mov
ficom
fdivr
mov
cmc
pop
add
dec
scas
(bad)
es
push
xor
jae
imul
xor
sar
pop
add
addr16
imul
mov
cmp
lds
sub
out
mov
add
hlt
mov
(bad)
sbb
lds
cmps
or
mov
lods
jns
in
aam
jle
ret
mov
popa
xor
test
and
shl
std
ja
jp
jl
push
data16
jge
push
imul
jns
sub
ja
mov
xchg
or
and
fisubr
add
jb
repnz
aas
retf
movs
stos
add
or
mov
pop
mov
pop
jmp
jbe
jmp
adc
es
mov
mov
pop
(bad)
xchg
mov
push
jbe
xor
mov
xchg
je
xor
mov
pop
add
mov
cmp
mov
inc
lods
addr16
jmp
xchg
std
jp
leave
adc
mov
shr
outs
sub
mov
add
out
cmp
ret
xor
pop
aam
xor
cld
fsubr
lods
data16
jmp
xchg
mov
mov
push
lock
xchg
sbb
shl
jns
adc
pop
(bad)
mov
add
sbb
inc
xor
pop
std
not
lock
ins
cmps
ins
push
jae
pop
cmp
ins
or
mov
push
shl
in
shl
rol
adc
add
xor
loope
jo
sub
frstor
sub
push
popf
lods
stc
xchg
cmps
inc
sub
sub
aad
daa
movs
push
add
fs
lods
icebp
retf
call
mov
pop
xchg
dec
and
xchg
mov
out
pusha
aam
inc
loope
js
jle
fdiv
jg
push
pop
xchg
xchg
sub
inc
push
cmp
fisub
xor
lods
rcl
cmp
mov
and
jmp
fwait
call
mov
add
adc
sbb
pop
ret
xor
cs
fdivr
fisttp
les
cmc
xchg
adc
clc
pop
inc
(bad)
fmul
pop
ret
cld
je
pop
fisttp
and
add
cmps
pop
sbb
jp
fsubrp
sbb
(bad)
pushf
fist
fcom
adc
into
mov
pop
imul
dec
and
ret
jge
icebp
out
push
jle
loopne
pusha
lods
je
and
lahf
aaa
sbb
lds
cmp
inc
push
stc
cmc
add
loope
lods
xchg
mov
les
push
fist
retf
and
nop
jne
dec
lea
push
fdivr
pop
sub
xlat
pop
add
xchg
jle
jecxz
cdq
push
cmps
movhps
rcl
add
call
lahf
retf
fidiv
xor
inc
push
mov
mov
leave
push
ds
sbb
pop
rcr
adc
rcr
sub
jmp
push
paddusw
xor
cdq
jp
enter
repnz
stos
xchg
push
xor
in
cmp
jp
cmp
fwait
nop
fwait
jne
xchg
ret
gs
je
arpl
(bad)
pop
and
pop
in
jb
dec
dec
arpl
cmps
jmp
aaa
std
add
pop
add
retf
mov
into
test
push
and
bound
inc
or
push
cmp
sub
sti
add
push
xor
cmp
outs
sti
cmp
adc
jge
xchg
jge
mov
sbb
and
test
fcomp
push
clc
cmp
rcr
pop
ins
lahf
ficomp
fwait
adc
(bad)
lods
xor
into
and
mov
dec
loop
mov
xor
mov
out
xchg
adc
clc
mul
shl
imul
lods
mov
sbb
dec
jecxz
adc
sub
mov
xor
mov
rol
ror
fisubr
rcl
add
dec
retf
int3
enter
fdivr
sbb
push
pop
sub
mov
and
ss
jo
movs
in
js
push
cmps
das
enter
scas
retf
cmp
nop
lahf
imul
adc
mov
dec
sahf
stos
pop
jmp
stos
add
jno
je
aad
in
mov
dec
dec
(bad)
scas
push
ja
xor
dec
push
xor
sub
adc
push
not
clc
add
fistp
pop
test
xchg
inc
cmp
jmp
shl
in
push
lahf
jecxz
dec
dec
jmp
rcr
inc
xchg
hlt
jmp
push
cmp
(bad)
ins
jl
inc
pop
jae
nop
lahf
ja
loope
shl
inc
mov
pop
adc
push
jge
jae
repnz
fisub
or
add
push
mov
js
jmp
scas
int
and
adc
outs
stc
adc
xchg
add
cdq
xor
mov
inc
xchg
ret
fistp
aam
lahf
dec
push
inc
xlat
cmp
adc
in
jb
dec
pop
dec
fcmovnu
inc
fcmovu
xchg
xor
adc
pop
adc
repnz
loopne
jae
add
out
fistp
jp
cmp
loopne
push
cs
mov
rol
or
jg
mov
xchg
in
sar
loope
imul
in
rol
push
mov
ror
test
test
pop
nop
cwde
sbb
jno
rol
add
add
mov
sub
pop
in
mov
in
inc
cmp
push
ds
cmp
jmp
scas
push
dec
jge
push
pop
sub
cmps
mov
call
xor
(bad)
sti
ds
enter
mov
sub
stos
adc
sub
std
enter
call
xchg
call
in
xchg
pop
std
out
xor
cmp
push
inc
add
scas
das
cld
loope
inc
imul
stc
lock
int
pop
jae
movs
idiv
dec
(bad)
push
xchg
dec
(bad)
cmps
aas
and
shr
movs
jg
iret
popf
jge
rcr
ins
mov
shl
cmp
retf
adc
fisttp
lea
test
cmp
fisub
popa
in
lods
inc
mov
call
adc
inc
mov
fstp
lea
inc
cmp
outs
xor
and
push
jno
add
add
es
push
jg
jmp
cmp
adc
imul
test
ret
sbb
retf
repnz
mov
inc
fnsave
sar
or
enter
mov
sub
add
adc
nop
mov
pop
mov
or
adc
scas
dec
xchg
repnz
fild
push
stos
xchg
cmps
push
test
push
jbe
(bad)
scas
into
mov
jbe
sbb
mov
xor
sar
outs
lahf
jo
jno
dec
call
sub
jmp
jle
lock
push
scas
jp
push
mov
adc
js
jle
pop
aad
sbb
mov
adc
popf
enter
fst
push
cwde
repz
ja
lods
stc
gs
pop
add
xlat
push
iret
mov
bound
shr
dec
fs
lods
xchg
imul
add
or
adc
cmps
movs
out
push
out
xor
and
xchg
mov
push
mov
or
and
cmp
lahf
sub
and
std
inc
jp
ja
xchg
adc
cmp
sti
push
xor
push
ret
mov
inc
jbe
push
lock
mov
(bad)
inc
add
push
sbb
clc
jecxz
test
repz
adc
sahf
add
je
dec
ds
imul
fdivr
mov
imul
aas
push
js
xchg
(bad)
mov
mov
mov
dec
aam
fist
mov
(bad)
push
mov
stos
add
lods
aas
cmp
fisttp
mov
outs
daa
or
or
addr16
cmp
mov
pop
adc
cmps
push
sub
inc
cs
push
pusha
and
aaa
inc
imul
dec
pop
mov
aaa
mov
push
hlt
call
rol
lods
cmp
sbb
gs
scas
mov
out
add
or
popf
push
inc
iret
dec
out
mov
ins
fdivp
push
push
pop
or
(bad)
adc
fisubr
test
fisubr
call
push
add
or
fld
repz
dec
dec
push
mov
jnp
jle
cmp
les
in
push
movs
mov
out
push
in
push
mov
adc
push
mov
push
mov
mov
movs
push
inc
jg
cmp
inc
in
xor
mov
fbstp
dec
add
adc
pusha
adc
xor
or
ror
xabort
pusha
cmps
mov
mov
ficom
ins
nop
sub
mov
pushf
arpl
test
icebp
cmp
mov
fs
das
fs
sub
push
iret
mov
push
mov
push
sub
or
fwait
rcr
inc
dec
mov
mov
sub
mov
cmc
ins
sub
scas
dec
inc
loope
pushf
loopne
sbb
pop
dec
test
imul
arpl
test
sbb
dec
aad
(bad)
push
sub
test
test
enter
cmc
ins
sub
jecxz
cdq
push
sbb
xchg
pop
stos
fcomip
xchg
stos
mov
pop
sbb
cmp
or
and
sbb
inc
js
push
or
mov
or
xlat
mov
pop
test
rcr
or
test
int3
cs
xlat
add
cmp
xchg
stc
retf
pop
sub
inc
jmp
fdiv
xchg
aaa
xor
pop
xor
adc
xor
aaa
rep
loope
rcr
bswap
dec
dec
fsubr
les
sbb
popf
daa
sbb
popf
mov
call
jns
mul
loopne
add
shl
ret
push
add
push
sti
shr
push
jmp
jmp
gs
pop
xchg
sbb
sub
mov
in
add
mov
out
dec
test
jo
mov
push
inc
fidivr
mov
loop
into
dec
dec
mov
adc
fmul
out
(bad)
loop
xor
in
aam
vpunpckhdq
nop
out
daa
pop
repz
ror
mov
xchg
sub
imul
and
scas
(bad)
dec
retf
lods
scas
cmp
iret
cdq
shl
repz
repnz
mov
xor
ror
sahf
(bad)
xlat
jnp
or
cmp
pop
cmp
mov
cmc
outs
popa
jmp
call
or
movs
imul
inc
retf
out
xlat
(bad)
popa
push
shl
test
in
out
sub
pusha
cld
sbb
pop
es
sub
hlt
push
push
adc
mov
add
mov
jno
inc
cmps
mov
xchg
loopne
dec
scas
push
and
jp
sub
mov
sub
add
push
in
xchg
xor
fild
push
hlt
jae
jae
aam
ror
sub
and
and
cmps
mov
mul
pop
jge
ins
xchg
aad
jle
pop
xor
push
fwait
mov
mov
fwait
jnp
icebp
mov
addr16
jnp
jb
jae
xor
cmp
das
pop
xor
(bad)
nop
ins
imul
je
sbb
jo
out
add
pop
and
adc
push
adc
bound
shl
(bad)
push
ins
sahf
pand
repnz
loope
in
stos
or
mov
add
or
jb
out
xchg
adc
xor
lea
fwait
jp
cmps
aas
sub
push
lods
call
add
mov
and
sub
adc
mov
retf
inc
shl
retf
xchg
es
dec
jl
lock
jne
mov
sub
fsubr
sbb
das
popf
jmp
lock
ins
retf
sub
jg
mov
sbb
das
ret
push
xor
mov
sbb
sub
xor
in
(bad)
leave
shl
mov
mov
fdivr
sub
or
sbb
lahf
mov
test
dec
sti
das
inc
mov
cmc
mov
stc
out
cdq
fwait
nop
jge
fs
ret
xchg
outs
push
out
or
movq
inc
movs
(bad)
(bad)
outs
mov
ja
(bad)
cmp
into
rcl
mov
mov
rol
ss
sti
sub
lods
retf
int
sbb
shr
aaa
outs
call
std
ret
enter
dec
sub
scas
mov
cdq
fcomp
mov
xchg
xor
pop
das
push
inc
clc
iret
jl
cmp
jmp
push
leave
dec
xor
pop
xor
jo
les
test
bound
ss
xor
popa
int
jecxz
dec
xchg
cmp
in
push
daa
xor
imul
inc
and
cdq
pop
cmp
jne
mov
fisttp
lods
mov
xor
cmp
test
pop
dec
push
xor
xor
enter
sbb
hlt
pop
cmc
hlt
xchg
test
xor
xor
jne
das
fbstp
aas
pop
dec
dec
into
jg
xor
loope
outs
add
aad
and
test
std
int
setle
(bad)
adc
cmps
iret
imul
mov
xlat
push
rcr
pop
jge
push
and
ins
popf
xchg
push
aas
pushf
mov
outs
mov
jnp
(bad)
or
xor
loope
or
mov
fldenv
sti
mov
mov
push
push
jb
loop
xchg
(bad)
stc
retf
(bad)
popf
ror
mov
fwait
mov
(bad)
imul
push
mov
int
mov
cmp
or
or
mov
mov
jno
push
inc
inc
mov
push
fbld
cwde
jp
cdq
stos
popf
mov
mov
(bad)
sub
rol
sahf
ins
icebp
pop
xchg
push
in
mov
retf
sub
sti
in
push
sub
out
cwde
push
dec
pop
and
mov
sbb
sbb
cwde
lock
icebp
ja
cdq
(bad)
dec
and
dec
push
es
stc
inc
(bad)
inc
dec
cwde
rcr
leave
pop
and
jo
pop
cld
cld
pop
mov
and
sbb
jmp
inc
sar
mov
sbb
mov
jge
jne
push
(bad)
loope
(bad)
push
fisttp
jle
cmp
push
xchg
inc
jecxz
jae
cdq
icebp
or
test
sbb
jnp
pop
lds
xor
aas
or
scas
pop
or
stos
mov
lods
fisub
rdpmc
retf
adc
xor
xchg
loopne
icebp
popa
xor
jge
push
pusha
fist
into
add
dec
sub
stc
push
fisub
aad
rcl
xchg
mov
rol
mov
ret
dec
bnd
aaa
push
ja
or
inc
push
fwait
das
xchg
sub
adc
nop
xchg
imul
punpckhwd
lar
jae
(bad)
xchg
mov
aad
sub
mov
pushf
xchg
jns
sbb
fdivr
add
les
sbb
(bad)
ins
mov
pop
shr
repnz
xchg
push
shr
dec
mov
es
jp
mov
mov
mov
mov
movs
lds
pop
les
in
sub
das
dec
sbb
leave
push
addr16
xchg
ss
sbb
repz
inc
leave
std
scas
stos
dec
cdq
xor
fst
leave
add
outs
mov
jle
inc
mov
sahf
lods
cmp
sar
ja
imul
js
es
add
shl
cmp
jae
retf
add
jge
jbe
xchg
pop
cmp
jae
push
test
popa
popa
jg
and
sbb
sub
outs
cmp
movs
mov
dec
cli
adc
outs
jmp
mov
adc
push
stos
inc
inc
add
mov
out
jb
pop
test
out
shl
shr
sbb
xlat
push
jno
into
retf
xchg
fild
mov
dec
cdq
les
push
cld
xor
dec
and
imul
pop
push
push
adc
aaa
leave
or
or
fcom
or
push
(bad)
jne
nop
xor
jp
push
jmp
mov
ins
jmp
add
pop
fimul
pop
dec
adc
or
(bad)
jbe
fadd
push
sub
cdq
mov
fsub
rol
retf
aaa
pop
bound
stos
call
cmp
popa
pop
mov
cmc
lea
fdivr
pop
or
pop
sub
mov
ror
adc
add
repz
mov
mov
or
and
jg
enter
aas
mov
rol
dec
test
xchg
dec
sub
dec
imul
add
xor
mov
fsubrp
xor
jb
xchg
clc
into
mov
clc
cmc
pop
cmps
pop
xor
inc
loopne
xchg
sbb
adc
dec
dec
nop
inc
inc
mov
in
sub
mov
push
jns
sbb
jmp
mov
ret
movs
stos
xchg
sbb
sub
dec
rcr
jmp
(bad)
mov
addr16
and
and
cli
cdq
pop
sub
loopne
inc
call
mov
mov
test
into
xor
pop
stos
add
movd
ins
or
leave
dec
rcl
out
xor
inc
dec
adc
bound
mov
pop
push
(bad)
adc
push
cmp
mov
mov
dec
pop
in
add
adc
inc
loopne
sub
rcr
test
inc
pop
pop
jae
jo
je
xchg
mov
imul
mov
in
nop
jmp
push
cwde
pushf
xor
xchg
mov
jae
add
mov
dec
std
mov
mov
(bad)
jns
cmp
pop
or
leave
sub
popf
jmp
push
pop
fdiv
fimul
jb
in
pop
adc
rcr
in
fwait
push
mov
pushf
sub
or
test
pop
and
push
enter
and
adc
nop
cmp
in
inc
pop
cmps
cs
repnz
arpl
aas
push
test
(bad)
(bad)
pop
dec
nop
data16
outs
mov
(bad)
mov
jno
shl
add
movs
xchg
cmps
jae
xor
add
call
add
fistp
jg
sub
inc
fsub
pop
inc
xor
xchg
pop
push
jne
pop
pop
mov
and
mov
movs
jns
xor
adc
jne
repz
adc
outs
mov
mov
mov
pop
imul
(bad)
popa
out
ss
cli
xchg
das
xor
mov
jne
mov
imul
cld
lods
mov
adc
mov
std
pop
sub
xchg
adc
sahf
add
fdivr
fild
(bad)
cmp
xor
and
movs
aaa
and
into
int3
push
idiv
rcr
sub
icebp
popf
push
inc
ins
cld
and
fist
push
pop
imul
jg
and
int3
lods
push
sub
test
push
pop
in
pop
cdq
push
cmp
inc
rcl
inc
or
loop
mov
xchg
jno
push
aaa
jne
sub
cmp
xor
cmp
(bad)
sub
rol
pop
(bad)
pop
icebp
icebp
fild
scas
adc
pop
pop
jmp
jmp
sub
pop
dec
dec
ja
les
push
pusha
xor
cld
xlat
add
ror
jb
lods
jle
and
lods
cmps
sahf
mov
xor
or
pop
rol
outs
push
push
mov
cwde
(bad)
mov
and
dec
test
retf
xor
xor
(bad)
outs
retf
shl
or
xchg
and
jecxz
fwait
stc
in
push
push
mov
pop
cmc
lds
xor
xor
mov
xchg
inc
push
lahf
adc
pop
push
(bad)
push
mov
inc
dec
movs
sub
(bad)
jo
ds
mov
in
ffreep
or
mov
mov
outs
jne
mov
jb
fld
sti
clc
das
jbe
dec
into
loopne
fucomi
cmp
mov
lods
and
mov
imul
test
xor
movs
mov
sahf
cwde
stos
sub
jmp
fmul
ret
push
mov
cmp
pushf
lods
jns
aad
cmp
jns
sahf
je
sub
les
clc
repnz
and
mov
push
mov
retf
lods
arpl
das
(bad)
xor
icebp
jne
adc
rcl
mov
sbb
adc
cmp
std
or
movs
inc
fiadd
jecxz
stc
mov
movs
inc
push
pop
xchg
push
add
fcomp
pop
push
(bad)
pop
out
push
jge
add
mov
cmp
mov
stc
ds
sbb
jmp
retf
clc
(bad)
xor
loopne
add
mov
repnz
popf
push
js
mov
inc
sbb
inc
mov
test
jle
add
or
stos
push
add
sub
cmp
mov
cli
stos
sub
jbe
sub
mov
mov
cli
xor
jl
test
xchg
inc
xor
(bad)
scas
mov
pop
dec
sub
jne
mov
inc
or
jp
jl
retf
mov
pop
ins
sub
adc
dec
jp
js
push
int3
push
idiv
out
sbb
stos
cld
adc
das
add
xor
mov
push
sub
arpl
das
jle
call
es
(bad)
push
pop
call
push
out
cmps
xchg
(bad)
lods
add
ss
add
add
mov
inc
sub
cmp
icebp
mov
and
sbb
sbb
aaa
or
adc
mov
out
mov
or
into
fstp
hlt
ficom
gs
add
retf
imul
fld
les
mov
lock
add
shl
movs
das
dec
imul
xor
scas
mov
and
ret
mov
mov
push
arpl
jns
adc
cmp
adc
hlt
mov
stos
fcmovu
inc
pop
adc
jle
adc
out
mul
adc
jmp
aam
push
xchg
sub
mov
repnz
ja
mov
pop
in
mov
mov
lods
enter
mov
add
pop
cmps
dec
pop
cmc
adc
fmul
repnz
dec
out
push
(bad)
hlt
es
pusha
sbb
out
and
(bad)
and
adc
sub
inc
cld
ss
xchg
or
and
retf
xor
cs
mov
(bad)
retf
and
adc
pop
test
mov
test
cli
jecxz
loopne
add
jnp
jp
loopne
sti
pop
mov
sahf
jo
jmp
mov
jmp
loop
push
xchg
std
cmp
out
hlt
sahf
fld
sbb
cmp
sub
xor
stos
mov
jg
imul
xchg
cdq
xchg
out
daa
mov
int3
sub
and
rol
sbb
push
add
pop
and
clc
iret
mov
es
sub
cdq
add
mov
ins
int
imul
sbb
xchg
and
mov
dec
shl
outs
gs
dec
mov
sub
mov
cmps
cld
ss
mov
aas
mov
movs
push
dec
pop
inc
inc
es
sub
sbb
(bad)
or
mov
loopne
xlat
add
cmp
xchg
sbb
(bad)
cmps
shl
dec
lock
add
and
xor
cdq
sbb
neg
rcl
(bad)
je
add
out
sub
stc
fnstenv
fldl2e
push
cmp
dec
mov
adc
div
mov
and
dec
(bad)
out
jmp
and
call
jge
add
mov
in
in
ds
and
clc
mov
ret
das
aaa
inc
daa
adc
jl
or
stos
dec
movs
cmp
xor
jl
cmp
icebp
int3
xlat
fdiv
out
xor
add
int
inc
mov
dec
lods
popa
rol
test
hlt
jp
xor
inc
add
dec
mov
stos
retf
outs
mov
push
pop
jecxz
mov
xchg
aam
sbb
call
imul
outs
pop
cmps
cmc
ficomp
mov
mov
xchg
shl
(bad)
out
dec
push
and
inc
push
jg
push
daa
loope
xchg
pop
pop
fcomip
push
fnstcw
call
jmp
mov
add
mov
and
in
das
mov
jle
cmp
pop
xchg
enter
mov
and
cmp
aam
sbb
mov
stos
data16
adc
shr
mov
ror
dec
sub
inc
in
sti
cwde
xchg
sub
push
xchg
sti
pop
loop
in
push
in
pop
xchg
cmp
add
inc
sbb
inc
mov
sbb
test
mov
sbb
scas
cmp
mov
xchg
pop
rcr
jmp
(bad)
nop
xchg
aaa
das
mov
jnp
cmc
call
jl
xchg
hlt
mov
test
inc
cld
into
jno
aad
ins
xchg
(bad)
add
jo
lds
cmp
in
add
add
sbb
and
cmps
dec
add
ja
jo
or
gs
jmp
push
out
dec
push
mov
dec
add
xor
movs
pushf
adc
ret
test
aam
cmp
dec
xchg
xor
popf
daa
aad
inc
test
mov
sbb
sub
icebp
xor
cdq
xchg
adc
aaa
and
mov
lods
mov
clc
lahf
jg
jp
pop
xchg
pop
mov
stos
leave
push
sbb
cmp
jo
sub
test
sbb
dec
aas
out
sub
outs
and
mov
or
sbb
mov
xchg
popf
cdq
mov
ret
stos
sbb
cmp
test
leave
adc
jbe
shl
enter
inc
sub
and
lahf
pop
inc
mov
es
cmp
sbb
pop
test
or
popf
mov
mov
cmp
aaa
cmp
(bad)
xor
mov
and
js
xchg
jmp
mov
mov
push
push
add
xchg
pop
cmp
shl
add
mov
stos
lahf
sub
lock
test
sbb
imul
cmp
fstp
jb
lahf
popf
iret
stos
and
push
aad
test
(bad)
into
mov
popf
jg
and
cmp
cmps
(bad)
sub
jecxz
jb
sbb
adc
dec
es
movs
mov
add
aaa
push
adc
jb
jle
pop
xor
adc
stos
loope
or
and
jg
jo
fs
in
dec
sub
push
popf
lahf
loopne
xorps
cs
outs
in
bound
sub
jge
push
pand
dec
call
arpl
dec
cli
push
out
mov
jns
ins
popf
cmp
loope
outs
hlt
mov
ins
mov
inc
push
test
mov
sbb
cwde
jno
adc
pop
add
inc
rol
mov
pop
push
mov
addr16
pop
mov
bound
int
shr
push
retf
ins
sbb
inc
jecxz
stc
cdq
std
adc
fdivr
ficomp
fcom
cli
add
or
(bad)
inc
icebp
rcl
lahf
test
hlt
loop
pop
or
das
cmps
lea
mov
push
int3
sbb
mov
lea
daa
scas
test
mov
jnp
and
stc
shr
aad
dec
out
jge
loop
(bad)
jge
jb
xor
pop
xchg
or
and
and
cmc
xchg
scas
sub
and
daa
or
in
les
pop
xchg
add
cmp
xlat
rol
scas
mov
xchg
mov
cmps
fdivr
and
add
mov
shr
std
sub
ret
aad
jno
nop
mov
jge
pop
or
push
dec
daa
mov
sbb
fdivr
or
clc
(bad)
ffreep
call
ja
pop
into
jge
and
cmp
add
sbb
addr16
fwait
daa
rcl
mov
mov
sub
jae
addr16
adc
mov
jae
adc
adc
jmp
and
sbb
pop
out
adc
ja
out
add
xor
ss
fidivr
outs
pushf
popa
pop
pop
pop
test
int3
xor
pop
stos
pop
push
sub
fadd
in
mov
pop
or
retf
fist
mov
sub
dec
jl
fbld
lods
push
dec
cdq
les
stos
aad
out
jne
into
lahf
sbb
mov
sbb
cmp
or
int3
add
xchg
mov
xlat
imul
aam
jl
pop
pop
test
neg
inc
cli
xchg
retf
cdq
inc
test
mov
fldcw
sbb
sbb
adc
fistp
stos
pop
call
adc
les
in
adc
jbe
hlt
cmp
xor
cmp
popf
neg
inc
dec
cmc
test
push
fdiv
nop
jg
and
into
xchg
fwait
jmp
and
add
pop
ret
cmps
int
jno
hlt
adc
adc
sbb
out
pop
jmp
dec
int3
xor
mov
lods
mov
cmc
xchg
sti
jns
stos
xor
sti
push
xor
mov
ins
fisttp
or
jl
je
xor
(bad)
mov
cmc
add
call
push
ss
je
scas
out
call
sbb
cwde
cmc
std
sub
js
iret
js
jmp
test
xchg
bound
fst
pop
mov
xor
mov
jmp
and
cld
push
aam
das
mov
daa
inc
or
mov
aam
push
aaa
ror
sahf
loope
clc
inc
add
dec
loope
jle
jnp
fistp
pop
push
loopne
lods
jnp
and
cwde
stos
jno
pop
cmp
cmp
mov
stc
loop
cmc
sub
sub
cmps
xchg
or
mov
sub
xor
cdq
xchg
fsubr
mov
xchg
out
fimul
mov
pcmpgtb
shr
push
push
imul
in
loope
xchg
call
sbb
sahf
or
mov
pop
test
movs
push
(bad)
(bad)
sti
sbb
jb
call
sbb
dec
imul
les
dec
call
enter
aaa
fs
ror
cmp
(bad)
pop
out
aas
iret
mov
push
ss
sub
push
xor
xor
shl
fisttp
inc
lods
mov
and
imul
jecxz
inc
ins
mov
sbb
ret
mov
fwait
pusha
jo
dec
and
call
sbb
v4fnmaddps
xchg
cmp
cmp
pop
mov
xor
or
push
push
jmp
data16
mov
arpl
mov
mov
mov
mov
dec
cli
xchg
sbb
cmps
or
iret
hlt
mov
mov
xchg
dec
xor
mov
inc
dec
push
mov
sub
pop
or
mov
pop
mov
mov
test
icebp
addr16
movs
fimul
nop
and
sub
cli
or
lea
nop
mov
lahf
in
sub
sbb
push
adc
sbb
pop
mov
mov
sahf
sahf
jb
lock
jmp
iret
jp
dec
jne
xchg
rol
mov
push
jge
xchg
xchg
in
push
ja
popa
mov
jae
movs
sbb
pop
xor
pop
cmp
mov
dec
mov
les
inc
mov
sar
mov
(bad)
into
cmps
push
push
dec
add
push
jle
out
pop
mov
rcl
push
dec
xchg
cmp
and
fldenv
aas
jecxz
loop
rcr
sar
sub
fstp
pop
sbb
cs
mov
cmp
cdq
lahf
dec
push
sub
(bad)
push
call
xor
fld
div
jecxz
mov
jns
jno
outs
pop
loopne
add
test
fisub
aad
cmp
lock
cmp
xor
sar
nop
leave
sahf
jae
sbb
cmp
add
push
xchg
outs
cmp
dec
dec
xchg
mov
and
jle
dec
les
sbb
pop
push
les
mov
loop
jae
sub
xor
test
xor
mov
adc
out
outs
sub
imul
int
outs
rol
mov
fst
xor
leave
test
lahf
scas
mov
xor
jb
sub
scas
ret
jg
ins
into
sub
cwde
mov
pcmpgtd
in
imul
leave
or
lods
xor
lock
xchg
and
pop
pop
mov
fld
push
pop
(bad)
nop
mov
addr16
lods
iret
ret
pop
xor
inc
lea
xor
sbb
repnz
fldenv
fild
jo
lahf
mov
or
cmp
adc
fwait
loop
sub
jnp
das
(bad)
sbb
inc
inc
lods
jb
push
loop
push
xor
fmul
mov
sub
push
jmp
call
cld
cmp
xlat
and
pop
daa
in
jg
fcomip
clc
mov
mov
and
pop
and
push
(bad)
nop
call
cmc
xchg
shr
sahf
mov
mov
cdq
(bad)
retf
mov
push
dec
cmps
mov
pop
sub
push
adc
adc
jbe
inc
sbb
fwait
pushf
fsubr
sub
jl
xchg
mov
adc
push
ficom
push
retf
dec
std
mov
push
sub
mov
or
xchg
movs
stos
xchg
test
in
and
or
add
inc
mov
pop
std
fs
in
push
stos
int
push
dec
repnz
sbb
or
mov
mov
scas
and
(bad)
es
bound
addr16
jnp
mov
ins
cwde
loopne
ficomp
sub
js
adc
out
popf
pop
mov
retf
int
or
rcl
in
call
imul
and
in
je
movs
adc
push
sahf
inc
mov
or
jb
scas
jl
pushf
rol
js
adc
lea
outs
jp
cmps
jle
sbb
mov
lods
cdq
mov
sub
lds
loopne
clc
push
lea
fwait
push
cmp
push
add
mov
add
and
push
inc
pop
ss
and
push
xlat
out
pop
fsub
out
xlat
ret
fadd
cmp
sbb
push
xor
xor
push
(bad)
js
fwait
das
push
stos
and
mov
into
fwait
out
adc
sahf
cmp
xlat
std
push
mov
add
or
mov
(bad)
mov
enter
pop
xor
xchg
adc
jae
or
jecxz
add
xchg
sub
mov
inc
mov
fidiv
or
push
jns
retf
loopne
pop
dec
test
leave
cmps
push
stos
fs
sub
aaa
mov
shr
cmp
je
mov
frstor
test
mov
stos
ds
hlt
mov
and
mov
nop
(bad)
mov
pop
mov
mov
add
sbb
in
movs
(bad)
mov
sbb
int
aas
ins
stos
pop
inc
mov
dec
jmp
shl
mov
or
call
mov
xor
dec
retf
cmp
push
cwde
push
hlt
movs
inc
and
pop
cmc
ret
push
dec
fs
cmp
pushf
(bad)
mov
xchg
sbb
test
dec
lods
add
inc
sbb
and
cmp
inc
sbb
test
dec
xchg
fs
lds
lods
cli
sti
inc
(bad)
cmp
adc
sti
and
cld
mov
lahf
xchg
sbb
scas
sub
rcl
jne
xor
icebp
or
in
inc
sbb
leave
sbb
arpl
mov
xor
mov
mov
cmp
sysret
icebp
bound
pop
sbb
int
repnz
scas
push
inc
hlt
repnz
mov
jb
push
sbb
adc
jmp
aam
push
xor
bound
shr
xor
push
mov
sbb
xchg
pop
(bad)
loope
inc
cmp
test
xchg
mov
lahf
loope
xchg
cmp
jge
mov
mov
fsubr
adc
sub
sti
xchg
cld
add
and
hlt
sub
cdq
cmp
dec
or
xchg
mov
add
shl
pop
jns
ret
and
ss
leave
inc
xor
push
div
fdivr
loop
(bad)
mov
shl
js
hlt
push
sbb
addr16
in
mov
std
pop
or
jg
mov
les
cli
push
add
inc
(bad)
cmp
in
mov
dec
push
js
push
add
cmp
ds
sub
pop
lds
add
daa
jmp
pop
stos
push
nop
repz
in
xchg
stos
jmp
in
cmp
mov
pcmpgtd
mov
or
or
fwait
les
daa
push
pop
fild
sub
cmp
cmp
mov
les
xor
jmp
xor
in
mov
adc
scas
stos
inc
push
xlat
adc
inc
das
mov
sub
jnp
pop
test
aad
sbb
mov
mov
rsm
push
push
out
mov
or
and
pop
dec
mov
push
adc
sbb
mov
mov
outs
test
mov
shl
int
out
mov
sub
maskmovq
mul
loope
add
sbb
inc
xor
jmp
bound
cmp
adc
mov
dec
push
out
(bad)
xsha1
cmps
dec
xlat
sub
or
daa
lds
(bad)
jmp
xchg
das
adc
cmp
into
cmp
addr16
sub
push
xor
sbb
dec
mov
jae
aad
xchg
push
mov
pop
scas
fisub
add
dec
jne
sub
pop
inc
pop
push
jl
adc
xor
xor
out
loopne
leave
cmps
mov
mov
xor
dec
dec
inc
cmp
mov
dec
repnz
jl
jecxz
in
jmp
not
fdivr
retf
mov
aad
test
push
retf
jmp
mov
mov
repz
outs
pop
pop
pop
les
mov
mov
or
mov
ror
mov
movs
test
shl
test
dec
adc
fcom
jo
add
sbb
add
(bad)
mov
dec
jno
add
(bad)
jmp
sti
fcomp
mov
sti
sub
imul
pop
out
cmp
loopne
stos
add
rcr
pop
call
js
jmp
cmps
lods
sbb
dec
cdq
xchg
ss
ret
or
sub
jae
sahf
add
fwait
mov
push
and
jmp
and
ja
pop
sub
retf
movs
mov
cmc
xchg
dec
mov
js
ret
mov
xchg
cld
inc
test
das
lahf
pop
push
in
gs
stc
inc
repz
(bad)
retf
hlt
das
inc
ins
jnp
push
mov
mov
jmp
cwde
inc
hlt
fnstcw
pushf
mov
and
cmps
push
loope
pop
gs
shr
cmps
sub
scas
sub
sbb
fisttp
mov
(bad)
mov
int3
pusha
sub
pop
out
jg
pusha
sub
mov
xor
inc
inc
push
pop
addr16
imul
inc
cwde
(bad)
add
mov
shl
pusha
int3
xchg
ins
fnstenv
call
pop
mov
bound
push
jle
mov
test
test
call
out
inc
xor
out
es
push
push
cdq
add
in
retf
aad
retf
dec
(bad)
sbb
mov
jb
(bad)
sub
add
mov
pop
pop
test
sub
call
arpl
push
sbb
cli
pop
je
mov
mov
aam
(bad)
jle
add
stos
adc
rcr
sub
mov
aam
leave
xchg
mov
ins
and
push
and
test
inc
(bad)
leave
jbe
test
inc
(bad)
gs
sub
adc
mov
dec
inc
pop
pusha
int
rol
add
call
add
cdq
or
loope
push
das
or
mov
fbld
inc
je
dec
stc
push
xchg
retf
ins
test
cmps
scas
imul
int3
sub
in
sub
xchg
jp
fstp
mov
sub
pop
mov
data16
cld
fst
mov
aas
in
addr16
mov
sbb
mov
jnp
adc
sbb
push
(bad)
pop
xchg
add
sar
push
and
sub
mov
enter
rol
xor
loop
and
out
jae
xchg
or
(bad)
aam
push
adc
mov
stc
and
and
xchg
xlat
cwde
stc
sub
std
call
cmp
imul
ror
adc
cmp
mov
mov
sbb
stc
pop
jecxz
adc
pop
mov
mov
xchg
push
jmp
mov
xor
shr
pop
std
inc
jbe
dec
xor
mov
add
mov
jo
in
call
push
and
aas
adc
or
xchg
cmp
jge
add
mov
outs
loop
cmp
inc
or
or
mov
mov
cmps
inc
fist
cmp
fild
je
and
scas
cmp
dec
mov
add
pop
cmp
fwait
mov
mov
sub
in
xor
or
push
bound
add
add
jp
out
inc
in
jo
(bad)
mov
xor
mov
inc
rol
lock
data16
mov
jns
push
add
mov
xchg
inc
mov
inc
inc
dec
mov
sahf
pop
push
push
mov
mov
ins
cli
push
cwde
adc
sar
jns
and
mov
inc
jle
cmp
add
scas
xchg
jp
dec
xor
xor
movs
and
fimul
xor
(bad)
ds
fdivr
jecxz
jmp
test
or
mov
out
sub
sub
push
enter
aas
out
hlt
stos
mov
retf
mul
into
in
jp
loopne
call
push
(bad)
scas
mov
inc
pushf
cmp
jns
addr16
ds
bound
mov
stos
mov
sub
mov
icebp
int3
jno
jne
arpl
pop
mov
pop
adc
dec
cmp
jle
sbb
adc
cmp
test
mov
fwait
push
nop
sbb
out
psubw
movs
fimul
outs
outs
out
push
addr16
jge
add
pop
aad
add
cwde
adc
push
aad
fadd
lods
stos
push
outs
cs
pop
push
shr
out
and
in
call
cmp
xor
and
(bad)
mov
mov
ret
cmps
test
scas
sub
and
mov
fnstcw
sti
and
push
outs
jg
sahf
je
adc
cwde
enter
repz
test
jmp
jg
outs
popf
std
jmp
test
enter
cmps
push
fst
pop
jns
test
dec
jp
inc
pop
call
adc
mov
daa
pop
mov
add
test
mov
add
pop
push
and
imul
mov
push
pusha
jp
mov
adc
rcl
arpl
pop
loop
push
stos
int
cmps
xor
(bad)
sbb
enter
mov
ins
xchg
(bad)
mov
or
pop
ret
out
jne
jmp
(bad)
in
aas
das
enter
loopne
test
dec
xor
or
ins
popf
mov
jl
fwait
cwde
or
addr16
enter
daa
jmp
mov
jl
loopne
sbb
pop
jmp
push
loopne
ficomp
push
rcr
cmps
push
mov
or
jbe
sbb
jb
mov
mov
mov
mov
sub
in
ins
in
sub
inc
stos
lods
pop
dec
aam
cs
and
inc
dec
jbe
ins
cwde
push
sahf
addr16
mov
fs
add
sbb
aas
dec
or
push
push
jl
das
xchg
out
jns
ror
xchg
cmp
sahf
cmp
ss
cmp
fbld
adc
adc
pop
sbb
test
mov
enter
cmp
pop
loopne
and
iret
jg
rcl
or
iret
jge
jb
or
mov
inc
mov
outs
push
sub
adc
push
clc
in
fbld
cs
inc
cmp
pop
iret
ss
(bad)
mov
push
or
rol
cmp
pop
pop
test
mov
mov
jns
or
push
outs
lea
inc
mov
and
retf
jl
inc
mov
ficom
jl
aam
add
into
sub
enter
push
or
xchg
cli
mov
rcl
xchg
mov
mov
sbb
lods
pop
add
enter
rol
push
outs
push
and
lods
sub
sub
and
call
retf
(bad)
xchg
mov
pop
dec
sbb
movs
sahf
js
adc
dec
push
mov
fucomp
lods
lods
jns
popa
cmp
cmp
ins
stos
mov
outs
xlat
pop
sti
jae
psubb
push
adc
mov
sub
int3
adc
sbb
mov
cdq
mov
loope
add
add
and
sbb
jo
jnp
leave
inc
inc
(bad)
fadd
adc
(bad)
imul
dec
cmp
idiv
push
aam
fcmovb
fadd
jne
lahf
repz
cmp
(bad)
aas
xchg
les
push
jns
addr16
mov
cmp
jmp
in
xchg
jmp
and
xchg
inc
jle
jmp
mov
pop
cmp
(bad)
or
out
dec
lds
ror
in
jne
xchg
daa
call
mov
mov
xor
mov
in
mov
mov
jge
test
jno
xor
push
sbb
sbb
call
mov
out
jge
fdivr
cmp
(bad)
and
xor
mov
or
aad
xchg
jno
dec
leave
call
fidiv
cwde
ja
push
xlat
jle
enter
test
fs
(bad)
cmps
cli
mov
inc
fwait
jae
add
sbb
pop
jmp
repnz
(bad)
sbb
and
jne
pop
mov
xchg
ror
lahf
ins
(bad)
cmp
unpckhps
sbb
rol
and
mov
add
or
sub
ja
cmp
or
pop
in
imul
int
mov
jne
std
xchg
push
scas
loop
fiadd
call
xchg
ret
pop
mov
call
cwde
mov
jo
in
xchg
iret
jae
inc
cmc
xor
test
sbb
(bad)
jns
fsubp
cmps
xor
cmp
jbe
or
fisub
loop
lock
mov
imul
sahf
pusha
mov
push
into
ds
push
jae
nop
mov
dec
(bad)
push
iret
or
adc
mov
push
mov
inc
fnstsw
xor
lods
(bad)
jae
(bad)
jmp
imul
push
push
sub
fidivr
mov
nop
mov
mov
arpl
push
sbb
fwait
lds
sti
repz
or
mov
and
in
cmp
pop
popa
and
or
xlat
mov
fisub
jae
mov
sbb
arpl
scas
mov
call
xor
popa
and
cmp
lahf
ret
mov
mov
cmps
push
fisub
ins
arpl
out
(bad)
adc
loope
pop
sbb
iret
lock
cli
fsubr
out
sub
sbb
cld
adc
je
sti
mov
cmp
pusha
mov
and
push
jae
pop
sub
cli
fwait
bound
scas
jb
and
sbb
fist
in
retf
push
js
retf
ret
into
hlt
push
out
pop
sub
(bad)
mov
ss
jmp
inc
sub
dec
add
nop
cmp
inc
xchg
mov
cld
sub
push
retf
xlat
and
adc
mov
test
adc
lea
dec
sub
cmp
and
or
xchg
icebp
mov
mov
push
retf
dec
js
inc
lds
pop
mov
push
push
cld
in
pop
add
fwait
inc
adc
mov
popf
in
lds
call
push
fdiv
ins
nop
(bad)
(bad)
mov
xor
fwait
aam
dec
xchg
add
jecxz
es
fst
pushf
out
outs
add
and
push
test
mov
pop
adc
xchg
in
jg
mov
mov
imul
les
neg
jno
cs
gs
(bad)
arpl
push
inc
push
cmps
shr
cld
ret
xor
xchg
or
rcr
sub
xor
sub
dec
jne
pop
or
mov
and
cli
out
and
jp
mov
cmc
pop
cwde
sbb
jecxz
mov
sub
cmp
dec
fstp
ins
inc
repz
mov
mov
(bad)
push
ins
mov
call
in
cmp
cdq
mov
mov
lods
sar
cwde
push
push
adc
push
popa
ins
aaa
in
outs
push
test
(bad)
mov
mov
call
aad
and
pop
mov
jge
lock
jns
in
jl
cmp
pop
or
(bad)
mov
cmp
(bad)
xlat
out
lock
mov
and
inc
stc
das
hlt
add
fwait
sbb
ror
pop
js
jnp
mov
sti
mov
pop
mov
cmp
(bad)
arpl
out
sub
arpl
aaa
mov
xor
pop
repz
into
mov
rcl
mov
test
jle
dec
and
idiv
icebp
xor
dec
cmp
lock
movs
in
add
push
add
push
xchg
pop
push
pop
jecxz
mov
dec
sti
mov
push
stos
push
dec
jmp
nop
out
(bad)
mov
xchg
int3
aad
out
dec
cmp
std
mov
xor
div
aad
enter
jle
pop
push
mov
inc
mov
and
loope
sbb
mov
jle
mov
mov
cs
test
enter
scas
call
fidiv
jecxz
js
loopne
jmp
push
push
push
adc
push
das
adc
xlat
in
out
mov
xlat
or
aaa
jle
inc
je
lock
pop
add
and
icebp
inc
mov
sbb
pop
clc
pop
sub
dec
movs
cmps
ja
ss
inc
xchg
xlat
mov
and
fist
push
mov
fwait
mov
jno
mov
sbb
jb
je
(bad)
push
call
cdq
test
sbb
mov
cmp
aas
imul
jecxz
jmp
or
rcr
add
aad
std
cmps
js
ret
and
mov
xor
jo
cmp
les
cld
inc
add
xchg
pop
add
pop
or
inc
ss
addr16
mov
call
imul
int
popf
add
and
mov
adc
jecxz
xor
icebp
int3
xor
lods
fnsave
adc
adc
dec
movs
retf
mov
sbb
scas
mov
out
xor
inc
scas
cwde
pop
dec
push
or
cmp
adc
shl
aad
loope
lods
and
outs
int3
imul
jge
and
repz
dec
sub
sbb
sbb
sti
lods
int
outs
js
push
add
dec
push
(bad)
dec
push
cmp
or
in
jb
popf
cs
hlt
inc
mov
dec
js
fs
mov
add
aad
push
sbb
add
adc
fisub
sbb
jl
xchg
lahf
enter
inc
adc
stos
or
dec
jne
arpl
aam
xor
jns
scas
mov
lahf
hlt
cmps
jno
mov
jbe
mov
inc
mov
ss
imul
inc
push
icebp
out
push
leave
neg
pop
sbb
cmp
aad
es
fcomip
push
mov
push
pop
(bad)
push
mov
loop
inc
popf
xchg
add
retf
rol
vpunpcklbw
enter
call
std
jne
les
pop
fistp
and
aaa
hlt
push
lods
std
nop
add
inc
and
pop
sub
icebp
rol
test
daa
loopne
jle
pushf
jo
pop
mov
(bad)
in
iret
add
in
scas
jns
inc
movs
xor
mov
mov
ss
(bad)
in
nop
cmp
push
mov
fs
push
ds
cmc
pop
(bad)
in
mov
enter
aad
pusha
or
leave
clc
mov
jl
ret
loopne
ins
addr16
or
sbb
and
out
dec
add
jne
push
sub
loopne
sti
dec
xor
pop
int
mov
jg
loope
mov
std
cmc
fnstcw
xchg
add
pop
mov
or
icebp
cmp
dec
test
xor
les
inc
inc
jne
cmp
std
or
and
test
sbb
test
inc
and
push
mov
inc
fsubrp
sbb
mov
sbb
aad
lods
test
inc
add
jo
sub
or
js
cld
fsub
popf
push
mov
pusha
sbb
xor
icebp
pop
call
xchg
push
mov
add
push
imul
jmp
mov
add
shr
add
cmps
loop
cmp
xchg
test
dec
scas
sub
cmp
add
in
ins
jae
dec
(bad)
jecxz
stos
mov
js
add
repz
pop
out
mov
loop
pop
inc
xor
mov
outs
mov
mov
jmp
xchg
mov
adc
sbb
test
mov
imul
ss
aad
retf
sub
add
fwait
sbb
inc
cmps
jle
ficomp
addr16
in
aaa
push
test
lock
push
mov
jno
js
sub
out
mov
xchg
mov
or
push
pop
adc
mov
mov
gs
leave
pop
inc
in
(bad)
and
pop
pop
dec
inc
jle
mov
push
jge
ja
mov
sbb
test
xchg
out
xchg
fcmovb
popf
xor
stos
jle
dec
or
loop
add
push
inc
sbb
inc
push
retf
cmp
aad
or
aam
cld
or
cmp
arpl
push
std
ror
loope
mov
cli
(bad)
repz
mov
cdq
shl
lea
dec
bound
call
sbb
pop
ror
mov
jae
scas
jp
sub
jb
shl
add
jp
loope
ins
cmp
ja
sub
and
and
jle
pop
cld
lds
fadd
out
pop
and
sub
xchg
bound
gs
cld
stos
stos
int
cdq
ins
leave
shr
aas
push
repnz
bound
pop
sbb
push
cmp
data16
sahf
sub
call
inc
(bad)
fucomip
and
enter
sbb
mov
inc
inc
cmp
div
dec
inc
adc
stos
adc
imul
push
mov
sub
add
pop
cmp
pop
fs
add
sub
retf
shr
int3
jnp
js
js
sbb
scas
std
inc
xor
mov
xor
cmp
cmp
ja
call
inc
ror
bound
out
xor
cmp
loop
ss
(bad)
rcl
xchg
pop
out
push
cmps
gs
xlat
sub
sahf
lahf
adc
adc
xchg
jo
push
cli
and
adc
cwde
and
loop
add
repnz
xchg
ror
xor
ds
test
test
ss
add
(bad)
push
mov
mov
or
ficomp
cmp
scas
call
and
js
push
push
inc
jecxz
repnz
and
push
rcr
fisttp
mov
mov
(bad)
std
aaa
in
ror
add
sbb
outs
int
dec
test
cmp
test
xlat
pushf
fadd
scas
sbb
mov
xor
pop
cmp
pop
daa
sub
cmps
xor
out
cmp
cmc
sbb
sbb
popf
pushf
xchg
sbb
dec
cmp
sub
push
push
and
clc
outs
xor
push
iret
mov
(bad)
fucom
xor
mov
cli
xlat
int
repnz
jb
and
sbb
mov
xchg
icebp
lahf
mov
ja
push
pop
jo
ret
push
jmp
mov
ds
test
pop
inc
sti
shl
cmp
jge
jnp
cmps
clc
stos
int
in
mov
cmps
in
imul
test
retf
int3
rcr
mov
jbe
movs
sub
mov
and
jo
ss
push
mov
push
mov
test
push
scas
add
ficomp
fs
stos
hlt
test
(bad)
icebp
jbe
cmp
xor
mov
inc
cmc
loope
std
aad
loopne
test
cmp
jb
sbb
xchg
mov
jns
adc
fiadd
add
cmp
daa
add
out
jg
pushf
mov
pusha
(bad)
icebp
and
or
mov
jnp
int
loopne
or
xchg
out
sbb
xchg
rol
in
sub
into
iret
pop
mov
(bad)
in
outs
and
push
or
jb
int3
add
mov
push
dec
push
movs
sub
mov
mov
ja
pop
shl
(bad)
push
dec
cmps
push
jl
not
xor
fisubr
cmp
mov
fcmovnb
es
call
je
dec
mov
sbb
pop
sti
movs
daa
jne
mov
jp
ds
int
fwait
adc
pop
in
mov
test
cmp
mov
xchg
inc
jns
add
shl
fmul
sbb
jge
out
test
pop
in
inc
xor
or
fs
iret
jl
or
xchg
mov
int
jne
lods
sahf
xchg
test
dec
sahf
cld
mov
es
mul
cmp
cs
call
(bad)
arpl
pop
cli
ret
stos
ret
pop
cmp
cdq
mov
data16
int
in
xchg
movs
xor
in
loope
sahf
jmp
mov
ins
out
xchg
sub
cld
lock
pop
gs
jb
clc
ja
sbb
xor
mov
(bad)
aad
pop
jmp
sub
add
jl
push
(bad)
popa
out
mov
dec
clc
ss
mov
js
push
cs
mov
iret
clc
ret
add
mov
xchg
xlat
das
jl
mov
adc
(bad)
rcl
and
add
dec
mov
out
shl
cmp
cmps
rcr
das
cmp
mov
lods
and
sbb
mov
call
lods
outs
jb
xchg
xor
pop
loope
pushf
daa
pop
xchg
pop
call
jb
add
inc
mov
mov
ret
outs
mov
ror
(bad)
inc
or
ss
mov
int
and
aam
push
shl
pop
cld
push
xchg
bound
arpl
es
cmp
sbb
leave
cmp
fmul
or
mov
(bad)
cmps
push
mov
xchg
mov
lea
mov
stos
sbb
add
xchg
dec
das
stc
xchg
call
add
test
ret
cmp
mov
xchg
push
push
outs
lods
dec
sbb
mov
pop
mov
addr16
push
cmp
cmp
pop
aaa
rol
rol
sbb
xchg
mov
xchg
mov
sahf
movs
movhps
sbb
cmp
dec
cmp
movs
outs
xlat
pop
fsub
mov
pop
aam
add
ret
mov
(bad)
sbb
add
jg
cmp
jg
shl
sbb
rcr
mov
mov
cmp
mov
aaa
dec
imul
movs
and
pushf
rol
xchg
js
lock
mov
stos
test
movs
cwd
loop
push
xchg
mov
or
or
cmc
lock
jae
inc
adc
ret
sub
mov
pop
test
shl
push
fwait
mov
retf
mov
pop
test
jmp
add
mov
sahf
mov
imul
fbld
jns
sub
xor
cs
inc
sub
lods
mov
push
mov
mov
pop
pop
cmps
jle
mov
dec
and
cmp
jge
cmp
cdq
pop
xor
leave
inc
into
xor
xchg
mov
mov
popa
loop
fmul
imul
inc
stos
sahf
fwait
mov
push
mov
mov
push
dec
push
sbb
lods
inc
dec
sub
push
inc
loop
xchg
pushf
lahf
icebp
pop
dec
push
mov
cli
out
in
and
outs
es
mov
out
jo
sahf
push
shl
(bad)
cmp
aas
jns
nop
mov
jns
inc
imul
dec
stos
ret
mov
pop
add
add
and
in
cmp
je
jmp
mov
fcmove
adc
(bad)
mov
(bad)
(bad)
daa
fld
icebp
sbb
test
aam
addr16
pop
adc
out
jns
lea
push
inc
pop
int
push
mov
or
mov
mov
mov
mov
push
mov
add
sub
(bad)
cwde
test
mov
(bad)
stc
leave
js
dec
scas
lods
mov
iret
shl
mov
out
push
push
sbb
fld
call
jno
mov
xor
fs
xchg
push
lock
bound
sub
lea
mov
or
arpl
mov
popa
cli
(bad)
iret
jmp
das
jne
sub
lea
push
adc
(bad)
stos
enter
xor
call
xor
rol
fidivr
repz
ficom
gs
push
push
jl
sub
in
aad
mov
sub
jae
mov
push
add
imul
adc
sbb
pusha
adc
push
daa
jbe
loop
xchg
in
ja
cmp
dec
cmp
sbb
stc
popf
test
xchg
mov
pop
jl
(bad)
lock
call
or
push
sahf
jnp
ficomp
pusha
retf
in
call
scas
mov
cmp
adc
ja
sbb
xchg
adc
jg
push
pusha
popa
push
mov
sti
push
mov
ret
outs
aas
jmp
pop
push
and
mov
sbb
aaa
data16
push
cmps
fcomp
and
adc
int
xlat
stos
pop
sbb
cmps
add
mov
repz
jecxz
mov
adc
(bad)
fist
jne
inc
cmp
fild
mov
jmp
push
shl
xor
sbb
pop
add
das
sub
adc
inc
xor
and
scas
xchg
ja
and
test
mov
or
push
in
mov
movs
mov
(bad)
jnp
imul
add
pop
jbe
mov
ret
xor
popa
loope
xor
jmp
adc
aaa
push
sahf
xchg
jle
test
mov
pop
iret
mov
pop
mov
mov
arpl
inc
lock
sar
std
xor
cmp
mov
jmp
xchg
adc
mov
fwait
jnp
dec
cs
jno
scas
add
call
repz
pop
js
adc
out
mov
adc
repnz
push
movs
call
shl
xor
ins
adc
dec
lock
dec
test
sub
fdivr
in
add
push
mov
mov
cmovae
xchg
popa
cdq
mov
xor
sub
push
inc
imul
test
sub
mov
cmp
mov
push
int3
cmps
leave
enter
mov
pop
in
cmc
jb
adc
and
dec
adc
pop
adc
and
cmp
pop
pop
sbb
fnsave
sti
cmp
push
in
pop
or
jl
inc
loopne
xchg
xchg
fwait
mov
pop
(bad)
cmp
(bad)
stc
(bad)
mov
xchg
out
data16
test
rcr
mov
sub
inc
mov
jmp
fild
cwde
dec
sub
dec
daa
retf
out
adc
push
fldcw
int
call
mov
clc
ja
xchg
pushf
ins
cli
test
(bad)
xchg
cmp
les
sti
sbb
dec
push
jne
or
je
sub
lahf
sti
add
mov
test
mov
movs
mov
int
nop
adc
xchg
xchg
test
iret
add
push
scas
stc
ret
push
adc
outs
fwait
xchg
mov
ror
adc
pop
jmp
jno
cmp
cmp
mov
out
sti
fwait
fs
out
retf
dec
jbe
or
dec
frstor
adc
test
aaa
push
dec
loop
test
(bad)
push
mov
scas
mov
add
sti
repnz
ds
or
iret
push
(bad)
div
push
jno
jb
push
jmp
adc
cmp
mov
cmp
adc
and
pusha
test
adc
jns
lods
sbb
cdq
aas
fisubr
xchg
push
rcl
adc
arpl
fimul
sbb
sbb
pop
push
outs
pusha
xchg
jae
mov
and
mov
xor
pop
pushf
pop
jb
dec
test
mov
inc
ret
cmp
iret
sbb
out
arpl
sbb
and
call
pop
xor
and
iret
mov
jecxz
scas
jg
inc
pop
mul
ss
push
sub
cmp
loopne
xchg
iret
mov
push
pushf
jo
cmp
lock
das
push
es
push
ins
pushf
fnsave
mov
mov
shl
daa
fist
out
aam
cmp
loope
pop
sbb
les
sbb
and
aaa
pop
inc
loop
jns
xor
inc
cli
dec
adc
scas
(bad)
mov
nop
movs
sysenter
aad
xchg
jo
sub
scas
sbb
xchg
icebp
cmc
mov
fistp
push
shl
cmps
arpl
fnsave
and
adc
pop
imul
or
pop
xor
(bad)
data16
push
cwde
pop
stos
aaa
xchg
xor
push
mov
mov
ja
cmp
xor
xor
dec
pop
push
adc
jg
pop
(bad)
retf
ja
cli
inc
dec
pop
add
mov
push
cmp
xchg
not
xchg
lock
or
push
fmul
xor
sbb
icebp
mov
ins
dec
(bad)
cmc
jmp
ja
cmp
test
cmc
mov
call
mov
mov
xlat
das
cmc
lods
out
jmp
dec
pop
gs
sbb
mov
fnstsw
scas
fldenv
xor
cmc
lock
js
push
push
inc
leave
pusha
ret
test
push
inc
and
xor
std
jno
add
adc
adc
add
scas
xchg
pop
(bad)
mov
mov
mov
movs
sar
aas
pop
and
inc
jae
jns
cwde
(bad)
sti
cmc
xchg
stos
pop
jb
addr16
(bad)
or
(bad)
hlt
icebp
std
mov
fdiv
xor
ins
aas
mov
inc
cmp
adc
rcl
add
cmp
and
call
lods
mov
lods
in
mov
cmp
jno
jae
int3
xchg
fistp
aas
inc
ret
jle
inc
cli
div
or
xchg
int3
cmp
adc
mov
sub
in
and
push
(bad)
jo
in
(bad)
not
dec
sub
cmp
fild
lods
into
(bad)
mov
xor
es
or
push
adc
imul
(bad)
xchg
push
dec
jge
xlat
cmp
push
and
out
pop
loopne
cmp
xchg
retf
repnz
xchg
jnp
inc
xchg
sbb
pop
and
dec
pop
into
daa
push
cmp
jp
stc
inc
adc
scas
rcl
shl
pop
ret
and
jp
cmp
fwait
push
dec
jmp
cld
nop
shl
jo
push
jae
in
aad
test
in
cmp
in
sbb
mov
sar
push
or
adc
xor
bound
cmp
adc
call
add
out
fwait
imul
mov
fistp
dec
push
fsubr
push
push
pop
xchg
mov
jb
loope
jo
add
(bad)
cmp
popf
add
xchg
add
(bad)
jmp
shl
mov
and
bt
je
inc
lods
cmp
jg
cmp
call
sbb
call
stos
fstp
mov
rcl
(bad)
sub
jp
(bad)
mov
push
ret
retf
mov
dec
sti
div
popa
int3
sti
das
add
push
mov
push
fisttp
sbb
movs
jmp
sub
imul
sub
lahf
repz
dec
sub
jmp
mov
shr
inc
add
sbb
inc
jecxz
shl
cli
cs
loopne
(bad)
es
pop
je
xchg
aaa
adc
add
test
sbb
fcmovu
and
inc
mov
aas
cmp
adc
imul
xor
sbb
(bad)
fsubr
cmc
out
push
outs
sub
gs
ins
(bad)
sub
inc
ja
sbb
push
lea
ret
and
mov
jg
push
loope
jle
in
and
adc
add
mov
test
inc
pop
test
pusha
mov
call
mov
xor
lahf
jmp
fcmove
push
fwait
mov
inc
iret
dec
xchg
fisub
sbb
lods
pop
cmp
mov
mov
fnstenv
mov
pop
loop
and
or
or
call
sbb
cmps
mov
test
cdq
xchg
jmp
xchg
retf
cmps
leave
push
fbstp
sar
push
out
or
out
xchg
cmps
aaa
push
pop
jne
sub
pusha
retf
movs
cmp
rol
(bad)
jecxz
xor
pop
xchg
cmp
add
mov
xchg
out
and
ja
add
js
cmp
pop
mov
hlt
ror
push
jl
loope
push
(bad)
movs
scas
jecxz
jb
imul
js
aad
cmp
fmul
mov
js
dec
inc
jae
mov
(bad)
cwde
mov
ficomp
add
fs
pusha
mov
inc
repnz
and
add
les
(bad)
retf
shl
inc
and
stos
sbb
sub
xor
mov
inc
shl
add
jp
call
call
mov
push
test
(bad)
dec
sub
mov
mov
or
in
out
push
cwde
pop
xor
in
push
pop
imul
les
pusha
sub
inc
ret
cmps
jmp
clc
inc
inc
sbb
sti
jno
sti
ficomp
jne
popf
(bad)
sbb
cmp
jmp
scas
mov
stos
xor
mov
hlt
popf
adc
pop
xchg
xchg
push
jg
outs
jmp
enter
and
ss
mov
add
xchg
or
jno
adc
(bad)
in
jnp
sub
add
aaa
fisttp
repnz
cmp
dec
aad
in
cmps
(bad)
fxch
cmp
pop
les
dec
int
or
aam
loop
jmp
push
xchg
jmp
fwait
outs
sub
(bad)
pop
mov
cli
call
ficom
push
ins
jns
push
push
pop
out
sbb
out
adc
loopne
jo
add
test
adc
pop
xor
test
xchg
call
pop
ret
int3
jge
jnp
rcl
sub
dec
or
daa
int
add
popf
push
out
jnp
addr16
ds
repz
sub
stos
ins
retf
popf
push
xor
sub
mov
(bad)
fiadd
cs
xor
mov
xchg
in
and
test
push
cs
pop
push
aam
je
aas
enter
mov
sti
hlt
lods
int
mov
mul
jl
or
pop
mov
mov
dec
fild
mov
iret
mov
cdq
mov
into
inc
inc
test
jns
movs
pop
xor
jae
inc
adc
pop
push
(bad)
jo
pop
cmp
or
xchg
mov
sbb
xchg
sub
mov
xor
ja
mov
neg
and
or
cmp
xchg
in
gs
popf
les
hlt
into
mov
add
cmovae
lock
adc
clc
outs
jbe
push
fbld
clc
sub
mov
mov
xchg
xchg
dec
ret
mov
mov
dec
add
lods
and
loop
enter
sbb
push
ins
pop
adc
ret
inc
jge
inc
adc
test
push
stos
inc
loope
popf
mov
fimul
add
dec
mov
dec
(bad)
pop
fsub
loope
push
fwait
add
lds
and
(bad)
adc
xchg
repnz
push
push
fwait
stos
addr16
aam
jbe
pop
scas
js
add
push
rol
pop
mov
in
or
std
(bad)
jmp
mov
adc
xchg
mov
mov
xor
xchg
js
ret
add
xchg
fistp
lahf
movs
popf
ret
cmps
jl
mov
dec
(bad)
fucomip
(bad)
mov
xchg
add
add
dec
(bad)
nop
loop
lds
xor
pop
mov
pop
int3
sbb
mov
lds
cdq
mov
push
int
inc
xor
mov
iret
dec
push
retf
imul
mov
lahf
dec
sbb
jg
or
js
xor
int3
or
fs
in
loope
iret
data16
push
sar
push
sbb
rcr
xchg
dec
mov
shr
and
adc
add
adc
out
push
jle
ins
clc
call
cmc
retf
jp
dec
outs
imul
arpl
mov
clc
mov
adc
in
out
stos
add
arpl
das
jbe
mov
ss
pop
repz
inc
cmp
dec
push
cmps
mov
sbb
ss
mov
cld
inc
sbb
adc
stos
mov
mov
mov
sub
mov
jge
mov
push
js
jae
stc
dec
out
and
sti
mov
or
pop
xor
sub
inc
(bad)
hlt
add
jbe
fimul
shl
sub
mov
loopne
outs
xor
and
fdiv
jnp
bound
ss
mov
and
xchg
repnz
xchg
sbb
and
loope
popf
mov
test
fist
xor
push
ret
out
xchg
fisubr
mov
(bad)
pop
add
adc
xchg
or
icebp
out
xlat
out
mov
pushf
jne
pusha
stc
or
retf
pop
sbb
push
in
cmp
cmp
outs
xchg
or
xor
stc
push
repz
into
mov
and
mov
jmp
out
cmps
adc
lds
cli
dec
imul
(bad)
push
je
cmp
xlat
mov
mov
test
call
pop
stc
jmp
jb
dec
retf
or
sar
retf
pop
mov
pop
jl
mov
sbb
mov
shl
xchg
cli
daa
push
pop
jno
gs
pop
xor
mov
fdiv
adc
js
bound
out
jecxz
sub
fist
scas
jb
pop
shr
in
and
mov
fbstp
and
cmc
lods
sub
sbb
mov
into
pusha
push
xor
(bad)
jne
lods
adc
dec
cld
jbe
movs
call
arpl
dec
idiv
and
xchg
push
clc
int3
in
or
jge
pushf
mov
mov
pop
loopne
arpl
xchg
jecxz
mov
lea
sbb
lahf
dec
stc
fmul
(bad)
into
push
mov
out
adc
cmp
jo
and
outs
or
mov
mov
mov
aaa
pop
sub
adc
aad
sbb
and
sub
xchg
xchg
mov
jmp
add
xor
aam
mov
mov
inc
lods
daa
cmp
mov
pop
jmp
into
fucom
and
inc
in
dec
jg
cmps
mov
loop
in
sub
js
scas
xchg
mov
test
rcl
aas
(bad)
addr16
xor
adc
mov
xchg
dec
inc
arpl
popf
jno
imul
and
enter
jmp
ins
rol
lods
mov
hlt
cmp
push
shl
icebp
leave
sti
test
pop
adc
mov
jp
sub
out
mov
(bad)
jo
push
cmp
inc
add
cli
or
jp
cmc
out
movs
xchg
adc
and
and
sub
arpl
aad
outs
rcr
mov
fxtract
mov
aaa
ins
daa
mov
retf
jbe
out
movs
dec
mov
retf
mov
je
fisubr
adc
xor
or
bound
jo
ret
jb
into
sub
test
push
outs
fisttp
jge
xor
push
sbb
test
ret
imul
jnp
cdq
loope
shl
mov
iret
fwait
mov
pop
fst
(bad)
iret
sbb
mov
cmp
(bad)
push
jns
arpl
aam
les
data16
enter
xor
add
jle
sub
pop
xor
fs
cmp
int
cmps
mov
jbe
mov
leave
adc
dec
jne
test
mov
pop
mov
inc
mul
int3
push
push
mov
dec
sar
xchg
cmps
push
clc
or
and
push
std
adc
mov
popf
add
xchg
mov
fnstenv
retf
dec
xchg
dec
cmp
push
fsubr
mov
pop
inc
mov
or
data16
hlt
mov
sahf
cmp
ds
mov
push
stc
mov
xchg
test
mov
rcr
(bad)
push
fwait
mov
push
cmps
xor
scas
scas
mov
xor
dec
bound
(bad)
or
mov
ja
cmps
or
lea
or
jg
fsubr
shr
or
jno
fs
mov
xchg
faddp
ror
cdq
cmp
pop
or
or
mov
inc
fwait
push
add
xor
inc
jbe
ret
cmp
rcr
xor
jae
mul
in
sbb
jae
and
and
sub
sub
shl
ret
sahf
mov
test
cmp
and
pop
jmp
jge
mul
jae
lods
and
outs
xchg
pop
sub
sub
jbe
jp
xchg
scas
cdq
push
daa
pop
fcmovnbe
inc
icebp
iret
repnz
rol
jmp
nop
jae
mov
rol
fist
lahf
inc
ds
or
hlt
xor
cmps
sub
cmps
jne
dec
mov
mov
push
add
(bad)
jecxz
bound
fidivr
xlat
cwde
es
popa
push
pop
fidiv
or
and
test
sti
movs
stos
push
and
arpl
jl
xchg
imul
and
jl
loop
mov
mov
mov
inc
fisttp
icebp
xchg
add
shl
retf
and
and
pushf
push
adc
inc
(bad)
adc
mov
and
cmps
(bad)
fadd
pop
or
inc
iret
scas
jno
sbb
or
repz
cmp
jmp
sub
sub
or
mov
aam
btr
stos
mov
inc
sahf
pop
mov
mov
in
xlat
mov
loopne
sbb
call
mov
mov
clc
xor
cmp
test
mov
pop
push
or
ins
in
cmp
les
dec
bound
pop
xchg
xor
xchg
add
repz
mov
daa
mov
mov
mov
pop
test
cld
loope
sbb
gs
adc
pop
xchg
movs
add
stos
aad
pop
mov
(bad)
stos
push
push
cmp
mov
mov
mov
or
dec
jmp
jbe
lea
fcmovnb
cmps
add
call
mov
and
pop
in
fsubr
test
push
sti
enter
ret
cdq
fcmove
(bad)
jl
push
pop
mov
or
test
lods
outs
rcl
(bad)
or
sbb
adc
xor
(bad)
cmc
mov
ret
adc
add
xchg
cmps
loopne
icebp
pop
and
cmp
mov
loopne
scas
mov
add
stos
ss
mov
scas
dec
and
and
mov
push
jecxz
mov
xor
(bad)
clc
sti
je
add
outs
push
sbb
dec
pop
inc
push
ret
mov
es
or
ja
mov
and
ror
into
adc
xor
retf
shr
push
hlt
scas
xor
mov
hlt
xchg
scas
xor
lods
mov
jl
imul
cmp
stos
push
jae
lods
pop
pop
dec
jo
pop
adc
inc
mov
dec
or
mov
imul
cs
enter
neg
push
ss
addr16
cmp
cmp
sub
sar
dec
out
pusha
jnp
mov
mov
(bad)
mov
push
mov
push
ja
cmp
mov
in
sbb
push
cmp
xchg
adc
jl
sub
pop
sbb
and
fwait
fwait
gs
hlt
fcom
ds
jmp
out
cld
cli
xor
pop
sub
or
and
addr16
call
xor
out
js
ja
dec
inc
vmovups
cmp
repz
inc
fs
out
movs
in
jg
sti
ror
cld
or
dec
int3
std
xchg
aam
or
arpl
div
dec
jne
push
pop
push
inc
popf
mov
shl
xchg
mov
out
jo
je
out
sub
xchg
adc
icebp
ins
dec
mov
(bad)
out
sub
inc
sub
or
jge
ret
inc
dec
loop
jmp
jnp
ins
stos
xchg
inc
in
sub
mov
sahf
jne
pop
cmp
pop
mov
push
adc
mov
(bad)
std
pop
outs
(bad)
mov
mov
mov
clc
pcmpeqb
add
cmp
sub
std
cmp
sbb
inc
rol
mov
aaa
je
rcl
ja
add
jp
xor
jmp
sbb
imul
mov
(bad)
out
(bad)
call
or
add
lods
pop
clc
aaa
sar
mov
adc
xchg
loop
aam
fstp
sbb
cmp
test
stc
call
sbb
(bad)
jmp
sbb
push
test
jnp
(bad)
inc
enter
bound
ror
(bad)
in
out
cmp
ss
mov
leave
cmp
lock
fs
leave
xor
test
outs
loop
mov
cmp
in
xchg
add
movs
jecxz
test
inc
ss
push
int3
cwde
sahf
add
je
pushf
cs
test
pop
add
int
add
je
push
mov
and
nop
das
aam
sub
and
sub
imul
pop
push
shr
sub
xor
mov
mov
lea
pop
fisub
ins
arpl
dec
or
add
jge
and
or
vmread
gs
dec
push
xchg
dec
ret
and
mov
std
test
dec
movs
rol
test
test
(bad)
std
ja
test
mov
stos
inc
xchg
mov
or
or
pop
add
loopne
xchg
sbb
dec
jge
push
fist
pop
push
pop
push
mov
and
mov
(bad)
lock
xchg
stos
pop
(bad)
jge
ins
pop
dec
jnp
out
xchg
shl
data16
mov
in
dec
push
pop
or
out
mov
push
es
mov
(bad)
aaa
fld
std
mov
shr
inc
jmp
push
pusha
stos
sti
fsubr
data16
pop
dec
cmp
int
mov
arpl
sti
xchg
and
dec
or
cmps
xchg
pop
pop
pop
mov
ins
or
cmp
data16
(bad)
lea
dec
jnp
ins
sbb
retf
div
(bad)
jl
arpl
outs
mov
cmp
push
sub
stc
aam
data16
cmp
jns
xor
dec
or
scas
movs
push
aam
das
mov
jl
jmp
dec
lahf
pushf
fistp
bound
mov
cli
sub
(bad)
cmp
iret
fcomp
addr16
rol
xchg
inc
cmp
rol
shl
in
out
fcomp
int
movs
addr16
idiv
pop
call
inc
out
sub
out
cld
stos
inc
and
clc
mov
mov
aas
pop
jae
mov
push
icebp
in
fwait
mov
pop
mov
jg
cli
cld
jle
mov
and
sub
and
pop
lods
or
ja
mov
or
xor
sbb
sub
rol
fld
sub
pop
in
aaa
xor
cli
daa
mov
and
dec
cmp
int
sbb
mov
rol
jmp
fild
test
mov
mov
fld
inc
xor
mov
xchg
ret
or
adc
adc
sbb
jo
call
or
icebp
test
or
in
mov
adc
cs
retf
pop
mov
repnz
and
inc
mov
loope
jmp
sti
shr
(bad)
scas
push
and
in
jno
jecxz
hlt
aad
cmp
push
sbb
or
jmp
dec
sub
movs
call
xor
mov
dec
aaa
mov
int3
cmp
stos
push
mov
mov
inc
add
dec
and
icebp
fiadd
pop
push
push
add
and
popa
or
xchg
lods
xchg
push
iret
or
add
jbe
retf
dec
scas
sub
xchg
and
div
(bad)
aam
jb
ds
es
xchg
jbe
imul
mov
neg
mov
mov
inc
rcr
dec
mov
cld
gs
mov
int
call
cmp
xor
movs
in
xor
push
sbb
adc
sub
movs
in
mov
cmp
adc
test
mov
push
lea
jmp
adc
or
dec
add
xor
mov
jg
das
inc
loop
cmp
out
or
ja
rol
jge
push
jae
xlat
jmp
adc
leave
mov
mov
retf
pop
dec
cmp
les
sbb
dec
xchg
clc
lods
mov
(bad)
out
leave
leave
loope
pop
out
cld
inc
cmp
call
lods
dec
adc
pop
add
mov
jmp
pusha
int3
xor
add
pop
out
mov
(bad)
fs
adc
ror
push
add
out
stos
and
outs
and
lods
pop
stc
lahf
dec
call
push
jle
sub
xor
je
jg
xchg
int
dec
shld
cmp
mov
push
cdq
inc
adc
xchg
inc
push
leave
adc
pop
(bad)
in
xchg
sub
mov
fwait
cmp
sub
xchg
out
repz
rol
sbb
in
mov
or
dec
icebp
hlt
loope
and
shr
in
pop
out
add
xlat
mov
ins
fnstcw
jbe
popf
dec
sub
sbb
mov
rcl
icebp
dec
jecxz
addr16
scas
mov
fbld
xor
pop
and
push
push
push
or
mov
adc
shl
mov
and
(bad)
gs
sbb
cmp
mov
test
mov
cmc
retf
ins
arpl
sbb
adc
es
pusha
cmps
lds
stos
xchg
arpl
stc
xchg
push
call
push
adc
(bad)
jl
jo
mov
inc
sbb
pop
inc
sbb
xchg
jmp
std
cmp
call
mov
adc
fld
dec
call
pop
inc
sahf
mov
retf
push
cmp
xor
mov
jo
push
loope
inc
gs
jmp
pop
ret
xor
loope
pop
fnstsw
and
and
retf
inc
or
xor
push
dec
outs
stos
leave
inc
add
xchg
shl
lock
and
sbb
stos
sub
leave
or
pop
jmp
sbb
add
adc
retf
and
bound
call
and
add
arpl
cld
dec
mov
mov
sbb
pop
in
push
inc
and
data16
jnp
les
jb
aad
mov
fcom
sahf
repz
inc
loop
lea
xor
lahf
shl
aaa
imul
sub
and
aad
jne
popf
ins
mov
outs
add
inc
or
aas
sbb
pop
sar
inc
test
std
push
aaa
or
jo
or
sti
pop
push
fstp
cmc
fcomi
jle
inc
sub
cmc
ret
sbb
cmp
(bad)
lock
jb
fmulp
scas
add
adc
fmul
icebp
mov
xchg
aam
and
sub
fisubr
icebp
mov
mov
adc
mov
icebp
xchg
sbb
dec
outs
jmp
and
pop
imul
xlat
out
(bad)
fcmovbe
out
sub
xor
arpl
call
xor
cld
lahf
jmp
out
or
into
and
push
push
or
neg
adc
(bad)
scas
mov
test
pop
mov
rol
mov
(bad)
leave
jmp
xchg
das
in
lods
ja
mov
fdiv
(bad)
or
mov
dec
jge
sbb
cmp
cmp
or
sbb
push
mov
shr
(bad)
icebp
pop
ds
mov
cmc
fdivr
in
out
cdq
xor
jne
shl
sbb
jmp
repnz
repz
into
adc
add
jae
push
jae
pop
stos
push
dec
shl
aad
sub
inc
loopne
xchg
mov
sbb
mov
push
and
std
push
ins
aas
mov
js
clc
jns
int3
cmp
repnz
sbb
dec
push
dec
cmp
(bad)
in
in
(bad)
mov
mov
ins
dec
xor
outs
mov
cmp
xchg
add
adc
dec
in
pushf
jge
mov
(bad)
sti
adc
fisttp
popf
mov
mov
xchg
pop
inc
push
mov
adc
sub
fidiv
dec
mov
pop
cmps
push
cwde
out
scas
stc
push
jae
in
mov
xor
mov
enter
push
mov
inc
jl
pop
repz
dec
cli
and
es
cmc
mov
jge
idiv
push
and
imul
fnsave
push
retf
stc
scas
pop
mov
cmc
loope
scas
ss
in
scas
shl
adc
xor
mov
sub
cli
jle
cwde
rcr
xchg
sub
shl
cmp
mov
sub
xchg
repnz
cmc
das
pop
or
mov
and
repz
in
out
imul
shr
test
mov
and
xchg
mov
mov
sub
push
sub
retf
call
sub
loop
push
stos
ins
addr16
bound
pop
mov
add
mov
bound
push
or
sbb
test
push
imul
(bad)
aad
xchg
lods
xchg
xchg
repz
loopne
jp
cmp
mov
lahf
sub
test
cmps
cmp
mov
mov
sar
and
pusha
dec
xchg
push
mov
out
sub
inc
pusha
call
mov
mov
test
leave
test
push
dec
xor
lea
out
adc
pusha
sar
scas
out
sbb
call
mov
or
xor
jnp
sub
push
add
and
shl
imul
xlat
cs
mov
shl
add
aaa
cmp
mov
dec
inc
aaa
or
cmp
fwait
push
adc
dec
std
test
mov
mov
xchg
test
fstp
and
fdivr
xchg
dec
gs
adc
nop
mov
mov
lahf
jg
add
push
push
jle
into
stos
int
inc
ins
jmp
push
imul
scas
inc
dec
jae
nop
dec
stos
pop
inc
fdivp
sahf
lods
dec
aas
(bad)
out
outs
fwait
out
inc
xchg
aas
jne
popa
xchg
lea
push
cdq
xchg
cmps
lahf
stos
adc
push
pushf
xchg
push
dec
or
cli
pop
in
jge
pop
cmp
xor
jl
mov
neg
adc
cli
push
ja
outs
push
mov
pop
aas
inc
inc
test
lods
out
lock
fist
jno
xor
xlat
adc
call
sub
xor
mov
mov
jae
in
mov
sub
and
subps
cmp
inc
dec
mov
nop
pushf
repz
in
push
repz
pop
call
mov
mov
and
fstp
pop
mov
fimul
pop
push
loope
shl
ja
mov
mov
or
mov
jno
ds
leave
inc
adc
cmp
pop
in
jne
and
cmp
and
jl
out
push
mov
sahf
pop
data16
ret
and
std
int
mov
pop
clc
sti
(bad)
inc
adc
jmp
ja
scas
mov
xchg
ret
popf
stos
movs
clc
add
sub
in
cmps
mov
sub
jmp
mov
loope
push
into
dec
loopne
inc
ds
and
sbb
pcmpgtb
aad
jns
out
repnz
cmp
dec
fldcw
sub
cmp
ror
jns
call
aas
aas
daa
jg
cwde
or
loopne
scas
push
jbe
mov
es
sbb
push
mov
dec
(bad)
push
xchg
daa
pop
test
out
clc
(bad)
stc
mov
test
or
xchg
or
jne
sub
call
sbb
jge
jmp
mov
cwde
mov
fwait
jmp
lock
dec
jmp
test
jg
iret
test
xor
lock
cmp
test
pushf
xor
push
lods
ret
xchg
pop
ins
add
or
shrd
mov
cmp
xchg
xor
enter
test
xchg
mov
outs
(bad)
stos
out
push
xor
ss
mov
mov
ins
sub
adc
rcl
dec
adc
mov
mov
jnp
enter
outs
pop
or
mov
ret
cdq
ds
popa
cmp
(bad)
mov
bound
xor
retf
loopne
fimul
test
(bad)
pushf
fcom
adc
call
cmp
test
cmp
(bad)
out
mov
cmp
sti
jnp
inc
and
push
cmps
test
push
aam
pop
mov
inc
add
ds
sub
add
cmps
mov
lods
shl
xchg
adc
xor
retf
cmp
and
cs
ss
cmps
jle
jle
add
or
stos
mov
je
std
push
in
cmp
cmp
xor
addr16
in
mov
invd
push
sbb
or
stos
addr16
cmp
es
add
or
aas
jmp
ja
popf
lods
and
cmps
pop
out
sbb
dec
jl
dec
fmul
push
adc
mov
(bad)
lock
push
adc
enter
sbb
mov
and
aad
push
jo
mov
hlt
cmp
imul
and
in
js
lahf
mov
jecxz
mov
mov
cli
sbb
push
mov
or
inc
or
aad
in
cmps
in
popa
pop
pop
sbb
xchg
call
(bad)
sti
and
jno
movs
int
ins
sbb
mov
xor
daa
sub
lahf
inc
sub
movs
xchg
xchg
sar
mov
mov
imul
pop
inc
add
loope
test
push
dec
cmps
mov
aas
sbb
push
xor
jmp
xchg
pop
xchg
hlt
call
stos
addr16
mov
into
mov
mov
xor
adc
jne
lods
leave
mov
fstp
add
jmp
sub
loope
sub
lahf
xchg
loope
ret
loopne
or
mov
sbb
icebp
js
sahf
add
jno
nop
push
js
add
fild
stc
lahf
xchg
repnz
pop
inc
jmp
cmp
int3
shl
pop
retf
add
pop
fist
(bad)
inc
push
aas
jno
arpl
sub
adc
inc
test
cmp
push
push
int
sbb
xchg
adc
or
aaa
test
ja
mov
mov
jmp
push
dec
xor
out
adc
loope
mov
push
push
xchg
adc
xor
stos
mov
int
inc
fnsave
rcl
inc
push
inc
push
dec
xor
sub
jno
push
movs
add
and
clc
(bad)
cmps
cmp
inc
(bad)
jge
retf
test
(bad)
mov
adc
lods
jno
(bad)
sbb
std
adc
hlt
xchg
cld
in
fwait
pop
mov
mov
cmp
xor
iret
(bad)
fstp
clc
ss
ret
mov
ins
dec
shl
adc
mov
clc
pop
fwait
xchg
mov
jae
push
call
inc
or
adc
xchg
sbb
mov
push
inc
cmp
or
cmp
stos
dec
cmp
enter
mov
or
fisttp
mov
out
aad
sahf
cld
repz
cdq
stos
jle
(bad)
dec
cmp
cmps
in
loop
and
lods
es
cmc
jno
mov
and
or
into
dec
cli
jmp
out
je
pop
rol
in
add
out
push
sub
jge
dec
mov
sub
fptan
bound
cmp
pushf
lods
jmp
push
add
loop
sbb
mov
clc
xchg
xor
inc
xchg
cmp
cmp
push
dec
cmp
test
dec
adc
or
into
sub
xchg
mov
add
add
mov
rcr
int
rcr
movs
pop
ret
ins
inc
jecxz
(bad)
aas
cmp
pop
add
ins
nop
ror
cmp
in
sti
adc
push
popf
push
sahf
add
dec
inc
ret
push
movs
xchg
push
pop
cmp
jge
mov
pop
test
xlat
mov
aad
fisubr
lea
mov
dec
sub
pop
lods
stos
push
adc
add
stos
jns
popa
cli
xor
xchg
scas
push
jle
or
xlat
xchg
nop
ins
add
cdq
enter
mov
add
push
push
or
scas
cdq
sbb
or
test
fs
or
lods
call
jne
es
pop
push
int3
sbb
enter
pop
lods
leave
push
mov
xor
push
outs
xchg
xchg
jae
xchg
inc
mov
adc
mov
ret
jmp
mov
jp
mov
cwde
push
in
sub
sbb
aam
stos
ins
sbb
or
retf
mov
aaa
sub
cmps
add
lahf
out
sub
cmp
test
(bad)
xor
ret
push
enter
dec
mov
pop
push
sbb
lock
sbb
mov
mov
fimul
cmc
dec
xor
sub
mov
pop
or
jg
sub
popa
(bad)
push
push
repnz
xlat
mov
push
repz
inc
out
jno
push
pop
cmp
mov
popa
push
mov
inc
stos
fsub
cmp
out
in
mov
and
mov
adc
dec
leave
and
xor
and
mov
jnp
mov
add
sbb
xor
aad
daa
lock
sbb
lock
lods
or
in
je
pop
test
and
outs
retf
out
ror
call
test
les
sub
addr16
mov
in
push
dec
pop
or
jae
jno
mov
out
out
pop
pop
mov
dec
ficom
dec
sti
mov
and
into
mov
jnp
and
push
fadd
or
out
mov
inc
enter
lds
jns
push
xchg
xchg
cmp
mov
or
mov
mov
push
int
pop
xchg
xlat
xchg
mov
inc
outs
sar
sar
cwde
xchg
loop
idiv
cmp
xor
adc
rcr
mov
daa
cmp
push
mov
sahf
mul
mov
in
cmp
mov
gs
data16
and
dec
fwait
nop
jmp
adc
xor
bound
call
inc
push
mov
mov
jne
jns
movs
dec
retf
dec
call
in
dec
add
fstp
pushf
sti
cmp
fcmovnu
jle
call
xchg
aaa
xor
shl
out
mov
pop
sub
jb
mov
retf
mov
adc
das
jle
pop
movs
sbb
std
inc
aad
cmps
push
scas
pop
call
pop
mov
fcom
loop
(bad)
pop
and
push
jno
dec
mov
mov
cmps
mov
imul
jp
push
ja
ins
xchg
stc
push
push
stos
lock
push
mov
cmps
retf
out
ret
int
aas
adc
outs
lea
ret
out
std
(bad)
and
inc
mov
jp
xor
jb
mov
dec
lds
jmp
js
and
sub
inc
jge
sub
adc
sbb
out
lock
mov
outs
inc
stc
out
mov
js
repz
inc
pop
add
ins
add
les
inc
(bad)
in
aaa
sbb
neg
je
lods
lea
adc
xchg
in
(bad)
ins
test
dec
push
jmp
lea
loope
cmp
adc
(bad)
(bad)
out
pop
xor
push
fldenv
arpl
jae
xchg
ds
jno
stos
jge
pop
jle
sub
fwait
or
jmp
push
inc
adc
push
jmp
jg
or
test
sub
xchg
push
not
mov
or
inc
mov
mov
push
out
or
sbb
dec
int3
push
cmp
add
stc
in
xor
lahf
cmp
std
inc
push
mov
add
fcomp
je
mov
or
mov
mov
adc
inc
dec
push
enter
in
and
in
inc
mov
shl
sub
or
xor
sti
xchg
cmps
lock
nop
mov
xchg
dec
mov
sub
into
ss
sub
cld
xor
cmp
push
mov
(bad)
cmc
xor
or
out
pop
xor
mov
pop
cmp
adc
ss
cwde
popf
aam
dec
sbb
mov
xor
cmp
push
loope
push
mov
xor
mov
nop
in
repnz
cmp
dec
cmps
or
sbb
outs
mov
pop
add
(bad)
push
sub
ins
sub
sub
mov
das
xor
aaa
sub
jmp
fld
aam
out
int3
cmp
push
or
pushf
jmp
out
adc
test
fsubr
add
aad
push
into
and
mov
cmp
sahf
dec
sar
inc
(bad)
and
jg
iret
pop
add
pop
or
out
pop
mov
out
sbb
cmps
leave
enter
loop
aam
push
xchg
inc
push
and
fnstenv
lahf
xchg
out
enter
push
push
clc
add
mov
cmps
sub
or
arpl
adc
jmp
dec
(bad)
daa
inc
daa
leave
dec
test
dec
scas
fild
or
test
test
xchg
bound
mov
pushf
jmp
mov
into
leave
ror
push
and
cmps
dec
jb
mov
ja
pop
retf
imul
je
loopne
inc
fimul
mov
enter
mov
pop
xchg
and
pop
jmp
pushf
test
cmps
cld
cs
iret
idiv
(bad)
aaa
or
push
sub
enter
mov
test
or
repz
lock
xchg
cwde
xor
jnp
leave
div
add
mov
cmp
mov
shl
or
add
pop
es
xor
arpl
inc
outs
pop
arpl
sbb
out
cld
pushf
in
xchg
outs
les
lock
bound
jmp
xchg
jns
mov
pop
inc
and
mov
out
adc
loope
cmp
push
push
leave
outs
push
pop
les
inc
xchg
mov
arpl
loopne
mov
mov
add
movs
scas
(bad)
cmp
xchg
(bad)
lods
and
push
fwait
xchg
push
lds
repz
in
add
xchg
sub
xchg
mov
add
xchg
fs
push
test
push
cmp
ss
cmp
das
pop
jmp
daa
inc
xchg
rcl
and
test
cmp
dec
sbb
or
adc
shl
cwde
push
int
inc
in
stos
xchg
(bad)
shl
fcomp
cmp
push
xchg
adc
inc
xchg
and
cmp
sub
sar
cmc
mov
mov
inc
repnz
pop
gs
enter
test
mov
int
fidivr
or
xor
sti
mov
lock
loopne
pop
(bad)
and
inc
call
aad
loop
jo
cmps
mov
sbb
nop
mov
(bad)
fxtract
cmps
and
shl
adc
icebp
dec
ret
jno
add
loope
fist
sahf
scas
(bad)
mov
or
lds
xor
and
sub
sbb
xchg
(bad)
sub
es
jae
and
push
sbb
cdq
or
inc
scas
jns
cwde
mov
xor
dec
add
push
push
sub
push
xchg
inc
in
call
les
pop
xor
ss
add
lea
imul
push
push
cmp
inc
adc
and
cdq
out
mov
push
test
imul
xchg
mov
aad
and
jne
add
push
rcr
test
stc
mov
jbe
outs
xor
adc
test
dec
jg
shr
sub
sbb
int3
cmps
and
test
pop
ret
mov
or
pushf
mov
(bad)
fs
ins
jne
and
clc
adc
lods
jno
cdq
inc
sbb
xchg
sub
(bad)
jg
push
ds
in
adc
cmps
outs
stos
ret
imul
mov
fsubp
mov
(bad)
fmul
mov
xor
call
jns
fwait
les
aad
sar
pop
inc
mov
call
or
dec
cs
(bad)
sbb
sub
in
mov
test
pop
adc
loopne
leave
aad
lock
pop
repnz
fsub
outs
lahf
jo
je
jmp
imul
ror
adc
mov
mov
jns
and
icebp
imul
arpl
add
dec
loope
sti
jno
cmps
es
cmp
jbe
scas
push
test
ins
mov
xor
jbe
bound
imul
aad
mov
xchg
jo
pop
mov
das
out
aaa
pushf
lahf
sub
mov
add
nop
pop
pop
retf
mov
mov
(bad)
das
out
adc
adc
aaa
movs
or
lods
mov
xchg
push
jns
movs
pop
xor
push
xor
mov
mov
mov
daa
mov
iret
in
jecxz
ss
xor
out
mov
add
xor
popa
fist
dec
dec
cmp
aas
sbb
out
xchg
mov
ja
aaa
int3
xor
add
into
xchg
pop
and
std
pop
test
hlt
or
or
scas
lea
xchg
add
xchg
movs
aas
movs
inc
inc
pop
fs
push
pop
xchg
aaa
sbb
adc
push
mov
out
adc
push
or
push
push
or
idiv
sub
fsubr
dec
aad
lods
push
stos
add
and
jne
bound
mov
out
movs
jp
ins
jg
dec
ins
mov
hlt
sbb
push
inc
sbb
or
sbb
xchg
mov
cwde
popf
inc
jmp
fcomp
test
arpl
popa
ret
and
js
mov
add
or
sar
fwait
(bad)
xor
inc
pop
pop
fisubr
push
ficomp
cld
les
in
or
das
call
pop
sbb
inc
fwait
mov
xchg
(bad)
fsub
pop
inc
sub
test
mov
pop
xchg
dec
add
stos
jb
sbb
pop
movs
cs
mov
repnz
call
push
cli
pop
arpl
cmc
inc
jg
(bad)
dec
sar
dec
cmp
adc
jp
mov
int
mov
pop
jne
jge
mov
fwait
js
push
mov
retf
xchg
sbb
mov
dec
imul
test
mov
push
add
mov
pop
fcomp
cwde
fwait
and
xchg
xchg
rcl
jl
call
add
adc
jmp
js
test
push
sbb
xor
lods
test
lea
jmp
out
adc
not
cli
inc
out
pop
and
sti
cmp
jmp
dec
xlat
loop
addr16
sub
(bad)
inc
pop
aas
cmp
dec
ja
fadd
rol
out
cli
stos
jmp
inc
iret
ja
mov
and
mov
xchg
inc
jle
(bad)
xchg
stos
repnz
adc
dec
or
aas
sahf
iret
xchg
xor
xchg
mov
lds
jae
leave
pop
hlt
idiv
lods
(bad)
add
enter
imul
gs
mov
into
gs
mov
aad
add
mov
jl
xor
add
jbe
nop
fs
sub
push
imul
stos
daa
jmp
mov
data16
stc
sar
dec
sub
(bad)
(bad)
xchg
sbb
js
shl
mov
mov
and
sub
out
xchg
mov
adc
jmp
(bad)
daa
xchg
pop
arpl
push
std
mov
call
or
ret
mov
pushf
or
sbb
sub
inc
div
ins
test
cmp
mov
fwait
pop
test
fisub
fisubr
push
retf
rcr
popf
sub
sub
outs
xor
and
dec
inc
dec
mov
and
lods
jmp
xchg
inc
sahf
jns
adc
fucomp
mov
xchg
retf
iret
dec
sbb
xchg
or
mov
dec
movs
inc
xchg
lea
xor
not
adc
sbb
sbb
pushf
pop
xchg
mov
stos
sub
jae
push
(bad)
jne
jne
dec
nop
mov
xchg
xchg
cwde
lock
inc
dec
rol
jmp
mov
shl
into
int
sbb
mov
(bad)
xor
jmp
xchg
mov
(bad)
fld
cmp
sbb
pop
sub
and
mov
xchg
shl
leave
retf
mov
mov
bound
fdivr
mov
aad
rcr
cmc
jmp
movs
mov
lods
and
call
pop
fsub
daa
mov
fwait
lods
jl
mov
movs
dec
sbb
leave
and
les
push
and
jge
fwait
movs
mov
stos
test
mov
xchg
out
sahf
mov
movs
mov
adc
or
loopne
mov
mov
frstor
cmp
addr16
(bad)
into
loope
ss
jo
cmp
xor
sbb
cmc
xchg
jnp
xor
fist
lock
xchg
mul
leave
sub
fist
iret
jae
adc
push
xor
jmp
cld
lahf
fimul
cmp
sbb
cmps
shl
and
ret
inc
jns
call
or
retf
cld
inc
mov
popa
mov
sbb
repz
cdq
imul
loop
arpl
push
dec
lea
ja
add
fsub
cmp
outs
jl
ret
prefetch
or
sar
bound
shl
fs
mov
loope
jmp
repz
loop
mov
ss
pop
jl
mov
sub
cmp
rcl
stos
ffreep
jl
test
push
retf
in
bound
(bad)
ror
mov
clc
sbb
push
movs
cmp
fimul
fst
out
add
lea
daa
add
jbe
push
mov
xchg
cmp
sbb
jbe
pop
and
pushf
daa
inc
inc
stc
mov
adc
pop
add
(bad)
inc
mov
mov
inc
pop
aad
or
push
or
adc
dec
jle
stos
in
hlt
das
jno
imul
xchg
adc
fild
lock
ds
into
scas
clc
das
(bad)
mov
jg
in
cmp
ret
std
jle
push
inc
dec
push
jmp
cwd
adc
fldcw
push
jle
pop
lahf
in
mov
xchg
daa
jns
mov
jno
adc
fdiv
cli
adc
inc
dec
dec
test
retf
call
xor
mov
cmp
ret
sub
mov
aaa
mov
out
(bad)
daa
sub
mov
test
jns
lock
ret
xor
xchg
cld
sbb
push
jp
jnp
push
sub
xor
xchg
jnp
imul
(bad)
jbe
cs
push
arpl
xchg
adc
mov
retf
mov
cmp
dec
call
cld
cmps
mov
mov
mov
inc
add
rcr
fnstsw
mov
in
cmp
push
fwait
push
leave
aas
jle
sub
enter
ds
ficomp
sbb
int3
cmp
jo
xchg
sti
rol
cmp
lods
rol
cmp
sbb
daa
inc
jb
fcomip
pop
xor
adc
inc
stc
loopne
push
jge
in
pop
inc
sbb
xchg
mov
sbb
dec
push
or
push
mov
xchg
xor
and
dec
jmp
movs
push
add
jo
push
adc
mov
pusha
inc
out
push
adc
cmp
jmp
mov
enter
mov
rol
pop
arpl
(bad)
out
pop
arpl
xlat
sbb
xchg
cmp
pop
inc
sar
(bad)
sbb
int
ins
add
or
or
cmp
adc
jle
das
cmp
fld
jg
add
dec
jmp
idiv
mov
xchg
inc
cmp
dec
jb
imul
mov
out
pop
ss
(bad)
retf
or
xor
sbb
inc
stc
out
loop
xor
test
pop
stos
mov
mov
jns
add
dec
test
sub
mov
xchg
mov
leave
int
xchg
mov
adc
inc
inc
and
mov
repz
enter
xchg
dec
adc
jl
and
les
adc
les
sar
leave
pop
or
push
lea
add
imul
(bad)
adc
fs
cmps
iret
in
jecxz
push
jmp
addr16
or
cmp
jg
and
jae
xchg
fist
and
inc
test
(bad)
(bad)
dec
adc
dec
cdq
(bad)
adc
add
pop
out
leave
dec
dec
jle
add
fild
jge
mov
lds
mov
cld
sub
cmps
aaa
mov
aas
cmp
adc
push
dec
mov
push
sbb
in
or
(bad)
neg
jmp
fidiv
scas
lods
fwait
test
mov
inc
mov
pop
pop
int3
mov
add
mov
imul
js
aas
les
mov
mov
xlat
mov
push
xchg
push
bound
sub
les
pop
jl
pop
lock
sbb
sbb
adc
shl
cmp
mov
jecxz
aam
js
cmps
mov
mov
push
call
hlt
jl
ds
(bad)
sar
je
inc
xchg
add
sti
cdq
and
adc
inc
dec
popa
call
test
movs
inc
fcomp
mov
ja
sub
fwait
in
js
xor
xchg
xlat
cwde
dec
ret
cld
xchg
test
(bad)
mov
sub
aaa
enter
adc
and
xor
pop
pop
jmp
push
shr
mov
movs
xor
sub
jnp
sbb
cmp
repz
aas
mov
aaa
jl
or
xchg
data16
xor
inc
dec
fs
ds
cli
mov
or
mov
cli
dec
dec
leave
(bad)
push
cld
mov
clc
xchg
daa
fadd
cmc
adc
xchg
cmp
push
test
add
loope
and
or
sbb
lds
mov
adc
ins
out
jnp
adc
pop
retf
adc
xchg
sbb
fnstenv
push
push
test
inc
push
rcl
jb
jge
pusha
sub
loop
push
dec
bound
sub
test
call
jecxz
jmp
pop
inc
mov
pop
arpl
sbb
out
out
icebp
icebp
mov
xor
or
popa
retf
lock
sbb
xchg
mov
fsubr
sub
sub
cmp
(bad)
int3
sbb
mov
shl
sar
mov
repnz
ret
push
jae
and
or
mov
push
adc
xor
mov
mov
mov
aas
sbb
jnp
xor
sbb
int
push
cmc
arpl
pop
hlt
push
mov
and
loopne
out
or
and
pushf
inc
test
push
mov
into
nop
fwait
xor
shr
addr16
mov
jnp
pop
cdq
icebp
pop
into
repnz
xlat
push
mov
(bad)
cmp
push
test
pushf
je
xchg
dec
mov
pop
xchg
inc
cdq
sbb
(bad)
adc
ret
call
out
mov
mov
loope
gs
mov
aas
jnp
xchg
push
stos
adc
xchg
mov
(bad)
sti
test
sbb
xor
das
(bad)
jns
dec
mov
retf
movs
imul
pop
push
mov
mov
cwde
rol
shl
cli
fcom
or
cmp
lods
sub
int
fadd
std
add
bound
xchg
mov
or
(bad)
scas
mov
cmps
and
sahf
mov
or
jmp
and
dec
xlat
xor
ret
loope
sbb
sbb
into
das
test
mov
stc
push
scas
test
pop
mov
adc
pop
push
jo
xor
gs
dec
ins
jno
js
jb
push
mov
cdq
xchg
xchg
fs
out
sti
jns
jnp
es
sbb
aaa
fisub
ror
out
mov
ret
xchg
fcmovnu
jg
leave
pop
(bad)
adc
or
mov
sahf
push
sub
popf
push
rcl
or
cdq
adc
outs
mov
mov
shr
mov
jae
sar
sub
push
sbb
daa
push
or
jns
jns
push
adc
jmp
inc
dec
jmp
clc
in
in
(bad)
adc
push
jno
push
lods
inc
sub
in
xor
or
out
outs
sbb
push
xor
mov
dec
in
and
sbb
cld
cmp
jo
movs
mov
fdivr
inc
scas
and
cmp
add
cmps
dec
inc
fsub
mov
jnp
pusha
mov
arpl
sbb
(bad)
sub
hlt
ss
mov
nop
xor
push
int
push
fild
inc
sar
or
mov
and
(bad)
ret
dec
cmp
adc
push
out
sahf
xor
addr16
xor
cmp
daa
pop
dec
or
jge
mov
test
adc
adc
push
mov
cmp
push
cwde
pop
jmp
pop
loopne
outs
dec
inc
mov
pop
(bad)
scas
imul
inc
dec
xlat
test
idiv
(bad)
bound
cmp
mov
mov
retf
call
adc
pop
mov
mov
jg
iret
fstp
push
push
sbb
inc
mov
sbb
aam
mov
aam
push
(bad)
cs
dec
ret
xlat
movs
jp
sahf
jmp
lock
sub
mov
fdivr
fcom
movs
stc
sbb
lds
clc
into
lods
aam
and
jg
adc
push
mov
mov
fwait
test
mul
leave
jns
and
pop
mov
pop
mov
shl
mov
mov
addr16
inc
fild
jbe
pop
mov
mov
sbb
out
cmps
lods
mov
into
jbe
cs
inc
or
push
pop
mov
push
mov
cli
scas
mov
sbb
push
sti
sbb
cmp
mov
ja
imul
or
dec
push
pop
popf
xchg
fcmovne
or
std
mov
je
mov
and
mov
xchg
jno
int
or
fcomp
mov
push
adc
(bad)
or
lahf
or
out
xchg
pop
mov
sbb
sub
or
inc
out
inc
mov
outs
jbe
pop
fucomip
xchg
sbb
cdq
jmp
dec
icebp
inc
add
enter
loope
mov
xchg
jne
fstp
fidivr
imul
add
bound
aaa
or
mov
or
mov
lods
mov
push
fist
std
fnstcw
mov
out
sub
(bad)
popf
pop
push
cmp
jo
nop
int3
jmp
dec
rol
lods
test
lods
fsubr
cmp
popa
cmp
aaa
sbb
or
push
out
sbb
xlat
les
in
or
add
(bad)
pop
mov
popf
mov
add
int
xchg
sbb
loope
fcomp
ja
or
and
push
inc
test
or
and
xchg
jecxz
push
and
or
inc
add
popf
ja
add
test
ds
lea
cmp
push
and
repnz
(bad)
xchg
and
test
sub
ret
or
mov
test
rcr
dec
inc
leave
dec
(bad)
js
test
cmp
inc
cld
dec
xchg
pop
outs
or
ja
retf
add
shl
ds
jnp
movs
xchg
stos
ss
fwait
movs
cmp
cmp
jl
xor
push
push
ds
xlat
xor
fimul
fild
push
pop
mov
popa
push
adc
inc
sbb
dec
jecxz
jne
repnz
retf
hlt
add
jge
jecxz
sub
sub
mov
fldenv
mov
movs
ja
lahf
push
mov
scas
imul
fnstenv
cmc
fadd
loopne
fisub
addr16
popf
loopne
pop
sbb
imul
pop
call
jnp
push
pop
ret
stos
(bad)
mov
jmp
cs
loopne
gs
imul
xchg
sbb
add
movs
adc
or
(bad)
pop
xor
hlt
xor
jecxz
push
retf
ret
cmp
lods
sbb
pop
push
and
mov
sbb
mov
jno
retf
in
jge
mov
mov
push
aad
cs
cmp
add
mov
inc
ja
xchg
xor
stc
test
mov
sbb
jo
cmp
xchg
mov
dec
adc
sbb
xlat
xchg
adc
pop
cwde
xor
sbb
or
pop
mul
push
and
bound
imul
jae
jnp
ret
out
push
ss
out
dec
adc
pop
pop
inc
ds
sub
and
mov
ficom
mov
push
scas
sbb
dec
es
int3
sub
push
iret
idiv
xor
(bad)
push
mov
fisttp
clc
bound
std
xchg
mov
daa
in
push
ja
ror
in
push
repnz
fmul
inc
cdq
pop
jbe
sbb
ret
ret
in
loope
pop
dec
into
jp
js
add
fstp
movs
sbb
cmp
adc
jbe
adc
scas
mov
imul
js
mov
inc
jnp
out
jmp
inc
(bad)
cmps
cmp
inc
iret
jmp
gs
push
push
add
cmp
ror
adc
and
pushf
call
ret
cmp
pop
dec
sub
mov
jns
loop
icebp
push
enter
pop
pop
mov
adc
dec
and
repz
ins
aam
aam
jne
add
push
jmp
or
add
xchg
xlat
ins
mov
mov
add
test
lock
loopne
adc
pop
pop
mov
aaa
int
inc
daa
shl
jecxz
dec
lea
rol
stos
fld
mov
dec
mov
test
xor
clc
mov
(bad)
sbb
mov
sbb
jbe
mov
mov
xchg
(bad)
cmc
fidivr
sub
mov
sbb
ret
jmp
xor
mov
xchg
neg
aaa
push
icebp
pop
leave
adc
sahf
ret
ror
cmps
cdq
pop
enter
cld
out
shr
or
inc
pop
div
jle
stos
dec
jns
jne
xchg
xchg
mov
lahf
dec
pop
jnp
inc
xor
jnp
adc
retf
mov
dec
call
xchg
sti
daa
mov
sub
push
fwait
and
push
sub
and
push
or
jbe
add
sbb
jnp
imul
and
sti
jo
mov
push
push
daa
stc
jmp
push
dec
(bad)
test
dec
jb
movs
rcr
stos
push
out
call
push
dec
cwde
or
xlat
dec
xbegin
xchg
jp
push
jno
mov
repnz
ficom
mov
or
xor
fld
sbb
mov
call
adc
outs
scas
cmp
mov
mov
sub
int
ret
xor
je
inc
xor
imul
mov
mov
jnp
jae
push
(bad)
push
mov
jle
rcr
xor
(bad)
and
std
xor
xchg
mov
mov
xchg
imul
aam
ja
and
xlat
inc
xor
push
in
daa
add
fs
or
imul
retf
scas
sar
inc
pop
mov
aaa
push
icebp
xchg
push
cmp
pop
ins
mov
outs
jge
sub
sbb
xor
shl
icebp
inc
jmp
mov
sbb
and
jmp
es
dec
lods
push
mov
adc
pushf
mov
ret
fsubr
daa
adc
bound
mov
lods
hlt
shl
add
dec
fild
jbe
fadd
mov
push
xchg
sbb
or
stos
xor
lods
lahf
cmc
pop
push
and
inc
mov
div
xor
outs
cld
push
jbe
mov
sub
push
outs
rcr
popf
mov
mov
cli
and
mov
xor
ins
dec
outs
in
cli
push
jno
fisubr
mov
arpl
stc
lods
jge
stc
test
mov
(bad)
mov
sbb
pop
je
fcomp
jb
push
pmaddwd
les
das
outs
push
or
mov
mov
mov
cmp
xchg
sub
jle
inc
push
popa
add
lock
gs
pop
or
vpsubq
dec
pop
xor
test
ins
and
sub
test
cmp
sub
mov
mov
pop
nop
mov
mov
in
push
sub
cmp
jmp
repz
(bad)
sbb
xchg
mov
sub
pop
mov
push
push
fldcw
test
loopne
and
jmp
add
aad
cmp
stc
lahf
das
mul
push
inc
xlat
push
push
(bad)
jb
dec
stos
mov
mov
pop
out
mov
push
int
xchg
pop
jmp
mov
sbb
ds
pop
out
pop
jge
jno
inc
ins
jmp
pop
cs
dec
(bad)
adc
and
dec
xchg
jl
and
jns
fld
jnp
xchg
pop
xor
cwde
jae
leave
ds
leave
aaa
cdq
inc
bound
ret
push
and
fdiv
daa
adc
sbb
pop
cld
daa
je
inc
movs
add
sar
mov
(bad)
jns
jmp
inc
ins
jbe
into
push
mov
call
jle
dec
xchg
mov
sbb
imul
in
cmc
jnp
ins
test
sar
ins
popf
xor
enter
pop
adc
push
popa
xor
retf
mov
loop
fdiv
ret
outs
lds
fld
into
int
loop
aam
jb
out
leave
cmps
mov
repnz
pop
or
jmp
popa
sub
xor
mov
aam
(bad)
pop
fcomp
les
mov
push
outs
mov
push
cmp
leave
stos
mov
push
rcr
ja
clc
xor
xor
cmp
dec
fdivr
std
inc
dec
fwait
jb
test
leave
sbb
not
imul
adc
xchg
adc
mov
or
stc
pop
nop
in
out
push
fwait
jb
mov
hlt
mov
(bad)
xchg
pop
mov
aam
dec
cmp
pop
cmc
stc
mov
sbb
mov
push
inc
pop
and
enter
mov
pop
mov
inc
cmp
or
into
into
cld
jns
sub
imul
adc
fiadd
ja
dec
xor
xchg
aam
xchg
cmps
daa
call
das
fcmovne
fsubr
dec
fild
out
and
inc
sbb
fs
cmp
cmp
imul
jno
sti
jno
sti
es
movs
enter
add
inc
fsub
mov
sub
fisttp
shr
jae
popf
inc
inc
dec
push
ret
aaa
mov
add
pushf
ss
mov
add
jle
jl
lods
mov
leave
int
or
pop
fs
mov
push
scas
sub
arpl
jb
dec
xchg
pushf
xlat
retf
dec
js
xor
mov
aas
cmp
inc
and
loopne
test
call
test
pusha
aam
fld
ret
or
and
or
mov
dec
or
out
jp
test
fild
dec
dec
fnstsw
xchg
ss
mov
ret
sbb
sar
loop
sub
retf
nop
into
loopne
inc
jns
jo
dec
xchg
bound
inc
(bad)
gs
or
push
xchg
sub
ss
push
sub
stc
scas
in
inc
fwait
test
dec
retf
inc
cmp
jge
jne
data16
clc
lds
mov
inc
(bad)
movs
(bad)
jns
mov
pop
(bad)
retf
pop
retf
loopne
jno
sbb
pop
jnp
adc
retf
xor
cmps
(bad)
jbe
jbe
fstp
stos
(bad)
xchg
mov
adc
hlt
test
jo
add
jle
mov
(bad)
push
cmp
(bad)
arpl
imul
dec
sbb
(bad)
cmp
adc
mov
test
mov
rcr
add
(bad)
int
mov
pop
icebp
jno
cmp
push
aas
or
pop
shl
rcr
daa
adc
mov
fwait
retf
stos
xor
std
sub
data16
pop
rcr
pop
mov
lea
gs
(bad)
sbb
aad
js
xor
bnd
xchg
and
mov
jb
jge
xlat
ins
push
fidiv
pop
(bad)
xor
push
sbb
push
push
cmp
cmp
xchg
push
dec
sub
push
jle
in
push
jns
adc
adc
mov
pop
ins
pop
in
xor
sub
imul
and
pop
pop
outs
imul
(bad)
ficomp
call
and
ja
or
xor
test
enter
jnp
(bad)
jmp
dec
xor
inc
das
ror
xchg
call
loop
aaa
push
ret
sub
sti
jae
jbe
push
jp
ins
add
dec
pop
jl
mov
aas
sbb
inc
cwde
cdq
lods
fs
gs
loop
push
pop
sbb
or
add
cmp
scas
mov
imul
sub
and
add
cmp
adc
std
nop
lock
or
out
ja
mov
retf
(bad)
cdq
pushf
jl
out
sar
outs
add
sar
sub
xor
push
test
imul
sbb
mov
loop
sbb
mov
pop
pop
pop
ss
fadd
out
and
inc
fistp
jle
pop
sub
gs
mov
xlat
mov
sbb
(bad)
and
inc
in
xchg
sbb
sub
and
pop
xor
jmp
sbb
mov
mov
ja
pop
and
xor
mov
push
mov
sbb
mov
mov
jmp
dec
out
mov
mov
pop
cmps
fist
mov
(bad)
sbb
adc
pop
mov
movs
xor
mov
adc
sub
call
adc
loope
test
mov
lods
push
mov
pop
push
mov
inc
xor
cdq
mov
cli
ds
inc
ja
mov
cmp
aas
enter
movs
mov
dec
mov
dec
mov
je
retf
and
dec
pop
sub
dec
retf
push
ja
jo
jne
jne
pop
xchg
cmp
call
shl
das
pusha
xchg
inc
push
push
mov
push
jg
stc
push
pusha
mov
push
mov
adc
fdivr
stc
pop
mov
leave
dec
dec
mov
jns
or
fcom
ja
cmp
xchg
add
in
sbb
cs
sti
adc
xor
push
test
dec
or
in
xchg
adc
push
sub
retf
cdq
cmp
ret
lahf
sub
loope
pop
cld
std
ret
jo
std
ror
mov
(bad)
icebp
int3
pop
mov
push
pop
push
scas
test
data16
cmp
mov
push
pop
addr16
mov
out
mov
push
inc
popa
sbb
(bad)
xor
shr
movs
imul
xor
scas
ss
jle
pop
push
(bad)
jmp
out
inc
jb
retf
pop
test
popf
(bad)
rcr
push
hlt
stc
mov
mul
stc
(bad)
lea
lock
adc
stos
aaa
jb
dec
cmps
mov
jmp
clc
jbe
xchg
imul
call
cld
ss
inc
push
pop
out
add
pop
ins
sub
inc
pop
repnz
push
shl
add
push
inc
mov
push
sti
inc
mov
cmps
mov
sub
or
fnclex
(bad)
retf
inc
pop
add
mov
xor
adc
scas
sub
push
adc
mov
mov
sbb
or
sub
mov
inc
add
mov
cs
ror
ins
iret
xchg
sbb
call
sbb
out
mov
dec
test
js
hlt
or
mov
test
mov
mov
dec
les
sbb
sbb
cmps
push
add
enter
dec
fwait
ret
fadd
jmp
(bad)
in
sbb
mov
inc
jnp
push
mov
(bad)
adc
xlat
adc
xlat
xchg
jecxz
nop
enter
jle
cmp
push
lods
mov
pop
mov
fdiv
mov
pusha
scas
cwde
mov
push
jl
xchg
push
sbb
pop
cdq
inc
adc
(bad)
out
pushf
(bad)
cmc
adc
inc
mov
int
hlt
call
repnz
dec
push
adc
mov
cmps
push
or
hlt
imul
std
sub
adc
mov
das
xor
cmps
(bad)
sub
sbb
adc
pop
sub
jb
cld
test
cmp
les
sbb
xchg
push
dec
pop
xchg
xchg
sub
add
inc
test
jmp
int
in
hlt
(bad)
pop
inc
pop
mov
sub
(bad)
cld
es
cmp
ja
add
inc
ficomp
fisttp
shr
push
cmp
(bad)
pop
out
add
push
mov
jmp
or
test
mov
push
popa
cld
into
xor
fsubr
push
sar
sub
shl
mov
pop
dec
mov
jmp
rol
dec
repz
jmp
mov
call
adc
nop
push
pop
(bad)
pusha
ror
cs
outs
(bad)
sbb
push
mov
dec
in
dec
mov
sub
push
mov
inc
fld
cmp
imul
inc
in
cmp
js
loope
push
jbe
js
and
xchg
jae
jae
ret
add
jle
pop
lock
xor
xor
test
cmc
arpl
adc
mov
inc
fadd
dec
xchg
dec
out
jecxz
loop
adc
ins
xor
sbb
xchg
(bad)
bound
jo
jo
js
and
pop
lods
push
jle
jne
(bad)
ins
pushf
sub
cmps
mov
jns
(bad)
mov
mov
dec
mov
inc
adc
rol
(bad)
cmc
sub
je
dec
cmc
sbb
out
and
retf
sbb
into
dec
stc
or
or
pop
imul
jne
aaa
jns
dec
xchg
and
pop
into
mov
add
test
pusha
cmp
pop
addr16
sti
fs
and
sti
inc
dec
jmp
pop
mov
sbb
mov
data16
ret
(bad)
pop
pop
in
cmp
(bad)
dec
mov
imul
mov
push
popf
pop
mov
add
lea
push
xor
mov
das
xchg
gs
mov
ret
push
add
jmp
pop
sub
xor
ins
push
add
(bad)
jbe
dec
pusha
fmul
js
add
cmp
adc
mov
add
dec
jcxz
push
lods
mov
and
daa
inc
sar
dec
rcr
sbb
shl
daa
stos
stc
cmps
mov
cmp
mov
jo
fisub
xchg
test
pop
sbb
add
cwde
pop
inc
xchg
dec
scas
xchg
sbb
or
idiv
popf
sbb
popf
push
sbb
push
xchg
out
push
inc
nop
xchg
mov
jo
inc
or
mov
leave
adc
push
mov
push
mov
jle
mov
les
or
and
xchg
iret
mov
push
add
aas
(bad)
fist
rcl
xlat
xchg
push
jne
adc
add
cwde
jp
scas
pop
sub
adc
(bad)
lods
pusha
clc
adc
mov
ins
out
lock
jmp
add
inc
mov
jbe
es
add
call
jno
leave
scas
ret
pusha
or
not
jnp
sub
out
xor
scas
mov
call
or
mov
inc
push
cmps
test
nop
in
stc
sbb
pop
pop
mov
mov
inc
dec
fsub
push
test
imul
jl
mov
(bad)
inc
mov
add
mov
pop
arpl
mov
loop
xchg
out
dec
inc
mov
inc
out
aas
aad
xor
cwde
mov
mov
dec
cmp
add
fs
mov
inc
lahf
rol
shl
loopne
jnp
(bad)
dec
push
ins
shr
xlat
loopne
iret
sub
jmp
xor
push
mov
mov
stos
repz
jmp
in
cs
sbb
sub
sbb
call
jg
imul
mov
idiv
out
leave
push
inc
and
mov
ins
xor
(bad)
cwde
clc
xor
mov
and
aas
jnp
jge
or
sbb
ret
jmp
ret
popf
and
xor
shl
sub
sar
sbb
or
cmp
adc
sbb
push
cs
pop
hlt
push
mov
sub
pop
fs
imul
pop
gs
push
mov
clc
dec
test
jbe
leave
push
repnz
ret
pop
dec
retf
cs
ins
in
inc
sbb
addr16
arpl
aas
fld
xor
jmp
adc
pop
sbb
xor
data16
popa
push
in
sbb
adc
mov
jge
cs
mov
je
mov
sbb
mov
aad
ins
fisttp
and
test
int
in
movs
pop
cli
cld
and
je
mov
mov
xchg
(bad)
cmc
or
push
retf
test
out
(bad)
fistp
mov
shr
ret
ss
lahf
icebp
push
cmp
dec
dec
lods
into
aam
sub
sub
jecxz
outs
ss
push
and
gs
out
aas
and
mov
sub
push
call
loop
cmp
ret
mov
sub
stc
xchg
mov
lds
out
mov
ja
pop
xchg
jns
loope
xchg
cmps
push
mov
cld
push
mov
sbb
jl
xchg
retf
push
mov
lods
mov
js
push
retf
int3
addr16
sti
stos
pop
and
icebp
and
dec
js
out
(bad)
(bad)
pop
in
mov
xchg
sub
jb
int
and
js
sub
aad
outs
test
add
and
and
cmp
test
dec
mov
stc
add
loope
jp
gs
dec
in
inc
add
repnz
fld
push
and
retf
mov
jns
pushf
imul
push
cmp
mov
xchg
(bad)
into
es
dec
cs
jmp
push
mov
push
daa
xor
bound
jmp
cmp
add
out
dec
shr
mov
(bad)
jnp
jle
ficomp
scas
rcr
dec
jno
fimul
cdq
inc
push
sub
cld
cld
test
in
mov
pushf
rcr
fs
cdq
out
or
jne
and
and
icebp
ins
daa
adc
cli
mov
inc
ins
sbb
jb
imul
es
jb
mov
(bad)
call
aaa
and
inc
(bad)
stc
(bad)
fist
in
adc
mul
outs
mov
fwait
sbb
add
sbb
int
int
mov
jle
jmp
mov
int3
or
pop
imul
sub
ret
or
push
hlt
outs
mov
pop
les
test
mov
inc
js
pushf
fs
dec
sbb
dec
nop
test
(bad)
cmp
sbb
and
add
popf
mov
leave
aad
fisub
pop
and
icebp
shl
es
mov
hlt
mov
or
sbb
mov
xlat
sbb
mov
in
or
js
scas
cmp
imul
jmp
mul
pushfw
add
cli
sub
lds
dec
mov
jecxz
arpl
call
outs
mov
cld
shl
lds
(bad)
and
inc
pop
pop
push
or
popa
push
jle
rcl
adc
xor
dec
push
dec
sub
xchg
out
scas
and
sbb
xchg
add
fldcw
outs
jg
dec
imul
sbb
inc
add
fnstsw
fisub
add
aas
fstp
outs
pop
dec
push
fdivr
jmp
(bad)
xchg
(bad)
ja
fsubr
xor
call
add
hlt
jbe
adc
gs
cmp
rcr
mov
leave
mov
mov
mov
sub
aaa
ret
popf
leave
imul
push
mov
retf
in
xor
movs
dec
js
fbld
cmp
retf
jge
mov
in
inc
adc
or
pop
sbb
mov
jae
mov
outs
xor
popa
jns
leave
adc
push
ror
push
xor
sbb
fwait
sub
adc
gs
aaa
pop
jle
ficomp
mov
adc
mov
mov
inc
lock
jnp
or
cmp
and
test
bound
arpl
cdq
and
mov
retf
cdq
sub
pop
mov
and
pushf
sahf
bound
ret
in
dec
arpl
or
or
sbb
outs
adc
pop
dec
push
pop
jge
jle
hlt
sahf
jg
pop
icebp
jmp
test
ss
pop
shl
cs
pop
pop
cmp
test
stos
and
mov
or
dec
push
test
out
sub
test
clc
add
dec
cmps
push
dec
xchg
xor
nop
jecxz
dec
cmps
dec
mov
sbb
ins
(bad)
popf
xor
out
fdiv
idiv
xor
jl
inc
jno
mov
xchg
pop
les
jle
and
arpl
loope
mov
fcom
idiv
mov
jo
dec
(bad)
sti
fisttp
jne
fwait
push
xor
test
pop
in
push
outs
dec
inc
int3
arpl
mov
outs
adc
pop
(bad)
loop
ret
or
xchg
mov
add
test
cmp
cmp
fwait
aas
loopne
mov
cmp
pop
xor
loopne
inc
mov
mov
mov
xor
shl
rol
cmp
fwait
pushf
arpl
dec
imul
cs
jp
sbb
popa
sub
aas
adc
lods
or
into
test
lds
add
and
push
shr
gs
xchg
mov
mov
sbb
loop
sti
jp
push
ins
clc
and
ins
into
cli
cmps
repnz
or
xor
pushf
pop
mov
or
xlat
fwait
imul
and
adc
mov
stos
pop
sub
lods
neg
mov
mov
call
sbb
(bad)
ins
ja
sbb
popf
lock
xchg
lods
xchg
ja
int
mov
sbb
xchg
stos
mov
repnz
cmps
inc
(bad)
inc
dec
or
scas
repnz
mov
into
mov
cmc
dec
push
sub
in
test
jnp
push
inc
jg
pop
bound
rcl
mov
or
mov
sbb
mov
rcr
movs
push
not
cmps
das
cmp
out
dec
mov
add
jmp
cli
loopne
stc
icebp
sbb
mov
sbb
cmp
lahf
adc
mov
test
sbb
adc
pop
or
add
jle
clc
mov
inc
icebp
fcom
fbstp
repnz
in
repnz
je
lds
mov
loopne
call
jns
call
push
test
adc
xchg
out
xor
ret
or
jle
push
rol
xchg
sbb
adc
imul
xchg
cld
inc
daa
push
push
xchg
out
sub
iret
cli
mov
adc
pop
or
out
push
pop
lea
dec
(bad)
mov
fldcw
mov
scas
jp
int
stos
mov
or
dec
mov
mov
shl
in
dec
leave
sub
mov
ror
ret
fidivr
mov
out
or
in
sti
sub
cmp
sbb
push
jno
repnz
inc
(bad)
fiadd
ins
enter
sbb
aas
or
enter
jbe
or
fidivr
adc
pop
aaa
xchg
(bad)
call
dec
call
mov
nop
cmp
rcr
and
movs
cmc
shl
out
call
pop
jg
mov
imul
aaa
in
in
mov
adc
les
pop
mov
jp
jbe
shl
das
and
ins
bound
sub
mul
test
cmps
adc
dec
mov
jle
mov
lods
dec
enter
mov
lds
inc
iret
and
pop
sbb
into
popa
jecxz
stos
xchg
jl
fsub
or
retf
add
add
pop
sbb
xchg
imul
inc
push
jno
xchg
(bad)
jne
push
jecxz
pushf
idiv
or
and
xchg
sbb
adc
adc
sub
and
sub
aas
pop
cmp
or
out
int3
test
add
cld
inc
retf
inc
adc
outs
xor
inc
repz
push
xchg
push
sub
add
mov
loopne
inc
jb
ret
pop
xor
push
mov
mul
stc
inc
cmps
inc
mov
adc
(bad)
call
xchg
xchg
sahf
fmul
pop
shl
inc
add
and
add
and
push
ret
sub
test
sbb
mov
dec
xchg
ret
add
xor
std
scas
fwait
add
sub
xor
gs
jle
int
(bad)
ficomp
fprem
(bad)
inc
fld
(bad)
lahf
ret
xchg
mov
mov
jbe
push
inc
mov
inc
jle
fadd
push
icebp
scas
stos
adc
cwde
cmps
xor
mov
in
(bad)
xlat
mov
push
call
mov
arpl
test
add
dec
push
cmc
daa
jle
scas
pop
pop
cmp
jle
mov
push
cmp
loope
leave
movs
cmp
cmp
dec
les
hlt
and
xor
adc
push
mov
inc
sahf
pop
dec
arpl
scas
dec
popa
jae
fs
and
jnp
mov
cli
sahf
add
mov
sub
sub
out
jge
sbb
dec
jle
addr16
js
das
mov
cmps
leave
mov
xchg
fstp
test
mov
xchg
cs
sub
sub
das
jns
sbb
in
xchg
xchg
dec
mov
push
adc
inc
scas
push
popa
add
ror
leave
jmp
ficomp
retf
mov
ja
div
call
inc
push
add
or
sub
xor
jns
pop
jg
imul
and
scas
imul
mov
icebp
push
cmp
(bad)
stc
bound
data16
pop
inc
and
call
test
jg
adc
popa
imul
les
dec
dec
xlat
or
call
or
pop
pop
inc
ss
xor
sub
dec
jl
jns
xchg
jne
xor
loopne
mov
(bad)
dec
mov
xor
in
pop
adc
in
imul
dec
(bad)
jle
cld
iret
iret
call
test
cmp
outs
sub
and
arpl
test
mov
adc
inc
dec
add
loop
xor
lea
ror
test
movs
xchg
lea
pop
clc
cdq
jl
enter
push
shr
call
test
mov
leave
int3
mov
hlt
add
aad
addr16
ins
xor
in
dec
jo
and
lock
outs
xchg
dec
imul
iret
(bad)
cmc
in
pop
popa
dec
and
or
add
mov
inc
adc
sahf
scas
inc
cs
mov
mov
xchg
in
ret
daa
hlt
jno
sti
push
mov
and
sbb
mov
adc
das
sbb
je
cmp
mov
popa
rcl
add
ds
cmp
mov
xchg
fnsave
dec
mov
cmc
and
shr
mov
(bad)
cs
ret
test
pop
mov
call
in
xchg
pushf
sub
cdq
les
mov
push
lahf
inc
mov
in
mov
push
cmp
cmps
xor
mov
sbb
xchg
push
cmp
loopne
dec
xchg
sar
psubw
jae
add
in
jle
nop
mov
pop
sub
or
inc
cmp
ret
test
push
push
pop
imul
lock
xor
sub
movs
mov
dec
jnp
sbb
jg
cmp
cmps
mov
(bad)
cmp
sub
in
out
movs
out
pop
movs
push
push
lds
call
dec
fsubr
add
or
repz
sub
sub
out
mov
mov
ds
push
popa
out
jb
pop
or
and
cmp
adc
gs
into
stos
mov
adc
cmp
jmp
pop
mov
sbb
push
xchg
scas
sahf
jecxz
popf
mov
jmp
sar
cld
(bad)
push
mov
imul
xor
aad
cli
sbb
adc
das
mov
cmps
xchg
test
jp
arpl
cmp
fbld
xchg
xchg
or
mov
and
push
inc
mov
fsubr
add
cld
mov
fs
pop
pop
mov
adc
cmp
jl
pop
xor
dec
inc
outs
jecxz
int
and
cmp
div
xor
xor
sbb
out
popf
adc
add
adc
aas
movs
jmp
js
pushf
push
loope
adc
dec
mov
mov
pop
dec
inc
repz
fchs
jbe
aas
int
sub
ja
out
add
ins
(bad)
gs
dec
enter
sub
mov
cmc
dec
(bad)
(bad)
sbb
ins
and
or
push
stc
push
das
and
adc
data16
mov
(bad)
or
xchg
xchg
mov
mov
gs
pushf
loopne
cmc
mov
outs
mov
or
mov
cld
pop
popa
movs
arpl
pop
loopne
in
aas
(bad)
and
cwde
inc
aam
shl
jne
cmps
icebp
(bad)
mov
inc
push
jmp
cdq
mov
mov
pop
mov
or
retf
cmp
and
and
clc
shr
inc
jmp
inc
movs
hlt
shl
es
cmc
fdivr
adc
repz
push
aas
mov
sbb
jne
pop
fld
call
inc
in
not
icebp
xchg
ss
popa
cmp
jl
and
mov
ins
push
adc
mov
mov
arpl
mov
pop
shl
xchg
push
stos
push
dec
rcl
das
gs
push
mov
push
xor
or
jecxz
lock
xor
jns
retf
mov
and
xor
psrlq
imul
inc
or
aad
ret
jle
pop
fsubrp
add
int3
dec
mov
sbb
cwde
sbb
out
sub
jns
xchg
clc
push
mov
imul
cmp
inc
bound
mov
scas
push
push
adc
fcmovnb
inc
push
add
jecxz
movs
repnz
cmp
jo
push
add
into
imul
ret
addr16
loop
dec
jae
pop
jg
out
nop
and
out
jne
das
inc
out
inc
aad
xor
dec
pop
cmps
add
fisub
icebp
sub
inc
sub
mov
and
fstp
imul
scas
lea
dec
xor
push
ja
cmp
jbe
mov
outs
cli
xchg
leave
jnp
sbb
pop
add
cmp
and
(bad)
retf
xor
pop
jp
inc
pop
ja
dec
xchg
jbe
daa
aaa
popa
popa
call
xor
jmp
xlat
dec
or
pop
test
or
mov
xchg
adc
cs
mov
stos
aam
shl
sbb
(bad)
jmp
inc
mov
jge
fs
pop
xor
lea
dec
add
inc
mov
adc
push
dec
scas
sbb
or
dec
pop
inc
call
iret
mov
jecxz
pop
inc
or
not
loop
pop
lock
adc
in
xchg
push
inc
leave
add
push
fnstsw
test
lock
sbb
aam
mov
push
out
jo
mov
data16
out
rcl
xchg
dec
int3
je
popf
push
xchg
neg
sbb
or
add
outs
mov
or
sub
cmps
mov
sub
jge
mov
push
adc
and
mov
imul
cmc
fdiv
mov
lods
cmp
outs
jmp
xor
aas
je
adc
sbb
adc
scas
jmp
test
jb
xor
and
icebp
imul
popa
or
in
mov
push
popf
aas
fldenv
outs
and
jne
sbb
lahf
pop
stc
retf
push
lea
fidivr
push
aam
xchg
sub
call
jns
sbb
test
sub
or
(bad)
cmp
xor
lea
call
sti
fiadd
mov
outs
icebp
xchg
mov
cmps
or
div
ins
jle
jbe
sub
xor
mov
xchg
sbb
vpackssdw
into
and
push
inc
pop
arpl
xor
mov
aam
push
jge
pop
iret
sbb
and
hlt
sbb
(bad)
pop
out
test
pop
mov
dec
loope
outs
sbb
sub
mov
mov
or
xchg
sub
fsub
(bad)
xlat
enter
aam
mov
loop
add
and
adc
cwde
cs
push
cmp
je
aaa
outs
std
ja
js
mov
test
xor
jae
mov
bound
adc
add
ret
cmp
imul
test
scas
fisub
or
not
icebp
sahf
jle
pop
aad
mov
inc
mov
nop
inc
ret
movs
enter
out
fldcw
push
out
mov
gs
add
hlt
inc
int3
loope
out
hlt
mov
mov
push
mov
pop
and
add
movs
repz
inc
rcr
jns
mov
mov
ds
sbb
lods
mov
in
dec
mov
pusha
ins
add
add
das
cmp
adc
mov
jmp
dec
add
add
stc
(bad)
sub
adc
imul
dec
cmps
outs
adc
test
dec
mov
mov
mov
sti
or
test
aas
je
pop
test
shl
dec
mov
in
stc
or
inc
sub
sbb
dec
test
daa
sub
call
xor
jmp
ja
mov
cmovs
into
data16
mov
push
and
xchg
mov
fnstenv
jge
mov
movntq
(bad)
cmp
mov
xchg
retf
pop
rol
pop
fistp
(bad)
jne
(bad)
sbb
cmp
outs
mov
mov
mov
repz
mov
jge
jecxz
cmp
data16
add
mov
loopne
mov
pop
sub
scas
jmp
mov
and
in
adc
xchg
repnz
pusha
or
test
rcl
adc
push
mov
es
mov
sbb
and
fstp
out
cmp
cmps
bound
fs
xor
mov
xchg
scas
sbb
lock
sbb
xor
cmp
inc
inc
mov
dec
xchg
pusha
mov
or
xchg
lods
mov
in
push
fsub
push
rol
retf
inc
adc
xchg
aam
addr16
cmp
hlt
jae
imul
outs
enter
and
mov
xor
xor
aaa
shl
call
fmulp
sbb
ins
push
sub
cmps
and
repz
fisttp
jne
jecxz
or
mov
in
(bad)
call
call
or
movs
sub
mov
outs
jb
pushf
pop
mov
sub
in
retf
sahf
movs
fwait
mov
dec
movs
xlat
pop
cmps
arpl
cmps
mov
repnz
in
ins
cmp
xor
jl
in
aam
or
iret
mov
jg
jno
mov
adc
std
ds
mov
xchg
lahf
mov
adc
daa
adc
pop
mov
fisttp
rol
mov
jo
xor
mov
add
pop
rep
mov
test
test
add
jl
adc
(bad)
fdivr
xchg
jns
pop
shr
ja
lock
movs
ficomp
sub
xchg
shr
addr16
data16
and
jbe
push
xor
or
cmps
mov
jecxz
(bad)
mov
cmp
(bad)
jo
push
mov
mov
push
mov
add
call
dec
lods
sbb
data16
dec
lea
inc
xor
arpl
sub
mov
xor
jno
loope
mov
pop
fcomp
adc
inc
push
in
mov
xchg
pop
clc
pop
add
fs
and
fstp
rcr
das
adc
xlat
xchg
mov
dec
(bad)
icebp
jecxz
pop
mov
inc
ret
imul
lock
push
xchg
xchg
movs
inc
retf
add
fcmovnb
xor
and
lock
inc
rcr
pop
mov
and
dec
rcr
shl
fwait
or
out
pusha
sub
jne
cmp
test
jns
push
cmps
xchg
scas
xor
test
lahf
sbb
imul
dec
mov
lods
sub
pop
imul
and
call
xchg
dec
lds
outs
push
inc
cwde
add
fimul
sub
fidivr
movs
push
mov
je
not
cmp
and
dec
in
adc
data16
push
cdq
xchg
or
sahf
ficomp
movs
add
add
cmp
pop
jg
add
ja
popa
cdq
and
mov
pop
scas
sbb
inc
ret
lahf
je
push
or
jae
les
xor
call
fild
shr
push
dec
xchg
shl
sub
jle
and
or
cmp
cld
add
jns
jl
adc
xor
jno
dec
mov
sbb
push
add
gs
inc
or
mov
adc
dec
cli
push
and
dec
rcl
in
ret
mov
jmp
and
ds
loope
bound
mov
mov
loop
sub
jbe
dec
(bad)
popa
xor
pop
push
push
not
ror
fwait
mov
aaa
mov
mov
and
jo
test
mov
ins
jno
jg
in
xchg
cmp
test
xlat
cld
mov
adc
pop
sub
mov
retf
and
enter
sub
imul
dec
outs
and
xchg
int3
cs
adc
mov
mov
sbb
push
mov
in
xchg
fwait
inc
pop
imul
inc
jo
cmp
movs
lods
xchg
sub
(bad)
loope
loope
sub
jns
cs
jb
dec
out
mov
add
xchg
iret
call
dec
(bad)
(bad)
xlat
hlt
fstp
cmp
scas
fidiv
xchg
nop
sbb
inc
out
and
mov
rcl
aaa
ror
jecxz
mov
stc
jge
imul
scas
aas
mov
loopne
push
sbb
lock
fidiv
lahf
pop
xchg
adc
sbb
(bad)
cmc
adc
js
and
call
mov
xchg
test
jmp
mov
cld
xor
add
fbld
and
rol
push
push
sbb
jg
data16
xlat
fucomi
jmp
popa
dec
sub
xor
sub
push
mov
in
leave
inc
mov
fs
jmp
push
enter
jle
cdq
retf
(bad)
cmps
mov
mov
dec
dec
in
test
push
cmp
scas
pop
in
lods
lock
mov
jmp
jne
jo
addr16
sub
in
pop
pop
sbb
jmp
sbb
push
sub
dec
dec
xor
aad
dec
mov
add
cmp
iret
cmp
daa
outs
rol
push
adc
jb
mov
sub
add
(bad)
es
test
inc
inc
xchg
push
xor
push
xor
sub
(bad)
(bad)
jnp
popa
jns
xor
in
pmuludq
faddp
xchg
dec
or
and
retf
repz
add
in
mov
mov
adc
and
call
ror
fs
(bad)
in
sub
and
enter
cmp
test
mov
mov
adc
or
ja
mov
loopne
xchg
jge
xor
(bad)
icebp
(bad)
mov
pop
and
adc
pop
add
in
jnp
popf
(bad)
call
push
inc
mov
outs
imul
enter
cmp
mov
stc
cli
arpl
mov
push
push
in
pop
sub
push
mov
mov
bound
fdivr
mov
ins
arpl
daa
cmc
stos
sbb
dec
push
std
cmc
fiadd
cmp
mov
push
js
imul
jno
jmp
mov
cld
xchg
popa
inc
mov
js
inc
cld
popf
das
scas
hlt
add
jns
outs
pop
sbb
rcr
je
fild
adc
mov
shl
iret
or
pushf
xor
movs
mov
sar
out
cdq
popa
ja
clc
(bad)
cld
daa
scas
ret
sbb
mov
in
xlat
(bad)
dec
push
(bad)
ja
(bad)
jmp
xchg
cmp
dec
add
jecxz
mov
fs
scas
inc
dec
push
inc
das
xor
fisub
fwait
inc
out
mov
in
in
and
fbstp
pop
cmp
adc
(bad)
ins
ds
add
pop
or
aaa
in
shr
jecxz
cmp
ja
xchg
mov
cli
pop
fdiv
(bad)
out
or
jnp
test
into
shl
mov
into
mov
test
ins
or
in
mov
adc
(bad)
jns
push
je
and
out
out
(bad)
hlt
fdiv
out
cmps
mov
cmc
sub
cmc
test
addr16
add
cwde
push
fisttp
adc
repnz
add
pusha
mov
aad
or
mov
push
add
mov
xchg
int
cmp
jmp
div
mov
test
xor
jo
sahf
xor
int3
push
mov
and
mov
or
pop
jp
mov
and
mov
sub
jns
arpl
add
ret
cld
js
mov
push
imul
xchg
dec
mov
cld
mov
dec
cld
mov
ret
ins
dec
cmp
je
ret
cwde
mov
enter
cmps
mov
shr
mov
in
mov
jl
fisttp
push
stos
add
or
sbb
sub
push
mov
popa
add
jb
inc
jns
(bad)
test
stc
adc
stos
ret
and
or
push
xchg
std
dec
cmp
std
retf
sub
mov
aaa
push
adc
aas
lock
or
xor
mov
retf
sbb
data16
ins
ret
and
adc
xchg
shl
mov
jno
jmp
mov
lds
fwait
mov
rcl
or
xchg
movs
cwde
ds
icebp
cmp
cwde
(bad)
xor
enter
repnz
and
imul
dec
inc
xchg
xor
mov
mov
cmc
dec
retf
ror
and
and
push
push
out
cmps
mov
repnz
idiv
dec
das
cmp
int3
fnstsw
loope
mov
test
aam
jmp
rcl
adc
mov
jnp
es
mov
xor
popa
in
cld
cmp
and
mov
xchg
jno
stc
les
jge
outs
mov
ret
loope
mov
xor
lahf
or
js
les
pop
xor
add
and
std
fmul
daa
lea
cs
leave
lods
(bad)
(bad)
pop
stos
jno
hlt
push
mov
ja
aad
push
test
loope
pop
test
sar
repz
(bad)
in
or
adc
mov
pop
pop
sub
mov
clc
retf
mov
rol
retf
leave
div
xchg
daa
loopne
retf
jmp
jg
out
cli
mov
(bad)
sbb
mov
test
push
dec
imul
jmp
(bad)
sbb
xchg
sub
jl
mov
fimul
loop
call
and
popf
aad
repnz
inc
lds
icebp
xlat
sbb
mov
xor
jbe
cdq
xor
sbb
fidiv
or
lock
add
hlt
dec
pop
jle
adc
(bad)
popa
addr16
cmp
icebp
cmps
jecxz
(bad)
out
out
jnp
and
push
outs
inc
inc
jns
cli
jp
lock
icebp
pop
or
xchg
pop
add
pop
sub
or
popa
ins
test
outs
sub
xchg
bound
pushf
popf
data16
push
fldcw
ds
fld
ds
adc
das
shr
inc
stc
ja
and
dec
push
test
aam
xlat
push
icebp
fnstsw
repnz
leave
cli
pusha
leave
sti
pop
push
loopne
sbb
jbe
into
frstor
push
push
pop
loope
push
fdivp
rcl
cmp
adc
clc
add
adc
ficom
push
sub
jg
out
adc
int
jae
mov
mov
add
in
and
scas
js
sar
dec
in
xor
pop
lods
stos
fisttp
(bad)
xchg
test
pop
add
or
jbe
xor
outs
dec
or
sbb
pushf
jns
sub
jns
xor
xchg
xchg
stc
mov
shl
xchg
gs
push
xlat
jae
jae
add
js
js
nop
push
push
jne
mov
sub
das
mov
test
dec
aad
je
sbb
popa
nop
jb
pop
fidivr
inc
jns
mov
xor
cdq
mov
stc
push
loopne
test
nop
(bad)
int
repnz
adc
adc
push
adc
fwait
push
jge
pushf
sub
aad
xchg
inc
inc
mov
sub
push
mov
pop
pusha
mov
push
(bad)
out
and
dec
in
pop
cmovge
cmp
jno
inc
call
aaa
push
sub
sti
adc
xor
das
mov
jl
into
std
lock
adc
movs
pxor
loopne
adc
loop
jmp
outs
sbb
push
or
shr
popa
fcom
push
mov
jno
push
bound
adc
(bad)
sub
pusha
or
retf
aaa
shr
mov
jae
or
inc
mov
cmp
(bad)
jnp
not
addr16
outs
dec
fwait
cmp
jg
je
pop
jae
mov
mov
ret
pusha
or
mov
add
jns
adc
xor
xlat
rol
cwde
jmp
push
ins
ja
clc
and
mov
sub
sub
jae
addr16
loope
aaa
mov
test
stos
jge
pop
inc
inc
inc
inc
(bad)
mov
add
pop
ins
jb
push
fnsave
xor
fnstsw
adc
lods
jb
pop
stos
push
xchg
push
mov
nop
in
pop
add
popa
pop
xchg
or
inc
bound
mov
add
bound
inc
and
sbb
push
push
ret
mov
neg
rol
mov
loop
lea
push
add
push
dec
out
add
in
and
scas
mov
mov
pop
cwde
(bad)
push
jns
call
adc
inc
iret
cmp
inc
mov
mov
xchg
jl
push
pusha
sar
dec
int3
pop
sbb
jmp
call
jmp
std
das
icebp
repnz
jo
pop
test
(bad)
gs
xchg
retf
xor
sbb
inc
sbb
data16
aaa
imul
(bad)
xor
and
in
mov
mov
xchg
jge
adc
neg
std
sti
push
leave
push
dec
dec
sub
popf
rol
loopne
push
cmp
mov
pusha
and
fist
(bad)
movups
movs
mov
ins
stos
mov
mov
out
or
int3
xchg
xor
clc
scas
stos
xor
das
mov
adc
fadd
retf
push
fcmovu
jmp
mov
pop
sbb
std
or
mov
jl
test
std
repnz
mov
dec
sbb
cmp
cwde
clc
shl
das
std
ret
cdq
test
xor
jmp
popf
aam
pop
div
or
addr16
call
adc
pop
cmp
popf
cs
dec
jg
xor
arpl
ficom
addr16
fmul
out
mov
mov
push
fnop
(bad)
dec
stc
xor
scas
hlt
jbe
das
jmp
scas
cmps
push
push
test
popa
cmp
frstor
ins
lods
arpl
aaa
popa
add
(bad)
pop
and
jmp
out
outs
pop
sub
push
or
mov
push
daa
ins
fdiv
test
ss
xchg
jl
pop
enter
in
inc
jge
jmp
add
vaddpd
fmul
push
mov
xchg
loop
fs
cmp
stos
adc
mov
inc
jne
and
aad
add
xchg
shr
dec
lods
dec
fs
inc
out
lea
xchg
add
xlat
dec
xor
cmp
mov
dec
ss
iret
mov
scas
test
mov
push
pop
int3
cmc
pop
and
mov
sti
mov
dec
dec
mov
jns
cwde
stos
cmps
shl
bound
jb
pop
rcr
push
leave
jnp
call
shr
stos
dec
jno
mov
pusha
scas
addr16
pop
cmp
inc
sbb
popa
fwait
out
inc
out
leave
cdq
shl
icebp
mov
mov
pop
add
fcomp
int3
and
push
add
lods
mov
adc
outs
jle
gs
jmp
dec
jbe
mul
jae
xor
ftst
jo
sub
jmp
adc
inc
sti
mov
inc
clc
cmc
scas
mov
push
cmp
pop
cmp
mov
push
cs
std
ret
mov
cwde
xlat
lds
sbb
pop
jae
nop
and
jp
sar
cmp
mov
int3
leave
fnstsw
sysenter
aaa
fcomp
jecxz
(bad)
cmp
push
mov
in
push
in
in
shl
inc
xchg
out
mov
pop
cmps
int
stos
push
add
push
fwait
pop
sar
cmp
addr16
add
sbb
push
mov
xchg
sub
xchg
sub
out
lea
add
inc
arpl
jl
cs
ret
and
hlt
in
sbb
(bad)
sbb
lock
ins
dec
inc
add
cs
je
ds
and
pop
jl
pop
das
sbb
or
fldenv
pop
test
shl
shr
(bad)
neg
dec
aaa
cmc
and
push
jno
sub
es
xlat
or
jle
jbe
pop
sbb
pop
daa
xchg
scas
aam
stc
shl
aaa
and
sub
xchg
loope
stos
lods
fld
xchg
sub
out
cmc
and
into
fisubr
je
mov
push
cmp
xor
or
cli
movs
cdq
adc
cmp
xchg
pop
loop
inc
jmp
ror
jo
out
cli
pop
iret
sar
enter
or
imul
lods
cmp
loope
sbb
addr16
pop
mov
dec
data16
hlt
fidiv
or
mov
fadd
dec
or
cmps
mov
pusha
loope
pop
xchg
iret
out
arpl
push
mov
and
adc
jg
stos
call
pop
imul
fstp
push
jg
inc
arpl
push
mov
imul
xlat
mov
into
push
loope
or
mov
das
js
adc
lock
cli
adc
into
in
mov
das
xchg
rol
dec
shl
inc
(bad)
dec
mov
or
loopne
(bad)
(bad)
stos
int3
in
(bad)
jne
fisub
mov
jecxz
(bad)
sar
pop
mul
push
mov
mov
sub
sar
int3
mov
sub
pop
jbe
cld
push
ja
xor
sbb
pop
mov
pop
inc
outs
sbb
pop
mov
mov
sbb
jbe
inc
mov
and
and
pop
push
mov
ror
mov
dec
in
jg
int3
push
(bad)
and
sub
(bad)
mov
jmp
mov
out
mov
into
sub
pop
mov
lods
rcr
addr16
je
jg
sbb
lods
pushf
add
push
sub
push
outs
pusha
xor
sub
scas
dec
(bad)
cld
sar
jne
cmp
and
(bad)
push
jb
and
test
xor
jno
push
cmps
mov
inc
stos
sbb
test
add
outs
mov
sub
fcomp
push
pushf
ret
or
inc
ds
hlt
mov
cs
xchg
rol
pop
jns
xor
and
clc
xor
push
cmp
mov
push
mov
pop
gs
and
data16
cmps
cmp
test
ins
hlt
push
pushf
mov
test
dec
int3
int3
and
jae
pushf
and
test
loopne
rol
inc
jb
scas
sbb
ja
ret
jl
(bad)
pushf
sbb
jno
out
push
xor
add
push
xor
pop
(bad)
mov
jecxz
or
gs
cli
rcl
inc
stc
add
fst
mov
sbb
ss
gs
enter
pop
and
cmp
ins
out
shl
ret
test
pop
sbb
ret
mov
dec
enter
cwde
sub
fucomi
popf
shl
mov
retf
mov
mov
mov
push
and
loopne
pop
jl
test
mov
repnz
in
lds
(bad)
rcl
sub
retf
iret
cmps
or
shl
mov
adc
scas
add
adc
aam
push
and
cmp
sbb
mov
add
(bad)
mov
pop
out
jle
or
add
push
lods
repnz
ss
xlat
popa
xchg
ss
jae
repz
aam
nop
out
mov
retf
mov
int
lods
cwde
adc
xchg
in
xor
add
ins
add
add
data16
sbb
or
jae
mov
out
xchg
fwait
add
adc
add
sub
shl
adc
sbb
pop
dec
jmp
fdiv
sbb
jno
sub
aam
call
imul
ins
and
push
adc
push
jl
sbb
ror
mov
cs
lock
mov
aas
cld
sub
or
sub
mov
push
int3
(bad)
das
mov
adc
jns
lock
jo
dec
mov
bound
stos
or
inc
mov
ss
inc
mov
cmp
dec
paddq
or
xchg
xlat
fwait
pop
xchg
mov
sub
cdq
push
pop
and
pop
and
sbb
mov
jp
pop
or
or
push
push
out
arpl
add
push
jb
aaa
mov
sar
xor
repz
push
retf
inc
test
mov
jae
call
outs
xor
and
sub
loope
xor
sbb
(bad)
stc
adc
aas
div
cmp
mov
shr
cmp
cmp
jnp
sub
adc
fprem1
cwde
in
and
xor
jo
mov
mov
mov
sub
call
stc
or
cld
inc
adc
mov
std
pop
push
das
pop
push
lock
test
leave
jecxz
je
push
xor
imul
add
adc
addr16
(bad)
add
dec
aaa
mov
in
imul
jmp
xlat
shl
imul
jmp
jae
mov
pop
(bad)
ss
enter
inc
imul
movs
pop
dec
cmp
push
add
inc
xor
add
jmp
mov
sbb
xchg
mov
cwde
push
jecxz
enter
pop
hlt
inc
cli
imul
push
xor
mov
fstp
aad
mov
mov
mov
pop
(bad)
loop
imul
xchg
pushf
sub
mov
and
xor
or
mov
xchg
xor
or
inc
or
call
rcl
adc
lods
xchg
push
cs
xor
inc
inc
(bad)
in
mov
in
xor
shl
sti
stc
xchg
dec
adc
cmp
mov
arpl
loop
lea
dec
inc
or
jb
add
pop
movs
fdiv
push
(bad)
into
cmp
xor
mov
or
add
vorps
pop
in
sub
icebp
test
jmp
int
xor
adc
hlt
or
adc
mov
arpl
dec
addr16
mov
mov
ret
jns
adc
and
mov
imul
cmp
stc
xor
cmp
mov
lock
jnp
adc
test
or
(bad)
ins
dec
addr16
sbb
xchg
popf
ret
jo
aaa
dec
aas
cmp
popf
sbb
inc
push
push
(bad)
mov
lds
cld
mov
sar
jb
repz
push
cmp
sbb
popf
jae
xor
sub
ins
int
adc
mov
jg
mov
stos
cmp
push
push
dec
je
push
sqrtps
cmp
xlat
mov
inc
(bad)
or
xchg
dec
jle
fist
leave
jmp
outs
dec
outs
mov
dec
push
inc
scas
add
(bad)
sub
lds
daa
ret
lods
inc
mov
ret
inc
sub
(bad)
sbb
rol
repz
adc
jge
fild
xor
popf
(bad)
cmp
jae
push
mov
jp
push
or
cmp
sub
pop
retf
push
add
lock
mov
ret
cmp
(bad)
frstor
xchg
mov
test
(bad)
repz
aaa
sbb
(bad)
loopne
ins
xor
lds
daa
jge
cmp
xor
shr
and
mov
std
xor
nop
sbb
repz
cmp
outs
mov
shl
mov
push
jbe
jae
jns
sub
mov
or
adc
and
add
adc
fldcw
fwait
inc
mov
(bad)
mov
les
in
adc
xchg
mov
nop
(bad)
outs
cs
lahf
or
cmps
add
icebp
adc
clc
movs
sub
cs
inc
mov
inc
fdiv
imul
int
repz
jno
fnstenv
dec
or
(bad)
js
mov
mov
mov
pop
sahf
clc
add
jns
sahf
mov
test
lahf
pop
jmp
adc
mov
arpl
mov
or
aas
sub
es
test
and
push
pop
pop
mov
jmp
jecxz
and
shr
inc
pop
test
jecxz
or
cmp
ds
or
ja
leave
(bad)
fs
xchg
lahf
mov
inc
es
cs
pop
push
stos
ret
cmp
addr16
jmp
dec
dec
sub
ins
sti
data16
test
add
mov
mov
fwait
push
and
adc
iret
and
scas
nop
es
mov
or
xor
ins
sub
stc
mov
inc
or
or
cmp
dec
popf
inc
lahf
xchg
out
das
and
jmp
pop
sti
lods
cli
adc
cdq
sub
imul
and
add
xchg
xor
fnstsw
sub
push
and
adc
popa
mov
and
ret
mov
or
aas
jne
loopne
pop
sub
loope
or
pop
leave
or
aam
adc
aam
pop
das
lds
sar
ja
mov
int
jl
mov
fbld
jle
push
lock
push
pop
outs
jle
shl
sar
ror
push
iret
sbb
shl
jp
push
jl
sti
sub
cld
jae
(bad)
and
fucomip
adc
cmps
and
pop
daa
movs
out
out
adc
jle
imul
mov
stc
jne
movs
in
push
xor
stos
cmc
popa
out
jmp
inc
clc
div
pop
xor
dec
ss
mov
in
xchg
jecxz
push
aaa
mov
xchg
clc
aas
mov
aas
sbb
inc
cmps
loop
hlt
fistp
or
mov
fisubr
imul
or
xchg
int3
aad
push
rol
push
cmp
nop
sub
imul
mov
fld
cmp
and
test
jne
pop
clc
xchg
xor
pop
and
sbb
add
imul
movs
push
or
(bad)
mov
call
sbb
fisub
aas
push
dec
imul
xchg
out
shl
add
sbb
mov
lods
movs
mov
lahf
sar
adc
lds
cmp
xlat
dec
adc
jbe
(bad)
in
lods
mov
in
mov
push
add
mov
shr
push
mov
fst
mov
clc
and
mov
das
test
ror
loopne
cld
dec
scas
push
retf
xlat
add
shr
pop
ins
and
shr
test
add
mov
jecxz
(bad)
sub
push
popf
and
lahf
(bad)
jecxz
xor
and
dec
(bad)
cld
pop
sub
aad
test
sub
enter
adc
test
out
icebp
adc
pop
jmp
icebp
sar
inc
or
test
bound
mov
push
pop
push
add
sub
mov
push
pop
retf
arpl
mov
mov
loope
in
imul
int
aad
hlt
dec
and
jl
aaa
jle
aad
lds
add
add
sub
push
sahf
push
popf
and
clc
(bad)
jp
push
jl
and
loope
sub
fdivr
jle
and
xchg
lea
mov
icebp
jae
jne
std
sbb
aad
mov
pop
test
adc
cs
mov
(bad)
add
das
xor
fdiv
push
xchg
xchg
out
sub
xchg
lods
and
sbb
addr16
call
mov
in
daa
pop
add
adc
mov
lahf
pop
gs
jne
and
inc
call
add
test
mov
outs
jbe
inc
les
mov
push
pop
push
daa
pushf
addr16
jl
fild
or
mov
mov
sbb
and
in
sahf
fcomp
retf
dec
cdq
cmps
movs
out
and
out
sub
inc
std
std
stc
lea
lock
adc
fist
cmps
ret
dec
push
call
hlt
pop
jnp
pop
nop
fwait
jg
mul
adc
add
icebp
dec
xchg
adc
jmp
xor
out
cmp
xchg
jmp
ds
and
pop
push
push
or
and
sbb
jg
pop
rcr
leave
nop
xor
les
pop
and
mov
push
fcmovnb
and
push
pop
and
sahf
or
mov
mov
push
mov
ror
aas
inc
jo
fistp
mov
xor
adc
xor
pop
das
push
jne
cmp
dec
ja
jo
pop
hlt
adc
aas
ins
push
std
cmp
stos
pusha
loopne
cmc
sub
and
aas
or
fnstcw
stos
mov
daa
pop
neg
mov
pop
ficom
jg
js
fucomp
js
aam
push
js
mov
or
cs
movs
lahf
arpl
fisub
inc
jle
mov
psrlw
scas
xchg
sub
mov
lods
test
stos
adc
xchg
icebp
int3
rol
inc
jl
ret
imul
jp
mov
jmp
icebp
sub
mov
popa
dec
lea
pop
inc
or
sbb
jo
adc
mov
outs
jae
pop
pop
je
mov
movnti
push
adc
mov
sub
test
mov
cdq
cli
push
cdq
mov
cmp
jno
cmp
xor
mov
outs
int3
icebp
test
popf
sub
mov
mov
je
jne
imul
push
in
and
loope
mov
cdq
test
add
dec
loopne
retf
ss
xor
stc
cmp
dec
ret
lds
cmp
leave
pop
mov
push
aam
pop
mov
sahf
sbb
add
jle
cmps
fiadd
xlat
fwait
inc
jle
int3
sti
in
push
fsubr
mov
xchg
icebp
jecxz
jmp
sahf
outs
(bad)
mov
lea
(bad)
dec
pushf
fimul
in
loope
add
push
dec
dec
aad
mov
jo
shl
push
xchg
push
mov
add
push
mov
add
mov
fstp
iret
xor
(bad)
enter
push
retf
cdq
lea
loop
int3
rcr
cli
cmp
cmp
jp
pop
mov
dec
hlt
pop
int3
data16
lods
popf
xchg
cmp
sub
adc
mov
ss
pop
test
call
popa
jbe
adc
mov
cli
stc
sar
xchg
cmc
aaa
jae
add
or
sbb
pop
push
add
push
rcl
xchg
sti
jle
sbb
sti
aas
les
xor
rcr
xor
mov
ins
daa
inc
sub
sub
es
xor
mov
std
xor
pop
sbb
mov
aam
push
(bad)
jo
(bad)
sahf
jne
mov
adc
xchg
das
pmulhuw
lods
add
sub
lods
mov
push
outs
or
add
push
pushf
les
jg
mov
pushf
mov
rcl
ins
xor
add
jmp
call
sub
pop
popa
repz
pushf
and
jmp
ret
stos
pop
jmp
fistp
xchg
sub
sub
int
not
test
repnz
aas
push
sub
mov
push
push
and
mov
stos
push
inc
and
out
dec
cmp
repnz
imul
rcl
imul
sub
push
fbstp
arpl
cs
xchg
sbb
jle
arpl
in
call
mov
jbe
add
daa
dec
push
jmp
stc
mov
popa
adc
mov
xchg
inc
mov
push
(bad)
fld
push
mov
pop
icebp
test
test
pop
mov
ret
jge
cmp
retf
lea
jge
cmp
and
bound
mov
dec
adc
repnz
or
pusha
mov
cmp
(bad)
ins
imul
mov
push
jno
loope
ins
je
mov
scas
gs
test
ds
mov
jg
cmp
add
loop
adc
aas
sbb
stos
and
inc
xchg
add
iret
xchg
mov
int3
fs
jns
pop
dec
add
ret
or
fbld
fwait
rcr
sahf
pop
jmp
inc
push
sahf
mov
(bad)
retf
dec
loope
gs
hlt
inc
sbb
cmp
add
sahf
outs
add
es
inc
and
pop
aam
xchg
movs
in
call
cmp
into
dec
xchg
jns
adc
add
frstor
clc
or
xchg
dec
rcl
mov
jmp
in
adc
jmp
mov
cmps
jecxz
pop
pop
mov
xlat
cmp
mov
sti
(bad)
push
and
call
pop
add
icebp
ja
mov
(bad)
cmp
or
cmp
ja
ror
(bad)
add
jge
imul
xchg
int
adc
inc
retf
push
mov
dec
push
outs
and
stc
int3
push
jns
(bad)
(bad)
and
inc
sub
cmp
ret
sub
adc
cmps
mov
aam
sbb
push
(bad)
(bad)
inc
sbb
pushf
sbb
call
push
and
jle
push
(bad)
fdiv
js
mov
xor
jmp
mov
pushf
sub
ins
add
sbb
sub
fwait
test
mov
shl
push
es
mov
pop
add
(bad)
and
add
adc
xchg
jle
xor
ja
rol
jp
sub
test
mov
cmps
in
jne
mov
xchg
in
pop
ret
adc
and
push
bswap
std
inc
call
jo
sbb
xchg
push
xchg
cwde
add
aad
aad
mov
ss
into
lea
or
cwde
cmp
rcl
sbb
xor
and
jne
in
pop
(bad)
xor
imul
lods
cdq
js
not
or
pop
neg
or
jno
push
pop
shl
fiadd
mov
mov
xchg
imul
rcr
repnz
ja
sub
cmps
push
push
push
xchg
aad
mov
shl
std
or
and
pop
lea
retf
pop
popf
rcr
in
pushf
enter
cmps
sbb
imul
cdq
push
inc
aam
push
pop
cwde
cwde
leave
push
or
cmp
jae
movs
sub
push
adc
xchg
rcl
add
pop
xor
lea
jnp
ins
mov
push
cmp
cmps
std
mov
add
loop
pop
inc
push
sbb
rol
jo
pop
adc
popa
jnp
dec
jmp
xchg
sbb
cli
push
push
inc
retf
fs
xor
ja
fldcw
mov
jp
and
rcl
ss
push
jno
sahf
add
push
adc
jg
sub
pop
mov
dec
dec
mov
pushf
adc
sub
xlat
push
cmps
cmp
cmp
push
and
cmp
mov
push
jo
jae
cmp
and
push
clc
test
rcr
stos
fmul
and
fld
ja
ret
mov
fbld
iret
inc
dec
xchg
je
cmp
js
xchg
adc
mov
stos
sbb
mov
les
or
xor
dec
rcr
mov
inc
adc
inc
call
retf
cmps
lods
pusha
test
push
into
(bad)
rol
movs
pop
shr
test
mov
jecxz
sbb
sub
adc
push
pop
sti
jns
jae
scas
sub
out
(bad)
neg
xor
jns
inc
pop
fwait
cmp
or
int
pop
hlt
imul
sub
mov
(bad)
mov
in
or
sub
xchg
push
xor
mov
in
(bad)
sub
leave
jl
iret
std
mov
adc
or
mov
dec
sub
retf
mov
and
into
add
dec
xchg
aas
je
add
js
call
mov
mov
cmps
sub
loope
mov
test
xchg
cld
xor
stos
and
and
dec
sbb
inc
xchg
gs
hlt
scas
jecxz
cmps
addr16
fdiv
aas
or
pop
(bad)
mov
int3
or
sahf
push
mov
aad
push
add
mov
bnd
adc
popf
pop
ins
fist
(bad)
pop
jo
mov
arpl
and
or
mov
push
sbb
nop
call
mov
loop
lea
xlat
js
adc
ins
fwait
ins
pop
push
push
lock
(bad)
sub
aad
push
retf
inc
mov
test
fcomp
mov
mov
mov
test
mov
psubb
rcl
sub
pop
xor
push
cwde
dec
jle
jl
div
out
outs
es
repnz
jnp
mov
retf
xchg
sbb
pop
call
mov
add
add
sti
push
pusha
pop
scas
push
xor
mov
into
dec
jmp
sub
retf
out
cld
xchg
clc
into
ja
sbb
mov
js
call
xor
push
ror
or
mov
inc
test
pop
cmp
add
cmp
push
mov
push
push
sbb
jp
shr
or
or
lahf
retf
push
imul
or
hlt
or
sub
outs
data16
into
scas
cmp
push
push
pop
add
popf
hlt
xor
aas
ret
pop
dec
pop
mov
leave
jae
mov
xchg
aaa
lods
jae
loopne
adc
rol
in
mov
sar
out
ret
mov
dec
jmp
int3
mov
and
push
xor
push
push
and
fcomip
repz
mov
fidivr
xchg
add
push
icebp
fnstsw
add
jge
aaa
dec
mov
cmp
pop
add
jno
or
enter
push
add
cmc
fcmovnbe
cmp
ss
cld
mov
call
std
lock
push
push
sbb
(bad)
sub
out
push
rol
pop
push
mov
shr
mov
mov
aam
in
pop
mov
call
ins
or
clc
or
dec
and
mov
gs
lds
stc
add
cmp
fs
add
or
out
add
popf
or
jmp
lods
sub
out
in
iret
jo
or
cs
scas
test
cdq
mov
shl
add
daa
retf
imul
je
mov
pusha
sbb
inc
jo
sar
push
jnp
bound
lods
cmp
adc
sub
lods
sahf
jl
sub
and
aaa
push
in
(bad)
std
fld
jl
mov
rcr
out
(bad)
push
push
loop
(bad)
lar
shr
dec
movs
cmp
add
ss
retf
pop
in
inc
pop
mov
scas
push
dec
ret
js
ret
xor
and
push
popa
in
jl
cmp
call
test
sar
push
inc
or
jle
test
dec
mov
fnstenv
sbb
idiv
adc
test
or
leave
push
gs
push
xchg
popf
stos
sbb
lea
or
mov
sbb
and
xchg
bnd
adc
outs
sbb
adc
mov
mov
cmps
sar
sbb
inc
xchg
rol
pop
imul
mov
jno
loope
jmp
inc
loopne
in
xor
push
mov
inc
stos
and
out
cs
mov
jl
mov
pushf
sti
scas
push
les
cmp
inc
add
mov
cmp
int3
daa
icebp
arpl
jae
and
jecxz
pop
xor
xchg
int
mov
xchg
pop
call
adc
test
or
cmp
shr
mov
cmp
xchg
sbb
jb
loope
xor
retf
or
inc
aas
or
xor
das
jbe
mov
push
sbb
jno
test
cs
(bad)
mov
and
jmp
fstp
mov
dec
sbb
retf
jmp
cmp
out
xor
loopne
std
mov
mov
dec
ja
in
mov
inc
addr16
lock
jecxz
movs
cmp
xchg
jno
xchg
and
jmp
dec
jle
or
jmp
pop
int3
test
ror
push
sub
pop
clc
xchg
mov
ret
sbb
lahf
adc
rcr
std
pop
jle
push
aad
daa
sbb
cmp
pop
sub
jge
push
sbb
mov
hlt
shr
add
movs
vmread
xchg
xchg
sub
inc
push
jecxz
push
inc
add
test
sar
pop
aaa
(bad)
jo
dec
sar
cli
mov
dec
xchg
pop
dec
test
fcomp
push
sti
out
leave
ret
cmp
lods
scas
adc
adc
sti
ja
or
mov
jnp
mov
pop
mov
inc
sub
clc
push
adc
test
lds
jb
sub
stos
ins
and
dec
inc
sbb
mov
mov
lds
fst
mov
add
test
arpl
jno
ret
jle
sbb
push
mov
stc
sahf
xor
pop
and
jo
add
jmp
add
sbb
or
sbb
dec
push
mov
inc
mov
frstor
repnz
dec
mov
in
or
cmp
adc
jne
pop
fistp
mov
in
ds
xchg
fs
fild
stos
and
add
ins
push
jecxz
cmps
cdq
aam
mov
mov
mov
xor
jno
retf
sub
cmp
jo
push
sbb
pop
adc
sub
jb
pop
xchg
push
or
push
jp
add
push
sub
add
aam
call
inc
movs
or
pop
dec
mov
cmc
sub
fimul
jb
in
and
ficom
jnp
pop
mov
xchg
test
dec
sbb
add
ins
jmp
jecxz
test
mov
sbb
test
dec
aas
cmp
fcom
mov
push
adc
push
sti
jle
jb
sbb
mov
sti
inc
jge
ror
addr16
mov
mov
push
or
loop
mov
push
fld
mov
inc
jge
aaa
cmp
pop
jbe
sbb
xchg
cld
pop
lea
shl
clc
inc
push
es
jo
les
jno
jl
sbb
cmp
xchg
xor
mov
sbb
ret
int
cmp
pop
jmp
ins
pop
mov
cmp
aas
js
pop
loop
shr
and
mov
adc
or
mov
imul
seto
ret
mov
stc
xor
and
cmp
mov
dec
inc
fsubr
movs
dec
shl
xor
(bad)
xor
dec
enter
loope
out
cmc
push
push
fs
rol
mov
ja
pusha
movs
in
xor
xor
call
outs
(bad)
add
inc
pop
xchg
aas
xchg
fs
popa
push
jne
repz
push
jmp
adc
(bad)
rol
adc
xor
sahf
add
sub
repz
xchg
inc
mov
push
mov
cmp
retf
mov
sbb
cmp
or
or
dec
scas
cmp
sbb
stos
mov
dec
jns
adc
pop
xor
cmp
mov
in
mov
push
mov
into
nop
mov
cs
cdq
jnp
icebp
aad
fsub
bound
mov
out
scas
sub
mov
iret
inc
cdq
fsubr
loopne
inc
ret
inc
jns
mov
sub
pusha
mov
std
(bad)
jl
pop
cmp
test
inc
jmp
jb
jb
mov
add
retf
or
sahf
xchg
test
sub
mov
xchg
xchg
mov
stc
bnd
fstp
in
out
mov
adc
dec
pusha
sbb
push
or
pusha
mov
outs
xor
data16
pop
xchg
fbstp
jno
cdq
imul
xor
lea
pop
mov
push
rol
ret
mov
jnp
mov
aaa
data16
dec
cmc
dec
std
or
sbb
dec
jmp
rol
push
sbb
ja
inc
(bad)
push
mov
inc
aad
das
repz
jle
in
mov
sub
xchg
push
lods
adc
in
jl
sub
imul
sub
in
mov
jmp
iret
dec
jno
or
xchg
call
cwde
cmp
(bad)
sub
dec
mov
pop
fstcw
sub
aam
call
pop
and
push
jmp
int
or
lock
jno
jle
jl
scas
sub
push
and
mov
sahf
lds
sub
dec
adc
mov
aad
sbb
push
mov
dec
in
loope
cmp
mov
jne
cmp
popf
jecxz
push
fst
pop
popa
fwait
pop
cmps
cld
cmc
cmp
dec
push
loop
scas
dec
jp
cdq
xor
test
pusha
(bad)
gs
sahf
push
cli
lahf
or
ftst
or
outs
inc
mov
push
pop
mov
push
ins
mov
in
or
(bad)
jle
mov
or
jbe
and
add
xchg
mov
mov
adc
jae
xchg
into
out
mov
clc
aad
fwait
cmp
mov
sub
stos
push
out
cmp
add
pusha
xchg
adc
repz
inc
mov
adc
leave
mov
rcl
adc
jmp
push
dec
sbb
pop
fisub
jmp
sbb
mov
xor
mov
mov
popa
aad
clc
shl
gs
or
enter
sbb
fist
dec
fisub
inc
mov
cs
mov
fnstcw
adc
outs
call
or
xor
dec
mov
or
xor
inc
mov
pop
mov
adc
xchg
adc
out
out
cdq
inc
cmps
xchg
jne
sbb
ret
push
push
and
dec
jne
movhps
and
mov
call
xchg
mov
out
cmp
push
hlt
pop
xchg
scas
push
and
xor
mov
jmp
mov
and
dec
xor
js
jmp
push
push
and
imul
mov
fld
xchg
(bad)
call
lahf
jmp
mov
xor
aad
mov
inc
jle
adc
outs
sbb
test
xchg
loopne
add
jb
js
sub
adc
or
iret
mov
pop
cmp
sub
xor
xor
imul
in
repz
stc
lahf
jp
fimul
dec
outs
repnz
mov
mov
cmps
call
dec
cld
add
movs
cmp
fmul
dec
ror
inc
jle
cs
out
pop
mov
lods
dec
out
mov
sbb
icebp
shl
fst
stc
dec
xor
ins
out
jmp
cmp
out
xor
daa
dec
jmp
cmps
add
jl
or
scas
ins
(bad)
stc
mov
stc
dec
outs
pop
xchg
xor
and
test
cmp
cmp
call
in
loope
push
cmp
dec
popa
mov
add
mov
fidiv
add
jne
cmova
sbb
ins
call
mov
sbb
bnd
popa
inc
inc
sbb
aam
cdq
or
std
pop
cmps
mov
adc
mov
lods
nop
fwait
mov
adc
hlt
ficomp
in
std
ret
push
and
popa
es
jmp
mov
and
iret
es
lahf
(bad)
push
mov
cmps
pop
rcr
dec
retf
pop
sbb
repz
mov
pop
xchg
rcr
imul
mov
cmp
jle
fcomp
and
repz
jbe
push
and
mov
cmc
pop
mov
push
inc
pop
jnp
xor
out
es
mov
xchg
xchg
sbb
dec
or
adc
pop
xchg
cmp
jnp
fisubr
adc
xchg
fcmovnb
and
hlt
jle
xor
sbb
and
mov
mov
add
int3
pushf
push
and
dec
leave
and
and
inc
in
out
xchg
daa
retf
dec
ret
or
aas
jne
(bad)
jnp
cld
adc
bound
pop
shld
rol
jb
ret
ror
add
fisub
shr
int3
jl
mov
push
jb
jmp
outs
adc
stos
cmps
pop
aas
repnz
aam
jb
shl
mov
dec
(bad)
loop
xor
mov
pop
mov
inc
pop
dec
pushf
and
fst
int
and
(bad)
sbb
leave
xor
fdivr
mov
stos
lods
adc
idiv
or
push
and
int3
sub
inc
xchg
sub
xor
lds
push
outs
es
inc
shr
iret
clc
jns
cmp
add
push
popa
jmp
xor
clc
sbb
adc
imul
xchg
pop
inc
imul
push
xchg
rcr
pop
pusha
push
sub
mov
jmp
jge
or
mov
inc
jp
sub
shl
pop
loop
push
add
mov
sbb
es
inc
ins
out
mov
(bad)
repnz
jns
aam
add
jmp
aaa
pusha
jb
popf
fisub
shr
or
call
daa
jb
int
sub
pusha
shl
sbb
adc
xor
push
icebp
ror
mov
mov
fwait
xchg
ja
std
shl
pushf
retf
sub
xchg
fwait
mov
cmc
test
stos
and
add
fsub
das
xor
gs
mov
ret
inc
xchg
mov
lahf
rcr
or
inc
or
mov
adc
sub
cmp
or
in
xchg
repnz
popf
sahf
jl
adc
add
loope
jge
xor
inc
cmp
in
jnp
add
or
das
(bad)
mov
mov
loopne
ror
sbb
stc
in
out
aas
and
adc
cwde
push
ret
jb
leave
imul
cmp
aad
frstor
xor
daa
lahf
add
nop
ss
repz
mov
and
cld
loopne
push
push
in
movs
arpl
mov
or
add
jne
lahf
out
icebp
test
cs
xor
aam
fld
pop
cmp
clc
mov
rcr
test
inc
mov
pop
mov
jb
(bad)
pop
xor
shr
lds
add
or
imul
std
bound
mov
dec
mov
mov
dec
daa
cdq
(bad)
scas
scas
call
jmp
and
call
push
ins
js
inc
or
fsubr
pop
mov
pop
and
fadd
mov
jb
push
das
or
mov
push
test
scas
ret
xor
mov
fdiv
push
ret
xchg
sti
ss
pop
sub
and
outs
out
mov
test
sbb
sbb
xor
int
stos
and
dec
inc
in
pop
xlat
call
aam
fsub
sub
inc
xchg
bnd
xchg
mov
pop
repnz
ins
sub
in
in
mov
cli
popa
rcl
dec
in
call
mov
jbe
xor
popf
cmp
hlt
inc
xor
push
loopne
inc
aas
test
cmp
xchg
inc
(bad)
and
movs
adc
mov
fld
inc
cmc
mov
and
adc
and
cld
mov
xlat
and
ds
mov
call
cmp
jo
jnp
lahf
push
pop
fdivrp
adc
ror
xchg
or
sbb
(bad)
out
sub
jp
fist
or
xchg
(bad)
or
adc
or
retf
mov
aaa
test
cmp
test
(bad)
cld
imul
inc
call
mov
xor
and
rcl
or
jb
xchg
inc
(bad)
and
mov
dec
enter
loop
arpl
imul
mov
iret
rcl
mov
sbb
sbb
mov
movs
retf
jl
retf
fbld
sbb
idiv
nop
movs
sahf
retf
movs
cmp
jle
sub
mov
adc
xchg
pushf
cmp
sbb
fldcw
adc
push
call
out
xor
sbb
lock
cmp
fs
xchg
fcomi
(bad)
(bad)
(bad)
sub
imul
aaa
in
pushf
jecxz
dec
pop
imul
mov
xchg
out
lods
jg
pop
sbb
xor
loop
dec
stos
jae
and
sar
daa
loop
lods
stc
daa
pop
fldcw
adc
mov
jae
stos
mov
es
or
lds
pop
iret
fbstp
xchg
pop
in
adc
fadd
jnp
popa
stc
(bad)
pop
retf
push
and
xchg
jmp
xor
ins
push
data16
cwde
adc
sub
push
xchg
xchg
aam
jg
out
mov
xor
fs
sub
loope
mov
stc
enter
jns
icebp
adc
test
clc
mov
mov
stos
xor
sub
pop
pop
into
add
and
pop
fnstcw
dec
std
add
mov
and
imul
and
cwde
arpl
jo
sub
loopne
dec
sar
jbe
ins
in
sub
lahf
or
push
fcomp
cwde
xor
in
inc
ror
add
aaa
push
imul
mov
or
mov
add
fimul
cli
dec
push
inc
sub
gs
sub
sbb
push
jmp
iret
jo
loop
movs
sub
push
(bad)
sub
xor
mov
fnsave
mov
xor
fisttp
inc
fstp
mov
std
jmp
enter
jmp
mov
mov
in
xchg
hlt
(bad)
pop
not
std
dec
mov
pop
push
dec
pop
int
rol
outs
cmp
pushf
test
cmps
inc
out
stos
pop
das
xor
or
fstp
mov
pop
imul
cmp
jae
dec
adc
mov
stos
gs
xchg
out
cmps
mov
or
mov
ds
push
cmp
mov
push
ins
jle
pop
inc
pop
push
(bad)
stc
es
stc
jp
dec
sbb
cmp
fdivp
mov
es
cmp
lods
dec
inc
cdq
mov
or
mov
lea
dec
cmc
dec
jae
xor
xchg
xor
xor
popa
pop
cmp
test
add
bnd
fchs
push
add
iret
add
cmc
or
ss
adc
nop
mov
das
sbb
adc
xor
or
add
cdq
jb
ret
aam
js
cmp
sub
and
ins
iret
cmp
neg
shr
xlat
and
sahf
adc
mov
fld
dec
add
lods
gs
arpl
and
cmp
std
push
and
xchg
xor
data16
mov
sar
dec
xor
sti
std
out
mov
sbb
or
xchg
(bad)
enter
or
inc
add
sar
or
jne
pop
push
and
adc
call
out
add
cmps
shl
stos
push
push
ins
mul
mov
sub
or
cli
popf
loopne
mov
scas
and
stos
(bad)
not
add
sbb
pop
pop
cwde
adc
xor
inc
sbb
popf
rcr
stos
mov
lds
iret
mov
jne
aas
ret
cmp
nop
inc
add
inc
xchg
pop
pop
ret
push
std
jmp
in
inc
pop
loop
fcom
xor
das
push
lock
aam
ins
sbb
mov
or
retf
cmp
sti
(bad)
ins
sub
movs
addr16
add
inc
addr16
mov
and
pushf
and
loopne
inc
(bad)
mov
in
inc
pop
shl
jb
out
rcl
outs
adc
loop
xor
lahf
push
add
xlat
retf
jp
cmc
shl
ss
mov
into
add
mov
xchg
imul
call
push
cs
cmp
(bad)
call
sbb
jns
push
loope
dec
fstp
mov
mov
fnstenv
(bad)
xor
ret
jo
out
ret
xchg
pop
jae
adc
retf
jbe
jge
test
cmp
ins
add
mov
call
fwait
xchg
bound
and
jmp
enter
repnz
lds
sub
into
sub
xlat
ret
sub
cs
movs
cmp
add
loope
sbb
ds
int3
stos
add
test
push
fiadd
sub
pop
sbb
pusha
mov
test
mov
sbb
inc
jne
jns
aas
les
pop
in
push
and
shl
push
lds
and
rcl
mov
aas
xor
mov
loopne
dec
clc
push
and
add
imul
in
shl
test
inc
movs
sub
push
or
into
and
stos
enter
xor
frstor
push
out
jle
ja
retf
fisttp
and
stos
push
push
mov
mov
fucompp
xchg
pop
js
mov
xor
or
je
inc
xchg
into
sti
cmp
adc
sub
push
clc
add
das
(bad)
cld
pop
cmp
repnz
mov
cmp
dec
mov
fs
jnp
pop
inc
mov
sub
jmp
and
cmps
mov
sar
sub
fwait
push
out
adc
aas
out
add
icebp
add
inc
or
mov
and
lods
(bad)
mov
rol
xor
(bad)
jl
clc
in
stos
popa
(bad)
push
daa
pop
bt
or
repnz
mov
pop
(bad)
daa
lods
dec
cmp
aad
add
inc
imul
inc
dec
rep
pop
push
pop
cmp
and
aad
and
shl
out
dec
push
ins
jge
cdq
pop
sub
aas
inc
cdq
mov
data16
rol
(bad)
mov
test
sub
push
in
jl
dec
pop
jl
pop
pop
pop
adc
cmc
cld
dec
adc
jnp
mov
adc
jg
xchg
fcomp
ret
ds
stos
push
pop
push
inc
idiv
fldcw
loop
ins
hlt
ficomp
scas
fwait
dec
jecxz
in
ins
push
mov
aaa
fwait
lock
adc
pushf
add
movs
inc
push
push
cld
aam
inc
clc
or
mov
or
or
stos
xchg
sbb
xor
sti
cld
mov
push
call
lods
mov
test
dec
js
pop
xchg
mov
xor
cmp
jns
dec
xlat
xor
mov
and
cli
je
xchg
scas
push
in
(bad)
lahf
dec
enter
pop
jmp
loop
mov
data16
add
sbb
outs
call
pop
push
(bad)
push
add
mov
mov
ds
test
jmp
lahf
ffreep
inc
pop
outs
outs
sahf
xor
pop
sbb
mov
mov
and
mov
jg
mov
sbb
ss
into
inc
mov
nop
fldenv
outs
repz
out
mov
scas
icebp
push
mov
test
and
div
or
add
xor
ret
cmp
mov
outs
mov
imul
inc
gs
mov
adc
cmps
push
add
cmp
mov
in
aam
and
push
xchg
mov
sub
jns
not
(bad)
arpl
test
iret
fiadd
lea
rcl
enter
fldenv
push
and
pop
loopne
outs
sub
jmp
lea
mov
push
mov
rcr
test
push
test
fnstsw
jnp
mov
mov
dec
mov
add
push
sbb
mov
inc
sub
jmp
aam
jecxz
je
mov
cmps
retf
cmp
ds
movs
les
dec
pop
mov
mov
dec
inc
xor
fwait
sub
jns
or
adc
loope
adc
cwde
cmps
xchg
inc
out
sbb
out
mov
and
xchg
push
(bad)
ror
call
push
pop
mov
ss
and
inc
add
inc
fmul
jge
cwde
imul
les
call
push
repnz
and
in
jmp
cs
mov
repz
jno
sub
out
mov
inc
(bad)
mov
mov
scas
sti
idiv
jno
je
mov
repnz
jg
cmp
pop
add
adc
mov
push
add
out
push
int3
pop
cmc
es
sbb
sbb
push
mov
and
cli
xchg
push
movs
icebp
jo
jbe
into
adc
in
pop
repnz
mov
bound
ins
in
or
test
mov
(bad)
mov
adc
cld
ja
inc
mov
aaa
pop
ja
out
mov
movs
mov
aaa
lahf
mov
in
iret
(bad)
scas
inc
inc
add
std
xchg
and
adc
lock
sub
outs
adc
inc
fisub
sub
push
jbe
int
add
imul
push
push
ret
sbb
sbb
movs
ret
jns
ds
in
dec
dec
mov
rcl
push
retf
xor
(bad)
dec
adc
fcmove
in
cmp
ror
imul
fld
retf
inc
sbb
sbb
stc
xchg
mov
or
push
add
xor
xchg
popa
jge
clc
cwde
sbb
cmps
and
stos
lods
cmp
call
and
popa
clc
push
pop
mov
push
sub
sbb
or
sbb
mov
mov
pandn
xchg
cmp
xchg
test
into
mov
xchg
xchg
push
sbb
add
daa
push
jmp
inc
cmp
movs
jmp
sub
test
fmul
ds
inc
adc
push
jae
and
add
fisttp
ret
mov
aad
add
sar
stc
or
outs
sar
pop
push
lock
jl
pop
(bad)
sub
jmp
movs
cmp
mov
sti
ficomp
push
ins
push
mov
inc
cs
gs
inc
push
inc
mov
mov
ja
movs
or
inc
cmp
mov
shr
(bad)
or
jge
push
popf
in
dec
jl
jmp
in
(bad)
and
fstp
push
stos
pop
dec
outs
dec
xchg
push
mov
aas
push
icebp
movs
outs
jmp
add
push
pop
test
cli
mov
mov
pop
mov
adc
mov
pop
mov
push
cs
scas
outs
mov
mov
ins
addr16
loop
je
push
pop
iret
jl
sar
cs
in
loopne
adc
dec
and
dec
test
pop
push
int3
fistp
pusha
xchg
push
inc
sahf
ret
mov
mov
add
adc
stos
or
je
ror
fild
adc
retf
mov
pop
inc
cmc
dec
shl
ret
daa
lods
sub
gs
dec
xor
push
lock
repnz
sub
push
nop
hlt
add
ret
xor
setno
fadd
jno
fisub
sub
mov
movs
ja
dec
arpl
jp
arpl
fwait
xchg
mov
add
sub
pop
sub
jbe
fist
lock
stc
pushf
and
nop
ss
aas
mov
rep
xchg
fisub
jl
xchg
and
push
xchg
out
cmp
cmp
mov
xchg
or
dec
and
push
js
jmp
xchg
inc
movs
lods
imul
out
mov
xor
outs
(bad)
jg
loopne
jns
fprem
js
fist
dec
sbb
cwde
mov
adc
or
or
inc
loopne
adc
fcmove
test
imul
out
cmp
popf
(bad)
imul
aaa
cmp
mov
mov
out
ss
jne
cmp
jge
ret
xchg
jge
enter
test
fsubr
jae
pop
mov
stos
add
and
and
rol
sbb
xor
or
mov
sbb
sbb
addr16
test
inc
jp
ja
inc
cmp
push
dec
dec
or
sbb
pop
mov
(bad)
jecxz
push
sub
push
sub
pusha
pop
neg
add
ss
pop
rcr
jmp
into
stos
aas
data16
mov
push
rol
jg
aas
sbb
(bad)
push
adc
cs
arpl
ror
jne
push
fstp
rcl
fistp
mov
push
or
rol
ret
cmp
je
ss
jmp
push
gs
and
mov
add
out
sti
fwait
popa
ins
dec
es
lods
addr16
cli
inc
cli
cli
fidivr
jp
push
rol
mov
out
call
inc
stos
or
mov
mov
pusha
pop
add
cmp
loop
xchg
xchg
cli
mov
jecxz
pop
xchg
and
xor
scas
inc
sbb
aas
or
gs
jno
(bad)
ja
sbb
or
push
pop
loop
aaa
jnp
and
into
inc
dec
in
add
pusha
xor
in
fucom
xchg
jbe
sbb
add
mov
shr
outs
cmp
mov
lea
sbb
pop
aad
lds
dec
adc
ins
pop
or
push
sti
push
mov
mov
jb
or
not
and
shl
jl
sbb
mov
xchg
push
ret
inc
jle
pop
ss
hlt
sub
adc
inc
xchg
push
dec
arpl
dec
(bad)
shl
les
lea
fsubr
jge
sub
imul
in
adc
repnz
repz
push
mov
jne
lods
mov
cmp
jmp
ficomp
nop
stc
cwde
cwde
test
push
lods
ja
fwait
push
xor
pop
pop
cmp
mov
out
in
adc
aaa
pop
and
neg
(bad)
in
jno
loopne
push
call
movs
mov
popf
dec
pop
add
les
fmul
pop
aas
test
push
outs
or
push
xor
jecxz
adc
aaa
dec
push
hlt
or
mov
lea
jg
sti
(bad)
and
daa
ss
cmp
aaa
xchg
mov
sbb
pop
ins
sbb
pop
test
xchg
gs
nop
xor
ret
loope
dec
(bad)
sbb
cwde
gs
out
pop
mov
rol
pop
xchg
jg
retf
out
xchg
cmp
(bad)
(bad)
or
ret
out
jecxz
push
xor
ret
jle
mov
push
inc
pop
iret
sbb
and
(bad)
and
adc
and
rol
sahf
mov
sbb
push
xchg
cmps
ins
(bad)
mov
rcl
imul
loop
arpl
and
sub
(bad)
pusha
xchg
test
pop
out
retf
sahf
stos
retf
clc
test
in
cmp
aaa
mov
mov
adc
dec
je
and
xor
mov
and
push
cdq
cmp
pop
pop
pop
inc
pop
mov
pushf
addr16
pusha
ins
adc
push
sub
addr16
cld
mov
push
dec
pop
cmp
sub
and
push
gs
test
mov
inc
scas
ret
pusha
push
push
mov
(bad)
rcl
fisubr
cli
adc
imul
aam
clc
mov
mov
call
adc
out
sub
cmp
ficomp
sbb
sub
(bad)
jle
rcr
adc
cmp
add
test
inc
push
outs
retf
(bad)
cmp
adc
adc
pop
adc
out
js
in
xchg
mov
into
fmul
jl
and
fidiv
in
lods
mov
loop
push
cli
push
add
push
and
inc
leave
inc
movs
(bad)
mov
hlt
push
dec
aaa
shl
icebp
cli
scas
ins
inc
pop
mov
push
inc
test
jp
fcomp
cli
outs
jp
pop
push
in
fild
xchg
sbb
sbb
addr16
nop
ins
cmp
pop
cld
mov
cmp
add
xchg
push
nop
ret
or
arpl
cmp
or
inc
sbb
dec
pop
test
retf
test
sbb
cs
jmp
cmp
loopne
retf
ins
sub
(bad)
shr
imul
lea
mov
and
or
fld
aas
and
jecxz
xor
dec
cli
int
sub
sub
xchg
clc
push
hlt
fistp
iret
mov
jns
adc
jg
fadd
dec
or
push
jb
ror
test
sub
fmul
fsubp
push
pop
jb
jbe
mov
inc
ds
mov
cmp
pop
jno
mov
(bad)
fsubr
mov
(bad)
sbb
push
gs
dec
cmp
jnp
pop
dec
mov
cmp
push
cmp
call
and
add
cmp
repnz
push
jne
movs
xchg
je
push
mov
dec
or
out
(bad)
jae
repz
sbb
movs
sar
(bad)
adc
sbb
mov
aas
std
or
int3
das
or
sub
out
iret
js
xor
mov
inc
jno
(bad)
aam
xchg
xchg
xchg
jmp
loop
mov
mov
ss
cmp
jecxz
mov
jmp
sub
fcmovnbe
xor
mov
icebp
pop
mov
adc
int3
mov
mov
and
and
aad
call
jg
cmp
int
push
pop
push
scas
arpl
loop
aas
cdq
sar
mov
mov
jb
xlat
jo
into
pop
push
js
xor
dec
dec
call
out
inc
hlt
xor
fwait
jnp
stos
shl
ret
mov
leave
daa
out
pop
jle
sub
push
mov
push
pop
sub
leave
test
and
mov
or
stc
inc
movs
test
add
xlat
aam
xchg
cmps
shl
js
imul
inc
xchg
pop
mov
lods
mov
add
sub
ficomp
jb
and
xchg
sbb
sub
scas
lock
mov
and
loope
push
jl
int3
clc
js
ret
enter
cmc
add
js
hlt
push
push
sar
imul
(bad)
cmp
mov
push
jecxz
mov
loop
ds
add
or
test
js
cwde
sbb
add
mov
das
std
out
add
mov
aas
xor
or
mov
std
jp
sbb
test
fld
ds
and
data16
adc
in
pop
cmp
sub
xor
aad
push
cmp
(bad)
or
shr
iret
aam
mov
sbb
imul
add
xchg
test
pop
mov
aam
sub
pop
jg
jae
je
lods
daa
dec
int
sbb
and
adc
lods
iret
inc
inc
retf
mov
dec
mov
mov
or
inc
mov
jmp
jbe
inc
adc
cmp
sub
ds
ja
push
retf
cs
arpl
mov
cmp
sub
das
test
shr
in
sub
addr16
imul
sbb
test
add
jae
sub
dec
cli
outs
dec
and
xchg
call
jnp
pushf
jmp
(bad)
es
icebp
jge
add
popa
sub
sbb
xor
sub
push
sub
cmps
fsub
mov
pop
int
hlt
jo
mov
sbb
xchg
lods
or
out
jl
shr
nop
retf
popa
cmps
int
mov
add
adc
test
adc
jl
or
jle
cmp
pop
adc
mov
mov
mov
mov
ret
add
gs
sti
add
ins
and
out
dec
fwait
and
hlt
pop
test
adc
popf
mov
(bad)
dec
fsub
int
push
cdq
add
jae
in
pop
and
dec
bound
adc
(bad)
(bad)
outs
aas
fmul
push
cs
sbb
mov
xchg
mov
sbb
push
fsubp
pop
sub
add
adc
xchg
shl
or
js
pop
jl
mov
mov
sub
popa
xchg
maxps
pop
or
and
pop
es
mov
mov
sbb
rcl
xchg
(bad)
mov
fdivr
cmp
dec
or
shl
cmps
lock
mov
xlat
aam
dec
out
jecxz
cmc
inc
inc
sub
cmp
mov
rcr
cli
sub
pop
jae
inc
outs
adc
bound
add
pop
push
jns
cmp
enter
fdiv
(bad)
jno
and
sar
call
sbb
std
dec
pusha
sbb
jl
jns
mov
fucomip
xor
std
or
pop
push
lea
iret
daa
ja
vminps
call
mov
daa
(bad)
and
jnp
sbb
add
xchg
lea
hlt
cmp
(bad)
rcr
jl
xchg
out
lods
out
adc
retf
call
adc
icebp
cwde
jbe
dec
out
push
pop
in
mov
in
and
ror
and
add
movs
xchg
inc
out
adc
arpl
dec
lods
mov
lods
repz
fdivr
cld
or
data16
xor
rcl
or
cs
xchg
std
inc
bound
push
mov
stc
call
mov
dec
aam
es
push
ins
cmc
inc
cld
sub
xchg
cmp
outs
sti
cmp
push
adc
sbb
cmps
add
fistp
ss
mov
or
loope
push
or
xor
jo
xor
push
mov
(bad)
bound
mov
imul
pop
out
jge
dec
mov
gs
push
ret
imul
aad
cmp
hlt
jge
adc
push
cld
aad
(bad)
dec
or
(bad)
lock
jmp
adc
lahf
leave
sbb
jns
mov
es
mov
loopne
inc
fadd
aaa
adc
xchg
push
sbb
mov
mov
out
mov
mov
lea
xchg
push
jns
lea
(bad)
sub
pop
scas
jmp
leave
dec
clc
jg
(bad)
jge
pop
int3
sbb
std
es
and
jb
pop
push
push
test
push
addr16
fiadd
pop
ins
lahf
mov
xor
mov
in
push
bound
dec
into
and
cmp
dec
sti
xchg
mov
xchg
scas
push
stos
or
sub
and
fs
sbb
cld
mov
jle
test
xchg
add
mov
scas
pop
loop
cmp
lea
shr
iret
add
add
and
jle
aaa
add
in
sar
pop
push
or
pop
dec
pop
stos
add
cmps
iret
adc
jne
xchg
in
xchg
xchg
sub
hlt
loope
dec
repnz
cdq
test
pop
push
repz
dec
jbe
repnz
xchg
cmp
pop
xor
out
inc
cwde
nop
shl
fisubr
xchg
mov
loope
test
add
out
sbb
xor
cmps
push
call
outs
cs
sbb
xor
sbb
pop
dec
push
js
pop
cld
(bad)
push
or
and
popa
dec
popa
push
lahf
cmp
repnz
movs
mov
nop
retf
pop
fst
int
imul
enter
daa
aad
test
xchg
hlt
cmp
jns
cmps
test
scas
mov
or
outs
inc
or
jecxz
inc
and
mov
pop
cmp
xor
jb
mov
sub
aam
sub
aad
xor
push
add
les
mov
loope
dec
xor
xchg
loopne
and
dec
into
fidivr
push
mov
sub
pop
cmps
mov
popa
movs
or
cmp
xchg
into
push
test
popf
dec
push
es
or
outs
std
not
test
fimul
fsub
sbb
imul
or
stc
mov
mov
xchg
mov
leave
jle
xchg
lods
add
aas
jmp
dec
loope
ret
test
mov
xchg
adc
mov
or
xor
mov
adc
adc
mov
sub
in
xor
add
hlt
mov
sbb
mov
xchg
sar
xor
jecxz
pop
xchg
fwait
adc
mov
popa
cmp
mov
or
push
jne
cmps
rcl
lahf
jecxz
mov
cli
fild
lock
cmp
pop
xchg
icebp
pop
nop
mov
add
add
loopne
les
stos
sbb
hlt
sub
stc
movs
jmp
xchg
sub
cmp
mov
(bad)
sti
jnp
repz
neg
jmp
push
sub
retf
add
icebp
mov
jge
and
mov
cmp
enter
mov
sub
sbb
mov
pop
mov
test
mov
fmulp
in
pop
inc
popa
lods
std
pop
xchg
jmp
mov
jmp
rcl
mov
mov
int3
and
sub
dec
cmp
js
clc
xor
xor
enter
gs
das
(bad)
cmp
inc
cmp
cmps
nop
daa
jne
inc
mov
mov
and
and
(bad)
into
push
xlat
sbb
lods
movs
xchg
mov
cmp
jmp
push
jmp
mov
leave
sub
retf
add
add
movs
xchg
mov
push
nop
test
mov
and
in
and
aad
inc
outs
jp
inc
dec
fnstenv
imul
int
xchg
sbb
enter
mov
adc
aad
and
jb
iret
jmp
pop
push
mov
hlt
mov
push
aad
loopne
pop
stc
cld
gs
stos
jb
push
push
mov
push
stos
jl
cmps
and
mov
cmc
mov
or
adc
jae
ins
mov
pop
fistp
mov
lds
mov
xor
in
je
out
mov
arpl
inc
iret
pushf
les
scas
add
fs
loopne
pusha
mov
fdivp
fdiv
push
arpl
cmp
stos
out
outs
adc
adc
sbb
sub
rcl
xor
cmp
jmp
jae
pusha
jge
jle
into
(bad)
cmps
xor
(bad)
add
je
or
sti
mov
pop
push
loop
xchg
gs
jb
fdiv
push
repz
retf
movs
pop
jns
lock
sar
or
outs
fild
aad
mov
pop
lods
or
fs
loopne
mov
fdivr
sub
into
xor
out
mov
ret
and
sbb
and
dec
inc
andps
test
(bad)
mov
xchg
pop
call
fldcw
js
sar
cwde
sub
inc
dec
xchg
jo
xor
cmp
clc
or
or
repz
xor
xchg
sub
hlt
pop
das
out
mov
cmp
and
test
inc
daa
ins
fs
out
(bad)
(bad)
sbb
(bad)
mov
addr16
test
mov
lea
xchg
jb
pop
xchg
xchg
adc
outs
(bad)
jno
test
es
mov
mov
mov
arpl
scas
sub
jp
leave
sub
repnz
repz
push
and
imul
cmp
out
loope
inc
scas
cs
dec
je
mov
dec
lods
shr
mov
call
xor
test
inc
loop
out
sbb
(bad)
ds
dec
push
sbb
lods
xchg
pop
dec
stc
fs
jmp
xchg
sbb
ret
push
jmp
pop
push
ss
adc
xchg
inc
push
les
push
lea
pop
movs
out
or
inc
cmc
ins
xchg
add
nop
push
push
test
jp
fistp
mov
push
jmp
test
lods
imul
test
cmp
call
das
stos
rcr
js
and
sub
push
test
xchg
je
jge
aam
add
push
clc
mov
or
lds
outs
cmps
mov
movs
fisub
mov
std
mov
movs
in
sbb
sub
push
add
push
out
cld
call
fisub
repz
mov
pop
adc
mov
test
int
jnp
push
fild
sbb
retf
inc
sahf
push
and
cli
mov
jne
xlat
ss
cld
add
xor
jp
fwait
push
add
jmp
cmp
sahf
xor
cmp
inc
jp
cmp
fnsave
xchg
mov
shl
add
mov
stc
fisub
adc
mov
adc
pause
mov
xchg
xchg
mov
sbb
scas
mov
dec
loop
xchg
int3
mov
inc
mov
push
out
aas
sar
mov
push
je
xor
dec
rol
scas
mov
aaa
and
mov
mov
fnstenv
mov
clc
int
inc
aaa
push
mov
and
in
(bad)
adc
xchg
pop
inc
popa
in
add
dec
pop
mov
fmul
fisttp
(bad)
xor
adc
dec
ss
mov
add
and
shr
push
dec
call
fs
jmp
dec
enter
ret
nop
mov
mov
scas
mov
cmp
push
lds
popa
nop
cs
scas
jge
(bad)
imul
mov
retf
jne
fist
sbb
aas
jge
mov
push
xchg
test
jnp
xor
fwait
pop
xor
jmp
cld
retf
(bad)
cli
jge
ja
call
jno
pop
mov
mov
das
jne
jge
mov
rcl
add
repnz
push
iret
fsubr
mov
nop
test
xlat
std
push
inc
sbb
cli
mov
mov
push
mov
push
jbe
into
daa
shr
jbe
rcl
sub
xlat
mov
and
pop
jecxz
cs
pop
and
push
mov
adc
mov
(bad)
xor
call
mov
(bad)
(bad)
aaa
scas
dec
mov
shr
loope
call
aas
mov
(bad)
fld
iret
xor
jmp
xchg
dec
and
pop
int3
mov
in
jecxz
ins
inc
mov
mov
shl
inc
loop
fucomp
cmps
mov
or
push
or
cdq
and
out
imul
test
stos
imul
hlt
jns
test
sbb
(bad)
out
out
xchg
ins
out
xchg
jne
rol
push
(bad)
leave
adc
loopne
fcmovnbe
(bad)
daa
(bad)
jp
lock
cli
mov
es
dec
and
and
(bad)
jae
add
pop
add
dec
jo
pcmpgtw
push
and
pop
push
cmp
mov
shl
add
adc
sbb
in
out
mov
in
xor
aaa
ja
sti
mov
fwait
and
cmp
ret
(bad)
jge
adc
cmp
imul
les
pop
and
(bad)
adc
sub
push
addr16
mov
sub
jmp
or
inc
and
js
retf
and
movs
dec
pop
aam
xor
push
push
sub
and
xchg
les
outs
minps
clc
dec
mov
(bad)
retf
cmps
fs
push
or
movs
fstp
inc
cli
dec
dec
inc
loopne
dec
rol
push
mov
dec
bound
sbb
sbb
xchg
xchg
mov
movs
arpl
push
push
jns
dec
mov
imul
les
pop
xor
add
jno
es
iret
ja
inc
adc
rol
jb
imul
js
enter
add
jmp
add
repz
jg
jecxz
cs
rcl
pop
adc
out
lods
and
mov
xchg
xor
es
mov
repz
in
stos
and
jmp
sbb
cli
mov
(bad)
pop
xchg
out
ret
adc
mov
es
inc
sbb
add
or
push
imul
or
inc
xor
sub
outs
jp
add
jecxz
mov
xchg
pushf
sbb
nop
shl
int3
scas
repnz
repz
pop
and
js
lods
cli
jno
cmps
cmp
les
jnp
cmp
rcr
js
xchg
sar
mov
xchg
mov
movs
xchg
xchg
movs
or
outs
pop
ins
add
adc
mov
and
sub
push
pop
sub
sub
enter
cmp
adc
push
or
sub
loop
adc
push
jnp
xor
cli
lock
es
ins
jmp
jmp
pop
mov
xchg
jecxz
ins
jecxz
(bad)
push
and
es
jg
pop
imul
mov
int3
adc
push
fs
and
jmp
into
fidivr
lahf
ins
add
jb
mov
add
sub
fcomi
cld
push
imul
mov
jb
mov
sub
and
stc
(bad)
enter
daa
int3
sbb
(bad)
lock
inc
sub
mov
inc
sbb
repnz
loop
add
pop
sbb
add
inc
pop
mov
sar
pop
pop
jbe
push
cmp
cmp
cmp
retf
daa
cld
xchg
in
cld
outs
or
sub
fimul
inc
mov
shl
sar
mov
ret
push
sbb
(bad)
loop
mov
mov
cdq
lds
mov
inc
sub
bound
cs
fbstp
dec
cmc
out
xor
ins
jno
cli
ds
shl
jecxz
call
mov
popa
xor
sub
icebp
inc
pop
pop
sub
fimul
(bad)
aas
std
out
jmp
movs
mov
frstor
sti
push
xor
dec
push
fstp
xor
sbb
mov
retf
xchg
dec
inc
hlt
pop
or
xor
add
cmp
adc
jp
push
jg
mov
or
(bad)
rcl
mov
cmp
int
int3
sub
xchg
dec
or
ins
pop
dec
rsm
bnd
cmp
xchg
sbb
aas
jns
repnz
iret
mov
popf
iret
aaa
xchg
repz
rcr
mov
adc
jmp
in
push
pop
out
addr16
pop
mov
pop
(bad)
jecxz
aaa
dec
jne
jp
outs
shr
sub
in
aas
(bad)
xchg
dec
sub
popf
mov
imul
and
jns
aad
xchg
fwait
daa
fs
mov
jae
call
pop
clc
push
push
(bad)
xlat
sbb
inc
sbb
mov
(bad)
rcr
popa
iret
ins
in
arpl
jp
mov
push
mov
ror
mov
adc
ret
jae
mov
ins
mov
nop
rcr
mov
jns
fist
xor
sub
cli
leave
inc
push
push
or
movs
imul
jno
test
xor
ins
mov
jecxz
aas
push
call
mov
test
pop
in
adc
dec
jb
cmc
movs
add
jg
inc
sub
pop
mov
xor
aad
fcom
arpl
xchg
push
pop
and
push
lahf
movs
(bad)
pop
fs
jne
out
mov
dec
push
hlt
jne
repz
lods
comiss
add
sbb
stos
cdq
xor
mov
push
xor
(bad)
mov
xchg
inc
sahf
pop
dec
stc
ret
inc
outs
fwait
imul
cdq
cmp
ja
hlt
pop
jne
mov
loope
popa
mov
push
xor
ss
cmps
push
and
xor
xlat
pop
shl
mov
dec
jle
xor
cmp
scas
mov
push
xchg
dec
pop
pop
test
outs
je
and
cs
lods
int3
movs
mov
sbb
fiadd
or
shl
call
cmp
daa
mov
pop
cmps
mov
fld
sub
(bad)
jecxz
xchg
(bad)
adc
(bad)
push
sub
dec
aaa
popa
cwde
xor
iret
inc
push
call
fiadd
test
nop
je
mov
jle
jae
in
call
mov
sbb
fdiv
xchg
hlt
sahf
cli
and
lea
(bad)
mov
push
dec
cdq
sbb
jae
and
add
in
sub
cmps
jecxz
shl
ins
cmp
add
mov
dec
mov
stc
enter
ins
aad
fisub
or
mov
inc
push
je
movs
dec
cwde
adc
mov
ja
push
stc
rol
call
xor
lods
jo
sbb
mov
mov
test
pop
(bad)
fnstenv
rcr
int3
pop
push
scas
and
dec
mov
les
mov
jbe
mov
add
mov
pop
jg
in
imul
cmps
sub
mov
mov
push
fnsave
shl
pushf
shl
xchg
inc
fcomi
fwait
mov
mov
inc
mov
sbb
(bad)
sbb
shr
fwait
mov
mov
sbb
cmp
add
lock
pop
test
je
in
cmp
xchg
jp
xor
cmp
inc
(bad)
jmp
aaa
ins
mov
aas
out
(bad)
fistp
sub
dec
jecxz
xor
mov
add
sub
pusha
popf
cwde
push
mov
xchg
test
xchg
fstp
add
push
pop
mov
jl
outs
(bad)
or
test
dec
xchg
mov
ss
sub
mov
data16
loope
inc
or
fidivr
in
sbb
fild
sbb
std
fs
sbb
and
ss
cmp
sbb
add
fnstcw
xor
ds
push
aad
cs
es
cld
cli
pop
jg
and
push
xlat
mul
ss
clc
cmc
xlat
std
out
mov
dec
shl
cmp
xor
lods
adc
adc
popa
pop
addr16
repz
scas
out
inc
adc
(bad)
push
xchg
neg
sbb
push
adc
xor
cmp
iret
loopne
retf
aaa
push
iret
rol
pop
shr
cmps
xor
jb
lds
out
xchg
cmps
in
cdq
dec
outs
fidivr
adc
fsubr
dec
stos
test
xor
mov
enter
inc
loope
test
sub
adc
retf
dec
cld
out
and
jnp
outs
ja
pop
push
mov
lea
in
out
pop
add
sub
scas
add
imul
xor
add
retf
xchg
lahf
inc
adc
lock
movs
xchg
or
inc
push
ror
sti
dec
xchg
sub
das
xchg
int3
data16
jns
mov
dec
(bad)
lds
adc
arpl
lahf
mov
xor
scas
jle
mov
in
and
inc
rcl
dec
mov
fcom
ret
mov
ins
in
aas
mov
ja
adc
mul
jle
pop
push
add
cmp
or
push
std
pop
jmp
adc
je
cmp
add
add
sub
ds
lock
sbb
js
loopne
out
add
push
mov
retf
sub
aam
pop
arpl
xor
clc
outs
jnp
jmp
(bad)
xor
pop
call
(bad)
(bad)
push
test
cmp
sbb
or
adc
mov
add
sbb
add
in
gs
mov
add
retf
push
aam
iret
inc
jae
in
jg
inc
or
mov
push
sbb
xchg
lahf
inc
ret
icebp
inc
pop
ror
pop
ret
cmps
mov
mov
cmps
or
ret
test
lock
movs
xor
inc
sbb
mov
lea
or
fld
add
push
mov
adc
js
outs
cmps
fimul
hlt
(bad)
xlat
(bad)
or
ins
xchg
and
xor
xor
pop
add
aad
scas
add
sub
sahf
test
test
xor
xchg
cmp
or
dec
dec
jl
(bad)
data16
sbb
loopne
(bad)
mov
out
int
sbb
push
push
in
ret
mov
popa
mov
and
inc
mov
inc
dec
jl
movd
dec
cmps
movups
sar
shl
int3
or
rol
and
mov
jecxz
in
jle
shl
scas
xor
call
ja
sbb
cmp
xchg
push
lea
in
loopne
mov
shr
fmul
fucomip
add
pop
pop
in
xor
adc
adc
sub
cmp
jnp
cmp
xchg
out
mov
and
jg
xlat
add
jb
hlt
je
and
xor
dec
jb
mov
mov
add
loope
adc
sub
bound
pop
jb
jno
leave
jle
fimul
je
popf
push
repnz
ret
add
call
cdq
push
std
sbb
call
popa
mov
xor
jae
pop
cmp
pop
and
dec
adc
in
xchg
(bad)
fisttp
retf
add
ins
sti
xchg
mov
into
inc
inc
sbb
or
nop
inc
pop
mov
and
std
and
cmp
mov
or
aad
jmp
out
push
adc
fidiv
hlt
add
imul
inc
fcomp
loopne
ret
ds
push
xchg
jge
(bad)
aad
shl
and
adc
aam
inc
cwde
cmp
cmps
in
cs
inc
cmp
rol
mov
inc
lods
jb
ins
jbe
aad
sub
mov
iret
cdq
inc
cdq
mov
shr
xchg
das
dec
stc
xchg
sub
je
cbw
das
aas
out
mov
shl
mov
mov
push
inc
push
push
jno
(bad)
pop
in
test
mov
adc
sub
dec
adc
mov
es
outs
in
ja
mov
add
sbb
shl
jo
sub
mov
push
lahf
neg
adc
sti
nop
adc
lds
pop
out
push
mov
lea
sub
mov
out
fs
sbb
shl
jl
dec
repz
adc
mov
inc
ror
out
and
xchg
imul
das
(bad)
lahf
icebp
adc
push
pushf
push
ss
fiadd
fistp
out
pop
gs
cmp
ja
dec
fild
outs
fstp
cmp
or
xor
call
mov
jbe
mov
lock
test
fisub
icebp
jb
fs
mov
int
(bad)
into
out
push
ja
mov
dec
cld
imul
aas
int
and
xor
(bad)
and
retf
daa
mov
aas
(bad)
fadd
xor
pop
inc
daa
add
dec
jne
inc
fld
xchg
sub
mov
mov
lods
cmp
push
inc
jge
hlt
lods
scas
(bad)
stc
fdiv
mov
fwait
lahf
and
dec
outs
cwde
push
xchg
push
mov
(bad)
std
std
in
adc
pusha
jmp
push
mov
pop
cmps
cmp
cmp
in
push
mov
inc
rcr
imul
push
stc
inc
rcl
jle
xchg
xor
pushf
cmp
test
loop
out
hlt
dec
ins
push
mov
lods
scas
retf
nop
out
mov
fucomi
popa
jp
mov
sti
xor
nop
test
outs
pop
push
push
js
jae
call
lock
mov
mov
cmp
je
loopne
push
and
fld
xchg
inc
mov
pusha
xor
cwde
daa
add
shl
xlat
daa
repnz
cs
inc
sar
sar
pushf
fst
lea
push
gs
cli
mov
jns
lods
jnp
int3
inc
sbb
aad
rcr
lods
pusha
push
pop
and
sbb
jb
inc
icebp
xchg
idiv
xor
xchg
in
scas
cmps
push
retf
or
jecxz
sbb
rcr
push
ins
cmp
mov
rol
inc
inc
out
ret
shl
test
pop
cmp
jp
jge
scas
pusha
pop
or
mov
pop
repnz
inc
pop
cld
cmp
test
xchg
jl
(bad)
mov
dec
jno
jg
push
repz
popf
or
inc
mov
jbe
push
sub
xor
mov
xor
sti
popa
add
lahf
js
pop
ds
stc
sub
xor
cmp
fadd
scas
push
fwait
lock
loopne
push
cld
and
push
jnp
inc
add
ret
add
pop
adc
sbb
jmp
inc
mov
cmp
push
inc
sbb
popf
xchg
lahf
xchg
lea
clc
cmp
lahf
and
aad
mov
dec
mov
add
add
in
xor
cwde
ins
scas
inc
rcl
out
mov
inc
pop
aad
cmp
mov
jmp
scas
jmp
test
mul
daa
mov
sub
ss
sub
adc
bound
jb
mov
repnz
sbb
push
xor
clc
jns
adc
out
mov
ret
test
jno
mov
xchg
mov
ja
jns
std
mov
sti
dec
cmps
pop
xor
test
push
int
dec
inc
into
mov
popa
xchg
mov
mov
and
js
mov
add
nop
stc
aam
leave
jbe
sahf
hlt
xchg
jmp
hlt
rcr
les
in
ins
movs
dec
lods
cmp
loopne
mov
jle
inc
lea
repz
mov
pop
fiadd
aad
fwait
outs
data16
das
push
inc
or
mov
dec
mov
sbb
rol
scas
fst
outs
stc
(bad)
lea
mov
out
not
sub
cs
add
ins
dec
mov
in
inc
ins
rcr
cmp
lods
fwait
cmp
xchg
push
in
fcomi
inc
punpcklbw
fild
mov
dec
retf
xchg
iret
aam
mov
mov
mov
movs
or
cs
xor
fimul
pop
jmp
sti
neg
cld
mov
sub
jb
(bad)
out
ficom
and
inc
add
pmuludq
aas
push
outs
xor
inc
sub
jno
cli
mov
(bad)
ja
daa
enter
push
xchg
sbb
dec
cmp
sbb
pop
jmp
adc
inc
daa
pop
lahf
clc
std
cmp
arpl
iret
push
(bad)
aam
adc
and
dec
xor
pop
xlat
mov
push
fld
xor
retf
xchg
xor
repnz
fsubr
inc
(bad)
xchg
scas
scas
hlt
sbb
add
dec
repz
cmp
std
popa
sub
in
xor
out
jbe
push
arpl
xchg
sub
xor
sub
or
and
pop
pop
addr16
add
mov
cdq
adc
push
adc
aam
mov
test
gs
dec
mov
push
ja
fld
jne
cld
dec
movs
inc
and
ss
call
mov
std
repnz
imul
cmp
stos
out
daa
jb
stos
out
mov
add
test
addr16
pop
fnsave
or
jnp
lds
pusha
push
jo
mov
pop
jae
call
pop
into
ror
xlat
lock
push
push
inc
dec
sub
movs
xchg
and
jo
mov
mov
lahf
dec
or
sub
mov
mov
pop
sub
dec
sub
mov
ret
mov
aas
cmps
leave
les
test
lahf
rcl
pop
mov
adc
leave
dec
inc
(bad)
aam
mov
out
or
cmp
jmp
leave
ins
ja
in
icebp
xor
clc
mov
nop
ret
imul
cmp
icebp
call
mov
lods
pusha
sub
jno
or
mov
xor
xlat
push
loop
(bad)
mov
cmp
push
call
cmp
inc
pop
sti
das
and
sar
mov
cmc
pop
mov
and
inc
or
hlt
(bad)
adc
(bad)
mov
add
pop
aam
hlt
es
pop
xchg
sbb
fldcw
fisub
in
cmps
(bad)
aad
or
pop
push
lods
(bad)
cmp
popa
fstp
and
adc
push
push
cdq
arpl
out
cmps
rol
sub
adc
xchg
test
sub
push
cdq
cmp
repz
inc
dec
stos
ret
and
bound
mov
into
into
mov
les
xor
aam
into
add
(bad)
dec
adc
inc
add
xchg
push
stos
mov
xchg
movs
push
rcr
dec
loopne
test
push
adc
and
cld
or
std
mov
aam
sub
cmps
inc
cmp
jge
dec
leave
movs
pop
inc
call
stc
pop
or
push
xchg
es
icebp
lds
sahf
(bad)
jno
push
push
inc
pop
loop
repz
jmp
xchg
leave
push
aam
fisttp
(bad)
and
fild
ins
jnp
dec
mov
lahf
jmp
cmp
shl
stos
sar
jmp
retf
mov
dec
cli
int
pop
xchg
int3
sub
sub
push
arpl
push
pop
pop
cwde
clc
mov
repz
jmp
test
stc
call
adc
mov
dec
add
test
xchg
push
fstp
ja
dec
cs
test
add
dec
enter
mov
cmp
ins
jns
mov
cmp
loop
(bad)
jmp
push
iret
push
out
inc
retf
pop
stos
sar
lahf
mov
jmp
push
jb
ret
loope
enter
into
ins
push
sbb
pop
fsub
imul
xor
dec
fimul
in
add
les
sub
xchg
stos
clc
xor
sbb
int3
push
cmp
call
lea
fstp
bound
cmp
data16
mov
outs
add
and
ds
xchg
sbb
and
and
jmp
xchg
inc
adc
add
mov
pusha
shl
or
inc
leave
jbe
fnstenv
pop
mov
cmps
pusha
add
jmp
push
ficom
mov
sbb
aad
popf
dec
push
jge
sbb
test
pop
pop
push
mov
test
js
(bad)
shl
std
sbb
adc
or
and
pop
sub
push
lock
adc
ja
mov
mov
pop
sbb
xchg
in
xchg
jnp
jne
pop
sub
add
jp
outs
and
dec
xor
jmp
dec
mov
ret
out
cmps
scas
mov
lds
xor
je
push
popf
mov
add
test
xor
push
enter
call
jno
adc
cwde
and
ins
and
jo
pop
jbe
and
mov
cmp
std
dec
push
and
pop
mov
push
adc
test
cmps
retw
daa
(bad)
arpl
jge
pop
loopne
jno
xor
sbb
sub
or
mov
arpl
leave
sbb
jecxz
push
cmp
cwde
inc
xor
jbe
mov
or
cld
gs
fwait
ja
mov
in
jg
adc
xchg
pushf
leave
shl
not
into
fdivr
aam
clc
jbe
cdq
fwait
add
push
xor
and
pop
shl
fwait
mov
mov
lods
cwde
in
repnz
in
jo
jl
(bad)
rcr
neg
int
pop
cmps
aad
jge
jl
ds
dec
adc
mov
inc
es
sbb
out
jo
je
not
xor
scas
test
int3
adc
adc
push
inc
imul
jecxz
or
push
inc
hlt
test
outs
scas
jl
push
popa
xchg
add
or
loop
aam
xor
mov
mov
ds
pusha
push
loopne
inc
cwde
push
xchg
adc
push
shl
push
repnz
bnd
add
daa
arpl
hlt
jmp
mov
mov
xor
pop
cmc
fld
xchg
vprotd
sbb
jg
push
add
xchg
(bad)
sub
add
test
sbb
add
adc
lods
test
cdq
dec
adc
cmps
shr
and
loop
mov
xchg
mov
test
test
mov
and
std
sbb
push
xchg
inc
inc
fadd
call
outs
jecxz
ins
neg
sbb
fisub
mov
popf
push
push
xchg
(bad)
and
pushf
mov
scas
add
fwait
ss
xchg
sub
movs
loop
int
jle
mov
cmp
fimul
aaa
mov
adc
adc
(bad)
fild
ins
mov
cmp
push
mov
sub
push
repnz
rcl
sub
fdiv
retf
test
sar
cmp
pushf
std
push
push
xor
imul
data16
out
cmps
cmp
scas
fsubr
retf
mov
and
cmps
gs
mov
mov
outs
add
push
mov
jae
cld
or
xchg
aam
mov
inc
cli
fisttp
and
inc
cli
xor
push
push
dec
mov
pusha
dec
outs
push
scas
xchg
mov
sub
repz
mov
aad
out
jo
bound
or
mov
push
xor
lods
imul
xchg
mov
push
aad
lods
push
add
movs
mov
push
enter
rol
loopne
jmp
jl
inc
fwait
pop
bound
and
enter
xchg
mov
hlt
pop
and
bound
into
or
jo
dec
xor
(bad)
jmp
bound
icebp
test
or
pop
lods
ficomp
jns
jl
dec
xchg
movs
xchg
jmp
xchg
or
(bad)
mov
sub
pop
mov
sub
ja
data16
adc
xlat
sub
push
test
jbe
pop
adc
loopne
retf
xor
mov
mov
scas
pop
outs
xchg
les
pop
icebp
sub
jmp
xor
pop
pusha
cmp
out
fmul
mov
jg
cdq
pop
jns
retf
xor
js
jle
jl
xor
ficom
xchg
in
fistp
bound
fs
and
fadd
lods
jl
inc
xchg
out
imul
jns
dec
pop
push
sar
repz
les
push
outs
scas
test
loope
(bad)
jmp
jbe
(bad)
aas
call
repz
sbb
stc
lds
xor
push
xchg
mov
out
mov
sbb
lods
xlat
rcr
inc
dec
rcr
aad
sbb
mov
fadd
fs
pop
add
out
shl
out
cdq
ret
jns
in
mov
and
xchg
mov
in
dec
clc
sahf
adc
dec
mov
jmp
sub
shl
pop
mov
(bad)
std
out
and
pushf
jle
and
leave
pop
in
daa
and
sub
arpl
xor
push
add
es
adc
cmp
or
mov
ins
mov
in
dec
xchg
cmps
xchg
repnz
mov
outs
lds
movs
cmp
or
stos
push
fwait
in
mov
clc
and
xor
jne
mov
dec
(bad)
mov
dec
inc
aad
and
mov
fwait
or
cmps
ret
enter
adc
daa
rcr
out
jae
mov
add
int
or
into
inc
fistp
mov
int
movs
mov
add
call
add
call
imul
retf
aam
stos
dec
inc
ret
jo
mov
sbb
mov
loope
xchg
jno
fwait
arpl
mov
ficom
push
jbe
pop
out
or
int
push
or
or
mov
jb
or
mov
cld
sub
in
cmp
mov
imul
or
or
jmp
lock
add
inc
cmps
(bad)
xchg
mov
inc
xchg
pop
mov
cld
aas
jg
ret
cmp
inc
dec
and
bound
sbb
cmp
jg
mov
push
retf
lods
enter
(bad)
mov
xor
int
out
mov
lahf
lock
(bad)
jge
test
fwait
je
iret
inc
nop
xchg
jo
imul
push
add
aas
mov
push
mov
push
retf
dec
dec
pop
pop
stos
cmp
ror
mov
pop
in
mov
mov
adc
popf
enter
int3
xchg
push
pop
xchg
and
mov
stos
out
inc
leave
dec
sbb
fwait
dec
test
pop
add
lods
in
popf
test
xchg
out
xchg
hlt
push
icebp
pop
jle
add
es
out
ret
sub
fwait
mov
sub
jns
xchg
pop
nop
mov
pop
sbb
or
xchg
stos
(bad)
int
pop
pop
mov
sbb
test
loop
inc
mov
scas
jne
jmp
fwait
iret
retf
pop
dec
cld
add
dec
pop
or
hlt
fwait
sub
in
or
fild
outs
leave
xchg
jmp
retf
jmp
(bad)
mov
js
xchg
mov
jecxz
mov
fldcw
aaa
or
pop
(bad)
sub
mov
sbb
or
cmp
jo
lods
mov
mov
cmc
xchg
cwde
adc
sbb
sub
mov
fcmovnb
retf
(bad)
cmc
and
jne
repnz
push
dec
adc
not
mov
(bad)
jmp
jne
dec
or
je
(bad)
popa
mov
stos
push
push
(bad)
lea
jl
lock
ins
test
stos
inc
xchg
imul
push
pushf
call
iret
dec
scas
jae
shl
jg
test
nop
xchg
mov
sbb
fmul
mov
cmp
mov
test
mov
mov
retf
sbb
xor
daa
mov
cmp
movs
sbb
jbe
or
hlt
mov
das
pop
pop
jmp
(bad)
sub
push
xor
xor
ss
xor
lock
in
jmp
imul
das
dec
in
mov
mov
in
or
sbb
adc
jmp
jno
push
scas
add
mov
xchg
xchg
test
cmp
pop
pop
jb
iret
xor
cmp
pusha
test
mov
fld
sti
test
dec
bound
push
mov
jns
jle
call
push
xchg
and
xchg
call
mov
xchg
ja
jecxz
mov
add
mov
or
adc
je
lods
adc
retf
push
lock
dec
xchg
imul
pop
mov
scas
popf
retf
sub
les
xchg
lds
leave
mov
pop
inc
fimul
popa
fstp
xor
add
call
outs
rcl
fs
adc
or
dec
ret
sbb
and
cmps
cmps
add
in
cmp
rol
ss
xor
aad
(bad)
stos
mov
push
ins
mov
cmp
mov
xchg
stc
sbb
dec
dec
out
pop
mov
fsub
and
mov
mov
imul
rcr
push
jo
std
xchg
push
sbb
adc
dec
cmps
pop
out
out
or
mov
mov
add
les
imul
xor
in
xchg
ins
js
sbb
jne
dec
fstp
jmp
pop
cs
in
and
mov
(bad)
jo
call
jl
arpl
retf
jp
(bad)
(bad)
jle
add
sbb
cmp
(bad)
enter
push
jl
stc
and
lods
and
mov
adc
mov
push
mov
fmul
adc
(bad)
lods
jae
add
sbb
sbb
mov
loop
in
stc
sbb
xor
imul
adc
xchg
push
add
mov
adc
cmp
in
nop
sti
mov
or
push
ret
mov
push
mov
test
shr
fs
aad
shr
lods
int
out
mov
adc
jne
inc
pushf
mov
adc
dec
xchg
in
mov
xchg
mov
loop
fldenv
dec
sbb
xchg
jmp
inc
jge
push
cmps
and
mov
xchg
xchg
mov
push
shl
add
and
loopne
shr
cli
dec
in
jmp
dec
lds
inc
push
cmps
sub
in
pop
fistp
shl
pop
inc
jle
cs
mov
(bad)
out
or
int
pushf
leave
mov
jo
push
add
lea
std
nop
xor
call
aaa
add
cmc
push
add
push
mov
cmps
mov
pop
cmps
clc
xor
pop
ins
mov
rol
sbb
jecxz
inc
cs
out
sub
mov
movs
lods
dec
pop
aas
add
outs
std
cdq
adc
out
scas
mov
jb
add
lods
cmp
jnp
dec
loopne
lea
stc
mov
popf
xchg
clc
xchg
sbb
sub
(bad)
(bad)
dec
xchg
pop
mov
sbb
add
lods
or
fstp
scas
(bad)
adc
neg
fdivr
inc
xchg
test
cmp
push
ret
pop
pop
add
nop
and
lea
push
inc
xor
(bad)
leave
leave
mov
ds
int
repnz
popf
sti
js
jecxz
mov
push
sub
jle
and
jnp
xlat
mov
aas
dec
mov
push
imul
and
loopne
nop
aaa
mov
mov
scas
scas
(bad)
adc
adc
in
xchg
leave
mov
aad
jle
lods
inc
mov
(bad)
cmp
xor
pop
stc
rcr
adc
pop
sbb
gs
jns
stc
lea
das
mov
cmp
jl
and
arpl
mul
cwde
mov
ds
scas
sbb
imul
movs
dec
(bad)
retf
xchg
loopne
xchg
jle
jbe
pop
(bad)
(bad)
dec
mov
and
sti
dec
into
inc
adc
neg
stc
adc
movs
div
mov
jbe
out
and
inc
or
push
cmc
repz
push
into
dec
mov
sti
leave
ins
jmp
test
pop
xchg
dec
cwde
cmp
ja
fwait
push
imul
adc
inc
sbb
daa
sbb
and
ins
aam
xlat
add
ja
aad
push
xor
mov
adc
in
jle
mov
cmps
sub
int3
add
cmps
aaa
popfw
pusha
jmp
pusha
ret
xchg
fcom
add
push
jge
fcomi
and
pop
mov
push
inc
pop
adc
es
add
bound
test
fbld
xor
sbb
push
inc
cmp
mov
in
adc
push
pop
test
jae
sar
inc
lods
lods
push
rol
cmp
es
add
sub
fldenv
data16
jp
sub
(bad)
xchg
rcl
sub
mov
cmps
pop
in
push
and
jne
imul
dec
mov
push
cmp
pop
mov
xchg
inc
(bad)
cmp
push
shr
fcmovb
std
xchg
ss
cli
push
pop
pop
xchg
movs
stos
(bad)
push
div
inc
xlat
cs
cwde
jmp
adc
mov
in
or
daa
xor
mov
pop
add
fsub
xchg
arpl
ins
add
push
sbb
push
(bad)
in
dec
inc
push
jg
or
in
lods
mov
arpl
retf
jbe
jecxz
and
mov
call
inc
mov
les
ss
(bad)
mov
jno
retf
arpl
pushf
dec
dec
add
cwde
adc
sub
rcl
(bad)
out
and
adc
and
pop
(bad)
call
shl
js
stc
dec
mov
inc
cmps
push
adc
mov
hlt
iret
lea
lods
mov
mov
dec
clc
rol
xchg
cmp
push
(bad)
shl
mov
push
cdq
mov
addr16
pop
(bad)
pop
push
stos
push
dec
arpl
fucomip
lods
mov
ffree
push
ins
mov
in
sbb
adc
ins
dec
push
push
data16
sbb
retf
(bad)
movs
xor
out
sbb
xor
pop
imul
push
mov
mov
iret
inc
aas
mov
test
ja
xor
sbb
movs
mov
icebp
scas
loope
sub
mov
push
pop
in
stos
test
or
xchg
outs
cwde
scas
or
pusha
int
xchg
clc
repnz
jle
test
mov
setbe
push
sub
mov
push
lock
or
jp
inc
ja
imul
pop
enter
sub
xor
loopne
iret
dec
mov
ret
fstp
push
jo
sub
pop
jne
cmps
sbb
lock
cmp
mov
pop
inc
icebp
add
mov
pushf
popa
(bad)
push
fwait
adc
add
mov
sbb
sub
gs
call
jbe
push
inc
dec
sub
jg
mov
mov
ins
stos
jl
jmp
inc
mov
cmp
dec
push
(bad)
pop
add
cmp
mov
int
lea
daa
dec
dec
mov
inc
jp
xchg
loopne
xchg
cmp
ds
addr16
jmp
call
pop
in
xchg
lods
cmp
stos
shl
fcomi
cmp
mov
in
mul
cmp
xchg
hlt
mov
int
cld
sub
mov
mov
fidivr
jmp
out
imul
jo
adc
add
push
adc
dec
jl
movs
fst
cwde
sub
or
push
pop
aad
aaa
and
push
retf
retf
sbb
dec
(bad)
mov
mov
rcl
lock
je
xchg
imul
(bad)
xor
inc
jae
hlt
inc
(bad)
leave
(bad)
out
and
dec
loopne
popf
jno
repnz
inc
jge
sbb
jmp
add
cmpps
xor
rcl
aam
add
xchg
mov
aaa
jnp
rcl
(bad)
jmp
cwde
inc
mov
ja
inc
push
and
sub
mov
lea
shl
movs
addr16
cmp
dec
add
lahf
push
repz
dec
dec
fsubr
je
jmp
inc
aad
push
push
outs
retf
scas
test
add
or
pop
into
sbb
shr
dec
and
cmp
sbb
jae
test
(bad)
xchg
cmp
adc
lock
xchg
fwait
into
xor
std
clc
inc
neg
cmp
test
pop
sbb
push
mov
push
jmp
push
add
test
dec
xor
xor
imul
sbb
stc
retf
push
or
lock
clc
jmp
pop
retf
icebp
pop
xchg
movs
mov
loopne
adc
icebp
ftst
mov
in
loope
and
jge
repnz
jns
jb
pop
fiadd
fs
shl
sbb
cld
repnz
std
shl
aam
inc
pop
xor
popa
in
jbe
(bad)
(bad)
inc
push
rcr
pop
and
dec
inc
inc
jno
sub
aas
out
fadd
call
aam
adc
cmc
pop
mov
les
xor
dec
(bad)
or
and
cwde
add
js
jne
outs
cmps
pop
inc
sub
xor
lahf
xlat
jl
inc
aas
cmp
jne
xor
mov
cmps
cmps
mov
rcr
push
shl
shr
add
ret
pop
jb
(bad)
call
and
vpmuludq
mov
fsubr
cmp
gs
stc
jb
pop
xchg
retf
ds
mov
jae
jg
(bad)
mov
call
sbb
cld
adc
fcomp
jl
cmps
inc
in
mov
pop
jg
out
stos
mov
gs
(bad)
pop
retf
aad
hlt
retf
(bad)
mov
fwait
mov
cmp
mov
sub
clc
int
fldenv
fs
inc
sbb
sbb
pusha
adc
mov
lahf
mov
das
xchg
xchg
pop
pop
div
adc
add
nop
movs
sbb
test
xor
cli
cld
je
jnp
sbb
pop
loope
adc
cmps
aam
loop
inc
cmps
loop
xchg
dec
mov
pop
sbb
cmp
mov
rcl
aas
push
call
dec
neg
xor
push
mov
and
push
inc
mov
mov
xor
loop
xor
aad
bnd
adc
into
pop
jns
mov
pushf
mov
add
(bad)
gs
popa
cmp
clc
jne
or
and
adc
aad
sti
enter
xor
shl
not
(bad)
ds
int3
jp
sti
ror
or
add
and
(bad)
stc
ret
mov
(bad)
push
jns
cmps
retf
add
ins
push
and
(bad)
in
(bad)
push
mov
xor
cmp
push
test
pusha
mov
repz
cli
push
lods
fcomi
out
mov
dec
cmp
cli
xchg
shr
jle
mov
and
mov
out
lock
adc
push
jmp
sbb
outs
fsub
loopne
xor
loop
aad
xor
cmp
neg
and
popa
xchg
stc
jp
add
lds
scas
retf
push
jmp
mov
dec
stos
(bad)
mov
push
inc
push
pop
icebp
pop
ficomp
jl
popa
(bad)
das
ret
mov
jg
scas
jno
outs
sub
xchg
cdq
popf
imul
cs
dec
cmp
(bad)
mov
mov
cmp
lahf
(bad)
sbb
xor
add
mul
nop
sti
add
jne
and
or
je
call
ja
es
cli
push
out
add
mov
push
js
jle
jo
mov
dec
repnz
out
xchg
aaa
adc
inc
and
push
ss
nop
and
push
dec
sub
jge
ins
cmp
lds
cmp
clc
test
(bad)
sbb
push
xor
movs
ss
jmp
add
adc
cmp
mov
mov
outs
sti
xchg
pop
mov
mov
movs
or
repnz
jg
pop
jno
cmps
mov
ss
sub
(bad)
(bad)
sbb
dec
scas
es
inc
(bad)
adc
retf
or
and
push
cdq
lods
pop
push
cmp
mov
sub
cmps
xchg
(bad)
jmp
push
loop
dec
(bad)
xchg
dec
fild
xor
movs
sub
shl
ret
movs
mov
pushf
ja
sbb
fimul
mov
fisubr
nop
xor
(bad)
xor
xor
fidivr
sbb
mov
adc
adc
mov
rcl
shl
cmp
pop
scas
push
(bad)
mov
mul
xchg
push
ins
jecxz
retf
inc
lahf
or
push
icebp
and
dec
pop
xor
cdq
mov
leave
sub
pop
pop
cli
cwde
movs
sbb
fcomip
pop
pushf
xor
cmp
sub
sub
shr
cld
dec
push
jg
idiv
inc
pop
xlat
and
ss
mov
jle
shl
and
iret
adc
in
push
or
pop
cmp
fdiv
and
sahf
retf
test
lock
jg
adc
xor
outs
inc
ss
inc
xor
loope
jbe
fiadd
jg
imul
jno
or
ror
pop
inc
mov
ficomp
les
or
sub
sub
mov
(bad)
lods
adc
(bad)
dec
rcr
in
push
int3
iret
xor
adc
lea
pop
ins
xchg
sahf
sbb
aad
fisttp
test
loopne
test
cmp
sub
call
(bad)
(bad)
pop
dec
xchg
inc
xchg
pop
xchg
inc
sub
jmp
inc
jae
sbb
jb
pushf
out
dec
xchg
xchg
or
es
mov
fnstcw
xchg
sbb
sbb
pop
sub
adc
adc
shl
fisub
sbb
iret
push
mov
fdivr
mov
fdivr
xor
and
cmc
shl
iret
repnz
neg
cmps
mov
call
inc
mov
jmp
lods
sahf
adc
fsubr
test
mov
out
inc
das
dec
push
jns
arpl
add
jmp
and
pop
mov
pop
lea
cmps
daa
test
lods
js
cmp
jns
push
ins
sub
fbld
setge
arpl
lods
test
test
inc
mov
sub
jae
outs
(bad)
dec
out
pop
popa
icebp
das
mov
xor
or
mov
push
enter
outs
cmp
mov
mov
xor
mov
repz
mov
scas
into
mov
and
sub
mov
pop
jecxz
shl
jp
inc
sbb
retf
pop
shl
add
es
inc
je
loop
adc
movs
adc
jmp
xor
and
jne
out
sahf
stos
std
pop
push
shl
ins
push
mul
xchg
xor
xor
add
jo
idiv
ret
sbb
(bad)
xor
pop
xchg
mov
jge
icebp
jmp
imul
xor
jle
or
in
or
adc
cmps
dec
add
aas
and
and
test
mov
sub
(bad)
mov
jl
clc
cmp
popf
lahf
push
(bad)
mov
aas
ds
dec
outs
test
inc
lds
pop
jecxz
push
mov
sub
jmp
mov
mov
stos
xchg
rcr
cmp
das
sbb
xlat
ror
push
sti
mov
sar
cmc
jns
test
mov
ficom
int
out
pop
cmp
xor
push
dec
shl
push
cdq
arpl
loope
rdtsc
or
out
mov
mov
jns
pop
sahf
repz
mov
dec
mov
dec
lock
mov
push
inc
cmp
cmps
outs
cld
aad
retf
push
cmps
jnp
dec
in
adc
addr16
and
xor
test
test
push
sub
aaa
add
not
test
aam
push
mov
push
in
jae
cmp
xchg
pop
adc
in
sbb
dec
push
mov
or
mov
sahf
call
push
jmp
inc
outs
in
jge
add
retf
int3
lock
popa
out
mov
imul
xchg
(bad)
mov
mov
pop
xor
movs
test
movs
daa
push
xor
jp
mov
mov
dec
(bad)
enter
and
sub
mov
cmps
jae
and
jns
dec
mov
sbb
scas
stc
repnz
xchg
mov
mov
adc
add
pop
cmp
cld
fidiv
jbe
xchg
test
jp
cmps
test
ins
mov
push
(bad)
mov
jno
mov
mov
scas
mov
pop
imul
push
imul
lea
sub
retf
enter
dec
jnp
mov
jb
mov
adc
loop
xor
sbb
xchg
or
xor
int
out
test
lods
das
sub
iret
jbe
loope
shr
mov
mov
mov
repz
dec
mov
mov
lahf
push
mov
in
pop
cmp
or
inc
sbb
and
cmp
jbe
push
test
xor
stos
or
sub
mov
test
aam
pop
ffreep
or
mov
lock
lds
jg
mov
xor
das
stos
dec
and
mov
daa
inc
fcom
dec
jb
gs
mov
jg
sahf
clc
scas
jmp
dec
add
or
retf
dec
ror
xor
xor
int3
fcmovnu
cli
std
pop
jmp
mov
je
rcr
loope
ins
or
aad
and
cmps
pop
ror
sub
jno
cwde
mov
lea
add
sbb
cmc
jae
popa
cmps
ins
lahf
xor
dec
xchg
vcvtps2pd
or
outs
xor
add
lahf
imul
in
(bad)
or
push
repnz
add
mov
jmp
xchg
push
daa
mov
in
jns
(bad)
dec
sub
arpl
push
adc
jnp
jnp
xchg
sub
das
addr16
mov
mov
mov
int3
inc
int
and
mov
push
push
sbb
push
mov
sub
jmp
jge
cli
enter
je
iret
frstor
xchg
ss
lea
add
pushf
xor
or
mov
and
lock
inc
mov
push
add
clc
adc
dec
jle
fisub
arpl
and
ficom
and
das
stos
or
or
xchg
mov
cli
push
push
shl
sub
imul
jge
sub
sub
stos
lahf
mov
mov
(bad)
rol
mov
mov
push
cmp
aam
sbb
movs
xchg
mov
cld
repz
xor
inc
jge
icebp
xor
or
inc
cmp
jno
jno
adc
loop
jbe
sub
jns
push
pop
push
push
ds
stos
in
mov
in
outs
xor
jbe
sahf
jmp
test
mov
test
cli
mov
fs
scas
adc
aaa
xchg
pop
mov
dec
jae
inc
sbb
fs
repz
adc
ss
ret
push
call
dec
shr
jno
in
cmp
lods
imul
mov
pop
sub
ror
or
cmp
jge
push
das
test
mov
fsincos
in
mov
xor
or
sar
sbb
lock
dec
addr16
lods
pop
iret
cdq
add
jl
int3
xchg
fld
xchg
sub
xchg
adc
div
push
sbb
adc
sub
mov
fwait
dec
add
cdq
(bad)
sti
mov
push
inc
pop
call
push
scas
in
test
pop
mov
adc
xchg
js
std
bound
push
mov
(bad)
ficomp
rol
jmp
aad
and
xor
enter
(bad)
jne
add
shr
xor
(bad)
sub
stos
ffree
cmp
rcr
into
shl
or
dec
hlt
int
dec
cwd
add
push
fucomip
popa
jmp
push
lods
stc
cld
out
mov
dec
or
dec
cmp
lods
lahf
ss
ret
(bad)
and
shl
sub
iret
out
out
dec
xchg
aad
aad
cmps
ds
and
movs
push
push
mov
(bad)
xchg
dec
mov
pop
(bad)
sub
loopne
add
sub
cmp
sub
dec
popa
jecxz
dec
sahf
xlat
push
je
mov
xor
jg
jge
in
adc
cmp
jo
inc
popa
mov
jle
mov
fcmove
cli
or
xor
mov
push
pop
adc
cdq
sbb
fst
aad
jbe
jb
les
sub
fisubr
and
adc
pop
sub
arpl
lods
jg
sub
out
xchg
adc
test
fadd
jle
retf
ret
dec
push
repz
inc
jb
or
retf
addr16
scas
lahf
daa
add
jb
imul
xchg
sub
inc
les
mov
popa
fsub
imul
or
xchg
xchg
out
pop
popf
xchg
mov
bound
jg
daa
popf
(bad)
xlat
dec
mov
xchg
xchg
add
popf
push
clc
retf
cmp
ja
fld
out
dec
pop
call
sub
out
mov
mov
pop
arpl
mov
mov
sbb
jno
mov
fist
test
xlat
jo
or
sbb
es
cmp
push
pop
mov
in
xor
push
push
or
mov
sti
and
dec
dec
gs
retf
push
dec
fcomi
add
jno
mov
gs
mov
(bad)
lods
std
and
adc
inc
sub
popf
outs
dec
push
jge
add
shl
sbb
or
stc
addr16
int3
pop
loopne
add
aad
aam
lods
xchg
xchg
dec
retf
nop
xor
cli
aad
push
shl
xchg
pop
mov
cdq
jbe
(bad)
pop
or
inc
aas
mov
pusha
stc
pop
add
repnz
and
adc
push
pop
loopne
jnp
scas
mov
sbb
in
loopne
dec
cmp
pusha
inc
rol
dec
cmp
gs
and
je
out
ret
int3
mov
jmp
or
jo
mov
pop
movs
in
dec
jmp
fstp
out
mov
loope
adc
or
sub
daa
in
jecxz
cmp
add
jo
pop
arpl
in
inc
mov
pop
sub
jg
xor
ret
repz
std
and
std
xchg
ret
shl
inc
imul
retf
push
push
dec
sbb
mov
popf
addr16
rcr
pop
das
jg
add
cwde
inc
out
mov
mov
jns
inc
rep
bound
outs
shl
int3
data16
cmps
sbb
stc
ror
or
xor
popa
and
test
int
mov
sub
dec
mov
mov
jb
call
sar
jnp
cmps
call
sub
shr
pop
fbld
in
repz
cmps
jb
sub
inc
xchg
addr16
or
xor
push
xlat
repz
out
ss
jle
jns
inc
jmp
add
fidiv
xchg
mov
mov
jl
imul
rcl
and
mov
inc
call
inc
lods
sbb
into
inc
cmp
push
push
pop
shl
xor
lahf
cmp
fdiv
jg
rol
popf
xor
out
push
push
outs
repnz
sbb
addr16
sub
or
lods
jp
cmpxchg
fcom
out
fcmove
and
sub
outs
sub
int
shl
je
test
push
daa
cwde
cmps
mov
inc
sar
mov
mov
xlat
sbb
cwde
gs
and
push
or
add
aam
icebp
pop
xor
mov
add
fnstcw
in
adc
gs
dec
add
adc
mov
cdq
jns
inc
jne
cmp
ret
movs
movs
sbb
and
and
mul
xchg
mul
cmps
mov
sbb
rol
nop
les
sub
mov
out
jg
cmp
movs
cwde
stos
int
sub
and
fisub
pop
mov
mov
bound
aaa
mov
mov
or
jl
mov
clc
mov
push
hlt
test
mov
xor
arpl
ins
xor
push
popa
dec
inc
adc
mov
xchg
popf
fmul
inc
xor
mov
addr16
adc
and
push
fs
call
xchg
jp
xor
jo
cmps
bound
ja
and
in
inc
frstor
add
and
push
les
adc
retf
mov
movs
shr
imul
fidivr
scas
adc
mov
rcr
neg
push
js
lods
movzx
test
cmp
cdq
sbb
arpl
cld
les
mov
enter
mov
mov
push
mov
test
js
jecxz
mov
jne
push
lahf
cmp
stos
jl
pop
xchg
pushf
jmp
push
cmp
add
imul
mov
(bad)
mov
mov
sbb
xor
jg
adc
out
cwde
sub
(bad)
shl
push
push
addr16
mov
nop
dec
xchg
in
fwait
ds
shl
sbb
repz
data16
jle
and
adc
dec
and
push
ror
test
sbb
or
mov
push
inc
pop
xor
lods
fisubr
dec
jbe
pop
retf
cmp
xor
and
or
daa
mov
aam
mov
xchg
xor
cmp
cmp
sbb
jne
and
(bad)
stc
mov
pop
mov
mov
int
lds
pop
(bad)
lods
adc
out
xor
xchg
sub
dec
xlat
xlat
jecxz
mov
sub
cmp
fcmovnb
mov
pushf
xor
pslld
setne
dec
cli
imul
pop
push
add
call
call
cmp
inc
iret
lock
pop
(bad)
jmp
ja
sahf
loop
adc
push
icebp
or
jo
(bad)
jmp
push
jmp
fisub
ret
fisttp
sbb
xchg
and
sbb
xor
adc
cmps
inc
pusha
fbld
xchg
or
dec
mov
fsubr
movs
inc
mov
sbb
add
push
call
mov
ss
add
push
xor
data16
out
cld
jmp
rcr
iret
cmc
ret
lahf
cmc
fucom
mov
cmc
adc
rcr
xchg
or
enter
hlt
or
sbb
add
fmul
pop
call
dec
out
rcr
push
pop
xchg
adc
out
or
stos
adc
sbb
cmp
xchg
lods
les
ret
and
movs
hlt
fsubr
add
jmp
jl
ja
add
jae
mov
adc
loop
pop
daa
jge
movs
jmp
push
sbb
stos
adc
call
or
sub
add
dec
test
jge
push
ins
fild
fild
adc
fild
(bad)
ins
dec
in
cmps
fistp
das
pop
call
sbb
jb
cmp
sbb
test
push
push
jl
int
jle
fucomip
in
xor
cmc
mov
in
inc
(bad)
cmp
movs
lock
enter
dec
xchg
daa
mov
inc
je
fild
jecxz
push
cmp
jb
mov
jecxz
outs
fisttp
inc
arpl
add
lods
xor
inc
mov
sbb
pop
mov
int3
and
mov
jb
bound
add
mov
out
fbstp
xchg
jb
repnz
mov
dec
call
mov
cmp
xchg
push
mov
call
rcr
jb
mov
and
aas
add
(bad)
jmp
sub
loopne
fwait
scas
ja
data16
push
mov
jmp
fisttp
fadd
push
xchg
cmp
sub
test
xor
or
clc
es
cmps
jmp
bound
xor
daa
aas
add
adc
pushf
(bad)
iret
sub
mov
jo
inc
adc
push
cmp
push
in
rcr
jg
mov
shl
and
ja
fwait
xor
and
sub
sub
aam
adc
mov
scas
or
movs
scas
sub
add
aam
mov
inc
mov
sti
adc
loop
push
es
pusha
push
inc
idiv
pop
mov
mov
scas
xor
enter
cwde
inc
and
in
and
add
pop
xor
jb
mov
mov
repz
rol
inc
mov
enter
mov
cmps
and
jo
mov
in
adc
retf
adc
inc
push
and
inc
sbb
or
and
xor
(bad)
mov
inc
xchg
fdiv
imul
push
jmp
scas
mov
or
(bad)
sbb
out
sbb
(bad)
and
dec
repz
or
pop
hlt
iret
faddp
jne
jp
loop
jns
push
mov
pop
aas
cwde
dec
mov
mov
rol
dec
mov
xor
mov
or
stc
in
adc
scas
sbb
inc
pop
test
xchg
mov
ja
rol
push
lds
inc
mul
fs
ds
dec
jle
mov
retf
inc
add
mov
stc
dec
out
sar
jle
mov
test
popf
adc
(bad)
and
sub
call
mov
push
add
outs
cmp
ins
pop
aaa
xor
or
ds
jl
aas
jae
fstp
and
xchg
pop
ins
or
lock
aam
mov
icebp
adc
stos
out
mov
cmps
out
popa
je
push
sti
bound
and
iret
ja
in
shl
mov
mov
mov
jp
push
in
in
jl
cmp
pop
jp
cmp
inc
dec
inc
or
inc
stos
cdq
push
push
mov
pop
pusha
jbe
or
aam
stc
std
scas
sub
xor
out
popa
cmp
jle
mov
call
out
mov
cli
jle
aad
sbb
cwde
jp
xor
ins
jbe
mov
cmp
jne
pop
aaa
movs
pop
pushf
(bad)
imul
sub
push
dec
pushf
mov
add
push
mov
loope
adc
fwait
data16
xlat
pop
inc
inc
lahf
xchg
dec
adc
dec
(bad)
cmp
sub
cmp
mov
adc
dec
(bad)
and
inc
or
aad
std
xor
sar
loop
cmc
pop
es
fadd
ret
mov
pop
sahf
jne
jno
push
je
fldenv
xchg
pop
test
xchg
mov
dec
xor
jns
pop
adc
mov
mov
jg
mov
clc
(bad)
inc
inc
test
es
pop
pop
enter
fild
imul
pop
dec
fimul
adc
addr16
bnd
inc
inc
fldcw
cmp
cmp
ins
mov
sub
inc
test
or
push
jo
push
dec
pop
pop
mov
dec
sahf
mov
sbb
retf
mov
jle
test
xchg
ja
das
pushf
call
into
mov
cmp
jo
lock
adc
xchg
fcmovnbe
sub
test
and
test
stc
shr
adc
stos
inc
outs
call
xchg
stos
and
ds
xor
dec
inc
jne
jo
(bad)
cs
mov
push
pop
mov
fwait
ins
ins
es
adc
mov
pushf
sub
cmp
out
jo
pusha
pop
das
pop
cwde
xor
cmp
mov
ret
jl
aam
fbstp
stos
sbb
mov
cmp
bound
inc
mov
es
imul
dec
sub
or
sub
fs
in
(bad)
fcmovne
cmp
sar
inc
ins
data16
push
ficomp
outs
cmp
retf
dec
push
and
fdiv
mov
ror
mov
loopne
sbb
stos
mov
pop
inc
add
inc
ds
std
call
and
scas
outs
mov
jae
loope
fiadd
adc
popa
cmp
sbb
cmp
stos
sbb
adc
sub
(bad)
je
fstp
lods
xchg
inc
lods
fisub
dec
loopne
scas
pop
inc
into
test
add
jae
xor
push
push
out
int3
push
and
(bad)
mov
lods
je
mov
cmp
lds
popa
fnstsw
inc
mov
and
imul
adc
ins
cmp
ins
bound
xchg
dec
dec
in
mov
push
ret
call
mov
div
inc
lods
pop
fimul
(bad)
retf
retf
stos
cli
add
movs
in
mov
jg
sub
jae
outs
sbb
jp
cmp
and
fild
push
mov
loope
dec
adc
inc
clc
es
push
jns
push
retf
dec
loopne
add
push
mov
mov
fst
inc
popa
jne
test
add
push
enter
les
movs
rcl
pop
fcom
in
mov
outs
dec
inc
adc
cmp
jns
jns
adc
sbb
clc
mov
adc
xlat
mov
cli
pop
cmps
and
or
hlt
mov
push
(bad)
push
mov
ins
bound
pop
xor
scas
popf
icebp
xor
inc
jl
fwait
cwde
ins
(bad)
int3
mov
jb
sub
push
ins
mov
jp
and
cld
add
mov
pusha
mov
jle
shl
int
rol
sub
cmp
dec
pop
ret
(bad)
lods
addr16
mov
cmp
inc
cmp
in
out
in
fild
pop
fadd
cmp
data16
jle
and
leave
dec
mov
call
mov
enter
jns
mov
add
jmp
in
push
push
adc
push
dec
sub
aam
ror
rol
and
or
popa
js
cli
fcomp
inc
xchg
(bad)
or
addr16
xchg
mov
(bad)
aam
mov
enter
sbb
fsubr
mov
inc
cmp
imul
loope
or
icebp
int3
cmp
ss
mov
adc
xchg
jmp
arpl
repz
and
fs
(bad)
mov
or
jg
cmp
repnz
mov
ficomp
retf
in
mov
pop
retf
sub
jmp
push
call
mov
jp
data16
cmp
jne
xchg
out
or
pushf
mov
loop
pop
sbb
lahf
mov
leave
sbb
adc
lods
sub
lods
adc
add
inc
jmp
(bad)
fst
adc
out
dec
inc
push
mov
call
xor
test
jae
and
hlt
popf
inc
and
xchg
pusha
sbb
add
mov
scas
adc
fadd
je
sub
out
push
aad
out
mov
outs
(bad)
and
sub
mov
sar
adc
lahf
jno
fistp
or
popf
cmps
pusha
push
psrad
push
imul
loop
(bad)
sbb
inc
sbb
jle
fcom
sbb
mov
daa
xchg
(bad)
jge
stos
inc
sub
les
call
jg
mov
pop
xor
mov
call
out
call
retf
xchg
push
movs
or
push
das
imul
pop
iretw
adc
out
scas
mov
xchg
pop
jae
mov
mov
sqrtps
jle
mov
aaa
leave
jge
push
and
and
pop
pop
out
mov
add
dec
or
int3
jmp
jge
or
imul
fstp
test
lahf
lods
mov
stos
ins
popf
jl
adc
int3
add
jns
mov
add
xchg
adc
and
ror
sar
icebp
sbb
sub
mov
or
aad
pop
jno
adc
lock
in
add
jle
loop
cmp
int3
xchg
std
push
icebp
inc
in
xor
es
mov
mov
jp
jb
aas
jecxz
retf
fstp
jae
mov
(bad)
mov
and
repz
pop
call
fldenv
popa
pusha
inc
push
fwait
or
push
clc
ror
sub
mov
jge
xchg
cld
dec
outs
or
std
fsubr
retf
adc
jge
shr
xor
int
lock
out
add
jno
rcr
ja
lahf
out
call
mov
add
cdq
rol
retf
fistp
rcl
sbb
loopne
mov
jno
mov
pop
ret
sbb
fdivr
or
dec
cmp
mov
jno
out
pop
jg
sub
ret
jbe
daa
popa
jmp
dec
jecxz
mov
xchg
cs
cmp
scas
ds
mov
repnz
mov
movs
push
pop
or
inc
xchg
mov
shl
clc
pop
sub
mov
mov
pop
pusha
cmp
mov
clc
mov
mov
shl
mov
movs
inc
cmps
cli
cmp
mov
pop
mov
mov
and
cli
pop
(bad)
retf
in
inc
xor
lods
pop
sbb
xor
test
adc
dec
dec
inc
mov
(bad)
jl
(bad)
sub
cdq
sub
and
popa
or
or
retf
call
sbb
push
in
cmp
adc
xchg
bound
mov
sahf
cld
lea
test
mul
xlat
sti
xor
addr16
cmp
mov
into
fisub
(bad)
jb
push
jns
dec
adc
or
aaa
jg
mov
cmp
cmc
push
fcmovnb
repnz
rol
lods
sbb
arpl
aam
aaa
inc
inc
pop
xor
dec
add
pop
daa
neg
arpl
jl
inc
in
xchg
xor
push
mov
ins
shl
(bad)
mov
inc
cmp
inc
add
sbb
(bad)
fs
dec
add
gs
pop
(bad)
loopne
rol
add
inc
daa
push
sbb
pop
push
test
pushf
dec
out
pop
leave
fdiv
xchg
jmp
je
lods
mov
aam
mov
adc
mov
int
pushf
mov
cld
or
sahf
mov
sti
js
or
and
stos
pop
retf
(bad)
mov
ins
and
xchg
addr16
mov
mov
sub
dec
mov
add
mov
(bad)
and
(bad)
mov
xor
in
or
nop
shr
xor
push
cwde
sub
pushf
arpl
inc
mov
pop
or
adc
xchg
cdq
sub
inc
test
xchg
stc
fdivr
mov
jecxz
stos
fld
add
xchg
cmp
fnstcw
add
push
cmps
jne
std
xor
sub
sar
fsub
enter
fsubr
test
and
cmp
jecxz
xchg
jl
(bad)
(bad)
pop
mov
xor
mov
movs
mov
and
cmp
int
outs
push
idiv
rol
inc
sbb
ins
aas
sub
aad
inc
fsub
jp
out
sub
or
in
jb
mov
push
into
pop
cmp
pushf
imul
out
sbb
xor
mov
or
dec
sbb
scas
push
das
jne
xchg
pop
sbb
push
les
mov
sub
dec
push
inc
retf
or
mov
or
inc
xlat
add
lock
fisttp
sbb
sbb
sub
idiv
sbb
adc
fstp
mov
bound
dec
push
out
mov
pop
imul
inc
stos
es
adc
and
jmp
leave
enter
cmp
xchg
xor
ret
mov
into
cmps
and
or
sqrtps
and
aad
or
push
enter
inc
test
sahf
out
mov
lea
mov
cli
cmp
movs
cld
cmps
jl
mov
outs
xchg
mov
retf
iret
scas
mov
iret
mov
jle
mov
repz
or
sbb
sbb
pop
imul
dec
jae
aas
or
cld
test
dec
mov
mov
test
fadd
sub
(bad)
mov
mov
fs
xchg
and
mov
pop
rcl
data16
and
jge
jmp
ror
xlat
mov
sub
jne
jmp
xchg
dec
xor
mov
rcr
inc
or
icebp
lods
push
mov
lods
jmp
js
mov
fnsave
(bad)
pop
pop
ins
add
jge
aas
sub
cli
lea
jge
popa
mov
cli
mov
inc
scas
mov
cdq
dec
ss
push
adc
or
fst
add
or
popa
pop
test
out
fisttp
adc
arpl
ret
mov
pop
pop
sub
call
pusha
add
push
enter
inc
mov
sub
popa
sahf
fst
xchg
lea
and
mov
bndldx
out
cmps
mov
xor
sbb
lahf
jp
cs
push
mov
cli
and
inc
lock
sub
sahf
and
scas
js
inc
repnz
mov
ficomp
mov
fwait
pop
sub
(bad)
push
push
das
outs
pop
dec
sahf
stos
cli
fsubr
sbb
fwait
cdq
mov
ja
cwde
pop
test
add
push
popa
push
(bad)
lock
xor
cmp
adc
lahf
fwait
or
jg
das
add
or
scas
mov
or
mov
pop
xor
xchg
or
div
in
jno
js
enter
mov
or
mov
jmp
fld
imul
popf
cli
pop
fist
mov
imul
retf
inc
stos
imul
xchg
push
push
push
adc
fst
push
cmp
(bad)
cmp
std
ins
or
in
imul
push
xchg
push
xchg
outs
xor
adc
aas
jbe
(bad)
sbb
or
mov
or
mov
fdiv
add
lods
mov
aaa
cmp
mov
lahf
cmp
popa
stos
movs
fwait
aad
out
cmp
xchg
pushf
pop
test
pop
fld
inc
xchg
mov
enter
imul
push
pop
lahf
scas
mov
movzx
mov
stc
test
push
out
jmp
cmp
arpl
jae
lds
jns
repnz
sub
lock
cmps
fwait
mov
(bad)
jl
repz
cmp
retf
mov
jb
mov
test
daa
or
out
adc
popa
(bad)
lds
xchg
push
mov
sub
punpckhbw
cli
lock
xor
rol
mov
cmp
jb
js
adc
xchg
sahf
fcom
call
xchg
lds
ja
pop
add
out
push
pop
cmp
(bad)
xchg
mov
inc
cmp
add
mov
mov
xchg
loop
jae
dec
js
ror
or
test
or
icebp
push
cld
jbe
call
cld
test
push
into
daa
rcl
loop
loopne
adc
mov
fs
(bad)
sti
jl
pop
add
(bad)
retf
stc
test
rcr
daa
test
test
mov
xor
dec
pop
pop
pushf
mov
stc
cli
xor
dec
jne
das
cmps
rcl
mul
inc
retf
mov
gs
cmp
adc
jmp
jge
das
mov
jae
cmps
(bad)
rcr
ins
data16
ret
test
sbb
sahf
cmp
sbb
retf
and
stos
jne
repz
das
popa
leave
int3
arpl
ins
jmp
mov
push
lods
mov
cmp
retf
sub
add
test
stos
out
mov
pop
mov
jo
mov
cmp
js
jge
mov
fild
(bad)
mov
lahf
mov
cmp
test
leave
add
mov
out
lea
lahf
xchg
jmp
dec
xchg
lds
push
into
inc
push
push
ins
push
test
sub
pop
mov
jnp
adc
xchg
sbb
inc
pop
test
cmp
mov
popa
cmp
jmp
jmp
mov
push
retf
push
jp
xlat
sbb
push
inc
cmp
nop
add
mov
mov
adc
mov
jl
adc
sbb
xlat
inc
ins
jmp
push
or
xchg
pop
or
and
add
lods
push
clc
jno
push
loop
(bad)
pusha
cmp
out
push
ror
and
daa
into
fs
es
cmp
inc
adc
pushf
sar
test
dec
add
jle
jecxz
cmp
cmp
pop
in
je
das
xchg
mov
xchg
adc
sbb
jae
mov
push
bound
hlt
test
int3
mul
aam
aad
pop
stos
cdq
in
(bad)
outs
adc
popa
push
mov
push
sbb
adc
shl
clc
rol
test
aad
ja
xor
cld
ja
leave
fcmove
scas
(bad)
fiadd
aaa
mov
adc
int
adc
ret
pop
cmp
fimul
(bad)
push
mov
pop
aas
int
mov
outs
aaa
test
and
cli
cs
adc
iret
popa
test
(bad)
pushf
inc
pop
mov
lods
iret
test
in
popa
test
sub
xchg
jp
cmp
in
aad
fsub
and
(bad)
jg
jne
outs
inc
cmps
mov
pop
cmp
adc
clc
inc
xchg
mov
dec
jb
fnstsw
hlt
or
and
jge
fucomip
pusha
push
repnz
cmps
jnp
hlt
dec
dec
int
std
jl
xchg
hlt
mov
pop
xchg
jle
xchg
mov
jp
adc
mov
cdq
adc
or
push
div
inc
loopne
mov
aaa
jbe
mov
cmp
addr16
(bad)
repz
cmp
or
xor
mov
add
cdq
lods
dec
or
dec
add
test
xchg
add
xchg
or
in
enter
outs
push
sbb
add
iret
push
ds
mov
sahf
sbb
pop
mov
dec
push
mov
cmp
push
enter
and
push
mov
mov
shr
stc
fidivr
leave
dec
jb
js
mov
cmp
fdivp
lock
test
mov
xchg
sbb
shl
fbstp
jo
adc
inc
xchg
shr
mov
outs
mov
lods
xor
arpl
pop
movs
arpl
push
mov
les
hlt
sub
pop
es
sub
clc
cmp
shl
xchg
int3
xor
cmps
pop
mov
mov
(bad)
ins
imul
adc
pop
outs
mov
adc
pushf
inc
xchg
mov
sbb
fldcw
lods
call
(bad)
mov
jge
xchg
iret
xor
loope
dec
push
mov
call
jmp
or
mov
pop
inc
rcr
or
aad
cmp
bnd
call
fsubr
(bad)
and
popf
mov
mov
lods
adc
popa
adc
or
shl
mov
dec
adc
mov
push
(bad)
adc
cmp
sub
fsubrp
mov
mov
retf
(bad)
jmp
mov
dec
jecxz
adc
(bad)
pop
xlat
cmp
mov
dec
push
dec
inc
in
hlt
ss
stc
cmp
add
shl
xor
nop
sbb
fist
mov
mov
sbb
adc
sbb
cmps
push
mov
inc
int3
mul
sbb
sar
aas
mov
fldenv
out
xchg
xchg
fidiv
scas
jge
xchg
jne
dec
sub
jno
scas
gs
ss
adc
push
cdq
iret
je
add
dec
xor
lock
sub
jae
jmp
mov
daa
mov
in
sub
shl
sbb
ret
add
std
shl
push
dec
outs
in
ret
out
out
add
daa
ret
movs
inc
and
and
sbb
out
ins
mov
jmp
aaa
scas
iret
std
push
sub
or
sub
movs
retf
loop
xor
retf
fisub
add
jmp
mov
test
ja
push
pop
jnp
xor
outs
int3
push
dec
cmc
fisttp
adc
clc
mov
es
bnd
ja
sbb
inc
mov
and
pop
sub
movs
call
das
jge
imul
rcr
nop
cld
inc
fidivr
pop
movs
ja
sbb
xchg
sti
xchg
(bad)
jno
test
sub
xchg
neg
inc
cli
xor
mov
jmp
xor
mul
push
movs
pop
in
xchg
popa
and
cmp
loop
int
dec
adc
or
lea
in
dec
das
(bad)
sbb
sub
call
push
test
mov
cmp
aaa
mov
cmc
iret
jne
jmp
xadd
add
mov
call
jns
add
int
aas
into
fwait
cmp
lahf
xor
ror
mov
arpl
out
test
jecxz
das
jns
pop
call
mov
fadd
push
sbb
add
jae
push
imul
xor
fst
pop
cmp
push
push
and
(bad)
mov
sbb
in
scas
xchg
xor
cmc
ins
cmp
loope
pop
sbb
add
adc
mov
pop
test
enter
xchg
aaa
imul
adc
push
dec
add
inc
push
jns
xchg
adc
daa
push
adc
inc
mov
ja
in
scas
and
add
repnz
or
pop
or
push
cmp
or
cmp
xchg
popa
add
or
jl
and
pop
pop
xchg
rcr
enter
(bad)
xor
mov
push
ss
xor
leave
adc
fsub
dec
inc
arpl
xchg
cmp
jl
aad
cmp
divps
call
xchg
sbb
(bad)
sti
ret
adc
imul
or
popf
jne
pop
fstp
mov
dec
ror
ds
imul
xor
ret
xlat
mov
ss
fwait
and
ins
sub
xlat
retf
xchg
loop
loope
scas
sbb
enter
xor
or
ror
sbb
mov
lock
pop
pushf
dec
(bad)
mov
mov
pop
pop
outs
mov
repz
fdivr
stos
mov
xlat
rol
test
pop
(bad)
inc
test
imul
and
(bad)
sub
aam
daa
aaa
rep
jmp
sar
mov
in
pop
ret
jl
into
stc
add
cdq
fiadd
call
jns
mov
and
vpsrld
movs
(bad)
jmp
mov
movs
cmc
mov
pusha
sbb
pop
mov
mov
or
aaa
mov
lock
fsubp
jno
mov
test
in
xlat
xor
jmp
push
fdivr
inc
pop
fmul
pop
fsub
jle
mov
fdiv
out
inc
adc
jg
fsub
mov
mov
fmul
shr
in
sbb
push
add
pop
adc
push
jb
pusha
mov
pushf
movs
sbb
pop
scas
jne
jp
jo
push
sti
mov
call
xchg
xor
and
out
test
ins
ds
xlat
icebp
loopne
mov
mov
shl
mov
sbb
shr
adc
xchg
xor
inc
pop
outs
xor
cmp
mov
and
pop
pop
das
xlat
xlat
fmulp
add
or
cmp
cmp
xor
and
xchg
cmps
dec
sbb
aaa
sub
push
xchg
pop
setle
adc
dec
jmp
inc
es
pop
and
push
fsubp
adc
out
cdq
je
jmp
or
cmp
mov
jo
xchg
or
xor
jecxz
cdq
cmc
xchg
push
mov
ss
(bad)
stos
iret
inc
cmp
nop
sub
into
or
jmp
aas
push
lds
pusha
add
out
mov
rol
shl
es
push
mov
jb
adc
je
test
adc
test
loope
dec
test
push
cmp
inc
jl
jne
pop
call
sar
aas
outs
mov
aaa
aam
adc
sar
cmp
xchg
jge
js
mov
xor
mov
out
mov
push
jne
sub
inc
pop
jne
leave
cs
fld
push
leave
std
std
mov
push
div
rcr
xchg
pop
call
std
fdivp
into
push
mov
xchg
dec
stc
jecxz
push
push
sub
sub
jp
repnz
push
dec
jmp
arpl
pop
jno
jnp
xor
jne
dec
jl
shr
cdq
xlat
arpl
sub
xor
adc
rol
mov
pop
mov
jb
call
in
cmps
push
mov
mov
jle
lea
test
push
pop
dec
je
jle
mov
sub
out
dec
outs
stos
sub
pusha
pop
push
adc
fs
arpl
cmp
mov
scas
call
fiadd
ret
xlat
cmp
push
xchg
in
not
rol
push
lds
cs
push
sub
jbe
cmps
dec
sbb
sub
jmp
(bad)
not
lahf
push
cmc
in
inc
xor
js
inc
mov
add
mov
fistp
fisub
push
sti
add
stos
sub
loopne
inc
sbb
mov
adc
sbb
pop
xlat
pop
push
xchg
mov
dec
add
mov
repnz
into
xor
xor
sbb
push
frstor
cmps
inc
into
inc
jg
sub
movs
adc
xlat
div
pop
xor
mov
adc
sti
shl
je
inc
rcr
or
add
dec
xor
rcl
mov
loopne
sub
sbb
mov
(bad)
sar
test
in
(bad)
sbb
std
jns
pop
xchg
(bad)
test
mov
jmp
xlat
cmc
fimul
mov
inc
or
shl
push
jmp
std
repz
add
mov
mov
xor
jmp
jb
sub
aad
sbb
mov
test
sub
ss
cmp
arpl
push
mov
mov
lock
pop
or
pop
jb
aad
(bad)
xor
sub
fld
mov
and
outs
les
mov
test
data16
loope
enter
out
pop
add
out
test
ja
jae
mov
mov
test
or
push
mov
not
jg
cmp
(bad)
pop
fst
or
mov
lds
into
outs
out
mov
mov
int
xlat
push
mov
pop
push
imul
adc
adc
cmp
data16
mov
fistp
stos
loopne
adc
(bad)
lahf
push
test
mov
and
fs
pop
inc
test
adc
mov
cmp
mov
xchg
in
push
in
mov
jl
ja
jns
fdiv
dec
stos
inc
jbe
add
mov
mov
and
mov
push
xchg
cld
push
cwde
sti
push
inc
frstor
fisubr
ins
mov
mov
js
pop
pop
mov
jl
or
(bad)
push
outs
cwde
xor
aam
cmp
clc
pop
and
aad
rcr
jae
stos
inc
mov
inc
and
push
jo
aaa
sub
mov
inc
and
es
out
pop
push
aaa
fadd
xchg
ror
scas
stc
jg
ror
stos
cdq
jnp
lahf
out
xchg
adc
dec
js
neg
adc
out
lock
push
pop
je
adc
ds
mov
stc
add
cmc
(bad)
repnz
xchg
fld1
xchg
fcom
int
inc
xchg
(bad)
cld
into
xor
and
aas
ret
mov
ret
sub
mov
push
into
pusha
jno
(bad)
inc
mov
rol
mov
aaa
sbb
lods
dec
mov
cmc
dec
or
sub
clc
and
fwait
(bad)
ins
jnp
lods
addr16
mov
or
cmp
cmp
fist
mov
mov
in
ds
xor
add
scas
std
stos
mov
xchg
adc
in
ret
push
inc
xchg
or
and
mov
cmp
(bad)
call
repnz
addr16
mov
adc
mov
arpl
inc
xchg
fldcw
jb
pusha
jp
lods
jg
xor
mov
add
ins
cmp
mov
clc
push
adc
dec
nop
pushf
icebp
dec
push
es
add
mov
mov
xor
mov
mov
aad
jo
popa
stos
add
sub
add
sar
fcom
pop
xchg
dec
sbb
and
es
cdq
adc
or
rcl
dec
cmp
call
(bad)
cmps
adc
ret
inc
arpl
sbb
popf
jg
out
jns
addr16
pushf
push
stc
jbe
dec
and
sbb
loopne
xchg
pop
push
stos
test
inc
stos
jb
xor
or
and
jns
and
mov
pusha
xchg
xchg
cmp
inc
jmp
jbe
in
mov
fild
bound
not
sub
mov
jmp
or
call
mov
adc
ins
sub
ins
(bad)
loopne
jp
mov
mov
(bad)
cmp
sub
das
mov
sbb
cld
out
xchg
ror
push
lds
and
push
sub
xor
mul
mov
fisub
or
(bad)
cmp
daa
cs
sti
cmp
cmp
enter
cmps
push
inc
(bad)
fnsave
inc
xchg
div
jge
mov
inc
sub
pop
dec
pop
mov
fcomi
mov
test
cmp
sbb
out
push
out
jb
movs
xchg
(bad)
dec
sti
out
ret
(bad)
mov
rcl
(bad)
mov
inc
sub
dec
add
push
out
pusha
sub
lock
popa
outs
mov
dec
lds
or
or
xor
sbb
lock
cmp
test
mov
or
pop
dec
lock
ins
push
jl
scas
aad
mov
sub
enter
dec
nop
ud1
pop
daa
fcomp
adc
jecxz
in
xchg
jmp
add
mov
test
repnz
dec
sub
sbb
pop
mov
jmp
cmps
dec
jl
call
xor
dec
mov
cmovbe
sti
aaa
jl
bound
sbb
pop
(bad)
ror
and
aam
xor
test
aam
xchg
push
bound
lock
je
add
fst
retf
and
cmc
mov
daa
into
or
out
imul
into
ins
or
loop
sub
and
test
jge
ins
ins
jns
outs
sbb
inc
call
repz
hlt
(bad)
aam
out
adc
jl
rol
cwde
cdq
push
pop
mov
out
popf
and
jmp
call
fwait
cmc
add
into
and
(bad)
adc
adc
call
jl
rcl
ss
push
sbb
sub
(bad)
jecxz
test
mov
repz
cli
data16
nop
cli
fild
xlat
push
mov
and
jl
int
sub
jnp
fidiv
jl
pop
std
fs
fist
adc
or
ins
pop
in
add
add
add
mul
(bad)
jbe
std
push
dec
xchg
ror
push
add
inc
mov
adc
jl
popa
dec
ss
out
pop
dec
call
aam
es
test
dec
std
xchg
add
jecxz
aas
add
clc
push
push
aas
rcr
in
leave
jp
or
jne
mov
hlt
fwait
adc
jl
iret
mov
mov
gs
cdq
imul
inc
or
sub
cmc
adc
jmp
mov
jo
mov
sbb
aad
push
imul
icebp
push
cmps
in
loop
xor
add
xor
push
jo
test
adc
dec
inc
dec
ret
out
hlt
mov
mov
xchg
retf
fadd
test
addr16
in
repnz
rol
xor
push
push
mov
jnp
sub
add
imul
lds
(bad)
xchg
cmps
cmps
add
jne
ficomp
rcl
push
jmp
into
test
mov
das
xlat
and
cmp
add
pop
jae
in
inc
add
outs
jnp
test
xchg
add
es
or
jo
push
inc
jmp
aad
xor
adc
stos
pop
ins
push
mov
(bad)
loope
imul
fadd
mov
jae
or
ins
inc
fucomip
sbb
xchg
pop
call
loop
xchg
imul
add
jle
xor
mov
in
sub
inc
xlat
jle
dec
jmp
pop
(bad)
aam
(bad)
sbb
push
jecxz
lock
inc
retf
gs
and
(bad)
mov
ins
mov
(bad)
scas
aad
pop
loopne
popf
fcomp
cmps
dec
cdq
(bad)
in
xchg
fldenv
dec
or
(bad)
in
mov
cmp
adc
rcr
cmp
dec
shl
jb
aad
in
stos
lds
mov
inc
push
sbb
jmp
in
inc
xchg
or
push
inc
cmc
(bad)
pop
repz
sbb
into
clc
and
cmps
ins
out
xchg
dec
in
nop
mov
jne
cwde
sub
call
movs
sub
sbb
xchg
(bad)
jmp
(bad)
lods
movs
lea
and
aaa
pop
popa
scas
sbb
bound
icebp
xchg
daa
fwait
add
and
test
fst
retf
les
push
(bad)
inc
std
aaa
mov
popf
cmp
and
lock
mov
rol
mov
fld
iret
cmp
xchg
in
imul
movs
(bad)
out
dec
out
dec
cmc
mov
push
mov
xchg
loope
pop
bound
in
push
scas
inc
jge
jnp
xlat
fnclex
xchg
aas
stos
cmp
inc
mov
addr16
je
push
adc
add
mov
in
fidiv
adc
adc
mov
stos
ja
addr16
aam
aas
push
mov
xchg
add
fisttp
inc
push
xor
mov
mov
repnz
push
and
inc
and
mov
sbb
lods
(bad)
rcr
and
call
loope
adc
popf
std
movs
sub
sti
lods
ficom
push
rol
push
cmps
push
(bad)
xchg
imul
stc
push
push
cmps
xchg
in
(bad)
adc
test
mov
pushf
jmp
push
jae
cmp
imul
mov
sub
sub
mov
test
or
sti
loope
xor
jae
jns
pushf
sub
sar
outs
fcomp
pop
pushf
lahf
fst
push
adc
hlt
xchg
in
xchg
mov
scas
mul
les
pop
xlat
and
js
lods
add
xor
xchg
mov
adc
imul
(bad)
fisub
pop
sbb
xchg
cmp
push
aam
sub
or
jmp
add
adc
nop
bound
and
xchg
sbb
aad
and
dec
adc
dec
shl
jmp
jne
mov
ins
sti
adc
xchg
xor
js
cld
sti
outs
xor
imul
inc
cs
loop
ja
call
ror
popa
(bad)
fsub
pop
xor
dec
push
ficomp
cmp
xchg
dec
adc
clc
add
inc
xchg
adc
inc
dec
ficomp
inc
popf
cmp
mov
and
xor
lods
mov
cmp
mov
xchg
inc
dec
ins
int
cmp
pop
cmps
jge
mov
mov
mov
ret
lock
in
iret
mov
adc
les
int
(bad)
lock
fimul
std
sub
aam
cmps
or
fdiv
dec
pushf
call
xchg
jg
test
mov
jae
mov
das
enter
pop
shl
push
mov
mov
rep
push
fwait
sti
int3
mov
shl
push
mov
add
in
xchg
(bad)
(bad)
mov
xchg
and
aam
cmc
repnz
and
test
cdq
dec
inc
cmc
push
daa
pushf
(bad)
dec
or
outs
outs
cwde
sbb
cmp
sahf
hlt
cmp
mov
xor
sub
(bad)
mov
jecxz
add
in
xchg
add
mov
test
push
out
jae
sub
call
rcr
jb
in
jbe
cmp
dec
sub
(bad)
retf
push
xchg
jbe
inc
adc
push
sbb
in
in
clc
pop
iret
cmp
icebp
dec
xor
xor
sub
imul
jo
call
push
sar
mov
hlt
fs
sbb
stos
xchg
cmp
iret
jae
mov
es
mov
shr
mov
pop
xor
scas
jmp
lds
test
add
lock
push
mov
fadd
ja
int3
xchg
mov
xchg
adc
lahf
shl
xor
and
cli
xchg
add
aam
imul
mov
out
loopne
out
aam
cmc
xor
mov
or
pop
(bad)
mov
cmp
mov
xor
arpl
mov
xchg
nop
jecxz
sti
in
push
xor
push
pusha
jmp
loopne
mov
mov
dec
int
mov
ror
adc
add
mov
fcomp
rol
lahf
cmovbe
lahf
pop
rol
neg
mov
(bad)
add
shl
add
mov
push
ds
sub
pop
cmp
add
(bad)
int
cli
call
int3
ins
inc
dec
sbb
pusha
fyl2x
inc
je
push
cli
popa
inc
icebp
fnstenv
int
push
mov
sub
inc
out
push
data16
dec
in
cmc
clc
cmp
or
add
aaa
dec
hlt
and
push
jb
rcl
sub
ret
jnp
stos
and
call
or
mov
push
dec
or
jne
jb
lods
(bad)
fdiv
div
addr16
test
pop
popa
std
sbb
aas
mov
add
xor
jp
adc
lods
movs
loope
cdq
dec
add
test
(bad)
mov
mov
rcl
arpl
pop
adc
popa
jb
clc
dec
data16
fwait
cmp
pop
pop
add
add
cmp
js
pop
xor
sbb
inc
shl
xchg
sbb
das
rcr
cmp
sub
push
push
mov
or
les
push
fucomp
sub
shl
cmp
and
push
jmp
addr16
mov
jne
shl
mov
pusha
jb
pop
jns
jge
lock
test
dec
lock
mov
add
jne
sbb
imul
mov
jne
sub
ja
push
in
dec
test
push
cmp
push
mov
in
mov
xor
(bad)
and
xor
test
inc
mov
mov
xchg
add
rol
push
mov
popa
xchg
cmc
dec
adc
xchg
(bad)
shl
inc
cmpxchg
push
lds
repnz
ja
fidivr
je
jne
push
sub
in
inc
mov
stc
inc
mov
adc
mov
repnz
mov
dec
add
sbb
stos
dec
loope
cmps
jmp
xor
or
pop
into
lods
ins
sar
fild
mov
ret
fbld
mov
xlat
je
imul
rol
sub
jle
inc
mov
push
or
jmp
fdiv
push
and
or
push
jg
mov
ins
or
cmp
cmc
mov
xlat
aas
sahf
mov
mov
repz
pop
adc
jl
fld
cdq
cwde
(bad)
retf
je
or
call
and
inc
scas
int3
movsx
rol
ret
(bad)
jmp
push
push
mov
mov
cmps
cmp
pop
dec
(bad)
outs
call
lea
adc
pop
mov
in
add
rcr
clc
or
sub
inc
dec
cmps
fld
les
xor
sub
call
cmp
and
xchg
dec
pop
sub
punpckhwd
inc
dec
sbb
gs
mov
sub
retf
mov
jo
lds
fwait
or
xor
pop
popw
mov
xchg
push
jo
clc
sub
loopne
popa
jge
mov
ds
lock
mov
mov
icebp
xchg
leave
add
test
jnp
push
lock
jle
sti
rcr
mov
mov
pop
adc
das
mov
or
push
mov
push
push
pop
ja
mov
xor
mov
repnz
cmc
sar
data16
loop
cmps
mov
xchg
mov
inc
xchg
pop
in
pop
jge
mov
or
jo
or
jnp
cli
arpl
arpl
arpl
jo
ss
clc
mov
sbb
xor
inc
jmp
mov
outs
push
cli
add
jbe
add
inc
dec
hlt
jne
push
into
or
rcl
pop
fsubp
bound
xor
sub
shl
jmp
aam
mov
or
lock
ret
sbb
jae
sbb
xchg
push
loop
push
jno
mov
jb
popa
addr16
cmp
sbb
mov
dec
add
push
mov
push
cmp
pusha
mov
adc
ss
fld
lahf
xlat
mov
inc
cwde
inc
aaa
jmp
cmp
mov
xor
add
sbb
aaa
xchg
sub
push
data16
repnz
inc
gs
pop
fldcw
jbe
jbe
mov
inc
cmp
sub
outs
aas
out
stc
jl
popf
movs
clc
mov
xchg
je
(bad)
movs
inc
mov
xchg
aam
mov
das
mov
jns
inc
sub
das
sti
push
hlt
or
mov
jl
adc
pop
mov
cmps
push
fdivp
es
dec
lahf
je
pop
xchg
push
fild
cli
adc
std
mov
and
mov
cmp
sbb
jne
pop
pusha
in
pop
lds
jae
mov
(bad)
(bad)
push
sub
xlat
(bad)
jecxz
int3
addr16
sbb
mov
cmp
push
call
add
and
shl
scas
fidivr
push
inc
mov
push
das
and
push
movs
pop
adc
jle
loopne
ret
cmp
xor
sahf
test
adc
push
imul
int
ds
data16
xchg
lahf
stos
jl
push
repz
std
ss
(bad)
jmp
dec
and
or
lods
pop
dec
leave
sub
cdq
mov
jnp
aad
fbstp
jmp
mov
jns
sub
xor
dec
fist
push
add
sbb
add
stc
mov
dec
daa
and
fisttp
(bad)
xor
scas
jle
sahf
xchg
jns
inc
test
shl
stos
sub
in
or
jae
repnz
leave
inc
mov
xor
inc
out
xor
xchg
mov
mov
jb
into
mov
(bad)
pop
jecxz
mov
add
add
je
push
ss
push
in
popf
cmps
xor
pop
xchg
aad
(bad)
mov
fsub
push
pop
dec
push
push
cmc
les
pop
sahf
out
jmp
mov
ins
xchg
cmp
nop
mov
xor
or
mov
xchg
push
cmp
fnop
adc
pop
pop
jne
pop
mov
enter
lods
in
dec
dec
int3
push
popf
outs
call
lea
aaa
not
push
xchg
xor
push
mov
or
inc
lods
jecxz
pop
add
loopne
pop
outs
xor
inc
jae
mov
loopne
jmp
sub
int3
ins
adc
nop
fmul
inc
xlat
aas
test
xchg
test
mov
or
ret
and
cmc
sub
adc
mov
out
test
cmp
out
data16
mov
das
cmp
jmp
jmp
add
mov
adc
and
pop
pop
movs
mov
aaa
nop
int
cvtps2pd
jbe
jnp
xchg
gs
and
sar
ror
and
je
outs
xor
cmp
cmps
ins
jbe
fs
pop
test
(bad)
loop
pop
jecxz
sbb
push
and
mov
std
cmp
mov
cmp
pop
and
fcomip
pop
push
fidivr
mov
adc
or
je
sub
in
push
and
push
pop
mov
and
add
in
into
mov
adc
scas
and
cdq
cmp
or
or
std
repnz
or
test
leave
nop
dec
cmp
aaa
pop
adc
dec
retf
sar
sub
push
jb
sub
sub
sbb
enter
jo
mov
mov
lds
inc
es
fmul
add
movs
mov
cmp
repnz
cli
mov
adc
aaa
test
or
mov
dec
and
dec
and
xchg
test
mov
(bad)
test
popa
clc
xchg
and
outs
pop
pusha
shr
iret
xor
cld
mov
or
jmp
adc
mov
add
and
and
add
inc
daa
xor
sub
fs
shl
ret
dec
mov
xchg
and
(bad)
jo
inc
inc
add
fcom
in
movs
mov
push
(bad)
outs
cmp
fist
xor
(bad)
jo
pop
mov
mov
mov
or
stc
mov
jge
jbe
imul
call
aaa
test
adc
sbb
push
mov
dec
popa
mov
jae
movs
and
ror
(bad)
inc
push
gs
popf
jno
push
cwde
sbb
jecxz
test
imul
or
mov
rol
adc
or
pop
pushf
(bad)
lods
xchg
cli
shl
lods
lock
adc
mov
xchg
ret
or
repz
push
(bad)
fdivr
sub
dec
cld
cmps
out
sbb
inc
stos
pop
ds
inc
adc
mov
out
int
jg
xor
xor
wrmsr
aad
ins
popa
pushf
sub
out
pop
lds
xchg
push
or
(bad)
out
loope
add
jge
arpl
add
outs
inc
popf
outs
pop
mov
pop
or
xchg
les
das
stos
xor
pop
or
jp
mov
out
iret
pop
scas
mov
ja
js
out
lods
adc
sub
add
popa
mov
ja
gs
mov
cwde
rcr
stos
fwait
icebp
retf
or
push
mov
jmp
inc
xchg
cmp
mov
mov
inc
sub
stos
pop
and
gs
sub
repz
sub
push
jnp
(bad)
xor
adc
repz
pop
xor
sub
arpl
adc
and
push
jns
in
add
mov
mov
sub
or
mov
mov
sub
lods
movs
add
mov
pop
mov
ret
xor
pop
or
je
pop
arpl
fcmovnbe
inc
add
js
push
dec
sub
xor
add
cwde
jns
hlt
or
(bad)
neg
std
add
aam
mov
cmp
jmp
rcr
mov
or
es
jp
sub
sub
test
in
test
shl
sub
inc
popa
lahf
cmps
out
push
outs
add
mov
sbb
jnp
and
aaa
and
mov
dec
xor
xchg
lahf
add
stos
fldcw
loope
retf
push
jmp
mov
fucom
daa
and
jmp
aas
sbb
xor
retf
shr
fld
push
mov
jmp
fprem1
dec
and
cdq
mov
stos
test
(bad)
int
jl
les
sbb
movs
push
dec
mov
inc
ficom
lock
and
or
cmps
lock
rol
stc
jle
arpl
data16
cs
jmp
pop
adc
pop
cmp
test
adc
dec
mov
retf
loope
sahf
mov
ins
loop
in
jecxz
and
cmp
or
test
fisubr
pop
jecxz
cld
cmp
ficom
rol
cdq
fistp
js
dec
jp
(bad)
jle
and
jbe
std
jp
ja
ret
pushf
push
sbb
hlt
add
mov
sub
push
inc
neg
inc
sub
call
jg
mov
push
mov
loop
into
cli
inc
push
cmp
hlt
inc
push
es
outs
arpl
jecxz
mov
out
or
shl
mov
sbb
mov
dec
stos
loope
mov
test
jo
ins
enter
cwde
daa
(bad)
mov
or
sub
dec
sub
(bad)
xor
xchg
jb
mov
dec
mov
adc
adc
mov
ins
push
xor
daa
das
mov
mov
sub
popw
imul
mov
mov
(bad)
add
movs
adc
xor
loope
xor
loop
sbb
and
idiv
xor
stos
mov
out
popf
repnz
jno
out
adc
es
add
sbb
cwde
mov
dec
rcr
aas
stc
jne
movs
das
cdq
add
and
bnd
adc
mov
inc
aam
pop
fdiv
pusha
xor
mov
daa
sahf
retf
xchg
xchg
xchg
nop
mov
mov
or
cmps
aas
arpl
fistp
jbe
jo
addr16
inc
jb
jecxz
loop
adc
int
mov
lods
fnstsw
aas
sub
icebp
jmp
mov
jb
push
enter
add
out
leave
fild
ins
jbe
add
sbb
lea
push
out
adc
mov
fld
jns
enter
cld
xor
mov
push
fs
ror
xor
adc
pop
aam
pop
hlt
push
xor
fadd
out
sbb
sahf
retf
or
shl
adc
jmp
repz
fcmovnu
mov
mov
out
add
hlt
lods
in
sub
call
int
xlat
arpl
stos
cmp
ins
in
xlat
pop
mov
enter
test
sbb
loope
mov
xor
out
cmp
cwde
test
bound
(bad)
jno
xor
sub
xchg
fisttp
sahf
popf
jns
and
jp
mov
shl
cmps
mov
xlat
hlt
dec
in
in
push
in
call
and
mov
addr16
int
in
les
lea
pushf
mov
(bad)
xadd
sub
int3
mov
fsincos
shl
(bad)
in
sub
aad
sbb
xor
adc
jbe
(bad)
not
mov
arpl
shr
cmp
mov
mov
fmul
icebp
xor
call
sub
add
dec
inc
sbb
(bad)
pop
dec
cmp
lds
in
dec
ins
iret
sbb
xor
inc
leave
arpl
xor
jge
mov
fmul
inc
out
out
cmp
cdq
cli
adc
js
ins
outs
push
adc
into
cdq
push
fnsetpm(287
scas
jae
dec
push
repnz
and
aas
aaa
inc
pop
popa
or
jb
movs
call
loope
jge
push
mov
mov
(bad)
mov
fsub
push
ins
mov
inc
lahf
in
dec
mov
repnz
je
sbb
push
add
(bad)
push
cmp
and
stc
rcr
ret
mov
rcr
sbb
jmp
sti
jae
push
dec
aam
pop
and
mov
sub
adc
pop
test
(bad)
sub
ja
inc
fwait
cmp
push
add
mov
jmp
pushf
push
je
xchg
mov
fmul
scas
aas
xor
dec
rol
inc
ins
js
jns
popf
add
lds
test
jmp
fild
and
sub
sbb
movs
cli
(bad)
aad
mov
aam
inc
pop
mov
aas
xor
xchg
xchg
xor
imul
jb
adc
cmp
xchg
jns
xor
scas
jg
stos
push
push
and
fisttp
lahf
icebp
fistp
test
ror
test
jae
mov
cmc
xor
(bad)
ror
jb
mov
out
div
(bad)
rol
fsub
jmp
mov
jle
dec
test
lock
cwde
adc
lds
cmp
fidivr
std
in
jmp
sub
jmp
xchg
mov
push
outs
loope
test
js
mov
adc
ret
retf
rcr
adc
ja
jne
jns
outs
popw
fiadd
mov
pop
out
call
pusha
pop
jg
mov
jmp
xor
(bad)
push
jl
push
mov
xlat
gs
(bad)
lea
fwait
les
imul
inc
repz
mov
int
cwde
sbb
inc
stc
int
(bad)
ja
xor
aam
lahf
dec
pop
loopne
lahf
jno
pop
cmp
pop
push
das
mov
inc
aam
lods
xchg
pop
pop
jae
dec
and
out
in
in
js
imul
add
std
lods
or
ins
fistp
dec
outs
push
jne
push
loopne
aaa
out
inc
xor
ror
imul
pop
sub
pop
scas
xor
sub
into
add
lock
mov
adc
add
cli
adc
sahf
mov
pop
retf
mov
icebp
cli
fld
enter
xlat
retf
lods
add
stc
mov
scas
popf
(bad)
mov
xchg
sbb
xchg
jns
inc
push
xchg
push
in
sub
add
and
mov
mov
clc
mov
cmp
or
push
mov
and
(bad)
xor
pushf
inc
add
les
lea
lahf
xor
push
mov
mov
mov
cmp
mov
cs
cmps
in
das
movs
sub
adc
icebp
cs
adc
loop
sahf
sti
pusha
int3
(bad)
adc
mov
(bad)
cmc
jmp
imul
gs
int
dec
jno
sbb
pop
sub
nop
mov
xchg
sbb
(bad)
loop
cmp
scas
test
shl
xor
(bad)
mov
or
push
gs
push
mov
pop
test
loopne
loop
inc
push
jmp
adc
sbb
sbb
ret
into
jmp
ret
fmulp
outs
mov
xchg
call
popa
add
add
sbb
call
inc
jmp
sub
pop
and
in
ror
stos
je
inc
jecxz
dec
sar
mov
inc
cmps
add
jnp
ret
cmps
scas
adc
dec
adc
mov
mov
cmp
aad
gs
jge
xor
sub
aad
test
sbb
in
sbb
sbb
push
inc
inc
loope
push
xchg
dec
and
or
mov
adc
and
inc
xor
(bad)
jle
xor
es
stc
push
stos
dec
fild
test
inc
into
mov
imul
popf
jmp
cmp
push
mov
call
sub
adc
in
cmp
push
mov
enter
add
rol
mov
test
sbb
mov
jg
iret
mov
xor
push
xor
imul
pop
jo
rcl
call
adc
xchg
std
xor
out
mov
out
inc
in
dec
test
ja
into
and
or
repnz
test
aam
or
mov
jle
es
xor
test
imul
fcmovbe
cmp
push
jge
xor
in
xchg
xchg
cli
imul
lock
mov
push
inc
mov
jge
push
mov
xchg
(bad)
adc
add
cdq
mov
stos
icebp
cmps
jl
retf
cmp
mov
retf
ds
sti
arpl
bnd
adc
adc
dec
mov
push
ja
add
pop
daa
push
push
ror
into
cmp
pop
jp
mov
or
sbb
outs
push
sbb
push
lahf
aad
xor
ds
jbe
fbstp
mov
sbb
(bad)
rcr
cmps
test
dec
pop
test
and
mov
out
inc
adc
sbb
pop
and
(bad)
pusha
jbe
into
and
xchg
pop
pop
and
xchg
lahf
sub
sub
cmp
lods
out
dec
hlt
jbe
sti
add
jge
sbb
call
out
inc
jb
icebp
leave
mov
out
(bad)
sub
dec
in
pop
cmps
xor
lods
mov
cs
test
fadd
mov
pop
fnstcw
scas
or
lock
jp
pop
neg
icebp
add
leave
or
xor
and
cs
mov
arpl
dec
xchg
in
mov
jne
pushf
popa
sahf
mov
ret
out
rol
cmps
test
jo
popf
mov
xchg
fadd
lea
daa
push
fldlg2
adc
call
test
sbb
pop
sbb
jb
mov
push
lods
cwde
jae
loopne
inc
and
(bad)
fnstcw
out
push
data16
outs
call
xchg
push
mov
ret
aad
mov
inc
push
cmp
push
retf
int
pop
or
mov
loop
in
or
and
int
mov
scas
adc
mov
sbb
adc
add
inc
es
or
ds
shl
shl
push
mov
jno
test
xlat
into
loope
retf
push
jbe
ret
push
add
in
jns
bound
lods
outs
or
sub
mov
dec
or
xor
(bad)
mov
jmp
cmp
inc
jns
rol
xchg
mov
xor
popa
scas
push
jae
pop
pop
add
mov
test
mov
and
das
mov
xchg
inc
stos
and
cmp
push
or
push
ret
jno
test
fld
mov
and
xor
(bad)
aam
out
shl
dec
fst
push
and
in
leave
jnp
jmp
cmc
repz
out
mov
adc
fs
adc
jge
push
bound
and
ss
mov
(bad)
cmp
jmp
arpl
into
or
call
mov
sar
int3
in
cmc
stos
outs
xor
mov
aad
int3
and
sbb
gs
pop
dec
xchg
jle
retf
bound
dec
ja
scas
jmp
lahf
sub
sahf
pop
lds
idiv
add
cdq
mov
div
std
scas
adc
push
pop
mov
scas
cli
dec
in
scas
mov
push
pop
and
rcr
gs
push
nop
(bad)
loope
and
mov
rcl
mov
hlt
ins
pop
cmp
and
dec
(bad)
cmp
clc
addr16
xchg
cmp
adc
repz
mov
xchg
std
movs
dec
ins
add
mov
jnp
ja
loope
and
shl
dec
call
daa
ss
mov
xchg
jp
lea
ins
(bad)
jmp
add
int3
sbb
pop
and
pop
sar
ret
sub
sbb
(bad)
pop
(bad)
out
mov
cmps
retf
aaa
(bad)
mov
div
push
push
mov
retf
sbb
cmc
icebp
cmp
repnz
adc
dec
fwait
pop
sbb
jnp
aaa
ja
aam
ja
rol
(bad)
adc
adc
jp
cld
aas
sub
lds
repnz
xor
push
sub
aaa
pop
push
sbb
adc
lea
movs
iret
ja
dec
jne
in
sysret
sub
cwde
jmp
mov
(bad)
mov
jge
push
xor
lock
sub
stc
add
mov
nop
adc
f2xm1
scas
fdiv
xchg
cmp
ret
cmp
shl
mov
fadd
(bad)
daa
inc
mov
cmps
jb
(bad)
sbb
sub
mov
rcr
js
xchg
sub
out
add
mov
jo
mov
sbb
mov
cmps
rcr
iret
jo
push
mov
cmp
xor
xchg
rol
xchg
xchg
pop
add
das
sbb
lock
out
out
and
pop
cmc
ror
jmp
stos
mov
jle
inc
sub
shr
push
xor
pop
dec
jp
(bad)
inc
cmp
js
popf
(bad)
ds
(bad)
je
or
mov
and
xor
sub
rcl
mov
sub
fwait
in
jp
pusha
add
sbb
fs
push
pop
xchg
shr
xchg
pusha
into
call
add
pop
shl
fs
bound
fstp
xor
loopne
xor
cmp
sbb
mov
cli
aam
sub
iret
outs
ds
lahf
xor
cmc
popf
les
inc
mov
mov
xor
lahf
cmp
xor
test
push
cli
enter
xor
call
xor
inc
mov
icebp
aas
loope
bound
fisubr
jns
push
adc
ret
nop
mov
imul
repnz
mov
ss
(bad)
data16
sub
or
pop
push
ret
movs
sahf
sbb
retf
inc
gs
dec
mov
in
dec
lods
js
das
stos
sbb
loopne
or
sub
inc
stc
pushf
cmps
int
sub
sar
dec
xor
push
stc
mov
xchg
jle
jp
in
dec
cs
(bad)
stos
and
jnp
je
push
mov
adc
fisubr
and
mov
lods
call
add
out
enter
dec
js
ins
sti
ret
cmp
jo
mov
or
cmp
adc
dec
xor
add
pop
out
adc
data16
mov
stc
dec
xchg
in
dec
clc
xchg
mov
stos
int
adc
lahf
icebp
imul
jle
repz
retf
scas
int3
xchg
mov
push
mov
in
in
sbb
(bad)
cmp
sbb
retf
pop
and
mov
int3
jmp
xor
dec
scas
sub
dec
and
mov
mov
push
add
dec
or
cs
sub
mov
mov
test
mov
(bad)
mov
adc
outs
fnstenv
cmp
lods
xor
mov
add
scas
jg
mov
call
jmp
pushf
or
dec
(bad)
cwde
into
push
(bad)
cdq
(bad)
mov
std
sbb
xlat
in
rol
push
jmp
fiadd
ja
ret
jge
ror
leave
add
ror
inc
adc
cmc
xchg
or
jbe
mov
scas
ds
dec
add
inc
iret
mov
ins
pop
retf
cld
inc
dec
push
xchg
rol
adc
or
mov
fdiv
adc
or
xchg
xor
mov
cmps
add
sub
lahf
add
cmps
jbe
fld
sub
dec
sub
pop
dec
jecxz
mov
adc
mov
fst
ja
sub
sbb
std
retf
pop
je
hlt
mov
enter
(bad)
pop
mov
push
lock
and
test
sahf
xor
and
ret
je
mov
loopne
call
aas
js
dec
mov
push
mov
push
mov
adc
shl
in
test
mov
lds
rcr
pushfw
repz
test
mov
sar
cs
int3
mov
mov
int3
sub
clc
rol
sbb
xchg
pop
jmp
push
daa
pop
and
test
push
and
(bad)
lds
(bad)
in
push
gs
fdivr
xchg
jno
jnp
stos
jmp
neg
lock
cwde
out
pop
out
mov
jmp
pop
xor
aad
movzx
fiadd
cld
dec
pop
jae
push
cmp
push
ds
or
aaa
cmp
nop
shr
dec
xlat
add
mov
xor
push
fistp
or
scas
dec
xchg
push
cld
push
stos
shl
addr16
ret
js
add
pop
mov
push
fidivr
jbe
lock
pop
or
clc
iret
inc
or
or
sub
jns
pop
mov
and
sbb
dec
int3
and
gs
into
add
cwde
pop
fadd
dec
fwait
in
retf
nop
pop
push
(bad)
enter
mov
pop
into
mov
push
or
ds
add
cmp
imul
shl
jne
cdq
mov
scas
pop
clc
call
mov
cmp
xchg
xor
inc
inc
inc
add
loope
lods
test
fadd
xor
and
xchg
fidivr
pop
xor
mov
xchg
pop
int
mov
pop
fmul
cs
je
pop
and
pop
jae
enter
mov
fucomi
hlt
nop
push
jl
sub
ficom
jge
cmps
sub
es
dec
int
leave
in
dec
xor
xchg
div
sbb
pop
ins
and
popf
fld
stos
push
mov
inc
mov
out
gs
nop
dec
push
aas
add
dec
adc
mov
(bad)
jae
cmp
push
daa
mov
pop
ins
sub
int
xchg
mov
(bad)
xor
js
shl
repnz
xor
dec
inc
and
mov
mov
mov
jle
daa
sar
sahf
cmp
dec
stc
cwde
mov
cmp
iret
loope
mov
vpmadcswd
stc
fist
arpl
mov
mov
or
push
push
dec
mov
call
jecxz
push
imul
fadd
xor
push
ins
into
mov
(bad)
inc
jmp
mov
int3
aad
sub
je
fs
ins
pop
mov
mov
js
xchg
cmp
movs
aaa
cmp
test
pop
ret
aad
and
stos
sub
xor
xor
mov
out
sub
cld
retf
pop
out
sbb
inc
mov
sub
or
mov
outs
or
(bad)
push
mov
test
das
cmp
jmp
in
sti
scas
sbb
mov
repz
idiv
push
jbe
retf
fistp
adc
inc
sbb
xor
xor
jecxz
and
sbb
jl
call
scas
xlat
popa
or
xlat
xor
xor
sub
imul
pushf
mov
dec
outs
and
imul
call
repz
inc
jecxz
(bad)
jle
mov
jl
arpl
or
rcl
stos
cmps
call
mov
shl
mov
jnp
adc
xor
mov
mov
add
pop
in
mov
mov
jmp
in
shr
(bad)
loopne
mov
ja
pop
cmc
into
and
dec
shl
xchg
inc
mov
mov
inc
inc
sbb
sub
mov
rcr
dec
mov
add
push
punpckhwd
sbb
mov
cmp
xchg
aaa
and
push
push
mov
out
cwde
and
inc
test
sub
push
pop
test
jmp
add
and
and
mov
push
mov
xor
addr16
test
xchg
aas
lods
addr16
sub
or
and
inc
add
loopne
fidiv
mov
loopne
ja
ret
push
popf
xchg
cmp
adc
adc
mov
dec
sbb
mov
dec
mov
in
shr
sahf
jo
dec
ss
sahf
push
xchg
and
(bad)
neg
int
repnz
clc
in
addr16
fwait
adc
loopne
loopne
lock
or
fdivr
xor
enter
shr
imul
or
(bad)
shl
sub
cmp
fdiv
shl
add
lock
inc
adc
jnp
cmps
xchg
ins
sar
in
(bad)
rol
(bad)
movs
js
(bad)
and
mov
fadd
lea
ins
mov
(bad)
pop
div
or
add
sbb
lahf
inc
dec
jmp
and
cmps
inc
sbb
pop
adc
sub
test
sbb
out
mov
mov
and
cwde
into
push
(bad)
jl
and
sub
xchg
xchg
cmp
adc
xchg
ror
mov
jge
retf
movs
mov
sub
adc
test
cmp
arpl
add
neg
imul
imul
call
jle
xor
mov
cld
mov
mov
out
cwd
pop
hlt
sahf
arpl
shl
push
daa
cmp
stc
mov
push
cmp
pop
clc
outs
mov
shl
scas
mul
or
push
jg
push
push
adc
sub
pop
jecxz
in
inc
or
cmps
movs
outs
add
sbb
cli
mov
and
(bad)
std
shl
mov
rol
int3
xchg
hlt
leave
xor
out
or
xor
movs
add
xchg
clc
sbb
jmp
rcl
ret
cmc
fidiv
mov
cld
jmp
sub
push
push
or
nop
jo
pop
push
adc
es
or
call
push
inc
sub
fisubr
call
cs
sti
call
mov
les
imul
add
popf
push
xchg
fcom
sbb
dec
call
cmps
daa
mov
stc
cmp
push
dec
mov
mov
in
sbb
retf
push
mov
cmp
adc
cmp
jb
sbb
and
(bad)
fmul
fisub
dec
rcl
popf
sti
mov
into
sbb
push
mov
fwait
push
mov
ror
int3
pushf
push
inc
adc
gs
add
fcom
repnz
xchg
adc
cmp
xchg
sbb
push
lahf
lods
sub
mov
or
repz
mov
fwait
test
stos
out
and
es
les
jge
inc
and
ds
enter
xchg
sti
movsx
pop
scas
xor
push
or
mov
dec
in
push
jl
(bad)
out
mov
in
or
(bad)
sub
add
in
div
add
jl
mov
jle
scas
pop
leave
cdq
dec
cli
add
das
adc
test
popa
jmp
jns
cmps
or
pop
jl
(bad)
(bad)
jno
mov
in
or
shl
mov
add
std
mov
dec
mov
xchg
cmp
and
pop
pop
dec
add
cld
jno
and
iret
out
pop
mov
dec
lds
int3
mov
and
lods
adc
pop
inc
inc
xor
push
stos
mov
loopne
lods
imul
or
out
jne
sar
dec
movs
test
add
jmp
hlt
fld
cmc
(bad)
push
dec
or
xchg
mov
or
sti
sbb
mov
cwde
fs
idiv
mov
cld
sub
mov
push
and
add
push
dec
xor
sti
push
imul
mov
add
repz
test
enter
cmp
jnp
js
or
clc
inc
or
cmovl
adc
out
fsubr
aas
icebp
jbe
nop
mov
fldcw
les
xchg
daa
push
push
jl
adc
dec
inc
imul
into
rcr
lea
cmps
aas
xor
pop
ss
mov
cld
sbb
mov
xchg
dec
xlat
cdq
cmp
jne
call
jnp
jb
mov
retf
mov
adc
imul
addr16
pushf
jns
std
sub
scas
jb
jp
jo
or
(bad)
in
nop
jne
jle
mov
(bad)
pop
dec
das
mov
jne
je
push
loopne
jnp
adc
data16
ss
iret
in
loope
and
mov
sbb
(bad)
mov
sbb
lods
jb
mov
jmp
mov
test
and
push
jmp
jecxz
or
xor
and
or
pop
xlat
xchg
jnp
dec
(bad)
(bad)
dec
push
push
cmc
jle
vpshab
pop
pusha
jge
icebp
fdivr
mov
sahf
scas
lahf
ret
push
and
xchg
fmul
stos
dec
ja
out
imul
mov
and
out
popa
cli
daa
push
sbb
and
mov
mov
movs
jb
inc
mov
bswap
mul
dec
fild
jge
mov
sub
mov
in
mov
xchg
add
pop
inc
pusha
sbb
mov
es
pop
inc
mov
movs
xor
xor
ins
add
mov
sub
sub
jmp
cmp
push
fdiv
push
push
cmp
jns
add
or
inc
in
mov
sbb
icebp
inc
mov
test
sti
js
and
add
xchg
sub
mov
nop
mov
jle
sbb
out
mov
int3
mov
cmp
lods
push
adc
mov
mov
imul
add
dec
push
clc
inc
pop
xchg
mov
(bad)
mov
pop
inc
rcl
hlt
push
mov
iret
fdivr
movs
mov
mov
mov
or
xor
test
mov
inc
xor
inc
mov
mov
jnp
(bad)
loopne
dec
out
out
jne
and
mov
jge
adc
mov
adc
daa
fcomp
fmul
mov
mov
repnz
sub
out
sahf
ret
inc
adc
pop
std
pop
jmp
cmp
mov
cmp
imul
sbb
jp
movs
ret
lahf
inc
sbb
lahf
adc
popa
pushf
imul
or
fs
push
pop
popf
mov
out
push
cmps
fstp
jo
sub
mov
inc
sub
cmp
push
outs
mov
pop
add
adc
mov
dec
xchg
mov
push
repz
mov
pusha
or
gs
dec
addr16
mov
lods
mov
pushf
xor
sub
shr
lods
sbb
push
xchg
rcl
enter
pop
dec
mov
cmp
(bad)
xchg
adc
jmp
and
outs
mov
dec
xchg
pop
push
mov
sub
ret
test
xchg
adc
xor
int
(bad)
dec
out
ds
fs
in
rcr
cmps
gs
lahf
sbb
scas
push
ja
cmp
xchg
enter
test
mov
push
jle
jae
out
cmp
pop
test
sti
dec
xor
aam
sbb
sbb
(bad)
pop
mov
in
mov
cmp
in
std
inc
int3
das
pop
jp
and
in
xchg
fwait
std
dec
jp
mov
pop
xor
push
imul
cmc
sub
adc
dec
sbb
rcl
jae
fbld
dec
jmp
inc
add
inc
sti
mov
out
mov
fisubr
mov
adc
aam
push
std
bound
xor
cmp
es
arpl
fucomip
mov
int3
imul
cmp
leave
xor
xor
outs
int3
cli
push
add
add
pop
dec
shl
add
out
aam
(bad)
sbb
jmp
sbb
or
push
mov
cmp
es
fdivr
xlat
lahf
outs
cmp
int
outs
push
sub
xchg
repz
ror
lahf
leave
push
enter
and
aas
inc
(bad)
js
dec
sub
aad
jp
fstp
sahf
jae
jbe
cmp
mov
inc
or
lahf
out
lea
jbe
or
sti
stos
movs
mov
mov
add
ja
jmp
retf
push
call
fs
cmp
jmp
pop
sbb
repz
sub
lea
aam
aaa
in
loope
xchg
gs
jge
outs
cdq
into
push
ins
scas
in
xor
and
pop
add
call
or
adc
push
ins
jbe
pop
sbb
push
push
stc
loop
enter
rcr
adc
push
adc
jmp
sbb
and
sub
sub
xor
cmp
fbstp
pop
out
(bad)
adc
and
pop
inc
mov
addr16
test
xchg
stc
cmp
adc
arpl
fistp
loope
add
xor
cmps
in
cmp
push
mov
dec
pop
hlt
clc
mov
pop
and
and
popa
jbe
cmp
jnp
bound
push
js
xor
dec
mov
jae
sbb
xor
jae
js
dec
push
stos
jmp
inc
push
cmps
jle
mov
adc
(bad)
stos
outs
and
sub
scas
fcom
jns
fcomp
or
xor
cmps
mov
cld
ud0
call
xchg
icebp
int3
sub
jo
sbb
pop
push
dec
pop
pop
outs
adc
adc
xchg
mov
scas
add
test
push
out
les
jle
out
or
jb
push
rcl
jns
xchg
cmp
push
sub
movs
and
(bad)
mov
fdivr
mov
test
xor
setbe
loopne
xlat
out
add
aas
into
not
mov
dec
ins
mov
les
aad
or
jmp
retf
sar
fldenv
xchg
sub
fild
add
nop
mov
pop
out
adc
(bad)
mov
push
call
retf
inc
jae
push
daa
xchg
js
add
jmp
retf
fwait
pop
aaa
jbe
jecxz
or
sub
addr16
jge
push
jecxz
push
fidivr
test
pusha
xchg
jo
in
lds
lea
mov
ins
(bad)
cmps
in
pop
popf
or
dec
jge
call
xchg
test
mov
add
pop
sub
cmps
es
icebp
cmp
adc
int3
shl
adc
xchg
dec
pop
aam
mov
add
nop
or
mov
ja
mov
jle
inc
cs
push
stos
inc
fs
clc
jns
rcl
dec
std
mov
cmps
xor
mov
adc
jle
add
dec
(bad)
cmps
jbe
sbb
movs
call
push
(bad)
js
cmp
sbb
mov
es
cmps
cmp
std
ffreep
repz
es
(bad)
mov
push
xchg
into
adc
ss
enter
xor
enter
out
bound
int
(bad)
xchg
mov
enter
fstp
aas
jo
dec
adc
mov
mov
ins
dec
mov
jne
arpl
gs
sbb
hlt
mov
add
xchg
pusha
cmp
inc
pop
mov
cdq
pop
sahf
cdq
dec
add
push
push
or
and
shl
adc
scas
jns
xor
jae
cmc
lods
ja
mov
sub
cs
outs
adc
fwait
push
add
cli
into
cmp
arpl
sub
inc
adc
or
ficomp
push
xchg
mov
je
out
cmp
in
mov
adc
test
mov
hlt
xchg
rol
imul
cmp
psubusb
add
dec
cmp
push
fld
or
lea
shr
enter
xor
cpuid
cli
das
inc
movs
mov
test
mov
div
pushf
pop
jle
mov
popf
aas
ret
out
aaa
jns
int
das
sbb
dec
in
sub
sti
dec
inc
scas
add
inc
test
fs
lods
cdq
iret
sar
sub
outs
jmp
loop
jmp
push
ret
mov
fisttp
movs
jge
add
add
pop
pushf
xor
leave
(bad)
xchg
mul
xchg
popf
add
adc
pop
fild
cld
outs
inc
gs
xor
(bad)
(bad)
sbb
gs
retf
fcom
je
loop
or
mov
iret
or
sbb
in
push
sub
sub
mov
mov
loope
push
push
cmp
mov
loope
push
ins
inc
imul
rcr
leave
adc
mov
sub
test
ins
addr16
scas
stos
sbb
(bad)
hlt
adc
lahf
or
cdq
push
lock
push
cmp
out
sub
adc
ret
mov
xchg
pop
add
popf
bound
push
inc
dec
loope
jg
movs
repz
push
lods
sbb
popa
mov
(bad)
jae
nop
leave
jle
sbb
cdq
repz
test
enter
and
xlat
dec
xor
pusha
or
shl
pushf
stos
repz
dec
retf
data16
(bad)
mov
mov
fistp
dec
sbb
ffree
cmc
(bad)
push
(bad)
sub
and
ss
push
icebp
push
aas
push
adc
xor
(bad)
movs
(bad)
das
sbb
out
xor
enter
or
imul
jns
lods
(bad)
or
push
add
je
jae
mov
cwde
jnp
test
xchg
dec
cmp
and
mov
mov
sub
sub
mov
out
sub
cmp
add
call
jmp
loopne
fidivr
mov
gs
jg
dec
inc
jge
leave
mov
dec
stos
fnstcw
lods
xlat
cld
jo
pop
je
cmps
jae
or
push
push
aad
or
pop
repnz
cmp
pslld
mov
cs
jne
(bad)
(bad)
pop
xchg
xor
adc
jmp
nop
leave
mov
imul
retf
sbb
sahf
stos
mov
dec
pop
aad
sub
shl
gs
sub
stos
mov
xchg
jae
mov
inc
loope
lds
imul
ficomp
adc
sbb
jp
adc
imul
mov
xchg
cmp
enter
add
arpl
les
mov
test
jp
pop
jnp
fsubr
fmul
pop
loope
push
dec
inc
sub
ret
addr16
sbb
jns
jmp
push
sub
fnsave
xor
xchg
imul
dec
stos
sbb
inc
inc
cmps
mov
push
jle
xchg
adc
inc
adc
jno
jne
push
loopne
out
sbb
mov
sbb
add
iret
add
xchg
test
and
cld
mov
xchg
mov
fist
jmp
movs
sub
in
dec
hlt
mov
adc
mov
(bad)
(bad)
xchg
clc
lods
arpl
sti
enter
add
into
add
ds
rcl
push
add
retf
inc
fld
loop
jns
xchg
xlat
outs
cmp
imul
pusha
mov
push
cmp
xlat
cmp
lahf
outs
mov
js
jns
sub
pop
test
xchg
in
add
mov
and
outs
aam
lea
sbb
in
jp
pop
add
jae
xor
jg
pop
outs
cli
icebp
fiadd
loope
test
cmp
je
mov
imul
jmp
or
jmp
mov
call
neg
dec
retf
mov
retf
xchg
scas
test
dec
inc
(bad)
cmp
pop
mov
xchg
leave
jns
enter
sbb
inc
div
add
add
and
mov
xor
std
sbb
shl
add
xchg
xor
lea
mov
pushf
mov
daa
sub
push
cmc
out
pop
lahf
mov
xor
and
test
or
xor
movs
shl
mov
shr
sbb
xchg
pop
push
sub
mov
xor
lahf
xor
inc
mov
dec
pop
scas
pop
mov
or
sub
(bad)
cmp
sub
rcr
lods
sbb
push
mov
inc
xchg
out
(bad)
or
or
call
jge
lock
jno
(bad)
fmul
push
out
jne
push
push
inc
pop
jp
cmps
add
icebp
xor
jmp
dec
retf
push
sar
and
push
and
shr
rcl
mov
cs
sbb
out
rol
xchg
in
push
movs
inc
xchg
inc
cmp
push
push
ror
mov
in
pop
or
(bad)
jne
xor
fimul
sbb
daa
pop
pop
cli
repnz
dec
or
mov
push
retf
lahf
add
xchg
push
ss
cmp
shr
xchg
movs
cdq
mov
inc
mov
lods
inc
or
jmp
iret
sub
scas
popa
rcr
or
cmp
ret
pop
or
retf
mov
push
clc
jae
sbb
addr16
fstp
xor
ror
bound
xor
imul
cld
jb
aam
dec
iret
push
test
jne
rcl
fmul
inc
inc
sub
ror
dec
xor
enter
popa
mov
jae
nop
mov
jmp
jno
adc
jecxz
ds
sbb
arpl
jne
inc
push
jp
xlat
neg
pop
pusha
push
jnp
push
imul
sub
(bad)
stc
test
push
mov
loope
(bad)
pop
jmp
mov
push
in
cmp
cmp
(bad)
add
ss
enter
pop
cmp
shr
mov
pop
sbb
jecxz
fidiv
mov
push
sbb
cmp
adc
add
popa
inc
and
mov
data16
ins
aaa
mov
inc
inc
ja
xchg
and
iret
add
int3
call
mov
enter
xchg
(bad)
pop
mov
mov
lods
ins
or
cwde
clc
adc
outs
mov
pop
jno
fiadd
jge
push
or
ss
scas
push
xchg
idiv
and
sahf
frstor
bnd
(bad)
stc
push
mov
out
inc
inc
jge
pop
ror
sbb
and
ins
cmc
shl
mov
sahf
or
sbb
dec
mov
dec
lods
out
fsubr
push
icebp
push
mov
xlat
adc
mov
cld
jnp
into
dec
xchg
mov
adc
jnp
sub
inc
mov
xchg
cmp
ffreep
inc
sbb
push
sar
lods
or
cmp
out
out
mov
stos
call
inc
sub
sub
push
fcom
test
adc
pop
and
fcomp
fsubr
loopne
jle
retf
sbb
cmp
ret
inc
out
arpl
add
ss
fild
std
pop
dec
add
dec
xchg
dec
mul
push
aad
loope
enter
push
sub
or
xchg
loop
pop
push
xor
pop
leave
test
repz
ror
jne
mov
stos
sbb
xor
lds
add
cmp
push
fsqrt
mov
popf
lods
pop
and
mov
mov
pop
fdiv
hlt
ins
and
test
test
sub
jae
out
lods
mov
fisttp
(bad)
mov
shr
idiv
stos
(bad)
lods
(bad)
or
mov
jne
out
and
(bad)
je
cmps
mov
mov
pop
out
rol
ja
mov
xor
jmp
in
cwde
adc
or
xlat
fiadd
movs
pop
cmps
jmp
mov
mov
mov
jl
rcl
xchg
adc
repnz
clc
cwde
mov
popf
arpl
sahf
dec
jmp
stos
test
mov
mov
pop
gs
into
inc
cmp
cmp
dec
mov
mov
fcom
call
shl
aam
in
mov
push
add
jo
(bad)
jne
and
cli
out
lods
add
sub
dec
pop
and
pusha
in
(bad)
jg
sub
ss
pop
fwait
aam
loope
pop
cdq
inc
leave
add
cmp
dec
add
jb
inc
call
cmp
xor
movs
push
loope
xchg
cmps
gs
pop
test
ret
inc
out
mov
pop
and
mov
ins
adc
mov
retf
adc
add
out
fs
jo
stc
test
lahf
xchg
mov
stos
jmp
ss
popa
std
xlat
icebp
add
mov
(bad)
sub
or
inc
pop
int
mov
inc
test
dec
stos
add
add
pop
pop
mov
mov
adc
push
jmp
out
enter
or
je
ret
sub
outs
iret
inc
int
outs
xor
and
inc
outs
scas
mov
test
sbb
movs
mul
aam
movs
shl
ins
add
and
into
sbb
push
out
rol
mov
adc
jno
inc
ja
cmp
ror
mov
add
popa
stos
stos
dec
xchg
aam
jne
shr
ret
ss
dec
adc
imul
mov
cmps
sbb
jae
inc
xlat
xchg
xor
(bad)
sar
das
mov
or
pop
jo
or
dec
mov
mov
ja
clc
popf
out
test
mov
pop
ds
push
inc
sbb
ja
test
daa
fmul
adc
dec
daa
into
lea
mov
xchg
mov
mov
gs
sub
xchg
daa
ja
int
pusha
ja
xchg
ins
dec
fld
push
out
mov
mov
mov
out
rcl
movs
lock
out
or
fisub
cli
cdq
call
inc
cmc
(bad)
pop
dec
adc
iret
mov
adc
lea
xor
sub
loope
pop
pop
stos
mov
cli
adc
jnp
and
inc
gs
imul
popa
mov
mov
add
and
add
inc
or
push
loope
dec
in
jp
pop
scas
int3
ins
mov
mov
in
mov
mov
test
pop
in
shr
and
jo
adc
sub
sub
push
add
mov
mov
add
and
test
inc
and
inc
in
movs
ss
cmp
add
and
out
repnz
outs
inc
pop
popf
scas
fcmovnu
out
mov
arpl
dec
add
and
sbb
push
xlat
jnp
lock
push
stos
sbb
and
jecxz
outs
jb
aam
push
sub
repz
mov
std
or
outs
add
mov
add
xchg
mov
push
cmp
inc
add
jns
cmp
ds
test
pop
adc
mov
cmp
push
rol
dec
mov
sub
jno
loop
jle
dec
jbe
dec
aad
mov
mov
mov
lahf
adc
cwde
adc
mov
inc
pop
push
gs
mov
mov
dec
dec
data16
std
dec
std
cli
neg
ins
dec
fdiv
add
push
outs
call
rcl
inc
test
cmp
inc
arpl
sbb
ret
mov
inc
sbb
test
clc
popa
cmps
dec
int3
cs
test
mov
jbe
sbb
repnz
pusha
jl
push
sbb
adc
pop
aaa
pop
push
leave
cmp
(bad)
xlat
pop
jmp
jo
mov
xor
jmp
and
add
je
push
scas
jl
out
pusha
cmp
das
nop
inc
scas
xchg
rcr
mov
inc
xor
xchg
outs
fcomp
jns
jmp
push
repnz
sub
fs
sar
mov
push
das
inc
sbb
sbb
scas
rcr
scas
and
pop
adc
sub
pop
leave
xlat
cwde
daa
sar
fisttp
adc
jae
push
xor
cli
adc
push
push
or
jmp
pop
test
jle
mov
cmc
mov
xchg
jae
shl
fimul
cli
aam
cmc
cdq
push
bound
inc
cld
jnp
pop
mov
xchg
mov
fadd
lods
mov
xchg
call
xchg
cmp
cmp
dec
in
xchg
sub
into
mov
pop
dec
dec
jmp
and
out
cwde
jae
mov
jbe
mov
hlt
cmp
outs
pop
push
in
push
loop
inc
loope
mov
push
sbb
cmc
inc
inc
cwde
add
stos
and
(bad)
push
push
movs
(bad)
mov
jne
mov
inc
es
cmp
and
sub
in
ret
add
dec
or
inc
jo
mov
mov
aaa
and
popa
lds
xor
sbb
jno
sbb
pop
arpl
mov
xchg
or
clc
call
jo
ret
pop
and
ins
movs
xor
sbb
sub
mov
add
cwde
mov
dec
xor
(bad)
xchg
aaa
cmp
sahf
pop
sub
pop
sub
add
sub
icebp
dec
cmp
push
frstor
std
cmps
das
cmp
ficomp
jb
jmp
add
sbb
jne
mov
icebp
movs
(bad)
mov
fs
or
adc
(bad)
test
jmp
mov
setae
inc
test
jne
test
loop
aas
or
or
cmovbe
fcom
rcr
cmp
mov
inc
cmp
std
movs
pop
fistp
mov
scas
push
jo
mov
jg
sbb
cmc
je
mov
les
mov
dec
mov
in
imul
mov
or
sbb
mov
std
and
cmp
jmp
add
and
test
jnp
pop
(bad)
mov
aas
inc
add
mov
outs
xchg
imul
jno
shr
leave
add
fsubr
out
jmp
lea
aaa
xchg
nop
pop
jecxz
inc
jno
(bad)
scas
push
mov
mov
and
jecxz
cs
jmp
sbb
divps
or
cmp
or
or
movs
push
daa
imul
stos
aad
sub
shl
jp
pop
jbe
icebp
dec
mov
mov
jo
scas
in
out
imul
sbb
retf
std
scas
in
outs
pop
cmps
adc
xor
sbb
cmp
in
sub
and
pop
ss
cmp
mov
popa
fincstp
and
lods
ja
adc
mov
fld
dec
fdiv
sbb
sbb
mov
repnz
mov
cmp
xor
cmp
sbb
push
setnp
xchg
and
nop
arpl
cmps
push
or
sub
mov
sahf
ret
xor
fld
sub
jp
xchg
push
popf
sub
call
push
add
std
gs
add
hlt
push
repnz
mov
pushf
ins
lods
or
scas
mov
gs
push
cmc
push
and
test
sub
test
int3
out
adc
lods
arpl
mov
and
shl
mov
jle
mov
inc
pop
rcr
bound
stc
mov
push
xchg
loope
ins
mov
sbb
jge
xchg
lahf
mov
xchg
jbe
mov
add
mov
cld
mov
adc
or
push
sub
jmp
push
loope
fcomip
jg
sbb
repz
jecxz
xchg
arpl
xlat
xchg
pusha
xor
out
sar
mov
bound
mov
sub
jp
retf
out
jo
mov
lock
dec
sbb
sub
dec
imul
mov
sub
scas
cmp
sbb
push
imul
addr16
ret
mov
sti
repnz
imul
add
fwait
mov
out
nop
ficom
add
add
push
test
sbb
xlat
fild
in
pop
std
rcl
adc
push
inc
int
jg
xchg
rcr
push
ds
push
movs
mov
cmp
int
clc
mov
cmp
pop
enter
mov
and
movs
jns
stos
ret
dec
mov
pop
clc
jo
cmp
pop
add
jg
cwde
outs
push
mov
push
mov
call
cmps
ins
inc
mov
pop
sbb
(bad)
outs
(bad)
dec
test
pop
cmc
xlat
jb
jnp
mov
popf
test
fstp
test
dec
jo
lods
iret
das
in
iret
popa
movs
push
or
leave
jo
adc
js
jmp
push
pop
cld
push
lods
or
push
ror
aam
imul
stos
mov
int3
ins
cld
(bad)
rcr
adc
pop
(bad)
cmp
jp
fst
outs
hlt
push
push
outs
shl
push
test
push
iret
fadd
and
out
sbb
inc
fdivr
call
cwde
lock
and
jnp
shl
test
idiv
call
mov
movs
dec
mov
cdq
fldcw
mov
xchg
mov
inc
mul
and
push
jmp
imul
stos
popf
or
pop
jge
dec
scas
xor
dec
scas
pushf
sub
or
movs
sbb
daa
daa
xor
loop
test
hlt
stos
aam
cld
fdiv
xor
inc
and
mov
sahf
or
mov
ficomp
adc
inc
popf
xor
(bad)
sbb
xchg
adc
or
jp
push
cmps
dec
adc
push
or
loope
shl
jmp
fist
adc
cld
or
fprem1
shr
fnsave
add
iret
shl
push
int
dec
inc
cmp
cmp
mov
les
and
(bad)
cmps
aam
mov
sti
sub
push
sar
or
dec
lea
out
cmps
sub
cmp
push
(bad)
xchg
data16
mov
in
and
jge
ins
pushf
imul
stc
or
cs
mov
stos
push
icebp
fist
mov
xchg
sbb
cmp
jge
sbb
(bad)
fisttp
cmp
xor
mov
call
mov
mov
stc
or
xchg
ss
arpl
aaa
dec
dec
jo
xchg
dec
iret
mov
mov
imul
mov
in
fld
gs
jns
mov
cmc
sub
cmp
inc
mov
jmp
add
loopne
push
fyl2xp1
jmp
lea
inc
inc
out
dec
and
add
outs
mov
out
mov
xchg
xor
pop
xchg
sub
dec
fadd
movs
loope
lea
es
ss
push
push
pushf
pop
mov
and
sbb
cmp
sub
push
dec
inc
mov
clc
outs
repz
push
and
mov
ficom
sub
pusha
dec
fdiv
cmc
adc
inc
or
add
adc
lods
pop
fsub
fild
sti
lock
or
sub
add
out
push
aaa
test
and
retf
int
xchg
lock
or
or
movs
daa
scas
pop
mov
mov
sbb
mov
out
push
ja
loop
and
mov
cmp
(bad)
in
lock
cmp
jg
and
sbb
lods
mov
inc
cmp
cmp
int3
lds
inc
in
xchg
loope
repnz
(bad)
retf
mov
fdiv
pop
xor
add
mov
lahf
adc
inc
dec
jmp
ret
push
mov
xchg
(bad)
mov
in
test
loop
es
adc
pop
inc
ret
stc
mov
add
mov
test
(bad)
mov
out
mov
neg
sub
jns
jmp
pop
cmps
push
and
jb
lock
cmp
pushf
sub
push
in
inc
mov
inc
jmp
add
xlat
push
repnz
adc
mov
mov
mov
jo
and
bound
mov
push
sbb
sub
jle
bswap
xor
imul
pop
jno
lahf
movs
sub
and
add
in
jle
jo
lods
sbb
mov
pop
rol
sti
xchg
lods
in
and
or
test
outs
cmp
popa
adc
pop
sbb
cli
push
hlt
arpl
icebp
mov
(bad)
(bad)
or
loope
sbb
retf
cwde
sbb
nop
cli
aam
adc
sti
rcl
push
cdq
or
icebp
call
not
test
sahf
jmp
sahf
aas
xchg
mov
jb
inc
and
xor
or
mov
(bad)
retf
mov
aaa
(bad)
mov
ret
and
retf
or
hlt
adc
pop
mov
popf
outs
pop
out
mov
int
push
sub
movs
int3
xor
pop
rcr
sbb
jb
jle
nop
aaa
xchg
inc
pop
jo
call
sbb
add
sti
jmp
pcmpgtb
into
inc
retf
adc
mov
cli
lods
sub
das
sub
sar
mov
fucomip
sbb
xchg
xlat
ins
jl
enter
xor
dec
push
je
(bad)
or
cdq
shl
adc
sar
call
dec
cmp
jo
int
mov
push
sub
cdq
xchg
int
pop
(bad)
cmp
mov
sbb
adc
addr16
(bad)
outs
dec
dec
js
inc
mov
xor
pop
jmp
rol
xor
stos
jbe
mov
js
fild
pop
jp
jg
imul
cdq
popa
lods
xchg
(bad)
cmp
(bad)
xchg
ret
leave
push
xchg
call
and
out
in
in
ins
ret
adc
jg
or
inc
pushf
pushf
das
push
jg
dec
inc
(bad)
call
cmp
iret
icebp
sub
jno
iret
and
aad
sub
mov
sti
jp
xchg
mov
inc
ret
jno
xchg
dec
pop
leave
mov
adc
mov
push
mov
test
js
outs
sbb
mov
mov
pop
fistp
push
mov
mov
pop
fnsave
xchg
jne
aas
cmp
cs
retf
mov
pusha
cdq
cmp
push
inc
scas
cmc
mov
inc
scas
push
(bad)
mov
(bad)
ja
pop
sbb
(bad)
out
out
rol
lahf
mov
pop
jmp
xchg
push
push
daa
call
ja
(bad)
(bad)
xor
(bad)
iret
mov
(bad)
fmulp
mov
loopne
leave
out
xchg
mov
mov
mov
xchg
push
ins
push
outs
cmps
cdq
aad
repz
jnp
hlt
mov
push
inc
mov
stos
in
sub
out
out
push
push
addr16
addr16
leave
sti
xchg
(bad)
movs
jno
sub
jb
xchg
clc
mov
out
test
out
lods
jmp
rcr
fdiv
xor
pusha
push
pop
push
jmp
movs
xor
mov
aas
fnsave
or
inc
or
(bad)
xor
shr
mov
arpl
ret
inc
and
rcl
fwait
inc
jae
add
push
ret
fisubr
cmc
in
and
or
push
dec
push
loopne
jecxz
fst
adc
mov
cld
std
retf
(bad)
imul
aam
repnz
mov
or
sbb
mov
or
mov
mov
icebp
adc
outs
ret
pushf
adc
mov
xchg
ret
push
call
add
je
ins
cmp
or
jmp
enter
fistp
sub
and
ins
mov
cli
mov
xor
mov
fwait
push
shr
(bad)
into
retf
xchg
fiadd
add
fnstcw
mov
cmp
pusha
(bad)
cmp
outs
dec
in
sub
dec
cmc
loope
lahf
nop
scas
aad
pop
or
mov
pop
mov
jb
pop
cmps
jp
les
and
xchg
jae
loop
out
or
rcl
out
add
or
sbb
pop
aas
sbb
and
mov
stc
scas
push
clc
and
(bad)
test
push
cmp
inc
push
mov
xchg
jp
in
js
jae
pop
jne
das
rcr
(bad)
scas
sbb
shl
sub
ficomp
sub
aad
push
mul
xchg
push
lds
call
sbb
lea
movs
mov
das
rcr
dec
xor
dec
cwde
rcl
scas
sub
push
outs
shr
jae
(bad)
dec
xor
(bad)
sbb
out
inc
sub
dec
push
sub
jno
mov
frstor
mov
xor
jge
dec
loope
ins
cmp
mov
dec
mov
cwde
and
bound
das
sbb
sbb
mov
inc
fidivr
jp
enter
and
jnp
adc
push
adc
push
jle
ja
cmp
jl
loop
adc
bnd
cld
es
test
mov
shl
mov
inc
dec
das
sahf
mov
mov
mov
or
addr16
jbe
(bad)
jmp
ds
cmps
xchg
jecxz
push
sbb
or
stos
loop
mov
push
loopne
push
neg
mov
test
push
add
ins
lgs
hlt
xchg
dec
jmp
inc
scas
push
add
mov
sbb
loopne
hlt
das
fcom
ret
mov
cld
ret
ret
(bad)
and
into
or
lock
pop
add
inc
push
bound
nop
iret
test
sub
mov
xchg
movs
retf
in
repz
pop
pop
fldenv
dec
lahf
inc
pushaw
sahf
pop
cmp
dec
sti
call
cli
fild
retf
ret
les
push
repnz
add
mov
sub
dec
enter
mov
pop
cmp
pop
xchg
xor
adc
ror
pop
les
leave
lods
imul
shl
inc
int
jae
out
push
fisubr
inc
jmp
les
inc
cmps
cwde
es
dec
std
call
ret
add
jne
inc
mov
adc
call
jg
adc
test
mov
pop
movs
cdq
loopne
dec
push
xor
(bad)
sub
dec
or
mov
push
xor
pusha
test
(bad)
xchg
scas
sbb
mov
daa
mov
imul
lods
xor
sub
fild
adc
push
or
pop
faddp
dec
inc
mov
add
test
xor
int3
aad
sub
mov
and
inc
nop
(bad)
leave
inc
cld
adc
inc
es
inc
cmps
jbe
mov
test
mov
or
or
cld
xchg
push
cmp
jns
js
jecxz
inc
popf
sahf
inc
lds
jbe
stos
jecxz
mov
pop
inc
js
jmp
rcl
adc
mov
inc
jmp
jno
adc
int
lock
xor
(bad)
push
fdiv
cld
xchg
test
(bad)
popf
sbb
call
imul
cmps
lock
fistp
adc
sub
sbb
jns
pop
imul
imul
fnstsw
mov
fisubr
scas
mov
xor
scas
outs
mov
stos
mov
scas
lahf
sete
xor
sbb
stos
mov
xchg
push
daa
xor
rol
pop
cmc
dec
pop
and
clc
scas
mov
jnp
or
xor
lahf
rcl
fcomp
and
retf
mul
mov
lea
cmps
stos
out
shl
addr16
lds
retf
add
push
retf
sbb
sbb
fistp
mov
adc
aad
jbe
inc
int
cs
aas
in
arpl
jmp
aaa
sub
jmp
adc
out
jae
out
mov
jecxz
outs
dec
pop
jno
cmp
clc
hlt
fldl2e
and
lock
icebp
mov
shl
jge
repz
and
mov
mov
stc
sbb
sub
adc
ret
in
(bad)
pop
enter
and
into
fsubr
push
inc
loopne
frstor
cld
xor
es
in
cmps
and
retf
popf
jo
add
pop
push
sub
inc
xchg
fs
gs
idiv
(bad)
or
cmp
lods
cmp
ins
sub
ja
rcl
sbb
outs
jne
jl
les
mov
mov
mov
jge
mov
das
pop
sbb
mov
dec
fnstcw
inc
mov
je
lahf
ss
gs
mov
push
movs
cmc
cwde
add
hlt
xor
xor
xchg
sub
test
shr
mov
repz
jecxz
sbb
cmp
imul
fbstp
dec
xor
ds
ins
adc
neg
jo
fxch
mul
and
mov
mov
pop
fadd
lods
aad
scas
pop
cdq
add
cmps
enter
out
inc
jl
imul
mov
cmps
xchg
repz
adc
inc
push
xchg
out
(bad)
gs
mov
ds
push
repz
cmp
call
xor
jg
xlat
fild
and
jnp
cs
inc
xchg
lock
adc
repz
xor
fldcw
sbb
xchg
push
cmps
add
sbb
(bad)
xchg
mov
test
and
gs
cmp
lods
adc
sub
fst
ins
repz
in
mov
push
jnp
fbld
mov
lock
loop
mov
sub
add
loope
js
cmps
dec
scas
pop
and
pop
inc
mov
stc
mov
jmp
rcr
mov
aad
jb
adc
dec
test
mov
xchg
cli
and
mov
jno
fs
cmps
fmul
add
sbb
jns
push
daa
scas
(bad)
and
pop
daa
push
xlat
fdiv
(bad)
test
adc
sar
push
xchg
jb
or
push
push
or
jl
xchg
inc
push
pop
jae
fisubr
fwait
add
shr
push
inc
das
xchg
cmp
jmp
sahf
sub
test
sbb
and
push
xchg
add
and
clc
addr16
add
inc
orps
out
test
mov
mov
aaa
fist
adc
rcr
mov
sbb
(bad)
std
cmp
and
idiv
push
push
ret
sbb
or
sbb
mov
sub
xchg
sbb
xor
popa
scas
iret
adc
mov
jo
sets
xor
pop
pusha
sub
scas
(bad)
loope
inc
xor
iret
xchg
pop
enter
movs
cdq
cs
and
pusha
mov
rcr
xchg
sar
movs
xchg
add
jl
push
xchg
shl
lahf
loop
stos
add
sub
mov
imul
inc
test
out
add
pop
clc
stos
push
sub
pop
int
repz
xchg
fld
popa
cli
mov
xor
xor
inc
fstp
retf
mov
(bad)
mov
xchg
xchg
cmp
add
inc
cmp
jmp
push
shl
mov
loope
jg
xor
icebp
or
add
out
inc
nop
or
inc
icebp
xchg
bound
rol
call
js
or
xchg
mov
loop
mov
scas
ret
xchg
(bad)
inc
cli
adc
xlat
mov
icebp
push
adc
lds
fcomip
jp
adc
mov
imul
scas
sub
xchg
add
movs
int3
jp
push
mov
fcomi
gs
push
into
mov
(bad)
shl
jnp
mov
pop
sub
and
dec
(bad)
mov
es
jle
cmovne
shl
jns
test
fs
arpl
mov
loop
ficomp
and
pop
aam
in
sub
leave
test
add
sti
sbb
cmp
inc
push
cmc
outs
pop
fldenv
mov
jge
mov
retf
pop
push
out
test
cs
push
ins
nop
int
mov
add
leave
jae
fimul
retf
fstp
cmp
aas
ffree
and
sbb
std
dec
push
push
retw
jno
mov
and
xor
ret
mov
out
adc
mov
ror
(bad)
nop
pop
xchg
loope
mov
aam
xchg
push
sbb
inc
sub
mov
lods
mov
fcomp
push
mov
cli
xor
cmp
mov
xchg
mov
in
repz
or
call
or
sbb
mov
push
mov
icebp
or
add
sub
add
(bad)
cld
dec
mov
dec
push
(bad)
adc
inc
fidiv
cmp
mov
dec
sti
(bad)
mov
jno
mov
addr16
(bad)
fmul
daa
ds
int3
add
cmps
jnp
mov
into
popa
clc
stos
mov
xchg
sbb
je
xor
lods
pushf
push
movs
scas
push
pop
lea
ins
hlt
sub
idiv
mov
out
sub
mov
xor
retf
inc
stos
cs
sbb
jecxz
bound
mov
push
call
mov
sbb
add
push
mov
dec
bnd
xor
mov
outs
inc
(bad)
xor
dec
in
mov
sahf
mov
mov
das
inc
es
ret
adc
adc
push
xchg
pop
cmc
fisttp
pop
test
stos
add
jb
mov
scas
mov
fldenv
push
sub
es
add
push
cs
dec
inc
out
inc
xchg
imul
xor
adc
push
xchg
jns
lock
shl
mov
add
sbb
out
cmp
call
sub
add
test
cmp
(bad)
sbb
mov
inc
pop
dec
gs
jp
in
cmp
int
leavew
out
or
ja
int
movs
out
xor
fdivp
mov
repz
inc
aam
sti
and
arpl
rol
add
push
pop
daa
inc
test
arpl
sbb
push
push
and
cmp
xor
jg
push
add
aam
outs
xchg
mov
arpl
xor
sbb
mov
inc
int3
fild
push
ins
in
pop
xchg
jg
mov
jg
jecxz
rcl
inc
jno
repnz
gs
jmp
jbe
dec
mov
ins
dec
jo
mov
jl
mov
mov
xor
jb
test
sub
call
dec
push
jnp
cmp
rcr
(bad)
(bad)
dec
add
xchg
dec
push
iret
lock
cmp
adc
imul
ss
pop
cli
mov
inc
add
mov
stos
mov
pop
adc
ret
fadd
dec
mov
jne
mov
(bad)
cwde
sub
push
sbb
and
dec
xor
inc
arpl
adc
sti
je
fidivr
pop
xchg
les
sub
scas
push
xlat
or
adc
or
retf
iret
test
arpl
call
jle
sbb
lock
std
xchg
sub
sbb
xor
mov
jmp
cdq
out
jno
jno
xchg
pop
and
(bad)
sbb
and
dec
enter
into
data16
lahf
pusha
mov
cmp
out
js
test
mov
push
mov
imul
out
popa
xor
(bad)
cli
dec
movs
sub
push
jmp
mov
mov
fild
dec
cmp
jmp
dec
out
mov
mov
js
stos
fwait
mov
sub
mov
mov
mov
in
add
jp
adc
cmp
repz
add
out
or
adc
into
lea
pusha
loopne
mov
xor
test
cli
cwde
fist
pop
iret
xchg
stc
es
xor
test
fwait
inc
nop
ret
push
push
arpl
lea
les
and
xchg
mov
lds
gs
sbb
(bad)
dec
fldcw
cdq
scas
adc
les
jne
and
jns
mov
push
inc
adc
jp
test
or
dec
pushf
cmp
outs
out
fmul
test
jmp
xchg
sub
cwde
push
pop
jb
mov
push
inc
sahf
dec
mov
stos
jp
jp
pop
ss
fidiv
pop
(bad)
jbe
adc
ss
and
scas
cmp
inc
repnz
cmps
pop
mov
or
mov
mov
aad
jbe
mov
pop
imul
ret
fwait
add
mov
lods
inc
ja
lea
rcr
sbb
adc
adc
sbb
(bad)
(bad)
cmova
retf
lock
enter
mov
sti
jne
aad
dec
mov
or
xor
dec
jb
js
movs
adc
push
sub
cmp
fst
test
and
cmp
jle
jg
mov
pop
xchg
lods
stc
push
mov
adc
int3
dec
(bad)
out
jns
add
push
stos
and
pop
mov
sti
das
push
add
mov
cs
dec
lods
ret
mov
adc
add
sbb
test
adc
movs
push
cmp
mov
sbb
fisubr
pop
and
lock
ret
push
daa
mov
dec
and
mov
movs
sub
pop
lock
int3
push
mov
iret
fcom
sbb
ds
jo
and
bound
pop
and
in
ficomp
scas
mov
cmp
mov
inc
gs
clc
in
xor
nop
xchg
mov
jbe
dec
push
fs
pop
xchg
lea
(bad)
(bad)
fstp
leave
clc
hlt
and
add
or
fldcw
inc
adc
imul
push
sub
inc
or
test
push
aas
jl
call
sub
jnp
dec
inc
inc
adc
dec
add
sti
shl
mov
aaa
pop
mov
mov
arpl
movs
ret
hlt
add
not
loope
dec
in
test
mov
mov
pop
test
mov
jle
mov
loope
adc
cmc
mov
retf
in
int3
and
repz
sub
pop
dec
in
fild
jbe
(bad)
pop
jl
dec
inc
ret
jbe
mov
mov
retf
cmp
rcr
repnz
mov
and
je
sub
fsubr
sbb
pushf
or
adc
cmp
cmps
pushf
(bad)
adc
fcmovnu
sahf
stos
sub
xor
cmp
ret
dec
adc
jecxz
ret
push
mov
adc
js
popf
cli
cld
dec
and
inc
or
out
std
mov
add
xchg
pop
mov
add
jecxz
hlt
cld
or
ror
mov
aam
and
mov
add
mov
movs
cmp
(bad)
or
nop
leave
int
das
push
sbb
int
jl
mov
call
inc
addr16
retf
ror
mov
test
jp
lds
inc
mov
in
pop
xor
mov
sub
inc
jg
int
mov
int
scas
xor
mov
fwait
mov
dec
or
stc
(bad)
jge
nop
div
cmp
retf
inc
mov
fcomp
pop
lds
fcmovu
outs
scas
bound
push
nop
sub
sub
mov
sbb
inc
ss
dec
jmp
ins
js
cmps
or
add
push
in
xchg
mov
add
cwde
mov
and
popf
(bad)
int
aam
add
mov
jbe
jmp
dec
push
cmp
inc
in
scas
cli
movs
in
call
int
mov
mov
pop
iret
dec
or
cmp
(bad)
movs
in
pop
add
(bad)
lods
dec
fst
cmps
fidiv
repnz
add
jecxz
pop
push
iret
push
daa
jmp
and
mov
repnz
stc
loopne
jmp
data16
mov
js
loop
cmc
jbe
in
jecxz
(bad)
aad
ins
call
dec
mov
pop
bound
xor
test
pop
pop
inc
shl
int3
adc
in
adc
addr16
je
xchg
mov
mov
xor
test
mov
jmp
mov
xchg
lahf
imul
mov
fisub
dec
jge
ins
mov
mov
add
idiv
fisubr
call
aas
fwait
or
mov
push
cli
out
push
push
in
inc
lock
mov
dec
hlt
ins
dec
or
es
adc
push
push
(bad)
ret
jge
or
gs
stos
xchg
imul
outs
icebp
cmp
stc
js
std
add
xor
pop
fimul
jge
dec
mov
scas
(bad)
iret
imul
call
jle
jmp
push
pop
cld
pop
inc
fwait
pop
lods
mov
jno
mov
(bad)
loop
aaa
mov
add
sub
outs
dec
imul
cdq
push
lods
xchg
ins
inc
lds
repnz
pop
and
outs
cli
sub
stc
(bad)
xchg
sbb
test
sbb
shr
add
xor
out
or
dec
cs
xchg
dec
popf
icebp
mov
push
mov
arpl
push
aam
mov
or
pop
mov
dec
pop
push
loope
ja
xor
arpl
fistp
sbb
or
mov
sahf
sub
lea
add
(bad)
inc
mov
sub
rol
xchg
pop
mov
sub
jbe
dec
test
mov
jb
sbb
push
call
inc
popa
shr
popf
push
pop
int3
leave
push
add
inc
push
inc
or
xchg
dec
loope
mov
mov
jae
fmul
pop
movs
xor
or
aas
dec
xor
adc
ja
mov
dec
retf
sahf
arpl
and
mov
jo
inc
rcr
mov
aaa
sahf
fst
sbb
jns
pop
bound
inc
dec
fs
push
inc
mov
fistp
mov
adc
push
cmp
xor
popa
(bad)
or
or
and
cmp
mov
or
or
mov
xlat
dec
xchg
out
mov
jno
push
sub
lahf
cmps
fstp
call
mov
inc
pop
ret
mul
test
jecxz
aad
pop
jne
mov
jbe
mov
dec
inc
mov
arpl
xor
sar
clc
sbb
lds
fdiv
in
ss
test
sbb
fld
cdq
mov
lahf
fiadd
dec
mov
jae
mov
xchg
rol
or
add
(bad)
mov
sub
sbb
push
cmp
jns
and
mov
pop
call
jmp
add
pop
sbb
cwde
shl
pop
adc
mov
mov
call
mov
fcomi
sbb
mov
sbb
push
dec
dec
out
movs
sub
dec
and
pop
div
jnp
or
or
jl
and
dec
ins
fs
clc
mov
sub
pusha
std
sbb
xchg
or
fistp
mov
outs
mov
pop
mov
xor
rcr
xchg
cdq
xchg
and
loop
sti
pop
or
pop
rcl
js
fwait
adc
enter
mov
mov
lds
icebp
lods
les
dec
jge
adc
or
mov
jns
lods
out
push
(bad)
mov
push
mov
dec
adc
pushf
cmp
adc
imul
test
shr
retf
aaa
je
or
push
cmps
out
shr
mul
xchg
pop
and
in
mov
(bad)
xor
loope
pop
lea
mov
dec
xchg
es
into
pusha
mov
test
arpl
movs
int3
adc
repz
cld
daa
fiadd
pop
sub
lods
es
dec
mov
movs
mov
xor
dec
mov
fsub
or
sbb
loop
xor
fcom
jnp
test
dec
scas
not
test
popf
movs
test
sbb
hlt
push
adc
sub
inc
mov
mov
cmp
scas
xor
cmp
cli
repnz
stos
mov
es
jb
loop
call
add
sbb
sub
fstp
push
jle
add
arpl
fmul
xchg
cdq
std
mov
xchg
pop
scas
cld
sub
lods
sub
adc
fadd
test
lock
scas
ror
xchg
push
and
loope
push
add
inc
repnz
in
outs
cmp
jnp
ins
(bad)
ins
cmc
js
or
sub
pop
call
xchg
mov
xchg
loope
add
push
out
xor
and
dec
ja
mov
mov
mov
popa
mov
fld
push
pop
out
call
iret
xor
and
dec
cmps
(bad)
in
jo
dec
sub
xor
pop
out
not
mov
out
cmp
imul
out
xchg
paddb
adc
in
lahf
sub
call
and
gs
jp
sbb
js
mov
mov
mov
jnp
rcl
in
inc
xor
dec
mov
movs
pusha
or
jp
pop
jb
mov
fadd
imul
mov
adc
inc
dec
rcl
or
mov
xchg
sahf
cld
and
xchg
lds
fmul
dec
pop
mov
daa
jge
fidivr
cmp
cmps
es
pop
cmp
ret
or
add
adc
lds
add
lock
mov
push
dec
xor
sbb
mov
shl
push
and
idiv
dec
inc
and
dec
ror
mov
repnz
mov
or
fstp
push
out
popf
repz
scas
rcl
fdiv
jge
ror
mov
fwait
addr16
cmps
daa
dec
cli
jge
mov
das
ret
lahf
push
pop
xchg
inc
add
cmp
fsubp
mov
and
jge
xor
sub
cmp
sbb
rep
pop
fstp
mov
fs
mov
frstor
cmc
cmp
add
pop
call
movs
mov
mov
inc
icebp
jnp
and
shl
sbb
dec
(bad)
xchg
xor
nop
fwait
mov
leave
xchg
mov
fdivr
sub
or
pop
pushf
inc
xchg
cmc
aaa
adc
dec
loop
mov
lock
xor
xchg
lock
or
stos
fwait
and
iret
pop
dec
in
fisubr
daa
xchg
jae
push
sub
arpl
mov
sti
cmps
push
inc
push
imul
lds
shl
mov
dec
vcvttps2dq
(bad)
xor
xor
sub
ror
retf
pop
push
in
inc
ret
pushf
ret
call
jl
xlat
push
adc
xor
jbe
xor
(bad)
push
mov
outs
nop
pop
mov
xchg
sti
dec
jbe
ins
(bad)
fidiv
fdivr
std
(bad)
jae
mov
sub
int3
(bad)
pop
aaa
(bad)
js
and
cdq
sar
fidivr
mov
push
call
js
sbb
cmp
rol
mov
jae
add
pop
xor
pushf
imul
inc
adc
sbb
(bad)
add
add
inc
cmc
xor
pusha
jge
or
iret
test
jns
mov
push
mov
mov
pop
or
xor
sbb
add
fwait
and
shr
out
(bad)
stos
cmp
cmp
retf
ror
push
imul
cmp
xchg
and
sti
mov
jmp
call
jno
cmp
mov
imul
lock
mov
push
jns
test
mov
jo
inc
call
imul
or
loope
mov
or
push
mov
sub
pop
jecxz
fiadd
push
mov
aas
outs
jne
(bad)
leave
mov
pop
sub
pop
add
jno
rcl
mov
push
std
inc
push
hlt
jge
inc
jmp
inc
cld
shl
xchg
inc
cmp
inc
mov
lea
add
ds
imul
outs
push
sar
push
push
popa
mov
add
sub
mov
in
and
sahf
int3
fistp
mov
jno
call
pushf
sub
jp
sti
mov
jmp
sysenter
sbb
mov
cmc
mov
cmps
loop
daa
push
fcmovb
push
add
lock
pop
sbb
cmp
mov
sahf
add
mov
movs
jno
cmp
je
cld
in
outs
pop
pop
shl
repnz
je
test
pop
mov
mov
xor
sub
bound
loop
xlat
mov
sub
inc
imul
cmp
in
or
jmp
mov
popa
or
out
aam
jmp
in
out
jmp
inc
xor
fidiv
pop
mov
add
out
(bad)
cmp
mov
sbb
(bad)
outs
aaa
dec
sub
cmp
dec
sub
(bad)
pusha
outs
cmps
pusha
clc
jnp
mov
cmps
pop
das
aas
neg
mov
scas
mov
test
div
into
adc
push
adc
pop
sbb
pop
sti
mov
rol
movs
adc
sti
and
inc
bound
jns
xchg
dec
ds
fld
dec
mov
dec
jb
hlt
mov
pop
or
fiadd
jmp
add
shl
int3
ins
test
pop
mov
cmp
lock
xor
stos
data16
jb
in
aas
jg
cmp
popa
inc
fidivr
int
es
fmul
test
mov
imul
adc
sub
leave
push
pushf
mov
inc
or
dec
ja
inc
xchg
btc
or
dec
scas
std
sub
mov
out
cmc
lahf
mov
movs
in
loop
repz
out
call
push
rcl
cmp
jnp
call
es
lea
pop
lds
jmp
stc
push
dec
add
std
stc
ffreep
mov
sub
icebp
inc
adc
sub
lock
(bad)
pop
inc
lock
jne
mov
retf
lods
outs
jb
pop
or
mov
xchg
inc
xchg
movs
mov
jp
or
outs
(bad)
cs
xchg
mov
adc
jp
jmp
mov
xchg
pusha
les
retf
stos
call
add
jmp
pop
inc
sti
xor
mov
pop
sub
adc
dec
cmps
aas
and
mov
popf
sbb
push
xchg
mov
mov
inc
push
ds
xchg
scas
cmp
mov
pop
imul
ror
or
into
lods
dec
hlt
ss
adc
stos
fs
fdiv
clc
ret
pop
in
loope
outs
lods
loope
and
or
int
mov
push
xlat
inc
(bad)
xlat
or
cmp
xor
inc
xchg
jle
leave
inc
jns
pop
pop
mov
into
and
imul
mov
nop
sbb
pop
aas
dec
leave
and
jl
cwde
push
mov
ds
or
sub
scas
adc
push
comiss
fldenv
sahf
in
daa
test
jno
adc
call
push
ret
imul
sbb
jmp
jnp
test
clc
scas
pusha
stos
dec
push
push
out
xchg
mov
pop
add
repz
shr
aaa
jecxz
dec
push
or
ret
ja
cmp
mov
push
mov
mov
jmp
arpl
std
mov
sbb
and
into
xlat
(bad)
cdq
or
in
xchg
xchg
pop
popa
repnz
ds
mov
push
jmp
arpl
adc
pop
jmp
pushf
jp
or
add
mov
dec
call
inc
inc
cmps
xchg
lahf
outs
or
loope
repnz
jmp
cmp
aad
jnp
push
out
enter
fs
xor
bound
xchg
add
retf
mov
add
test
jle
mov
daa
neg
leave
ja
mov
jg
popf
inc
lock
outs
dec
dec
inc
loop
xchg
neg
xchg
(bad)
iret
es
and
icebp
das
sbb
pop
cs
add
in
div
push
pop
rol
jl
repnz
xchg
add
and
push
or
jmp
jnp
push
clc
repnz
gs
call
shr
fdiv
frstor
add
sbb
push
dec
adc
idiv
lods
mov
xor
push
mov
xchg
jmp
cmp
fild
(bad)
dec
sub
js
xchg
(bad)
mov
and
rcr
pinsrw
das
enter
and
out
mov
jmp
or
das
std
retf
inc
int3
mov
das
xchg
std
jecxz
and
sub
rcl
mov
inc
scas
xchg
xchg
cmc
mov
mov
or
les
jo
es
(bad)
cmps
lock
stos
dec
daa
fs
adc
sub
repnz
jno
loope
retf
inc
push
ja
scas
shr
(bad)
jae
fsub
xor
push
xor
and
aaa
dec
or
movs
sti
mov
out
imul
ja
mov
adc
jp
mov
adc
dec
pop
pop
mov
cmp
ror
jg
aaa
enter
arpl
or
mov
jmp
std
pop
movs
push
ror
sbb
sti
and
inc
xor
pop
sbb
add
jmp
fmulp
popf
in
push
adc
mov
test
and
movs
mov
mov
shl
cli
outs
mov
sbb
popa
fnstenv
scas
dec
adc
daa
lahf
and
addr16
pushf
push
cmp
pop
xchg
sub
jns
jle
pop
lds
sbb
(bad)
pop
fadd
in
mov
push
cmp
ret
jg
add
pop
pushw
les
jl
sub
lods
and
jmp
mov
adc
and
and
jmp
stc
inc
jg
bound
push
xchg
or
stos
or
ret
jns
xchg
(bad)
addr16
mov
push
rol
int
dec
pop
into
psrlq
arpl
sbb
daa
test
idiv
jo
(bad)
retf
sbb
rol
stos
or
jae
and
js
add
mov
ror
and
push
mov
test
jns
leave
push
mov
push
pusha
mov
lods
mov
inc
xchg
jno
imul
in
repz
int
call
cld
stc
pushf
sbb
loop
jns
adc
mov
sub
retf
push
lock
fnsave
sub
sbb
or
inc
or
sub
and
sbb
xchg
dec
pop
xor
dec
push
inc
cmps
mov
vmovddup
sub
out
mov
jb
lock
sbb
add
je
sahf
adc
das
aaa
and
lods
faddp
and
popf
sbb
retf
inc
and
imul
cmps
mov
cmp
jecxz
xchg
ficom
push
dec
mov
and
dec
outs
mov
and
push
(bad)
movs
dec
cld
mov
stos
adc
adc
call
in
add
pusha
scas
pop
mov
les
add
ins
rcr
and
xchg
in
sub
rol
ja
push
enter
das
clc
sub
jno
add
lahf
mov
retf
fadd
das
and
mov
fucomip
cmps
iret
xchg
sbb
repnz
mov
and
test
rcl
mov
shr
stc
xchg
nop
out
mov
jle
adc
sub
aam
out
jmp
popf
push
xchg
das
mov
and
and
jb
dec
jmp
add
fdivrp
mov
cmp
ret
xor
jnp
cmp
or
int
icebp
(bad)
and
std
ror
push
sub
pop
jae
ja
aam
mov
out
js
std
call
jo
call
popf
adc
and
xor
fdivrp
popa
mov
cmp
lds
rol
out
ret
sub
pop
cld
mov
inc
adc
mov
pop
ja
stos
mov
adc
adc
ds
or
pop
dec
cmps
je
adc
fld1
inc
or
push
sar
jno
hlt
in
pop
aam
je
mov
add
jl
pop
xor
and
fs
or
stos
out
jge
mov
(bad)
push
add
add
push
add
mov
lahf
jbe
adc
adc
fld
fdivr
shl
mov
xor
imul
call
outs
pop
add
cmc
aad
call
inc
push
mov
push
cmp
pop
ins
jbe
push
fisttp
pop
cmp
inc
jg
int3
call
jnp
inc
shl
mov
aas
xor
xchg
loope
jnp
int3
cwde
arpl
jl
shl
mov
shl
(bad)
test
ins
mov
and
or
scas
arpl
les
inc
mov
movs
aam
mov
sub
add
cmp
lods
dec
pop
imul
int
adc
sti
mov
mov
pop
outs
movs
pop
inc
shl
fmulp
or
xchg
jp
fyl2x
fwait
jp
shl
nop
mov
cmps
pop
push
adc
sub
inc
mov
and
pop
sbb
clc
mov
push
jnp
or
je
xor
mov
lods
mov
popf
or
fwait
sbb
add
loopne
dec
out
add
mov
and
clc
jle
(bad)
mov
and
inc
jl
push
fwait
xchg
dec
or
movs
cmp
cs
lahf
cs
test
pusha
or
or
xor
or
stc
mov
aas
call
mov
or
pushf
sar
mov
std
test
or
xchg
repz
sbb
mov
adc
test
xchg
enter
repz
mov
call
cdq
push
sbb
jb
ja
jnp
mov
inc
mov
jmp
dec
sbb
stos
mov
cmp
movs
scas
mov
out
imul
outs
arpl
sbb
movs
idiv
cmc
jg
cmp
xchg
mov
call
pop
pop
xlat
inc
xchg
pusha
jmp
push
sbb
pop
shl
jnp
add
fsubrp
pop
mov
sti
lods
xor
xchg
cli
stos
xchg
jns
jmp
and
mov
push
scas
xchg
test
iret
xchg
iret
out
in
stos
popa
or
out
push
daa
and
sub
pusha
stc
add
in
aaa
inc
test
sbb
xor
cmps
mov
imul
and
aas
or
test
push
adc
or
aaa
test
jmp
or
sti
pop
jo
bound
fdiv
or
jp
jmp
pop
xor
push
jp
(bad)
adc
cmp
repz
mov
jbe
jle
or
ds
mov
mov
imul
add
inc
rol
dec
pushf
ds
push
mov
pop
xor
or
jge
push
fsub
pop
sub
in
cmp
je
sbb
es
mov
mov
enter
loope
or
daa
pop
or
cmc
mov
push
fist
push
mov
cli
pushf
and
sbb
lea
mov
ret
jecxz
xchg
cmp
mov
fmul
push
mov
and
xchg
cmc
test
movs
fisttp
push
or
lods
clc
into
mov
aad
sbb
jns
cmp
inc
xchg
pop
mov
adc
out
push
dec
jmp
push
dec
js
and
(bad)
(bad)
cwde
cmc
push
std
cs
mov
shl
shl
clc
std
dec
stos
cmp
pop
push
add
sbb
xchg
cwde
inc
dec
pop
les
retf
cmp
sub
pushf
(bad)
push
mov
(bad)
mov
mov
cmp
mov
sub
xchg
sub
mov
sbb
dec
jp
pop
mul
sub
scas
jge
or
mov
ss
or
xchg
je
repz
mov
sbb
mov
mov
mov
mov
movs
(bad)
sub
inc
aas
xor
mov
or
lods
xchg
jl
(bad)
lahf
retf
test
lods
sbb
push
ds
jns
xor
out
adc
pop
jle
gs
jge
popa
cmp
pop
push
ds
push
and
jb
leave
ret
jbe
add
xor
in
iret
jbe
or
lods
sub
jmp
or
loop
rcr
mov
pop
fisttp
cmp
mov
pop
mov
aaa
pusha
data16
jmp
and
mov
mov
cmps
cdq
jo
and
xor
sbb
int
lock
pop
out
pop
mov
lahf
push
fistp
pushf
adc
ja
fdiv
movs
add
and
sbb
mov
inc
ret
xchg
and
add
pop
ins
pop
and
enter
movs
pop
lea
iret
test
outs
js
iret
cmp
or
fstp
mov
(bad)
(bad)
sar
xchg
mov
frstor
jo
aaa
xchg
popf
data16
mov
movs
outs
imul
mov
push
jae
stc
add
or
or
dec
xchg
loopne
femms
jg
fistp
xor
shl
inc
pop
mov
mov
cmp
pcmpgtb
inc
pop
xchg
xor
shl
mov
dec
xchg
push
jle
xor
fwait
loope
jmp
push
sub
dec
pop
sbb
mov
mov
jnp
je
mov
mov
sbb
and
dec
repz
jmp
ret
and
xor
inc
mov
sahf
sbb
daa
scas
cmp
jecxz
scas
jmp
sahf
imul
sbb
fcomi
mov
mov
adc
outs
and
xchg
cmp
mov
popf
mov
fs
test
mov
in
aam
pop
mov
adc
dec
jp
enter
fisub
inc
in
sbb
int
out
pop
cwde
aad
daa
xor
jmp
mov
jecxz
sub
push
retf
sub
cmp
mov
dec
into
in
out
pop
pop
in
and
popf
jp
movs
test
ss
xor
xor
cmp
xor
xchg
mov
xor
adc
sti
lods
xlat
aas
jno
test
and
hlt
ss
mov
adc
(bad)
nop
jle
jle
outs
outs
mov
xchg
cmp
dec
jp
test
fwait
inc
cmp
bound
jmp
mov
rol
lahf
(bad)
xlat
sbb
and
mov
lahf
into
aas
dec
(bad)
pop
pop
adc
fcomip
dec
jns
push
pop
stos
pop
and
or
test
fisubr
frstor
or
inc
and
outs
ins
loopne
sub
and
(bad)
jle
cmp
loope
sbb
jmp
rcr
add
or
int3
retf
repz
js
pop
mov
mov
inc
pop
ror
sub
sub
dec
pop
movs
fiadd
popf
out
push
push
vpmullw
int
cld
xchg
xchg
jg
mov
pop
mov
scas
dec
pop
cmp
xchg
jne
sahf
std
loop
mov
movs
rol
inc
rcl
xchg
in
xor
jl
popf
loopne
out
(bad)
jecxz
and
adc
ins
and
xor
imul
les
stc
adc
inc
mov
outs
push
out
sub
jb
fdivr
cmp
fiadd
pop
test
ret
dec
push
jp
in
xchg
sti
inc
and
into
out
clc
cmps
add
mov
mov
fstp
fwait
dec
aam
mov
retf
shl
sub
and
aaa
mov
pop
pop
test
scas
(bad)
jns
push
push
xchg
pop
jbe
mov
and
push
mov
sub
fst
cwde
adc
fcomp
mov
cmc
mov
inc
dec
mov
ret
mov
lds
push
jge
fistp
mov
sbb
lock
pop
hlt
jb
sbb
(bad)
push
fcomi
jle
outs
lods
and
jmp
sbb
scas
sar
repnz
pop
stc
push
outs
inc
lea
mov
movs
or
retf
aas
jno
and
push
push
xchg
fisub
push
stos
mov
mov
push
jge
dec
jno
aam
xor
retf
xlat
fdiv
and
pop
cs
pop
hlt
inc
sbb
pop
cmp
mov
push
lock
mov
inc
shl
pusha
(bad)
std
ins
scas
mov
mov
cmp
cmps
inc
pushf
sar
push
loopne
iretw
jbe
jle
popf
jns
or
xor
out
jo
add
push
call
jmp
add
aam
cli
cmp
sub
shr
pop
push
arpl
jp
imul
daa
jns
and
out
add
loope
xor
jne
push
mov
fild
xor
sub
mov
int
ss
or
inc
cmp
mov
mov
push
xchg
pop
mov
lods
sbb
test
push
daa
cwde
push
mov
ja
sub
addr16
add
mov
mov
xchg
or
pop
dec
lods
sbb
sbb
push
daa
push
push
sbb
dec
adc
xchg
jb
pop
pop
lahf
iret
int3
mov
cmp
and
loopne
out
mov
mov
adc
test
pop
repnz
pop
inc
sahf
mov
mov
and
sar
and
xchg
into
mov
test
cwde
pop
sbb
sub
jge
sahf
cmp
(bad)
dec
mov
cmp
(bad)
jge
out
dec
jle
call
pop
(bad)
add
mov
cwde
push
fild
popa
push
(bad)
jmp
cmp
pop
jl
out
shl
mov
repz
xlat
rol
sbb
mov
ret
pop
out
es
imul
adc
cmc
add
pop
adc
mov
cmp
xchg
mov
inc
sub
add
addr16
hlt
push
pop
dec
sub
inc
ins
lods
sub
adc
mov
pusha
mov
fisubr
popf
or
cmp
pushw
jg
push
dec
push
add
pop
dec
popf
mov
daa
lock
int
add
loopne
fld
push
dec
sbb
aaa
hlt
mov
dec
ins
vxorps
mov
inc
shr
xor
pop
or
outs
cmc
sbb
mov
mov
dec
jmp
mov
pop
sub
jnp
ja
(bad)
push
rcr
lahf
jne
movs
dec
adc
mov
and
pusha
sti
aad
dec
ins
out
jp
arpl
jns
push
fmul
pop
gs
retf
ret
shr
lods
xor
icebp
push
data16
aas
jge
lahf
mov
cld
rcr
mov
mov
fild
push
(bad)
iret
xor
in
and
outs
jnp
cmps
and
lahf
leave
add
movs
mov
shl
push
ss
sub
daa
xor
lods
fst
jl
cmp
xchg
fsubr
jne
aad
xchg
cmp
popf
cmp
mov
int
mov
add
and
lods
mov
outs
out
sar
lea
push
xor
sub
xchg
cmp
xchg
jl
or
ss
dec
xor
rcr
or
in
inc
fimul
fisttp
(bad)
mov
dec
mov
in
adc
fidiv
int3
xchg
and
mov
pop
adc
fcomp
dec
lods
ja
mov
mov
push
jne
adc
or
movs
scas
clc
imul
pop
mov
rcr
sbb
add
push
not
dec
xchg
fsubr
js
shl
sub
xor
scas
int
int
mov
cmp
inc
or
test
xor
xchg
(bad)
xchg
cld
mov
aad
adc
(bad)
adc
jmp
fisttp
in
fcom
popa
div
add
js
inc
cdq
dec
ins
loop
aas
lods
out
dec
pop
enter
imul
push
add
dec
dec
retf
call
push
jno
repnz
xor
and
in
out
xor
add
scas
xchg
jp
sub
scas
imul
clc
dec
(bad)
sub
mov
cmp
cmps
ror
pushf
int
in
xchg
outs
jno
popf
ret
mov
out
fs
and
push
(bad)
xor
jg
sti
mov
sub
mov
fisubr
clc
push
push
into
inc
js
jp
sub
cmps
ins
pop
jne
xchg
sbb
iret
or
gs
in
sbb
and
xlat
mov
mov
jns
sbb
sbb
or
xchg
jl
icebp
test
jle
xchg
ss
fisubr
(bad)
and
sbb
repnz
add
cs
mov
dec
inc
sti
js
jnp
clc
dec
adc
lods
pop
ds
xor
dec
push
dec
aaa
mov
jb
push
jno
imul
pop
mov
xor
scas
jmp
jg
or
add
(bad)
mov
sub
sub
fcmovnbe
cmps
mov
sbb
daa
aaa
mov
(bad)
lock
int3
outs
xchg
ret
div
pop
loopne
jmp
push
sbb
cdq
enter
int3
ja
gs
div
or
stos
mov
jo
pop
into
xor
adc
(bad)
push
sbb
sbb
push
sub
popa
and
test
inc
and
scas
popa
sar
inc
sub
mov
xchg
push
push
xchg
mov
pop
pop
mov
sbb
in
cmp
xor
cmp
(bad)
sub
or
adc
leave
dec
je
pushf
sub
inc
jne
mov
push
movs
jnp
cmp
xchg
or
imul
dec
(bad)
pop
push
add
inc
mov
pop
fsub
jecxz
xor
mov
pop
outs
or
(bad)
(bad)
sti
mov
scas
mov
push
pop
jl
add
arpl
push
xchg
in
mov
mov
or
in
jns
cli
mov
ja
inc
adc
cmp
mov
inc
lea
mov
and
xchg
ins
pop
out
pop
sbb
jo
push
push
leave
ss
fisttp
ficom
fild
(bad)
inc
cs
jne
fldenv
cmp
push
sub
xor
movs
mov
push
mov
mov
test
icebp
adc
push
pop
repnz
cmc
popa
sub
popf
cwde
(bad)
ficom
xor
jmp
cmp
sbb
test
gs
dec
mov
jo
aas
dec
aaa
lahf
adc
jmp
out
bound
enter
jo
cmc
jle
lds
repz
(bad)
xor
icebp
out
repz
xor
fld
xchg
in
fs
pop
mov
ja
inc
sub
gs
sub
retf
xor
lahf
aaa
adc
xor
es
stc
dec
sub
adc
pop
jne
push
dec
xchg
xor
sbb
shl
inc
xor
xchg
out
and
cmps
push
icebp
and
in
loop
sub
pop
mov
push
fwait
icebp
loop
push
and
push
xchg
pop
jns
mov
div
test
mov
movs
neg
in
fld
jmp
lahf
pop
xor
repz
add
mov
mov
(bad)
fstp
jae
gs
push
jl
push
sub
push
mov
add
out
fucom
ins
push
xchg
add
jno
xchg
stos
fisttp
mov
push
sahf
js
push
adc
pop
and
pop
(bad)
add
and
je
mov
xlat
mov
int3
test
mov
arpl
and
shl
dec
xchg
(bad)
data16
(bad)
std
pop
in
and
jb
data16
cwde
out
call
push
pop
jmp
inc
jae
sub
mov
fbstp
push
into
fadd
push
xor
jecxz
pop
sbb
mov
dec
dec
ret
or
int3
xor
gs
shl
bound
xchg
adc
dec
lds
inc
(bad)
enter
div
adc
sahf
shr
pop
xchg
sahf
mov
inc
mov
arpl
int3
xor
mov
dec
pushf
out
scas
pop
fimul
pop
ret
mov
push
mov
push
jmp
loop
fistp
ss
repz
mov
cmp
loope
jns
xchg
out
push
cmp
clc
test
shl
pop
bound
arpl
mov
in
sbb
(bad)
push
or
sbb
jo
inc
xor
inc
sbb
adc
pushf
dec
mov
pop
out
sbb
test
(bad)
neg
sub
lods
shl
jmp
test
push
es
cmp
call
aad
aam
inc
repnz
xchg
retf
dec
jp
shld
out
push
outs
adc
push
add
adc
cmp
adc
add
cmp
xchg
sbb
lods
or
jge
mov
(bad)
jno
imul
mov
pop
rcr
mov
fisub
scas
sahf
jp
call
or
sti
jae
jmp
adc
sbb
sar
xchg
and
in
sbb
xor
addr16
pop
popa
push
enter
adc
in
ins
mov
or
adc
xchg
mov
in
and
rcl
inc
sbb
mov
sub
daa
dec
popf
jo
inc
dec
(bad)
push
push
clc
out
leave
in
aad
aam
mov
jbe
out
daa
dec
bound
fimul
call
daa
sbb
push
mov
sbb
gs
xchg
xor
ins
push
lds
dec
lahf
loope
aaa
and
out
inc
add
sub
ret
push
mov
mov
or
movs
lds
in
aaa
dec
gs
ja
aad
int
pop
mov
iret
cmp
or
jmp
add
push
lock
xchg
add
popf
jg
mov
int
js
mov
mov
mov
call
imul
ja
add
cmp
out
jp
mov
cld
or
stos
adc
push
iret
jae
loop
mov
push
sbb
outs
sub
les
arpl
adc
cmp
in
test
push
mov
scas
or
pop
leave
aam
mov
xchg
fmul
pop
clc
mov
jmp
sub
bound
push
out
cmc
aas
ret
imul
test
fadd
sahf
sbb
test
mov
mov
xchg
jge
popa
stos
lahf
push
adc
dec
dec
shr
jns
xor
stc
div
inc
pop
jmp
in
and
and
nop
adc
cmp
adc
push
and
(bad)
ins
mov
mov
movs
repnz
push
cmp
leave
cmp
push
push
add
jbe
out
adc
jp
pop
jno
xchg
ins
call
cmp
push
retf
pop
mov
test
pop
adc
or
adc
mov
ja
push
cmp
sbb
fdivp
shr
call
iret
ds
jbe
inc
and
scas
xchg
cmc
cmp
icebp
mov
push
push
out
adc
lea
cmps
pusha
ficomp
lahf
mov
fcomp
xor
inc
and
call
call
ret
lea
xor
es
xchg
hlt
jg
adc
icebp
push
adc
mov
in
ret
fwait
xchg
(bad)
(bad)
push
add
daa
mov
pop
adc
mov
sub
mov
in
mov
mov
out
add
jno
scas
xor
cmp
loope
loope
ds
idiv
and
mov
arpl
xor
add
xchg
daa
mov
sub
out
aad
sbb
out
xchg
xor
rol
xor
pop
daa
sti
jbe
int
outs
push
mov
fstp
fnstcw
sub
xchg
pusha
cmp
pop
push
cmc
out
fsub
push
mov
inc
out
mov
int
jne
scas
shr
mov
xchg
fsub
and
sbb
fucomi
lock
dec
pop
xchg
jl
cdq
mov
scas
js
jg
popf
test
lahf
jmp
es
fs
mov
cli
rcr
lahf
out
rcl
cmc
xchg
ja
pop
dec
idiv
scas
add
jp
ins
loope
icebp
mov
pop
sbb
inc
mov
jmp
sub
mov
rol
sub
lds
dec
sub
in
cdq
in
xchg
into
jl
xlat
inc
scas
add
cdq
inc
inc
loopne
or
and
scas
xor
or
xchg
jbe
mov
cs
je
push
xor
in
and
(bad)
jmp
push
pop
and
or
(bad)
push
cmp
rcl
mov
shl
xchg
shr
mov
push
add
test
mov
out
mov
call
push
mov
cmp
stc
xchg
sbb
xor
and
add
or
pop
pop
cmp
dec
jle
(bad)
fcmovnbe
cmp
sbb
fist
pop
pusha
jno
sbb
ss
sbb
mov
xor
pop
enter
sub
and
movs
out
jnp
push
sbb
retf
lock
cld
and
mov
mov
fadd
mov
pop
shl
jmp
ss
fdivr
in
fwait
enter
jmp
fnstcw
enter
dec
and
ss
xor
jmp
dec
jp
dec
test
fchs
jp
cmp
ret
mov
cmp
lods
out
test
(bad)
outs
pop
cmp
imul
xor
shl
xor
or
push
fld
call
dec
aad
test
add
sbb
ds
or
(bad)
ror
leave
and
fwait
cli
cmps
jp
jg
mov
ds
clc
push
cs
aad
mov
jne
jo
xchg
fiadd
lea
jl
jnp
push
sar
cmp
adc
inc
fmul
out
lds
pop
(bad)
xor
loopne
icebp
repz
add
or
lar
mov
ins
out
scas
and
sbb
movs
int
jb
fnstsw
ret
push
pop
jp
lds
mov
aad
sbb
out
out
enter
mov
pusha
push
dec
icebp
push
inc
shl
xlat
fcomp
xchg
mov
push
xchg
jmp
and
xor
out
fcomi
scas
xchg
dec
jmp
call
out
pop
dec
xchg
inc
jb
stos
dec
xlat
in
pop
mov
or
jmp
xlat
test
push
aas
aam
jl
repz
aaa
mov
cli
out
mov
xchg
or
int3
dec
out
pusha
cli
es
jae
pop
adc
and
scas
pop
adc
mov
push
mov
sbb
icebp
repz
mov
xchg
xor
mov
movs
or
add
repnz
scas
jnp
pop
hlt
dec
pop
pushf
adc
mov
fucomi
(bad)
push
mov
sub
sub
popf
in
jmp
sub
test
dec
jmp
lahf
mov
gs
lahf
mov
(bad)
movs
call
std
icebp
xchg
fcmovnbe
sti
push
and
sbb
outs
nop
push
cwde
add
rcr
inc
lds
popa
mov
pop
add
cmp
movs
nop
jmp
je
adc
dec
or
loopne
sub
cmp
sbb
je
mov
ror
ja
and
sbb
adc
mov
call
out
jmp
mov
mov
into
(bad)
aaa
xchg
push
test
fnstenv
adc
xor
add
mov
lea
retf
and
lahf
and
pop
popa
sbb
rcr
ret
test
mov
cmp
mov
push
mov
es
sub
in
scas
xchg
fidiv
in
fcom
lea
inc
mov
jo
out
imul
jle
xor
(bad)
mov
cmps
mov
fisttp
push
cs
adc
retf
dec
and
out
loopne
xchg
adc
mov
sar
loope
add
das
xor
les
pop
hlt
loopne
movs
xchg
jle
ret
push
push
sub
mov
sub
int
(bad)
arpl
xor
repz
xor
fwait
pcmpeqd
jb
das
mov
mov
loop
sbb
inc
popf
cmp
jnp
inc
sbb
push
xor
(bad)
inc
sbb
les
test
mov
stos
sti
mov
mov
out
mov
mov
mov
sbb
and
in
aad
aam
dec
fsub
idiv
movq
lea
mov
jb
sti
push
sub
mov
dec
push
inc
jl
fstp
pop
ret
fwait
out
stc
lods
or
jbe
push
and
pmaxub
inc
sub
movs
arpl
lds
mov
mov
(bad)
es
sbb
outs
pop
cdq
sbb
enter
xchg
pop
pop
pushf
and
fninit
outs
push
mov
popa
retf
jae
jo
dec
xchg
mov
stos
dec
(bad)
pop
rol
mov
mov
lods
punpckhwd
popf
aad
and
retf
fsub
push
jnp
mov
dec
retf
mov
push
mov
mov
sub
mov
std
mov
xchg
scas
pop
data16
int
or
mov
pop
sar
sub
daa
fmul
push
inc
lods
jp
dec
les
xor
rcl
fild
add
in
mov
mov
xor
xlat
xchg
xlat
and
or
xor
jae
sbb
mov
in
sbb
in
fbstp
cmp
or
sub
call
iret
test
pop
pop
mov
lahf
sub
nop
add
pop
add
hlt
loop
jnp
je
sbb
les
push
xchg
sahf
retf
sub
add
int3
and
xor
add
add
out
mov
fdivr
cmp
popa
out
rcl
(bad)
fild
jge
fs
fld
xor
sbb
mov
mov
cdq
mov
call
call
hlt
mov
imul
sbb
out
cmp
cmc
out
and
xchg
leave
dec
(bad)
loop
mov
push
push
jmp
sbb
mov
(bad)
jnp
mov
mov
sti
mov
repnz
cmc
iret
imul
push
mov
int3
or
push
cmps
jne
in
aad
int3
push
jmp
jae
pop
pop
bound
out
push
mov
mov
hlt
jne
mov
jnp
int3
pop
or
sbb
xchg
ds
or
cmp
and
mov
sbb
add
les
enter
or
fild
call
inc
or
test
dec
xor
out
loop
and
stos
ret
jno
adc
dec
hlt
or
repz
imul
sbb
cmp
fdivr
sub
ds
and
mov
dec
lods
retf
mov
dec
sub
sbb
add
popa
cli
add
push
cli
pop
push
or
fldenv
leave
xor
mov
mov
hlt
push
xor
js
shl
adc
xchg
cmps
cli
xchg
cmps
mov
xor
adc
add
mov
xor
xor
mov
daa
lock
aam
out
push
inc
fsubr
clc
out
cs
push
mov
(bad)
(bad)
int
push
push
in
int
push
adc
jmp
cmp
inc
sub
push
adc
movs
stos
cmp
mov
jg
sbb
fnstsw
jmp
lods
pop
xchg
sbb
jno
inc
jle
jle
mov
fwait
cmp
cmp
rcl
add
nop
jae
cmp
in
rol
sbb
sub
dec
mov
push
mov
lahf
cwde
ror
pusha
xchg
push
push
std
sahf
rcl
or
and
fiadd
jne
arpl
mov
inc
xchg
ror
and
xchg
add
outs
push
sub
inc
call
std
sbb
imul
adc
xor
add
jle
outs
addr16
(bad)
xchg
xchg
mov
fcmovne
pop
cmps
(bad)
ficom
xchg
pusha
pop
push
add
rcr
(bad)
outs
mov
jp
sub
(bad)
(bad)
pop
fsub
aam
lahf
jae
or
or
mov
std
mul
test
pushf
push
pop
sub
(bad)
sysret
and
js
mov
push
pop
cmps
pop
or
shr
inc
cmp
shr
or
mov
outs
add
pusha
sbb
jno
lock
sbb
(bad)
adc
mov
mov
(bad)
adc
sub
mov
movs
movs
jb
dec
push
mov
or
test
jbe
test
add
or
xchg
jg
retf
mov
stos
ret
inc
xor
mov
dec
call
dec
cld
fldlg2
add
or
or
cs
lds
sahf
or
xor
adc
pop
and
jg
int3
not
dec
pushf
or
jecxz
mul
(bad)
fistp
mov
adc
ficomp
xor
cdq
mov
stos
loope
mov
jns
loopne
stos
jb
sbb
nop
mov
sahf
sub
cmp
pop
mov
or
push
add
retf
push
(bad)
jnp
and
inc
xor
adc
mov
pusha
fs
popf
and
(bad)
js
fneni(8087
mov
in
das
adc
int3
jo
mov
js
mul
loopne
jne
fiadd
pushf
lds
cdq
ins
inc
sbb
ss
outs
jecxz
pop
jno
push
daa
out
das
inc
sbb
mov
loope
xchg
call
je
and
retf
aas
arpl
icebp
push
enter
scas
sar
mov
idiv
xor
out
paddw
adc
les
daa
(bad)
sub
xchg
dec
into
inc
retf
sahf
fsubrp
inc
dec
lods
test
shl
push
jmp
mov
jecxz
jmp
retf
jmp
xchg
callw
fstp
(bad)
in
scas
xor
jae
test
pop
add
pop
daa
mov
aas
ds
push
(bad)
pop
pop
pop
leave
mov
scas
or
call
aaa
sbb
(bad)
or
fmul
jae
test
(bad)
pop
jae
repnz
sti
jle
and
dec
add
inc
adc
outs
sub
mov
not
ins
add
ins
test
shl
ret
dec
sahf
inc
pushf
jnp
pop
xor
addr16
add
inc
xchg
push
sti
movs
lds
xchg
mov
loopne
(bad)
pop
sbb
inc
sbb
jg
out
lods
xchg
je
inc
sub
pop
sub
scas
inc
mov
fwait
movs
nop
or
inc
inc
push
sub
enter
imul
loopne
lahf
mov
sbb
test
add
loopne
cmps
jmp
pop
aas
cmp
sti
pop
fmul
sub
sub
mov
repz
add
jno
sbb
sbb
mov
sbb
and
cmp
xor
data16
mov
sti
xor
xchg
jg
mov
retf
into
push
outs
out
ficom
jmp
int3
xchg
shl
jo
rcl
jns
aad
inc
pop
push
bound
mov
sbb
ss
push
stc
scas
mov
sbb
sbb
add
cld
aaa
mov
sub
pop
lds
cmp
or
jle
sbb
in
pusha
fpatan
pusha
imul
in
repnz
daa
or
fsubr
shl
dec
mov
mov
inc
fld
ret
fwait
ret
sbb
mov
push
xlat
int
fwait
or
mov
gs
push
xor
add
xchg
or
cmp
and
cwde
dec
sbb
cmps
sbb
ss
cmp
inc
mov
out
mov
int3
mov
out
std
sti
xchg
sahf
sbb
xor
xchg
cmp
test
cdq
mov
in
mov
push
cmp
fnstsw
xor
ret
sti
clc
out
(bad)
push
mov
mov
test
(bad)
popa
mov
and
scas
xchg
cmp
push
cld
addr16
and
jno
mov
mov
push
mov
dec
mov
mov
pusha
sbb
xchg
xor
add
add
push
cld
sbb
sbb
mov
cwde
int3
sbb
in
or
(bad)
and
les
xchg
movs
sti
cli
add
pop
lock
cli
add
je
dec
and
push
movs
(bad)
les
(bad)
cmp
lahf
imul
lods
dec
in
ja
jns
mov
xor
or
xchg
jns
out
xchg
add
mov
in
rcl
push
(bad)
push
or
sub
inc
and
out
data16
out
push
adc
jle
sbb
mov
adc
movs
stos
xchg
(bad)
jmp
cmps
js
adc
mov
push
cmp
jns
push
mov
dec
ja
ins
push
sbb
mov
jne
loope
aam
jno
xor
out
imul
jecxz
mov
sub
out
push
mov
mov
sbb
xchg
xor
inc
cmp
pop
aam
out
push
out
stc
in
dec
gs
pop
(bad)
mov
add
in
cmp
xor
dec
pop
jle
mov
pusha
call
xchg
jge
xor
adc
cmp
jo
adc
jecxz
xchg
in
(bad)
shl
call
cmp
sti
inc
ja
xchg
dec
sub
mov
xchg
fldpi
into
sti
lock
out
mov
mov
add
cmps
int
add
dec
in
jb
mov
sub
and
or
xchg
test
add
adc
xor
int
(bad)
enter
fadd
add
jbe
bound
ins
adc
loope
dec
cli
mov
in
movs
dec
sbb
(bad)
mov
inc
jle
dec
iret
inc
xor
cli
(bad)
adc
pop
mov
cmc
cmp
pop
and
cmp
cdq
cwde
xchg
mul
jg
xlat
pop
jle
xchg
jae
pop
in
gs
adc
repz
fwait
cmp
dec
arpl
hlt
or
pop
jae
scas
mov
out
pop
mov
cdq
jmp
clc
mov
(bad)
clc
icebp
out
and
dec
in
inc
xchg
aam
and
xor
xlat
xor
push
dec
retf
scas
push
push
in
imul
mov
xchg
iret
fyl2xp1
xchg
cmp
push
lods
ss
ja
shr
or
push
xor
sbb
ja
dec
out
jg
cmp
mov
test
imul
inc
cmp
dec
sbb
cmp
(bad)
repnz
dec
jns
push
div
xchg
dec
sbb
mov
cmps
and
call
into
es
iretw
fcmovnb
test
mov
mov
cmp
jb
pushf
stos
imul
mov
stos
popa
movlps
loop
enter
add
cmp
adc
dec
mov
adc
cmc
fsubr
add
inc
gs
das
and
pop
in
mov
nop
mov
push
mov
push
and
mov
and
xor
call
adc
ret
xchg
jno
add
inc
(bad)
stos
mov
cmovle
pxor
inc
imul
hlt
dec
xor
xchg
push
xchg
iret
imul
cmp
aas
shl
ret
or
das
movs
push
call
and
pusha
push
mov
ror
(bad)
dec
ins
int
loopne
retf
pop
jnp
out
adc
pop
jae
lahf
pop
idiv
inc
cmp
mov
aaa
pop
in
push
jge
imul
fs
mov
js
push
adc
pop
mov
and
mov
icebp
loopne
jae
adc
adc
jnp
add
and
out
(bad)
in
cmp
retf
arpl
push
xchg
dec
std
fs
sahf
xchg
std
call
popa
push
xchg
inc
push
outs
or
inc
stc
jb
jle
cld
push
mov
pop
sub
popa
je
mov
frstor
adc
cmp
rol
dec
jne
jmp
jl
cwde
jg
xchg
sbb
cli
pop
sbb
outs
mov
out
mov
ret
pop
inc
pushf
push
sar
rol
les
sub
test
jne
dec
fstp
jg
mov
shl
sub
push
fist
inc
cwde
cmp
in
daa
or
jb
jl
or
repz
push
adc
fmul
repz
add
or
add
stc
icebp
mov
shr
pop
pop
loopne
add
mov
xor
aaa
sub
jg
out
shr
cmp
mov
fldcw
fistp
xchg
pop
pop
push
(bad)
inc
fcom
jl
add
ret
add
mov
dec
pop
mov
sbb
fild
inc
arpl
sbb
or
out
fs
or
xor
mov
ss
jmp
cmp
gs
inc
shl
or
(bad)
mov
push
enter
pop
cmps
jae
in
pop
mov
ret
aas
test
xchg
leave
and
pop
sub
cmp
inc
jecxz
in
push
dec
jl
das
or
inc
sar
and
mov
fnstsw
fiadd
lock
pop
cmps
push
je
sub
jnp
inc
int3
mov
cdq
mov
imul
pop
sub
xchg
and
call
gs
test
pop
retf
mov
inc
xor
les
jbe
adc
mov
lds
sub
mov
mov
fs
mov
sbb
(bad)
xor
ins
sbb
mov
or
bound
sub
cld
xor
rdpmc
adc
mov
das
pop
push
or
xor
push
and
adc
pop
pop
xchg
(bad)
stc
pushf
cmp
(bad)
or
lahf
(bad)
mov
pop
mov
adc
test
fdivr
push
lds
rcr
leave
jg
scas
add
movs
ret
data16
mov
call
cwde
xchg
jne
adc
test
ins
xchg
ss
nop
push
loop
js
or
pop
xchg
pop
push
sar
ins
aad
ror
jecxz
clc
jns
rep
or
mov
pop
inc
lock
xchg
mov
in
pop
mov
mov
inc
inc
xor
cmc
mov
dec
fnsave
int3
jb
sbb
and
out
int
dec
and
in
pop
xlat
mov
(bad)
push
mov
jmp
pushf
scas
jae
jge
mov
dec
nop
test
and
xchg
popf
add
pop
sti
add
lahf
ins
mov
shr
dec
and
sbb
dec
push
dec
outs
jnp
inc
test
sahf
popf
out
dec
push
adc
add
les
(bad)
xor
adc
and
ret
dec
shl
daa
jg
cli
jle
and
or
inc
in
mov
sub
mul
and
int
jne
lea
cmp
push
xchg
sbb
xchg
repnz
sar
lock
push
imul
push
call
or
mov
es
and
push
adc
inc
sbb
retf
sbb
xor
jo
movs
out
daa
repnz
sub
mov
sar
sub
adc
mov
iret
cmp
mov
aaa
gs
pop
mov
lock
sub
cli
mov
sbb
add
or
mov
mov
outs
aad
les
mov
mov
lahf
inc
xor
add
int3
fdivr
jnp
sub
retf
mov
cmp
add
jbe
pop
push
inc
mov
xchg
adc
dec
in
jb
mov
popa
mov
sti
call
xchg
ret
sar
jae
hlt
dec
or
dec
and
test
inc
jno
sbb
fcmovu
and
repnz
add
in
outs
pop
std
xchg
popf
stc
or
div
add
push
sub
mov
mov
add
sub
add
push
cmp
sbb
fnstcw
inc
jns
push
in
arpl
push
in
sub
rol
pop
imul
cmp
push
repz
pushf
push
sub
shl
aad
xchg
jle
push
mov
push
pop
xor
add
in
push
xchg
fidivr
sub
jp
std
mov
repz
cld
(bad)
les
fs
adc
stc
scas
pop
mov
mov
std
mul
xchg
sub
mov
pop
je
jo
inc
aad
fxch
xor
les
sub
and
xchg
pop
(bad)
popa
ins
or
(bad)
(bad)
test
push
push
push
push
stc
lock
sub
mov
adc
pusha
or
jo
mov
mov
adc
mov
shl
ret
fwait
test
jmp
jge
mov
gs
arpl
loope
mov
mov
mov
or
sub
jbe
inc
cmps
mov
sbb
(bad)
mov
shr
inc
jno
dec
sbb
push
shl
fwait
push
aam
adc
ret
add
je
add
stos
mov
cmp
pusha
loope
test
int3
(bad)
in
sti
push
shl
jns
push
jl
aas
mov
cmp
popf
int
stos
pop
adc
push
aad
hlt
outs
(bad)
into
test
jo
xor
push
mov
jno
leave
clc
in
mov
pusha
push
or
mov
mov
les
test
and
std
rol
int3
dec
mov
call
sbb
xchg
dec
(bad)
fwait
mov
fs
fld
loopne
repnz
jp
call
clc
retf
imul
mov
icebp
pop
jno
scas
pop
cwde
js
leave
aad
jnp
mov
and
add
(bad)
jo
inc
mov
pop
jle
and
add
scas
je
add
fsub
cld
mov
sahf
imul
outs
add
nop
les
sub
mov
cmp
mov
ss
xchg
scas
sbb
(bad)
jle
scas
outs
mov
std
adc
js
adc
mov
xor
xor
loopne
inc
jl
not
push
pusha
iret
inc
cwde
call
out
jae
shr
jp
dec
sti
mov
and
adc
xchg
cmc
call
popa
fsubr
leave
xchg
mov
mov
or
mov
pop
cwde
jno
add
(bad)
retf
repnz
or
mov
jbe
inc
mov
inc
cmp
sbb
fnsave
push
cmp
inc
pop
sub
sub
mov
out
add
or
add
dec
or
cmc
cmp
push
or
push
call
push
xchg
mov
pop
call
cs
push
pop
jl
stos
xor
push
mov
fst
daa
push
mov
pop
mov
dec
jbe
sub
div
xchg
and
xchg
adc
mov
inc
xchg
mov
test
lahf
mov
popf
scas
cld
mov
ss
mov
mov
inc
sbb
fucomi
loope
div
cmps
enter
(bad)
xor
mov
pusha
mov
or
jmp
and
pop
pop
popa
fmul
jo
sub
push
loope
push
adc
xchg
cmp
xchg
sbb
xor
out
jmp
push
inc
mul
icebp
mov
cdq
out
push
xor
pop
movs
xchg
sub
pop
xchg
sub
stc
shl
mov
cmp
jmp
xor
dec
fsubrp
cwde
imul
xchg
pop
sbb
(bad)
sbb
sbb
or
call
jl
jmp
or
sbb
pop
hlt
and
inc
xor
dec
lods
xor
and
mov
xchg
neg
mov
(bad)
(bad)
(bad)
movs
push
mov
loopne
jg
cmps
sbb
shl
inc
(bad)
nop
jg
pop
dec
lods
mov
add
inc
mov
movs
shl
movs
int
mov
cmp
fadd
jno
adc
mov
inc
xchg
rol
test
out
mov
xchg
(bad)
ret
sar
sbb
adc
adc
dec
dec
mov
and
sbb
sahf
lahf
mov
push
add
pop
into
adc
push
push
sbb
xchg
inc
aad
mov
jmp
rcl
out
loopne
ins
sub
jbe
push
out
push
loop
pushf
inc
(bad)
cmp
jmp
and
jmp
leave
or
dec
fs
fs
xchg
push
pusha
add
aad
mov
sbb
in
test
push
or
push
mov
test
lds
outs
std
loopne
inc
mov
ret
adc
mov
mov
xchg
(bad)
mov
add
into
xor
xchg
mov
int
rcl
retf
inc
mov
adc
dec
xchg
sbb
inc
rcr
ret
cli
retf
mov
or
cmp
retf
jge
call
clc
jmp
cmp
xchg
arpl
and
ins
push
mov
cmp
out
popa
xor
test
movs
and
add
cmc
inc
xor
cli
add
sbb
xor
jmp
(bad)
and
gs
ror
dec
adc
push
jmp
xor
out
(bad)
dec
ds
add
cmps
dec
pop
cmp
in
adc
out
jne
outs
shr
scas
add
leave
fwait
or
sbb
(bad)
out
in
frstor
popa
cmp
fisttp
pusha
mov
stc
adc
xor
aad
in
outs
popf
push
xlat
inc
mov
jo
cs
cwde
idiv
pop
push
or
repnz
mov
(bad)
mov
mov
push
and
lock
imul
mov
mov
mov
sub
addr16
push
add
out
scas
and
enter
sub
enter
adc
mov
add
pop
adc
adc
dec
popf
add
sub
or
dec
outs
cmp
xor
(bad)
in
in
and
int
mov
pop
arpl
or
add
(bad)
cld
pop
cld
mov
mov
sbb
jbe
mov
adc
jg
fistp
out
lahf
movq
test
cmp
inc
aas
movs
inc
call
cld
push
ins
push
aas
imul
fdiv
and
pop
jp
mov
xchg
les
jmp
xchg
xchg
dec
(bad)
scas
jns
sbb
out
sbb
pop
push
inc
xchg
cmp
pushf
adc
out
mov
mov
aad
cdq
xchg
cs
icebp
and
push
clc
call
lea
jecxz
shr
jge
mov
rcl
shr
icebp
lahf
loope
in
popf
jge
mov
pop
cmp
mov
cmp
add
dec
mov
xor
inc
xchg
dec
ret
in
mov
lods
in
sbb
fsubr
xor
pop
dec
out
mov
imul
stos
es
shr
dec
jecxz
fdiv
add
leave
fs
jge
fwait
(bad)
pusha
and
xchg
xchg
and
scas
mov
or
test
fucomi
cmp
sub
fist
dec
push
adc
ror
xor
daa
movs
aad
xchg
(bad)
jmp
icebp
pop
pop
mov
jp
loopne
les
sub
bound
stos
sar
std
jl
rol
data16
sub
jo
popa
into
gs
cli
adc
fbld
push
ror
aam
(bad)
sub
in
jp
inc
pop
pop
pop
add
ror
ds
movs
cmp
pop
pop
int
scas
and
xor
test
test
xchg
outs
std
dec
sahf
nop
ret
stos
daa
jmp
les
fcom
xor
ret
mov
pushaw
js
or
cmp
test
in
and
inc
fwait
adc
mov
xchg
test
inc
mov
or
cmp
rcl
inc
pop
(bad)
or
fistp
ins
push
pushf
aam
jmp
mov
dec
push
repz
push
inc
sahf
pop
in
mov
sub
push
push
pop
xor
jl
push
(bad)
mov
sahf
sub
fild
imul
sub
cdq
inc
fld
mov
stos
sti
mov
loopne
dec
retf
jp
icebp
adc
(bad)
je
pop
das
cmc
xchg
add
lock
outs
xchg
and
xor
in
xor
pop
inc
pop
call
pop
xlat
sbb
and
int
test
pop
shl
es
out
mov
xchg
pusha
cmp
(bad)
addr16
dec
and
lock
movs
clc
nop
loope
rcr
jae
jecxz
in
mov
push
iret
jmp
and
mov
es
cmps
xchg
add
ins
inc
shr
add
sub
or
int3
jo
out
mov
or
lea
jne
mov
xor
jg
loop
daa
xchg
xlat
enter
jg
cvtpi2ps
inc
sub
inc
fmul
cmp
stos
int
jmp
fnstsw
dec
frstor
mov
sub
fsubr
add
sub
dec
enter
test
popa
scas
inc
test
nop
loopne
lea
push
(bad)
cs
dec
sysexit
je
push
das
sbb
leave
sub
aaa
pop
stc
fisttp
push
pop
inc
adc
pusha
xchg
lds
pop
inc
cld
mov
ss
std
pop
lock
sar
popf
aas
loope
jecxz
jmp
mov
or
xchg
popf
ror
jbe
ror
nop
(bad)
mov
loop
cmp
mov
or
sbb
loop
outs
adc
inc
arpl
out
fistp
dec
push
mov
cmps
outs
jmp
sub
stc
into
mov
lahf
and
out
cmp
or
idiv
imul
cmp
arpl
popf
mov
inc
dec
push
fwait
test
lds
dec
enter
(bad)
shr
jnp
bswap
sub
push
ret
dec
xchg
push
bound
cwde
push
push
out
scas
ja
add
arpl
cmp
loopne
mov
(bad)
xchg
int3
add
jge
add
daa
fs
xchg
loope
xchg
jmp
add
pop
and
data16
pushf
add
test
pop
pop
dec
or
gs
push
ins
and
cmp
cmps
pushf
xor
loopne
inc
push
lahf
add
mov
add
mov
mov
or
cmp
mov
pop
in
mov
sub
mov
pusha
dec
and
fadd
(bad)
nop
xor
and
cmp
ror
inc
rol
lock
in
callw
es
dec
sub
outs
int
xchg
push
imul
push
stos
sbb
ss
jle
adc
add
push
popf
aas
popa
xchg
jbe
mov
sbb
ror
pop
es
pop
and
adc
mov
jne
or
add
fadd
shl
cmp
sbb
jg
imul
mov
dec
out
movs
cmp
mov
aam
jp
xor
loop
or
xchg
(bad)
cwde
shr
aad
adc
pop
push
loopne
je
sbb
cmp
pop
sbb
sub
scas
xor
arpl
shr
shl
jmp
sub
or
dec
or
adc
mov
scas
sub
inc
xor
out
xchg
and
dec
jmp
rep
mov
nop
or
cmp
cmp
dec
mov
mov
mov
jmp
jmp
rcr
fadd
cmp
cwde
cmp
rol
int
popa
push
out
data16
xor
repnz
xchg
push
mov
aaa
jecxz
cmp
xchg
inc
pop
pop
std
and
mov
repz
sahf
outs
dec
cmps
push
dec
adc
in
retf
imul
into
mov
mov
ror
aas
(bad)
arpl
psrad
shr
xlat
icebp
cmp
push
int
rcr
xchg
data16
xchg
sbb
inc
popf
jg
jge
ins
cmp
pop
out
imul
les
jmp
stc
sub
neg
cmps
js
push
sbb
enter
js
adc
call
ffree
mov
mov
loop
std
pop
ficomp
aaa
and
push
or
mov
das
mov
popa
shr
(bad)
repz
sub
add
adc
mov
inc
adc
(bad)
test
dec
aam
pop
mov
iret
popf
pushf
xor
mov
jge
jbe
pop
call
sbb
scas
xor
xchg
fs
xor
adc
cmp
fs
cld
pop
cmp
call
dec
sar
jp
test
mov
adc
xor
push
imul
xor
and
mov
adc
dec
jb
je
ror
and
mov
jbe
add
aad
jg
xchg
sub
sub
and
ja
dec
xor
and
retf
ss
pop
mul
cmp
and
addr16
call
int
inc
pop
or
sub
and
arpl
(bad)
mov
add
inc
inc
out
push
cmp
xchg
nop
pop
push
loope
imul
enter
push
movs
retf
ret
int
push
add
jae
into
retw
xor
sbb
sub
mov
sbb
jmp
xor
sbb
fidivr
push
pop
or
(bad)
rcr
cli
xchg
rcl
inc
pop
sub
sbb
ror
push
icebp
jb
xchg
aad
sti
(bad)
pop
mov
jae
push
sub
xlat
pop
neg
hlt
pop
icebp
adc
es
mov
iret
frndint
movs
stc
push
sub
retf
ficomp
xor
hlt
mov
hlt
ins
mov
push
fwait
jmp
movs
(bad)
jle
out
stc
in
sbb
inc
jge
sti
inc
push
and
clc
push
pop
dec
test
les
lock
std
stos
pop
mov
test
test
mov
cmc
mov
mov
fild
scas
lea
xchg
cs
sub
int
popf
cs
inc
and
xchg
inc
mov
push
sbb
mov
dec
enter
(bad)
jp
popf
fnstenv
sbb
sub
cmp
xchg
out
loopne
lea
inc
sub
sub
aas
test
mov
test
pop
jns
(bad)
xor
add
test
enter
xchg
xor
test
ror
push
in
mov
inc
addr16
xor
jo
xlat
pop
and
sub
sti
pushf
js
fimul
adc
cmp
movs
dec
sub
cmc
jp
hlt
cmp
pop
ins
push
mov
jae
loope
adc
pop
lds
pop
js
cmp
sbb
int
or
inc
jg
push
in
(bad)
int3
mov
fst
inc
iret
int
retf
xor
and
popf
xor
sbb
pop
test
sbb
jae
adc
mov
enter
add
push
sub
sub
scas
adc
or
push
loop
mov
imul
dec
mov
xchg
fwait
cmp
pop
sbb
mov
out
int
push
adc
movs
into
add
repz
xchg
mov
mov
add
xor
cmc
mov
ror
sti
mov
int
xchg
or
ins
(bad)
cs
xchg
ficomp
cmp
push
popa
enter
jae
xchg
mov
mov
ret
clc
out
push
sbb
fcom
inc
or
scas
mov
inc
mov
test
add
lods
or
dec
inc
call
loopne
xor
sar
(bad)
movs
and
mov
nop
nop
jecxz
call
stos
cmp
out
sbb
mov
xor
or
retf
xchg
mov
xor
xor
cmp
mov
popa
popf
add
cwde
push
dec
push
push
xchg
xor
sub
add
dec
movs
mov
int
and
out
mov
or
mov
pop
add
and
push
mov
es
in
push
fisub
push
pop
xchg
dec
push
popa
in
std
sbb
rcl
std
enter
sub
(bad)
sub
addr16
out
inc
fs
nop
stos
dec
sti
inc
pop
lahf
shr
bswap
inc
jle
shl
cmps
or
add
inc
sub
int3
adc
add
pop
pop
aas
xor
out
es
out
hlt
push
cdq
dec
ds
pop
dec
cmps
pusha
movs
sub
mov
push
jecxz
(bad)
loop
movs
je
repnz
mov
data16
lea
jb
out
sub
push
cmp
je
jmp
ja
pop
push
mov
dec
sub
jb
mov
movs
xchg
inc
mov
in
pop
inc
ficom
mov
jmp
outs
dec
mov
pop
jbe
inc
shl
push
fild
or
dec
(bad)
pop
xchg
sub
arpl
shr
sbb
push
outs
dec
out
cmps
cmp
dec
imul
clc
mov
es
pop
xor
sub
test
xor
fcom
stos
repz
mov
or
mov
dec
sub
ret
call
fsubr
dec
push
in
sub
inc
push
mov
int3
jp
inc
cmp
mov
xor
jg
es
aas
cmp
loopne
dec
shl
int3
mov
pop
add
xor
fsub
dec
loopne
ret
mov
push
out
lock
pop
push
sbb
lea
adc
test
ja
stc
sahf
mov
add
lock
and
sbb
jle
popa
cli
ja
cmp
add
add
lods
cmc
nop
mov
sti
inc
mov
std
jecxz
js
jl
fcmovnbe
sub
xor
fstp
push
push
mov
mov
sub
jge
cmp
loopne
dec
in
mov
xchg
pop
scas
adc
mov
pop
stos
push
ret
adc
mov
dec
hlt
xor
jle
push
push
sub
fucomp
adc
dec
movs
shr
dec
inc
push
push
sub
ds
repz
mov
push
fiadd
stc
mov
(bad)
shr
movs
fistp
or
jns
add
jbe
sbb
mov
ins
push
sub
pusha
clc
push
call
gs
and
call
or
es
fstp
js
xchg
(bad)
jmp
mov
mov
add
add
je
out
and
dec
or
ffreep
mov
cmps
push
add
mov
add
jo
test
out
or
or
stc
xchg
ins
or
mov
std
inc
mov
cmp
cli
iret
inc
out
mov
sahf
popf
cmp
mov
dec
cmps
das
lea
iret
jle
dec
ss
add
nop
dec
(bad)
imul
cld
fdivp
data16
dec
out
shr
mov
stc
push
push
adc
xlat
push
mov
xor
mov
mov
fwait
jl
push
sub
addr16
cwde
cli
jl
xor
ins
and
jns
adc
pop
enter
out
cmps
jp
iret
test
jne
cmp
mov
mov
dec
loopne
dec
stos
mov
movs
(bad)
sub
out
fwait
xor
call
pop
fs
mov
jg
mov
arpl
jno
push
ins
sbb
xor
sti
jbe
das
hlt
cmp
pop
jno
push
cmp
mov
push
or
test
jnp
sub
ins
fdivr
scas
repz
pop
out
test
leave
test
inc
out
xchg
mov
(bad)
sub
pushf
retf
test
push
or
jno
div
mov
(bad)
xchg
ror
fadd
sbb
jno
xchg
pop
or
ins
in
gs
add
mov
xor
pop
js
dec
aas
fidivr
test
cmps
nop
mov
jle
outs
xor
add
push
jl
daa
enter
sbb
out
xchg
dec
fistp
out
cmp
pop
cld
scas
sbb
inc
mov
div
xchg
imul
adc
and
hlt
mov
inc
fdiv
mov
jle
cdq
inc
icebp
adc
adc
sub
and
adc
std
adc
push
ins
add
retf
add
movs
xor
clc
aad
pop
fneni(8087
(bad)
mov
repnz
fmul
jmp
jnp
lods
cmp
(bad)
mov
pop
(bad)
jmp
imul
dec
stos
xchg
int3
pop
mov
sbb
pushf
movs
mov
mov
iret
adc
daa
pop
(bad)
jb
push
sbb
and
div
and
fdiv
sbb
js
jbe
rcl
or
mov
mov
scas
or
sbb
movs
out
outs
daa
mov
inc
hlt
inc
adc
pop
mov
mov
cmp
nop
jge
fild
and
mulps
mov
mov
push
or
push
ins
or
(bad)
mov
push
cmp
add
sub
xchg
add
push
pop
out
aas
push
cmps
outs
mov
gs
cmc
lods
dec
pop
outs
add
mov
cmc
add
cmc
(bad)
ficom
mov
pop
dec
cwde
outs
xor
push
(bad)
call
icebp
jns
enter
mov
sahf
sti
ja
push
fbstp
cmps
cmp
xchg
pop
pop
or
mov
mov
imul
out
out
mov
xchg
cld
fild
pop
mov
jb
out
sub
jns
inc
aad
movs
and
push
js
jl
jbe
adc
mov
pop
sahf
retf
pop
push
imul
and
sahf
inc
xor
push
mov
adc
adc
(bad)
mov
rcl
ss
fst
retf
dec
and
js
and
jo
inc
push
scas
mov
xchg
xchg
leave
outs
or
and
pop
or
ja
stos
dec
fmul
lahf
inc
mov
ret
ret
mov
dec
cmc
push
xchg
adc
mov
add
mov
loope
pop
inc
inc
sub
sub
call
pop
inc
mov
js
mov
push
mov
arpl
cld
adc
xor
sar
aam
and
fidivr
outs
sahf
fsubr
cmps
fcomp
out
dec
jmp
sub
shl
popa
cmp
push
sahf
fs
pop
fnsave
cmp
mov
cdq
cmps
dec
das
(bad)
jp
bound
jmp
repz
sbb
jecxz
imul
mov
mov
(bad)
mov
mov
mov
dec
cmc
call
(bad)
int3
and
adc
mov
shr
out
fs
adc
mov
loop
(bad)
cmp
inc
movs
xor
pop
int3
stc
push
cmove
lods
add
xor
jne
and
dec
cmp
sub
sbb
adc
dec
xchg
xor
in
mov
int3
out
iret
mov
sub
mov
sub
out
push
sbb
or
xor
imul
mov
jl
mov
and
jae
pop
into
unpckhps
xchg
inc
push
or
outs
fisubr
pop
into
in
mov
arpl
jo
mov
cmp
mov
loop
inc
int3
cld
cmp
or
push
rcl
repnz
pop
jecxz
mov
pushf
inc
mov
gs
aam
das
mov
sar
adc
call
pop
loop
dec
xchg
xor
push
sub
mov
cdq
aas
push
aam
loop
and
and
pop
out
mov
xchg
adc
icebp
pop
mov
push
imul
dec
jl
push
shr
call
pop
adc
cmps
sahf
stos
test
inc
jae
mov
or
in
jnp
loopne
jl
(bad)
arpl
xor
test
in
mov
ret
movs
ins
mov
or
sbb
into
fadd
aam
data16
fsubr
mov
leave
mov
xor
and
imul
dec
xor
xchg
aas
inc
sub
loope
and
or
cmp
xor
call
(bad)
mov
out
shl
dec
xchg
pop
repnz
cli
in
cld
mov
pop
inc
or
mov
shr
jae
lea
rcl
(bad)
loope
fstp
mov
int3
dec
jb
mov
popa
pop
dec
cmps
fcmovnb
xchg
jne
sbb
les
mov
aam
cld
mov
frstor
inc
mov
fld
jmp
in
ins
fnstenv
xchg
mov
jnp
sub
pop
inc
jle
mov
pop
add
xchg
mov
shl
popa
test
pushf
xor
mov
repnz
mov
or
mov
shl
mov
in
pop
cmp
stc
adc
mov
arpl
int
sub
pop
push
jb
or
add
test
mov
psubsw
push
lds
sub
aam
in
mov
jge
push
lds
xchg
into
xor
mov
fwait
stc
adc
stc
lods
mov
adc
add
in
push
mov
cs
aas
jno
ss
push
push
imul
scas
push
cdq
add
nop
leave
das
fcom
sbb
pushf
sbb
lds
inc
cmps
imul
mov
leave
bound
sbb
sub
cli
jle
lea
mov
push
call
pop
mov
push
mov
sbb
push
repz
xor
lock
jnp
xchg
in
xor
shr
jmp
push
sbb
call
push
retf
cmp
inc
push
scas
stos
fadd
int
sbb
fwait
int
retf
arpl
jne
inc
push
push
rcr
or
fist
daa
push
push
mov
jmp
sti
bound
jmp
dec
inc
mov
int
dec
in
iret
sbb
stc
ror
mov
jge
mov
in
adc
sbb
xor
xor
(bad)
jle
mov
dec
push
inc
mov
fcomp
mov
or
ficom
xchg
xchg
dec
jp
xchg
sbb
jo
cs
call
xchg
push
sub
out
xchg
cmp
fbld
push
push
addr16
data16
jl
ror
stc
inc
inc
jp
jp
add
and
mov
jne
shl
int
test
pop
ret
int3
mov
add
add
(bad)
fcomp
cmps
out
arpl
in
fistp
sbb
(bad)
adc
in
mov
adc
bound
sti
jnp
loop
sub
xor
jp
scas
aam
adc
loop
pop
not
cld
push
xchg
out
mul
add
jg
test
sub
adc
adc
xchg
jmp
out
jmp
sub
jl
xchg
mov
inc
add
jo
(bad)
ja
jp
jmp
or
and
jb
jns
(bad)
and
sahf
cwde
repz
shr
xchg
(bad)
lock
dec
jne
enter
stos
xor
es
movs
aaa
mov
ror
and
daa
sub
sub
cmps
out
setae
outs
push
xchg
dec
lock
jb
outs
hlt
xlat
push
mov
es
(bad)
popa
es
pop
sbb
xor
int3
pop
jno
loopne
mov
or
loop
test
add
sub
mov
inc
call
lahf
and
mov
inc
ins
inc
(bad)
mul
adc
mov
mov
aaa
cld
scas
in
add
pop
xchg
lds
push
sbb
or
pop
ret
xor
div
jno
push
pop
mov
call
or
fsubr
mov
or
arpl
adc
mov
shl
mov
adc
js
test
stos
rcl
push
(bad)
fadd
or
xchg
push
loopne
sub
push
mov
sbb
xchg
push
call
outs
shl
cld
add
mov
dec
push
jle
mov
in
add
mov
mov
dec
scas
out
adc
xchg
sbb
sub
sub
adc
pextrw
push
pop
daa
or
xchg
jmp
ss
call
mov
and
jg
cld
xchg
push
dec
add
cmp
xchg
lods
jnp
xchg
ds
mov
std
xchg
dec
xor
inc
jl
fwait
adc
scas
pusha
aam
ds
rcl
adc
int3
bound
cmps
sbb
push
imul
cmp
movs
mov
adc
rcl
popf
pop
jl
out
(bad)
add
xor
iret
dec
cdq
dec
push
pop
mov
xchg
jns
mov
scas
jge
jae
pop
mov
add
push
xchg
lods
and
xchg
xchg
pushf
clc
dec
call
lods
mov
xchg
aaa
retf
test
movs
jle
inc
pop
mov
scas
mov
or
mov
add
inc
add
pusha
cmps
test
(bad)
fwait
shl
mov
add
lahf
xor
(bad)
lds
and
(bad)
fstp
outs
mov
scas
ss
inc
aam
adc
fwait
xchg
rol
cmps
mov
and
repnz
popf
mov
xchg
out
adc
mov
out
mov
or
cmp
inc
hlt
xchg
xor
inc
pop
or
pop
das
test
mov
adc
sti
in
repz
shl
inc
aaa
mov
push
ficomp
std
jb
sbb
dec
data16
adc
call
push
cmp
ja
rcr
push
std
(bad)
jl
xchg
inc
popf
loope
lahf
outs
cmp
add
cwde
retf
aaa
in
(bad)
out
pop
jne
inc
retf
mov
sub
push
and
jg
int3
test
test
jl
dec
out
sub
xchg
scas
loop
push
inc
outs
adc
lods
sub
ins
xchg
mov
pop
aaa
stc
test
mov
call
inc
out
push
xor
mov
cmp
pop
or
ins
jmp
je
retf
ror
inc
neg
add
adc
repnz
jmp
xor
push
bound
iret
push
mov
and
inc
xchg
aam
mov
mov
xchg
mov
je
adc
inc
sahf
stos
(bad)
push
inc
inc
add
test
in
outs
cmps
test
xchg
jnp
in
repz
test
mov
mov
dec
fdivr
push
sbb
cmp
mov
movs
inc
daa
in
clc
dec
dec
add
sub
imul
jge
xor
cmps
imul
sar
jecxz
cmp
push
jle
mov
stos
imul
xlat
out
and
mov
sub
mov
jo
clc
push
lods
xchg
hlt
rcl
sbb
shl
enter
push
mov
jo
(bad)
push
cmc
and
inc
lock
push
or
out
push
int3
test
push
nop
add
into
jne
inc
mov
adc
ds
mov
cli
add
int3
add
mov
daa
movs
adc
inc
pushf
cli
pop
inc
call
cmps
movs
fisub
jnp
ja
shl
or
mov
pop
inc
sbb
retf
push
cmp
je
movs
adc
outs
loopne
neg
loopne
mov
sbb
dec
(bad)
aad
push
(bad)
ja
repnz
and
popf
jge
xchg
sar
bound
jnp
pop
dec
mov
inc
mov
jne
mov
hlt
push
add
lds
iret
lods
adc
call
xor
dec
sub
xchg
sub
mov
dec
mov
shr
push
call
jl
call
xchg
aas
cli
int
push
mov
into
sbb
jae
div
out
loop
mov
cmp
inc
popf
adc
dec
cmp
retf
adc
xchg
add
sahf
cmps
sub
popa
into
imul
xchg
and
mov
les
fld
call
dec
fild
pop
fsub
fsub
jmp
inc
xchg
sbb
jg
pushf
cmp
xor
jo
sahf
retf
mov
in
sbb
rcl
mov
addr16
leave
or
pop
add
and
push
test
jmp
mov
jp
lea
cmps
mov
push
push
mov
pop
jmp
test
pusha
clc
pop
or
jg
sub
mov
jmp
inc
cmc
fst
ja
jne
sbb
js
jb
jecxz
mov
retf
mov
sahf
xchg
aam
fcmovnbe
push
(bad)
(bad)
mov
sbb
neg
(bad)
daa
(bad)
mov
or
add
mov
fdivr
push
repnz
loopne
pop
icebp
not
cmp
call
xor
or
cmp
inc
inc
adc
movsx
cmp
test
loope
ret
(bad)
xchg
xchg
out
popa
rol
push
push
xchg
clc
mov
or
jmp
cli
repnz
jo
or
push
dec
hlt
sbb
add
retf
call
ins
push
jbe
xchg
in
or
call
mov
pop
(bad)
retf
ins
fs
adc
addr16
sub
in
outs
mov
jmp
call
mov
ins
mov
xlat
or
add
adc
mov
fisubr
dec
jnp
cmp
jp
pop
and
pushf
jl
scas
lock
in
sub
or
lods
cmp
push
mov
mov
dec
js
add
push
sub
iret
bound
aad
cmp
clc
mov
scas
jae
rcr
add
outs
(bad)
fist
push
xchg
dec
fdivr
jecxz
bound
or
std
retf
rcr
rcr
addr16
push
xchg
cmp
cmp
mov
push
mov
shr
cmps
pop
les
adc
pop
int
dec
jecxz
or
dec
jecxz
hlt
xlat
scas
fidiv
adc
mov
or
ss
jnp
loop
movs
mov
xchg
iret
mov
imul
push
in
mov
jns
xchg
fmul
aas
mov
enter
jnp
add
sbb
cdq
sbb
cmp
in
sbb
test
xchg
out
sub
pop
hlt
cmps
add
mov
or
inc
aam
ret
add
mov
xchg
aam
into
mov
push
repz
sbb
std
xor
jmp
sub
sub
les
scas
jg
push
and
pop
movs
cmp
jnp
inc
jle
xor
pop
xchg
cli
cmp
cmp
aad
xor
adc
rcr
dec
mov
out
fdivp
dec
sub
aad
mov
cmp
push
add
pop
and
add
jno
out
jge
dec
adc
pusha
fistp
and
pushf
inc
or
pop
loopne
xor
dec
retf
inc
aad
xor
xchg
jle
or
or
inc
iret
jbe
je
pushf
rcl
xchg
call
cmp
push
adc
test
data16
add
dec
movs
xchg
imul
dec
add
xchg
adc
jl
xchg
arpl
loope
inc
lea
pop
xor
sbb
pop
sahf
cmp
jne
push
addr16
xor
sub
mov
sub
ja
ficom
ret
jp
outs
pop
or
mov
cmps
or
fcmovne
mov
mov
fs
adc
test
cld
inc
std
mov
inc
mov
jne
mov
xor
pop
aaa
and
mov
shr
cli
xlat
mov
jo
sar
pop
ss
inc
add
ins
dec
pop
or
dec
pop
adc
stos
cs
push
adc
addr16
aaa
sbb
inc
jl
inc
cmp
pop
and
cld
stos
ffree
or
cmp
mov
xchg
and
jno
mov
dec
out
icebp
pop
lods
mov
ins
in
jmp
gs
sar
ja
xchg
test
push
or
mov
jl
into
mov
ds
sbb
dec
mov
daa
add
pop
push
es
pop
dec
fs
sub
(bad)
xchg
push
ins
ficom
push
mov
cli
xlat
cmp
xchg
pop
push
fs
aad
mov
lods
js
mov
inc
xchg
(bad)
cmp
jne
(bad)
icebp
mov
pop
or
setne
aas
out
lods
stos
and
outs
push
mov
fwait
sti
pop
sti
add
sti
fld
adc
imul
xor
fmulp
rcl
adc
push
lds
adc
in
cmp
aaa
jbe
cmps
pop
leave
(bad)
pop
popf
mov
dec
gs
fsubp
iret
mov
test
inc
stos
inc
sbb
sbb
ret
cs
pop
inc
add
aas
push
pusha
jl
aad
or
or
aas
sub
jbe
mov
clc
jp
mov
mov
imul
mov
cs
inc
mov
and
mov
mov
or
(bad)
dec
into
hlt
sub
push
adc
pop
pop
daa
pop
data16
mov
std
out
or
push
rcr
imul
jns
add
xchg
mov
mov
pop
push
std
inc
push
dec
xchg
shl
ja
or
hlt
stc
mov
mov
ins
movs
test
pop
out
xchg
aad
fnstenv
pop
cmp
sbb
shl
push
loop
cmc
xchg
in
add
jp
inc
inc
xor
dec
cdq
xor
clc
cmp
aaa
inc
fadd
movs
mov
aas
aas
(bad)
and
sub
in
pop
mov
dec
mov
mov
cwde
mov
fwait
test
mov
rol
mov
xlat
jmp
lea
mov
inc
dec
mov
xor
and
retf
loop
dec
icebp
test
push
ror
out
scas
and
rol
mov
inc
sbb
dec
and
outs
int
push
jecxz
xor
mov
loop
jbe
sub
lods
add
mov
retf
popf
xchg
adc
(bad)
in
xchg
(bad)
sbb
and
or
inc
sub
mov
mov
pop
in
adc
mov
push
or
shr
inc
retf
jle
add
mov
pop
inc
push
imul
int
add
lock
scas
xor
bound
outs
pop
aam
sbb
mov
jle
in
js
je
ds
cld
mov
imul
xchg
into
sub
mov
aas
sub
mov
cmps
je
sub
fisub
xchg
rcl
mov
adc
cmovle
test
push
outs
cs
add
dec
adc
sub
xchg
rol
shr
fs
test
shl
push
xchg
xor
test
shl
xchg
das
cs
add
sub
popw
retf
into
(bad)
cs
xor
push
inc
dec
jp
fldenv
dec
xor
aas
fisub
mov
mov
rol
ror
out
aaa
push
stc
das
addr16
in
push
out
aam
inc
stc
jmp
cmp
lahf
cmp
stos
out
dec
cmc
cmp
xchg
dec
jne
inc
mov
(bad)
loop
sbb
xor
dec
ja
ja
push
pop
sbb
leave
add
ret
js
cmps
mov
pop
cld
retf
jnp
das
add
(bad)
out
push
xchg
push
mov
add
xchg
fcomp
xlat
xor
inc
popf
(bad)
es
std
sub
cli
(bad)
xor
pop
mov
retf
sub
xlat
ja
lea
arpl
push
xchg
ja
mov
adc
ss
pop
add
inc
ror
sub
test
xchg
cmps
sub
gs
test
xor
sbb
xor
xor
aaa
int3
jecxz
cmps
sbb
fdivr
xchg
sbb
push
call
popa
enter
repz
inc
(bad)
stos
fbld
icebp
or
mov
push
jmp
inc
ja
inc
loop
das
lahf
sub
loopne
(bad)
cmp
or
stc
or
and
sub
jbe
pop
push
mov
sub
jecxz
pop
sbb
js
xchg
jmp
pop
or
call
loope
dec
xchg
sbb
ss
lea
push
stos
inc
pop
stos
sub
sbb
pop
mov
xchg
stos
jno
jge
cld
lods
mov
ret
inc
in
mov
(bad)
ja
sub
sbb
lock
and
jne
and
dec
push
fucomi
rol
inc
loope
xor
pop
jo
jae
pop
or
pop
xor
mov
(bad)
pop
jns
idiv
(bad)
xchg
lods
adc
addr16
cmp
mov
jecxz
mov
sbb
or
xor
das
sahf
mov
add
stos
pop
ja
pop
lods
mov
xor
sbb
or
outs
adc
or
push
cwde
dec
inc
in
clc
or
xchg
xor
sub
and
lods
aaa
dec
imul
loop
sbb
mov
and
mov
cmp
mov
mov
mov
xor
inc
mov
dec
addr16
shl
addr16
(bad)
pushf
mov
jg
(bad)
cmp
lea
sub
rol
xchg
arpl
cmp
ret
outs
in
into
add
ret
add
pushf
and
push
sbb
fadd
cmp
fadd
xor
xor
adc
inc
xor
loopne
stos
data16
push
adc
sub
push
pushf
jae
leave
adc
in
push
ins
push
jne
int3
mov
out
jecxz
jmp
imul
lock
out
adc
cmp
jbe
adc
xor
je
cdq
mov
xor
mov
cld
fdiv
popa
inc
mov
jbe
cmps
push
inc
mov
pop
mov
out
and
mov
inc
mov
cwde
dec
fsubr
xchg
dec
jp
hlt
test
jne
(bad)
xor
mov
stos
mov
int
jge
sbb
pop
idiv
adc
lahf
mov
stos
outs
ins
push
fadd
aad
adc
mov
movs
dec
clc
mov
scas
push
(bad)
fdiv
aas
push
rep
scas
jp
sbb
(bad)
mov
lods
ret
popf
or
mov
push
cmp
arpl
ins
sbb
jne
sub
xchg
lods
mov
imul
repz
xor
int3
pop
xor
xlat
mov
pop
xchg
fsub
cli
ret
adc
test
and
call
ss
xor
and
(bad)
cmp
dec
mul
lock
cmp
cmps
xor
or
jb
js
adc
mov
adc
pop
scas
int
test
in
adc
fidivr
hlt
daa
mov
xchg
jp
adc
mov
push
inc
mov
cmps
outs
mov
push
scas
jae
mov
aaa
hlt
stos
mov
bound
jb
mov
inc
jge
and
add
int
sub
out
sahf
in
(bad)
lods
mov
mov
dec
in
mov
int3
and
jecxz
push
int3
adc
loop
bound
imul
mov
push
inc
lods
xor
in
mov
cs
mov
cmps
push
outs
retf
jno
lahf
loope
jl
mov
pop
test
push
mov
push
mov
cli
jne
rep
mov
jecxz
inc
icebp
loop
out
mov
mov
mov
dec
hlt
mov
dec
or
xchg
retf
sbb
and
pop
lock
sub
popf
push
int3
and
sub
loop
dec
add
jl
jbe
stos
pushf
test
jb
mov
and
and
retf
pop
(bad)
les
into
cli
jae
imul
pop
and
mov
adc
mov
pop
stc
int3
sub
aam
test
mov
movs
mov
or
ret
mov
sbb
stos
cmp
jae
push
mov
not
cmp
xchg
push
jnp
or
sub
mov
jnp
aad
or
rol
ss
inc
js
gs
call
mov
inc
psraw
mov
xchg
scas
nop
pop
cmp
rcl
mov
cmc
aaa
mov
dec
xchg
std
leave
mov
mov
fs
aad
js
mov
jno
iret
fimul
xchg
mov
out
fst
and
and
inc
mov
mov
or
inc
test
out
cmp
inc
cs
mov
nop
aad
hlt
ret
hlt
ret
cli
add
xchg
daa
and
out
cmp
addr16
gs
int3
fwait
adc
sbb
xchg
jne
pop
mov
imul
push
sbb
jle
sub
jbe
cmps
test
mov
neg
sar
jge
cs
repnz
mov
jo
xor
daa
(bad)
int3
pop
mov
stc
jbe
ds
mov
data16
cmp
pop
rcl
pop
bnd
jecxz
pusha
stc
js
mov
mov
icebp
add
dec
repz
xor
and
repnz
jno
cmc
pusha
inc
imul
dec
mov
inc
arpl
push
lea
jle
loopne
inc
arpl
mov
inc
mov
mov
dec
addr16
retf
jg
aam
addr16
fcom
bound
or
hlt
dec
dec
inc
and
lds
es
pop
adc
add
test
fwait
test
hlt
cmc
sti
push
mov
jb
xchg
xor
cmp
loop
cmp
xor
inc
sbb
sub
mov
rcr
mov
std
(bad)
jge
push
inc
xor
sub
retf
and
es
std
xor
or
adc
inc
pop
imul
pop
or
movs
stc
stos
js
jp
pop
pop
lahf
aas
shl
add
repz
mov
loope
pop
shl
scas
xchg
mov
or
imul
inc
xchg
retf
xor
fsub
pop
test
sub
jno
add
mov
sar
imul
xor
adc
out
les
cmp
ret
adc
mov
add
adc
xor
arpl
aas
mov
xor
or
pushf
fcomp
jno
sahf
int3
mov
jg
movs
inc
xchg
xchg
scas
das
rcr
std
jae
cwde
loope
xchg
mov
xor
dec
jp
call
sub
pusha
jg
mov
sbb
inc
hlt
xor
retf
retf
data16
lock
jg
mov
mov
int3
sub
std
inc
sbb
outs
jle
pop
loopne
push
mov
pop
mov
xchg
iret
pop
cli
imul
mov
mov
sub
in
mov
sbb
add
lds
inc
loop
sti
sub
(bad)
cmc
adc
xchg
pop
ss
out
dec
push
stos
xor
rcr
ret
in
int
sub
push
jecxz
xchg
mov
in
xchg
cmp
push
mov
or
dec
jb
adc
ss
mov
rcr
lahf
adc
mov
scas
jge
test
in
or
imul
cmc
rcl
inc
retf
(bad)
sbb
(bad)
sub
sbb
push
lds
in
inc
and
mov
mov
mov
xchg
push
adc
xchg
dec
stos
imul
es
test
inc
mov
add
sub
movs
pop
jae
mov
pop
sbb
aaa
out
and
(bad)
adc
mov
lds
fnsave
call
mov
pop
jns
or
loope
ror
jmp
imul
add
dec
out
pop
jle
sbb
scas
int3
mov
mov
mov
dec
arpl
jecxz
inc
mov
jae
loopne
mov
or
sub
outs
daa
dec
mov
pushf
out
std
gs
daa
lea
push
sbb
cmc
popa
aam
xor
movs
xchg
out
ror
nop
adc
aam
sbb
mov
daa
ret
inc
add
sub
xor
push
mov
push
ss
jp
sub
push
test
mov
rcl
ret
sbb
pop
inc
aam
mov
retf
cmp
mov
ins
mov
or
sub
lods
(bad)
sub
push
dec
cmp
cmp
pop
aad
push
push
xchg
repz
and
int
sub
int
mov
adc
pop
ffreep
jle
shr
scas
pop
fucom
add
dec
sub
lods
aaa
retf
mov
xor
mov
sbb
in
dec
mov
push
shl
xchg
push
imul
cld
jmp
sub
std
sahf
pop
aam
jle
rcl
lock
addr16
loopne
jge
int
push
cs
push
jle
stc
stos
adc
clc
adc
sub
ficomp
fcomp
movs
mov
(bad)
retf
mov
xchg
(bad)
hlt
mov
cmp
mov
cmp
sub
sbb
jl
(bad)
sar
xchg
mov
or
call
call
mov
mov
std
dec
aad
popf
adc
arpl
and
jbe
fisttp
cmp
test
imul
ds
or
sar
push
(bad)
std
push
ja
enter
je
enter
daa
push
bound
call
push
je
cmp
out
repnz
es
sub
dec
lahf
inc
repnz
clc
push
lahf
push
in
nop
dec
add
xchg
lea
adc
and
add
scas
ret
fwait
mov
dec
iret
in
mul
sbb
mov
mov
xlat
push
pop
jae
lods
xor
fwait
add
retf
fldcw
adc
or
pop
and
jmp
outs
mov
pop
loopne
mov
sbb
clc
xor
push
or
fisttp
sub
adc
mov
std
mov
adc
and
rcr
je
fwait
in
leave
movs
lds
inc
jmp
pop
frstor
add
popa
cwde
clc
xchg
mov
in
sub
sub
pop
mov
mov
cmc
aam
xlat
mov
mov
lahf
pop
add
stc
sbb
retf
shl
xor
pop
pop
inc
lahf
sub
mov
and
jge
out
mov
or
adc
test
sbb
push
fild
out
mov
inc
lock
mov
sub
(bad)
sbb
(bad)
cli
and
mov
retf
or
pminsw
xchg
sbb
std
mov
mov
lods
gs
imul
dec
das
pop
and
add
in
add
loop
adc
dec
adc
jno
shl
test
or
sbb
call
xchg
cwde
test
cmps
push
mov
or
retf
mov
div
mov
rcr
in
sub
pop
data16
sub
inc
sub
xchg
pushf
imul
ret
push
test
movs
fld
sbb
movs
mov
aam
(bad)
ins
and
aam
adc
cs
cs
adc
push
addr16
or
cmc
cmp
dec
mov
fst
pop
xor
lahf
sti
pop
aam
repnz
jb
arpl
imul
int
xor
cld
sub
pop
xor
mov
jmp
sub
mov
mov
pop
mov
pop
hlt
imul
rol
xchg
call
fdivr
add
dec
mov
sar
(bad)
jle
jne
mov
sti
out
xor
xchg
jg
push
nop
rcr
(bad)
xchg
adc
push
push
int3
cwde
call
add
outs
cmc
das
pop
in
mov
pop
ins
gs
retf
push
push
ss
fisub
jge
push
leave
add
cmps
in
loope
into
or
retf
(bad)
mov
fwait
sub
fdivr
cwde
add
fnstsw
mov
add
mov
pop
scas
and
sub
jo
pop
add
mov
or
pop
and
test
test
sub
shr
adc
repnz
(bad)
and
cmp
popf
loopne
int
arpl
imul
inc
ret
bound
(bad)
xchg
enter
sbb
push
inc
push
inc
dec
cmp
xchg
xchg
fwait
rcr
sub
lock
jge
test
test
retf
push
jmp
pop
push
add
cmc
sbb
in
or
mov
lea
inc
mov
rcr
xor
popa
in
sahf
rcr
jno
or
push
fxch
xor
xor
rcl
and
inc
dec
mov
repz
popf
jnp
jo
cli
adc
cmp
xchg
ja
pop
adc
adc
cmps
jmp
adc
pop
cld
jb
daa
fcom
xchg
jbe
or
mov
mov
adc
fisttp
lods
ret
mov
pop
mov
movs
cmp
fimul
retf
test
out
inc
xchg
dec
inc
sub
aad
inc
mov
jg
inc
ds
mov
mov
mov
pop
call
lock
pop
mov
jne
scas
mov
aas
sahf
jle
mov
ss
sbb
xchg
out
jnp
int
pop
mov
xchg
push
cdq
es
outs
pop
cld
popw
jg
hlt
dec
imul
xchg
jmp
or
rcl
and
cs
int3
mov
ja
hlt
jo
enter
inc
(bad)
push
test
dec
loopne
iret
mov
push
push
(bad)
cs
cmp
xlat
jo
sub
mov
scas
loopne
sub
mov
jmp
mov
and
xor
nop
int
jle
les
xchg
mov
or
ret
lods
add
dec
pop
ins
cmps
and
hlt
arpl
loop
daa
cmp
or
ins
mov
inc
int3
mov
rcl
xchg
dec
lods
jecxz
(bad)
call
xchg
popf
icebp
cwde
adc
nop
ret
fstp
(bad)
mov
sar
xlat
push
sub
sti
adc
loopne
push
dec
dec
xlat
or
test
xor
xor
addr16
jle
sub
(bad)
sub
inc
in
pusha
rol
fld
mov
int
rcr
sbb
and
pop
ins
rcl
idiv
movs
int3
lds
jne
int
inc
xchg
inc
mov
jne
push
shl
jle
daa
lea
and
or
ret
imul
mov
cmp
das
clc
fcomp
clc
shl
push
ins
pop
pop
dec
pushw
movs
data16
hlt
ins
or
in
rcl
into
aas
mov
push
sub
(bad)
jecxz
inc
popf
test
aam
sti
hlt
mov
mov
jmp
daa
movs
into
sub
push
icebp
addr16
mov
(bad)
call
pop
pop
jo
jmp
sub
hlt
push
mov
(bad)
jmp
shl
push
(bad)
pop
mov
movs
jne
pop
sbb
ss
outs
nop
push
dec
add
mov
call
mov
hlt
pop
fild
mov
mov
mov
pop
sbb
fdivr
pop
movs
jns
fldcw
scas
add
xor
mov
cs
lahf
stc
aaa
movs
cmp
jno
push
loopne
pop
ss
mov
push
add
inc
add
nop
dec
pop
cmps
sahf
xchg
mov
and
sbb
fisub
and
push
jmp
cmp
mov
sub
push
jmp
mov
movs
and
fcomp
pop
mov
dec
mov
(bad)
pop
pusha
out
jmp
cwde
push
enter
jp
fnstsw
out
cdq
loop
ins
fwait
stos
mov
push
data16
iret
(bad)
ss
add
jp
in
or
xor
imul
les
mov
data16
cmp
repnz
sbb
inc
sub
inc
pop
cmps
loopne
dec
dec
les
(bad)
mov
or
cmps
pop
xor
sahf
inc
mov
add
out
sbb
sbb
sahf
test
ja
cli
add
arpl
cdq
or
sbb
cld
es
cmps
pop
shl
mov
leave
sbb
test
mov
xchg
retf
jl
bound
adc
pop
es
cmps
(bad)
cmp
int
dec
push
int3
shl
pop
inc
jecxz
pushf
lea
jmp
xor
sbb
rcr
sbb
fnstsw
and
fisub
push
sbb
xchg
cmp
das
pop
nop
jbe
jb
inc
out
popa
retf
out
sbb
int
cli
xor
cdq
mov
xchg
scas
adc
inc
jbe
cli
push
outs
mov
ss
ret
jae
push
inc
(bad)
in
std
cmp
dec
retf
lahf
sub
imul
outs
push
arpl
xchg
fs
mov
retf
outs
mov
sar
out
xchg
pushf
xchg
sti
push
xchg
repz
mov
hlt
jno
mov
dec
pop
cmp
imul
mov
jae
mov
xor
jb
and
in
aam
dec
push
imul
inc
cmp
test
xor
(bad)
jb
pop
or
cld
push
or
popf
jae
imul
inc
adc
inc
mov
std
pop
sub
dec
xchg
ins
out
out
repz
mov
shl
call
gs
ja
retf
xchg
sub
or
repnz
pop
push
icebp
scas
add
push
fsub
bound
sbb
pop
cmp
cmp
jbe
jl
fsubr
pop
in
mov
or
pushf
mov
rcl
fwait
mov
iret
cmp
jnp
jnp
jl
mov
ins
movs
xchg
stc
mov
dec
jno
jl
mov
push
push
dec
cs
adc
push
sub
iret
push
jl
dec
mov
arpl
xor
lds
xchg
fs
jns
push
or
inc
xchg
sub
lahf
lea
push
xchg
sub
mov
test
jnp
mov
jae
(bad)
xchg
fst
mov
dec
jae
xchg
xchg
and
sub
shl
dec
ja
stos
fst
test
loopne
iret
ins
aas
sbb
xor
sbb
mov
xchg
aas
aas
bound
sbb
xor
jne
mov
mov
or
and
mov
jb
inc
mov
mov
pushf
cmp
in
xchg
and
cli
daa
mov
ins
int3
sbb
cwde
cmp
adc
outs
add
or
call
es
sub
and
lods
pop
jl
cmps
jne
jmp
mov
jge
fs
pop
adc
sub
jno
pop
sbb
sbb
xchg
push
jno
fisub
xchg
mov
sbb
sbb
cmp
inc
test
push
push
mov
mov
add
rcr
retf
sbb
jmp
add
mov
xchg
mov
jle
pusha
xor
jp
frstor
retf
add
cmps
mov
jl
data16
aad
das
add
aaa
jp
gs
bound
mov
test
push
(bad)
mov
test
adc
mov
out
or
popf
add
fmul
push
pop
in
out
dec
mul
mov
inc
push
push
cmp
add
inc
mov
sub
sbb
test
pop
popf
out
imul
arpl
pop
lock
fs
out
mov
adc
sub
hlt
cmp
ss
stc
and
dec
(bad)
aam
jge
or
sub
push
sar
outs
jle
push
push
call
push
push
and
lahf
add
sti
pop
push
mov
into
int3
pop
cli
inc
push
or
daa
pop
jnp
aam
les
jge
arpl
call
push
adc
mov
push
je
test
xchg
in
dec
and
mov
aad
(bad)
aam
xor
jne
shr
in
push
shr
mov
jb
mov
lahf
pop
xor
dec
jmp
out
aad
sbb
lods
and
add
out
xlat
test
gs
std
xchg
pop
cmp
das
movs
lea
pop
shr
pushf
mov
cmp
pop
aam
call
mov
imul
sbb
sahf
inc
call
push
mov
outs
mov
jns
pop
imul
push
aam
mov
(bad)
(bad)
call
push
inc
fcom
popa
fldcw
gs
retw
sbb
leave
mov
lods
or
xchg
sbb
retf
xchg
scas
aad
push
sub
das
(bad)
je
mov
imul
mov
addr16
lahf
and
xor
inc
xor
(bad)
nop
imul
or
mov
cwde
mov
sti
lods
mov
cmp
mov
xchg
pop
xor
sti
mov
fs
fwait
inc
inc
xchg
xchg
pop
inc
pusha
pop
add
retf
arpl
rol
int3
rcr
daa
imul
loop
adc
mov
mov
mov
mov
pop
rcl
fisubr
mov
(bad)
mov
pop
mov
iret
mov
sbb
xchg
xchg
push
add
inc
pop
or
jo
cmps
pop
movs
jb
cmp
mov
inc
adc
fiadd
dec
add
mov
fist
mov
push
push
mov
xchg
xor
dec
dec
in
push
jo
push
push
dec
mov
mov
fcmovb
sbb
ret
out
push
mov
stc
push
test
(bad)
pop
repnz
dec
adc
xor
dec
in
(bad)
dec
(bad)
dec
push
mov
dec
popf
xchg
adc
adc
pop
and
fsub
pop
and
fidiv
dec
std
and
neg
(bad)
fs
test
stos
dec
enter
retf
jp
add
mov
pusha
and
jmp
sbb
jle
jle
push
jmp
adc
sub
add
inc
adc
mov
not
cmc
jae
sub
pop
out
sub
cld
dec
inc
cmp
sub
pop
sub
cs
push
aam
jmp
(bad)
add
add
pop
adc
xor
sbb
mov
dec
aas
nop
sub
sbb
nop
mov
movs
mov
pop
mov
scas
jno
push
cmps
mov
clc
sub
and
fcmove
stc
jp
daa
adc
push
inc
push
into
lock
mov
nop
mov
jp
jmp
cmp
fnsave
sbb
ja
cmp
or
pop
out
nop
shr
ins
cwde
or
jb
sbb
sbb
mov
(bad)
movlps
cmp
inc
cmc
inc
inc
daa
jnp
jge
adc
inc
popa
fisub
ret
rcr
inc
inc
dec
je
dec
aam
xlat
or
adc
daa
inc
adc
add
ds
or
adc
mov
or
add
shl
inc
int3
(bad)
or
pop
test
pop
mov
mov
mov
nop
jl
cmp
or
push
and
clc
sub
fwait
push
sbb
daa
jg
(bad)
pop
mov
cdq
push
aas
xor
inc
int
mov
pop
out
mov
sbb
push
xor
push
pop
cmp
rol
mov
hlt
and
(bad)
push
imul
dec
sbb
cmp
add
in
sub
sub
cs
in
in
jns
jae
cmp
daa
call
out
(bad)
cwde
mov
dec
fisttp
pop
dec
popa
pop
jo
cli
lods
or
push
dec
cmc
xchg
sub
dec
inc
arpl
mov
pop
mov
sbb
mov
cmp
pop
jle
std
and
pop
jbe
lock
not
xor
test
pushf
pop
mov
mov
sbb
hlt
lea
pushfw
fadd
movs
ret
ret
(bad)
mov
xor
in
cld
dec
jae
push
jmp
out
(bad)
aad
mov
aad
mov
sbb
jmp
imul
mov
movs
loope
sbb
pop
sbb
repz
aam
push
jl
xchg
sahf
jmp
scas
retf
(bad)
fldcw
or
pop
pop
scas
test
popf
fidivr
shl
jle
mov
scas
fcom
cmp
lea
(bad)
mov
pushf
aaa
call
xchg
mov
mov
jae
dec
jo
dec
xlat
test
dec
fcomp
inc
repnz
cmp
rcl
ins
jge
mov
ss
pop
clc
pop
inc
xlat
jl
adc
imul
pop
inc
lahf
hlt
xlat
or
jmp
jb
and
xchg
outs
cdq
out
sahf
rol
aam
mov
mov
daa
popa
push
jnp
ror
in
mov
mov
or
fisttp
sub
sbb
mov
(bad)
ja
cld
push
cmp
sub
mov
sub
jecxz
scas
mov
sahf
cmp
les
mov
push
sti
jb
pop
test
lock
pop
or
or
into
pop
mov
or
adc
(bad)
retf
inc
rol
mov
scas
mov
lds
enter
fwait
icebp
mov
mov
xor
sbb
inc
sar
jmp
push
lods
js
arpl
pop
cmc
and
lods
das
popf
adc
mov
dec
mov
and
mov
xchg
inc
push
mov
stc
loope
into
pop
fimul
xchg
out
and
and
dec
neg
xchg
fwait
push
jmp
popa
lods
and
aad
add
idiv
mov
inc
ins
sbb
out
or
jp
mov
dec
sub
add
pushf
adc
or
(bad)
out
xchg
push
(bad)
xchg
xchg
inc
xchg
xchg
sub
and
dec
mov
sub
mov
jno
imul
data16
inc
mov
ret
cli
enter
mov
arpl
jmp
inc
loope
pop
mov
rcl
pop
jp
dec
dec
pop
add
add
scas
sub
or
fwait
shl
int
pop
sub
repz
mov
pushf
cmp
xor
test
mov
int
sahf
leave
fwait
idiv
push
(bad)
push
mov
cs
pop
cdq
loope
jmp
ret
cmps
into
fldenv
or
sbb
repz
xor
aad
rcl
lea
add
mov
add
call
popf
les
(bad)
jmp
and
jae
mov
xchg
push
cs
inc
mov
iret
mov
mov
in
and
mov
std
stos
jnp
sub
sbb
inc
pusha
popfw
data16
je
and
inc
repz
sbb
adc
jmp
dec
imul
xor
xchg
xlat
cwde
sub
test
xchg
dec
jae
repnz
sbb
mov
in
gs
retf
addr16
(bad)
mov
cmps
jmp
and
sub
add
mov
cmp
xchg
pusha
(bad)
pop
mov
xor
jae
push
pop
jmp
push
cdq
push
movs
ror
in
rcl
add
fdivr
add
call
neg
jae
and
dec
mov
xchg
xor
int
xlat
push
adc
xchg
mov
ret
add
and
or
icebp
aaa
dec
pop
movs
int
push
cmps
push
mov
pop
les
xchg
fsubrp
jno
data16
loopne
call
test
imul
jecxz
jmp
or
or
call
xchg
aaa
and
lods
mov
push
test
pop
jnp
and
popf
sahf
(bad)
push
popa
or
sub
out
movs
cdq
enter
mov
sub
ror
or
imul
mov
push
aam
sub
sbb
test
cmps
mov
inc
icebp
and
je
enter
imul
jb
sub
or
std
lds
ins
push
dec
dec
cmp
adc
sar
push
aad
stc
xchg
sub
(bad)
gs
inc
test
int3
test
pop
adc
jge
out
retf
push
les
add
sbb
and
js
sub
adc
out
xor
jmp
pop
popa
cmp
ss
mov
sbb
mov
cmps
lods
mov
fst
cdq
nop
xchg
loop
pop
cmps
(bad)
icebp
push
jp
xchg
push
and
clc
(bad)
push
and
pop
loopne
mov
inc
pop
(bad)
mov
xchg
(bad)
and
jno
int
mov
outs
xor
and
push
pop
sub
mov
ss
adc
adc
stc
fnstcw
loopne
(bad)
sub
loop
inc
clc
push
aaa
cmp
pop
mov
jle
pop
mov
mov
call
inc
sbb
popf
xlat
sbb
rcr
xchg
push
adc
sbb
jmp
(bad)
fwait
daa
imul
xor
addr16
shl
pop
or
mov
mov
xchg
in
les
repnz
xchg
adc
pop
mov
mov
sub
out
xor
and
(bad)
stos
pop
mov
in
in
add
fwait
cli
pop
out
pushf
add
add
mov
jmp
je
in
in
call
jae
cmc
jae
dec
pop
add
xor
xor
arpl
dec
lea
lods
xor
inc
lods
dec
xor
sub
int3
ins
mul
in
out
rcr
jb
(bad)
adc
stc
shl
and
cmp
xor
or
ins
scas
cmp
pop
sar
test
sub
addr16
sar
mov
dec
es
neg
mov
popa
mov
inc
cs
sub
xor
add
pop
pop
pop
or
push
sub
ja
je
add
pop
outs
sub
cmp
xchg
mov
and
lahf
or
call
fstp
mov
loope
(bad)
jnp
lods
cmp
bound
ds
sub
or
sbb
inc
mov
jl
cmp
pop
or
cmp
adc
scas
push
aaa
cmp
pusha
scas
ins
mov
or
push
jmp
mov
dec
dec
jl
out
push
xor
cmp
dec
mov
rcr
hlt
pop
jns
popa
cmp
push
shl
and
or
(bad)
inc
jb
push
imul
xor
or
add
enter
xchg
mov
sub
lds
cdq
xchg
inc
or
cli
repnz
adc
push
xadd
test
and
je
ficomp
or
or
adc
fs
in
cmp
mov
mov
stc
mov
push
push
sub
pop
bound
and
loope
inc
adc
movs
sbb
sbb
jae
sub
lods
push
jp
sub
mov
je
and
pop
js
ret
rcl
add
inc
fs
sbb
mov
outs
jno
push
lahf
dec
out
or
sub
xchg
xor
or
xor
stos
fwait
inc
test
fimul
(bad)
inc
pusha
or
mov
and
arpl
xor
or
or
xor
mov
iret
cmc
movs
mov
je
addr16
push
mov
cmp
cmp
sti
out
and
xor
push
es
mov
mov
aad
jge
adc
sub
pop
enter
cmps
inc
pop
adc
icebp
in
jg
pusha
enter
push
idiv
fcomp
fsubr
movsx
cmc
adc
xor
fucomip
mov
add
sub
movs
loopne
sbb
mov
cs
mov
ror
dec
xchg
add
and
mov
sbb
test
pop
clc
pop
aad
neg
stos
and
mov
push
idiv
hlt
lods
into
push
cmc
aad
mov
inc
push
not
pushf
lods
repz
mov
loop
or
cmp
scas
sub
pop
hlt
or
add
add
shl
mov
add
cld
mov
add
pop
(bad)
add
cli
push
inc
xchg
loopne
add
ins
jne
mov
cmp
cmp
ficomp
mov
cli
pop
jno
cmps
xor
jbe
addr16
push
xor
sbb
adc
jle
add
icebp
jae
pop
lods
ds
cmp
push
cmp
int3
add
or
inc
sub
adc
mov
pop
repnz
lea
or
aas
mov
jmp
cmp
nop
sbb
rol
lock
test
mov
sbb
or
fcmovnb
xlat
stc
jbe
jmp
and
repnz
fmul
test
pop
scas
cmp
dec
bnd
imul
ficomp
sub
and
daa
stc
jle
lods
inc
cmp
sub
xchg
(bad)
push
nop
addr16
pop
fisttp
call
pop
into
xor
mov
sbb
add
test
ja
daa
imul
les
test
call
and
cmp
sub
sub
jl
adc
pop
xchg
aaa
push
aam
mov
(bad)
sbb
xchg
jb
xchg
addr16
ret
jp
idiv
push
dec
out
mov
(bad)
pop
cs
xor
into
mov
add
pop
in
dec
pop
int
ja
fisub
add
data16
adc
cwde
inc
pop
fdiv
fstp
add
icebp
fcomi
je
push
cmp
retf
lods
outs
popf
xor
push
mov
pop
cmc
out
cmp
rep
fs
(bad)
loope
repz
mov
jmp
and
stos
and
and
loop
(bad)
out
jae
in
push
es
shrd
or
cwde
shl
outs
js
mov
not
jnp
jg
pop
sbb
clc
ins
cmc
lahf
out
fdivp
retf
mov
push
js
outs
fdivr
dec
mov
std
jg
mov
mov
sahf
pop
clc
mov
int
mov
ret
xor
aas
aaa
jg
stos
fadd
cmc
add
push
mov
mov
pop
push
pusha
inc
jle
push
jmp
cmp
adc
gs
pop
out
lock
das
int3
push
adc
or
cmp
sub
fwait
mov
or
je
test
cs
into
repz
stc
dec
retf
mov
fst
test
jns
shl
inc
sub
mov
push
fstp
sahf
clc
test
or
fldenv
dec
mov
push
pop
push
(bad)
dec
inc
addr16
outs
aas
daa
mov
jae
xor
es
sub
sbb
fs
sbb
adc
mov
mov
xor
sbb
xor
jae
push
(bad)
cmp
aaa
cld
in
or
cmp
push
mov
xchg
sbb
ret
retf
(bad)
sbb
loop
fiadd
cmp
mov
push
jmp
cli
addr16
inc
dec
rcr
leave
jnp
mov
or
cmp
sbb
dec
xor
dec
out
sahf
rcl
iret
inc
(bad)
xor
aas
stos
push
mov
fnstenv
adc
(bad)
xchg
rcl
retf
in
jge
xchg
out
into
aas
test
cmc
dec
ss
sub
xchg
cmps
or
addr16
fcomip
xchg
jo
jne
(bad)
clc
sub
dec
stc
mov
sub
adc
cmps
jmp
inc
stos
inc
je
push
popa
xor
and
ficom
sbb
ds
shr
arpl
mov
add
sbb
pop
cmps
cmp
cmp
cmp
out
xor
mov
xor
add
or
jecxz
or
mov
mov
jo
xchg
cmc
adc
call
xlat
jns
mov
outs
add
cmp
mov
nop
leave
and
movs
sub
div
jmp
shufps
mov
call
(bad)
inc
out
cld
ret
xchg
lds
shr
aaa
cmps
std
xor
inc
leave
mov
or
daa
sub
lock
sub
in
cdq
mov
push
jle
test
jbe
cmp
scas
cmp
lea
(bad)
jp
je
aad
push
stos
inc
sbb
aad
loopne
pop
into
jns
mov
call
div
push
fisub
sub
les
push
xchg
fmul
push
cmp
outs
push
xchg
imul
js
aas
cdq
mov
mov
loopne
adc
sub
and
ins
xchg
imul
shl
pop
repz
dec
xor
mov
dec
mov
dec
mov
loop
sbb
jb
js
push
(bad)
repz
jnp
cmp
sub
dec
stc
jge
push
pop
dec
push
loopne
mov
cmps
je
loopne
ds
add
cmp
sub
pop
mov
pop
retf
mov
stos
mov
adc
inc
test
int
les
mov
pop
jl
mov
add
pop
lock
xchg
xlat
(bad)
xor
in
pop
iret
mov
ins
add
out
add
rcl
jg
int3
push
dec
ss
jae
ucomiss
push
dec
or
cmp
out
or
movs
inc
inc
and
jmp
cmp
mov
push
xor
mov
xchg
xchg
movs
aaa
shl
inc
sbb
scas
sbb
mov
sbb
out
in
jp
shr
ficom
dec
and
xchg
retf
mov
loopne
je
add
or
repz
movs
mov
sub
dec
jmp
xchg
(bad)
sahf
add
fdivr
int3
sub
inc
jo
outs
mov
sub
mov
jmp
adc
xchg
div
pop
sahf
cwde
fdivr
nop
dec
push
xchg
jns
mov
gs
and
dec
inc
sbb
les
popa
mov
int
add
dec
adc
jo
loop
(bad)
mov
(bad)
rcl
sub
call
xor
mov
mov
arpl
xchg
stc
or
mov
or
scas
push
sbb
mov
adc
fsubp
mov
pop
popf
stc
addr16
push
pop
arpl
pop
fcomp
pop
dec
test
jmp
and
cmp
or
cld
adc
loop
pop
cmp
imul
add
push
(bad)
test
jmp
cmps
and
xor
mov
or
push
jmp
ins
outs
mov
out
pop
scas
arpl
retf
and
ret
fstp
sbb
push
dec
sti
loope
(bad)
popa
mov
ins
into
push
push
and
mov
mov
imul
sub
xchg
add
pop
jl
in
jmp
outs
jbe
aam
jno
xchg
std
in
jb
dec
mov
repnz
mov
xchg
sub
mov
loope
and
mov
push
cmp
adc
sbb
pushf
sahf
cmp
mov
dec
xchg
scas
imul
jp
mov
sbb
push
jne
adc
out
push
jle
dec
mov
ficomp
lahf
out
xchg
mov
dec
xor
and
imul
cmc
inc
fisubr
push
xor
(bad)
xor
push
xchg
enter
mov
repz
and
push
sub
push
rol
fdiv
sub
pop
and
bound
cs
leave
sti
xor
icebp
cmps
cmp
gs
fwait
or
fsubr
idiv
es
outs
les
sub
push
loop
ins
aam
out
dec
lahf
(bad)
pusha
test
lods
sbb
sub
shl
mov
ss
pushf
int3
test
cmp
je
sbb
es
repnz
dec
in
or
mov
aad
ins
mov
push
xchg
cmps
or
bound
and
mov
lods
(bad)
cli
scas
bound
pop
popa
stc
push
jne
(bad)
(bad)
sub
in
mov
test
mov
mov
punpckhdq
rol
pusha
(bad)
in
in
cmp
addr16
mov
push
aam
inc
cmp
imul
adc
cmp
das
or
fwait
nop
mov
cmp
jmp
int
pop
jne
mov
push
in
outs
jmp
xchg
cmps
fisttp
fld
push
stc
stos
sub
pushf
push
enter
mov
jle
push
bound
xor
pop
idiv
bound
lods
sbb
gs
mov
clc
adc
mov
aad
hlt
lahf
adc
mov
dec
inc
lea
mov
mov
inc
mov
lods
aas
jp
and
cmps
sbb
in
cmp
xchg
mov
mov
dec
pushfw
sbb
pop
fld
add
out
(bad)
int3
push
push
mov
cmp
mov
cmp
jle
sub
jns
fisttp
adc
(bad)
in
cmc
hlt
mov
movs
scas
mov
inc
push
pusha
add
pushf
movs
scas
dec
bound
jo
xchg
pop
pop
mov
stos
add
jae
icebp
and
or
pop
push
ins
mov
jae
es
and
push
xor
pop
sub
cli
jge
icebp
(bad)
js
or
aam
test
fsubr
sbb
adc
mov
mov
aaa
pusha
mov
test
cs
aam
xor
aam
sub
not
dec
dec
retf
sbb
(bad)
aam
xchg
dec
call
aam
push
pop
sbb
jnp
adc
js
xor
cdq
(bad)
shl
fst
inc
mov
loope
jecxz
and
lock
and
xchg
(bad)
pop
pop
imul
jg
out
nop
in
into
cmp
pop
loop
mov
outs
mov
leave
(bad)
mov
fwait
add
push
cld
stos
(bad)
stos
mov
dec
push
jns
mov
fsubr
and
mov
inc
je
shl
add
sbb
mov
xchg
add
cmp
retf
enter
cmps
jg
mov
sub
clc
out
stos
mov
sar
lods
dec
or
lods
sub
inc
rcr
jbe
leave
ret
xchg
jbe
mov
mov
cmp
xor
movs
mov
jbe
icebp
xor
xchg
xor
jae
scas
mov
mov
add
iret
sbb
xchg
sub
push
retf
mov
das
aad
mov
out
sub
dec
cmp
cmp
test
mov
into
sub
xor
pop
fidiv
fbstp
repnz
arpl
in
fsub
lds
fnstcw
and
into
or
push
or
(bad)
ror
mov
es
xchg
out
out
std
jle
int3
loopne
cld
clc
loope
bound
xor
(bad)
push
jmp
idiv
inc
mov
ret
in
adc
jp
cld
cmp
jae
xor
xor
and
dec
cmovbe
idiv
xchg
jecxz
(bad)
loopne
push
inc
pop
xchg
(bad)
jae
sti
dec
test
xchg
movs
scas
xchg
pop
int3
dec
inc
mov
xchg
pop
or
hlt
popf
into
push
xchg
out
sbb
imul
sub
lds
cmp
push
popa
mov
jae
pop
or
movs
and
jne
ja
movs
xor
xchg
ror
pop
scas
fwait
mov
dec
clc
outs
test
aaa
pop
pop
jb
scas
movs
jns
cdq
retf
xchg
scas
and
lods
mov
xor
xchg
pop
jp
repnz
adc
pop
rcl
not
mov
cmp
xchg
cmp
fdivr
push
xchg
aad
arpl
push
fldl2e
push
mov
in
jp
mov
jns
mov
pushf
jnp
rcl
sbb
addr16
jl
jns
(bad)
and
in
xchg
add
not
in
jle
aas
stos
outs
lock
(bad)
push
dec
fwait
dec
cmc
mov
cmp
int
in
jecxz
push
mov
jns
sbb
aam
fwait
pop
sbb
xor
xor
inc
fldenv
sbb
inc
das
jbe
scas
jecxz
jbe
adc
ss
adc
in
ss
pusha
stos
bound
adc
int
and
loope
mov
cdq
fisttp
push
jns
mov
pop
int
sbb
imul
sbb
sub
fdivr
ret
xchg
cmp
jle
sub
adc
sub
lea
(bad)
fstp
mov
lods
and
mov
dec
and
pop
aam
sub
mov
mov
sbb
push
inc
cmp
ret
movs
xchg
mov
push
cmp
jae
ret
push
neg
aaa
jmp
cli
in
mov
or
cdq
adc
push
lds
retf
jecxz
pop
mov
loop
mov
aad
shl
push
pop
out
inc
lock
xor
out
sbb
inc
fstp
movaps
push
ins
xchg
arpl
sbb
shr
out
xchg
mov
push
sub
adc
sub
and
(bad)
cli
sub
arpl
push
stos
ss
mov
sbb
imul
outs
and
sub
cmp
or
mov
fwait
push
sar
or
xor
out
clc
jb
mov
pop
pop
in
cmp
aam
das
stos
fnstenv
dec
ret
repz
jne
ficom
mov
jnp
pop
stos
sbb
mov
sub
inc
ds
call
dec
dec
data16
dec
loop
mov
js
call
cmovae
loope
mov
aaa
mov
rcr
push
dec
js
dec
push
out
ja
call
and
aam
or
je
popf
dec
add
pusha
pop
test
pop
sub
xchg
adc
mov
add
cmp
movs
pop
jg
pop
inc
movs
je
or
sub
cld
cmc
adc
and
push
popa
jmp
sub
sub
xlat
scas
cmp
and
icebp
dec
call
mov
pop
(bad)
std
leave
das
add
mov
movs
mov
loop
adc
push
ret
jmp
adc
popa
jae
lldt
mov
pop
enter
repz
push
cwde
dec
add
push
push
dec
xchg
neg
mov
std
mov
cmc
fisub
pop
aam
jnp
stc
mov
xchg
dec
mov
pop
ucomiss
pop
lock
arpl
ror
adc
or
xchg
push
mov
in
jmp
pop
or
and
bnd
sar
outs
(bad)
inc
enter
inc
sahf
sbb
sbb
nop
sbb
xlat
cdq
push
mov
pop
or
push
inc
jg
adc
push
outs
and
mov
loope
js
or
les
adc
and
sbb
and
xlat
dec
sbb
fidivr
bound
loop
das
or
ror
jecxz
in
sub
mov
mov
leave
push
xor
lds
xor
and
lods
mov
retf
or
adc
pushf
mov
mov
loop
repnz
aas
dec
mov
jbe
hlt
mov
sub
out
pop
cmp
out
mov
stos
gs
stc
pushf
test
test
pop
retf
jne
xchg
push
lods
int3
pushf
out
loopne
rol
lds
aad
(bad)
mov
dec
jnp
out
jno
pop
adc
and
jmp
movs
sbb
fsubr
jecxz
sbb
(bad)
lock
leave
cmp
jno
(bad)
pop
jbe
loopne
jo
jle
push
repz
pop
add
xchg
(bad)
adc
push
dec
push
repz
(bad)
(bad)
sub
faddp
sbb
xchg
bswap
popa
test
mov
sbb
inc
add
retf
push
cli
cs
out
mov
xor
sbb
xor
jns
mov
dec
mov
mov
pop
sbb
xor
add
inc
or
test
sbb
jle
sub
xor
adc
push
enter
lock
fnstsw
pop
mov
ret
add
and
jb
aas
dec
sbb
xor
add
(bad)
fisttp
and
retf
int
fidiv
fidivr
jbe
ror
or
pop
ins
setle
and
mov
adc
call
scas
or
push
push
in
inc
sub
arpl
fs
and
jge
add
addr16
jo
inc
into
mov
sub
dec
aaa
aas
add
test
mov
fisttp
mov
adc
call
into
sbb
adc
xchg
test
push
xor
gs
into
aas
sti
mov
mov
out
or
int3
std
test
ret
sub
in
test
jae
clc
and
pop
leave
and
lock
fisub
and
ja
sbb
shl
cmps
jle
movs
fst
(bad)
js
pusha
into
push
dec
repz
lock
cmp
ja
cmp
xchg
sbb
std
jecxz
sub
jnp
pop
mov
movs
fs
xchg
call
arpl
test
jle
add
push
retf
jae
iret
test
sbb
mov
das
mov
inc
cli
mov
jno
fistp
pop
ja
sub
sar
xchg
call
push
mov
retf
xor
jno
push
loope
push
cs
add
sbb
sub
sti
adc
inc
das
ret
add
push
dec
popf
mov
enter
(bad)
in
jl
mov
xor
loopne
jne
movs
mov
leave
add
(bad)
(bad)
popw
lds
push
leave
aam
dec
pop
and
stc
cmc
aad
pop
lods
jle
xchg
and
cld
dec
stc
or
fwait
icebp
pop
jno
jmp
add
inc
pusha
lahf
mov
imul
ret
xor
add
ss
mov
cli
mov
sub
mov
int3
imul
test
ja
icebp
push
add
sub
xchg
mov
fmulp
adc
ins
pop
sub
inc
push
jno
cli
ja
fdivrp
xor
adc
popf
add
jno
enter
or
ins
xchg
jmp
inc
and
jns
retf
out
push
push
sub
pusha
mov
scas
retf
aas
jle
xchg
shr
push
xchg
mov
sbb
jg
ds
add
lahf
xor
add
in
or
loope
or
sbb
fcmovnb
inc
out
aam
adc
es
cmp
test
fist
xor
cmp
xor
repz
cmp
movs
jecxz
(bad)
mov
add
ss
shl
and
vsubps
mov
jg
xor
pop
sub
dec
fs
cmc
lods
repz
inc
sti
jo
pop
das
into
and
add
or
jg
dec
cwde
popa
sbb
fwait
inc
xchg
xchg
xor
sbb
xor
sbb
pop
mov
sbb
loope
dec
test
add
or
xchg
repz
push
pop
sbb
call
out
(bad)
adc
mov
xchg
scas
mov
dec
push
jbe
add
cmp
mov
adc
mov
jb
adc
neg
gs
stos
pushf
xor
inc
mov
bound
test
dec
mov
xchg
aas
data16
cmp
gs
add
and
cmps
pop
not
and
ror
xor
jmp
mov
inc
mov
cmp
jp
icebp
mov
dec
xchg
mov
js
fld
sti
int
stos
int3
and
dec
je
pop
inc
not
repnz
hlt
ficom
cmp
fdivr
lock
jo
cmp
mov
leave
cli
mov
ret
push
push
movs
inc
and
cmp
sub
loope
mov
xchg
fild
sbb
and
dec
sub
fisttp
enter
xor
mov
daa
dec
scas
inc
xchg
jle
jp
pop
jg
mov
jmp
ss
xchg
movups
push
gs
aam
js
lock
push
rol
stos
aad
outs
push
cmp
test
lock
sub
mov
cli
jb
retf
mov
add
icebp
sub
add
dec
adc
push
cmp
pop
ret
out
dec
test
jns
or
sub
inc
nop
add
inc
cmc
out
in
push
iret
mov
sar
xchg
mov
ins
rcl
bsr
push
inc
jg
mov
pop
imul
xchg
cmc
dec
cld
cwde
into
push
sub
ficomp
test
mov
mov
cmp
cmp
cmp
std
shr
popw
dec
(bad)
icebp
xchg
dec
push
idiv
dec
cmps
(bad)
out
xor
mov
retf
call
add
or
sbb
into
xor
mov
xor
pop
pop
mov
sar
or
cmp
arpl
xchg
leave
dec
mov
mov
std
mov
pop
rep
pop
fistp
and
ja
fst
xor
fst
or
pop
or
mov
inc
push
iret
ror
jecxz
xchg
(bad)
fstp
in
jge
xchg
in
add
push
push
jmp
push
call
in
cs
loopne
aam
in
push
and
xor
push
aas
es
mov
sti
(bad)
fadd
imul
shl
fist
mov
push
sub
movs
cli
push
jmp
jae
in
imul
nop
call
pusha
xchg
test
(bad)
mov
cmps
sub
push
jg
xor
lea
(bad)
jg
sahf
inc
cmp
xor
(bad)
and
(bad)
pop
(bad)
dec
cmc
adc
jge
sbb
cwde
dec
rol
xchg
mov
and
imul
(bad)
retf
out
mov
loope
push
loop
inc
inc
jge
jo
aas
mov
mov
xor
nop
cmc
fisub
out
mov
mov
jp
mov
shl
dec
cwde
pop
sub
bswap
mov
adc
pop
sub
dec
(bad)
dec
out
dec
adc
add
jno
stos
ja
jmp
adc
enter
jbe
pop
add
xchg
mov
jno
sub
js
pop
adc
fistp
add
sbb
jae
int3
mov
cld
or
(bad)
cmp
pop
adc
test
xchg
mov
test
popa
lock
cdq
or
mov
adc
lahf
xchg
stos
xchg
(bad)
aaa
lods
mov
daa
out
sbb
xchg
lods
push
hlt
or
or
pusha
mov
rcr
jns
dec
outs
mov
stc
cmp
gs
stc
je
pushf
test
int3
ins
xor
test
faddp
cdq
mov
jne
jp
je
jno
cs
dec
mov
jno
arpl
jno
mov
pop
out
xor
add
std
fidiv
push
bound
fbld
ins
xor
cmps
and
mov
mov
in
mov
mov
stos
dec
push
sbb
adc
sub
xchg
ins
dec
retf
cmp
pop
add
scas
inc
mov
jmp
dec
out
lods
xor
xchg
adc
dec
pop
test
mov
mov
xor
xor
cmp
push
mov
pop
xchg
push
xor
jl
in
add
stc
sub
in
mov
fcomp
lods
xor
(bad)
fcmovne
jne
icebp
stc
sbb
mov
imul
or
dec
mov
lahf
(bad)
dec
adc
fsub
bnd
push
add
sub
push
movs
jb
mov
jno
xor
jns
jp
push
xchg
inc
retf
addr16
(bad)
clc
sti
lods
daa
mov
mov
fnsave
imul
(bad)
push
sbb
scas
shl
xor
call
int
cmp
add
pusha
out
cmps
push
jns
fild
test
das
test
mov
and
sub
push
sbb
xchg
jg
sub
mov
pop
push
xchg
leave
les
aam
and
sbb
clc
pusha
stos
push
pop
jle
pusha
sbb
xchg
movs
iret
les
in
mov
packsswb
pop
ins
shl
jle
fst
mov
mov
xchg
sub
test
ror
or
adc
in
rcl
cwde
mov
(bad)
adc
pop
mov
out
and
xchg
or
jnp
pop
push
jb
inc
push
and
or
popf
inc
dec
test
cwde
pop
xor
mov
dec
dec
loopne
xchg
xor
loope
imul
mov
jo
fucomip
test
add
stc
popa
mov
nop
sti
xor
gs
leave
pop
jecxz
push
mov
push
fidiv
xchg
test
jp
mov
movs
gs
int
sbb
cli
outs
(bad)
xor
xchg
xchg
cmp
mov
mov
adc
popf
gs
pop
nop
mov
aam
(bad)
mov
(bad)
cmc
mov
dec
and
scas
movs
add
(bad)
dec
add
inc
jmp
mov
xor
and
cmp
jecxz
leave
call
sbb
popa
dec
pop
fsubr
sub
add
aaa
imul
sbb
jae
mov
mov
out
sahf
mov
push
je
xlat
add
test
sar
iret
pop
push
inc
sbb
imul
call
pop
mov
dec
ins
mov
repnz
or
add
cli
xlat
test
mov
adc
(bad)
mov
inc
and
add
aam
adc
or
pmulhuw
adc
sub
movs
and
sub
imul
and
dec
or
repnz
lock
daa
xor
mov
and
jmp
mov
fild
inc
add
call
xchg
stc
leave
stc
inc
fcmovnu
jnp
xchg
outs
cmp
adc
int
arpl
cmc
outs
call
hlt
cmp
mov
pop
shr
in
dec
cld
adc
lods
push
adc
add
xchg
test
out
cmps
mov
jmp
pop
or
cld
lahf
add
cwde
cmps
pop
adc
mov
push
mov
xchg
inc
pop
push
push
out
push
bswap
icebp
icebp
pop
test
mov
inc
fist
fidiv
cmp
cwde
mov
jns
ror
in
shr
int3
mov
dec
xor
call
stos
leave
fs
pop
xor
mov
pushf
cwde
ret
je
sub
jbe
ret
ror
push
lods
aad
in
fisttp
shr
test
sub
lods
inc
rcl
push
fcom
cmps
das
jle
imul
out
lahf
in
sysenter
add
(bad)
cld
xor
popa
scas
lds
aam
rcr
add
les
clc
jg
jne
aaa
imul
jmp
jecxz
sbb
dec
pop
lds
pop
dec
js
mov
mov
add
jl
and
dec
inc
daa
leave
mov
and
movs
in
add
cld
call
pushf
xlat
ror
inc
rcl
out
cmp
dec
dec
lods
jmp
dec
dec
gs
test
int3
pop
push
mov
push
xchg
test
retf
pushf
sub
lock
xchg
add
xchg
or
loope
xchg
sbb
sbb
cmc
cmps
daa
xor
xchg
jno
aas
in
dec
sbb
pop
xchg
cmp
push
ret
repnz
rol
aad
mov
call
xchg
rol
dec
shl
pop
movs
xor
sub
push
dec
ror
out
and
and
cli
fsubr
dec
sahf
test
jmp
fldz
inc
add
int
jmp
jl
mov
mov
mov
addr16
or
push
fst
cwde
ds
hlt
popf
test
mov
sbb
sbb
jb
inc
add
es
xor
add
cmc
ja
jg
not
cmp
scas
rcl
mov
loop
mov
and
xor
fild
push
in
aaa
or
dec
test
pop
jno
ret
ss
fwait
shl
inc
sub
sub
neg
add
bswap
push
inc
fidiv
xchg
push
mov
fwait
scas
add
ja
push
sti
sub
fbstp
hlt
xchg
popa
loope
pop
pop
mov
dec
dec
mov
mov
icebp
movs
adc
push
xor
sub
adc
hlt
out
mov
and
mov
and
cmp
ror
adc
mov
inc
xchg
in
repnz
xlat
mov
cmp
inc
fs
cdq
stos
mov
push
xchg
les
test
repnz
pushf
arpl
cmps
mov
loope
(bad)
nop
mov
cmp
das
push
dec
call
into
xchg
dec
repz
int3
jge
jne
or
in
mov
sti
or
loopne
mov
dec
sti
jno
mov
cli
mov
push
cmp
mov
ret
inc
or
ret
daa
fsubr
aad
fdivr
retf
or
cmp
pop
mov
push
adc
ret
pop
imul
add
sar
neg
push
jmp
gs
xchg
lea
add
test
sbb
dec
add
xchg
shl
out
fwait
mov
inc
fdiv
pop
cli
xchg
stos
push
xor
jne
and
sti
and
cdq
mov
ds
mov
jg
add
jns
out
mov
dec
inc
push
inc
cmp
ins
push
jbe
and
mov
xchg
jle
daa
loope
add
nop
push
in
nop
mov
jg
push
ret
imul
xchg
xlat
push
shl
add
mov
mov
pop
int
cmps
fs
jmp
ss
add
push
mov
movs
xlat
daa
mov
xor
shl
mov
dec
dec
cdq
out
fs
add
rcl
xchg
jo
shr
ret
xchg
aam
or
arpl
cli
js
mov
xor
imul
ds
jle
outs
xchg
inc
xor
sbb
in
mov
pop
xor
test
(bad)
xor
imul
and
rcr
pminsw
lods
jnp
pushf
(bad)
and
fwait
adc
(bad)
lock
in
ins
jge
lock
nop
cmp
fsub
in
fs
mov
outs
leave
(bad)
outs
shl
jno
call
repnz
icebp
sub
cld
iret
addr16
xor
test
mov
xchg
ret
(bad)
sbb
sti
(bad)
imul
cmc
dec
aad
daa
fstp
or
mov
jae
push
mov
sbb
xor
xchg
repz
mul
mov
jecxz
sbb
in
push
or
cmp
jb
or
and
jge
cmp
outs
add
jl
mov
xchg
pop
aad
xor
fnsave
mov
or
jb
jp
adc
cdq
jge
push
aas
retf
mov
test
fisttp
jmp
dec
and
push
fimul
mov
scas
mov
or
inc
ins
jmp
in
stc
das
les
jecxz
test
std
stos
dec
hlt
enter
xchg
sub
cmc
inc
sbb
xor
movs
sub
sbb
movs
or
xchg
mov
cmp
xchg
lods
lea
push
cmp
sbb
ficomp
loop
jcxz
mov
or
jmp
movs
daa
es
adc
enter
test
inc
loop
mov
mov
lea
mov
pop
xchg
rcr
lahf
into
sub
lahf
adc
sar
push
je
mov
stos
fiadd
repz
mov
mov
stos
movs
adc
repz
mov
cmp
clc
fcom
ds
dec
lods
cmp
xchg
pusha
adc
dec
out
call
jmp
call
(bad)
mov
pop
repnz
data16
xchg
and
or
out
imul
fadd
push
std
ficom
ret
jnp
cmc
push
mov
out
aaa
icebp
pop
inc
pop
push
call
dec
and
mov
pop
cmp
pop
jl
xchg
and
pop
rcl
push
sbb
inc
push
mov
lds
les
lock
js
xor
aam
shl
fidivr
jns
push
in
je
cdq
xchg
xor
xlat
addr16
mov
push
sbb
aad
xor
push
test
scas
push
ds
mov
or
out
imul
xchg
icebp
lds
xor
and
push
inc
stc
lods
add
add
and
retf
push
ret
stos
or
fisttp
add
stos
out
cs
sub
jmp
cmps
or
add
lds
xor
adc
(bad)
pop
jecxz
mov
sbb
lahf
bound
mov
stos
std
adc
imul
(bad)
ja
push
cmp
or
mov
shr
call
jnp
(bad)
clc
inc
xchg
iret
or
repnz
or
jo
mov
mov
mov
cli
stc
pop
inc
out
daa
and
adc
xlat
xlat
retf
mov
lahf
jno
jbe
push
cmp
dec
fcomp
lahf
mov
adc
jmp
push
pop
pop
popa
add
jge
mov
ss
cmp
jge
int3
lods
ret
ror
imul
(bad)
loopne
inc
xor
adc
sub
jmp
jecxz
sbb
jge
add
in
call
cli
inc
mov
fucomp
pop
sbb
bound
dec
out
lahf
fnstcw
push
test
mov
outs
imul
cmc
mov
dec
outs
stos
pop
push
inc
push
add
jmp
loop
loop
jb
ss
or
xchg
sub
dec
push
mov
pop
fdivp
sahf
and
lds
xchg
test
push
jmp
adc
ins
(bad)
mov
cdq
xchg
pop
mov
int
mov
mov
test
inc
cmp
(bad)
leave
inc
xor
mov
mov
mov
mov
in
lock
or
inc
push
jno
fnstsw
mov
dec
test
cmp
into
and
sub
mov
(bad)
(bad)
jle
jl
adc
cmp
adc
cmp
aam
pop
dec
mov
pop
shl
iret
mov
(bad)
imul
sbb
push
(bad)
mov
jmp
jp
xchg
or
push
push
adc
push
sbb
pop
or
pop
pop
dec
push
and
pop
push
add
jo
ins
enter
cmp
pop
popa
call
adc
jp
mov
push
sub
aas
xchg
xchg
call
adc
sti
clc
cmc
inc
cli
xor
cmps
ss
rcl
xor
xor
ret
sahf
iret
cmp
xchg
repnz
out
add
shl
idiv
mov
mov
add
push
pop
pop
jo
(bad)
cli
and
mov
mov
jae
inc
hlt
mov
out
inc
xor
dec
popf
jns
repz
scas
aad
call
jl
pop
inc
sub
or
(bad)
jl
cmp
push
ficomp
movs
push
push
in
push
cmp
rcl
loope
(bad)
jo
mov
aas
aam
jb
jecxz
adc
cmp
lds
or
jnp
cdq
jno
cwde
xchg
(bad)
cld
cmps
mov
sbb
xchg
cmp
imul
add
add
mov
fdiv
aas
or
lahf
stos
xor
xchg
shl
lock
leave
sub
mov
das
pusha
bound
cmp
push
sbb
ins
adc
icebp
jo
and
addr16
ret
jecxz
and
xchg
ins
push
and
stos
xchg
gs
push
fdiv
ss
mov
int
scas
rcr
daa
or
mov
jae
adc
sbb
adc
jg
stc
imul
pushf
sbb
adc
pop
js
mov
(bad)
dec
fs
and
mov
je
push
cmps
inc
jecxz
out
cs
xchg
imul
fdiv
lds
lahf
push
(bad)
fidivr
mov
add
and
idiv
cdq
mov
xchg
jne
stos
push
or
mov
and
jp
xor
repnz
lods
loope
jg
pop
es
inc
jae
dec
xor
push
pop
aad
loopne
jnp
outs
xor
retf
xor
out
pusha
and
adc
cli
and
adc
push
fidiv
cmps
fild
and
std
mov
outs
pop
clc
clc
es
fbld
retf
call
or
outs
dec
pop
(bad)
mov
mov
int
test
rcl
fistp
clc
cmp
or
ror
mov
mov
and
jnp
icebp
push
xor
xchg
xchg
into
mov
sbb
jns
pop
ror
rcl
retf
add
pop
push
cli
adc
cli
jns
inc
jmp
xchg
xchg
popfw
lods
in
sub
repz
add
cmp
das
xor
std
mov
jmp
adc
push
jp
ds
inc
std
pushf
inc
mov
dec
outs
jle
cli
push
int3
cmps
jb
(bad)
jno
pop
add
sub
or
xor
movs
adc
sbb
or
pushf
xchg
xor
call
adc
sbb
cdq
rol
xchg
test
loop
or
sub
dec
xchg
push
pop
cli
mov
bound
sbb
push
sbb
xlat
adc
inc
aas
cmp
call
xchg
out
bound
call
dec
mov
mov
iret
gs
je
fcomp
shl
lahf
push
mov
ins
retf
mov
rcr
retf
cmps
mov
pop
jecxz
pop
jnp
ins
mov
mov
jp
dec
aas
js
pop
sahf
xor
xor
pushf
inc
retf
xor
addr16
jns
int
jle
cmp
cmp
mov
xchg
adc
stos
cs
sbb
(bad)
xlat
hlt
xor
xchg
push
aas
sbb
aad
bound
mov
xchg
aas
inc
sub
in
cmc
loop
hlt
mov
push
cdq
sar
call
mov
cmp
adc
test
mov
ret
ds
pop
nop
ss
gs
cwde
outs
ret
dec
cld
aaa
and
sbb
pop
out
(bad)
je
push
sub
inc
dec
sub
push
je
cmp
lahf
(bad)
pop
pop
rcr
mov
push
sbb
fst
push
dec
sbb
es
stos
mov
jp
or
cmp
ret
xor
lods
mov
nop
cmp
daa
jecxz
adc
ss
clc
bound
ja
cwde
sub
dec
pop
lods
scas
test
jl
cli
cmp
test
mov
neg
ins
cs
push
dec
out
clc
sti
icebp
push
xchg
inc
outs
aad
inc
idiv
fbstp
cmp
and
stos
dec
add
xchg
hlt
xchg
ret
idiv
push
sub
dec
push
jns
push
push
sbb
inc
mov
stc
jbe
fild
or
mov
aad
int3
mov
push
inc
test
jmp
mov
add
mov
add
sbb
nop
jbe
adc
pusha
inc
(bad)
outs
pop
sub
inc
call
mov
(bad)
int
and
outs
push
nop
(bad)
adc
ds
and
sub
cwde
lahf
mov
pop
inc
pusha
jl
inc
fwait
jns
popf
cdq
mov
or
dec
push
inc
lahf
sbb
pushf
in
in
sub
xchg
aaa
mov
pop
xchg
(bad)
fisubr
addr16
push
std
(bad)
lods
mov
cmp
frstor
inc
bound
mov
and
aad
pop
mov
and
sub
xor
ja
jmp
aam
cmps
xacquire
iret
jecxz
cmp
cmp
sub
xor
(bad)
(bad)
outs
arpl
sar
stos
dec
retf
movs
pop
pop
or
out
dec
sbb
(bad)
or
mov
cmp
test
mov
clc
repz
repnz
out
fimul
call
xchg
push
sbb
stc
inc
inc
cmc
push
aad
xchg
mov
sub
jge
inc
out
inc
sbb
(bad)
stos
rcr
push
xchg
push
xchg
aad
jmp
cmp
cmc
xor
ins
loopne
inc
ins
pusha
mov
test
cmp
loop
cmps
into
popf
adc
dec
pop
rcr
adc
jge
xor
daa
dec
mov
pop
je
in
inc
sub
sbb
outs
test
cmp
sti
retf
in
or
pushf
inc
sbb
add
xchg
jo
dec
pop
(bad)
outs
sti
inc
mov
daa
cmp
loope
xor
int
mov
sub
and
ja
(bad)
jp
retf
lahf
imul
loopne
pushf
icebp
jae
popa
sar
dec
ja
xlat
dec
(bad)
(bad)
pop
fisttp
in
imul
cmp
cmp
icebp
repnz
imul
movs
pop
xlat
jl
repnz
mov
push
and
pop
nop
cdq
sbb
dec
sahf
dec
por
adc
nop
mov
mov
pop
jns
and
mov
int3
add
in
xchg
aam
jmp
ret
mov
movs
enter
sbb
clc
mov
and
icebp
jbe
dec
mov
inc
repz
sub
icebp
call
sub
ss
(bad)
sbb
movs
fdivr
iret
jo
xor
into
mov
cmps
imul
inc
pop
shr
xchg
ret
fistp
rcl
outs
push
stc
into
lock
mov
sahf
es
pop
mov
cwde
mov
mov
cmp
add
xchg
shl
outs
hlt
push
retf
popf
scas
sbb
sub
or
repnz
sub
mov
into
push
(bad)
mov
mov
std
xchg
adc
aam
daa
pop
movs
pop
stos
or
pop
test
cmp
push
add
outs
out
mov
mov
pop
std
cwde
das
stos
or
push
out
retf
inc
imul
sub
pop
movs
pop
ror
(bad)
cmps
neg
xchg
jp
cld
dec
outs
add
adc
stc
dec
ret
xchg
jl
out
pop
cld
movs
retf
ins
cmovne
xchg
jmp
dec
(bad)
mov
call
repz
ds
mov
and
sub
jo
rcr
mul
stc
push
jmp
(bad)
cdq
and
push
and
pop
ja
lea
movs
shl
es
adc
mov
stc
lock
fisttp
lahf
shl
dec
pop
mov
cmp
push
out
and
mov
dec
adc
and
or
jbe
nop
add
cmp
pop
ss
cmp
fisttp
into
mov
lldt
repz
add
pop
dec
jns
sbb
iret
(bad)
int
sub
jnp
out
(bad)
mov
loopne
xchg
dec
ret
xchg
mov
mov
rcl
fldln2
ret
push
test
push
push
cld
mov
fucomip
popa
scas
(bad)
lds
push
cmp
fmul
cmps
or
jbe
and
sub
pop
ins
jge
add
ja
lods
adc
cwde
dec
mov
and
movs
movs
fstp
mov
fcomp
cmc
mov
(bad)
fistp
or
ret
js
push
xor
into
cmc
jbe
inc
arpl
xchg
xlat
mov
daa
movs
sbb
outs
xchg
cmp
lea
sbb
push
adc
stos
or
adc
fistp
xchg
pop
mov
clc
dec
dec
test
mov
or
xor
dec
ficom
pop
fdiv
pop
lods
dec
jnp
cdq
out
mov
add
adc
cli
jmp
cmp
mov
xchg
inc
mov
xchg
test
or
into
add
push
rol
mov
pop
mov
sar
mov
test
dec
or
jns
data16
rol
in
cmps
mov
inc
mov
data16
sar
mov
in
repz
mov
mov
mov
jb
or
lea
add
neg
pop
hlt
cwde
scas
call
sar
dec
xchg
sbb
pop
shr
loop
imul
in
aam
ins
aad
stc
mov
push
jae
lahf
jl
repnz
xor
pop
leave
scas
in
jmp
mov
pop
das
sub
sbb
and
lds
inc
outs
mov
add
inc
pop
inc
ficomp
dec
inc
ret
inc
sub
mov
sahf
xor
mov
jo
and
popa
in
dec
loope
int
movs
cmps
sub
dec
or
out
aas
xchg
loop
fidiv
lds
xor
ins
mov
hlt
lahf
lock
gs
sub
mov
xor
lahf
imul
clc
xor
add
xchg
repz
in
xchg
sub
daa
loopne
fiadd
or
adc
std
aaa
mov
xchg
mov
arpl
cmp
mov
icebp
sbb
dec
push
mov
rcr
in
jne
xchg
or
vpaddb
push
(bad)
jmp
lahf
scas
add
out
cmp
push
cmp
cmp
add
mov
xchg
pop
lds
sbb
pusha
test
inc
enter
rcl
adc
xor
add
repz
shr
ins
sub
test
fst
inc
adc
jae
sbb
cmps
into
cwde
fs
in
mov
(bad)
in
add
cmp
test
cmp
aad
pop
test
jne
cdq
adc
(bad)
(bad)
call
or
pop
mov
add
inc
ins
dec
cmc
fisubr
jns
cmp
ins
sbb
daa
pop
jbe
stc
pop
ret
outs
bound
icebp
and
inc
rol
push
enter
popa
(bad)
ftst
out
jge
push
not
add
ficom
mov
fnstenv
rcr
push
gs
mov
jg
popf
lods
enter
cld
xchg
jge
cld
imul
mov
aam
jle
lock
lods
das
pop
test
inc
sysexit
call
sub
ins
test
(bad)
lock
fdiv
cld
jle
adc
enter
clc
enter
mov
dec
out
cmp
mov
cmp
sbb
mov
enter
jae
mov
jmp
sub
pusha
jl
jne
inc
dec
sbb
not
nop
mov
jp
jp
cmp
or
loop
mov
clc
mov
push
cmp
iret
xchg
pop
jmp
addr16
mov
sub
adc
nop
jne
iret
adc
stos
jne
js
ror
jbe
xchg
push
sub
push
retf
mov
rcr
push
xor
cmp
out
jecxz
imul
push
jle
xor
or
xor
sbb
fild
ret
mov
test
cmps
and
xchg
xor
stos
mov
gs
adc
(bad)
push
adc
not
mov
cli
pop
xchg
retf
aas
stc
xor
sbb
cmp
xchg
stos
movs
retf
push
pop
test
jmp
cld
mov
sbb
mov
cs
jge
stos
inc
int3
in
sbb
retf
sub
add
hlt
aas
cs
ins
xchg
push
cmp
mov
jl
lea
das
xchg
shl
sbb
mov
xchg
ds
xor
clc
daa
sahf
and
shr
jo
inc
enter
test
push
sub
add
repz
cmp
scas
pop
sub
jge
ror
xchg
push
push
lahf
std
std
xchg
push
in
das
pop
idiv
cmp
int3
push
add
ins
push
and
fwait
test
mov
xchg
stos
and
dec
sub
(bad)
sbb
xor
and
dec
in
sbb
nop
mov
cmps
loop
call
aas
inc
fst
cmp
fadd
xchg
outs
sbb
adc
mov
sub
mov
inc
pop
sbb
adc
scas
dec
rol
xchg
aad
std
xchg
jge
retf
xor
sar
mov
fucomp
dec
pop
lds
inc
fwait
daa
sub
mov
mov
mov
add
std
pop
mov
mov
call
lahf
adc
push
(bad)
ins
mov
inc
jnp
dec
cmp
cmp
fnsave
sub
dec
sti
(bad)
fs
and
cmp
icebp
fist
jnp
lods
mov
scas
mov
cs
push
cdq
(bad)
loopne
mov
push
repnz
xor
add
push
mov
ins
cmp
call
mov
push
cmp
add
pop
xor
dec
inc
ficom
div
sbb
mov
sbb
outs
mov
mov
out
lods
mov
je
int3
dec
stos
jne
idiv
mov
mov
fstp
push
push
xchg
leave
test
cmps
xor
inc
clc
jbe
jg
cdq
pop
imul
test
test
sar
xor
jmp
add
out
jae
dec
dec
xor
sbb
(bad)
dec
jmp
add
mov
(bad)
mov
test
scas
sbb
cs
(bad)
mov
mov
mov
cli
mov
inc
xor
repnz
push
sub
cmp
and
outs
xchg
movs
shl
ror
loope
mov
cld
mov
or
into
sbb
aas
or
dec
sbb
mov
aam
jnp
cmp
push
inc
xchg
mov
jnp
fldenv
data16
or
loopne
dec
mov
fnstsw
add
jno
or
xchg
test
dec
mov
mov
pushf
scas
sbb
jne
sbb
cmp
ss
push
push
jo
adc
push
jp
cmp
or
jae
xchg
ins
jns
inc
ret
xchg
sub
int3
and
and
mov
xor
lock
push
fld
je
sbb
js
aas
and
inc
or
in
nop
cmp
push
xlat
mov
jne
out
mov
leave
inc
repz
cld
mul
push
sbb
lods
sub
(bad)
into
(bad)
out
(bad)
sub
imul
mov
mov
xchg
and
ror
mov
cdq
ins
aam
clc
mov
sub
lahf
push
mov
cmc
mov
push
(bad)
mov
adc
in
push
cmp
jno
xchg
cmps
jae
movs
xor
xor
jge
mov
adc
pop
add
sar
jecxz
mov
sub
sub
adc
dec
and
mov
sbb
mov
mov
mov
mov
adc
push
jmp
dec
(bad)
fidiv
(bad)
lock
or
sub
cs
mov
mov
leave
sub
dec
dec
xchg
pop
dec
mov
mov
lahf
std
xor
jbe
sbb
mov
push
jg
push
cli
imul
cld
jp
int3
outs
jbe
sub
and
ficomp
xor
out
adc
jecxz
rcr
into
jl
inc
sti
emms
sub
mov
(bad)
mov
daa
jnp
(bad)
xor
lods
sub
pop
push
push
fst
and
jns
inc
cmp
mov
fiadd
ret
sahf
pop
xor
popf
imul
mov
stos
mov
int
mov
(bad)
in
xchg
mov
inc
sbb
ins
dec
add
ja
addr16
fmul
popf
bound
pop
mov
xor
addr16
repnz
mov
xor
adc
clc
add
aaa
and
xchg
ins
push
sahf
mov
xchg
in
ret
fidiv
xchg
lods
aad
je
xchg
add
loopne
inc
mov
aad
jb
rcr
mov
out
fiadd
push
xchg
inc
idiv
ret
inc
sar
or
movs
arpl
jecxz
xchg
mov
xchg
psubw
cli
sub
les
or
cmp
daa
int3
imul
fidiv
jae
mov
inc
jo
cmp
mov
and
adc
shr
mov
call
and
pop
mov
cmp
push
movs
jp
mov
shl
out
test
cmp
not
adc
lods
sub
mov
mov
sub
lds
xchg
add
or
fistp
sub
xchg
retf
(bad)
call
ins
aas
out
and
add
in
lds
fwait
or
push
and
jmp
outs
sti
pop
mov
sub
inc
sbb
mov
xor
dec
xlat
aas
jns
xor
sub
stc
rcl
fcomp
cld
xchg
mov
mov
add
sub
retf
or
and
mov
pop
pusha
loope
ins
daa
mov
out
test
rol
ret
rcr
pop
std
sbb
push
pop
sbb
fbstp
sub
sub
ins
es
mov
mov
aam
stos
sub
xor
jecxz
movs
data16
sbb
icebp
pop
bound
fist
test
push
or
jp
pop
sub
jns
sbb
mov
cs
add
(bad)
out
rcl
sub
sbb
push
pop
leave
leave
(bad)
sbb
push
cmc
loopne
mov
in
ds
sub
adc
push
lahf
shr
mov
lods
(bad)
push
mov
fidivr
pop
sbb
call
mov
jae
jne
cli
rcl
fs
or
jg
mov
lahf
inc
mov
or
pop
je
mov
jno
jmp
(bad)
test
push
aam
mov
outs
inc
fs
aad
xor
xlat
repz
jmp
xor
xor
dec
or
sub
mov
outs
mov
shl
pop
je
ret
mov
and
add
popa
int3
mov
aas
test
cmp
shl
(bad)
in
xchg
pop
xchg
or
fs
mov
dec
and
mov
(bad)
xor
shl
scas
or
pop
bound
dec
lahf
mov
aas
jno
call
push
add
mov
sub
retf
into
std
out
icebp
rol
xchg
dec
mov
nop
cs
adc
gs
sbb
push
and
add
push
fisttp
aaa
and
je
xchg
sbb
fst
push
into
data16
inc
lds
inc
xor
jmp
sub
retf
outs
cmps
in
nop
nop
or
sbb
push
test
js
aam
adc
sbb
pop
add
sub
data16
mov
add
iret
js
dec
push
js
hlt
inc
pushf
mov
add
cmps
jno
sbb
dec
into
mov
mov
popa
or
jmp
std
jno
adc
add
daa
fs
out
mov
jmp
or
je
ins
lock
dec
adc
sbb
jbe
jb
rcr
pop
jbe
add
xor
(bad)
or
cdq
cld
adc
shl
mov
out
and
addr16
mov
xchg
push
or
cmps
push
sub
adc
fimul
sub
dec
xor
gs
sub
adc
test
lahf
xor
sti
cld
mov
cmp
fidivr
inc
push
xor
gs
daa
aas
in
int
fist
inc
jge
test
xlat
scas
imul
sub
test
jmp
bound
xchg
or
outs
xor
sbb
rcl
jmp
cmps
pop
and
adc
popf
es
and
or
add
adc
(bad)
or
imul
xlat
popf
fucomip
sbb
cs
jecxz
popf
xchg
mov
fdivr
mov
and
das
and
cli
das
gs
xor
inc
std
scas
adc
hlt
scas
loope
fnsave
mov
stos
pop
std
xor
gs
add
ror
sahf
cs
leave
cdq
into
push
push
dec
aas
push
das
mov
xor
inc
(bad)
sub
js
call
dec
push
mov
cmp
iret
push
fnsave
mov
pop
dec
push
push
jecxz
and
std
call
mul
jl
lods
scas
pop
dec
cmp
lahf
stos
sbb
pop
and
sub
mov
shl
add
pop
push
sahf
sbb
mov
xor
adc
hlt
fwait
(bad)
out
vpsubb
and
cld
jl
cmp
clc
xor
cmp
cdq
dec
(bad)
push
rcr
(bad)
mov
es
popf
cmp
jno
sub
or
push
xchg
cmc
shl
mov
cmps
mov
fdivr
fstp
nop
cmovg
jmp
sahf
sbb
mov
in
scas
bound
jmp
xor
outs
add
cmp
or
shl
mov
movs
pop
mov
jnp
and
or
and
into
out
lahf
mov
mov
push
mov
mov
stc
mov
add
pop
mov
cmp
imul
icebp
arpl
jne
(bad)
mov
(bad)
mov
outs
ins
test
jl
inc
cmps
cmps
lds
ret
lods
add
xrelease
pop
fsubr
ror
dec
xchg
retf
stos
fist
inc
jne
xchg
sbb
dec
test
push
ja
sub
aad
rol
push
push
adc
mov
(bad)
jmp
and
xchg
sbb
int
lea
mov
adc
and
fnstcw
mov
sti
fiadd
outs
divps
pop
inc
adc
js
xchg
or
rcr
call
add
fsubp
jmp
dec
xchg
or
mov
jno
or
shl
jnp
xor
sub
push
mov
(bad)
imul
mov
push
push
pop
inc
mov
inc
cmp
jp
dec
test
movs
inc
mov
sbb
sbb
fistp
(bad)
xor
scas
ss
mov
cwde
push
pop
push
add
jl
loop
sub
push
mov
rol
cmp
rcl
in
(bad)
sbb
sbb
mov
xchg
sar
xchg
mov
xor
and
xchg
retf
addr16
loop
test
hlt
pop
(bad)
out
cmp
les
ins
lea
or
push
out
add
mov
inc
pop
and
outs
out
push
mov
or
sbb
inc
jno
inc
sub
jno
xchg
cmp
push
pop
or
add
inc
mov
xor
xlat
push
jne
jbe
shl
(bad)
mov
sbb
sub
or
inc
jnp
lea
mov
push
inc
pop
cs
ret
bound
xchg
cli
nop
jl
push
outs
sub
mov
inc
daa
xchg
enter
clc
aaa
lock
jns
xor
lock
inc
and
jb
adc
jecxz
dec
or
retf
out
das
push
ret
jns
sti
add
out
add
mov
add
lods
dec
cmp
cdq
sbb
cmc
adc
jnp
imul
aad
push
xchg
inc
pop
add
mov
jae
scas
mov
xchg
js
mov
cmp
loopne
xchg
mov
jmp
outs
shl
add
shl
es
(bad)
jo
push
hlt
dec
xchg
jo
mov
es
push
clc
cmovl
imul
pop
sbb
leave
call
adc
loope
adc
pushf
aam
add
sbb
inc
sub
std
in
out
pop
pop
pop
and
jo
int3
sub
idiv
imul
jne
mov
xchg
and
ins
xchg
dec
lods
aam
jp
imul
mul
outs
jne
sbb
int
jg
lods
sub
aas
loop
adc
fs
sub
adc
adc
inc
or
clc
push
les
adc
stc
aad
xor
mov
repz
js
retf
ins
ret
cmps
data16
cmps
jp
mov
cwde
movs
fdivr
cs
sbb
sahf
push
lahf
pop
test
nop
jg
mov
push
out
mov
into
into
data16
scas
ret
in
and
adc
jmp
add
das
jmp
test
jmp
cmp
out
std
or
out
jae
push
cmps
and
pop
popa
xchg
cmp
or
mov
sbb
popa
stos
retf
into
mov
adc
sub
imul
fwait
and
dec
xor
adc
cmp
mov
add
in
jo
rcr
ret
dec
into
dec
push
out
movs
or
cdq
int
cmps
inc
cs
adc
in
out
loopne
lahf
mul
movs
outs
or
into
out
pop
jmp
jae
xor
mov
jno
mov
mov
popa
dec
icebp
push
je
les
mov
add
stos
adc
mov
push
hlt
xchg
cmp
push
or
dec
inc
cwde
sbb
push
sbb
into
mov
xchg
sbb
je
cmp
loope
(bad)
test
cld
lods
push
cmp
(bad)
mov
stos
xor
pop
mov
sar
les
xor
push
push
test
retf
and
or
jb
hlt
ret
out
xchg
fldcw
add
les
movs
xchg
jmp
xor
cdq
inc
pop
mov
xor
out
push
fld
lock
icebp
dec
ret
clc
dec
sbb
inc
xor
or
and
es
and
(bad)
adc
dec
and
jnp
inc
in
fdivr
jae
mov
or
das
dec
repnz
jno
imul
sbb
jmp
ss
repz
fdiv
les
fnclex
xor
loope
out
(bad)
scas
mov
loopne
push
mov
mov
mov
fstp
movs
add
fwait
push
pop
mov
rcr
mov
xchg
mov
loop
les
mov
mov
jmp
popf
pop
adc
retf
int3
popa
cs
hlt
leave
je
mov
jp
cmc
popa
js
gs
popa
rcl
retf
fcmovnbe
into
sbb
imul
jmp
sub
ins
add
addr16
(bad)
xor
jge
in
loopne
xchg
and
popa
push
and
dec
ret
je
movs
pop
dec
inc
sub
sub
push
dec
cmp
dec
pop
xchg
idiv
outs
or
hlt
pop
cmps
jg
cmp
cmp
mov
adc
add
push
ins
les
add
mov
xchg
test
cmp
pusha
or
jle
cmp
add
inc
test
sbb
cmp
cmp
xor
sbb
dec
cmps
sbb
mov
or
push
jmp
xchg
mov
jg
or
iret
out
clc
scas
fs
and
pop
jg
pop
push
cmps
test
mov
pusha
popa
test
push
hlt
aad
mov
cmc
mov
jmp
or
ret
xchg
clc
je
call
iret
xchg
gs
sbb
sbb
xchg
call
stc
pop
xor
test
ftst
(bad)
xor
cmp
icebp
pop
fstp
div
cmp
pop
into
out
xchg
out
and
dec
push
ins
sbb
iret
jns
push
dec
mov
scas
push
and
fnstcw
adc
(bad)
jbe
in
cmp
(bad)
repnz
es
jge
ja
jo
dec
loopne
adc
add
lds
push
xchg
sbb
arpl
int
les
inc
mov
adc
xor
mov
sar
mov
shl
sbb
jb
cmps
jle
repz
outs
ins
or
lods
sub
dec
pop
bound
push
push
loopne
repnz
inc
inc
jl
movs
or
add
pop
pop
add
sahf
mov
inc
jle
out
cmp
ror
xchg
cwde
jae
ret
ficomp
jl
retf
add
mov
in
sbb
sub
push
cs
mov
adc
push
or
xchg
cmc
and
retf
jle
jne
mov
call
mov
adc
(bad)
imul
or
(bad)
or
int3
sbb
loop
xor
daa
jge
jp
push
pop
test
inc
jb
fcmovbe
add
jp
xchg
in
cli
(bad)
in
mov
dec
sub
(bad)
jb
xchg
das
lds
and
ja
out
cmps
jb
jmp
sbb
movs
mov
push
fcom
jne
push
push
mov
adc
push
push
daa
aam
push
out
shl
mov
or
ds
shl
or
fadd
xor
push
xchg
cdq
div
fbld
ror
mov
dec
mov
mov
mov
in
push
add
mov
cmps
pop
sub
dec
cmp
retf
jmp
rcl
iret
jb
mov
sbb
inc
pop
sbb
(bad)
iret
jne
imul
test
jle
and
adc
mov
or
adc
push
jp
call
mov
or
inc
adc
loop
add
sub
test
pop
shr
out
push
mov
pop
outs
inc
jmp
add
repz
push
xor
adc
pop
loopne
mov
xor
and
pop
sub
jge
pop
jl
stos
in
in
out
lea
ins
repnz
fnstcw
mov
arpl
sbb
jg
ja
fsub
push
mov
ins
xchg
jae
mov
cmp
xchg
xor
test
xor
push
mov
arpl
dec
stos
push
cs
jb
jmp
addr16
stc
repnz
adc
mov
dec
mov
repnz
push
fwait
or
rol
push
cmc
sub
clc
dec
jp
dec
xchg
std
repz
pop
mov
in
dec
pushf
fld
in
sub
pop
retf
xchg
je
jg
inc
in
or
cmp
pop
or
lea
mov
(bad)
rcr
jl
(bad)
mov
push
jae
icebp
(bad)
dec
and
xchg
and
enter
enter
out
rcr
arpl
rcr
or
jae
nop
push
loope
adc
sbb
stc
push
ret
fs
test
aas
test
add
scas
call
jmp
out
push
xor
jnp
jmp
pop
sub
retf
std
arpl
pop
imul
test
int3
sbb
jl
out
cmp
cmc
xchg
popa
lahf
arpl
inc
xchg
push
xchg
cmp
lahf
call
push
jecxz
xor
pop
(bad)
pusha
mov
sbb
push
scas
xchg
mov
retf
mov
xlat
jge
mov
dec
sub
jecxz
mov
cmps
dec
dec
adc
jg
lahf
pushf
ja
cmp
adc
mov
pop
mov
popa
imul
jecxz
pop
add
int
test
jg
(bad)
cs
mov
pop
stc
pop
pop
xor
test
mov
ins
mov
aam
lahf
aas
adc
adc
ret
push
ror
mov
arpl
(bad)
push
mov
daa
xchg
dec
mov
mov
xchg
cmp
popf
or
out
(bad)
and
push
adc
xor
sti
pop
inc
jno
dec
mov
clc
nop
popa
xchg
arpl
xadd
das
mov
pop
cs
mov
ds
cmp
test
hlt
ins
mov
push
or
pop
mov
xchg
add
cmp
push
mov
in
cli
ret
lods
js
nop
jne
repz
ss
xchg
sub
xor
es
pop
fdivr
retf
push
int3
ja
add
and
pop
xchg
icebp
not
in
je
push
fiadd
inc
jne
xlat
mov
aaa
scas
outs
(bad)
call
push
inc
jb
fdivrp
push
jnp
clc
and
js
sbb
dec
aad
fst
(bad)
stc
sbb
(bad)
int
sub
push
jae
cmp
in
xchg
sub
mov
push
jmp
cmc
inc
ror
stos
movs
mov
(bad)
imul
(bad)
jge
mov
mov
xchg
in
pop
hlt
pushf
jb
add
es
cs
sub
pop
cld
pop
stos
mov
cmp
inc
test
ret
mov
xor
jae
and
mov
mov
pop
sub
aaa
cmc
mov
xlat
mov
push
test
push
mov
jbe
dec
pusha
mov
stos
ret
adc
push
and
dec
cmc
sub
fbstp
ss
jle
and
pop
cwde
icebp
hlt
stc
push
cli
cmps
(bad)
jle
pop
adc
gs
jecxz
out
sbb
daa
scas
push
frstor
in
sub
jnp
arpl
mov
xchg
xor
sub
stos
(bad)
mov
inc
jmp
daa
(bad)
stos
lods
xor
add
retf
sbb
sbb
pop
(bad)
das
mov
retf
sub
imul
and
dec
pop
out
in
sub
mov
add
mov
pop
(bad)
pop
sub
mov
mov
push
std
pop
pop
retf
(bad)
xchg
and
adc
popa
jno
or
fisttp
add
jmp
mov
nop
mov
mov
or
aas
xchg
or
cdq
fdivr
cwde
pop
cmc
ret
and
lea
ss
mov
jbe
inc
imul
and
fidiv
ret
add
add
jge
push
cmc
ss
in
mov
dec
sbb
cdq
cwde
and
jmp
pop
xchg
cmp
pusha
movs
pop
xchg
imul
jmp
mov
inc
add
or
fstp
mov
data16
fcmovu
inc
out
int3
dec
inc
ret
sub
or
push
lea
scas
mov
adc
ins
mov
add
js
in
inc
test
push
div
cmp
inc
mov
xor
jmp
lea
inc
retf
iret
retf
ins
icebp
arpl
push
xor
ins
jb
popf
mov
inc
nop
movs
lods
pop
lea
mov
icebp
xchg
mov
std
fcomp
test
push
or
scas
loope
jnp
loop
and
pop
sbb
adc
or
xor
or
cmp
cmps
imul
fldcw
out
ficom
ja
mov
mov
out
aad
xlat
dec
push
lods
aas
sub
clc
test
lds
pop
xor
lock
mov
fsubr
ins
jb
ret
jl
jbe
cmc
mov
pop
cmps
cmps
adc
inc
das
rcl
dec
push
in
cmp
mov
adc
and
imul
aad
lea
dec
add
inc
xor
xchg
xor
adc
xor
cmp
test
arpl
sbb
pop
test
mov
add
bnd
xchg
mov
dec
cmp
or
add
and
jo
dec
dec
mov
aad
push
(bad)
fild
jle
cmp
daa
push
sbb
xchg
das
(bad)
and
lea
adc
xchg
ret
leave
dec
jns
sbb
lahf
clc
add
nop
sub
dec
dec
sub
pusha
mov
xchg
scas
cmps
fs
(bad)
fs
push
js
push
or
sbb
test
pop
adc
pop
push
mov
call
xor
jae
iret
push
adc
cmps
lock
add
gs
out
sub
or
jp
scas
xor
inc
cmp
inc
sub
movs
fwait
mov
scas
jmp
pop
fs
sub
jle
adc
mov
pusha
dec
je
icebp
imul
into
add
dec
add
jl
push
aas
xlat
adc
sbb
jp
rcl
xchg
out
nop
sbb
and
rcr
mov
loopne
imul
mov
inc
pop
shr
xchg
or
jns
repz
jns
or
clc
lods
es
iret
xlat
pop
imul
and
mov
inc
dec
dec
jns
mov
mov
repz
movs
movzx
sbb
sub
sub
sbb
fstp
add
imul
push
inc
mov
inc
dec
sar
scas
push
mov
adc
jecxz
stos
mov
inc
add
(bad)
icebp
ja
lock
xchg
cs
stos
loop
inc
in
(bad)
out
mov
jp
test
xor
dec
jecxz
in
jnp
dec
xor
out
xchg
sub
movs
mov
dec
jae
inc
jp
jmp
lea
and
fwait
in
call
(bad)
mov
aad
clc
mov
or
jmp
jle
adc
sub
mov
or
aad
into
lods
inc
aam
jecxz
loope
int
adc
jne
aaa
pusha
and
cmps
xchg
sub
sub
mov
out
xor
call
push
(bad)
retf
adc
xor
mov
js
mov
pop
pushf
sub
push
pushf
sub
loopne
call
xchg
xchg
cld
cmp
jmp
jnp
push
call
inc
mov
and
jae
sbb
(bad)
out
cmp
mov
cwde
push
in
mov
dec
(bad)
mov
inc
lds
test
xor
jnp
into
mov
rcr
inc
fnstcw
sbb
mov
mov
fs
jge
rep
(bad)
cwde
(bad)
scas
in
dec
inc
sbb
adc
mov
dec
fisub
js
test
in
pcmpgtd
push
cs
add
sbb
sbb
sub
add
mov
inc
mov
or
scas
sub
jbe
aad
cld
mov
imul
xchg
inc
xor
dec
sub
mov
pop
out
(bad)
add
arpl
sub
jo
push
pop
repnz
adc
sbb
inc
mov
fcom
cmp
iret
fmul
push
inc
xor
push
test
cmps
ja
scas
inc
xlat
in
adc
xchg
leave
cwde
xor
cli
xchg
and
fcmove
xchg
cdq
push
push
sub
popa
ret
ins
push
js
sbb
sti
sbb
adc
cmp
lahf
xor
mov
cmp
xchg
sbb
inc
mov
(bad)
pop
pop
xchg
addr16
jle
test
repz
pop
push
cmc
gs
in
ss
pop
xchg
retf
clc
adc
mov
adc
mov
inc
sbb
or
ja
mov
cwde
(bad)
retf
aam
inc
pop
xlat
pop
jmp
bnd
stos
pusha
retf
(bad)
jmp
push
mov
push
push
fdiv
loop
or
inc
fcomp
mov
ss
mov
pop
loop
and
pushf
mov
dec
and
ss
inc
fistp
push
mov
jecxz
sar
jbe
lock
hlt
xchg
jl
sbb
aam
push
sub
movs
repz
es
dec
jmp
inc
scas
ins
pop
pop
int
popf
jle
mov
cmp
retf
dec
xchg
mov
sbb
retf
mov
dec
or
jg
out
mov
cmp
mov
cmc
dec
repnz
mov
xor
push
push
jb
mov
cmp
pop
and
scas
bound
cmps
pop
test
and
or
add
and
mov
sbb
ja
mov
gs
mov
jae
pop
test
adc
add
xor
xchg
or
cmp
cmp
bound
mov
dec
dec
inc
fbstp
repnz
fld
push
pusha
push
std
pop
mov
push
bound
fnstcw
inc
and
push
dec
and
ror
in
loop
mov
mov
test
pop
adc
sahf
mov
in
iret
sbb
mov
jl
xor
ret
fld
retw
test
es
pop
push
aad
out
pop
outs
leave
mov
movs
or
adc
xchg
(bad)
hlt
jl
daa
(bad)
int
mov
mov
mov
xchg
dec
mov
shr
jae
rcr
add
out
(bad)
das
add
push
mov
repnz
mov
pop
das
aas
(bad)
loopne
int
lea
add
ret
push
leave
add
cmps
xor
jo
call
push
bound
je
repnz
fmul
or
push
mul
add
(bad)
lods
(bad)
and
adc
js
sti
and
(bad)
xor
jo
sbb
stmxcsr
outs
inc
cmps
sub
push
adc
cmp
dec
jmp
sbb
ja
xchg
div
into
ja
adc
add
gs
in
jo
pop
sub
jp
sahf
cdq
adc
imul
nop
outs
mov
xor
sub
enter
sub
dec
inc
fs
mov
jno
xchg
aad
mov
shr
mov
imul
mov
(bad)
shl
movs
pop
mov
cwde
test
shl
mov
xchg
pop
and
jae
data16
mov
or
sub
ja
les
stos
or
lds
sar
dec
push
dec
nop
or
pop
add
xor
xor
ret
sub
pop
icebp
xor
pop
retf
mov
(bad)
(bad)
(bad)
scas
or
adc
sahf
push
out
and
sbb
arpl
not
cdq
rcl
dec
mov
fisubr
mov
push
movs
cwde
cmp
mov
or
or
jno
daa
int3
aam
jecxz
pushf
xor
jns
dec
lock
sub
inc
out
js
into
xor
clc
imul
mov
popa
xchg
rcl
adc
inc
mov
into
popa
repnz
jmp
and
and
retf
push
mov
aas
jmp
out
gs
mov
imul
jns
leave
cmp
mov
jns
xor
xor
mov
sub
popf
push
out
xor
xor
dec
adc
jecxz
mov
fs
imul
xor
out
mov
and
cmc
fadd
push
inc
adc
push
popf
and
aad
mov
ins
jmp
jno
in
mov
shl
movs
or
sub
ins
push
push
shr
dec
pop
repz
pop
mov
inc
into
sbb
or
mov
in
arpl
bnd
add
ins
shl
inc
cmps
or
sub
jl
jecxz
adc
xor
cmp
popa
lahf
mov
jmp
cwde
jae
pop
mov
lods
lods
scas
jno
inc
sub
fsubrp
adc
push
sbb
scas
jne
nop
jns
fwait
mov
ja
push
out
jns
scas
aam
mov
or
hlt
or
mov
int
dec
enter
clc
cdq
mov
mov
pop
xchg
test
cmc
das
xchg
loop
push
sbb
jo
scas
mov
mov
out
mov
pushf
(bad)
cmp
mov
jnp
nop
adc
hlt
or
add
add
push
jae
outs
(bad)
lahf
pop
dec
xor
sub
xchg
popf
fs
call
bnd
cli
mov
sbb
pop
xor
cmp
push
in
retf
sbb
lock
ins
inc
jb
mov
mov
dec
sbb
mov
fisub
push
mov
mov
or
inc
lods
pop
push
mov
push
xchg
jae
inc
jne
mov
sub
inc
in
and
pop
add
(bad)
dec
es
in
stc
add
loope
cmp
inc
ins
outs
mov
es
jle
scas
(bad)
rol
adc
mov
ds
fsubp
out
mov
movs
fldenv
dec
xor
(bad)
xchg
test
nop
adc
(bad)
xor
mov
(bad)
fadd
jp
or
outs
out
fwait
sub
data16
cmp
add
sub
call
lods
adc
leave
push
scas
lahf
xchg
lods
out
or
sub
cmp
add
sub
pop
mov
xor
adc
sub
sub
call
out
cdq
xor
dec
js
imul
xchg
scas
dec
dec
mov
xchg
(bad)
ftst
xor
cmp
inc
retf
loope
mov
xor
cmps
push
sub
jo
add
dec
cmp
cmp
arpl
ins
mov
push
nop
jno
sub
fwait
pop
push
push
repz
mov
out
les
push
lods
xchg
(bad)
lock
fucom
shl
xchg
mov
dec
addr16
movs
out
shl
sbb
add
daa
nop
sbb
and
mov
push
lods
loopne
in
loopne
dec
or
in
inc
ss
shr
fstp
or
jp
xchg
cmp
pop
push
out
(bad)
in
push
repz
aaa
in
jb
or
aas
or
push
jl
add
cld
std
cmc
sub
daa
jecxz
sbb
xchg
and
aad
mov
shl
inc
inc
movs
adc
daa
add
aas
mov
jmp
(bad)
sti
fcmovbe
sahf
dec
or
jae
or
push
adc
int3
add
push
cmp
mov
ret
sahf
sar
pop
push
fwait
cmps
mov
lahf
mov
ins
sub
in
loope
jmp
std
hlt
inc
or
sar
cmp
in
scas
test
or
add
fisttp
add
loope
pop
test
jmp
mov
pushf
jae
(bad)
or
sbb
add
repnz
push
jne
and
sbb
push
outs
jp
push
mov
sub
inc
outs
cmp
out
pop
mov
aam
mov
mov
add
pop
fstp
or
loop
pop
adc
popf
pop
ficomp
xchg
movs
addr16
leave
pop
sub
js
mov
(bad)
data16
pop
xchg
lock
xchg
pop
push
out
push
repnz
in
push
mov
rcl
sub
sbb
ins
into
and
mov
imul
in
mul
shr
addr16
leave
scas
or
sbb
push
mov
and
xchg
mov
pusha
inc
push
adc
ficom
and
sbb
push
test
pop
call
dec
jmp
(bad)
sub
and
popf
push
mov
loope
or
rol
push
cdq
cmps
sub
mov
mov
bound
popa
lock
clc
ret
sub
mov
inc
push
jnp
out
jmp
gs
xchg
push
mov
cmps
push
add
jp
push
inc
inc
pop
xchg
xchg
retf
(bad)
sub
dec
jecxz
mov
push
mov
inc
add
jmp
inc
pop
js
pushf
xchg
aad
sbb
mov
mov
das
cmps
mov
jge
sub
fld
sti
leave
sub
out
mov
cmp
jbe
sbb
(bad)
pop
xchg
lods
and
add
outs
mov
xor
mov
fldl2t
js
inc
movs
mov
cdq
(bad)
pop
sub
ins
pop
xchg
leave
jge
xchg
outs
mov
stc
arpl
jmp
pop
arpl
or
std
adc
pop
loopne
out
jae
push
es
mov
ret
jmp
mov
mov
or
cmp
inc
sub
xor
dec
adc
mov
inc
jns
cmp
xchg
nop
push
push
cwde
scas
cli
and
std
or
push
fsubr
mov
test
sti
dec
dec
mov
xchg
popf
pop
pop
mov
mov
test
sar
mov
jmp
dec
ins
stc
jle
stos
fsub
retf
mov
lods
call
fnstcw
xor
fbstp
mov
sbb
ret
or
pop
sbb
popf
push
sbb
mov
loope
inc
jmp
xor
xchg
jmp
lock
test
shr
ret
push
fisttp
mov
stos
cmp
mov
mov
sub
mov
addr16
or
adc
les
in
ror
mov
fsubr
add
add
xor
sub
clc
xor
fucomp
mov
inc
ficomp
pushf
and
(bad)
mov
ins
pop
sbb
inc
outs
jns
mov
or
jbe
xchg
inc
xor
lock
(bad)
cmp
fwait
scas
aad
push
test
div
leave
stos
adc
add
push
shr
jle
in
iret
xor
test
lods
sbb
jns
pop
imul
gs
ja
jb
sbb
pop
mov
mov
mov
adc
xor
imul
ja
cmp
add
xlat
lock
retf
test
mov
cdq
mov
add
and
sbb
and
cmp
clc
mov
rol
jl
loop
dec
ret
push
mov
fadd
adc
push
out
mov
dec
xlat
(bad)
jb
in
lods
mov
clc
aas
cwde
leave
sbb
push
pop
pop
adc
sbb
fisub
and
lea
das
xchg
mov
xor
bound
in
pop
sti
das
pop
cmp
add
lds
das
mov
arpl
mov
xor
outs
int3
xchg
hlt
push
sub
jecxz
enter
pop
mov
mov
and
mov
imul
push
mov
out
push
fmul
xchg
lock
nop
add
dec
mov
cmp
xchg
cmp
out
dec
cli
pop
push
retf
outs
inc
jge
push
repnz
mov
stc
cmp
aaa
inc
push
div
sub
sub
repz
pop
push
pop
fimul
mov
aad
xlat
pop
xchg
mov
push
jmpw
pop
shl
aam
enter
add
cmp
js
aad
xchg
sub
jae
cld
loop
mov
mov
push
pop
xor
retf
push
fisttp
int3
mov
jno
push
pop
pop
test
jmp
inc
jle
loop
(bad)
xchg
adc
out
loope
mov
enter
sub
add
adc
sbb
inc
mov
fld
jb
into
jl
das
idiv
movs
add
mov
mov
or
add
inc
push
cmp
mov
fbstp
xor
jg
mov
stos
mov
dec
add
hlt
xor
pop
repz
inc
cli
(bad)
aad
cli
jg
mov
dec
(bad)
inc
test
sar
xchg
sbb
push
shl
(bad)
adc
add
scas
jp
bound
jecxz
or
and
stos
rol
mov
test
jno
sbb
rol
out
jae
push
out
out
inc
sbb
loope
cmp
cmp
out
je
sbb
ficomp
leave
pop
retf
pusha
xchg
call
mov
imul
imul
sbb
aas
xor
cdq
inc
xor
dec
add
mov
sti
popa
add
gs
jge
mov
sbb
cmp
fistp
ret
cmp
xor
es
xchg
mov
pop
cwde
repz
mov
les
xor
mov
adc
int
lods
mov
not
loopne
xchg
mov
fisub
imul
jg
mov
mov
inc
fimul
inc
push
call
push
popf
adc
dec
sti
loope
into
aas
push
sub
out
into
sub
or
add
out
pop
adc
inc
pop
inc
ss
or
sub
mov
sub
lods
jge
iret
cmp
out
cmp
add
push
inc
movs
sbb
or
push
mov
in
mov
inc
pop
outs
pop
push
cmc
jp
mov
or
add
test
and
call
and
int
(bad)
mov
or
js
mov
ins
jnp
loop
popf
idiv
push
ficom
popf
lss
mov
enter
int3
clc
xor
out
gs
stos
hlt
sbb
stos
outs
add
inc
adc
and
imul
and
jbe
lahf
pop
push
movs
in
vprotb
repnz
adc
fwait
add
clc
call
add
das
cmp
dec
or
into
(bad)
lock
mov
push
fidivr
sub
fidiv
pop
push
pop
gs
jmp
jg
scas
mov
bswap
add
shl
push
cmc
retf
mov
fistp
lock
mul
jg
add
in
dec
sbb
jno
hlt
jb
js
push
xchg
outs
dec
in
fwait
dec
sub
(bad)
xchg
jge
inc
add
cmp
sub
pusha
or
jle
adc
pop
ret
cmp
jns
add
cmps
dec
movs
das
hlt
cdq
push
mov
and
daa
lock
movs
and
jb
lock
cmps
ja
call
and
jmp
pop
int
in
retf
pop
pop
test
repz
and
push
imul
fucomp
push
mov
push
fs
cmp
scas
mov
add
sbb
mov
jne
sar
scas
aas
loopne
stos
push
fnstsw
xchg
test
lea
ror
ret
and
xor
xor
jae
in
xchg
jg
std
cmp
add
xchg
test
jb
call
mov
jmp
dec
hlt
ret
mov
mov
cmp
mov
cdq
int
in
outs
sbb
outs
mov
pop
jnp
dec
inc
ss
rep
les
sub
inc
leave
into
popa
pushf
pmullw
mov
jb
inc
repnz
cmp
or
outs
lock
pop
pushf
jnp
add
push
mov
dec
cld
mov
leave
inc
gs
and
xchg
xchg
xchg
ds
mov
sbb
mov
dec
pop
ja
clc
xchg
dec
inc
ret
add
std
jno
nop
imul
ja
cmp
pusha
mov
sbb
shl
lds
out
(bad)
pop
xor
into
aaa
pop
sub
cli
cld
rcr
adc
cwde
sbb
jo
xchg
sub
add
(bad)
add
sub
mov
ja
sub
xor
imul
xor
pop
jmp
int3
jp
stc
dec
cmp
je
or
sbb
dec
pop
(bad)
stc
or
outs
jae
mov
sub
xor
adc
xchg
loopne
test
jnp
arpl
inc
cdq
xchg
test
xor
sbb
push
and
xor
aam
in
ds
dec
push
jbe
les
mov
mov
test
cwde
test
sbb
mov
push
iret
ins
int
(bad)
and
lods
xchg
sub
out
ds
inc
inc
add
push
test
push
mov
inc
fadd
sti
pop
push
loop
in
sub
test
push
mov
xor
hlt
adc
stc
jl
imul
pop
add
pop
cmp
ds
popf
mov
mov
enter
ss
dec
cdq
popa
adc
mov
xchg
push
push
xor
inc
sub
dec
push
pop
pop
cwde
ins
retf
jmp
pop
mov
loop
push
iret
cwde
fisub
dec
cmp
(bad)
in
xor
push
and
adc
cmp
cmp
repz
dec
or
out
pop
cmp
and
fcomp
retf
push
pop
push
mov
jae
cdq
ret
jb
push
test
jmp
adc
pop
sub
sbb
in
mov
shl
shl
pop
push
push
inc
pop
ins
dec
jg
(bad)
push
sbb
repnz
mov
sub
fadd
sub
jno
pop
int3
pop
mov
adc
ror
arpl
cmp
pushf
retf
add
fwait
mov
or
pop
push
adc
div
push
xchg
inc
adc
jnp
jle
stc
shr
dec
fdivr
mov
sub
or
xchg
lods
pop
mov
push
add
jb
xor
out
ins
das
sbb
jl
cld
imul
mov
dec
fcom
movs
aad
mov
and
sar
adc
bound
iret
inc
inc
push
int
mov
loope
mov
repnz
xchg
lods
jns
out
mov
xor
xor
push
dec
clc
dec
ss
pop
cmps
adc
imul
ficomp
lock
dec
jbe
add
cli
das
inc
pop
lods
aam
arpl
mov
jge
add
sbb
je
sbb
push
adc
dec
mov
xor
fucomp
adc
pop
(bad)
pop
ins
sub
cmp
cdq
mov
sub
mov
or
sub
pop
xchg
mov
and
and
les
adc
jnp
outs
sti
es
and
add
mov
xor
repz
int3
in
dec
outs
data16
shr
xor
adc
pop
cmp
pop
lods
xchg
mov
xchg
(bad)
cmc
mov
and
push
addr16
xchg
mov
in
xchg
pop
xor
jae
xchg
out
push
push
xchg
scas
inc
sbb
ja
out
dec
push
push
stos
cmp
loopne
fs
addr16
mov
movs
sub
sub
sub
stc
aam
scas
cmp
jne
jmp
repz
pop
inc
jmp
es
xchg
xchg
add
or
xor
and
call
or
mov
in
or
jp
std
xchg
pop
std
js
aas
mov
jp
and
xor
adc
push
push
mov
loope
dec
stos
dec
inc
dec
movs
pop
xor
cmp
jmp
call
jmp
add
pushf
int
push
cmp
pop
mov
mov
int3
test
jne
dec
jnp
test
push
push
push
into
aad
push
icebp
ret
push
dec
adc
jnp
mov
(bad)
sub
mov
mov
mov
in
ins
rcr
xor
pop
dec
push
dec
xchg
stos
vcvtps2pd
sub
repnz
sub
inc
mov
push
and
lds
in
mov
sar
sbb
jg
mov
xchg
fst
and
int
sbb
xchg
(bad)
adc
cmp
sub
xor
test
mov
xchg
rcl
mov
(bad)
jo
popf
std
and
inc
sti
and
adc
add
je
dec
in
adc
enter
int
cld
aam
lahf
inc
inc
pop
call
jns
out
daa
xor
movs
dec
sub
xchg
xchg
fist
push
std
imul
pop
sub
iret
sbb
leave
cld
push
pop
leave
into
push
in
lock
retf
(bad)
ror
shr
and
cmp
adc
loop
cmps
les
add
pop
iret
out
shr
aas
pop
iret
(bad)
fld
pop
mov
ins
outs
push
jne
das
inc
aas
lds
and
inc
nop
or
ds
add
lds
lods
not
sbb
js
in
sti
imul
cdq
push
js
dec
lahf
iret
pop
mov
enter
mov
and
dec
clc
xlat
push
xchg
(bad)
repnz
(bad)
and
jne
xchg
cmp
stos
pusha
jno
ds
loop
sbb
stc
test
jnp
imul
dec
ins
inc
sbb
outs
sub
(bad)
sti
xchg
imul
xor
jno
icebp
mov
lods
mov
adc
ficom
add
out
or
cmp
push
or
popa
or
arpl
pop
inc
es
jns
xlat
pusha
add
or
fmul
push
stos
hlt
sahf
mul
jnp
push
js
mov
xchg
fidivr
jno
cmps
xor
xlat
in
in
inc
jg
loop
xor
add
out
imul
jno
out
lods
pop
jle
push
ss
sti
(bad)
js
dec
ja
dec
push
push
sub
mov
fsub
cmp
repnz
cld
dec
push
lea
sbb
dec
shl
xor
xor
mov
aas
test
(bad)
out
aad
pop
bound
and
push
and
fbld
hlt
xor
lock
imul
dec
outs
cmp
mov
push
sub
test
mov
daa
xchg
adc
add
fistp
pop
pop
push
loope
pop
mov
xchg
or
jmp
add
sub
sub
not
(bad)
popf
dec
fsub
adc
inc
ficom
shl
cmp
pop
lahf
sar
mov
out
in
(bad)
or
stos
push
retf
push
addr16
xor
add
clc
clc
lahf
xor
int
pop
or
cli
xor
fld
in
sub
fs
arpl
cli
mov
or
(bad)
sbb
mov
dec
inc
aaa
pop
mov
fstp
std
cmp
pop
sar
dec
(bad)
and
arpl
in
hlt
adc
pop
inc
or
into
test
mov
pop
cdq
dec
popf
mov
inc
push
aad
pop
fild
inc
lea
(bad)
ds
retf
(bad)
sbb
iret
xchg
shl
add
xor
mov
not
leave
test
lock
cmc
dec
mov
inc
cdq
(bad)
in
mov
out
jo
test
dec
mov
jmp
jnp
add
adc
inc
fwait
mov
sub
bound
jmp
and
and
jo
push
retf
and
mov
pushf
jne
das
je
jo
rcl
add
arpl
popf
ss
movs
jge
nop
xchg
push
jmp
push
push
push
xchg
sbb
mov
jle
fwait
cld
in
cmp
add
enter
xor
mov
mov
sbb
and
jl
sub
inc
push
cmp
adc
gs
jg
push
xchg
push
cwde
imul
nop
daa
stos
inc
stos
dec
mov
and
jle
stos
in
rcr
cmp
fcmove
push
movs
and
mov
inc
jne
cmp
in
int
jp
mov
clc
sbb
cmc
sbb
pop
cmp
cmps
mov
jbe
mov
clc
mov
or
sub
and
xlat
bound
xchg
nop
clc
mov
aas
sar
punpckhbw
pushf
mov
inc
xchg
sbb
jge
cmp
cmps
inc
pusha
jo
cmp
sbb
push
inc
mov
in
mov
mov
lds
repnz
ins
sub
aad
or
ins
fldcw
mov
int
or
ja
push
int3
shl
je
int
loope
sbb
sub
fstp
add
lea
pop
pop
add
leave
jns
jecxz
pop
mov
xchg
cmp
imul
into
retf
sahf
ss
pushf
rcr
call
mov
inc
xor
or
add
xor
xchg
cdq
and
sbb
lahf
xlat
pop
leave
push
aam
jno
sbb
mov
push
jo
(bad)
test
sub
test
mov
pop
pop
xchg
fnstcw
adc
jp
mov
aaa
ins
mov
iret
(bad)
jae
xor
dec
dec
fidivr
or
pop
cli
in
mul
sti
cmps
dec
hlt
lea
icebp
bound
call
mov
test
mov
sti
jae
not
and
mov
push
adc
xchg
mov
jns
and
(bad)
cmp
and
jle
js
retf
jl
mov
jno
lods
test
cmps
lods
mov
push
jmp
inc
jg
mov
repnz
xchg
and
popa
sub
lea
jbe
sahf
aas
sbb
mov
push
xor
sub
retf
or
adc
adc
dec
adc
inc
ss
(bad)
xlat
jle
xor
mov
dec
fs
dec
sar
rcr
inc
sar
add
shl
cwde
and
and
movs
retf
jl
ds
rcr
imul
xor
call
sbb
xchg
jg
pop
ins
inc
sbb
cmc
dec
and
mov
int
sub
or
icebp
pop
push
cmp
mov
ss
inc
cld
sbb
ja
call
test
stos
ficomp
clc
jns
mov
es
cmp
mov
cmps
and
sti
imul
jg
fild
es
lea
mov
cmps
cmp
imul
cmp
les
pop
js
adc
inc
pop
sbb
mov
and
adc
imul
xlat
push
mov
sti
pop
sbb
int3
js
idiv
aam
xchg
outs
jmp
loope
es
ds
mov
loope
adc
shl
repnz
jb
pop
cmp
hlt
sbb
push
stos
popf
shr
not
retf
push
sub
out
dec
outs
mov
push
pop
add
adc
jl
call
int3
adc
mov
ret
mov
mov
rol
test
retf
ins
daa
and
imul
out
mov
cld
(bad)
jl
cmp
push
test
xchg
jl
mov
or
push
rcl
(bad)
mov
test
or
jns
popf
cmp
(bad)
lahf
sbb
fsub
add
sti
cmp
cli
data16
dec
fdiv
jmp
dec
adc
repz
fwait
or
shld
lea
mov
ds
(bad)
(bad)
sbb
mov
push
lds
sbb
xchg
pop
int3
push
xlat
out
pop
mov
dec
lock
iret
clc
rol
(bad)
addr16
lods
loop
ror
push
(bad)
cmp
aaa
add
mov
mov
repz
xchg
inc
cmp
cwde
dec
dec
mov
jbe
or
mov
ins
cmp
dec
lock
and
fcomp
xchg
aad
loope
jns
sub
lahf
add
(bad)
(bad)
push
dec
sub
dec
js
cmps
push
cwde
nop
pop
imul
sbb
pop
jecxz
sub
xchg
sar
pop
push
adc
adc
push
cmp
mov
inc
xchg
push
outs
ss
dec
push
pushf
ret
xchg
pusha
or
les
outs
dec
adc
jl
xchg
shl
scas
ror
arpl
jb
mov
jo
xor
ins
add
repz
shl
jbe
jp
test
fs
pop
xor
dec
inc
mov
adc
inc
outs
pop
loop
es
fcmovb
xchg
hlt
pushf
push
jbe
sbb
push
lahf
jle
out
jo
inc
sub
and
test
jecxz
out
cmp
xor
xor
and
push
pop
ins
test
cmp
sub
jmp
xchg
xor
fistp
adc
xchg
adc
mov
retf
cli
aad
jmp
push
adc
xchg
mov
clc
mov
test
cdq
cli
mov
jmp
aaa
fwait
pop
xchg
xchg
adc
fwait
ins
leave
adc
test
xor
and
aam
fsub
adc
in
fs
inc
jmp
loop
arpl
cdq
cmp
dec
pop
jmp
popa
ret
push
movsx
stos
ror
stc
sub
aas
pop
cmc
xor
test
jp
test
mov
shl
lods
nop
jne
arpl
in
mov
jmp
sub
ins
jo
retf
inc
xchg
mov
add
out
jbe
ins
inc
add
push
mov
or
into
loop
lds
jb
adc
mov
gs
jmp
and
jg
mov
cmps
or
mov
out
aad
pop
ror
dec
(bad)
shl
jnp
xchg
stos
cwde
ror
test
popf
movs
div
sub
in
sar
and
retf
pop
loope
shl
or
xchg
fisubr
aad
sub
sub
xchg
sub
cli
or
ins
mov
lds
shr
sbb
loopne
popa
lea
or
out
cmp
sub
xor
leave
pusha
js
mov
mov
aam
dec
lods
adc
pop
pop
add
nop
sub
fcomp
and
loop
xor
jge
and
mov
add
rol
imul
fs
sbb
cmp
into
adc
sbb
aas
addr16
retf
jo
dec
shr
jg
mov
mov
lds
stos
adc
add
nop
jle
iret
pushf
or
les
inc
sub
bound
ficom
xchg
mov
adc
jns
aas
clc
sub
mov
sahf
in
sbb
scas
sbb
cmp
fimul
out
adc
js
into
loope
push
add
shrd
movs
xchg
mov
clc
(bad)
sahf
xabort
adc
mov
dec
mov
push
mov
icebp
cdq
xchg
shr
mov
jmp
cmps
repnz
leave
jnp
sbb
fstp
pop
sub
cmp
cmp
(bad)
mov
std
xchg
call
rol
out
xchg
dec
mov
dec
sbb
cmc
scas
lahf
push
jmp
adc
mov
sbb
(bad)
popa
icebp
daa
cmc
push
add
ins
or
lds
int3
outs
mov
jo
xchg
dec
push
ret
jl
jbe
mov
xchg
fst
sub
jl
inc
je
mov
out
cs
or
fcomp
enter
es
pop
neg
mov
xchg
out
imul
(bad)
xor
jecxz
dec
mov
mov
sub
in
sub
les
mov
cmp
sahf
dec
add
or
cmc
xchg
xchg
lods
xor
fcmovne
int3
sti
ds
pop
repz
or
mov
xor
push
lods
mov
push
xor
retf
int
push
sbb
sbb
jae
sbb
dec
inc
cmp
xor
xor
jmp
or
fisub
ret
jne
pop
fidivr
mov
mov
in
inc
in
xchg
jmp
(bad)
dec
jle
mov
jle
pop
xor
jno
or
retf
mov
in
iret
mov
ds
mov
popf
lods
in
out
cmps
add
mov
mov
xchg
cli
xor
ret
sahf
push
pushf
dec
xor
inc
ret
xchg
sub
add
add
xchg
adc
sti
sub
or
pop
cmp
xchg
jae
xchg
and
push
push
retf
xor
add
call
fnsave
imul
stos
das
jno
xor
mov
cmp
mov
scas
scas
and
fwait
inc
and
jle
push
mov
loope
sbb
fcomip
neg
scas
les
cmp
sbb
sbb
je
ret
xchg
and
dec
add
mov
jae
neg
mov
(bad)
cmc
(bad)
fwait
pop
movs
es
test
ja
inc
test
jo
icebp
fldenv
xor
dec
scas
movs
pop
dec
add
xor
nop
xor
push
inc
pop
(bad)
fstp
pop
or
std
into
sbb
xchg
xor
push
mov
aas
ret
fcmovnb
repnz
xchg
mov
test
arpl
mov
lahf
pop
rol
iret
cmps
jle
cmp
cmp
sbb
push
mov
call
out
sub
and
ja
dec
fiadd
repz
rol
jae
cmp
and
mov
dec
jo
or
imul
xchg
push
cmp
fdiv
dec
cmp
in
adc
xchg
rcl
loop
jae
in
pop
cwde
ins
cdq
mov
pop
repz
scas
push
ret
or
sub
xchg
retf
cmp
mov
arpl
mov
in
mov
popa
scas
cmps
pop
arpl
lods
adc
sbb
retf
sub
or
and
mov
jae
fidivr
loopne
cwde
loop
dec
out
jmp
ins
sar
cmp
call
mov
enter
sahf
cmp
sub
mov
xchg
xchg
adc
ret
sub
out
xchg
mov
fwait
mov
test
or
cmps
add
cmp
into
mov
gs
icebp
fldcw
stos
out
test
nop
stc
push
mul
es
pop
push
sbb
push
mov
cwde
sahf
jg
fadd
mov
(bad)
xchg
and
mul
in
dec
add
stos
mov
lea
xlat
(bad)
js
mov
stc
dec
sahf
imul
or
inc
mov
fistp
xchg
xor
pop
test
retf
adc
xor
shl
jbe
stos
inc
pusha
test
cmp
movs
(bad)
jg
push
xor
mov
aam
call
shr
dec
dec
movs
pop
pop
adc
inc
mov
out
aad
movs
mov
aam
jae
cld
std
adc
enter
dec
or
mov
call
mov
add
jmp
movs
icebp
inc
push
mov
shl
retf
out
jecxz
inc
push
jge
or
stos
(bad)
sbb
mov
je
or
mov
mov
mov
jg
js
mov
not
and
jns
imul
mov
shr
frstor
xor
test
and
push
js
mov
xchg
jbe
aas
addr16
push
push
xchg
ins
xchg
cs
das
pop
push
or
inc
cmc
sti
in
push
scas
xchg
xor
retf
loop
mov
call
or
inc
iret
int3
scas
cmp
ss
jp
pop
(bad)
cmp
sub
add
rol
sbb
aaa
pop
inc
sbb
cdq
shr
cli
add
cmp
mov
out
xchg
inc
push
cmp
jp
mov
mov
sub
inc
jns
mov
xlat
das
mov
or
adc
mov
sbb
sti
adc
out
xor
lds
add
xchg
cmp
cmp
frndint
add
test
je
push
(bad)
outs
pusha
mov
cmp
mov
and
dec
jge
loopne
or
dec
fld
scas
sbb
sub
sub
daa
or
lahf
xchg
mov
add
pop
push
out
or
dec
out
jg
loopne
mov
stc
ja
jp
aaa
sar
mov
sbb
push
bound
iret
addr16
inc
loope
sbb
push
adc
or
idiv
ins
and
adc
in
dec
rcl
je
js
dec
sbb
or
mov
or
xchg
adc
sub
xchg
mov
int
and
add
push
xlat
sbb
push
cmc
sub
in
cmp
jb
ror
mov
xchg
int3
fdivr
call
(bad)
clc
mov
enter
xor
sub
in
and
mov
sbb
mov
repnz
(bad)
in
mov
mov
adc
(bad)
je
cmp
out
and
(bad)
jmp
popf
jo
jns
sbb
call
sbb
ss
lods
inc
push
jae
add
(bad)
cli
jnp
adc
jge
push
add
outs
sbb
xchg
add
ret
(bad)
pop
jnp
div
push
sbb
mov
or
loope
test
jmp
xor
dec
out
sbb
or
sub
adc
cmps
push
push
movs
and
(bad)
gs
(bad)
fidivr
ins
push
mov
mov
dec
mov
ret
enter
mov
nop
lods
fadd
dec
adc
xchg
jecxz
in
mov
cmp
and
xlat
cmps
mov
sbb
mov
pop
into
mov
pop
jne
sub
int3
aad
sub
adc
adc
push
pop
inc
push
jmp
xor
push
inc
imul
xor
mov
in
out
movs
lahf
jle
xor
dec
mov
nop
popa
in
aaa
ret
dec
cmp
sbb
fcomp
jmp
mov
(bad)
cmps
outs
into
mov
cmc
cmp
jmp
clc
hlt
inc
jmp
movs
ja
jb
stos
das
push
add
repz
pop
pop
(bad)
repnz
pushf
cmp
mov
pop
xor
pushf
(bad)
pop
std
rol
mov
sahf
ror
std
ss
add
or
cmp
sub
leave
enter
(bad)
fsub
outs
int
stos
sbb
inc
popf
test
cmps
inc
pushf
pop
retf
inc
pop
ret
scas
addr16
pop
jecxz
cmp
scas
movs
mov
push
lock
(bad)
adc
leave
outs
pop
cdq
daa
xchg
call
pop
fimul
push
sbb
mov
call
dec
dec
or
xor
jo
jl
loopne
aam
shr
inc
jno
mov
and
call
leave
stc
mov
fs
inc
push
nop
idiv
fnstsw
jge
mov
cmp
sub
dec
push
sti
neg
jecxz
fmulp
jp
mov
mov
out
push
arpl
fstp
fidiv
mov
or
inc
mov
pop
mov
cmp
pop
test
jns
inc
and
js
out
cmc
adc
push
mov
push
sub
adc
call
push
pushf
call
xchg
aaa
mov
into
inc
retf
lea
pop
pop
movs
loop
test
rcr
les
repz
int3
jns
cmp
mov
in
retf
mov
mov
sbb
xchg
adc
mov
sahf
pop
je
cwde
push
or
shl
scas
sub
lods
outs
push
inc
xchg
repnz
cmp
pushf
hlt
cmc
and
and
pushf
test
fbstp
sar
clc
or
or
idiv
dec
lods
mov
sub
push
stos
scas
mov
and
pushf
jg
jle
mov
pop
mov
imul
(bad)
jg
popa
mov
fnop
mov
repnz
push
leave
fidiv
outs
sub
mov
ja
(bad)
fdivr
jl
push
repnz
sub
pop
mov
scas
arpl
pushf
out
daa
lds
ja
mov
into
add
cwde
inc
mov
sub
add
arpl
sbb
in
fwait
and
push
add
or
dec
mov
rcl
jbe
repnz
inc
pusha
jmp
mov
sbb
and
rcl
aam
imul
mov
clc
in
inc
sbb
mov
into
jecxz
repnz
sar
test
out
bound
out
lds
pop
fs
xor
scas
sub
in
leave
js
call
clc
(bad)
(bad)
std
or
cdq
inc
xor
in
xchg
jne
dec
loop
push
mov
gs
dec
and
ins
pop
aas
push
addr16
jae
sub
jno
daa
movs
jbe
xor
sub
jno
repz
mov
jmp
pop
das
sbb
or
push
mov
push
sar
sub
dec
sar
shr
or
push
cmp
add
mov
pop
cmc
lods
(bad)
popa
loopne
div
pop
jmp
test
bound
and
sub
xor
in
pop
or
add
pop
dec
(bad)
mov
rcl
jo
fsubrp
ds
dec
jp
inc
jns
add
gs
fbld
daa
sub
jmp
jo
lods
hlt
sub
loope
mov
pop
test
xchg
out
adc
lods
fsubrp
aaa
nop
jnp
ins
and
inc
dec
shl
inc
dec
popf
dec
sbb
mov
pop
movs
test
stos
or
scas
pop
xor
sub
inc
mov
xor
cli
add
xchg
inc
test
mov
call
cli
ret
fdiv
push
xlat
mov
int3
mov
cmp
jb
and
inc
outs
jbe
push
pop
gs
ins
add
push
sahf
pop
test
jno
shl
scas
imul
pop
mov
push
(bad)
mov
out
ss
mov
or
movntps
mov
or
cmp
ss
jb
lds
pusha
mov
lds
gs
push
mov
mov
inc
int3
push
lods
fbld
sub
in
mov
shl
cld
test
pop
adc
pusha
les
push
gs
sub
sub
stc
mov
call
push
pop
xor
dec
mov
dec
ret
pop
jnp
ja
jmp
lahf
cli
adc
xchg
sub
pusha
cmp
mov
or
loop
inc
pushf
adc
jp
daa
cli
sti
inc
call
mov
cdq
scas
xor
sub
pop
xchg
jo
mov
aas
cmovo
and
scas
sbb
out
dec
or
fidiv
fst
daa
mov
xor
rcl
or
pop
ins
mov
std
repz
push
jno
jns
sub
cmp
test
jge
fs
mov
loopne
cwde
sub
retf
mov
and
dec
movs
push
(bad)
loope
mov
mov
mov
add
xchg
iret
xor
xor
cwde
xor
lock
inc
jo
adc
mov
pop
jle
cmp
ret
pop
lahf
in
mov
cmp
push
mov
cmp
and
in
sbb
cmp
sti
xor
push
xor
(bad)
xor
jecxz
dec
sbb
rcr
sbb
repnz
push
or
mov
test
xor
xchg
push
clc
jne
call
call
mov
or
push
ja
mov
xchg
cmp
out
mov
fptan
retf
push
aam
mov
ret
jno
push
in
ins
inc
xchg
mov
push
jb
mov
ins
adc
ret
imul
cld
cmp
sbb
and
cmc
cmp
shr
or
daa
clc
aaa
dec
mov
fisttp
inc
pop
xor
pusha
push
fimul
inc
lahf
jg
retf
sbb
pusha
cmc
jl
sub
ficom
loop
int3
push
mov
add
les
leave
popa
ret
add
scas
sub
and
fsubr
fs
pop
inc
int
mov
sbb
pushf
arpl
cmp
scas
bound
cdq
push
cmps
mov
pushf
xor
sti
(bad)
jl
sbb
mov
data16
xlat
add
xchg
stc
cmp
xchg
jno
pushf
pop
lods
mov
neg
lods
pop
fdivp
add
pushf
std
adc
xchg
sub
or
xchg
xor
jg
sub
dec
sar
add
dec
cmp
hlt
sub
aas
out
popf
out
loope
je
data16
mov
out
xchg
out
sbb
(bad)
jmp
in
mov
out
cmp
ins
xor
pop
outs
pop
clc
adc
jmp
(bad)
cdq
icebp
push
shl
or
out
xlat
repnz
sti
xor
imul
lods
ficom
push
or
cmc
mov
or
cli
xor
je
cmp
jp
add
in
js
inc
or
idiv
sar
mov
cwde
ret
mov
jge
pop
(bad)
mov
adc
std
lahf
rcl
cwde
bound
ja
sbb
sbb
aaa
push
pop
mov
push
inc
data16
xor
popa
cmp
lahf
pop
icebp
popf
test
inc
sbb
mov
leave
or
mov
mov
mov
imul
mov
push
cli
cli
pop
cs
mov
mov
inc
daa
xchg
pop
jmp
jnp
mov
clc
stc
add
push
and
mov
jecxz
cld
mov
push
jno
movs
mov
mov
push
bound
jo
pop
add
ins
mov
mov
loop
lock
jb
jl
mov
sbb
into
fs
add
sub
dec
push
xor
push
jmp
mov
loopne
mov
fistp
jp
cmps
push
add
rol
and
cld
movs
retf
retf
adc
lahf
inc
pop
sub
fidivr
call
sub
push
push
xlat
push
pop
rdpmc
sbb
cmp
pop
jbe
aam
jle
jmp
aaa
push
ds
(bad)
cs
lock
(bad)
adc
fsubr
xor
jns
cmp
jl
jnp
cmp
push
cmp
jmp
nop
sbb
jb
inc
in
and
fmul
leave
cmp
fld
sub
sbb
lahf
in
sar
(bad)
adc
jge
iret
sub
icebp
mov
hlt
out
mov
push
outs
inc
es
pop
stos
dec
sbb
pop
fimul
or
mov
(bad)
rol
movs
mov
pop
jp
(bad)
out
(bad)
cdq
cmc
adc
cmp
jmp
mov
jmp
jge
sbb
push
sbb
outs
in
enter
sub
push
fs
add
dec
jge
je
sbb
push
lods
adc
add
sbb
or
cmp
imul
cmp
sub
fwait
pcmpeqd
adc
mul
push
pushf
scas
xchg
cmc
inc
sbb
pop
xor
stos
mov
data16
pop
cmc
pop
ret
xlat
mov
call
mov
push
call
movs
sbb
xlat
int
in
jbe
aas
cmp
or
pop
inc
xor
lods
addr16
aas
stos
lahf
mov
inc
movs
fist
jg
fcomp
pop
adc
mov
jmp
unpckhps
and
jns
jo
les
xor
addr16
jg
xor
dec
out
iret
jnp
outs
cmp
fcomp
rcl
aas
hlt
push
in
pop
inc
adc
lds
lods
clc
lea
(bad)
push
test
push
pop
les
add
shl
xchg
js
xor
lds
sbb
or
adc
xchg
mov
mov
jae
sub
ins
or
mov
sub
imul
in
or
jge
jb
(bad)
jmp
pusha
pop
cs
enter
icebp
sub
jno
lahf
dec
inc
stos
scas
out
fadd
mov
(bad)
inc
and
outs
push
sahf
dec
add
xlat
jae
push
dec
pop
cmp
test
stc
in
les
pop
and
mov
lahf
jae
mov
(bad)
mov
cmp
je
(bad)
sti
jge
jno
xchg
cmc
shl
jg
jle
daa
and
sahf
icebp
in
fsubr
aas
mov
sbb
mov
scas
cmps
xchg
mov
cmps
sub
jns
adc
in
scas
push
jns
and
in
jnp
push
cmps
imul
mov
dec
test
neg
mov
pop
sub
scas
cli
sti
mov
cli
cmp
dec
mov
adc
push
cdq
xchg
bound
sti
push
arpl
mov
jbe
sub
call
jnp
andps
inc
dec
inc
or
dec
(bad)
aaa
inc
xlat
add
test
inc
fcmovne
mov
inc
jnp
inc
cmc
xor
jg
mov
shl
pop
daa
lds
out
ss
pop
xchg
xchg
leave
or
jo
sub
gs
sbb
clc
push
in
and
mov
lock
fld
jge
fwait
xor
sar
repz
scas
sbb
push
cld
adc
pushf
or
mov
repz
popa
aas
dec
pop
mov
pushf
xlat
and
call
rol
bound
leave
mov
pop
adc
stos
aas
fsubr
jno
test
sub
mov
push
dec
cwde
jge
jns
fs
adc
lahf
mov
inc
bound
lods
lods
and
jl
ds
push
mov
push
imul
xor
aas
ins
je
stos
pusha
cli
mov
cmps
xor
push
in
lds
jmp
in
pop
jns
sbb
dec
sti
repz
cmc
test
mov
scas
mov
ret
sub
jg
push
inc
xor
push
loopne
pop
mov
add
xchg
mov
aam
add
jmp
(bad)
pop
test
jg
outs
lea
sar
mov
push
clc
sub
cmp
retf
mov
loope
push
iret
std
jnp
inc
xchg
push
and
ins
adc
cmps
or
dec
inc
lods
jb
repnz
fild
jno
nop
in
cli
inc
add
int3
idiv
das
arpl
stc
aam
(bad)
test
xchg
and
jmp
dec
sti
out
mov
xchg
pop
mov
js
jge
fcom
ror
push
enter
xor
test
add
pop
inc
fdiv
loop
js
sahf
retf
pop
inc
popf
sbb
jl
clc
pushw
mov
and
inc
ins
mov
jg
xchg
lods
sub
xchg
in
mov
mov
cli
xchg
std
(bad)
fist
in
add
(bad)
std
xchg
in
inc
in
jecxz
mov
mov
pop
shl
push
jmp
btr
push
adc
xchg
and
jae
push
pop
mov
xchg
ror
cdq
sub
sub
nop
jbe
enter
mov
imul
fdiv
jnp
and
in
push
inc
lea
push
sbb
mov
and
push
mov
aam
adc
inc
(bad)
jne
sbb
(bad)
mov
pop
out
sub
and
neg
bound
or
pop
push
movs
stos
inc
loope
cmp
or
jmp
mov
mov
inc
ds
fwait
js
(bad)
and
clc
inc
inc
arpl
loopne
out
fnstcw
push
ja
xchg
mov
mov
outs
fxch
sbb
stc
pushf
pushf
jg
sub
cmps
mov
stos
(bad)
mov
lock
pop
(bad)
dec
(bad)
adc
fldcw
call
pop
std
(bad)
inc
pop
popf
add
xchg
je
cmp
bound
aam
cld
cmc
xor
push
loop
out
mov
in
mov
enter
xchg
inc
repnz
dec
inc
pop
cld
and
cld
sbb
in
cld
push
cmps
sub
outs
push
stos
ds
xor
call
ins
call
pop
cdq
scas
fstp
lock
sbb
(bad)
push
pop
and
xchg
gs
jmp
in
xchg
or
mov
mov
push
push
xchg
jns
and
mov
enter
push
or
mov
lods
nop
nop
(bad)
mov
inc
or
fdivr
mov
mov
out
fild
sbb
ret
aas
inc
test
popa
inc
cmc
movs
shr
sub
inc
push
xor
js
xor
rol
jae
ret
pop
hlt
pop
adc
mov
mov
sub
or
jns
adc
mov
rol
mov
xor
push
retf
mov
and
cmp
mov
clc
sti
dec
pushf
js
jl
cmps
out
xor
jae
xor
lds
inc
jnp
icebp
ret
sbb
jb
pusha
mov
lock
xchg
or
pop
dec
jae
aas
cld
outs
fld
xchg
or
push
retf
sbb
(bad)
hlt
cli
pop
pop
(bad)
jmp
clc
mov
add
push
popw
mov
mov
cwde
icebp
mov
int3
in
mov
mov
inc
and
jne
neg
jg
ja
xor
es
fdiv
cmps
jmp
repz
imul
test
xor
lahf
cld
das
lds
sti
mov
dec
mov
add
add
push
and
jbe
xor
inc
out
lods
add
sbb
out
cmps
pop
leave
int3
mov
dec
repnz
test
push
mov
lock
mov
inc
mov
das
dec
in
retf
inc
pop
push
(bad)
aam
xor
xor
data16
mov
cdq
mov
adc
mov
aas
neg
clc
sbb
loopne
adc
push
or
pushf
mov
int3
cdq
pushf
sub
fisttp
xor
sub
sub
mov
cwde
adc
inc
ins
loope
jmp
mov
or
scas
xor
bound
add
mov
add
sbb
inc
fstp
cmp
ins
adc
and
in
xor
in
mov
cmp
xchg
add
test
or
xor
call
int3
inc
and
outs
lds
scas
sti
ror
mov
stc
out
sbb
in
push
bound
and
adc
jne
test
lea
repz
ds
cmp
(bad)
mov
mov
xchg
fisub
mov
dec
mov
fs
shl
jge
cmp
repnz
cmp
pop
in
and
dec
push
movs
cmp
je
and
mov
add
jo
cmp
pushf
sar
add
adc
mov
rcl
sub
jmp
test
aad
dec
(bad)
push
(bad)
and
sbb
mov
sub
cmp
sub
dec
xchg
add
test
gs
jo
pop
dec
out
rcr
mov
mov
pop
or
push
test
sub
cs
pop
das
add
jae
imul
repz
pop
pop
jg
push
scas
in
cmp
pop
xchg
jae
or
mov
or
jno
je
or
xchg
cs
pop
lea
inc
mov
(bad)
fimul
adc
inc
jbe
es
out
outs
in
adc
dec
popa
in
das
dec
mov
or
fimul
movs
sbb
repz
pop
pop
mov
daa
movs
adc
xchg
retf
int3
adc
or
(bad)
jmp
xor
xchg
dec
dec
pop
mov
pop
mov
call
inc
ret
mov
mov
inc
xor
push
int
jg
mov
cmps
sbb
out
(bad)
mov
bound
or
cld
inc
leave
ins
ret
or
adc
pop
in
xor
jecxz
push
test
cmp
mov
test
inc
xchg
inc
xchg
aas
popa
sar
mov
repnz
push
scas
retf
pop
repz
daa
add
dec
enter
inc
and
cmc
enter
fadd
mov
cmp
xchg
test
adc
movs
inc
out
jne
jg
scas
or
cmp
repnz
inc
repnz
int3
mov
rcl
mov
fdiv
sbb
nop
stos
push
das
(bad)
in
mov
icebp
clc
repnz
addr16
jno
in
arpl
fadd
mov
adc
adc
ds
loope
call
cmp
gs
and
fisttp
in
test
jns
jp
jg
dec
mov
inc
ret
xor
ret
aaa
fs
or
aaa
push
outs
add
mov
pop
pop
call
xlat
scas
jmp
ret
sahf
xor
arpl
add
xchg
pop
movs
jne
inc
in
push
add
out
xchg
mov
call
imul
outs
(bad)
ins
or
(bad)
jl
imul
add
push
dec
xor
mov
sbb
movs
in
add
push
test
inc
jp
test
in
adc
and
or
scas
stc
ins
les
(bad)
pop
fmul
adc
mov
xlat
movs
repz
(bad)
or
sahf
pop
in
pop
bound
push
movs
ror
push
test
xchg
push
xor
mov
cdq
cwde
push
inc
fnsave
pop
repz
not
mov
push
adc
pop
cs
jae
(bad)
jmp
test
iret
xor
ret
(bad)
js
aad
mov
adc
sub
int
mov
pop
mov
inc
push
leave
js
(bad)
sahf
enter
cli
or
add
pop
stos
dec
push
mov
stos
cli
cmp
and
mov
push
into
mov
push
fistp
ds
lods
das
push
sbb
jp
dec
mov
mov
inc
and
repz
and
push
adc
mov
es
jbe
clc
adc
ja
in
ror
into
jo
idiv
outs
out
pop
add
ja
jo
je
fcomp
xlat
test
mov
push
mov
retf
data16
leave
xchg
mov
les
adc
sbb
push
push
sub
test
(bad)
retf
call
xor
mov
adc
and
fisubr
in
or
test
imul
mov
ss
cli
idiv
movs
xchg
adc
nop
pop
jb
pop
fcom
and
mov
sbb
jmp
test
mov
push
repnz
dec
push
mov
imul
pop
cmps
push
xchg
jge
(bad)
mov
ret
xor
test
(bad)
jg
out
adc
in
ret
or
icebp
movs
lds
std
sub
data16
ss
cdq
push
stos
mov
jge
in
dec
jno
and
jns
inc
adc
shl
add
out
dec
addr16
scas
addr16
pusha
cli
ja
xor
sub
adc
fidiv
push
hlt
inc
dec
cwde
adc
push
push
(bad)
and
push
daa
test
xchg
bound
xchg
add
sub
or
jae
pop
xchg
adc
popa
ret
or
add
test
mov
out
adc
mov
fimul
sub
sub
inc
ror
dec
mov
shl
or
es
mov
imul
sahf
mov
dec
pop
add
and
test
inc
shl
push
and
sar
test
pop
push
aas
retf
sbb
popa
lds
and
push
jge
sbb
sub
sub
add
or
les
pop
ins
stos
ins
cs
dec
push
jno
or
in
(bad)
loopne
call
mov
mov
(bad)
xor
add
xor
clc
add
pop
mov
sub
xchg
jmp
push
mov
or
out
ror
outs
pop
call
sub
loope
jnp
addr16
add
xchg
cmp
loopne
xor
mov
xor
test
add
sbb
xchg
neg
add
daa
push
pop
push
xor
xlat
lds
popw
and
out
or
xchg
mov
jo
adc
push
cwde
cmp
dec
xor
aaa
mov
add
std
ficomp
in
rcl
cmps
lods
and
mov
jbe
xor
xor
mov
sub
repnz
outs
cmp
cmp
dec
mov
adc
mov
push
adc
aaa
dec
out
mov
xor
adc
ja
pop
clc
test
adc
shr
jmp
(bad)
mov
ret
fcmovu
ds
lock
ins
fwait
mov
lods
inc
aad
adc
dec
ins
mov
jo
movs
inc
out
mov
sub
mov
inc
sbb
stos
fld
mov
pop
push
aam
sub
push
test
inc
push
icebp
cs
jbe
xor
repnz
jmp
cs
mov
adc
es
sub
push
xor
and
push
outs
push
rcl
add
fs
jne
sub
fnstsw
xor
call
jbe
push
inc
scas
addr16
mov
fidivr
add
repz
cmc
outs
ret
sub
xchg
fs
pop
bound
pop
aad
loope
(bad)
ror
sub
out
jb
inc
jecxz
leave
add
addr16
mov
or
mov
bound
push
add
pop
cwde
(bad)
(bad)
xlat
mov
fucomp
push
test
dec
or
add
sbb
fild
xchg
push
pop
dec
sbb
push
out
sbb
aaa
pusha
popf
mov
jg
aas
mov
jns
push
add
jmp
xor
mov
push
pop
jo
push
sbb
clc
add
push
das
xchg
push
pusha
aam
out
sbb
pop
xor
rol
mov
mov
add
or
mov
ja
inc
std
mov
(bad)
and
push
mov
jmp
jge
leave
pop
outs
cmps
lods
add
loope
xchg
push
(bad)
loopne
cmp
iret
mov
mov
xor
aad
sub
mov
scas
sbb
shr
(bad)
inc
popa
repnz
shl
(bad)
in
cmp
js
sub
jmp
push
add
cmc
scas
or
cmp
xchg
cs
call
stos
in
sub
in
fidiv
and
pop
sbb
loopne
sbb
in
ficom
test
xor
adc
inc
pop
js
add
and
inc
push
loopne
outs
adc
int
stc
mov
pop
jmp
loope
popa
lds
pop
cld
xlat
pop
add
fs
int
push
psubq
jp
fs
lds
(bad)
lock
fdiv
mov
adc
out
shl
jl
jbe
nop
pop
add
xor
mov
jo
mov
inc
pop
and
jp
ins
dec
or
jle
in
in
xchg
mov
scas
retf
stc
nop
cmp
es
mov
fstp
adc
jmp
mov
not
adc
mov
sbb
fistp
adc
bound
sar
pushf
jg
lea
add
bound
inc
add
push
shl
rol
push
lods
pop
into
fwait
lds
sbb
cli
pop
mov
popa
mov
pushf
rcr
cmp
adc
hlt
scas
leave
inc
add
ret
mov
mul
std
push
xor
xchg
das
clc
and
jle
xor
or
(bad)
jnp
lods
pop
and
lds
jle
xor
push
xor
out
or
jb
sti
gs
mov
pop
icebp
into
mov
cmp
xor
push
mov
mov
fmul
adc
les
or
push
mov
aam
aaa
xlat
sub
sbb
mov
ret
outs
dec
xchg
jle
mov
xchg
cli
fwait
jb
out
out
fidivr
add
jae
and
adc
fild
dec
xchg
dec
cmp
lods
jnp
xor
aad
pop
mov
je
(bad)
cmp
test
hlt
inc
lds
sub
leave
jg
sbb
test
out
cmp
mov
mov
dec
or
lods
inc
adc
fistp
sbb
jno
fadd
mov
push
mov
(bad)
cli
xchg
cmp
jae
es
add
stc
(bad)
mov
je
adc
dec
pop
pop
js
or
out
gs
jl
das
dec
push
adc
sbb
xchg
mov
and
arpl
jbe
xor
aas
dec
mov
in
pop
fcmovnbe
or
inc
movs
data16
ja
xchg
adc
xor
cmps
xchg
dec
inc
jbe
cmp
sbb
iret
jle
xchg
outs
mov
push
bound
and
nop
(bad)
out
or
pop
sub
ja
xchg
jecxz
repz
sbb
mov
mov
mov
cmc
mov
pop
(bad)
cli
pop
loope
int3
arpl
xchg
inc
mov
dec
loop
neg
and
dec
jae
ins
adc
shr
je
xchg
sbb
push
and
mov
dec
pop
daa
mov
inc
and
out
adc
popf
jge
sub
lahf
jbe
mov
sub
adc
inc
adc
jp
xor
gs
mov
sub
push
xchg
mov
popa
pop
adc
fisttp
hlt
mov
iret
pusha
sbb
jl
(bad)
xor
fldenv
or
sub
(bad)
fwait
and
or
cmp
sub
fisub
xor
ss
push
push
push
jp
mov
sub
xor
imul
leave
sbb
leave
pushf
xchg
mov
push
push
pop
dec
xlat
or
repz
into
repz
push
jl
mov
mov
pop
cmps
fwait
inc
mov
push
fadd
sbb
jecxz
nop
sbb
mov
sub
data16
xchg
mov
cmc
mov
fwait
xchg
jb
sbb
mov
mov
mov
cs
mov
dec
or
mov
jbe
pop
inc
stos
and
les
mov
test
jnp
ficom
fidivr
js
cli
or
push
stc
jae
pop
or
test
push
sbb
nop
gs
adc
jnp
call
sub
sub
test
mov
add
sub
fucomi
stos
cmp
scas
(bad)
bound
inc
jmp
mov
retf
xor
sub
addr16
cvttps2pi
mov
scas
push
push
jmp
aad
xor
adc
das
loope
xchg
mov
and
mov
mov
arpl
(bad)
loope
in
or
jne
push
mov
jb
das
bound
in
xchg
sub
bound
lock
inc
or
or
cmps
cdq
jo
test
xchg
nop
test
sbb
add
outs
mov
aaa
sub
rcr
fstp
ja
adc
mov
outs
or
inc
push
xor
xchg
xlat
sbb
push
sub
add
xchg
fucomip
fst
cwde
push
out
mov
popf
mov
and
pop
pop
pop
repz
sub
pop
fist
jae
xor
xor
inc
in
test
dec
jnp
xchg
(bad)
adc
xchg
push
shl
inc
dec
adc
jge
sub
cmp
test
pop
mov
repnz
push
icebp
dec
aas
adc
stc
inc
adc
xor
lds
mov
rcl
push
in
fidivr
cmps
dec
loope
es
out
pop
gs
xchg
pop
or
popf
jbe
push
mov
dec
aaa
data16
adc
dec
add
push
jnp
movs
ins
sbb
test
xor
xchg
push
cmps
les
push
inc
imul
jecxz
out
mov
sub
mov
mov
out
mov
or
push
lock
je
imul
or
mov
ss
or
icebp
adc
pop
outs
lahf
sbb
mov
cdq
cmp
ins
jbe
(bad)
in
repnz
pop
xor
jecxz
outs
out
mov
add
pop
icebp
jle
imul
gs
xchg
or
xchg
push
cs
movs
int3
sub
push
pop
push
rcl
aam
in
dec
out
enter
fidivr
xor
sub
cs
lods
cmp
inc
push
test
or
mov
adc
cmc
pop
ret
inc
xor
inc
dec
lods
add
rol
test
scas
adc
out
mov
or
jle
ret
sti
fnstcw
and
xchg
mov
push
dec
int3
dec
sbb
xor
pavgw
stc
lea
rcl
add
pop
xchg
sti
cmps
dec
push
pusha
movs
popf
push
dec
icebp
int3
shl
daa
lock
leave
out
mov
scas
rol
adc
jmp
add
push
add
inc
push
js
pop
and
jns
cli
xchg
xor
stc
sbb
adc
pop
add
mov
inc
or
sub
test
sti
aaa
jl
inc
inc
push
aas
sahf
sbb
pop
fwait
inc
int
mov
inc
ret
shl
rol
scas
adc
jle
mov
shr
imul
outs
adc
push
inc
nop
ret
ds
lea
xorps
push
dec
dec
(bad)
lods
xor
sbb
mov
xor
jge
xchg
icebp
mov
popa
mov
neg
inc
jb
pop
ins
(bad)
xor
aas
mov
sbb
arpl
jns
in
scas
push
mov
pop
enter
cli
ins
push
cwde
es
(bad)
pop
xchg
mov
mov
push
inc
(bad)
jnp
hlt
aad
ds
add
jecxz
jns
imul
and
(bad)
xor
or
mov
jbe
fnstsw
es
test
pop
xor
into
aaa
jo
xlat
mov
inc
add
mov
mov
int3
mov
jbe
fisttp
adc
mov
test
jo
aaa
pop
mov
dec
dec
mov
sbb
push
inc
sbb
ror
shl
int3
adc
add
sbb
sbb
movs
(bad)
jbe
mov
sub
ds
idiv
mov
inc
mov
fstp
mov
fidiv
movs
outs
dec
rcl
push
mov
cmp
jmp
mov
fdiv
cmps
sub
cmp
jb
stc
shl
xchg
push
mov
mov
xor
mov
rol
inc
add
or
adc
(bad)
repz
sbb
sub
dec
les
pop
std
shl
jmp
dec
jnp
mov
mov
mov
bound
in
fiadd
cmp
movs
xlat
xchg
inc
sub
mov
out
jp
ret
test
ins
mov
xchg
sbb
mov
(bad)
ss
push
in
imul
(bad)
pop
xor
adc
inc
adc
xor
mov
das
dec
jb
add
sub
jge
in
cld
std
xchg
pop
mov
in
xor
jo
mov
pop
out
nop
xchg
cmp
inc
fwait
(bad)
dec
mov
shl
pushf
add
or
rcl
test
cs
fstp
imul
call
jne
fistp
loop
lea
cld
ins
mul
sub
add
ret
mov
ret
mov
pop
adc
ins
jno
rcr
cs
sub
mov
sub
(bad)
nop
rcl
lahf
add
pusha
rol
xchg
ds
mov
dec
or
outs
test
xor
mov
adc
(bad)
nop
cmc
out
jl
stos
and
retf
and
mov
outs
jp
xor
daa
xor
mov
xchg
ret
xor
fwait
jmp
adc
(bad)
lods
mov
or
mov
xchg
retf
mov
nop
mov
and
xor
mov
stos
icebp
sbb
stos
adc
mov
sbb
je
fisubr
dec
(bad)
xchg
(bad)
sbb
lea
test
adc
sub
lods
sbb
aas
xor
call
ds
sar
or
hlt
fnstsw
jg
xchg
neg
int
iret
bound
xor
leave
and
push
mov
repz
mov
in
scas
push
push
pop
push
ficom
jb
cmp
inc
xchg
cmp
stos
imul
mov
repz
adc
add
ins
(bad)
scas
rcl
pop
(bad)
gs
call
lock
test
es
mov
outs
(bad)
stc
mov
push
add
or
out
sub
aad
xchg
iret
pop
shl
jbe
cmp
pop
add
adc
and
lahf
clc
pop
mov
(bad)
push
rol
mov
jmp
imul
cmp
inc
or
ja
xchg
mov
ret
popa
outs
cs
retf
cld
pop
mov
bound
push
add
add
ret
mov
fst
sub
push
push
pop
jnp
repnz
mov
sub
mov
cmp
leave
mov
xchg
imul
daa
lahf
ins
(bad)
or
pop
out
mov
daa
mov
loope
sti
xchg
outs
into
scas
jbe
fstp
inc
jp
lods
test
mov
sub
add
and
xlat
les
xchg
fwait
dec
jno
push
cmp
adc
icebp
mov
jmp
push
int3
xchg
shl
aad
rcl
out
jno
(bad)
pop
loopne
aad
inc
lea
rsm
fnsave
and
push
dec
push
push
mov
mov
add
cmps
jge
ret
push
mov
(bad)
imul
inc
idiv
mov
pop
inc
mov
(bad)
mov
stos
mov
cs
pop
jne
pop
cmps
cld
push
pusha
in
out
scas
sbb
movs
popf
sbb
mov
sub
neg
movs
jmp
shr
sub
or
inc
dec
stc
stc
inc
test
int
cmp
daa
xor
test
xchg
js
sub
dec
jmp
retf
es
cmp
outs
inc
jb
mov
dec
ja
pop
mov
push
add
aam
mov
push
repnz
mov
lea
jmp
inc
es
cmp
pop
mov
daa
cwde
mov
push
adc
lods
add
mov
adc
mov
call
mov
mov
je
outs
or
pop
sbb
cs
mov
int3
or
shr
sbb
pop
outs
jb
mov
in
cmc
sahf
mov
fldcw
jbe
push
jl
ffreep
xor
push
rcl
mov
js
inc
daa
and
cwde
dec
shl
in
jg
ja
xchg
mov
stc
mov
shl
mov
shl
inc
fxch
aas
fild
mov
xchg
adc
sub
lods
shr
lds
sbb
cmp
out
mov
xor
inc
jns
pop
push
mov
jno
pop
sub
mov
sub
repz
call
add
sbb
push
(bad)
mov
popa
outs
push
or
in
fisubr
(bad)
mov
or
pop
jle
dec
push
xchg
jle
jno
fisttp
mov
sti
mov
dec
or
xchg
aad
fs
jb
mov
test
pop
mov
xlat
xor
out
push
fimul
ror
push
enter
pop
cmc
jle
inc
xchg
push
mov
call
and
cmp
add
mov
mov
push
in
outs
lea
clc
mov
xchg
and
aas
call
into
out
mov
iret
xor
fbstp
mov
inc
rcr
bound
mov
call
cmp
mov
lods
add
out
push
mov
jecxz
mov
stc
inc
cli
fstp
or
in
pop
stos
repnz
sub
stc
stos
call
rcl
les
pop
or
into
sub
scas
loop
xchg
or
nop
xlat
mov
leave
out
fistp
(bad)
int3
call
cld
and
fwait
xchg
fldcw
mov
adc
mov
test
push
cli
imul
fnstsw
sub
push
ret
xchg
popa
mov
pop
add
push
mov
push
xchg
movs
stos
repz
scas
push
cmp
cld
sbb
js
popf
test
pushf
test
add
imul
test
daa
in
sbb
mov
pop
imul
push
mov
and
scas
pop
(bad)
imul
int
and
jl
popa
repnz
push
aas
xchg
xchg
test
test
add
iret
leave
and
or
(bad)
sbb
shr
ficom
xor
(bad)
clc
jg
inc
add
inc
imul
ss
rol
into
jp
inc
add
lock
es
sbb
sub
loop
addr16
movs
(bad)
loop
cdq
daa
shr
(bad)
xchg
dec
sahf
rcl
cli
xchg
mov
sub
push
fstp
shl
add
jb
shl
pop
sub
mov
test
repnz
out
in
or
and
into
lods
pop
xchg
jmp
pop
cmp
(bad)
mov
imul
cmps
ja
inc
xor
sub
popa
pop
in
jmp
fs
mov
clc
push
xchg
pushf
cmps
fst
lods
dec
stc
xchg
outs
sqrtps
jo
mov
out
mov
ret
(bad)
cmp
mov
pop
(bad)
xchg
lahf
(bad)
mov
fldcw
add
jo
inc
nop
pop
retf
xchg
(bad)
js
pop
sbb
ins
shr
jns
fisub
shl
xchg
repz
imul
jnp
cmp
mov
(bad)
push
movs
lods
scas
push
loope
out
stos
lahf
popf
push
xchg
inc
into
dec
fnsetpm(287
nop
int
std
aaa
xor
xlat
call
and
ds
faddp
mov
retf
and
call
js
sub
enter
addr16
or
mov
inc
mov
dec
sar
jle
fisubr
out
adc
mov
push
cld
pop
enter
aad
test
mov
fs
cmp
fidiv
std
adc
or
inc
push
sbb
mov
rcl
mov
bound
dec
push
pop
or
push
cmp
xchg
out
stc
jb
in
pusha
add
add
inc
push
call
mov
pop
push
dec
shr
int3
mov
push
mov
mov
fsub
sti
mov
dec
rol
gs
pop
push
cmp
ror
addr16
fst
sub
pop
mov
mov
or
ins
nop
call
aas
out
jecxz
xchg
scas
mov
inc
jns
or
push
stc
push
fs
vmwrite
(bad)
shl
enter
mov
inc
xchg
mov
dec
adc
sahf
xchg
je
movs
arpl
cmp
stos
out
(bad)
aas
jle
pop
imul
inc
addr16
sub
arpl
push
mov
mov
cmp
sti
ret
or
inc
adc
sub
int3
push
push
sbb
jp
adc
je
in
xchg
mov
jns
clc
out
cmps
mov
bound
mov
mov
jmp
arpl
movs
cmp
inc
xlat
test
outs
std
(bad)
lea
std
and
pop
test
(bad)
sti
pusha
js
mov
dec
sub
dec
loop
movs
and
mov
xchg
popa
jo
mov
sti
mov
or
inc
jp
pop
popa
pop
repnz
cli
test
xchg
(bad)
mov
push
loopne
pop
sbb
pop
push
clc
mov
jbe
aam
mov
jge
pop
jp
sbb
pop
adc
shl
outs
push
pop
mov
jmp
rol
xor
jmp
xlat
mov
in
dec
pop
scas
and
jo
sar
lock
or
cmps
js
cli
sar
xchg
and
into
out
ja
repnz
add
xchg
push
mov
dec
push
cmp
cmp
xor
cmps
xor
inc
push
mov
add
and
test
aad
data16
fldenv
xor
nop
jmp
mov
popf
sbb
adc
(bad)
jnp
mov
cli
push
repz
jmp
(bad)
out
sbb
jmp
mov
in
inc
aaa
retf
sub
sub
mov
mov
pop
fcomp
pop
test
outs
(bad)
and
aaa
or
dec
push
xor
push
mov
sahf
aaa
dec
or
iret
inc
xor
xchg
in
fnsave
rcl
inc
inc
push
mov
adc
popa
ins
cld
fwait
xor
loop
mov
or
adc
adc
jge
or
rcr
xchg
push
cwde
adc
jne
xchg
rcr
pushw
or
fwait
(bad)
ds
sub
sub
std
scas
sub
sahf
lods
rcl
xchg
test
sub
ss
pushf
addr16
mov
jle
pop
push
jno
lds
mov
gs
(bad)
mov
outs
stos
aas
scas
add
sub
ins
ffree
push
dec
loope
call
pop
test
mov
lea
pop
lahf
and
xor
and
cmps
cwde
(bad)
lahf
cmps
call
stos
aad
adc
and
sar
sub
aaa
dec
xor
int3
or
fcomp
cmp
jns
repnz
sti
push
and
in
xlat
movs
lds
int3
or
xchg
mov
and
lea
stos
cmps
inc
fisttp
fsubr
js
or
cmp
pop
ss
ret
mov
loope
sti
dec
push
dec
in
inc
out
out
pmaxsw
icebp
jmp
xchg
and
enter
cwde
push
sbb
sbb
mov
dec
(bad)
(bad)
out
es
fidiv
jne
cmp
icebp
movs
out
das
pop
mov
lea
cli
jge
sbb
bound
or
fdivr
dec
pop
daa
ins
and
cmp
and
outs
sub
or
cwde
leave
jg
in
call
dec
pop
dec
mov
(bad)
dec
inc
inc
or
in
fisttp
or
adc
jo
sbb
and
mov
lods
ret
mov
sahf
imul
cmp
lods
adc
mov
jmp
stos
test
daa
fucomi
adc
or
test
add
jne
test
jns
ss
(bad)
out
mov
mov
jmp
cdq
outs
xor
and
cld
hlt
aas
and
out
aaa
in
jle
mov
pusha
and
loopne
xchg
bound
(bad)
mov
test
inc
int3
and
out
inc
fs
repz
imul
add
cmp
sub
jbe
call
and
push
in
cli
xor
adc
out
cmp
pop
sub
cmp
inc
lahf
mov
inc
push
jecxz
sti
xor
outs
pop
mov
sub
mov
shr
mov
mul
stos
(bad)
gs
and
jns
mov
div
inc
push
or
adc
test
lock
inc
lahf
out
into
addr16
repnz
jbe
mov
outs
ret
popf
sbb
mov
test
or
and
out
jmp
mov
xor
mov
pop
pop
dec
jae
or
not
push
jge
gs
call
test
enter
dec
xchg
pop
push
mov
dec
fisttp
outs
ret
popf
cmc
in
or
fwait
(bad)
jne
and
mov
jecxz
ins
xchg
ins
sub
or
push
sbb
push
cmps
jl
pop
loopne
dec
sub
test
sar
sbb
mov
shl
push
call
call
punpcklwd
push
scas
xchg
mov
dec
ret
xor
lea
and
pusha
popa
xor
or
movs
mov
mov
out
jae
xchg
add
mov
dec
sti
lds
adc
ret
inc
into
fidiv
cli
xchg
sub
sar
dec
jb
mov
fidivr
adc
and
mov
push
xchg
cmc
sub
out
pop
loop
cmps
arpl
cwde
xor
call
loop
xchg
inc
fcomp
jge
push
dec
bound
sbb
sub
sbb
jo
retf
jb
aam
pop
out
lods
push
cmps
shl
call
cmp
mov
lods
cmps
push
dec
inc
sbb
movs
sub
mov
jle
pushf
xor
dec
push
xlat
mov
fiadd
das
outs
iret
inc
xchg
pop
arpl
xor
mov
repz
loope
arpl
sahf
jne
fdiv
daa
jecxz
imul
loop
inc
cmp
push
jno
mov
test
(bad)
repz
shr
adc
mov
adc
stos
cld
fcomp
aaa
aaa
mov
pop
repnz
in
pop
xchg
imul
adc
(bad)
loop
add
stos
xor
aad
push
inc
(bad)
shr
push
daa
sub
sbb
lods
push
repz
fucom
stc
and
aam
aas
fcomp
cmp
imul
jb
xor
lods
call
adc
xchg
and
and
xor
aad
ja
xor
and
lahf
cmp
adc
jp
mov
push
ins
push
fidiv
movs
xchg
lods
or
lock
dec
out
sub
in
shr
push
imul
std
add
out
and
mov
repz
mov
ror
sahf
pop
data16
lock
mov
xchg
cmps
mov
leave
popf
test
in
(bad)
imul
cvtpi2ps
or
(bad)
jg
call
pop
mov
sti
pop
test
jnp
cmp
or
idiv
fdivr
inc
pop
sub
dec
(bad)
fimul
push
mov
imul
and
imul
or
aaa
aad
test
sub
push
cmp
xchg
mul
idiv
(bad)
lds
sub
add
test
push
stos
pop
(bad)
jns
dec
sar
outs
or
ins
mov
cld
sub
int
ss
hlt
pop
add
and
and
mov
es
scas
or
mov
fs
js
arpl
adc
sbb
mov
je
or
xor
or
iret
mov
mov
cmp
jb
add
push
sub
ficomp
push
je
and
sbb
out
cmp
mov
dec
call
inc
lahf
pop
inc
adc
mov
mov
pop
add
test
xchg
fstp
jecxz
inc
pop
into
and
leave
push
into
retf
cmps
push
(bad)
mov
movs
jne
cld
mov
sub
mov
cmp
bound
(bad)
dec
es
adc
imul
sbb
retf
xchg
and
out
dec
cwde
sub
add
and
pop
fmul
dec
xor
out
movs
out
sar
mov
cdq
scas
(bad)
ja
sub
out
jmp
(bad)
pop
sar
(bad)
retf
iret
xlat
retf
sar
lods
fisubr
cli
jns
xchg
push
(bad)
adc
imul
enter
xlat
cmp
lahf
iret
mov
ds
jecxz
mov
xchg
and
mov
cwde
jge
mov
mov
outs
inc
(bad)
sar
dec
mov
push
cmp
cmp
jae
mov
pop
sbb
pop
mov
test
popf
mov
cmp
adc
repnz
shl
das
or
ror
push
shl
jno
cmc
sar
mov
xchg
mov
icebp
je
dec
jnp
xor
mov
xor
sbb
cwde
fcmovne
fcomp
xchg
iret
mov
xor
jp
jae
mov
aam
ret
dec
sahf
call
pushf
(bad)
xor
xchg
cs
pop
clc
stc
call
sbb
mov
jmp
xor
pop
mov
xchg
jnp
jno
pop
fwait
jl
cmps
enter
out
ret
out
pop
clc
popa
in
adc
mov
pop
jle
adc
pop
dec
push
sbb
xor
(bad)
es
inc
and
nop
sar
fdiv
out
and
and
jmp
icebp
mov
mov
add
mov
sar
xchg
push
ret
add
imul
clc
inc
lahf
inc
xor
push
(bad)
stos
bound
cdq
mov
out
jle
add
xchg
and
adc
ret
jge
aas
dec
into
cdq
rcl
bound
xor
pop
inc
scas
pshufw
sar
jg
adc
shld
jbe
std
mov
push
jnp
loopne
mov
(bad)
xchg
cmps
imul
iret
sub
cmp
dec
or
lahf
mov
sub
in
dec
aam
push
loop
xor
sub
scas
test
les
stos
cmp
les
adc
mov
cmp
inc
pop
mov
vsubps
lods
pop
sub
cli
jbe
jle
push
xchg
movsx
jne
hlt
mov
mov
and
loopne
xor
dec
call
es
add
aas
ficom
mov
(bad)
dec
push
pop
jbe
out
pop
es
shl
dec
jno
jg
push
daa
adc
xchg
(bad)
push
shr
(bad)
pop
mov
push
bound
mov
xchg
test
push
out
(bad)
out
ret
xor
in
jecxz
jmp
loop
out
inc
mov
ins
sbb
add
movs
fist
cmc
xor
popa
and
ss
and
or
mov
out
sbb
stos
inc
mov
(bad)
out
or
xchg
xchg
test
rol
ret
imul
mov
enter
repz
scas
adc
inc
sbb
(bad)
loop
xor
pop
add
imul
cdq
xor
clc
dec
mov
mov
stos
jmp
cmps
cwde
xchg
sbb
call
sub
inc
data16
push
jno
test
idiv
in
pop
cdq
jo
sbb
pop
xor
mov
stc
je
repz
rep
ret
vpavgb
imul
jecxz
sti
sbb
test
shl
cmp
sti
cmp
(bad)
fild
sub
inc
shl
imul
inc
and
adc
xchg
call
int
dec
fdivr
call
(bad)
cli
imul
push
gs
cmps
cmp
out
mov
dec
neg
imul
aam
test
mov
dec
mov
out
and
and
dec
xor
mov
es
xchg
add
xchg
stc
cmp
in
adc
or
je
stc
arpl
dec
xchg
out
aas
mov
dec
dec
jne
inc
or
inc
out
rol
cmp
hlt
stc
sbb
daa
push
inc
loope
push
and
pop
pop
push
loop
stc
outs
(bad)
fcmovu
cmp
mov
retf
inc
inc
pop
cmp
outs
push
xchg
sbb
push
pop
bound
sub
sbb
add
push
out
in
fs
jne
add
dec
cmp
lea
(bad)
stos
iret
out
mov
imul
jmp
pop
xlat
mov
pop
je
or
jno
or
mov
adc
sub
and
aam
inc
enter
sbb
gs
xlat
sbb
adc
xor
mov
xchg
enter
in
ret
push
pop
lahf
jp
gs
xor
dec
mov
xlat
cmp
mov
rcl
inc
dec
xor
jge
or
push
(bad)
push
inc
or
pop
shl
dec
fadd
pop
test
(bad)
jmp
in
outs
hlt
mov
push
push
add
loopne
lock
daa
js
call
inc
dec
jmp
push
and
loop
inc
lea
add
movs
mov
mov
adc
dec
push
paddq
outs
addr16
cmps
mov
add
mov
loope
adc
mov
pop
push
jne
add
shr
jecxz
(bad)
jmp
dec
mov
stos
dec
add
mov
mov
push
imul
dec
test
imul
ins
mov
ins
and
movs
je
jp
cmp
sub
xchg
xchg
add
fisub
mov
leave
jb
cs
movs
js
je
call
rol
sub
ins
dec
adc
push
sbb
and
mov
cld
out
aas
jns
mov
aad
dec
sub
xchg
fisttp
or
aam
iret
pop
jnp
push
or
pop
xlat
(bad)
jecxz
xor
outs
stos
inc
add
jg
xchg
les
sub
pop
push
nop
test
push
ja
jmp
jb
rcl
push
in
mov
mov
(bad)
shl
push
mov
not
and
xor
mov
sub
sub
jecxz
iret
jnp
stc
jno
lahf
inc
dec
lock
aaa
xchg
shl
mov
rcl
cmps
adc
fsub
pop
sbb
sbb
(bad)
push
aam
push
cdq
mov
ds
dec
mov
dec
sahf
jno
xchg
js
aam
psrlq
js
xor
ret
mov
add
and
sub
xor
int3
sbb
mov
fisubr
push
dec
mov
loope
jo
in
bound
mov
mov
shl
xor
mov
mov
add
pop
jmp
xor
pop
(bad)
jbe
jecxz
(bad)
pop
cwde
pop
not
xor
(bad)
mov
mov
es
cli
adc
ins
mov
cmp
jns
shl
xchg
lock
pop
mov
pop
mov
lods
jmp
and
in
dec
add
fdivr
retf
sbb
ss
ins
push
int
test
mov
inc
adc
and
repz
hlt
dec
jns
mov
jecxz
jno
cmp
test
shr
dec
xchg
xor
ret
dec
dec
cmps
fnsave
mov
mov
mov
nop
scas
stos
stc
fwait
push
or
add
mov
push
adc
pop
ret
sbb
jl
push
mov
jnp
mov
call
mov
mov
rcl
loop
ds
cwde
add
arpl
cmp
retf
and
popa
in
xchg
test
imul
pop
icebp
sbb
jbe
std
sar
repz
ins
mov
nop
jo
iret
cmp
mov
sub
and
fld
icebp
xchg
push
lods
ins
movs
sub
stos
or
pop
outs
mov
mov
mov
mov
mov
pop
lahf
xchg
test
mov
loope
outs
mov
ins
sbb
mov
pop
stc
add
into
mov
mov
sbb
jmp
dec
cld
jle
dec
xchg
add
sar
outs
sbb
adc
adc
std
jp
mov
xchg
ins
pop
cdq
(bad)
rcr
jno
ja
(bad)
xlat
or
dec
out
fidiv
cli
shl
repz
adc
xchg
stc
xor
fmul
or
pop
in
add
pop
xchg
fimul
push
ficomp
mov
jge
ror
mov
mov
in
xchg
in
sahf
aad
loope
enter
pop
pop
mov
icebp
cwde
adc
rcr
in
and
fist
cmc
adc
ja
push
dec
ror
cmp
xor
nop
sub
push
stos
inc
into
dec
cli
vcvtss2sd
push
mov
cmps
mov
pop
mov
test
pop
jp
cmp
dec
inc
enter
dec
mov
outs
sub
nop
mov
ja
xor
inc
mov
out
jecxz
fld
inc
push
outs
das
hlt
pusha
add
mov
xchg
hlt
inc
mov
test
nop
sub
pop
mov
jns
add
int
mov
iret
mov
adc
pop
xlat
scas
mov
inc
ins
jl
or
(bad)
dec
add
in
retf
in
cli
or
fwait
and
pop
pop
lods
pop
push
jmp
mov
mov
cmc
outs
movs
stos
scas
aad
iret
int
push
cld
sub
add
push
mov
fs
mov
jle
mov
leave
cmc
in
dec
xor
(bad)
xchg
std
cs
lock
ins
mov
and
popa
repz
daa
fst
dec
ds
sbb
loopne
bound
loopne
jb
jo
ins
xlat
xchg
xchg
mov
out
adc
cmp
in
scas
jg
shl
sbb
jmp
imul
xchg
mov
jg
ret
nop
fnstsw
rcl
leave
rcl
test
sub
jmp
pop
int3
adc
add
or
push
ins
ins
repz
xor
lahf
mov
lahf
hlt
mov
fadd
xlat
sub
mov
ja
je
dec
dec
imul
lock
pop
ds
retf
dec
push
push
xor
dec
sbb
or
sar
pop
cmp
or
fwait
or
cs
push
or
sbb
sbb
lahf
(bad)
xchg
inc
(bad)
lock
add
lock
dec
mov
and
push
retf
sub
cwde
mov
mov
fldz
or
jle
pop
jno
ror
lods
push
in
jbe
dec
test
into
add
retf
dec
movs
mov
lock
lods
pusha
imul
or
sbb
test
xchg
fisttp
repz
dec
shl
add
sar
in
ins
add
retf
rcr
xor
push
pop
sbb
or
mov
mov
in
ss
and
shl
nop
js
mov
or
ror
cmc
jo
mov
mov
imul
mov
fstp
pusha
cmp
arpl
clc
pushf
xchg
sbb
xor
mov
inc
xor
sbb
lea
xor
xor
sbb
lods
pmulhw
xor
sbb
xlat
push
imul
outs
dec
xor
clc
clc
gs
dec
retf
icebp
and
jb
mov
push
xor
ss
sub
push
jl
sub
leave
ficomp
xor
mov
dec
hlt
sbb
movs
push
aas
add
stos
movs
jle
je
(bad)
hlt
dec
inc
add
pop
jecxz
lock
inc
pop
and
retf
test
outs
lds
xor
add
nop
fisubr
adc
call
cwde
pop
push
xor
ret
xchg
cdq
cwde
out
clc
push
mov
lods
xchg
ins
aad
bound
fisttp
dec
arpl
add
cmc
out
in
mov
jbe
mov
jae
xchg
sar
ficom
adc
int3
jo
stc
mov
(bad)
cmp
pop
xchg
jl
data16
mov
pusha
sub
jno
outs
icebp
leave
dec
jmp
jmp
cdq
pop
aam
imul
outs
cmp
sub
frstor
(bad)
mov
push
and
inc
aaa
jns
mov
fadd
sahf
jl
and
fmul
jbe
xor
movd
scas
push
xor
shr
(bad)
iret
fisubr
xchg
add
push
jmp
mov
aam
imul
mov
mov
mov
push
inc
loopne
(bad)
and
xchg
sahf
cmp
cmp
out
mov
push
imul
gs
push
or
iret
movs
and
mov
shr
imul
pop
dec
mov
cli
cwde
leave
adc
out
push
add
ret
iret
pushf
jecxz
xchg
and
push
xchg
sbb
call
retf
inc
adc
cmc
addr16
retf
add
sbb
in
scas
push
iret
push
in
ffree
inc
hlt
or
retf
mov
mov
jne
inc
jmp
mov
mov
pop
dec
mov
call
hlt
iret
cmc
mov
scas
test
adc
hlt
pop
rdmsr
push
into
or
pcmpeqb
repnz
add
inc
hlt
xlat
adc
xor
cmp
sar
(bad)
addr16
(bad)
or
stos
jbe
mov
ret
shl
cmp
jp
pop
xchg
ins
out
mov
jge
sbb
pop
das
lahf
ret
aas
sbb
sub
gs
in
shr
and
xchg
jg
outs
not
push
shl
popa
cmp
sbb
mov
or
mov
xchg
dec
mov
bound
je
dec
arpl
sbb
shr
retf
mov
frstor
mov
dec
call
add
cmp
and
mov
sub
repz
push
scas
mov
cmp
fmul
mov
push
pop
jns
xchg
inc
mov
jecxz
pop
xor
ja
mov
ins
jno
mov
push
arpl
fdivr
arpl
mov
leave
and
mov
ja
retf
clc
mov
test
xchg
js
out
dec
pushf
xor
cmps
int3
mov
push
sub
xchg
sahf
cmp
jl
sub
pop
out
or
sbb
ficom
popa
lahf
fld
fldlg2
ret
sbb
test
cwde
and
fdivr
shl
sbb
mov
dec
and
push
cmps
jbe
ja
test
inc
dec
in
inc
data16
pushf
repnz
or
jnp
cli
mov
dec
xor
outs
out
pop
and
xlat
lock
adc
test
(bad)
es
mov
movs
pop
pop
mov
xor
into
(bad)
sti
inc
sub
fcom
out
shl
scas
rcr
mov
pop
jbe
and
push
or
push
or
aam
jecxz
dec
mov
stos
jno
clc
or
xchg
mov
js
push
fistp
sbb
(bad)
cmps
or
jecxz
movs
leave
and
cwde
imul
jecxz
(bad)
xor
jge
pop
mov
cmps
test
ins
jns
add
inc
xor
cmp
inc
call
jae
sahf
aas
std
sbb
in
fadd
shl
cwde
pop
cmp
push
sar
cmp
and
jne
je
push
lds
lock
mov
aas
div
and
dec
mov
mov
popa
frndint
neg
jae
aad
xchg
leave
mov
mov
(bad)
cmp
dec
daa
stos
ins
cli
js
hlt
or
cli
xor
repz
add
jl
mov
lods
pop
shr
loope
inc
add
xor
jg
jle
mov
push
lods
out
scas
jb
jg
(bad)
in
mov
add
ret
cli
pop
pop
in
cmp
push
or
xchg
mov
or
and
ins
aam
push
out
xor
jae
out
lods
fbld
cdq
push
retf
and
xchg
pop
add
dec
xchg
mov
call
ins
and
in
jp
cwde
enter
jp
sbb
fiadd
push
push
add
idiv
pop
and
dec
cwde
dec
shr
adc
jno
popf
pusha
inc
mov
inc
cmc
loop
cmp
loope
sub
pop
call
xor
loopne
jno
or
sbb
daa
(bad)
ficom
push
imul
sub
lahf
ja
(bad)
outs
jb
pop
call
movs
mov
and
movs
icebp
cmp
loop
mov
in
popf
xchg
les
or
mov
out
in
cld
ror
mov
pop
fwait
jb
jle
dec
mov
addr16
dec
int3
or
rol
push
(bad)
scas
sub
bound
aaa
cmp
sub
adc
fsubr
adc
stos
push
mov
test
xchg
test
fwait
jle
mov
cmp
inc
fucom
push
dec
pop
call
call
sub
bound
inc
pop
xchg
add
xor
pop
shr
loope
and
jl
shl
iret
jmp
shl
dec
call
pushf
push
mov
jne
lods
xchg
retf
or
mov
sar
in
daa
jno
iret
or
in
test
add
pusha
sbb
adc
and
leave
add
ret
sahf
test
scas
add
ror
mov
add
bound
jle
pop
pushf
mov
xor
leave
mov
fadd
test
int3
je
hlt
cmp
sub
ret
sbb
pushf
rcl
and
mov
aaa
xchg
push
aad
stc
movs
bound
bound
inc
pop
stos
mov
popa
div
push
jns
loop
jg
inc
xchg
aad
mov
bound
inc
jb
in
lods
xchg
xor
std
and
jecxz
or
jmp
call
jno
cmp
jmp
fidivr
push
mov
jp
cmps
dec
js
or
pop
lods
mov
arpl
pop
cmp
jmp
cmps
aad
cld
cmps
jmp
cmp
xor
bound
js
popf
retf
adc
sbb
inc
adc
scas
mov
sub
mov
and
lods
(bad)
popf
neg
mov
das
loopne
outs
out
or
adc
iret
xor
lahf
test
jae
dec
add
movs
cmp
cmp
lods
sbb
fisub
lods
sbb
in
pop
sbb
push
jmp
stc
stos
int3
pop
scas
mov
pop
pop
dec
or
push
fwait
adc
jg
or
movs
cmp
sbb
shl
movs
cmps
jle
sub
mov
xor
into
mov
dec
mov
mov
push
fldenv
fcmovbe
rcl
scas
jne
push
outs
ja
jno
fstp
cmp
xchg
lods
loope
lahf
pop
cmp
pop
pop
idiv
sub
inc
test
shl
mov
out
(bad)
sti
fmul
and
dec
sbb
jno
and
push
mov
mov
aas
xchg
adc
xor
push
xlat
mov
out
rcl
fbstp
inc
cli
popa
shr
jmp
test
jns
pop
imul
je
fmul
scas
xchg
xor
test
pop
nop
addr16
ficom
cmps
pop
push
(bad)
adc
inc
sub
sete
cmp
lock
dec
lock
loop
and
jns
scas
jmp
xlat
sub
pop
adc
call
test
push
cmp
mov
pop
mov
ja
push
dec
adc
cmps
mov
leave
test
ds
stos
adc
popa
repz
mov
mov
dec
pop
xchg
popa
push
xchg
in
je
push
stos
mov
dec
mov
xchg
mov
mov
xor
jbe
mov
cmp
(bad)
pop
push
je
sar
inc
fmul
add
sub
push
push
(bad)
fld
mov
popf
mov
in
push
inc
add
sub
ror
cwde
cmp
mov
cmp
cmps
cmc
repnz
inc
inc
ss
clc
repz
lods
in
pop
inc
out
je
(bad)
dec
sub
jo
or
(bad)
mov
jmp
lods
stc
aam
retf
fdivr
adc
mov
pop
pop
adc
sbb
xchg
sbb
sub
push
push
test
xlat
pop
sub
sbb
out
mov
pop
or
and
pop
not
into
xchg
inc
ret
cmps
inc
rol
inc
in
ins
dec
or
lods
xlat
pop
hlt
jle
les
out
push
jne
ins
in
rol
pop
fisub
mov
push
pop
adc
xchg
pop
push
adc
push
and
push
int
xchg
fisttp
pop
imul
dec
cmps
adc
shl
and
sbb
sub
mov
or
iret
or
add
pop
shl
ins
ret
div
and
test
dec
aas
xchg
js
mov
stos
dec
dec
shl
pop
rcr
fisttp
jge
pushf
jmp
cmp
shl
lds
popa
add
xchg
sbb
mov
dec
push
fiadd
sti
add
sbb
stos
lds
dec
iret
ins
and
jnp
or
dec
xchg
add
bound
ror
clc
mov
lea
jns
js
loope
cmps
add
pop
xchg
push
push
sbb
mov
call
addr16
sbb
inc
retf
cmp
fisubr
ficomp
pop
add
popf
cmp
mov
aaa
ja
ror
or
ret
mov
xchg
inc
dec
es
dec
inc
sbb
stos
out
push
dec
pop
mov
stc
add
or
(bad)
sbb
sub
pop
mov
cmp
xchg
mov
(bad)
dec
jb
mov
rol
shl
mov
mov
dec
pop
push
test
test
mov
xchg
mov
mov
dec
xchg
fchs
jmp
dec
ret
push
lea
icebp
jge
stos
push
jp
popf
in
shl
inc
aad
mul
pop
stc
inc
imul
jnp
(bad)
scas
add
lock
faddp
mov
jmp
stos
ins
fidivr
or
xor
rol
fmulp
and
pop
(bad)
in
adc
fcomp
adc
xor
adc
outs
pushw
push
sbb
es
mov
loop
stos
lods
shr
and
xlat
mov
cmp
daa
fcom
ds
bndldx
mov
add
test
push
movs
add
dec
or
cwde
hlt
add
mov
gs
mov
retf
xor
cmc
mov
int
cmp
mov
in
jo
aad
loope
xchg
cmp
mov
test
push
xchg
(bad)
jns
and
test
outs
push
cli
jl
xor
int
sbb
aaa
fs
add
mov
jecxz
jno
cdq
jg
cmc
dec
pusha
lea
imul
loop
fstp
push
jge
jle
hlt
mov
shr
sbb
inc
fwait
cmp
cld
lods
mov
pop
mov
adc
mov
enter
inc
xchg
leave
jecxz
jbe
pop
xchg
xor
outs
mov
dec
inc
mov
(bad)
inc
sub
sub
sbb
ss
mov
dec
mov
popa
outs
and
js
adc
cmps
ins
cmps
movs
sbb
xor
or
das
xchg
sbb
add
mov
xor
and
mov
xchg
aam
push
or
xor
sub
in
sahf
repz
or
lods
inc
call
ds
cdq
ffreep
lock
mov
test
loopne
sub
aam
jecxz
test
jle
int3
push
call
inc
xchg
xchg
xchg
fwait
jnp
push
xchg
or
add
or
pop
adc
fstp
fsubr
sub
data16
pop
push
dec
retf
das
inc
pusha
in
mov
sbb
xchg
cmp
cmps
pop
adc
dec
shl
fnsave
mov
xchg
ins
sahf
movs
loope
aad
xlat
inc
outs
lds
test
cwde
xor
repnz
inc
out
leave
(bad)
mov
inc
or
cmps
mov
ss
mov
rep
sahf
jmp
ja
adc
es
cmp
aad
leave
dec
add
xchg
pop
adc
imul
push
icebp
xchg
int
mov
lods
ja
stos
pushf
imul
ja
inc
xor
(bad)
loope
xor
inc
(bad)
jae
loop
inc
iret
je
pop
out
sub
push
popa
ins
ins
mov
loope
or
push
addr16
in
xchg
mov
imul
rcl
fdiv
push
gs
jno
cmps
mov
int3
imul
shl
or
push
ins
fisttp
xchg
cld
sbb
sbb
shl
mov
jecxz
test
jo
inc
sbb
cs
dec
dec
test
xchg
nop
cmps
stc
mov
mov
retf
test
imul
xor
xlat
sahf
bound
in
es
mov
mov
inc
call
test
xchg
mov
pop
sbb
cli
push
cmp
cmp
xor
inc
ins
sub
xor
push
bound
popf
sti
imul
loopne
jge
pop
and
scas
in
fbld
movs
dec
(bad)
xlat
mov
sub
dec
xor
xchg
cvttps2pi
and
xor
and
sub
inc
popf
push
jp
cmps
sub
icebp
xor
adc
push
pop
jbe
add
nop
ficomp
sub
leave
xor
xor
add
retf
sbb
test
sub
dec
dec
inc
(bad)
mov
jl
or
mov
push
adc
sbb
mov
sub
cld
xchg
sub
out
out
mov
cmps
je
adc
jnp
add
jle
sbb
out
add
mov
cmp
ror
add
jnp
inc
jnp
dec
fld
mov
movs
and
arpl
push
daa
xor
ja
adc
bnd
inc
stos
cmps
loopne
aaa
mov
or
ror
cmp
sub
add
les
sahf
adc
or
sub
movs
cmp
mov
jnp
lods
jns
ror
xlat
adc
stos
out
js
mov
add
stos
jne
loopne
xor
mov
adc
dec
enter
in
jno
mov
sbb
pop
pop
push
lds
sti
and
jle
dec
push
(bad)
jb
(bad)
inc
xchg
not
cdq
movs
ins
push
inc
or
ret
add
mov
add
push
inc
push
adc
xor
and
inc
or
js
push
es
fcmovnb
sar
xchg
and
jae
test
daa
adc
inc
inc
fwait
neg
cmp
mov
add
data16
jecxz
jb
es
xor
sbb
jp
daa
push
pop
cmp
enter
(bad)
scas
scas
push
mov
je
xchg
mov
mov
mov
loop
hlt
mov
push
(bad)
neg
(bad)
jbe
mov
je
lods
inc
mov
enter
cmp
sub
mov
scas
pop
(bad)
lods
test
test
xor
bound
in
jbe
push
mov
gs
popf
call
out
jne
adc
shl
loopne
fadd
mov
push
or
fidiv
dec
inc
mov
xor
sahf
hlt
jl
shl
push
xchg
sub
sub
test
adc
arpl
inc
stos
pop
ret
dec
in
mov
mov
bound
jbe
jno
in
int3
loope
adc
jns
or
mov
mov
retf
sbb
push
jo
sub
add
push
adc
sbb
(bad)
daa
sub
fnstenv
cwde
idiv
repnz
jbe
lods
(bad)
out
(bad)
cmp
pop
dec
enter
pop
cmps
(bad)
jbe
xor
inc
jno
repnz
mov
jbe
shl
mov
pop
lods
cli
pop
ret
aas
mov
push
jle
cs
aad
and
xchg
dec
leave
fist
xor
cmp
adc
mov
mov
pop
out
jae
cmp
stos
sti
fld
shl
mov
dec
sbb
and
ins
dec
leave
mov
stos
jb
mov
popa
leave
mov
(bad)
jo
(bad)
fisub
fidivr
inc
leave
mov
mov
jae
leave
cmp
fidiv
inc
push
aam
dec
aas
stc
push
adc
ficom
xchg
inc
loope
sbb
xor
ret
(bad)
cmc
stos
push
pop
inc
and
push
xchg
arpl
fs
dec
adc
jmp
call
pop
xchg
(bad)
dec
xor
sbb
or
leave
neg
rcl
jg
(bad)
sbb
jmp
test
sbb
fcomp
and
int
xchg
ret
cmp
sahf
jae
(bad)
js
mov
retf
sbb
jmp
idiv
or
mov
jmp
in
lds
mov
retf
in
pop
aam
repz
or
ret
push
xchg
cmp
lods
and
fmul
inc
xlat
pushf
xchg
jb
jle
pop
mov
and
sub
hlt
push
add
and
pop
jno
inc
mov
cwde
loopne
je
jb
inc
pop
xor
and
in
(bad)
popa
or
dec
dec
and
movs
ins
mov
cmps
cmp
leave
call
pop
xchg
cmp
or
jo
bnd
sub
and
cmps
cmps
in
retf
gs
jmp
xor
stos
pop
add
xor
gs
mov
in
jno
mov
test
adc
loop
call
or
(bad)
mov
retf
xchg
push
das
test
js
ss
cs
outs
push
jg
in
jp
sub
mov
pusha
adc
push
xchg
jnp
imul
xchg
inc
fldl2e
add
mov
mov
mov
mov
aas
ins
enter
jge
mov
cli
aam
arpl
fmulp
not
dec
jno
lods
test
push
mov
outs
push
xor
ja
or
xchg
mov
popa
sbb
pop
rcr
out
sub
jbe
or
js
sub
lahf
or
mov
in
pop
mov
int3
xchg
sti
imul
mov
fmul
cld
mov
push
cdq
int
dec
add
in
lods
add
frstor
fidivr
pushf
je
cmp
ret
cmps
mov
pop
dec
xor
call
jge
mov
gs
iret
or
adc
xchg
pop
adc
rcr
test
rol
fstp
inc
push
inc
je
retf
xchg
dec
arpl
push
mov
dec
cs
jecxz
mov
xchg
test
jmp
fdivr
lock
push
pusha
xchg
call
pop
xchg
cmp
jge
mov
cmp
xor
mov
xor
arpl
into
ror
test
jp
and
retf
jge
adc
jnp
cmp
inc
mov
scas
mov
lock
xchg
not
add
aam
outs
mov
leave
sub
imul
jge
mov
pop
gs
and
sub
test
call
xlat
loope
bound
dec
das
add
and
enter
pop
or
scas
dec
cmps
jmp
fld
mov
(bad)
xor
fiadd
jno
rol
xchg
inc
pop
xchg
inc
rcr
and
clc
mov
xlat
or
pop
xor
adc
(bad)
jbe
fild
mov
mov
push
sbb
loop
push
mov
iret
adc
das
pop
inc
mov
sub
aad
call
mov
push
sbb
out
enter
push
push
xchg
fiadd
(bad)
out
inc
cmp
push
imul
mov
aaa
call
test
loop
push
ds
jns
dec
rcr
sti
dec
mov
mov
(bad)
mov
out
(bad)
scas
and
fcom
ins
pop
outs
gs
leave
and
retf
inc
adc
mov
js
xchg
(bad)
repnz
js
test
and
mov
jmp
pop
sbb
daa
(bad)
pushf
(bad)
shr
and
push
push
cmp
mov
in
mov
ins
mov
cli
push
jl
ret
xchg
xor
lea
xchg
inc
stos
xor
rcr
shl
adc
dec
cmp
mov
daa
pushf
repz
and
dec
inc
mov
push
cmp
or
push
out
and
cmp
sub
sbb
add
cmp
push
pop
mov
sub
or
cmp
pop
lods
add
cdq
retf
mov
dec
mov
jp
cmp
inc
mov
jle
ret
sbb
or
push
push
daa
jge
jp
xchg
imul
das
or
sub
ja
shl
pop
mov
out
add
ins
mov
je
inc
push
fist
loop
movs
sbb
mov
sbb
rcr
jne
cs
int3
pop
jecxz
cwde
dec
jbe
add
ret
jl
inc
pop
fst
push
pop
xor
or
cmp
shr
sub
dec
call
fistp
scas
mov
test
adc
test
imul
add
sub
mov
xor
pusha
sub
mov
cwde
xchg
aam
bound
cmp
mov
jmp
cmps
push
mov
cmps
add
jae
es
sub
stos
xchg
int3
adc
sub
dec
arpl
fs
pop
jae
mov
mov
inc
sbb
cmp
push
adc
adc
ds
bound
push
xor
dec
daa
sub
pop
xlat
test
inc
sub
xor
les
inc
jo
dec
cwde
fwait
out
loopne
pop
ret
ret
jnp
mov
mov
dec
xchg
inc
pop
out
and
sbb
fdiv
jne
and
xchg
xor
mov
add
jo
inc
push
jle
fimul
jnp
rol
mov
sub
lods
lods
mov
cmp
jmp
xchg
loop
adc
neg
mov
or
jae
xor
xchg
dec
adc
nop
sti
inc
push
aas
cs
lods
clc
nop
pop
scas
and
ins
rcl
dec
mov
mov
add
fisttp
fcomip
or
cmp
xabort
loope
mov
mov
mov
xchg
mov
dec
pusha
push
sub
sbb
int
scas
xchg
cld
add
dec
cmp
cld
mov
and
sahf
dec
jl
test
jmp
mov
outs
inc
popa
jno
in
lds
inc
xchg
pop
push
(bad)
adc
xlat
shl
rcr
leave
hlt
scas
jmp
add
inc
sbb
jmp
mov
mov
retf
jecxz
fcom
test
pop
pop
das
xchg
inc
pmaxub
sbb
add
push
addr16
mov
enter
(bad)
cdq
push
movs
lds
cmp
repnz
and
mov
pop
loopne
jmp
xor
push
push
pop
xor
or
or
and
inc
outs
sar
jns
std
inc
fsubrp
dec
hlt
in
fbld
enter
xor
mov
lods
or
dec
dec
scas
rcl
movs
dec
(bad)
arpl
xlat
es
sahf
repz
cmp
mov
dec
jo
mov
ror
xor
mov
push
ja
sub
pop
mov
clc
(bad)
loop
enter
jmp
fs
(bad)
dec
push
xchg
std
mov
sbb
sar
lods
mov
mov
aas
out
sbb
dec
pop
leave
dec
repnz
icebp
jg
cdq
call
loopne
movs
jbe
pop
xchg
rol
jmp
(bad)
loopne
shr
pop
adc
(bad)
in
push
pop
mov
push
jno
loope
pop
or
mov
loope
ret
lahf
and
inc
xor
(bad)
in
inc
and
cmp
xchg
shl
maskmovq
jecxz
jl
sub
mov
dec
imul
mov
gs
aaa
add
repnz
mov
sub
mov
dec
dec
nop
add
int
int3
pop
sbb
cmp
add
cmp
push
mov
inc
lock
es
inc
ja
mov
(bad)
mov
xchg
inc
mov
push
inc
stos
leave
xchg
call
and
dec
xchg
mov
adc
or
mov
(bad)
scas
rol
ror
sub
xchg
(bad)
lock
push
lods
adc
jmp
clc
out
(bad)
lods
sub
adc
std
mov
add
inc
push
xchg
mov
push
mov
outs
xchg
data16
fwait
mov
mov
cld
enter
leave
adc
mov
bound
pusha
gs
nop
and
cs
and
jge
inc
adc
(bad)
inc
aaa
adc
or
push
push
pop
rol
dec
outs
mov
das
mov
out
jp
mov
xchg
jnp
pop
pop
xchg
jg
mov
aam
aaa
push
xor
mov
jbe
mov
js
inc
int3
mov
add
jno
loopne
xchg
stos
push
shr
or
add
les
adc
lahf
sub
mov
jecxz
jns
mov
adc
stos
xchg
psubd
fwait
dec
pop
jg
adc
inc
cld
fs
sub
jns
popa
adc
mov
sub
inc
shr
mov
mov
je
dec
mov
inc
inc
leave
ret
xchg
push
push
or
push
mov
movs
pop
adc
or
imul
sub
fnsave
fsub
add
push
ins
ret
lods
daa
jp
inc
out
outs
out
cwde
dec
lahf
mov
jb
and
push
ficom
xchg
cmps
inc
test
cdq
mov
cdq
out
mov
icebp
xlat
mov
inc
sbb
or
pop
sbb
test
mov
lods
inc
xor
(bad)
xor
icebp
jne
sbb
cli
jmp
stos
pop
in
cli
adc
jne
add
test
mov
dec
xchg
push
xor
pop
lea
cs
pop
or
gs
xchg
test
mov
mov
sbb
fidiv
push
test
rcl
jecxz
pop
enter
popa
mov
aas
movs
test
mov
cld
into
cli
jmp
retf
or
or
jns
or
test
movs
rol
xor
cmp
fwait
or
jge
lock
sbb
lods
lahf
mov
cmp
idiv
fld
pop
mov
into
pop
pusha
cmps
mov
mov
pop
xor
mov
rcl
and
mov
out
lock
rep
inc
xor
xchg
cmc
int
lahf
mov
aas
inc
test
push
outs
int3
in
aaa
xchg
popf
out
and
pop
rcl
pop
fidivr
das
push
movs
sub
sbb
fstp
push
test
test
dec
cs
mov
xor
outs
popa
xchg
repnz
inc
push
jmp
lods
pusha
(bad)
adc
fwait
rcl
pop
sub
test
loopne
dec
pop
mov
pop
test
push
ins
lahf
mov
pop
fimul
das
test
retf
mov
aad
sub
aas
mov
mov
inc
pop
leave
mov
jecxz
nop
(bad)
mov
xchg
stos
not
dec
frstor
pop
fisttp
jo
mov
xlat
pop
jecxz
lahf
outs
fsub
or
mov
mov
(bad)
jmp
retf
out
push
fs
mov
push
push
jmp
cmps
cmp
jne
pop
pop
leave
mov
into
int3
mov
jne
jg
in
arpl
mov
jp
outs
rcr
mov
xchg
shl
jecxz
mov
ret
sub
cmovs
addr16
or
int3
xchg
mov
pop
clc
mov
pop
call
lods
pop
leave
sahf
cmps
sbb
jp
push
push
ffree
ins
mov
daa
lds
hlt
sbb
mov
mov
mov
sbb
dec
pop
icebp
int3
retf
inc
sbb
inc
mov
call
push
imul
sbb
mov
jg
shl
repz
push
and
das
pop
sbb
xchg
mov
test
sub
push
jmp
cdq
out
jg
inc
push
adc
sub
mov
orps
in
jne
push
pop
fnstenv
pop
jmp
sar
xor
xchg
dec
mov
out
push
stos
mov
sub
jo
push
out
push
mov
inc
xor
push
mov
xchg
mov
iret
imul
in
imul
repz
scas
je
mov
push
loope
add
out
frstor
cld
lock
mov
stos
pop
push
and
add
xchg
push
stc
loope
mul
sbb
and
cld
mov
loop
mov
xchg
cmps
adc
sub
mov
ss
xchg
cmp
sub
xor
retf
aas
lds
inc
aaa
mov
fcom
in
ret
sub
xor
cmp
test
fwait
sbb
jnp
cld
std
xchg
ins
and
popf
mov
(bad)
fidivr
push
bound
jnp
mov
inc
(bad)
add
sub
aas
push
xor
jno
rdmsr
mov
(bad)
lds
call
pop
(bad)
daa
test
sbb
inc
inc
cmp
(bad)
ror
push
cmp
rcr
shr
mov
and
cmps
push
cli
or
jl
mov
jo
mov
jbe
adc
mov
rcr
xor
test
fmul
in
(bad)
xlat
cli
lock
lock
ins
jbe
dec
or
xchg
mov
jbe
sahf
retf
mov
cmp
xchg
js
mov
push
and
xchg
faddp
outs
mov
pop
and
xlat
or
mov
pop
test
scas
sub
cld
jmp
test
xor
sbb
aad
inc
or
jle
xor
(bad)
test
and
imul
cmp
ss
fcomp
jo
imul
xchg
inc
pop
cwde
call
and
and
cmp
mov
push
or
pop
dec
inc
jb
ins
(bad)
cmp
ins
or
add
and
pop
lahf
and
pushf
sub
and
jo
data16
loope
push
test
out
sbb
rol
and
fisttp
mov
pop
fadd
gs
mov
inc
push
retf
inc
ja
rcl
ds
cdq
lahf
fcmovnbe
pop
int
inc
push
rcr
icebp
mov
jno
mov
pushf
loop
mov
fwait
xor
jae
repnz
inc
add
cwde
and
fwait
mov
(bad)
call
outs
cs
and
outs
aaa
cmp
pop
out
(bad)
mov
push
paddw
fild
loop
pcmpeqb
and
(bad)
int3
dec
inc
pusha
dec
int
rcl
aam
mov
push
data16
es
scas
cld
into
fistp
test
scas
mov
pop
cmp
sub
push
xor
cs
or
retf
inc
and
pop
test
int
nop
jecxz
mov
in
ins
and
icebp
and
mov
xchg
xor
leave
mov
(bad)
mov
xor
jge
cmc
mov
sub
push
cmp
xchg
push
sub
pushf
mov
fwait
xchg
jge
cld
ret
in
(bad)
xor
pushf
leave
pop
xchg
cwde
mov
push
(bad)
fstp
or
fbstp
push
movs
sub
inc
hlt
aaa
cdq
and
std
or
jo
jb
push
idiv
push
sbb
sbb
mov
jmp
shr
adc
out
rcl
mov
shl
cmp
das
ja
or
xchg
dec
in
and
pop
mov
push
push
sahf
and
popf
add
aas
rcr
mov
sub
cmp
jle
pop
fistp
(bad)
jo
daa
fucomi
pushf
pop
dec
ds
scas
ds
bound
pop
push
xlat
mov
cmc
sub
repz
add
movs
bound
inc
jne
pop
test
and
int3
ja
mov
sbb
add
or
call
das
sbb
out
sub
iret
add
movs
test
(bad)
dec
sbb
or
mov
fadd
jmp
es
add
pop
ret
sub
aaa
add
daa
gs
cmp
dec
rol
xor
jmp
mov
sub
sub
xchg
movs
fstp
int
and
xchg
sbb
dec
and
arpl
mov
push
bound
push
xchg
ret
fisubr
push
adc
lahf
rcr
pop
aas
ja
cmp
out
cmps
adc
jp
push
pushf
(bad)
cmc
pop
rcr
inc
(bad)
pop
add
iret
push
daa
mov
std
ins
cmps
xor
sbb
pop
aaa
pop
sub
test
div
call
or
cmp
pop
sbb
call
push
fdivr
popf
jmp
xchg
jecxz
mov
mov
jb
or
or
add
rcl
js
pop
ja
mov
ja
jnp
jns
int
aad
push
adc
sbb
mov
retf
push
adc
sti
(bad)
cmp
mov
mov
or
mov
inc
imul
cmp
cwde
ins
xchg
test
sbb
jbe
and
sbb
xchg
pop
xchg
out
push
add
dec
lock
mov
mov
movs
fiadd
ja
nop
stos
mov
pusha
mov
push
imul
fcomp
jbe
lock
cli
xor
imul
cli
es
mov
push
outs
and
fcomp
mov
mov
imul
daa
push
loope
out
in
into
xchg
and
(bad)
stos
pop
aam
cmp
call
hlt
mov
mov
xchg
or
sbb
aam
mov
leave
leave
mov
add
pop
mov
out
sbb
add
(bad)
mov
int
hlt
das
lods
mov
sbb
or
dec
xchg
sbb
xchg
inc
daa
jge
dec
rol
jmp
inc
xchg
imul
xchg
(bad)
mov
mov
adc
xor
fnsave
and
pop
push
imul
dec
sbb
sub
dec
mov
es
test
ret
clc
mov
sub
loop
add
in
and
inc
jbe
dec
int3
loope
dec
mov
jge
push
cmp
jmp
out
push
xchg
cmps
xchg
dec
sbb
mov
daa
icebp
mov
sub
or
std
das
sbb
leave
es
jg
into
push
sbb
cmp
xchg
popf
jmp
and
pop
pop
mov
jnp
cli
out
stos
cmp
mov
sbb
or
jbe
les
sub
mov
call
vpshlq
fld
arpl
xlat
or
pop
jge
lock
and
repz
jbe
mov
mov
dec
pop
out
shl
or
xor
adc
xor
std
and
jl
cmp
or
inc
mov
aas
sub
jnp
loope
shr
popf
icebp
out
push
scas
stc
fcom
gs
repz
ss
sub
je
jp
jmp
push
jns
pop
push
in
inc
neg
pop
push
lods
xchg
pop
xor
stos
je
movs
cmp
in
pop
gs
stc
dec
sub
mov
outs
push
ds
and
xchg
mov
and
inc
outs
and
inc
cmp
or
mov
sub
adc
push
add
test
mov
in
sar
mov
stc
cmp
or
aaa
push
cli
call
sbb
sbb
xor
cld
jl
push
neg
and
or
mov
mov
sbb
mov
clc
push
jmp
popa
jb
ret
mov
es
pop
pop
cmc
aas
outs
xchg
(bad)
hlt
xchg
dec
lods
pusha
and
add
inc
jae
(bad)
cmc
inc
mov
and
inc
lods
fst
loopne
xor
mov
mov
loope
or
dec
lock
sub
ins
retf
(bad)
sbb
cmp
lock
dec
mov
das
or
cli
fisubr
(bad)
mov
fldenv
pop
dec
adc
jp
test
and
cdq
arpl
cwde
dec
stos
and
sub
(bad)
sahf
or
sbb
adc
and
mov
sbb
sldt
xchg
jno
cmps
mov
dec
xor
xchg
inc
xor
xchg
(bad)
push
pusha
sbb
ins
std
jnp
push
xchg
inc
retf
clc
jl
cmp
add
fisub
or
ins
into
(bad)
dec
cmp
jnp
xchg
jns
mov
mov
(bad)
mov
popa
retf
out
rol
dec
fld
aas
shl
fadd
jmp
sub
mov
sub
mov
and
aam
dec
or
xchg
or
pop
int
pop
mov
mov
test
fstp
int3
xchg
or
mov
cli
mov
sub
xchg
scas
stos
push
mov
ins
jne
int
popa
(bad)
shl
shl
sub
or
(bad)
ins
push
bnd
xor
jmp
stos
and
pop
ret
pop
dec
out
pop
mov
(bad)
xchg
cld
xchg
clc
les
leave
ret
retf
adc
mov
xchg
pop
loope
jb
fstp
xor
adc
enter
loopne
out
add
imul
in
(bad)
mov
jecxz
cmp
xchg
iret
ja
dec
js
xor
jg
dec
jae
inc
ret
ja
and
(bad)
sti
int3
lods
hlt
ins
mul
aaa
jns
aas
cli
rcr
loop
and
(bad)
fld
add
pop
es
dec
xchg
jmp
aas
or
outs
xlat
lock
in
retf
cmps
out
(bad)
cmps
gs
arpl
adc
in
in
out
test
adc
cld
jb
mov
and
sbb
push
outs
inc
xchg
fidivr
xchg
les
icebp
sub
pop
out
lods
or
cmp
rol
sub
cli
push
(bad)
cmp
inc
push
nop
imul
scas
scas
sbb
clc
sbb
ins
mov
fisttp
cmc
mov
(bad)
mov
add
hlt
and
ja
pushf
inc
jmp
xchg
call
jno
and
cli
es
aad
inc
bnd
mov
int
(bad)
(bad)
lahf
repnz
cli
add
cmc
inc
enter
adc
fcom
(bad)
jbe
mov
cld
in
pop
outs
cmp
and
push
outs
dec
inc
imul
mov
mov
movs
shr
psubw
and
jns
fcomp
jmp
pop
cmps
repnz
adc
cld
and
je
fcmovb
enter
cmp
pop
pop
adc
ret
(bad)
ja
aas
dec
mov
hlt
ins
xor
out
dec
int
rcl
hlt
and
js
cmp
in
bound
pop
clc
ss
add
jbe
sti
and
jnp
ss
sub
sbb
xchg
mov
loop
sbb
mov
jae
pop
in
cdq
sar
pop
jg
dec
xchg
sub
jo
dec
xchg
or
jne
ret
(bad)
jnp
mov
mov
pop
aas
cli
and
add
(bad)
sub
xchg
sahf
mov
mov
add
xchg
mov
lods
dec
xchg
fsub
movs
pop
cmp
icebp
(bad)
push
pop
mov
jnp
adc
jo
out
cld
push
jbe
das
xchg
pop
sbb
jmp
dec
dec
call
adc
movs
jp
lods
fcomp
push
lods
mov
inc
cmp
mov
or
inc
jo
inc
(bad)
(bad)
ror
sub
inc
ret
(bad)
daa
push
push
push
(bad)
cmps
icebp
jmp
adc
jnp
mov
or
hlt
das
sub
leave
leave
and
inc
int
cmp
popf
ret
inc
ret
std
jg
push
jae
jle
aaa
sub
dec
(bad)
mov
and
sbb
sbb
push
int
xor
xor
cmp
inc
rcr
jecxz
retf
call
pop
aad
ja
dec
inc
push
les
sbb
outs
imul
pop
xchg
shl
ret
nop
imul
sbb
imul
adc
test
sbb
mov
jg
mov
adc
push
fwait
ins
test
mov
hlt
stc
out
sahf
pop
push
fwait
push
inc
popa
inc
retf
push
stos
dec
sub
into
adc
cmp
popf
mov
mov
or
mov
jge
addr16
sbb
(bad)
mov
les
pop
mov
jge
out
loopne
sbb
movs
sti
(bad)
push
inc
push
out
(bad)
or
hlt
cmps
jne
inc
add
adc
sub
hlt
add
(bad)
xor
cld
ins
adc
push
fs
fidiv
stc
sub
or
icebp
aad
lods
adc
fs
and
cmp
sbb
jge
and
out
retf
es
movs
lea
or
xchg
mov
sti
mov
and
(bad)
in
jo
out
sub
cmp
fs
mov
and
pop
xor
rcl
data16
stos
aas
or
pop
cs
icebp
xor
stos
in
call
xchg
or
sbb
pop
mov
add
xchg
adc
js
push
xchg
push
jne
mov
sbb
outs
sub
xor
adc
loope
cdq
push
out
fidivr
pop
xchg
xor
sub
xchg
fiadd
jp
outs
pop
faddp
pop
repz
xchg
(bad)
gs
mov
push
dec
sar
out
mov
mov
int
popa
push
xor
bound
xor
movs
cmpxchg
mov
xor
and
fcom
(bad)
aaa
data16
pop
mov
sbb
not
mov
out
jo
ficomp
and
ins
or
add
outs
inc
pop
and
or
retf
lahf
outs
cdq
cmps
outs
cmp
(bad)
inc
loopne
repnz
fdivr
int3
cmp
and
jge
inc
adc
sub
mov
rcr
test
inc
fsubr
out
add
cmp
rcr
pop
cmps
call
xor
clc
pop
xor
out
in
sbb
mov
and
xchg
(bad)
or
pop
jbe
mov
jae
xchg
cmp
arpl
(bad)
or
ja
adc
add
ins
sub
mov
fwait
movs
icebp
fwait
mov
pop
imul
mov
fcom
ror
pushw
aad
jl
fcomp
add
jl
(bad)
jb
push
push
pop
(bad)
aad
or
ds
mov
movs
jl
adc
push
adc
dec
xor
push
and
push
sysret
js
or
jmp
sub
push
xor
dec
inc
dec
ficom
sbb
es
cmpxchg
xchg
push
lds
mov
jge
cdq
mov
jmp
dec
out
cmovne
cmp
dec
push
xchg
push
test
addr16
adc
push
pop
push
ds
inc
mov
push
fs
pop
mov
push
fcomip
or
lahf
jnp
dec
push
add
jge
call
or
in
fwait
ds
popf
cld
rol
imul
in
mov
pop
cwde
jnp
test
imul
pop
xlat
dec
fdiv
into
clc
jge
sub
adc
aam
push
mov
xchg
sub
pop
mov
xchg
dec
add
pcmpeqb
ret
jmp
inc
jne
cmp
or
xor
pop
cmp
sub
and
jg
stos
sub
aaa
push
and
(bad)
loope
daa
(bad)
daa
dec
lods
or
imul
adc
mov
nop
fsubr
jecxz
pop
and
scas
pop
mov
adc
dec
and
adc
cmps
loop
sbb
mov
nop
aam
add
pop
pop
addr16
pop
dec
sub
push
arpl
mov
pusha
sub
mov
shl
jae
mov
pop
imul
sahf
cmp
arpl
test
xchg
dec
sbb
mov
test
hlt
nop
xchg
jmp
add
xchg
mov
mov
sub
icebp
(bad)
mov
int
into
xchg
ret
pop
lahf
(bad)
sub
adc
out
sbb
stc
sub
inc
push
cmc
cwde
add
mov
ror
jmp
call
xor
enter
daa
lods
mov
pop
mov
jp
inc
mov
xchg
movs
inc
jmp
and
adc
movs
jle
cwde
adc
mov
iret
hlt
and
(bad)
iret
fdiv
mov
adc
repz
ja
sbb
dec
fwait
xor
adc
pop
ds
dec
das
sub
xchg
call
push
cmp
in
inc
jmp
mov
add
sub
lock
cmp
lock
cmp
sti
pop
sar
(bad)
mov
xlat
hlt
jns
lods
mov
mov
jbe
push
xor
ins
xor
dec
add
stos
push
jmp
sahf
pop
scas
imul
cmp
cmp
sar
loop
jne
out
sar
add
jbe
je
mov
jmp
rol
div
imul
jl
movs
imul
xor
jle
test
or
mov
ds
test
xchg
mov
test
bound
rol
ja
cli
xchg
ret
dec
call
lods
jecxz
out
mov
lock
and
shl
push
adc
inc
and
mov
or
cmp
fwait
dec
dec
cmp
(bad)
hlt
out
or
cmc
stos
movntq
rcl
fdiv
sti
pop
out
ds
shr
not
into
addr16
adc
scas
lock
(bad)
push
xchg
out
mov
push
mov
stos
dec
cmp
imul
sub
shr
or
mov
fmulp
in
es
xchg
mov
(bad)
jbe
jae
ds
(bad)
cwde
xchg
sbb
fild
in
jge
xlat
fmul
xor
mov
outs
out
add
mov
icebp
retf
push
dec
add
sbb
(bad)
pop
ret
inc
outs
jecxz
or
(bad)
(bad)
sbb
dec
js
ret
push
retf
push
mov
loope
pushf
mov
fdiv
xor
ret
lock
and
adc
cmp
inc
or
push
pop
xor
jge
mov
mul
popf
or
xchg
outs
sub
push
jbe
into
dec
test
rcr
(bad)
push
push
ins
sub
in
sbb
mov
lds
jge
mov
cdq
pop
rol
lock
pop
inc
loopne
push
addr16
stos
sbb
cld
call
scas
lock
cmp
jne
inc
fwait
push
or
pop
xor
imul
int
arpl
push
cmp
enter
push
mov
in
das
or
adc
(bad)
pop
mov
mov
pushf
or
pop
xchg
dec
jmp
sbb
fistp
dec
push
cli
push
aaa
sbb
dec
mov
pop
sahf
aaa
leave
(bad)
scas
inc
js
cdq
pop
sar
xor
jmp
or
adc
mov
cmp
in
out
mov
pop
jo
lea
sbb
js
or
test
mov
sar
inc
cmp
or
in
lock
jns
fsub
pop
(bad)
(bad)
pop
je
(bad)
aaa
imul
out
lea
sbb
or
bound
aas
sbb
sbb
pop
sti
movs
push
pop
test
push
test
nop
push
jp
in
out
test
sbb
fistp
sbb
pop
sti
(bad)
or
rcr
inc
push
in
push
and
(bad)
dec
aam
(bad)
ret
rcl
dec
pop
scas
retf
cmc
lds
fld
or
and
loope
sub
inc
dec
rdpmc
inc
or
jbe
mov
xor
inc
sub
xchg
xchg
xor
fsubr
outs
cmc
sub
scas
jl
(bad)
xchg
(bad)
scas
ret
pop
test
enter
or
sub
jmp
xchg
jae
mov
nop
enter
mov
mov
adc
cmp
loop
call
cdq
fs
aaa
cmp
loopne
mov
push
lods
daa
push
pop
adc
enter
lods
adc
movs
push
call
dec
xchg
adc
rcl
xchg
sbb
call
push
add
sub
cmps
into
pop
or
movs
pop
and
xchg
xor
inc
inc
cmps
das
data16
(bad)
mov
out
outs
lock
or
xor
pushf
xchg
jl
jb
push
js
add
inc
pop
xor
out
pop
pop
and
ror
cmps
push
mov
in
mov
pop
push
add
(bad)
mov
mov
or
dec
cli
movs
fst
ret
sub
xchg
in
or
aas
stc
and
jo
rol
mov
(bad)
sti
xchg
add
mov
sbb
cmc
jg
mov
jno
hlt
or
outs
and
ss
xchg
retf
mov
js
leave
sub
fdivr
icebp
sbb
and
nop
add
in
int
mov
and
sbb
xchg
aam
mov
mov
shr
mov
jmp
cmp
cmps
cs
pop
add
cmps
cmps
cmp
out
stc
or
xor
in
sbb
pop
and
retf
or
cmp
mov
mov
sar
mov
inc
idiv
(bad)
adc
sti
xor
pop
std
jbe
jae
adc
inc
out
push
jbe
mul
pop
jp
test
imul
dec
inc
jge
jb
sub
js
mov
pop
aad
jecxz
jne
sub
test
jecxz
adc
jg
pop
repnz
ret
adc
mov
inc
jmp
stos
(bad)
cmp
and
xchg
sbb
mov
xor
pop
aas
push
mov
mov
mov
fwait
and
mov
into
repz
adc
mov
jmp
loop
(bad)
ret
mov
sar
outs
cmp
mov
fimul
in
in
push
popa
icebp
mov
xchg
mov
xchg
mov
xchg
push
mov
dec
sub
pop
cmp
inc
inc
jmp
push
cld
gs
call
ja
sbb
xor
shl
rcr
mov
push
lods
add
push
inc
sbb
jo
sbb
outs
cmc
into
pushf
jmp
push
and
add
push
and
sub
test
retf
outs
retf
push
dec
mov
pop
xor
jmp
dec
adc
mov
mov
nop
jmp
mov
retf
jge
call
test
inc
or
loop
cdq
add
fcom
(bad)
jle
scas
and
(bad)
cs
pop
ret
mov
sub
popf
adc
cmp
cmp
push
cmp
fs
adc
cli
xor
or
(bad)
stos
leave
and
inc
xor
int3
push
mov
mov
jno
xchg
mov
in
sub
inc
cmp
and
pop
or
sbb
in
sbb
gs
(bad)
jl
xor
xchg
imul
cmp
push
pop
push
dec
push
mov
jbe
das
and
dec
lock
and
(bad)
mov
ins
rcl
test
sbb
or
sub
pop
stc
fcom
push
in
idiv
data16
sahf
mov
nop
add
dec
test
and
cmp
sub
mov
clc
lds
dec
outs
xchg
jmp
xor
xchg
push
or
daa
test
shl
jg
pusha
mov
mov
mov
movs
nop
push
mov
xchg
sbb
push
adc
sbb
sahf
mov
sub
or
int3
mov
mov
repz
xor
jl
adc
fisttp
iret
dec
jle
add
jle
pop
jecxz
push
cmp
cmp
(bad)
out
jmp
ret
mov
mul
out
or
jb
push
add
js
adc
rol
jnp
dec
xor
retf
mov
cmp
ins
outs
mov
xor
rcl
in
out
daa
cmc
ja
call
add
scas
push
aam
inc
cmp
call
cmc
pop
jns
jo
dec
inc
aaa
inc
sub
les
mov
xchg
test
fld
pop
aad
ja
retf
cmp
pop
dec
loopne
xchg
mov
daa
push
dec
mov
pop
retf
and
jnp
fcmovu
sub
mov
fstp
sbb
(bad)
retf
ins
jns
xor
ret
enter
ja
in
xchg
(bad)
cmp
add
pop
jae
(bad)
test
les
push
int3
pop
ins
xchg
push
aam
add
rol
inc
xor
adc
ins
cdq
clc
xchg
lods
mov
sub
xchg
je
dec
ficomp
pop
punpckhbw
into
push
add
fimul
pop
je
xor
cmp
call
enter
adc
jg
mov
jo
(bad)
adc
mov
adc
hlt
loope
stos
and
xchg
jle
add
inc
xchg
cmp
or
xchg
cdq
or
inc
movs
pop
push
loopne
pop
cmp
popa
push
inc
mov
dec
je
pop
jns
and
ins
jne
add
ret
je
jge
lock
fnstsw
arpl
dec
jo
into
push
mov
inc
sti
in
pop
retf
push
(bad)
es
das
push
lock
out
shl
sbb
inc
sahf
dec
pushf
sub
ja
adc
loop
add
xchg
and
lods
pop
gs
mov
pop
ja
cmp
outs
sub
sub
sub
out
xchg
xor
leave
test
inc
pop
sbb
push
ss
es
dec
stos
je
test
in
or
fstp
sbb
test
pusha
(bad)
mov
fild
fadd
jecxz
sbb
mov
xor
sub
xrstor
(bad)
cmps
and
inc
inc
push
bound
jne
sti
addr16
sub
out
push
enter
call
addr16
call
mov
or
sbb
cli
add
sub
jp
retf
adc
xor
std
imul
aas
aas
shr
cs
test
pop
or
dec
popf
push
lea
push
pop
inc
les
cmp
aas
in
inc
or
(bad)
scas
xchg
pusha
das
(bad)
pop
loope
cmps
jnp
rol
push
jl
aaa
mov
imul
fild
cwde
fimul
pop
sbb
jl
add
out
sbb
rcr
push
popa
jo
repz
test
cmp
jno
clc
mov
pop
aaa
jo
jno
hlt
mov
lods
pop
(bad)
sahf
dec
push
mov
xor
(bad)
dec
mov
inc
cs
jecxz
(bad)
jmp
(bad)
cs
add
out
lods
jo
fucomip
sahf
pop
cmps
dec
mov
and
or
jmp
lds
leave
or
rol
sahf
sbb
mov
and
mov
pop
or
test
ss
je
push
pop
mov
movs
sbb
shl
or
mov
data16
inc
sub
into
push
dec
jbe
jne
cs
pop
sar
dec
jae
loop
add
dec
mov
dec
pop
add
adc
jg
lods
cmp
(bad)
cli
or
and
jns
movs
dec
xor
(bad)
std
jecxz
(bad)
cs
xchg
dec
pop
cld
sub
push
lea
shr
jle
dec
repz
and
push
stos
mov
push
ja
sub
rcl
mov
lods
mov
je
adc
out
hlt
loope
cwde
cvtpi2ps
push
inc
lods
stos
mov
push
iret
cmp
retf
hlt
ret
adc
or
shl
adc
mov
jo
test
cmp
or
xor
aas
or
xchg
mov
loop
mov
jp
out
inc
cmps
fild
mov
jg
cmp
mov
shl
mov
in
mov
sub
inc
clc
cmp
or
mov
ins
add
dec
and
into
mov
mov
push
in
pop
jmp
jp
out
inc
add
and
enterw
int
adc
ins
dec
iret
sub
repnz
mov
stc
or
fsubrp
rcr
pop
popa
popa
xchg
out
mov
sub
dec
mov
mov
adc
mov
pop
inc
xor
outs
add
jge
pop
jg
adc
fiadd
aad
test
xlat
xor
clc
inc
ss
loope
add
mul
push
sub
ret
fcom
bound
lods
inc
outs
(bad)
loopne
int
test
js
push
sub
mov
daa
inc
dec
push
dec
adc
xchg
retf
jecxz
adc
and
mov
lock
lahf
xor
jb
das
xchg
loop
sbb
add
fwait
xor
sar
adc
(bad)
inc
jmp
push
inc
push
mov
test
lahf
jg
aaa
inc
or
fidiv
bound
inc
or
xchg
mov
xor
jnp
leave
imul
leave
dec
fidiv
outs
je
xor
call
add
xor
mov
call
pop
sti
daa
push
js
add
mov
push
adc
push
fs
dec
jo
adc
popa
mov
dec
jecxz
div
mov
test
stos
shr
push
fsubr
shl
pop
sbb
mov
sbb
loope
shl
cmps
pusha
fwait
inc
iret
pop
les
fs
jp
test
arpl
push
mul
pop
sbb
jb
pop
xchg
fdiv
jge
inc
lock
or
sbb
mov
call
sar
xchg
mov
xor
cdq
inc
outs
inc
dec
sbb
xchg
mov
sti
(bad)
cmp
xchg
mov
iret
movs
es
fcomp
inc
addr16
adc
inc
movs
sbb
jno
lahf
mov
cmp
dec
add
adc
sahf
(bad)
add
stc
sahf
ds
clc
fild
arpl
ja
mov
cmp
push
mov
fsub
xchg
adc
xor
arpl
fidiv
mov
mov
data16
add
add
inc
dec
pushf
enter
cs
xchg
push
popf
mov
cmp
cmp
std
jae
xchg
out
daa
movs
bound
out
out
fs
test
imul
inc
lea
jae
(bad)
sti
mov
sbb
and
enter
(bad)
dec
test
retf
fcom
xchg
pushf
(bad)
stc
test
xor
jg
shl
mov
js
jbe
in
xchg
pop
and
imul
stos
in
mov
or
imul
fsub
ror
fwait
mov
mov
pusha
aas
pop
jp
movs
mov
xchg
adc
fadd
psubsb
je
outs
cmp
les
leave
push
(bad)
icebp
xor
sub
cmp
mov
das
dec
xor
or
sbb
int3
call
iret
shr
sbb
bound
cmp
or
ins
push
cdq
ss
iret
cmps
retf
push
call
dec
jno
xor
repz
out
push
mov
out
into
sti
and
pop
xchg
cmc
repnz
ss
xor
aad
jns
push
shl
mov
ds
or
mov
in
mov
shr
dec
xchg
repz
sar
je
fld
mov
dec
adc
fld
ja
mov
(bad)
fcmovnu
es
mov
mov
out
nop
xchg
xchg
xchg
int3
xchg
mov
mov
pop
outs
and
outs
sar
adc
fsub
xchg
in
push
xor
pop
cmps
(bad)
jmp
jl
sbb
(bad)
iret
and
jl
out
push
leave
cmp
xchg
(bad)
into
sub
inc
mov
addr16
lods
or
mov
data16
cmp
adc
cmp
push
xor
pop
mov
jl
push
xchg
stc
xor
stos
inc
fld
fist
mov
jo
cmp
cmps
jno
sub
cwde
cmp
xor
(bad)
xchg
aaa
pop
add
scas
and
or
add
and
inc
test
mov
xchg
and
inc
imul
test
inc
cld
ins
loopne
(bad)
jmp
adc
jge
js
xchg
mov
sbb
test
into
cmp
mov
fwait
jge
shr
xor
fadd
cld
(bad)
cmc
mov
pop
and
lods
mov
dec
mov
or
or
push
adc
cli
js
rcl
xor
push
pop
out
sub
ins
inc
cmp
aad
mov
sbb
push
mov
sbb
mov
and
pop
lds
ins
push
fsubp
out
mov
sbb
sbb
in
lds
push
loope
dec
or
push
test
(bad)
iret
mov
jmp
push
cmp
or
cwde
rcl
lods
mov
xchg
adc
jmp
dec
add
mov
push
xchg
xchg
lods
hlt
retf
xchg
add
mov
(bad)
std
cmp
shl
fcmovu
mov
int
dec
(bad)
mul
(bad)
loopne
sub
imul
mov
popa
xlat
sub
test
mov
add
pop
leave
retf
dec
fwait
repz
mov
call
sbb
and
pop
adc
mov
stc
push
sbb
jo
or
jl
cmps
out
mov
cli
cdq
mov
push
(bad)
fadd
mov
ja
dec
mov
test
push
mov
pusha
mov
sbb
ret
mov
push
out
mov
shl
sbb
pop
cli
lock
dec
imul
ret
dec
jns
jmp
lea
retf
jecxz
push
fwait
dec
sub
jmp
retf
mov
movs
push
or
and
mov
fisubr
fs
cmp
push
int
adc
push
es
hlt
test
loope
xor
mov
and
stos
push
fild
dec
test
dec
push
movs
jmp
std
push
adc
push
push
jecxz
or
scas
push
push
jmp
mov
movs
and
icebp
enter
aad
or
int3
xlat
popf
sbb
adc
xchg
in
push
retf
loopne
int
(bad)
aad
mov
imul
rcl
cdq
push
ret
xchg
jae
mov
test
fcom
lds
pop
and
in
adc
xlat
push
pop
out
int
jbe
into
in
in
sbb
in
ror
pop
iret
or
fs
fwait
sub
adc
or
ret
setle
mov
pop
ins
fcmovu
add
in
iret
jb
sub
inc
cmc
dec
gs
xor
aad
std
inc
or
shl
jae
outs
cmp
xchg
in
xor
sub
movs
cld
sub
jae
cmp
popa
outs
ret
inc
sahf
pop
or
sub
inc
gs
in
mov
or
sbb
adc
push
sub
rcl
out
push
mov
push
inc
xlat
push
jg
push
ret
xchg
or
push
fwait
cmp
sets
xchg
dec
ins
mov
cmp
mov
cs
cmp
sub
push
dec
loopne
(bad)
jb
mov
mov
shl
popf
add
fbstp
stos
clc
sub
cmp
lods
add
pop
cdq
rcl
test
test
shl
shr
push
les
test
jge
pop
push
mov
push
lahf
cmp
mov
push
add
dec
fcom
outs
mov
outs
and
gs
cmp
add
xchg
xchg
sub
ret
(bad)
movs
push
jnp
and
jb
cmp
sbb
out
or
xor
je
sub
call
aam
loopne
gs
iret
jge
adc
loop
ins
xor
addr16
push
add
mov
or
pop
or
xor
test
sub
in
std
inc
xor
mov
das
call
jb
inc
mov
repnz
in
lods
movs
imul
xchg
push
cs
sub
retf
xchg
je
pop
mov
sbb
mov
mov
adc
or
cmp
sti
fmul
pop
or
mov
imul
lods
loopne
and
cmp
pop
push
sbb
adc
jp
jae
add
and
dec
pop
add
in
adc
call
cmps
arpl
pop
cmp
test
fimul
xchg
sub
mov
push
leave
push
push
xor
cld
cdq
lahf
sar
xchg
dec
cmp
mov
in
fwait
pop
stos
shl
in
dec
dec
imul
sub
arpl
inc
jmp
mov
neg
dec
in
mov
ins
(bad)
xor
enter
or
cmp
sar
jns
pop
loope
ins
cmp
mov
mov
aad
adc
(bad)
xadd
xchg
pushf
jle
lahf
and
ficomp
shl
xor
popf
jmp
adc
push
jno
sbb
dec
hlt
test
stc
jl
outs
or
(bad)
shl
mov
test
xchg
xlat
sbb
fidivr
jnp
repnz
leave
mov
mov
jne
loop
addr16
popfw
enter
(bad)
jmp
rcr
frstor
mov
dec
xchg
lods
mov
pop
pop
call
push
sub
adc
les
sbb
(bad)
sbb
hlt
js
and
xor
jnp
mov
dec
out
adc
xor
mov
adc
hlt
mov
mov
cmovb
sbb
sti
mov
sub
test
push
arpl
push
loop
jecxz
dec
mov
int
mov
popa
dec
mov
dec
xor
add
cmp
ins
dec
dec
sub
adc
into
cld
pop
mov
mov
test
add
pop
(bad)
in
xor
push
or
push
outs
sahf
sar
ins
loope
dec
(bad)
fst
fisub
jnp
sar
fsubr
les
dec
out
cwde
outs
fistp
xchg
scas
(bad)
(bad)
cdq
inc
repz
xchg
jg
rcr
and
neg
ja
jnp
fstp
xor
mov
sti
(bad)
test
sub
lods
push
gs
or
fisttp
je
push
into
cld
rcr
repnz
ret
xor
pop
in
jbe
mov
xor
inc
test
mov
imul
sub
inc
cmp
ret
xor
out
retf
cmps
test
add
imul
and
dec
jmp
mov
inc
jle
add
pop
adc
cmp
sbb
push
mov
jg
out
aam
and
or
test
retf
xor
mov
lahf
stc
push
sti
cmp
xor
cmps
fsub
sbb
stc
dec
int
xchg
dec
adc
jge
aad
loop
mov
aas
and
mov
sbb
add
sub
cmp
cmp
fldenv
sub
push
loopne
out
les
mov
xlat
fs
mov
xchg
jmp
push
or
cli
sub
pusha
jae
xchg
add
inc
push
sub
fsubr
sbb
imul
mov
lea
loop
fistp
mov
das
shl
cmp
in
mov
aam
jo
ins
outs
jmp
mov
fstp
popa
mov
arpl
sar
dec
cmp
mov
and
xor
out
mov
shr
in
ds
jecxz
das
leave
loop
fwait
pop
mov
cmp
dec
add
and
stc
dec
lea
je
iret
int3
dec
mov
adc
dec
jl
jb
inc
or
pop
shl
cmp
inc
into
mov
xchg
pop
mov
out
in
pop
call
mov
div
or
scas
mov
arpl
adc
xor
ins
pop
es
xor
fdivr
popf
addr16
xor
jmp
je
(bad)
and
and
call
mov
movs
or
and
retf
leave
fistp
push
shl
and
retf
out
xor
(bad)
jnp
lea
repnz
(bad)
mov
out
push
movs
pop
aaa
mov
sub
ds
outs
jae
lods
cdq
inc
popa
sbb
imul
xchg
cli
jg
imul
out
adc
push
into
push
or
fstp
pop
pop
out
lahf
fsubr
mov
loopne
jmp
pop
push
stos
fdiv
sbb
mov
mov
ss
mov
mov
cmp
inc
push
iret
sub
int
lods
repz
dec
aaa
xor
add
mov
sbb
add
imul
sub
and
inc
or
out
inc
jae
sub
out
cli
cmp
lds
xor
retf
test
aas
add
xor
inc
cdq
mov
mov
sbb
push
dec
pop
int3
sub
mov
int
cmp
test
jb
icebp
(bad)
arpl
bnd
cwde
jns
mov
dec
pushf
bound
push
mov
adc
mov
aas
pusha
pusha
and
adc
add
packssdw
cmp
pop
pusha
mov
outs
mov
sbb
or
mov
repz
std
mov
jne
les
xchg
fild
push
add
push
fcomp
jmp
std
cmp
mov
dec
movs
or
enter
inc
jo
mov
and
xor
data16
rol
rep
js
inc
fsub
pop
int
mov
mov
sar
movs
dec
int
test
movs
xor
xchg
mov
and
dec
jmp
sti
push
adc
jmp
inc
ins
idiv
ja
mov
das
pop
push
dec
loopne
sub
fwait
outs
out
iret
das
sbb
adc
dec
daa
xchg
cmp
popa
pop
mov
pop
loope
pop
(bad)
xor
mov
popa
mov
mov
mov
cmp
or
in
into
div
pop
mov
cmp
add
mov
imul
sub
out
ret
add
shl
sub
mov
outs
sub
fsub
iret
das
cmp
xor
pop
mov
das
lahf
add
xchg
jecxz
jmp
xchg
xchg
ds
sahf
mov
xchg
push
add
(bad)
mov
add
rcl
cs
and
gs
cli
xor
cmp
sbb
popa
push
dec
outs
add
jg
adc
test
xchg
jne
retf
inc
or
cld
inc
(bad)
push
fprem
js
imul
xchg
xchg
dec
sub
nop
push
jne
sti
sub
xor
or
pop
(bad)
outs
fisubr
pop
mov
sub
arpl
mov
mov
aas
dec
pop
mov
retf
mov
jp
jmp
mov
add
jg
sub
mov
mov
(bad)
push
mov
push
push
mov
fst
sbb
push
retf
fld
push
fsubr
push
push
data16
mov
pusha
loope
jg
add
pop
or
int
out
out
dec
or
add
sbb
cdq
out
(bad)
cmp
mov
inc
jmp
addr16
in
dec
pop
mov
ins
stc
lds
in
xchg
call
cs
add
push
jge
jno
in
push
mov
push
pop
push
addr16
or
out
inc
outs
shl
or
jmp
xchg
pop
push
sub
jno
or
mov
push
dec
js
test
push
xlat
sbb
inc
shl
mov
cmp
add
adc
rol
push
dec
add
ret
ret
lock
aas
aad
lea
add
es
push
jle
lds
push
in
sbb
mov
(bad)
fistp
sub
sub
inc
cmp
inc
data16
dec
ror
inc
loop
mov
push
pop
push
jge
mov
jmp
in
xor
mov
enter
(bad)
(bad)
cmps
cli
add
aaa
jle
pusha
out
mov
push
bound
sub
call
mov
add
fdivr
call
push
movs
and
mov
out
jecxz
(bad)
(bad)
jbe
aaa
test
lock
jb
pushf
cmps
add
inc
ror
scas
cld
out
and
lea
pop
retf
add
push
sbb
std
mov
and
lea
je
iret
cmp
jne
xchg
sbb
mov
ins
or
cld
aas
mov
cmps
mov
aad
xchg
xchg
fwait
ror
mov
out
cmp
(bad)
pop
aam
out
clc
bound
lea
mov
pop
pop
fcomp
xor
in
mov
data16
or
cld
gs
fidivr
cmp
ret
mov
push
lahf
fidivr
jg
std
lds
(bad)
aam
fistp
fcom
imul
and
je
call
int
xchg
adc
rol
push
mov
in
outs
inc
ins
outs
mov
mov
(bad)
jecxz
test
cmp
mov
repz
(bad)
outs
les
shl
mov
in
out
mov
inc
cs
sub
push
mov
(bad)
adc
sti
lods
add
lahf
push
test
icebp
or
and
jmp
xchg
ss
cmp
mov
inc
xchg
lods
dec
leave
fidiv
xchg
nop
inc
or
xlat
pop
mov
in
test
mov
pop
shl
or
lods
rcr
popa
jmp
mov
ins
test
adc
popaw
jmp
sub
cmp
mov
shr
enter
xchg
in
mov
sub
dec
push
push
xor
mul
jmp
call
sbb
xor
mov
repz
mov
idiv
xchg
xchg
and
sahf
dec
into
repnz
and
add
outs
push
xchg
jno
adc
inc
sub
xchg
inc
cmc
(bad)
daa
or
in
adc
outs
faddp
xchg
jg
das
sbb
icebp
fdiv
retf
loopne
mov
inc
fcomp
inc
in
sbb
clc
mov
mov
scas
jnp
and
jecxz
stos
stc
mov
std
mov
or
in
push
xchg
rol
les
mov
or
mov
out
xchg
popf
fidiv
xchg
sbb
dec
leave
jns
aam
repnz
nop
sub
out
inc
push
pop
xchg
mov
inc
mov
sbb
mov
clc
stos
inc
jl
cmp
out
dec
cdq
sbb
and
jge
or
ds
dec
cmps
cmp
dec
xchg
push
jno
inc
idiv
sub
xlat
std
and
pop
jmp
add
and
ins
pop
scas
test
scas
(bad)
(bad)
jmp
fs
mov
(bad)
dec
pop
cs
leave
mov
ret
jle
xchg
int
push
push
lar
iret
sub
cli
xchg
and
push
icebp
xchg
test
movs
sbb
sbb
mov
add
(bad)
loopne
cmp
test
ret
lods
sub
sub
aaa
stos
jne
cwde
sbb
mov
ins
mov
int
mov
mov
dec
in
test
fwait
in
in
fs
add
in
sbb
and
cmp
cmp
add
ins
mov
xchg
repz
xor
retf
(bad)
jbe
pop
lds
push
(bad)
dec
push
mov
push
pop
xor
mov
dec
pop
repnz
cmp
sub
xor
mov
or
adc
push
lea
enter
sbb
loopne
push
fucomip
jmp
jmp
sub
cmps
cmp
jle
iret
cmp
inc
and
shl
out
add
jnp
inc
jecxz
inc
aas
mov
jne
sub
jl
or
mov
mov
push
dec
mov
mov
es
int
shl
or
cmp
sub
je
xchg
les
ret
inc
jne
je
fild
mov
jb
sti
jmp
xor
loopne
sahf
xor
and
mov
call
mov
push
icebp
dec
sub
sub
hlt
mov
jae
add
dec
xchg
adc
jnp
push
inc
fwait
pop
cmp
mov
push
sub
sbb
in
mov
inc
mov
imul
(bad)
addr16
jl
das
jl
xor
mov
push
loopne
fiadd
adc
dec
test
int3
pmulhw
add
scas
mov
inc
int3
aad
mov
dec
xor
sub
mov
in
lea
rcr
in
pusha
sar
sub
cmps
sahf
lea
cmp
inc
push
jo
ret
lods
les
pusha
adc
in
mov
lods
push
cld
pop
lahf
int3
not
jmp
sbb
pop
popa
jb
out
xor
daa
jg
push
fisttp
jbe
add
adc
mov
lahf
push
pop
xchg
push
iret
mov
out
mov
je
or
jmp
repnz
(bad)
mov
cld
scas
leave
push
cli
(bad)
fld
mov
mov
sbb
pop
push
ret
xor
out
jg
add
xchg
dec
mov
push
std
sbb
and
inc
shr
mov
out
(bad)
or
mov
mov
mov
jae
xor
cmc
jb
movs
push
fidivr
std
call
mov
mov
iret
enter
inc
and
mov
or
call
jae
data16
push
push
mov
or
das
mov
inc
mov
xor
pop
pop
popa
std
jne
out
stos
add
fcmovb
mov
div
lods
mov
in
fcmovnb
iret
or
xlat
fistp
mov
aas
jo
jo
inc
ret
sub
xchg
jae
cld
dec
adc
sbb
repz
sub
adc
ret
add
mov
lock
add
cvttps2pi
push
mov
jbe
hlt
movs
data16
sub
call
std
mov
lea
pop
retf
pop
sbb
retf
push
cmps
and
sub
(bad)
pop
push
std
imul
pop
or
imul
std
enter
xor
fdiv
push
dec
and
mov
mov
jb
cmp
daa
(bad)
xor
movs
aaa
in
pusha
push
das
enter
loope
std
movs
mov
jmp
or
jno
rcl
cmp
iret
jbe
fs
rcl
ds
cmp
mov
nop
fnstenv
lods
cmp
jp
adc
loopne
xor
jl
in
enter
rcr
aaa
sbb
shl
xor
(bad)
inc
scas
push
retf
fisub
clc
inc
(bad)
jb
clc
and
daa
mov
mov
popa
outs
ja
xchg
dec
lahf
js
rol
(bad)
in
and
cdq
push
scas
adc
fnsave
dec
sub
lock
inc
sub
cmp
bound
inc
mov
sbb
xchg
and
dec
es
mov
ret
add
inc
cli
aam
jae
mov
test
inc
xor
fisttp
sub
loopne
sahf
xchg
add
mov
fmul
sbb
xchg
scas
mov
or
jmp
inc
pusha
push
das
iret
scas
xor
mov
test
push
push
fwait
call
dec
dec
pop
sbb
outs
clc
dec
adc
cld
scas
adc
gs
lds
push
ss
mov
sub
aas
sub
cmp
push
mov
cmp
pusha
loop
pop
rcl
mov
outs
dec
sub
mov
in
leave
cli
pop
adc
aas
dec
and
out
rcl
inc
movs
sar
xor
xchg
mov
inc
fs
xor
out
icebp
dec
pop
adc
retf
ins
pop
or
mov
fst
and
test
and
mov
sbb
clc
hlt
add
loop
mov
mov
and
mov
or
sbb
test
jno
aad
(bad)
addr16
add
or
xchg
xchg
or
hlt
shl
jno
ja
sahf
aaa
jmp
iret
test
fistp
xchg
push
push
in
push
jb
pop
dec
jl
mov
mov
sub
add
nop
jecxz
mov
mov
and
add
sbb
lea
(bad)
xor
std
xor
adc
stc
in
adc
sbb
gs
clc
xor
inc
sbb
(bad)
jnp
push
(bad)
in
mov
or
adc
jno
rol
ds
jp
xchg
xor
xchg
push
aad
mov
scas
push
dec
cmp
or
or
sahf
in
sbb
inc
fadd
mov
pop
mov
xchg
and
or
jbe
(bad)
repz
add
in
in
pop
es
pop
rol
fisttp
add
sub
nop
cli
sti
rol
sbb
jge
pop
dec
hlt
add
lea
sti
xlat
xchg
mov
sbb
jg
jb
imul
aaa
daa
mov
mov
(bad)
stc
loope
call
icebp
popf
sub
and
aas
lds
pushf
cmp
push
fdivr
sbb
stos
ja
push
shl
add
sbb
pusha
jns
sbb
hlt
cmps
jp
jmp
or
pop
or
mov
out
pop
xchg
in
popf
popa
int3
aas
mov
sub
xchg
movs
rcr
daa
js
push
std
mov
nop
inc
cs
shr
pushf
jl
inc
addr16
fdiv
xlat
jo
cmps
pop
scas
xor
mov
aad
cmps
jecxz
mov
push
cld
jne
jl
jg
jne
xor
add
into
cmp
cmp
ds
and
jp
jmp
popf
ja
aas
lea
xchg
bound
cmps
push
(bad)
fild
cmp
rcl
hlt
nop
cdq
mov
mov
push
mov
cmp
int3
sub
add
inc
fs
adc
push
or
mov
cmp
push
nop
dec
jg
mov
jmp
(bad)
nop
xchg
repz
push
cli
rol
scas
out
(bad)
cmp
pop
push
(bad)
ficomp
pop
sbb
push
sub
sbb
mov
mov
mov
es
xchg
xchg
ror
scas
mov
retf
inc
sbb
cmps
arpl
fbstp
push
mov
mov
ins
ret
xor
mov
ror
xor
cmp
test
add
pop
pop
mov
repnz
clc
fabs
retf
aas
loope
inc
test
aas
sbb
sbb
add
sub
dec
jge
jge
arpl
add
(bad)
jp
iret
cmp
sahf
lds
(bad)
jmp
mov
sti
add
js
ja
popf
mov
jge
outs
xor
(bad)
and
rcl
pop
lods
in
cmp
push
add
or
push
fwait
pop
mov
and
ins
test
push
addps
(bad)
div
mov
and
ss
cmps
sub
mov
pop
xchg
jne
adc
bound
mov
cmp
and
test
pop
icebp
mov
fs
jae
sub
pushf
dec
dec
(bad)
in
jnp
mov
out
cmc
add
sahf
ins
sar
sbb
mov
stos
iret
dec
mov
dec
in
std
xchg
push
fsubr
outs
in
jns
sub
adc
test
hlt
pop
(bad)
js
add
retf
rcr
into
lods
repz
mov
push
mov
addr16
mov
rol
and
xchg
nop
test
jmp
fwait
hlt
movs
mov
and
mov
sbb
mov
in
fist
mov
rcl
mov
lods
arpl
xchg
sbb
data16
icebp
fs
mov
mov
and
aas
int
jmp
inc
pop
call
pop
cmp
in
es
stc
cwde
je
aam
xchg
cmp
and
frstor
sar
les
pushf
popa
popf
mov
pop
push
or
xchg
cld
sbb
gs
clc
stos
mov
inc
pushf
iret
mov
adc
xor
repnz
cs
add
retf
repz
mov
movs
mov
test
and
adc
mov
xor
push
sub
aaa
call
arpl
in
mov
sti
int
mov
nop
nop
or
ins
lea
push
and
sbb
pop
(bad)
cli
shl
mov
pop
dec
ss
jl
nop
scas
push
xchg
in
loopne
imul
or
cmp
mov
dec
cmps
add
push
mov
adc
jg
retf
(bad)
repnz
fidivr
mov
fucomi
shl
aaa
xor
inc
mov
cdq
dec
rcl
fcomp
cmp
xchg
push
mov
js
test
sbb
inc
dec
js
rol
retf
int
in
pop
xchg
or
lods
push
jmp
aam
pop
jl
xchg
in
int3
lds
and
jecxz
xor
sub
add
add
outs
add
stos
xchg
movs
sbb
ja
add
int
bound
jecxz
daa
mov
pop
jecxz
les
jmp
push
pop
mov
lods
mov
push
scas
clc
les
pop
jle
mov
clc
or
retf
hlt
shr
adc
clc
outs
push
xchg
or
dec
lahf
adc
ret
mov
addr16
ja
mov
in
jmp
leave
mov
cmp
xlat
cmp
mov
rcr
adc
aam
or
mov
lds
sti
inc
push
in
add
test
aas
(bad)
pop
add
in
sub
jnp
outs
(bad)
adc
sti
and
inc
or
stc
push
pop
dec
and
shr
sub
and
and
adc
stos
hlt
jbe
push
inc
adc
jb
into
inc
and
fwait
cmps
or
dec
cmp
imul
adc
xchg
dec
aaa
and
scas
popf
call
xlat
es
shr
inc
pop
mov
cmp
rcl
push
popa
sbb
xor
inc
(bad)
inc
jb
scas
movs
xor
movs
movs
lock
cwde
xchg
ret
pop
jge
ins
icebp
outs
arpl
xlat
jmp
push
pop
ja
inc
inc
stos
stc
cmp
movs
in
cmps
sub
and
cs
test
cmc
mov
clc
jge
inc
and
and
ss
mov
ss
rol
or
pop
mov
gs
ja
dec
pop
sbb
fiadd
lds
jns
ins
loop
call
les
mov
xor
add
sub
jo
fild
loopne
fs
sbb
adc
outs
dec
dec
push
inc
jecxz
nop
cwde
mov
cli
pop
jne
mov
xchg
mov
adc
pop
mov
inc
movs
jae
sbb
dec
sbb
mov
cmc
jg
dec
lds
scas
cs
xchg
in
add
adc
inc
xchg
mov
mov
popa
mov
lods
lock
pop
xchg
scas
fwait
stos
or
(bad)
adc
ds
or
jecxz
outs
(bad)
clc
pusha
repz
aas
adc
push
fucomi
(bad)
inc
xchg
(bad)
lods
test
inc
leave
inc
add
inc
lods
sbb
inc
dec
mov
and
lea
inc
scas
dec
sub
and
enter
test
je
out
xchg
mov
sahf
mov
cmc
loop
push
enter
sub
sbb
or
push
neg
sub
xlat
or
jg
jmp
daa
push
jmp
jbe
xchg
adc
cmp
aas
(bad)
icebp
dec
mov
and
or
into
mov
jnp
push
call
sbb
xchg
mov
(bad)
loope
(bad)
pop
xchg
(bad)
cwde
pushf
movs
xchg
lods
(bad)
mov
popa
dec
sbb
inc
inc
popf
pushf
mov
add
retw
cmp
imul
paddusb
jmp
add
mov
call
rcr
pop
xchg
aas
mov
adc
(bad)
fcom
mov
icebp
(bad)
adc
addr16
dec
leave
lock
sbb
fcmovne
fdiv
popa
test
adc
movs
outs
fimul
mov
push
mov
mov
mov
xor
dec
pop
(bad)
rcr
mov
scas
lods
push
lods
call
sub
dec
xor
sub
retf
pop
push
shl
dec
out
aam
jl
and
jp
cmp
pop
test
int
in
and
cmp
mov
xchg
pushf
rol
xchg
sbb
ror
es
and
jo
repz
xor
sbb
test
outs
xchg
cmp
adc
sar
addr16
xchg
sbb
push
gs
sbb
and
push
mov
cs
cmps
(bad)
dec
daa
pop
enterw
adc
sar
es
xchg
enter
mov
sbb
test
bound
lods
cmp
cdq
xor
dec
or
dec
dec
dec
out
std
int3
mov
xor
int3
test
add
mov
inc
popf
or
adc
push
jp
and
retf
(bad)
xchg
xchg
pop
mov
add
and
mov
(bad)
pop
fist
addr16
push
mov
icebp
xchg
adc
out
xchg
in
movs
mov
retf
mov
xchg
ss
retf
popa
mov
ds
jg
mov
retf
in
jns
dec
lods
inc
in
add
sar
outs
pop
(bad)
daa
push
imul
stos
in
lods
pop
xchg
dec
adc
scas
mov
(bad)
push
or
fdiv
cdq
push
dec
enter
push
cli
sbb
mov
add
mov
push
jb
sbb
arpl
iret
mov
jne
jg
ja
mov
inc
loop
or
mul
push
dec
stos
cmp
movs
push
xchg
push
rcr
lock
in
sbb
fs
cmc
mov
mov
sahf
mov
call
cmp
cmps
xchg
(bad)
fdiv
or
hlt
cdq
pop
rcl
popf
lahf
sub
pop
or
inc
jmp
mov
xchg
mov
ficom
mov
mov
pop
hlt
mov
in
dec
cdq
scas
cs
shl
xchg
add
fdivr
mov
xchg
das
(bad)
lahf
add
ja
sbb
adc
cmps
ja
pusha
mov
push
fdiv
pop
and
jmp
ins
je
xchg
jecxz
ret
ror
jmp
pop
fiadd
mov
ss
sub
add
mov
push
xchg
fisttp
dec
push
xchg
retf
hlt
inc
loope
xor
sbb
mov
es
mov
(bad)
mov
lods
out
xor
mov
and
or
ret
int
clc
push
xchg
xchg
sub
mov
cdq
adc
pavgb
jmp
pop
adc
and
pop
test
out
add
dec
pushf
mov
je
cld
test
mov
xchg
jmp
push
cmp
fisubr
ja
sti
sub
in
mov
and
dec
xor
jae
stc
push
jmp
or
in
and
pop
push
add
aaa
call
sbb
push
and
pop
sbb
cmp
xor
fsub
pop
fdivrp
popf
cs
pop
xchg
cmp
in
cmps
call
das
push
jmp
mov
xchg
repz
and
jmp
dec
pop
pop
sbb
add
jbe
lds
sbb
add
js
lahf
shl
jae
sub
cmovb
leave
loop
lahf
push
push
in
ins
or
adc
xor
sbb
and
push
xor
sbb
nop
mov
test
push
or
mov
and
sub
jle
movs
cmp
mov
cmp
mov
sub
jns
sub
fstp
dec
pop
pop
xchg
mov
ret
les
xor
out
inc
sbb
pop
mov
stos
pop
xchg
cs
mul
iret
stc
sbb
aaa
mov
mov
sbb
gs
sub
inc
jecxz
out
inc
cmp
out
aam
call
and
das
std
xlat
out
mov
aam
cmp
not
jno
ins
repz
in
adc
mov
jle
pop
imul
daa
repz
cld
push
mov
fmul
or
cmps
pop
mov
test
push
cdq
mov
mov
mov
test
std
test
lds
mov
ss
aam
das
daa
call
xchg
movs
xor
outs
ja
loop
popa
xlat
jle
pop
mov
dec
nop
pop
loope
xchg
dec
loopne
mov
cs
shl
or
sub
je
or
outs
xor
cmp
bound
xor
jb
push
outs
sub
into
mov
fdivr
ins
mov
sbb
push
(bad)
inc
aas
add
dec
fs
ficomp
push
inc
cwde
inc
cld
pushf
das
mov
movs
fidivr
cmp
cmp
add
addps
es
(bad)
pop
icebp
lock
sbb
sub
retf
je
push
ds
aaa
sub
leave
mov
out
adc
and
cmps
out
sub
push
and
cmp
lds
mov
sbb
dec
dec
adc
push
movs
lahf
in
jl
(bad)
mov
sbb
loopne
push
loope
push
mov
mov
jns
popf
or
cmps
inc
gs
xchg
push
fist
nop
bound
ret
mov
push
ss
add
je
das
pop
jl
mov
sub
add
ds
pop
or
icebp
js
or
sub
or
imul
xchg
imul
out
add
dec
push
push
out
mov
xlat
inc
adc
fucomi
push
cmc
pop
xor
jp
push
cld
push
cld
and
imul
xchg
xor
lods
dec
inc
in
mov
ret
cs
xor
xor
jno
jb
xor
or
xchg
in
cld
pop
cs
adc
sti
pop
mov
xchg
xchg
jg
fmul
out
or
ret
lods
pop
xchg
jg
mov
ss
mov
shr
ds
ret
add
cld
sub
sub
gs
imul
inc
push
pop
add
mov
pop
mov
pop
sub
or
mov
and
pop
xchg
hlt
test
add
cmp
fsub
push
pop
cmp
dec
mov
ins
inc
pop
ret
mov
jns
(bad)
into
push
and
xor
or
out
or
ss
(bad)
out
(bad)
push
xchg
pop
push
std
cmp
push
add
xor
aam
outs
and
mov
mul
test
call
xchg
retf
(bad)
and
out
in
sub
ins
test
xchg
adc
cwde
add
sbb
adc
push
ror
aaa
dec
xchg
fistp
xchg
push
mov
push
mov
mov
int3
(bad)
xor
cmps
leave
mov
shl
ins
jmp
push
mov
imul
or
or
adc
scas
or
push
rol
xchg
sbb
popa
stos
dec
cs
sub
cmp
inc
popf
mov
lea
aam
daa
pop
xor
mov
or
mov
adc
mov
dec
jo
cmp
(bad)
dec
add
das
mov
daa
in
sbb
jo
jo
jne
mov
push
pusha
les
frstor
adc
es
jmp
call
jbe
mov
pushaw
push
sti
pop
or
jl
fsubr
push
retf
pop
mov
scas
pusha
sub
mov
pusha
int
lods
add
mov
jbe
stos
dec
or
xchg
cmc
idiv
or
or
clc
fwait
or
pop
iret
mov
xchg
push
adc
mov
pop
push
and
cs
je
xchg
jno
aad
xor
add
push
nop
cmp
out
sub
dec
outs
push
push
shl
out
sbb
sbb
aas
outs
mov
lgs
cdq
pop
inc
cmps
mov
xchg
jo
(bad)
repnz
mov
inc
or
mov
scas
lods
or
imul
rcl
jo
stos
fnsave
test
inc
cmp
inc
jae
pop
jp
jp
xlat
push
retf
and
sub
es
and
repnz
and
cld
mov
pop
mov
mov
pop
out
xchg
and
enter
inc
mov
movs
enter
pop
aaa
(bad)
inc
sti
jne
inc
xchg
test
test
call
and
and
sbb
sub
adc
(bad)
test
cmp
push
(bad)
push
in
stc
xchg
xchg
cwde
add
jmp
cmc
aaa
je
mov
pop
int
mov
fcmovu
push
mov
push
mov
lods
enter
mov
xchg
inc
icebp
mov
ret
rcr
mov
pop
std
pop
xchg
stos
aam
aam
pop
fstp
adc
bound
jmp
iret
jb
add
hlt
adc
(bad)
retf
pop
dec
pop
lods
mov
push
jns
out
xor
mov
jg
and
test
and
shl
enter
movs
adc
js
mov
stc
jmp
in
xor
mov
mov
and
pushf
mov
fmul
call
jne
pop
mov
nop
push
mov
dec
movntq
push
xchg
inc
sbb
std
sbb
mov
call
cmp
outs
ror
(bad)
ja
ret
jmp
jae
sbb
dec
push
and
pop
fldcw
ins
sub
fs
and
push
and
inc
aad
jg
je
je
xchg
ret
adc
pop
and
loop
jno
add
xchg
mov
dec
jg
push
mov
and
js
sub
mov
push
cli
mov
out
jnp
div
leave
test
jne
fwait
aas
dec
or
ret
jmp
sbb
fnstsw
pushf
and
ret
jmp
sub
out
rol
jae
sub
jbe
dec
mov
or
shr
fidivr
push
inc
jmp
mov
adc
dec
add
pop
jmp
xor
hlt
imul
add
adc
inc
movs
ja
(bad)
and
fild
repz
xchg
jnp
inc
and
mov
push
out
cld
outs
mov
hlt
sbb
xor
jmp
pop
adc
(bad)
or
mov
mov
aad
vxorps
lods
ror
in
mov
sbb
push
mov
cmp
fcomp
jge
ret
jmp
scas
popa
pop
popf
mov
mov
push
xchg
pop
xchg
jno
mov
int
sub
and
push
fistp
pop
jl
popf
sub
(bad)
jbe
sbb
and
mov
sub
dec
inc
pop
push
xchg
test
dec
ins
outs
pop
jns
hlt
push
dec
popa
es
push
cmp
lds
mov
xor
and
cmp
xchg
push
test
leave
adc
adc
inc
adc
addr16
(bad)
mov
arpl
(bad)
jg
or
xchg
mov
pop
test
mov
cdq
outs
shl
pop
jl
lock
ins
bound
sbb
jo
add
inc
dec
inc
call
je
fidiv
mov
adc
mov
add
loopne
fstenv
(bad)
mov
idiv
cwde
jnp
jno
jno
in
sub
mov
dec
xchg
inc
push
pop
inc
cmp
bound
aad
cmc
jg
mov
iret
and
xor
inc
loop
les
inc
ficom
dec
sahf
mov
repnz
inc
push
jp
jmp
adc
adc
or
sub
mov
inc
mov
bound
ins
dec
and
xchg
ds
repnz
scas
and
adc
xor
lds
sti
dec
adc
mov
aas
inc
aaa
and
loop
push
dec
pop
inc
sub
add
push
pushw
xchg
out
mov
xchg
xchg
rcr
mov
sub
outs
ja
and
push
aad
ja
add
(bad)
pop
shr
(bad)
jnp
popa
fild
mov
jne
inc
loop
les
outs
or
mov
movs
call
and
xchg
xchg
mov
daa
push
out
fldcw
add
je
push
sbb
pop
sub
jp
jns
gs
(bad)
and
fmul
popa
inc
out
cwde
addr16
jne
xchg
je
fild
test
or
pop
idiv
scas
sbb
inc
out
fistp
add
ins
push
push
loope
adc
retf
jmp
movs
lock
cmps
imul
cmps
pop
imul
adc
sbb
into
out
cmp
jmp
aad
dec
movs
ins
add
imul
add
outs
popa
xchg
mov
dec
ficomp
xchg
nop
xchg
and
adc
mov
enter
js
jbe
sub
pushf
mov
inc
cmp
sbb
(bad)
loop
or
cmp
xchg
add
cmp
dec
(bad)
jns
cmps
call
dec
pop
popa
xchg
test
and
cmp
(bad)
fidiv
(bad)
jle
and
lods
les
mov
xchg
push
jb
mov
jne
pusha
leave
popa
xor
add
shl
or
mov
mov
pop
popa
adc
fdiv
test
shl
push
lods
test
push
sub
into
push
in
pop
inc
jl
bound
and
pop
sahf
icebp
mov
cmc
cli
fisub
adc
inc
cld
shl
js
jnp
xchg
and
xor
cmp
shl
cmps
inc
or
inc
data16
fdivr
ror
jmp
int
retf
pop
pop
sbb
fucomp
movs
sub
or
pusha
ror
inc
xchg
out
mov
cmp
adc
movs
and
mov
pop
(bad)
jbe
outs
lock
xchg
ret
aaa
outs
ret
mov
in
out
adc
lahf
or
pop
sbb
pop
dec
adc
cmp
in
fimul
pop
jmp
test
loop
sbb
test
inc
sar
rcl
aas
popf
push
xchg
retf
std
lds
mov
popf
call
mov
lea
inc
xacquire
xchg
mov
push
mov
jne
sbb
mov
sub
mov
aas
cld
in
jecxz
test
xchg
jb
aas
and
xlat
cs
(bad)
mov
jge
neg
jge
lods
(bad)
jne
push
push
cwde
pusha
adc
aam
cmc
pop
movs
ins
inc
dec
push
gs
mov
dec
jmp
sub
addr16
int
das
rep
mov
repnz
repz
cld
mov
cdq
add
sbb
aas
or
mov
gs
xchg
sbb
or
mov
jns
por
std
xchg
cmp
add
and
aam
arpl
retf
in
leave
mov
gs
stc
add
adc
shl
stos
or
shl
test
stc
push
into
xchg
xchg
inc
call
not
mov
pop
jns
mov
adc
loop
test
fsub
iret
add
mov
mov
push
shr
(bad)
mov
pop
jno
lock
loopne
ins
(bad)
sti
inc
pop
test
mov
add
icebp
mov
pop
mov
mov
pop
inc
xlat
scas
cli
je
leave
add
mov
frndint
jno
ss
and
sbb
repnz
mov
sbb
xor
jmp
sbb
js
sub
sub
pop
sar
out
cdq
push
test
test
fcomp
inc
xchg
(bad)
xchg
inc
loope
(bad)
nop
xor
fisttp
xor
cmps
xor
fdivr
mov
jb
ret
pop
out
outs
sub
add
jp
push
pushf
nop
push
cmp
jne
in
xchg
and
aad
mov
retf
(bad)
out
inc
jle
and
push
int
stos
jl
push
mov
push
push
fwait
mov
ds
fstp
imul
in
push
or
mov
(bad)
loope
pop
scas
test
std
mov
or
xchg
sbb
stc
outs
sbb
popf
or
xchg
and
mov
add
pop
les
ret
mov
jge
mov
ja
cli
out
dec
push
jecxz
pop
das
repnz
fbld
xchg
mov
in
cmps
cli
imul
ins
popf
jnp
lods
scas
mov
pop
mov
push
dec
fs
sub
xchg
pop
hlt
push
jns
pop
sub
pop
adc
int3
pusha
xor
fmul
jmp
jae
jbe
bnd
in
aaa
mov
out
cmps
dec
cwde
jae
mov
cmp
mov
test
mov
fwait
sbb
mov
jbe
jo
pop
xlat
int
jne
sub
add
inc
pop
iret
pop
jno
push
xor
sub
cmps
push
xor
mov
push
retf
jle
(bad)
movs
jg
lods
add
pop
jge
cmp
add
sar
mov
loopne
xchg
mov
out
mov
sbb
nop
icebp
and
jmp
int3
adc
jg
popa
sbb
pusha
jmp
jbe
pop
loop
pop
stc
das
xor
sub
mov
and
inc
xchg
sub
gs
and
pop
test
es
(bad)
repz
dec
sbb
xor
fmul
popf
mov
mov
push
mov
retf
sub
sbb
in
adc
xlat
jmp
push
mov
data16
mov
in
into
test
retf
dec
aam
js
mov
push
aas
into
daa
scas
mov
loope
je
dec
jge
fistp
sbb
mov
(bad)
mov
jae
icebp
add
cmc
out
aaa
sub
sbb
jb
push
nop
bound
inc
cmps
aaa
add
push
hlt
imul
fidiv
or
lahf
faddp
xchg
jnp
sub
mov
test
fimul
sti
add
pop
rcr
xor
mov
pop
fs
(bad)
cmp
out
sub
mov
pop
stc
inc
sbb
(bad)
cdq
shl
xlat
fstp
or
mov
cmp
outs
pop
int3
cs
repz
sub
inc
outs
(bad)
push
addr16
fbstp
aad
push
add
jns
jbe
xchg
cs
mov
xchg
push
jmp
into
mov
addr16
pop
jmp
mov
sbb
jle
pusha
stc
xchg
mov
dec
in
aad
xor
xor
and
inc
sbb
jo
lea
cli
pop
into
ja
aas
pushf
sahf
or
ins
test
cdq
shl
xor
sbb
ins
jne
daa
loope
or
push
cmp
stos
jg
repnz
jno
dec
jg
inc
and
enter
xchg
in
add
lds
stc
cmp
hlt
add
cmps
mov
stos
call
stos
xchg
rol
stos
out
inc
push
lds
add
xchg
jg
add
repnz
jmp
inc
popf
or
adc
push
push
js
fdiv
push
shl
or
pop
sub
jp
push
cmp
mov
cmps
cmp
inc
pusha
or
cmp
sbb
add
xor
in
mov
dec
push
cmp
jmp
mov
push
loope
imul
pusha
movs
stos
scas
mov
push
push
retf
cmps
stos
push
test
and
daa
or
pusha
pop
inc
pop
mov
adc
pop
rol
jl
aam
ja
retf
dec
jne
in
out
(bad)
cmps
rcr
mov
pop
add
fidivr
cmp
push
test
repz
add
inc
mov
popf
mov
popf
pop
dec
mov
cmps
cld
cmp
push
mov
int3
nop
enter
adc
aad
(bad)
into
add
stos
xor
mov
mov
sbb
adc
scas
ret
ds
lock
sub
data16
sbb
xchg
(bad)
fnsave
cmp
cmp
fmul
mov
push
dec
sar
xchg
sbb
outs
fmul
outs
xor
lods
out
xchg
mov
adc
mov
push
clc
bound
mov
retf
into
int
fimul
mov
sbb
data16
and
sbb
ror
mov
cmc
sbb
or
mov
adc
loopne
jb
push
mov
(bad)
dec
jecxz
ja
sbb
mov
clc
mov
and
fistp
imul
xchg
in
or
mov
sti
cdq
adc
xor
popa
inc
sbb
iret
je
xor
stc
cli
rcl
into
cmp
shl
add
adc
push
nop
ins
or
aad
pop
mov
out
(bad)
sbb
push
cmps
imul
fwait
inc
adc
dec
mov
jbe
loope
jno
dec
mov
mov
mov
(bad)
mov
lea
mov
sbb
aam
pop
or
bound
lods
dec
jae
pop
cwde
scas
jb
pop
psllq
call
sub
fisubr
push
xchg
cmp
enter
adc
fadd
(bad)
adc
cmp
sub
arpl
ret
int
mov
inc
inc
xchg
mov
call
mov
xlat
jecxz
cmc
je
sub
ja
jmp
lahf
sti
test
cmp
mov
and
adc
add
out
pop
fistp
mov
jle
xchg
call
mov
push
sbb
lea
inc
cld
inc
cmp
dec
iret
(bad)
(bad)
pop
push
mov
outs
xchg
mov
(bad)
into
sub
outs
dec
jo
out
sbb
aas
in
xchg
aam
xor
movs
cmp
cmp
inc
sti
ror
outs
(bad)
pop
jmp
jno
push
mov
xchg
bound
inc
adc
shl
aad
mov
jnp
mov
mov
retf
daa
xchg
div
push
popa
sar
(bad)
pop
inc
mov
loopne
(bad)
mov
mov
call
add
sbb
xchg
push
jbe
loop
push
xchg
jbe
outs
icebp
(bad)
sbb
mov
or
hlt
std
shl
mov
(bad)
movs
aad
pusha
(bad)
sub
push
bndstx
sbb
mov
sub
mov
or
(bad)
dec
call
test
hlt
test
mov
adc
jge
mov
cmps
sar
ror
ret
lods
pop
pop
fdiv
leave
ins
and
jo
push
mov
daa
inc
jb
cmps
mov
(bad)
pop
jo
dec
jmp
out
jge
mov
or
loope
or
jge
repz
imul
xchg
push
imul
push
inc
pop
pop
gs
xor
add
ficom
repnz
mov
mov
ret
(bad)
dec
js
loop
sbb
push
dec
inc
loopne
xchg
add
xchg
pop
test
push
lods
xchg
push
(bad)
in
jmp
cdq
lahf
and
pop
sbb
dec
add
mov
bnd
(bad)
movd
xchg
jne
loop
mov
jmp
xchg
jg
sbb
sbb
fst
pop
adc
adc
pop
bound
out
rcl
js
sbb
xchg
push
cmp
adc
xchg
xchg
ds
imul
or
pop
push
dec
data16
dec
fdivr
cmc
stc
test
sbb
mov
cmc
(bad)
ins
xchg
pop
(bad)
xchg
int
xchg
sbb
cmp
or
mov
lods
shl
ins
mov
cdq
mov
and
or
push
mov
outs
adc
push
dec
mov
in
jbe
mov
dec
call
xchg
xchg
ss
scas
and
cmp
pop
sub
mov
or
lods
repnz
ja
push
(bad)
mov
fadd
cdq
pusha
xchg
in
cmp
scas
arpl
xchg
pop
rcr
push
jns
inc
or
sub
int3
adc
cmp
sbb
test
push
push
pop
imul
add
push
ja
pop
sahf
and
out
loopne
scas
pop
aas
pusha
mov
fprem1
push
fisub
pop
gs
dec
lods
jge
repnz
add
lea
loop
test
or
stos
add
mov
xchg
add
(bad)
xchg
or
data16
shl
aas
xor
and
(bad)
cwde
or
jbe
dec
xor
sub
adc
add
cmp
mov
xor
pop
pop
lea
imul
ins
xor
arpl
imul
jmp
cmp
push
aaa
js
dec
push
(bad)
sub
sahf
ret
outs
sbb
and
jg
mov
push
loope
dec
rcl
push
imul
(bad)
jg
int3
ds
cld
xchg
add
bound
enter
mov
psllq
pop
popf
sbb
sbb
das
test
ret
retf
and
adc
add
jmp
lods
cmp
jp
ret
out
rcl
ins
cmp
rol
fiadd
cmp
js
lods
(bad)
and
dec
adc
mov
or
outs
aaa
outs
int
push
sub
dec
pop
xchg
jmp
cld
cmp
not
adc
cmp
lods
(bad)
leave
sar
(bad)
pushf
jno
jecxz
leave
xchg
xchg
gs
jno
test
lods
lock
jg
leave
cdq
add
and
mov
xchg
out
add
sbb
lahf
jno
lock
cmc
pop
shr
jmp
lahf
push
and
ss
sub
jp
sar
mov
test
imul
mov
add
cmps
xchg
rol
mov
add
push
sub
push
cli
xlat
push
mov
mov
fisub
adc
xlat
fldcw
add
jns
popf
hlt
imul
ret
or
push
aas
gs
ja
sti
cs
(bad)
cmp
loope
clc
jmp
or
push
lock
mov
cmp
push
pushf
sahf
bound
js
xchg
pusha
inc
inc
lea
sub
ins
sahf
addr16
fild
fnsave
dec
sbb
(bad)
xchg
jb
or
add
pop
(bad)
jbe
test
stos
ins
(bad)
xor
jae
imul
gs
cmp
xchg
push
mov
out
adc
inc
or
sub
xor
lds
lea
jge
mov
out
addr16
enter
int
mov
cld
repnz
ret
into
int
mov
int3
push
cmp
mov
pushf
(bad)
mov
and
mov
ja
pop
icebp
jns
sub
test
xor
inc
or
push
sub
das
mov
leave
int
inc
xchg
outs
jmp
jg
fist
or
loopne
sar
test
inc
js
push
outs
mov
bound
sbb
mov
fwait
jmp
sbb
cmp
mov
icebp
rol
aam
jno
ror
in
jnp
fcom
cmp
dec
hlt
cld
(bad)
cmp
mov
leave
cmps
xor
test
test
(bad)
sub
fst
cmps
arpl
mov
(bad)
lods
in
sub
test
jbe
sbb
retf
outs
(bad)
mov
aad
les
stc
xchg
jo
inc
mov
add
ja
push
inc
mov
fsub
cmps
rol
nop
add
int3
lds
pop
cmp
push
mov
out
mov
xchg
int3
xchg
les
pusha
sub
sbb
pop
adc
pop
sub
inc
mov
xchg
test
loope
retf
rcr
mov
scas
cdq
xor
pop
and
adc
mov
retf
adc
int
rol
call
mov
sti
push
and
lods
dec
iret
call
outs
fcom
mov
fmul
nop
mov
jmp
adc
retf
retf
push
sete
or
add
movs
mov
mov
clc
das
and
in
sbb
or
addr16
sbb
ds
inc
fcom
cmp
inc
pop
out
stos
jecxz
jnp
test
cmp
call
xor
sbb
push
jne
scas
into
dec
pop
and
mov
test
xor
clc
in
(bad)
(bad)
and
out
cli
(bad)
adc
ds
(bad)
jno
jo
data16
jp
mov
pop
mov
inc
adc
xchg
mov
or
pop
pop
pop
sahf
mov
dec
mov
dec
jnp
dec
stos
repnz
or
lea
inc
(bad)
jle
aas
cdq
div
jae
lods
sbb
shr
xlat
out
mov
jae
call
lods
cmc
call
jae
bound
sbb
jb
in
pop
aaa
or
icebp
lods
call
or
xchg
cmc
mov
int
pop
fsub
lahf
jecxz
arpl
adc
mov
jns
movs
add
sar
scas
mov
scas
call
lahf
add
jmp
and
ins
jmp
mov
jmp
ror
cmp
aad
pop
jb
dec
push
inc
pop
ds
(bad)
cmp
xor
mov
sbb
pop
dec
dec
aaa
adc
mov
imul
mov
mov
sbb
into
dec
cmp
jno
push
(bad)
cmps
loopne
cmp
into
push
inc
in
cs
fwait
adc
lea
mov
xor
or
xchg
sub
xchg
sub
lds
push
ret
and
retf
not
dec
cmp
sub
xor
test
sti
sbb
imul
or
dec
xchg
cmps
mov
xchg
xchg
aad
cmps
mov
not
(bad)
test
pop
add
adc
mov
pop
rcl
ins
sbb
and
xchg
and
outs
neg
jecxz
nop
add
mov
(bad)
popf
loopne
jmp
mov
leave
xor
mov
das
addr16
addr16
repz
push
bnd
and
call
sbb
dec
mov
sar
mov
xor
sbb
pop
jbe
pop
and
fdivr
je
cmp
push
arpl
rcr
xchg
ffreep
fisttp
(bad)
je
fwait
jg
lahf
or
pop
mov
popa
cmc
jecxz
ss
test
push
sub
and
cmps
push
lds
sub
clc
les
add
retf
fsub
mul
cwde
out
dec
mov
fld
cmp
(bad)
fld
ret
ret
mov
pusha
lds
ds
sti
scas
stos
lock
loope
leave
or
ins
loopne
pop
(bad)
push
add
retf
mov
jg
mov
fbstp
repnz
push
in
sbb
inc
xchg
cmp
sub
cdq
mov
call
or
or
dec
xchg
xor
dec
mov
fldlg2
fisttp
cmps
(bad)
ret
jbe
inc
call
stc
pop
push
lahf
outs
bound
pop
or
rol
test
jmp
jbe
and
clc
stos
pop
ror
cld
stos
jno
cli
sub
cmp
cmps
mov
cli
dec
mov
test
sub
mov
hlt
cmp
xchg
fs
pop
fistp
xchg
fisubr
dec
fld
fisubr
bnd
xor
iret
scas
pop
inc
iret
outs
lahf
push
inc
pop
mov
cmps
jb
lea
mov
iret
add
cmp
cmps
mov
inc
stos
or
aaa
push
mov
fldenv
mov
pop
pushf
jle
and
pop
(bad)
retf
(bad)
fisub
cdq
cmp
mov
or
aaa
mov
clc
jnp
(bad)
mov
sub
out
pop
test
xor
sub
fucomip
inc
cmp
mov
pop
in
jae
inc
es
sub
sub
add
inc
fadd
push
cmp
shl
jmp
outs
ret
pop
add
xor
jp
mov
jo
loop
or
loopne
cs
push
aad
shr
cmp
sub
xor
fwait
xor
lock
repz
mov
scas
loop
push
rcr
pop
pop
adc
pop
mov
pop
ret
sub
(bad)
lahf
mov
mov
cmps
rol
add
bound
pusha
dec
adc
cli
xchg
lods
inc
xor
xlat
push
jmp
jmp
xchg
push
mov
stc
pop
ret
(bad)
jno
ret
dec
sub
dec
mov
sar
jmp
es
dec
pop
fnsave
jno
pop
lods
shl
lods
test
sbb
dec
push
daa
pop
and
retf
mov
addr16
das
pop
push
adc
cli
xor
fwait
jle
leave
mov
jnp
and
adc
cwde
out
cld
arpl
(bad)
mov
mov
and
scas
sub
bound
daa
pushf
sub
mov
mov
xor
xchg
js
sbb
loop
mov
push
push
push
sbb
popf
cmp
sub
add
movs
inc
out
aam
ja
ror
add
xchg
les
xchg
popf
fmul
out
mov
bound
dec
int
add
push
dec
es
out
aam
fiadd
dec
inc
leave
push
fstp
xor
sub
or
add
dec
mov
(bad)
std
inc
push
xchg
xor
sbb
sub
jne
sub
jne
mov
std
sbb
(bad)
pop
mov
fsubr
inc
inc
hlt
sub
add
ffreep
fstp
xor
daa
sub
add
push
push
(bad)
jne
sub
scas
rcl
lahf
dec
push
dec
(bad)
mov
loope
lods
fwait
mov
dec
cmp
mov
(bad)
cwde
mov
sbb
mov
pop
mov
test
inc
jno
inc
fnstenv
outs
and
mov
pop
in
data16
int3
outs
and
pop
pushf
gs
jg
arpl
mov
outs
cmp
fldcw
inc
ins
sbb
add
retf
enter
adc
lods
popf
out
aaa
scas
and
dec
jle
xchg
fild
int
adc
sbb
jmp
xchg
es
and
nop
jbe
shl
adc
xchg
sbb
pop
imul
and
xchg
sub
mov
adc
imul
add
in
xchg
stos
lock
xchg
sub
loope
push
inc
shl
jae
jns
pop
fldcw
cmps
adc
sbb
je
jg
mov
mul
out
jo
data16
popa
mov
mov
(bad)
sahf
push
pop
sbb
dec
mov
mov
into
dec
lods
xor
nop
jns
std
push
mov
mov
sub
out
xchg
lea
loopne
arpl
add
jl
dec
xor
push
stos
xchg
sbb
fidiv
dec
mov
sub
push
or
inc
xchg
popf
jae
mov
out
mov
cmc
mov
pop
pushf
ss
mov
mov
bound
cmps
jmp
cs
mov
push
add
push
aad
push
in
mov
push
ret
cdq
jl
scas
or
fs
in
xchg
scas
popf
xor
push
loop
out
or
jbe
mov
leave
push
ins
mov
fimul
adc
ja
cs
add
push
add
das
retf
aaa
mov
adc
fs
and
and
pop
mov
(bad)
mov
sub
mov
ds
fnstenv
test
test
aam
mov
test
std
loopne
mov
das
daa
pop
cmp
icebp
mov
mov
jp
sar
jle
cmp
aam
or
in
lahf
mov
call
xchg
and
cmps
cmp
xchg
cmp
outs
test
cmc
pop
enter
sbb
ins
add
js
xor
mov
out
and
mov
and
xor
ins
pop
adc
test
aad
mov
cli
pop
pop
jg
dec
das
inc
push
aas
xor
add
inc
popa
add
outs
repz
mov
jg
add
jl
mov
or
ja
cmc
stos
jbe
sub
jmp
fwait
mov
lock
jne
pop
pop
dec
pop
mov
call
outs
repz
pusha
push
and
addr16
mov
adc
mov
sub
sahf
cwde
cmps
sub
aaa
imul
popf
inc
and
jmp
sbb
int
sbb
sbb
and
xchg
pop
mov
push
in
loopne
pop
dec
xchg
mov
jg
pop
lock
lock
pop
or
push
push
xchg
xor
ret
int3
push
scas
loop
sar
push
cli
dec
outs
mov
jb
jae
fstp
inc
mov
jnp
jns
outs
fistp
loopne
inc
rcr
mov
xchg
aaa
out
clc
rcr
xchg
lahf
pop
mov
aad
sti
push
inc
cdq
cwde
ret
iret
cmp
and
xchg
jnp
push
sti
or
dec
popa
mov
push
pop
or
mov
mov
jne
stos
mov
lods
mov
adc
xor
and
cmp
fdivp
dec
aam
and
and
mov
and
jl
xchg
loop
adc
fldenv
fld
push
cmp
xor
mov
xlat
sub
push
ret
adc
test
add
push
(bad)
or
push
sub
dec
pushf
jne
sub
jnp
jecxz
inc
sub
xor
and
mov
cmp
scas
cmp
out
cmp
jmp
call
movups
inc
mov
ins
xor
cmp
(bad)
add
cmp
adc
imul
int
inc
jle
popf
repz
loopne
repz
jae
(bad)
and
fcomp
xchg
adc
ins
pop
fwait
in
call
addr16
inc
inc
inc
mov
xchg
repnz
mov
int
in
fist
mov
cmp
mov
dec
sbb
fisubr
imul
cmp
jmp
add
mov
mov
stc
dec
imul
jne
inc
cmp
fs
mov
test
ficomp
lahf
mov
cmp
cmp
mov
call
jae
rol
aas
pop
mov
mov
inc
inc
mov
aam
sub
test
push
adc
pop
push
outs
push
xchg
cmp
pop
(bad)
lods
aaa
fisubr
out
push
jno
add
jmp
dec
push
aad
inc
add
adc
ss
pop
addr16
inc
in
and
(bad)
fnstcw
fnstenv
jae
imul
mov
jmp
dec
pop
xor
xchg
out
lea
inc
or
cdq
(bad)
retf
jp
xor
xchg
fbld
mov
shl
icebp
test
lock
sbb
in
sbb
cwde
inc
pop
int
test
leave
test
ror
sbb
fnstsw
xchg
pop
fwait
or
test
cmp
add
scas
mov
ja
scas
push
mov
jo
xor
in
lods
xlat
push
jl
not
add
mov
iret
pushf
mov
imul
clc
cmp
cwde
xlat
mov
cld
icebp
loope
push
push
cwde
std
(bad)
fadd
pop
sub
in
pop
enter
repnz
add
pop
pushf
sub
jmp
icebp
inc
arpl
dec
popa
push
(bad)
mov
inc
jmp
jmp
stos
mov
push
add
scas
cs
sbb
call
hlt
(bad)
ss
loopne
mov
or
pop
sub
in
or
(bad)
shr
push
push
xchg
in
neg
or
sub
jno
dec
sub
movs
xchg
(bad)
or
pop
fwait
mov
out
in
mov
jne
push
je
mov
cmp
jmp
sub
je
dec
not
cld
mov
and
int
xor
mov
in
sub
pushf
es
sbb
lods
movs
shl
retf
jmp
dec
xchg
xchg
aam
add
and
mov
and
push
icebp
inc
xchg
mov
sub
add
mov
adc
mov
push
ja
cli
cmp
(bad)
mov
loopne
mov
into
leave
fdiv
dec
imul
mov
jecxz
stos
je
mov
inc
jmp
sbb
mov
clc
nop
mov
dec
jno
hlt
xor
mov
popf
mov
inc
imul
sbb
pop
jbe
std
cdq
mov
pushf
lea
adc
cmc
sbb
adc
sub
cli
test
lods
fst
repz
call
retf
retf
sbb
push
pop
xor
dec
mov
das
imul
inc
inc
fcomp
cli
add
cmps
cmps
movs
sbb
pop
mov
mov
or
movs
dec
jb
scas
xor
fidivr
stc
call
add
xchg
pop
cwde
push
and
sub
in
and
sub
mov
in
retf
sbb
outs
stos
ret
lahf
adc
mov
mov
adc
dec
imul
loopne
ror
imul
in
push
pop
sbb
pop
in
shl
ds
sub
inc
aaa
inc
retf
fldcw
xchg
sbb
std
sub
js
sub
and
jns
int
movs
pop
fadd
sub
leave
imul
pop
push
add
mov
jecxz
xchg
aad
push
popf
xchg
cmp
jmp
cmc
cmp
and
cli
jnp
mov
adc
int3
aam
mov
cmp
jl
cmp
add
out
ja
addr16
enter
jecxz
(bad)
push
imul
and
in
not
adc
mov
adc
js
pop
sbb
mov
jne
adc
xchg
jg
dec
add
jle
std
test
inc
sbb
repz
mov
not
xchg
movs
shl
addr16
scas
lds
adc
sub
cs
daa
cmp
jmp
push
add
sahf
dec
std
or
repz
aas
xor
mov
jae
loope
jecxz
mov
imul
fistp
pop
pop
xchg
inc
fs
(bad)
les
fwait
sysret
jnp
rcl
mov
mov
in
inc
inc
rcr
xor
leave
or
mov
pop
dec
aas
and
ret
push
jp
int3
mov
push
outs
inc
(bad)
pop
adc
cmps
rol
and
xchg
test
adc
pop
jnp
jnp
pop
jo
in
loope
inc
fist
xchg
mov
frstor
and
sbb
fwait
enter
cmp
aad
mov
pop
stc
test
loop
ins
push
add
lock
sub
sbb
dec
in
jp
pop
adc
inc
bound
jg
sbb
jmp
fsubr
inc
cld
cmp
jno
fwait
sar
push
jmp
sub
lods
lds
xlat
mov
mov
fst
jmp
xor
ret
stos
add
sbb
js
retf
inc
push
push
movs
mov
mov
add
fisub
lahf
jl
sahf
in
jge
cmps
in
inc
push
ss
inc
add
movs
ins
xor
out
push
fsubr
(bad)
enter
popa
sbb
fidiv
outs
add
stc
fwait
inc
shl
lahf
repz
es
mov
in
jl
add
jmp
pop
std
in
jo
inc
lahf
cmp
xor
inc
je
clc
cli
mov
mov
scas
or
and
mov
jmp
pop
lods
xor
push
les
cmp
jl
in
sub
mov
mov
mov
inc
aaa
(bad)
pop
xor
xor
jp
out
add
and
sub
cs
xor
sbb
test
sub
adc
mov
jbe
cli
iret
push
dec
mov
mov
mov
mov
sbb
leave
nop
fucomp
cmp
push
pushf
in
test
and
xchg
adc
fs
loope
and
js
test
cmps
mov
ss
push
or
popa
hlt
gs
jl
(bad)
mov
aas
mov
jecxz
push
mov
or
mov
(bad)
or
jle
inc
push
jne
sbb
cmp
pop
scas
mov
push
dec
test
inc
push
add
fisub
mov
paddw
test
push
and
test
xor
ja
xchg
xchg
nop
gs
jbe
fild
mov
mov
out
pop
movs
xor
and
xchg
jg
mov
fs
push
pop
test
pop
out
mov
jns
cmc
inc
mov
js
push
add
pop
imul
lods
or
ins
pop
xchg
sub
ss
add
in
pop
add
mov
fisttp
jne
in
inc
sti
ja
cmp
addr16
addr16
add
inc
(bad)
ficomp
outs
cmp
dec
cmp
scas
leave
mov
in
ret
ss
mov
loope
test
push
sti
adc
push
shl
dec
aas
stos
ret
jb
dec
or
jno
ret
in
or
sub
add
xchg
add
inc
push
push
aas
in
stos
(bad)
and
cmc
mov
jo
fld
arpl
push
dec
add
and
push
jae
(bad)
mul
ror
dec
mov
test
cmc
mov
or
cld
add
cli
pop
scas
pop
cwde
cmp
mov
or
xchg
jne
mov
xchg
push
aas
mov
pop
jmp
xor
jl
(bad)
cld
repnz
out
adc
pop
jbe
movs
fiadd
inc
jne
jp
aas
cmp
cmp
arpl
jmp
cmp
pop
fnstenv
add
js
xlat
jle
lds
test
repz
add
mov
mov
sbb
fcom
movs
dec
ret
aad
cmp
int3
mov
lea
fbld
push
or
xchg
je
mov
mov
inc
in
xor
adc
retf
inc
aad
add
jle
fmul
es
push
fs
je
retf
std
bound
dec
cmps
stc
and
jne
push
fs
jne
dec
pushf
mov
popf
sbb
push
pop
xor
(bad)
(bad)
in
mov
and
rol
sbb
adc
in
jno
test
and
fstp
sbb
(bad)
xor
sub
xlat
icebp
inc
dec
xchg
mov
xrelease
ret
out
push
push
icebp
adc
dec
outs
stos
or
aad
scas
les
hlt
fadd
xor
sbb
aaa
sub
mov
add
jmp
test
gs
outs
neg
mov
pop
mov
test
test
push
scas
arpl
dec
xor
dec
xor
dec
enter
pusha
(bad)
mov
pusha
aam
ins
cmp
repz
xor
xchg
cld
xchg
dec
aas
mov
fsubr
nop
cs
iret
or
inc
push
stos
inc
pop
push
cdq
adc
or
int
bnd
and
inc
xchg
jle
mov
rcr
xor
pop
jno
daa
fsubr
(bad)
imul
fldcw
in
fist
cmp
fsin
std
test
jmp
hlt
dec
imul
cmps
into
push
int3
cwde
jl
xchg
fidivr
aad
fmul
add
addr16
jecxz
or
jbe
mov
adc
xchg
jo
cmps
pop
push
pop
pop
sahf
pop
sbb
dec
adc
or
not
dec
mov
out
or
jl
je
outs
xlat
loope
xor
mov
popa
sub
pop
ds
adc
fst
fs
mov
xor
bound
idiv
add
xor
xchg
dec
in
movs
push
test
pop
cmp
mov
loope
int
sar
outs
mov
mov
mov
and
es
data16
pusha
inc
or
or
mov
in
mov
jnp
es
or
in
push
mov
xor
lods
or
cmc
sub
loop
pop
retf
cmc
sub
scas
jge
xor
inc
jo
xchg
fist
adc
les
xchg
test
scas
rol
or
lahf
outs
inc
inc
repz
mov
lods
enter
sbb
xor
sbb
aam
push
or
sub
cmp
not
inc
dec
mov
jo
adc
jbe
fbstp
lods
and
or
mov
add
retf
pinsrw
jecxz
je
xchg
add
dec
sub
loopne
sbb
es
or
mov
pushf
movs
in
scas
neg
fldenv
lds
mov
jbe
fdivr
jae
add
dec
push
enterw
ja
inc
lea
enter
xchg
daa
jo
adc
pushf
jo
push
inc
xor
push
cmp
sbb
js
push
shl
dec
inc
dec
pop
jne
icebp
cmc
call
sbb
les
(bad)
jbe
pusha
mov
cmp
test
(bad)
out
inc
cmp
(bad)
loopne
mov
fist
aam
push
ja
xor
jne
fwait
pop
stos
mov
ins
shl
jge
push
popf
out
push
iret
mov
jecxz
xor
inc
int3
outs
stos
push
add
cwde
sub
(bad)
mov
hlt
and
mov
icebp
xor
mov
inc
test
xchg
mov
test
or
jp
sti
in
pop
add
add
pushf
(bad)
sbb
inc
fsub
arpl
jne
xchg
mov
mov
and
inc
cmp
enter
xor
push
std
push
inc
pop
std
loopne
in
lds
int3
pop
repz
out
sar
xchg
jnp
das
fnsetpm(287
mov
fs
aad
xor
xchg
add
loope
hlt
cmps
scas
xchg
ficomp
lods
push
mov
out
imul
adc
js
sahf
and
dec
shr
sbb
movs
mov
lea
mov
mov
or
div
retf
cmp
hlt
lods
movs
xor
repnz
(bad)
cli
adc
jg
push
push
repz
adc
xor
sub
inc
jae
mov
xchg
gs
xchg
out
add
pop
add
shr
fcom
cmp
aaa
mov
imul
add
sbb
and
idiv
xchg
aaa
add
adc
add
or
daa
dec
mov
mov
cmps
mov
les
or
and
out
sbb
mov
inc
fmul
in
xchg
scas
mov
cmc
into
iret
mov
inc
sbb
pop
jecxz
aaa
fsubr
jmp
fdiv
and
and
pop
push
adc
in
out
lds
mov
mov
mov
daa
(bad)
push
mov
jb
aas
(bad)
sub
and
pop
mov
mov
stc
ror
add
mov
or
pop
enter
pop
or
outs
daa
in
loope
out
mov
pusha
in
add
dec
xor
pop
or
rcr
jp
popf
sub
iret
push
push
jb
dec
sub
popa
loop
shr
lea
imul
ds
cli
outs
test
das
mov
std
jp
test
xchg
inc
out
add
data16
xchg
repnz
add
sti
imul
loop
leave
mov
ja
jb
push
inc
xor
jae
aam
jecxz
push
les
in
add
dec
outs
xchg
sbb
push
mov
push
lods
test
outs
add
xchg
and
push
out
cmp
int3
or
je
xchg
or
inc
sub
inc
repnz
js
ss
ins
mov
adc
cmp
iret
mov
sub
mov
pop
mov
loopne
sbb
pop
mov
(bad)
inc
int
xchg
jecxz
pop
sub
cli
enter
les
cld
scas
xor
sti
test
pop
call
xor
sbb
rcl
pop
setp
mov
jns
push
arpl
mov
and
adc
push
sti
cld
cmps
loop
mov
cmp
mov
inc
jnp
push
mov
inc
inc
aam
xchg
or
sub
daa
jno
jno
loop
mov
push
repnz
mov
push
scas
push
add
fwait
test
dec
dec
xor
push
push
and
int3
fstp
in
mov
or
cmp
xchg
outs
jns
fucomip
shl
ror
test
mov
out
mov
lods
cs
jmp
mov
lahf
xchg
mov
push
lds
dec
maxps
mov
or
ss
dec
sub
je
(bad)
in
outs
xor
mov
loopne
dec
sahf
jo
xchg
pop
test
and
shr
fistp
popf
ja
sbb
and
jo
push
cs
pop
mov
jmp
repnz
bound
or
pop
and
push
cmp
mov
cmc
dec
pop
pop
add
xlat
mov
mov
ins
push
sti
pop
hlt
jmp
push
popf
or
imul
mov
inc
movs
outs
js
mov
sub
push
popf
outs
sbb
mov
call
sar
imul
xchg
mov
push
sahf
test
xchg
pop
pop
cwde
ficom
xor
cmps
mov
fwait
xchg
mov
jo
xor
cmp
lea
cmp
or
dec
xchg
icebp
sub
inc
push
ds
enter
push
push
(bad)
out
cmp
test
mov
call
fdivr
je
mov
or
mov
jp
xor
push
loop
dec
out
loopne
dec
inc
stos
and
mov
jne
mov
cmp
push
popf
imul
push
xchg
out
test
jp
mov
rcl
and
mov
sti
jle
and
push
fbld
nop
arpl
mov
out
lock
adc
sbb
mov
and
pusha
xchg
xor
js
mov
push
xor
arpl
je
cmp
lods
jmp
pusha
push
add
mov
jg
inc
mov
push
dec
(bad)
jbe
sbb
inc
call
adc
xchg
shl
paddb
jns
adc
inc
popa
adc
cdq
sbb
pop
test
and
xor
in
aas
xchg
inc
out
xor
add
jle
xlat
xchg
mov
mov
push
mov
dec
add
dec
xor
mov
and
inc
sbb
lahf
mov
(bad)
adc
mov
push
cs
push
mov
push
jno
push
fwait
and
fimul
sti
sahf
jge
xor
imul
xchg
pop
and
adc
push
xor
sub
sbb
jmp
out
nop
add
pop
xor
test
fcom
xchg
cwde
sbb
ja
in
addr16
ss
pop
mov
test
jp
sti
das
add
sbb
jp
mov
dec
or
fdivrp
xor
fild
adc
shl
sub
popa
movs
mov
les
retf
xchg
movs
xor
ret
pop
and
icebp
mov
sub
push
mov
dec
xor
inc
les
jle
xchg
outs
mov
sar
clc
mov
xchg
retf
inc
outs
mov
je
add
aaa
cdq
fnsave
packuswb
fcomp
stos
cmp
dec
jne
push
retf
popf
test
rcl
test
xchg
mov
xor
loopne
dec
mov
jl
call
test
cmps
fisubr
div
hlt
cmp
pop
call
or
call
sub
push
jno
out
(bad)
in
mov
inc
(bad)
mov
mov
(bad)
fprem
imul
push
stos
retf
xchg
pop
pop
jno
fs
out
mov
sbb
jo
xchg
or
mov
sub
mov
imul
int
bound
jno
popa
push
(bad)
sub
test
aad
stos
xchg
in
push
imul
mov
sbb
sti
out
and
cmc
mov
pop
mov
jp
push
and
dec
fs
jo
aad
mov
sbb
loope
mov
and
rol
aaa
pop
mov
jmp
repz
(bad)
fwait
mov
lea
cmc
pop
pop
pop
scas
repnz
mov
popa
pop
(bad)
stc
xchg
cwde
mov
pop
ret
pusha
sub
xor
or
and
push
pop
and
jecxz
add
sahf
dec
ficomp
mov
add
(bad)
in
push
jecxz
adc
or
out
sbb
inc
xor
push
stc
mov
cli
loopne
cdq
daa
mov
cwde
ins
mov
stc
in
js
mov
int3
mov
add
jp
push
movs
das
mov
in
aad
xchg
imul
push
mov
jg
dec
cdq
mov
sahf
mov
xchg
pop
lahf
sbb
add
ret
mov
fisub
mov
push
mov
rol
cmp
xchg
sub
lea
punpckldq
out
mov
jae
mov
in
cmp
jle
pop
cmp
sub
rcr
mov
cmp
xchg
cmp
cmp
shl
test
scas
movs
and
lock
or
mov
sar
repnz
mov
shl
push
adc
std
out
lock
or
call
add
fisttp
adc
outs
shl
and
adc
xor
stos
xor
int
(bad)
xchg
lds
test
shr
sub
jbe
frstor
shl
fdivrp
jno
lea
mov
scas
retf
mov
imul
les
(bad)
and
rcl
pop
push
push
retf
push
gs
js
push
push
sub
push
into
mov
test
mov
or
arpl
das
icebp
stc
loop
xor
inc
lods
(bad)
out
jbe
(bad)
imul
xlat
mov
ins
shl
call
aad
pop
clc
add
sub
inc
dec
pushf
jnp
jns
xor
imul
xchg
cmp
xlat
dec
cmp
movs
sbb
pop
adc
mov
mov
cli
dec
in
in
lock
cmps
aaa
dec
add
jp
sub
lahf
fucomp
(bad)
jmp
jg
push
jecxz
mov
xor
mov
mov
or
and
xchg
test
jno
sbb
(bad)
outs
imul
xchg
test
mov
push
aam
sub
inc
mov
inc
popa
adc
lods
in
mov
jp
hlt
jg
enter
pop
cmp
iret
sub
(bad)
fisubr
(bad)
hlt
ret
sub
adc
mov
xor
lods
cld
lahf
push
inc
and
mov
and
pop
push
push
xor
retf
lods
(bad)
fmul
rcr
cmp
ror
inc
jb
and
add
pop
dec
dec
mov
(bad)
add
cmp
and
inc
adc
inc
in
jns
pusha
cmovnp
push
and
mov
xchg
and
ja
xchg
xor
dec
daa
jmp
xor
push
repnz
and
aam
ins
push
sub
cmp
ds
pop
sub
pushf
pop
xchg
lahf
mov
mov
shr
xlat
pusha
xor
push
mov
jo
adc
test
push
popa
inc
ins
add
sbb
dec
or
popa
rcr
jg
push
push
pusha
ret
cmp
sub
push
retf
cs
sub
bound
repz
cmps
inc
ror
pop
xchg
loop
cdq
add
mov
icebp
mov
ja
les
popf
sbb
out
dec
jo
jae
pushf
mov
ins
cs
push
mov
in
(bad)
jo
adc
adc
(bad)
rcr
mov
aad
mov
(bad)
or
or
(bad)
out
push
mov
cmp
(bad)
sub
mov
or
sbb
jecxz
adc
fisttp
mov
xchg
aaa
add
adc
pushf
inc
push
sbb
push
xchg
fsub
dec
pop
ja
push
inc
ss
imul
cmps
mov
shr
jbe
sbb
add
mov
xor
mov
jg
dec
and
ins
sub
inc
sub
das
sub
gs
xchg
push
sar
mov
jmp
xchg
push
or
std
xchg
dec
call
ja
(bad)
je
ins
xchg
loop
gs
cld
mov
rcl
cld
sbb
and
sahf
sub
aam
cmp
popa
into
shr
icebp
jp
in
xchg
sti
int
ret
jb
jnp
cmps
dec
and
rcl
jne
int
sbb
ins
push
cmps
inc
pusha
retf
repz
dec
dec
icebp
cmc
lock
ins
or
jne
lahf
fwait
jecxz
or
neg
out
inc
adc
in
popa
rol
in
push
dec
je
cwde
addr16
push
sub
and
fstp
enter
pop
lds
jne
pop
push
add
imul
cmp
int3
adc
sub
mov
inc
neg
push
cmps
in
mov
mov
nop
add
add
and
jg
das
mov
inc
je
xchg
mov
or
mov
jmp
rcr
mov
pushf
xor
test
loop
mov
out
lahf
xor
in
or
dec
pushf
popa
pop
bound
jne
lock
mov
imul
xchg
loopne
repnz
pop
or
xor
jge
add
cwde
test
xchg
push
xchg
add
jecxz
arpl
xchg
mov
mov
xchg
sbb
mov
and
add
bound
adc
cmp
out
cmps
fcom
loope
xchg
pop
dec
call
add
mov
sbb
loope
or
fmul
pop
push
cld
sub
cmps
mov
shl
mov
sahf
jle
push
and
adc
iret
or
and
or
jb
retf
stos
ins
push
or
xchg
pop
into
lahf
aas
clc
adc
call
int
push
dec
push
ja
push
shl
jb
add
xor
mov
or
jmp
scas
jb
out
in
cwde
or
pusha
aas
in
dec
dec
pop
mov
mov
dec
cmps
jns
cmp
rol
cmc
pop
aad
pop
stos
adc
inc
add
outs
cmp
push
fstp
xlat
je
lahf
jg
fadd
dec
bound
and
pop
pop
in
push
xchg
je
pop
mov
sbb
js
push
or
rcr
cmp
(bad)
into
xor
push
xor
je
dec
pop
hlt
pop
push
cli
test
and
dec
rol
sub
sub
pop
cdq
out
sbb
push
or
dec
push
je
inc
push
das
mov
add
cs
pop
push
stc
aad
stos
cmp
repz
xchg
xor
xchg
lea
xor
xchg
push
cmp
fimul
pushf
pop
fisub
or
iret
js
inc
xor
push
stc
adc
push
xor
add
ds
ins
jmp
vcvtps2dq
std
rol
cmp
test
mov
fdivr
adc
xchg
xor
(bad)
je
aam
shl
mov
xor
add
mov
int
cmp
bound
push
mov
test
xchg
test
add
add
xor
sahf
ret
and
jne
push
(bad)
fcomp
mov
add
inc
push
js
mov
lock
xlat
jge
adc
push
scas
mov
fwait
icebp
test
mov
retf
sbb
nop
jmp
xor
cmp
daa
cmp
push
dec
dec
push
test
cmp
adc
push
add
dec
cmps
mov
xchg
sub
stos
enter
ja
jmp
(bad)
or
jb
xchg
test
xor
rcr
xchg
(bad)
jmp
call
mov
adc
push
mov
pop
mov
dec
xchg
sbb
test
push
retf
pop
jg
push
xchg
retf
cs
mov
mov
jne
xor
pop
fadd
push
inc
mov
nop
adc
and
pop
add
jle
shr
cmp
adc
hlt
hlt
xchg
mov
sub
scas
ret
mov
pavgw
pop
popf
leave
inc
push
or
out
ins
push
xor
out
adc
mov
nop
pop
in
shr
mov
into
call
xlat
repz
cwde
ficom
mov
adc
cli
fld
push
or
adc
aad
xor
dec
pop
pop
in
test
push
adc
iret
jp
push
pop
loopne
xchg
and
mov
sub
adc
mov
push
adc
fist
jbe
xor
jecxz
lea
in
jl
xchg
mov
imul
jno
int3
out
inc
cli
push
repz
lods
xchg
sub
xchg
jnp
fs
das
into
cmps
mov
push
jmp
dec
push
cmp
or
mov
jne
test
and
arpl
sbb
(bad)
cmps
das
mov
mov
shl
mov
push
inc
xchg
lds
movs
sbb
add
pop
cmc
outs
add
lea
xor
lds
dec
scas
imul
or
scas
pop
push
dec
mov
sahf
dec
xchg
iret
jnp
pop
sub
(bad)
push
xor
cmp
adc
je
not
(bad)
adc
inc
mov
mov
in
xchg
fidiv
stos
xor
cmp
xchg
xor
sbb
jge
pop
and
mov
imul
sub
inc
mov
inc
ret
or
xchg
in
adc
aas
gs
fistp
out
jle
and
mov
adc
mov
enter
outs
push
push
pop
mov
xlat
mov
sti
daa
add
adc
xchg
sub
repnz
inc
je
in
mov
pop
mov
sbb
sub
jl
xchg
push
sbb
cmp
jecxz
adc
es
pop
mov
sub
pop
jbe
adc
out
push
dec
jecxz
outs
cmps
mov
and
add
jae
mov
jne
fisttp
push
popa
es
add
dec
adc
test
int
pop
dec
call
mov
mov
jp
loope
hlt
stc
and
sahf
rol
mov
sbb
push
lock
aaa
and
add
sub
fucomip
pop
pop
enter
push
cmp
imul
fwait
and
faddp
mov
sub
cmp
cmp
or
lea
or
mov
lea
push
xchg
das
mov
adc
push
mov
jge
scas
sub
(bad)
cdq
cwde
scas
xchg
int
mov
mov
mov
mov
or
dec
cs
rol
rcl
test
cdq
sub
call
pop
out
dec
lds
fwait
xchg
sub
pop
in
lods
pop
lock
xchg
mov
adc
dec
pop
jecxz
popf
dec
mov
cmp
retf
add
ret
movs
push
pop
movs
fisubr
sub
jae
adc
dec
dec
xchg
packuswb
jbe
movs
aam
lahf
jae
(bad)
mov
cmp
mov
pop
pop
mov
ins
jb
(bad)
push
loope
push
sbb
xor
sub
sbb
pop
sete
mov
ret
push
jnp
cmps
(bad)
adc
push
sbb
mov
cmps
pop
retf
fs
jle
sub
jmp
ror
iret
inc
mov
sub
inc
lds
das
cld
dec
and
cmp
lods
scas
outs
fs
inc
mov
ret
sub
jmp
push
scas
mov
rcr
dec
ret
call
push
mov
jge
imul
dec
test
loope
pop
cmps
jmp
inc
add
fisttp
ror
cmp
and
jno
popf
dec
test
xchg
pop
mov
repz
mov
mov
push
lods
inc
xchg
cmp
pushf
(bad)
fcomp
cmp
ror
fiadd
les
clc
mov
jo
dec
cld
fisttp
mov
lock
(bad)
fsubr
addr16
fisubr
jl
data16
cmp
movs
mov
pop
mov
jne
or
inc
aas
retf
mov
mov
pop
daa
xchg
(bad)
movs
or
sub
or
sbb
adc
int3
ficomp
stc
lods
inc
mov
cmp
hlt
cmps
clc
frstor
test
scas
lea
xchg
int
ror
mov
pop
lea
scas
mov
int3
sub
movs
mov
inc
mov
adc
xor
pop
outs
scas
ret
jg
mov
jne
or
sub
inc
data16
mov
cld
mov
pop
call
bound
or
push
stos
inc
push
repnz
aas
mov
aam
dec
sahf
pop
outs
inc
or
shl
test
cmp
ror
push
std
sbb
jae
fnsave
fstp
adc
js
mov
cmps
sub
pop
mov
dec
xchg
cmp
xor
cld
retf
adc
pop
jb
sub
dec
lahf
push
cs
mov
mov
add
fdivr
xchg
loope
or
mov
jo
mov
xchg
cmp
test
loop
xchg
jb
push
repz
(bad)
bound
jnp
mov
adc
or
sti
js
jle
mov
adc
push
sub
pop
ins
pop
xlat
sub
popf
cmc
cmps
push
jno
lods
jnp
mov
pushf
movs
dec
leave
imul
sti
jae
outs
sub
dec
pop
in
adc
adc
mov
and
das
add
xchg
ret
fidiv
jae
fwait
ret
(bad)
mov
mov
fisttp
repz
xchg
push
sbb
daa
jns
or
mov
cdq
std
push
xor
or
add
fstp
add
dec
hlt
lods
dec
enter
xchg
outs
add
pop
mov
sub
sbb
push
rcl
xchg
in
push
in
aam
out
sbb
jne
jmp
push
jle
(bad)
mov
fiadd
test
jge
addr16
(bad)
adc
(bad)
adc
mov
xchg
push
and
mov
dec
loop
push
mul
sub
adc
not
sbb
mov
cmps
in
fdivr
js
fnsave
inc
jo
addr16
mov
addr16
cdq
inc
sar
jns
xchg
lds
lods
loope
cli
(bad)
fist
mov
in
out
cmp
rcr
sti
or
add
fsubr
cwde
fdivp
and
iret
pop
mov
mov
imul
sahf
pop
push
ins
jp
pop
mov
out
test
std
mov
aad
fistp
ins
jl
int3
gs
ds
xor
sub
cmp
jae
xchg
and
mov
jge
in
xchg
shr
inc
cs
enter
imul
adc
pushf
sub
inc
jns
mov
or
push
pop
cmp
lea
push
xor
dec
call
paddsb
cmc
shl
lea
ja
sbb
push
push
and
or
nop
popf
jp
imul
inc
pop
in
fwait
(bad)
pop
cs
call
lea
mov
dec
ins
mov
pop
mov
xor
les
out
push
adc
dec
lea
jne
pop
test
cld
loopne
cli
xchg
inc
popf
inc
and
cwde
daa
aad
dec
sub
(bad)
jle
fist
out
in
sar
(bad)
adc
push
mov
imul
xchg
xlat
push
inc
fbstp
mov
rol
and
rcr
mov
fldenv
push
js
shl
pop
aam
push
jns
sbb
jmp
xchg
outs
ins
xor
aad
cmp
cmp
mov
jp
mov
push
aas
jae
nop
es
sbb
cmp
xor
loop
push
xchg
mov
ret
xchg
dec
dec
xor
fisttp
push
mov
push
xor
adc
cdq
xlat
jmp
mov
fst
xor
or
fst
adc
sub
jne
mov
cmc
jmp
sahf
leave
xchg
push
push
mov
cmps
push
gs
hlt
lock
faddp
pushf
sub
aam
cmps
add
int
into
mov
jb
(bad)
fs
arpl
mov
inc
movs
(bad)
sub
sbb
or
xchg
pop
fcomp
jmp
repz
scas
mov
cmp
sub
test
pop
aaa
clc
sub
pop
dec
leave
fisubr
out
iret
and
add
sbb
loope
or
sar
cmp
rcl
pop
cmp
imul
ret
test
xor
add
mov
lahf
cmp
fcmovb
(bad)
iret
sub
outs
add
test
lahf
in
cli
pushf
mov
add
ins
comiss
les
xor
retf
mov
xor
fidivr
mov
outs
into
es
test
mov
jle
push
jno
clc
mov
out
and
(bad)
out
mov
daa
dec
fwait
push
or
mov
call
jno
hlt
movs
cmp
movs
(bad)
stc
cs
cmp
sbb
jmp
fstp
inc
jmp
pop
rcl
sub
and
fwait
aad
imul
fimul
shl
dec
test
cld
mov
ds
nop
movs
push
cmp
jns
(bad)
cmp
xor
out
rcl
inc
fwait
adc
cmp
mov
ret
sub
out
das
push
inc
mov
sbb
add
xor
xchg
push
xchg
scas
push
mov
(bad)
mov
and
int
dec
xchg
sub
dec
rcl
loopne
movs
xchg
cmps
out
jge
mov
(bad)
in
sbb
rcr
call
mov
int3
outs
jo
movs
mov
xchg
or
enter
push
div
or
dec
aam
mov
mov
lods
test
inc
push
cmp
cwde
retf
xchg
xchg
pop
inc
loop
pop
mov
sbb
sub
push
cmp
mov
jbe
and
jmp
lods
push
js
into
(bad)
out
mov
xor
add
mov
xchg
sub
adc
or
outs
ss
aad
outs
out
mov
push
jno
in
add
in
cmp
shr
test
or
out
movs
into
iret
int
cmps
jle
shl
pop
dec
jecxz
and
add
daa
cmp
mov
and
add
inc
sbb
xchg
(bad)
clc
push
add
sub
cmp
data16
jmp
mov
jmp
outs
pop
cmp
xor
mov
jns
fisttp
fsubp
xor
dec
in
movs
pop
mov
push
xor
mov
jns
cdq
or
sbb
sub
cmc
cmp
mov
mov
imul
dec
cmp
retf
sti
ror
or
inc
xor
xlat
cmp
xor
add
mov
xchg
cmc
mov
and
sub
lds
in
mov
in
imul
xor
dec
retf
push
cmp
add
push
(bad)
dec
xor
jo
push
mov
push
aas
int
icebp
cmp
adc
sub
xor
fiadd
mov
jns
sub
cmp
mov
mov
dec
aas
retf
pop
and
mov
mov
mov
push
cmp
pop
push
stc
stos
mov
and
nop
jae
mov
retf
pop
int
or
jmp
pushf
or
add
loopne
cs
sub
or
or
mov
out
mov
rcr
mov
test
out
(bad)
sahf
test
adc
adc
inc
mov
jge
mov
mov
and
cmp
enter
add
inc
loop
setb
xor
ds
cmp
out
cli
test
inc
sbb
cmp
ffreep
sub
xor
sar
add
xor
popf
lahf
mov
pop
cmc
fdivr
cmp
jbe
enter
xlat
mov
(bad)
inc
mov
jne
inc
dec
cmp
push
int
in
push
loopne
adc
bound
out
jns
push
gs
outs
retf
mov
call
and
imul
cld
mov
inc
and
cdq
imul
push
mov
nop
enter
mov
cmc
inc
iret
in
repz
adc
movs
and
pusha
mov
pop
aam
xchg
out
cmp
(bad)
xchg
in
aad
nop
and
test
inc
mov
inc
or
int3
aas
cdq
leave
fs
fs
jno
mov
mov
sub
lods
dec
pop
add
sub
sbb
iret
push
xchg
pop
inc
inc
sbb
add
ins
push
out
cmp
in
movs
iret
jae
shl
cmp
xchg
sbb
int3
sar
nop
push
and
xor
or
loope
shr
xchg
out
xchg
or
clc
cs
add
pop
sub
rcr
cli
js
cmp
cdq
and
xchg
push
and
mov
scas
mov
xor
add
jmp
add
int3
shl
stos
jp
and
iret
test
jnp
loope
mov
in
ficomp
mov
cmp
mov
rcl
xchg
test
test
cmp
shl
inc
or
sub
mov
movs
fmul
inc
addr16
retf
rcr
and
xchg
ror
inc
lods
call
add
sahf
inc
pop
neg
sbb
dec
dec
fwait
test
sub
popf
jb
nop
jmp
mov
jns
jbe
xor
push
inc
inc
pusha
xor
out
adc
stc
adc
or
ins
std
mov
xor
(bad)
pop
pop
adc
mov
shl
leave
xchg
cmps
das
fcmovne
pusha
out
imul
jnp
dec
dec
push
push
lds
xor
xchg
in
lahf
loopne
adc
jl
js
pop
add
mov
inc
dec
adc
ds
test
inc
xlat
inc
sbb
mov
sbb
(bad)
mov
and
mov
mov
add
sbb
pushf
inc
jg
iret
or
(bad)
jne
sub
pop
movs
cmp
pusha
push
sbb
loopne
test
iret
jmp
sbb
mov
pop
mov
out
mov
fsub
test
add
sbb
pop
inc
into
push
dec
inc
jne
clc
fld
or
inc
and
pop
pop
pop
adc
xchg
lock
rcl
(bad)
movs
mov
lahf
(bad)
adc
imul
xchg
push
movs
xchg
jnp
adc
lods
jb
fcomp
push
add
fadd
xlat
mov
lods
fnstcw
jo
dec
add
add
in
dec
mov
stc
das
mov
(bad)
fcmovnb
mov
jne
arpl
iret
cld
jbe
xor
push
and
dec
shl
and
push
or
push
mov
xor
adc
xor
xchg
and
and
push
js
shr
xchg
lea
dec
frstor
lds
imul
je
jecxz
(bad)
lock
cmp
jno
xchg
mov
addr16
mov
iret
push
jl
mov
test
repz
jns
and
cmc
sbb
adc
mov
cmp
xor
lods
push
mov
xchg
cwde
js
jp
dec
pop
add
and
pop
cdq
test
jmp
adc
ror
lods
div
adc
lahf
adc
mov
jbe
hlt
adc
or
loope
xchg
out
jo
pop
inc
and
into
xchg
and
retf
sbb
sub
ret
rcr
outs
cmp
outs
inc
(bad)
fistp
jae
or
mov
push
popa
mov
into
into
icebp
icebp
fld
ret
stos
lods
jge
call
pushf
add
push
cmc
xchg
retf
dec
push
or
adc
jl
pop
(bad)
and
push
or
and
sbb
xor
jb
test
pusha
cmp
loopne
mov
fmul
loope
cmps
mov
jne
gs
adc
or
addr16
pusha
iret
dec
add
ror
cmp
je
jp
add
pop
lahf
gs
pop
ffree
push
or
shl
out
cld
scas
test
in
daa
rcl
out
mov
nop
imul
fwait
add
inc
xor
mov
sbb
fisttp
push
test
dec
imul
jne
xchg
aaa
icebp
mov
mov
aaa
jnp
call
cdq
adc
sub
push
loopne
test
sub
nop
xor
cs
dec
scas
out
jno
outs
add
rol
adc
outs
ficom
jb
or
sub
and
sub
and
mov
dec
adc
dec
and
(bad)
or
push
repnz
cmp
ins
arpl
popf
push
and
mov
das
mov
cmp
sub
pmaddwd
adc
push
cmp
mov
inc
into
cmp
push
sbb
push
mov
jg
movs
mov
jg
mov
dec
pop
jecxz
jae
fnstsw
cs
xor
or
mov
ss
outs
jge
adc
jne
add
(bad)
(bad)
sbb
mov
aad
and
lahf
cmp
mov
inc
lock
fbstp
addr16
sbb
call
add
daa
mov
and
adc
cmp
and
jle
and
xor
out
retf
mov
inc
mov
xchg
adc
gs
dec
in
lock
fmul
ss
sub
cli
push
sub
mov
iret
hlt
(bad)
mov
ja
icebp
out
jle
idiv
stos
pusha
repnz
cmp
sahf
ins
dec
xchg
mov
dec
in
aaa
(bad)
scas
xor
loop
jl
push
ins
or
mov
test
rol
cwde
div
add
xchg
sub
sub
cmps
not
adc
pop
imul
fld
lds
dec
int3
stos
and
xchg
out
adc
sbb
in
add
xchg
jne
test
pop
sbb
cs
ds
in
rol
adc
add
push
push
or
fcmovnb
and
pop
pop
aaa
lahf
inc
push
test
mov
or
sub
out
cli
or
push
or
jmp
inc
test
jns
inc
mov
xchg
pop
rcl
mov
dec
add
ds
push
(bad)
push
enter
inc
ficom
dec
gs
jmp
rol
jp
popf
jno
das
into
push
pop
and
xor
scas
mov
inc
jb
dec
imul
jg
jnp
sbb
jl
adc
aas
push
leave
mov
sbb
mov
mov
xchg
mov
or
out
xchg
outs
push
jmp
pop
aas
mov
hlt
das
sub
leave
cmp
cmps
jne
jnp
mov
mov
mov
stos
push
(bad)
loopne
int3
jmp
clc
ins
pop
push
lds
xlat
or
xor
push
xchg
add
fwait
mov
scas
enter
xor
loope
test
xchg
add
retf
lds
out
jle
enter
ret
mov
ficom
out
dec
fsub
cmc
out
mov
aas
stc
rol
dec
pop
push
call
stc
pop
cmp
jmp
les
leave
mov
adc
xacquire
sub
mov
sbb
jl
mov
repnz
sbb
and
imul
fcmovnbe
push
cmps
loope
movs
(bad)
loopne
add
neg
jns
rcr
imul
mov
sub
mov
pop
cs
sub
stos
lock
inc
xor
pop
shl
std
or
inc
jne
and
ret
jle
jge
mov
hlt
dec
add
mov
dec
fs
inc
fild
neg
fs
xchg
aad
pop
popf
shl
lock
mul
dec
daa
test
jno
sub
jns
sbb
adc
mov
clc
and
sbb
loope
(bad)
sub
mov
loopne
iret
mov
inc
scas
inc
push
pop
jnp
repnz
in
dec
sub
pop
les
sbb
ret
je
popa
mov
mov
inc
dec
dec
and
out
dec
js
pushf
mov
in
sub
data16
pop
jle
das
leave
js
mov
gs
inc
loop
leave
movs
xchg
test
mov
sar
mov
mov
mov
xchg
repz
(bad)
test
retf
mov
sbb
outs
pusha
retf
stc
jae
jae
mov
fisttp
xchg
outs
stos
into
cmp
fisub
xor
sbb
mov
je
xor
loopne
ins
jge
xor
leave
lods
lods
pop
or
imul
test
and
or
adc
lods
xlat
inc
and
retf
scas
pop
xchg
in
ret
lahf
xchg
div
jae
(bad)
(bad)
push
push
loope
push
and
xchg
pop
jnp
call
ficom
xor
cmp
cld
inc
out
dec
out
fucom
ret
gs
js
mov
push
or
fldcw
scas
xchg
add
cmp
bound
repz
or
dec
xor
cdq
lahf
icebp
retf
mov
add
retf
loopne
jle
mov
hlt
addr16
sahf
fwait
mov
mov
xor
mov
jae
pop
pop
aam
std
cmp
lds
nop
pop
cli
loop
push
cmp
repnz
mov
dec
inc
sub
pusha
mov
(bad)
adc
push
mov
ret
out
push
mov
lahf
daa
outs
fistp
push
dec
jb
mov
push
or
ret
fs
xor
mov
or
arpl
adc
dec
jmp
aas
xchg
stc
pop
mov
mov
mov
(bad)
clc
jg
jnp
repnz
lods
mov
fcmovnbe
and
push
imul
inc
dec
inc
in
mov
and
clc
imul
fdiv
stc
in
mov
and
out
add
in
repnz
push
pop
cs
cld
ds
mov
stos
gs
jl
inc
in
cs
mov
xchg
imul
ret
std
push
add
inc
cmovae
push
xchg
xor
sub
aaa
add
mov
or
fsub
mov
and
fcmovnu
(bad)
fisubr
inc
jp
xor
push
push
sahf
xchg
(bad)
clc
cmps
ins
(bad)
out
aas
hlt
clc
add
test
push
(bad)
shr
out
into
mov
dec
cdq
jnp
dec
mov
jnp
pop
sbb
adc
pop
fs
repz
or
push
cmp
inc
push
dec
pushf
mov
mov
call
cmp
pop
mov
jne
cld
inc
cmp
rcl
xor
in
inc
push
pushf
push
icebp
aad
div
cmp
push
and
or
mov
xor
enter
fdivr
cli
inc
ds
pop
test
(bad)
test
es
enter
mov
jae
mov
sti
in
cmps
xor
sti
lods
jae
dec
xlat
adc
shr
cli
jecxz
enter
jle
and
pop
pop
test
je
retf
xchg
imul
sbb
test
push
lahf
sahf
(bad)
mov
cmovle
inc
ds
xchg
in
imul
pushf
xchg
imul
jno
mov
and
mov
aaa
push
mov
and
ror
rol
jecxz
jg
xchg
test
outs
pop
shr
mov
push
sbb
mov
sbb
stos
jns
dec
mov
retf
movs
sbb
cmp
push
shl
clc
mov
mov
xor
push
xchg
sbb
add
iret
sahf
mov
adc
into
cmp
mov
or
inc
dec
pop
add
cmps
xor
ret
leave
ins
and
inc
in
(bad)
jmp
or
or
jo
outs
retf
cmps
mov
push
loopne
mov
cmp
add
xor
lods
cld
mov
push
xchg
cmp
dec
inc
aaa
adc
pop
les
adc
adc
fistp
jne
xlat
lods
loop
test
je
call
jge
clc
call
xchg
xor
cmp
popa
je
leave
sti
sbb
rol
push
test
xor
pop
jo
test
inc
arpl
(bad)
in
jle
mov
imul
or
dec
mul
and
daa
mov
xchg
bound
sbb
aad
mov
fiadd
shr
lock
mov
push
test
inc
jp
ins
les
leave
adc
jmp
hlt
retf
cmp
jns
jo
dec
fldcw
ins
fs
imul
cmp
jnp
sub
mov
jge
and
stc
daa
cmp
test
lods
push
aas
mov
push
cmps
lea
push
ror
jnp
movs
push
sbb
fsqrt
cmp
or
ins
rol
cmc
push
pop
arpl
or
pop
push
dec
movs
and
movs
pop
scas
xchg
repz
sbb
xchg
ret
(bad)
data16
inc
jmp
or
mov
mov
xchg
ret
mov
scas
push
lea
mov
pop
lods
pushf
mov
sti
xor
jnp
xor
push
push
or
(bad)
aad
adc
cmc
imul
jle
mov
into
in
sub
mov
(bad)
cli
mov
mov
call
mov
retf
cdq
lds
jecxz
adc
mov
inc
mov
fst
push
retf
push
mov
fsubp
loopne
dec
add
out
sahf
cdq
dec
sbb
out
mov
mov
cmp
mov
pop
dec
mov
push
dec
jns
mov
scas
ds
xchg
fiadd
fcmovne
cmp
loop
test
fist
and
jnp
out
dec
clc
int
aam
and
sub
jb
inc
daa
cld
and
adc
push
ins
add
add
xchg
or
stc
idiv
int3
cmc
fnstsw
cmps
xor
jne
ror
jno
sbb
pop
stc
inc
push
xor
mov
inc
dec
sbb
inc
xor
aam
fwait
adc
sub
iret
mov
movs
jae
jo
add
add
daa
mov
dec
lock
dec
inc
out
add
sar
jbe
sub
pop
xor
inc
mov
scas
sbb
dec
mov
add
mov
aad
xor
data16
adc
test
mov
mul
mov
push
stos
mov
jo
in
add
popf
fnstenv
test
or
add
jecxz
xor
mov
sar
mov
xchg
sub
push
cmp
aaa
pop
icebp
loope
dec
dec
(bad)
xor
push
inc
add
pusha
fcomp
test
sub
jne
lods
pop
xor
dec
adc
jnp
dec
push
aas
sbb
or
out
jns
ffreep
sub
inc
mul
fdiv
cmps
movs
pop
push
cmp
pushf
jb
pop
inc
cmc
ror
sbb
xchg
mov
mov
push
stc
dec
clc
jno
arpl
aaa
inc
mov
adc
mov
cmp
and
or
bound
(bad)
cmp
fidiv
sti
aam
unpckhps
data16
inc
fdiv
lahf
sub
inc
pop
mov
pop
imul
cmps
push
jge
scas
ret
mov
mov
and
cmp
dec
call
aad
or
xor
jge
movs
jo
cmps
xchg
enter
xlat
dec
mov
dec
sar
add
add
mov
mov
in
call
sar
push
(bad)
enter
fbld
aas
add
stos
pop
div
pop
mov
es
inc
in
not
sti
(bad)
pop
push
ins
jb
dec
add
xor
mov
xchg
xchg
adc
xchg
cmp
adc
movs
(bad)
data16
dec
(bad)
mov
out
sub
ror
test
and
pop
fwait
ins
and
adc
push
or
dec
cmps
jns
fs
cmp
lds
repz
lds
push
jne
xor
mov
popa
movs
clc
pop
pop
mov
bound
add
dec
hlt
cmps
xor
icebp
jge
shrd
mov
sub
(bad)
jmp
and
cmps
or
loop
retf
in
xor
add
movs
aaa
pop
repnz
mov
leave
popa
push
sub
fs
or
outs
or
lods
inc
mov
retf
jp
add
cmp
int3
int3
xchg
popa
(bad)
xlat
fisttp
cmp
arpl
sub
or
lock
jle
aaa
push
dec
mov
dec
mov
fidiv
mov
inc
fadd
(bad)
(bad)
push
pop
dec
xor
shl
lods
push
leave
in
iret
inc
sbb
xor
ins
jns
push
mov
jno
dec
dec
stos
cwde
stos
popf
push
dec
sbb
sbb
pop
cmp
jmp
jle
xchg
fdivr
xor
stos
dec
test
xor
pop
push
sar
lds
pop
pop
in
adc
cmps
sbb
ret
stos
iret
outs
cmps
add
int3
ins
and
and
push
xor
cmp
ss
push
sub
aaa
out
sub
add
push
in
mov
mov
sub
jbe
test
div
jge
fcomip
shl
mov
(bad)
mov
fdivr
dec
pop
add
out
sti
jno
repz
inc
mov
loop
fwait
and
fsub
enter
xchg
mov
(bad)
pop
fs
pushf
test
outs
push
sub
call
inc
leave
bound
cs
pop
adc
ss
sbb
and
cmp
mov
cmp
mov
lods
out
clc
jg
fidivr
sub
out
sub
clc
or
jmp
je
outs
(bad)
add
jl
and
scas
imul
mov
pop
pop
fistp
mov
gs
ins
cmp
mov
enter
jge
mov
pop
loop
xor
jecxz
sbb
loopne
dec
pop
dec
leave
add
xchg
ss
aam
add
in
int
retf
xor
cmps
imul
leave
adc
in
icebp
sub
scas
sbb
mov
xchg
pop
outs
sbb
mov
pop
jl
sbb
mov
or
test
movs
(bad)
adc
imul
jg
mov
jbe
or
in
mov
cwde
inc
mov
loopne
dec
sub
mov
clc
fisttp
pop
push
in
sub
dec
jne
(bad)
nop
push
push
in
pop
in
in
push
xor
mov
lock
cmp
dec
push
cdq
fnsave
pop
std
scas
hlt
jecxz
and
add
lds
or
shl
(bad)
fst
clc
in
mov
pop
push
pop
(bad)
scas
xor
fcmove
add
cmps
imul
dec
call
sar
sbb
xor
cmc
cmp
(bad)
mov
outs
idiv
mov
mov
or
sti
and
cdq
xchg
data16
aad
mov
or
cdq
fsubp
movs
(bad)
mov
inc
add
adc
xchg
xchg
ds
adc
mov
mov
out
mov
or
jb
mov
inc
push
mov
xchg
sub
jo
loope
dec
xchg
(bad)
jo
push
mov
jle
xor
clc
mov
xchg
imul
imul
jmp
jl
enter
leave
mov
xchg
mov
popa
and
jae
push
cmp
scas
xor
jmp
pop
jnp
test
mov
add
sar
test
dec
inc
das
in
xor
clc
or
sti
test
sub
ins
cmp
fnstsw
pop
adc
les
or
scas
cmp
jl
push
das
push
ror
ret
jp
rol
dec
mov
xchg
and
outs
mov
and
ss
inc
push
add
mov
pop
les
outs
pop
aad
inc
mov
aam
test
sar
xchg
inc
mov
shl
jecxz
push
push
mov
ins
or
cs
scas
addr16
and
jbe
xchg
xchg
ret
adc
mov
in
nop
dec
pop
mov
test
ret
ins
mov
nop
mov
cli
movs
xchg
lahf
scas
mov
push
adc
push
pusha
div
inc
push
js
mov
mov
std
inc
jmp
jg
mov
pop
(bad)
not
out
sbb
cmp
cmps
sub
pop
out
cmps
(bad)
out
enter
nop
xchg
aas
sti
pop
adc
xor
adc
and
mov
mov
push
cs
cmps
(bad)
jmp
mov
mov
sub
push
mov
loop
xor
mov
imul
paddusw
icebp
cmp
dec
push
add
cld
inc
jo
jl
cmps
ret
push
jmp
xor
cmc
pop
mov
lods
popf
dec
mov
dec
loope
or
mov
and
mov
dec
out
pop
sub
pop
add
jno
cmp
(bad)
std
and
mov
call
inc
fidiv
fidivr
pop
cmps
pop
ficom
adc
or
ror
mov
dec
fcomp
cmp
add
aaa
test
into
loop
mov
pusha
sbb
dec
aam
int
cs
and
sahf
xchg
cli
int3
loop
cli
pop
in
mov
stos
int3
out
and
leave
mov
fdivr
addps
mov
scas
pop
loop
jno
test
sti
rol
stc
cli
jno
rcr
test
push
ja
stos
xor
imul
jbe
adc
in
sub
ss
in
adc
push
aam
jge
push
inc
jnp
cmp
mov
nop
adc
dec
loop
lds
dec
enter
sub
adc
jno
call
clc
sub
sbb
cmp
fbstp
adc
aas
into
or
lods
dec
xchg
(bad)
push
hlt
xor
or
push
jbe
xchg
and
rol
push
or
push
(bad)
loope
sub
enter
cmp
pop
adc
mov
and
stc
scas
pop
sub
test
push
mov
sbb
sbb
mov
push
add
mov
inc
mov
cmp
cwde
cmp
mov
mov
adc
call
add
je
xor
bound
mov
jae
cld
stos
mov
push
jns
inc
scas
fdivp
(bad)
xor
push
push
dec
in
push
pop
repz
mov
xor
inc
adc
adc
jno
movs
(bad)
gs
xchg
pop
add
aas
dec
pop
push
cmp
fmul
mov
sar
xchg
fidiv
xchg
mov
ins
addr16
int3
jecxz
lahf
push
xor
popa
and
iret
xchg
lds
sub
or
ss
cmp
xor
jnp
call
add
cmp
mov
movq
dec
or
mov
test
mov
(bad)
ja
and
inc
xor
je
cmps
cmp
jnp
or
and
xchg
sub
sub
dec
mov
mov
push
mov
xor
std
movs
stos
xchg
dec
add
addr16
jno
cmp
and
mov
jle
test
xchg
jb
dec
movs
ror
cmp
push
popa
fwait
(bad)
(bad)
sbb
cmc
sub
inc
mov
xchg
push
ret
sub
inc
stos
pop
jl
inc
call
inc
in
pop
sahf
retf
dec
rcr
xchg
pop
inc
xchg
inc
or
fld
outs
adc
int
in
(bad)
loopne
lock
aam
inc
or
shr
popf
jl
mov
dec
cld
aad
pop
ret
outs
push
cmp
ss
lods
inc
dec
pop
cs
in
xlat
addr16
xchg
call
sub
or
int3
fwait
outs
shr
pop
jbe
aad
rcr
enter
shl
pop
and
push
pop
sub
sar
push
ds
popf
dec
clc
sub
mov
cmp
call
jb
and
cmp
cld
out
cmp
(bad)
pop
pop
pop
add
(bad)
out
mov
std
and
xchg
popf
shl
pop
cld
pop
cmps
test
out
rol
(bad)
dec
push
dec
ins
and
pop
push
cmp
push
stos
and
cmp
mov
adc
push
cmps
stos
add
pop
push
push
jo
add
popf
(bad)
cmp
imul
push
cmp
cld
jbe
and
jge
mov
fst
add
stc
cld
inc
rol
loop
rcl
cli
push
(bad)
inc
rol
ss
out
int
mov
push
jmp
jns
test
push
fiadd
imul
push
dec
and
lock
mov
