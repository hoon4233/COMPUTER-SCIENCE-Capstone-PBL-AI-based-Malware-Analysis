sub
push
push
xor
push
mov
call
mov
call
push
mov
call
test
mov
je
push
push
push
push
push
push
push
push
push
call
test
je
mov
push
push
call
mov
add
push
push
call
call
mov
call
jmp
call
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
push
call
push
call
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
push
call
mov
push
push
push
push
call
call
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
add
jmp
lea
push
call
mov
call
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
lea
mov
mov
mov
xor
mov
xor
mov
mov
push
mov
inc
mov
call
test
je
mov
xor
mov
sub
jne
mov
mov
mov
mov
mov
push
push
push
call
add
mov
mov
inc
dec
mov
je
jmp
mov
push
call
pop
pop
pop
add
ret
mov
lea
push
mov
mov
call
mov
add
push
call
mov
call
call
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
or
push
mov
call
call
mov
and
test
mov
je
mov
mov
mov
push
push
push
xor
push
push
mov
call
mov
push
push
push
push
call
call
mov
mov
test
jne
mov
mov
push
mov
xor
mov
pop
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
add
cli
js
push
mov
push
mov
scas
shl
push
leave
pop
out
ins
cmp
mov
shr
jmp
cmp
call
sbb
add
ficomp
inc
mov
jmp
push
push
enter
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
stos
push
shl
fwait
sub
mov
pop
sub
sub
and
test
cld
mov
cmps
movs
js
sbb
(bad)
push
mov
adc
aam
into
addr16
in
pop
jnp
mov
jbe
or
mov
cmp
pusha
mov
xor
and
js
bound
dec
or
imul
cmc
and
jno
pop
mov
(bad)
fisttp
out
mov
pop
lea
mov
lock
lahf
pop
xor
bound
cs
mov
and
ins
clc
sub
mov
xor
mov
retf
and
inc
ficomp
jle
mov
add
loope
sbb
pop
test
fs
jb
retf
jnp
or
dec
lahf
ins
mov
fsub
std
jp
mov
push
pusha
dec
test
shr
pop
ficomp
pushf
and
adc
inc
scas
cmp
fs
shr
stc
dec
stos
push
inc
cwde
loop
ins
mov
cmp
dec
fmul
mov
dec
adc
imul
int3
xchg
fstp
test
jbe
dec
mov
retf
js
or
cmp
pop
fisttp
jp
sub
jo
test
mov
imul
or
and
dec
call
mov
mov
mov
cli
nop
std
or
jl
enter
jmp
sbb
pop
cmp
inc
das
mov
and
js
sbb
mov
xor
js
xchg
mov
fsubr
dec
fisubr
cmp
cmp
stc
fsub
mov
jno
or
push
cmp
push
jb
mov
mov
jnp
add
push
xor
ret
pop
retf
xchg
scas
stos
call
enter
call
sbb
inc
jle
sub
stos
js
dec
cmp
bound
mov
xor
dec
jp
jl
in
dec
test
cld
mov
dec
retf
fsubr
loope
mov
push
enter
lods
fprem
sbb
push
outs
jmp
mov
push
jae
sub
push
sub
dec
add
pop
push
sets
test
mov
and
xchg
jp
mov
ins
sahf
popa
stos
and
push
cld
mov
(bad)
leave
daa
xchg
cld
sub
jno
and
jo
xor
and
imul
xchg
ficomp
test
add
pop
add
cmp
add
and
jp
imul
jbe
jp
jmp
call
lock
mov
push
and
or
sbb
rcr
movs
js
sbb
mov
mov
bnd
cmp
pop
cwde
cmc
mov
iret
pop
lahf
mov
popa
adc
loop
mov
popf
dec
pop
outs
jae
mov
or
loopne
xor
stc
popa
jmp
sub
pop
call
repnz
pop
push
mov
lahf
sub
lds
loopne
mov
inc
push
call
sbb
pop
and
push
pop
retf
js
aad
add
retf
inc
fmul
xchg
jb
mov
outs
pop
popa
out
cmp
sbb
sub
les
loopne
mov
jp
fld
clc
inc
rcr
jo
dec
inc
mov
add
pusha
jmp
shl
call
repnz
cmp
sub
loope
sbb
jbe
arpl
inc
rcr
dec
fdivr
sub
jo
test
mov
imul
mov
and
movs
call
mov
push
sub
mov
retf
cli
nop
repnz
imul
push
jl
enter
push
jp
push
pop
cmp
inc
and
and
js
adc
shr
imul
call
repz
movs
fimul
mov
sbb
cmp
stc
fsub
jo
jno
or
push
xor
pop
imul
cmp
or
mov
mov
jnp
add
or
fidiv
scas
stos
call
enter
call
sbb
mov
xchg
js
dec
cmp
bound
mov
xor
dec
jp
jae
repz
push
test
cld
mov
inc
retf
sbb
loope
mov
inc
enter
lods
fprem
adc
push
outs
jmp
mov
push
jb
jne
mov
in
repz
jp
push
nop
test
vcvtsi2ss
sbb
scas
sbb
mov
je
stos
mov
adc
push
push
shr
not
xor
jb
pop
mov
mov
int
mov
sbb
or
loopne
in
nop
pusha
bound
inc
stos
lea
int
mov
or
sub
jno
and
jo
ss
fdiv
loop
cwde
pop
jg
movs
mov
imul
stos
pop
mov
mov
enter
mov
pop
cwde
inc
cmp
(bad)
popa
push
call
aad
pushf
dec
sbb
sti
ja
pop
into
lahf
in
cmp
ret
test
jge
sub
into
sub
test
and
xchg
(bad)
or
das
mov
xor
mov
jle
jge
aaa
dec
push
adc
fnsave
mov
fwait
add
cmp
xor
popa
stos
push
test
add
xchg
push
in
(bad)
ret
dec
sub
jae
mov
call
push
pop
ror
pop
push
add
xlat
test
mov
and
movs
jmp
shl
xchg
mov
or
sub
in
or
sbb
sbb
inc
(bad)
pop
add
jp
sub
jo
test
mov
imul
push
mov
(bad)
fwait
stos
and
nop
call
mov
bound
mov
mov
retf
cli
nop
test
sbb
enter
xor
push
pop
cmp
inc
daa
mov
and
js
push
call
imul
call
repz
nop
fidiv
cmp
cmp
stc
fsub
sbb
jno
or
push
xor
or
cmp
or
mov
mov
jnp
add
mov
in
cdq
mov
retf
xchg
scas
stos
call
enter
call
sbb
inc
jle
sub
ret
dec
cmp
bound
in
stos
dec
pop
xor
dec
jp
jbe
into
cwde
shr
xor
cli
jo
loope
mov
xchg
lahf
pop
fmul
lock
bound
pop
adc
mov
retf
jg
hlt
fwait
out
cmp
ror
push
shl
idiv
push
addr16
mov
jb
jno
scas
sbb
cmp
daa
pop
mov
imul
sub
mov
or
test
add
mov
mov
jp
sbb
das
mov
adc
mov
pop
add
pop
fld
adc
add
int
cwde
sbb
daa
(bad)
enter
add
call
test
(bad)
js
jae
mov
cmp
cmps
mov
add
ds
jne
outs
ror
aaa
or
xchg
int3
out
or
jl
or
sbb
xchg
mov
add
push
rcl
jg
dec
xchg
push
push
cmp
jmp
(bad)
jge
js
or
jne
out
push
xchg
movs
push
pcmpgtw
mov
loop
mov
jns
(bad)
call
pop
shl
cmp
pop
retf
pop
mov
fcomp
ret
mov
dec
push
mov
jl
fst
push
shr
or
xor
(bad)
or
pop
retf
jne
pop
lock
(bad)
rcr
mov
fistp
or
cli
cmps
cli
push
dec
adc
xlat
jmp
call
sbb
cmc
sub
mov
inc
sub
cmp
jne
jmp
pop
stos
clc
push
mov
push
test
jmp
retf
jnp
or
lahf
ret
les
adc
mov
sbb
jge
dec
mov
fadd
shl
data16
fdivrp
xchg
int3
dec
call
mov
out
(bad)
sbb
lea
sbb
imul
mov
and
(bad)
push
mov
hlt
mov
stos
test
std
jle
xchg
dec
xchg
cmc
cmc
sub
lahf
lahf
icebp
add
sbb
aam
rcl
scas
fmul
mov
pop
iret
pop
and
mov
xchg
mov
pushf
or
adc
cmps
mov
mov
dec
cmps
inc
outs
ja
mov
fistp
mov
fstp
mov
sbb
in
out
xchg
sub
push
dec
int
add
stc
outs
daa
enter
mov
sbb
test
mov
xor
mov
fwait
out
dec
cdq
mov
lods
scas
mov
or
mov
sub
mov
or
call
xchg
pop
push
mov
int3
in
stos
push
ds
retf
sub
mov
scas
(bad)
cli
fwait
movs
sub
add
mov
and
das
inc
mov
push
sub
gs
xlat
idiv
test
call
in
cmc
mov
and
cmc
sub
loope
out
mov
xchg
mov
ficomp
loope
test
dec
fisttp
aam
into
outs
mov
mov
cli
lods
cmp
fistp
jns
sbb
cwde
ins
stos
les
rol
out
pop
sahf
cmc
and
push
cwde
loop
ja
outs
(bad)
repz
inc
das
sar
(bad)
pop
mov
mov
or
jecxz
sub
push
adc
ins
jecxz
stos
inc
movs
and
imul
not
mov
mov
cmps
pop
les
out
lea
retf
in
xor
push
cwde
hlt
clc
cmp
aad
out
or
lds
sub
jns
inc
cmps
mov
sub
jne
mov
cmc
push
xor
neg
leave
lahf
out
mov
xor
pusha
pop
mov
sahf
aad
xchg
cmp
mov
dec
adc
daa
push
mov
mov
loop
cmp
sbb
cmps
or
clc
inc
inc
pop
fadd
out
imul
dec
test
xor
xchg
xchg
popa
loopne
xchg
mov
(bad)
mov
retf
shr
bound
adc
jp
pushf
or
ja
push
or
inc
enter
clc
repz
jnp
dec
xchg
jg
cmp
and
jae
into
xlat
cli
mov
pop
mov
test
push
sub
sub
out
cmp
sub
mov
and
jecxz
lods
cli
scas
push
cdq
sets
inc
xchg
adc
pop
mov
jmp
mov
(bad)
outs
push
jne
add
aad
sub
popa
xor
or
sbb
mov
fisttp
test
push
xchg
mov
icebp
cld
nop
out
and
shl
dec
pop
jg
sbb
mov
inc
movs
popf
mov
idiv
fdivrp
mov
cmps
mov
movs
(bad)
sub
(bad)
sbb
push
cmp
repz
fisttp
sub
pop
in
pop
and
inc
outs
mov
mov
addr16
loop
mov
mov
mov
clc
xchg
cdq
in
cmc
lods
xor
shr
cmp
and
mov
push
inc
mov
sub
pop
retf
xor
pop
jb
or
ins
pop
sbb
jne
popf
aas
lods
mov
mov
xchg
add
jle
out
mov
scas
inc
jecxz
das
popa
dec
aam
(bad)
sbb
cmp
scas
lock
sub
sbb
aas
(bad)
cli
lods
mov
dec
cmp
mov
call
cmp
scas
cwde
(bad)
imul
in
jmp
cmp
bound
in
in
test
mov
lds
sub
outs
dec
es
and
imul
stos
enter
cmp
in
mov
aad
test
loope
xchg
xlat
(bad)
cmp
movs
(bad)
push
imul
jnp
or
outs
sbb
push
sub
xlat
pop
(bad)
jnp
cmp
jmp
mov
dec
in
out
aad
lahf
pop
cmp
pop
call
retf
xlat
xor
adc
jne
or
adc
jns
mov
stos
js
pop
retf
jle
(bad)
out
or
pop
push
addr16
inc
gs
retf
add
imul
mov
dec
out
into
pop
daa
(bad)
es
in
sub
int
push
adc
inc
or
dec
adc
in
out
cmc
inc
hlt
pop
lds
adc
pop
mov
or
aad
jge
rcr
fmul
outs
jae
mov
out
sub
push
push
pop
les
sbb
mov
pop
lods
push
aas
adc
in
sub
push
dec
movs
cmp
fmul
or
ss
sbb
dec
sub
scas
jl
mov
out
fdivr
cwde
or
mov
aas
or
pop
imul
mov
sbb
pop
into
mov
(bad)
fisub
dec
in
test
popf
rcl
out
shl
ss
adc
icebp
xlat
out
fnstsw
pushf
or
mov
je
in
mov
sub
js
adc
mov
or
pop
mov
test
enter
js
inc
sbb
lea
retf
mov
(bad)
mov
mov
loopne
sbb
and
fisttp
test
imul
xlat
add
or
and
xchg
sbb
mov
call
lock
ins
mov
ficomp
push
mov
cmps
and
js
scas
mov
mov
jno
in
cld
mov
dec
lea
pop
int3
xchg
addr16
cs
retf
xchg
mov
sbb
(bad)
ds
aaa
pop
rcr
add
mov
mov
adc
fld
xchg
adc
nop
mov
div
dec
mov
pop
retf
inc
and
in
sub
sub
clc
and
inc
push
fstp
dec
in
fisub
in
cmp
jle
ret
push
fild
cmc
jmp
fmul
cs
add
enter
inc
cmp
cli
mov
cmp
or
xchg
jbe
pushf
pushf
imul
adc
jmp
add
repnz
(bad)
outs
mov
arpl
cmp
in
jg
dec
inc
inc
jnp
sub
fld
ror
pusha
dec
push
fstp
jp
daa
cdq
cdq
ss
pop
push
cwde
(bad)
xor
into
xor
ja
retf
popf
in
push
test
stc
ret
pop
retf
or
add
push
mov
hlt
daa
int3
xchg
cwde
or
jmp
sub
cmp
fidiv
outs
mov
and
addr16
in
stos
lods
jp
cmps
xchg
xchg
jo
push
push
outs
pop
jne
(bad)
cmp
push
mov
sub
das
ja
adc
jle
jle
dec
sbb
sub
jmp
cmp
push
dec
shl
mov
imul
mov
lea
mov
xchg
rol
xchg
add
idiv
psubsb
pop
or
das
rcl
sahf
iret
aad
inc
jno
adc
dec
scas
es
ds
cdq
dec
and
scas
cmps
push
ret
push
push
xchg
push
sti
lea
push
stc
sub
ficomp
leave
sti
cmp
and
sbb
(bad)
sub
call
dec
pop
push
sbb
ror
aad
inc
push
ret
add
loop
js
or
dec
mov
retf
loopne
adc
lods
arpl
mov
pop
loope
jno
mov
jmp
mov
dec
loopne
mov
push
push
sbb
mov
xor
jmp
cmp
aaa
fprem
inc
mov
jb
into
fcmove
push
and
cmp
inc
sub
inc
jbe
rcl
push
and
loopne
jae
sub
stos
mov
and
jae
jecxz
nop
retf
pop
jmp
(bad)
xchg
pop
arpl
dec
loopne
sbb
mov
cwde
mov
gs
push
mov
jno
out
jecxz
xchg
dec
add
shl
and
or
lahf
imul
out
(bad)
jg
add
arpl
pushf
push
test
xor
ret
push
pop
ret
icebp
out
sbb
fwait
add
inc
inc
and
adc
pop
nop
xor
xor
dec
test
jae
sbb
and
and
mov
push
jb
outs
std
pop
popa
ret
jmp
mov
icebp
jecxz
adc
and
push
int
icebp
bts
mov
sub
cmp
pop
mov
sub
push
and
popf
and
xor
nop
push
dec
push
pop
sbb
xor
inc
push
test
icebp
hlt
lahf
mov
inc
loopne
lock
add
xor
int3
ins
sar
jl
pop
call
mov
out
xor
jecxz
rcl
adc
mov
push
sub
jecxz
js
push
fcom
in
or
(bad)
enter
jge
popa
jle
cmp
sub
pop
mov
mov
mov
sub
outs
sbb
dec
mov
movs
and
jns
icebp
adc
test
mov
sbb
stos
or
and
add
add
and
mov
fidivr
loopne
jno
jo
adc
sbb
cli
nop
sar
and
iret
mov
inc
daa
popf
popf
add
push
push
pop
xor
stc
inc
cmc
inc
adc
push
or
push
xchg
out
jno
stc
mov
popa
shl
add
ds
and
cmp
bound
sub
leave
(bad)
pop
loopne
clc
or
adc
cmp
fist
clc
js
lock
loope
js
jge
or
mov
jae
sbb
in
xor
rcl
in
std
popa
or
xor
call
fwait
movs
iret
arpl
xchg
dec
and
outs
sbb
rol
repnz
cmps
leave
enter
arpl
enter
call
out
push
push
and
mov
xor
or
dec
aad
dec
push
enter
popf
aaa
clc
add
dec
outs
(bad)
fcmovbe
lahf
cmp
mov
jne
aaa
sub
fwait
rcr
dec
loopne
mov
scas
cwde
(bad)
mov
frstpm(287
jmp
mov
jecxz
outs
pop
mov
fcomp
jl
cmp
or
stos
cwde
jle
sub
sub
xchg
push
leave
xchg
call
mov
sbb
pop
and
sbb
aas
push
dec
aam
int
mov
fadd
call
jmp
or
xor
or
scas
js
jge
(bad)
fwait
cmp
int
scas
ds
pop
sbb
mov
js
fst
xlat
scas
mov
iret
dec
pushf
mov
pop
jae
int3
jns
xchg
cmp
pop
jbe
hlt
push
sbb
inc
ret
ret
test
mov
sub
push
push
mov
jp
dec
lods
icebp
jae
retf
dec
fs
push
sub
xchg
dec
sub
(bad)
xlat
sbb
mov
dec
cmp
mov
pop
cmp
and
pop
retf
sub
jmp
mov
mov
pop
mov
cmc
cli
into
int3
mov
(bad)
jo
rcl
xor
pop
daa
inc
add
and
loop
or
dec
dec
jae
sbb
repz
and
jno
jp
outs
mov
mov
sbb
jns
xor
ret
test
(bad)
push
inc
lds
ret
loope
mov
jne
mov
xlat
lahf
(bad)
call
jmp
push
jmp
cmovs
dec
cli
js
or
cmps
mov
in
stos
or
(bad)
jp
push
dec
enter
mov
sbb
fld
scas
enter
jmp
cmp
adc
jp
das
(bad)
push
pop
mov
jecxz
retf
add
int3
inc
imul
sbb
adc
fs
pop
sub
shr
push
sbb
push
adc
aaa
mov
fxtract
es
pop
cmp
leave
cwde
dec
imul
mov
mov
fdivp
fcmovnb
xor
aaa
or
std
push
sbb
jmp
cmp
repnz
dec
mov
(bad)
scas
enter
dec
imul
imul
fisub
adc
clc
sbb
out
fstp
test
cmc
(bad)
cmp
jmp
push
(bad)
fld
(bad)
sar
and
mov
pop
sub
popf
or
dec
or
jb
loopne
inc
outs
stos
mov
stc
aam
into
addr16
in
leave
mov
mov
fnstenv
outs
jo
sar
enter
arpl
pop
xor
dec
or
out
xor
aaa
mov
fmul
or
mov
jbe
mov
pop
sti
mov
mov
leave
cdq
pop
adc
jp
push
pop
lock
loope
dec
neg
sub
ret
sbb
mov
jp
push
mov
frstor
stc
addr16
ficom
retf
jp
mov
mov
(bad)
js
es
sar
retf
adc
pop
sub
cmp
shr
mov
mov
sub
cwde
mov
stos
sbb
cli
es
pusha
fld
mov
popf
and
mov
xor
push
jg
sub
data16
dec
repnz
jecxz
stos
inc
pop
es
sbb
inc
dec
sbb
jmp
popa
stos
enter
lods
adc
test
or
outs
and
fwait
das
xor
js
or
pop
loop
jns
repz
push
aas
nop
imul
or
mov
or
call
xchg
pop
fdiv
call
fnstcw
test
in
(bad)
lahf
xor
stos
sbb
out
shr
jno
mov
ds
movs
push
lea
retf
scas
add
int3
lock
pop
sub
sub
jnp
push
pop
repnz
repz
mov
or
gs
iret
stos
inc
jl
enter
cmp
clc
push
dec
stos
jle
sub
lds
xchg
repnz
xchg
inc
jne
iret
cmp
(bad)
pop
aam
adc
xor
mov
pop
leave
dec
mov
scas
pop
cs
push
dec
pop
pop
int3
test
mov
mov
pop
inc
push
fsubp
bound
ins
aaa
fxch
and
gs
mov
scas
dec
aam
int3
xchg
cs
popa
add
scas
(bad)
and
or
bound
jo
dec
push
rcr
ja
scas
mov
dec
data16
cld
dec
jle
pop
push
cmp
aas
add
sbb
jle
push
cmps
cmp
jno
jmp
cmp
movs
pop
dec
add
clc
out
sar
mov
sub
push
nop
icebp
push
pop
out
sub
rcl
xor
loop
jg
aad
lahf
pop
retf
repz
jnp
sbb
or
jne
enter
cs
xor
icebp
sub
movs
inc
jge
scas
cmps
cmp
mov
adc
ja
cwde
adc
ja
fcomp
cmp
iret
js
cmp
call
sbb
in
or
jmp
jmp
call
(bad)
xchg
cmp
jne
dec
add
jle
mov
sbb
dec
xor
push
movs
jle
mov
adc
xchg
out
repnz
or
repz
xchg
dec
push
push
fucomip
sub
loope
out
out
enter
call
sbb
push
inc
mov
fisubr
call
sbb
push
xlat
lods
stc
xchg
mov
fisubr
(bad)
or
ror
test
(bad)
pop
rcr
mov
cld
leave
pusha
cmp
sub
adc
add
fsubr
xor
sbb
gs
jo
pushf
add
jmp
nop
addr16
sbb
mov
daa
dec
loop
stos
push
stos
xchg
mov
(bad)
int
sbb
rol
iret
fsub
idiv
inc
aaa
xlat
daa
mov
jne
lds
mov
pushf
push
pop
cdq
add
xchg
cmp
adc
(bad)
div
mov
and
push
xor
js
sub
adc
(bad)
mov
fmul
mov
jmp
aad
xor
fcomp
cmp
in
clc
cmp
mov
clc
sbb
addr16
mov
sbb
jno
idiv
inc
cmps
pushf
pop
arpl
adc
shl
(bad)
mov
(bad)
and
lds
mov
aaa
mov
ror
out
cs
push
dec
cwde
xchg
jmp
or
stc
pushf
jmp
jl
fstp
das
dec
repnz
pop
in
mov
in
or
mov
cmps
push
out
cmp
dec
ss
add
jne
cdq
(bad)
push
addr16
sub
sub
sub
push
out
sbb
ins
inc
cmp
mov
sbb
in
std
cmps
mov
mov
dec
test
fadd
and
pop
cmp
adc
push
mov
outs
mov
push
retf
adc
inc
(bad)
movs
(bad)
(bad)
stos
sbb
popf
sbb
xchg
adc
sub
movs
test
(bad)
mov
mov
xchg
adc
div
dec
sbb
xor
mov
pop
mov
jl
outs
sub
cmp
xchg
ds
int3
xchg
xchg
ret
cmps
ss
jne
or
outs
stos
inc
outs
mov
call
or
xlat
cmc
cli
sbb
pop
and
add
scas
test
out
dec
mov
daa
(bad)
adc
add
mov
cld
push
jne
adc
xor
into
call
mov
xchg
cs
addr16
push
cmp
mov
rol
cli
cmp
dec
sub
jle
pop
shl
ja
sbb
xchg
pop
pop
and
and
adc
jle
dec
daa
mov
aaa
clc
push
in
xchg
iret
aad
jecxz
shr
jb
lods
(bad)
out
das
xor
frstor
cmp
loop
or
and
adc
out
cmps
push
push
ins
sub
or
mov
push
jmp
mov
sar
enter
arpl
xchg
mov
fmul
test
fsubr
add
add
xchg
jbe
inc
mov
inc
pop
push
mov
xchg
pop
xchg
inc
mov
mov
(bad)
xchg
mov
xchg
or
push
(bad)
(bad)
mov
push
dec
pop
jp
xchg
dec
repnz
cmc
pusha
sahf
inc
jge
lahf
pop
(bad)
in
cmc
mov
rol
jmp
xchg
ficom
addr16
dec
jo
sbb
xor
or
(bad)
aas
sbb
xlat
dec
sub
cmc
test
or
xchg
cli
mov
ja
inc
push
callw
cmp
dec
push
aam
and
xor
into
jg
pop
xlat
aaa
or
out
xor
call
inc
addr16
or
cmps
mov
movs
inc
je
js
sub
mov
pusha
stos
aaa
xlat
loopne
gs
cwde
int3
dec
inc
mov
cmps
xchg
call
sub
pop
cmp
ins
aas
aad
or
jecxz
cmp
or
mov
sbb
pop
cs
or
push
aad
sti
cmps
inc
in
js
hlt
mov
pop
xlat
icebp
mov
sbb
addr16
mov
call
js
in
xchg
jne
hlt
mov
push
enter
dec
pop
or
mov
push
gs
jle
outs
cmp
inc
shl
loop
xchg
and
jmp
mov
push
mov
jbe
in
sub
xor
mov
and
leave
sub
push
shl
adc
xor
jmp
(bad)
xchg
jl
or
cmp
loop
lahf
or
xchg
ds
inc
fild
cwde
pop
daa
(bad)
call
xchg
imul
push
push
jne
test
push
dec
xchg
idiv
lea
shl
clc
xchg
add
mov
js
ficomp
push
dec
lds
(bad)
lea
mov
fcom
mov
retf
js
cmp
cmp
sbb
xor
pop
sahf
out
test
std
sahf
mov
jmp
scas
add
popa
outs
(bad)
push
sbb
fcom
int3
jb
inc
push
aam
js
fistp
push
gs
pop
sub
cli
retf
push
cs
ja
mov
sbb
outs
pop
cli
xor
jo
mov
inc
enter
movs
test
das
dec
sbb
pop
mov
lahf
nop
inc
jge
xchg
xlat
push
dec
stos
clc
push
push
mov
int
cwde
bound
dec
sbb
in
jne
not
fmul
mov
cmps
arpl
sub
ja
into
sub
add
call
sbb
sub
(bad)
stos
lea
sar
jmp
or
shr
aad
retf
aad
cmp
dec
iret
sub
mov
jp
jg
in
dec
clc
sahf
mov
(bad)
cmps
jl
or
push
test
dec
call
adc
cmc
mov
sbb
xchg
jne
and
mov
ret
pop
inc
retf
xchg
adc
sub
and
imul
xor
fcom
rcr
add
mov
adc
sar
retf
pop
adc
rol
and
lock
and
jae
sar
jecxz
repz
sbb
inc
call
icebp
sti
daa
std
in
in
jo
add
cmp
cmp
iret
dec
cmp
ins
out
cmp
pusha
repnz
xor
jge
push
arpl
dec
sti
je
sbb
cs
and
rcr
cmp
pop
xor
sar
jae
aad
xor
lock
dec
pop
pop
xor
aaa
mov
cmp
outs
addr16
ss
aad
rcl
jno
lahf
not
inc
or
fwait
jecxz
in
push
mov
dec
sbb
add
mov
loop
mov
aad
inc
pop
lods
inc
popa
jg
das
or
std
iret
mov
pop
fs
ret
(bad)
mov
cmps
popf
push
in
mov
xor
mov
mov
in
jp
hlt
call
out
add
dec
pop
ds
dec
mov
nop
add
push
(bad)
js
movs
mov
js
sbb
push
inc
pop
aam
arpl
das
or
lods
test
jecxz
repz
mov
inc
movs
jp
mov
test
mov
bound
imul
mov
and
repnz
xchg
pop
pslld
inc
lds
add
cli
addr16
jb
pop
stos
xor
push
lea
push
rcr
push
popa
mov
add
mov
in
test
mov
loope
call
fstp
and
push
and
mov
add
jne
and
fldenv
loop
cmp
mov
test
ins
dec
imul
sub
daa
retf
mov
int3
sub
pop
cmps
out
int
pop
fimul
jl
pusha
(bad)
fimul
xchg
js
push
mov
aas
js
fisub
mov
out
sub
sbb
addr16
retf
daa
outs
(bad)
imul
sbb
add
sbb
retf
jp
or
or
jp
daa
enter
arpl
adc
dec
sbb
and
and
js
sbb
ret
or
loopne
rcr
jno
push
push
(bad)
xchg
movs
js
sbb
rcr
shrd
jae
fs
fld
and
push
push
xchg
in
push
sar
mov
and
xchg
sbb
imul
outs
cmp
ret
movs
fist
fistp
inc
aam
mov
lea
xchg
div
ret
ret
test
ret
addr16
outs
cmp
dec
movs
mov
mov
test
cmp
xchg
cmps
and
pop
test
jmp
mov
stc
add
adc
jns
pushf
push
ficom
xchg
xchg
pop
pushf
add
shr
pop
fmul
push
jge
fcomp
in
or
cmp
xchg
rol
imul
fstp
dec
outs
out
pop
int
sub
clc
das
mov
jno
pop
(bad)
ror
xchg
ja
or
sbb
and
fsubr
mov
clc
gs
jle
ds
sbb
sbb
sbb
sub
lods
pop
jmp
mov
cmp
inc
push
mov
push
mov
pop
int
sub
clc
das
pusha
in
mov
ficomp
ds
dec
fwait
ja
cmp
enter
adc
cs
xchg
cwde
dec
inc
lds
or
mov
clc
xchg
shr
inc
sub
adc
scas
cmp
in
(bad)
mov
xor
jg
cmp
or
add
pop
xchg
fst
xor
pusha
sbb
adc
cmp
xchg
das
shl
loopne
cli
lea
mov
je
or
or
or
sub
fdiv
add
ja
cmps
mov
pop
xchg
jnp
mov
mov
es
std
sbb
mov
(bad)
or
xor
inc
push
std
and
pop
xchg
outs
inc
stos
pop
arpl
lods
jno
mov
sub
sbb
mov
mov
inc
dec
mov
sahf
xor
mov
mov
mov
rcr
jno
jle
add
ja
shl
loope
fcmovbe
and
mov
push
idiv
iret
popf
(bad)
inc
push
ret
pop
retf
ja
aad
or
jg
mov
or
out
lea
push
fdivr
fmul
clc
mov
pop
int
cmp
push
(bad)
push
and
cli
mov
add
mov
jge
bts
mov
xor
pop
adc
cs
xchg
pop
aam
(bad)
xlat
inc
mov
ror
cmp
push
(bad)
xchg
pop
pop
xor
out
mov
push
retf
ret
imul
cmp
xor
or
shl
daa
xchg
dec
adc
mov
and
push
in
sar
loop
add
sub
aam
inc
pop
fmul
gs
loope
pop
xchg
dec
test
mov
sub
mov
mov
popf
ror
push
xchg
xchg
std
je
(bad)
mov
into
sub
call
enter
stos
aas
cmp
xchg
fs
es
(bad)
ret
pop
test
int
das
mov
pop
aaa
inc
fxch
and
imul
jns
test
rcr
xchg
mov
(bad)
aam
arpl
fs
jecxz
xchg
std
xchg
mov
dec
pop
mov
cmps
jge
ins
sbb
in
xor
jae
adc
inc
es
stos
cli
xchg
ins
out
stos
enter
lods
pop
clc
imul
test
cmp
dec
mov
jo
not
out
fucomip
mov
cmp
pop
inc
mov
mov
jle
push
or
sub
jbe
lahf
inc
(bad)
dec
mov
fs
add
shl
cmp
pop
xchg
push
(bad)
js
adc
and
add
psrld
lea
or
out
mov
sbb
push
popa
and
mov
inc
mov
mov
sbb
aad
sbb
(bad)
loope
cmp
pop
adc
add
sbb
jns
repz
outs
test
(bad)
and
ret
mov
cmp
icebp
fstp
fistp
retf
push
mov
daa
test
mov
cmp
inc
lahf
add
push
adc
sub
(bad)
dec
enter
add
cmp
add
aam
lds
mov
pop
pop
mov
repz
inc
movs
sub
mov
jecxz
pop
cwde
outs
mov
dec
dec
(bad)
sbb
dec
jne
(bad)
push
sahf
dec
xor
add
fstp
and
mov
push
push
mov
and
aas
pop
mov
cwde
cmc
in
cmp
xchg
pop
lahf
sub
push
(bad)
xchg
mov
jge
xchg
add
or
jnp
test
dec
scas
in
xchg
mov
cmp
push
dec
pop
stos
in
push
mov
push
sub
mov
repz
cmp
xchg
dec
lea
daa
es
pop
fldpi
sub
cmp
ret
ficom
pop
dec
arpl
xlat
or
sbb
jne
mov
retf
mov
retf
dec
out
lds
test
aas
xor
adc
cdq
mov
je
mov
int3
sbb
jmp
mov
mov
cdq
cmps
sub
data16
cwde
punpckhbw
jbe
dec
adc
mov
adc
mov
in
adc
test
add
cld
mov
add
cli
nop
popa
mov
out
sar
mov
pop
fsub
add
and
and
fisubr
sbb
xchg
addr16
inc
cmp
add
dec
mov
pop
adc
stos
mov
daa
dec
call
jge
ror
inc
dec
cli
rcr
ret
arpl
hlt
popa
aad
cwde
or
dec
dec
jns
pop
mov
sub
push
mov
and
mov
lods
mov
stc
xchg
push
outs
cwde
jg
div
addr16
(bad)
adc
adc
dec
mov
stos
enter
arpl
cld
bound
cmp
jmp
icebp
out
sahf
adc
mov
ror
ja
pop
push
and
xor
dec
fimul
cmp
xchg
jle
push
xlat
jmp
lahf
mov
cmp
adc
and
shl
jge
repz
adc
in
jb
mov
lods
adc
and
mov
arpl
shl
iret
dec
or
jae
mov
xor
ficomp
fs
(bad)
jae
outs
cmps
shl
dec
sbb
adc
mov
pop
sbb
jl
or
xchg
mov
bound
and
sbb
stos
cmp
cmc
push
addr16
ret
icebp
xor
mov
and
arpl
rcr
adc
outs
mov
repnz
jmp
adc
or
push
stos
aas
addr16
cmp
jns
and
inc
das
(bad)
je
sub
cli
aas
iret
shl
(bad)
pop
fdiv
repz
loope
rcr
or
pop
dec
sbb
pop
mov
push
pushf
or
setp
pop
sbb
sub
cmp
pop
xor
mov
daa
pop
imul
add
dec
ins
ja
(bad)
pop
mov
lock
sbb
mov
movs
pop
add
and
ficom
or
cmp
pop
arpl
push
outs
cwde
push
push
cld
inc
daa
dec
ficomp
retf
xchg
scas
pusha
cwde
sbb
sub
sti
daa
enter
pop
stc
sub
mov
mov
xor
(bad)
pop
hlt
fdiv
mov
rcl
arpl
adc
ret
push
push
cmp
imul
jnp
fsubr
enter
call
or
or
lds
and
sub
mov
mov
cmp
fidivr
loopne
or
mov
mov
cwde
or
push
adc
stc
adc
imul
jno
test
movs
daa
(bad)
std
test
or
cli
xor
ret
dec
dec
adc
shl
inc
dec
movs
push
loope
sbb
sub
call
mov
pop
rol
outs
mov
cwde
(bad)
rcr
push
sub
cld
cmps
ret
push
cmps
retf
xchg
idiv
(bad)
and
fdiv
ja
cwde
pop
in
mov
mov
xchg
inc
call
mov
daa
sbb
clc
add
js
fwait
mov
scas
dec
mov
ss
xlat
sbb
shr
sub
fcomi
mov
jbe
inc
mov
sbb
mov
fild
jge
enter
mov
xchg
jg
pop
jno
test
mov
xchg
cmp
jmp
in
stos
and
pop
jnp
dec
cwde
add
pushf
sub
inc
mov
test
sti
stos
and
dec
cld
xchg
or
lahf
in
cmp
ret
push
pop
dec
xor
jns
or
into
ror
add
clc
add
imul
dec
lahf
fwait
retf
xchg
sahf
(bad)
aam
mov
push
bswap
jp
jnp
sbb
leave
test
and
ret
iret
pop
add
adc
or
pop
add
cmp
fxch
fmul
sub
lock
lea
fs
sub
mov
inc
mov
cmp
push
movs
push
pop
in
mov
or
std
or
dec
jmp
pop
add
add
pop
sbb
ds
stos
sbb
sbb
std
jmp
jecxz
jl
push
jb
dec
sub
in
jmp
pushf
mov
mov
bound
mov
push
fcomp
xlat
cmp
inc
or
push
add
clc
mov
pop
adc
fisub
pop
cli
mov
jp
pushf
jge
enter
call
pop
lock
loope
dec
out
pop
mov
xlat
ret
sbb
mov
jp
dec
mov
frstor
stc
addr16
fiadd
jmp
cmp
and
push
sbb
dec
sar
retf
pop
sbb
cmp
shr
mov
mov
sub
cwde
mov
test
cli
es
pusha
call
enter
call
sbb
or
jg
sub
cmp
repnz
jecxz
stos
mov
es
sbb
inc
dec
sbb
jmp
popa
stos
enter
lods
adc
test
enter
and
fwait
cs
js
or
pop
loop
jns
repz
push
aas
nop
push
inc
or
mov
or
call
xchg
pop
fdiv
mov
jle
test
test
(bad)
lahf
xor
stos
sbb
jmp
cmp
add
dec
fdivr
das
loopne
pop
in
icebp
cmp
xchg
in
or
or
cli
daa
xor
mov
in
test
add
rol
scas
xor
xchg
push
repz
dec
gs
mov
call
sub
das
je
adc
mov
and
or
mov
call
sub
pop
daa
inc
arpl
mov
stos
cwde
jle
sbb
pop
xor
test
xlat
in
mov
fcmovnb
sub
jmp
or
pusha
rol
or
jmp
and
popf
xchg
or
push
xchg
sub
add
jmp
push
add
jp
mov
pop
hlt
pop
imul
jns
ficomp
scas
pop
call
mov
mov
add
cdq
inc
aad
clc
mov
addr16
fistp
push
enter
inc
mov
push
pop
ret
test
push
nop
fucomp
cmc
dec
jmp
ret
retf
xchg
inc
add
ins
sti
cmp
dec
daa
fldcw
clc
mov
sub
retf
test
or
pop
xor
or
fisub
xor
pop
in
clc
cmp
xchg
cwde
imul
das
std
mov
inc
mov
sbb
pop
into
jge
test
movhps
jae
aad
jo
inc
ja
fadd
xor
dec
movs
mov
xor
gs
daa
ja
cwde
push
test
inc
push
xchg
ficom
jmp
jmp
into
out
enter
call
in
sbb
(bad)
jno
fistp
pop
mov
sub
lods
dec
or
inc
lds
inc
call
frstor
aaa
pop
fwait
dec
fmul
test
in
lds
push
xor
xchg
out
in
cwde
push
mov
fcomp
ins
(bad)
push
sbb
jl
xchg
mov
push
das
outs
mul
mov
pop
sub
out
retf
mov
adc
lods
push
cmp
cwde
daa
shl
mov
lea
in
sbb
pop
retf
inc
cmp
mov
push
dec
mov
(bad)
dec
test
jbe
mov
rcl
push
(bad)
xchg
iret
and
sub
xchg
in
xchg
fcomp
pop
fisubr
push
or
in
lock
xlat
mov
inc
int3
ror
jmp
out
aad
cmp
xchg
sub
pop
out
xlat
mov
ret
pushf
push
movs
jp
out
mov
call
retf
ins
dec
sbb
out
sub
clc
jb
sbb
(bad)
retf
ficom
scas
jl
out
pop
mov
fadd
outs
cli
jnp
add
mov
fldcw
cmc
jmp
jne
inc
pop
add
dec
enter
mov
push
lods
adc
add
cmp
or
xor
cdq
jb
and
test
dec
push
call
cmp
cdq
mov
ret
jmp
dec
cmp
in
fidiv
fild
jp
or
sbb
push
(bad)
stos
fs
sub
stc
ds
xor
cmp
jns
push
xor
xchg
or
or
loope
sub
dec
dec
push
and
mov
mov
out
mov
pop
lea
mov
lock
lahf
pop
xor
bound
adc
jmp
or
xor
mov
retf
and
and
sbb
mov
add
loope
sbb
pop
test
gs
add
pushf
xchg
jp
or
dec
lahf
ins
mov
fsub
std
jp
mov
cmp
dec
test
shr
outs
ficomp
cdq
xor
rep
or
stos
and
push
bswap
jp
movs
(bad)
sbb
pop
test
push
stc
cmp
int
or
fld
mov
add
leave
and
pop
clc
xchg
mov
fsubr
and
adc
cmp
cmp
stc
fsub
sbb
or
push
add
pop
cli
push
jb
mov
push
stos
and
jnp
add
add
cdq
mov
retf
xchg
scas
stos
call
enter
call
sbb
or
sbb
mov
push
js
dec
cmp
bound
mov
xor
dec
jp
dec
mov
test
cld
mov
jo
push
cli
mov
loope
mov
int3
enter
lods
fprem
and
push
outs
jmp
mov
push
jae
sub
push
adc
add
pop
push
xor
ret
or
pop
and
sbb
mov
mov
fadd
xchg
mov
or
cmp
sub
sar
or
cmp
pop
mov
sub
jo
test
mov
imul
add
sar
stos
and
sub
sbb
or
cwde
loop
cmp
sub
fidiv
int
sti
sbb
push
jl
enter
mov
push
sbb
cmc
sub
cmp
pop
and
jno
jmp
stos
aaa
lods
fdiv
movs
imul
sar
inc
loopne
sahf
retf
jns
ins
push
sbb
sbb
cdq
inc
daa
dec
pop
sub
xchg
mov
ret
mov
mov
sbb
mov
(bad)
loope
in
cmc
in
retf
mov
push
sub
adc
sbb
out
fdivr
sub
dec
bound
jg
movlps
mov
out
mov
fs
inc
scas
sbb
jbe
ret
repz
test
mov
clc
addr16
mov
mov
or
and
dec
mov
in
cmc
mov
push
or
or
sbb
xchg
mov
sbb
aas
and
sbb
jae
fistp
mov
fadd
ja
sti
push
int
xor
push
pop
aad
test
dec
mov
xor
in
push
sbb
fisttp
aaa
(bad)
cmps
sub
je
(bad)
push
sub
fild
add
pop
retf
inc
mov
fsub
call
dec
fsubr
test
jnp
push
pop
sbb
push
retf
jo
into
shr
and
cmp
xchg
lea
jl
pusha
cwde
test
add
sub
xor
jne
mov
fadd
call
cvtdq2ps
sar
jnp
push
xor
xchg
lods
js
retf
gs
or
push
int
add
mov
pusha
test
out
sub
sbb
add
pop
shr
and
xor
cmp
mov
cmc
lods
cmp
jge
sahf
ror
bound
pop
cdq
mov
jg
add
imul
dec
lahf
fwait
retf
cmp
data16
and
and
fcom
ja
jo
jl
xor
adc
push
mov
sbb
mov
jp
inc
mov
frstor
stc
data16
fiadd
mov
inc
mov
pop
cmp
and
push
sbb
dec
sar
cmc
adc
pop
cs
pop
(bad)
shr
mov
mov
sub
cwde
mov
xchg
sbb
cli
es
pusha
call
enter
call
sbb
or
jg
sub
pop
js
dec
repnz
jecxz
stos
clc
pop
es
sbb
inc
dec
sbb
jmp
popa
stos
enter
lods
adc
test
int3
cmp
outs
and
fwait
sub
cli
js
or
pop
loop
jns
repz
push
aas
nop
push
stc
ror
dec
mov
or
call
xchg
pop
fcom
call
fnstcw
cmp
sub
lahf
xor
stos
pop
and
or
mov
sub
jp
das
loopne
pop
in
icebp
cmp
mov
or
push
stos
or
mov
dec
arpl
pop
cli
mov
cmps
imul
imul
mov
fsubp
das
jle
mov
(bad)
cmp
fbld
movs
stos
dec
push
imul
out
or
pop
push
repnz
test
fimul
xor
add
retf
and
leave
mov
add
mov
inc
xchg
jmp
sti
cmp
outs
push
enter
stc
div
add
lds
or
cli
js
not
cmp
jp
mov
jmp
das
mov
and
in
(bad)
sub
sub
jle
not
cmp
outs
test
or
stos
pop
in
lds
fbld
(bad)
fmulp
aam
(bad)
out
xlat
pop
inc
call
jmp
mov
sahf
push
scas
cli
js
rcr
in
sbb
mov
pop
lods
cmp
mov
rol
bnd
sbb
push
ret
cli
or
adc
and
ror
pusha
call
or
push
aam
jmp
ficomp
and
jmp
scas
repnz
cli
add
cmp
dec
call
add
mov
cmp
lahf
arpl
adc
stc
inc
adc
scas
sub
push
mov
jae
mov
xchg
xor
pop
adc
scas
pop
call
jecxz
xchg
pusha
and
inc
(bad)
mov
or
jmp
sbb
inc
dec
push
aaa
lods
lods
adc
sbb
push
push
cmp
iret
test
gs
repz
arpl
nop
shrd
xchg
push
dec
retf
dec
jno
shl
xchg
test
cmp
inc
movs
pop
jno
inc
adc
repz
or
jo
out
pop
idiv
inc
lahf
shl
pop
mov
jo
push
popa
cmp
icebp
dec
jle
inc
js
(bad)
dec
les
leave
jnp
mov
clc
pop
xchg
mov
int
and
cld
sub
mov
sbb
xchg
mov
sbb
stos
add
cwde
icebp
pop
das
jno
icebp
retf
pop
and
aam
scas
or
stos
inc
jmp
out
pushf
mov
cmc
test
test
cmp
sar
stc
cmp
xchg
mov
jb
push
jg
popa
outs
enter
or
cdq
add
pushf
(bad)
in
stc
jmp
test
jmp
pmulhuw
fsubr
pop
fistp
ja
test
mov
or
mov
mov
sbb
inc
cmp
lahf
or
loopne
les
inc
jecxz
arpl
test
sub
int
into
(bad)
cmp
xor
hlt
es
and
test
mov
call
jo
xchg
je
mov
stc
jp
push
sbb
pop
clc
jle
jae
xor
push
gs
xchg
stos
cmp
mov
mov
or
cmp
in
enter
inc
imul
add
pop
mov
call
mov
dec
jae
xor
inc
add
or
sub
push
and
or
sbb
xor
push
call
and
arpl
sar
or
cwde
loop
cmp
mov
cli
nop
fimul
mov
into
sub
or
mov
dec
sar
popa
pop
cmp
inc
or
and
js
cmp
shr
imul
call
repz
outs
fcmove
retf
fucomi
loopne
sbb
mov
fsub
lods
sbb
or
push
add
push
jb
mov
mov
jnp
add
dec
mov
cwde
jecxz
cdq
mov
retf
xchg
scas
stos
call
enter
call
sbb
or
sbb
mov
xchg
dec
cmp
bound
mov
xor
dec
jp
pop
mov
cwde
ds
cld
mov
push
jmp
cmp
lods
fprem
cmp
push
outs
jmp
mov
push
jae
sub
push
push
stos
jmp
push
xor
sub
jns
and
pop
jmp
rol
xchg
mov
or
iret
sbb
fs
mov
into
jnp
mov
jo
js
and
mov
or
xor
pop
cmp
jmp
jge
dec
cmps
leave
iret
cmps
icebp
aas
xchg
ja
jo
pop
lds
sbb
xor
pop
(bad)
aaa
cmp
xchg
sbb
mov
add
int3
mov
push
mov
clc
loope
jg
pop
in
imul
push
jae
jmp
(bad)
and
mov
stc
sub
(bad)
scas
loop
pop
mov
(bad)
pusha
adc
sti
push
sbb
jle
mov
jl
pop
(bad)
mov
out
push
push
(bad)
std
test
jge
cmp
or
sbb
inc
push
pushf
inc
call
dec
adc
cmps
mov
or
sbb
push
cmp
sbb
push
dec
imul
pop
cli
cmps
frstpm(287
jmp
adc
xlat
stos
mov
cwde
movs
leave
(bad)
stc
cmp
call
sub
jge
bound
jl
stos
clc
or
pusha
(bad)
push
sbb
dec
mov
(bad)
pushf
xchg
div
in
lods
lock
mov
pop
daa
pop
mov
sbb
and
push
sbb
adc
lods
jecxz
inc
inc
cmps
push
pop
cmp
mov
rcl
fstp
mov
jecxz
and
cmp
ins
pop
sbb
call
(bad)
call
push
outs
in
cmc
ins
jg
cmps
shl
retf
in
cs
pop
in
out
mov
and
lods
jp
xchg
int
cdq
add
sahf
xchg
call
inc
mov
jge
inc
pop
adc
lods
sub
lods
fdiv
sbb
push
ds
cmps
test
js
dec
push
dec
or
out
inc
pop
fmul
xchg
or
adc
sub
repnz
dec
sub
xor
aaa
fst
dec
test
or
aas
push
jp
and
adc
adc
cmp
inc
dec
dec
sbb
adc
pop
jg
in
or
stc
cli
push
mov
fnstcw
pop
jbe
dec
push
gs
rcl
sbb
cmc
scas
or
lock
lods
xchg
(bad)
fbstp
pop
push
push
pop
imul
test
xor
sahf
xchg
cmp
into
fidiv
out
mov
push
(bad)
jp
push
sahf
addr16
jo
mov
retf
xchg
out
mov
(bad)
pop
out
xchg
ficomp
jb
jg
sub
dec
inc
lods
cmps
adc
or
xchg
and
std
or
and
and
fmul
inc
push
or
dec
fsubp
xchg
lods
aaa
jae
int
sbb
call
sbb
and
inc
sti
pop
and
mov
dec
js
fcom
xlat
sbb
ins
idiv
or
cmp
dec
stos
cmp
iret
sub
push
mov
daa
pop
xchg
rcr
jg
hlt
test
fucomip
jno
sti
or
jl
shl
data16
(bad)
pop
lods
adc
out
sbb
out
xchg
dec
data16
js
dec
call
mov
leave
(bad)
call
sets
push
cmp
(bad)
sub
stos
xchg
dec
out
ins
fcmovbe
out
mov
outs
xor
fs
xor
scas
out
mov
call
fimul
aas
movs
xchg
inc
in
jne
int3
out
dec
test
cld
aad
and
mov
pop
(bad)
fwait
mov
pop
lea
mov
pop
push
cld
push
fld
clc
jge
push
int3
out
ins
xor
aas
cmc
das
dec
(bad)
sub
xor
sti
xchg
retf
mov
iret
add
loopne
or
ins
push
push
imul
mov
push
push
or
mov
shl
enter
arpl
jo
sar
sub
push
imul
jo
or
enter
popa
ret
mov
dec
dec
clc
in
inc
jp
ficomp
inc
adc
or
in
ins
mov
push
repnz
or
xor
pop
ror
xchg
jae
adc
call
aaa
movs
shl
mov
std
je
ja
aas
lds
nop
imul
add
shr
pop
test
xchg
iret
scas
cwde
(bad)
mov
frstpm(287
jmp
mov
outs
(bad)
mov
fstp
daa
sbb
push
out
sbb
and
add
pop
pop
mov
cdq
xlat
lahf
(bad)
call
pop
dec
xchg
shl
test
jp
xor
jecxz
adc
sbb
mov
inc
mov
lea
lods
xor
inc
jmp
repz
fwait
mov
dec
imul
or
int
xlat
inc
sti
lds
mov
or
jmp
jno
mov
mov
mov
fst
sub
and
xchg
adc
sbb
mov
mov
lock
mov
ret
jo
rol
popa
shl
and
call
sbb
push
aas
mov
and
inc
in
(bad)
jne
add
inc
int3
push
(bad)
or
jle
mov
push
pushf
sahf
bound
imul
mov
pop
mov
inc
call
std
inc
cmp
push
in
adc
in
daa
dec
movs
sub
xchg
loop
out
push
inc
cmp
mov
or
sbb
fstp
inc
mov
xor
dec
adc
push
es
or
js
sbb
jns
mov
lods
jnp
xchg
cld
in
pop
push
es
(bad)
xor
outs
jmp
mov
aaa
rcl
aaa
cmp
dec
pop
cmp
sub
data16
sub
rcl
jge
(bad)
pop
cmp
ja
(bad)
mov
sbb
xchg
push
mov
jae
xor
dec
cs
push
sub
push
push
lds
add
test
popa
cmps
aaa
pop
add
pop
(bad)
mov
icebp
push
mov
jb
shl
(bad)
stos
daa
pop
fmul
aaa
or
xchg
aam
jb
sub
mov
cmp
xchg
sar
mov
or
cdq
call
cmps
push
in
or
cmp
enter
sbb
int3
fmul
sar
mov
jp
push
pop
and
sti
mov
aad
xor
nop
jmp
dec
dec
sub
mov
pop
test
jns
out
loop
cmp
inc
pop
ficomp
push
pop
push
hlt
jecxz
mov
and
jmp
sbb
sbb
cmp
lahf
adc
enter
adc
mov
repnz
outs
jg
outs
dec
fild
mov
xlat
into
les
imul
pop
int
cwde
ret
call
fisubr
repz
dec
push
dec
mov
stos
stos
and
in
sub
push
repnz
mov
adc
cmp
rol
adc
mov
sbb
jo
rol
dec
mov
adc
or
out
lahf
ja
cmp
fnstsw
pushf
mov
int
ss
repz
inc
call
or
mov
adc
inc
jnp
fstp
aad
or
pop
call
xchg
mov
sahf
call
sub
push
mov
fimul
pop
xchg
jno
out
mov
mov
mov
out
dec
mov
inc
push
fstp
aas
dec
adc
and
js
dec
adc
sub
sub
enter
mov
push
push
push
inc
cmp
ret
sahf
ror
inc
call
inc
dec
fadd
xchg
fadd
pop
leave
pop
(bad)
stos
cli
das
xor
adc
stos
or
push
arpl
int3
push
or
in
stc
mov
xor
pop
pop
arpl
loopne
(bad)
shl
mov
stc
mov
pushf
call
xchg
(bad)
js
mul
pop
xlat
jmp
sub
pop
sbb
mov
frstor
stc
data16
fisub
push
mov
inc
mov
xor
mov
ss
push
sbb
dec
rol
cmc
adc
pop
xchg
cmp
shr
mov
mov
sub
cwde
mov
xchg
sbb
cli
es
pusha
fld
mov
popf
and
mov
mov
push
jg
aad
cmp
retf
js
dec
repnz
leave
jecxz
stos
clc
pop
es
sbb
inc
mov
mov
jmp
popa
stos
enter
lods
adc
test
ins
cmp
outs
and
js
or
pop
loop
jns
repz
push
aas
nop
xchg
dec
stc
ror
xchg
or
call
xchg
pop
fdiv
call
fnstcw
cmp
(bad)
lahf
xor
or
sbb
add
dec
aam
es
loopne
pop
out
icebp
cmp
mov
or
push
push
or
mov
dec
arpl
pop
add
sbb
sub
adc
jp
jecxz
pop
ror
and
xor
dec
idiv
or
pop
mov
dec
rcr
sub
sbb
push
and
inc
inc
dec
sahf
ror
int3
ja
scas
inc
adc
mov
and
pop
dec
in
imul
icebp
xor
jnp
stos
retf
bnd
mov
movs
fcomp
pop
xchg
cmp
ret
enter
fs
sahf
scas
test
pop
inc
mov
cmp
dec
pop
shl
or
mov
sbb
cdq
xchg
push
test
loopne
loope
cmc
inc
pop
retf
and
int
inc
(bad)
imul
pop
inc
fs
cdq
lods
push
les
daa
aas
aad
xchg
div
sub
lock
cmps
push
clc
adc
test
pop
fwait
push
jns
ins
jae
(bad)
cld
stos
repnz
fwait
scas
mov
cdq
jg
jnp
jmp
fadd
and
push
pop
arpl
mov
mov
jnp
dec
inc
xchg
std
xchg
adc
mov
(bad)
xor
cdq
dec
dec
push
mov
jne
stos
dec
mov
jl
inc
rcl
adc
bnd
jge
xchg
sbb
push
aaa
mov
icebp
pop
mov
fisub
xor
inc
arpl
in
sub
mov
push
inc
jecxz
cmp
mov
aad
sub
repz
mov
mov
pop
iret
bound
rcl
sub
retf
pop
sahf
sbb
mov
stos
cli
dec
loop
adc
hlt
mov
(bad)
lods
arpl
loope
adc
enter
xchg
mov
adc
sub
push
push
shl
add
test
jp
cmp
pop
addr16
mov
xchg
inc
or
retf
leave
stos
stc
cmps
stos
and
dec
sti
ret
fnclex
stos
xchg
mov
jg
(bad)
js
dec
sub
sub
pop
xor
mov
fnstsw
imul
adc
mov
pop
mov
stos
js
hlt
gs
push
shl
or
imul
push
cmc
push
mov
test
pop
sbb
lock
push
dec
jecxz
clc
popf
std
xchg
lea
add
ja
mov
push
sbb
jl
cs
daa
leave
mov
cdq
(bad)
sar
jle
ret
and
sub
imul
lea
cmc
loope
fcom
int
cwde
or
sub
lds
and
push
rol
pushf
test
push
lahf
pop
retf
imul
cmps
test
sbb
xlat
inc
xlat
dec
mov
es
pop
fmul
shl
fs
and
fild
mov
stos
mov
fdivr
mov
neg
mov
mov
aaa
mov
pop
sub
(bad)
mov
inc
movs
or
outs
cdq
push
in
push
mov
cli
sbb
xlat
out
and
movs
fcomp
mov
cwde
or
(bad)
pop
push
sbb
jns
sub
sub
jl
enter
sbb
mov
mov
lds
movs
addr16
mov
sub
jp
fistp
mov
adc
aas
push
test
inc
fimul
inc
fcomp
inc
mov
mov
int
jne
call
and
push
pop
add
adc
jmp
xor
ins
mov
jl
aaa
dec
popf
push
xor
cmps
push
outs
sahf
ds
imul
dec
jmp
fcom
or
pop
mov
stos
push
rdtsc
jp
jecxz
pop
nop
and
cmc
jmp
and
mov
ja
jl
ret
mov
mov
or
inc
push
test
pusha
dec
mov
push
fmul
fdivr
retf
ret
dec
inc
jecxz
cmp
pop
out
push
add
test
shl
test
jmp
jmp
jecxz
test
gs
jns
nop
out
push
xchg
or
jp
xchg
pusha
xchg
pusha
mov
(bad)
mov
or
adc
enter
stos
inc
xor
ja
cwde
dec
test
push
stos
push
sbb
mov
hlt
fsubp
xchg
(bad)
cmp
mov
jp
add
out
cmp
pop
repnz
adc
jmp
cmp
inc
inc
cwde
pusha
mov
sahf
or
add
out
out
(bad)
sti
mov
sbb
ds
or
jno
pop
mov
lock
gs
ror
fnstenv
scas
push
leave
cwde
dec
ret
jg
and
sub
jno
sbb
in
lahf
push
inc
dec
adc
stc
adc
push
mov
lahf
in
cmp
ret
test
jge
sub
into
sub
stos
icebp
pop
cwde
sbb
aas
clc
xchg
popf
xchg
(bad)
or
das
mov
mov
or
jge
aaa
dec
push
adc
ffree
shl
jle
fisub
(bad)
sub
add
push
mov
fistp
cdq
cmp
or
movs
js
sbb
or
enter
sar
cmp
pop
cwde
cmc
mov
iret
pop
lahf
les
dec
mov
cmp
or
xor
cdq
jb
xor
mov
xor
mov
data16
xor
enter
call
and
ret
or
pop
and
fsubr
jl
icebp
into
mov
fadd
mov
mov
aad
sahf
sti
retf
js
or
out
ins
sbb
inc
repnz
inc
dec
push
sbb
test
mov
imul
clc
jne
(bad)
fwait
stos
and
xlat
call
mov
and
mov
cli
nop
ror
pop
sbb
push
jl
enter
je
enter
cmp
inc
add
and
js
xor
shr
imul
call
repz
rcr
loopne
cmp
mov
jp
push
in
dec
or
push
adc
pop
pop
xchg
adc
or
mov
push
jnp
add
xrelease
jecxz
cdq
mov
retf
xchg
scas
stos
call
aaa
mov
jmp
adc
cmp
inc
jle
sub
add
bound
mov
xor
dec
jp
push
mov
cld
mov
popa
retf
mov
mov
cmp
enter
lods
fprem
xor
jnp
dec
(bad)
adc
scas
add
pop
bound
cmp
into
wrmsr
leave
cs
mov
and
sbb
retf
nop
rol
out
mov
mov
jbe
pop
mov
repz
(bad)
mov
adc
jl
idiv
xor
sbb
xlat
in
retf
out
(bad)
xor
or
outs
inc
shl
inc
call
mov
mov
(bad)
push
fcmovu
mov
xor
sti
out
push
(bad)
popf
jge
aaa
call
mov
sub
jp
dec
arpl
xchg
mov
inc
and
sub
inc
sbb
(bad)
cmp
scas
xchg
inc
jns
dec
adc
aam
cld
inc
mov
fld
cs
jg
fisub
xor
icebp
test
(bad)
jl
fst
jnp
ja
mov
arpl
or
(bad)
in
mov
addr16
sbb
jmp
lods
jnp
xor
cdq
and
test
pop
sbb
push
(bad)
in
cli
xchg
sub
or
test
sbb
mov
iret
enter
call
call
lds
or
and
or
out
xlat
inc
sub
xchg
arpl
pop
int
fadd
mov
bound
out
inc
push
or
hlt
fsubr
mov
int
fldcw
jnp
dec
adc
clc
ja
test
aas
jno
scas
or
mov
ja
test
daa
dec
arpl
cld
movs
(bad)
repnz
retf
(bad)
jns
push
xor
xchg
or
or
(bad)
ror
sbb
stc
pop
mov
push
ficomp
outs
test
cmp
xchg
pop
xor
sub
sbb
scas
mov
mov
test
mov
and
and
add
sbb
cmp
pop
push
xor
nop
jmp
(bad)
arpl
add
dec
enter
mov
je
cmp
shl
fwait
sub
push
enter
lods
out
push
sbb
cmc
push
hlt
js
mov
in
jae
cli
xchg
jmp
movs
repz
pop
les
stos
call
(bad)
dec
and
aas
stos
cmp
push
call
or
or
jmp
or
ins
call
and
xchg
or
out
mov
lods
inc
clc
cwde
inc
inc
cwde
pusha
mov
dec
cli
fistp
js
push
call
fst
ret
push
dec
jo
ret
fstp
in
jae
cli
pop
jmp
rcl
xchg
mov
or
cmp
aad
sahf
sti
retf
js
or
cmp
pop
movs
dec
lods
test
sub
jo
test
mov
imul
mov
stos
and
call
mov
les
jl
mov
retf
cli
nop
(bad)
or
sbb
xlat
push
jl
enter
xchg
jp
xchg
popa
pop
cmp
inc
push
mov
and
js
xor
inc
shr
imul
call
repz
xor
js
cmp
mov
jp
push
in
dec
or
push
adc
mov
cmp
or
mov
inc
push
and
jnp
add
adc
cdq
mov
retf
xchg
scas
stos
call
aaa
mov
jmp
call
mov
sub
jp
add
bound
mov
xor
dec
jp
push
mov
push
sar
mov
fs
or
rol
mov
mov
in
or
fidiv
dec
or
into
movs
scas
clc
pop
aaa
pop
daa
push
clc
aaa
push
xchg
mov
lods
aam
outs
cmps
and
js
or
(bad)
cld
lea
std
lods
repz
das
(bad)
cdq
add
retf
cmps
push
scas
mov
inc
into
ins
repnz
dec
xor
jb
cmp
cld
mov
lahf
aad
in
cmp
push
outs
pop
pop
xlat
bound
inc
pop
adc
aas
jne
push
inc
mov
inc
jle
cmp
mov
or
add
call
dec
lock
test
fs
int
jle
sbb
ins
stos
inc
pop
fldenv
mov
retf
sbb
sahf
cmps
jne
out
imul
mov
ficomp
mov
out
outs
jno
cmps
cdq
jns
cmp
pop
repnz
ja
jecxz
mov
pushf
sar
push
pop
xchg
or
ja
pop
mov
aad
imul
xchg
jbe
mov
lock
jp
data16
ss
in
dec
daa
sbb
cmp
out
dec
and
sub
pop
leave
stos
mov
in
pop
and
int3
rcl
push
dec
mov
les
mov
in
leave
push
retf
int
pop
xchg
stos
cmp
dec
pop
out
xlat
cmp
mov
lods
jp
jecxz
push
and
mov
outs
out
dec
or
cld
ret
(bad)
adc
and
fcomp
outs
cld
jle
mov
call
iret
sub
ficom
push
test
daa
sbb
pusha
jg
or
or
pusha
cmp
bnd
pop
retf
call
or
mov
jno
push
repnz
icebp
mov
retf
push
dec
push
inc
jbe
mov
leave
dec
lods
outs
jb
stos
sub
or
repz
cmps
or
add
push
jne
push
test
adc
mov
pop
push
jg
sub
xchg
mov
xlat
mov
push
fstp
cld
pop
int
mov
push
dec
mov
adc
cmps
dec
xchg
pop
or
pop
xchg
rcr
out
mov
adc
or
lds
xor
jecxz
mov
inc
in
and
imul
inc
fadd
fdivr
jg
js
test
mov
loop
push
popa
fisttp
repz
cwde
retf
pop
mov
repz
leave
ins
test
push
push
les
xor
jl
push
into
jmp
cmp
call
jmp
cld
aas
int3
scas
mov
xchg
cli
add
aas
push
fimul
jp
aam
cwde
lahf
mov
cmp
cmp
inc
and
sub
cmp
sub
jl
pop
movs
sbb
int
neg
or
(bad)
or
xchg
mov
sbb
dec
in
mov
mov
pop
rcl
sbb
mov
sbb
dec
jmp
xlat
daa
mov
cwde
cdq
fnsave
push
(bad)
push
int
ret
movs
jmp
out
(bad)
in
sub
inc
mov
add
cmp
add
pop
(bad)
les
push
mov
mov
aad
outs
jle
cmp
stos
and
data16
mov
inc
test
call
pop
and
fbld
mov
xlat
push
in
enter
imul
jg
ins
mov
inc
jge
cmp
cld
(bad)
ror
mov
push
rcr
push
push
mov
sbb
arpl
std
dec
and
sub
cs
and
mov
aaa
mov
mov
fcom
xor
loop
sub
mov
call
pop
daa
pop
ins
stos
test
cld
outs
addr16
push
mov
xchg
jecxz
adc
mov
jne
dec
jge
lds
pop
sub
push
push
push
ds
dec
aaa
jge
nop
sbb
lock
push
mov
inc
dec
pop
stos
lods
(bad)
cmp
out
outs
imul
push
dec
inc
inc
fiadd
aam
cmp
jl
daa
mov
outs
pop
push
dec
pusha
push
add
cmps
xor
or
ins
pop
sub
mov
imul
xor
call
sbb
jmp
cmp
enter
(bad)
inc
popf
add
popf
loop
mov
and
cwde
or
imul
(bad)
jmp
pop
ret
add
(bad)
out
sbb
or
dec
inc
adc
jne
not
sbb
stos
jmp
lods
and
mov
inc
lds
add
cli
sti
push
adc
xchg
lahf
mov
xchg
pushf
adc
xchg
jae
cmc
mov
js
mov
pop
inc
loop
js
ret
fistp
xor
and
scas
popa
das
lock
or
or
push
stc
cli
sub
cmp
loopne
repnz
les
mov
jb
fs
mov
cli
cmp
not
stos
pop
movs
mov
pop
sub
je
inc
add
dec
sar
cmp
sbb
push
cli
sub
imul
adc
sub
cwde
daa
loopne
inc
ds
xor
ret
jo
fistp
(bad)
stos
fild
fwait
cmps
mov
in
dec
mov
loope
dec
lahf
in
jp
cmp
mov
push
fst
fisttp
call
in
fisub
mov
pop
retf
dec
xchg
not
fs
(bad)
in
(bad)
rcr
push
popf
sub
fadd
test
cld
(bad)
push
iret
ror
xchg
jns
mov
dec
xchg
dec
(bad)
jmp
movs
imul
popf
fmul
cmc
mov
sbb
xor
pop
jle
fwait
sbb
cmp
dec
push
and
(bad)
rcl
std
outs
sub
add
out
dec
cmp
int
retf
jp
xchg
xchg
sbb
aad
xchg
cwde
push
jns
add
cmps
ins
mov
fnstenv
add
fild
pop
sahf
or
or
sbb
sub
sbb
pop
mov
into
test
std
das
inc
push
sbb
xchg
cli
xchg
xchg
sbb
jbe
jnp
mov
or
call
dec
enter
jle
or
add
xchg
bound
jge
fstp
enter
mov
mov
push
(bad)
int
sub
jge
test
add
jge
ins
stos
cmp
push
push
pop
pop
mov
addr16
mov
push
movs
inc
loope
or
jo
out
sub
push
inc
pusha
icebp
shr
inc
lods
aad
fidiv
pusha
outs
sbb
sar
cmps
mov
push
jnp
push
xor
xchg
cmc
adc
or
and
jmp
pop
pushf
adc
add
cmp
dec
mov
jae
adc
idiv
push
dec
imul
jl
jmp
fs
outs
push
cdq
imul
jmp
and
lods
jp
push
sbb
or
(bad)
jmp
ret
ds
(bad)
cmp
das
adc
adc
xor
movs
ds
xchg
and
jne
fcmovu
shl
(bad)
mov
dec
fptan
ins
mov
loop
pop
dec
clc
cmp
mov
test
jbe
add
cld
mov
xor
adc
push
sub
dec
pop
dec
fistp
adc
call
pop
sub
pop
aaa
in
cs
mov
in
inc
jmp
js
or
sbb
jle
sub
dec
(bad)
stc
pop
mov
cwde
out
test
mov
push
xchg
push
mov
fcmovbe
into
(bad)
push
test
ins
daa
mov
xor
mov
retf
jne
jne
sbb
(bad)
(bad)
mov
aaa
pop
fmul
adc
push
sub
mov
cli
pusha
gs
rcl
add
mov
int3
xchg
nop
pop
jle
test
dec
xchg
cmps
xor
jnp
xor
gs
mov
dec
aaa
and
test
popf
sub
outs
mov
cmps
xor
dec
int
mov
jmp
pushf
mov
test
jns
jo
out
mov
add
sahf
sbb
cld
sti
stos
enter
das
jns
loope
inc
in
mov
fstp
sub
adc
loopne
xor
out
push
mov
imul
mov
xor
jecxz
sti
lahf
dec
adc
jb
cld
das
sub
mov
dec
cdq
nop
stc
std
cmp
push
test
cwde
cmp
ror
arpl
pop
mov
jle
inc
add
test
push
or
fstp
adc
enter
and
data16
pusha
push
mov
loope
jmp
adc
push
enter
adc
outs
call
push
rol
mov
adc
mov
and
mov
(bad)
loope
sbb
leave
adc
sub
pop
ss
gs
and
mov
rol
mov
jle
cmp
ret
ret
lahf
sub
out
sbb
dec
mov
fwait
imul
push
jo
jg
push
fcomp
fimul
(bad)
pop
test
or
lahf
das
push
pop
pushf
and
adc
(bad)
cmc
mov
cmp
adc
sti
or
and
(bad)
sub
shl
add
sbb
aad
push
or
iret
jnp
(bad)
mov
std
cli
jmp
pop
mov
and
cmp
sbb
inc
sub
leave
mov
test
xor
xchg
dec
ss
jb
xor
jl
lahf
dec
push
inc
arpl
cwde
push
in
cmp
aad
fisub
arpl
push
sub
inc
stos
int
arpl
jae
mov
or
retf
inc
jmp
mov
mov
inc
jnp
fstp
aad
or
dec
jbe
lahf
enter
addr16
int
arpl
mov
or
fcmovbe
push
xor
inc
leave
jmp
cmp
sbb
adc
push
jo
cmc
push
hlt
js
mov
pop
retf
js
loope
sbb
push
dec
cmp
jae
rcr
dec
push
and
cwde
dec
sbb
or
inc
cdq
mov
and
test
push
add
retf
sbb
stos
push
mov
add
(bad)
std
enter
in
jp
xchg
sub
adc
or
or
loop
js
pop
call
aaa
jmp
cmp
pop
inc
mov
sub
add
js
cmp
sub
mov
mov
iret
or
stc
inc
das
dec
and
retf
xor
into
shr
jb
pop
push
in
and
imul
icebp
add
pop
mov
cmps
inc
cld
inc
imul
call
in
fild
cmp
cmps
or
call
xchg
pop
fsub
pushf
mov
push
test
movs
sub
lahf
xor
or
(bad)
imul
jp
das
loopne
pop
aad
cmp
mov
or
push
push
or
clc
mov
dec
arpl
pop
add
sbb
sub
adc
jp
push
pop
lock
imul
sub
pop
mov
jmp
mov
sbb
mov
frstor
stc
pop
jae
fisub
retf
adc
sub
cmp
and
push
sbb
dec
rol
leave
adc
pop
mov
neg
shr
mov
mov
sub
cwde
mov
lods
sbb
cli
es
pusha
fld
mov
popf
and
mov
push
or
jg
aad
aas
add
push
repnz
int
cmp
add
inc
test
std
inc
mov
mov
jmp
popa
stos
enter
lods
adc
test
xchg
cmp
outs
and
mov
mov
das
repz
clc
cmps
fmul
fs
adc
outs
push
mov
sub
cmp
mov
mov
and
pop
xchg
cmp
sbb
loope
cmp
mov
outs
adc
mov
mov
scas
mov
mov
push
jp
or
xchg
mov
fdivr
push
pop
jp
xchg
enter
adc
sbb
lea
enter
xor
pop
inc
dec
push
packsswb
xchg
mov
cmc
and
xor
dec
sbb
jp
xrelease
dec
jbe
push
js
cmp
and
and
and
imul
mov
mov
dec
fcom
int3
ins
repnz
pop
xor
cli
sub
gs
xor
call
sbb
sub
jno
mov
jbe
lea
lock
pusha
icebp
fs
dec
push
inc
jnp
and
nop
jmp
in
inc
movs
adc
call
loop
or
cli
js
push
mov
stc
pusha
jno
sub
loopne
and
or
stc
cmp
adc
jp
push
rol
push
js
xlat
xchg
cmp
inc
fistp
sar
jecxz
and
lock
test
sub
or
jle
jmp
add
sysret
push
jb
dec
lods
das
std
push
mov
dec
retf
js
not
adc
ret
mov
rol
pop
mov
ret
and
pop
sub
iret
xchg
enter
(bad)
cmp
mov
mov
int3
or
jae
in
addr16
and
cmp
inc
adc
fwait
inc
pop
sub
popf
ret
mov
jne
sbb
mov
xor
and
push
jae
out
xor
add
scas
xchg
jo
repnz
clc
enter
pop
inc
pusha
stc
js
lock
loope
js
jge
xor
das
dec
lahf
adc
dec
shl
clc
dec
icebp
push
and
cmp
fisubr
xor
mov
adc
mov
cmp
sbb
jmp
cmp
inc
stos
outs
mov
dec
test
mov
add
add
pop
dec
sub
ret
mov
jnp
nop
repnz
lods
jne
fidiv
fistp
mov
sbb
mov
pop
or
and
xchg
dec
pop
jb
inc
(bad)
adc
and
outs
mov
cmp
jno
test
mov
xchg
cmp
jmp
popa
mov
call
setl
not
mov
inc
sub
leave
sbb
jmp
outs
pop
aaa
ror
dec
es
imul
dec
and
sub
retf
inc
retf
js
clc
gs
lahf
sub
inc
leave
call
mov
jmp
pop
xor
mov
loopne
fmul
mov
pop
inc
jp
test
and
mov
or
cmp
dec
fcomp
sar
leave
cmp
or
mov
pop
neg
js
push
jnp
add
jecxz
xchg
mov
push
sbb
mov
cmp
push
hlt
ins
aad
sahf
inc
retf
movs
mov
call
or
mov
jbe
mov
pop
add
xor
call
ss
pop
adc
jp
push
pop
lock
imul
sub
pop
mov
xlat
ret
sbb
mov
jp
ds
frstor
stc
pop
jae
fimul
retf
adc
jp
mov
sahf
cmp
and
push
sbb
dec
rol
retf
adc
pop
mov
cmp
shr
mov
mov
sub
cwde
mov
stos
sbb
cli
es
pusha
fld
mov
popf
and
mov
nop
or
jg
aam
cmp
retf
js
dec
repnz
retf
jecxz
stos
add
es
sbb
inc
mov
mov
jmp
popa
stos
enter
lods
adc
test
cld
cmp
outs
and
das
xor
js
or
pop
loop
jns
repz
push
aas
nop
xchg
dec
cld
ror
inc
mov
or
call
xchg
pop
fsub
call
fnstcw
test
jo
(bad)
lahf
xor
sbb
ror
rcr
sbb
mov
es
pop
outs
mov
test
sbb
outs
sbb
jle
cmp
enter
clc
jp
push
cmp
stos
cmp
cmp
clc
push
sub
push
xadd
cmp
fwait
xchg
fisub
and
nop
jmp
test
mov
aaa
mov
pop
das
jb
jmp
jne
sbb
ss
add
dec
mov
mov
dec
jmp
cmc
and
fistp
out
xchg
(bad)
cmp
aam
inc
movs
call
jecxz
dec
sbb
aad
mov
inc
outs
adc
test
fcomp
jge
mov
outs
arpl
push
lds
sub
aad
ja
xchg
test
xor
enter
call
xchg
fdiv
push
std
or
mov
xor
add
popf
mov
cmp
sbb
xchg
pusha
cmp
lds
js
or
jne
aaa
add
cmp
mov
jnp
call
out
movs
inc
pop
imul
and
push
cmp
jmp
in
(bad)
sub
sub
adc
(bad)
cmp
outs
dec
fcmovbe
int
mov
adc
ret
mov
push
dec
cmp
xchg
ja
repz
ds
pop
pop
or
out
cld
icebp
test
xor
ficomp
push
mov
push
test
cmp
sub
popf
arpl
stos
jl
retf
pop
sub
adc
pop
push
imul
sub
mov
retf
or
sub
push
ret
daa
cmp
inc
pushf
mov
push
sbb
pop
adc
stos
(bad)
pop
xchg
sbb
jp
push
movs
pushf
(bad)
mov
cdq
xor
rep
or
stos
int
lahf
mov
jb
addr16
jge
outs
mov
mov
dec
push
xlat
call
mov
adc
dec
dec
push
retf
outs
add
jno
out
(bad)
xlat
sbb
jmp
cmp
inc
inc
cwde
pusha
mov
jb
fistp
js
push
call
or
or
jmp
or
ins
call
and
xchg
or
out
mov
call
dec
ror
cmp
aam
adc
fcom
call
cwde
push
mov
call
movs
push
retf
jno
icebp
retf
pop
es
retf
jno
shr
sub
mov
inc
cmp
or
mov
out
out
sub
popaw
pop
call
pop
cwde
clc
fs
fimul
sti
cmp
sbb
jno
shr
std
mov
jnp
sbb
or
imul
jge
in
push
sbb
shr
imul
call
repz
sbb
xor
loopne
sbb
mov
fsub
int3
in
dec
or
push
arpl
pop
mov
adc
or
mov
mov
jnp
add
clc
lods
mov
jcxz
cdq
mov
retf
xchg
scas
stos
call
aaa
mov
jmp
dec
sbb
inc
jle
sub
fiadd
bound
std
stos
mov
jp
and
sar
mov
adc
lods
cli
pop
adc
shl
outs
enter
lods
fprem
add
pop
or
mov
push
jae
sub
push
jo
or
mov
ds
push
push
cwde
enter
ret
or
pop
and
cli
mov
into
mov
fdivr
pop
xchg
mov
or
cwde
aad
sahf
sti
retf
js
or
out
ins
sbb
inc
mov
dec
xor
jo
test
mov
imul
push
stos
and
pop
or
cwde
loop
cmp
sub
mov
retf
cli
nop
lods
or
jl
call
jle
fwait
lahf
sbb
pop
pop
mov
jp
and
sub
pop
popf
pop
xor
clc
lods
std
pop
push
test
shl
lock
sub
jge
enter
pop
mov
push
aad
xchg
ror
aam
dec
jmp
cmp
rcr
mov
dec
dec
mov
fnsave
sub
jmp
scas
pop
ja
lahf
sub
cmp
sahf
pop
fadd
call
sbb
sub
mov
sbb
popa
pop
imul
jne
mov
test
retf
lods
inc
sbb
mov
xchg
sub
push
sub
xchg
or
and
(bad)
mov
adc
into
les
push
clc
pop
and
push
lds
inc
push
pop
es
cli
repz
aam
(bad)
pop
enter
in
xchg
jne
aaa
in
jle
cmp
es
cmp
sbb
jmp
sub
fidivr
xchg
sbb
jns
mov
push
xlat
pop
js
aaa
stos
cmp
sub
outs
loop
cwde
shr
arpl
push
movs
retf
cmp
fnstcw
aam
ds
push
fdiv
pop
push
inc
jp
and
imul
inc
adc
pop
in
push
jne
out
xchg
xchg
or
cmp
lahf
cmps
into
sbb
call
int3
or
dec
cmp
imul
or
dec
jno
push
push
(bad)
push
bound
(bad)
rcl
pop
mov
and
mov
push
cdq
xor
ror
into
sub
cmp
add
das
loope
aaa
mov
test
inc
sub
push
xchg
jecxz
js
or
(bad)
stos
(bad)
xlat
jmp
jo
das
test
cmp
lds
jl
or
push
inc
aaa
(bad)
scas
xchg
pop
mov
mov
push
jb
sub
cmps
xor
cli
sub
cwde
xlat
lods
cmp
sub
rol
inc
and
js
jg
sbb
mov
sub
mov
or
and
fcom
jmp
cmp
aaa
pop
fldenv
pop
imul
test
xor
arpl
retf
xchg
dec
(bad)
(bad)
pop
popf
psubsb
loope
sbb
pop
enter
dec
add
jecxz
xchg
fnstcw
or
add
cmp
fwait
imul
xor
(bad)
pop
xlat
jmp
sub
pop
sbb
sub
xchg
jl
add
pop
or
jno
xchg
push
call
test
mov
mov
bound
jbe
mov
sbb
push
aas
out
cmp
pop
sbb
ds
ret
sbb
sbb
std
jmp
jecxz
jl
push
jb
dec
sub
jl
lea
fcom
stc
leave
clc
das
dec
sbb
test
xchg
scas
sbb
mov
inc
stos
lea
jae
mov
(bad)
loop
cli
mov
sub
test
jg
(bad)
and
pop
push
adc
jnp
push
pop
adc
cmp
cmp
sbb
adc
jbe
cmp
rol
stos
add
leave
push
aas
mov
push
xchg
stos
cmp
or
fisttp
aaa
(bad)
cmps
sub
cs
dec
cwde
shr
xor
push
jno
cmp
enter
push
mov
in
or
jg
aam
add
retf
js
dec
repnz
mul
cmp
add
test
std
inc
mov
xchg
inc
fbstp
jmp
popa
stos
enter
lods
adc
test
cwde
cmp
outs
and
sub
cli
js
or
pop
loop
jns
repz
push
aas
nop
xchg
dec
cli
ror
push
mov
or
call
xchg
pop
fdivr
call
fnstcw
test
cwde
sub
lahf
xor
sbb
jmp
(bad)
imul
jp
das
loopne
pop
jmp
dec
pop
sbb
mov
call
or
clc
mov
dec
arpl
pop
add
push
push
call
ss
cmp
call
pop
lock
imul
sub
pop
mov
in
ret
sbb
mov
jp
jmp
pop
jae
fcmovb
retf
adc
jl
mov
jp
mov
push
and
push
sbb
dec
rol
int
ficomp
push
or
mov
enter
sbb
xchg
out
loop
lds
lea
das
cmp
inc
sub
mov
and
loope
pop
fld
xchg
iret
call
(bad)
sbb
cmp
icebp
add
popf
rol
clc
imul
push
mov
push
rol
stos
ins
jmp
sar
aaa
pop
fadd
bound
das
add
cdq
mov
(bad)
jecxz
push
pop
cmp
mov
shr
cmps
mov
push
vhaddps
pop
fisub
adc
adc
cmp
pop
pushf
dec
clc
test
retf
mov
scas
stos
cli
js
or
pop
jb
mov
fcomp
sbb
inc
inc
fidiv
retf
js
test
fcmovnb
lods
hlt
and
js
addr16
ja
outs
mov
mov
push
xlat
mov
mov
dec
sub
push
xchg
xchg
iret
pop
div
fsub
ins
jno
movs
pop
mov
sub
fwait
or
test
add
in
pop
mov
or
idiv
add
pop
sub
retf
stos
sti
xchg
loope
sbb
push
shl
lahf
aas
jno
scas
or
mov
ja
test
daa
dec
arpl
cld
movs
(bad)
repnz
retf
rcr
pop
pop
xchg
jecxz
fs
imul
es
jne
inc
(bad)
sbb
repnz
or
mov
mov
dec
(bad)
push
sbb
pop
ins
jmp
popf
dec
out
imul
push
in
fwait
inc
cmp
ja
adc
out
inc
push
push
or
cmp
pop
imul
sti
push
push
pop
lahf
cmps
push
add
and
jne
push
sub
dec
movs
push
dec
in
push
nop
mov
sbb
int
inc
xor
mov
adc
jl
and
test
lods
xchg
xchg
add
push
sub
cmp
sbb
sbb
jmp
outs
jns
fnstcw
mov
pop
mov
imul
mov
mov
fdivp
into
(bad)
inc
dec
cmp
mov
mov
clc
data16
mov
ficomp
push
retf
mov
pop
fcomp
ds
loopne
cwde
test
inc
xchg
xchg
dec
xor
sbb
mov
jbe
mov
stc
mov
out
cld
jmp
js
test
xor
add
xchg
push
dec
cwde
dec
imul
sub
and
ins
sub
pop
arpl
mov
enter
stos
mov
fimul
sub
aas
mov
mov
bound
sti
push
int
loopne
or
jmp
jmp
pop
xor
neg
call
adc
pusha
nop
repnz
mov
retf
dec
dec
sbb
or
inc
cdq
pop
add
icebp
push
xchg
shl
cdq
fisubr
mov
jecxz
cmp
neg
idiv
or
(bad)
fisttp
push
mov
sbb
push
call
ss
push
adc
jp
push
pop
lock
imul
sub
pop
mov
xlat
ret
sbb
mov
jp
pop
mov
frstor
stc
addr16
fidivr
push
mov
inc
mov
fidivr
mov
aaa
and
push
sbb
dec
rol
retf
pop
ds
pop
clc
shr
mov
mov
sub
cwde
mov
test
cli
es
pusha
fld
mov
popf
and
mov
push
or
jg
aam
cmp
retf
js
dec
repnz
retf
stos
pop
pop
es
sbb
inc
mov
mov
jmp
popa
stos
enter
lods
adc
test
sub
outs
and
cs
js
or
pop
loop
jns
repz
push
aas
nop
xchg
dec
inc
or
mov
or
call
xchg
pop
fsub
pushf
mov
push
test
les
(bad)
lahf
xor
sbb
jmp
(bad)
imul
jp
das
loopne
pop
in
icebp
cmp
mov
or
jmp
mov
popf
mov
idiv
mov
in
push
sub
addr16
sub
inc
push
lock
pop
imul
mov
pop
push
cmp
in
addr16
ja
outs
mov
cwde
xchg
xchg
ror
mov
jecxz
repnz
push
mov
out
push
int3
out
bound
cmp
shl
in
xchg
inc
repnz
lds
push
and
sub
mov
call
mov
or
sub
pop
test
xor
mov
fisubr
in
inc
ret
es
sahf
call
scas
pop
fidivr
mov
call
or
sub
fcmovne
push
mov
mov
and
xchg
dec
arpl
cmp
fist
xchg
and
cmp
or
sbb
jl
sub
dec
cld
dec
clc
outs
pcmpeqd
shl
push
mov
mov
sub
or
mov
inc
push
push
dec
int3
icebp
mov
cmp
lds
sahf
aad
xchg
fistp
or
into
movs
mov
fadd
call
fisttp
cmps
or
sbb
push
mov
mov
dec
int
clc
dec
or
mov
sub
mov
cmp
pop
and
jae
(bad)
fisubr
and
retf
mov
idiv
(bad)
movs
mov
daa
push
stc
mov
jmp
test
cmp
ins
pop
pop
out
jmp
pop
imul
or
xlat
mov
fadd
call
cdq
cwde
das
sub
popf
stos
sbb
push
cli
xor
add
dec
sbb
outs
pop
stos
mov
mov
cmc
adc
inc
jmp
adc
and
adc
(bad)
xlat
push
sbb
shl
jae
dec
xchg
push
retf
and
jns
fcomp
xchg
mov
ror
movs
imul
sub
dec
fsubp
add
fidivr
jecxz
xchg
popa
or
into
movs
pop
(bad)
push
test
fmul
stc
test
sbb
add
ins
pop
pop
cmp
js
sub
cmp
pop
aaa
xlat
leave
call
xchg
add
ins
pop
pop
out
jmp
mov
mov
(bad)
out
pop
pushf
mov
aaa
jne
ja
cwde
cli
daa
pop
inc
add
fidivr
push
sbb
scas
test
xlat
inc
movs
pop
add
in
sub
nop
and
imul
add
mov
sub
cli
pop
imul
xchg
mov
rcr
outs
imul
add
jbe
in
mov
outs
pop
or
push
gs
cmp
push
js
daa
push
aaa
jne
int3
adc
mov
cmps
inc
xchg
jmp
iret
dec
pop
add
push
leave
mov
cdq
repz
movzx
mov
cwde
jmp
sbb
outs
pop
(bad)
mov
mov
sub
jg
jmp
(bad)
(bad)
aaa
mov
jmp
inc
cmps
dec
sahf
dec
sbb
mov
fwait
clc
lahf
(bad)
push
loop
outs
pop
bound
inc
dec
cmp
xor
or
add
gs
and
mov
add
jo
in
mov
bswap
fidivr
jecxz
lahf
iret
mov
sbb
leave
call
aas
fadd
dec
(bad)
fcmovne
mov
cmp
or
jl
enter
push
pop
mov
dec
and
loope
retf
pop
adc
cmp
daa
enter
int
adc
test
jmp
mov
cmps
cs
pop
xchg
pop
movs
aaa
mov
inc
xlat
push
(bad)
gs
cs
sbb
repnz
xchg
sbb
(bad)
movs
inc
sub
div
add
xor
retf
cmps
or
ss
(bad)
mov
jne
out
repz
cmps
lds
or
ss
stos
add
xor
aas
jno
push
fidivr
and
xchg
test
mov
mov
mov
add
jle
xlat
pop
pop
fiadd
mov
gs
dec
cld
div
inc
xlat
push
mov
ja
sbb
and
and
cmc
and
adc
scas
stos
mov
(bad)
mov
aaa
mov
add
vpackuswb
ja
add
call
pop
movs
mov
dec
ja
xchg
lds
push
xchg
ja
adc
movs
(bad)
xor
ss
out
repz
movs
aaa
add
(bad)
(bad)
aaa
xlat
push
xor
fiadd
dec
or
mov
test
dec
jns
xor
cmp
jo
movs
xchg
(bad)
gs
xchg
ja
sahf
push
push
ja
cmps
(bad)
xor
inc
pop
xchg
pop
sub
out
xor
jp
jnp
aas
addr16
and
sahf
dec
xor
test
daa
enter
imul
add
jle
dec
or
nop
xor
mov
pop
retf
std
push
gs
xchg
ja
mov
aad
retf
nop
retf
js
sub
div
push
in
movs
pusha
pop
mov
fld
mov
xchg
fwait
pop
dec
add
sahf
mov
aaa
cmp
and
xchg
add
(bad)
mov
push
inc
push
ret
out
movs
add
dec
enter
pop
aas
jl
int
addr16
sub
mov
cli
push
jae
mov
daa
enter
nop
xor
dec
test
xor
xor
add
push
xor
loop
daa
enter
fimul
mov
jmp
pop
inc
rol
xchg
mov
lahf
jl
enter
gs
dec
or
dec
jb
mov
sub
ficomp
xor
mov
lahf
(bad)
bound
test
das
or
shl
lea
pop
mov
cmc
cmp
mov
daa
dec
int
push
cmc
cmp
sub
nop
retf
cmp
or
jl
inc
pop
sahf
outs
pop
fidiv
ret
sbb
ficomp
jecxz
fmulp
dec
pop
sbb
inc
lock
pop
pushf
pop
cmp
push
pop
adc
out
pop
pop
sbb
xlat
fcmovne
pop
lahf
jl
enter
gs
cs
pop
cmp
cmp
retf
cmc
xchg
rol
and
push
xchg
(bad)
call
aas
sbb
ins
pop
pop
xor
push
adc
rcr
popa
hlt
in
push
push
dec
and
out
sar
test
mov
out
or
pop
std
mov
jb
add
push
das
sub
jo
or
pop
mov
xchg
cmp
push
js
leave
mov
imul
cdq
in
sbb
stos
ret
ret
ficomp
sub
jnp
stos
test
clc
loope
fnstsw
pop
dec
fisub
jmp
mov
aaa
xlat
leave
mov
imul
ja
pop
inc
mov
retf
cmps
xchg
jno
loop
pop
sbb
xlat
leave
mov
imul
cdq
in
sbb
stos
ret
ret
ficomp
shl
rol
mov
movs
idiv
dec
jbe
mov
sub
pop
out
sub
js
sub
iret
cmp
gs
jnp
xchg
mov
and
and
xchg
mov
jne
enter
sub
jmp
in
jo
lds
cmps
inc
push
pop
cmp
imul
dec
sbb
cmp
xor
inc
hlt
mov
pop
inc
push
cdq
xchg
mov
stos
stc
push
fst
clc
xchg
sahf
in
mov
xor
xor
loope
xchg
mov
(bad)
mov
push
gs
daa
dec
movs
mov
scas
mov
cmps
out
xchg
xchg
xchg
popa
adc
xor
div
push
stc
xchg
jne
dec
push
pop
mov
jle
sub
(bad)
fcmovne
mov
xlat
(bad)
or
dec
daa
pop
push
test
xchg
xor
addr16
push
retf
and
mov
jno
je
in
cmp
push
or
mov
leave
adc
cmp
cwde
sahf
aad
test
mov
mov
pop
pushf
je
test
cmc
lds
cmps
movs
in
cmp
sub
lahf
shr
enter
cwde
ds
dec
mov
sahf
dec
add
cmc
jmp
cmp
rcl
inc
gs
ins
lods
in
dec
mov
(bad)
retf
cmp
sub
push
push
and
cmp
mov
fimul
ficomp
mov
call
(bad)
pop
mov
aas
jmp
sbb
sub
pop
adc
xor
mov
cmp
jne
int3
or
push
dec
xor
std
jmp
sti
fdivr
call
push
arpl
loope
repz
outs
lds
ret
pop
scas
test
sbb
inc
inc
out
and
mov
and
mov
xchg
mov
das
sbb
popa
xchg
jnp
in
cmp
jmp
cmps
test
(bad)
sub
movs
std
push
gs
dec
ja
aad
test
leave
sub
push
push
ret
mov
xlat
mov
push
and
push
push
cmp
push
aas
fadd
lds
ret
pop
adc
call
sahf
bound
daa
add
inc
xchg
ins
and
js
test
cmp
inc
int
out
adc
inc
push
mov
sahf
out
xchg
ja
scas
sbb
jne
aam
aam
add
mov
idiv
les
sbb
inc
push
or
mov
iret
neg
(bad)
repz
pop
daa
add
mov
xchg
cmps
xchg
(bad)
xchg
pop
sbb
or
pop
je
lods
div
sbb
dec
cmp
ret
bound
sti
fsub
pop
clc
inc
mov
in
movs
in
push
pop
jp
loope
adc
cmc
lea
sub
fstp
in
ja
cmp
mov
mov
fmul
jp
push
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
out
retf
adc
test
bound
pushf
push
pop
rcr
jle
inc
call
out
or
mov
jbe
xchg
pusha
push
adc
clc
stos
inc
push
repnz
js
cmps
jle
cwde
in
add
rcr
sub
enter
push
push
lock
sub
dec
repnz
out
or
cmp
push
cli
jl
jl
mov
rcr
ins
shl
xchg
call
mov
push
or
cmp
retf
js
or
mov
fs
inc
jne
mov
cwde
mov
mov
ret
or
cmp
(bad)
pusha
out
scas
xor
push
mov
jbe
pop
rol
push
rcl
and
or
outs
in
cmp
inc
call
mov
jbe
cwde
and
xchg
punpckhwd
dec
pop
ja
pop
aaa
test
xchg
je
and
push
sbb
mov
mov
mov
cwde
retf
sub
mov
cmps
loopne
jb
jmp
cmp
call
stos
cwde
or
ficomp
push
inc
sbb
enter
call
retf
pusha
cmp
retf
js
or
cmp
enter
call
stos
cwde
or
ficomp
push
mov
mov
jmp
call
sbb
or
ficomp
push
call
test
fmul
jp
push
test
pusha
sub
pop
retf
js
and
push
dec
call
jp
or
mov
retf
js
or
cmp
cli
fmul
pop
xor
in
cli
test
inc
or
pop
xor
idiv
cmp
out
jge
ins
adc
sub
mov
retf
js
push
call
enter
jmp
sbb
add
cli
jo
push
call
int
fild
jp
xchg
test
cwde
or
mov
enter
call
sub
jo
call
sbb
inc
rcl
cli
js
or
lods
rcl
in
xor
in
cli
test
inc
or
pop
xor
or
push
lea
mov
rol
ja
cdq
or
rcl
dec
mov
sbb
iret
push
rol
mov
cdq
sub
mov
cli
push
mov
cmp
pop
fisubr
jp
xchg
mov
call
cli
jo
push
call
int
fild
jo
test
sbb
cli
pop
retf
pop
mov
or
cmp
call
cli
cwde
or
mov
retf
pop
mov
sub
daa
dec
jmp
sbb
test
fcomp
popa
lock
inc
xchg
shr
enter
call
sbb
or
pop
xor
or
push
lea
mov
scas
les
inc
clc
js
jns
or
xor
dec
aad
in
cmc
sbb
xor
call
jp
push
scas
sbb
retf
push
xor
or
mov
call
call
sbb
sub
int
repz
add
push
test
cmp
dec
jmp
clc
imul
mov
cli
push
cli
or
pop
fisttp
retf
sbb
cli
mov
inc
sub
retf
add
(bad)
stos
enter
call
adc
aad
fisub
stos
add
mov
cmp
dec
jmp
cld
stos
cmp
or
ficomp
push
js
sub
test
xlat
mov
fimul
sti
outs
inc
adc
push
fidiv
jmp
(bad)
stos
leave
pop
fisttp
jns
mov
test
fnstcw
push
cwde
cmp
sub
(bad)
adc
mov
pop
enter
in
outs
repnz
daa
mov
cli
fmul
jp
push
push
cmp
retf
pop
mov
push
mov
fmul
pop
xor
in
cli
test
inc
or
pop
xor
idiv
sbb
enter
push
jp
xchg
mov
call
cli
pop
retf
jns
push
call
enter
jmp
sbb
push
cmp
retf
jns
sub
sbb
enter
enter
ja
jo
test
mov
retf
xor
or
cli
sub
fdiv
ja
mov
sub
pop
retf
pop
mov
sub
daa
dec
enter
ja
cdq
or
fcom
arpl
jle
push
call
aaa
pop
(bad)
jnp
imul
mov
les
ins
in
xchg
push
test
cmps
and
xlat
jp
push
fnsave
cli
cwde
or
mov
int3
outs
push
sub
sbb
leave
pop
(bad)
(bad)
pusha
adc
add
sbb
retf
imul
sbb
enter
jmp
sbb
sub
int
repz
push
call
enter
jmp
sbb
or
fcom
push
imul
mov
xchg
xor
(bad)
dec
leave
pop
cli
dec
lods
sbb
push
(bad)
hlt
ja
pop
enter
mov
mov
cmp
stos
aaa
pop
(bad)
mov
cdq
or
fcom
arpl
jne
add
or
fist
inc
repz
xchg
cmp
or
(bad)
jno
je
push
mul
stos
add
sbb
loope
rol
pop
mov
jle
imul
mov
sbb
push
pop
fdiv
mov
mov
or
pop
xor
or
cmp
push
jp
xchg
mov
call
cli
pop
retf
jns
or
xor
pop
jp
imul
inc
sub
pop
into
ins
cld
js
add
xor
push
jp
xchg
mov
call
rcr
div
sbb
cs
call
cli
cwde
or
mov
xor
mul
jne
cmp
stos
aaa
movs
clc
cli
call
sbb
aad
cli
jo
push
gs
push
mov
daa
push
jp
xchg
mov
jo
test
inc
aad
cli
pop
retf
pop
mov
or
cmp
call
sbb
sub
pop
int
cli
js
loopne
clc
mov
call
call
sbb
sub
add
sbb
cmp
stos
aaa
pop
daa
dec
pop
jle
ins
test
cwde
or
inc
or
pop
xor
or
cmp
pop
(bad)
mov
jo
test
cwde
cmp
cmps
xor
push
call
aaa
pop
fldcw
jp
xchg
test
cwde
or
mov
dec
and
xchg
sub
sbb
retf
pop
clc
cli
call
sbb
aad
fistp
push
call
aaa
pop
(bad)
mov
cdq
or
ficomp
push
call
sub
jo
call
sbb
push
cmp
retf
jns
or
cmp
call
sbb
sub
inc
ret
xor
or
mov
mov
daa
inc
loop
pop
addr16
mov
mov
int
cli
push
cwde
cmp
mov
(bad)
stos
leave
pop
(bad)
retf
test
cwde
or
mov
int3
outs
clc
jno
or
cmp
cli
fmul
pop
xor
in
or
fcom
push
cli
js
or
cmp
pop
jp
dec
push
sbb
sub
add
sbb
or
cmp
call
cmp
test
mov
iret
outs
(bad)
jnp
sub
sbb
retf
jp
dec
call
sbb
or
pop
xor
idiv
sbb
enter
push
jp
xchg
test
cwde
or
mov
dec
and
xchg
or
fsubr
call
sbb
and
push
(bad)
data16
jmp
(bad)
stos
call
jp
push
sbb
test
mov
dec
and
jp
push
popf
push
and
xor
(bad)
push
enter
in
dec
push
sbb
sub
(bad)
jge
setb
or
cmp
call
sbb
and
push
(bad)
data16
push
stos
push
mov
clc
cli
call
sbb
and
push
(bad)
gs
ja
sbb
sbb
enter
push
jp
xchg
mov
call
fst
div
sbb
cmp
mov
mov
cdq
or
fcom
arpl
jne
pop
mov
cwde
cmp
daa
dec
enter
ja
cdq
or
fld
push
sbb
into
pop
rol
jno
imul
cli
jo
push
call
enter
in
jg
ins
test
cwde
or
mov
int3
outs
cld
jl
push
call
enter
push
jp
xchg
mov
jo
test
mov
xor
sub
sbb
enter
push
jp
xchg
mov
cdq
or
and
xchg
push
call
aaa
pop
fsubr
jp
xchg
mov
or
sub
cli
xchg
push
call
aaa
pop
clc
cli
call
cli
cwde
or
mov
jmp
cmp
sub
jo
call
cli
cwde
or
mov
cli
push
cli
sbb
enter
enter
ja
mov
or
pop
xor
neg
(bad)
stos
call
jp
mov
push
cmp
retf
js
push
call
enter
push
jp
xchg
test
cwde
or
mov
dec
and
jl
push
cwde
adc
enter
call
sbb
sub
pop
jmp
jo
sub
stos
retf
dec
out
jl
dec
push
sbb
cmp
cmps
retf
jnp
or
mov
(bad)
jnp
bound
sbb
cli
push
call
retf
pop
fisttp
mov
cdq
or
fisub
out
or
cmp
out
js
dec
push
sbb
sub
cli
xchg
or
cmp
rcl
push
jp
xchg
test
cwde
or
mov
dec
and
xchg
sub
sbb
enter
push
jp
xchg
test
cwde
or
mov
retf
outs
sti
jns
add
cmp
call
sbb
push
cmp
retf
xor
or
jne
cmp
stos
aaa
pop
clc
cli
call
sbb
sub
pop
enter
loop
cwde
cmp
sub
fdiv
ja
cdq
or
and
xchg
sub
sbb
call
jp
mov
test
and
xchg
push
call
aaa
jp
dec
call
sbb
sub
retf
pop
mov
push
mov
fimul
jg
ins
test
cwde
or
inc
sub
pop
int3
outs
push
push
call
push
pop
fdiv
ja
jo
test
cwde
cmp
cmps
jmp
jo
sub
mov
fdiv
ja
cdq
or
fisub
adc
xlat
mov
fisttp
pop
xor
in
or
fstp
(bad)
mov
cmp
call
sbb
push
cmp
cli
push
call
aaa
jp
dec
call
sbb
sub
pop
jmp
sbb
enter
enter
ja
jo
test
inc
sub
pop
xor
add
mov
pop
jp
mov
push
cmp
retf
pop
mov
sub
fsub
fdivrp
jl
sbb
push
loop
repnz
mov
fdiv
lods
mov
add
call
xchg
rol
jp
je
cmp
sbb
jmp
repnz
fs
test
ss
movs
inc
lock
xor
ror
enter
inc
mov
repnz
mov
movs
fimul
test
jle
jle
mov
loop
call
pop
in
mov
mov
outs
rcl
call
mov
jbe
add
into
push
jecxz
lods
das
pushf
or
inc
(bad)
dec
int3
inc
xor
sbb
in
ficom
lods
xor
dec
lea
xchg
por
std
(bad)
scas
jmp
mov
dec
leave
jnp
dec
iret
scas
sub
js
pop
jae
pop
mov
or
pop
in
fist
movs
sbb
xchg
add
out
dec
mov
cwde
add
sbb
dec
jne
mov
cmp
in
jle
cmp
pop
cmp
adc
int
into
enter
call
or
jne
xchg
fidivr
addr16
lods
pop
mov
jp
push
xor
cmp
test
jp
aas
out
out
jg
push
std
sub
cmp
xchg
push
fisttp
pop
stos
lods
pop
mov
sub
outs
in
arpl
pop
int3
dec
mov
test
mov
jnp
dec
enter
cmp
dec
out
fdivr
ins
fldcw
mov
lods
aaa
out
pop
iret
ss
sbb
imul
stos
sub
imul
pop
or
or
pop
rcr
mov
mov
and
clc
push
sbb
jbe
push
sbb
add
outs
fsub
jp
inc
das
mov
sub
aaa
lds
ins
in
xchg
mov
cmp
imul
mov
daa
stc
jge
js
cmps
sub
ds
and
out
pop
popf
pop
lea
cmp
pop
cli
outs
retf
mov
cwde
jp
cmps
cs
fmul
jp
push
test
xchg
das
lds
or
imul
into
js
mov
jmp
push
xchg
dec
xchg
or
pop
enter
cs
dec
int3
push
(bad)
sbb
jnp
jle
pop
retf
mov
stos
sbb
daa
retf
addr16
imul
cwde
(bad)
adc
dec
xchg
dec
stc
adc
or
pop
enter
ret
scas
cmp
jge
ds
xor
or
daa
scas
aaa
out
pop
iret
popa
clc
pop
fstp
or
(bad)
fdivr
push
call
adc
sbb
lods
or
pop
(bad)
dec
idiv
pop
or
adc
sub
dec
jmp
mov
fimul
pop
or
or
cmp
pop
mov
rcl
mov
out
sbb
ds
jle
jp
jl
sahf
pop
mov
cmp
popa
sti
jo
push
gs
pushf
sub
sub
pop
fmul
pop
retf
scas
sbb
jnp
jo
push
jbe
adc
cld
pop
fld
pop
ror
mov
inc
aad
iret
ins
retf
dec
jmp
gs
mov
imul
jne
in
mov
stc
pop
clc
push
adc
add
jbe
dec
clc
arpl
inc
das
mov
cmp
push
cs
and
mov
jmp
fimul
dec
cmp
sub
add
sub
js
cmp
cmps
add
mov
jp
pop
jmp
mov
cli
add
sub
stos
stos
call
scas
dec
out
push
retf
pop
movs
fidivr
cmps
aaa
xchg
or
inc
jge
out
dec
aam
fnstcw
or
push
clc
(bad)
test
int3
push
jns
add
jge
sbb
enter
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
push
dec
sar
(bad)
cmp
enter
xor
test
add
dec
out
jle
xchg
jo
push
not
mov
loopne
js
mov
sub
push
pop
mov
cs
mov
push
inc
ficomp
jbe
bound
and
cmp
cmp
sub
les
jl
je
int3
pop
and
pop
jmp
cmp
mov
or
xor
inc
xchg
cld
dec
hlt
or
fsubr
and
push
mov
sbb
mov
enter
into
xchg
dec
loopne
nop
cs
div
dec
mov
pusha
mov
sub
inc
push
clc
mov
push
dec
(bad)
and
push
adc
cmp
into
or
push
out
test
rcr
ins
adc
cmps
or
and
and
ret
ins
cmp
push
sbb
pop
in
jge
xor
xchg
pop
sub
repz
mov
aad
(bad)
(bad)
std
dec
mov
sub
repz
cmp
imul
in
mov
lahf
sub
mov
aas
dec
test
fild
loope
sbb
mov
or
push
pop
test
daa
jno
leave
ja
out
cmp
popa
iret
cdq
xor
aaa
nop
sbb
sub
lock
out
push
push
out
sub
push
js
jo
enter
pop
(bad)
adc
cmp
mov
or
shr
out
sahf
clc
lock
mov
cs
jbe
(bad)
cmc
xchg
dec
xchg
xchg
xor
mov
sub
sar
cmc
inc
lea
aad
ins
cmp
cmp
(bad)
(bad)
add
ret
or
jmp
and
jmp
into
in
nop
(bad)
mov
ds
test
mov
push
loopne
sbb
mov
or
push
push
test
and
enter
cmp
pusha
into
cwde
data16
ss
scas
pop
mov
popa
stos
loope
mov
out
cmp
popa
iret
cdq
xor
aaa
inc
scas
stc
inc
rcr
fldenv
add
pop
adc
imul
mov
or
push
pop
test
or
cld
mov
push
mov
push
mov
sub
shr
mov
and
mov
mov
dec
cmps
loopne
clc
xchg
xor
test
rcr
push
scas
or
jle
(bad)
jo
call
mul
push
mov
sbb
mov
or
les
jl
push
adc
je
int3
or
in
stos
fs
xor
mov
inc
mov
sub
movs
add
mov
add
mov
in
leave
add
jmp
mov
cmp
pop
in
pop
stos
adc
sar
cmc
inc
or
imul
ins
mov
xor
mov
sub
push
std
mov
lds
push
or
or
pop
sub
sar
test
imul
xchg
aas
dec
mov
dec
fldenv
fild
pop
push
dec
ja
nop
and
mov
lock
outs
scas
in
movs
out
and
or
les
pushf
fidiv
lods
dec
in
jl
xchg
jb
push
ret
hlt
push
in
mov
mov
sub
pop
mov
sub
fs
mov
add
fcomp
je
ins
or
adc
stos
pop
mov
add
push
in
sub
sbb
retf
inc
and
pop
aad
lods
jmp
sbb
cmc
mov
or
shr
in
popf
sti
xor
mov
cmp
adc
stc
outs
mov
das
imul
loope
sbb
push
out
sub
pop
jns
jno
leave
inc
and
pop
xlat
adc
cmp
mov
or
shr
out
lahf
stc
or
dec
iret
call
movs
data16
cwde
add
aas
cwde
and
pop
retf
push
xchg
push
adc
out
push
xor
sub
xor
cmps
mov
out
and
movs
dec
add
fs
call
xchg
je
jne
xchg
cs
cdq
std
stos
pop
push
pop
cmp
stos
sbb
pop
rol
xchg
mov
fwait
dec
shl
rep
fimul
mov
mov
ror
cmps
ins
pop
jl
popa
inc
lock
and
mov
int3
inc
popa
mov
adc
inc
shl
mov
test
into
rol
and
stos
xor
cs
pop
(bad)
cmps
call
(bad)
lea
cmp
push
fwait
or
outs
stc
push
adc
xchg
arpl
push
pop
push
sbb
sahf
and
pushf
mov
jp
dec
inc
pop
(bad)
push
ret
push
mov
dec
iret
jecxz
mov
xchg
sbb
pop
iret
inc
ficomp
xchg
cmp
pop
dec
push
out
hlt
pop
js
xor
push
mov
xlat
push
xlat
pop
clc
xor
arpl
push
xchg
ins
jmp
push
adc
mov
jnp
mov
jle
fs
push
sub
add
pop
out
(bad)
mov
mov
pop
icebp
jl
pusha
fdivr
fisttp
sub
or
jno
dec
ficomp
lods
cmp
clc
add
fadd
inc
cs
add
mov
push
into
lods
xor
por
popa
test
int
xor
sbb
addr16
std
dec
fiadd
lods
cmp
or
jae
popa
sar
fild
fidiv
sbb
adc
dec
shr
pop
mov
xchg
pop
mov
or
pop
aam
and
xor
add
jle
dec
fstp
xchg
cmp
sbb
jge
jg
push
rcl
mov
js
outs
cld
jge
dec
lds
into
cmps
and
add
pusha
std
ins
enter
sub
and
iretw
jl
push
mov
mov
xchg
or
sbb
jo
jg
push
rcl
mov
add
pop
call
mov
mov
xchg
adc
push
int
jecxz
mov
cli
push
stos
dec
les
cmp
stos
cwde
push
mov
pop
mov
imul
inc
add
mov
jnp
rcl
es
jae
sub
push
mov
test
mov
mov
sub
push
sar
adc
mov
int
cwde
or
mov
popa
jmp
sub
sbb
call
xor
imul
xchg
pop
or
cli
add
iret
push
fbld
dec
fsubrp
or
lock
retf
mov
movs
sbb
pop
scas
sub
call
mov
jbe
and
jg
pop
cmp
xor
popa
icebp
push
inc
ret
movs
cmp
dec
mov
push
rcl
mov
or
inc
enter
pop
mov
sub
outs
jmp
leave
sbb
add
loopne
movs
dec
sahf
js
inc
mov
pop
shr
mov
scas
inc
jmp
mov
sbb
in
aam
leave
mov
or
fcom
sub
cmp
or
loop
stos
pop
call
call
xacquire
pop
dec
mov
sbb
in
or
pop
(bad)
call
adc
sti
push
push
lahf
pop
mov
jnp
inc
lahf
not
aam
inc
xor
in
pop
sti
dec
sbb
mov
retf
xor
inc
fistp
cmps
xor
xchg
add
dec
(bad)
fs
push
ss
cmp
jmp
dec
retf
mov
sbb
jp
push
aad
sub
adc
inc
(bad)
je
das
lea
inc
in
jne
arpl
pop
retf
cli
cmp
jmp
lods
mov
dec
call
jle
outs
fstp
or
cmp
test
jl
sub
dec
int3
mov
sbb
cmp
outs
int
fmul
test
lods
sub
sbb
popa
call
cli
ss
call
sub
and
sub
sub
push
jecxz
jecxz
call
enter
test
test
mov
jge
mov
cwde
pop
je
push
ret
jo
lea
mov
fiadd
dec
loopne
jmp
mov
je
jle
dec
std
enter
test
sar
jle
dec
sub
or
pop
(bad)
jp
pop
int
lds
pop
clc
or
jns
js
cmp
push
es
stos
add
push
inc
fbstp
sub
out
pop
stc
imul
stc
dec
cmp
ds
adc
inc
enter
sbb
xor
jbe
or
jbe
and
js
pop
aam
fstp
dec
int3
mov
push
mov
out
jmp
fist
inc
dec
call
dec
fidivr
push
pop
aad
fsub
adc
aad
fcom
dec
mov
aaa
jmp
adc
das
test
jns
outs
ficom
add
sub
or
push
inc
fisttp
lods
xor
pushf
add
int3
push
cld
dec
sub
(bad)
sbb
jl
jbe
pop
call
mov
imul
jge
mov
sahf
jle
ja
pop
jmp
enter
int
iret
pop
int
xlat
jns
cli
sub
or
ins
jmp
jmp
stos
ds
outs
rcl
pop
cmp
sbb
into
push
mov
clc
push
out
in
or
dec
retf
fisubr
mov
popa
(bad)
ja
or
sbb
enter
xchg
sahf
add
push
out
dec
pop
mov
scas
pop
test
test
int
(bad)
cmp
mov
pop
retf
imul
popf
pop
retf
das
test
jge
or
sbb
mov
pop
fwait
add
call
jge
mov
retf
ja
dec
jmp
mov
fsubr
scas
add
(bad)
ins
fld
js
push
leave
jge
jg
add
mov
adc
pop
out
mov
pop
data16
cdq
push
fisttp
js
jle
cmps
aaa
mov
add
adc
sahf
cmp
(bad)
pop
(bad)
jnp
pop
(bad)
cmps
xor
inc
loopne
xlat
arpl
pop
out
xor
push
xchg
stos
or
inc
fmul
sub
cdq
xor
div
inc
cmp
sub
fs
cmc
xchg
cmp
aas
call
jp
or
mov
std
cmp
inc
fstp
cmps
sub
dec
loope
jmp
scas
ja
add
or
dec
inc
push
std
mov
pop
mov
out
sbb
ins
fistp
shl
aaa
mov
mov
jl
jle
inc
into
pop
ret
mov
and
pop
mov
jg
xacquire
shl
pop
mov
jnp
push
rcl
dec
jmp
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
leave
ins
cld
jno
push
sbb
sub
cmp
(bad)
mov
mov
push
cmc
cli
jl
or
stos
stos
int3
inc
fmul
jp
jae
push
or
push
ficomp
(bad)
popa
jmp
cmp
enter
in
arpl
outs
xchg
sbb
dec
ret
pop
into
jno
pushf
(bad)
in
mov
xchg
int3
call
or
sbb
ins
(bad)
jl
dec
adc
push
mov
imul
nop
inc
into
add
fcomp
out
jg
sbb
xor
inc
cld
dec
loopne
fist
and
xor
loope
bnd
inc
mov
cmp
(bad)
jb
fisttp
sub
sahf
test
add
jp
pop
(bad)
xor
adc
adc
inc
mov
fnsave
imul
mov
sbb
dec
jnp
ins
add
sbb
or
setge
jb
dec
sti
jp
push
sbb
sub
pop
retf
js
or
cmp
jne
fisubr
sbb
ret
into
retf
js
or
inc
jne
popf
pop
cmp
aaa
jle
stc
xor
xchg
jmp
rcl
pushf
retf
cmc
repnz
inc
idiv
fsub
(bad)
shl
xchg
(bad)
in
mov
out
cmp
push
xchg
jo
and
popa
cld
scas
xor
das
inc
out
add
or
int
push
dec
mov
leave
imul
inc
mov
mov
adc
movs
and
daa
addr16
clc
xchg
mov
iret
dec
or
cs
xor
cs
scas
cmc
dec
cmp
jl
arpl
das
lds
call
add
jge
fwait
cli
js
idiv
lods
or
pop
fmul
test
in
clc
mov
mov
xor
or
cmp
call
cli
pop
mov
mov
pop
ret
pop
test
dec
out
ins
mov
push
repnz
adc
pmulhuw
cwde
xor
dec
call
loopne
jl
push
push
mov
adc
push
jecxz
xor
retf
pop
retf
pop
jmp
and
enter
pushf
sbb
pop
push
dec
mov
retf
push
imul
sub
push
mov
pop
test
jg
outs
test
mov
stos
push
xchg
sbb
jge
sbb
enter
call
inc
cmp
sub
cmps
test
addr16
jno
jnp
jl
enter
call
fs
cli
aad
mov
retf
mov
xlat
fist
cmps
xor
pop
push
in
ins
stc
gs
pmullw
pop
bound
call
leave
push
fidivr
sbb
sub
test
mov
inc
repz
in
leave
pop
test
push
fnsave
jb
bswap
sbb
mov
push
sti
jno
add
stos
cmp
ja
cwde
cmp
mov
scas
dec
lahf
js
fs
sbb
enter
call
sbb
dec
dec
fisub
sar
gs
in
retf
cmc
movs
mov
push
test
cwde
xor
retf
fidivr
clc
neg
push
cwde
enter
sahf
jp
xor
outs
push
pop
xlat
or
mov
sub
or
pop
out
enter
call
jg
or
sar
sbb
sbb
lods
xor
clc
or
sbb
js
pop
neg
ficomp
clc
cli
js
or
cmp
cmp
mov
out
ins
call
dec
leave
mov
or
add
ins
out
aam
into
inc
lods
and
jle
outs
hlt
pop
int3
dec
sar
pop
jmp
jl
dec
iret
inc
aas
lods
and
jo
repz
ret
mov
mov
sbb
(bad)
in
(bad)
inc
rcr
daa
mov
add
jno
popa
not
inc
shl
adc
imul
push
aaa
movs
daa
mov
test
push
sbb
clc
call
cmp
dec
xlat
jne
outs
int3
push
xor
add
inc
retf
dec
fistp
jge
pop
out
into
pop
lods
cs
jle
outs
loopne
int3
dec
fdivr
or
sbb
ins
out
jle
dec
into
pop
movs
daa
mov
jle
outs
(bad)
jno
dec
fdivr
add
out
jb
dec
into
pop
lods
daa
mov
test
pushf
jle
outs
bnd
dec
fdivr
add
out
jb
dec
into
pop
lods
cs
xchg
pushf
jle
outs
bnd
dec
fdivr
add
jb
dec
iret
pop
aas
lods
das
mov
test
jbe
dec
fnstsw
add
out
jb
dec
iret
pop
aas
movs
daa
mov
test
xchg
jg
outs
bnd
dec
fnstsw
push
xchg
retf
dec
iret
pop
aas
cmps
das
mov
jg
outs
repnz
int
fnstsw
add
out
jb
dec
iret
pop
aas
lods
daa
mov
test
popf
jg
outs
std
dec
ret
mov
cmps
xor
lock
loopne
retf
inc
rcl
daa
mov
jo
pusha
repnz
ret
mov
cmps
xor
(bad)
loopne
retf
inc
rcl
daa
mov
add
jo
pusha
repnz
ret
mov
cmps
xor
(bad)
loopne
rol
xor
pop
xchg
jno
popa
repz
ret
inc
shl
add
loope
rol
xor
add
jno
popa
repz
ret
inc
shl
add
loope
rol
xor
add
dec
rol
and
adc
arpl
jl
inc
ret
push
xor
add
push
rol
mov
cmps
xor
add
adc
fs
xlat
push
rol
mov
mov
pusha
bnd
test
mov
retf
js
or
cmp
call
sbb
xchg
add
adc
xchg
cmc
push
lds
aaa
movs
pop
retf
imul
fwait
or
pop
fimul
out
ins
jecxz
lahf
adc
inc
rcl
pusha
push
jo
lea
xchg
add
(bad)
push
enter
pop
xchg
pop
xchg
or
cmp
dec
fidivr
sahf
push
pushf
push
adc
test
mov
repz
fidiv
cmp
mov
(bad)
xchg
aad
in
cmc
xchg
add
cwde
or
xchg
addr16
push
lds
mov
pop
retf
js
mov
test
xchg
mul
(bad)
sub
xchg
enter
xchg
add
adc
in
hlt
push
les
mov
test
xchg
mul
jne
inc
(bad)
adc
pop
fmul
jp
push
call
dec
fistp
imul
cdq
or
pop
fimul
js
push
sub
pop
enter
jmp
sbb
cs
dec
shr
sbb
dec
fstp
mov
jmp
cmp
inc
or
pusha
pause
add
and
xor
(bad)
pop
dec
sbb
mov
rcl
add
adc
cmp
mov
sbb
(bad)
mov
mov
ret
inc
add
ss
and
push
lds
stos
aaa
add
xor
xlat
inc
sbb
dec
fnstsw
mov
mov
cdq
inc
rcr
xchg
add
(bad)
push
xlat
inc
sbb
pop
xchg
mov
or
pop
into
dec
ficomp
movs
pop
push
mov
dec
int3
pop
sbb
push
jle
and
sub
pop
into
dec
ficomp
movs
sbb
cmp
sbb
dec
cmc
mov
repnz
cmp
int
fstp
movs
mov
mov
inc
ret
push
push
lds
mov
add
push
rol
enter
or
mov
push
repz
jecxz
adc
and
je
not
movs
add
inc
lds
addr16
adc
cmps
and
aad
in
cmc
xchg
add
cmps
mov
inc
(bad)
push
mul
jne
test
xchg
aaa
movs
sbb
pusha
cli
js
dec
ficomp
test
mov
xchg
push
push
imul
(bad)
mov
sub
call
enter
call
sbb
push
push
les
movs
es
test
xchg
test
pop
mov
push
mov
cmps
xor
add
adc
in
hlt
push
mov
xlat
jecxz
xchg
mul
(bad)
inc
(bad)
push
mov
cmps
xor
add
adc
in
addr16
mov
pop
test
xchg
mul
jne
inc
(bad)
push
mov
cmps
pop
imul
mov
mov
pop
retf
js
mov
cwde
ja
cmp
dec
call
call
dec
ficomp
jp
jns
mov
cwde
or
pop
(bad)
jnp
imul
sbb
dec
fcomp
push
jp
mov
call
pop
fimul
js
push
sub
pop
enter
call
lods
cmp
dec
jmp
mov
mov
pop
enter
call
stos
cmp
dec
jmp
mov
mov
pop
retf
xchg
test
pop
fisttp
jns
imul
sub
push
inc
clc
jnp
mov
fwait
or
pop
fisttp
out
ins
(bad)
pushf
push
mov
mov
fistp
popa
repz
adc
or
mov
inc
shl
lock
xchg
adc
inc
rcl
enter
or
cmp
rcl
jecxz
lock
xchg
adc
inc
int
push
adc
mov
rcl
dec
fistp
add
cmp
fs
adc
push
cmp
push
shr
dec
fadd
and
mov
rcl
adc
(bad)
and
push
rol
jo
pusha
add
xchg
mov
(bad)
push
jge
adc
add
push
xlat
inc
pop
aad
jae
or
inc
aad
lds
jbe
xchg
or
pop
xchg
fs
xchg
push
test
mov
movs
inc
aad
rcr
iret
pop
ds
das
mov
(bad)
push
(bad)
inc
stc
jne
fs
xchg
pop
sbb
cmc
jbe
xchg
add
(bad)
push
(bad)
inc
push
les
mov
mov
movs
inc
aad
lds
push
add
test
iret
push
les
add
jp
mov
call
dec
(bad)
rol
std
cdq
xor
mov
sub
cld
outs
jmp
sbb
xchg
(bad)
in
imul
or
fmul
pop
push
les
sbb
mov
mov
jo
ins
(bad)
pushf
push
mov
adc
hlt
push
pop
in
jle
mov
xor
dec
fcmovnbe
inc
(bad)
and
daa
mov
sbb
pop
lock
in
jle
(bad)
or
sbb
fs
(bad)
jecxz
(bad)
popf
jl
cmp
dec
into
pop
push
lds
mov
cmps
xor
pop
int3
dec
fdiv
icebp
xchg
add
xchg
ja
data16
ss
jecxz
adc
and
rol
push
aaa
movs
daa
hlt
mov
mov
push
hlt
popa
jecxz
adc
pop
xchg
ja
jnp
jb
(bad)
xchg
add
xor
inc
ret
push
icebp
arpl
jae
add
xor
inc
shl
arpl
xchg
add
xor
inc
ret
push
repz
jecxz
adc
and
push
mov
not
movs
ss
les
addr16
adc
cmps
and
xlat
jne
not
and
aaa
(bad)
inc
(bad)
push
mul
push
test
xchg
cmps
es
les
and
hlt
xchg
add
adc
and
xor
inc
(bad)
push
mul
push
test
xchg
mov
daa
mov
lds
ja
addr16
xchg
add
cmps
xor
push
pop
out
pop
test
xchg
aaa
movs
daa
mov
lds
ja
addr16
xchg
add
cmps
or
jp
push
gs
pop
test
xchg
aaa
movs
sbb
(bad)
push
push
cmc
test
mov
or
jp
push
pop
fmul
test
aaa
xchg
add
js
dec
ficomp
test
mov
or
mov
mov
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
jo
(bad)
push
mov
cmps
xor
add
adc
in
hlt
push
les
movs
es
in
push
aaa
movs
es
inc
(bad)
push
mov
cmps
xor
add
adc
in
hlt
push
les
movs
es
xor
movs
xor
aad
(bad)
push
mov
cmps
xor
add
adc
in
hlt
push
les
movs
es
test
xlat
inc
(bad)
push
mov
cmps
xor
ja
addr16
push
lds
aaa
movs
daa
mov
test
cdq
sbb
inc
(bad)
push
mov
cmps
xor
ja
addr16
push
lds
aaa
movs
daa
mov
test
xchg
inc
mov
(bad)
push
mov
cmps
xor
ja
addr16
push
lds
aaa
movs
daa
mov
test
xchg
sbb
sub
pop
fmul
jp
push
call
dec
ficomp
push
(bad)
out
test
mov
dec
call
call
dec
ficomp
push
add
mov
dec
jmp
fwait
sbb
dec
fistp
imul
cdq
or
pop
(bad)
jnp
imul
sbb
dec
fistp
imul
call
pop
fimul
js
push
sub
pop
enter
call
stos
cmp
dec
jmp
mov
mov
pop
enter
call
stos
cmp
dec
jmp
mov
mov
pop
enter
call
stos
cmp
dec
call
in
mov
mov
pop
enter
call
stos
cmp
inc
into
pop
fimul
ds
dec
fcomp
push
jp
mov
mov
addr16
repz
adc
dec
test
imul
jmp
stos
cmp
gs
push
call
test
imul
jmp
stos
cmp
gs
push
call
xchg
pop
leave
imul
jmp
scas
cmp
fistp
in
outs
cld
sahf
or
sbb
sub
and
int
std
jg
(bad)
adc
and
push
sar
loopne
lock
add
or
push
ret
popa
repz
adc
mov
rcl
jne
addr16
lahf
add
xor
repz
adc
mov
rcl
dec
fcomp
pop
mov
outs
mov
call
repz
adc
mov
rcl
dec
fcomp
ja
sbb
or
fcom
popa
repz
adc
mov
rcl
dec
fcomp
or
adc
out
cmps
push
ret
popa
repz
adc
mov
rcl
dec
fstp
or
adc
in
push
ret
popa
repz
adc
mov
rcl
inc
rcl
or
adc
out
push
ret
popa
repz
adc
mov
rcl
inc
rcl
or
adc
out
push
ret
popa
repz
adc
mov
ret
push
sar
retf
or
adc
out
push
shl
loope
adc
add
(bad)
push
(bad)
jge
retf
jl
fs
mov
mov
(bad)
xlat
push
lds
ja
xchg
mov
(bad)
push
xlat
jge
retf
cld
outs
out
adc
aad
lds
ja
xchg
xchg
add
(bad)
push
xlat
jb
leave
dec
fnstcw
or
lds
ja
xchg
xchg
add
(bad)
push
xlat
jb
int
fnstsw
or
push
lds
ja
xchg
xchg
add
(bad)
push
xlat
jb
int
fnstsw
push
mov
inc
aad
lds
ja
xchg
xchg
add
(bad)
push
xlat
jb
rol
sub
and
cmc
ja
xchg
xchg
add
(bad)
push
xlat
jb
lds
mov
add
cmps
inc
aad
lds
ja
xchg
mov
mov
dec
enter
inc
fmul
push
push
xchg
add
dec
fidivr
push
push
mov
dec
retf
jb
lds
add
xchg
into
dec
fidivr
(bad)
pushf
push
mov
mov
dec
int3
jb
lds
sbb
xchg
pop
into
dec
fidivr
(bad)
pushf
or
push
mov
dec
int3
jo
lds
sbb
xchg
pop
into
dec
fidivr
(bad)
pushf
add
fmul
jo
lds
sbb
xchg
inc
into
dec
fidivr
(bad)
pushf
add
fmul
jo
lds
sbb
xchg
jl
ins
(bad)
pushf
add
aas
fisttp
jo
lds
sbb
add
dec
fistp
ins
call
das
lods
aas
fisttp
jo
lds
cmc
mov
xchg
add
dec
fistp
ins
call
das
lods
aas
fisttp
jo
lds
mov
cmps
xor
pop
iret
dec
fistp
ins
call
das
lods
aas
fisttp
jo
lds
mov
cmps
xor
pop
iret
dec
fistp
ins
call
and
jno
lds
mov
cmps
xor
push
rol
loopne
lock
pop
adc
and
jbe
lds
mov
cmps
xor
push
rol
loope
icebp
xchg
pop
adc
and
mov
inc
aad
and
es
rol
loope
icebp
xchg
pop
adc
and
push
stos
sub
xor
and
jae
arpl
xchg
pop
adc
and
pop
sti
imul
cdq
aas
mov
inc
shl
arpl
xchg
add
adc
inc
ret
push
repz
jecxz
adc
and
jae
arpl
xchg
add
push
mov
movs
ss
les
data16
adc
add
xor
and
push
mov
not
movs
ss
les
data16
adc
add
xor
and
push
mov
not
movs
aaa
aad
lds
addr16
adc
cmps
and
xlat
jne
not
daa
movs
aaa
aad
lds
addr16
adc
cmps
and
xlat
jne
not
and
xor
inc
(bad)
push
mul
push
test
xchg
movs
es
les
jbe
data16
xchg
loope
adc
and
xor
inc
(bad)
push
mul
push
test
xchg
movs
es
les
jbe
data16
xchg
xchg
xor
mul
jne
test
xchg
aaa
movs
daa
mov
lds
ja
addr16
xchg
test
adc
xlat
inc
(bad)
push
mul
jne
test
xchg
aaa
movs
daa
mov
lds
ja
addr16
mov
and
(bad)
push
mul
jne
test
xchg
aaa
movs
daa
mov
lds
ja
addr16
jne
push
adc
sbb
push
pop
fmul
mov
sbb
dec
ficomp
daa
movs
and
mov
cwde
or
jp
push
pop
fmul
mov
sbb
dec
fisub
movs
daa
stos
cdq
es
or
jnp
imul
(bad)
mov
sbb
dec
out
pop
aaa
movs
daa
mov
jmp
leave
pop
(bad)
mov
sbb
dec
or
push
aaa
pop
fmul
jp
push
sbb
sub
pop
retf
js
or
cmp
call
sbb
sub
pop
retf
js
or
cmp
lea
ret
imul
dec
sub
push
popf
data16
inc
enter
ins
in
push
out
cld
imul
test
sbb
stos
pop
cwde
pop
leave
mov
or
add
push
mov
mov
sbb
icebp
dec
fcom
add
mov
pop
adc
mov
dec
mov
(bad)
push
fdivp
cmp
fidivr
fidivr
imul
push
lahf
(bad)
js
mov
cmps
jmp
aam
pop
sti
jns
jmp
jmp
aas
nop
fistp
sub
mov
pop
pop
xchg
pop
mov
idiv
mov
out
jg
scas
pop
cmp
and
xor
sbb
sbb
fcmovbe
pop
retf
js
xchg
pop
sub
cs
mov
xchg
pop
or
mov
mov
push
aaa
cmp
jge
jmp
push
shr
or
mov
fwait
cmp
test
jle
push
xlat
pop
push
(bad)
push
test
pop
mov
call
frstor
cdq
add
pushf
and
push
in
jmp
mov
jp
mov
dec
cld
cmp
js
cwde
pop
lock
xlat
mov
enter
add
sbb
xchg
inc
pop
stos
mov
mov
sbb
sub
jmp
call
jmp
or
ja
fcmovb
data16
leave
stos
xchg
xsha256
cmps
pop
sbb
repnz
stos
retf
jmp
sbb
pop
retf
jge
pop
cwde
add
mov
sar
aad
cmc
dec
in
jne
sub
clc
sub
cmp
cmp
or
cdq
sub
cmp
js
sbb
or
js
dec
pushf
sbb
jnp
jne
or
pop
into
mov
inc
xchg
push
out
je
imul
ror
es
jmp
jl
adc
jp
push
mov
leave
pop
lds
inc
and
mov
cmp
dec
call
mov
adc
jnp
imul
xchg
inc
sub
cmp
dec
neg
sub
jno
or
sbb
aad
fmul
test
mul
aaa
rol
and
push
mov
mov
xchg
(bad)
jns
pop
retf
lea
lea
outs
in
imul
mov
mov
sub
sbb
jmp
and
push
fadd
jae
arpl
sbb
sub
cmp
dec
rcr
repz
mov
pushf
add
fadd
jae
arpl
sbb
sub
cmp
dec
rcr
repz
mov
pushf
add
fadd
jae
arpl
sbb
sub
cmp
dec
rcr
repz
mov
pushf
add
fadd
jae
arpl
sbb
sub
cmp
dec
rcr
repz
mov
pushf
add
fadd
jae
arpl
sbb
sub
cmp
dec
rcr
repz
mov
pushf
add
fadd
jae
arpl
sbb
sub
cmp
dec
rcr
repz
mov
pushf
add
fadd
jae
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
sbb
inc
jp
dec
mov
or
fcmove
icebp
xchg
or
mov
retf
fcomp
ret
je
jl
xor
dec
ja
mov
inc
ja
cmp
cmc
fst
int3
cmps
sub
xor
mov
sti
rcl
test
or
and
inc
test
mov
xchg
and
jne
call
cmps
mov
add
jae
jp
add
lds
ret
dec
shr
add
cmps
xchg
cmp
jge
push
push
adc
fist
fstp
in
mov
and
mov
pop
add
iret
mov
jp
and
into
sub
or
and
lahf
test
dec
sbb
and
or
mov
retf
sub
adc
ds
pop
or
mov
aaa
in
mov
pop
mov
fnstenv
sbb
call
pop
or
jp
adc
int
push
ss
sbb
push
mov
mov
call
mov
stos
push
push
cmp
xor
xchg
mov
dec
pop
add
mov
mov
ds
mov
and
push
in
inc
dec
add
test
xor
dec
fist
jne
adc
pop
or
mov
push
aaa
loopne
push
add
pop
adc
jle
mov
(bad)
xchg
call
pop
dec
ret
add
ffree
jecxz
mov
and
out
mov
rol
jp
push
xacquire
xchg
add
lds
cs
outs
fsubr
test
cmp
dec
(bad)
jno
push
mov
xchg
scas
add
jae
imul
fs
repnz
add
rol
xor
inc
jno
ss
ins
push
xlat
add
ror
fist
jne
in
(bad)
cmp
mov
lods
jmp
test
(bad)
aam
aam
push
xchg
add
jno
mov
or
cmps
js
fild
test
ss
jp
adc
test
in
adc
push
repz
fist
and
push
jno
xor
cmps
add
jecxz
mov
outs
inc
push
rol
fmul
sar
(bad)
lock
and
mov
inc
push
mov
ror
in
ss
push
cld
jne
adc
jmp
iret
mov
adc
or
loope
add
xchg
and
dec
cmp
outs
and
test
adc
das
adc
pop
gs
mov
test
icebp
aad
pusha
adc
sar
clc
fwait
xchg
xchg
rcl
dec
scas
jbe
test
sub
test
add
jle
je
mov
adc
sub
adc
and
je
or
push
mov
pop
adc
je
jge
call
adc
mov
push
sbb
xor
(bad)
jne
add
movs
movs
jne
push
std
adc
dec
cwde
cmp
mov
sub
xor
mul
jge
popf
lock
mov
or
lods
repnz
jae
rol
adc
inc
xor
inc
fisttp
cwde
lahf
dec
sbb
ss
or
neg
ror
mov
push
int
jo
push
stos
(bad)
out
sub
xor
int3
inc
fist
jne
lock
adc
test
jno
(bad)
int3
mov
xor
sahf
or
inc
outs
and
rol
test
dec
add
xor
(bad)
aam
adc
xor
xlat
lods
arpl
adc
mov
pop
sbb
mov
sbb
jnp
ins
jae
jb
pop
dec
loope
lock
aad
(bad)
test
push
mov
sub
push
push
cmps
add
add
fdiv
call
out
mov
sbb
xor
hlt
add
ins
cmps
test
clc
adc
loope
repnz
cdq
and
stos
enter
sub
test
scas
cwde
xchg
mov
pop
push
push
ins
inc
ret
sub
cmp
shl
mov
fild
std
inc
jae
xchg
cmp
mov
das
fnstenv
push
pop
push
jp
jmp
mov
mov
xchg
or
clc
stos
mov
test
aas
push
fmul
push
stos
sub
test
mov
nop
jb
xchg
adc
xlat
lods
fist
adc
add
cwde
aad
in
jmp
pop
xlat
movs
adc
inc
fidivr
sub
ret
sbb
cmp
mov
xchg
jbe
jne
lock
push
mov
jnp
push
jmp
repz
push
push
or
mov
jb
mov
push
add
(bad)
rep
pushf
xchg
jmp
xor
in
stos
out
add
addr16
mov
inc
or
shl
call
mov
ror
mov
test
ss
or
push
scas
pop
push
xchg
dec
neg
mov
inc
aam
clc
adc
int3
mov
mov
sub
xchg
mov
mov
xor
mov
push
rcl
inc
jp
lods
mov
div
fild
inc
mov
or
mov
call
push
push
lods
in
lahf
jp
cmp
sub
out
push
mov
cmovne
(bad)
daa
std
ja
shl
xor
test
(bad)
test
push
pop
or
cmp
scas
push
cld
jge
cld
cwde
aam
aaa
or
fild
mov
in
xchg
xchg
mov
or
aam
inc
not
inc
scas
mov
imul
jp
stc
adc
retf
add
pop
or
and
mov
inc
mov
or
jne
add
mov
sub
push
add
test
(bad)
pusha
mov
xor
mov
mov
jo
fcom
cwde
(bad)
stos
js
dec
mov
cld
sbb
inc
icebp
lea
xor
jne
not
mov
jo
inc
mov
int3
sub
pop
popa
and
clc
push
movs
stc
pop
or
mov
jnp
mov
pop
add
pop
mov
add
dec
mov
dec
inc
push
or
lea
ffree
outs
or
xor
stc
push
cmps
jo
ret
clc
fwait
or
and
add
pmuludq
push
pushf
test
ss
scas
or
movs
sub
repnz
pop
or
jmp
shl
jmp
jge
pop
(bad)
out
mov
push
pop
add
lods
in
stos
sbb
and
stos
je
leave
aas
aad
ror
rcl
fnsave
push
call
cdq
(bad)
jo
pop
daa
ja
(bad)
lock
aaa
lock
or
cmc
mov
push
add
jp
out
cmp
mov
sbb
sbb
xor
rep
fnstcw
dec
push
push
fucomip
xchg
cdq
push
rcr
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
lea
popf
lods
es
sbb
ins
std
xchg
or
sbb
sub
cmp
dec
(bad)
pop
imul
push
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
std
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
enter
test
xchg
std
test
std
mov
imul
imul
(bad)
push
imul
in
mov
dec
retf
std
mov
push
mov
test
les
enter
repnz
mov
mov
sbb
mov
xchg
out
inc
fld
pop
scas
xor
je
test
imul
xor
pop
or
aaa
xchg
aad
data16
cld
into
aaa
cmp
mov
add
(bad)
mov
ret
mov
mov
mov
pushf
out
bound
data16
enter
aad
in
rcr
inc
or
lods
pop
or
out
aad
add
inc
mov
call
in
ja
shl
cmp
div
inc
mov
xor
push
sbb
cdq
stos
xchg
dec
inc
loop
sub
xlat
sbb
scas
jp
push
fs
jne
(bad)
es
add
push
push
mov
xchg
xchg
mov
leave
dec
jl
not
or
jge
push
xlat
jno
ss
stc
mov
test
push
imul
loopne
pop
push
sbb
out
cmp
jbe
jno
ds
test
das
in
adc
out
js
(bad)
dec
sbb
sub
popf
ss
inc
push
test
or
gs
dec
(bad)
stc
div
mov
les
lods
jmp
xor
std
xchg
mov
movs
dec
adc
pop
mov
pop
jge
lods
es
je
xchg
push
lahf
pop
test
pop
xlat
hlt
es
push
out
movs
sbb
or
jecxz
aam
and
imul
jge
enter
dec
jg
push
in
inc
repnz
xchg
mov
ins
out
push
repnz
cmc
xor
vorps
inc
fst
push
call
fistp
xchg
and
out
add
in
bswap
inc
shl
xchg
xchg
into
bound
cmp
mov
bnd
daa
jle
xchg
inc
fstp
in
jno
dec
adc
scas
add
(bad)
ficomp
xchg
sub
fnsave
repnz
ficom
cmps
cmp
sahf
ins
and
jno
es
jb
int
int3
add
and
xchg
pop
push
cmc
xor
mov
mov
push
(bad)
ss
movs
ins
mov
add
adc
shl
bnd
stc
ret
or
out
ins
adc
pop
lea
les
lods
out
fstp
pop
(bad)
cs
inc
loop
sub
lds
jle
mov
dec
push
int
enter
lods
xchg
aad
pop
cmp
dec
adc
mov
(bad)
push
imul
push
(bad)
ja
or
add
pop
daa
(bad)
mov
jmp
push
test
test
in
sbb
adc
ins
fild
leave
adc
jne
push
pop
and
xor
(bad)
into
jns
mov
cmps
aad
pop
or
push
cmp
fsubr
pop
pop
lods
fldl2e
push
lea
std
push
scas
xchg
pop
mov
movs
xchg
mov
pop
out
inc
lea
leave
test
in
cmc
in
xor
movs
jne
dec
outs
dec
mov
cmps
js
jecxz
push
push
ins
xor
push
pop
test
out
or
push
cld
sub
push
loop
imul
sub
adc
(bad)
aad
push
cwde
test
mov
sbb
repz
cmp
mov
out
enter
bound
test
das
in
rcl
jns
(bad)
dec
(bad)
pop
push
sub
popf
test
repnz
data16
dec
gs
dec
(bad)
mov
repnz
les
lods
fidivr
mov
aas
std
xchg
fld
(bad)
ss
pop
repnz
jno
jle
lds
es
push
repnz
xchg
or
into
cmp
lods
lahf
pop
idiv
pop
pop
aam
es
push
in
movs
pop
iret
or
jecxz
xlat
mov
jge
enter
dec
jg
push
popa
inc
repnz
xchg
mov
ins
out
push
repnz
cmc
aaa
outs
ret
int
fst
push
cld
push
jmp
cmps
repnz
and
out
push
lea
pop
lods
in
bswap
inc
jne
repnz
mov
xchg
cmp
xor
or
bnd
daa
jle
xchg
inc
fstp
in
jno
dec
mov
repnz
lea
push
call
add
xor
xor
in
fnsave
gs
dec
mov
lea
pop
ss
in
add
es
inc
test
adc
ins
add
daa
imul
cmp
fadd
push
jbe
jno
xchg
repnz
in
movs
test
push
in
xor
call
xchg
repnz
mov
sbb
jno
ss
movs
ins
mov
add
adc
loope
out
sub
mov
push
cwde
(bad)
jmp
sub
mov
sbb
or
sahf
adc
inc
gs
ss
jno
push
push
mov
mov
sbb
or
out
jns
sbb
xlat
pushf
ins
sbb
push
int
bound
lods
cli
mov
arpl
adc
in
cmc
cmp
cmps
ret
xchg
push
jne
mov
in
scas
mov
std
imul
cmp
and
inc
pop
ss
jno
push
xor
or
cs
sbb
js
popf
mov
mov
sbb
loop
push
mov
repnz
fisubr
cmps
cmp
sahf
ins
and
inc
ss
push
push
cwde
test
(bad)
std
xchg
dec
out
sbb
repnz
cmp
mov
out
leave
aam
popf
xchg
lods
jno
ds
test
das
in
xor
out
jns
(bad)
dec
jb
push
sub
popf
ss
repnz
data16
push
or
fisttp
repnz
les
lods
inc
mov
mov
aas
std
xchg
std
xchg
repz
cmps
(bad)
aaa
adc
pop
sbb
cmp
lds
lods
lods
push
repnz
xchg
or
into
cmp
scas
lahf
pop
test
push
in
pop
aad
es
push
in
movs
push
iret
or
jecxz
xlat
mov
jge
enter
dec
jg
push
fld
xor
xchg
mov
ins
out
push
repnz
cmc
aaa
outs
ret
in
int
fst
push
cld
push
call
cmps
repnz
and
out
stos
lea
pop
lods
in
bswap
inc
add
xchg
into
pusha
inc
mov
pop
cmp
xor
push
push
bnd
daa
jle
xchg
inc
fstp
or
(bad)
mov
dec
(bad)
pop
imul
mov
popf
adc
popf
mov
mov
imul
or
movs
ret
cld
fwait
mul
ins
xor
pusha
and
into
push
jnp
or
xchg
push
bound
and
rcl
ss
idiv
mov
mov
mov
(bad)
adc
ss
jmp
or
xor
push
popf
dec
dec
push
fadd
jbe
aaa
jae
xchg
push
push
dec
or
scas
push
ret
mov
leave
ret
push
ja
in
jbe
dec
push
aas
je
ret
xor
lea
adc
dec
aaa
xchg
inc
cld
push
push
arpl
test
push
les
js
ins
ds
aaa
int
mov
inc
fbstp
mov
std
jle
fistp
jnp
mov
(bad)
cmp
jmp
scas
fnstcw
push
push
sbb
pop
aam
mov
xor
test
in
and
ret
shl
ret
dec
(bad)
lods
movs
out
jmp
push
(bad)
jmp
push
add
xchg
pop
(bad)
retf
loopne
ins
push
lea
adc
cmps
mov
(bad)
leave
and
push
xchg
sub
outs
pop
adc
cmp
inc
popa
jb
jbe
stos
mov
lea
adc
int
dec
jp
clc
jge
rcl
inc
jge
pushf
push
pop
loop
push
in
ror
scas
fnsave
cmp
mov
xor
add
ins
pop
and
inc
stc
cmc
neg
or
push
std
test
scas
pop
cmp
sbb
sub
test
hlt
xchg
out
stc
sti
inc
push
jne
test
test
jns
pop
sub
sub
ins
cmps
ins
repz
push
popa
mov
xor
int
pop
jb
call
shl
or
jl
pop
(bad)
(bad)
lods
jnp
inc
add
push
test
mov
in
loop
rcr
sub
out
popf
cmps
cmp
test
adc
dec
inc
movs
stos
mov
ins
cmp
pop
mov
jb
xor
adc
(bad)
aad
in
addr16
cmps
jb
aad
ret
cmp
cwde
test
imul
push
fst
and
or
(bad)
outs
dec
daa
arpl
mov
push
lahf
cmp
mov
pop
repnz
sbb
and
pop
ss
loopne
push
int3
xchg
or
data16
pop
inc
pminub
cdq
lods
dec
imul
mov
lods
scas
add
mov
adc
push
dec
mov
mov
jb
je
inc
pop
push
fisttp
into
movs
xchg
dec
ret
mov
sar
dec
and
jmp
inc
fld
ds
scas
and
pop
mov
sub
mov
call
(bad)
xor
jbe
in
je
icebp
xchg
cmp
hlt
ret
sbb
mov
into
push
popf
loop
scas
aaa
nop
sbb
call
mov
daa
jo
xor
neg
(bad)
scas
mov
sub
dec
repz
xchg
pop
mov
sbb
mov
pop
mov
bound
inc
mov
sti
cmps
mov
push
dec
mov
or
push
fst
jae
dec
xor
jb
and
imul
dec
xchg
loopne
cmp
leave
push
mov
inc
(bad)
fiadd
dec
xchg
rcl
ds
dec
lods
mul
sub
pop
popf
inc
cs
push
inc
fnsave
mov
or
jge
rcr
pop
imul
jge
lea
fldcw
sub
xor
in
sti
xchg
mov
(bad)
ins
ds
or
pop
add
bound
add
add
and
icebp
outs
inc
mov
and
mov
xchg
mov
bound
stos
or
sti
fbld
push
or
cmc
ret
add
or
repz
push
lea
pop
popa
enter
aas
push
retf
test
mov
loope
fldcw
idiv
aaa
mov
mov
std
dec
lds
inc
(bad)
dec
fbld
mov
pop
aaa
call
scas
and
or
cmps
movs
xchg
mov
mov
fwait
sub
retf
leave
fsubrp
inc
mov
mov
xor
in
and
sub
pop
mov
sub
(bad)
mov
mov
repnz
(bad)
enter
cmc
fidivr
jmp
dec
or
stos
call
stc
jno
push
stos
xchg
mov
ret
jmp
cmp
loopne
lock
jnp
and
and
imul
mov
push
enter
fldcw
add
mov
add
outs
retf
cli
add
xchg
test
sar
add
pusha
jns
(bad)
cmc
xchg
sub
mov
pop
outs
jns
aam
into
and
stos
mov
(bad)
cmp
cmp
cmp
js
mov
out
loop
jb
jnp
arpl
cmp
inc
mov
adc
stc
outs
je
adc
rcr
sub
imul
popf
mov
sahf
out
arpl
rcl
inc
dec
pop
jecxz
sbb
sub
mov
inc
into
jl
clc
jmp
aaa
repnz
nop
ds
sub
addr16
outs
fsubr
cwde
push
popf
pop
lods
loopne
or
clc
jmp
shl
ret
mov
lds
push
lea
leave
pop
es
adc
mov
xchg
loop
movs
push
test
(bad)
not
inc
xchg
and
xchg
mov
in
rcr
ficomp
ror
push
adc
outs
imul
push
pop
xor
fmul
fnsave
icebp
inc
sub
cmps
jecxz
mov
ins
mov
sahf
leave
test
ss
daa
mov
xor
int3
(bad)
pop
(bad)
pop
loopne
pop
jo
push
and
cwde
out
adc
jmp
or
sbb
pop
mov
cmps
jo
mov
or
fwait
addr16
push
sub
rol
and
pop
(bad)
xchg
cmp
(bad)
retf
sub
ins
and
fdivr
cmp
loopne
fnsave
adc
in
adc
pop
(bad)
dec
mov
or
sub
pop
repnz
mov
xchg
in
xchg
add
ret
fldenv
cmp
xchg
mov
fnstcw
xchg
test
xor
mov
cmc
out
pusha
ret
dec
lahf
or
sbb
(bad)
cwde
ror
imul
adc
inc
sbb
dec
(bad)
loop
push
jmp
mov
shl
push
jns
std
inc
popf
mov
jmp
sbb
loop
imul
jnp
sbb
push
pop
imul
repz
ss
je
int3
ret
rcr
pop
leave
inc
popf
retf
ins
out
xor
adc
std
(bad)
sbb
fnstenv
sub
sub
loopne
cmp
bound
sbb
mov
mov
pop
mov
mov
xor
inc
jl
pop
ss
mov
xor
addr16
or
push
jmp
cmps
ins
mov
fwait
jb
mov
es
inc
fisttp
lods
or
jmp
inc
xchg
pop
mov
dec
stc
test
popf
push
sbb
and
ficom
cmp
(bad)
test
push
push
mov
retf
fnsave
data16
aam
adc
retf
ins
sbb
jb
sar
add
sti
adc
adc
xchg
jmp
rol
mov
div
push
and
cmps
adc
cdq
in
imul
int3
ret
dec
pop
sti
ins
repnz
add
fst
pusha
popa
pop
cld
or
jecxz
sbb
sbb
jmp
jmp
xchg
or
cmc
cwde
arpl
xchg
adc
xchg
sbb
lock
jno
pop
ss
es
sbb
cmp
retf
or
sbb
xchg
sbb
jb
pop
dec
rcr
sub
push
inc
xor
test
sbb
xchg
xor
xchg
mov
(bad)
leave
hlt
es
mov
push
std
shl
jmp
mov
test
jbe
test
fs
rcr
xchg
sahf
jne
lock
mov
mov
lea
fxch
push
arpl
adc
(bad)
fdivrp
pusha
jae
(bad)
mov
xlat
or
mov
push
jae
mov
and
scas
and
dec
(bad)
cmc
repz
jns
sbb
mov
fdiv
and
mov
add
jge
dec
xchg
in
and
pushf
dec
mov
retf
mov
std
pop
sbb
sahf
dec
imul
jne
shr
push
cli
push
mov
int
cdq
sti
in
mov
pop
dec
jge
lea
sahf
push
sub
retf
cwde
cmp
xor
push
mov
mov
fcomi
shl
cmp
xor
inc
es
adc
int
std
loopne
jbe
sbb
jno
xchg
pop
outs
(bad)
dec
std
pop
mov
mov
dec
dec
rcr
loopne
ss
push
lds
stos
mov
std
push
or
mov
sbb
push
rol
int3
push
lods
lods
stc
cdq
mov
mov
outs
cmp
push
xor
push
cdq
ds
leave
mov
in
adc
mov
cmps
popf
push
adc
add
push
movs
xchg
test
(bad)
leave
jle
loopne
dec
int
jae
aas
stos
xchg
retf
rol
and
mov
push
add
lods
pusha
jle
dec
ret
push
std
sub
ret
inc
repz
push
cmp
mov
xchg
or
inc
ds
cs
lds
adc
dec
in
cmps
dec
mov
ds
mov
add
pusha
cli
push
lea
stos
and
mov
dec
(bad)
sub
mov
and
outs
inc
iret
and
(bad)
je
dec
jns
test
cld
(bad)
cmp
sub
in
imul
dec
sbb
or
xchg
sub
push
inc
push
cdq
outs
jmp
mov
mov
in
cmp
int
xchg
retf
aad
hlt
pop
mov
ins
hlt
popf
mov
xchg
into
movs
daa
inc
and
(bad)
sahf
cmp
in
jbe
xchg
shr
cmp
out
mov
scas
ss
xor
(bad)
neg
inc
jns
out
outs
clc
shr
enter
sub
ret
mov
mov
jbe
int3
fcom
push
fwait
popf
or
call
stos
lds
jle
in
imul
mov
cld
xor
mov
int
push
jge
fwait
cmp
enter
aas
and
(bad)
(bad)
xor
es
mov
rcr
push
jge
fld
mov
xchg
cmove
pop
loopne
sub
sub
and
out
lea
ss
(bad)
and
arpl
test
(bad)
movs
jle
and
xor
xchg
push
push
jnp
jnp
and
cmp
in
mov
out
cmps
cld
adc
jmp
data16
pop
xor
adc
imul
outs
stos
data16
call
mov
xor
sub
sub
pop
push
dec
mov
test
mov
mov
mov
cdq
or
sub
cmps
aam
push
xchg
cmp
push
ror
lods
sub
fbld
or
mov
sbb
in
push
dec
fst
mov
pop
cld
lds
push
rol
lahf
mov
outs
or
mov
xchg
jo
lods
mov
and
xchg
fwait
dec
cs
jae
outs
lds
lods
inc
pop
cmp
lock
cmps
jo
movs
mov
(bad)
jl
push
popf
ds
push
jns
sub
xchg
or
pusha
dec
cmp
sub
push
addr16
mov
lods
repnz
push
mov
sub
cdq
adc
mov
mov
push
gs
fisub
scas
sbb
int
adc
ja
xchg
loope
cmc
call
in
neg
jl
cs
enter
daa
arpl
test
rcr
mov
(bad)
cmp
out
out
popf
cwde
lea
inc
inc
adc
repnz
nop
cmps
sbb
dec
cmp
push
fcmove
lods
ss
jbe
inc
std
mov
in
jne
cmp
cmps
aad
push
xchg
outs
jle
(bad)
jge
pushf
mov
mov
inc
add
sti
mov
aad
loop
sub
xchg
adc
push
mov
add
lahf
(bad)
jecxz
inc
mov
adc
call
mov
cmps
xrelease
cmp
arpl
sar
(bad)
add
in
pop
mov
in
dec
cmp
jns
dec
or
imul
jge
out
nop
imul
sbb
ds
xchg
aas
cmps
and
fs
daa
jne
dec
(bad)
pop
in
(bad)
adc
xor
adc
pop
(bad)
(bad)
(bad)
add
lea
lahf
xchg
adc
mov
outs
add
and
dec
pop
(bad)
imul
adc
fcomp
and
pop
adc
aas
sub
(bad)
or
and
or
retf
ins
retf
and
add
std
aaa
bnd
cmp
cmps
or
add
sbb
pushf
out
and
jbe
push
push
sub
or
xchg
pop
cmps
jne
xchg
jecxz
(bad)
adc
mov
sub
data16
mov
add
xchg
dec
xchg
xchg
not
push
jne
jns
mov
sbb
popf
or
sub
lods
mov
ud1
leave
(bad)
fsubr
lods
jg
xor
lods
ins
xor
mov
rcr
mov
dec
out
mov
push
idiv
push
fs
add
int
fisttp
dec
dec
inc
mov
cmps
push
xlat
repz
scas
pushf
push
jno
push
es
add
mov
dec
shl
pop
hlt
sub
xlat
pop
sbb
jge
ficom
cli
hlt
es
push
movs
inc
arpl
cmp
or
shl
mov
mov
pushf
mov
scas
test
in
mov
outs
or
imul
xor
add
iret
cmp
xor
and
iret
or
pop
mov
test
jge
fsubrp
pop
pop
lods
fisttp
add
fs
mov
inc
jecxz
cmp
push
ins
scas
fild
mov
es
adc
xor
mov
sub
(bad)
aad
test
popf
jns
(bad)
mov
sahf
iret
data16
adc
cmps
aad
dec
mov
ins
(bad)
mov
out
mov
push
and
jle
add
xor
ds
(bad)
adc
cdq
out
push
cs
jne
lods
imul
in
mov
xchg
inc
xchg
mov
loop
(bad)
movs
fstp
ins
out
jge
leave
movs
popf
fidiv
inc
xor
dec
adc
int
sbb
cs
es
push
fs
ds
pop
mov
lahf
test
xchg
icebp
cmps
aam
out
(bad)
mov
ins
lods
jge
(bad)
out
fst
xchg
jbe
and
in
sbb
aas
or
push
dec
out
push
jne
je
push
es
je
paddusw
in
(bad)
mov
mov
cmps
rcl
cmp
test
jge
lea
fucomip
test
jbe
data16
scas
xchg
xchg
sub
das
sbb
push
pop
push
retf
ss
bound
push
and
(bad)
std
jg
and
jnp
movs
(bad)
mov
into
out
lea
and
inc
fst
push
mov
sbb
dec
cmps
leave
pop
aad
mov
adc
les
lea
ds
int
cdq
adc
mov
mov
cmps
mov
mov
sahf
test
jne
inc
movs
jnp
xor
fnsave
cld
mov
or
cmp
pop
mov
cmp
into
jle
xchg
dec
fisttp
js
cmc
in
stos
aad
mov
sbb
push
jge
add
jmp
jns
nop
mov
in
sbb
(bad)
movs
add
xchg
cs
dec
std
es
sub
int3
and
mov
xchg
aas
bound
mov
sbb
add
clc
and
xor
iret
mov
mov
data16
jp
outs
inc
cmc
rcl
test
popf
ss
scas
push
sti
jne
enter
push
cmp
aad
shl
ret
ins
out
push
(bad)
rcr
and
push
popf
fs
cmp
sbb
inc
pop
pop
add
shl
stos
mov
adc
into
xor
cmp
fcmovnu
repnz
(bad)
mov
ins
call
cmp
stos
or
loop
jbe
sbb
xchg
jmp
jmp
xchg
dec
add
sbb
out
stos
inc
sub
dec
sub
in
lods
mov
retf
outs
(bad)
lds
ret
cmp
jnp
sbb
clc
push
je
mov
mov
and
pushf
mov
sbb
mov
ins
mov
popf
shl
sub
push
cmp
fistp
pop
fistp
leave
imul
pop
inc
out
arpl
xchg
push
mov
sub
and
lods
outs
aad
int3
fdivr
in
mov
sbb
(bad)
sbb
sbb
push
jne
mov
scas
push
sti
test
adc
mov
pop
ret
shl
lea
push
jmp
int
mov
dec
jns
dec
sub
push
mul
mov
dec
aam
push
inc
push
sti
mov
inc
sbb
(bad)
dec
mov
lock
imul
add
jmp
stos
sub
jbe
cmp
repnz
mov
cmps
rcl
mov
jnp
fwait
xor
scas
xchg
xchg
bnd
nop
repz
or
sub
popf
mov
inc
mov
std
enter
mov
jmp
push
inc
(bad)
rcr
leave
pop
fist
ds
mov
ret
adc
mov
push
jge
stos
test
fistp
mov
add
pop
inc
retf
xchg
push
das
cmps
in
fimul
mov
sbb
shl
ss
scas
push
sti
pusha
and
or
cmc
lahf
es
jge
sub
and
add
mov
sub
xchg
sbb
dec
ret
loopne
sub
add
push
cmp
sbb
push
aad
sub
stc
cs
(bad)
test
fs
jb
movs
or
cld
cdq
std
jle
xchg
mov
dec
(bad)
add
out
fisttp
es
xor
push
mov
outs
xchg
sahf
or
pusha
push
xchg
dec
cmp
jecxz
out
repnz
mov
inc
push
sbb
add
dec
or
sub
fistp
mov
jno
pop
lods
fidiv
sti
mov
(bad)
in
or
dec
mov
dec
pop
call
adc
call
sub
jbe
jmp
push
fistp
sub
(bad)
fwait
mov
sbb
sti
enter
lods
dec
inc
push
or
sbb
dec
retf
std
out
dec
sub
sbb
in
push
dec
inc
popf
fidivr
inc
xor
imul
mov
add
dec
dec
push
loopne
pop
pop
(bad)
push
xchg
inc
lods
loopne
sbb
add
cmps
pop
xchg
push
cmp
popf
xor
ss
aaa
inc
push
cdq
inc
xor
sbb
shl
mov
inc
lea
jns
xor
fstp
sbb
js
sbb
cmps
pop
ret
adc
call
push
scas
sub
jns
cmp
mov
aad
sub
dec
jmp
outs
xchg
mov
(bad)
in
jmp
xchg
add
adc
lds
or
add
stc
or
add
jae
arpl
xor
jmp
rcr
nop
ss
js
adc
mov
jmp
push
jno
test
test
mov
cmp
pop
cmp
loopne
lock
add
add
xor
jo
bnd
mov
push
cmp
sub
jge
add
lock
jge
es
or
popf
mov
mov
out
pop
cmp
sti
jb
jge
leave
rcr
mov
adc
imul
cmp
or
imul
std
mov
jns
in
test
cmp
xchg
jbe
pop
sub
push
mov
aas
lea
fsub
test
xor
xor
inc
bnd
mov
sar
mov
jo
inc
cmps
xchg
mov
clc
sbb
dec
jnp
mov
adc
add
adc
sbb
inc
mov
stc
or
mov
push
enter
loope
sbb
xchg
inc
sbb
pop
add
icebp
add
adc
cmp
jecxz
sbb
jb
bound
int
adc
pusha
cdq
jo
cmp
sub
sbb
mov
pop
inc
push
popf
mov
and
inc
add
shl
mov
mov
push
adc
lods
loopne
xchg
xor
sti
pusha
sub
outs
out
ror
out
dec
mov
fadd
stc
fcomp
cmc
fst
cld
push
push
mov
mov
repnz
loope
pusha
jecxz
sub
mov
jmp
push
repnz
out
xor
dec
fisub
sbb
mov
pop
mov
jb
xor
fiadd
int3
push
adc
adc
into
(bad)
pop
jg
in
inc
lea
mov
jbe
cdq
jmp
jb
jp
and
rcr
ins
cdq
jnp
fidiv
fisttp
and
dec
jmp
js
adc
jge
add
adc
call
ret
pusha
and
xchg
or
cmp
cmps
sub
fnstenv
into
jnp
into
loop
mov
mov
dec
push
mov
sar
or
pop
imul
sub
fld
jae
es
xchg
jns
and
scas
cmp
cmps
sbb
stc
(bad)
mov
push
sbb
mov
lods
repnz
push
arpl
xchg
out
pop
sub
mov
push
mov
jmp
imul
repnz
fldenv
cdq
nop
sbb
enter
and
lods
push
ja
xchg
add
inc
shr
ret
push
sub
and
gs
bound
xor
aad
push
(bad)
cmp
xchg
jne
stos
cmp
pushf
inc
popf
data16
fcmovnu
xchg
int3
sti
in
xor
cmp
push
push
int
(bad)
sub
cs
push
pop
mov
int3
retf
and
adc
cmp
js
test
jecxz
dec
shr
cmps
jne
lock
out
adc
sbb
or
pop
mov
or
sahf
xchg
and
retf
mov
xor
sbb
imul
pop
mov
jnp
sub
stc
jne
lods
es
mov
add
cmps
sbb
mov
leave
pop
cmps
xchg
das
cmp
jne
popf
mov
ffree
xor
jnp
rcl
adc
ss
sub
mov
xchg
leave
std
jg
fisttp
ss
loopne
lods
cmp
adc
xchg
mov
sub
xchg
xor
mov
icebp
jno
loop
mov
or
adc
lods
in
ins
mov
mov
cdq
cmp
cmp
sbb
lea
outs
sub
repz
cmps
cmp
test
loop
shl
aam
gs
mul
neg
xchg
and
sbb
js
out
scas
jecxz
sub
sbb
(bad)
inc
mov
je
std
sbb
cmps
jecxz
aam
sub
xor
test
or
jno
push
enter
nop
add
rol
add
sub
out
push
into
add
sar
dec
int
dec
out
mov
rol
ss
into
push
mov
jge
cmp
inc
jecxz
jbe
data16
xacquire
add
xor
pop
sbb
jmp
int
mov
cmp
outs
dec
mov
sub
popf
jb
(bad)
ins
mov
push
xchg
(bad)
cmp
push
dec
pop
int
in
adc
test
and
pop
jnp
ins
jge
pop
mov
ss
push
xlat
push
int
or
loop
std
xchg
inc
mov
imul
or
push
cmp
inc
lods
mov
sub
xchg
repz
cwde
pop
nop
jno
rcl
mov
out
(bad)
les
cmc
add
cmp
jle
add
jbe
dec
std
mov
neg
repnz
xor
shr
imul
les
js
pop
rcr
cmc
sbb
mov
mov
cmp
mov
out
fst
enter
mov
mov
loop
push
imul
dec
xor
xchg
out
push
popa
clc
lods
or
adc
jo
loop
cmp
and
mov
push
fmul
dec
push
or
sahf
out
addr16
addr16
repz
or
pop
mov
dec
cmp
jp
push
mov
fmul
cwde
int3
data16
adc
cmps
arpl
push
sub
xchg
push
adc
mov
lods
lods
mov
add
or
mov
ja
xchg
rol
adc
sbb
rcr
add
in
jbe
mov
jp
or
scas
loope
popf
in
pop
call
push
push
fcmovne
int
dec
(bad)
data16
sub
(bad)
push
sbb
outs
and
(bad)
cmc
fcomp
jmp
ret
fnsave
in
xchg
std
xchg
xchg
sbb
pop
movs
dec
sbb
lds
sub
push
test
int
sbb
repnz
shr
(bad)
dec
add
ins
fidiv
(bad)
adc
mov
ret
push
outs
imul
and
push
mov
in
out
mov
jbe
call
rdtsc
cmp
imul
(bad)
dec
xor
jge
push
popa
jmp
xor
add
in
in
push
jns
mov
xchg
je
mov
popf
pushf
xchg
int
fdivrp
in
arpl
jmp
dec
mov
leave
retf
sub
mov
lea
imul
data16
bnd
in
sub
test
ins
not
int
stc
hlt
call
stos
or
mov
push
test
dec
or
adc
pusha
mov
mov
repz
sti
cmps
cmps
sbb
push
xchg
out
adc
push
ja
dec
fnsave
inc
jo
inc
mov
cmp
call
mov
push
mov
call
fistp
in
jmp
(bad)
sbb
fwait
mov
aam
add
mov
xor
es
fistp
cmp
vmwrite
mov
push
rcr
jge
mov
adc
cmp
(bad)
in
cmp
ret
loop
push
(bad)
test
push
sub
adc
es
cmp
cmp
adc
sub
jge
mov
mov
add
fnsave
data16
ret
mov
movs
dec
in
push
inc
(bad)
push
popf
imul
sbb
retf
nop
sti
dec
ret
pop
jecxz
stos
pusha
sti
mov
clc
lods
imul
mov
retf
mov
or
mov
pop
shl
stos
adc
add
push
sub
xor
and
cmp
data16
push
lea
mov
stc
lea
popf
inc
test
add
call
mov
dec
jge
add
inc
jnp
inc
fadd
leave
data16
adc
xchg
test
aam
mov
neg
and
mov
std
in
adc
add
pop
push
(bad)
pop
and
mov
cs
and
(bad)
mov
or
cmp
cmp
ins
gs
adc
(bad)
jne
movs
outs
mov
out
sbb
das
arpl
sahf
int
xchg
cmps
std
outs
mov
mov
in
adc
jbe
mov
push
sbb
xchg
addr16
test
xchg
aas
lods
cmps
dec
pop
or
shl
popf
stos
fdivr
ror
and
cdq
call
icebp
xchg
cs
pop
pop
aaa
popa
outs
mov
imul
inc
fldcw
data16
sahf
jo
sub
xlat
shl
and
xchg
sub
inc
stos
ss
sub
xor
pop
jecxz
sti
sub
(bad)
mov
sbb
fs
sahf
cmp
in
punpckhbw
sub
add
jno
jge
leave
out
mov
es
add
jae
mov
dec
loope
inc
loopne
scas
pusha
jbe
(bad)
(bad)
or
or
jb
pop
mov
int
adc
xchg
xchg
cmp
mov
push
pop
or
push
aaa
es
adc
int3
test
outs
ins
xor
loope
xlat
movs
sub
std
(bad)
pop
push
ds
jge
rcl
dec
(bad)
fsubp
cdq
int3
inc
ss
sbb
push
add
icebp
mov
sti
js
sub
sbb
sub
(bad)
jmp
add
sbb
sub
(bad)
xchg
jle
sub
xchg
ins
bound
scas
and
(bad)
adc
mov
sbb
fdiv
cli
inc
mov
cmp
mov
ins
out
xchg
repz
or
(bad)
fisttp
stc
xchg
xor
sahf
mov
(bad)
imul
cmp
sub
repz
jae
and
fwait
pop
push
outs
jnp
pop
aaa
inc
inc
push
push
js
sub
imul
xor
mov
ins
popf
and
mov
adc
std
fistp
ret
fnstsw
sub
or
push
test
xchg
out
dec
test
sub
movs
rcr
sub
push
scas
xor
push
daa
push
stos
test
and
dec
add
rcr
xchg
movs
fld
mov
out
ret
sar
or
sub
or
clc
pusha
mov
lods
pop
mov
out
pop
add
popf
(bad)
loopne
xor
inc
add
stc
mov
fnstsw
sub
push
pop
jecxz
es
jb
adc
scas
lea
push
popf
gs
popa
mov
loope
loop
xchg
scas
outs
out
push
lea
popf
imul
test
ja
pop
pushf
imul
mov
out
fwait
dec
outs
(bad)
out
jge
push
out
dec
loopne
dec
sbb
jmp
jge
movs
loope
jp
and
jge
cs
push
jo
test
push
push
adc
das
icebp
cmp
movs
cmp
push
mov
pop
mov
or
test
sub
leave
or
scas
mov
or
stc
jno
std
and
inc
sbb
pop
in
outs
mov
mov
dec
(bad)
push
cmp
cmc
push
jp
adc
daa
lock
data16
or
in
fimul
sub
fwait
push
push
enter
ss
popf
mov
mov
loope
dec
lds
dec
mov
cli
xor
mov
xor
pusha
push
sbb
mov
jbe
rol
rcl
adc
repnz
sbb
es
and
out
jbe
sub
dec
js
movs
xchg
push
mul
outs
popa
pop
jnp
(bad)
fcmove
scas
mov
popf
jmp
shl
inc
pop
stos
push
dec
jmp
sbb
inc
inc
fstp
push
jbe
or
mov
(bad)
(bad)
out
sbb
push
ret
lea
fisubr
xor
push
mov
sub
sbb
mov
sub
aad
mov
xchg
mov
push
or
(bad)
int
arpl
cmc
pop
or
pop
cmp
into
adc
test
cmp
lea
xor
mov
std
push
bound
rcl
push
inc
inc
sbb
loopne
ins
(bad)
fiadd
xchg
jae
cs
ins
mov
sub
xchg
pop
xchg
jmp
cmc
in
lods
(bad)
mov
popf
lea
adc
out
arpl
push
mov
pop
stc
shr
cmps
pop
pop
mov
repnz
dec
mov
lea
bound
inc
ss
ret
test
adc
hlt
sbb
jmp
enter
sbb
adc
cmps
jmp
mov
js
xchg
popf
ins
or
icebp
outs
es
or
and
adc
sbb
xchg
stc
or
pop
jbe
ins
and
cmp
call
dec
pop
jle
fs
xchg
dec
pusha
cmps
cmp
mov
test
pop
or
adc
std
jno
std
lahf
or
mov
fwait
dec
int3
mov
jmp
fld
out
xor
scas
push
cmps
js
sub
fld
pop
mov
mov
inc
enter
jns
in
adc
jnp
lods
mov
std
adc
pop
jbe
cmps
ins
ds
mov
(bad)
mov
movs
add
mov
cs
xchg
or
pop
ss
(bad)
shl
xchg
mov
scas
xor
mov
lock
pop
xchg
mov
stos
mov
div
idiv
push
fld
mov
fisttp
xor
inc
jecxz
ficomp
inc
and
out
inc
push
cld
cdq
mov
fmul
and
in
std
scas
push
outs
adc
imul
mov
jb
ror
push
es
dec
dec
inc
and
dec
xchg
(bad)
pop
mov
cmps
push
xchg
jb
popf
mov
adc
cwde
ficom
aaa
in
sbb
add
(bad)
or
cmps
jl
cmp
aam
div
push
aaa
mov
mov
push
aas
icebp
sub
jmp
jmp
(bad)
loope
and
jl
push
(bad)
add
int
fst
inc
xchg
shl
rcr
(bad)
dec
sub
jge
ret
jge
inc
pop
popf
pop
mov
add
push
out
sbb
xchg
mov
jge
lea
leave
xor
fist
std
std
and
rol
pop
cmp
pushf
ins
sbb
push
and
jne
ins
aam
push
scas
xchg
(bad)
fistp
sub
rcl
lea
jo
es
inc
inc
sbb
sbb
data16
push
mov
push
aam
(bad)
sbb
jmp
(bad)
xor
push
test
mov
js
mov
(bad)
test
fcomp
les
and
inc
stc
jbe
xor
ror
cmps
push
ret
dec
xchg
sub
lods
data16
mov
arpl
std
cld
sbb
add
hlt
dec
out
inc
rol
leave
mov
push
frstor
inc
data16
sbb
dec
mov
(bad)
cmp
or
repz
pushf
outs
lahf
adc
inc
sub
lea
jae
stos
mov
sbb
cmc
dec
xor
test
mov
gs
mov
sahf
retf
pushw
jns
hlt
repnz
pop
ds
(bad)
mov
out
mov
push
and
jle
add
retf
imul
xchg
push
cs
jne
lods
mov
cli
int
cdq
aad
mov
xchg
cwde
xchg
mov
loop
(bad)
movs
in
bound
jge
leave
movs
popf
fimul
inc
xor
dec
adc
adc
jns
dec
cs
(bad)
out
push
fs
ds
add
lahf
test
xchg
xchg
out
(bad)
mov
ins
je
pop
(bad)
out
fst
pop
inc
gs
and
in
sbb
aas
or
push
dec
out
push
fld
je
push
es
jae
xlat
fucom
in
(bad)
mov
mov
cmps
in
movs
cmp
test
jge
lea
fucomip
test
jbe
data16
scas
xchg
xchg
sub
das
sbb
push
pop
push
add
cmp
push
and
sahf
std
jg
and
mov
jne
mov
into
out
xor
iret
stc
cmc
int
stc
jbe
and
ret
lds
pop
pop
sub
(bad)
test
push
stc
mov
mov
cwde
outs
add
icebp
fs
lods
mov
popf
jno
and
add
add
or
pop
sub
(bad)
or
out
mov
mov
dec
mov
data16
lock
cmps
mov
mov
popf
leave
leave
in
lods
jp
and
iret
pop
mov
mov
xchg
dec
in
clc
ds
sbb
xchg
gs
push
jb
mov
inc
jb
cld
cmp
(bad)
retf
xchg
jecxz
adc
aaa
aaa
out
stos
jge
push
(bad)
popf
mov
bound
retf
sbb
xor
or
sti
sub
in
xchg
data16
mov
push
mov
mov
jmp
data16
inc
push
or
out
shr
sar
not
out
jae
sbb
fdivr
std
xchg
inc
ret
push
data16
mov
mov
jge
xor
sbb
inc
push
test
dec
push
test
icebp
push
loop
and
fimul
sbb
leave
out
aaa
es
stc
sbb
cmps
test
in
cdq
call
push
das
cmc
pop
cmp
fwait
dec
or
out
inc
fld
mov
int
xor
push
xor
mov
(bad)
sbb
es
int3
(bad)
popf
mov
loop
out
cmp
xor
inc
add
xchg
dec
imul
dec
fisttp
push
pop
lods
es
and
inc
cdq
jbe
mov
pop
repnz
xchg
or
loop
jb
push
inc
dec
int
push
dec
test
inc
(bad)
icebp
test
ret
and
sbb
or
jb
lock
and
inc
push
jbe
mov
dec
loop
and
jns
or
ror
cmp
adc
lds
adc
and
test
or
jp
dec
vcmpss
cmp
mov
cwde
xchg
mov
stos
stc
test
movs
std
xchg
sub
push
ret
into
movs
push
int
sub
jae
jbe
push
movs
pop
cwde
jo
cmps
inc
xchg
mov
ret
sub
xchg
pop
mov
leave
push
fdivr
pop
fmul
fcomp
je
pop
sbb
pop
inc
cmp
inc
push
add
scas
out
mov
aad
popf
ins
fnstcw
fwait
mov
sub
push
xchg
repz
jecxz
(bad)
dec
mov
or
xor
ss
out
lock
movs
push
push
ja
data16
ror
js
mov
pop
xor
mov
xchg
push
push
pusha
fcomp
shl
sti
pause
repnz
cs
rcl
popa
gs
imul
jnp
sahf
pop
and
repnz
ret
push
shl
add
pop
jb
loopne
push
xor
std
fisttp
dec
dec
shl
cmp
sub
(bad)
pop
add
bound
jbe
mov
rcl
sbb
(bad)
adc
mov
sub
push
xchg
bound
test
test
std
shl
sbb
adc
or
jo
neg
pusha
test
test
inc
add
jbe
test
xchg
mov
cmps
mov
adc
lds
dec
stc
cwde
ss
dec
stc
push
iret
fnsave
or
xchg
mov
frstor
shl
into
lea
cwde
push
jge
push
sbb
mov
int
inc
imul
pop
cmp
sbb
mov
(bad)
cld
into
aaa
cmp
mov
add
(bad)
mov
ret
mov
gs
mov
pushf
out
bound
addr16
enter
cmc
(bad)
in
rcr
inc
push
scas
imul
or
out
aad
add
inc
mov
je
and
in
ja
shl
cmp
imul
movs
mov
inc
mov
lods
(bad)
stc
mov
in
cdq
stos
xchg
dec
inc
loop
sub
xlat
sbb
scas
out
push
fs
popf
out
lods
arpl
clc
xor
jbe
push
mov
bound
add
stc
int3
jb
es
xchg
int
repnz
cdq
jle
loope
loop
imul
pop
imul
repnz
in
pop
call
int
cwde
push
in
movs
and
or
jecxz
(bad)
mov
add
ins
call
jb
mov
xor
xchg
mov
ins
out
push
repnz
cmc
outs
stc
in
int
fst
push
std
push
in
fistp
xchg
and
out
push
lea
pop
lods
in
bswap
inc
cdq
jbe
and
mov
xchg
cmp
xor
cmp
bnd
es
xchg
inc
frstor
jno
dec
cmps
int
repnz
(bad)
ficomp
xchg
cs
fnsave
repnz
ficom
cmps
cmp
sahf
ins
and
mov
repnz
push
push
movs
test
stos
std
xchg
dec
out
sbb
(bad)
test
repnz
out
repnz
popf
mov
test
das
in
mov
ret
jne
out
inc
fs
dec
cs
push
sub
popf
frstor
repnz
data16
push
or
fisttp
repnz
les
lods
out
mov
mov
aas
std
xchg
mov
cmps
(bad)
and
aam
in
cmp
(bad)
out
call
mov
adc
jbe
outs
js
(bad)
mov
movs
xor
imul
mov
adc
outs
fldenv
dec
mov
dec
fcompp
retf
mov
ins
jbe
and
or
mov
sub
cmp
xchg
not
add
mov
jne
test
adc
rcl
ret
sub
dec
in
ds
push
rol
shl
lods
inc
inc
mov
fstp
push
xchg
rol
(bad)
adc
(bad)
or
out
fild
rcl
pop
loope
push
movs
push
test
dec
push
test
dec
xchg
adc
sub
mov
push
fimul
test
mov
arpl
std
cld
sbb
adc
out
jl
push
enter
pop
inc
(bad)
adc
adc
mov
pop
xchg
std
into
mov
push
sub
adc
daa
imul
or
ins
cli
xchg
aam
xchg
mov
ds
adc
popf
mov
fnstcw
fsub
push
popf
popf
and
jle
ror
cmps
mov
lahf
pop
scas
pop
fisubr
inc
ins
popf
int
xor
push
fstp
pop
(bad)
pop
jl
cmps
aad
and
hlt
sbb
mov
inc
push
mov
lea
es
std
jle
out
sbb
sub
jge
lea
jmpw
push
and
test
test
dec
cmp
cmp
rcl
mov
sbb
(bad)
out
popf
pop
lods
cwde
jae
fistp
std
jp
jle
repz
jns
adc
mov
add
adc
(bad)
cmp
and
rol
fistp
sub
rcl
lea
fisub
dec
mov
sub
jp
or
xrelease
dec
idiv
push
jge
das
pop
scas
lods
mul
push
and
jle
add
scas
sbb
ds
(bad)
adc
in
xchg
push
cs
jne
lods
imul
xchg
inc
xchg
(bad)
movs
jmp
leave
movs
popf
fiadd
inc
xor
dec
adc
retf
sbb
jne
cs
and
mov
fs
ds
or
sbb
sbb
lahf
test
xchg
in
aam
out
(bad)
mov
ins
stos
jge
(bad)
out
fst
add
xchg
in
sbb
aas
or
push
inc
out
push
add
push
jp
or
mov
mov
cmps
loope
movs
cmp
test
jge
lea
popf
fucomip
test
jbe
data16
scas
xchg
call
sbb
push
push
push
les
gs
bound
push
and
adc
jg
and
jne
mov
mov
into
out
cmp
iret
stc
cmc
int
icebp
jbe
dec
xchg
in
mov
xchg
dec
retf
sub
(bad)
cmps
push
fidiv
loope
push
adc
xor
push
or
dec
push
(bad)
or
mov
test
popf
jo
xor
idiv
or
mov
rcl
or
stc
jl
push
xor
(bad)
repnz
imul
jle
pop
dec
cmp
cmc
sub
clc
push
add
and
pop
sub
test
std
push
fxch
xchg
jmp
mov
or
lea
sahf
xchg
and
repz
or
jbe
cdq
std
jecxz
mov
mov
bound
hlt
sub
lock
lea
mov
jp
cmps
xor
imul
xor
push
inc
xchg
idiv
push
dec
mov
xor
lahf
std
inc
push
shl
std
cmps
fs
dec
xchg
ins
mov
push
out
lods
inc
push
ins
push
cwde
jbe
jmp
xchg
sti
ret
sbb
xchg
mov
fwait
and
outs
cmp
adc
ss
jne
fisubr
(bad)
cld
jmp
sbb
xchg
nop
in
jecxz
xchg
ror
mov
repz
fcom
fst
mov
jle
xor
retf
pop
sub
dec
mov
cmp
fiadd
dec
jbe
ins
es
and
pop
aad
mov
lods
sahf
xor
popa
cmp
(bad)
test
arpl
jae
jnp
push
clc
or
dec
and
in
aas
aas
movs
int3
adc
push
inc
add
lods
xchg
and
test
jge
ins
or
neg
shl
inc
cmp
mov
dec
gs
dec
scas
imul
xor
or
std
mov
mov
mov
sbb
lahf
outs
movs
mov
and
loop
mov
cmp
push
dec
pushf
neg
jecxz
iret
add
push
jae
movs
popf
and
and
xor
cmps
ds
sbb
push
sar
xchg
rcr
ror
mov
cmp
(bad)
lods
cs
sbb
fs
int
and
in
stos
dec
or
dec
cmp
cs
out
cwde
pop
mov
aad
mov
push
ret
fldcw
sbb
or
cmp
or
(bad)
(bad)
cld
dec
clc
adc
cmp
cld
sbb
pop
pop
jl
in
or
or
push
jl
(bad)
(bad)
popf
fisubr
scas
and
data16
sbb
dec
mov
into
cmp
dec
cmp
add
stc
int3
jb
es
xchg
int
mov
in
pop
add
add
cmp
test
push
loopne
push
lea
or
cdq
clc
xchg
xchg
xchg
xchg
(bad)
sbb
push
adc
xchg
int
cdq
std
test
std
iret
sbb
sbb
clc
mov
dec
repnz
push
push
jb
arpl
jbe
movs
std
shl
xchg
mov
dec
push
pop
jge
ins
cmp
lea
add
arpl
call
enter
mov
loop
xchg
pusha
mov
out
aad
push
mov
xor
mov
in
mov
out
cmp
cmp
fst
pop
jne
ins
es
mov
mov
cmps
sbb
cmp
xchg
out
aad
push
bnd
fnstcw
xchg
test
test
xchg
sbb
dec
adc
sub
popf
frstor
repnz
data16
cli
or
gs
dec
(bad)
jmp
push
dec
fld
lods
jp
adc
aas
std
xchg
test
cmps
dec
adc
pop
scas
ins
jno
jle
lds
lods
es
jbe
mov
sbb
adc
cmp
push
pop
(bad)
hlt
es
push
in
movs
sbb
mov
jecxz
(bad)
mov
add
ins
pop
jge
enter
dec
jg
push
gs
repnz
xchg
mov
ins
out
push
repnz
cmc
outs
(bad)
in
int
fst
push
std
push
out
fistp
xchg
and
out
or
in
bswap
inc
xor
xchg
into
gs
mov
inc
cmp
xor
dec
push
bnd
es
xchg
inc
fst
or
cmps
ins
(bad)
repnz
(bad)
jmp
sub
fnsave
repnz
ficom
cmps
cmp
sahf
ins
and
and
push
push
mov
std
xchg
dec
out
sbb
(bad)
fld
repnz
mov
jmp
mov
push
in
mov
imul
or
icebp
inc
xlat
mov
pop
mov
pop
jns
add
hlt
imul
inc
mov
std
ror
cmps
ret
cmp
(bad)
jb
push
cmp
xor
(bad)
ret
dec
xor
cmp
xchg
in
in
js
(bad)
lods
pushf
jl
xor
lea
xor
jne
inc
fadd
int
pusha
and
sbb
sub
sub
cmp
out
push
cmp
(bad)
aad
xchg
into
frstor
mov
fucomip
jns
pop
mov
mov
mov
xchg
add
xor
mov
cdq
ja
or
mov
xchg
dec
push
mov
inc
popf
loop
daa
and
clc
rol
xor
push
add
jmp
mov
jae
mov
push
(bad)
rcr
mov
cmp
jecxz
dec
imul
mov
repnz
sbb
or
rcr
mov
fnstcw
add
(bad)
test
stc
into
mov
pop
sbb
clc
and
lds
push
stc
(bad)
les
mov
gs
hlt
adc
ins
jne
scas
sbb
mov
mov
scas
sbb
repnz
sub
push
dec
or
xor
rcr
dec
xor
mov
jns
cmps
mov
cmp
mov
add
fsub
fnstcw
push
int3
(bad)
cwde
xor
mov
mov
loop
push
mov
fidiv
int3
mov
scas
lea
sbb
mov
rcr
cdq
mov
repnz
out
sti
(bad)
jmp
pop
push
push
pop
push
scas
es
inc
xchg
inc
xor
ret
push
and
inc
ret
xchg
or
xchg
icebp
fiadd
pop
jecxz
out
xchg
jno
mov
xor
jbe
jmp
push
dec
jp
repz
(bad)
mov
xchg
and
lods
test
add
push
sbb
xchg
sbb
sbb
ss
arpl
loop
retf
and
or
jo
mov
pop
mov
pop
mov
enter
popf
mov
out
stc
fnstcw
or
jbe
sub
sahf
pop
cmp
mov
mov
lds
lods
loopne
nop
popf
(bad)
rol
adc
test
jmp
shl
mov
xor
inc
xor
fnsave
test
or
push
cs
sti
sub
jge
add
jge
and
mov
jmp
and
imul
scas
jge
ins
js
inc
pop
push
mov
or
add
xor
mov
loop
push
mov
dec
mov
repz
push
bound
push
arpl
mov
jmp
sbb
push
pop
sti
cmps
std
hlt
xchg
sbb
adc
jb
inc
jnp
popf
xchg
mov
inc
mov
mov
loopne
add
popa
pusha
imul
stos
call
push
ret
sbb
xlat
inc
dec
dec
jge
mov
mov
push
xchg
(bad)
(bad)
sbb
add
push
cmps
cmp
dec
and
pop
lock
inc
int3
and
aad
jmp
dec
sbb
addr16
jmp
push
arpl
xchg
xor
or
scas
ja
pop
movs
mov
jecxz
mov
arpl
stc
pop
jae
stos
loope
popf
inc
push
mov
or
sub
dec
add
or
jmp
inc
gs
test
in
in
std
fwait
or
fcmovnu
pop
dec
shl
popf
mov
popf
dec
dec
scas
mov
jp
add
cwde
xchg
xor
(bad)
int
mov
dec
xor
hlt
scas
lock
and
mov
lods
fnstenv
sub
fstp
dec
xchg
daa
cmc
mov
loop
pop
add
cmp
cmc
push
ret
push
jae
bound
fidiv
pop
mov
push
adc
icebp
jns
mov
cmp
push
cmc
stc
fdivr
adc
test
loop
lods
cmps
jo
mov
idiv
fild
leave
and
outs
ins
inc
add
(bad)
in
dec
cmps
ret
into
dec
sbb
sbb
(bad)
stc
ret
jmp
mov
add
or
sti
cdq
out
addr16
mov
lods
repnz
jbe
xor
addr16
jmp
xchg
cmps
aad
mov
shl
xchg
and
jmp
fstp
std
aaa
bnd
cmp
call
pop
or
ins
push
pusha
pop
(bad)
and
ss
(bad)
leave
fist
adc
cmp
sbb
inc
push
bound
movs
cs
jbe
dec
fadd
and
into
push
mov
mov
or
hlt
pop
enter
ins
adc
std
std
loope
jbe
or
mov
into
call
sub
popf
dec
push
jmp
adc
cmp
out
scas
xor
ss
ins
mov
aam
push
fsub
sbb
mov
xchg
sbb
in
rcr
aas
inc
aas
mov
sbb
js
test
xchg
movs
cs
aad
mov
mov
cmc
inc
sbb
fimul
ins
add
(bad)
fdivp
gs
add
jae
imul
mov
jns
lea
daa
jl
xchg
mov
mov
xchg
pop
xchg
sub
or
fild
pushf
jb
lods
mov
xor
or
shl
data16
sub
stc
les
inc
inc
xchg
or
or
in
das
xor
mov
sbb
out
sub
cmp
bound
fld
inc
and
sbb
or
pusha
ds
xlat
jnp
call
mov
xor
ja
xchg
jne
ud1
jbe
jnp
mov
sub
pop
inc
int
jle
xchg
xchg
cmps
(bad)
aam
pop
out
inc
retf
rcl
scas
std
mov
ret
mov
add
mov
(bad)
call
or
add
push
into
and
xor
xor
mov
cmps
popf
aad
cmp
jge
mov
popf
dec
loopne
mov
xchg
cdq
mov
into
jmp
mov
lea
push
push
fcomp
call
data16
std
imul
mov
lea
pop
xor
lds
cld
ins
add
mov
jbe
mov
cmp
push
add
bound
std
arpl
xor
cmps
std
iret
gs
pop
repnz
and
pop
out
test
push
int3
mov
mov
in
or
cmps
sub
sbb
mov
arpl
loop
arpl
jne
fistp
in
xchg
cwde
xchg
loopne
sub
sbb
and
mov
int
and
lds
loopne
loop
(bad)
dec
cs
sahf
sub
div
fldenv
outs
push
pop
adc
scas
frstor
setns
(bad)
iret
or
sub
cmp
push
cmp
sbb
jne
clc
frstor
sub
movs
add
sbb
icebp
repnz
jecxz
(bad)
mov
repz
mov
mov
xor
mov
fstp
(bad)
or
xchg
cwde
iret
cmp
inc
add
jbe
test
xchg
addr16
sbb
xchg
(bad)
test
push
fist
ss
xor
or
sub
jbe
mov
sbb
(bad)
or
sbb
rol
mul
lods
jae
psubq
jbe
push
cld
mov
push
cdq
pop
pushf
js
sub
aam
mov
push
sti
inc
popf
and
and
imul
mov
adc
mov
xor
push
xor
sub
or
xchg
pop
pop
inc
sbb
and
mov
pushf
out
sar
xor
and
xchg
dec
mov
mov
sbb
cs
retf
fisubr
push
adc
cld
push
cld
mov
imul
xchg
push
cs
jne
lods
(bad)
mov
aad
mov
xchg
aad
icebp
dec
(bad)
movs
icebp
pop
and
cmp
movs
popf
ficomp
mov
adc
and
dec
jns
dec
cs
mov
inc
ds
adc
lahf
test
xchg
mov
pop
aam
out
(bad)
mov
ins
xor
jb
fst
sbb
mov
pop
xchg
in
sbb
aas
or
push
pop
out
push
inc
stc
je
push
es
popa
int
frstor
(bad)
mov
mov
cmps
mov
movs
cmp
test
jge
(bad)
(bad)
(bad)
fucomip
test
jbe
cdq
adc
scas
xchg
sub
sbb
push
dec
push
pop
push
sub
push
and
push
jg
and
in
(bad)
aad
mov
into
out
and
iret
stc
cmc
int
jmp
ret
lds
mov
(bad)
mov
fst
inc
xor
div
outs
pop
adc
add
or
popf
stc
lods
rol
mov
fstp
adc
mov
jle
adc
in
xlat
dec
add
test
xchg
in
aaa
xchg
or
cmp
jecxz
xchg
pop
sti
test
push
repz
pop
test
xor
(bad)
mov
cld
jmp
lahf
mov
push
stos
mov
fidivr
mov
(bad)
clc
add
sti
xchg
sbb
or
popf
es
gs
fsub
shr
arpl
adc
add
sbb
push
shl
xchg
adc
xlat
push
add
inc
lods
cdq
int
std
fs
adc
ret
in
adc
dec
jg
adc
jae
loopne
inc
xchg
pusha
cmp
ret
fld
mov
cmps
fwait
(bad)
lds
push
jno
in
jbe
arpl
lock
push
iret
push
pop
pop
std
jle
pop
xchg
mov
cli
xchg
imul
jp
jl
nop
mov
or
jecxz
and
or
xchg
cmp
mov
and
mov
xlat
mov
cmps
sbb
fdivr
mov
mov
adc
xchg
inc
sbb
ss
inc
sub
adc
popa
cs
fwait
mov
enter
out
in
xchg
lods
cs
cmps
por
(bad)
into
cmp
gs
cmps
sbb
xchg
cwde
clc
adc
outs
(bad)
scas
mov
pop
cmp
jne
mov
add
or
sahf
xor
pop
mov
ror
pop
repz
popf
dec
std
pop
jne
mov
dec
inc
push
idiv
fisub
ret
cld
inc
dec
or
ret
dec
lods
mov
add
mov
les
push
pushf
addr16
adc
pop
mov
outs
pop
sahf
pop
lea
mov
pop
int
cld
xor
sbb
(bad)
dec
fimul
xchg
js
cmp
jmp
out
jle
fdivrp
(bad)
or
inc
mov
aam
dec
aam
add
lea
ins
sub
ror
push
(bad)
in
out
std
xchg
or
or
(bad)
mov
sbb
imul
pop
aad
ss
es
mov
fld
cmps
shr
xchg
in
cs
or
inc
fcmovnu
or
add
inc
pusha
dec
movs
repz
mov
mov
ret
sar
jnp
rcl
adc
adc
pop
pop
(bad)
fld
outs
movs
out
cmovbe
es
cmps
(bad)
loop
inc
xchg
popf
ret
pop
pop
xchg
sub
jle
and
in
or
ja
sahf
or
cmps
jns
enter
xchg
push
jge
fiadd
pushf
mov
inc
inc
add
push
std
imul
lahf
fwait
cmp
mov
bound
loopne
mov
std
clc
cdq
cmp
mov
or
xchg
cmps
pusha
in
pop
pushf
ficomp
cli
scas
aaa
test
cld
cmp
xchg
sub
cmps
mov
(bad)
(bad)
and
cmp
adc
leave
mov
scas
sbb
sbb
cmp
cmps
lds
and
pushf
cli
jne
call
inc
test
mov
jns
dec
std
pop
mov
dec
sar
das
mov
jmp
push
xchg
outs
cli
xor
cmps
mov
lds
jl
jge
and
bound
mov
push
inc
inc
and
fcom
test
repnz
sub
or
and
out
ins
jge
fisttp
add
mov
cmps
pop
icebp
repz
cmp
jge
aaa
sbb
stc
(bad)
imul
xchg
and
into
lds
sti
shr
sbb
daa
push
ss
inc
xchg
(bad)
sub
mov
adc
jge
movd
test
mov
mov
out
jbe
xchg
outs
xor
sub
addr16
lahf
jp
int3
sub
and
xchg
test
imul
cmp
or
repz
(bad)
stc
enter
in
aad
or
mov
mov
cmps
js
dec
or
push
ins
es
enter
lods
aaa
jmp
mov
test
cmps
std
sbb
imul
rep
fld
ret
popf
sahf
call
mov
arpl
in
int
stos
movs
cmps
push
sbb
aaa
xchg
aad
push
(bad)
out
retf
popf
(bad)
in
jp
xchg
cmc
xchg
jge
mov
dec
(bad)
pop
or
adc
leave
cld
(bad)
not
test
and
and
imul
xlat
pushf
ins
sbb
push
iret
lds
lods
ret
outs
push
cdq
arpl
pop
cmp
cmp
cmps
ret
test
jmp
mov
scas
mov
pop
xchg
shl
jmp
sub
mov
addr16
lods
xlat
push
xor
fnsave
cdq
clc
xchg
sar
adc
loop
adc
cmp
idiv
retf
in
push
int
and
ja
or
sub
pop
daa
(bad)
mov
jmp
adc
imul
bnd
sbb
adc
cmp
movs
push
enter
test
or
add
aad
mov
jne
cmps
cmp
sahf
xchg
and
mov
test
in
jb
xchg
dec
out
loop
repz
cmp
mov
sbb
lods
jno
xor
and
out
jns
(bad)
dec
ret
sub
popf
ss
repnz
data16
adc
fisttp
repnz
les
lods
mov
mov
aas
std
xchg
xchg
xchg
repz
pop
(bad)
aaa
adc
pop
fisubr
cmp
lds
es
push
repnz
xchg
or
into
ret
lahf
pop
div
stc
pop
aam
es
push
adc
push
mov
jecxz
sub
fidivr
enter
dec
jg
push
mov
cdq
ds
xchg
mov
ins
out
push
repnz
cmc
leave
outs
ret
int
fst
push
add
fistp
xchg
and
out
repnz
pop
push
in
bswap
inc
sub
and
mov
mov
adc
scas
mov
push
mov
fnstcw
xchg
inc
frstor
jno
(bad)
repnz
cli
out
sub
lahf
mov
cli
add
into
jae
stos
mov
outs
in
in
mov
pop
sahf
sbb
cmp
jns
test
sbb
dec
push
call
adc
repz
adc
xor
xchg
leave
pop
lds
push
lods
and
xchg
into
std
fldenv
sbb
xchg
ret
sub
out
(bad)
jb
fdiv
into
scas
out
inc
call
ret
nop
cmp
and
and
mov
inc
and
mov
add
scas
adc
xchg
fdivr
jns
test
or
jge
xchg
xchg
push
push
fdiv
jbe
adc
cdq
inc
mov
and
out
and
mov
xchg
mov
stc
cmc
mov
xor
mov
inc
xchg
jns
div
dec
xchg
jge
stos
or
lea
pop
mov
and
test
inc
cwde
std
adc
dec
sar
outs
outs
test
lahf
dec
and
psrad
add
mov
and
test
mov
mov
add
jge
jmp
lods
mov
fnsave
loop
jns
int
inc
repnz
dec
sbb
jb
push
pop
push
into
cmp
int
mov
ss
into
or
push
gs
lods
mov
test
enter
push
movs
dec
adc
(bad)
cmp
adc
dec
mov
xchg
mov
pop
dec
dec
imul
and
leave
mov
adc
int
repnz
shl
push
dec
fwait
pop
jne
jmp
push
cmc
stc
inc
push
pop
adc
ror
sbb
(bad)
daa
ror
into
lea
cwde
push
jge
push
sbb
jbe
data16
fnstcw
dec
sub
ret
xlat
outs
movs
ins
outs
adc
xor
xchg
and
test
xchg
loopne
pop
enter
fidivr
jb
push
mov
int3
xchg
std
cmp
ret
cmps
dec
inc
xchg
jmp
dec
scas
mov
inc
leave
and
jae
es
cmp
repnz
jecxz
(bad)
adc
mov
sub
push
and
xchg
std
test
fisttp
sub
inc
mov
dec
gs
pop
ss
adc
inc
test
mov
rcr
adc
pop
ss
ins
cmp
mov
inc
mov
adc
call
mov
cmps
mov
mov
push
enter
sub
mov
sbb
imul
rep
mov
addr16
inc
mov
data16
(bad)
loop
xchg
pop
mov
dec
or
dec
ss
test
in
adc
xchg
dec
out
loop
repz
cmp
mov
sbb
mov
test
das
in
popfw
xchg
bnd
jne
out
jns
(bad)
dec
outs
pop
push
sub
popf
ss
repnz
data16
adc
gs
dec
(bad)
jge
repnz
les
lods
outs
mov
mov
aas
std
xchg
add
(bad)
ss
pop
jmp
jl
lods
es
mov
xchg
push
lahf
pop
div
repnz
in
pop
aam
es
push
adc
loope
repnz
sub
loop
xchg
enter
dec
jg
push
rol
xor
xchg
mov
ins
out
push
repnz
cmc
leave
outs
ret
int
fst
push
add
fistp
xchg
and
out
inc
lea
pop
push
in
bswap
inc
cmp
and
mov
(bad)
cmp
xor
add
fnstcw
xchg
inc
ffree
in
jno
(bad)
repnz
sti
out
sub
xor
lea
mov
mov
cdq
add
pop
jecxz
mov
xchg
ficom
data16
and
addr16
cmp
icebp
mov
sub
movs
mov
sbb
ret
cmp
adc
and
int
leave
repz
inc
mov
pushf
ficom
into
imul
and
push
or
pop
retf
pop
lea
or
ficom
outs
int
mov
and
loope
lahf
or
ins
jb
ficom
popf
ss
leave
imul
fnsave
and
in
cmps
jns
sbb
mov
dec
leave
fstp
je
sub
cmp
jns
or
pop
or
idiv
adc
inc
fsubr
inc
xchg
repnz
adc
sub
ins
out
push
fiadd
ss
std
push
fld
mov
addr16
repnz
jmp
(bad)
mov
outs
lds
push
dec
mov
std
int
bound
stos
pop
fld
sbb
add
jne
or
jb
lods
sub
xchg
test
test
cmp
mov
mov
out
pushf
add
lods
xor
mov
lods
xchg
pop
movs
jbe
push
inc
inc
call
pop
jb
es
fldcw
leave
fld
xor
(bad)
add
mov
jmp
mov
into
cwde
mov
xchg
xchg
jns
pop
pusha
pop
jo
mov
pushf
push
jo
cmp
mov
mov
nop
in
pop
loop
mov
sub
xchg
inc
aam
retf
and
add
xor
in
or
and
add
jns
mov
call
test
sbb
sbb
test
cmp
(bad)
cmp
aaa
xchg
or
mov
int
es
fild
lea
bnd
mov
sub
mov
mov
in
mov
jg
outs
cld
imul
sbb
out
push
(bad)
stc
dec
dec
sub
mov
test
push
mov
push
sbb
shl
adc
loopne
xchg
call
mov
sub
hlt
pushf
or
jecxz
cmp
xor
pop
lods
aam
call
mov
push
inc
xacquire
jb
call
imul
mov
xor
and
aam
les
sub
into
sub
sbb
pop
adc
cs
int
sar
cdq
cs
scas
or
lods
cmp
mov
sbb
xor
or
rcr
cwde
scas
cmp
fdiv
xchg
sbb
add
jae
or
cmp
cmc
push
inc
sbb
push
cmp
or
push
xchg
retf
fsub
in
inc
add
and
into
pop
or
daa
push
bound
push
sbb
fdivr
icebp
nop
repnz
dec
pop
aas
std
ins
sub
(bad)
adc
pusha
xor
data16
inc
inc
or
cwde
out
in
cdq
jo
icebp
add
cmp
out
es
push
lea
push
ss
mov
lods
sbb
sub
ffree
mov
or
cmps
(bad)
(bad)
(bad)
fidivr
push
or
adc
aad
repz
cmp
ins
xchg
or
adc
mov
mov
cmp
xchg
sbb
xchg
loop
jge
cmp
or
pop
ss
stc
jne
dec
stos
test
sub
data16
adc
aad
repz
into
pop
out
sahf
mov
jnp
jne
stos
popf
retf
enter
add
bnd
sti
shr
aad
inc
cmp
ss
cmp
lea
lock
mov
and
ss
pop
or
push
cmp
cmp
or
(bad)
(bad)
movs
push
xor
stc
out
std
imul
popf
xchg
movs
jle
adc
shl
enter
test
pop
xchg
sub
in
shl
push
xor
ins
jmp
std
in
add
test
imul
imul
inc
inc
jecxz
jmp
lods
mov
cmc
push
in
lock
or
mov
sub
enter
fwait
or
test
ds
mov
icebp
jmp
xchg
dec
(bad)
xchg
pop
nop
sbb
sub
ins
daa
cmc
push
sbb
(bad)
(bad)
int
mov
xchg
nop
dec
sub
cmp
pop
jb
pop
jb
push
push
stos
call
fistp
sbb
sar
mov
sbb
scas
ss
inc
push
jbe
scas
lods
sbb
fs
stos
out
jge
(bad)
stc
mov
mov
inc
and
outs
mov
mov
dec
mov
gs
hlt
popf
xchg
cmp
mov
adc
xchg
pop
cdq
dec
mov
ror
fnstcw
or
jge
push
stc
cdq
jae
es
pmaxub
push
sti
in
ja
adc
mov
jo
push
dec
(bad)
adc
push
popf
jae
hlt
lock
mov
and
repz
mov
cs
sub
enter
and
int3
inc
xchg
push
add
icebp
in
pop
repz
ror
dec
(bad)
nop
imul
xchg
push
xor
push
dec
mov
mov
mov
jno
sub
cmp
jmp
call
call
inc
inc
nop
jbe
pop
ret
xchg
sub
js
mov
inc
popf
jp
sbb
and
test
lods
bound
mov
xchg
(bad)
mov
jno
div
lods
fst
popf
xor
mov
push
test
les
out
sbb
jle
dec
int
int3
add
cli
xchg
xchg
shl
or
mov
jae
push
mov
sbb
fstp
adc
xchg
sbb
stc
(bad)
mov
sbb
pushf
add
std
xor
mov
je
vmwrite
dec
mov
div
idiv
cli
cwde
arpl
push
popf
push
ror
dec
ret
jmp
cmp
scas
cdq
mov
bound
inc
mov
add
push
cmps
ret
dec
popf
mov
call
push
test
xor
jnp
data16
sbb
ret
loope
push
cmps
cli
adc
or
xchg
sbb
push
lea
mov
fs
cmc
sbb
cmc
scas
inc
test
rol
mov
out
pop
sub
mov
(bad)
test
cmp
ins
mov
xchg
sbb
ins
repz
lock
push
or
xchg
std
pusha
jmp
cmps
sub
inc
adc
gs
fstp
xor
jne
or
nop
mov
lods
rcl
(bad)
pop
jne
cmp
arpl
ret
leave
and
push
jge
jae
xchg
pop
xchg
fimul
adc
jmp
jns
ds
sbb
dec
fistp
retf
sbb
pusha
movs
xchg
mov
(bad)
not
adc
mov
gs
data16
rcr
or
inc
cmps
mov
mov
jb
leave
and
cmp
cmp
cdq
in
sbb
shl
ror
dec
inc
popa
jnp
fidivr
adc
call
inc
pop
cmp
jle
out
pop
mov
jnp
sub
adc
jnp
ss
add
(bad)
mov
hlt
push
cwde
inc
into
jnp
and
lahf
mov
and
cmps
lods
pop
dec
xchg
push
mov
xchg
mov
xchg
setge
or
mov
mov
sbb
adc
mov
jle
adc
sub
xor
xchg
repnz
mov
js
cs
ficom
leave
div
push
inc
jo
jbe
cdq
test
dec
dec
(bad)
repnz
lahf
mov
popf
mov
jns
sub
or
jp
outs
ss
lock
(bad)
(bad)
sub
lock
xor
lods
ds
push
push
lahf
or
or
jae
(bad)
in
aam
ins
mov
cwde
mov
mov
pushf
pop
call
mov
or
adc
cwde
ss
dec
loope
sbb
call
xchg
cmp
xchg
(bad)
imul
sahf
outs
lods
xchg
xor
in
xor
pop
fnstenv
xchg
jne
(bad)
or
jne
push
lds
sub
and
mov
jp
inc
and
sbb
sbb
fxam
push
scas
mov
jbe
adc
fsubrp
sub
push
push
jg
out
ror
inc
popf
js
mov
lods
dec
adc
push
mov
sub
jb
popf
xor
enter
std
iret
(bad)
sub
js
jns
jb
mov
lods
jmp
xchg
imul
xchg
sub
pushf
mov
test
dec
push
test
icebp
ror
push
cdq
or
std
or
ins
(bad)
mov
(bad)
mov
loop
in
gs
pop
lahf
mov
inc
pushf
lds
mov
dec
int
test
stc
push
popf
xchg
and
sbb
jge
jge
jns
adc
call
xor
mov
and
imul
cmp
xchg
sbb
ffree
clc
popa
movs
cs
pop
cmps
mov
sti
shl
xchg
sbb
sub
rcl
ins
mov
popf
cwde
inc
popf
ret
std
push
adc
jbe
data16
or
pop
sub
add
or
xchg
cwde
iret
cmp
lea
(bad)
adc
and
retf
mov
sub
push
getsec
mov
add
fbstp
ss
fsubr
pop
lea
leave
adc
mov
aaa
in
xchg
xor
or
call
ins
loopne
push
gs
cmc
leave
adc
jge
xor
adc
jge
cmp
xchg
pop
mov
lahf
stc
push
stos
adc
mov
xor
xchg
mov
pop
sbb
aam
aas
mov
push
gs
pop
fstp
ret
inc
cmovns
stos
test
dec
sub
ins
mov
les
inc
es
jae
sbb
das
sbb
icebp
mov
cmps
js
sbb
push
jge
jb
push
idiv
push
fstp
or
int3
sub
sbb
(bad)
iret
test
inc
es
ja
xchg
xor
push
(bad)
mov
dec
aas
mov
push
cdq
leave
inc
bound
push
and
cmp
jg
and
cs
in
mov
into
out
push
lea
stc
cmc
int
pushf
jbe
mov
ret
(bad)
les
mov
dec
push
(bad)
ss
inc
xor
pop
repnz
pop
adc
pop
(bad)
imul
cmp
mov
shl
xchg
std
jns
repnz
pop
rcl
out
fdiv
mov
add
add
push
pop
imul
xchg
push
cs
jne
lods
sub
aad
mov
(bad)
movs
xchg
ins
scas
cmp
movs
popf
fsubrp
es
mov
xor
dec
adc
mov
jne
cs
mul
dec
jmp
inc
fs
lahf
test
xchg
mov
pop
aam
out
(bad)
mov
ins
jmp
lods
into
adc
add
xchg
in
sbb
aas
or
push
sub
stc
je
push
es
push
int
fnstsw
or
cmps
cmp
test
popf
ss
mov
std
mov
xchg
and
dec
pop
and
xchg
ret
mov
rol
xor
dec
xchg
sbb
cmp
mov
and
push
push
arpl
sub
in
cmp
xor
mov
mov
jmp
es
std
dec
loopne
fwait
jne
cld
std
or
repnz
cmps
sub
dec
sahf
cmps
popa
mov
popa
leave
jbe
(bad)
gs
frstor
fimul
cmp
in
dec
div
xchg
inc
pop
and
ss
pop
add
xchg
dec
sub
js
add
test
popa
retf
leave
in
fnstsw
iret
lock
(bad)
std
add
das
sub
sub
ins
xor
xlat
out
pop
mov
xor
dec
mov
faddp
(bad)
xor
lds
jns
aad
xor
std
add
ret
imul
sub
movs
xchg
push
xor
fisubr
retf
sub
xchg
mov
sub
push
jae
outs
and
fld
(bad)
jnp
fisttp
test
jbe
mov
cmps
shl
(bad)
imul
xor
add
in
add
xor
jg
pop
into
dec
(bad)
repnz
xchg
and
scas
xor
ss
push
xchg
push
dec
and
push
mov
or
repz
or
adc
and
or
mov
pop
mov
loopne
jmp
(bad)
fldcw
mov
rcr
js
sub
pop
clc
or
jns
pop
dec
scas
mov
xor
data16
test
dec
fucomp
js
jmp
mov
call
imul
mov
sbb
inc
pop
shr
fst
push
ror
lods
sub
fisub
adc
dec
cmps
das
mov
inc
push
sub
xchg
arpl
push
add
xchg
or
dec
xor
in
cmp
mov
sar
adc
popa
div
arpl
out
getsec
jmp
mov
jbe
xchg
shr
inc
in
dec
(bad)
loop
adc
test
sub
jb
mov
in
aad
mov
jbe
or
mov
cmp
pop
xchg
adc
dec
stc
and
lods
retf
mov
fld
xchg
(bad)
test
mov
ins
dec
sub
pop
fldenv
repnz
push
or
mov
or
stos
test
dec
sub
jge
mov
popf
pop
mov
add
xchg
dec
xchg
xchg
jecxz
sub
add
pop
repz
push
pop
fnstenv
es
ds
fnsave
mov
xchg
xchg
jmp
sbb
mov
mov
fnstenv
in
jo
adc
mov
xchg
or
jns
mov
cmps
sub
push
bound
es
cmp
inc
mov
or
cmps
jge
rol
and
out
popf
arpl
call
mov
push
in
and
rcr
xchg
fsubr
sub
out
or
popf
enter
arpl
cmp
inc
mov
ds
test
(bad)
sbb
mov
pop
in
fbstp
push
fst
inc
xor
fdivp
outs
pop
adc
mov
mov
popf
fisubr
in
sahf
test
adc
mov
pop
sahf
xchg
(bad)
mov
out
fdiv
inc
sub
add
inc
loop
imul
xchg
push
cs
jne
lods
int3
mov
aad
mov
dec
(bad)
movs
test
ins
test
out
es
push
popf
mov
adc
jle
dec
jns
dec
cs
test
imul
inc
bound
lahf
test
xchg
mov
pop
aam
out
(bad)
mov
ins
add
jb
fst
sub
mov
pop
xchg
in
sbb
aas
or
push
sub
fwait
push
cmp
push
adc
mov
mov
mov
cmps
xor
movs
cmp
test
(bad)
fucomip
test
jbe
cdq
adc
scas
xchg
cmc
sub
das
sbb
push
ds
imul
push
push
and
retf
dec
and
(bad)
mov
out
push
(bad)
in
sub
mov
retf
inc
(bad)
mov
mov
jle
and
push
pop
(bad)
sbb
add
adc
outs
push
jle
sbb
inc
mov
aas
add
jbe
dec
mov
add
cli
rol
ss
iret
inc
xchg
sbb
fnsave
sbb
test
mov
out
leave
jno
(bad)
jmp
mov
mov
ss
shr
aad
mov
fmul
adc
inc
popf
xchg
into
inc
inc
xor
mov
in
std
pop
mov
add
sub
(bad)
cmp
jge
bound
(bad)
js
test
ins
in
lods
imul
sbb
push
sub
imul
addr16
fwait
lock
xchg
mov
mov
or
add
mov
adc
and
jae
rol
pop
dec
mov
call
(bad)
stc
pop
fisub
xor
adc
sti
sahf
adc
pop
cmp
lea
sub
aaa
jmp
mov
arpl
add
pop
adc
rcr
mov
adc
div
lods
fnstenv
inc
xor
push
outs
mov
mov
cmp
jb
and
(bad)
imul
xchg
adc
arpl
push
inc
scas
nop
addr16
adc
test
ret
femms
idiv
fdivr
mov
ret
sbb
xchg
or
ja
pop
inc
mov
sbb
push
popf
leave
mov
int
jns
jmp
xchg
(bad)
int3
dec
xchg
movs
dec
pop
pop
xor
sub
lea
sbb
in
and
jne
inc
fisttp
dec
cmc
ja
and
sub
cs
out
pop
stos
pop
mov
push
sub
movs
les
mov
pop
jns
mov
cmps
mov
or
push
div
xchg
xor
push
push
xor
xor
movs
shl
xlat
jne
push
dec
add
pop
repz
push
fs
popf
out
lods
arpl
clc
xor
js
jge
nop
mov
pop
aad
dec
jle
dec
test
jmp
enter
(bad)
dec
and
repz
cmps
aad
sbb
mov
adc
fdiv
push
xor
(bad)
push
test
cmps
std
sbb
imul
rep
mov
addr16
inc
mov
ret
fdiv
mov
cmps
mov
mov
push
enter
pusha
fnstenv
inc
leave
mov
sbb
sub
sbb
cwde
add
inc
daa
jge
inc
add
stos
data16
xchg
icebp
imul
(bad)
rcr
xor
jl
lea
mov
xor
data16
pop
repnz
aad
(bad)
(bad)
(bad)
mov
mov
mov
call
mov
mov
cmp
or
(bad)
test
lea
mov
inc
pop
mov
xchg
dec
xchg
xor
jge
mov
ins
ds
push
test
ins
inc
daa
imul
mov
sbb
adc
cdq
out
push
in
pop
call
int
cwde
push
adc
stc
mov
jecxz
sub
retf
enter
jb
mov
xor
xchg
mov
ins
out
push
repnz
cmc
enter
push
int
fst
push
add
fistp
xchg
and
out
mov
push
in
bswap
inc
popf
jbe
and
mov
xchg
cmp
xor
sub
fdivr
xchg
inc
(bad)
in
jno
(bad)
repz
(bad)
out
sub
xor
lea
inc
xchg
cs
fnsave
repnz
ficom
cmps
cmp
sahf
xchg
and
cmc
ss
test
mov
std
xchg
dec
out
jecxz
leave
(bad)
cmp
mov
sbb
out
lods
jno
xor
mov
out
inc
fs
dec
(bad)
pop
push
sub
popf
ss
repnz
data16
(bad)
or
fisttp
repnz
les
lods
cmp
mov
data16
xchg
dec
je
sub
sub
sbb
aas
lods
jne
test
fidivr
push
mov
test
or
lods
or
stos
jge
fucomp
adc
int
aad
sub
stc
fisttp
loop
lds
cmp
jp
mul
cmc
popf
jmp
es
pop
aaa
(bad)
lods
cmp
xchg
stos
push
lods
mov
push
cwde
stc
adc
std
aaa
jecxz
xor
lods
xchg
pandn
shr
ins
fcmovnb
(bad)
mov
ins
or
mov
adc
enter
aaa
xchg
mov
dec
js
pop
inc
mov
pop
dec
inc
fdiv
push
movs
pop
fstp
int
jbe
and
ror
sbb
push
enter
out
cmp
push
push
ss
inc
pop
std
mov
dec
sbb
xchg
dec
les
cmp
pop
popf
jb
jbe
xchg
mov
xor
sub
shl
or
ret
cmp
cmps
out
neg
xor
xor
mov
repz
aad
mov
mov
fwait
pushf
stc
pop
leave
mov
add
add
mov
outs
ffree
or
add
jmp
ins
popf
retf
xor
in
in
std
jp
xchg
xchg
pop
(bad)
dec
mul
jle
add
popf
outs
pop
mov
cwde
mov
or
ret
lods
fwait
mov
out
rcr
pop
mov
sub
add
or
inc
gs
mov
int3
aas
xlat
mov
mov
pop
mov
pushf
loop
sar
add
in
rcr
div
push
or
(bad)
push
js
add
in
imul
out
lds
aam
aaa
sahf
xchg
push
fcom
fimul
mov
jbe
data16
cs
push
cmc
repz
cmps
mov
in
mov
jmp
outs
jne
ins
inc
xchg
shl
mov
ficom
adc
sbb
loop
push
jge
arpl
inc
stos
mov
sbb
bound
dec
pop
into
mov
sahf
push
mov
push
out
sbb
push
bound
lods
jbe
xor
mov
sbb
jae
xchg
sbb
out
pop
jo
test
push
mov
in
rcl
push
mov
call
xor
movs
fldenv
cld
push
push
adc
sub
xor
popa
mov
adc
bound
scas
test
in
mov
fadd
lock
out
or
popf
enter
arpl
cmp
inc
gs
and
dec
inc
into
ret
push
sub
popf
fisubr
push
adc
cld
push
std
fisttp
pop
aad
movs
inc
pop
jnp
push
idiv
retf
fs
and
lds
mov
mov
(bad)
cmp
or
repz
pushf
outs
popf
jp
data16
mov
arpl
std
cld
sbb
ins
xchg
dec
xor
inc
rol
leave
mov
push
frstor
xor
mov
dec
xchg
fisubr
push
sbb
xchg
repz
mov
clc
std
in
fld
fld
dec
rcl
repz
(bad)
aaa
jecxz
mov
dec
les
ss
dec
mov
jo
data16
cmp
popf
mov
adc
pusha
xchg
arpl
jbe
jae
ret
mov
xchg
outs
(bad)
xor
fsubr
push
adc
dec
mov
sahf
addr16
ins
cli
xchg
aam
xchg
mov
cmp
dec
sbb
lea
inc
ins
mov
lahf
test
xchg
xchg
out
(bad)
mov
ins
jns
fidiv
fst
push
inc
int
add
pop
xchg
in
sbb
aas
or
push
and
jecxz
or
es
sbb
fcomp
ficom
(bad)
mov
mov
cmps
(bad)
movs
cmp
test
fucomip
test
jbe
cdq
adc
scas
xchg
cld
sub
das
sbb
push
aaa
push
adc
lods
leave
inc
bound
push
and
loop
jg
and
cmps
(bad)
dec
cmp
lea
stc
cmc
int
xchg
jbe
inc
imul
in
cmp
pop
sub
inc
push
pop
ss
fst
inc
xor
add
outs
pop
adc
aam
test
test
popf
scas
lods
jbe
mov
mov
jns
repnz
pop
mov
(bad)
mov
out
shl
xor
add
add
jle
pop
imul
xchg
push
cs
jne
lods
mov
(bad)
xor
mov
call
(bad)
movs
mov
ins
out
cmp
movs
popf
fsubp
lods
ss
mov
add
movs
inc
and
pop
or
neg
pop
arpl
inc
call
push
sbb
cmc
cmp
mov
popf
sahf
sbb
jmp
push
cmps
inc
stos
or
cmp
jle
inc
sbb
(bad)
sbb
out
push
popf
push
cmp
push
daa
mov
int
fnsave
ins
sub
shl
sbb
add
(bad)
test
lock
adc
cmp
xchg
sbb
(bad)
dec
dec
mov
mov
sbb
jle
test
inc
adc
xchg
call
shl
pop
imul
add
pop
push
jb
lods
mov
jne
xchg
imul
adc
dec
lods
pop
cmps
xchg
jmp
outs
loope
es
call
fcmove
pusha
cmps
js
mov
mov
outs
imul
push
jae
mov
or
mov
in
inc
repz
cmps
dec
(bad)
mov
add
out
enter
lods
mov
ss
cmp
xchg
aam
outs
ret
cmp
repz
das
repnz
popa
mov
inc
mov
mov
scas
rol
jo
or
mov
push
mov
retf
ss
cmc
stc
inc
push
pop
fnsave
add
xchg
ror
sbb
(bad)
daa
shr
push
dec
pop
retf
sar
frstor
in
cdq
push
js
sbb
(bad)
in
(bad)
ins
jmp
fxch
mov
in
add
sbb
retf
ret
sar
aad
test
fimul
inc
lea
inc
xchg
loop
jmp
mov
rol
scas
cdq
arpl
repnz
dec
retf
add
jb
cmp
scas
cmp
jge
aas
xchg
mov
push
fild
bound
loop
mov
pusha
(bad)
outs
jle
test
ret
pusha
and
sub
movups
xor
push
push
and
es
ds
fnstsw
mov
or
aad
lea
idiv
push
fs
add
int
pop
cmp
movs
sahf
dec
(bad)
push
or
(bad)
jge
in
push
out
popf
arpl
fldln2
hlt
fdiv
jbe
aas
std
jle
ret
dec
pusha
je
cmp
imul
adc
shl
out
in
out
fadd
xor
mov
dec
mov
mov
xor
push
jl
cs
adc
fisubr
xchg
mov
inc
xchg
jecxz
xchg
pop
add
test
adc
and
out
cmp
fadd
jbe
mov
ret
sub
js
ss
mov
xor
popf
fisubr
push
cdq
xlat
mov
adc
js
mov
pop
mov
out
push
enter
movq
enter
imul
dec
cmp
cmps
sub
push
gs
cmc
enter
inc
xor
adc
xchg
push
mov
push
pop
mov
pushf
xor
mov
mov
xor
sbb
sbb
ds
lods
pop
or
xor
popf
dec
lods
and
mov
fstp
push
jns
repnz
pop
pop
xchg
(bad)
mov
out
int
xlat
es
jbe
ss
in
or
add
and
adc
push
jne
lods
pop
mov
aad
mov
dec
(bad)
movs
mov
ins
rol
fsubp
lds
mov
adc
inc
ror
jne
cs
sbb
pop
jmp
inc
imul
jle
xchg
rcr
out
(bad)
mov
ins
nop
jge
jb
fst
mov
and
in
sbb
aas
or
push
and
or
vpcmpeqb
es
sbb
xor
or
(bad)
mov
mov
cmps
stc
sub
jge
lea
(bad)
fucomip
test
jbe
cdq
adc
scas
xchg
clc
sub
das
sbb
push
sub
leave
inc
bound
push
and
mov
sbb
(bad)
jge
mov
into
out
pop
lea
push
iret
stc
cmc
int
xchg
jbe
xor
ret
(bad)
cmps
dec
(bad)
mov
inc
push
in
add
fucomp
mov
js
imul
dec
pop
or
and
std
xor
inc
pop
xor
loop
retf
dec
mov
sbb
stos
sub
jnp
sub
inc
and
fld
loopne
shl
add
lea
cmp
inc
push
int
sbb
sbb
or
cmp
and
jge
aam
fst
or
cdq
jmp
cmp
repnz
add
add
jo
xchg
push
in
adc
xchg
mov
imul
xchg
je
aad
mov
pop
mul
ret
gs
(bad)
mov
xchg
test
mov
xchg
mov
ret
std
lea
popf
hlt
mov
push
mov
imul
mov
xchg
(bad)
imul
mul
jne
cdq
jb
pop
(bad)
lods
das
stos
xor
cmc
or
sub
pop
sub
popa
push
shl
cmps
adc
mov
xchg
pop
outs
(bad)
mov
(bad)
dec
add
or
inc
sub
mov
stc
fnstenv
pop
adc
mov
sbb
push
popf
jecxz
push
stos
daa
ins
jmp
(bad)
jmp
sbb
ret
imul
imul
not
jge
pop
daa
jge
stc
fnstenv
adc
cld
xchg
pop
mov
cmps
mov
mov
cmp
dec
retf
fnsave
cld
cdq
mov
xchg
rol
pushf
or
sbb
and
cwde
xlat
add
data16
dec
dec
pop
dec
fucom
ret
cmp
xchg
inc
(bad)
popa
ss
adc
mov
mov
mov
jge
push
push
mov
push
int
fnstsw
adc
cmp
push
cs
ss
(bad)
xor
mov
inc
imul
push
sub
mov
neg
mul
lods
jmp
adc
jo
dec
xchg
int
mov
push
mov
cli
leave
mov
inc
mov
test
mov
cmp
or
cmp
stc
jno
or
dec
adc
mov
sbb
jmp
rcr
push
cmp
cmp
jb
fxch
pop
bound
mov
add
scas
test
cmp
mov
mov
dec
es
out
bound
xor
and
or
cmp
sbb
data16
or
stc
ins
jb
(bad)
cdq
push
add
and
dec
jns
repnz
jae
sub
lods
xor
fldenv
add
mov
push
adc
mov
repnz
loop
sub
sub
sbb
mov
dec
arpl
inc
and
ror
mov
(bad)
cmp
cmp
leave
pop
dec
adc
es
test
adc
ror
sar
cmps
jns
dec
(bad)
sbb
xchg
cmp
fwait
lea
aaa
lods
bound
or
pop
cdq
sub
cmps
shr
mov
mov
(bad)
rcl
and
loopne
mov
mov
sub
in
xor
aas
movs
das
fdivp
mov
mov
test
sbb
push
dec
in
pushf
(bad)
and
cdq
fadd
(bad)
in
fadd
cmp
sbb
jb
(bad)
xor
xor
xchg
mov
dec
fucom
sub
je
sbb
xchg
push
cmp
jge
sub
xchg
jmp
xlat
stos
mov
dec
push
push
fnstenv
sbb
fist
mov
push
test
outs
loop
jmp
cmp
or
je
popa
fld
xor
add
jns
repnz
dec
rol
adc
xor
push
js
xchg
xchg
out
dec
rcr
sub
gs
jb
(bad)
fild
mov
add
adc
repnz
(bad)
cmp
sub
adc
push
mov
xor
sbb
dec
loop
or
sub
stos
vpcmpgtb
inc
push
call
mov
nop
cmp
cmp
sti
push
ret
or
sti
pusha
jmp
imul
pop
imul
xchg
xor
jmp
stc
dec
rcl
stc
call
xor
jns
cmp
das
mov
loopne
lock
jb
bound
and
push
mov
in
nop
jle
sub
sub
dec
or
cdq
adc
fnstenv
stos
xor
and
adc
sub
hlt
pop
shr
inc
sub
mov
loopne
sbb
fwait
inc
(bad)
pop
xchg
repnz
push
rcr
xchg
mov
xchg
mov
or
jmp
jmp
add
call
loop
imul
jnp
sbb
fild
push
xor
sub
cmp
sbb
mov
mov
sbb
pop
inc
stc
adc
jmp
inc
clc
mov
jns
jle
pop
cmp
out
imul
popf
jb
(bad)
call
cmps
inc
imul
pop
rcr
adc
fisubr
mov
push
sti
push
cdq
add
inc
or
sbb
xlat
xchg
mul
mov
stc
inc
and
cdq
mov
add
(bad)
lea
mov
sbb
mov
add
mov
in
imul
dec
push
sub
jge
inc
and
cli
jmp
add
mov
in
hlt
pop
(bad)
sahf
das
sbb
xchg
sbb
jb
out
fild
setle
mov
dec
je
aam
icebp
sbb
and
xor
retf
push
call
mov
aad
repnz
xchg
dec
das
fdivp
dec
mov
popf
cli
jmp
add
xchg
dec
mov
xor
cmc
cmp
fcmove
pop
dec
ss
add
or
xor
scas
fsubr
ret
pusha
sub
jnp
mov
push
jb
neg
fadd
xor
addr16
shl
jns
sti
mov
jecxz
inc
and
push
pushf
pop
popf
jb
fxam
call
std
rcr
cmp
scas
sbb
ins
cmp
jle
bound
(bad)
push
xor
mov
mov
dec
imul
stos
jmp
popa
push
or
fild
dec
jns
mov
mov
push
mov
in
xor
xor
mov
add
rol
dec
jno
jns
mov
xchg
mov
push
cmp
jb
sar
lea
and
repnz
pop
xor
sti
icebp
xchg
dec
cmp
fcmove
pop
dec
adc
mov
or
push
adc
nop
jle
sub
sub
push
mov
push
dec
out
push
mov
clc
cmc
in
data16
inc
jns
xchg
imul
jnp
mov
mov
xor
adc
sbb
jns
jle
push
ret
dec
xchg
mul
mov
push
mov
mov
lds
jle
sub
sub
push
mov
push
dec
stc
push
jnp
es
test
cld
scas
add
lds
mov
pop
int
mov
sbb
lea
(bad)
cli
jmp
retf
fld
repnz
pop
test
sar
xchg
imul
push
(bad)
dec
mov
mov
dec
mov
mov
test
xor
fxch
enter
xor
adc
mov
cmps
sahf
xacquire
lods
enter
mov
test
popf
jnp
cmps
shr
xor
lahf
ins
adc
mov
dec
outs
push
sub
leave
push
sahf
xchg
sbb
mov
dec
mov
addr16
data16
repnz
shl
test
cmp
jnp
jmp
dec
(bad)
push
dec
lods
test
in
cmps
std
pop
dec
xchg
int
loope
mov
pushf
mov
(bad)
pop
popa
bound
(bad)
cmp
cli
cmp
in
pop
repnz
outs
mov
xchg
mov
sbb
ss
not
imul
push
push
mov
or
inc
sbb
add
stos
mov
outs
loop
lods
pop
jns
mov
test
sub
xchg
jmp
mov
add
xor
push
nop
cmps
in
ret
xlat
xchg
shr
sub
pop
pop
and
popa
bound
(bad)
cmp
xchg
inc
xchg
pop
int
fdivp
or
outs
rcl
rol
push
jb
iret
inc
sahf
inc
push
or
adc
jbe
repnz
cmp
push
and
push
pushf
(bad)
mov
adc
scas
mov
xacquire
shl
mov
pop
out
out
xchg
pop
(bad)
mov
push
cli
lock
sub
and
bound
sub
cmp
mov
pop
out
jb
neg
jbe
cdq
std
and
repnz
sub
cmp
jmp
push
push
jno
mov
add
adc
sub
(bad)
popf
mov
inc
stc
fldenv
inc
neg
mov
sbb
sbb
(bad)
lods
not
loopne
mov
mov
inc
imul
pop
fstp
test
and
fcmovne
div
repnz
cmp
loope
sub
aaa
or
jmp
push
test
xchg
clc
xor
cdq
adc
cmp
sub
jnp
jb
adc
jmp
test
ret
imul
or
stc
dec
leave
jmp
mov
lahf
add
js
mov
mov
js
lea
jmp
inc
(bad)
adc
cmps
jne
adc
pop
cdq
shr
cmp
cmp
cmp
leave
dec
imul
mov
and
dec
jns
jp
data16
mov
fdivp
jp
mov
es
cmp
neg
mov
and
and
pop
std
fwait
cmc
cmp
push
push
leave
ins
imul
in
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
cmps
cmp
imul
jge
lea
popf
add
inc
mov
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
(bad)
fnsave
sub
pop
xlat
imul
cdq
xor
inc
fnstenv
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
jnp
and
sbb
ins
out
push
lea
popf
lods
es
push
int
fnsave
data16
xchg
or
cmps
ret
(bad)
pop
imul
jge
jb
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
bound
lods
es
jbe
data16
xchg
or
cmps
ret
(bad)
pop
imul
jge
jb
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
or
jge
lea
popf
lods
fnstcw
jbe
data16
imul
cmp
ins
out
push
lea
bound
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
not
push
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
fnstcw
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
or
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
pop
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
add
imul
sub
cmp
mov
and
cmp
xor
adc
loop
mov
aam
cmp
sbb
jmp
dec
fdivr
int
mov
scas
xor
pop
shr
push
sub
sbb
(bad)
shl
int
fstp
cdq
addr16
xchg
xchg
popa
rcl
scas
pop
sub
pop
ret
inc
stc
push
retf
add
xor
mov
leave
pop
(bad)
and
add
jecxz
popf
pop
lods
dec
mov
sbb
or
fisttp
aas
movs
sub
sub
add
aas
jns
push
(bad)
pop
out
es
push
mov
or
loope
movs
push
xlat
and
sbb
outs
clc
inc
fld
and
xor
in
jecxz
mov
cmps
cmp
fwait
or
clc
ss
fcom
inc
mov
movs
or
fidivr
pop
mov
push
aam
push
lea
jbe
data16
lea
fst
rcl
jb
sbb
jge
or
cmp
out
arpl
cwd
cmp
push
mov
(bad)
(bad)
pop
mov
cdq
dec
cmp
jns
pop
mov
gs
jmp
push
stos
das
mov
movs
pop
(bad)
push
fmul
mov
ins
xchg
adc
inc
bnd
push
mov
add
xor
pop
enter
test
or
push
inc
fldenv
push
lea
call
cmc
pop
aad
aam
sub
cmc
push
xchg
push
push
inc
push
in
addr16
cmp
iret
mov
mov
xchg
ins
cmp
int
frstor
out
lods
das
mov
(bad)
cmp
sbb
adc
push
(bad)
imul
dec
xor
xchg
in
fsub
lds
jge
and
sbb
jecxz
jmp
pop
into
and
test
cmp
sub
adc
pop
inc
mov
cmp
adc
jb
jnp
pop
jmp
dec
mov
mov
jbe
data16
lea
xchg
jbe
cmp
imul
dec
mov
movs
xor
add
cld
pop
into
dec
fnstcw
mov
in
sub
pop
xchg
cmc
fs
repnz
xchg
cmp
mov
xchg
pop
into
dec
fnstcw
mov
xchg
add
mov
aam
jmp
dec
mov
inc
(bad)
data16
inc
mov
(bad)
(bad)
(bad)
pop
mov
leave
dec
jmp
sbb
retf
push
in
daa
into
xor
popa
mov
fs
outs
test
pop
xchg
sbb
fnstenv
inc
fdivr
scas
das
mov
xchg
push
lock
xchg
or
das
xchg
pop
ret
loope
stc
je
data16
xchg
add
add
fstp
push
dec
xchg
or
cmp
push
fbld
iret
aas
stos
daa
scas
mov
inc
jecxz
les
(bad)
dec
mov
or
bnd
es
push
mov
setle
imul
push
test
dec
out
pop
lds
cmp
push
pushf
xchg
or
cld
push
movs
and
ds
jecxz
rep
enter
mov
or
aad
movs
cmp
test
in
fs
popf
inc
les
push
mov
adc
jmp
sub
cmp
int
clc
fbld
leave
push
int
fnsave
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
in
mov
mov
push
xchg
mov
(bad)
sbb
jo
xor
movs
adc
adc
fstp
sbb
les
cdq
and
sub
push
shl
(bad)
inc
(bad)
xchg
rcr
cld
mov
fs
jle
mov
jmp
pop
frstor
mov
(bad)
sub
cmps
leave
dec
icebp
push
cdq
push
(bad)
xor
das
nop
xchg
jmp
(bad)
push
mov
stc
jo
and
and
jge
or
inc
std
push
in
push
lods
lea
mov
out
cmps
dec
cmps
push
lds
aam
call
popf
push
cwde
cmp
gs
jle
sub
xchg
out
xchg
push
lods
push
mov
push
int
xchg
outs
mul
inc
repnz
cmp
es
xchg
mov
jmp
jbe
(bad)
pop
neg
pop
xchg
ins
xchg
mov
inc
lods
inc
fst
es
inc
mov
retf
inc
clc
fiadd
or
div
ret
cmp
data16
push
lea
push
lods
inc
mov
xchg
sub
sbb
enter
dec
inc
lods
imul
out
or
ret
scas
inc
sub
xchg
(bad)
adc
cmp
inc
jge
lea
add
lods
mov
inc
jb
in
mov
fistp
ds
pop
les
out
xor
mov
add
dec
cs
dec
cmp
mov
sbb
(bad)
leave
jmp
fcom
lea
stc
fxch
test
jns
inc
in
leave
movs
out
aad
(bad)
call
xor
popf
jmp
mov
jbe
(bad)
ret
repnz
mov
cmps
pop
xlat
enter
in
call
lods
mov
add
sub
and
and
shl
pop
push
sbb
dec
cmp
int
ret
pop
out
test
gs
repz
movs
popf
loop
mov
mov
mov
jns
sub
and
sub
sbb
leave
std
or
xchg
xor
mov
aaa
jge
inc
mov
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
or
lods
es
jbe
or
mov
cmps
cmp
imul
jge
lea
popf
lods
es
sbb
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
adc
push
popf
lods
fcom
inc
mov
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
int
popf
inc
out
leave
push
mov
add
in
xchg
dec
cmps
sbb
test
or
mov
es
add
jle
je
dec
cmps
sbb
or
pop
lods
push
fdivr
mov
jg
into
pop
xchg
xchg
push
mov
(bad)
call
dec
popf
xor
and
xchg
or
cmps
dec
mov
or
popf
push
fild
shl
test
xchg
mov
hlt
sbb
mov
scas
sub
call
inc
fdiv
in
das
mov
xchg
or
cmps
cmp
xchg
ins
out
push
lea
clc
push
lods
or
xor
data16
loop
repz
or
(bad)
pop
test
push
in
popf
inc
stc
push
leave
xor
std
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
adc
jno
sub
test
cwde
or
adc
push
in
pop
lds
popf
jbe
inc
fnsave
data16
xchg
or
cmps
cmp
test
push
(bad)
sti
push
mov
cmp
and
(bad)
push
ret
and
pop
jns
es
push
mov
data16
xchg
arpl
fs
(bad)
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
andps
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
and
mov
xchg
(bad)
dec
xchg
pop
test
lea
ss
es
jbe
sub
xchg
or
aad
(bad)
dec
test
jge
lea
cld
lods
push
mov
jbe
data16
test
(bad)
and
ins
out
ja
push
cli
lods
es
jbe
data16
repz
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
sub
push
out
jg
inc
ret
push
int
fnsave
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
adc
xchg
(bad)
dec
(bad)
pop
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
jmp
dec
mov
jbe
data16
xchg
or
cmps
cmp
imul
cmp
lods
es
jbe
or
sub
(bad)
pop
imul
jge
jmp
es
jbe
data16
xchg
or
cmps
cmp
sub
popf
lods
es
jbe
es
xchg
push
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
cmp
jbe
data16
push
or
es
jbe
out
xchg
lea
sbb
push
int
fnsave
out
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
sti
cmp
or
clc
arpl
push
(bad)
push
mov
add
pop
ret
cmp
mov
stc
bound
scas
fld
xor
add
jns
mov
pop
ret
cmp
into
jb
bound
mov
inc
hlt
xor
add
fnstsw
pushf
loope
ret
aad
cmp
push
(bad)
shl
pop
fst
mov
xor
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
int
fnsave
data16
xchg
add
cmps
cmp
div
sbb
lods
es
mov
xor
pop
rcr
sub
out
jmp
push
(bad)
int
je
adc
loop
sub
cmp
jo
push
(bad)
leave
push
fld
xor
add
jns
dec
rcr
or
shl
jmp
lods
ds
test
adc
loop
rcr
sub
jecxz
jmp
push
fld
int
and
bnd
sub
cmp
pop
lea
adc
push
fld
xor
loop
bnd
dec
rcr
(bad)
dec
(bad)
pop
cmp
stc
shl
lods
es
mov
mov
sbb
sub
out
push
lea
call
push
int
fnsave
data16
xchg
or
cmps
cmp
imul
jge
lea
sbb
push
int
fnsave
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
ins
(bad)
dec
(bad)
pop
imul
jge
lea
popf
lods
es
es
data16
(bad)
or
cmps
cmp
imul
sub
mov
es
ja
data16
xchg
pop
xchg
(bad)
dec
(bad)
pop
imul
jge
lea
popf
lods
es
jbe
data16
(bad)
or
cmps
cmp
imul
jge
lea
popf
ss
inc
fnsave
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
popf
xchg
xlat
dec
(bad)
pop
idiv
push
popf
ss
es
jbe
data16
xchg
lea
cmp
imul
jge
lea
popf
ss
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
(bad)
or
cmps
cmp
imul
jge
fld
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
fld
popf
ss
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
int
lods
es
push
dec
inc
fnsave
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
ss
inc
fnsave
cmp
add
mov
into
inc
fidiv
data16
nop
pop
sub
movs
aaa
fdiv
cmp
sar
cmps
and
js
arpl
mov
std
push
cmp
cs
jp
cmp
jle
imul
jns
and
jp
outs
cmc
outs
out
pop
popf
bound
fsub
call
repnz
mov
cdq
jb
and
sar
adc
adc
pusha
jmp
fisttp
std
xchg
or
cmps
cmp
xor
in
data16
push
int
fnsave
mov
rcr
and
je
pop
sahf
ins
jecxz
(bad)
xchg
push
test
mov
movs
rcl
lods
jmp
loop
adc
and
js
pusha
sti
movs
ins
sbb
pop
mov
mov
imul
js
or
jne
cmp
jl
ins
neg
jb
pop
leave
push
lods
aaa
fadd
mov
addr16
ja
bnd
dec
fld
pop
(bad)
pop
xor
out
neg
lods
fld
mov
popa
jmp
mov
pop
xor
loopne
lock
add
bound
inc
(bad)
sbb
jo
pop
mov
mov
ret
jns
imul
leave
push
mov
mov
jle
outs
imul
push
scas
inc
ficomp
gs
jne
jmp
push
fldcw
lds
stos
loop
repnz
ins
test
arpl
jae
sub
(bad)
leave
cmp
stos
loope
icebp
push
bnd
dec
int
stos
inc
ficom
outs
cmc
jle
mov
dec
leave
push
mov
stos
out
je
fs
repnz
aam
sub
jge
(bad)
jb
push
lods
push
mov
stos
jmp
sub
rcr
push
jb
add
push
fsub
pop
repnz
dec
rcr
push
int
fnsave
push
xchg
aam
les
bnd
dec
lds
je
and
inc
fidiv
push
test
cmc
outs
in
ror
pop
xor
add
inc
retf
inc
(bad)
or
push
mov
mov
adc
mov
int
fld
jbe
lea
and
jb
(bad)
leave
push
fld
leave
cmp
ins
out
push
lea
popf
lods
es
jmpw
cmps
sub
pop
mov
cmps
cmp
xchg
or
sti
push
retf
inc
(bad)
cmps
cs
test
xchg
(bad)
addr16
je
movs
iret
push
mov
mov
jbe
xlat
cmp
shl
mov
(bad)
nop
out
rep
inc
jmp
dec
mov
test
or
jl
leave
xlat
fcmovnb
sub
cmp
mov
xchg
jb
pusha
dec
shl
test
inc
fnstsw
cdq
std
xchg
or
aam
ret
imul
cwde
xor
(bad)
pop
imul
jge
lea
popf
lods
fnstcw
test
mov
repz
pop
pop
mov
mov
sbb
arpl
push
cmp
(bad)
stos
and
lock
ror
pop
mov
mov
sbb
popa
cli
push
retf
movs
cs
test
xchg
(bad)
gs
jne
inc
int
mov
add
adc
in
hlt
pop
les
aas
movs
das
mov
test
xchg
jmp
fild
mov
(bad)
dec
fidivr
outs
hlt
pop
les
cmp
sub
movs
aas
mov
dec
jl
ja
inc
leave
push
mov
mov
movs
into
dec
imul
es
aam
ja
imul
pop
xlat
dec
cmps
cmp
mov
outs
push
inc
fst
es
push
xchg
jae
out
ins
(bad)
pop
aam
cmps
cmp
xchg
or
imul
fst
and
cmc
cmp
ret
pop
ror
cmp
mov
inc
jae
inc
fcom
and
xchg
add
jl
push
mov
test
out
sti
jae
inc
fcomp
mov
sbb
das
adc
imul
mov
mov
dec
xlat
pop
(bad)
sub
cmp
mov
sbb
fdivr
addr16
push
fiadd
ss
sub
jge
dec
(bad)
pop
shr
cmp
mov
cdq
add
sti
pusha
retf
push
daa
mov
or
xchg
(bad)
dec
(bad)
pop
stc
(bad)
jmp
popf
lods
and
push
int
fnsave
data16
xchg
or
movs
cmp
dec
(bad)
pop
imul
pop
mov
pushf
aaa
lods
sub
je
call
mov
ror
pop
repnz
cdq
xor
inc
fnstenv
(bad)
stc
xchg
or
aaa
ror
pop
repz
add
inc
retf
inc
(bad)
pusha
sti
nop
or
mov
jbe
data16
xchg
or
cmps
cmp
or
(bad)
sbb
arpl
push
leave
inc
fdiv
test
mov
out
out
jns
pusha
dec
ret
pop
mov
mov
sbb
arpl
push
enter
mov
add
ror
pop
mov
mov
sbb
mov
(bad)
stos
and
lock
ror
pop
mov
mov
nop
or
cli
push
retf
xor
add
ror
pop
mov
mov
sbb
popa
cli
push
retf
inc
fidiv
stos
and
(bad)
push
jne
inc
into
push
mov
add
outs
icebp
pop
les
aas
movs
das
mov
test
xchg
jmp
fild
mov
add
adc
in
hlt
pop
les
aas
movs
das
mov
test
xchg
jmp
fild
mov
add
adc
in
hlt
pop
les
aas
movs
das
mov
test
xchg
jmp
fld
push
mov
add
adc
in
lock
(bad)
dec
xlat
cmp
and
push
mov
je
inc
iret
push
mov
pop
mov
jl
popa
dec
in
hlt
outs
test
cdq
push
pop
xchg
cld
addr16
jae
inc
retf
and
test
pop
ror
mov
push
(bad)
out
out
(bad)
outs
cli
jl
sete
test
xchg
adc
imul
es
lods
xor
data16
fs
(bad)
push
cmps
cmp
mov
data16
push
aam
push
iret
das
sbb
stc
(bad)
imul
inc
leave
dec
mov
mov
jg
les
es
push
(bad)
out
jmp
push
retf
ror
and
mov
data16
jbe
pop
fst
es
adc
pop
dec
leave
dec
cmps
and
or
cld
imul
push
int
inc
test
cwde
adc
imul
cmp
or
jmp
enter
stos
add
imul
inc
fld
xor
xchg
or
jae
inc
fcom
and
xchg
or
jo
retf
dec
mov
sbb
push
mov
cdq
adc
ret
dec
mov
xchg
push
mov
jae
jmp
fcom
and
adc
dec
rcl
lea
mov
out
sbb
in
xlat
pop
(bad)
sub
xor
mov
pop
mov
repz
into
push
fadd
mov
add
div
leave
push
pop
(bad)
and
mov
xchg
ja
pusha
iret
push
fadd
xor
cmps
or
clc
bound
mov
mov
in
ja
out
rcr
inc
push
mov
mov
ins
idiv
(bad)
pop
(bad)
sub
adc
bound
jns
xor
fld
ss
push
ins
idiv
enter
test
mov
xchg
jbe
arpl
push
fld
ss
sub
stc
ins
dec
(bad)
pop
(bad)
sub
ins
out
push
(bad)
std
out
rcr
sub
data16
xchg
or
cmps
cmp
mov
cdq
add
dec
arpl
lods
es
jbe
data16
xchg
or
mov
pop
imul
jge
lea
lahf
lods
es
mov
cdq
add
xchg
(bad)
dec
(bad)
pop
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
dec
(bad)
pop
imul
pop
mov
pushf
aaa
lods
daa
mov
je
call
movs
aas
aam
les
outs
in
adc
add
xor
into
inc
fidiv
gs
xchg
push
test
mov
movs
aas
aad
les
outs
in
adc
scas
and
fidiv
gs
xchg
push
test
mov
pop
repnz
cdq
xor
inc
mov
xchg
or
cmp
dec
ret
imul
loop
test
inc
fdiv
arpl
xchg
or
cmp
dec
fwait
and
mov
cwde
xor
inc
fdiv
arpl
xchg
sub
(bad)
leave
dec
mov
pop
repz
adc
and
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
imul
ret
pop
mov
mov
sbb
arpl
push
enter
test
mov
imul
ret
pop
mov
mov
sbb
arpl
push
enter
test
mov
imul
ret
pop
mov
mov
sbb
arpl
push
enter
test
mov
imul
mov
sbb
pusha
sti
push
retf
inc
(bad)
stos
and
push
loopne
ror
pop
mov
mov
sbb
pusha
sti
push
retf
inc
(bad)
stos
and
jge
loopne
ror
pop
mov
mov
sbb
pusha
sti
push
retf
inc
(bad)
stos
and
pop
imul
ror
pop
mov
mov
sbb
popa
cli
push
retf
xor
add
dec
rcr
mov
sbb
popa
cli
push
retf
xor
add
fiadd
push
mov
add
outs
cmc
pop
lds
movs
cs
test
xchg
stc
gs
jne
inc
into
push
mov
add
outs
cmc
pop
lds
movs
cs
test
xchg
clc
fs
je
inc
iret
push
mov
add
adc
in
hlt
pop
les
aas
movs
das
mov
test
xchg
clc
fs
je
inc
iret
push
mov
add
adc
in
hlt
pop
les
aas
movs
das
mov
test
xchg
clc
fs
je
inc
iret
push
mov
add
adc
in
hlt
pop
les
aas
movs
das
mov
test
xchg
clc
fs
je
inc
iret
push
mov
or
hlt
pop
les
aas
movs
das
mov
test
xchg
sti
fs
je
inc
iret
push
mov
jmp
sti
nop
or
aam
movs
das
mov
test
xchg
clc
addr16
ja
inc
int3
push
mov
mov
xlat
pop
mov
dec
xlat
cmp
sub
sbb
or
clc
addr16
ja
inc
int3
push
mov
mov
aam
aad
dec
xlat
cmp
sub
sbb
or
clc
addr16
ja
inc
int3
push
mov
mov
aam
in
scas
aam
cmps
sub
sbb
or
stc
arpl
jae
inc
enter
dec
mov
mov
ror
jns
xlat
cmp
or
(bad)
pop
(bad)
dec
cmps
and
sub
cmp
int
fiadd
(bad)
cmp
push
popf
push
(bad)
out
imul
pop
(bad)
dec
cmps
cmp
add
jge
jb
adc
mov
push
(bad)
out
imul
pop
(bad)
dec
cmps
cmp
add
xchg
or
outs
es
push
(bad)
in
imul
pop
(bad)
dec
cmps
cmp
add
jp
imul
les
mov
push
(bad)
in
imul
pop
(bad)
dec
cmps
cmp
add
data16
push
pop
xor
push
(bad)
in
imul
pop
(bad)
dec
cmps
cmp
push
push
data16
jbe
aad
lds
mov
push
(bad)
in
imul
pop
(bad)
dec
cmps
cmp
or
data16
jbe
fiadd
push
xor
push
(bad)
in
imul
pop
(bad)
dec
cmps
cmp
or
data16
jbe
fiadd
push
xor
push
(bad)
in
imul
xlat
dec
cmps
cmp
mov
or
data16
push
dec
cmp
mov
js
push
mov
adc
jae
jge
(bad)
pop
(bad)
pop
and
cwde
adc
ret
pop
ror
cmp
popf
push
mov
(bad)
pop
(bad)
or
mov
adc
ret
pop
ror
cmp
add
jnp
outs
lds
cmp
mov
adc
ret
pop
ror
cmp
add
icebp
push
pop
dec
and
adc
ret
pop
ror
cmp
add
icebp
push
jl
enter
test
cwde
adc
ret
pop
ror
cmp
or
jbe
data16
aam
enter
test
cwde
adc
ret
pop
ror
cmp
or
stc
(bad)
retf
enter
test
cwde
adc
rcr
mov
xchg
adc
mov
std
(bad)
leave
pop
pop
retf
and
adc
int3
push
fadd
xor
mov
pusha
cli
out
leave
push
test
sub
cmp
or
sbb
in
ja
addr16
push
fadd
aaa
push
mov
ins
cmc
mov
leave
push
cmc
les
cmp
or
sbb
jmp
inc
lods
aaa
push
mov
ins
neg
retf
cmp
or
sbb
call
push
fadd
aaa
push
mov
ins
neg
enter
cmps
or
sbb
call
push
fadd
aaa
push
mov
ins
cmc
(bad)
(bad)
leave
push
fxch
sub
cmp
or
sbb
call
push
fld
ss
mov
push
push
fxch
sub
xchg
sbb
data16
fld
ss
mov
fist
(bad)
leave
push
ror
sub
xchg
sbb
data16
fld
ss
mov
jmp
push
std
(bad)
sub
xchg
sbb
data16
fld
ss
mov
jmp
push
sahf
(bad)
sub
xchg
sbb
(bad)
leave
push
fld
xor
or
stc
(bad)
leave
push
scas
ret
cmp
adc
push
popf
lods
es
or
stc
(bad)
retf
cmp
imul
jge
lea
popf
lods
es
or
stc
(bad)
imul
(bad)
pop
imul
jge
lea
popf
lods
es
push
enter
sub
cmp
imul
jge
lea
popf
lods
es
(bad)
adc
add
hlt
jg
mov
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
mov
pushf
aaa
lods
daa
mov
ja
addr16
xchg
or
sbb
sub
cmp
dec
(bad)
pop
imul
adc
lods
daa
mov
ja
addr16
xchg
or
sbb
sub
cmp
dec
(bad)
pop
imul
adc
and
push
iret
inc
fbstp
call
movs
aas
aam
les
outs
in
sbb
add
xor
and
push
iret
inc
fbstp
call
movs
aas
aam
les
outs
in
xor
and
fidiv
gs
xchg
push
test
mov
movs
ds
lds
outs
in
pop
mov
mov
jne
gs
xchg
push
test
mov
movs
ds
lds
outs
in
jne
add
push
leave
inc
fnstenv
(bad)
stc
xchg
or
cmp
dec
ret
imul
cdq
xor
inc
fnstenv
(bad)
stc
xchg
or
cmp
dec
ret
imul
cdq
xor
inc
fnstenv
(bad)
stc
xchg
or
cmp
dec
ret
imul
cwde
xor
inc
fdiv
arpl
xchg
or
cmp
dec
ret
pop
repz
sbb
push
enter
call
sbb
sub
pop
repz
mov
test
mov
jo
pusha
sti
nop
or
cmp
dec
rcr
xchg
add
jns
pop
stos
and
jo
pusha
sti
nop
or
cmp
dec
rcl
cdq
add
sub
(bad)
pop
imul
jge
lea
popf
lods
es
jbe
data16
xchg
or
cmps
cmp
imul
jge
lea
popf
lods
es
jbe
data16
xlat
adc
aad
mov
nop
jg
adc
adc
jg
or
dec
sar
mov
inc
cwde
mov
loopne
mov
pop
movs
bound
adc
jg
pop
fild
cmp
add
ret
sbb
lahf
sbb
mov
enter
test
in
mov
jle
test
mov
mov
mov
in
gs
lods
xor
test
das
cmps
cmp
movs
sub
jp
inc
scas
cmp
inc
jge
aam
sbb
inc
mov
jbe
hlt
ins
cmps
lea
aaa
ja
lods
xlat
dec
xchg
xchg
or
es
cmps
int
inc
(bad)
sbb
daa
addr16
or
pop
(bad)
and
nop
popf
xor
sahf
mov
and
out
imul
inc
jne
xchg
or
jae
xchg
imul
sbb
pop
cmps
cmp
mov
and
fsub
jae
rcr
mov
movs
ins
xchg
add
sub
mov
jbe
xor
pop
xchg
mov
jne
or
inc
bound
mov
popf
push
push
xchg
add
dec
out
mov
repz
mov
sub
lods
push
hlt
std
push
in
pop
(bad)
lods
ss
or
push
enter
ja
or
daa
das
cmps
lods
mov
ins
int3
and
sbb
and
xchg
call
xchg
or
rcr
cmp
lods
test
(bad)
and
clc
or
pop
mov
xchg
hlt
outs
push
or
xor
test
jbe
adc
dec
mov
test
les
pushf
inc
movs
outs
int3
jge
dec
in
adc
inc
(bad)
push
hlt
jbe
and
imul
call
dec
jmp
mov
(bad)
add
pop
gs
sub
aas
mov
add
xchg
inc
retf
sub
(bad)
frstor
adc
dec
fdiv
std
push
add
or
in
xchg
or
or
outs
cld
pop
lea
shl
(bad)
fs
dec
iret
pop
(bad)
jns
je
bswap
sbb
test
sbb
pusha
mov
and
adc
cmc
sub
xchg
movs
aas
mov
cmp
and
push
lea
and
sub
das
call
push
mov
or
cld
inc
mov
add
mov
mov
jns
or
cmp
inc
fnstenv
(bad)
stc
adc
and
repnz
sbb
leave
inc
fnstenv
(bad)
stc
adc
and
repnz
sbb
leave
inc
fnstenv
(bad)
stc
adc
and
repnz
sbb
leave
inc
fnstenv
(bad)
stc
adc
and
repnz
sbb
leave
inc
fnstenv
(bad)
stc
adc
and
repnz
sbb
leave
inc
fnstenv
(bad)
stc
adc
and
repnz
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
pop
jno
popa
jle
mov
jae
inc
dec
ds
ffree
out
icebp
ret
loope
mov
mov
xchg
fnsave
adc
xor
xor
and
push
scas
rcr
out
loope
xchg
mov
retf
inc
pop
add
sar
mov
test
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
mov
adc
jg
jnp
mov
fsubp
gs
ficomp
mov
lock
add
sbb
lods
ds
push
loope
xor
leave
mov
jno
arpl
(bad)
dec
pop
and
into
sub
cmp
sub
mov
jno
cmp
into
add
xchg
push
dec
xor
jp
out
adc
outs
ss
test
push
aas
adc
dec
call
pop
sahf
hlt
ins
mov
dec
jne
aas
xchg
adc
add
rcl
and
mov
loopne
dec
sbb
push
pop
minps
fs
rcr
in
iret
data16
in
adc
inc
pop
pusha
pop
popa
cmp
push
push
push
into
movs
xor
pop
nop
sub
xor
push
sbb
xchg
sahf
call
lea
jbe
jmp
out
and
mov
push
ror
fwait
mov
mov
sysexit
pop
popa
cmp
push
push
sub
mov
sbb
sbb
mov
sub
jl
rcr
xor
ret
sbb
cmp
lods
bound
dec
inc
stos
jno
and
adc
fiadd
cs
fdiv
xor
sub
(bad)
mov
pop
jmp
or
shr
(bad)
ror
test
xchg
mov
sahf
sbb
leave
mov
jno
popa
sub
fst
ja
ds
cmp
cdq
in
and
enter
mov
in
push
lea
jle
dec
imul
shr
xchg
cmp
jmp
dec
cmp
inc
jbe
in
ret
addr16
std
ficomp
mov
push
ins
fcomp
adc
inc
popf
xchg
aaa
popa
jle
push
cmp
pop
sub
fisttp
or
mov
cmp
adc
add
je
and
xor
out
cmp
stc
pop
call
retf
add
jo
test
adc
sub
aas
adc
cwde
fdivp
push
loope
aam
sbb
mov
sbb
outs
mov
out
or
or
adc
pop
retf
jmp
mov
xor
xor
dec
dec
outs
loop
aam
push
fidivr
clc
jmp
mov
mov
mov
pop
iret
mov
pop
push
je
and
and
(bad)
sbb
imul
adc
sbb
cmp
pop
add
xor
nop
cs
sub
and
les
scas
call
dec
(bad)
jb
and
ds
test
push
ins
xor
push
add
pop
jmp
lock
mov
imul
mov
pop
fidiv
or
push
mov
xor
push
adc
imul
xchg
ds
in
das
mov
cmp
sub
dec
dec
sbb
outs
and
adc
loope
cmp
push
icebp
movs
jne
xchg
add
xchg
dec
push
stos
mov
je
fist
pop
icebp
cs
jp
mov
fisubr
dec
or
push
sbb
jo
popa
cmc
push
test
ja
mov
cmps
or
jb
sub
mov
sub
shr
push
jmp
jecxz
(bad)
test
mov
fldcw
adc
pop
outs
and
int3
push
add
stc
cs
mov
out
loope
xchg
dec
(bad)
div
dec
adc
sub
jg
rcr
xor
sub
loope
test
bound
dec
inc
cs
and
adc
fiadd
cs
fmul
mov
sub
(bad)
mov
pop
jns
cmp
jns
ret
cs
ror
test
xchg
mov
sbb
leave
mov
jno
popa
sub
fst
ja
lods
into
cmp
cdq
out
and
enter
mov
in
push
lea
jle
dec
imul
rol
sub
sbb
sub
not
dec
inc
jbe
in
ret
into
inc
ficomp
mov
push
ins
fcomp
adc
inc
popf
xchg
aaa
popa
jle
push
cmp
pop
das
loop
mov
rol
movs
xchg
nop
dec
fs
mov
lods
mov
mov
cmp
or
sub
std
xor
rcr
out
cmp
stc
pop
call
retf
add
jo
xchg
adc
gs
sbb
dec
aas
adc
cwde
fdivp
mov
sub
out
pop
push
mul
sbb
outs
mov
dec
xor
bnd
or
mov
aam
les
push
and
(bad)
xor
push
inc
xchg
lahf
sar
rcr
ror
pop
xor
in
push
ins
and
push
adc
add
xor
dec
aas
outs
add
(bad)
aam
xor
sub
sub
adc
adc
mov
iret
add
jp
mov
adc
push
dec
sub
mov
pop
push
je
and
xor
cmc
and
adc
push
pop
push
jp
sub
xchg
and
out
pusha
cmp
add
jp
push
mov
in
push
sbb
mov
out
fidiv
movs
gs
rol
xchg
pop
loope
push
mov
jle
and
test
cmp
aas
pop
ds
or
push
xchg
inc
fbstp
outs
mov
inc
jno
jo
adc
push
data16
fidiv
sbb
and
sbb
cmp
and
rcl
pusha
push
ds
or
loope
adc
pop
ret
inc
in
add
pop
xor
iret
or
fs
ror
push
(bad)
pop
retf
jmp
mov
xor
pusha
mov
lds
cmp
mov
out
loope
xchg
dec
(bad)
div
dec
movs
pop
sbb
or
rcr
xor
rcr
mov
fldcw
inc
ss
and
adc
loope
xor
mov
fmul
mov
sub
(bad)
mov
pop
adc
cmpps
cs
ror
test
xchg
mov
sbb
leave
mov
jno
popa
sub
fst
ja
ds
out
and
mov
(bad)
push
lea
jle
dec
imul
rcl
loopne
jb
sbb
sub
pop
adc
jbe
in
lds
into
(bad)
stos
mov
push
push
sahf
mov
mov
popf
xchg
aaa
popa
jle
push
cmp
pop
das
loop
mov
shl
or
mov
sbb
mov
cmp
fiadd
sub
std
aaa
xchg
rcr
out
cmp
stc
pop
call
retf
add
jo
xchg
adc
aad
sbb
leave
aas
pop
std
dec
push
or
mov
sti
inc
push
inc
pop
js
mov
sbb
and
(bad)
mov
fisubr
pop
jle
out
scas
lock
fcomp
jae
lahf
sahf
lea
imul
bound
xor
xchg
jle
(bad)
ja
sub
lahf
add
and
sub
and
cmc
ds
fsubp
out
xor
popa
(bad)
jp
cli
lods
sub
or
sar
mov
into
sub
pusha
out
ins
in
fidiv
mov
pop
repnz
sbb
and
push
hlt
jae
lahf
fcom
mov
pop
cmp
sbb
push
mov
aad
inc
das
loopne
dec
retf
mov
mov
(bad)
hlt
push
mov
push
dec
inc
shl
pop
add
push
xchg
and
lods
ret
sub
cli
adc
loop
dec
cmps
adc
xchg
cmp
and
jl
pop
xor
rcr
loopne
jecxz
xor
jecxz
cmp
jno
pushf
cwde
ds
sbb
or
inc
daa
movs
pop
mov
jecxz
hlt
push
pop
inc
loope
sub
clc
add
sti
ins
mov
cmp
popa
mov
or
pop
mov
mov
mov
mov
popf
jp
hlt
mov
dec
mov
push
sar
iret
sahf
imul
lahf
xchg
fisttp
adc
jae
das
jle
mov
pop
scas
push
dec
inc
ror
push
add
call
dec
pop
in
loope
xchg
dec
(bad)
in
lock
jl
popa
cmc
fs
iret
bswap
cmps
or
inc
in
jp
mov
test
and
push
jae
in
sbb
sbb
add
mov
mov
ins
(bad)
and
xor
rcl
mov
jge
xor
movs
aam
ret
push
adc
ret
into
push
ds
inc
ds
xor
push
scas
popf
inc
dec
popa
popf
sub
sub
fsub
adc
adc
add
fidivr
in
ins
mov
jmp
push
sar
in
outs
xchg
or
push
xor
sub
push
cli
out
test
cmc
scas
mov
test
fimul
repnz
loope
cli
test
push
dec
in
adc
sti
(bad)
in
dec
jp
jge
sbb
jg
enter
cs
jo
iret
ds
push
mov
lahf
sub
mov
ror
add
fidiv
or
dec
lds
mov
in
mov
lea
jle
pop
fs
cli
inc
std
or
adc
adc
cmp
in
aam
leave
fidiv
ins
mov
push
fld
jne
fwait
lds
cmc
push
pop
add
popa
cs
jp
imul
call
cmp
jno
popa
jno
in
inc
mov
adc
xchg
sub
pushf
push
cmp
push
out
int
into
dec
retf
jl
loope
sub
and
add
popa
and
arpl
and
data16
mov
inc
sbb
xchg
in
adc
xor
push
ror
fidiv
jnp
cli
jle
cmp
mov
mov
dec
or
xchg
and
loope
xlat
retf
rcl
rcr
sti
inc
(bad)
jl
sahf
repz
dec
add
outs
xchg
xor
and
adc
ins
les
retf
sbb
sahf
mov
das
and
sub
adc
call
ins
stos
aam
mov
xor
add
stos
and
fmul
ds
loopne
and
cmc
scas
loope
mov
sub
outs
xor
(bad)
dec
bnd
jno
pop
into
test
icebp
sub
add
movs
sub
adc
sbb
mov
jle
cmp
into
sub
push
dec
das
xchg
daa
loope
adc
mov
pop
mov
adc
call
pop
and
rcr
push
mov
dec
lds
push
out
scas
fmul
stos
jno
mov
sbb
loop
leave
rol
adc
in
sahf
std
mov
cmp
loop
pop
sbb
mov
adc
dec
loope
sub
pop
dec
pop
mov
or
mov
retf
inc
rcr
addr16
dec
bound
imul
add
mov
ja
pop
xor
scas
popa
cmp
retf
ins
cmp
xchg
or
sbb
xchg
pop
aad
and
lea
sahf
cmc
shl
or
int
add
pop
movs
mov
pop
ficomp
xchg
test
outs
xchg
stos
adc
pop
or
jne
adc
push
or
mov
enter
scas
scas
sbb
aad
xor
in
mov
pop
mov
sahf
retf
arpl
into
pop
cmps
pop
xor
push
mov
sub
retf
cmc
and
push
sar
jbe
mov
scas
pop
int3
sti
xor
icebp
add
imul
ds
jmp
jno
popa
mov
mov
call
not
push
je
gs
cs
pop
retf
mov
loope
rol
push
add
sub
outs
test
push
cmc
pop
or
xchg
ds
xor
retf
jnp
movs
int
bound
or
int
nop
mov
sahf
(bad)
adc
dec
mov
xor
push
movs
test
adc
mov
shl
sahf
outs
pushf
pop
xor
and
dec
iret
mov
out
jle
cmp
rol
ret
push
pop
mov
out
sbb
ret
les
push
mov
mov
iret
mov
mov
mov
daa
pop
mov
aas
stos
iret
lock
loope
adc
sub
les
pop
or
and
xor
mov
jno
mov
fcomp
inc
ror
fiadd
(bad)
mov
push
xchg
call
lds
shr
and
xlat
push
imul
ror
lods
ds
retf
hlt
scas
test
outs
mov
xor
out
loop
mov
rcl
loope
outs
add
mov
aad
jnp
cmp
pop
push
push
cmp
inc
aam
push
mov
test
jno
push
mov
ja
popf
jno
mov
mov
into
test
outs
in
sbb
add
popa
sub
jo
add
cmp
(bad)
jns
iret
mov
mov
sahf
outs
xor
pop
push
jns
leave
dec
jge
aas
fimul
or
scas
pop
push
mov
pop
fs
rcl
and
cmps
gs
or
mov
jnp
cmp
push
mov
shr
ins
jae
lahf
sbb
jno
and
popf
cmp
stos
ds
icebp
out
in
inc
jno
(bad)
dec
xor
inc
mov
xchg
jmp
out
test
iret
in
je
pop
add
loope
sub
in
push
ret
push
pop
movs
call
mov
inc
dec
and
sub
scas
pop
jle
lds
cld
xchg
ds
pop
adc
cs
(bad)
jne
rcr
add
clc
sti
adc
test
std
stc
jp
push
je
or
xor
(bad)
in
pop
(bad)
mov
pop
cld
mov
xor
push
ror
ds
test
outs
xchg
xor
lock
out
int3
mov
loope
add
push
and
lock
xchg
repz
cmc
daa
repnz
fmul
pop
jle
mov
jae
loope
ror
xchg
sahf
xchg
and
fwait
sbb
push
mov
sub
cwde
dec
push
sbb
or
xchg
lahf
mul
cmps
loop
jp
test
jle
ja
sub
adc
popf
cmp
add
xchg
popf
mov
push
loop
pop
fwait
lds
scas
sub
sbb
int3
mov
sub
pushf
push
std
xchg
into
ss
fistp
mov
movs
push
pushf
mov
jno
mov
lea
sbb
outs
and
(bad)
shr
icebp
adc
jmp
faddp
xor
mov
add
cmps
adc
pcmpeqb
stos
jp
xor
scas
adc
idiv
jne
popa
mov
mov
std
rcr
inc
jbe
test
or
sbb
rcl
movs
shr
out
cmc
xchg
icebp
cli
vpsrad
pop
iret
push
sub
sbb
sub
add
mov
icebp
das
rcr
aam
sbb
pop
pop
xchg
ret
add
stos
adc
mov
sub
out
lods
(bad)
rol
and
(bad)
fst
adc
sub
call
stos
shr
xchg
retf
push
arpl
outs
add
and
or
inc
(bad)
jno
je
inc
and
in
sub
test
xlat
jne
loope
ins
pop
inc
ret
enter
xor
(bad)
into
int
cmp
movs
(bad)
pop
xchg
les
or
xchg
xchg
push
cmc
jle
mov
inc
iret
push
or
retf
mov
or
jno
xchg
cmc
sbb
dec
jb
adc
outs
and
or
sbb
sub
std
in
pop
or
outs
dec
push
add
jae
inc
adc
mov
jp
lods
xchg
adc
pop
sahf
push
inc
sub
or
and
div
sub
jmp
fcmove
in
into
push
xchg
ror
out
test
jb
mov
sub
fs
pextrw
fwait
in
mov
or
adc
and
add
jo
fs
stos
jnp
mov
push
cmp
imul
jno
mov
imul
sub
pop
mov
lods
(bad)
in
stos
popf
mov
and
push
sbb
jbe
std
stc
(bad)
test
cmp
in
retf
xchg
out
pop
jp
in
enter
div
sub
mov
in
pop
push
dec
cmc
lock
sbb
sahf
mov
mov
add
jle
inc
xor
push
or
into
lods
pop
rcr
xchg
fidivr
int
enter
loopne
mov
aad
imul
inc
push
(bad)
pop
outs
movs
and
sbb
push
lea
ins
div
in
push
inc
retf
sub
sub
push
ja
mov
es
shl
xchg
jmp
xchg
sub
cmp
popa
jbe
cmp
sub
aad
pop
dec
cmp
add
or
stos
test
sbb
in
push
xor
inc
dec
(bad)
stc
fwait
push
xchg
int3
inc
sub
and
stos
xlat
sub
call
das
push
ss
(bad)
push
test
mov
jmp
test
gs
lods
daa
cmp
cs
stos
sub
mov
adc
lods
stc
fs
mov
(bad)
out
addr16
cpuid
dec
pop
das
(bad)
lock
add
hlt
jmp
dec
scas
movs
fst
push
mov
xor
int
ror
push
cdq
xchg
ss
and
pop
cmp
shl
jmp
cmps
stos
ror
pop
jp
out
cli
push
add
in
push
pop
dec
mov
gs
and
imul
sar
ret
mov
(bad)
rcr
clc
lock
mov
mov
outs
pop
mov
mov
fidivr
cmp
jmp
pop
inc
call
call
inc
mov
clc
cwde
mov
jmp
adc
xor
mov
xor
dec
into
es
std
xchg
xor
jne
movs
or
mov
inc
scas
cli
push
jmp
push
pushf
fidivr
stos
and
sahf
(bad)
fstp
sbb
jne
mov
push
inc
sub
add
sub
add
sbb
loopne
and
(bad)
sbb
jbe
out
push
je
mov
sub
(bad)
jns
inc
pusha
cld
fisub
sub
mov
aam
cmps
xor
sub
ror
sub
sbb
xchg
cmp
retf
mov
daa
mov
repz
scas
dec
jne
gs
xchg
xchg
(bad)
ret
out
xchg
scas
jle
cmp
sub
lock
sbb
sub
cs
push
add
sub
mov
lock
fld
mov
add
pop
dec
mov
dec
fwait
or
test
not
scas
scas
outs
inc
pop
push
xchg
push
jl
ds
pop
mov
xchg
shl
push
mov
aas
sub
xor
(bad)
cli
and
ror
adc
mov
mov
call
aad
add
fistp
fisubr
dec
imul
push
mov
dec
mov
jle
icebp
xor
push
fidivr
into
and
(bad)
pop
in
pop
pop
retf
scas
push
dec
inc
xchg
and
sahf
adc
ret
imul
ror
push
icebp
and
fucomi
lods
out
and
sbb
das
std
out
cli
add
rol
into
jg
adc
dec
aaa
push
or
aad
sub
adc
(bad)
cdq
sub
stc
out
neg
fld
push
je
dec
jge
jp
ds
adc
ds
xlat
or
cdq
mov
mov
pop
cmp
daa
test
cmc
adc
sub
cmp
sbb
popa
stc
adc
jo
jmp
pop
fidiv
aas
pop
xchg
mov
into
mov
out
outs
jecxz
mov
dec
sbb
ficomp
icebp
adc
cmc
jae
ss
into
movs
cmp
out
bound
xor
popa
cmp
jb
ror
(bad)
rcl
pop
pop
inc
dec
lods
sbb
sub
jecxz
pop
push
pop
cmp
xchg
cmps
test
ins
in
lahf
punpcklbw
add
and
jle
push
push
inc
into
movs
xor
cwde
fild
inc
inc
loope
fcomp
aam
outs
sahf
sub
add
je
xor
test
es
call
lods
xchg
inc
fcomp
scas
lds
jg
jl
push
inc
dec
cmp
inc
sahf
ficomp
xlat
mov
(bad)
push
outs
inc
push
daa
sub
out
sbb
test
cwde
(bad)
xor
mov
sti
push
mov
aad
outs
or
pop
fiadd
(bad)
gs
scas
mov
aam
jle
cmp
mov
sub
dec
cmp
cli
imul
mov
and
gs
retf
ins
idiv
ss
popa
ds
sub
cmp
fisub
mov
mov
clc
mov
mov
je
pop
pop
imul
inc
stos
fimul
sbb
aaa
xchg
aaa
nop
sahf
pop
jmp
das
outs
or
out
push
popa
cmp
cmp
loope
xchg
cli
xor
dec
push
pop
mov
push
jmp
shl
test
push
ret
(bad)
fisttp
add
jno
popa
xchg
push
lods
add
adc
outs
ds
sub
xchg
ret
cmp
cmps
pop
pop
cmp
sub
dec
mov
jae
outs
shl
dec
loope
mov
dec
cli
repnz
test
dec
adc
inc
mov
popf
into
inc
ficomp
stos
inc
(bad)
jns
adc
adc
outs
sub
push
call
pop
rol
movs
pop
xchg
data16
mov
cdq
dec
popa
xor
pop
add
jne
and
lock
mov
gs
or
mov
mov
std
jno
inc
jle
push
push
push
fsubr
ds
rcl
sub
jmp
sbb
outs
mov
add
shl
loope
mov
sbb
js
and
push
jbe
mov
int
xchg
xor
inc
push
mov
enter
sub
icebp
test
es
lds
mov
cmp
stc
cs
dec
mov
ror
out
movs
jmp
mov
mov
or
and
ds
dec
push
icebp
adc
aad
jns
fdiv
cmc
dec
in
jnp
cli
cmc
sub
ret
test
pop
test
push
or
test
push
push
inc
sub
add
mov
ja
sub
fmul
call
(bad)
push
imul
and
lods
xchg
mov
in
sbb
and
push
push
adc
xor
mov
in
loope
sbb
lea
std
pop
ret
cmp
xor
ficom
xor
stos
jae
inc
test
push
loope
mov
jge
mov
(bad)
inc
inc
dec
adc
popa
cs
or
int
and
inc
mov
mov
jb
sahf
loope
sub
push
ret
inc
cwde
xor
test
add
lods
mov
sti
rcr
mov
or
push
jmp
push
add
(bad)
push
xchg
arpl
or
inc
mov
xor
and
xchg
push
and
cmps
sub
lds
stos
push
dec
adc
sub
fdiv
ds
into
test
out
or
xchg
xor
loope
sub
das
dec
push
adc
push
mov
xchg
into
sub
icebp
adc
mov
dec
inc
pop
cdq
stos
movs
cmp
cli
fld1
and
fwait
out
daa
(bad)
sbb
or
mov
sub
push
cmps
xchg
sub
push
fld1
and
xchg
sahf
and
mov
hlt
and
mov
mov
dec
dec
je
ins
jmp
loope
xchg
movs
or
aad
and
cmp
mov
jb
push
mov
add
push
jl
loope
sbb
mov
test
(bad)
into
popa
xor
sub
mov
stos
fnstcw
leave
(bad)
mov
dec
xchg
or
cs
fwait
icebp
stos
ins
xchg
fadd
or
mov
gs
cdq
inc
and
adc
inc
(bad)
aad
jno
aad
stos
and
add
pop
sbb
movs
(bad)
jno
mov
in
mov
xchg
fmulp
out
ins
test
mov
lods
mov
jno
test
icebp
push
daa
pop
jmp
and
retf
mov
stos
inc
sub
add
push
jo
jo
add
imul
pop
stos
add
add
les
scas
dec
xor
outs
cmps
cmp
into
add
mov
inc
rcl
and
xchg
add
dec
dec
in
mov
and
add
jb
jns
sub
cmp
or
push
dec
adc
and
ror
inc
jnp
xchg
outs
ror
sar
mov
push
cmp
fistp
mov
sbb
popf
adc
add
xor
(bad)
pop
test
mov
movs
mov
jno
cmps
jle
pop
inc
loopne
dec
and
mov
ss
out
loope
outs
add
cli
mov
in
push
cmps
xchg
jecxz
adc
(bad)
pop
jne
and
lods
call
retf
and
sbb
jno
in
repz
push
push
xchg
movs
call
xchg
fidivr
add
mov
or
and
aad
int
inc
bound
or
call
scas
nop
jno
sahf
mov
in
adc
adc
lea
pusha
adc
jmp
lock
pop
hlt
scas
lock
mov
arpl
push
retf
pusha
movs
fisttp
shl
add
cmp
mov
adc
xchg
dec
inc
adc
and
inc
test
push
jne
and
pop
into
ror
add
mov
cmps
lds
ins
shr
icebp
stos
loope
push
retf
mov
adc
daa
jae
in
adc
(bad)
inc
aam
frstor
mov
adc
scas
cmps
push
outs
and
jle
enter
rcr
fldenv
aas
push
cld
fstp
(bad)
outs
lahf
jle
ja
mov
push
in
adc
leave
mov
or
pusha
push
es
add
in
fidiv
dec
inc
dec
mov
mov
retf
adc
inc
je
dec
das
pop
mov
mov
pop
push
ror
mov
pop
cmp
(bad)
jle
xchg
(bad)
push
into
sar
sub
push
cwde
jae
mov
mov
inc
retf
pop
repz
int3
test
(bad)
movs
loope
jge
mov
int3
dec
fidiv
loope
call
xor
test
sbb
rcl
pop
and
dec
push
test
ja
pop
xor
mov
add
popf
cmp
inc
(bad)
mov
xchg
into
cmp
sub
fadd
sar
xchg
and
in
icebp
test
rcr
fld
push
fidiv
out
lods
add
(bad)
loope
pop
mov
int3
mov
pushf
icebp
(bad)
test
jmp
fwait
icebp
stos
daa
add
jle
mov
dec
inc
fiadd
mov
adc
(bad)
into
sahf
fs
sbb
push
or
jno
pop
mov
pop
cmp
retf
outs
and
add
aad
popa
shl
rcl
sbb
bound
add
mov
jle
pop
add
cmp
mov
add
mov
cmc
and
(bad)
jae
cdq
jle
cmp
xchg
int
and
cmp
sub
je
push
jne
mov
fisttp
pop
push
add
rol
mov
xor
sar
sub
cmp
jl
push
push
popa
jno
test
aam
add
mov
add
and
cmp
cld
test
(bad)
push
retf
hlt
clc
inc
inc
adc
xor
adc
jmp
add
rcr
movs
mov
add
push
dec
adc
outs
popa
cmp
mov
rcl
loope
pop
into
dec
ror
adc
icebp
popf
inc
sahf
pop
push
fcomip
adc
mov
cmp
icebp
jmp
iret
xlat
mov
(bad)
fadd
sub
adc
in
outs
inc
icebp
repnz
call
rcr
out
loope
sbb
jnp
mov
test
xor
inc
or
xor
ror
retf
test
adc
adc
shl
xchg
cmc
jmp
cs
aam
icebp
push
jmp
retf
push
cmps
mov
repz
aad
popf
retf
sub
mov
jge
cmp
addr16
sbb
cmp
enter
jae
jp
into
sub
mov
retf
rcr
xor
ret
add
jno
popa
add
call
pop
fwait
mov
scas
mov
mov
inc
inc
pop
or
jle
enter
aas
faddp
cmp
sbb
faddp
jp
jmp
mov
popa
cmp
mov
sub
dec
iret
mov
loop
test
sar
mov
mov
cmp
dec
out
sub
push
into
aad
inc
fwait
mov
aam
jge
ja
mov
adc
icebp
aad
and
fidivr
lock
jl
xchg
add
mov
inc
dec
xor
adc
pop
xor
shr
jmp
shl
scas
and
sbb
add
cli
xchg
sahf
add
mov
popa
es
adc
aam
xor
stos
gs
dec
cld
xchg
xor
(bad)
xor
fimul
fwait
mov
xor
and
pop
fdiv
mov
ficomp
ins
popa
out
jns
or
inc
adc
jno
adc
add
jg
daa
xor
sti
add
jns
cmp
pop
das
bound
cli
sbb
dec
jl
sbb
sahf
cwde
cmp
push
jne
lea
jecxz
icebp
add
add
and
dec
test
loope
pop
adc
inc
vpslld
mov
xlat
push
add
sub
aad
or
lods
or
test
add
cmps
sub
mov
neg
jle
jns
dec
xor
clc
out
xchg
shr
push
icebp
push
fimul
les
xchg
mov
sub
dec
test
or
jnp
nop
int
mov
not
rol
popa
push
mov
lds
jbe
or
xor
mov
fiadd
mov
lock
pop
cmp
mov
pop
outs
xchg
dec
enter
(bad)
xchg
rol
das
in
xor
jmp
sbb
mov
sub
adc
xchg
fldenv
(bad)
in
loope
sbb
lods
xor
sub
in
sbb
push
loop
cmps
fs
sub
jmp
fucomi
inc
div
push
gs
or
mov
(bad)
and
nop
or
ins
mov
dec
jmp
mov
jno
in
lock
push
movs
loope
push
dec
push
into
rcl
imul
and
adc
and
in
mov
lds
mov
into
leave
push
sub
add
xlat
pop
xor
dec
push
pop
jno
fcomip
inc
test
stc
push
rol
stos
pop
jne
bound
push
mov
add
push
push
loopne
shl
imul
jb
imul
cli
frstor
xchg
aaa
stc
fwait
xor
mov
jne
mov
xor
jmp
add
push
addr16
pshufw
popa
pusha
and
push
jmp
loopne
ret
(bad)
popa
mov
mov
popa
mov
test
push
cs
mov
add
sbb
lods
stos
adc
and
gs
adc
jno
sbb
mov
xor
pop
mov
jmp
movs
mov
jb
mov
imul
fiadd
adc
arpl
and
jae
mov
or
or
jmp
or
push
add
into
rcl
xchg
inc
cmp
mov
cld
push
push
sbb
cmp
(bad)
fsubr
sbb
fnstcw
adc
sub
adc
sahf
cld
jmp
pop
out
adc
data16
(bad)
sub
ror
adc
shl
scas
mov
mov
jg
mov
rol
test
ins
jae
into
shl
ds
pop
std
test
fisub
outs
loop
push
pop
adc
jle
aas
das
inc
leave
push
cmps
stos
cmp
mov
mov
mov
std
xor
xchg
xor
inc
leave
stos
mov
(bad)
int3
adc
fmul
dec
jns
popa
xor
(bad)
pop
dec
push
jge
ror
shl
lea
push
idiv
mov
adc
(bad)
xor
jno
or
fiadd
mov
int3
adc
retf
fistp
add
push
and
cmc
pop
xor
fcmovbe
dec
dec
fsubp
icebp
loope
fmul
and
xchg
sub
push
imul
into
fs
sbb
lds
mov
cmp
cli
xor
je
test
cmp
inc
adc
sbb
daa
addr16
and
aad
outs
or
mov
into
loope
cmc
arpl
jp
and
inc
fdiv
pop
push
mov
and
pushf
movs
mov
mov
fmul
aad
lods
jno
std
loop
pop
mov
sbb
and
jmp
cmp
mov
push
xor
inc
loope
cs
les
adc
push
loope
sbb
push
stos
dec
jmp
xor
bound
(bad)
mov
jmp
jno
(bad)
mov
xchg
jae
push
imul
sbb
ds
out
mov
ret
sahf
repnz
jmp
jecxz
std
xchg
jnp
sbb
push
cld
and
das
loop
xlat
test
sbb
dec
push
clc
inc
aaa
dec
fild
leave
mov
icebp
ins
cmps
not
add
mov
dec
mov
xor
les
adc
sbb
xchg
(bad)
lods
sar
ret
adc
fdiv
push
jmp
or
fsubr
dec
mov
pushf
lea
mov
jp
bound
add
out
dec
fadd
and
in
add
pop
or
cli
pop
push
je
test
mov
ins
(bad)
sbb
bound
pop
sbb
jecxz
pop
inc
test
retf
xchg
arpl
pop
gs
aam
push
mov
les
ins
add
rol
fwait
xor
adc
jmp
and
dec
nop
jno
xlat
mov
xchg
xor
xchg
xlat
jl
jno
cmp
out
(bad)
jmp
mov
(bad)
out
xchg
inc
retf
(bad)
mov
and
shl
scas
adc
sbb
or
xor
jo
pop
or
cmps
out
adc
cmp
dec
add
mov
repz
jb
mov
repnz
loope
loope
sbb
sbb
(bad)
in
jmp
pop
xor
fidiv
dec
and
shr
mov
call
mov
fild
jne
mov
sub
push
add
sbb
sbb
add
ficomp
mov
test
add
jl
lds
aas
shl
add
dec
fs
ror
pop
fdivp
stos
or
js
ret
mov
lods
pushf
cmp
jno
sahf
cmc
inc
loop
adc
jne
mov
cld
xchg
retf
dec
mov
push
sub
test
inc
push
imul
push
jp
pop
jne
mov
xor
jno
sahf
jbe
test
sbb
dec
(bad)
loope
in
sbb
dec
or
shl
cmps
cmp
mov
or
mov
iret
dec
xor
jmp
retf
mov
dec
mov
aaa
jg
aam
or
cmp
(bad)
or
adc
or
scas
cmp
mov
stc
push
add
xor
sahf
inc
push
xchg
sub
jae
mov
pop
dec
test
ret
aaa
mov
or
(bad)
mov
fisubr
movs
pop
fidivr
sbb
enter
leave
daa
pusha
xor
mov
fnstcw
push
push
xor
test
xchg
fild
repnz
jbe
mov
dec
mov
xchg
xchg
test
xor
pop
sbb
stos
fild
movs
je
xor
xlat
pop
scas
pop
xor
or
xor
stos
sar
out
inc
rcr
movs
sbb
and
adc
sub
cmc
pop
loop
push
xor
lahf
xchg
sahf
ret
(bad)
loopne
dec
add
add
add
pop
sbb
mov
push
lock
ds
mov
test
(bad)
mov
mov
mov
push
(bad)
jne
(bad)
shl
aam
mov
mov
inc
push
dec
sbb
mov
jmp
(bad)
rol
movs
add
mov
adc
push
dec
inc
pop
shr
sub
pop
out
hlt
mov
cmc
jmp
adc
dec
int3
rol
pop
xor
loopne
ror
ror
pop
or
scas
dec
mov
cmps
sbb
out
xchg
int
and
ficomp
stos
daa
(bad)
fdivr
rol
mov
mov
cmps
retf
push
(bad)
pop
dec
add
icebp
or
sbb
jne
hlt
outs
test
mov
sbb
not
leave
shr
add
jp
loope
ins
xchg
mov
xor
sub
shr
cmp
into
in
xor
adc
cdq
xchg
mov
stc
xor
aad
(bad)
loopne
sbb
test
pop
popf
scas
sahf
add
gs
push
add
fs
mov
(bad)
out
addr16
pextrw
inc
xchg
mov
daa
and
mov
(bad)
ror
addr16
(bad)
test
or
jmp
shl
shl
and
movs
cli
sbb
test
xlat
test
outs
inc
push
inc
or
xchg
push
cmc
gs
sbb
xchg
cwde
cld
jmp
jo
pop
cmc
push
xchg
ds
xchg
xchg
add
test
pop
clc
imul
push
in
stos
movs
mov
jmp
adc
mov
xor
xchg
call
jbe
(bad)
xchg
push
icebp
push
loope
aam
sbb
pop
sub
pop
xlat
in
(bad)
addr16
xchg
daa
cmc
out
icebp
add
les
mov
pop
inc
data16
aad
in
sub
xchg
push
test
test
mov
cld
call
jns
pop
inc
call
jge
dec
rcr
mov
test
mov
push
mov
into
int3
push
aad
cwde
leave
fdivp
aad
cli
sbb
lock
mov
adc
movs
rcl
lea
gs
aam
xchg
(bad)
out
mov
inc
pop
pop
cmp
sub
xor
jp
lock
aad
mov
pop
inc
add
gs
sbb
pop
xor
dec
call
add
xor
(bad)
mov
nop
sub
pop
push
(bad)
repnz
or
daa
test
pop
(bad)
pop
cmp
pop
jecxz
(bad)
adc
out
push
or
gs
repnz
div
(bad)
pop
sbb
and
push
addr16
inc
inc
sub
sahf
cmp
mov
push
pusha
xchg
ss
stc
(bad)
push
xor
sub
xchg
inc
rcr
stos
sbb
mov
mov
call
sbb
lods
sub
call
xchg
and
call
rcr
in
mov
repnz
adc
rcr
adc
ins
fucomi
mov
xchg
fist
adc
fisub
into
xchg
add
nop
bound
dec
(bad)
aam
mov
xor
cmp
jle
pop
or
cmc
xchg
xchg
push
out
in
push
outs
mov
dec
mov
pop
mov
loope
(bad)
loope
push
jae
adc
and
and
mov
jle
cmps
dec
pop
and
jle
inc
(bad)
cmp
inc
call
rcr
out
mov
sbb
or
dec
dec
push
fidivr
pop
jo
adc
mov
int
and
mov
rcl
jo
repnz
outs
call
retf
push
add
in
inc
dec
adc
jno
ret
outs
and
lahf
push
cdq
pop
xchg
out
jl
fsubr
add
mov
lahf
add
mov
fsubr
loop
xchg
je
and
pop
nop
shl
and
or
pop
sbb
mov
sbb
xlat
push
xchg
xor
cmp
mov
xor
mov
mov
loop
out
imul
dec
cwde
ficomp
out
mov
das
inc
inc
mov
jb
inc
dec
lods
pop
mov
sub
test
(bad)
and
jo
push
jecxz
sub
sub
mov
fsubr
outs
mov
push
mov
not
out
sbb
aam
rcr
aaa
mul
loopne
scas
jae
fdiv
rdtsc
ret
xchg
in
shr
loope
test
add
sub
jle
xchg
(bad)
xchg
and
push
fidiv
mov
movs
addr16
inc
dec
(bad)
pop
jne
mov
mov
jmp
(bad)
icebp
push
(bad)
inc
mov
sahf
pop
jmp
jno
popa
xchg
push
lods
add
adc
mov
xchg
into
sub
xchg
sbb
sbb
in
sar
mov
stos
rol
shl
dec
loope
mov
adc
cli
repnz
test
out
adc
inc
mov
inc
into
xor
sbb
or
push
outs
bnd
push
call
sbb
pop
shl
pop
movs
pop
xchg
data16
sahf
and
loop
cdq
dec
popa
in
adc
and
hlt
into
push
fdivp
out
or
mov
mov
std
jno
inc
jle
push
jge
fsubr
ds
ror
loope
aad
xor
dec
test
shr
pop
adc
gs
shl
in
jle
sar
retf
pop
mov
mov
int
xchg
xor
mov
jmp
into
sub
icebp
pusha
loope
xchg
lds
mov
test
cwde
sub
jle
sub
nop
xor
and
xchg
ins
shl
out
ins
(bad)
xchg
mov
adc
inc
push
setno
xchg
dec
ret
push
icebp
movs
and
bound
or
ins
aam
pop
mov
mov
mov
sbb
mov
(bad)
test
xchg
mov
pop
jno
repnz
and
data16
in
(bad)
xchg
xor
xor
ficomp
add
mov
outs
xor
pop
inc
loop
and
arpl
out
movs
ja
(bad)
imul
pusha
mul
adc
push
pop
xor
lahf
fidiv
call
scas
mov
cwde
popf
dec
scas
xor
fbld
dec
adc
outs
fst
lods
jbe
jb
popa
cmp
enter
sahf
jle
push
mov
and
sbb
lods
aad
or
push
adc
cmp
add
jmp
jbe
lea
retf
jge
gs
in
sbb
mov
pusha
ds
cmp
xor
cdq
and
sub
mov
cmp
data16
lds
dec
pusha
inc
adc
idiv
ds
or
ret
movs
mov
inc
sti
push
and
gs
and
push
ss
fld
mov
(bad)
ins
retf
cmp
inc
mov
and
dec
add
jl
xor
sub
mov
test
cmp
dec
int3
mov
sub
mov
ret
test
jl
daa
(bad)
aam
(bad)
fidiv
pop
mov
pusha
in
or
aas
outs
sar
shl
lahf
aad
repnz
adc
cs
add
and
cli
popa
test
lock
ret
or
or
jns
popa
jle
pop
imul
dec
outs
rcr
xchg
mov
mov
adc
mov
inc
into
push
sbb
sahf
push
out
adc
movs
and
pop
into
test
jns
jecxz
movs
dec
(bad)
mov
adc
push
popa
movs
xchg
std
xor
mov
pop
nop
or
hlt
test
popf
jns
pop
jne
cli
add
stos
xchg
pushf
pop
adc
inc
movs
cs
sbb
push
jl
loope
aad
and
ss
cmp
xor
adc
sub
push
sbb
mov
leave
loop
pop
xor
movs
and
push
add
je
ficomp
or
adc
jbe
stos
retf
retf
push
inc
sbb
push
sahf
not
jnp
cmp
jno
cs
push
jne
loope
xchg
popf
push
lea
inc
or
push
cmp
xor
sub
pop
es
and
mov
xor
mov
sub
push
push
cmp
push
xchg
cwde
xchg
and
or
pop
fisttp
cmps
mov
sbb
sub
gs
xchg
aad
ja
jp
inc
movs
sbb
mov
xlat
sahf
lock
pop
mov
jge
je
adc
imul
cmps
shl
push
scas
aad
sbb
cmp
cmp
out
je
aad
sub
xchg
sahf
hlt
and
inc
mov
popa
pop
stc
dec
mov
popa
jg
rol
adc
(bad)
hlt
ins
mov
mov
adc
inc
mul
stc
ds
inc
outs
and
add
mov
sbb
test
push
aas
adc
dec
call
pop
sahf
hlt
ins
mov
dec
jne
aas
xchg
adc
add
rcl
and
(bad)
jecxz
adc
mov
sub
cmp
push
pop
minps
fs
rcr
in
iret
data16
in
adc
inc
pop
pusha
pop
popa
cmp
push
push
jb
movs
xor
pop
nop
sub
xor
push
sbb
cmps
sahf
call
lea
sbb
popa
adc
into
sbb
mov
dec
add
data16
jl
ja
add
mov
xor
test
stos
and
enter
mov
in
push
lea
jle
dec
imul
rcr
sub
sbb
sub
sub
dec
inc
jbe
in
(bad)
addr16
jno
sbb
mov
push
push
fcomp
adc
inc
popf
scas
aaa
popa
jle
push
cmp
pop
cs
mov
rcl
dec
popa
(bad)
mov
mov
pop
mov
cmp
push
add
je
and
xor
cmp
stc
mov
call
retf
add
jno
and
push
or
adc
fdivp
out
sub
out
pop
push
mul
sbb
outs
mov
push
xor
fs
ror
sub
pop
retf
jmp
mov
xor
popa
mov
loope
cmp
mov
out
loope
xchg
dec
(bad)
div
dec
cdq
pop
sbb
or
jmp
push
xor
sub
loope
aad
cmp
fldcw
inc
ss
and
adc
out
xor
push
fmul
mov
sub
(bad)
mov
pop
shr
cmp
ret
cs
ror
test
push
mov
lahf
dec
jmp
xor
jmp
fisub
jg
movs
iret
sar
fiadd
call
sbb
jl
jb
sub
int3
daa
arpl
push
mov
sub
mov
xchg
popf
mov
and
mov
fwait
ror
adc
xor
dec
and
jno
jo
push
(bad)
adc
push
inc
pushf
push
imul
int3
sahf
pop
sub
xor
es
sahf
ror
push
xchg
xor
and
xchg
cmc
pop
retf
loopne
cdq
jbe
add
inc
repz
inc
or
adc
push
mov
into
test
mov
fwait
nop
scas
leave
mov
scas
xchg
and
xchg
adc
imul
cmp
not
out
retf
je
in
popa
out
loopne
scas
not
popf
sub
cmp
cs
sub
jbe
mov
mov
jge
fldcw
adc
adc
push
jmp
mov
pop
mov
cdq
out
int
or
les
dec
int3
dec
cdq
in
jle
pop
add
pop
cs
(bad)
into
xchg
data16
pop
inc
out
mov
scas
dec
mov
cmps
sub
cvtps2pi
jno
fnstsw
xor
push
scas
out
mov
xchg
fist
call
jne
cs
dec
push
push
dec
mov
into
xchg
pop
test
cdq
mov
call
mov
jnp
add
ja
mov
into
xor
mov
dec
mov
push
pop
and
cmp
dec
add
pop
das
or
xchg
cwde
sbb
jne
mov
mov
jbe
pop
test
pusha
push
adc
or
sub
shl
and
or
pop
es
sahf
cmc
add
dec
mulps
or
xchg
popf
sub
sbb
test
daa
mov
or
and
neg
cs
leave
into
sub
xchg
rol
push
cmps
ins
pop
outs
test
push
fld
and
faddp
aaa
mov
loope
mov
scas
dec
cli
repnz
test
(bad)
adc
inc
mov
lahf
into
ins
ficomp
stos
inc
(bad)
jns
adc
adc
outs
sub
pop
push
call
adc
add
icebp
pop
movs
pop
xchg
stos
sahf
std
scas
pop
mov
cdq
inc
popa
xor
ds
jne
and
std
into
mov
jne
or
mov
mov
std
jno
dec
jle
push
dec
push
fsubr
ds
rcl
xor
dec
test
shr
push
adc
xor
gs
shl
in
fidivr
retf
pop
and
xor
push
dec
push
popa
cs
sub
icebp
cmps
loope
xchg
lds
mov
mov
cwde
sub
jle
and
push
xor
shl
out
cmps
(bad)
imul
inc
data16
and
push
jbe
mov
ficomp
(bad)
xchg
push
xor
dec
pop
pop
jns
mov
mov
jmp
inc
jne
ror
xchg
sar
lahf
int3
(bad)
xor
cdq
test
jle
mov
push
jne
sub
jp
xor
xchg
push
and
and
dec
int3
dec
mov
push
add
xor
es
fst
movs
daa
sub
call
cmp
pop
push
jb
adc
mov
cmps
mov
cld
mov
xor
jne
popa
xchg
and
pop
push
ja
stos
cmp
sahf
rcr
out
push
push
fwait
sbb
mov
(bad)
(bad)
push
add
int3
fnstsw
jne
retf
inc
adc
mov
inc
mov
sahf
jbe
xchg
mov
aas
xor
add
adc
add
outs
mov
fwait
icebp
adc
shl
cs
rcr
adc
cld
ror
xchg
scas
push
dec
lods
cmps
hlt
in
jnp
push
push
push
imul
rcr
retf
ret
sub
mov
mov
push
mov
cmp
add
jbe
int
aad
dec
pop
lock
hlt
push
and
mov
and
xor
adc
and
xchg
push
popf
sti
and
inc
sahf
sub
push
pop
push
cmp
mov
push
sahf
mov
pop
ins
xchg
jno
cmp
jge
popa
daa
sbb
addr16
(bad)
or
test
fild
or
dec
mov
loope
jno
retf
aam
dec
or
std
call
mov
sub
mov
push
jne
ins
jb
xchg
loope
sub
in
into
in
push
enter
scas
arpl
dec
sub
call
test
cdq
sahf
or
ins
dec
mov
sub
out
sahf
imul
(bad)
pop
pop
leave
aam
push
(bad)
lahf
add
inc
div
pop
push
sbb
imul
push
addr16
daa
call
movs
mov
jle
mov
sbb
lea
not
out
mov
aam
jle
pusha
inc
bound
or
sahf
loope
push
fcomi
cmp
xchg
loopne
sub
mov
sbb
jne
jle
add
mov
pop
push
aas
mov
xchg
inc
pop
dec
xchg
popa
inc
scas
mov
mov
outs
mov
loope
(bad)
and
rol
xchg
into
movs
ds
rcr
mov
dec
xor
dec
call
ds
rcr
mov
jge
jbe
mov
xchg
adc
icebp
push
push
jo
fidivr
shl
movs
jmp
dec
cdq
ficomp
dec
xor
dec
mov
adc
xor
or
mov
sbb
and
dec
inc
pop
jno
ret
outs
push
sbb
fucomip
push
outs
cmp
push
mov
test
inc
or
push
and
push
je
pop
mov
ror
gs
mov
icebp
loopne
scas
dec
inc
ss
scas
stos
out
pop
inc
jp
imul
xchg
test
push
ins
xor
push
xor
fcmovu
scas
bound
dec
inc
pop
jno
and
adc
fild
cmp
xor
mov
sub
(bad)
mov
pop
or
push
ret
and
retf
test
xchg
mov
sahf
sbb
leave
mov
jno
popa
sub
fucomp
ja
ds
into
cmp
cdq
out
and
enter
mov
in
push
lea
jle
dec
imul
ror
loope
jo
sbb
sub
retf
inc
jbe
in
shl
rcr
sbb
mov
push
ins
fcomp
adc
inc
popf
xchg
aaa
popa
jle
push
cmp
pop
cs
mov
rol
or
mov
dec
mov
mov
cmp
sbb
sub
std
xor
cmp
stc
mov
call
retf
add
jno
test
adc
mov
adc
cwde
fdivp
scas
loope
aam
sbb
dec
cmp
sbb
fwait
dec
push
add
or
or
and
sahf
jb
clc
mov
xor
popa
mov
stc
cs
mov
out
loope
xchg
dec
(bad)
div
mov
cld
out
cmc
out
add
push
imul
out
fs
cdq
xchg
js
loope
aad
les
pop
neg
adc
outs
popf
repz
icebp
mov
ficom
stos
xchg
mov
jbe
cmc
push
adc
or
outs
dec
sbb
fwait
xor
add
inc
and
mov
stos
ja
and
xchg
xor
xor
jb
dec
mov
push
js
mov
jo
ds
dec
fidiv
push
jnp
mov
mov
lahf
jle
loope
clc
or
jecxz
cmp
imul
jle
and
call
in
loope
add
dec
test
add
movs
outs
mov
fidiv
sbb
dec
shl
xchg
mov
dec
cmp
int3
mov
out
inc
add
fnstcw
jns
into
dec
fisub
fst
sahf
mov
sbb
xor
dec
inc
dec
and
data16
fild
mov
cmc
jmp
int3
ror
push
add
imul
pop
xor
lock
loope
aad
mov
popa
mov
push
test
in
pop
add
mov
xchg
aam
cdq
(bad)
mov
popa
cld
outs
mov
mov
in
or
sbb
mov
jns
and
cmp
mov
dec
cld
sub
out
dec
mov
idiv
fisubr
fisttp
push
(bad)
jns
ins
into
mov
mov
pop
hlt
popa
xor
adc
and
rol
push
or
ins
adc
inc
outs
(bad)
fidivr
pop
xlat
xor
push
cli
addr16
enter
sti
add
in
cmp
pop
jmp
mov
xor
sub
retf
sbb
mov
dec
mov
cmp
(bad)
(bad)
pop
mov
or
push
jno
sbb
fimul
stc
jno
icebp
mov
popa
(bad)
pop
aad
mov
sub
retf
jle
movs
xchg
mov
or
and
push
jb
fs
jnp
push
inc
pop
jo
mov
scas
mov
fmul
and
pushf
repnz
imul
inc
test
aaa
stos
sbb
xchg
mov
icebp
rcr
dec
mov
repz
push
fabs
je
fidiv
loopne
mov
ins
lahf
jle
cmp
inc
shl
sahf
mov
je
movs
sub
mov
fidiv
out
ins
jmp
jb
ret
dec
push
nop
mov
pusha
xchg
popa
outs
call
mov
push
rcl
arpl
mov
push
inc
adc
push
xor
icebp
stos
and
cmp
xor
ja
add
hlt
adc
idiv
jecxz
sub
movs
out
xchg
mov
and
stos
bound
xor
imul
and
popf
push
leave
pop
mov
mov
fs
xor
stos
push
jmp
in
push
jmp
inc
inc
mov
dec
imul
add
(bad)
movs
mov
hlt
inc
addr16
xchg
repnz
xor
stos
mov
jp
sub
(bad)
repz
dec
clc
jecxz
jl
or
loope
rcr
jmp
push
scas
and
int
mov
adc
adc
inc
jbe
jle
(bad)
xchg
xor
sti
ins
add
jmp
js
mov
inc
jno
not
in
fmulp
pop
into
dec
push
cmc
in
int
mov
popa
xor
test
sbb
xor
icebp
mov
aas
test
rcl
mov
adc
sub
xor
scas
ds
repz
dec
inc
push
xor
ins
mov
inc
sbb
mov
cmc
jg
mov
sbb
mov
jmp
sub
mov
lds
mov
inc
sahf
or
int3
mov
adc
push
sbb
(bad)
jno
(bad)
dec
and
add
shl
pusha
sbb
mov
out
sbb
push
dec
scas
push
mov
mov
mov
retf
sub
mov
adc
scas
xor
mov
adc
push
sbb
dec
je
mov
add
push
out
hlt
cli
aad
jle
cmp
sub
lock
sbb
sub
cs
lds
inc
mov
mov
push
jo
add
popa
scas
add
fs
cmp
push
into
jae
ss
into
movs
test
pop
fisub
add
icebp
adc
sar
test
cmps
adc
movs
or
or
xor
and
adc
(bad)
sub
cmp
mov
hlt
ss
xchg
dec
sub
popa
pop
aas
test
mov
fstp
cmps
add
mov
and
inc
pop
cli
imul
and
add
shl
test
inc
mov
xlat
cs
jg
push
add
(bad)
icebp
mov
in
xchg
(bad)
iret
sbb
xchg
xchg
jl
or
xacquire
loope
mov
inc
(bad)
leave
fbstp
inc
(bad)
call
xor
mov
adc
cs
das
sbb
daa
ret
mov
or
sahf
mov
scas
scas
aaa
dec
jp
cld
outs
loop
arpl
popf
xor
inc
xor
test
in
mov
mov
fdiv
inc
scas
aas
in
sahf
mov
out
dec
je
ds
loope
icebp
out
popf
add
mov
push
pop
mov
dec
imul
ins
xor
test
add
push
aad
inc
sbb
ss
xor
pop
push
cs
les
push
sbb
or
repnz
xchg
jmp
cs
push
push
sbb
mov
and
imul
popa
xor
aam
scas
retf
inc
dec
fs
jo
in
push
xchg
clc
push
ds
shl
mov
lods
mov
xor
hlt
scas
cmps
jnp
into
add
and
xchg
mov
mov
xchg
jl
pop
jns
popf
jb
fld
addr16
mov
test
retf
dec
or
inc
into
xor
dec
outs
loop
call
ins
pop
fimul
shr
sbb
mov
mov
std
icebp
je
jne
push
cmp
mov
addr16
movs
xchg
nop
mov
sahf
cmp
pop
stos
adc
sbb
mov
push
or
ds
fwait
loope
sbb
jle
sub
jno
scas
je
inc
push
mov
out
cmp
adc
inc
scas
sub
xor
mov
pushf
sbb
js
ror
pusha
inc
xchg
retf
hlt
jp
mov
mov
neg
ds
sub
test
cli
xchg
ret
or
clc
adc
repz
sbb
mov
icebp
inc
push
imul
inc
test
icebp
sti
push
xchg
in
sahf
in
leave
mov
sub
jle
fs
fs
fidivr
icebp
sar
enter
inc
cmp
or
out
(bad)
shl
outs
cs
aas
add
push
imul
sbb
cmp
jl
or
fs
xchg
sar
xchg
or
sub
jo
popa
cmp
mov
(bad)
sub
cmc
js
icebp
add
push
xchg
retf
(bad)
into
cmc
out
clc
mov
iret
mov
jb
and
int
sub
test
xchg
xor
outs
jle
mov
cmc
enter
adc
add
jle
jge
into
sub
cdq
adc
push
pushf
jle
push
pop
mov
mov
cmp
cmp
add
xor
sbb
shl
cmp
pop
out
xchg
bound
out
adc
outs
or
into
out
xchg
into
sub
test
mov
mov
dec
mov
cmp
pop
(bad)
(bad)
stos
push
shl
pop
out
xchg
(bad)
lds
lahf
adc
outs
xor
out
mov
jns
into
sub
xchg
push
xor
test
dec
mov
out
push
ds
mov
loope
cmps
mov
test
dec
test
es
out
mov
push
into
dec
and
stos
inc
(bad)
jns
or
in
inc
mov
outs
mov
in
call
or
sbb
or
movs
pop
xchg
data16
fs
imul
pop
popa
stos
adc
(bad)
div
and
in
adc
mov
mov
mov
std
jno
push
jle
push
or
ds
ror
sub
jb
lea
mov
fld
cs
(bad)
gs
shl
neg
and
mov
js
and
push
out
mov
xchg
es
rcr
leave
ror
jp
into
sub
icebp
aas
loope
outs
lds
mov
xchg
mov
cwde
sub
jle
cmp
iret
xor
xlat
xchg
ins
shl
out
xor
and
ficom
scas
dec
mov
inc
push
mov
xor
loope
ins
sar
(bad)
ficomp
fndisi(8087
xor
or
mov
xchg
mov
mov
jmp
sub
daa
test
ins
ror
mov
in
mov
dec
lahf
dec
inc
ror
loop
call
xor
and
or
mov
pusha
sub
leave
inc
mov
cs
aaa
fidiv
icebp
in
xor
mov
sub
push
or
pop
jne
xor
xor
and
jbe
jno
jae
outs
in
mov
mov
mov
mov
dec
int
xor
jle
mov
out
es
(bad)
sbb
sub
ins
xchg
pop
pop
jecxz
mov
mov
and
cdq
jb
je
lods
test
push
inc
lea
div
mov
pop
adc
inc
push
inc
xor
add
mov
sub
sub
mul
mov
es
or
cmp
inc
pop
pop
mov
mov
xor
pop
aam
shr
pop
shr
xor
adc
dec
outs
popf
dec
dec
mov
mov
dec
and
in
rdmsr
(bad)
push
sbb
sub
stos
jge
lahf
jb
adc
adc
ret
or
rcl
and
adc
es
dec
push
adc
jnp
nop
mov
xchg
(bad)
(bad)
pop
mov
push
inc
cmp
dec
inc
inc
dec
in
push
scas
dec
fdiv
mov
inc
xchg
and
mov
xor
ds
push
aam
mov
add
xlat
sub
mov
push
jmp
stos
lds
rcl
mov
call
adc
aad
in
xchg
adc
addr16
iret
or
in
ss
aam
sub
les
imul
ror
movs
add
mov
mov
mov
push
retf
jns
sub
xchg
push
lahf
fs
je
add
adc
mov
push
xchg
push
movs
ds
les
or
scas
mov
xchg
xchg
jmp
loopne
leave
push
adc
mov
sbb
mov
aam
adc
out
jnp
pop
je
fs
xchg
mov
ret
(bad)
pop
in
mov
sub
fdiv
and
xchg
test
out
push
ss
adc
sbb
mov
adc
pop
lods
ds
mov
rcl
cwde
xchg
enter
sahf
std
xor
fnstsw
out
cwde
cmp
push
jne
inc
push
push
push
(bad)
int
inc
xor
mov
or
cmp
cdq
ds
loop
scas
sbb
hlt
popa
cmp
repnz
sub
dec
leave
popf
lods
ds
adc
mov
add
aad
mov
pop
(bad)
cli
sahf
popa
jae
test
push
cs
xchg
dec
fimul
in
add
rcl
scas
mov
rcr
repnz
xor
xor
xchg
cmp
mov
push
int3
mov
jmp
inc
aad
mov
add
mov
xchg
xchg
jns
add
sti
fnstsw
(bad)
mov
mov
dec
xchg
scas
popa
sub
mov
test
xchg
sub
jecxz
cmc
pop
test
pop
xor
in
pop
mov
or
mov
dec
sbb
mov
pusha
push
pop
sub
push
xchg
sub
mov
in
pop
and
mov
aaa
call
xor
sbb
add
xor
cmp
ins
shl
cmp
mov
pop
pushfw
sub
sbb
fnsave
fwait
test
lods
jno
jmp
cmc
cmps
mov
cli
jne
push
fs
or
test
shl
xor
xchg
movs
fadd
sbb
fst
jnp
outs
or
movs
(bad)
outs
jns
xchg
pop
and
mov
pop
sbb
inc
bound
pusha
ret
(bad)
mov
inc
jg
(bad)
and
push
dec
inc
or
or
and
ror
and
fwait
push
test
test
dec
lock
push
popf
xchg
adc
push
push
je
fs
cs
out
mov
outs
pop
lds
mov
sub
add
pop
push
pop
cmp
jp
lahf
rol
stos
push
outs
aad
lahf
gs
in
xor
pop
movs
xchg
mov
xchg
aas
adc
inc
test
sti
xchg
out
and
pop
out
adc
outs
mov
inc
icebp
vscatterdps
loop
pop
mov
fimul
sti
push
xchg
neg
sahf
mov
mov
div
int
sbb
inc
fiadd
mov
loope
push
mov
cmp
mov
lahf
adc
cmp
aas
pop
ds
or
push
xchg
inc
fbstp
outs
mov
addr16
jo
adc
push
data16
mov
retf
sbb
and
sbb
or
mov
add
jno
ret
sbb
(bad)
rol
push
mov
loope
sbb
jb
neg
lds
xor
pop
mov
fistp
mov
loope
xor
mov
mov
lods
aaa
pop
ds
into
mov
in
fidivr
shl
push
scas
aad
sbb
adc
mov
dec
xor
dec
xor
and
pusha
test
out
xor
popa
jb
clc
mov
xor
sahf
mov
aad
cmp
mov
out
loope
xchg
dec
(bad)
test
out
dec
xchg
pop
sbb
or
xor
and
xchg
cmps
ds
inc
mov
fst
popa
or
cmps
jno
and
out
int
inc
xor
cmp
xor
mov
sub
(bad)
pop
jge
pop
inc
pop
std
outs
cmp
jns
ret
and
push
sub
mov
sbb
leave
inc
xchg
scas
sbb
dec
popa
sub
fst
ja
ds
into
cmp
cdq
adc
sbb
mov
(bad)
scas
lea
jle
dec
imul
shl
push
cmp
and
mov
mov
adc
jbe
in
ret
into
cdq
ficomp
mov
push
push
sahf
mov
mov
popf
xchg
aaa
popa
jle
push
cmp
pop
shl
fisttp
or
mov
lds
mov
cmp
inc
sub
std
aaa
xchg
rcr
out
cmp
stc
jno
js
scas
mov
mov
sub
sbb
dec
rcl
cwde
fdivp
loop
sub
(bad)
outs
icebp
mov
cmp
mov
adc
loope
inc
sub
jmp
loope
sbb
cmp
xchg
or
mov
mov
ins
sar
pusha
(bad)
mov
or
inc
jbe
lods
mov
and
and
loope
dec
mov
mov
(bad)
mov
cli
ja
ja
aad
in
outs
adc
add
pushf
fisttp
sbb
inc
fstp
(bad)
push
aam
inc
pop
cli
in
lea
lods
sub
xor
arpl
mov
pop
cmp
mov
sahf
sbb
std
xchg
fcom
loope
inc
mov
enter
cmps
jno
dec
jmp
jl
popa
dec
lods
dec
std
pop
xor
sub
cmp
pushf
push
rcl
lahf
les
out
mov
outs
push
adc
fisttp
sub
addr16
out
and
xchg
ins
and
into
sbb
lea
cmp
out
(bad)
jle
ret
jle
mov
mov
stos
mov
jb
cmp
call
mov
loop
retf
loop
sahf
jmp
mov
stos
jne
imul
shl
sti
imul
ret
outs
imul
shl
clc
shl
xchg
mov
adc
jno
adc
lea
and
lahf
aad
pop
call
mov
push
popa
(bad)
movs
dec
inc
aad
mov
pop
push
je
and
es
jl
mov
add
cmp
fmul
inc
mov
or
ret
xor
test
sbb
mov
mov
mov
jmp
movs
jle
adc
(bad)
fsubrp
xchg
sahf
dec
(bad)
leave
inc
out
add
jnp
jno
fdivr
out
mov
push
mov
inc
or
nop
cmp
mov
fs
icebp
push
mov
enter
mov
jno
sahf
rep
pop
mov
sar
imul
xor
jg
mov
into
ds
lods
and
xchg
mov
popa
mov
lea
xor
fs
data16
cs
shl
into
inc
out
aad
inc
mov
les
pop
mov
popa
cmp
icebp
add
xor
icebp
pushf
ror
pop
shl
mov
idiv
jno
sahf
push
mov
inc
or
cmp
cmp
push
outs
aad
lahf
gs
sub
jne
sbb
icebp
add
pop
rcr
call
cmp
mov
and
lea
xor
push
add
int
cmp
mov
out
loope
xchg
dec
(bad)
test
out
dec
fstp
sub
adc
scas
and
xchg
cmps
ds
in
mov
fst
popa
or
xor
and
out
int
inc
xor
lea
fmul
mov
sub
(bad)
pop
jge
pop
inc
pop
inc
outs
cmp
jns
ret
and
ror
test
xchg
mov
inc
xchg
scas
sbb
inc
popa
sub
fst
ja
ds
cmp
cdq
adc
pop
enter
mov
in
scas
lea
jle
dec
imul
rcl
shr
xchg
cmp
imul
popa
xchg
adc
jbe
in
ret
into
aad
sbb
mov
push
ins
fcomp
adc
mov
jle
push
cmp
pop
shl
fimul
or
mov
loope
fmul
sub
adc
add
je
fdivrp
xor
rcr
out
cmp
stc
jno
js
scas
mov
mov
mov
rcl
cwde
fdivp
cs
aam
jle
push
mul
sbb
xchg
mov
push
jl
js
cs
fbstp
jb
movs
dec
sub
jle
sub
pcmpeqb
and
sub
stos
push
add
retf
or
xchg
or
sti
stc
test
mov
into
aam
mov
loope
aad
add
jge
inc
or
cmp
popa
dec
inc
pop
std
pop
mov
fnstsw
add
jge
jb
call
sbb
push
xor
cs
xchg
cdq
test
cmps
mov
nop
sahf
mov
pop
retf
int3
pop
jo
xor
push
push
inc
cmp
and
inc
mov
icebp
arpl
(bad)
js
(bad)
fimul
dec
add
sub
test
sub
ret
or
push
scas
sub
push
cmps
add
add
pop
in
jle
jp
jno
retf
loopne
loope
outs
cli
cmp
push
sbb
push
xchg
into
mov
cmp
icebp
ins
dec
lods
nop
je
popa
dec
mov
mov
jno
xchg
icebp
icebp
or
test
fwait
or
ror
shr
pop
pop
popa
shl
and
movs
jge
ffreep
es
retf
stos
cmps
inc
mov
jne
dec
adc
inc
dec
ja
pop
mov
cli
(bad)
sub
fs
mov
mov
sub
push
clc
fyl2xp1
xor
dec
addr16
add
retf
or
loope
sub
add
popa
mov
xor
pop
push
mov
jge
hlt
scas
addr16
scas
or
fld
in
loope
shl
pop
cwde
xor
test
mov
fdivp
int
es
adc
adc
leave
pop
imul
stos
rol
test
push
movs
jmp
dec
or
lods
pop
xor
retf
in
sub
icebp
mov
outs
push
(bad)
movs
(bad)
ds
ret
mov
les
mov
(bad)
mov
mov
loope
stos
sub
sub
out
out
cli
xchg
repz
or
mov
jle
dec
or
into
fidivr
rcl
jmp
out
jmp
inc
jmp
sbb
or
or
les
outs
add
mov
pop
icebp
adc
retf
call
out
mov
and
push
dec
adc
mov
add
dec
outs
xchg
into
shl
repz
dec
push
in
out
pop
push
mov
adc
or
pop
ins
popf
mov
cmc
dec
movs
addr16
add
xor
mov
dec
mov
gs
or
rcl
fdivrp
push
loope
xchg
mov
push
inc
std
js
dec
add
pop
dec
mov
dec
mov
shl
test
icebp
ror
xchg
popa
lds
loopne
pop
mov
xchg
sbb
push
xchg
lock
push
cmp
pop
dec
ds
push
jge
clc
rcr
outs
call
in
sahf
cmc
pop
(bad)
jmp
ret
or
xor
ret
inc
les
mov
jns
loop
call
shl
inc
add
push
jecxz
ja
out
sbb
mov
out
mov
jnp
ss
push
std
jmp
xchg
(bad)
mov
loope
sbb
sbb
lods
cmp
cmps
pop
xchg
xchg
jecxz
adc
adc
and
push
dec
xor
and
add
and
cs
shl
popa
xchg
les
leave
inc
fcomp
popa
add
imul
push
arpl
les
xor
retf
adc
(bad)
ins
inc
push
into
shl
or
mov
in
cli
lods
sbb
and
and
mov
xchg
push
jae
push
cs
lahf
mov
ja
repnz
ficomp
int3
mov
cdq
dec
mov
into
aas
fld
loopne
loope
fsub
sbb
mov
mov
icebp
icebp
data16
popa
ficom
and
out
jae
jno
pop
in
mov
sbb
mov
dec
into
ds
js
xor
jge
jge
cmp
icebp
mov
sbb
je
xchg
jae
jmp
sub
sahf
jle
aad
mov
fisubr
sbb
cdq
cmp
dec
pop
jne
and
ror
sbb
in
mov
sbb
test
mov
cmc
or
or
cmp
add
add
fimul
fcmovnb
iret
jns
movs
lods
(bad)
jno
pop
mov
js
dec
xchg
(bad)
in
jno
icebp
dec
fidiv
not
inc
rol
and
ds
dec
inc
pop
xor
call
popf
cmp
(bad)
dec
shl
dec
nop
sahf
dec
stos
and
fimul
xor
outs
popa
cmp
push
add
xor
cdq
pop
retf
mov
repz
jo
div
jmp
popa
jle
push
add
into
inc
and
clc
ret
xchg
xchg
outs
fwait
ret
(bad)
cmp
mov
or
push
dec
out
ds
push
mov
push
push
lds
xor
outs
aaa
push
out
aaa
dec
xchg
xchg
sar
repz
fwait
add
pop
mov
cs
cmp
xor
rcl
ds
in
loope
sbb
or
push
mov
cmp
mov
outs
fs
(bad)
loope
mov
cmp
ds
sub
dec
dec
or
fmul
push
adc
pop
xor
pop
call
or
cmc
and
mov
cmp
icebp
jmp
mov
jp
in
mul
inc
stos
fst
jp
cmp
mov
mov
cs
test
aam
xchg
pop
loope
mov
sub
push
cwde
xor
dec
lds
xor
dec
retf
icebp
cs
push
mov
xor
dec
mov
mov
push
sub
call
lods
lds
push
test
sbb
pop
xor
mov
and
xor
push
ins
add
sbb
lds
sub
dec
inc
adc
shl
into
adc
xchg
lea
gs
popa
mov
mov
outs
sub
push
or
dec
push
into
mov
mov
jecxz
mov
adc
jo
add
(bad)
push
mov
lds
mov
cmp
loopne
add
scas
cmc
adc
push
cmp
jnp
mov
test
jp
add
pop
sub
inc
test
and
fidivr
pop
xor
or
mov
aam
or
mov
mov
pop
mov
call
push
in
and
push
sbb
test
mov
xor
(bad)
mov
out
sub
dec
ins
ins
(bad)
sbb
ficom
xchg
dec
sub
adc
jnp
inc
popa
pop
mov
mov
cmp
dec
(bad)
sbb
les
or
add
stos
movs
mov
sahf
shl
jl
push
xchg
ffree
sahf
dec
std
pop
repz
mov
dec
jno
in
retf
mov
rol
and
data16
outs
mov
pop
fstp
cld
push
sahf
imul
mov
and
mov
add
xor
inc
push
(bad)
outs
jno
pop
sub
pop
scas
or
repz
push
xchg
ret
test
push
adc
leave
cmp
fild
cdq
fs
jo
clc
out
fldenv
adc
add
ins
push
or
jmp
fs
sub
pop
push
adc
cs
add
ficomp
jno
jmp
(bad)
pop
aam
mov
jbe
jle
cmp
jnp
xlat
cdq
fnstcw
(bad)
inc
mov
je
mov
neg
push
in
add
pop
add
sbb
dec
jne
fnstcw
push
into
xchg
dec
mov
push
dec
mov
(bad)
mov
mov
push
inc
shl
sub
into
ror
pop
jle
dec
enter
imul
mov
push
out
pop
jns
cmp
mov
adc
sbb
arpl
ss
jmp
(bad)
mov
dec
push
(bad)
int3
pop
dec
mov
mov
stos
cld
or
push
mov
and
push
sbb
or
xchg
mov
scas
das
jmp
pop
shl
jmp
cmp
clc
in
neg
movs
je
sar
xchg
jne
mov
ret
adc
test
xor
add
mov
stos
rcl
cmp
cmp
jmp
push
xchg
add
in
lds
jae
push
aas
jge
dec
int3
into
and
xor
xor
or
mov
mov
pop
adc
popf
sbb
pop
rcr
xchg
retf
js
lea
loop
and
fs
mov
sub
and
rol
loope
inc
bound
dec
jno
sbb
cwde
popfw
sub
cs
cmp
mul
mov
dec
repz
call
pusha
and
scas
push
cmc
pop
mov
cdq
ds
loopne
mov
int
not
fadd
add
sahf
sub
std
pop
mov
popa
mov
shr
mov
movs
sti
jne
adc
sbb
mov
repz
mov
push
inc
xchg
sub
out
lock
jmp
ret
and
add
adc
aas
pop
push
mov
sbb
jp
lahf
mov
pop
aam
ret
push
aad
pusha
sbb
call
inc
in
loope
mov
movs
ds
cmc
mov
push
or
sub
adc
add
gs
cs
xchg
mov
lods
push
sub
jno
popa
fist
sbb
add
and
rol
fisubr
out
movs
jne
jno
sahf
repnz
pop
pop
inc
dec
lods
sbb
sub
jle
rcr
cmp
xchg
rcl
push
push
outs
(bad)
sub
cli
inc
adc
jo
and
pop
jmp
leave
les
repnz
or
sahf
inc
pusha
(bad)
mov
cmps
aaa
and
xor
jle
sub
xchg
in
sahf
in
clc
(bad)
xchg
or
sbb
jle
pop
sbb
mov
into
stos
retf
icebp
mov
lds
push
push
pop
or
sahf
imul
je
mov
mov
ror
mov
pop
sbb
sub
push
ds
cs
shl
rcr
fwait
or
mov
mov
add
sbb
sub
jns
ds
ja
leave
mov
into
cmp
in
repnz
or
mov
sbb
sub
icebp
xor
xchg
shl
mov
dec
xlat
mov
mov
mov
int
xchg
cs
adc
jp
into
sub
lds
mov
jecxz
inc
dec
lods
mov
stc
dec
add
xchg
ins
shl
out
repz
stc
jno
ficom
scas
dec
call
inc
retf
and
push
and
loope
cmp
loope
xchg
sahf
jle
cmc
or
push
pop
or
push
jmp
fisubr
daa
test
push
fdivrp
or
inc
dec
jno
sahf
xchg
push
lods
add
jo
xor
sbb
sub
xchg
add
pop
jle
in
cmp
outs
and
shl
ds
mov
loope
ror
dec
cli
repnz
test
push
out
out
mov
(bad)
jno
sbb
adc
xor
jle
icebp
call
jl
ret
rcl
pop
movs
pop
xchg
data16
or
pop
cdq
push
popa
jb
retf
jne
and
out
into
retf
adc
mov
mov
mov
std
jno
and
push
lods
loope
push
cmp
push
pop
aad
xor
mov
push
mov
pop
push
scas
es
push
cdq
int
mov
push
ret
jp
(bad)
mov
fadd
test
repz
icebp
shl
in
xchg
into
ret
push
in
lock
fmul
jo
sub
sbb
xchg
call
imul
stos
xchg
sub
inc
ret
add
pop
xor
sub
sub
ds
inc
dec
(bad)
es
hlt
stos
jbe
fidivr
mov
cli
sub
xchg
movs
test
mov
mov
popa
idiv
loop
push
sbb
pop
inc
in
mov
fstp
aam
arpl
ja
pop
(bad)
mov
mov
pop
mov
cld
in
cmc
call
shl
icebp
stos
loope
xchg
sub
lods
adc
dec
add
sar
ror
push
fwait
js
adc
lahf
mov
jb
daa
lds
cmc
popa
and
inc
or
sub
pop
jp
add
lahf
push
imul
xchg
mov
rcr
push
jmp
cmp
mov
popa
mov
sbb
clc
sub
push
add
mov
sahf
dec
fwait
jp
xchg
jne
add
in
fiadd
pop
aad
out
xchg
sub
mov
push
add
adc
test
push
inc
retf
and
pop
and
cmp
stos
repz
xchg
adc
dec
xchg
and
add
xchg
fs
mov
inc
sub
cmp
xchg
mov
hlt
les
mov
hlt
outs
sahf
inc
retf
dec
popa
shl
jecxz
test
cmps
out
or
popa
pop
ret
adc
and
ror
push
pop
xor
sar
and
iret
mov
jb
push
in
scas
mov
xor
xchg
jg
icebp
std
loope
movs
stos
(bad)
adc
shl
lods
add
pop
mov
lods
loopne
dec
adc
cli
push
jmp
push
mov
js
and
mov
jns
xor
inc
mov
sbb
or
cs
dec
(bad)
je
fidiv
or
call
sub
jle
test
pop
cmp
imul
loope
sbb
fstp
sar
pusha
pop
xor
push
add
xor
ds
or
retf
and
cmps
inc
mov
test
retf
not
ins
movs
dec
jno
(bad)
push
cli
fimul
add
jg
mov
fldcw
jbe
cs
aam
mov
mov
int
and
mov
rcl
jo
std
push
stc
push
je
jno
cld
xchg
shl
xchg
inc
pop
dec
xchg
popa
js
sbb
jno
ss
and
fldcw
dec
shr
int3
push
daa
repnz
or
jmp
jno
popa
push
out
mov
fisub
shr
jne
ffreep
xor
push
loope
(bad)
faddp
mov
scas
dec
mov
mov
sahf
mov
mov
push
(bad)
fnstcw
xchg
cdq
xchg
call
jg
jg
mov
cwde
cmc
clc
dec
jno
popa
xchg
dec
push
dec
jne
js
cmp
xchg
xor
gs
aaa
fcomp
out
mov
cdq
je
xchg
mov
push
(bad)
jnp
into
xor
scas
out
mov
xchg
fld
and
lea
dec
jb
jno
and
push
fsubr
or
cmp
loope
xchg
push
jle
cmc
or
lods
pop
test
push
jmp
es
test
push
movs
(bad)
jp
fldenv
jmp
jno
sahf
xchg
push
lods
add
je
retf
xor
call
sub
cmps
add
outs
cmp
push
fldcw
aam
push
ds
mov
loope
ror
dec
cli
repnz
test
inc
out
out
mov
cmp
ins
and
stos
inc
(bad)
jns
xor
in
inc
mov
outs
mov
icebp
call
jp
rol
pop
movs
pop
xchg
les
mov
sub
adc
div
and
xchg
into
daa
ficom
or
mov
mov
std
jno
and
test
cmp
mov
cmp
adc
pop
aad
xor
mov
sbb
outs
mov
adc
add
shl
sbb
out
in
add
and
push
add
xchg
push
push
in
test
into
sub
outs
lds
mov
loop
mov
push
mov
popa
jmp
ror
shr
cli
setnp
pop
xor
cmp
push
add
mov
es
jp
push
adc
lahf
mov
sbb
mov
sub
push
(bad)
dec
mov
sbb
cmp
ret
sbb
fdiv
retf
aad
pop
mov
ins
mov
xor
loopne
or
xor
lahf
pusha
pushf
push
adc
pop
xchg
lds
out
or
dec
dec
and
call
sbb
mov
sti
and
loope
sbb
mov
mov
pop
enter
outs
cdq
sbb
and
loopne
fidiv
jp
push
ins
xchg
mov
xor
je
pop
(bad)
ffree
mov
dec
sub
test
cmp
popa
xor
sub
mov
xlat
pop
lods
dec
into
cs
test
jmp
mov
pop
in
adc
xor
fs
xor
mov
in
jo
xor
sbb
mov
mov
lea
(bad)
jecxz
shr
fimul
dec
loope
int3
ror
cwde
mov
call
xlat
popf
xchg
adc
in
xchg
mov
xor
(bad)
fmul
mov
pop
test
(bad)
xchg
push
and
pop
retf
test
or
sbb
xor
into
lock
je
fldcw
lods
rcl
xchg
mov
icebp
push
add
push
xchg
mov
add
stc
cli
xor
inc
lahf
test
mov
cmp
icebp
add
xor
mov
shl
dec
or
aad
and
scas
rol
push
or
bound
xchg
popa
js
sbb
sbb
popa
adc
and
repnz
xchg
fidivr
jmp
mov
ds
popa
jg
push
mov
push
inc
sahf
popf
xor
in
hlt
out
into
mov
pop
mov
iret
mov
add
pop
cmp
jp
lahf
rol
stos
push
outs
aad
lahf
gs
sub
push
jmp
cmp
popa
rol
pushf
ror
pop
shl
mov
idiv
jno
sahf
mov
repnz
loope
cmp
push
test
mov
leave
inc
icebp
in
push
sbb
ficom
push
idiv
into
sbb
and
loope
test
cdq
in
jle
pop
add
shl
shl
mov
cmp
loopne
sub
push
mov
pop
xor
(bad)
push
xchg
aas
sub
xchg
rcr
retf
or
dec
cmc
dec
mov
sub
inc
cmp
test
repnz
mov
adc
pop
mov
cmp
push
mov
(bad)
popf
lods
cmp
push
data16
fucomp
ja
ds
into
cmp
cdq
adc
and
mov
(bad)
scas
lea
jle
dec
imul
ror
shr
xchg
cmp
mov
cmp
cmp
popa
mov
dec
inc
jbe
in
(bad)
addr16
icebp
ficomp
mov
push
push
fcomp
adc
mov
jle
push
cmp
pop
shl
fimul
or
mov
ins
mov
mov
cmp
mov
sub
std
xor
cmp
stc
jo
jg
scas
mov
ss
lods
and
push
jns
sbb
dec
rcl
cwde
fdivp
mov
sub
out
pop
push
mul
sbb
nop
mov
push
or
or
jge
pop
retf
jmp
mov
xor
lahf
mov
popa
cs
mov
out
loope
xchg
dec
(bad)
test
out
dec
mov
sub
adc
pop
push
xor
sub
loope
imul
inc
adc
and
out
int
inc
xor
adc
fmul
mov
sub
(bad)
pop
jge
pop
inc
pop
dec
outs
cmp
jns
ret
shl
mov
icebp
out
mov
aad
or
adc
sbb
push
jne
jbe
mov
adc
jle
cdq
cld
scas
mov
jecxz
outs
xchg
gs
leave
rcl
imul
shl
dec
fidivr
and
xchg
in
lods
mov
fild
sbb
lods
rcr
fmul
fadd
adc
dec
push
sbb
xchg
fisubr
call
push
je
and
sbb
mov
popf
jno
fs
xchg
pop
loope
and
outs
out
das
mov
fwait
mov
xor
dec
mov
mov
add
jmp
(bad)
fdivp
(bad)
mov
mov
mov
cmps
mov
push
cmc
mov
inc
test
mov
mov
fdivr
mov
pop
in
imul
je
ror
pusha
mov
ret
ss
rol
xor
xchg
mov
(bad)
mov
ins
xor
push
loope
jle
out
fadd
add
les
mov
xchg
jo
adc
and
shl
lahf
ror
loop
dec
push
jo
mov
loope
into
cmp
xchg
push
std
mov
xchg
or
inc
push
popf
xchg
sbb
push
inc
xchg
cmp
test
push
bnd
dec
les
pop
je
mov
addr16
sbb
mov
xor
and
ret
inc
adc
pop
ficom
outs
cmp
call
cs
push
loop
jge
or
lods
add
mov
rcr
push
xor
stos
ds
cmps
fidivr
es
mov
sub
pop
or
jle
dec
(bad)
movs
mov
mov
add
lds
adc
test
sub
jb
leave
mov
ror
in
push
push
xchg
mov
fcmovb
(bad)
stos
mov
repnz
pushf
and
inc
inc
and
mov
xchg
call
jge
xor
adc
add
test
sahf
shl
cmc
stos
movs
jge
retf
cld
and
cdq
sbb
cmps
jle
mov
xor
and
cmps
cmps
ror
stos
cs
jno
shl
inc
or
in
cmp
cli
imul
mov
fidivr
in
iret
data16
out
mov
cdq
je
xchg
mov
push
lods
imul
inc
adc
enter
jno
sub
outs
xor
out
scas
mov
inc
mov
sub
retf
cmps
test
daa
(bad)
dec
mov
pop
mov
icebp
mov
mov
add
aas
mov
xchg
test
add
sub
jle
lock
not
out
sbb
aam
rcr
retf
mul
loopne
scas
jae
fdiv
rdtsc
ret
ror
mov
pusha
punpcklbw
scas
xchg
out
outs
lea
push
inc
dec
popa
push
shl
(bad)
das
xor
or
inc
sbb
ds
push
pop
rcr
pop
rcl
(bad)
jge
jns
hlt
stc
icebp
cli
das
pop
inc
mov
push
lahf
rcr
adc
clc
jne
das
shl
test
cmps
loope
pop
rol
push
scas
out
jecxz
inc
cmp
jmp
mov
pop
mov
cdq
out
test
xlat
(bad)
fld
repnz
outs
sar
call
jb
outs
rol
data16
cs
or
or
pop
cdq
and
adc
(bad)
div
and
popf
into
pop
fidiv
mov
mov
mov
std
jno
sub
loope
push
cmp
push
pop
aad
xor
mov
sbb
outs
mov
xchg
add
shl
mov
ins
out
adc
js
and
push
push
mov
int
xchg
pop
push
popf
push
inc
ror
jp
into
sub
outs
lds
mov
in
mov
cwde
sub
jle
inc
add
xchg
ins
shl
out
jnp
xchg
jno
ficom
scas
dec
repnz
aam
push
mov
dec
push
stos
cs
sar
(bad)
ficomp
movs
loope
xchg
dec
jle
cmc
or
fcomp
xchg
mov
mov
jmp
mov
daa
test
push
stos
dec
mov
mov
jno
sahf
xchg
push
lods
add
js
mov
call
sub
out
adc
fldenv
rol
ds
mov
loope
fisttp
dec
cli
repnz
test
adc
js
xchg
and
stos
mov
les
jo
dec
xchg
cdq
in
adc
or
jle
jmp
mov
pop
aam
mov
adc
inc
loope
ins
and
out
das
add
push
ror
mov
pusha
push
mov
pop
imul
or
(bad)
fcom
(bad)
fadd
sub
cmps
movs
mov
dec
pop
(bad)
push
icebp
call
stos
cwde
lock
sti
and
push
dec
jb
cli
cmp
imul
and
cmps
adc
push
xchg
nop
(bad)
jmp
call
add
adc
push
adc
cs
sub
movs
shl
mov
cmp
mov
xor
outs
popa
and
jl
pop
inc
rcr
lea
aas
jb
dec
movs
mov
sar
popaw
xchg
jg
inc
fadd
and
cmp
xchg
sar
(bad)
jmp
cmp
jno
scas
push
push
cmp
xchg
ror
ins
adc
dec
mov
sub
sbb
jne
xor
sub
test
or
cmp
in
inc
cmovle
into
mov
pop
push
je
and
es
jl
mov
add
cmp
shr
sub
pop
inc
popf
mov
inc
sub
xchg
popf
sbb
sub
cld
fwait
int
jno
pop
mov
(bad)
xchg
jno
pop
jne
xchg
cli
xchg
mov
mov
rcr
loopne
jle
xor
mov
cmp
xor
inc
mov
push
mov
adc
icebp
call
xchg
icebp
dec
in
out
jle
dec
pop
mov
mov
fs
adc
sbb
and
leave
inc
and
int3
ret
or
or
lods
(bad)
sar
cs
xchg
pop
push
fldcw
dec
jp
or
and
lds
scas
lds
jg
jle
push
mov
outs
push
into
test
es
retf
or
dec
pop
mov
dec
jno
and
in
push
push
(bad)
into
jns
loope
ins
(bad)
pop
jno
popa
mov
pop
push
repz
add
jg
inc
add
(bad)
stos
push
shl
pop
out
xchg
(bad)
lds
lahf
adc
outs
xor
dec
inc
adc
fimul
sahf
into
or
fstp
xsaveopt
inc
add
sub
fisttp
icebp
test
inc
push
fcom
popa
jmp
xor
pop
cmp
icebp
adc
outs
cs
sub
fwait
sbb
(bad)
gs
shl
dec
mov
adc
push
push
ret
push
cmp
test
retf
and
pop
inc
or
cmc
jbe
arpl
js
es
mov
adc
cmp
adc
inc
lods
mov
push
push
into
into
dec
sub
popf
sar
or
(bad)
cmc
jle
movs
addr16
pop
mov
jmp
jbe
daa
test
push
mov
jmp
sbb
jmp
jno
sahf
xchg
push
lods
add
popa
cs
ds
sub
xchg
test
pop
or
cmp
jle
inc
ror
ds
mov
loope
fmul
dec
cli
repnz
test
add
out
mov
test
stos
inc
(bad)
jns
sub
adc
outs
push
jle
icebp
call
jno
mov
movs
pop
xchg
data16
sahf
(bad)
scas
mov
mov
and
adc
and
sahf
into
mov
or
or
mov
mov
std
jno
cs
push
jno
fsubr
cmp
push
pop
aad
xor
mov
sbb
outs
mov
adc
xchg
(bad)
gs
shl
xchg
fiadd
retf
pop
loope
int
and
xchg
pop
push
jb
cmc
ror
jp
into
sub
outs
lds
mov
out
mov
cwde
sub
jle
inc
add
(bad)
xchg
ins
shl
out
nop
(bad)
gs
ficom
scas
dec
lock
aas
inc
inc
mov
popa
stos
dec
xchg
push
xor
test
push
icebp
stos
gs
enter
ja
mov
cwde
jno
jne
cmc
paddw
into
fisub
mov
fsubp
(bad)
mov
(bad)
in
jmp
mov
pusha
outs
je
dec
push
add
ins
loop
sbb
out
jae
mov
pop
clc
push
inc
jns
movs
stos
js
lahf
xchg
cmp
or
and
(bad)
mov
mov
mov
outs
popa
sub
sbb
push
mov
rcr
call
xchg
div
jo
pop
repnz
jmp
pop
jecxz
int3
icebp
adc
pop
dec
(bad)
mov
pop
jno
jae
call
mov
or
push
xchg
in
mov
mov
rcl
gs
(bad)
stos
xor
(bad)
dec
jbe
cmc
cli
jns
jne
retf
test
cmp
vxorpd
cmp
mov
aam
cmps
push
cwde
repnz
pop
jbe
xor
push
enter
xchg
push
test
mov
sahf
pop
mov
mov
or
xor
xchg
ficom
xor
xchg
sbb
aas
cmp
mov
cli
cmps
popa
xor
(bad)
loopne
cs
add
das
push
push
add
in
inc
mov
outs
popa
xor
arpl
mov
jp
lods
add
inc
(bad)
pop
jecxz
inc
cdq
mov
shl
jo
xor
in
jl
and
mov
xor
xchg
jb
sar
pushaw
xor
mov
test
push
mov
pop
sub
pop
dec
or
and
add
pop
nop
lahf
call
ds
xor
push
aam
xor
dec
push
inc
scas
sbb
jno
pusha
ds
popa
inc
(bad)
repnz
jmp
xchg
loopne
lods
out
rol
nop
(bad)
cld
mov
inc
aad
dec
sahf
mov
test
push
jl
ffree
test
les
addr16
jbe
lds
xor
ror
ror
push
(bad)
aad
jmp
inc
cdq
(bad)
stc
mov
fxch
mov
shr
test
push
arpl
add
jle
mov
(bad)
(bad)
sahf
scas
rol
fdivp
pushf
inc
sar
inc
ins
out
outs
ret
cmp
jle
cli
sbb
mov
fxch
mov
lock
inc
cmp
fld
movs
pusha
mov
pop
push
scas
ret
fnsave
out
push
and
mov
xor
mov
cmp
xor
mov
test
xchg
stc
out
stos
not
or
gs
fdiv
jle
mov
sub
adc
outs
and
push
jne
icebp
sbb
loopne
pusha
push
lods
jae
arpl
or
jg
mov
call
std
psraw
ins
jae
into
test
mov
or
cmp
dec
outs
scas
add
pop
xor
mov
mov
adc
pushf
jbe
push
aam
jge
sbb
inc
shl
imul
sti
fisub
loope
fsubrp
hlt
xor
xchg
jl
les
ror
fdivp
mov
add
mov
test
pop
and
add
sbb
jmp
inc
mov
pop
arpl
add
adc
pop
inc
shl
sub
fwait
sbb
dec
mov
sub
lds
mov
test
push
jl
jmp
pop
jp
and
inc
adc
fiadd
popa
xor
out
jae
push
add
es
sub
sahf
cld
push
pop
jbe
or
jno
test
push
jne
enter
and
cmp
int3
sar
mov
je
stc
mov
pop
inc
dec
push
jl
ins
jae
or
jno
fimul
cmp
mov
into
mov
test
push
repz
pop
into
sub
fadd
int3
sar
mov
push
or
sti
xchg
mov
push
dec
or
int3
sar
jecxz
repz
retf
jecxz
adc
ret
jl
lock
inc
mov
inc
adc
les
pushf
repz
hlt
daa
sub
adc
ret
or
cmp
pop
inc
adc
in
test
test
or
ins
outs
add
push
mov
xchg
mov
inc
mov
lock
jmp
and
pop
inc
mov
ret
or
xor
push
icebp
add
mov
out
add
sub
and
stos
or
sbb
jle
dec
push
rol
int3
and
or
mov
movs
ds
mov
jle
into
push
inc
cli
scas
push
mov
sub
inc
or
sub
sahf
cld
and
adc
scas
fld
stc
out
cdq
shr
jae
mov
dec
or
repz
int3
shl
sbb
push
mov
xor
mov
cld
and
mov
xor
lds
pop
into
test
movs
stos
lock
jle
cmp
test
or
cmp
sahf
mov
push
adc
jl
fadd
fwait
add
fidivr
dec
mov
push
or
cmp
fld
in
loop
repnz
ds
mov
ret
or
cmc
inc
in
xor
mov
push
aam
fsub
div
xor
loopne
ins
out
outs
retf
add
push
and
add
cmp
idiv
cmp
jmp
xlat
aam
call
outs
mov
lea
jle
or
inc
jae
xor
pop
fsubr
jle
pop
jecxz
repz
mov
add
leave
jle
(bad)
gs
xor
sbb
inc
inc
movs
sbb
adc
xchg
test
xchg
mov
xor
fidivr
jle
xchg
jecxz
push
sbb
inc
sbb
and
and
inc
or
push
push
cwde
stos
aam
popa
dec
mov
pop
xor
sub
fidivr
jp
push
ds
cmp
push
jle
add
dec
cs
xor
push
mov
jecxz
cmp
and
pushf
or
push
mov
mov
(bad)
jns
pop
jbe
ret
inc
sahf
cmp
lods
scas
adc
loope
or
mov
loopne
add
or
inc
sub
mov
std
(bad)
and
xor
push
mov
ret
or
jp
pusha
push
scas
xchg
add
leave
xlat
adc
icebp
jnp
daa
push
xchg
dec
adc
aas
sbb
ror
in
xor
xor
icebp
(bad)
fsubp
hlt
sbb
mov
es
sub
sahf
cld
and
xchg
jnp
shr
add
(bad)
xchg
stc
shr
jb
jnp
fdiv
jle
jo
pop
mov
int3
pop
xor
arpl
jp
aas
jmp
and
stos
push
es
test
arpl
mov
dec
pop
pop
push
push
and
shl
inc
push
xor
or
dec
push
sub
aam
sbb
(bad)
sub
adc
(bad)
jne
mov
and
aaa
xchg
outs
cmc
inc
in
xor
mov
xchg
popf
inc
mov
into
mov
test
and
jno
fimul
in
sbb
mov
repz
fst
shl
jp
cmps
test
adc
dec
popa
cmp
pop
xor
and
add
shl
mov
lds
jmp
mov
(bad)
(bad)
adc
lea
ror
push
es
push
xchg
lahf
movs
popa
jge
mov
fcomp
adc
cmps
popa
xor
xchg
fmulp
cs
mov
jo
mov
pop
cmp
pop
jle
mov
adc
push
dec
div
fild
push
or
jno
xchg
fs
sbb
inc
dec
xchg
mov
xor
fidivr
push
mov
je
lea
push
inc
mov
rol
jne
xchg
popa
popa
scas
in
push
scas
xchg
cmc
push
push
mov
rcl
ds
xor
xor
outs
in
dec
xchg
sub
int3
pop
mov
mov
cmp
fisubr
sbb
jmp
mov
or
aad
data16
into
inc
pushf
inc
shl
movs
mov
jno
mov
jmp
sbb
popa
(bad)
cmps
into
out
(bad)
xor
sti
push
out
movs
out
pop
stos
jle
cmc
mov
add
cmc
push
push
mov
das
ror
push
pop
pop
stos
jle
cmc
mov
mov
mov
(bad)
push
jne
icebp
sbb
adc
fmul
(bad)
popa
mov
sbb
inc
sbb
inc
cmp
into
xor
ds
fistp
xchg
jl
les
pop
(bad)
dec
shl
into
add
pop
out
pop
inc
loope
imul
push
sub
xchg
jmp
cmp
popa
cmp
fisub
lea
adc
mov
or
mov
or
mov
mov
mov
add
ds
adc
mov
xor
dec
or
cld
outs
sahf
cmp
out
cmps
into
fsubp
lea
ds
mov
jg
inc
jmp
jno
sahf
out
pop
add
and
add
cmps
add
fidivr
and
push
sbb
lds
out
mov
and
test
lods
inc
outs
pop
adc
sbb
lds
pop
add
and
push
std
popa
pusha
test
call
fdiv
jle
xchg
push
sub
sub
xor
psubusb
rol
mov
repnz
jge
test
and
out
mov
pop
call
jp
xor
and
mov
jle
mov
imul
out
adc
jne
push
std
xchg
fild
xchg
dec
adc
fadd
sbb
or
xor
jbe
push
icebp
mov
dec
mov
out
mov
cmp
icebp
lds
add
fimul
pop
lods
mov
popa
scas
in
push
scas
xlat
xchg
pop
cmp
in
xchg
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
(bad)
loope
lock
xchg
mov
inc
dec
push
jp
push
sbb
aas
and
rcr
ret
sti
out
xchg
cdq
mov
push
pop
jle
dec
inc
pop
add
cmp
or
mov
aad
(bad)
(bad)
test
push
dec
inc
pop
aaa
sub
xor
ret
jmp
out
lock
or
inc
dec
push
icebp
imul
sahf
(bad)
inc
pop
sbb
push
add
sub
je
mov
mov
sub
(bad)
pop
inc
push
popa
and
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
icebp
retf
shr
in
xchg
mov
mov
jne
gs
or
sub
in
fadd
inc
int3
ret
mov
fmul
sub
aam
dec
lock
sub
adc
aad
in
loopne
xchg
adc
call
adc
add
sub
and
ror
fdiv
icebp
out
paddd
scas
mov
inc
jno
popa
jle
inc
push
sub
and
ror
fcmovnu
icebp
out
loope
mov
sahf
stos
scas
mov
pop
jno
popa
jle
push
add
ror
rcr
cmc
pop
(bad)
xchg
xchg
sbb
jno
popa
jle
adc
push
xor
and
ror
rol
out
loope
xchg
mov
mov
jno
jl
adc
sbb
xor
and
int3
fadd
fsubrp
out
loope
xchg
mov
push
dec
inc
pop
outs
jge
jle
push
add
xor
aas
sub
icebp
out
loope
(bad)
call
push
push
push
pop
jno
popa
jle
push
push
sbb
cs
aam
rcr
jmp
(bad)
xchg
jno
xor
dec
popa
jle
or
push
xor
and
ror
rcr
out
loope
xchg
mov
inc
push
dec
pusha
pop
jno
popa
jnp
push
add
xor
and
ror
ds
out
loope
xchg
mov
mov
jno
fs
adc
(bad)
push
xor
and
ror
rcr
out
loope
xchg
lods
sbb
jno
popa
jle
push
add
xor
and
ror
loop
icebp
adc
(bad)
xchg
mov
mov
push
outs
popa
adc
and
ror
rcr
jmp
(bad)
xchg
jno
mov
je
inc
mov
adc
add
xor
and
shr
shl
retf
loope
outs
mov
mov
je
popa
jle
push
add
xor
and
ror
rcr
enter
mov
inc
push
dec
inc
jns
outs
sahf
jle
or
push
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
fs
adc
(bad)
push
xor
and
ror
rcr
out
loope
xchg
mov
mov
mov
push
adc
(bad)
push
xor
and
cs
(bad)
div
out
push
(bad)
xchg
cmps
sbb
jno
fs
adc
(bad)
push
xor
and
ror
ds
out
in
mov
scas
mov
pop
jno
popa
jle
push
(bad)
sbb
cs
ror
(bad)
cmc
icebp
out
push
(bad)
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
aam
rcr
out
loope
xchg
mov
mov
jno
dec
jle
icebp
add
xor
(bad)
shl
(bad)
lock
out
push
sti
mov
scas
mov
pop
jno
popa
jle
push
add
xor
push
ds
rcr
out
loope
xchg
mov
mov
outs
jno
sahf
jle
xor
into
cs
ror
rcr
fsubp
add
scas
pop
mov
jno
popa
adc
fidivr
shl
rcr
out
sar
outs
mov
inc
push
dec
mov
dec
adc
add
xor
adc
cs
ds
out
loope
xchg
jno
sahf
mov
mov
int3
jno
popa
jle
cmp
and
ror
rcr
out
loope
mov
scas
mov
pop
mov
jle
icebp
add
xor
fidivr
ror
rcr
out
in
xchg
mov
mov
mov
imul
jle
push
add
xor
faddp
cs
and
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
aam
rcr
out
loope
xchg
mov
mov
pop
jno
fs
adc
(bad)
sbb
cs
aam
rcr
jmp
(bad)
xchg
jno
test
imul
jle
or
push
xor
and
ror
ds
out
loope
xchg
mov
inc
push
ja
pop
mov
jnp
push
add
xor
and
ror
ds
out
in
xchg
mov
mov
inc
pop
mov
jle
xor
push
into
sub
shl
rcr
aam
(bad)
outs
mov
mov
mov
jle
icebp
add
xor
fidivr
jmp
(bad)
outs
mov
push
jb
pop
mov
inc
adc
(bad)
push
xor
and
ror
ds
shl
(bad)
outs
mov
mov
jno
popa
jnp
push
add
xor
and
cs
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
sahf
dec
scas
mov
pop
jno
popa
jle
xor
push
into
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
jno
and
ror
rcr
out
loope
ror
mov
pop
jno
popa
jnp
push
add
xor
and
ror
ds
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
cs
rcr
lods
loope
outs
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
dec
add
into
and
xchg
into
shl
out
loope
xchg
mov
push
dec
inc
mov
adc
(bad)
push
xor
and
ror
rcr
out
loope
xchg
mov
mov
mov
jle
push
add
xor
and
aam
rcr
out
loope
xchg
mov
push
dec
inc
pop
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
les
les
mov
je
popa
jle
icebp
(bad)
loope
and
cs
xchg
icebp
out
push
(bad)
xchg
mov
inc
scas
dec
or
jle
icebp
(bad)
sbb
and
ror
fstp
mov
sahf
mov
pop
inc
push
add
mov
xor
push
(bad)
loope
arpl
ds
xchg
icebp
out
push
sti
fmul
mov
pop
jno
popa
jle
push
xor
xor
outs
shl
les
fisttp
mov
pop
jno
sahf
jnp
push
add
xor
and
cs
fimul
out
push
(bad)
xchg
rol
add
mov
adc
(bad)
sbb
and
cs
rcr
mov
rcr
push
dec
mov
jnp
push
add
xor
and
cs
rcr
out
loope
xchg
fild
mov
jno
sahf
jle
pop
add
into
and
ror
les
mov
inc
scas
dec
inc
or
inc
push
add
xor
and
cs
rcr
mov
sbb
and
push
add
xor
jne
ror
xchg
fdivp
adc
stos
xchg
mov
in
mov
pop
mov
jle
or
shl
ds
xchg
fdivp
adc
sti
(bad)
fadd
mov
jno
aaa
jle
icebp
(bad)
push
xor
fidivr
ror
ds
out
push
(bad)
xchg
jno
sahf
mov
mov
or
sahf
jle
push
add
data16
ror
rcr
mov
sbb
jno
popa
jle
push
add
imul
rcr
jmp
(bad)
xchg
jno
sahf
mov
mov
pop
sub
adc
shl
ds
rcr
out
loope
enter
mov
mov
pop
jno
popa
jle
push
add
xor
and
cs
les
mov
sahf
mov
mov
pop
jno
popa
jle
push
add
into
and
ror
call
mov
or
xor
out
or
xor
and
ror
fld
rol
mov
jno
sahf
jle
push
add
xor
adc
ror
pushf
fdivp
adc
(bad)
xchg
mov
mov
jno
aas
jle
icebp
add
xor
fidivr
aam
rcr
out
loope
fwait
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
into
mov
mov
jno
popa
jle
push
add
xor
and
cs
mov
(bad)
xchg
mov
mov
jno
popa
jle
push
add
push
cs
ror
les
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
fist
mov
mov
jno
popa
jle
push
add
xor
and
mov
shl
(bad)
loope
outs
mov
mov
jno
popa
jle
push
add
xor
and
ror
ds
mov
mov
mov
pop
jno
add
adc
add
xor
and
ror
rcr
out
loope
xchg
jmp
sahf
mov
mov
pop
jno
sbb
push
(bad)
sbb
and
ror
rcr
out
loope
xchg
call
mov
pop
jno
popa
jnp
push
add
xor
inc
shl
rcr
out
loope
xchg
mov
sahf
mov
mov
mov
adc
add
into
sub
shl
rcr
out
loope
xchg
mov
mov
jno
sahf
jnp
push
add
xor
and
cs
rcr
out
loope
xchg
mov
mov
mov
xor
outs
sahf
jnp
push
add
xor
and
cs
les
in
sahf
dec
push
mov
pop
sbb
adc
fidivr
ror
stos
fdivp
adc
(bad)
xchg
in
sahf
dec
scas
mov
xor
sahf
jle
bound
push
into
cs
ror
ds
and
outs
mov
cmp
inc
mov
out
push
add
xor
fidivr
aam
rcr
out
in
xchg
mov
fsubr
das
pop
jno
popa
jnp
push
add
into
sub
shl
fistp
loopne
sahf
dec
stos
into
mov
jno
popa
jle
push
add
xor
and
ror
ds
out
loope
dec
sar
add
adc
shl
ds
rcr
out
loope
loope
and
dec
mov
jle
push
add
xor
fidivr
ror
rcr
out
loope
xchg
mov
mov
jno
sahf
jnp
push
add
xor
and
ror
rcr
pushf
loope
outs
mov
int
dec
mov
jle
or
xor
and
ror
rcr
out
loope
loop
and
mov
sub
sahf
jle
push
add
xor
and
ror
rcr
out
loope
xchg
cli
sbb
jno
sahf
jle
jnp
push
into
sub
xor
fild
sbb
jno
popa
jle
push
add
xor
and
cs
mov
icebp
adc
add
jle
(bad)
scas
mov
pop
mov
jle
icebp
(bad)
loope
pop
and
cs
les
xchg
mov
push
dec
inc
pop
jno
popa
jle
push
add
xor
fidivr
test
xchg
loope
outs
mov
mov
jno
sahf
jle
ja
push
into
and
aam
rcr
out
in
xchg
mov
mov
fstp
jno
sahf
jnp
push
add
xor
and
cs
mov
sti
jmp
and
dec
cmp
xchg
fs
dec
cs
ror
rcr
out
loope
xchg
cmc
sbb
jno
popa
jnp
push
add
xor
and
lods
into
shl
xchg
loope
outs
mov
sahf
mov
movs
ret
push
dec
mov
adc
rcr
cmp
loope
outs
mov
rcl
pop
movd
adc
add
into
and
ror
rcr
jmp
(bad)
xchg
jno
sahf
mov
mov
pop
jno
popa
jle
or
xor
and
ror
mov
adc
dec
inc
fidiv
sahf
jnp
push
add
xor
and
cs
inc
fdivp
adc
(bad)
xchg
mov
push
dec
inc
pop
lock
popa
adc
and
ror
ds
outs
loope
outs
mov
sahf
mov
pop
mov
jno
popa
jle
push
add
xor
and
aam
rcr
out
in
xchg
mov
xor
inc
pop
mov
std
adc
(bad)
push
xor
and
std
loope
push
mov
lods
push
faddp
pop
arpl
stc
adc
mov
rcr
push
icebp
popa
outs
jno
pop
or
cmp
xor
(bad)
retf
aam
in
cmc
call
mov
ins
jne
or
sbb
cmp
sub
fcmovu
rcl
rcr
lahf
xchg
mov
imul
xor
and
adc
add
hlt
call
(bad)
fdiv
mov
dec
push
jg
outs
jo
add
cmp
sub
fadd
int
std
outs
jmp
mov
pop
inc
push
mov
fwait
loope
(bad)
jmp
sahf
aad
(bad)
shl
sub
pop
jg
dec
ins
push
addr16
pop
xchg
mov
test
fisubr
pop
sbb
add
arpl
ins
push
das
dec
pop
shl
test
out
mov
xor
push
jg
imul
pop
arpl
stos
scas
mov
lock
sti
aam
mov
adc
pusha
push
dec
dec
inc
inc
ds
mov
lds
push
jae
arpl
jg
outs
jns
bound
push
shl
loope
hlt
inc
lahf
ret
fld
sub
jno
add
js
fs
inc
inc
and
cdq
scas
mov
cmc
jmp
in
mov
repz
and
outs
outs
push
pop
das
dec
ds
add
rcl
sub
adc
data16
jge
ins
ds
scas
mov
rcl
mov
xchg
aad
adc
inc
popa
add
adc
inc
xor
dec
cmc
scas
mov
mov
mov
in
ret
retf
push
cmp
dec
add
jge
gs
push
dec
popa
dec
xchg
cwde
mov
pushf
jecxz
loopne
fucomp
loopne
outs
sub
add
push
or
jne
add
or
fst
cmp
or
and
dec
inc
ds
fs
popa
sbb
lods
cmp
hlt
rcr
cmp
and
or
pop
mov
popf
mov
shr
out
and
add
cmp
dec
pop
pop
outs
imul
loope
mov
repnz
jmp
xor
dec
adc
jns
pop
popa
pop
jecxz
adc
icebp
sahf
rcr
sbb
aas
and
arpl
push
push
xchg
stos
sbb
pushf
lds
repz
xor
add
cmp
ds
ds
and
push
jle
mov
xchg
mov
mov
in
adc
jle
add
or
push
popa
inc
pop
imul
xchg
mov
sar
shr
repz
adc
xor
cmp
pop
popa
sub
mov
jmp
out
ret
mov
push
inc
cmp
or
or
jno
dec
push
mov
mov
xchg
fdiv
retf
(bad)
shl
adc
sbb
add
xor
jle
iret
test
mov
mov
fcmove
(bad)
adc
sub
add
and
popa
dec
xchg
cwde
mov
mov
in
call
and
add
jb
pusha
ins
jno
imul
ror
into
mov
enter
add
js
pusha
ins
jno
adc
retf
(bad)
lods
movs
call
fcomp
iret
(bad)
and
daa
add
xor
push
pop
push
jg
scas
in
into
pushf
xchg
lahf
jecxz
rol
(bad)
retf
cs
push
push
inc
inc
jbe
push
jle
pop
mov
loope
fdivp
lods
(bad)
fst
cmp
or
and
pop
pop
pop
jno
dec
pop
mov
cmp
icebp
retf
adc
sbb
adc
inc
outs
inc
inc
pop
sub
js
scas
ret
ficomp
out
in
mov
loopne
sub
add
adc
sbb
cs
jle
test
fdiv
xchg
lea
mov
aad
push
dec
xor
adc
cmp
(bad)
push
inc
and
movs
mov
xchg
mov
mov
ffree
mov
sub
outs
or
push
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
bound
push
sub
and
aam
(bad)
cli
in
xchg
popf
sub
pop
inc
outs
jo
pusha
movups
add
xor
push
icebp
out
loope
ror
rcr
scas
mov
pushf
jb
bound
dec
inc
pop
xor
es
adc
ffreep
iret
sar
sahf
xchg
mov
jno
inc
pop
push
dec
and
sub
sbb
or
(bad)
retf
mov
test
ja
inc
pop
push
dec
cmp
or
sbb
shl
fdiv
in
loop
adc
and
pop
je
addr16
mov
mov
stc
out
neg
pop
or
cmp
xor
inc
dec
push
jp
push
call
aaa
pop
inc
dec
push
jl
outs
outs
sbb
ror
jecxz
repz
add
xor
dec
fs
imul
test
out
stc
out
push
sbb
sub
cmp
dec
push
cmps
iret
loopne
fidivr
ror
ret
jmp
stc
cdq
xchg
mov
inc
dec
push
jnp
push
sbb
sub
sar
jecxz
lock
or
pop
inc
push
dec
popa
jle
outs
add
adc
and
xor
(bad)
int3
fcmovb
iret
shl
call
inc
pop
push
dec
cmp
sub
push
sbb
jmp
xlat
fadd
test
mov
test
jp
dec
push
pop
inc
sub
adc
out
lock
iret
rcr
shr
jmp
sbb
xor
inc
pop
push
dec
pusha
jg
ins
sbb
ret
retf
cmc
jmp
xor
inc
pop
push
dec
data16
imul
xlat
fadd
call
and
xor
pop
adc
jp
imul
dec
cmps
mov
xchg
mov
idiv
out
(bad)
fadd
sub
cmp
or
add
jne
gs
push
pop
inc
lods
mov
mov
in
repz
loopne
rcr
shr
and
adc
ret
scas
mov
fdiv
in
in
adc
push
sbb
sub
pop
inc
dec
push
js
push
xchg
mov
(bad)
std
loop
repnz
and
pop
inc
dec
push
jg
outs
jno
or
iret
loopne
xlat
(bad)
sub
and
outs
jno
sahf
mov
mov
pop
jo
arpl
add
sub
(bad)
jmp
mov
cmps
mov
jbe
data16
push
or
cmp
sub
fadd
enter
sti
in
xchg
pushf
sub
pusha
jl
dec
inc
pop
xor
add
cmc
jmp
mov
movs
mov
ja
data16
dec
dec
push
cmp
sub
sbb
or
clc
out
hlt
fcmovnb
retf
aam
or
sbb
es
retf
aad
loop
repnz
or
inc
dec
push
jg
outs
jno
add
adc
xor
rcr
iret
loopne
lock
sbb
inc
pop
push
dec
gs
push
sbb
and
xor
sti
in
repz
into
into
mov
popf
xchg
mov
jne
inc
pop
push
dec
and
xor
pop
sbb
or
stc
imul
(bad)
(bad)
(bad)
test
xchg
cwde
xchg
jnp
dec
push
pop
inc
sub
sbb
loop
mov
ror
in
hlt
call
es
dec
push
pop
inc
push
xchg
fwait
test
aad
vpslld
loop
adc
sub
cmp
dec
push
pop
inc
outs
jno
popa
mov
sbb
sub
cmp
(bad)
xchg
mov
mov
jae
arpl
or
and
fcomi
jmp
sti
xchg
mov
mov
jns
imul
daa
sub
fcmovnu
fcmovb
in
lock
fidiv
mov
push
dec
inc
pop
aaa
sub
cmp
or
push
stc
out
neg
(bad)
enter
stos
mov
test
jne
inc
dec
push
cmp
add
cld
loopne
lock
iret
rcl
push
add
xor
and
mov
adc
hlt
pop
and
sbb
jne
data16
or
sbb
and
cmp
mov
loop
xchg
xchg
mov
dec
dec
push
jl
outs
jl
pop
or
aaa
aad
iret
aad
out
clc
cdq
mov
mov
inc
inc
pop
jp
outs
jnp
add
or
sub
aam
ror
out
pop
fs
cmp
xor
xchg
cdq
jmp
jle
ror
fadd
(bad)
sar
jecxz
stc
pushf
or
and
dec
adc
sbb
aad
mov
lahf
xchg
mov
jg
arpl
or
cmp
into
pushf
lahf
lock
mov
movs
pushf
fisttp
je
jns
inc
or
sub
aas
fadd
(bad)
xlat
lock
out
xchg
add
push
inc
dec
push
jnp
data16
prefetch
xor
xor
lea
stc
mov
mov
sub
xor
adc
or
cmp
leave
(bad)
shl
jecxz
icebp
xchg
lea
(bad)
push
dec
dec
push
jno
ins
sub
cmp
cmp
retf
imul
pop
pop
inc
dec
ja
loope
jae
jg
arpl
adc
add
test
aam
ret
fist
js
mov
and
call
xor
ja
mov
inc
xor
stos
aad
loope
add
mov
imul
dec
push
lods
sub
push
fisttp
and
pop
jg
aaa
mov
mov
ins
movs
daa
jge
adc
ins
cmp
call
ja
popf
call
or
jge
adc
mov
xor
push
xor
dec
adc
jmp
lea
xor
inc
push
mov
jle
call
dec
ds
mov
in
and
cwde
mov
sbb
lock
scas
lods
and
cli
or
stos
or
sub
shr
inc
xchg
jno
pextrw
cs
xor
or
fs
fsubr
cmps
test
adc
adc
inc
push
or
ss
xchg
jecxz
adc
cmp
mov
mov
or
mov
(bad)
jo
xchg
push
add
xor
and
ror
rcr
out
loope
xchg
mov
cmp
outs
popa
jle
push
add
sub
dec
dec
mov
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
ror
rcr
out
loope
xchg
jmp
push
dec
inc
pop
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
mov
sahf
fld
push
inc
pop
jno
jns
gs
push
pop
push
addr16
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
cmps
outs
cmp
inc
dec
sbb
or
imul
pop
push
ds
neg
add
test
aad
sub
sub
inc
popa
or
imul
pop
mov
scas
lods
ror
loopne
xchg
iret
(bad)
shl
aas
das
pop
push
sbb
jne
pop
dec
inc
push
mov
mov
nop
in
loopne
aam
rol
cmp
pop
cmove
add
pop
dec
dec
pop
icebp
(bad)
(bad)
mov
int3
stc
rcl
add
or
adc
adc
add
pop
inc
dec
dec
mov
fwait
xchg
ffreep
iret
xlat
and
sub
adc
jb
or
cmps
xor
loope
bound
mov
popa
push
sbb
jle
bound
xor
push
pop
mov
sahf
(bad)
sbb
pop
dec
xor
and
pop
inc
ds
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
push
inc
inc
pop
mov
into
stc
shl
repz
xor
adc
add
je
jae
xor
(bad)
leave
ror
rcr
out
loope
xchg
mov
fcom
outs
and
sbb
pusha
ja
pop
inc
pop
mov
sti
mov
hlt
mov
lock
xlat
push
cmp
adc
jle
push
imul
dec
ds
mov
icebp
mov
sbb
jno
popa
jle
push
add
xor
and
shl
fdivp
out
loope
xchg
mov
xlat
cmp
jno
call
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
sbb
outs
jnp
cs
ds
rcr
mov
icebp
(bad)
ror
ss
xor
sbb
push
sub
push
and
into
sar
mov
mov
adc
sbb
push
add
cs
shr
loope
xchg
cld
sbb
jno
popa
jle
push
add
xor
and
shl
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
jbe
push
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
or
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
adc
push
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
xor
into
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
das
ds
rcr
loopne
(bad)
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
inc
mov
push
imul
push
xor
and
ror
rcr
out
loope
xchg
mov
xlat
push
dec
inc
pop
jno
popa
jle
push
add
xor
push
push
mov
rcr
out
loope
xchg
mov
cmps
outs
sub
pop
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
cmps
outs
daa
inc
pop
jno
popa
jle
push
add
sub
inc
ds
icebp
test
icebp
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
gs
or
push
xor
into
(bad)
jmp
mov
movs
mov
jne
gs
adc
pop
and
movs
cmc
xchg
in
xchg
push
test
mov
movs
sub
inc
dec
jne
gs
adc
and
ror
ror
cli
cmc
jmp
mov
push
jnp
push
pop
push
xor
and
xlat
repz
in
cld
(bad)
mov
mov
movs
scas
mov
fs
outs
popa
outs
jbe
push
adc
pop
xor
xor
xchg
out
hlt
xchg
icebp
out
test
cmps
scas
mov
or
jl
pop
es
dec
es
in
mov
mul
clc
mov
outs
sbb
sbb
push
adc
add
add
adc
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
shl
xchg
dec
ins
outs
cld
(bad)
xchg
mov
push
mov
outs
popa
jle
mov
fwait
mov
into
sar
push
xor
pop
cmp
in
cli
lods
mov
mov
add
call
dec
(bad)
push
cmp
dec
push
jno
pushf
mov
xchg
(bad)
or
js
in
fs
daa
inc
pop
push
add
cmp
dec
pop
data16
mov
cmps
movs
cli
(bad)
mov
gs
push
dec
and
jle
pop
dec
jo
out
mov
les
scas
lock
sar
mov
push
sub
sub
mov
aam
movs
mul
stos
(bad)
and
cmp
je
inc
sub
push
sbb
cli
cmc
mov
out
cli
shr
into
rcr
adc
sub
popa
mov
mov
mov
adc
add
xor
and
ror
rcr
out
push
(bad)
xchg
mov
mov
jno
popa
jle
push
add
xor
and
cs
rcr
out
loope
xchg
mov
mov
jno
popa
adc
cs
ror
rcr
out
loope
xchg
lea
inc
push
dec
inc
pop
jno
popa
jle
push
add
xor
and
fdivp
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
inc
push
dec
inc
pop
jno
popa
jle
push
add
xor
and
ror
(bad)
out
in
xchg
mov
mov
mov
pop
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
mov
pop
jno
bound
push
add
into
and
ror
rcr
out
push
(bad)
xchg
mov
inc
push
dec
inc
pop
mov
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
adc
and
ror
rcr
out
loope
xchg
mov
mov
jno
sahf
jle
push
add
xor
and
ror
rcr
out
jecxz
outs
mov
mov
jno
lods
jle
push
add
xor
into
(bad)
out
in
xchg
mov
mov
jno
popa
jle
icebp
add
xor
and
shl
rcr
out
loop
xchg
mov
mov
jno
popa
jp
push
or
xor
and
ror
shl
out
loope
outs
mov
mov
jno
popa
jle
push
add
xor
and
ror
shl
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
xor
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
(bad)
xchg
mov
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
mov
mov
pop
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
pop
jno
popa
sub
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
adc
add
xor
and
ror
rcr
out
loope
xchg
mov
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
mov
mov
pop
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
shl
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
(bad)
loope
rcr
shr
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
out
loope
xchg
mov
mov
jno
popa
jle
push
add
xor
and
ror
rcr
adc
lahf
retf
popf
sar
and
cs
dec
push
dec
test
cmc
(bad)
xchg
(bad)
jecxz
out
rcl
and
or
push
pop
js
imul
dec
mov
test
cwde
fstp
mov
inc
gs
sub
(bad)
stos
mov
nop
fcmovnbe
enter
out
xchg
cwde
xchg
xchg
xor
daa
pop
sbb
push
outs
bound
push
in
mov
rol
mov
push
fstp
mov
gs
pop
or
xor
hlt
jecxz
jae
shr
test
mul
outs
add
xchg
(bad)
mov
mov
icebp
out
add
and
repz
xchg
jle
or
rcr
iret
pop
pop
add
bound
sahf
add
mov
cmp
add
adc
data16
push
rcr
scas
shr
pushf
loope
lock
mov
adc
inc
fsubp
lock
adc
push
loope
arpl
dec
loop
rcr
imul
jecxz
dec
aam
cs
out
not
not
scas
xor
mov
icebp
in
movs
push
and
(bad)
rol
push
dec
xchg
mov
(bad)
cmps
adc
test
cld
into
xor
add
iret
hlt
jl
or
pop
shl
push
dec
je
dec
test
adc
xchg
les
popa
fcomip
shl
mov
repz
jle
inc
or
fst
xchg
mov
mov
mov
loopne
lock
gs
jecxz
sti
int3
ret
cs
sbb
sbb
outs
ds
and
pop
mov
sahf
jmp
stos
jecxz
int3
jecxz
repnz
xor
aas
add
adc
xor
jo
dec
inc
xor
lods
movs
mov
int3
xchg
mov
lods
mov
jmp
add
and
inc
pop
movs
scas
loope
or
lahf
(bad)
in
repnz
ror
sub
push
adc
aas
outs
jp
dec
inc
xor
repz
rcr
out
jmp
fcmovb
sar
cmp
add
bndldx
dec
jnp
or
sbb
cmps
scas
(bad)
popf
ror
popf
mov
xor
pop
jae
push
jno
pop
add
cmps
movs
lods
rcr
repz
movs
int
cmp
add
pop
xor
ins
adc
push
test
xchg
ffreep
aad
aaa
outs
xor
adc
inc
pop
sub
dec
cmp
push
jno
icebp
les
mov
ror
clc
loopne
lock
or
cmp
sub
pop
inc
dec
push
js
push
nop
mov
ror
clc
loopne
lock
or
cmp
sub
pop
inc
dec
push
js
push
nop
mov
ror
clc
loopne
lock
or
cmp
sub
pop
inc
dec
push
js
push
nop
mov
ror
clc
loopne
lock
or
cmp
sub
pop
inc
dec
push
js
push
nop
mov
ror
clc
loopne
lock
or
cmp
sub
pop
inc
dec
push
js
push
nop
mov
ror
clc
loopne
lock
or
cmp
sub
pop
inc
dec
push
js
push
nop
mov
ror
clc
loopne
lock
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
push
add
inc
icebp
or
xor
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
sti
push
jmp
(bad)
retf
cld
mov
adc
dec
mov
ss
js
or
pop
push
in
daa
fdiv
retf
inc
mov
jbe
cmp
cmps
pop
mov
(bad)
cmp
das
out
imul
call
jmp
(bad)
retf
inc
ficom
data16
add
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
scas
inc
pusha
xor
inc
stos
sub
push
mov
sbb
mov
mov
sti
in
sbb
adc
jo
xor
push
sub
pop
push
jg
mov
inc
xchg
add
jae
ss
stos
gs
mov
mov
fdivr
add
dec
retf
retf
out
add
cmps
es
cmc
xor
stos
push
inc
and
xor
xor
dec
inc
or
pop
push
out
dec
jmp
fistp
clc
jne
mov
xchg
jnp
imul
sbb
jg
jb
repz
inc
fsubr
xor
inc
stos
push
inc
data16
shr
sar
pop
pop
dec
scas
cmp
or
ret
pop
jmp
fcmovne
retf
add
push
out
jo
jbe
xchg
xchg
aad
fwait
movs
mov
shr
div
repz
mov
outs
retf
scas
mov
mov
jns
movs
shl
cmp
push
push
adc
and
rcr
jbe
ret
jle
test
ret
sub
jmp
scas
mov
arpl
push
push
cs
sub
inc
pop
jmp
(bad)
retf
scas
push
stos
mov
and
mov
sar
shr
dec
sbb
dec
movs
sti
(bad)
cld
fidiv
retf
inc
push
adc
data16
mov
pop
adc
das
out
mul
inc
pop
push
add
(bad)
retf
out
mov
pushf
xchg
cmps
cmps
mov
call
in
ret
mov
ss
inc
and
jbe
xchg
jnp
imul
pcmpgtw
ds
imul
push
adc
xor
retf
inc
mov
aad
outs
ins
xchg
push
mov
mov
icebp
sbb
or
sti
jmp
inc
mov
xor
xchg
mov
das
jg
sub
or
or
mov
add
and
push
stos
sbb
jle
cmps
movs
mov
(bad)
rcl
or
sti
and
iret
lahf
xchg
retf
scas
mov
jbe
ret
xor
aas
outs
inc
sbb
sbb
add
jb
inc
push
inc
stos
cwde
fwait
scas
mov
xor
mov
or
ret
mul
adc
jmp
push
fcmovnu
(bad)
in
mov
inc
xchg
mov
sub
pop
push
or
out
push
pop
es
mov
inc
and
fwait
sbb
xchg
pop
movs
in
mov
(bad)
(bad)
into
out
pushf
push
push
scas
outs
jmp
jns
clc
adc
jae
jmp
pop
cwde
lods
enter
outs
out
jne
jmp
retf
add
mov
jl
mov
shl
cwde
(bad)
mov
outs
fisub
js
sbb
fwait
sahf
mov
sub
xchg
call
cmp
sub
sti
in
sbb
adc
sahf
fwait
xor
(bad)
aas
mov
and
test
jmp
in
sar
mov
jmp
cmp
sahf
mov
jp
movs
dec
dec
add
(bad)
sub
sbb
or
inc
scas
or
and
push
adc
dec
inc
das
jp
mov
mov
jle
jnp
xor
jmp
and
ja
call
pop
popf
adc
rcl
inc
out
cmp
adc
fild
retf
inc
inc
push
out
xor
xor
icebp
test
rcl
lahf
cmp
test
popa
dec
fcmovne
cmp
jb
adc
call
xchg
call
jle
sbb
jmp
xor
add
push
inc
jle
test
add
retf
out
mov
push
adc
retf
scas
push
stos
mov
xchg
and
mov
fnstsw
sub
sti
(bad)
lock
inc
inc
push
adc
data16
mov
and
pop
adc
(bad)
out
mul
inc
pop
push
add
fcmovnu
retf
sbb
sahf
xchg
xchg
call
or
dec
out
mov
ss
and
jbe
pushf
jnp
imul
pop
pcmpgtw
ds
div
pop
push
adc
xor
stos
mov
aad
outs
popa
xchg
xchg
cwde
(bad)
ret
cld
sbb
or
sti
jmp
inc
push
push
ret
data16
sub
pop
push
dec
das
jg
sub
add
loopne
add
add
and
mov
iret
and
mov
mov
rcl
or
sti
inc
jmp
lahf
xchg
retf
scas
mov
jbe
ret
cmp
aas
outs
inc
sbb
adc
adc
cmps
xor
inc
push
dec
stos
(bad)
fwait
out
mov
xor
mov
mov
sti
(bad)
jmp
fcmovnu
(bad)
in
add
in
mov
mov
xchg
jbe
adc
sub
(bad)
(bad)
mov
out
cli
(bad)
mul
popf
gs
rcl
xchg
mov
shl
call
and
sub
(bad)
cmp
data16
repnz
xchg
pop
mov
(bad)
rcl
sub
pop
push
cmps
(bad)
fcmovnbe
cmp
scas
push
sub
xchg
pop
cmp
in
sbb
inc
jns
clc
adc
jae
jecxz
lds
mov
jg
jg
(bad)
(bad)
out
test
push
(bad)
jg
fmulp
cs
mov
ret
dec
pop
dec
dec
sub
inc
mul
push
xchg
pop
push
call
shr
data16
jae
sar
gs
dec
cmp
sbb
xor
mov
fisttp
xchg
js
aam
pop
rcr
out
add
scas
jno
jb
pop
mov
enter
imul
cli
sbb
mov
cwde
xor
xchg
xchg
cmp
movs
cmp
inc
in
test
pushf
and
shr
inc
jbe
xchg
test
sbb
mov
maxps
out
in
ss
and
sbb
js
stos
mov
pop
pop
push
(bad)
out
outs
out
mov
push
adc
jmp
fisttp
scas
push
stos
mov
xchg
and
mov
fdivr
or
dec
movs
sti
(bad)
mul
add
inc
adc
data16
mov
push
imul
dec
cs
(bad)
icebp
out
mul
inc
pop
push
add
fucomi
retf
bound
sahf
xchg
xchg
bnd
aas
sbb
or
mov
adc
push
inc
and
jbe
cwde
jnp
imul
pop
pcmpgtw
ds
push
adc
xor
retf
sahf
mov
aad
outs
gs
mov
sbb
or
sti
jmp
inc
ins
push
lahf
data16
sub
pop
push
dec
das
jg
sub
push
neg
push
fist
add
and
sub
jnp
ja
mov
mov
repz
lahf
xchg
retf
scas
cmps
push
jle
jmp
(bad)
fcom
dec
push
cmp
outs
inc
sbb
pop
push
das
push
jmp
xor
inc
push
dec
stos
mov
sbb
repz
mov
and
fstp
inc
cmp
inc
(bad)
scas
not
add
shr
pop
cmp
sub
jb
push
ja
and
mov
jbe
or
xor
push
aam
mov
movhps
jo
icebp
xor
ss
ins
and
xchg
lods
loop
cmps
push
(bad)
ds
cmps
or
mov
mov
aad
xchg
fwait
sahf
jp
jnp
out
pop
pop
(bad)
xchg
sub
or
or
add
push
inc
xor
sahf
fdiv
adc
mov
sub
ret
pop
fstp
out
outs
mov
test
mov
nop
les
mov
mov
rcl
loop
jb
add
test
and
push
pop
(bad)
adc
sbb
jbe
jmp
adc
push
ins
and
stos
fcmovnb
test
(bad)
cs
out
repz
push
sub
xchg
or
sti
arpl
test
xlat
(bad)
pop
ret
ins
push
not
pop
push
mov
mov
adc
into
xchg
or
pusha
(bad)
cmp
sahf
arpl
or
ss
in
repnz
jae
push
int3
cmovg
dec
shl
mov
movs
daa
jg
invd
mov
ja
(bad)
mov
jb
(bad)
lahf
out
out
jecxz
stc
test
jnp
(bad)
stos
jmp
cld
dec
lea
stos
bound
dec
dec
jle
jo
sbb
pop
pop
cmps
es
out
jmp
rol
inc
ss
inc
loope
ror
out
idiv
out
repz
data16
das
and
mov
or
pop
dec
sbb
(bad)
in
(bad)
arpl
dec
test
data16
daa
(bad)
iret
inc
xlat
jo
fisubr
ins
in
mov
cmps
js
jg
cmp
mov
cmp
aas
inc
dec
inc
xor
push
fwait
add
xchg
and
pop
out
dec
imul
sbb
jle
inc
loope
cmp
outs
xor
jne
xlat
mov
xchg
aas
mov
(bad)
in
or
cmp
retf
xor
stos
cdq
push
shr
sar
repz
sub
fnsave
jmp
stos
daa
mov
fstp
jns
xchg
repz
cmp
les
sbb
jg
add
movs
mov
hlt
data16
mov
cmps
loope
mov
dec
cmps
push
test
pusha
stos
push
enterw
stos
call
add
jle
gs
or
mov
ret
in
stos
mov
test
imul
mov
cmp
sbb
add
mov
inc
xor
mov
jle
(bad)
mov
add
(bad)
inc
out
icebp
or
push
or
sbb
and
fist
(bad)
std
xchg
aam
pop
test
cmp
mov
out
pop
cmp
push
icebp
fdivr
idiv
mov
pop
xor
sbb
fstp
and
cwde
add
ret
jle
pop
pop
dec
xchg
(bad)
or
mov
into
mov
stos
jmp
sti
je
imul
lds
out
push
in
test
add
mov
lea
cs
mov
jnp
inc
jge
xchg
inc
mov
fild
je
sub
ror
pushf
js
pop
movs
retf
dec
cli
push
pop
bound
push
call
test
xchg
mov
cmps
ret
test
xchg
pop
jg
mov
pop
mov
stos
xor
xor
xor
(bad)
(bad)
cmps
sbb
or
add
jecxz
(bad)
inc
xchg
inc
pop
mov
ret
sub
mov
imul
cli
cmp
retf
ss
es
mov
in
push
xchg
das
cdq
pop
sbb
and
cmps
pop
sbb
(bad)
xor
mov
mov
imul
sub
jle
sub
(bad)
dec
dec
js
mov
xor
inc
arpl
out
pop
xchg
jle
xchg
sbb
cmps
mov
mov
test
jb
int
push
and
mov
cmps
pop
repnz
xor
out
neg
iret
mov
outs
and
and
mov
mov
(bad)
sub
xchg
mov
dec
mov
mov
jge
sbb
dec
stc
inc
scas
retf
xchg
outs
jno
jmp
cmps
mov
loop
aad
popf
shufps
and
push
or
jbe
and
leave
sub
mov
cmps
pop
mov
push
les
add
push
scas
(bad)
mov
stos
data16
mov
cs
(bad)
(bad)
jnp
out
dec
stc
add
add
jmp
jmp
push
je
xchg
(bad)
push
stos
push
xchg
std
(bad)
cmps
(bad)
in
repz
jecxz
pusha
sub
inc
fwait
jge
inc
ins
data16
mov
sub
xchg
les
popa
pop
das
xchg
inc
es
and
cdq
mov
xchg
pop
movs
loope
(bad)
std
xchg
in
out
mov
or
out
jmp
lahf
leave
xor
xor
ins
adc
repz
shr
cs
outs
mov
sti
pop
jmp
sahf
and
jae
mov
(bad)
ja
pop
mov
jp
adc
adc
pop
adc
scas
push
cwde
out
inc
out
and
cmp
repnz
out
sub
cdq
js
mov
push
out
push
lods
bound
add
fcom
dec
repnz
mov
mov
cmps
ret
mov
push
pushf
xor
fcom
xchg
cs
pop
loope
dec
cmp
or
add
(bad)
fxch
mov
out
jbe
sub
repnz
das
sub
mov
aam
fdiv
hlt
rcl
adc
push
xor
inc
mov
into
cmp
loopne
pop
xor
sahf
mov
and
cmp
out
in
nop
push
jmp
sti
sahf
push
push
imul
(bad)
jb
adc
sub
lods
fbld
add
jbe
(bad)
fidiv
out
mov
jbe
cmp
cmps
sbb
inc
(bad)
test
call
add
pop
mov
ret
cmps
push
cmp
mov
push
add
sahf
lods
sbb
retf
mov
jno
or
xchg
mov
cmp
pop
mov
lea
(bad)
pop
push
(bad)
mov
jae
ja
jnp
xor
cmps
dec
xchg
cmp
loop
div
data16
pop
enter
push
xchg
xchg
sbb
idiv
mov
cmp
pop
imul
xchg
inc
fs
arpl
imul
rcr
sbb
dec
xor
sar
pop
je
stos
rcl
(bad)
xchg
ret
stos
jno
hlt
int
(bad)
scas
push
pop
ss
mov
fsub
test
int3
sar
js
sbb
sbb
sti
jmp
iret
fdivr
xor
cmps
sar
outs
in
xor
push
aas
pop
adc
into
jbe
mov
test
sbb
cmps
imul
push
cmp
sub
ret
test
das
int3
xor
sub
sti
mov
fwait
bound
jbe
call
cmps
xchg
push
in
sub
in
fwait
jle
inc
aas
sbb
xchg
mov
adc
and
xor
pop
sub
scas
cmps
sbb
mov
mov
pop
enter
ret
popf
(bad)
jecxz
sti
popf
pusha
imul
popf
add
mov
jns
sub
movs
neg
mov
neg
push
pop
pop
(bad)
js
fimul
int
and
in
lds
js
call
cmp
mov
or
push
imul
fist
xor
push
test
(bad)
jbe
in
add
(bad)
jmp
daa
mov
push
xchg
fs
dec
xchg
sub
dec
dec
xlat
mov
in
mov
movs
push
mov
inc
jb
pop
je
sbb
xchg
sbb
stos
jno
(bad)
retf
cli
movs
jne
mov
jmp
out
jae
loop
retf
mov
sub
test
fwait
jmp
adc
xchg
adc
push
push
mov
xor
fild
jmp
and
retf
mov
ss
inc
mov
mov
xchg
push
push
mov
pop
mov
inc
mov
jl
lods
xor
xchg
int
push
outs
sub
movs
or
mov
ds
xor
out
push
scas
cmp
fisub
outs
jbe
repz
imul
mov
jge
sbb
mov
adc
mov
and
cmp
movs
ins
mov
jmp
outs
mov
scas
call
jb
cmps
lods
fcmovne
sbb
or
cmp
movs
xor
scas
mov
mov
push
stos
(bad)
jmp
pop
sti
or
xor
sbb
cmp
scas
mov
or
pop
pop
pushf
scas
popf
add
push
mov
push
mov
imul
and
jg
dec
jle
(bad)
stos
mov
pusha
or
cdq
fs
outs
mov
enter
out
test
imul
ret
fiadd
mov
sbb
lods
(bad)
dec
sbb
mov
jmp
xchg
jmp
mov
or
mov
mov
sbb
pop
push
jmp
mov
ja
jns
xchg
jecxz
inc
mov
ins
aam
add
setg
stos
lea
stos
outs
adc
cwde
ja
repz
pop
in
cmp
pop
cmp
rol
xor
jle
ins
test
out
call
ds
sbb
add
add
sub
sar
and
mov
sub
sar
dec
in
cmp
jecxz
cmp
lea
push
std
mov
arpl
call
sub
es
out
and
into
cmp
out
and
inc
inc
ret
xchg
mov
dec
les
out
inc
pop
xor
and
add
and
cmp
mov
adc
jle
scas
fcomp
xchg
aas
pop
mov
(bad)
mov
sub
into
ins
movs
adc
mov
scas
and
pop
aam
dec
(bad)
push
push
jno
lods
out
xor
cmp
cmp
dec
sahf
ds
adc
mov
int3
push
jo
stos
sub
push
repnz
jb
xchg
xor
or
adc
xor
pop
adc
rcr
inc
int
iret
scas
sub
jl
lock
imul
cmp
mov
and
adc
adc
scas
xor
imul
rol
dec
mov
add
xor
(bad)
lods
in
inc
retf
inc
loop
inc
in
fwait
jb
add
lods
ds
xor
aad
or
out
xor
mov
neg
imul
shl
pop
add
jmp
push
icebp
dec
add
add
in
mov
rol
in
and
xlat
mov
push
lods
popf
out
imul
ret
adc
pop
stos
data16
and
ds
jl
jnp
bound
mov
call
ss
popf
xor
fld
stos
call
jo
into
pop
cld
shr
push
js
sahf
jg
mov
imul
jbe
test
push
pop
addr16
mov
rol
scas
add
mov
(bad)
mov
mov
push
sbb
shl
dec
and
jnp
ret
out
sub
push
gs
test
mov
retf
arpl
fcmovnu
ins
adc
mov
lahf
jbe
pop
fist
ins
xor
scas
sub
push
inc
xchg
repz
and
xchg
dec
push
outs
mov
repz
mov
inc
jb
test
ins
lock
addr16
popf
nop
push
dec
(bad)
arpl
or
sub
mov
jns
pop
scas
mov
mov
mov
sub
adc
and
sub
or
mov
into
nop
mov
sub
adc
or
jmp
mov
mov
xchg
imul
mov
dec
(bad)
sub
nop
imul
jno
jb
push
pop
outs
stos
jbe
jns
sbb
sbb
ret
outs
mov
retf
shr
inc
fild
(bad)
mov
xchg
mov
inc
sub
out
xchg
leave
div
adc
pushf
push
xor
add
cdq
mov
loop
arpl
rol
xchg
aam
xchg
push
hlt
adc
dec
fxch
mov
es
rcr
ret
cmp
nop
loopne
(bad)
mov
out
cmps
retf
push
mov
cwde
gs
into
sbb
out
mov
fmul
xchg
cmc
(bad)
mov
mov
(bad)
push
fwait
test
inc
xchg
aas
jecxz
ret
inc
les
fsub
push
jae
adc
push
mov
and
arpl
push
fisubr
das
psllw
sahf
jge
das
sbb
test
daa
and
xor
test
ret
and
cs
out
test
cli
push
jmp
pop
xchg
lahf
sub
call
sub
dec
mov
fadd
cmps
fstp
cmps
in
int3
ja
mov
outs
das
das
pop
imul
fisttp
pop
mov
pusha
sbb
mov
repnz
mov
ins
mov
movs
cli
adc
test
inc
mov
je
ds
mov
xchg
pop
and
es
jo
mov
mov
push
dec
shl
ds
loop
pop
sbb
push
(bad)
push
shr
fsubr
mov
pop
addr16
aas
sar
xor
sub
mov
ss
inc
inc
test
jae
cwde
sbb
xchg
mov
(bad)
cs
je
jno
adc
inc
jmp
(bad)
call
dec
jbe
xchg
xchg
out
(bad)
mov
cmp
outs
sub
sti
lahf
and
xor
mov
mov
imul
mov
nop
outs
(bad)
icebp
sbb
dec
scas
es
inc
int
lahf
repnz
iret
dec
pop
pop
jbe
cdq
jnp
aam
sbb
adc
lahf
or
add
cld
xor
xor
rol
out
push
mov
leave
inc
push
mov
mov
or
pop
out
pop
or
xchg
call
(bad)
out
adc
inc
xor
and
mov
xchg
cs
loope
cmp
push
or
sti
popf
scas
lods
sahf
sub
pop
stos
or
xlat
test
mov
mov
mov
cmc
retf
adc
test
aad
jp
imul
push
mov
add
jle
cwde
adc
or
mov
xchg
xchg
and
push
xchg
ret
or
mov
pop
inc
call
ret
addr16
test
xchg
imul
dec
add
das
neg
clc
xor
cmp
mov
fistp
dec
cmps
mov
or
sbb
jmp
push
lahf
and
ja
pop
and
push
scas
cmp
jecxz
jg
and
(bad)
xchg
inc
mov
push
mov
iret
imul
xlat
call
loop
push
dec
(bad)
sub
mov
xor
xchg
(bad)
dec
or
sub
sbb
lahf
arpl
push
stos
cmps
fwait
push
out
jp
mov
pop
mov
(bad)
call
push
push
sti
(bad)
dec
sahf
pop
retf
bts
jbe
ret
adc
dec
jbe
push
mov
xor
inc
es
mov
data16
cli
mov
mov
(bad)
lahf
mov
mov
push
cs
jbe
xchg
add
cmp
sub
sahf
or
sbb
ss
add
push
push
(bad)
jnp
cs
pop
jne
lahf
cmp
pop
out
mov
pop
cmp
mov
(bad)
or
pop
push
ret
sub
movs
dec
sbb
mov
xlat
repz
test
stos
and
and
inc
aad
sub
retf
cs
cs
(bad)
lods
mov
outs
mov
jae
daa
mov
inc
inc
stos
add
push
icebp
sbb
jecxz
cdq
push
add
out
aam
pop
loop
sar
jmp
je
mov
xchg
shr
jmp
or
(bad)
data16
and
mov
xlat
fild
xchg
jb
cmp
push
jb
jbe
adc
and
xchg
adc
in
(bad)
cmp
ja
out
pop
out
mov
mov
jecxz
mov
jmp
aas
inc
clc
add
or
mov
imul
cdq
mul
mov
shr
retf
inc
aam
mov
jbe
ret
mov
imul
retf
pop
sub
pop
ds
push
mov
scas
xor
inc
xchg
(bad)
xor
push
and
lahf
cs
lods
mov
cli
xchg
jae
push
add
pop
push
out
data16
into
xchg
out
cs
push
out
mov
data16
fimul
data16
mov
and
pop
mov
push
xchg
les
ret
imul
ds
sti
(bad)
das
aaa
(bad)
fwait
xor
fldenv
cmp
jp
push
sub
dec
cs
scas
outs
repz
dec
cmp
mov
es
cmc
xor
cmps
pop
repz
xor
imul
mov
mov
mov
fisub
imul
pop
aam
push
stc
add
push
mov
push
cmovae
rcr
ret
daa
imul
dec
push
fwait
outs
dec
xchg
jle
repz
fst
xchg
scas
call
mov
xchg
adc
pop
rcr
sbb
fnstcw
ss
mov
mov
xchg
imul
pop
sub
(bad)
int
add
scas
(bad)
clc
stc
xor
scas
fsubr
xchg
test
xchg
sub
fucomi
out
jg
cli
stos
bnd
retf
(bad)
push
inc
mov
or
push
pop
out
dec
jbe
sub
adc
jecxz
sti
inc
leave
lods
xchg
pop
jnp
mov
rcr
sbb
fcom
sti
mov
jnp
inc
sti
(bad)
sub
jge
test
loop
mov
outs
(bad)
out
data16
adc
or
sbb
test
(bad)
retf
repnz
xchg
jecxz
xor
push
xor
jae
scas
xor
push
sub
push
cmps
mov
(bad)
dec
jle
outs
repz
neg
lea
sbb
cmc
cmp
neg
sti
hlt
lods
cmps
sbb
movs
pusha
mov
push
sti
shr
retf
inc
daa
stos
mov
dec
xchg
outs
push
ins
sbb
add
inc
loopne
sub
mov
ret
mov
pop
fwait
sti
mov
xchg
lahf
mov
xor
pop
stos
adc
inc
ss
fistp
xchg
xor
or
sub
and
div
mov
push
and
inc
es
ja
jnp
test
or
dec
mov
adc
cmp
into
fnstcw
scas
ss
push
add
mov
mov
and
out
push
movs
mov
(bad)
retf
stos
nop
out
pusha
jg
aad
mov
cmp
call
hlt
cli
jbe
out
and
fiadd
mov
jbe
xchg
sub
dec
fbstp
aam
xchg
jge
adc
(bad)
loopne
fisubr
mov
xchg
popa
je
outs
push
imul
mov
mov
es
in
push
sar
cmpps
int
dec
stos
data16
ret
sub
dec
dec
add
mov
mov
push
mov
cmp
xor
sub
cmp
in
out
cmps
dec
push
mov
mov
sti
pushw
mov
pop
pop
pop
mov
les
sbb
nop
or
fcom
fst
inc
mov
push
mov
mov
mov
add
sub
repz
adc
(bad)
add
inc
inc
push
sub
adc
or
xchg
cmp
hlt
push
cmp
ss
retf
inc
stos
stos
jmp
ja
ret
jnp
inc
jg
xor
xchg
jle
inc
jmp
jne
test
jne
pop
fwait
or
mov
jae
dec
jecxz
pop
pop
pop
mov
out
inc
call
push
imul
retf
cs
cmps
jmp
scas
jno
mov
out
lock
hlt
xchg
dec
dec
xchg
dec
(bad)
pop
xlat
mov
into
add
retf
retf
scas
push
push
push
jae
icebp
jns
push
xchg
pop
add
pop
aam
or
sbb
stos
sar
retf
mov
sti
mov
jecxz
data16
data16
in
lods
pop
jnp
mov
fwait
test
retf
or
cmp
mov
sbb
dec
cmp
and
xchg
hlt
into
pop
jmp
mov
inc
fnsetpm(287
cdq
data16
outs
xchg
lea
lock
ja
retf
inc
inc
push
pop
jbe
js
mov
sub
rol
xor
cmps
hlt
push
add
data16
nop
pop
mov
test
xchg
and
cmp
xchg
jnp
xchg
jecxz
stc
retf
(bad)
adc
inc
inc
frstor
push
jnp
mov
push
ret
adc
pop
xlat
sbb
sbb
sti
shr
into
and
jmp
mov
sub
and
cs
sbb
hlt
push
jbe
jecxz
and
mov
ss
push
pushw
mov
mov
mov
cmp
cmps
sbb
out
fist
cmp
mov
xchg
pop
cmp
jnp
(bad)
repz
dec
push
sti
fwait
jnp
fstp
outs
call
imul
leave
dec
mov
xchg
fisttp
mov
pop
jnp
mov
out
data16
mov
jecxz
xchg
sbb
ret
sahf
retf
scas
(bad)
in
fisub
jne
push
loop
pop
pop
push
mov
(bad)
aam
sbb
arpl
push
jno
inc
jbe
jns
iret
out
dec
mov
(bad)
cmp
cmp
add
scas
arpl
xchg
ss
sub
mov
cmp
adc
push
sub
jmp
fidiv
(bad)
scas
aas
mov
mov
jecxz
mov
add
aam
mov
jo
mov
inc
(bad)
pop
push
jmp
mov
jb
xchg
push
jg
pop
xlat
es
ss
mov
mov
es
fisub
mov
jnp
xchg
cmps
popf
cmps
dec
cmp
jnp
push
pop
push
sub
hlt
dec
and
ds
imul
sti
pop
dec
sbb
mov
mov
out
mov
out
fistp
jmp
mov
add
or
(bad)
jmp
pop
add
int
adc
mov
mov
shr
push
pop
(bad)
cmp
push
push
cmp
loop
add
mov
mov
ret
mov
jmp
dec
pop
(bad)
call
push
nop
or
pop
inc
adc
mov
cli
sbb
push
out
mov
jnp
imul
pop
imul
cld
loop
mov
retf
push
aas
adc
mov
das
rcl
mov
mov
adc
aam
ficom
inc
(bad)
xchg
pop
cmp
cmps
jnp
pop
push
push
pop
add
rep
into
retfw
inc
out
xchg
adc
pushf
ds
(bad)
mov
sar
out
neg
movs
fild
sub
mov
xchg
and
cmps
xchg
jge
sub
cmp
(bad)
mov
jnp
fwait
retf
outs
sub
clc
in
and
in
push
bound
sar
inc
ffreep
and
adc
stos
sub
dec
mov
xchg
push
mov
xor
int
xchg
cwde
repnz
sbb
call
aas
cmp
(bad)
call
arpl
adc
sbb
ret
jns
jns
cmps
fsubr
cmp
loopne
ror
(bad)
cld
stc
shl
dec
mov
lea
jg
stos
mov
shl
cmp
sbb
inc
mov
add
shl
inc
mov
scas
fwait
inc
or
shr
mov
mov
xor
dec
ret
jle
xor
add
jecxz
or
shl
mov
out
fiadd
into
jbe
movs
test
(bad)
mov
scas
inc
enter
push
loopne
xor
push
shl
out
fidivr
or
mov
ret
xlat
daa
mov
jbe
scas
xor
outs
iret
dec
mov
jbe
xchg
xchg
pop
clc
cmp
xchg
mov
popa
fidiv
fwait
cdq
fwait
std
fwait
jns
cs
sbb
adc
out
adc
sbb
add
daa
loop
jecxz
repz
cs
push
or
(bad)
xlat
xchg
in
push
push
es
mov
int
je
xor
ja
mov
push
imul
mov
sub
or
jb
cmps
or
sbb
call
cmps
xchg
repz
dec
mov
mov
pop
adc
pusha
push
fidiv
inc
inc
iret
je
push
aas
mov
pop
mov
xor
mov
adc
add
and
and
xor
loopne
shl
out
dec
dec
shl
jmp
sub
sub
add
or
mov
imul
mov
fcomp
xchg
leave
pop
cmp
push
jnp
push
cmps
push
push
push
xchg
jge
mov
adc
aaa
dec
(bad)
and
lods
jmp
push
inc
jge
sbb
cdq
cdq
dec
xchg
or
mov
call
or
push
mov
sbb
mov
mov
dec
cdq
fwait
cmc
xor
imul
pop
mov
bound
inc
cli
jbe
pop
inc
inc
neg
clc
jae
mov
xchg
xchg
out
push
dec
mov
ss
cli
or
adc
mov
fimul
add
test
xor
or
repz
mov
(bad)
dec
jns
mov
xchg
cmps
mov
cwde
movs
add
adc
mov
jnp
jnp
inc
cmps
pushf
mov
das
sbb
jge
(bad)
arpl
rcr
jp
xchg
cld
xchg
sub
dec
es
aam
push
push
or
adc
ss
push
jae
inc
jae
cmps
data16
(bad)
push
mov
inc
dec
sar
jmp
mov
data16
and
push
mov
xchg
addr16
cs
jge
test
out
iret
ret
call
je
ss
or
push
call
inc
jbe
mov
cmp
scas
jmp
retf
or
fneni(8087
loop
aaa
int3
es
mov
jle
mov
xchg
dec
inc
mov
xchg
call
ss
(bad)
adc
pop
repz
add
or
cmc
mov
bound
pop
fwait
jns
sti
ss
or
(bad)
ja
pop
mov
cmps
es
fld
inc
xchg
sbb
enter
mov
add
imul
iret
mov
cmc
and
pop
dec
cs
gs
or
inc
js
cmps
scas
xlat
pusha
mov
fidiv
mov
sub
sub
out
mov
test
bound
stos
in
stos
push
cdq
retf
add
push
mov
xchg
stc
test
inc
aaa
dec
(bad)
jo
xchg
test
mov
add
push
test
mov
sahf
(bad)
jnp
cmps
pop
cmp
cmp
dec
outs
bound
inc
scas
es
mov
push
jmp
mov
imul
(bad)
loop
sub
xor
out
mov
and
stos
jmp
jnp
add
neg
mov
arpl
mov
rep
xchg
gs
inc
dec
add
mov
cmp
push
mov
push
mov
add
stos
push
xchg
jae
or
sti
imul
xchg
push
pusha
cmp
xor
faddp
rcl
push
xchg
sar
dec
jbe
and
aad
scas
(bad)
jbe
in
out
push
xor
push
shr
push
div
ins
push
(bad)
sti
mov
jnp
mov
(bad)
movs
scas
ficom
push
jbe
call
mov
inc
mov
push
pusha
add
into
dec
xor
(bad)
xor
ret
sbb
xor
mov
(bad)
outs
aaa
loopne
stos
scas
fisub
mov
push
xchg
fidiv
add
dec
jmp
add
jbe
iret
sbb
dec
xchg
xchg
push
mov
jb
xchg
loop
xchg
xor
jb
outs
mov
stc
adc
sahf
xor
xchg
and
jle
push
add
xchg
rol
mov
(bad)
sti
xor
push
mov
data16
lock
loopne
shl
ret
not
pop
data16
jne
mov
data16
imul
ins
neg
imul
mov
int
movs
popf
fbld
out
mov
addr16
aas
xchg
loopne
movs
jo
loop
jae
mov
mov
stc
mov
mov
xchg
ss
push
test
cmps
fcom
jecxz
(bad)
dec
sub
out
jg
push
mov
mov
jmp
jbe
xchg
hlt
pop
dec
jle
jmp
adc
scas
jmp
push
data16
push
call
std
cs
mov
mov
(bad)
cmp
sub
popf
mov
adc
mov
sub
push
and
dec
or
mov
xor
xor
xchg
ret
mov
inc
add
lock
mov
jmp
repz
add
xor
and
mov
xor
js
sub
sub
cmp
gs
or
(bad)
sti
inc
iret
cs
mov
mov
push
mov
ja
pop
loop
push
dec
sbb
stos
pop
outs
xchg
loopne
xor
push
mov
ret
or
cmc
je
js
es
pop
mov
lock
jne
dec
xor
out
out
lahf
xor
call
retf
test
mov
into
shl
loop
adc
in
xchg
mov
sbb
retf
pop
mov
cmp
cmps
test
pop
sub
jae
adc
into
xor
nop
imul
xchg
dec
push
push
xchg
sub
neg
cmc
or
push
pop
leave
aaa
xchg
push
inc
fistp
shl
mov
sbb
pusha
arpl
xor
stos
ret
sub
xchg
inc
pop
mov
mov
mov
mov
loopne
push
les
sahf
call
pop
or
outs
out
scas
or
jnp
and
cmps
sahf
or
xchg
xchg
dec
push
mov
adc
sub
icebp
das
xor
(bad)
and
mov
inc
test
mov
cmp
push
pop
aas
cld
stc
sbb
(bad)
(bad)
push
stos
and
jnp
pop
dec
(bad)
bound
jbe
cmps
out
sub
iret
mov
leave
or
gs
adc
lock
fadd
mov
jle
aam
sbb
jae
add
cdq
fwait
lds
sbb
repnz
lahf
repz
xlat
xlat
sbb
or
sbb
fs
adc
(bad)
jbe
pop
imul
sub
jmp
test
ss
cmps
and
rol
or
fwait
cmp
xchg
idiv
lea
sub
jp
inc
scas
push
push
stos
in
std
js
xchg
lds
dec
cld
cmps
sub
stc
add
(bad)
stos
xor
push
jne
es
sub
pop
pop
out
imul
pop
push
hlt
dec
adc
lods
scas
inc
xchg
adc
jbe
mov
sar
push
imul
sbb
sub
xchg
adc
test
into
mov
push
dec
pop
ret
pop
out
pop
inc
es
or
jmp
arpl
test
dec
into
adc
jmp
scas
ss
mov
not
aam
add
adc
ret
pop
mov
(bad)
cld
lahf
mov
aam
lea
lods
outs
adc
inc
rcr
sbb
pop
das
sub
mov
leave
(bad)
push
int
cmc
out
xchg
xchg
mov
sbb
rol
fisubr
in
xor
lahf
pusha
sar
push
jbe
dec
or
sbb
pop
(bad)
cmp
rep
hlt
or
fild
int
and
(bad)
jae
loopne
das
out
dec
cmp
jbe
pop
push
hlt
jecxz
popf
jecxz
xchg
imul
ret
(bad)
pop
imul
rol
sub
out
xor
add
adc
fild
or
ficomp
dec
(bad)
sub
xchg
push
cmps
jae
dec
into
rcr
xchg
jne
ret
ret
into
loopne
mov
add
xchg
sbb
ret
aam
in
repnz
sar
out
(bad)
lds
ret
nop
add
call
add
aam
out
ds
jge
ins
fistp
or
(bad)
rcl
outs
in
xor
cmp
push
jg
mov
jecxz
xchg
imul
mov
out
or
sbb
add
ss
loop
sub
push
lods
ja
xchg
add
out
add
or
jmp
cmp
in
cli
jp
jbe
iret
jbe
stos
out
pusha
cwde
retf
dec
mov
and
sar
jmp
aad
cmp
push
pop
das
outs
lods
dec
(bad)
jp
xchg
test
iret
mov
call
mov
xchg
add
xchg
xchg
mov
cmp
inc
sbb
xchg
bound
pop
mov
cli
imul
ret
movs
cmps
sar
xchg
sub
adc
iret
mov
scas
fxch
jae
inc
pop
nop
and
in
(bad)
test
dec
movs
pop
adc
out
xor
pop
xor
ror
mov
stos
ja
arpl
gs
sbb
mov
sbb
jne
out
inc
dec
jmp
fst
mov
sbb
shl
repnz
lahf
cld
out
sbb
test
stos
pop
adc
(bad)
push
and
sub
out
pushf
jmp
sub
jge
mov
retf
call
jbe
jl
scas
imul
cwde
cmp
sub
sbb
cmp
or
add
cld
mov
cmc
sub
test
clc
(bad)
jge
pop
div
test
cli
sub
shl
add
imul
mov
sub
push
xchg
dec
xor
fwait
sub
test
sti
popf
aas
jg
pop
fs
mov
sar
movs
xor
sub
ss
movlhps
dec
into
into
(bad)
scas
jmp
jns
jle
jb
cmp
outs
es
test
jmp
fucomi
imul
xor
xchg
sbb
cmps
movs
loope
xchg
sub
out
div
in
mov
or
mov
xchg
push
xchg
mov
cdq
(bad)
outs
repz
xchg
inc
adc
lods
mov
xor
mov
jbe
xchg
xor
loop
jne
outs
jg
jp
xchg
pushf
or
lods
push
stos
in
xor
inc
mov
arpl
and
xor
cmp
mov
sub
mov
jb
test
jbe
xchg
sbb
dec
adc
pop
idiv
jo
stos
in
xor
cs
daa
iret
or
test
or
push
cli
or
fld
inc
xchg
push
sub
xor
ret
out
push
fwait
mov
fistp
dec
cmps
mov
or
sbb
or
add
retf
inc
inc
push
lahf
and
jbe
pop
and
push
scas
cmp
jecxz
jg
and
jmp
stos
dec
ficomp
mov
iret
imul
(bad)
call
mov
fcomi
sub
mov
xor
xchg
jb
or
sub
dec
push
lahf
arpl
push
stos
push
fwait
push
out
jnp
mov
pop
mov
(bad)
call
push
push
sti
data16
sahf
pop
retf
test
stos
data16
jbe
ret
adc
dec
sahf
cmp
mov
xor
xchg
mov
mov
data16
loop
mov
(bad)
imul
dec
(bad)
ja
lahf
mov
mov
push
cs
jbe
xchg
add
cmp
sub
sahf
or
push
dec
jmp
mov
lahf
add
push
push
jbe
push
into
pop
jne
lahf
cmp
outs
out
mov
push
cmp
mov
fistp
retf
or
ds
movs
jge
mov
xor
sub
sbb
outs
sti
aad
and
jb
and
jbe
or
js
cdq
mov
cmp
test
jno
scas
jno
ds
clc
mov
add
ret
lock
mov
outs
not
shr
lods
(bad)
movs
jmp
xchg
test
sar
sub
out
mov
and
jmp
inc
pop
pop
jns
xchg
xchg
dec
das
test
add
and
(bad)
(bad)
mov
jbe
xchg
or
cbw
mov
fld
out
adc
push
xor
mov
and
xchg
push
addr16
xchg
mov
into
push
sub
inc
lock
add
leave
xor
mov
jbe
(bad)
dec
xchg
push
mov
(bad)
push
loop
mov
fstp
jp
xchg
cmp
cmp
and
push
out
push
daa
retf
or
xor
test
shr
outs
stos
arpl
inc
(bad)
loopne
fwait
xor
addr16
ret
loopne
sbb
dec
dec
call
cmps
clc
repnz
loopne
cwde
push
(bad)
outs
sti
data16
push
jnp
cmp
popf
in
cmp
shl
stc
adc
adc
push
jg
mov
fmulp
jg
sub
test
push
pop
mov
lea
jmp
sbb
outs
push
out
mov
ds
outs
jecxz
repz
fisubr
mov
add
xchg
dec
mov
pop
fbstp
xchg
xchg
jecxz
pop
sti
jg
jg
outs
repnz
cmp
xchg
sti
adc
fpatan
es
push
mov
xchg
mov
jnp
div
xor
dec
cmp
xchg
or
jbe
scas
lods
mov
retf
add
xor
(bad)
jns
sbb
(bad)
cmp
or
cmp
and
adc
(bad)
(bad)
jbe
ret
sub
(bad)
aam
(bad)
sub
sbb
stc
fwait
add
pop
fild
(bad)
adc
or
push
adc
(bad)
jg
sub
dec
jle
ror
jmp
add
rcl
jg
fidiv
mov
jo
mov
sub
adc
jg
jmp
push
mov
nop
or
sub
jp
sbb
sub
push
jge
push
add
imul
ss
push
push
push
adc
retf
jecxz
std
shl
and
mov
sub
mov
mov
sti
(bad)
xchg
imul
mul
mov
xchg
jg
aam
repz
or
inc
xor
mov
aad
ss
fwait
pusha
not
mov
je
out
pop
es
and
push
jae
sti
fs
sahf
add
sbb
dec
cmp
shr
div
jmp
jmp
jne
xchg
pop
push
mov
add
pop
jg
shl
ins
(bad)
cs
je
jno
or
jle
cdq
sahf
test
stos
or
rol
xchg
jecxz
dec
test
(bad)
xchg
(bad)
sub
sbb
ins
repz
add
adc
fdivr
push
jae
or
out
add
iret
inc
scas
cli
es
mov
cmps
out
xor
ror
add
outs
out
neg
popf
(bad)
out
xchg
daa
mov
xor
and
inc
cvtps2pd
xlat
(bad)
shl
pop
mov
jmp
fistp
clc
jne
mov
xchg
jnp
imul
sbb
jg
jb
repz
inc
fsubr
xor
inc
stos
push
inc
data16
shr
rcr
call
dec
scas
cmp
or
ret
pop
jmp
fcmovne
retf
add
push
out
aam
jbe
xchg
xchg
aad
fwait
movs
mov
shr
div
repz
mov
outs
retf
scas
mov
mov
jns
movs
shl
cmp
push
push
adc
mov
(bad)
repnz
ret
fs
sbb
cmps
mov
outs
cmp
div
sbb
test
mov
adc
call
pop
pcmpgtw
ds
jno
and
adc
xor
retf
sub
fisubr
outs
push
xchg
add
cwde
(bad)
ret
iret
sbb
scas
test
fsubp
inc
rcl
data16
sub
pop
cmp
jg
sub
xor
arpl
dec
push
add
and
ds
xchg
fwait
lahf
iret
and
cmp
pop
(bad)
rcl
or
fsubrp
iret
lahf
xchg
retf
scas
pushf
push
int3
xchg
jbe
ret
add
aas
outs
inc
sbb
and
popf
push
inc
xor
inc
push
jg
add
xor
cs
push
(bad)
ret
mul
cs
jae
cli
fcmovnu
(bad)
in
mov
mov
cmps
mov
dec
mov
pop
push
or
rcl
(bad)
es
and
sbb
dec
fwait
adc
add
pop
(bad)
pop
out
mov
push
adc
jmp
fcmovne
retf
scas
push
stos
mov
xchg
and
mov
out
cmp
movs
sti
dec
es
adc
data16
mov
jnp
imul
dec
cs
dec
out
mul
inc
pop
push
add
fist
scas
mov
sahf
lods
xchg
xchg
jg
mov
call
outs
sbb
hlt
jg
push
sbb
shl
mov
jmp
sub
pushf
cs
out
mov
sbb
cmps
jecxz
sti
jmp
mov
sti
push
or
loop
and
mov
outs
mov
mov
neg
mov
sahf
scas
adc
inc
xor
or
dec
cmp
sub
ins
pop
sbb
inc
cmc
pushf
scas
lods
push
jb
inc
mov
add
push
push
cmc
pop
mov
sub
cli
adc
jbe
inc
pushf
push
xor
not
das
jl
jp
repz
cmps
push
dec
cmc
(bad)
aam
fwait
or
or
ss
mov
mov
imul
mov
retf
cmps
test
imul
cmp
inc
in
push
push
mov
arpl
sub
xor
repz
cmp
ds
inc
mul
and
ja
out
retf
add
clc
push
cmp
push
xchg
add
shr
sub
imul
scas
mov
loopne
inc
push
stos
push
fwait
enter
(bad)
das
or
mov
rol
js
js
scas
ins
sahf
ss
xor
stos
scas
ret
inc
jnp
mov
push
mov
push
in
or
test
repnz
(bad)
or
and
xchg
movs
clc
mov
mov
mov
mov
pop
out
push
scas
in
popa
lahf
mov
lds
das
sub
sub
sub
add
(bad)
and
push
and
adc
mov
cmps
push
jne
xchg
imul
push
out
cli
(bad)
jmp
lahf
mov
mov
xchg
xchg
sub
rcl
jmp
nop
mov
inc
rcl
mov
out
mov
adc
dec
and
cmp
outs
es
test
jmp
fisttp
out
or
push
cmps
movs
xor
add
sti
push
pusha
mov
lahf
and
jbe
pop
and
push
scas
cmp
out
jg
and
call
stos
dec
ficomp
mov
iret
imul
(bad)
call
and
push
dec
fcomi
adc
mov
xor
xchg
mov
or
sub
push
push
lahf
arpl
push
stos
mov
push
out
jnp
mov
pop
mov
(bad)
call
push
push
sti
mov
dec
sahf
pop
retf
test
stos
mov
xchg
test
add
outs
mov
xor
jae
mov
mov
data16
push
mov
mov
(bad)
lahf
mov
mov
push
cs
jbe
xchg
add
cmp
or
sbb
es
push
push
ret
cs
pop
jne
lahf
cmp
dec
out
mov
push
cmp
mov
(bad)
retf
or
ds
movs
jle
mov
xor
sub
sbb
outs
sti
aad
jg
fild
adc
pop
nop
rol
push
fimul
fisttp
lahf
inc
xchg
push
sub
xor
push
mov
sti
arpl
movs
loope
cmp
outs
mov
or
cmp
in
sahf
mov
and
test
xchg
xchg
jmp
stos
(bad)
hlt
stc
xchg
pop
aas
loopne
pop
xor
mov
cmp
xchg
sub
into
mov
mov
stc
add
sub
cmp
mul
not
dec
xchg
lds
es
push
mov
push
sbb
jmp
stos
bound
mov
not
dec
dec
jmp
push
iret
mov
and
xchg
pop
cmp
test
ret
pop
lahf
cmp
imul
hlt
or
inc
mov
(bad)
mov
xor
adc
fsub
sbb
scas
js
pushf
inc
inc
scas
adc
xlat
je
neg
retf
cmp
loope
movs
dec
pop
sti
inc
popa
out
popf
neg
inc
xchg
sub
loopne
call
mov
test
and
iretw
iret
inc
aad
outs
ror
cmps
push
lea
pop
jle
jne
outs
mov
adc
cmps
(bad)
adc
vrsqrtss
movs
in
xor
cmps
jo
dec
(bad)
(bad)
(bad)
or
fucom
es
sti
movs
mov
inc
mov
jo
fidivr
mov
pusha
inc
mov
ss
out
push
push
int
dec
fisub
(bad)
jle
js
xchg
xor
dec
into
xor
xlat
jmp
sahf
jg
ds
fwait
into
xchg
adc
mov
lods
xchg
jle
sub
mov
mov
xor
xchg
jmp
(bad)
push
out
cwde
cmp
xchg
mov
pusha
pop
shl
nop
in
and
aaa
int3
aad
arpl
inc
loop
das
lods
mov
outs
xor
add
or
sbb
inc
mov
mov
sti
sub
mov
cmps
pop
sub
loop
jge
adc
daa
retf
int
xchg
inc
xor
mov
add
mov
(bad)
cmp
inc
or
jmp
fistp
xor
mov
dec
dec
xchg
shr
pop
loope
cmp
sahf
or
sti
mov
xor
add
lds
jbe
xchg
sbb
or
div
sbb
test
mov
ds
sti
mov
jle
cmps
div
ds
aam
lods
jne
mov
mov
xchg
mov
or
inc
repz
scas
es
pop
retf
push
std
ins
fidiv
xchg
lock
imul
mov
push
(bad)
stc
adc
aam
stos
jo
jae
mov
icebp
arpl
mov
cmp
sub
add
pusha
jns
pop
fiadd
mov
dec
mov
mov
xchg
inc
cmps
sbb
clc
cmp
ds
inc
mul
sti
inc
ss
out
pop
ds
dec
(bad)
xchg
xchg
mov
jmp
jle
inc
(bad)
sti
loop
daa
div
lea
pusha
sbb
adc
fldcw
inc
mul
sti
inc
cmp
jae
fidiv
push
pop
aas
fwait
sahf
mov
push
imul
scas
cmp
sub
sbb
dec
movs
sti
inc
es
add
or
inc
mov
adc
add
div
loop
pop
push
add
fistp
retf
jbe
mov
mov
cmps
mov
call
into
sbb
out
mov
ss
jnp
inc
and
jbe
test
mov
mov
pop
pcmpgtw
ds
push
adc
xor
retf
popa
mov
aad
outs
push
xchg
dec
cmps
dec
mov
sbb
or
jmp
inc
popf
push
arpl
xor
xchg
mov
sub
xor
cs
ja
add
and
jae
sahf
fwait
lahf
iret
and
jg
ja
rcl
or
sti
data16
lahf
xchg
retf
scas
mov
sub
ret
adc
aas
outs
inc
sbb
cmp
fcom
jae
xor
inc
push
stos
inc
fwait
jp
outs
aas
xor
imul
mov
xor
loop
fisttp
mov
xchg
cwde
dec
out
mov
maxps
out
aad
retf
and
sbb
dec
fwait
push
mov
jg
add
sbb
aaa
out
test
pop
xchg
push
fisub
and
mov
fs
jbe
outs
or
loopne
xor
jge
imul
mov
xchg
inc
xchg
xchg
cmps
sti
mov
xchg
mov
div
sar
shr
imul
pop
jmp
sti
data16
xchg
jle
push
mov
mov
outs
sub
push
jne
bound
cmps
xchg
jne
ss
xor
pusha
fcomp
daa
dec
shl
cmp
cmp
xor
xchg
les
xor
add
and
push
repz
aad
in
and
fld
xchg
out
data16
in
test
cmp
mov
(bad)
repz
or
xchg
(bad)
pop
aaa
push
pop
retf
ret
mov
repz
mov
jnp
in
and
xchg
clc
loop
add
inc
push
mov
inc
xchg
add
dec
(bad)
ins
pop
mov
push
cmp
lock
inc
mov
mov
mov
xchg
cmp
cmp
jmp
imul
cli
mov
ss
mov
xor
pop
dec
mov
mov
int
cmp
pusha
push
mov
sbb
and
or
pop
cmp
dec
mov
mov
pop
stos
inc
call
inc
imul
mov
dec
mov
mov
pop
jmp
xchg
mov
jae
dec
xchg
aas
sar
dec
repz
ret
ins
push
mov
push
add
cmp
push
es
out
fdivp
mov
aad
(bad)
or
popa
mov
(bad)
movs
push
leave
fiadd
xor
call
int3
push
cmps
mov
test
jmp
add
sub
xor
out
cdq
pop
add
pop
ins
sbb
movs
sti
pop
dec
cmp
dec
mov
out
mov
push
jecxz
jbe
(bad)
imul
(bad)
jb
mov
jp
mov
mov
into
and
inc
not
fisttp
daa
not
pop
cmp
push
pop
mov
mov
sub
or
je
jnp
imul
mov
jmp
inc
add
mov
(bad)
mov
mov
jns
push
jecxz
mov
adc
je
mov
add
add
or
mov
add
pop
pusha
loop
out
retf
sub
add
pop
(bad)
fcmovne
mov
or
es
cmp
pop
xchg
mov
sub
pop
pop
test
mov
stos
inc
fwait
jle
repz
inc
cmps
push
data16
dec
xchg
mov
mov
getsec
and
fwait
mov
xor
mov
cmp
and
or
pop
add
fwait
cs
jb
inc
sbb
push
jg
xor
stos
shl
jmp
push
inc
mov
(bad)
or
outs
pop
push
adc
mov
push
mov
jns
ret
pop
mov
mov
stc
jmp
mov
nop
push
xchg
adc
jp
je
xlat
adc
sbb
mov
clc
cmp
jo
inc
mov
mov
cmps
jmp
je
lods
sub
out
fstp
or
jbe
cmp
fcmovnu
cmp
call
test
loopne
mov
push
loopne
xor
shr
aad
mov
repnz
xchg
les
imul
dec
push
cmp
aaa
imul
jnp
xchg
and
das
mov
mov
pop
mov
std
arpl
mov
into
div
out
les
mov
pop
mov
inc
retf
aaa
neg
add
jmp
(bad)
mov
xchg
(bad)
mov
push
cs
adc
lds
stc
jnp
out
and
and
add
test
adc
jmp
pop
cwde
out
push
xor
out
call
jmp
mov
xchg
lahf
cmps
scas
out
add
nop
jnp
popf
jnp
stc
stos
push
mov
mov
xor
xchg
imul
mov
jbe
mov
cmps
jbe
enter
mov
je
movlps
jle
(bad)
jl
dec
test
mov
cmps
pop
sub
mov
stos
adc
inc
retf
repnz
cmp
(bad)
xor
outs
mov
retf
shr
data16
push
ss
es
neg
xchg
push
pop
cmp
cmp
push
or
mov
enter
test
je
aas
sar
xor
and
test
cmps
popa
outs
jbe
adc
ja
xor
sub
les
inc
mov
pop
cs
inc
inc
mov
mov
mov
inc
movs
rol
mov
xchg
pop
or
cmp
shl
sub
mov
sub
sar
arpl
shl
pop
fst
jle
rcl
lock
adc
jle
cmc
arpl
sahf
arpl
movs
ficomp
push
mov
push
add
lods
js
mov
and
outs
cmp
xchg
push
arpl
cmp
stc
mov
(bad)
jmp
cmps
scas
fwait
mov
gs
dec
cmp
dec
enter
jge
int
add
sbb
fidiv
imul
enter
push
sbb
sti
out
pop
arpl
popa
shr
pop
or
cmps
mov
cmc
mov
lock
fldenv
sbb
dec
outs
push
push
(bad)
mov
jnp
cs
aas
(bad)
push
cmp
mov
stos
add
fld
push
push
test
fisttp
mov
mov
xor
cmp
push
mov
jge
test
ja
(bad)
xchg
loope
pop
jns
mov
fwait
mov
jae
xchg
sbb
ss
or
adc
and
mov
jbe
aam
in
xchg
cmp
out
jb
sbb
or
ds
dec
shr
sbb
les
leave
or
aad
out
and
and
clc
jnp
scas
shl
aam
sbb
(bad)
cmp
add
mov
data16
inc
imul
(bad)
jmp
stc
mov
mov
or
addr16
not
cmp
jmp
outs
stos
repnz
out
aas
(bad)
fld
inc
xor
scas
pop
cs
aas
push
xor
push
mov
mov
stos
mov
cli
cli
adc
and
mov
sub
xor
not
dec
jle
pop
cmp
push
add
data16
adc
xor
cld
mov
mov
mov
fwait
sub
aam
xchg
mov
adc
scas
out
lock
mov
adc
and
sub
cmp
int3
inc
xchg
push
jmp
pop
in
mov
push
sahf
mov
inc
push
adc
fistp
jmp
jbe
cmp
and
inc
out
inc
and
fwait
adc
ds
sbb
adc
ins
pop
cmps
or
sti
pop
mov
inc
mov
das
mov
stc
sbb
ret
cmp
or
mov
lds
jb
mov
xchg
ds
imul
repz
cmp
dec
out
mov
mov
cs
jbe
shr
shl
into
pop
or
(bad)
inc
sbb
push
into
es
cmc
retf
adc
adc
inc
or
shr
hlt
add
repnz
jns
(bad)
push
js
jmp
jb
arpl
xchg
xchg
icebp
pop
hlt
mov
ds
cmps
sbb
push
sbb
aad
(bad)
lahf
fistp
cdq
int3
jbe
inc
test
jmp
xchg
sbb
and
js
scas
inc
mov
and
sar
sub
comiss
mov
push
mov
adc
sbb
jae
sbb
ret
sub
mov
cmp
stc
inc
fdivr
(bad)
xchg
stos
xor
inc
xchg
comiss
repz
jge
stc
mov
mov
out
cmps
adc
leave
inc
test
push
scas
les
scas
push
jg
sbb
call
stos
dec
ficomp
je
movs
iret
imul
sub
cmp
or
and
adc
mov
xor
jns
dec
xor
jle
aam
les
lahf
arpl
push
stos
bound
push
mov
pop
mov
(bad)
call
push
push
sti
ds
sahf
pop
xor
pop
bts
jbe
ret
adc
inc
add
outs
mov
xor
dec
es
mov
data16
mov
xchg
gs
(bad)
lahf
mov
mov
push
cs
xchg
dec
aas
fwait
jbe
xchg
add
push
adc
cmp
dec
pop
sahf
hlt
lds
dec
jmp
aaa
ss
add
test
mov
push
into
movs
jne
lahf
cmp
jmp
mov
repnz
fucomi
retf
or
ds
movs
jle
mov
xor
and
sub
add
or
inc
call
ret
cdq
pop
nop
rol
push
fidiv
scas
neg
rol
out
push
fs
fistp
iret
in
inc
mov
outs
pop
out
add
(bad)
arpl
rcl
push
loop
das
bound
rcr
div
cmp
push
dec
mov
(bad)
bound
jb
mov
int
push
xchg
cmp
pop
iret
sar
sub
pop
jle
mov
(bad)
movs
push
fisttp
jnp
pop
push
xor
data16
push
(bad)
cs
mov
or
sahf
sbb
aaa
mov
xor
sub
gs
test
mov
(bad)
cmp
ret
jne
ins
inc
push
inc
inc
repnz
jno
mov
daa
jmp
dec
cmp
cmp
cmps
xor
xchg
sbb
fnstenv
movs
jno
add
dec
loope
jle
sar
xor
cmp
jp
cwde
loop
std
mov
out
test
daa
nop
lds
clc
adc
inc
dec
cwde
loop
gs
nop
test
mov
cmps
pop
mov
add
fincstp
mov
not
mov
popf
pop
push
retf
dec
cmp
xchg
add
push
add
sub
and
xchg
add
scas
xchg
sub
in
daa
sbb
test
lods
call
jl
xchg
imul
(bad)
out
loopne
cwde
lods
dec
lds
xor
add
ffree
enter
dec
in
nop
jge
inc
lock
jmp
and
push
mov
xbegin
popa
xlat
dec
xor
retf
dec
cmp
enter
cs
cli
xor
and
mov
or
cmp
imul
hlt
xlat
imul
out
(bad)
adc
cmp
sub
cmp
dec
out
pop
(bad)
daa
sbb
add
jb
add
inc
out
mov
pop
rcl
and
jg
pop
jno
push
adc
push
out
popf
jae
enter
xchg
loop
fmul
mov
in
mov
fcmovne
mov
and
pusha
retf
push
scas
test
je
je
imul
jg
cmp
(bad)
jmp
clc
inc
jmp
pcmpgtd
jmp
out
data16
mov
(bad)
mov
aas
stos
nop
aad
ret
mov
push
ss
jge
repnz
xor
cmp
imul
xor
std
xor
push
out
js
inc
mov
jnp
fwait
cdq
clc
iret
outs
sub
mov
cs
fnsave
jmp
adc
push
mov
movs
jbe
sbb
je
pop
mov
pop
(bad)
test
sar
push
rcr
add
push
push
cdq
call
mov
pop
mov
out
repnz
lahf
call
mov
mov
mov
dec
popf
shl
div
shr
push
scas
fldenv
and
inc
xchg
pop
pushw
xor
xchg
jp
push
pop
ret
adc
cmp
dec
imul
and
adc
std
out
inc
xor
mov
cli
dec
xsaves
not
(bad)
scas
jo
mov
stos
jmp
or
xchg
aas
jbe
cmc
pop
call
fistp
mov
faddp
inc
inc
sbb
repz
jns
es
mov
push
aam
nop
sti
cmps
push
lods
add
arpl
cmp
ror
mov
push
jnp
loop
rcl
mov
ret
outs
es
jge
push
jbe
inc
and
xor
mov
std
xor
jle
in
ins
mov
scas
sbb
jmp
jne
and
mov
mov
lock
jecxz
mov
dec
sti
xlat
cmps
out
jge
pop
or
mov
xor
cwde
stos
cdq
mov
sahf
or
push
cmps
adc
mov
test
sbb
push
xchg
sti
push
cmp
arpl
pop
mov
rol
mov
out
jb
pop
push
cmp
in
fnsave
inc
mov
das
pop
movs
xor
or
sub
dec
ss
add
pusha
jne
daa
inc
js
test
in
adc
dec
ret
push
pop
dec
data16
inc
ins
push
jnp
inc
cmovg
jmp
inc
inc
inc
fsubrp
int
iret
jp
imul
jg
fisttp
lods
jbe
(bad)
mov
inc
addr16
dec
mov
sub
int3
pop
dec
mov
neg
js
cmc
mov
xchg
sahf
fbstp
imul
mov
cmp
pop
push
or
fistp
rcr
imul
js
(bad)
jns
aam
or
out
jo
shl
sub
xchg
inc
rol
xor
movs
cmp
cmp
sbb
xor
mov
fisttp
xchg
js
aam
pop
rcr
out
add
scas
jno
jb
pop
mov
enter
imul
mov
mov
leave
jne
jnp
push
scas
ror
xchg
loope
add
push
sbb
stc
fst
movs
jb
mov
xor
(bad)
aas
jmp
cmps
mov
and
test
jmp
in
sar
jae
inc
dec
cwde
cmc
data16
arpl
add
test
mov
push
sbb
and
pop
retf
adc
mov
sbb
jge
and
cmp
aam
pop
push
or
rcl
es
and
sbb
pop
fwait
(bad)
mov
test
add
movs
(bad)
sub
repnz
push
adc
mov
push
stos
mov
imul
inc
in
dec
movs
sti
(bad)
shl
inc
ss
mov
jae
mov
jnp
xchg
dec
pop
adc
mov
mov
loop
pop
push
add
fld
out
lds
xchg
dec
pop
mov
call
jp
xchg
out
mov
ss
inc
push
test
arpl
pop
pcmpgtw
ds
xor
stc
adc
xor
fnstsw
aad
outs
inc
xchg
icebp
cmps
adc
sbb
or
jmp
inc
and
cdq
jb
sub
pop
xor
not
bound
and
iret
stos
inc
fs
iret
and
ret
mov
cmp
xchg
mov
repz
or
lahf
xchg
retf
scas
adc
stos
mov
fcom
dec
mov
aas
outs
inc
sbb
xor
ins
push
and
xor
inc
push
outs
stos
icebp
fwait
jbe
outs
aas
xor
ffree
cmp
inc
push
inc
push
push
fdivr
lock
inc
xor
mov
mov
jl
lods
push
xor
sub
pop
arpl
iret
mov
xchg
xchg
into
push
sti
mov
mov
xor
sub
call
sahf
inc
ret
push
mov
add
and
data16
outs
imul
enter
cmps
jbe
daa
call
push
or
jle
or
not
mov
add
push
in
std
out
(bad)
cmp
xor
sub
mov
lahf
es
xor
xlat
fisubr
jno
jnp
xchg
jecxz
mov
outs
mov
push
or
and
stos
ss
mov
mov
in
leave
retf
sub
pop
cmp
loopne
fcomi
retf
push
xor
xchg
sbb
es
cmps
lock
xchg
xchg
jb
push
jecxz
push
lock
jmp
mov
outs
mov
fs
add
mov
pop
inc
add
adc
outs
retf
inc
outs
imul
jbe
repz
xchg
icebp
lea
stos
out
pop
out
xchg
gs
mov
xchg
push
daa
mov
bound
jbe
jecxz
out
cmp
es
dec
retf
inc
aad
cmps
icebp
addr16
sub
push
dec
ret
jg
js
sti
mov
sahf
mov
ds
inc
push
mul
test
adc
dec
mov
mov
add
push
pop
out
jns
popf
push
inc
bnd
jecxz
push
push
mov
repnz
add
repz
popf
(bad)
out
xchg
daa
mov
data16
jbe
(bad)
clc
xchg
add
cmp
or
push
aaa
fcmovnu
(bad)
int
imul
outs
xchg
shl
repz
sbb
pop
hlt
out
pop
pop
scas
xor
stos
and
sahf
add
jnp
pushf
mov
movs
repnz
cmp
outs
ins
pop
enter
dec
jmp
into
ss
xchg
loop
sti
and
xchg
sub
cwde
repz
cmp
pop
je
jno
or
dec
(bad)
push
lahf
ss
cs
(bad)
into
xchg
pop
(bad)
outs
or
fisttp
mov
repnz
pop
(bad)
es
pusha
clc
add
jbe
xchg
jnp
mov
xchg
shufps
sub
sbb
adc
push
imul
mov
jnp
add
cwde
xchg
sub
push
jge
push
xchg
add
jae
outs
lock
push
call
int3
pop
dec
mov
neg
sbb
mov
push
(bad)
mov
(bad)
sub
add
aam
push
aas
inc
pop
xchg
pop
shl
and
and
sbb
pop
fwait
or
add
inc
(bad)
mov
repnz
push
adc
jmp
fcmovnu
xor
push
stos
mov
imul
mov
pop
dec
movs
sti
(bad)
aad
cmps
ss
mov
jae
mov
jnp
xchg
dec
pop
adc
push
out
or
inc
pop
push
add
fisttp
cmp
lds
xchg
(bad)
pop
mov
call
popf
sbb
hlt
out
mov
ss
jmp
inc
and
jbe
mov
movs
pop
pcmpgtw
ds
stc
adc
xor
retf
cmp
ficom
aad
outs
inc
xchg
adc
cwde
(bad)
ret
fistp
(bad)
or
add
scas
test
fdivp
inc
ret
cdq
jb
sub
pop
push
mov
jg
sub
and
jmp
and
cs
(bad)
fs
iret
and
sub
inc
cmp
xchg
mov
repz
jp
iret
lahf
xchg
retf
scas
adc
pop
mov
fcom
dec
fcmovb
aas
outs
inc
sbb
aaa
push
lea
mov
xor
inc
push
push
adc
xor
ds
iret
sub
mov
sti
arpl
cmp
retf
adc
cmps
mov
loope
mov
cmps
(bad)
dec
dec
scas
jg
call
clc
add
inc
mov
mov
mov
xor
sub
dec
(bad)
sub
inc
sti
shr
sub
adc
in
fs
(bad)
inc
jecxz
add
(bad)
aas
imul
mov
test
scas
jmp
addr16
mov
pop
jp
push
mov
sub
dec
inc
and
pop
dec
mov
cld
sub
add
xchg
xchg
push
xchg
adc
jecxz
add
and
fiadd
adc
je
jbe
push
les
pop
sub
repnz
inc
ret
jne
ss
(bad)
jmp
out
cwde
and
sahf
xchg
or
dec
cmp
(bad)
out
mov
data16
(bad)
adc
outs
stos
fwait
enter
mov
or
shr
inc
sub
in
mov
add
out
(bad)
inc
inc
repnz
jae
mov
imul
mov
mov
jge
inc
pop
push
scas
cmps
sahf
fisub
and
xchg
push
cli
xchg
push
outs
jne
(bad)
pop
jle
mov
or
stos
push
adc
or
mov
hlt
xchg
mov
(bad)
imul
out
scas
mov
lods
add
mov
addr16
mov
mov
aas
lahf
mov
sub
ret
mov
xlat
stos
pop
pop
movs
aam
clc
adc
dec
mov
loop
xchg
push
pop
mov
cmp
xchg
sub
xchg
mov
(bad)
jne
mov
or
adc
mov
push
jns
sbb
cmp
cmps
sbb
push
and
mov
test
movs
mov
pop
not
out
sbb
cld
push
adc
(bad)
lahf
ss
push
push
push
mov
ret
es
leave
sbb
out
mov
addr16
add
mov
mov
sub
sar
(bad)
mul
cmps
jle
das
fbld
sub
test
(bad)
mov
xchg
jae
jnp
fdiv
pop
xchg
xor
pop
xchg
mov
lods
jmp
adc
mov
mov
cmp
push
xchg
iret
cmp
xor
jmp
retf
std
mov
data16
xor
jge
imul
movnti
test
std
push
pop
add
sbb
(bad)
cdq
loop
jo
pusha
push
jge
cmp
std
add
pop
(bad)
add
aad
fstp
je
xchg
stos
cmps
movs
repnz
or
in
sar
push
out
(bad)
std
xor
mov
enter
sub
sbb
in
dec
mov
jnp
sbb
scas
and
cmp
mov
jno
gs
outs
je
push
jecxz
mov
js
repnz
jle
in
rcl
inc
int3
clc
jg
std
movs
int
call
repnz
fwait
rcl
(bad)
mov
leave
xor
mov
jge
repz
ret
push
sub
sti
cmp
out
lods
sbb
inc
xor
arpl
push
xchg
cmp
and
cwde
cwde
or
fnsave
adc
jbe
jns
xchg
mov
fcom
cmp
(bad)
add
sbb
pusha
stos
inc
clc
mov
xor
cdq
pop
arpl
idiv
pop
pop
in
mov
adc
dec
mov
stc
repz
dec
push
into
mov
mov
pusha
stos
and
cmps
or
and
pop
enter
scas
push
pop
add
fstp
movs
retf
mov
shufps
pop
cmp
adc
push
push
repnz
and
fwait
add
mov
outs
clc
jbe
mov
push
push
mov
sub
sahf
mov
push
div
es
and
add
mov
xchg
xchg
jnp
outs
mov
mov
inc
fist
or
jbe
scas
push
into
out
push
mov
ins
and
add
jnp
(bad)
mov
cmp
add
adc
es
shl
fistp
xchg
dec
out
lods
loop
ficomp
push
es
jmp
dec
test
push
adc
daa
xor
lods
jmp
fbstp
cdq
jge
xor
jle
mov
push
nop
cs
es
outs
lds
stc
jb
adc
push
inc
fist
adc
sub
dec
mov
xchg
arpl
xor
test
push
daa
and
jle
xchg
sub
imul
ret
cs
(bad)
aad
pushf
lea
es
aam
jnp
sbb
pop
mov
lods
sub
sub
pop
mov
ss
inc
data16
call
mov
cmp
push
outs
mov
jae
into
daa
cli
ds
inc
data16
mov
shr
ror
dec
outs
cmp
in
dec
push
lods
push
jmp
sahf
push
dec
retf
scas
mov
(bad)
sbb
mov
cmp
or
sbb
push
in
fucom
cdq
outs
jnp
ja
shr
mov
push
into
aas
xchg
aam
sbb
xchg
pop
jmp
mov
retf
dec
mov
and
out
mul
js
inc
jge
pop
jno
scas
fldcw
add
push
xchg
jbe
aad
xchg
add
push
(bad)
sub
in
or
jl
push
and
fisubr
int3
(bad)
sub
(bad)
repz
sub
outs
xchg
sar
add
(bad)
lods
mov
xor
and
xor
mov
aas
ds
sti
(bad)
sub
xchg
mov
sub
push
outs
mov
test
mov
sub
jb
push
jmp
jmp
lahf
jae
push
dec
test
dec
ret
mov
xor
dec
ror
jnp
out
hlt
dec
jmp
inc
(bad)
test
mov
aas
shr
pop
(bad)
sbb
(bad)
xchg
test
push
mov
push
pop
test
mov
loop
xchg
scas
ins
stos
jae
cmc
dec
mov
cmp
dec
(bad)
dec
inc
cmp
and
push
xor
jmp
xor
push
test
xchg
xor
jmp
mov
bound
outs
imul
xchg
cmp
retfw
dec
inc
pop
out
in
div
loopne
fld
cwde
cmp
and
or
pop
jo
pusha
ss
mov
aaa
data16
xor
pop
lahf
shr
pop
dec
dec
push
imul
stos
push
jge
inc
mov
sbb
mov
pop
sahf
fdiv
movs
dec
(bad)
cmp
outs
mov
or
mov
jb
mov
mov
fcom
push
mov
mov
add
data16
and
inc
push
cmp
add
imul
push
cmp
mov
mov
into
jb
add
sub
call
pop
adc
pop
jno
inc
dec
sti
(bad)
fld
adc
frstor
fs
mov
das
xor
outs
out
into
jg
aam
scas
push
(bad)
int
test
push
ror
in
cmp
aam
dec
out
adc
jae
push
fwait
mov
mov
jbe
scas
idiv
sbb
imul
out
mov
xor
push
aaa
mov
scas
jmp
call
ret
mov
push
nop
jge
push
cli
inc
test
mov
mov
jns
push
int3
or
xor
test
sbb
jge
iret
sti
mov
(bad)
iret
stos
sbb
xchg
mov
cmps
xchg
xchg
jecxz
inc
sub
scas
scas
fimul
into
nop
cdq
mov
xchg
pop
movs
dec
dec
cmp
mov
dec
mov
jmp
retf
mov
addr16
out
or
outs
mov
xor
sti
adc
sahf
mov
inc
xchg
icebp
mov
call
dec
mov
jnp
in
test
mov
sub
mov
repz
aas
(bad)
cmps
push
mov
ficom
sbb
dec
mov
and
sbb
ds
adc
sbb
pavgw
mov
dec
mov
call
and
mov
sar
pop
scas
loope
dec
stos
sub
repz
ror
mov
push
dec
movs
ds
mov
div
(bad)
mov
ss
inc
mov
add
mov
(bad)
mov
scas
push
out
arpl
jle
sub
es
adc
jbe
push
je
adc
pop
dec
dec
dec
xchg
les
jbe
jo
sahf
arpl
mov
frstor
test
imul
sbb
int3
in
mov
sub
sahf
leave
cmp
xchg
repnz
dec
add
mov
pop
mov
adc
jg
and
mov
push
cmps
adc
lahf
or
ror
mov
imul
pop
js
out
fcomip
inc
lods
js
adc
mov
mov
add
inc
mov
sahf
add
mov
je
xchg
retf
imul
rcr
fdiv
arpl
cmp
push
out
mov
or
jg
push
cmp
push
sub
movhps
pop
dec
cmps
fucomip
jae
lahf
sbb
sbb
mov
shl
jno
push
mov
pop
adc
into
leave
xor
mov
and
jae
out
adc
mov
loopne
add
push
arpl
and
shl
sbb
dec
sub
or
mov
sahf
(bad)
xor
mov
mov
add
mov
adc
cs
repz
(bad)
inc
add
mov
bound
mov
push
and
sub
inc
mov
test
es
ins
jmp
scas
cdq
(bad)
mov
into
jecxz
out
push
mov
dec
jle
mul
mov
cmps
cmp
dec
lods
sahf
leave
xchg
adc
xor
imul
jle
sub
add
mov
inc
or
je
push
imul
dec
test
sub
repnz
jle
pop
jne
mov
sahf
mov
jb
jmp
ds
push
pop
pop
inc
mov
jne
mov
sub
xchg
aas
xchg
lahf
into
pop
test
(bad)
inc
sbb
push
into
es
cmc
retf
scas
call
sahf
jnp
test
xor
mov
out
jecxz
inc
adc
(bad)
(bad)
call
dec
jbe
xchg
sub
les
jb
arpl
inc
lahf
retf
inc
in
push
data16
pop
push
cmp
loop
out
push
cmp
jecxz
das
push
pusha
bound
mov
inc
into
data16
loopne
pop
js
cmp
sub
jge
inc
sti
dec
cli
or
jae
inc
in
dec
push
in
mov
fcom
repnz
test
inc
cld
fst
iret
mov
mov
iret
or
dec
or
clc
(bad)
jl
in
push
add
ss
add
adc
ds
imul
dec
rcl
sbb
sbb
or
fld
or
push
xchg
sbb
sbb
add
(bad)
inc
fwait
loop
fwait
and
aam
mov
dec
cmc
or
sub
out
test
dec
jmp
dec
ss
add
test
mov
movs
jne
lahf
cmp
xor
mov
enter
es
or
ds
movs
inc
das
mov
xor
sbb
sub
sbb
outs
add
xor
(bad)
mov
adc
cdq
pop
test
imul
mov
fisttp
lahf
inc
xchg
jmp
retf
loop
push
push
fs
fistp
retf
cmps
mov
aaa
jb
sbb
or
cmp
inc
call
and
mov
and
push
scas
les
fwait
push
jg
sbb
aam
inc
mov
push
je
cdq
iret
imul
sub
add
sti
push
dec
and
sub
mov
xor
jns
jne
cmps
pop
out
dec
or
aam
jmp
lahf
arpl
push
stos
push
fwait
push
out
test
call
lahf
(bad)
call
push
push
sti
(bad)
dec
sahf
pop
xor
pop
bts
jbe
ret
adc
inc
add
outs
mov
xor
(bad)
es
mov
data16
pop
mov
mov
(bad)
lahf
mov
mov
imul
xchg
adc
sahf
mov
(bad)
mov
dec
cmp
sti
mov
data16
xor
lahf
push
and
jp
imul
inc
push
sub
outs
mov
jmp
mov
dec
or
repnz
push
cmp
cmps
mov
mov
ficomp
fwait
mov
xchg
push
out
adc
jnp
pop
cmps
push
jmp
add
(bad)
std
and
ja
mov
cmp
in
or
push
ror
fwait
aad
xchg
scas
call
sbb
jns
push
outs
neg
ret
push
data16
outs
xchg
mov
or
push
(bad)
into
jmp
push
push
jmp
std
or
jnp
nop
pop
pop
mov
scas
les
ins
xor
adc
pop
in
inc
scas
mul
(bad)
or
xchg
mov
mov
dec
xchg
ins
les
push
pushf
or
mov
mov
scas
call
mov
cmp
jecxz
out
(bad)
or
hlt
inc
jnp
lods
inc
sub
and
fwait
sahf
or
ror
dec
mov
jne
les
mov
and
retf
mov
ins
and
xchg
shl
pop
movs
push
ret
call
inc
neg
lods
loope
arpl
movs
mov
sub
setb
push
push
inc
sbb
xchg
cmp
pusha
inc
ret
inc
fadd
xchg
stos
data16
inc
fisub
jp
cmps
movs
mov
aam
or
pusha
pusha
fld
push
mov
scas
in
fwait
mov
mov
fwait
lds
(bad)
sub
je
or
call
xchg
jge
add
mov
(bad)
arpl
dec
dec
sub
aam
or
add
add
ja
daa
ret
mov
sub
jecxz
push
mov
repnz
fld
(bad)
pop
mov
mov
ja
(bad)
jg
shl
fs
aas
or
jecxz
push
push
sti
popf
mov
inc
jb
test
add
cs
mov
shr
mov
cmp
inc
int
aad
lods
mov
(bad)
retf
stos
out
sbb
jae
sti
pop
jae
inc
daa
add
jae
inc
je
inc
addr16
jbe
ret
sbb
sbb
fcomi
adc
push
jnp
sbb
scas
adc
pop
fcomip
xchg
lahf
jecxz
push
dec
xor
pop
ds
push
out
iret
inc
scas
cli
arpl
ss
or
push
push
in
call
mov
mov
out
ss
sti
push
mov
inc
stc
push
push
arpl
inc
xchg
neg
or
clc
(bad)
jge
pop
div
test
cli
sub
push
fadd
and
cmps
mov
xchg
ds
stos
(bad)
popa
dec
fcmovne
pushf
inc
clc
xchg
push
arpl
xchg
mov
xor
rol
hlt
push
sti
push
sub
fidiv
scas
mov
mov
cmp
fmul
ins
(bad)
push
fiadd
dec
aaa
lahf
and
ret
inc
aaa
jae
loope
test
imul
dec
dec
(bad)
pop
sub
inc
or
scas
iret
mov
inc
sub
test
je
jnp
xchg
sbb
or
mov
mov
fimul
les
adc
fwait
scas
mov
lock
mov
jb
mov
sub
(bad)
ret
inc
call
ret
cwde
pop
test
xchg
imul
mov
in
sub
mov
call
retf
cs
mov
fistp
retf
cmps
mov
or
sbb
adc
inc
das
push
lahf
and
mov
and
push
scas
lds
pop
push
jg
sbb
(bad)
xchg
inc
mov
push
jne
fwait
iret
imul
sub
pop
inc
test
sti
push
dec
and
push
adc
xor
js
ja
cmps
pop
add
jle
aad
stc
scas
or
and
lahf
arpl
push
stos
mov
push
mov
pop
mov
(bad)
call
push
push
sti
retf
sahf
pop
xor
push
jbe
ret
adc
inc
add
outs
mov
xor
aaa
es
mov
data16
xchg
mov
mov
(bad)
lahf
mov
mov
push
cs
xchg
dec
aas
fwait
jbe
xchg
add
push
adc
cmp
dec
pop
sahf
cmc
lds
ss
add
test
add
mov
push
into
movs
jne
lahf
cmp
(bad)
out
mov
clc
cmp
mov
fild
and
jbe
repnz
imul
sar
dec
mul
push
mov
leave
retf
pop
in
inc
xchg
push
sahf
add
pop
loopne
pop
repz
mov
jmp
data16
jmp
(bad)
jbe
jbe
mov
out
fucomi
in
and
retf
fild
dec
call
xchg
(bad)
push
inc
fwait
sahf
(bad)
(bad)
jle
outs
jecxz
test
inc
adc
sbb
or
fucom
data16
and
jnp
cmp
ret
cmp
pop
cmps
or
jmp
push
push
and
imul
pop
scas
pop
nop
jbe
adc
retf
stos
test
mov
clc
push
cmp
(bad)
xchg
(bad)
jmp
fstp
mov
lock
test
mov
pop
aam
out
or
fcmovne
xor
push
test
cdq
fwait
mov
(bad)
addr16
fcomp
dec
cmp
jne
retf
adc
pop
jo
adc
fisttp
sub
cmp
pop
inc
jmp
cmp
push
cdq
adc
xchg
cmp
adc
jbe
jl
js
cmps
fnstenv
inc
adc
je
adc
mov
mov
mov
push
sti
(bad)
jmp
scas
ss
sub
inc
out
or
jae
or
pop
dec
mov
dec
(bad)
js
sbb
adc
jmp
xor
nop
out
ins
outs
jae
or
pop
movs
pop
xchg
xor
mov
push
jo
add
push
mov
inc
stos
xor
add
mov
scas
les
ins
stos
jmp
mov
data16
jbe
in
adc
xchg
int3
movs
lds
ins
data16
repz
mov
arpl
inc
std
fistp
rol
push
jb
cmp
xchg
ds
adc
mov
(bad)
repnz
ret
shl
xchg
mov
(bad)
daa
push
sub
sbb
jmp
sbb
jb
mov
mov
imul
mov
(bad)
fcmovnbe
cmps
out
or
stc
cli
mov
(bad)
push
in
inc
addr16
ds
sub
int3
pop
dec
mov
neg
sbb
mov
push
(bad)
mov
xor
jnp
add
cwde
xchg
sub
push
jge
push
xchg
add
jae
outs
mov
fwait
xor
cmps
movs
mov
ds
sub
inc
pop
push
jmp
mov
mov
add
or
pop
jecxz
lahf
jl
outs
out
sahf
or
push
mov
push
xor
stos
or
jbe
pop
and
or
pop
inc
and
jge
imul
popf
mov
mov
retf
adc
in
data16
out
jnp
imul
pop
shr
mov
sti
cli
scas
lods
sahf
jo
mov
or
push
test
dec
nop
(bad)
(bad)
ret
out
aas
hlt
(bad)
out
fbld
inc
inc
test
arpl
jnp
imul
pop
pcmpgtw
ds
out
not
xor
mov
aad
outs
xor
mov
scas
sbb
or
jmp
inc
jl
aas
cdq
jb
sub
pop
jbe
das
jg
sub
pop
test
jmp
add
and
mov
lahf
iret
and
sahf
mov
cmp
xchg
mov
repz
ret
sti
push
adc
lahf
xchg
retf
scas
std
push
outs
retfw
mov
fcom
dec
push
les
outs
inc
sbb
inc
push
aas
push
(bad)
fnstenv
jb
inc
push
push
stos
mov
aas
xor
mov
ret
sub
mov
sti
aad
sbb
(bad)
in
mov
sti
jns
ror
cmps
mov
dec
add
data16
pop
push
or
mov
sub
xlat
leave
and
sbb
das
fwait
mov
push
test
add
cli
(bad)
daa
sbb
mov
push
adc
out
pop
xor
push
stos
mov
jbe
xchg
mov
cmp
sub
in
dec
movs
sti
(bad)
lods
sbb
stos
mov
jae
mov
cmp
jl
xchg
out
or
inc
pop
push
add
mov
pop
inc
add
xchg
pop
jmp
mov
(bad)
pop
xlat
sub
sbb
sbb
lea
mov
cmp
xchg
test
cs
cmp
test
mov
mov
ja
imul
loop
imul
dec
sbb
mov
cmps
mov
jo
push
es
leave
mov
xchg
sub
add
jnp
pop
pop
pop
(bad)
scas
xor
add
push
popa
scas
fstp
push
inc
inc
mov
ja
jle
outs
sar
ror
push
mov
add
movs
es
rol
test
jne
xchg
data16
dec
cmp
cs
mov
cli
xchg
adc
fldenv
fidiv
mov
xor
imul
retf
(bad)
cli
jno
ret
arpl
inc
dec
push
inc
addr16
jb
jns
push
xchg
sub
rcl
outs
mov
add
pop
cmp
push
stos
jae
xor
dec
sub
rol
out
mov
lea
shl
leave
iret
scas
inc
fist
cld
dec
xchg
ds
jle
mov
sbb
mov
cmps
mov
jae
adc
inc
scas
es
mov
out
aas
and
movs
xor
outs
sbb
retf
(bad)
into
lea
je
jp
(bad)
test
add
pop
dec
pushf
idiv
xchg
mov
jno
jmp
push
ss
mov
xor
xchg
jp
imul
cmps
jmp
sub
inc
retf
call
cmps
xor
push
cmps
(bad)
cmps
sbb
or
lods
mov
adc
adc
in
sahf
or
ss
xchg
les
popa
stc
call
adc
xchg
aaa
(bad)
adc
push
sub
mov
imul
pop
cmp
sbb
ret
out
and
inc
dec
retf
test
fucom
adc
xchg
pop
mov
pop
cmp
push
dec
fidivr
arpl
mov
popf
push
dec
sub
sbb
mov
cmps
hlt
adc
enter
test
je
jnp
xchg
int3
mov
dec
(bad)
cmp
add
ficomp
mov
(bad)
jbe
jns
shr
xchg
dec
pop
pop
not
sti
jmp
retf
inc
fistp
jl
icebp
jbe
mov
int3
pop
pop
push
push
push
(bad)
jo
outs
jge
(bad)
mov
test
stos
or
push
xchg
adc
mov
shr
fdiv
pop
mov
fimul
jnp
adc
ja
js
mov
cmp
dec
jle
sub
push
jmp
imul
cmps
adc
enter
imul
sub
sbb
cmc
mov
das
ss
sub
(bad)
out
(bad)
xchg
sbb
dec
adc
pop
cld
mov
jo
test
and
retf
push
inc
or
arpl
sbb
xor
cmp
mov
sub
inc
jmp
fiadd
retf
in
jnp
cmp
sbb
ret
cmp
dec
adc
cs
bound
addr16
rcl
xor
xchg
push
pop
imul
cs
pop
out
jno
jmp
mov
mov
fs
sub
mov
pop
inc
out
mov
out
es
in
adc
outs
sub
in
pusha
sub
sbb
pop
mov
scas
out
imul
push
test
das
or
mov
ins
push
out
jne
jmp
or
fwait
push
out
test
call
jecxz
call
push
push
sti
mov
dec
sahf
pop
xor
popw
jbe
ret
adc
jns
mov
inc
cmp
mov
xor
fwait
es
mov
data16
(bad)
mov
test
dec
(bad)
(bad)
lahf
mov
mov
push
cs
xchg
dec
aas
fwait
jbe
xchg
add
push
adc
cmp
cmc
lds
dec
jmp
out
lahf
add
test
xchg
jbe
cmp
cs
movs
jne
lahf
cmp
xor
mov
hlt
mov
fcmovne
retf
or
ds
movs
jns
mov
xor
and
sbb
outs
add
ss
inc
call
ret
cwde
pop
xchg
rol
push
fidiv
out
neg
ret
retf
xchg
mov
mov
fistp
scas
cmps
mov
xor
sbb
adc
inc
dec
push
lahf
and
mov
and
push
scas
lds
mov
sbb
xchg
inc
mov
push
jne
popf
iret
imul
sub
add
or
and
nop
inc
data16
iret
or
pop
out
(bad)
xor
jg
sbb
jecxz
sti
pop
adc
sahf
ficom
out
jmp
jbe
or
shl
nop
imul
inc
sbb
or
push
and
push
ss
fucomp
sahf
jbe
ds
movs
adc
in
out
or
bound
and
ret
cmp
out
ja
inc
aas
imul
in
dec
(bad)
cmc
inc
out
and
(bad)
adc
inc
aas
ja
jbe
retf
outs
xchg
outs
sub
xor
cmp
pop
lods
add
(bad)
scas
push
in
ds
lahf
add
or
dec
rcl
or
dec
pop
push
out
mov
retf
adc
jns
xchg
fwait
jno
mov
(bad)
imul
mov
or
mov
mov
sbb
sbb
call
movs
jno
mov
xchg
fistp
dec
push
xchg
test
popf
cs
dec
mov
pop
lock
aas
mov
lds
push
jmp
mov
lock
mov
xor
or
ds
ror
inc
adc
or
inc
fisub
xor
es
mov
bound
hlt
pop
xor
pop
es
popf
push
inc
bnd
jecxz
push
push
jnp
mov
pop
add
dec
sahf
and
ss
pop
xor
test
xchg
inc
cmp
add
pop
and
push
mov
mov
pop
jge
out
gs
sahf
fadd
jnp
out
(bad)
cmps
dec
dec
les
or
jmp
xor
ss
arpl
pop
mov
sub
xchg
div
adc
inc
retf
push
out
adc
jbe
jp
xchg
imul
xchg
out
sbb
out
scas
pop
mov
mov
int
arpl
pop
fwait
mul
repz
fld
das
or
push
les
inc
movs
scas
lahf
leave
popf
inc
clc
xchg
push
arpl
fdivr
pop
inc
and
jne
aam
sbb
adc
lahf
or
add
inc
xor
xchg
mov
sub
shr
or
scas
iret
mov
adc
fld
push
jnp
imul
repz
ds
iret
scas
inc
scas
mov
movs
jb
(bad)
xchg
stos
xor
inc
xchg
pop
comiss
repz
jge
stc
mov
mov
stos
aas
mov
mov
mov
cmp
ret
out
test
and
inc
(bad)
xchg
stos
xor
mov
xchg
jg
xor
dec
jg
outs
test
scas
sbb
sti
push
sub
mov
int
push
cmp
dec
xchg
shl
jecxz
mov
xlat
out
(bad)
outs
and
jo
out
call
mov
cmp
jecxz
mov
mov
aad
jecxz
cmp
pusha
bound
xchg
inc
into
data16
imul
cmps
add
dec
not
push
mov
fmulp
xchg
mov
push
iret
inc
lock
sub
mov
scas
lds
xor
cmps
dec
or
push
sub
xor
xchg
mov
fistp
push
cmps
mov
or
sbb
adc
inc
sti
push
lahf
and
mov
and
push
scas
lds
arpl
jg
sbb
jmp
stos
dec
ficomp
jne
movs
iret
imul
sub
push
inc
test
sti
push
dec
and
push
jg
mov
jbe
cmps
pop
dec
or
aad
cli
scas
or
or
lahf
arpl
push
stos
adc
push
mov
pop
mov
(bad)
call
push
push
sti
(bad)
jmp
sahf
pop
xor
popw
jbe
ret
adc
inc
add
outs
mov
xor
imul
jae
mov
fwait
or
gs
(bad)
lahf
mov
mov
push
cs
xchg
dec
aas
fwait
jbe
xchg
add
push
adc
cmp
sub
sahf
cmc
lds
dec
jmp
daa
ss
add
test
add
mov
movs
jne
lahf
cmp
pop
out
mov
clc
cmp
mov
fld
or
ds
movs
jge
mov
xor
and
sub
add
ss
int
nop
sub
xor
jns
xchg
cs
mov
mov
popa
pop
mov
mov
xor
call
loopne
pop
jne
xor
sub
jmp
push
pop
pop
fwait
push
cdq
outs
sbb
mov
loop
adc
push
or
int
jb
bound
add
cmps
mov
sbb
mov
pop
(bad)
popf
cmp
call
imul
imul
out
dec
mov
sub
sbb
lea
push
xor
ss
iret
(bad)
jg
das
pop
dec
jb
(bad)
pop
push
aam
nop
mul
repz
xor
rcl
xor
inc
repz
cmps
fsubr
push
mov
test
pop
and
xor
repnz
cmc
inc
push
cmpps
pop
adc
aam
add
inc
out
xchg
mov
mov
sbb
das
loop
xor
repz
loopne
push
movs
cld
pop
ss
es
inc
mov
push
jg
mov
cmp
call
pop
adc
imul
fild
xchg
inc
inc
inc
xchg
xchg
fwait
jge
cmps
imul
or
mov
pop
imul
cmp
stos
mov
mov
push
es
sti
pop
xchg
jbe
pop
stos
in
xchg
cmps
adc
push
ss
ss
inc
inc
xchg
imul
movs
inc
outs
inc
test
outs
hlt
pop
add
cmps
stos
(bad)
mov
sti
sbb
(bad)
cmps
pop
cmps
dec
mov
(bad)
stos
or
inc
pop
mov
daa
dec
add
test
dec
xchg
push
xlat
jnp
cmp
sti
push
jmp
xor
inc
into
fs
fiadd
test
mov
fimul
scas
pop
addr16
aaa
data16
loop
inc
(bad)
retf
xchg
aam
pop
test
jo
cmps
fscale
cli
ficom
inc
inc
mov
scas
ret
and
mov
sbb
mov
fcmovnbe
and
daa
cmps
inc
inc
inc
pop
fs
push
dec
mov
sub
ret
in
(bad)
pop
jmp
adc
retf
push
xor
stos
ss
ja
out
outs
test
mov
jg
adc
jmp
cli
push
jmp
ficom
inc
fwait
push
fs
je
sbb
cmp
es
mov
retf
imul
xchg
sbb
push
arpl
outs
movs
cmp
imul
ins
stc
jbe
pop
iret
and
test
ss
push
jmp
mov
ret
imul
dec
sub
fld
mov
daa
dec
mov
mov
fstp
push
cmps
mov
bswap
mov
adc
push
ss
push
inc
sbb
data16
mov
movs
outs
push
jle
(bad)
cmp
in
sbb
add
adc
scas
iret
test
pop
retf
not
mov
push
jmp
push
pop
data16
mov
inc
stos
mov
bound
imul
mov
and
out
and
cmps
lods
aam
jae
stos
xchg
push
pop
imul
cmp
repz
pop
or
dec
jo
scas
aaa
or
xor
neg
stos
and
pop
jp
jle
jge
(bad)
sub
arpl
push
jecxz
fstp
xor
mov
stos
outs
fs
jns
sahf
xchg
cmps
push
dec
dec
ss
cmp
jmp
sbb
mov
add
add
ficom
inc
inc
xchg
(bad)
stos
mov
dec
xchg
cmp
aas
fstp
in
sbb
es
retf
or
lahf
jnp
push
mov
out
(bad)
mov
(bad)
sti
repnz
sahf
and
sbb
sbb
data16
outs
retf
ret
imul
stos
xchg
or
(bad)
add
adc
ja
das
mov
jg
outs
bound
sti
(bad)
dec
mov
sub
pop
or
sti
adc
add
xor
xor
inc
jae
cdq
push
jbe
retf
mov
jbe
jbe
jbe
sahf
in
mov
es
ss
mov
xchg
push
xchg
and
fld
jmp
(bad)
retf
scas
sbb
fst
stos
push
fwait
mov
ret
mov
cmp
push
scas
cs
cs
aaa
jmp
movs
fcmovnbe
jg
inc
adc
mov
or
hlt
dec
dec
mov
scas
add
fwait
stos
xchg
jnp
push
add
scas
(bad)
daa
dec
les
xor
lahf
je
(bad)
xchg
hlt
movs
cmp
das
sub
sbb
fwait
cli
cmps
and
(bad)
rcl
mov
push
sub
mov
stos
jbe
pop
(bad)
sbb
pop
loop
cmp
add
dec
mov
fwait
hlt
icebp
jns
imul
sub
sti
sbb
or
iret
daa
ss
ss
push
ss
jne
add
out
cmps
pop
mov
inc
sub
and
data16
arpl
cdq
(bad)
sti
jbe
fist
sbb
pop
(bad)
jbe
ret
out
dec
jmp
push
push
mov
je
xchg
imul
pmulhuw
iret
mov
pop
cmps
sahf
and
and
(bad)
cmp
or
xchg
mov
push
cmp
sub
sub
push
jnp
stc
jbe
into
fnstcw
fimul
mov
dec
pop
pop
repnz
jg
lahf
stos
xchg
ds
mov
push
adc
inc
leave
fiadd
adc
ja
scas
ret
xor
push
out
(bad)
jecxz
mov
push
push
neg
out
xor
jae
inc
(bad)
jb
inc
xchg
mov
and
cmps
xor
sbb
add
aaa
adc
das
or
test
call
jmp
xlat
or
push
add
setle
retf
mov
(bad)
adc
push
or
mov
inc
cmp
test
in
add
jbe
scas
xchg
sbb
inc
push
movs
imul
dec
push
imul
adc
sbb
ret
daa
(bad)
ret
xchg
cli
stos
fs
inc
test
pop
mov
repz
push
retf
out
shl
push
mov
daa
add
(bad)
jmp
lahf
imul
sti
pop
neg
(bad)
sbb
mov
ret
jmp
sub
jae
mov
xchg
mov
xchg
enter
out
sbb
dec
out
aas
pop
data16
(bad)
push
jae
push
(bad)
(bad)
sti
mov
push
out
xchg
xchg
mov
mov
jecxz
in
inc
mov
push
push
cli
xchg
mov
gs
std
test
jle
or
shl
mov
popf
in
arpl
fisubr
dec
push
je
sbb
dec
mov
adc
outs
(bad)
in
hlt
pop
cli
push
scas
neg
(bad)
mov
inc
sbb
cdq
mov
xchg
outs
repz
ror
fwait
xchg
sbb
out
stc
jmp
add
jl
mov
imul
mov
out
sbb
push
inc
pop
fistp
iret
lahf
cli
and
inc
mov
je
xchg
sbb
pop
stos
push
(bad)
mov
push
add
and
and
xor
stos
test
call
dec
mov
test
out
sub
es
fisttp
enter
fbld
mov
pop
xchg
mov
push
sub
ret
in
int3
test
fldcw
jb
mov
test
scas
pop
mov
jp
pop
xchg
mov
ret
in
hlt
(bad)
mov
jmp
and
xchg
mov
mov
pop
pop
xchg
(bad)
(bad)
aas
test
fidivr
inc
mov
xor
pop
ds
fstp
mov
pop
xchg
mov
push
sub
ret
in
iret
test
mov
push
aad
call
test
pop
cmp
or
iret
sub
push
jae
push
jle
mov
or
xchg
es
cmp
(bad)
sbb
shl
push
fsubrp
jmp
lahf
cli
ficom
test
aaa
ret
jmp
pop
dec
add
push
sbb
hlt
push
mov
fistp
cmps
inc
inc
inc
sub
push
(bad)
retf
das
jmp
push
sbb
retf
mov
jb
xchg
shl
cmp
push
sub
push
daa
ficomp
or
addr16
test
mov
(bad)
(bad)
sti
ret
bnd
(bad)
mov
ds
dec
outs
push
(bad)
fs
je
(bad)
cmps
in
push
inc
les
aam
repnz
xor
jmp
ret
push
ja
mov
xchg
int3
xchg
cmps
fwait
jecxz
sbb
ss
neg
push
sbb
sub
mov
inc
inc
arpl
jbe
ret
push
pop
pop
stos
cmp
or
retf
and
xor
push
mov
cdq
mov
xchg
mov
mov
jbe
(bad)
sti
out
mov
jmp
xchg
mov
push
mov
cdq
mov
mov
(bad)
mov
xlat
repz
dec
jbe
scas
aaa
xor
mov
inc
out
push
ja
jbe
outs
mov
mov
jmp
cmps
out
or
pop
sti
jmp
xor
imul
data16
imul
inc
into
mov
outs
test
fwait
jmp
retf
mov
push
cmp
xchg
imul
(bad)
sub
daa
stos
in
sti
inc
sti
push
jmp
and
sbb
push
mov
mov
mov
dec
cmp
mov
jmp
add
xor
xchg
cmp
out
ficom
push
retf
bound
daa
and
dec
mov
push
imul
cmp
sub
out
dec
mov
pop
adc
retf
add
cmps
jae
jae
je
xchg
jecxz
adc
retf
sub
gs
mov
jmp
(bad)
neg
stos
and
xchg
push
push
sub
ficom
push
or
pop
retf
inc
das
addr16
push
std
dec
aaa
lahf
xchg
xchg
loop
push
mov
pushf
xlat
or
ficom
push
or
pop
daa
xor
neg
stos
and
xchg
jns
xchg
imul
mov
arpl
cmp
in
not
sub
adc
lahf
xchg
pop
scas
ss
out
adc
push
je
xchg
jbe
pop
movs
xchg
xchg
sub
stc
outs
sub
es
inc
jmp
inc
inc
call
pop
fisub
xchg
mov
lds
mov
sub
adc
push
retf
ss
jnp
dec
sahf
push
xchg
rol
movs
pop
mov
jbe
sub
out
pop
adc
push
fxch
out
mov
dec
push
je
stos
imul
jg
aam
nop
xor
cli
idiv
leave
retf
add
iret
and
xchg
stos
imul
repnz
sar
pop
pop
add
sub
add
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
call
jmp
fbstp
iret
inc
mov
jb
cmp
mov
aas
shr
loop
repnz
adc
and
xor
inc
mov
jb
cmp
mov
aas
shr
loop
repnz
call
out
and
xor
inc
mov
jb
cmp
mov
aas
(bad)
sub
sbb
lar
adc
and
xor
inc
mov
jb
cmp
cmps
pop
mov
ret
sub
sti
push
jmp
(bad)
retf
inc
mov
mov
aad
out
test
pop
mov
inc
mov
ss
inc
mov
jbe
xor
push
shl
leave
dec
inc
mov
mov
and
cmp
adc
or
cmps
inc
cdq
ja
popa
jmp
jge
mov
or
add
sbb
jno
imul
lds
aad
in
cmc
or
pop
mov
inc
mov
jne
add
fdiv
imul
sub
mov
jb
inc
call
and
shr
cmps
pop
repnz
(bad)
jg
sub
sbb
dec
inc
sti
push
scas
(bad)
retf
add
push
stos
and
shr
pop
mov
cmp
mov
mov
ss
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
dec
inc
sti
push
scas
(bad)
retf
inc
call
stos
data16
xchg
das
jecxz
mov
(bad)
cmp
or
push
jmp
(bad)
inc
mov
jbe
ret
imul
mov
(bad)
cmp
or
sti
push
jmp
sahf
ss
add
xor
xchg
imul
(bad)
sub
mov
ss
inc
mov
jbe
adc
enter
les
out
or
mov
ss
mov
fs
xchg
imul
(bad)
mov
push
push
ss
add
in
xchg
imul
(bad)
sub
sbb
or
push
movs
pop
test
mov
pop
mov
push
jg
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
shr
movs
mov
(bad)
cmp
sub
sbb
or
sti
push
js
(bad)
xor
mov
jbe
xchg
imul
inc
outs
out
or
(bad)
retf
inc
mov
jbe
xchg
xchg
xchg
xor
cmp
sub
sbb
or
sti
push
jmp
lahf
ss
mov
fwait
jbe
xchg
imul
(bad)
mov
push
sti
test
inc
sub
stos
data16
xchg
clc
loop
mov
(bad)
cmp
sub
test
push
movs
pop
test
mov
pop
mov
(bad)
cmp
sub
sbb
or
(bad)
stos
cmc
fbstp
jns
add
dec
push
jg
sub
sbb
or
sti
push
jmp
(bad)
stos
data16
in
xchg
imul
sub
out
test
sti
push
jmp
(bad)
retf
add
jbe
xchg
das
cmps
pop
dec
dec
(bad)
cmp
sub
sbb
cwde
inc
mov
ss
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
adc
pop
mov
(bad)
cmp
sub
mov
jmp
dec
jb
inc
inc
push
stos
data16
mov
pop
dec
fadd
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
xor
cmps
pop
mov
(bad)
jg
aam
pop
test
sti
test
aad
adc
xchg
imul
inc
outs
mov
sti
push
jmp
lahf
ss
mov
mov
cmps
pop
repnz
cmp
(bad)
mov
push
sti
jmp
pop
push
stos
cmc
fbstp
mov
imul
(bad)
(bad)
sub
sbb
dec
push
sti
push
stos
es
ss
aad
adc
xchg
imul
(bad)
mov
xchg
mov
jb
inc
inc
(bad)
fwait
mov
cmps
pop
and
sub
sbb
or
sti
test
inc
mov
mov
xchg
xchg
cmps
pop
mov
(bad)
cmp
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
adc
pop
mov
push
jg
sub
sbb
or
push
movs
pop
test
je
aas
xchg
imul
dec
mov
outs
out
or
mov
ss
mov
fs
xchg
clc
loop
mov
(bad)
cmp
mov
xchg
mov
ss
add
in
xchg
imul
sub
xchg
mov
ss
aad
push
stos
cdq
or
mov
pop
mov
cmp
test
mov
jb
inc
inc
(bad)
fwait
mov
ret
xchg
xor
cmp
out
or
xchg
mov
movs
pop
test
iret
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
pop
add
jbe
jns
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
aad
push
stos
cdq
fwait
jbe
xchg
imul
(bad)
sub
mov
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
aam
sbb
or
sti
push
jmp
(bad)
pop
add
in
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
jns
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
aad
push
stos
cdq
fwait
jbe
ret
xchg
cmps
pop
mov
(bad)
cmp
out
or
(bad)
stos
data16
jbe
xchg
clc
loop
mov
(bad)
cmp
sub
sbb
or
(bad)
retf
inc
mov
jbe
adc
pop
mov
(bad)
cmp
out
or
push
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
clc
loop
mov
(bad)
cmp
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
das
cmps
pop
dec
dec
push
jg
sub
sbb
cwde
inc
sti
push
adc
lahf
ss
mov
fbstp
jns
add
dec
(bad)
cmp
mov
stc
push
ss
mov
fwait
jbe
xchg
clc
loop
mov
(bad)
test
sub
in
hlt
xchg
mov
movs
pop
test
mov
add
fadd
sbb
or
sti
push
jmp
(bad)
retf
add
or
mov
pop
dec
fadd
pop
test
push
leave
pop
add
jbe
jns
imul
jg
sub
in
cwde
inc
sti
push
adc
and
pop
test
je
jnp
imul
xchg
sub
in
dec
push
sti
jmp
pop
add
jbe
jns
xchg
clc
loop
mov
push
jg
sub
mov
scas
es
retf
aad
push
stos
cdq
fwait
jbe
xchg
das
cmps
pop
dec
fadd
in
hlt
stc
sti
test
add
jbe
jns
xchg
imul
(bad)
sub
sbb
js
lahf
ss
mov
xor
cmps
movs
and
mov
xchg
mov
ss
inc
sub
stos
data16
xchg
shr
movs
mov
cmp
out
test
sti
push
jmp
dec
jb
inc
inc
test
mov
pop
dec
dec
mov
sub
sbb
or
sti
test
inc
mov
mov
cmps
pop
mov
push
jg
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
adc
enter
(bad)
(bad)
sub
sbb
or
sti
push
js
(bad)
xor
sub
stos
data16
adc
pop
mov
cmp
aam
pop
test
push
ss
inc
mov
jbe
jns
add
dec
(bad)
test
sub
in
or
sti
push
jmp
(bad)
retf
aad
push
stos
cdq
fwait
jbe
xchg
shr
movs
mov
(bad)
cmp
out
or
mov
ss
mov
fs
xchg
clc
loop
mov
push
jg
sub
mov
scas
es
retf
inc
mov
xor
cmps
movs
mov
(bad)
cmp
sub
sbb
or
sti
push
jmp
dec
jb
inc
inc
(bad)
fwait
mov
pop
pop
mov
test
xchg
sub
mov
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
aam
pop
test
sti
push
jmp
(bad)
retf
inc
mov
jbe
jns
shr
movs
mov
(bad)
cmp
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
das
cmps
pop
dec
dec
(bad)
cmp
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
in
xchg
clc
loop
mov
(bad)
cmp
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
ret
xchg
xor
cmp
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
in
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
dec
jb
inc
inc
push
stos
data16
jbe
xchg
imul
(bad)
sub
test
push
movs
pop
test
je
jnp
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
pop
add
xor
loop
mov
(bad)
test
sub
in
cwde
inc
sti
push
adc
(bad)
retf
aad
push
stos
cdq
or
mov
pop
mov
(bad)
cmp
sub
test
add
scas
es
pop
add
jbe
jns
xchg
clc
loop
mov
(bad)
cmp
sub
test
sti
test
add
jbe
jns
add
dec
push
jg
sub
in
or
sti
jmp
xor
mov
mov
cmps
movs
mov
push
jg
sub
sbb
or
sti
test
aad
push
stos
cdq
fwait
in
xchg
imul
inc
outs
out
or
mov
ss
mov
fwait
mov
pop
pop
and
mov
push
push
ss
add
xor
loop
mov
push
jg
sub
mov
jmp
(bad)
retf
inc
mov
in
xchg
imul
(bad)
aam
mov
js
(bad)
xor
sub
stos
data16
xchg
imul
(bad)
aam
in
dec
push
sti
jmp
retf
inc
mov
mov
cmps
pop
mov
(bad)
cmp
sub
mov
scas
es
pop
add
jbe
xchg
imul
(bad)
sub
sbb
push
sti
jmp
retf
inc
sub
stos
data16
xchg
imul
(bad)
aam
pop
test
add
scas
es
retf
inc
mov
jbe
xchg
clc
loop
mov
push
jg
sub
mov
scas
es
retf
aad
push
stos
cdq
or
mov
pop
mov
push
jg
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
jns
shr
movs
mov
cmp
sub
xchg
mov
jb
inc
inc
test
mov
add
dec
(bad)
cmp
out
or
push
sti
push
jmp
(bad)
retf
inc
mov
mov
ret
xchg
xor
cmp
sub
mov
scas
es
retf
aad
push
stos
cdq
fwait
jbe
adc
pop
and
sub
mov
scas
es
pop
add
jbe
jns
shr
movs
mov
cmp
aam
sbb
or
push
movs
pop
test
je
jnp
imul
(bad)
sub
in
or
sti
push
jmp
(bad)
pop
add
jbe
ret
xchg
xor
test
sub
in
dec
push
sti
jmp
xor
sub
stos
mov
ret
xchg
xor
cmp
sub
sbb
push
sti
jmp
xor
call
cdq
fwait
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
sub
stos
data16
xchg
shr
movs
and
sub
sbb
or
sti
test
add
jbe
jns
shr
movs
mov
(bad)
cmp
out
or
push
sti
push
js
(bad)
xor
call
cdq
fwait
in
xchg
imul
xchg
sub
in
or
sti
push
adc
(bad)
retf
inc
mov
jbe
adc
pop
and
mov
xchg
mov
movs
pop
test
enter
outs
cmps
pop
mov
ret
sub
pop
test
call
jmp
(bad)
iret
inc
mov
jb
xchg
outs
cmps
pop
mov
ret
das
loop
repnz
adc
and
xor
inc
mov
jb
cmp
mov
aas
shr
loop
repnz
adc
and
xor
inc
mov
jb
xchg
outs
mov
aas
shr
loop
repnz
adc
and
xor
inc
mov
jbe
cmp
mov
aas
shr
loop
repnz
adc
and
xor
inc
mov
sbb
jmp
dec
(bad)
dec
nop
arpl
jp
pusha
stos
inc
mov
adc
jbe
jecxz
ret
ds
test
dec
test
jne
gs
mov
mov
add
psrad
ret
xor
sub
pop
(bad)
addr16
mov
jnp
push
mov
pop
mov
enter
iret
ud0
psrlq
test
stos
ret
xchg
imul
cmps
sbb
push
ret
add
or
das
loope
mov
adc
pop
jne
movs
daa
aam
into
adc
xor
lds
repz
xor
cs
ins
mov
js
lods
dec
(bad)
lods
scas
push
xchg
enter
cmc
loop
rcl
cmc
or
(bad)
fldcw
test
outs
lds
lea
inc
scas
popa
test
iret
xor
add
cmp
cmp
or
fisubr
xchg
sub
xchg
jae
jb
pop
scas
xor
and
paddsw
xchg
sbb
pop
ret
adc
je
dec
sbb
cdq
js
mov
inc
mov
pop
ret
in
repnz
loope
idiv
movs
dec
repnz
xchg
ja
outs
push
mov
pop
scas
sub
push
jmp
les
aam
inc
loop
jecxz
out
sub
pop
mov
aaa
movs
push
mov
in
mov
test
xor
ss
jmp
sub
or
(bad)
push
inc
movs
push
aam
fwait
jae
add
jmp
shl
jg
pop
cmps
sbb
stos
dec
fwait
jbe
je
add
(bad)
pop
mov
sub
cmp
pop
sub
les
test
and
in
xor
cmp
pop
leave
push
and
inc
mov
xor
jmp
xlat
and
pop
xchg
fbstp
dec
fwait
push
popf
je
aaa
ret
adc
sar
cmp
xor
and
ja
and
push
mov
in
mov
sti
adc
out
loop
xchg
sub
adc
dec
mov
cmp
pop
aam
mov
fs
rcl
div
mov
dec
inc
mov
inc
mov
and
adc
mov
aas
hlt
pop
mov
dec
xchg
dec
inc
stos
or
adc
push
jmp
(bad)
cmp
stc
pop
mov
jns
mov
mov
inc
mov
ficom
jmp
sti
sub
fisttp
sbb
(bad)
jg
dec
pop
mov
sub
iret
push
hlt
add
inc
loop
jecxz
xlat
cmp
pop
mov
jb
fs
inc
test
and
fidiv
out
(bad)
and
mov
mov
xchg
imul
mov
sahf
mov
xor
ss
iret
inc
mov
cdq
sub
sub
xchg
push
mov
inc
test
or
adc
(bad)
or
sbb
pop
sub
outs
leave
jns
call
jns
add
es
int3
sbb
cmp
cmp
and
push
inc
movs
push
aam
fwait
jae
push
aad
xchg
aas
fst
or
pop
xlat
and
pop
mov
inc
or
jns
imul
maskmovq
div
push
out
mov
outs
mov
push
sahf
sbb
repz
adc
ret
sbb
pop
fdivr
mov
mov
js
adc
inc
or
and
ffree
out
sub
xchg
xchg
xor
add
sub
pop
mov
jg
mov
push
mov
data16
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
jbe
push
sti
push
jmp
(bad)
retf
(bad)
cmp
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
pop
mov
inc
mov
ja
pop
cli
pop
jmp
xlat
sub
sbb
or
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
or
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
or
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
or
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
or
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
or
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
or
mov
inc
mov
je
add
adc
enter
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
add
fdiv
sub
sbb
or
pop
mov
inc
mov
jne
inc
mov
push
out
xor
es
xor
cmp
fist
test
pop
add
ja
data16
mov
add
pop
lods
xor
sbb
into
rcl
mov
or
sahf
out
cmovl
push
pop
mov
ss
adc
cli
stos
push
test
xchg
lods
inc
shr
jmp
jmp
int3
jbe
push
dec
cmc
outs
je
inc
int3
mov
pop
mov
jp
inc
cdq
imul
cmp
pop
call
ret
into
out
cmp
cmp
enter
cmp
xchg
mov
add
add
push
mov
daa
add
das
and
fld
pop
sti
inc
imul
aas
dec
sbb
jnp
fld
mov
test
jmp
enter
jns
jo
cmc
rcr
sub
cmp
push
xchg
(bad)
data16
or
dec
call
add
mov
or
sub
jmp
mov
add
push
repnz
inc
fistp
add
leave
inc
dec
ins
sbb
es
add
lds
or
lods
push
mov
stos
push
nop
outs
push
mov
pop
movs
push
mov
push
lock
call
xor
xor
sbb
mov
pop
movs
inc
mov
or
icebp
jnp
adc
pop
mov
mov
cmps
dec
xchg
inc
imul
fwait
jae
jne
mov
or
adc
loopne
jmp
(bad)
xor
xor
jb
or
ins
lods
es
retf
xor
sti
add
xchg
cmc
push
(bad)
pop
fisubr
pop
scas
jbe
sbb
sbb
sub
push
hlt
or
bnd
push
frstor
ds
pop
mov
test
outs
push
sahf
jp
dec
mov
retf
fidivr
retf
adc
loope
xchg
add
(bad)
dec
mov
cmp
arpl
jae
push
mov
sar
push
cmc
add
xor
and
dec
or
sti
je
inc
mov
aas
les
sbb
pop
shr
enter
mov
test
jl
sti
data16
mov
test
mov
sbb
loop
in
bswap
pop
in
scas
jp
outs
cmps
(bad)
div
mov
jmp
lahf
jb
sub
(bad)
pop
mov
cmp
add
xor
movs
inc
test
dec
jno
js
fistp
add
adc
call
pop
fldenv
push
movs
dec
fsubr
jns
sti
dec
test
xchg
gs
sbb
cmp
data16
mov
adc
add
stos
cmp
pop
mov
imul
ss
xor
jbe
data16
add
jmp
pop
mov
cmp
(bad)
pop
mov
gs
jb
das
ret
imul
cmc
push
add
pop
mov
gs
mov
ja
sbb
xor
or
sbb
in
dec
iret
aas
lds
test
mov
pusha
addr16
mov
push
mov
repz
out
lods
dec
(bad)
dec
xchg
dec
inc
mov
pop
stos
sub
cmp
pop
hlt
pop
mov
jnp
imul
test
(bad)
or
lea
(bad)
scas
xor
cld
add
hlt
jnp
dec
leave
fnstcw
loope
scas
dec
(bad)
cmp
ins
mov
jmp
mov
cmp
add
stc
dec
ret
cmp
and
lahf
push
adc
inc
scas
push
jmp
ficom
or
sbb
xchg
xlat
push
aad
repnz
outs
call
scas
inc
jmp
mov
adc
shr
fsubr
dec
mov
gs
js
inc
scas
pop
mov
add
jbe
xchg
arpl
adc
push
pop
cdq
gs
push
stos
push
fwait
push
retf
data16
inc
repnz
in
or
imul
mov
push
inc
mov
jno
or
dec
sti
in
mov
cmp
pop
(bad)
inc
xchg
xor
bound
push
movs
and
(bad)
push
stc
hlt
jnp
pop
xchg
or
cmp
jns
xchg
cmp
aaa
iret
ins
in
fbstp
iret
xchg
imul
test
outs
xchg
push
mov
dec
sti
inc
mov
enterw
push
mov
aad
shr
scas
cmp
jge
mov
push
scas
sub
or
test
dec
cmps
xor
dec
cmps
or
imul
retf
sbb
cmp
data16
mov
(bad)
jnp
imul
out
shl
dec
sahf
js
dec
lahf
jb
add
sbb
mov
cmp
and
outs
(bad)
push
dec
mov
mov
mov
xor
and
mov
das
iret
and
or
jns
xchg
jae
push
mov
sub
jbe
jecxz
xchg
pop
leave
ds
mov
sbb
jmp
mov
push
les
hlt
sbb
xchg
jecxz
cmps
sub
sub
bound
jmp
mov
xor
xchg
repz
mov
inc
jb
jp
dec
mov
xchg
adc
adc
pop
(bad)
sbb
call
xor
or
je
ins
push
and
test
mov
push
clc
cmps
sub
imul
fistp
dec
mov
or
mov
push
jecxz
retf
xor
aas
fcom
adc
mov
repz
cmp
cmps
pop
movs
pop
out
(bad)
cmp
jg
push
scas
ss
data16
adc
ret
outs
fbld
(bad)
jne
outs
je
js
inc
mov
cwde
and
push
loop
sub
sbb
or
dec
mov
sub
bound
fist
xor
adc
pop
jecxz
cmc
les
mov
jb
jg
mov
pop
movs
sub
aaa
fisttp
push
loop
or
sub
xchg
push
js
dec
mov
adc
data16
add
out
push
repz
xor
sub
cmp
cwde
dec
mov
mov
repnz
xchg
mov
cmps
aas
mov
out
in
(bad)
ins
lahf
sub
jae
push
jmp
and
adc
jbe
cmps
jnp
dec
shr
dec
mov
sub
adc
mov
ss
cmps
xor
cmp
pop
les
(bad)
ins
cmps
bound
fisttp
pop
cwde
and
and
add
add
out
or
sbb
dec
out
xchg
jb
outs
lea
es
and
paddsb
cmps
or
xchg
dec
mov
push
pop
mov
scas
inc
retf
inc
jmp
pop
mov
cmp
xlat
daa
out
adc
push
mov
jp
sub
sbb
data16
push
into
jmp
add
dec
mov
inc
mov
pop
pushf
jp
dec
sahf
ss
xchg
push
add
xor
xchg
aam
cdq
push
(bad)
dec
scas
bound
xchg
inc
retf
inc
idiv
retf
adc
ret
sbb
pop
fisub
mov
mov
or
inc
jmp
call
adc
adc
cmps
adc
add
jnp
sub
pop
mov
push
mov
or
pop
mov
data16
in
cmp
imul
fldenv
mov
dec
inc
mov
dec
mov
and
pslld
out
adc
les
dec
mov
cmps
jne
dec
inc
xchg
push
test
mov
mov
and
add
ret
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
fidiv
into
inc
mov
jbe
xchg
outs
cmps
pop
mov
(bad)
ds
cs
test
std
push
in
fnsave
int
repnz
data16
jbe
xchg
call
(bad)
cmp
add
daa
add
or
retf
ja
and
mov
movs
or
pop
sbb
rcr
add
push
mov
data16
ret
push
iret
jae
cmps
pop
add
fst
inc
loop
xor
pop
mov
and
mov
js
cmps
arpl
sbb
ds
das
mov
repnz
sti
sbb
and
daa
inc
mov
test
jnp
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
cli
cmp
xchg
dec
(bad)
cmp
sub
js
jecxz
jge
jmp
(bad)
retf
inc
sbb
push
scas
retf
iret
jnp
dec
xor
sub
sbb
mov
stos
(bad)
adc
mov
mov
xor
cmp
xlat
mov
xchg
push
aam
in
push
scas
add
sub
test
xor
add
dec
xlat
jmp
test
outs
xchg
mov
or
lods
push
cli
jbe
pop
test
jp
lahf
inc
lods
jmp
outs
sub
push
add
mov
sbb
inc
add
(bad)
aam
imul
fwait
sahf
mov
mov
add
push
adc
xchg
addr16
push
dec
call
je
sub
cmp
sub
(bad)
call
push
stos
pop
and
(bad)
xor
push
cmp
sub
in
je
jnp
imul
(bad)
dec
mov
aam
sbb
or
add
adc
and
retf
inc
mov
jbe
xchg
imul
aad
out
cmc
or
add
jmp
fist
sub
jbe
or
xchg
arpl
lds
cmp
add
jp
or
cmc
xchg
jmp
fldenv
dec
das
in
cwde
call
xchg
gs
sub
sbb
mov
sti
push
jmp
inc
hlt
push
stos
fs
mov
aaa
les
(bad)
cmp
and
or
sti
lea
(bad)
scas
sub
adc
xchg
imul
xlat
aas
out
mov
mov
ja
push
test
push
stos
push
outs
xchg
imul
sbb
sub
or
cmc
xchg
sbb
ss
daa
fdivr
cmp
sbb
leave
sub
sub
sbb
mov
jns
shl
stos
sub
sbb
icebp
sbb
daa
out
mov
out
dec
movs
lahf
pop
retf
inc
mov
adc
iret
aaa
ret
push
in
or
fsub
fstp
xor
fidiv
lds
(bad)
pop
movs
jns
xchg
imul
xchg
daa
stos
cmp
and
push
call
sub
xor
jmp
mov
inc
cmp
and
into
push
pop
add
mov
data16
pop
mov
ret
(bad)
cmp
sub
sti
cmp
leave
push
cmp
hlt
add
repz
(bad)
gs
lahf
fs
sti
pop
jmp
(bad)
retf
fnstsw
adc
ret
pop
mov
inc
cmp
aas
fs
jnp
mov
jmp
fist
mov
mov
and
cmps
pop
mov
sub
fwait
xchg
or
icebp
push
xchg
pop
mov
add
(bad)
popa
ret
das
mov
mov
in
jg
or
sti
push
aam
fidiv
in
inc
xor
jbe
les
aam
in
imul
lods
and
xor
or
outs
and
push
dec
mov
mov
lea
gs
xor
in
adc
jmp
clc
jne
add
sbb
imul
fbld
les
cmp
sub
out
mov
popa
imul
ret
xchg
loop
mov
jl
movs
mov
lods
inc
mov
xor
and
adc
test
imul
(bad)
sub
pop
(bad)
sub
(bad)
retf
push
sti
push
jmp
lahf
out
sbb
adc
push
ret
shr
mov
dec
fild
and
clc
adc
sbb
pop
mov
test
push
mov
adc
test
arpl
push
scas
mov
movs
dec
outs
jecxz
cli
push
mov
fbld
das
add
ret
shl
outs
xchg
jg
ss
mov
pop
movs
mov
adc
push
mov
fsub
sub
jmp
loope
xchg
jl
sub
aas
xchg
pop
addr16
(bad)
sub
cmp
neg
out
xchg
jnp
and
xchg
pop
repnz
fs
xor
and
add
adc
and
in
xchg
jns
and
imul
mov
add
fst
leave
stc
je
sbb
fucom
mov
jg
psrad
fsubr
repz
dec
add
jo
pusha
xchg
inc
mov
pop
movs
cmp
into
xor
add
pop
clc
and
repz
outs
xchg
mov
test
pushf
movs
pop
jno
add
pop
fisub
retf
add
xlat
sbb
push
pop
movs
dec
mov
test
push
cwde
test
clc
add
leave
xor
add
aam
xor
imul
out
pop
or
pop
mov
inc
add
inc
clc
and
mov
fidiv
into
ret
or
xchg
pop
movs
repz
cmp
mov
mov
jno
add
adc
into
xor
cld
and
inc
mov
sbb
dec
mov
mov
pslld
call
lds
aad
movs
pop
inc
fwait
data16
mov
mov
jl
or
push
cdq
(bad)
inc
mov
nop
ins
cmp
data16
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
xor
pop
dec
mov
(bad)
cmp
imul
pop
(bad)
sbb
cmp
or
sbb
add
fcom
inc
mov
xchg
outs
(bad)
jb
gs
sbb
and
xor
or
inc
xchg
movs
dec
mov
test
js
sbb
or
fnstenv
int
movs
dec
jecxz
popf
jle
dec
mov
mov
mov
popa
in
adc
add
xor
and
neg
out
retf
out
test
sti
ss
fldenv
adc
add
hlt
sbb
sub
pop
movs
imul
pop
(bad)
sub
cmp
or
sbb
jmp
sti
ss
jg
push
stos
inc
mov
xchg
push
jp
dec
stos
pop
aam
les
hlt
or
sbb
add
xor
and
mov
xchg
imul
hlt
or
sbb
add
fcom
inc
mov
mov
test
dec
movs
pop
aad
lds
mov
movs
pop
push
lds
xor
mov
das
rcr
and
push
fbld
iret
cmp
call
das
rcr
dec
mov
fcomp
(bad)
jb
inc
scas
push
fbld
iret
cmp
jl
adc
dec
repnz
ret
pop
mov
popa
xchg
rcl
into
jb
inc
scas
push
fsub
fnstcw
imul
dec
mov
out
add
repz
test
fsub
xor
lds
aad
movs
dec
mov
in
loopne
aaa
mov
inc
test
in
hlt
xor
fs
leave
add
adc
fs
je
sbb
push
xchg
stc
add
dec
test
imul
xlat
es
ss
add
adc
gs
jne
sbb
pop
cld
stc
add
xchg
outs
jecxz
repz
mov
into
add
adc
outs
xchg
jle
sbb
or
sti
dec
mov
arpl
adc
or
xor
and
sar
ret
push
repz
jecxz
xchg
jle
dec
mov
mov
mov
(bad)
out
adc
add
xor
and
sar
ret
pop
loope
xchg
jl
dec
mov
mov
mov
pusha
in
adc
add
xor
and
lock
jp
dec
mov
cmps
stos
push
mov
adc
pop
cli
pop
retf
daa
sub
cmp
or
dec
mov
xchg
jnp
dec
mov
cmps
stos
push
mov
retf
inc
mov
jbe
xchg
imul
(bad)
sub
jmp
test
push
mov
and
adc
add
(bad)
imul
mov
movs
imul
mov
push
test
add
hlt
sbb
sub
cmp
dec
mov
movs
imul
pop
(bad)
sub
cmp
or
sbb
jmp
sti
ss
fist
pop
ret
addr16
cmps
pop
xlat
sub
cmp
or
sbb
jmp
push
stos
inc
mov
xchg
push
jp
dec
cmps
pop
xlat
sub
xor
pop
jmp
and
push
test
fs
xchg
imul
hlt
or
sbb
add
xor
and
push
test
gs
xchg
push
movs
pop
aad
lds
cmc
or
sbb
enter
test
mov
xchg
push
movs
pop
aad
lds
hlt
or
sbb
add
fcom
inc
mov
xchg
push
movs
pop
aad
lds
dec
cmps
pop
push
stos
push
out
enter
test
mov
xchg
push
in
xchg
imul
xor
and
push
scas
inc
pushf
xor
and
shr
ret
dec
mov
inc
out
adc
jecxz
fdivr
outs
xchg
sbb
pslld
mov
lahf
arpl
push
fbld
iret
adc
fwait
jbe
jnp
rcr
dec
mov
sub
bound
push
fisttp
mov
cs
adc
loop
bnd
pop
mov
sub
les
scas
push
fbld
iret
xor
add
adc
loop
rol
push
rcr
or
add
outs
xchg
lahf
bound
push
fisub
iret
adc
loop
or
rcr
dec
mov
sub
xor
mov
adc
or
cmp
sub
pop
movs
dec
nop
or
adc
leave
je
push
fsub
enter
call
xlat
push
stos
pop
mov
adc
mov
inc
test
fsub
retf
push
nop
ins
cmp
pusha
popf
js
sub
pop
movs
dec
mov
test
cwde
mov
sub
mov
push
sbb
or
cmp
sub
pop
movs
dec
xchg
sbb
or
sti
add
test
fsub
jmp
(bad)
pop
movs
inc
mov
(bad)
sub
inc
test
cdq
mov
xchg
push
sbb
push
cdq
gs
adc
xchg
imul
inc
mov
mov
fldenv
test
sub
xor
pop
stc
adc
fs
movs
cmp
adc
jns
imul
cmp
sub
xor
pop
movs
pop
jmp
adc
mov
test
imul
fs
cmp
sub
stc
adc
mov
push
test
fsub
xor
aad
and
clc
adc
xchg
sbb
or
clc
add
xchg
push
into
xor
and
fdivr
stos
pop
movs
dec
mov
les
fiadd
push
mov
mov
arpl
adc
imul
repz
in
outs
xchg
jno
dec
mov
mov
xchg
outs
cmp
int3
add
cmp
and
sar
int3
push
cld
push
jecxz
xchg
jle
inc
mov
mov
xor
add
xor
and
sar
ret
push
repz
jecxz
xchg
jle
dec
mov
mov
(bad)
jb
(bad)
out
adc
add
xor
and
sar
ret
pop
loop
xchg
jg
dec
mov
mov
mov
popa
in
adc
add
xor
and
cmp
or
sbb
or
lods
push
mov
popa
in
adc
add
xor
and
lock
or
mov
mov
addr16
daa
sub
cmp
or
sbb
push
jp
sub
mov
addr16
and
sar
out
xchg
jp
dec
mov
cmps
stos
push
mov
addr16
daa
sub
cmp
or
sbb
imul
cmps
stos
push
repz
es
jmp
es
cmp
or
sbb
je
sub
out
test
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
les
pop
movs
imul
inc
leave
xor
and
and
hlt
sub
cmp
dec
mov
movs
imul
inc
leave
xor
and
adc
jbe
test
in
aam
les
pop
movs
imul
inc
leave
xor
and
adc
push
ss
fist
inc
mov
xchg
imul
(bad)
sub
cmp
or
cs
sbb
ss
fist
inc
mov
xchg
imul
(bad)
sub
cmp
or
sbb
push
sti
ss
fist
inc
mov
xchg
imul
(bad)
sub
cmp
or
sbb
pop
cli
aaa
retf
push
stos
inc
mov
xchg
push
jp
dec
cmps
pop
xlat
sub
cmp
or
sbb
test
aaa
retf
push
stos
inc
mov
xchg
push
jp
dec
cmps
pop
xlat
sub
cmp
or
sbb
hlt
add
xor
and
push
test
fs
xchg
imul
hlt
or
sbb
jmp
push
test
fs
xchg
imul
hlt
or
sbb
add
xor
and
push
test
fs
xchg
imul
hlt
or
sbb
add
fcom
inc
mov
xchg
push
movs
pop
aad
lds
cmc
or
sbb
enter
test
mov
xchg
push
movs
pop
aad
lds
cmc
or
sbb
enter
test
mov
xchg
push
jp
dec
movs
pop
aad
lds
cmc
or
sbb
enter
test
mov
push
lods
mov
dec
movs
pop
aad
lds
cmc
or
sbb
enter
test
push
sub
ds
sub
cmp
or
sbb
enter
test
repnz
and
aam
les
hlt
add
lds
cmc
or
sbb
enter
test
repnz
and
aam
les
hlt
push
cld
pop
aad
lds
cmc
or
sbb
int3
and
push
lods
inc
std
xor
and
shr
in
ins
shr
cmp
or
sbb
loop
repnz
ret
pop
mov
cs
and
xor
add
sbb
and
xor
add
adc
loop
repnz
ret
pop
mov
sub
in
lock
cmp
sub
and
xor
add
adc
loop
repnz
ret
pop
mov
sub
(bad)
cmp
sub
and
xor
add
adc
loop
repnz
ret
pop
mov
adc
xchg
outs
sbb
aam
hlt
and
xor
add
adc
loop
repnz
ret
pop
mov
adc
sar
sub
out
adc
loop
repnz
ret
pop
mov
adc
les
aad
mov
iret
xor
add
adc
loop
repnz
ret
pop
mov
sbb
lahf
bound
and
add
adc
loop
repnz
ret
pop
mov
sbb
jl
xor
and
add
adc
loop
icebp
cmp
sub
pop
mov
sbb
leave
sub
and
cld
add
adc
or
cmp
sub
pop
movs
dec
ror
push
lods
xchg
imul
out
and
call
cmc
cmp
sub
pop
movs
dec
(bad)
push
jmp
fst
sub
sbb
sub
cmp
and
call
cmc
cmp
sub
pop
movs
dec
(bad)
adc
or
sbb
sub
adc
and
call
cmc
cmp
sub
pop
movs
dec
fist
in
add
icebp
or
sbb
sub
arpl
and
call
cmc
cmp
sub
pop
movs
dec
fst
in
add
icebp
or
sbb
aaa
cdq
push
fsub
call
cmc
cmp
sub
pop
movs
dec
fstp
add
adc
adc
xor
sbb
or
cmp
sub
pop
movs
dec
fcomp
in
repz
or
adc
sub
xor
sbb
or
cmp
sub
pop
movs
dec
fcomp
in
into
mov
and
push
fldenv
xor
add
adc
fidiv
add
adc
fs
dec
fcomp
in
mov
fldenv
push
in
hlt
or
cmp
sub
xor
add
adc
fs
dec
fcomp
in
mov
fldenv
outs
in
hlt
or
cmp
sub
xor
add
adc
fs
dec
fcomp
in
mov
fldenv
addr16
hlt
or
cmp
sub
xor
add
adc
fs
dec
fcomp
in
mov
fldenv
jle
sbb
or
cmp
sub
xor
add
adc
fs
dec
fcomp
in
movs
movs
pop
mov
fldenv
or
sbb
or
cmp
sub
xor
call
sbb
or
and
ja
sbb
or
cmp
sub
clc
adc
fcomp
in
(bad)
shr
adc
and
jp
sbb
or
cmp
sub
clc
adc
fcomp
in
hlt
stc
add
adc
and
ins
in
cmc
or
cmp
sub
clc
adc
fcomp
in
hlt
stc
add
adc
and
imul
cmp
sub
cld
adc
popa
pushf
jbe
sbb
or
stc
add
adc
and
outs
loope
icebp
or
cmp
sub
sar
ret
push
repz
jecxz
xchg
jb
sbb
or
stc
add
adc
sub
add
xor
and
sar
ret
push
repz
jecxz
xchg
jb
sbb
or
stc
add
adc
push
inc
into
xor
and
sar
ret
push
repz
jecxz
xchg
jo
pop
movs
dec
mov
inc
stos
inc
mov
sahf
arpl
adc
add
xor
and
sar
ret
push
repz
jecxz
xchg
jle
inc
mov
mov
xor
add
xor
and
sar
ret
push
repz
jecxz
xchg
jle
dec
mov
mov
mov
arpl
adc
add
xor
and
sar
ret
pop
loop
xchg
jg
dec
mov
mov
(bad)
jb
(bad)
out
adc
add
xor
and
sar
ret
pop
loop
xchg
jg
dec
mov
mov
(bad)
jb
(bad)
out
adc
add
xor
and
sar
or
sbb
ins
xchg
jl
dec
mov
mov
mov
popa
in
adc
add
xor
and
cmp
or
sbb
ins
xchg
jl
dec
mov
mov
mov
popa
in
adc
add
xor
and
lock
or
mov
lea
pusha
in
adc
add
xor
and
lock
or
mov
lea
pusha
in
adc
add
xor
and
leave
cmp
or
sbb
push
jp
dec
mov
cmps
stos
push
mov
addr16
and
cmp
out
xchg
jp
dec
mov
cmps
stos
push
mov
addr16
and
cmp
or
sbb
push
jp
dec
mov
cmps
stos
push
mov
addr16
cmp
cmp
or
sbb
push
jp
dec
mov
cmps
stos
push
mov
addr16
inc
jns
dec
(bad)
or
sbb
imul
cmps
stos
push
mov
data16
sti
push
retf
aaa
(bad)
js
test
or
sbb
imul
cmps
stos
push
mov
data16
sti
push
int
test
xchg
jge
sbb
imul
cmps
stos
push
mov
data16
sti
pop
sar
je
jnp
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
imul
(bad)
sub
sbb
or
sti
push
jmp
(bad)
retf
inc
mov
jbe
xchg
push
sub
and
adc
xchg
jg
cdq
jg
push
mov
in
cdq
cmp
jmp
sub
ja
pop
cmps
adc
sub
jne
inc
mov
and
inc
cmps
add
jmp
and
ja
push
mov
mov
in
retf
add
mov
pop
out
xchg
push
cdq
inc
scas
sub
xor
ret
mov
add
jg
sub
pop
clc
pop
jmp
xor
addr16
test
idiv
mov
jnp
sub
mov
sbb
cmps
test
jbe
mov
jle
mov
push
retf
daa
mov
stos
or
mov
imul
cmp
pop
repz
sbb
fidivr
in
movs
inc
les
scas
cmp
test
in
add
dec
add
stos
rcr
enter
pop
jmp
sti
ss
push
js
test
dec
clc
xchg
xchg
sub
xor
out
sbb
jnp
imul
(bad)
retf
es
sub
mov
out
test
xchg
adc
mov
jb
cmps
inc
(bad)
jp
push
sub
jns
imul
movs
jbe
(bad)
fbld
and
popa
xchg
dec
scas
pop
popf
pop
out
xchg
fwait
in
push
inc
in
push
pop
push
pop
stc
dec
lods
data16
sbb
sti
ss
test
mov
(bad)
test
test
xchg
dec
push
stc
push
stos
dec
sbb
imul
clc
or
ins
xchg
data16
test
sbb
mov
inc
mov
movs
dec
mov
(bad)
cmp
xlat
sub
sbb
cmp
xor
fwait
push
test
hlt
mov
push
mov
mov
inc
xchg
push
mov
add
add
mov
fs
(bad)
jne
dec
scas
pop
mov
ins
call
repnz
ret
or
mov
outs
and
jo
push
fwait
cmp
jmp
jns
aas
mov
inc
push
xchg
bound
pop
movs
push
mov
loope
(bad)
fldcw
retf
dec
mov
sub
sub
data16
enter
dec
iret
jne
aas
mov
ins
sti
gs
xor
inc
stc
push
shr
xor
add
and
add
xor
cmp
push
hlt
dec
cmp
sub
rcr
push
sti
pop
test
ret
add
dec
(bad)
out
or
cs
jp
outs
pusha
mov
mov
(bad)
data16
ins
mov
stc
das
test
or
jl
ins
test
mov
lods
push
cld
sbb
sub
cmp
enter
call
jl
ins
test
mov
lods
push
cld
sbb
sub
cmp
enter
call
jl
ins
test
mov
lods
push
cld
sbb
sub
cmp
enter
call
jl
ins
test
mov
lods
push
cld
sbb
sub
cmp
enter
call
jl
ins
test
mov
lods
push
cld
sbb
sub
cmp
enter
call
jl
ins
test
mov
lods
push
cld
sbb
sub
cmp
enter
call
jl
ins
test
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
xor
add
adc
ins
or
xor
inc
ss
xchg
mov
(bad)
repnz
ret
mul
push
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
(bad)
and
xor
bound
adc
arpl
jae
inc
and
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
mov
sub
xor
retf
xchg
pop
pop
mov
ret
mov
mov
clc
mov
out
in
jmp
scas
xor
out
adc
jecxz
repnz
sbb
push
repz
mov
dec
and
daa
nop
mov
not
mov
jecxz
int3
jecxz
daa
jns
fild
call
sub
cmps
inc
mov
adc
jl
inc
lock
sti
in
adc
repz
out
loop
or
xchg
dec
mov
mov
cmp
ror
jg
push
inc
xor
test
add
ja
shl
mov
(bad)
stos
jne
mov
ja
push
iret
cdq
pop
arpl
lods
jb
mov
xlat
mov
sub
int3
inc
add
enter
push
pop
lds
mov
cs
dec
ret
lods
repz
xor
lahf
mov
daa
push
mov
sti
and
ror
or
(bad)
daa
xlat
dec
cmp
pushf
pop
addr16
inc
sbb
test
sub
loope
xor
inc
ss
xor
iret
ja
add
int
arpl
push
push
pop
jmp
scas
icebp
adc
mov
dec
push
imul
jmp
inc
push
pop
mov
cmps
sub
add
mov
and
adc
mov
addr16
xor
test
fisub
mov
shl
and
dec
pop
push
cmps
sub
aaa
push
fs
mov
arpl
xchg
mov
(bad)
dec
xchg
stos
in
push
jp
xor
inc
push
pop
popa
test
ja
ret
inc
inc
retf
xchg
xrelease
xor
xor
dec
jb
inc
mov
sbb
imul
jo
jecxz
jmp
push
in
pop
add
adc
jno
mov
xchg
jmp
push
push
mov
inc
xchg
lahf
and
xlat
dec
add
sbb
sub
sbb
or
mov
iret
xchg
je
sahf
repz
inc
out
mov
push
lock
daa
adc
arpl
aas
inc
movs
mov
mov
loop
mov
and
outs
xor
in
adc
mov
adc
xchg
xchg
cli
xchg
(bad)
add
mov
out
imul
daa
push
aaa
es
ja
sbb
or
pop
xchg
mov
call
dec
sbb
imul
sbb
xchg
mov
push
jmp
(bad)
or
repnz
mov
adc
inc
cwde
shl
(bad)
dec
rcr
aas
mov
jmp
pop
retf
pop
inc
jo
jae
das
jo
inc
cwde
push
ja
xchg
repz
mov
mov
clc
mov
out
in
xlat
daa
scas
and
hlt
xchg
push
jl
xchg
push
jecxz
push
mov
fiadd
lods
jns
pushf
adc
sbb
xor
push
mulps
inc
in
xor
jae
loope
pop
bound
jnp
push
jnp
mov
or
ret
cmps
adc
es
out
pop
sub
cli
jg
mov
lahf
sub
mov
aam
shl
repz
lahf
jno
addr16
lahf
jnp
cli
mov
sbb
xor
pusha
js
xchg
jmp
sub
xchg
sub
push
dec
push
add
nop
out
test
sysret
mov
ja
xchg
sbb
pop
enter
repz
push
mov
mov
aaa
arpl
push
mov
fidiv
repnz
xor
call
jg
in
outs
arpl
push
push
pop
jmp
scas
repnz
mov
dec
push
imul
call
inc
inc
push
pop
mov
cmps
cmps
mov
sbb
and
xor
adc
sbb
push
inc
addr16
xor
xchg
fisub
mov
ret
scas
and
rcl
push
cmps
sub
pop
push
fs
mov
(bad)
(bad)
xchg
mov
(bad)
dec
xchg
stos
out
adc
add
bound
ja
ret
inc
inc
retf
arpl
xchg
xor
xchg
daa
dec
jb
inc
mov
sbb
mul
fs
jecxz
inc
xlat
push
in
pop
add
jb
cmps
ds
ja
xchg
jmp
push
push
mov
inc
xchg
lahf
and
(bad)
dec
add
sbb
sub
sbb
or
mov
iret
xchg
je
sahf
repz
jmp
dec
mov
push
lock
pop
daa
adc
add
aas
inc
movs
mov
mov
loop
mov
and
outs
xor
in
adc
cmova
call
mov
mov
inc
cmps
les
push
sbb
mov
inc
fs
mov
xchg
mov
aam
loop
push
adc
xchg
jl
sbb
in
push
or
inc
in
xchg
mov
clc
shl
rep
stos
mov
xor
imul
test
addr16
sbb
shl
pop
sub
mov
dec
sbb
sbb
xchg
mov
pop
adc
jnp
sbb
fcom
push
rcr
aaa
fild
cmc
push
and
aam
idiv
dec
sbb
jecxz
movs
xlat
and
and
dec
mov
xor
adc
xchg
out
dec
out
retf
xlat
stos
inc
ret
les
inc
into
inc
fucomip
sub
adc
mov
xor
retf
lea
cld
jo
ja
mov
jmp
mov
cmps
push
neg
xlat
pop
mov
sub
xchg
js
xor
add
xchg
enter
pop
xor
sbb
mov
ret
mov
jbe
cld
movs
ret
xor
nop
test
add
add
mov
out
imul
stc
dec
aaa
arpl
push
mov
fidiv
repnz
xor
call
jg
in
outs
arpl
push
push
pop
jmp
scas
repnz
mov
dec
push
imul
xlat
cmp
sub
push
pop
mov
cmps
ret
mov
sbb
and
adc
sbb
push
aaa
addr16
xor
xchg
fisub
mov
ret
scas
and
arpl
push
movs
sub
push
push
fs
mov
popa
(bad)
xchg
mov
(bad)
dec
xchg
stos
out
adc
pop
xor
add
bound
ja
ret
inc
inc
retf
xchg
xrelease
xor
(bad)
dec
jb
inc
mov
sbb
jg
test
inc
(bad)
(bad)
push
loop
pop
add
jb
cmps
ds
ja
xchg
jmp
push
push
mov
inc
xchg
lahf
and
aad
add
pop
aaa
sub
sbb
or
fs
iret
xchg
je
sahf
repz
retf
out
mov
push
lock
daa
adc
arpl
aas
inc
movs
cmp
or
imul
mov
xchg
jecxz
and
mov
jmp
bound
mov
dec
push
and
and
mov
push
jmp
mov
test
xchg
xchg
mov
or
or
aas
addr16
mov
mov
cmps
adc
pop
mov
ret
and
mov
mov
movs
ss
and
push
ds
sbb
add
xchg
bsr
xchg
pop
add
cwde
aaa
xor
cwde
scas
mov
inc
rcl
pop
(bad)
or
ret
lahf
shl
xor
ds
daa
adc
add
ja
xchg
push
xchg
mov
out
shl
cmc
pop
jbe
adc
xor
push
jnp
lahf
gs
xchg
fnsave
mul
aas
test
mov
ficomp
inc
pop
xchg
repnz
xchg
inc
shl
mov
add
push
jmp
sub
jno
lds
hlt
je
xor
popa
inc
mov
or
shl
mov
(bad)
jmp
imul
loope
xchg
imul
pop
in
or
mov
dec
div
or
mov
daa
cld
ss
and
lods
cs
shr
sub
mov
pop
not
push
mov
mov
mov
int
aam
sub
mov
xchg
cmps
push
mov
cmp
add
xchg
and
jecxz
fs
add
out
push
sbb
jae
sbb
cli
(bad)
xchg
xlat
fwait
mov
mov
dec
mov
sbb
ins
and
out
pop
stos
xchg
(bad)
neg
aaa
inc
fistp
fcom
ss
or
mov
or
xlat
ja
(bad)
mov
jp
mov
(bad)
mov
adc
retf
sub
neg
sub
repz
cmp
cmp
sbb
clc
mov
mov
jecxz
(bad)
jo
in
cmp
or
xchg
repnz
jg
inc
and
aam
aaa
arpl
add
push
adc
sahf
lahf
jecxz
repz
nop
mov
and
xlat
loope
retf
xor
scas
adc
neg
mov
shl
add
mov
ss
fidiv
add
sbb
loopne
js
xchg
push
or
ror
dec
mov
ds
mov
cmps
jnp
jecxz
jae
mov
lea
cli
hlt
fist
mov
cwde
aaa
arpl
jae
sub
pop
xchg
ficom
xchg
cmp
pop
hlt
fadd
adc
jmp
and
jg
ds
sub
cmps
(bad)
js
dec
sbb
mul
bound
fidivr
outs
mov
mov
xor
xchg
xor
out
aaa
popf
les
movs
ret
mov
xchg
cdq
stos
inc
sbb
out
les
mov
clc
pop
xor
(bad)
mov
outs
mov
pop
int3
out
dec
pop
addr16
push
jnp
pop
and
push
aaa
push
push
in
pop
mov
jnp
mov
jecxz
jle
cmp
clc
xor
adc
mov
inc
cwde
pop
jecxz
dec
jb
push
daa
(bad)
xor
retf
dec
sbb
adc
imul
retf
push
popa
push
(bad)
cli
or
and
cli
jecxz
lock
loope
jno
xor
pop
or
mov
das
in
scas
out
inc
mov
bts
mov
stos
cdq
push
jae
mov
pop
and
push
(bad)
addr16
push
jae
pop
call
jb
and
stos
sub
jecxz
push
pop
les
dec
sbb
sub
inc
inc
daa
adc
jbe
mov
xchg
jbe
aaa
mov
mov
mov
pop
in
and
inc
sbb
add
arpl
je
inc
fcom
cmps
cmp
div
dec
out
retf
push
arpl
cli
push
mov
cmp
sub
push
sub
xchg
(bad)
xor
repz
and
fst
aaa
fwait
add
or
dec
(bad)
mov
pop
sbb
jecxz
and
push
and
stos
sahf
jge
pop
jo
mov
outs
fxch
inc
pop
xchg
aas
mov
jg
pop
mov
ficom
xchg
pop
(bad)
(bad)
pop
mov
into
shl
pop
mov
dec
xor
inc
fwait
lds
lods
cld
mov
cmps
ret
out
sbb
ins
sub
data16
jmp
into
push
jb
cmp
mov
js
jg
hlt
sbb
cmp
into
(bad)
sub
fcom
mov
outs
mov
lods
bound
mov
outs
(bad)
pop
ins
push
outs
cmp
sbb
or
clc
mov
xchg
adc
js
out
push
mov
test
(bad)
xor
push
imul
outs
xlat
enter
stos
mov
xchg
jl
push
dec
mov
repz
dec
sbb
mov
ins
or
mov
lds
call
and
cmps
pop
ret
aam
(bad)
bnd
fistp
sub
fucomi
mov
push
data16
icebp
or
test
cmps
mov
sbb
cmp
clc
mov
pusha
pop
ja
push
arpl
mov
das
(bad)
lock
out
mov
shl
pop
add
(bad)
aaa
inc
inc
mov
inc
push
push
mov
xchg
xchg
inc
jae
out
add
xlat
mov
ja
cdq
jmp
adc
call
xor
mov
dec
and
ror
scas
adc
ret
imul
movs
sub
aaa
mov
repnz
dec
jmp
into
(bad)
or
inc
inc
cs
scas
addr16
xor
adc
arpl
shl
or
sub
pop
addr16
stos
sti
mov
xor
(bad)
std
jnp
push
push
daa
(bad)
mov
in
clc
int3
inc
push
loope
mov
pop
fwait
add
push
inc
mov
mov
push
repz
add
retf
inc
xor
push
pop
shl
test
xlat
inc
xor
pop
pop
dec
and
sti
call
int3
pop
int
in
outs
xor
xor
and
pop
sti
mov
ret
mov
ret
sbb
in
mov
scas
adc
pushf
add
mov
daa
xchg
(bad)
test
dec
daa
sub
sti
fistp
and
enter
or
(bad)
push
add
xchg
jecxz
je
dec
lods
(bad)
dec
out
add
mov
xlat
aaa
push
add
inc
xor
hlt
pop
xchg
movs
push
pop
jecxz
pop
xlat
mov
sbb
add
movs
pushf
retf
xchg
addr16
mov
jecxz
loope
rcr
addr16
jo
push
cmp
mov
sahf
fs
adc
sbb
xchg
repz
adc
daa
mov
mov
mov
push
mov
dec
inc
cli
mov
dec
xchg
sub
arpl
out
jp
clc
mov
mov
mov
xchg
xchg
and
ins
call
iret
mov
mov
inc
jns
mov
xchg
and
cs
mov
aaa
mov
repz
das
xchg
sub
xchg
int3
push
adc
dec
aaa
add
lahf
xor
pop
ja
xchg
daa
or
fstp
and
add
push
ja
add
stos
fld
daa
lods
xor
mov
repz
dec
mov
jle
xlat
arpl
mov
into
in
lods
cli
mov
addr16
or
xchg
mov
cmp
cmp
jb
fcom
adc
pop
daa
fbld
js
mov
out
mov
and
push
dec
sbb
cmp
pop
neg
mov
push
stos
push
mov
into
cwde
push
mov
ret
xor
cli
and
mov
cmps
sbb
cli
cmp
and
sub
fidiv
cs
mov
jecxz
cmp
or
rcr
pop
xor
add
add
addr16
data16
adc
out
mul
inc
(bad)
push
retf
mov
retf
sbb
not
repnz
jae
jle
addr16
mov
or
imul
fistp
cmps
pop
dec
mov
cmp
call
cmp
fcmovnbe
xchg
call
or
adc
ret
loop
mov
push
or
mov
xchg
lahf
lock
sbb
pop
dec
mov
mov
ins
iret
pop
mov
(bad)
sbb
push
xor
fs
cmps
nop
js
xchg
jp
gs
pushf
push
sub
ja
xlat
mov
je
cmp
and
daa
and
pop
jle
inc
jo
outs
xchg
add
test
and
mov
daa
sar
push
jo
jae
inc
and
arpl
xchg
fstp
or
nop
mov
jbe
push
ja
xlat
movs
inc
cli
adc
loop
bound
xlat
mov
dec
add
mov
xchg
sti
inc
inc
loope
adc
xchg
jb
mov
push
xchg
jmp
out
inc
mov
add
push
xchg
arpl
xlat
jl
fwait
cmp
inc
inc
call
es
dec
dec
inc
sbb
dec
adc
push
test
loop
mov
repz
retf
xchg
repnz
add
sahf
aaa
cmp
ficomp
push
mov
pop
cmps
leave
xor
test
stos
outs
enter
add
mov
jecxz
(bad)
fwait
jo
dec
cmp
shl
lea
pop
or
cld
imul
dec
(bad)
jae
stos
add
xchg
pop
dec
fs
scas
pop
jb
push
inc
xchg
jo
pop
dec
dec
cmps
cmp
and
loope
clc
psllq
ins
sbb
mov
adc
pop
js
ror
cs
repnz
int3
cmps
sti
push
in
retf
sahf
cmp
retf
and
adc
mov
fidivr
cmps
mov
cmp
test
jno
sahf
mov
(bad)
in
fimul
jmp
inc
mov
retf
int3
(bad)
jl
cmp
push
out
loopne
mov
dec
outs
or
push
sub
ja
dec
mov
xchg
ds
inc
pop
jle
cwde
jb
add
ja
inc
cmp
mov
test
jne
(bad)
add
fimul
push
leave
rcr
in
out
fstp
cmp
and
push
inc
adc
push
dec
xchg
xchg
mov
mov
call
mov
jp
add
fadd
cmp
xchg
rol
lock
fcmovne
retf
inc
mov
mov
into
jg
mov
shr
mov
mov
xor
jb
pusha
call
inc
(bad)
adc
cwde
pop
hlt
(bad)
fsub
mov
mov
cmp
jb
inc
mov
xor
addr16
and
or
sub
push
mov
xchg
not
dec
or
sub
aaa
call
ds
sbb
cmps
sbb
jecxz
call
dec
das
cmps
xor
mov
mov
test
cmp
imul
fwait
(bad)
fs
jle
inc
fcom
add
pop
movs
and
int3
pop
or
aas
jmp
xchg
data16
and
jle
lds
mov
cmp
adc
test
push
add
cs
inc
push
push
mov
add
inc
int3
pop
sbb
dec
test
sbb
mov
mov
mov
ret
cmp
mov
inc
mov
mov
push
push
push
cld
call
fistp
sbb
pushf
movaps
cmc
call
ds
jge
dec
cmp
bound
push
ret
out
sbb
clc
mov
mov
mov
int3
mov
xor
sub
mov
retf
jo
dec
jecxz
cmp
adc
inc
js
and
enter
out
xchg
inc
xchg
sbb
retf
inc
sbb
and
jmp
out
jp
inc
jae
adc
cmp
sub
bound
ins
mov
(bad)
adc
pushf
push
inc
xor
cli
mov
pop
ror
fucom
inc
div
xlat
repz
or
mov
call
mov
inc
arpl
jmp
out
nop
stos
pop
repz
push
xor
stc
pop
inc
mul
cli
inc
push
and
cmp
sbb
cmps
imul
dec
out
(bad)
out
xor
(bad)
ja
sub
cwde
inc
mov
push
push
pop
mov
or
xchg
mov
xor
inc
in
gs
fstp
and
(bad)
loopne
mov
cmp
adc
sar
std
push
adc
push
jo
adc
adc
fidiv
or
add
nop
daa
shl
scas
push
inc
daa
jnp
adc
aas
cmp
cmp
sub
(bad)
xlat
ss
pop
imul
dec
xor
mov
rcr
dec
push
sub
mov
mov
jle
dec
repnz
dec
ins
shl
inc
in
retf
mov
mov
ss
int
xchg
dec
pop
ror
dec
pop
rol
ins
test
jecxz
iret
loop
jb
jae
scas
in
push
jae
add
lods
(bad)
mov
sti
push
cs
and
loope
retf
out
xor
jno
enter
sbb
jecxz
scas
arpl
pop
mov
xlat
sub
sahf
jp
or
pushf
mov
dec
adc
mov
scas
aad
sbb
int3
mov
pop
add
retf
pushf
mov
mov
mov
stc
fwait
mov
xor
shl
jne
inc
shl
dec
jae
xor
arpl
inc
xchg
cmps
xor
sbb
rep
ror
push
sub
sub
pusha
call
sqrtps
enter
pop
xchg
cmp
ret
cmp
sub
adc
and
dec
push
mov
mov
or
pusha
cmp
mov
cmps
xchg
aaa
test
xor
bound
arpl
not
lds
lock
or
mov
stos
ds
mov
mov
mov
pop
stc
cs
xor
ret
cmp
mov
(bad)
cdq
ret
out
test
daa
fldcw
scas
jae
inc
fstp
mov
jecxz
repz
xchg
mov
cmp
pop
fist
imul
stc
mov
fiadd
dec
xchg
(bad)
lock
repz
ror
(bad)
and
retf
arpl
add
out
jmp
or
lds
add
pop
fist
sti
daa
push
pusha
xor
mov
pop
mov
pop
pop
mov
ret
pop
shl
pop
daa
sti
aaa
or
cdq
xor
loop
mov
repnz
mov
loop
push
mov
pop
test
add
inc
mov
and
js
or
(bad)
fdiv
xchg
nop
mulps
retf
arpl
jae
inc
mov
aam
outs
xchg
xchg
int3
cmps
iret
mov
adc
(bad)
and
adc
inc
inc
cmp
inc
addr16
mov
jmp
mov
ret
psllw
ins
pop
dec
pop
jmp
sbb
push
sahf
out
mov
mov
(bad)
sbb
and
and
into
push
xchg
arpl
ret
ja
ret
adc
jecxz
xrelease
cmp
jg
daa
daa
cli
jae
inc
fwait
jbe
sub
mov
dec
mov
test
pop
xlat
sub
xor
adc
daa
in
mov
or
jnp
jecxz
repz
push
xchg
push
and
adc
dec
daa
pop
aaa
mov
rcl
inc
push
cmp
mov
xlat
pop
out
mov
pop
(bad)
arpl
jno
jmp
mov
out
lahf
ret
(bad)
rcr
movs
xor
and
pop
aaa
jecxz
call
iret
mov
or
jecxz
rcl
test
jecxz
retf
pop
jmp
adc
aaa
jae
pop
les
add
repz
(bad)
sbb
ret
mov
ja
add
xor
and
mov
stos
test
xchg
test
xchg
cmp
call
jo
call
xchg
push
ds
adc
dec
inc
imul
mov
jp
test
add
adc
or
add
outs
cmps
shr
imul
daa
pop
aaa
pushf
pop
clc
mov
mov
lock
ds
xrelease
das
pop
test
inc
(bad)
xchg
mov
inc
mov
mov
mov
sub
sub
call
imul
pop
ins
dec
or
ficom
xchg
sbb
stos
pop
or
int3
lea
inc
clc
inc
inc
and
xchg
xor
jecxz
(bad)
call
jbe
jmp
sahf
sti
cs
push
shr
fidiv
mov
jmp
xchg
cmp
jecxz
jmp
cmovle
ss
arpl
movs
cmp
xor
out
mov
pop
sub
ja
out
xor
dec
adc
aaa
shr
push
mov
test
push
jnp
cmps
mov
xlat
ret
(bad)
out
add
dec
xor
mov
push
mov
cmps
jae
inc
loopne
outs
shl
fmul
mov
rol
adc
es
xchg
push
inc
fbstp
imul
xchg
loopne
(bad)
enter
sahf
xchg
inc
mov
icebp
arpl
rcr
cmp
or
pop
push
sub
mov
call
call
push
pusha
xor
not
cmp
xor
jbe
mov
mov
sub
xor
js
push
scas
(bad)
daa
and
ins
das
sti
lea
(bad)
cli
adc
fadd
xchg
inc
movs
dec
fstp
out
xchg
ins
sahf
test
sahf
jb
scas
mov
out
data16
outs
ds
imul
xlat
cmp
pop
mov
adc
inc
cmps
(bad)
test
and
ja
ds
push
mov
repz
and
mov
jp
mov
(bad)
cmp
cmps
push
repnz
repz
in
cmc
push
retf
xchg
fucomip
mov
push
jno
mov
jmp
mov
push
xlat
dec
out
sahf
mov
out
jae
mov
inc
push
inc
cwde
es
or
repnz
mov
mov
dec
cmp
loopne
pop
jl
pop
int3
add
xchg
mov
mov
mov
jmp
mov
aaa
pop
mov
fbstp
xor
cli
les
inc
imul
cli
cmps
daa
jns
xchg
(bad)
(bad)
ja
stc
arpl
push
mov
and
xchg
aas
btr
jmp
nop
sti
cs
push
shl
push
xor
ret
push
cmps
push
jge
mov
lahf
xchg
ret
dec
out
inc
daa
jno
call
(bad)
lods
inc
pop
cld
fstp
sub
pop
cli
in
pop
adc
out
mov
inc
addr16
and
cmp
jg
push
cli
daa
(bad)
stc
xlat
xchg
push
cld
(bad)
cmp
fwait
sbb
data16
sub
sub
and
std
dec
mov
add
into
fwait
xchg
cmp
(bad)
rol
xchg
out
retf
mov
xor
pop
arpl
bound
sub
ss
stos
mov
ja
loop
sbb
scas
adc
ret
sti
mov
xor
es
into
push
pop
xor
dec
or
(bad)
cmp
das
jle
shr
jle
inc
stos
rcr
out
jb
sbb
push
neg
ror
cmp
cmp
repnz
and
sar
mov
or
jecxz
add
jnp
sub
rol
mov
xchg
aaa
idiv
sub
lds
xchg
inc
(bad)
mov
repz
mov
rcl
dec
sti
jle
add
fistp
test
jmp
xchg
pop
ror
cmp
test
mul
xor
dec
mov
lods
xor
loopne
jg
xchg
ret
mov
(bad)
mov
aas
push
mov
out
ja
retf
sub
or
add
pop
jnp
xchg
inc
and
cvtps2pd
stos
mov
and
jne
bound
out
scas
mov
aaa
fidiv
or
add
add
test
add
inc
cli
cmp
pop
xchg
cmp
mov
pop
xor
rcl
push
cmps
or
movs
movs
aaa
add
dec
push
jl
jnp
sar
xchg
inc
add
add
shl
movs
add
inc
xor
mov
mov
or
push
dec
outs
(bad)
jle
aas
out
xchg
scas
mov
mov
adc
add
and
mov
mov
jle
ret
sbb
pop
fsubr
int3
pop
ret
iret
sahf
push
pushf
scas
mov
test
ja
std
dec
sbb
ret
cmp
repz
xchg
out
loop
clc
xchg
(bad)
cld
out
in
mov
inc
mov
ds
xchg
rol
mov
or
push
add
fistp
push
into
cwde
xchg
lahf
ja
jnp
jl
shl
cmp
test
fucomi
mov
cmp
arpl
add
loop
aaa
ret
cmp
xor
out
sbb
cld
fcomp
lods
push
cwde
xchg
adc
pop
out
dec
(bad)
add
cli
shr
dec
fcom
inc
stos
out
(bad)
cli
movs
js
push
sbb
out
mov
pop
jbe
mov
shl
(bad)
xchg
push
enter
pop
xchg
dec
xchg
mov
push
movs
sbb
or
pop
fadd
push
fcomp
ins
ja
xchg
inc
sub
xchg
xchg
ret
cmp
dec
cvtps2pd
rcr
cld
out
mov
xor
ss
push
mov
xchg
push
cmps
cmp
sub
sbb
ss
lods
sahf
jns
add
cmp
(bad)
pop
sar
sbb
sub
xor
pushf
or
pop
inc
(bad)
mov
jg
les
lock
jg
inc
and
cld
aam
aaa
movs
xchg
cmp
ja
mov
inc
vmptrst
dec
out
jge
adc
pusha
jbe
jae
scas
xor
sub
xchg
sar
mov
nop
xrelease
clc
mul
icebp
or
pop
xchg
mov
cmp
cmp
call
int3
pop
inc
daa
inc
enter
cmps
push
or
pop
xchg
push
mov
daa
sbb
jp
or
call
mov
into
(bad)
lods
ja
inc
adc
mov
xor
pop
(bad)
jecxz
jmp
lods
push
icebp
xor
fdivrp
out
mov
and
fucom
mov
ret
and
sbb
mov
push
cmp
mov
repz
cmp
fs
inc
fistp
js
pop
push
jge
mov
mov
add
call
test
out
cld
stos
inc
adc
jae
into
inc
fisub
scas
(bad)
repnz
sub
loope
movs
dec
aas
sbb
rol
add
xor
(bad)
mov
mov
arpl
jmp
push
es
mov
es
data16
dec
cli
xchg
mov
xchg
push
repnz
xchg
xchg
sub
fadd
pop
(bad)
cmps
push
xlat
fs
pop
imul
pop
dec
push
in
mov
xchg
in
out
ror
add
pop
jecxz
push
addr16
mov
mov
out
dec
(bad)
rol
sti
aas
out
inc
push
fcom
pop
call
arpl
aaa
stos
adc
xlat
push
sbb
repnz
daa
cdq
(bad)
dec
out
jp
arpl
push
add
sti
aaa
bound
mov
cmps
mov
jg
rcl
xlat
sar
aaa
or
sti
addr16
arpl
mov
ret
dec
not
cld
dec
jecxz
fcomp
pop
xor
ja
jno
dec
arpl
scas
cwde
lods
xor
xor
repnz
sti
xchg
sub
push
into
fild
movs
xchg
mul
inc
mov
add
into
imul
stos
xchg
sub
jp
add
pop
das
sbb
dec
mov
sar
mov
fidivr
lahf
add
enter
dec
int3
cmp
push
mov
mov
js
(bad)
call
push
push
or
out
jg
sub
and
sbb
adc
out
or
mov
pop
jno
test
test
mov
addr16
sub
pop
sub
jp
inc
inc
cmp
add
dec
push
hlt
lods
neg
push
aaa
jp
push
sbb
fadd
inc
call
ja
or
sub
jae
push
sbb
push
enter
call
dec
in
in
enter
dec
push
imul
out
jo
or
cli
cmps
mov
or
jl
jmp
cmp
jmp
dec
neg
xchg
or
shr
xor
fadd
fidiv
in
data16
(bad)
xchg
xchg
aam
xchg
jecxz
repz
adc
xchg
cs
aam
push
inc
(bad)
push
lahf
rol
cmp
jg
dec
mov
jle
aas
repnz
and
lods
scas
ss
enter
daa
ja
xchg
jmp
cmp
push
idiv
jp
jmp
daa
adc
inc
mov
inc
ss
ins
mov
pusha
ret
movs
inc
js
dec
out
test
scas
sbb
arpl
push
inc
mov
xor
jecxz
xchg
and
fcom
(bad)
enter
sbb
mov
repz
lahf
xchg
movs
int
push
cmp
iret
je
sbb
jbe
adc
xor
cli
ja
mov
ret
push
xor
pop
push
jns
mov
sbb
jae
repz
mov
daa
out
shl
adc
push
es
add
sti
mov
inc
aaa
xchg
inc
sub
(bad)
inc
ins
pop
mov
inc
in
push
nop
xlat
or
push
sub
mov
cmps
rol
xchg
repnz
setp
and
int3
xor
push
mov
adc
push
ficom
pop
pop
fidivr
cmp
(bad)
jno
sub
retf
inc
or
add
jae
inc
xchg
xchg
jecxz
cmp
or
div
hlt
bound
bound
adc
ds
fcom
xchg
or
xchg
dec
pop
imul
and
push
mov
xchg
data16
mov
sbb
loop
mov
dec
(bad)
xlat
mov
mov
adc
pop
pop
pushf
retf
adc
bound
push
out
xor
maxps
div
ins
and
push
aaa
arpl
add
out
fwait
mov
mov
ret
pop
rol
dec
loopne
mov
aaa
lahf
inc
ja
in
xchg
jle
out
xchg
out
leave
mov
mov
adc
cld
jmp
in
mov
mov
dec
neg
pop
fwait
repnz
or
dec
jmp
jle
div
inc
mov
inc
adc
push
ins
push
xchg
sub
adc
clc
fimul
dec
(bad)
push
ss
xor
(bad)
sbb
dec
sbb
test
ja
adc
xor
inc
addr16
repnz
pop
je
adc
repz
cmp
sub
xor
jecxz
out
jecxz
mov
cmp
dec
(bad)
neg
inc
xlat
jle
cmp
ret
(bad)
ror
test
cmp
stc
arpl
(bad)
int3
jle
xchg
and
or
sub
cmps
stos
(bad)
jp
dec
int3
jecxz
daa
cwde
(bad)
pushf
int3
cmp
xchg
es
ret
mov
sub
xlat
or
sub
push
lods
in
loopne
and
mov
ds
jg
mov
mov
mov
pop
arpl
or
add
and
xlat
imul
fisub
dec
bound
jmp
daa
pop
es
xchg
mov
jb
cli
ja
cmp
imul
adc
jno
fist
ret
mov
jae
clc
push
push
in
push
ja
or
rol
cmp
iret
out
fwait
mov
daa
in
jns
pop
ss
sub
cmp
lds
repz
call
push
push
jb
sbb
sub
xchg
pop
xchg
bound
pop
mov
push
jmp
sub
xor
enter
and
not
scas
ja
pop
cmp
sub
scas
jb
pop
and
enter
cs
fiadd
sti
xchg
pop
cmp
xchg
jmp
out
(bad)
daa
imul
xchg
(bad)
rcl
jmp
inc
pop
cmps
push
or
mov
mov
fmul
retf
mov
cmps
out
jecxz
sbb
shl
adc
mov
jmp
jae
and
lahf
repnz
mov
xchg
dec
pop
shl
scas
jl
pushf
ret
inc
mov
push
push
and
jg
shl
fs
mov
cmp
xor
(bad)
jl
adc
adc
imul
cmps
js
repnz
into
xchg
sub
js
ret
mov
fucomi
out
mov
fucomi
int3
inc
addr16
cli
sub
xchg
ds
mov
push
popw
das
bound
xor
cmp
cmps
ss
mov
(bad)
push
xchg
add
jbe
dec
mov
and
xchg
shl
mov
xor
pop
push
xchg
ror
sub
out
add
ret
ins
iret
or
mov
adc
enter
push
cmp
stos
sbb
retf
out
xchg
mov
and
add
js
sub
shl
push
mul
icebp
rol
mov
out
xchg
es
mov
enter
xchg
out
push
and
push
ret
mov
add
push
imul
inc
and
pop
(bad)
lods
jnp
inc
cmp
cmps
add
std
sbb
jle
div
pop
adc
int
popf
add
xchg
cdq
sub
sti
xchg
(bad)
push
loopne
fmul
dec
aas
jmp
out
or
retf
and
loop
inc
mov
jl
push
mov
enter
xlat
dec
out
mov
sub
fnstenv
cdq
add
les
pushf
dec
sub
add
inc
addr16
cld
arpl
arpl
xor
cmp
jl
xor
jmp
xchg
push
push
sub
mov
mov
mov
pop
dec
outs
les
(bad)
dec
add
repnz
je
test
addr16
xchg
dec
mov
mov
imul
retf
adc
(bad)
inc
push
push
pushf
inc
xor
ret
mov
jl
xchg
mov
xchg
shl
inc
push
enter
jno
addr16
mov
inc
mov
push
mov
bnd
loop
ret
mov
or
loope
xor
and
sub
cmp
pop
inc
pop
pop
(bad)
stos
lea
cmc
ja
add
arpl
jae
pop
addr16
cld
and
dec
gs
xlat
ja
mov
xlat
pop
jns
mov
mov
adc
stc
in
sbb
add
jmp
fdiv
inc
jbe
mov
mov
pop
data16
sub
mov
push
mov
mov
(bad)
xor
out
es
cld
iret
pop
aaa
arpl
mov
push
dec
push
outs
xchg
xlat
jmp
dec
mov
xchg
loopne
xor
add
aaa
push
mov
das
popa
push
ret
(bad)
sti
pop
mov
sub
clc
jae
mov
lahf
fiadd
inc
lahf
cmps
imul
outs
repnz
adc
ror
adc
or
inc
adc
pop
jecxz
push
or
or
dec
sbb
and
icebp
pushf
add
cmp
mov
dec
outs
das
mov
fisttp
sahf
test
mov
add
pop
push
xchg
cs
imul
pop
aas
ss
sti
dec
in
(bad)
imul
sbb
or
adc
stc
rcl
mov
adc
call
and
cmc
call
sub
aad
out
sahf
das
js
mov
cmp
push
enter
call
cmps
pop
(bad)
pop
js
jmp
lock
in
sbb
add
inc
push
inc
push
inc
aaa
outs
popf
jmp
shl
aas
and
jmp
mov
inc
sub
jns
inc
arpl
sub
nop
loop
dec
in
dec
fdivp
mov
add
pop
push
enter
push
dec
stos
ds
mov
jle
add
outs
sub
sahf
aaa
mov
jg
dec
fmul
or
push
(bad)
out
dec
jecxz
enter
xchg
mov
add
outs
dec
dec
and
addr16
pushf
mov
stc
xchg
repz
dec
scas
cmc
cmp
rcr
jbe
shl
adc
scas
adc
or
rol
mov
sub
or
pushf
add
dec
(bad)
jg
ds
fiadd
in
or
sub
retf
js
clc
sbb
jl
adc
out
ja
jnp
enter
mov
cs
cmp
jae
pop
jmp
stos
std
and
jne
pop
push
cwde
pop
jmp
cld
test
xchg
repz
js
dec
jecxz
mov
or
adc
arpl
scas
pusha
cmp
stos
xchg
ds
mov
clc
out
sbb
mov
mov
and
jnp
repz
mov
xchg
ret
ja
sahf
xchg
xchg
or
shl
xchg
or
or
cwde
push
cld
pop
cli
cmp
mov
sbb
loope
xchg
retf
out
mul
and
adc
and
es
or
xchg
xchg
xchg
shl
aam
mov
pop
fcom
push
addr16
hlt
and
push
mov
test
sbb
jge
mov
cdq
pushf
sbb
mov
push
(bad)
cmp
push
movlps
pop
mul
push
jp
add
pop
mov
push
outs
and
sbb
dec
ret
cmp
sbb
xchg
loop
inc
(bad)
pop
mov
icebp
jb
cmp
mov
popa
xlat
mov
xor
cmp
sub
fcom
repz
arpl
jae
mov
push
cld
mov
mov
aad
sahf
jmp
aad
loopne
jbe
ror
fcomp
push
adc
xchg
sub
imul
cmps
ins
push
es
ret
mov
push
in
push
mov
cld
out
mov
(bad)
repz
fst
cmp
neg
adc
rcr
and
push
loop
repnz
sub
push
ins
mov
repnz
(bad)
and
push
stos
push
int3
xchg
mov
lods
xchg
pop
ret
sub
push
xor
jb
rcr
jae
and
arpl
scas
jae
pop
cs
pop
pop
push
test
arpl
pop
loop
dec
and
add
xchg
arpl
enter
pop
mov
cmps
(bad)
cmp
cmp
xlat
and
xor
fist
bound
aaa
xchg
mov
iret
mov
outs
xchg
pop
sbb
pop
xlat
mov
ret
pop
xor
add
aaa
aaa
and
addr16
mov
sub
cmps
jg
push
sub
inc
aam
aaa
out
daa
inc
xchg
inc
inc
push
aaa
cmc
not
jecxz
out
xchg
aas
mov
fwait
inc
xor
imul
adc
inc
cld
cld
xchg
add
mov
aaa
(bad)
rcl
and
inc
inc
daa
in
and
sbb
push
addr16
stos
cli
mov
sti
mov
(bad)
mov
dec
mov
ins
pop
imul
push
sysret
cmps
pop
mov
gs
mov
sar
ret
(bad)
(bad)
div
push
sti
arpl
ret
or
push
add
xchg
xchg
outs
or
(bad)
pop
xchg
dec
mov
ins
pop
imul
pop
cmc
push
push
add
fidiv
dec
push
(bad)
rcl
and
xor
inc
test
fild
in
or
xor
xchg
xor
das
jecxz
mov
ret
pmaddwd
mov
fist
jmp
rol
sahf
out
mov
cmps
cmps
push
mov
(bad)
sbb
and
push
xchg
arpl
xchg
ja
ret
adc
jecxz
xrelease
add
cmps
pop
jg
cli
jae
inc
fwait
je
repz
xchg
mov
dec
mov
jo
jecxz
sub
xor
in
mov
imul
xchg
jecxz
repz
ret
push
xchg
push
and
push
pop
xchg
daa
lahf
aaa
mov
rcl
inc
push
in
jg
jle
add
pop
mov
xlat
jmp
cmp
add
aaa
hlt
inc
(bad)
jbe
xor
xor
ret
jmp
push
movs
xor
and
inc
call
pop
mov
or
jecxz
(bad)
xlat
dec
out
test
add
mov
pop
les
add
repz
(bad)
sbb
ret
imul
mov
iret
aaa
aaa
in
inc
fist
and
ja
mov
xchg
pop
cmps
fs
out
pop
idiv
pop
pushfw
imul
jae
pop
outs
push
sbb
jg
xchg
inc
sbb
in
ret
mov
or
daa
cdq
xor
mov
mov
ret
sbb
loop
jnp
xchg
sub
and
daa
sti
imul
jmp
(bad)
cmps
rcr
iret
out
xchg
and
pop
clc
and
mov
inc
std
push
out
xlat
cld
cs
mov
sub
mov
mov
sub
shl
loope
aaa
push
inc
push
fdivr
xchg
xlat
push
div
xchg
mov
xor
iret
stos
sar
add
int3
jae
inc
jnp
pop
out
mov
mov
arpl
mov
fbld
ja
hlt
xchg
into
xchg
adc
jne
push
push
cmps
popa
cli
and
and
dec
add
mov
lahf
arpl
jb
sti
mov
mov
popa
not
mov
scas
cmp
inc
add
icebp
add
push
mov
retf
(bad)
stc
xchg
pop
mov
jnp
and
das
or
fs
add
enter
fwait
mov
or
and
mov
dec
push
int3
sahf
add
inc
ror
fiadd
lods
xor
mov
ret
mov
add
xchg
ret
out
es
call
es
lods
mov
xor
mov
ror
loop
repnz
lods
jae
dec
inc
xlat
shl
push
fwait
mov
jnp
push
mov
or
xchg
xchg
cmp
add
add
push
dec
mov
mov
xchg
movs
cmps
(bad)
repz
shl
clc
and
xor
jl
push
push
jbe
and
or
(bad)
shl
xchg
mov
pop
inc
adc
arpl
and
add
gs
aam
sub
mov
sbb
daa
xor
add
add
mov
or
jg
pop
adc
cmp
add
pop
jbe
mov
xor
dec
jb
cmps
ins
inc
xor
or
cmp
(bad)
lods
aas
dec
mov
jl
clc
cmp
add
inc
adc
xchg
dec
pop
aas
(bad)
(bad)
in
vmovaps
ins
sub
inc
arpl
mov
jmp
daa
inc
and
mov
fwait
sub
push
ror
mov
ret
lock
aaa
dec
jb
lods
adc
out
jmp
sub
mov
xchg
mov
dec
mov
inc
lock
push
push
data16
ja
ret
jae
jl
push
dec
sbb
jle
xchg
sbb
xchg
int3
pop
xlat
loope
retf
jmp
mov
cwde
pop
and
mov
push
cmps
mov
test
xor
(bad)
fs
ss
inc
and
jp
js
inc
inc
jecxz
aas
pop
xor
test
jmp
cld
retf
(bad)
out
mov
push
dec
cmp
neg
xchg
and
repnz
ret
cmp
sub
adc
test
imul
daa
add
add
push
inc
xchg
ja
push
jmp
xchg
sub
out
mov
jno
pop
xlat
arpl
fcom
sbb
dec
sub
loop
mov
add
xlat
cmp
add
loopne
stos
push
jmp
push
sub
mov
jg
rcl
not
ds
aad
cmp
rcr
cld
jbe
jno
add
ja
add
jnp
mov
sbb
out
mov
push
daa
div
sub
bound
push
movs
push
aas
out
loop
or
xchg
dec
mov
mov
cmp
sar
call
xor
add
ja
shl
mov
(bad)
sti
jne
mov
ja
push
iret
cdq
pop
arpl
lods
jb
pop
mov
and
fwait
xchg
sub
int3
inc
add
enter
push
sti
lds
mov
mov
(bad)
dec
ret
lods
repz
xor
cdq
fucom
pushf
push
aaa
xor
nop
ja
test
xchg
jl
inc
pop
and
imul
inc
mov
ss
clc
mov
inc
(bad)
arpl
(bad)
inc
pop
xchg
mov
(bad)
dec
xchg
stos
out
sub
xor
arpl
ja
ret
inc
jns
mov
cmps
xrelease
xor
fwait
daa
dec
jb
inc
mov
sbb
adc
fs
out
jecxz
jg
push
fsubr
add
fs
jae
pushf
ds
ja
xchg
jmp
push
push
mov
inc
xchg
lahf
and
ror
daa
and
sub
sbb
xchg
ja
cmps
mov
(bad)
iret
xchg
je
sahf
repz
jae
dec
mov
pop
lock
adc
inc
movs
mov
mov
loop
mov
and
shl
xor
loope
adc
xchg
adc
addr16
xchg
cli
xchg
(bad)
add
mov
out
imul
les
arpl
push
mov
fidiv
repnz
xor
call
jg
in
outs
arpl
push
push
(bad)
jmp
scas
repz
mov
dec
push
imul
sar
inc
jae
inc
inc
push
pop
mov
cmps
or
add
mov
and
adc
test
jae
fbld
xor
xchg
fisub
xchg
and
push
mov
adc
in
aaa
mov
mov
rol
icebp
ret
cmps
pop
xor
out
mov
push
xor
retf
xor
push
sbb
xor
out
xor
cmp
(bad)
aas
dec
jae
call
or
push
arpl
xor
jmp
(bad)
mov
cmp
add
cmc
jbe
inc
pop
adc
out
bound
pop
imul
ins
repz
sub
and
cld
xchg
mov
mov
xrelease
dec
push
out
add
and
mov
jle
jns
push
adc
addr16
and
test
jecxz
repz
repz
dec
jb
lods
adc
ss
inc
pop
cmps
pop
mov
(bad)
xchg
dec
jecxz
dec
ror
cmp
jecxz
xor
iret
cdq
pop
arpl
mov
loop
fs
jo
adc
mov
jb
push
jae
(bad)
addr16
aad
mov
xchg
dec
(bad)
xchg
pop
jecxz
movs
add
dec
rcl
push
aam
and
ds
add
ror
loop
mov
or
mov
adc
aaa
test
rcpps
ins
inc
mov
cmps
jecxz
repz
ret
mov
push
jmp
jnp
fisttp
add
mov
pop
xchg
jnp
(bad)
loopne
cmp
ret
psrlq
adc
fidivr
inc
lahf
push
xor
xlat
neg
cmps
jnp
mov
dec
sbb
cmc
sub
loop
and
out
daa
jmp
adc
adc
out
mov
dec
or
or
mov
fs
inc
jmp
sbb
test
sub
cmps
jg
push
sub
inc
mov
je
push
mov
push
lahf
mov
mov
(bad)
repnz
repnz
ret
mov
xor
hlt
xor
mov
inc
arpl
out
mov
scas
cmps
fdiv
pusha
out
(bad)
dec
xor
arpl
push
ja
ret
adc
jecxz
xrelease
push
pop
jge
jnp
cli
jae
inc
fwait
jnp
sub
mov
dec
mov
xlat
sub
xor
adc
fisub
in
mov
xor
jnp
jecxz
repz
ret
push
xchg
push
and
sbb
dec
daa
aaa
aaa
mov
rcl
dec
push
cmp
add
pop
iret
(bad)
mov
mov
pop
fstp
add
arpl
jg
call
jecxz
mov
jmp
popf
ret
jecxz
push
movs
xor
das
daa
pop
aaa
sub
adc
addr16
jmp
dec
xlat
adc
das
(bad)
mov
pop
test
or
jle
jae
mov
mov
jp
inc
(bad)
sbb
ret
scas
rcl
and
ja
add
aas
aaa
sub
push
stos
and
ja
lods
mov
cmp
cmps
fs
jmp
pop
ficom
daa
sti
sbb
add
inc
mov
aam
outs
cwde
xchg
lds
push
xlat
sub
shl
inc
test
fisttp
xor
lahf
out
mov
daa
pop
ret
adc
(bad)
jnp
add
pop
mov
xchg
fist
daa
retf
arpl
cs
mul
out
das
mov
jl
push
jmp
inc
daa
in
mov
ss
bound
(bad)
cmps
std
stos
mov
push
sbb
adc
mov
mov
int3
pop
xchg
stos
ficom
mov
and
push
sbb
jle
xchg
test
adc
or
shl
push
cmp
scas
(bad)
cmps
xchg
dec
out
jmp
push
and
push
out
pop
lahf
test
push
mov
xchg
mov
loop
xchg
ret
stos
push
push
cmps
inc
xor
xchg
pusha
ret
out
dec
ins
jecxz
stos
hlt
aaa
pop
addr16
dec
xor
test
arpl
jnp
dec
idiv
adc
outs
fucomip
add
adc
shl
fldcw
push
mov
mov
mov
and
bound
pop
sti
mov
retf
cmp
sub
sbb
mov
adc
scas
in
xor
xor
arpl
mov
or
xchg
and
xchg
cmp
xchg
sub
ins
jns
pushf
shl
or
jo
inc
stos
lahf
je
push
or
daa
adc
stos
push
xor
cld
aaa
nop
fisub
fadd
pop
jbe
sbb
addr16
jbe
dec
xor
dec
sbb
mov
mov
pop
and
popf
test
sub
jae
fisub
ins
pop
mov
test
xor
mov
sbb
ds
pop
jg
cmps
cmp
cld
cli
sahf
loop
mov
pop
dec
ins
sub
mov
jmp
lods
inc
and
clc
push
stos
pop
and
loop
mov
retf
sbb
test
sbb
push
inc
data16
scas
jnp
lods
out
jmp
stos
push
mov
arpl
cmp
fcmovb
cs
movs
test
push
fs
ja
enter
pop
xchg
int
xchg
cmps
sbb
and
mov
mov
push
daa
ret
aaa
movs
dec
pop
inc
pop
cmps
pop
mov
cmps
sti
mov
or
sub
les
call
adc
push
scas
sbb
jbe
std
leave
xchg
xchg
clc
xchg
mov
rcr
das
and
mov
mov
cmps
push
ins
(bad)
push
cld
ja
xchg
adc
jae
call
add
inc
lock
push
inc
push
aaa
pushf
les
xor
mov
and
sbb
sbb
pop
out
mov
inc
sbb
pop
ss
add
bound
addr16
cmp
dec
mov
ret
mov
lock
push
or
mov
stos
xchg
ja
ret
cmp
lods
cmps
retf
(bad)
mov
ret
mov
or
iret
adc
arpl
aaa
fadd
dec
push
cs
mov
inc
cmps
les
or
pop
mov
aaa
cmp
push
push
movs
push
and
imul
pop
xchg
and
xor
(bad)
shl
xor
in
fwait
pusha
inc
jnp
push
xchg
outs
jecxz
js
cmp
cmp
test
mov
push
sbb
pop
push
pop
ret
(bad)
mov
push
mov
dec
push
imul
jmp
inc
inc
push
pop
mov
cmps
add
add
mov
and
adc
mov
addr16
xor
xchg
fisub
mov
ret
and
scas
and
mov
push
cwde
sub
sub
out
mov
arpl
xchg
mov
(bad)
dec
xchg
stos
out
pop
jp
xor
add
arpl
ja
ret
inc
inc
retf
push
xchg
xor
mov
inc
mov
sbb
jnp
test
inc
(bad)
sti
xlat
push
in
pop
add
adc
jae
mov
xchg
jmp
push
push
mov
inc
xchg
lahf
and
ror
daa
xlat
aaa
sub
sbb
test
ja
push
mov
(bad)
iret
xchg
je
sahf
repz
add
dec
mov
pop
lock
daa
adc
arpl
aas
inc
movs
mov
mov
loop
mov
and
outs
xor
out
adc
or
adc
addr16
xchg
cli
xchg
(bad)
add
mov
out
imul
ror
out
fs
rcpps
cmps
dec
repnz
xor
call
push
adc
adc
sbb
jb
mov
imul
jae
fdivp
imul
idiv
jle
inc
je
addr16
add
lahf
sub
push
or
repz
mov
jbe
xor
test
cwde
shl
mov
cmps
(bad)
mov
dec
cmp
inc
jmp
in
mov
cwde
repz
mov
in
mov
dec
cmps
sbb
jecxz
js
or
aad
and
cmc
scas
adc
arpl
and
hlt
inc
cmp
mov
xchg
jae
int3
sahf
cld
(bad)
fs
bound
push
lods
mov
xchg
not
cmps
(bad)
mov
ror
(bad)
ficomp
jae
pop
sbb
mov
and
out
(bad)
push
sbb
or
or
outs
inc
inc
psubusb
enter
adc
xchg
pop
jbe
(bad)
cmp
or
pop
movs
test
lods
push
es
adc
adc
add
out
les
cmp
dec
mov
dec
mov
ja
pop
mov
(bad)
daa
inc
and
mov
push
xlat
add
les
pop
jns
(bad)
xlat
ret
jmp
arpl
push
dec
pop
repnz
movs
add
mov
ss
aas
xor
pop
ja
push
jne
jg
xchg
(bad)
jbe
enter
jb
int3
add
pushf
inc
shl
ja
xor
arpl
mov
and
inc
jle
xor
or
outs
iret
paddw
xchg
daa
mov
fwait
rcl
fimul
jl
xchg
mov
ret
mov
mul
mov
push
jae
or
push
cmp
cmp
out
sbb
pop
cmp
xchg
(bad)
jl
clc
aas
push
add
loopne
es
jbe
cmp
jl
das
repz
dec
test
xchg
bound
cld
xor
mov
cwde
push
daa
dec
or
or
mov
mov
sti
and
push
mov
jb
ss
jbe
retf
imul
ret
out
jl
adc
adc
es
pop
xchg
stos
data16
out
dec
push
sbb
adc
xchg
mov
sub
sti
mov
enter
push
inc
jmp
jg
ins
cli
repnz
repz
leave
add
inc
adc
add
ret
dec
inc
iret
sti
xchg
pop
add
fadd
jle
daa
loop
cmps
das
clc
ss
daa
jnp
jnp
fwait
rcl
lods
lahf
es
ja
jg
ins
mov
iret
seto
js
aaa
pushf
push
sub
mov
jl
inc
ret
(bad)
ror
ja
xchg
retf
clc
xchg
ret
repnz
mul
in
inc
iret
in
mov
ss
push
mov
ret
jg
(bad)
mov
out
ja
cmp
loopne
shl
inc
adc
mov
jae
adc
scas
cs
mov
xor
dec
repnz
retf
pop
add
sub
daa
or
call
pushf
aam
pop
or
inc
mov
mov
cmp
jecxz
sub
addr16
out
inc
and
bound
mov
inc
xor
fwait
out
dec
ror
loop
fistp
dec
xor
mov
push
fadd
mov
addr16
fwait
leave
fidiv
push
jecxz
pop
out
jecxz
div
push
push
ds
scas
add
cld
xchg
cmp
xor
dec
out
out
push
mov
mov
in
enter
mov
repz
push
mov
in
rol
sub
pop
or
xor
mov
mov
pop
test
jno
xchg
sbb
mov
sti
(bad)
sete
hlt
stos
imul
dec
jae
add
mov
pop
add
loope
mov
shr
retf
push
push
adc
and
xchg
cli
repnz
in
mul
inc
cmp
jb
ret
mov
mov
pop
inc
pop
xchg
cmp
xlat
dec
or
or
sub
jae
mov
test
and
cmp
dec
ret
sub
push
jp
clc
fist
cdq
daa
pop
jecxz
add
jae
test
mov
jp
ret
jno
clc
int3
pop
jmp
in
jp
inc
cli
push
mov
push
and
xchg
xchg
push
in
(bad)
movs
sub
je
pushf
add
and
(bad)
push
mov
loop
hlt
aaa
xlat
shl
repz
mov
call
aaa
sbb
ret
push
ja
or
and
adc
mov
not
pop
aaa
inc
adc
in
push
aaa
arpl
inc
xchg
cmps
adc
mov
int3
dec
cmps
das
in
es
xor
aaa
adc
xchg
ret
sbb
(bad)
mov
xlat
jmp
mov
and
jp
xor
inc
sbb
mov
mov
pusha
das
sub
out
mov
lock
outs
mov
lods
xchg
xor
and
fwait
sub
test
sti
mov
push
sbb
test
xchg
mov
jmp
jmp
cmp
fadd
aaa
push
sahf
mov
out
out
cmp
(bad)
sub
jbe
(bad)
fsub
stos
cmp
jmp
pushf
les
or
es
(bad)
into
jg
loop
repnz
pop
xchg
push
sub
aaa
inc
daa
adc
dec
in
(bad)
ret
mov
sahf
movs
xchg
icebp
push
ficom
and
cmp
jae
xor
and
cmps
push
mov
neg
mov
ret
out
jl
repnz
fcmovnbe
push
mov
arpl
lock
fwait
cmp
mov
mov
cmps
sbb
mov
jb
pop
data16
rol
dec
xchg
rcl
pop
ret
sbb
push
in
not
inc
adc
mov
ror
cmps
xor
adc
sub
test
push
rcr
xchg
push
jb
cmp
cmps
sti
mov
sub
pop
mov
jb
pop
adc
clc
fild
push
jmp
push
cmp
cmp
mov
mov
push
ja
(bad)
jmp
add
inc
cmp
loop
xchg
mov
ins
popf
ds
rcl
inc
mov
scas
pop
(bad)
push
jecxz
sti
fild
pop
jp
clc
mov
cmp
jb
mov
sub
jne
xlat
or
cmp
adc
jbe
add
ffree
and
ja
ret
and
loop
cmp
outs
inc
in
pop
inc
(bad)
cld
pop
sti
rdpmc
lahf
and
fwait
addr16
and
in
xor
popa
xchg
pop
push
fwait
jle
cwde
cs
sub
add
es
pop
enter
je
mov
nop
pop
push
cli
and
xor
mov
push
aaa
mov
out
aas
movs
in
xor
cmps
xlat
dec
mov
push
jmp
mul
xor
inc
pop
xchg
sbb
mov
mov
or
sbb
jecxz
dec
pandn
and
dec
aad
cdq
xor
retf
push
in
ficomp
shl
loop
das
out
jge
ins
ja
push
daa
push
hlt
pushf
(bad)
bound
and
xor
cmps
stc
mov
xchg
iret
jge
fsubr
adc
movs
movntq
ins
cmp
push
mov
idiv
iret
jbe
adc
inc
stos
in
cmp
shl
(bad)
(bad)
cmps
outs
cmp
jno
adc
pop
daa
sti
aaa
xor
mov
push
scas
sbb
xchg
jecxz
out
pushf
out
loop
push
in
xor
das
jb
inc
daa
add
or
xchg
(bad)
(bad)
cmps
push
call
push
ss
push
popa
dec
add
push
in
or
leave
xchg
mov
pop
(bad)
movs
mov
mov
mov
gs
cld
xor
push
push
mov
mov
jmp
cmps
mov
xchg
imul
add
outs
push
div
push
mov
push
inc
mov
cmps
ins
mov
(bad)
out
pop
fadd
xchg
push
xor
cmp
push
adc
lods
cld
mov
cli
xchg
cmps
cmps
mov
xchg
sbb
out
add
into
sub
add
mov
or
jg
cmps
dec
mov
cmp
xchg
pusha
out
shl
xor
into
push
xchg
arpl
fwait
mov
adc
jecxz
or
xchg
adc
in
dec
fdivr
jae
inc
fwait
pusha
inc
mov
neg
xor
dec
movs
mov
(bad)
pop
sub
mov
xor
add
in
fisub
in
mov
jmp
pop
shl
cmps
jnp
jecxz
repz
push
xchg
push
and
push
pop
(bad)
daa
out
enter
push
stos
push
push
mov
mov
xlat
inc
sbb
mov
pop
(bad)
add
adc
pushf
scas
aaa
hlt
inc
(bad)
gs
xchg
push
or
repz
pop
sub
movs
xor
xor
mov
mov
(bad)
jl
xlat
adc
das
vmovsd
inc
or
inc
nop
pop
jmp
adc
arpl
push
lahf
xchg
xchg
rcr
repz
(bad)
sbb
ret
shl
fsubr
ja
add
es
mov
xor
dec
mov
inc
add
pop
cmps
fs
mul
add
(bad)
ficom
daa
sti
add
jae
mov
outs
xchg
or
sar
and
int3
inc
adc
push
inc
mov
xor
xchg
cmp
fild
(bad)
rcl
bound
add
jnp
jne
mov
xchg
mov
mov
cmp
push
fdivr
jb
ret
add
push
jbe
jae
rcl
js
sbb
sub
jl
add
xlat
inc
out
jle
inc
arpl
clc
push
aad
cmps
mov
mov
push
lods
arpl
inc
inc
scas
mov
out
pop
pop
jecxz
jbe
(bad)
dec
aaa
jb
jae
into
or
cwde
xchg
aad
fcomip
push
rcl
loope
xor
nop
sar
dec
push
test
movs
adc
mov
js
dec
aam
pop
xor
in
enter
aas
imul
mov
(bad)
out
mov
js
aas
push
sbb
icebp
xor
add
test
xchg
mov
inc
je
inc
scas
dec
cmp
sbb
out
stc
jbe
or
sahf
in
cwde
inc
mov
xchg
sahf
mov
cli
jo
inc
sub
xor
push
adc
add
aas
pusha
ins
cdq
nop
pop
lea
or
jae
pop
int3
sbb
xor
pop
xor
fldenv
lea
dec
or
retf
sbb
cmp
sub
sub
fdiv
hlt
(bad)
mul
jmp
pop
(bad)
push
jo
dec
stc
add
adc
sub
in
jmp
push
dec
mov
dec
inc
pop
ins
jmp
jmp
adc
arpl
retf
cwde
push
loopne
and
add
fwait
or
or
xor
ret
stos
fld
leave
sub
mov
push
lds
aad
mov
ins
mov
jnp
loop
(bad)
sbb
ja
arpl
inc
pop
inc
sub
cmp
dec
popa
pop
sub
es
xor
add
adc
arpl
dec
arpl
fist
cmp
push
out
jle
inc
out
dec
fmul
add
push
mov
shl
rol
pop
xor
ror
push
push
xor
lock
and
adc
mov
add
out
add
ds
(bad)
int3
xchg
push
ja
cmp
(bad)
stos
sub
ja
ret
jae
xlat
cli
push
ss
jae
int3
dec
inc
je
icebp
daa
add
inc
ret
fbstp
xchg
push
out
js
(bad)
out
(bad)
cld
iret
inc
pop
sbb
cmp
fimul
dec
xchg
aam
out
jl
jae
xchg
cmp
int
or
or
repnz
mov
jmp
js
iret
and
cmc
in
and
add
inc
aaa
mov
sti
and
push
mov
and
push
mov
push
es
adc
adc
fldcw
cmps
xchg
pop
sub
cmp
pop
loop
stos
xor
push
daa
ror
sub
push
cmp
xchg
in
cmp
mov
mov
add
(bad)
sbb
mov
jg
mov
mov
enter
fmul
inc
xchg
arpl
enter
rcr
pop
imul
jbe
ret
xchg
pushf
push
ret
inc
mov
push
xchg
shl
push
pop
ins
int3
outs
sar
in
ror
mov
ss
cdq
mov
xor
and
or
loop
jmp
xor
adc
call
and
sub
xchg
aas
jecxz
sbb
and
xchg
std
shr
mov
mov
inc
cld
mov
pop
adc
push
in
jb
inc
adc
enter
div
fidiv
pop
dec
xlat
ds
mov
xlat
ret
adc
sub
and
mov
inc
mov
adc
(bad)
cmps
add
add
jmp
xchg
push
jmp
div
icebp
and
sbb
sti
push
push
push
rol
and
mov
pop
int
repz
imul
cmps
inc
div
xor
out
(bad)
push
and
stos
(bad)
sub
push
loopne
add
ds
jbe
mov
ror
sbb
(bad)
into
xlat
xchg
nop
sbb
shl
inc
jno
repz
clc
adc
mov
into
and
in
shl
lock
daa
pop
jb
mov
js
pop
inc
mov
inc
jecxz
cdq
ret
cmp
mov
cmps
push
enter
cmp
jae
fsub
push
dec
out
mov
mov
les
mov
jae
adc
adc
pop
xor
jae
cmp
cld
jo
jne
mov
ret
aad
ret
cmps
push
mov
das
jns
ret
sbb
add
in
xchg
rcl
sbb
dec
(bad)
pop
sbb
jecxz
xor
(bad)
out
or
and
in
addr16
scas
and
hlt
xchg
push
jl
xchg
out
sbb
push
mov
fiadd
call
jb
jmp
xchg
pop
jmp
test
sub
out
or
arpl
add
push
mov
push
pop
push
mov
xlat
fistp
sub
imul
stc
dec
aaa
arpl
fs
shrd
dec
repnz
xor
call
jg
in
outs
arpl
push
push
pop
jmp
scas
or
sbb
shl
add
dec
push
imul
call
inc
inc
push
pop
pop
inc
push
into
and
sub
pop
mov
and
in
hlt
sbb
push
jmp
xor
js
jbe
cmps
xchg
sbb
add
mov
and
pop
pop
push
cmps
sub
out
push
fs
dec
push
popa
(bad)
xchg
mov
(bad)
dec
xchg
stos
sbb
adc
add
pushf
test
ja
ret
inc
inc
retf
mov
sub
rcr
(bad)
daa
dec
jb
mov
push
xor
fs
jecxz
mov
push
jecxz
pop
add
adc
mov
xchg
jmp
push
push
mov
inc
xchg
lahf
fadd
(bad)
dec
add
sti
aaa
sub
sbb
mov
iret
ins
je
sahf
repz
jecxz
dec
mov
clc
lock
pop
daa
adc
add
aas
mov
xchg
dec
and
repz
retf
xchg
es
or
pop
mov
push
enter
push
into
aaa
nop
sub
aam
pop
sbb
pop
(bad)
or
xchg
or
cmp
movs
adc
pop
addr16
xchg
addr16
cmp
(bad)
repnz
cmp
ret
ds
or
adc
jb
cld
dec
cmp
xlat
mov
das
div
sbb
and
cmps
inc
ss
fist
sub
adc
jp
xor
test
sub
xor
xlat
sar
(bad)
adc
adc
pop
(bad)
or
sub
fmul
push
adc
push
ja
test
addr16
mov
sar
mov
cvttps2pi
push
clc
call
mov
into
mov
ja
fidivr
dec
enterw
and
mov
cld
daa
cdq
enter
push
jle
xchg
cmp
test
push
jmp
mul
push
xor
add
push
pop
jbe
scas
push
xchg
jb
jne
or
xchg
clc
ins
dec
idiv
xor
jmp
jg
shl
push
or
xchg
aaa
pushf
ja
push
mov
js
inc
jl
xchg
ret
sti
cmp
jecxz
dec
psllq
stos
inc
enter
bswap
or
cmp
fistp
aaa
das
xor
push
iret
push
mov
mov
push
popw
adc
in
(bad)
iret
xor
scas
xchg
pop
and
arpl
stos
(bad)
pop
push
sbb
data16
fidivr
mov
idiv
fiadd
out
push
enter
xchg
mov
pushf
mov
inc
mov
iret
xlat
cmp
rcr
cld
jbe
jno
add
mov
pop
test
repnz
and
ja
into
inc
aaa
mov
cwde
or
sbb
or
pop
scas
sbb
ja
idiv
mov
inc
xor
mov
mov
sbb
xchg
jl
clc
push
mov
inc
ds
icebp
mov
and
cmp
ret
cmp
imul
daa
dec
es
xor
mov
xchg
mov
fisttp
ja
dec
mov
xchg
shr
shl
mov
int3
push
lea
mov
ror
loop
mov
(bad)
sub
mov
pop
jmp
jae
pop
in
push
dec
mov
loop
mov
inc
or
(bad)
jecxz
test
mov
jb
inc
sub
addr16
mov
ror
sbb
(bad)
out
xchg
xor
pop
jbe
lods
fmul
bound
push
enter
mov
scas
or
or
adc
push
sar
aaa
arpl
fs
shrd
dec
repnz
xor
call
jg
in
outs
arpl
push
push
pop
jmp
scas
or
sbb
shl
xchg
pop
dec
push
imul
call
inc
inc
push
pop
pop
inc
ins
into
and
sub
pop
mov
and
fs
dec
in
hlt
sbb
push
push
addr16
xor
js
ja
cmps
xchg
cmps
jecxz
mov
cmp
xor
push
cmps
sub
fist
out
dec
push
(bad)
(bad)
xchg
mov
(bad)
dec
xchg
stos
sbb
adc
add
pushf
test
ja
ret
inc
inc
retf
(bad)
xrelease
xor
retf
daa
dec
jb
mov
push
mov
test
(bad)
jl
jo
jecxz
daa
xlat
push
jecxz
pop
add
adc
mov
xchg
jmp
push
push
mov
inc
xchg
lahf
fadd
(bad)
dec
add
push
aaa
sub
sbb
mov
iret
ins
je
sahf
repz
scas
out
mov
clc
lock
pop
daa
adc
mov
xchg
xchg
push
and
outs
int3
aam
jle
aaa
es
adc
out
xor
xchg
mov
(bad)
or
xchg
sbb
jmp
cmps
add
pop
pop
retf
imul
xchg
inc
jmp
or
stos
xchg
push
cwde
lods
(bad)
(bad)
xchg
dec
mov
mov
xchg
xchg
shl
push
mov
jb
inc
and
dec
or
neg
xor
mov
cmp
sahf
jl
clc
pusha
push
add
(bad)
std
jae
lahf
push
jae
retf
push
pop
out
jecxz
repz
(bad)
mov
mov
clc
out
sbb
clc
sub
jnp
mov
jl
sahf
mov
mov
sar
push
ficom
arpl
aaa
popf
adc
push
pop
pop
add
out
or
xchg
mov
mov
cmp
cli
sub
fs
mov
aaa
out
inc
jb
pop
xor
dec
mov
jecxz
out
or
call
arpl
inc
bound
stos
inc
jmp
pop
inc
mov
test
adc
jle
in
pushf
push
jae
dec
addr16
sbb
add
cmps
scas
(bad)
lods
xlat
add
aaa
arpl
es
mov
xchg
not
das
push
dec
outs
dec
js
inc
push
out
ins
out
icebp
jmp
bound
stos
addr16
cld
sub
mov
mov
into
cmp
cmp
xlat
cmp
or
push
ja
mov
add
enter
mov
cmps
xchg
dec
test
bound
cmps
mov
xlat
mov
pop
add
mov
or
(bad)
repz
nop
or
rcl
int3
jl
fistp
es
inc
into
rol
cmps
xchg
cmps
ins
mov
or
dec
sbb
and
cmp
mov
dec
ret
push
ja
inc
enter
mov
jecxz
cmps
pusha
imul
and
mov
stc
arpl
push
jg
in
addr16
jno
push
cmp
das
jo
inc
xchg
sub
in
push
int3
call
mov
arpl
addr16
rol
dec
jo
xlat
xchg
fnstenv
and
aaa
arpl
or
out
sti
(bad)
(bad)
loop
cmps
cmps
into
repnz
call
jmp
cmp
push
test
call
jl
mov
ja
jmp
shl
data16
xchg
cs
jb
stos
and
ret
out
cdq
mov
mov
aam
out
mov
pop
cld
push
push
add
mov
xor
sbb
cld
leave
add
imul
in
test
and
bound
clc
mov
push
and
xor
ror
pop
inc
or
mov
dec
jbe
or
xchg
fbld
lea
movs
cwde
or
fs
retf
stos
repnz
call
jp
fsubr
or
test
push
xor
mov
jmp
xor
stos
arpl
xor
pop
mov
inc
addr16
pop
inc
fmul
dec
mov
loop
or
inc
inc
sub
pop
pop
retf
mov
addr16
cld
cwde
repz
adc
loop
dec
push
mov
mov
jbe
pop
lock
imul
dec
movs
mov
(bad)
cmps
xchg
dec
xchg
cmp
out
cmp
jae
fadd
cmp
mov
retf
xor
mov
dec
(bad)
mov
shr
lea
and
inc
mov
dec
sub
ficomp
jae
inc
mul
pop
fild
push
daa
xchg
mov
mov
adc
fidiv
loop
xchg
push
mov
repz
mov
call
lahf
inc
ja
mov
inc
cwde
or
xchg
ins
push
jmp
jle
cmp
shl
dec
clc
mov
enter
stos
inc
mov
loopne
push
mov
dec
push
cmp
pop
call
pop
jmp
inc
scas
daa
retf
inc
sbb
or
cmp
(bad)
mov
neg
adc
add
int3
mov
out
mov
fistp
or
inc
lea
xor
push
inc
sub
jb
adc
inc
adc
bound
dec
arpl
cs
pop
mov
mov
add
jae
dec
rol
cs
cmp
jecxz
jmp
das
sbb
sahf
add
mov
int3
pop
test
mov
cmp
hlt
xlat
je
(bad)
jnp
xchg
cmps
or
jo
rcl
push
mov
(bad)
mov
loopne
push
cmps
ret
cli
loop
not
aaa
out
repz
and
jb
aaa
ins
inc
cs
inc
mov
mov
jl
xchg
aas
jecxz
repz
maskmovq
mul
cmc
cld
cld
mov
mov
inc
iret
retf
xor
xchg
ds
imul
xchg
mov
pop
or
iret
inc
cld
sub
imul
mov
adc
daa
fidivr
push
cmp
js
enter
and
add
popa
pop
xchg
lahf
pop
mov
and
dec
dec
xchg
fstp
cmp
(bad)
repz
mov
inc
sub
ja
les
cmps
push
jl
xor
js
test
je
mov
sub
out
pop
rcl
aam
ins
ss
sbb
add
or
mov
mov
aam
sub
clc
iret
push
sbb
jnp
jp
sub
ror
xchg
repnz
jo
cmp
ror
jb
ja
lods
cwde
cmp
jg
adc
add
xchg
ficomp
push
dec
scas
(bad)
xor
test
rcl
or
and
xor
mov
js
sub
xor
inc
inc
inc
ret
daa
pop
aaa
mov
mov
(bad)
xor
pop
out
in
cmp
das
in
loop
inc
ins
dec
jmp
inc
jb
mov
pop
mov
xchg
(bad)
sub
loope
ret
inc
adc
add
inc
mov
jmp
fcomp
fs
out
dec
push
(bad)
dec
out
int3
adc
outs
mov
aad
inc
popa
aas
xor
push
xor
cmps
fisub
xchg
addr16
xor
mov
mov
push
jbe
je
fwait
xchg
mov
push
cli
test
enter
orps
add
inc
enter
sub
mov
ja
in
xchg
lods
and
aas
daa
xchg
out
rol
cld
repz
enter
or
cmp
js
xlat
nop
rcl
in
mov
sub
(bad)
(bad)
neg
mov
aaa
dec
ss
jbe
and
out
dec
rcr
ins
mov
ret
stos
pop
jp
test
pop
inc
fsubr
jp
stos
clc
adc
ret
(bad)
cmps
xor
sbb
mov
daa
div
out
pop
arpl
ds
addr16
adc
not
dec
out
repz
pop
and
mov
mov
ja
xchg
jno
mov
jae
pusha
xor
xchg
ins
loopne
jp
int3
pop
mov
adc
adc
adc
xor
adc
loope
(bad)
xchg
mul
jmp
sub
scas
sar
mov
xchg
cmp
lock
cmp
or
stc
push
cmp
aaa
mov
jp
sahf
sub
dec
inc
aaa
xor
or
test
xchg
aas
xor
cmp
mov
repz
adc
pop
stos
pop
ja
ret
sbb
mov
mov
xchg
loope
xor
retf
jb
aaa
add
out
cs
retf
pop
out
sbb
hlt
xchg
sbb
and
inc
daa
in
jae
push
fwait
adc
test
push
mov
xchg
ret
mov
imul
ja
mov
es
inc
adc
push
cmp
and
outs
aaa
js
ret
mov
neg
push
int3
pop
adc
dec
out
into
ja
retf
cld
sub
aaa
xchg
(bad)
(bad)
div
mov
jmp
stos
adc
pushf
inc
and
data16
pop
xor
jmp
dec
inc
jecxz
jl
xor
adc
fist
int3
pop
push
dec
pop
inc
add
iret
out
mov
pop
pop
popf
outs
sub
dec
and
fs
sbb
push
jb
xor
ds
or
xlat
mov
int3
xor
popw
lds
and
aaa
arpl
test
int3
jb
gs
xchg
aad
mov
pop
push
(bad)
shl
mov
adc
xchg
cmp
sub
mov
xchg
pop
out
push
jecxz
cmc
ss
cmp
or
push
cmc
call
and
xchg
jnp
adc
push
fcomp
loope
mov
xchg
loopne
pop
fadd
pop
mov
retf
mov
(bad)
push
(bad)
int3
test
and
mov
jno
xor
push
xor
(bad)
ins
sub
inc
stos
cmp
test
lock
mov
push
hlt
es
call
loope
repnz
das
sub
outs
mov
xchg
add
or
xchg
inc
rcl
xchg
(bad)
xor
call
push
mov
push
adc
jmp
pop
movs
retf
inc
jp
dec
in
mov
mov
pushf
mov
jns
xor
mov
mov
push
xchg
inc
rcl
(bad)
xchg
out
aaa
mov
repz
mov
aaa
out
sar
stos
xchg
test
dec
cmc
pop
cmp
aam
xor
xlat
call
pop
jae
inc
jb
fwait
leave
cli
into
xchg
or
sub
sub
push
fwait
inc
aaa
or
xchg
dec
shr
push
mov
xor
scas
mov
jl
aaa
push
and
pop
adc
shl
cmc
call
es
inc
fwait
repz
mov
(bad)
pop
sbb
cmps
xchg
loope
mul
push
mov
xchg
daa
inc
rcl
jbe
xor
and
cli
cmps
cmp
fdiv
call
js
ret
xor
bound
in
xchg
outs
(bad)
ins
pop
(bad)
xlat
jle
pop
cmps
fmul
loopne
push
inc
jg
dec
out
(bad)
mov
neg
mov
mov
cmp
shr
jmp
inc
xor
mov
pop
jbe
es
sub
xor
jmp
(bad)
cmps
scas
cmp
jno
adc
pop
daa
sti
aaa
cli
adc
adc
mul
ins
xor
sub
mov
inc
pusha
dec
push
mov
jne
ret
jae
lds
daa
shl
scas
xor
mov
arpl
push
ds
mov
and
pop
imul
xor
add
adc
pop
aaa
push
sbb
ja
js
pop
inc
mov
jle
jle
xlat
das
out
mul
arpl
jle
fbld
mov
lea
or
jecxz
movs
xchg
pop
pop
call
pushf
mov
out
push
addr16
rcl
fwait
out
jecxz
repz
xor
cli
mov
arpl
pop
jle
xchg
jmp
sub
push
and
test
jo
jae
push
jae
inc
xor
sub
xchg
mov
and
mov
daa
int3
ss
mov
dec
ins
cmps
inc
(bad)
rol
nop
pop
jmp
adc
arpl
mov
loope
mov
repz
(bad)
sbb
fsubr
ja
add
push
aaa
jo
imul
(bad)
mov
cmp
pop
cmps
fs
and
ficom
daa
sti
jne
push
jae
mov
outs
mov
or
shl
and
inc
adc
pop
inc
bound
cwde
mov
test
mov
mov
ret
paddsb
xor
psubsb
arpl
inc
inc
retf
lods
sahf
out
mov
ret
mov
cmp
xchg
pusha
out
mov
or
jg
into
push
xchg
arpl
vprotq
imul
mov
xchg
bound
cmp
jae
inc
fwait
push
inc
imul
or
out
(bad)
or
sub
xor
add
fisub
in
mov
pop
js
shl
cmps
jnp
jecxz
xrelease
xchg
push
and
jb
(bad)
mov
push
stos
pop
push
jnp
mov
add
pop
fadd
clc
xlat
(bad)
sbb
mov
pop
fist
sub
scas
pushf
scas
aaa
hlt
inc
(bad)
adc
xchg
push
xor
ret
repz
movs
fistp
pop
rol
imul
inc
in
inc
ja
ja
adc
pop
xchg
mov
dec
repz
shl
fsub
sti
rcr
in
ja
or
arpl
ss
xchg
mov
xor
in
xchg
fwait
push
test
jl
pop
ficomp
mov
pop
jecxz
jl
add
retf
inc
add
leave
(bad)
pop
(bad)
jl
sti
dec
jecxz
jle
dec
out
inc
mov
icebp
in
mov
cmps
inc
bound
js
xchg
test
pop
mov
dec
mov
xor
mov
pop
cld
dec
push
imul
ds
ja
in
mov
dec
jecxz
xchg
jmp
and
adc
pop
cmps
rcl
xchg
inc
pop
test
in
adc
(bad)
js
push
jecxz
cld
ror
mov
dec
inc
retf
inc
push
fwait
jno
test
push
ja
ja
(bad)
outs
icebp
(bad)
mov
dec
mov
ret
jnp
lahf
fadd
mov
jbe
aam
cli
adc
mov
outs
dec
sti
cmps
or
jp
cmp
outs
scas
fbld
pop
push
ja
mov
inc
in
sub
or
movs
pop
mov
mov
neg
sahf
rsqrtps
bound
mov
push
or
cmps
stos
push
jecxz
sbb
cmps
(bad)
fild
sbb
push
clc
and
pop
mov
or
xchg
pushf
xchg
iret
sbb
sub
cmps
std
sub
pop
cmovg
jae
scas
pop
push
test
push
lahf
std
inc
repz
shr
(bad)
cdq
mov
fsubr
sti
adc
pushf
mov
inc
sub
sub
xchg
test
jle
inc
mov
jae
lods
mov
adc
cld
dec
mul
fucom
dec
or
sub
mov
add
push
retf
mov
shr
sbb
pop
sbb
add
cmp
call
arpl
fadd
pusha
push
mov
hlt
fisub
mov
ds
pop
fistp
lods
mov
into
ds
jge
js
mov
int
ffreep
out
ss
shr
adc
(bad)
stos
repz
cmc
jle
ds
jecxz
in
loope
fist
cld
dec
adc
mov
push
fwait
mov
jecxz
loope
test
sub
rcr
mov
add
(bad)
sub
cmp
repz
imul
mov
xchg
loopne
mov
pusha
xchg
mov
inc
pop
mov
mov
dec
or
ret
ins
xor
push
daa
push
jno
add
inc
inc
xor
mov
cmps
mov
xor
pop
loop
dec
and
bound
ja
gs
mov
in
cmps
xchg
(bad)
jo
repz
repz
push
imul
inc
sbb
xor
xchg
ja
xchg
repz
movs
inc
xchg
sub
test
xor
daa
inc
in
cmp
arpl
inc
xchg
cmp
xchg
ror
dec
test
repnz
inc
daa
out
arpl
push
ja
xchg
cmp
or
mov
sbb
add
jno
inc
jno
jb
mov
cmp
rcr
push
mov
ret
psrlq
retf
pop
arpl
fstp
dec
mov
mov
xchg
xor
daa
sti
je
stos
jae
mov
outs
not
or
rcr
and
int3
inc
adc
es
lahf
push
push
cwde
mov
rol
cs
ret
setbe
enter
jmp
mov
out
mov
(bad)
cmps
jns
add
sbb
and
xor
into
push
xchg
arpl
xrelease
adc
jecxz
or
xchg
pusha
pop
ficom
xor
cli
jae
inc
fwait
adc
push
repz
outs
div
dec
xlat
mov
(bad)
imul
sub
xor
add
fisub
in
mov
sbb
shl
cmps
jnp
jecxz
repz
cmp
xchg
push
and
ja
in
inc
enter
push
stos
and
mov
add
pop
cmps
(bad)
adc
mov
pop
fist
rcl
pushf
scas
aaa
hlt
inc
(bad)
push
ja
xchg
push
xor
ret
cmps
sub
movs
xor
inc
daa
div
ret
mov
mov
outs
jl
xlat
adc
das
mov
daa
out
or
inc
nop
pop
jmp
adc
arpl
mov
loopne
push
xchg
pop
pop
jp
inc
(bad)
sbb
out
ja
add
push
mov
inc
addr16
ja
or
xchg
imul
mov
dec
icebp
(bad)
ret
mov
add
pop
arpl
sahf
les
adc
cmp
aam
xchg
ja
fwait
(bad)
stc
out
repz
sub
xlat
je
mov
pop
repz
out
inc
(bad)
adc
js
pop
into
cmps
(bad)
inc
sbb
sbb
push
pop
push
pushf
add
jae
stos
and
inc
idiv
jecxz
jo
ret
mov
or
add
add
ss
enter
mov
pop
xchg
xor
pop
hlt
pop
ret
mov
xor
xor
add
(bad)
ja
push
inc
push
push
ja
les
pop
aad
out
or
ret
aaa
mov
fmul
call
add
test
sub
ja
xchg
imul
cdq
xchg
jecxz
add
int3
push
push
jae
mov
lods
ja
je
push
pop
xchg
mov
not
ja
call
lahf
jge
adc
mov
fld
arpl
cdq
ret
xor
xor
pop
xor
push
addr16
cli
out
jecxz
push
lods
xchg
dec
out
or
xchg
jecxz
int3
out
ss
es
ss
sub
and
pop
push
das
xchg
stos
out
sti
xor
int3
(bad)
call
mov
push
cs
xchg
mov
mov
cmp
jmp
test
adc
ins
inc
xchg
ins
xchg
mov
ret
jo
popf
ins
mul
es
push
arpl
enter
gs
lock
adc
retf
cmps
cmps
xlat
xor
dec
or
das
sbb
test
aaa
das
mov
push
enter
jb
mov
jmp
adc
aam
out
or
inc
jg
fadd
imul
push
ja
pop
pop
inc
clc
jno
retf
pop
nop
repz
(bad)
jo
repz
or
cli
data16
aaa
test
adc
mov
add
lock
neg
add
jg
cdq
fucom
pushf
push
aaa
xor
nop
ja
aam
imul
loop
dec
(bad)
ror
adc
dec
push
(bad)
daa
scas
and
addr16
cld
or
jae
cs
sbb
mov
pop
push
aaa
xchg
sbb
mov
ror
sbb
(bad)
nop
outs
xchg
xor
pop
jbe
lods
fmul
bound
push
xor
loop
mov
or
(bad)
jecxz
test
mov
jb
inc
sub
addr16
mov
sar
or
repnz
ret
ins
xchg
jl
inc
xor
adc
jb
inc
and
mov
fstp
inc
cmps
sbb
push
imul
inc
enter
mov
mov
out
not
cmp
jno
xor
xchg
sub
std
dec
jmp
shl
call
or
xchg
push
xor
repnz
jo
das
and
cmps
addr16
bound
(bad)
push
mov
inc
mov
cld
jle
cmc
cmps
(bad)
addr16
mov
(bad)
sub
inc
inc
adc
jb
call
out
dec
push
pop
(bad)
xchg
mov
(bad)
dec
xchg
stos
sbb
sub
xor
add
popf
test
ja
ret
inc
js
mov
sbb
xchg
xor
cmp
dec
jb
mov
push
aaa
mov
fs
out
jecxz
daa
xlat
push
out
pop
add
adc
lea
xchg
jmp
push
push
mov
inc
xchg
lahf
ffree
ror
daa
shl
sub
sbb
mov
iret
ins
je
sahf
repz
push
out
mov
stc
lock
pop
daa
adc
mov
xchg
xchg
push
and
shl
int
loopne
adc
xor
adc
cdq
nop
xchg
cli
xchg
fistp
out
imul
ret
dec
aaa
arpl
jae
push
shrd
cmps
dec
repnz
xor
call
jg
in
outs
arpl
push
push
(bad)
jmp
scas
or
neg
pop
dec
push
imul
sar
inc
jae
inc
inc
push
pop
pop
inc
push
into
and
sub
add
fs
dec
in
hlt
test
clc
cmp
mov
or
xlat
test
emms
add
push
sub
(bad)
cs
sbb
inc
arpl
mov
xlat
xchg
sbb
(bad)
test
aaa
es
pop
stos
jmp
jae
ins
jo
mov
xchg
xor
sbb
inc
xor
add
in
cmp
(bad)
aas
stos
push
inc
dec
jl
sbb
jecxz
jo
xchg
fs
xor
xor
jno
ss
(bad)
adc
out
push
push
sub
ss
mov
lahf
mov
mov
pop
push
lods
adc
bound
adc
ror
ror
mov
inc
repz
test
push
int3
call
xor
or
xchg
cmp
movs
xlat
shl
xor
mov
pop
repz
das
or
mov
xor
push
sbb
repz
call
jg
iret
add
sub
(bad)
pusha
int3
mov
scas
pop
ins
xor
pop
jle
cmp
xchg
mov
ins
cmps
aad
in
mov
mov
xchg
arpl
retf
sbb
cmc
call
mov
xor
push
popa
push
mov
xchg
xor
(bad)
mov
shl
jnp
push
add
dec
out
cmp
jb
mov
xchg
(bad)
cmps
nop
out
mov
sub
out
popf
push
inc
jbe
pop
push
enter
fcmove
test
mov
movs
xor
xor
nop
ins
and
push
pusha
push
dec
lods
ja
in
mov
jmp
add
cli
scas
pop
retf
iret
call
imul
pop
outs
pop
xchg
rol
ret
dec
and
mov
xor
repz
aaa
call
jno
xor
sbb
and
xchg
add
sub
retf
test
daa
pop
imul
add
sub
out
jno
sbb
or
aaa
mov
out
in
add
mul
cwde
into
iret
inc
adc
ins
pusha
lds
fucom
in
or
cmp
sub
dec
push
jl
jmp
push
aas
mov
in
pop
inc
stc
movs
stc
mov
cmp
mov
and
xor
shl
lahf
and
scas
(bad)
or
mov
cmp
pop
into
fdiv
es
xchg
addr16
mov
cmp
pop
test
xchg
or
pslld
mov
add
mov
fstp
sti
fild
add
pop
out
ja
jl
xlat
mov
ret
psrlq
retf
pop
arpl
test
shl
add
inc
(bad)
mov
ins
sbb
mul
int3
scas
adc
push
add
push
mov
or
das
add
cmp
(bad)
aas
cmp
jg
(bad)
adc
bound
mov
pusha
xchg
outs
or
(bad)
pop
xchg
dec
mov
ins
pop
imul
cmp
pop
cmps
pop
mov
gs
mov
sar
ret
(bad)
(bad)
div
push
inc
arpl
ret
or
push
add
test
sbb
cmps
stc
mov
mov
xchg
not
outs
xor
inc
add
enter
mov
out
(bad)
mov
xlat
mov
xchg
mov
push
lods
dec
aaa
or
add
xchg
sub
div
repnz
test
ins
es
push
cli
dec
jle
add
sub
ja
aam
sbb
test
outs
shl
aas
mov
inc
jp
icebp
jmp
jae
xchg
cwde
jecxz
mov
loopne
cld
(bad)
xchg
pop
jecxz
push
sub
sbb
add
in
fisub
in
mov
jmp
pop
shl
cmps
jnp
jecxz
repz
cmp
xchg
push
and
jg
pushf
daa
dec
mov
rcl
sub
mov
add
pop
scas
(bad)
ins
xlat
stos
sbb
mov
pop
fistp
mov
aaa
hlt
inc
(bad)
pop
ja
xchg
push
xor
ret
imul
movs
xor
dec
daa
mov
pop
mov
mov
jae
dec
xlat
adc
das
mov
or
inc
nop
pop
jmp
adc
pop
les
call
pop
jp
inc
(bad)
sbb
fsubr
ja
add
pop
aaa
clc
inc
jmp
dec
int3
mov
sbb
cmps
fs
mov
dec
neg
clc
ficom
daa
sti
jl
fnsave
mov
outs
call
or
shr
or
inc
adc
das
inc
jmp
xchg
cmp
mov
ret
setg
mov
arpl
iret
inc
mov
mov
leave
cmps
add
(bad)
cmp
xchg
pusha
out
mov
cld
into
push
xchg
arpl
dec
imul
and
xor
xchg
imul
inc
cmp
push
ja
js
adc
xchg
jecxz
lea
mov
sub
sub
sahf
mul
mov
add
in
jnp
push
jl
(bad)
stc
test
mov
cld
push
pusha
daa
or
pop
add
xchg
adc
xchg
or
mov
add
push
jb
call
push
add
push
cmp
inc
xlat
dec
sbb
repnz
xchg
ins
adc
in
aaa
pushf
or
mov
cmp
push
sahf
mov
dec
adc
aas
mov
lock
mov
add
(bad)
jo
or
icebp
outs
cmp
(bad)
push
mov
mov
adc
dec
xchg
jae
pop
adc
jge
in
sahf
xchg
jmp
cmp
div
or
cld
ds
pushf
das
jae
pusha
ins
fist
sub
cmp
mov
mov
cld
jl
mov
push
adc
mov
jbe
std
(bad)
xchg
mov
xchg
add
sbb
pop
mov
stos
clc
jae
or
out
push
cld
xchg
cmp
push
mov
fs
pop
ja
sub
and
sub
imul
cmp
sbb
inc
(bad)
dec
daa
push
enter
xchg
mov
call
mov
mov
push
cmp
dec
(bad)
arpl
clc
stos
stos
jnp
cmp
int
mov
inc
retf
and
ja
push
arpl
test
and
cli
pop
ror
popa
xlat
mov
xchg
jecxz
(bad)
mov
int3
dec
inc
dec
adc
daa
or
scas
xchg
jecxz
jg
ins
dec
sbb
mov
(bad)
stos
pop
or
jbe
add
aaa
sub
add
xchg
and
cmps
xlat
mov
dec
jecxz
inc
xchg
shl
js
mov
test
ret
aaa
adc
aaa
or
push
or
mov
retf
mov
aas
mov
mov
inc
xor
push
cmp
jno
sbb
arpl
(bad)
outs
arpl
lods
dec
pop
gs
adc
jecxz
repnz
jo
das
mov
jl
inc
je
mov
push
scas
add
mov
mov
inc
cmps
xchg
out
(bad)
mov
push
addr16
lahf
daa
inc
fwait
push
adc
lods
cld
mov
cli
xchg
cmps
fdiv
test
into
sub
inc
add
and
mov
sbb
icebp
cmp
ds
rcr
and
xor
ja
xchg
cmp
push
sub
dec
pop
mov
(bad)
or
xchg
xor
add
mov
ds
loop
out
data16
xlat
sub
mov
add
jb
lahf
push
mov
ret
adc
or
sbb
sbb
ds
jb
pop
aaa
hlt
sbb
ja
cli
dec
sbb
outs
fisub
test
loopne
out
or
and
ja
dec
in
xchg
jmp
cmp
test
inc
or
cwde
mov
mov
jae
call
mov
jae
inc
jg
sahf
out
mov
shl
sbb
and
fwait
cld
into
push
xchg
arpl
out
dec
ret
adc
jecxz
or
xchg
ins
pop
dec
pop
pop
fdivr
jae
inc
fwait
sbb
push
mov
or
xchg
(bad)
sti
sub
mov
xor
sbb
fisub
in
mov
vmread
and
repz
xchg
push
and
jl
jne
jnp
mov
rcl
sub
mov
add
pop
lods
mov
pop
add
pop
pushf
scas
aaa
hlt
inc
(bad)
sbb
(bad)
xchg
push
or
sub
movs
xor
push
daa
addr16
pop
mov
mov
imul
jecxz
mov
or
inc
nop
pop
jmp
adc
mov
in
xchg
xchg
(bad)
pop
jp
inc
(bad)
sbb
fsubr
ja
add
pop
aaa
adc
test
and
ja
leave
mov
or
cmps
fs
(bad)
out
div
clc
ficom
sub
ficomp
xchg
xchg
jae
test
ret
shl
addr16
iret
dec
retf
(bad)
add
mov
add
xor
mov
xlat
xchg
(bad)
mov
add
aaa
scas
inc
jae
inc
(bad)
repz
or
jecxz
cmps
cmc
xor
mov
pop
mov
pop
aas
xor
push
inc
in
pop
repnz
or
rcl
push
xlat
cmps
jecxz
loop
out
rcr
cmps
pop
cmc
call
popa
inc
mov
dec
xchg
lock
push
dec
(bad)
out
xor
inc
ins
das
mul
jb
sub
inc
jne
jae
lock
xchg
arpl
dec
jecxz
call
rol
push
int3
(bad)
xor
jae
jo
inc
mov
fisubr
(bad)
repz
xchg
jmp
out
jecxz
out
pop
in
aas
call
cwde
js
mov
inc
xchg
mov
rol
fcomi
pop
cld
test
add
adc
out
adc
lahf
mov
cmps
repz
xchg
(bad)
xor
dec
ss
and
bound
jmp
and
mov
xor
xor
icebp
scas
repz
cmc
sar
addr16
int3
or
arpl
sub
inc
lahf
mov
mov
mov
(bad)
jle
xchg
pop
imul
arpl
test
and
(bad)
pop
arpl
sbb
mov
xor
push
aas
loop
xor
mov
sub
out
mov
jae
adc
cmp
xlat
cmp
icebp
cmp
int3
repz
stos
adc
(bad)
pop
jb
sbb
pop
push
jae
push
cmps
xlat
xor
or
das
mov
fist
retf
push
aaa
arpl
push
scas
stc
xchg
data16
inc
push
cmps
cmp
xchg
cmp
xchg
mul
pop
mov
es
test
pop
or
dec
pop
dec
(bad)
xchg
sub
mov
add
xchg
push
(bad)
pop
ja
jb
adc
adc
mov
out
jl
dec
int3
out
arpl
jae
mov
sub
in
mov
inc
pop
ins
dec
outs
push
pop
out
pop
mov
div
sbb
sub
jmp
push
cmp
pop
or
adc
xchg
cmp
sbb
inc
fdivr
sti
daa
mov
jp
jae
ds
cmps
pop
xchg
xchg
sbb
ret
addr16
fist
or
aaa
test
stos
adc
pop
xchg
ins
mov
cmp
sbb
ret
div
repz
(bad)
daa
mov
lods
sahf
dec
jns
into
xchg
pop
push
cmps
sbb
loop
mov
imul
int3
call
pushf
retf
mov
xchg
dec
sbb
pop
fidivr
jecxz
lock
mov
ret
push
cld
xlat
push
aaa
fstp
mov
sar
lods
sbb
aas
xchg
xor
xor
jecxz
sahf
aaa
daa
mov
pop
data16
jg
xchg
sub
mov
in
sub
call
lock
mov
push
pop
cmp
sub
sub
retf
pop
mov
sar
add
test
stos
pop
sub
mov
rcl
xor
sbb
mov
in
xchg
lahf
xor
sub
sub
test
dec
mov
adc
inc
cmps
xchg
jg
xchg
ja
repz
cmp
add
(bad)
pop
into
in
outs
mov
mov
into
push
retf
(bad)
aas
xchg
xor
and
cld
pop
fbstp
mov
sub
xchg
pop
mov
jecxz
mov
xor
cli
sub
sub
xchg
add
push
ret
dec
lods
dec
jecxz
dec
fmul
mov
cmp
pop
mov
out
int3
ret
rcr
push
mov
mov
ja
dec
push
sub
sbb
pop
fwait
sub
xor
pand
ret
cli
fimul
mov
jle
inc
push
cli
scas
mov
or
out
ror
shr
ror
out
retf
mov
or
jle
dec
jp
or
sbb
cmp
shl
outs
les
enter
test
cwde
lods
mov
mov
cmps
pop
dec
pop
cmp
sub
cmp
retf
push
es
sub
pushf
mov
(bad)
cld
mov
sub
sub
arpl
and
int3
push
ret
ficomp
and
pop
shr
mov
or
pop
adc
stos
sahf
mov
cld
fcom
sahf
push
icebp
aad
out
rcl
outs
dec
sbb
pop
mov
or
jle
cmp
cs
add
dec
in
aaa
mov
mov
sub
jge
pop
shr
mov
or
jae
cmp
ror
push
out
int3
call
mov
mov
out
into
jl
adc
sbb
dec
das
sub
fdivrp
sub
fcomp
mov
cs
xchg
dec
outs
cmp
cmp
sub
jmp
jle
dec
out
mov
mov
outs
dec
sbb
pop
repz
mov
cmp
xchg
or
inc
int3
sti
inc
fcom
daa
int3
mov
pop
mov
add
test
fsub
xchg
fsubr
imul
test
rcl
push
jecxz
loop
cmp
pop
out
dec
mov
jae
(bad)
push
test
and
mov
retf
jl
xchg
xchg
sbb
(bad)
sub
ret
mov
xor
outs
fbstp
int3
jae
stos
in
mov
jl
push
add
sbb
outs
mov
shr
pop
sti
daa
push
mov
mov
sub
lock
call
jle
inc
ss
enter
test
cwde
pop
xor
sub
repz
xchg
sub
fcomp
call
mov
mov
stos
and
xchg
xchg
inc
xchg
cmps
add
loop
ret
sbb
pop
rcr
ret
jp
mov
lods
mov
dec
dec
push
or
cmp
retf
(bad)
cmc
nop
aaa
out
push
adc
dec
mov
cmps
sbb
loop
ret
mov
loop
inc
jmp
es
bound
lock
imul
xchg
aas
sub
shl
(bad)
jle
cld
fadd
daa
int3
mov
(bad)
and
xchg
pop
(bad)
mov
push
jecxz
repz
clc
out
mov
push
mov
cli
mov
mov
xchg
sbb
mov
or
sub
outs
mov
frndint
jmp
mov
mov
xlat
dec
rcl
mov
xchg
sbb
fsub
in
jae
mov
adc
(bad)
sbb
int3
or
retf
cmp
mov
(bad)
push
mov
mov
dec
mov
repnz
cmp
sub
out
inc
int3
out
mov
mov
push
mov
hlt
mov
imul
jae
sub
addr16
ret
call
mov
ds
mov
int3
dec
retf
dec
jecxz
dec
mov
pop
xchg
or
ja
rol
in
mov
pop
cwde
jae
pop
mov
test
cdq
aas
xchg
cmp
pop
mov
clc
repz
mov
nop
xlat
arpl
pop
imul
jl
pop
dec
outs
(bad)
pop
or
imul
pop
(bad)
call
loopne
push
aam
inc
sar
and
(bad)
adc
sub
sub
jle
xor
in
shr
retf
into
scas
lods
cli
imul
jl
mov
push
jnp
sub
outs
mov
xor
movs
adc
mov
pop
imul
jl
pop
dec
outs
(bad)
pop
or
imul
call
div
enter
push
mov
js
pop
cmps
pop
push
repz
mov
shl
adc
fdiv
daa
push
mov
jg
or
cmp
cmp
cmp
sbb
scas
iret
int3
call
mov
mov
xchg
repz
jecxz
xor
loop
out
rcl
fadd
push
call
push
mov
sub
add
cli
fwait
pop
xchg
cli
or
(bad)
cmp
mov
and
xchg
outs
aas
in
aaa
cs
repnz
push
cmp
xchg
or
adc
aas
push
cmp
xor
cld
out
(bad)
pushf
scas
mov
jmp
xlat
sahf
les
lods
jl
call
and
div
pop
call
into
in
outs
mov
scas
iret
pop
js
fidivr
pop
ins
inc
jmp
popf
out
inc
mov
add
fwait
pop
fwait
inc
mov
or
(bad)
imul
xor
aas
xchg
shl
shl
xchg
fwait
enter
inc
mov
not
or
(bad)
mov
and
int3
sti
or
jg
daa
int3
mov
(bad)
and
pop
push
jecxz
(bad)
mov
dec
mov
mov
sub
aaa
(bad)
fadd
(bad)
cld
idiv
daa
int3
mov
(bad)
and
xchg
mov
(bad)
or
dec
out
or
dec
mov
(bad)
push
sbb
pop
loop
ja
add
pop
jl
pop
dec
cmps
(bad)
or
dec
out
mov
mov
scas
cld
out
stos
enter
sbb
addr16
data16
inc
(bad)
xor
jle
xchg
add
fadd
jle
add
ficomp
(bad)
cmp
xchg
mov
sbb
xor
div
mov
es
inc
out
test
ror
sub
out
inc
and
cld
stos
pop
mov
cbw
push
push
out
imul
cmp
xchg
xchg
sub
test
in
jmp
lods
mov
lods
cli
pop
xchg
dec
sbb
pop
(bad)
push
ret
adc
(bad)
mov
pop
mov
(bad)
push
push
mov
dec
adc
sbb
js
add
fadd
push
add
adc
inc
cmps
mov
fistp
repnz
(bad)
sub
test
or
jmp
enter
fwait
mov
outs
dec
sbb
xor
xchg
sub
retf
or
jmp
ficomp
mov
push
sbb
aas
xchg
rcr
out
or
jecxz
mov
mov
push
in
cwde
das
mov
dec
pop
cmp
pusha
(bad)
jmp
push
retf
jg
push
jmp
mov
pop
or
mov
cmp
or
stos
in
jae
cmp
inc
stos
mov
push
sbb
mov
cmp
(bad)
arpl
out
mov
adc
jg
mov
adc
add
call
imul
mov
inc
inc
lods
push
out
dec
loop
or
xor
shl
sbb
clc
ja
jmp
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
mov
pop
xor
pusha
daa
adc
arpl
push
inc
addr16
neg
xchg
and
xlat
ret
out
mul
pop
xor
xor
aaa
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
jae
cmps
mov
mov
(bad)
not
ret
out
repz
add
adc
and
xor
ja
inc
arpl
mov
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
pop
repz
ret
sbb
neg
pop
int3
pop
cld
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
dec
inc
addr16
mov
mov
jmp
pop
xor
sbb
adc
pushf
pop
jae
inc
cwde
push
ja
xchg
mov
(bad)
repz
ret
out
or
push
xor
add
adc
arpl
test
addr16
ja
xchg
cmps
xchg
mov
(bad)
repz
ret
out
mul
push
xor
add
or
arpl
push
inc
addr16
ja
xchg
dec
cli
(bad)
repz
cmp
shl
and
xor
add
adc
arpl
push
inc
addr16
ja
sahf
mov
sbb
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
cmp
xlat
ret
out
out
and
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
sbb
adc
pushf
inc
jae
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
or
pop
sub
add
in
aaa
arpl
push
inc
cwde
push
mov
cmps
xchg
dec
jecxz
repz
(bad)
shl
fcomp
xor
add
or
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
idiv
pop
xor
cld
daa
or
arpl
push
pop
addr16
ja
xchg
mov
(bad)
repz
cmp
shl
and
xor
add
or
arpl
push
inc
addr16
ja
xchg
cmps
mov
ret
out
mul
pop
xor
add
adc
arpl
dec
inc
addr16
mov
cmps
ins
mov
(bad)
repz
ret
out
out
and
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
mov
cmps
xchg
mov
(bad)
repz
ret
(bad)
shl
and
xor
add
adc
arpl
push
ja
js
xchg
and
sub
out
mul
pop
xor
add
adc
arpl
push
pop
addr16
ja
xchg
mov
(bad)
repz
out
neg
pop
sub
add
in
aaa
jp
jae
mov
xchg
dec
jecxz
jmp
pop
xor
add
adc
arpl
push
inc
lods
ja
js
xchg
and
into
ret
out
or
pop
int3
pop
add
adc
arpl
push
ja
xchg
cmps
xchg
mov
cmp
xlat
ret
out
mul
pop
xor
add
adc
jp
jae
mov
xchg
mov
(bad)
repz
ret
out
or
pop
xor
cld
adc
arpl
lods
ja
xchg
mov
(bad)
or
ret
out
mul
pop
sub
add
in
aaa
arpl
push
inc
lods
mov
push
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
cmp
shl
and
xor
add
or
arpl
dec
inc
addr16
mov
mov
jmp
pop
xor
sbb
adc
pushf
pop
jae
inc
cwde
dec
ja
xchg
cmps
xchg
dec
jecxz
repz
ret
out
or
pop
xor
cld
daa
adc
arpl
test
addr16
ja
xchg
cmps
mov
ret
out
or
pop
xor
cld
daa
adc
jp
jae
mov
js
xchg
call
xlat
ret
sbb
idiv
pop
xor
cld
adc
arpl
lods
outs
mov
cmps
xchg
mov
(bad)
jmp
pop
xor
cld
daa
or
arpl
push
inc
addr16
ja
xchg
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
test
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
cmp
shl
and
xor
add
adc
jp
jae
mov
xchg
mov
(bad)
repz
ret
(bad)
shl
and
xor
add
adc
arpl
dec
inc
addr16
mov
cmps
xchg
scas
jecxz
repz
out
mul
pop
xor
add
adc
arpl
test
addr16
ja
xchg
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
pop
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
jp
jae
mov
xchg
mov
(bad)
jmp
pop
xor
add
or
arpl
push
inc
addr16
ja
xchg
dec
jecxz
repz
ret
out
idiv
pop
xor
cld
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
jmp
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
dec
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
cmp
shr
and
xor
sbb
adc
pushf
mov
push
ja
js
xchg
and
into
ret
out
or
push
xor
add
adc
pushf
mov
push
mov
cmps
xchg
dec
jecxz
repz
ret
sbb
cmp
xor
cld
daa
or
arpl
test
addr16
ja
js
xchg
and
sub
out
mul
pop
xor
add
adc
arpl
push
inc
jle
ja
js
xchg
and
sub
out
neg
push
xor
add
in
arpl
test
addr16
ja
xchg
cmps
ins
mov
(bad)
repz
cmp
sub
and
xor
cld
fmul
aaa
arpl
dec
inc
addr16
mov
xchg
call
xlat
ret
sbb
mul
pop
int3
call
arpl
test
addr16
ja
xchg
dec
cli
(bad)
repz
cmp
shl
and
sub
add
in
aaa
jp
jae
mov
xchg
scas
jecxz
repz
sub
fadd
sub
add
in
arpl
test
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
sahf
mov
sbb
jecxz
or
ret
out
or
pop
xor
cld
daa
adc
arpl
push
inc
cwde
push
ja
sahf
mov
sbb
jecxz
repz
out
mul
pop
xor
add
adc
arpl
lods
ja
xchg
cmps
ins
mov
cmp
xlat
ret
out
mul
pop
sub
add
in
aaa
arpl
push
inc
lods
ja
xchg
mov
(bad)
repz
cmp
shl
and
xor
add
adc
arpl
dec
inc
addr16
mov
mov
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
cwde
push
ja
xchg
scas
jecxz
repz
out
neg
push
xor
add
adc
arpl
push
pop
addr16
ja
xchg
mov
fdivp
xlat
ret
sbb
mul
pop
xor
add
adc
jp
jae
mov
sahf
mov
sbb
jecxz
jmp
pop
xor
sbb
adc
pushf
pop
jae
inc
cwde
dec
ja
xchg
cmps
xchg
dec
cli
(bad)
repz
cmp
shl
and
sub
add
in
aaa
arpl
push
inc
addr16
ja
sahf
mov
sbb
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
lods
ja
xchg
mov
(bad)
repz
ret
(bad)
shl
and
xor
add
adc
arpl
push
inc
addr16
ja
xchg
scas
jecxz
repz
out
neg
pop
xor
add
adc
arpl
push
pop
addr16
ja
sahf
mov
sbb
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
dec
inc
addr16
mov
cmps
ins
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
cmps
xchg
dec
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
outs
mov
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
ja
xchg
mov
(bad)
repz
(bad)
shl
fcomp
xor
add
or
arpl
dec
inc
addr16
mov
cmps
xchg
mov
(bad)
repz
cmp
shl
and
xor
add
adc
arpl
test
jle
ja
js
mov
fdivp
xlat
ret
sbb
out
and
xor
add
adc
jp
jae
mov
js
mov
(bad)
repz
(bad)
shl
fdivr
sub
add
in
arpl
test
addr16
ja
xchg
dec
jecxz
or
(bad)
shl
fadd
sub
add
in
arpl
test
addr16
ja
xchg
mov
(bad)
repz
cmp
shl
and
int3
push
add
adc
arpl
push
inc
lods
ja
sahf
mov
sbb
cli
(bad)
repz
cmp
shl
and
sub
add
in
aaa
jp
jae
mov
xchg
cmps
xchg
mov
(bad)
jmp
pop
xor
sbb
adc
pushf
inc
push
inc
lods
ja
xchg
mov
(bad)
or
ret
out
or
push
xor
add
adc
arpl
test
jle
ja
js
mov
(bad)
repz
cmp
shl
and
xor
add
adc
arpl
push
inc
addr16
ja
xchg
cmps
xchg
scas
jecxz
repz
(bad)
shl
and
xor
add
adc
arpl
push
inc
cwde
push
ja
xchg
scas
jecxz
repz
sbb
mul
pop
int3
pop
add
adc
arpl
push
inc
lods
ja
xchg
mov
(bad)
repz
ret
(bad)
shl
and
sub
add
in
arpl
test
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
int3
pop
add
adc
arpl
push
inc
cwde
push
ja
xchg
scas
jecxz
repz
out
neg
clc
sub
add
in
aaa
arpl
push
inc
addr16
ja
xchg
dec
cli
(bad)
repz
cmp
shl
and
sub
add
in
aaa
jp
jae
mov
js
mov
(bad)
repz
cmp
shl
and
xor
add
adc
arpl
push
pop
addr16
ja
sahf
mov
sbb
sbb
or
ret
out
or
pop
xor
cld
adc
arpl
push
ja
xchg
mov
(bad)
jmp
pop
xor
add
adc
arpl
push
inc
lods
outs
mov
cmps
xchg
mov
(bad)
repz
ret
(bad)
shl
and
sub
add
in
aaa
jp
jae
mov
xchg
mov
(bad)
or
ret
(bad)
shl
and
sub
add
in
arpl
test
addr16
ja
sahf
mov
sbb
jecxz
repz
out
mul
push
xor
add
or
arpl
dec
inc
addr16
mov
cmps
xchg
mov
(bad)
repz
cmp
sub
and
xor
add
adc
arpl
test
addr16
outs
mov
cmps
xchg
mov
fdivp
xlat
ret
sbb
mul
pop
int3
push
add
adc
arpl
push
inc
cwde
lods
outs
mov
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
int3
push
add
adc
jp
jae
mov
xchg
mov
cmp
xlat
ret
out
mul
pop
xor
add
adc
arpl
push
inc
cwde
push
ja
sahf
mov
sbb
jecxz
or
cmp
shl
and
sub
add
in
arpl
test
addr16
ja
sahf
mov
sbb
jecxz
jmp
pop
xor
add
adc
jp
jae
mov
xchg
cmps
xchg
mov
fdivp
xlat
ret
sbb
and
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
or
ret
out
or
pop
xor
cld
daa
or
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
adc
rol
std
fsub
test
mov
pop
ins
dec
pusha
inc
cmova
push
das
add
sbb
xchg
xchg
out
(bad)
xchg
rcl
mov
inc
adc
xor
and
add
push
int
(bad)
xlat
(bad)
fcompp
loop
repz
and
push
dec
addr16
pop
adc
and
or
and
ror
aam
cmps
push
sub
pop
add
push
popa
sub
adc
and
loop
hlt
icebp
jmp
stos
adc
dec
bound
js
ja
inc
add
pop
add
cmp
rcl
mov
and
js
push
js
add
add
inc
aaa
push
sbb
cmps
std
(bad)
xchg
nop
icebp
mov
inc
push
jle
jnp
adc
and
push
and
xor
ret
mov
out
ret
call
vphadduwq
fs
jns
data16
push
sub
cmp
loop
(bad)
mov
not
(bad)
mov
movs
mov
mov
jne
add
sysret
pop
sbb
sbb
repz
ret
loopne
les
mov
fs
dec
addr16
pop
xor
jecxz
fsub
ret
cwde
rol
lea
test
inc
add
es
and
push
shl
repnz
and
repz
movs
in
test
jae
ins
push
push
ins
and
adc
jecxz
jmp
ret
cwde
loopne
xchg
xchg
mov
inc
inc
push
pusha
adc
adc
and
aaa
sbb
(bad)
mov
loope
mov
xchg
stos
mov
cdq
cmps
mov
arpl
ja
data16
push
xlat
xlat
mov
icebp
xor
pop
in
mov
jne
jbe
dec
push
addr16
sub
sbb
ins
add
ret
lock
mov
cmp
jae
arpl
and
cmp
adc
sbb
mov
xchg
or
arpl
jl
xor
xor
iret
(bad)
xlat
int
clc
imul
stos
cwde
xchg
lea
inc
push
pusha
addr16
ja
xor
div
repz
xchg
mov
mov
jne
inc
jne
add
sysret
pop
add
add
push
shr
sti
(bad)
out
mov
cwde
mov
xchg
cmps
mov
inc
aaa
push
pop
arpl
xor
adc
arpl
sub
fdiv
test
out
repz
xchg
mov
push
pop
arpl
xor
adc
and
jecxz
(bad)
in
cwde
test
mov
mov
and
push
add
or
sub
sbb
push
add
mov
loopne
mov
adc
addr16
or
sub
xor
or
cli
aam
xchg
ret
(bad)
xchg
mov
xchg
cld
test
inc
bound
cmp
sub
jl
adc
jmp
(bad)
test
push
inc
arpl
and
xor
and
inc
stc
not
(bad)
loopne
neg
movs
xchg
xlat
mov
imul
inc
and
xor
push
and
loop
mov
loopne
loope
mov
mov
repz
jae
ins
push
dec
pop
adc
xor
xor
cld
ror
mov
mov
arpl
jae
jo
addr16
sub
ins
add
push
(bad)
call
shl
cld
mov
addr16
daa
arpl
inc
adc
inc
and
ret
hlt
and
mov
pusha
outs
daa
adc
xor
inc
adc
mov
rcl
ret
mov
not
xor
inc
arpl
jae
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
(bad)
imul
(bad)
inc
push
aaa
adc
and
inc
jae
jae
mov
cmps
stc
loopne
out
mov
mov
(bad)
adc
ja
push
arpl
push
pop
adc
pop
xor
ret
xlat
ret
out
xchg
out
xchg
xchg
cmps
repz
mov
pop
jae
push
addr16
push
push
jae
push
sub
repnz
mov
mov
pop
iret
scas
mov
aas
bnd
leave
retf
add
daa
add
xor
xchg
mul
cmps
ret
loopne
test
inc
fs
push
xor
data16
adc
rcl
xlat
xchg
cmps
jecxz
shl
jae
inc
aaa
inc
push
add
daa
push
pop
and
rol
pushf
xchg
xchg
xchg
adc
adc
jae
and
push
jno
xor
adc
(bad)
repz
div
push
push
ja
inc
add
xor
addr16
pop
outs
inc
fcmovnu
mov
aam
in
in
fadd
sbb
addr16
inc
ja
aaa
add
test
xlat
mov
mov
aaa
add
add
inc
pop
mov
repz
cmps
(bad)
pop
xor
call
lahf
push
xchg
inc
and
ds
addr16
push
mov
sbb
fs
mov
push
cmps
xchg
push
dec
or
or
xor
xchg
adc
ja
xchg
push
rol
push
aaa
fcom
repnz
xchg
psubb
xchg
fldcw
push
push
imul
xchg
jp
and
imul
js
dec
ret
loop
neg
shl
inc
aaa
rol
adc
ins
inc
cmp
dec
cmps
out
xchg
mov
call
and
xor
xor
adc
pop
and
push
adc
pushf
push
mov
loopne
nop
and
sbb
sub
retf
or
repz
add
jno
jecxz
aaa
xchg
xor
mov
mov
xchg
mov
xchg
dec
add
and
movs
cmp
out
sar
rcl
push
cmp
popf
or
sar
addr16
xchg
xchg
int3
and
xor
aaa
jle
pop
pop
pop
jl
sar
inc
inc
ins
mov
ss
call
jl
nop
or
push
pop
cmc
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mov
add
adc
arpl
push
inc
xor
pavgw
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
xchg
and
pop
xor
add
adc
das
dec
aas
jle
cmp
mov
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
div
xor
push
push
push
pop
cmp
jae
daa
adc
mov
and
movs
mov
pop
jbe
daa
adc
adc
and
add
(bad)
mov
inc
bound
jo
jge
or
rdmsr
adc
xchg
hlt
icebp
shl
aam
cmps
shl
mov
mov
je
inc
pusha
push
or
jnp
adc
in
mul
repz
xchg
mov
test
je
jg
pop
jp
arpl
push
arpl
jae
xlat
jmp
not
jecxz
test
ret
xchg
mov
jns
inc
pusha
pop
arpl
ja
push
push
ja
xchg
fninit
(bad)
repz
xor
add
adc
sbb
mov
loope
lock
repz
ret
xchg
mov
js
inc
pusha
aaa
or
jae
sub
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
aaa
adc
repnz
cmps
xchg
loope
mov
repz
inc
daa
adc
pop
popa
aaa
push
es
push
inc
addr16
ja
xchg
mov
(bad)
rep
jecxz
mov
inc
ins
add
adc
inc
adc
sbb
sar
mul
(bad)
mov
and
jnp
inc
xor
arpl
ja
or
ja
xchg
loop
int3
loope
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
xchg
push
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
inc
push
push
sbb
xchg
mov
(bad)
pushf
mov
xchg
ins
inc
pusha
jb
es
inc
addr16
adc
cmps
xchg
shl
(bad)
repz
ret
out
mul
pop
xor
add
adc
inc
jae
inc
sub
div
mov
mov
xlat
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
pop
inc
jae
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
sub
arpl
je
aaa
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
or
mov
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
push
pop
pop
add
ja
inc
jae
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
xchg
and
xor
add
adc
arpl
push
inc
addr16
xchg
and
xlat
ret
out
div
jae
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
xchg
adc
jne
xor
add
adc
arpl
push
inc
xor
ja
rcl
xchg
and
xlat
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
fisubr
cmp
aas
das
and
(bad)
call
dec
inc
mov
jo
dec
push
sbb
or
fsub
sub
(bad)
int3
call
pushf
stos
mov
pop
push
push
sbb
or
shl
or
movs
int3
call
pushf
or
pop
test
lea
mov
or
pop
push
call
arpl
add
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
push
addr16
ja
xchg
mov
(bad)
repz
ret
aad
or
stc
lahf
adc
daa
adc
addr16
mov
mov
pop
ins
dec
sbb
or
(bad)
idiv
clc
int3
call
xor
jae
mov
js
push
sbb
or
cmp
sub
fild
xor
pushf
mov
push
int
js
push
sbb
repz
fdivr
int3
call
pushf
mov
lods
mov
pop
jl
ins
dec
sbb
or
cmp
rcr
clc
int3
call
pushf
push
jae
mov
js
push
sbb
or
cmp
sub
(bad)
pop
xor
pushf
mov
push
ja
js
push
(bad)
(bad)
repz
lock
fdivr
int3
hlt
add
adc
arpl
mov
mov
test
dec
sbb
xchg
ret
out
mul
pop
ds
je
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
int3
pop
add
adc
arpl
push
inc
add
xchg
xchg
and
xlat
ret
out
div
xor
add
aaa
arpl
push
inc
aaa
push
ja
xchg
xchg
and
xlat
ret
mov
mul
pop
xor
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
mov
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
mov
mul
pop
xor
add
adc
arpl
pop
inc
addr16
ja
xchg
mov
(bad)
or
ret
out
div
xor
cld
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
mov
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
mov
mul
pop
arpl
add
adc
arpl
jae
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
mov
mul
pop
xor
push
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
mov
mul
daa
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
inc
jae
inc
addr16
daa
mov
cmps
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xlat
mov
and
xlat
ret
out
mul
pop
xor
add
adc
pushf
inc
jae
inc
addr16
ja
xlat
mov
xor
mov
(bad)
repz
out
mul
pop
xor
add
adc
arpl
jae
inc
addr16
ja
xchg
mov
xchg
xlat
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
std
and
adc
daa
jbe
pusha
inc
jo
inc
pusha
pop
jle
loop
xlat
mov
cmps
test
in
sar
sub
ja
sub
cmp
push
push
imul
scas
mov
movs
lock
sar
push
aad
xor
xor
jnp
xor
pop
jg
ins
mov
mov
out
mov
stc
fst
add
inc
push
inc
arpl
dec
(bad)
stos
lahf
mov
into
jmp
mov
cmps
xchg
mov
xlat
repz
cmp
mov
inc
addr16
ja
inc
jae
add
mov
fldpi
icebp
rol
adc
and
xor
inc
gs
test
mov
leave
call
repz
add
adc
and
xor
outs
cmps
pop
popa
push
jno
icebp
mov
mov
sar
fsubp
aad
and
pop
ins
xor
jg
pop
ins
pop
jge
clc
int3
popf
rcr
mov
fsubrp
fscale
sub
jl
(bad)
imul
jl
mov
call
call
jmp
sti
das
or
jl
pop
cmp
jg
pop
push
jp
mov
mov
fsubr
fdivr
sub
pop
push
ins
dec
jl
pop
push
int3
call
in
enter
hlt
shl
js
popa
jl
ins
and
push
pusha
mov
int
lock
aam
cmp
repz
jecxz
dec
daa
push
xor
jae
ja
addr16
inc
bound
out
xchg
aam
(bad)
loopne
xor
push
je
mov
mov
fcom
scas
sti
fucomip
and
dec
out
cmp
push
sbb
cs
push
pop
jl
ins
mov
shr
lods
clc
fsubr
and
sti
iret
jmp
js
or
dec
ins
sub
outs
mov
mov
shr
test
fdivr
int3
call
sbb
sub
test
inc
jae
cmp
(bad)
in
fcom
xchg
ret
out
sub
vpmullw
aas
dec
push
inc
gs
test
inc
jo
and
shl
sub
ret
push
and
pop
inc
add
adc
push
test
inc
jne
test
mov
(bad)
ror
movs
loopne
adc
and
adc
add
je
adc
or
fsubr
int3
fdivr
enter
jmp
fdivr
int3
call
pushf
mov
shl
and
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
jo
cmps
xor
gs
jne
add
(bad)
pop
retf
out
(bad)
add
pop
fimul
xor
je
imul
(bad)
sar
adc
add
xchg
repz
stos
shl
(bad)
loop
jne
add
add
adc
ins
jecxz
cli
mov
mov
std
int
bound
xor
inc
outs
push
ja
xchg
mov
(bad)
(bad)
jecxz
repz
sbb
adc
and
xor
repz
ret
out
mul
pop
xor
adc
adc
push
and
xor
add
adc
loop
repnz
ins
adc
xor
inc
out
add
add
icebp
in
rol
mov
inc
pusha
push
jo
inc
push
or
sbb
sub
cmp
retf
out
(bad)
jmp
cli
fimul
mov
jle
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
mov
mov
pop
jle
dec
jp
or
and
mov
or
sti
fild
ins
dec
jl
adc
add
pushf
mov
sub
repz
jecxz
xchg
mov
mov
mul
mul
push
arpl
aaa
add
cmps
cmp
adc
gs
xlat
jecxz
xchg
mov
mov
call
push
arpl
xor
and
dec
ja
loop
shl
ret
xchg
(bad)
icebp
inc
bound
inc
push
xor
and
pop
adc
out
xchg
mov
movs
cmp
adc
fdivr
dec
sbb
and
in
stc
fucomp
int
mov
stos
sbb
dec
ins
jns
imul
cwde
sub
pop
js
in
stc
fucomp
int3
cwde
mov
xor
fdivr
dec
ins
js
push
sub
pop
imul
(bad)
(bad)
aaa
arpl
test
fist
xchg
mov
(bad)
repz
call
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repnz
ret
mul
push
xor
add
adc
inc
gs
jne
test
mov
ret
not
(bad)
jecxz
repz
add
adc
and
cmp
inc
arpl
cmps
xor
out
not
(bad)
loop
repnz
adc
and
push
inc
jne
inc
popa
push
jno
xor
push
inc
addr16
ja
xchg
mov
loop
xlat
cmp
lods
xchg
inc
bound
inc
jbe
push
and
xor
add
adc
and
jle
not
xchg
mov
inc
arpl
addr16
jbe
push
and
test
add
adc
loop
repnz
not
xchg
mov
inc
bound
lea
push
add
add
icebp
in
cmc
rol
xor
inc
je
add
adc
and
xor
(bad)
loopne
xor
shl
test
mov
inc
pusha
push
jno
inc
je
add
(bad)
pop
(bad)
out
fcomi
jmp
sti
fisttp
(bad)
mov
jge
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
mov
dec
outs
pop
jle
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
mov
dec
outs
pop
jle
dec
jp
or
sbb
sub
cmp
retf
(bad)
call
lods
xchg
mov
dec
outs
pop
jle
dec
jns
or
xchg
mov
inc
sbb
jmp
lods
cdq
mov
dec
ins
pop
mov
cmc
shl
xchg
mov
sbb
out
retf
(bad)
fisttp
xor
and
shl
ret
jg
movntps
cmp
cmp
int3
call
dec
ins
cmp
sub
push
mov
jae
arpl
aaa
add
popf
xchg
ja
sar
(bad)
xchg
test
cmps
mov
mov
mov
mov
adc
lods
mov
sti
and
shl
ret
out
xlat
jecxz
xchg
test
jne
add
shl
loope
jl
adc
add
xor
and
shl
ret
xor
mov
mov
addr16
arpl
aaa
add
stos
vphaddubq
outs
jg
ins
cld
fcom
xchg
mov
mov
leave
enter
cdq
mov
shl
ret
shl
ret
xchg
mov
jae
pop
or
push
lahf
fsub
in
mov
inc
push
xor
and
adc
add
repnz
xor
jge
add
add
xor
inc
bound
inc
push
xor
repnz
movs
adc
out
xchg
mov
mov
push
jb
mov
shl
rcl
daa
add
repz
loop
shl
ret
xchg
sbb
add
stc
int
ja
inc
push
xor
and
icebp
lds
jge
jge
pop
cmp
mov
jno
popa
jp
imul
cdq
mov
aad
dec
imul
mov
test
mov
fptan
dec
sbb
mov
fscale
leave
in
cli
fucomp
into
cdq
mov
xor
jmp
sub
fscale
leave
aas
jl
jb
call
lea
dec
ins
js
push
(bad)
mov
jge
push
cwde
mov
test
pop
jl
mov
call
or
cld
enter
call
jg
sbb
jmp
sbb
sub
out
mul
pop
xor
jge
ins
dec
sbb
or
mov
xchg
mov
(bad)
repz
mov
js
add
arpl
push
inc
addr16
ja
xchg
scas
sti
xlat
add
ret
out
mul
pop
xor
add
adc
arpl
test
cwde
lods
mov
xchg
and
xlat
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repnz
ret
mul
push
xor
add
adc
bound
push
inc
gs
jne
test
mov
vpmullw
in
cmc
and
adc
inc
fs
jne
test
mov
(bad)
lock
in
hlt
and
adc
and
xor
inc
jo
inc
fs
je
test
mov
ret
not
(bad)
jecxz
repz
add
adc
and
xor
ja
jne
push
jae
xor
out
not
(bad)
jecxz
repz
add
ins
and
xor
ja
inc
bound
cmps
xor
out
loopne
mov
add
adc
and
xor
jbe
inc
bound
cmps
sub
std
fld
rol
loope
icebp
and
and
xor
or
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
adc
js
dec
push
shl
xchg
mov
inc
bound
inc
jbe
push
and
xor
js
in
loop
not
xchg
mov
inc
bound
inc
jbe
push
and
xor
cmp
mov
repz
not
xchg
mov
inc
bound
inc
jbe
push
and
xor
add
lods
pop
jne
icebp
in
cmc
rol
xor
push
add
add
icebp
in
cmc
rol
xor
push
add
add
icebp
in
cmc
rol
xor
push
add
add
lock
hlt
rol
mov
inc
pusha
push
jo
inc
je
add
adc
and
xor
cmp
shl
test
mov
inc
pusha
push
jo
inc
je
add
adc
and
xor
fsub
(bad)
jmp
sti
fisttp
(bad)
mov
jg
dec
jnp
or
sbb
sub
cmp
iret
out
(bad)
jmp
sti
fisttp
(bad)
mov
jg
dec
jnp
or
sbb
sub
cmp
retf
out
(bad)
jmp
mov
dec
outs
pop
jle
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
mov
dec
outs
pop
jle
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
mov
dec
outs
pop
jle
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
mov
xor
dec
jp
or
sbb
sub
cmp
retf
(bad)
jmp
push
inc
popa
push
jno
xor
sub
cmp
retf
std
jmp
lods
xchg
sbb
leave
std
fnstcw
sub
cmp
jmp
lods
xchg
push
adc
loope
sar
addr16
or
cmp
jmp
lods
xchg
add
xor
loope
shl
scas
pop
or
cmp
in
leave
std
(bad)
xor
rcl
leave
mov
sub
test
(bad)
xchg
mov
bndstx
or
fsubr
int
dec
clc
getsec
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
or
pop
or
neg
(bad)
repz
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
or
add
stos
int3
jecxz
icebp
aad
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
aaa
and
pop
(bad)
ffree
icebp
aad
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
aaa
and
inc
addr16
icebp
aad
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
aaa
and
jge
(bad)
lock
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
xor
(bad)
jnp
ja
jns
iret
sti
(bad)
aaa
add
xor
and
shl
ret
out
xlat
jecxz
xchg
mov
aas
sub
cmp
inc
jns
iret
sti
(bad)
aaa
add
xor
and
shl
ret
(bad)
loop
xchg
mov
aas
sub
cmp
push
ja
pusha
in
xlat
jecxz
ret
add
xor
and
shl
(bad)
loop
shl
ret
popf
ds
and
bound
repz
jecxz
jmp
push
and
adc
add
repnz
loop
shl
ret
pushf
cmp
loope
std
out
xlat
jecxz
pop
xor
and
adc
add
repnz
loop
shl
ret
cmp
and
aam
(bad)
in
aam
out
xor
and
adc
add
repnz
loop
shl
ret
cmp
adc
aam
(bad)
loopne
shr
mov
xor
and
adc
add
repnz
loop
shl
ret
cmp
adc
aam
(bad)
loopne
iret
add
and
adc
add
repnz
loop
shl
ret
cmp
sbb
add
dec
in
clc
xchg
jg
push
xor
and
adc
add
repnz
loop
shl
ret
cmp
sbb
shl
int
cld
int3
imul
adc
add
repnz
in
xchg
mov
cmp
sub
mov
fsubr
and
dec
in
stc
fucomp
int
mov
sub
push
jb
jmp
sbb
sub
stc
fucomp
int
mov
sub
pop
jle
out
cld
fsubr
mov
cmp
sub
stc
fucomp
int
mov
sub
pop
jge
out
fsubr
mov
cmp
leave
in
stc
fucomp
int
mov
sub
pop
jge
in
fsubr
lods
sbb
sub
stc
fucomp
int
mov
sub
pop
jge
in
cld
fsubr
xchg
sbb
sub
clc
fsubr
int3
cwde
mov
sub
pop
jns
jmp
sbb
sub
sbb
or
cld
enter
call
cmp
sub
jmp
mov
cmp
or
cld
enter
call
cmp
sub
fdivr
int3
call
sbb
sub
sbb
or
std
enter
call
cmp
sub
fdivr
int3
call
sbb
sub
sbb
or
clc
int3
call
pushf
mov
sub
fdivr
int3
call
sbb
or
cmp
sub
fadd
xor
add
adc
arpl
cmp
sub
fdivr
int3
call
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
es
sub
fdivr
int3
call
jecxz
repz
ret
out
mul
pop
xor
add
adc
arpl
dec
inc
jbe
xchg
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
scas
mov
jle
outs
jl
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
push
xor
add
adc
bound
push
inc
push
jbe
xchg
mov
(bad)
repnz
ret
mul
push
xor
add
adc
bound
push
inc
push
jbe
xchg
mov
(bad)
repnz
ret
mul
push
xor
popa
inc
jno
inc
gs
jne
test
mov
vpmullw
in
cmc
and
xor
popa
inc
jno
inc
gs
jne
test
mov
vpmullw
in
cmc
and
xor
and
xor
inc
jo
inc
fs
je
test
mov
(bad)
lock
in
hlt
and
xor
and
xor
inc
jo
inc
fs
je
test
mov
(bad)
lock
in
hlt
add
aaa
adc
and
xor
ja
inc
arpl
cmps
xor
out
not
(bad)
jecxz
repz
xor
pop
and
xor
ja
inc
arpl
cmps
xor
out
not
(bad)
jecxz
hlt
jl
xor
pop
and
xor
ja
inc
arpl
cmps
xor
out
not
(bad)
jecxz
cli
pop
jl
adc
and
xor
jbe
inc
bound
cmps
xor
out
not
(bad)
loop
ret
bound
pop
and
xor
jbe
inc
bound
cmps
xor
out
not
(bad)
jecxz
cwde
pop
js
and
and
push
inc
popa
push
jno
xor
rol
in
or
xor
xor
jne
inc
popa
push
jno
xor
rcr
mov
mov
and
xlat
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
mov
(bad)
repz
ret
out
mul
pop
xor
add
adc
arpl
push
inc
addr16
ja
xchg
aam
mov
mov
sbb
inc
inc
je
addr16
xor
enter
mov
stos
xchg
jmp
fidivr
jb
inc
jbe
adc
dec
ss
popf
hlt
fidivr
lea
adc
es
and
push
data16
dec
addr16
(bad)
enter
vpsrlq
mov
movs
cmps
shl
ret
inc
sub
jb
add
cmp
xor
ret
repnz
ja
pop
ret
out
push
repnz
or
ret
push
or
mov
xor
test
mul
push
push
es
jae
(bad)
and
xchg
and
ret
mov
mov
xchg
mov
add
jecxz
mov
mov
mov
mov
push
and
(bad)
mul
jp
ins
jle
(bad)
inc
push
mov
jmp
xchg
repnz
ins
daa
nop
mov
cmps
out
xor
popa
mov
jge
jmp
shl
mov
add
ret
out
cld
(bad)
jmp
jae
xchg
inc
push
out
jmp
stc
lods
xchg
(bad)
shl
scas
xchg
xchg
mov
(bad)
adc
xchg
mov
dec
push
and
ins
push
popa
out
stc
std
out
ret
push
sub
fbstp
push
pop
fst
push
daa
xchg
(bad)
int
push
inc
in
push
sahf
xor
and
lods
pushf
mul
mov
ret
mov
cmps
push
xor
shl
push
shl
(bad)
jmp
addr16
jb
or
inc
outs
push
cdq
not
clc
(bad)
into
rcl
and
and
sbb
xor
jmp
out
ret
lea
mov
jae
dec
xor
outs
pop
jne
or
jp
jmp
stc
icebp
in
faddp
mov
mov
dec
and
jge
dec
sub
xor
movs
fnsave
jmp
mov
gs
addr16
adc
jne
or
sbb
mov
fiadd
xchg
fwait
add
aaa
jno
xor
xor
ss
ror
fsub
cmps
mov
aaa
je
jle
pop
sub
cmp
push
jno
xlat
jmp
lock
movs
(bad)
loope
mov
outs
sbb
cmp
popa
xor
or
out
movs
lahf
mov
test
je
inc
jg
outs
and
xor
add
adc
in
hlt
iret
(bad)
call
out
movs
lahf
mov
test
je
inc
jg
outs
and
xor
add
adc
in
hlt
iret
(bad)
call
out
movs
lahf
mov
test
je
inc
jg
outs
and
xor
add
adc
in
hlt
iret
(bad)
call
out
movs
lahf
mov
test
je
inc
jg
outs
and
xor
add
adc
in
hlt
iret
(bad)
call
out
movs
lahf
mov
test
je
inc
jg
outs
and
xor
add
adc
in
hlt
iret
(bad)
call
out
movs
lahf
mov
test
je
inc
jg
outs
and
xor
add
adc
in
hlt
iret
(bad)
call
out
movs
lahf
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
add
mov
call
cmp
jbe
mov
push
call
mov
mov
cmp
je
test
je
push
push
push
call
mov
push
push
push
push
push
call
push
push
push
push
push
call
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stc
dec
jmp
cmp
cmp
cwde
fild
jne
xchg
(bad)
movs
or
mov
mov
mov
rcr
and
dec
add
jno
mov
cli
mov
sub
xchg
jmp
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
pop
cli
add
(bad)
call
mov
xchg
repnz
add
movs
adc
add
call
mov
(bad)
inc
jp
imul
out
push
dec
add
inc
les
loopne
jp
imul
mov
cmp
jmp
(bad)
(bad)
fidivr
inc
lods
icebp
in
mov
pop
loopne
add
pop
add
xor
clc
(bad)
movs
mov
mov
les
loope
mov
cmp
pop
adc
or
push
pop
cdq
mov
mov
mov
xchg
mov
outs
mov
dec
push
loopne
cmp
pop
push
(bad)
sub
cmps
jmp
in
mov
das
in
xor
xor
cmc
push
jb
popa
pop
pop
jae
cli
dec
jmp
test
ja
vphaddbw
push
sbb
jg
aad
xchg
push
or
out
mov
jl
test
mov
ror
xchg
xchg
mov
pop
enter
popa
not
sbb
xchg
mov
loope
jae
repnz
jae
pop
stc
dec
push
cmp
mov
sub
movs
jmp
sbb
rcl
dec
add
jmp
or
ss
and
sbb
inc
neg
fsubr
sbb
add
jno
popa
repz
jmp
push
stos
or
xor
adc
jb
jno
mov
jmp
push
mov
loope
les
enter
jmp
or
add
ficom
out
inc
call
and
data16
inc
or
int
retf
xor
shl
jp
push
pop
clc
push
mov
sbb
inc
adc
dec
mov
mov
jb
sub
xchg
and
adc
jns
scas
or
pop
scas
add
jns
add
sub
xchg
es
pop
sbb
sub
xchg
mov
in
xchg
and
cmp
bound
jg
cmps
adc
shl
or
xor
imul
xor
cmc
cmp
pop
inc
push
mov
mov
mov
mov
sar
push
ror
and
daa
sub
fldcw
scas
sub
scas
stos
mov
jne
and
adc
push
sbb
(bad)
test
adc
aad
imul
pop
imul
push
jo
add
imul
retf
fisubr
xor
xor
add
push
repnz
retf
stc
leave
fwait
mov
shl
icebp
outs
push
dec
adc
(bad)
arpl
and
loopne
stos
not
jp
loope
les
cdq
push
adc
and
inc
add
sti
fild
push
xchg
mov
sbb
inc
cmp
pusha
push
cli
in
clc
ret
or
fdiv
aas
xor
imul
jg
inc
dec
jb
cli
inc
and
mov
push
(bad)
pop
aad
adc
je
adc
mov
or
test
push
test
enter
stc
call
fisubr
pusha
sub
cli
inc
and
(bad)
fild
call
leave
inc
adc
and
cli
inc
jmp
sbb
rcl
dec
icebp
cmp
or
pop
xchg
and
sbb
inc
cli
call
sbb
add
jno
popa
repz
jmp
push
stos
or
xor
sbb
lahf
sub
cli
pop
repnz
push
mov
loope
retf
mov
jp
push
push
mov
jmp
push
push
jecxz
pop
mov
mov
mov
cmp
and
imul
sbb
test
adc
dec
rcl
movs
cmp
(bad)
fstp
push
pop
clc
push
mov
icebp
push
rol
cmc
dec
mov
mov
jb
sub
and
adc
js
mov
scas
add
jns
adc
sub
xchg
sub
pop
jmp
sub
ret
in
xchg
and
call
and
xor
or
sahf
xor
imul
or
and
mov
sahf
leave
adc
scas
mov
inc
jp
sub
shl
addr16
and
scas
push
mov
xchg
or
and
push
adc
call
rcl
xchg
bound
mov
pop
fstp
out
hlt
vpunpckldq
mov
stc
shr
fnsave
mov
cli
pop
scas
sub
scas
stos
mov
sub
gs
in
add
jno
aaa
xchg
adc
mov
mov
retf
test
cdq
(bad)
jle
jns
push
or
(bad)
lds
sbb
pop
inc
scas
imul
shl
mov
fiadd
jg
add
and
cmp
cmp
push
fldl2t
mov
push
push
hlt
adc
aas
cld
add
inc
bound
push
dec
pop
xchg
hlt
jmp
in
mov
mov
dec
pop
or
imul
push
mov
jge
or
jmp
outs
xor
icebp
pop
stc
call
and
loop
lods
outs
adc
nop
shl
mov
(bad)
arpl
pop
int3
dec
dec
cmp
adc
daa
mov
mov
push
out
stos
cmp
cmp
push
inc
adc
and
cli
ins
jmp
sbb
xchg
jne
and
mov
mov
or
retf
lds
icebp
inc
std
call
sbb
add
jno
popa
repz
jmp
push
stos
or
xor
sbb
test
test
cli
pop
hlt
mov
push
mov
loope
iret
mov
jp
push
push
mov
jmp
loop
jecxz
pop
mov
mov
mov
cmp
mov
jmp
mov
loope
test
adc
dec
lds
inc
movs
cmp
(bad)
fidivr
push
pop
clc
push
mov
int3
push
push
inc
adc
dec
mov
mov
jb
sub
mov
inc
cdq
jno
jge
test
pop
cli
pop
scas
add
jns
sub
sub
xchg
sub
dec
call
pop
push
fiadd
mov
in
xchg
and
call
and
cmp
bswap
ja
(bad)
fcmovb
retf
aaa
out
movs
call
xor
pushf
sbb
xchg
pop
cmc
jb
movs
mov
jge
mov
lock
loop
pop
in
gs
pop
dec
inc
ins
cld
sub
sbb
les
pop
ss
mov
xchg
mov
push
dec
pop
mov
jp
pop
push
or
cs
outs
xchg
xchg
jno
fisttp
push
xor
mov
adc
pop
push
dec
int3
push
aam
pop
ficom
jmp
shl
mov
ror
add
mov
pop
dec
pop
mov
xor
movs
pop
mov
mov
lods
cmp
(bad)
ja
ret
add
cmp
pop
sahf
ins
inc
cmp
mov
bound
xlat
add
add
sub
rcpps
mov
jns
(bad)
aaa
(bad)
daa
sbb
sub
adc
and
or
cli
hlt
jmp
icebp
scas
push
outs
pop
sub
pop
mov
aam
adc
inc
jno
pusha
fcomp
jnp
lock
les
mov
mov
fisttp
mov
retf
into
retf
in
cmps
mov
int
dec
mul
and
fs
iret
sub
and
mov
aad
vpmulhuw
cmps
fiadd
cmp
push
push
push
das
xor
sbb
ja
jp
(bad)
out
ins
sub
dec
sar
and
pushf
jo
push
mov
jmp
ficom
stc
imul
dec
shl
fisub
scas
xchg
shl
iret
nop
xor
retf
les
dec
sub
push
dec
pushf
(bad)
inc
adc
ja
sahf
stos
retf
(bad)
push
loope
sbb
stos
pop
cdq
dec
repz
cmps
popa
in
loop
jmp
scas
in
mov
mov
fnstsw
xor
test
push
xor
(bad)
in
dec
sub
mov
mov
aas
sbb
aas
icebp
mov
inc
dec
lds
inc
inc
mov
sbb
or
pop
jbe
jp
loopne
movs
in
shr
xor
ja
mov
aaa
in
lock
jne
scas
mov
jp
je
inc
jo
push
or
pushf
sbb
jle
rep
test
inc
adc
cmp
fucomi
xchg
fisttp
icebp
push
in
add
loopne
sub
cmp
pop
pushf
fadd
dec
sahf
out
outs
sub
or
push
add
lock
ror
and
in
dec
add
out
popa
sub
xchg
pop
add
jmp
fcmovb
mov
fisttp
fs
xor
pop
inc
xor
jge
mov
fs
sbb
leave
xlat
out
(bad)
adc
inc
xchg
jb
xchg
add
push
adc
test
add
out
mov
popf
jg
cmc
add
(bad)
ficom
pop
and
cli
into
xchg
xor
rol
add
jp
inc
cld
dec
mov
and
xor
ds
xor
leave
movs
pop
paddd
xchg
bound
sahf
int3
inc
add
mov
jp
xchg
sbb
add
push
add
sahf
sbb
jle
mov
push
dec
mov
and
pop
sub
xchg
fist
test
aam
aad
scas
stos
or
jne
outs
jg
dec
dec
adc
stc
lock
repnz
test
xchg
inc
or
cli
outs
lahf
cs
ds
dec
iret
cmp
sub
(bad)
xor
loope
push
fild
sub
fistp
sbb
int3
in
sbb
push
adc
ret
jp
mov
shl
xchg
stos
pop
adc
cmp
cmps
popa
out
dec
nop
mov
adc
and
shl
ror
pop
inc
cmp
je
inc
push
rol
retf
pop
imul
jmp
pop
mov
bound
or
cld
mov
and
fld
test
add
sbb
add
inc
push
leave
out
pop
xor
dec
jg
aaa
stos
fs
or
out
out
mov
jns
in
pop
fcomp
adc
addr16
xchg
adc
cmps
or
mov
(bad)
loope
rcl
push
push
mov
adc
xor
jno
pushf
leave
jne
mov
(bad)
pop
jne
mov
xlat
sbb
lds
sahf
in
pop
inc
push
jne
mov
imul
bound
popa
cmc
into
addr16
pop
mov
scas
xchg
mov
outs
pminub
jg
push
rep
shl
sub
pop
out
pop
mov
scas
sbb
out
test
mov
test
addr16
aad
shl
cmc
int3
mov
outs
fstp
mov
dec
test
inc
(bad)
and
sub
or
cs
jne
icebp
movs
xor
add
test
dec
movs
out
call
or
inc
sbb
jmp
lock
xchg
mov
aaa
scas
push
mov
leave
mov
aad
jle
jl
ins
leave
jo
aam
jbe
stos
xorps
pop
popa
xor
xchg
lock
mov
fisttp
jnp
lock
add
imul
mov
cmp
dec
fisttp
ja
addr16
add
fstp
loope
pop
add
fwait
movups
ret
scas
xchg
xor
fwait
mov
jns
shl
in
jmp
jbe
cmp
jmp
ds
sub
inc
inc
pop
push
aas
sahf
jae
dec
in
xchg
dec
rcr
aam
mov
sub
aas
xor
out
sub
pusha
add
ss
les
fcmovnu
xchg
xchg
je
xlat
add
add
xor
adc
sbb
xchg
stc
or
rol
pop
into
cmp
jmp
cli
mov
inc
add
aad
shl
jp
sbb
outs
into
fimul
dec
or
xchg
inc
(bad)
mov
mov
retf
or
mov
mov
cdq
dec
mov
adc
test
xchg
cli
push
stos
test
jns
jp
jg
pop
adc
mov
push
rcr
push
cli
mov
fild
shl
stos
iret
call
fs
mov
mov
jne
(bad)
add
addr16
sbb
scas
mov
mov
rcl
pop
mov
and
add
aad
rcr
shr
rcr
imul
sub
cmps
sahf
or
inc
test
(bad)
or
mov
or
mov
and
push
or
push
or
jp
stos
push
and
fsubr
div
dec
jno
pop
pop
pop
jns
jge
cdq
fimul
dec
cli
ja
sub
cmc
add
gs
add
pushf
push
sgdtd
aaa
sub
mov
jmp
and
xchg
test
rol
sbb
das
mov
xchg
cmp
pop
mov
movs
or
jae
jne
icebp
and
dec
pop
adc
mov
cmps
jmp
movs
mov
sub
cmp
aaa
jl
push
rcr
loop
ror
shl
jno
cmc
adc
mov
xchg
pop
or
xchg
xor
xor
add
(bad)
ss
jge
in
dec
inc
add
aad
int3
jp
add
fild
dec
out
pushf
pop
mov
out
add
sbb
push
icebp
mov
cmp
rcl
(bad)
into
cmp
add
add
icebp
and
push
add
pop
push
cmps
not
xor
pop
inc
mov
inc
fild
mov
mov
movs
push
ret
xchg
jb
loop
add
cmp
fimul
add
xchg
(bad)
les
cmp
sar
mov
sbb
iret
in
popa
out
jg
or
and
(bad)
loope
adc
sahf
inc
mov
adc
inc
mov
inc
in
xchg
mov
or
loope
mov
xchg
mov
call
xchg
push
push
sbb
fistp
and
maskmovq
idiv
daa
bnd
mov
mov
aad
hlt
scas
mov
iret
dec
xchg
bound
jno
fwait
xchg
inc
fs
jmp
push
pop
sub
shr
rol
shr
mov
push
inc
pop
sar
sbb
xor
(bad)
fld
sbb
out
dec
add
es
and
sti
dec
sbb
ret
jmp
dec
xchg
aas
imul
and
cld
sub
mov
aam
cmp
xchg
js
lea
cwde
mov
(bad)
and
in
sbb
add
mov
lds
mov
pop
imul
fimul
mov
aas
cmp
xchg
sbb
pop
call
inc
mov
movs
add
xchg
cmp
daa
pop
out
rol
add
adc
repnz
or
xor
push
sbb
test
fldenv
cmp
jp
adc
inc
out
jmp
cmps
ins
push
aad
les
xchg
ret
pop
ins
cmpps
mov
movs
jmp
jb
push
pop
mov
icebp
lock
ror
and
adc
push
mov
jmp
jp
and
add
xchg
push
rol
mov
jmp
loop
sbb
retf
pop
movs
xor
push
dec
or
call
xchg
mov
retf
or
or
push
jno
cs
xor
mov
xor
mov
arpl
jp
adc
add
sti
mov
gs
xchg
(bad)
popa
cmp
ins
xor
mov
adc
sub
outs
mov
adc
out
mov
jge
mov
pop
inc
jle
sub
mov
ss
sbb
or
xlat
or
lds
jecxz
or
dec
add
cli
mov
enter
inc
adc
mov
(bad)
push
and
retf
lea
mov
add
inc
adc
cld
fst
scas
scas
jno
mov
sub
xor
jmp
call
inc
inc
(bad)
mov
mov
pop
push
add
cmp
pop
jg
and
icebp
scas
add
mov
int3
rcl
jmp
cmp
mov
cmp
loop
cmp
and
sbb
add
mov
xlat
fisubr
pop
(bad)
and
scas
mov
push
dec
arpl
and
mov
add
lock
sub
cmp
clc
sub
fmul
dec
neg
and
cdq
or
into
mov
xchg
ror
cmp
repz
jns
pushf
repnz
or
(bad)
fimul
ds
jg
retf
mov
dec
xchg
es
test
sub
mov
fld
push
pop
call
rcl
call
les
inc
adc
push
xor
xchg
mov
je
or
nop
jecxz
or
aam
(bad)
jp
loope
movs
and
stc
mov
sub
test
jle
cmps
out
push
fdiv
adc
jge
das
and
mov
into
pop
or
(bad)
aaa
xchg
(bad)
enter
cdq
jo
ins
inc
inc
push
inc
push
push
stos
cdq
pop
ds
call
jp
mov
outs
sahf
dec
jmp
in
sbb
sub
sahf
test
out
pop
jne
jno
xor
inc
inc
adc
enter
stos
mov
mov
jecxz
pop
sbb
add
pop
cmc
push
jmp
jle
mov
movs
aam
cs
mov
adc
sub
cmp
dec
lock
push
mov
xor
cmp
adc
jno
and
rol
sbb
popa
in
pop
inc
lds
nop
xor
jne
ja
adc
or
scas
sbb
jmp
adc
jle
jl
mov
icebp
push
test
push
adc
mov
aas
and
jmp
popa
lds
jns
or
std
cmps
rcr
add
inc
cmp
sbb
in
inc
retf
aaa
jle
mov
mov
popf
jne
leave
sub
inc
cmp
retf
mov
nop
aaa
loopne
push
mov
test
out
or
cmc
jl
sub
sbb
jmp
icebp
fs
ror
fisub
add
popa
aam
or
(bad)
jmp
js
jecxz
lahf
or
mov
adc
out
(bad)
adc
movs
inc
and
jmp
cmp
and
retf
sub
stc
cmps
out
dec
inc
mov
inc
and
cmps
retf
inc
cli
call
add
xor
or
jmp
popa
in
push
pushf
jg
sbb
mov
inc
leave
jp
bound
mov
dec
or
jecxz
sub
arpl
pop
test
or
jmp
add
jmp
repnz
or
cmp
aad
or
mov
mov
out
dec
das
das
sub
pop
mov
inc
cli
dec
sub
call
stos
mov
mov
xchg
call
test
call
mov
add
imul
je
shr
outs
jmp
jmp
jp
mov
icebp
outs
sub
movs
adc
in
push
xor
or
adc
fdivr
icebp
stos
mov
xor
(bad)
popa
cdq
sub
fistp
popa
push
into
mov
hlt
stos
mov
icebp
sub
ds
retf
jp
mov
popa
in
or
cmp
mov
stos
mov
and
into
sub
fchs
dec
pop
out
sbb
sbb
or
sbb
lds
inc
imul
jne
jp
test
add
sar
and
mov
sti
retf
icebp
jmp
test
mov
mov
(bad)
add
outs
iret
and
xchg
lahf
add
xchg
add
test
cli
cmp
clc
(bad)
inc
xor
mov
movs
inc
push
(bad)
cmp
popa
dec
repz
inc
add
jne
(bad)
imul
jp
das
dec
pop
rcl
mov
bound
outs
mov
fcmove
retf
cdq
stos
and
mov
xor
fisub
sub
sbb
dec
sub
jb
clc
ficom
ret
push
rol
jp
push
pop
jns
ret
sub
push
nop
add
mov
inc
adc
mov
xor
add
xchg
jae
sbb
sar
enter
icebp
nop
movs
repnz
and
push
pop
repz
cmp
rol
hlt
and
dec
stos
rcr
mov
push
(bad)
adc
add
loope
xor
fdivr
xchg
loop
mov
int
sar
sub
outs
mov
in
nop
or
icebp
stos
jno
repz
test
pop
adc
add
xor
pusha
fnstenv
rcr
test
loope
rcl
les
adc
cmp
in
sbb
mov
mov
jns
repz
mov
imul
dec
dec
add
push
leave
cmps
mov
repz
xchg
out
mov
into
jne
movs
add
or
or
mov
mov
xor
adc
mov
sub
push
jno
out
mov
sub
sahf
mov
int3
jmp
mov
int3
xlat
cs
aam
icebp
xor
add
jno
imul
cmc
xor
icebp
inc
xor
(bad)
and
fld
je
and
or
mov
popf
jne
sbb
cmc
pushf
xchg
fwait
test
je
imul
push
or
and
and
sbb
push
jbe
fisttp
(bad)
push
push
out
sbb
cld
cld
xor
mov
mov
xchg
adc
fistp
shr
js
adc
aad
cmp
mov
push
xchg
push
hlt
push
dec
cmc
int3
mov
outs
lods
stos
ins
in
xor
aaa
lds
mov
into
and
mov
push
test
push
jl
pusha
call
lds
inc
(bad)
mov
sbb
inc
cli
pop
jmp
fs
out
ret
fisubr
je
xchg
lods
dec
adc
dec
aad
popa
xchg
pop
int3
add
leave
idiv
cmc
mov
jbe
sub
lods
movs
outs
dec
adc
movs
sub
push
pop
arpl
cwde
in
fadd
mov
pop
bound
push
(bad)
xor
mov
shl
aas
call
(bad)
les
mov
xchg
test
pop
scas
push
test
mov
retf
sub
in
rcl
push
popf
call
fs
sbb
dec
mov
in
repnz
cmc
stc
mov
pop
bswap
mov
pop
iret
shr
fmulp
in
paddd
mov
in
mov
jno
xlat
xchg
pop
dec
(bad)
hlt
jp
or
xlat
out
xor
sar
sub
cli
mov
retf
fisubr
jge
imul
push
icebp
adc
shl
daa
lods
or
aad
in
inc
dec
jno
cmps
sub
rcl
mov
dec
hlt
fidiv
into
and
push
fisub
stc
ret
mov
and
mov
dec
cli
dec
cmps
xchg
ficom
xchg
mov
jecxz
shl
out
pop
pushf
(bad)
shl
dec
es
push
retf
les
sub
cli
gs
add
jmp
sbb
ss
repnz
loope
in
ror
lods
cmps
push
pop
mov
sub
shr
fisub
ins
or
loope
push
mov
icebp
xor
std
cli
jae
or
jno
adc
cmp
xlat
ror
add
jbe
test
or
popa
lock
sar
xchg
push
pop
stc
leave
add
cmp
mov
mov
push
dec
cmc
int3
or
push
stos
ins
call
cmp
pop
call
cli
inc
dec
mov
es
int3
idiv
jecxz
movs
jne
mov
xchg
mov
push
sbb
in
loope
pop
outs
xchg
enter
out
loope
pop
jbe
jnp
scas
and
pmullw
add
mov
iret
outs
retf
jl
jne
cs
test
dec
add
mov
mov
xor
bound
jl
ror
jne
mov
movs
in
(bad)
mov
mov
popa
out
or
mov
mov
call
shl
pop
fstp
retf
pusha
(bad)
sub
mov
add
inc
mov
fidivr
mov
mov
gs
jno
test
push
retf
jne
mov
fcom
jb
mov
ins
add
pop
int
movs
ret
xchg
ficom
cld
mov
xchg
dec
call
cs
js
das
in
adc
mov
jno
and
mov
scas
call
jle
pop
pop
(bad)
in
xor
jmp
pop
cmp
popf
xchg
fmul
cli
cwde
dec
mov
inc
mov
xchg
push
cmc
fisttp
into
fimul
mov
jmp
xor
push
fisttp
push
pop
jne
cmp
push
pushf
mov
(bad)
cld
(bad)
in
xor
lds
cmp
mov
ror
and
dec
dec
mov
cld
adc
sub
dec
scas
mov
mov
push
cmp
stos
jnp
sbb
cwde
repnz
sub
or
mov
mov
jne
xchg
retf
icebp
xlat
loopne
fimul
ds
pushf
mov
sbb
pop
sub
fcmovb
(bad)
call
fwait
cmp
movs
out
jmp
mov
push
shr
scas
fcmovbe
xor
push
inc
daa
call
fs
(bad)
adc
mov
push
push
loop
jg
adc
les
xor
test
std
or
(bad)
std
cmp
cmc
mov
and
xchg
in
js
xor
ror
dec
daa
cmp
fldcw
cmps
popf
sbb
push
jns
ret
xor
loope
xchg
fld
mul
fidivr
push
cmp
cld
cli
sahf
out
or
push
mov
mov
xlat
cs
push
and
xor
inc
(bad)
std
mov
cmps
jge
push
xchg
adc
stos
movs
pop
sub
push
mov
ror
sub
lods
js
jno
in
push
jmp
push
push
fisubr
fwait
ds
push
movs
xchg
imul
cld
sbb
lods
sbb
fisubr
sar
stc
inc
push
or
lods
movs
xlat
mov
sahf
dec
add
mov
outs
aaa
or
jne
mov
pushf
pop
add
pusha
aad
push
adc
cwde
add
outs
retf
or
jne
sub
lods
mov
pushf
mov
jg
outs
and
jno
or
hlt
pop
clc
and
jl
ins
xchg
jne
aas
xor
push
xchg
xor
mov
mov
or
sub
scas
pop
sub
xor
jne
cmp
xchg
lods
cmps
push
dec
cld
stos
jno
sbb
ja
dec
test
in
or
iret
dec
scas
jg
rcr
mov
cld
jno
jmp
inc
xchg
dec
scas
test
inc
or
loopne
push
imul
loope
ds
push
mov
fs
push
loop
jae
movs
pop
sub
stos
loope
pop
pop
cmp
pushf
adc
cmp
sub
sbb
sti
addr16
xchg
cs
adc
dec
imul
daa
mov
mov
mov
push
rol
and
inc
jle
lock
call
gs
add
aad
cld
or
xor
(bad)
or
lock
push
xchg
cli
pop
dec
xrelease
addr16
dec
(bad)
cmp
mov
cmp
mov
jmp
test
je
jo
in
sbb
(bad)
arpl
fisub
loopne
pop
mov
out
jmp
mov
add
jno
popf
pop
cwde
std
mov
fsubr
xlat
aaa
lock
or
mov
ja
pop
mov
jle
addr16
push
or
iret
aam
jle
lock
ror
icebp
int
fisttp
lahf
jp
push
add
in
push
mov
mov
daa
fidiv
das
and
jle
xor
push
scas
dec
cmps
jne
xchg
retf
or
fld
lods
push
jmp
jle
(bad)
jo
jmp
or
sbb
or
sbb
iret
test
das
sub
outs
jno
in
and
xchg
push
int3
add
and
and
iret
add
lods
mov
clzero
xor
or
in
mov
or
pop
les
cdq
pop
adc
cmp
sub
jno
mov
aam
lods
fist
fsub
inc
xor
push
push
adc
inc
pop
(bad)
popa
xchg
cmps
sub
out
push
sbb
test
mov
mov
mov
mov
cmp
adc
mov
std
adc
fs
out
inc
std
jg
jp
and
mov
sbb
push
call
mov
sub
jmp
sub
js
inc
jnp
push
je
movs
add
push
das
sbb
push
sub
adc
(bad)
cld
ss
cwde
or
lods
add
ret
imul
pop
mov
(bad)
xchg
mov
sbb
pop
add
xchg
loope
dec
out
aas
mov
cdq
adc
xchg
push
add
aam
imul
repz
iret
rcl
outs
adc
fimul
pop
add
xor
dec
jle
adc
cmp
dec
retf
cli
mov
xor
stos
jp
movs
jne
jbe
push
fs
xor
fadd
jno
mov
add
xor
hlt
idiv
and
cmp
movs
adc
cli
aad
sbb
adc
jle
xor
xchg
mov
ficom
sub
mov
sbb
imul
jle
leave
icebp
icebp
das
stos
mov
movs
xor
outs
mov
test
push
fs
retf
ds
adc
mov
jle
push
pop
add
shl
dec
inc
ror
pop
ficomp
jge
icebp
inc
adc
lds
stos
mov
retf
icebp
addr16
not
inc
lock
dec
push
xlat
je
mov
xlat
mov
xor
out
adc
loop
push
loope
cli
mov
retf
xor
icebp
xchg
push
add
sbb
stos
rcl
adc
retf
arpl
aam
xor
stos
jno
mov
leave
stc
inc
and
dec
in
leave
and
xchg
popa
push
inc
fiadd
push
retf
je
(bad)
(bad)
out
sub
pop
mov
loope
mov
inc
test
jns
fdivr
push
stos
xchg
call
and
xor
popa
adc
add
xor
mov
mov
push
xchg
cwde
pop
jbe
dec
mov
(bad)
test
(bad)
pop
push
mov
xchg
inc
jge
push
pop
lods
mov
pop
aas
popa
ins
mov
cmp
sub
or
icebp
push
pushf
retf
sbb
or
mov
mov
sub
xchg
aam
lods
cld
arpl
jge
mov
cmp
and
push
sbb
xor
int3
inc
cmp
addr16
mov
xor
test
xchg
ins
pop
in
dec
add
cmp
fstp
pop
push
push
pusha
imul
scas
mov
(bad)
adc
xor
lea
sub
mov
dec
(bad)
popa
leave
cmp
rcr
xchg
ds
dec
add
lea
jmp
mov
dec
jno
popa
sub
mov
cmp
stos
pop
scas
dec
rcl
and
jo
pusha
out
cmc
mov
mov
xor
cmp
ror
fimul
sti
aas
addr16
push
mov
test
test
lods
mov
or
add
jae
popa
pop
shl
xor
push
xchg
fisttp
jle
dec
sar
mov
inc
in
call
mov
(bad)
mov
pushf
in
mov
xchg
inc
rcl
fimul
jo
outs
fidivr
inc
popa
and
fidivr
nop
cmp
loopne
cmp
out
inc
jp
rcr
dec
sahf
sbb
retf
in
mov
mov
jne
outs
je
and
xchg
outs
(bad)
out
into
or
les
or
xor
dec
leave
jno
push
movs
stc
rcr
jmp
pusha
and
mov
push
xchg
push
push
les
dec
add
int
adc
fs
stc
sub
in
ja
add
aam
mov
shl
(bad)
and
xlat
stos
inc
lds
jmp
outs
test
inc
loopne
xor
jge
pop
out
pop
out
mov
fidivr
gs
dec
aaa
stos
dec
dec
sub
xor
or
or
mov
adc
shl
jmp
push
ror
retf
cli
jmp
aaa
test
mov
sbb
dec
pop
imul
add
mul
inc
mul
inc
xchg
xor
dec
jp
out
push
sbb
in
aam
sbb
movs
add
ja
imul
aaa
jl
ins
out
movs
mov
xchg
loope
and
out
dec
mov
aam
sub
and
xrelease
mov
pop
jl
std
fbld
and
shr
mov
cmp
inc
call
sbb
fidivr
mov
pushf
aas
fld
div
jp
shr
scas
push
push
into
imul
cmp
sbb
mov
dec
sub
cmps
mov
ficomp
push
rcl
(bad)
jl
push
aad
shr
rcr
sub
ficomp
inc
(bad)
movs
jmp
cmps
test
pop
pop
call
inc
inc
cmp
aas
xchg
mov
popa
xchg
and
retf
fwait
pushf
sub
push
add
outs
dec
dec
push
loop
cmp
xchg
xchg
mov
mov
cwde
dec
dec
shl
call
add
inc
imul
rcr
adc
cmp
jae
loop
(bad)
and
pop
xor
pop
stos
dec
(bad)
xchg
or
dec
adc
dec
cli
mov
int3
jno
adc
sbb
xor
pop
sar
mov
adc
popa
in
push
retf
jmp
icebp
stos
push
retf
mov
xlat
dec
test
add
jo
popa
sbb
test
and
lods
mov
or
push
xor
out
dec
mov
cli
fistp
add
loop
push
inc
retf
jb
loope
cmps
fisttp
xor
rcl
cs
loop
(bad)
inc
ret
pop
popa
neg
add
into
out
fcmovnu
aam
and
pushf
stos
(bad)
or
repz
cli
not
jmp
(bad)
cli
xchg
push
icebp
xor
and
inc
mov
and
push
fadd
(bad)
lahf
sbb
add
sub
stc
cmp
pop
or
mov
lea
shl
push
fldl2t
stos
pop
inc
shr
jo
in
test
cmp
xchg
sub
addr16
or
xor
jecxz
or
xchg
mov
mov
cmps
leave
cmp
push
mov
lds
jne
fisub
push
push
sub
add
or
inc
loopne
call
test
push
movs
sbb
das
xor
in
sbb
or
mov
popa
push
ja
icebp
mov
lds
shr
mov
outs
sahf
fstp
xor
icebp
ins
movs
rcr
test
gs
and
out
mov
sub
sub
sbb
add
pop
xor
call
mov
sub
adc
retf
sbb
les
pop
add
sub
rcl
xor
dec
or
add
imul
lea
inc
sub
mov
or
shr
mov
adc
jmp
or
cmp
mov
imul
mov
or
shl
push
enter
movs
pop
mov
dec
add
cmps
test
jno
dec
cmp
sub
pusha
pop
rol
cdq
cmps
and
dec
sub
sub
xor
movs
call
in
movs
pushf
dec
or
outs
in
xchg
fmul
mov
xlat
dec
retf
sbb
(bad)
test
sbb
daa
and
adc
mov
pop
ret
les
std
pop
xchg
sahf
adc
shl
and
cmps
(bad)
jg
and
jge
inc
jno
add
inc
or
call
dec
dec
mov
(bad)
ret
nop
repnz
mov
xchg
or
mov
pop
out
add
ins
jns
adc
add
cdq
fimul
dec
add
pop
mov
xor
stos
cld
sub
ins
jg
cdq
dec
sub
cmp
loop
cmp
sahf
jne
xchg
mov
cmc
sbb
and
shl
jl
cli
lock
fist
mov
push
in
repnz
mov
shr
pop
lds
icebp
cmp
inc
sbb
push
or
cmp
test
call
and
sbb
mov
inc
repnz
loop
push
ins
dec
mov
xchg
fld
dec
stc
or
fldenv
js
cli
add
bound
cmp
cmp
and
repz
aas
jmp
pop
sbb
mov
addr16
xchg
pop
push
dec
add
sbb
xor
pop
(bad)
xor
push
adc
outs
(bad)
and
scas
push
jno
out
mov
aad
inc
mov
dec
aad
leave
xchg
xor
and
xor
adc
add
adc
in
xchg
(bad)
dec
jb
loope
mov
pop
or
cli
sbb
das
and
cwde
jno
xor
aaa
push
and
aad
ss
cmp
xor
daa
sbb
out
sub
xchg
mov
pop
push
outs
push
icebp
cmp
pop
fs
js
pop
push
dec
fimul
inc
repnz
push
stos
inc
inc
enter
jb
xlat
sub
pop
and
call
ret
mov
and
inc
mov
and
sub
push
rcl
rcl
jno
ins
loop
repnz
lds
nop
mov
bound
adc
cmp
inc
hlt
and
dec
mov
xchg
mov
rol
mov
cmp
out
test
stos
cmp
repnz
sub
xor
jmp
scas
movs
rcr
jbe
scas
stos
pop
xchg
rcr
call
sub
adc
(bad)
in
jecxz
cs
xchg
xchg
ret
xor
push
cwd
and
std
or
adc
inc
scas
icebp
call
fs
push
dec
mov
jno
fs
sbb
leave
loop
retf
push
xchg
mov
loope
push
shl
push
jb
sar
ds
sbb
enter
popa
xchg
and
jp
and
call
mov
cmp
imul
mov
jbe
dec
push
loope
rol
sbb
push
pushf
es
mov
fs
adc
jmp
jp
movs
out
jge
jnp
cdq
adc
pop
test
scas
out
xchg
sub
in
bound
(bad)
ds
xchg
call
pop
mov
sbb
fsubp
scas
pop
mov
stos
mov
loop
in
jne
aad
adc
lds
sbb
les
fcmovbe
or
jb
bound
jp
jnp
sar
cli
int
jne
sbb
pop
test
add
icebp
or
adc
(bad)
mov
and
push
out
and
arpl
nop
movs
call
xchg
push
clc
sbb
loop
outs
jmp
jmp
test
xchg
stos
xchg
stos
dec
adc
jmp
mov
mov
xchg
pop
cmps
xor
adc
mov
and
imul
call
or
mov
test
loopne
rol
test
je
and
add
add
sub
sub
dec
fist
or
jp
ret
fwait
inc
jp
test
mov
jne
aas
repnz
retf
cmc
popa
in
xchg
xchg
nop
cmc
icebp
out
and
into
jmp
dec
jle
jnp
ret
retf
mov
fild
or
mov
ficom
add
pop
jns
mov
pop
cmps
or
ins
mov
ficomp
retf
cdq
stos
and
sar
xor
mov
arpl
jno
repz
sub
jb
clc
ficom
ret
push
rol
jp
push
pop
jns
ret
sub
push
nop
add
mov
jle
xchg
retf
mov
mov
xor
add
xchg
jae
sbb
jmp
icebp
nop
movs
repnz
and
push
pop
repz
cmp
mov
jo
and
int
rcr
mov
push
(bad)
adc
add
leave
cli
xor
fdivr
xchg
loop
mov
xchg
dec
sar
sub
mov
nop
in
xchg
or
icebp
stos
movs
call
js
adc
add
xor
popa
fnstenv
jmp
test
loope
rcl
les
adc
cmp
out
sbb
mov
mov
jns
repz
cmp
loop
dec
dec
add
jno
and
push
leave
cmps
mov
repz
dec
mov
jo
add
cdq
not
add
xor
rcr
or
fiadd
ins
bound
popa
dec
and
jno
retf
int
cmp
(bad)
jle
mov
mov
mul
pop
xor
imul
cmc
mov
mov
fdivr
lahf
dec
stos
imul
and
or
sbb
popa
in
out
repnz
scas
neg
jle
iret
push
ror
test
popa
push
(bad)
pop
add
js
je
mov
int3
cs
in
push
aam
rcr
pop
mov
jp
jecxz
pop
call
in
dec
dec
mov
popf
ffreep
jmp
sar
jmp
pop
(bad)
sbb
dec
adc
mov
xor
loope
pushf
dec
pop
stc
lahf
mov
leave
jg
inc
imul
dec
push
cli
adc
dec
dec
push
repz
cmp
push
icebp
pop
into
cld
sub
cmp
mov
(bad)
shl
push
ror
rol
jnp
jnp
pop
dec
and
cmp
shl
or
adc
xchg
dec
stos
loope
adc
jg
stc
shl
outs
fs
push
mov
jmp
jmp
push
in
shr
pop
mov
leave
shr
mov
cli
xor
imul
or
lds
push
xor
jl
cmp
clc
call
lea
dec
adc
xchg
push
pop
sub
xor
xor
aad
in
mov
sbb
mov
outs
mov
jne
icebp
out
xchg
cmps
xchg
mov
cld
jp
sbb
jmp
lock
ds
gs
cmp
pushf
cmc
xchg
sar
(bad)
mov
mov
aas
pop
jmp
dec
outs
sahf
or
mov
jle
push
cli
sbb
sub
pop
sbb
cmps
pop
add
mov
fldcw
xchg
bound
xchg
adc
xchg
das
sbb
inc
(bad)
popa
pop
(bad)
add
movs
outs
mov
jmp
rcl
test
call
push
adc
add
sbb
pushf
ins
mov
xor
loop
pop
rcl
add
add
cmp
pop
sbb
(bad)
iret
cld
push
inc
out
mov
and
leave
xchg
cmp
inc
pop
push
mov
aad
mov
ror
shr
fimul
paddd
outs
xor
pop
int3
inc
jmp
jmp
aam
and
push
out
fild
jnp
dec
mov
inc
cmp
dec
mov
iret
and
push
movs
bnd
test
xor
adc
in
sbb
stos
mov
fild
call
(bad)
loope
adc
push
pop
out
and
push
aad
cli
call
int
std
sti
mov
icebp
jmp
gs
loope
jb
mov
je
jmp
call
jmp
icebp
adc
dec
fild
push
adc
jmp
ret
xchg
fsubrp
mov
rol
rcl
inc
dec
or
jno
or
push
pop
stc
cli
or
jecxz
inc
loope
mov
and
xor
arpl
jp
mov
sbb
xor
out
loope
mov
cmp
pop
adc
or
push
pop
cwde
mov
mov
mov
xchg
mov
outs
mov
dec
push
loope
add
push
(bad)
sub
cdq
jmp
in
mov
das
in
xor
xor
cmc
push
jae
popa
pop
pop
jae
cli
dec
jmp
test
ja
mov
pop
push
mov
jno
je
push
or
out
mov
or
mov
(bad)
stos
dec
fadd
adc
or
pop
add
retf
nop
mov
push
iret
pop
pop
cmp
xchg
lods
ror
dec
jmp
add
add
(bad)
retf
sbb
inc
call
and
pop
sub
sbb
test
adc
dec
repz
mov
movs
cmp
(bad)
call
pop
clc
push
mov
jb
cmps
inc
adc
dec
mov
mov
jb
sub
or
inc
cdq
jno
inc
sbb
or
cli
pop
scas
add
jns
sbb
xchg
sub
xchg
push
push
pop
and
jle
sub
jle
add
jns
and
call
and
adc
add
xor
or
or
dec
sahf
xor
imul
xor
push
cmp
and
mov
mov
push
fldcw
sub
xchg
push
jae
sub
push
ret
and
cli
shr
jno
js
and
ror
rcl
dec
arpl
shr
mov
or
and
inc
(bad)
call
sbb
add
stos
popa
repz
jmp
push
stos
or
xor
cmp
fisubr
adc
add
fisubr
lds
and
mov
add
xchg
out
sbb
cmp
out
and
push
fwait
inc
jmp
mov
xchg
in
lock
inc
int
(bad)
lods
dec
inc
outs
imul
inc
int3
adc
mov
inc
cmp
mov
pop
call
sahf
inc
mov
loope
fisubr
sar
out
loopne
pop
mov
outs
data16
pop
gs
mov
je
repnz
in
xor
mov
shl
gs
icebp
dec
(bad)
xor
in
or
push
xchg
sub
retf
test
pop
xchg
int
add
lods
adc
mov
in
sbb
cmp
pop
sbb
xor
mov
and
mov
(bad)
jmp
sub
inc
jb
or
xchg
jb
fs
icebp
mov
je
fimul
cli
inc
and
ficomp
cmp
icebp
loope
sbb
mov
cmp
bound
dec
or
das
add
test
pop
loope
mov
cmp
adc
mov
or
sub
push
inc
fdivrp
xor
call
xor
sti
xchg
inc
shl
ret
push
cmc
push
cli
lock
xchg
jb
add
movs
(bad)
adc
fdivr
leave
sar
(bad)
ins
jno
mov
cli
sub
sahf
test
imul
pop
loopne
test
pusha
cdq
out
dec
add
jno
ret
or
scas
dec
mov
jmp
push
std
loope
adc
jp
push
clc
add
adc
xchg
jb
repz
retf
nop
mov
neg
ror
jle
icebp
repnz
jae
test
mov
push
clc
sbb
loop
outs
jmp
jmp
xor
mov
jp
push
xchg
lds
and
push
pop
sar
jge
gs
ret
psrlq
jp
push
pop
jns
ret
sub
push
nop
add
mov
jg
xchg
retf
mov
mov
xor
add
scas
jae
sbb
jmp
icebp
nop
movs
repnz
and
push
pop
repz
cmp
cmps
inc
jo
and
dec
stos
rcr
mov
push
retf
inc
push
jno
add
scas
leave
ficom
fdivr
xchg
loop
mov
and
sub
push
nop
in
xchg
or
icebp
stos
xchg
call
js
adc
add
xor
popa
fnstenv
jmp
test
loope
rcl
ret
dec
xchg
cmp
jmp
mov
jns
repz
cdq
mov
aas
pop
push
mov
jno
and
push
leave
movs
mov
repz
dec
mov
jo
add
cdq
hlt
adc
cmp
or
sahf
xchg
nop
(bad)
shl
imul
jp
das
dec
pop
shr
mov
bound
push
mov
fisub
stos
and
loop
jp
push
dec
out
mov
ins
sti
outs
in
pop
push
cmp
or
ficom
push
repnz
dec
jle
push
jno
sbb
(bad)
xchg
jo
adc
sub
adc
mov
xchg
fst
adc
sahf
pop
fmul
in
jne
pop
sahf
pop
call
rol
sub
into
push
(bad)
out
sbb
fcom
scas
mov
jmp
repz
out
mov
mov
aad
add
pop
fiadd
push
jecxz
pop
ficom
fild
sbb
or
push
mov
xor
mov
sahf
mov
jmp
cmps
push
lods
dec
pop
into
cmp
cdq
lds
sbb
mov
cmp
sub
retf
mov
loopne
and
imul
xor
add
jp
jp
unpckhps
sahf
jae
sub
mov
mov
leave
jp
loope
push
adc
mov
gs
xchg
push
xor
icebp
xchg
fbstp
adc
sbb
sar
xor
or
cmp
sub
xchg
sub
ja
jecxz
ror
cmp
jp
inc
mov
outs
(bad)
jns
or
jmp
inc
cli
dec
and
rol
add
jmp
ret
jnp
out
or
into
loope
xchg
cli
mov
shl
mov
sbb
scas
in
int
ror
jbe
mov
xlat
fs
popa
repnz
retf
fldcw
in
fdiv
pop
(bad)
ds
or
sbb
cmc
cmp
aaa
pop
add
adc
cld
add
mov
push
cli
cmp
xchg
or
adc
or
push
ins
(bad)
jne
popa
and
call
out
dec
in
dec
adc
push
add
jmp
cs
mov
retf
cld
stos
sub
sbb
mov
pop
mov
dec
mov
retf
xor
out
and
je
xor
inc
xor
mov
cmp
push
out
cli
pop
jmp
rol
test
jmp
jmp
pop
add
retf
nop
mov
push
iret
pop
pop
cmp
shr
ds
in
push
rol
jo
xchg
iret
mov
mov
mov
scas
cmp
lock
stos
xor
mov
das
mov
out
add
cmp
mov
outs
inc
add
mov
in
cmp
dec
mov
mov
mov
jp
push
sub
push
xchg
and
inc
sbb
sub
mov
cmp
push
clc
pop
adc
jae
mov
xchg
fst
mov
and
test
(bad)
jmp
push
mov
jmp
test
dec
out
or
pusha
sub
lods
loope
push
adc
push
sbb
rcl
xor
sbb
mov
xchg
sets
clc
jmp
push
in
aam
or
mov
and
add
sub
mov
or
repnz
and
sbb
inc
rcr
fsubr
sbb
add
jno
popa
repz
jmp
push
stos
or
xor
xor
pop
sub
sbb
fisub
push
mov
loope
dec
enter
jmp
inc
push
jecxz
pop
mov
(bad)
fidiv
out
inc
call
and
pop
sub
ins
or
cmc
xchg
in
adc
shl
jp
push
pop
clc
push
mov
aas
push
bound
cmc
dec
mov
mov
jb
sub
dec
and
mov
dec
sbb
sub
pop
scas
add
jns
sbb
add
pop
jmp
sub
mov
and
call
and
sbb
shl
or
add
dec
sahf
xor
imul
or
xor
cmp
and
(bad)
imul
ds
push
je
push
cs
and
or
imul
rcl
or
push
rcl
xchg
jg
aas
cmps
in
sbb
stos
mov
fistp
or
jbe
aas
inc
pop
ficomp
(bad)
jp
xchg
lods
pop
xchg
cmp
and
stos
push
adc
je
sub
xor
rol
mov
xor
test
aad
nop
inc
jns
ror
xor
inc
cwde
stc
pop
je
mov
popa
in
push
sbb
mov
mov
inc
cli
and
sub
js
pop
inc
sbb
(bad)
cld
jae
mov
cmp
or
mov
jne
mul
push
pop
pushf
mov
vpmullw
ja
jmp
test
sbb
shl
out
xor
jno
push
push
add
jo
popf
sbb
adc
jle
push
das
loope
cmp
lods
pop
add
enter
jno
adc
scas
out
mov
ss
in
sbb
xchg
jno
jno
dec
push
(bad)
and
jb
jmp
sar
call
out
adc
mov
add
cli
repnz
nop
xor
ins
mov
dec
shr
ins
pop
fwait
call
push
pop
int3
cli
hlt
scas
ins
sbb
and
push
repz
movs
jne
test
movs
in
mov
adc
jo
sub
cmc
sub
and
sbb
loope
mov
cmp
fist
sbb
xchg
xchg
cmc
mov
and
push
and
retf
sar
out
sbb
jno
call
add
push
push
add
fisttp
add
addr16
dec
push
test
inc
lea
add
rol
add
cmp
mov
fadd
xor
or
pop
dec
lea
pop
lods
push
(bad)
fwait
mov
jmp
scas
icebp
xor
and
mov
push
cmp
popf
fisub
clzero
xor
test
test
sbb
in
rcr
dec
ret
xor
dec
pop
std
dec
xor
and
stos
mov
popa
push
cmc
xchg
push
ror
xchg
bound
leave
jle
mov
dec
add
push
mov
int
stc
jb
bound
test
out
sti
out
pop
(bad)
std
mov
fdiv
pop
test
and
push
and
retf
mov
dec
aad
xor
punpckhwd
pop
and
inc
and
cmp
stos
and
inc
pop
(bad)
push
test
int3
cmp
out
in
dec
xor
mov
add
test
cmp
add
jle
retf
hlt
jmp
jl
mov
mov
loope
movs
stc
ror
and
int3
add
pop
inc
outs
and
inc
push
fcmove
test
xchg
and
push
dec
sub
mov
mov
jle
stos
js
xchg
jp
loop
xchg
call
push
punpcklwd
jmp
lods
out
push
test
sysenter
rcl
dec
add
jno
sahf
sqrtps
cli
scas
jns
test
or
cmps
pop
shl
rcl
mov
lods
pop
lock
add
lahf
in
jle
or
gs
dec
shl
jmp
(bad)
ja
aad
dec
scas
xchg
dec
addr16
pop
aad
xor
daa
cs
daa
das
sbb
mov
push
inc
(bad)
mov
pusha
and
stos
adc
pop
das
rcr
sub
sbb
xor
mov
add
push
push
scas
sub
cdq
mov
jle
fs
ja
bound
mov
pop
push
mov
inc
test
lods
and
sbb
les
and
lods
test
pop
jmp
jg
push
push
ins
shr
pop
push
test
out
adc
(bad)
aaa
jp
pop
push
mov
mov
push
out
ins
jbe
loopne
and
imul
retf
fistp
xor
mov
(bad)
sub
hlt
xor
loope
ror
xlat
sub
iret
repnz
inc
adc
arpl
fisubr
inc
mov
cmp
xlat
adc
mov
in
dec
lock
push
mov
xor
stos
xchg
ror
pop
inc
cli
add
mov
jmp
push
mov
dec
imul
clc
adc
push
and
retf
outs
ffreep
std
loopne
mov
data16
stos
retf
(bad)
gs
mov
retf
repnz
jns
mov
sbb
adc
rol
loopne
adc
mov
retf
loop
adc
or
mov
(bad)
nop
xor
clc
mov
std
(bad)
jmp
out
mov
push
or
(bad)
das
jbe
aas
into
jmp
das
dec
pop
dec
pop
imul
add
adc
icebp
or
fucomip
in
jmp
push
push
mov
xor
inc
scas
jb
pop
cli
cdq
ss
xor
adc
sar
pop
add
inc
or
ss
test
scas
enter
mov
sbb
aas
xor
ss
outs
pop
retf
add
mov
mov
pop
rol
mov
cli
repnz
or
lock
cmp
and
jno
add
popa
fs
cli
adc
test
daa
call
(bad)
and
cld
xchg
sub
mov
aam
fsub
push
add
shl
aad
loop
pop
inc
add
outs
dec
popa
iret
adc
and
mov
adc
mov
sub
mov
fadd
loope
(bad)
test
or
pop
ss
scas
loop
lods
out
adc
push
hlt
in
out
xchg
popa
xlat
xchg
adc
rcl
mov
enter
mov
inc
icebp
mov
cli
(bad)
icebp
ds
xor
ret
(bad)
mov
scas
pop
jge
xor
imul
adc
or
ret
xor
pop
inc
jg
data16
in
fild
loope
xchg
rcr
xor
fs
outs
inc
stc
inc
sub
add
int3
and
sbb
sub
scas
lods
sbb
lds
sahf
jle
push
dec
iret
imul
mov
pop
mov
and
xchg
push
xor
or
in
cmc
stc
call
aad
add
loope
ror
fisubr
mov
fstp
pop
dec
mov
sbb
mul
fisubr
jno
push
mov
add
fs
pop
push
adc
sub
cmp
adc
xchg
jp
push
mov
ret
outs
mov
dec
add
mov
mov
into
retf
mov
push
sar
(bad)
fiadd
stc
dec
aad
xchg
sub
add
outs
mov
stos
ret
adc
outs
and
out
hlt
iret
out
mov
cmc
push
dec
cmp
mov
mov
jb
movs
xchg
xchg
mov
outs
mov
dec
add
jno
mov
data16
sbb
adc
fild
pop
inc
xchg
(bad)
mov
cs
inc
mov
scas
sub
cmps
stos
movs
pop
rcr
sbb
xchg
dec
mov
and
mov
push
retf
push
and
sahf
pop
aam
jnp
push
push
call
sbb
inc
lods
push
sub
xchg
add
push
lock
adc
xor
cmc
adc
ret
lock
xchg
inc
push
(bad)
movs
pop
jmp
ficomp
mov
inc
stos
mov
mov
call
ficom
pushf
mov
sbb
loope
cs
scas
into
cmp
adc
ret
nop
and
scas
mov
sahf
js
and
shr
jnp
push
pop
jns
ret
sub
push
nop
add
dec
sub
xchg
retf
mov
mov
push
cwde
jp
(bad)
and
scas
jae
sbb
adc
and
cs
push
and
push
pop
repz
lds
jb
jo
sbb
xchg
cmp
push
nop
inc
push
mov
add
scas
leave
and
icebp
mov
mov
loop
mov
mov
aad
sti
or
inc
pop
mov
in
outs
or
icebp
stos
icebp
call
js
adc
sahf
fnstenv
jmp
test
loope
rcl
ret
dec
adc
in
jmp
mov
jns
repz
or
loop
dec
dec
add
scas
leave
movs
mov
repz
dec
mov
jo
add
cdq
hlt
adc
cmp
cmc
sbb
jmp
push
imul
jp
das
dec
movs
shr
mov
bound
fidivr
retf
cdq
push
and
mov
div
nop
fs
sbb
mov
scas
and
scas
rol
call
lea
push
push
adc
into
loop
shl
and
mov
inc
jmp
aaa
stos
mov
imul
push
fs
add
mov
push
mov
jge
mov
dec
lods
pop
xor
dec
jne
xor
adc
lea
pop
ret
dec
sbb
mov
inc
or
aas
cli
pushf
xlat
pop
out
add
icebp
push
jl
xlat
dec
add
inc
add
push
push
push
push
sub
and
sub
jl
call
outs
cmps
jmp
jg
or
sub
bound
cwde
popf
or
xchg
jp
cmp
neg
imul
push
push
leave
hlt
xor
test
ret
pop
rcl
imul
sbb
push
inc
xor
(bad)
cmc
adc
imul
shl
jns
mov
sbb
loope
cmps
test
(bad)
jl
rcr
int
or
lods
out
push
fimul
jmp
mov
mov
pop
or
pop
icebp
pop
shl
test
or
dec
add
dec
dec
dec
or
pop
dec
test
push
nop
xor
jns
jge
cli
mov
pusha
outs
xor
mov
jp
mov
icebp
loope
sub
shl
xor
data16
dec
push
mov
jo
mov
nop
jno
inc
jo
stc
sub
icebp
sti
pop
jno
shr
mov
push
mov
dec
pop
gs
xor
or
movs
leave
sub
sbb
or
les
lock
push
sbb
add
xor
and
(bad)
rcr
adc
adc
and
push
sti
and
jae
sti
pop
push
test
gs
sub
push
and
out
sbb
pop
cmp
cmp
lods
stos
sbb
pop
adc
jne
cmc
test
mov
xor
je
adc
lahf
gs
sbb
cmc
inc
in
jecxz
cs
aad
lds
out
in
pop
inc
add
ror
mov
movs
fimul
out
mov
cli
fucomi
and
leave
xor
mov
dec
or
mov
adc
(bad)
mov
and
fidivr
cmps
fcom
xchg
xchg
lahf
in
popf
loope
cmc
test
gs
icebp
jne
or
js
gs
inc
sbb
push
jg
add
retf
ins
jmp
call
js
repz
inc
popa
fisub
outs
in
aam
lds
jl
loope
aad
movs
xchg
inc
push
dec
pushf
mov
int
jo
inc
inc
sub
lock
mov
jnp
loopne
pop
mov
push
std
cmp
(bad)
adc
loop
scas
sbb
or
hlt
sbb
jle
dec
xor
movs
add
mov
es
adc
xchg
push
loopne
lods
aad
into
xchg
imul
ret
aad
jo
dec
sbb
dec
push
loopne
or
movs
out
aas
mov
or
mov
ja
ja
das
pop
or
push
cmp
sub
scas
mov
dec
ds
xchg
int
in
mov
jno
loop
scas
push
lods
jmp
mov
mov
ins
int3
movs
jne
pop
into
push
mov
sbb
outs
imul
mov
gs
inc
ffreep
pop
in
add
pusha
push
fst
fcmove
xor
push
mov
call
rol
and
cdq
dec
pop
dec
jbe
pop
jl
xchg
jp
jmp
or
add
inc
mov
sub
jmp
sub
fsub
inc
jno
stos
mov
aad
dec
xchg
mov
aas
add
cli
fxch
loop
pop
mov
push
sbb
cmc
into
jp
cmp
xchg
fiadd
pop
clc
jle
ds
add
(bad)
jmp
cmc
inc
in
fistp
int3
les
icebp
pop
std
add
outs
or
test
push
icebp
xor
(bad)
xchg
mov
jp
ret
(bad)
add
dec
sub
sub
lock
sbb
popf
jp
jb
fistp
mov
sub
movs
test
add
xor
clc
(bad)
movs
mov
mov
sub
push
mov
cmp
(bad)
into
add
cmp
dec
adc
cmp
dec
cmp
loope
xchg
add
adc
adc
and
cmp
or
fcmovbe
pushf
mov
icebp
push
hlt
adc
aas
stc
add
cli
inc
cmp
dec
pop
xchg
hlt
jmp
in
mov
mov
dec
pop
sub
ins
shr
in
sbb
(bad)
dec
xchg
mov
repnz
fs
out
pop
mov
inc
je
add
sbb
loope
mov
mov
shl
icebp
outs
push
dec
adc
fsub
fisub
int
lods
repnz
mov
sub
push
loope
bound
mov
je
add
mov
mov
stos
mov
cs
mov
jnp
pop
sub
lds
xor
mov
pop
xor
imul
ds
push
popa
adc
add
mov
and
cli
cs
sbb
ds
jne
and
in
mov
or
sbb
lds
icebp
inc
fstp
fsubr
sbb
add
adc
jmp
push
stos
or
into
and
mov
xor
mov
shl
push
mov
loope
jmp
pop
jp
xchg
enter
jmp
xchg
scas
jecxz
pop
mov
fimul
retf
sbb
inc
call
fidiv
dec
sub
sbb
cmc
test
adc
dec
loopne
push
or
shl
jp
push
movs
clc
push
mov
adc
adc
dec
mov
mov
jb
sub
repnz
out
mov
pop
sbb
or
fidivr
and
xchg
sub
xchg
or
pop
jno
call
and
inc
push
dec
add
jns
and
gs
bound
push
and
adc
outs
mov
adc
stc
sti
loop
sub
cli
stos
loope
cmp
xor
xchg
jl
out
mov
mov
imul
fist
out
pop
call
cs
push
cmps
inc
jmp
mov
inc
cli
in
jmp
xor
cld
jne
out
push
adc
daa
shr
addr16
sbb
cmp
(bad)
ror
iret
adc
jle
push
dec
push
call
mov
mov
push
jbe
add
adc
adc
dec
data16
or
imul
aas
out
mov
mov
imul
xchg
or
call
retf
push
and
sub
sbb
dec
mov
ficom
data16
(bad)
inc
sbb
adc
(bad)
fcomip
pop
cmp
and
adc
sbb
fwait
ror
int
mov
inc
std
ja
jp
mov
cmp
in
rol
icebp
cli
mov
idiv
or
sbb
cmp
add
jae
jmp
lock
out
scas
push
mov
sub
xchg
dec
add
push
push
adc
pop
mov
scas
fdiv
jmp
jb
jnp
ficomp
or
dec
icebp
ds
or
retf
cs
jmp
std
cmps
loopne
pop
mov
xor
fs
add
jmp
add
xchg
pop
in
out
mov
test
adc
sub
fmul
dec
mov
lods
retf
scas
stos
mov
xor
fs
or
push
pop
cmp
ret
jecxz
inc
loope
xchg
sbb
pop
push
sar
aad
retf
mov
ds
fcmovbe
cdq
imul
les
ret
and
fst
retf
jns
inc
dec
retf
jmp
mov
or
and
push
cmp
jns
nop
cmp
mov
arpl
stos
movs
int
into
pop
and
and
out
hlt
iret
cli
arpl
test
call
adc
es
or
icebp
js
xchg
or
adc
popf
sub
mov
xchg
mov
repz
js
xor
push
push
mov
sbb
and
enter
add
stos
or
sub
adc
scas
fiadd
mov
or
mov
jmp
mov
jp
jmp
sbb
pop
sbb
pop
test
sub
loopne
or
jp
movs
jg
jnp
add
aad
mov
adc
adc
jne
ds
push
adc
mov
ret
and
cli
iret
jmp
sbb
xchg
jne
and
sub
mov
or
push
outs
and
sbb
inc
fistp
fsubr
sbb
add
ficomp
adc
xor
or
into
and
mov
imul
pop
(bad)
mov
push
mov
loope
in
mov
push
mov
jmp
push
scas
jecxz
pop
mov
lahf
(bad)
retf
sbb
inc
call
fidiv
dec
sub
sbb
test
adc
dec
out
mov
ror
inc
movs
cmp
(bad)
cld
jp
push
movs
clc
push
mov
bound
mov
xor
push
or
jb
sub
and
jno
pop
sbb
or
add
jns
or
xchg
sub
xchg
or
mov
jle
sub
mov
add
jns
and
gs
bound
push
and
adc
popa
repnz
or
movs
adc
add
rol
dec
aas
mov
aas
add
mov
push
scas
or
dec
scas
pop
es
rcl
pushf
pop
outs
mov
xadd
(bad)
icebp
fdivp
retf
cmp
mul
andnps
xchg
pop
jne
xchg
fst
jne
add
jo
mov
xchg
xor
sar
div
push
xlat
pushf
mov
in
in
(bad)
dec
jg
mov
xchg
stos
ins
stos
aaa
movs
xor
test
movs
add
add
mov
inc
cli
addr16
cmp
and
mov
ds
adc
or
lds
push
xchg
retf
push
call
jno
push
mov
arpl
sbb
adc
(bad)
idiv
mov
jne
arpl
mov
sub
loope
cmp
inc
call
call
pop
into
pushf
adc
or
fimul
push
inc
adc
sbb
int
iret
js
movs
les
loop
not
pop
out
movs
add
inc
fidiv
or
mov
retf
icebp
and
jno
push
jl
div
mov
adc
add
je
xchg
or
mov
push
ja
push
sbb
cmc
mov
jp
retf
icebp
stos
mov
jp
push
pop
adc
mov
and
stc
or
xchg
outs
xor
movs
retf
imul
cld
aas
sbb
cmp
mov
pop
jmp
xchg
pushf
clc
adc
into
shr
gs
adc
jg
std
mov
ret
or
outs
sub
inc
out
cmps
cs
icebp
popa
daa
fidiv
xchg
sub
mov
scas
mov
push
and
aaa
add
movs
iret
sub
jnp
hlt
out
adc
lea
pop
retf
jb
ftst
ss
retf
fmul
push
loopne
rol
test
das
and
dec
add
mov
dec
inc
xor
fldpi
add
mov
arpl
adc
inc
cmp
aad
adc
cs
and
add
shr
(bad)
aas
xor
cmp
pusha
(bad)
cli
mov
movs
fld
xchg
(bad)
rep
jmp
push
iret
inc
scas
xor
add
add
xchg
cli
loop
ja
xchg
cmp
jmp
or
ficomp
aas
(bad)
das
xor
loop
and
push
mov
outs
aad
mov
ror
and
sbb
je
push
test
and
out
repnz
rcr
loopne
sti
mov
pop
add
dec
outs
popa
movs
loope
or
xchg
lods
jns
mov
hlt
add
shr
out
xor
mov
outs
jno
jno
inc
xor
cli
xor
test
lods
xchg
mov
pop
dec
mov
xor
leave
add
mov
fld
push
inc
xor
mov
and
pop
std
in
es
ror
test
sbb
and
shl
dec
add
clc
shl
popf
mov
fucom
xchg
aaa
mov
ret
(bad)
ss
popa
xchg
push
dec
mov
adc
or
loope
sub
adc
xor
or
cmp
adc
inc
jl
jmp
rol
inc
adc
seta
mov
loope
and
sbb
push
loopne
loope
fcos
test
pop
shl
fdivr
pop
loop
in
outs
inc
int3
aaa
push
repz
movs
(bad)
xchg
jl
xchg
xchg
dec
in
pop
(bad)
rol
cmc
sbb
outs
retf
push
jno
jle
mov
into
sar
push
push
(bad)
fs
xor
push
sti
pop
sahf
add
mov
mov
and
inc
arpl
and
leave
arpl
outs
dec
inc
jmp
pop
pop
sar
fisttp
inc
push
das
mov
scas
push
dec
leave
mov
ror
aaa
mov
pop
add
adc
cdq
scas
adc
dec
jmp
jp
mov
cmp
das
repnz
adc
ss
inc
lahf
in
out
or
outs
leave
iret
outs
mov
mov
push
gs
lea
jp
pop
out
pop
inc
dec
push
cmp
cmp
scas
sbb
ficomp
ret
test
mov
pop
out
mov
mov
shl
pop
jp
cmc
imul
call
movs
in
rol
je
scas
pop
retf
scas
fmul
push
mov
shl
daa
fidivr
pusha
outs
popa
jmp
sub
adc
loope
xchg
inc
mov
adc
mov
fld
popa
pushf
leave
inc
nop
mov
pop
mov
fabs
stos
xchg
fs
in
inc
and
or
fimul
rcl
into
dec
jnp
scas
loope
adc
xchg
imul
mov
jge
xchg
or
sub
scas
inc
push
fsub
test
cmp
xor
(bad)
xor
imul
adc
adc
icebp
push
lods
jne
jp
aas
xor
mov
inc
pop
ret
push
dec
xor
movs
jmp
push
stc
push
aas
xor
repnz
outs
jmp
sti
test
or
mov
jno
jmp
adc
or
xor
dec
shr
and
lods
scas
pop
mov
je
scas
inc
xor
inc
gs
lock
mov
push
mov
and
pop
add
sti
dec
in
sahf
fcomp
mov
jp
pop
xor
adc
popa
pop
inc
test
cmps
mov
aad
sbb
pushf
jne
ds
pop
add
lds
outs
imul
cmp
mov
xchg
fidiv
adc
mov
push
jmp
push
pushf
sbb
fidiv
call
je
jno
push
inc
aas
jno
je
inc
push
add
iret
sbb
push
rcr
inc
mov
outs
lea
push
cmc
int3
out
mov
pop
push
aad
fmul
daa
push
push
rcr
movs
add
xchg
jo
in
dec
add
jne
jge
outs
fistp
gs
imul
icebp
int
lods
cmps
call
push
inc
push
inc
add
add
std
push
hlt
les
loop
mov
mov
cmp
outs
fmul
test
iret
dec
and
pop
xchg
icebp
mov
dec
ss
stos
pop
ds
mov
fisub
movs
mov
xor
in
arpl
lods
jecxz
inc
sbb
mov
mov
adc
cmp
push
int3
and
mov
lods
xchg
mov
sub
das
int
scas
dec
dec
mov
int
punpckhdq
(bad)
dec
es
push
stos
push
call
in
sar
daa
popa
shl
jno
hlt
mov
movs
iret
mov
mov
movs
add
ins
cmp
aas
je
scas
dec
repnz
jmp
icebp
cli
lock
mov
movs
add
xor
cmp
stc
repnz
sbb
cmp
cmp
ds
push
dec
pushf
xor
push
jmp
mul
inc
dec
jmp
icebp
daa
sbb
xchg
dec
jmp
dec
fdiv
int3
(bad)
cmp
cmp
cld
stos
es
pop
mov
aaa
xor
das
call
or
jb
mov
fcomp
loop
pop
push
test
out
pop
pop
repz
mov
jmp
add
mov
xchg
push
pop
and
aad
pop
adc
inc
mov
mov
push
push
inc
inc
mov
dec
(bad)
popa
adc
aad
repnz
sub
xchg
icebp
mov
rol
mov
or
pop
inc
cmp
cmp
lods
adc
xchg
lahf
or
test
xchg
push
add
(bad)
jns
adc
(bad)
retf
jb
mov
mov
fnsave
jp
xchg
stos
pop
dec
cmps
adc
push
mov
cmp
popa
(bad)
in
or
cmps
sbb
mov
xor
push
hlt
icebp
mov
inc
and
and
rcl
loope
push
loop
mov
mov
mov
fistp
add
xor
adc
jmp
adc
jns
adc
jg
sub
sbb
movs
out
pop
jo
stc
je
fisub
jno
xor
jno
lods
and
dec
test
stos
or
and
fisubr
adc
add
sbb
push
add
iret
retf
sub
push
jp
push
add
daa
cmc
test
and
cli
movs
movs
popa
mov
test
mov
jmp
loope
imul
mov
jp
mov
(bad)
inc
xor
cmc
jo
bound
pop
adc
mov
push
adc
add
icebp
stos
mov
push
push
and
push
add
jno
and
or
dec
sti
repnz
aam
mov
jl
xchg
leave
rol
jnp
jnp
rcl
pop
mov
dec
outs
rcr
adc
jb
adc
into
dec
div
icebp
pop
adc
adc
add
mov
outs
fidivr
mov
test
jp
repnz
mov
cmp
je
push
xchg
scas
push
push
aaa
icebp
sti
loope
mov
push
and
inc
mov
sahf
jmp
dec
push
push
popa
xchg
inc
icebp
push
loope
xchg
div
ds
ins
push
or
pop
xor
or
hlt
push
movs
adc
icebp
and
cmp
dec
dec
add
jno
mov
adc
add
sbb
or
rcl
cmp
jae
jno
cli
call
mov
add
imul
xor
fst
and
es
cdq
sbb
mov
mov
add
push
cdq
adc
jg
aad
retf
mov
add
xor
mov
mov
sahf
into
mov
ret
outs
mov
sub
dec
mov
test
ror
mov
inc
mov
sbb
leave
mov
dec
xor
lds
cmp
sub
pop
push
or
je
mov
mov
aad
rcl
shl
xchg
and
or
mov
dec
test
pop
pusha
retf
fisubr
cmp
mov
xchg
jo
cmps
dec
inc
stc
jno
rcr
cmc
ret
sub
cli
aad
sar
jg
call
adc
sub
leave
mov
mov
mov
loope
in
sar
pop
xchg
loop
dec
dec
add
jno
and
scas
leave
lahf
mov
repz
jne
call
ficomp
popf
sub
pop
cmp
and
nop
(bad)
ror
imul
jp
das
dec
movs
rcl
popa
mov
bound
ficomp
sar
cdq
push
and
mov
ret
fs
mov
arpl
leave
sbb
dec
sub
xchg
repnz
xor
sar
rcr
jns
ret
sub
push
nop
add
dec
sub
xchg
retf
mov
mov
push
and
xchg
jae
sbb
adc
xor
cs
and
xor
pop
repz
lds
push
inc
jo
sbb
xchg
cmp
push
nop
inc
push
mov
test
or
and
icebp
pop
loope
xchg
loop
mov
adc
aad
cld
or
inc
fidiv
or
icebp
stos
movs
call
js
adc
lock
sahf
fnstenv
mov
imul
xor
sbb
xor
mov
stos
loope
sub
sar
sub
xchg
test
push
pop
leave
(bad)
popa
jno
aas
adc
jg
inc
mov
push
adc
retf
cmp
call
and
pop
mov
add
pop
dec
inc
mov
xor
dec
pushf
dec
(bad)
mov
outs
and
push
pop
inc
push
cmc
jmp
jb
mov
aas
inc
cmp
pop
out
mov
pop
out
and
dec
jmp
cmps
and
sub
cs
dec
mov
cmp
bound
test
into
retf
icebp
(bad)
bound
repz
sbb
push
jmp
dec
nop
mov
(bad)
fimul
scas
ins
(bad)
push
ror
inc
add
sub
in
pusha
inc
sub
sub
sub
add
xchg
push
movs
add
inc
loope
outs
xor
dec
push
and
push
push
or
jne
xchg
jg
inc
dec
je
or
gs
push
dec
cli
cmp
test
movs
in
pop
popa
add
xor
push
cli
test
outs
push
out
jno
out
mov
mul
sbb
cmp
daa
icebp
cwde
inc
rol
repnz
ret
popa
mov
outs
inc
sub
cmp
leave
pop
add
cs
imul
mov
sub
mov
cli
sti
gs
add
dec
loope
push
and
add
jno
popa
setb
sbb
mov
mul
repz
pop
rcr
cmp
imul
inc
jmp
sbb
in
push
in
outs
inc
jns
mov
movs
(bad)
mov
mov
pop
dec
mov
and
rol
pop
outs
or
aaa
enter
xchg
inc
cmp
pop
inc
mov
adc
inc
mov
sti
mov
fdiv
adc
jge
das
and
mov
jae
clc
cli
popa
pop
dec
push
or
sbb
stos
xor
push
enter
ds
cmp
call
repnz
out
mov
(bad)
in
push
xchg
arpl
pop
adc
gs
je
adc
jmp
lock
and
jp
div
mov
mov
sub
or
xchg
mov
mov
inc
dec
fs
jp
test
dec
lea
xor
sbb
lods
jecxz
stos
and
or
loope
dec
or
lds
in
les
fcmovbe
or
(bad)
aad
lahf
xchg
xor
inc
jle
jae
cmc
push
dec
cmp
sbb
test
dec
in
stos
and
jne
js
cmps
dec
inc
stc
jno
xchg
in
pop
inc
xor
add
xor
sar
push
mov
rcl
je
sbb
scas
jecxz
enter
mov
loope
ds
outs
xor
mov
mov
mov
push
cmc
mov
(bad)
fcmovb
and
xor
scas
das
les
mov
jp
mov
sbb
push
shl
or
add
and
and
mov
loope
repz
rol
cli
inc
shl
sub
add
xchg
nop
(bad)
ror
imul
jp
das
dec
movs
rcl
mov
bound
fisubr
push
and
mov
push
xor
fisub
sub
sbb
dec
sub
xor
xor
push
rol
jp
push
pop
jns
ret
sub
push
nop
add
dec
sub
xchg
retf
mov
mov
cwde
jp
jbe
mov
and
stc
xchg
jae
sbb
sar
enter
icebp
nop
movs
repnz
dec
and
xor
pop
repz
les
sub
hlt
sbb
xchg
cmp
push
nop
inc
push
(bad)
push
or
xor
fdivr
xchg
loop
mov
loope
sar
aam
stc
or
inc
adc
or
icebp
stos
sub
test
mov
adc
lahf
fnstenv
rcr
test
loope
rcl
les
adc
cmp
in
sbb
mov
mov
jns
repz
adc
loop
dec
dec
add
scas
leave
cmps
mov
repz
jo
ret
call
jo
lahf
dec
mov
jo
sbb
adc
int3
inc
xchg
imul
add
addr16
jno
mov
or
lods
in
cmp
or
adc
bound
das
rol
gs
adc
mov
(bad)
retf
mov
lahf
dec
daa
mov
ficomp
stc
push
std
ins
jne
jmp
cmps
popa
(bad)
aad
add
inc
mov
sub
adc
stc
ret
enter
sub
push
add
sbb
stos
mov
je
mov
mov
aad
fadd
pop
add
popa
sti
pop
daa
pop
fist
gs
imul
out
ret
push
jb
mul
aam
mov
xchg
dec
mov
pop
sar
test
xor
adc
jmp
in
cmc
push
dec
sahf
pop
fstp
xor
dec
pop
xchg
fidivr
out
xor
sbb
ins
gs
sbb
xor
jle
jnp
and
mov
(bad)
adc
inc
aas
in
sbb
cmp
pushf
mov
aad
add
mov
dec
out
dec
mov
add
inc
inc
jle
push
out
mov
ds
jns
stos
fs
loope
and
loop
scas
jle
clc
dec
jmp
icebp
mov
rcl
popa
icebp
gs
or
and
dec
out
mov
pop
fidivr
shr
dec
(bad)
das
xor
mov
sbb
rcl
stos
loope
shl
test
adc
push
cmp
inc
popa
sbb
cmc
xor
xchg
mov
push
jmp
xor
xor
adc
cli
das
popa
mov
push
inc
mov
xchg
repnz
mov
hlt
adc
aas
data16
cmc
inc
cli
jno
jo
push
dec
sub
mov
fldenv
mov
(bad)
and
fimul
repz
mov
push
cmc
ret
mov
xor
stc
or
mov
mov
add
xor
sub
movs
scas
sub
xchg
imul
rol
dec
sub
sub
sbb
pop
test
sub
loopne
or
sub
adc
scas
fiadd
mov
or
mov
jmp
mov
jp
xchg
lahf
xchg
rcr
xrelease
mov
sahf
ret
push
icebp
ret
pop
dec
rol
adc
ss
adc
jmp
push
arpl
jp
push
or
jno
popa
jb
mov
cmp
fild
fild
push
pop
inc
cmp
fs
or
or
cli
idiv
jp
in
mov
ror
pop
jecxz
pop
cmp
aas
popa
dec
mov
fptan
fcmovb
xchg
adc
mov
jp
xchg
enter
jmp
xchg
scas
jecxz
pop
mov
call
inc
sbb
inc
call
fidiv
cmp
cmps
sbb
cmc
test
adc
dec
xchg
xchg
or
movs
cmp
bound
movs
clc
push
mov
fcom
mov
xor
retf
lods
push
or
jb
sub
scas
and
jno
daa
sbb
add
jns
cmp
sub
xchg
jns
in
mov
sub
test
jns
and
mov
cmp
bound
and
cdq
adc
popa
repnz
cmp
adc
imul
arpl
pop
ror
lds
inc
inc
cmp
imul
ds
push
adc
mov
(bad)
mov
and
cli
jo
icebp
and
sbb
loope
sar
ds
jne
and
jge
mov
or
xchg
outs
and
sbb
inc
cmps
call
sbb
add
adc
jmp
push
inc
xchg
xchg
push
xchg
shl
push
pushf
adc
icebp
mov
sub
push
or
dec
jmp
xor
sub
xchg
pushfw
aas
mov
mov
frstor
mov
cmp
sub
sub
push
es
into
cmp
xlat
adc
sub
inc
mov
mov
or
lds
push
lods
fisubr
dec
or
(bad)
popa
stos
push
outs
xor
loope
fmul
rcl
push
fs
or
(bad)
cmp
popa
xchg
fs
mov
ds
popa
sbb
push
inc
add
sbb
cmp
stos
push
adc
jg
adc
cmp
stc
cli
test
xor
lods
call
ficomp
ror
adc
xchg
jmp
push
mov
stos
mov
hlt
push
mov
int3
ret
fisub
xchg
in
cmps
push
dec
mov
jo
inc
mov
push
ss
xlat
jns
imul
mov
sbb
jg
cli
dec
cmps
push
ins
popf
jle
xor
loope
inc
xchg
xchg
inc
pop
add
jo
dec
push
cli
cmc
fnstcw
or
sbb
(bad)
jo
ja
dec
movs
inc
dec
(bad)
cmp
icebp
push
jbe
test
enter
inc
mov
movs
pop
mov
test
jmp
inc
cmp
retf
mov
loope
xchg
fild
gs
pop
ror
ficomp
sbb
jle
sub
std
xor
popa
fimul
loope
pop
push
icebp
outs
pop
push
(bad)
jg
aad
scas
or
int3
cmp
jmp
push
and
in
mov
push
pop
adc
sub
fld
aam
or
icebp
stos
push
xchg
cmp
dec
xchg
mov
push
adc
push
or
cmp
adc
jmp
test
push
ins
gs
add
ret
jbe
jnp
add
push
fmul
loope
dec
fcmovbe
xchg
inc
inc
push
pop
cli
dec
stc
pop
int
ins
imul
push
inc
js
cmp
mov
shl
cli
rcl
push
iret
jle
jl
stos
jno
mov
fisttp
mov
add
push
stos
pushf
in
mov
push
or
(bad)
jle
sub
dec
push
push
mov
nop
dec
mov
icebp
jmp
sbb
imul
cmc
push
jno
popa
in
or
add
and
and
mov
loope
and
xchg
push
adc
pop
jmp
in
inc
push
inc
cli
(bad)
rcr
icebp
out
push
shr
jnp
push
pop
pop
mov
mov
mov
scas
mov
add
out
and
into
jmp
cmp
jnp
ret
retf
mov
fild
or
jp
stos
call
and
jne
aas
repnz
retf
cmc
popa
in
xchg
xchg
nop
cmc
icebp
out
and
and
out
add
dec
sar
outs
jmp
jmp
jp
in
(bad)
(bad)
sar
add
arpl
popa
pop
xchg
or
pop
dec
popa
mov
pop
xchg
imul
push
mov
ins
rcl
jmp
sub
repz
repz
ror
add
nop
fs
out
leave
rcl
mov
mov
mov
scas
sub
imul
icebp
loope
sbb
mov
cmp
aam
aam
cmc
adc
dec
xchg
cmp
push
nop
inc
push
(bad)
push
or
cli
xor
fdivr
xchg
loop
mov
dec
dec
sar
aam
lds
or
mov
in
outs
or
icebp
stos
and
repnz
pop
adc
add
xor
lahf
fnstenv
jmp
test
loope
rcl
rol
dec
and
mov
or
xchg
jmp
cli
mov
mov
jns
repz
adc
xchg
loop
dec
dec
add
jno
and
scas
leave
mov
(bad)
(bad)
dec
mov
jo
add
cdq
repz
cmp
rcr
hlt
sbb
jmp
punpckhwd
ret
ror
dec
movs
shr
popa
mov
bound
ficomp
sar
cdq
push
and
mov
call
in
jno
xor
add
psubb
xchg
xchg
pop
xor
sar
rcr
jns
ret
sub
push
nop
add
dec
sub
xchg
retf
mov
mov
cwde
jp
ret
push
and
stc
xchg
jae
sbb
adc
cmp
div
push
stc
dec
sub
inc
mov
dec
cli
das
sahf
push
ror
inc
mov
ret
mov
xchg
jne
jle
das
fnstcw
add
or
sbb
cmp
fisttp
and
sahf
rol
shl
mov
jl
aad
sbb
(bad)
test
cli
data16
retf
mov
or
mov
aad
cdq
dec
(bad)
das
cld
ret
xchg
sbb
dec
scas
call
scas
push
mov
aam
and
into
test
popa
jmp
cmp
mov
push
shl
stos
adc
or
add
cs
fidiv
in
call
and
dec
imul
sbb
inc
xchg
dec
sbb
add
jbe
pop
call
ins
pop
push
mov
bound
mov
or
jle
mov
(bad)
add
test
loope
shr
inc
sub
fcmovnbe
popa
adc
arpl
ficomp
cmc
shl
scas
mov
cdq
or
xchg
adc
inc
ja
sub
out
mov
xchg
fisubr
xchg
xor
push
mov
bound
mov
dec
inc
retf
mov
mov
sub
scas
stos
mov
xor
fs
or
mov
jmp
add
sub
inc
xor
dec
adc
sahf
jno
ss
or
mov
xchg
(bad)
daa
push
fwait
xor
jg
dec
push
dec
push
ds
inc
imul
pop
int3
div
sub
xchg
popf
les
cmc
mov
push
into
xchg
lods
push
pushf
pop
pop
lds
jne
in
adc
xor
loope
xchg
inc
shr
xlat
fnstenv
cdq
inc
dec
push
das
ja
call
sahf
jae
cmp
xchg
int
mov
and
jno
mov
out
sbb
pop
xor
jmp
scas
mov
in
stos
and
xchg
push
or
push
call
fstp
mov
scas
popa
push
into
mov
hlt
stos
stc
int
rcl
jp
das
ins
mov
fs
or
ret
mov
scas
(bad)
fcmovb
nop
les
adc
int
nop
sbb
ficom
inc
mov
stc
retf
push
scas
loope
das
xor
scas
into
cmp
adc
ret
nop
and
scas
mov
sahf
js
imul
ror
add
adc
adc
jmp
adc
cmp
ret
scas
loope
cmp
jne
loop
mov
mov
inc
mov
cmc
xor
hlt
pop
ret
xchg
pusha
sub
xor
sahf
pop
push
(bad)
mov
iret
push
fsub
adc
sub
movs
adc
and
pop
inc
leave
push
mov
add
xor
mov
mov
adc
aam
mov
sbb
jno
mov
cli
dec
imul
sbb
loope
ror
dec
aam
xor
pop
lds
out
and
sbb
fisubr
retf
cdq
push
and
rcr
nop
fs
mov
arpl
xor
add
xor
ficom
ret
push
rol
jp
push
pop
jns
ret
sub
push
nop
add
dec
sub
xchg
retf
mov
mov
cwde
jp
inc
and
scas
jae
sbb
adc
cmp
retf
icebp
nop
movs
repnz
dec
and
xor
pop
repz
les
rol
hlt
sbb
xchg
cmp
push
nop
inc
push
(bad)
push
or
cli
xor
fdivr
xchg
loop
mov
lea
jg
aam
stc
or
inc
jbe
nop
in
outs
or
icebp
stos
cdq
call
js
adc
add
xor
lahf
fnstenv
jmp
test
loope
rcl
lds
adc
cmp
out
sbb
mov
mov
jns
repz
cmc
mov
aas
pop
xchg
loop
dec
dec
add
jno
and
scas
leave
cmps
mov
repz
dec
mov
jo
add
cdq
not
add
and
hlt
sbb
imul
jne
sub
add
cmp
cli
dec
adc
or
sbb
icebp
xchg
sub
sub
rol
outs
pop
xchg
xchg
cmc
dec
mov
cdq
mov
call
aaa
or
clc
sub
push
out
hlt
cmp
push
push
aad
or
mov
loope
cdq
or
jl
loope
movs
gs
inc
lds
sahf
xor
mov
cdq
ror
test
hlt
retf
dec
test
push
add
cmps
rol
fisub
inc
jae
in
sub
xchg
ins
leave
adc
mov
mov
jne
dec
stc
lds
lds
stos
loope
xchg
not
icebp
aas
jmp
dec
fiadd
cmp
jne
imul
(bad)
sub
addr16
mov
lock
mov
inc
cmp
movs
jecxz
inc
or
inc
xor
fld
sub
retf
icebp
das
in
add
repnz
adc
mov
jle
sub
cli
dec
iret
in
xchg
xor
xchg
add
sar
jno
in
sbb
mov
pop
xchg
xor
shr
mov
pop
repnz
retf
push
pop
dec
jmp
jp
sbb
adc
icebp
xor
adc
sub
in
dec
int3
cli
mov
pop
fadd
(bad)
loopne
sub
fcom
shl
inc
cdq
push
das
ret
imul
sbb
test
xchg
add
adc
cmp
aas
ror
inc
jno
cmps
dec
pop
jne
lds
pop
mov
test
push
add
in
fiadd
pusha
push
pop
or
jb
mov
rol
cmp
mov
mov
test
add
xchg
inc
sbb
mov
mov
mov
(bad)
jo
push
add
or
adc
jbe
stos
adc
cdq
xlat
in
mov
mov
aad
or
scas
sub
mov
or
hlt
into
dec
ror
daa
lods
mov
(bad)
rol
cld
cli
sahf
xchg
or
mov
lahf
jb
(bad)
ficomp
pop
into
add
shl
xchg
push
dec
fbstp
jmp
aam
loope
inc
jne
pop
into
pop
loop
out
inc
inc
lds
xchg
bound
jge
or
or
imul
ret
jno
inc
cdq
push
das
ret
imul
call
and
dec
out
pop
xor
cmc
xor
aam
popa
xlat
pop
mov
in
outs
(bad)
adc
fimul
fs
fadd
push
push
out
call
fimul
mov
inc
ret
sbb
icebp
inc
(bad)
ficomp
sub
out
push
add
inc
fmul
add
ss
out
mov
icebp
out
lock
rol
sar
mov
adc
cld
cmp
add
aad
push
lahf
push
push
pop
ror
shr
add
jmp
sub
cmp
fsubr
test
fwait
out
mov
mov
jnp
js
adc
pop
xor
mov
xor
inc
call
inc
sbb
mov
outs
inc
mov
int
pop
fimul
fs
iret
in
xchg
sub
cmp
(bad)
movs
adc
ins
in
xor
rcl
lods
and
cld
sub
jnp
pop
loope
retf
aam
and
test
mov
sub
xchg
pop
scas
sub
or
or
jns
pop
or
jg
mov
ficom
xchg
ja
ins
daa
pop
pop
dec
jle
jl
addr16
inc
test
cmp
pop
or
sbb
dec
repnz
dec
push
sbb
or
jl
ins
pop
pop
pop
dec
idiv
(bad)
jp
or
pop
or
adc
or
jl
ins
pop
ror
mov
pop
(bad)
mov
lods
not
cmp
mov
mov
jne
ds
xchg
xor
xchg
cmp
push
ret
mov
mov
xchg
mov
cmps
sub
sbb
jle
mov
sbb
push
or
or
lods
cmps
clc
mov
or
cmc
adc
mov
inc
aam
loope
push
mov
or
out
fist
aam
xchg
mov
adc
jle
push
daa
popa
gs
ja
xchg
into
out
movs
pushf
mov
(bad)
jno
sahf
xchg
inc
cmc
icebp
add
outs
inc
jl
or
fwait
ds
into
dec
(bad)
pushf
lods
(bad)
cmp
cmc
int3
jmp
sub
stos
push
jmp
pop
xchg
lods
dec
clc
rol
repnz
jns
iret
and
mov
or
hlt
into
dec
imul
mov
call
add
add
sbb
fwait
jb
or
jae
jne
into
cmc
push
jg
mov
outs
fwait
aas
scas
outs
add
adc
push
pop
rcl
test
(bad)
leave
(bad)
inc
in
dec
mov
call
inc
cmp
(bad)
rcl
clc
mov
and
push
cld
push
pop
or
cwde
jecxz
arpl
jnp
mov
dec
(bad)
in
push
aad
shr
scas
sub
aad
movs
inc
mov
jne
and
mov
xchg
sub
fdiv
test
stc
adc
or
add
push
jne
and
sbb
sub
inc
sbb
fild
cmps
sbb
push
(bad)
push
jp
jne
ds
repnz
outs
jno
fxam
pop
cs
adc
jmp
je
loope
mov
in
into
mov
push
mov
outs
in
push
sbb
ficomp
lds
rcr
ds
leave
add
xor
mov
fisttp
mov
mov
ror
shl
push
pop
add
xor
inc
xor
xor
sar
xor
pop
push
pop
leave
pop
mov
and
push
push
pop
jmp
les
push
mov
enter
and
add
in
sbb
cs
mov
aam
ins
call
ins
xlat
adc
loop
or
sahf
cmp
add
rol
ds
mov
xor
das
add
ficomp
int3
aaa
jl
push
faddp
pop
and
mov
and
jno
mov
cli
xchg
imul
loope
mov
(bad)
dec
jp
dec
rcl
and
sub
mov
inc
xor
push
call
fistp
mov
inc
xor
cmp
mov
movs
pushf
pop
(bad)
mov
aad
or
popa
sub
push
inc
dec
jnp
bound
adc
dec
shr
jne
and
mov
jle
sub
jle
pop
sub
pop
out
jle
jl
push
pop
shl
into
out
movs
pushf
pop
call
inc
scas
das
mov
int
retf
aam
loope
mov
movs
pushf
pop
(bad)
mov
aad
or
addr16
sbb
jg
loope
and
out
xchg
xor
add
(bad)
push
das
mov
sbb
xor
push
sub
mov
cli
mov
mov
mov
enter
lahf
mov
loope
rcr
xor
shl
jo
scas
xchg
and
jl
and
sbb
icebp
dec
mov
gs
push
ins
retf
dec
pusha
es
inc
or
mov
pop
xchg
mov
popa
in
mov
sub
sahf
ret
xchg
(bad)
xor
mov
dec
sar
sub
mov
cmp
ins
rol
mov
ret
cmp
outs
in
sbb
das
add
sbb
add
cs
ds
pushf
dec
inc
sub
add
mov
or
jl
movs
mov
mov
pop
shl
and
jno
and
cmp
iret
and
pop
mov
dec
(bad)
movs
pop
ror
fwait
pop
into
pop
lods
pop
push
push
and
ja
scas
sbb
outs
movs
or
dec
(bad)
movs
pop
shl
aaa
mov
pop
mov
xor
cmc
fs
sub
add
adc
add
shr
jg
(bad)
mov
xor
xchg
cld
push
pop
jmp
or
mov
imul
mov
mov
in
sbb
or
push
xchg
mov
lahf
mov
loope
hlt
jne
aaa
mov
push
test
fcmovb
xor
pop
test
retf
push
daa
lock
xor
gs
shr
cmp
popa
pop
mov
scas
sbb
outs
push
int3
aaa
icebp
out
lock
cs
adc
push
fwait
shl
aas
sbb
or
int3
push
jmp
aam
push
call
dec
push
out
ror
cli
sbb
add
test
push
(bad)
movs
gs
dec
and
or
inc
mov
mov
jo
sbb
ss
scas
and
xchg
fist
push
or
mov
mov
pop
fdiv
pop
xor
ins
adc
add
xchg
ins
loop
outs
inc
mov
fwait
loop
scas
push
fwait
pop
push
jmp
push
jp
and
(bad)
mov
pop
pushf
adc
pop
xor
hlt
int3
cli
cmc
sti
pop
xchg
sub
pop
gs
into
dec
jp
dec
shr
aad
xchg
push
dec
fwait
inc
int3
addr16
xor
test
rcr
mov
mov
mov
xchg
push
dec
mov
jmp
lahf
push
stos
movs
call
mov
rcr
mov
int3
cli
sbb
mov
call
and
inc
stos
add
cwde
cmps
jmp
addr16
xor
push
pop
sbb
sub
out
pop
loope
mov
in
sbb
das
add
aas
jno
jge
icebp
stos
loope
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
push
jno
stos
out
retf
mov
and
sbb
inc
push
mov
sub
ss
jb
sbb
cmc
cmp
hlt
imul
ret
pop
mov
jb
and
and
mov
xchg
aaa
jb
push
ins
loopne
fdiv
dec
pop
add
jo
pop
imul
and
add
sub
pop
cmc
mov
adc
(bad)
icebp
outs
lds
cmp
popa
jg
or
mov
mov
mov
cmp
mov
lds
shl
xchg
fbstp
repnz
ror
xor
adc
push
and
add
or
in
popf
ficom
(bad)
cmp
cmp
dec
jmp
or
push
loop
retf
mov
jmp
and
xor
test
xchg
adc
pop
sbb
push
mov
shl
push
pop
adc
xchg
sub
sub
jmp
lock
loope
ror
and
jmp
adc
dec
jmp
lock
loope
ror
and
dec
stc
cmp
popa
sbb
inc
sub
retf
icebp
mov
icebp
jp
adc
stos
adc
cmp
mov
xchg
ficom
stos
push
call
and
dec
add
jno
popa
sbb
jmp
icebp
or
call
and
adc
cmp
sub
push
stos
inc
cli
inc
jmp
icebp
stos
mov
test
retf
or
sbb
inc
call
test
call
and
dec
add
push
sub
push
xor
mov
in
fist
stos
loope
movs
test
(bad)
mov
scas
in
sub
sbb
pop
(bad)
mov
sti
mov
out
lods
ret
mov
mov
in
adc
mov
mov
mov
push
sbb
mov
jmp
scas
lods
sqrtps
xchg
rcl
cwde
fcomp
aas
push
pop
leave
stos
in
ret
je
jl
fs
adc
xchg
retf
pop
adc
or
xor
and
adc
cmp
sub
push
dec
sti
mov
and
push
sbb
pop
les
call
test
ins
add
jge
out
aam
xchg
retf
imul
and
adc
push
dec
arpl
push
or
xchg
ret
ficom
stos
loope
imul
pop
adc
(bad)
js
inc
sbb
inc
ret
mov
mov
scas
add
stos
leave
(bad)
loopne
test
fst
movs
loop
mov
mov
mov
ror
and
push
xor
popa
data16
cdq
fst
sub
jne
cmp
xor
adc
cmp
push
call
adc
leave
cmp
mov
pop
adc
das
push
pop
pop
pop
add
sti
mov
fstp
retf
push
sbb
pop
push
xchg
cld
and
cmp
rol
daa
or
loop
shr
and
xor
clc
aas
pusha
aaa
dec
das
push
or
loope
les
jns
jl
ror
and
sahf
adc
jno
mov
stos
or
nop
rcl
popf
fistp
out
xor
and
test
add
jno
fstp
push
or
fs
je
lock
loope
fstp
and
mov
rcr
pusha
sbb
or
loop
mov
push
les
add
jmp
pop
adc
add
or
sbb
adc
enter
inc
fcomp
loope
stc
mov
arpl
cld
sub
mul
mov
stos
loope
and
bound
inc
xor
cmp
or
sti
mov
mov
mov
rol
out
int3
mov
rol
cmp
(bad)
out
movs
hlt
inc
jmp
int3
in
scas
mov
call
mov
test
loope
int
out
add
in
cli
mov
cld
mov
into
mov
scas
aas
jno
popa
(bad)
xchg
(bad)
xchg
cs
mov
mov
ror
and
adc
cmp
sub
push
jb
cli
mov
xor
xchg
retf
lock
loope
adc
and
retf
mov
pusha
sbb
popa
stc
mov
mov
mov
movs
mov
jp
out
sti
mov
out
pusha
sbb
cdq
(bad)
mov
mov
mov
ror
ins
pop
adc
pop
jb
popa
sbb
mov
sti
mov
mov
mov
rol
jp
push
pop
adc
into
mov
popa
sbb
pop
clc
mov
mov
mov
mov
sar
mov
scas
in
(bad)
int3
scas
out
mov
sub
dec
cs
int3
cmp
mov
or
push
popa
adc
popa
push
add
xchg
rcl
adc
bound
push
in
(bad)
xchg
out
push
sub
dec
and
out
icebp
mov
jno
jno
lea
cmc
cmps
cmc
inc
jne
jne
jne
jne
cmc
cmps
mul
mov
cmp
stc
sub
ror
jne
jne
or
mov
jl
jl
jg
cmp
mov
jp
push
popa
adc
gs
add
out
(bad)
xchg
out
or
imul
or
in
dec
or
outs
or
sub
jmp
inc
jns
jle
fs
mov
ror
dec
or
dec
add
(bad)
mov
xor
jge
jle
jle
loope
(bad)
test
ret
xchg
and
cwde
ficomp
ret
mov
jmp
call
(bad)
xchg
cli
cmp
popa
xor
test
adc
sbb
mov
ins
inc
(bad)
jp
push
mov
dec
or
push
sub
push
ss
cli
mov
icebp
xor
cmp
mov
aad
xchg
ficomp
div
cmc
leave
jmp
dec
jl
push
cli
mov
aas
popa
sbb
test
dec
loopne
lds
push
shl
imul
jns
sti
mov
lea
push
or
push
jle
and
sar
adc
pop
adc
cmp
popa
jp
jns
cli
mov
sub
add
inc
cwde
ror
and
mov
arpl
push
or
mov
mov
in
scas
int
call
and
dec
lods
(bad)
jb
popa
sbb
jmp
icebp
mov
cwde
ror
and
push
or
jno
test
jne
dec
adc
xor
psrld
mov
jp
imul
adc
cmp
jns
push
or
mov
mov
mov
ror
sahf
(bad)
jecxz
adc
jno
popa
xor
inc
cli
mov
icebp
xor
cmp
lods
into
lea
dec
add
jo
popa
sbb
add
xchg
ret
icebp
stos
std
cdq
ror
and
dec
cmp
popa
bound
inc
cli
cmp
outs
xor
inc
das
lea
imul
adc
cmp
dec
das
outs
dec
adc
xchg
mov
mov
ror
pushf
pop
adc
out
lods
ret
dec
or
fist
stos
loope
ror
and
dec
add
jno
pusha
sbb
adc
mov
mov
int3
cmc
stos
loope
pushw
fs
push
pop
hlt
xchg
add
jno
imul
mov
push
cmp
rcl
or
(bad)
mov
cmc
cmps
clc
xor
idiv
js
mov
xchg
ret
scas
loopne
sar
mov
pop
adc
popa
or
xchg
out
or
inc
xor
add
icebp
mov
cmc
jnp
push
adc
dec
add
fdiv
je
mov
push
xchg
retf
repnz
loope
aam
fdivr
push
arpl
sbb
cmp
add
xor
push
sbb
xor
fsubr
pop
adc
and
popa
sbb
cmp
std
mov
sbb
fs
or
xor
and
mov
sub
popa
sbb
inc
cli
mov
in
fist
stos
loope
lods
mov
jp
cli
and
dec
movs
cmp
popa
mov
jge
mov
dec
xor
call
and
inc
adc
push
or
sbb
nop
retf
xor
sbb
xor
scas
stc
mov
cmp
sub
rol
inc
cli
xchg
mov
mov
lods
hlt
cmps
leave
(bad)
out
scas
or
loop
retf
cmp
popa
push
push
or
lods
ret
fst
jl
ror
and
xchg
in
int
or
jno
repz
push
sub
loop
ror
and
(bad)
ret
jae
push
jno
adc
add
or
out
mov
jp
push
pop
adc
cs
or
xor
ss
jb
ja
outs
adc
lahf
shr
jp
push
dec
adc
push
dec
outs
das
dec
push
push
jno
dec
or
or
loop
retf
jp
pop
sbb
adc
mov
sub
inc
cld
mov
popa
mov
push
dec
call
and
imul
jno
lock
inc
ret
mov
mov
ror
(bad)
loopne
pushf
in
jno
popa
out
adc
repz
cmp
mov
jp
scas
and
dec
stc
retf
popa
sbb
inc
cli
mov
retf
xchg
rcl
push
ror
and
adc
mul
inc
out
lods
jmp
ficom
stos
test
es
sbb
adc
stos
jmp
lock
inc
inc
add
mov
mov
ror
and
jae
cmp
xor
aaa
js
jge
ficom
test
adc
pop
or
cmp
sub
ins
dec
or
ficom
stos
loope
imul
add
popa
sub
push
ss
cli
mov
icebp
fcom
test
call
and
mov
add
jno
arpl
push
or
fidivr
cmp
mov
jp
inc
and
dec
cmp
dec
pop
or
les
sub
dec
outs
das
inc
xor
and
push
add
jno
pop
sub
inc
cli
aam
mov
sbb
stos
loope
sub
jge
jmp
cmp
inc
xor
inc
cli
mov
popf
lahf
fist
loope
sar
popa
sar
mov
idiv
js
jp
push
or
icebp
jmp
ficom
stos
push
repnz
retf
mov
add
nop
(bad)
cdq
push
inc
or
(bad)
out
scas
(bad)
shl
sti
stos
loope
pop
pop
pop
fld
xchg
add
jno
xchg
sbb
inc
(bad)
mov
jmp
pushf
(bad)
xchg
and
adc
cmp
popa
mov
or
mov
mov
ror
and
dec
sub
ret
cli
cmp
lock
sti
aas
jg
inc
fwait
ror
and
push
and
inc
adc
push
or
sti
mov
mov
mov
ror
and
adc
call
neg
xchg
in
xchg
sar
sbb
in
scas
ret
inc
cli
pop
call
cmp
xor
ds
dec
add
jno
icebp
adc
mov
mov
ror
and
dec
pop
cmp
dec
das
adc
mov
loope
cmp
popf
fst
xor
popa
into
mov
mov
mov
mov
mov
test
fld
jp
push
pop
adc
inc
jo
popa
sbb
or
mov
mov
add
stos
loope
xor
push
pop
adc
cs
add
adc
inc
cli
mov
mov
mov
stos
loope
pop
push
pop
in
ret
add
cmp
in
mov
mov
mov
mov
test
call
and
inc
add
jno
(bad)
lods
xchg
ret
xchg
sub
mov
mov
ror
and
addr16
add
push
push
and
(bad)
push
ficom
stos
loope
jns
sar
cmc
pop
adc
cmp
popa
sbb
push
pop
fcomp
xlat
(bad)
repnz
test
dec
js
push
loop
dec
add
jno
pusha
sbb
mov
mov
mov
mov
cs
(bad)
cmp
mov
iret
adc
adc
(bad)
jnp
jmp
mov
bound
mov
push
das
test
xchg
mov
jle
js
loopne
test
fadd
xor
add
xor
cmp
cwde
pop
in
mov
jbe
lods
stc
mov
ficom
xchg
cmc
dec
and
lods
xchg
fdivp
sbb
mov
lock
cs
sbb
lods
scas
fistp
retf
jne
dec
jp
fdivp
stos
fwait
shl
addr16
gs
dec
adc
adc
xchg
(bad)
jl
test
retf
jmp
push
cmc
mov
sbb
gs
inc
xor
jns
jg
(bad)
neg
in
rcr
jmp
dec
xor
adc
jle
mov
repnz
xchg
(bad)
pushf
out
mov
xor
ss
popa
jne
dec
and
loop
enter
test
xor
inc
or
add
cmp
rcl
scas
(bad)
movs
adc
mov
scas
sub
push
fs
or
add
jle
xor
lods
(bad)
xchg
in
loopne
mov
into
mov
sub
jne
sbb
dec
push
and
nop
test
xor
xchg
adc
jge
push
push
adc
outs
and
ror
in
popf
out
mov
sar
pop
push
add
add
dec
and
mov
mov
mov
sbb
inc
push
pop
inc
adc
enter
mov
ret
jmp
mov
push
sbb
pop
jne
pop
adc
jns
cmp
vpsrlq
or
mov
push
cmp
cmp
cmp
push
push
imul
shr
retf
mov
mov
xor
add
dec
adc
and
ror
(bad)
repnz
retf
jno
js
js
push
sbb
and
(bad)
mov
test
out
push
jae
inc
xor
gs
xor
xor
fmul
ret
test
fnstenv
jo
and
push
and
add
sub
xor
mov
sti
mov
pop
push
xor
jb
adc
xor
cmp
vpsrlq
icebp
iret
xor
jecxz
push
jne
and
or
push
adc
dec
xor
sahf
test
xchg
scas
mov
inc
sbb
push
or
sbb
imul
xchg
mov
mov
rcl
mov
sub
push
add
add
jne
xor
les
mov
das
inc
sub
jge
inc
add
add
aad
test
sahf
fnstcw
cmp
xor
jne
sbb
imul
cwde
loope
clc
fwait
and
mov
fdivp
movs
mov
or
push
add
outs
jp
push
jnp
dec
and
aad
movs
leave
movs
fisub
cmp
add
and
sub
jns
mov
into
into
test
movs
fisub
cmp
dec
cmp
ins
jge
sbb
push
dec
push
mov
retf
scas
repnz
fisub
jp
sbb
or
xor
xor
imul
mov
mov
fadd
retf
add
add
add
cs
test
xchg
out
into
test
xchg
push
jno
dec
push
and
add
sub
dec
and
mov
repnz
aad
or
inc
cmp
adc
es
sub
dec
add
scas
mov
(bad)
cld
out
inc
popa
daa
pusha
push
adc
inc
mov
xor
rcl
stc
mov
xor
add
push
dec
lahf
in
iret
cmp
cmc
fdiv
stos
loope
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
ins
repnz
clc
jnp
sti
clc
sti
jb
mov
push
jno
cmp
(bad)
test
mov
xor
push
adc
or
rcl
xchg
xchg
into
mov
stc
sahf
add
imul
out
dec
dec
in
out
xchg
cmp
lds
(bad)
cmc
call
push
cli
popf
mov
or
mov
jge
and
mov
lods
loop
sbb
ret
sbb
and
jmp
inc
push
dec
shl
cdq
add
cs
stc
pop
and
mov
shl
push
popa
(bad)
leave
into
push
sbb
xor
fisub
cmps
fsin
inc
sub
mov
dec
sub
fist
sbb
movs
jmp
inc
xor
cld
xchg
test
ins
arpl
cmp
stos
or
je
mov
mov
and
dec
ret
mov
jl
add
in
jecxz
mov
mov
sbb
mov
xor
mov
xor
jmp
xor
cmp
push
inc
fidivr
xor
ffree
aad
ins
adc
retf
and
sub
and
or
aas
cmp
mov
or
shl
push
popa
push
leave
dec
push
out
mov
mov
jns
and
fnstcw
ss
sahf
loope
dec
into
shl
ds
mov
mov
xor
imul
sti
pop
mov
dec
ins
and
int3
ret
push
cmp
add
lods
jecxz
pop
cmp
in
mov
adc
fdiv
inc
retf
in
mov
movs
sub
mov
leave
jmp
xchg
add
jl
xor
int3
rep
cmp
xchg
stos
sub
inc
fstp
fs
ret
aam
ins
adc
dec
jae
mov
lods
rol
pop
cmp
je
or
in
xor
mov
mov
test
mov
lods
rol
pop
cmp
mov
cli
pop
inc
push
jmp
xor
cmp
push
inc
fidivr
xor
ffree
aad
ins
adc
cmp
int
or
rcl
xchg
xchg
jle
mov
into
jno
cmp
rol
mov
data16
fiadd
jmp
(bad)
loope
dec
dec
icebp
cmps
mov
in
cld
int
jns
jns
stc
jl
mov
call
jg
(bad)
enter
mov
iret
inc
ja
mov
mov
daa
push
call
dec
out
loopne
cmp
jo
sub
neg
adc
xchg
push
adc
mov
repz
sub
hlt
fstp
xchg
sti
fdiv
inc
dec
in
mov
and
dec
ret
aam
sbb
add
lods
jecxz
pop
cmp
fs
adc
mov
retf
ins
and
cs
push
pop
fcomp
into
adc
pop
mov
mov
cli
sbb
push
and
stos
in
repnz
cmp
xchg
mov
inc
cmc
jmp
aad
dec
shl
sub
jge
imul
fwait
mov
cmps
test
add
mov
das
pusha
ja
mov
inc
xlat
clc
lahf
xor
mov
and
sub
jo
enter
cwde
aas
adc
iret
rcl
cmp
cmp
out
dec
inc
neg
mov
and
fidiv
mov
jle
(bad)
dec
outs
loope
mov
into
shl
xchg
xchg
scas
mov
cmps
jmp
(bad)
rol
mov
mov
lds
xlat
dec
iret
shl
aas
xor
das
xor
fbld
daa
pop
inc
mov
outs
lock
dec
push
out
mov
mov
js
and
fdivr
aaa
retf
mov
mov
mov
arpl
inc
bound
imul
inc
(bad)
ret
adc
clc
lods
out
xchg
fcmovne
in
(bad)
repz
inc
or
dec
mov
cmp
sub
jnp
xchg
retf
stos
out
mov
fwait
rcr
push
pop
or
ins
jae
add
add
and
mov
add
rep
out
xchg
sub
outs
xchg
xor
jno
dec
dec
jg
ins
xor
bound
iret
lahf
fsub
scas
out
fild
stc
loopne
or
popa
pop
pop
adc
pavgw
inc
test
iret
ins
call
loope
push
icebp
jle
dec
mov
dec
fs
sbb
add
das
xchg
fld
hlt
ror
repz
shl
push
scas
ins
and
leave
les
xlat
cmc
adc
xchg
call
push
das
jnp
fs
pop
push
xor
dec
es
add
rol
jmp
pushf
jne
and
xor
inc
inc
jne
pop
shl
xchg
mov
sbb
add
je
cmp
or
leave
out
in
inc
mov
mov
je
pusha
adc
cld
mov
inc
inc
cmp
jge
push
pop
or
add
sub
int
rcr
scas
in
xor
lods
jp
add
jne
outs
dec
add
or
sub
movs
fiadd
(bad)
fcomp
loope
sbb
xor
or
je
addr16
xchg
retf
or
out
(bad)
pushf
fimul
daa
push
or
sub
cmp
inc
add
je
cli
ficomp
test
shl
xchg
sbb
inc
and
cmp
inc
adc
cmp
mov
fwait
iret
xchg
push
xor
pop
js
fs
sbb
add
and
xchg
mov
mov
shr
scas
add
adc
bound
sub
ja
or
movs
aad
ret
scas
jmp
icebp
ror
dec
sbb
xor
push
cs
aaa
sbb
int
div
xchg
scas
repnz
pop
and
or
or
mov
mul
loope
mov
push
sub
popa
push
cmp
sbb
outs
and
ret
aam
cmps
shl
mov
mov
and
pop
adc
bound
pop
inc
jb
or
xchg
shr
sub
xchg
clc
mov
pusha
push
cmp
push
dec
or
xor
and
fild
xchg
jmp
inc
or
je
addr16
push
imul
fcmovbe
retf
in
mov
fnstcw
sbb
jg
outs
add
and
je
dec
cs
test
mov
test
mov
pop
jne
inc
xor
add
jns
pop
and
rol
aad
sahf
ficom
adc
xor
and
add
aas
sbb
cs
(bad)
jmp
int
jmp
push
adc
xor
jne
sbb
outs
push
or
ret
pushf
hlt
mov
rol
(bad)
test
dec
dec
dec
jl
outs
ins
sbb
imul
fisttp
mov
sahf
faddp
xlat
idiv
loope
jl
pop
xor
push
cmp
in
in
in
or
jmp
push
or
je
outs
push
sbb
jg
ins
and
aam
into
stos
(bad)
mov
sar
sbb
dec
push
push
add
popa
pop
xor
mov
repnz
fadd
(bad)
xchg
pop
push
mov
jle
jae
pop
dec
adc
popf
lds
cmc
out
lahf
iret
xchg
jmp
(bad)
popf
es
dec
sub
adc
cmp
sub
fs
mov
lahf
ret
into
mov
sbb
inc
aas
gs
jae
push
inc
or
xor
sub
aam
shl
add
pop
pop
inc
xor
gs
add
jae
outs
sub
mov
or
cmc
mov
movs
or
sub
push
push
add
jae
or
mov
jmp
shr
inc
xor
or
or
or
ds
fcmovbe
enter
scas
repz
out
movs
push
push
push
jp
push
pop
and
jl
sub
mov
mov
iret
movs
push
jb
push
sbb
dec
pop
sub
outs
and
(bad)
jmp
cwde
out
test
push
femms
xor
jnp
sbb
adc
jno
add
cdq
push
and
leave
rol
mov
adc
push
je
bound
add
push
mov
into
sahf
icebp
aam
loope
inc
(bad)
cvtps2pd
push
jno
adc
jns
mov
mov
mov
scas
adc
mov
cmp
cmp
add
addr16
sbb
sub
clc
xor
(bad)
mov
add
push
ja
jae
adc
jnp
jle
test
(bad)
in
enter
jmp
push
or
xor
add
sub
push
adc
mov
sbb
scas
clc
xchg
mov
push
push
xor
jb
push
inc
cmp
fistp
stc
iret
xchg
test
pop
sbb
jb
jno
push
dec
ds
adc
mov
int3
aad
les
push
xor
and
das
jae
pop
or
dec
cmp
aad
neg
test
mov
mov
loope
xor
push
jp
add
or
push
jle
fcmovb
retf
mov
lds
or
add
aaa
je
push
push
and
jg
or
mov
retf
loop
in
lahf
mov
sub
push
aas
arpl
ins
push
pop
dec
adc
and
test
mov
lahf
(bad)
mov
inc
das
push
sub
outs
dec
add
inc
outs
push
jle
fcmovb
retf
std
mov
mov
mov
movs
adc
jg
bound
inc
and
outs
and
scas
xchg
cmps
loopne
test
scas
sub
dec
sbb
adc
popa
je
jns
xchg
ret
loop
movs
repnz
jecxz
scas
inc
add
and
push
push
dec
sub
imul
iret
test
rol
sub
(bad)
aas
pop
and
popa
je
or
mov
retf
loop
in
lahf
(bad)
adc
sbb
imul
adc
imul
(bad)
(bad)
(bad)
std
out
leave
or
sub
or
inc
dec
adc
bound
xchg
test
jmp
mov
push
or
fs
jno
or
imul
lahf
fimul
mov
push
outs
push
dec
cmp
pop
pop
or
push
fdiv
out
fild
lods
ds
(bad)
pop
dec
das
fs
jne
imul
mov
mov
nop
cmc
cwde
hlt
mov
mov
inc
xor
pop
pop
add
and
cli
std
test
fistp
in
loope
adc
dec
aas
push
das
bound
sbb
xchg
mov
scas
(bad)
icebp
(bad)
mov
rol
scas
or
dec
pop
xor
push
aas
or
stos
out
les
test
xchg
stc
mov
add
fs
pop
sub
or
fisubr
out
enter
call
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
rcl
cmp
call
mov
dec
sub
cmp
inc
jp
jmp
icebp
dec
loope
sub
and
dec
dec
cmp
popa
sbb
or
mov
sub
xchg
push
cmp
xor
add
jno
imul
cdq
jmp
imul
sar
imul
jg
cmp
jno
or
movs
jmp
mov
mov
ror
aaa
dec
pop
pop
add
jno
push
and
cli
test
call
retf
mov
add
jo
daa
dec
add
sbb
je
neg
mov
call
hlt
pop
jle
cmp
add
push
and
pop
jg
call
sbb
pushf
retf
xchg
mov
int
int
fwait
push
add
addr16
or
pop
or
(bad)
ins
ins
jbe
mov
shr
popf
(bad)
lods
out
sar
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
mov
cmp
popa
sbb
shl
xchg
retf
fwait
inc
push
mov
sbb
and
xor
push
pop
push
or
mov
adc
pop
inc
icebp
rcl
jne
mov
inc
push
adc
sahf
in
sub
retf
repnz
xor
or
and
jg
mov
in
cld
pop
xor
adc
mov
push
jle
mov
jne
jecxz
pushf
sbb
int3
sub
rcl
mov
dec
scas
mov
jle
movs
pop
adc
inc
mov
pop
xchg
mov
dec
js
outs
imul
push
dec
(bad)
mov
test
push
test
and
inc
or
outs
ret
sub
rcl
retf
fs
jp
push
movs
in
out
mov
push
or
dec
adc
cmp
xor
pop
adc
loope
xchg
retf
dec
jmp
icebp
stc
(bad)
std
rol
leave
or
addr16
cmp
inc
popf
pop
mov
ret
test
call
int
je
add
mov
sbb
lock
mov
call
push
loope
cmp
jp
xchg
inc
xor
jno
imul
jmp
add
lods
jp
xchg
fidiv
jg
push
sbb
add
mov
in
icebp
stos
jb
xchg
out
sar
and
mov
cmp
inc
fidiv
retf
ror
loope
mov
or
bound
sbb
stc
push
fcmovbe
cwde
mov
mov
mov
loope
push
push
outs
loopne
and
or
jle
outs
cli
mov
push
cdq
(bad)
movs
cmp
sti
push
cs
das
stos
push
inc
or
xchg
ret
(bad)
xchg
ficom
fmulp
push
inc
jp
push
adc
ins
pop
jno
ins
push
push
or
fucomip
mov
xlat
or
movs
adc
push
pop
adc
cmp
jno
xor
dec
jmp
in
icebp
lods
sub
stc
sar
xchg
and
mov
cmp
sahf
push
mov
pop
mov
retf
mov
mov
and
pop
data16
sub
xor
and
cli
mov
pop
fimul
dec
imul
movs
std
sar
jb
adc
cmp
pop
and
jmp
cmp
cmps
jp
je
pop
cmp
sub
add
and
out
xchg
icebp
stos
lods
call
in
jo
sbb
js
fs
jnp
add
ins
inc
cli
mov
enter
sbb
aam
les
test
xchg
out
cmps
xlat
mov
dec
sbb
das
sub
or
ins
daa
bound
mov
xchg
(bad)
xlat
cwde
in
cmps
jecxz
or
and
or
data16
(bad)
xchg
fild
mov
lahf
loop
out
add
das
imul
sbb
or
fisub
mov
fwait
jecxz
in
add
pop
and
ins
dec
add
imul
xchg
fisub
jno
popa
in
fcom
or
push
push
cmp
or
fsub
test
sahf
into
test
pop
push
das
fs
je
pop
pop
or
jl
mov
pushf
xlat
lods
out
test
cmps
cld
mov
dec
sbb
sub
xor
pop
pop
sub
daa
jl
mov
xchg
xlat
lods
out
mov
int3
xchg
mov
or
adc
ja
pop
pop
cmp
jl
mov
xchg
fisub
xchg
mov
or
adc
ja
pop
pop
cmp
jl
mov
xchg
fisub
xchg
mov
or
sbb
and
cmp
dec
pop
pop
cmp
jge
(bad)
(bad)
xchg
fisub
xchg
mov
or
outs
xor
push
pop
aas
bound
jge
or
mov
int
fnstsw
add
push
push
sub
push
pop
aas
bound
jge
mov
popf
(bad)
lods
out
test
fld
or
ins
cmp
add
jge
(bad)
(bad)
xchg
fisub
xchg
and
repnz
and
cmp
add
jb
or
fldenv
mov
and
repnz
and
jns
or
bound
jb
or
fldenv
mov
and
repnz
and
jns
or
arpl
jae
or
fsub
mov
mov
test
mov
and
cmp
or
jae
add
fisub
mov
mov
test
mov
and
or
outs
sub
or
frstor
mov
mov
test
mov
and
js
or
jno
jno
or
mov
ror
mov
and
xor
inc
cmovo
xor
xchg
fld
jmp
sbb
inc
cli
mov
mov
mov
icebp
mov
jp
push
pop
adc
cmp
pop
and
xor
les
sahf
in
cmc
mov
fist
sub
jge
inc
js
outs
and
test
and
hlt
mov
ds
hlt
sbb
js
outs
mov
test
jne
gs
mov
(bad)
(bad)
mov
stc
out
movs
(bad)
mov
addr16
cs
out
mov
arpl
jno
jns
push
sbb
int3
xchg
fsub
lods
cmc
mov
and
jno
popa
pop
xchg
aad
in
cmc
mov
ficom
xchg
fbld
push
pop
fs
xchg
add
adc
and
xor
les
cmp
test
xchg
fisub
push
push
push
gs
and
dec
add
rcr
fist
sub
push
or
xor
pop
adc
mov
ror
mov
cmp
arpl
push
or
xor
(bad)
(bad)
popf
(bad)
test
mov
stc
mov
mov
test
sub
push
or
cmp
ret
cdq
and
jmp
repz
adc
call
dec
jae
arpl
clc
mov
pop
xor
fadd
cmps
jg
int3
mov
aam
push
jo
pusha
idiv
sub
nop
fild
stos
push
cld
mov
adc
ds
cmova
into
cmc
mov
jge
add
adc
ds
scas
mov
add
fiadd
mov
lds
push
inc
push
push
outs
and
pop
adc
lds
mov
fild
push
inc
push
push
outs
and
xor
scas
aam
add
les
mov
cs
test
cmp
pop
popa
sub
in
cmc
mov
or
icebp
mov
cs
jp
dec
adc
sub
inc
or
mov
retf
out
idiv
es
ss
dec
push
pop
addr16
cmp
or
sbb
in
mov
xchg
xchg
(bad)
scas
cmc
mov
and
dec
ss
inc
push
push
push
movs
out
mov
test
or
cli
mov
mov
cmp
cld
mov
xor
fwait
ror
cmp
xor
pop
adc
sbb
popa
in
push
jg
(bad)
aam
in
hlt
mov
movs
out
mov
inc
mov
jbe
add
adc
and
aaa
jg
mov
lahf
out
idiv
in
mov
inc
andps
fs
je
add
adc
and
xor
les
cmc
mov
movs
out
mov
inc
push
push
push
gs
add
adc
mov
ror
mov
cmp
stos
fs
or
xor
pop
adc
mov
ror
mov
cmp
popa
sbb
inc
jnp
imul
adc
mov
ror
mov
cmp
arpl
push
or
xor
pop
adc
mov
ror
mov
cmp
arpl
push
or
xor
pop
adc
mov
ror
mov
cmp
bound
push
or
xor
pop
adc
mov
ror
fwait
and
(bad)
call
sbb
inc
js
push
add
inc
sbb
and
fst
sub
push
cmove
outs
in
test
xchg
cs
aam
(bad)
push
mov
jns
test
loopne
repz
mov
mov
leave
repz
push
add
xchg
jae
arpl
push
sbb
mov
mov
into
cmc
lea
js
ret
mov
js
push
jae
(bad)
in
sti
mov
or
ds
mov
ret
js
lods
mov
cmp
test
xchg
inc
or
fadd
ins
jb
pop
mov
js
leave
mov
add
cmp
push
sbb
mov
mov
leave
repz
ror
pop
add
out
cmc
mov
add
into
cmc
mov
lds
stos
loope
fsubp
sbb
push
mov
movs
out
xchg
fiadd
jno
daa
jl
mov
pushf
xlat
xchg
pop
add
cs
push
inc
push
mov
movs
xor
pop
pop
and
xor
and
adc
ds
in
div
xchg
fiadd
scas
retf
xchg
sub
mov
out
cmps
lahf
xchg
(bad)
aad
dec
add
stos
loope
icebp
mov
sahf
shr
movs
(bad)
jno
das
push
nop
sub
xchg
(bad)
inc
sbb
and
dec
add
mov
aad
push
push
pop
pop
test
xchg
cs
inc
push
push
outs
and
in
rcl
lds
mov
test
xchg
cs
out
xchg
push
imul
mov
aad
movs
(bad)
jae
imul
inc
pop
push
outs
and
xor
add
adc
in
xor
ss
andps
pop
test
xchg
das
fs
je
inc
sbb
ins
daa
jl
in
hlt
mov
push
(bad)
pushf
xlat
in
cmps
cld
mov
mov
call
mov
lds
push
sbb
retf
loope
lock
cs
test
xchg
push
add
pop
pusha
sub
inc
or
mov
out
mov
lds
rcr
add
pop
pusha
sub
inc
or
mov
retf
loope
icebp
mov
and
jp
dec
adc
sub
inc
or
mov
int
fucom
lods
idiv
es
ss
dec
push
pop
sub
inc
or
sbb
in
mov
xchg
xchg
fsub
lods
idiv
ins
aaa
jl
dec
pop
pop
fs
je
inc
xorps
in
mov
xchg
xchg
(bad)
scas
hlt
mov
and
xor
add
adc
fs
je
inc
andps
movs
out
mov
mov
scas
cmc
mov
and
dec
adc
sar
out
mov
test
xchg
fsubp
scas
cmc
mov
and
jo
pop
pop
adc
jp
push
and
icebp
stos
loope
scas
ficomp
fs
mov
cmp
popa
pop
adc
jp
push
call
out
nop
retf
mov
mov
cmp
popa
dec
mov
cmc
mov
and
push
push
push
gs
test
xchg
fisub
mov
sahf
in
cmc
mov
and
push
push
push
call
repnz
dec
adc
and
xor
les
hlt
mov
movs
push
gs
xchg
das
je
add
adc
and
xor
les
hlt
mov
movs
loopne
cmp
fs
je
add
adc
and
xor
les
hlt
mov
movs
out
retf
adc
cs
add
outs
xor
sahf
in
cmc
mov
movs
out
mov
xchg
jne
add
outs
xor
sahf
in
cmc
mov
movs
out
mov
xchg
inc
push
push
gs
add
outs
xor
sahf
in
cmc
mov
movs
out
mov
mov
push
or
xor
pop
adc
mov
ror
mov
inc
sub
push
or
xor
pop
adc
mov
ror
mov
sbb
or
xor
pop
adc
mov
ror
mov
aas
jo
pusha
sbb
inc
jnp
imul
adc
mov
ror
mov
cmp
arpl
push
or
xor
pop
adc
mov
ror
mov
cmp
arpl
push
or
xor
pop
adc
mov
ror
mov
cmp
arpl
push
or
xor
pop
adc
mov
ror
mov
cmp
arpl
push
or
xor
and
icebp
aad
fwait
ror
mov
cmp
arpl
push
or
xor
jl
ins
daa
pushf
xlat
mov
in
mov
clc
mov
mov
cmp
bound
push
or
xor
rcr
and
movs
mov
stc
mov
mov
cmp
bound
push
or
xor
stos
enter
sub
jae
inc
fwait
ret
stc
mov
mov
cmp
bound
push
or
xor
mov
sbb
sub
jae
inc
jp
stc
mov
mov
cmp
sbb
inc
jge
push
int3
xchg
xchg
sub
cmp
or
adc
std
mov
cmps
fst
and
pop
add
cmp
call
adc
mov
ret
mov
js
push
jae
imul
imul
jno
pop
repz
ret
mov
js
push
jae
push
rcl
sub
mov
ret
mov
js
push
jae
outs
mov
mov
jae
arpl
mov
ret
mov
js
push
jae
outs
mov
mov
mov
arpl
jecxz
rcr
and
pop
add
cmp
stc
mov
xor
jb
bound
mov
ret
mov
js
push
jae
outs
xor
loopne
mov
mov
imul
cwde
ret
mov
js
push
jae
outs
xor
loope
mov
mov
imul
ret
mov
jnp
push
pop
add
cmp
cmc
mov
mov
outs
xor
ror
pop
add
xchg
mov
scas
add
popa
cmp
mov
lds
adc
arpl
dec
add
push
sub
outs
jmp
mov
pop
add
mov
mov
push
push
sub
inc
idiv
lds
adc
ds
mov
cmps
std
mov
inc
pop
push
sub
mov
lds
adc
ds
mov
cmps
std
mov
inc
sbb
int3
cmc
mov
lds
adc
ds
mov
stos
icebp
mov
dec
adc
xor
into
cmc
mov
lds
adc
ds
(bad)
in
cmc
mov
inc
adc
and
mov
lds
or
push
push
pusha
(bad)
in
cmc
in
cmp
popa
iret
jmp
xchg
sub
jne
inc
push
push
outs
and
cmc
xor
outs
and
out
movs
(bad)
mov
test
xchg
cs
inc
push
push
outs
and
cmc
cmp
outs
aaa
fucomip
movs
(bad)
mov
test
xchg
cs
inc
push
push
outs
and
cmc
cmp
and
movs
(bad)
mov
test
xchg
cs
inc
push
push
outs
and
cmc
cmp
and
movs
(bad)
mov
test
xchg
cs
inc
push
push
outs
and
cmc
cmp
outs
xor
mov
test
xchg
cs
je
inc
pop
push
outs
and
(bad)
in
cmc
cmp
outs
xor
mov
test
xchg
das
fs
je
inc
pop
push
outs
and
(bad)
in
cmc
mov
push
pop
and
movs
push
fs
je
inc
pop
push
outs
and
(bad)
in
cmc
mov
and
movs
push
gs
je
inc
pop
push
outs
and
(bad)
in
cmc
mov
and
movs
push
imul
add
pop
pusha
sub
in
cmc
mov
and
stos
lock
and
jp
dec
adc
sub
scas
cmc
mov
and
stos
icebp
mov
and
jp
dec
adc
sub
scas
cmc
mov
sub
xchg
(bad)
stos
icebp
mov
and
jp
dec
adc
sub
mov
fwait
shr
fs
enter
stos
icebp
mov
and
jp
dec
adc
sub
dec
add
test
retf
loope
icebp
mov
and
jp
dec
adc
sub
inc
or
mov
retf
loope
icebp
mov
and
jge
dec
push
pop
sub
inc
or
mov
xchg
xchg
fucom
lods
idiv
es
ss
dec
push
pop
sub
inc
or
mov
xchg
xchg
fucom
lods
idiv
es
aaa
jl
dec
pop
pop
addr16
cmp
or
sbb
in
mov
xchg
xchg
fsub
lods
idiv
ins
aaa
jl
dec
pop
pop
addr16
cmp
or
sbb
in
mov
xchg
xchg
fsub
lods
idiv
imul
dec
adc
fs
je
inc
andps
movs
out
mov
test
xchg
(bad)
scas
hlt
mov
and
xor
add
adc
fs
je
inc
andps
movs
out
mov
test
xchg
(bad)
scas
hlt
mov
cld
inc
xor
pop
gs
inc
push
push
push
movs
out
mov
test
xchg
fsubp
scas
cmc
mov
retf
lods
xor
add
cs
inc
push
push
push
movs
out
mov
test
xchg
fsubp
scas
cmc
mov
mov
dec
adc
ds
push
push
push
movs
out
mov
test
xchg
fsubp
scas
cmc
mov
or
jle
jno
popa
pop
adc
jp
push
call
loope
xchg
retf
mov
arpl
jno
popa
pop
adc
jp
push
call
loope
xchg
retf
mov
sub
pop
jno
pusha
pop
adc
jnp
imul
ror
loopne
nop
retf
add
inc
aas
test
xchg
aad
arpl
pusha
pop
adc
jnp
imul
ror
loopne
nop
retf
and
xor
pop
adc
cmp
popa
sbb
inc
cli
mov
mov
mov
ror
and
dec
add
jno
popa
sbb
inc
cli
mov
mov
mov
ror
sbb
push
inc
dec
push
and
jp
(bad)
enter
jecxz
out
aam
mov
jmp
push
or
jo
and
dec
or
jae
xor
loop
hlt
(bad)
rol
inc
push
push
fs
daa
push
push
imul
xchg
ficom
sahf
jecxz
mov
bound
inc
push
add
int3
xchg
test
(bad)
nop
xchg
xchg
mov
in
or
add
jmp
mov
jmp
clc
lods
jne
aam
sbb
mov
cmp
mov
cmp
xchg
pop
and
mov
hlt
sub
adc
mov
cmp
jmp
je
add
jno
loop
push
cmp
in
cmc
mov
push
dec
jb
push
mov
sub
mov
(bad)
sbb
or
xor
aas
jecxz
and
mov
sbb
cmp
popa
cmp
icebp
jp
push
inc
imul
jp
push
jp
movs
icebp
test
out
push
fwait
(bad)
jg
and
and
push
push
imul
nop
mov
dec
cdq
sbb
icebp
fs
mov
fild
cmp
cli
hlt
lock
add
jnp
dec
add
lock
and
retf
jg
arpl
xchg
xchg
cmp
mov
push
call
mov
loope
icebp
push
jg
outs
sbb
and
mov
sub
inc
push
or
jp
adc
ss
stos
loope
add
shr
push
pop
ins
cmp
dec
xchg
popa
cmp
mov
in
rcl
int3
pop
push
sbb
jle
and
push
adc
jae
xor
scas
mov
mov
xchg
mov
adc
inc
sub
jne
add
jle
lahf
dec
in
(bad)
or
out
mov
add
outs
pop
push
daa
inc
cmp
arpl
shr
repz
push
gs
xor
aaa
push
or
aas
fs
mov
into
mov
div
out
scas
pop
pop
inc
dec
cmp
and
pop
inc
add
pop
cs
fsubp
xor
les
adc
bndstx
push
and
cmp
stos
sar
test
loope
pop
cmp
jne
push
or
cmp
jns
cdq
ret
mov
icebp
shl
retf
pop
adc
push
or
pop
push
jp
dec
or
stos
jmp
call
mov
cdq
sub
jns
dec
sbb
sub
dec
or
stos
jmp
call
mov
cdq
sub
jns
dec
sbb
sub
dec
or
stos
jmp
call
mov
cdq
sub
jns
dec
sbb
sub
dec
or
stos
jmp
call
mov
cdq
sub
jns
dec
sbb
sub
dec
or
stos
jmp
call
mov
cdq
sub
jns
dec
sbb
sub
dec
or
stos
jmp
call
mov
cdq
sub
jns
dec
sbb
sub
dec
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
addr16
cmp
lahf
dec
lock
cmp
lods
in
push
inc
sbb
mov
(bad)
sub
aam
cs
ret
inc
push
mov
adc
int3
ds
cmp
inc
lods
jle
test
add
dec
adc
xor
xchg
fmul
mov
jp
inc
lods
pop
add
and
and
push
mov
mov
adc
stos
push
cld
cs
cmps
pop
push
nop
mov
jge
add
out
in
xor
ror
neg
jo
mov
rcr
or
pusha
push
stos
mov
lods
inc
shr
push
call
loope
push
sar
jbe
xor
pop
mov
push
cli
icebp
int3
sub
mov
sahf
and
jmp
add
scas
adc
fcmovbe
test
(bad)
mov
adc
retf
sbb
push
or
push
ror
(bad)
push
out
inc
fidiv
pusha
mov
leave
outs
jmp
and
xor
add
jo
pusha
(bad)
push
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fisub
aas
mov
es
rcl
loopne
cli
cmp
pop
inc
fst
fisub
pusha
push
adc
push
sahf
xor
lea
adc
loopne
adc
ins
inc
mov
mov
lea
pop
adc
jle
in
test
pminsw
dec
jmp
clc
scas
push
xchg
iret
add
test
out
cmps
ins
js
jmp
push
push
ficomp
push
fisub
and
ds
rcr
cmpxchg
mov
mov
cmp
mov
ins
das
cmps
out
loope
or
push
dec
mov
push
push
inc
mov
jo
jle
push
leave
ror
rcr
push
movs
sub
cs
xor
ja
mov
jne
jo
(bad)
aaa
shl
out
xchg
loope
rcr
push
add
jo
aaa
out
push
mov
sahf
fmul
aad
mov
cs
dec
pop
test
(bad)
stos
sbb
out
jno
cld
jmp
mov
dec
lock
ds
mov
cmps
push
pop
add
jo
jne
push
scas
sub
cmp
pop
lock
loopne
aam
xor
push
movs
dec
into
mov
xor
fst
xchg
pop
hlt
dec
mov
push
pop
sbb
aaa
xor
pusha
push
pop
scas
add
test
sub
dec
loopne
nop
mov
(bad)
push
out
sbb
cdq
mov
mov
xor
xchg
xchg
int
mov
dec
loop
cwde
imul
in
inc
loop
daa
and
adc
sahf
xor
arpl
pop
loopne
nop
and
push
inc
out
inc
ficomp
into
mov
mov
call
mov
lock
idiv
nop
cs
pop
dec
add
mov
cmps
pusha
push
push
or
and
outs
sub
push
dec
or
nop
rol
pop
push
push
pop
fimul
jmp
rcl
loopne
xchg
jle
loopne
dec
mov
jo
pusha
push
adc
cmp
outs
int3
pop
sbb
inc
ds
and
inc
mov
ss
popf
mov
xchg
mov
imul
shl
(bad)
xchg
push
dec
push
mov
mov
cdq
jmp
push
scas
hlt
div
xchg
and
xchg
shl
jo
pop
jo
mov
mov
xor
mov
cmp
dec
lea
ja
pop
hlt
into
sub
iret
inc
fwait
sbb
pusha
jmp
scas
pop
cmp
mov
shl
movs
and
inc
inc
(bad)
test
retf
retf
je
sub
daa
and
ficomp
cmp
mov
inc
pop
inc
fst
ficomp
pusha
push
adc
add
dec
sbb
mov
xlat
dec
hlt
daa
stc
(bad)
mov
add
daa
and
test
mov
mov
inc
adc
push
adc
(bad)
fs
mov
pop
cwde
dec
pop
lock
cmp
xlat
data16
(bad)
mov
cdq
xor
cmp
add
out
rcr
shl
nop
ret
mov
imul
cwde
into
or
iret
inc
mov
sbb
clc
ds
loopne
push
ficomp
mov
jl
std
xor
xor
rol
loope
jecxz
nop
push
mov
inc
leave
fbld
adc
and
lods
dec
or
cs
push
push
pop
add
jo
jnp
loope
add
cmp
scas
lock
xlat
aam
xor
push
push
(bad)
sub
test
movs
adc
xor
fst
xchg
pop
pop
dec
sub
jns
and
pop
push
mov
aaa
xor
pusha
push
or
leave
cmp
sub
mov
les
mov
mov
mov
xor
and
jmp
pop
adc
dec
in
add
jo
and
adc
sahf
fisttp
arpl
push
loopne
nop
sub
push
dec
out
lods
fidivr
into
mov
mov
call
add
xchg
jnp
inc
push
pop
dec
add
mov
cli
pusha
push
push
or
retf
jle
outs
sub
push
dec
or
nop
les
pop
push
push
pop
ficomp
jmp
shl
loopne
mov
imul
repz
test
jo
pusha
into
adc
cmp
cmp
pop
sbb
inc
ds
xor
push
mov
ss
inc
xor
stos
and
add
pop
movs
push
mov
jmp
test
and
mov
jns
cmp
or
dec
push
ret
add
xchg
in
scas
ins
xchg
xor
into
mov
arpl
adc
xchg
aaa
dec
cmp
das
nop
xchg
add
out
push
mov
xor
and
cli
repz
cmp
xchg
or
imul
addr16
jbe
adc
mov
xor
mov
xchg
sub
ds
call
in
scas
daa
out
popa
into
mov
pusha
retf
rol
inc
pop
mov
fwait
daa
sahf
and
dec
scas
call
mov
jl
xchg
out
icebp
ds
js
cmc
pop
lock
jo
popa
add
outs
adc
rcr
lock
push
pop
push
enter
or
pop
out
add
sub
cmps
loopne
dec
ror
or
mov
push
repnz
cwde
and
jmp
rcr
mov
loopne
pop
jo
je
push
cmc
push
push
es
inc
popf
pusha
cld
dec
scas
jmp
(bad)
shl
movs
popf
nop
(bad)
sahf
push
ins
push
sub
mov
shl
adc
ja
sub
sbb
call
cs
cmps
push
pop
add
jo
jle
int3
scas
mov
cmp
test
cli
loopne
aam
xor
push
jnp
movs
out
test
mov
xor
fst
xchg
pop
sub
ds
and
pop
adc
aaa
xor
pusha
push
or
ficomp
jae
sub
xchg
loopne
nop
mov
dec
mov
mov
xor
and
out
dec
cmp
dec
imul
ss
out
jo
and
adc
sahf
call
sub
sbb
jmp
hlt
lods
mov
fimul
scas
call
or
xchg
inc
cs
pop
dec
add
mov
sahf
pusha
push
push
or
idiv
outs
sub
push
dec
or
nop
sti
adc
out
pop
push
push
pop
fisub
jmp
shl
shl
cs
push
pop
push
dec
mov
jo
pusha
stos
adc
cmp
aam
rcr
out
mov
cmp
pop
fsubr
cmps
mov
mov
call
pop
xor
(bad)
or
in
sub
sbb
(bad)
sub
popf
scas
add
mov
inc
dec
scas
dec
or
mov
into
retf
scas
inc
push
jno
and
push
scas
call
cmp
sub
cmp
aas
shl
ret
cmc
pop
sub
mov
jo
jmp
(bad)
les
mov
sbb
mov
das
xchg
cmp
sbb
push
lock
xchg
jo
and
hlt
and
dec
push
lock
rcr
jg
dec
icebp
repz
stos
int
cmp
std
push
popa
aam
fadd
ss
and
aam
les
hlt
adc
mov
jmp
xchg
aaa
push
fdivp
dec
jg
leave
imul
pop
lods
repz
out
movs
pop
daa
xor
xchg
ins
dec
and
shr
ins
ds
dec
adc
stos
les
mov
dec
and
outs
aas
xlat
mov
lock
sar
mov
icebp
int
sbb
push
inc
jecxz
add
shl
sub
rcl
dec
pop
int
push
or
push
out
ficom
push
ja
or
mov
sar
sbb
or
jae
fs
sti
add
push
adc
lahf
fild
mov
jge
sahf
mov
and
out
adc
xor
xor
mov
mov
add
xchg
shl
inc
call
cmps
mov
cmps
mov
fiadd
stos
push
push
adc
lock
ss
add
(bad)
pop
inc
sbb
mov
into
pusha
inc
xchg
jmp
add
cli
jl
shl
and
daa
pop
jg
(bad)
jo
push
out
sbb
je
push
lea
retf
jns
das
outs
aas
ins
and
(bad)
mov
(bad)
lods
test
xor
push
cdq
mov
sub
fsubr
adc
push
dec
mov
call
fldcw
fcomip
shr
rcl
xor
loop
pop
mov
fsub
add
xchg
js
and
fidiv
push
stos
jle
popf
push
mov
dec
loopne
sbb
sub
jbe
jne
add
add
xor
mov
or
sar
push
mov
push
ins
or
xor
and
xchg
outs
sub
movs
mov
push
call
mov
mov
cmp
loop
test
push
je
add
(bad)
mov
stos
mov
push
jge
and
rcr
rcl
retf
(bad)
fwait
(bad)
and
in
add
retf
jns
pop
out
mov
int
mov
push
xchg
xchg
jle
in
(bad)
fistp
mov
sbb
int3
test
mov
pop
out
jmp
fwait
jo
pushf
push
out
leave
mov
mov
dec
cwde
and
loopne
popa
pusha
xchg
push
mov
mov
pusha
mov
mov
cmp
push
add
rcr
or
aaa
mov
and
and
push
mov
enter
rcr
jge
fdiv
icebp
pusha
xchg
scas
arpl
sbb
leave
and
xchg
dec
(bad)
lock
ds
xchg
loope
cmp
jbe
adc
jo
adc
jo
fs
pop
sub
mov
loope
xchg
mov
jae
call
jmp
dec
adc
sub
ds
ds
stos
or
or
and
xchg
mov
jns
sbb
aas
or
aam
sbb
in
adc
push
aaa
sti
mov
mov
mov
retf
jmp
fdiv
sti
cmp
cmp
mov
mov
pop
push
dec
loopne
loopne
(bad)
pop
mov
sbb
pusha
aaa
out
push
adc
lock
xor
dec
in
test
pop
mov
pop
sub
out
dec
adc
adc
bound
dec
movs
test
lds
aad
or
jmp
imul
fistp
jg
retf
jl
push
mov
mov
cmps
cmp
mov
(bad)
in
ds
jbe
xchg
pop
or
outs
out
jg
sub
and
fiadd
lahf
sti
fs
adc
stos
and
push
cmc
addr16
adc
lock
cmc
jle
mov
mov
xchg
aam
fild
or
sbb
push
rol
cmp
adc
sbb
mov
and
jg
shl
push
shr
sbb
sub
fwait
(bad)
fistp
popa
xor
adc
pop
clc
sar
dec
cmc
push
mov
test
mov
pusha
push
cli
scas
call
jle
jg
mov
aam
(bad)
cwde
retf
fist
dec
dec
mov
stos
sbb
cmc
(bad)
outs
ss
(bad)
xchg
loope
and
fs
dec
and
sub
add
ins
ds
or
xchg
inc
jecxz
push
gs
lahf
mov
xor
dec
push
in
xor
push
lods
xlat
shl
mov
sbb
and
xor
and
sbb
cmps
cld
js
or
mov
(bad)
mov
inc
and
jle
xchg
nop
pop
lock
pop
pop
xchg
cs
ror
mov
cdq
pusha
loopne
in
push
lods
iret
jge
hlt
xchg
jg
mov
push
sbb
pop
fs
adc
inc
adc
mov
out
mov
cmp
xchg
(bad)
(bad)
ds
sub
sbb
(bad)
dec
pusha
and
test
add
jle
call
nop
aas
jg
dec
pop
mov
in
mov
jno
dec
std
inc
popa
and
and
mov
clc
clc
or
pop
mov
sub
inc
sbb
call
add
fmul
outs
jle
stos
push
mov
inc
ins
sub
dec
pop
jle
dec
cdq
es
xchg
scas
dec
fcmove
fstp
adc
dec
pop
xor
ds
jp
push
mov
mov
mov
frstpm(287
inc
dec
sub
iret
xchg
outs
das
aaa
nop
pop
sbb
gs
jmp
push
lods
lods
das
stc
std
in
inc
clc
sub
pop
xor
mov
pop
or
xor
sbb
jb
cmp
out
push
xchg
mov
jno
pop
jecxz
xor
loopne
mov
push
add
dec
pop
les
sbb
inc
jmp
sar
mov
loopne
push
icebp
mov
xchg
outs
dec
dec
pop
mov
es
xchg
jmp
das
or
cld
pop
cmp
push
fisubr
arpl
shl
jne
push
jmp
mov
mov
loope
loopne
add
add
push
stos
xchg
gs
test
cld
daa
cmp
jne
jo
movs
xchg
movs
xchg
icebp
inc
xor
rcl
jmp
sub
jo
mov
iret
add
aad
maxps
(bad)
adc
loop
ins
data16
lods
outs
aam
jge
xor
jne
lods
cmp
jecxz
mov
push
push
pop
(bad)
(bad)
ret
mov
into
dec
push
cdq
jmp
sub
lea
lds
sbb
movs
scas
xchg
out
mov
inc
push
jle
popa
add
xchg
cwde
sbb
(bad)
in
test
cdq
out
dec
or
imul
fwait
pop
lahf
out
xchg
outs
mov
rcr
rcl
out
rol
push
sbb
add
pop
loop
inc
lock
cwde
outs
pop
and
icebp
aad
scas
dec
fimul
and
xchg
xchg
outs
cmp
cmp
ds
mov
mov
call
xor
je
enter
xchg
scas
lods
inc
out
cli
les
push
int3
xor
ja
cmps
lock
or
les
bnd
stc
std
adc
fistp
or
jge
adc
clc
dec
and
nop
xchg
int
jb
jmp
add
adc
add
ins
mov
ror
jae
jb
fwait
jo
mov
jne
mov
lock
movs
ds
stos
rol
scas
pop
pop
jo
pusha
jle
and
je
and
xchg
iret
rcr
cmc
jp
mov
pop
jmp
adc
in
es
mov
push
dec
pusha
outs
das
sbb
add
nop
or
loopne
push
out
push
push
dec
inc
lahf
scas
push
ins
sbb
iret
jno
jle
jecxz
push
jae
and
movs
xchg
mov
retf
mov
ret
mov
scas
cld
dec
jne
ins
shl
adc
mov
scas
out
xchg
nop
inc
push
and
fistp
xchg
dec
mov
fnstsw
sar
nop
arpl
lods
popf
inc
iret
dec
fs
sub
rcr
add
imul
pop
jge
stos
inc
adc
jecxz
push
jecxz
int
add
rcr
cmp
movs
clc
aam
pusha
dec
cmc
dec
neg
mov
xor
inc
push
scas
int3
into
jne
fdivr
sub
dec
jle
fiadd
pop
enter
mov
xor
mov
in
xor
sbb
repz
icebp
test
inc
not
repz
mov
push
sub
or
pop
cmp
in
dec
out
lods
pop
jne
jno
add
enter
out
fst
inc
mov
sub
cdq
mov
xor
sbb
push
jbe
ins
dec
pop
clc
dec
in
xchg
movs
hlt
not
stos
mov
push
adc
add
jle
out
aad
dec
call
or
nop
test
jae
cmp
add
pop
in
stc
aad
popf
fnstcw
jno
popa
sub
push
retf
fwait
cmp
std
add
cmps
in
lahf
xor
int
ja
xchg
mov
sub
loop
pop
lea
stos
push
mov
in
mov
retf
imul
jnp
add
(bad)
pusha
out
sbb
mov
addr16
push
add
cmp
cmc
push
mov
push
jae
xchg
or
mov
xchg
xor
(bad)
sbb
pop
pop
xchg
test
stc
cwde
push
push
sti
lods
mov
outs
and
xor
sub
not
add
push
stos
mov
adc
mov
or
pop
les
fwait
mov
vpminub
jae
push
les
cmc
pop
cmp
cmps
jns
imul
or
push
mov
xor
es
adc
dec
aad
ja
dec
dec
pop
add
aas
nop
das
xchg
cdq
nop
inc
and
shl
sbb
test
sub
and
xchg
movs
jae
jmp
out
mov
arpl
push
mov
and
jle
movs
xchg
les
mov
call
push
mov
(bad)
test
gs
js
jecxz
sbb
sahf
xrelease
xor
pextrw
mov
iret
movs
mov
jne
jmp
fwait
stos
add
cmp
movs
cmc
sbb
dec
push
test
xchg
aad
dec
mov
lods
repnz
and
jl
jmp
movs
sti
into
and
adc
dec
pop
repz
and
mov
add
mov
in
dec
fild
outs
pop
pusha
jle
jle
popf
cld
mov
mov
jae
push
sub
aad
cs
sub
stos
dec
adc
xchg
sbb
xchg
nop
dec
sbb
mov
mov
or
xchg
es
sbb
gs
scas
dec
sbb
or
loope
icebp
pop
mov
mov
loopne
cmp
and
movs
jbe
sbb
fstp
xchg
gs
retf
fwait
push
or
or
dec
fnstsw
in
add
xchg
mov
stos
add
xchg
out
dec
jge
fidiv
movs
outs
sar
pop
mov
cs
pop
push
add
lahf
add
xchg
mov
test
pop
lock
dec
pop
xor
adc
add
(bad)
fucomip
scas
popf
std
mov
cmp
jg
or
ds
mov
mov
dec
mov
xor
scas
push
sar
xor
sbb
fidiv
sub
push
sub
push
and
jle
outs
xchg
cwde
cmp
rol
dec
fs
mov
xchg
cmp
jo
mov
and
fisttp
test
aas
or
in
fs
scas
sbb
mov
lea
ror
lock
fcmovnbe
mov
jnp
hlt
mov
xor
in
jmp
das
stos
push
pop
jnp
mov
pop
jg
out
mov
in
nop
out
push
fidiv
push
out
shr
rcr
sbb
dec
aad
pop
sub
scas
repz
fcomip
lds
xor
inc
int
adc
int
out
(bad)
jle
xchg
sti
push
or
fbld
adc
sti
iret
jb
sbb
call
aam
or
repz
pop
jmp
dec
data16
cs
into
ror
aam
cmps
xchg
clc
dec
shl
(bad)
mov
aaa
push
fld
aaa
fwait
sub
fistp
out
sbb
pop
sar
mov
cs
push
push
inc
fidiv
in
fwait
and
ins
cmp
mov
cmc
dec
jnp
clc
mov
mov
inc
xchg
repz
cmp
adc
jmp
sub
inc
aad
iret
xor
aam
mov
dec
jle
ds
in
pop
das
push
mov
(bad)
push
lahf
inc
cs
push
push
sahf
jo
fistp
inc
mov
outs
cmc
jp
(bad)
sbb
push
pop
sti
push
xchg
mov
iret
add
repz
sub
sbb
mov
(bad)
or
push
jmp
out
inc
mov
(bad)
and
inc
scas
fcomp
mov
loopne
js
or
loopne
and
test
xchg
loopne
sar
shr
shl
(bad)
(bad)
mul
push
js
adc
es
push
and
and
ror
sbb
dec
mov
outs
movs
xchg
sbb
dec
call
mov
dec
mov
and
adc
(bad)
xchg
out
adc
mov
out
jo
mov
adc
cmp
pop
jnp
imul
(bad)
dec
push
in
push
mov
fs
inc
add
add
rol
(bad)
loopne
push
xlat
dec
dec
test
fbstp
jmp
sahf
imul
loopne
adc
ins
fst
in
add
cwde
fidiv
inc
add
add
test
outs
sub
sub
mov
push
xor
push
pop
lock
lods
ds
imul
jae
stc
(bad)
push
mov
mov
cmps
popa
jge
test
cmp
dec
loopne
nop
xchg
lds
int
cmps
push
out
cmp
adc
pop
sahf
xor
and
push
rcr
xor
packsswb
or
inc
(bad)
jo
and
(bad)
xor
test
xor
xor
mov
fimul
scas
ret
jg
mov
cli
rcl
add
cs
push
adc
call
push
pusha
not
add
xlat
and
outs
xor
cwde
dec
and
leave
cs
xchg
in
push
sub
lock
rep
jns
shl
shl
ja
push
sub
xor
sub
pusha
adc
les
shr
pop
adc
mov
push
retf
fstp
mov
mov
sbb
sbb
xor
pop
(bad)
jecxz
mov
jbe
xchg
movs
push
xchg
in
inc
mov
xchg
(bad)
shr
cmp
jne
and
nop
dec
xor
das
inc
clc
jmp
xchg
add
out
scas
inc
jb
xlat
fdiv
adc
stos
mov
mov
xchg
das
or
sbb
dec
fbstp
pusha
jecxz
les
vpsubsb
sbb
jne
(bad)
ins
cmp
push
mov
mul
jno
xor
lock
xor
and
stos
lock
(bad)
xchg
jecxz
inc
push
and
fild
jb
fld
and
aaa
shl
cmp
mov
repnz
sub
sub
cwde
into
pusha
out
push
cwde
lea
xlat
stos
test
lock
lods
jmp
in
xchg
push
pushf
cli
pop
and
call
loopne
add
ret
inc
pmaddwd
mov
push
stos
shl
into
add
(bad)
fild
cmc
das
cmp
(bad)
jno
popf
dec
(bad)
cs
pop
js
mov
ficomp
data16
fadd
(bad)
rol
sub
nop
(bad)
or
(bad)
test
jo
int
mov
adc
cmp
popf
sbb
pop
sbb
sub
mov
arpl
xor
and
adc
xchg
lock
es
imul
repnz
jo
mov
xor
push
popf
pop
fs
lock
(bad)
clc
aam
sbb
mov
pop
and
jns
arpl
jo
inc
lock
nop
ds
imul
mov
cmps
jle
(bad)
scas
call
mov
and
adc
xor
rcr
(bad)
fnsave
mov
shl
ret
mov
xor
pop
jge
loopne
jge
xor
dec
dec
in
jne
and
mov
scas
jmp
stos
movs
jle
sub
pop
sbb
arpl
inc
fistp
pop
or
out
cmp
mov
xor
add
popf
outs
lods
mov
ins
push
push
imul
sub
mov
test
sahf
test
out
sar
add
mov
repnz
rcl
pop
enter
adc
repz
gs
xchg
adc
jle
sbb
into
cs
(bad)
push
mov
test
jbe
mov
cmp
mov
push
adc
xor
ins
mov
mov
mov
mov
dec
hlt
mov
dec
mov
mov
movs
mov
cs
retf
push
out
test
jo
inc
cmp
add
rcr
or
sub
inc
stos
add
(bad)
cmps
cmps
inc
adc
lea
jne
dec
and
outs
mov
ret
test
adc
and
mov
sti
pusha
mov
xor
std
test
jo
jae
mov
mov
sbb
mov
dec
and
and
in
popf
xor
int
mov
push
push
fst
xor
cwde
inc
pusha
js
data16
mov
mov
test
and
into
mov
xor
fild
icebp
and
ds
lahf
div
in
inc
mov
mov
and
jno
xor
dec
adc
inc
ins
ds
and
movs
inc
je
fnsave
in
(bad)
into
mov
in
scas
adc
stos
pop
outs
or
push
mov
pushf
push
(bad)
(bad)
jl
jl
inc
nop
lahf
mov
jmp
inc
cmps
xchg
push
lea
ins
jle
loope
push
mov
fisub
inc
pushf
out
adc
sahf
xor
gs
xchg
aad
dec
movs
jnp
mov
pop
in
adc
mov
(bad)
scas
add
jne
lods
push
shl
test
lock
es
jle
outs
cmc
outs
mov
ss
pusha
out
push
scas
inc
shl
fs
xchg
pop
lock
movs
scas
aad
adc
mov
mov
and
adc
jecxz
inc
mov
inc
lahf
push
in
repnz
cld
jo
pusha
scas
(bad)
jmp
cmp
ins
sub
push
jae
mov
push
jo
pusha
xor
push
test
ss
movs
push
(bad)
scas
fist
mov
in
scas
(bad)
cli
mov
xchg
rcr
(bad)
jg
pop
adc
jo
jne
and
add
lock
das
outs
cmp
cmc
xor
mov
xor
jno
imul
mov
xchg
imul
out
call
push
test
adc
add
adc
lea
cmp
adc
push
xor
jmp
(bad)
jne
enter
leave
adc
ds
inc
jg
push
inc
inc
scas
push
arpl
sar
pusha
mov
sti
cld
adc
jecxz
pop
mov
icebp
rol
cmp
out
and
ret
jne
adc
pop
xor
jbe
das
jle
sub
dec
mov
ins
rol
loope
icebp
mov
and
and
jle
pop
aas
jno
out
movs
dec
pop
(bad)
xchg
dec
icebp
in
inc
adc
jo
sahf
cmp
push
mov
adc
adc
mov
mov
pop
(bad)
xchg
pop
test
gs
inc
inc
push
test
add
cmp
shl
into
pop
mov
xchg
loopne
ficomp
or
xchg
xor
lahf
xor
and
cs
and
das
sub
xadd
mov
jbe
out
lahf
jbe
push
push
int
mov
sub
lea
ins
movs
lea
dec
push
mov
add
xor
repnz
xchg
jecxz
mov
iret
push
loope
xor
(bad)
push
push
jo
cmp
push
call
sbb
mov
nop
call
mov
fidiv
and
mov
xchg
rcr
xor
dec
mov
retf
pop
out
inc
fwait
cmp
push
inc
jbe
lock
sub
jbe
lds
cmc
adc
adc
sbb
stc
push
(bad)
retf
lods
adc
xchg
lock
ja
rcr
mov
fisub
(bad)
popf
and
int3
cmp
mov
pusha
pop
sub
mov
fs
mov
xor
test
inc
call
arpl
jae
not
adc
xchg
nop
jno
pushf
cli
dec
addr16
in
jns
cmp
add
sbb
inc
pop
mov
sub
lahf
out
mov
mov
xor
jle
jecxz
sbb
lods
xchg
pop
mov
dec
jae
adc
std
push
mov
xor
and
outs
dec
outs
loope
movs
cmp
scas
out
fst
push
sbb
test
iret
pop
aam
or
sbb
mov
addr16
push
mov
(bad)
pop
jp
adc
and
cli
cvtdq2ps
idiv
dec
mov
xor
scas
lods
cmc
pop
(bad)
ret
call
cmp
mov
and
jne
popf
push
dec
pop
xor
outs
jae
xchg
lea
test
xchg
inc
jns
mov
iret
sub
shl
out
(bad)
stos
xchg
sbb
dec
pop
iret
nop
imul
mov
dec
push
mov
cld
adc
pusha
add
mov
rol
hlt
xor
sub
aam
je
stos
jae
outs
xchg
adc
pop
mov
je
sbb
repnz
aam
inc
mov
and
das
jecxz
pop
mov
jle
mov
push
sub
popa
mov
push
push
adc
xor
enter
adc
jge
ins
ret
and
adc
push
fwait
jo
jmp
inc
and
call
lods
mov
pop
and
movs
mov
push
add
sbb
mov
(bad)
ror
adc
rcr
sbb
leave
jmp
sub
outs
inc
sub
cmp
jne
mov
sub
call
movs
sbb
mov
xor
inc
cdq
(bad)
call
outs
bound
sbb
mov
cmp
push
es
pop
retf
shr
add
xchg
mov
or
ja
xchg
jae
in
(bad)
inc
(bad)
sbb
mov
in
dec
jae
imul
ins
inc
fwait
mov
sub
pop
xor
jp
fnsave
mov
imul
test
scas
fwait
inc
xchg
cmps
cmp
jbe
std
mov
sub
pop
inc
xor
jnp
test
sti
ffreep
retf
dec
and
and
ins
or
or
in
pushf
adc
std
push
scas
mov
popa
scas
fwait
daa
mov
xchg
in
lahf
sbb
jg
dec
push
test
inc
push
mov
dec
adc
sub
fsub
push
rsm
in
das
imul
cmp
mov
loop
jmp
fcmovu
retf
dec
jl
imul
lock
sbb
sub
fwait
popa
into
jmp
fwait
stc
push
mov
and
lea
retf
arpl
cmps
mov
jle
dec
pop
lods
icebp
xor
cmp
adc
je
xor
xlat
pop
and
adc
jle
pop
hlt
sbb
fiadd
pusha
stos
adc
mov
and
es
loope
dec
jmp
mov
push
mov
pusha
xor
xor
nop
shl
fsub
xchg
mov
sahf
mov
inc
cmps
cwde
dec
pusha
inc
fs
(bad)
sahf
xor
or
retf
pop
lock
loopne
jnp
mov
push
gs
ficomp
(bad)
xchg
cmp
jae
jmp
rcl
mov
nop
movs
mov
cwde
fmul
and
xchg
jmp
jmp
add
jle
in
sub
or
fnstsw
pop
and
inc
mov
xchg
imul
test
js
scas
cmp
and
stos
sbb
xor
retf
imul
test
sbb
in
scas
std
int
or
inc
jmp
jle
sub
test
sbb
jmp
inc
add
inc
(bad)
retf
iret
pop
xor
dec
icebp
or
push
int
pop
(bad)
scas
lock
jo
pusha
mov
pusha
outs
retf
sahf
pop
jecxz
sbb
mov
jg
or
(bad)
fild
dec
mov
pop
(bad)
sahf
add
sub
add
jnp
cs
repnz
and
scas
add
mov
adc
lds
popf
out
jge
mov
and
inc
jno
add
test
es
outs
shl
push
jbe
sub
dec
xor
lock
fdivr
repz
dec
pop
mov
lods
ds
aas
ficomp
repz
neg
(bad)
fbstp
outs
loop
cmps
and
sub
mov
mov
mov
hlt
test
sti
inc
call
adc
sbb
loopne
cli
aas
inc
inc
mov
and
and
inc
pusha
mov
mov
sub
pop
mov
into
lds
aam
dec
ds
push
call
jbe
jnp
sbb
xor
jp
(bad)
or
dec
and
out
push
(bad)
jo
mov
iret
mov
jne
loop
psraw
jae
es
sbb
out
std
xchg
loope
pop
cli
inc
pusha
inc
sar
xor
cmp
push
adc
sbb
mov
inc
sub
pop
cmp
xlat
fwait
xor
mov
loopne
jno
(bad)
xchg
rcl
or
and
mov
sub
inc
xor
jne
inc
popf
cmp
jg
xor
push
jo
icebp
mov
dec
aam
inc
ins
call
and
test
dec
loopne
jo
rcr
pop
xor
inc
scas
mov
jno
add
push
and
mov
dec
mov
nop
rcr
cmp
test
mov
xor
adc
popa
je
mov
cli
jge
test
sbb
cmp
lea
push
aad
mov
mov
cld
mov
int3
or
das
mov
sbb
xor
outs
test
push
sub
pop
cmps
leave
mul
scas
add
lea
inc
sahf
jne
mov
pusha
sub
push
jmp
mov
repz
push
lea
rcr
shl
cs
cs
(bad)
push
push
pusha
outs
imul
mov
aad
xchg
push
fwait
sbb
and
jo
in
jne
(bad)
movs
mov
scas
mov
push
mov
mov
and
pop
dec
out
lods
jnp
into
mov
cmp
sbb
sbb
loopne
outs
ret
pop
dec
push
cmp
sub
sahf
xor
arpl
(bad)
fild
jmp
push
fsubr
or
push
push
addr16
xor
popa
pop
stos
(bad)
fsubr
add
loop
push
sbb
popf
cmp
in
pop
and
out
push
call
mov
sbb
inc
add
(bad)
adc
sbb
and
push
scas
cmp
jnp
in
js
fdivp
imul
xor
and
inc
aam
les
mov
sbb
ins
gs
test
mov
sbb
mov
lods
hlt
in
sub
scas
dec
xlat
scas
or
in
ror
cli
push
mov
push
shl
cmc
pop
stos
lea
sbb
lods
jmp
pusha
aaa
mov
adc
jo
in
aas
aad
or
mov
push
(bad)
int
mov
xor
scas
cmp
rol
push
ror
sbb
push
push
mov
retf
xchg
ja
fnsave
dec
shl
xchg
shl
adc
push
lea
cmp
xchg
inc
in
inc
jbe
inc
aam
test
les
jecxz
mov
int
test
or
fimul
mov
adc
pop
pop
dec
sub
sub
mov
test
fst
jmp
jo
and
mov
dec
mov
adc
jno
mov
ins
inc
push
js
pusha
in
dec
and
jge
sub
cmps
lock
dec
sbb
or
test
cmp
in
jl
leave
inc
and
sub
pop
sbb
mov
xchg
cs
push
mov
test
push
gs
jno
lahf
ja
scas
pop
outs
iret
add
xor
mov
jmp
sbb
(bad)
sti
es
pop
xchg
sub
fstp
dec
push
neg
xor
push
pop
mov
inc
stos
adc
push
jmp
xchg
aad
dec
lods
das
adc
sub
out
inc
cs
mov
das
dec
repz
dec
loopne
and
inc
xchg
popa
dec
into
push
push
push
lods
fisub
dec
repz
aas
jl
sbb
gs
repz
mov
add
lahf
loope
rcr
jg
lock
lods
mov
repnz
or
mov
fidiv
scas
adc
adc
jmp
adc
sti
add
std
into
xor
push
and
leave
adc
pushf
repz
push
pop
mov
and
loope
cmp
inc
xchg
mov
retf
inc
jg
movntps
jl
xchg
jbe
dec
mov
(bad)
mov
je
movs
std
sbb
mov
and
pushf
ds
imul
pop
inc
pop
std
dec
jne
out
pop
push
jbe
(bad)
fbld
scas
test
clc
sbb
ins
jmp
retf
fidiv
lahf
adc
test
add
sar
sub
mov
jg
loopne
in
sub
bound
inc
scas
lea
jne
mov
pop
sbb
out
outs
nop
pop
and
push
div
adc
pop
jo
xchg
inc
out
lock
jbe
ret
stos
rcr
(bad)
jns
cmp
nop
sub
and
(bad)
adc
jo
in
xor
cmp
dec
sub
lods
mov
fsubrp
or
imul
mov
clc
inc
scas
add
rol
(bad)
xchg
movs
jae
jmp
test
mov
jmp
shr
adc
cmp
pop
call
out
int3
test
fstp
aaa
jo
out
fsubr
sahf
and
sbb
std
push
mov
dec
jne
movs
fwait
add
es
daa
add
inc
xchg
cmp
les
inc
fidivr
sbb
jmp
into
adc
out
or
enter
arpl
cwde
or
pop
sbb
sti
fcmovnb
inc
ficomp
mov
fmul
dec
pop
mov
in
ret
mov
dec
pusha
jp
stos
leave
xor
xor
mov
test
adc
adc
std
or
or
cmps
fldenv
mov
inc
adc
fwait
inc
mov
sar
sbb
in
or
icebp
call
push
je
mov
outs
mov
iret
cdq
aad
mov
push
out
js
inc
pop
scas
shr
pop
cmc
push
in
pop
jnp
or
nop
push
or
jp
jne
scas
inc
fdivp
inc
pusha
loopne
and
jle
loopne
les
jns
imul
dec
icebp
cld
push
ins
retf
sar
mov
fdiv
and
fcom
xchg
rcl
(bad)
pop
dec
push
movs
add
into
mov
fwait
mov
sub
lock
add
int
dec
add
sti
cmc
pusha
retf
xchg
jmp
shl
into
test
or
mov
push
push
push
(bad)
scas
fwait
sbb
jo
and
xor
popa
or
popa
dec
aad
mov
mov
inc
jae
inc
push
and
popa
std
xor
and
jecxz
mov
jecxz
aad
or
push
pop
sub
mov
xchg
xor
or
loop
icebp
test
fimul
mov
jle
scas
test
pop
xchg
call
dec
hlt
mov
dec
enter
and
mov
mov
add
shl
cmp
mov
pop
pop
or
gs
call
add
dec
stos
xchg
movs
xor
mov
dec
loopne
sbb
or
adc
xor
cmps
pop
cmp
sub
pop
movs
(bad)
jp
jge
ds
xchg
in
mov
mov
jmp
shr
ins
mov
call
sub
and
xor
mov
outs
xor
lock
movs
sbb
add
sub
out
add
jo
xchg
aam
pop
in
ret
imul
sbb
push
in
adc
es
jle
and
and
test
test
movs
push
inc
xchg
push
in
(bad)
pusha
mov
pop
lods
xor
xor
outs
pop
lods
jnp
sub
jne
ror
in
push
mov
jecxz
cld
ins
xor
shl
nop
(bad)
es
push
cs
cmc
pop
lock
jo
gs
in
jno
dec
outs
test
nop
rol
iret
pop
int
pop
adc
adc
cli
movs
pusha
inc
inc
scas
inc
pop
iret
mov
call
and
pop
push
dec
pop
test
(bad)
scas
mov
gs
and
xor
mov
cmps
push
nop
rcl
push
icebp
int
sti
push
mov
rcr
and
rol
enter
aas
or
mov
xchg
cs
push
pop
lods
mov
inc
sub
xor
les
popa
mov
das
imul
lock
das
aam
inc
xor
fs
(bad)
cdq
pusha
call
push
add
mov
xchg
xchg
sbb
movs
std
nop
js
pop
mov
and
mov
daa
xor
sahf
jno
xchg
sar
ret
ss
or
int
(bad)
push
outs
inc
mov
cmps
pusha
jge
test
cmp
dec
loopne
nop
xchg
lds
int
cmps
push
out
mov
mov
xor
rcr
xor
push
arpl
or
inc
shl
and
(bad)
xor
test
xor
xor
mov
fidiv
scas
ret
jle
mov
into
rcl
add
and
adc
(bad)
xchg
nop
jo
pusha
not
add
xlat
and
outs
xor
cwde
dec
and
leave
or
in
push
sub
add
rep
jns
ror
shl
ja
push
in
xor
sub
pusha
(bad)
adc
ret
daa
shr
pop
adc
mov
push
int
push
mov
mov
sbb
dec
scas
xor
pop
mov
call
movs
push
nop
in
gs
mov
push
fidiv
inc
add
ss
rcr
xor
cs
clc
jmp
xchg
add
out
scas
cmp
adc
dec
jle
mov
not
inc
sbb
push
mov
adc
jno
dec
inc
add
and
mov
fnstsw
loopne
nop
rol
fwait
mov
adc
dec
mov
ficomp
in
dec
cmovle
(bad)
out
jge
push
pop
mov
das
js
sub
retf
adc
add
sbb
mov
data16
sub
xor
add
(bad)
mov
cmc
xchg
add
mov
dec
inc
nop
(bad)
in
mov
jb
xchg
and
outs
dec
fisub
movs
or
test
fidiv
jmp
xlat
icebp
add
add
movs
shr
xor
xchg
jge
mov
push
gs
test
clc
out
inc
leave
imul
jnp
jle
lahf
cmc
aas
pop
rol
je
lgs
nop
stos
leave
push
xor
jmp
pop
je
fs
dec
sbb
mov
jo
and
cmp
out
adc
push
xor
not
mul
dec
sbb
xchg
dec
cmp
aam
inc
mov
jno
add
mov
pop
outs
movs
popf
call
cmps
in
dec
jae
fwait
inc
std
dec
rcl
into
lahf
mov
add
and
ds
ss
xchg
cmps
or
mov
repnz
add
pop
jmp
cmps
movs
dec
lods
mov
cs
push
rcr
rcl
inc
jg
into
jo
inc
scas
neg
lds
mov
ret
in
mov
jp
push
add
xchg
jl
push
shl
jl
dec
icebp
mov
int3
daa
xor
mov
jmp
shr
jnp
adc
loope
pop
cmp
popf
lahf
xor
mov
je
and
mov
jg
jbe
pop
test
mov
in
dec
out
pusha
push
push
inc
fs
xchg
ret
(bad)
test
adc
cmps
stos
inc
sbb
mov
gs
sbb
xchg
xlat
lock
mov
fs
or
repz
xchg
fild
cmp
mov
jae
loop
push
jecxz
sub
jo
lahf
js
scas
call
sbb
xchg
xchg
aam
xchg
pop
mov
mov
test
adc
adc
hlt
fxch
int3
sub
in
es
shr
and
dec
dec
inc
mov
push
jne
mov
xchg
aas
dec
je
loopne
in
(bad)
repnz
sbb
inc
jne
xor
pop
into
jne
and
mov
jmp
push
mov
sti
loopne
xor
mov
push
shr
push
mov
pop
adc
pusha
jae
sti
nop
and
fist
pop
arpl
ror
(bad)
nop
(bad)
sbb
push
out
test
out
mov
jno
inc
add
mov
cmp
stos
pop
or
xchg
push
push
lea
mov
dec
lahf
ins
dec
mov
jae
outs
test
mov
jae
out
test
ficomp
jno
jge
and
and
aad
ds
jg
sar
cmpxchg
in
adc
nop
pusha
aam
scas
push
mov
jecxz
shl
dec
or
clc
cs
pop
aaa
out
push
ficomp
push
fiadd
push
shl
mov
rcr
cmpxchg
mov
mov
cmp
mov
ins
das
cmps
out
loope
or
push
dec
adc
jo
scas
jle
push
leave
ror
rcr
push
movs
mov
cs
xor
ja
mov
jne
jo
arpl
shl
out
xchg
loope
rcr
push
add
fdivp
add
and
mul
ret
sbb
push
jne
daa
or
sbb
inc
mov
pop
mov
mov
cmps
out
loope
mov
xchg
imul
test
jo
and
adc
sahf
pop
mov
pop
sbb
push
nop
cs
lods
mov
fidiv
mov
mov
call
push
rol
leave
ds
and
pop
dec
add
mov
add
push
or
dec
jle
outs
sub
push
dec
or
nop
dec
or
push
ficom
into
nop
mov
fsubr
shl
cs
ror
mov
jo
pusha
push
adc
cmp
mov
loopne
sbb
inc
ds
cmp
mov
ss
into
add
ficom
or
push
lock
movs
popf
nop
(bad)
test
(bad)
mov
out
ficom
push
ja
sub
mov
jp
cs
dec
push
pop
add
jo
inc
mov
fxch
cmp
sar
loopne
aam
xor
push
ret
out
test
cdq
adc
add
rol
nop
ds
and
pop
sub
aaa
xor
pusha
push
aaa
scas
popa
sahf
xor
sub
cs
(bad)
imul
mov
cdq
mov
fwait
mov
out
popf
push
mov
push
xchg
push
in
dec
hlt
add
js
test
push
sub
fldenv
inc
jne
add
add
shl
push
adc
or
xchg
lods
mov
in
push
mov
adc
outs
iret
jb
adc
lock
inc
adc
fld
dec
std
or
fbstp
jne
gs
cmp
popf
jg
dec
mov
ins
ret
inc
out
mov
stos
retf
iret
xor
retfw
add
popf
cmp
mov
push
push
jecxz
(bad)
(bad)
mov
cmc
or
add
jno
xchg
not
pop
out
sbb
rcl
mov
adc
cmp
inc
popa
data16
das
imul
lock
in
adc
fmul
mov
scas
jmp
mov
jo
push
inc
retf
jecxz
cmp
or
nop
mov
mov
fidiv
jne
push
inc
push
sahf
call
xchg
fwait
mov
call
cmp
lock
rcl
xchg
xchg
and
in
leave
ror
xor
lock
out
jl
push
hlt
out
dec
xor
push
adc
adc
shl
shr
lock
ds
jp
xchg
movs
or
mov
mov
sti
cmp
gs
jnp
in
into
mov
adc
(bad)
pusha
sti
shr
xor
pop
xor
jp
imul
adc
xor
stos
adc
pop
jbe
dec
and
xchg
in
je
pop
icebp
out
nop
imul
pop
pop
jne
jmp
fwait
jmp
dec
outs
test
nop
rol
iret
pop
int
mov
pop
adc
test
and
jbe
pop
and
or
mov
shr
jg
mov
mov
(bad)
xor
pusha
sti
shl
sahf
xor
and
push
rcr
xor
push
arpl
or
inc
into
jo
and
(bad)
xor
test
xor
xor
mov
fiadd
xor
js
ret
inc
imul
aas
addr16
cs
push
adc
(bad)
xchg
push
sbb
jo
pusha
not
add
xlat
and
outs
xor
cwde
dec
and
leave
add
sub
fdivr
rep
jns
rcl
mov
es
jno
sbb
push
xor
sub
pusha
adc
ret
outs
mov
or
push
mov
mov
sbb
pop
scas
xor
pop
mov
popf
mov
sbb
xchg
movs
push
nop
in
arpl
push
lock
shr
cmp
jne
and
test
xor
cs
sti
jmp
xchg
add
out
scas
les
adc
loopne
aad
sbb
push
mov
fwait
sbb
mov
mov
shr
sar
imul
jae
stc
(bad)
push
scas
inc
mov
cmps
pusha
jge
neg
sahf
data16
or
pop
add
ror
sbb
(bad)
scas
imul
cmps
out
inc
out
mov
rcr
arpl
nop
imul
and
es
jmp
repz
in
cwde
lock
mov
xchg
mov
xchg
mov
test
jg
fucomi
push
fwait
scas
mov
cmc
das
xchg
aad
cvtdq2ps
cmp
jmp
jmp
add
jge
xor
cmp
test
mov
dec
pop
adc
ror
into
mov
mov
out
push
(bad)
adc
mov
enter
loopne
pop
ins
xchg
mov
in
push
call
lahf
aam
jp
fcmove
fcomp
cmp
int
lock
in
push
or
fidiv
adc
adc
int
mov
jle
mov
loopne
nop
imul
cmp
push
repz
out
push
mov
popa
xor
mov
in
sbb
push
in
outs
lods
mov
(bad)
pop
sbb
iret
jmp
in
inc
adc
pop
(bad)
iret
pop
xor
or
mov
push
lods
add
dec
push
add
jecxz
push
jmp
xchg
(bad)
jp
jp
cmp
jae
push
fst
icebp
mov
add
xor
sti
sbb
jae
enter
in
sbb
test
dec
pop
movs
lds
push
xchg
xor
push
add
inc
mov
pop
aam
add
jnp
jecxz
push
movs
mov
mov
push
dec
jmp
xchg
rcr
jne
jle
lock
enter
in
cld
pushf
and
jns
and
push
and
mov
pop
cmp
xor
in
mov
push
out
inc
idiv
leave
popa
jae
out
add
cmp
fild
ror
and
xor
outs
inc
pop
pop
lds
cmc
fs
sahf
xor
jae
pop
iret
lock
scas
and
hlt
loope
push
(bad)
scas
stos
int
xor
movs
js
add
adc
sub
rcl
in
loopne
nop
shr
push
loopne
pop
aaa
out
push
ficomp
inc
popa
data16
das
xlat
rcr
or
mov
push
retf
push
inc
mov
sahf
popa
(bad)
adc
sahf
mov
xchg
xchg
sbb
push
jne
daa
or
sbb
dec
mov
xor
xchg
test
dec
dec
sbb
mov
outs
jns
adc
in
inc
out
adc
scas
and
add
mov
jle
pop
aas
aad
xchg
push
lock
iret
mov
das
into
or
pop
(bad)
fs
push
shl
mov
aad
jg
cmp
xchg
inc
out
adc
cli
adc
lahf
push
mov
(bad)
shl
cmp
not
mov
jno
pusha
inc
inc
sahf
iret
fwait
stos
and
add
pop
movs
xchg
mov
jmp
setnp
jne
dec
scas
push
xor
std
daa
std
(bad)
test
es
nop
outs
(bad)
cdq
cmc
push
pop
jmp
mov
mov
into
xor
pop
frstor
mov
gs
mov
out
psubusb
(bad)
(bad)
push
mov
fwait
dec
add
mov
cmp
in
pop
add
xor
push
mov
dec
out
test
mov
test
jmp
lock
(bad)
ds
and
pop
mov
aaa
xor
pusha
push
and
leave
cmp
sub
data16
nop
mov
(bad)
js
in
ficomp
sahf
add
xchg
int
mov
dec
(bad)
fsubr
imul
leave
inc
jle
daa
and
adc
sahf
pop
mov
jle
sub
sbb
sbb
lods
mov
fdivp
into
mov
mov
call
jp
xchg
mov
enter
add
mov
jbe
push
push
or
add
sbb
or
nop
or
pop
push
push
outs
ficom
mov
fsub
shl
mov
mov
jo
pusha
outs
adc
cmp
rep
sbb
inc
ds
cmp
mov
ss
into
inc
mov
xchg
mov
push
ror
lock
movs
popf
nop
(bad)
scas
push
xchg
push
and
mov
loopne
lahf
adc
ja
sub
loopne
clc
dec
or
cs
clc
and
retf
adc
outs
dec
lahf
jge
sub
sar
dec
xchg
test
push
int
jl
cmp
mov
push
arpl
ss
fistp
adc
fisub
mov
stc
or
outs
imul
loopne
pop
xchg
pusha
mov
loopne
in
jecxz
outs
jne
fbstp
shl
add
sbb
(bad)
int
or
test
(bad)
adc
pusha
loopne
mov
hlt
jle
call
sbb
dec
sub
sahf
out
push
xchg
(bad)
fbstp
(bad)
adc
pushf
lock
imul
mov
cwde
rol
mul
push
int
std
(bad)
push
jne
push
into
xchg
cmps
aaa
mov
aam
in
mov
jo
xchg
mov
cmps
pop
inc
scas
inc
jmp
jno
cmp
mov
(bad)
call
call
jmp
mov
inc
retf
xor
int3
adc
(bad)
pop
aas
cwde
cwde
pop
xchg
adc
mov
fmul
retf
std
inc
rol
mov
iret
fwait
lods
div
aad
js
pop
sub
push
mov
fdivrp
xor
xchg
mov
and
loopne
sbb
cmc
ds
loope
pop
lds
xor
inc
add
and
xchg
iret
aas
mov
sbb
sbb
mov
std
fwait
lahf
push
and
jno
mov
mov
rcr
xchg
fs
push
mov
adc
and
xor
adc
mov
sub
rol
jnp
push
inc
sbb
cli
mov
loopne
enter
aas
dec
bswap
loopne
sahf
movs
jo
mov
test
mov
repz
enter
pop
inc
rcl
or
loope
dec
sub
shl
add
out
and
and
shr
cwde
mov
test
sbb
sbb
je
mov
xor
inc
xlat
jmp
mov
lds
outs
outs
or
dec
icebp
and
nop
adc
sahf
(bad)
add
inc
sahf
mov
jo
shr
pop
jge
ins
ret
jg
mov
and
jo
jmp
fwait
scas
mov
imul
(bad)
adc
ds
and
mov
add
xor
jno
mov
movs
jl
mov
mov
push
cmp
sbb
push
mov
push
out
imul
mov
dec
jge
pop
cmp
jle
loop
mov
cmc
mov
mov
xor
sbb
rol
stc
inc
stos
mov
mov
xor
lods
mov
lods
pop
sbb
push
ds
hlt
icebp
inc
jae
out
inc
push
mov
xor
fs
shl
gs
lock
adc
int
xor
adc
(bad)
dec
pusha
mov
mov
jmp
outs
lods
inc
mov
leave
mov
xor
adc
imul
test
ss
jge
push
movs
xchg
mov
clc
outs
push
cli
dec
scas
inc
jb
add
push
popf
mov
outs
in
movs
rcl
xor
add
inc
popa
sahf
xor
(bad)
rcr
outs
rcl
lds
ss
aas
jmp
mov
push
cli
or
or
xor
adc
pop
shl
cmp
rcr
push
(bad)
jb
cmp
adc
xchg
loope
icebp
mov
scas
xor
dec
dec
mov
fs
sbb
ins
mov
pop
pop
inc
mov
add
push
retf
in
repnz
sub
add
push
xchg
sub
cld
push
adc
jo
jmp
add
lahf
jg
xchg
outs
rcl
xchg
sbb
je
cmp
out
inc
add
adc
push
xor
xor
pop
sbb
add
adc
mov
inc
sub
push
cmps
repz
xchg
sahf
xchg
fidivr
(bad)
dec
mov
mov
and
stos
mov
jle
outs
xchg
dec
arpl
(bad)
ret
repnz
mov
and
and
loopne
add
or
mov
movups
ds
nop
push
dec
repnz
dec
lods
adc
fidiv
and
adc
rol
inc
shl
loope
xor
xor
and
inc
or
pop
xor
test
mov
mov
nop
adc
gs
and
mov
sahf
mov
ds
in
loopne
sbb
pop
pop
neg
inc
fdivrp
fucomip
aam
mov
xor
test
lds
xchg
pop
lock
pop
arpl
adc
test
imul
mov
inc
(bad)
pop
mov
and
mov
inc
pop
push
cwde
sar
jae
test
rol
inc
ficomp
mov
jbe
dec
jbe
sahf
test
pop
fld
sub
outs
push
mov
pop
movs
not
mov
inc
or
xor
mov
stos
imul
xchg
loopne
jns
movs
ror
inc
sub
jo
dec
(bad)
shl
ret
add
mov
jne
and
in
inc
fbld
inc
jne
mov
xor
call
cmp
stos
mov
add
mov
push
pop
xor
(bad)
mov
inc
add
pop
jno
jl
test
sbb
scas
in
xchg
mov
sub
mov
dec
and
add
daa
repz
xchg
cmc
mov
dec
push
(bad)
(bad)
mov
into
pusha
dec
xchg
popf
pop
(bad)
xor
add
aas
xlat
lock
jp
jle
sbb
scas
out
inc
lea
xor
fadd
cmp
cmps
imul
jae
dec
mov
mov
cmp
into
out
mov
mov
push
mov
ins
out
cmp
mov
mov
cmp
je
jae
jmp
xor
jge
movs
xor
hlt
xchg
cmp
or
aaa
inc
stc
dec
jne
dec
and
movs
ins
cdq
push
aaa
sbb
test
push
sub
fcmovnbe
retf
sbb
clc
neg
adc
ret
adc
(bad)
mov
mov
mov
inc
retf
push
repz
inc
mov
push
movs
loopne
cld
mov
(bad)
leave
es
dec
mov
dec
push
inc
scas
mov
je
xor
jnp
mov
adc
loop
mov
inc
stos
pop
mov
sbb
sub
outs
aas
pop
dec
pop
or
sub
push
xchg
inc
int
stc
into
mov
iret
fwait
sbb
cmp
js
repnz
loopne
adc
int
mov
mov
pop
imul
xchg
inc
and
inc
scas
pop
mov
fs
jne
push
enter
xchg
(bad)
mov
inc
jp
inc
(bad)
xor
add
movs
dec
in
les
push
cmc
mov
sbb
dec
es
sbb
jno
cmp
sub
les
jbe
xchg
cmp
sub
mov
mov
mov
mov
sub
aad
or
and
push
and
ins
add
adc
and
xchg
movs
xlat
rol
lds
and
push
call
dec
sahf
(bad)
and
outs
dec
mov
movs
fistp
movs
(bad)
and
add
jno
lahf
mov
mov
ins
das
call
jns
add
dec
sub
mov
fbld
sbb
lock
lds
mov
pushf
sub
pop
add
retf
xor
mov
xor
fisttp
jg
dec
xor
jp
jg
xchg
fimul
pop
test
jne
or
or
fisub
xchg
rol
ret
or
iret
xor
mov
iret
fadd
jle
cmp
sbb
mov
ds
rcl
mov
ds
and
jmp
dec
fistp
ss
cs
pop
movs
sub
lock
pop
pop
mov
jo
xchg
mov
imul
in
clc
sar
shl
mov
jo
xor
adc
dec
fmul
(bad)
xchg
push
aas
popf
cs
loopne
ins
xor
icebp
arpl
or
inc
inc
jo
and
(bad)
xor
test
xor
xor
mov
fiadd
into
xor
js
ret
inc
imul
aas
addr16
and
adc
add
jmp
rcl
and
outs
xor
cwde
mov
fmulp
adc
xchg
in
scas
sub
pop
mov
rep
jns
rol
mov
es
std
jno
sbb
push
xor
sub
pusha
mov
xchg
inc
test
ret
outs
sub
or
push
mov
mov
sbb
shr
popf
mov
mov
outs
in
arpl
push
lods
(bad)
shr
cmp
jne
fistp
xor
jnp
rol
jmp
xchg
add
out
scas
cmp
adc
loopne
aad
jg
push
push
mov
fwait
sbb
mov
and
xchg
gs
das
lods
es
lock
inc
ds
imul
jae
stc
(bad)
push
cs
mov
cmps
lahf
jge
test
cmp
add
sbb
lds
pop
add
push
add
sbb
xor
loope
adc
int
div
jmp
xor
dec
scas
call
jle
jmp
shl
mov
aad
fstp
inc
add
push
lods
xor
jo
outs
jb
sub
pop
cmp
nop
hlt
push
jae
hlt
enter
call
popa
les
stos
mov
or
dec
lds
mov
sti
(bad)
imul
jecxz
xor
loope
movs
mov
push
adc
jns
mul
out
add
aas
dec
sub
ds
xchg
push
inc
stos
or
inc
arpl
neg
(bad)
cmc
fisttp
lahf
repz
sub
sub
sub
jae
sbb
adc
lods
lock
ret
ins
ja
jecxz
retf
(bad)
cmp
mov
xor
ins
add
xchg
mov
add
xchg
mov
inc
ja
sbb
std
or
and
(bad)
fsub
nop
sbb
dec
jl
sbb
popa
jne
inc
test
mov
mov
outs
mov
inc
test
mov
jmp
push
movs
mov
mov
in
mov
(bad)
fwait
popf
adc
xor
dec
push
sti
fisub
mov
xchg
xchg
sbb
push
mov
push
int
inc
inc
popa
and
retf
adc
imul
enter
in
inc
or
inc
stos
mov
inc
jae
mov
pop
push
pop
xor
cmp
in
cli
push
mov
stos
xor
and
pop
xor
stos
in
pop
sub
sbb
or
jp
push
xchg
movs
pop
movs
(bad)
fidiv
retf
adc
rcr
test
aam
or
sahf
out
adc
pop
jecxz
pop
stos
mov
iret
mov
cmp
aas
push
mov
xchg
inc
je
push
mov
mov
movs
lahf
mov
je
fs
jmp
xchg
push
xchg
retf
icebp
mov
sbb
and
add
shl
dec
sbb
lds
mov
dec
cmc
mov
loope
jle
jnp
mov
xor
out
(bad)
dec
mov
jnp
mov
adc
sub
add
cmp
mov
sub
cmp
in
cmc
mov
ds
lahf
inc
push
add
out
(bad)
fild
jae
call
push
in
push
cmps
imul
call
jecxz
lea
icebp
imul
adc
mov
mov
je
adc
ds
adc
in
push
xor
call
fs
iret
jb
scas
call
rol
bnd
stos
push
call
adc
dec
and
lock
faddp
sbb
dec
pushw
push
adc
add
jno
adc
out
jle
jnp
mov
aad
or
test
pusha
repz
push
mov
xor
scas
shr
mov
aam
and
push
dec
lods
mov
inc
sub
mov
test
loopne
dec
mov
dec
mov
pop
cs
pop
(bad)
cmps
or
dec
call
jno
jle
outs
add
inc
pop
xor
das
or
add
lds
and
pusha
in
add
jle
mov
rcl
mov
sbb
rcl
mov
mov
pop
xor
mov
and
sub
fnstenv
mov
pop
ror
mov
mov
popf
lds
iret
jge
inc
icebp
iret
inc
fistp
jnp
(bad)
into
retf
out
imul
leave
pusha
xlat
(bad)
fsub
sub
sbb
dec
inc
loop
dec
(bad)
je
jmp
pop
out
movs
lds
fisttp
sub
sub
sbb
mov
pop
icebp
aad
adc
sbb
push
pop
and
jno
or
or
test
mov
popa
xor
iret
add
pop
fwait
and
test
sar
jge
ds
xor
call
mov
cli
push
jmp
popa
mov
int3
and
xchg
mov
dec
cmps
ins
js
jmp
push
push
fimul
pop
inc
enter
cmp
clc
pop
test
inc
les
pop
push
neg
gs
pop
cmp
or
fadd
jle
cdq
aad
out
icebp
ds
js
cmc
pop
lock
jo
lahf
add
outs
adc
rcr
lock
push
pop
push
enter
or
pop
out
add
sub
cmps
loopne
outs
nop
dec
fisub
inc
jo
pusha
sti
inc
inc
mov
jle
xchg
jle
xor
xchg
xchg
push
pop
push
pop
(bad)
adc
xchg
pusha
push
adc
jmp
dec
sbb
mov
xlat
dec
hlt
jo
(bad)
mov
inc
jne
pop
mov
sub
stos
pop
or
xchg
push
pop
dec
sub
cs
or
xor
dec
sub
lock
movs
popf
nop
(bad)
mov
add
hlt
pusha
push
adc
push
sub
pop
pop
sub
push
out
pop
add
jo
pop
mov
fxch
cmp
rol
ret
aam
xor
push
ds
in
test
xchg
xor
push
addr16
xchg
pop
ins
dec
mov
push
pop
mov
aaa
xor
pusha
push
sub
leave
cmp
sub
shl
add
les
int3
out
in
and
xchg
add
xor
shl
shr
adc
dec
les
inc
add
inc
cmp
cmp
arpl
je
movs
nop
inc
jg
hlt
lods
mov
(bad)
xor
movs
xor
xchg
xchg
or
hlt
loope
dec
add
mov
xor
jbe
mov
sbb
or
mov
scas
dec
out
pop
push
push
js
call
jmp
shl
aas
mov
in
loopne
test
icebp
dec
mov
jo
pusha
push
out
inc
inc
cmp
inc
outs
aam
sbb
inc
rcr
icebp
pop
jge
adc
jo
mov
inc
scas
cmp
cmp
jle
stos
mov
xor
xor
jo
jo
adc
push
adc
mov
jmp
cmc
xor
xchg
mov
stos
and
cli
cmp
inc
fidivr
arpl
je
xor
mov
dec
loopne
cmc
sar
push
mov
iret
add
mov
ja
(bad)
(bad)
sbb
retf
nop
pop
xor
icebp
and
pop
or
jno
pop
adc
daa
(bad)
aas
pop
xor
pusha
nop
(bad)
ror
mov
cmps
push
stos
retf
xchg
xchg
xor
and
popa
out
stos
dec
mov
mov
rcl
dec
aaa
pusha
mov
mov
cli
fdivr
gs
xor
sub
(bad)
fst
adc
ret
sar
inc
jno
bound
sahf
dec
(bad)
jae
sar
fisttp
gs
outs
clc
int
cmc
push
mov
into
(bad)
mov
cli
jne
enter
call
inc
test
loope
sbb
jae
or
rcl
push
mov
dec
push
add
fld
faddp
inc
enter
push
jg
cmp
scas
add
xor
cwde
jp
outs
xchg
into
hlt
jne
ins
pop
out
cmc
fidiv
stos
mov
and
push
xor
and
ja
shl
clc
je
and
inc
push
xor
scas
or
mov
sub
arpl
push
mov
cmps
jmp
out
mov
inc
fld
mov
inc
pop
push
stos
sbb
sbb
jl
sar
cmpxchg
in
adc
nop
pusha
aam
scas
mov
jg
xchg
shl
cli
jg
hlt
push
in
stos
inc
ss
out
fwait
mov
and
cmc
ror
or
pop
adc
adc
fidivr
pusha
sti
jp
add
mov
fadd
pop
xchg
pop
push
loopne
nop
jns
loope
sbb
inc
xchg
jo
ss
push
scas
dec
lds
mov
(bad)
pop
lea
loopne
bts
gs
aas
mov
jmp
outs
xor
icebp
jb
jle
mov
sub
and
jmp
nop
cmp
sbb
mov
mov
cs
mov
test
push
cdq
jne
fild
xor
xor
dec
mov
leave
adc
enter
add
add
fwait
and
jl
add
loope
mov
emms
xor
pop
and
(bad)
mov
adc
push
jbe
in
test
jnp
inc
dec
pop
loopne
aam
lds
push
test
cwde
cmc
pusha
rcl
push
sub
mov
jp
cs
ss
pop
add
jo
pop
mov
fxch
cmp
shl
add
xlat
aam
xor
push
(bad)
rcl
test
adc
add
iret
addr16
xchg
pop
mov
sar
push
pop
xor
aaa
xor
pusha
push
sub
jl
nop
jno
cmp
sub
xor
les
sub
jo
cdq
mov
mov
xor
fist
int
call
push
dec
ret
push
xchg
inc
xchg
(bad)
daa
and
adc
sahf
dec
mov
pop
sbb
inc
nop
push
jg
hlt
lods
mov
fisub
xor
mov
das
xchg
call
dec
add
mov
sahf
lahf
push
push
or
pop
jle
xchg
sub
push
dec
or
nop
pop
sbb
in
push
push
jle
pop
into
rol
mov
or
xchg
aas
mov
in
loopne
lods
neg
mov
dec
mov
jo
pusha
ds
inc
inc
cmp
cmps
outs
sbb
js
sub
pop
pop
adc
inc
ss
into
movs
call
cmp
jl
xchg
aad
sbb
or
adc
jmp
pop
push
dec
dec
test
outs
xchg
outs
nop
mov
sub
hlt
pop
sub
or
cmp
sub
pop
xchg
popf
cmp
aad
lds
loope
fwait
mov
push
mov
lahf
inc
cld
jb
push
lock
push
mov
xchg
aas
mov
scas
sub
test
pop
(bad)
jmp
mov
jno
push
and
je
lahf
daa
lds
or
outs
pop
sub
mov
add
(bad)
adc
push
stc
inc
cmps
xor
outs
shr
cmp
cwde
or
or
fcomp
jmp
jmp
xor
and
sub
ins
sub
in
out
mov
iret
je
mov
fs
popa
in
sub
xchg
dec
sub
dec
ins
ds
mov
add
inc
xor
push
fist
ret
lds
cmp
(bad)
pop
arpl
push
loopne
mov
mov
dec
mov
sbb
inc
push
mov
dec
push
out
mov
mov
das
inc
neg
aaa
sbb
mov
rol
sub
sahf
out
mov
cli
pop
les
mov
jmp
and
or
repnz
xchg
sbb
pop
(bad)
retf
fbld
push
inc
loope
sbb
cli
in
or
push
(bad)
jb
cmp
sbb
cmp
jg
cmp
out
test
jo
mov
xor
lods
jle
sbb
divps
out
les
cmp
test
gs
pusha
xor
push
and
lods
(bad)
pop
mov
aas
fistp
pop
cmp
push
pop
fiadd
out
mov
mov
(bad)
sbb
mov
(bad)
push
in
stos
xchg
fstp
call
add
pop
retf
cmp
dec
outs
test
inc
enter
jmp
out
(bad)
shl
cmp
idiv
outs
test
lds
call
or
jp
adc
mov
aaa
retf
and
mov
sbb
icebp
aam
in
cmp
je
jmp
adc
clc
or
bound
dec
dec
ds
sub
data16
xor
push
inc
jno
xchg
outs
(bad)
mov
mov
scas
cs
popa
sub
mov
mov
sahf
shr
loopne
inc
cmps
shr
pop
sbb
pop
lds
into
outs
sahf
adc
mov
jle
fcmove
pop
sbb
ins
ds
vunpckhps
icebp
jecxz
out
stos
add
mov
and
loopne
das
sbb
mov
inc
call
pop
mov
dec
add
or
or
xor
stos
xchg
adc
sbb
fst
cmp
jge
test
daa
js
xchg
mov
mov
popf
xchg
pop
mov
jae
push
outs
jle
add
repz
fist
or
lock
hlt
inc
mov
out
mov
push
mov
sti
mov
fsub
mov
pop
mov
xchg
outs
test
mov
int
dec
sbb
cmp
inc
mov
popf
and
adc
lods
ins
lahf
adc
or
shl
cs
dec
or
adc
xor
inc
adc
dec
adc
xlat
cs
fs
test
mov
mov
nop
jle
loop
icebp
stc
add
sub
pop
je
lahf
pop
sbb
(bad)
test
jae
popf
scas
aas
pop
maxps
push
mov
mov
xor
and
(bad)
xor
test
mov
aaa
rol
pusha
out
adc
push
pusha
sti
inc
clc
call
sub
dec
mov
ins
jle
or
icebp
mov
adc
add
and
in
stos
add
popa
ror
cmp
dec
movs
das
clc
ror
jae
imul
cmp
mov
and
push
lock
mov
jo
dec
cmp
xchg
mov
dec
ss
xor
push
retf
lods
cs
inc
mov
ds
icebp
adc
movs
adc
pop
(bad)
call
inc
add
(bad)
fstp
mov
in
imul
jnp
cwde
push
out
mov
fist
fmul
(bad)
shl
enter
mov
inc
jns
test
or
or
add
inc
idiv
xchg
pop
inc
xor
xchg
pop
cmp
in
int
jo
xor
push
scas
enter
gs
mov
icebp
jnp
sub
fwait
sub
xchg
xchg
inc
lahf
sti
adc
pop
repz
call
outs
dec
add
add
jo
pusha
mov
scas
add
outs
mov
fistp
les
adc
push
loope
mov
pop
call
les
(bad)
repz
sbb
push
cld
inc
lods
cld
cwde
fisttp
stos
mov
shl
mov
push
lea
jae
or
jns
pop
dec
lods
inc
jg
hlt
sbb
mov
xor
pusha
mov
pop
pop
and
mov
or
ret
icebp
pop
mov
sti
fnsave
mov
jne
xor
pop
cmpxchg
clc
sub
sub
add
push
jo
mov
out
jbe
popa
and
outs
cmp
pushf
or
dec
sbb
mov
test
xor
dec
fidivr
mov
fdiv
aas
xor
push
sbb
inc
movs
icebp
in
xchg
push
jo
in
sbb
sub
clc
jmp
shl
and
loop
and
aad
lea
dec
xor
(bad)
(bad)
adc
push
sahf
aas
enter
sub
sub
jecxz
(bad)
push
xchg
mov
lock
int3
and
popa
pusha
jp
cs
jp
or
frstor
lock
fucomi
aaa
push
(bad)
hlt
pop
pusha
fwait
stos
cmc
or
adc
imul
cmps
mov
out
push
push
push
clc
push
adc
jnp
pop
mov
mov
sub
sti
or
cli
adc
hlt
sahf
mov
fnstenv
data16
repnz
or
mov
sub
and
shl
push
jb
(bad)
jb
or
mov
lock
movs
enter
adc
fbstp
test
adc
jno
or
jnp
mov
ins
jns
loope
push
(bad)
rcr
lahf
scas
or
adc
mov
mov
mov
in
sbb
mov
pusha
jo
cmps
inc
pop
cmp
loop
loopne
dec
push
push
or
add
add
cmp
xor
mov
sub
aas
or
jno
test
nop
jge
cmp
cmc
icebp
out
and
imul
mov
cmp
loop
ror
push
adc
ss
xchg
push
jecxz
sahf
mov
int3
cmp
push
test
cs
loope
bound
adc
int
imul
cmp
jne
jnp
cmp
mov
ds
fild
movs
mov
xor
mov
outs
out
int
cmc
push
pop
out
mov
sahf
and
fidiv
dec
outs
(bad)
jecxz
pop
dec
or
aam
clc
or
icebp
mov
add
dec
mov
xor
outs
push
push
call
lock
sub
cmp
or
icebp
cmp
clc
call
mov
stos
add
sbb
xchg
mov
dec
fs
xchg
push
add
in
jne
arpl
(bad)
mov
add
fsubr
dec
jge
imul
hlt
icebp
mov
scas
inc
adc
add
add
fdivr
jmp
rol
sbb
adc
inc
push
icebp
push
int
fchs
jle
ins
mov
cmps
pop
mov
sbb
dec
fdiv
mov
adc
shr
scas
push
push
sub
call
push
dec
push
mov
and
and
sti
sbb
push
dec
loopne
test
cvtdq2ps
push
pop
mul
es
fisttp
and
and
mov
ins
cmp
js
sub
movs
das
inc
cwde
sti
retf
pushf
push
or
movs
jmp
xchg
movs
retf
add
mov
cmp
mov
and
sub
cmc
je
shl
mov
add
pop
pop
jnp
call
into
cmp
(bad)
inc
mov
fidivr
adc
xchg
inc
retf
retf
push
cmp
mov
(bad)
dec
movs
ja
jmp
ficomp
gs
in
scas
and
pop
popa
rcr
sahf
(bad)
imul
pop
repz
ret
add
push
je
mov
cmp
mov
fstp
mov
mov
ja
daa
dec
fistp
scas
test
das
outs
aas
sub
mov
add
and
mov
push
jo
ds
inc
mov
cmp
dec
aad
sbb
dec
in
jg
fwait
or
lods
pop
sahf
sub
out
(bad)
call
movs
nop
mov
lock
pop
aas
sub
out
scas
out
xchg
push
jo
popf
push
ins
leave
sahf
pusha
adc
jle
cmp
pop
clc
dec
xchg
cmp
ja
push
hlt
loop
ja
out
mov
jmp
xor
not
in
sub
adc
mov
pusha
xor
scas
dec
fcmove
add
nop
shl
jne
mov
clc
fs
cmc
jnp
cld
mov
sbb
push
fcmovnb
ds
sub
jnp
mov
test
in
inc
sub
ss
or
pop
push
cmp
adc
pop
rcl
mov
rol
cmps
(bad)
popa
inc
mov
dec
sbb
cmc
inc
mov
idiv
scas
cmp
cmp
stc
jmp
jne
and
in
pop
call
(bad)
mov
sub
mov
fbld
lea
rcl
aas
push
push
pop
shr
cmps
call
sti
push
xchg
out
push
iret
add
repz
sub
arpl
mov
sub
jmp
fidiv
pusha
xor
je
stos
and
es
sbb
dec
hlt
push
mov
pop
mov
lock
pop
test
in
or
sub
push
and
ss
pusha
xor
xor
xor
shr
add
pop
pop
mov
sub
pop
punpcklbw
fld
cmp
xor
sbb
loope
nop
movs
les
inc
iret
inc
fwait
mov
aaa
test
and
enter
dec
sbb
fistp
leave
aas
imul
inc
adc
retf
je
ds
adc
adc
xchg
scas
dec
add
inc
jg
jle
pop
scas
adc
inc
fwait
mov
not
call
loopne
sub
lock
loopne
sbb
je
shr
cmp
jne
fistp
add
xor
rol
jmp
xchg
add
out
scas
in
adc
dec
adc
(bad)
loopne
aad
jg
outs
push
mov
fwait
sbb
mov
xchg
xor
pop
pop
lock
push
ds
imul
jae
stc
(bad)
push
ss
mov
cmps
lahf
jge
test
cmp
dec
loopne
nop
xchg
lds
int
cmps
push
out
add
adc
pop
sahf
xor
aas
popf
adc
loopne
xor
xor
icebp
arpl
out
inc
pop
jo
and
(bad)
xor
test
xor
xor
mov
(bad)
into
xor
js
ret
jge
mov
push
rcl
add
cs
add
and
(bad)
call
xlat
and
outs
xor
cwde
mov
fcmovne
cs
xchg
in
scas
sub
adc
push
jmp
popa
repz
outs
shl
ja
push
test
xor
sub
pusha
(bad)
adc
(bad)
daa
shr
pop
adc
mov
push
leave
fstp
mov
mov
aad
fwait
pusha
mov
xchg
rcl
dec
aaa
sub
retf
dec
or
and
mov
outs
jno
mov
lss
sub
test
mov
into
or
sbb
add
shl
rol
cmp
dec
add
cs
outs
iret
into
ins
addr16
xchg
mov
add
retf
stos
mov
imul
cld
rol
movs
and
das
mov
loopne
xchg
xor
dec
or
mov
mov
xchg
mov
imul
imul
pop
outs
mov
cs
mov
mov
lods
test
sbb
jg
adc
jae
add
mov
and
popf
xor
xor
and
xor
sub
inc
adc
data16
stos
(bad)
adc
add
pop
fadd
shl
rcl
imul
jg
out
pop
out
cmp
inc
dec
pop
and
mov
fimul
test
jmp
loop
jne
out
leave
sbb
sar
data16
loopne
sar
adc
aas
inc
xchg
jae
xor
push
adc
daa
add
pop
sbb
mov
lds
push
xchg
es
idiv
out
nop
jo
shr
ss
jle
bound
jno
or
xchg
icebp
pusha
in
inc
sub
stos
mov
jmp
cdq
inc
std
xchg
xor
and
xchg
bound
stc
adc
jmp
add
mov
into
cs
shr
fist
outs
rcr
xor
dec
in
adc
jnp
ss
mov
sub
jmp
and
stos
sub
cs
dec
dec
out
mov
repz
out
inc
pop
push
mov
test
aad
aas
imul
sar
dec
dec
sub
jo
arpl
loopne
int3
cli
and
cmps
jmp
push
clc
inc
ret
lods
nop
pop
cmc
repnz
mov
xchg
retf
sbb
or
jmp
xchg
cwde
mov
cmp
out
retf
popa
mov
iret
add
repz
cmp
bound
xchg
xchg
pop
jae
div
out
mov
xor
jmp
and
xchg
(bad)
xor
movs
mov
ins
sub
inc
mov
push
jo
mov
push
push
inc
pop
mov
imul
cwde
or
loop
pop
inc
sahf
cs
and
inc
ja
mov
jle
in
mov
nop
movs
push
inc
cmc
es
(bad)
pusha
out
out
into
mov
stc
mov
sub
sbb
mov
outs
jns
pop
jae
movs
(bad)
call
mov
xchg
out
inc
ja
data16
adc
xchg
xchg
pop
mov
pop
cmp
pop
in
xchg
imul
lahf
mov
scas
dec
xor
jecxz
aad
clc
mov
test
add
hlt
out
push
fiadd
jge
stos
add
xchg
jnp
ficom
or
outs
js
jmp
adc
sub
loopne
add
adc
xchg
sub
ror
or
adc
push
sti
xchg
and
stos
add
into
xor
stos
das
aas
test
lock
ds
xchg
lds
dec
lea
xchg
outs
rcr
dec
scas
add
lods
push
pop
lock
dec
ds
imul
jae
stc
(bad)
push
jb
mov
cmps
sahf
jge
test
cmp
dec
loopne
nop
xchg
lds
int
cmps
push
out
xor
adc
pop
sahf
xor
and
push
ds
das
pop
loopne
movs
xor
lock
or
inc
call
loopne
xor
test
xor
xor
mov
fimul
sti
js
ret
jg
mov
ret
test
push
lea
addr16
cs
push
adc
add
ss
not
(bad)
pop
rcl
and
outs
xor
cwde
mov
(bad)
cs
xchg
in
scas
sub
xchg
mov
rep
jns
shl
mov
es
std
jae
sbb
push
xor
sub
pusha
outs
adc
les
shr
pop
adc
mov
push
retf
fstp
mov
mov
sbb
loopne
xor
pop
jo
fwait
mov
es
movs
push
outs
in
inc
mov
ins
(bad)
shr
cmp
jne
fidivr
and
jnp
rol
jmp
xchg
add
mov
mov
pop
outs
fcom
inc
lea
pop
repnz
mov
outs
stos
nop
xlat
dec
cli
mov
fisub
fistp
pushf
sub
aas
xlat
movs
dec
test
jnp
push
mov
xor
and
adc
cld
jle
xchg
aas
cdq
test
loopne
pusha
rcl
idiv
adc
fidiv
jmp
(bad)
jmp
leave
pusha
lahf
lock
shr
dec
pop
ja
mov
js
test
inc
pop
mov
sub
std
xor
xor
dec
jae
mov
(bad)
pop
test
in
sbb
cmp
out
sub
push
xor
fild
dec
mov
jg
daa
dec
movs
cmp
into
pusha
out
push
pusha
lea
xchg
test
pop
cld
mov
add
mov
xor
fisttp
xor
neg
rol
push
stos
pusha
loope
icebp
sar
adc
adc
xor
jmp
div
outs
dec
mov
test
ja
pop
stos
xchg
mov
bound
popa
arpl
fist
xor
cmp
mov
mov
cmp
inc
and
retf
sub
jmp
mov
sub
mov
sbb
push
cmp
je
pushf
jmp
jp
lods
lea
ins
(bad)
sub
ret
into
jne
sbb
xchg
scas
out
dec
push
sbb
pusha
inc
out
scas
xor
mov
jge
dec
call
fisttp
stos
inc
shl
pop
mov
mov
inc
mov
dec
pop
sub
inc
push
icebp
and
sti
mov
lahf
test
xchg
jmp
jle
fsub
xchg
stos
cmp
jo
xor
(bad)
push
adc
outs
stos
pop
hlt
and
popa
sbb
mov
mov
cwde
into
lahf
aam
(bad)
adc
rcr
jp
mov
js
pop
jae
sbb
push
add
fdivp
add
and
sub
ret
jle
jle
pop
scas
adc
cmp
stc
shl
fwait
jmp
push
lock
sub
shr
pop
push
mov
mov
xor
mov
pop
fwait
and
push
jge
shl
mov
outs
add
sti
mov
adc
push
cdq
jne
fild
xor
xor
dec
mov
leave
imul
pop
out
add
add
fwait
and
or
xchg
mov
adc
nop
imul
xor
pop
fldenv
outs
xchg
sbb
nop
rcl
jmp
mov
and
in
add
xor
jbe
xchg
outs
aas
dec
jnp
loopne
test
aad
jmp
sbb
fidiv
into
and
por
popa
and
jnp
or
pushf
sbb
mov
sti
fld
fdiv
enter
add
movs
pop
pop
sub
sub
xor
test
mov
jo
jne
clc
call
fist
mov
shr
adc
dec
mov
es
push
(bad)
daa
and
adc
sahf
clc
mov
cmp
pop
loopne
nop
bound
hlt
lods
mov
fdivp
xor
xlat
xor
shr
xchg
push
cs
loope
dec
add
mov
xchg
jbe
mov
jle
xchg
sub
push
dec
or
jmp
loop
out
pop
push
push
push
fidiv
jmp
shr
aas
mov
in
loopne
fsubr
inc
push
mov
dec
mov
jo
pusha
imul
inc
inc
cmp
adc
js
sbb
inc
ds
sbb
es
pop
adc
inc
ss
mov
ficom
lods
ror
cmps
movs
popf
nop
(bad)
enter
js
mov
xchg
adc
push
sub
add
mov
jp
cs
mov
jo
sub
fxch
cmp
rcr
lea
(bad)
push
into
mov
adc
push
iret
addr16
xchg
sar
push
pop
dec
mov
aaa
xor
pusha
push
push
and
test
add
sbb
cmp
ds
push
jns
popf
inc
cs
stos
jo
lahf
inc
out
daa
mov
and
dec
pop
jecxz
loopne
push
pop
vaddss
mov
(bad)
adc
lock
pusha
data16
repz
sub
mov
int
std
mov
add
daa
inc
mov
clc
sub
(bad)
push
fst
and
in
test
shl
cmp
imul
cmp
xor
mov
lds
dec
sti
or
in
lock
xchg
in
aas
mov
sub
loope
sbb
ds
inc
loope
scas
add
shl
loopne
nop
sub
scas
push
in
sbb
push
int3
pusha
out
sbb
jo
cs
in
mov
push
in
outs
shl
pop
mov
in
adc
lahf
sar
mov
and
cmp
cmp
pop
mov
mov
out
adc
and
(bad)
adc
mov
cwde
rdmsr
in
outs
retf
mov
lods
call
and
iret
dec
jo
pop
outs
dec
pop
xor
rcr
mov
mov
fwait
jo
xor
scas
push
lahf
je
and
push
outs
ret
aad
mov
mov
cs
(bad)
dec
pop
sub
add
gs
and
popa
iret
or
sbb
and
aas
aad
jg
jbe
add
fmul
lods
push
(bad)
jmp
mov
shr
scas
lock
sbb
xchg
dec
jg
pop
push
mov
fwait
(bad)
std
pusha
xchg
scas
mov
cmp
mov
idiv
(bad)
adc
add
xchg
sbb
popa
xor
dec
jle
js
sbb
(bad)
inc
out
push
sbb
push
push
inc
shl
out
shr
inc
xor
call
ror
or
jnp
cs
ficomp
call
jmp
xor
or
push
cmps
jns
ss
xor
(bad)
adc
inc
pushf
sti
add
repz
fisubr
push
addps
imul
test
lods
jmp
jno
jno
cmp
out
mov
fucomp
hlt
movups
pop
stos
sub
std
xor
inc
inc
push
push
jle
xchg
mov
lock
mov
lds
out
push
out
add
jno
inc
add
add
ror
movs
dec
leave
cs
sbb
push
sti
xchg
and
stos
add
ror
test
adc
int
cmp
mov
inc
sti
adc
dec
fmul
ficom
mov
nop
inc
add
push
pop
(bad)
adc
cmps
pusha
not
push
add
mov
xchg
xchg
sbb
movs
std
nop
js
pop
mov
and
mov
daa
xor
les
popa
mov
das
imul
nop
aam
inc
daa
loopne
dec
scas
mov
cdq
pusha
std
rcl
sahf
mov
sub
popf
leave
dec
movs
xlat
rol
je
icebp
idiv
adc
lahf
scas
mov
inc
mov
mov
cmp
aas
sub
call
loope
push
jl
and
gs
push
jbe
in
add
out
and
hlt
sbb
nop
stos
test
mov
repz
jle
nop
jle
and
mov
dec
cs
pop
xor
pushf
or
push
sahf
call
xchg
fwait
mov
call
hlt
into
sub
jo
pusha
not
(bad)
pop
out
xlat
and
outs
xor
cwde
mov
loopne
cmp
sub
or
repz
jns
ror
shl
ja
push
fmul
xor
sub
pusha
sub
xchg
inc
test
jmp
shr
pop
adc
mov
push
icebp
fstp
mov
mov
sbb
pop
scas
xor
pop
jo
sahf
mov
lock
movs
push
outs
in
popa
inc
mov
mov
shr
cmp
jne
fidivr
inc
dec
xor
rol
jmp
xchg
add
out
scas
call
adc
cdq
pop
lock
jle
push
push
mov
fwait
sbb
mov
push
xor
and
lock
sbb
push
imul
jae
stc
(bad)
push
xor
xor
test
cmp
dec
loopne
nop
xchg
lds
int
cmps
push
out
adc
adc
pop
sahf
xor
and
push
ds
push
pop
loopne
adc
xor
lock
or
inc
jle
xchg
and
(bad)
xor
test
xor
xor
mov
faddp
cwde
or
cmps
call
jbe
and
rcl
call
pusha
retf
cld
fisttp
ds
cmp
push
dec
push
jnp
(bad)
loopne
xor
mov
push
fcom
and
inc
sar
cmps
imul
outs
and
dec
mov
add
inc
mov
nop
adc
adc
sahf
pusha
retf
gs
ret
cmp
mov
adc
or
mov
jo
in
scas
push
scas
add
and
lds
dec
or
(bad)
clc
jg
dec
push
dec
lds
dec
(bad)
into
jmp
adc
movs
inc
jp
or
imul
cmp
inc
int
cdq
test
fwait
ins
(bad)
out
div
ds
push
(bad)
mov
mov
(bad)
std
cmp
sub
sbb
pusha
mov
jmp
enter
nop
mov
dec
ins
jnp
repnz
icebp
jcxz
addr16
mov
fcom
cmp
fadd
test
ins
and
jne
gs
push
lods
push
or
xchg
int3
cmp
aas
xchg
xor
movs
cmp
jns
xor
fild
push
and
inc
ins
mov
sub
xor
lea
sbb
out
(bad)
mov
sahf
jb
fld
mov
xor
stos
sbb
sbb
jge
sar
pminub
sub
push
sub
push
lods
jmp
addr16
das
pop
sbb
dec
xchg
jp
mov
test
push
or
inc
lahf
xor
jp
pusha
jne
fild
jg
pop
div
ins
mov
std
sbb
fld
ins
sti
gs
xchg
inc
iret
dec
and
pop
xor
dec
fs
ins
jmp
in
scas
push
retf
pop
mov
lahf
mov
and
test
mov
sub
aad
push
repz
out
mov
stos
inc
push
ja
lods
inc
and
xor
ror
or
mov
mov
and
es
ja
out
cmp
adc
push
test
(bad)
mul
push
js
adc
es
push
dec
add
xor
and
dec
mov
pushf
sbb
inc
ficomp
xor
jo
push
push
fimul
gs
cmpxchg
fild
mov
fsubrp
xchg
pusha
mov
imul
lahf
sbb
clc
sar
shl
mov
jo
loopne
fwait
mov
and
mov
loopne
or
test
shr
outs
jle
jg
pop
mov
loopne
out
ror
or
inc
push
xor
and
out
xor
jecxz
xchg
aas
aad
dec
cs
js
inc
push
cmp
mov
dec
into
and
popa
mov
xchg
sahf
lock
mov
out
pop
mov
fdivp
call
mov
xor
mov
push
fdiv
push
xor
and
(bad)
jno
scas
cmp
sar
mov
mov
dec
lds
push
cmp
xor
test
cmp
dec
loopne
nop
xchg
lds
int
cmps
push
out
sub
adc
pop
sahf
xor
ds
das
pop
loopne
int3
xor
lock
or
inc
into
jo
and
(bad)
xor
test
xor
xor
mov
fidivr
xor
js
ret
jle
mov
mov
xchg
test
push
lea
addr16
cs
push
adc
add
mov
(bad)
pop
rcl
and
outs
xor
cwde
mov
fmul
cs
xchg
in
scas
sub
sar
rep
jns
rcr
shl
ja
push
or
xor
sub
pusha
push
xchg
inc
test
ret
daa
shr
pop
adc
mov
push
int
push
mov
mov
sbb
ins
scas
xor
pop
jo
call
movs
push
outs
in
gs
mov
test
shr
cmp
jne
fidivr
ror
clc
rol
jmp
xchg
add
out
scas
jo
adc
dec
adc
cdq
pop
lock
aad
jle
push
push
mov
fwait
cwde
popf
pusha
gs
push
cmps
sbb
lods
sub
push
retf
pop
push
pop
cld
sbb
std
and
push
push
outs
stos
retf
and
aad
rcl
out
in
nop
movs
(bad)
mov
pop
dec
inc
inc
jo
outs
jbe
mov
mov
jle
js
pop
jae
xchg
add
loop
(bad)
adc
es
cmc
mov
mov
test
es
data16
lea
sbb
lods
pop
dec
test
mov
sbb
xchg
lock
outs
std
push
jb
aad
fst
into
les
fdiv
popa
outs
jno
mov
in
xor
les
aam
arpl
push
sub
(bad)
mov
adc
in
fstp
outs
int
test
cmp
mov
push
out
dec
pop
add
scas
add
pop
fbld
das
outs
rcr
ret
mov
sbb
mul
pop
xchg
fs
mov
mov
in
cmp
xchg
sahf
pop
or
jp
std
cwde
push
push
fstp
mov
ficom
dec
pop
repz
xchg
ja
pop
dec
push
inc
cmps
scas
jmp
push
lock
dec
adc
pop
into
mov
pusha
push
pop
(bad)
jo
sbb
push
into
test
jno
sbb
mov
leave
mov
push
lods
das
lock
(bad)
sbb
xor
loopne
jmp
add
sar
dec
loopne
fst
mov
jae
dec
xor
push
inc
(bad)
clc
jno
outs
cmps
in
adc
xlat
mov
xchg
push
std
pop
nop
mov
mov
lahf
push
xor
mov
dec
mov
jle
xadd
push
jne
mov
mov
rcr
das
mov
icebp
out
outs
mov
in
mov
xor
xor
fistp
xchg
aas
scas
mov
adc
faddp
loope
sub
ss
push
call
jmp
or
aas
jnp
or
sbb
(bad)
in
out
jo
mov
push
loopne
push
add
cmp
mov
kmovb
jg
hlt
out
dec
mov
pop
mov
popa
daa
mov
add
shl
addr16
xor
movs
ror
jg
hlt
out
dec
mov
into
or
scas
xor
adc
jno
outs
sbb
mov
retf
pop
out
inc
mov
xor
add
dec
ja
inc
fild
and
push
cmp
sub
and
in
jbe
and
es
dec
sar
imul
push
pop
nop
mov
mov
mov
fdivr
enter
lea
popw
das
jns
adc
mov
arpl
push
xor
xor
jle
popa
lock
lods
jle
jmp
jl
xchg
test
fdivr
(bad)
push
and
push
mov
iret
jb
mov
sub
loope
lds
rcl
add
and
adc
mov
ins
cmp
icebp
out
jo
xchg
push
jl
sub
ds
pusha
cmps
pop
and
ficomp
ins
repz
ror
outs
movs
loope
dec
mov
jne
mov
scas
ror
cmp
or
loop
loop
push
or
call
fadd
push
push
jno
(bad)
das
xchg
sbb
pop
das
jns
lock
push
in
out
pusha
jbe
iret
cdq
ds
(bad)
and
xor
mov
rcl
ficomp
xor
pop
mov
xor
jg
scas
lock
xlat
jo
jg
pop
(bad)
inc
scas
call
inc
add
popa
or
xor
mov
rcl
jae
pop
mov
mov
push
std
arpl
jae
sub
(bad)
adc
jmp
(bad)
xor
out
scas
inc
or
aas
mov
ins
sar
dec
(bad)
test
sbb
mov
fidivr
dec
or
sar
dec
repz
add
inc
call
test
jne
fbstp
mov
push
cli
frstor
xchg
cmp
push
mov
push
out
dec
les
ret
ins
repz
jecxz
mov
sub
movs
sbb
lea
sub
mov
ret
jns
adc
xor
lea
and
mov
fild
(bad)
sbb
fimul
pop
mov
mov
in
scas
out
mov
lods
jmp
push
ret
pusha
rcr
pop
jae
adc
and
in
shr
std
ja
mov
pop
jg
mov
sbb
sub
mov
mov
mov
dec
jno
cmp
mov
jg
mov
call
xchg
popa
daa
mov
mov
hlt
jb
sub
not
repz
out
sub
mov
movs
ret
in
push
adc
dec
inc
push
adc
sub
cmp
call
sub
call
call
jno
mov
xchg
sar
movs
shl
fld
cs
arpl
or
aas
dec
mov
xlat
je
cmp
mov
movs
mov
popa
daa
mov
popa
iret
pop
clc
xor
aas
mov
js
and
mov
xchg
enter
adc
push
and
repz
aas
bound
sub
inc
ins
push
call
jbe
inc
(bad)
jle
adc
add
(bad)
fucomp
inc
xchg
mov
adc
adc
inc
cli
fdivr
xor
xor
sub
cwde
ret
dec
repz
add
dec
jmp
out
jmp
fcom
loopne
frstor
test
add
mov
mov
mov
xchg
xor
dec
pop
outs
lods
das
jns
jo
dec
pop
ins
out
or
adc
nop
push
out
mov
and
ret
adc
and
(bad)
pusha
pop
xor
sub
inc
ds
inc
(bad)
clc
stos
(bad)
pop
jg
adc
movs
das
outs
arpl
fld
jmp
mov
loopne
and
jmp
mov
dec
push
cmp
push
inc
iret
jo
cmp
inc
adc
mov
dec
aas
fidiv
aas
sbb
aam
or
mov
mov
xchg
mov
sahf
add
ins
out
repnz
pop
dec
push
sbb
daa
lahf
push
and
adc
retf
adc
shl
fst
imul
fidiv
mov
iret
mov
ss
jg
scas
push
(bad)
jg
mov
mov
lahf
pop
popf
mov
lods
outs
das
and
clc
(bad)
pop
sub
fmulp
mulps
and
inc
es
mov
popa
mov
lods
jle
xchg
sar
kmovw
jg
xchg
dec
ins
in
mov
ds
loopne
jmp
mov
jle
outs
lea
push
arpl
(bad)
and
mov
fwait
out
scas
and
jle
nop
sar
es
pusha
shl
fld
inc
mov
(bad)
iret
ret
lods
jle
nop
sar
kmovw
jg
xchg
dec
ins
out
mov
mov
adc
stos
fistp
xchg
rcr
mov
das
outs
mov
pop
jae
adc
and
mov
ja
mov
das
outs
test
imul
mov
cmp
push
test
push
retf
mov
scas
stc
bound
xor
xor
sub
loop
or
mov
in
fs
push
and
jb
hlt
cmps
dec
sub
dec
pop
add
sub
push
push
cmc
xchg
adc
jo
daa
jg
lods
mov
mov
sub
lock
push
outs
out
int
dec
repnz
cs
and
out
mov
ficom
icebp
dec
movs
xlat
jo
or
cmp
(bad)
fadd
inc
sbb
je
fs
mov
loope
aam
pusha
push
dec
pop
dec
es
fbld
push
inc
mov
jge
lock
das
outs
test
add
sub
push
sbb
inc
mov
jle
jecxz
sahf
lock
jecxz
or
inc
mov
nop
push
(bad)
cmc
mov
scas
inc
xor
sub
jmp
outs
add
adc
icebp
xlat
sub
cmp
mov
push
mov
es
mov
movs
xchg
pusha
and
aad
pusha
jae
out
loope
ret
jne
mov
push
inc
loopne
mov
enter
ror
cmp
out
loope
xchg
jp
sahf
mov
mov
jle
popa
cwde
ret
stos
jno
(bad)
aas
dec
and
pusha
push
cmp
retf
mov
scas
stc
dec
adc
pop
add
mov
(bad)
sub
xchg
push
inc
dec
pop
push
jne
nop
fisub
mov
mov
and
shl
pop
mov
xor
outs
jmp
sbb
jmp
jb
and
fcmove
repnz
idiv
mov
or
pop
sar
jl
pop
add
sub
lahf
inc
add
sar
mov
or
nop
push
xchg
jae
push
sahf
scas
adc
push
jmp
enter
xchg
iret
mov
sub
cmps
movs
bnd
cmp
fisub
(bad)
std
into
and
ror
int3
xor
aas
dec
sbb
xchg
not
ins
add
sub
in
mov
cmp
aas
daa
cmp
or
adc
out
inc
mov
add
sub
pushf
scas
ror
mov
sub
jns
int
in
icebp
cmp
fucomp
and
add
and
fisubr
jg
scas
mov
cs
std
mov
add
int
popa
push
inc
inc
ins
(bad)
call
das
pop
aas
sbb
cmps
int3
sar
into
std
xor
out
add
pop
scas
out
jecxz
popa
int3
jno
sub
or
shl
adc
cmp
inc
aam
mov
mov
mov
cmp
ins
push
mov
cmp
jmp
fbstp
pop
mov
gs
test
dec
pop
dec
sub
mov
sahf
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
mov
xor
and
aam
les
dec
in
xchg
sub
push
jmp
adc
add
xor
and
aam
les
dec
in
xchg
sub
push
jmp
adc
add
xor
and
aam
les
dec
in
xchg
test
mov
movs
cli
push
jmp
adc
add
xor
and
aam
les
dec
in
nop
sub
(bad)
push
out
inc
in
jo
pusha
mov
je
fistp
xchg
sub
loopne
jo
rcr
loope
adc
pusha
mov
xor
aad
in
outs
lds
mov
dec
in
sbb
scas
add
out
lea
dec
fdiv
jl
inc
jo
cmp
pop
mov
dec
iret
neg
push
xchg
retf
xchg
sub
mov
pop
hlt
dec
jecxz
adc
and
push
in
inc
fidiv
arpl
lock
loopne
jb
sbb
mov
popf
jo
lahf
mov
xor
shl
sbb
mov
fidiv
and
adc
fidiv
mov
sub
pop
mov
movs
ds
rol
mov
xor
pusha
cli
adc
add
shr
rcr
dec
pop
ds
sbb
mov
fidiv
pusha
cli
adc
and
shr
rcr
loopne
nop
push
push
hlt
push
in
push
out
add
xor
jmp
rcl
movs
ds
and
dec
mov
fidiv
pusha
cli
adc
and
mov
movs
ds
rol
mov
jo
and
push
scas
add
shr
sbb
shr
sbb
dec
mov
fidiv
pusha
std
adc
arpl
mov
mov
push
mov
jecxz
push
out
inc
fidiv
lea
adc
and
sub
mov
pop
repz
jecxz
push
out
inc
fidiv
into
pusha
mov
jae
arpl
lock
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
lock
loopne
shr
sbb
dec
mov
popf
xor
inc
fnsave
and
sub
jge
ins
ret
pop
repz
jecxz
adc
pusha
std
push
in
inc
fnsave
arpl
lock
loopne
shr
push
mov
jecxz
adc
inc
fidiv
and
adc
arpl
lock
mov
push
mov
mov
fidiv
into
pusha
mov
jae
arpl
mov
mov
pop
repz
jecxz
push
out
inc
popf
xor
pusha
mov
xor
rcr
mov
pop
repz
jecxz
adc
pusha
mov
jae
and
sub
loopne
nop
ins
ret
pop
mov
jecxz
adc
pusha
mov
xor
rcr
mov
pop
repz
mov
popf
xor
pusha
std
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
add
shr
sbb
shr
pop
mov
mov
popf
jo
pusha
mov
xor
rcr
loopne
nop
cs
pop
repz
jecxz
adc
and
push
in
inc
sahf
xor
rcr
push
push
mov
mov
fidiv
and
jae
and
lock
push
mov
jecxz
adc
and
push
scas
add
shr
movs
jle
outs
sbb
push
mov
popf
jo
pusha
cli
push
jmp
xchg
outs
sbb
push
pop
dec
push
mov
call
add
jae
and
sub
loopne
aam
sbb
push
jecxz
push
out
inc
popf
jo
pusha
mov
xor
arpl
mov
loopne
nop
ins
ret
pop
repz
jecxz
adc
inc
fidiv
and
push
scas
add
xchg
sub
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
outs
rcr
sbb
jecxz
push
out
inc
fidiv
into
pusha
mov
xor
rcr
sbb
dec
mov
fidiv
pusha
std
adc
and
sub
mov
push
mov
jecxz
push
out
inc
popf
xor
inc
fnsave
and
sub
loopne
nop
ins
sbb
push
jecxz
push
out
inc
popf
xor
add
xor
sbb
loopne
nop
sbb
dec
jecxz
push
out
inc
popf
jo
pusha
mov
xor
and
outs
sbb
loopne
shr
sbb
dec
jecxz
push
out
inc
popf
xor
pusha
mov
jae
and
sub
loopne
shr
pop
repz
jecxz
adc
pusha
mov
xor
sbb
ins
ret
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
jae
arpl
mov
mov
pop
mov
mov
popf
xor
add
xchg
sub
loopne
nop
cs
pop
repz
jecxz
adc
pusha
mov
jae
and
sub
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
sahf
xor
sbb
loopne
shr
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
jae
and
outs
sbb
sbb
dec
mov
popf
xor
pusha
mov
jae
arpl
lock
mov
pop
repz
jecxz
push
out
inc
popf
xor
inc
fnsave
arpl
outs
rcr
sbb
dec
jecxz
adc
and
push
in
inc
fnsave
arpl
lock
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
lock
sbb
mov
fidiv
pusha
std
push
in
inc
sahf
xor
rcr
mov
push
mov
jecxz
push
out
inc
fidiv
lea
std
push
in
add
xchg
sub
mov
push
repz
jecxz
push
out
inc
popf
xor
pusha
mov
xor
rcr
loopne
nop
cs
pop
repz
jecxz
adc
pusha
mov
xor
rcr
loopne
nop
cs
push
mov
mov
fidiv
lea
adc
and
mov
mov
pop
repz
mov
popf
xor
pusha
mov
xor
sbb
loopne
nop
sbb
push
mov
popf
xor
inc
sahf
xor
rcr
mov
pop
mov
mov
fidiv
and
jae
arpl
lock
ret
pop
repz
jecxz
adc
inc
fidiv
pusha
mov
xor
sbb
loopne
shr
loope
push
in
adc
and
push
scas
add
shr
pop
mov
loopne
nop
ins
sbb
push
jecxz
push
out
inc
popf
xor
add
shr
pop
mov
loopne
nop
cs
pop
repz
mov
lahf
jo
pusha
mov
jae
arpl
mov
mov
pop
repz
jecxz
adc
inc
fidiv
and
push
scas
add
xchg
outs
rcr
mov
pop
repz
jecxz
adc
and
push
in
add
shr
sbb
shr
pop
repz
jecxz
adc
and
adc
arpl
outs
rcr
cs
push
mov
mov
fidiv
lea
std
push
in
inc
sahf
xor
rcr
mov
push
repz
jecxz
adc
and
jae
arpl
mov
mov
push
mov
mov
fidiv
pusha
std
adc
and
sub
mov
pop
mov
mov
fidiv
and
push
push
add
shr
pop
mov
mov
pop
repz
jecxz
adc
pusha
mov
xor
arpl
outs
rcr
cs
push
mov
popf
xor
inc
fnsave
arpl
mov
loopne
nop
cs
push
mov
mov
popf
xor
inc
sahf
xor
rcr
mov
pop
repz
jecxz
adc
and
push
in
add
xchg
outs
rcr
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
and
sub
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
and
outs
sbb
loopne
shr
pop
repz
jecxz
adc
and
push
in
inc
fnsave
and
sub
loopne
shr
pop
repz
mov
pushf
jo
pusha
mov
xor
arpl
mov
loopne
nop
push
push
mov
mov
fidiv
into
pusha
mov
xor
sbb
sbb
jecxz
adc
pusha
mov
xor
rcr
mov
push
repz
mov
popf
xor
add
xor
rcr
mov
push
mov
mov
fidiv
pusha
mov
xor
rcr
mov
push
mov
mov
fidiv
pusha
mov
xor
rcr
mov
pop
repz
jecxz
adc
and
push
scas
add
shr
pop
mov
mov
pop
repz
jecxz
adc
inc
fidiv
and
jae
and
sub
loopne
shr
sbb
dec
mov
fidiv
pusha
std
push
scas
add
shr
sbb
nop
ins
sbb
push
jecxz
push
out
inc
fidiv
lea
adc
and
sub
mov
pop
mov
mov
popf
xor
inc
fnsave
and
sub
loopne
nop
cs
pop
mov
mov
fidiv
and
adc
arpl
mov
loopne
nop
cs
pop
repz
mov
popf
xor
add
xchg
sub
mov
pop
mov
mov
fidiv
pusha
mov
jae
arpl
lock
loopne
shr
pop
repz
mov
popf
xor
add
xchg
sub
loopne
nop
cs
push
mov
mov
fidiv
and
push
in
inc
fnsave
arpl
lock
mov
pop
mov
mov
fidiv
and
xor
rcr
movs
ds
sbb
in
adc
add
xor
and
push
jmp
shr
pop
mov
movs
jp
push
push
mov
in
push
out
inc
call
inc
sahf
xor
rcr
movs
jp
sbb
dec
in
adc
add
xor
and
push
scas
add
shr
pop
lock
loopne
aam
les
push
mov
fidiv
and
adc
fs
outs
rcr
dec
loopne
nop
push
pop
mov
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
les
dec
in
push
out
inc
fidiv
pusha
mov
xor
test
mov
movs
ds
sbb
in
adc
add
xor
pusha
mov
je
and
outs
test
dec
loopne
nop
sbb
push
mov
fidiv
and
adc
and
outs
test
dec
loopne
aam
les
push
mov
fidiv
and
adc
cmp
loopne
aam
les
dec
in
adc
add
xor
and
adc
fs
outs
rcr
loopne
nop
push
pop
hlt
dec
in
adc
inc
fidiv
pusha
mov
xor
rcr
movs
jp
sbb
dec
in
adc
inc
fidiv
and
adc
and
sub
nop
sbb
dec
in
adc
add
xor
and
push
jmp
shr
sbb
sbb
push
in
push
out
inc
call
inc
fcmovne
mov
cmp
dec
in
xchg
sub
(bad)
push
out
inc
fidiv
pusha
mov
xor
and
push
pop
hlt
dec
in
xchg
sub
push
jmp
adc
add
xor
and
aam
les
dec
in
xchg
sub
push
jmp
adc
add
xor
and
aam
les
dec
in
xchg
sub
push
jmp
adc
add
aam
les
dec
in
xchg
sub
push
jmp
adc
inc
pop
cdq
and
ja
sar
dec
int3
inc
adc
push
fmul
pop
(bad)
dec
adc
or
rcr
fild
popf
lea
xchg
xchg
fistp
popa
lock
loop
or
outs
test
dec
loop
loope
aad
into
xchg
and
or
push
inc
fstp
or
and
aad
enter
outs
lea
mov
or
inc
sbb
movs
jo
add
ror
mov
test
xlat
jmp
xor
inc
or
cmp
outs
ret
pop
ret
out
aad
lds
push
into
xor
retf
popa
fcomp
inc
cmp
fbstp
push
(bad)
int3
popf
and
pop
cmps
push
popf
or
jle
je
inc
in
push
adc
sub
pop
dec
jg
inc
leave
fwait
and
sbb
push
jmp
movs
dec
mov
inc
hlt
pop
fisttp
int3
push
mov
mov
and
add
shl
xchg
push
mov
cmps
outs
mov
pop
ror
loope
test
pop
call
jmp
sub
jns
imul
mov
jns
outs
test
nop
pop
mov
cmp
pop
in
sar
leave
popf
cmp
dec
and
dec
xchg
pop
clc
add
inc
les
shr
add
inc
in
jo
inc
ds
push
xchg
das
xchg
jle
sbb
xor
popf
add
arpl
push
ds
push
test
pop
mov
jp
xchg
aaa
(bad)
xor
jb
and
inc
loop
sbb
adc
pop
mov
scas
push
mov
and
inc
shl
ds
lock
outs
lds
les
lahf
cmp
and
dec
aam
stc
push
std
pusha
sbb
sbb
dec
jecxz
and
mov
dec
mov
xor
mov
dec
xchg
push
(bad)
jp
mov
adc
inc
les
or
cmp
pop
loop
loope
fmul
test
popf
and
retf
inc
in
push
pop
mov
lods
push
xchg
sbb
push
stc
dec
loope
lock
xchg
mov
push
scas
adc
push
retf
outs
cli
popa
jle
sbb
pop
test
push
(bad)
jp
sar
add
xor
(bad)
jmp
sbb
xchg
imul
movs
jno
xor
cdq
xor
add
xor
je
add
push
aas
mov
das
mov
pop
cmp
jl
lahf
and
add
xor
je
jo
jbe
mov
push
or
mov
lea
pushf
xor
stos
add
(bad)
out
push
push
jo
mov
sub
cmp
outs
sar
pop
xchg
add
ficomp
pusha
dec
nop
push
in
iret
cmp
pop
loop
rcr
outs
leave
popf
cmp
or
(bad)
in
je
push
cld
add
movs
add
popa
aam
hlt
pop
cmc
xor
mov
adc
push
repnz
int
fsub
outs
test
pop
neg
lock
dec
inc
mov
outs
sti
add
popa
(bad)
adc
test
hlt
cs
push
cld
int3
mov
mov
mov
je
popa
rcr
and
cmp
scas
inc
enter
adc
lahf
adc
adc
and
outs
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
sahf
xor
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
lock
loopne
adc
and
push
out
inc
fidiv
pusha
ds
sbb
push
mov
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbb
shr
repnz
loop
adc
cld
push
in
inc
fdiv
bound
sub
sbb
or
jl
ins
ret
dec
loop
adc
cld
push
in
inc
fdiv
bound
sub
sbb
or
jl
ins
ret
dec
loop
adc
cld
push
in
inc
fdiv
bound
sub
sbb
or
jl
ins
ret
dec
loop
adc
cld
push
in
inc
fdiv
bound
sub
sbb
or
jl
ins
ret
dec
loop
adc
cld
push
in
inc
fdiv
bound
sub
sbb
or
jl
ins
ret
dec
loop
adc
cld
push
in
inc
fdiv
bound
sub
sbb
or
jl
ins
ret
dec
loop
adc
std
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
in
inc
fnsave
arpl
mov
mov
pop
repz
jecxz
adc
and
push
mov
sub
adc
pop
hlt
retf
or
jnp
jecxz
shl
aad
mov
xchg
fsubr
xor
out
ds
movs
mov
sahf
sbb
arpl
mov
call
or
sahf
inc
mov
repz
adc
shl
rol
pop
test
int3
sub
mov
(bad)
outs
dec
lods
ja
jnp
inc
shl
xchg
and
inc
test
das
add
dec
shl
fisubr
gs
sbb
shr
fisub
div
adc
fst
and
cs
stc
inc
jecxz
xor
imul
sti
adc
ficom
push
lods
mov
mov
push
into
mov
xchg
push
jg
cmp
push
cmp
cmc
sahf
icebp
pop
mov
stos
mov
xchg
and
add
cld
xchg
xor
adc
inc
in
aas
add
rcl
push
aas
call
cdq
push
push
sar
add
push
mov
repnz
retf
adc
and
mov
adc
mov
pop
mov
scas
push
mov
mov
dec
mov
xchg
sbb
push
(bad)
test
out
xor
adc
cmp
ins
retf
je
dec
in
jle
outs
scas
pop
sahf
adc
jg
imul
fidivr
gs
pop
mov
sbb
retf
pop
out
and
(bad)
test
and
sbb
adc
pop
jmp
shr
(bad)
test
mov
retf
(bad)
push
xchg
mov
lods
sbb
adc
jbe
xor
dec
sbb
cmp
ds
dec
in
xlat
imul
mov
int
sahf
push
icebp
js
movs
adc
pop
cmc
pop
out
(bad)
(bad)
xchg
and
or
xor
push
push
mov
shr
cs
loope
rcl
or
pusha
test
or
outs
test
lock
jno
push
inc
cmps
sub
pop
std
inc
frstor
sbb
and
dec
shr
push
and
push
ret
jnp
add
xor
and
sub
shr
rcr
fisubr
(bad)
cmp
jo
xor
pusha
fst
inc
pop
loope
aas
mov
test
push
(bad)
pop
int
mov
aam
and
sub
pop
mov
add
rol
xchg
jle
outs
mov
pop
in
push
fidivr
call
xor
xor
gs
cld
push
pop
mov
dec
cmp
mov
aam
cmp
inc
mov
into
pop
sahf
jg
and
inc
loopne
sbb
and
ds
jecxz
mov
lds
jo
add
inc
scas
push
sahf
pop
in
add
xchg
xor
push
int3
dec
loope
aad
les
jo
and
arpl
gs
loopne
movs
or
push
jecxz
jmp
in
into
mov
stos
adc
pop
mov
imul
lods
adc
jo
push
mov
lods
xor
add
xor
and
loop
mov
push
std
dec
out
jno
jnp
xchg
xor
mov
popa
in
pop
loope
adc
dec
xchg
icebp
dec
out
jno
push
(bad)
fidiv
mov
outs
std
push
loopne
pop
mov
mov
shr
test
inc
jecxz
nop
cs
xchg
and
and
sahf
je
outs
sahf
push
mov
jle
add
pop
(bad)
cmp
loopne
and
stos
or
xor
scas
inc
sbb
dec
shr
xchg
dec
in
mov
(bad)
mov
mov
mov
and
shr
pop
lock
loopne
nop
cs
jg
jp
fwait
push
out
sub
jo
push
sahf
push
outs
jmp
scas
cmp
nop
dec
in
les
int3
(bad)
jo
pusha
(bad)
cmp
add
inc
mov
sbb
(bad)
dec
icebp
pop
jecxz
popf
popa
iret
(bad)
cmp
outs
ficomp
dec
(bad)
in
push
jecxz
pop
mov
test
push
rol
push
ret
nop
and
and
retf
push
fidiv
cmp
sub
sbb
pusha
loopne
nop
push
cmc
push
aad
les
jo
adc
je
and
inc
cli
push
or
das
xchg
add
inc
icebp
ja
imul
push
into
adc
pop
mov
adc
daa
test
cs
ret
push
loope
cmp
sub
jae
and
jle
push
xor
pusha
mov
mov
push
rcl
mov
push
scas
pop
(bad)
ret
imul
sub
mov
aad
add
out
inc
movs
add
ja
jb
push
retf
pop
jle
add
nop
sbb
xchg
inc
ficom
pusha
shl
in
push
out
and
mov
shl
dec
jmp
test
xor
adc
add
xor
mov
lock
loope
mov
into
cwde
xor
adc
jno
jb
dec
out
or
add
ds
pop
retf
pop
jecxz
cld
mov
test
sti
inc
bnd
push
loope
adc
cmp
pop
(bad)
pop
aad
sar
jne
cmp
inc
jmp
shl
outs
out
push
jmp
sbb
sub
or
(bad)
dec
in
and
and
jo
or
xor
and
rcr
sar
cmp
pop
in
in
(bad)
mov
mov
jne
outs
jmp
test
pop
in
lds
outs
aam
cmp
adc
jns
gs
add
loopne
sub
in
in
or
fisub
fsub
add
stc
outs
sahf
push
out
adc
pop
mov
shl
ror
neg
push
into
call
dec
(bad)
outs
sahf
pop
sti
inc
sub
cdq
and
jnp
imul
cmp
and
xlat
jne
outs
call
dec
adc
das
test
in
jnp
jl
nop
and
stos
adc
jns
gs
pop
out
or
daa
xchg
pop
loop
cmp
mov
(bad)
jo
inc
mov
adc
push
pop
mov
jl
dec
mov
imul
cmp
and
jo
inc
enter
sti
inc
out
dec
mov
cmp
cmp
(bad)
fisub
fadd
push
stos
adc
inc
mov
bnd
sub
dec
mov
xlat
fwait
and
jb
pop
into
add
pushfw
add
adc
push
sbb
pusha
mov
pop
sub
leave
xchg
aas
pushf
add
jmp
push
pop
mov
or
ins
xchg
mov
scas
inc
mov
into
pop
fist
loopne
fld
je
test
xor
in
jno
imul
ds
xor
pop
mov
add
xor
add
mov
and
inc
aad
mov
mov
lods
pusha
mov
jl
inc
sbb
sbb
dec
inc
ins
mov
in
xor
pusha
shl
popa
mov
test
and
mov
loopne
jg
aaa
mov
jecxz
mov
xor
ins
sbb
rcr
out
jno
dec
mov
(bad)
sbb
inc
(bad)
ret
jo
pop
mul
sbb
cwde
dec
cmc
xor
mov
mov
mov
add
mov
dec
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
xchg
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loope
nop
das
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
adc
inc
fnsave
loopne
nop
cmps
push
stc
push
mov
cmps
popa
mov
je
and
mov
add
or
jle
mov
stc
faddp
and
mov
xor
sar
mov
lock
xor
add
dec
inc
mov
cmp
sahf
pushf
jns
lods
or
mov
jecxz
xlat
jnp
jns
dec
(bad)
push
add
mov
ret
jle
dec
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
pop
int
shl
ds
sbb
ret
dec
jne
and
xchg
inc
dec
imul
jle
outs
sar
mov
jno
dec
sbb
push
das
xchg
or
popf
mov
lahf
ret
lds
stos
push
cmp
(bad)
lock
cmp
jg
inc
pop
int3
inc
inc
adc
(bad)
lods
xor
dec
inc
das
dec
xor
xchg
dec
adc
pop
loope
(bad)
fimul
icebp
lods
sub
mov
fsubr
jb
int3
mov
sahf
lahf
into
psrlq
lods
push
lock
scas
xchg
mov
pop
mov
fdiv
das
lods
nop
mov
aaa
jg
sahf
dec
mov
or
add
out
stc
jnp
xor
fld
cmp
or
lds
pop
repnz
push
pushf
mov
inc
mov
push
sar
outs
shl
sar
mov
mov
and
scas
add
shr
pop
lock
cmp
or
mov
pop
(bad)
and
shl
sub
sub
pushf
aad
mov
ficomp
or
jg
add
shl
sar
dec
loop
adc
push
xchg
xchg
loop
out
push
fiadd
into
pusha
mov
xor
jle
in
test
ds
xchg
cmp
mov
push
sbb
jae
arpl
inc
jle
gs
xor
dec
sbb
push
aad
and
inc
int3
adc
and
in
rcr
loopne
cwde
lods
mov
or
jns
pop
mov
scas
dec
not
mov
cmc
rcr
mov
ret
dec
loopne
nop
pop
sbb
push
rcr
jle
add
inc
scas
inc
adc
outs
shr
adc
sbb
push
mov
push
stos
inc
in
scas
pusha
mov
push
loope
jle
mov
aaa
mov
into
ds
inc
out
xor
ror
jb
loop
jns
and
inc
mov
xchg
pop
mov
or
scas
jle
out
inc
into
(bad)
mov
and
inc
loop
adc
sbb
ds
or
mov
mov
out
or
adc
and
fucomip
rcr
loopne
nop
and
ins
nop
jp
(bad)
push
in
mov
jns
outs
repz
rcr
ds
sub
pushf
sar
(bad)
push
loop
fidiv
loop
adc
add
mov
dec
outs
mov
ds
mov
ror
repnz
add
pop
scas
and
outs
rcr
test
cs
push
sar
cld
in
and
adc
popa
xor
and
jno
imul
pusha
cmps
inc
push
cmp
bound
sub
sbb
adc
sbb
div
test
dec
cmps
sti
pop
hlt
dec
xchg
out
les
dec
xchg
out
jne
jns
adc
aam
xor
push
mov
inc
cli
push
fldenv
lods
add
push
push
pop
daa
mov
popf
ret
jecxz
mov
dec
out
cli
fidiv
cmp
mov
sbb
(bad)
pop
mul
test
mov
push
enter
call
shr
pop
lock
scas
xchg
cs
into
pusha
(bad)
push
out
inc
sahf
push
push
push
mov
movs
cmp
push
xor
sub
arpl
push
in
inc
fwait
inc
add
lods
add
dec
jecxz
shr
sbb
xchg
sub
sti
sahf
jmp
fwait
xor
stos
add
fimul
or
sbb
daa
mov
imul
cmp
and
push
das
xchg
push
mov
mov
and
aam
adc
xchg
cmp
and
push
cld
xchg
aas
mov
mov
and
xchg
pop
jecxz
xchg
cmp
mov
aas
sub
test
lahf
and
and
jmp
lods
add
mov
mov
cmp
add
xor
and
sub
add
adc
in
dec
push
aam
or
xchg
enter
and
push
mov
xchg
sub
pop
mov
aas
mov
cmps
sbb
scas
adc
and
xchg
sub
or
popf
pcmpeqb
add
adc
and
jl
(bad)
mov
xchg
sub
push
mov
fwait
das
push
(bad)
pusha
unpckhps
add
xor
loope
mov
das
xchg
fbstp
popa
in
push
sub
shr
pop
repz
jecxz
scas
add
and
in
(bad)
cmp
xchg
aas
mov
aad
mov
test
and
mov
stc
push
jmp
push
push
mov
jne
jge
inc
jmp
xchg
cmp
mov
push
in
inc
sbb
xchg
sub
jg
pop
mov
imul
jns
or
mov
imul
js
or
rol
(bad)
push
out
inc
fidiv
pusha
mov
pop
scas
mov
cs
ds
setno
sub
dec
loopne
lock
or
sbb
in
inc
std
push
stc
push
fnsave
push
mov
xor
aas
fild
clc
daa
mov
cwde
ja
addr16
dec
lock
lods
and
jge
cmpxchg
pusha
repnz
loopne
shl
ret
or
popa
cld
jo
fdiv
mov
cmp
or
inc
jmp
add
mov
and
loop
(bad)
nop
sbb
push
mov
fidiv
mov
lahf
and
icebp
pop
loope
ret
jno
pop
mov
das
jno
popa
iret
push
ficom
lock
push
mov
(bad)
push
into
pusha
push
add
xor
jg
dec
loope
repnz
cmp
or
sbb
in
inc
cld
push
int3
(bad)
(bad)
add
ins
ret
dec
loop
repz
mov
std
push
int
(bad)
add
sbb
jge
dec
jecxz
repz
loop
repnz
inc
std
push
int
(bad)
js
or
js
sahf
jbe
inc
call
aaa
(bad)
jg
dec
cli
lahf
maskmovq
neg
imul
dec
cld
jns
ds
js
inc
jmp
aaa
retf
pop
mov
xor
aad
cmps
or
cmp
mov
push
(bad)
and
ds
mov
repz
shr
mov
inc
stc
push
or
push
(bad)
and
jns
cdq
dec
lock
shr
mov
pop
fstp
iret
jo
inc
out
ins
ret
or
popa
loop
retf
int3
(bad)
cld
push
in
inc
pushf
xor
add
ret
or
popa
jecxz
into
or
jmp
inc
in
add
lds
mov
shl
jno
cmp
dec
xchg
cmp
pop
and
inc
call
push
mov
and
neg
dec
xchg
cmp
or
inc
call
pop
mov
daa
mov
jns
imul
cmp
push
cli
inc
jmp
add
mov
jnp
imul
movs
dec
xchg
cmp
sub
sbb
or
cld
inc
in
jb
xor
adc
mov
jl
ins
repnz
or
sbb
inc
in
sbb
adc
and
outs
rcr
cmp
cs
jbe
das
jno
popa
iret
push
inc
xor
add
mov
pop
mov
das
jo
popa
into
push
inc
xor
add
sar
outs
mov
mov
das
jno
and
cmp
push
mov
(bad)
push
into
pusha
fidiv
add
xor
jle
dec
loope
lock
cmp
push
pop
mov
inc
(bad)
jnp
popa
fbstp
add
xor
jg
dec
loope
lock
cmp
mov
inc
cld
push
int3
(bad)
fdiv
add
ins
ret
dec
loop
repnz
cmp
or
sbb
in
inc
cld
push
int3
(bad)
fdiv
add
ins
ret
jge
dec
jecxz
repz
mov
std
push
int
fnsave
add
xor
jge
dec
jecxz
repnz
mov
cld
push
int
fnsave
add
ins
ret
jge
dec
jecxz
repz
loopne
lock
sbb
push
int3
arpl
jb
add
ins
ret
or
sbb
ins
ret
or
inc
cld
push
retf
(bad)
add
fidiv
cmp
sub
push
mov
xchg
xchg
cmp
dec
neg
sub
fld
push
stc
mov
loopne
out
pop
mul
imul
sbb
leave
js
cmp
push
stc
and
dec
loop
test
mov
(bad)
push
mov
cmp
cpuid
cmp
push
stc
daa
mov
fwait
pop
test
clc
es
pop
retf
and
fild
push
stc
daa
mov
in
jbe
adc
out
xchg
mov
xlat
jns
or
cmp
mov
sahf
push
clc
es
adc
in
hlt
pop
shr
mov
inc
xchg
cmp
add
and
adc
scas
add
jo
sub
jo
inc
out
push
(bad)
and
jnp
mov
cwde
cmp
ins
sar
or
xchg
ds
into
jne
sub
pop
scas
add
lock
ret
outs
sar
or
not
scas
sbb
inc
out
push
(bad)
and
adc
mov
outs
ror
das
xchg
aas
popa
iret
jno
jl
ins
ret
xor
popa
iret
adc
(bad)
push
in
inc
pushf
xor
add
mov
and
push
(bad)
aas
xchg
das
sbb
int3
call
inc
pushf
xor
add
adc
pop
mov
movs
cmp
sub
fdiv
cmp
push
out
inc
fwait
outs
sar
adc
jl
ins
ret
push
cld
popa
into
xor
mov
push
in
inc
pushf
xor
add
dec
mov
inc
out
push
(bad)
cmp
sub
data16
push
in
inc
popf
xor
pop
add
ins
ret
sbb
cwde
es
js
cmp
cmpxchg
shr
mov
clc
inc
jmp
push
mov
jno
sub
out
cdq
cmp
pop
push
clc
dec
repz
jp
or
mov
ja
imul
cmp
pop
pop
test
push
mov
es
js
push
xchg
cmp
or
inc
jmp
pop
test
xlat
jns
imul
cmp
or
jmp
add
xor
and
aam
les
pop
in
xchg
cmp
push
sti
inc
jmp
(bad)
adc
fwait
and
imul
in
xchg
cmp
or
inc
test
adc
mov
jl
ins
repnz
loop
xchg
cmp
jl
sbb
in
jb
(bad)
int3
adc
pushf
and
aas
loope
loop
xchg
cmp
sub
sbb
or
cld
inc
in
jb
(bad)
int3
adc
and
repz
jecxz
xchg
cmp
mov
mov
adc
and
pop
jecxz
imul
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
add
jg
outs
mov
mov
das
jno
popa
iret
push
inc
xor
jae
sub
shr
mov
das
jno
popa
iret
push
inc
xor
imul
and
dec
sar
outs
mov
mov
das
jno
popa
iret
push
inc
xor
sub
sub
jo
add
xor
jle
dec
loopne
lock
push
mov
(bad)
push
into
pusha
fidiv
add
xor
jle
dec
loopne
lock
push
mov
(bad)
push
into
pusha
fidiv
add
xor
jle
dec
loopne
lock
push
mov
call
popa
fbstp
add
xor
jg
dec
loope
icebp
das
cmp
lods
mov
call
popa
fbstp
add
xor
jg
dec
loope
icebp
das
cmp
scas
fild
push
int3
(bad)
fdiv
add
ins
ret
dec
loop
repnz
cmp
or
sbb
out
cld
push
int3
(bad)
fdiv
add
ins
ret
dec
loop
repnz
cmp
or
sbb
jmp
(bad)
fdiv
add
ins
ret
dec
loop
repnz
cmp
or
sbb
jmp
arpl
jae
add
xor
jge
dec
jecxz
repz
mov
std
push
int
fnsave
add
xor
jge
dec
jecxz
repz
mov
std
push
int
fnsave
add
outs
sar
jecxz
repz
mov
std
push
int
fnsave
add
push
pop
test
jecxz
repz
mov
std
push
int
fnsave
add
jae
cmp
ja
pop
repz
mov
std
push
int
fnsave
add
jb
cmp
retf
pop
repz
mov
std
push
int
fnsave
add
jb
cmp
stos
imul
or
inc
stc
push
leave
fnstenv
pop
adc
fdiv
xchg
xchg
or
xchg
or
neg
imul
pop
les
jnp
mov
cdq
add
das
ret
aaa
cdq
pop
test
neg
imul
pop
jmp
inc
sbb
scas
adc
daa
mov
cdq
pop
test
neg
imul
popa
cld
push
jmp
mov
daa
mov
cdq
pop
test
neg
imul
(bad)
cld
push
out
imul
lahf
cmp
sub
sub
pop
mov
(bad)
imul
fs
push
out
addr16
jns
cmp
sub
mov
cdq
pop
test
neg
imul
arpl
push
in
addr16
ja
cmp
mov
cdq
pop
test
neg
imul
push
addr16
ja
ss
mov
mov
cdq
pop
test
neg
imul
imul
loopne
addr16
ja
ss
es
mov
cdq
pop
test
hlt
pop
les
jp
or
xor
cmp
sub
adc
jecxz
lock
shr
mov
pop
std
sub
cmp
and
adc
shr
mov
inc
(bad)
outs
add
cmp
and
adc
shr
mov
inc
std
push
or
aaa
les
mov
sahf
add
lock
shr
mov
inc
stc
push
or
sub
and
adc
shr
mov
inc
stc
push
or
pop
(bad)
and
adc
shr
mov
dec
cmc
push
or
push
(bad)
and
adc
shr
mov
dec
lock
or
mov
xor
fisttp
pop
shr
mov
dec
not
inc
xchg
adc
and
adc
cld
push
in
inc
pushf
xor
cmp
pop
mov
sbb
or
cmp
sub
fdiv
(bad)
cld
push
in
inc
pushf
xor
aas
pop
icebp
sub
sbb
or
cmp
sub
fidiv
(bad)
cld
push
in
inc
pushf
xor
aas
pop
repnz
mov
sbb
or
cmp
sub
fdiv
(bad)
cld
push
in
inc
pushf
xor
aas
pop
repnz
mov
sbb
or
cmp
sub
fdiv
(bad)
cld
push
in
inc
pushf
xor
aas
pop
lock
sbb
or
cmp
sub
fdiv
arpl
push
in
inc
popf
xor
add
mov
sbb
xchg
sub
arpl
push
in
inc
popf
xor
je
mov
mov
sbb
xchg
sub
arpl
push
in
inc
popf
xor
pop
add
sub
sbb
xchg
sub
arpl
push
in
inc
popf
xor
pop
add
pop
ret
or
adc
leave
addr16
push
jmp
jg
dec
icebp
pop
add
fs
sbb
sub
neg
dec
xchg
cmp
pop
add
imul
mov
es
js
push
xchg
cmp
pop
add
enterw
test
cwde
es
js
push
xchg
cmp
inc
out
pop
loopne
fsub
push
mov
es
js
push
xchg
cmp
add
dec
in
fsub
push
mov
es
js
push
xchg
cmp
or
inc
call
push
mov
es
jns
imul
cmp
or
inc
jmp
pop
mov
daa
mov
jns
imul
cmp
or
inc
jmp
pop
mov
daa
mov
jp
push
pop
in
xchg
cmp
push
cli
inc
jmp
add
xor
and
sar
push
pop
in
xchg
cmp
push
cli
inc
jmp
add
xor
and
mov
pop
in
xchg
cmp
or
inc
jmp
(bad)
adc
fwait
and
imul
in
xchg
cmp
or
inc
jmp
(bad)
adc
fwait
and
ins
repnz
loop
xchg
cmp
sub
sbb
or
cld
inc
in
jb
(bad)
int3
adc
mov
pop
loop
xchg
cmp
sub
sbb
or
cld
inc
in
jb
(bad)
int3
adc
xchg
sub
dec
xchg
cmp
sub
sbb
or
cld
inc
in
jb
(bad)
int3
adc
cli
or
sub
mov
in
jb
(bad)
int3
adc
aad
sub
ins
repz
jecxz
xchg
cmp
mov
in
jae
arpl
adc
inc
fiadd
pop
jecxz
xchg
cmp
mov
in
jae
arpl
adc
jnp
sub
jecxz
xchg
cmp
mov
in
jae
arpl
adc
jno
jle
outs
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
rcr
loopne
nop
sbb
push
mov
fidiv
pusha
mov
xor
mov
sub
add
pop
mov
lea
cs
bound
imul
mov
xchg
daa
nop
dec
lods
dec
cmc
retw
les
and
sahf
jno
gs
inc
imul
or
sbb
pop
out
push
jle
mov
jbe
adc
xchg
bound
in
or
cmp
sub
in
xchg
xchg
dec
jecxz
mov
(bad)
push
sbb
std
in
dec
sahf
jmp
fbstp
pop
into
xchg
cmps
push
in
adc
mov
out
mov
push
mov
inc
mov
xchg
ins
push
clc
push
jp
inc
outs
shr
dec
push
jl
cdq
cmp
dec
mov
mov
pop
rcl
aam
push
mov
cmps
adc
mov
fimul
cmp
push
iret
popa
jnp
xchg
xor
pusha
push
mov
jg
and
arpl
lahf
push
xor
dec
scas
into
pusha
fidiv
jle
das
stos
mov
repnz
xor
lock
gs
dec
loope
les
das
jo
nop
psllq
outs
sar
adc
push
test
fld
fistp
popa
out
call
pop
mov
nop
sbb
scas
repnz
ja
push
inc
mov
xchg
push
cmp
sub
dec
or
mov
in
call
dec
loope
add
xchg
pusha
xor
nop
rcl
cmc
dec
mov
sar
loope
dec
scas
add
adc
mov
nop
cmpps
jle
sbb
cmp
shl
push
call
call
ins
int3
jns
jae
pop
rol
repnz
cmp
mov
mov
lea
test
push
mov
jne
adc
inc
cmp
cdq
sbb
and
add
(bad)
sbb
or
jae
ins
repnz
arpl
mov
das
ror
mov
popf
jb
aaa
lock
iret
and
pop
mov
sbb
(bad)
sbb
and
ja
jp
lea
pusha
stos
adc
bswap
sbb
scas
inc
adc
and
push
mov
jmp
fdiv
jge
adc
fimul
sbb
cmp
push
loop
mov
fwait
jb
and
(bad)
iret
js
inc
lods
add
loop
xchg
outs
xchg
inc
loopne
hlt
fidivr
fidiv
add
sub
scas
gs
dec
lods
sbb
push
pop
icebp
dec
loope
adc
and
push
jmp
xchg
sub
jp
push
pop
icebp
dec
loope
adc
and
push
jmp
xchg
sub
jp
push
pop
icebp
dec
loope
adc
and
push
jmp
xchg
sub
jp
push
pop
icebp
dec
loope
adc
and
push
jmp
xchg
sub
jp
push
pop
icebp
dec
loope
adc
and
push
jmp
xchg
sub
jp
push
pop
icebp
dec
loope
adc
and
push
jmp
xchg
sub
jp
push
pop
icebp
dec
loope
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
push
push
call
mov
pop
ret
nop
nop
mov
sub
push
push
push
push
mov
call
mov
push
call
lea
push
call
push
push
call
mov
add
ret
nop
nop
nop
nop
nop
mov
sub
push
push
push
push
push
call
lea
push
call
mov
cmp
je
test
je
call
mov
push
push
push
push
xor
mov
push
push
push
push
push
mov
call
mov
mov
push
push
mov
call
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
mov
call
mov
push
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
cmp
jle
call
push
call
mov
add
mov
add
mov
xor
mov
mov
cmp
jne
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
call
test
jne
ret
push
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
mov
or
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
je
xor
jmp
or
jmp
push
push
push
push
call
mov
add
cmp
jge
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
test
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
pop
test
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
test
inc
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
mov
sub
mov
push
xor
push
test
push
mov
mov
je
mov
mov
jmp
and
mov
mov
test
jne
test
jne
cmp
je
or
push
mov
pop
and
sub
je
dec
je
dec
je
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
or
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
and
mov
jmp
push
push
push
lea
push
push
push
push
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
and
mov
jne
test
je
test
je
push
push
push
call
add
cmp
mov
jne
cmp
je
jmp
and
lea
push
push
push
call
add
test
jne
cmp
jne
push
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmp
jne
test
je
mov
or
lea
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
mov
push
mov
cmp
jne
cmp
ja
push
call
test
pop
je
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
cmp
ja
mov
shr
push
call
test
pop
jne
jmp
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
push
mov
push
push
mov
test
je
mov
cmp
jne
push
call
pop
test
push
je
push
call
pop
pop
jmp
cmp
jne
lea
push
lea
push
push
call
add
test
je
push
push
push
call
add
jmp
push
push
push
call
pop
leave
ret
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sub
lods
ins
inc
add
ins
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
outs
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
outs
inc
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
outs
inc
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movs
outs
inc
add
inc
add
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
jo
add
jo
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
dec
nop
nop
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
mov
imul
cmp
push
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
mov
pop
test
jne
jmp
cmp
jne
cmp
ja
mov
shr
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
jmp
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
test
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmp
jne
mov
or
push
push
call
pop
pop
jmp
jge
push
push
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
mov
call
mov
push
push
push
call
add
mov
pop
jmp
mov
or
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
and
mov
cmp
mov
je
test
jne
test
je
mov
cmp
je
dec
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
test
jne
call
push
pop
cmp
jne
mov
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmp
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
dec
cmp
jae
mov
inc
cmp
jne
add
jmp
mov
inc
mov
jmp
lea
push
push
inc
lea
push
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
mov
cmp
je
mov
mov
inc
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
test
je
add
jmp
or
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
add
lea
lea
mov
cmp
jae
and
or
mov
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
and
mov
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
xchg
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
xchg
inc
add
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
xchg
inc
add
xchg
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
inc
add
xchg
inc
add
xchg
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmp
jne
or
neg
sbb
mov
and
add
pop
ret
mov
jmp
mov
or
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
int3
jmp
