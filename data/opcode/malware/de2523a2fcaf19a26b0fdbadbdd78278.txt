xor
add
dec
add
add
add
add
add
add
add
add
push
push
and
add
pop
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
cmps
sbb
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
movs
push
inc
mov
das
add
add
add
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
inc
add
je
je
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
or
add
mov
inc
or
add
or
add
add
add
add
push
iret
jg
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
push
dec
push
inc
sbb
test
pushf
and
mov
call
clc
jae
clc
pushf
gs
mov
dec
add
lea
xchg
mov
mov
jnp
out
outs
cld
ins
push
push
mov
into
shr
(bad)
dec
repz
cmp
arpl
push
and
(bad)
sti
(bad)
call
clc
(bad)
jmp
cld
(bad)
lock
dec
xor
out
in
in
into
push
or
int3
fwait
sub
add
cli
retf
inc
inc
xchg
jb
scas
outs
cli
mov
sbb
cs
xchg
rcl
xor
cli
fcom
mov
jae
outs
aad
mov
fsubp
faddp
(bad)
mov
jp
int3
dec
fidivr
mov
test
xor
scas
dec
mov
movs
pushf
dec
ins
mov
into
(bad)
jns
imul
mov
mov
lods
(bad)
ins
xlat
into
(bad)
into
mov
fcmovne
fstp
jg
adc
aad
mov
stc
dec
cmps
clc
(bad)
(bad)
into
outs
fs
imul
mov
jle
jno
adc
push
aad
mov
dec
cmp
jns
(bad)
xchg
dec
stos
int3
(bad)
fcom
sahf
inc
mov
mov
inc
stos
mov
mov
hlt
shl
inc
pop
mov
pop
(bad)
jmp
daa
inc
mov
inc
retf
ins
int
mov
mov
gs
movs
dec
cwde
out
retf
stc
push
popa
jnp
retf
nop
cmp
sub
cmp
aaa
dec
cmps
ficom
inc
push
aas
push
repnz
mov
add
add
test
mov
and
jl
imul
jnp
aam
retf
out
dec
push
inc
sbb
mov
jae
imul
clc
div
jns
jmp
push
adc
out
repz
push
mul
cdq
test
aam
sub
xchg
not
imul
mov
lods
movs
movs
movs
pushf
pushf
pushf
xchg
movs
pushf
xchg
(bad)
(bad)
(bad)
(bad)
xchg
xchg
mov
(bad)
(bad)
test
test
mov
mov
lods
lods
lods
mov
into
(bad)
mov
mov
(bad)
(bad)
movs
lods
movs
lods
lods
pushf
mov
(bad)
pushf
pushf
pushf
movs
movs
movs
xchg
xchg
xchg
movs
pushf
pushf
(bad)
into
into
test
xchg
xchg
mov
mov
lods
pushf
mov
xchg
popf
mov
movs
xchg
xchg
(bad)
(bad)
movs
lods
lods
shl
mov
xchg
mov
or
test
shl
inc
or
(bad)
mov
lods
xchg
pushf
mov
mov
or
push
mov
sahf
test
push
fistp
mov
pushf
loop
jecxz
mov
movs
mov
rol
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jno
push
pop
je
dec
dec
cmp
ins
cs
outs
bound
js
jo
add
add
cmp
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
aaa
cmp
xor
sub
xor
xor
das
xor
das
xor
sub
aaa
cmp
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
jo
dec
cmp
imul
outs
arpl
outs
je
inc
cmp
cs
popa
xor
cmp
sub
sub
sub
fs
popa
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
xor
xor
xor
inc
cmp
cmp
inc
cmp
xor
and
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
xor
xor
inc
xor
xor
xor
cmp
cmp
inc
cmp
xor
and
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
inc
and
push
imul
and
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
bound
cmp
sub
sub
sub
sub
cmp
xor
and
jae
push
data16
jne
outs
je
inc
cmp
cs
popa
xor
cmp
sub
sub
sub
fs
popa
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
ds
mov
outs
add
stc
or
inc
inc
push
js
mov
in
das
push
mov
add
jnp
sub
sub
and
push
adc
(bad)
mov
movs
sbb
push
sub
in
push
lods
mov
jmp
sbb
pop
sbb
inc
sbb
lea
sbb
js
sar
push
mov
out
xor
jae
jns
cmps
sti
fst
imul
xlat
jge
xchg
fidivr
push
out
adc
ins
popf
fdivr
pop
xchg
(bad)
fnstsw
cmp
push
ins
out
sbb
add
dec
add
loope
lea
mov
jmp
xchg
mov
xchg
push
pop
repnz
xchg
xchg
xchg
push
pop
ss
xor
les
xor
jno
frstpm(287
(bad)
mov
test
ins
imul
addr16
jmp
iret
loope
xor
add
outs
jmp
pop
(bad)
add
sahf
mov
adc
mov
shl
cmp
pop
call
dec
mov
push
std
jp
mov
test
inc
daa
or
xchg
movs
inc
xchg
cmp
jne
(bad)
(bad)
in
sbb
jae
iret
mov
(bad)
(bad)
mov
(bad)
mov
loop
dec
jnp
aaa
mov
(bad)
mov
sbb
loop
mov
pop
or
push
jle
jbe
ds
mov
push
icebp
sar
mov
in
xchg
clc
fistp
iret
in
jle
cs
xor
test
sbb
mov
sahf
or
jno
inc
fcmove
pop
jno
cld
ins
jae
xor
pop
lock
mov
add
cwde
push
mov
scas
pushf
hlt
in
or
mov
cs
clc
dec
cmp
test
jmp
cld
push
jbe
jmp
in
or
mov
mov
add
add
bound
push
push
shl
mov
add
pop
sub
mov
adc
adc
dec
fisttp
enter
and
pop
mov
sub
jno
mov
mov
xchg
mov
or
xchg
aaa
push
fidivr
cld
sbb
std
repz
shl
mov
mov
in
inc
cmp
(bad)
call
clc
push
push
pop
push
inc
push
jecxz
pop
popa
inc
jns
dec
ja
fsub
pop
and
mov
mov
(bad)
xchg
call
mov
jns
out
xchg
mov
jo
sbb
in
inc
jmp
xor
out
push
clc
fmul
scas
xchg
jae
jl
jbe
sub
add
jmp
mov
add
ret
dec
sbb
ret
dec
nop
inc
jmp
sub
clc
lds
rcr
inc
push
cmp
arpl
sbb
and
adc
cmp
sub
call
sbb
mov
leave
push
xchg
int
rcl
push
test
add
pop
cmp
imul
or
inc
pop
xor
aad
sbb
(bad)
xchg
mov
mov
out
cmp
(bad)
dec
test
aas
bound
or
psubsw
xchg
xchg
ret
sub
dec
push
icebp
shl
inc
aam
xchg
push
nop
jmp
jle
xchg
mov
pop
lea
sahf
adc
or
and
add
sbb
int
mov
fld
sbb
lea
or
add
(bad)
ins
ficom
sar
jo
arpl
adc
sub
out
push
mov
inc
mov
xchg
into
clc
jmp
xor
dec
cmp
fisubr
sbb
add
rol
pop
and
hlt
adc
adc
pop
lahf
sub
adc
and
imul
inc
outs
push
sti
push
loopne
mov
test
pop
or
movs
imul
jmp
mul
pop
or
cmp
pop
rol
jne
dec
cld
xlat
sbb
sahf
lea
or
(bad)
adc
gs
mov
movs
add
mov
push
push
push
mov
jae
dec
add
inc
adc
or
sub
push
inc
pop
stos
imul
mov
xchg
cmps
inc
lds
adc
or
inc
enter
lea
jno
mov
nop
dec
add
je
sub
push
mov
fisttp
fnstenv
or
pop
cmp
out
shl
ret
mov
out
dec
movs
jno
cmp
xchg
(bad)
cmp
aaa
test
sub
in
jnp
xchg
in
lds
jmp
jb
cs
into
out
cmp
sbb
sub
outs
push
rcl
fadd
xor
sbb
mov
cmps
jne
aad
cmp
cmp
mov
pop
mov
stos
xchg
fs
mov
aad
rcpps
cli
or
(bad)
jecxz
lods
movs
add
arpl
jb
test
or
arpl
les
ret
inc
or
mov
add
inc
std
shl
push
sahf
repnz
jge
xchg
jb
call
shl
xchg
mov
sahf
ja
pop
cmp
test
dec
mov
pop
ret
cmp
inc
add
jmp
enter
nop
fadd
adc
adc
shl
sbb
sub
int3
pop
mov
xchg
movs
(bad)
test
or
xchg
inc
push
jnp
sub
jo
inc
and
adc
sbb
(bad)
mov
pop
push
bound
sub
(bad)
int3
mov
add
xchg
sahf
adc
sbb
cmp
mov
shl
lods
scas
cmp
lock
adc
pop
rcl
pop
push
push
add
call
movs
pushf
and
push
data16
jl
lea
fnop
dec
repnz
fisub
ja
aam
ds
cmps
rol
pop
cmp
dec
jmp
cmp
stos
or
test
daa
add
push
stc
aas
mov
mov
push
jmp
fisubr
addr16
rcr
add
sahf
in
and
out
mov
add
push
or
int
and
pushw
(bad)
cdq
mov
mov
mov
ss
stos
daa
pusha
call
mov
rcl
dec
mov
arpl
movs
mov
pop
adc
mov
pop
aam
mov
sbb
jo
mov
pop
sti
cmp
clc
icebp
(bad)
jg
js
mov
mov
stc
or
push
(bad)
mov
inc
rol
retf
mov
mov
xchg
fisub
mov
mov
scas
inc
mov
mov
dec
mov
cmp
inc
lods
sbb
and
sti
icebp
pop
popf
pop
adc
in
cmp
rcr
stos
pop
pop
mov
inc
cwde
dec
mov
mov
in
imul
int
call
and
int3
pusha
push
movs
je
mov
adc
out
int
or
test
add
leave
pop
jb
enter
xor
pop
xchg
mov
inc
or
ins
ja
test
mov
push
lods
mov
mov
(bad)
adc
dec
in
xlat
mov
loopne
push
jmp
cmp
jmp
ds
sbb
mov
lods
xchg
mov
adc
and
xor
adc
mov
and
shr
rol
and
jmp
push
xor
push
dec
int3
arpl
ins
int
push
cvtpi2ps
outs
pop
mov
stc
jnp
cmp
or
adc
mov
gs
jecxz
dec
nop
mov
lods
nop
inc
xchg
mov
into
mov
(bad)
fs
ja
add
int3
xor
sub
clc
inc
mov
mov
popf
ret
imul
stc
arpl
push
cmp
adc
stos
and
ins
outs
mov
add
and
and
push
icebp
fst
dec
mov
lock
fist
adc
mov
sub
mov
test
jecxz
cli
cmp
and
or
jo
and
scas
loope
loopne
pop
inc
xor
mov
jmp
mov
es
mov
jo
inc
jmp
in
sbb
push
sbb
lock
and
mov
iret
ds
out
pop
(bad)
clc
pop
cmp
jns
ret
mov
inc
dec
pop
test
or
mov
and
adc
sbb
and
push
xor
jns
les
pop
jns
fst
cs
mov
repnz
outs
ins
mov
(bad)
enter
int
ret
xchg
inc
xchg
push
push
xchg
cmps
rol
dec
pushf
mov
and
leavew
jmp
dec
mov
arpl
adc
dec
cmp
jle
sahf
loope
dec
push
adc
rcl
xor
pop
and
leave
mov
mov
cmp
call
cwde
xor
mov
in
mov
cmp
or
popa
xchg
lods
sbb
push
in
stos
dec
jb
jl
(bad)
pop
sub
fcom
mov
in
push
cld
sub
loope
jecxz
sbb
repz
pop
adc
inc
outs
js
(bad)
aaa
mov
stc
out
jmp
loope
pop
cmc
lock
daa
fnstsw
das
lahf
mov
add
push
dec
mov
or
cli
xchg
or
xchg
adc
xor
dec
inc
pop
mov
sbb
scas
xchg
int3
jo
movs
cmp
shr
or
push
mov
int
push
ret
xchg
cmps
fucomi
loopne
push
dec
sbb
daa
adc
add
sub
pop
ins
add
mov
adc
mov
scas
imul
or
movs
fmul
cmps
ss
inc
aad
push
sbb
repz
in
dec
iret
push
ja
dec
cmp
in
cwde
add
jmp
sbb
movs
push
fwait
adc
cmp
xchg
arpl
scas
ret
xchg
aas
mov
aas
mov
and
lods
mov
int3
xchg
pop
rcl
imul
or
jecxz
cmp
sub
clc
es
loope
int
or
lods
pop
loop
pop
dec
cld
pop
jmp
ds
repnz
xchg
adc
ins
and
inc
adc
daa
fnstcw
scas
inc
mov
iret
data16
push
pushf
mov
add
pop
pop
jg
daa
ins
xchg
dec
lea
in
sub
daa
ss
xchg
es
fs
ret
test
or
fsubr
cld
(bad)
inc
outs
pop
inc
pop
sbb
fstp
(bad)
and
pop
jns
sahf
inc
ret
mov
loopne
(bad)
dec
outs
add
ja
mov
scas
adc
inc
adc
fwait
mov
push
or
fldcw
sti
mov
add
sbb
jo
and
adc
addr16
fnstsw
add
mov
pop
jb
cmp
call
jmp
xchg
jmp
mov
jns
adc
inc
add
xchg
jecxz
push
add
les
dec
mov
call
jae
mov
in
scas
aam
movs
sbb
std
or
cmps
or
fldlg2
or
jb
std
adc
adc
push
test
adc
mov
repnz
mov
fwait
adc
jp
xor
outs
fdivrp
es
and
dec
push
ret
push
pop
shl
imul
mul
mov
jmp
adc
mov
xchg
aad
or
pop
idiv
push
je
adc
stos
push
(bad)
(bad)
loopne
jno
jp
or
sbb
cli
xchg
les
iret
and
push
das
pop
aaa
imul
or
int3
mov
pop
cmp
add
and
adc
adc
dec
and
push
dec
cmp
scas
mov
ror
ret
xchg
or
scas
jl
lea
pop
adc
pop
jmp
test
(bad)
sub
clc
out
lds
dec
(bad)
dec
jne
mov
sbb
daa
(bad)
inc
jge
mov
ret
add
or
mov
pop
and
xchg
test
sub
cmp
test
mov
jg
scas
cmp
es
mov
or
or
sbb
and
jae
sub
xchg
imul
cmp
aaa
and
xchg
std
icebp
jecxz
shl
pop
xchg
sub
loope
(bad)
add
cmp
mov
sub
fadd
rcr
mov
in
ja
jb
loop
pop
jp
pop
cdq
push
add
xchg
sti
jmp
fdivr
popf
ja
jmp
imul
es
std
(bad)
jmp
ret
xor
add
lods
daa
gs
aaa
xor
add
aam
leave
xchg
outs
retf
xchg
mov
(bad)
into
dec
mov
xchg
lods
not
push
test
arpl
imul
rol
call
es
movs
xchg
iret
sbb
jmp
cmp
inc
fmul
xor
adc
add
out
pop
xchg
jne
out
sbb
push
push
out
imul
and
push
mov
mov
jne
add
hlt
outs
(bad)
pushf
loope
fwait
popa
out
jle
xor
jge
lds
push
pop
inc
jb
int3
cmps
pop
cmp
mov
adc
cmp
pop
ins
cld
mov
mov
inc
out
mov
dec
xchg
or
xor
adc
and
lahf
xchg
hlt
add
stos
mov
fimul
cwde
sbb
cmp
int
pop
es
in
inc
arpl
outs
lods
bnd
test
scas
mov
adc
fwait
daa
enter
sub
cmp
or
in
mov
cmp
shr
mov
and
or
clc
add
sbb
inc
movs
stos
mov
sbb
and
mov
sahf
xor
jecxz
mov
sbb
loop
inc
xchg
int
rcr
fnstenv
jp
dec
or
sub
sar
(bad)
dec
jge
rcr
ja
pop
push
nop
dec
or
mov
xchg
sub
push
push
push
xchg
adc
lods
bound
movs
out
iret
push
nop
jbe
push
and
std
pushf
push
mov
es
lods
aas
dec
add
stc
mov
scas
push
or
pushf
loope
(bad)
js
and
xor
or
xchg
jecxz
ret
bound
out
mov
sub
xchg
and
scas
test
jp
or
xor
sbb
push
mov
cmc
pop
jmp
stos
sub
or
ds
lds
sbb
cmp
fiadd
adc
retf
push
jge
sbb
out
fistp
xchg
mov
loope
pop
cwde
xor
pop
daa
dec
jg
jae
sub
pop
dec
mov
jne
mov
je
jae
pop
addr16
and
sub
xchg
into
mov
mov
imul
stos
mov
test
cli
mov
cwde
mov
cs
xchg
movs
adc
or
or
and
in
mov
dec
add
xlat
ficom
mov
or
push
push
mov
les
ja
sub
jns
push
lock
outs
pusha
push
(bad)
es
loop
jae
in
jns
stos
leave
xchg
push
ds
test
dec
and
sbb
repnz
ins
sub
xchg
call
pop
mov
mov
jmp
xchg
cmp
test
movs
and
or
adc
imul
leave
pushf
test
inc
(bad)
je
pop
push
test
push
into
inc
or
or
adc
or
in
ror
xchg
mov
xor
push
xchg
sbb
cmps
(bad)
cld
push
mov
retf
jl
adc
dec
xchg
xchg
push
repz
inc
mov
and
xor
mov
mov
test
aad
mov
shr
adc
pmaxub
cmp
mov
dec
mov
adc
fs
mov
movs
adc
adc
pop
inc
scas
retf
mov
push
inc
mov
rol
mov
adc
stos
adc
xor
mov
out
xor
adc
jns
into
arpl
mov
add
idiv
sub
xor
pop
sar
pop
and
test
dec
and
cmps
mov
repnz
arpl
out
ins
mov
inc
pop
sub
adc
xchg
scas
adc
push
adc
lahf
repnz
pop
mov
je
ret
inc
repnz
(bad)
push
ja
mov
xchg
push
fiadd
and
pop
shl
mov
rcr
ins
and
push
rcr
inc
loope
add
inc
dec
add
mov
in
ret
cmps
jge
sub
dec
adc
cwde
push
mov
test
xchg
daa
xor
je
add
mov
iret
sbb
sub
fadd
xlat
fidiv
cld
pop
jl
mov
mov
mov
push
int
dec
cli
pop
lock
jp
adc
or
mov
add
and
daa
and
xor
and
ins
xchg
dec
(bad)
stc
out
inc
stc
lock
mov
mov
jg
inc
wbinvd
xor
mov
jmp
aam
pop
or
or
cmp
sub
data16
jne
mov
jmp
push
aas
push
mov
repnz
(bad)
int
cmps
mov
jmp
scas
xor
mov
loopne
inc
xchg
inc
mov
fiadd
fwait
xor
clc
ret
jne
mov
xlat
fidiv
test
cs
das
mov
or
rol
xlat
ficomp
(bad)
mov
call
cmp
xchg
dec
jnp
popf
xchg
add
xchg
cmc
iret
dec
or
xchg
and
scas
(bad)
adc
inc
or
push
push
push
dec
xchg
adc
inc
(bad)
cld
enter
inc
(bad)
or
enter
add
add
xchg
jp
sbb
test
push
push
mov
sub
push
scas
(bad)
ret
movs
jno
dec
retf
call
call
mov
pop
aaa
mov
pop
jl
lock
sti
repz
ins
les
pop
mov
jmp
jmp
scas
mov
mov
out
stc
dec
mov
dec
std
cdq
pop
ret
push
out
test
push
rcl
scas
dec
inc
enter
cmp
fadd
push
adc
lahf
aad
(bad)
xchg
je
rcl
cwde
icebp
mov
sahf
hlt
hlt
push
or
fisubr
xchg
sub
adc
mov
push
movs
in
in
popf
out
mov
jmp
jo
and
daa
inc
call
push
and
mov
aad
mov
mov
in
pop
jno
shr
adc
mov
add
sti
mov
pop
xchg
aaa
bnd
push
cld
gs
or
jl
pushf
test
jbe
sbb
mov
outs
mov
or
jg
addr16
xlat
out
pop
jl
test
jmp
sti
(bad)
retf
push
mov
movs
jmp
call
dec
nop
dec
call
cmp
inc
sbb
repz
cwde
add
stc
shl
mov
jbe
adc
pop
aad
(bad)
lds
dec
xor
stos
fadd
and
adc
xchg
cmc
and
fnstenv
inc
mov
push
push
in
mov
das
lahf
or
stos
test
test
mov
push
loope
mov
mov
shl
popf
xchg
or
in
retf
xchg
jecxz
mov
daa
dec
mov
mov
xchg
sub
ror
dec
mov
movs
lea
mov
add
or
push
mov
sub
pop
jge
fnsave
adc
xchg
jnp
lock
jns
jge
fwait
je
mov
fld
out
xor
retf
add
push
(bad)
lock
inc
adc
fnstsw
push
inc
adc
sub
push
stos
xor
test
int3
hlt
retf
inc
cmc
push
jb
in
cmps
cli
xor
call
sub
dec
pop
push
inc
and
int3
and
pop
push
xchg
ja
xlat
ret
sub
imul
int3
mov
push
ds
adc
ret
sub
lods
mov
or
jmp
sub
adc
sbb
retf
jb
cmp
cwde
mov
xor
(bad)
ja
fistp
out
mov
in
out
je
cmp
lods
cmp
test
push
test
loope
bound
les
xlat
jge
sbb
cmps
dec
pop
cmp
dec
aam
mov
imul
jbe
(bad)
fwait
cmps
mov
mov
mov
sbb
pop
jne
popf
or
mov
add
sub
mov
push
nop
leave
arpl
jmp
sub
add
stos
sbb
mov
aas
ficomp
xor
loope
test
add
jl
and
push
adc
(bad)
push
mov
mov
adc
jp
xchg
sub
shl
mov
fistp
mov
push
outs
test
movs
je
push
(bad)
(bad)
sub
cdq
add
push
cmp
fld
mov
in
sar
aad
dec
add
popf
or
cli
(bad)
ja
je
in
repnz
mov
hlt
mov
fist
xchg
popa
and
(bad)
repnz
cmp
inc
adc
inc
out
adc
jae
loop
jle
ret
pop
jne
jnp
imul
pop
add
cmp
cwde
inc
in
stos
sbb
rcr
dec
rol
xor
out
loope
push
push
pop
cmp
(bad)
scas
cmp
mov
or
sub
jbe
ins
push
in
ret
into
and
fiadd
xlat
inc
out
or
push
or
dec
stc
adc
movs
lea
inc
or
and
xor
push
test
mov
outs
leave
out
xlat
test
fdiv
sbb
out
mov
mov
in
or
outs
push
fist
loope
and
cmp
jge
fwait
(bad)
out
ss
sub
fidiv
or
inc
xlat
test
or
inc
paddusw
jb
fcomi
lds
arpl
das
mov
cmps
ds
stos
(bad)
push
icebp
sar
xchg
les
mov
mov
outs
or
xor
add
(bad)
icebp
loop
stos
mov
add
cmc
adc
xlat
aam
jge
mov
dec
and
dec
shr
push
xchg
dec
popa
xchg
mov
jne
adc
mov
lods
into
push
dec
mov
test
in
pop
call
mov
mov
and
jb
ficom
xchg
movs
mov
adc
xor
test
xchg
(bad)
sub
pop
jecxz
add
inc
mov
sbb
mov
pop
mov
mov
sub
fidiv
cld
jmp
ret
ja
addr16
push
push
add
sub
inc
ins
movs
adc
mov
aaa
cmp
mov
jne
stos
push
stos
scas
mov
pop
mov
push
out
mov
ds
mov
mov
push
xchg
lea
(bad)
mov
lods
and
out
push
mov
loope
inc
or
or
cmp
mov
mov
data16
dec
push
punpckldq
mov
add
faddp
and
mov
arpl
and
sbb
adc
add
pop
jns
dec
(bad)
in
inc
sbb
xchg
fnstenv
shl
pusha
imul
in
add
and
mov
dec
adc
enter
icebp
mov
cmp
les
arpl
xchg
jp
xchg
leave
outs
repnz
lock
icebp
mov
sub
or
fistp
cld
loop
(bad)
xchg
mov
fsubr
(bad)
fldcw
and
xor
mov
jle
aad
mov
idiv
sbb
retf
push
pop
mov
imul
dec
adc
pop
scas
pop
mov
loop
add
xchg
lock
push
push
into
adc
clc
cmps
sub
adc
inc
clc
ret
dec
add
dec
call
pop
mov
out
mov
mov
outs
(bad)
ror
adc
cs
pop
xchg
mov
and
lods
outs
(bad)
mov
mov
adc
scas
out
int
mov
mov
add
mov
data16
(bad)
movs
rcl
stos
mov
or
sub
fisub
nop
ins
fs
xor
xor
(bad)
and
lods
iret
(bad)
jmp
pop
jl
push
aaa
je
xchg
outs
push
and
out
lock
movntq
shl
cld
test
jp
fdivp
aad
mov
mov
(bad)
push
xlat
add
(bad)
cwde
popf
ja
movs
or
jg
fucom
outs
scas
mov
push
mov
jg
xchg
cmp
imul
xlat
fld
push
out
ja
outs
sbb
shr
nop
js
pop
mov
pop
mov
aam
cld
xchg
stos
outs
cwde
mov
pop
jae
adc
or
push
daa
ins
test
or
fcomp
dec
inc
push
push
sbb
xchg
and
nop
ss
jb
and
fidivr
ds
repnz
adc
and
pushf
and
cmp
jmp
lods
imul
mov
sbb
cld
(bad)
sub
adc
dec
add
mov
int3
mov
pop
push
push
jg
pusha
jp
adc
out
inc
clc
cs
mov
jg
mov
repz
xchg
sbb
fild
mov
in
xchg
pop
mov
mov
lods
mov
ret
sti
rol
inc
fisub
ins
pop
scas
cmp
sbb
dec
and
rol
push
mov
push
cmps
hlt
xchg
inc
movs
xor
imul
clc
inc
stos
sub
loopne
xor
push
jns
lods
ret
fisttp
adc
or
adc
adc
jnp
mov
ds
jg
inc
or
mov
popf
mov
stos
cdq
gs
inc
push
hlt
scas
mov
mov
jl
popf
pop
fsubrp
pop
jno
xchg
dec
rcr
fistp
retf
adc
jno
jmp
dec
adc
push
es
std
loopne
outs
jmp
icebp
lds
cmp
inc
sub
pop
out
ror
push
jp
mov
push
stos
add
in
paddsw
mov
inc
push
scas
call
push
fistp
out
mov
loope
cdq
jmp
push
mov
gs
aam
and
mov
daa
daa
shl
jecxz
mov
and
inc
and
mov
xchg
push
xchg
(bad)
enter
icebp
or
pop
pop
dec
push
adc
pusha
mov
je
jo
inc
shl
xchg
aad
imul
cwde
(bad)
fisub
fldcw
fild
and
mov
mov
ror
cmps
enter
lea
bound
cmc
loopne
imul
add
sub
sbb
fnstsw
int3
(bad)
dec
jb
mov
loope
dec
out
jge
retf
jmp
mov
fwait
imul
outs
jg
nop
inc
mov
pop
add
mov
xor
fbld
push
pop
pop
jl
fst
lods
outs
call
pop
fidiv
in
fistp
out
pop
xor
or
(bad)
ret
xchg
shl
or
mov
loope
mov
movs
inc
push
cmps
inc
mov
pop
add
(bad)
xchg
and
add
mov
cmps
lahf
pop
pop
inc
add
dec
pop
sbb
inc
push
xchg
push
int3
mov
mov
adc
stos
mov
repz
inc
lock
jno
mov
and
aas
fisubr
pop
xchg
cld
and
mov
mov
and
mov
sbb
sbb
jae
clc
inc
jle
push
push
xor
sar
cmc
ins
pop
sub
sbb
cmp
ss
inc
clc
movs
ret
das
outs
repnz
mov
xchg
jle
cdq
pop
pop
jl
cdq
push
pop
jne
pop
adc
(bad)
loope
add
fcmovnb
xor
sti
in
sbb
mov
inc
xchg
aaa
lods
pop
xor
jmp
loop
pop
int
test
cmps
dec
into
dec
(bad)
lea
pop
mul
pop
call
outs
test
push
loop
add
enter
xor
daa
xlat
sub
(bad)
sahf
sbb
ror
or
sub
xor
mov
pop
adc
dec
mov
cmp
xchg
(bad)
cmps
sub
dec
and
imul
(bad)
cmp
addr16
imul
jp
test
mov
inc
cmp
sub
in
inc
xchg
jnp
mov
inc
and
pop
jp
es
ins
das
dec
jmp
push
gs
jecxz
int
pop
mov
cs
fsubp
(bad)
mov
mov
enter
mov
fsub
xor
out
xlat
das
mov
sti
fdiv
add
jns
into
leave
mov
or
pop
jge
outs
stos
leave
push
add
jb
imul
es
adc
mov
aad
and
push
xchg
out
stos
repz
lods
pop
mov
test
adc
gs
scas
call
(bad)
push
(bad)
out
jl
(bad)
xlat
mov
ror
push
xchg
push
or
shr
fwait
cmc
dec
stos
sbb
cwde
add
push
mov
loope
imul
ja
aad
inc
je
jns
jge
into
stos
mov
fnstenv
ds
xchg
retf
xor
sub
mov
ins
loope
out
xlat
push
mov
mov
bound
into
xor
mov
sbb
addr16
mov
add
jmp
adc
clc
scas
pop
inc
aam
fwait
push
nop
sbb
mov
test
jb
cdq
nop
dec
or
out
faddp
mov
aad
repnz
xchg
loopne
xor
xchg
shl
imul
xchg
add
out
pop
aad
jmp
xlat
addr16
mov
sub
jge
not
icebp
out
adc
mov
pop
sub
scas
inc
test
inc
xor
adc
inc
fwait
inc
ja
jnp
sub
imul
dec
fs
or
xchg
inc
inc
daa
and
mov
mov
push
leave
loop
repnz
out
lods
sub
inc
out
(bad)
cdq
mov
mov
mov
arpl
cdq
test
faddp
ret
aas
sbb
pop
pop
scas
enter
fptan
fimul
call
jg
ins
lahf
inc
pop
lahf
mov
add
inc
dec
retf
adc
ds
and
cmp
jns
xchg
and
movs
jl
imul
ror
out
adc
mov
dec
and
ret
sbb
pusha
inc
iret
(bad)
in
cld
mov
jnp
jmp
adc
cmp
scas
fdiv
mov
cdq
mov
out
inc
adc
sub
out
leave
cli
xor
xor
sbb
xchg
pop
sub
inc
sbb
loop
out
fimul
dec
pop
stos
push
sub
add
test
dec
es
mov
iret
ds
popa
sbb
xchg
adc
icebp
mov
outs
mov
ins
adc
gs
mov
into
hlt
inc
movs
jo
cmps
movs
jne
(bad)
neg
xor
cmp
sahf
jns
jns
push
or
push
pop
pop
clc
repz
push
jp
dec
xchg
and
jmp
leave
xchg
aaa
xor
push
pop
pushf
and
das
mov
mov
(bad)
movs
cmps
inc
add
cmp
sbb
loopne
mov
jl
jle
shr
imul
stos
add
xor
sahf
stos
repnz
ins
push
inc
fucomi
(bad)
sbb
jmp
mov
lds
stos
inc
sub
leave
xchg
iret
mov
add
gs
jo
xchg
xor
jo
dec
cmp
mov
fucomi
outs
sbb
jl
lock
cmp
xchg
cmp
xchg
add
jle
inc
sti
mov
lods
or
push
pop
jl
pop
js
xor
adc
mov
push
dec
push
and
aaa
stc
mov
push
aaa
xor
sub
and
mov
out
mov
and
lds
sub
mov
repnz
mov
and
lahf
(bad)
mov
pushf
pop
out
cmp
push
mov
pop
enter
cmps
loope
xchg
rol
sub
lea
cmp
adc
repnz
mov
xchg
sub
sub
hlt
shr
push
dec
push
and
ret
seta
xor
lahf
sbb
shl
dec
adc
test
es
into
test
es
xchg
add
inc
lock
jle
push
pop
mov
mov
dec
pop
push
add
(bad)
enter
(bad)
repz
fdiv
data16
ret
cmc
sbb
add
pop
adc
sahf
jle
and
sbb
sar
out
adc
dec
pop
xor
jg
rcl
jecxz
push
xchg
(bad)
lock
test
jo
mov
clc
js
clc
out
mov
scas
imul
cmps
add
jo
clc
jle
inc
and
ja
mov
es
or
dec
cmp
mov
aad
pop
adc
retf
and
sbb
movs
imul
dec
addr16
push
dec
cmps
inc
cld
fsubr
inc
sbb
repnz
sub
and
adc
inc
mov
lock
imul
fdivr
mov
es
iret
cmp
mov
mov
xchg
fwait
shl
jmp
push
popf
dec
jns
mov
pop
(bad)
mov
push
mov
xchg
or
xlat
outs
push
std
stos
xchg
pop
ds
test
xlat
lods
push
shl
iret
lahf
aas
jns
(bad)
std
cmp
cmp
adc
cli
outs
pushf
jns
leave
daa
adc
jle
aaa
nop
addr16
iret
dec
stos
xlat
xchg
test
mov
(bad)
mov
pop
js
mov
mov
lods
jns
and
pop
jle
mov
push
jecxz
gs
adc
ins
retf
test
lock
cdq
lods
repnz
pop
(bad)
lds
rol
mov
push
jb
inc
pop
pop
mov
(bad)
mov
pop
cs
loopne
fst
push
and
push
and
adc
or
fadd
shl
dec
call
das
test
adc
mov
jle
lods
fistp
repnz
packuswb
imul
jl
test
mov
sub
nop
xor
pop
adc
cmps
repz
repz
int3
pop
icebp
jmp
mov
xor
popf
(bad)
out
and
adc
ds
fs
mov
cdq
pop
mov
(bad)
in
mov
outs
int3
and
lea
mov
bound
addr16
pop
in
mov
or
cmp
mov
pop
fwait
push
push
cmc
or
xchg
in
lods
ret
sbb
mov
int3
test
jae
or
pop
push
nop
imul
ins
cmp
xor
ret
and
push
cmp
dec
mov
call
(bad)
std
into
pop
hlt
or
sbb
jecxz
xchg
daa
jmp
ucomiss
push
add
add
push
mov
push
popf
cmp
js
int3
iret
loope
hlt
cmp
mov
sub
stc
jge
mov
xor
repz
(bad)
pop
or
jecxz
std
fprem
je
and
hlt
jge
fsubr
repnz
sbb
ret
ffreep
mov
ss
aaa
aam
lods
stos
stos
imul
sti
ror
cmps
mov
outs
cdq
pushf
jp
jmp
fwait
push
sub
or
pop
sbb
loope
push
and
mov
outs
pop
xor
or
pop
jno
mov
xchg
xchg
mov
jecxz
sub
hlt
scas
adc
ror
dec
stos
ret
stc
gs
(bad)
daa
sub
or
js
xor
inc
lds
cmp
jl
jne
leave
sbb
mov
dec
adc
leave
test
add
add
jns
out
hlt
ss
fwait
mov
xor
pushf
rcr
pop
add
scas
das
sbb
pop
jmp
inc
mov
shl
push
mov
mov
jnp
test
xchg
dec
pop
pop
pop
sbb
retf
test
in
mov
test
pop
push
mov
push
lds
adc
sub
push
mov
push
mov
lods
pop
cmps
sub
xor
cmps
sub
mov
int
push
pop
adc
xor
scas
push
mov
jo
pop
cmp
fwait
ss
pushf
jp
out
shr
mov
sbb
call
fmulp
pop
(bad)
mov
out
cld
mov
repnz
idiv
cmp
loope
mul
lahf
cmp
scas
sub
stos
retf
push
popf
loop
pusha
add
inc
push
or
adc
jl
(bad)
rcr
cmp
jb
pushf
leave
sti
sti
in
(bad)
clc
xchg
push
jne
xor
adc
sbb
repnz
jbe
mov
cdq
sbb
test
stos
and
add
js
pop
add
sbb
mov
rol
adc
mov
dec
int
or
fidivr
cmps
inc
pop
jns
adc
dec
arpl
jmp
jbe
jmp
addr16
lods
push
ins
and
imul
int3
mov
xchg
or
movs
jl
shr
lock
cdq
jge
pop
add
sub
ret
add
dec
pop
add
mov
push
and
lock
inc
mov
movs
fcom
sbb
mov
fistp
or
addr16
fmulp
mov
adc
push
(bad)
std
sub
jp
sti
sub
and
and
daa
movs
push
pop
or
cmps
in
mov
xchg
(bad)
sub
xor
addr16
jb
leave
retf
mov
push
inc
adc
call
push
push
adc
stos
adc
and
mov
jecxz
enter
dec
jae
scas
and
imul
sbb
adc
mov
fistp
xchg
xchg
cmp
in
add
lea
push
dec
sub
dec
out
sbb
movs
cmp
cld
stos
mov
dec
cld
movs
adc
inc
jge
aas
(bad)
jae
push
sbb
cmp
adc
cli
in
fistp
call
(bad)
imul
mov
ins
xchg
push
jp
test
xor
cdq
dec
or
mov
aaa
push
xor
push
xor
stc
push
cmps
(bad)
pop
mov
push
cwde
or
addr16
out
mov
les
ret
pop
push
xchg
jmp
or
mov
mov
ror
in
add
and
iret
in
cmp
jae
jb
pop
push
cdq
fs
mov
aaa
out
out
ja
aaa
push
xor
xor
faddp
test
ret
cmp
and
out
xor
cmc
int3
ret
jle
nop
push
std
xchg
xchg
call
aas
xchg
mov
jecxz
out
xchg
leave
jo
aaa
jle
jo
or
in
jb
push
sti
(bad)
popa
mov
int3
(bad)
xor
sahf
mov
cmp
cmp
xchg
dec
inc
dec
pushf
iret
adc
aad
leave
int
and
inc
mov
cmp
xor
pop
imul
jp
mov
xor
fdivr
and
ja
in
ret
sub
and
stc
adc
push
int3
adc
push
mov
jae
or
cmps
dec
mov
jmp
fs
popa
fistp
fild
sbb
out
shl
push
dec
sahf
test
cmps
aas
std
push
(bad)
js
stc
cmps
cmp
repz
out
push
xchg
adc
loop
pop
into
pop
neg
and
inc
mov
cmp
jne
mov
pusha
mov
iret
jg
jecxz
cmp
aas
imul
loope
xor
jmp
push
xchg
adc
adc
push
pop
push
push
jp
shl
fst
push
fucomip
sbb
retf
rcl
adc
jne
stos
or
add
add
add
cmp
mov
aas
rcr
or
movs
push
(bad)
repz
jne
(bad)
hlt
dec
jg
sbb
sub
inc
movs
inc
cmp
iret
add
lahf
mov
xchg
test
mov
xchg
repz
lea
(bad)
popa
pop
mov
ins
mov
dec
jle
rol
pop
sbb
cmps
cmp
sbb
daa
call
(bad)
xlat
les
add
fsub
jns
iret
std
cmp
mov
jge
push
mov
test
xchg
pop
(bad)
or
cmp
pop
call
pop
and
je
pop
sub
dec
int
add
mov
dec
fs
mov
sub
repz
mov
xchg
adc
loope
frstorw
ret
xchg
xchg
push
cmp
popf
sub
int3
pop
push
fldcw
mul
jne
out
and
hlt
mov
sub
test
jmp
clc
and
push
iret
xchg
and
adc
xchg
leave
xor
and
(bad)
jle
test
or
push
fsubr
lods
jae
shl
push
or
leave
mov
sbb
cs
jle
adc
jno
outs
jmp
mov
dec
cmp
cwde
popa
das
mov
dec
dec
adc
pusha
inc
(bad)
test
dec
mov
neg
in
and
pop
stos
popf
int
inc
jge
sub
push
sub
push
enter
push
jbe
mov
push
xchg
inc
data16
inc
adc
or
ins
(bad)
mov
jae
sub
mov
and
xlat
pop
fsubrp
xor
xchg
xchg
scas
adc
cmp
jb
dec
out
jno
imul
cmp
test
icebp
jns
das
sub
(bad)
dec
shl
repz
test
inc
add
scas
inc
pop
leave
fimul
out
ret
aad
imul
cmp
aas
arpl
xchg
lock
ficomp
test
ret
mov
mov
jne
ror
mov
clc
cmps
call
dec
leave
test
stos
cli
mov
dec
cmp
xor
pop
push
cmp
imul
aad
jb
jmp
in
mov
and
xchg
ficom
inc
cli
xchg
pushf
or
jmp
sbb
in
jae
mov
add
pop
or
cmp
pusha
pushf
out
add
out
jbe
sub
aaa
outs
pop
lahf
or
or
sub
add
or
enter
jp
sbb
jno
push
jb
retf
test
sbb
jb
aam
push
ret
pop
dec
add
cmps
xchg
out
fnstcw
ins
mov
fidivr
sti
xchg
fwait
imul
out
mov
outs
xchg
call
es
aam
push
in
adc
mov
fdiv
adc
dec
dec
sbb
or
mov
sub
lods
pop
lds
test
out
outs
mov
adc
pop
xchg
pushf
les
call
test
test
stos
ficom
lods
iret
mov
inc
jge
test
out
pmuludq
int
hlt
js
mov
mov
sbb
jns
push
mov
test
pushf
mov
xchg
push
jg
or
jp
pop
jge
into
xchg
int3
add
ror
cmp
mov
sar
pop
js
jge
xchg
scas
js
jecxz
aas
stc
movs
jmp
pushf
mov
xchg
dec
lahf
jge
or
jge
arpl
xor
cld
xor
movs
mov
sub
or
(bad)
mov
jno
and
test
fld
xchg
cmps
dec
leave
je
sub
in
aad
jmp
movs
test
adc
scas
scas
push
sub
test
enter
clc
dec
mov
xchg
sbb
out
jmp
mov
add
out
cmp
xchg
pop
outs
pop
int
sahf
mov
xchg
cld
hlt
jmp
xchg
lahf
push
ss
adc
pusha
jno
div
stos
stc
mov
test
int
sbb
cwde
push
mov
xchg
outs
rol
fsubr
aad
add
or
jecxz
nop
out
pop
cmp
push
repz
fnstenv
int
mov
sub
push
xchg
inc
mov
jl
cmc
orps
mov
push
call
push
daa
jmp
pop
mov
push
pop
int3
and
xsha1
cmps
mov
cld
pop
aam
fcomp
repnz
call
push
mov
mov
push
xchg
adc
sub
adc
sub
outs
mov
iret
(bad)
jbe
leave
pop
push
imul
cmp
aas
std
leave
fimul
test
rdpmc
and
aas
loope
leave
popa
inc
out
jmp
aaa
out
adc
mov
sahf
jae
jmp
arpl
aam
sahf
ja
test
test
mov
jmp
dec
test
add
add
jno
inc
pop
scas
cmp
aam
jge
mov
sub
or
mov
inc
push
popa
and
mov
or
push
jecxz
push
ja
mov
dec
call
lea
xchg
and
adc
pop
or
sbb
xchg
rol
adc
add
pop
xlat
lods
xchg
rol
enter
mov
sbb
inc
add
xor
pop
repz
call
jbe
test
push
jg
sar
push
call
aad
jo
jmp
push
cwde
push
xchg
addr16
sbb
cmp
sar
add
pop
js
or
sub
push
ins
fidivr
pusha
jmp
jmp
or
in
test
shr
pop
loopne
jmp
cmps
ss
add
je
pop
pop
cmp
inc
inc
mov
push
mov
(bad)
sub
push
inc
inc
push
daa
and
imul
movs
add
sbb
stos
aam
scas
fisubr
pop
lahf
mov
dec
rcl
pop
pop
sbb
ss
fisub
js
bnd
std
movs
sub
jae
xchg
push
ret
mov
pushf
adc
cmp
sub
mov
leave
cmc
shl
pop
and
jae
popa
mov
jnp
ins
lock
add
adc
into
cdq
jae
and
fld
jne
xchg
cmp
or
sub
or
or
xchg
xchg
pop
jp
and
icebp
rcl
xchg
rcl
sub
cmp
push
mov
add
test
aam
arpl
loopne
data16
jmp
xlat
sbb
push
mov
pop
fisttp
jmp
cmp
and
push
adc
imul
fist
add
nop
jp
(bad)
mul
call
retf
inc
rol
ins
xchg
int
inc
fwait
sub
stos
sbb
jl
fcomp
mov
rcl
dec
sub
das
in
cli
(bad)
cmp
daa
inc
int
cmp
xchg
stos
jg
test
sti
(bad)
popf
jp
shl
hlt
cli
std
mov
cmp
push
loopne
jp
mov
popf
ja
xor
xor
fchs
repnz
ficom
xchg
cmps
jns
retf
xor
and
jae
je
(bad)
in
mov
mov
mov
ss
call
fucomi
add
jle
jb
imul
mov
jmp
pop
clc
std
or
dec
js
add
jg
sahf
cs
lods
movs
xchg
xor
inc
mov
pop
enter
call
in
sub
ror
rcl
push
nop
retf
sub
enter
pop
lods
(bad)
iret
and
call
xor
add
cwde
sub
sub
aas
leave
je
arpl
inc
cmp
sbb
jno
pop
cli
xchg
sbb
adc
jns
add
mov
in
sbb
adc
mov
lds
inc
mov
int3
sar
mov
(bad)
stc
sbb
xchg
push
inc
retf
mov
push
mov
ja
push
jg
idiv
outs
stos
mov
test
mov
jg
sbb
int
jns
cmp
inc
inc
add
(bad)
jge
(bad)
hlt
int
sub
inc
int
push
sub
loopne
rcr
movs
sub
xor
sar
pop
into
sahf
mov
retf
ret
les
xchg
add
ja
jl
int3
fucomi
mov
sbb
pop
inc
jb
or
pop
push
sbb
div
jo
push
sub
sbb
xor
xchg
sub
fld
loopne
pop
jb
ret
xchg
xchg
(bad)
and
dec
sbb
out
jp
hlt
sub
icebp
into
aad
cli
rol
add
mov
sub
out
sbb
fdiv
ins
sub
(bad)
cmc
pusha
xor
sbb
repnz
sub
cmp
xor
outs
ja
push
mov
mov
les
push
xchg
scas
pop
add
sub
aaa
ins
dec
cbw
dec
into
add
popf
pop
ja
pop
bound
and
xor
or
inc
lea
xor
js
call
pop
sub
div
ret
sbb
pop
xchg
dec
outs
les
push
mov
fldcw
mov
inc
aas
adc
das
call
fistp
pop
cli
mov
int3
mov
jae
add
repz
popf
cmp
clc
pop
cmp
jp
cmp
out
mov
push
mov
mov
stc
adc
jmp
cmp
(bad)
cmp
add
pop
cwde
dec
jl
cmp
mov
ss
(bad)
jge
add
pop
enter
jo
fs
jle
mov
adc
sbb
cwde
jp
pop
inc
daa
xlat
inc
mov
dec
aaa
push
fidivr
sar
(bad)
adc
out
fidivr
push
push
ret
loopne
cmp
ins
out
lds
mov
in
jo
mov
adc
add
cdq
fcomp
rcl
sti
ss
mov
pop
pop
mov
clc
mov
imul
push
mov
lock
lahf
xor
mov
gs
dec
jnp
ds
addr16
sub
scas
lods
popa
arpl
jnp
fwait
xchg
jnp
cmps
cmp
add
pop
cmp
ja
jbe
jbe
sbb
daa
in
mov
mov
aas
push
mov
jp
movs
loope
outs
std
jbe
mov
into
fmulp
sahf
stos
scas
fcomi
push
jo
cmc
fnstsw
(bad)
stc
inc
je
sahf
cmp
pop
xchg
(bad)
(bad)
cld
(bad)
iret
arpl
xor
or
dec
add
loope
into
mov
cmp
js
sbb
mov
fadd
rcl
aas
mov
div
mov
push
fidiv
sti
mov
mov
cwde
push
xchg
add
and
push
push
call
(bad)
retf
mov
pop
daa
mov
pop
jae
fwait
cmp
jns
cs
cmps
ins
popf
fild
inc
out
and
and
aas
add
adc
into
ret
pop
mov
test
xor
push
rcl
xor
jne
lock
(bad)
mov
jne
fwait
cmp
(bad)
jl
jp
call
sbb
rcl
std
pop
js
push
or
in
sub
(bad)
dec
inc
pop
imul
pop
icebp
xor
cdq
push
mov
daa
mov
in
js
movs
stos
mov
cmp
cmc
sub
mov
movs
scas
ja
jmp
or
sbb
call
mov
or
push
pop
mov
jmp
mov
dec
sti
dec
rcr
shl
loopne
test
fcmovnu
cmc
(bad)
xor
call
mov
aas
cld
in
(bad)
push
repnz
jg
out
call
(bad)
ret
xor
and
mov
dec
outs
pop
xor
mov
fs
jl
fdiv
pop
lock
push
jb
pop
pop
stc
and
push
jg
test
cmp
pusha
dec
scas
je
xchg
jmp
out
push
pop
repz
aaa
movs
idiv
cmp
popa
shl
into
es
jecxz
(bad)
xlat
aas
pop
pop
scas
pop
pop
aas
out
(bad)
adc
add
push
div
push
jo
add
cmc
jbe
inc
and
inc
xor
sub
pop
imul
adc
lods
mov
inc
pop
arpl
mov
ss
(bad)
sbb
out
gs
sub
out
xchg
jne
ja
push
call
sbb
jmp
mov
sub
fst
and
push
and
or
stc
pop
iret
(bad)
popf
inc
(bad)
lods
sbb
inc
ja
std
retf
add
js
jnp
fstp
outs
ja
rcl
mov
mov
fdiv
(bad)
lods
sti
mov
dec
push
fcom
cmps
scas
jnp
addr16
shl
jmp
pop
mov
adc
xlat
sar
lds
mov
aam
and
int3
xchg
lea
cmps
mov
imul
push
out
adc
into
mov
dec
cmp
movs
and
aad
dec
sbb
lahf
push
es
sar
cmc
rcr
inc
std
out
push
push
cli
out
fucomip
mov
pop
jns
ror
and
jge
in
cli
out
sbb
loop
outs
fdivr
shl
into
mov
cld
fdivr
jmp
into
cmp
pop
mov
test
lods
popf
xchg
call
out
lods
sbb
shr
(bad)
jbe
inc
adc
dec
(bad)
inc
imul
or
hlt
(bad)
or
dec
or
xchg
in
adc
mov
enter
inc
jmp
ins
mov
pop
scas
inc
jg
ja
sti
div
pop
mov
shl
mov
imul
ins
hlt
cwde
fimul
fld
fs
iret
loope
inc
jmp
aad
xchg
push
mov
fcmovu
mov
jle
jnp
nop
cli
lea
repz
mov
in
push
fcmovnu
sar
scas
sahf
mov
cmp
cmp
lods
scas
sub
pop
test
pop
rcl
jp
pop
outs
ins
ds
cmc
sahf
jbe
lds
sbb
inc
scas
pop
rcl
mov
ins
mov
(bad)
mov
out
xor
xor
fdivrp
jecxz
popf
cmp
mov
mov
pop
jp
hlt
in
dec
inc
cmp
dec
jno
mov
jne
(bad)
lock
mov
daa
mov
gs
sub
sti
cmp
retf
out
sahf
mov
jne
mov
int3
sbb
mov
ins
ins
shl
push
fnstcw
call
les
adc
stos
jne
xlat
xchg
(bad)
ficomp
cmps
cmps
or
(bad)
movs
adc
mov
inc
popf
aad
outs
push
lods
and
dec
push
pushf
sbb
push
je
sub
mov
scas
neg
imul
pop
add
xor
mov
addr16
dec
ja
into
mov
(bad)
xor
mov
push
dec
mov
bound
mov
push
adc
movs
(bad)
pop
jecxz
lock
fistp
mov
jmp
test
scas
cmps
hlt
div
inc
mov
mov
lahf
fdivr
mov
shr
clc
push
jl
sti
out
test
xchg
ins
jmp
imul
add
enter
sahf
cli
inc
jno
fwait
fs
fucom
xchg
mov
mov
mov
pop
(bad)
out
std
jno
test
je
int3
cdq
xchg
stc
mov
pushf
jecxz
jge
mov
cwde
xchg
sbb
cmp
clc
cmp
call
aaa
in
jnp
sar
cld
ror
into
test
mov
sti
lock
(bad)
ja
sub
dec
push
stc
(bad)
dec
mov
sahf
(bad)
out
mov
and
retf
jne
cmp
outs
ret
push
test
cs
cmp
enter
fwait
mov
or
test
xor
ins
not
(bad)
inc
push
jg
imul
ror
xor
scas
stos
add
xchg
mov
mov
push
mov
mov
out
ds
test
xlat
(bad)
icebp
ficomp
call
jmp
test
cmp
or
mov
lahf
fadd
jns
sub
repz
dec
imul
ss
test
(bad)
aaa
popf
inc
movs
fild
aas
mov
jb
sub
xor
push
mov
or
aad
mov
(bad)
mov
ss
add
xlat
cmp
or
pop
and
(bad)
xor
in
mov
jmp
dec
cmp
jae
in
(bad)
sbb
mov
ins
cmp
pop
pop
xchg
out
jp
fistp
push
iret
cdq
cmp
xchg
out
aam
xor
add
imul
int
js
dec
ins
repz
leave
(bad)
mov
(bad)
cmp
mov
std
mov
(bad)
loope
popf
popf
out
cmc
pusha
sub
mov
fild
imul
cmps
lea
repz
call
fnsave
popf
xor
outs
sahf
enter
enter
dec
popf
xchg
loopne
inc
pop
push
leave
and
pop
mov
ret
pop
cmps
(bad)
scas
in
cmp
xchg
(bad)
cwde
adc
inc
retf
mov
or
rol
cmp
in
loop
fistp
add
call
stos
cwde
xor
leave
adc
or
imul
adc
xchg
fsubr
lods
mov
pop
jge
imul
es
leave
inc
(bad)
lods
imul
xchg
sahf
xchg
and
mov
mov
sub
xor
out
inc
add
retf
aaa
(bad)
mov
(bad)
push
fxch
pop
in
call
lods
sbb
mov
lods
stos
adc
mov
rol
pop
cld
arpl
jmp
inc
or
ror
fsubr
cmp
daa
add
pusha
xor
mov
xor
cmp
mov
mov
xchg
ror
fidivr
aaa
fnstsw
loopne
sbb
std
les
imul
(bad)
pop
repz
idiv
fldcw
sbb
(bad)
div
out
imul
icebp
daa
aaa
std
neg
fwait
cmp
and
push
sbb
cmps
in
fnstsw
sub
imul
fist
mov
outs
dec
push
ja
inc
(bad)
pop
movs
retf
test
jl
popf
gs
adc
mov
lods
or
xchg
mov
ins
lods
xchg
pusha
scas
cmp
in
cmp
scas
retf
add
in
sbb
ds
dec
xlat
sahf
into
fisub
test
cmc
and
leave
ficomp
fwait
call
nop
sti
popf
xor
push
mov
xor
cmc
inc
fsub
xor
stos
test
push
and
js
cmp
fidivr
pusha
stos
aaa
push
fldcw
sti
mov
es
push
mov
aad
sbb
mov
sti
mov
mov
mov
sbb
out
idiv
xor
test
outs
pop
xor
into
mov
out
mov
pop
jb
mov
inc
mov
jne
test
jae
out
dec
fdivr
cmps
push
cwde
jne
jno
cmp
aas
out
pop
repz
push
retf
pop
fild
mov
(bad)
sub
in
pop
(bad)
std
adc
mov
inc
or
dec
popf
hlt
fdiv
hlt
mov
jmp
sub
pop
cmp
retf
xor
sub
sar
jge
std
mov
push
pop
push
pop
xchg
add
jle
xchg
(bad)
in
es
mov
cmp
lods
dec
ss
mov
jmp
xor
mov
mov
stos
stos
mov
or
mov
mov
daa
xchg
(bad)
pop
add
push
cld
push
js
or
inc
movd
add
lea
or
cmp
dec
je
mov
outs
xchg
(bad)
fnstenv
or
jg
xor
and
inc
xor
stos
inc
lea
add
rcl
(bad)
fnstenv
mov
or
ds
arpl
jle
jmp
hlt
aam
pop
call
aas
jbe
mov
sahf
push
jl
nop
test
data16
dec
mov
hlt
and
cli
mov
mov
enter
cmp
cmc
xor
and
fwait
popf
mov
movs
loope
jecxz
jg
mov
(bad)
push
out
jmp
ss
fdiv
jmp
mov
loope
or
mov
lods
lods
pop
fwait
add
mov
(bad)
sbb
call
stos
outs
int
sahf
cmp
adc
push
or
ret
dec
add
stos
fld
mov
or
cmc
add
test
std
mov
adc
xor
leave
cld
dec
stc
imul
adc
mov
xor
aam
cmps
mov
add
and
cmp
int
jmp
xchg
push
arpl
xchg
jns
adc
test
sar
and
sar
test
xchg
shr
jmp
fs
cmp
adc
lods
pop
inc
xor
cmp
test
mov
sbb
xlat
xlat
mov
push
outs
cld
jno
rol
(bad)
mov
cmp
push
mov
adc
imul
into
pop
jbe
(bad)
arpl
jnp
pop
cmp
sub
pop
pushf
add
fdiv
outs
(bad)
mov
out
pop
mov
dec
jl
pop
ja
cmp
mov
xchg
ja
int
mov
jmp
inc
xchg
or
cwde
mov
fisttp
shl
out
fld
aad
cwde
adc
jnp
mov
cld
test
adc
fmul
inc
iret
mov
les
sbb
rcl
mov
mov
rcr
or
jl
fnstenv
aad
add
call
xlat
in
jl
fcom
jl
mov
mov
cmp
push
pop
xchg
jl
in
xor
pop
cmp
push
push
fwait
mov
(bad)
call
leave
pop
pop
fwait
mov
and
push
ins
sub
(bad)
inc
popf
lock
(bad)
call
popf
sbb
ins
ds
mov
imul
jno
movs
xor
fnstsw
lahf
popa
jecxz
pop
cmp
mov
addr16
push
das
inc
loopne
in
push
std
lahf
or
jle
mov
imul
cmp
jno
cmp
repnz
(bad)
lahf
sar
clc
dec
aas
imul
(bad)
ja
test
cmp
mov
pop
and
cwde
cmc
in
(bad)
aas
jb
(bad)
add
add
leave
cmp
or
inc
scas
add
test
test
ficomp
rcr
ja
mov
jae
inc
jb
jnp
and
push
and
jg
fimul
push
push
mov
dec
jno
inc
fldl2e
lds
shl
sbb
gs
(bad)
cmp
dec
or
sahf
xchg
add
mov
add
out
hlt
mov
dec
jae
leave
cld
mov
xchg
mov
fild
jge
test
mov
out
iret
enter
cwde
xchg
sub
mov
out
pop
add
out
std
push
clc
dec
mov
add
dec
rol
mov
pop
xchg
rcr
add
scas
out
sahf
pop
sbb
loope
leave
xchg
jmp
cmp
rol
sahf
xor
push
das
sbb
mov
int3
cdq
mov
(bad)
jmp
outs
(bad)
std
cmp
int
cmc
je
vpavgw
into
test
cmp
mov
(bad)
mov
stc
xchg
cmp
dec
dec
loope
(bad)
aas
push
sub
call
cld
mov
clc
(bad)
mov
fbstp
jno
cld
adc
push
mov
pop
xchg
cld
push
pop
xchg
int3
xchg
dec
fstp
pop
loopne
div
mov
add
in
push
mov
hlt
xor
pushf
jne
push
jl
push
inc
daa
cs
js
out
shr
arpl
mov
minps
fidiv
pop
pusha
bound
inc
inc
mov
cwde
call
cmc
and
sbb
mov
mov
fwait
mov
in
fsub
jno
push
and
cmp
and
and
mov
clc
sbb
icebp
sbb
mov
shl
mov
jnp
outs
out
es
push
push
add
jg
push
lods
out
ins
out
out
fst
sub
xor
hlt
sbb
sbb
out
push
adc
dec
add
xchg
sub
adc
add
(bad)
(bad)
out
test
cmp
pushf
jg
sbb
inc
inc
cmps
lea
jne
int3
cdq
jecxz
fld
adc
repnz
(bad)
in
fnsave
cmp
mov
sub
jge
sar
not
mov
in
mov
pop
(bad)
retf
mov
sbb
sub
aas
idiv
lock
aaa
in
retf
jecxz
imul
mov
xor
test
es
cmp
push
rcl
test
xor
call
mov
xor
jge
cdq
out
pop
lods
sbb
cmps
mov
mov
es
aad
stos
ins
xchg
dec
push
sbb
dec
cmps
mov
mov
sub
mov
sbb
(bad)
xor
pushf
jmp
dec
mov
and
pop
movs
sti
dec
sub
xchg
adc
aam
push
out
mov
dec
mov
sbb
movs
inc
ja
xor
or
push
fst
sbb
iret
cmp
pop
xlat
pusha
cs
in
test
jae
iret
daa
inc
push
pop
xor
cmp
jle
pop
mov
mov
loope
xor
lds
add
mov
dec
std
in
jg
stos
out
ret
pop
cmp
pop
cs
ss
les
std
cmp
gs
mov
sti
fstp
or
add
mov
(bad)
dec
sbb
cmp
mov
jmp
and
out
call
test
mov
into
push
mov
jmp
imul
ds
(bad)
cmps
(bad)
inc
in
(bad)
jmp
sbb
fdivr
adc
pop
xchg
iret
nop
mov
push
mov
xor
fdiv
and
stos
xchg
jp
(bad)
mov
lods
sbb
(bad)
cwde
das
fnstsw
daa
sar
jne
call
es
fidiv
push
pop
mov
cmp
xor
rcl
dec
and
test
dec
fadd
cmc
(bad)
loopne
arpl
and
popa
jp
inc
jae
(bad)
push
cmp
add
pop
pop
lock
cmc
retf
shr
lods
cmps
push
sub
addr16
adc
mov
fistp
mov
jmp
pop
dec
jl
xor
push
nop
cld
adc
rcl
mov
mov
fwait
aaa
mov
gs
shl
arpl
(bad)
cmp
outs
inc
mov
arpl
lods
lods
jmp
push
cmp
push
adc
sub
xchg
cmc
retf
inc
jle
(bad)
jg
or
stos
pop
sub
cmp
jmp
fisttp
sub
ffree
xchg
push
out
pop
pusha
xor
aam
loope
daa
dec
jmp
std
mov
mov
jo
xchg
jecxz
lea
xor
rol
aas
cld
in
mov
jge
int
(bad)
in
aas
sbb
das
loop
neg
jg
inc
dec
fstp
and
aas
(bad)
icebp
fist
xor
adc
xor
lahf
xchg
mov
mov
fmul
or
scas
mov
dec
ins
outs
xchg
inc
inc
cmp
hlt
sbb
lods
jge
stos
xor
punpckldq
dec
and
or
shl
add
rcl
test
push
dec
mov
popa
out
out
push
call
into
pop
fsubr
aaa
pusha
daa
mov
out
out
jne
or
jbe
call
xor
jp
out
mov
fcom
(bad)
lock
lahf
jb
xor
popf
xor
mov
mov
jbe
mov
into
push
call
jl
sti
(bad)
pop
pop
push
inc
xor
jne
call
fidiv
jne
sahf
push
ins
sbb
mov
or
ins
adc
inc
lds
add
pop
sar
jmp
outs
inc
test
mov
std
loope
sti
(bad)
pop
xor
fsub
jns
stc
pop
push
ja
mov
out
std
popa
cli
pop
(bad)
lock
outs
cdq
adc
sar
mov
test
loop
cmp
outs
xchg
jmp
imul
mov
daa
sahf
mov
rol
push
ja
shl
mov
aam
sub
push
out
adc
stos
outs
adc
mov
mov
mov
ja
xlat
cmps
mov
and
ins
outs
jecxz
mov
mov
and
int
adc
or
(bad)
(bad)
push
xchg
push
test
fdivr
xchg
or
addr16
dec
retf
shr
jnp
mov
xor
in
mov
fwait
push
lea
ja
retf
add
fs
xchg
lods
sbb
pushw
or
inc
or
mov
cmp
inc
cld
shl
sub
pop
in
cs
jg
rol
(bad)
or
or
pop
xor
js
(bad)
sahf
xor
or
(bad)
xlat
cmp
test
pop
push
lahf
xchg
add
mov
out
pop
cmp
mov
push
mov
lahf
jae
mov
dec
jecxz
inc
push
outs
jne
aam
mov
add
rol
add
jo
pop
inc
adc
mov
cmp
in
mov
jecxz
inc
js
stos
fistp
jl
aas
outs
(bad)
clc
mov
mov
aam
or
jmp
mov
push
imul
xor
sbb
jno
or
fwait
in
(bad)
or
repz
xchg
(bad)
dec
popf
scas
idiv
shl
or
dec
pop
nop
inc
cmp
rcl
addr16
fnsave
dec
add
sbb
cmc
cs
je
loop
and
xchg
fidivr
popf
out
movs
ins
out
fcom
mov
test
sbb
pop
cdq
jno
lea
les
mov
(bad)
inc
inc
jmp
xor
jb
je
sub
pusha
mov
cmp
xor
cmps
jge
mov
rcl
cmp
daa
jbe
fcmovu
cli
into
mov
mov
(bad)
cmp
sbb
jmp
fwait
and
cmp
les
mov
or
pop
xor
repnz
mov
mov
aas
jmp
int
push
mov
shr
ror
and
pop
mov
jbe
fbstp
fidiv
xchg
dec
xchg
outs
mov
mov
sub
and
aas
jmp
(bad)
xchg
jno
retf
cmc
fs
cmc
add
cmps
push
aad
sub
(bad)
neg
into
cmps
repnz
and
test
in
mov
sahf
shl
int3
push
jl
or
jg
das
loopne
cmp
and
mov
rcl
sahf
popa
aam
mov
jnp
popa
inc
mov
(bad)
xchg
cmp
popf
call
cmps
pop
out
mov
fld
sbb
out
lahf
jo
rol
rcl
outs
jp
int
aaa
pop
jo
js
dec
call
sar
or
jno
daa
cmp
pusha
les
jecxz
inc
pop
push
mov
add
xor
pop
jmp
into
aaa
fsubp
stos
(bad)
loope
adc
cmps
shl
fwait
mov
lahf
and
pusha
fdivr
xchg
dec
xchg
cmp
mov
mov
pushf
idiv
adc
xor
push
jle
cmp
dec
mov
cmp
pushf
mov
and
and
mov
sti
pop
data16
fisttp
pop
and
push
clc
adc
mov
jae
pop
inc
pop
sub
dec
nop
lds
daa
cdq
pop
cmp
xchg
int
out
fisub
clc
(bad)
and
and
inc
push
adc
jne
cld
ret
jmp
xor
ins
lock
pop
xor
adc
pop
cmp
pushf
fwait
and
aaa
or
movs
out
cdq
jae
popf
cmp
mov
ins
loopne
jecxz
push
pop
mov
sub
ds
add
lea
inc
cmp
xor
dec
jo
or
mov
add
and
cmps
repnz
xor
stos
rcl
mov
sub
push
push
cli
fcomp
call
sub
or
push
push
xor
mov
out
xchg
movs
nop
pop
pop
sub
stos
pop
sub
dec
sub
xchg
not
dec
das
jne
(bad)
sbb
leave
add
adc
mov
cmp
push
je
mov
jecxz
push
jns
push
push
ret
and
push
ret
ret
mov
dec
push
repz
rol
into
sti
and
add
idiv
jae
dec
ret
cmc
mov
ror
pop
add
add
adc
gs
(bad)
sbb
rcl
idiv
cmp
cmp
in
mov
xor
(bad)
test
in
adc
cmps
push
or
sbb
mov
and
sub
jle
daa
adc
ins
and
inc
mov
xchg
push
xor
and
add
push
cmp
js
call
mov
push
adc
or
pop
push
pop
xor
jcxz
add
cli
div
cmp
retf
xor
jg
loopne
popa
mov
test
fild
and
rcr
xchg
mov
rcr
or
sub
xchg
outs
(bad)
ror
aaa
into
sbb
inc
mov
ficomp
fwait
mov
(bad)
jmp
sbb
out
sub
fwait
xchg
xchg
and
or
or
sar
imul
and
ds
sahf
stc
push
sbb
pop
retf
adc
xchg
mov
pop
pop
(bad)
mov
les
rcr
shr
xor
dec
scas
mov
in
fnsave
lahf
xor
cdq
sub
mov
call
jns
cmp
pop
(bad)
loop
aaa
loopne
leave
xchg
cmp
sbb
ins
jp
sbb
test
inc
push
mov
lahf
aam
ror
rol
mov
stos
ficomp
call
cld
outs
pop
(bad)
jne
cmp
je
daa
idiv
xor
(bad)
in
js
stc
mov
or
ins
out
(bad)
ret
mov
sub
stc
imul
push
popa
sbb
mov
cmp
test
fisttp
ds
pop
je
ret
sub
cmp
pop
sbb
lods
dec
outs
lds
dec
add
fwait
xor
xchg
pop
xor
cmp
inc
pop
push
sbb
adc
inc
add
pop
cmp
icebp
and
mov
or
sahf
xor
pushf
or
or
ja
repnz
sahf
xor
ficom
test
sub
(bad)
ror
xchg
pop
out
stos
outs
adc
cdq
retf
imul
dec
or
imul
mov
mov
cmps
push
not
add
pop
add
mov
push
ins
lods
jmp
pop
dec
lahf
jne
jne
sub
(bad)
jne
xchg
add
loopne
daa
dec
fwait
mov
stc
jae
xchg
fcmovu
mov
fsubrp
sub
(bad)
jecxz
sub
jnp
jmp
shl
imul
mov
inc
sub
fsub
xor
test
rcr
mov
cs
mov
mov
or
fld
and
outs
fbld
jno
pop
mov
dec
neg
cwde
mov
outs
fistp
inc
push
ja
out
fidiv
sbb
and
jge
retf
cmp
repz
and
out
jg
stc
aaa
lahf
jae
mov
add
into
jecxz
in
(bad)
pop
hlt
push
jl
add
sbb
sti
rol
hlt
mov
xor
and
shl
cmps
cs
add
adc
mov
sub
pop
jnp
push
mov
push
cwde
inc
or
jbe
inc
outs
cdq
pusha
scas
ret
sub
test
imul
add
repz
add
dec
cmp
push
xor
jnp
ss
outs
scas
outs
xlat
add
imul
addr16
mov
jp
mov
push
add
mov
jl
test
popf
ins
js
aaa
pop
pop
mov
inc
mov
rcl
mov
fnstenv
fisub
loopne
xchg
jecxz
(bad)
test
pop
lods
(bad)
out
xchg
xor
out
shr
inc
inc
fwait
push
cmp
out
jae
fstp
or
out
sahf
jnp
mov
mov
xchg
cmp
ja
in
shl
jae
jp
lock
leave
jmp
popf
jae
cmp
sahf
into
adc
pop
rcl
dec
dec
out
sub
inc
ror
and
fwait
movs
inc
xchg
cmp
add
fld
arpl
inc
je
mov
mov
dec
push
stos
mov
clc
adc
scas
mov
inc
mov
sub
pop
mov
loopne
movs
fistp
push
xchg
xchg
mov
or
test
lock
jmp
loopne
ins
jae
xchg
retf
imul
xchg
xor
dec
inc
mov
rol
push
aad
out
data16
xor
mov
test
push
mov
ins
(bad)
jg
arpl
mov
mov
add
nop
int3
cdq
jae
mov
jae
or
retf
loop
enter
inc
pop
dec
cmps
mov
jnp
fdiv
mov
in
into
mov
sub
xchg
and
add
jmp
arpl
push
jmp
dec
or
inc
jne
sbb
ret
and
aas
xor
xchg
rol
sbb
addr16
enter
xor
sub
pushw
cs
clc
cmove
retf
push
fistp
mov
mov
and
loope
mov
jbe
dec
jmp
test
cmc
(bad)
mov
push
retf
cmp
pop
mov
out
retf
(bad)
popf
mov
pop
jle
(bad)
xchg
add
test
jae
mov
loopne
movs
or
xor
in
(bad)
das
jl
(bad)
iret
outs
jl
popa
fistp
or
in
mov
(bad)
(bad)
jno
dec
sbb
push
(bad)
ret
mov
outs
std
out
cs
in
rol
push
mov
or
popf
fbstp
int3
ja
mov
std
cmp
call
ficom
dec
mov
cdq
xlat
push
push
xchg
or
movs
retf
mov
ror
sub
xchg
je
add
lds
out
cs
jnp
or
xor
or
pop
mov
or
jnp
inc
sub
lock
sub
jnp
in
mov
xor
lea
lock
jecxz
clc
or
or
loop
mov
imul
xchg
mov
inc
cmc
mov
std
in
fimul
es
pop
cmp
fcmovnbe
cmp
ret
cs
lods
test
jge
or
mov
xchg
push
int
mov
mov
out
fldenv
fstp
clc
xchg
mov
shl
jae
mov
inc
lahf
and
sbb
out
std
lahf
jge
xor
pushf
inc
pop
dec
(bad)
test
mov
out
cmps
pusha
mov
je
xor
cmp
call
cmp
and
fndisi(8087
pop
mov
retf
jmp
push
ins
out
dec
(bad)
push
stos
repnz
or
es
sub
sub
cmp
sub
popf
pop
cmp
push
rol
in
mov
lock
add
and
cmc
pop
mov
shr
ja
sub
mov
push
retf
gs
jmp
je
sahf
xor
test
mov
jae
adc
and
xchg
retf
fisttp
ins
inc
push
stc
xchg
popf
retf
fwait
jp
mov
call
pop
aam
cmp
call
mov
dec
mov
sub
xor
jg
add
stc
cld
idiv
sbb
mov
orps
(bad)
push
mov
lods
mov
jg
xchg
jae
cs
lahf
lea
leave
movs
aas
adc
fimul
mov
out
mov
mov
inc
popf
jo
shl
xor
out
dec
pop
dec
mov
pop
jns
les
lahf
push
test
sub
sub
sbb
push
in
cmps
(bad)
push
mov
or
iret
sbb
pop
push
scas
and
sbb
xchg
push
mov
movs
shr
into
push
cmp
push
mov
(bad)
sub
pop
mov
fidivr
xor
jbe
pop
js
es
mov
jmp
bswap
(bad)
sti
mov
out
clc
cmp
jne
mov
popf
shl
inc
mov
jno
imul
mov
push
(bad)
or
cmp
in
jge
ins
add
repz
jecxz
mov
repnz
cmps
popf
je
or
cmps
fnstsw
hlt
in
lods
ror
daa
sub
repnz
mov
push
js
xlat
mov
xchg
jno
mov
cdq
push
div
push
adc
out
bound
lahf
cmp
out
xor
sbb
cmp
cmp
stos
out
push
adc
stos
or
aad
jbe
cmc
add
daa
rcl
mov
cmp
mov
sub
fnstenv
push
scas
lock
fsubr
push
push
push
mov
sub
test
cmp
lods
inc
sbb
neg
mov
wrmsr
es
cmp
jecxz
xchg
sub
or
shr
into
push
sar
inc
(bad)
ins
shl
add
lods
neg
cmp
aaa
mov
dec
cmp
aad
shl
inc
mov
add
sub
jb
popa
xchg
retf
xor
imul
mov
mov
mov
xchg
add
jbe
mov
les
scas
and
mov
xchg
test
jle
adc
cmp
les
add
mov
inc
ret
pop
outs
(bad)
ins
sar
pop
push
leave
hlt
outs
int
mov
(bad)
xchg
pop
outs
or
lds
cmp
push
shr
stos
retf
push
arpl
mov
mov
mov
pop
(bad)
popa
leave
rcl
ror
lahf
jbe
push
lods
inc
and
and
sub
pop
cli
inc
add
or
imul
jp
rol
idiv
lods
aaa
add
shl
sbb
jo
jmp
sub
cmps
sbb
int
icebp
and
into
mov
or
outs
nop
cmp
mov
pop
sub
(bad)
xor
xchg
sti
jo
int3
xchg
imul
sub
mov
pop
xchg
(bad)
call
inc
test
mov
and
sub
mov
leave
add
rcr
jo
cwde
imul
call
inc
push
pop
mov
pop
adc
iret
cmp
push
dec
dec
out
in
syscall
cmc
rcl
cmp
ror
or
add
mov
stc
jb
sub
call
inc
xchg
loop
adc
js
in
out
mov
fdivr
cmp
outs
out
mov
stos
(bad)
cs
and
mov
js
sbb
jl
nop
imul
mov
push
add
or
test
or
addr16
mov
xlat
cwde
mov
pop
jne
xchg
rol
shr
add
mov
inc
int3
icebp
cmp
add
out
dec
loope
and
ror
lahf
sub
aam
add
(bad)
loope
pop
ja
shr
dec
sub
jbe
in
loope
mov
pop
ficomp
mov
loope
xchg
or
jl
inc
dec
test
cmp
inc
sti
cs
jnp
fsub
cmp
add
push
imul
out
adc
mov
popf
add
cli
into
call
push
add
test
loopne
(bad)
(bad)
leave
jae
mov
mov
retf
inc
ins
and
mov
dec
int3
add
test
jo
ins
mov
lahf
adc
leave
and
or
xchg
cmp
(bad)
out
mov
mov
or
jns
xchg
(bad)
fimul
call
jmp
add
(bad)
cmp
lock
in
popa
mov
xor
inc
mov
sbb
js
mov
jge
(bad)
js
xor
adc
jg
inc
cmc
mov
mov
xor
dec
jb
in
jns
cmp
rcl
xacquire
sbb
outs
out
mov
cmp
mov
jno
dec
push
ret
fcomp
in
mov
and
scas
in
inc
aad
pop
(bad)
cmp
inc
daa
sub
sbb
loope
scas
bound
inc
add
dec
mov
je
popf
sbb
hlt
sub
inc
and
xor
mov
icebp
mov
repz
inc
scas
jb
fld
or
shl
inc
xchg
or
jp
imul
std
sub
fnstsw
mov
addr16
std
not
xchg
inc
inc
xor
out
inc
sti
loop
mov
(bad)
push
mov
sub
or
inc
test
and
or
(bad)
mov
(bad)
xor
fld
mov
pop
jae
mov
lahf
fsub
fsubr
pop
dec
js
stos
sub
setl
test
aaa
adc
mov
or
(bad)
push
stos
xlat
imul
pop
sbb
ins
es
(bad)
sbb
fadd
mov
adc
ins
cli
les
leave
popa
cli
sub
add
and
dec
sub
leave
and
push
call
push
sar
xchg
jo
call
mov
mov
(bad)
stos
cmp
std
mov
pop
js
adc
inc
sbb
inc
scas
add
mov
(bad)
adc
inc
std
in
fadd
add
popf
ja
jle
out
out
cmp
outs
cmp
add
mov
mov
test
(bad)
(bad)
cmps
push
push
xor
out
dec
or
inc
icebp
xchg
pop
jno
test
daa
mov
lods
mov
adc
and
mov
jno
xchg
enter
daa
popf
out
(bad)
std
loope
adc
jb
shl
adc
in
and
es
sbb
out
sbb
cld
and
dec
pop
mov
sbb
inc
add
cmp
sbb
dec
adc
and
xor
sbb
mov
cmc
pop
xchg
cdq
adc
mov
sbb
push
js
sub
adc
dec
mov
stos
and
out
sub
dec
and
into
push
push
xchg
mov
inc
ficom
push
inc
stos
mov
ja
pop
sbb
or
sbb
inc
inc
cmp
adc
aaa
cmps
inc
xchg
sti
lock
pop
test
les
pushw
call
test
jmp
sub
or
add
sub
adc
adc
adc
jmp
inc
pushf
push
loope
mov
sti
(bad)
cmc
push
jno
aaa
leave
jns
push
inc
mov
add
repz
push
jl
fidivr
sti
ja
mov
push
or
adc
icebp
and
rcl
dec
or
rcr
fs
jno
xchg
or
xor
jle
in
(bad)
in
jae
sub
lods
jle
push
sbb
ret
add
push
ds
neg
pop
outs
mov
es
in
mov
pop
adc
mov
les
inc
jmp
mov
inc
dec
jns
out
popa
sbb
add
bound
inc
or
add
jmp
(bad)
dec
xor
or
popa
addr16
jnp
inc
mov
mov
add
cmps
sahf
out
jmp
int3
xchg
mov
mov
jmp
add
lods
pop
mov
ret
sub
fnsave
mov
mov
enter
cs
jne
cdq
popa
mov
inc
data16
jb
xor
cld
(bad)
into
out
xchg
inc
xchg
fs
inc
mov
bound
imul
mov
or
add
dec
cmp
aas
fwait
ret
je
out
or
pop
jg
push
pop
sbb
out
jmp
je
pop
mov
cmps
loope
lods
out
mov
scas
pop
fld
cs
mov
movs
cmc
xchg
jmp
push
sub
rol
xlat
stos
and
mov
aad
pop
inc
pusha
mov
fwait
es
clc
dec
call
adc
and
mov
popf
cmp
mov
aas
pop
mov
push
pop
xor
fwait
or
ds
daa
fnstsw
clc
rol
data16
mov
push
inc
or
(bad)
mov
in
sbb
les
sub
inc
stc
sbb
sbb
xchg
sub
mov
or
push
test
or
jns
jmp
icebp
jmp
and
jne
mov
repz
repz
cmp
jmp
jge
inc
nop
xchg
cs
retf
or
sbb
push
push
imul
popf
pusha
adc
(bad)
dec
or
dec
ret
adc
jmp
imul
jl
imul
test
xchg
out
cdq
iret
push
sahf
inc
sbb
dec
push
adc
push
dec
adc
mov
xor
pop
shr
cmps
add
add
jb
nop
jl
mov
or
sub
ss
jne
sub
movs
arpl
jecxz
cmp
xor
xchg
sub
cli
xchg
jecxz
pop
cmp
inc
push
bound
les
push
or
push
and
add
les
adc
jmp
pop
add
xor
dec
inc
or
mov
jge
mov
mov
sbb
jmp
push
adc
int3
in
jmp
popf
mov
test
xlat
push
jo
pop
pop
inc
push
hlt
ins
nop
in
adc
xchg
pop
mov
adc
ins
push
inc
test
in
sbb
xor
sub
xchg
add
rcl
movs
xchg
cmc
(bad)
mov
stos
or
test
mov
pop
(bad)
nop
ja
in
pop
into
pop
mov
xor
adc
enter
aam
or
mov
outs
loope
inc
stc
lods
mov
sbb
(bad)
dec
xor
movs
imul
rcl
and
xor
push
test
mov
push
jns
jge
out
in
loop
and
mov
sbb
div
mov
jmp
fimul
aaa
add
mov
pusha
loop
(bad)
pop
cld
push
dec
out
addr16
outs
jmp
xchg
push
sbb
sbb
fiadd
push
mov
mov
or
and
movs
mov
je
icebp
jbe
(bad)
test
cmp
shl
in
push
ins
push
and
test
xchg
dec
sub
mov
xchg
aas
bound
pop
push
xchg
rcr
or
cs
int
dec
mov
pop
adc
test
cld
std
cmp
and
sahf
add
call
bound
loopne
cs
rol
aad
daa
add
out
js
clc
inc
add
mov
retf
test
mov
sub
push
test
iret
sbb
out
mov
xor
int
or
rol
mov
std
xor
call
adc
aad
int
adc
jne
push
inc
cwde
scas
or
mov
cmp
dec
icebp
add
cdq
xchg
enter
push
ss
ins
repz
dec
push
ss
pop
add
test
fdivr
and
cmp
and
dec
(bad)
cwd
mov
sbb
les
dec
les
adc
test
sub
sbb
xchg
push
mov
retf
xchg
sbb
rol
xchg
adc
inc
fsub
mov
push
lds
mov
cmp
js
sbb
inc
leave
call
sbb
sbb
mov
ds
in
push
and
or
push
fidivr
mov
aad
cmc
jo
mov
dec
cs
inc
or
mov
ja
cmp
repnz
(bad)
cmp
dec
pushf
sub
pop
repz
int3
sub
pop
pop
lahf
sbb
xor
sbb
pusha
and
pop
cmc
sbb
xor
adc
mov
push
pop
outs
scas
test
sbb
sahf
sbb
dec
pop
sub
push
sub
add
movs
mov
shl
add
or
jbe
pop
jno
push
push
sbb
loop
mov
rol
mov
xchg
jo
jecxz
loop
jge
push
cli
inc
pop
pop
add
jmp
add
repz
jl
inc
in
or
retf
pop
cmp
pop
pop
push
fdivr
push
mov
enter
add
inc
mov
out
jecxz
add
push
mov
mov
clc
mov
or
movs
mov
in
fnstsw
or
sar
mov
dec
adc
lods
inc
mov
fldenv
sub
inc
cdq
add
enter
sbb
mov
imul
jmp
in
jne
mov
es
enter
sub
mov
sub
fsubr
push
inc
add
adc
fst
sub
lea
add
xor
sub
pop
sbb
cld
movs
dec
sbb
cmp
pop
je
pop
pop
jle
nop
xchg
loop
adc
mov
fsubr
mov
outs
or
je
jge
into
aas
jmp
test
out
sbb
out
sub
or
imul
mov
ja
cmp
jmp
inc
cmp
jo
dec
imul
inc
inc
sar
push
mov
mov
push
adc
jmp
sbb
retf
addr16
sbb
cmp
ins
mov
lds
jp
pop
(bad)
ins
addr16
ficomp
inc
pushf
mov
and
adc
fs
sbb
xor
sub
jne
les
in
jae
inc
jl
les
data16
xor
jl
mov
ret
pop
dec
cmp
mov
jae
cmp
test
repnz
pusha
push
jge
xlat
pop
ss
push
pop
(bad)
push
fbstp
loope
mov
rep
push
inc
stc
fstp
fcomp
add
mov
scas
fwait
cmp
ret
sub
jecxz
call
inc
jp
jb
or
(bad)
in
stos
mov
add
jb
jl
ins
cmps
cmp
and
mov
mov
sar
sub
jb
movs
push
mov
xor
fbstp
inc
ret
xchg
pop
inc
cmp
xchg
(bad)
xor
outs
aad
fst
neg
adc
push
fcomp
popf
add
mov
or
xlat
and
aas
fcomi
pop
ja
fdiv
sub
xchg
adc
fiadd
fmul
push
pop
rcl
xchg
clc
inc
sbb
arpl
add
and
sti
cs
cdq
jo
rol
pop
jmp
stc
inc
pop
jo
in
push
inc
sar
cli
jle
scas
fistp
inc
mov
into
cmp
jecxz
ret
sub
inc
mov
and
inc
and
xchg
shl
inc
xor
or
imul
xchg
mov
js
dec
dec
in
sub
mov
rcl
inc
lods
xchg
and
adc
sbb
sbb
xchg
inc
cmp
push
inc
mov
das
adc
mov
pusha
adc
xchg
xor
getsec
mov
mov
fwait
test
xchg
cld
or
cwde
shl
cmp
dec
mov
xor
sub
mov
push
add
adc
xor
adc
jmp
dec
add
mov
scas
cmp
(bad)
lahf
inc
aad
std
adc
ds
ins
jnp
inc
clc
int
(bad)
fdivr
iret
out
pop
jo
fdiv
jne
retf
cmp
or
stos
cmps
out
rcl
xchg
xchg
int3
and
jae
inc
sub
inc
adc
sbb
push
push
xchg
xor
test
and
lds
sbb
aad
fadd
xchg
xchg
push
cmp
in
add
pushw
sub
aad
sbb
sahf
jmp
cmp
out
test
and
mov
sub
xchg
xchg
and
pop
pop
int3
retf
clc
xor
dec
jnp
jno
fcmovb
fst
(bad)
mov
pop
sti
aaa
adc
adc
push
cmp
(bad)
sar
movs
adc
inc
push
jns
nop
lds
and
cmp
fstp
shr
js
jecxz
pop
mov
add
mov
call
jp
shl
scas
ins
outs
imul
cmp
fnsave
cmp
xor
mov
cwde
(bad)
into
pop
fwait
or
dec
call
pop
shr
xchg
push
aad
xchg
shl
sar
je
movs
xchg
pop
and
or
push
or
push
retf
out
mov
inc
aam
ret
adc
mov
pushf
jbe
fcom
inc
sbb
inc
xor
add
jmp
add
repnz
mov
mov
sti
arpl
scas
pusha
cmp
fld
xlat
jns
mov
pop
fidiv
mov
xchg
jne
xor
jge
leave
clc
loope
jae
sbb
clc
aas
dec
loopne
cwde
sub
aam
dec
aam
test
adc
fld
out
jecxz
nop
iret
add
sub
ficomp
std
mov
outs
(bad)
loope
sub
cmps
imul
arpl
push
call
pop
cmc
dec
push
xchg
mov
(bad)
cmovs
or
push
mov
or
xor
bnd
cmps
push
push
stos
fstp
and
dec
jmp
shl
and
ror
add
scas
xchg
js
mov
cmc
repnz
mov
xlat
mov
int3
push
xchg
mov
mov
push
ror
pop
inc
xchg
push
ror
push
mov
mov
sub
daa
sub
cmps
jmp
jg
int3
jge
fdivr
dec
or
gs
xchg
pop
cmp
dec
pop
out
or
pop
inc
cmp
add
in
xchg
sub
and
mov
enter
outs
mov
sub
ins
push
pop
mov
mov
cli
dec
(bad)
aad
dec
and
mov
dec
out
inc
cwde
mov
je
xchg
ss
mov
push
mov
dec
xchg
out
jmp
push
push
mov
es
test
ins
mov
push
xlat
mov
adc
ds
in
and
pop
dec
out
inc
retf
add
pop
sbb
pushf
stos
scas
and
nop
mov
mul
sbb
push
xlat
in
inc
in
jmp
jmp
jmp
leave
jle
inc
loopne
std
(bad)
test
xchg
jg
mov
int
sar
loopne
mov
pop
cmp
clc
jecxz
jmp
or
or
setge
cmp
dec
mov
call
repnz
into
pop
mov
scas
cmp
pushf
pop
adc
popf
mov
xlat
xchg
dec
push
repz
or
ja
sub
add
mov
xor
in
inc
leave
add
imul
ret
adc
es
dec
test
imul
call
(bad)
into
mov
in
pop
(bad)
mov
inc
push
ror
push
rcl
clc
push
test
int3
sbb
call
sub
jbe
fld
sbb
cdq
(bad)
jl
loop
outs
lock
rcr
jns
pop
add
cld
pop
(bad)
jo
(bad)
push
cs
xor
stc
(bad)
lahf
jnp
int
iret
mov
adc
mov
xchg
repz
fnstsw
(bad)
mov
push
dec
push
mov
push
bound
mov
xlat
pop
loop
mov
add
jbe
hlt
cmp
pop
dec
inc
icebp
clc
in
dec
ins
or
nop
or
inc
add
ror
mov
fistp
outs
cmp
out
mov
xchg
stos
push
enter
setge
hlt
jle
test
ror
data16
jp
xor
fisttp
mov
sub
xor
test
call
cmp
mov
cmp
adc
test
movs
pop
mov
das
dec
ret
mov
xor
mov
outs
scas
inc
ja
mov
outs
vpsubd
icebp
(bad)
ins
outs
shr
enterw
(bad)
mov
sbb
ret
jnp
jp
xchg
test
shl
mov
sbb
aas
shl
jns
cwd
fwait
jbe
sub
pusha
or
ror
sahf
xor
push
bound
xchg
xor
mov
and
es
sahf
sub
repnz
ficomp
push
shl
in
test
push
sub
scas
inc
mov
pop
xor
pop
add
push
mov
push
inc
pusha
dec
js
mov
adc
pop
ret
fs
jmp
sar
adc
cmp
outs
mov
mov
dec
fdiv
jge
cmp
pushf
sbb
mov
or
outs
fiadd
int
rol
inc
(bad)
sub
adc
jecxz
inc
gs
jns
movs
das
in
jp
mov
shl
lds
dec
mov
jae
js
lods
cs
xchg
rcl
fcom
push
jle
push
xor
inc
in
shl
stos
or
ins
or
jge
imul
cmc
scas
push
dec
sahf
pusha
leave
mov
adc
cmps
push
push
xchg
dec
ss
cwde
add
inc
mov
in
ds
add
es
mov
dec
stos
fild
mov
and
mov
jle
jb
das
shl
cmps
xlat
jnp
outs
ja
mov
mov
push
arpl
mov
mov
dec
fucompp
mov
jb
dec
daa
pop
imul
and
or
push
lods
sbb
add
fs
pushw
into
lods
sbb
sub
adc
and
mov
std
mov
jo
cmp
jne
rcr
shl
push
stos
fbld
aad
mov
dec
int3
mov
ja
xchg
retf
adc
xchg
mov
out
jb
sbb
xchg
das
fs
fcom
fisttp
outs
lock
adc
mov
xor
jns
mov
popf
or
dec
dec
add
dec
adc
dec
xchg
jne
cmp
push
hlt
push
(bad)
iret
mov
pop
(bad)
sbb
push
sub
and
(bad)
pop
cmp
sar
jp
aam
fsub
int3
inc
mov
pop
retf
pop
call
addr16
dec
cmp
fwait
dec
sub
pop
ins
add
inc
sub
lea
das
(bad)
ret
lds
dec
xchg
pop
les
movs
popf
pop
dec
lahf
dec
jb
cmp
sub
int3
xchg
add
and
push
addr16
arpl
ficom
inc
enter
pop
xchg
add
sub
push
test
test
xor
jge
jle
jle
out
les
xchg
cli
loop
xor
cli
and
pushf
daa
mov
push
test
and
jbe
mov
popa
movs
retf
bound
div
push
dec
xchg
mov
push
jo
mov
fs
jp
push
nop
xchg
jns
lods
mov
pop
jmp
mov
stos
jne
mov
mov
sub
xchg
mov
xlat
xchg
pop
shl
mov
pop
pop
scas
stos
dec
sub
jbe
pop
sbb
cmp
mov
mov
movs
mov
out
int3
and
rol
stos
ins
loopne
inc
pop
pop
cmc
jno
ret
push
cwde
mov
xor
inc
xor
adc
nop
cdq
in
addr16
test
inc
push
push
retf
sbb
das
addr16
mov
js
(bad)
adc
movs
cwde
dec
jmp
jmp
jmp
cmp
cs
mov
pop
adc
data16
jmp
push
push
xchg
mov
add
lock
cwde
dec
xchg
xchg
test
mov
dec
movs
stos
arpl
int3
sbb
lock
movs
adc
ins
lock
cmp
sbb
stos
cs
push
xchg
lea
xor
inc
xchg
mov
(bad)
xchg
imul
(bad)
xchg
mov
ret
inc
(bad)
and
mov
mov
pop
jns
cld
neg
mov
cmp
mov
or
jae
push
les
inc
arpl
or
ret
in
ret
inc
ins
loopne
and
loope
dec
addr16
mov
arpl
xlat
fisubr
(bad)
pop
mov
cmps
or
sub
adc
mov
(bad)
lods
jb
push
(bad)
dec
or
cdq
retf
and
xor
daa
mov
mov
leave
fsub
(bad)
pop
arpl
aaa
out
cmp
push
pop
adc
hlt
jg
call
mov
movs
jmp
mov
ja
cmp
inc
scas
adc
mov
xor
xchg
pop
mov
mov
repnz
je
aas
(bad)
mov
lock
dec
pushf
cmp
mov
inc
hlt
pop
and
enter
mov
stc
jl
je
ret
cmps
adc
push
sbb
pop
xchg
mov
xlat
and
jg
mov
mov
and
mov
repz
dec
dec
stos
inc
nop
jmp
ss
call
int
das
mov
and
pop
iret
sbb
mov
arpl
out
(bad)
retf
jne
data16
pop
mov
repz
stc
mov
addr16
add
or
add
inc
shl
mov
cmp
and
ins
push
adc
sbb
xor
gs
(bad)
das
xor
ret
stos
mov
xor
out
data16
mov
xor
pop
pop
stc
loopne
aam
fs
(bad)
mov
aad
shl
jmp
jecxz
mov
mov
call
(bad)
mov
dec
gs
pop
mov
out
jge
jb
mov
or
sahf
dec
dec
xchg
cmps
mov
jl
cli
fdiv
cmp
dec
fsub
nop
xchg
mov
imul
arpl
adc
pop
or
jnp
mov
jbe
cmp
dec
push
cmp
fs
repnz
push
test
popf
(bad)
mov
dec
dec
mov
int3
and
or
into
sub
dec
les
xor
ins
scas
cmp
and
retf
add
mov
xor
aad
sub
adc
mov
inc
(bad)
cmp
int
fdivr
jns
ja
sbb
repnz
push
(bad)
push
loop
push
mov
and
ficomp
dec
xor
cs
shr
ficomp
jb
sbb
pop
xchg
push
xchg
sbb
or
dec
sbb
mov
sub
dec
aad
sbb
mov
nop
or
jno
mov
inc
data16
dec
dec
dec
xor
imul
enter
inc
popf
xchg
daa
stos
xchg
xlat
or
rcl
sbb
and
mov
popf
xor
sahf
aad
or
or
int3
je
mov
and
push
in
xor
dec
push
aad
(bad)
sbb
stos
ss
adc
cmps
les
push
lods
xchg
(bad)
cld
into
xor
pop
pop
dec
fldenv
ret
dec
pop
es
rol
and
leave
sub
cli
jmp
sub
mov
fmul
out
and
es
js
in
mov
lods
fcmovu
dec
pop
aad
js
push
push
movs
arpl
xchg
xchg
pop
and
scas
xchg
dec
xor
into
pop
test
adc
xchg
mov
bound
stos
popf
pop
xchg
mov
adc
ror
ret
int
xor
int
outs
inc
in
(bad)
lods
cmp
(bad)
sub
push
out
pop
sbb
addr16
sub
inc
lock
xor
or
sbb
push
mov
xchg
jmp
ins
push
mov
xchg
or
in
add
xor
movs
loop
push
in
bound
mov
mov
jne
xchg
sub
pcmpeqd
cmps
imul
mov
sub
xor
loop
out
rcl
pop
push
fsubr
pop
push
jmp
inc
stos
add
ror
inc
add
(bad)
jle
leave
add
ret
or
and
or
dec
and
dec
mov
mov
movs
or
push
xor
push
mov
pop
mov
xor
(bad)
xlat
inc
inc
mov
mov
aaa
repnz
fmul
mov
xor
push
inc
lods
stos
inc
aad
gs
jle
out
sbb
stos
sbb
pop
sub
ret
sti
test
ja
movs
push
or
push
jno
pop
dec
mov
icebp
dec
fisub
mov
and
xchg
sub
sub
inc
cmp
cld
push
leave
aaa
or
in
mov
mov
and
shr
add
mov
lock
cmp
add
mov
mov
cdq
dec
shr
mov
in
pop
in
jmp
loope
test
mov
add
vxorps
sub
xor
js
(bad)
shl
cmps
in
cmps
push
lods
mov
add
xor
sahf
xchg
sub
fwait
je
dec
pop
push
sub
jmp
xor
rcr
mov
enter
dec
ret
cdq
push
lods
leave
das
xchg
xchg
addr16
cwde
outs
imul
sub
lock
pop
and
sahf
adc
icebp
pop
ret
imul
dec
sti
stos
bnd
ror
and
les
call
out
in
rcl
iret
loop
push
movd
sbb
push
test
jmp
sub
mov
out
jbe
push
scas
add
sub
dec
or
int3
cmp
push
mov
jnp
pop
shl
(bad)
push
mov
jb
adc
cmp
mov
repz
add
sahf
xor
or
or
pop
add
shl
icebp
or
adc
sbb
mov
pushf
ret
pop
test
fisttp
mov
(bad)
les
cld
or
dec
or
(bad)
leave
test
ins
(bad)
add
out
les
sub
cmps
xor
imul
add
fs
sbb
ins
cld
push
mov
xor
adc
retf
nop
inc
scas
sub
pusha
pop
jbe
and
mov
ret
fwait
push
fstp
inc
xor
int3
outs
repnz
adc
adc
lods
out
push
inc
call
pop
in
push
ins
mov
add
pop
sub
in
sbb
push
xchg
pop
and
movs
pop
sbb
add
adc
sub
adc
xchg
(bad)
retf
push
cmps
fdivr
mov
push
dec
aaa
xchg
addr16
sbb
push
xchg
(bad)
ins
mov
dec
cmps
in
mov
xor
xchg
arpl
mov
js
loop
leave
cmp
xor
adc
mov
enter
dec
retf
fistp
outs
add
in
mov
and
add
in
push
out
xchg
inc
mov
ss
mov
jmp
movs
cmp
lds
adc
xor
sub
in
dec
fld
push
mov
loope
jno
test
lahf
or
dec
cwde
cdq
mov
in
push
outs
xor
repz
loope
pop
sbb
rcr
shl
push
sub
scas
add
test
pop
sahf
scas
(bad)
cli
cmp
xchg
ss
data16
push
cwde
adc
pop
popf
pusha
sub
dec
test
jg
ins
cmps
sti
cdq
fs
dec
scas
test
fisub
or
xchg
adc
adc
aad
popa
and
jecxz
push
cwde
push
push
clc
outs
data16
mov
xor
push
mov
jp
mov
mov
cmp
push
inc
cld
xor
jle
jo
pop
sbb
dec
dec
xchg
pop
adc
mov
and
xor
imul
ror
retf
jmp
mov
dec
pop
mov
jg
sahf
mov
mov
arpl
test
cmp
push
imul
push
xor
outs
in
mov
popa
push
rcr
jb
sub
jecxz
leave
xchg
pop
cwde
sbb
(bad)
mov
mov
pop
dec
xchg
call
pop
retf
pop
adc
leave
xlat
adc
jg
pop
jle
inc
pop
sbb
sub
add
scas
pop
push
push
and
mov
outs
mov
ss
pop
sti
bndldx
jns
xchg
push
and
inc
stos
mov
nop
xlat
sub
dec
addr16
das
xchg
hlt
dec
lahf
push
add
dec
mov
add
mov
xchg
ds
sbb
xchg
aam
pop
into
xor
pop
jmp
or
and
fstp
sub
push
dec
mov
adc
test
jne
outs
add
aam
arpl
popa
pop
xor
pop
mov
push
inc
imul
and
ss
repnz
imul
push
mov
ror
nop
cmc
adc
push
dec
mov
pop
jns
pop
or
hlt
adc
in
call
sub
xchg
and
mov
ins
popf
dec
fadd
ds
in
mov
sbb
aam
rcr
ds
pop
test
cmp
sbb
xor
add
xor
xlat
mov
or
lods
mov
xchg
sbb
jb
xchg
dec
jmp
xchg
int3
(bad)
shl
push
adc
sbb
adc
adc
int
cwde
xchg
add
jecxz
mov
pop
xchg
push
cmp
stos
or
lods
jge
mov
rol
cmp
enter
and
jnp
inc
push
je
retf
test
jne
mov
rcl
and
int
inc
icebp
movs
jnp
aad
stos
pop
push
adc
int3
xchg
mov
lea
mov
jle
jge
ss
jns
add
ja
fadd
jecxz
xchg
jl
out
push
sub
shl
enter
sub
scas
test
mov
dec
test
cmp
jns
add
dec
xor
into
stos
lock
mov
push
add
fld
mov
dec
jmp
pop
scas
sbb
sub
loopne
sahf
add
bound
cld
dec
xchg
movs
or
adc
inc
les
xchg
inc
ins
push
stc
sub
sar
das
xchg
push
or
adc
add
mov
jmp
mov
pushf
sbb
data16
movs
jg
hlt
or
sbb
stc
in
push
scas
hlt
mov
xlat
dec
inc
int3
(bad)
mov
push
les
sub
js
sbb
sub
mov
push
push
xor
rol
fidiv
mov
(bad)
jno
push
pop
pop
mov
aas
jae
stos
std
jno
iret
xor
fld
push
cdq
shl
xor
sub
push
and
imul
adc
data16
xor
sahf
xor
mov
pop
inc
hlt
jns
sar
in
cdq
cmps
jmp
inc
bound
lods
dec
inc
xchg
push
scas
mov
rcl
sub
lock
(bad)
jae
nop
mov
loopne
lahf
fimul
mov
add
ret
push
xor
jmp
fst
adc
cmp
rol
aam
nop
xchg
inc
push
push
push
in
into
cdq
test
push
xor
popf
leave
scas
in
inc
and
push
pop
scas
and
cli
(bad)
movs
syscall
dec
fld
data16
adc
pop
aam
cwde
out
sub
data16
adc
inc
add
icebp
gs
dec
sbb
aam
inc
shl
or
leave
sub
pop
iret
ins
xchg
push
add
jmp
mov
push
test
iret
jns
iret
xchg
fcmovnb
cmp
adc
inc
push
and
imul
xchg
mov
fidiv
mov
mov
sub
xor
push
inc
nop
pop
test
jo
sub
jecxz
dec
push
ins
data16
mov
sbb
inc
fisttp
add
clc
cmp
and
popa
fstp
xchg
in
fxch
loop
addr16
in
mov
ds
mov
and
or
lea
pop
add
dec
xchg
div
pusha
inc
in
jmp
cdq
pop
inc
gs
or
sub
mov
inc
and
call
dec
ss
pusha
xor
mov
and
push
xchg
dec
repz
mov
js
sti
sub
stos
cmc
xchg
jl
shr
xor
push
popa
(bad)
rol
inc
jg
iret
ja
cmp
repz
cld
xor
loop
jl
mov
mov
into
call
jl
mov
pop
pop
jns
mov
movs
push
pop
xor
test
test
jae
push
jbe
lods
pop
xlat
out
adc
mov
mov
cmp
cwde
dec
push
in
pop
xchg
adc
push
call
cwde
xor
dec
jg
mov
test
fiadd
into
popa
and
xor
es
ret
loopne
xor
add
push
adc
int3
mov
movs
push
int3
cmp
fsubr
outs
push
jns
mov
test
dec
or
hlt
ins
mov
cmp
adc
inc
iret
bnd
push
jg
or
repnz
mov
cmp
cs
leave
and
jne
(bad)
bound
test
push
mov
repz
or
leave
cwde
(bad)
jb
pop
sub
stos
jne
ss
mov
into
lods
jns
sbb
fucomip
mul
lds
cdq
and
pop
les
pop
in
adc
adc
sahf
iret
out
inc
jecxz
lds
and
mov
push
or
sub
movs
cld
dec
inc
mov
adc
call
pop
imul
pop
mov
or
mov
scas
and
inc
pushf
stos
enter
sbb
lds
push
in
fimul
data16
pop
cs
dec
mov
sub
repnz
mov
test
push
fcomp
mov
test
push
sahf
cmps
(bad)
fstp
test
ss
xchg
call
rcl
call
pop
and
fimul
dec
icebp
push
and
ins
xchg
test
push
ins
fsub
pusha
scas
out
fimul
mov
and
gs
cmp
push
cmp
jmp
inc
sub
popa
mov
push
adc
adc
retf
xor
sbb
inc
cmps
mov
adc
pop
xor
add
mov
test
mov
mov
(bad)
mov
movs
or
pop
mov
loop
jmp
inc
add
daa
ret
fstp
add
adc
xchg
or
call
repnz
std
cli
sbb
outs
(bad)
xchg
icebp
(bad)
sbb
sbb
aam
push
mov
shr
mov
jb
call
(bad)
pop
inc
cmp
xchg
mov
dec
ret
cli
in
inc
lea
jno
push
mov
add
mov
outs
sub
sub
dec
cmp
dec
pop
enter
addr16
ds
adc
call
ret
sub
pop
add
mov
pop
pop
and
xchg
stc
pop
inc
jecxz
ret
lods
popf
nop
or
(bad)
push
xor
jmp
pop
cmp
cmp
lods
push
ret
inc
fcomp
pop
jmp
cli
mov
mov
jg
(bad)
push
push
sbb
mov
xor
jno
adc
arpl
cmp
dec
push
js
sbb
test
aad
push
stos
sub
mov
arpl
and
push
test
dec
arpl
scas
retf
out
pusha
xchg
mov
jnp
mov
rol
mov
inc
xor
dec
pop
add
sub
(bad)
add
rcl
push
jge
dec
sahf
push
(bad)
jmp
dec
in
cmp
mov
bswap
mov
cmp
xchg
cmp
pop
daa
cmp
shl
pusha
cmp
and
xlat
and
and
sbb
push
push
xchg
inc
sub
in
mov
jo
cdq
lods
ja
mov
inc
cdq
xchg
out
pop
outs
sbb
ins
add
aam
movs
push
inc
scas
mov
inc
adc
loopne
outs
shr
sub
in
fisttp
xor
mov
xor
imul
(bad)
pop
or
or
and
cmps
cmp
in
dec
mov
out
mov
shl
cmp
pop
cmp
sbb
push
dec
test
retf
push
aam
pop
add
mov
sbb
pop
popa
movs
mov
mov
jo
scas
mov
sbb
mov
test
push
shr
push
test
mov
xchg
xor
mov
and
pop
mov
adc
fadd
test
mov
rcr
pop
popf
repnz
call
iret
jge
push
mov
push
push
in
mov
test
and
cmps
push
adc
push
pop
shl
loope
jb
(bad)
sbb
xchg
ds
stos
pop
dec
mov
xchg
shl
stos
inc
mov
clc
dec
ret
sbb
ror
mov
inc
bound
and
out
retf
adc
repz
and
cmc
mov
dec
jo
push
sub
lea
neg
pop
adc
in
in
push
std
dec
sub
xchg
movs
retf
mov
mov
cmp
xlat
jle
(bad)
push
repz
xor
ins
clc
outs
test
movs
not
loope
mov
(bad)
shl
push
sub
ins
mov
dec
mov
xlat
scas
test
getsec
cmc
pop
xchg
push
sbb
out
ins
into
cmps
xchg
popa
hlt
scas
and
loope
pop
enter
dec
imul
dec
adc
in
pop
inc
scas
dec
add
lods
push
xor
mov
movs
fs
mov
imul
movs
imul
xchg
jbe
dec
aad
add
fisubr
or
aaa
retf
fisub
cmps
je
push
adc
test
mov
lea
imul
mov
popa
aad
nop
sbb
mov
into
jo
lds
loope
ror
shr
bound
jb
push
int3
in
xor
mov
pop
xchg
cdq
xchg
call
mov
pop
arpl
shr
in
sub
bound
push
cmp
leave
mov
pop
ins
jmp
fstp
mov
push
shr
xchg
call
dec
push
mov
xor
jmp
fucomip
inc
add
in
scas
or
sub
and
nop
pop
pop
and
jnp
xchg
dec
les
xchg
dec
out
sbb
add
jmp
dec
in
fld
or
das
nop
mov
mov
retf
cdq
mov
imul
imul
cmps
mov
jns
ficom
dec
mov
aaa
lods
call
push
adc
push
nop
add
cmp
retf
scas
inc
je
dec
test
dec
and
mov
lds
xchg
scas
and
stc
jecxz
(bad)
xchg
rol
inc
xor
lds
xor
leave
adc
adc
dec
mov
xor
scas
out
movs
ins
popf
sub
pop
sub
cmp
test
clc
aam
mov
repz
in
push
mov
jno
cwde
adc
repz
lds
(bad)
mov
es
mov
mov
adc
(bad)
loop
cmp
mov
dec
add
movs
and
shr
pop
xchg
out
bound
push
fist
inc
mov
popf
jns
fmulp
cmc
adc
mov
(bad)
jns
call
cwde
push
mov
dec
xchg
mov
mov
movs
sbb
in
adc
push
xor
dec
cli
data16
add
lods
ret
mov
retf
test
and
dec
xor
sub
xchg
ficom
pop
jbe
add
pop
sbb
test
fdiv
push
pushf
in
jbe
inc
pushf
sub
dec
xchg
and
cmps
xchg
xchg
or
scas
std
dec
xchg
(bad)
cdq
dec
mov
ins
nop
xor
jg
enter
nop
test
mov
in
inc
add
xor
push
and
mov
mov
int3
add
pop
nop
cmp
jp
push
lods
ins
or
shr
imul
xchg
jle
push
inc
ds
popf
movs
push
or
xor
sub
xchg
xor
jl
sub
mov
add
rol
jmp
shl
daa
mov
mov
pop
sub
push
ja
pop
xchg
in
adc
mov
adc
or
ret
nop
popa
loop
xchg
xchg
hlt
dec
fs
test
nop
adc
push
and
aam
imul
imul
jno
mul
loope
xor
psrld
bound
js
dec
jnp
or
inc
lahf
dec
cmp
call
cwde
and
push
lods
jbe
popf
jle
nop
sub
xchg
les
data16
loop
ja
ror
jns
enter
lock
sbb
neg
inc
dec
xchg
sub
ins
pop
bound
cmc
inc
sbb
pusha
je
xor
scas
push
mov
jmp
mov
inc
mov
mov
loop
inc
and
lea
xchg
sar
or
in
cmp
rcl
cmps
(bad)
cwde
test
ror
cmc
mov
mov
xchg
test
int3
pop
fwait
mov
push
inc
shl
or
daa
jecxz
jg
mov
(bad)
push
ds
inc
sbb
fst
cmp
sbb
pop
pop
ja
mov
adc
bnd
or
repnz
pop
gs
arpl
push
call
and
and
adc
mov
shr
xchg
(bad)
(bad)
mov
dec
in
scas
or
lods
pop
push
sub
mov
and
scas
fs
dec
dec
mov
push
gs
cmp
sbb
lea
dec
mov
mov
mov
add
nop
jecxz
pusha
xchg
je
popf
lahf
pop
mov
mov
enter
and
jge
stos
pop
dec
int
stos
xor
or
movs
mov
push
popa
ds
and
and
adc
aad
jns
test
dec
ins
sub
sbb
mov
sub
shl
inc
mov
xchg
inc
int
push
pop
cmp
je
and
add
jno
push
xchg
hlt
leave
dec
pop
(bad)
(bad)
test
dec
daa
jl
enter
mov
icebp
pop
hlt
push
jno
mov
es
fcmove
xor
sub
jb
pop
cmp
inc
das
test
push
add
scas
pop
or
les
mov
xor
xchg
dec
ret
lods
mov
cwde
sahf
sbb
add
dec
sub
and
adc
pop
aad
sub
add
mov
xchg
fcom
lea
fmul
dec
add
sbb
add
cld
retf
into
(bad)
pop
cli
jge
test
adc
daa
test
dec
sub
xchg
or
and
or
mov
aaa
mul
inc
mov
inc
jb
int3
dec
sbb
(bad)
int
jae
push
mov
loop
cmp
push
mov
inc
sti
ds
add
arpl
mov
mov
xor
add
sub
mov
bound
imul
jne
loop
dec
pop
fcom
xor
lock
cld
shl
mov
jbe
cmp
call
dec
aas
mov
nop
xor
imul
and
dec
inc
pop
xor
push
jb
cmp
add
jmp
lods
push
dec
xlat
dec
test
pop
lahf
jo
ret
mov
add
jbe
cmp
cdq
ja
push
cdq
mov
adc
in
add
xlat
cmps
fist
icebp
add
lds
cwde
cli
sbb
rcr
stos
push
mov
push
loopne
fs
fs
mov
shr
les
sbb
mov
test
les
mov
mov
add
es
dec
mov
sbb
push
imul
xchg
movs
in
fld
dec
ja
neg
dec
loop
jge
scas
mov
imul
push
aaa
inc
pop
jae
inc
adc
fadd
pop
sub
inc
out
movs
mov
iret
xchg
int3
push
aas
xor
xchg
pop
imul
or
jmp
loope
inc
call
push
inc
fwait
fs
cmps
lea
das
pop
ins
imul
mov
pushf
mov
push
jmp
adc
push
or
sub
mov
push
rcr
dec
cmp
fstp
xchg
in
fldlg2
add
xchg
imul
je
(bad)
nop
dec
out
mov
mov
adc
cmp
cmp
jg
mov
frstor
mov
pop
out
setno
test
lds
push
sbb
or
xchg
les
loope
pop
pop
pop
pop
sar
push
mov
jb
daa
mov
fimul
mov
jmp
or
adc
jmp
pop
and
sub
test
ins
cmp
mov
adc
sub
cmp
lods
cmps
add
aas
lea
sub
sbb
outs
push
push
sbb
xchg
dec
dec
dec
cld
movs
daa
push
jmp
js
dec
clc
dec
clc
mov
mov
rcr
push
test
xlat
push
lea
jle
mov
jne
push
xchg
push
xchg
and
imul
(bad)
dec
dec
shr
and
mov
idiv
pop
fsub
push
pop
xor
jecxz
xchg
inc
scas
push
loope
sbb
and
shr
das
or
in
mov
clc
jl
icebp
or
sub
sub
in
pop
ror
mov
pop
fwait
push
xchg
sbb
in
loopne
push
xchg
cmp
pop
fsub
nop
inc
scas
shl
into
mov
out
movs
inc
xor
ins
sbb
jb
xchg
inc
sbb
add
xchg
mov
std
popa
call
push
pop
sbb
retf
add
and
gs
jns
adc
pushf
push
in
or
and
mov
cwde
jb
imul
les
aad
stc
push
(bad)
shr
mov
and
call
mov
aas
aam
repnz
sub
jmp
push
jecxz
mov
mov
nop
mov
add
inc
fxtract
and
out
jmp
arpl
cli
in
in
test
popf
mov
pop
and
push
mov
dec
mov
pop
shr
push
int
inc
mov
mov
push
and
mov
jb
lds
jmp
sbb
sar
shl
test
(bad)
lods
dec
xchg
cmp
mov
fxch
cmp
retf
or
sar
mov
mov
in
cwde
std
mov
sub
dec
out
and
cmps
clc
cmp
int
add
sub
mov
sub
scas
and
mov
xchg
aad
(bad)
mov
aas
cmps
jg
sbb
addr16
mov
scas
xor
or
sbb
pushf
cld
sbb
adc
add
imul
jmp
mov
rcr
dec
pop
and
leave
bound
fimul
nop
jo
mov
or
inc
or
jp
jl
mov
jno
lahf
xor
ss
dec
inc
or
dec
(bad)
addr16
inc
jno
sbb
add
js
or
sub
mov
xchg
leave
dec
scas
fnstsw
cmp
push
xor
fucomp
ins
inc
xchg
inc
mov
xchg
int
pop
loopne
loope
and
cmp
cmps
adc
push
pop
mov
mov
dec
repnz
es
aam
pop
push
pusha
mov
sbb
ret
(bad)
mov
rcl
mov
and
xor
jecxz
dec
pop
ds
call
cmp
outs
sub
scas
pop
(bad)
inc
in
and
bnd
adc
pusha
out
(bad)
hlt
mov
aad
fdiv
cmp
push
cmc
inc
rcr
dec
xchg
(bad)
int
sub
cmps
popf
jle
ins
daa
lea
sub
lods
xchg
jns
xchg
inc
loope
xchg
lods
adc
mov
xor
add
pop
cs
sub
xchg
inc
and
xchg
cwde
div
and
leave
lea
pop
mov
jo
push
dec
test
pop
xchg
pop
adc
int
(bad)
stc
ror
shl
cmp
lods
and
adc
mov
movs
jg
or
xor
add
ret
inc
or
xchg
pop
push
add
jmp
cmp
sub
cs
loope
xchg
iret
hlt
jmp
test
ds
jmp
pushf
pop
sub
pusha
gs
enter
mov
iret
mov
(bad)
das
int
fst
pop
in
fidivr
adc
pop
test
jbe
pop
into
pop
sub
out
fidiv
cwde
lods
repnz
push
jo
inc
cmps
and
mov
imul
js
push
cld
mov
jno
dec
sbb
dec
xchg
ret
mov
adc
adc
lds
movs
fld
mov
clc
cmp
shl
(bad)
inc
rcl
and
cmp
cs
mov
stos
(bad)
(bad)
mov
xor
pusha
mov
pop
adc
jnp
rcl
ins
cwde
inc
jns
loop
arpl
inc
xlat
inc
add
(bad)
sub
bound
cmps
(bad)
pop
data16
das
in
rcr
push
pop
push
xchg
xor
pop
push
inc
sbb
mov
gs
jmp
movs
ins
or
sub
and
xor
jbe
or
lds
or
inc
(bad)
mov
mov
and
loop
(bad)
bound
pop
mov
or
and
pop
xor
in
sbb
xor
nop
xchg
or
add
xchg
xchg
lds
sub
or
xor
repnz
pop
sub
int
bound
jnp
or
pop
xchg
aas
(bad)
cld
repz
mov
mov
aas
repz
loope
pop
into
call
out
test
(bad)
lahf
jp
dec
out
jmp
gs
retf
scas
mov
pop
jno
jmp
int
out
out
pop
pop
fdiv
loop
fwait
aaa
mov
mov
jle
xchg
dec
outs
(bad)
adc
in
sahf
(bad)
fistp
sahf
fsubr
leave
dec
mov
push
scas
icebp
jmp
sbb
imul
loope
mov
mov
pop
jge
es
xchg
cs
cmp
das
loopne
pop
ret
add
jo
aas
add
or
(bad)
fistp
cld
jp
popf
scas
js
mov
fdiv
outs
fld
mov
xor
fdiv
mov
push
gs
retf
das
outs
jns
gs
cmp
aas
lea
clc
loope
popa
sub
xchg
outs
loope
xor
cdq
out
js
cmp
lock
scas
lahf
jecxz
xchg
iret
std
repnz
jle
shl
cmp
retf
mov
setle
xor
mov
int3
mov
test
cmps
iret
mov
fld
aam
test
and
in
outs
jns
push
cli
cmp
pop
cli
lods
das
out
loop
fild
mov
mov
jecxz
icebp
ss
mov
aam
add
dec
fmulp
rcr
and
mov
add
test
ja
xor
xlat
(bad)
pop
je
mov
pusha
icebp
les
jno
inc
pop
mov
in
in
jle
cmps
jmp
xor
cmps
xor
mov
mov
jns
cmc
push
test
mov
add
mov
pop
add
add
mov
inc
icebp
push
fdivr
in
xchg
ja
mov
nop
outs
hlt
push
push
loop
and
or
ja
jne
leave
scas
and
stc
rcr
mov
out
sub
pushf
cmp
push
dec
inc
cld
icebp
ja
or
add
push
loop
and
dec
mov
xchg
fld
dec
and
push
adc
aam
xor
sub
das
andps
cmp
sbb
mov
cmps
jmp
sub
adc
inc
adc
and
adc
jp
or
test
out
into
xor
and
cmp
loopne
xchg
aas
sbb
mov
pop
xchg
popa
or
jle
cld
sahf
sbb
retf
and
add
js
adc
(bad)
shl
int3
add
pushf
sub
movs
jne
lds
mov
dec
sar
call
outs
sbb
out
mov
xchg
xchg
dec
sub
xchg
jecxz
ins
fiadd
mov
dec
in
adc
sbb
adc
sbb
cwde
or
test
inc
outs
movs
inc
shl
inc
mov
add
nop
ds
push
cld
dec
int3
push
or
inc
adc
pop
adc
aam
out
popa
mov
jb
mov
adc
push
push
inc
adc
inc
or
loop
mov
test
aam
pusha
push
dec
adc
and
jmp
movs
pop
jno
cld
jle
push
loopne
or
pop
sbb
aam
push
clc
sbb
icebp
mov
pop
add
mov
cmp
inc
or
sbb
mov
jmp
fwait
pusha
out
js
or
push
xchg
mov
aas
in
cmps
out
les
rol
and
adc
dec
cmp
or
and
(bad)
icebp
add
ins
or
and
pop
inc
out
and
mov
inc
push
clc
jb
cmp
adc
sub
cli
add
push
adc
cmp
loop
fidiv
cmps
ja
adc
jmp
cs
shl
adc
adc
shl
rcr
sar
cwde
pusha
cmp
or
xchg
and
dec
stos
xchg
sbb
sti
imul
mov
xchg
lods
enter
add
mov
xchg
jo
sub
adc
nop
jmp
ins
mov
or
outs
cmp
jo
psubd
clc
mov
popf
(bad)
adc
cmp
xchg
pop
mov
cwde
dec
sub
mov
push
fimul
std
push
jmp
lahf
push
rcl
pusha
jge
dec
lds
xchg
cmps
mov
daa
mov
movs
aad
push
aam
fist
jmp
repz
fnsave
popf
dec
scas
sbb
mov
popa
sub
adc
icebp
mov
rcr
jb
push
xor
pop
and
and
imul
lds
in
mov
push
jecxz
sub
movs
enter
mov
dec
xchg
mov
cmps
sub
inc
push
dec
aad
jns
inc
jbe
loop
in
leave
scas
push
stc
inc
or
pop
xchg
into
cmps
jp
or
pop
fwait
xchg
and
push
adc
add
pop
xlat
fcom
jle
mov
jb
imul
shr
cmp
iret
aas
and
dec
inc
sahf
adc
cmp
and
jg
xor
add
mov
or
adc
mov
adc
mov
fild
stos
loop
cli
mov
pop
imul
add
stos
fistp
xchg
lds
arpl
shl
rol
mov
mov
ss
mov
scas
(bad)
xor
js
mov
fisub
jbe
add
mov
jp
push
es
ins
(bad)
inc
pop
pop
in
stc
enter
mov
rol
jns
add
jb
lods
push
in
inc
scas
mov
sub
mov
and
repnz
dec
pop
inc
inc
loope
xchg
push
bound
in
out
les
jns
xchg
mov
ret
fcmove
out
mov
lahf
jno
and
iret
adc
jp
pop
jecxz
mov
into
fisttp
xchg
dec
sub
push
inc
pop
sub
pop
sub
ds
outs
push
inc
xor
sbb
sahf
sbb
stos
outs
xchg
dec
jmp
pop
ds
lahf
push
pop
push
jae
loopne
ins
or
leave
pop
mov
cmc
movs
pop
jns
add
retf
mov
dec
into
jmp
push
outs
sub
mov
daa
mov
gs
push
std
lea
cmc
pusha
les
cmp
inc
or
rcr
aam
rcl
fnstenv
push
out
out
imul
loopne
fist
push
add
cmc
(bad)
xlat
in
mov
nop
lds
xor
mov
xchg
aas
arpl
nop
sbb
div
pop
fs
add
fdivr
add
pusha
add
xchg
dec
add
daa
mov
aas
retf
sti
mov
nop
add
clc
arpl
out
xchg
adc
cmps
add
sub
scas
xor
pop
pop
(bad)
in
les
test
mov
pop
std
fild
out
add
movs
popf
mov
add
add
cmps
repz
push
mov
ret
xor
mov
loope
(bad)
or
pushf
xchg
inc
lds
retf
add
adc
mov
hlt
pop
inc
clc
loopne
shl
jo
adc
xor
repnz
loopne
retf
mov
mov
lock
in
and
lock
jecxz
mov
ins
call
or
pop
stc
dec
fimul
scas
stos
fld
out
cmp
xchg
jnp
add
and
dec
gs
add
push
lea
gs
inc
adc
inc
lahf
cmp
push
test
xchg
retf
ds
hlt
pop
inc
xor
adc
fiadd
lods
aaa
jbe
sahf
pop
daa
scas
xor
aaa
into
ins
sysret
mov
push
sub
pop
outs
pop
dec
not
dec
clc
mov
push
push
(bad)
jns
sub
cmps
or
jns
mov
and
mov
adc
es
or
pop
cs
pop
push
int3
daa
and
mov
pop
ret
mov
mov
dec
fwait
retf
cmp
icebp
dec
push
sbb
je
sbb
jno
scas
nop
inc
jnp
pop
icebp
ret
in
sub
jge
or
cmps
mov
inc
(bad)
loopne
jo
mov
pop
pop
nop
leave
cmp
call
mov
dec
nop
mov
pop
sub
xor
lea
nop
sbb
jne
jb
xchg
add
jge
imul
inc
lods
mov
shl
xchg
cmps
and
ss
xor
hlt
jecxz
outs
push
(bad)
ss
xor
add
jb
ins
cvtpi2ps
arpl
mov
jmp
cld
ins
xor
jmp
mov
push
jmp
test
out
mov
out
sub
inc
cmps
repz
sub
int3
push
test
or
iret
icebp
and
and
aaa
enter
mov
add
mov
pop
push
(bad)
aam
dec
pop
dec
pop
or
xchg
jmp
retf
pop
iret
aaa
xchg
dec
ret
sar
sub
xor
cmp
pop
push
sbb
mov
mov
les
mov
cmp
sbb
push
push
jbe
dec
cmps
data16
xor
or
dec
mov
fwait
popa
add
xchg
ss
jle
inc
adc
cmp
push
scas
adc
pusha
ins
popa
movs
sbb
cs
push
mov
call
push
clc
jmp
(bad)
sbb
(bad)
fisub
lds
sahf
repnz
popf
fdiv
cmp
ins
loop
lods
jo
xchg
mov
sub
add
push
imul
movs
adc
or
pop
mov
cwde
sbb
shr
movs
xchg
movs
stc
dec
out
aad
lods
enter
retf
or
and
adc
mov
cld
push
pop
xchg
and
mov
mov
clc
adc
lea
or
mov
daa
mov
and
ror
fcom
push
pop
cmp
or
sbb
inc
fld
retf
jo
xor
mov
test
cmp
lock
out
mov
fwait
cmp
inc
adc
test
sahf
cmp
add
xchg
jmp
mov
inc
xchg
js
mov
retf
nop
add
mov
xchg
pop
jle
xchg
in
test
mov
fisub
or
xor
or
add
xor
xchg
ins
push
jno
lock
adc
std
cmp
es
js
cmps
bound
jo
adc
rcl
xchg
or
(bad)
and
int3
or
aad
adc
ja
jo
inc
ror
add
adc
add
lock
cmp
sbb
push
outs
shl
nop
ja
sub
push
loopne
in
sub
mov
add
and
ret
adc
xchg
fs
and
lods
jne
mov
adc
push
and
(bad)
mov
add
sub
frstor
pusha
dec
lahf
adc
imul
and
mov
xchg
cld
xor
adc
pop
sbb
imul
test
lock
cmps
xchg
sahf
in
and
lds
ret
outs
aad
mov
in
push
(bad)
or
push
xchg
or
in
fimul
push
cs
scas
fs
xchg
or
jmp
movs
js
fst
xchg
mov
int3
sbb
push
leave
dec
or
pop
shl
les
or
lahf
push
inc
inc
js
(bad)
pop
sbb
pop
pop
and
adc
jp
sub
dec
loop
jmp
les
std
and
loop
adc
pop
enter
dec
int
shl
add
mov
imul
(bad)
das
nop
xor
xchg
and
data16
es
test
push
mov
mov
loope
in
cmp
push
(bad)
mov
lock
inc
out
fdiv
mov
xchg
xor
or
jns
(bad)
xchg
in
push
sub
mov
mov
cdq
inc
icebp
jmp
mov
sbb
mov
lock
lahf
shl
and
adc
test
push
inc
dec
dec
pop
xchg
fxch
add
lock
test
dec
(bad)
adc
lahf
push
mov
shr
jp
ins
shl
add
mov
fadd
xchg
jb
dec
mov
xor
adc
dec
sbb
test
jae
ret
dec
add
pop
jle
repnz
int3
repnz
sub
cmp
shr
sbb
repnz
cmc
sbb
pop
and
mov
sub
(bad)
and
jecxz
aam
mov
lods
xor
aas
adc
xchg
jnp
inc
cmp
mov
in
test
cmp
aaa
sub
repz
push
fwait
pushf
fsub
adc
pop
inc
add
cmp
mov
inc
push
es
in
nop
pop
ja
pop
cld
iret
adc
mov
ret
adc
or
sbb
adc
adc
stos
jo
ror
loopne
dec
mov
adc
imul
inc
jmp
adc
mov
fisub
ret
jl
jnp
or
and
test
and
push
xchg
or
inc
shr
sub
in
sub
test
add
push
movs
sbb
jbe
in
and
dec
add
sub
test
jo
jne
mov
int
pushf
test
mov
xchg
add
push
ret
sub
jg
xchg
inc
data16
or
jmp
pop
sahf
inc
and
push
repnz
out
cmp
cmps
mov
ror
push
dec
cmps
or
popa
jae
adc
popa
mov
mov
inc
xor
shl
in
int3
es
push
aam
adc
into
mov
fimul
fild
jbe
arpl
fs
adc
and
pop
fidivr
cld
jo
jl
movs
cmp
or
lds
push
xor
push
mov
inc
sbb
mov
sub
xchg
pop
fscale
mov
mov
mov
out
cmp
dec
jbe
add
jbe
dec
iret
(bad)
mov
xchg
and
fisub
and
dec
and
xsaves
in
xor
cmp
dec
adc
popa
jmp
iret
aas
jmp
repz
cmc
mov
lock
cld
(bad)
adc
dec
sbb
add
hlt
dec
mov
mov
sbb
push
sbb
(bad)
xchg
js
mov
mov
cmp
cmp
pushf
sub
cmp
pop
out
in
or
nop
fidiv
dec
lods
bound
rcr
addr16
dec
fimul
adc
sub
cmps
push
clc
test
test
jo
cmc
dec
dec
test
pop
call
mov
push
xchg
adc
pop
sbb
rcl
and
je
push
shl
xchg
xchg
or
mov
test
inc
(bad)
inc
mov
stc
cmps
inc
cli
rcr
cli
add
adc
xor
imul
scas
or
fs
mov
cmps
call
cld
fsub
mov
mov
adc
mov
jle
xchg
mov
jae
xor
lods
xor
adc
pop
ja
push
(bad)
jbe
inc
push
rcl
mov
cld
fs
sub
loopne
addr16
pop
sub
imul
arpl
popf
or
pop
inc
imul
xchg
pop
inc
push
les
sbb
loopne
(bad)
std
in
retf
jmp
inc
jle
cld
loope
mov
vpmacssdql
sbb
mov
sbb
out
xchg
in
outs
dec
ror
cmp
mov
mov
mov
push
ja
mov
inc
jo
call
mov
(bad)
lods
div
mov
mov
jp
jmp
cmp
retf
sbb
sub
retf
and
fsub
loop
loop
pushf
inc
xor
push
adc
daa
or
xor
cmp
sbb
mov
xchg
test
xchg
or
sub
es
call
addr16
mov
lds
push
cli
retf
ret
movsx
scas
scas
stc
inc
stc
das
cld
or
(bad)
pop
cmp
shl
xchg
popf
retf
sbb
push
jne
fwait
gs
push
push
sbb
cdq
add
push
test
js
sub
jo
add
aam
jb
xchg
jmp
adc
cmp
push
pop
fwait
rol
cdq
gs
dec
xchg
push
in
sbb
rol
and
shr
xchg
push
add
xchg
fst
mov
inc
lahf
aas
cld
ret
sar
dec
arpl
fistp
out
lock
mov
lock
dec
dec
fisttp
sbb
lods
add
call
adc
jmp
aam
sub
adc
pop
dec
gs
mov
cmp
push
push
cmp
loop
fwait
aaa
mov
jg
cmps
push
sub
cmp
xchg
icebp
push
mov
cwde
in
jle
jnp
lea
nop
(bad)
adc
cmps
outs
(bad)
mov
neg
idiv
xchg
test
fistp
pop
int
retf
add
sub
test
je
and
fs
addr16
pop
adc
in
and
imul
dec
add
xchg
test
jne
push
leave
xchg
iret
mov
or
inc
xor
(bad)
jo
arpl
mov
and
mov
adc
inc
hlt
mov
iret
aas
lock
test
cld
add
jg
scas
out
test
dec
scas
test
lods
sbb
and
mov
ror
fs
stos
bound
call
sub
daa
iret
mov
and
pop
xchg
mov
sub
xor
pop
call
js
and
fiadd
lods
shl
sbb
jg
push
jno
test
inc
dec
or
mov
popf
and
jns
dec
mov
mov
or
stos
cmps
push
mov
dec
cli
cmp
cmp
add
adc
(bad)
push
(bad)
adc
sub
(bad)
pusha
dec
in
repnz
add
cmp
fisub
stos
js
push
jns
in
sahf
scas
fcmove
sbb
jns
xor
jl
cli
(bad)
cmp
jp
cli
das
mov
xor
in
mov
ds
jo
pop
add
gs
sahf
mov
add
sub
loopne
mov
lods
adc
dec
scas
inc
sub
cmp
add
pop
je
push
cmp
imul
repnz
mov
sbb
sbb
in
mov
mov
inc
cmp
cmps
mov
jg
mov
cmps
jmp
and
mov
xchg
repnz
add
sahf
cwde
cmp
shr
add
lock
xchg
jo
xor
inc
adc
mov
out
push
push
and
mov
arpl
sub
xchg
sbb
xchg
test
je
lods
repz
xacquire
pop
add
push
pop
sbb
mov
call
jge
cli
cmp
outs
mov
loop
inc
mov
cdq
cmps
(bad)
jmp
out
push
jmp
fdivrp
(bad)
pop
push
test
fst
xchg
ss
add
ins
cmps
mov
pop
ins
stos
and
and
retf
data16
lahf
cmc
push
mov
jae
cmp
mov
movs
dec
aam
stc
mov
sub
jmp
and
push
push
lea
sar
ins
cmp
data16
gs
add
(bad)
adc
cmp
leave
mov
push
loopne
push
add
(bad)
out
dec
and
fisubr
(bad)
test
popf
(bad)
push
iret
sub
out
inc
addr16
hlt
not
leave
add
and
fisub
sub
sub
and
outs
fnstcw
and
andps
fs
repnz
fnop
mov
cmc
je
mov
gs
jp
(bad)
les
scas
xchg
loop
mov
pop
in
push
xchg
inc
fdivr
and
mov
ds
and
jmp
fsub
sub
mov
push
retf
jns
jmp
jp
aas
xor
pop
icebp
inc
test
jecxz
jge
push
scas
jns
outs
cmps
cmp
fistp
fdivr
stos
imul
aas
shl
dec
cs
mov
mov
hlt
in
inc
movd
fcomp
sub
or
xchg
in
add
jmp
ror
test
pop
ss
ins
pop
jp
inc
pop
push
sahf
mov
jp
inc
scas
and
jbe
xchg
les
lods
and
sbb
out
pop
push
mul
popf
clc
fsubr
jne
das
sbb
push
cmp
shr
repnz
aas
in
(bad)
ja
enter
mov
mov
push
adc
(bad)
ss
push
out
sbb
xchg
mov
add
pop
cmp
xor
mov
ds
pop
push
fimul
adc
pop
(bad)
hlt
pop
test
addr16
call
mov
inc
das
ja
jno
imul
inc
xchg
mov
cmp
mov
loop
dec
stos
fstp
jle
out
out
pushf
xchg
add
jnp
jnp
pusha
inc
xor
fisttp
xor
sub
lahf
fbstp
jmp
cmc
mov
jmp
inc
cmps
iret
adc
js
shl
mov
movs
sbb
pop
cli
ds
into
fabs
add
arpl
aam
push
xor
vpcmpgtd
stos
leave
cmp
push
mov
add
mov
into
cmp
push
mov
jle
cli
jnp
push
pop
cmp
mov
add
sbb
jp
mov
mov
add
test
add
imul
mov
pop
out
mov
cli
cmp
pop
sub
dec
cmp
cli
adc
(bad)
cli
mov
loope
xor
inc
inc
sub
mov
xor
int
icebp
jno
lds
frstor
test
fwait
dec
dec
mov
mov
cmp
mov
jle
mov
push
nop
jns
sub
mov
cmps
and
jmp
push
add
add
mov
inc
mov
push
retf
(bad)
jb
call
mov
sti
fnstsw
dec
pop
mov
test
sub
sar
xchg
or
push
jmp
xchg
add
fprem1
enter
xlat
or
(bad)
fimul
dec
das
push
xchg
retf
add
repz
pop
add
mov
int3
xchg
or
pushf
xor
lahf
inc
adc
cmp
ss
std
cmp
imul
cwde
or
shl
mov
or
cmp
sub
stc
add
cwde
fistp
xor
add
ja
xor
(bad)
xchg
test
int3
stos
mov
push
xor
pop
jl
inc
lahf
mov
idiv
add
int3
push
test
push
sbb
cmp
jmp
pop
mov
mov
stc
int3
mov
or
cmps
xchg
fwait
enter
xor
les
test
mov
dec
out
xchg
xor
icebp
mov
(bad)
mul
push
into
mov
lock
in
push
xchg
jb
cli
inc
xchg
jp
jbe
mov
inc
stc
in
subps
ret
fstp
out
loope
leave
in
sbb
push
jo
xchg
sbb
sbb
mov
shl
pop
stos
xchg
lahf
sbb
lods
sbb
repnz
xor
mov
mov
rcr
inc
xchg
pop
(bad)
outs
ds
cmp
in
pop
pop
lahf
in
retf
outs
cmp
jecxz
sub
mul
jg
mov
hlt
xchg
fucomip
jno
loop
sbb
mov
cmp
sbb
shl
push
dec
jl
clc
popa
sbb
mov
pop
idiv
mov
and
mov
pop
add
in
dec
out
add
push
push
xor
dec
mov
stc
sar
pop
jae
and
sub
retf
dec
aad
(bad)
xchg
data16
lds
and
and
jle
jl
xchg
imul
or
and
movs
sbb
inc
jo
movs
imul
gs
mov
mov
repz
iret
xor
ja
adc
shl
jnp
mov
inc
arpl
mov
sbb
sbb
push
push
inc
xchg
stos
adc
add
add
sar
shl
loopne
nop
int3
imul
sti
mov
lods
das
(bad)
(bad)
dec
out
dec
outs
jle
jne
xor
mov
das
or
xor
pop
test
mov
xchg
push
ins
xchg
stos
aam
and
sub
push
in
clc
movs
bound
sbb
loopne
xor
xor
jmp
sbb
cs
pop
add
dec
jnp
push
enter
dec
fwait
dec
sub
mov
cs
clc
and
push
jns
pop
jnp
mov
cld
jno
cli
imul
addr16
xchg
sub
daa
adc
jns
ins
dec
out
ds
xor
mov
fnsave
fs
jae
fidiv
xchg
rol
inc
mov
in
and
xor
lods
pop
int
push
mov
in
xchg
cmps
cmp
push
pop
push
mov
sti
pop
int
sbb
inc
inc
push
xchg
mov
test
pop
add
ss
imul
sub
inc
(bad)
mov
rol
cld
icebp
neg
jg
icebp
dec
or
fadd
jne
push
iret
(bad)
faddp
xchg
jp
sahf
out
pop
stc
mov
sub
push
pop
jbe
xchg
mov
pop
lock
retf
data16
jle
jmp
in
call
jg
ret
sub
fistp
adc
and
aas
mov
fdiv
and
inc
push
sub
pop
aad
inc
sub
push
mov
mov
lds
lea
cld
(bad)
mov
outs
sub
mov
rcr
in
nop
in
ins
xor
cwde
inc
push
mov
pusha
xor
add
mov
xchg
sub
inc
sahf
fdiv
mov
fadd
pop
in
push
add
mov
js
xchg
mov
js
out
mov
pop
pop
mov
sub
add
(bad)
adc
inc
test
cdq
or
dec
out
jne
jb
push
(bad)
int
aaa
mov
in
jmp
xchg
and
jge
bound
adc
xor
xor
pop
cmp
xchg
jo
cld
inc
sub
cwde
dec
pop
pop
or
(bad)
inc
in
mov
movs
repz
mov
cwde
cdq
movs
xchg
pop
outs
imul
pop
mov
shl
mov
cmp
jge
call
mov
(bad)
cmp
in
shr
loope
pop
je
adc
out
mov
or
sbb
repnz
adc
lods
dec
jmp
sub
add
mov
xchg
int3
cmp
jle
cmps
int
movs
mov
mov
jl
repnz
mov
jne
loope
retf
imul
add
lods
lds
(bad)
adc
sbb
mov
xchg
jge
pop
adc
cld
pushf
aas
scas
repnz
into
mov
bound
dec
or
repnz
movs
dec
mov
push
pop
cs
loop
ins
shr
dec
int
movs
repnz
cmp
jp
mov
out
sbb
sbb
jmp
pop
jb
sbb
int3
mov
fsubr
imul
adc
adc
push
and
xor
dec
int
xchg
jl
in
ins
jle
mov
mov
mov
xchg
in
out
push
pop
push
repnz
pop
push
call
xchg
sbb
in
push
add
jl
stc
out
inc
jg
push
sbb
out
dec
mov
push
jle
aas
loope
jno
mov
(bad)
inc
push
mov
add
das
jbe
add
xchg
cwde
data16
xor
(bad)
mov
add
pop
int3
repnz
leave
hlt
sbb
xor
mov
push
lods
push
js
add
inc
xor
add
and
xor
and
in
icebp
repnz
jbe
div
jb
cmp
sbb
jmp
outs
pop
popf
push
gs
sbb
inc
cmp
pushf
xor
pusha
jl
or
mov
out
int
loop
(bad)
lods
test
lods
call
fwait
push
repnz
sub
inc
(bad)
pop
push
sub
cld
and
stos
and
and
fcos
mov
arpl
inc
mov
cmp
js
jg
bnd
or
pop
stos
jb
push
sub
popa
adc
rol
xor
das
sbb
sar
mov
hlt
jp
rcl
mov
add
fisttp
es
stc
stos
jmp
aam
mov
push
ins
mov
and
push
(bad)
and
enter
loope
ror
es
jns
dec
ret
pushf
cmp
mov
imul
cld
cmps
cmp
scas
xor
call
mov
cmp
adc
inc
pop
ja
ret
mov
add
jbe
(bad)
cmp
sub
cli
jp
jge
dec
sar
sub
movs
rol
adc
sbb
sub
mov
push
retf
popf
inc
sbb
iret
(bad)
(bad)
push
call
cmp
enter
mov
enter
inc
xor
rcl
push
enter
imul
repnz
jnp
xchg
mov
ficomp
mov
cli
dec
jg
push
mov
retf
outs
pop
or
lods
pop
pop
push
jae
cs
pop
pop
imul
aaa
inc
xor
sub
in
pop
pop
cmps
rol
sub
push
xchg
(bad)
lea
ret
in
mul
or
loope
test
in
fcomp
(bad)
mov
sar
into
push
jno
push
inc
xlat
mov
sbb
call
sbb
push
jmp
test
(bad)
rcr
cdq
sub
pushf
icebp
in
push
rcr
fcmovnbe
pop
sub
cmp
in
push
cdq
mov
lods
jg
push
std
mov
add
orps
xchg
or
cmp
mov
int3
mov
cmp
outs
sub
sub
das
int
shl
out
sbb
push
cdq
into
call
mov
imul
jae
call
jmp
push
mov
int3
or
cdq
int3
pop
pop
push
pop
xchg
sar
xor
inc
push
aas
clc
shl
into
sbb
loop
das
push
(bad)
mov
add
and
jle
xchg
push
movs
inc
icebp
out
retf
int3
push
lods
mov
lahf
or
dec
sub
cmp
or
pusha
inc
ins
imul
scas
test
ds
push
mov
aaa
aad
jp
jp
xchg
pop
xor
adc
outs
test
shl
adc
mov
inc
pop
imul
and
jne
xchg
aad
in
add
adc
jp
loope
jmp
and
(bad)
xor
jno
in
xchg
jg
cmp
jne
pop
add
imul
jae
and
mov
mov
push
adc
jecxz
icebp
pop
adc
sbb
imul
loopne
or
sub
ret
pushf
rcr
repz
adc
cdq
and
push
leave
imul
ins
xor
jge
aad
data16
movs
sub
shl
jb
sbb
jns
sahf
cwde
add
push
nop
pusha
sub
shl
lahf
out
jae
aas
aad
sbb
lods
out
mov
cmc
hlt
(bad)
cmps
sbb
mov
xor
cdq
xor
daa
outs
xchg
pop
pop
inc
xchg
popf
pop
add
or
and
push
rol
pushf
jae
mov
cmp
mov
add
dec
int
hlt
mov
mov
push
enter
dec
mov
jle
pop
or
fisub
push
jecxz
add
aaa
jno
pop
in
loop
xlat
sbb
lahf
sbb
sub
jb
cmp
lods
mov
(bad)
mov
mov
pop
inc
inc
popf
pushf
push
cwde
and
inc
pop
add
and
daa
xchg
or
inc
test
fwait
out
lods
sub
pop
jle
in
outs
mov
inc
lea
mov
xor
sub
mov
lods
bound
dec
iret
pop
mov
cli
daa
cmp
sub
mov
bswap
arpl
fcomp
stos
aad
outs
sbb
pushf
cmc
and
test
pop
xor
xchg
je
out
fsub
cmp
pop
mov
aad
xchg
aas
mov
inc
stos
xchg
mov
xor
stos
sub
movs
inc
mov
cmp
aad
test
and
scas
add
js
mov
adc
retf
inc
push
lahf
out
xchg
es
push
(bad)
lds
push
xor
cwde
add
and
repz
int3
mov
xor
push
adc
cmc
out
jae
lods
ins
ds
enter
dec
(bad)
mov
xchg
push
xchg
mov
mov
mov
retf
cmp
push
repnz
pop
xchg
push
pop
rcl
and
repnz
mov
jns
ret
xor
jno
jp
loope
repz
cwde
js
(bad)
cld
sbb
repz
or
or
cmp
mov
jb
sbb
test
cmps
xor
push
out
ss
jg
sbb
mov
fs
add
loopne
dec
clc
or
mov
lock
inc
scas
add
xor
or
mov
dec
xchg
enter
mov
push
dec
sbb
pop
in
(bad)
lock
xchg
dec
xor
jg
(bad)
pop
in
cmps
lahf
add
daa
popf
leave
retf
fucomp
inc
sub
aas
add
dec
arpl
sub
pop
leave
mov
loop
es
enter
or
test
mov
idiv
sub
mov
xchg
push
cli
and
cmp
or
movs
das
mov
pop
daa
cmps
mov
cmp
je
dec
pop
pushf
pop
xchg
(bad)
xchg
lock
jge
jp
scas
out
cmp
and
int
fcom
push
inc
and
xlat
test
jb
popf
bound
(bad)
in
sar
std
jmp
in
jmp
sub
into
imul
mov
clc
push
inc
jmp
aas
jmp
cs
mul
pop
push
adc
sbb
sahf
mov
push
inc
xor
ds
pslld
jns
cmp
mov
stos
jmp
push
push
adc
add
add
pop
cmp
call
mov
sbb
jnp
dec
fistp
or
stos
cli
call
add
aad
retf
xchg
iret
stos
sbb
jmp
cmp
adc
arpl
xchg
aas
adc
clc
add
adc
sbb
aas
mov
sub
aam
push
int
or
or
mov
test
das
rcl
sub
into
js
dec
aaa
sbb
les
pop
lahf
jae
or
jbe
call
push
add
out
lahf
inc
leave
mov
mov
cmp
inc
push
sub
ss
jae
cmps
(bad)
out
lods
lods
and
jmp
adc
and
cwde
scas
mov
gs
pop
adc
loop
std
jmp
mov
add
lods
cmp
fisttp
dec
call
inc
fs
push
in
mov
std
and
inc
add
adc
push
jmp
adc
cld
cmp
stc
dec
xor
cdq
pop
(bad)
in
inc
hlt
addr16
push
in
(bad)
mov
sbb
push
sti
clc
popa
jmp
adc
pop
xchg
scas
imul
movs
sub
fdiv
test
and
pop
push
and
into
cs
push
mov
xor
iret
add
dec
test
daa
outs
jne
jno
data16
fdivrp
cmps
nop
imul
add
sub
xchg
push
xor
sub
test
enter
and
jmp
add
int3
out
mov
sbb
cmp
sti
jbe
int
mov
xor
stos
mov
jmp
icebp
mov
adc
fdivp
push
mov
loop
fidivr
sahf
(bad)
sub
pop
mov
aam
pop
fiadd
sub
mov
mov
frstor
jmp
pop
sbb
dec
loopne
xor
dec
outs
mov
sti
ret
out
adc
test
icebp
add
jmp
add
adc
xor
jp
cmps
xchg
shl
sub
xor
imul
loopne
push
pop
or
test
test
lods
cmp
in
ds
repnz
add
jp
xchg
jne
mov
(bad)
fisub
jg
popf
pop
shl
add
push
mov
add
mov
xor
pop
(bad)
jo
out
outs
shl
sbb
or
mov
xchg
leave
in
or
cmp
mov
sub
add
sti
idiv
inc
inc
(bad)
aas
mov
or
repnz
int3
pop
jbe
in
jge
dec
mov
mov
lock
jle
sbb
cld
or
loopne
cmp
inc
and
jno
loop
push
imul
xchg
sub
push
mov
loop
lahf
mov
pop
and
(bad)
lahf
mov
cli
mov
shl
dec
xchg
jns
ror
lahf
jge
add
jns
jmp
loopne
xor
inc
retf
pop
loopne
cmps
pop
lock
out
add
pop
cmp
loope
and
aaa
push
jg
test
ds
lock
bswap
cld
sbb
push
adc
add
fnstsw
xchg
pop
dec
test
es
sbb
leave
pop
movs
adc
test
pop
cmp
mov
push
pushf
ret
fcmovbe
fwait
cdq
mov
pop
aad
ins
xchg
pop
cwde
mov
adc
inc
loope
sbb
aad
jmp
lods
dec
outs
push
imul
sbb
jbe
ja
add
int
outs
mov
cmps
ror
test
cmp
sub
cwde
dec
lods
fs
dec
cmp
and
fstp
push
pop
rol
or
and
maxps
mov
push
inc
mov
loop
add
stos
dec
sbb
pop
in
cs
inc
repz
ret
outs
ss
add
pushf
sub
sub
push
mov
imul
xchg
daa
test
adc
call
stos
dec
imul
jg
adc
js
aad
cmp
bound
ret
xor
pop
pop
jo
int
sti
xor
test
pusha
mov
adc
sub
jg
xchg
sbb
mov
in
stos
mov
push
jo
bound
in
push
imul
pop
mov
push
sub
sub
cmp
pusha
dec
mov
imul
and
sub
and
cmp
imul
mov
stos
mov
shl
jle
out
add
leave
fs
xor
adc
shr
pop
retf
mov
cmp
xlat
push
sub
(bad)
push
call
repnz
mov
les
inc
loopne
xchg
data16
ds
mov
ret
mov
inc
stc
pusha
loope
shr
add
xchg
(bad)
mov
ficomp
icebp
outs
ss
in
shl
xor
scas
hlt
xchg
cmp
stos
stos
fdiv
ss
xchg
sbb
pop
adc
xor
int3
ins
jg
fist
push
lods
sbb
mov
xchg
ficom
scas
call
sub
push
fwait
push
xchg
inc
addr16
outs
jecxz
loopne
mov
mov
scas
mov
(bad)
push
and
ins
sub
out
clc
call
ret
pop
mov
call
pop
shl
mov
hlt
mov
mov
lahf
mov
jmp
fdivr
or
(bad)
scas
push
xor
shr
(bad)
aam
cwde
dec
push
jmp
or
mov
sbb
adc
es
rol
jmp
jns
sub
ds
div
jge
mov
push
(bad)
adc
mov
les
inc
loope
mov
pusha
mov
xor
sub
jns
cmp
push
dec
repz
dec
in
jo
xchg
pop
xor
scas
pop
test
and
les
sub
mov
outs
mov
imul
retf
mov
push
mov
xchg
out
push
push
or
push
jg
mov
(bad)
push
lods
mov
mov
sahf
cmp
mov
push
mov
jp
mov
loope
mov
jmp
and
xchg
aas
stos
enter
add
jmp
(bad)
outs
lods
and
test
add
jbe
int3
in
lods
jmp
test
inc
xor
pop
in
mov
pop
xor
fnstcw
dec
jb
adc
hlt
retf
fmul
push
inc
adc
repnz
sbb
(bad)
dec
sbb
lock
or
xchg
leave
into
mov
xchg
js
sub
imul
xor
shr
in
mov
lea
cdq
push
pusha
(bad)
js
pop
int
in
inc
jmp
popf
ds
push
pop
and
imul
jbe
sbb
push
in
xchg
loopne
or
mov
neg
mov
addr16
pop
es
mov
adc
fs
dec
cmps
retf
data16
sbb
adc
or
ss
mov
(bad)
leave
adc
rcl
lods
fidivr
sub
inc
mov
(bad)
sar
enter
fnstenv
dec
sbb
movs
mov
std
or
stos
xor
mov
mov
sub
xchg
dec
cmp
jecxz
sub
sub
xor
push
(bad)
jmp
es
push
xchg
rcr
neg
mov
xor
lahf
jb
pop
ss
jbe
xchg
xchg
mov
shl
addr16
dec
fstp
xor
or
mov
inc
sar
movzx
mov
and
or
cmp
pop
cdq
mul
jle
jbe
adc
add
js
aam
inc
lea
lods
pop
inc
or
jp
loopne
cs
inc
imul
jmp
pop
nop
in
push
inc
mov
fs
xlat
vandnps
dec
push
arpl
push
jmp
mov
cli
js
sbb
inc
adc
ja
test
leave
pop
dec
xchg
ds
jmp
pop
js
and
mov
mov
push
movs
push
and
repz
xor
aas
fcomp
dec
inc
xchg
adc
int3
inc
jne
clc
js
mov
shr
sbb
rcr
sub
jbe
push
sub
loope
add
xchg
ficomp
mov
xchg
movs
aaa
mov
frstor
popf
movs
mov
dec
xchg
or
adc
pusha
and
loop
push
pop
(bad)
and
sub
push
sbb
dec
pop
js
aaa
jge
cld
pop
out
std
lods
mov
pop
mov
out
mov
test
add
and
adc
xor
adc
xchg
out
enter
repnz
pop
adc
dec
(bad)
xor
shl
mov
cmps
adc
jge
hlt
jnp
movs
dec
jg
push
sub
fiadd
ins
je
ins
inc
pop
imul
inc
mov
popa
in
inc
jmp
push
push
mov
xor
ror
sbb
test
xchg
loopne
dec
ja
mov
push
fstp
add
jle
clc
shr
mov
rcl
ins
sbb
pop
movs
xchg
mov
pusha
retf
xchg
add
daa
outs
lahf
push
std
fdivr
repnz
in
push
and
test
add
adc
aas
cmp
cmp
and
inc
leave
je
mov
and
xor
pop
cdq
mov
out
sub
retf
mov
rcr
mov
jmp
dec
stos
enter
mov
sbb
dec
push
push
push
jb
outs
inc
gs
push
test
push
pop
or
xchg
fcom
push
sbb
push
xor
ror
mov
in
xchg
mov
stos
call
es
aaa
dec
push
dec
mov
fadd
or
popf
cmp
daa
adc
mov
into
adc
mov
retf
test
jp
pushf
pop
aaa
pop
jb
push
lea
add
cmps
lea
jle
fidiv
cli
int
xor
mov
push
and
not
pop
retf
and
inc
enter
jmp
cmp
in
out
imul
jmp
adc
sbb
or
loopne
mov
adc
fidivr
inc
xor
icebp
fstp
ret
iret
sub
movs
push
call
sar
and
inc
rol
daa
sub
scas
jne
mov
out
add
nop
fs
popf
mov
test
ins
fild
aam
jp
or
or
dec
(bad)
popf
xchg
dec
cmps
ret
lods
xor
add
push
in
ins
mov
scas
pop
neg
push
ja
iret
std
xor
dec
iret
pop
mov
ins
es
ins
lock
jnp
lea
push
cmp
pop
dec
inc
push
or
shl
not
repz
iret
pop
jns
mov
test
jl
pop
ins
(bad)
not
jg
mov
fcomip
xchg
mov
lods
mov
sub
xchg
sbb
ins
jae
sbb
out
(bad)
mov
call
loop
stos
push
shl
jge
fmul
inc
jle
lods
in
push
call
aam
in
push
mov
and
adc
xchg
lods
adc
cmp
fadd
aad
push
in
fldenv
adc
xchg
enter
loopne
xchg
push
fstp
cmp
cs
lds
push
cmp
inc
pop
in
ficom
mov
jmp
mov
xchg
jp
sbb
lods
mov
fcomp
repnz
or
push
shl
adc
dec
call
retf
std
arpl
and
push
mov
or
imul
sub
ret
sub
or
push
dec
stos
inc
test
in
fmul
fcmovu
sub
or
daa
cmp
cmps
ins
pop
pop
add
cdq
pop
jb
adc
sbb
mov
cmp
adc
and
pop
mov
loope
outs
outs
fwait
sbb
sahf
mov
cmp
xlat
in
movq
jno
outs
ins
adc
stos
cmp
mov
jecxz
mov
fs
(bad)
sub
sub
in
(bad)
cdq
push
jo
and
dec
push
and
dec
mov
lods
inc
xchg
adc
call
data16
test
xor
mov
popf
jmp
ss
mov
data16
ret
pop
hlt
add
push
sbb
call
xchg
mov
add
mov
push
hlt
cmp
icebp
pop
adc
sub
or
mov
popf
xchg
fdiv
out
jmp
inc
leave
repnz
push
movs
sbb
movs
xor
pop
scas
xor
xchg
fsub
adc
lea
les
test
test
pop
lods
arpl
and
cmp
and
outs
es
retf
retf
xor
in
xchg
leave
mov
fwait
or
push
outs
outs
jmp
pop
jo
leave
aam
lock
mov
jp
shl
fwait
(bad)
push
inc
mov
aas
xor
stc
hlt
mov
cmps
push
popa
pop
jb
mov
sub
cmp
stos
adc
mov
push
mov
adc
mov
in
stc
sbb
inc
shl
xchg
xchg
adc
ror
call
cdq
das
sub
mov
and
cmp
push
inc
sbb
push
cs
loope
jbe
xchg
addr16
mov
out
std
enter
cwde
aam
sbb
mov
jmp
(bad)
jns
out
and
xor
cmp
adc
lods
pushf
xchg
pop
shr
pop
push
inc
pop
out
mov
push
mov
mov
mov
push
xor
inc
xchg
xchg
cwde
cmp
movs
mov
out
pop
mov
fstp
lds
(bad)
sub
push
jg
sub
mov
mov
dec
sub
xchg
mov
add
movs
arpl
lods
and
fmul
pop
test
push
adc
cwde
jo
jno
add
add
add
stc
arpl
lock
btc
cmp
pop
sbb
pop
ins
cmp
sub
fiadd
and
cld
mov
mov
repnz
jge
sbb
sbb
popa
cld
int
in
icebp
popf
sub
push
or
gs
adc
inc
retf
jbe
sub
mov
xchg
(bad)
jns
and
mov
dec
or
cld
and
xchg
lock
sahf
dec
ss
mov
in
loope
adc
call
sbb
push
jle
mov
jne
mov
(bad)
cmp
pop
adc
mov
mov
in
les
jns
test
add
sub
mov
pop
test
or
and
inc
out
and
xor
les
shr
les
sbb
adc
xchg
xor
or
mov
xchg
sbb
cs
and
aam
xlat
cdq
mov
rcr
push
sub
std
movs
adc
rol
mov
mov
es
fwait
das
mov
repnz
je
sub
adc
(bad)
in
mov
call
cmps
push
imul
test
mov
mov
mov
sub
sub
pushf
stos
mov
imul
dec
mov
inc
sbb
sub
push
inc
int
xor
push
inc
(bad)
fisub
jns
adc
clts
push
mov
dec
out
ficom
jp
pop
movs
sub
mov
dec
push
mov
xlat
bound
and
inc
xchg
or
add
fcomi
pop
or
leave
in
push
or
test
dec
push
mov
pop
sub
mov
les
loopne
and
pop
retf
xor
imul
jl
adc
adc
mov
imul
test
inc
es
adc
mov
outs
jmp
je
sahf
cli
xchg
test
push
xchg
mov
cdq
fimul
inc
loope
cmps
leave
jbe
and
lahf
xchg
xchg
shl
and
mov
js
xlat
int3
sub
push
sub
xchg
and
and
fsub
call
test
jle
push
aad
dec
pushf
jp
je
add
or
xchg
popf
mov
idiv
xor
std
push
mov
dec
cld
or
lahf
xchg
movs
stos
dec
adc
ffreep
loope
pop
in
pop
popf
dec
mov
repnz
mov
jb
xor
ins
imul
mov
cdq
into
test
pop
dec
dec
fcmove
sbb
iret
stos
push
pop
stos
push
xchg
sub
(bad)
push
sahf
fwait
mov
retf
sub
fdivr
imul
mov
dec
ret
(bad)
xor
call
aaa
and
cmps
pop
call
shr
jbe
xor
and
fisubr
aas
lods
mov
xor
inc
cmp
sbb
push
fs
sbb
dec
xor
loope
or
cwde
sbb
call
adc
sub
and
mov
xchg
mov
xchg
mov
xchg
fidiv
inc
adc
mov
mov
jmp
jb
sub
push
in
push
out
jle
mov
adc
inc
aad
xor
pop
pusha
jg
lea
arpl
int
stos
mov
pop
(bad)
jns
shl
inc
adc
or
adc
lea
shr
ja
imul
push
and
psllw
scas
adc
and
push
mov
jb
fldenv
mov
adc
jmp
sar
rcr
retf
jecxz
sbb
pop
pop
bound
aas
enter
push
push
aam
icebp
ss
xchg
jmp
aas
adc
in
mov
mov
or
mov
test
push
scas
in
adc
cmp
sub
dec
cmps
adc
mov
call
int3
cmp
popa
data16
sbb
ds
mov
inc
jbe
mov
test
arpl
pop
loope
fs
mov
les
push
repz
int3
and
push
pop
lahf
mov
add
add
mov
ins
jmp
jo
dec
loope
xor
adc
aaa
test
shr
dec
push
fld
jb
leave
adc
or
cmp
repnz
inc
daa
pop
popf
cmps
ins
xor
mov
and
xor
call
fiadd
pop
inc
push
inc
ins
fisubr
inc
mov
mov
jecxz
(bad)
push
jmp
dec
xchg
push
and
add
push
sub
mov
inc
outs
mov
adc
mov
ins
mov
js
xor
out
div
and
sub
out
xor
pop
out
js
sub
(bad)
sbb
out
ss
nop
inc
ins
jno
das
sub
loopne
retf
mov
mov
imul
cmp
xchg
ror
xor
add
sub
xchg
cmps
xor
leave
test
ins
daa
je
mov
pop
adc
daa
mov
in
hlt
push
mov
cmp
push
adc
cli
push
xchg
mov
xchg
frstor
pop
sub
je
sahf
sub
shl
push
cmp
jns
push
or
push
cmp
push
mov
mov
push
or
mov
inc
pop
js
js
and
cmp
push
mov
push
inc
aas
push
aas
push
jp
ins
sahf
fs
push
push
popf
mov
xchg
mov
bound
aam
mov
pop
pop
je
shl
pop
dec
pop
lea
ins
xchg
aas
inc
mov
add
and
or
xor
mov
push
repnz
jg
xor
enter
test
xor
into
sub
clc
test
xchg
xchg
sbb
dec
cdq
iret
sub
xor
and
loope
pop
and
sub
fcom
jbe
or
adc
sub
xchg
mov
xor
scas
fcom
cmp
movs
sbb
test
jecxz
aam
mov
lods
not
xor
rcr
xor
add
ror
gs
sbb
jb
loop
xchg
int3
jge
lahf
push
and
and
int
jbe
in
push
pop
push
cmp
inc
xor
jbe
aas
jbe
dec
(bad)
retf
jnp
stos
add
mov
scas
test
lds
lea
js
cmps
pop
mov
fs
xor
xor
fdivr
loope
sub
popf
iret
xchg
fwait
retf
mov
pop
mov
test
aad
adc
jnp
pop
dec
retf
cs
add
addr16
arpl
bound
xchg
stos
aam
sbb
mov
call
add
mov
mov
xchg
xchg
xchg
and
sar
psubw
sub
aaa
stos
or
cmp
mov
repz
es
sti
and
lahf
xchg
or
lea
xchg
cs
jle
dec
add
pop
sub
and
shl
or
mov
xor
inc
dec
and
pop
xchg
aad
mov
out
pop
xchg
mov
mov
dec
inc
pop
pop
push
push
sub
push
jmp
jae
xchg
push
push
fdivr
dec
das
inc
rcr
mov
cwde
imul
mov
lods
xchg
jl
lds
retf
loopne
jne
push
call
movs
fimul
mov
and
sbb
sbb
lods
sub
mov
sahf
and
loope
je
es
xchg
pop
cmp
shl
push
jns
gs
daa
or
push
and
push
push
lahf
and
jae
nop
movs
pop
mov
shr
xchg
es
dec
dec
dec
inc
and
imul
loopne
push
mov
dec
add
xchg
sbb
dec
sub
jae
inc
lods
or
add
adc
aam
stos
out
xchg
add
xchg
(bad)
ror
stos
push
pop
aad
loope
cmp
push
xor
pop
fisttp
jge
pop
adc
dec
shr
cmps
cmps
push
cli
pop
jmp
test
fcmovu
xchg
int
sub
jns
push
push
mov
sbb
bound
xchg
ss
mov
mov
push
and
mov
cmps
xor
mov
nop
(bad)
sub
shl
mov
ret
inc
add
fmul
dec
sbb
dec
sub
les
cmc
sbb
xchg
in
popa
(bad)
lahf
sub
xchg
test
mov
fwait
packuswb
stos
ds
dec
ror
jmp
je
call
sahf
in
or
push
mov
adc
shl
sbb
xor
lds
addr16
pop
mov
bound
sbb
dec
in
and
push
pop
div
pop
cld
push
mov
das
mov
mov
ins
mov
ss
xchg
icebp
jae
dec
rcl
dec
push
out
int
call
mov
adc
push
or
or
cmp
sbb
inc
ins
sub
pop
js
dec
jg
outs
add
(bad)
sar
test
daa
stc
aas
xchg
pop
cmps
cmp
push
adc
dec
aad
and
loope
movs
pop
mov
retf
retf
push
xor
cvtpi2ps
aam
enter
xchg
pushf
ficomp
enter
aas
scas
mov
cmp
push
sbb
shl
cld
cdq
mov
jo
jb
mov
jmp
int
inc
sub
pop
retf
shr
adc
or
imul
or
call
outs
inc
mov
in
dec
and
dec
repnz
data16
icebp
sub
xchg
repnz
and
sbb
popa
aas
add
aaa
hlt
das
jno
hlt
cld
cwde
jno
mov
push
dec
sbb
clc
jle
push
aaa
inc
mov
cmps
push
pop
jne
pop
and
(bad)
mov
ror
xor
adc
ror
inc
dec
(bad)
inc
dec
jge
mov
cmps
int
dec
jl
sub
test
pop
mov
or
or
mov
push
bound
jnp
sbb
and
mov
movs
or
cwde
cmps
xor
adc
dec
push
jb
cdq
jbe
pop
push
adc
enter
fadd
push
pop
mov
dec
dec
adc
push
add
(bad)
imul
ss
icebp
jmp
hlt
stos
iret
mov
push
add
not
fwait
xor
push
nop
sub
mov
xchg
inc
movs
adc
adc
and
inc
icebp
mov
and
fcomp
movs
dec
pop
into
xchg
mov
movs
cmps
mov
inc
aad
repnz
mov
mov
dec
test
add
adc
push
xchg
pop
xor
psrlw
mov
inc
xor
jmp
repnz
sahf
inc
and
test
fmulp
adc
mov
and
xchg
sub
daa
push
out
test
sub
stos
pop
jmp
neg
int
sbb
mov
push
sub
inc
enter
ss
adc
adc
xor
inc
sbb
jne
out
and
mov
loop
jno
(bad)
sbb
add
mov
xor
mov
nop
pusha
inc
and
rol
jne
mov
adc
push
cld
mov
push
mov
ret
dec
mov
sub
mov
nop
shl
push
cmps
dec
sbb
stos
movs
and
dec
push
loopne
ficom
out
push
cmp
gs
mov
cmps
fcomp
in
js
xchg
push
fimul
jns
pop
mov
jbe
pop
xor
mov
mov
(bad)
shl
push
jbe
push
sbb
sbb
test
dec
inc
pop
leave
push
and
sbb
pushf
or
stos
sbb
sub
xchg
call
loop
pop
jbe
pop
dec
movs
add
aam
dec
int
xchg
aaa
popa
inc
cmp
ss
sbb
xchg
int
imul
pop
test
jne
cmp
push
retf
inc
loopne
fldcw
adc
xchg
sub
dec
cwde
lea
jge
jge
sbb
push
js
xor
sbb
mov
data16
xchg
fist
leave
pushf
push
out
stc
cmc
sub
mov
pop
and
nop
add
adc
and
jbe
and
icebp
add
fmul
sahf
retf
mov
and
fidiv
fcomp
retf
inc
or
and
and
or
std
sub
fwait
retf
mov
ficom
and
imul
mov
call
sub
movs
push
ss
mov
popf
aad
mov
pop
mov
or
cwde
mov
fwait
add
and
jae
or
adc
sahf
mov
cwde
pushf
data16
pop
leave
sti
cmp
jp
(bad)
cmp
and
xor
cwde
ins
mov
xor
in
dec
inc
push
hlt
cmp
sbb
pop
in
fld
(bad)
mov
retf
mov
rcl
mov
movs
dec
xchg
mov
xchg
out
test
adc
pop
mov
cli
mov
adc
sbb
adc
inc
fcomp
sub
push
cmp
sub
ds
call
loopne
push
or
sbb
in
sub
adc
mov
call
jns
adc
pop
inc
fwait
aam
push
nop
sbb
or
fnstcw
imul
pop
ja
ficom
mov
or
adc
cmp
fmul
mov
adc
ins
xor
mov
xchg
pop
enter
push
dec
pop
push
dec
add
dec
les
call
fnstsw
ins
push
jmp
mov
mov
xor
dec
test
js
push
lock
enter
mov
mov
outs
push
cmp
iret
repz
fnstsw
das
push
std
cmp
push
int3
xchg
or
jge
dec
call
imul
(bad)
stc
and
xor
int3
add
xchg
fwait
stos
inc
popa
dec
lods
imul
leave
mov
pop
push
loop
call
lods
mov
xchg
sbb
mov
add
dec
xchg
jmp
popf
mov
jns
shr
xchg
or
push
jg
scas
xchg
fst
shr
or
lods
test
mov
add
jmp
push
test
in
ja
and
or
mov
dec
xchg
nop
mov
out
add
mov
inc
pop
xchg
cmp
call
mov
lea
mov
jmp
js
add
ja
out
ret
mov
and
gs
add
dec
pop
and
imul
inc
int
aas
push
enter
sub
mov
sub
push
(bad)
and
push
or
stos
data16
or
sbb
sbb
inc
imul
popf
xlat
inc
sbb
mov
add
movs
adc
sbb
int3
pusha
push
test
into
mov
ss
retf
push
xchg
mov
adc
dec
dec
dec
xchg
pop
(bad)
jo
ret
pushf
jle
adc
and
sub
scas
shl
adc
pop
loopne
inc
adc
dec
cmp
pop
fistp
push
icebp
cmc
inc
push
push
inc
and
shl
movs
push
push
cmc
loop
pop
fisub
pop
in
add
jmp
mul
test
push
pop
adc
sub
or
xchg
popa
adc
xor
shl
imul
or
in
jmp
aad
and
xor
data16
xchg
mov
xor
lds
pop
xchg
test
cmps
mov
scas
adc
ins
push
lahf
mov
inc
and
cmc
cmp
nop
inc
cwde
xlat
loop
add
les
xchg
jno
mov
add
inc
add
jo
arpl
fidivr
hlt
xchg
inc
inc
aas
stos
or
mov
and
jmp
jge
daa
clc
xchg
hlt
fcmovnb
(bad)
push
push
fcmovnbe
mov
popa
test
lods
add
mov
xor
clc
retf
daa
stos
dec
mov
mov
pop
pushw
stos
fadd
or
jb
int3
outs
adc
jbe
jmp
pop
cmp
fimul
dec
pop
adc
push
pop
xchg
dec
xchg
fsubr
mov
enter
test
js
cmps
shr
nop
outs
jbe
fcomp
cld
pop
lods
or
cmps
and
mov
xor
in
loop
sbb
js
in
sbb
dec
(bad)
es
fs
outs
(bad)
sub
add
scas
mov
inc
cld
mov
mov
cli
out
gs
mov
loop
dec
push
sub
repnz
jmp
lock
sub
push
sbb
rcl
inc
mov
je
adc
mov
adc
push
int
into
ror
pop
shl
sahf
cwde
test
mov
adc
jo
xor
out
sbb
or
xor
popf
mov
mov
inc
mov
int3
imul
add
inc
inc
jb
add
xchg
sbb
push
add
popa
sub
mov
adc
pusha
xchg
mov
jae
dec
leave
xor
xchg
aad
xor
push
leave
ror
xor
fwait
push
pop
adc
(bad)
shl
(bad)
int3
(bad)
mov
pusha
inc
gs
mov
mov
jmp
nop
mov
pushf
in
xor
and
ss
adc
jb
sbb
aas
(bad)
jb
adc
loop
sbb
fnsave
fs
sar
iret
rcr
pushf
adc
daa
mov
pop
test
fmul
and
xor
leave
pop
ins
fwait
arpl
test
fwait
adc
mov
enter
inc
cwde
scas
xchg
std
jae
mov
mov
or
call
push
sub
shl
pop
mov
mov
pop
inc
sub
out
mov
cmp
fild
dec
xchg
shl
adc
mov
xchg
sub
fstp
xchg
push
mov
dec
add
push
mov
mov
cmp
das
add
jb
lods
sbb
ja
xchg
xchg
fnstcw
(bad)
imul
shl
cmp
and
jg
arpl
ja
jae
cmps
inc
push
ret
sub
xchg
push
ss
adc
addr16
cdq
pushf
fs
add
sub
pop
call
mov
dec
stos
sbb
sbb
pop
pop
stc
lds
mov
sar
(bad)
push
and
add
call
adc
out
inc
imul
sbb
xor
mov
test
out
sub
shl
cmps
or
jg
xchg
dec
sub
or
fld
lods
and
mov
sub
sbb
test
shr
dec
loop
push
test
cwde
dec
das
inc
push
sbb
loopne
inc
test
sub
ffree
fcomp
cmp
nop
lea
mov
push
je
dec
aaa
imul
outs
adc
sahf
sbb
fs
jl
push
mov
enterw
aad
dec
(bad)
cwde
sbb
sub
sbb
and
and
inc
into
stos
xor
scas
fwait
jbe
cmc
nop
movs
retf
adc
arpl
xor
jae
inc
nop
ret
and
jmp
bnd
and
fisttp
test
push
xor
push
cmps
push
ret
ror
jmp
shr
repnz
call
inc
adc
sar
mov
dec
int
inc
mov
and
push
test
rol
lahf
mov
add
repz
rol
test
inc
nop
ds
call
js
push
pop
push
and
jb
mov
test
mov
fldcw
xlat
lock
pop
adc
cdq
ss
push
cs
push
add
sbb
rcl
in
data16
mul
xchg
push
test
imul
call
mov
jne
cmp
test
in
rcr
data16
adc
push
es
mov
ficomp
mov
jmp
mov
stos
fiadd
mov
mov
(bad)
lock
adc
mov
xchg
and
mov
mov
sahf
pushf
pop
mov
movs
jo
jbe
adc
(bad)
xchg
bound
outs
rol
push
mov
ret
add
mov
pop
scas
inc
sbb
retf
in
int
inc
arpl
add
push
xor
pop
pop
mov
outs
xchg
ret
or
call
push
inc
pop
xchg
ror
xchg
in
fldenv
push
mov
mov
rol
sar
enter
les
mov
cwde
xor
lods
bnd
popa
cmps
add
js
jne
repz
mov
sub
ins
inc
mov
loope
sub
aam
cmp
sub
or
push
mov
mov
and
xor
fcom
imul
cmps
pop
pop
(bad)
pop
(bad)
movs
mov
push
jbe
xchg
aad
(bad)
cmp
mov
cs
jp
sbb
test
jno
sub
mov
jge
pop
xchg
jge
(bad)
sar
mov
xchg
int
loope
or
pushf
adc
jo
mov
xchg
sbb
cmps
js
sbb
cmp
fdiv
ja
rcr
je
pusha
or
jmp
push
and
mov
ins
pop
pop
pop
je
mov
(bad)
in
iret
(bad)
jl
aaa
push
pop
repz
in
jg
ins
scas
iret
jae
xor
sbb
inc
mov
sub
lods
push
xor
imul
add
test
jae
or
cmp
fsub
adc
xor
jnp
mov
mov
mov
int
imul
inc
imul
adc
mov
outs
push
inc
daa
into
repz
out
scas
jne
stc
arpl
int3
fidivr
mov
imul
(bad)
sti
out
jns
idiv
into
stos
cli
jnp
jns
pop
adc
(bad)
fincstp
idiv
fnstcw
jg
repz
mov
(bad)
and
leave
sub
sbb
mov
sahf
stc
nop
(bad)
cli
icebp
out
imul
pop
add
xchg
or
std
and
sbb
jnp
in
xchg
push
xor
je
cli
cli
cwde
imul
inc
ret
cwde
push
inc
add
out
xchg
mov
inc
or
jmp
or
in
adc
cmps
and
add
jle
add
sub
xor
or
pop
xor
(bad)
getsec
(bad)
outs
jns
pusha
iret
outs
std
(bad)
mov
ds
sti
fidivr
fist
and
jns
lahf
outs
jmp
sub
dec
fld
stc
stc
leave
dec
push
xor
mov
mov
jle
imul
fmul
cwde
pop
add
mov
jmp
jne
push
jp
mov
dec
ret
push
inc
push
adc
cmp
mov
and
xor
dec
fwait
movs
cmp
(bad)
imul
adc
cdq
add
adc
ins
xchg
jb
mov
and
and
jle
mov
or
mov
xor
push
ja
rol
jmp
xchg
repz
into
inc
mov
mov
pop
pop
sbb
sahf
xchg
vmread
and
sahf
sti
mov
jp
(bad)
xor
out
inc
dec
shl
in
cmp
hlt
mov
mov
dec
je
test
into
jb
sub
shl
fwait
or
xor
push
ret
push
outs
mov
mov
mov
in
push
mov
dec
push
xor
inc
and
add
pushf
push
sbb
dec
push
aaa
enter
push
and
cdq
movs
cmp
adc
or
adc
scas
mov
adc
pop
jmp
test
and
std
imul
cmps
sahf
cmp
cli
stos
stc
std
and
mov
scas
retf
das
pop
lods
xchg
lahf
ja
push
imul
add
mov
out
and
daa
xchg
nop
mov
mov
cmp
sti
add
jl
xchg
(bad)
pop
jmp
adc
mov
pop
in
mov
jns
cmp
or
gs
sub
popf
sbb
scas
movs
pop
and
(bad)
fist
addr16
xchg
loope
stos
xlat
add
fdiv
pop
fisubr
out
cld
xchg
(bad)
jecxz
fild
xchg
push
or
sbb
aas
xor
dec
lods
fsub
xor
aas
push
lahf
mov
and
lods
dec
xchg
stc
popf
out
stc
out
ret
pop
adc
retf
in
cdq
jg
push
hlt
popa
leave
bound
pop
das
int3
cmp
jl
mov
not
adc
jne
mov
and
adc
xor
cli
in
xor
scas
call
int
inc
shl
jae
jne
call
inc
or
fwait
mov
lods
(bad)
(bad)
ss
mov
shl
jnp
lods
out
jne
jle
mov
xor
popf
call
shl
push
shr
mov
mov
dec
mov
lahf
xchg
jmp
fnstsw
mov
div
pop
push
ss
mov
call
mov
jmp
arpl
xchg
ja
lea
dec
pop
repnz
cmc
mov
jle
aam
in
jmp
popf
mov
mov
test
xchg
cmp
cld
xchg
xor
mov
pop
shr
ror
and
sub
jno
or
in
xchg
movs
xchg
test
push
mov
pop
loopne
xchg
sbb
mov
sub
in
test
adc
(bad)
ret
mov
shr
xor
mov
adc
sub
mov
jge
jns
cmp
pop
dec
pop
inc
inc
mov
mov
pop
mov
cmp
popf
addr16
(bad)
(bad)
clc
(bad)
jb
aas
enter
jecxz
into
rcl
test
fnstenv
mov
cmc
ret
push
jle
xchg
hlt
pop
push
out
retf
jg
pusha
inc
ins
neg
hlt
pop
sahf
ja
push
cld
lea
lahf
test
outs
(bad)
ins
pop
hlt
iret
ds
lahf
int3
mov
cli
into
xor
jmp
adc
mov
lock
push
jns
cmc
jnp
mov
xor
adc
push
adc
mov
popa
add
bound
aad
jle
lea
outs
or
jmp
xor
in
cmps
(bad)
xchg
inc
mov
xchg
mov
addr16
and
mov
repnz
dec
loopne
jge
cwde
xor
enter
(bad)
cli
dec
dec
scas
sti
aas
xlat
dec
mov
sti
sbb
into
clc
mov
push
pop
stc
mov
ds
(bad)
addr16
cmp
out
imul
imul
adc
js
xchg
rcr
jmp
gs
push
iret
and
out
imul
pop
(bad)
dec
jbe
stos
fmul
es
adc
jp
rcl
ror
pop
push
xchg
lahf
push
xor
scas
push
ins
jnp
push
push
mov
pop
mov
js
movs
mov
(bad)
cld
inc
and
es
inc
add
data16
aaa
adc
or
jle
mov
stos
adc
loopne
call
xchg
bound
cmps
imul
sub
hlt
lahf
into
sti
jns
mov
dec
mov
and
jnp
mov
jmp
lock
inc
fs
out
mov
es
xchg
xor
pop
ror
dec
xor
dec
and
adc
imul
xchg
xchg
std
icebp
sbb
cmc
jae
xchg
(bad)
pop
ret
hlt
arpl
mov
(bad)
out
xor
dec
clc
add
inc
jb
aad
inc
retf
sbb
lods
push
cdq
(bad)
int3
int
fnsave
adc
(bad)
xchg
push
or
sub
sbb
bndstx
and
ins
loope
pop
pushf
mov
arpl
sbb
cmp
je
nop
dec
rcl
or
aas
jge
mov
pop
sub
js
int3
xor
mov
(bad)
out
cmp
jecxz
mul
sahf
cmps
pop
jle
mov
ja
dec
pop
repnz
call
cmp
movs
cld
repnz
clc
clc
imul
popa
ds
retf
rcl
mov
cwde
aas
aad
call
ret
jge
lods
inc
cmp
adc
lods
iret
jmp
je
or
jae
dec
dec
mov
gs
sbb
into
push
or
mov
leave
in
loop
push
adc
push
sub
jmp
adc
dec
mov
jb
popa
popa
dec
test
(bad)
ins
cmp
iret
imul
xor
sahf
ins
sbb
cmc
dec
jmp
mov
dec
outs
jno
out
(bad)
out
xor
jae
jmp
in
and
pop
js
add
jp
mov
push
out
fdivp
cmp
and
push
movs
jnp
jle
in
(bad)
nop
ficom
mov
stc
jmp
sti
jmp
aad
sahf
sub
cmp
in
scas
push
xchg
cmp
enter
pop
inc
cwde
jge
mov
(bad)
jecxz
pop
sub
mov
shr
inc
ret
(bad)
xchg
sahf
ins
dec
cli
mov
sub
cmps
dec
mov
dec
xor
ins
bound
sub
bswap
add
es
or
add
lea
cmp
push
test
adc
jo
mov
sbb
inc
add
cmp
pop
xlat
cmp
mov
adc
gs
xor
jns
stc
cmc
scas
jg
popa
add
cld
cmps
jne
xchg
push
out
and
out
mov
(bad)
or
mov
jg
pop
jg
fidivr
outs
cmp
mov
xchg
retf
sbb
push
mov
or
pop
movs
retf
mov
xor
jmp
jecxz
cmp
xchg
in
jg
inc
enter
xchg
dec
sbb
mov
fxch
mov
push
pusha
pop
adc
and
adc
in
or
mov
pop
or
nop
mov
dec
sub
mov
arpl
sub
pop
mov
push
stos
jne
mov
fisub
leave
fs
mov
add
xor
mov
movs
iret
cmp
outs
jle
rcr
dec
xchg
push
push
push
ret
jle
int
dec
jnp
mov
xor
dec
fmul
std
sbb
cmovle
cli
cmps
aas
lods
and
rcr
mov
sbb
out
add
adc
mov
std
out
clc
jmp
dec
shr
adc
mov
daa
hlt
sti
pushf
xchg
int3
in
add
(bad)
and
jnp
mov
and
movs
push
xor
ret
push
clc
add
jmp
fiadd
fiadd
in
adc
and
movs
dec
shr
scas
dec
pop
mov
sar
pushf
push
jg
cmp
scas
cdq
imul
push
(bad)
(bad)
and
cmp
js
test
inc
test
push
(bad)
and
daa
ins
enter
dec
or
out
(bad)
hlt
mov
jmp
jle
cmps
mov
jp
fnstsw
jmpw
fild
pushf
neg
repz
aas
mov
inc
retf
hlt
cli
sbb
fild
(bad)
mov
stos
nop
sub
mov
out
rol
sbb
mov
jge
mov
jae
dec
out
cmp
daa
std
cmps
jns
cs
cld
aaa
in
imul
sub
add
cwde
or
xchg
or
fisubr
rcr
and
pusha
js
xchg
adc
jno
xor
xor
mov
enter
xor
call
xlat
ficom
inc
inc
adc
ss
sbb
fwait
leave
and
or
test
and
add
sbb
arpl
lods
enter
mov
mov
cmp
out
xor
(bad)
mov
jmp
mov
div
jle
das
pop
inc
fistp
fdivrp
repnz
cmp
add
repz
hlt
xor
xchg
jmp
adc
pop
fldcw
js
dec
dec
(bad)
std
fstp
test
xchg
aas
sar
add
or
fnstcw
sbb
cld
xchg
dec
enter
outs
ds
dec
(bad)
pop
lds
iret
nop
or
mov
pushf
pop
cli
mov
dec
adc
cwde
aaa
loop
mov
imul
adc
sub
dec
mov
sub
dec
cmp
mov
rcr
xchg
(bad)
leave
pop
mov
jmp
cwde
arpl
neg
mov
cmps
inc
cwde
lahf
ds
lods
xlat
cdq
daa
push
cmp
jmp
movs
arpl
jge
jg
mov
mov
sbb
popa
cli
cmp
out
pop
call
mov
adc
jnp
(bad)
or
stc
mov
out
stc
pop
repz
jle
and
xchg
out
pushf
rcr
fldcw
cmp
and
xor
inc
es
dec
inc
jbe
xchg
add
dec
mov
ret
ret
mov
xchg
mov
(bad)
call
btc
sar
sub
ins
jmp
push
jmp
dec
jmp
das
(bad)
mov
in
popa
inc
xchg
outs
and
mov
je
out
mov
int3
xor
pop
jge
test
mul
shl
dec
gs
jo
test
sahf
push
and
sbb
int3
outs
sahf
cmp
rol
dec
and
(bad)
fidivr
retf
fld
in
loopne
sub
xor
clc
stos
idiv
push
xchg
or
fcomp
and
(bad)
test
jmp
stos
stos
das
aam
stc
ret
pop
jle
rol
cmps
xor
aam
call
rcr
xor
scas
cdq
popa
test
aas
xlat
jnp
and
mov
inc
inc
cmp
fwait
popf
enter
xchg
bound
mov
sbb
pop
jge
cwde
jns
data16
adc
xchg
clc
into
or
repz
jecxz
cmp
shr
mov
pop
les
adc
push
mov
frstor
retf
test
repnz
inc
call
xor
pop
daa
jmp
cli
and
(bad)
scas
(bad)
arpl
cmp
ins
out
bound
jno
mov
dec
das
dec
cli
psubd
cs
or
inc
and
das
out
cmp
dec
sbb
add
xor
js
push
daa
dec
xor
dec
shr
jns
mov
lods
sar
enter
sbb
nop
cmp
add
test
jnp
fadd
push
push
dec
mov
mov
push
outs
push
icebp
test
dec
mov
jmp
(bad)
xchg
add
lds
lea
popa
fwait
ds
test
dec
jmp
jle
(bad)
call
retf
dec
xor
mov
and
dec
pop
jmp
jmp
xor
jecxz
cmp
pop
adc
je
movs
cld
xlat
xor
pop
push
sbb
ins
cmc
jmp
sub
adc
movs
add
gs
xor
fstp
xchg
adc
dec
xchg
bound
ret
mov
push
cmp
ret
xlat
push
(bad)
lods
or
add
mov
mov
mov
in
ins
cmps
add
cli
or
inc
stos
sar
sbb
xchg
mov
push
call
mov
test
aas
adc
push
leave
mov
ror
ins
xchg
icebp
pop
es
repz
leave
pop
ss
or
enter
repz
push
jne
cli
mov
shl
pop
lods
es
jl
cmp
cmps
inc
fst
jne
clc
ss
lods
adc
and
aam
mov
shl
call
lea
cmc
mov
enter
daa
fs
dec
add
sub
jge
mov
add
pop
cmps
aam
icebp
sub
ins
xor
(bad)
adc
adc
push
gs
in
jno
daa
(bad)
dec
loop
xchg
pop
jg
in
out
aas
pushf
xchg
out
sti
scas
pop
sar
rcl
mov
sub
inc
outs
loope
fidivr
and
pop
test
push
ret
arpl
cli
pop
scas
fnstcw
stc
les
jle
scas
shl
push
stos
into
in
aaa
push
pusha
mov
xor
mov
push
dec
inc
inc
push
pop
sub
sbb
ins
lea
ja
imul
and
ret
mov
pop
mov
and
gs
out
retf
jmp
sub
sub
pop
jnp
cmp
push
dec
push
sbb
xor
add
pop
fadd
add
inc
dec
loope
fsubr
jp
scas
cmp
pop
pusha
mov
jle
add
mov
(bad)
loope
lods
into
jnp
jmp
aas
cwde
int
fldenv
jmp
mov
out
jae
imul
sbb
adc
add
in
clc
lea
int3
mov
bnd
jmp
popf
jns
sub
mov
jmp
repz
stos
in
sahf
xchg
bound
cli
not
mov
mov
pop
add
outs
int3
jecxz
sub
lods
in
test
xchg
mov
push
mov
dec
daa
dec
inc
adc
dec
xchg
xchg
test
(bad)
in
add
pushf
rcr
add
xchg
dec
cmp
stc
jns
xchg
das
mov
mov
cdq
jns
cmp
sbb
mov
mov
jb
out
test
push
xor
push
mov
(bad)
nop
aas
pushf
mov
mov
dec
popf
cs
fldcw
out
or
push
push
retf
push
cmc
es
mov
xor
adc
mov
inc
pop
xor
or
or
pop
je
cdq
arpl
ins
or
retf
movs
mov
adc
and
mov
stc
stos
fchs
sbb
ret
test
jl
out
push
int3
pop
es
push
dec
out
sub
jge
push
pop
and
imul
inc
and
enter
cmp
add
mov
add
mov
imul
retf
es
xor
jmp
hlt
pushf
shl
in
shl
sbb
movs
adc
sbb
jecxz
fwait
sbb
adc
sub
mov
push
repz
(bad)
mov
repnz
jge
lods
sub
outs
mov
jo
test
int3
movs
mov
cmp
cdq
ror
sbb
jns
jns
fcom
movs
daa
mov
inc
(bad)
cwde
retf
hlt
pop
mov
repnz
dec
mov
adc
and
ror
sahf
icebp
adc
sub
add
sti
imul
dec
xchg
ja
inc
jmp
idiv
fstp
ss
fucomi
mov
jmp
cld
dec
into
cdq
jmp
jmp
pop
lock
and
add
adc
push
popa
sub
xchg
add
mov
dec
or
fisubr
imul
push
shl
daa
mov
int3
fcmovb
and
sbb
add
out
pop
arpl
push
mov
stc
and
inc
mov
jg
mov
sub
lds
inc
adc
inc
pop
popf
es
xchg
cmp
mov
adc
je
movs
mov
(bad)
call
outs
fs
mov
aas
test
lds
jl
mov
dec
xchg
mov
pop
cs
clc
adc
push
sbb
xor
adc
sub
xchg
stc
mov
sbb
and
push
fldenv
dec
clc
arpl
ins
cmps
pop
cli
mov
adc
call
dec
(bad)
adc
fmul
je
add
mov
sar
aas
ins
add
int3
hlt
xchg
or
jecxz
pop
push
sar
je
pusha
inc
adc
push
fucomip
sub
add
fist
cdq
jle
or
(bad)
jnp
adc
jle
cmc
dec
pop
les
mov
inc
inc
mov
push
imul
sub
daa
push
mov
pushf
and
sub
aad
imul
push
push
mov
cmp
xchg
jg
call
call
ins
dec
add
fs
push
btr
scas
jbe
mov
push
loop
movups
ror
pop
out
out
adc
xchg
sub
mov
enter
xor
sbb
arpl
je
lea
ins
loop
dec
sub
mov
in
xor
iret
add
aad
xchg
or
mov
test
mov
loope
arpl
ret
cmp
fist
loop
push
arpl
in
loop
or
xor
pop
enter
bnd
fs
test
push
pshufw
cdq
pop
xchg
or
lds
out
sbb
fld
xchg
test
(bad)
int3
add
imul
jno
fwait
cmovbe
gs
popf
fs
fisubr
inc
das
sti
lds
inc
add
cmp
shr
mov
(bad)
pop
pop
movs
ret
add
inc
out
gs
jmp
lock
mov
dec
retf
fild
ret
push
jmp
cmovb
mov
ins
lahf
test
sahf
mov
mov
fwait
pop
xor
jle
jmp
mov
pop
call
aaa
ret
mov
repnz
bound
fstp
mov
xor
sub
movs
xchg
adc
dec
retf
sub
jae
gs
cmp
xor
inc
aas
fs
int3
je
mov
popf
mul
mov
clc
js
mov
sub
test
jbe
popa
js
pop
xor
call
cmp
and
add
sbb
mov
aam
jb
shr
stc
add
jecxz
pop
or
mov
add
data16
fs
repz
xor
or
add
stc
les
and
call
imul
mov
scas
or
mov
xor
sub
xchg
xchg
dec
retf
inc
loopne
ins
or
xchg
mov
mov
outs
fisub
test
push
xchg
(bad)
aam
rcl
(bad)
(bad)
in
xor
pop
add
cdq
fwait
movs
test
stos
push
sbb
gs
cld
fwait
out
fdivr
aaa
imul
leave
ror
jo
cmp
xlat
mov
dec
jbe
lods
mov
leave
dec
dec
pop
lds
js
sub
hlt
js
fs
(bad)
and
sub
(bad)
int3
xchg
or
fidivr
xchg
mov
in
sbb
push
(bad)
xchg
cmps
mov
sbb
sahf
ins
fwait
add
les
rcr
xor
aas
dec
call
push
xchg
pop
mov
jae
cmp
and
push
cmp
aad
sub
repz
sbb
add
pop
fdiv
sub
mov
enter
pop
mov
es
enter
cdq
adc
adc
les
mov
mov
push
stos
icebp
je
push
and
sub
int
inc
and
pop
xor
hlt
push
xchg
lods
push
cmp
xor
add
in
cdq
imul
bound
jp
xchg
mov
and
mov
out
jge
cmp
inc
(bad)
cmp
popa
es
or
int3
lock
xchg
dec
cmp
mov
mov
mov
data16
sbb
loope
ins
imul
inc
jp
jmp
js
bt
in
fdivr
or
mov
imul
xchg
movs
xchg
jle
xchg
ins
xchg
dec
outs
les
sbb
aas
add
xchg
nop
xor
xchg
pop
lods
cdq
xchg
adc
cmps
in
inc
fwait
jp
in
jmp
cmps
fiadd
xchg
and
retf
and
push
ror
xor
psllw
pop
ss
pop
xor
lea
daa
fucomp
xor
mov
xor
bound
fmul
bound
mov
jbe
push
jns
jp
outs
lea
sbb
shl
bound
out
push
jecxz
imul
in
adc
jle
out
movs
aam
adc
push
(bad)
jmp
push
cmp
call
inc
push
leave
sbb
sbb
cdq
iret
or
into
mov
pop
data16
or
pop
mov
xor
popa
inc
aam
cwde
add
adc
in
adc
jo
dec
shl
mov
push
inc
or
rcr
inc
cmp
popf
out
pop
ret
and
mov
xlat
inc
cwde
or
or
add
inc
or
and
or
cmc
and
shl
les
cdq
and
ins
out
and
aas
dec
arpl
dec
aaa
popa
dec
out
inc
fistp
jecxz
ins
stc
popf
xor
mov
daa
sub
enter
xchg
stos
jecxz
inc
lahf
mov
popf
jl
push
xchg
es
sti
test
pusha
and
pop
aam
add
inc
in
add
lods
outs
data16
repnz
test
cmp
inc
adc
adc
jg
js
mov
sti
or
or
cwde
daa
xchg
scas
ins
adc
mov
dec
pop
inc
inc
sub
mov
dec
stos
adc
mov
sbb
in
(bad)
leave
frstor
sahf
xchg
fwait
in
loope
pop
xchg
push
in
mov
(bad)
movs
adc
sbb
iret
dec
test
loope
push
sbb
jl
mov
jne
xchg
out
sbb
test
ds
js
and
cwde
jecxz
cmps
ins
jp
xor
pop
and
mov
inc
popf
stos
and
jno
les
dec
stc
stos
sbb
push
xchg
adc
outs
mov
ds
ret
(bad)
and
jns
sbb
dec
mov
inc
icebp
pop
pop
dec
mov
mov
add
jmp
and
mov
sbb
adc
(bad)
stos
sbb
add
out
pop
or
scas
mov
dec
frstor
pushf
push
nop
push
fistp
mov
push
mov
jge
imul
popf
push
test
out
ss
sub
add
fist
push
sbb
jmp
fs
arpl
mov
mov
mov
(bad)
and
dec
ja
adc
rcr
int
outs
into
ss
push
dec
in
xor
pop
sbb
dec
push
fisubr
xchg
imul
cmps
and
dec
pop
cmp
out
outs
(bad)
in
pop
daa
pushfw
xor
stos
mov
adc
lock
push
fbstp
in
out
imul
and
add
or
ja
ins
arpl
push
sbb
aaa
dec
mov
xchg
int3
stos
push
icebp
pusha
mov
daa
in
cs
cmp
xor
in
xor
and
sub
pop
xor
sub
lds
aam
push
jnp
js
add
mov
pusha
(bad)
int3
adc
lods
addr16
cdq
fst
or
sbb
mov
(bad)
xor
dec
and
mov
mov
fdiv
in
cmps
popf
scas
scas
(bad)
xor
xor
push
push
xor
pop
rcr
xchg
pop
inc
ins
mov
xchg
(bad)
test
mov
jnp
ror
cmp
psubusb
mov
lock
ss
aad
gs
neg
jns
cmp
mov
test
pop
push
add
dec
mov
jbe
aad
cmp
pop
adc
sti
fist
data16
xchg
fnstcw
add
outs
push
fld
xlat
cs
add
(bad)
int3
push
sub
dec
inc
and
xchg
sbb
das
aam
arpl
cmps
mov
cmp
cld
ror
xor
mov
cdq
inc
sbb
push
(bad)
lods
pop
or
sar
sbb
aaa
cmp
jnp
mov
inc
xchg
mov
ins
jg
and
and
ds
mov
fist
(bad)
(bad)
mov
mov
inc
mov
cmp
rcl
cmp
(bad)
mov
adc
(bad)
push
xlat
jno
je
mov
enter
mov
clc
retf
adc
rcl
(bad)
sbb
adc
(bad)
daa
sti
dec
cmp
mov
xor
cmp
pop
cmp
int
ja
dec
pop
cmp
mov
dec
cmps
mov
dec
push
test
int
sbb
out
repnz
and
into
xor
cmp
arpl
mov
inc
sub
fadd
aaa
mov
adc
ins
adc
mov
push
pop
mov
mov
inc
lods
movs
in
cdq
nop
add
ins
es
dec
imul
inc
lods
mov
jl
hlt
jb
push
cmps
in
add
adc
in
(bad)
and
cmp
data16
fwait
aam
cli
and
cmpxchg
xor
xchg
jp
aam
sub
lea
adc
iret
call
cmps
jp
test
daa
retf
lea
lds
inc
and
gs
fwait
pusha
push
fbld
xchg
sbb
fdivr
pop
dec
into
pop
in
lahf
aad
shr
fwait
test
push
mov
dec
and
or
add
repnz
ja
clc
test
loop
call
sbb
xor
fild
cld
adc
and
call
mov
ins
das
sar
jge
sub
inc
add
cmps
xchg
xchg
lahf
test
adc
add
jbe
or
or
aas
sbb
nop
mov
cdq
pop
push
jp
or
mov
dec
dec
mov
pusha
jbe
mov
mov
bnd
fbld
xchg
cmps
in
push
cmp
jo
lahf
and
lock
inc
(bad)
adc
cwde
lahf
inc
stos
inc
sub
aas
mov
mov
loope
gs
ds
inc
lahf
pop
mov
popf
push
stc
test
fstp
das
cmc
cmp
sub
xor
mov
or
jge
mov
fild
not
add
cmp
pop
pusha
outs
xchg
div
fadd
add
push
outs
jnp
mov
scas
stos
mov
clc
ins
pop
or
inc
scas
or
jg
movs
mov
xor
cwde
mov
and
syscall
push
idiv
pop
mov
jl
int
data16
test
ss
pop
push
dec
push
jbe
xchg
fadd
test
ins
cli
mov
in
pop
cmp
mov
inc
xor
mov
fsubr
push
pop
out
cmp
adc
inc
jmp
cdq
pop
in
loopne
js
js
movs
sub
mov
sub
test
and
cwde
and
mov
dec
add
pop
or
push
int
das
stc
add
das
sub
clc
inc
inc
pop
xor
sub
movs
sub
test
mov
xchg
adc
in
sbb
mov
ja
jmp
pop
fst
inc
es
fwait
sub
daa
mov
rol
cld
push
scas
punpckhdq
mov
jb
push
mov
out
sub
out
xor
cdq
popf
push
xchg
push
push
xor
loope
or
cwde
sub
fs
or
hlt
test
fld
movs
imul
mov
pop
add
lock
mov
imul
mov
lahf
adc
xor
mov
mov
pop
popa
(bad)
rcr
fcmovbe
add
movs
(bad)
outs
mov
add
idiv
fbld
rol
and
jle
int3
bound
push
dec
test
aaa
call
mov
and
or
xchg
pop
push
pusha
push
shr
or
fwait
cdq
ins
cmp
icebp
mov
push
xchg
mov
dec
ret
pop
int3
and
mov
popa
dec
not
or
(bad)
test
stos
fsub
and
mov
idiv
pop
xor
sbb
ins
add
jl
adc
lods
in
loopne
movs
mov
in
fs
mov
iret
fwait
or
inc
ss
pushf
adc
push
jnp
inc
push
or
xor
dec
ins
inc
and
xor
lods
cmp
je
xor
lahf
bound
sbb
loope
mov
dec
jbe
push
xor
cs
xor
loop
pop
adc
add
and
loop
movs
inc
cmp
pop
outs
sbb
iret
cs
imul
push
add
call
mov
mov
mov
push
jecxz
xor
jmp
mov
dec
dec
dec
pop
push
cdq
ins
cmp
les
sub
xor
loop
sub
push
sub
xor
call
cmp
inc
jp
test
cmp
sbb
shr
add
sub
cmps
fidivr
jae
inc
mov
fbstp
mov
inc
ja
fs
adc
adc
(bad)
cli
xor
pop
mov
cmc
jmp
mov
aas
pop
rcr
cdq
xchg
push
sbb
jmp
push
lds
inc
add
add
les
push
sbb
retf
adc
xor
mov
fs
mov
xor
pop
rcl
cmp
adc
(bad)
adc
adc
sbb
mov
aaa
and
or
retf
nop
cmp
lds
out
cmc
les
jle
sub
outs
pop
mov
out
rol
jp
pop
test
jecxz
fistp
and
add
(bad)
ins
cmp
push
adc
lods
sbb
mov
imul
push
cmp
das
stc
add
in
cwde
adc
outs
mov
pop
mov
push
lods
push
out
gs
adc
rcr
mov
adc
ret
add
cdq
add
repz
pop
es
retf
loopne
jl
retf
ror
cmps
shr
jmp
mov
sbb
stos
out
mov
adc
sti
inc
sub
aad
xchg
imul
dec
jecxz
add
add
fimul
fwait
mov
add
(bad)
add
fsub
sahf
shr
out
push
push
push
cmp
mov
mov
dec
imul
pop
pusha
push
inc
jge
and
test
mov
dec
retf
loopne
in
mov
fistp
inc
(bad)
clc
not
xchg
test
dec
cmps
out
aad
int3
sub
mov
sub
out
push
jmp
call
dec
xor
mov
or
xchg
add
outs
clc
call
test
arpl
add
retf
movs
mov
or
or
sbb
cdq
xor
test
push
xchg
push
retf
pop
repz
daa
or
pop
ss
jmp
push
dec
cdq
loopne
add
mov
mov
push
mov
and
loope
icebp
push
stos
inc
addr16
repz
jl
shl
stos
cmp
mov
add
xor
xchg
pop
cmp
inc
xchg
pop
pop
punpckhbw
mov
mov
bound
data16
in
mov
mov
xor
sbb
pop
imul
add
das
loop
sub
hlt
and
test
ins
dec
sti
sub
inc
gs
loope
cmp
mov
pop
fwait
rol
clc
sahf
test
mov
int
sub
call
outs
fidiv
xchg
pop
mov
loopne
jg
ret
xor
aas
xlat
leave
jle
arpl
dec
jo
(bad)
test
adc
mov
(bad)
scas
xor
and
inc
cdq
and
mov
mov
pop
outs
pusha
cmc
and
popa
push
xor
mov
mov
shl
and
out
jo
call
adc
push
jbe
test
adc
daa
ins
test
push
and
add
pop
pop
out
inc
pushf
imul
cmp
je
jae
sahf
jle
gs
mov
mov
cmc
and
daa
push
shl
xlat
xchg
pushf
mov
daa
xor
add
(bad)
mov
out
cmp
xor
int
repz
sbb
repz
aaa
dec
xor
popa
xor
repnz
(bad)
push
push
into
in
loop
aaa
lahf
jbe
int
sub
ror
jmp
mov
(bad)
aam
nop
mov
xchg
int
ret
jae
shl
mov
add
mov
inc
mov
mov
mov
pop
xor
int3
xchg
gs
push
jmp
setnp
push
pop
(bad)
pop
into
ds
ficomp
fcomip
or
dec
jmp
mov
sub
mov
mov
inc
gs
mov
imul
add
ror
daa
xchg
cs
out
mov
pop
xchg
jb
cmp
pop
jmp
mov
cmc
push
jnp
data16
loop
dec
add
dec
ret
cmc
shr
popf
cld
or
repz
es
push
in
int3
dec
sub
push
lahf
ja
pushf
sub
or
movs
inc
stc
out
scas
cwde
neg
dec
cmp
enter
push
mov
fisubr
lods
jl
mov
cmp
mov
fwait
dec
mov
test
mov
std
dec
jbe
loop
cmp
rcr
xor
pop
jne
nop
sbb
dec
xchg
jge
retf
pushf
sbb
mov
dec
jg
jbe
lock
inc
imul
sub
cmp
mov
fisttp
sbb
cmp
test
call
xor
add
inc
mov
push
dec
mov
lods
dec
arpl
cmc
scas
and
movs
loope
(bad)
mov
int
(bad)
push
mov
iret
enter
cmp
int3
xchg
imul
lock
xor
scas
ds
lahf
pop
jns
popf
jge
call
xchg
xchg
mov
imul
scas
sbb
daa
jge
push
add
adc
xor
sub
(bad)
mov
outs
cmp
(bad)
cli
xor
mov
in
scas
sbb
loopne
jnp
rcl
and
cdq
and
movs
xchg
shl
xchg
cld
stos
retf
and
ins
push
fild
les
adc
mov
add
push
xchg
lods
mov
and
dec
inc
push
addr16
lods
pop
xchg
cmc
sub
pop
scas
mov
rcr
lods
sub
popw
outs
test
push
and
mov
jmp
xchg
jge
movs
int3
les
test
mov
xor
jae
movs
sbb
jnp
add
clc
and
shl
lds
mov
push
sbb
cdq
fadd
cmp
xor
push
loop
test
std
in
add
cs
addr16
adc
mov
aam
sbb
mov
pop
and
mov
inc
int3
sub
adc
ret
xor
pusha
mov
addr16
xchg
jecxz
or
pop
fld
dec
pop
les
xchg
mov
sbb
xor
je
cwde
cld
xchg
mov
jnp
test
clc
rcr
pop
jmp
push
adc
add
cmp
cmp
dec
aaa
(bad)
add
adc
inc
xchg
rcl
lea
xlat
lea
inc
adc
jns
push
push
outs
movs
push
pop
mov
add
call
sub
shl
pop
and
popf
lods
and
daa
(bad)
cs
cmps
mov
adc
inc
push
scas
dec
cs
fs
hlt
es
pop
nop
mov
adc
daa
xlat
inc
cmp
sub
imul
popa
or
pusha
pop
inc
(bad)
cld
xchg
dec
pop
or
xchg
iret
gs
je
jbe
repnz
inc
pop
cdq
mov
xlat
out
mov
jle
jmp
std
dec
stos
(bad)
push
call
and
xchg
mov
pop
and
je
(bad)
aam
stc
out
jg
pop
iret
jmp
adc
xor
mov
and
mov
shl
out
jp
jmp
or
jle
sub
daa
push
xchg
test
push
test
jge
les
fiadd
clc
mov
jg
cmp
scas
mov
add
mov
mov
cmps
out
adc
and
int
ret
std
(bad)
in
cmc
cmc
cmp
jns
xchg
cmp
scas
xchg
aad
cmp
ins
(bad)
pop
pop
ror
mov
lods
xor
jnp
outs
das
out
cmp
in
lahf
fbstp
ror
mov
mov
dec
fild
sti
data16
fistp
xchg
ins
xchg
cmp
xchg
jbe
movs
fcmovne
das
jmp
in
iret
jmp
lea
js
xlat
add
fnstenv
jp
mov
idiv
rcl
cmp
add
loope
pop
sbb
push
dec
or
mov
dec
and
sti
mov
in
(bad)
fldcw
cmp
mov
dec
mov
dec
ss
xchg
call
adc
push
jmp
xchg
cmp
dec
imul
or
inc
repz
mov
xor
dec
js
jno
or
lock
pusha
fdiv
ret
pop
movs
aaa
pop
je
pop
jae
loope
jmp
imul
pop
lahf
jp
test
jg
mov
xlat
dec
jg
jnp
stc
int
test
pop
adc
or
xchg
ret
inc
adc
push
xchg
aam
lahf
hlt
jnp
fs
lds
jmp
(bad)
fdiv
lds
pop
loope
std
xchg
dec
mov
jg
pop
push
pop
(bad)
std
jmp
jge
(bad)
push
jmp
mov
push
adc
push
ffreep
cmp
out
jge
push
lahf
pop
mov
clc
(bad)
aas
(bad)
inc
call
(bad)
sti
aad
fnstenv
shl
daa
jns
mov
jns
fcomp
cmp
fnstcw
pusha
(bad)
dec
jmp
repz
cdq
popf
pop
fiadd
jle
push
sub
push
xchg
jno
pop
cld
and
jo
dec
aas
jge
mov
jbe
std
jecxz
jle
mov
(bad)
clc
scas
std
jns
mov
loop
jns
ja
jp
xor
aaa
loop
and
xchg
sti
ret
sub
fwait
jno
iret
cmp
cmc
test
mov
addr16
out
cmc
jecxz
hlt
rcl
mov
sbb
adc
fsub
and
daa
sahf
jnp
xlat
retf
cmp
(bad)
cli
loop
push
jae
fstp
test
push
push
mul
pop
or
in
adc
fwait
imul
movs
scas
nop
push
mov
mov
mov
gs
ficomp
inc
push
test
and
popa
jne
cli
add
iret
sub
in
xchg
jge
cmc
cmp
imul
or
stos
mov
push
xor
cmp
popf
mov
or
outs
test
pop
push
add
je
dec
aas
icebp
icebp
(bad)
jg
outs
inc
sbb
mov
cmc
daa
mov
ins
sti
or
popf
cmp
cwde
mov
mov
mov
fs
dec
std
test
(bad)
fcomp
outs
push
int3
popa
aas
(bad)
mov
movs
in
in
popf
dec
mov
push
cwde
retf
fwait
push
popa
adc
mov
stc
in
je
cmp
cmp
out
lahf
jmp
daa
mov
inc
and
sub
fidiv
gs
cmps
stos
sub
mov
jg
stos
mov
cli
fnstenv
mov
mov
cmp
les
lock
xchg
push
dec
mov
lods
nop
rol
xor
xchg
fisubr
lods
inc
js
fist
mov
and
add
and
sub
mov
movs
stos
scas
inc
daa
ds
imul
das
cli
or
xlat
mov
or
inc
or
stc
cmp
popf
dec
ret
pop
adc
add
jg
mov
aad
inc
std
fsub
ficom
aaa
das
mov
jae
pop
xchg
out
(bad)
and
and
in
adc
cmp
jl
sbb
loop
ficomp
inc
xchg
lahf
cs
pop
sti
loop
jle
shl
pop
mov
clc
mov
mov
lods
cmps
dec
pop
sub
ja
mov
sti
dec
pop
sbb
hlt
daa
mov
sub
cmp
sbb
dec
dec
cdq
(bad)
movs
pushf
jae
js
fsubrp
mov
out
push
call
xchg
xor
cmp
scas
cmp
(bad)
aam
movs
mov
dec
xor
das
jmp
cmps
xor
mov
mov
iret
aas
sti
cli
xlat
aas
icebp
fstp
xchg
icebp
inc
call
add
add
movs
xor
in
fst
pop
fnsave
push
sti
lds
dec
mov
(bad)
adc
sbb
enter
out
xchg
mov
mov
into
fsqrt
jl
clc
out
jne
scas
out
movs
mov
dec
(bad)
lods
scas
push
dec
(bad)
rcr
movs
ins
out
mov
in
mov
ds
xchg
cmps
push
stos
dec
popf
out
daa
ds
(bad)
push
inc
and
popf
push
test
arpl
jbe
cmp
cmps
test
lods
movs
test
inc
add
adc
retf
or
cs
fs
leave
cmp
mov
mov
arpl
or
mov
inc
adc
retf
cld
lds
mov
lds
mov
mov
pop
div
mov
mov
pushf
or
push
stc
sahf
out
cdq
pop
jne
(bad)
xor
test
jg
jge
cld
cdq
and
imul
movs
out
sbb
sbb
fldcw
lock
lock
vcvttss2si
stos
je
sbb
std
mov
sahf
lahf
into
jmp
pushf
lahf
(bad)
xor
js
and
sar
ins
cs
cmp
outs
xchg
popf
ror
leave
mov
dec
push
xor
jnp
dec
jno
ins
add
rcr
fidivr
sti
hlt
add
sbb
ins
pop
jg
inc
es
mov
ffree
aad
pop
in
enter
daa
fwait
xchg
sub
mov
loop
jns
stos
push
pop
ins
dec
adc
je
push
mov
imul
mov
scas
jbe
mov
popa
fcomip
mov
in
arpl
mov
repz
mov
ja
pop
(bad)
aad
call
jmp
ds
dec
or
add
and
cmp
rol
fbstp
xlat
push
cmp
popa
jge
lods
ret
pop
clc
xchg
fnstsw
dec
push
popa
pop
push
push
sub
mov
rcl
dec
(bad)
or
ja
adc
push
adc
aaa
jmp
dec
push
sbb
xchg
inc
bound
adc
pop
adc
or
pop
mov
lds
jns
xchg
in
movs
inc
xbegin
jmp
mov
dec
retf
mov
ds
test
cmp
push
sbb
out
daa
rol
icebp
fsub
jp
pop
pop
les
fucom
lahf
sbb
jae
out
cmp
ret
sahf
out
dec
test
dec
popf
stos
or
jnp
pusha
cwde
mov
sbb
in
lds
add
cdq
push
mov
pop
std
jnp
fwait
cwde
pop
or
ss
or
movs
loopne
pop
sub
int
popa
out
cmps
jl
bound
and
push
dec
cmovb
ds
jmp
mov
mov
pop
mov
(bad)
out
and
call
dec
call
call
iret
mov
lds
sti
pop
cmp
call
pop
int
jg
inc
pop
mov
sub
xor
jbe
or
test
mov
jecxz
jmp
xchg
js
(bad)
dec
pop
xchg
add
sub
fldcw
push
ror
jl
popa
xchg
pop
cli
xor
push
test
mov
addr16
popa
xor
push
jnp
std
repnz
inc
fidivr
jae
fwait
jne
inc
sbb
pop
jmp
outs
adc
xchg
imul
lds
pop
mov
lea
jnp
addr16
addr16
movs
jns
sub
pop
ja
adc
jmp
xchg
lahf
or
iret
retf
daa
pop
clc
stos
or
mov
popa
pop
cmp
mov
push
fistp
lods
sbb
movs
inc
adc
aaa
mov
lods
cdq
cmp
sbb
fst
mov
in
xor
sub
imul
iret
sub
je
stos
lock
push
into
mov
std
pushf
xor
pop
sub
outs
aad
rcl
mov
inc
ret
test
push
outs
mov
cld
inc
jp
ins
bound
xor
int3
push
int3
xchg
cmc
rol
retf
sub
cdq
push
xchg
cmps
ins
int
pop
dec
sub
outs
jp
push
pop
jg
in
dec
imul
sahf
stc
hlt
pop
pop
jge
xor
shr
mov
jb
fcmovnu
jle
into
stos
lahf
fwait
xor
push
sub
mov
ja
ret
mov
call
ins
cmp
loopne
jecxz
pusha
sub
cwde
jne
ret
mov
enter
(bad)
cmp
adc
xchg
shl
enter
or
push
js
ds
xor
pushf
adc
sbb
in
inc
mov
icebp
mul
ret
pop
dec
dec
lahf
daa
inc
sbb
shl
out
cmp
dec
call
into
repz
pop
fisubr
xor
dec
push
scas
(bad)
jmp
fcomip
or
dec
add
pushf
jb
xchg
inc
ret
ffreep
dec
xchg
mov
std
loopne
das
push
sti
outs
movs
movs
adc
int
daa
mov
mov
in
ds
into
xchg
adc
mov
mov
jecxz
cmc
mov
xchg
push
loope
aas
std
xchg
jae
cmps
mov
dec
add
loop
push
mov
fst
lods
ret
mov
mov
add
nop
mov
mov
and
out
add
mov
jmp
rol
in
fistp
sub
in
add
movs
daa
or
pop
mov
jge
sti
fdivp
xchg
pop
cdq
pmaxub
(bad)
mov
and
xchg
out
mov
out
push
dec
fidivr
cmp
ins
xchg
xchg
stc
push
xor
add
pop
push
jmp
fwait
into
jns
ror
mov
push
jnp
jne
in
dec
fbld
(bad)
xchg
pushf
ins
fnsave
cmp
jae
out
and
mov
lock
popf
cmp
into
sbb
pop
mov
and
mov
int3
push
push
loope
cmps
cmp
fistp
jne
fnsave
fcom
std
mov
call
pop
sub
mov
mov
adc
add
aad
jmp
or
imul
nop
rcl
in
shl
and
rcl
or
mov
ret
pop
mov
mov
arpl
cs
cmp
fidiv
aas
div
(bad)
sub
clc
xor
aam
loop
sub
mov
xchg
lahf
push
mov
dec
fldenv
xchg
ret
jmp
fxch
xchg
lahf
fwait
xchg
mov
call
push
xchg
jl
js
movs
idiv
pop
mov
imul
cs
mov
int
sbb
stos
sub
fisub
mov
mov
out
ja
adc
stos
mov
xchg
pop
ja
pop
(bad)
and
jno
jo
(bad)
add
sbb
dec
add
inc
(bad)
sahf
pusha
inc
cmp
cmc
push
std
sub
xchg
fild
int
or
pop
loop
(bad)
push
xor
xlat
(bad)
in
ret
leave
ins
fdivr
scas
(bad)
mov
movs
jns
gs
imul
(bad)
push
stos
dec
fisttp
lds
push
inc
in
jmp
mov
jno
or
les
mov
nop
push
ror
movs
mov
xchg
gs
ret
mov
xlat
enter
push
push
xchg
mov
fadd
jge
xlat
aad
push
out
je
stc
mov
xabort
test
xor
inc
mov
in
imul
sahf
out
adc
jb
aaa
std
int3
and
xor
fnsave
int3
jmp
or
pop
and
imul
int
ret
pop
fldcw
dec
sbb
mov
push
adc
jno
in
pop
dec
mov
cmps
outs
mov
lds
lods
xchg
push
std
in
xlat
pop
jl
sbb
dec
sbb
fidivr
lds
rol
jmp
aaa
sbb
add
popf
scas
xchg
(bad)
ds
popa
dec
xchg
jecxz
fnstenv
jmp
mov
dec
sbb
popf
or
lock
scas
cmp
sub
mov
cmp
dec
xchg
cmp
dec
arpl
pop
adc
and
clc
push
shl
fadd
dec
jg
or
jns
je
jns
push
or
dec
inc
ret
ficom
popf
mov
jns
sbb
aas
jbe
mov
dec
call
sub
popf
xchg
push
jge
cmp
fdivr
rcl
fistp
jne
fsubr
mov
shl
in
aaa
mov
sbb
sub
icebp
fmul
jge
jo
gs
in
gs
jmp
sbb
stc
dec
adc
sub
push
jne
mov
cmc
jno
dec
xchg
(bad)
jno
cmp
(bad)
mov
cmp
mov
leave
and
inc
or
lods
test
les
(bad)
cmps
jnp
mov
dec
xchg
sub
in
cmc
mov
push
mov
scas
gs
or
sbb
arpl
inc
cmp
jns
retf
shl
je
into
fidivr
xchg
jbe
jg
and
fisttp
sub
lods
inc
fwait
mov
mov
push
(bad)
stc
cld
dec
cmp
fild
and
mov
hlt
fcomp
jns
fistp
repz
mov
mov
mov
mov
dec
push
retf
cwde
iret
pop
jge
loope
mov
sbb
fcomp
shr
xchg
mov
neg
jno
xchg
(bad)
sti
xchg
inc
lahf
scas
(bad)
cmp
fidivr
dec
xlat
data16
jne
mov
lods
pop
mov
jmp
dec
dec
mov
scas
sahf
hlt
xchg
xchg
scas
and
adc
push
add
inc
fwait
pop
mov
add
dec
repz
mov
pop
test
loope
cmps
mov
sub
shr
pop
fbstp
cmc
xchg
pop
into
and
in
nop
xor
stc
aas
sbb
das
mov
dec
mov
(bad)
(bad)
push
lds
mov
clc
in
sbb
xchg
test
movs
mov
jge
sbb
push
pop
cmp
jmp
mov
repz
jno
pop
inc
loop
jmp
ds
mov
call
dec
shl
inc
or
ins
loope
dec
outs
scas
cmp
push
loope
cmp
loopne
mov
dec
dec
and
frstor
aad
test
xor
pusha
inc
imul
(bad)
addr16
cmp
test
bsr
mov
inc
pop
xchg
(bad)
jb
push
adc
jae
push
aam
cmp
mov
cmp
jns
pop
in
outs
jnp
in
mov
jl
fwait
adc
in
lea
aad
loopne
out
stos
lds
arpl
pop
jns
(bad)
(bad)
mov
push
fidiv
sahf
mov
jb
(bad)
jmp
sbb
push
jnp
mov
dec
fist
fsub
fs
jge
sbb
jmp
jae
lods
adc
or
xor
mov
shr
outs
sbb
push
popa
sti
mov
in
fdivr
push
pusha
leave
dec
adc
cmp
sbb
stc
popa
iret
lea
jp
int
jg
fistp
retf
add
stos
add
mov
adc
shl
imul
addr16
mov
cmp
cmp
fdiv
in
push
mov
(bad)
and
retf
aas
div
and
jg
in
dec
iret
jns
pushf
push
ja
fisubr
xchg
jbe
xchg
in
int
lds
mov
lods
mov
retf
xchg
cmp
mov
fmul
sub
test
movs
icebp
mov
outs
mov
jge
cmp
dec
in
data16
cmp
pusha
xchg
in
mov
jnp
mov
lds
popa
out
cmp
fisttp
jg
int3
test
adc
jmp
add
xchg
sub
lock
mov
test
stos
dec
mov
push
mov
std
dec
ja
and
icebp
xchg
in
and
daa
lock
add
xchg
imul
jmp
xchg
fmulp
sub
xchg
pop
stos
mov
movs
cmps
call
pop
push
pop
je
push
fadd
mov
pop
sbb
fs
xchg
outs
mov
gs
stos
cmp
mov
mov
mov
push
jmp
or
pop
cmp
jne
jge
cmps
imul
lods
jns
shl
mov
clc
clc
sbb
iret
mov
test
ret
and
mov
fadd
dec
std
dec
fcom
push
ret
(bad)
test
outs
std
jp
adc
sub
jo
cdq
ins
push
push
pop
push
sub
fidivr
fnstcw
lods
scas
jle
ffree
pushf
jb
mov
add
sub
stc
mov
sbb
in
jg
in
sub
lock
pushf
mov
daa
ror
es
pop
call
mov
pop
jno
(bad)
(bad)
jnp
(bad)
fisubr
mov
adc
mov
pop
sbb
(bad)
ds
scas
fwait
push
jle
jae
das
ins
dec
xlat
(bad)
jge
mov
and
mov
repnz
adc
sub
shl
fnstcw
ja
retf
call
sub
not
popf
movs
and
inc
cli
pop
add
(bad)
cmp
xor
(bad)
pusha
nop
ficomp
push
mov
gs
adc
sbb
imul
ja
aas
push
push
xor
xor
ror
pop
jl
stos
jb
xchg
(bad)
out
rcl
in
xchg
das
popf
lock
mov
sub
fnstcw
shl
and
jge
fs
imul
add
das
(bad)
cli
mov
loopne
das
stc
cwde
sub
push
sti
movs
cmp
cmp
out
xor
outs
loope
ror
fldz
movs
into
cmc
ret
clc
cmc
pop
fstp
neg
clc
int
fstp
es
mov
xchg
pop
popa
xor
xchg
dec
rol
xchg
adc
cmps
mov
js
ret
add
xor
push
sub
repz
xor
bound
loope
lods
stos
dec
jl
jmp
mov
jl
pop
cmps
cmp
or
fisub
or
lahf
ins
mov
retf
cs
repz
xchg
fdivr
cmc
mov
jecxz
popf
pop
jmp
sub
mov
stos
or
xchg
mov
loope
jnp
push
cmp
inc
aad
ss
mov
popa
adc
xchg
jno
adc
enter
cmp
mov
or
jmp
cdq
push
push
push
mov
lods
pop
xchg
push
inc
xchg
std
push
gs
jge
and
sub
push
ss
and
ret
xchg
imul
ins
mov
dec
sbb
xor
jge
inc
gs
add
dec
cmp
hlt
ds
lods
cli
mov
in
fdiv
imul
popf
scas
pop
test
add
mov
xchg
popf
mov
fcmovnb
push
sbb
or
mov
sbb
out
cmp
shr
mov
cwde
aas
loopne
inc
adc
data16
pop
pop
xchg
mov
ja
hlt
jmp
jae
je
aam
in
(bad)
daa
jp
cmp
dec
lahf
mov
stos
mov
xor
or
push
jae
dec
pusha
retf
aam
scas
mov
push
dec
xor
rol
dec
dec
jns
sbb
push
inc
add
stos
es
dec
inc
or
xchg
jae
mov
icebp
into
popf
out
out
leave
sub
xchg
mov
ds
or
ss
cmp
jbe
cmp
dec
push
jae
imul
mov
repz
mov
out
popf
cmp
cmp
xlat
aas
and
xchg
scas
jno
xchg
dec
fs
xlat
jmp
adc
mov
inc
pop
ret
dec
fsub
cmc
stc
outs
popf
outs
mov
jne
and
hlt
adc
shl
inc
xor
sbb
aas
jno
out
ret
scas
ret
xlat
fstp
sar
add
stos
fsub
sub
or
dec
jo
inc
in
mov
outs
add
cmc
xchg
stos
add
push
mov
adc
test
cmp
neg
add
aaa
or
clc
pop
sti
jg
jnp
repnz
inc
xor
jmp
pop
sbb
scas
mov
jno
(bad)
mov
jg
out
cdq
mov
out
out
add
xchg
cmps
cmp
scas
mov
cmp
in
add
cmp
push
call
jno
(bad)
mov
mov
sbb
je
out
iret
pop
aam
push
enter
adc
test
cmp
jae
mov
cmp
pop
mov
repz
sub
loopne
push
sub
adc
es
dec
jnp
test
adc
fimul
cmp
aas
imul
stc
fisub
adc
push
push
fidiv
mov
jmp
loope
inc
mov
(bad)
cli
fwait
(bad)
jge
pusha
test
(bad)
mov
fisubr
shl
and
(bad)
xor
(bad)
iret
dec
daa
in
inc
lds
cmc
jno
in
cmp
cmps
xor
mov
inc
gs
pop
mov
xchg
push
(bad)
jge
scas
xchg
inc
pushf
out
fist
scas
ss
jo
pushw
nop
or
enter
adc
std
mov
add
sub
je
or
in
dec
pop
dec
das
inc
xchg
imul
movs
dec
push
dec
push
dec
mov
cld
and
pushf
call
cdq
fidivr
xor
mov
outs
or
and
aas
or
in
push
es
fdivr
in
sbb
xor
pop
jne
movs
aaa
pop
call
mov
or
sub
fcmovnb
clc
inc
jne
fild
or
lods
mov
sti
cmp
cmp
xchg
push
retf
push
mov
xchg
mov
sbb
cmp
cmp
pusha
call
in
in
out
mov
jmp
ins
lahf
scas
push
std
mov
jmp
call
mov
jmp
xor
icebp
addr16
test
mov
popa
sub
mov
(bad)
cmp
lods
iret
add
mov
repnz
cmp
pop
pop
adc
fidivr
or
or
ficom
pop
xchg
call
imul
cmc
sti
pop
fucom
ja
iret
sbb
stc
fistp
mov
(bad)
jnp
pop
(bad)
fsubr
push
sar
dec
cmp
adc
test
mov
cmp
popa
aas
mov
imul
fwait
scas
xchg
push
adc
push
push
cmp
add
iret
ror
iret
inc
add
xor
imul
scas
sbb
add
push
rcr
inc
dec
call
test
(bad)
rcl
xor
push
sub
mov
jns
call
dec
sbb
or
clc
mov
add
push
popf
mov
test
push
clc
call
outs
pop
in
cmp
cli
mov
mov
push
mov
mov
rcl
jecxz
aam
cmp
lods
jns
(bad)
rol
jecxz
jb
fst
xchg
in
pop
ja
mov
arpl
bound
mov
pusha
add
es
lahf
in
sub
push
inc
(bad)
pushf
mov
test
iret
ja
je
out
ror
adc
in
push
dec
cmps
addr16
push
pushf
jl
mov
mov
xlat
dec
cmp
pop
imul
test
ds
mov
dec
inc
outs
stos
movs
xor
arpl
aaa
fisttp
out
shl
shl
out
movs
add
lds
inc
dec
dec
sub
fsub
dec
xchg
in
popa
sbb
arpl
cmp
dec
and
jmp
mov
dec
mov
add
push
std
neg
fldlg2
jns
in
sub
daa
pop
cmp
aad
nop
mov
cmp
fldcw
(bad)
pop
les
lahf
out
addr16
and
ss
jb
and
pop
push
jbe
pop
mov
sbb
movs
mov
pop
xchg
shl
stos
in
cmp
xchg
mov
xchg
or
add
idiv
repz
jnp
dec
ja
fdiv
xlat
fcmovne
data16
push
jb
mov
rcr
push
jbe
cmc
cwde
sub
push
test
mov
jnp
or
fst
push
xchg
cdq
pop
or
rol
inc
pop
test
addr16
idiv
movs
cmc
les
sub
jp
(bad)
cmp
arpl
into
xor
jne
mov
je
repz
int3
pop
fild
idiv
mov
or
xor
pop
cmc
xlat
sbb
mov
cmps
and
mov
dec
stos
pop
shr
push
cli
mov
cdq
test
sti
scas
(bad)
repnz
ja
mov
cmp
sub
shr
cdq
jmp
mov
cmp
cmp
pop
dec
das
test
mov
(bad)
cmp
push
sbb
inc
pop
xchg
cmp
enter
push
inc
in
ss
ins
sbb
xor
mov
shl
sub
js
out
push
xor
lahf
in
jmp
sbb
outs
add
jb
lds
cmp
je
loopne
xchg
sbb
stos
xchg
cmp
imul
mov
movs
out
movs
push
mov
jnp
lods
pop
lahf
and
sqrtps
mov
imul
jno
out
jae
hlt
stos
fs
ins
lahf
scas
or
dec
in
es
in
push
inc
xchg
imul
or
pop
addr16
jbe
shl
or
mov
mov
pop
push
daa
mov
rcr
sahf
dec
cmp
pop
ins
in
inc
fbstp
cs
cmp
jo
out
jmp
loop
(bad)
jnp
xor
shl
aam
xchg
mov
sub
fld
(bad)
sub
out
nop
icebp
fldenv
jno
mov
add
aad
sbb
mov
into
ds
outs
sbb
mov
iret
fidiv
(bad)
and
cmpxchg
enter
pushf
pusha
xchg
xor
out
pop
cmp
out
sahf
int
inc
lods
call
sbb
sbb
jnp
in
hlt
inc
xor
scas
cs
jle
inc
add
xor
popf
xchg
jp
pop
jp
popa
or
sbb
movs
fild
lea
leave
xchg
popf
(bad)
data16
data16
and
inc
jnp
je
jns
cmp
repnz
popa
pop
mov
mov
add
lods
aas
cmp
repnz
xor
test
aad
shr
dec
aad
mov
retf
ficomp
(bad)
mov
mov
(bad)
hlt
adc
dec
jecxz
test
cmps
call
mov
mov
cli
adc
je
add
nop
icebp
fmul
xor
mov
out
cmp
cld
aam
outs
lahf
mov
push
jge
dec
shl
mov
test
mov
xchg
cmps
(bad)
jmp
jecxz
cdq
sbb
mov
or
mov
ror
in
(bad)
sub
mov
sbb
mov
sbb
gs
rcr
fwait
cmp
dec
pop
cdq
cmp
mov
pop
sub
dec
test
pop
mov
pop
add
call
aam
js
(bad)
bsf
mov
lods
enter
das
sub
push
mov
jp
sbb
ss
ret
mov
mov
lds
xchg
pop
ret
sbb
jne
cli
mov
and
dec
bound
dec
cmp
jae
dec
adc
retf
mov
inc
pusha
mov
(bad)
add
lock
or
out
push
add
in
push
into
retf
mov
mov
js
inc
mov
xchg
outs
add
xchg
jge
push
add
ss
sub
sbb
and
imul
sar
add
ins
add
jle
mov
fwait
test
pop
lahf
xor
mov
xchg
inc
xchg
sub
call
das
jmp
adc
sbb
dec
dec
and
xor
into
add
idiv
jmp
xchg
mov
dec
mov
cmp
mov
int
push
dec
sub
jbe
dec
mov
mov
mov
iret
xlat
adc
xor
lods
xchg
pusha
inc
adc
adc
jp
fsubr
stc
in
int3
test
or
sbb
sub
jmp
dec
iret
ins
cmps
mov
adc
adc
in
pop
sahf
shl
cmp
cmp
jg
xor
jno
push
fsub
push
sysexit
ins
jnp
ds
iret
inc
xchg
das
(bad)
sahf
jmp
mov
jg
pop
add
jecxz
mov
xchg
iret
xor
push
fiadd
cmp
fld
mov
xchg
mov
leave
dec
dec
fidiv
mov
mov
movs
fiadd
pop
mov
push
fisttp
mov
inc
mov
mov
xlat
jno
mov
mov
jae
arpl
in
xor
fwait
xor
pop
popf
sub
(bad)
push
(bad)
jmp
fdivrp
pop
pop
add
adc
pop
lods
pop
sub
popa
mov
test
hlt
pop
aas
popa
shl
jbe
jecxz
jecxz
push
or
stos
adc
dec
shl
dec
mov
mov
xor
fwait
fs
test
inc
or
lahf
jg
push
sti
out
fnsave
in
ret
bnd
mov
cmps
aas
lods
adc
pop
sub
retf
ret
mov
ja
addr16
push
inc
fcom
inc
add
mov
lahf
imul
out
jno
cmc
lods
inc
adc
mov
daa
adc
outs
sbb
aas
test
lahf
adc
mov
fwait
adc
fimul
pop
sub
into
imul
mov
xchg
icebp
pop
push
and
or
lods
dec
int3
sub
sub
cmps
sahf
mov
in
jnp
add
into
xchg
iret
in
fsub
ins
mov
jle
sbb
add
sbb
jmp
les
dec
adc
test
js
mov
push
cli
stc
loop
das
out
push
pop
mov
lods
push
push
or
push
cld
arpl
push
mov
mov
adc
aam
pop
ja
mov
sub
outs
sbb
sub
(bad)
std
movs
cmps
push
in
mov
cmps
xlat
es
test
call
push
pop
jns
into
mov
jae
and
add
mov
add
inc
cdq
cmps
jecxz
push
mov
iret
push
push
iret
(bad)
pop
cdq
pushf
and
cdq
cli
loope
int3
les
cmp
in
xchg
mov
(bad)
inc
adc
mov
xor
pop
mov
mov
stos
inc
(bad)
fs
dec
xchg
(bad)
push
dec
ss
sbb
cdq
cmp
sar
cmp
xchg
call
jmp
js
cld
iret
in
jnp
mov
stc
sbb
mov
(bad)
out
and
arpl
cmp
jnp
jns
into
sar
add
fistp
js
inc
or
cdq
(bad)
retf
or
bound
cwde
mov
dec
dec
mov
sahf
xor
arpl
and
fnsave
cmps
fnstenv
mov
inc
stos
das
or
mov
sbb
inc
push
sub
out
je
and
push
mov
adc
sti
addr16
and
mov
aad
in
mov
mov
xchg
scas
scas
int3
xor
(bad)
pop
dec
fild
sbb
add
inc
int3
sbb
and
mov
and
adc
call
pop
(bad)
or
icebp
sbb
mov
mov
scas
cdq
or
dec
scas
or
sti
cmps
mov
xchg
or
std
mov
mov
fidivr
push
rol
arpl
ins
dec
sub
icebp
jl
imul
(bad)
mov
ins
pop
lahf
int
jecxz
in
inc
sbb
and
test
(bad)
and
jge
loope
push
shl
clc
inc
outs
push
sub
imul
gs
(bad)
adc
and
scas
xor
sbb
jge
jne
int3
outs
mov
xor
inc
dec
cld
adc
and
enter
xor
jecxz
fdivrp
sub
jmp
iret
fsubr
jb
fadd
or
inc
mov
mov
mov
push
jbe
loope
cmp
out
push
mov
push
fadd
mov
ins
push
ret
inc
push
add
mov
inc
(bad)
adc
xor
nop
mov
push
mov
leave
out
dec
ins
je
pop
cdq
shl
or
sbb
cmps
test
xor
jns
arpl
add
test
push
in
cmp
jge
addr16
mov
dec
mov
jle
popf
pop
dec
mov
imul
mov
fisttp
xor
in
adc
sti
xchg
pop
or
cmps
mov
(bad)
stos
sub
adc
bound
add
cmp
jnp
scas
jl
sub
movs
fmul
aad
jecxz
jo
call
dec
adc
or
inc
xchg
ins
lea
movs
sbb
and
xchg
movs
sbb
and
out
sahf
loopne
cwde
jmp
ja
adc
ret
mov
sub
xor
push
lahf
stos
push
mov
sbb
adc
mov
pop
cmps
xchg
cwde
or
xor
fucomip
inc
mov
test
jl
push
lea
arpl
sub
xor
ret
ss
out
mov
cld
int3
(bad)
add
xor
mov
mov
aas
jb
ins
add
retf
cdq
mov
rol
adc
retf
rcr
gs
inc
pop
fld
lock
les
fild
sbb
cmp
in
cmp
pop
push
in
call
cdq
lahf
(bad)
or
cmp
movs
loopne
cmp
jns
mov
xchg
lods
mov
cmp
sbb
icebp
call
mov
fisubr
mov
scas
iret
pop
cmps
(bad)
jmp
ds
adc
xchg
(bad)
int3
xor
xchg
push
push
adc
mov
mov
test
fs
sbb
and
ss
mov
inc
jp
(bad)
xor
sub
fiadd
sub
push
jae
add
mov
outs
fadd
shl
pushf
sbb
sbb
mov
cmps
lea
xchg
mov
cld
movs
sbb
and
xor
mov
push
push
bound
pusha
mov
dec
and
sub
push
pop
xor
fbstp
and
cmp
hlt
imul
cmc
inc
loop
xor
sbb
in
outs
or
or
mov
pop
icebp
js
cmps
in
pop
call
hlt
neg
loope
xchg
inc
(bad)
addr16
test
rcl
fwait
aam
or
or
xchg
fldenv
pop
jmp
loop
cmp
push
test
inc
int3
or
rcr
fbld
aam
dec
or
ins
(bad)
lods
mov
cmc
out
outs
cdq
ret
(bad)
jp
int3
scas
xor
shl
call
jl
mov
and
sub
rol
mov
lods
cdq
inc
into
or
in
mov
icebp
jmp
cmp
xchg
mov
ret
dec
mov
arpl
lods
scas
dec
xor
cmp
xor
nop
pop
lods
push
out
mov
inc
or
cmp
inc
iret
into
mul
inc
sbb
pusha
leave
cmp
(bad)
int
or
mov
out
inc
adc
xchg
out
mov
inc
adc
(bad)
or
inc
fcompp
mov
nop
pop
and
mov
imul
jge
dec
dec
shl
out
mov
or
ss
ins
jmp
mov
mov
push
sbb
mov
retf
pop
mov
jl
out
(bad)
push
rol
es
dec
mov
test
mov
lahf
and
ficom
inc
sar
div
pop
inc
fisttp
jno
xchg
push
imul
sti
pop
jp
pop
outs
inc
jl
push
dec
fisttp
sbb
scas
cmc
jb
mov
inc
or
jbe
adc
add
into
mov
cmp
je
in
data16
add
add
cmp
stc
jno
fld
rcl
jns
lods
jge
cmc
ret
mov
sub
push
das
mov
hlt
lahf
lahf
out
popf
cmps
jg
adc
pop
(bad)
xchg
ror
repz
lods
push
mov
push
mov
dec
push
(bad)
pusha
lods
enter
ret
xor
in
mov
lahf
mov
into
inc
sti
(bad)
push
jle
xchg
inc
jo
in
fisttp
popf
ficomp
loopne
cmp
(bad)
fidiv
mov
jl
mov
std
sub
jns
ret
push
scas
pop
inc
fscale
(bad)
movs
sub
pop
mov
cmps
out
pop
cmp
cmovg
cmp
scas
pushf
repz
out
cmp
push
xor
mov
xor
or
mov
out
or
rol
lods
mov
push
dec
cwde
xchg
xor
(bad)
pop
test
add
(bad)
js
pushf
into
(bad)
fidivr
outs
aaa
cli
pop
dec
int
clc
div
int
das
pushf
mov
loope
mov
scas
adc
out
inc
mov
jmp
shl
loop
mov
inc
pop
push
or
pop
(bad)
cmp
xchg
movzx
sti
fisttp
rol
dec
shufps
loopne
jo
out
fwait
push
cdq
pop
iret
cmps
sbb
rcl
xchg
add
daa
pushf
cmp
or
outs
push
mov
je
lea
xor
ins
add
ins
jmp
and
stos
aam
dec
imul
repz
psubw
repnz
cmp
aaa
popf
or
push
outs
loopne
repz
ins
aaa
xchg
mov
retf
sbb
jl
cmp
int
xchg
sahf
ja
cmp
push
and
fsubr
(bad)
ins
sub
xchg
cmps
hlt
leave
push
fsub
rcr
scas
fcmovnu
cmps
int
dec
test
jbe
or
das
adc
out
pusha
mov
and
sahf
btc
je
add
xor
es
xor
pusha
sbb
lods
xchg
cmp
loope
loope
jle
mov
rol
movq
repnz
sub
mov
and
dec
call
je
jmp
dec
adc
jns
call
repnz
aad
shl
clc
(bad)
cmp
out
shr
rol
mov
cmp
stc
std
fwait
adc
sub
mov
ins
add
lock
popa
ins
dec
xchg
dec
cwde
push
sbb
in
sahf
fdivr
std
and
movs
jae
mov
ret
fistp
add
or
pop
in
jp
pop
xchg
aad
call
mov
sti
sar
(bad)
pop
jp
add
test
lock
je
cmps
iret
icebp
mov
mov
sub
pop
div
and
pop
je
pop
in
or
sbb
js
in
fdivp
int3
aaa
and
dec
inc
mov
(bad)
js
out
int3
fbld
daa
mov
adc
xchg
hlt
rcr
mov
lea
xchg
cmp
xchg
push
inc
gs
push
ficomp
adc
movs
js
mov
sub
mov
(bad)
sar
dec
in
in
retf
mov
jae
sbb
dec
and
lods
(bad)
sahf
mov
shl
jle
das
cmc
retf
jns
xchg
out
mov
fstp
pop
adc
xchg
push
repnz
pop
pop
cmp
sbb
nop
(bad)
pusha
jns
mov
enter
scas
dec
into
jns
popa
push
loope
mov
inc
mov
frstor
inc
psubusb
je
jbe
mov
bound
push
add
or
xchg
xlat
imul
int3
psllw
mov
aam
pop
pusha
push
jp
bound
(bad)
es
adc
enter
lahf
adc
addr16
add
add
add
in
imul
icebp
ss
iret
repz
add
cmps
fsubrp
mov
pop
(bad)
pushf
shr
xchg
or
sbb
or
and
mov
stc
sub
cwde
inc
ds
push
inc
mov
ds
mov
or
and
js
cdq
jo
ret
cld
xor
add
dec
jae
inc
daa
out
and
sub
cmp
lods
xlat
xchg
test
pop
dec
pop
mov
int
adc
inc
cdq
dec
gs
jns
mov
out
cmp
aam
push
jge
inc
xor
rcl
and
fwait
add
out
sub
js
pop
enter
sbb
xor
rcl
repnz
add
cli
or
mov
sbb
pop
inc
add
add
mov
mov
dec
jmp
mov
cmp
test
push
mov
cmps
mov
(bad)
and
lods
lea
fwait
sub
xor
xchg
test
cs
xchg
out
dec
mov
inc
dec
dec
cmc
ficomp
cwde
loopne
push
shl
mov
mov
daa
or
mov
jle
dec
push
xor
and
loopne
mov
lock
mov
(bad)
je
adc
mov
pop
test
and
sbb
push
stos
sbb
imul
mov
inc
cmp
in
and
push
ins
ss
dec
pusha
mov
(bad)
fldlg2
shr
sub
pushf
idiv
xor
gs
ins
and
cmps
jge
test
cwde
fsub
push
adc
push
test
dec
sbb
sub
jae
ja
jne
std
lods
data16
xchg
or
test
or
and
arpl
loop
fs
in
jp
rol
outs
push
ds
pop
ds
pushw
in
jo
dec
jle
mov
mov
les
cmp
aam
push
push
jge
gs
pop
outs
popa
push
jmp
cmp
mov
push
lahf
xchg
ins
xor
rcr
bnd
and
push
js
inc
call
mov
pop
cmp
jl
inc
add
cmps
jmp
fadd
cmp
xor
and
movs
leave
add
fwait
retf
mov
js
(bad)
aas
jmp
xor
adc
mov
adc
xchg
out
inc
ins
rcl
cmp
jl
lods
inc
pop
jne
cmp
call
retf
pusha
sbb
mov
lock
in
fsubp
clc
int
int3
sub
jecxz
push
dec
dec
(bad)
mov
int
in
jo
xchg
sbb
xlat
mov
jbe
mov
jmp
jae
mov
leave
mov
lods
cdq
cmc
pushf
jnp
push
imul
xchg
in
mov
jecxz
pop
daa
inc
ds
jbe
pushf
inc
mov
data16
imul
je
repz
xor
xchg
sub
pop
cdq
in
add
pop
das
jge
xor
shr
and
ret
enter
sbb
mov
ss
push
dec
cmp
mov
mov
ins
rcr
xchg
lock
les
or
adc
adc
mov
xchg
xor
fstp
retf
inc
xchg
jmp
lahf
or
lock
ror
mov
adc
xor
mov
inc
popa
push
loope
and
xchg
cdq
cmp
aad
and
add
js
jne
pop
jbe
das
imul
or
es
mov
rcr
push
mov
rcl
push
cmp
not
arpl
mov
xchg
sar
cmp
dec
push
test
add
icebp
xchg
(bad)
push
lods
out
mov
ja
and
ja
int
add
addr16
iret
mov
sub
push
adc
xor
fcmovb
sahf
(bad)
sbb
aaa
call
inc
(bad)
sub
mov
hlt
(bad)
cmp
popa
in
cmp
xor
mov
daa
test
(bad)
aam
clc
ins
pop
addr16
push
push
pusha
sti
enter
(bad)
xor
jnp
(bad)
push
(bad)
out
cdq
xor
jge
dec
cmp
enter
out
mov
jnp
shr
test
or
inc
jns
xor
mov
mov
js
and
jns
xor
dec
dec
pop
mov
(bad)
js
out
leave
daa
cmp
fcomp
call
test
(bad)
scas
int
mov
sar
int
loop
adc
cmps
stos
repnz
and
add
mov
rol
pop
scas
idiv
outs
cmp
inc
jbe
in
pop
push
(bad)
adc
jne
jecxz
xor
add
xor
not
mov
or
sahf
call
sub
cdq
cs
jl
cmc
jmp
into
or
shl
jns
fdivr
xchg
cdq
data16
gs
xor
pop
mul
loopne
add
loop
pop
jle
bound
jno
or
push
fdiv
or
inc
bound
mov
cmps
jge
mov
xor
cmp
imul
dec
je
enter
test
fisttp
or
inc
mov
imul
jae
nop
popa
mov
hlt
or
cmp
dec
or
enter
xchg
jmp
popf
mov
lock
fcomp
sbb
push
ds
pop
pop
(bad)
push
push
dec
mov
cmc
jmp
lahf
push
jle
xor
neg
and
add
ret
aas
aaa
xor
mov
pop
outs
stos
into
jbe
fldenv
sahf
ins
mov
in
lds
lahf
ret
fisttp
movzx
ja
inc
and
aas
mov
lods
jns
jne
mov
inc
scas
leave
ret
lahf
push
sahf
imul
fist
inc
add
sbb
xchg
mov
fstp
fsub
mov
repz
sbb
jge
loope
jg
ja
out
or
cmp
nop
lods
mov
or
sbb
pop
(bad)
out
sbb
or
cmp
or
fcmovne
dec
out
jae
imul
inc
xchg
jns
rcr
in
xor
clc
add
push
std
stc
push
pop
cmp
lods
ret
sub
inc
out
call
cmp
clc
jp
cwde
fcomp
outs
int3
loope
cmp
loope
or
lahf
xchg
stc
ret
outs
push
sahf
clc
sti
jae
xor
fwait
xchg
test
pop
pushf
pop
in
test
movs
out
daa
push
add
imul
inc
xchg
and
jg
and
je
ins
jns
fwait
or
mov
or
dec
mov
dec
pop
inc
mov
mov
sahf
imul
jnp
dec
(bad)
scas
jns
nop
div
btr
mov
(bad)
push
mov
cmc
and
adc
jg
sbb
lahf
cld
mov
inc
xchg
sti
push
into
and
cmp
cmp
mov
in
imul
rol
loopne
cmp
(bad)
stc
xor
push
jmp
in
dec
les
in
sbb
aas
in
repnz
pop
les
cmp
lea
daa
mov
cld
fs
lods
jge
mov
xor
stc
fisttp
adc
call
jnp
bnd
pop
mov
sbb
jmp
ds
(bad)
(bad)
jp
lahf
(bad)
sahf
mov
xchg
loope
push
ficom
cdq
movs
cmp
repz
or
jg
push
push
fisub
push
push
cmp
mov
pop
jbe
inc
idiv
in
cmp
inc
daa
mov
push
adc
(bad)
push
pop
call
mov
nop
push
sbb
add
pop
mov
movs
xor
outs
fwait
adc
rcl
pushf
or
cmp
mov
push
xor
xor
mov
ins
movs
push
int
lods
pop
dec
dec
mov
cmp
mov
dec
lea
xchg
add
popa
xchg
or
popa
pop
inc
(bad)
lods
mov
lea
nop
pop
leave
add
int
lock
push
ror
retf
dec
mov
xor
mov
int3
ror
in
loopne
pushf
popa
repz
ins
sahf
hlt
jecxz
mov
popa
sbb
cmp
cmp
and
push
mov
dec
mov
push
icebp
mov
fmul
arpl
xchg
fwait
jb
mov
in
jg
and
popf
inc
es
push
out
enter
test
dec
mov
or
xchg
mov
sub
(bad)
pop
data16
loop
outs
mov
outs
pop
cwde
mov
retf
push
dec
xor
ret
lds
call
addr16
inc
stos
shr
sbb
xor
pop
nop
add
jo
jmp
or
call
nop
sbb
mov
and
cmps
out
inc
pop
and
shl
fidiv
ins
(bad)
mov
ins
xchg
dec
cli
mov
or
in
sub
or
sub
aaa
inc
jne
data16
mov
dec
adc
(bad)
leave
cs
std
sub
dec
cs
(bad)
test
pop
push
les
ja
das
adc
add
or
dec
jg
add
xchg
add
inc
cmp
test
and
adc
cdq
popa
int3
jbe
nop
sbb
lock
daa
push
cs
cmps
add
data16
ins
ret
pop
ss
mov
mov
or
call
sub
leave
shl
mov
movs
mov
and
mov
sub
cdq
add
data16
test
leave
xor
test
cmp
fdiv
movs
into
inc
mov
pop
std
movs
mov
cmc
fist
cwde
call
adc
sbb
pop
aam
das
fsubr
aaa
fnsave
mov
sub
sbb
inc
aas
mov
je
pop
push
scas
gs
add
jno
push
or
cmp
rcr
add
mov
ds
fwait
pop
cmp
xor
mov
sub
xchg
jg
cmp
inc
sti
xor
mov
adc
jl
sbb
push
test
sbb
in
mov
sahf
or
mov
cmp
ds
pop
mov
xchg
mov
in
ret
(bad)
ds
imul
add
jmp
addr16
push
xchg
test
sbb
mov
cmc
ds
adc
sahf
ret
sbb
inc
arpl
dec
int3
jns
sbb
push
dec
inc
adc
mov
aad
jp
and
mov
cmp
push
(bad)
int3
add
cmp
bound
adc
mov
into
push
add
hlt
and
(bad)
fnsave
pop
stos
daa
mov
jb
(bad)
(bad)
out
out
jmp
adc
neg
sar
data16
add
mov
jmp
out
(bad)
push
cmp
push
or
mov
cmp
push
test
test
jp
mov
lods
std
outs
push
dec
aaa
dec
scas
jle
and
mov
sbb
adc
mov
pop
cmps
pop
xchg
movs
push
mov
int
mov
stos
mov
adc
scas
icebp
and
in
test
sub
shl
and
mov
in
lea
mov
ror
mov
adc
or
aaa
jle
inc
test
cwde
and
jns
(bad)
cmp
bound
imul
pop
sbb
ficom
mov
mov
jns
retf
rcl
dec
xor
and
xor
gs
mov
inc
gs
xor
sub
add
xchg
mov
gs
movs
pop
out
fwait
stc
sbb
mov
call
repz
push
mov
lods
in
and
data16
scas
scas
mov
sbb
sub
mov
mov
inc
push
xor
jne
les
xchg
push
(bad)
sbb
and
sub
mov
mov
stos
inc
movs
mov
test
cdq
iret
call
xchg
mov
mov
and
adc
push
jbe
dec
cmp
dec
ja
inc
imul
rcr
test
sub
sub
or
leave
test
sbb
not
(bad)
cdq
push
sbb
cmps
neg
dec
in
mov
ret
fdiv
iret
jl
sbb
iret
out
movaps
rol
xor
and
fs
xchg
ds
in
lock
cdq
int3
cmp
mov
jecxz
mov
shl
push
jae
cdq
xchg
and
addr16
aad
inc
mov
pop
cld
out
sbb
fidiv
mov
jnp
adc
or
int3
cmps
sbb
ret
push
cmps
cmp
push
xor
js
into
stos
pop
xor
mov
jns
mov
jmp
add
xchg
imul
xor
cmp
mov
mov
inc
xor
scas
stos
imul
cdq
(bad)
mul
push
daa
add
adc
stc
pop
push
data16
out
fs
(bad)
sub
stos
and
ds
adc
mov
push
xor
out
or
jg
lahf
pop
fldenv
fldenv
pop
mov
mov
movs
imul
mov
test
adc
stos
inc
(bad)
xor
xchg
cmp
retf
in
lahf
loopne
xchg
les
clc
dec
cmp
and
and
movs
test
add
push
outs
mov
mov
push
aad
cmp
add
xor
mov
stc
dec
cs
and
and
pop
(bad)
shl
mov
and
pop
mov
dec
add
bound
mov
pusha
imul
mov
mul
xchg
and
(bad)
aad
mov
cdq
xchg
shl
jae
jbe
popa
rol
outs
jnp
scas
xor
dec
inc
in
out
mov
push
(bad)
data16
outs
adc
(bad)
js
pushf
push
out
push
(bad)
nop
xor
push
imul
inc
sar
retf
xchg
addr16
int
fmul
jp
pop
jnp
rcr
jp
mov
sub
ret
mov
or
cdq
mov
xor
dec
nop
dec
mov
xchg
jbe
dec
add
xchg
mov
ret
mov
sbb
ret
or
jae
jecxz
adc
pop
(bad)
pop
add
cmp
or
jecxz
daa
inc
inc
jae
jnp
ret
push
jge
cmp
fbstp
ficom
dec
cmps
push
movs
cmp
add
rcl
mov
fldcw
ins
data16
ror
or
xchg
(bad)
(bad)
aam
shl
dec
fsub
dec
int3
movs
or
mov
not
in
test
sbb
ins
sub
ret
cs
retf
push
pop
cmp
rcr
fdiv
outs
aaa
adc
mov
cs
jl
dec
mov
fnsavew
mov
int3
and
dec
sahf
mov
in
in
xchg
iret
int3
mov
pop
adc
mov
adc
test
adc
iret
push
pusha
test
add
leave
sub
inc
mov
(bad)
pop
jnp
add
fild
nop
pop
add
retf
jne
pop
pop
sbb
or
fsub
(bad)
adc
cdq
sbb
mov
ret
add
or
fucomp
mov
(bad)
mov
lea
jno
lea
out
and
mov
mov
xchg
mov
mov
nop
pop
mov
mov
push
ins
enterw
je
je
push
sti
jae
out
mov
pop
(bad)
push
shr
adc
push
scas
cmp
loop
inc
xchg
sbb
sbb
stos
bound
push
or
cs
ficom
sbb
and
xlat
jl
mov
sub
into
or
dec
mov
lea
inc
add
inc
sub
adc
sbb
push
jmp
xchg
push
in
push
ds
(bad)
lahf
leave
nop
dec
xchg
repz
mov
or
and
std
lock
xchg
jecxz
stc
fmul
movs
out
cmp
mov
sti
mov
and
je
(bad)
lods
push
xchg
add
push
out
or
das
xchg
shl
repnz
mov
pop
mov
push
pop
mov
call
mov
dec
cmp
fs
mov
adc
les
push
xchg
or
fdivr
popf
mov
push
sahf
ret
lds
inc
mov
fisttp
and
jb
sub
add
push
shl
rep
call
gs
sub
nop
(bad)
jb
sub
movsx
ja
shl
dec
pop
xchg
idiv
aad
inc
(bad)
xor
inc
(bad)
sbb
adc
mov
cmp
lds
stos
lds
jmp
movs
add
nop
sahf
sbb
into
ins
pop
xchg
aas
jmp
adc
(bad)
aad
pop
or
xchg
pop
pop
test
inc
cmp
(bad)
jp
inc
outs
pop
xchg
jle
inc
mov
rcr
inc
inc
adc
das
sub
cmp
cmps
movs
xchg
in
cdq
push
or
push
fs
pop
and
data16
mov
mov
push
cmp
movs
cmp
jl
sbb
and
or
add
aam
add
inc
mov
stos
push
sub
xchg
ds
js
(bad)
ja
xchg
dec
push
dec
adc
fsubr
loopne
push
in
pop
ret
xchg
jl
cmp
cmc
loopne
pop
(bad)
aad
add
lods
mov
cmps
dec
jno
popa
add
cmp
test
xor
cmp
sub
inc
add
test
pop
and
or
and
adc
mov
sub
daa
leave
dec
inc
mov
rol
jge
movs
iret
mov
sub
xor
sbb
mov
jg
shl
(bad)
sub
xchg
adc
cmp
test
mov
xchg
jmp
inc
fs
les
pop
test
lods
js
fld
ja
cmp
scas
xor
add
sub
sbb
sbb
call
(bad)
jl
xchg
nop
sbb
ins
daa
nop
mov
std
xor
jae
dec
inc
add
leave
xor
ins
mov
xor
mov
shl
repz
xchg
mov
mov
es
inc
out
pop
xor
js
add
fisttp
push
sub
sti
dec
lds
daa
gs
mov
adc
dec
retf
push
inc
(bad)
jne
dec
aam
jge
or
or
ins
mov
mov
mov
dec
inc
retf
xor
xchg
aas
sti
jle
iret
inc
test
mov
data16
mov
jbe
mov
xchg
inc
arpl
loop
jge
pushf
xchg
test
test
es
inc
add
xchg
push
and
push
das
and
add
mov
outs
rcl
dec
imul
call
cmp
lahf
dec
pusha
into
dec
inc
sbb
and
push
fwait
xchg
jl
(bad)
mov
lods
push
daa
xchg
jecxz
and
mov
int
sub
mov
jns
test
int3
je
sub
jno
add
xchg
xchg
hlt
inc
sahf
das
sub
dec
push
dec
arpl
cmp
push
ret
jg
xchg
and
or
xchg
cmp
add
(bad)
lds
inc
jecxz
popf
test
in
das
mov
dec
jnp
push
out
push
jl
push
popf
(bad)
xchg
push
call
outs
xchg
xor
fimul
rol
fisttp
mov
push
xor
fcomip
sub
jno
aam
add
push
xlat
in
in
push
cmp
lods
test
cmp
in
xchg
cmps
bound
dec
add
inc
daa
movs
out
dec
loopne
pand
inc
sub
fcom
sbb
adc
add
cs
scas
and
push
mov
jo
cmc
xchg
nop
inc
rol
mov
and
into
gs
aaa
pop
iret
push
scas
dec
adc
mov
inc
dec
cmps
jmp
mov
ins
imul
sub
imul
and
sbb
fwait
imul
fstp
test
movs
fld
sbb
lock
xor
and
mov
mov
sbb
xchg
imul
and
sub
push
sub
push
mov
out
add
or
and
int3
mov
pop
cdq
rcl
xchg
inc
jnp
(bad)
or
(bad)
shr
pop
pop
cmp
mov
xor
hlt
cmp
push
xor
aad
das
gs
imul
in
jecxz
cmp
imul
mov
rcl
jnp
daa
movs
cmps
pop
call
lea
ds
xlat
int
pusha
loop
mov
sub
jo
shl
or
jns
pop
sahf
lea
lahf
cmp
mov
push
add
inc
cmc
add
jmp
test
cmp
cmp
jp
cmps
retf
pop
or
outs
inc
daa
push
and
dec
call
inc
loopne
out
pop
dec
jb
test
xor
mov
add
pop
lds
rcr
mov
movs
ins
scas
add
scas
inc
mov
pop
or
out
pcmpgtw
dec
mov
cmp
push
sub
mov
int
iret
mov
adc
cmp
cld
add
int
outs
test
jbe
stc
sbb
rcr
lods
mov
mov
shl
mov
(bad)
mov
xchg
loope
mov
cdq
push
shr
pop
in
mov
lds
mov
dec
and
pop
ins
jmp
push
mov
push
adc
jge
inc
sub
mov
neg
sbb
jne
dec
cs
jne
mov
mov
pop
xchg
(bad)
inc
loopne
int
mov
dec
mov
xchg
ins
ins
or
mov
in
add
dec
popa
aas
outs
push
or
scas
jns
movs
inc
mov
(bad)
jno
jo
cmp
jmp
js
mov
mov
pop
or
push
push
adc
mov
or
shr
retf
sub
out
icebp
ret
fcomp
push
in
xor
or
sbb
mov
fimul
dec
scas
and
shl
pop
mov
xchg
pusha
arpl
mov
mov
cmp
or
xor
(bad)
iret
loopne
adc
or
stos
xor
inc
push
xchg
xchg
pop
sub
cdq
in
sbb
sar
test
fst
js
sbb
and
pop
mov
add
xor
or
test
and
mov
add
mov
popa
push
clc
cmp
sbb
int3
and
adc
push
aad
ret
adc
sub
push
cs
cmp
add
push
push
sti
scas
cld
sbb
test
rcl
xchg
addr16
mov
pushf
cmp
or
xor
jl
shr
lock
cmp
imul
inc
in
or
imul
(bad)
shl
int
push
push
fwait
mov
hlt
icebp
xchg
push
and
and
inc
sub
cmps
stc
xchg
inc
dec
mov
(bad)
xor
fcom
adc
ror
mov
test
jmp
xor
cmp
xor
cmp
fistp
into
in
and
mov
cmps
(bad)
push
test
or
mov
pop
cmp
mov
sbb
inc
mov
jb
jmp
call
mov
dec
enter
rcl
out
jge
mov
nop
dec
cmps
push
adc
mov
jns
out
mov
loope
int3
fwait
adc
rcr
cmp
pop
fbstp
cdq
test
imul
mov
adc
es
js
pop
xor
call
push
xor
mov
jecxz
mov
fs
push
fldenv
and
jmp
rcr
daa
cmp
push
out
jle
test
lods
ret
lock
pop
cmp
popa
aaa
pop
shl
repz
mov
movs
fbstp
add
mov
ss
fsub
add
add
lahf
int
mov
inc
jmp
les
movsx
xor
sbb
pop
call
call
jno
lods
adc
out
retf
mov
out
add
pop
fisttp
pop
(bad)
dec
mov
xor
loop
shl
adc
js
mov
jbe
mov
inc
retf
(bad)
retf
data16
jne
xlat
pop
pop
sahf
in
ja
test
jle
ins
retf
lea
add
xor
mov
mov
iret
out
cmps
pop
mov
repnz
push
or
in
jmp
mov
out
cmp
add
sti
call
imul
in
das
shl
sub
adc
in
movs
pushf
mov
mov
xor
push
or
jb
mov
mov
or
mov
(bad)
push
les
outs
jmp
mov
test
es
sbb
in
fwait
hlt
hlt
or
dec
ja
push
scas
clc
sub
pop
jmp
pop
ds
hlt
or
aam
mov
pop
shl
add
adc
pop
pop
lods
daa
sub
leave
sub
test
dec
xchg
and
xchg
mov
scas
inc
scas
push
sub
aad
in
dec
and
fwait
mov
es
retf
in
enter
cmp
push
xor
lahf
or
jp
sbb
sub
push
outs
cmp
mov
mov
nop
mov
(bad)
clc
cmps
retf
(bad)
clc
(bad)
popa
mov
rcr
mov
sub
pop
xor
cli
cmps
cmc
inc
mov
xchg
push
fild
movs
mov
sbb
cs
loop
xchg
push
adc
fsubr
xchg
scas
mov
add
jmp
aam
push
in
or
push
(bad)
adc
dec
cdq
sub
jp
loope
sahf
aaa
xor
inc
enter
sub
dec
gs
pushf
adc
xor
fsubp
mov
push
sbb
dec
sub
lds
mov
jle
cmp
sbb
sub
pop
arpl
dec
lods
jle
cmp
push
pusha
das
pop
mov
and
fwait
aam
iret
sbb
in
ret
jo
or
adc
test
rol
ror
adc
addr16
dec
pop
int3
and
dec
aas
jb
fsubr
adc
or
add
cmp
ins
jmp
mov
fisub
cmc
pop
inc
or
push
mov
int
mov
cmp
ret
mov
dec
sbb
or
rcr
mov
mov
and
(bad)
clc
sti
pop
mov
sti
sbb
xchg
push
movs
ins
(bad)
(bad)
ret
jecxz
adc
sub
xchg
mov
pop
mov
mov
mov
and
cmp
cmps
shl
cmp
icebp
push
fs
push
jle
pop
mov
aad
cmps
scas
xchg
neg
in
ror
lahf
mov
in
xchg
ds
fnstenv
mov
out
retf
daa
inc
frstor
mov
mov
cmp
mov
fsub
int
or
aam
pop
fndisi(8087
xor
add
pop
test
fild
mov
(bad)
inc
pop
add
fwait
in
fnstenv
push
pop
repnz
mov
mov
mov
adc
mov
mov
ficom
xor
int3
pop
pop
adc
enter
fld
jae
inc
data16
jo
fld
xor
dec
jmp
mov
pop
repz
mov
pop
cmp
les
adc
je
adc
xor
les
sbb
dec
pop
or
push
inc
xlat
xchg
add
jge
cmp
or
dec
mov
daa
adc
(bad)
int
js
add
jbe
xor
int3
sti
or
aad
int
daa
or
mov
sbb
sbb
inc
inc
or
fild
dec
hlt
inc
or
push
mov
inc
and
pop
movs
cmp
xchg
hlt
adc
push
nop
sbb
cmp
pop
adc
aas
xchg
fs
leave
cmp
adc
fucom
nop
cmp
rcl
or
test
fwait
push
(bad)
ud2
xchg
and
in
mov
jg
mov
jno
add
mov
ins
pop
sub
in
or
or
rcl
pop
mov
iret
add
or
sbb
pop
pop
or
pop
jo
mov
es
sbb
test
imul
mov
das
mov
cmp
sub
popf
aad
mov
xor
xchg
push
push
dec
test
je
ds
dec
or
aas
xor
cld
mov
les
aam
cmp
push
enter
push
xor
cmps
mov
and
add
loop
(bad)
out
mov
jg
and
cs
ins
dec
sub
add
dec
adc
pop
dec
sub
retf
xchg
jne
lods
repz
xchg
movs
fnstcw
std
cdq
aaa
sbb
inc
lahf
mov
(bad)
jl
call
leave
es
lahf
sub
push
inc
lods
push
dec
or
pop
(bad)
dec
clc
les
(bad)
mov
pop
push
mov
mov
dec
mov
stc
lods
dec
test
cmc
dec
int
clc
cmp
test
xor
sti
addr16
push
adc
or
je
inc
out
retf
adc
xchg
stos
mov
mov
cmps
mov
daa
xchg
shr
out
rcl
(bad)
mov
push
push
add
jne
pop
hlt
xchg
fdiv
test
fs
xchg
dec
cwde
xor
mov
sahf
cmp
daa
mov
mov
or
hlt
arpl
or
lods
js
and
xor
int
xchg
sub
int3
ret
and
add
and
in
sub
push
and
add
(bad)
inc
cmp
icebp
call
stc
cdq
mov
aad
adc
les
movs
xchg
test
adc
in
rol
icebp
popf
int
aam
fnstenv
mov
xor
fcmovnu
ja
pop
pusha
mov
jno
test
jae
add
mov
cmp
sub
and
sub
inc
pop
dec
xor
pusha
push
sbb
dec
sbb
xchg
fst
mov
loop
mov
push
retf
mov
xor
lods
push
bound
xchg
mov
add
dec
sbb
(bad)
imul
sbb
call
iret
pusha
add
jbe
cmp
pop
std
call
add
jb
pop
arpl
cmp
xchg
push
fiadd
lods
aad
inc
and
not
add
ss
into
push
mov
or
cmp
jge
inc
popa
out
jge
hlt
jne
jne
pushf
(bad)
dec
lds
cli
out
sbb
push
int
aad
or
es
out
mov
mov
aam
xchg
cmc
ret
xchg
nop
jg
int3
inc
fisttp
int
xchg
fs
mov
adc
pushf
xor
sub
mov
aam
jnp
cwde
push
cmp
pop
sub
les
lea
xor
rol
adc
movs
lds
pop
test
mov
sbb
(bad)
mov
loope
mov
xor
inc
mov
add
bound
mov
mov
add
pop
dec
ja
loope
jb
sti
call
and
pop
out
fxch
cmps
jne
dec
and
in
loop
xor
pop
xor
call
mov
push
mov
lock
cdq
fs
jno
pop
and
dec
pushf
out
sbb
xlat
leave
and
pop
cmp
mov
adc
push
lea
sti
nop
je
sti
dec
sbb
sbb
sar
enter
into
cmp
sub
add
cmp
jns
add
sbb
outs
sub
inc
cmc
mov
sub
mov
pop
sti
jmp
leave
dec
movs
cdq
daa
(bad)
addr16
sbb
jmp
int
mov
adc
or
imul
fistp
test
rol
fisub
mov
xchg
lahf
addr16
mov
mov
dec
sub
cmp
mov
adc
aam
mov
movs
xchg
imul
in
sub
mov
sti
dec
or
or
in
add
mov
xor
data16
or
aam
mov
imul
repnz
cmp
bound
cmc
enter
iret
(bad)
arpl
pop
xlat
cdq
fsub
add
movs
jns
dec
das
mov
pop
mov
sub
sbb
pop
jmp
cmp
ds
daa
fcomp
cmp
xlat
cs
jb
push
xor
adc
and
popf
xchg
and
xlat
popa
cmp
pop
cmps
push
(bad)
mov
retf
into
test
cmps
(bad)
dec
xor
and
dec
stc
jae
dec
dec
jns
(bad)
mov
cdq
imul
scas
mov
mov
cmp
or
push
mov
and
push
and
jae
ret
mov
push
aad
cmp
in
in
dec
iret
or
mov
sub
xor
jmp
loope
pushf
mov
xchg
sahf
in
sbb
xchg
js
sub
in
(bad)
aad
mov
sbb
daa
ds
xor
in
xor
pop
jno
daa
dec
dec
mov
push
add
jne
mov
add
stos
into
mov
not
and
add
mov
lds
dec
pop
pop
adc
call
jp
std
shl
loopne
xor
sbb
and
idiv
xor
fnstenv
in
adc
in
dec
push
mov
sbb
add
inc
sbb
adc
repnz
dec
push
mov
dec
popf
ror
push
cld
inc
cld
arpl
movs
inc
pop
outs
test
inc
sub
jmp
cmp
ja
cmp
out
mov
pop
mov
inc
shr
jmp
pop
pop
jmp
jge
push
or
or
lahf
mov
mov
push
cli
(bad)
inc
pcmpeqw
pop
pop
and
movs
dec
push
gs
idiv
dec
pop
sbb
rcr
lds
push
shl
pushf
and
inc
or
mov
add
lods
mov
add
add
jae
mov
mov
mov
pop
loop
push
retf
mov
(bad)
dec
scas
pop
inc
scas
int3
add
xchg
mov
(bad)
lods
pop
pop
add
cdq
test
and
lods
sub
pop
retf
pop
cwde
fcmovnb
add
add
inc
push
fistp
sbb
jl
cs
mov
sbb
mov
jo
pop
mov
scas
sub
add
and
mov
shl
sub
mov
xor
cmp
push
iret
mov
jge
jmp
mov
aam
imul
or
daa
aad
mov
shl
add
or
pop
cmps
fsubrp
into
sub
cdq
xor
movs
mov
mov
push
imul
or
mov
std
push
xor
and
jne
movs
lea
out
fistp
ins
push
addr16
popf
rol
mov
or
inc
and
dec
inc
mov
inc
and
cmp
cli
test
bound
jmp
sbb
test
dec
xor
aam
mov
push
imul
mov
test
shr
dec
add
movs
fs
push
mov
adc
fiadd
mov
movs
ficomp
imul
mov
mov
jb
imul
sub
popa
xor
or
cmp
inc
add
in
mov
fnsave
aam
ins
lods
jb
add
push
cmp
or
test
mov
pop
pop
add
ins
inc
push
mov
iret
xchg
xchg
jle
(bad)
dec
mov
sbb
add
or
(bad)
das
test
cmps
push
jae
inc
inc
push
mov
pop
sbb
fnstenv
adc
les
sub
and
ds
data16
cmp
or
daa
sbb
in
rol
hlt
push
adc
loopne
sub
xchg
xor
push
iret
clc
dec
pusha
popf
cmps
sbb
pop
jp
push
xlat
(bad)
aaa
cmp
loop
repz
mov
mov
jbe
es
cmp
adc
sub
ror
lods
(bad)
in
cli
fsubr
xor
fdivr
jle
xor
iret
imul
repnz
(bad)
jo
rcr
ds
sub
mov
sti
pop
scas
sbb
push
jbe
int3
adc
fmul
aam
or
pop
outs
jp
test
xor
adc
repnz
cmps
push
test
add
ins
sub
xor
stos
and
mov
gs
xchg
cmps
es
cmp
adc
mov
lods
jl
cmp
and
out
out
aas
loope
(bad)
jp
or
(bad)
cmp
dec
mov
(bad)
fisttp
jmp
mov
imul
lock
pushf
sbb
out
dec
push
dec
psrld
add
ins
jmp
mov
add
mov
mov
les
dec
pusha
push
sar
dec
sbb
pop
mov
adc
dec
xor
sub
dec
mov
fwait
sbb
mov
xchg
adc
fcom
(bad)
jno
push
hlt
inc
mov
ins
mov
jns
stos
fidivr
inc
mov
jns
cmp
xchg
mov
jmp
xchg
js
imul
pusha
jp
xor
mov
mov
int3
popf
outs
fild
popf
arpl
jae
es
int3
cld
adc
mov
adc
repz
shl
inc
ror
add
push
rcr
cmc
sbb
sbb
cmp
add
dec
into
xchg
xor
pop
imul
mov
retf
mov
test
cli
cmps
and
inc
sbb
cmp
sti
inc
xchg
cmp
sbb
mov
mov
jne
cmps
mov
and
inc
arpl
jbe
scas
adc
mov
cmc
test
inc
pop
fstp
push
cwde
mov
or
jmp
cwde
(bad)
fwait
int
pop
sbb
inc
xchg
int
out
cdq
pusha
shr
jbe
add
fnstcw
(bad)
pusha
outs
sbb
pop
mov
adc
jmp
pop
mov
pop
cdq
cwde
xchg
inc
movs
xor
sbb
inc
nop
outs
dec
mov
repz
aaa
cmp
(bad)
scas
fisttp
ror
inc
sar
out
cmp
push
jnp
xor
xchg
dec
sub
lods
jecxz
inc
sub
hlt
inc
pushf
in
es
jmp
mov
or
sbb
adc
and
dec
fwait
pop
lds
inc
pop
test
dec
push
xor
dec
push
xchg
jns
jle
(bad)
out
sti
add
cmp
ins
dec
adc
jnp
xlat
loop
mov
dec
xchg
sti
cmp
xchg
les
rcr
loope
stos
jmp
lods
imul
sbb
pop
xchg
and
and
sub
xchg
mov
retf
lds
(bad)
stc
push
push
cs
push
push
xor
test
cmp
dec
sahf
or
movs
mov
stos
cmp
loop
test
mov
xor
mov
xchg
ins
or
dec
sbb
inc
push
push
jbe
and
popa
out
inc
sti
and
dec
rcl
sub
js
mov
jmp
xor
mov
aaa
call
(bad)
sbb
popf
pop
std
shr
mov
mov
aas
in
sub
mov
mov
loopne
jl
loopne
hlt
rcr
loopne
xor
mov
pop
test
shr
dec
and
dec
inc
mov
aad
xchg
popf
dec
ret
and
add
jns
stos
shr
dec
mov
inc
mov
sbb
and
leave
xchg
jno
mov
cmp
add
mov
cmps
cmp
and
xchg
int
cwde
and
add
adc
cwde
cmp
ret
aad
psrad
sub
jno
sbb
adc
push
jl
fimul
inc
adc
aas
mov
jbe
mov
arpl
add
shr
push
push
pop
jmp
cmps
(bad)
int3
mov
call
lea
mov
push
adc
mov
xchg
push
cmp
stos
movs
or
fisttp
pop
test
mov
xlat
rcr
jecxz
mov
in
js
pop
sbb
adc
fistp
aam
pop
mov
sahf
in
pop
movs
inc
repz
cmp
xchg
xor
dec
inc
push
ror
sbb
jp
lea
std
fimul
mov
(bad)
out
popf
cwde
popa
int
and
repnz
sbb
cmp
mov
mov
mov
and
push
in
add
in
je
mov
(bad)
mov
sti
pop
xor
pusha
fimul
icebp
test
adc
mov
push
shl
push
arpl
sbb
mov
mov
xor
ror
movs
push
cli
dec
xchg
mov
scas
scas
push
(bad)
mov
sti
js
ds
repnz
stos
adc
cmp
sbb
pop
sub
rcl
and
ror
xor
aas
jg
out
aas
out
mov
idiv
jmp
(bad)
jge
add
adc
add
es
int
ror
push
iret
pop
xor
or
mov
or
imul
add
sbb
lods
cmp
in
mov
sbb
sub
mov
sti
sub
in
mov
xor
jo
(bad)
stc
(bad)
xor
fld
pop
inc
into
jmp
call
dec
adc
xchg
fadd
pushf
lea
aad
inc
mov
idiv
and
fsub
retf
popf
jo
imul
(bad)
fcmovu
ja
jo
pop
neg
fsub
mov
neg
clc
dec
or
fidiv
nop
popf
cmp
mov
loop
add
mov
mov
cmc
push
retf
xchg
rcr
es
in
mov
int3
xor
call
nop
popa
mov
pop
popa
enter
add
into
in
inc
(bad)
dec
push
mov
outs
ficom
or
add
jb
js
loop
add
rcl
test
movs
dec
cmps
xchg
outs
mov
push
and
jmp
(bad)
int3
jmp
loope
sbb
loope
movsx
ficomp
jge
outs
scas
pushf
jnp
add
je
(bad)
mov
imul
push
cld
dec
cwde
mov
xchg
imul
sub
bound
sub
int
mov
xchg
adc
(bad)
retf
imul
fisubr
push
mov
mov
jnp
pop
adc
(bad)
out
mov
aad
push
sub
mov
add
sub
xor
sbb
xchg
xabort
cld
(bad)
adc
inc
rol
mov
dec
cmps
mov
call
xchg
int3
in
retf
lods
lods
sbb
cmp
jl
ja
cld
pop
scas
popf
cmc
test
(bad)
repz
(bad)
lahf
jnp
mov
cmp
loopne
mov
xchg
mov
les
adc
add
out
call
mov
loopne
setae
jmp
iret
push
mov
test
sub
repz
dec
mov
jmp
mov
sbb
pop
cmc
aam
pop
std
jge
pop
test
gs
cdq
sar
add
out
mov
jle
data16
mov
push
fadd
xchg
clc
sahf
jmp
and
shl
jo
aad
and
jbe
test
xor
cli
mov
ds
jae
jns
mov
(bad)
out
cmp
mov
mov
jo
mov
(bad)
sar
pusha
ins
popf
hlt
mov
into
xor
adc
or
and
cmp
arpl
cmps
pop
nop
not
test
and
lods
imul
fcom
dec
ror
cmp
mov
sbb
add
or
cmps
aas
cmp
xor
sbb
and
jbe
mov
xor
retf
or
fist
xlat
shl
sbb
xchg
data16
retf
xor
mov
cmp
sti
ret
retf
out
jle
push
jg
loope
iret
ds
js
jns
add
fbstp
sbb
mov
dec
out
movs
or
jmp
ror
push
pop
xor
xchg
retf
lock
xchg
repnz
call
add
mov
sar
scas
fcomp
das
jecxz
shr
mov
cmp
pop
cmp
pop
xor
sbb
retf
pop
add
adc
add
cmc
cmp
xchg
sub
test
pop
sbb
ffree
sub
scas
shl
push
(bad)
aaa
(bad)
push
xor
dec
sub
out
mov
mov
and
xchg
in
(bad)
fbstp
movs
jns
mov
add
jnp
or
sti
jbe
mov
or
rol
imul
ror
mov
lods
push
in
imul
mov
adc
outs
loop
(bad)
lods
mov
and
std
fidiv
fcomp
sbb
pop
or
mov
sbb
inc
lods
shl
add
adc
outs
mov
scas
or
dec
push
mov
shr
inc
pop
xor
add
loop
pushw
xchg
fs
int3
sub
(bad)
retf
and
mov
mov
lock
addr16
push
pop
jnp
and
sti
out
sti
int3
addr16
jecxz
(bad)
lock
ja
cwde
ins
mov
rcl
daa
je
test
xchg
enter
out
mov
cwde
fmul
and
and
inc
or
cdq
or
pop
mov
rol
in
repz
sbb
push
ins
and
in
call
aas
call
arpl
(bad)
leave
shr
xor
mov
dec
cmp
push
xchg
or
sbb
pushw
fimul
call
push
jmp
(bad)
mov
mov
outs
mov
test
mov
in
jo
in
add
mov
out
mov
outs
outs
stos
mov
sub
jp
sahf
sahf
push
rol
frstor
cvtps2pd
les
leave
mov
inc
add
imul
cs
outs
push
push
adc
call
mov
jg
cmps
pop
xchg
or
mov
or
cmps
aaa
pop
dec
and
scas
stos
mov
mov
dec
mov
mov
ret
leave
mov
lods
push
push
cmps
push
sbb
add
rol
(bad)
ins
aaa
sahf
imul
retf
out
ins
imul
ins
pop
jo
lahf
pushf
gs
fisub
lods
xchg
pusha
push
out
retf
stos
and
dec
shl
or
and
das
pop
jmp
add
mov
add
loopne
inc
stc
add
cmc
cs
fstp
daa
add
push
dec
or
mov
rcr
leave
dec
jnp
mov
inc
enter
les
push
ins
ins
or
sbb
push
jbe
(bad)
pop
dec
adc
retf
dec
jae
jae
jge
retf
test
lods
loopne
cmp
pop
xcrypt-ctr
cmps
cdq
add
pop
test
ins
push
pushf
les
mov
xchg
inc
inc
ss
int3
xor
fist
out
stos
nop
and
cmp
jmp
popa
test
daa
xor
sbb
mov
xor
mov
jmp
sbb
cwde
and
pop
and
cwde
call
dec
cwde
mov
dec
xor
sbb
cli
ffreep
cmp
and
cmp
ins
cwde
xchg
sbb
loopne
cmps
adc
dec
sahf
fistp
fwait
adc
push
sub
jbe
outs
cmps
shr
mov
movs
jg
add
mov
cmp
jnp
sub
fwait
clc
retf
sub
ror
dec
inc
mov
inc
(bad)
and
neg
adc
cmp
adc
mov
add
imul
cs
xor
mov
fnsave
cli
loop
push
sti
dec
jne
adc
out
retf
push
out
sti
push
movs
cld
xchg
mov
fld
xor
fwait
push
and
cdq
push
dec
pop
xchg
and
push
ja
fwait
(bad)
iret
xchg
sub
mov
cld
jecxz
adc
and
dec
adc
test
fcomp
dec
pop
aam
fcomp
rcl
pop
jp
shl
das
mov
cmp
lods
in
cmp
jmp
out
jg
fnsave
jle
(bad)
or
repnz
fiadd
mov
mov
push
aas
jno
rcl
sub
sbb
push
jl
mov
xchg
adc
mov
adc
dec
inc
fcom
lods
movs
je
loopne
or
leave
or
lods
leave
xor
xchg
popf
push
dec
add
xor
fwait
es
mov
shl
adc
pusha
inc
cmp
dec
xchg
cmp
cmps
add
pusha
cmp
mov
mov
cwde
or
mov
ss
xchg
jb
cmps
(bad)
popa
mov
mov
bound
outs
js
cmp
jno
push
cs
mov
mov
outs
std
(bad)
cli
nop
hlt
fisub
fdiv
pop
fwait
mov
and
cmp
and
pusha
inc
add
(bad)
or
rol
jae
dec
xor
pusha
fwait
or
fadd
mov
lods
add
nop
in
sub
cmp
xchg
jl
add
mov
pop
dec
jecxz
ret
xchg
mov
aas
jns
outs
cmc
cwde
push
rol
jne
into
ficomp
mov
xchg
imul
xchg
imul
cmc
and
lock
movs
cwde
sub
inc
stc
aam
or
aad
jno
jecxz
jmp
outs
shr
std
loop
xlat
lea
sub
pop
push
fistp
xor
jecxz
clc
ins
leave
rcl
(bad)
mov
cmps
aad
stos
in
nop
mov
fs
out
add
and
outs
add
pop
mov
fs
out
(bad)
(bad)
mov
cmp
inc
mov
adc
mov
lds
xchg
adc
sbb
mov
sub
jmp
xor
ret
push
and
inc
scas
add
loopne
and
hlt
add
xchg
iret
inc
shl
sub
pusha
(bad)
mov
cmp
sub
les
nop
jge
mov
in
and
data16
imul
iret
xor
out
inc
push
out
call
lds
movs
mov
mov
bound
mov
nop
dec
dec
mov
xchg
or
arpl
jb
cmp
xor
mov
outs
lea
scas
mov
out
xchg
inc
leave
sub
pushf
jmp
mov
pop
dec
push
xor
add
sbb
scas
push
push
dec
scas
pop
jmp
mov
js
cmps
or
sbb
push
test
xor
test
mov
fld
js
pop
in
add
stc
fmul
and
ss
xchg
enter
sbb
mov
cmp
retf
mul
hlt
or
inc
arpl
ins
xchg
sub
leave
pop
out
in
jmp
iret
pop
cmc
int3
or
popa
xchg
call
adc
mov
mov
test
stos
add
xchg
adc
add
int
addr16
mov
ret
add
rcr
mov
mov
adc
push
in
in
fadd
mov
daa
jb
inc
std
push
mov
leave
jae
mov
dec
sbb
imul
lock
aaa
jge
pop
std
and
in
hlt
icebp
movs
sub
pop
add
pusha
mov
(bad)
cwde
mov
pop
inc
jnp
lahf
out
rcl
mov
jo
fs
xlat
xor
ins
push
ins
inc
pop
adc
mov
jbe
or
jmp
or
add
jbe
dec
or
jecxz
push
mov
ret
hlt
add
add
mov
xchg
jo
in
sbb
popa
lods
mov
push
adc
xchg
es
sbb
retf
sub
(bad)
jle
and
mov
xchg
(bad)
xchg
pop
mov
dec
push
scas
jp
repz
jg
adc
into
(bad)
repnz
jle
in
mov
mov
hlt
pop
mov
jne
pop
out
cmp
std
cmps
dec
out
shl
adc
in
movs
jmp
lea
and
enter
sub
adc
rol
xchg
xchg
das
dec
or
es
xor
mov
rcl
daa
stos
movs
mov
mov
sar
leave
rol
(bad)
ins
pop
cwde
lds
int3
cdq
cmp
inc
sbb
and
dec
pop
push
mov
cli
sub
test
dec
dec
ss
mov
sti
jno
sahf
sub
mov
mov
dec
jge
adc
mov
cmp
loopne
lea
push
adc
popf
fwait
loop
jo
sbb
call
aaa
fidiv
push
cli
fadd
(bad)
clc
in
icebp
(bad)
fistp
lea
mov
mov
jae
loopne
jnp
xchg
outs
ins
fisubr
outs
cmp
stos
movs
jecxz
ret
ror
(bad)
(bad)
je
in
mov
xchg
and
and
add
and
fist
and
dec
mov
push
adc
adc
mov
cmp
pusha
add
xchg
add
loope
xor
xor
int3
jns
inc
or
cmps
mov
ss
mov
idiv
cmp
and
repz
int
jp
outs
leave
call
mov
stos
neg
ret
xchg
ror
add
jg
aad
repnz
jb
gs
hlt
stc
iret
cld
sub
imul
scas
ret
loopne
push
data16
sar
mov
fidivr
cmp
es
mov
imul
imul
out
jne
in
test
jmp
cmps
cmp
mov
fcomip
xchg
mov
dec
arpl
sahf
xchg
dec
es
outs
or
cmp
sbb
pop
jge
cmp
rcl
mov
pop
rcl
(bad)
xchg
movs
sti
idiv
ja
imul
dec
xor
add
lods
addr16
and
gs
es
fs
retf
jmp
xchg
test
lods
xchg
push
xor
mov
mov
push
mov
ds
popa
push
mov
mov
adc
sub
je
rcl
pop
sub
mov
mov
mov
or
sub
or
pop
mov
into
push
mov
add
dec
ficom
xchg
xchg
movs
push
(bad)
mov
movs
cmps
test
dec
pusha
les
or
test
add
sbb
and
sub
and
inc
jmp
in
mov
sbb
and
cmc
test
dec
mov
sub
jo
(bad)
test
xor
stos
xlat
std
out
cmps
mov
mov
mov
push
xor
mov
and
dec
mov
ins
dec
bound
or
cs
imul
or
cdq
cli
test
dec
pop
sbb
add
mov
or
and
sub
mov
mov
pusha
(bad)
add
sub
cdq
mov
popf
adc
call
fcom
fild
aas
xor
add
push
pop
call
push
test
sub
icebp
out
pusha
ret
mov
std
lds
cmp
push
mov
xchg
sti
xchg
sti
sub
stos
loopne
pop
mov
inc
popa
lock
mov
movs
sbb
pop
fs
jecxz
lods
frstor
or
shr
jge
cmp
lahf
retf
mov
push
cmps
es
dec
pop
test
mov
xchg
mov
ficomp
xchg
pushf
inc
sbb
dec
int
cli
shl
gs
dec
mov
cmp
add
xor
xchg
adc
retf
mov
jp
ins
or
xor
iret
jl
sbb
hlt
cmp
and
xor
rcl
gs
out
fwait
xor
push
xor
pop
jne
mov
mov
cmp
and
lods
or
add
retf
jns
mov
and
fbstp
or
pop
shr
xor
pop
push
mov
test
sbb
mov
dec
adc
lds
sub
cmp
sub
inc
imul
test
push
xor
sahf
in
dec
dec
sti
in
push
or
test
mov
lods
in
mov
add
add
jae
mov
scas
mov
(bad)
sub
ins
mov
dec
push
in
(bad)
xlat
mov
mov
popa
xchg
add
cmp
loop
jecxz
cmp
cmc
loope
into
call
jae
cdq
xor
js
sub
jle
mov
outs
mov
mov
sbb
bound
mov
xor
test
mov
cmp
pop
fisttp
aas
push
xchg
cmp
push
inc
xor
fnsave
mov
or
popf
xor
cld
cmp
leave
inc
mov
lods
xor
ror
xor
fstp
mov
shl
fdiv
arpl
int3
in
lahf
or
fnstsw
scas
outs
xchg
sbb
mov
cdq
push
test
sbb
xor
fmul
aad
ins
or
cwde
push
mov
adc
out
imul
xchg
pop
cmp
js
(bad)
push
inc
xor
inc
ficomp
mov
mov
out
clc
mov
jecxz
fld
cmp
cld
cmp
call
jmp
mov
lods
test
pop
inc
or
dec
pop
pop
fisttp
inc
mov
loopne
aam
add
data16
jne
mov
dec
push
dec
xchg
(bad)
sub
and
xchg
pop
outs
lea
ins
(bad)
(bad)
adc
leave
outs
xchg
mov
jo
push
cmp
not
push
mov
xor
popa
sub
(bad)
pop
dec
cmp
cmp
xor
xor
out
jnp
xchg
fimul
sub
in
mov
cld
adc
movs
pop
mul
jecxz
pop
and
aas
jae
fnsave
push
pop
push
cdq
into
shr
scas
ds
outs
lods
aaa
pop
dec
mov
adc
pop
sub
or
shl
enter
sbb
(bad)
idiv
cmp
pop
mov
frstor
ror
push
xchg
arpl
shl
sub
mov
and
inc
adc
retf
cmp
dec
test
push
test
shr
mov
movs
addr16
or
pop
dec
xor
jp
xchg
jno
adc
test
xor
push
adc
sub
in
xlat
mov
(bad)
outs
scas
dec
mov
icebp
addr16
jge
and
sub
hlt
popf
ja
cmc
inc
(bad)
fisub
inc
mov
and
dec
cmc
sbb
and
dec
jge
xor
stos
jmp
and
inc
adc
dec
es
jnp
jno
sbb
loop
lock
xlat
add
adc
loopne
in
(bad)
(bad)
addr16
int
mov
pop
jg
sub
clc
enter
int3
fs
mov
push
push
sti
icebp
pop
jle
dec
sbb
aas
(bad)
push
rcr
cmps
mov
imul
push
xor
cmp
jbe
cdq
fwait
in
fs
int
(bad)
sub
retf
out
push
mov
fistp
or
and
and
mov
sbb
fstp
push
add
sub
add
pop
pop
inc
fisub
inc
mov
lods
aam
ins
ja
fwait
in
pop
adc
and
ins
xor
add
dec
push
mov
mov
stos
rol
sub
sti
out
and
inc
sbb
pop
xor
inc
and
pop
sbb
mov
in
sub
dec
repnz
and
fimul
add
mov
ja
not
nop
bound
xchg
xchg
dec
movs
out
mov
push
add
jnp
pop
daa
ret
in
xchg
xor
mov
lds
mov
dec
sub
mov
ss
or
call
mov
aad
pusha
pop
fs
fidiv
pop
xchg
ret
adc
mov
cmp
mov
dec
stos
add
fiadd
mov
cmps
cmp
xor
fst
movs
and
pushf
sbb
jo
ror
xor
ds
pop
shl
aad
add
inc
sbb
mov
leave
dec
sub
fcmovnu
stos
or
pop
hlt
mov
(bad)
mov
lods
popf
movs
stos
idiv
(bad)
pop
cwde
fcom
(bad)
in
ins
arpl
mov
iret
pop
test
dec
sbb
sub
cmp
and
je
xchg
xchg
mov
pop
pop
das
or
ja
mov
jb
dec
inc
stos
ret
cli
add
mov
sub
cwde
(bad)
(bad)
mov
ins
in
sbb
dec
shl
jbe
xchg
or
leave
pop
scas
jl
mov
mov
in
xor
xchg
xor
cmps
add
mov
mov
push
add
push
test
mov
sub
cmp
mov
pop
cmp
retf
adc
add
mov
inc
das
inc
outs
outs
lods
lods
inc
shl
(bad)
retf
lods
cdq
scas
dec
jg
mov
test
pop
jge
lea
sub
sbb
out
movs
daa
dec
ret
ret
mov
loope
xor
mov
push
adc
dec
movaps
retf
push
sub
aam
or
mov
aam
sbb
into
jmp
adc
ss
xchg
movs
cdq
add
add
adc
outs
jcxz
into
xchg
inc
repz
mov
push
jmp
imul
arpl
lods
sahf
or
test
mov
xchg
jmp
lahf
inc
cwde
mov
int
push
fidiv
out
(bad)
mov
(bad)
or
jle
jge
and
mov
stos
and
adc
loopne
jmp
add
cdq
mov
pusha
in
pop
xor
cmp
push
add
stos
shr
push
push
pop
imul
push
jo
fsubr
movs
push
les
rol
rol
xor
int3
mov
nop
sub
fnstenv
out
idiv
mov
fild
sar
and
add
(bad)
lock
push
fiadd
mov
mov
addr16
mov
dec
sbb
clc
and
test
jl
repz
popf
clc
push
mov
mov
xchg
sub
movs
mov
retf
retf
bound
mov
in
div
inc
jo
in
fistp
in
xchg
cmps
or
mov
test
nop
mov
movs
into
xchg
sahf
ss
aas
sub
xlat
push
iret
int3
inc
xor
call
int3
mov
push
shr
int
add
pusha
add
outs
test
jp
imul
mov
cwde
adc
mov
add
mov
mov
rcl
fs
arpl
fsubr
jecxz
fsubr
out
lea
cmp
rcl
ret
push
xor
imul
pushf
sub
pop
jbe
mov
jnp
fdiv
xchg
into
mov
call
push
call
mul
aaa
movs
sub
int
sbb
jmp
add
mov
fucomi
punpckldq
xchg
xor
(bad)
mov
sbb
add
sbb
push
loop
dec
xor
pusha
out
jbe
lahf
xchg
dec
lock
js
mov
sahf
test
xor
sahf
pop
test
pop
add
mov
xchg
call
inc
mov
imul
in
push
call
adc
and
enter
xlat
inc
pushf
and
sbb
cmp
cmps
mov
outs
adc
movs
mov
in
ds
fld
fidivr
(bad)
(bad)
mov
mov
or
ja
and
shl
sti
iret
test
fbstp
mov
ficomp
sbb
(bad)
call
push
mov
fwait
ins
imul
psubsb
call
int3
adc
shr
repnz
cwde
mov
adc
xor
inc
ds
jge
jbe
je
sub
and
and
iret
jnp
into
cs
sub
add
(bad)
out
lds
je
aam
pop
out
test
or
stc
pop
addr16
test
xor
cwde
sti
stc
adc
mov
jl
xor
cmp
xchg
scas
(bad)
sbb
mov
scas
add
lods
xor
fs
fsincos
inc
jmp
or
(bad)
shr
in
mov
mov
retf
lods
pop
push
in
mov
pop
mov
sbb
ret
cdq
mov
or
sub
xchg
sbb
adc
imul
outs
jbe
int3
nop
dec
ret
(bad)
ins
std
xor
or
cmp
cwde
arpl
jns
sub
jmp
mov
xchg
cmps
pusha
push
sbb
add
mov
jp
or
mov
(bad)
popf
ja
jno
add
mov
lock
ja
neg
enter
jo
popa
out
add
imul
push
fbstp
in
(bad)
rcr
sar
in
push
dec
fcomp
xchg
je
(bad)
ins
in
shl
iret
inc
jns
push
and
or
xchg
mov
inc
js
and
dec
cmp
nop
dec
pusha
inc
aas
aam
fsubp
fld
scas
dec
mov
mov
sub
inc
jae
shr
jno
es
jmp
xchg
push
fist
rol
cmp
dec
jno
or
movs
(bad)
cwde
cdq
stos
cmps
scas
dec
xchg
cmp
cmp
out
out
test
arpl
cmp
data16
cmp
xor
sub
sbb
pop
push
movs
jbe
cli
rcr
add
ret
outs
mov
adc
jecxz
mov
test
jecxz
loopne
ret
dec
pop
and
push
ja
mov
aad
dec
and
xlat
call
bound
aam
push
xor
fst
add
test
repnz
mov
into
daa
leave
das
test
sbb
(bad)
aam
into
inc
pop
mov
retf
push
and
fs
data16
mov
dec
jbe
test
je
and
push
mul
(bad)
cmp
dec
mov
fimul
cdq
jb
jbe
cwde
loop
push
lock
movs
pop
xor
out
and
pop
pop
popf
inc
popa
xchg
xchg
and
ins
cdq
ficom
mov
call
loope
pop
cli
push
push
xchg
outs
lods
call
les
or
xor
test
push
add
mov
sub
jne
mov
in
and
stc
jo
call
loop
loopne
mov
scas
int
xor
fwait
cmp
imul
cmp
pushf
fiadd
sbb
mov
dec
dec
mov
arpl
repnz
dec
retf
ins
adc
gs
pushf
xchg
or
xchg
cs
js
and
pop
mov
dec
jp
add
mov
iret
ret
sub
sub
push
cmc
xor
iret
mov
cmp
inc
cmp
fs
and
lea
mov
cmp
mov
call
inc
mov
ja
xor
or
scas
fs
or
push
retf
ret
cli
dec
lods
stc
xchg
pop
test
ss
(bad)
and
cmp
repnz
mov
push
and
std
jb
out
adc
mov
cld
shr
into
leave
rcr
cmp
xchg
addr16
inc
fcmovne
adc
mov
inc
sub
dec
add
inc
mov
loop
test
cmp
in
add
ss
fistp
cli
das
(bad)
mov
mov
lods
adc
pop
sbb
lahf
mov
sbb
push
dec
inc
push
dec
or
fcomp
mov
scas
dec
hlt
adc
addr16
mov
or
sub
stc
cmp
in
adc
sbb
inc
test
inc
jb
rol
xchg
inc
xchg
mov
jb
cmp
cwde
imul
xchg
cmps
(bad)
mov
cmps
cli
inc
sub
or
retf
mov
inc
xchg
lods
pushw
sahf
inc
push
pop
in
cdq
push
sbb
cmc
xor
es
push
bndldx
retf
cmps
jge
mov
ds
mov
xchg
xchg
adc
in
and
or
sub
sbb
(bad)
(bad)
retf
inc
icebp
cmp
movs
cdq
outs
mov
cmp
add
hlt
jp
jl
inc
sub
mov
dec
imul
sbb
cmps
fist
xor
and
push
mov
xor
jae
cdq
jle
pop
ficom
mov
add
inc
popf
add
dec
cmp
pop
dec
add
inc
sbb
cmp
or
pusha
loop
outs
mov
xchg
sbb
push
xchg
pop
lahf
fisttp
sub
xor
loop
pop
imul
sub
dec
mov
or
cwde
fst
fwait
aad
psubd
mov
les
or
xchg
les
cmp
mov
ja
frstor
cmc
push
push
arpl
adc
lock
test
pop
sar
(bad)
add
xchg
push
int3
add
xor
retf
push
aam
es
(bad)
es
mov
pop
mov
cmp
cli
and
int
inc
mov
mov
push
in
data16
aas
xor
hlt
cmps
clc
inc
adc
dec
mov
cld
pop
xor
fwait
call
jl
cmp
mov
ss
push
xor
mov
xor
out
aad
mov
(bad)
dec
pop
repz
(bad)
pop
sub
call
cmc
stc
clc
jecxz
cdq
mov
jns
and
out
push
jle
cmc
int3
in
fwait
add
and
push
push
jg
add
adc
fisttp
lock
mov
xor
cmp
sbb
loop
or
mov
add
or
cwde
sbb
jmp
and
arpl
adc
xchg
mov
mov
cdq
push
xchg
gs
div
std
test
fld
je
into
imul
in
movs
xor
je
outs
sti
int
mov
mov
bound
pop
fistp
jmp
sbb
xchg
imul
shr
popa
mov
cmps
arpl
adc
or
xchg
data16
nop
push
loop
dec
push
mov
jp
xor
cli
rcl
xchg
cdq
push
out
xor
in
sti
inc
xor
shl
adc
cs
aad
adc
retf
nop
push
cdq
push
cmp
sub
imul
xchg
sub
inc
or
popf
or
(bad)
fnstenv
in
pop
sbb
sub
jnp
in
pop
fsubr
cmp
sahf
setg
lods
adc
in
jg
push
push
outs
mov
adc
cmp
xchg
gs
push
mov
and
inc
cwde
xor
addr16
sub
adc
lock
jae
aaa
dec
mov
retf
aad
cmp
pushf
mov
add
mov
add
xchg
push
lods
pop
cmps
pushf
int
mov
and
dec
xor
mov
xchg
(bad)
jno
sbb
xchg
pop
fcmovbe
jp
mov
dec
jno
xor
xchg
out
js
arpl
rol
sub
jp
dec
ror
(bad)
clc
bswap
ficomp
inc
push
fistp
cmps
aad
and
call
dec
mov
cli
fwait
push
int
sub
loope
sub
mov
fs
dec
inc
sub
mov
or
push
cmp
fsub
call
jae
pop
push
sub
mov
scas
mov
mov
ret
inc
ret
nop
clc
xor
adc
xchg
or
mov
mov
and
or
std
add
adc
fs
sub
cmc
or
cmp
inc
addr16
cmp
mov
addr16
adc
aad
cdq
pop
clc
ds
std
fisub
inc
sbb
cmp
or
jl
(bad)
in
push
mov
adc
loope
jne
push
sub
sbb
hlt
out
ja
sub
sub
fild
mov
repnz
ds
sahf
int3
mov
jnp
pop
xor
cld
in
out
mov
pop
addr16
bound
shr
dec
mov
sub
sub
inc
in
cmp
nop
pushf
rcr
test
xchg
ins
cmp
cmp
(bad)
mov
or
pop
mov
push
cwde
cld
and
sub
(bad)
adc
xor
mov
rcl
cmp
mov
xlat
sbb
sahf
hlt
dec
aam
adc
xchg
jb
pop
push
daa
cmp
in
push
fdiv
xchg
pop
jl
sbb
cmps
mov
mov
pop
iret
shl
mov
dec
fbld
xor
push
jne
test
sub
mov
mov
sub
stc
mov
call
leave
clc
dec
cmp
mov
cmp
loope
(bad)
cmp
cwde
dec
push
retf
push
pop
push
sti
or
adc
clc
mov
test
sahf
leave
and
cmps
xor
push
cld
mov
mov
pop
push
xor
adc
ja
or
mov
adc
push
das
(bad)
ret
xor
loopne
hlt
rcr
push
mov
jmp
dec
out
test
dec
out
fucom
mov
sub
scas
in
arpl
or
jg
jne
sub
xor
and
mov
fcom
adc
mov
adc
push
pop
xchg
jbe
call
xor
adc
cdq
mov
mov
lock
and
rol
cs
pop
fistp
int3
loope
fbstp
mov
or
sysret
add
je
nop
or
push
ret
xchg
imul
jge
mov
jbe
aad
(bad)
sbb
icebp
retf
jb
enter
jne
jp
nop
push
add
cli
arpl
leave
pop
mov
and
mov
les
pushf
loopne
int
test
mov
jle
mov
sahf
(bad)
jb
test
inc
mov
lahf
sbb
xchg
aaa
repnz
movs
push
add
adc
push
aaa
mov
es
lods
jecxz
push
test
sub
sub
out
sub
aad
sub
add
jb
jle
out
hlt
imul
cmp
dec
sbb
vcvtdq2ps
pushf
xchg
jno
jmp
ret
mov
or
adc
or
scas
cli
mov
sub
cmp
and
mov
jne
lods
test
jae
jno
push
scas
mov
in
ret
add
push
sub
xchg
xchg
iret
xor
scas
push
in
icebp
mov
and
scas
aaa
in
cmps
and
or
xor
sbb
mov
inc
addr16
inc
aaa
aaa
icebp
hlt
loopne
mov
shl
nop
rcl
or
ja
mov
and
sub
dec
inc
ds
xor
shl
push
rol
sbb
bound
jmp
cmp
add
add
popf
out
xchg
jle
repz
fnstsw
es
dec
ficomp
and
push
into
sti
out
jle
mov
out
mov
mov
repnz
push
out
dec
jg
ja
outs
cmp
xor
and
ret
and
into
inc
xlat
mov
adc
movs
mov
inc
push
mov
xor
dec
dec
push
outs
ret
cmp
call
fadd
daa
mov
ss
repnz
pushf
fs
mov
dec
xor
mov
leave
pop
jbe
push
xor
enter
add
aaa
js
dec
inc
dec
cmp
retf
test
mov
iret
mov
pop
jle
(bad)
pop
inc
dec
pop
arpl
mov
cmps
es
int3
ins
je
aad
adc
jno
dec
adc
xchg
dec
adc
scas
(bad)
mov
and
imul
mov
inc
xor
ja
pop
cwde
inc
mov
gs
aad
mov
push
scas
push
xchg
pop
je
inc
lahf
in
mov
and
or
xor
jecxz
pushf
and
sbb
rcr
clc
jno
or
jmp
sub
fucomi
ss
jge
setg
xor
cwde
out
xchg
iret
rol
xor
daa
jae
mov
test
(bad)
es
xchg
daa
push
stc
push
fcom
ja
mov
cmp
push
add
in
stos
jmp
and
arpl
cwde
mov
(bad)
add
fcom
ds
fisub
ins
ret
inc
dec
push
mov
mov
push
jecxz
addr16
loop
or
push
mov
loopne
mov
mov
nop
inc
xchg
xor
and
adc
js
fadd
into
xor
and
ret
ins
push
in
cmp
fwait
mov
jo
sub
cmp
gs
mov
mov
or
int3
xchg
stos
add
pop
ret
int
adc
jmp
and
movs
lods
and
ins
rol
jns
bound
cmp
mov
mov
sub
std
pop
inc
mov
or
test
fsub
cmp
pop
mov
stos
or
aas
pop
sbb
ror
rcr
loope
hlt
adc
cmp
or
sbb
(bad)
inc
neg
jg
sbb
jo
(bad)
int
pop
xor
inc
mov
sub
mov
std
push
sbb
lock
or
fs
stos
sub
jmp
enter
mov
sbb
cdq
sbb
clc
dec
das
sub
fnop
push
xor
ins
or
mov
test
imul
out
cmps
ja
sti
cmp
or
(bad)
ds
out
dec
push
or
or
dec
pop
into
les
mov
adc
xchg
outs
out
pop
cmp
scas
push
xor
or
iret
popa
addr16
test
test
sub
movs
outs
(bad)
jbe
pushf
xchg
call
mov
jns
fwait
aam
xor
push
fwait
ja
push
mov
fs
sahf
lods
sub
dec
push
(bad)
aam
pop
jmp
jmp
inc
cmp
cmp
cdq
mov
cmp
int3
into
jnp
pop
jnp
adc
rcr
loop
sub
mov
imul
and
lea
lea
ins
mov
pop
mov
das
cmp
sbb
pusha
xchg
nop
loopne
ss
in
mov
ja
jge
xchg
xor
xor
out
and
fadd
sub
xor
mov
inc
retf
mov
hlt
push
pop
ror
(bad)
adc
xchg
sbb
(bad)
in
cmp
pusha
jbe
je
mov
add
jns
xor
fcomp
xchg
sar
cld
push
xlat
pop
rcl
xor
or
push
xchg
sub
fwait
jle
mov
sbb
push
mov
inc
mov
or
icebp
std
cmps
push
jae
and
(bad)
push
test
mov
hlt
mov
push
xor
mov
aam
pop
cwde
into
cmp
dec
(bad)
lock
mov
shl
test
sub
sub
les
(bad)
mov
adc
sbb
out
movs
dec
iret
add
(bad)
int
xor
into
mov
add
sbb
daa
lds
lods
mov
mov
int
dec
pop
xchg
mov
into
leave
mov
add
jnp
lahf
mov
xor
sbb
inc
jl
repnz
scas
cwde
fsub
or
pop
dec
ficom
ret
or
mov
xor
add
ret
mov
push
inc
dec
stos
adc
pop
jmp
inc
add
cdq
push
rcl
mov
pop
mov
mov
lods
inc
ss
jo
push
jecxz
jnp
lods
cmps
xchg
outs
push
push
inc
sahf
jne
push
fnstenv
jo
aam
es
sti
cs
pop
dec
pop
xor
popf
es
pop
inc
sub
push
inc
inc
cwde
test
pop
hlt
push
test
jns
dec
sub
retf
dec
cmps
mov
dec
ror
lods
lods
jmp
cmp
cmp
inc
int
and
nop
(bad)
jb
push
or
or
push
imul
mul
shr
iret
test
mov
inc
dec
and
ret
jne
xchg
xchg
das
lahf
pop
je
or
call
add
iret
aad
pop
dec
fisubr
jmp
add
dec
mov
lods
push
sbb
cmp
(bad)
cdq
adc
cli
dec
repnz
ficomp
ds
dec
das
adc
jno
ins
push
ficomp
out
inc
mov
out
test
outs
and
mov
and
pop
or
pop
test
mov
test
mov
sbb
stos
dec
inc
rol
mov
or
out
xchg
scas
xor
dec
test
inc
mov
push
jnp
fdivr
pushf
cmps
pop
pop
push
add
adc
test
xchg
clc
pop
mov
aaa
clc
or
add
nop
movs
inc
data16
(bad)
xchg
or
cmp
shr
lahf
push
or
ja
cwde
ficom
xchg
call
scas
out
adc
retf
ss
imul
push
adc
or
sbb
jp
pop
sti
inc
mov
push
int3
scas
aad
in
mov
cmps
scas
add
leave
cmp
push
scas
shr
(bad)
or
mov
cs
add
mov
repnz
push
ret
inc
mov
cmp
pop
xchg
mov
fxch
neg
adc
sbb
dec
sub
outs
inc
call
sbb
xor
gs
mov
xchg
and
cwde
xlat
aad
imul
mov
dec
and
xor
sub
adc
mov
xor
test
or
lea
sbb
jns
inc
das
sub
shl
data16
ror
clc
cs
mov
cmps
enter
pushf
into
jmp
jns
rcl
lea
in
push
mov
addr16
pop
add
pop
std
sub
jo
rcl
add
and
(bad)
mov
or
shl
add
and
sub
push
les
popf
inc
xchg
dec
or
dec
leave
sub
dec
and
pusha
mov
sub
hlt
addr16
push
mov
dec
dec
aam
iret
mov
xchg
aam
push
jb
and
mov
adc
sar
cdq
cdq
stc
sub
mov
inc
mov
sub
and
mov
loop
call
dec
xchg
sbb
xlat
lds
sti
inc
(bad)
adc
data16
pop
es
dec
adc
(bad)
call
jmp
int
adc
dec
or
jo
in
and
add
loope
ret
jnp
cmp
loop
xchg
cmps
sahf
sub
pop
fidivr
test
test
xor
mov
sbb
(bad)
fmul
push
jo
push
popf
ds
jne
out
movs
pusha
lock
add
mov
iret
jnp
dec
jl
mov
cmp
hlt
outs
ror
add
or
pop
pusha
fisubr
inc
cmp
pusha
(bad)
cmps
test
add
adc
inc
mov
aas
lods
fucomip
xchg
dec
loope
jle
and
sbb
xchg
stc
add
xor
pop
pusha
fstp
test
gs
mov
mov
(bad)
pushf
mov
push
cwde
cmps
mov
in
and
je
call
es
inc
shl
popa
out
ins
inc
xchg
call
inc
mov
xchg
(bad)
(bad)
bsf
daa
mov
cli
(bad)
imul
jge
icebp
mov
mov
jp
fist
stc
hlt
popf
out
cmc
in
faddp
scas
mov
hlt
mov
dec
mov
call
jp
mov
(bad)
cli
add
lock
in
test
jle
and
add
xchg
leave
fstp
in
or
test
xor
fidiv
ins
add
sbb
adc
sti
and
(bad)
int3
loop
(bad)
mov
sahf
shl
retf
loop
xor
sub
dec
and
test
xchg
ins
out
in
dec
jo
push
jno
xchg
mov
xchg
retf
test
jecxz
cmps
daa
add
cmps
cwde
movs
dec
enter
mov
xchg
ja
xchg
icebp
sbb
mov
fisttp
movs
lds
xor
jmp
xchg
pusha
sbb
clts
and
push
aad
mov
(bad)
repnz
mov
loopne
push
or
sbb
fs
and
stos
jecxz
xchg
cmps
out
retf
xchg
mov
dec
jnp
fs
test
push
xor
mov
rol
stos
sbb
(bad)
mov
cwde
or
cwde
jnp
dec
sti
pop
mov
js
movs
fwait
jbe
push
lds
int3
jbe
adc
mov
arpl
in
push
sbb
les
(bad)
sbb
jle
pop
inc
adc
xchg
add
pushw
mov
mov
adc
aaa
pop
adc
aam
dec
pop
popa
movs
neg
cmps
mov
pop
push
iret
mov
sahf
js
enter
test
adc
cmps
xchg
add
nop
mov
ins
inc
adc
mov
mov
loopne
push
or
mov
mov
jl
aaa
popf
icebp
shl
xor
sbb
jl
ins
mov
out
push
imul
add
ret
adc
in
ret
shl
or
jp
xchg
fwait
rcr
shr
bound
aaa
mov
add
add
add
or
mov
mov
mov
and
cmc
repz
ss
fdivr
mov
inc
aas
lock
aam
ds
add
adc
push
jge
mov
jecxz
hlt
push
retf
(bad)
imul
or
cwde
push
loope
fdivr
mov
pop
cdq
mov
jb
inc
fiadd
push
(bad)
mov
pop
in
add
es
sub
jmp
add
retf
cmp
dec
xor
es
cwde
jns
xchg
cmps
movs
sbb
fimul
dec
pop
or
ret
xchg
mov
in
add
mov
aas
sub
test
add
xor
and
xchg
stos
std
ins
inc
leave
outs
add
pop
movs
addr16
sti
inc
and
in
jae
rcr
push
adc
jns
nop
jg
fistp
(bad)
repnz
mov
leave
pop
mov
loop
mov
in
inc
pop
int
lock
jb
mov
sbb
gs
jmp
and
cmps
popf
(bad)
and
xchg
fldln2
pusha
xchg
xchg
mov
into
cmp
adc
pop
bound
xchg
xor
cmps
inc
add
xor
daa
mov
push
mov
loope
rol
imul
dec
call
(bad)
jecxz
imul
imul
add
imul
pusha
or
sti
mov
daa
or
jne
pop
stc
mov
fstp
fisub
imul
sub
mov
aaa
lods
repnz
jae
ins
test
sti
xor
imul
mov
repnz
retf
add
dec
push
add
cmp
movs
xchg
(bad)
mov
mov
sbb
xor
ficom
adc
fs
loope
stos
shr
dec
pop
out
test
sbb
je
dec
fwait
push
bound
test
cwde
fidivr
or
shr
pop
dec
sub
es
out
mov
cmp
pop
jno
inc
aas
pop
push
xchg
and
inc
loopne
out
cdq
outs
inc
pop
inc
xor
aaa
push
cmp
dec
add
or
adc
or
cmp
dec
pop
push
cs
scas
mov
add
jbe
xchg
xchg
pushf
mov
and
enter
jno
outs
stos
xlat
pop
stc
mov
addr16
in
cmp
js
or
shl
cdq
pop
daa
xor
enter
inc
mov
daa
(bad)
outs
data16
jmp
shl
cmp
mov
sbb
iret
xor
mov
cmp
sub
inc
jge
cmp
xchg
push
mov
pop
into
outs
fs
sbb
jle
(bad)
push
or
inc
mov
je
sub
push
xchg
fstp
stos
push
fstp
cdq
push
adc
xchg
int3
imul
sub
js
mov
jmp
in
shl
xor
push
popf
pusha
add
shr
push
add
cli
aas
dec
outs
rol
rol
movlps
dec
adc
(bad)
dec
xor
xchg
sbb
pop
data16
popf
mov
test
lds
or
(bad)
push
ror
popa
mov
aaa
mov
loope
clc
dec
add
ja
test
pop
push
adc
call
cmps
add
int3
inc
mov
outs
dec
sbb
xchg
in
pop
icebp
cwde
(bad)
ror
mov
jp
data16
jecxz
and
data16
fwait
jns
push
inc
ja
jp
jo
push
mov
add
ja
fadd
adc
leave
sub
and
and
movs
retf
and
mov
movs
or
adc
push
dec
aam
push
das
out
sub
dec
clc
dec
mov
aam
es
retf
ins
adc
mov
sbb
adc
clc
icebp
jp
dec
mov
std
dec
les
mov
jp
lods
add
cmp
mov
sti
jle
mov
arpl
(bad)
push
data16
adc
popa
xchg
scas
sbb
push
repnz
mov
imul
ins
test
jne
sub
out
or
jle
xchg
std
xor
xor
test
stc
sbb
add
test
xchg
push
xor
cmp
adc
movs
xor
sub
movs
jbe
test
push
cdq
inc
aaa
sub
test
lahf
push
addr16
fldcw
adc
sub
pop
pop
les
scas
inc
inc
imul
jl
iret
shl
cmps
loope
xor
inc
and
dec
adc
cmp
mov
push
xor
neg
dec
mov
lock
loope
mov
(bad)
fld
das
push
test
pusha
jns
stos
mov
push
xor
pop
dec
call
fist
xor
aam
and
pop
xchg
ja
call
add
icebp
cmp
xchg
xor
shl
mov
test
les
and
or
xlat
sbb
xchg
sbb
sahf
div
pusha
shl
adc
xchg
loopne
in
rcl
or
cmp
dec
popf
ss
int3
pop
and
imul
mov
pop
xor
shr
mov
dec
sub
scas
enter
cli
mov
aas
adc
mov
fadd
jp
sti
adc
add
cmp
push
dec
mov
cdq
mov
push
or
ins
mov
dec
fdivr
adc
leave
pop
cmps
lock
shr
inc
adc
xor
js
dec
call
rol
iret
aas
xlat
dec
cli
adc
lds
dec
arpl
adc
or
xor
fsub
or
out
push
pop
aas
mov
xchg
es
ss
pop
and
dec
xor
cmps
xchg
lahf
and
in
nop
xchg
inc
inc
pop
(bad)
mov
and
lahf
mov
out
ja
or
es
xor
outs
loope
push
cmp
int3
xchg
gs
(bad)
rcr
sub
lock
(bad)
mov
inc
mov
jb
pop
or
cmp
cmc
nop
cmp
adc
add
sbb
xor
arpl
repz
xchg
pop
and
sub
xor
fcomip
out
out
outs
pop
outs
xchg
sub
adc
idiv
jb
dec
in
icebp
mov
call
movs
fs
inc
and
pop
xor
dec
das
out
mov
add
aas
test
ins
xor
fs
lods
add
and
mov
sahf
test
int
out
cmp
scas
mov
xchg
shl
cmp
aas
lods
rcl
pop
pop
cmp
xor
cmp
nop
inc
scas
jp
push
xor
stc
movs
add
add
cmp
dec
sbb
popf
adc
es
add
outs
(bad)
cmp
cld
js
adc
push
and
jbe
sbb
pop
cmp
pop
add
ja
in
jle
or
mov
mov
dec
xor
ins
lods
in
rcl
cmp
sahf
and
in
inc
fisub
nop
push
jg
xchg
js
repnz
fnstsw
xchg
mov
cmps
mov
jne
gs
sub
pop
test
adc
cdq
inc
adc
push
int3
ins
jne
jne
out
jbe
add
ret
sub
and
add
pushf
mov
popa
xchg
and
test
dec
adc
mov
adc
loopne
sar
in
(bad)
push
cmps
jecxz
div
pop
ja
or
std
cmp
sub
sub
out
es
cmp
sub
scas
inc
dec
(bad)
cmp
scas
add
daa
fwait
aam
pop
imul
fld
arpl
fisub
aad
xchg
ins
xchg
jae
cmps
mov
mov
jle
sti
call
rol
lock
js
repnz
or
lock
jmp
jns
mov
clc
dec
in
push
aas
call
push
push
dec
push
push
mov
adc
xchg
mov
and
test
js
das
cli
lods
sbb
jle
rcr
addr16
std
int3
xchg
push
scas
sub
xchg
pushf
pusha
pop
repz
jbe
inc
mov
mov
cmps
pop
mov
push
cmp
cdq
sub
aaa
mov
push
dec
cli
adc
(bad)
jmp
fmul
fiadd
jge
test
aad
xchg
mov
shl
xchg
mov
lock
cmp
pop
fiadd
lods
pushf
or
xlat
aam
xchg
dec
mov
iret
hlt
inc
daa
inc
inc
scas
call
and
and
push
dec
lods
repz
xlat
cmp
(bad)
es
out
jns
imul
test
dec
jae
push
in
jmp
and
sub
inc
ror
out
dec
inc
std
or
lea
dec
push
clc
psubq
es
cdq
xchg
sub
mov
inc
mov
pop
imul
pop
inc
mov
mov
rcr
(bad)
enter
mov
cmc
out
in
mov
movs
aam
out
repnz
mov
mov
in
add
int
ret
mov
fnstenv
stos
in
mov
mov
repz
fstp
lea
pop
enter
cmps
mov
sbb
call
mov
lods
sub
jns
stos
adc
xor
dec
or
cmp
rcr
dec
push
cmps
inc
push
icebp
dec
sbb
jno
enter
mov
movs
xchg
jg
std
add
cld
push
adc
pop
rcl
pop
push
add
and
in
cmps
mov
das
cmp
dec
dec
stos
mov
cmp
adc
cli
ins
in
push
(bad)
mov
aas
mov
sub
jbe
and
retf
pusha
or
outs
push
sub
hlt
arpl
mov
pop
(bad)
push
xchg
mov
or
in
or
cdq
ins
xor
jle
xor
pop
inc
push
dec
cmps
xchg
xchg
adc
popf
adc
inc
mov
and
retf
add
lods
sbb
cmc
inc
adc
adc
jp
and
or
stos
pop
add
pop
jmp
iret
pop
pop
jmp
and
jnp
cs
bound
adc
push
mov
mov
lods
fs
ror
addr16
mov
add
mov
mov
cmc
inc
mov
adc
fist
imul
xlat
cdq
dec
inc
cmp
and
mov
bound
add
in
stc
int3
pusha
mov
push
call
imul
js
dec
push
sub
push
adc
inc
ds
in
dec
mov
jg
and
jne
sub
xchg
xchg
test
rcr
mov
ror
xchg
pop
loope
(bad)
outs
mov
outs
pop
fdiv
sub
jg
call
in
dec
mov
enter
cdq
test
leave
mov
mov
inc
and
push
mov
pop
adc
and
lods
dec
aaa
shl
xchg
je
xor
pop
inc
loope
xor
push
sub
fwait
leave
push
in
xor
imul
xchg
mov
aaa
imul
add
xor
rol
rcr
cmp
mov
push
outs
scas
lds
dec
or
bound
rcr
mov
sbb
dec
retf
push
data16
js
push
inc
push
loop
mov
add
loopne
push
cs
mov
xlat
adc
(bad)
mov
jmp
aaa
clc
icebp
popa
jp
xor
pop
daa
inc
je
lds
mov
lods
and
jb
adc
leave
in
cmp
jmp
add
inc
je
xor
and
dec
adc
xchg
mov
jmp
cdq
xchg
cmps
push
xor
ins
pusha
mov
cs
jg
lods
es
ss
xchg
popa
mov
cwde
loope
lods
pop
sbb
out
push
fistp
ret
outs
clc
jmp
cmc
ja
dec
sbb
aad
ins
mov
jae
inc
les
adc
shl
cdq
hlt
test
mov
les
(bad)
fldenv
std
push
jle
mov
adc
out
and
mov
cs
mov
not
dec
mov
cld
jmp
xchg
test
mov
jmp
inc
test
pop
push
mul
jnp
xor
inc
ret
sub
jge
dec
sbb
in
cmp
jmp
int
rcr
jb
sub
push
loope
outs
cwde
pop
sbb
or
arpl
nop
lods
xchg
inc
xchg
iret
pop
adc
adc
and
bndldx
leave
push
xchg
xor
dec
cwde
pop
add
push
(bad)
mov
aaa
icebp
jb
adc
dec
push
(bad)
cmc
and
je
aad
ret
mov
xor
mov
sub
aaa
and
mov
jne
mov
jmp
fsub
jo
hlt
mov
adc
repnz
mov
sub
adc
mov
sbb
scas
rcl
cdq
test
out
int3
pusha
or
or
cmp
sub
adc
xor
mov
scas
mov
dec
adc
pop
jmp
dec
sub
ret
push
xchg
repz
xor
fimul
xchg
lahf
call
and
pop
xchg
mov
xchg
add
xor
cmps
xchg
xlat
movs
sbb
jp
mov
dec
mov
scas
psllw
pmulhw
inc
pop
pop
mov
or
mov
xchg
add
fs
retf
push
stos
stos
clc
jbe
pop
mov
mov
inc
add
jge
jp
sahf
repz
mov
test
cmc
dec
movs
imul
cmc
test
ins
out
xchg
push
jnp
int
mov
cmp
pop
and
movs
add
mov
cmp
add
mov
and
pop
imul
mov
push
sub
out
lock
popa
es
lds
sbb
mov
in
enter
push
mov
cmp
cmp
cs
xor
inc
ret
pop
das
dec
and
dec
fimul
adc
or
push
cwde
scas
ret
sub
lea
stos
out
jb
inc
sbb
mov
lods
pop
push
mov
aad
fcmovnb
inc
or
dec
dec
or
xchg
int
cmc
and
out
ror
fcmovnbe
jno
push
shr
add
adc
je
or
adc
or
xor
mov
mov
mov
or
mov
jne
jecxz
and
int3
arpl
add
pop
fmul
and
ins
mov
in
es
(bad)
retf
mov
inc
jbe
xchg
xor
ss
call
(bad)
add
(bad)
mov
xchg
int
daa
movs
and
pop
in
add
and
adc
dec
rcl
push
adc
jmp
dec
add
movs
es
adc
leave
dec
or
cdq
int3
gs
xchg
sub
ins
dec
mov
mov
popf
mov
push
fdivr
scas
inc
or
stos
dec
(bad)
pop
test
outs
in
adc
mov
imul
sti
sub
sbb
aaa
fs
inc
ds
movs
lods
add
jns
pop
out
ins
adc
sbb
adc
cwde
nop
lds
or
icebp
(bad)
mov
and
cmp
dec
fs
pop
or
ror
add
jmp
add
mov
inc
dec
and
inc
fwait
pop
cli
or
mov
mov
test
pop
xchg
or
loop
(bad)
cs
xchg
xchg
fmul
mov
test
mov
and
jno
fwait
cld
retf
loope
cdq
mov
add
(bad)
sbb
lods
popa
xchg
jo
arpl
sub
test
cmp
gs
call
shl
mov
or
bound
xchg
mov
cdq
sbb
ss
shl
jg
bound
mov
mov
xchg
xor
(bad)
popa
adc
add
fnstenv
or
div
pushf
movs
pushf
dec
pop
mov
cmp
jne
xchg
mov
jge
jns
fild
push
out
rcl
mov
test
push
retf
pop
and
push
mov
inc
ds
in
ja
fsub
out
shr
fist
add
stc
xchg
pop
dec
loopne
mov
test
jp
sub
cli
inc
push
push
repz
dec
retf
sbb
stos
jl
add
dec
into
push
push
push
retf
dec
dec
fs
jo
inc
cmp
scas
jae
lds
pusha
daa
cmp
ss
(bad)
test
mov
xchg
addr16
das
test
sub
dec
hlt
adc
dec
sbb
jmp
les
fild
sub
add
bound
ins
pop
push
pop
adc
cmp
imul
ss
inc
sbb
ins
push
cmp
push
xor
or
xchg
test
bound
or
(bad)
push
test
(bad)
sub
mov
mov
popf
cld
mov
push
jo
xor
pop
movs
ins
lods
cmp
iret
add
retf
inc
xchg
ror
cmps
inc
adc
pop
nop
ins
xchg
pop
call
push
mov
int
clc
les
lock
nop
das
add
jp
or
cmp
and
outs
mov
pop
push
and
in
xor
xor
pop
lods
popa
push
test
shl
fwait
sti
clc
fidiv
inc
cmp
sti
std
(bad)
pop
push
dec
pusha
sub
hlt
sbb
and
push
sub
lock
adc
and
push
arpl
stos
es
mov
adc
aad
movs
or
(bad)
pop
adc
dec
mov
jmp
(bad)
mov
inc
stos
loope
clc
jp
gs
inc
mov
mov
push
mov
pop
imul
icebp
push
jmp
dec
(bad)
push
xchg
daa
cmp
xchg
cmp
dec
jb
inc
das
scas
mov
xor
inc
and
inc
mov
dec
mov
mov
imul
je
clc
hlt
fst
es
in
fsub
cwde
ss
dec
mov
sti
xor
cmp
or
sub
(bad)
bound
jmp
dec
das
or
xor
push
mov
cmps
imul
sbb
les
outs
pop
mov
mov
movs
neg
push
inc
test
test
cmp
aaa
mov
rcr
nop
mov
xchg
lock
sub
sar
add
js
inc
lock
fiadd
jb
xchg
out
(bad)
add
fcmovb
lock
test
es
popa
xchg
jo
and
mov
dec
sbb
hlt
outs
aad
dec
fist
ja
or
mov
data16
mov
repz
retf
enter
out
xor
and
(bad)
int
(bad)
ja
cmp
arpl
cwde
lods
and
mov
jb
shl
mov
retf
sub
dec
out
inc
movs
stos
mov
pop
aad
aaa
ficomp
mov
push
or
rcl
inc
call
xchg
lods
pop
pop
or
pop
clc
jnp
test
pop
rcr
out
sbb
gs
and
movs
xchg
xchg
mov
dec
adc
(bad)
jge
mov
dec
mov
sbb
and
sbb
daa
imul
aaa
lods
mov
pop
add
adc
leave
ins
neg
ret
dec
jmp
mov
sbb
pop
cwde
add
or
out
enter
pop
fist
pop
ss
or
int3
in
xor
popa
pop
xchg
pop
cmp
clts
in
jecxz
cmp
mov
test
cmp
inc
sbb
mov
ins
cwde
fwait
sub
xchg
ds
(bad)
in
je
mov
xor
xchg
shr
dec
ins
jge
iret
and
xor
(bad)
add
jecxz
add
or
test
cmp
dec
dec
aam
dec
dec
ror
push
push
mov
jnp
adc
sbb
xchg
mov
je
sbb
stc
iret
lods
xchg
pop
das
sub
xchg
call
fmul
sbb
or
mov
pop
cli
fsubr
jb
mov
cmp
add
xchg
dec
in
(bad)
lods
scas
adc
mov
jmp
(bad)
out
push
or
mov
loopne
mov
mov
lea
test
xor
clc
dec
out
or
mov
into
mov
rcr
mov
popf
(bad)
fbstp
adc
sub
imul
xchg
push
das
pop
dec
(bad)
or
lods
xchg
stos
push
daa
movs
es
call
fnstenv
popa
out
or
(bad)
cmp
adc
add
xchg
iret
xor
xchg
xlat
xchg
fwait
sbb
(bad)
fld
test
xchg
bound
retf
sbb
mov
(bad)
jmp
dec
mov
hlt
jbe
and
mov
inc
push
sti
push
cmps
mov
xor
dec
adc
mov
mov
cli
pop
mov
or
sti
inc
xor
dec
shl
neg
(bad)
jmp
xor
mov
sub
cmp
stos
fisttp
fild
adc
xchg
jp
dec
mov
test
lods
call
in
and
pop
jecxz
mov
imul
in
retf
or
cmp
xchg
xchg
push
retf
cmps
xchg
pop
(bad)
cmp
cmps
pop
cmp
sub
push
(bad)
mov
stos
fs
fstp
mov
jno
xchg
addr16
dec
lods
in
adc
mov
cdq
retf
dec
addr16
cmps
jno
adc
mov
push
sub
mov
inc
ror
jle
daa
sbb
enter
je
xor
ds
rol
push
adc
(bad)
lss
cwde
ficom
adc
xor
lods
add
fmul
jne
ds
fidivr
adc
pop
adc
mov
mov
add
push
ror
adc
add
sbb
sbb
(bad)
(bad)
fsub
cmps
cmc
mov
push
jns
daa
sub
ins
sub
sbb
sub
clc
push
imul
jne
jmp
nop
sub
xchg
dec
mov
jb
add
or
and
push
retf
test
jmp
call
xchg
fld1
add
int3
push
dec
and
fnstenv
xor
ins
dec
push
push
test
fwait
and
imul
cmc
sar
and
icebp
adc
outs
loopne
jmp
call
sbb
xchg
ins
(bad)
dec
imul
inc
push
xor
sbb
repnz
fiadd
xchg
mov
stos
outs
or
xchg
cmp
inc
and
icebp
push
mov
icebp
cmp
inc
and
cs
xchg
sbb
jmp
jbe
arpl
arpl
adc
fistp
daa
pop
call
sub
es
mov
and
popa
ins
fdivr
call
shl
mov
popf
jo
and
out
addr16
dec
or
sub
test
pop
icebp
sbb
mov
enter
les
icebp
bnd
outs
adc
int
mov
ret
jge
xchg
inc
cmp
sub
cdq
xor
pop
aaa
ret
movs
movs
loop
ret
xchg
or
retf
jmp
xchg
or
inc
in
sbb
enter
sbb
mov
lahf
xchg
adc
fst
ins
shl
add
cmc
dec
jp
pop
mov
sbb
pop
jo
xchg
inc
dec
cdq
ret
xchg
xchg
mov
jo
or
sar
jge
xchg
adc
xor
fisttp
mov
call
cmp
aas
sub
pop
xchg
lods
in
inc
push
push
fnstcw
xchg
dec
add
push
or
pop
out
cmp
dec
inc
mov
pop
sub
cmp
sub
sub
adc
ds
or
xor
in
sbb
xchg
push
(bad)
cld
mov
(bad)
sahf
xlat
lea
cs
sub
jp
in
jecxz
xor
xor
ret
jle
cmp
lods
lahf
jnp
or
dec
stc
stos
inc
movs
dec
shl
mov
mov
push
imul
cdq
out
dec
sub
sbb
mov
out
xchg
jle
xor
mov
movs
jle
into
push
mov
fild
pusha
in
in
sub
nop
mov
xchg
ja
ficom
pop
cmp
or
adc
push
sub
sub
fistp
sbb
into
iret
test
pop
in
inc
(bad)
add
adc
dec
ss
cld
sub
xchg
aad
lds
lea
mov
or
mov
jo
push
and
fxch
mov
xor
cmp
fldcw
fsubp
pop
leave
repnz
add
add
mov
(bad)
shr
and
xchg
xor
mov
std
xor
sbb
pop
lock
sub
gs
je
fs
jbe
add
stos
dec
dec
inc
ret
iret
jb
pop
stos
mov
out
ss
add
mov
es
add
clc
ror
sbb
out
push
leave
movs
jg
repnz
and
retf
mov
push
dec
jp
push
or
pop
dec
add
or
pusha
mov
or
clc
adc
in
or
push
test
mov
daa
mov
ss
jbe
dec
fnstenv
test
lea
das
add
push
jmp
push
pavgw
fnstcw
sub
imul
data16
or
inc
les
lock
pop
cmp
inc
stos
aad
push
add
or
int
xchg
jne
inc
xchg
pop
mov
outs
jns
(bad)
(bad)
mov
in
neg
retf
fldenv
or
push
and
xor
add
jmp
pop
retf
sub
inc
pop
rol
push
ja
aad
aas
test
cmps
inc
pop
xchg
sahf
dec
mov
sbb
mov
pusha
push
xor
xchg
cdq
inc
sbb
aad
push
enter
jo
jbe
out
gs
pop
and
cwde
pop
loope
call
das
gs
ins
inc
sub
jnp
jno
pop
mov
xor
jl
xor
inc
and
loope
sbb
movs
mov
jns
in
cmp
cmp
das
sub
daa
dec
cdq
fdiv
es
add
or
or
gs
loop
cmp
sbb
add
js
dec
or
and
ret
and
mov
or
sbb
pusha
ret
out
xor
xchg
and
sbb
aad
movs
sbb
je
js
or
jp
sbb
xor
data16
lds
ja
mov
movs
ds
dec
xor
rcl
ins
movs
mov
sub
std
push
mov
neg
lods
dec
dec
aad
aad
pop
ja
pop
mov
jle
xchg
lahf
lea
retf
add
and
popf
inc
xor
out
or
jp
push
xchg
sbb
enter
adc
xchg
sbb
xor
dec
(bad)
xchg
shl
aad
dec
cmp
push
dec
mov
mov
and
push
rol
mov
out
pusha
jmp
(bad)
sbb
loope
xor
sbb
inc
xor
mov
js
(bad)
xchg
xor
int
dec
dec
mov
inc
pop
sub
cmc
leave
cld
sti
push
fiadd
add
mov
xchg
movs
mov
xor
shl
xchg
mov
(bad)
jmp
pop
xchg
pushf
gs
mov
inc
or
inc
inc
ss
and
add
bnd
fimul
aas
inc
push
mov
adc
xchg
inc
adc
push
mov
sbb
push
and
add
je
clc
xchg
mov
pop
cmp
mov
test
cmp
test
pop
or
add
dec
retf
icebp
xchg
sub
pop
sbb
stc
mov
push
imul
mov
ficomp
ja
ret
jns
dec
sbb
clc
adc
adc
jl
mov
call
std
adc
fstp
dec
ffree
add
in
adc
and
mov
(bad)
mov
adc
or
or
clc
sub
pop
jnp
movs
mov
popf
hlt
and
dec
sbb
daa
cli
cmp
xor
test
xchg
mov
mov
pop
loope
mov
inc
dec
int
mov
mov
aad
cmp
sahf
out
arpl
lods
jl
test
ret
mov
add
or
mov
mov
shl
arpl
addr16
mov
rcr
enter
ds
icebp
je
ret
ret
jge
dec
lds
xor
cmp
sahf
pop
mov
adc
inc
cmps
es
call
les
and
aad
push
js
jne
xchg
xlat
(bad)
push
outs
jno
push
fimul
pop
test
jge
adc
sub
dec
add
adc
inc
dec
push
jmp
ins
ds
inc
mov
cmp
test
sbb
lea
ror
xchg
hlt
cwde
adc
sub
cmc
jge
inc
pop
pusha
dec
xchg
fsubr
test
or
jecxz
in
jecxz
pop
lock
mov
xchg
mov
sub
dec
clc
lock
mov
add
imul
dec
jmp
xor
outs
cmps
adc
dec
loope
adc
in
mov
mov
or
mov
ins
test
and
dec
in
sub
ror
jno
xor
repz
daa
pushf
loop
retf
mov
retf
mov
jnp
retf
test
(bad)
xchg
cwde
mov
cmps
pop
mov
out
pushf
inc
aad
and
mov
test
(bad)
fmul
pop
inc
adc
popa
push
movs
pop
mov
or
and
shl
ret
into
push
rcl
fild
inc
iret
mov
aam
data16
pop
cmps
cmp
popa
mov
mov
pop
lahf
test
adc
outs
and
dec
fwait
jns
adc
leave
xchg
sbb
sub
(bad)
jb
dec
push
int
cs
lods
int
cmp
jae
rol
xchg
scas
cli
dec
loopne
mov
inc
lods
add
dec
repz
mov
out
fcomp
xor
sti
or
cmp
cld
addr16
test
xchg
outs
cmps
loopne
std
adc
pop
test
js
push
lahf
xchg
movs
cmps
xchg
or
jmp
(bad)
adc
leave
sbb
dec
fwait
cmp
or
lea
mov
jg
pop
adc
nop
mov
(bad)
iret
mov
push
mov
dec
(bad)
jns
mov
icebp
shl
popa
movs
sub
xor
icebp
add
jecxz
adc
dec
mov
outs
adc
pop
adc
ds
or
rcl
(bad)
out
mov
add
mov
sahf
shr
jb
add
shr
cmp
dec
jo
inc
int
push
dec
jb
and
or
movs
mov
mov
aaa
sbb
xchg
sbb
retf
xchg
popa
dec
sub
cdq
xchg
mov
lods
lods
std
(bad)
sti
mov
push
ret
sbb
sub
mov
(bad)
jne
addr16
sub
test
movups
pop
repnz
int
scas
mov
rcr
and
xor
cmp
repnz
adc
dec
ret
aad
sbb
adc
scas
retf
xchg
pop
or
sbb
into
xchg
xchg
ins
sub
mov
das
inc
sub
in
xchg
dec
add
add
retf
xor
push
xlat
fs
mov
mov
and
or
jle
cmp
fstp
mov
xor
mov
and
xor
xor
repz
test
sbb
push
ret
leave
xor
lods
mov
ins
shl
dec
movs
popf
adc
sbb
clc
pop
push
test
fild
leave
xor
sbb
cdq
jo
dec
cld
cmps
and
jae
cmps
fs
push
ds
shl
cs
mov
out
dec
aad
pop
cmp
inc
dec
pop
jmp
cmc
clc
dec
pop
sub
adc
xchg
pushf
nop
dec
sub
sub
test
cwde
dec
fs
repnz
daa
and
pop
fs
or
(bad)
pop
mov
cdq
mov
adc
cwde
sbb
inc
cdq
jmp
cwde
(bad)
bound
(bad)
fistp
push
int3
pop
outs
cld
aas
outs
scas
cmp
fadd
adc
adc
sbb
fldenv
mov
mov
into
das
dec
sub
mov
in
sub
inc
enter
sub
pop
jae
fld
sub
and
jb
sbb
push
pop
sbb
or
in
jno
xlat
xchg
pop
fcmovbe
dec
ret
or
nop
cmc
sar
pop
adc
jns
pop
and
cld
inc
jge
ret
sbb
sub
popf
add
cdq
jo
popa
inc
and
repnz
lock
cmp
push
rol
mov
cmp
xor
inc
mov
mov
sbb
imul
clc
and
rcr
retf
(bad)
sahf
pop
or
adc
pusha
and
lock
mov
or
adc
inc
ins
adc
daa
test
es
fcmovu
out
sbb
icebp
mov
mov
add
sbb
aad
and
xor
nop
popf
lea
ret
jp
push
jae
dec
(bad)
jae
repz
mov
add
ds
jbe
cmp
dec
scas
adc
cli
pop
pop
in
aam
push
xor
out
imul
xchg
aaa
xchg
idiv
imul
mov
rol
jno
xchg
test
shl
adc
mov
dec
sbb
sub
mov
stos
inc
adc
or
jns
jl
inc
dec
mov
out
adc
adc
and
push
add
les
jae
xchg
test
or
(bad)
mov
mov
cmps
adc
inc
imul
cmps
aad
dec
jmp
mov
adc
sbb
sub
adc
jg
mov
int3
shl
xor
jbe
(bad)
inc
xchg
shr
bswap
xor
mov
arpl
aaa
cli
jge
std
mov
jns
nop
(bad)
rcr
das
ss
mov
or
jae
sti
mov
xor
int3
or
jo
xchg
ja
popa
sti
pushf
pop
sub
shl
add
daa
jns
or
ds
ins
jmp
scas
mov
rcl
adc
xchg
sbb
push
movs
lea
adc
out
xchg
pop
inc
mov
and
cmp
xor
inc
cmp
pop
lock
popf
icebp
div
sub
mov
add
xor
push
(bad)
imul
cmp
imul
jo
sub
xchg
lds
lods
xchg
jecxz
xchg
push
xchg
adc
mov
es
adc
out
mov
test
inc
push
mov
mov
test
add
cmp
mov
loop
gs
mov
in
scas
outs
push
inc
sbb
dec
in
enter
sub
sub
mov
cmp
xchg
call
cmp
cmp
dec
fisttp
xchg
push
pop
add
ins
jo
mov
stos
rcl
jne
jae
rcr
das
cmp
and
data16
aam
adc
jmp
jl
jecxz
pop
mov
jg
sbb
fstp
mov
call
movs
imul
cli
fwait
push
sub
xchg
xchg
arpl
pop
jecxz
lock
mov
jo
ds
xlat
fs
sbb
mov
sbb
xor
or
cmp
sub
repnz
and
iret
jl
mov
cmc
cdq
sbb
xchg
jmp
int3
xchg
pop
mov
les
pop
sbb
lock
retf
add
push
pop
mov
je
(bad)
mov
mov
outs
or
add
mov
add
loop
add
(bad)
ins
xchg
mov
xchg
sar
pop
pop
pop
push
push
push
lea
fwait
outs
dec
xchg
pushf
xor
jb
inc
cmps
mov
xchg
and
sub
cmp
movs
jp
dec
inc
rol
pushf
xor
xchg
adc
or
or
out
xchg
imul
cmp
jmp
sbb
or
jno
jns
pop
ret
retf
test
jae
push
jl
enter
mov
dec
mov
outs
or
jno
dec
aas
inc
ror
aad
xor
cdq
(bad)
xor
or
mov
sar
movs
lods
mov
xor
dec
adc
call
add
dec
movs
mov
xchg
mov
add
sub
adc
xor
leave
push
mov
std
(bad)
fidivr
mov
aam
push
adc
or
bound
xor
mov
xchg
add
fucomi
fst
xchg
cwde
dec
shr
mov
cdq
push
hlt
fisubr
and
int
pop
das
mov
mov
sub
jecxz
jbe
fadd
xchg
cmp
lods
push
aad
ss
mov
std
xor
inc
adc
mov
inc
bound
test
xor
or
xor
lea
jne
jmp
xor
cmps
add
stos
dec
jns
sbb
adc
cmp
cmp
js
js
lahf
fs
inc
or
mov
jge
add
sub
pop
mov
dec
out
in
inc
xor
jmp
les
lds
outs
mov
lods
and
mov
in
icebp
mov
push
adc
(bad)
hlt
outs
sbb
adc
mov
push
inc
nop
lds
pop
xor
lahf
not
(bad)
jb
add
xchg
pop
mov
loop
mov
int
outs
vminps
sbb
mov
push
jne
mov
mov
sbb
in
xor
lock
push
jmp
dec
adc
mov
out
add
rcl
mov
jmp
add
ret
push
push
cmp
add
mov
jecxz
xlat
sbb
scas
dec
ins
fsubr
fisttp
lods
es
inc
daa
lods
sbb
mov
repz
mov
stc
scas
fwait
jg
mov
addr16
leave
into
adc
xchg
or
jmp
inc
lods
cmp
pop
aam
sub
cmc
push
mov
shr
mov
and
bound
je
mov
sub
sbb
mov
test
lock
adc
jp
jmp
lahf
test
nop
sub
ins
pop
mov
jge
(bad)
mov
imul
jl
cmc
cwde
cld
repz
ret
sub
ror
or
(bad)
push
push
idiv
ficomp
stos
add
shl
cmp
ds
mov
sbb
dec
mov
je
in
mov
test
popa
jo
jg
in
xchg
sub
call
add
push
inc
jmp
xor
push
test
sub
mov
dec
or
ja
and
cmp
in
arpl
xor
or
push
inc
or
je
xchg
pop
js
mov
(bad)
fcom
ret
xchg
retf
fcom
idiv
push
cwde
pop
cmc
rcr
or
imul
test
sbb
adc
(bad)
out
pop
inc
xchg
fbld
mov
add
test
popf
into
and
cmp
popa
repz
(bad)
call
repz
mov
xlat
push
mov
dec
xchg
fsubr
ja
xchg
aas
popf
inc
mov
push
jmp
shl
inc
mov
shr
inc
xor
add
test
mov
push
into
inc
or
and
cmp
dec
inc
push
fsub
mov
mov
shl
icebp
or
inc
sub
rol
sbb
imul
and
imul
jmp
xlat
repz
mov
jecxz
aad
xchg
adc
dec
ud0
fnstcw
jae
movs
arpl
in
cmp
pop
xchg
push
mov
out
(bad)
test
out
arpl
aaa
iret
movs
pop
shl
das
sbb
xchg
test
in
inc
nop
or
pop
jp
out
cmps
ins
bound
mov
jne
adc
xchg
pop
dec
daa
cdq
in
fld
lea
ins
ins
fist
movs
push
or
sbb
or
push
ss
jecxz
and
into
xor
push
scas
inc
mov
push
xor
push
sub
cmp
sbb
shr
in
mov
add
push
pop
fbld
pop
add
mov
sahf
nop
int3
and
mov
inc
int3
mov
add
(bad)
aad
out
fcomp
daa
pushw
pop
cwde
push
(bad)
xchg
lahf
inc
call
xor
push
push
icebp
push
retf
pop
imul
dec
pusha
fadd
dec
xor
call
mov
popa
fldcw
xor
cmp
pusha
aaa
(bad)
mov
and
jl
sbb
sub
jbe
mov
pusha
out
cmp
xor
data16
or
jnp
jge
push
inc
sbb
imul
fisub
or
movs
(bad)
sahf
fist
dec
sbb
adc
hlt
inc
jmp
sub
rcr
clc
and
push
xchg
mov
cwde
push
pop
(bad)
aaa
dec
ss
push
jp
and
inc
sbb
xor
imul
data16
inc
mov
xor
mov
fisub
popf
ins
pop
aad
and
pop
rol
cmp
cli
inc
jno
lock
rcl
bound
or
inc
xchg
sub
or
loopne
shr
je
mov
jecxz
leave
and
cmp
daa
dec
retf
dec
lods
popf
mov
lods
mov
es
sbb
rol
pop
push
inc
inc
sti
adc
(bad)
xor
sub
sar
sub
jle
fidivr
and
out
xor
add
xchg
mov
add
repz
movs
sub
mov
sbb
mov
xchg
bound
sub
in
(bad)
sbb
pop
push
add
pusha
pop
js
ja
lods
xor
data16
push
pop
dec
dec
outs
xchg
daa
ror
das
or
in
fldcw
inc
sub
je
cli
popa
sbb
pusha
test
iret
adc
pop
call
fld
ins
inc
mov
fnstenv
stc
xor
mov
mov
data16
adc
ja
fucom
mov
test
dec
push
and
rcl
add
aad
retf
mov
mov
ja
in
mov
or
mov
fistp
int
push
das
fwait
aad
stos
pusha
daa
mov
push
fiadd
pushf
mov
xchg
mul
call
or
xchg
xor
dec
mov
cdq
mov
sbb
fistp
aas
jecxz
push
retf
inc
xor
mov
in
pushf
adc
cmp
cmc
and
pusha
loope
xchg
mov
jns
in
fimul
test
repz
jle
rcl
shl
call
loope
sub
leave
and
retf
jnp
(bad)
xor
lock
fwait
cmp
sahf
movs
iret
call
daa
mov
shr
push
mov
push
adc
add
push
xchg
enter
fstp
mov
cmp
aam
sar
in
aam
jbe
xchg
lods
dec
inc
pop
aas
popa
pop
movs
out
cmp
jl
and
lahf
push
xor
in
mov
out
pop
fsub
rcr
into
or
jmp
pop
test
cmp
int3
arpl
retf
fsub
lods
ins
and
enter
ret
nop
lahf
sbb
mov
imul
fldcw
psubusw
in
adc
or
mov
pop
loop
int3
ins
into
sub
das
dec
lds
sub
jnp
mov
jp
loop
in
stos
jl
and
cmc
(bad)
fcomp
sub
aam
or
rcr
fs
push
mov
and
pushf
xchg
mov
retf
gs
sub
in
shl
loopne
mov
scas
gs
mov
lea
out
stos
xor
gs
in
xlat
mov
and
adc
xchg
xchg
je
push
adc
mov
dec
fld
adc
cmps
xor
test
dec
dec
push
ins
rcl
shr
dec
cmp
adc
cmp
inc
leave
test
sahf
loopne
xor
fsubr
jo
nop
test
pushf
int3
add
call
add
mov
xor
or
das
dec
and
add
int3
fwait
movs
mul
mov
push
test
push
push
push
xor
call
adc
sub
loop
repz
jo
(bad)
out
cdq
clc
into
mov
mov
aaa
adc
dec
ss
scas
dec
or
(bad)
(bad)
mov
(bad)
xchg
lods
cmp
pop
idiv
std
outs
jne
(bad)
or
aas
dec
ja
jecxz
inc
ret
mov
pop
adc
mov
mov
fmul
adc
retf
xor
aam
push
and
inc
rcl
jne
jno
xchg
and
scas
push
push
mov
cmp
pusha
jp
loopne
inc
sar
cmps
inc
(bad)
cwde
int
loop
cwde
push
or
inc
add
and
add
sbb
daa
adc
pop
shl
enter
sbb
test
lea
or
mov
cmp
cwde
inc
xor
xor
movs
add
jae
out
push
enter
test
add
mov
ror
pop
sahf
lea
fcomp
addr16
nop
loop
xchg
mov
mov
popa
sbb
xchg
push
mov
push
adc
or
imul
add
int3
sbb
sets
aam
inc
(bad)
je
movs
ja
jae
movs
and
mov
popa
call
sti
sub
push
adc
or
mov
sub
setle
pop
arpl
mov
and
leave
rcl
imul
mov
pop
jmp
push
(bad)
icebp
movs
pop
(bad)
aam
add
push
jle
adc
mov
xchg
(bad)
adc
adc
lods
pusha
cmp
gs
add
daa
or
loopne
fild
sub
leave
movs
lea
push
mov
lods
xchg
fimul
sti
ror
test
mov
test
jo
out
sub
sahf
fwait
jecxz
out
xchg
in
dec
arpl
sbb
cmp
outs
push
icebp
scas
mov
jb
loopne
into
pusha
or
xor
data16
fisttp
cwde
in
and
daa
cmp
out
ss
dec
xchg
push
mov
xor
push
dec
ss
aam
ret
sub
push
or
pop
test
and
adc
push
test
and
je
or
add
pop
outs
xor
inc
(bad)
push
mov
or
out
aam
jmp
js
leave
mov
(bad)
retf
mov
sub
mov
sbb
nop
ror
movs
fbld
xor
push
stos
dec
cmp
dec
pop
shl
cwde
xor
inc
mov
js
test
add
or
adc
xchg
je
addr16
imul
xor
jle
add
mov
jb
xchg
mov
pop
push
sub
xor
jo
inc
mov
mov
scas
lock
ja
inc
sbb
cs
xchg
movs
es
inc
or
push
pop
loop
int
sub
xor
retf
(bad)
ds
cmp
ror
inc
fst
adc
cdq
in
xor
dec
cmp
inc
and
and
mov
inc
xor
gs
dec
and
outs
enter
imul
in
popa
mov
clc
into
(bad)
mov
cmp
pop
imul
setl
nop
(bad)
loop
mov
mov
or
(bad)
jns
popa
imul
(bad)
retf
add
lea
bound
jno
pop
sbb
aas
xor
sti
push
dec
inc
push
icebp
pop
test
int
outs
test
sti
jbe
fadd
aad
pop
fdivr
fs
add
or
lds
xor
add
jnp
mov
or
test
enter
aaa
(bad)
xchg
xlat
call
sbb
cld
in
xchg
xor
cs
fwait
jo
call
dec
cmp
mov
jmp
loop
cmp
popf
call
add
cmps
ficomp
mov
and
push
jnp
pop
sbb
mov
push
push
mov
ins
add
cmp
shl
fistp
dec
xchg
inc
sbb
mov
(bad)
cmp
cmp
(bad)
les
sahf
pop
sub
pop
(bad)
addr16
mov
dec
push
sub
or
mov
mov
lock
loop
push
mov
pop
adc
sub
test
pop
cwde
xchg
jge
inc
jno
fld
jbe
mul
jmp
dec
xor
int
(bad)
pop
push
mov
mov
sub
or
push
(bad)
and
or
movs
push
lods
ins
push
into
fcomp
xchg
adc
or
mov
cmp
inc
adc
xchg
inc
xchg
and
xor
pop
sbb
mov
and
inc
fs
in
(bad)
rcr
or
sub
icebp
dec
ret
mov
or
in
sar
adc
ja
shl
mov
test
jmp
xchg
call
mov
xor
add
dec
ror
popf
inc
call
sub
call
push
sbb
pop
or
xor
je
lds
jno
neg
cwde
fld
inc
mov
pop
cmps
or
cwde
aaa
lock
out
fiadd
pop
mov
add
and
fld
sbb
dec
loop
sub
jle
mov
je
mov
mov
and
test
add
mov
cmp
adc
fsub
xlat
inc
in
jle
or
addr16
jmp
test
pcmpgtb
or
and
inc
imul
cmps
inc
call
(bad)
dec
adc
loopne
mov
add
out
xchg
shl
aas
(bad)
lock
daa
enter
adc
jbe
jg
outs
stos
outs
lahf
and
movs
jne
(bad)
lds
cmps
xchg
and
jo
aad
jo
push
hlt
shl
inc
jmp
sbb
inc
pusha
enter
mov
xchg
fidiv
sub
mov
sbb
repz
or
adc
xchg
dec
sub
jle
xchg
jmp
inc
add
sub
es
call
jp
mov
add
pop
dec
xchg
adc
sahf
popa
retf
add
xchg
push
ja
cmps
jns
inc
add
jb
repnz
jle
test
in
movq
inc
test
mov
in
push
adc
inc
shl
in
ins
or
test
mov
retf
ins
add
sub
test
mov
mov
call
or
in
or
push
xchg
cmp
cmp
sbb
xor
outs
and
sahf
dec
pop
jmp
dec
jns
xchg
cmp
adc
and
outs
mov
ret
mov
lock
xlat
adc
lahf
dec
in
or
ins
pushf
jecxz
xchg
xchg
sub
add
push
(bad)
jbe
adc
xlat
xor
aad
add
addr16
fcmovne
xchg
fdivr
movd
cld
xchg
sahf
jmp
loope
test
dec
push
ins
popf
add
(bad)
push
es
hlt
mov
jg
test
dec
imul
cmp
mov
mov
xchg
daa
xchg
mov
mov
adc
push
jne
das
jns
nop
push
push
mov
pop
mov
cmp
lea
pop
pop
and
or
inc
cmp
xchg
sub
aam
loop
(bad)
(bad)
data16
inc
movs
xchg
iret
call
push
dec
add
fcomp
push
sub
adc
jb
mov
xchg
mov
inc
sbb
mov
arpl
int
stos
or
dec
sbb
popa
pop
xor
in
cmp
lods
idiv
jbe
inc
or
and
bound
pop
sub
xor
add
add
jno
dec
push
shl
enter
and
xchg
push
pop
inc
aas
xchg
mov
jae
out
add
movs
jno
xchg
jle
inc
xor
cmc
inc
arpl
mov
neg
sti
jg
fptan
pushf
daa
adc
mov
mov
mov
add
push
jne
mov
cmp
cdq
or
shl
mov
jno
add
push
pop
shr
sbb
dec
fld
dec
xchg
and
jg
hlt
jnp
and
and
sar
push
gs
sub
adc
loope
mov
movs
mov
jg
pop
shl
adc
call
sbb
iret
enter
adc
push
dec
(bad)
cmp
sbb
stos
or
sahf
dec
and
movs
rcl
lea
inc
aaa
loope
mov
xchg
dec
cmp
add
les
out
mov
pop
add
(bad)
cli
jno
xor
(bad)
cmp
rcr
ror
daa
fistp
lahf
nop
aas
push
cmp
idiv
sbb
add
or
or
imul
push
fstp
imul
cmp
fs
cmp
or
cdq
cmp
mov
iret
(bad)
call
shl
iret
xlat
retf
jne
ds
fwait
aaa
pop
in
repz
cld
iret
neg
aas
jmp
int
sti
push
mov
sti
cmps
cli
cmps
scas
jle
add
(bad)
xchg
lahf
cli
repnz
and
pop
cmp
repz
std
mov
shl
mov
retf
popf
out
mov
jbe
xlat
arpl
dec
repz
call
in
xchg
aas
jmp
jecxz
hlt
mov
(bad)
mov
int
(bad)
fidiv
sbb
jbe
jp
dec
or
enter
cmp
rol
lods
xor
fbld
inc
ss
xchg
popf
jge
out
cvtps2pi
xor
stc
(bad)
aas
stos
jae
in
xchg
pop
jae
fcom
jecxz
outs
rcr
jg
std
(bad)
sbb
daa
jb
cdq
cld
in
cmc
xchg
jg
imul
cli
std
mov
fsubr
scas
pop
jmp
pusha
out
fcomp
outs
mov
retf
pop
pop
cmp
rcr
lods
stos
push
push
pop
pop
push
not
imul
xlat
ja
popf
in
stos
enter
int3
fistp
aad
fsubr
cdq
int3
int3
jge
out
ds
in
ja
(bad)
sti
addr16
mov
dec
lahf
(bad)
fistp
pop
pop
addr16
hlt
ret
fucomp
retf
shl
mov
movd
fsubr
jle
das
out
cmp
xchg
(bad)
lods
mov
jp
cmp
sti
popa
fnstsw
imul
pop
adc
push
sub
inc
sti
test
in
retf
ins
jmp
pop
mov
sub
jne
and
jae
mov
mov
je
ret
cmp
icebp
pop
jle
mov
pop
fwait
xchg
shl
out
xchg
cdq
fdivr
shr
in
out
cmp
sahf
xchg
jge
fstp
aaa
cmp
loope
aas
hlt
or
loopne
jge
sbb
jge
cmp
out
lea
pop
in
repnz
cli
inc
push
lock
jl
and
jecxz
push
addr16
fxch
xchg
aaa
xchg
mov
mov
cli
popa
outs
mov
ja
add
ficom
mov
(bad)
aad
jmp
in
jg
call
(bad)
fist
div
mov
xchg
xor
jl
xchg
cld
call
cmc
inc
dec
(bad)
jmp
iret
cld
call
inc
aas
jp
cdq
pop
cmp
cld
jmp
jae
in
lahf
rol
daa
aas
stc
loopne
jg
leave
pop
ds
inc
jge
xchg
scas
addr16
leave
addr16
int
repnz
in
paddd
(bad)
clc
loope
jnp
pop
jg
in
jg
sub
call
idiv
clc
inc
mov
inc
fwait
pop
pop
mul
aad
call
cmp
(bad)
push
std
aas
jb
cmp
pop
call
cmp
fnstsw
sbb
pop
out
mov
call
ror
sti
pop
ds
leave
addr16
test
stc
mov
vmwrite
imul
cmp
dec
imul
(bad)
jb
idiv
out
leave
pop
cmp
sahf
xchg
ds
add
in
sahf
add
mov
cld
retf
cs
jge
dec
pushf
gs
xchg
jnp
jl
pop
fsubr
cmps
retf
inc
pop
outs
hlt
hlt
ror
pop
shl
add
mov
test
push
stos
test
cmp
dec
fnsave
(bad)
(bad)
mov
(bad)
dec
iret
stc
jns
std
loope
jns
pop
mov
imul
out
xlat
(bad)
ret
mov
mov
(bad)
pop
into
fild
lahf
jg
(bad)
ins
dec
(bad)
mov
int3
xchg
(bad)
jae
jge
jns
jle
loop
repz
dec
jbe
mov
call
popf
mov
scas
sub
pop
hlt
mov
aas
aaa
pop
das
fsubr
(bad)
call
stos
sub
popf
movs
imul
mov
or
inc
adc
xchg
adc
pop
mov
stc
int
jmp
fistp
ja
scas
scas
jg
xlat
scas
call
mov
cmc
sub
(bad)
sbb
lock
(bad)
xchg
mov
div
out
cmc
sub
jge
(bad)
hlt
in
out
inc
outs
cld
int
jl
int
std
int
in
cmp
out
cli
mov
xchg
aas
repz
jl
loopne
jl
sbb
aaa
lock
mov
data16
inc
cld
push
hlt
lds
cld
retf
push
pop
push
std
nop
mov
inc
enter
fldcw
or
mov
outs
add
sub
ss
test
ret
arpl
sub
xor
pop
fs
sub
pop
xor
sbb
dec
or
std
pop
(bad)
fucomip
mov
add
push
icebp
call
fisub
mov
bnd
retf
(bad)
stos
out
outs
jle
dec
sti
pop
jns
fwait
out
mov
lods
fcomip
idiv
stos
mov
xchg
jle
popf
mov
mov
popf
dec
jp
pop
jg
scas
(bad)
jmp
lahf
cmp
add
(bad)
lods
lahf
stc
lea
idiv
ds
pushf
cmps
out
jle
out
fsincos
pop
clc
fwait
mov
pop
push
jge
jae
xor
aaa
out
lock
mov
xchg
and
stos
push
sti
out
out
shl
inc
cli
adc
push
cmps
scas
cmp
mov
comiss
enter
inc
scas
(bad)
push
xor
mov
jno
sub
pop
or
daa
cmps
repz
fistp
and
mov
(bad)
cmp
and
mov
push
dec
js
sub
pop
dec
sub
xlat
jg
cmp
xlat
jg
push
jp
ds
cli
das
call
(bad)
jne
pmaxsw
mov
loopne
lahf
iret
das
mov
sar
cmc
pop
jmp
stc
(bad)
jmp
lahf
xchg
and
jge
in
(bad)
int3
test
xlat
jg
aaa
scas
movs
lock
cld
jp
and
movs
mov
mov
pop
push
fistp
loopne
addr16
adc
sbb
inc
xchg
jb
xchg
sahf
pusha
jne
int
pop
outs
xor
(bad)
mov
mov
cmc
hlt
nop
popf
jne
cmps
into
xor
jmp
mov
mov
adc
retf
popa
std
loopne
(bad)
fisub
jmp
int3
cmp
cmp
inc
pop
ds
pop
cld
sub
clc
daa
fcmovnb
push
mov
pop
dec
out
stos
lds
mov
or
jae
inc
ret
jae
sbb
jnp
neg
xor
jne
pop
gs
retf
aad
inc
sbb
and
inc
add
adc
je
js
pop
fwait
aam
adc
pop
inc
mov
jne
retf
imul
push
and
cmp
aam
xor
mov
sub
pop
(bad)
xchg
imul
sbb
ds
xor
jmp
cmp
sti
popf
mov
inc
stc
inc
push
jmp
sar
mov
inc
jle
dec
shl
cld
push
mov
push
fwait
xor
test
inc
(bad)
fild
cmp
adc
ja
pusha
mov
add
inc
aaa
dec
in
mov
inc
idiv
xchg
fisub
or
pop
adc
dec
imul
mov
mov
pop
jne
in
outs
cmp
stc
ss
jno
cmps
mov
fnsave
movs
std
sbb
ins
sub
or
in
jmp
sbb
mov
int3
cld
cli
jg
cmp
addr16
sub
scas
outs
repz
cmp
daa
(bad)
or
in
popa
inc
icebp
jb
mov
jmp
repz
mov
push
lods
jnp
xchg
jmp
shl
dec
(bad)
inc
outs
(bad)
ss
dec
sbb
pop
mov
push
sub
test
aas
scas
stos
dec
cli
cmps
in
sbb
(bad)
enter
shr
aas
jo
jl
cmps
push
arpl
push
pop
popa
repz
mov
mov
adc
jmp
add
(bad)
addr16
push
inc
sbb
mov
hlt
inc
or
pop
addr16
daa
cmp
stc
leave
clc
push
out
push
pop
pop
mov
cmc
out
loop
cld
jns
cmps
(bad)
int
jecxz
iret
pop
ja
cmp
leave
jmp
dec
and
and
inc
and
push
adc
std
popf
sbb
(bad)
jb
mov
mov
sub
fldcw
xor
stos
pushf
adc
fldenv
xor
mov
stc
dec
lock
jno
push
mov
std
sbb
and
adc
into
stc
dec
adc
pop
mov
sbb
ja
loopne
mov
cmp
mov
ss
sub
je
cmps
inc
dec
in
ins
sti
mov
lods
adc
pushf
push
mov
nop
xor
cmp
xchg
aas
ret
std
retf
and
clc
(bad)
es
and
out
push
outs
fsub
jae
stos
push
push
movs
add
scas
fmul
sbb
push
sbb
push
adc
in
pop
sub
scas
sub
jmp
or
sbb
xor
xor
data16
movs
bound
ret
inc
sbb
push
sbb
into
adc
scas
out
sti
mov
fsubr
jmp
mov
outs
sbb
and
xor
adc
push
jmp
sbb
(bad)
push
or
push
xor
(bad)
cmp
(bad)
call
pusha
inc
adc
aad
push
jae
push
cmp
or
in
and
or
or
cwde
ins
mov
pop
add
(bad)
movs
clc
sbb
sbb
(bad)
jae
rol
mov
jecxz
add
inc
xor
xchg
dec
movs
test
cmp
xlat
dec
and
jo
aaa
dec
pop
push
and
and
jbe
repnz
sub
adc
test
sbb
leave
pop
or
or
sbb
loop
jg
xor
and
xchg
push
js
dec
mov
in
jmp
repnz
gs
sbb
adc
shl
sub
icebp
xchg
cld
out
movs
xchg
movs
xchg
mov
mov
test
jae
mov
mov
test
pop
arpl
jnp
js
in
sub
mov
hlt
jb
jp
or
popf
jmp
test
mov
inc
dec
push
stos
inc
and
(bad)
cdq
into
mov
xchg
add
lods
jp
lds
jecxz
loopne
or
clc
sub
(bad)
dec
push
call
popf
dec
push
dec
ins
dec
fs
dec
sub
xor
in
push
aad
fwait
or
fistp
outs
in
mov
sub
frstor
mov
mov
pop
dec
imul
fcom
fld
sahf
and
adc
dec
adc
iret
loopne
movs
push
pop
enter
gs
and
test
mov
lahf
push
shr
dec
sub
daa
scas
add
xchg
(bad)
sbb
xlat
ficomp
sbb
dec
push
or
int3
lds
xchg
out
inc
mov
and
mov
pop
or
sub
outs
push
fcmovnb
and
aas
or
loope
shl
jbe
pop
jno
call
test
dec
(bad)
repnz
not
bound
jne
sub
push
mov
mov
int
popa
adc
add
adc
xchg
aam
popf
xchg
or
dec
push
(bad)
shl
lahf
lods
call
jmp
and
add
jg
sti
xor
dec
sub
movs
sub
push
lds
sub
(bad)
out
movs
xchg
and
(bad)
scas
jb
add
push
xor
retf
loopne
sbb
retf
and
dec
cwde
enter
inc
jno
xchg
dec
int
fwait
ins
xchg
add
jl
pop
es
movs
add
in
or
icebp
add
sub
xchg
adc
push
int
aam
adc
pop
in
jl
adc
jp
jecxz
loop
or
jns
and
inc
and
pop
dec
retf
loopne
xlat
out
movs
shl
jae
cmp
(bad)
sub
xchg
dec
pop
xchg
test
aam
and
repz
int3
dec
movs
sub
sub
out
pop
add
dec
imul
mov
in
mov
into
and
dec
ins
xchg
mov
shld
ja
sbb
xchg
test
xor
xlat
add
hlt
inc
jns
and
xchg
xchg
mov
sbb
gs
imul
adc
xlat
jecxz
add
inc
mov
dec
faddp
(bad)
loope
outs
push
dec
pop
pop
and
rol
adc
cli
mov
xlat
dec
jno
in
sahf
pop
stos
loop
push
pop
inc
inc
fwait
test
push
imul
jecxz
(bad)
call
add
movs
fst
jle
pop
xchg
cmc
push
mov
and
in
inc
ds
(bad)
mov
test
icebp
add
loop
push
ja
mov
and
jae
sbb
sbb
inc
dec
cmp
cmp
imul
sahf
bound
addr16
(bad)
cli
inc
out
fmulp
psubw
mov
(bad)
cmove
fcom
jns
jmp
int3
outs
and
cmp
shl
mov
mov
adc
or
je
or
aaa
rcr
jnp
sub
call
sub
scas
pop
mov
je
out
push
pop
iret
scas
cdq
les
xchg
ja
mov
imul
mov
sub
cmc
push
or
cmp
outs
retf
call
adc
(bad)
xor
rol
movs
or
mov
inc
outs
mov
xchg
xlat
sti
sub
leave
mov
fsubp
ins
aad
fcom
enter
and
test
(bad)
stos
dec
jmp
or
adc
out
cli
inc
jle
mov
mov
jae
cmps
das
mov
mov
(bad)
lods
ret
ja
(bad)
movs
jp
fs
std
xor
or
xor
pop
or
jecxz
sub
jmp
pop
pop
popa
fwait
jb
call
(bad)
xor
iret
daa
mov
outs
mov
cld
call
mov
fadd
and
mov
or
mov
pop
push
push
dec
or
sbb
jbe
lea
add
daa
or
push
gs
inc
sbb
inc
cmps
int3
cmp
hlt
mov
push
dec
jns
mov
push
cs
cdq
push
mov
inc
sbb
int3
jnp
cmp
shl
or
push
push
(bad)
loopne
lods
and
retf
test
xor
ret
test
jmp
push
das
outs
pushf
mov
add
iret
jnp
in
pop
lods
aaa
test
loope
test
sti
cli
shr
movs
cmps
jg
push
mov
mov
bnd
jne
ret
dec
ins
mov
mov
in
mov
cmp
xor
fisub
shl
lea
arpl
sub
loope
push
repz
imul
add
icebp
or
jb
cmc
mov
out
shl
and
xchg
add
and
xor
das
stos
dec
bound
sbb
adc
stos
inc
lock
mov
jg
or
in
push
imul
jmp
adc
pop
ret
js
je
push
adc
pop
mov
or
shl
shl
enter
aas
imul
cld
push
(bad)
das
in
pop
gs
ret
or
loop
or
lods
cwde
cmp
test
aad
push
xlat
xor
stc
cmp
pop
or
dec
add
mov
jns
call
push
gs
pusha
inc
jae
dec
mov
repnz
shl
jle
popa
clc
xor
int3
pop
xchg
fisttp
fcomp
or
pop
or
fwait
dec
push
xor
or
cmp
mov
retf
(bad)
mov
jae
icebp
sti
xchg
gs
xor
out
test
cld
jnp
cs
jmp
popf
cli
mov
and
out
push
mov
push
je
push
xor
push
shr
dec
mov
sub
cwde
mov
jmp
jae
fst
push
cmp
mov
repz
xchg
and
push
inc
inc
xchg
xor
add
js
jge
dec
fild
cwde
push
mov
xchg
dec
xor
shl
mov
icebp
fidivr
clc
icebp
(bad)
add
call
dec
mov
sahf
xor
mov
pop
addr16
xlat
mov
inc
push
push
js
(bad)
leave
mov
inc
inc
mov
mov
sbb
adc
lea
mov
call
loopne
xchg
dec
nop
mov
xchg
or
(bad)
js
pop
sub
mov
sahf
push
pop
dec
jl
mov
pusha
push
mov
or
ss
jl
jnp
(bad)
mov
or
rcr
aad
(bad)
hlt
sbb
sub
push
add
cmp
push
sub
push
add
je
in
mov
shr
sbb
mov
stc
mov
xchg
je
(bad)
mov
mov
adc
enter
inc
addr16
push
fcomip
cmp
cmp
push
in
dec
fldcw
add
xor
jae
mov
int
(bad)
sub
int3
cli
stos
pop
leave
sbb
mov
daa
add
sbb
mov
dec
in
jmp
js
popa
fcomp
push
mov
lods
ss
xor
push
sub
mov
test
add
push
pop
popa
hlt
punpckhbw
add
clc
jns
fs
xadd
dec
sar
out
daa
and
jg
mov
jns
outs
ja
pop
cmp
xor
mov
stos
rcl
and
fwait
pusha
(bad)
dec
push
and
pop
cs
push
in
and
mov
cs
jge
clc
int3
ret
mov
sub
call
scas
sub
dec
retf
push
push
mov
cmps
in
push
lea
push
jbe
fldenv
shr
hlt
pop
inc
pop
bound
cmp
leave
ss
jp
xchg
mov
push
add
stc
cmps
fiadd
add
add
push
(bad)
jge
jg
(bad)
mov
fcmovne
int3
adc
movs
(bad)
aas
fisttp
cmp
int
retf
adc
push
and
sbb
add
call
imul
pop
ret
es
mov
std
popa
repnz
(bad)
sub
rcl
aad
and
xor
das
cmp
jp
mov
and
cs
mov
enter
xor
rol
adc
(bad)
add
and
sub
fisttp
aaa
jl
(bad)
(bad)
mov
dec
sahf
push
dec
sub
ficom
jne
ss
into
cmps
sar
retf
nop
and
cmp
cmc
xor
fs
adc
push
ss
ret
pop
xor
fistp
repz
lods
xor
ins
in
fisub
cwde
adc
dec
adc
aaa
sub
loopne
clc
mov
mov
data16
push
or
jl
jle
mov
xchg
in
lds
mov
nop
fldenv
xchg
jecxz
inc
repz
sbb
xchg
pop
mov
inc
out
dec
(bad)
scas
(bad)
xor
cli
inc
inc
xchg
cmp
xchg
stc
sbb
scas
enter
shl
outs
mov
xor
xor
pop
aaa
stos
paddusb
inc
fmulp
les
adc
sub
add
mov
cmps
jmp
loopne
out
and
shl
mov
push
push
dec
dec
out
int3
scas
into
cmp
xchg
cwde
mov
cdq
fcmovnb
les
push
iret
sahf
mov
dec
ja
je
test
scas
dec
cs
aas
dec
je
aad
add
imul
dec
(bad)
gs
add
or
sub
jns
cmp
cmp
mov
xor
mov
ss
mov
jmp
dec
aam
or
jg
adc
dec
lods
in
outs
jmp
pop
jge
push
pusha
movs
dec
jne
mov
int
fbstp
jns
sbb
sub
push
aad
ins
pop
int3
sbb
lods
outs
and
or
mov
xor
mov
jb
neg
(bad)
jecxz
loop
rcr
iret
mov
out
cwde
fisttp
adc
dec
jp
fwait
sub
loop
lods
sahf
inc
add
fisubr
mov
mov
jbe
jp
or
std
(bad)
jo
pop
mov
mov
pop
sbb
repnz
inc
(bad)
imul
lea
rcr
out
frstor
sub
in
lock
pop
jl
cmp
in
inc
cmps
mov
adc
outs
mov
int
xchg
int3
and
daa
int
ja
shl
mov
push
push
and
xor
and
jae
mov
cs
xor
pop
add
sbb
push
or
(bad)
cld
jbe
in
cmc
aam
inc
popw
dec
or
sub
adc
add
sbb
and
out
iret
iret
sub
cdq
push
ja
loope
xor
and
hlt
(bad)
popa
call
(bad)
out
call
mov
fist
test
out
out
out
mov
jb
mov
jns
xchg
jmp
mov
stc
sahf
nop
and
sub
retfw
fst
pop
cmp
in
dec
cmps
ss
pushf
inc
xchg
ins
mov
add
mov
inc
ret
sub
push
push
retf
or
xor
pop
ss
lods
jae
dec
jmp
jbe
addr16
out
nop
cmp
and
jl
fmul
into
(bad)
jl
jns
mov
je
in
outs
out
mov
jmp
mov
jne
dec
scas
je
push
enter
push
pop
push
adc
adc
call
inc
and
cmp
sub
popf
leave
push
es
pop
inc
stos
loop
orps
mov
aad
xchg
(bad)
mov
int
add
inc
leave
xchg
retf
xchg
add
inc
mov
mov
mov
shl
inc
cli
mov
xchg
inc
daa
mov
add
jbe
bound
addr16
dec
call
or
adc
jmp
xor
or
sbb
mov
int3
adc
or
stc
add
mov
sbb
pop
aas
repz
test
aaa
scas
out
stc
test
movs
pop
dec
jb
fwait
gs
mov
pop
lods
push
dec
or
sbb
fnstenv
xchg
sub
les
dec
dec
inc
inc
push
test
xchg
retf
scas
sbb
pop
inc
or
pop
hlt
clc
jmp
adc
int
in
aad
enter
sbb
out
inc
ss
fdiv
push
rcr
mov
aam
repnz
jnp
imul
cmp
out
mov
and
xchg
(bad)
and
sub
call
xor
std
aaa
add
call
clc
mov
adc
sbb
loope
in
sbb
inc
sbb
sbb
(bad)
pop
scas
popf
xchg
outs
lea
sbb
pop
sub
cmp
ins
xchg
jmp
jl
push
mov
pop
fstp
push
mov
in
add
push
repz
sbb
add
scas
data16
sbb
aad
push
mov
push
push
dec
jp
xor
jno
rol
xchg
test
xlat
dec
fdivrp
mov
pop
iret
aas
rcl
jns
loope
out
pop
mov
cmc
jno
ss
cli
js
rol
rcl
mov
mov
outs
cmp
mov
fild
inc
and
test
gs
scas
popa
inc
mov
test
aas
cs
and
enter
push
repnz
cs
imul
shl
xchg
(bad)
push
xchg
lods
mov
out
dec
or
mov
(bad)
cmps
dec
cli
cwde
or
(bad)
inc
(bad)
int3
pop
jnp
mov
je
out
jg
sub
and
cmp
push
jle
jl
and
div
mov
jl
in
mov
sahf
fidivr
adc
das
xchg
loope
imul
repnz
(bad)
cmp
js
fldenv
jae
mov
stos
(bad)
jge
pop
mov
sbb
rcr
rol
jb
pop
cmp
push
push
repnz
pop
inc
sbb
or
or
mov
aaa
jp
ds
jb
(bad)
in
mov
mov
arpl
sub
lods
xor
stos
inc
jnp
sbb
sahf
cmp
pop
fdiv
and
scas
mov
push
scas
cmc
adc
(bad)
jbe
aaa
(bad)
push
or
mov
fnstsw
mov
sbb
sub
sub
loop
and
mov
mov
sbb
loop
mov
push
xor
adc
xchg
mov
xor
lods
pop
inc
data16
and
and
and
fist
mov
pop
hlt
cdq
add
imul
loopne
(bad)
ss
inc
mov
arpl
pop
cwde
in
stos
xlat
push
inc
retfw
je
leave
and
cmps
in
xchg
hlt
jecxz
adc
pop
movs
scas
sub
inc
int3
rcl
das
popa
(bad)
mov
iret
lahf
(bad)
and
retf
(bad)
and
cli
xor
jno
lea
les
mov
mov
xlat
(bad)
jp
add
cld
push
mov
cmp
push
or
fcomip
mov
fld
ja
push
dec
retf
push
dec
ja
lods
call
in
out
cli
ret
out
add
mov
mov
jg
das
dec
mov
out
aam
and
push
pop
mov
mov
call
xchg
mov
imul
sub
bnd
out
cmp
int3
cwde
adc
in
jns
jg
rcl
fs
cwde
fld
mov
pushf
fsub
outs
sbb
sbb
cmps
mov
stc
movs
iret
in
add
aad
test
in
repnz
pop
cs
adc
in
adc
push
and
out
ss
fwait
jne
xor
retf
push
add
pop
dec
fcmovu
pop
(bad)
outs
test
sbb
inc
arpl
leave
imul
add
enter
rcr
data16
mov
ret
inc
retf
cs
sub
mov
mov
jmp
(bad)
pop
adc
ror
cmp
inc
xor
je
mov
call
scas
outs
ja
and
ja
fwait
inc
adc
ja
ret
sub
stos
jmp
cmps
xchg
add
mov
adc
int
(bad)
stos
pop
pop
jle
sub
shl
jmp
lock
les
in
sub
push
test
in
paddq
test
arpl
je
mov
sbb
lods
xchg
sub
ins
mov
fs
test
dec
stos
mov
call
sub
dec
aas
iret
add
and
sbb
mov
mov
push
jbe
(bad)
(bad)
jo
ins
or
fild
push
xor
xchg
in
mov
daa
(bad)
pop
push
jp
pop
adc
or
cmp
shl
push
push
push
mov
scas
mov
pop
add
(bad)
xor
mov
adc
mov
movs
aad
adc
cli
xchg
test
and
pop
js
push
mov
sbb
sbb
sahf
cmp
stc
cmp
and
mov
out
push
inc
mov
sub
fcom
mov
xchg
jge
cmc
push
xlat
sahf
jmp
inc
mov
jmp
xor
dec
inc
sub
ror
cmc
out
cwde
inc
pop
ja
test
test
adc
shr
xchg
cmp
arpl
in
cmp
dec
arpl
mov
fsub
push
adc
frstor
test
int
(bad)
cli
mov
sbb
mov
ins
mov
fstp
les
xor
dec
xor
inc
adc
pop
dec
in
daa
call
and
xchg
cmp
jnp
and
and
stc
(bad)
mov
push
iret
jne
mov
pop
xor
jge
xchg
dec
inc
stos
push
cmp
sub
fsub
dec
int3
xchg
out
xchg
push
sbb
cmps
mov
add
fild
retf
outs
dec
jle
ficomp
sub
xchg
inc
pop
les
pop
fcomp
sub
aas
add
mov
imul
push
into
aad
sbb
mov
push
adc
movs
sbb
popf
sbb
inc
and
xor
push
and
cmc
dec
jbe
out
(bad)
sbb
xor
ret
lahf
dec
std
(bad)
jae
pop
ror
dec
imul
sbb
mov
and
add
jge
(bad)
push
neg
cmp
jae
retf
test
aad
or
sbb
dec
mov
mov
loop
cli
mov
mov
cmp
push
dec
test
add
(bad)
xchg
leave
arpl
inc
jp
xchg
dec
push
in
shr
jns
push
out
jo
je
lods
xchg
and
dec
inc
add
lock
(bad)
jg
cwde
inc
xchg
leave
cmp
out
cmp
lock
cmp
shl
ret
xchg
sub
dec
pop
or
inc
xchg
sbb
or
mov
and
(bad)
in
repz
retf
inc
jmp
mov
loop
lahf
out
mov
dec
scas
aam
add
push
inc
mov
xor
shl
ret
fsubr
ins
fisttp
shl
psrlw
mov
jae
jnp
daa
out
loopne
mov
fmul
call
mov
lahf
(bad)
jmp
sub
scas
ror
xchg
(bad)
pop
sub
mov
mov
pop
fmul
rcr
imul
stos
ja
jmp
clc
popf
cmp
imul
iret
xchg
mov
inc
jp
cmc
mov
mov
xor
test
and
(bad)
pop
dec
test
pop
adc
mov
cs
sub
push
xor
cmp
adc
push
dec
ja
and
cmp
inc
jl
gs
xchg
jno
jbe
mov
or
push
inc
push
mov
sbb
stc
adc
repnz
pop
adc
xchg
dec
cwde
vminsd
stc
push
das
daa
int
daa
cmc
icebp
push
xchg
cli
xchg
pusha
sbb
pop
xor
xchg
test
les
cdq
pop
iret
sub
mov
mov
pop
jl
sub
add
push
imul
setns
fs
cmp
ficomp
mov
int3
jbe
pusha
or
dec
sahf
jge
fwait
xor
sahf
pop
inc
shl
popw
movs
movs
inc
jbe
fst
pop
psubsb
iret
loop
push
inc
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ins
adc
add
mov
inc
or
add
or
add
add
or
add
add
loope
sub
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jno
push
pop
je
dec
dec
cmp
ins
cs
outs
bound
js
jo
add
add
cmp
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
aaa
cmp
xor
sub
xor
xor
das
xor
das
xor
sub
aaa
cmp
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
jo
dec
cmp
imul
outs
arpl
outs
je
inc
cmp
cs
popa
xor
popa
bound
sub
sub
xor
xor
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
xor
xor
xor
inc
cmp
inc
inc
cmp
inc
inc
xor
js
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
xor
xor
xor
xor
inc
cmp
inc
inc
cmp
inc
inc
xor
js
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
inc
and
push
imul
and
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
arpl
xor
sub
sub
sub
xor
arpl
cmp
and
push
data16
jne
outs
je
inc
cmp
cs
popa
xor
popa
bound
sub
sub
xor
xor
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
adc
or
push
js
in
pop
imul
adc
push
and
and
dec
inc
pop
adc
adc
fst
fs
and
or
dec
and
and
test
adc
fld
mov
mov
mov
mov
cdq
lahf
(bad)
sti
dec
imul
scas
stos
into
xor
test
not
sbb
push
aaa
aas
mul
sti
nop
push
push
dec
repnz
popf
add
push
jle
mov
add
sar
jo
push
and
cmps
dec
mov
xor
leave
aas
push
test
pop
into
rol
mov
add
sar
jo
push
and
jmp
ror
rcr
in
pop
mov
xor
leave
test
inc
xchg
dec
out
test
pop
into
rol
addr16
fild
call
adc
loopne
or
test
iret
imul
(bad)
out
ror
adc
dec
(bad)
fcmovb
cmp
lods
mov
push
inc
xchg
or
in
cmp
aad
arpl
push
das
pop
mov
mov
arpl
call
xchg
sub
and
lods
shr
test
(bad)
jne
(bad)
outs
(bad)
jle
imul
push
mov
imul
cli
repz
sub
inc
(bad)
xchg
cmc
(bad)
(bad)
xchg
cld
jno
sbb
inc
sub
nop
call
adc
fidivr
jge
ret
xor
mov
idiv
push
sbb
jge
clc
xchg
fs
nop
cwde
cwde
sub
mov
into
pop
xlat
adc
sbb
scas
pop
mov
sub
jge
rol
mov
xor
cmp
shl
es
scas
int3
inc
scas
mov
in
sub
out
sub
ds
cld
outs
mov
jecxz
mov
pop
leave
push
cmp
mov
mov
stos
add
mov
push
push
cmps
outs
(bad)
popf
inc
xchg
fmul
repz
mov
ror
cmps
int
sbb
cmps
cwde
retf
jae
or
push
pop
popa
push
inc
jl
cli
test
jno
pop
xchg
jns
push
jnp
xor
ins
loope
imul
cdq
(bad)
sbb
inc
jo
(bad)
int3
pop
xchg
in
push
lods
jl
sub
loope
jg
in
add
scas
cs
cdq
das
dec
sbb
push
mov
jns
test
pop
xor
pop
or
or
ror
retf
(bad)
fbstp
data16
cmps
and
out
push
ins
inc
cmc
mov
scas
lods
inc
repnz
(bad)
ret
in
and
cmp
xor
and
ins
jbe
imul
xchg
in
popa
inc
xchg
xchg
int
and
je
cmp
xchg
jecxz
mov
repnz
xchg
xchg
adc
or
(bad)
fs
fadd
(bad)
xlat
pop
mov
int
rcr
js
mov
jp
cmp
sbb
repnz
sahf
xchg
mov
inc
inc
add
(bad)
dec
mov
mov
dec
nop
xchg
xchg
sub
in
ficomp
loop
lods
mov
xchg
adc
xor
fs
dec
and
pop
xchg
jge
sbb
or
call
fwait
sub
retf
out
stos
pop
and
or
pop
cli
jecxz
in
pop
ins
mov
jnp
xor
jecxz
jno
test
xor
jl
cmps
mov
addr16
add
pop
mov
jb
and
push
mov
mov
xchg
outs
sub
jbe
jg
mov
and
mov
jge
pop
jmp
test
adc
ss
push
(bad)
icebp
out
cmp
aam
lock
das
mov
sub
out
rol
ss
in
xlat
ss
mov
vcvtps2dq
ins
scas
lahf
aas
jnp
das
clc
rol
rol
outs
fnstsw
imul
scas
(bad)
cwde
mov
movs
and
data16
call
dec
inc
jmp
test
lahf
popf
xchg
ds
pop
aad
mov
xor
jecxz
out
fwait
data16
ja
sbb
fnsave
movs
bound
int
gs
mov
jge
pop
pop
jp
sub
ins
mov
or
loop
pop
xchg
dec
mov
(bad)
out
pop
xchg
and
and
push
pop
add
pop
lahf
sub
fmul
je
fimul
pop
out
mov
stc
popf
xchg
adc
and
inc
js
cmp
sahf
ds
neg
push
test
mov
stos
sub
mov
push
aam
gs
je
dec
(bad)
enter
cmp
xor
xchg
popa
sub
aaa
lods
push
jecxz
dec
arpl
cdq
jnp
cmp
outs
push
xchg
adc
mov
jne
in
mov
out
sbb
(bad)
cli
jns
dec
loopne
hlt
mov
inc
fbld
pop
popa
fwait
cwde
cdq
xor
icebp
(bad)
mov
inc
push
data16
mov
mov
movs
cmp
aad
in
hlt
hlt
les
inc
and
cmp
jae
sub
mov
xchg
sub
(bad)
mov
mov
jno
imul
movs
iret
pop
mov
les
mov
popf
pop
jnp
pop
imul
xchg
adc
loop
adc
push
mov
rcl
adc
cmp
rcr
push
lock
cwde
aas
es
call
mov
popf
cmps
push
stos
push
jo
jae
out
cmps
shl
push
iret
push
std
in
mov
xor
lahf
mov
ja
out
xor
pop
je
leave
xchg
cmp
cmc
mov
imul
lods
outs
sbb
push
push
inc
inc
jle
cmc
popa
cmp
adc
bound
movs
ins
mov
pop
jo
sub
cld
cmps
or
ret
pop
popa
rcr
subps
mov
pop
lahf
fnstenv
leave
mov
pop
lahf
cmps
and
aam
and
mov
pop
xor
retf
aam
aam
neg
and
fsub
(bad)
int
aas
(bad)
aam
jmp
call
std
sbb
out
adc
cmps
inc
add
ds
mov
lock
(bad)
mov
js
add
jl
pop
push
mov
aas
mov
push
aam
test
rcl
jge
aad
test
das
mov
ds
adc
popa
dec
pop
fldenv
repnz
lea
cmc
or
adc
cs
addr16
jp
push
jl
mov
cmp
or
scas
mov
adc
cld
jge
jno
inc
jmp
mov
lock
nop
sbb
pop
js
repz
scas
inc
mov
fwait
xchg
call
cld
fldenv
cwde
dec
pop
lods
in
jbe
add
aas
addr16
jl
call
lahf
out
pop
ins
shr
daa
jmp
pop
mov
push
and
(bad)
sbb
mov
ret
sar
sbb
ret
imul
xor
fild
or
xchg
xor
dec
mov
mov
jae
scas
pop
je
cmp
stc
push
inc
ror
stos
cmp
addr16
xchg
mov
leave
movs
je
jb
jne
sub
add
jmp
pop
mov
sbb
push
or
mov
popf
cmp
ins
popf
dec
inc
jmp
adc
in
fisttp
sbb
dec
mov
push
sub
mov
fst
cmp
mov
ja
into
push
aad
mov
fistp
sbb
(bad)
lahf
shr
aaa
dec
in
mov
jge
in
jle
push
sbb
lock
pop
(bad)
repz
sbb
stos
xchg
sti
dec
hlt
(bad)
(bad)
stos
cs
fistp
cmp
pop
cmc
stc
push
or
xor
or
das
iret
xlat
jno
lods
ins
or
cmp
cmps
mov
gs
shr
fwait
lods
sbb
mov
bound
or
adc
outs
mov
inc
addr16
shr
sbb
test
ss
popa
sbb
aaa
push
scas
movs
dec
push
fld
popa
jl
sub
(bad)
repnz
pop
stos
or
sbb
xchg
xchg
loop
xchg
adc
icebp
jecxz
push
cmp
and
mov
cmps
dec
int3
pushf
xlat
scas
add
cwde
push
jae
cmp
push
jge
add
push
mov
leave
stc
hlt
into
retf
and
cld
jl
stos
or
cdq
jl
pop
repnz
hlt
push
or
push
pop
pop
fadd
jge
cwde
mov
stos
mov
push
xor
sti
inc
repnz
add
mov
jg
imul
(bad)
mov
add
or
daa
push
mov
push
mov
arpl
stos
cdq
mov
jecxz
test
data16
xlat
ret
lea
xor
push
cmp
call
jns
jns
xor
xlat
lock
pop
ins
add
jne
data16
push
xor
or
push
xchg
or
ins
inc
lods
xor
xor
mov
pop
pusha
lods
jg
xor
int
lds
jne
sub
mov
mov
mov
and
clc
rcl
push
jg
pop
cmp
push
das
inc
stc
or
and
adc
test
and
push
jmp
or
mov
(bad)
fcom
pusha
ins
jle
mov
inc
fcomp
ret
mov
cmc
popa
ss
mov
cwde
in
stc
mov
cld
pop
pop
push
jecxz
scas
jle
xor
(bad)
dec
xor
call
push
fwait
cdq
xor
cwde
inc
jecxz
iret
or
mov
outs
dec
pop
mov
cli
cmc
push
or
adc
(bad)
(bad)
adc
mov
out
sbb
int
fst
iret
push
sbb
stos
dec
mov
movs
aas
js
xlat
push
cdq
aaa
lods
inc
(bad)
movs
out
in
cmp
dec
ret
jecxz
(bad)
rcr
aas
pushf
mov
fwait
lods
sbb
mov
and
inc
sahf
rcr
adc
mov
out
adc
cdq
out
rcl
pop
pop
adc
mov
nop
sar
add
mov
inc
jae
aad
fistp
mov
or
outs
(bad)
jg
pop
out
imul
jecxz
xlat
int3
xor
jb
xor
stos
retf
dec
sbb
mov
xlat
inc
mov
jle
test
dec
lods
or
lds
xor
jns
cs
scas
in
adc
sub
je
cmp
jge
pop
icebp
ret
xor
mov
push
jl
pusha
call
fstp
jmp
cmp
pop
and
jo
imul
jnp
adc
mov
imul
or
cmp
data16
lods
leave
xor
dec
nop
stos
jne
(bad)
dec
lods
pop
inc
pushf
pop
in
pusha
xor
adc
dec
pop
pop
data16
clc
pop
pushf
enter
(bad)
mov
ret
mov
pop
popa
xor
lahf
or
shl
jae
mov
jae
(bad)
ds
add
mov
fcom
pusha
push
xor
and
mov
scas
(bad)
mov
cmp
add
enter
xchg
pop
xchg
mov
adc
icebp
(bad)
push
in
dec
xor
ins
xor
aaa
push
mov
cmps
rcr
pop
push
adc
bound
das
shl
outs
push
lods
cli
mov
fild
ds
loop
ins
jl
pop
jno
jmp
outs
int3
pushf
jno
(bad)
ficomp
int3
pop
iret
call
jb
jl
adc
pop
iret
dec
jb
adc
jo
push
and
ds
jmp
jae
sub
dec
bound
ror
ror
in
and
jae
sbb
dec
jb
popf
fs
cmp
push
and
mov
jo
push
and
leave
inc
call
or
push
sub
dec
rol
outs
cmp
into
rol
icebp
mov
add
ror
ror
mov
(bad)
fs
mov
push
cs
fcmovu
bound
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
xor
add
add
add
add
adc
add
add
sub
and
add
add
add
pop
add
or
add
or
add
or
pop
sbb
add
push
add
add
add
xor
add
add
add
add
adc
add
add
add
push
add
sub
push
sub
or
add
and
add
sub
add
or
sub
add
push
add
mov
add
sub
pop
add
push
outs
mov
add
sub
sub
add
outs
mov
add
sub
xor
add
add
xor
add
jle
add
add
inc
jle
add
add
pop
sub
or
adc
sub
and
add
add
adc
push
push
add
push
jae
add
or
add
or
and
add
or
sub
pop
sub
jle
add
add
add
add
add
add
adc
or
add
add
xor
add
add
add
add
adc
push
add
push
sub
add
xor
add
add
add
add
add
add
add
sub
add
or
add
sub
add
push
add
add
or
add
add
adc
add
add
add
add
add
add
xchg
add
sub
add
add
outs
add
pop
outs
push
add
or
pop
outs
pop
add
or
push
outs
or
add
sub
add
inc
add
or
add
outs
or
add
outs
or
add
sub
add
add
sldt
or
into
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
adc
add
xor
add
add
add
add
adc
add
add
push
add
or
add
xor
add
add
add
add
adc
add
add
pop
add
or
add
xor
add
add
add
add
jle
add
add
sbb
add
sub
adc
add
or
add
add
add
sbb
add
sub
adc
add
sbb
add
push
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
adc
add
sbb
add
pop
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
add
add
jb
add
jo
sbb
add
jl
add
add
add
add
sub
add
add
add
add
add
jb
add
jo
sbb
add
jl
add
add
add
add
sub
add
xor
loop
add
or
add
add
adc
add
push
add
add
outs
push
add
or
les
add
jle
add
add
sub
or
add
add
add
sub
add
or
add
or
jb
add
jo
lea
and
add
jae
add
or
and
add
or
add
or
add
add
add
sub
add
or
and
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
or
or
add
or
add
or
add
or
or
add
or
add
or
or
add
add
add
sub
add
or
add
or
sub
add
push
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
or
add
add
push
add
add
outs
sub
add
add
add
adc
push
add
push
add
sub
adc
add
or
add
adc
add
add
or
das
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
rol
pop
add
or
add
xor
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
or
das
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
push
add
add
pop
add
or
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
sub
adc
add
sbb
add
adc
add
jle
add
or
or
push
add
sub
jle
add
or
push
add
sub
add
aaa
add
or
add
add
jae
add
or
cmp
add
add
add
push
sub
add
sbb
add
and
add
add
add
add
add
add
add
or
jnp
add
add
cmp
add
fimul
add
sub
add
or
sub
add
add
add
add
add
sbb
add
add
add
adc
push
add
add
adc
jae
add
or
add
add
or
add
sub
add
or
add
or
add
jnp
add
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
inc
add
or
outs
inc
add
or
outs
and
add
and
add
or
outs
and
add
pop
outs
dec
add
or
outs
and
add
sub
add
outs
dec
add
or
outs
and
add
adc
pop
sub
push
sub
add
or
add
or
outs
and
add
jb
add
jo
dec
add
or
outs
and
add
adc
add
adc
or
outs
and
add
adc
pop
adc
adc
push
add
or
pop
outs
push
add
or
outs
and
add
push
outs
push
add
or
outs
and
add
pop
outs
push
add
or
outs
and
add
push
outs
push
add
or
outs
add
push
pop
outs
dec
add
or
outs
add
push
sub
add
outs
dec
add
or
outs
add
push
adc
and
add
add
push
sub
add
or
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
add
adc
or
outs
add
push
adc
pop
adc
adc
push
add
or
pop
outs
push
add
or
outs
add
push
sbb
add
or
outs
add
push
pop
outs
push
add
or
outs
add
push
push
outs
push
add
or
outs
sub
add
pop
outs
dec
add
or
outs
sub
add
sub
add
outs
dec
add
or
outs
sub
add
adc
and
add
add
push
sub
add
or
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
add
adc
or
outs
sub
add
adc
pop
adc
adc
push
add
or
pop
outs
push
add
or
outs
sub
add
sbb
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
push
outs
push
add
or
outs
sub
add
jb
add
jo
add
fs
push
sbb
jae
add
or
add
or
outs
sub
add
adc
and
add
add
rol
add
sub
add
or
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
and
add
add
and
push
add
or
pop
outs
push
add
or
outs
sub
add
sbb
add
or
outs
sub
add
sub
add
outs
dec
add
or
outs
sub
add
push
jb
add
jo
pop
add
or
add
outs
pop
add
or
outs
sub
add
outs
pop
add
or
outs
pop
add
or
outs
sub
add
pop
outs
pop
add
or
outs
sub
add
adc
and
inc
add
add
dec
add
or
outs
dec
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
and
sub
or
pop
outs
push
add
or
outs
sub
add
sbb
add
or
outs
sub
add
push
outs
push
add
or
outs
add
push
adc
pop
xor
cmp
add
sub
add
or
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
xor
pop
sub
add
adc
outs
push
add
or
outs
add
push
pop
or
add
or
outs
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
sub
add
outs
pusha
add
or
outs
xor
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
xor
add
sub
add
outs
bound
add
add
add
push
adc
and
pushf
add
add
dec
add
or
outs
dec
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
xor
add
pop
or
add
or
outs
xor
add
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
sub
add
outs
pusha
add
or
outs
xor
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
xor
add
sub
add
outs
bound
add
add
add
push
adc
and
pushf
add
add
dec
add
or
outs
dec
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
xor
add
pop
or
add
or
outs
xor
add
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
sub
add
outs
pusha
add
or
outs
xor
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
xor
add
sub
add
outs
bound
add
add
add
push
adc
pop
js
pushf
add
add
dec
add
or
outs
dec
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
xor
add
pop
or
push
add
or
outs
xor
add
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
add
push
pop
outs
pop
add
or
outs
add
push
sub
add
outs
pusha
add
or
outs
add
push
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
add
push
sub
add
outs
bound
add
add
add
push
adc
and
add
add
dec
add
or
outs
dec
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
add
push
pop
adc
add
or
outs
add
push
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
sub
add
outs
pusha
add
or
outs
cmp
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
cmp
add
sub
add
outs
bound
add
add
add
push
adc
and
pushf
add
add
dec
add
or
outs
dec
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
cmp
add
pop
adc
add
or
outs
cmp
add
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
sub
add
outs
pusha
add
or
outs
cmp
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
cmp
add
sub
add
outs
bound
add
add
add
push
adc
pop
outs
and
add
or
outs
dec
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
cmp
add
pop
adc
add
or
outs
cmp
add
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
sub
add
outs
pusha
add
or
outs
cmp
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
cmp
add
sub
add
outs
bound
add
add
add
push
adc
and
pushf
add
add
dec
add
or
outs
dec
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
cmp
add
pop
adc
add
or
outs
cmp
add
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
add
push
pop
outs
pop
add
or
outs
add
push
sub
add
outs
pusha
add
or
outs
add
push
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
add
push
sub
add
outs
bound
add
add
add
push
adc
and
pushf
add
add
dec
add
or
outs
dec
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
add
push
pop
adc
add
or
outs
add
push
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
inc
add
push
pop
outs
pop
add
or
outs
inc
add
push
sub
add
outs
pusha
add
or
outs
inc
add
push
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
inc
add
push
sub
add
outs
bound
add
add
add
push
adc
and
pushf
add
add
dec
add
or
outs
dec
add
or
outs
inc
add
push
jb
add
jo
dec
add
or
outs
inc
add
push
adc
pop
inc
pop
sbb
push
add
or
pop
outs
push
add
or
outs
inc
add
push
pop
adc
push
add
or
outs
inc
add
push
jb
add
jo
arpl
add
add
add
push
push
outs
pop
add
or
outs
inc
add
push
sub
add
outs
pusha
add
or
outs
inc
add
push
outs
add
or
outs
inc
add
push
outs
add
or
outs
inc
add
push
outs
add
or
outs
and
add
outs
add
or
outs
inc
add
push
outs
add
or
outs
add
push
outs
add
or
outs
inc
add
push
outs
add
or
outs
sub
add
outs
add
or
outs
inc
add
push
adc
pop
xor
aas
add
add
dec
add
or
outs
dec
add
or
outs
inc
add
push
jb
add
jo
dec
add
or
outs
inc
add
push
adc
and
sub
push
add
or
pop
outs
push
add
or
outs
inc
add
push
pop
pop
outs
push
add
or
outs
inc
add
push
pop
outs
dec
add
or
outs
inc
add
push
sub
add
outs
dec
add
or
outs
inc
add
push
adc
and
push
sub
add
or
add
or
outs
inc
add
push
jb
add
jo
dec
add
or
outs
inc
add
push
adc
add
adc
or
outs
inc
add
push
adc
pop
adc
adc
push
add
or
pop
outs
push
add
or
outs
inc
add
push
sbb
add
or
outs
inc
add
push
pop
outs
push
add
or
outs
inc
add
push
push
outs
push
add
or
outs
inc
add
push
pop
outs
dec
add
or
outs
inc
add
push
sub
add
outs
dec
add
or
outs
inc
add
push
adc
and
add
add
dec
add
or
outs
dec
add
or
outs
inc
add
push
jb
add
jo
dec
add
or
outs
inc
add
push
adc
pop
nop
sub
add
adc
outs
push
add
or
outs
inc
add
push
pop
sbb
add
or
outs
inc
add
push
push
outs
push
add
or
adc
and
add
inc
and
add
sub
add
adc
outs
add
or
pop
outs
push
push
jb
add
jo
pop
add
or
add
outs
pop
add
or
adc
and
add
add
mov
push
add
or
pop
outs
imul
add
or
outs
inc
add
push
outs
add
or
outs
add
or
outs
inc
add
push
outs
add
or
outs
add
or
outs
inc
add
push
outs
add
or
outs
add
or
outs
add
push
outs
add
or
outs
add
or
outs
cmp
add
outs
add
or
outs
add
or
outs
cmp
add
outs
add
or
outs
add
or
outs
cmp
add
outs
add
or
outs
add
or
outs
add
push
outs
add
or
outs
add
or
outs
xor
add
outs
add
or
outs
add
or
outs
xor
add
outs
add
or
outs
add
or
outs
xor
add
outs
add
or
outs
add
or
outs
add
push
outs
add
or
outs
add
or
outs
sub
add
outs
add
or
outs
add
or
outs
sub
add
outs
add
or
jb
add
jo
dec
add
or
push
outs
push
add
add
outs
imul
or
outs
inc
add
push
push
outs
ins
add
or
outs
inc
add
push
outs
ins
add
or
push
outs
ins
add
or
outs
ins
add
or
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
outs
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
outs
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jo
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
jno
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jb
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
jae
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
je
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
jne
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
add
add
push
outs
jbe
add
sub
add
adc
add
pushf
add
add
add
add
outs
add
push
pop
outs
ja
add
add
add
push
outs
js
add
jb
add
jo
sub
add
push
xor
add
add
push
outs
jp
add
jb
add
jo
jnp
add
add
add
push
outs
jl
add
add
add
push
outs
jl
add
pusha
add
add
push
outs
jl
add
pusha
add
add
push
outs
jl
add
pusha
cmp
add
add
outs
add
push
outs
jge
add
sbb
sbb
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
jb
add
jo
arpl
add
add
add
push
outs
jge
add
pop
or
sub
outs
xor
add
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
jb
add
jo
arpl
add
add
add
push
outs
jge
add
pop
rdpmc
sub
outs
xor
add
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
jb
add
jo
arpl
add
add
add
push
outs
jge
add
pop
adc
sub
outs
xor
add
push
outs
pop
add
or
outs
add
push
pop
outs
pop
add
or
outs
add
push
jb
add
jo
arpl
add
add
add
push
outs
jge
add
pop
sub
dec
add
add
push
outs
jp
add
add
add
push
push
outs
pop
add
or
add
jo
add
push
pop
adc
jle
add
sub
add
add
push
outs
jp
add
jb
add
jo
jnp
add
add
add
push
push
outs
jg
add
sub
sub
add
xor
add
add
add
out
add
add
or
pop
outs
add
outs
add
or
pop
or
adc
or
sub
add
or
add
sub
add
adc
add
add
add
push
add
sub
add
push
sub
add
sub
add
add
sub
add
jnp
add
sub
add
add
push
outs
jbe
add
sub
add
sub
add
add
aaa
add
or
outs
pop
add
push
sub
add
xor
add
add
add
add
add
sub
add
add
add
or
jnp
add
add
cmp
add
fimul
add
sub
add
or
sub
add
add
add
add
add
sbb
add
add
add
adc
add
bound
add
xor
add
add
add
or
adc
and
add
inc
and
add
sub
add
pop
outs
add
or
pop
outs
push
adc
and
add
add
add
add
or
outs
imul
xchg
add
add
or
pop
outs
imul
or
jb
add
add
or
push
outs
ins
add
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
adc
add
jle
add
add
adc
add
push
je
imul
add
add
push
push
add
add
adc
add
and
dec
inc
add
add
add
pop
or
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
or
mov
imul
add
add
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
addr16
jnp
call
push
call
push
xchg
add
add
push
or
add
add
or
or
add
add
add
or
or
and
add
adc
dec
or
add
add
mov
jnp
push
add
add
or
or
or
or
add
add
pop
or
add
add
add
or
add
add
or
or
add
add
or
or
add
or
add
add
xchg
add
add
add
or
add
add
or
add
add
or
or
add
or
sub
pop
or
jae
ror
add
add
mov
mov
leave
or
leave
or
call
or
icebp
or
test
push
add
add
add
push
leave
or
leave
or
call
psubsb
push
add
leave
or
add
push
add
psubsb
push
add
psubsb
push
add
adc
add
add
adc
adc
add
add
adc
add
add
call
adc
add
add
add
mov
add
adc
or
add
adc
adc
adc
or
add
add
adc
adc
push
add
stos
or
outs
adc
add
add
ror
add
add
adc
mov
adc
or
mov
adc
or
add
mov
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
adc
fld
aaa
add
and
push
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
add
add
add
add
adc
push
add
xor
inc
add
push
add
add
add
lods
add
add
add
add
add
add
add
cmc
add
add
cmc
add
add
add
add
add
add
add
aaa
add
ins
add
mov
test
add
add
in
xor
add
add
xor
add
and
xor
add
aas
push
xor
add
pop
push
xor
add
add
lahf
push
cmc
add
add
push
dec
add
add
xchg
add
add
add
add
add
or
add
add
adc
dec
add
add
add
inc
add
add
push
sbb
add
add
inc
add
add
inc
add
sbb
add
or
add
add
sbb
add
add
inc
add
add
adc
mov
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
adc
adc
dec
add
add
adc
add
add
mov
add
or
add
inc
add
add
push
or
add
add
add
push
or
sub
add
add
push
or
add
inc
add
add
adc
aad
pushf
add
pusha
inc
add
add
add
or
add
add
sbb
add
add
add
pop
add
inc
add
add
inc
add
mov
pop
add
inc
add
add
add
add
inc
add
add
inc
add
add
add
inc
add
add
inc
add
mov
pop
add
inc
add
add
inc
add
mov
or
sbb
add
add
add
add
inc
add
add
inc
add
add
add
add
add
adc
aad
pushf
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
sbb
add
add
add
sbb
add
add
inc
add
add
inc
add
add
add
repz
add
add
add
add
inc
or
add
add
and
inc
or
add
add
add
inc
or
stc
add
mov
add
data16
add
lods
push
add
add
inc
or
add
push
add
and
inc
or
add
add
add
inc
or
add
push
add
and
inc
or
add
add
add
add
add
inc
or
add
add
add
add
and
inc
or
add
add
add
inc
or
add
mov
add
pop
add
in
push
add
add
inc
or
add
add
push
add
and
inc
or
sub
adc
or
add
add
inc
or
xor
push
add
and
inc
or
add
inc
or
add
add
and
inc
or
add
add
add
mov
xor
push
add
and
inc
or
ins
push
add
add
inc
or
add
adc
and
inc
or
add
mov
add
add
in
add
mov
add
clc
add
lods
push
add
add
inc
or
push
xor
push
add
and
inc
or
push
cmp
pop
add
push
add
add
inc
or
push
xor
push
add
and
inc
or
cmp
sbb
in
push
add
add
inc
or
xor
push
add
and
inc
or
cmp
sbb
or
add
add
inc
or
xor
push
add
and
inc
or
cmp
sbb
sub
add
add
inc
or
add
add
and
inc
or
dec
push
add
add
inc
or
add
add
and
inc
or
add
add
add
jecxz
push
add
add
add
icebp
push
pop
add
add
add
add
pop
pop
add
add
add
and
pop
add
add
add
add
add
pop
add
add
add
add
add
aaa
pop
add
cwde
pop
add
add
add
dec
pop
pop
add
pushf
pop
add
add
add
popw
pop
add
add
add
add
add
pop
add
add
add
xchg
pop
pop
add
add
add
add
or
add
adc
ret
add
sar
add
add
or
or
aas
add
add
adc
mov
add
aas
add
add
push
sbb
add
add
add
add
mov
inc
add
add
push
or
les
das
add
add
or
les
das
add
pop
add
add
push
sbb
add
add
pop
add
add
inc
add
add
pop
add
add
add
repz
add
add
add
add
add
add
mov
add
add
add
add
and
add
add
popa
add
add
add
add
add
and
add
add
and
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
pop
add
add
pop
pop
add
add
push
pop
add
add
pop
pop
add
add
push
pop
add
add
pop
pop
add
add
push
pop
add
add
pop
pop
add
add
push
pop
add
add
pop
pop
add
add
push
pop
add
add
pop
pop
add
add
push
pop
add
add
fimul
add
add
pop
pop
add
add
push
pop
add
add
mov
or
add
add
add
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
test
iret
add
test
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
cmp
cmc
or
add
add
or
add
add
or
add
add
add
add
add
add
add
pop
or
add
jg
hlt
add
(bad)
or
add
mov
add
add
scas
or
add
add
or
add
mov
sbb
sbb
push
add
add
add
pop
add
add
add
add
jno
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
push
sbb
dec
add
push
daa
add
add
push
fld
mov
add
add
add
add
add
add
aas
add
add
add
add
add
add
inc
add
add
add
add
add
add
daa
add
add
add
add
add
add
push
popa
add
add
push
fld
mov
add
add
push
push
(bad)
add
add
add
daa
add
add
jp
sbb
paddusw
jno
daa
push
fld
sbb
inc
push
xor
add
add
add
mov
add
add
add
add
add
sete
add
adc
adc
sub
and
fld
sub
inc
adc
adc
add
add
sbb
dec
add
adc
dec
add
add
add
add
add
add
adc
sbb
rcl
adc
sbb
ficom
adc
dec
add
adc
add
out
adc
add
add
adc
adc
add
add
adc
add
add
adc
add
add
adc
imul
cmp
adc
add
fld
pop
add
add
add
add
add
push
add
jns
push
add
add
add
adc
push
cmp
sub
cmp
xchg
add
push
mov
inc
adc
add
add
add
add
add
push
cdq
add
add
add
add
adc
mov
packuswb
test
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
cs
add
or
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
inc
add
cmc
add
jecxz
mov
pusha
add
add
pop
add
arpl
push
add
add
jecxz
lahf
add
add
add
add
add
add
add
add
add
add
add
es
add
add
cmc
add
add
es
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
and
fild
add
add
add
add
push
add
add
add
pop
add
add
add
add
fild
add
rol
add
mov
add
add
add
add
mov
es
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
cmc
add
and
add
cmc
add
and
add
cmc
add
add
cmc
add
add
es
add
cmc
add
add
add
push
loopne
arpl
es
add
cmc
add
add
add
push
add
push
add
add
add
add
add
add
push
and
push
add
add
add
add
add
add
push
inc
add
add
and
add
add
and
add
add
add
add
sbb
add
add
add
sbb
add
add
add
es
add
add
pop
add
add
add
add
add
add
add
add
or
add
add
jae
add
push
add
pop
add
lds
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
adc
sub
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
jno
add
jbe
jbe
add
xchg
add
add
add
add
add
add
add
add
add
add
pop
outs
add
add
pop
jae
add
fiadd
js
add
out
jge
add
repz
add
add
pop
add
add
or
or
or
or
or
or
or
or
or
add
inc
or
test
or
or
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
inc
add
add
add
xor
add
inc
add
add
add
xor
add
add
add
add
aaa
add
add
cmp
add
push
add
add
add
cmp
add
push
add
add
add
add
add
add
add
inc
add
add
add
add
mov
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
call
add
add
add
xchg
add
add
add
add
or
leave
or
add
add
add
add
in
add
mov
add
add
adc
add
add
add
add
xor
add
add
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
inc
add
adc
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
inc
outs
jb
xor
push
imul
jo
ins
imul
xor
push
gs
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
push
je
je
jae
imul
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
imul
add
arpl
add
inc
jb
popa
je
dec
popa
imul
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
inc
outs
jb
xor
addr16
push
je
je
jae
imul
pop
inc
outs
jb
xor
ins
pop
push
je
je
jae
imul
gs
inc
outs
jb
xor
push
popa
ins
jne
add
je
push
je
je
jae
imul
jb
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
inc
imul
imul
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
imul
inc
outs
ins
jo
outs
outs
je
push
imul
imul
gs
push
imul
gs
push
imul
imul
jae
popa
ins
jne
add
imul
outs
add
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
push
gs
inc
outs
js
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
outs
outs
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
push
jb
addr16
jae
inc
popa
jb
pop
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
gs
add
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
pop
dec
popa
bound
xor
pop
dec
popa
bound
xor
bound
add
je
dec
popa
bound
add
je
dec
popa
bound
add
popa
bound
aaa
add
je
dec
popa
bound
aaa
add
je
dec
popa
bound
aaa
add
popa
bound
cmp
addr16
dec
popa
bound
cmp
jae
je
dec
popa
bound
cmp
pop
dec
popa
bound
cmp
addr16
dec
popa
bound
cmp
jae
je
dec
popa
bound
cmp
push
popa
outs
gs
add
popa
outs
gs
xor
addr16
push
popa
outs
gs
xor
jae
je
push
popa
outs
gs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
inc
push
outs
js
pop
inc
push
outs
js
add
je
inc
push
outs
js
add
je
inc
push
outs
js
add
outs
je
jb
jae
inc
jne
je
outs
xor
ins
imul
fs
add
gs
pop
push
imul
ins
xor
outs
popa
add
je
jb
gs
outs
outs
outs
arpl
outs
add
imul
outs
xor
push
fs
push
add
imul
outs
xor
push
fs
push
add
je
outs
outs
xor
ins
imul
gs
inc
outs
js
pop
push
gs
inc
push
add
gs
add
imul
outs
xor
push
popa
imul
outs
xor
push
popa
imul
outs
xor
push
gs
inc
outs
js
add
je
outs
outs
xor
push
jb
addr16
jae
inc
popa
jb
add
gs
xor
dec
popa
bound
xor
dec
popa
bound
xor
dec
popa
bound
xor
dec
popa
bound
xor
gs
add
gs
aaa
add
gs
cmp
dec
popa
bound
cmp
push
popa
outs
gs
xor
push
popa
imul
outs
xor
inc
push
outs
js
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
ins
je
jb
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
je
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
outs
je
arpl
imul
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
push
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
je
dec
popa
imul
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
imul
ins
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
jb
ja
outs
add
ins
outs
jb
push
outs
imul
imul
add
jp
inc
add
outs
je
imul
jae
outs
fs
popa
jns
jne
add
je
dec
outs
je
jb
popa
ins
add
je
outs
outs
inc
popa
jae
add
je
inc
jne
outs
push
imul
pop
push
jb
outs
jae
popa
jb
outs
je
jae
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
popa
fs
pop
push
imul
pop
push
popa
bound
fs
jae
je
push
popa
bound
outs
jo
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
outs
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
jae
je
dec
jne
je
ins
imul
pop
inc
popa
jb
dec
jb
outs
add
je
bound
arpl
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
popa
je
jne
je
outs
inc
jo
gs
jb
outs
arpl
addr16
inc
ins
popa
je
jo
gs
jb
outs
arpl
jae
je
inc
outs
jb
gs
imul
je
je
ins
add
je
inc
ins
popa
je
je
ins
add
je
push
imul
push
jns
je
ins
inc
outs
ins
outs
jb
add
je
inc
arpl
gs
popa
jo
imul
add
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
push
gs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
je
push
push
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
push
imul
pop
push
imul
outs
jbe
pop
inc
push
fs
push
add
fs
inc
push
fs
push
add
ins
outs
jbe
pop
push
gs
inc
push
add
fs
push
gs
inc
push
add
ins
outs
jbe
pop
inc
ins
imul
pop
inc
ins
imul
jb
add
arpl
ins
outs
je
addr16
push
gs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
jo
dec
gs
popa
addr16
outs
js
inc
imul
jae
ins
je
push
push
gs
inc
push
add
je
push
popa
ins
jne
add
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
je
inc
outs
popa
bound
add
jae
gs
cs
gs
push
bound
jno
gs
add
bound
jae
outs
outs
jae
add
gs
je
add
je
gs
outs
outs
jae
add
outs
jae
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
push
gs
imul
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jae
gs
cs
push
imul
imul
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
imul
ja
inc
jo
ins
imul
xor
push
je
je
jae
imul
gs
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
inc
outs
jb
xor
jb
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
push
gs
jne
arpl
cs
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jb
jae
popa
ins
and
addr16
and
arpl
inc
jb
jae
popa
ins
and
addr16
and
arpl
gs
add
add
inc
push
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
dec
add
ins
add
arpl
push
adc
add
je
inc
add
js
xor
add
inc
add
je
je
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
cmovb
jne
je
je
outs
add
xor
add
push
add
outs
add
jb
add
jae
inc
add
jb
xor
add
inc
add
popa
add
imul
add
outs
add
add
outs
add
add
arpl
and
dec
add
add
jne
ins
add
add
outs
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
outs
add
ins
add
add
sbb
popa
add
add
inc
add
je
je
outs
add
xor
add
inc
add
add
imul
add
js
xor
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
or
outs
add
ins
add
add
add
xor
add
ins
add
imul
push
add
jno
jne
imul
add
add
add
add
add
add
add
add
add
add
add
das
inc
add
outs
add
add
je
imul
and
je
outs
add
add
add
jbe
add
add
add
add
xor
je
popa
add
ins
add
jae
push
add
and
arpl
outs
add
outs
add
arpl
je
imul
add
add
add
dec
inc
add
outs
add
add
je
imul
and
je
outs
add
add
jb
jns
jae
je
popa
add
add
popa
add
popa
add
add
add
jbe
add
add
add
add
daa
inc
add
add
imul
add
add
add
arpl
arpl
outs
add
outs
add
add
add
add
add
add
add
add
jb
outs
add
imul
add
add
arpl
arpl
outs
add
outs
add
add
outs
add
ins
add
add
outs
add
add
add
add
outs
add
outs
add
add
outs
add
add
add
and
add
je
popa
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
and
popa
add
popa
add
outs
add
add
jae
imul
and
add
data16
add
add
je
and
popa
add
arpl
outs
add
outs
add
add
daa
inc
add
arpl
outs
add
outs
add
add
outs
add
add
outs
add
outs
add
add
add
cmp
add
add
add
je
imul
and
push
add
jno
jne
imul
add
add
add
add
add
add
add
add
add
add
add
sub
je
jo
cmp
das
add
add
ja
ja
add
outs
add
add
add
add
outs
add
das
add
inc
and
and
dec
add
je
add
outs
add
je
and
inc
add
outs
add
add
je
imul
and
push
add
jno
jne
imul
add
add
add
add
add
cmp
imul
outs
add
jae
inc
add
jo
ins
add
arpl
popa
add
add
outs
add
add
add
add
outs
add
jb
arpl
add
add
push
add
add
add
push
add
outs
add
add
add
ret
push
pop
pop
dec
fwait
out
adc
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
add
add
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
and
add
xor
push
adc
add
adc
add
and
xor
push
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
and
add
xor
adc
add
add
add
push
adc
add
add
add
add
add
push
adc
add
adc
and
adc
add
add
sub
sub
push
adc
sub
adc
add
add
xor
xor
push
adc
xor
adc
add
add
cmp
cmp
push
adc
cmp
adc
add
add
inc
add
inc
push
and
add
inc
add
add
add
add
and
sub
add
sub
xor
add
xor
cmp
add
cmp
inc
add
adc
push
adc
add
adc
add
adc
add
add
dec
add
add
dec
add
add
dec
add
adc
add
add
push
sbb
add
add
inc
add
add
sub
add
sub
add
add
add
add
push
add
pop
add
pop
add
adc
adc
add
add
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
add
add
add
add
add
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
or
jns
inc
outs
jb
jae
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
or
adc
add
add
and
add
xor
add
xor
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
sub
test
push
adc
add
pop
add
add
adc
pop
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
sbb
and
add
add
and
add
sbb
adc
add
add
or
rol
and
add
adc
and
add
or
and
add
adc
and
add
sbb
and
add
sbb
and
xor
xor
push
and
add
sub
and
sbb
push
and
add
cmp
and
adc
add
add
or
adc
add
push
and
add
and
and
add
adc
adc
adc
adc
adc
adc
adc
add
add
and
add
pop
add
sub
add
sub
xor
add
xor
cmp
add
cmp
inc
push
add
or
push
add
add
adc
add
and
and
add
adc
add
xor
adc
adc
push
dec
popa
bound
xor
add
add
push
dec
popa
bound
xor
add
add
push
dec
popa
bound
xor
add
add
push
dec
popa
bound
xor
add
add
or
jb
addr16
jae
inc
popa
jb
add
or
add
inc
jne
je
outs
xor
add
gs
inc
outs
js
add
adc
add
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
push
push
imul
push
add
or
arpl
outs
js
add
adc
add
popa
imul
outs
xor
add
add
push
push
popa
outs
gs
xor
add
add
push
dec
popa
bound
cmp
add
add
push
dec
popa
bound
cmp
add
add
push
dec
popa
bound
aaa
add
or
add
dec
popa
bound
add
or
add
dec
popa
bound
xor
add
sbb
add
inc
pop
and
add
adc
adc
dec
add
add
dec
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
sbb
add
add
add
and
add
adc
sbb
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
sub
add
or
cs
gs
imul
pop
add
and
and
sbb
sbb
and
add
sbb
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
pop
xor
xor
xor
xor
add
add
and
xor
arpl
bound
sub
sub
sub
cmp
arpl
aaa
xor
arpl
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
sbb
add
push
imul
jo
ins
imul
xor
add
add
or
arpl
jae
data16
add
sbb
add
ds
add
add
add
xor
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
