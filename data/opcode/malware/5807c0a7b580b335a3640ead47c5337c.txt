pusha
mov
add
add
add
add
add
add
add
add
add
add
mov
add
movs
mov
add
add
add
add
jmp
dec
iret
mov
xchg
adc
adc
add
pusha
or
fnstenv
mov
push
xchg
call
(bad)
xor
xchg
jle
mov
pop
ja
sbb
jecxz
in
pop
aad
stos
xor
loopne
nop
add
add
mov
jne
sub
idiv
jl
adc
lds
push
jo
pop
mov
adc
push
jo
sbb
dec
sbb
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
add
add
add
and
add
push
add
adc
add
and
dec
inc
add
add
push
add
movs
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
sub
add
add
add
jle
add
fs
add
mov
add
sbb
add
add
add
jmp
add
call
add
add
add
add
repz
add
add
pop
add
add
adc
add
add
add
push
add
add
add
les
add
sbb
add
add
add
add
add
add
add
cmp
add
add
add
add
sar
add
add
add
jnp
add
push
cmp
add
mov
add
ret
inc
add
add
add
loop
add
xchg
inc
add
add
add
adc
inc
add
add
add
dec
add
add
add
add
add
add
jb
add
add
add
scas
add
add
add
jecxz
add
xor
add
add
add
add
add
add
jnp
xor
cmp
cmp
sub
sub
sub
sub
xor
aaa
cmp
bound
jge
cmp
outs
fs
gs
dec
jae
dec
pop
ins
arpl
jo
xor
dec
inc
xor
dec
push
jne
inc
ja
pop
xor
fs
push
jns
push
xor
pop
push
xor
inc
jae
inc
inc
ja
push
dec
jae
push
dec
jb
pop
ins
xor
je
bound
jne
push
js
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
cs
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jne
je
imul
add
sbb
dec
mov
inc
xchg
mov
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
out
add
pop
add
in
mov
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
xlat
clc
mov
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
fistp
jns
loopne
inc
mov
inc
pop
(bad)
pop
mov
leave
addr16
xchg
jle
shr
std
add
clc
std
xlat
adc
aas
hlt
imul
js
lods
pop
jecxz
cld
ret
jg
pop
jecxz
jecxz
mov
jg
sar
lock
std
xchg
hlt
mov
lods
pop
jecxz
mov
xchg
(bad)
sbb
stc
sbb
(bad)
idiv
push
mov
mov
pop
jmp
pop
inc
jecxz
test
xchg
xchg
out
inc
or
popa
std
fs
fst
mov
scas
adc
(bad)
xor
mov
outs
test
cld
pop
pop
mov
and
mov
(bad)
adc
and
in
xlat
imul
mov
icebp
fisttp
jmp
jmp
clc
xor
repz
clc
or
int
sub
test
xor
out
push
mov
(bad)
iret
add
jg
jl
fcom
outs
lods
lahf
call
push
std
inc
mov
pop
jmp
fisub
add
jle
lock
(bad)
imul
add
cld
aaa
call
jmp
mov
mov
jg
sti
fldcw
lahf
std
sbb
sti
jecxz
stc
fbstp
xlat
add
cmc
sub
xor
stc
scas
std
pop
cld
sbb
xlat
outs
dec
arpl
sbb
inc
loopne
fisttp
stc
mov
dec
(bad)
mov
sub
test
clc
push
scas
std
scas
cmc
imul
mov
adc
mov
mov
addr16
adc
addr16
scas
fcos
in
jecxz
mov
jmp
aas
sti
loop
jmp
neg
std
cli
std
iret
push
jp
loope
ds
mov
mov
movs
(bad)
fnstcw
clc
fwait
idiv
jnp
fwait
idiv
sti
iret
jg
(bad)
addr16
jle
(bad)
addr16
in
das
clc
ins
sti
lahf
in
(bad)
idiv
iret
(bad)
mov
mov
cmps
(bad)
addr16
out
fdivr
in
xchg
cld
cs
iret
jle
fbstp
push
push
addr16
out
fdivrp
in
idiv
mov
aad
in
psubw
mov
jp
(bad)
in
scas
(bad)
jg
js
(bad)
fnstcw
fucomi
jg
retf
out
cmc
aas
sti
and
idiv
sti
sbb
jmp
cli
lahf
std
sahf
(bad)
cli
lahf
std
stos
xchg
iret
into
aas
jmp
imul
jno
push
dec
push
fldl2t
imul
push
idiv
cmc
aas
sti
xchg
jg
(bad)
addr16
dec
pop
std
iret
mov
mov
push
scas
sti
lahf
std
ficomp
aas
sti
xor
(bad)
fstp
fcomip
sti
hlt
aas
sti
bnd
iret
(bad)
xchg
fbstp
jmp
neg
cld
add
iret
(bad)
fsubr
in
pop
sahf
cmc
aas
jnp
fdivrp
in
mov
and
(bad)
fstp
idiv
mov
dec
push
std
iret
jle
pop
aam
in
mov
sub
(bad)
fstp
aad
in
loopne
(bad)
fnstcw
sti
cmp
mov
sti
lahf
jg
push
jg
(bad)
sar
(bad)
call
pop
push
jg
std
and
lahf
std
scas
jg
push
jg
cmp
jno
iret
inc
aas
mov
mov
fnstcw
fwait
jmp
std
iret
jle
lahf
(bad)
in
dec
clc
sar
lahf
std
scas
jg
push
jg
stc
lahf
sar
in
(bad)
jae
lahf
sub
mov
in
dec
std
mov
lahf
std
ret
(bad)
(bad)
std
xchg
idiv
jnp
xchg
idiv
sti
ud0
aad
in
xlat
std
imul
std
pop
jg
push
addr16
(bad)
(bad)
in
daa
(bad)
cmps
(bad)
addr16
(bad)
fdivr
in
jmp
std
iret
(bad)
cld
mov
(bad)
(bad)
in
pop
std
mov
(bad)
(bad)
in
mov
std
int3
aas
sar
in
aaa
std
xchg
lahf
std
and
sti
jmp
mov
jmp
mov
dec
idiv
sti
cmp
(bad)
addr16
in
scas
cld
out
lahf
cmp
std
repz
mov
loopne
out
jg
retf
(bad)
xchg
(bad)
addr16
mov
push
cli
lahf
std
jne
push
jg
scas
cld
cmp
iret
bnd
(bad)
fcos
imul
idiv
sti
arpl
ret
(bad)
addr16
div
jmp
std
iret
sahf
(bad)
addr16
iret
dec
(bad)
mov
xchg
std
iret
dec
jmp
fcomip
aas
sti
icebp
jmp
fcomip
aas
cmp
pop
sti
lahf
std
jnp
push
push
imul
repnz
addr16
scas
call
sti
lahf
std
mov
pop
(bad)
jnp
mov
clc
push
idiv
imul
(bad)
addr16
in
iret
stc
xor
fstp
call
cli
xlat
in
jg
pop
cld
jp
iret
scas
jg
(bad)
addr16
das
cld
or
(bad)
std
iret
(bad)
icebp
fbld
cmc
aas
sti
outs
jg
(bad)
addr16
neg
(bad)
mov
cmps
(bad)
fld
aas
repz
aas
sti
(bad)
out
fdivr
in
jg
popf
cli
lahf
std
mov
outs
xchg
idiv
sti
stos
jg
(bad)
addr16
jg
(bad)
fnstcw
fwait
cld
ret
mov
jg
popf
(bad)
addr16
inc
jno
mov
in
outs
push
(bad)
sti
pop
push
pop
cli
imul
push
std
fisttp
sti
lahf
std
fistp
jle
(bad)
addr16
mov
fucomip
imul
(bad)
fldcw
cli
mov
(bad)
(bad)
in
iret
cld
dec
push
div
jg
(bad)
in
in
std
iret
(bad)
rcl
cmc
aas
sti
mov
std
iret
(bad)
mov
std
outs
push
jg
aad
cmc
aas
sti
scas
mov
jg
(bad)
fldcw
sti
idiv
sti
mov
cmp
sti
xchg
(bad)
addr16
mov
(bad)
std
iret
(bad)
sti
repz
addr16
mov
sar
iret
dec
cs
lahf
std
jae
(bad)
addr16
push
mov
lahf
std
loope
push
in
scas
mov
scas
(bad)
fnstcw
test
jmp
sar
addr16
in
outs
cli
cmp
popf
cld
mov
aas
lods
call
inc
hlt
aas
sti
aas
dec
(bad)
addr16
pop
(bad)
in
mov
(bad)
(bad)
cmc
aas
sti
neg
std
adc
lahf
sub
mov
in
dec
sti
sar
lahf
jge
addr16
aas
sti
jnp
int3
(bad)
addr16
cld
fscale
iret
(bad)
mov
repz
aas
sti
cmc
inc
pop
fdivr
ins
hlt
pop
idiv
sti
pop
call
mov
addr16
stc
pop
fdivrp
in
fstp
(bad)
in
aaa
cld
stos
sti
lahf
std
add
fnstsw
not
idiv
sti
out
(bad)
(bad)
in
mov
std
xchg
mov
div
push
(bad)
addr16
(bad)
popf
std
iret
(bad)
jmp
out
sti
div
aas
sti
pop
(bad)
fdivrp
addr16
(bad)
(bad)
in
mov
pop
sti
lahf
std
push
call
mov
jg
(bad)
fnstcw
retf
(bad)
icebp
(bad)
addr16
test
std
iret
jle
jg
(bad)
fstp
iret
idiv
sti
cmp
(bad)
jmp
jmp
addr16
mov
stc
xlat
sti
lahf
std
sub
sar
(bad)
fnstcw
jnp
out
idiv
sti
mov
jg
jg
(bad)
in
ja
(bad)
cli
lahf
std
popf
push
mov
cld
cmps
std
iret
(bad)
std
jmp
jg
imul
std
iret
dec
push
fcomip
aas
sti
bnd
jg
lahf
cld
(bad)
std
iret
(bad)
push
mov
loopne
cmc
aas
sti
jae
jns
mov
(bad)
(bad)
in
pop
(bad)
xchg
std
iret
fdivrp
stos
(bad)
addr16
(bad)
fdivrp
in
pop
inc
mov
scas
imul
call
fnstsw
jbe
xlat
cld
mov
lahf
std
adc
out
jmp
mov
pop
mov
arpl
iret
(bad)
repnz
(bad)
fld
outs
aam
in
lahf
std
lea
popa
(bad)
sti
cmp
mov
jle
jge
std
cs
daa
movs
jg
jle
cli
not
repnz
fisubr
mov
out
push
jge
fwait
(bad)
pop
stos
cli
or
repz
(bad)
mov
in
jle
pop
dec
sti
mov
jbe
sti
ins
call
jecxz
mov
stc
or
cmp
mov
jecxz
out
loope
jle
(bad)
div
pop
imul
mov
mov
xor
std
jbe
in
outs
mov
or
adc
cmc
xor
imul
add
lods
cmp
iret
fcomip
out
push
mov
leave
neg
std
jmp
xchg
push
pop
adc
int
rcr
mov
fisubr
imul
xlat
sti
xchg
push
aad
lods
adc
repz
jecxz
outs
std
sbb
imul
hlt
jmp
inc
in
mov
add
xor
jg
ins
stc
mov
clc
sbb
(bad)
mov
lock
pop
int
and
call
fldcw
loope
dec
fldcw
sar
(bad)
cmp
inc
jae
fisttp
fwait
sbb
pop
popa
jmp
add
jg
loope
jg
fcomp
in
mov
sti
fcmovnb
iret
push
clc
xchg
out
shr
cmp
icebp
xor
mov
cs
cdq
outs
jle
fcomip
xlat
cli
pop
push
outs
in
loop
pop
sti
mov
repz
sti
popf
dec
sbb
push
mov
mov
lods
jnp
iret
outs
(bad)
jmp
push
mov
jle
(bad)
aaa
cli
ins
jle
(bad)
aaa
cli
lods
jle
fcomip
aaa
dec
sub
std
cmc
push
rcl
lods
les
cld
or
jg
(bad)
aaa
std
ins
rcr
push
mov
aaa
clc
int
fcomip
dec
inc
(bad)
mov
mov
push
mov
(bad)
cs
hlt
in
clc
jmp
adc
mov
push
jg
in
icebp
fdivrp
int
mov
repnz
jmp
jle
fistp
add
arpl
fbstp
repnz
jmp
aas
mov
(bad)
in
clc
ins
icebp
leave
dec
jg
popf
outs
jle
(bad)
mov
jg
inc
loopne
stc
cmp
out
mov
lods
jg
fistp
add
stc
in
jle
mov
outs
std
imul
mov
std
out
dec
cmc
or
mov
(bad)
cmp
cld
out
std
outs
stc
cmp
xchg
mov
xor
pop
xchg
aas
push
mov
pop
dec
imul
rol
inc
outs
(bad)
cmp
cs
call
mov
mov
jne
out
jg
(bad)
dec
mov
cld
pop
dec
mov
std
mov
outs
(bad)
cmp
ss
cld
popf
cld
std
outs
icebp
(bad)
out
(bad)
cmp
idiv
mov
cld
add
(bad)
out
ret
outs
(bad)
pop
jne
stc
sbb
mov
sbb
aaa
call
(bad)
(bad)
mov
(bad)
mov
sbb
pop
jno
cli
mov
jno
call
jg
outs
(bad)
jmp
daa
sti
push
mov
pop
mov
loopne
fnstsw
das
std
ss
dec
aas
inc
(bad)
outs
(bad)
jmp
jmp
cmp
in
fs
mov
mov
fist
lahf
mov
xchg
js
psubsw
pop
jecxz
outs
mov
pusha
out
add
stc
jne
lea
mov
jmp
dec
ror
fldcw
mov
jns
mov
dec
mov
pop
call
mov
xlat
clc
int
mov
(bad)
cld
stos
mov
clc
mov
(bad)
in
test
pop
jg
push
adc
xlat
mov
fdivrp
dec
jle
pop
and
mov
mov
xor
mov
sar
jle
imul
adc
call
cli
jmp
imul
cld
pop
out
cld
cwde
jle
fisttp
std
sbb
mov
or
fist
xchg
cld
sbb
jle
fucomip
xlat
dec
jle
aas
in
pushf
std
call
call
daa
mov
mov
pop
cli
imul
mov
mov
(bad)
jp
(bad)
scas
mov
jecxz
clc
cmc
(bad)
scas
pop
out
aaa
stc
xor
mov
cmc
dec
xor
jle
in
clc
and
mov
pop
adc
int3
scas
call
(bad)
cli
mov
(bad)
cli
jmp
std
sti
cmp
push
xor
add
dec
std
push
mov
std
sbb
outs
mov
or
scas
loop
inc
in
fild
nop
dec
fnstsw
xchg
pop
push
stc
xor
mov
jle
mov
or
std
sbb
jg
arpl
jmp
data16
sti
das
cli
mov
cld
cmc
dec
pop
jecxz
std
xor
(bad)
ja
mov
sub
xchg
fild
out
movhlps
jg
mov
(bad)
test
sar
xchg
add
dec
cld
leave
dec
out
inc
mov
jg
pusha
js
inc
sbb
lea
inc
jne
xlat
and
jmp
call
imul
rcr
xor
cmc
imul
mov
scas
add
cmc
jmp
pushf
loope
out
jmp
mov
jg
jp
(bad)
outs
into
jg
and
xlat
outs
lock
mov
std
mov
xlat
outs
dec
jg
mov
xlat
lahf
scas
jg
mov
xlat
fbld
xlat
aas
mov
cmc
outs
jmp
dec
cmc
jg
pop
ja
scas
(bad)
xlat
xchg
mov
mov
cmps
hlt
out
mov
mov
mov
std
popf
jg
iret
or
xchg
call
cli
mov
(bad)
loop
cli
repz
xchg
sub
sti
jmp
jbe
fild
mov
sar
mov
(bad)
mov
xlat
pop
(bad)
jg
xchg
mov
dec
jg
adc
imul
pop
jmp
scas
jns
(bad)
cli
xlat
hlt
scas
(bad)
xlat
jp
jg
ja
xlat
mov
jmp
scas
xor
fist
cli
jge
lods
cmp
ja
mov
icebp
imul
(bad)
mov
adc
cmc
ins
(bad)
jmp
push
mov
call
out
pop
jg
int
pop
les
sahf
mov
icebp
pop
mov
std
pop
jg
std
cmc
aaa
add
xlat
outs
repz
mov
std
fimul
imul
sub
mov
std
sbb
fidivr
dec
pushf
cld
xor
call
imul
inc
rcl
repnz
loop
(bad)
sti
push
idiv
out
loope
arpl
fidivr
mov
retf
pop
jmp
scas
repz
(bad)
sbb
(bad)
jne
jae
imul
idiv
jnp
mov
jae
js
mov
imul
jg
(bad)
mov
push
fnstcw
jecxz
repz
jae
mov
jnp
idiv
xor
(bad)
call
jnp
jle
(bad)
jnp
idiv
xor
fucomip
xlat
cld
mov
(bad)
fidivr
pop
xor
ficomp
int
js
fdivr
(bad)
xor
and
repz
stc
xor
loopne
cmp
xor
jmp
sti
xlat
clc
push
mov
jmp
dec
jg
pop
jecxz
cld
mov
sti
loope
std
imul
std
fcmovbe
shl
sti
pop
int3
mov
ffreep
mov
outs
stc
jmp
neg
std
xlat
inc
das
pop
mov
scas
repz
out
mov
jne
cmc
inc
pop
pop
jp
dec
std
jne
aad
mov
call
pop
jecxz
std
jne
xchg
(bad)
mov
adc
adc
adc
cmp
jne
out
scas
or
xchg
std
mov
sbb
sti
or
outs
stc
(bad)
jo
aas
lahf
pop
(bad)
sub
inc
(bad)
repz
std
xor
adc
cmc
scas
jno
call
stc
sbb
jp
stc
or
clc
sub
mov
and
inc
mov
adc
popf
add
mov
fiadd
out
neg
fdiv
jl
ins
ret
fs
cld
scas
fdivr
scas
imul
fimul
mov
out
inc
dec
enter
sub
fist
(bad)
mov
jg
jmp
arpl
imul
(bad)
sti
mov
fld
test
pop
repz
(bad)
xor
not
cli
in
jg
call
cmp
repz
or
jmp
sti
xlat
clc
mov
cmp
inc
hlt
out
out
imul
addr16
repz
shr
push
scas
cmc
aaa
repz
aaa
(bad)
sti
ud0
call
outs
lock
std
pop
push
scas
icebp
aas
inc
dec
fdivr
clc
imul
mov
pop
hlt
imul
mov
repnz
jmp
(bad)
xor
(bad)
mov
aad
icebp
sar
imul
cld
fidivr
cld
fsubr
imul
mov
mov
(bad)
call
out
mov
mov
aas
dec
lahf
inc
aas
imul
fcomp
pop
sti
into
scas
or
mov
cmp
mov
jg
fbstp
stc
mov
repz
xchg
mov
xor
fidivr
icebp
imul
pop
clc
imul
mov
and
out
pop
lahf
cld
shl
leave
out
imul
dec
mov
mov
lahf
xchg
cld
cmp
out
pop
sahf
int3
jg
loop
cld
sbb
(bad)
pop
imul
mov
(bad)
push
cli
idiv
jecxz
cmps
xchg
jmp
scas
std
daa
repz
out
clc
inc
jg
fcomip
xlat
sbb
sbb
mov
outs
jg
(bad)
jmp
(bad)
xor
stc
outs
(bad)
xor
sar
jg
imul
repnz
push
(bad)
mov
mov
push
mov
jg
scas
rcl
out
jg
jge
jg
call
sbb
cs
sti
lahf
sar
xchg
(bad)
sbb
call
std
inc
cld
in
aas
cli
imul
mov
std
mov
lahf
cld
cmps
or
xlat
clc
xor
stc
scas
std
imul
xchg
jg
stc
repz
lds
jg
dec
imul
loop
jmp
(bad)
cld
pop
loop
jmp
xor
jecxz
ret
scas
cmc
mov
xor
scas
and
out
sti
xor
jg
mov
sar
(bad)
sub
(bad)
fbld
(bad)
jg
xlat
cld
aaa
jg
jg
xlat
cld
(bad)
jg
dec
jg
inc
mov
popf
pop
jmp
mov
jmp
scas
std
sti
cld
pop
jg
cmp
mov
daa
jns
lock
push
jg
aaa
hlt
out
jg
imul
hlt
out
out
(bad)
out
inc
(bad)
(bad)
imul
jmp
idiv
pop
aam
xlat
movs
jg
cmp
(bad)
jmp
out
outs
dec
(bad)
(bad)
jg
cmc
scas
mov
xor
fcomip
imul
mov
(bad)
mov
out
cmc
imul
mov
(bad)
sbb
mov
inc
aas
jg
aas
call
iret
outs
sub
jns
dec
mov
mov
adc
adc
cld
jne
cmps
pop
(bad)
(bad)
jmp
inc
inc
(bad)
dec
std
pop
(bad)
outs
inc
(bad)
dec
(bad)
mov
call
ret
sahf
jg
dec
inc
jg
inc
aas
mov
lea
hlt
(bad)
jg
xlat
cli
(bad)
scas
icebp
fstp
pop
mov
iret
call
mov
call
inc
pop
call
xlat
js
inc
xor
scas
mov
cmps
push
pop
push
xchg
pop
jecxz
bound
dec
jne
mov
push
imul
icebp
push
push
shr
(bad)
cmp
xlat
hlt
jmp
mov
shr
int
scas
repz
mov
out
scas
icebp
pop
out
in
jne
sahf
jg
rcl
jmp
sti
imul
mov
movs
(bad)
mov
xor
xchg
pop
and
retf
mov
dec
scas
jg
repnz
repnz
dec
das
jmp
scas
mov
pop
pop
dec
push
xlat
mov
out
cwde
pop
xchg
aas
popf
std
sbb
std
scas
mov
jp
dec
jg
(bad)
jne
pop
push
push
push
dec
stos
mov
leave
scas
sar
mov
sahf
adc
adc
mov
retf
stos
pop
je
mov
retf
jne
into
fidiv
pop
adc
(bad)
repnz
stos
stos
imul
adc
enter
sbb
retf
icebp
mov
jmp
movs
loop
ret
cld
sbb
jp
fistp
mov
fcomp
jp
sub
push
clc
stos
shl
stos
inc
sbb
das
or
adc
jecxz
(bad)
test
out
sar
hlt
pop
rcr
fwait
pop
mov
fld
int
movs
call
mov
clc
out
dec
and
pop
jecxz
clc
mov
jmp
fnstenv
mov
lea
clc
xor
push
scas
and
mov
fs
lods
pop
jae
idiv
lahf
sub
lods
add
daa
lds
push
scas
icebp
jb
xchg
aad
or
iret
stos
ins
idiv
cld
imul
jge
imul
add
hlt
js
and
ins
jle
adc
mov
mov
bound
stc
repnz
cmps
outs
push
inc
mov
mov
cmp
jmp
push
mov
jg
cmp
lea
mov
stos
inc
mov
call
cs
mov
retf
jns
stc
inc
pop
xchg
jmp
jecxz
jne
mov
dec
mov
aaa
pop
dec
movs
push
pop
xchg
aas
mov
fwait
jmp
hlt
push
(bad)
cmp
push
jecxz
stc
cmp
popf
imul
jnp
jne
xchg
in
fwait
mov
pop
(bad)
push
jg
call
inc
(bad)
mov
mov
jmp
ds
(bad)
loopne
mov
cmp
lahf
pop
xlat
push
xchg
scas
dec
(bad)
not
push
pop
scas
mov
push
push
gs
imul
cmp
stos
cmps
ds
(bad)
mov
inc
mov
cli
(bad)
mov
out
test
lea
jns
das
das
push
push
mov
jg
std
mov
xchg
xchg
xchg
shl
xor
(bad)
in
test
mov
cmp
repz
je
fwait
iret
mov
pop
xchg
cmc
push
std
imul
jo
mov
xchg
add
shl
dec
inc
sbb
shr
push
adc
mov
stos
fwait
mov
fldcw
ja
push
in
cld
mov
mov
jp
push
xchg
outs
fcmovne
jbe
cld
inc
or
scas
jno
dec
jle
cdq
stos
(bad)
cld
cld
cld
cmps
imul
jg
(bad)
jmp
pop
out
stos
rep
jbe
mov
aad
pop
mov
xlat
pop
int
xchg
push
sbb
pop
iret
cmps
repz
jle
jns
xor
std
loopne
enter
sub
cs
pop
jecxz
lds
dec
out
retf
mov
mov
mov
pop
fs
jge
mov
pop
arpl
mov
pushf
lahf
pop
xlat
out
jle
pop
mov
imul
ins
cmp
test
scas
jno
dec
xchg
xlat
out
xchg
ror
call
mov
aad
mov
adc
cmps
retf
pop
arpl
cmc
cmps
fistp
mov
mov
pop
arpl
das
retf
mov
mov
in
push
xchg
pop
aam
out
mov
xor
inc
shl
call
mov
mov
lock
mov
repnz
out
in
int
pop
popf
pop
xchg
je
mov
jmp
movs
stc
jmp
rcr
pop
jecxz
fnstsw
stos
xchg
sub
xlat
cmc
rsm
jmp
and
jmp
imul
lods
xchg
stc
mov
jnp
xchg
mov
push
aas
test
xchg
stc
jno
sub
pop
arpl
ret
das
test
sub
pop
(bad)
mov
pop
(bad)
retf
stc
xor
cmp
(bad)
imul
push
jmp
pop
xor
dec
xlat
xor
icebp
dec
pop
push
push
adc
retf
pop
push
iret
les
mov
lahf
mov
and
sbb
sbb
into
retf
aad
xchg
pop
pop
push
cmc
lods
test
push
jns
add
add
out
add
mov
ins
push
je
cmp
stos
test
cmp
mov
or
dec
xchg
mov
jg
push
jmp
dec
push
xchg
add
mov
and
dec
mov
aad
and
adc
mov
jge
out
ds
cmc
mov
mov
xor
or
xchg
xor
lahf
call
pop
sbb
out
iret
test
inc
adc
popf
aad
stos
fist
stos
int3
push
scas
icebp
in
cmp
pop
sahf
push
cmc
inc
mov
jno
retf
clc
jmp
aas
sub
stos
repnz
js
aad
stos
push
stc
rep
pop
pusha
xor
mov
or
add
das
push
sbb
push
(bad)
cmps
popa
push
pop
stos
sub
jecxz
mov
test
adc
and
jo
daa
ret
add
scas
fistp
cmp
push
pop
movs
push
mov
jg
pop
repnz
lods
or
shr
add
mov
icebp
ins
jg
mov
jl
dec
div
or
ins
jmp
jecxz
push
inc
stos
outs
adc
pop
adc
imul
stos
(bad)
hlt
sbb
xor
test
outs
dec
stos
aad
rol
shr
sar
jg
mov
pop
pushf
(bad)
xor
cmp
inc
inc
jl
cmp
jl
pop
fs
in
and
lds
sub
mov
cld
fwait
xlat
pop
fst
inc
pop
mov
out
fistp
jg
inc
aam
cld
daa
out
push
add
cmp
jnp
aaa
stc
outs
pop
jg
sar
aas
repz
xchg
pop
jecxz
sar
(bad)
imul
cmc
mov
fisttp
idiv
ret
jne
mov
cmc
ret
pop
jecxz
push
sbb
rcl
sti
fld
mov
je
cmps
in
add
inc
fbld
cmp
addr16
call
pop
cli
call
push
aas
pop
rcr
xchg
iret
shl
cmps
fs
pop
inc
xchg
dec
or
xchg
mov
jno
(bad)
imul
ret
cmps
dec
jmp
ds
xor
jle
fbld
outs
hlt
(bad)
in
jmp
std
sti
sahf
push
add
mov
(bad)
in
outs
xchg
in
std
jns
adc
imul
sbb
cmps
cmps
aaa
pushf
adc
jg
mov
pop
xor
(bad)
lods
push
and
es
popf
mov
test
scas
call
fisttp
mov
stc
in
cli
std
stc
push
ins
call
fwait
loopne
out
mov
aaa
cld
es
cmp
fistp
call
dec
or
jmp
jae
or
test
jmp
push
jb
inc
iret
add
sar
mov
mov
cmp
scas
push
js
loope
xadd
jg
clc
in
icebp
jmp
imul
je
add
(bad)
jl
fld
(bad)
sti
inc
jg
call
cmp
gs
scas
js
pop
test
cdq
add
jns
lea
lock
adc
ds
(bad)
cmp
cmp
nop
call
mov
cld
mov
jmp
cdq
adc
jecxz
add
pop
push
mov
cmp
or
sar
lock
add
call
mov
mov
pop
jl
stos
mov
out
push
cmp
sti
hlt
sbb
(bad)
xchg
push
dec
ins
add
or
push
js
cs
(bad)
xchg
inc
mov
push
ja
cmp
jmp
mov
cmp
call
fbld
daa
hlt
or
xchg
jle
test
push
idiv
add
shr
(bad)
sbb
push
(bad)
cmp
dec
adc
inc
fldenv
cwde
loop
cli
dec
cmp
adc
push
cmp
cmp
arpl
mov
push
jge
add
loope
push
cmp
jmp
loopne
sbb
xor
cld
iret
add
sub
jbe
lods
inc
jl
out
popa
call
mov
lahf
cmps
or
sahf
shr
sbb
fcom
lock
gs
and
lahf
daa
fmul
fs
and
xor
in
jae
dec
out
adc
shl
neg
inc
and
cmp
xor
lahf
mov
(bad)
xchg
adc
es
mov
fsub
add
or
lods
neg
push
js
adc
xor
dec
cwde
in
push
(bad)
int
div
sti
aaa
mov
loope
jnp
movs
loop
sbb
or
and
mov
dec
test
and
adc
or
clc
and
jecxz
mov
stc
fist
or
ja
bound
xor
push
add
adc
jg
es
fcomp
sub
sbb
push
xor
in
xor
mov
or
out
call
xchg
icebp
cmp
lahf
push
pop
fisttp
jp
xor
daa
pushf
jbe
outs
ds
adc
out
push
mov
out
in
in
sub
xlat
push
paddd
scas
cmp
mov
jge
mov
cmp
(bad)
mov
enter
pop
daa
loope
fistp
cmp
cmps
aam
push
mov
cmp
jle
(bad)
sub
mov
fsubr
repz
fmul
cli
jge
mov
retf
hlt
xchg
sti
add
sbb
dec
inc
call
mov
and
out
inc
inc
mov
mov
rol
cmp
push
ds
neg
call
cwde
xchg
pop
std
or
cld
test
cmp
js
sbb
test
psubsb
jecxz
cmp
mov
xchg
shl
cmp
mov
iret
(bad)
clc
or
retf
rcr
dec
mov
in
popa
xor
mov
test
(bad)
stc
pop
hlt
sbb
mov
pop
mov
dec
sub
call
je
clc
mov
and
mov
xor
sub
into
daa
cld
xlat
mov
add
in
sub
rol
xor
xchg
adc
xchg
sbb
inc
(bad)
adc
cs
fsub
cmp
jle
stc
push
dec
lods
nop
add
jle
cmp
push
dec
lock
fmul
(bad)
add
or
cmp
stc
cmp
adc
mov
mov
jge
inc
pop
jmp
sbb
jp
xlat
add
call
adc
test
sub
pop
jge
cmps
jbe
fild
xor
test
call
mov
icebp
inc
jle
call
(bad)
nop
or
in
xlat
adc
inc
fld
fs
sbb
mov
fbld
mov
dec
clc
int
fadd
rcl
and
jmp
jo
inc
xchg
or
xchg
mov
ja
fistp
push
(bad)
mov
dec
or
push
lock
mov
in
sbb
les
into
arpl
push
cmp
dec
sar
inc
xchg
aam
popf
fsub
call
fisttp
pop
push
add
rol
rol
dec
sbb
sub
jbe
adc
push
mov
xor
les
xchg
leave
add
in
add
iret
fistp
rol
xchg
sahf
jno
ror
jnp
mov
sub
retf
jo
nop
mov
push
out
outs
sub
inc
jo
push
xchg
out
and
xchg
cmp
sahf
xor
xchg
stos
sti
or
ds
arpl
sbb
dec
adc
inc
arpl
sub
ja
adc
pop
fucom
mov
xor
cmp
(bad)
mov
jne
mov
adc
jns
ret
adc
sbb
dec
stc
aad
out
push
sbb
add
sub
push
das
sahf
xor
cmp
cld
test
dec
(bad)
pop
cmp
bound
lds
aas
arpl
ror
aad
mov
add
pop
mov
xchg
dec
icebp
jne
daa
enter
jbe
in
sbb
fadd
mov
div
test
adc
add
call
xor
or
rol
fsubr
mov
mov
stc
push
pop
inc
loop
mov
xchg
inc
add
dec
je
(bad)
adc
add
or
and
cli
neg
(bad)
cs
push
xchg
jns
in
rcr
aaa
inc
iret
push
xor
enter
loop
cmp
mov
sub
adc
enter
push
cmp
adc
adc
push
pusha
retf
cmp
jle
push
xchg
pop
add
push
push
fild
and
dec
cmp
lahf
sbb
push
pop
lods
shr
test
jl
stos
pop
jns
dec
inc
sbb
shl
movs
adc
cmp
repnz
xchg
xchg
pop
std
sub
dec
int3
cmp
xchg
xor
out
inc
sbb
mov
es
sub
loope
jge
(bad)
or
cld
xchg
jnp
pushf
cmp
cmp
mov
inc
(bad)
out
cmps
or
movs
dec
enter
pushf
push
add
dec
cwde
dec
call
loope
jb
js
jo
xor
and
mov
out
aas
in
inc
sahf
inc
and
add
xchg
js
rol
sub
aad
adc
sahf
jno
and
or
sbb
mov
xchg
push
ret
dec
add
call
mov
mov
push
pop
xchg
aas
popa
push
inc
icebp
pusha
add
push
or
mov
mov
sti
xchg
xchg
icebp
cmp
pop
inc
cmps
fs
mov
xor
inc
and
add
sar
pop
add
loopne
int3
std
enter
inc
jmp
iret
gs
hlt
cmp
jecxz
arpl
dec
mov
ror
dec
jbe
dec
loope
or
and
(bad)
fndisi(8087
fild
dec
nop
pop
gs
ret
adc
adc
dec
nop
loopne
pop
jecxz
sti
cld
fbld
pop
inc
mov
inc
adc
icebp
add
dec
mov
lahf
jb
rcr
and
pop
aad
jne
inc
cmp
jge
add
push
xor
vmread
rol
mov
sbb
les
mov
(bad)
mov
es
xor
sub
sbb
mov
and
xor
xchg
mov
icebp
out
(bad)
call
add
stc
sub
cli
push
cmp
sub
dec
mov
and
mov
das
test
jno
popa
xchg
xchg
les
das
hlt
and
xor
leave
add
and
test
lahf
clc
push
or
push
loopne
cs
xchg
or
ffreep
dec
push
repz
icebp
xchg
and
adc
and
or
nop
imul
adc
ds
mov
cld
xchg
jo
enter
jle
(bad)
std
test
jl
mov
jae
push
mov
inc
sub
ds
add
and
and
and
add
mov
lahf
and
vmread
and
fcmovnbe
push
adc
cwde
fadd
aaa
push
sub
pop
and
aad
and
ret
popf
rol
neg
sbb
sbb
sbb
jg
movs
ret
ja
xchg
std
mov
fucom
out
inc
shl
sbb
dec
mov
enter
movs
add
mov
cmps
sbb
jg
lea
sub
cmp
add
out
and
inc
dec
icebp
mov
adc
out
adc
stos
pop
or
inc
cmp
js
or
je
add
nop
sub
sbb
clc
cmc
and
push
dec
adc
and
test
icebp
push
cmp
dec
xor
test
sbb
rcl
jecxz
leave
adc
out
xor
dec
mov
arpl
cmp
ret
loop
loopne
push
loope
fist
cwde
out
cdq
or
fisttp
ror
ret
fsubp
xor
cmps
push
fstp
repnz
enter
push
ret
cld
push
dec
mov
pusha
jbe
sbb
pop
cmp
dec
xor
rdmsr
mov
fadd
xchg
mov
ins
mov
inc
pop
and
aad
push
fldenv
inc
or
je
lahf
dec
nop
mov
dec
add
pop
in
dec
(bad)
nop
or
cs
mov
xchg
cmps
fmul
jg
jl
pop
pop
shl
and
mov
dec
xchg
es
push
mov
scas
cmp
sub
and
inc
icebp
xchg
mov
inc
jno
jecxz
nop
mov
push
(bad)
pop
mov
xor
mov
shl
cld
sbb
into
xchg
add
mov
or
adc
call
and
cmp
lock
and
push
icebp
aam
dec
mov
ret
movs
psraw
dec
fsub
and
mov
add
push
scas
sbb
or
out
icebp
jg
ss
in
pop
mov
into
mov
jnp
loope
sbb
clc
addr16
js
mov
push
cmp
(bad)
cmps
mov
and
push
stc
and
fild
stos
pusha
adc
bound
cld
rcr
and
gs
loope
retf
xor
sbb
add
sti
cmp
mov
add
xchg
fucom
(bad)
loop
dec
push
ins
xchg
xchg
mov
inc
leave
jmp
xchg
sahf
and
and
push
jmp
mov
inc
cli
sbb
les
ja
in
and
outs
nop/reserved
(bad)
and
sahf
and
popa
sub
pop
or
jmp
and
mov
adc
and
cmp
mov
loop
dec
rcl
push
mov
shl
leave
push
or
in
dec
mov
xor
loop
fisub
inc
cld
sti
dec
ds
dec
xchg
dec
loopne
fist
imul
pop
or
inc
inc
and
inc
jmp
push
lock
sti
add
addr16
arpl
aas
in
shl
push
dec
push
scas
push
jbe
push
and
mov
jmp
int
pusha
mov
cmp
and
dec
mov
ss
add
daa
pop
popf
les
jns
repnz
mov
(bad)
les
or
jg
nop
inc
leave
jmp
mov
mov
ss
push
es
mov
lea
mov
sub
cwde
data16
test
add
cmp
mov
pop
or
pop
cmp
mov
cli
fcom
and
mov
inc
jb
cmp
add
xor
rcr
fs
xchg
add
xor
jno
das
lds
and
mov
mov
pop
fcom
adc
mov
sub
shl
push
and
shl
and
push
and
mov
lods
jl
sbb
xchg
xchg
pop
push
fidivr
outs
mov
sub
out
sbb
cmp
cld
test
add
ss
sub
push
cmp
out
dec
or
pop
sbb
adc
retf
int3
loop
mov
dec
adc
retf
mov
sub
fisub
inc
fist
aas
loope
and
sub
iret
gs
or
add
or
cmp
jl
mov
mov
mov
jae
adc
(bad)
lds
cmovo
pop
mov
lds
adc
mov
xchg
inc
push
inc
call
mov
jno
jb
and
mov
clc
(bad)
js
push
sub
in
or
ror
data16
cwde
dec
loop
fisttp
sub
into
ret
sub
stos
shl
es
in
or
mov
lock
xor
test
xor
gs
retf
or
lea
outs
mov
add
shr
mov
push
mov
mov
xor
icebp
call
frstor
sub
bound
inc
push
lahf
and
mov
sub
inc
push
in
mov
lea
(bad)
iret
mov
sti
mov
mov
dec
xchg
mov
out
jno
push
inc
xchg
ficom
jmp
iret
dec
push
sbb
ds
div
outs
sbb
add
jmp
mov
add
iret
and
sbb
jge
pop
loop
push
push
jmp
ss
sub
mov
add
mov
cmp
push
ja
outs
aas
shr
jmp
sub
add
mov
icebp
xchg
lock
mov
daa
ror
dec
xchg
dec
adc
dec
mov
(bad)
retf
fcomip
leave
mov
sar
mov
test
mov
adc
and
and
inc
rcr
adc
xchg
pop
mov
in
and
data16
pusha
adc
xchg
mov
test
ss
adc
mov
xor
pop
or
jg
jnp
adc
ss
cmp
dec
(bad)
fisttp
aam
retf
mov
and
adc
xchg
int
lds
xor
outs
pusha
(bad)
imul
inc
popa
stc
adc
mov
pusha
icebp
outs
pusha
sbb
jecxz
int3
add
lods
(bad)
cmovs
sahf
mov
outs
mov
jnp
in
mov
inc
aam
(bad)
movaps
dec
mov
cmp
call
inc
bound
xchg
xchg
pusha
inc
push
data16
sub
jmp
push
and
xor
sub
add
(bad)
sbb
and
in
sbb
jl
out
dec
arpl
cmp
or
xor
jmp
test
mov
inc
fild
mov
psubw
sub
sub
out
mov
sbb
xor
add
mov
mov
add
cld
add
retf
sub
loope
or
or
mov
rol
adc
pusha
shl
(bad)
loope
jmp
pop
lea
adc
dec
add
aam
cmp
(bad)
or
(bad)
mov
call
pusha
and
sbb
pop
push
xor
xchg
retf
adc
adc
mov
sub
xor
xor
cmp
loop
jl
adc
and
jb
clc
dec
bound
mov
loop
mov
retf
sbb
pop
aas
loope
and
add
bound
mov
sbb
fsub
cmps
or
sti
sbb
mov
mov
cmp
xchg
adc
jp
loop
push
arpl
adc
sbb
cmp
jnp
add
fimul
das
(bad)
mov
mov
les
imul
push
or
mov
and
mov
movs
stc
and
push
test
mov
xor
movs
cmp
lods
test
ss
push
fadd
jne
xor
popf
adc
pop
or
xor
sbb
sbb
mov
jne
jg
lods
xchg
hlt
int3
mov
and
cmps
or
cmp
pop
ja
stc
add
arpl
test
sub
js
call
push
das
cdq
es
lods
les
push
adc
ret
out
dec
movs
add
(bad)
lahf
mov
pusha
mov
scas
cmp
adc
(bad)
ror
fcom
xor
nop
cmp
daa
dec
mov
arpl
ds
jns
mov
add
ja
(bad)
(bad)
in
loop
loop
mov
gs
xchg
jno
push
dec
mov
fidiv
sub
dec
test
and
xor
push
in
or
dec
shl
add
mov
inc
lea
fist
add
or
ins
mov
cmc
mov
xor
add
add
xchg
add
fs
cld
ror
adc
sbb
fldcw
arpl
sbb
cmps
mov
sete
leave
push
inc
out
sti
sub
adc
or
dec
mov
ds
les
adc
gs
mov
mov
movs
pop
neg
or
test
pop
jg
fsub
push
sahf
fxch
inc
outs
add
jmp
sub
cmc
aaa
mov
adc
cmp
adc
(bad)
cmpps
icebp
jmp
in
pop
or
push
push
rol
adc
adc
pop
pop
pop
jno
and
xchg
xchg
mov
xchg
out
push
inc
test
jo
(bad)
test
mov
inc
sub
jg
mov
add
sbb
sub
fmul
js
adc
inc
repz
ja
inc
and
add
lea
mov
jno
lods
daa
dec
adc
and
cmp
dec
inc
daa
(bad)
mov
add
or
lods
ror
mov
xchg
aam
les
shl
in
add
dec
xchg
push
lds
and
mov
leave
xchg
and
adc
out
mov
and
nop
pop
dec
ffreep
sbb
sub
js
ficom
sbb
pop
jle
lahf
mov
nop
test
mov
and
inc
dec
jns
xor
add
outs
ret
adc
iret
push
sub
jmp
jb
push
adc
daa
fisttp
mov
leave
call
push
cli
cdq
inc
xchg
enter
pop
cld
xchg
dec
add
sahf
icebp
cmp
sbb
jg
push
ret
sub
xchg
loop
dec
jmp
dec
inc
shr
leave
sbb
add
xchg
cmps
add
and
and
movs
or
iret
clc
sub
cmp
dec
jp
iret
mov
test
mov
in
and
add
(bad)
adc
pushf
bound
mov
cs
xchg
test
test
push
and
test
xchg
pop
es
adc
inc
es
jge
out
inc
adc
dec
xor
iret
in
fs
and
jb
mov
cwde
mov
ror
movs
test
xor
fimul
xchg
fdiv
dec
cmc
xor
mov
sub
aas
inc
xchg
mov
pusha
sub
pushf
mov
dec
push
scas
daa
cld
push
adc
inc
dec
mov
or
bound
sub
icebp
test
jb
arpl
jecxz
out
sub
cmp
stc
pop
in
cmp
xor
jmp
sti
mov
and
mov
and
sbb
cmp
jg
rol
mov
add
add
lods
lods
xor
add
dec
icebp
leave
inc
gs
add
data16
shl
and
(bad)
fs
lahf
and
lds
push
sbb
arpl
mov
js
ud1
outs
dec
push
add
dec
push
xchg
sub
(bad)
setns
cmp
or
mov
add
cmp
leave
test
inc
pop
mov
das
fsub
(bad)
mov
test
mov
std
sbb
cmps
daa
fdivr
(bad)
mov
inc
mov
daa
push
lods
lds
mov
mov
mov
fcom
dec
and
test
push
adc
jecxz
push
out
mov
jno
in
inc
pop
dec
repnz
adc
nop
jbe
sub
pop
pop
ja
out
pop
inc
adc
jge
add
inc
sub
lds
pop
sar
mov
lds
loop
popa
xor
pop
aam
jmp
les
mov
es
dec
add
inc
nop
call
cmp
loope
inc
pop
icebp
aas
dec
mov
hlt
add
dec
jl
cmp
rcl
fwait
and
mov
idiv
pop
(bad)
adc
aad
stc
dec
fdiv
jno
psubb
dec
mov
stos
or
xchg
mov
in
mov
or
aas
pop
jne
retf
pop
and
push
arpl
or
add
jb
xor
(bad)
bound
or
adc
dec
or
mov
cwde
movs
push
push
lock
mov
add
cmps
or
out
aas
add
pop
xchg
ins
lock
mov
cs
mov
add
xor
cmp
fdiv
leave
xchg
sar
inc
cmp
xchg
dec
inc
dec
xor
xchg
adc
inc
lds
xor
stc
es
pop
shr
(bad)
cld
adc
xor
pusha
dec
sub
addr16
xor
pop
adc
mov
mov
cld
call
js
push
xor
loope
and
dec
je
push
daa
sub
int3
test
xor
cmp
adc
shr
push
sti
idiv
rcl
fistp
dec
les
pop
add
jnp
xchg
cmp
jo
icebp
es
sub
lahf
and
icebp
sbb
mov
and
adc
out
cmps
dec
dec
cmps
dec
jle
lods
daa
sub
cmps
or
cmps
es
rol
stc
out
dec
jne
clc
ja
sub
jp
push
stos
mov
cwde
adc
inc
dec
sub
pop
push
jecxz
retf
and
sub
retf
xor
mov
push
jbe
bound
int
jbe
adc
leave
inc
pop
cld
cmp
sar
push
call
shl
lahf
xor
dec
js
xor
mov
ins
sahf
xor
in
push
adc
jp
jae
ror
sub
pop
dec
les
mov
jle
lods
and
add
retf
jb
mov
sub
mov
(bad)
clc
push
(bad)
pop
push
push
and
les
adc
in
add
movs
sbb
cmp
fisttp
or
je
sbb
push
push
xor
xchg
and
icebp
scas
rcl
inc
push
daa
push
sub
sub
adc
xchg
in
adc
retf
add
cmps
cld
mov
jle
xor
adc
or
sahf
iret
ins
pop
mov
adc
add
repnz
cmp
xchg
cmp
push
in
jecxz
gs
ja
sbb
xchg
push
cld
mov
pushf
mov
sub
mov
jp
in
and
mov
jno
neg
call
jne
inc
mov
add
sub
fisub
sbb
test
adc
stc
dec
loope
loope
jecxz
dec
fiadd
aaa
jp
pop
xchg
mov
lahf
sti
js
pop
mov
sbb
dec
pushf
xor
loop
add
shl
xor
jp
fadd
les
xor
mov
(bad)
push
adc
test
retf
scas
mov
ins
add
and
ret
sbb
sub
inc
stc
pusha
jo
iret
mov
mov
dec
je
test
jmp
es
dec
cld
adc
or
lahf
bnd
cmp
mov
cmp
shl
adc
gs
jmp
mov
js
push
xchg
jne
cdq
sub
jbe
mov
nop/reserved
ror
ret
xor
jnp
xor
repnz
(bad)
and
and
jo
dec
rcr
inc
mov
push
dec
les
js
pop
(bad)
rcl
cli
mov
test
dec
xchg
dec
fiadd
add
fcomp
pop
ja
jl
hlt
mov
fistp
cmp
xacquire
(bad)
call
dec
push
and
cmps
dec
jo
xchg
mov
iret
xchg
fdiv
adc
stos
cwde
addr16
pop
(bad)
adc
stc
sbb
inc
(bad)
sti
xchg
inc
sub
and
mov
dec
and
and
sub
sahf
jo
popa
pop
pop
pop
xchg
inc
xor
hlt
xchg
iret
xchg
pop
inc
xchg
sub
in
inc
and
xchg
adc
jmp
pop
push
xor
bound
pushf
and
mov
iret
add
shr
mov
jns
inc
xchg
mov
pop
fisttp
movs
cmp
push
xchg
xchg
jmp
and
(bad)
out
loopne
jge
add
pop
out
repnz
pusha
fxam
out
xor
shr
pop
es
sub
shr
ins
clc
pop
push
scas
(bad)
imul
ret
daa
icebp
or
add
xchg
rcl
pop
jecxz
sub
(bad)
xchg
xchg
lods
mov
inc
icebp
mov
std
xchg
leave
popa
xor
dec
sbb
adc
clc
outs
mov
mov
xor
xor
xchg
test
(bad)
pop
add
xchg
int3
xor
and
test
xchg
push
add
ins
test
and
inc
retf
arpl
adc
call
xchg
xchg
aaa
leave
xor
mov
in
gs
and
movs
arpl
fs
frstor
jno
test
or
sbb
leave
cmp
fmul
sahf
adc
clc
lds
mov
push
popf
xor
cmp
dec
lea
or
jnp
mov
xor
loop
cdq
add
popa
mov
frstpm(287
shr
addr16
scas
test
bound
sub
js
mov
js
mov
test
xchg
xchg
retf
add
(bad)
lods
xlat
mov
std
push
(bad)
(bad)
push
(bad)
jle
jg
jmp
into
add
sbb
in
mov
(bad)
cwde
inc
fisttp
jmp
push
xchg
fisttp
push
aaa
push
pop
cwde
or
out
add
and
clc
sbb
sbb
and
ds
pop
mov
outs
das
push
scas
sub
icebp
popa
and
xchg
mov
sub
mov
xchg
movs
mov
add
and
retf
sub
pop
and
xchg
gs
add
cmovne
push
sub
xchg
dec
leave
mov
and
and
or
inc
rcl
and
fsub
out
mov
xchg
add
sub
ins
xchg
fs
push
xor
mov
retf
leave
xchg
and
cmp
movs
in
clc
cli
clc
cld
xchg
mov
mov
inc
ret
data16
(bad)
ss
lock
repz
es
xor
in
call
adc
lds
add
jae
idiv
repz
jle
dec
mov
inc
xchg
push
adc
sub
mov
cwde
fadd
jne
mov
sbb
(bad)
(bad)
fidivr
(bad)
mov
retf
and
out
dec
stc
jge
(bad)
fs
cmps
add
jge
xchg
xchg
clc
push
xchg
(bad)
xor
das
cli
rol
loop
mov
mov
jle
adc
add
in
xor
frstor
sete
(bad)
mov
adc
lds
ret
add
sbb
adc
sahf
push
pop
inc
xor
(bad)
cmps
cld
mov
mov
inc
xchg
add
and
pop
or
dec
fwait
mov
test
mov
jmp
push
mov
out
in
add
hlt
enter
mov
loop
rcl
int3
ds
pop
movs
adc
xchg
add
dec
mov
pop
pop
cmp
push
lds
sbb
add
push
xor
hlt
std
pop
xchg
test
ret
inc
test
inc
adc
xchg
(bad)
jge
fild
mov
add
dec
nop
push
mov
loopne
jl
mov
or
lods
sbb
dec
push
cmc
cmp
cli
arpl
sbb
and
and
inc
(bad)
in
and
and
mov
xchg
or
push
add
xor
sahf
jle
shl
ds
adc
jb
inc
les
sbb
imul
or
inc
fadd
jnp
xlat
in
lds
mov
jge
ret
mov
mov
or
dec
add
pushf
nop
pop
or
test
lock
and
inc
inc
les
or
ficom
test
adc
xchg
in
jno
test
inc
test
push
les
push
loop
dec
shr
and
push
inc
push
clc
cmps
test
repnz
pusha
enter
mul
mov
out
mov
nop
dec
js
enter
jns
daa
fiadd
pop
and
push
leave
mov
or
lahf
sbb
adc
pop
or
cdq
mov
stos
in
mov
mov
add
push
(bad)
sahf
lds
fs
cmp
lea
in
mov
(bad)
cli
mov
sub
xor
pushf
outs
mov
pop
adc
popa
aam
xchg
pushf
sub
dec
push
adc
lods
jmp
jno
les
jnp
jge
or
aas
add
fbld
mov
ret
push
idiv
frstor
mov
sbb
nop
pop
sub
jge
or
test
add
and
hlt
sub
and
inc
push
pop
xor
ud1
in
iret
dec
mov
push
mov
jne
cmp
in
inc
sahf
xor
adc
rcl
xor
jle
retf
mov
out
(bad)
iret
jbe
ins
adc
add
aaa
inc
inc
adc
mov
adc
test
shr
ds
adc
(bad)
cmp
mov
add
not
sub
adc
aas
inc
adc
cs
mov
dec
xchg
and
pop
mov
sbb
je
push
mov
sub
cmps
mov
mov
adc
in
xchg
js
push
arpl
out
jmp
fbld
fs
and
xchg
mov
loopne
lods
dec
add
xchg
sub
lods
rcl
pop
cmps
les
push
rcl
jmp
popa
lods
sub
inc
and
aaa
adc
mov
das
test
inc
leave
and
loope
inc
dec
mov
mov
and
and
or
(bad)
idiv
or
test
push
push
dec
sub
adc
xor
add
push
mov
test
sbb
cmp
jno
cmp
lods
ins
cmp
and
cs
out
jg
rcr
(bad)
xlat
loop
retf
retf
(bad)
push
adc
mov
mov
in
out
repz
adc
and
xchg
int3
xor
adc
jne
jmp
and
and
mov
adc
xchg
dec
rcl
and
add
ja
jne
icebp
in
(bad)
ret
call
cs
adc
pop
cmp
mov
sbb
retf
adc
or
mov
pop
repnz
adc
nop
inc
xchg
mov
add
inc
daa
imul
sub
mov
je
push
(bad)
aaa
adc
xchg
int3
mov
mov
test
mov
hlt
inc
pop
xchg
cld
test
add
fsubr
sub
stc
daa
dec
outs
jno
and
push
mov
push
cmc
dec
mov
sub
push
xchg
ins
mov
(bad)
add
jmp
mov
loop
in
push
xor
or
adc
inc
jbe
call
sub
or
cdq
hlt
aas
adc
sub
or
cmp
mov
add
add
scas
add
mov
and
les
inc
mov
add
les
(bad)
call
cmp
cmp
push
jle
mov
or
jnp
sub
ds
mov
sar
cwde
pop
mov
and
test
xchg
or
xchg
and
out
and
sar
sbb
mov
arpl
cld
lods
jno
and
adc
inc
push
push
nop
aad
jno
and
sub
dec
outs
bound
lock
xor
adc
in
imul
cs
inc
mov
jle
adc
lods
je
inc
pop
pop
adc
jae
outs
mov
pop
inc
mov
sub
sub
fstp
nop
inc
push
js
add
jmp
sbb
or
sti
or
in
or
inc
jg
pop
retf
mov
jbe
out
inc
adc
cwde
(bad)
pop
jp
jg
ja
mov
pop
mov
push
or
loopne
mov
lods
xor
cld
adc
test
xchg
pusha
adc
int3
mov
or
inc
push
add
mov
retf
cmp
shl
cdq
or
xor
and
imul
mov
int3
cwde
and
clc
dec
int3
and
fstp
icebp
push
adc
xor
popa
and
push
push
scas
in
movs
aas
or
ds
push
cmp
aas
pop
iret
jo
pop
and
and
xchg
pop
dec
or
aaa
adc
rcl
lock
pusha
adc
xchg
pop
test
std
push
jmp
icebp
lea
cmp
mov
jecxz
sub
xchg
sub
mov
sbb
lock
icebp
adc
xchg
fst
fisubr
adc
dec
push
in
(bad)
ror
into
xchg
or
gs
push
mov
xor
js
(bad)
out
mov
lds
and
fldenv
mov
add
add
mov
sub
mov
rcl
nop
iret
and
sub
and
adc
inc
inc
push
push
push
(bad)
dec
adc
add
jge
jne
or
or
out
add
daa
or
jo
mov
(bad)
fbld
leave
cli
cmp
fs
lock
add
inc
lahf
xchg
ret
ja
sub
and
daa
test
inc
idiv
loop
mov
nop
and
push
sahf
mov
cmp
cmp
mov
imul
pushf
mov
enter
fisttp
xor
xchg
fcom
and
xor
rcl
stc
xor
nop
mov
dec
lahf
and
popa
mov
les
es
xchg
mov
sbb
or
xchg
sar
push
mov
adc
gs
jle
mov
xchg
call
stc
xor
shl
call
fisttp
push
or
mov
or
adc
push
add
lock
adc
ds
enter
or
and
mov
mov
retf
repnz
and
rol
and
in
rcr
mov
cld
idiv
arpl
sub
pop
das
adc
pop
push
or
mov
cmp
inc
dec
push
dec
or
xchg
les
mov
adc
neg
addr16
inc
shl
or
sub
xchg
dec
je
jle
fwait
and
inc
mov
les
push
pushf
cmps
cld
test
in
and
int
mov
or
adc
mov
mov
and
outs
push
or
mov
jbe
sbb
or
gs
sar
dec
(bad)
and
dec
mov
push
jp
mov
in
xchg
mov
nop
aad
or
mov
js
es
xchg
add
mov
(bad)
pushf
and
and
inc
(bad)
mov
test
sub
nop
movs
mov
pop
pop
pop
and
and
adc
fmul
mov
retf
xchg
xchg
fs
push
and
mov
or
mov
call
pop
inc
dec
dec
push
pop
mov
movs
dec
pushf
adc
pop
adc
(bad)
mov
icebp
fsubp
adc
dec
es
loop
dec
cdq
hlt
sbb
xchg
xchg
xor
cmp
sti
mov
mov
fadd
test
sar
mov
pop
push
sti
cmp
push
clc
xor
cmp
cwde
inc
push
dec
mov
dec
push
sub
and
mov
dec
cmp
and
addr16
imul
mov
cmp
ficom
jl
scas
fbld
les
xchg
retf
lods
call
movs
leave
jp
cmp
and
lahf
cdq
fdiv
les
enter
xchg
je
add
sub
cdq
sub
sbb
add
jnp
pop
mov
adc
dec
xchg
mov
dec
pop
mov
and
mov
add
and
bound
loop
or
lock
icebp
in
dec
adc
dec
loop
(bad)
push
gs
push
addr16
inc
lock
mov
mov
xchg
ror
adc
inc
adc
(bad)
cmp
add
mov
imul
xor
and
ins
fwait
sub
push
xor
out
icebp
dec
jno
aas
gs
popa
lahf
xor
and
test
push
mov
add
cs
stos
bound
daa
movs
adc
cld
in
push
push
add
loop
xor
inc
xlat
inc
push
and
adc
push
inc
dec
icebp
dec
sub
adc
dec
into
sbb
add
retf
dec
shl
mov
rcl
jg
pop
mov
adc
aam
add
xchg
dec
out
ins
daa
fstp
pop
sets
adc
xchg
jp
lods
dec
sbb
mov
sub
lock
dec
sbb
mov
enter
dec
js
adc
inc
xchg
arpl
sqrtps
dec
mov
inc
enter
sahf
ja
inc
dec
mov
iret
mov
add
jle
mov
sub
inc
adc
mov
loop
pop
cdq
inc
xor
xor
cdq
dec
clc
sub
and
add
std
dec
cli
adc
sub
fcmovu
ror
pop
sub
mov
mov
and
cmps
cld
push
pop
pop
mov
cli
sti
adc
clc
push
inc
rcr
cmps
dec
pop
dec
pop
or
fiadd
mov
mov
js
sub
add
pusha
push
push
cwde
popa
lock
outs
sbb
movs
and
jp
(bad)
in
repnz
clc
in
or
or
js
ins
and
sub
push
(bad)
push
(bad)
or
addr16
mov
retf
xchg
jno
in
mov
stc
adc
jnp
xchg
and
pop
cmp
xchg
test
sub
push
push
jmp
mov
push
xchg
inc
dec
adc
test
jp
aam
inc
mov
cld
sahf
jno
lds
sbb
jmp
mov
je
mov
push
xchg
and
xchg
push
iret
dec
dec
clc
and
or
lds
jnp
or
(bad)
ret
jmp
jmp
or
cli
ja
mov
mov
inc
and
mov
cmp
mov
pcmpgtw
ret
adc
mov
xchg
mov
in
push
fist
outs
lahf
inc
mov
and
xchg
(bad)
jge
dec
inc
xchg
adc
repz
sub
xor
stc
ja
rcl
leave
adc
outs
xor
inc
xlat
dec
add
jg
js
cli
(bad)
in
and
cmp
add
jecxz
mov
inc
pop
cmp
pop
addr16
nop
or
test
rol
mov
inc
out
dec
js
lea
push
mov
xchg
mov
movs
and
outs
jo
nop
sbb
add
and
xchg
in
pop
xchg
pop
jg
enter
adc
jle
repz
sub
out
mov
push
push
mov
adc
rol
dec
out
cmp
mov
fadd
hlt
ret
or
inc
pushf
int
inc
xchg
sbb
add
jo
(bad)
cli
fmul
cmovnp
xchg
idiv
adc
out
mov
xor
mov
xor
push
inc
lahf
lock
(bad)
les
xchg
push
sbb
or
je
pop
imul
or
dec
(bad)
adc
pop
xor
adc
dec
ins
das
adc
add
lds
push
sbb
mov
add
mov
nop
pusha
ins
xchg
aad
cmps
xchg
and
and
push
sbb
dec
(bad)
dec
pop
add
mov
stos
dec
pop
mov
test
xchg
test
xor
cmp
jae
lsl
mov
jge
dec
sbb
or
add
popa
mov
addr16
sub
pop
push
mov
mov
fild
xor
mov
stc
inc
dec
sub
sub
push
xor
push
ins
mov
adc
mov
cld
jnp
xor
jno
and
loop
mov
add
mov
ret
jmp
pusha
(bad)
fucomi
xor
pusha
repnz
adc
mov
sub
pop
jno
int
lds
std
std
sub
or
xchg
dec
out
std
jns
lea
pop
outs
not
cmp
jmp
(bad)
test
jg
fisttp
loope
dec
dec
dec
cmp
stos
or
int
(bad)
jmp
and
push
std
dec
fcomp
push
sbb
cld
(bad)
xor
sbb
push
xchg
sub
mov
std
adc
and
or
or
(bad)
xchg
call
daa
inc
fsub
and
cmp
or
or
cwde
inc
pusha
test
test
lods
test
fst
dec
jecxz
pop
call
add
pop
pop
mov
sbb
and
sub
dec
xor
daa
pop
sub
mov
push
xchg
lahf
mov
pop
test
stc
adc
or
ror
xchg
push
test
leave
sahf
xor
adc
inc
gs
push
mov
and
xchg
adc
dec
mov
loope
mov
mov
pushf
and
and
xchg
ja
popf
lahf
xor
add
pop
xor
ret
inc
push
scas
inc
rcr
mov
adc
leave
add
xor
add
test
mov
sub
clc
push
adc
inc
inc
pop
dec
xchg
sub
movs
inc
rcl
mov
lahf
test
mov
xchg
sub
adc
in
jmp
mov
sti
and
loop
test
sahf
jo
sti
mov
sahf
jmp
inc
adc
fsub
jle
or
or
xchg
or
pop
leave
cmp
push
(bad)
pop
push
cli
and
and
pusha
or
lds
mul
arpl
inc
arpl
add
lods
mov
sub
movs
or
mov
inc
mov
das
push
sbb
push
ror
mov
in
and
sub
adc
mov
pop
mov
fwait
adc
fcom
cld
and
sahf
js
loop
dec
pop
mov
add
sbb
xor
inc
ror
and
push
sbb
mov
(bad)
stos
and
fbld
and
cmc
xor
jmp
or
mov
leave
popa
sub
add
dec
out
sbb
mov
push
add
in
mov
inc
rcl
dec
popa
adc
lock
loop
dec
jl
sbb
dec
cdq
sbb
sbb
dec
sahf
dec
push
or
dec
jp
and
sub
jno
out
jae
arpl
fsub
adc
and
leave
sub
retf
inc
push
ret
or
dec
push
frstor
dec
repnz
push
iret
ret
outs
idiv
jnp
fadd
add
cdq
nop
pop
mov
add
(bad)
dec
or
mov
jno
add
push
mov
mov
in
in
ror
add
in
xor
outs
(bad)
sub
add
mov
and
add
cmp
fisub
gs
pop
inc
sub
enter
dec
or
sbb
mov
inc
jns
in
ja
js
cld
adc
mov
pop
cld
or
mov
loop
call
mov
adc
lods
dec
adc
push
jle
mov
ins
mov
adc
rcl
sti
cld
fist
xchg
push
xor
scas
xor
xchg
adc
sub
es
jns
jmp
or
cmps
inc
pop
loopne
pop
mov
pusha
adc
and
dec
push
or
and
push
leave
add
jle
sub
dec
push
fidiv
adc
pusha
dec
cs
rcl
push
mov
rcl
xor
inc
xchg
test
or
rcl
cli
fisub
inc
and
dec
pop
mov
aad
es
hlt
and
jnp
cwde
inc
daa
enter
fsubp
mov
out
jmp
aad
inc
cmp
aam
bnd
jb
add
mov
sub
adc
and
and
cmp
sbb
gs
enter
jb
mov
add
inc
mov
xchg
mov
loop
mov
lock
dec
cmp
inc
inc
dec
sbb
push
lods
add
in
not
in
lods
dec
clc
jae
dec
and
call
pusha
sub
nop
dec
sbb
cmp
mov
jo
push
gs
ret
loop
cwde
sub
pop
movs
xlat
add
inc
enter
(bad)
lods
les
add
pop
sbb
push
dec
mov
sub
or
and
retf
mov
mov
adc
pop
rcl
je
and
daa
cmp
loope
cdq
sub
div
cwde
xor
cmp
xor
bound
clc
xchg
push
shl
ds
mov
cmp
lods
xchg
in
fs
adc
mov
push
jle
mov
dec
xor
movs
jecxz
or
cwde
imul
cmp
push
inc
cwde
pop
add
loop
pusha
mov
scas
adc
dec
popa
cmp
psubw
nop
xchg
das
pop
ins
test
xchg
adc
inc
retf
mov
pcmpgtw
pop
add
xchg
pusha
dec
xchg
xor
dec
pop
or
mov
or
rcl
adc
cmp
or
mov
adc
popa
add
and
mov
push
cwde
add
gs
pushf
push
adc
xor
and
test
shl
and
cmp
jmp
dec
repnz
neg
and
pop
lods
cdq
in
(bad)
stc
pop
dec
xchg
rcl
add
cmc
and
jnp
xor
push
push
mov
cdq
and
mov
and
xchg
gs
pop
rcl
and
push
repnz
adc
sti
xchg
pop
mov
sub
or
pop
jns
mov
add
adc
and
sbb
(bad)
adc
les
inc
dec
jnp
xor
cmp
adc
dec
push
sti
xchg
jl
ficom
inc
das
mov
psubusb
stos
pop
(bad)
and
mov
mov
sbb
push
je
adc
mov
js
(bad)
adc
mov
dec
mov
jl
jno
aaa
das
in
dec
cmp
nop
add
cs
inc
xor
daa
cmp
jnp
retf
mov
loopne
fwait
add
xchg
xor
rcl
adc
inc
rol
mov
inc
clc
push
cld
inc
mov
pop
inc
cld
dec
mov
xor
pusha
and
mov
clc
push
mov
int
sbb
leave
mov
(bad)
nop
sub
fwait
sbb
dec
leave
or
inc
cmps
or
xchg
(bad)
jae
or
(bad)
imul
pop
fistp
mov
or
loope
xchg
lock
sbb
lahf
sub
or
push
xchg
lods
xchg
mov
cmp
iret
fistp
loopne
inc
or
sub
(bad)
das
push
les
jecxz
xor
(bad)
in
jno
cs
inc
or
push
adc
mov
sub
or
leave
hlt
pusha
or
sbb
(bad)
jmp
adc
xchg
arpl
jno
push
out
and
mov
push
ret
pop
xchg
cmc
shufps
adc
jae
mov
mov
pop
pop
jnp
mov
add
iret
out
sub
sub
or
add
test
and
gs
ds
dec
fimul
mov
daa
cmps
fadd
pop
mov
push
xchg
cmp
cmp
sahf
xor
es
lds
push
cld
test
popf
ret
xor
clc
cwde
jnp
loope
lds
gs
jne
xor
dec
test
adc
mov
nop
mov
bound
sbb
sub
mov
push
inc
out
mov
loopne
push
nop
jo
add
test
xchg
cld
add
adc
add
push
or
test
mov
icebp
aaa
mov
cli
cmps
js
jnp
pop
cmps
or
(bad)
mov
rcl
jnp
repnz
ret
jge
pop
xor
pop
jg
cmps
add
adc
dec
retf
pop
cmp
loope
inc
shr
mov
imul
or
gs
test
adc
mov
pop
jb
inc
jp
push
mov
out
push
xchg
icebp
mov
push
(bad)
xor
js
add
or
pop
mov
nop
jno
aaa
and
mov
and
neg
shl
test
push
bound
mov
in
stos
and
gs
pop
jge
arpl
dec
adc
fsubp
dec
shr
hlt
and
sub
pop
sub
fst
xchg
mov
dec
es
mov
add
es
enter
adc
das
jno
in
mov
sbb
ror
icebp
mov
stos
add
xchg
movs
and
cdq
push
and
mov
les
mov
inc
fld
call
dec
cmp
popa
jl
xor
mov
bound
push
xor
xor
arpl
push
dec
loopne
sbb
sti
cmp
mov
sub
arpl
or
rcl
inc
inc
lea
mov
add
jecxz
mov
dec
inc
mov
(bad)
xchg
fbstp
jl
mov
pop
sub
push
xor
inc
push
(bad)
cmp
jno
and
xor
shl
sub
mov
enter
and
and
xchg
in
cmp
pusha
call
mov
fstp
adc
sbb
xchg
(bad)
and
test
xchg
adc
adc
clc
fs
mov
jbe
lahf
dec
mov
xor
cmp
adc
mov
mov
push
or
and
jae
jg
arpl
outs
out
push
push
repnz
jge
call
dec
jb
test
retf
retf
dec
int
dec
dec
cmp
and
fldcw
les
addr16
or
ds
pop
call
cmp
jno
sbb
sub
in
test
or
xor
(bad)
or
push
(bad)
xor
(bad)
xchg
fadd
xor
sbb
cmp
test
sub
push
xor
cld
call
rcr
jo
sub
ficom
dec
mov
and
xchg
and
mov
mov
sub
adc
mov
test
mov
add
dec
ror
rol
mov
cmp
and
inc
jno
cmc
jne
sub
enter
mov
xor
cmp
mov
mov
shr
out
mov
push
and
and
adc
mov
or
push
sti
inc
sub
sub
sti
fsub
idiv
and
es
bound
inc
and
lahf
enter
xchg
sub
lods
dec
adc
or
gs
std
ds
add
xchg
mov
adc
ror
mov
jle
mov
mul
or
out
lea
adc
popa
pop
ror
or
shr
and
inc
icebp
cwde
lds
test
or
call
xchg
jle
mov
sti
mov
push
iret
loopne
cmp
inc
dec
mov
xor
mov
pop
sbb
mov
jl
push
cld
iret
inc
ins
dec
mov
ins
fsubr
es
popa
cmps
mov
(bad)
jmp
and
daa
xchg
dec
xchg
cwde
inc
jl
test
dec
adc
xor
clc
add
jmp
or
and
int3
inc
xor
out
xchg
jmp
repnz
adc
lds
xchg
aad
jge
rol
push
mov
mov
test
dec
xchg
mov
pop
xor
cmp
test
or
sub
add
nop
aad
icebp
push
inc
leave
and
nop
sub
ficom
xchg
inc
pop
in
jecxz
leave
add
mov
mov
lds
ret
and
mov
and
dec
mov
scas
sub
pop
dec
nop
cmc
add
lahf
mov
daa
(bad)
jnp
loop
idiv
mov
pop
add
or
cwde
and
nop
push
cwde
inc
inc
cmp
adc
mov
inc
cmp
daa
jno
lds
push
adc
fcomi
sbb
pop
xor
cmp
mov
(bad)
(bad)
xchg
jno
sbb
fwait
loop
mov
xor
idiv
ja
neg
xor
jo
pop
repnz
dec
inc
add
(bad)
sar
adc
adc
fstp
cmps
sar
es
dec
bound
sub
mov
in
mov
ins
fdivr
lahf
xor
es
test
ficom
pushf
add
pushf
pop
loope
cld
xor
sub
sahf
xchg
and
js
and
inc
sub
movs
mov
or
data16
jecxz
scas
jl
call
shl
js
cdq
add
xor
inc
or
nop
and
adc
sbb
icebp
sub
retf
fimul
adc
add
das
shl
ja
clc
leave
bound
cdq
sbb
push
(bad)
lea
add
adc
sbb
cmp
sub
cmp
nop
gs
call
clc
rol
inc
xchg
jg
fistp
and
jle
lods
les
test
js
jl
mov
cmp
mov
iret
dec
repnz
adc
inc
adc
dec
fs
push
add
adc
sbb
lock
dec
push
mov
and
fisubr
cmp
loopne
daa
cld
mov
gs
cli
sahf
jb
clc
dec
xchg
and
xor
add
popf
lock
ret
add
adc
loop
or
xchg
dec
test
mov
idiv
outs
dec
je
in
mov
ja
das
xchg
jmp
lahf
ret
push
lds
cmp
loop
jl
xor
daa
push
cmpps
jo
xchg
sti
cmp
cdq
cmp
and
dec
(bad)
cmp
loop
inc
inc
rcl
xor
retf
cmp
mov
sbb
xchg
mov
je
or
movs
adc
xchg
jg
loopne
fisttp
sub
and
cmp
test
sub
(bad)
enter
(bad)
sbb
push
inc
movs
push
push
mov
adc
mov
adc
lods
pop
fcom
and
and
les
mov
inc
pop
es
nop
dec
sub
rcl
cli
mov
xchg
enter
movs
dec
adc
push
mul
sar
cld
push
mov
inc
loopne
pop
inc
daa
cdq
adc
iret
adc
mov
mov
ficomp
add
dec
sub
and
loopne
pop
cli
popf
jo
or
daa
inc
ret
jle
hlt
mov
xchg
fs
mov
adc
das
add
loope
sbb
add
test
adc
push
mov
sti
add
pop
cmp
or
sbb
es
sub
movs
xchg
xchg
add
mov
or
mov
inc
daa
push
loop
dec
sbb
xchg
test
push
mov
js
push
cdq
(bad)
in
sbb
iret
mov
sub
dec
mov
xor
add
push
jb
bound
and
loope
xor
leave
adc
repnz
add
add
or
adc
pop
and
int3
outs
xor
xor
outs
push
movs
and
add
dec
clc
adc
aas
add
mov
add
das
dec
cs
sar
sub
leave
ds
xor
pop
dec
sbb
lahf
jmp
push
xchg
loop
mov
call
adc
sbb
mov
les
leave
ret
and
clc
dec
adc
mov
aas
xor
and
popa
dec
and
loop
or
mov
xchg
lods
call
dec
clc
push
adc
dec
pusha
pop
xor
retf
jmp
gs
pop
js
outs
inc
xor
sbb
in
jnp
xor
and
std
and
lods
mov
and
dec
add
add
dec
(bad)
dec
(bad)
daa
into
mov
sub
adc
jbe
fcmovnb
cmp
retf
push
jle
aam
jg
mov
mov
and
mov
pop
pusha
mov
mov
das
in
sub
mov
mov
sub
push
ror
pop
add
dec
lods
mov
xchg
sub
mov
shr
int3
pop
ds
sahf
xor
(bad)
or
add
std
dec
cmp
fistp
sahf
xor
mov
jbe
js
adc
jecxz
out
jmp
fs
push
mov
xchg
and
lds
fwait
test
push
pop
push
jno
into
xor
add
push
jmp
sub
and
movs
sub
arpl
dec
pop
jns
sub
push
push
inc
xchg
cmp
std
dec
int3
or
and
jge
dec
(bad)
mov
imul
scas
hlt
sub
xchg
or
outs
add
adc
jo
das
add
and
aad
ficom
xchg
cli
sbb
pop
sbb
fdivr
or
dec
xchg
dec
dec
xchg
icebp
fs
ud1
daa
or
fadd
jecxz
dec
es
xchg
sbb
outs
cwde
aaa
psubb
es
mov
mov
dec
ud1
mov
rol
shl
add
adc
pop
inc
push
or
jno
adc
fwait
sub
push
es
idiv
dec
jnp
and
je
cmps
lahf
mov
movs
mov
xchg
les
mov
rol
mov
add
inc
les
(bad)
push
sar
loopne
dec
and
or
sbb
(bad)
mov
add
retf
push
ret
push
xlat
dec
sub
ins
sub
lahf
inc
and
js
jecxz
hlt
cld
sbb
adc
add
or
pop
fsub
pop
pushf
loopne
cld
cdq
inc
mov
mov
and
rcr
arpl
imul
cmp
adc
and
xchg
inc
jg
(bad)
add
or
cwde
lock
lea
mov
xchg
push
adc
call
leave
push
outs
cmp
cmp
dec
in
inc
sub
cmp
inc
sbb
sahf
repnz
inc
ss
lds
xor
inc
sub
js
ret
int3
add
xchg
dec
cmc
sbb
mov
mov
inc
dec
fsub
jle
or
or
loop
mov
adc
adc
dec
cmp
inc
lock
xchg
sti
fadd
dec
fidivr
sub
xchg
sub
idiv
jmp
jno
in
test
sub
mov
add
pop
pop
imul
add
mov
das
mov
mov
xor
cmp
outs
sub
retf
adc
rcr
adc
or
inc
jb
sti
or
pop
mov
call
or
mov
inc
les
xchg
mov
call
sbb
push
cmp
pop
mov
or
xchg
fcomp
je
stos
sub
ficom
inc
retf
push
je
sub
mov
sub
push
or
sub
sbb
inc
xor
mov
and
inc
jmp
out
loopne
lock
stos
and
jbe
mov
je
inc
es
and
cld
inc
jno
shl
sbb
fcomp
pop
sub
or
and
or
mov
pop
adc
fisub
inc
mov
and
sub
out
add
ret
mov
loop
mov
mov
nop
fs
add
inc
jb
push
fadd
aam
jg
and
repnz
mov
repnz
push
dec
mov
repz
mov
les
in
and
add
jecxz
add
cwde
or
daa
jmp
in
or
dec
and
dec
xchg
movs
aas
les
xor
cmp
pop
ror
sub
mov
sar
sub
sub
xchg
jmp
(bad)
test
xchg
xchg
mov
retf
out
xor
and
arpl
xchg
mov
das
push
jle
(bad)
mov
inc
aam
notrack
cs
mov
xor
sbb
test
add
mov
mov
mov
pop
bound
xchg
lahf
xor
xchg
and
cmp
and
das
sub
dec
cmp
mov
inc
daa
dec
lea
rol
cmp
dec
mov
mov
add
fxam
ds
nop
push
push
loop
push
cmp
(bad)
call
push
sti
cld
mov
cli
add
leave
push
inc
inc
pushf
cmp
enter
pop
and
loop
dec
pop
dec
(bad)
sbb
add
lea
inc
(bad)
fcom
lock
test
or
jnp
mov
cmc
push
icebp
jns
out
arpl
ds
dec
clc
aas
mov
les
mov
push
add
(bad)
push
or
sub
cdq
out
jmp
mov
stos
dec
mov
add
inc
arpl
mov
les
adc
sub
nop
push
sub
das
inc
adc
push
clc
xchg
xchg
jmp
pusha
es
mov
dec
ror
ficom
mov
cmps
mov
and
cwde
push
icebp
dec
int3
push
mov
sub
add
icebp
dec
js
dec
js
mov
sub
sti
adc
and
sub
mov
inc
ds
test
xchg
loope
mov
fmul
mov
dec
jb
aam
in
mov
dec
xchg
sub
cwde
jl
fdiv
mov
and
stc
jo
or
adc
mov
mov
movs
dec
cmps
call
jp
cld
and
push
push
or
loopne
jns
mov
scas
add
or
jge
add
mov
ret
pop
dec
mov
aas
in
xchg
mov
xchg
or
push
add
in
gs
pop
fisttp
outs
xchg
jnp
and
inc
ror
repz
or
xor
(bad)
movs
jo
and
or
fs
test
inc
inc
dec
out
jge
loopne
enter
cmc
xchg
imul
fwait
xchg
js
sub
adc
mov
js
add
ret
adc
fsub
and
cld
xchg
call
cwde
cmp
ins
push
fld
and
retf
jp
cs
(bad)
outs
and
aaa
jne
mov
dec
dec
dec
std
dec
push
call
add
enter
out
cwde
dec
leave
jnp
xor
dec
pusha
adc
add
jb
or
mov
mov
and
pop
or
jl
xchg
jnp
or
ret
sub
xchg
cmp
fmul
sbb
push
pop
adc
and
or
(bad)
int
pusha
loope
dec
mov
gs
data16
xor
jns
dec
mov
leave
fmul
pop
mov
ret
pop
aas
loope
jle
nop
les
call
mov
rol
dec
jno
xor
jecxz
push
cmp
push
inc
pop
jecxz
popa
loop
leave
jge
push
ja
pop
or
add
mov
out
inc
icebp
out
jmp
sar
cmp
dec
jle
js
mov
fdivr
mov
ss
or
stos
cmp
mov
(bad)
ds
inc
adc
rol
inc
ds
pop
sub
mov
pop
(bad)
and
xchg
in
nop
mov
jge
push
cmp
cmovbe
and
mov
sub
inc
loop
arpl
jns
jl
push
or
add
jmp
repnz
dec
mov
pop
repz
sbb
mov
adc
sub
adc
and
hlt
test
pop
out
xor
xchg
fsub
sbb
repz
mov
shl
xlat
push
test
cdq
xor
shl
fsub
lds
or
std
add
mov
es
xchg
xchg
jge
dec
sub
clc
or
jo
retf
cmps
cld
cdq
dec
iret
fwait
cmc
push
call
lods
pop
dec
push
pop
pop
hlt
test
pop
pop
push
and
mov
or
jle
call
mov
push
lahf
inc
xor
inc
leave
push
out
repnz
(bad)
mov
sbb
movs
adc
mul
mov
je
repz
and
sub
and
fs
cmp
dec
add
or
cmp
jns
pop
mov
push
xchg
rol
std
cwde
mov
das
mov
test
xchg
xchg
adc
or
enter
cmp
test
adc
inc
inc
sbb
or
out
out
jno
pop
cmp
leave
xchg
mov
mov
adc
cmp
bound
(bad)
fs
mov
jl
outs
jle
mov
cmps
call
xor
sbb
push
sub
pop
loope
out
pop
pop
pop
jno
and
or
(bad)
ins
and
mov
adc
(bad)
jge
je
mov
or
and
adc
jecxz
push
mov
rcl
js
cmp
mov
push
jo
add
or
test
shl
xor
clc
xor
add
inc
inc
pop
mov
loop
dec
sbb
adc
dec
in
mov
adc
push
shr
ret
fiadd
mov
rol
fdivr
es
mov
hlt
and
test
arpl
popa
add
add
test
sub
retf
sbb
mov
xchg
aam
in
push
mov
inc
dec
pusha
mov
jge
ret
(bad)
aam
dec
mov
loope
daa
bswap
and
xor
adc
(bad)
aam
xor
mov
mov
sbb
mov
in
les
or
mov
imul
push
mov
mov
jmp
cmp
jo
push
xchg
add
addr16
xchg
inc
(bad)
loopne
pop
jo
je
jl
dec
leave
inc
inc
jns
jb
and
rcr
pop
or
push
aas
loope
inc
dec
popa
adc
push
cld
enter
sub
fucomp
jb
mov
loop
jle
mov
lds
hlt
lds
push
lds
dec
push
inc
xchg
inc
and
pop
mov
loop
dec
sub
jnp
fidivr
and
repz
adc
scas
mov
outs
enter
xchg
mov
in
cld
sub
and
daa
lock
lock
jns
add
lahf
mov
or
dec
and
daa
jp
sub
sbb
jge
or
pop
fwait
sub
xchg
mov
jmp
movs
sub
pop
push
shl
jbe
call
fisub
push
jb
adc
jecxz
jmp
cli
adc
cmp
pop
cld
test
jle
iret
ins
psubb
push
les
cdq
mov
pop
fdivr
std
loop
pop
out
jb
fs
mov
shl
inc
lds
dec
pop
dec
push
or
dec
cmps
jnp
fist
adc
or
xor
call
push
pop
dec
push
xchg
xchg
add
push
push
aas
aas
push
cmp
stos
mov
xchg
push
xchg
adc
inc
push
fwait
and
push
fbld
(bad)
sbb
push
cmp
push
push
sahf
movs
adc
push
add
jno
addr16
xchg
sub
dec
bound
jl
sub
mov
das
sub
sbb
xchg
pop
lods
sub
in
icebp
push
loopne
cmp
out
xor
mov
fiadd
pop
mov
loop
inc
jb
or
retf
adc
sub
(bad)
sbb
jge
push
call
sbb
mov
cwde
aas
ret
and
int3
sbb
push
xchg
sbb
or
shr
sbb
and
jecxz
sub
jnp
loop
dec
dec
inc
inc
and
xchg
(bad)
sahf
push
or
push
and
movs
sbb
arpl
pushf
fsub
sahf
xor
sub
inc
mov
xor
sti
pop
pop
xchg
call
fdivr
fmul
inc
xchg
cli
nop
pushf
in
scas
mov
(bad)
adc
mov
push
neg
xchg
and
(bad)
enter
pop
add
mov
xchg
out
sbb
or
cld
or
das
jmp
pusha
sbb
maskmovq
sub
nop
jns
mov
icebp
sub
xchg
mov
mov
jle
push
mov
(bad)
pop
push
adc
test
sbb
cmp
pop
inc
and
xchg
lods
adc
or
iret
dec
lahf
xor
and
add
fninit
out
out
icebp
mov
xor
movs
pop
and
mov
pop
rcl
push
mov
rol
sbb
sar
sar
sbb
inc
adc
mov
xchg
out
and
mov
jbe
fcomp
ss
mov
out
call
or
loopne
lock
call
jno
inc
int3
in
adc
and
sub
add
frstor
(bad)
cmp
leave
jmp
push
sbb
leave
jp
sub
mov
leave
js
dec
inc
cmp
adc
sbb
hlt
sub
jne
clc
dec
push
cli
and
and
stc
out
cdq
mov
dec
imul
lods
hlt
or
pop
jmp
xlat
inc
xchg
or
mov
sbb
xor
push
cmps
int
xchg
xor
fisttp
push
jg
test
xchg
stos
add
leave
aas
jecxz
retf
and
and
jnp
push
adc
add
and
cmps
cld
mov
push
pop
add
(bad)
repnz
xchg
outs
cmp
dec
mov
dec
or
dec
(bad)
iret
les
pop
pop
mov
or
dec
fiadd
inc
inc
xor
enter
repnz
mov
inc
test
jb
or
or
xchg
test
push
fadd
and
pop
not
call
sbb
iret
xor
mov
dec
dec
inc
enter
(bad)
adc
xchg
inc
stos
arpl
repnz
lods
lds
push
inc
and
sbb
and
sbb
adc
inc
cmp
mov
std
dec
push
push
js
adc
daa
adc
jecxz
or
outs
and
and
mov
in
mov
jns
popa
adc
sub
loopne
idiv
xchg
popa
(bad)
cmps
xchg
sub
mov
icebp
xchg
pushf
jmp
xchg
add
aaa
xor
mov
in
xor
dec
ins
and
dec
sbb
or
and
sbb
pusha
xchg
and
mov
cs
adc
inc
int3
stos
lock
adc
inc
daa
xchg
sub
push
hlt
jb
sub
cmp
dec
dec
les
xchg
fsubrp
repz
xchg
or
cmovns
arpl
lahf
idiv
jp
fisttp
test
lock
bound
shl
popa
and
pop
xchg
push
xchg
mov
push
dec
cmp
jg
ret
lods
mov
rcl
cmp
xchg
adc
mov
das
mov
mov
dec
retf
push
sub
xchg
jno
lds
xlat
add
cdq
add
imul
adc
and
cmp
pop
pop
xchg
xor
add
ret
sub
dec
add
xor
mov
cmc
push
jg
hlt
push
jle
mov
jl
mov
mov
hlt
xchg
mov
pop
xchg
int3
push
cmps
inc
movs
outs
xchg
xor
pop
dec
or
sbb
out
inc
cmp
cmp
rol
in
push
jge
leave
cs
arpl
aaa
inc
adc
je
cwde
sbb
jle
xchg
inc
xchg
sub
fs
xchg
xor
ins
stos
js
cs
pminub
(bad)
pop
mov
clc
stc
in
mov
test
es
stos
pop
es
push
sub
test
ds
les
pop
mov
ins
inc
pop
test
jne
gs
inc
cmp
lahf
add
cs
mov
inc
push
jbe
and
repz
adc
popw
ret
fisttp
push
arpl
push
fmul
popaw
pop
mov
mov
cmp
aad
sub
lock
sub
(bad)
jnp
pop
fidiv
bound
sub
sahf
mov
mov
inc
push
cmp
dec
xchg
out
xor
mov
and
xor
popa
push
push
icebp
mov
(bad)
jecxz
jle
call
sub
les
inc
and
mov
xor
stc
nop
jg
jmp
iret
int3
idiv
out
inc
inc
ja
or
mov
ins
(bad)
in
sub
out
out
jp
inc
xchg
and
mov
div
and
loope
sbb
lock
and
in
and
(bad)
jecxz
mov
stos
pop
and
push
or
mov
pop
adc
or
dec
pop
fmul
int3
not
das
dec
sub
mov
cld
hlt
test
xor
or
add
xchg
xor
jae
sub
sub
rol
cld
xor
dec
bnd
idiv
jae
in
jns
pop
idiv
and
inc
es
push
jge
or
pop
aam
ficom
cdq
movs
sub
sbb
cmp
add
dec
nop
and
add
sbb
cmp
adc
push
nop
(bad)
or
dec
js
mov
mov
in
sub
sbb
cwde
inc
ror
imul
popf
xor
cmp
jp
inc
pop
dec
mov
daa
add
fs
lods
and
inc
outs
ja
ficom
and
xchg
jmp
arpl
push
or
add
inc
and
cmps
les
mov
leave
jns
dec
sub
mov
push
mov
cmp
lds
test
fnstcw
inc
pushf
pop
loope
jo
cmp
dec
xor
pop
test
and
icebp
add
xchg
aas
pop
jg
hlt
mov
mov
xor
or
lahf
repnz
popa
jmp
sub
pop
pusha
inc
sbb
push
mov
dec
sbb
mov
pushf
dec
pop
dec
inc
cmp
pop
dec
mov
out
repz
dec
mov
or
nop
mov
xchg
movs
popa
neg
push
mov
loope
dec
mov
dec
call
and
les
xor
add
and
movs
test
fs
or
xor
cmps
sub
mov
adc
cmps
cmps
or
das
xchg
out
jmp
mov
iret
mov
in
add
cwde
ret
add
cmp
scas
lods
sbb
jg
loopne
les
add
repnz
loop
popa
inc
dec
push
mov
dec
loopne
test
push
and
imul
jno
leave
jbe
mov
jo
xor
cdq
lods
mov
adc
xchg
cmps
add
int3
push
and
mov
pop
das
sahf
or
clc
in
push
push
adc
ret
aas
jno
idiv
cmp
mov
not
cmp
loop
jge
jg
cli
and
mov
jns
adc
pusha
xor
push
jle
repnz
add
(bad)
mov
jg
cmps
add
call
inc
bnd
lahf
jb
mov
lock
scas
push
inc
mov
add
cwde
xor
cmc
push
xchg
inc
hlt
lea
inc
in
adc
sub
(bad)
jae
push
je
inc
mov
xchg
xchg
add
or
and
sub
xor
stos
inc
xlat
inc
inc
shr
repnz
mov
push
sbb
call
out
cmp
or
mov
jp
ret
ret
aam
mov
xchg
xchg
adc
dec
mov
mov
aaa
adc
inc
es
mov
dec
fbld
out
xor
dec
clc
jnp
sbb
jg
call
cmp
adc
loop
add
jecxz
or
aam
test
sub
or
test
xor
xchg
aaa
mov
bound
cmps
pop
lods
jp
jl
dec
cwde
cwde
idiv
adc
push
xor
mov
call
cwde
xchg
push
xchg
add
clc
pusha
(bad)
rcr
arpl
jl
jl
mov
add
push
mov
cld
cdq
pop
or
jge
ror
sbb
xchg
test
lods
lods
aam
call
sti
fst
and
adc
fmul
lock
xor
dec
and
sahf
and
mov
add
xor
push
cwde
push
jae
cld
or
arpl
shl
fwait
cmp
xor
and
arpl
pop
adc
shl
mov
jb
pop
xchg
stc
xor
cld
xor
mov
loop
push
add
(bad)
push
and
and
adc
pop
shl
cmc
and
popa
fmul
mov
mov
gs
adc
mov
sub
inc
ins
rcl
or
add
mov
xchg
dec
mov
int3
dec
cwde
lds
addr16
(bad)
add
lods
fdivr
xor
add
sbb
js
loop
dec
push
sbb
movs
push
or
xor
cmp
push
pop
add
hlt
mov
cdq
pushf
mov
shl
sbb
popa
dec
shl
lahf
repnz
outs
dec
push
pushf
les
retf
fcomp
mov
sti
sti
or
adc
mov
jecxz
retf
add
xchg
data16
dec
xchg
test
cmp
push
xchg
cdq
xchg
cmc
jbe
fs
inc
fs
sbb
cmp
pop
cmp
cmps
mov
or
dec
sbb
dec
jns
ret
xor
xor
jmp
lahf
xor
(bad)
in
(bad)
sbb
loop
aas
in
lds
retf
mov
sub
and
xchg
dec
call
mov
xchg
adc
cmps
cld
ss
not
loop
add
jb
nop
arpl
pop
fild
call
mov
int
or
pop
jb
pop
out
xor
shl
adc
xor
or
adc
mov
pop
pop
jno
gs
nop
or
test
mov
mov
inc
push
cwde
add
jo
out
jecxz
leave
in
add
lea
mov
stos
or
sti
or
ret
mov
cs
xor
jl
mov
icebp
push
in
push
cmps
dec
pushf
dec
(bad)
push
imul
int3
xchg
jno
xchg
cmps
ds
nop/reserved
es
mov
icebp
scas
rcl
cwde
cmp
fmul
sbb
xor
jl
xchg
pop
(bad)
push
mov
mov
cld
fwait
mov
ret
(bad)
jo
out
sbb
pop
aam
sbb
adc
sub
xchg
je
adc
ja
jp
xchg
in
xor
xor
ret
mov
ins
adc
xchg
pop
add
xor
shl
stc
xchg
mov
cmp
enter
push
mov
inc
dec
bound
xor
aas
test
es
xchg
inc
adc
leave
push
push
pop
fs
inc
inc
push
push
mov
test
jbe
ins
popaw
push
sbb
add
adc
or
gs
or
rcr
add
stos
test
or
jl
(bad)
shl
and
and
aam
mov
sub
outs
(bad)
push
mov
(bad)
push
and
jnp
dec
mov
jl
mov
and
xchg
loopne
(bad)
cmc
test
ins
ret
test
(bad)
push
push
and
cmp
add
push
clc
mov
and
arpl
push
pop
add
sti
adc
ds
fist
dec
cmp
push
and
sti
mov
add
fldcw
lock
adc
sbb
leave
push
sbb
dec
cdq
mov
sbb
arpl
xchg
xchg
dec
jno
lds
cs
add
add
shl
shl
nop
or
pusha
and
lahf
xor
pusha
outs
lock
sub
mov
adc
sub
call
cmp
aad
xor
cmps
lods
fimul
test
shl
sbb
ret
pop
jae
jmp
loope
mov
stos
xchg
ficom
jg
adc
bound
or
retf
add
pop
aam
mov
ds
pop
dec
push
loope
add
sub
pop
push
cmp
(bad)
jge
sbb
fst
pushf
pusha
je
outs
or
loopne
loope
popa
sbb
jge
outs
popf
lock
lds
stos
(bad)
xchg
fcom
test
cmp
add
sub
mov
loopne
push
inc
fmul
shr
dec
mov
xor
sub
push
pusha
inc
loopne
push
mov
push
js
call
and
loop
fwait
jne
xchg
sbb
fsub
inc
imul
push
fs
sbb
push
sbb
add
fst
shl
popa
lahf
sbb
ret
(bad)
xor
mov
sub
retf
test
pop
stos
add
push
mov
pop
add
sbb
fs
test
xchg
lahf
adc
xchg
jne
(bad)
sub
jp
(bad)
and
xor
outs
and
mov
and
mov
cmps
mov
cmps
cmp
jno
lock
mov
out
(bad)
movs
and
add
stos
xchg
push
(bad)
mul
addr16
push
add
fistp
mov
push
cmp
dec
adc
retf
xor
and
jns
outs
mov
mov
je
in
and
(bad)
lock
mov
xor
cmp
lds
ds
arpl
fs
in
test
mov
in
ds
lahf
icebp
pop
loop
leave
pop
leave
or
and
sub
cs
out
(bad)
inc
adc
jge
pushf
inc
cmp
js
int3
push
cwde
inc
xor
enter
call
dec
dec
xchg
sub
jnp
pop
adc
neg
movs
adc
push
(bad)
arpl
add
push
es
sbb
mov
popf
sub
mov
jne
ds
and
add
and
adc
rol
stc
repz
fsubr
sub
cld
xchg
mov
mov
xor
push
mov
ds
rcl
loope
js
aam
enter
fcom
ds
mov
mov
stos
enter
jle
or
stos
cmp
(bad)
lea
sbb
loope
loope
mov
imul
loope
push
dec
gs
mov
pop
mov
ja
and
dec
cld
js
inc
sub
mov
jns
jl
in
fcom
sbb
sub
cdq
adc
(bad)
popa
mov
xchg
push
dec
sbb
loopne
dec
rol
dec
sbb
inc
xchg
and
cmp
push
inc
xchg
(bad)
iret
jge
shr
jb
or
lahf
ja
push
jl
stos
cwde
ja
pushf
and
outs
test
or
shl
add
sbb
mov
clc
pusha
and
adc
cmp
cdq
sbb
inc
xchg
not
imul
ret
add
dec
test
fwait
mov
enter
mov
mov
gs
arpl
cwde
inc
imul
arpl
(bad)
fbstp
jmp
arpl
dec
push
loopne
mov
and
or
push
dec
push
cmc
test
loope
mov
dec
mov
fistp
repnz
out
mov
cmps
pop
jo
push
ret
mov
sub
loop
cld
dec
jecxz
dec
nop
or
pushf
push
adc
dec
inc
dec
push
pop
lock
cmps
add
inc
sub
add
xchg
(bad)
int3
add
dec
aam
push
xchg
xchg
loopne
push
fild
mov
mov
jno
out
icebp
addr16
adc
inc
dec
and
retf
add
pop
xchg
xor
test
xchg
cli
and
mov
daa
adc
loope
and
jle
ds
pop
retf
es
mov
mov
cmp
or
cld
and
ins
and
(bad)
jns
aad
test
cmp
xor
inc
in
and
sub
xchg
mov
pop
leave
mov
sbb
cs
call
sub
mov
and
dec
hlt
cmp
push
nop
adc
adc
fadd
jbe
xor
mov
sub
dec
push
mov
dec
inc
xchg
and
mov
cmp
mov
int3
scas
rcr
add
ret
add
pop
jb
xchg
jmp
pop
les
add
(bad)
mov
jnp
bound
movs
(bad)
icebp
cmp
adc
adc
adc
xor
mov
push
cld
add
repnz
hlt
test
out
repz
cmp
icebp
cmp
add
cmc
mov
mov
inc
jle
daa
dec
cmps
iret
clc
ja
pop
xchg
inc
aas
in
sbb
fiadd
les
adc
fbstp
popa
xchg
jecxz
iret
lahf
add
dec
jmp
jb
xor
sub
and
and
fstp
int3
pop
outs
and
lahf
xor
adc
aad
mov
pop
sub
popa
or
inc
pop
test
call
inc
pop
dec
retf
or
adc
dec
int3
mov
push
pop
add
mov
dec
loopne
in
shl
cs
loop
mov
xchg
sbb
dec
jno
and
adc
sub
leave
cli
test
pop
mov
es
sti
or
jb
xor
in
inc
xchg
cmp
enter
push
mov
test
lahf
repnz
dec
icebp
shl
lock
ins
ror
dec
les
xchg
dec
inc
xchg
pushf
and
adc
push
jb
daa
cld
jmp
sbb
icebp
pop
mov
jge
push
pop
or
inc
std
mov
jns
mov
cld
sub
mov
pop
pop
daa
retf
cmp
sbb
loope
repz
and
add
adc
fisttp
xor
inc
pop
icebp
mov
sub
mov
and
mov
mov
jbe
cmp
cld
sub
sbb
pop
dec
or
sbb
cmp
xchg
mov
rcr
std
pop
mov
call
jno
mov
push
pop
cmp
fwait
add
clc
dec
clc
pop
jb
(bad)
les
and
add
xor
add
jl
dec
dec
mov
bound
aad
jp
sbb
pop
add
push
xchg
nop
sbb
aaa
cdq
dec
pop
ins
xor
(bad)
loop
leave
xor
loop
mov
movs
or
xchg
push
repnz
lds
mov
and
pop
inc
jb
xchg
nop
add
das
mov
or
mov
jl
movs
xchg
xor
gs
inc
int3
call
loope
push
call
adc
adc
fimul
mov
cld
(bad)
or
or
sbb
inc
daa
(bad)
sti
ficomp
add
dec
je
and
jno
es
add
xor
retf
push
fwait
mov
xchg
ret
xchg
iret
inc
lea
out
add
sub
inc
(bad)
pop
fs
movs
in
(bad)
push
mov
dec
xchg
lds
mov
sbb
dec
cs
clc
inc
(bad)
pushf
les
rcr
and
xchg
sbb
pop
sbb
adc
and
push
and
sbb
retf
xchg
int
mov
es
push
jb
loopne
inc
xchg
xor
sti
cmp
mov
shr
add
jo
inc
xchg
mov
xor
in
cmp
fcomp
add
scas
fs
out
bound
sbb
arpl
sub
add
dec
adc
mov
mov
cmps
pop
adc
sub
sbb
out
xor
push
out
idiv
sbb
push
inc
stos
mov
push
and
add
sub
int3
and
jb
mov
and
adc
das
cld
bound
sbb
sar
fimul
push
dec
or
ja
dec
sub
add
mov
dec
push
push
inc
inc
loopne
mov
(bad)
sbb
loop
pushf
jb
pop
add
and
cmps
push
pusha
pop
xor
mov
(bad)
sti
add
les
mov
pop
dec
addr16
jno
lds
loope
loop
bnd
or
mov
rol
ins
dec
cmps
push
je
dec
mov
fwait
dec
adc
xchg
adc
(bad)
push
xchg
or
jmp
test
adc
xor
inc
push
loop
or
jecxz
cmp
dec
repnz
inc
inc
ss
aad
push
dec
xchg
sbb
adc
pop
mov
neg
or
xchg
in
adc
cwde
dec
mov
fsubr
out
fadd
repnz
or
dec
pop
cld
sbb
sub
lods
and
adc
xchg
xchg
adc
xchg
xchg
call
mov
cwde
ffreep
test
cs
and
les
mov
not
lds
or
cmc
jnp
pop
out
sub
adc
xor
pop
dec
(bad)
test
pop
xchg
adc
popa
jb
xchg
or
and
add
outs
xor
gs
cmps
inc
jb
mov
retf
xchg
movs
das
arpl
loope
dec
cmc
inc
sbb
jb
aaa
(bad)
dec
jns
loop
inc
xor
xchg
int3
add
mov
retf
jecxz
iret
mov
mov
sbb
add
(bad)
ds
(bad)
cmps
(bad)
rol
(bad)
in
jno
xor
add
add
retf
and
xor
arpl
test
pop
sbb
lods
leave
(bad)
add
jp
imul
adc
fs
lock
push
add
enter
call
loop
add
sub
cmp
out
mov
jno
push
lea
stos
inc
adc
push
sub
cli
cmp
jno
mov
cdq
dec
pop
adc
in
test
xor
xchg
in
adc
inc
xchg
push
or
add
and
pushf
push
cmp
(bad)
in
sub
xchg
add
int3
dec
mov
add
outs
icebp
mov
es
aas
pop
dec
xor
adc
mov
adc
icebp
and
or
pop
adc
enter
inc
test
test
cmp
dec
lods
add
ja
enter
adc
xchg
xor
sti
or
and
jge
jge
jmp
or
mov
in
sbb
and
jb
les
shl
adc
ror
mov
push
cs
enter
or
push
add
jle
add
adc
mov
and
pop
fcomp
push
mov
ins
xchg
lahf
jnp
sti
fdivr
test
out
(bad)
lock
pusha
sbb
xor
add
xchg
hlt
ds
inc
push
repnz
xchg
adc
and
es
jle
fucomi
lock
push
fst
(bad)
pop
push
lock
xchg
inc
jnp
lahf
mov
sub
cmp
arpl
dec
push
or
jo
jns
sbb
push
or
dec
out
shl
ficomp
mov
ror
dec
xor
pop
jb
jno
and
and
ret
add
ret
inc
inc
xchg
rol
repz
mov
ja
jg
into
xor
mov
sub
sub
aaa
daa
lahf
mov
retf
sub
lahf
dec
pushf
and
lahf
dec
lea
and
stc
jae
or
inc
adc
dec
adc
in
mov
sub
xchg
inc
xchg
lods
fwait
les
jb
cmp
push
ror
lds
cmp
ret
jecxz
jno
adc
push
mov
loop
and
jge
cmp
popa
mov
ins
mov
dec
sbb
fist
aam
mov
adc
and
jae
bound
lds
daa
ja
popa
cld
sub
sbb
es
data16
gs
shl
push
mov
push
mov
ficom
xchg
lds
mov
and
cmp
and
add
sti
push
push
xchg
leave
js
add
sahf
inc
push
inc
sbb
push
les
xchg
mov
movs
jmp
add
mov
aas
inc
or
jo
rol
mov
or
cld
or
inc
mov
dec
ret
ds
mov
xchg
dec
xor
lock
add
xchg
int3
cmp
ja
enter
out
push
out
adc
mov
(bad)
and
cs
mov
push
push
pop
xchg
mov
cdq
nop
mov
cmps
and
in
aaa
ds
pop
and
mov
cmp
add
cmp
rcl
ror
adc
xor
adc
das
cmp
call
sub
xchg
mov
mov
xchg
dec
push
xor
shl
idiv
test
push
pop
xor
and
add
xor
add
mov
push
mov
and
js
xor
push
in
push
(bad)
push
sbb
dec
mov
xchg
dec
mov
xchg
ins
fldenv
and
dec
add
sbb
jmp
and
push
xchg
out
pusha
or
cdq
ja
(bad)
jge
inc
ins
mov
test
enter
movs
in
inc
setp
dec
pop
mov
fsub
push
and
loope
les
xor
inc
rcl
adc
adc
mov
in
push
jg
jl
inc
mov
icebp
xchg
mov
lods
xor
das
push
cs
in
test
push
and
pop
mov
dec
xchg
sub
pop
cli
xchg
add
xchg
ret
add
dec
push
sahf
ret
sbb
jg
leave
out
push
mov
xor
out
jmp
or
stos
sub
iret
lods
leave
jecxz
loopne
jmp
js
mov
inc
add
and
and
rcr
call
and
lock
dec
inc
pop
adc
out
add
jmp
mov
push
or
xor
push
jecxz
inc
add
dec
les
jmp
fs
mov
add
xor
or
into
dec
sbb
add
adc
pop
cmp
pop
xor
sub
xor
daa
mov
jge
xchg
shl
xchg
pusha
ret
push
div
push
int3
mov
stc
mov
dec
and
xchg
mov
stos
mov
mov
int
icebp
add
sub
push
aas
add
div
inc
cmp
add
dec
and
sub
jae
rcl
scas
inc
pop
pop
shl
bound
xchg
mov
test
in
mov
loopne
and
adc
mov
jp
fcomp
nop
jae
(bad)
jae
leave
and
into
xchg
dec
xchg
movs
mov
adc
and
cs
mov
mov
push
cmp
mov
and
mov
sbb
adc
or
or
inc
ror
dec
pushf
dec
push
rol
pop
or
sbb
out
jge
adc
pop
adc
mov
cwde
cmp
pop
xor
or
lods
cmp
pop
mov
shl
sbb
push
dec
sbb
add
push
push
arpl
ret
mov
cmp
inc
outs
mov
mov
test
or
ds
(bad)
sbb
(bad)
icebp
xchg
mov
fmul
in
and
xchg
jno
inc
les
ret
icebp
dec
jle
mov
xchg
mov
pop
adc
es
(bad)
fmul
mov
inc
adc
shl
push
push
and
inc
inc
or
dec
add
adc
add
dec
repnz
repnz
pushf
xor
loop
dec
pop
add
sbb
outs
pop
mov
and
sub
lahf
repnz
loopne
dec
mov
cld
cs
jns
inc
nop
hlt
mov
or
ret
sbb
mov
inc
inc
mov
or
mov
mov
and
and
in
icebp
out
xor
in
inc
sub
mov
es
int
cmp
in
or
inc
cmp
icebp
adc
mov
cs
call
cmp
jns
dec
ds
in
or
mov
sahf
xchg
sub
push
leave
and
mov
cli
idiv
or
pop
out
arpl
in
arpl
mov
pop
(bad)
pop
xor
mov
cmc
sub
sbb
xor
stos
mov
push
jge
xor
sbb
ins
fs
pop
push
mov
and
pusha
jnp
mov
jnp
pop
push
jae
xor
adc
sti
mov
js
xchg
jbe
sbb
es
adc
leave
shl
clc
dec
mov
rcl
pop
sub
push
xchg
push
dec
repnz
in
xchg
enter
cmp
and
stc
mov
sahf
cs
mov
cmp
arpl
push
xor
adc
and
(bad)
in
xor
push
sbb
and
fmul
cdq
and
les
clc
std
cmps
or
mov
jo
icebp
adc
sub
mov
mov
cmp
icebp
add
repz
popa
mov
xchg
mov
push
loope
push
add
das
add
in
test
inc
inc
mov
icebp
jmp
je
aas
add
mov
adc
inc
mov
call
sbb
gs
lock
and
nop
and
xchg
sub
dec
je
jmp
sar
jecxz
jle
ja
inc
loope
jnp
push
loopne
repz
scas
arpl
jmp
inc
popa
mov
add
adc
dec
fbld
shr
daa
cld
jg
sub
mov
pop
cld
mov
int3
div
cmp
adc
dec
loopne
dec
mov
and
or
mov
cdq
arpl
pop
enter
test
in
push
std
pop
fcom
lea
(bad)
pop
inc
xchg
pushf
call
call
sbb
arpl
mov
inc
xchg
ret
sub
xchg
jno
xchg
(bad)
sbb
inc
push
mov
xchg
pop
mov
daa
mov
inc
aad
cmps
mov
add
mov
adc
fdiv
jle
push
dec
adc
inc
scas
and
cmp
xchg
inc
test
inc
inc
pusha
call
cmp
push
jle
pop
loopne
push
push
stc
nop
adc
mov
addr16
cmp
xchg
dec
lahf
in
and
lds
inc
outs
dec
xor
pop
(bad)
jmp
outs
sub
rol
ja
outs
dec
nop
imul
xor
sahf
lock
xor
(bad)
push
inc
jg
inc
adc
dec
scas
mov
mov
ins
pop
cmps
add
add
xchg
jl
sbb
sub
mov
cmp
ds
xor
js
mov
ins
les
sbb
in
or
jp
pop
cmp
cmps
cmp
or
cmp
sub
add
es
cmp
or
or
out
jmp
loope
jo
mov
call
into
rcl
or
inc
adc
ds
stc
xchg
mov
xchg
loope
dec
jns
loop
dec
sub
pop
pushf
clc
xchg
and
out
cmps
mov
jle
mov
cmp
or
inc
mov
xchg
and
mov
loopne
int3
(bad)
pop
rcl
push
mov
jg
leave
or
mov
add
push
pop
adc
sub
adc
jnp
or
fmul
xchg
call
sub
or
mov
in
adc
stc
pusha
jo
push
push
sub
inc
mov
ja
and
out
cwde
cmps
adc
inc
ja
jne
add
jmp
outs
inc
jb
test
xchg
loopne
mov
addr16
mov
adc
and
leave
and
leave
push
popf
inc
pop
es
xchg
movs
das
and
gs
mov
add
mov
jno
inc
leave
loop
mov
sbb
(bad)
fadd
and
bound
pop
adc
pop
cld
mov
scas
movs
retf
sub
xchg
lea
push
inc
in
(bad)
adc
imul
dec
pushf
test
adc
cmps
in
retf
add
or
cwde
dec
adc
ret
mov
rol
mov
mov
xor
out
fsub
pusha
inc
retf
dec
div
jmp
test
pop
inc
dec
mov
mov
push
mov
adc
xchg
mov
fdiv
mov
adc
or
and
inc
ja
sbb
leave
xchg
test
adc
in
lds
cwde
sub
sbb
jl
sbb
ret
adc
lock
and
inc
push
dec
xchg
inc
mov
and
icebp
xor
mov
xchg
sbb
mov
fsubp
fsub
and
pop
sbb
retf
icebp
sti
xchg
repz
push
dec
and
xchg
dec
xchg
int
push
push
scas
nop
add
mov
mov
mov
push
jecxz
loopne
mov
sub
jno
xor
dec
fisub
add
loop
mov
out
or
mov
retf
mov
xchg
inc
rol
and
add
xchg
fisttp
push
(bad)
or
leave
jo
adc
stos
sar
and
mov
cmp
fidivr
popa
cwde
pusha
sub
mov
daa
cmps
sbb
pop
sub
cmps
clc
fs
mov
jle
dec
fs
add
call
pushf
loop
cdq
mov
xor
ja
in
dec
pop
and
inc
cld
addr16
mov
bnd
cs
jl
test
test
sbb
es
xchg
xchg
sub
dec
push
adc
pop
or
push
fmul
mov
adc
sub
retf
loop
mov
xchg
and
dec
push
jl
dec
cmps
mov
ret
loope
fisttp
push
jge
pop
(bad)
xor
push
xchg
mov
vmovhpd
out
pop
cmp
bound
sub
nop
mul
jbe
inc
icebp
mov
sbb
cmp
js
call
daa
fsubp
inc
out
jae
cmp
cmp
inc
(bad)
xchg
and
clc
hlt
adc
sbb
xchg
push
and
into
jge
hlt
sbb
or
xchg
lods
jnp
dec
sar
sbb
mov
adc
mov
enter
jmp
and
cli
and
lahf
icebp
xchg
les
(bad)
es
test
es
fild
xchg
call
mov
pop
mov
xchg
push
rcl
outs
pusha
in
dec
shl
and
sbb
cli
cld
xchg
adc
jnp
push
and
push
mov
mov
shl
dec
push
adc
sbb
mov
mov
xchg
adc
cmp
adc
bound
and
adc
or
pushf
xor
leave
inc
retf
loop
mov
and
(bad)
iret
clc
jge
xchg
xchg
lock
cld
aas
xchg
ja
imul
push
or
add
add
and
sbb
(bad)
or
pop
sub
dec
mov
mov
mov
inc
iret
adc
pop
adc
xor
adc
dec
jbe
ret
jae
mov
mov
psubw
or
cmp
gs
paddusb
call
sub
mov
(bad)
and
rol
rcr
test
loop
push
ins
nop
sbb
push
fbld
(bad)
retf
popa
jp
sub
cs
sub
adc
jle
jnp
shl
sahf
adc
mov
sub
js
ret
aas
xor
xchg
cwde
push
nop
mov
mov
adc
mov
movs
xchg
pop
pop
mov
sbb
cmp
frstor
add
xor
jge
pop
xchg
adc
jae
xchg
cld
pop
push
arpl
or
jb
dec
inc
or
ror
sbb
dec
out
xor
inc
cmp
and
jecxz
add
cwde
loop
(bad)
aas
ficom
mov
inc
bound
jmp
lds
dec
fadd
(bad)
jmp
pop
push
mov
add
cmc
imul
push
bound
adc
loop
add
or
pop
out
push
in
cmp
int3
cmps
movs
mov
xor
pop
or
loop
cmps
cmp
mov
cdq
cmp
sub
and
dec
add
repz
dec
cli
(bad)
mov
sub
repz
das
push
test
int3
xor
in
and
and
mov
popfw
push
enter
or
cs
mov
mov
in
lds
movs
mov
(bad)
out
jmp
ds
dec
or
jp
push
syscall
sub
fbld
leave
bound
add
adc
out
inc
loope
nop
and
jno
leave
adc
dec
add
and
xchg
dec
ret
push
sbb
mov
outs
xchg
xchg
xchg
hlt
mov
cmc
push
mov
out
loop
in
icebp
daa
push
or
and
dec
sub
cdq
movs
cmp
jmp
add
mov
and
push
xchg
dec
jg
adc
gs
fild
pop
sbb
lds
adc
adc
jmp
sub
cmc
add
push
jno
rcl
mov
push
or
idiv
neg
mov
mov
sbb
sub
xchg
loopne
mov
adc
sbb
loop
cmp
popa
adc
push
aad
lods
lock
ret
add
lds
push
bound
inc
push
push
out
pop
dec
les
cld
xchg
movs
dec
inc
call
or
sub
les
pop
push
ss
sbb
sbb
push
test
sbb
adc
adc
xchg
cvtdq2ps
in
push
inc
pop
movs
inc
fs
(bad)
xlat
adc
fsubr
jns
mov
xchg
inc
xchg
shl
data16
movs
fld
or
dec
pop
ja
push
jle
pop
test
inc
sub
and
jecxz
add
icebp
push
div
xchg
lods
lea
add
xchg
jne
fdiv
div
popa
dec
outs
sbb
das
push
ss
inc
(bad)
and
leave
cmps
dec
adc
jmp
cmp
ja
cld
enter
lock
js
fisttp
pop
(bad)
mov
cmp
scas
lds
adc
pusha
add
inc
lods
and
push
xchg
(bad)
mov
adc
mov
xchg
aam
dec
bound
ja
add
test
clc
pop
xchg
dec
loope
arpl
mov
fcom
ja
cdq
add
outs
dec
push
repz
dec
or
or
pushf
repz
or
jl
icebp
mov
call
cmps
push
into
loop
aas
aam
or
(bad)
in
jle
inc
das
mov
pop
in
lock
jge
mov
ret
sbb
jnp
xor
(bad)
sub
icebp
adc
mov
xor
sbb
test
add
int3
outs
clc
push
mov
cdq
in
pop
jp
jnp
fld
and
fnstenv
fs
cmc
cmp
out
pop
cmp
mov
movs
xor
inc
push
pop
sbb
fcomp
imul
add
add
fadd
xchg
sub
sbb
in
and
loop
dec
inc
sub
adc
(bad)
push
mov
xchg
add
shl
out
(bad)
mov
and
and
push
adc
pop
out
xchg
and
mov
in
push
adc
repz
repz
inc
retf
cmp
or
js
iret
sbb
dec
push
ins
and
outs
mov
nop
in
cwde
pop
xchg
arpl
push
dec
les
sub
in
dec
loopne
nop
mov
add
sub
cld
add
test
xor
adc
mov
clc
dec
adc
inc
push
leave
nop
nop
repz
sub
jns
sub
xchg
dec
cwde
or
pop
pusha
xchg
xchg
push
adc
std
push
fild
jb
inc
(bad)
jns
sbb
stos
sbb
pop
dec
ret
js
inc
push
and
(bad)
js
ret
cli
movs
sub
xor
adc
fwait
out
xor
pop
in
icebp
mov
cmp
xor
test
mov
mov
js
mov
xor
dec
mov
sub
fs
inc
add
nop
inc
mov
ins
stos
add
pusha
xor
push
aaa
sbb
movs
mov
xor
xchg
hlt
retf
inc
(bad)
mov
mov
jb
jbe
ret
and
inc
ud1
in
or
sub
add
pusha
xor
gs
fistp
loope
adc
cmp
xchg
aad
dec
add
inc
xchg
xor
fadd
cwde
cmp
mov
xchg
rol
xchg
cli
js
lahf
cmp
mov
or
dec
and
dec
jmp
xor
xchg
xchg
adc
fld
or
les
ret
dec
xchg
dec
bound
xor
stos
daa
mov
in
add
loop
loope
xchg
xchg
pop
leave
sbb
test
out
fsub
adc
pop
or
in
mov
and
adc
push
call
and
ds
popa
xchg
lds
ret
inc
push
push
sub
sub
gs
push
shl
pop
xchg
pop
inc
ds
sahf
nop
jne
cld
es
js
bound
jae
adc
out
jb
and
jle
lds
mov
dec
ret
popa
out
std
sbb
push
sub
sbb
fs
fist
outs
dec
out
dec
push
sub
cmp
add
test
fst
jne
or
jmp
rol
xchg
sbb
test
div
out
dec
cmp
push
pop
and
adc
loop
jmp
mov
call
fadd
and
cmps
cmp
dec
cdq
mov
jno
inc
push
pushf
loop
dec
mov
cs
mov
test
(bad)
repnz
or
dec
fs
xchg
imul
push
xchg
jns
out
mov
and
adc
outs
or
sbb
mov
pop
and
jnp
pop
leave
mov
out
push
test
or
mov
push
adc
test
cld
mov
daa
xchg
(bad)
js
jo
push
sub
sub
and
lods
test
retf
sbb
test
ins
(bad)
sub
dec
data16
mov
inc
dec
sbb
imul
stc
jg
mov
loopne
jecxz
mov
clc
ja
repz
inc
(bad)
neg
or
mov
jg
or
ror
in
jns
dec
mov
mov
push
and
mov
mov
cmp
fcomip
clc
imul
dec
inc
sbb
adc
lock
or
loopne
xor
push
cdq
cmp
mov
lock
repnz
add
mov
mov
sub
cs
mov
xchg
lahf
loopne
ss
adc
sbb
mov
retf
mov
(bad)
or
xchg
mov
dec
mov
(bad)
je
fisttp
cmc
xchg
popa
aas
in
es
jbe
xchg
dec
sub
mov
lock
sti
cld
lods
push
leave
inc
outs
hlt
nop
pop
ret
xor
lods
and
pop
sub
out
xchg
inc
mov
mov
test
and
xor
xchg
add
push
jnp
fisttp
mov
loopne
adc
pop
in
aad
dec
clc
cli
xchg
jno
fidivr
pop
(bad)
add
fst
es
js
(bad)
scas
dec
lahf
bound
lds
cmps
xchg
or
jecxz
add
push
cmps
or
stos
sub
sub
or
cmps
mov
push
sti
psubw
gs
push
xchg
fsub
sub
icebp
nop
inc
push
idiv
gs
add
dec
pusha
xchg
sbb
mov
bound
mov
lahf
or
les
arpl
icebp
mov
jbe
cmp
clc
es
cmovg
vmwrite
xor
xchg
mov
les
dec
ror
inc
inc
dec
in
es
lock
adc
js
idiv
cmp
jecxz
mov
daa
stos
jb
bound
mov
xchg
sub
or
and
mov
sub
adc
add
and
lds
sar
and
inc
inc
(bad)
dec
stc
outs
into
jno
mov
cmp
pushf
jmp
dec
sub
jg
out
loop
push
jae
nop
push
mov
fisub
cld
jbe
mov
pop
push
dec
cmps
cld
lea
mov
out
push
(bad)
xchg
pop
pop
std
mov
into
xchg
jo
mov
loop
inc
mov
mov
arpl
popf
in
les
xchg
jno
jmp
test
cmp
jno
mov
mov
inc
gs
sub
or
aad
inc
mov
mov
and
push
and
enter
adc
mov
into
clc
xchg
xchg
fs
loope
lock
adc
imul
push
cdq
push
sub
mov
sbb
pop
adc
adc
ins
and
xchg
xor
adc
sub
xchg
and
sbb
cmp
adc
or
sbb
ja
adc
fndisi(8087
mov
mov
sub
or
xchg
cs
mov
mov
and
xor
js
xchg
and
dec
sti
mov
in
push
add
arpl
les
fistp
cld
and
dec
bound
adc
sub
outs
repnz
adc
dec
es
push
xor
or
mov
and
es
sub
xor
into
lods
or
xchg
(bad)
jle
jae
je
retf
bound
sbb
mov
arpl
sbb
mov
adc
inc
dec
dec
std
and
adc
jl
adc
icebp
and
jae
scas
mov
push
in
cwde
loop
mov
sub
dec
adc
ret
out
je
retf
rcl
or
movs
inc
and
std
xchg
adc
in
mov
loope
dec
test
fs
loop
enter
(bad)
imul
pop
clc
push
ins
pmulhuw
loope
hlt
inc
and
and
dec
in
shl
mov
jns
cld
jmp
jnp
shl
sub
inc
inc
repnz
dec
add
js
enter
xchg
aas
xchg
push
sar
enter
clc
mov
fwait
cmps
cmp
sti
and
xchg
dec
jne
mov
cmp
fistp
fsub
jmp
add
sub
test
std
mov
dec
push
dec
clc
dec
enter
dec
cli
pop
repnz
dec
adc
jns
movs
out
std
jle
jge
sbb
jae
push
and
xchg
push
(bad)
push
mov
dec
fsubr
sub
cs
cmps
nop
push
mov
mov
xchg
mov
adc
xchg
or
in
mov
pop
add
sub
sbb
jmp
mul
jmp
mov
add
lock
mov
(bad)
xchg
and
jns
frstor
sub
adc
and
adc
hlt
mov
mov
(bad)
mov
ret
test
and
jp
add
popf
inc
sub
cmp
dec
push
jb
mov
add
dec
adc
dec
(bad)
jb
addr16
pop
dec
push
in
adc
es
inc
fist
cs
mov
mov
nop
lods
sub
mov
cld
mov
add
mov
mov
sub
adc
adc
adc
or
fbld
xchg
dec
inc
xor
cmp
sahf
xor
jae
xchg
inc
mov
pop
push
arpl
mov
fimul
popa
xor
inc
mov
hlt
xlat
or
retf
inc
loop
and
lods
and
or
adc
sbb
sub
jb
xchg
iret
lds
xchg
test
mov
and
mov
mov
and
(bad)
push
(bad)
push
mov
pushf
cli
pop
out
arpl
inc
pop
adc
dec
cmp
inc
imul
xchg
sahf
pusha
cmp
mov
and
or
jg
xchg
mov
cld
dec
hlt
lock
pop
jb
ret
adc
jbe
mov
push
mov
add
test
adc
add
cmps
fmul
(bad)
xor
sti
or
sbb
ret
xor
cld
or
pcmpgtw
inc
and
inc
call
repz
jg
outs
push
repnz
sbb
xor
add
ret
pop
and
fsub
fbld
xchg
mov
sbb
pop
and
out
cwde
dec
leave
mov
sbb
sahf
inc
push
sahf
repnz
dec
js
sar
xchg
mov
iret
fs
int3
rcl
add
cwde
adc
retf
fnstsw
dec
clc
jmp
jnp
jmp
xor
or
cmovns
out
aas
popa
sub
adc
push
or
cdq
xor
mov
popf
jmp
mov
and
cld
inc
jmp
sub
retf
inc
sub
aad
rcr
loope
jnp
les
sub
icebp
cdq
mov
mov
sub
mov
retf
fs
cmp
jo
data16
push
js
outs
int
jl
adc
adc
cmp
mov
adc
test
jno
stos
xchg
loope
mov
pop
mov
mov
adc
fs
mov
cmps
add
xor
loopne
dec
push
dec
js
xchg
and
je
dec
push
cld
and
jge
push
push
lods
test
dec
out
mov
mov
out
xor
adc
push
mov
sbb
xchg
and
adc
inc
jnp
call
and
sub
shl
sbb
push
ret
cmps
mov
dec
inc
inc
mov
cwde
inc
ss
loop
out
xor
or
or
sub
xchg
dec
sahf
out
xchg
inc
and
stos
inc
xchg
add
push
add
adc
add
movs
and
mov
xor
inc
(bad)
in
fldenv
jecxz
or
data16
loop
sbb
mov
bound
sub
mov
mov
in
dec
mov
mov
xchg
scas
sbb
clc
mov
shr
adc
xchg
shl
sub
in
sahf
xor
inc
and
inc
push
popf
fucom
loop
or
loope
lock
push
icebp
mov
pop
xor
adc
popa
leave
nop
sbb
xchg
aad
dec
pop
push
sub
mov
dec
pushf
dec
inc
inc
loop
adc
mov
js
jo
bound
inc
mov
(bad)
pop
push
sahf
sub
mov
push
or
shl
sbb
mov
mov
aaa
push
push
ins
and
loop
or
fidiv
or
and
inc
ins
scas
mov
push
adc
mov
adc
jge
(bad)
aas
popa
xor
daa
or
and
icebp
pop
fs
mov
lock
popa
fst
pop
mov
fld
dec
icebp
pop
test
or
inc
je
in
add
xchg
in
pushf
pop
pop
xor
dec
adc
dec
mov
adc
mov
popf
xor
or
push
push
nop
and
add
and
sub
mov
or
dec
cwde
xor
popf
jge
sbb
and
lds
rol
inc
mov
xchg
mov
and
test
arpl
sub
test
popa
ss
repz
inc
pop
and
push
push
xor
sti
and
xchg
sub
jnp
cmps
lods
mov
dec
mov
lea
imul
mov
pop
sbb
mov
xor
les
jle
pop
dec
test
mov
mov
mov
jle
mov
push
push
neg
inc
popf
pop
jae
call
test
xchg
xchg
cmps
xchg
lods
nop
test
mov
add
mov
call
std
sbb
dec
ds
js
movs
pop
out
lahf
xor
es
cli
xchg
xor
mov
fwait
add
inc
add
lock
fs
inc
(bad)
and
lods
xrelease
xor
lds
add
mov
mov
fs
inc
push
enter
adc
sar
icebp
mov
ret
jle
and
xchg
aam
cmps
dec
ret
xchg
adc
or
loopne
or
cmp
sub
xchg
dec
rol
mov
jo
(bad)
xor
sub
fsub
cs
jb
mov
push
(bad)
adc
mov
jne
mov
retf
jmp
and
les
bound
sub
mov
and
and
jno
mov
xchg
sti
shl
nop
fisttp
inc
and
sub
dec
sub
cwde
jnp
ins
or
cmp
or
xor
push
sub
lock
mov
arpl
pusha
and
and
and
out
and
and
loop
retf
pop
adc
js
(bad)
jg
mov
dec
nop
dec
out
add
jns
sti
xchg
js
shr
xchg
and
std
sti
cmp
popa
add
or
jle
fisttp
inc
sbb
adc
rcl
dec
cmp
inc
loope
mov
inc
cmps
pop
aam
cmps
cmp
cld
imul
and
sub
dec
jns
pusha
popf
xor
in
arpl
int3
sub
adc
lods
xor
ins
xchg
mov
xchg
imul
xchg
pop
pop
or
das
(bad)
mov
fsub
enter
pop
out
bnd
xchg
mov
inc
pop
mov
xor
pushf
jecxz
enter
test
xor
push
test
test
xor
mov
test
jg
mov
inc
add
pop
add
jb
mov
cmp
jg
mov
loope
inc
sbb
push
mov
jecxz
dec
icebp
sbb
idiv
jnp
add
inc
sbb
mov
inc
xor
inc
and
cld
arpl
jo
xchg
dec
adc
jne
pop
push
or
pop
cld
sti
mov
xchg
shr
test
xchg
imul
cmps
and
add
xchg
ror
sti
sbb
lahf
dec
or
arpl
stc
xor
lds
call
xor
loop
add
pop
dec
xchg
es
pop
mov
bound
je
jge
cmp
jl
lods
lea
ret
xor
add
dec
sub
test
shl
adc
sahf
xor
cwde
stos
jge
xchg
inc
inc
dec
cwde
mov
ds
mov
push
mov
scas
mov
test
add
and
xor
rol
dec
push
or
movhps
fst
xor
test
adc
dec
push
and
pop
call
jo
dec
and
test
add
or
lahf
cdq
enter
add
call
mov
pusha
mov
(bad)
xchg
iret
xor
(bad)
fs
jnp
js
jge
add
mov
rcl
sbb
leave
jge
jecxz
push
or
(bad)
cmovne
lock
xor
dec
ja
push
xor
xchg
lods
bound
test
call
movs
pop
sub
mov
nop
inc
or
in
xor
ds
idiv
jnp
lods
jo
and
sub
or
js
cld
sbb
xor
mov
mov
adc
xchg
in
sbb
addr16
in
and
es
gs
pop
adc
loop
in
xor
sbb
mov
mov
daa
shl
fcom
inc
movs
outs
xchg
mov
xchg
ins
and
and
pusha
ret
fiadd
int3
and
jnp
loopne
stos
pop
add
daa
mov
push
pop
or
jl
mov
retf
mov
rcr
cs
cs
xchg
jne
mov
mov
fs
add
call
mov
ins
icebp
pop
loopne
add
ret
xor
sub
mov
mov
fist
inc
adc
je
ins
adc
jmp
jecxz
(bad)
mov
xchg
(bad)
xchg
cmp
dec
cvtps2pd
and
jmp
or
adc
dec
sahf
pop
test
scas
fistp
int3
sbb
gs
dec
(bad)
and
and
inc
cld
daa
dec
sub
cli
cmps
dec
sbb
scas
dec
jl
cmp
dec
mov
sbb
repnz
adc
jmp
mov
es
inc
aaa
leave
ja
push
lods
les
push
adc
or
ds
inc
inc
mov
xchg
mov
push
cmp
pusha
add
fs
popa
xchg
cmp
xor
bndldx
out
xor
mov
es
das
xor
or
sub
mov
fsub
or
test
push
mov
cmp
js
pushf
daa
fmul
mov
and
js
sbb
repz
lahf
dec
xor
leave
pop
adc
xchg
shl
inc
mov
std
fsubp
jle
cmp
fild
in
sub
jbe
and
push
sub
mov
xor
arpl
mov
dec
mov
sqrtps
inc
sub
cmp
ret
rcr
in
jmp
in
std
mov
xchg
sbb
mov
retf
and
and
sub
sub
int
aas
jecxz
dec
cmp
int3
adc
dec
mov
in
push
je
rol
loop
jno
lds
clc
xor
mov
jb
loopne
dec
in
push
imul
cmp
fs
adc
dec
cld
daa
sub
push
fs
xor
rcr
cdq
ss
and
dec
push
jo
add
pusha
pop
adc
mov
bound
(bad)
or
adc
in
mov
push
push
xchg
mov
pop
inc
jge
push
adc
frstor
mov
or
pusha
and
inc
add
inc
out
leave
bound
nop
out
xor
xchg
mov
xor
sar
mov
repnz
in
test
div
pop
idiv
lods
jge
mov
mov
jo
sbb
aaa
fdiv
mov
mov
jnp
or
into
pop
mov
or
pop
dec
mov
pop
and
fidiv
les
adc
pop
hlt
xor
fsubr
mov
idiv
outs
xchg
add
in
shl
inc
xor
xor
sub
pop
xchg
add
(bad)
cli
mov
inc
mov
(bad)
(bad)
jg
in
ja
jg
not
ins
(bad)
push
nop
adc
ss
(bad)
ds
cmp
mov
test
dec
mov
sbb
push
mov
gs
fwait
mov
clc
jmp
xor
je
inc
and
sahf
adc
adc
dec
jp
(bad)
adc
loop
inc
pusha
and
pop
push
je
lock
mov
cs
call
popf
lds
(bad)
jg
push
dec
sbb
into
cmc
add
adc
xor
dec
mov
sub
push
adc
pop
xchg
in
sub
pop
or
sbb
pusha
jmp
pop
push
pop
dec
out
jp
sbb
xchg
dec
es
adc
inc
pop
daa
mov
enter
mov
(bad)
or
fnsave
(bad)
sti
xor
dec
mov
jnp
movs
js
test
cmps
clc
out
push
data16
in
mov
pop
xchg
ins
xchg
popa
mov
xchg
fst
mov
je
and
retf
mov
in
test
sahf
lock
loop
in
imul
and
(bad)
sub
cli
lahf
jo
cmp
loop
cwde
(bad)
or
dec
sub
push
pop
sahf
sti
fdivr
mov
rcr
sbb
jp
dec
sbb
ds
inc
out
or
or
test
mov
adc
rol
mov
pop
dec
xlat
jecxz
mov
mov
xchg
add
jle
repnz
push
std
dec
popa
dec
cli
pop
cmps
dec
cmp
dec
ret
sbb
or
add
add
sub
ret
cwd
sbb
cmps
dec
pushf
shl
dec
add
dec
xchg
(bad)
cmps
dec
xchg
sub
cmp
int3
(bad)
out
cwde
sbb
mov
adc
loop
mov
sbb
mov
xor
push
xor
cmc
push
push
or
sti
mov
and
imul
sub
inc
test
cmp
pop
mov
push
add
lock
cmp
lods
dec
inc
mov
jge
mov
popf
cs
sti
sub
dec
add
add
cdq
pop
xor
inc
dec
cmp
and
and
clc
gs
rcr
push
pop
bound
add
mov
add
out
adc
push
ret
jae
push
and
mov
or
dec
test
mov
add
retf
xchg
in
mov
sbb
xor
cmps
cld
ss
mov
out
pop
mov
shr
mov
les
movs
xchg
cmp
test
repz
inc
pop
pop
mov
sets
push
mov
pop
je
jmp
test
add
and
jo
and
jne
push
push
xor
(bad)
sbb
std
xor
popf
xchg
xchg
xchg
mov
add
dec
sbb
ds
or
jno
pop
xor
fisttp
dec
add
dec
mov
aam
les
inc
(bad)
jmp
or
pop
adc
mov
add
enter
vmread
std
imul
mov
movs
loope
es
cmp
push
adc
mov
fstp
inc
xor
clc
leave
or
shr
adc
(bad)
daa
xor
add
(bad)
mov
jb
xchg
push
aam
jge
sbb
jne
fild
test
pop
loope
enter
cdq
jno
shr
xlat
dec
shr
(bad)
adc
int3
daa
sub
cmp
mov
sbb
or
pop
inc
adc
sub
scas
les
leave
les
lds
xor
dec
pop
pop
push
cmp
lock
or
inc
adc
and
arpl
fnclex
jnp
arpl
pop
out
cwde
pop
loop
push
outs
repz
inc
and
sbb
rol
loope
in
hlt
mul
into
movs
mov
xchg
aaa
jo
mov
mov
into
inc
jp
cdq
mov
inc
clc
sbb
or
push
lock
aas
pusha
sahf
sbb
sbb
ds
out
xchg
inc
sub
pusha
test
frstor
mov
inc
loop
dec
and
cmc
sub
pop
leave
and
sbb
fiadd
sub
xchg
shl
(bad)
adc
sub
(bad)
nop
xor
ins
leave
xchg
inc
aad
fmul
in
pop
add
dec
and
dec
fs
push
sub
jg
dec
jb
mov
sub
movs
add
xchg
aas
gs
jecxz
or
mov
sbb
pop
retf
mov
lds
xor
loop
push
nop
or
jns
mov
out
rol
add
inc
and
sub
sbb
cmps
sub
nop
loop
ja
sbb
lahf
bound
dec
sub
inc
mov
jb
xor
js
int3
adc
fild
xchg
inc
adc
xchg
and
pop
cmp
repz
pop
aam
cmp
mov
stc
mov
mov
sub
inc
cmp
loope
jg
(bad)
iret
cwde
push
push
arpl
dec
mov
das
jle
icebp
(bad)
lock
mov
cwde
loop
retf
je
sub
rcr
jae
sbb
and
pop
fild
(bad)
dec
aam
push
mov
adc
add
sahf
jle
das
mov
and
jmp
xchg
push
push
pop
jge
dec
test
enter
daa
cmp
leave
mov
repnz
sub
pop
adc
add
cmps
call
push
inc
push
icebp
je
loop
cmp
sub
ret
mov
icebp
push
ja
push
or
ror
xchg
sbb
pop
fnstenv
jge
jp
mov
push
sahf
sub
cld
dec
fs
pop
movs
pop
push
lea
adc
add
(bad)
inc
cmp
out
in
push
mov
adc
add
sub
imul
jge
and
adc
pop
add
sub
inc
test
test
sub
nop
adc
pop
xor
sub
sub
dec
and
fisttp
push
(bad)
push
gs
jb
adc
dec
in
pop
mov
push
add
je
mov
push
call
sbb
sub
or
iret
js
loop
retf
out
(bad)
enter
xchg
test
rol
xchg
inc
mov
xchg
and
adc
(bad)
mov
sbb
fcomp
adc
xor
mov
xchg
mov
sbb
fsub
neg
clc
adc
pop
sbb
jo
or
mov
nop
xchg
xchg
add
test
and
sub
adc
std
test
xbegin
add
xor
and
mov
cld
aas
in
and
rol
push
jmp
inc
in
mov
cwde
pop
leave
test
adc
cs
inc
lods
pushf
sbb
and
adc
jecxz
retf
bound
inc
pusha
pop
das
ror
mov
leave
pop
or
xor
(bad)
scas
mov
inc
cmp
xor
and
push
mov
js
or
inc
sbb
or
push
mov
cmp
push
fs
sub
dec
sbb
pop
repnz
(bad)
cld
xor
xchg
xchg
and
xor
nop
ffreep
jmp
enter
fsub
lahf
sub
mov
xor
mov
jmp
cwde
ins
jecxz
add
xor
inc
(bad)
lock
xor
js
add
gs
or
xchg
jns
dec
cwde
adc
cmp
push
or
mov
jo
and
cmc
pop
leave
movs
adc
cmp
(bad)
cld
inc
or
mov
popf
inc
rcl
mov
push
not
hlt
xchg
mov
mov
cwde
rcl
ja
lahf
popa
stos
add
adc
into
psubw
dec
stc
outs
dec
fld
add
or
add
mov
xchg
ins
xchg
mov
ja
mov
mov
sbb
xchg
adc
adc
lahf
lock
loopne
cdq
jecxz
adc
imul
cmp
sub
enter
ret
sub
gs
inc
add
xor
(bad)
fsubr
clc
dec
add
das
or
ret
lock
inc
lahf
cmp
inc
push
int
mov
dec
adc
sbb
fs
lahf
jno
xchg
or
dec
leave
pop
dec
les
leave
shl
cmp
leave
mov
call
xchg
fsub
scas
les
sub
popa
adc
int3
out
repz
test
pop
(bad)
pop
js
mov
cmovb
frstor
and
push
inc
(bad)
(bad)
aam
xor
pop
ins
and
and
loopne
mov
das
sbb
push
and
idiv
test
cmp
sbb
cwde
sar
lahf
xor
rol
out
out
jno
lds
xor
icebp
out
bound
and
retf
clc
nop
loope
mov
xchg
sbb
adc
push
xchg
mov
xchg
xchg
sbb
leave
adc
ds
push
les
push
adc
or
push
pop
dec
jg
adc
fcomp
in
jge
push
shl
mov
pushw
pop
or
xchg
lea
add
cmp
sub
pop
arpl
lock
and
cs
mov
repz
xchg
pop
fadd
dec
pop
add
rcr
inc
popa
icebp
sbb
(bad)
lds
or
out
call
dec
icebp
cmps
leave
dec
ret
add
and
add
inc
xchg
outs
test
dec
(bad)
jmp
or
nop
xchg
jne
stc
or
inc
fldenv
adc
out
test
test
nop
fs
sbb
or
cs
cwde
sbb
dec
lea
push
aam
inc
and
push
push
adc
fucom
loopne
mov
adc
cwde
fist
jmp
frstor
dec
es
cmp
push
xor
nop
bound
cmp
fisttp
push
movs
fs
leave
es
and
push
push
and
(bad)
nop
mov
je
scas
xchg
les
mov
ss
inc
jl
(bad)
out
jae
dec
sahf
mov
pop
inc
push
adc
inc
mov
xor
loopne
pop
dec
push
xchg
sti
mov
ret
xor
adc
xor
and
iret
sbb
sbb
xor
movs
push
mov
mov
enter
or
inc
sbb
test
ret
pop
out
mov
and
mov
inc
and
sar
pop
out
arpl
ror
neg
ja
popa
pusha
bound
add
jo
adc
and
pop
rol
enter
int
inc
adc
cmp
loop
mov
adc
mov
movs
fabs
outs
rcl
cmps
lods
stos
dec
test
out
jno
cdq
ds
aas
pop
pop
dec
mov
dec
stc
xor
daa
dec
xor
xor
mov
sub
stos
in
test
mov
(bad)
out
pop
jg
adc
mov
sbb
xchg
cmc
and
adc
nop
call
gs
rcr
imul
fiadd
xchg
xor
mov
aas
and
mov
vunpcklpd
rol
test
xlat
leave
push
xor
and
fs
and
in
inc
sahf
cmp
add
xor
(bad)
xchg
mov
frstor
sub
sub
mov
xchg
push
cdq
daa
mov
mov
daa
push
mov
ds
sar
sar
xchg
add
fdivr
sbb
into
add
adc
or
and
xor
xor
add
test
int3
es
mov
and
pushf
dec
test
xlat
inc
repz
jle
cld
test
in
loope
add
add
mov
ds
cmp
push
enter
pop
and
jb
js
test
jbe
fidivr
pop
ror
pop
stc
or
vpextrw
dec
aas
movs
push
inc
mov
or
inc
adc
sub
pop
xchg
test
mov
sub
jmp
not
scas
xchg
or
jle
adc
js
jo
xor
daa
mov
call
cdq
dec
push
push
or
sti
jae
inc
xchg
enter
(bad)
pop
rcl
jb
js
test
pusha
push
mov
cmp
in
fs
les
or
hlt
sti
les
xchg
inc
sbb
les
jno
add
into
add
enter
xchg
mov
jb
mov
and
icebp
enter
and
imul
into
cmp
lods
add
stos
mov
mov
test
mov
in
shr
test
shr
cs
jmp
call
aad
aam
sbb
sti
or
cwde
dec
bound
add
and
clc
nop
fcmovne
push
js
jo
aas
inc
xchg
mov
push
or
xchg
push
and
jle
lahf
enter
inc
mov
cs
sub
sar
mov
cwde
jb
adc
adc
xor
jbe
xor
mov
xchg
popa
lock
gs
sub
daa
cli
sbb
dec
pop
fist
ror
inc
cmp
mov
sub
rcl
rol
xor
retf
shl
xchg
adc
not
pop
out
cmp
movs
sbb
scas
(bad)
(bad)
xchg
sub
dec
pop
mov
dec
push
or
dec
cmp
inc
setl
push
out
aas
mov
les
fst
xchg
pusha
dec
sub
push
push
cmps
in
and
sub
loope
les
aam
daa
leave
mov
mov
and
inc
je
cmps
sti
sahf
dec
shl
sahf
lds
mov
adc
jmp
mov
sub
shl
rcl
jle
and
xor
adc
inc
xchg
dec
adc
pop
pop
dec
cld
rcl
sub
cmp
push
dec
cwde
inc
and
adc
movs
and
push
jl
out
idiv
add
lock
mov
ror
dec
stc
test
mov
dec
mov
adc
sub
sti
or
push
sbb
fs
or
daa
retf
aas
push
outs
adc
call
adc
add
int
mov
(bad)
out
(bad)
jae
arpl
inc
movs
fnstsw
adc
rol
cmps
xchg
imul
rol
sub
and
mov
inc
xchg
xchg
div
jo
xchg
push
xchg
xchg
movs
sub
nop
jno
(bad)
fabs
ds
(bad)
fcom
nop
sbb
mov
mov
aam
into
loop
dec
pusha
and
push
push
and
xor
cmp
dec
and
xor
inc
shl
cmp
arpl
and
ins
jg
jl
and
jnp
scas
fsub
nop
sub
lock
cmp
cmp
and
push
mov
sub
sub
aas
pusha
mov
test
dec
nop
jg
xchg
sub
arpl
call
mul
cmps
jbe
das
mov
pushf
or
pop
dec
jp
and
sti
and
add
mov
mov
sbb
es
sar
fstp
ins
pop
cmp
push
rol
jo
mov
mov
xchg
loopne
int3
lods
movs
jecxz
push
enter
fucom
dec
add
js
and
mov
add
inc
push
and
fldenv
mov
sub
ror
cmp
xchg
ins
xchg
(bad)
pop
fmul
jecxz
pop
or
xchg
dec
xchg
mov
adc
clc
xor
js
aam
(bad)
loope
push
pop
xor
pushf
pop
mov
fsub
inc
fisttp
jnp
fs
push
add
bound
inc
and
cld
jmp
mov
mov
in
in
and
and
ror
pop
jae
xchg
push
push
pop
xchg
hlt
lahf
adc
xchg
push
mov
loope
leave
adc
ja
movs
xchg
jo
inc
test
pusha
pushf
mov
jmp
movs
test
xchg
fcomp
(bad)
(bad)
adc
mov
fsubrp
scas
pop
fidivr
stc
dec
jo
inc
add
cmp
addr16
fdivr
sar
push
xchg
push
dec
and
retf
xchg
shl
mov
adc
dec
pop
add
xchg
fisub
ret
hlt
out
xchg
cwde
fsub
retf
inc
inc
push
sahf
cmp
cmps
lods
(bad)
mov
jb
and
addr16
push
pushf
gs
shl
mov
dec
lods
das
sbb
mov
es
lods
test
inc
jmp
mov
adc
not
out
pop
sub
test
adc
inc
jno
inc
hlt
pop
fmul
inc
xchg
dec
push
adc
jae
push
aaa
and
ds
fiadd
sbb
adc
pop
push
shl
jle
pushf
cvttps2pi
inc
xchg
mov
mov
test
inc
pop
(bad)
inc
test
(bad)
and
pop
cld
inc
push
jecxz
hlt
or
adc
dec
sbb
xor
test
cdq
xor
jo
add
xchg
sbb
daa
fsub
sti
ret
jmp
add
icebp
dec
xor
pop
test
cmps
inc
xchg
mov
pusha
out
jno
cwde
sbb
out
and
(bad)
mov
pop
dec
les
jl
dec
mov
leave
cmps
cmp
mov
loop
popa
lock
xchg
xchg
ds
lea
pop
or
cld
and
in
inc
xchg
sar
std
inc
cs
clc
lea
daa
sbb
loopne
sub
or
sbb
adc
mov
sub
adc
xchg
pop
xchg
lods
xchg
adc
int3
and
add
mov
mov
rcl
sub
and
sbb
cwde
clc
or
xchg
(bad)
out
pop
or
clc
sub
push
hlt
nop
loope
inc
xor
add
std
push
inc
inc
(bad)
clc
and
adc
pop
inc
in
mov
xor
pushf
scas
test
mov
inc
fisub
dec
stc
aas
pop
mov
jne
dec
mov
xlat
cmps
dec
and
les
mov
dec
jbe
mov
pop
(bad)
retf
ret
in
ret
pop
hlt
test
adc
ret
mov
test
and
popa
xor
add
ja
leave
add
cli
xchg
mov
test
les
imul
lods
into
add
mov
mov
dec
sub
and
xor
mov
add
sub
outs
dec
inc
imul
nop
jo
push
xor
arpl
ret
jg
push
mov
leave
xchg
xlat
push
jno
cli
pusha
xor
mov
mov
dec
sar
xor
mov
retf
hlt
in
repz
xchg
push
dec
sbb
mov
test
mov
sub
addr16
dec
inc
cdq
dec
xchg
adc
cmp
(bad)
ffreep
icebp
mov
push
dec
fwait
test
test
inc
xor
outs
adc
xor
add
push
jb
cwde
push
lock
(bad)
stc
scas
dec
mov
movs
sub
cmp
mov
mov
cmp
mov
or
or
mov
mov
nop
mov
rol
cmps
cmp
jno
push
repnz
cmp
sahf
repnz
bound
lock
add
adc
mov
cmp
imul
cld
mov
lds
xchg
aad
arpl
and
or
test
or
je
addr16
xchg
jl
dec
inc
pop
adc
mov
mov
shl
jno
aam
cmp
sbb
jl
shl
cwde
popa
mov
into
cs
xchg
inc
adc
mov
xchg
nop
shl
xor
dec
shr
xor
or
cs
or
ret
adc
add
pop
mov
mov
pop
mov
xchg
mov
bound
mov
inc
clc
dec
shl
pop
ficom
inc
das
dec
pushf
sbb
pop
cmps
xchg
push
aaa
cdq
sbb
enter
movs
and
and
xchg
loop
mov
mov
repnz
sbb
hlt
test
es
sbb
or
nop
mov
push
int3
and
push
xchg
or
leave
jp
les
fdiv
scas
lods
fimul
mov
adc
inc
pushf
jl
sub
sub
(bad)
cmp
mov
dec
movs
es
cmps
cmp
test
push
xchg
xchg
adc
lods
cs
or
dec
sbb
mov
in
mov
jmp
loope
xor
sti
ud1
jge
sub
mov
or
(bad)
stc
pop
pop
imul
add
add
mov
(bad)
and
inc
int3
pop
or
sbb
sahf
mov
sub
pop
inc
push
xchg
push
imul
adc
pop
jb
pusha
sub
add
icebp
inc
gs
and
pop
or
cmps
or
ja
aam
sar
daa
repz
xchg
mov
mov
mov
sub
inc
jo
clc
dec
ror
adc
and
rol
and
push
mov
push
es
js
adc
mov
nop
xor
jns
jmp
sar
pop
neg
cmp
retf
ret
je
and
addr16
pusha
leave
test
jno
or
cmps
sar
mov
mov
mov
nop
xor
repz
sub
imul
cmc
pop
aaa
inc
icebp
in
and
pusha
inc
dec
mov
lea
lock
mov
inc
sub
loope
outs
jae
xchg
xchg
mov
jmp
fwait
les
std
xchg
adc
dec
or
push
jle
pop
and
adc
sbb
fisttp
adc
icebp
ror
imul
adc
cmps
sub
dec
rcr
pop
or
int
(bad)
jge
and
(bad)
sbb
add
adc
jp
fdiv
outs
fs
sub
test
add
lods
cmp
add
jo
inc
in
mov
pop
xor
les
dec
loop
pop
mov
mov
(bad)
daa
stc
pop
inc
jle
xchg
jp
inc
nop
sbb
movs
and
ret
xor
xor
call
dec
pop
dec
jle
dec
(bad)
inc
and
imul
xchg
and
jb
icebp
adc
and
push
retf
frstor
icebp
lahf
pop
xchg
pop
pushf
mov
cli
ss
loop
cwde
or
sub
cwde
and
add
xor
(bad)
inc
adc
mov
xchg
int
pop
pop
adc
ret
xchg
push
fcmovbe
les
inc
dec
fadd
pop
mov
mov
add
push
and
xchg
gs
popf
rcl
xor
sub
repnz
sar
xor
outs
in
enter
shl
mov
mov
xchg
std
dec
push
xchg
xchg
xchg
cmp
inc
mov
sets
inc
dec
jl
out
shr
mov
xor
lds
mov
ds
push
and
cdq
call
xchg
xchg
push
xchg
xor
(bad)
sub
les
imul
inc
adc
xchg
fcom
fs
and
add
das
add
mov
xchg
cdq
ins
xchg
in
and
push
xchg
pop
mov
xchg
nop
enter
jno
lds
and
outs
sbb
or
mov
inc
cmovl
pop
enter
lds
out
and
in
add
cmp
mov
mov
sar
dec
xchg
mov
push
push
jle
shl
(bad)
in
jb
dec
test
push
push
rol
daa
cld
push
push
sbb
fs
adc
dec
retf
je
mov
adc
and
pop
cld
test
push
push
adc
jmp
pop
pop
and
add
jge
adc
stc
call
ins
leave
pop
mov
add
aam
xchg
movs
dec
lods
add
and
cmp
sbb
out
adc
and
and
lods
mov
arpl
or
nop
inc
and
inc
add
pop
enter
fs
ror
jecxz
ret
inc
jmp
(bad)
loop
jmp
cmp
icebp
and
pop
mov
fsubr
(bad)
xor
fsub
dec
push
repnz
mov
les
sub
cld
pop
sbb
je
jnp
xlat
or
xchg
cmp
cmps
sbb
(bad)
xchg
retf
pop
mov
sti
xor
dec
mov
ins
inc
ins
leave
scas
mov
loopne
inc
(bad)
lods
lahf
jb
cmps
fdiv
push
xchg
and
inc
mov
cmp
dec
sub
mov
jmp
xchg
and
and
lock
fadd
sub
mov
icebp
(bad)
icebp
xor
pop
sbb
loop
enter
(bad)
mov
or
sub
dec
sbb
fwait
les
js
pop
jno
(bad)
jecxz
jecxz
push
push
push
fwait
rol
jecxz
jns
mov
xchg
jnp
xor
xchg
dec
cmps
push
add
pop
in
retf
mov
pop
bound
sub
push
cmp
mov
addr16
repnz
clc
ficom
adc
sub
adc
loope
ret
aam
and
ja
push
adc
inc
or
push
cmp
dec
stc
push
pop
dec
rcl
and
dec
push
loop
xchg
push
(bad)
xor
dec
or
and
jbe
mov
sbb
push
call
mov
dec
inc
rcpps
cdq
push
sbb
pop
bound
push
inc
dec
pushf
push
sub
xor
fsub
out
mov
mov
mov
and
add
inc
xor
shrd
les
or
xor
add
clc
jne
jmp
sbb
or
and
pop
and
xor
jle
ret
add
sti
push
btr
sub
adc
mov
cmp
mov
push
xor
lods
adc
cdq
int3
scas
(bad)
fbld
pop
push
add
mov
(bad)
sbb
push
pop
and
loop
retf
or
idiv
mov
fiadd
arpl
daa
cmp
mov
jae
cmps
or
inc
dec
nop
sbb
ficomp
jmp
xchg
loope
mov
and
je
xchg
dec
shl
mov
sub
xchg
mov
mov
mov
imul
jmp
mov
jge
imul
pop
shl
std
xchg
jno
in
mov
loope
dec
jg
lds
sub
mov
loop
mov
xor
enter
ds
ds
pop
inc
jmp
aad
imul
mov
movs
arpl
dec
and
cwde
inc
(bad)
dec
data16
test
xchg
adc
jb
xor
pop
adc
sub
es
pop
xor
adc
shr
xor
and
jmp
pop
xor
pusha
sbb
ret
push
ins
and
in
test
jp
inc
push
xor
out
mov
xchg
cmps
mov
ror
clc
adc
inc
pop
bound
in
fadd
cld
inc
jns
xadd
popa
and
les
mov
sbb
ror
cdq
pusha
adc
xchg
call
test
(bad)
and
push
add
xor
adc
jecxz
dec
jmp
loope
xor
add
adc
mov
iret
pop
push
cdq
push
pusha
rcr
out
inc
xchg
dec
ds
ins
dec
dec
icebp
sub
cmp
mov
sbb
sub
je
pop
inc
dec
ret
inc
sub
lods
push
cmp
rol
imul
mov
sub
es
das
fdivr
call
bound
xor
or
cmp
and
mov
and
dec
xchg
mov
jno
xchg
mov
ret
cdq
sub
dec
and
xor
loopne
xchg
pop
mov
ret
mov
cmp
dec
fimul
call
lock
mov
rol
addr16
cwde
(bad)
jb
mov
mov
sti
add
ror
xor
lea
or
cmp
mov
and
sub
xor
adc
xor
or
mov
and
and
pop
adc
sub
fsub
sub
inc
push
test
push
outs
mov
div
popf
push
xchg
mov
push
sub
mov
fbld
(bad)
mov
xchg
jl
push
mov
push
mov
sbb
add
sub
jl
jg
pop
cdq
pop
leave
sbb
dec
ins
inc
adc
loop
dec
adc
and
fld
clc
or
push
and
fsubr
xor
or
dec
pop
clc
pop
fsub
dec
or
add
clc
mov
jg
add
loope
mov
mov
inc
or
xchg
jg
mov
jl
push
mov
lods
inc
mov
leave
adc
sub
dec
push
fiadd
cmp
icebp
leave
test
adc
push
jl
mov
or
mov
or
iret
cmp
xchg
inc
pop
loop
aaa
leave
sbb
loope
pusha
pop
pop
xchg
adc
dec
push
inc
pop
and
push
cmp
xchg
lea
push
sbb
lahf
xor
and
into
pop
xor
js
es
sub
out
push
iret
mov
xchg
(bad)
cmp
mov
mov
ja
pop
dec
and
add
sub
xchg
cmp
dec
jne
dec
push
or
mov
sbb
jmp
dec
rol
and
and
cmp
test
mov
and
dec
mov
sbb
jge
daa
lock
aaa
sbb
dec
pop
pop
or
mov
xor
and
pop
mov
add
js
pop
dec
pop
mov
fcompp
xor
adc
das
mov
sub
add
cwde
outs
lock
mov
and
inc
push
lds
loop
leave
pop
sbb
xor
rcr
push
xchg
nop
xchg
mov
and
push
xor
add
aad
sti
and
xchg
jnp
sbb
adc
xor
cli
push
mov
fbld
and
jo
push
dec
push
add
dec
adc
mov
sub
dec
aas
xchg
xchg
and
fwait
js
and
pusha
xor
js
sahf
jb
mov
and
lahf
xor
dec
sbb
adc
test
and
retf
call
cmp
or
call
and
je
xlat
and
cwde
cwde
imul
xchg
dec
add
cmps
or
xchg
mov
cmp
cld
loop
dec
les
stos
jmp
cmp
adc
add
add
mov
lea
lds
ja
jb
clc
dec
push
jbe
jns
or
jb
inc
mov
push
sub
cwde
inc
test
pop
xchg
enter
aas
or
and
cld
mov
push
adc
sbb
mov
in
mov
sti
cmp
shr
js
imul
dec
and
inc
cmp
push
loopne
mov
inc
push
and
pop
sub
inc
ficom
clc
shl
lock
movs
pop
cld
mov
inc
jle
(bad)
(bad)
sbb
int3
cmp
dec
mov
clc
in
adc
pop
rcr
call
add
pop
sub
pop
leave
mov
sbb
adc
and
or
dec
fs
fmul
dec
adc
or
adc
sbb
(bad)
shl
mov
test
and
dec
or
inc
cmp
call
ds
mov
push
es
loop
or
stc
pop
mov
add
outs
xor
dec
mov
pop
outs
aam
test
dec
(bad)
and
and
sub
in
test
mov
or
dec
int3
push
and
daa
dec
mov
inc
addr16
mov
arpl
jbe
retf
inc
push
mov
jae
stos
loop
jae
cmp
outs
ds
push
es
les
mov
push
and
in
and
cmp
or
int3
arpl
inc
sbb
pop
add
xchg
add
add
dec
cli
inc
dec
jns
sub
pop
pop
pop
push
fild
add
inc
movs
arpl
hlt
push
ds
movs
inc
sub
jg
mov
adc
je
pop
icebp
xor
adc
imul
push
ficom
mov
cs
inc
and
xor
fdivr
pop
cwde
sub
imul
cdq
push
pop
xchg
push
out
jo
in
adc
add
and
mov
mov
popf
lock
loop
dec
loop
movs
cmc
push
out
sbb
xchg
xor
popa
dec
fmul
retf
jb
mov
xchg
and
and
stos
sub
pop
mov
enter
and
sub
add
and
xchg
clc
xchg
xor
cld
stos
sbb
rol
xchg
test
xchg
xor
and
(bad)
adc
pop
mov
fidiv
sub
jno
lds
adc
ror
dec
cmps
cwde
dec
jo
clc
pop
je
dec
fistp
daa
mov
(bad)
xor
adc
stc
cmp
cwde
xor
jmp
stc
outs
or
xchg
mov
ret
mov
push
not
mov
or
or
ret
out
sub
dec
xchg
sub
adc
xor
in
shl
fbld
or
mov
pop
xchg
ror
out
dec
inc
pop
and
rcl
nop
loopne
push
mov
in
(bad)
push
mov
js
loop
dec
dec
dec
mov
js
mov
clc
push
and
and
inc
aas
add
push
mov
mov
pop
and
retf
ror
xchg
adc
rol
mov
sub
pop
cmps
pop
mov
or
stos
das
mov
sub
test
push
mov
(bad)
dec
test
xchg
sbb
xlat
mov
add
adc
xchg
adc
push
fisttp
das
mov
pusha
sbb
fcom
jnp
inc
push
test
jo
sbb
jnp
stos
mov
xor
sub
movs
dec
mov
popa
pushf
dec
dec
popf
fs
mov
mov
arpl
sub
pop
fwait
gs
mov
pushf
or
aam
cli
adc
jb
xchg
pop
call
inc
push
mov
fistp
jb
push
mov
cmp
nop
dec
adc
call
loop
mov
jne
arpl
pop
mov
dec
adc
daa
mov
cmps
and
push
dec
stos
cwde
or
mov
lahf
mov
cwde
jl
test
sub
test
add
sbb
push
xchg
xchg
dec
xchg
les
pop
mov
and
dec
mov
(bad)
mov
mov
sbb
jne
push
movs
inc
xchg
test
(bad)
clc
inc
mov
and
xchg
stos
add
mov
xchg
jmp
pop
mov
cmp
mov
fmul
test
xchg
push
fld
fmul
mov
xor
adc
sub
fwait
idiv
aas
dec
lea
xchg
jo
and
loope
dec
and
sbb
add
sahf
and
out
lock
mov
jp
call
inc
or
arpl
inc
push
popa
inc
mov
xchg
xchg
mov
mov
mov
or
add
push
sub
adc
jecxz
fld
fwait
test
jno
and
pop
daa
push
es
push
add
and
add
daa
or
and
adc
xchg
cmps
inc
push
xchg
or
mov
rol
cdq
xor
adc
mov
mov
xchg
add
xchg
movs
es
aaa
cmp
xchg
xor
inc
es
iret
cmp
les
sbb
fs
jno
sbb
sub
pop
mov
nop
and
xor
inc
mov
pop
cmp
push
cmps
push
in
mov
stos
pop
xor
clc
cdq
mov
sub
mov
test
inc
push
pusha
inc
loop
mov
cmp
pop
and
(bad)
fmul
mov
cld
cmps
cld
popf
clc
and
or
and
xor
push
cs
or
jecxz
fisttp
adc
mov
dec
xchg
inc
or
add
mov
shl
mov
sub
add
fs
leave
leave
dec
pop
sub
jb
mov
xchg
(bad)
xchg
movs
xchg
inc
enter
aam
cmp
test
adc
dec
call
dec
test
mov
outs
ins
or
cmps
dec
pop
pop
sahf
adc
and
nop/reserved
jae
xor
bound
mov
mov
dec
shr
inc
xchg
paddw
adc
cmp
xchg
pop
cld
sbb
jmp
add
or
mov
aas
xor
leave
aas
dec
pushf
sub
popa
dec
les
test
cmp
rcr
and
mov
cs
(bad)
bound
sub
bound
out
or
std
adc
push
xchg
ffreep
mov
jbe
loopne
mov
dec
stc
sub
xlat
shr
lods
test
fmulp
mov
(bad)
fdiv
jmp
fnstcw
dec
repnz
ret
dec
or
lahf
fisttp
and
adc
xor
xchg
loop
mov
cwde
xchg
jmp
mov
cmp
xchg
sub
mov
(bad)
pop
rol
fcom
jg
push
mov
add
inc
sbb
jns
add
(bad)
jmp
jno
movs
ja
or
sub
xchg
nop
mov
retf
stos
and
cmp
dec
xor
movs
movs
jge
in
xchg
add
cmp
loope
addr16
scas
dec
(bad)
and
push
and
idiv
sbb
xor
das
and
inc
or
in
sar
nop
inc
pop
mov
loope
inc
jo
ja
add
repnz
inc
(bad)
or
adc
push
inc
cmp
sbb
in
test
and
fs
or
dec
in
and
push
mov
mov
jmp
xchg
repz
inc
mov
cmps
push
xchg
nop
into
add
lahf
arpl
movs
inc
cmp
pop
and
clc
push
icebp
dec
mov
test
adc
loop
movs
or
xchg
sbb
adc
mov
lock
inc
mov
add
clc
or
es
cmps
mov
xor
or
jno
retf
aas
jecxz
idiv
call
(bad)
call
shr
jnp
ss
mov
xlat
jp
inc
enter
jp
pop
pop
push
jp
mov
jl
ins
sahf
jb
push
jno
stos
jnp
mov
xor
cmp
sti
or
mov
mov
(bad)
in
ds
adc
daa
mov
fisub
xor
jbe
cmp
mov
jle
cmp
adc
rcr
adc
mov
add
xor
pop
bound
inc
cmc
or
and
fst
add
js
or
arpl
nop
push
imul
mov
cmp
xlat
add
jl
lock
adc
or
aaa
clc
or
cs
cli
adc
ficom
sbb
xor
mov
shl
sti
xchg
sub
nop
pop
xchg
adc
and
mov
cmc
rcl
push
pusha
nop
not
mov
popa
pushf
je
mov
push
daa
popf
iret
sbb
aas
js
inc
add
xchg
bound
push
repnz
inc
cld
(bad)
sub
jge
jg
sub
xor
jge
sub
or
add
mov
push
test
js
cmps
push
pop
or
pusha
jb
inc
mov
int3
adc
mov
data16
(bad)
jg
(bad)
into
jg
and
(bad)
xor
fsub
xor
fcomi
jg
dec
ret
add
hlt
pop
jecxz
mov
fistp
xor
jg
mov
fisttp
lds
mov
add
ds
ins
(bad)
jnp
cld
push
cmp
jmp
cmps
mov
jg
xchg
call
pop
cmps
shr
adc
xor
jmp
mov
ja
ss
mov
arpl
int
es
mov
pusha
add
shr
ret
xor
and
cmps
fdiv
xchg
cmps
rol
pop
adc
sbb
scas
cmp
add
and
ja
inc
lock
loop
popa
add
add
cmps
fadd
xlat
inc
icebp
inc
add
nop
and
and
mov
out
ret
lock
in
mov
xchg
mov
loop
stc
out
pop
jl
mov
(bad)
mov
cs
jbe
ds
cld
lea
mov
ss
mov
shl
mov
xchg
loopne
jno
arpl
dec
outs
clc
sti
cmp
leave
sbb
jg
or
mov
push
cmps
mov
test
mov
sub
push
rcr
adc
xor
push
pop
daa
cld
jg
inc
push
inc
std
iret
jecxz
sahf
jmp
in
mov
pop
xchg
cdq
pop
cli
mov
test
fsubr
and
adc
cs
ficom
sub
dec
jb
xor
mov
sti
sub
jle
js
jnp
jno
push
fs
lock
enter
jg
test
push
jg
cmp
lods
jnp
push
add
imul
fisttp
jp
mov
dec
stc
pinsrw
pop
inc
sub
loope
and
sub
ja
dec
outs
jle
pop
jg
push
jbe
jle
xchg
shl
mov
outs
leave
test
std
xor
(bad)
sub
sbb
js
daa
xor
jne
cmp
xchg
and
xchg
cmp
fsub
popa
xchg
dec
(bad)
(bad)
jge
imul
ins
fs
mov
or
and
xlat
mul
xor
inc
imul
shr
dec
jmp
out
sbb
pop
mov
stos
xor
(bad)
out
mov
aaa
xor
jmp
sub
jmp
lods
adc
fs
gs
mov
out
(bad)
aad
(bad)
jnp
(bad)
jle
aas
clc
pop
fstp
call
(bad)
std
sbb
sbb
inc
pop
jecxz
mov
addr16
aas
stc
imul
pop
arpl
fwait
pop
jecxz
pop
jecxz
mov
fldcw
or
in
icebp
sti
cld
sbb
jle
inc
in
mov
fistp
pop
mov
jmp
sub
cmp
dec
jg
cmp
cli
test
test
clc
xor
sbb
cli
cld
daa
dec
je
in
jge
outs
jl
mov
test
jge
xlat
js
jge
test
and
push
pop
rcr
dec
jo
int
rcr
and
js
repnz
(bad)
iret
iret
test
jg
pop
jecxz
popa
jmp
mov
pusha
sub
lds
mov
test
sbb
dec
outs
mov
cmp
call
shl
shl
out
ret
std
push
cld
scas
lock
ret
out
shl
xor
dec
out
push
jmp
mov
sub
adc
jle
xchg
hlt
mov
sbb
ds
sub
jl
push
fdivrp
xor
jo
imul
call
mov
push
(bad)
fcmovu
(bad)
stos
mov
(bad)
fnstsw
out
cld
shr
xchg
mov
inc
inc
jg
out
icebp
sti
inc
cmp
dec
std
xor
pop
out
clc
xor
xlat
push
jle
(bad)
mov
xor
jg
push
cli
(bad)
outs
cmp
jae
jecxz
(bad)
pop
mov
std
cmp
jle
cld
repz
jecxz
fucomip
xlat
dec
jg
pop
jmp
and
(bad)
sbb
cld
es
jle
fucomip
xlat
cld
xor
aas
ja
int
repz
cld
int
shr
push
jge
pop
(bad)
sbb
ins
shr
mov
cld
fidivr
(bad)
mov
cmp
mov
(bad)
mov
stc
shr
mov
adc
aas
jg
jl
(bad)
pop
mov
std
push
jmp
into
mov
(bad)
jbe
(bad)
mov
dec
mov
dec
cs
std
pop
cld
into
mov
shl
jno
jmp
push
mov
std
into
mov
aam
(bad)
rcr
xlat
xchg
aas
jle
stc
cld
aaa
sti
in
jle
fucomip
mov
das
jle
pop
jmp
mov
cmp
es
stc
outs
and
jle
fnstsw
aaa
adc
hlt
in
outs
nop
(bad)
mov
arpl
scas
sub
mov
sti
sub
(bad)
call
sub
(bad)
std
jbe
mov
popf
jg
(bad)
(bad)
cmc
rcr
xlat
mov
stc
fwait
outs
inc
mov
or
aaa
stc
dec
jle
pop
repz
dec
mov
push
gs
out
inc
js
(bad)
std
sbb
cmp
cmp
jle
dec
xlat
scas
(bad)
xor
push
jle
fcomip
xlat
cld
xor
mov
mov
test
mov
jge
lahf
mov
call
std
call
push
mov
mov
xlat
clc
lea
pop
jecxz
cmps
movsx
(bad)
scas
repz
mov
(bad)
cli
mov
dec
xlat
cld
sub
or
cld
(bad)
hlt
imul
jmp
mov
jne
call
jne
sub
call
int
call
mov
push
xor
gs
outs
mov
jmp
jmp
(bad)
sti
(bad)
(bad)
addr16
cmps
int
push
cli
in
mov
pop
xor
stos
or
xor
sub
scas
ror
scas
stc
imul
dec
rcr
xlat
clc
mov
pop
lock
jecxz
add
shr
jmp
sbb
outs
lock
cld
cli
mov
cld
push
jg
pop
cld
sbb
xchg
std
dec
hlt
cld
data16
pop
mov
cli
repz
sti
xor
dec
adc
imul
push
fwait
mov
mov
std
push
jg
lahf
(bad)
(bad)
push
mov
cld
inc
jg
dec
es
loope
pop
cld
outs
clc
out
(bad)
sbb
lahf
sbb
jle
cld
jae
jg
jg
pop
out
mov
dec
dec
stc
imul
fild
push
clc
in
jle
pop
jecxz
std
xor
sbb
rcr
mov
fbld
mov
std
push
pop
add
mov
fnstsw
fcomip
mov
stc
sub
push
mov
adc
jbe
cld
push
les
sbb
push
mov
cli
(bad)
jg
pop
mov
sti
add
(bad)
outs
repz
pop
mov
cmps
stc
or
pop
push
push
int
stc
outs
sub
cmp
add
in
lahf
shl
fnstenv
dec
lahf
mov
in
mov
cmps
push
popf
out
pop
pop
bnd
imul
(bad)
imul
out
cld
xor
mov
xor
sti
cmp
jbe
repnz
out
aas
call
fst
shr
adc
xchg
sub
imul
hlt
out
sub
mov
ror
pop
sbb
scas
repz
(bad)
pop
push
mov
cld
push
cli
xchg
movs
mov
in
daa
jg
in
xlat
test
dec
inc
push
and
jecxz
xlat
test
sti
fisttp
data16
imul
cli
jbe
adc
cmps
pop
out
sti
xor
pop
shl
dec
xor
fmul
hlt
stc
call
jae
(bad)
sub
mov
stos
mov
int
add
imul
in
cld
sbb
(bad)
clc
sti
xlat
cmps
test
in
dec
ret
xor
xchg
call
xor
(bad)
scas
mov
mov
mov
xchg
cdq
push
ss
sbb
and
test
loopne
sbb
mov
imul
xor
imul
fistp
inc
ja
pop
cld
into
xor
test
mov
mov
aas
pop
iret
pop
lock
mov
sti
shl
repz
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
lods
leave
out
add
add
jecxz
add
and
pop
add
add
add
add
add
arpl
add
add
je
add
add
add
add
jne
and
jne
ins
imul
jae
outs
and
gs
imul
outs
and
ja
jns
jne
jne
and
jge
or
push
outs
jb
popa
je
outs
outs
and
jne
jae
outs
and
ins
ins
and
ins
jo
jne
and
imul
and
and
ins
imul
jns
popa
outs
and
jb
outs
jb
popa
outs
arpl
outs
data16
jge
or
data16
jne
popa
arpl
jo
sub
jnp
jge
ja
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
outs
and
jge
imul
je
outs
outs
and
outs
jne
and
and
popa
je
jb
jae
je
popa
je
jns
jne
jne
gs
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
outs
mov
add
and
add
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
