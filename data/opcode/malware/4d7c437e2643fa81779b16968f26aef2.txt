std
xor
mov
mov
mov
rep
nop
nop
nop
nop
cld
cmp
jne
call
call
ret
push
call
dec
imul
add
add
add
and
jae
gs
bound
and
jb
and
and
ins
jo
and
add
call
push
call
ret
push
pop
push
bswap
cmovge
bswap
and
dec
bswap
or
pop
bswap
sub
lea
rol
inc
cmovae
bswap
inc
jmp
dec
inc
add
dec
inc
add
rcr
bswap
bswap
jmp
dec
inc
add
add
or
add
cmovo
dec
sub
cmovs
shr
dec
jmp
bswap
add
add
bswap
add
bswap
dec
bswap
inc
xor
bswap
dec
sub
cmovae
dec
push
jmp
bswap
add
add
add
add
inc
rcr
jmp
dec
dec
sub
inc
rcr
bswap
dec
fldz
fnstenv
add
bswap
dec
inc
lea
bswap
inc
bswap
mov
bswap
sub
jmp
inc
inc
add
inc
inc
mov
cmovbe
bswap
jmp
inc
dec
add
add
add
sbb
sar
cmovnp
dec
adc
bswap
inc
inc
inc
shl
dec
ror
inc
bswap
bswap
dec
jne
dec
jmp
bswap
add
add
or
pop
out
xlat
test
sbb
(bad)
mov
arpl
jbe
into
mov
sbb
and
jnp
xor
clc
(bad)
ror
sar
or
mov
popf
test
mov
xchg
jnp
dec
xor
add
sar
inc
sub
stc
loopne
cmp
movs
scas
cmp
pop
or
pop
pop
cmps
(bad)
jbe
pop
and
cmps
xchg
cmp
shl
jnp
dec
xor
add
sar
inc
ins
xchg
mov
(bad)
mov
and
cmps
(bad)
ja
inc
cs
(bad)
in
mov
test
cmp
les
push
adc
jb
nop
cmp
inc
int3
(bad)
stc
out
push
lock
mov
xchg
fcom
aad
mov
cmp
les
sbb
jmp
mov
push
clc
and
xchg
cmc
or
push
jl
mov
das
pop
jmp
int
popf
test
cmp
mov
fsub
inc
add
ret
loop
push
mov
adc
loope
mov
sub
xlat
mov
xor
pop
mov
pop
loop
xor
bound
mov
jmp
add
mov
inc
sub
cli
loope
mov
jb
and
pop
mov
inc
lods
pop
adc
dec
sbb
sbb
add
mov
and
loop
jp
jno
test
or
daa
fld
add
sbb
cwde
(bad)
xlat
sahf
inc
pop
inc
(bad)
and
bound
dec
mov
inc
mov
jmp
shl
cwde
mov
fidiv
(bad)
xor
dec
in
inc
push
or
in
in
pop
je
(bad)
fwait
mov
fs
jmp
mov
nop
sub
je
out
push
jns
sub
in
inc
mov
sub
mov
hlt
sub
cli
xchg
leave
arpl
ror
mov
js
xchg
gs
cmps
inc
popf
sub
adc
inc
stc
mov
pop
sbb
fs
jnp
add
ret
fcom
lods
loop
mov
sbb
lock
pop
nop
sub
das
leave
(bad)
cwde
fnsave
add
popa
xor
jge
pushf
das
sbb
mov
fisttp
push
mov
dec
mov
test
js
dec
loope
mov
xor
and
mov
mov
adc
jl
add
sbb
(bad)
dec
lods
loope
repz
sbb
jmp
mov
jmp
sbb
int
lahf
cmp
fmul
inc
jge
dec
out
lds
je
imul
(bad)
retf
xor
cmp
or
inc
and
(bad)
mov
xchg
mov
fs
jp
add
fwait
and
mov
dec
adc
mov
retf
mov
lahf
movs
mov
xchg
neg
xchg
push
lds
ins
sub
mov
call
loope
shl
jp
lods
jmp
add
adc
inc
ja
xchg
repnz
cdq
dec
pusha
add
shl
test
jge
dec
arpl
mov
cmp
jmp
jo
ret
test
rol
mov
cmp
mov
div
movs
or
ret
ins
jno
inc
pop
mov
clc
sub
mov
add
(bad)
mov
je
or
sbb
call
add
aas
pop
out
mov
in
inc
movs
jmp
xor
pushf
xchg
jno
push
xchg
jmp
xchg
test
fnstcw
push
(bad)
sahf
sub
rcr
div
adc
ins
cdq
call
adc
popf
mov
inc
jbe
jl
xchg
mov
mov
pop
lods
lods
(bad)
jge
mov
xchg
inc
jb
jns
xchg
mov
xor
xor
stos
mov
sbb
cmps
or
fstp
bound
rol
pop
jns
dec
out
ins
cmp
lds
mov
retf
push
xor
repz
ret
jge
dec
out
mov
xchg
sub
sti
xchg
retf
popf
scas
pop
jo
aas
daa
maskmovq
(bad)
scas
xchg
jle
dec
ss
push
in
aam
movs
mov
fld
shl
add
sub
lea
cmovle
call
bswap
inc
push
mov
bswap
cmovp
pop
pop
adc
rcl
bswap
sar
jmp
dec
dec
add
iret
inc
push
inc
bswap
bswap
dec
shl
bswap
lea
inc
pop
inc
bswap
jmp
bswap
inc
inc
inc
mov
add
bswap
inc
dec
cmovns
inc
bswap
ror
cmovno
cmovno
inc
add
dec
cmovbe
bswap
jmp
cmovge
cmovbe
cmovnp
inc
push
lea
dec
jmp
bswap
add
add
out
pop
clc
(bad)
inc
inc
inc
jmp
bswap
add
add
dec
dec
dec
bswap
inc
jmp
inc
inc
add
add
out
fnstenv
add
shl
inc
jmp
bswap
add
sbb
cmovg
dec
ror
bswap
bswap
sub
cmovno
add
cmovl
dec
rol
jmp
bswap
add
add
add
add
test
(bad)
(bad)
(bad)
jmp
sub
bswap
dec
dec
adc
bswap
bswap
or
dec
dec
pop
bswap
dec
bswap
cmovno
dec
dec
add
jmp
inc
add
sub
pop
in
xchg
retf
ds
lds
xchg
out
and
fs
cvtps2pi
and
add
adc
icebp
popf
mov
and
inc
push
pusha
jo
(bad)
lahf
scas
mov
and
jne
pop
jle
pushf
cmc
add
fsubr
sti
or
cmp
imul
stos
enter
in
add
cli
adc
xchg
nop
cmp
fidivr
cmp
inc
lea
jne
arpl
mov
aam
cmp
and
inc
push
arpl
xchg
mov
icebp
add
and
inc
push
pusha
jo
nop
mov
std
inc
aad
repnz
cmp
lods
mov
or
sub
dec
mov
in
xchg
dec
enter
sbb
jle
mov
test
(bad)
xlat
out
pop
pop
daa
aaa
inc
push
data16
movs
je
sbb
loopne
jnp
sbb
mov
push
outs
bound
scas
fisubr
mov
pushf
ficom
mov
enter
dec
xchg
and
loopne
jl
mov
sbb
ins
jl
fwait
stos
mov
or
sub
dec
pop
imul
or
pop
dec
adc
lods
push
data16
xlat
cmps
mov
aad
mov
or
bound
push
jb
aad
and
popa
jno
pop
mov
mov
xchg
imul
sub
mov
add
cmp
sbb
mov
or
jb
xchg
pop
jns
retf
in
fincstp
jge
push
daa
aaa
or
cmps
mov
(bad)
and
out
inc
mov
stc
mov
sub
pushf
movs
mov
cdq
sbb
ficomp
cmp
jge
cwde
mov
imul
and
jae
aam
pop
xor
and
sub
adc
mov
ss
repz
cmp
ins
ins
pop
les
push
test
xor
cmps
sbb
(bad)
aaa
lods
and
jecxz
leave
dec
jge
lods
pop
push
or
es
(bad)
jp
mov
pop
inc
aaa
(bad)
imul
jge
inc
jb
ret
nop
clc
or
ins
loope
retf
aas
mov
sahf
adc
pop
fdivr
loope
and
inc
jne
(bad)
push
add
es
outs
loope
test
ins
jecxz
int
mov
mov
jmp
xor
out
arpl
pop
or
mul
mov
je
jnp
retf
out
das
movs
into
inc
mov
add
pop
aad
mov
push
jge
jae
cwde
lds
push
ins
mov
ds
sahf
pop
xchg
inc
ss
hlt
push
aas
adc
xchg
sbb
or
fst
cmp
jmp
repz
or
push
dec
loopne
out
fld
jns
movs
and
lods
and
push
pushf
xlat
test
add
xchg
arpl
lea
aad
xlat
loope
adc
fwait
nop
fwait
dec
les
movs
(bad)
nop
ss
and
push
and
(bad)
rcl
loopne
cmps
add
loopne
inc
repz
inc
pop
out
jecxz
out
pop
jmp
jns
push
int
pop
pop
out
jb
inc
mov
loope
imul
mov
lahf
gs
push
push
int
pop
and
mov
imul
xchg
cmp
test
shl
ror
pusha
dec
and
dec
fwait
push
test
cdq
add
push
pop
jge
lds
aas
cmp
jmp
xor
jno
(bad)
sbb
mov
xchg
fdiv
dec
arpl
mov
sub
and
push
mov
push
adc
iret
cmps
outs
(bad)
or
cmp
inc
(bad)
test
sbb
fs
cli
cmp
sahf
jae
std
pop
push
call
leave
pop
sbb
test
lea
sbb
push
idiv
pop
bound
inc
out
mov
xlat
(bad)
and
mov
test
xor
ret
add
xchg
sbb
imul
mov
lahf
shr
icebp
cmpxchg
push
daa
add
mov
in
inc
outs
rcl
cmp
push
mov
in
test
dec
pushf
sahf
pop
fucomp
mov
rcl
in
mov
inc
sub
sub
rcl
(bad)
enter
loopne
inc
cli
pop
inc
add
mov
cmp
mov
and
pusha
pop
jb
jmp
lods
mov
jg
dec
rcr
and
mov
cli
mov
mov
(bad)
ja
aam
mov
inc
or
pop
je
add
add
push
jb
xor
jge
les
out
dec
inc
retf
aad
jnp
ss
lods
rcpps
jae
xor
ds
adc
es
cli
mov
mov
ret
dec
fdiv
mov
lods
dec
(bad)
or
push
mov
inc
push
pop
loope
jb
stc
test
(bad)
dec
(bad)
and
dec
mov
mov
fiadd
aam
cdq
cmp
push
pop
je
lahf
cld
jnp
nop
pmuludq
jge
(bad)
int3
fs
leave
aam
dec
(bad)
repz
mov
sbb
cmp
mov
ds
out
jae
jmp
mov
in
imul
rol
ins
repz
mov
jg
pop
into
pop
imul
(bad)
mov
cmp
icebp
clc
and
imul
and
mov
mov
mov
pop
jge
or
je
out
xchg
cmp
lock
test
daa
dec
lar
fbld
test
sub
inc
aam
shr
mov
(bad)
out
add
xor
jno
xchg
cmp
pop
mov
inc
pop
dec
int
outs
lock
ror
int3
repz
cmp
(bad)
in
xor
cmps
and
adc
loop
dec
inc
jno
cdq
popa
sub
jo
inc
or
and
xor
cmc
add
pop
and
push
or
mov
add
arpl
out
outs
shl
add
jbe
jbe
push
enter
fnsave
jbe
lock
mov
and
jno
cmc
xor
pop
shr
ja
int
call
enter
gs
ins
shl
inc
in
jmp
rcl
mov
icebp
ins
pushf
pop
imul
iret
inc
mov
add
pusha
(bad)
dec
mov
mov
mov
call
cmp
addr16
xchg
xor
jb
add
add
add
ins
add
push
push
push
call
add
mov
imul
xor
cmp
jne
lea
call
lea
call
pop
ret
jmp
jmp
jmp
jmp
