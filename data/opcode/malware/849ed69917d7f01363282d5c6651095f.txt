and
mov
mov
pop
inc
cmp
cmovae
cvtdq2ps
pusha
xchg
dec
mov
sub
test
fcomp
das
dec
push
sub
bound
xchg
bound
dec
mov
outs
outs
xchg
jmp
daa
enter
imul
cmps
jg
jmp
cmovae
sub
enter
dec
(bad)
mov
pop
add
call
sub
jbe
je
jmp
xor
out
sub
mov
mov
ds
bound
in
cmp
push
cmp
jge
out
jbe
cmp
and
shr
cmp
sti
lock
fmul
mov
sub
ins
scas
div
call
adc
fwait
or
and
rol
mov
mov
out
dec
mov
cmps
inc
(bad)
mov
pop
ss
cmps
and
bound
or
pusha
mov
and
shl
mov
and
sbb
mov
sub
(bad)
pop
fwait
or
and
mov
add
sub
(bad)
push
fwait
or
movs
dec
out
cmp
push
mov
sbb
ror
js
cwde
popf
aam
xor
jge
pop
mov
out
inc
aas
outs
pop
shl
jg
mov
outs
pop
rol
aam
jb
pop
push
aas
or
and
ret
fimul
enter
dec
jne
cmp
lock
dec
mov
inc
inc
pop
or
mov
out
inc
mov
(bad)
in
dec
mov
bound
dec
fsubr
sbb
bound
enter
mov
gs
dec
mov
sub
(bad)
dec
jnp
xchg
or
bound
pop
add
sub
xor
sub
cmp
jbe
xor
sti
lock
ds
sub
(bad)
shl
or
mov
cmp
mov
mov
sub
cmp
fwait
or
bound
cmp
dec
mov
test
mov
pop
ret
sbb
cvtps2pi
outs
cmovnp
cmps
das
and
shr
fiadd
or
(bad)
sub
popf
push
outs
add
sub
jmp
pop
add
sub
xor
data16
mov
aaa
mov
loop
(bad)
shr
mov
call
repz
cmc
pop
dec
mov
jge
or
jmp
mov
add
and
or
and
inc
mov
xor
movs
or
pop
das
jp
mov
mov
scas
mov
fisubr
dec
mov
scas
mov
pushf
aam
loope
icebp
xor
adc
inc
dec
(bad)
mov
mov
scas
jle
rcl
mov
mov
mov
test
mov
bound
and
pop
mov
sub
je
adc
inc
rcl
mov
scas
sbb
jno
mov
sbb
pop
push
mov
sbb
daa
xlat
sbb
bound
mov
sub
mov
sub
mov
pop
inc
dec
pop
and
cmp
dec
mov
mov
xor
or
mov
jb
ds
mov
xor
pop
xlat
mov
mov
mov
ror
gs
dec
mov
sub
push
jmp
mov
repnz
mov
hlt
mov
call
dec
xor
mov
sub
mov
pop
inc
dec
pop
and
cmp
mov
aam
stos
popf
pop
pop
dec
pop
aaa
and
pop
xlat
mov
cmp
xor
data16
repnz
dec
mov
jne
jno
mov
sbb
xor
outs
mov
or
rol
not
dec
mov
neg
imul
pop
xlat
dec
pop
or
nop
cmp
rol
test
test
(bad)
(bad)
imul
daa
xlat
dec
dec
jmp
das
dec
mov
mov
dec
icebp
jmp
enter
retf
mov
ds
pop
call
mov
not
xlat
mov
repz
sub
jmp
enter
retf
mov
ds
pop
in
cmp
popf
outs
mov
daa
and
jae
jecxz
repnz
dec
mov
shl
sahf
and
enter
or
jne
jnp
jle
push
fisubr
dec
mov
ret
jb
bound
sbb
xor
jbe
jne
xlat
mov
popf
scas
push
add
into
dec
popf
aad
fistp
dec
dec
addr16
push
bound
enter
retf
mov
ds
pop
in
cmp
mov
aam
pop
push
mov
mov
xchg
mov
jno
imul
dec
mov
aam
mov
xlat
mov
popf
mov
fimul
aad
cmp
cs
mov
aam
aas
out
dec
dec
popf
je
jmp
xchg
sbb
aas
daa
mov
sahf
call
jmp
mov
daa
fistp
jmp
mov
xchg
shr
push
dec
mov
push
inc
or
mov
mov
mov
mov
enter
pop
test
xchg
into
mov
push
mov
jmp
mov
pop
jmp
scas
cmp
xlat
adc
cmp
mov
jmp
enter
sbb
jne
xlat
outs
test
mov
mov
mov
mov
push
shl
ret
ror
dec
loope
bound
mov
ret
cmps
push
ins
jb
push
std
mov
push
lahf
or
xor
daa
xlat
ret
mov
mov
daa
fcmovnb
neg
call
cmps
mov
pop
cmp
out
jbe
push
dec
and
outs
mov
mov
xlat
mov
push
lahf
or
jmp
das
jae
cwde
add
or
cmp
push
cs
and
push
cmc
pop
hlt
aaa
push
jmp
rol
not
outs
mov
jb
jne
jnp
jle
push
xor
cmp
and
pop
push
inc
xor
aam
(bad)
(bad)
imul
sub
dec
popf
mov
inc
cmc
xor
sub
dec
xor
sbb
dec
loope
outs
in
cmp
mov
jmp
sbb
xor
shr
xchg
or
repnz
ret
rol
jne
pop
inc
pop
and
mov
in
and
jge
dec
loope
aam
mov
mov
aas
mov
in
dec
and
cmp
push
jmp
mov
movs
je
jmp
xchg
in
mov
push
mov
mov
mov
pop
mov
lock
aas
mov
bound
stos
popf
js
cmp
mov
data16
shl
inc
cmp
xlat
ret
lds
mov
je
jmp
xchg
sbb
pop
and
aaa
jl
(bad)
call
mov
dec
dec
mov
sub
aas
daa
fistp
fidiv
or
bound
imul
jmp
cmps
mov
or
dec
fsub
push
inc
xor
and
bound
ret
jmp
imul
inc
jb
sbb
dec
loop
mov
dec
push
mov
dec
mov
sub
jno
sar
movs
sbb
jb
outs
stos
mov
mov
ret
inc
dec
popf
aam
xor
sbb
jno
mov
dec
mov
in
cmp
(bad)
mov
sbb
dec
xor
push
(bad)
aam
mov
pop
dec
xor
push
bound
jmp
daa
inc
ss
sub
jmp
lahf
or
(bad)
fsubr
dec
popf
mov
call
stos
ret
mov
lock
sbb
xor
shr
jecxz
cmp
bound
and
sub
out
mov
popf
jnp
(bad)
outs
ret
jmp
fsubr
push
popf
aad
loop
or
dec
popf
test
mov
bound
xor
call
cld
arpl
dec
or
add
xchg
enter
aam
dec
jmp
(bad)
not
mov
jae
xor
test
inc
bound
nop
arpl
dec
xor
xlat
dec
mov
bound
jbe
(bad)
imul
inc
mov
mov
push
push
bound
aaa
push
and
cmp
push
and
dec
adc
lahf
or
mov
mov
inc
dec
pop
popa
pop
dec
mov
mov
mov
movs
outs
stos
mov
mov
mov
mov
outs
mov
xor
das
dec
mov
fsubr
cmp
and
int
jl
lea
xlat
retf
adc
imul
jmp
bound
push
and
shl
jnp
mov
sub
daa
xlat
inc
jb
push
ret
enter
aam
dec
jmp
(bad)
aaa
mov
mov
adc
sub
cmp
fsub
bound
dec
cmp
xlat
inc
jb
mov
popf
aam
mov
outs
inc
mov
div
mov
test
shr
push
and
shr
jmp
aam
dec
jmp
rol
aam
dec
loope
xlat
adc
sub
mov
je
jmp
xchg
sbb
inc
sbb
jmp
dec
dec
jmp
jp
jmp
ret
rol
jne
dec
mov
jmp
sbb
out
dec
mov
and
dec
arpl
dec
mov
fmul
inc
stc
push
dec
mov
push
ret
repz
call
cmp
sub
push
pop
inc
mov
dec
xor
xlat
dec
cmp
and
mul
sbb
repnz
mov
add
(bad)
mov
bound
lea
(bad)
aam
jb
and
xlat
sahf
sub
dec
dec
rol
jne
push
mov
push
jg
out
imul
mov
inc
add
mov
dec
jmp
inc
imul
sub
cmp
ja
sbb
das
enter
retf
push
dec
mov
mov
jnp
ins
scas
jge
popf
aam
xlat
sahf
sub
iret
sahf
sub
mov
push
mov
mov
int
mov
sar
call
fsub
dec
fsub
dec
fisub
dec
repnz
aad
(bad)
sub
neg
inc
dec
loop
popa
cmp
jmp
enter
retf
mov
ds
jmp
and
xor
ds
icebp
pop
dec
mov
sub
not
fld
dec
mov
mov
stos
movs
in
pop
sub
pop
shl
in
cmp
xor
scas
or
sub
mov
sbb
test
mov
mov
popf
sub
push
sub
jmp
scas
mov
aaa
cmps
aam
dec
xor
iret
dec
popf
aam
mov
push
dec
cmp
inc
dec
pop
xor
mov
into
jle
aad
xor
jnp
aaa
cmps
aam
dec
xor
dec
dec
popf
aam
jbe
test
shr
push
in
inc
add
scas
stos
dec
pushf
aam
adc
mov
mov
mov
ret
and
outs
popf
aad
loop
dec
test
bound
mov
jmp
sub
bound
pop
cmc
bound
inc
jb
scas
adc
mov
mov
adc
sub
cmp
sbb
jmp
mov
mov
test
dec
bound
test
sub
xor
mov
aam
xchg
cwde
aam
xor
mov
mov
out
mov
popf
mov
adc
sub
jno
xor
out
scas
cmc
dec
pushf
aam
adc
mov
mov
mov
ret
and
mov
dec
enter
mov
bound
sub
dec
xor
(bad)
mov
popf
sub
sub
mov
sub
in
sub
dec
popf
jnp
imul
jne
mov
mov
mov
xchg
aad
stc
dec
pushf
aam
dec
popf
sub
out
dec
mov
and
aaa
rcl
mov
and
aaa
lahf
aam
dec
xor
adc
sub
xor
cdq
mov
popf
in
dec
mov
mov
mov
test
push
popf
aad
mov
push
daa
push
and
dec
mov
bound
mov
dec
pushf
aam
jno
sub
sub
xor
mov
mov
bound
fsub
test
sub
setg
mov
xor
aam
jbe
push
mov
bound
aas
mov
pushf
aam
mov
sub
mov
jmp
and
mov
xor
sub
inc
inc
dec
fcmovu
leave
or
pushf
aam
pop
xchg
fidiv
popf
aam
mov
and
arpl
dec
mov
sub
pop
sub
xor
mov
mov
bound
fsub
repnz
and
(bad)
setg
mov
xor
aam
jbe
push
mov
bound
aas
mov
pushf
aam
mov
sub
inc
nop
push
dec
mov
sub
adc
mov
mov
test
dec
popf
test
mov
bound
fsub
repnz
and
(bad)
setg
mov
xor
aam
jbe
push
mov
bound
aas
mov
pushf
aam
mov
sub
mov
mov
sbb
and
mov
xor
sub
push
aad
mov
sub
arpl
push
and
and
ret
pop
jle
mov
loope
inc
(bad)
popf
aam
mov
and
arpl
dec
mov
sub
retf
dec
fidiv
mov
mov
fdivr
mov
bound
fsub
repnz
and
(bad)
setg
mov
xor
aam
jbe
push
mov
bound
ds
or
and
sub
(bad)
mov
popf
jl
setbe
mov
cmps
daa
jbe
popf
sub
push
aad
mov
sub
mov
mov
test
push
popf
aad
mov
cmp
or
popf
aad
loop
loop
dec
popf
jb
mov
and
dec
adc
mov
mov
dec
push
bound
mov
mov
popf
sub
cmp
cmps
into
push
aad
loop
scas
xchg
dec
pushf
aam
cmp
sbb
jmp
mov
mov
sub
out
mov
popf
jnp
aaa
mov
mov
ret
mov
mov
pop
xlat
dec
mov
bound
mov
jmp
jp
jmp
enter
mov
bound
mov
ins
movs
jecxz
bound
retf
jp
mov
in
into
sbb
in
into
add
sub
out
mov
popf
jnp
aaa
retf
dec
xor
mov
jmp
stos
mov
out
mov
popf
jnp
and
mov
popf
aas
jbe
bound
dec
cmp
xlat
inc
jb
scas
sbb
mov
mov
xor
mov
jmp
sub
jmp
mov
mov
test
dec
bound
cmps
sub
out
mov
popf
jnp
aaa
mov
mov
xor
ret
and
mov
sub
aaa
mov
mov
xor
mov
jmp
mov
bound
call
inc
aaa
xchg
dec
mov
repz
dec
pushf
aam
jno
scas
scas
dec
pushf
aam
cmp
ret
mov
popf
jnp
mov
xlat
inc
jb
scas
cmp
jmp
and
out
inc
popf
aad
mov
sahf
mov
pushf
aam
loop
push
aas
out
mov
popf
jnp
fimul
sub
cmps
daa
enter
mov
(bad)
pop
mov
sub
mov
or
xchg
cmp
mov
popf
cmps
into
dec
popf
aad
loop
dec
test
dec
popf
aad
loop
push
es
test
cmps
add
into
and
mov
mov
out
mov
popf
cmps
into
adc
sahf
fisttp
aam
pop
jb
lods
or
dec
mov
mov
pop
repnz
dec
loope
pop
cmp
sub
dec
pushf
aam
cmp
sbb
jmp
mov
mov
and
mov
test
sbb
scas
jecxz
pushf
aam
(bad)
enter
scas
jmp
pushf
aam
cmp
pop
(bad)
bound
dec
mov
outs
mov
mov
ins
mov
and
mov
cmps
into
push
popf
aad
loop
scas
jecxz
pushf
aam
cmp
sbb
jmp
mov
cmp
mov
enter
aam
dec
jmp
enter
inc
aaa
sub
loope
out
pushf
aam
pop
mov
dec
mov
sub
jmp
repz
dec
pushf
aam
jno
in
into
ret
mov
bound
mov
out
mov
popf
cmps
into
ss
aad
loop
sahf
cmp
aam
pop
jb
lods
or
dec
mov
mov
pop
adc
mov
loope
pop
cmp
sub
dec
pushf
aam
cmp
sbb
jmp
mov
mov
pop
mov
and
mov
test
cmp
scas
ret
dec
pushf
aam
ficom
enter
scas
iret
dec
pushf
aam
cmp
pop
(bad)
bound
dec
mov
outs
mov
mov
sub
fbld
inc
ss
dec
mov
scas
sub
aam
fsub
inc
aad
cmp
mov
ror
xlat
repz
sub
and
ss
bound
imul
sub
aam
mov
bound
mov
ins
scas
mov
cmp
mov
xor
(bad)
ficomp
fdiv
movs
ins
ret
aam
dec
jecxz
mov
cmp
mov
bound
cmp
out
mov
popf
sub
bound
dec
xlat
xchg
popf
aad
loop
jbe
lock
mov
mov
mov
test
cmps
jmp
bound
call
mov
loope
mov
loop
dec
mov
rol
aaa
call
dec
lahf
aam
aaa
cmp
mov
xor
mov
out
mov
pushf
aam
pop
test
out
inc
fsub
into
dec
popf
aad
loop
jae
lock
mov
mov
and
jmp
dec
push
call
mov
bound
cmp
scas
mov
popf
jnp
sbb
dec
mov
enter
aam
dec
jmp
mov
into
aam
dec
jmp
aam
aaa
into
aam
dec
ins
test
shl
aam
dec
xor
shl
aam
dec
xor
mov
mov
mov
jmp
aam
aaa
mov
mov
ins
test
enter
mov
bound
je
(bad)
mov
popf
sub
push
repz
scas
mov
cmp
sbb
dec
pushf
aam
(bad)
outs
mov
mov
jmp
xchg
inc
fisub
mov
dec
pushf
aam
jno
xchg
lahf
dec
pushf
aam
(bad)
outs
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
xchg
pop
scas
bound
mov
dec
pushf
aam
jno
scas
stos
dec
pushf
aam
cmp
sbb
dec
popf
je
jmp
xchg
(bad)
lahf
or
bound
mov
sub
push
mov
dec
xor
mov
scas
loope
test
cmp
iret
ret
int3
ret
mov
scas
jne
xlat
dec
mov
sub
test
sub
xor
aam
xor
push
bound
ds
mov
dec
push
sub
pop
iret
ret
mov
scas
jne
xlat
mov
popf
aam
xchg
movs
outs
xchg
mov
sub
daa
test
sbb
std
jbe
mov
(bad)
mov
sahf
aam
dec
popf
je
jmp
push
mov
bound
fidivr
das
dec
out
into
sbb
xor
jle
dec
push
rol
jne
stos
push
bound
fsub
fs
and
and
add
dec
cmp
dec
or
dec
mov
int3
ret
mov
mov
jmp
enter
sbb
jmp
cmp
aam
(bad)
(bad)
imul
repnz
mov
stos
cmp
xlat
ret
push
push
sub
inc
adc
repz
enter
or
jmp
mov
sub
mov
in
dec
idiv
push
mov
sub
xchg
ins
shl
and
mov
mov
mov
jmp
ds
dec
mov
aam
mov
and
into
pusha
sub
inc
scas
fild
and
retf
mov
and
and
push
lahf
or
inc
and
jb
test
mov
mov
jae
and
mov
xor
aam
bound
mov
and
mov
dec
inc
addr16
bound
aas
mov
bound
dec
mov
push
pop
fs
mov
push
xor
ret
bound
mov
pop
mov
mov
sub
dec
(bad)
(bad)
imul
bound
aas
mov
jmp
hlt
popa
sub
push
and
xchg
retf
xchg
mov
aam
bound
jmp
sti
push
adc
or
popf
fisttp
std
push
mov
sub
jb
aas
dec
mov
stos
mov
pop
sub
outs
xor
repz
mov
inc
addr16
repz
aas
mov
jmp
inc
pusha
sub
outs
xor
repz
ret
jecxz
jae
imul
bound
mov
inc
addr16
repz
aas
mov
jmp
je
sub
outs
xor
repz
retf
xor
movs
cmps
das
and
dec
mov
sub
inc
addr16
repz
aas
mov
jmp
sub
dec
cmp
stos
inc
stos
std
push
mov
movntps
sub
bound
mov
dec
addr16
push
(bad)
aam
mov
push
cmp
stos
inc
stos
std
push
repnz
dec
mov
mov
mov
mov
mov
jecxz
jp
jmp
and
cmps
mov
sub
pop
jmp
xor
mov
mov
icebp
dec
mov
mov
sub
sub
push
or
bound
dec
mov
mov
mov
xchg
dec
mov
aam
(bad)
(bad)
imul
bound
mov
or
retf
mov
aam
bound
mov
and
retf
mov
inc
xchg
sub
jmp
mov
hlt
call
imul
and
inc
jb
jg
dec
imul
and
jbe
bound
dec
into
and
test
popf
bswap
jb
imul
bound
test
sub
repz
dec
mov
push
pop
inc
aam
mov
push
xor
stos
inc
stos
std
push
repnz
jp
mov
mov
mov
mov
pop
push
(bad)
fisttp
std
push
repnz
scas
mov
and
dec
adc
mov
mov
jecxz
push
jmp
mov
mov
mov
mov
jmp
mov
mov
dec
ret
dec
xor
and
not
sub
sub
loop
mov
mov
mov
xor
(bad)
fsubr
jae
popf
push
inc
pop
stos
dec
mov
pop
inc
adc
mov
mov
cs
and
sub
(bad)
es
mov
pop
pop
xor
fmul
cs
ss
fs
or
repnz
mov
mov
bswap
mov
loop
xor
ins
shl
and
mov
mov
mov
retf
dec
cmp
(bad)
iret
xchg
cs
pop
sub
mov
mov
outs
mov
mov
ret
mov
dec
cmp
dec
cmps
pop
mov
mov
cs
and
sub
mov
addr16
fcomi
bound
xor
test
mov
mov
ret
mov
dec
cmp
dec
cmps
retf
mov
cs
and
sub
mov
push
mov
fcomi
bound
dec
addr16
push
bound
dec
and
sub
and
dec
xor
jne
jnp
jle
push
xor
in
xor
adc
xchg
(bad)
cli
bound
mov
cmp
dec
fisubr
or
bound
or
bound
call
fimul
or
bound
call
or
mov
int
neg
xchg
or
bound
call
fisubr
xchg
or
bound
call
fidivr
or
bound
call
in
cmp
mov
jmp
enter
sbb
shl
mov
mov
push
bound
or
sub
test
mov
mov
outs
mov
cmp
test
pop
bound
mov
mov
sub
xlat
call
mov
dec
mov
popf
cs
push
and
enter
repz
and
mov
mov
in
push
outs
arpl
dec
mov
cs
or
sub
test
fwait
dec
mov
sub
jno
xor
movs
outs
push
pop
xchg
dec
aas
pop
xchg
mov
xchg
dec
mov
sub
loop
sub
bound
pop
inc
jmp
xor
cmps
push
xor
aas
daa
(bad)
sbb
bound
fsub
dec
dec
pop
iret
mov
aas
daa
mov
dec
pop
pop
not
jnp
mov
lods
sub
(bad)
imul
or
and
popf
pop
scas
pop
cmp
sar
xchg
xchg
in
bound
mov
push
lahf
or
popf
pop
sti
aas
daa
iret
sbb
(bad)
repz
retf
push
dec
mov
jne
jnp
jle
push
loope
push
jne
xlat
cmp
push
or
neg
mov
inc
cmp
fcmovnb
push
push
dec
loope
mov
out
mov
and
call
(bad)
call
fcomp
ds
and
shl
rol
pusha
dec
mov
dec
mov
daa
iret
ret
loop
out
into
sbb
sub
jecxz
repnz
mov
push
lahf
or
popf
aam
mov
aas
call
cmps
mov
pop
and
out
outs
aam
(bad)
(bad)
imul
pop
push
mov
bound
xchg
jne
bound
ds
mov
bound
ds
ins
popf
jne
bound
mov
pushw
mov
bound
inc
ss
outs
pop
aas
sub
jbe
ret
cmps
pop
in
push
dec
bound
mov
dec
div
bound
mov
bound
pop
movs
pop
jmp
dec
mov
ror
pop
pusha
and
cmps
je
mov
sbb
inc
add
cmp
ret
ret
dec
mov
mov
dec
mov
jne
add
aam
jb
cmps
dec
mov
xchg
or
bound
inc
add
aam
pusha
jbe
pop
cmps
mov
or
aas
sub
daa
ror
jp
mov
pop
mov
ror
pop
data16
pop
data16
pop
aas
sub
call
cmp
dec
mov
sub
dec
or
pop
xor
cdq
push
and
dec
(bad)
ins
stos
push
dec
arpl
jl
popf
aam
mov
lahf
or
pop
jg
dec
sub
add
call
mov
imul
loope
dec
xor
dec
(bad)
push
mov
inc
add
sub
jbe
bound
dec
(bad)
imul
movs
jmp
dec
div
pop
mov
mov
cmp
dec
mov
sub
mov
xlat
jmp
add
pop
sub
mov
mov
retf
mov
jecxz
ror
pop
popa
stos
ja
pusha
pop
or
mov
popf
dec
mov
ret
dec
mov
pop
dec
(bad)
mov
dec
mov
add
jp
mov
pop
mov
ror
pop
data16
mov
outs
mov
daa
cmp
mul
dec
dec
loope
dec
cmp
rol
cmps
sub
bound
sbb
call
sti
jmp
enter
ja
arpl
cmp
pop
dec
mov
sbb
dec
loope
dec
mov
pop
pop
inc
(bad)
pushf
sub
push
sub
dec
bound
dec
(bad)
jp
jmp
cmps
pop
mov
mov
ret
sub
bound
bound
dec
mov
test
adc
cmp
mov
jmp
enter
sbb
push
and
rol
rcl
ror
dec
(bad)
imul
sub
adc
retf
sub
adc
or
pop
popa
sub
movs
pop
xchg
pop
mov
dec
mov
in
inc
dec
addr16
push
bound
mov
pop
pop
xchg
repz
mov
mov
jmp
cs
push
and
inc
add
xor
pop
bound
dec
mov
mov
sub
xchg
loope
mov
mov
mov
jbe
ret
cmps
fs
dec
ret
das
fcomi
bound
push
dec
adc
mov
cmp
(bad)
idiv
shl
sub
mov
sub
idiv
out
mov
fcomi
bound
enter
mov
cmp
test
mov
outs
mov
data16
cmp
rol
mov
and
enter
mov
ss
mov
je
ret
pop
sub
bound
mov
sub
xchg
div
(bad)
aam
jbe
je
jmp
xchg
mov
loope
jl
dec
fwait
aam
je
enter
sub
(bad)
bound
dec
xor
sub
aaa
xor
into
inc
(bad)
aam
mov
cs
push
and
dec
xor
enter
sub
mov
(bad)
aam
xor
sub
and
dec
(bad)
js
not
aam
mov
cmp
fsub
add
dec
pop
cmp
std
daa
xchg
les
popf
aam
js
cmps
inc
mov
xor
jmp
cmc
mov
jmp
fsubp
sti
push
mov
popf
aam
js
cmps
inc
mov
xor
test
ins
popf
aam
xchg
shl
(bad)
sub
daa
(bad)
cmc
mov
jmp
pop
xchg
repz
fsub
out
movs
dec
popf
inc
mov
imul
popf
aam
aaa
xchg
les
xchg
les
pop
imul
sub
out
dec
mov
and
daa
xchg
les
jbe
sbb
and
ret
hlt
mov
popf
cs
push
and
retf
jno
and
and
cmp
scas
xchg
ins
popf
aam
mov
lahf
or
popf
aam
popa
mov
cmp
dec
repnz
mov
popf
shr
cmp
xor
out
jmp
sub
je
fisttp
test
ret
shl
bound
dec
mov
mov
pop
popf
aam
gs
scas
iret
ins
popf
aam
pop
xor
cs
push
and
enter
mov
(bad)
sub
dec
popf
sub
xlat
(bad)
movs
dec
popf
aam
push
aam
pop
jg
mov
loope
inc
cmp
xlat
inc
jb
dec
enter
mov
bound
mov
and
mov
mov
leave
dec
mov
xlat
rol
lahf
test
mov
imul
das
dec
mov
test
popf
sub
adc
push
sub
bound
mov
sub
mov
cdq
sub
dec
pop
xlat
mov
jmp
scas
cmps
pop
popf
aam
mov
sub
aaa
out
cmc
mov
dec
aam
mov
adc
pop
(bad)
aam
mov
popf
aam
(bad)
(bad)
imul
popf
ret
jp
bound
mov
mov
popf
aam
push
pusha
mov
or
popf
aam
pop
xchg
les
(bad)
aam
jae
sub
imul
dec
call
cmps
pop
pop
mov
fbld
jmp
mov
jmp
test
inc
mov
scas
mov
setbe
mov
bound
dec
mov
pushf
mov
push
lahf
or
popf
aam
(bad)
cmp
mov
mov
cmp
mov
mov
cs
bound
ret
cmc
mov
loope
xor
mov
mov
sub
dec
mov
scas
fild
shl
cmc
mov
jmp
aam
mov
scas
fld
ret
hlt
mov
jmp
aam
aaa
mov
aaa
(bad)
aaa
(bad)
mov
xor
(bad)
outs
mov
jae
mov
scas
lahf
ins
popf
aam
aaa
fdivp
mov
pop
push
mov
jmp
jmp
aam
aaa
mov
xchg
test
popf
aam
(bad)
mov
or
mov
mov
mov
jns
daa
(bad)
mov
mov
es
mov
aam
push
mov
aam
(bad)
(bad)
imul
popf
aam
push
pusha
mov
mov
out
call
push
mov
fiadd
aam
jae
sub
cmps
ja
(bad)
bound
mov
bound
dec
mov
ret
jle
bound
ret
hlt
mov
imul
aaa
add
dec
mov
push
inc
mov
scas
jno
bound
shl
les
mov
dec
mov
and
iret
push
inc
ss
sub
mov
dec
mov
mov
mov
jbe
dec
mov
sub
pop
popf
cmps
cmpxchg
into
push
mov
mov
pop
xchg
mov
addr16
mov
arpl
mov
arpl
xchg
test
mov
adc
jl
mov
mov
pop
cmp
adc
push
cs
mov
inc
cld
mov
mov
push
lahf
or
mov
sub
push
ja
xchg
dec
popf
stos
into
adc
dec
(bad)
mov
dec
mov
cmp
dec
mov
test
dec
out
outs
jnp
jmp
scas
ins
popf
aam
xor
fsub
pop
popf
aam
dec
dec
fcmovnb
movs
jmp
dec
popf
pop
mov
dec
popf
sub
mov
mov
xchg
pop
push
mov
sub
mov
dec
mov
sub
call
dec
mov
xor
dec
mov
sub
cmps
loop
jbe
bound
dec
mov
and
mov
dec
mov
sub
mov
rol
popf
aam
jb
mov
iret
push
aas
scas
ins
popf
into
inc
(bad)
aam
loop
sahf
xchg
ins
popf
aam
pop
mov
mov
mov
dec
popf
test
mov
popf
aam
(bad)
and
mov
jmp
aam
push
pusha
mov
mov
sub
dec
jmp
aam
cmp
mov
xchg
les
popf
aam
mov
sub
bound
sub
xor
fsub
out
movs
dec
popf
inc
mov
imul
popf
aam
in
cmp
mov
jmp
enter
sbb
jne
rcr
cld
sub
repz
push
sub
pop
rol
imul
outs
mov
out
push
lods
aas
push
pop
div
bound
mov
cmp
rol
iret
mov
imul
xchg
pop
iret
mov
jle
fild
or
dec
mov
(bad)
retf
mov
outs
mov
mov
ror
neg
sub
add
aad
div
ds
outs
mov
mov
retf
neg
cmp
inc
mov
push
sub
daa
(bad)
dec
pop
(bad)
sub
call
(bad)
jno
ja
inc
aaa
repnz
loop
mov
ins
popf
or
bound
or
js
mov
dec
mov
daa
jecxz
neg
push
mov
and
xor
aam
mov
mov
ror
push
and
dec
and
xor
aam
mov
and
mov
outs
test
mov
ror
stos
push
dec
popa
and
icebp
arpl
mov
bound
dec
(bad)
stos
push
dec
data16
push
dec
dec
pop
dec
mov
popf
dec
(bad)
xchg
sub
pop
and
mov
outs
mov
loop
mov
loop
mov
ins
test
(bad)
neg
sub
xlat
jno
ja
ds
outs
mov
mov
retf
neg
sub
push
jmp
jecxz
mul
outs
mov
daa
rol
push
enter
ds
outs
mov
ins
popf
push
dec
cmp
jle
push
xor
in
pop
inc
or
fidiv
mov
fsubr
or
dec
mov
jge
mov
rcr
bound
or
pop
sub
fwait
mov
ja
ds
dec
je
sbb
mov
sub
xor
cmp
jle
push
fisub
imul
sub
mov
xchg
call
scas
mov
popf
aam
jne
pop
inc
in
pop
inc
aas
out
stos
dec
popf
jnp
mov
sub
ret
sub
xchg
int3
ret
hlt
mov
jmp
(bad)
aaa
(bad)
retf
mov
xor
inc
mov
sub
jbe
sbb
cmp
jle
push
xor
dec
outs
dec
or
imul
sahf
mov
dec
dec
pop
and
mov
pop
pop
mov
je
jno
mov
sbb
xor
bswap
pop
cmp
or
and
bound
dec
fsub
dec
fsub
dec
mov
stos
mov
push
mov
je
aad
(bad)
je
ss
daa
daa
enter
mov
and
mov
cmp
inc
or
jns
mov
outs
mov
pop
push
dec
mov
int3
ret
mov
ss
daa
daa
ret
ror
rol
not
aam
dec
xor
shl
bound
sbb
mov
sar
jmp
shl
je
jmp
xchg
loope
jl
(bad)
es
xor
inc
dec
(bad)
sub
or
and
bound
mov
and
cmp
jp
mov
inc
in
outs
dec
mov
sub
mov
sub
mov
outs
inc
cmp
stos
ja
bound
cmp
xlat
sbb
popf
pop
inc
in
mov
mov
inc
dec
aas
daa
xlat
sbb
pusha
inc
mov
pop
jmp
ret
(bad)
bound
repz
pop
sub
test
mov
movs
xchg
dec
mov
sub
cmp
mov
jmp
sbb
xor
hlt
or
ja
bound
(bad)
sub
or
and
bound
mov
and
cmp
mov
pushf
aam
mov
jmp
or
sub
mov
sub
neg
aam
mov
bound
sbb
mov
adc
mov
fsubr
push
jmp
in
cmp
mov
jmp
enter
sbb
jne
xlat
or
retf
inc
mov
sbb
mov
mov
push
mov
fisub
leave
or
bound
jp
jmp
mov
pop
leave
or
bound
mov
lods
xor
push
and
mov
xor
daa
aaa
pop
push
aam
mov
pop
das
lea
pop
daa
aaa
inc
xor
arpl
sub
xor
mov
mov
not
jne
jnp
jle
push
loope
pop
loope
jl
out
push
ds
jg
cmp
xlat
ret
mov
mov
daa
fcmovnb
neg
sub
jmp
aam
mov
xor
push
and
mov
xor
pop
mov
mov
test
retf
cmp
adc
cmp
jge
or
fild
(bad)
fsubr
jno
in
push
push
arpl
enter
enter
enter
(bad)
iret
nop
cmps
jle
fild
or
dec
mov
mov
inc
test
dec
mov
push
pop
mov
sub
push
mov
outs
inc
mov
daa
aam
xchg
jmp
mov
cmp
and
mul
enter
push
pop
loop
mov
pop
das
enter
retf
fistp
sub
data16
jae
(bad)
fsubr
jno
outs
inc
mov
daa
aad
xchg
ins
popf
push
dec
ins
popf
movzx
outs
mov
(bad)
data16
pop
pusha
mov
mov
pmullw
pop
aad
(bad)
mov
int3
cdq
bound
mov
cmp
pushf
dec
cmp
and
add
mov
and
out
and
jo
outs
scas
cmp
ret
ret
outs
cmps
mov
and
xor
mov
or
jns
fwait
mov
cld
out
and
jo
outs
scas
cmp
daa
inc
add
push
cld
loopne
add
test
mov
pop
repnz
dec
and
inc
pop
dec
mov
(bad)
push
add
jp
repnz
(bad)
repnz
(bad)
and
or
repnz
(bad)
repnz
(bad)
fisubr
sti
lock
dec
and
sbb
into
jb
mov
(bad)
repnz
(bad)
loope
dec
and
mov
(bad)
pop
(bad)
(bad)
repnz
(bad)
add
aam
shl
mov
mov
jmp
loope
and
fistp
repnz
fstp
sub
(bad)
repnz
fild
repnz
mov
mov
(bad)
repnz
cmps
and
mov
(bad)
repnz
mov
mov
(bad)
repnz
(bad)
repnz
pop
dec
popf
sub
bound
repnz
pop
dec
sub
lock
sti
test
bound
sub
repnz
pop
repnz
(bad)
cmp
mov
(bad)
push
jns
and
mov
dec
and
repnz
repnz
(bad)
push
stc
(bad)
repnz
(bad)
jmp
(bad)
repnz
(bad)
repz
adc
repnz
inc
pop
dec
mov
(bad)
arpl
(bad)
repnz
(bad)
fisubr
sti
lock
(bad)
push
jns
and
mov
dec
and
repnz
repnz
(bad)
push
stc
(bad)
repnz
(bad)
jmp
(bad)
repnz
(bad)
repz
adc
repnz
jbe
repnz
(bad)
repnz
(bad)
add
sub
pop
cmp
cmp
jge
cmp
and
imul
ret
in
push
dec
push
dec
enter
mov
jne
dec
adc
cmp
ret
mov
push
jmp
mov
movs
outs
mov
mov
sub
push
fistp
pop
sub
mov
shl
mov
push
dec
loop
mov
pop
sub
mov
mov
mov
xor
bound
add
rol
dec
dec
cli
rol
mov
rol
mov
shl
pop
xor
jb
xchg
mov
imul
std
call
and
mov
push
test
mov
and
dec
dec
loope
mov
(bad)
fsubr
dec
jmp
xchg
cmp
xlat
and
bound
push
std
bound
inc
add
rcr
cmp
outs
mov
mov
jnp
sub
push
inc
xor
mov
xor
mov
push
dec
loope
dec
aam
outs
mov
cli
pop
in
inc
xor
mov
cmp
jle
push
loope
jae
xor
cmc
inc
jns
inc
cmp
test
mov
xchg
inc
mov
jmp
cmp
jmp
test
fwait
jmp
jmp
mov
push
in
enter
or
mov
sub
test
aam
jbe
mov
iret
popf
pusha
sub
aam
movs
jae
sub
cmps
pop
xchg
lock
pop
(bad)
mov
cld
add
pop
ret
sbb
aam
movs
jae
sub
bound
div
bound
sub
dec
or
ss
mov
int
div
inc
dec
cmp
imul
and
mov
out
push
adc
outs
mov
jne
xchg
mov
xlat
shl
cmp
inc
arpl
ret
outs
mov
ret
jecxz
lock
dec
jle
imul
ret
push
lock
ret
fcmovnb
je
repz
neg
imul
data16
mov
xchg
or
mov
sub
div
sub
iret
mov
cld
dec
jmp
inc
add
imul
(bad)
mov
or
bound
push
mov
mov
mov
mov
leave
pop
mov
fild
xor
or
ficom
dec
mov
xchg
or
bound
enter
or
sub
not
fsubr
je
repz
not
imul
data16
mov
xchg
or
mov
lahf
mov
ret
rcr
mov
mov
fcmovnb
cmps
mov
cmp
not
imul
bound
push
inc
adc
ret
push
(bad)
mov
inc
add
les
push
fild
cmp
div
bound
dec
(bad)
cmps
xchg
or
mov
shl
mov
dec
cmp
ret
int
imul
les
data16
pop
jp
cld
test
sub
pop
sbb
mov
loope
inc
fsub
dec
fsub
dec
fsub
dec
mov
imul
sub
test
retf
sbb
iret
mov
xor
ds
mov
mov
and
mov
jmp
retf
sub
xor
or
cmp
lds
sub
mov
lahf
or
out
ss
and
ret
fcmovnb
je
jno
mov
xchg
cwde
inc
cmp
cmp
sub
dec
jge
cmp
loope
or
cwde
mov
mov
daa
aam
pop
dec
ret
data16
bound
inc
add
aam
popa
das
dec
pop
jecxz
jmp
fwait
xor
js
sti
adc
mov
mov
mov
daa
aam
cmp
aam
mov
gs
dec
(bad)
mov
jo
jmp
into
mov
aam
and
lods
cmp
(bad)
mov
popf
mov
mov
popf
jnp
and
imul
out
scas
mov
popf
aam
pop
test
sub
mov
sub
mov
sub
mov
sub
aas
out
mov
popf
jnp
fisubr
sub
out
mov
popf
mov
lea
and
cmp
mov
dec
aas
out
mov
popf
jnp
mov
sub
call
dec
popf
aam
jb
sub
xlat
fbstp
cmc
bound
mov
push
lahf
or
and
(bad)
aaa
popf
aad
dec
xor
push
stc
bound
ret
fcmovnb
je
scas
mov
popf
aam
fidivr
scas
mov
popf
aam
fisub
dec
xor
aam
(bad)
(bad)
imul
or
stos
lock
mov
or
dec
mov
ret
push
fimul
retf
or
lock
mov
stos
mov
xor
jle
mov
jne
jnp
jle
push
xor
in
pop
pop
or
jecxz
cld
sti
bound
mov
push
lahf
or
bound
enter
(bad)
neg
jnp
mov
adc
mov
bound
dec
pop
daa
mov
push
mov
bound
ret
rol
jne
fcmove
jp
imul
arpl
ds
jmp
mov
pop
rcr
dec
pop
cmp
bound
mov
sahf
ret
jmp
call
sbb
mov
or
jmp
mov
movs
aam
cmps
mov
dec
loop
pop
pop
dec
pop
cmp
mov
dec
mov
test
stos
cmp
into
sbb
clc
jno
xchg
jecxz
cs
(bad)
div
mov
jb
ds
sub
loope
push
in
aas
call
sbb
(bad)
inc
mov
mov
aas
daa
rcr
aas
daa
xlat
sbb
bound
mov
sub
mov
sub
mov
pop
inc
dec
pop
and
mov
mov
xor
or
mov
jb
ds
mov
add
outs
aam
dec
mov
add
jae
mov
call
bound
sub
mov
jle
push
loope
pop
in
mov
push
aam
outs
push
or
jmp
dec
dec
jmp
lea
mov
sbb
jnp
dec
mov
sub
mov
mov
data16
stos
xor
mov
sub
mov
mov
outs
aam
dec
mov
mov
sbb
dec
mov
mov
and
idiv
inc
cmp
fcmovnb
jne
jne
jno
mov
sbb
or
(bad)
ror
jmp
enter
or
int
dec
mov
ret
add
bound
ret
stos
mov
adc
outs
mov
dec
sbb
mov
in
dec
mov
inc
dec
fsub
dec
fiadd
retf
mov
or
bound
retf
push
dec
mov
jmp
mov
jmp
movs
popf
push
mov
and
mov
cmp
xlat
mov
(bad)
bound
adc
stos
call
sub
xchg
test
bound
pop
rol
and
loope
jl
(bad)
push
inc
mov
retf
jo
mov
push
inc
pop
pop
stos
ja
outs
pop
jp
daa
daa
ret
jmp
mov
popf
pop
pop
pop
arpl
loope
inc
cmp
jle
je
sub
call
push
repz
stos
ja
bound
xor
daa
dec
mov
mov
push
cmp
and
cmps
jmp
sub
push
enter
mov
or
mov
sbb
outs
dec
mov
in
ret
repz
aam
lods
jmp
dec
imul
mov
jb
outs
icebp
bound
ret
enter
mov
dec
dec
mov
jp
mov
ret
enter
mov
xor
scas
xor
mov
mov
xor
fistp
bound
sbb
outs
dec
mov
outs
mov
movs
cli
lods
xor
ret
push
mul
ret
mov
bound
jle
adc
xor
and
sbb
inc
adc
ds
adc
sub
mov
arpl
aad
add
adc
dec
(bad)
dec
mov
mov
dec
jmp
enter
ret
xor
bound
mov
cmp
mov
in
push
mov
lock
and
aas
sub
add
call
mov
mov
fist
cmp
mov
jmp
repz
bound
dec
pop
imul
or
jbe
movs
jmp
dec
push
call
mov
bound
mov
out
scas
mov
pushf
aam
dec
pop
daa
mov
xor
call
inc
inc
pop
sub
jb
adc
bound
mov
pop
es
mov
jmp
xchg
imul
mov
cmp
repz
popf
xchg
push
mov
sub
jmp
lahf
dec
lahf
aam
(bad)
aam
dec
or
jns
idiv
mov
popf
cmps
test
mov
scas
mov
pushf
aam
outs
xor
dec
inc
and
ds
(bad)
jb
bound
repz
sub
and
push
mov
lahf
aam
jae
jecxz
repnz
dec
mov
rol
jne
and
daa
stos
aam
dec
arpl
sbb
out
dec
loope
inc
fidiv
retf
popf
pop
inc
pop
gs
dec
mov
out
inc
fisubr
or
pushf
aam
bound
sub
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
lods
outs
dec
mov
out
inc
pop
jmp
and
bound
dec
iret
inc
ret
xor
bound
repnz
dec
sub
xlat
mov
popf
jl
mov
pop
push
mov
test
mov
jmp
mov
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
or
out
inc
ficom
or
pushf
aam
out
daa
sub
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
push
outs
dec
mov
out
inc
pop
xchg
outs
dec
mov
and
bound
dec
iret
inc
ret
stos
mul
repnz
dec
sub
xlat
mov
popf
jl
mov
cmc
lss
(bad)
mov
jo
or
pushf
aam
fiadd
or
bound
enter
xchg
cmp
dec
mov
and
bound
dec
iret
jno
mov
pop
sahf
aam
dec
mov
(bad)
mov
(bad)
aam
dec
popf
aad
pop
lds
mov
out
inc
pop
add
mov
and
bound
dec
iret
jno
mov
pop
sahf
aam
dec
mov
(bad)
mov
(bad)
aam
dec
popf
aad
pop
or
out
inc
xor
ret
outs
mul
repnz
xchg
ror
dec
addr16
push
mov
dec
dec
mov
mov
dec
xor
mov
or
mov
xor
sub
mov
dec
mov
fdiv
lock
mov
mov
or
popf
(bad)
mov
popf
pop
pop
cmp
xlat
mov
popf
jnp
bound
stc
or
mov
inc
mov
sub
inc
fwait
test
mov
or
or
sub
sti
fdiv
dec
pushf
aam
ficomp
mov
ret
(bad)
icebp
bound
enter
sahf
retf
mov
dec
lahf
aam
jno
inc
or
bound
rol
test
mov
cmp
inc
sub
xlat
xlat
mov
popf
ret
(bad)
icebp
bound
enter
add
bound
repnz
xchg
ror
dec
addr16
pop
fisubr
sahf
mov
pushf
aam
fisub
sub
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
and
mov
out
inc
xor
inc
fcom
sub
popf
aad
loop
mov
lock
dec
and
dec
xor
sub
push
fdiv
mov
(bad)
aam
dec
popf
aad
pop
cdq
imul
aad
dec
mov
and
bound
dec
iret
jno
mov
pop
sahf
aam
dec
mov
or
mov
inc
mov
sub
inc
fwait
test
mov
or
or
sub
sti
fdiv
dec
pushf
aam
ficomp
mov
ret
lock
enter
ss
bound
(bad)
arpl
dec
xor
jmp
dec
popf
sub
je
sub
popf
sub
stos
push
sub
and
out
push
popf
(bad)
mov
mov
aaa
mov
scas
test
aam
dec
adc
cpuid
aam
dec
popa
xchg
test
adc
dec
mov
mov
dec
loope
sub
jmp
repnz
sub
sub
leave
mov
mov
mov
mov
mov
xor
aam
in
jno
lock
mov
mov
or
popf
scas
test
aam
dec
loop
dec
mov
scas
mov
xchg
aam
dec
popf
pop
push
aas
out
dec
dec
popf
jnp
aaa
sahf
aam
dec
xor
push
and
sbb
push
mov
out
push
xor
ret
retf
sub
mov
xchg
ror
dec
addr16
pop
fidivr
retf
or
pushf
aam
adc
sub
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
sbb
mov
out
inc
pop
push
push
mov
and
bound
dec
iret
jno
mov
pop
sahf
aam
dec
mov
mov
test
mov
lahf
aam
mov
sub
jmp
aam
aaa
mov
test
ret
aam
dec
jecxz
mov
bound
mov
cmp
aaa
ret
aam
dec
mov
bound
mov
ins
scas
or
pop
jb
mov
outs
push
mov
jecxz
mov
scas
mov
pushf
aam
xor
sub
jmp
aam
aaa
mov
mov
popf
pop
pop
fidivr
retf
or
lahf
aam
pop
lds
mov
out
inc
aas
out
fbstp
and
mov
movs
dec
ret
aam
dec
jmp
dec
push
call
mov
xor
aaa
mov
scas
dec
inc
popf
(bad)
mov
mov
into
inc
popf
(bad)
mov
mov
(bad)
mov
scas
mov
pop
xchg
aam
dec
popf
pop
push
dec
xlat
(bad)
popf
aad
loop
dec
stos
lock
xchg
sub
cmps
xor
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
push
imul
out
inc
xor
ret
mov
mov
xchg
ror
dec
addr16
pop
fisubr
sahf
mov
pushf
aam
mov
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
adc
dec
xlat
(bad)
bound
mov
xchg
aam
dec
jmp
mov
dec
lahf
aam
jno
scas
dec
mov
aam
dec
xlat
shl
xchg
aam
xor
aam
dec
imul
aaa
out
aad
dec
or
stos
lock
aam
dec
popf
aad
pop
in
adc
mov
out
inc
xor
ret
push
lea
repnz
xchg
ror
dec
addr16
pop
fidivr
retf
or
pushf
aam
(bad)
pop
sub
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
pop
adc
mov
out
inc
pop
cdq
adc
dec
mov
mov
dec
loope
dec
iret
jno
mov
pop
sahf
aam
dec
mov
je
bound
stos
lock
aam
dec
popf
aad
pop
gs
mov
out
inc
cmp
ret
test
dec
sub
push
push
mov
dec
dec
mov
mov
dec
xor
mov
or
mov
xor
sub
push
fdiv
mov
(bad)
aam
dec
popf
aad
pop
lds
inc
pop
add
dec
mov
mov
dec
loope
dec
iret
jno
adc
mov
sahf
aam
dec
mov
(bad)
mov
bound
rol
test
mov
cmp
inc
sub
xlat
xlat
mov
popf
ret
push
mov
enter
mov
pop
jno
dec
mov
and
bound
dec
iret
inc
ret
dec
mov
repnz
dec
sub
xlat
mov
popf
jl
mov
aad
mov
test
mov
(bad)
aam
dec
popf
aad
pop
ins
adc
inc
pop
test
and
bound
dec
iret
jno
mov
pop
sahf
aam
dec
mov
jbe
bound
lss
test
out
mov
popf
mov
or
pushf
aam
jp
sub
cmps
and
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
rcl
mov
out
inc
fidivr
or
pushf
aam
and
dec
xor
sub
and
jbe
bound
repnz
xchg
ror
dec
addr16
pop
ficom
sahf
mov
pushf
aam
out
pop
sub
cmps
and
aaa
mov
mov
mov
or
stos
lock
scas
pop
sub
cmps
cmp
or
dec
mov
fdiv
mov
(bad)
aam
dec
popf
aad
pop
jns
dec
mov
out
inc
fisub
or
pushf
aam
mov
cmps
and
jno
sub
mov
inc
mov
sub
inc
fwait
test
mov
cmp
inc
sub
xlat
xlat
mov
popf
ret
xchg
mov
enter
ror
popa
sub
xchg
rol
gs
pop
xchg
bound
sbb
(bad)
mov
popf
jl
pop
mov
movs
ja
bound
ja
bound
rol
test
mov
cmp
inc
sub
xlat
xlat
mov
popf
ret
(bad)
mov
enter
inc
mov
mov
dec
lahf
aam
jno
cmc
xchg
lock
aam
dec
popf
aad
pop
or
dec
mov
out
inc
pop
inc
pop
dec
mov
and
bound
dec
iret
jno
mov
pop
sahf
aam
dec
mov
mov
test
mov
bound
rol
test
mov
or
or
sub
sti
fdiv
dec
pushf
aam
ficomp
mov
ret
cmps
mov
enter
fwait
ins
and
mov
sahf
aam
dec
mov
jo
bound
and
or
and
pop
and
cmp
ret
mov
popf
mov
mov
xlat
mov
popf
ret
mov
bound
and
pushf
aam
loop
sahf
mov
pushf
aam
pop
mov
mov
mov
jae
(bad)
aam
pop
popf
(bad)
mov
or
sahf
mov
pushf
aam
stos
pop
sub
xchg
adc
mov
scas
cmps
dec
lahf
aam
in
cmp
mov
jmp
retf
sub
xor
push
dec
push
rol
jne
outs
mov
mov
ret
rol
jne
popf
push
dec
xor
ins
and
(bad)
aaa
popf
aad
dec
xor
mov
and
bound
mov
or
dec
mov
ret
sahf
inc
popf
aam
jbe
stos
push
dec
arpl
cmp
sub
mov
hlt
or
loop
cli
inc
popf
aam
fs
cmc
or
bound
mov
stos
mov
xor
rol
jne
loop
out
into
retf
sub
xor
or
jmp
mov
dec
popf
aam
jne
mov
dec
popf
aam
cmp
and
mov
fbstp
retf
dec
cmp
mov
push
mov
bound
dec
cmp
cmps
mov
popf
mov
into
retf
mov
movs
sbb
je
in
dec
in
xchg
jl
bound
dec
mov
mov
mov
mov
into
(bad)
lahf
aam
dec
xlat
mov
test
shl
mov
mov
and
sub
jmp
ror
aam
dec
push
rol
jne
ret
test
ret
(bad)
mov
popf
sahf
jmp
popf
aam
(bad)
push
sub
out
mov
popf
aam
sub
sbb
mov
jle
cmp
pop
mov
popf
cmps
pop
mov
lahf
aam
aas
and
sub
jmp
ret
dec
popf
aam
jne
je
mov
sub
test
ret
(bad)
mov
jecxz
rcr
bound
and
(bad)
(bad)
mov
xor
mov
mov
loop
cdq
jb
bound
mov
sub
aaa
(bad)
(bad)
mov
xor
ins
and
and
mov
sub
mov
movs
dec
popf
test
xchg
imul
mov
bound
jp
mov
bound
dec
pop
popa
aad
dec
jmp
jp
jmp
and
out
mov
popf
jnp
aaa
(bad)
(bad)
mov
xor
add
(bad)
mov
popf
sahf
fisttp
aam
pop
out
(bad)
mov
popf
sahf
ret
dec
popf
aam
pop
cli
(bad)
mov
popf
sahf
jmp
popf
aam
aas
out
mov
popf
jnp
call
ret
(bad)
mov
imul
mov
bound
jp
mov
dec
mov
inc
jmp
and
(bad)
aaa
sahf
aad
dec
xor
pop
mov
retf
cs
mov
scas
dec
aam
aas
out
mov
popf
jnp
dec
pop
sub
rol
mov
jmp
iret
dec
popf
aam
inc
clc
fs
mov
outs
and
popf
aam
pop
adc
out
push
xor
in
into
or
dec
jne
iret
mov
popf
sub
bound
aaa
mov
mov
bound
enter
mov
bound
aam
scas
mov
mov
shl
jmp
(bad)
aaa
fcmovbe
mov
xor
xchg
aam
aas
out
mov
popf
jnp
aaa
fcmovbe
mov
xor
fsub
imul
inc
dec
fsub
into
dec
pushf
aam
loop
sub
mov
bound
dec
dec
xlat
xor
bound
repz
pop
sub
test
mov
movs
aam
es
aam
fidiv
or
bound
mov
mov
jae
bound
and
aam
pop
dec
mov
mov
out
mov
popf
jnp
(bad)
mov
push
dec
mov
call
and
sub
mov
scas
and
aam
cmp
inc
mov
popf
pop
dec
shr
dec
retf
mov
xor
mov
aas
mov
(bad)
fiadd
arpl
dec
aas
out
mov
popf
jnp
pop
ins
push
dec
mov
sub
fdivr
mov
popf
jnp
daa
(bad)
mov
cmps
daa
jbe
popf
sub
jge
out
cs
aam
mov
cmp
mov
bound
dec
pop
gs
cs
aam
mov
scas
dec
aam
pop
fstp
dec
mov
in
and
bound
sbb
mov
sub
mov
jg
(bad)
aam
push
lahf
aam
pop
imul
xlat
dec
popf
aam
mov
jmp
and
aam
jne
jne
jnp
das
dec
out
into
enter
sbb
or
jmp
dec
dec
jmp
mov
push
jb
bound
ret
mov
inc
jmp
mov
outs
ret
outs
xchg
ret
mov
pop
pop
jne
dec
mov
jmp
sbb
pop
dec
mov
jmp
inc
add
aaa
xlat
dec
bound
push
inc
arpl
inc
add
jb
sbb
(bad)
sub
je
test
(bad)
fsubr
push
jmp
iret
jle
inc
mov
sub
push
loop
fisttp
loop
xor
(bad)
mov
xchg
test
mov
ret
(bad)
and
pop
inc
cmp
popf
pop
inc
mov
es
into
and
(bad)
jb
cld
neg
cld
out
cmps
cpuid
pusha
jnp
ficom
dec
loope
pushf
push
dec
out
outs
dec
mov
pushf
push
dec
arpl
inc
add
jb
sbb
sbb
fcmovbe
cmp
(bad)
fsubr
out
outs
mov
or
sbb
mov
sub
mov
jns
mov
mov
mov
aas
daa
rcr
in
movs
jp
bound
push
push
jmp
sbb
mov
outs
mov
cmp
xor
scas
or
xor
mov
std
jnp
bound
in
jbe
or
jmp
dec
dec
jmp
mov
push
popf
aam
jne
scas
not
aam
lods
bound
(bad)
aaa
fmulp
mov
xor
mov
or
lock
sub
je
jmp
lock
jecxz
dec
mov
sub
dec
xlat
out
stos
dec
popf
ret
mov
jbe
and
jp
aam
dec
pop
daa
mov
cmp
sbb
aaa
fmulp
mov
and
mov
scas
not
aam
aas
out
stos
dec
popf
jnp
pop
lods
add
mov
jmp
xchg
sar
jmp
sbb
out
stos
dec
popf
ret
fiadd
push
mov
jnp
(bad)
jp
aam
dec
pop
daa
mov
xor
sbb
sbb
mov
dec
jmp
adc
cmp
mov
jmp
rep
inc
sub
mov
mov
jge
cmp
and
add
std
je
mov
mov
loope
das
dec
mov
ret
cli
and
imul
mov
loop
dec
mov
rol
jne
and
push
add
out
inc
cmp
inc
push
push
and
sbb
pop
dec
mov
out
inc
cmp
fist
mov
inc
add
aaa
(bad)
retf
mov
xor
push
xchg
enter
data16
repnz
xchg
ror
dec
addr16
pop
ficom
scas
dec
push
popf
aam
pop
sub
dec
mov
out
inc
pop
gs
dec
mov
and
bound
dec
iret
dec
ret
mov
shl
dec
sub
sub
jmp
stos
dec
popf
jl
pop
push
sub
cmps
cmp
or
dec
mov
fdiv
cmps
or
test
mov
aam
loop
sar
test
mov
bound
and
out
stos
dec
popf
jnp
bound
dec
xor
sub
push
fdiv
cmps
or
test
mov
aam
loop
cmp
mov
mov
xchg
inc
mov
sub
inc
fwait
test
mov
add
or
sub
sti
fdiv
push
popf
aam
fidivr
cmc
or
popf
aam
pop
sub
dec
mov
out
pop
dec
pop
cmp
mov
out
stos
dec
popf
jnp
xchg
sub
out
stos
dec
popf
jnp
call
ret
fcmovnb
je
sub
bound
rol
test
mov
aas
and
imul
popf
jnp
xchg
push
sub
cmps
and
mov
out
stos
dec
popf
jnp
mov
cmps
and
or
dec
mov
fdiv
cmps
or
test
mov
aam
loop
int
mov
test
mov
bound
mov
mov
jns
bound
dec
inc
jmp
mov
or
dec
mov
fdiv
fwait
mov
mov
xchg
sub
fwait
jns
punpckldq
mov
xor
sub
punpckldq
mov
xor
sub
jbe
inc
bound
sub
aaa
(bad)
retf
mov
xor
and
jbe
ret
jb
bound
repnz
xchg
ror
dec
addr16
pop
ficom
scas
dec
push
popf
aam
pop
xor
out
inc
or
dec
mov
int
aaa
xchg
hlt
mov
jmp
and
mov
sub
xchg
dec
xor
sub
push
fdiv
cmps
or
test
mov
aam
loop
and
(bad)
mov
bound
mov
mov
jp
bound
cdq
shl
mov
or
dec
mov
fdiv
cmps
or
test
mov
aam
loop
in
mov
test
mov
out
stos
dec
popf
jnp
pushf
mov
sub
ds
sub
cmps
cmp
or
dec
mov
fdiv
cmps
or
test
mov
aam
loop
mov
(bad)
mov
bound
mov
mov
mov
test
mov
bound
rol
test
mov
aas
and
imul
popf
jnp
loop
sub
cmps
and
jl
sub
test
mov
movs
ret
mov
bound
repnz
popa
sub
xchg
rol
gs
pop
xchg
bound
sbb
fild
stos
dec
popf
jl
movs
mov
sub
pop
push
sub
cmps
cmp
or
dec
mov
fdiv
cmps
or
test
mov
aam
loop
sar
test
mov
bound
mov
mov
jnp
bound
mov
ins
popf
aam
je
lods
jnp
bound
rol
test
mov
aas
and
imul
popf
jnp
push
push
sub
cmps
and
or
dec
mov
fdiv
fwait
mov
mov
xchg
sub
fwait
jns
punpckldq
mov
xor
sub
punpckldq
mov
xor
sub
jbe
inc
fwait
ins
and
(bad)
aaa
(bad)
retf
mov
xor
push
and
jbe
inc
dec
fsub
dec
fsub
dec
fisub
dec
repnz
call
hlt
mov
jecxz
dec
enter
aaa
(bad)
retf
mov
xor
push
lahf
bound
and
popf
aam
loop
xchg
dec
push
popf
aam
dec
xlat
xlat
xchg
dec
popf
ret
data16
bound
mov
sahf
hlt
mov
mov
pusha
mov
sbb
inc
dec
aas
dec
mov
jne
jnp
jle
push
jecxz
(bad)
xor
add
jne
inc
dec
mov
mov
dec
popf
aam
adc
cmp
and
pop
lea
dec
mov
jle
aas
sub
idiv
mov
test
mov
movs
ret
rcr
loope
dec
mov
and
rcr
bound
mov
dec
popf
aam
jne
sub
cdq
bound
ret
(bad)
mov
jmp
mov
dec
popf
aam
jne
cmp
mov
scas
out
dec
popf
aam
pop
cdq
add
dec
mov
cmps
into
push
lahf
aam
loop
test
ins
and
and
pop
into
mov
loope
outs
mov
pusha
sub
data16
out
scas
mov
popf
aam
aas
out
mov
popf
jnp
(bad)
dec
sub
call
adc
scas
dec
aam
pop
imul
inc
mov
pusha
sub
ret
mov
scas
mov
popf
aam
pop
add
sbb
out
mov
popf
jnp
bound
pop
jmp
dec
popf
aam
inc
inc
sbb
or
mov
scas
repz
popf
aam
pop
sub
out
push
or
or
xchg
int3
ret
shl
fcmovbe
mov
sub
movs
scas
scas
dec
popf
aam
mov
sub
psubd
mov
bound
aam
scas
mov
mov
dec
inc
mov
fsubr
popf
mov
mov
popf
jnp
sub
scas
out
dec
popf
aam
aas
out
mov
popf
jnp
mov
sub
xchg
or
and
sahf
aad
dec
xor
pop
inc
add
imul
ss
sub
popf
sahf
jecxz
popf
aam
pop
dec
sub
call
adc
retf
or
lock
mov
mov
data16
test
mov
popf
aam
pop
push
mov
into
ret
mov
movs
cmps
into
dec
pushf
aam
loop
pop
xchg
lock
sub
je
jmp
test
(bad)
sub
aaa
adc
mov
mov
addr16
mov
arpl
dec
fisub
dec
mov
pop
popa
mov
inc
dec
mov
sub
aaa
repnz
mov
xor
inc
dec
sub
(bad)
cli
sbb
fimul
cmc
or
popf
aam
pop
adc
inc
(bad)
popf
aam
mov
scas
sahf
mov
sub
aaa
out
shl
xchg
aam
xor
scas
div
popf
sahf
fisttp
aam
aaa
out
shl
bound
(bad)
aaa
(bad)
(bad)
mov
xor
(bad)
es
aam
pop
ret
dec
jmp
repz
adc
mov
mov
movs
aam
es
aam
pop
add
dec
mov
and
cwde
bound
sbb
imul
pop
lahf
bound
enter
mov
dec
inc
inc
ins
and
mov
cmp
mov
dec
popf
test
mov
mov
mov
not
mov
mov
(bad)
mov
(bad)
(bad)
mov
loope
js
xor
(bad)
es
aam
pop
or
mov
loope
inc
xor
jge
xchg
dec
sub
out
mov
popf
sub
bound
mov
out
mov
popf
jnp
outs
dec
sub
(bad)
aam
push
lahf
aam
pop
xor
sar
popf
aam
jne
sahf
out
dec
popf
aam
sahf
dec
sub
out
mov
popf
je
jmp
aaa
mov
sbb
xor
push
cmp
jae
dec
loope
inc
bound
popf
pop
inc
pop
cmp
jle
aas
sub
or
and
dec
cmp
mov
xor
jle
bound
sbb
add
popf
pop
inc
aas
ss
ins
mov
js
mov
call
dec
xor
in
gs
bound
fsub
outs
fwait
bound
ret
aam
pop
mov
dec
mov
cmp
lods
cmp
ffreep
jne
outs
mov
xor
push
xchg
bound
sbb
mov
outs
mov
imul
inc
jmp
adc
cmp
mov
jmp
repz
sub
stc
or
hlt
gs
imul
sbb
dec
pop
and
cmp
mov
mov
mov
popf
and
mov
scas
dec
inc
popf
aam
in
lds
bound
dec
pop
daa
(bad)
aaa
arpl
mov
xor
or
jbe
push
mov
bound
aas
mov
(bad)
pop
fld
dec
mov
in
mov
jno
mov
sbb
xchg
pop
mov
jmp
mov
cmp
sub
or
mov
or
push
pop
xor
sahf
cwde
bound
(bad)
test
jle
ret
imul
ins
pushf
push
dec
loope
dec
loop
aam
lock
loop
bound
enter
push
pop
xor
fisub
sub
popf
push
addr16
dec
sub
xchg
sub
mov
dec
mov
pushf
and
neg
adc
mov
jnp
in
xchg
dec
fdiv
mov
push
dec
jmp
and
or
and
or
and
bound
fsub
dec
fdiv
push
fwait
bound
ret
sub
push
aam
ss
imul
or
sbb
push
aam
pop
jmp
pop
icebp
add
jmp
mov
cmp
mov
loop
or
bound
in
sbb
mov
mov
inc
dec
in
sbb
mov
mov
inc
dec
in
sbb
mov
mov
stos
movs
(bad)
push
sub
arpl
popf
push
imul
sub
arpl
popf
push
fist
and
mov
fsub
and
and
mov
xor
dec
in
sbb
mov
ins
mov
inc
dec
in
sbb
mov
ins
mov
inc
dec
in
sbb
mov
ins
mov
inc
dec
in
sbb
mov
ins
mov
je
jnp
jl
add
repz
inc
mov
push
ret
(bad)
repz
sub
xchg
imul
fimul
xlat
mov
mov
ins
mov
inc
mov
push
stos
jmp
sub
mov
push
fimul
xlat
mov
loop
or
bound
dec
push
pop
aam
(bad)
sub
xchg
std
push
fimul
xlat
mov
dec
mov
mov
and
mov
mov
sahf
aam
scas
imul
pop
mov
fcomi
bound
xor
popf
push
push
daa
and
mov
fcomp
push
pop
movs
or
jmp
sub
dec
popf
push
arpl
inc
sub
sahf
aam
xchg
std
push
pop
ror
repnz
xor
popf
push
imul
sub
sahf
aam
ss
imul
shl
repz
xor
popf
push
iret
adc
sub
in
mov
(bad)
push
in
xchg
lock
cs
rol
jne
ficom
mov
popf
mov
or
popf
aam
jbe
mov
and
and
bound
retf
aaa
dec
mov
outs
mov
xchg
bound
and
and
and
dec
outs
mov
cdq
daa
fistp
fsub
dec
fisub
retf
loop
imul
outs
and
and
cmp
jmp
bound
dec
push
pop
aam
bound
loop
pop
shl
add
inc
loope
das
loop
aas
and
xor
outs
and
and
imul
bound
call
xor
inc
dec
dec
push
pop
aam
bound
dec
push
outs
jmp
bound
mov
sub
neg
ret
das
loop
jp
cmps
or
dec
xor
inc
xchg
push
and
and
imul
bound
call
fsub
dec
fsub
dec
fsub
dec
fsub
dec
fsub
div
or
and
inc
sub
movs
inc
dec
in
sbb
mov
dec
dec
push
pop
aam
bound
dec
push
outs
jmp
bound
ficom
mov
dec
and
xor
outs
and
and
imul
bound
call
fsub
jle
std
push
fsub
jle
ret
fdiv
push
retf
and
jp
or
bound
pop
pop
push
dec
mov
mov
lock
push
pop
jmp
and
and
and
and
and
bound
mov
sub
call
test
sub
push
(bad)
sub
mov
(bad)
aam
xchg
push
fsub
jle
ret
fdiv
xor
bound
dec
fmul
dec
mov
jnp
cmp
imul
or
mov
adc
or
push
mov
mov
sub
or
(bad)
or
pop
fisub
retf
loop
imul
outs
and
and
bound
retf
dec
dec
mov
push
xchg
lock
fisub
sub
xor
push
xchg
bound
and
mov
inc
or
mov
outs
mov
inc
dec
dec
push
pop
aam
bound
dec
push
dec
jmp
bound
mov
sub
or
dec
mov
inc
xor
popa
sub
loop
imul
outs
and
and
bound
and
and
and
and
and
pop
inc
loope
bound
and
sub
popa
sub
loop
imul
outs
and
and
bound
mov
fsub
jle
std
push
fsub
jle
ret
fdiv
jo
test
dec
mov
inc
dec
mov
inc
dec
mov
jnp
fnstcw
test
or
mov
adc
mov
mov
sar
movs
inc
dec
dec
push
pop
aam
bound
dec
push
outs
jmp
bound
(bad)
sub
or
dec
mov
inc
pop
mov
sub
mov
sub
fidiv
test
lock
pop
add
pop
jmp
pop
aam
bound
dec
push
outs
jmp
bound
fadd
sub
jno
sub
bound
dec
loop
imul
mov
add
jnp
and
and
and
and
and
and
bound
mov
sub
(bad)
or
dec
mov
inc
pop
outs
and
and
imul
bound
call
fsub
jle
std
push
fsub
jle
ret
fdiv
sbb
mov
mov
bound
mov
jnp
mov
imul
or
mov
adc
mov
mov
sub
or
mov
add
and
repz
or
and
mov
sub
mov
sub
adc
mov
mov
sub
or
mov
add
and
bound
dec
fisub
aas
and
repnz
mov
sub
mov
sub
adc
or
bound
and
and
and
and
and
bound
dec
fdiv
dec
mov
jnp
outs
sub
arpl
or
(bad)
sub
call
jle
std
push
fsub
jle
ret
fdivr
das
ficom
aas
and
mov
sub
mov
sub
adc
or
push
mov
mov
sub
or
sub
dec
fcmove
sub
or
sbb
xor
nop
lock
pop
icebp
or
shl
dec
popf
aam
dec
arpl
ret
mov
adc
push
loope
pop
in
xchg
(bad)
std
cmc
sub
jne
pop
dec
mov
ficom
mov
popf
mov
or
popf
aam
jbe
mov
and
repz
dec
inc
test
and
and
mov
aas
daa
fistp
in
xor
bound
dec
fsub
jle
std
push
fsub
shl
add
inc
xor
mov
mov
sub
xor
push
and
and
imul
mov
imul
sub
mov
push
jg
and
and
daa
shl
xchg
test
(bad)
xor
fdiv
dec
mov
jnp
jnp
imul
or
mov
adc
or
push
mov
mov
sub
or
dec
mov
mov
mov
fdiv
inc
pop
fisubr
retf
loop
imul
outs
and
and
bound
and
or
and
or
and
bound
fsub
inc
fdiv
(bad)
xchg
bound
ret
in
xchg
mov
sub
mov
inc
jnp
push
das
aam
(bad)
sub
mov
push
jg
and
and
and
and
or
cmps
or
and
mov
scas
xchg
lock
pop
popa
or
rol
repz
mov
sbb
or
arpl
dec
dec
push
ret
(bad)
repz
sub
(bad)
mov
inc
or
mov
push
mov
stos
jbe
shr
pop
cmp
and
arpl
dec
dec
push
ret
(bad)
repz
ret
sub
mov
gs
mov
aam
pop
jmp
pop
adc
mov
sub
or
mov
add
dec
mov
inc
jns
jbe
xor
popa
sub
loop
imul
outs
and
and
bound
ret
rol
jne
sub
or
mov
add
dec
mov
inc
ja
jbe
in
bound
and
mov
scas
xchg
lock
pop
inc
xor
mov
pop
aam
(bad)
xor
aam
mov
push
jg
and
and
and
and
bound
fidiv
dec
mov
sub
xor
outs
and
and
imul
bound
call
xor
inc
dec
dec
push
pop
aam
bound
dec
push
outs
jmp
bound
fadd
sub
jno
sub
bound
dec
loop
imul
mov
adc
and
and
and
and
and
and
bound
mov
sub
(bad)
or
dec
mov
inc
pop
outs
and
and
imul
bound
call
fsub
jle
std
push
fsub
jle
ret
fdiv
sbb
mov
mov
bound
mov
jnp
mov
imul
or
mov
adc
mov
mov
sub
or
mov
mov
mov
cmp
push
arpl
dec
fiadd
and
sbb
or
bound
pop
popf
ss
mov
push
jmp
mov
jle
std
push
fsub
jle
ret
fdiv
mov
bound
and
sub
jl
dec
mov
jnp
in
imul
or
mov
adc
mov
mov
sub
or
mov
add
and
bound
dec
fmul
pop
fisub
retf
loop
mov
dec
outs
and
and
in
dec
mov
aaa
fdivp
bound
dec
push
pop
aam
bound
dec
push
dec
jmp
bound
fmul
or
mov
jnp
outs
sub
arpl
or
(bad)
sbb
std
push
xor
inc
dec
dec
push
pop
aam
bound
dec
push
dec
jmp
bound
fadd
inc
adc
jbe
dec
mov
jnp
outs
sub
arpl
or
(bad)
sub
xchg
std
push
fsub
jle
std
push
fsub
jle
ret
fdiv
shl
arpl
dec
fdivr
mov
jnp
push
mov
lock
jle
dec
adc
mov
mov
jmp
dec
popf
ret
xchg
inc
popf
aam
jne
dec
dec
mov
jne
jno
mov
sbb
xor
dec
repz
sub
test
and
bound
fsub
dec
fisub
dec
xor
xor
jmp
enter
iret
sub
dec
fsub
mov
cmp
sub
mov
push
mov
test
dec
(bad)
in
push
inc
sub
out
outs
mov
loop
outs
mov
popf
pop
pop
ficomp
or
loop
sub
popf
aam
jbe
mov
push
pop
jmp
jb
sahf
pop
add
(bad)
aam
dec
or
lock
imul
aam
mov
popf
test
stos
jmp
mov
call
dec
bound
fsub
dec
aas
daa
rcr
dec
pop
cmp
(bad)
(bad)
imul
mov
(bad)
adc
jle
push
jecxz
dec
mov
sub
in
push
fs
mov
lea
movs
sbb
mov
inc
jmp
aaa
(bad)
aam
dec
xor
and
jg
dec
or
dec
mov
fdiv
dec
loop
mov
pop
cmp
psrld
aas
out
mov
popf
jnp
bnd
dec
xor
aam
(bad)
jae
xchg
add
sub
aaa
(bad)
aam
dec
xor
bound
or
mov
push
mov
pop
cmp
inc
shr
aas
out
mov
popf
jnp
mov
pop
aam
(bad)
jae
pop
add
sub
aaa
(bad)
aam
dec
xor
mov
iret
popf
cs
bound
mov
mov
pop
mov
stos
ss
fs
pop
fisubr
call
popf
aam
pop
movs
cmp
mov
fst
bound
retf
iret
popf
sub
mov
bound
mov
mov
ss
push
pop
(bad)
call
popf
aam
pop
icebp
cmp
mov
push
mov
pop
cmp
adc
imul
popf
jnp
into
jne
dec
xor
aam
(bad)
jae
xchg
add
sub
aaa
(bad)
aam
dec
xor
movs
bound
ret
int
aaa
sahf
aad
dec
jmp
retf
iret
popf
and
mov
bound
mov
mov
mov
stos
ss
outs
pop
pop
fiadd
or
popf
aam
pop
dec
cmp
mov
push
mov
pop
cmp
mov
imul
popf
jnp
cmps
jne
dec
xor
aam
(bad)
jae
push
add
sub
aaa
(bad)
aam
dec
xor
mov
bound
and
mov
lock
popf
aam
fisub
or
popf
inc
jo
and
and
imul
mov
popf
inc
mov
jns
dec
xor
fcmovnb
je
sbb
jnp
das
dec
out
into
sbb
xor
rol
xchg
push
cmc
out
pop
repz
aaa
sub
test
ret
ret
fisubr
sub
mov
movs
dec
popf
test
mov
or
sbb
add
dec
mov
jne
jnp
das
dec
out
into
retf
and
xor
or
or
fsubr
(bad)
jmp
ret
fcmovnb
je
pop
stc
lock
mov
mov
pop
mov
ret
sahf
test
sub
mov
xchg
rol
daa
xchg
shl
popf
aam
(bad)
jae
out
and
(bad)
aaa
(bad)
fdiv
bound
repz
bound
dec
inc
test
mov
movs
stos
test
mov
pop
cmp
je
imul
popf
jnp
push
ja
dec
xor
fdiv
mov
bound
mov
mov
pop
mov
stos
test
mov
pop
cmp
mov
imul
popf
jnp
add
dec
xor
fdiv
mov
bound
mov
mov
mov
push
xchg
aam
cmp
mov
pop
cmp
xchg
imul
popf
jnp
ret
dec
xor
fdiv
mov
bound
mov
mov
mov
stos
test
mov
pop
cmp
(bad)
imul
popf
jnp
mov
dec
cmp
idiv
(bad)
mov
popf
and
mov
bound
mov
mov
test
mov
pop
cmp
sbb
imul
popf
jnp
dec
jbe
dec
xor
fdiv
mov
bound
mov
mov
pop
mov
stos
test
mov
pop
cmp
pop
shr
aas
out
mov
jp
sub
movs
std
xor
call
mov
imul
popf
jnp
sbb
dec
xor
fdiv
mov
bound
mov
mov
cmp
and
(bad)
aaa
(bad)
fdiv
popf
aam
inc
xor
dec
mov
pop
jmp
bound
add
sub
xor
fdiv
popf
aam
(bad)
outs
test
pop
xchg
aam
mov
scas
pop
mov
sub
inc
push
fcmovnb
je
in
enter
jp
or
and
ret
pop
loop
mov
loope
inc
cmp
(bad)
mov
popf
and
mov
ret
bound
retf
setle
mov
bound
sbb
dec
xor
xlat
mov
popf
adc
sub
loop
mov
popf
aam
mov
(bad)
in
into
dec
sahf
aam
mov
fisttp
jmp
(bad)
aaa
call
imul
xlat
mov
xor
(bad)
stos
bound
enter
test
mov
push
add
or
mov
mov
mov
mov
or
(bad)
mov
popf
and
test
dec
xor
(bad)
repz
test
mov
popa
imul
aad
dec
xor
jp
bound
retf
jns
mov
mov
push
imul
shl
bound
enter
or
bound
dec
mov
scas
mov
popf
aam
pop
pop
aas
dec
mov
ffree
mov
(bad)
aaa
sahf
shl
and
(bad)
aaa
sahf
aad
dec
xor
stos
movs
bound
and
out
mov
popf
jnp
inc
jne
dec
xor
aad
dec
xor
jb
bound
(bad)
aaa
sahf
xlat
mov
loope
dec
loop
scas
mov
popf
aam
ficomp
scas
mov
popf
aam
pop
std
cmp
mov
out
pop
fsub
into
dec
call
mov
inc
dec
ficom
scas
mov
popf
aam
pop
cli
mov
dec
loope
inc
mov
arpl
dec
aas
out
mov
popf
test
mov
ret
dec
movs
bound
adc
out
mov
popf
mov
lea
(bad)
mov
popf
and
sub
popf
sahf
mov
popf
aam
and
imul
out
scas
mov
popf
aam
pop
dec
cmp
mov
out
pop
(bad)
cdq
or
popf
aam
pop
cmp
scas
mov
popf
aam
pop
cmp
scas
xchg
inc
popf
aam
xchg
jmp
aam
push
xlat
mov
popf
add
mov
popf
aam
xlat
mov
popf
sub
inc
popf
aam
(bad)
fdiv
xchg
xchg
ss
aam
dec
call
dec
popf
jnp
fs
xlat
mov
popf
jnp
add
xor
shl
bound
ret
fdiv
popf
aam
pop
cmp
lahf
inc
popf
aam
into
cmp
and
pop
mov
xchg
shl
popf
aam
dec
xlat
fbstp
mov
sahf
shl
bound
(bad)
setle
mov
xor
aam
aas
push
sub
in
mov
mov
aas
out
mov
popf
jnp
mov
sahf
mov
push
adc
fsub
dec
pop
jmp
ret
dec
mov
sahf
xlat
mov
xor
pop
mov
mov
mov
(bad)
mov
ins
scas
arpl
aam
pop
mov
mov
mov
movs
ret
or
dec
fisub
pop
push
mov
dec
pop
mov
jb
jge
aam
in
cmp
xor
push
cmp
sub
loope
jl
pushf
pop
xor
xor
mov
mov
neg
and
sub
dec
mov
scas
out
pop
popf
aam
jb
and
dec
mov
sub
jmp
outs
inc
adc
or
(bad)
fsubr
dec
popf
mov
(bad)
repz
sbb
and
mov
ficomp
mov
sbb
jae
dec
loop
gs
mov
stos
mov
fisub
dec
mov
scas
cli
pop
popf
aam
dec
pop
and
fsub
fist
and
(bad)
aaa
rol
mov
xor
jns
popf
aam
jbe
push
mov
bound
inc
aaa
push
sub
loope
aas
push
and
inc
arpl
push
(bad)
aam
(bad)
(bad)
imul
xchg
enter
(bad)
mov
jmp
mov
or
mov
mov
mov
mov
enter
mov
test
mov
mov
dec
mov
popf
aam
popa
das
dec
pop
jecxz
jmp
fwait
xor
js
sti
adc
movs
test
shr
fld
es
mov
add
scas
clc
pop
popf
aam
mov
leave
(bad)
mov
(bad)
sbb
xchg
jmp
into
sbb
scas
loope
popf
aam
cmp
cmps
into
adc
mov
xchg
sub
aaa
std
(bad)
mov
xor
jp
bound
and
popf
aam
aas
out
movs
dec
popf
jnp
(bad)
jb
dec
aas
out
cmps
dec
popf
jnp
jl
aam
aas
out
cmps
dec
popf
jnp
shl
xor
push
repz
sub
aaa
std
(bad)
mov
xor
bound
dec
sub
and
dec
pop
sub
mov
xchg
xchg
lock
adc
sub
je
imul
mov
mov
pop
sub
fisttp
dec
popf
cmps
jle
mov
sub
xchg
dec
out
fcmovbe
icebp
or
bound
push
ret
pop
jmp
xchg
arpl
mov
ss
mov
fsubr
push
call
dec
(bad)
mov
mov
in
xchg
lock
and
sub
aas
(bad)
cmps
dec
popf
cmps
jle
mov
sub
xchg
dec
out
fcmovb
icebp
or
bound
push
cld
push
pop
dec
cmp
loope
or
fist
jle
mov
sub
xchg
mov
jno
push
dec
mov
sub
mov
das
and
bound
or
bound
inc
mov
mov
and
mov
call
mov
fcmovbe
inc
mov
cmps
push
or
cmps
into
pop
(bad)
aam
loop
dec
inc
mov
cmps
mov
aam
xor
sub
fwait
inc
dec
aas
pop
xchg
sbb
pop
popf
aam
dec
pop
lahf
mov
fsub
push
or
inc
dec
ficom
pop
call
and
mov
outs
repz
ins
sub
daa
xchg
sbb
out
movs
dec
popf
jnp
cmp
dec
aas
out
sahf
movs
dec
popf
test
dec
and
mov
bound
(bad)
pmovmskb
mov
xor
mov
mov
inc
dec
aas
daa
xchg
sbb
pusha
inc
mov
(bad)
(bad)
ret
into
mov
(bad)
ret
push
bound
ret
repz
cs
outs
and
ret
mov
and
ret
cmps
dec
outs
sbb
dec
cmp
jmp
mov
sub
(bad)
stos
mov
mov
in
cld
bound
mov
pop
popf
aam
aaa
rol
mov
jmp
and
(bad)
cmp
in
push
outs
bound
dec
mov
sub
cmp
repz
fisubr
dec
mov
stos
mov
jne
out
dec
mov
sub
bound
loop
bound
and
and
and
or
and
(bad)
dec
fiadd
retf
bound
pop
jns
dec
mov
sub
repz
add
sub
mov
sub
fsub
mov
popf
aam
jbe
ret
ret
sub
bound
retf
rcr
and
mov
ficomp
or
bound
ret
(bad)
mov
ficom
mov
fsubr
dec
popf
mov
mov
mov
sub
mov
aam
push
(bad)
aam
jne
xchg
mov
stos
mov
aas
out
cmps
dec
popf
jnp
aaa
into
lds
and
and
mov
lahf
or
loop
shl
popf
aam
jbe
and
(bad)
imul
and
dec
mov
sub
cmp
cmps
into
sbb
and
bound
fsub
pop
mov
in
daa
dec
mov
scas
jecxz
popf
aam
fsub
dec
ficomp
sub
mov
fld
bound
ret
dec
fsub
mov
mov
push
dec
sub
ins
sub
jp
push
push
xor
mov
repz
outs
scas
loop
xchg
inc
mov
inc
dec
fsub
dec
aas
daa
iret
sbb
and
ds
cmp
jmp
retf
sub
xor
or
jecxz
push
leave
bound
shl
test
mov
bound
xor
loope
dec
mov
(bad)
mov
arpl
dec
mov
bound
pop
mov
sub
test
bound
pop
push
dec
(bad)
pop
sub
ins
scas
retf
mov
sub
xor
push
bound
inc
ss
ficom
fcmovbe
imul
jmp
cmps
dec
popf
aam
dec
xchg
int3
ret
(bad)
mov
jmp
and
imul
popf
ret
push
push
popf
aam
jbe
mov
mov
out
mov
popf
jnp
pop
mov
mov
mov
inc
mov
and
mov
cmps
into
jp
aam
loop
push
movlps
sub
mov
out
mov
popf
add
push
aam
xor
(bad)
mov
dec
mov
jb
pop
xor
aaa
xchg
mov
dec
scas
xchg
dec
popf
aam
pop
data16
mov
mul
mov
popf
adc
cmp
iret
mov
popf
add
outs
lahf
aam
loop
scas
stos
dec
popf
aam
aaa
mov
inc
dec
fsub
jle
ret
pop
leave
es
mov
shl
jmp
enter
or
sub
push
lahf
or
bound
mov
inc
dec
push
bound
retf
(bad)
adc
inc
dec
push
inc
push
(bad)
nop
pop
popf
aam
xor
push
bound
inc
aaa
sbb
mov
push
and
and
mov
jmp
inc
dec
mov
mov
mov
bound
mov
bound
pop
popa
es
mov
arpl
mov
and
jb
push
inc
dec
pop
and
cmp
ret
bound
shl
mov
mov
xchg
push
inc
mov
adc
shr
adc
ret
imul
sti
push
(bad)
push
adc
jmp
(bad)
dec
adc
shr
inc
adc
ret
imul
shr
jbe
dec
mov
outs
adc
std
push
mov
bound
dec
pop
cmp
cmp
shl
into
ret
imul
shr
push
dec
xchg
push
(bad)
outs
inc
sti
mov
jb
idiv
popf
aam
dec
pop
cmp
xor
test
push
lahf
aam
mov
mov
aas
out
mov
popf
jnp
outs
sub
out
mov
popf
ret
bound
ret
rol
jne
jae
mov
stos
mov
sub
popf
sub
out
scas
dec
dec
popf
aam
dec
push
ret
(bad)
repz
sub
packsswb
mov
bound
fsub
dec
fidiv
icebp
or
imul
(bad)
repz
sub
xor
mov
mov
out
mov
popf
in
into
inc
lahf
aam
mov
push
cmp
and
dec
mov
bound
mov
sub
aaa
arpl
mov
xor
jle
ret
imul
out
cmps
dec
dec
popf
aam
jp
imul
arpl
ds
loope
dec
sar
fidivr
or
popf
aam
pop
bound
inc
(bad)
popf
aam
mov
or
mov
sub
cmp
sub
mov
mov
ret
bound
ret
rol
jne
scas
dec
dec
popf
aam
aas
out
mov
popf
jnp
lahf
mov
fidiv
outs
sub
cmps
cmp
dec
bound
dec
aas
out
mov
popf
jnp
xchg
or
bound
mov
pop
or
mov
sub
mov
(bad)
and
jle
or
(bad)
sub
aas
arpl
mov
loope
mov
loop
dec
mov
ror
dec
jb
imul
inc
dec
fiadd
sub
dec
push
aaa
fdivp
(bad)
stos
mov
sub
out
mov
popf
sub
mov
aam
cmp
cs
dec
popf
aam
sbb
ja
sbb
and
mov
ret
mov
xchg
or
(bad)
ret
mov
sub
aaa
(bad)
aam
dec
arpl
mov
jb
repnz
cmps
into
mov
aam
loop
scas
mov
fimul
or
popf
aam
pop
lds
dec
mov
out
pop
ficomp
scas
dec
dec
popf
aam
dec
push
stos
jmp
sub
packsswb
mov
bound
fsub
dec
fisub
sub
dec
push
stos
jmp
sub
or
sub
xchg
int3
ret
(bad)
mov
jmp
(bad)
aaa
arpl
mov
xor
mov
or
xchg
lock
mov
mov
(bad)
mov
bound
mov
popf
push
addr16
push
dec
xor
sub
or
and
bound
pop
imul
addr16
push
dec
pop
cld
sub
out
scas
dec
dec
popf
aam
aas
out
mov
popf
jnp
adc
fidiv
pushw
xor
sub
out
mov
popf
jnp
xchg
or
bound
mov
pop
or
mov
sub
fnstcw
ret
loop
bound
mov
dec
mov
mov
jge
mov
ret
bound
(bad)
aas
arpl
mov
loope
mov
loop
dec
mov
ror
dec
popa
pop
imul
inc
dec
fimul
or
push
dec
dec
push
add
repz
push
bound
mov
je
aam
dec
popf
sub
dec
pushf
aam
cmp
cs
dec
popf
aam
sbb
ja
sbb
and
mov
ret
jle
bound
mov
dec
mov
mov
leave
dec
mov
ret
bound
retf
aaa
popf
aad
dec
arpl
mov
popa
pop
repnz
cmps
into
mov
aam
loop
scas
mov
fimul
or
popf
aam
pop
test
dec
mov
out
pop
ficomp
scas
dec
dec
popf
aam
dec
push
or
repz
sbb
arpl
mov
bound
fsub
dec
fidiv
or
sub
push
or
repz
and
pusha
sub
out
mov
popf
sub
dec
pushf
aam
cmp
cs
dec
popf
aam
sbb
ja
sbb
and
mov
ret
ss
sub
mov
dec
mov
ret
bound
retf
aaa
pushf
aad
dec
arpl
mov
stos
aam
xor
dec
(bad)
fwait
and
daa
pushf
aad
dec
pop
jmp
mov
dec
popf
aam
aaa
mov
mov
jmp
(bad)
aaa
arpl
mov
xor
mov
or
xchg
lock
mov
mov
inc
mov
test
mov
jmp
scas
dec
popf
aam
aaa
xchg
mov
jmp
and
or
and
and
sub
sub
out
mov
popf
inc
dec
fsub
dec
dec
xlat
fbstp
mov
sub
(bad)
adc
or
outs
sbb
repnz
ja
bound
cmp
(bad)
ficom
or
popf
aam
push
sub
bound
mov
or
and
imul
popf
ret
mov
xchg
(bad)
mov
loope
mov
loop
dec
mov
shl
mov
mov
sbb
out
mov
dec
popf
aam
dec
xlat
fbstp
mov
sub
mov
scas
mov
fsub
mov
pop
xchg
aad
dec
mov
mov
mov
mov
fbstp
mov
sub
mov
dec
fsub
dec
fsub
dec
fisub
dec
repnz
fcomi
(bad)
repnz
sub
aaa
xchg
aad
dec
jecxz
push
cli
bound
and
popf
sahf
mov
jb
sub
outs
mov
or
ja
bound
cmp
(bad)
(bad)
mov
mov
sahf
mov
mov
sub
bound
mov
or
and
imul
popf
ret
scas
mov
sub
mov
mov
in
dec
(bad)
imul
call
fsub
daa
push
and
and
mov
lahf
or
loop
fnstcw
popf
aam
jbe
inc
dec
dec
push
and
repz
stos
mov
sub
dec
xchg
int3
ret
(bad)
mov
jmp
mov
dec
pop
cmp
mov
dec
mov
je
jmp
aaa
mov
sbb
xor
pop
pop
add
cmp
outs
mov
movs
mov
dec
mov
and
jle
sub
pop
cmp
out
dec
mov
adc
ret
imul
jmp
pop
lds
dec
mov
lea
(bad)
fsubr
pop
push
mov
mov
and
mov
mov
jmp
pop
aam
(bad)
sub
dec
mov
mov
and
mov
mov
mov
mov
bound
dec
push
add
repz
add
dec
mov
mov
and
mov
jle
std
push
(bad)
jbe
jbe
(bad)
imul
mov
dec
mov
mov
mov
bound
xor
push
bound
ds
and
mov
cmp
dec
(bad)
mov
dec
cmp
adc
ret
imul
std
push
mov
aam
bound
cmp
aam
bound
jle
imul
(bad)
mov
dec
mov
aam
bound
cmp
jmp
sub
push
or
repz
cmp
shl
bound
jle
ret
imul
std
push
mov
pop
aas
mov
jb
ds
sub
outs
xchg
call
push
jmp
mov
jmp
bound
dec
dec
inc
and
mov
sub
inc
daa
mov
mov
sub
inc
cmp
mov
sub
inc
aas
mov
mov
sub
inc
or
mov
sub
inc
pop
mov
mov
sub
inc
sbb
mov
sub
inc
pop
mov
mov
sub
jmp
sbb
mov
mov
pop
or
xchg
or
ret
jnp
loop
sub
cmps
and
neg
mov
or
pop
or
dec
mov
or
fsubr
jb
cs
mov
or
and
xchg
push
fsub
mov
in
dec
mov
inc
dec
in
sub
pop
push
loop
jmp
(bad)
dec
mov
jb
dec
aaa
pcmpeqd
mov
(bad)
aaa
lfs
sub
cmovae
popf
aam
dec
nop
test
cmovae
push
outs
mov
(bad)
fnsave
jmpw
bound
dec
dec
inc
imul
bound
dec
dec
inc
outs
mov
mov
sub
inc
arpl
mov
sub
inc
addr16
mov
sub
inc
jnp
lock
dec
dec
inc
jg
lock
dec
dec
inc
jae
lock
dec
dec
inc
ja
lock
dec
dec
inc
dec
mov
mov
sub
inc
dec
mov
mov
sub
inc
inc
mov
mov
sub
inc
inc
mov
mov
sub
inc
pop
mov
mov
sub
inc
pop
mov
mov
sub
inc
push
mov
mov
sub
inc
push
mov
mov
sub
inc
stos
mov
mov
sub
inc
scas
mov
mov
sub
inc
mov
(bad)
inc
cmps
mov
mov
sub
inc
mov
(bad)
inc
mov
(bad)
inc
mov
lock
dec
dec
inc
mov
lock
dec
dec
inc
mov
mov
sub
inc
(bad)
mov
mov
sub
inc
cmp
bound
dec
dec
inc
xchg
mov
sub
inc
fwait
mov
mov
sub
inc
lahf
mov
mov
sub
inc
xchg
mov
mov
sub
inc
xchg
mov
mov
sub
inc
jmp
lock
dec
dec
inc
out
mov
mov
sub
inc
jecxz
lock
dec
dec
inc
out
lock
dec
dec
inc
sti
mov
mov
sub
inc
(bad)
mov
mov
sub
inc
repz
mov
sub
inc
idiv
mov
sub
inc
retf
mov
mov
sub
inc
iret
mov
mov
sub
inc
ret
mov
mov
sub
inc
(bad)
mov
mov
sub
inc
sar
mov
sub
inc
xlat
mov
mov
sub
inc
sub
mov
sub
inc
das
mov
mov
sub
inc
and
mov
sub
inc
daa
mov
mov
sub
inc
cmp
mov
sub
inc
aas
mov
mov
sub
inc
xor
mov
sub
inc
aaa
mov
mov
sub
inc
or
mov
sub
inc
movsx
bound
dec
dec
inc
add
mov
sub
inc
pop
mov
mov
sub
inc
sbb
mov
sub
inc
pop
mov
mov
sub
inc
adc
mov
sub
inc
pop
mov
mov
sub
inc
imul
bound
dec
dec
inc
outs
mov
mov
sub
inc
arpl
mov
sub
inc
addr16
mov
sub
inc
jnp
lock
dec
dec
inc
jg
lock
dec
dec
inc
jae
lock
dec
dec
inc
ja
lock
dec
dec
inc
dec
mov
mov
sub
inc
dec
mov
mov
sub
inc
pop
mov
mov
sub
inc
pop
mov
mov
sub
inc
push
mov
mov
sub
inc
push
mov
mov
sub
inc
stos
mov
mov
sub
inc
cmps
mov
mov
sub
inc
mov
(bad)
inc
mov
(bad)
inc
mov
lock
dec
dec
inc
mov
lock
dec
dec
inc
mov
mov
sub
inc
(bad)
mov
mov
sub
inc
cmp
bound
dec
dec
inc
xchg
mov
sub
inc
xchg
mov
mov
sub
inc
xchg
mov
mov
sub
inc
jmp
lock
dec
dec
inc
out
mov
mov
sub
inc
jecxz
lock
dec
dec
inc
out
lock
dec
dec
inc
sti
mov
mov
sub
inc
(bad)
mov
mov
sub
inc
repz
mov
sub
inc
idiv
mov
sub
inc
retf
mov
mov
sub
inc
iret
mov
mov
sub
inc
ret
mov
mov
sub
inc
(bad)
mov
mov
sub
inc
fstp
mov
sub
inc
fistp
mov
sub
inc
sar
mov
sub
inc
xlat
mov
mov
.byte
dec
