sbb
add
inc
ss
stc
xchg
lds
xor
in
mov
retf
mov
mul
and
cmp
push
pushw
push
pop
push
cmp
outs
adc
xor
fidivr
sbb
sub
aad
stc
outs
sahf
push
inc
adc
(bad)
popa
mov
ud0
pop
loope
pop
in
jge
jne
sub
dec
inc
fadd
xor
push
out
mov
mov
adc
adc
xchg
out
mov
sbb
xor
repz
dec
mov
out
mov
out
xchg
add
push
sahf
mov
push
test
jnp
xlat
xlat
neg
shr
std
aad
add
aas
pop
xchg
sub
loop
cwde
add
cmp
pop
inc
fisub
mov
lds
xor
aad
push
(bad)
pop
mov
xor
mov
xchg
xchg
adc
mov
sbb
ss
add
xor
movs
mov
add
call
sub
mov
xchg
lods
xlat
pop
xlat
mov
sub
int3
scas
call
dec
daa
fcomp
outs
fidivr
aad
lods
cmp
sti
inc
pop
sahf
les
(bad)
int3
stos
push
loopne
repnz
fisubr
(bad)
inc
rcr
xor
test
fadd
outs
(bad)
mov
call
pop
les
jmp
test
push
push
movs
stos
and
sub
or
stc
mov
daa
fisubr
pop
xor
jmp
xor
push
fld
js
movs
xlat
pop
mov
xchg
cwde
cmp
pushf
lds
nop
jno
push
in
mov
jo
jge
inc
scas
sbb
and
sub
ror
push
sti
and
(bad)
adc
inc
inc
push
jle
xchg
mov
mov
push
adc
and
das
lea
cli
mov
and
movs
test
pop
jl
pop
jns
cmp
mov
adc
lock
and
test
or
ins
in
and
fcmovne
jp
(bad)
movs
xchg
xor
and
xchg
mov
sbb
inc
mov
dec
mov
leave
xchg
and
xor
jae
addr16
xor
push
popf
lods
scas
pop
aam
and
xchg
ror
mov
in
pop
push
cmp
daa
cmp
mov
clc
mov
jl
in
pop
mov
ret
inc
mov
sbb
jl
sub
push
iret
mov
add
pop
cmp
test
inc
jmp
sbb
sub
add
call
ja
loope
movs
jb
imul
mov
test
mov
sbb
and
addr16
sbb
jp
mov
imul
cmc
(bad)
jecxz
inc
sub
popf
xchg
cmp
adc
xor
push
xor
or
aaa
out
push
mov
ja
(bad)
ficom
pop
and
inc
mov
mov
mov
aad
cmc
out
dec
push
movs
cld
in
mov
mov
sahf
jle
repz
retf
popa
mov
push
jb
mov
imul
pop
stos
fwait
mov
dec
sub
adc
dec
mov
sti
into
pop
ins
std
xor
mov
(bad)
adc
xchg
adc
lods
sbb
sbb
imul
xor
fisttp
and
(bad)
iret
sub
mov
ss
and
cs
call
fidiv
test
push
mov
fdiv
(bad)
or
imul
add
out
sub
add
cdq
mov
mov
(bad)
push
icebp
ds
jo
je
retf
mov
add
dec
sti
ja
mov
xor
and
push
bound
xor
cli
les
ror
lods
stos
push
fsub
sbb
pop
cmps
ins
sbb
push
push
jae
inc
jmp
shr
rcl
push
ret
(bad)
mov
mov
call
xchg
repz
inc
push
add
jno
arpl
mov
dec
cdq
xor
repnz
mov
inc
in
sbb
test
fnstsw
pusha
mov
dec
adc
mov
cli
loop
and
inc
in
nop
arpl
cli
mov
xchg
ror
imul
or
fadd
mov
leave
daa
mov
data16
add
pop
pop
(bad)
in
je
fmul
outs
or
in
mov
pop
test
pop
jnp
test
pop
fld
data16
push
add
xor
lods
jae
jp
xchg
or
xchg
iret
scas
ss
movlps
repz
push
jecxz
daa
ficomp
jecxz
js
ret
lahf
and
cmp
cmp
arpl
sub
and
div
(bad)
pop
push
push
aad
jo
xlat
push
push
movs
rcl
push
sub
and
sub
in
std
ins
ret
in
pop
popf
cmp
(bad)
push
hlt
or
in
sbb
xor
and
dec
js
es
in
in
xor
sub
icebp
sub
sub
stos
cmps
in
inc
fld
xchg
stc
mov
xchg
xor
nop
mov
sub
(bad)
mov
stos
add
adc
lds
cmp
aam
push
inc
movs
rep
repz
mov
mov
fdivrp
bound
and
mov
bound
mov
sbb
inc
jle
xlat
or
pop
retf
pop
call
mov
mov
cs
mov
jp
aad
sub
stos
les
out
fnstcw
jo
int
inc
cli
cmc
jmp
or
pushf
or
jmp
add
gs
int3
ds
les
iret
in
cli
push
pop
retf
mov
fnstcw
popf
sbb
ss
(bad)
push
out
fisttp
xchg
test
mov
mov
xor
mov
pusha
pop
in
sub
inc
sub
xchg
or
sub
scas
sub
test
inc
xor
jo
sbb
ins
or
leave
push
mov
dec
inc
enter
int
dec
pusha
int
rcr
ficom
pop
jecxz
stc
stos
sub
cmps
jo
xor
dec
test
and
push
repnz
mov
mov
fisub
mov
push
sub
(bad)
fdecstp
in
in
pop
fs
push
mov
stc
jl
rol
xor
fwait
loopne
or
icebp
add
push
add
or
push
cmp
inc
dec
add
mov
or
pop
lock
push
outs
ss
iret
xchg
stos
(bad)
sar
jmp
dec
test
add
out
lods
in
(bad)
enter
test
push
movs
stos
iret
cld
add
mov
lea
bound
push
lds
(bad)
jge
pop
jg
retf
jecxz
cmp
inc
rol
dec
cmps
pop
adc
fcomip
add
push
mov
xchg
xchg
sub
sub
call
scas
int
mov
or
cdq
jns
js
mov
add
xchg
mov
add
inc
retf
mov
stos
clc
push
mov
sti
test
push
test
add
rcr
shl
or
in
cmps
or
stos
xor
pop
mov
retf
retf
call
and
fbstp
cmp
add
dec
pop
sub
jge
jo
(bad)
jmp
xchg
inc
jne
adc
jmp
inc
lods
push
add
test
xchg
scas
and
fcom
mov
pop
xor
cmps
aaa
xor
cmp
je
mov
movs
mov
ds
dec
outs
xchg
mov
pop
(bad)
shr
mov
ret
stc
lods
dec
cmp
jnp
sbb
add
out
cmp
lea
xchg
iret
clc
mov
pop
inc
leave
xlat
xchg
cmp
addr16
imul
jge
inc
sti
sahf
mov
rol
xor
adc
sub
int
jne
pop
mov
int
jnp
and
test
(bad)
ja
test
add
leave
push
pop
inc
stos
retf
xchg
or
fidivr
int3
loop
aas
aas
mov
sub
and
sbb
into
aam
or
and
ret
leave
inc
cli
mov
and
xor
jmp
push
inc
mov
adc
(bad)
(bad)
leave
frstpm(287
jp
cmp
fsub
out
mov
stos
lea
fcomp
jmp
dec
lods
push
add
mov
or
mov
pop
xor
outs
jp
sub
jl
lea
test
pop
movs
loopne
je
xchg
or
hlt
inc
and
scas
loope
addr16
or
or
arpl
mov
push
dec
test
lods
sub
icebp
mov
jno
les
lock
int
push
push
les
pop
out
cmp
repz
jmp
xor
jnp
in
cld
movs
sub
inc
int3
or
fadd
pop
retf
xlat
(bad)
lods
inc
lds
aad
arpl
lds
int3
stos
dec
aas
lea
sub
aaa
iret
mov
pop
aad
les
aad
or
add
fist
sbb
in
inc
mov
fwait
cmp
nop
fwait
mov
out
dec
lods
lock
mov
cwde
fimul
jae
add
sahf
mov
mov
mov
pop
rcr
xor
test
xchg
fistp
js
pusha
not
xor
ret
dec
push
jo
mov
jmp
xchg
mov
retf
outs
popa
mov
sahf
push
sub
(bad)
xchg
and
dec
adc
sub
mov
call
dec
js
sbb
or
add
fisubr
ins
jbe
loop
push
mov
in
sbb
xchg
pusha
xchg
push
shl
inc
or
addr16
add
push
add
cmp
mov
loop
test
scas
pop
jge
xor
data16
adc
imul
call
ror
(bad)
into
test
enter
(bad)
retf
add
inc
adc
lea
push
push
stos
cmps
outs
fld
popa
push
or
mov
mov
jp
xchg
push
mov
xchg
inc
xor
jo
push
or
rol
mov
movs
push
movs
or
repz
jp
cmps
dec
mov
ins
mov
push
add
call
jge
daa
lock
mov
xchg
push
mov
sbb
jecxz
and
jg
jle
push
inc
push
div
or
stos
int
dec
inc
sub
push
sbb
and
test
(bad)
aad
jg
cs
xchg
js
loopne
xor
jb
xchg
rol
mov
mov
loope
mov
in
xor
mov
sahf
pop
out
in
bound
xchg
xor
mov
retf
add
and
fld
push
rcr
cdq
xchg
sbb
cmp
out
sbb
ins
add
mov
push
add
test
mov
es
stc
dec
xchg
and
mov
call
add
inc
fadd
sub
xor
jo
jbe
jae
imul
inc
pop
lods
push
pop
enter
test
daa
aam
sub
int
bound
jecxz
fwait
sbb
fisttp
sub
sub
push
dec
ds
push
pop
jl
dec
xlat
and
mov
mov
mov
inc
xor
popf
adc
sbb
(bad)
jbe
into
jo
nop
jo
sar
push
sub
repnz
(bad)
test
push
std
push
scas
mov
ret
fnsave
pop
test
mov
(bad)
push
and
xor
call
sub
mov
pop
dec
lods
aam
in
into
lahf
inc
sbb
or
cld
popa
fmulp
dec
mov
push
imul
jb
sbb
arpl
int3
sub
jecxz
inc
add
test
aad
lea
ins
push
or
jo
jb
mov
push
jae
mul
scas
lea
fwait
push
inc
out
xor
(bad)
and
adc
push
sbb
jmp
pop
xor
xor
add
sub
arpl
sub
mov
jae
jo
and
mov
loope
lock
add
mov
pop
and
addr16
clc
retf
call
add
addr16
mov
or
cmp
xor
push
icebp
mov
addr16
call
push
push
int
stc
inc
push
xchg
add
shr
inc
or
xor
pop
pop
dec
test
pop
push
push
sub
sbb
popa
inc
and
lods
dec
scas
xchg
idiv
rol
mov
aam
push
in
ja
mov
ret
inc
ins
sub
push
pop
and
dec
and
test
mov
inc
test
pop
in
jno
cwde
xchg
hlt
jno
pushf
(bad)
fdiv
jge
je
xor
mov
jge
iret
pop
(bad)
loope
inc
(bad)
or
xlat
les
lods
adc
pop
test
jg
bound
xchg
lods
sbb
xor
xchg
cmps
test
cmp
push
sub
mov
jl
lods
repz
adc
inc
dec
sub
retf
mov
loopne
sub
and
mov
bound
bound
cs
jnp
mov
pop
adc
cmps
push
mov
mov
or
cmps
ror
push
sahf
or
xor
jae
out
arpl
je
xor
inc
les
dec
mov
lea
ret
gs
out
push
popf
popa
xor
sub
ins
xor
add
test
enter
popf
cmp
imul
cmp
mov
jge
aas
sbb
xor
(bad)
adc
xor
sub
mov
fstp
push
and
sub
sar
js
aas
(bad)
adc
daa
cmp
movs
xchg
and
dec
mov
mov
ss
push
push
in
dec
xor
and
outs
jmp
mov
inc
xor
push
lds
cmp
in
cmps
dec
or
pop
dec
xor
pop
sbb
adc
sbb
pop
(bad)
lock
out
daa
pop
out
repz
std
lods
imul
pop
fadd
mov
cmps
sbb
into
push
fsubr
cmp
push
arpl
outs
mov
iret
(bad)
loop
test
push
mov
sbb
daa
add
rcr
cmp
retf
(bad)
pop
add
xchg
in
pushf
jecxz
retf
adc
(bad)
pushf
popa
std
xchg
mov
addr16
test
and
fsubr
or
ds
ret
aaa
mov
clc
sub
mov
cwde
ja
cwde
sub
xor
imul
mov
lahf
push
loope
(bad)
cwde
outs
sub
fwait
adc
and
cmps
add
icebp
fstp
mov
xchg
loop
jmp
xchg
mov
(bad)
jmp
scas
test
mov
retf
scas
xchg
cmp
adc
fcomip
cmps
daa
scas
sbb
or
into
lds
(bad)
(bad)
sahf
retf
(bad)
adc
sub
xor
mov
pop
dec
movs
jne
xor
dec
jne
or
js
setne
inc
xor
dec
push
pop
pop
shl
jecxz
mov
adc
out
daa
xor
add
and
fadd
or
jl
lods
in
das
dec
dec
fs
aaa
pop
mov
add
cwde
pop
push
cmc
data16
sub
adc
cmp
dec
add
inc
sbb
jmp
sbb
xchg
fcmovnu
fild
and
dec
mov
ja
and
jmp
push
(bad)
aad
and
pop
mov
lahf
dec
sub
retf
mov
fs
fsubr
dec
adc
fwait
pop
imul
inc
pusha
out
loop
jle
and
data16
dec
retf
mov
or
push
ins
ret
mov
xchg
xchg
call
push
loope
mov
icebp
popa
xchg
call
xchg
pop
loop
adc
jae
dec
pusha
adc
cwde
adc
shl
ss
and
mov
test
jecxz
mov
mov
mov
cmp
addr16
lods
and
inc
pop
cli
jb
add
mov
inc
xchg
and
mov
xchg
push
mov
arpl
mov
or
pop
jno
add
in
sbb
out
mov
in
xor
js
je
(bad)
arpl
loope
gs
mov
sub
std
ret
xor
sbb
adc
repnz
inc
and
mov
xchg
or
pusha
loope
repz
stos
fwait
xor
es
xchg
pop
aam
out
(bad)
nop
and
iret
mov
and
test
rep
or
adc
jg
lods
lock
in
and
outs
mov
in
push
jle
jp
pop
icebp
mov
(bad)
in
sbb
push
mov
mov
pop
aaa
mov
pop
sub
js
dec
hlt
fs
dec
fnclex
mov
xor
mov
xor
add
shr
inc
jno
pop
dec
nop
out
mov
add
test
pop
call
push
dec
sti
mov
push
das
retf
push
push
lods
mov
push
adc
std
in
xchg
pop
imul
pop
push
rcr
jmp
inc
mov
add
movs
pop
mul
mov
mov
pop
popa
gs
lahf
mov
loope
stos
call
gs
nop
std
inc
addr16
call
sbb
jnp
jmp
jecxz
jno
add
out
mov
pop
mov
int
nop
shl
js
or
xor
push
add
es
and
dec
stos
jo
mov
in
pop
mov
(bad)
pop
imul
inc
test
in
mov
cli
iret
add
or
dec
mov
sbb
std
fadd
pusha
fdivr
daa
lock
push
cwde
leave
(bad)
aam
and
loope
les
mov
sti
das
dec
neg
inc
adc
stos
es
dec
fstp
iret
(bad)
int
call
add
movs
loope
inc
pop
adc
mov
(bad)
mov
inc
test
sub
fisub
aam
inc
adc
jb
lods
mov
mov
dec
xchg
dec
ror
aad
adc
jns
sub
js
pop
add
push
inc
mov
and
mov
dec
push
out
inc
inc
or
mov
(bad)
adc
push
cmc
sahf
push
sub
adc
rcl
inc
add
movs
cmps
fcomp
cmp
mov
cdq
test
imul
fimul
cmp
leave
div
mov
std
inc
mov
call
adc
and
add
jne
mov
bound
in
mov
aad
sahf
xchg
push
mov
push
imul
test
je
shl
dec
xor
cld
(bad)
(bad)
or
mov
dec
jp
xor
pop
adc
sbb
xor
xor
test
ins
add
adc
mov
and
(bad)
dec
inc
rcl
lods
xchg
or
cdq
fsub
retf
in
sbb
or
cdq
sub
or
shl
mov
hlt
adc
repz
mov
lds
mov
leave
sbb
hlt
popa
imul
jnp
adc
jmp
cmp
jbe
add
popa
cmp
mov
popf
outs
inc
adc
add
js
pop
and
je
mov
fs
fcom
loope
push
jle
(bad)
fld
pop
dec
mov
mov
mov
cdq
jl
mov
(bad)
mov
dec
(bad)
ins
mov
pop
push
mov
retf
clc
test
adc
ins
xor
mov
iret
xor
mov
sbb
pop
inc
add
pop
cmp
jge
jmp
sbb
fsub
lahf
sar
push
cmp
popa
cmp
hlt
push
jnp
jp
push
rcr
outs
enter
mov
loope
push
scas
retf
or
xor
aas
push
cmp
stos
jmp
xor
outs
call
cmp
xor
and
push
cmps
ins
in
pusha
mov
mov
pop
(bad)
(bad)
mul
mov
add
sbb
ret
xor
cwde
cdq
xor
stc
add
div
pop
jecxz
cmp
cmps
iret
(bad)
arpl
test
in
in
int3
add
push
push
cmp
scas
outs
fmul
inc
cmp
xor
jb
mov
enter
test
fsubr
adc
cdq
lahf
das
imul
and
sub
call
lea
call
sbb
sahf
adc
adc
fbstp
add
dec
popf
loopne
inc
cli
popa
inc
sbb
pop
and
push
cmp
mov
pop
xchg
mov
aaa
(bad)
and
shr
test
lods
aas
inc
jae
pop
ins
inc
cmp
mov
je
pusha
lods
ins
mov
in
cdq
call
dec
add
dec
push
mov
popa
cdq
push
ror
sub
push
(bad)
xor
or
outs
push
dec
(bad)
popf
int
fldcw
sbb
mov
fs
mov
aaa
add
pop
push
pop
jne
push
xor
shl
cmp
xchg
push
fbstp
test
mov
mov
movs
pop
xor
xchg
lds
cmps
arpl
cmp
mov
ret
sbb
jb
les
pop
jbe
xchg
inc
lods
fbld
fcom
mov
in
aas
cmp
ds
or
sub
xchg
iret
xor
xor
xor
paddsw
dec
ds
or
in
jl
arpl
and
ja
dec
mov
aaa
inc
mov
lock
ret
leave
call
data16
add
ins
mov
dec
inc
mov
leave
mov
retf
dec
push
dec
scas
jl
cmp
fdiv
xor
or
adc
icebp
xchg
repz
cwde
je
xchg
jo
aas
sbb
(bad)
pop
lock
ror
jbe
ret
dec
enter
icebp
lods
add
pop
stc
shl
int
rcl
mov
and
mul
stc
jnp
cld
or
cmps
mov
cmp
out
(bad)
fwait
push
shl
push
jle
pop
lds
adc
fdivr
mov
imul
inc
shl
inc
adc
inc
fnsave
psubb
push
movs
out
mov
xchg
mov
mov
cld
loope
in
cmps
mov
sub
add
push
loopne
mov
adc
pop
xchg
cld
push
jmp
ss
pop
sub
mov
lods
pop
adc
pop
adc
sar
cdq
cld
and
test
jle
ret
xchg
or
or
mov
and
push
les
xor
push
add
inc
fdivr
inc
fadd
adc
mov
lods
xor
xor
add
les
ror
aad
pop
and
push
pop
and
xlat
retf
xchg
ret
test
adc
sub
dec
retf
push
add
hlt
mov
ss
and
mov
or
mov
ins
dec
mov
ror
int
jg
out
fbld
cmps
test
push
xchg
sbb
sbb
lods
outs
daa
pop
mov
js
cli
or
gs
cmp
pushf
pop
and
mov
fwait
xor
cld
fdivr
cmp
stos
lods
test
lea
sub
sub
ds
jmp
out
addr16
fmul
mov
repz
xchg
mov
xor
call
pop
mov
jns
arpl
stos
xor
cmp
jnp
mov
add
out
mov
xchg
ja
and
outs
(bad)
fwait
aaa
pop
js
or
ds
loopne
arpl
outs
inc
xor
jp
jecxz
inc
pushf
or
xor
cmc
std
xor
pop
out
add
lock
xchg
cli
xchg
jo
ins
sti
add
push
push
in
ret
mov
sbb
rcr
hlt
and
pop
jecxz
pop
test
cmp
jo
xchg
mov
lods
outs
push
mov
jl
fcmovnbe
in
dec
bswap
sbb
sbb
shr
adc
ins
ret
sbb
aas
pop
fmul
mov
xchg
or
push
add
cdq
sbb
dec
dec
add
cmp
dec
aad
std
mov
xor
cwde
cmps
scas
jne
inc
mov
sbb
aam
fs
lahf
movs
mov
icebp
adc
(bad)
cmp
into
fs
fstp
ins
push
mov
pop
test
pushf
or
adc
jmp
daa
sahf
jmp
shr
cmp
adc
push
and
pop
cmp
jnp
neg
rcl
xlat
mov
sbb
sbb
pcmpeqd
mov
jae
imul
push
aas
jle
test
push
cmp
push
dec
stos
xchg
jle
sub
sub
xlat
cld
cmp
pop
mov
push
cmp
lods
in
cmp
pcmpeqb
js
push
(bad)
repnz
adc
push
gs
test
scas
add
and
cmps
cli
dec
cmps
dec
ds
add
retf
sub
iret
icebp
inc
ins
pop
shr
xor
mov
cli
mov
and
xor
xchg
push
(bad)
cmp
mov
push
movs
in
sub
and
aas
xchg
cmp
adc
mov
dec
push
femms
mov
mov
mov
rcr
mov
scas
jl
les
cmp
xchg
jae
sbb
push
in
adc
out
and
add
xor
test
sub
inc
call
mov
push
es
ja
adc
jge
jl
pop
lock
scas
mov
mov
dec
or
hlt
outs
popa
je
push
stos
jmp
xchg
fcomp
add
cwde
and
test
std
cs
test
and
test
push
cmps
adc
pop
int
dec
imul
std
std
neg
aam
cmp
xchg
ins
ins
js
adc
pop
(bad)
dec
(bad)
xlat
jp
out
cs
mul
adc
add
sub
adc
xor
dec
cdq
xor
add
ja
adc
daa
pushf
mov
clc
pop
mov
jno
nop
pop
mov
in
enter
mov
fadd
lods
inc
jecxz
mov
xchg
adc
pop
fist
cmps
mov
mov
popf
inc
das
lea
and
addr16
test
inc
push
sar
lahf
test
lods
mov
imul
bound
mov
xchg
gs
fld
repz
cmps
fs
ja
fst
xor
xchg
imul
push
cmc
cmps
retf
inc
sbb
add
mov
loopne
stc
or
in
mov
lods
sub
dec
inc
sbb
xor
or
sbb
js
popa
ins
mov
inc
jnp
jb
inc
fdivr
pop
shl
and
sbb
dec
and
sub
and
add
inc
inc
shr
rcr
xor
sub
fist
adc
xchg
scas
popf
push
retf
sbb
cmp
and
cld
inc
pop
dec
rol
icebp
jne
mov
jo
add
sti
jbe
mov
fcomp
enter
out
mov
lods
push
shl
xor
push
sahf
push
mov
adc
or
push
inc
inc
cdq
leave
xchg
loopne
leave
jne
icebp
xchg
sbb
add
push
jp
leave
lahf
shr
aaa
sbb
mov
retf
mov
into
push
cmp
pop
outs
xchg
mov
rol
mov
jmp
hlt
nop
push
push
jp
dec
jo
out
fistp
and
or
xchg
cld
stos
xor
stos
adc
aas
push
pop
jnp
dec
mov
sbb
and
xor
cwde
out
hlt
jo
pop
out
(bad)
jo
mov
pop
inc
(bad)
scas
pop
or
cmp
mov
movs
sbb
mov
sahf
in
cdq
pop
dec
dec
and
adc
mov
jo
es
dec
and
mov
addr16
nop
add
(bad)
in
pop
int
sub
xchg
xlat
lods
in
pop
popa
inc
bound
imul
stos
or
jbe
mov
inc
mov
(bad)
xchg
cli
push
adc
xor
cmps
test
enter
or
es
aam
pop
mov
call
shl
cmp
test
pop
cmc
sti
loopne
and
pop
pop
xchg
cmp
movs
xchg
gs
(bad)
mov
inc
mov
mov
mov
jne
sbb
stc
mov
xor
or
int
pop
(bad)
je
xchg
mov
jle
push
sub
jo
inc
or
xor
sti
scas
jl
xchg
cmp
inc
dec
adc
xchg
frstor
or
add
ins
cmps
int
sbb
adc
inc
std
dec
icebp
pop
in
movs
jne
es
mov
rcr
cmp
aaa
ss
adc
or
xchg
fcmove
push
mov
inc
mov
ins
adc
and
push
shl
mov
xor
rcr
mov
xor
jmp
lahf
adc
inc
dec
iret
sub
jnp
mov
stos
sub
push
cld
pop
jle
jns
hlt
mov
dec
pop
out
push
pop
stos
int3
test
mov
mov
std
mov
movs
mov
pop
jp
(bad)
mov
pop
pop
xchg
fadd
into
sbb
mov
ret
push
enter
dec
sar
and
xchg
jb
fs
inc
clc
movs
repnz
jnp
add
xchg
stc
std
loopne
lock
test
mov
adc
lds
or
and
jl
jo
stos
iret
jo
fdivr
xor
mov
and
stos
popa
movs
movs
loop
outs
adc
xchg
sub
sbb
dec
xchg
jmp
mov
xchg
dec
shl
xor
jns
outs
push
add
cmp
mov
retf
into
retf
(bad)
fcom
hlt
in
dec
pushf
mov
not
dec
push
adc
mov
xchg
aas
test
std
mov
mov
lods
imul
mov
push
pop
enter
sbb
addr16
and
sbb
mov
adc
push
(bad)
sbb
(bad)
sub
cdq
loopne
cwde
cmps
out
retf
imul
xchg
xchg
cmp
xor
add
mov
push
inc
cwde
or
mov
fist
sbb
jne
fisttp
mov
in
inc
sahf
repnz
pop
push
jmp
push
in
fcmovnu
xor
dec
cmp
pop
pushf
int
ja
clc
cmps
arpl
imul
mov
out
dec
(bad)
sbb
or
sbb
or
sub
iret
pop
mov
cmp
adc
dec
xor
dec
iret
push
ror
test
jp
clc
pop
ret
sub
jb
inc
inc
sub
cmc
test
call
push
sub
sbb
ja
mov
ret
enter
xor
jb
test
jo
pop
cmp
(bad)
and
or
stos
and
mov
or
mov
inc
inc
adc
jl
mov
lods
pop
pushf
out
arpl
pop
(bad)
pop
or
sub
enter
sahf
call
outs
cmps
mov
sar
xlat
movs
push
pop
add
cs
add
jns
sbb
movs
or
loopne
pop
fstp
dec
pop
out
pop
fwait
leave
push
neg
loope
pop
out
sbb
fdiv
rcl
test
jb
dec
shr
push
sar
popa
out
hlt
std
or
jl
push
xor
inc
mov
ss
sub
imul
icebp
fisub
cli
dec
xchg
sbb
mov
test
out
inc
jp
ficomp
rol
jne
fisttp
inc
push
mov
xchg
inc
repnz
jp
pop
aaa
cli
mov
adc
ret
push
rol
loop
push
cwde
scas
sub
adc
sub
mov
mov
add
ins
dec
dec
jae
test
mov
imul
jl
das
jo
sub
push
movs
mov
and
sbb
fild
outs
nop
mov
mov
jp
rol
mov
dec
add
sub
and
cmp
cmp
sar
ds
dec
mov
mov
test
in
int3
icebp
popa
call
push
(bad)
mov
dec
dec
mov
push
or
aam
push
das
jo
out
sbb
adc
sbb
mov
pop
and
xor
lods
sub
xchg
sbb
mov
ins
test
pop
xchg
stos
inc
sub
call
(bad)
or
push
xlat
push
mov
lods
jle
lods
adc
mov
push
xor
and
addr16
mov
cld
jbe
jg
pop
sbb
xchg
js
cs
mov
std
outs
xor
loope
mov
mov
inc
mov
xchg
jge
and
shl
mov
xor
mov
jno
or
sar
iret
dec
fwait
popf
outs
lods
fcmovnb
pop
xlat
inc
fstp
aam
cmp
scas
cli
in
push
call
popf
popf
outs
shl
add
movs
or
lock
xchg
jmp
pop
xor
or
addr16
test
js
xchg
cmp
dec
add
mov
sar
push
mov
daa
repnz
adc
pop
mov
lea
add
test
dec
lea
pop
mov
cmp
das
aam
add
push
test
paddq
fistp
pop
mov
test
mul
jno
lods
xor
xchg
dec
rcl
sbb
cwde
mov
cmps
stos
mov
mov
add
xor
outs
retf
dec
(bad)
fadd
jmp
sti
outs
cli
mov
dec
inc
jns
ret
mov
or
jle
mov
(bad)
mov
outs
cmc
cmps
(bad)
lds
and
addr16
dec
pop
push
jg
fnstsw
gs
mov
jmp
js
xchg
push
lds
jae
jge
lock
vpshufhw
aad
xchg
cmps
fcomp
pop
loope
imul
mov
sbb
mov
mov
mov
scas
stc
jae
imul
mov
sbb
ins
sub
jb
push
cmps
mov
mov
stc
bound
iret
mov
pop
jge
xor
cwde
fnstenv
(bad)
test
and
push
pop
ret
ret
std
out
mov
jno
es
cmp
cmp
mov
ja
loopne
sub
push
mov
icebp
or
push
mov
xchg
in
xor
lds
mov
pop
movs
out
adc
xor
adc
pop
(bad)
mov
je
mov
push
test
aaa
mov
jge
outs
jmp
mov
mov
data16
push
fistp
bound
adc
test
sbb
cmp
clc
mov
shl
pop
jl
lds
push
xchg
jns
icebp
dec
mov
mov
inc
push
mov
addr16
pop
mov
adc
and
inc
rcl
xor
mov
or
icebp
cmp
fldcw
mov
adc
scas
dec
ror
xor
clc
inc
and
xlat
or
and
(bad)
fidivr
cld
xor
fdivr
dec
mov
push
jl
or
daa
dec
sbb
fist
sub
repnz
retf
cwde
mov
pusha
xchg
stc
mov
inc
in
pop
inc
ret
jae
lahf
adc
movs
cwde
sbb
ror
xchg
or
add
aam
mov
sub
icebp
cwde
cmp
mov
xchg
neg
mov
sbb
daa
mov
mov
add
les
mov
xchg
mov
cmps
je
loopne
inc
sbb
iret
out
xor
enter
loope
mov
inc
sub
scas
jmp
sbb
in
pop
fcomp
or
inc
mov
sbb
sub
lock
push
popf
mov
push
fwait
aas
mov
sbb
jmp
leave
(bad)
push
push
xor
inc
mov
in
jp
cld
and
jne
fidivr
popa
pusha
aad
bswap
sub
add
lods
(bad)
lods
pop
sub
sti
stc
mov
or
leave
js
push
dec
pop
stos
add
in
pop
enter
push
xchg
mov
iret
sub
mov
mov
push
loopne
hlt
nop
pop
dec
mov
data16
jb
int
sahf
mov
gs
pop
xlat
and
xchg
sbb
cmp
xchg
retf
repnz
and
mov
mov
mov
fcmovbe
xchg
mov
fmul
jecxz
dec
bound
jle
in
mov
adc
mov
rol
and
in
push
mov
push
loop
jbe
les
push
iret
pop
ror
loope
stc
xchg
test
imul
aam
in
dec
mov
mov
rcl
test
inc
adc
push
out
inc
ins
mov
mov
call
or
or
pop
ret
jl
push
push
pop
mov
adc
pusha
push
jge
jno
arpl
bswap
mov
daa
rol
xor
xchg
pop
and
je
inc
or
fwait
adc
adc
inc
call
jmp
or
mov
sti
loopne
call
scas
fld
or
push
jb
popf
push
gs
sub
fiadd
mov
pushf
cwde
clc
xchg
jg
stos
dec
mov
mov
add
cwde
inc
pop
addr16
xchg
(bad)
mov
dec
sub
mov
pop
push
int3
cmp
aad
nop
pop
repz
ds
test
(bad)
into
test
(bad)
push
stc
mov
dec
ins
sti
mov
pop
lods
mov
xor
leave
jne
es
arpl
cmc
xchg
adc
jbe
mov
add
sub
dec
dec
out
les
inc
jb
sub
adc
out
gs
fisttp
dec
pop
pop
int3
xor
shl
and
movs
clc
shr
inc
mov
push
ret
movs
jns
pop
mov
shl
jp
cmp
cdq
stc
sbb
jmp
je
je
mov
(bad)
out
sbb
mov
mov
pop
rol
cld
lods
rcl
dec
xchg
popa
and
adc
lea
inc
cmps
lea
ret
push
test
(bad)
shl
jp
or
(bad)
getsec
xor
into
sti
jae
cmps
aad
imul
and
data16
das
in
(bad)
xor
dec
lahf
jl
xchg
fild
jecxz
mov
popa
enter
pop
cmp
sub
cs
or
sar
test
and
rcl
mov
or
enter
aad
add
mov
leave
and
or
outs
dec
mov
in
int
dec
popa
int3
nop
inc
mov
stc
pop
lods
stc
ins
xchg
pop
test
pop
scas
jo
cmp
cld
xchg
push
xchg
add
mov
inc
sub
sub
rcr
pop
adc
(bad)
or
ins
cwde
push
inc
loopne
jmp
mov
mov
sub
jp
cli
jmp
pop
scas
mov
mov
mov
push
xchg
mov
icebp
add
jnp
pop
and
aas
in
out
rcr
push
sub
in
shl
enter
push
stos
movs
dec
xchg
stc
mov
adc
pop
in
sub
add
push
in
cli
jle
mov
cdq
stos
imul
xchg
fst
fistp
xchg
stos
lds
cmp
cmp
je
cmps
out
mov
or
sub
cmc
xchg
jo
cmp
(bad)
cmp
bswap
bound
push
daa
or
adc
mov
rcr
test
jle
jp
retf
call
push
retf
rol
cmp
in
inc
add
jb
push
jle
cmp
(bad)
push
or
loope
repz
jnp
push
sbb
push
out
shl
jmp
ds
push
push
clc
pop
mov
mov
fwait
cmp
fstp
pushf
hlt
add
sahf
cmp
aaa
cmps
loop
xchg
ds
pop
cmp
sub
dec
int
cmp
into
(bad)
sti
xchg
imul
clc
sbb
cmp
and
hlt
push
mov
xor
adc
and
movs
jp
xchg
and
(bad)
adc
adc
cmp
(bad)
mov
les
push
jecxz
retf
and
cdq
aaa
in
xor
mov
aaa
(bad)
movs
hlt
fimul
push
jmp
and
mov
or
xchg
mov
outs
or
fisub
and
push
mov
lods
std
dec
sahf
bound
mov
push
enter
dec
jbe
mov
fldpi
mov
inc
sub
js
jge
mov
xchg
in
jmp
dec
outs
aad
fidivr
das
fwait
cmp
adc
xchg
(bad)
mov
cmp
xor
ins
(bad)
mov
mov
out
add
cmp
test
iret
fcomp
mov
fwait
mov
xchg
and
fwait
pop
dec
dec
fidiv
(bad)
mov
jmp
jmp
out
dec
ffree
sahf
je
repz
sub
xor
and
adc
fimul
call
mov
mov
xor
retf
dec
stos
stos
ret
cmc
and
(bad)
jecxz
sbb
test
push
or
mov
ret
jnp
(bad)
jecxz
pop
sbb
mov
int
pushf
cmp
sbb
xchg
sti
imul
mov
adc
sub
mov
gs
xor
pushf
ror
gs
adc
lahf
es
js
and
push
imul
xor
js
outs
jbe
(bad)
jecxz
mov
data16
test
cmps
xor
sti
jbe
mov
pop
sub
aaa
add
cli
jno
cdq
inc
jmp
sahf
call
push
mov
push
out
sbb
push
jb
repnz
ror
sbb
sbb
push
and
pushf
stos
icebp
pop
addr16
das
aam
ficom
lds
sub
(bad)
scas
pop
inc
jmp
xchg
pop
pushf
mov
and
(bad)
pop
nop
cmp
mov
xchg
fdivrp
aam
inc
nop
arpl
pop
jae
ret
add
icebp
add
ins
fimul
stos
test
lds
outs
repnz
jmp
mov
in
call
test
jmp
rcr
scas
stos
in
push
retf
aad
icebp
imul
sar
and
pusha
movs
sub
mov
cdq
adc
inc
cmp
and
sbb
retf
scas
xor
movs
or
movs
idiv
adc
xchg
sbb
mov
aas
mov
jmp
daa
(bad)
or
inc
xor
dec
xor
and
jmp
pusha
stos
inc
sahf
pop
dec
dec
push
rcr
pop
xor
sub
mov
mov
fwait
gs
jmp
in
mov
push
xchg
pop
xchg
add
ss
dec
xchg
inc
inc
ins
rcr
fwait
iret
inc
push
int3
fstp
pop
movs
cmc
test
pop
mov
cld
in
bound
sub
inc
adc
xchg
cmp
outs
mov
dec
mov
or
retf
div
sbb
test
xchg
dec
dec
push
div
or
add
sar
(bad)
loope
popf
ja
mov
cs
cmp
mov
in
sbb
lods
and
xor
iret
pop
xchg
jmp
mov
xchg
je
xor
pushf
sub
int
sbb
pop
dec
mov
push
or
fldenv
dec
xchg
xor
jecxz
push
xor
sbb
xor
mov
mov
jno
das
cdq
sub
sbb
inc
loopne
dec
push
mov
call
adc
arpl
pop
push
nop
fdivr
fisubr
pop
lds
push
push
mov
out
jge
pop
arpl
div
xor
iret
les
sbb
sub
sbb
sbb
jle
and
xlat
inc
idiv
aam
enter
sbb
adc
stc
xor
or
add
es
mov
fisttp
sub
sub
(bad)
dec
dec
sbb
and
cmp
sbb
cld
fwait
bound
cmc
stos
sbb
mov
add
mov
nop
add
test
std
mov
jnp
and
retf
adc
mov
xchg
ret
xor
jl
sbb
or
fdiv
xchg
outs
pop
enter
inc
test
pop
push
test
push
movs
int3
outs
outs
retf
loop
scas
popf
mov
imul
movs
clc
aas
mov
je
add
inc
in
mov
mov
xor
shl
cmp
mov
mov
jl
add
or
fidivr
mov
xor
test
add
(bad)
cld
sar
hlt
or
retf
shl
and
aam
cmp
and
pop
xor
jne
lock
pop
xchg
sub
adc
rcl
xor
sahf
shl
rol
pop
add
loopne
jno
mov
or
mov
xor
and
jp
in
ins
cli
stc
test
push
aam
(bad)
push
sti
sub
loop
repz
es
xchg
je
mov
call
cmp
dec
(bad)
clc
retf
push
pop
in
mov
fild
xlat
xchg
stos
pop
adc
jecxz
iret
inc
mov
jbe
mov
iret
stc
(bad)
xor
or
xchg
mov
movs
sub
mov
cmc
and
dec
cmp
mov
mov
test
lods
popf
push
add
and
mov
stc
and
cdq
and
mul
adc
enter
adc
jno
retf
lods
xor
repz
cmc
add
test
fild
inc
scas
pop
pop
shl
aad
sub
push
mov
aad
push
inc
je
push
xchg
jmp
add
push
mov
dec
sub
ficom
xchg
mov
(bad)
inc
cli
call
imul
dec
cld
enter
mov
ins
dec
aas
push
cmc
mov
mov
push
aad
(bad)
jle
mov
and
jmp
pop
dec
xchg
push
ror
in
or
adc
dec
ret
(bad)
ins
cmp
xchg
int3
cmovo
inc
sbb
scas
cmp
out
cmp
mov
(bad)
adc
xchg
adc
xor
fadd
sbb
sub
(bad)
popf
push
mov
aas
addr16
xchg
mov
jp
mov
sub
cmps
pop
shl
xchg
dec
sbb
sti
into
int3
dec
fs
pop
shr
scas
sahf
mov
and
imul
out
test
sub
je
or
xor
pop
mov
mov
retf
xor
fidiv
sahf
mov
or
inc
xchg
jp
lods
sti
loopne
jb
ficom
mov
clc
mov
xlat
in
lahf
mov
ret
sar
loop
stos
push
into
nop
jne
push
adc
xor
movs
scas
out
xchg
and
fcomp
mov
lahf
retf
inc
sub
ret
jp
sub
icebp
or
or
daa
les
sub
enter
push
fwait
and
mov
(bad)
(bad)
sbb
cmp
sti
jbe
dec
das
mov
ins
sub
hlt
jne
popf
mov
xor
jmp
jns
lock
pop
mov
add
test
call
xor
push
mov
lds
dec
xchg
pop
movs
fcomp
jl
add
and
mov
inc
inc
leave
loop
pusha
retf
and
and
cld
cwde
cmc
out
mov
push
xchg
clc
jmp
push
adc
cmp
adc
call
xor
retf
adc
xchg
jbe
aas
in
imul
scas
mov
aas
mov
jl
shr
dec
and
leave
jns
sahf
ror
mov
add
test
cmc
push
and
fmul
ffreep
or
leave
jo
pop
arpl
cwde
getsec
jl
dec
inc
fstp
xchg
loop
inc
xchg
adc
dec
xor
stc
je
adc
sub
mov
push
loopne
cmp
(bad)
std
xor
in
jb
jb
push
push
pop
and
stos
jl
js
jno
mov
mov
ds
pop
repz
je
pop
and
jae
ja
adc
ins
sbb
imul
repz
jns
loop
lods
jp
js
aam
stos
jecxz
pop
popf
rcl
adc
add
push
jbe
xchg
lds
cdq
push
in
psubusb
xchg
cmc
imul
cmps
shl
scas
jae
or
test
rcl
push
sub
and
push
sahf
push
and
and
and
jne
push
cmp
adc
bound
fld
int3
push
pop
movs
repz
hlt
dec
xchg
jle
mov
jl
(bad)
xlat
push
jae
mov
mov
sub
or
mov
iret
and
ficom
mov
rcr
cmp
xchg
dec
pusha
add
cmc
push
sahf
adc
jno
out
not
or
into
in
xor
jnp
sbb
pop
push
test
repnz
pop
imul
sti
div
inc
cld
in
adc
xor
jne
loop
rcl
lods
int3
in
xchg
sbb
movs
leave
cmp
or
dec
mov
shl
mov
push
cmp
(bad)
aas
push
hlt
retf
ror
mov
inc
xchg
pop
jmp
cmps
mov
cmp
dec
mov
add
jbe
dec
mov
ss
push
outs
call
stc
xor
or
lods
enter
and
les
sub
adc
pop
in
jnp
dec
push
or
(bad)
adc
dec
cs
xchg
add
mov
pop
pop
inc
sbb
aam
addr16
push
sub
cli
pop
push
jmp
stos
inc
retf
and
sub
call
mov
repz
adc
fsub
xchg
inc
cmc
jbe
mov
fcomp
(bad)
mov
xchg
leave
popf
popa
or
mov
cmps
test
or
repnz
add
cmps
sahf
stos
sub
xor
nop
lahf
dec
or
imul
(bad)
(bad)
in
mov
pop
shr
in
dec
mov
xchg
movs
outs
cmp
lds
xor
stos
xor
sbb
pop
shl
ja
iret
sub
in
sbb
mov
les
mov
pop
xchg
std
das
ja
inc
pop
ret
daa
and
cmps
pusha
(bad)
sti
hlt
mov
and
icebp
daa
call
popf
mov
inc
xor
mov
mov
jmp
sub
int
push
xchg
push
dec
mov
xor
icebp
cmp
dec
gs
sbb
jno
mov
out
mov
loop
jl
call
aam
jecxz
imul
jecxz
leave
fcmovb
lock
ja
fcom
inc
push
js
sti
test
(bad)
outs
fsub
(bad)
(bad)
cmovo
sub
in
nop
fucomp
lods
push
rol
jbe
pop
retf
xor
lods
pop
or
shl
das
outs
mov
sub
daa
aam
adc
dec
cdq
or
test
xlat
retf
xor
aam
sar
inc
jecxz
std
pop
sbb
loop
adc
lahf
jmp
ja
dec
imul
ds
pop
loop
and
cwde
cmp
aad
and
ror
inc
hlt
pop
mov
and
jg
mov
(bad)
xchg
sbb
pop
out
add
mov
fnstsw
rcl
ret
mov
ja
std
test
repz
push
push
jmp
ins
sahf
pop
dec
xor
push
push
mov
xor
pop
or
push
jmp
jae
daa
into
dec
jbe
adc
mov
inc
fsubr
xchg
adc
ja
cdq
enter
inc
or
and
repnz
adc
pop
ins
push
sub
adc
mov
push
mov
je
push
out
xchg
cs
or
ins
push
lods
adc
fwait
or
jo
sbb
retf
adc
mov
inc
mov
cdq
or
inc
jecxz
mov
sub
daa
enter
cmp
add
push
cmp
or
retf
popa
dec
push
neg
sar
outs
dec
adc
imul
fidivr
jns
push
dec
das
shl
sbb
xor
aad
ret
fisttp
cs
jae
sahf
push
rcl
dec
xchg
jae
lods
jle
jae
lock
scas
cmps
ja
jbe
jmp
pop
mov
neg
xchg
shl
lea
fnsave
test
scas
push
jecxz
jno
jg
out
pop
sub
inc
push
cmps
cmps
pusha
inc
pop
jg
cld
ss
das
(bad)
xor
shr
push
xchg
rcr
ds
leave
outs
sub
cs
outs
ret
gs
and
jns
xor
scas
aas
mov
mov
dec
push
mov
pusha
fs
xchg
and
jl
mov
inc
ins
jne
push
or
(bad)
xor
pop
pop
sbb
pop
sbb
je
push
mov
dec
adc
add
scas
sbb
int
and
test
cmp
call
cmp
or
in
fyl2x
cmp
or
retf
and
pop
pusha
arpl
aas
xor
stos
sbb
int
sbb
gs
ins
(bad)
cmp
pop
aad
mov
dec
xchg
jae
dec
pminsw
push
jae
jge
in
or
adc
jg
neg
mov
add
cli
xchg
mov
imul
adc
aaa
lock
loopne
stos
ins
gs
ficomp
retf
and
cmp
jecxz
mov
cmp
xor
push
add
call
mov
retf
sbb
sub
scas
imul
pop
inc
stos
test
xchg
fadd
loop
or
jbe
inc
cmps
xor
mov
sbb
inc
jmp
pop
(bad)
cli
jecxz
shr
inc
sub
push
clc
mov
mov
call
sub
adc
dec
fistp
xchg
or
mov
inc
cmps
inc
fldcw
call
fcom
das
xchg
xchg
xor
loopne
push
je
jg
push
jl
call
xor
daa
xor
call
test
daa
test
cmps
nop
call
push
jbe
and
and
out
in
and
inc
in
inc
pop
aad
shl
push
outs
fidivr
lahf
pop
pop
(bad)
pop
mov
dec
cmc
loope
mov
cs
arpl
push
imul
cdq
jno
into
mov
mov
cmp
sub
rcr
in
nop
dec
sbb
mov
xchg
ror
add
icebp
jae
das
or
cmps
mov
jge
sbb
mov
sbb
bnd
ins
mov
dec
aad
adc
jnp
test
(bad)
outs
aas
movs
jp
ret
push
adc
ins
shl
jle
cdq
add
call
mov
pop
add
int3
or
pop
test
adc
push
sub
xchg
lods
fild
or
fld
pop
xor
xlat
inc
bound
pop
les
mov
hlt
mov
dec
std
mov
aas
xchg
sbb
imul
mov
adc
hlt
add
loopne
xor
or
mov
mov
in
dec
xor
fisttp
out
xchg
loope
nop
jae
pop
cwde
(bad)
call
imul
ds
push
or
mov
add
mov
push
gs
mov
or
mov
sub
(bad)
stc
call
in
cmp
pop
mov
pop
loopne
push
mov
cmp
pmaxsw
add
jmp
xchg
fstp
cmp
push
sub
outs
movs
xor
inc
mov
sbb
iret
xchg
retf
cmps
loopne
stos
sbb
inc
xor
daa
pop
jbe
fcmovne
xchg
sub
xchg
mov
jno
test
jl
aam
scas
inc
call
cmps
enter
icebp
mov
in
sbb
jns
cmc
repz
xchg
xor
outs
(bad)
mov
nop
dec
and
nop
(bad)
mov
hlt
jp
test
sbb
mov
fst
add
and
shl
lea
movs
inc
in
les
rcl
mov
jnp
shl
sub
xchg
inc
pop
mov
push
xchg
xor
dec
push
or
mov
fsub
inc
adc
push
mov
sbb
xchg
out
pop
add
xchg
pop
adc
repz
mov
bound
vpunpcklwd
mov
loope
test
dec
fdiv
dec
das
(bad)
lea
jmp
pop
std
ret
xor
loopne
push
mov
in
std
xor
(bad)
lds
out
call
outs
and
lods
push
mov
inc
pop
scas
and
aad
loopne
dec
stos
mov
push
adc
dec
add
mov
aaa
sub
mov
pop
inc
out
mov
jg
aas
sbb
or
mov
inc
repz
mul
data16
push
aaa
pop
in
push
test
hlt
dec
xor
fcomp
not
lock
jmp
push
in
xor
(bad)
into
mov
imul
cwde
mov
enter
push
push
fscale
inc
mov
fdiv
repnz
add
int
add
fwait
xor
mov
scas
and
push
mov
pop
xchg
push
push
les
(bad)
cli
pop
data16
jns
jbe
xchg
stc
ja
mov
jecxz
cmc
xor
mov
xchg
jecxz
inc
ret
aaa
or
idiv
inc
cmp
js
out
jbe
push
lahf
jne
sbb
push
xor
dec
pop
adc
xchg
xchg
nop
mov
addr16
cld
and
lds
into
and
sub
jmp
sub
cmps
mov
pop
(bad)
retf
push
mov
dec
inc
or
loope
sbb
inc
inc
xchg
mov
cmp
in
ds
jmp
xchg
xchg
movs
sub
ret
mov
jmp
jbe
leave
push
bound
dec
(bad)
ja
jbe
js
fild
mov
shr
jg
mov
jp
push
jns
mov
pop
or
cmc
popa
sbb
imul
fcomp
retf
int
push
cmp
(bad)
sti
pop
shl
add
addr16
add
data16
sbb
es
stos
sbb
adc
imul
imul
xchg
mov
mov
pop
jb
imul
daa
and
mov
xchg
mov
xchg
and
bound
lods
pushw
dec
sbb
hlt
pop
and
cs
mov
lahf
pop
ret
mov
adc
pop
outs
sbb
iret
bound
adc
rcr
mov
xchg
(bad)
sub
ficomp
js
dec
inc
clc
dec
and
in
dec
test
xchg
call
leave
in
or
cmp
mov
jg
adc
test
mov
jmp
xchg
and
mov
cmp
adc
jne
xchg
(bad)
clc
fst
dec
out
loope
mov
pop
jecxz
stos
pop
inc
mov
mov
out
cmps
int
nop
lock
dec
(bad)
aaa
(bad)
scas
mov
xchg
adc
fcmovbe
add
mov
(bad)
(bad)
shl
mov
pop
adc
ss
xor
ret
inc
cmp
cwde
mov
mov
mov
aaa
mov
iret
(bad)
out
in
repz
mov
push
jb
ds
add
aad
aas
xchg
inc
in
pop
mov
sub
jns
jno
fistp
dec
movs
(bad)
inc
popf
mov
adc
stos
mul
xor
or
lahf
test
jmp
hlt
sahf
sbb
add
xchg
pop
out
cmp
(bad)
jmp
les
fcomp
ret
inc
dec
ds
or
movs
lods
fnstsw
or
adc
test
cmp
xchg
jl
mov
xor
js
add
push
lods
call
and
xchg
jmp
in
xchg
imul
mov
mov
imul
int
sbb
addr16
data16
test
or
or
mov
sbb
ins
outs
inc
or
(bad)
adc
mov
sub
icebp
shr
int3
dec
loopne
in
sbb
jnp
jno
out
jle
cmp
fsubr
sar
jbe
pop
sub
cld
lods
in
and
inc
pop
inc
mov
inc
inc
sbb
fnsave
call
push
jno
jo
and
push
mov
div
push
lahf
jbe
or
scas
jns
pop
popf
rcr
or
dec
scas
mov
popa
scas
in
(bad)
(bad)
add
mov
xor
pusha
add
pop
lock
int
sub
adc
mov
cmps
dec
inc
test
adc
popa
sahf
into
or
xor
mov
(bad)
ins
js
or
int
jcxz
and
jge
sbb
mov
adc
cmp
xor
fild
add
push
mov
cmp
mov
cmp
mov
je
or
xchg
out
mov
push
adc
scas
xchg
push
dec
rol
int
mov
popf
sbb
es
cmp
shr
xchg
xchg
mov
pop
adc
and
out
test
fstp
arpl
int3
mov
dec
jmp
xchg
adc
sub
jno
xor
test
jmp
or
outs
scas
les
cmp
push
mov
sahf
(bad)
jg
popf
data16
popf
repz
jmp
test
repnz
xchg
movs
or
push
rcr
dec
push
fldl2e
rol
clc
jg
xlat
cli
inc
push
movs
xor
xchg
shl
adc
fsubp
retf
sbb
test
mov
in
xchg
cwde
adc
fsubrp
int
ins
or
adc
neg
aas
in
into
das
pop
adc
add
in
inc
ja
push
add
add
jg
mov
stos
dec
push
sub
sbb
loopne
fcomp
call
mov
pop
mov
loope
jns
test
push
fild
scas
add
das
cmp
lods
or
outs
nop
arpl
or
ficom
or
pop
dec
leave
pop
add
dec
xor
fistp
stc
(bad)
xor
aad
push
add
(bad)
xor
adc
into
mov
push
and
lds
test
pop
repnz
ds
icebp
imul
jl
rol
dec
dec
pop
loopne
cmp
je
inc
pop
sub
fwait
mov
repz
stos
mov
ret
int3
mov
jp
jns
inc
stos
sub
mov
jmp
das
push
out
xchg
popa
add
das
iret
and
inc
inc
mov
and
imul
cdq
rol
sbb
loop
inc
xor
jmp
leave
sbb
sub
mov
ret
xchg
cdq
repz
or
pop
sti
push
add
sub
add
push
ret
sub
push
test
leave
cmp
mov
push
out
inc
mov
add
fiadd
scas
pushf
nop
adc
movs
dec
sbb
xor
aaa
mov
ins
add
sbb
sbb
icebp
int3
loopne
adc
cmps
xor
xchg
movs
sbb
inc
push
stos
dec
xor
xchg
cmc
outs
iret
pop
stos
loopne
pop
(bad)
cmp
dec
aam
pop
aam
repnz
mov
inc
inc
ror
out
popa
into
push
push
repz
lds
xchg
test
jbe
cmp
mov
pop
cmp
movs
test
dec
jbe
popa
mov
leave
dec
cs
add
jnp
repnz
and
mov
xor
int3
cmps
clc
mov
push
dec
sbb
push
xchg
fsub
pop
push
push
bnd
jns
loope
mov
fild
int3
adc
xchg
sbb
retf
test
rdtsc
shr
in
sub
aam
dec
imul
dec
retf
std
test
sub
es
jmp
iret
xor
jle
dec
(bad)
and
pop
test
sbb
lods
cmp
xchg
outs
xchg
sbb
jecxz
test
inc
jmp
neg
xlat
adc
jmp
xor
and
sbb
xor
sbb
int3
cmp
test
into
jmp
mov
jp
enter
adc
aam
aad
adc
popf
pop
and
(bad)
rcr
mov
clc
les
push
xchg
movs
push
xchg
(bad)
cmps
mov
and
push
arpl
dec
adc
or
ret
mov
mov
push
cmp
rol
xor
mov
(bad)
inc
test
dec
bound
cmp
push
lds
in
cmc
xor
ret
and
xor
mov
add
es
or
jb
stos
daa
jl
into
int3
inc
inc
add
addr16
dec
fbld
push
popf
push
sub
ds
or
cmp
pop
dec
out
push
mov
xchg
inc
dec
add
adc
jae
test
lds
cmp
inc
ins
sbb
inc
mov
mov
mov
mov
sti
and
inc
repz
dec
or
rol
out
sub
sti
sbb
stos
scas
push
or
cwde
(bad)
pop
xor
scas
inc
xor
enter
fsubr
jp
jge
aad
shl
test
mov
mov
xchg
sbb
(bad)
and
push
int3
sub
(bad)
jge
dec
jbe
aas
cs
mov
loopne
rol
mov
in
add
aaa
rol
inc
xchg
jne
fstp
mov
imul
mov
out
leave
mov
xchg
sbb
shl
sbb
mov
int3
mov
mov
mov
mov
repz
sub
or
fwait
test
xchg
sbb
jae
in
jmp
xchg
loope
inc
aad
xor
cmp
fs
adc
mov
sub
pop
scas
xchg
inc
dec
sbb
clc
adc
shl
pop
ins
mov
out
es
inc
adc
sbb
pop
cli
adc
cmp
jno
xor
sbb
xor
aam
dec
inc
lods
xor
inc
data16
pushf
ss
cmp
test
addr16
aas
test
test
jl
push
add
add
xchg
push
in
add
sbb
aad
cld
out
or
pop
xchg
jge
pop
sub
aaa
fisubr
dec
ret
test
dec
fwait
adc
movs
(bad)
scas
mov
stos
push
dec
fwait
enter
or
and
outs
pop
xor
xor
cmp
mov
popf
mov
xor
add
fdivr
(bad)
sbb
mov
int
movs
outs
jp
jne
and
push
or
pop
fisub
adc
pushf
mov
sub
dec
repnz
and
call
ins
data16
xchg
fimul
test
mov
xor
pop
sub
mov
push
bound
xor
dec
push
add
call
push
lods
inc
sub
mov
add
and
jmp
or
clc
in
inc
xchg
dec
cdq
pop
xchg
pop
cmp
nop
rcl
call
xlat
jle
arpl
dec
jle
push
popa
les
pop
loop
rcl
pusha
popa
add
and
push
mul
rcr
sbb
add
scas
pop
and
in
push
mov
mov
je
mov
sub
xchg
adc
loope
mov
cmp
adc
lea
fsubr
mov
inc
loop
inc
ins
in
sbb
shl
call
cmc
pop
movs
jge
test
cmc
ins
repnz
xchg
or
pop
sbb
add
inc
test
in
sbb
push
inc
xor
and
pop
popa
mov
mov
hlt
pop
jmp
shr
test
and
or
mov
push
cmp
mov
xor
dec
(bad)
call
repnz
cmp
mov
fwait
pop
shr
mov
adc
(bad)
repz
fs
push
aad
cmps
(bad)
or
xor
in
mov
add
(bad)
sbb
xor
imul
in
test
adc
xor
jb
sbb
or
lgs
sbb
cwde
inc
retf
clc
lahf
leave
adc
jno
ins
in
cld
test
dec
or
xor
cmps
ins
pop
test
jecxz
mov
inc
push
mov
mov
xchg
js
push
jno
loop
int
xchg
jb
ret
pop
das
push
in
xchg
push
xor
shr
jecxz
xchg
or
sub
retf
and
aas
mov
jns
std
stos
outs
shl
inc
xchg
mov
test
pushf
dec
sub
ror
mov
stc
mov
loopne
clc
cwde
aad
inc
push
jp
retf
(bad)
jecxz
xlat
in
fwait
scas
in
imul
or
push
or
daa
or
adc
mov
sbb
xchg
add
cmc
push
ss
jnp
adc
ja
(bad)
cmc
or
and
and
sbb
push
jmp
ins
outs
mov
or
outs
pop
mov
ins
test
ds
(bad)
adc
mov
mov
lods
mov
or
loop
inc
inc
aad
mov
ror
mov
cwde
es
aaa
mov
pop
cmp
mov
cmp
repnz
sub
fld
call
mov
and
dec
push
mov
imul
pushf
rcr
and
(bad)
pop
aad
(bad)
mov
jmp
test
xchg
adc
cmp
dec
add
inc
xchg
hlt
test
jne
mov
cmp
dec
(bad)
sbb
inc
sub
sbb
dec
xor
add
daa
mov
or
cmc
push
lods
mov
cmp
pop
mov
int
imul
pop
lods
fcomp
(bad)
jae
inc
loop
in
in
mov
push
adc
cli
push
pop
sub
outs
mov
and
mov
repnz
pop
mov
mov
cld
xor
test
daa
and
jmp
add
shl
sar
mov
mov
(bad)
call
aam
dec
ret
pop
xor
dec
iret
jmp
and
mov
mov
inc
add
mov
imul
add
sbb
dec
int3
jg
mov
je
xchg
inc
fild
add
adc
push
(bad)
or
add
(bad)
int
mov
jno
jmp
adc
jno
mov
hlt
xlat
fdivr
loope
dec
leave
xchg
cld
pop
lds
aas
adc
cmps
inc
push
add
xor
(bad)
lds
mov
adc
mov
outs
inc
movs
rcl
adc
rcr
push
rcl
call
mul
sar
fcomp
inc
xchg
cmps
mov
dec
push
ffree
jae
push
inc
add
mov
into
push
add
add
icebp
xor
test
and
mov
inc
fld
pop
pusha
jp
jae
or
add
out
ffree
mov
cli
jb
repnz
test
bound
repz
dec
sbb
xchg
mov
mov
cmps
test
inc
inc
(bad)
fmul
popw
and
xchg
adc
or
sub
retf
xlat
movs
sar
leave
mov
inc
leave
in
inc
mov
stos
add
mov
dec
clc
sti
popa
push
repz
ja
call
mov
adc
mov
sbb
lea
or
jmp
pop
cmc
mov
movs
xor
les
sub
mov
scas
xchg
dec
fs
(bad)
inc
lods
xlat
mov
stc
mov
cdq
xor
out
int3
aaa
or
cmc
push
lds
inc
mov
fwait
xor
jae
lock
sbb
cmp
out
xlat
in
sub
out
pop
inc
(bad)
stos
mov
mov
cmp
aas
mov
in
pop
repnz
(bad)
loopne
aaa
fild
mov
push
scas
test
sbb
dec
(bad)
lahf
retf
sbb
jo
xchg
jae
das
push
inc
repnz
(bad)
push
mov
cmp
ins
in
repz
into
mov
test
fidiv
adc
mov
jns
adc
and
sbb
jg
mov
jb
aas
cmp
or
add
retf
fneni(8087
mov
inc
shl
add
sbb
ud0
jne
in
mov
push
push
ror
or
loope
push
cmp
mov
sbb
imul
sub
cmps
iret
inc
rcl
cmp
mov
jbe
imul
mov
push
shr
cmp
inc
pop
sub
jb
popa
add
xor
js
popf
cmp
adc
xor
adc
pop
dec
xlat
loope
add
ret
in
in
lods
pop
(bad)
push
daa
jle
not
mov
popf
mov
punpckhbw
pop
sub
iret
add
outs
repnz
ss
mov
mov
test
out
sbb
hlt
int
movs
add
test
pusha
inc
imul
inc
push
mov
je
mov
hlt
pop
push
(bad)
leave
jmp
pop
imul
aam
mov
push
jno
call
pop
xchg
inc
ja
fdiv
xchg
dec
test
inc
mov
jle
les
cmp
mov
mov
fwait
ins
inc
repz
js
test
jno
loop
ds
mov
and
mov
pop
mov
out
cmps
jmp
push
int3
lds
or
test
push
add
fadd
jo
js
push
fwait
movs
sbb
mov
stos
loopne
dec
or
int
and
jmp
test
imul
dec
jo
adc
clc
retf
aam
xchg
inc
cmc
sbb
push
pop
xor
push
xor
mov
pextrw
scas
mov
nop
dec
jle
out
ret
push
popf
lods
lea
into
in
ins
ret
dec
in
scas
push
sub
les
rcl
xor
shl
sar
fwait
cmp
test
push
int3
jmp
adc
or
retf
mov
das
sub
jae
jecxz
adc
cmp
je
js
sub
div
mov
pushf
cli
push
mov
pop
mov
jmp
test
adc
dec
clc
inc
imul
ror
das
sub
sbb
sub
push
sahf
push
ins
not
adc
jae
mov
bound
push
cmp
dec
mov
shl
xor
pop
push
or
jecxz
add
imul
inc
push
(bad)
mov
ss
sub
push
fcom
push
js
cmp
pop
aaa
call
idiv
cmc
pop
mov
outs
xchg
cli
enter
pop
pop
into
fwait
jl
test
nop
mov
xor
pop
pushf
xchg
add
inc
push
add
jmp
add
into
stos
push
sub
sbb
jne
mov
and
mov
pop
movs
cdq
or
and
out
fxch
mov
xlat
fwait
cld
popa
movs
addr16
jo
repnz
jmp
aad
cmp
mov
pop
push
and
mov
mov
cmc
fdivr
xor
in
in
hlt
xchg
sub
mov
push
retf
sti
add
xor
sbb
cmp
mov
cs
sub
int
sbb
test
rcr
ret
mov
jb
in
adc
dec
or
retf
jmp
shl
mov
or
repz
out
xchg
hlt
sti
sub
and
fnstcw
loopne
mov
mov
sub
int
inc
cwde
aam
dec
mov
leave
movs
arpl
adc
mov
cli
dec
mov
lods
lods
and
test
cmps
sub
jbe
(bad)
or
cmp
stos
push
cs
rcr
mov
pop
sub
ss
popa
retf
cmps
es
push
push
add
arpl
xor
stos
out
and
cmps
xchg
jp
scas
push
les
ror
jo
in
das
sub
gs
adc
mov
movaps
lds
cli
ss
dec
push
scas
mov
ret
mov
cmp
add
jg
test
pop
stos
and
mov
mov
lods
mov
mov
mov
lock
icebp
jno
jo
dec
(bad)
dec
clc
in
add
ja
sbb
and
mov
push
mov
test
xchg
sbb
daa
push
mov
ss
outs
fisttp
add
and
(bad)
cdq
inc
je
movs
mov
rcr
movs
jp
pop
fwait
mov
push
in
adc
adc
mov
rol
mov
dec
xor
adc
(bad)
out
jno
scas
pop
sahf
aaa
mov
adc
mov
pop
arpl
fwait
and
dec
adc
(bad)
and
dec
fwait
sub
int3
imul
jle
leave
cmp
add
xchg
push
jge
dec
and
xchg
in
xchg
and
and
in
bound
pop
xlat
(bad)
scas
fcmovnb
push
in
vmovups
ror
push
ret
xor
add
mov
loopne
loope
push
inc
sbb
lods
inc
cmp
call
pusha
and
and
adc
aad
xchg
or
icebp
arpl
jne
std
cmp
mov
xchg
or
xor
mov
cld
adc
sub
mov
sub
inc
enter
push
sub
les
cmp
cmp
jmp
mov
sub
xlat
(bad)
and
add
dec
sub
ss
inc
fdivr
call
push
cmp
lods
(bad)
fcmovb
push
iret
dec
push
mov
test
(bad)
fwait
adc
repz
ds
push
mov
inc
sub
mov
jae
pop
mov
inc
outs
into
icebp
xlat
in
add
imul
add
add
dec
(bad)
cmp
data16
or
push
add
cmp
shl
sbb
push
fbld
add
js
pusha
xchg
push
mov
dec
or
popf
adc
or
and
mov
adc
aas
jmp
jb
push
int
scas
pop
push
mov
sbb
or
dec
sub
mov
lods
ins
cmp
add
dec
pop
jne
je
(bad)
shl
add
and
das
xchg
add
xchg
lock
mov
mov
test
ins
fsubr
stc
xchg
sbb
pop
call
jnp
xor
xor
pop
in
out
pop
out
sub
pushf
mov
xor
mov
dec
imul
in
jge
pop
jne
and
(bad)
nop
jmp
xchg
adc
std
sbb
std
in
mov
stos
stc
mov
mov
movs
jge
push
repz
push
pushf
mov
mov
and
cmp
inc
mov
adc
inc
out
jge
cmp
mov
shr
scas
mov
ud0
pop
dec
in
cld
aas
(bad)
jmp
mov
mov
adc
bnd
in
cmps
int
jl
mov
pop
sbb
jns
xchg
pop
shl
xor
out
cmp
mov
add
sbb
ret
sub
xor
adc
arpl
std
mov
test
shr
shr
hlt
mov
addr16
jne
adc
lock
sub
jo
inc
pop
addr16
stos
sub
call
add
push
push
cmp
adc
rol
arpl
addr16
pop
aaa
mov
inc
mov
pop
ins
stc
lds
pop
mov
mov
cmp
xchg
jne
xchg
and
jns
push
adc
pusha
push
jecxz
mov
pop
out
lds
add
rcl
hlt
loope
or
mov
in
cs
lea
scas
mov
js
push
sub
jmp
adc
dec
shl
lods
mov
sbb
call
gs
dec
inc
cmps
or
and
lock
jp
mov
pushf
scas
stos
and
and
addr16
fild
shl
jl
popf
cmp
fistp
mov
jg
and
stos
ss
or
jae
dec
mov
pop
loope
inc
rcl
mov
shl
jae
add
and
pushw
push
mov
call
shl
bound
mov
aaa
aad
cmps
add
pop
sub
stc
scas
(bad)
je
out
ret
out
ds
dec
xchg
xchg
std
aas
xchg
fwait
add
xor
cmp
inc
(bad)
jge
jae
jb
pop
push
push
lock
std
in
push
mov
enter
pusha
repz
or
les
cmp
pop
jo
xchg
xor
sub
push
add
add
push
push
mov
not
ret
push
shl
mov
pushf
dec
push
xlat
loop
jno
out
mov
out
adc
cmp
idiv
aas
clc
sub
cmc
jnp
or
stos
(bad)
jmp
sbb
mov
int
add
ror
dec
lahf
jp
icebp
data16
lahf
push
or
and
out
adc
out
inc
sti
scas
std
jbe
mov
addr16
jl
mov
mov
cmps
scas
pop
jmp
bound
add
pop
sbb
arpl
xlat
test
mov
movs
cld
and
xor
enter
xchg
xchg
ret
cld
das
jbe
(bad)
(bad)
in
gs
leave
jge
xor
pop
pop
sub
test
pop
int
lods
vmwrite
or
addr16
adc
in
fsubr
or
shl
jle
mov
out
fmul
fadd
pushf
movs
jb
jae
pop
push
popa
lods
cmps
push
cli
mov
jb
pop
in
jae
sbb
aad
ins
xchg
pop
sbb
mov
outs
das
dec
xchg
in
pop
jnp
xchg
mov
pusha
add
and
cmps
clc
mov
out
jecxz
gs
stos
push
cmp
cmp
inc
xchg
jne
and
nop
xor
mov
fwait
jp
jecxz
in
cdq
xchg
(bad)
cli
jmp
iret
es
and
test
icebp
xor
pop
out
mov
or
mov
push
je
out
push
sub
fldenv
jmp
fwait
test
pop
popf
add
(bad)
repz
adc
hlt
adc
jns
lods
sub
pop
in
repz
xchg
(bad)
xor
jecxz
sub
sti
mov
push
out
dec
pop
aas
jbe
sub
retf
ss
popf
cmp
inc
add
mov
cdq
adc
dec
cmps
dec
xor
mov
jp
xor
shl
popa
sbb
pusha
mov
cmc
je
dec
(bad)
sbb
in
outs
cmp
mov
call
and
daa
cmp
add
pop
add
lea
imul
pop
xor
jne
mov
addr16
cmp
mov
mov
dec
nop
and
stc
movs
int3
and
jo
xor
dec
jb
sub
push
scas
int
pop
shl
outs
mov
lods
adc
mov
test
push
stos
mov
jmp
push
aas
test
hlt
mov
adc
call
push
(bad)
add
inc
adc
sbb
jbe
out
lods
mov
push
or
dec
test
scas
mov
(bad)
sbb
jmp
jge
bound
mov
xlat
pop
jno
inc
(bad)
push
dec
in
ss
aam
mov
fnsave
mov
sub
cmp
push
add
or
test
dec
mov
in
sti
scas
nop
mov
xor
jo
dec
jbe
mov
ins
adc
aaa
sub
fsubr
out
mov
mov
sub
mov
mov
ror
sbb
and
push
and
xchg
fisttp
pop
arpl
cli
not
sub
ins
and
jg
add
xchg
mov
arpl
leave
mov
cs
mov
movs
and
pop
add
outs
mov
xchg
sbb
pop
pop
adc
lods
sub
dec
push
shl
int3
inc
aam
mov
loope
ror
push
in
xor
mov
mov
push
cwde
scas
pop
jbe
push
add
xor
iret
inc
dec
rcr
add
jl
push
mov
mov
fisub
push
fsubr
sbb
in
and
(bad)
imul
push
pop
in
out
push
sbb
fsubr
int3
outs
push
call
push
xor
mov
dec
mov
and
jae
sbb
push
cmps
mov
out
sub
call
cmp
push
retf
call
loope
xlat
xor
xor
fimul
imul
push
mov
add
or
ins
leave
and
aad
cmp
cwde
lock
pop
adc
jecxz
ss
push
ficomp
enter
in
xor
fidiv
and
mov
call
jg
repz
je
mov
fisub
mov
add
mov
(bad)
jmp
jmp
pusha
dec
sbb
cmps
add
pop
add
je
push
jbe
int
jg
outs
stc
cmps
adc
rcr
scas
dec
xor
in
mov
repz
rcl
gs
mov
stos
cmp
push
out
cld
pop
stos
pop
sbb
popf
adc
into
aas
add
xor
mov
jle
inc
idiv
sub
and
in
test
movs
xchg
mov
sbb
aas
add
neg
fidivr
dec
push
loopne
cwde
xchg
jne
xchg
mov
xor
inc
fbstp
imul
mov
cmps
sbb
hlt
sub
cmps
(bad)
arpl
or
jp
(bad)
push
cmp
adc
sub
fidivr
aas
sub
retf
add
xchg
(bad)
std
cmps
stos
mov
fild
stos
add
sbb
xchg
rol
jp
push
movs
adc
pop
aaa
pop
std
nop
ret
loop
je
repnz
cmp
sub
neg
popf
jge
ret
sub
add
fst
xchg
xor
cmp
cmps
(bad)
fild
mov
mov
pop
lds
int3
(bad)
call
jmp
pop
cmp
bnd
jg
sub
dec
jbe
mov
mov
or
loope
xor
mov
push
mov
(bad)
jnp
fs
inc
inc
push
pop
dec
popf
rcr
pop
xchg
mov
inc
es
push
jno
ins
sbb
or
(bad)
push
sub
jecxz
pop
fisub
(bad)
xor
jo
add
aam
mov
stos
cmc
pop
pop
xchg
cwde
sti
inc
mov
adc
ret
and
cmp
ret
sbb
jnp
ret
mov
cmp
jp
stos
arpl
or
jge
inc
push
mov
aas
and
jl
outs
mov
icebp
xlat
xchg
cli
mov
out
and
test
push
pop
in
in
shr
stc
retf
sbb
imul
dec
pop
into
mov
jno
dec
jmp
adc
ret
xor
dec
jb
add
sbb
out
mov
das
mov
mov
aaa
inc
mov
movs
shl
aas
test
sar
adc
das
jb
xor
add
jle
lahf
cmp
and
nop
(bad)
cmp
rcr
pop
xchg
jo
sbb
sub
lds
inc
fdiv
enter
(bad)
mov
push
cs
add
xor
mov
idiv
mov
out
pusha
xor
pop
loop
gs
inc
cs
pop
push
icebp
fmul
or
jns
cmp
aam
daa
mov
jo
dec
push
into
and
push
mov
cmp
daa
mov
into
cmc
pop
sahf
or
rcl
les
les
adc
cmp
pop
lock
pushf
test
test
pushf
and
sti
mov
imul
packsswb
adc
xor
sbb
mov
mov
in
mov
mov
xor
out
cmps
sbb
or
ret
sub
push
sbb
dec
(bad)
cmp
fstp
push
ins
cwde
rsqrtps
pop
adc
add
inc
call
push
stos
(bad)
std
ret
and
pop
sahf
cmps
mov
(bad)
push
mov
pop
or
mov
xchg
test
xchg
lods
test
cmps
fmul
imul
push
add
dec
fs
or
or
mov
fisubr
mov
dec
add
ja
dec
repnz
sbb
mov
cli
arpl
loope
cs
mov
inc
xchg
outs
sti
cwde
(bad)
outs
pop
and
ja
mov
sub
fild
std
iret
lods
add
js
mov
rcl
js
add
repnz
dec
in
jae
mov
xor
push
sbb
rcl
mov
sub
arpl
(bad)
ins
retf
(bad)
out
fisttp
jno
add
push
pop
push
call
add
push
retf
aam
ds
dec
stos
mov
leave
pop
cld
and
in
inc
mov
pop
mov
or
and
std
push
repz
outs
xchg
scas
xor
test
repz
mov
and
retf
cmp
(bad)
cli
push
cmp
lods
xor
jp
pop
movs
daa
jmp
xchg
sahf
dec
sbb
xchg
xlat
sbb
(bad)
gs
pop
push
addr16
mov
xchg
sub
push
ss
fsubp
fsubp
mov
hlt
imul
(bad)
cmps
pusha
sti
xchg
das
test
or
inc
inc
test
fadd
dec
das
mov
icebp
jno
mov
mov
jns
lods
mov
cld
loope
outs
jns
lods
cmp
test
mov
pop
cmp
mov
fist
dec
outs
into
sbb
scas
test
sbb
fdiv
pushf
mov
sbb
adc
mov
stc
cli
or
push
std
xor
or
ins
repz
popa
push
jmp
or
push
jnp
div
pushf
data16
sub
sub
push
adc
fld
sbb
xor
xor
lock
leave
push
cmc
imul
in
inc
ja
je
mov
cmp
fisttp
stos
mov
mov
stos
inc
inc
mov
cld
xchg
(bad)
(bad)
pusha
push
cmps
pop
add
cmp
mov
and
aas
test
push
mov
push
xchg
mov
iret
sbb
dec
dec
jp
mov
stos
loope
jg
mov
cmp
and
or
jnp
jb
icebp
hlt
fs
dec
inc
fs
(bad)
out
ins
hlt
aad
xchg
dec
data16
fsub
sar
hlt
sub
pop
jbe
push
clc
sbb
pop
inc
aad
popf
fist
xchg
add
mov
mov
mov
pusha
imul
cmc
add
sbb
rcr
dec
data16
clc
mov
pop
dec
jl
or
mov
push
pusha
les
mov
and
xchg
push
mov
(bad)
rcl
cmp
adc
inc
aas
in
cmp
sub
push
(bad)
hlt
jno
(bad)
dec
fild
xor
outs
jp
or
or
xor
inc
test
dec
pop
aad
js
scas
stc
sbb
out
mov
xchg
cmp
sbb
ins
into
pop
jb
mov
and
test
xor
push
pop
adc
dec
into
xlat
repnz
shl
mov
pop
pushf
cmps
(bad)
mov
inc
xor
mov
(bad)
(bad)
mov
(bad)
jne
aaa
popf
adc
add
adc
(bad)
adc
pop
pop
out
jb
pop
ret
js
lds
lods
push
cmp
ds
adc
pop
push
jle
inc
mov
push
out
stc
sahf
movs
adc
pxor
jnp
mov
hlt
out
ret
loope
push
stos
inc
pop
jecxz
mov
loopne
pop
push
scas
dec
scas
(bad)
(bad)
mov
add
adc
pop
dec
aaa
pop
xchg
adc
jae
in
xchg
mov
adc
pop
adc
or
test
mov
cmp
in
pusha
inc
xchg
sbb
xchg
sub
mov
xchg
out
push
popf
and
jle
bound
sub
xchg
push
or
mov
push
pop
xchg
push
dec
stos
(bad)
xchg
fcomp
dec
pop
ds
xchg
mov
int3
add
shl
cmp
(bad)
sub
sbb
shl
hlt
fstp
push
add
push
loope
or
cmp
mov
push
mov
mov
in
adc
lea
sahf
jnp
cmp
push
push
call
sahf
cld
jbe
cmp
push
inc
xchg
jo
int3
pop
aad
retf
mov
(bad)
mov
(bad)
cmp
mov
add
add
scas
iret
cmps
adc
in
xor
lea
jno
mov
call
es
or
lea
and
fwait
pop
loope
or
mov
and
sub
sahf
dec
add
ret
rcr
dec
(bad)
xchg
pop
xlat
or
es
nop
cmps
xor
std
pop
aad
movs
addr16
pop
pop
js
shr
ss
jg
or
nop
jae
mov
adc
and
lods
jns
jl
adc
arpl
mov
rcr
ror
add
jle
pop
mov
jae
push
pushw
pop
push
pop
mov
mov
clc
mov
jae
fdiv
jb
cwde
lahf
inc
cmp
add
inc
mov
outs
mov
cld
ror
or
js
data16
pop
outs
loopne
mov
or
dec
cs
cmp
push
mov
cmps
aam
fcomp
mov
retf
dec
push
retf
cmp
das
dec
sub
dec
mov
and
sbb
adc
mov
jno
mov
add
(bad)
push
jg
(bad)
adc
sahf
push
inc
cwde
fbld
adc
dec
fstp
adc
inc
jbe
mov
lock
iret
mov
cmp
sar
xchg
mov
xlat
and
and
ss
cwde
cmp
and
push
sbb
ja
fs
cdq
jbe
loopne
dec
out
adc
lds
int3
or
push
pop
retf
daa
int3
and
jmp
sub
ins
sti
xchg
mov
loopne
xchg
(bad)
loop
xchg
mov
adc
xor
xchg
mov
xchg
cmp
sub
mov
cmc
jno
mov
or
cmc
lock
and
dec
mov
adc
adc
add
xchg
add
and
loopne
mov
in
(bad)
dec
or
out
imul
pop
mov
pusha
dec
push
jo
mov
jmp
dec
xor
xchg
mov
xchg
scas
xchg
rcl
ret
cli
not
add
aam
jmp
scas
pop
and
jns
add
iret
dec
cmps
loopne
in
mov
rol
pop
ss
jbe
dec
sbb
pop
shl
dec
xchg
je
addr16
pop
ffree
mov
inc
cmps
cmp
leave
outs
jmp
xor
inc
jnp
nop
cld
dec
and
inc
pop
test
mov
dec
cs
xchg
scas
xlat
or
sub
jb
xchg
adc
mov
xchg
dec
push
test
push
int
cmp
pushf
call
shl
jb
xor
xchg
(bad)
mov
ds
inc
mov
or
cmp
mov
cmps
aaa
(bad)
test
mov
mov
cwde
nop
push
pop
mov
nop
xchg
stos
push
movs
mov
jmp
(bad)
mov
lds
mov
cmps
(bad)
and
aas
push
sbb
dec
pusha
jl
aas
mov
ins
ins
dec
push
leave
cmp
xchg
mov
js
shl
sbb
mov
repz
inc
aam
adc
test
call
adc
sar
pushf
out
ja
daa
jnp
repnz
and
fcomp
sub
das
lods
mov
rcl
retf
fsub
mov
add
sbb
inc
xchg
inc
in
xor
xor
lea
test
aaa
fwait
inc
mov
add
test
aaa
pop
pop
aaa
add
ins
shl
jne
idiv
pusha
cmp
jle
xor
cs
ss
push
sub
push
shr
test
int
dec
mov
arpl
push
cmps
mov
js
repz
in
inc
jae
sbb
hlt
popa
aas
sti
xor
sbb
test
call
adc
es
enter
jns
mov
aam
jmp
push
in
and
sbb
sub
add
repz
outs
adc
adc
jp
int3
gs
jecxz
mov
test
and
jp
push
sub
lods
lahf
jne
push
outs
fldenv
sar
inc
fdiv
sbb
push
pusha
sahf
iret
jae
pop
jmp
std
mov
cld
jne
mov
xor
cs
mov
xchg
xchg
push
xchg
fcom
or
test
pusha
neg
inc
test
and
hlt
mov
adc
mov
cmp
mov
mov
in
xor
std
lds
call
repnz
sahf
pop
jnp
test
fild
stos
in
sub
inc
sub
cmp
ins
sbb
in
pop
std
cdq
inc
cmps
fadd
cmc
adc
in
mov
mov
xor
repnz
jb
cmc
rcr
outs
push
dec
mov
push
or
js
ss
loope
jae
mov
out
add
sbb
punpckhwd
or
push
push
iret
or
add
cli
cld
leave
cmp
out
mov
inc
mov
sti
fadd
ret
jns
repz
call
test
scas
aas
iret
call
test
add
and
adc
rcl
movs
add
jmp
mov
stc
neg
push
test
sub
or
mov
pusha
fcom
rcr
(bad)
pop
and
xor
dec
mov
jp
add
ds
inc
or
je
jno
cdq
stos
jb
adc
cmc
std
pop
movs
gs
jl
ret
or
aaa
cmp
ins
ror
addr16
sahf
(bad)
fyl2x
dec
in
outs
jno
cli
pop
retf
dec
push
xchg
inc
out
xor
and
mov
cmp
icebp
jbe
cmps
fst
out
cmps
add
pushf
loope
push
lods
test
fld
leave
push
push
rol
scas
jb
jg
test
mov
enter
mov
mov
imul
mov
dec
lea
dec
add
enter
jge
adc
push
imul
scas
mov
dec
adc
test
cmp
mov
add
(bad)
dec
sti
fisttp
sub
cmc
pop
enter
es
xchg
pop
or
xor
imul
hlt
shr
ror
sub
jmp
push
int
retf
fidivr
sbb
inc
jl
into
mov
aam
loopne
fwait
mov
and
pop
into
adc
dec
xor
cmp
push
out
jecxz
mov
inc
mov
jnp
add
fdiv
scas
inc
dec
lahf
mov
mov
xor
test
and
and
cdq
iret
(bad)
sub
ret
and
test
retf
and
sbb
mov
aas
xor
push
test
out
loop
dec
(bad)
push
or
cmps
cmc
cmps
pop
push
ss
bnd
ss
add
out
les
popf
sbb
adc
ror
xchg
mov
sub
pop
cwde
xlat
fistp
(bad)
stc
sbb
push
retf
push
lods
rcl
or
inc
xor
and
mov
mov
pop
outs
loop
sub
adc
xor
setae
test
fdivrp
lods
test
pop
lock
or
pop
sbb
mov
in
daa
clc
pop
shl
inc
cmp
cmp
les
dec
or
hlt
icebp
pop
mov
loopne
(bad)
dec
movs
iret
test
mov
pop
in
repz
push
sub
dec
push
xor
test
call
(bad)
or
inc
mov
push
push
mov
pop
imul
pusha
xchg
xchg
stos
adc
(bad)
arpl
jbe
sbb
aas
mov
adc
or
daa
dec
dec
adc
out
rcl
adc
lods
sub
fstp
outs
mov
add
xchg
mov
mov
enter
pop
xchg
pusha
push
pop
jmp
popa
mov
ror
aad
aas
test
jmp
repnz
cmps
in
fistp
push
pop
ins
into
inc
xor
daa
out
jecxz
dec
or
pop
scas
add
lahf
in
outs
mov
push
xor
pop
add
ret
xchg
pop
or
das
pop
movs
adc
retf
sub
sub
sub
push
sub
iret
dec
nop
ss
jmp
sahf
cs
arpl
push
jle
ret
js
add
sub
rep
ins
add
push
(bad)
aad
mov
cmps
cmc
sar
ins
cmps
add
pop
rcr
je
add
test
add
adc
sar
test
bound
mov
add
dec
int3
imul
clc
mov
push
cmp
popa
jl
nop
mov
push
sbb
jecxz
out
dec
push
fldcw
mov
ins
adc
push
mov
dec
mov
add
hlt
ret
sbb
push
add
imul
(bad)
stc
push
mov
mov
push
lds
stos
and
xchg
rcl
fcomp
push
mov
stc
pop
jle
das
arpl
rcr
loop
mov
add
xchg
xchg
dec
nop
mov
arpl
scas
mov
xlat
jmp
adc
sbb
xchg
or
test
dec
mov
(bad)
retf
jne
inc
(bad)
dec
and
retf
jmp
scas
mov
arpl
stos
out
inc
movs
dec
push
adc
add
cmp
add
inc
or
enter
dec
fst
(bad)
mov
sub
dec
inc
(bad)
fisttp
xor
pop
arpl
jbe
push
pop
adc
adc
mov
rcr
mov
sub
fstp
out
xor
(bad)
and
in
xor
inc
sub
test
loope
mov
gs
mov
push
jns
mov
ror
cmp
xchg
cmp
retf
add
cli
mov
hlt
popa
mov
sbb
adc
dec
dec
push
scas
shr
scas
push
mov
mov
pop
stos
push
mov
shl
loope
mov
pop
imul
adc
sbb
iret
add
(bad)
lea
add
push
out
xchg
mov
add
sbb
sbb
retf
mov
imul
mov
xchg
mov
iret
das
mov
rol
jnp
dec
push
mov
jne
jp
aam
pop
mov
aad
sbb
lods
cmps
mov
(bad)
mov
mov
nop
cmp
sub
jp
jp
sub
and
lahf
push
jmp
inc
cmp
push
lds
iret
test
adc
mov
ss
adc
ins
cmp
(bad)
mov
into
adc
(bad)
jmp
add
mov
mov
ds
dec
push
lods
ss
mov
push
adc
pop
(bad)
js
(bad)
cmps
add
mov
xchg
pop
shl
adc
jecxz
cld
push
(bad)
lahf
jle
mov
arpl
inc
mov
mov
mov
addr16
repz
rol
and
call
out
or
xchg
popa
jecxz
stos
mov
std
repnz
push
movs
dec
dec
cmp
add
jmp
dec
mov
push
lock
jnp
rol
dec
mov
xor
je
(bad)
nop
mov
sub
jmp
and
sbb
dec
pop
repnz
xchg
jecxz
pusha
in
mov
mov
aas
cmp
movs
icebp
out
loope
or
jb
in
cs
mov
sbb
xor
call
outs
or
add
imul
lods
fs
xchg
pop
jp
xchg
es
cmp
popa
daa
jmp
xchg
xor
add
sub
mov
xor
icebp
mov
inc
add
pop
pusha
jge
aad
mov
dec
xchg
mov
das
cmp
dec
mov
jne
int3
rcr
mov
add
cs
(bad)
cmp
add
xchg
inc
mov
jmp
and
int
or
loope
or
push
lea
out
jae
hlt
or
les
xor
call
cmp
in
ds
cmps
in
pop
push
xor
mov
fimul
pop
or
xchg
scas
lea
dec
shl
test
sub
xor
sar
mov
loopne
xchg
jns
inc
ins
dec
pop
and
clc
fs
rol
outs
aam
jmp
test
aas
and
jle
sbb
(bad)
pop
add
imul
xor
cmp
cmp
movs
mov
jecxz
dec
cmp
or
push
mov
mov
xchg
aas
jne
loope
mov
cmc
dec
sbb
lahf
out
mov
or
cmc
cmp
out
lahf
mov
mov
popf
aad
jl
mov
into
fisttp
cmp
push
adc
arpl
cdq
addr16
(bad)
mov
iret
scas
imul
mov
cmp
push
es
test
in
daa
mov
cmp
rcl
jmp
mov
jecxz
mov
pop
clc
out
pop
lds
or
cmp
jmp
call
xor
jno
jge
hlt
add
adc
sbb
fimul
push
stos
in
jmp
xor
call
jae
jecxz
es
xor
es
mov
fidiv
mov
adc
(bad)
ins
push
cmc
loop
and
leave
push
mov
jecxz
mul
xchg
push
imul
aas
retf
cmp
cli
mov
mov
jg
xchg
in
(bad)
psrad
bound
dec
ds
xor
cmps
push
adc
(bad)
mov
push
test
retf
lahf
or
mov
mov
mov
push
gs
jmp
loopne
sub
cmp
movs
pop
ret
ror
jl
(bad)
push
adc
push
jle
xchg
pop
movs
cmp
jg
push
int
in
push
cmp
pop
ins
jmp
or
inc
out
sub
leave
xchg
std
mov
neg
lahf
shl
sub
movs
and
std
movs
xor
inc
mov
hlt
or
stos
cmp
or
data16
pop
xor
mov
imul
xor
and
or
adc
xor
lahf
bound
mov
or
dec
pop
fadd
mov
sbb
fwait
push
pop
push
hlt
popf
xor
scas
jns
mov
or
pop
sub
sub
push
ret
mov
cmps
mov
or
and
sti
popa
daa
sbb
add
sbb
(bad)
push
in
ror
jbe
sub
nop
or
test
pushf
retf
mov
cmps
cs
add
mov
jbe
repnz
call
mov
mov
mov
push
out
mov
mov
sti
jmp
xchg
dec
jns
std
inc
mov
mov
inc
xor
sub
ds
neg
or
xor
int
or
aad
pop
daa
in
test
mov
lahf
mov
jl
push
out
movs
(bad)
shr
adc
imul
cmps
mov
outs
push
pop
jmp
add
into
cdq
adc
xchg
lock
mov
js
mov
stos
hlt
cmps
ins
inc
sbb
pop
mov
mov
in
xor
push
xor
(bad)
sub
push
sub
jl
mov
shl
jecxz
mov
dec
fwait
and
aam
xchg
pusha
xchg
jl
or
xor
push
(bad)
aam
cmp
sbb
add
out
adc
or
push
(bad)
mov
cs
shl
pop
xlat
adc
pop
daa
add
sub
mov
adc
or
sbb
jecxz
xor
jmp
push
fprem
and
adc
call
and
adc
push
jbe
icebp
xchg
call
inc
xchg
stos
pop
push
imul
xchg
cdq
gs
scas
test
ret
(bad)
fisttp
mov
mov
stc
inc
pop
in
mov
cmp
rcr
(bad)
pop
lds
jo
mov
stc
pop
stc
add
mov
xor
stos
loop
int
jbe
sub
pushf
xchg
aam
xchg
movs
jmp
sub
and
neg
or
and
xor
retf
ror
mov
test
adc
jo
out
cwde
add
js
imul
jle
out
mov
and
push
ins
mov
mov
jae
loope
sub
fdiv
outs
mov
mov
nop
mov
repnz
xchg
clc
mov
jmp
retf
outs
or
mov
xor
retf
shl
test
mov
pop
add
xor
hlt
loopne
popf
dec
pushf
in
ss
and
mov
inc
pop
sbb
imul
dec
pop
cmc
inc
push
fwait
sub
xchg
add
cdq
sbb
out
jmp
ins
pop
sub
in
mov
out
mov
mov
or
and
fsubrp
add
or
fs
sub
popf
loopne
(bad)
shl
mov
out
out
push
mov
retf
nop
call
ficomp
into
loopne
(bad)
mov
xchg
jo
cld
imul
push
xor
sbb
add
xor
aad
js
fnstenv
mov
cmp
(bad)
aam
inc
repnz
mov
or
and
fbld
add
cmp
repnz
add
cmp
outs
(bad)
jmp
fcmovb
adc
inc
mov
scas
hlt
arpl
sbb
xor
mov
xchg
mov
stos
pop
int
ja
add
std
jo
daa
in
pop
enter
les
test
mov
mov
add
xchg
(bad)
lea
add
adc
and
rcr
arpl
ja
and
int3
and
inc
dec
les
call
fistp
rcr
push
xor
mov
jge
and
(bad)
mov
cwde
stos
cdq
test
push
sub
or
sub
call
mov
jnp
mov
mov
pop
mov
xor
jge
in
aas
xchg
or
outs
dec
je
xchg
das
and
neg
sahf
mov
sbb
(bad)
frndint
dec
push
je
or
mov
imul
push
push
add
in
push
cmp
dec
dec
mov
loop
push
scas
mov
inc
inc
je
pop
adc
cmp
(bad)
(bad)
fbld
into
mov
or
(bad)
rcr
dec
(bad)
ror
inc
ins
adc
jbe
lahf
adc
cdq
out
imul
jg
dec
adc
rcl
add
(bad)
loope
jb
shl
dec
das
xor
sub
aam
je
cdq
rcr
xchg
push
ins
push
sbb
rcr
jecxz
sbb
movs
sbb
mov
inc
adc
pop
scas
test
sbb
mov
xlat
shl
pop
out
popa
rcl
push
adc
sub
mov
ror
cmp
pop
dec
adc
out
and
ret
or
add
jle
mov
scas
outs
lds
movs
xchg
lods
out
loopne
xor
in
cmp
mov
jl
cmp
cld
mov
adc
iret
fiadd
jbe
stos
dec
movs
pushf
sbb
loop
(bad)
adc
lds
bound
cmp
add
cld
dec
mov
adc
ins
cmp
push
call
or
out
mov
xchg
push
sbb
xchg
ins
int
adc
ds
aad
nop
(bad)
stos
loopne
or
js
mov
or
inc
inc
dec
out
shl
stos
and
mov
int3
nop
xchg
pushf
(bad)
aam
sahf
mov
xor
pop
push
pop
inc
sbb
mov
out
jns
test
stos
sub
test
mov
adc
cmc
and
inc
mov
dec
(bad)
cmp
adc
mov
fild
inc
fnsave
(bad)
pop
mov
mov
xor
xchg
(bad)
pop
adc
outs
jnp
arpl
push
or
fdivp
mov
pop
adc
adc
js
int3
mov
adc
jbe
inc
jae
cmps
add
sub
in
in
ret
scas
jne
je
xchg
xchg
mov
mov
sbb
int3
mov
popf
(bad)
retf
aam
xor
mov
xchg
dec
xchg
push
repnz
adc
or
push
xor
repnz
mov
dec
and
push
lds
xchg
call
icebp
mov
cmp
or
xchg
sub
push
add
movs
fimul
pop
or
cmc
xor
cs
adc
jae
stos
push
ror
cwde
jns
adc
jle
shr
arpl
jecxz
add
inc
xlat
outs
cwde
or
clc
push
xchg
jg
mov
mov
jmp
sbb
shr
jb
mov
scas
sbb
or
fbstp
add
fbld
je
iret
add
inc
lock
jmp
pop
xchg
js
adc
mov
inc
xor
call
jle
or
pop
inc
(bad)
sbb
adc
cld
jmp
out
jmp
cmp
bound
sub
add
(bad)
loop
bound
dec
shl
int3
mov
sbb
fsub
mov
push
pusha
sub
or
xchg
imul
pop
leave
je
xchg
pushf
and
lods
pop
push
and
and
shl
or
aam
outs
sbb
pop
xchg
and
jecxz
mov
mov
imul
fsubr
adc
sahf
add
mov
add
aad
rcr
sbb
call
lea
gs
(bad)
out
in
in
gs
dec
daa
and
aaa
(bad)
fwait
loop
call
les
or
push
cli
fcomp
(bad)
jns
ds
pusha
sub
jmp
sahf
in
inc
out
imul
xor
mov
fild
(bad)
lods
loope
inc
lea
es
add
lahf
pop
mov
inc
xchg
clc
xchg
ins
mov
lods
or
sahf
ret
cmc
ds
pop
push
inc
in
sbb
aaa
and
mov
repz
ja
and
mov
ret
inc
je
out
mov
lahf
xchg
shl
fcomp
jb
rcl
mov
aam
ror
xchg
xlat
icebp
adc
push
mov
ret
stc
ret
call
jecxz
mov
jge
add
add
xchg
fisttp
jb
out
pop
lds
push
inc
ss
shl
lea
xchg
cmp
push
xchg
fadd
lock
cmp
aas
call
push
push
fild
in
sbb
and
push
movs
push
sbb
cmc
dec
sar
(bad)
stc
jnp
enter
sub
cwde
jl
inc
std
pop
lock
leave
mov
repnz
sub
popf
aam
pop
sub
out
icebp
mov
push
in
addr16
jae
arpl
idiv
in
jb
ins
dec
(bad)
adc
inc
xchg
mov
psubd
dec
mov
or
out
cmc
rsqrtps
jge
or
and
mov
wrmsr
jmp
popf
ja
loope
xor
lods
and
xor
jge
icebp
dec
mov
inc
out
in
call
jbe
test
mov
dec
call
das
pop
imul
dec
popa
hlt
cmps
sub
pop
test
sbb
jmp
pushf
cmp
call
lahf
jb
xchg
in
into
adc
scas
leave
mov
dec
mov
and
ret
arpl
mov
sar
enter
jne
mov
jns
in
pop
xchg
scas
pusha
stos
sub
rcr
imul
push
movs
inc
xchg
adc
xchg
jecxz
outs
xchg
movs
and
dec
xor
jns
lock
sub
dec
cmp
hlt
add
outs
push
dec
shl
sub
jns
mov
enter
ret
movs
xor
pop
inc
push
in
call
pop
and
jo
ja
pop
cmp
adc
loope
(bad)
adc
or
mov
out
or
dec
sub
retf
(bad)
out
in
jbe
push
push
push
lea
jb
fistp
mov
mov
rcl
jb
(bad)
dec
jmp
push
pop
mov
das
or
jmp
xchg
lods
ds
test
bound
xor
pop
ror
addr16
in
mov
dec
cmp
lds
shr
mov
push
ds
fcmovne
xchg
push
pushf
and
out
dec
sub
ins
lds
inc
mov
inc
inc
(bad)
sbb
add
fist
xchg
fisttp
mov
adc
mov
test
jne
mov
jno
neg
cmp
and
cs
jne
in
cdq
jne
mov
aam
fcomp
ins
js
mov
clc
or
fisub
mov
movs
add
and
fimul
sbb
in
jo
mov
xor
inc
out
lods
mov
fcmovnbe
mov
adc
cld
into
xor
cmp
mov
or
xlat
arpl
and
push
or
nop
sti
fcmovnb
mov
pop
pop
xor
repz
cmp
scas
stc
in
inc
dec
dec
pop
inc
je
xchg
xchg
jge
rcr
dec
pop
clc
jo
pop
dec
mov
cld
xor
jne
loop
fcom
and
scas
jle
adc
sub
test
mov
lock
sysexit
gs
repnz
xchg
and
mov
fidiv
ds
push
push
dec
mov
dec
out
pop
adc
pop
(bad)
or
pop
pop
push
mov
mov
(bad)
popa
adc
dec
xchg
sub
dec
ins
push
popa
(bad)
jl
mov
mov
cwde
gs
movs
and
enter
and
test
cmp
leave
mov
and
mov
adc
xor
cmp
test
imul
dec
pop
inc
iret
sub
cld
xchg
mov
ins
and
xchg
(bad)
fstp
inc
xchg
cdq
cmp
int3
mov
lds
mov
aaa
lock
sahf
scas
fs
fbld
pop
iret
push
and
iret
js
out
cs
je
xchg
mov
pushf
jb
adc
mov
lea
and
into
adc
test
cmps
fwait
dec
mov
sbb
xlat
sbb
sbb
fxch
push
mov
gs
xor
xchg
sbb
inc
mov
push
dec
movs
(bad)
dec
shr
in
ins
mov
cmp
jecxz
out
aam
add
pop
mov
stos
and
and
cmp
pop
push
movs
int
cmp
jns
mov
jecxz
cmp
fldcw
push
mov
xchg
lods
sahf
sbb
clc
loope
scas
xchg
lods
fwait
dec
xchg
ja
leave
pop
bound
xchg
sbb
fwait
rcl
scas
loopne
das
or
loop
(bad)
jmp
xor
push
fs
dec
add
imul
push
es
out
xchg
add
sbb
xchg
aam
add
neg
jo
add
inc
cmp
push
test
mov
or
jns
js
pop
std
push
mov
sar
dec
ins
mov
(bad)
les
push
xor
stos
fiadd
push
push
mov
lahf
lock
mov
pop
or
xor
aaa
lods
stos
call
push
ss
stos
fisub
pop
test
or
mov
ret
cs
stc
lds
pop
mov
jl
cmp
ja
test
and
sbb
call
pop
fs
adc
dec
push
dec
adc
imul
and
xor
ins
pop
sub
cmc
add
mov
test
xchg
fs
pushf
jecxz
pop
stos
cmp
icebp
repnz
jge
and
jns
call
pusha
cdq
or
sub
sbb
hlt
mov
call
in
pop
scas
jb
popf
and
ja
dec
push
jbe
lahf
cmp
test
icebp
mov
inc
cmps
lock
and
lods
and
mov
lock
xor
xor
jb
inc
add
mov
mov
(bad)
aas
jecxz
leave
pop
pop
dec
dec
jge
test
xlat
cld
xchg
dec
xchg
pop
jne
jmp
pop
xchg
imul
xlat
dec
push
adc
aaa
mov
mov
cdq
mov
pop
imul
xor
test
mov
xor
jg
xor
adc
in
shr
(bad)
inc
retf
jg
add
das
stc
ret
cmp
aas
(bad)
ss
add
mov
ficomp
dec
popf
lods
push
fmul
test
scas
out
or
iret
mov
pop
or
scas
aad
pop
movs
xor
enter
mov
cwde
xor
push
and
mov
sbb
or
adc
test
ror
or
in
ds
xchg
sbb
cdq
mov
jae
lods
cmps
cwde
jb
xlat
jbe
daa
lea
pop
dec
aas
mov
mov
popa
clc
adc
ins
loop
stc
push
movs
jb
movs
cmp
mov
ja
ret
xchg
(bad)
xor
mov
sub
mov
les
inc
pop
pop
pop
cs
and
sbb
adc
xchg
pop
pop
sub
ret
sub
mov
inc
jb
xchg
or
sar
scas
es
push
or
and
sbb
jnp
inc
inc
repz
xor
out
jl
aam
inc
fistp
mov
push
in
mov
js
xchg
or
pop
sub
dec
push
inc
cmps
ret
jmp
inc
popa
cli
fnstenv
(bad)
imul
mov
enter
dec
jge
pushf
dec
popa
test
push
pop
cmp
movs
and
retf
mov
xchg
ds
cld
adc
add
xchg
xor
fmul
into
rol
outs
div
xchg
ret
dec
cmc
cdq
cs
or
nop
jne
outs
cmps
add
inc
loopne
jl
lds
das
popf
cld
xchg
pop
xchg
adc
popf
dec
xchg
movs
jnp
dec
and
adc
fdivr
sub
xor
adc
sbb
pop
pop
inc
clc
pop
sbb
pop
(bad)
mov
dec
add
xchg
dec
mov
out
cld
or
and
mov
rcl
mov
push
outs
push
js
add
mov
pusha
push
or
cmp
dec
je
shl
loope
cmps
add
pop
aaa
(bad)
mov
jp
cdq
push
pop
test
js
push
test
mov
arpl
sbb
xlat
or
cmps
int3
cmps
jmp
test
adc
aas
ins
loop
push
lahf
hlt
push
repnz
and
pop
jg
and
jne
popa
leave
sar
xchg
lods
lss
(bad)
sahf
push
cmps
push
push
and
sbb
fucom
mov
jp
movs
pop
out
xchg
jae
mov
std
pop
jo
fist
out
mov
addr16
loope
push
ret
cld
in
push
cdq
mov
(bad)
out
mov
xor
scas
inc
dec
inc
outs
repnz
mov
mov
in
rol
xor
cmp
stos
les
pop
sub
bound
lea
mov
pop
repz
(bad)
loopne
lods
pop
out
loopne
arpl
test
push
push
and
test
inc
push
sar
cmp
icebp
dec
adc
xor
ror
ins
sub
dec
repnz
xor
es
mov
or
xor
pop
pop
dec
outs
inc
mul
call
pop
mov
jge
xor
test
jmp
into
jl
shl
call
push
aad
int
xchg
cmp
loope
jno
mov
add
imul
mov
mov
pop
daa
xchg
pop
push
sti
jbe
aaa
xlat
(bad)
pop
test
stc
retf
out
sbb
mov
pop
jne
sahf
sub
add
std
movs
push
mov
inc
nop
pop
xchg
jp
mov
sub
call
xor
loop
jge
fmulp
pushf
(bad)
and
dec
sbb
pop
ds
fcom
adc
add
jne
call
pop
pop
icebp
ja
adc
push
jno
fdiv
push
aam
pop
fist
adc
cmp
sbb
in
cmps
stos
jge
lea
or
pop
iret
loopne
dec
sbb
enter
inc
imul
into
jns
fmul
popf
es
or
inc
sub
fwait
out
cmp
mov
sti
test
sub
pop
adc
in
adc
sub
jmp
push
loope
sub
adc
in
neg
mov
cmp
and
sbb
xor
jle
arpl
add
or
lods
jmp
mov
adc
xchg
or
gs
cmp
push
or
mov
jge
cwde
(bad)
shr
inc
inc
ss
cmp
sbb
or
add
int
lods
push
xor
push
bound
mov
xor
and
bound
loop
push
push
mov
mov
add
repnz
mov
mov
sti
js
jmp
cld
test
leave
jb
inc
sub
inc
and
pop
xor
adc
mov
jp
jnp
fadd
sar
ret
(bad)
in
and
and
fcmovbe
and
sub
test
imul
imul
push
inc
rcr
mov
ins
sub
dec
xchg
std
fadd
jbe
fdivr
fs
loop
pop
loope
sbb
mov
repnz
mov
out
and
pmullw
jns
mov
movs
push
mov
fimul
lods
mov
push
pop
add
xor
dec
xor
aam
sub
mov
xor
getsec
or
loopne
jae
add
pop
xchg
mov
fiadd
mov
mov
mov
dec
sbb
aas
xor
inc
adc
in
(bad)
daa
std
mov
addr16
xor
mov
(bad)
sbb
mov
arpl
jno
(bad)
xor
jae
mov
pop
in
and
loop
xchg
jno
sbb
call
xchg
sahf
or
xchg
neg
pop
mov
cmps
aad
jmp
add
mov
(bad)
mov
stc
mov
ds
or
and
pop
bound
jb
or
fmul
pop
cmp
fistp
sti
movs
mov
addr16
add
fadd
add
sub
adc
add
sub
aad
aam
repz
push
arpl
or
in
pusha
mov
jo
imul
inc
fiadd
adc
push
cmp
fstp
ret
mov
les
and
lea
mov
mov
pop
or
add
jae
mov
rcr
stos
pop
xchg
popa
xor
xlat
lds
sbb
jns
push
jecxz
out
sbb
push
imul
icebp
dec
icebp
(bad)
xchg
cmp
fwait
mov
sub
enter
xchg
(bad)
mov
int
dec
inc
push
xchg
fucomip
jb
retf
stc
adc
sti
test
pop
mov
cmp
nop
aad
das
push
mov
push
inc
and
and
push
test
adc
and
addr16
xchg
mov
adc
mov
pop
fisubr
jmp
imul
mov
ja
out
mov
jecxz
inc
ret
sub
test
repz
into
lea
mov
jecxz
xor
pop
lock
push
ins
mov
cmp
and
loopne
dec
aaa
retf
int3
sub
xchg
jno
nop
adc
xor
fucomp
je
mov
push
or
cmp
mov
sub
jle
addr16
add
aad
and
movs
pop
mov
(bad)
daa
jno
imul
repnz
out
mov
mov
lock
jge
stos
sbb
adc
not
test
or
mov
inc
sahf
jmp
mov
jg
mov
stc
sbb
mov
xchg
out
push
sub
idiv
xor
add
xor
mov
data16
imul
in
add
and
mov
dec
leave
repnz
mov
and
mov
jb
loope
icebp
cmp
fadd
mov
mov
cmp
push
js
jmp
in
int
lods
hlt
xlat
mov
pop
or
pusha
jo
and
arpl
or
mov
js
stc
inc
adc
push
jbe
dec
test
pop
inc
cmp
lods
fidiv
push
cwde
jb
outs
bound
outs
push
inc
ror
cmp
xchg
pop
sbb
enter
daa
mov
ss
or
cmp
and
inc
xchg
push
dec
ds
xlat
jecxz
out
adc
xor
push
push
mov
out
push
sub
das
and
shl
(bad)
or
aam
out
pop
fnstenv
sub
adc
stc
bound
jns
pusha
mov
cs
(bad)
or
pop
xor
xor
adc
push
or
cmps
jnp
lea
xchg
jo
xchg
jbe
pop
fidiv
add
outs
in
mov
cmp
or
rol
ror
(bad)
pop
jge
out
mov
or
ins
pop
push
xchg
jno
sub
(bad)
repz
enter
dec
aas
sbb
(bad)
scas
xrelease
adc
lods
sbb
repz
out
mov
jnp
pop
movs
cwde
inc
daa
jns
arpl
push
pop
aaa
cmc
inc
enter
and
clc
xor
pop
(bad)
pop
mov
mov
mov
mov
mov
lea
std
mov
or
retf
in
ins
sub
mov
jge
(bad)
sahf
int3
mov
or
mov
cmp
outs
iret
loopne
and
jl
pop
xor
jmp
fcom
(bad)
in
loop
retf
(bad)
cwde
or
dec
(bad)
inc
hlt
fiadd
xchg
or
call
xor
cmc
les
push
ja
inc
fsub
xchg
sub
dec
cmp
ins
mov
mov
cdq
into
scas
inc
test
mov
xchg
aas
ins
aam
push
jg
dec
cwde
adc
test
popf
imul
xchg
stos
sub
add
out
dec
xor
movs
cmp
hlt
mov
sbb
call
arpl
or
add
(bad)
fs
fs
movs
push
fsub
sub
xor
mov
push
jecxz
push
cdq
fistp
movs
popa
sar
push
xor
leave
fwait
retf
inc
adc
cmps
(bad)
xchg
stos
(bad)
mov
jg
or
out
in
or
mov
adc
call
cmp
fst
imul
(bad)
mov
fistp
aad
cmc
pop
mov
ins
mov
aaa
xor
push
addr16
xchg
ds
mov
(bad)
inc
in
in
jo
and
jmp
cmp
outs
(bad)
fs
xor
jge
inc
push
(bad)
xlat
mov
pusha
loope
mov
cmps
je
in
clc
jp
mov
neg
or
jmp
retf
ret
add
mov
jle
retf
inc
pop
mov
jbe
and
pop
js
xor
jb
inc
push
pop
push
retf
adc
fiadd
add
leave
sbb
aam
cmp
sub
stos
ffree
mov
jb
fwait
loopne
cmp
ds
outs
imul
test
sar
mov
inc
retf
stc
sahf
jb
push
xor
push
sub
(bad)
cdq
and
mov
push
jbe
mov
cmc
addr16
pop
movs
mov
int3
scas
xor
nop
cmp
sbb
push
out
shr
fild
gs
clc
in
hlt
(bad)
jmp
push
mov
mov
mov
in
sbb
lods
into
adc
out
test
inc
mov
hlt
aaa
push
jnp
ficom
mov
scas
mov
ins
inc
adc
scas
popf
adc
outs
aas
icebp
or
daa
push
mov
repnz
mov
(bad)
out
cmps
fs
mov
js
out
(bad)
pop
mov
pop
pop
into
xchg
repz
ret
movs
mov
sbb
idiv
and
xchg
in
popa
add
or
stos
lds
mov
imul
xor
fmul
inc
add
add
add
sti
lea
ja
adc
xchg
je
data16
repz
sti
cld
lods
jne
dec
sub
popf
pop
pop
adc
push
xor
or
inc
int3
into
jl
jnp
cld
jle
dec
pop
mov
mov
cmp
out
adc
jmp
jnp
inc
dec
adc
push
mov
test
mov
sub
aaa
imul
(bad)
popa
pop
dec
js
ds
sbb
xchg
leave
mov
sub
and
push
inc
in
fiadd
ss
add
dec
fiadd
cwde
sub
std
fwait
adc
jp
ins
enter
mov
out
inc
test
(bad)
jmp
mov
sahf
sub
sub
xor
aam
mov
xor
dec
ins
or
leave
jecxz
add
daa
xchg
sti
retf
out
jmp
mov
rol
cmp
cld
xor
fwait
pop
call
push
jge
hlt
and
sbb
ror
dec
pop
sub
inc
stos
cmps
loopne
inc
movs
(bad)
aaa
pop
inc
xchg
shl
adc
repz
push
sbb
out
xor
mov
in
sti
or
mov
ror
xchg
int
push
mov
retf
rcl
movs
xchg
pop
and
inc
out
adc
pusha
jb
sbb
call
inc
mov
sbb
xchg
jo
call
and
pushf
shl
fistp
and
lods
mov
xchg
lods
stc
popa
out
inc
mov
enter
push
jle
mov
sbb
addr16
mov
sbb
or
pop
(bad)
adc
inc
rcl
inc
ja
shl
jp
xor
jg
sub
mov
sbb
repnz
popa
mov
cmp
scas
sub
ds
cwde
inc
pop
and
sbb
jbe
or
dec
cmp
push
jnp
sub
jns
cmp
mul
ds
dec
ret
mov
repz
imul
into
jmp
sub
in
dec
sahf
push
lock
(bad)
repnz
imul
mov
les
jmp
test
push
and
jp
out
dec
inc
mov
adc
pop
lock
jmp
lds
(bad)
ins
cmp
(bad)
sar
pop
(bad)
xchg
sub
xor
adc
adc
es
fucomp
cwde
sar
mov
lahf
xlat
mov
mov
leave
aad
and
leave
shl
and
out
adc
cmp
in
sbb
aaa
ret
jmp
xor
icebp
pop
test
add
ror
inc
cs
in
(bad)
dec
xchg
cli
call
retf
push
into
pop
sub
dec
jnp
pop
retf
into
push
in
jns
mov
adc
into
xchg
push
cmp
jno
adc
(bad)
xor
out
imul
aad
dec
cmp
lds
mov
ins
sbb
mov
movs
mov
(bad)
sahf
inc
scas
int3
retf
pop
out
push
or
pxor
mov
dec
sub
mov
add
mov
hlt
fsubr
xor
fmul
mov
ror
fucomp
sub
les
fcmovb
and
and
mov
gs
cmp
xchg
es
xchg
mov
dec
adc
(bad)
(bad)
sbb
or
and
inc
aas
and
push
jbe
push
sub
(bad)
test
sbb
jp
dec
data16
push
out
retf
cmp
cmps
cmp
iret
aas
jecxz
pop
ins
sub
fisttp
mov
sahf
jnp
dec
or
das
mov
lds
repnz
clc
aas
test
sahf
xlat
jg
call
cmps
inc
mov
sub
call
(bad)
loopne
cmp
cli
sub
sub
pop
out
fs
sbb
cwde
iret
pop
sbb
test
fwait
mov
sahf
sbb
jne
adc
cmp
sbb
inc
cld
mov
clc
out
pushf
int3
sbb
push
pop
cmc
scas
rcl
sbb
add
push
dec
pop
sub
addr16
mov
adc
jg
std
jo
cwde
pop
sbb
ja
pop
xor
push
push
fstp
sbb
iret
mov
dec
lods
mov
das
loope
push
sbb
add
sub
retf
fcmovnb
xchg
mov
inc
arpl
(bad)
lahf
repz
jle
fldenv
imul
jo
popa
or
xor
add
mov
sbb
xchg
mov
push
dec
jae
sub
mov
and
or
(bad)
fistp
mov
sbb
xor
jbe
jg
out
xchg
(bad)
cli
(bad)
(bad)
loopne
mov
call
push
add
movs
call
loope
add
or
outs
mov
sti
(bad)
pop
mov
push
cmp
adc
mov
mov
push
imul
ja
mov
jno
push
jl
jl
enter
add
mov
adc
(bad)
sbb
movs
jecxz
pop
jno
lock
out
fcmovne
mov
jle
push
lods
push
les
outs
sub
mov
(bad)
mov
mov
sbb
pop
clc
or
xchg
inc
(bad)
mov
in
xchg
fcmovne
std
inc
addr16
cwde
and
push
add
mov
inc
cli
movs
movs
xchg
repz
lods
jmp
add
mov
dec
stc
stos
bound
(bad)
loopne
out
gs
in
cmp
add
add
(bad)
aam
call
mov
mov
imul
cmp
lods
or
or
xchg
pop
gs
(bad)
scas
(bad)
out
sbb
shr
shr
pop
sub
(bad)
jbe
mov
xchg
xor
in
pop
in
xlat
cdq
and
aas
cld
dec
push
cmp
movs
ins
jle
mov
leave
stos
iret
inc
add
fidiv
jmp
jl
push
(bad)
mov
fwait
xchg
and
xchg
jl
pop
or
fs
sub
loop
sub
xlat
add
mov
xlat
xchg
inc
jns
rol
sbb
push
jle
int
ins
aaa
sub
xchg
scas
loopne
js
pop
in
test
stos
jbe
xchg
sbb
fwait
lds
mov
mov
fisub
leave
mov
in
or
in
vmovsd
imul
xchg
ret
fsubr
mul
mov
sahf
xor
push
(bad)
adc
(bad)
xor
imul
xor
cmp
cmps
inc
xor
xchg
adc
xchg
cmp
cwde
test
mul
jno
loope
jg
inc
sub
outs
cmps
and
add
lahf
fisttp
shr
cmp
lea
rcl
mov
push
jne
outs
dec
imul
shr
pushf
add
mov
dec
push
call
cmp
test
adc
into
sbb
gs
xor
or
push
pushf
xlat
in
push
ret
mov
pop
jmp
aaa
sbb
xor
in
adc
(bad)
retf
fisttp
push
and
add
jg
sub
xor
sbb
jb
fdivr
inc
xor
pop
adc
push
cmps
jle
jb
lods
retf
sub
adc
mov
pop
inc
sub
and
cmp
or
xor
out
xor
cmp
lea
pusha
mov
outs
adc
cmp
stos
jle
mov
lds
out
xchg
adc
imul
pushf
daa
sbb
xor
jo
cmp
lds
ret
add
xchg
sub
push
sub
movs
out
hlt
and
bound
jmp
repz
ficomp
mov
fsubr
xchg
shl
mov
std
dec
aam
sub
pop
mov
shr
loopne
ret
mov
sbb
sahf
(bad)
mov
sub
neg
fimul
push
rol
mov
mulps
cmp
pop
sub
hlt
xor
sub
xchg
cmps
fld
repnz
xchg
stos
fisubr
mov
std
dec
popf
movs
xor
or
cmp
mov
mov
std
sahf
jo
in
retf
or
adc
xor
sbb
repz
ret
(bad)
cmp
cmc
scas
dec
ret
stos
pop
icebp
in
sub
or
(bad)
push
xor
cmp
aas
cmp
(bad)
lods
(bad)
dec
addr16
pop
movs
lahf
cs
cmp
test
dec
mov
push
jmp
(bad)
call
dec
jecxz
xor
push
dec
push
in
xor
imul
xor
push
xchg
idiv
inc
lods
push
and
xchg
cs
mov
popf
mov
bnd
outs
inc
movs
cld
or
xchg
cmp
ja
xor
movs
sub
retf
(bad)
ins
xchg
and
cmp
rep
ins
je
sbb
shr
dec
rol
inc
jle
test
out
cmps
sub
jle
inc
es
xor
out
in
aam
movs
dec
into
imul
dec
lock
or
cmp
push
and
hlt
inc
add
dec
pop
bound
add
in
jns
xor
mov
sbb
add
and
jmp
aam
test
mov
or
and
push
mov
sub
call
sub
cdq
dec
outs
inc
stos
xchg
jb
daa
outs
fwait
aam
sbb
add
sub
xor
pop
push
stos
daa
pop
cmp
movs
mov
(bad)
push
je
(bad)
mov
push
pop
dec
push
aam
leave
sub
or
and
or
inc
push
pushf
and
out
iret
into
pop
dec
leave
inc
mov
mov
mov
mov
dec
ret
or
push
sbb
push
push
out
mov
sahf
mov
jecxz
jne
aad
es
in
and
scas
pusha
mov
fldcw
vmovntps
dec
into
ret
pop
repz
mov
imul
jge
add
out
mov
movs
jbe
fnsetpm(287
mov
sub
arpl
sub
xor
enter
xchg
je
xlat
cmps
hlt
adc
mov
arpl
inc
cwde
push
ja
lods
cdq
imul
int3
fldcw
push
xor
push
or
mov
lds
fidiv
adc
scas
ds
test
mov
cmc
jl
lock
cmc
shr
shl
mov
pop
sbb
or
dec
inc
aam
enter
frndint
outs
mov
sbb
les
loop
les
dec
sbb
and
sahf
jnp
and
test
imul
jns
test
xchg
inc
lds
mov
mov
shl
arpl
sbb
add
shl
mov
push
stos
jge
jno
imul
cmps
cmc
cmp
pop
imul
in
in
scas
jae
jno
fwait
xchg
cmc
adc
(bad)
mov
mov
out
mul
clc
jecxz
lea
and
out
xor
jno
jno
ret
mov
cmp
lods
aam
mov
mov
retf
jp
jb
add
jmp
pop
xchg
cmp
mov
mov
adc
mov
(bad)
mov
stos
push
or
push
sub
rcl
xlat
xchg
jecxz
mov
mov
jmp
mov
jg
pushf
mov
mov
xor
retf
xchg
jno
cmp
push
outs
pop
mov
dec
sar
repz
enter
and
cmp
xlat
movs
in
arpl
in
cmps
xchg
push
bound
pop
mov
and
jbe
add
jne
lock
sar
cli
or
int3
mov
mov
(bad)
cmps
fnstenv
mov
and
in
dec
jecxz
jns
inc
lock
and
dec
pop
(bad)
mov
mov
sti
sahf
scas
sbb
rcl
(bad)
adc
hlt
mov
dec
ds
mov
cmp
arpl
pop
push
push
cwde
sti
inc
rol
loopne
sbb
lock
mov
jle
jmp
retf
jg
jle
push
jge
and
pop
dec
inc
pop
es
mov
call
jb
pop
push
in
xchg
sub
jmp
pop
movs
xchg
ins
push
fwait
sbb
pop
push
pushf
sbb
dec
clc
cmp
(bad)
ins
sar
mov
addr16
dec
sub
mov
sbb
outs
sub
jmp
push
shl
fwait
add
mov
in
hlt
mov
push
icebp
mov
adc
clc
dec
scas
push
xchg
mov
(bad)
outs
dec
mov
mov
push
(bad)
cmovb
std
xchg
shl
lods
push
mov
stc
sub
iret
sbb
stos
in
outs
neg
ficom
(bad)
ror
(bad)
lds
daa
in
mov
and
push
aas
lahf
mov
cmp
rol
lods
mov
xchg
les
pop
int
pop
cmc
repz
cmps
stos
gs
inc
dec
mov
and
aam
cdq
mov
push
adc
pop
jmp
or
fiadd
pop
xor
push
daa
adc
mov
aad
imul
fld
xchg
cld
xchg
nop
stos
mov
lds
xlat
sub
cmp
out
dec
dec
std
sub
fist
not
xor
ror
jbe
cmc
sub
push
mov
fwait
push
jnp
cld
mov
stc
lds
cli
xchg
out
push
mov
adc
test
push
dec
das
mov
pop
gs
stos
js
test
popa
pop
push
mov
test
ret
inc
add
fidivr
mov
xchg
retf
adc
pop
inc
ins
pop
cs
out
pop
xor
mov
shl
repnz
sbb
push
lods
arpl
push
sahf
pushf
push
leave
sub
scas
outs
mov
stos
dec
lea
cmps
adc
lahf
nop
gs
lahf
add
retf
(bad)
mov
outs
aad
sbb
or
js
(bad)
out
jnp
mov
xchg
test
test
cmp
add
mov
lahf
mov
xchg
push
mov
scas
jo
push
push
psubw
sub
jae
cmp
jo
nop
jle
jp
push
hlt
rol
sti
and
jmp
lea
sahf
stc
test
int3
dec
sub
xchg
cs
into
aaa
(bad)
and
cmp
cmc
xchg
(bad)
scas
js
xor
and
push
adc
mov
sbb
loopne
idiv
mov
(bad)
and
ss
and
imul
(bad)
xchg
adc
outs
mov
inc
mov
xchg
(bad)
in
mov
(bad)
fucom
scas
retf
cli
xor
push
jno
mov
leave
xor
xor
jmp
div
jle
push
dec
mov
dec
lods
data16
fdiv
lahf
jo
mov
ins
jl
inc
stc
mov
lock
jecxz
lods
ss
xchg
pop
jae
fadd
pop
sub
add
aad
xchg
xchg
popa
inc
mov
nop
and
in
inc
cmp
sub
jbe
dec
mov
enter
sub
xchg
rol
call
(bad)
and
stos
aad
scas
not
repnz
ds
hlt
ror
dec
retf
movs
add
aaa
aaa
stos
pop
mov
pop
and
push
sub
add
out
je
daa
xlat
fwait
icebp
fwait
adc
and
cmp
sub
dec
enter
stos
cld
pushf
mov
or
mov
adc
jge
pop
mov
jns
(bad)
inc
mov
sub
neg
jp
push
es
xor
sahf
jno
and
call
repz
dec
push
bound
add
fiadd
sar
test
std
mov
inc
(bad)
call
imul
retf
arpl
in
ror
jp
pop
pop
sub
push
adc
mov
test
les
mov
mov
adc
xchg
aaa
jne
xchg
(bad)
stc
shl
adc
mov
sub
outs
and
add
jbe
mov
fisub
add
mov
cmp
mov
xchg
std
jp
iretw
in
cli
arpl
stc
push
xchg
scas
lea
cmp
cmovs
les
lds
cli
(bad)
out
xor
xor
es
in
les
mov
sub
xchg
add
push
addr16
add
pop
into
add
stos
cwde
movs
rol
dec
xchg
int
cmp
sbb
jmp
push
add
xchg
mov
sbb
mov
imul
mov
sub
pop
loope
sbb
sbb
jb
jmp
pushf
out
mov
xor
clc
dec
mov
retf
dec
ds
addr16
out
lods
mov
push
in
fbstp
clc
ret
mov
jecxz
adc
sbb
stos
stos
repnz
fst
pop
hlt
sbb
js
das
inc
stc
aas
xor
add
inc
int
lock
dec
sub
xor
les
lea
cld
addr16
sub
iret
(bad)
in
push
sbb
pop
xor
mov
addr16
imul
pop
mov
repnz
mov
xchg
lahf
retf
fidivr
push
inc
popf
xchg
retf
movs
jge
dec
popa
mov
pushf
or
cmp
repz
pop
xlat
iret
add
lock
popa
adc
jp
fsub
xor
jmp
imul
push
cmp
dec
dec
sub
inc
push
repnz
shr
jle
add
jge
scas
out
pop
adc
sub
sbb
ss
cmps
jno
sbb
mov
add
or
mov
daa
iret
or
out
inc
mov
(bad)
retf
pushf
cmp
push
add
enter
mov
scas
imul
call
jmp
pop
add
in
stos
rcl
mov
cmp
sar
push
(bad)
jmp
push
pop
jp
hlt
add
push
jle
mul
(bad)
xor
repnz
fistp
push
repz
cmp
add
xchg
ins
fwait
xor
shr
fldenv
cmp
lods
cld
data16
lods
in
std
loop
add
mov
inc
cmp
sub
ins
fld
or
sub
add
(bad)
jg
aam
mov
jl
lock
cmp
fs
aaa
mov
push
jle
call
cdq
xor
ficomp
in
jmp
fistp
jmp
scas
aaa
cmc
mov
or
enter
(bad)
fidiv
bound
mov
jbe
fstp
popf
jle
xchg
mov
cmps
jle
xor
aam
mov
adc
jno
mov
fcom
sub
add
xor
push
mov
into
add
mov
aaa
sti
cmps
aas
lock
xor
(bad)
cmp
mov
and
(bad)
shr
mov
pusha
(bad)
push
or
cmp
push
mov
retf
jg
push
dec
mov
test
dec
test
inc
xchg
in
mov
outs
pop
push
mov
or
movs
cmp
or
scas
sbb
lahf
outs
test
fucom
jo
movs
(bad)
xchg
mov
sub
es
sub
cmc
push
cli
dec
sbb
jns
mov
mov
mov
stc
test
add
test
adc
test
cdq
cdq
push
jmp
int3
mov
mov
mov
ins
imul
push
cli
push
jmp
push
dec
push
push
sub
sbb
jecxz
loope
sbb
mov
addr16
inc
ja
icebp
inc
out
pop
inc
ja
lods
pop
inc
dec
mov
shl
mov
cdq
mov
cmps
(bad)
push
xchg
test
and
add
rol
xor
xchg
call
bound
add
sbb
clc
mov
movs
ds
xor
mov
sub
aaa
cbw
xchg
push
sub
inc
cs
jl
cmp
jb
xchg
(bad)
rol
js
(bad)
xchg
repnz
push
sub
jmp
cmp
mov
fwait
xchg
out
mov
xchg
xchg
mov
movs
loope
(bad)
mov
leave
fsub
pop
jmp
add
popa
icebp
push
out
pusha
jecxz
and
(bad)
(bad)
sub
rol
sub
mov
idiv
hlt
cld
jl
neg
and
in
pop
cli
movs
sub
lock
jne
or
not
mov
push
jge
xchg
icebp
sub
jo
fdivr
(bad)
loope
add
push
js
push
push
es
cmp
inc
push
xchg
push
popa
ss
mov
pop
idiv
loop
in
repnz
pop
repz
test
or
rol
inc
dec
(bad)
xlat
or
icebp
les
mov
cs
pop
and
xor
test
jp
sbb
or
movs
jns
(bad)
sub
push
jo
cdq
movs
or
dec
or
mov
sahf
pop
dec
je
cdq
xchg
pop
jmp
sub
sbb
fwait
jns
push
pop
push
shl
into
fimul
out
(bad)
or
outs
mov
bnd
ret
fstp
xchg
out
jl
cli
test
sub
ficom
mov
call
push
pop
jp
push
sub
xchg
xadd
cmp
fisub
cmp
add
sub
je
jge
or
xor
imul
inc
cmp
ds
adc
ins
ja
inc
in
push
in
mov
(bad)
into
(bad)
repz
(bad)
mov
rol
movlhps
xor
call
scas
xor
outs
pop
jmp
retf
pop
js
xchg
je
pop
sti
aas
xor
sbb
pop
std
fwait
add
sahf
dec
inc
mov
test
(bad)
dec
jno
mov
out
jno
add
sbb
std
test
mov
icebp
in
push
mov
stc
call
(bad)
das
sti
call
ins
cdq
jge
repnz
das
xchg
fwait
out
and
pop
xor
mov
push
aad
(bad)
dec
call
test
add
out
sahf
scas
xor
(bad)
(bad)
mov
lock
call
int3
sbb
lock
cmp
das
pop
inc
loop
mov
xor
and
mov
mov
push
mov
sbb
dec
and
xlat
or
rcl
daa
ja
pop
pop
ror
ror
sub
sbb
shl
test
cmp
pmaddwd
js
je
adc
adc
jmp
push
sub
lahf
fst
sar
es
ins
in
xchg
test
sti
aas
xor
cmc
jnp
test
ins
adc
jl
and
adc
not
fs
xor
xchg
pop
inc
and
cmp
sub
int
rcl
jns
push
xchg
dec
jb
into
repnz
add
repz
loope
cs
mov
adc
xor
or
fsubr
push
out
and
push
dec
mov
in
push
leave
in
inc
loop
jl
ss
push
sub
repnz
imul
jae
xor
pop
add
push
cmp
inc
and
fdivr
xchg
ret
or
xor
(bad)
test
mov
cmc
imul
and
fcomp
mov
jmp
add
stc
ds
pop
aaa
dec
dec
out
xchg
ss
xchg
hlt
add
sub
xchg
sub
cdq
jecxz
cmp
mov
dec
les
shl
xchg
cli
call
mov
push
xchg
xchg
jae
mov
xchg
mov
ins
sbb
(bad)
jae
lds
jns
cmp
out
xchg
fidiv
lea
fucomp
add
adc
sbb
mov
daa
mov
cmps
je
ja
(bad)
and
ror
sub
pop
add
and
aad
gs
retf
push
movs
sub
add
inc
jns
pop
icebp
fcomp
shr
mov
mov
push
daa
pusha
test
cdq
mov
push
test
aas
cmp
popf
sbb
gs
jno
ja
push
hlt
in
xchg
outs
and
add
int3
mov
push
fisubr
and
out
retf
enter
sbb
cmp
xchg
mov
push
hlt
sbb
xchg
cdq
mov
(bad)
lock
xor
jl
lods
sbb
or
or
push
mov
jne
xchg
mov
adc
xor
sbb
ret
push
aas
call
lods
inc
retf
sbb
push
icebp
fild
stos
cmp
call
lods
jmp
or
movs
adc
mov
or
(bad)
jle
outs
dec
and
test
lahf
inc
fwait
and
pop
mov
push
jg
aas
cmp
xchg
ds
repz
push
and
lahf
cmps
push
xor
cmps
pop
fild
cmps
pop
sub
jle
pop
fisubr
shl
mov
jecxz
dec
xor
aam
inc
or
xor
push
gs
cmp
cmp
dec
mov
mov
sub
or
repz
mov
rol
xchg
inc
inc
xchg
fsin
ja
push
add
push
adc
test
lods
pop
lds
jg
retf
outs
jge
fidiv
js
jle
fxch
and
dec
inc
fnsave
push
dec
imul
dec
mov
pop
loope
in
cmps
sar
and
xor
jg
sub
mov
fdivr
sbb
inc
pushf
enter
mov
mov
sub
push
jmp
mov
cmovg
pop
dec
sahf
dec
gs
icebp
in
test
mov
aad
adc
jno
mov
imul
pop
in
push
lahf
out
(bad)
dec
xor
dec
jae
mov
cdq
hlt
clc
or
xchg
jnp
test
cmp
jge
xor
cld
jmp
cwde
stos
inc
jbe
or
cwde
aas
imul
and
push
daa
in
jne
and
rol
mov
add
jb
stos
dec
mov
stos
icebp
or
aad
in
ret
mov
cld
push
adc
(bad)
in
xchg
fld
cs
sbb
add
push
pop
lea
dec
adc
sti
dec
mov
sub
sbb
pop
and
dec
xor
and
ficom
(bad)
data16
mov
cld
add
push
dec
ds
cmp
mov
jp
xor
rcl
push
pop
aad
or
fsubr
(bad)
addr16
sub
push
retf
pop
jo
jo
leave
sti
pop
add
adc
in
lahf
add
shr
icebp
enter
inc
cs
dec
(bad)
sar
pop
sbb
iret
jl
inc
jl
pop
sbb
into
push
in
push
test
dec
addr16
fld
rcr
mov
movs
inc
jecxz
mov
mov
aam
jbe
jne
cdq
xor
dec
shl
test
imul
adc
dec
add
ret
mov
imul
push
stos
jo
ret
mov
lock
clc
cwde
das
add
in
push
jle
and
jnp
cmps
lods
mov
lods
fst
pop
push
xor
xchg
ins
push
(bad)
sub
mov
mov
push
mov
jg
mov
pop
fld
pop
cmp
jle
push
lahf
cmp
jg
aad
rcr
xchg
sub
(bad)
jb
pop
iret
adc
mov
mov
inc
jnp
push
xor
mov
fcmovnb
std
and
gs
ret
jmp
pop
lods
mov
sahf
dec
test
jbe
or
dec
sub
into
mov
xchg
sbb
repz
stos
outs
push
lds
icebp
sub
stos
mov
dec
sar
xchg
loop
jge
bound
dec
iret
or
adc
mov
cmp
add
ja
xchg
shl
loopne
hlt
popf
push
mov
jecxz
pop
xchg
cmp
add
fldcw
xor
add
std
push
or
(bad)
mov
fs
call
or
ss
int3
pop
and
pop
jmp
mov
pop
pop
fs
into
inc
and
fisttp
dec
xchg
(bad)
shl
inc
sbb
mov
cmp
(bad)
jge
ds
fidiv
jmp
jge
out
jns
sub
cmp
pop
xchg
xor
in
push
in
popf
(bad)
mov
mov
mov
mov
sub
mov
push
sbb
arpl
imul
rcr
test
imul
pop
xor
mov
xor
nop
add
and
sbb
enter
push
popa
cmp
mov
mov
lahf
xchg
xor
movs
push
push
inc
sbb
out
shr
rcr
sar
fsub
sbb
loopne
pop
retf
xor
and
mov
(bad)
mov
jae
push
and
mov
jns
fild
jecxz
xchg
ret
mov
jne
jb
imul
jl
(bad)
movs
data16
shr
pop
push
xchg
mov
xor
shl
out
jo
retf
clc
xchg
call
xor
xor
fsub
dec
loopne
es
push
or
cmps
rcr
xchg
and
mov
inc
repz
add
idiv
sbb
or
stos
fdiv
sbb
(bad)
jg
cmp
add
xor
mov
push
inc
ret
pop
fist
cmps
retf
sti
or
xchg
mov
dec
and
inc
retf
shl
(bad)
cwde
add
shl
ror
dec
cmp
ret
pop
cdq
sub
xor
hlt
fidivr
adc
mov
sbb
jge
ins
mov
jns
push
movs
dec
and
adc
or
mov
rcl
pop
cmp
ss
push
cmp
pop
and
mov
es
mov
enter
and
and
adc
lea
cmp
adc
and
(bad)
outs
push
out
test
mul
fucom
out
icebp
nop
mov
sbb
adc
sub
pop
mov
lods
xchg
mov
stos
xor
psrld
mov
mov
pop
inc
jno
(bad)
ret
sbb
call
sub
mov
cmp
jae
std
iret
pusha
add
mov
pushf
rol
sub
gs
sub
dec
mov
sti
pop
and
inc
in
push
add
mov
xchg
rcr
sbb
shl
mov
aaa
(bad)
adc
outs
lods
adc
ror
fidivr
mov
fsubr
(bad)
mov
and
mov
test
out
mov
movs
jno
pop
mov
clc
pop
adc
mov
aas
hlt
cmp
std
xchg
jne
add
cmp
mov
sub
cld
mov
mov
mov
sub
ins
sbb
jno
xchg
jns
test
stos
cwde
jo
push
lock
bswap
push
sbb
pop
mov
push
stos
push
jl
cmp
cmp
(bad)
call
out
inc
movs
sbb
dec
jne
sbb
jnp
aaa
inc
xor
sbb
outs
ins
push
fild
aam
cmps
mov
mov
mov
ins
cmp
addr16
test
fcomp
scas
inc
out
adc
stos
and
jb
call
shl
xchg
(bad)
mov
repnz
xor
xor
fwait
adc
xor
add
arpl
mov
imul
dec
ins
cmp
sbb
cdq
dec
xchg
ror
fistp
hlt
fs
ror
movs
and
jmp
inc
es
out
mul
inc
dec
enter
dec
pop
test
jl
(bad)
cdq
jbe
push
out
push
test
imul
out
jnp
jne
popa
imul
push
mov
bound
add
inc
test
not
out
lea
adc
pop
mov
ret
pop
push
jl
xchg
(bad)
ds
retf
fwait
cmps
jns
jmp
outs
xor
mov
mov
adc
push
shl
xchg
pop
pop
int3
loope
sub
imul
test
sub
fiadd
cmp
lds
push
aam
scas
pop
inc
int3
adc
sar
push
loop
hlt
adc
jbe
mov
jnp
xor
sub
call
out
fs
fistp
dec
aaa
fcom
xor
imul
addr16
or
movs
ins
retf
or
jle
fist
mov
mov
cmp
ss
in
stc
shl
or
mov
ror
clc
mov
fsubr
icebp
movs
(bad)
pop
adc
push
mov
mov
cmp
inc
mov
arpl
call
mov
adc
es
add
push
pop
xor
inc
push
cwde
pop
and
push
test
xchg
retf
leave
outs
lods
sbb
jecxz
arpl
xor
cdq
in
sbb
mov
adc
mov
and
cdq
pop
inc
sti
sub
push
and
(bad)
sub
rol
retf
ret
sbb
adc
or
imul
pop
pop
cmp
push
movs
push
lods
movs
call
or
in
call
rol
mov
jo
out
sub
xor
mov
aam
jp
sub
popf
mov
add
retf
xchg
adc
push
(bad)
jge
enter
hlt
or
jp
imul
push
mov
push
pop
jb
shl
loop
add
dec
cmps
retfw
jo
js
(bad)
in
mov
sbb
ss
ja
test
ret
sub
fcom
jae
nop
jge
int3
out
ins
pop
push
jge
push
mov
sbb
cmp
dec
movs
clc
test
sti
fstp
pop
add
mov
rol
mov
aad
sub
mov
ja
enter
(bad)
push
jmp
and
call
popa
jecxz
arpl
fld
out
inc
cmp
pop
cmp
pop
nop
nop
(bad)
mov
jbe
add
pop
and
not
adc
dec
mov
cmp
in
sar
xchg
pop
xchg
pop
pop
jmp
push
(bad)
push
inc
ret
mov
cli
adc
add
and
cmp
rcr
mov
out
mov
daa
jae
push
pop
pop
dec
adc
fs
das
push
(bad)
and
test
aaa
or
or
ja
mov
div
fwait
mov
mov
cmc
cmp
mov
lds
bound
dec
mov
cdq
leave
jp
mov
stos
idiv
lods
movs
(bad)
pop
les
ss
stos
mov
mov
jge
ss
in
hlt
out
shl
inc
test
or
imul
mov
bnd
mov
cdq
test
push
sub
and
fadd
stc
std
pop
ret
cmps
sbb
lahf
inc
push
cmp
mov
cmps
pop
push
cmps
fld
fbstp
push
in
lahf
popa
js
aam
adc
cmp
popf
aad
rcr
retf
cmp
cwde
nop
in
popa
push
in
mov
push
or
dec
jno
rcr
out
(bad)
xor
add
xor
std
adc
pop
and
cmp
jne
cmp
push
jo
leave
adc
pop
(bad)
in
movs
and
rol
jg
add
mov
or
adc
xor
cmp
stc
xchg
or
das
rcr
jg
ret
stos
or
loop
pusha
and
mov
and
lock
cmp
mov
arpl
add
stos
mov
mov
clc
or
mov
cmp
test
fist
jl
test
inc
stos
rol
in
ja
test
ret
mov
out
inc
push
ror
fmul
popa
add
jmp
mov
jbe
test
or
xor
xor
movs
jno
or
ffreep
movs
add
or
test
dec
jl
push
cmp
(bad)
dec
retf
sub
out
xor
retf
and
fwait
scas
leave
jl
and
inc
(bad)
cmp
cmp
cwde
mov
aaa
push
jg
fild
inc
ss
fild
repz
add
or
and
ins
dec
xor
xchg
pop
and
lea
dec
fbld
ss
pop
add
inc
aas
pop
out
or
fcom
ss
or
out
popf
test
adc
test
test
add
jp
test
add
or
push
xor
retf
dec
into
adc
inc
std
adc
arpl
jecxz
xchg
mov
call
(bad)
cmc
(bad)
(bad)
xchg
(bad)
jle
fdivr
rcl
pop
xchg
lods
(bad)
in
test
mov
cwde
loop
sbb
cmp
ja
mov
sbb
dec
repz
dec
(bad)
mov
aam
mov
outs
sbb
fs
pop
jg
cmc
pop
and
lahf
cmp
and
popf
lods
sbb
cmp
inc
dec
inc
push
cli
imul
cmp
xor
and
addr16
loope
sbb
lock
fs
push
retf
add
int
out
jecxz
sub
or
sbb
xchg
retf
xchg
pop
enter
mov
fisttp
popf
adc
sub
jecxz
enter
push
repnz
dec
jle
(bad)
mov
push
mov
sar
mov
nop
sbb
jecxz
scas
mov
pop
mov
cmp
xlat
movs
leave
mov
add
dec
stos
push
dec
dec
push
mov
adc
push
sbb
faddp
dec
aad
ins
jbe
mov
mov
sbb
push
ror
inc
xor
lods
je
ror
jg
xor
in
or
out
call
push
push
sbb
cmps
das
imul
inc
xchg
xchg
loope
ds
es
test
jmp
push
lea
xchg
jge
out
xchg
dec
add
xchg
aas
pop
fidivr
leave
dec
clc
shl
mov
pop
fstp
mov
xor
outs
js
inc
rcl
xlat
adc
jmp
jno
clc
and
sbb
test
or
cld
ss
cld
in
int3
(bad)
mov
arpl
mov
ror
or
sbb
sbb
add
adc
fs
mov
or
mov
mov
jmp
leave
mov
jo
test
dec
xbegin
ss
ins
aaa
call
add
movs
or
mov
mov
xor
pop
and
(bad)
xchg
outs
movs
sbb
cli
push
sub
into
xor
in
or
(bad)
pop
ja
pop
mov
or
inc
cmps
push
push
or
jns
inc
sub
adc
je
stc
ins
push
rcl
cwde
(bad)
ret
into
mov
ja
xchg
push
dec
jns
das
mov
push
dec
inc
imul
enter
adc
sub
(bad)
cdq
or
mov
mov
adc
hlt
ds
mov
mov
sbb
and
xchg
sbb
and
sbb
jecxz
inc
aad
aaa
sub
clc
jmp
ins
sbb
data16
sar
dec
shl
mov
add
cld
cmp
(bad)
mov
cmp
repnz
scas
mov
sub
jo
rcr
jl
sbb
sti
cwde
loope
push
bound
fisttp
push
idiv
sub
or
mov
test
mov
pop
mov
outs
adc
push
mov
add
(bad)
sub
aam
dec
fnstsw
movs
jo
xchg
and
cmp
push
sub
mov
cmps
outs
or
scas
xchg
xor
xor
push
lahf
xchg
dec
mov
test
mov
ror
and
je
cmp
add
add
shr
adc
out
aas
sbb
lds
(bad)
bound
aaa
push
dec
(bad)
add
xchg
or
fsubr
jl
aam
cs
inc
cmp
add
je
test
mov
adc
popa
mov
xchg
ins
(bad)
adc
push
inc
xchg
lea
cld
push
pop
pop
xchg
push
(bad)
retf
loope
fcom
stc
test
outs
add
mov
popf
and
xchg
add
push
xchg
dec
pop
clc
ret
mov
pop
aas
add
mov
cld
inc
xchg
(bad)
stc
je
and
and
cli
push
nop
jne
cld
sar
adc
dec
inc
adc
pop
or
push
loope
or
mov
inc
or
push
and
pusha
mov
(bad)
mov
jg
(bad)
fild
sbb
bound
out
mov
jne
sbb
aad
mov
retf
out
jnp
(bad)
pop
sub
mov
cmc
dec
out
mov
push
test
sbb
lahf
pushf
lods
fld
es
xchg
push
cmc
sub
mov
mov
int
paddq
xor
xor
push
jne
into
jae
lahf
dec
ror
cmps
int3
shrd
add
jmp
gs
mov
sub
repz
fnsave
and
jp
pop
scas
xor
pop
fnstenv
movs
mov
pop
adc
mov
cli
dec
sbb
xor
popf
int
xor
pop
pop
shl
add
outs
scas
out
lds
and
dec
and
scas
iret
jecxz
(bad)
(bad)
ja
neg
ins
ret
neg
(bad)
shr
lahf
inc
dec
xor
or
push
retf
loop
push
sbb
aam
shl
pop
shl
pop
pop
mov
std
pushf
rcr
pop
aas
inc
retf
(bad)
test
xchg
sbb
xchg
mov
nop
add
dec
pop
mov
push
or
or
push
test
mov
mov
rcr
lods
mov
mov
mov
cs
push
mov
xchg
(bad)
fsqrt
ss
xchg
xchg
adc
pop
pop
jg
retf
fdivrp
out
jmp
jbe
xor
jle
(bad)
fcomp
or
mov
inc
mov
and
popf
in
not
aad
aas
xchg
test
rol
lock
pop
pop
mov
lods
cmp
js
mov
xor
pop
mov
cmp
add
or
mov
cmp
cmc
mov
int3
mov
adc
dec
fdiv
lea
sub
inc
stos
aas
sub
fadd
or
sub
std
pop
pusha
mov
add
jg
jle
mov
out
cmps
jg
int
xlat
add
add
xchg
mov
lock
test
out
in
push
outs
pop
fcomi
(bad)
mov
xor
jno
loopne
pop
xchg
jg
cdq
mov
cs
mov
mov
lock
daa
into
imul
and
mov
add
cwde
pop
sub
maskmovq
mul
add
xchg
xchg
or
push
mov
xchg
hlt
mov
xor
and
dec
xlat
lahf
lahf
mov
push
aad
ret
push
or
call
movs
scas
int3
stos
add
cmc
push
push
repnz
call
test
scas
arpl
sub
cwde
les
jbe
inc
clc
fs
jg
mov
ins
jp
rcr
mov
dec
jbe
out
add
ja
inc
leave
ins
jbe
iret
dec
push
adc
loope
push
in
sahf
jmp
dec
mov
sbb
or
movs
(bad)
cmp
aaa
push
sbb
ror
ins
retf
call
jmp
and
or
test
js
pop
(bad)
nop
stos
in
hlt
dec
cmp
daa
loopne
ss
dec
sbb
push
mov
pop
loope
fsub
xchg
jbe
mov
add
mov
stos
inc
stc
in
xchg
(bad)
repnz
lods
or
(bad)
mov
int
neg
ins
div
aam
mov
inc
in
bound
sub
cmc
test
cmp
xor
or
xchg
and
inc
aas
cmps
ror
repnz
bnd
mov
(bad)
js
mov
inc
mov
addr16
rcr
xchg
jg
in
sbb
popf
aas
call
loope
adc
arpl
gs
jns
xchg
xlat
adc
xor
das
(bad)
not
add
mov
push
xchg
stos
add
mov
jns
hlt
sbb
mov
and
movs
mov
mov
and
mov
or
pop
push
jb
push
push
add
mov
dec
adc
sub
pop
mov
mov
mov
xor
aad
rcr
and
inc
mov
out
jmp
jl
psubd
xor
push
sahf
sti
(bad)
js
imul
pop
gs
jo
in
push
popa
or
inc
inc
and
xchg
mov
inc
sub
xor
dec
cmp
call
fdivr
dec
xchg
lods
mov
repz
mov
clc
xchg
pop
outs
xlat
jp
jle
rcr
test
retf
adc
and
imul
cmps
(bad)
shl
(bad)
out
lods
inc
lods
and
jb
lock
pop
das
xchg
dec
rcr
lea
out
pop
(bad)
jno
out
(bad)
mov
outs
cmps
push
add
xchg
in
sti
enter
data16
push
mov
xor
sbb
mov
sub
mov
sbb
inc
xor
jmp
movs
pop
dec
es
repnz
xchg
xchg
and
mov
das
pop
leave
(bad)
int
mov
out
arpl
add
lods
lea
mov
adc
movs
pop
push
scas
lods
sub
and
pop
pop
clc
sbb
sub
inc
push
xor
in
pop
int3
cwde
out
inc
push
in
bnd
push
pushfw
outs
mov
mov
mov
and
jge
(bad)
mov
or
popf
and
sub
popa
(bad)
xchg
pushf
clc
std
mov
dec
cmps
jmp
inc
shl
push
jmp
and
pop
xchg
enter
sar
mov
sub
movs
xchg
push
push
(bad)
jmp
push
xchg
xchg
clc
cmp
aas
cwde
jb
xchg
adc
or
shl
xchg
or
cmp
pushf
inc
out
push
inc
adc
out
shr
cmp
push
cmp
push
adc
jmp
inc
test
xor
addr16
loope
outs
pusha
shl
leave
mov
outs
nop
cmp
pop
adc
lock
outs
dec
iret
stc
in
cmp
popa
stos
(bad)
sbb
jle
in
mov
push
jp
add
rcr
adc
pop
xor
sbb
inc
push
inc
movs
pop
and
mov
pushf
jno
xor
adc
(bad)
xor
inc
test
push
cs
xchg
movs
mov
(bad)
mov
repnz
mov
push
mov
xor
fldcw
pop
in
jmp
jo
mov
shr
test
or
jle
xor
push
cmp
repz
push
popf
(bad)
cld
push
push
sub
icebp
push
ja
push
mov
cmc
adc
fwait
popf
inc
je
les
jp
sar
sbb
cmp
dec
xor
jnp
aaa
shr
adc
jp
test
in
dec
mov
xor
inc
jae
fisub
jne
mov
dec
inc
push
fnstcw
push
mov
mov
aad
xor
dec
jp
cmp
data16
sbb
pop
int
xchg
and
pop
mov
adc
xlat
and
push
and
(bad)
loope
pop
outs
or
les
mov
xor
push
data16
ftst
and
aad
or
out
mul
inc
pop
(bad)
xchg
pop
pop
arpl
inc
sub
mov
imul
fnop
fadd
mov
into
fidiv
loop
in
out
xchg
jg
in
jo
ins
or
into
out
das
(bad)
cmps
js
neg
pop
fst
xchg
adc
xchg
sub
das
jecxz
and
jmp
or
retf
cs
ror
jae
adc
cmps
test
or
jle
jae
push
aad
daa
sub
push
in
xchg
sti
in
imul
inc
or
dec
xchg
push
outs
fild
je
ret
mov
inc
jle
xchg
out
push
loope
pop
test
cwde
add
rcl
stc
xor
ret
xchg
outs
addr16
(bad)
mov
inc
loope
mov
mov
test
loope
mov
test
gs
ds
pop
fsubr
test
mov
enter
mov
test
push
popa
or
sub
imul
xchg
sbb
pop
adc
jecxz
xor
mov
mov
pop
cld
out
imul
xor
xchg
scas
mov
adc
mov
shl
dec
bound
jne
xor
dec
mov
imul
ja
inc
and
or
pusha
cmp
mov
fild
shl
mov
mov
ss
adc
pop
out
ins
sbb
outs
mov
adc
call
repnz
push
push
push
fcomp
adc
push
xor
int3
das
cmp
addr16
xlat
ret
js
cli
lock
inc
lock
mov
ret
mov
dec
loope
inc
sahf
xchg
bound
popf
fcmove
dec
bnd
sub
xchg
xchg
mov
pop
mov
shl
xor
push
into
sub
hlt
mov
test
xchg
fnstenv
in
call
jg
xchg
fnstcw
out
and
push
adc
movs
and
jp
ins
movs
cmp
cmp
dec
fs
sub
mov
cmc
mov
test
mov
stos
adc
fst
in
out
jmp
and
cwde
scas
cmp
fstp
lock
mov
retf
popf
(bad)
mov
or
pop
add
nop
mov
mov
mov
push
test
jle
int
jp
lds
jne
sub
mov
inc
js
ret
and
push
mov
adc
cmps
icebp
pop
xchg
fs
xlat
std
jp
mov
mov
mov
test
dec
sbb
and
shr
mov
daa
test
xchg
mov
movups
pop
push
xchg
mov
mov
fld
pop
in
movs
cmp
icebp
mov
jmp
adc
stos
mov
push
out
(bad)
jmp
or
add
and
adc
outs
scas
dec
dec
jle
shl
fwait
mov
adc
mov
inc
sbb
sbb
mov
das
test
push
into
add
xor
fnsave
pop
jo
je
out
fsub
adc
pop
mul
sbb
pop
call
cli
hlt
ins
adc
jmp
sub
xlat
push
enter
adc
adc
push
loope
in
out
in
test
stos
(bad)
jns
mov
fs
retf
xchg
inc
fst
and
sbb
cmp
ins
push
push
and
xchg
xor
mov
mov
dec
cmp
out
out
jbe
sbb
fs
and
call
add
js
add
es
mov
clc
mov
cmp
push
adc
das
adc
outs
push
xor
pop
push
fidiv
xchg
jo
sar
sbb
jno
and
lahf
outs
add
pop
jle
cmps
mov
dec
int
sar
cdq
xchg
cmp
pop
adc
mov
je
pop
js
imul
xor
clc
xchg
ds
loope
jne
ficomp
pop
xchg
fild
add
or
repz
adc
push
adc
add
aad
cmp
in
scas
push
pop
aaa
xor
push
xor
xor
imul
mov
lea
pop
xor
xor
push
in
test
mov
out
sub
popf
les
xor
scas
or
mov
mov
(bad)
fisubr
enter
jmp
mov
push
stos
imul
xchg
sbb
push
inc
fistp
inc
adc
daa
cdq
and
test
xor
xchg
inc
js
ret
shr
dec
and
pop
mov
push
and
mov
mov
cmp
add
leave
push
push
push
daa
xor
arpl
push
shl
mov
imul
dec
ins
in
fs
cmc
adc
es
mov
xor
data16
adc
pop
add
in
out
das
sub
iret
(bad)
arpl
loopne
or
pusha
dec
pop
test
jge
(bad)
out
gs
xor
fwait
add
mov
xlat
stos
int
dec
mov
test
outs
xor
cmp
mov
push
mov
test
out
sub
fbstp
cmp
into
mov
jecxz
mov
dec
jg
cmp
jne
adc
jnp
xchg
fld
ins
adc
out
or
ja
das
adc
jae
mov
jns
adc
shl
arpl
mov
inc
fisubr
xchg
loope
(bad)
cwde
stos
imul
mov
dec
inc
repz
sbb
mov
call
inc
arpl
push
jp
es
add
and
cmp
pop
dec
pop
sbb
or
adc
cs
outs
test
jp
inc
ja
cmp
adc
stos
mov
popf
dec
mov
sbb
adc
inc
adc
push
push
cmp
fld
adc
push
call
cli
ins
gs
pop
jae
jns
mov
popf
(bad)
cdq
jne
loop
inc
scas
pop
dec
lods
cdq
add
adc
fbld
xchg
loopne
retf
cmp
out
loopne
xor
inc
test
xchg
push
cmps
cwde
and
jmp
mov
ss
pop
mov
sar
mov
adc
icebp
out
cdq
aad
sub
or
stc
rcr
sub
rcr
cdq
jbe
aam
pop
(bad)
scas
cmp
push
repnz
hlt
jnp
or
imul
push
xor
sub
dec
aam
sbb
and
dec
mov
push
mov
addr16
nop
loopne
loopne
fwait
xor
aas
imul
aam
xchg
call
cmp
xchg
mov
cmp
scas
cmc
sbb
test
jb
aaa
inc
in
add
push
or
add
dec
int
je
loop
sub
inc
adc
cmps
rol
mov
cdq
rcr
ss
div
clc
jo
(bad)
into
push
retf
loopne
jmp
pop
jns
gs
xor
jmp
xchg
test
xchg
arpl
js
jo
lods
call
cmps
cmp
adc
add
add
mov
or
push
icebp
jge
inc
or
xchg
movs
cmp
jle
sbb
xchg
jp
cld
xchg
(bad)
and
ins
dec
popf
xor
inc
sbb
ja
lods
in
inc
mov
pop
pop
test
mov
aaa
shl
adc
push
sub
jmp
repnz
ret
out
loope
enter
push
xchg
rol
fiadd
mov
dec
fwait
(bad)
std
mov
aas
adc
jle
inc
add
dec
and
mov
cmp
jge
enter
and
dec
rcl
sub
or
mov
dec
imul
sub
mov
leave
stos
xor
popa
leave
ret
ret
mov
xchg
aam
xchg
xor
test
popa
sbb
retf
mov
inc
pop
push
mov
xchg
test
cmpps
inc
rol
cli
lea
pop
div
mov
pop
mov
popa
dec
xor
ret
jp
test
cmp
std
inc
and
mov
xchg
mov
push
inc
mov
test
js
jo
xchg
lahf
mov
pop
pop
fdiv
test
test
lods
push
mov
inc
xchg
icebp
push
rcl
addr16
xbegin
inc
data16
nop
outs
sar
aam
or
pop
add
aaa
fs
cli
mov
sub
(bad)
in
enter
and
mov
fsub
jns
inc
nop
outs
push
iret
mov
xchg
(bad)
jg
out
test
mov
cmps
jbe
dec
fs
in
xchg
push
(bad)
mov
jne
rcr
cmp
push
mov
lea
inc
mov
pop
icebp
outs
add
xchg
es
in
inc
retf
ret
mov
mov
pop
pusha
pop
dec
jmp
lahf
mov
int3
push
cmps
cld
inc
xchg
arpl
jp
(bad)
cdq
mov
pushf
push
xor
loop
rcr
xchg
aam
add
pop
loope
xchg
daa
icebp
push
cmp
cmp
cmp
add
mov
shr
jo
hlt
aad
jb
xor
add
cmp
iret
push
mov
ja
popa
pop
out
xor
xor
idiv
movs
not
gs
mov
aaa
sub
iret
call
xor
popf
pusha
pop
cld
inc
inc
jo
mov
jb
bound
pusha
sbb
ja
mov
sbb
or
xor
(bad)
jmp
lods
out
lahf
in
jecxz
and
xchg
stos
mov
stos
add
in
mov
xchg
arpl
and
pop
pop
inc
mov
inc
repz
test
ret
movs
fadd
add
mov
sub
retf
push
out
xchg
ins
or
test
sbb
fsub
inc
or
jle
inc
out
bound
fimul
fistp
jge
imul
mov
jns
aad
mov
cmp
lock
sbb
xor
scas
(bad)
gs
lds
mov
add
scas
push
adc
fiadd
mov
add
add
jmp
sbb
lods
aam
inc
adc
fisub
test
loop
sahf
shl
push
imul
cmp
rcl
lods
sub
call
clc
hlt
dec
adc
pop
call
push
and
je
dec
std
dec
and
mov
inc
mov
xor
sub
jmp
call
xchg
jo
mov
xor
pop
cmc
stos
lds
add
sar
inc
gs
icebp
imul
push
xor
fdivr
xor
out
lea
mov
ret
cs
mov
push
scas
pop
popa
and
cmps
pushf
push
pusha
ins
cli
xor
aam
mov
mov
dec
inc
shl
jecxz
mov
dec
or
cmp
fwait
jne
cmp
inc
add
cmp
(bad)
jmp
or
mov
lds
mov
out
xchg
mov
int3
int3
in
dec
in
xchg
mov
mov
push
pop
mov
call
rcr
mov
in
(bad)
loope
(bad)
and
sbb
mov
div
inc
mov
test
or
int
ja
inc
cmc
in
mov
push
pop
push
les
push
and
or
or
ja
sbb
and
in
pusha
xor
int3
ret
cmp
jns
adc
rcr
mov
dec
aas
out
stc
jno
cmps
loope
pop
jmp
pop
cmp
sbb
push
es
sbb
retf
cmp
movs
pop
mov
fadd
test
lea
jns
mov
sbb
push
xchg
xor
syscall
fiadd
mov
cmps
leave
add
xchg
int
pop
sbb
stos
pop
sub
shr
add
mov
test
repnz
jbe
mov
cmps
dec
xchg
fcom
sbb
xchg
ret
mov
lds
retf
mov
adc
xchg
dec
push
push
sahf
ror
dec
inc
and
mov
mov
popf
icebp
fnsave
xchg
sub
add
fnstenv
dec
int
mov
cmp
ss
aad
pop
inc
adc
fucom
pop
xor
nop
hlt
xor
sub
mov
jae
and
std
mov
sub
mov
cmp
sub
cmp
adc
mov
pushf
pop
xchg
inc
mov
cli
or
mov
push
xchg
and
push
mov
dec
inc
fcomp
leave
(bad)
and
mov
and
lds
sbb
bound
push
cwde
scas
and
fimul
adc
arpl
adc
in
lea
mov
scas
scas
lods
dec
retf
in
test
mov
das
loope
lahf
dec
es
mov
dec
jmp
and
repz
call
addr16
std
retf
cmp
fsubr
cdq
sahf
and
movs
out
je
mov
out
fild
outs
or
jnp
jae
lahf
mov
xor
jmp
stos
sahf
clc
lds
xchg
and
adc
ja
xor
cs
gs
aas
scas
sbb
mov
sub
push
retf
jnp
jns
(bad)
and
xchg
add
and
inc
push
mov
adc
sub
cld
(bad)
popf
jecxz
mov
jb
dec
scas
out
ret
daa
sbb
rcr
and
(bad)
in
push
stc
ins
retf
cmps
call
push
mov
clc
add
hlt
pop
push
in
pop
add
push
cmc
inc
adc
xor
or
scas
mov
inc
(bad)
jp
add
lahf
pushf
push
xchg
and
sub
imul
pop
xchg
and
repnz
stc
cwde
sub
mov
retf
adc
movs
and
test
sahf
in
dec
cmp
inc
jmp
(bad)
out
pusha
jbe
popf
dec
inc
ins
pop
rcl
imul
cmp
movs
mov
not
fwait
ins
test
out
push
sub
(bad)
pop
int3
xchg
cmc
jg
pop
sahf
imul
ja
add
push
stc
mov
ret
shl
fistp
inc
jnp
mov
jmp
push
jp
into
sar
int
mov
ja
sub
adc
cmp
popa
push
out
push
shl
daa
and
add
or
inc
mov
add
enter
dec
addr16
data16
aam
pop
fbstp
inc
xor
rol
mov
cmp
je
in
sbb
sti
sub
movs
adc
push
jb
push
fld
xor
mov
mov
jge
aad
adc
jno
adc
cmp
les
jecxz
or
and
outs
loope
cmp
pop
mov
inc
adc
xlat
adc
jp
sub
push
sbb
iret
cli
push
sub
and
(bad)
sub
and
cmp
pop
sahf
cld
sub
mov
push
(bad)
sbb
icebp
lods
inc
pusha
stos
mov
jmp
add
in
lahf
call
inc
and
sbb
cmp
mov
mov
or
es
lods
inc
imul
push
(bad)
gs
scas
or
popf
iret
ret
stos
cmps
lods
call
js
outs
fs
mov
stc
cmc
clc
pop
into
jnp
jg
and
icebp
daa
aad
dec
push
cmc
inc
and
stos
int3
sub
or
cmps
into
xchg
loop
movs
mov
cmp
je
or
test
mov
xchg
xor
jl
rcr
mov
jecxz
cld
and
test
and
pusha
dec
das
shl
shl
push
mov
out
mov
sti
push
adc
cmp
cmp
xchg
push
xor
jns
ins
mov
into
sbb
dec
lods
aad
xchg
pop
and
or
push
ror
push
std
mov
fcomp
test
push
push
test
fidiv
stos
push
mov
push
in
scas
shl
lea
sbb
cmps
mov
mov
rcl
fistp
loope
sbb
mov
iret
or
sub
cmc
cwde
lahf
pushf
stos
ret
sahf
adc
sar
ror
inc
test
xchg
(bad)
mov
cmp
jb
pop
pop
or
or
xlat
jl
mov
stos
or
and
ret
sar
cmps
sahf
test
rcl
in
popf
cwde
ins
imul
loopne
xchg
int
lea
push
mov
fadd
dec
(bad)
fsubr
xor
out
ror
pop
or
gs
repz
(bad)
in
mov
push
pop
mov
cdq
jge
xchg
dec
cmp
mov
call
adc
add
(bad)
out
cmp
sub
adc
bound
cld
push
dec
xchg
outs
cmp
add
gs
add
or
loopne
sbb
or
pop
test
cmps
inc
lods
call
push
movs
add
inc
movs
or
std
ret
out
push
rol
pushf
fsubp
inc
and
sti
iret
or
jne
gs
retf
dec
pop
and
imul
shr
test
aas
adc
adc
mov
ins
inc
lock
call
cmp
int3
mov
shr
adc
jmp
add
dec
xor
dec
pop
push
xor
inc
mov
aas
jecxz
jmp
jb
cli
call
add
fidiv
out
out
add
jmp
xchg
dec
icebp
fisubr
mov
outs
mov
xchg
cmp
cli
sbb
movs
nop
dec
jnp
in
ds
inc
rol
daa
mov
movs
nop
not
dec
xor
mov
js
sbb
in
push
test
xchg
cmp
adc
jno
fstp
mov
int
inc
rsm
fisub
inc
inc
push
les
sub
and
mov
dec
push
jae
pop
adc
mov
and
adc
cmp
dec
ret
jg
jmp
scas
xchg
cmps
je
mov
shl
jecxz
add
ja
stc
imul
test
mov
test
add
ds
mov
sbb
push
movs
std
ret
mov
daa
repnz
fdiv
and
dec
inc
addr16
pop
jbe
pop
dec
sub
fld
ret
add
aad
je
add
fiadd
int
xor
js
shl
jmp
add
inc
xchg
jl
push
jmp
popf
fincstp
cmp
lea
xor
and
(bad)
iret
ror
loopne
sbb
lods
(bad)
sub
(bad)
(bad)
shl
jne
jp
test
adc
inc
add
in
xchg
jbe
lea
and
movs
push
jno
aas
out
mov
mov
pop
or
outs
sbb
adc
and
(bad)
loope
inc
mov
mov
jne
out
(bad)
aam
xchg
and
jns
test
adc
jecxz
stos
or
test
adc
test
gs
pop
mov
test
out
jmp
xor
mov
push
jns
(bad)
jmp
jg
cli
mov
and
inc
adc
js
fdivrp
and
lock
push
xchg
sub
xor
fs
(bad)
das
cmps
cmc
vorps
jnp
fdivrp
dec
and
mov
inc
xor
retf
mov
test
sbb
sbb
loopne
aam
retf
cmp
aas
fxch
push
fcmovb
add
sub
bound
mov
lea
inc
imul
dec
lea
push
ss
or
push
dec
sbb
xchg
jo
or
and
jno
outs
pop
fst
in
xchg
jmp
sbb
fwait
cmp
nop
adc
test
mov
sbb
or
sub
inc
shl
aad
xchg
sahf
fistp
xor
test
pop
dec
jg
dec
jl
repnz
jmp
not
mov
inc
cmp
inc
push
leave
shl
push
imul
scas
ins
mov
int
pop
xchg
dec
or
aam
xchg
or
gs
pop
jbe
js
data16
jns
jbe
repnz
imul
test
data16
rcl
mov
push
cmp
pop
or
jmp
xchg
or
sbb
adc
push
push
das
mov
dec
and
sub
out
mov
iret
in
push
fcomi
or
adc
shr
or
pusha
sti
dec
push
mov
or
(bad)
cmp
mov
cmp
adc
fldenv
(bad)
aad
push
xor
das
and
cmps
push
push
out
adc
mov
dec
scas
int3
cmc
add
push
fcom
mov
dec
outs
fistp
scas
lds
test
mov
cmp
outs
bound
xchg
adc
ins
pop
test
ja
and
mov
cmp
call
clc
xor
add
mov
pop
xor
pop
(bad)
out
popf
stos
xchg
or
cs
inc
pop
retf
out
inc
loopne
ret
xchg
in
pop
add
bound
sub
std
in
(bad)
mov
add
ja
xchg
scas
das
push
adc
mov
and
or
and
pop
cmp
mov
cmp
xor
cmp
aam
fdivr
cli
ins
(bad)
in
out
push
mov
pop
sbb
test
(bad)
int3
cmp
xor
adc
cmps
gs
jle
dec
mov
outs
mov
int
and
sar
mov
sbb
push
adc
inc
popa
fs
xchg
xchg
shr
test
mov
mov
jle
stc
aam
lods
inc
pop
pop
push
je
sbb
xlat
jo
jns
mov
sbb
adc
out
inc
pop
sub
cmp
mov
les
fcom
mov
jae
out
and
movs
and
mov
adc
les
inc
sub
and
(bad)
out
(bad)
fwait
dec
jae
add
sub
push
lods
mov
lds
pushw
icebp
gs
cmps
in
jl
out
and
jmp
lds
pop
pop
lods
fmulp
imul
adc
xor
nop
adc
(bad)
stos
sub
in
mov
iret
mov
inc
enter
pushf
adc
popf
rcl
hlt
sbb
jmp
call
or
fimul
lods
in
std
enter
out
and
xor
mov
popf
mov
shl
icebp
push
cwde
or
hlt
sub
push
xchg
sbb
xlat
ret
inc
rcl
adc
(bad)
pop
dec
cmps
add
pop
pop
jno
stos
sahf
ins
int
bound
cld
in
jle
sbb
fpatan
int3
lea
inc
mov
sbb
pop
and
inc
ss
adc
hlt
arpl
ja
out
cdq
mov
mov
arpl
les
in
xchg
scas
jb
cmp
sar
enter
into
cmp
dec
push
mov
js
lea
bound
imul
mov
adc
pop
rol
sub
sar
cld
movs
cmp
cmps
adc
add
cmp
shl
mov
test
lods
mov
cmps
mov
xchg
pop
mov
pop
movs
mov
sub
cli
ja
dec
mov
xor
bound
int
cmps
mov
into
in
mov
jae
inc
mul
jae
outs
in
jo
push
mov
fcom
mov
(bad)
push
fstp
das
jne
push
(bad)
sbb
dec
cdq
dec
out
push
push
or
ret
int
mov
mov
jns
add
mov
or
jb
sahf
pushf
jmp
xor
cmp
cwde
sub
xchg
cs
sbb
push
xlat
mov
pop
fcmovb
(bad)
dec
or
adc
jnp
dec
adc
mov
js
xor
mov
in
dec
xlat
pop
sbb
cmp
jns
nop
mov
fst
(bad)
stc
and
popf
or
dec
xor
das
out
inc
mov
test
xchg
and
jb
imul
sbb
add
adc
add
jo
mov
mov
jmp
pop
jmp
(bad)
lea
jb
pushf
xchg
out
dec
clc
dec
or
adc
push
jns
test
push
ja
arpl
cld
dec
shl
fst
pop
adc
cmp
(bad)
sbb
pop
call
mov
lds
push
mov
mov
push
xor
out
pop
pop
jae
jle
mov
outs
leave
dec
jmp
test
mov
pop
jle
test
cmp
add
stc
add
enter
xchg
(bad)
cmp
sub
mov
lock
test
and
fsubr
pop
mov
dec
jle
inc
hlt
push
sbb
mov
push
cli
and
sahf
and
jmp
sar
cmps
adc
adc
movs
jo
sub
clc
add
jno
mov
fbld
aad
xor
xor
push
and
xor
in
clc
inc
cmp
sub
jns
shl
mov
fmul
push
push
sbb
dec
ins
aam
sahf
mov
(bad)
jmp
sbb
dec
je
dec
xchg
aam
xchg
jae
inc
sbb
sti
ret
or
cli
cmp
dec
adc
push
shr
push
xor
jge
mov
mov
push
retfw
sub
call
pop
pusha
add
xor
xchg
lock
sti
mov
push
loope
popa
mov
push
jno
mov
mov
bound
mov
cmp
pop
dec
inc
sub
retf
(bad)
and
in
xchg
or
dec
mov
repnz
mov
les
jb
cld
test
cmp
fldcw
dec
(bad)
sar
push
retf
cmp
jb
mov
aam
sub
and
scas
pop
xchg
pop
shl
cs
fcom
aaa
fs
je
std
dec
fld
mov
ss
mov
or
pop
sub
daa
cmp
in
lahf
sbb
xor
sub
pop
and
mov
jecxz
sub
retf
(bad)
cs
hlt
scas
adc
inc
imul
in
cwde
ret
lock
pop
cmp
push
pop
rol
xor
xor
push
pop
sbb
cmp
add
push
addr16
inc
ja
jnp
int
int3
in
mov
mov
push
and
or
cdq
retf
iret
inc
mov
sub
inc
xor
cwde
xchg
rcr
or
inc
adc
pop
add
and
jl
xchg
pop
push
xor
mov
imul
pop
inc
jle
jp
ret
dec
mov
xchg
xor
test
in
adc
mov
ficom
dec
xor
imul
adc
pop
jnp
add
dec
jns
cmp
stos
and
out
sbb
aaa
push
xchg
pop
pop
xlat
scas
add
xchg
xchg
in
pop
pop
jb
ficomp
cmp
dec
pop
push
mov
sub
cmp
pop
lods
push
mov
cmc
and
pop
dec
in
mov
stos
xor
xchg
push
mov
jp
cmp
in
cmc
sub
stc
or
add
sub
jmp
mov
gs
nop
adc
jb
push
or
int3
aad
or
mov
adc
fsub
push
repnz
fsub
mov
in
enter
bound
inc
(bad)
test
adc
ss
(bad)
in
mov
cmc
dec
inc
je
xor
iret
cmc
xchg
jne
data16
repz
xor
pop
pop
and
mov
pop
sti
jnp
ror
pop
aam
adc
and
xchg
dec
mov
jae
push
pop
and
and
cmp
popf
jp
mov
mov
mov
test
shl
clc
xor
in
std
test
sbb
cmpps
mov
push
movs
dec
aaa
xor
or
mov
mov
mov
int3
test
dec
adc
fdivr
cmps
loope
mov
pop
sub
out
push
ret
aad
cmp
ret
stos
mov
add
mov
push
in
mov
retf
imul
and
push
push
in
jmp
mov
lods
add
outs
int
shr
movs
or
add
cmp
pop
sub
out
xor
cmp
or
cs
dec
inc
sahf
movs
and
(bad)
test
xchg
(bad)
xor
aaa
ins
scas
mov
lock
(bad)
adc
cdq
inc
scas
add
or
and
jno
xchg
movs
sahf
ret
neg
and
sub
sti
(bad)
in
dec
call
adc
push
loopne
ss
mov
push
xor
(bad)
or
jb
push
mov
comiss
test
aam
adc
ins
adc
popa
mov
arpl
and
pushf
lds
jbe
fs
mov
cdq
push
sbb
sti
pusha
test
pushf
popa
lods
fsubr
ficomp
jne
(bad)
or
jp
ss
rcl
push
mov
arpl
xchg
pop
out
pop
ret
xor
xor
bound
movs
retf
clc
fmul
cmp
inc
push
dec
xlat
dec
add
cld
pop
movs
dec
aaa
adc
fist
lods
pop
pushf
push
fucomip
xor
pop
sbb
cmp
ja
mov
xchg
sub
js
add
mov
test
fs
jns
jae
fld
out
adc
dec
dec
in
adc
mov
pop
or
push
fs
fdiv
sbb
test
mov
ds
lds
repz
mov
and
jecxz
into
inc
cmps
imul
xchg
dec
aaa
cmp
sub
ja
push
mov
in
pushf
dec
mov
in
iret
cdq
out
int
dec
outs
adc
cmp
push
stc
xor
addr16
sub
jb
shl
and
xchg
outs
mov
fs
fist
retf
inc
rcr
cdq
xchg
call
fidivr
or
xor
(bad)
arpl
iret
sub
leave
dec
aam
add
ins
jmp
lods
ss
in
cmps
gs
pop
outs
js
ror
jnp
test
dec
pop
mov
repz
sub
fisttp
pop
lea
jl
cmp
dec
lds
adc
or
add
test
pushf
inc
add
and
cmp
add
hlt
ror
xor
movs
inc
sbb
jg
lods
cli
call
js
jbe
lods
xor
adc
jmp
add
into
aam
icebp
jge
mov
rcl
cmp
push
loopne
cmp
imul
ja
lahf
sbb
cmc
inc
sbb
in
rol
add
pop
adc
add
adc
in
cli
test
mov
push
jle
outs
lds
jle
out
clc
pop
and
dec
jmp
or
popa
mov
mov
push
xor
jae
int3
mov
add
mov
pusha
xlat
les
xchg
(bad)
xchg
ror
push
or
or
cmps
adc
loop
ds
sub
repnz
rol
jp
mov
test
aam
dec
push
cdq
int
pop
mov
fstp
inc
les
xor
jne
push
xchg
mov
inc
mov
cmp
and
cmp
retf
popf
pop
(bad)
aaa
cld
lahf
dec
aam
or
ret
fneni(8087
enter
outs
adc
mov
les
mov
fwait
std
pmulhw
shr
add
and
cwde
neg
and
mov
ins
ror
stc
cmps
jae
div
add
pop
jne
ja
repz
or
xchg
aas
adc
inc
shr
push
push
push
adc
inc
in
es
fmul
aad
add
mov
inc
mov
mov
mov
add
repz
jmp
and
dec
(bad)
mov
sti
addr16
fbstp
lock
adc
imul
imul
inc
sbb
imul
gs
ja
push
push
pop
data16
or
push
and
ret
mov
jnp
shr
mov
ins
xchg
mov
mov
int
add
jnp
and
daa
iret
jb
int3
loope
test
mov
jg
push
pop
cli
cli
and
stos
cmp
daa
test
xchg
cwde
(bad)
xor
out
aad
push
jge
push
cwde
jb
out
xor
mov
cmp
js
jg
out
mov
movs
jnp
call
adc
neg
and
sub
xor
aas
fidiv
icebp
inc
cwde
int3
xlat
xor
les
adc
or
mov
push
and
enter
pusha
pop
jp
inc
jmp
and
sbb
stos
call
pop
(bad)
pushf
in
jecxz
inc
adc
repz
nop
nop
addr16
push
fs
mov
dec
jecxz
aad
stos
pop
xchg
jp
jle
push
push
pushf
(bad)
dec
fisub
cmp
push
nop
ss
adc
in
dec
xchg
test
lahf
inc
pop
push
jge
add
push
retf
push
mov
addr16
imul
jg
jmp
sbb
jge
(bad)
xchg
ins
sub
and
mov
(bad)
imul
sbb
and
push
jb
test
dec
and
data16
mov
aaa
shr
jb
mov
or
dec
aad
lock
ins
arpl
cli
inc
jnp
and
rcl
jmp
push
ja
jg
icebp
mov
adc
ficomp
jmp
jnp
or
dec
scas
inc
jo
stos
mov
dec
imul
test
sahf
cmps
(bad)
popf
jl
push
sbb
repz
push
lods
in
shl
xchg
movs
iret
shl
pop
repnz
cmc
stc
clc
mov
(bad)
fs
push
cmp
std
scas
test
mov
add
dec
cmps
test
loope
sbb
cli
and
xchg
sbb
iret
(bad)
push
fldln2
hlt
aaa
(bad)
js
cld
add
dec
data16
xchg
sbb
ja
(bad)
xlat
jmp
cwde
push
pop
shl
push
sub
mov
dec
cvtpi2ps
mov
xchg
sbb
aas
push
fwait
cmp
mov
add
lock
push
loope
retf
mov
popa
lods
mov
mov
jo
jmp
sbb
cdq
push
and
int3
adc
jne
or
xor
and
push
stc
scas
in
sbb
repz
fst
mov
and
test
test
sbb
lahf
pusha
xchg
xor
fist
xchg
movs
mov
icebp
jbe
push
test
sbb
retf
pop
fidiv
or
adc
dec
repz
repnz
jmp
je
adc
loopne
adc
sbb
adc
xchg
adc
test
mov
add
lds
jae
lds
add
int
cdq
(bad)
adc
xor
call
gs
sar
shl
in
movs
je
imul
les
daa
dec
push
aaa
outs
outs
and
mov
cmc
adc
std
mov
cmp
adc
jmp
push
adc
out
add
fisubr
jb
sub
cld
xor
sbb
pop
add
inc
(bad)
fidiv
test
pop
jbe
fs
(bad)
std
lahf
pop
cmp
(bad)
lods
dec
fdivr
out
xor
outs
nop
jecxz
add
and
cwde
loopne
mov
mov
ret
sub
pop
scas
(bad)
xchg
imul
aad
ins
jnp
mov
xor
inc
mov
inc
sbb
jns
pop
dec
pop
and
(bad)
xchg
(bad)
mov
pop
add
jno
inc
out
repz
ret
cmps
pop
cwde
or
addr16
adc
aam
jbe
dec
cmps
push
inc
shl
pop
movs
and
imul
push
sub
sbb
mov
cmp
mov
xchg
outs
enter
jle
ret
mov
cmovg
xchg
dec
mov
outs
jmp
test
xchg
call
xchg
clc
sub
adc
ins
jmp
xor
addr16
dec
sbb
cmp
jp
ror
popf
popa
sbb
and
add
nop
pop
pop
ret
dec
sub
mov
cmps
sbb
pusha
loope
xlat
test
jb
and
sar
mov
mov
loop
rcr
mov
outs
jp
es
aas
cld
test
sti
cmp
cmp
cmp
(bad)
and
cld
sbb
pop
inc
lea
or
loop
jo
add
mov
mul
jle
out
fsub
xchg
fistp
fbld
xor
fidiv
pop
jle
out
clc
push
bound
gs
pop
test
stos
icebp
jne
pop
cmp
push
mov
shr
inc
cli
loopne
and
rcl
dec
retf
mov
or
loope
push
fcmove
jle
call
inc
mov
fbstp
add
mov
out
xchg
and
inc
sahf
cmc
in
loope
fdivr
mov
cmp
stos
xor
pop
sbb
movs
pop
add
adc
int3
test
pushf
lods
adc
lds
or
arpl
and
and
sbb
push
mov
in
loope
loope
push
inc
adc
push
adc
mov
add
xchg
(bad)
sbb
fstp
xchg
dec
add
aas
sub
push
cmp
addr16
inc
or
mov
mov
dec
scas
mov
fbld
push
cmc
adc
int3
and
loope
addr16
cwde
retf
out
xor
sbb
mov
push
int
inc
pop
jno
hlt
push
retf
(bad)
mov
fbld
jmp
movs
add
shr
fucomi
dec
leave
jmp
jl
cmp
test
ret
or
jb
mov
jl
pop
inc
mov
dec
les
push
cmps
or
sub
scas
inc
fdiv
ins
in
call
sub
stc
sar
es
(bad)
je
arpl
adc
mov
adc
lea
or
adc
or
add
dec
jae
dec
mov
dec
pop
pop
xchg
sbb
aad
int
dec
bound
cmp
and
push
xchg
xor
nop
mov
les
shl
adc
repnz
cs
jmp
daa
xchg
(bad)
js
in
data16
adc
bound
mov
or
and
mov
lods
mov
repz
cwde
or
adc
hlt
xor
and
mov
xor
xlat
push
sbb
mov
in
and
popf
test
cs
into
sub
cmp
jle
adc
scas
pop
inc
popa
push
lods
push
mov
push
pop
repnz
scas
inc
fmul
mov
repz
mov
pop
mov
hlt
jne
popf
popf
sbb
sub
ja
sub
(bad)
idiv
sub
(bad)
in
pop
out
cmps
aaa
stos
cmp
arpl
mov
xor
mov
xchg
mov
movs
stos
outs
leave
out
scas
dec
inc
mov
dec
ficom
gs
jp
push
pop
add
pop
and
aas
cld
pop
add
xor
adc
mov
dec
adc
mov
dec
sub
pop
jecxz
mov
imul
out
and
jne
cmps
sbb
push
fidiv
fwait
pop
dec
daa
add
and
(bad)
push
jecxz
jno
and
add
dec
aas
xor
fwait
(bad)
sub
out
push
inc
in
dec
cli
mov
and
push
sahf
pop
call
inc
push
fnstsw
inc
pop
mov
sti
dec
xchg
pop
pop
xchg
inc
xchg
jle
sub
push
dec
fnstsw
mov
sbb
into
jge
popa
add
nop
mov
push
cli
pop
jmp
cmps
jb
scas
adc
inc
or
cmp
and
je
pop
sbb
gs
pop
push
fbstp
push
xchg
xlat
pop
push
repz
push
mov
adc
dec
(bad)
in
jb
repz
lods
push
xchg
clc
mov
lods
ds
in
cmp
cs
fdivr
cli
dec
scas
inc
mov
aam
inc
xchg
mov
add
setno
in
and
adc
xchg
cwde
xchg
inc
lock
xor
test
xor
repz
lock
cmp
jne
cwde
nop
in
in
xchg
inc
jle
push
sbb
repnz
mov
pop
pop
sub
in
mov
add
xchg
cmp
push
mov
push
mov
pop
inc
add
mul
xchg
les
push
mov
mov
lock
ror
xchg
cli
mov
or
dec
imul
test
into
inc
add
sub
movs
idiv
aas
mov
mov
imul
push
cmp
xchg
mov
inc
inc
pop
int
not
retf
daa
inc
sub
imul
shr
or
adc
push
(bad)
movs
lock
inc
test
outs
xchg
dec
xor
adc
enter
cmp
and
aaa
and
movs
popa
dec
jg
mov
mov
lahf
bound
neg
push
mov
inc
mov
aad
sbb
adc
lds
add
jbe
jae
in
aaa
int
sub
pop
mov
out
add
cmp
adc
mov
not
adc
and
or
or
push
xor
mov
cli
mov
outs
add
js
mov
sti
in
cmp
pusha
xchg
mov
out
xor
pop
fiadd
pop
rcl
and
fidivr
popf
ins
xchg
out
pop
aam
adc
push
xor
add
out
cmp
sub
mov
cmc
and
repnz
adc
mov
(bad)
lds
mov
clc
jle
hlt
mov
pop
lock
in
stos
gs
or
fild
scas
mov
fnstenv
outs
cmps
push
sub
add
sbb
stos
sar
imul
sar
lods
mov
sbb
pop
rol
mov
(bad)
shl
je
loop
movs
ins
loopne
(bad)
lods
xchg
mov
push
adc
mov
cdq
dec
rcl
cmps
nop
es
inc
add
imul
ins
ja
and
leave
pop
xor
std
jl
sub
std
lds
call
adc
js
(bad)
mov
sti
push
sub
inc
cmp
out
xchg
adc
fcmovne
and
sahf
mov
out
pop
mov
jmp
jp
retf
inc
fsub
popa
loopne
dec
je
and
dec
sub
nop
push
push
or
popf
int
bound
fstp
enter
jne
fidiv
jnp
aam
fimul
outs
scas
mov
in
push
xchg
jo
movhps
not
je
into
repz
mov
push
pop
sub
mov
fisttp
push
sahf
mov
mov
(bad)
jmp
in
and
dec
sub
ins
in
mov
xchg
out
push
imul
sub
add
sbb
jp
dec
mov
(bad)
adc
xchg
idiv
mov
test
fwait
inc
bound
adc
rcr
iret
cmc
in
cmp
(bad)
mov
or
shl
je
or
and
jnp
les
xchg
into
sbb
dec
push
mov
ss
fidiv
test
fidivr
xchg
adc
and
out
adc
call
pop
cmp
or
rep
cmp
mov
inc
or
xor
and
loope
push
sub
adc
adc
mov
mov
mov
test
or
das
cmp
mov
xor
adc
push
iret
test
fild
es
xor
cmc
adc
leave
or
or
jecxz
adc
pop
sub
jae
xchg
inc
fwait
repnz
leave
out
add
sar
sti
pop
jmp
inc
jns
sub
leave
adc
xor
pushf
pop
xchg
aas
sub
hlt
cdq
jno
sbb
push
cmps
gs
stos
inc
movs
pop
mov
pop
rcl
in
dec
push
js
xchg
mov
mov
cld
mov
fimul
pop
fdiv
cmp
clc
push
pop
xchg
stos
daa
popa
and
ins
retf
(bad)
(bad)
fst
or
push
sub
and
or
(bad)
ror
imul
punpckldq
inc
adc
add
jmp
stc
cmps
xchg
jb
data16
sbb
xchg
xor
pop
push
aam
fadd
(bad)
sahf
mov
sub
les
es
sub
xchg
ret
xor
aam
mov
(bad)
bswap
lock
lea
jnp
push
fnstcw
icebp
mov
jecxz
or
cmp
call
jg
adc
push
out
cmps
cvtdq2ps
sub
dec
outs
mov
rol
out
jno
ja
outs
xchg
push
sub
mov
ins
xor
lds
sbb
jp
add
sbb
pop
rcl
mov
cmp
inc
mov
cmps
mov
add
push
sbb
xor
adc
inc
add
dec
xchg
pop
sbb
loopne
test
xchg
mov
(bad)
jb
jb
mov
nop
in
clc
add
inc
jmp
add
dec
adc
dec
mov
add
clc
and
dec
stos
pusha
retf
daa
jnp
pop
inc
cmp
sahf
ja
xlat
push
sbb
xchg
sbb
movs
imul
push
nop
adc
sub
cmp
outs
pop
add
mov
push
sti
mov
xor
mov
and
sub
inc
stc
int
xor
pop
in
jp
jmp
fiadd
js
add
push
sub
movs
adc
out
sub
cmp
jnp
push
clc
cmp
jns
adc
iret
fwait
pop
cld
or
inc
push
outs
gs
ja
rcr
lods
inc
adc
push
sar
ins
lds
sbb
out
xchg
in
and
(bad)
(bad)
scas
sub
ins
push
mov
xor
iret
cmp
sub
xchg
push
enter
out
pop
movs
mov
int3
aaa
scas
mov
or
push
mov
bound
les
and
sub
aam
pop
sbb
call
into
mov
xchg
jp
mov
and
bswap
loop
push
push
ret
jp
retf
jo
movs
das
jne
sub
aaa
out
mov
imul
adc
push
ror
mov
mov
movs
jo
xchg
iret
cmp
icebp
and
xor
pop
dec
mov
(bad)
setnp
or
pop
into
scas
and
jecxz
in
jns
xchg
mov
popa
loopne
xchg
xchg
sub
push
stos
adc
mov
push
int3
mov
push
dec
xor
jp
add
inc
sbb
xchg
push
sub
cmp
ins
xor
je
adc
push
push
repz
push
pop
mov
pop
add
xor
mov
or
jae
stos
add
jno
pusha
dec
or
repz
sahf
mov
lods
hlt
mov
pop
mov
mov
push
mov
sbb
test
gs
sbb
cdq
fwait
leave
mov
sar
nop
xor
popf
enter
out
add
cli
pop
das
(bad)
cmp
mov
inc
cmp
inc
sbb
lods
icebp
add
mov
mov
aaa
cdq
dec
lea
dec
ss
(bad)
ficomp
cwde
jp
lahf
adc
pop
stos
push
push
cli
mov
nop
lea
add
loop
dec
stos
jae
mov
add
fnstsw
mov
enter
pop
call
or
arpl
call
inc
les
adc
sub
jne
imul
and
mov
add
stos
push
pop
sub
hlt
lea
ret
repnz
jg
add
sbb
movs
jbe
js
shr
adc
mov
in
push
pop
mov
xchg
mov
test
cdq
xchg
cmc
das
aaa
inc
or
jecxz
std
inc
mov
sbb
jecxz
lock
mov
push
jno
sti
aad
scas
pop
cld
mov
xchg
ja
outs
das
data16
pusha
out
sub
mov
clc
mov
jns
jecxz
fwait
lea
xchg
pop
cs
lods
ror
dec
in
jecxz
fst
pop
aad
push
or
fs
dec
popa
mov
inc
lock
pop
fist
addr16
adc
mov
lods
repz
jno
orps
jmp
sbb
xchg
ins
inc
rcr
iret
mov
int
jns
jmp
jmp
cmp
push
cli
push
mov
mov
xchg
pop
jl
pop
enter
jnp
mov
adc
adc
lahf
(bad)
push
mov
data16
cmp
loope
out
cdq
repnz
sbb
icebp
and
lea
xlat
sbb
sub
repnz
fstp
popf
add
test
ror
sub
repz
lds
fs
adc
div
outs
lahf
hlt
pusha
xor
cwde
in
arpl
mov
and
mov
mov
inc
(bad)
and
jns
add
inc
fs
add
aas
ficom
push
fiadd
stos
push
lahf
fwait
icebp
xchg
or
rol
fcom
loop
ss
(bad)
add
ja
jecxz
dec
test
jp
not
xlat
mov
jo
cmp
sbb
add
frstor
mov
lods
push
push
or
call
xor
adc
loopne
push
push
imul
jb
mov
push
retf
fild
xor
jnp
push
movs
mov
ror
in
xchg
in
dec
out
inc
hlt
xlat
dec
mov
ins
retf
movs
jnp
or
pop
adc
imul
jmp
pop
shl
clc
dec
and
mov
adc
in
gs
push
cli
jo
into
push
or
mov
pop
or
pop
ror
test
ret
xor
mov
add
int3
fld
dec
je
and
mov
loope
out
xchg
push
(bad)
adc
xor
push
jns
in
je
push
sub
inc
xor
pusha
sub
test
cmp
das
push
sub
outs
mov
cdq
mov
std
mov
mov
and
pop
bound
stc
sbb
jmp
mov
xchg
mov
popa
mov
std
jb
arpl
jne
adc
push
sbb
cld
daa
mov
adc
out
push
xchg
dec
ss
popf
in
jmp
jae
int3
xchg
cmp
pop
cmp
sahf
and
aam
lahf
jb
pop
cmp
in
sbb
shl
ficom
loope
add
imul
popf
imul
stos
loope
(bad)
imul
push
mov
inc
cwde
arpl
fimul
mov
xchg
inc
xchg
sbb
jns
movs
scas
leave
shl
mov
daa
arpl
mov
mov
mov
push
fadd
lods
inc
add
enter
xchg
push
retf
sbb
adc
cmps
loop
sub
inc
arpl
mov
sub
mov
push
shr
data16
dec
data16
in
push
int3
cmp
fwait
mov
sub
fdivr
in
or
jb
arpl
cld
push
jns
mov
retf
sbb
jb
add
mov
dec
cmp
cs
cmp
out
call
scas
xlat
push
aaa
jae
inc
aam
mov
clc
loope
fsubr
add
push
or
mov
data16
imul
push
dec
mov
add
fucompp
or
rcl
fld
fistp
and
jl
lods
repz
imul
leave
stc
mov
aas
mov
sub
gs
popa
sbb
push
ret
jo
sub
jg
ret
pushf
dec
cwde
xor
add
imul
push
xor
mov
jnp
sahf
mov
fild
cmp
mov
cli
ror
or
cmp
cmp
gs
push
push
repz
and
out
in
ficom
pop
xchg
movs
cmp
mov
dec
aas
ror
xor
mov
mov
js
adc
mov
icebp
push
inc
mov
scas
aaa
dec
and
fstp
lods
inc
mov
jp
inc
jmp
or
mov
loope
dec
mov
sbb
inc
das
bound
jns
(bad)
jecxz
loope
popa
sahf
mov
loopne
stc
aam
scas
jae
std
rcl
data16
dec
fld
aaa
inc
or
scas
sbb
scas
mov
outs
inc
adc
ja
or
and
aas
out
aas
js
mov
mov
in
and
nop
inc
pop
cwde
add
pop
rcr
dec
gs
loope
fnstcw
movs
cmc
clc
sub
retf
fs
sbb
out
dec
cmps
mov
xchg
cmp
xchg
adc
ja
bound
mov
movs
sbb
movs
movs
add
rcr
push
inc
repz
mov
push
test
(bad)
call
xor
sub
not
dec
outs
repz
je
js
sbb
mov
rol
jmp
sbb
sbb
and
outs
mov
sbb
mov
jb
and
jg
das
xor
sub
dec
fmul
or
pop
ins
xchg
sbb
jg
call
dec
(bad)
and
mov
aaa
sub
cmp
enter
lds
cwde
push
push
lods
push
jp
dec
fadd
stos
sbb
lahf
(bad)
(bad)
xchg
mov
pop
xchg
cli
jge
hlt
mov
shl
push
jae
xchg
jp
mov
icebp
loope
stos
jns
add
mov
data16
lock
cli
aaa
lea
sub
outs
adc
or
jns
jle
sbb
(bad)
idiv
leave
cmp
(bad)
sub
mov
jge
or
cmp
in
outs
fiadd
cmps
xor
fwait
xchg
shl
add
xchg
movs
out
test
call
pop
mov
or
or
loop
inc
sti
sbb
jne
dec
gs
pushf
jmp
rol
loopne
sub
jecxz
push
mov
int3
sahf
push
cmp
or
enter
dec
neg
and
jae
(bad)
push
pop
push
cdq
and
jbe
lods
jp
add
mov
push
or
mov
icebp
sub
aaa
shl
mov
sbb
mov
push
cwde
pop
push
fldcw
jge
and
cmp
fs
gs
sbb
xor
push
imul
push
jmp
xchg
mov
repnz
rol
xor
ret
push
lahf
pop
jle
jo
dec
sbb
push
js
cs
mov
inc
aad
mov
xchg
test
inc
sbb
scas
mov
clc
dec
cmp
les
xchg
loopne
sub
xchg
or
xor
call
mov
jnp
sub
mov
push
js
sbb
in
call
xor
xor
lahf
mov
or
add
mov
lds
call
call
pop
imul
cmps
dec
jl
outs
sub
add
dec
out
cmps
xchg
movs
xchg
clc
jmp
jecxz
push
jne
inc
or
dec
push
adc
mov
sub
imul
xchg
jo
add
test
xlat
out
nop
call
or
add
jns
add
sub
add
mov
mov
jle
call
aas
movs
jmp
repnz
retf
int3
xchg
pop
adc
pop
movs
aad
arpl
mov
pop
jmp
and
push
sahf
sar
mov
dec
test
push
lock
push
stos
adc
ret
sub
jmp
(bad)
movs
loop
fist
imul
jns
je
das
pop
jae
xchg
sbb
inc
outs
and
xchg
inc
sbb
fwait
and
mov
sub
dec
xchg
push
ret
cmp
int
les
xchg
ins
dec
jmp
ins
retf
not
cwde
data16
jmp
lods
mov
fstp
daa
or
mov
scas
hlt
lock
mov
stc
xor
inc
js
xchg
iret
xor
mov
aas
cmp
push
mov
mov
hlt
sub
pusha
enter
call
inc
ja
shl
and
stos
int3
jbe
repnz
dec
dec
mov
add
loopne
sub
inc
add
adc
pop
lea
mov
pop
and
xchg
dec
push
sbb
mov
mov
gs
inc
xor
inc
ss
leave
sti
std
inc
push
cli
inc
xchg
or
jle
cmp
mov
cmc
into
outs
mov
sub
rcr
push
cdq
cld
dec
xor
sbb
jmp
add
cdq
lea
neg
imul
push
pop
movs
(bad)
fwait
ss
sub
int3
dec
and
je
push
pop
xchg
mov
sbb
bound
imul
pop
sbb
lds
push
cld
fwait
clc
dec
xor
in
pop
mov
push
jp
iret
leave
xlat
add
ins
cmps
stos
popa
pop
into
fldcw
ud0
lods
inc
inc
mov
js
push
jnp
mov
aam
mov
and
rcr
das
gs
mov
push
add
js
mov
call
push
dec
fldenv
data16
push
pop
jnp
add
mov
lods
scas
and
inc
mov
xchg
lea
pop
rcr
jns
adc
xor
js
jmp
(bad)
lds
lea
pop
push
cmp
or
(bad)
mov
dec
outs
xchg
lock
(bad)
xor
cmp
les
shr
inc
or
sbb
cmp
out
cwde
push
mov
out
and
push
mov
aas
mov
xor
sbb
add
or
cmps
movs
(bad)
adc
fmul
mov
mov
jbe
test
cld
mov
push
push
stc
lods
loopne
push
aad
and
sbb
jg
ror
fiadd
(bad)
mov
fcom
inc
and
in
dec
aaa
outs
jae
xor
(bad)
pop
and
aad
mov
sub
ror
mov
mov
std
popf
push
fisubr
xlat
adc
xchg
stos
loop
mov
adc
xor
enter
lahf
movs
inc
dec
or
aas
stos
jg
or
icebp
mov
sub
popf
sub
adc
ret
mov
inc
sbb
mov
mov
dec
pop
js
push
retf
outs
sub
mov
mov
jmp
lds
iret
push
arpl
and
jecxz
mov
aad
(bad)
outs
(bad)
ins
dec
test
cmp
sbb
ss
loopne
and
(bad)
loopne
sub
or
cli
ja
jecxz
dec
mov
adc
xor
pop
retf
ret
push
test
(bad)
iretw
(bad)
xor
pop
imul
mov
xor
mov
fld
shr
pop
pushf
jno
inc
cmp
push
and
mov
ss
or
push
(bad)
pop
mov
xor
or
(bad)
test
sbb
bound
lock
test
dec
mov
nop
outs
aam
movs
adc
cmp
out
jmp
or
jbe
xchg
add
jbe
fidiv
fnstenv
add
mov
nop
xor
sbb
shr
add
push
(bad)
pop
loopne
sti
les
in
pop
lds
retf
nop
jae
js
fstp
ror
pop
scas
push
mov
cwde
mov
bound
push
cmps
sbb
add
add
push
jb
dec
sbb
mov
out
scas
jne
mov
inc
rol
gs
cmp
inc
div
mov
jnp
jae
push
test
int3
rcr
(bad)
sub
aas
out
mov
mov
and
aam
jae
fstp
mov
fldcw
xchg
push
out
cdq
(bad)
fsubr
jb
xlat
ja
pop
adc
mov
push
in
cdq
jg
xchg
push
fdivr
test
movs
adc
pop
mov
adc
mov
bound
ins
clc
push
pop
iret
mov
lock
mov
jmp
pusha
loope
dec
sti
fld
dec
ja
mov
mov
in
popa
mov
es
mov
sub
sar
clc
add
or
cmc
test
dec
cdq
push
je
sbb
into
and
cmps
ss
push
js
push
shl
retf
push
mov
in
in
pop
push
das
pop
enter
push
punpcklwd
repz
and
imul
add
movs
push
out
lahf
into
fs
push
inc
jno
cmp
sahf
outs
stos
mov
jae
and
xchg
mov
mov
repz
or
jbe
push
in
jo
es
lds
arpl
pop
lock
jns
jmp
push
ret
fst
fisttp
addr16
fstp
and
mov
div
xchg
das
rcr
les
mov
bound
adc
or
int3
ins
mov
icebp
adc
(bad)
lahf
leave
mov
push
sbb
fild
or
dec
idiv
pop
cmp
loopne
aam
add
jmp
stos
int
jne
push
push
jmp
not
imul
cmps
pop
sbb
lds
stos
mov
call
xlat
or
sbb
push
fs
(bad)
xlat
lds
push
dec
(bad)
into
sbb
or
pop
div
pop
fs
repnz
dec
xlat
and
adc
mov
cmp
mov
dec
(bad)
scas
inc
lea
test
lods
add
cmp
sti
dec
jp
jb
(bad)
jbe
and
mov
mov
sub
(bad)
leave
pusha
ja
mov
(bad)
jl
mov
imul
inc
or
or
or
mov
push
dec
adc
pop
cmp
cmp
adc
leave
inc
int3
jecxz
jb
cmp
(bad)
(bad)
movs
xor
fs
loopne
loop
mov
xchg
jne
rol
inc
mov
sbb
addr16
loope
sub
std
and
lea
sbb
sub
mov
imul
retf
pop
fcmovnb
adc
imul
fimul
inc
movs
mov
cld
sbb
mov
cmp
inc
mov
or
jnp
adc
sub
in
or
sbb
lods
jns
not
test
imul
aam
dec
mov
out
jne
and
mov
mov
js
jecxz
xchg
push
in
aaa
loope
push
pusha
and
inc
retf
in
sbb
push
arpl
cmps
mov
jae
sbb
pop
cmp
inc
int3
call
mov
sbb
pop
mov
jl
out
add
add
dec
shr
lds
(bad)
mov
test
imul
repz
js
(bad)
jmp
or
or
arpl
mov
or
(bad)
mov
imul
ds
push
arpl
shl
loopne
sub
push
mov
add
stos
dec
xor
(bad)
ret
pop
aam
pop
out
push
fwait
mov
shl
mov
jmp
rcr
xor
push
leave
dec
icebp
outs
sub
push
shl
jmpw
fsub
fs
pop
sub
je
pop
shr
xchg
aaa
mov
pop
push
or
mov
and
push
sbb
stc
das
jmp
mov
or
scas
add
jns
ror
test
xchg
xchg
sub
pop
dec
dec
add
stos
mov
les
mov
jl
loopne
xor
jecxz
adc
xchg
movs
adc
in
out
cmp
xor
jae
movs
mov
jae
out
rcr
loopne
pop
sbb
or
xchg
inc
lea
clc
les
scas
shl
pop
out
adc
adc
gs
fistp
sar
pop
stos
xor
cmp
mov
clc
mov
(bad)
repz
mov
cdq
inc
shr
inc
push
cwde
push
mov
jnp
rol
xor
pop
movs
bound
and
leave
(bad)
movs
ja
push
das
push
ds
sbb
ss
retf
sub
cwde
je
xchg
inc
inc
call
cmp
push
and
sbb
test
movs
(bad)
and
pop
into
dec
or
pop
jnp
inc
mov
mov
sub
sub
imul
movs
lahf
adc
jns
mov
in
mov
repz
adc
stc
arpl
push
add
and
arpl
cmc
mov
retf
lds
idiv
sahf
in
pop
mov
out
push
or
and
cdq
mov
pop
stos
movs
push
mov
dec
repz
mov
in
(bad)
cmp
sub
inc
xor
xchg
call
inc
jnp
inc
test
inc
(bad)
aas
pop
cmp
hlt
pop
jno
or
or
inc
rcr
push
lds
mov
out
test
adc
cs
jne
adc
addr16
push
ret
push
enter
cdq
movs
jg
into
ret
outs
adc
cmps
mov
mov
lock
outs
and
inc
push
into
cld
jbe
pop
mov
(bad)
fsincos
fild
pop
data16
mov
scas
pop
cwde
out
add
ss
outs
cmp
scas
xchg
cmp
in
mov
sub
push
sbb
mov
jo
rol
mov
aaa
lock
pop
or
dec
rcl
psrad
out
(bad)
ins
loopne
fcomi
pushf
jns
sub
sbb
test
or
les
sbb
inc
jnp
je
popf
mov
mov
mov
mov
shl
adc
pop
mov
jo
sub
loope
jl
cdq
scas
pop
adc
xchg
es
xor
outs
pusha
cdq
lock
sbb
and
push
cmp
mov
push
pop
or
push
loop
inc
push
je
mov
or
mov
fisubr
pop
js
out
retfw
and
jecxz
or
xchg
scas
lea
xlat
in
enter
push
inc
test
shl
into
imul
and
mov
imul
in
lods
xchg
xchg
xchg
inc
dec
adc
dec
stc
push
jmp
push
dec
and
outs
(bad)
in
jle
repnz
add
lock
pop
ins
mov
and
in
mov
fcom
mov
mov
mov
jmp
sub
xchg
sub
or
jnp
test
push
fcomi
jmp
dec
jl
xchg
mov
sub
push
stos
xchg
jecxz
lds
push
sub
imul
aas
or
push
sub
test
sti
and
push
xchg
add
adc
lods
pop
fistp
into
lea
dec
xor
inc
in
mov
icebp
fcomi
(bad)
int
mov
fdiv
jno
xchg
std
mov
sbb
mov
inc
mov
mov
ins
sub
mov
adc
ds
mov
fcmovbe
xchg
add
arpl
jl
pop
jecxz
cmp
bound
mov
sub
dec
xchg
es
jge
scas
fst
loop
inc
mov
ret
out
push
pop
popf
out
xor
stc
push
int3
neg
mov
fwait
iret
dec
int3
cmp
in
adc
jg
addr16
inc
addr16
cmp
scas
xlat
xlat
test
call
daa
or
ror
add
push
popa
test
test
mov
sbb
xchg
and
test
jecxz
dec
inc
add
pusha
mov
cmp
mov
pushf
xchg
cwde
mov
adc
jle
adc
fisub
xor
sti
mov
addr16
push
nop
sbb
jmp
mul
call
stos
mov
in
jl
xor
push
call
and
lods
mov
dec
cs
or
add
(bad)
bound
jmp
pop
mov
iret
dec
aam
sub
repnz
push
sysret
xchg
sbb
add
pop
adc
push
cmp
jecxz
jl
jae
fcom
add
mov
aam
add
aas
les
sbb
popa
push
xchg
nop
int3
aad
inc
jnp
sbb
or
lea
icebp
sbb
lds
test
pop
and
adc
dec
cmp
xchg
jnp
popf
pusha
pushf
pushf
inc
out
push
fs
jmp
sub
mov
push
dec
popa
push
daa
outs
mov
iret
jmp
xor
dec
pop
adc
cld
xchg
pop
or
popa
adc
loopne
or
(bad)
sbb
aas
test
inc
push
test
hlt
push
push
(bad)
sub
sti
je
aas
jmp
aad
daa
pop
(bad)
sub
pusha
pop
xor
or
aad
jns
cs
inc
jnp
sbb
fs
lahf
dec
or
add
cli
test
sbb
pop
sti
xchg
sub
or
lods
mov
cdq
mov
retf
push
test
mov
aam
push
les
push
shl
or
cmc
outs
retf
test
std
int3
xor
mov
jne
ret
(bad)
lea
xor
arpl
std
arpl
xor
or
mov
mov
(bad)
icebp
dec
mov
pop
dec
das
(bad)
mov
cli
jbe
sbb
loopne
leave
cmc
outs
mov
pand
das
paddd
pop
loop
ret
cmp
mov
fwait
dec
rcr
in
movs
mov
mov
mov
cld
out
mov
cmps
and
fisttp
repz
mov
and
ret
hlt
popf
ja
xchg
and
mov
mov
pop
jl
aaa
sbb
fs
loope
and
outs
xchg
xchg
dec
jno
shl
xchg
shl
lds
lods
and
inc
into
out
mov
aas
addr16
cmps
mov
dec
inc
outs
aam
or
push
xchg
and
(bad)
jo
lahf
int
inc
ret
xor
fldcw
xchg
mov
push
mov
es
(bad)
mov
mov
lds
jns
xchg
sbb
and
inc
pop
add
mov
xchg
cli
lock
cld
mov
adc
jbe
add
test
adc
cli
dec
xor
jg
imul
xchg
leave
rcr
adc
pop
mov
sub
scas
mov
add
mov
and
adc
(bad)
shl
arpl
mov
arpl
(bad)
outs
ss
inc
adc
lds
jmp
sub
fdiv
jne
je
rcl
dec
enter
sbb
push
pop
test
mov
or
inc
scas
ret
js
sbb
dec
in
bound
adc
mov
xchg
inc
mov
sub
cmp
jl
cmc
adc
shl
(bad)
retf
sub
shl
jnp
leave
dec
xchg
into
add
(bad)
pop
or
(bad)
out
xchg
loope
mov
pushf
cmp
enter
aam
arpl
jmp
ja
xor
add
cmps
sbb
and
inc
inc
rol
fiadd
mov
ins
scas
mov
mov
sbb
xlat
xor
test
xor
leave
mov
pusha
dec
mov
jo
dec
jge
xor
retf
xchg
cmp
scas
xor
jmp
shl
imul
pop
mov
jecxz
cmp
xchg
or
xchg
xchg
fnsave
fnstcw
out
out
pop
lock
sub
addr16
test
adc
jae
das
and
movs
inc
jmp
mov
jecxz
cmp
mov
cmp
jl
fbstp
pop
pop
jmp
cmp
inc
call
emms
cli
out
jo
clc
mov
mov
jmp
inc
sbb
sub
str
sbb
xchg
aad
pop
fist
(bad)
(bad)
adc
sub
jae
jnp
cmps
in
aaa
(bad)
mov
dec
dec
pop
xor
sub
repz
cli
pop
mov
bnd
je
rcl
xor
adc
mov
sbb
mov
fisttp
push
data16
loope
add
loope
sbb
jnp
(bad)
(bad)
add
or
movs
mov
out
inc
ret
xchg
sahf
movs
push
sbb
ret
pop
in
out
cs
xchg
ja
into
push
push
push
and
add
mov
and
mov
mov
adc
fst
(bad)
call
pop
or
inc
ja
mov
data16
jle
mov
jne
movs
mov
std
inc
fdiv
bswap
xchg
xchg
ss
in
add
fistp
and
sbb
dec
dec
sar
push
xor
push
xlat
and
leave
push
mov
das
pop
(bad)
out
mov
mov
ss
and
aad
xor
call
sbb
aas
shl
pop
pop
push
sub
not
xor
jp
lahf
std
ja
xchg
lods
cmp
in
dec
push
push
retf
pusha
cmp
out
dec
fdiv
and
lea
out
and
push
lea
ja
dec
sbb
jae
push
cmp
pop
jle
sahf
es
into
out
and
lea
int
int3
fldenv
popf
xchg
pop
pop
lods
adc
sbb
cld
xor
xchg
fild
je
jmp
dec
(bad)
cli
push
idiv
js
jno
xchg
popa
iret
rol
push
fwait
mov
push
fldcw
xchg
mov
cmps
hlt
mov
scas
lahf
movs
popf
dec
pusha
pop
adc
imul
inc
mov
daa
in
pop
xor
push
push
and
cli
(bad)
stos
xchg
imul
pop
push
cs
xor
popa
loop
xor
add
test
mov
inc
test
jbe
mov
(bad)
sti
hlt
mov
mov
ret
sub
inc
mov
add
sbb
cmp
out
xor
leave
out
inc
les
outs
ja
fst
dec
imul
jnp
sub
cmp
dec
gs
mov
pushf
shl
gs
mov
test
loopne
or
movs
mov
sub
push
cmps
test
nop
jbe
pop
pop
gs
repnz
add
jmp
into
arpl
fdiv
mov
sahf
push
adc
rcr
ret
cmp
scas
xchg
jae
inc
push
ret
into
outs
mov
mov
push
cmp
jp
movs
jns
xor
sar
or
add
test
retf
lahf
dec
cmp
sbb
rcr
or
sub
sub
ret
or
dec
or
mov
das
and
mov
sbb
mov
ret
push
cld
rcl
jecxz
aad
sahf
xor
pop
adc
sub
mov
push
cmps
sbb
sub
lds
rcr
rcr
(bad)
retf
or
push
int3
xor
cmp
lods
mov
jns
pop
or
stos
jl
pop
cmp
add
aaa
pop
push
sub
mov
clc
mov
dec
or
test
int
ins
mov
imul
jno
test
ins
add
mov
push
pop
(bad)
mov
in
inc
xlat
imul
cs
or
jp
aad
xor
add
mov
out
jg
inc
xchg
sub
pop
lahf
xchg
cdq
movs
mov
outs
loope
inc
adc
(bad)
repnz
pushf
int3
sar
div
pop
popa
push
jle
mov
dec
(bad)
cli
ret
ds
pushf
mov
aam
jnp
pop
pop
xor
jle
je
or
sbb
or
test
in
mov
cli
mov
retf
xor
(bad)
mov
jmp
jno
jo
mov
sub
mov
cdq
mov
jnp
mov
pusha
jg
jns
pop
js
(bad)
mov
cdq
push
jne
add
(bad)
je
shl
pop
dec
neg
in
scas
test
dec
sbb
clc
mov
test
fldl2e
jb
mov
scas
cwde
(bad)
mov
rcr
jge
bsr
aas
and
wrmsr
xor
cli
mov
xor
xlat
(bad)
push
push
arpl
xchg
mov
dec
test
adc
xor
fnstenv
punpcklbw
(bad)
aaa
xor
scas
jg
xor
sbb
xor
jmp
xchg
pop
cmp
sbb
aad
push
pop
lea
das
sbb
push
mov
je
dec
test
pop
jmp
pop
mov
xchg
lea
icebp
test
mov
mov
jne
or
jle
mov
pop
mov
stos
mov
bound
or
shl
jo
sbb
lock
ror
je
pop
out
pop
inc
loop
add
ss
fdivr
ficomp
or
sbb
mov
mov
jb
pusha
pop
xchg
pushf
mov
inc
mov
add
les
xor
and
loop
mov
aam
jb
adc
jecxz
aaa
addr16
mov
sub
mov
scas
adc
xor
sub
stc
fadd
push
jmp
lods
mov
sbb
inc
pop
or
pop
sbb
mov
mov
cmp
mov
jle
ret
sti
dec
imul
scas
aaa
dec
cmc
jp
cdq
ins
or
in
mov
pop
mov
cmp
lock
clc
scas
sub
xchg
into
test
sbb
sbb
push
adc
cmp
jns
div
js
(bad)
pop
ret
lods
js
mov
xchg
and
or
mov
sub
jecxz
and
mov
sub
jne
inc
add
xchg
bound
stos
ins
dec
call
adc
pop
adc
sbb
xchg
fwait
cs
retf
imul
sbb
repz
imul
fisubr
cmps
xchg
pushf
inc
add
jmp
sahf
inc
or
inc
cmp
xchg
jo
xchg
mov
jle
push
in
rcr
repnz
out
or
xor
xchg
(bad)
cmp
adc
scas
mov
out
xor
inc
sbb
sbb
fadd
retf
(bad)
cld
cdq
push
cmp
sbb
or
mov
jae
das
sbb
cld
adc
mov
or
dec
imul
sub
mov
test
xchg
out
mov
stos
and
sbb
stos
jns
movs
movs
and
sub
int
leave
(bad)
mov
dec
in
daa
std
fcmovne
xor
push
pop
jge
adc
push
pop
push
mov
add
int
push
push
push
cdq
les
jo
push
lds
in
loop
out
push
pop
fistp
aas
push
inc
sbb
xor
inc
dec
ror
pop
icebp
rcl
fmul
sub
sub
sub
or
movs
rol
push
leave
pop
and
aas
cmc
fnstenv
(bad)
jmp
jns
jne
mov
cmp
hlt
cmp
es
inc
mov
lock
daa
sbb
pushf
cmp
adc
mov
adc
aaa
ss
ret
mov
not
js
xor
xchg
pop
stc
adc
cwde
mov
mov
ror
(bad)
shr
retf
mov
and
jl
push
or
push
jb
or
and
pop
dec
sbb
in
(bad)
in
cdq
bound
je
js
mov
xor
or
inc
xchg
inc
push
sub
mov
scas
out
add
xchg
mov
jo
xor
jle
xor
enter
test
mov
mov
xchg
push
shl
inc
call
pop
and
sbb
movs
dec
ret
lods
xor
add
pop
(bad)
inc
lahf
cmps
xor
pop
adc
sbb
sbb
in
lods
fwait
push
scas
mov
scas
lods
mov
inc
jb
jnp
cmp
popf
lahf
inc
jo
shr
jmp
loope
or
dec
stos
pop
jns
and
repnz
in
mov
iret
push
cli
sbb
mov
cld
pop
xor
xchg
ja
nop
push
jg
aas
xchg
mov
add
pop
push
and
out
mov
mov
fisub
adc
sub
out
test
inc
std
cs
aam
mov
fbld
loope
push
ret
and
(bad)
bnd
jmp
(bad)
push
push
in
mov
rol
rcl
push
aad
std
scas
cmp
test
cmp
ret
lds
stos
fnstsw
xchg
add
popf
pop
outs
icebp
add
or
outs
cdq
cmps
xor
inc
push
std
push
iret
add
je
stos
leave
icebp
rcl
sub
in
push
add
or
in
mov
push
mov
xchg
pop
lock
jl
jns
(bad)
xchg
cmp
leave
mov
jmp
push
fsubr
sti
iret
jb
pop
(bad)
sbb
test
scas
inc
int3
jmp
jge
mov
lods
jle
mov
mov
ror
cmp
jge
fwait
xchg
xchg
sub
pop
pop
out
repz
or
mov
pushf
pop
scas
xor
push
jnp
xor
das
(bad)
stc
inc
cmp
and
fdivr
push
addr16
ins
dec
test
mov
xchg
and
(bad)
push
push
sub
fucom
outs
add
pop
mov
rol
adc
push
sbb
leave
mov
push
mov
inc
adc
pminsw
push
retf
jbe
in
adc
out
outs
es
mov
adc
jo
mov
std
cmps
xor
bound
sbb
fdivr
mov
sti
fisub
enter
and
xor
dec
inc
pusha
xchg
sub
and
outs
inc
inc
movs
inc
cs
pop
xor
cwde
cmp
push
jl
cmp
sahf
jo
adc
or
mov
sub
outs
jmp
mov
pop
cmp
add
int
dec
mov
sbb
arpl
bound
ja
mov
ret
cmps
jmp
cld
repz
test
hlt
mov
aaa
xchg
(bad)
imul
aaa
fstp
add
outs
sbb
mov
mov
fs
ins
xchg
push
je
sbb
xor
fsubr
xor
imul
fadd
rol
outs
add
cmps
push
xor
push
imul
inc
cmc
or
fidiv
nop
aas
aam
sub
dec
in
add
mov
pushf
dec
popa
out
loop
xchg
cmps
shl
cwde
jb
retf
cli
int3
xlat
push
(bad)
sub
xchg
add
int3
inc
pop
shr
mov
jmp
xor
rcl
cs
fnsave
les
cmp
push
(bad)
out
hlt
mov
ss
jb
jmp
sub
aam
daa
pop
adc
and
out
mov
push
fistp
xchg
fwait
sub
push
inc
(bad)
sar
jne
cmp
mov
push
nop
lea
cs
out
cmps
add
into
sti
repz
jl
push
dec
aaa
lds
xor
lock
shl
add
jae
les
pop
idiv
xchg
sbb
cmp
mov
push
enter
xchg
jmp
add
add
leave
aaa
int
sub
int
mov
pop
cmp
ds
outs
gs
push
in
sahf
push
call
jge
push
pop
ret
xor
pop
scas
jo
repnz
not
std
sub
push
inc
mov
jmp
sbb
nop
sbb
test
jecxz
(bad)
push
inc
fisttp
push
inc
cmp
add
imul
(bad)
fiadd
repnz
loopne
popf
cmc
loope
xchg
push
arpl
aaa
adc
xlat
cs
dec
mov
sti
xchg
inc
mov
push
sar
pop
cmp
sbb
cmps
jmp
mov
mov
(bad)
pop
push
daa
icebp
repz
cwde
push
sub
jb
mov
sbb
jbe
test
outs
mov
mov
or
and
mov
jne
mov
jmp
xor
push
pusha
mov
dec
call
sbb
and
sub
pop
cmp
ret
mov
dec
mov
jmp
mov
loopne
imul
sbb
hlt
mov
stos
xor
fild
call
(bad)
icebp
push
mov
lahf
addr16
sbb
adc
xchg
data16
lock
add
aaa
adc
daa
test
mov
pop
mov
add
mov
sub
mulps
lahf
and
sbb
ret
cwde
jb
add
cmps
xor
(bad)
fist
ins
mov
xor
inc
push
ins
or
ror
xor
dec
mov
pop
cdq
pop
xchg
adc
jecxz
cmps
icebp
sbb
call
paddd
stos
out
jmp
mov
push
add
(bad)
scas
sub
inc
lock
dec
sbb
cmps
call
cmp
jg
and
jbe
inc
shr
dec
mov
dec
cwde
lds
lahf
mov
pop
call
adc
pop
and
cmps
pop
test
stos
dec
rol
and
aas
jb
ja
pop
(bad)
iret
push
imul
cmp
repnz
in
clc
cld
pop
(bad)
out
adc
or
lds
int
inc
jb
add
push
xchg
lods
xor
jns
push
pusha
dec
lea
out
ret
adc
outs
pop
fst
fimul
dec
mov
retf
shr
in
rol
adc
rcl
fwait
xchg
mov
jb
ret
loop
sbb
or
push
rcl
pop
inc
mov
sbb
cmp
sbb
or
lea
ficomp
ret
arpl
jecxz
mov
mov
or
or
mov
push
jns
jmp
je
movs
popa
in
in
jbe
std
inc
and
sub
into
mov
mov
mov
jg
sbb
mov
adc
xchg
inc
push
test
jle
pushf
loopne
cmp
or
loope
loope
imul
mov
push
in
mov
nop
nop
lods
fstp
in
(bad)
xlat
loop
jmp
jmp
jge
jno
xchg
add
cmp
jmp
xchg
movs
or
mov
lahf
dec
mov
add
mov
mov
jmp
lods
mov
inc
hlt
hlt
rcr
out
imul
cmp
dec
xchg
fidivr
arpl
test
jns
fadd
test
mov
adc
lods
cmp
(bad)
and
pop
dec
test
or
sti
cmps
(bad)
or
mov
fcomp
jecxz
in
popf
cmp
cwde
icebp
mov
gs
add
mov
or
(bad)
hlt
dec
icebp
sub
int3
fimul
pop
push
xchg
lods
cmp
xor
retf
out
jmp
and
test
outs
js
or
pop
test
cmp
dec
jbe
jge
dec
cmps
ss
sbb
xchg
data16
dec
repz
pop
pop
in
fisttp
jae
lods
dec
xchg
repz
test
sti
and
push
pusha
imul
test
in
ret
cmc
fidiv
adc
int
sub
stos
mov
popa
jp
jno
cmp
mov
dec
stos
rcl
inc
test
mov
les
and
arpl
and
fldcw
sahf
fmulp
outs
inc
jge
out
retf
and
iret
loope
jb
outs
data16
mov
xchg
jno
push
pop
psraw
push
gs
test
mov
js
cmp
enter
cmp
repnz
stos
test
add
mov
jmp
xor
xchg
(bad)
pop
out
and
scas
push
pusha
shl
(bad)
or
push
fisubr
push
dec
es
enter
pop
jle
ficomp
lahf
mov
test
pop
out
stos
cmp
repz
pop
leave
lock
ret
jge
sbb
cdq
hlt
popa
pop
sub
(bad)
rcl
push
sub
and
inc
scas
dec
or
adc
cmp
sub
xor
sbb
inc
inc
push
lock
mov
inc
and
xlat
int3
out
imul
mov
inc
push
loope
test
shr
popa
mov
mov
js
aad
jns
repz
mov
cmp
pop
arpl
pop
xchg
js
movs
cli
pop
lock
(bad)
ds
lods
pop
mov
repnz
xchg
test
and
test
loopne
cmp
out
cmps
cmp
xlat
push
push
adc
lods
mov
and
pushf
(bad)
jmp
imul
in
ja
adc
mov
add
ins
aaa
sbb
mov
test
push
stos
xchg
and
pop
xor
jmp
sbb
sbb
clc
and
ror
push
sub
cmp
cmps
sub
xchg
loop
es
cmps
mov
gs
jg
pop
or
loope
or
pop
(bad)
jmp
jo
lea
aaa
sub
imul
in
sbb
shr
jecxz
mov
sbb
sub
xchg
icebp
test
js
sbb
jp
adc
xchg
retf
(bad)
lea
fucomip
sub
repz
gs
test
outs
inc
pop
mov
stos
clc
cmp
retf
or
aam
sbb
adc
adc
scas
test
and
ds
or
dec
in
pop
sahf
jmp
loopne
fbstp
cmp
xchg
(bad)
leave
xchg
xchg
xor
and
outs
add
popa
scas
pop
pop
or
cmp
add
xor
and
stc
fdiv
sahf
xchg
rcr
mov
iret
adc
or
pop
mov
jle
sub
ja
fst
cmp
mov
inc
pop
inc
les
cs
mov
dec
cmps
dec
cmp
mov
lods
xchg
sar
cs
adc
xor
das
into
dec
les
call
jns
push
add
imul
ds
lock
bound
outs
cli
pushf
scas
stos
sub
push
fs
data16
into
jo
mov
ins
cmp
push
pop
stc
ins
mov
out
add
push
ret
addr16
cwde
jmp
lods
adc
xor
retf
in
mov
sub
clc
or
xor
lds
xchg
cmps
test
scas
jne
ficom
and
push
xchg
push
scas
pop
int3
out
enter
pop
dec
mov
stos
inc
sub
jb
ja
jmp
or
movs
into
dec
sbb
pop
xor
push
and
dec
sub
cwde
mov
jmp
fucomp
add
ret
jg
int3
or
shl
popf
inc
dec
ja
rcl
call
cmp
or
fstp
sbb
push
mov
lahf
mov
int
les
pop
xchg
mov
xor
jp
(bad)
xchg
out
dec
retf
push
repnz
push
js
pusha
sbb
lds
inc
mov
test
mov
mov
fwait
inc
mov
add
fdiv
(bad)
jmp
rcl
test
in
cwde
pop
aaa
loopne
movs
cmp
mov
daa
mov
mov
fbstp
movs
fisub
leave
stc
jo
mov
cmp
adc
jl
xlat
add
push
mov
xor
inc
cmp
jno
fwait
pushf
je
cdq
ficomp
adc
in
ja
pop
pusha
xchg
mov
fwait
and
mov
cmp
or
inc
lock
and
out
ss
mov
repnz
stos
scas
scas
mov
arpl
add
out
ror
push
and
cwde
mov
sbb
icebp
das
(bad)
mov
pop
pusha
mov
mov
mov
in
push
cmp
fdivr
(bad)
(bad)
jmp
out
cwde
mov
mov
scas
(bad)
pop
int
out
test
loop
mov
cdq
xchg
stc
mov
sar
mov
in
gs
mov
ins
aas
in
xor
jmp
or
mov
repnz
and
clc
sar
adc
test
call
pop
or
pop
arpl
adc
ss
fiadd
mov
das
cmp
add
test
icebp
dec
mov
add
inc
xor
outs
add
aam
cmp
cwde
xchg
cmp
sbb
aam
and
into
mov
fisub
adc
lock
mov
push
cld
mov
ret
call
mov
xchg
push
es
retf
daa
and
repz
jl
arpl
and
or
enter
(bad)
mov
inc
xchg
lahf
dec
add
and
jnp
dec
mov
out
ret
icebp
(bad)
and
mov
sbb
adc
sub
xor
mov
test
cmp
cmps
ror
icebp
dec
shl
repz
xchg
ins
inc
stc
fistp
ficom
mov
outs
movs
pusha
imul
test
retf
jmp
imul
dec
fnsave
inc
js
cli
cmp
retf
pop
rcr
adc
sbb
cmp
rcl
fisub
dec
inc
cmps
and
dec
mov
pop
cmp
adc
jecxz
mov
push
ret
add
(bad)
jge
mov
jnp
ja
jne
out
lods
scas
into
call
sub
cmp
ins
gs
pop
adc
dec
jb
pop
in
rcl
add
and
adc
cmps
fiadd
adc
stc
outs
or
jae
xor
sahf
mov
fnsave
int3
fs
dec
fcmovbe
mov
fcomp
ret
mov
mov
jns
sub
sbb
gs
rcr
aam
add
aam
int3
mov
mov
push
scas
or
bound
in
gs
dec
dec
popa
mov
aaa
je
xor
sbb
cmp
dec
and
cmps
jae
push
sbb
movs
jge
in
movs
jle
adc
jnp
push
push
aaa
adc
mov
dec
sub
cmp
sbb
repnz
sbb
jmp
jbe
das
int
dec
mov
test
pop
cmp
push
push
imul
cmp
inc
scas
outs
hlt
sub
mov
jne
mov
aaa
imul
lahf
lods
dec
sti
inc
fsub
and
stos
ror
add
add
push
or
push
fwait
xchg
and
jg
scas
popf
xor
cmp
xchg
fdiv
sti
jns
lahf
add
lock
retf
sub
int
dec
scas
popa
outs
into
jne
sbb
xchg
outs
cmps
popa
out
inc
lahf
push
loopne
push
mov
data16
xchg
mov
jp
imul
add
mov
mov
inc
cli
test
push
jbe
movs
push
push
adc
into
enter
leave
cmp
loope
retf
xor
adc
pop
arpl
xor
into
xor
jge
in
repnz
sbb
cmp
mov
and
(bad)
mov
data16
mov
or
jmp
inc
fmul
cli
mov
or
xchg
or
aad
movs
xor
pop
mov
neg
out
or
fstp
jmp
in
mov
neg
add
fisubr
push
sub
sbb
(bad)
adc
pop
cld
pop
fisttp
cdq
out
jno
push
xchg
in
pop
add
jns
fisubr
push
out
les
add
std
sub
jno
stos
mov
imul
cmps
push
cmc
popf
fldenv
jns
int
ss
in
shr
mov
xor
jne
arpl
scas
sub
aad
and
push
sbb
mov
ins
nop
push
movs
mov
rcr
ss
xchg
cmp
pop
pop
sar
add
pop
mov
or
adc
loopne
cmp
mov
arpl
in
adc
cli
cli
mul
sub
jnp
nop
push
pusha
push
xchg
mov
loop
dec
pop
call
jl
jmp
cmp
dec
or
or
nop
lods
popa
jns
retf
mov
adc
aaa
ret
loope
mov
out
or
cld
int
pop
push
int
inc
rcl
movs
mov
pop
test
mov
xchg
icebp
sbb
inc
xor
and
add
out
fld
mov
jns
and
fistp
push
movs
jno
fld
fiadd
sar
in
popf
pushf
cmp
or
call
jp
mov
sbb
add
adc
clc
movs
mov
nop
mov
adc
gs
mov
rcl
inc
push
test
mov
add
cdq
dec
int3
jmp
imul
jae
jp
add
inc
adc
lods
fs
movs
or
scas
mov
mov
iret
retf
fst
cmp
rcr
xchg
mov
popa
mov
imul
cmps
adc
add
shl
xchg
sbb
push
sar
adc
inc
rcr
in
mov
and
jns
mov
mov
xchg
push
shl
jne
icebp
push
sbb
pop
cmc
xor
loop
mov
jno
mov
cmp
xchg
repnz
sub
pushf
fist
xchg
mov
dec
push
and
call
sub
idiv
or
shr
pop
mov
mov
lea
sub
std
pusha
xchg
pushf
in
inc
mov
cmps
pop
jmp
lahf
mov
mov
dec
aad
pop
push
mov
xor
in
adc
sahf
mov
test
loope
jb
add
je
out
dec
clc
jae
mov
xchg
gs
xchg
repnz
adc
test
les
xor
rcr
xchg
xchg
jg
push
or
neg
inc
dec
(bad)
lods
push
jmp
cdq
rol
fucomi
stos
stos
or
sahf
push
lea
jmp
sub
push
and
push
ffreep
fstp
call
test
dec
fst
ins
sub
pop
addr16
dec
stos
(bad)
mov
mov
dec
xor
mov
(bad)
int3
mov
movs
sub
dec
mul
lds
lods
mov
(bad)
xchg
xor
popa
dec
lods
and
mov
(bad)
int
cdq
(bad)
add
lds
and
sbb
enter
ja
push
pop
xchg
imul
js
xor
mov
lods
cld
xchg
xchg
mov
pop
sbb
idiv
cmp
test
pushf
sbb
mov
jbe
mov
xchg
ja
sub
test
xor
mov
retf
pop
xchg
or
je
cmps
pop
and
cmps
xchg
ss
push
mov
push
sub
adc
shr
xlat
mov
and
cmp
pop
inc
ret
pop
mov
cmc
dec
shr
ins
out
adc
ds
loopne
sahf
stos
out
push
jl
ins
push
push
in
ins
xor
or
movs
push
mov
push
mov
dec
fcom
shl
xchg
add
adc
sahf
jnp
pop
data16
or
add
sbb
jg
ret
imul
mov
fldenv
iret
mov
xchg
push
pop
mov
fs
sub
int3
lahf
push
cmp
mov
daa
hlt
test
mov
sbb
mov
rcr
loop
outs
mov
add
xchg
push
dec
std
cmp
inc
mov
jbe
pop
jg
mov
retf
iret
and
fwait
and
xchg
icebp
add
xor
test
push
cmp
adc
inc
shl
aad
aas
out
sar
jecxz
shl
rol
(bad)
and
imul
jmp
push
or
or
bound
jnp
or
cmps
pop
mov
shl
jne
mov
jmp
xor
xor
push
(bad)
dec
mov
out
jbe
sub
xor
clc
add
mov
fbstp
mov
xor
nop
mov
mov
enter
mov
shr
(bad)
cli
xor
jle
push
pop
(bad)
add
in
and
or
mov
jo
in
inc
push
push
cmps
(bad)
sbb
ret
cld
imul
popf
or
popf
(bad)
ror
jge
add
rep
mov
(bad)
shl
mov
daa
ja
popf
cwde
rol
or
and
in
or
int3
ja
sub
cdq
mov
xlat
popa
cmp
int3
(bad)
xchg
lea
xlat
sub
in
fnsave
iret
and
ficom
addr16
mov
popa
fnstenv
test
or
das
sub
stos
mov
cmps
inc
mov
(bad)
pop
mov
cmp
clc
pop
push
cmc
sub
ficomp
pop
or
stc
inc
sar
sbb
cdq
iret
aas
and
aam
mov
aam
mov
mov
mov
out
clc
and
and
(bad)
push
scas
mov
(bad)
jg
or
dec
mov
lock
fisub
arpl
push
out
stc
push
sub
and
add
jns
pop
adc
cs
inc
leave
mov
in
dec
and
addr16
push
idiv
xor
fdivr
dec
sti
scas
popa
sub
imul
pop
and
inc
sbb
aaa
imul
sub
push
rol
(bad)
(bad)
out
inc
fbld
add
pushf
cmp
push
es
and
mov
in
popa
fwait
push
into
and
push
test
fisubr
push
cmp
cmp
push
xchg
ins
jl
sar
xchg
sbb
xor
stc
mov
nop
mov
cmovp
out
dec
mov
test
fadd
sub
js
adc
mov
jmp
fsub
pop
mov
sub
arpl
sub
lea
xchg
xchg
fdivr
cmp
lods
cmps
push
repnz
push
mov
push
lods
retf
fdiv
retf
inc
mov
or
into
mov
pop
add
test
lock
clc
(bad)
push
mov
mov
dec
popf
ret
mov
pop
scas
pop
push
imul
rcr
mov
sti
cwde
xchg
les
adc
test
stc
in
xor
cdq
repnz
ds
in
scas
loope
stos
nop
push
cmp
xchg
in
std
xor
push
jmp
sub
sti
jb
into
popa
lea
mov
dec
add
xchg
(bad)
les
cmps
jns
cmp
mov
add
jno
xchg
sbb
jae
fst
xor
hlt
pop
jnp
nop
aad
xchg
aaa
jns
xor
cmc
pop
in
lea
mov
dec
stc
call
pop
push
mov
loop
xor
xor
push
(bad)
adc
push
bound
cdq
shl
out
ss
adc
add
fnsave
nop
pushf
mov
loopne
pop
pushf
inc
je
push
push
cdq
mov
test
sbb
cwde
imul
imul
leave
adc
pop
or
imul
fwait
bound
(bad)
gs
fnstenv
or
div
in
bound
xchg
cmc
or
scas
retf
call
cli
push
les
into
call
clc
cs
sub
pop
dec
mov
call
inc
sbb
and
aas
inc
push
int3
iret
test
fmul
jae
data16
dec
pusha
idiv
scas
and
xchg
data16
mov
add
jle
mov
sub
mov
jge
pop
aad
mov
test
xor
(bad)
movs
xor
add
push
aam
stc
(bad)
sub
test
inc
icebp
out
leave
mov
test
test
xor
mov
ds
and
les
fiadd
xchg
and
cmc
pop
sbb
adc
fnstsw
call
not
adc
ret
(bad)
fisubr
aaa
xchg
clc
mov
xacquire
sub
mov
ret
daa
stc
sbb
jne
into
std
add
push
push
(bad)
xlat
outs
inc
std
test
push
add
out
cli
dec
ds
outs
or
xor
std
adc
mov
mov
popf
mov
lods
and
xor
mov
jecxz
cmp
not
aaa
add
or
fbstp
mov
aad
adc
div
mov
mov
cmps
adc
and
sub
out
adc
popfw
stos
or
pmulhw
pop
mov
scas
adc
rcr
mov
sbb
test
xchg
push
inc
gs
in
jle
sbb
or
gs
mov
iret
sub
ss
or
xchg
sub
add
ret
enter
loop
sbb
shr
fwait
jnp
jns
push
jno
arpl
sar
das
ss
xchg
and
movs
shr
add
fnsave
out
xchg
stos
adc
jl
inc
dec
popf
xchg
xor
addr16
xor
cld
mov
neg
jnp
cld
jmp
call
test
add
sub
push
mov
in
inc
mov
and
xlat
iret
push
cli
xchg
stc
pop
cmp
dec
popa
adc
out
fsubr
call
xlat
fst
mov
cmp
mov
push
aaa
movs
clc
sar
or
cdq
adc
add
xchg
push
into
sbb
sub
jae
out
xor
lods
je
outs
clc
fist
loope
jp
sbb
and
aaa
push
addr16
jne
retf
pop
add
adc
jge
mov
xchg
(bad)
je
mov
dec
xchg
ficomp
push
sbb
ror
jno
int3
popf
test
mov
mov
add
dec
popa
pop
adc
pop
icebp
mov
inc
(bad)
mov
sahf
add
bound
or
sub
add
les
inc
cmp
jns
jae
ds
icebp
add
mov
sahf
pop
push
sbb
ror
loop
cmps
mov
inc
in
cmc
add
cmp
mov
adc
xor
xchg
dec
pop
ja
ret
and
push
test
sbb
xor
push
pop
rcr
or
aam
lea
outs
sub
sub
sahf
cmp
jge
call
push
jbe
sbb
jmp
xor
aad
push
xor
nop
sub
add
mov
and
add
sti
adc
lea
cmp
or
out
jmp
or
jl
add
enter
add
push
push
pop
push
and
iret
cmp
sub
mov
push
lods
ret
je
jo
aam
push
fdivr
dec
ret
fcomp
mov
(bad)
pop
jmp
or
inc
icebp
retf
sbb
add
arpl
or
xor
cdq
arpl
(bad)
bnd
dec
jne
push
enter
xor
loopne
xor
add
xlat
popf
jae
inc
add
imul
fsubr
adc
popf
pop
sub
iret
test
and
dec
add
pop
push
in
jae
pop
sub
das
cmp
jecxz
sbb
pop
ror
mov
push
stc
jmp
xchg
sub
outs
mov
mov
push
xor
call
into
jno
inc
aaa
repnz
mov
xchg
push
in
and
pop
cld
sub
xor
stos
mov
xor
dec
and
push
cs
lds
sar
xor
ins
push
or
cmp
(bad)
call
sub
neg
mov
xor
(bad)
mov
hlt
pop
je
lea
lds
repnz
inc
sbb
stos
pop
mov
in
inc
(bad)
cmc
adc
(bad)
movs
(bad)
dec
into
add
xor
mov
adc
mov
sbb
(bad)
pop
pop
je
mov
rcr
rcl
jl
dec
dec
push
lahf
add
stc
retf
pop
es
fucomi
fld
js
jns
xor
xchg
sbb
inc
push
sub
addr16
mov
ja
jle
scas
mov
lods
jmp
dec
sbb
pop
in
ror
loop
iret
sub
push
lahf
ret
push
rep
lds
je
arpl
js
(bad)
idiv
gs
cmc
xor
mov
push
sbb
gs
les
pop
out
jecxz
sub
inc
pop
ror
(bad)
icebp
cli
aad
or
push
dec
rcr
div
pop
(bad)
scas
and
test
mov
xchg
cmp
adc
bound
test
dec
push
sub
jp
mov
les
jno
adc
imul
in
jnp
jne
leave
int3
inc
dec
aas
loop
call
fwait
cmps
cmp
fnsave
sbb
sub
or
pop
movs
ret
aad
arpl
dec
ret
mov
xchg
dec
pop
rcl
movs
xchg
daa
push
pop
pop
mov
sti
mov
lea
jo
xchg
ret
frstor
out
std
fisub
(bad)
(bad)
cld
push
icebp
pop
sub
push
and
neg
aas
movs
mov
or
dec
jecxz
push
mov
jno
mov
adc
jbe
aaa
cmc
push
adc
hlt
(bad)
shr
dec
test
adc
jns
call
pop
fild
cmps
outs
mov
jge
cmp
fdiv
ds
(bad)
cdq
loope
aas
cmp
test
sbb
cmpps
mov
or
test
(bad)
jb
(bad)
or
aas
jb
mov
test
cmp
sbb
dec
push
mov
rcr
idiv
out
(bad)
std
std
pop
mov
sub
aad
cmps
in
sbb
repnz
aaa
les
(bad)
push
daa
jb
cdq
and
mov
fwait
in
fild
ja
jo
xlat
ss
out
lea
xor
out
jmp
sbb
sub
icebp
leave
and
xchg
movs
dec
leave
xor
mov
rcl
call
mov
mov
mov
iret
(bad)
daa
mov
(bad)
adc
xor
mov
rcl
(bad)
adc
sbb
mov
jno
rol
cmps
mov
jp
cmp
fld
xchg
push
popa
loope
jo
add
and
adc
lods
jmp
fld
es
int
ret
icebp
jnp
dec
jae
push
(bad)
cmps
xchg
dec
xor
not
cli
lock
jge
jmp
out
jno
das
test
aam
xchg
adc
mov
jne
adc
mov
out
lock
xchg
mov
push
mov
lods
imul
mov
mov
adc
popf
das
inc
add
stos
in
push
adc
(bad)
and
add
push
mov
pop
sbb
jne
std
or
addr16
mov
adc
dec
jnp
(bad)
int3
bound
pushf
cld
and
movs
mov
js
mov
stc
inc
jecxz
mov
aam
sti
mov
push
mov
daa
sbb
add
cmc
sub
test
out
push
jmp
xor
fisttp
or
push
push
loopne
rcl
fiadd
dec
push
mov
arpl
arpl
in
push
in
loop
push
sti
cwde
adc
and
repz
cli
sub
mov
ror
scas
pop
(bad)
pop
mov
xor
out
pop
imul
scas
mov
xchg
pop
push
xchg
fmul
inc
push
sbb
sbb
ja
adc
movs
xchg
sub
mov
fistp
mov
adc
push
push
inc
inc
in
hlt
and
jmp
add
sti
inc
in
or
adc
mov
cmp
push
pop
pop
dec
cdq
push
scas
cmp
movs
mov
push
sahf
(bad)
pop
fisttp
pop
mov
mov
pop
sub
(bad)
lahf
xchg
mov
imul
movs
stos
ret
sub
xchg
push
sbb
(bad)
cmc
test
scas
inc
jnp
adc
fsubr
push
xchg
sub
push
iret
sbb
enter
loope
add
or
adc
push
enter
push
adc
xor
sub
jle
loop
sbb
jnp
mov
popf
adc
lds
loopne
popf
or
aas
xor
adc
test
hlt
push
retf
out
sub
(bad)
dec
pop
push
shl
mov
and
mov
push
fimul
scas
xor
mov
sbb
mov
cmps
(bad)
fisttp
leave
daa
and
xchg
call
adc
shl
jmp
das
push
mov
out
popf
pop
push
popf
pavgb
dec
imul
mov
aaa
retf
nop
and
sub
stos
cmp
adc
in
push
jg
lahf
add
jnp
mov
scas
rcr
cmp
ja
aaa
popf
mov
and
mov
jo
or
xchg
ficomp
icebp
rsm
sahf
jp
jg
cmc
(bad)
xor
clc
bound
pop
fprem1
aam
call
(bad)
ja
lock
imul
in
xchg
jle
and
mov
push
test
jg
jge
test
mov
arpl
or
pop
sti
cmc
mov
jge
and
pop
ja
mov
fisttp
cmp
es
xchg
stos
push
mov
lods
push
adc
add
sub
push
cmp
pop
out
sbb
ss
dec
mov
sar
pop
mov
jb
mov
aas
sub
repz
(bad)
mov
sti
hlt
or
call
pop
xchg
cwde
or
adc
std
lds
icebp
cmp
push
mov
fild
dec
cmp
retf
in
out
inc
sub
xor
(bad)
into
mov
or
pop
dec
js
xor
imul
push
rol
popf
cdq
adc
icebp
mov
dec
adc
mov
mov
mov
inc
bound
out
push
or
adc
pop
cld
cli
outs
inc
mov
gs
stc
pop
lea
int3
push
int
rcr
sub
shl
jnp
test
and
and
movs
ror
sbb
scas
or
xor
xor
lods
loope
out
push
in
pop
or
pushf
div
jp
jg
dec
je
(bad)
popf
add
inc
mov
jnp
clc
xchg
jb
faddp
int3
mov
push
mov
dec
hlt
add
jmp
xlat
ror
popa
(bad)
sub
mov
int3
dec
add
cld
std
xor
ror
mov
ja
mov
sub
pop
or
retf
scas
rol
into
jle
pop
addr16
or
add
adc
out
pop
inc
pushf
dec
sbb
xchg
inc
dec
lea
lds
push
cmp
lods
int3
mov
push
inc
cdq
outs
push
lea
(bad)
sub
aad
adc
inc
or
pop
sub
les
fdivr
(bad)
inc
mov
(bad)
adc
js
cmp
pop
xor
inc
sbb
sbb
cmp
mov
cmps
push
(bad)
jno
jmp
inc
jae
cwde
out
mov
xchg
add
sbb
jo
mov
scas
jmp
aam
xchg
pop
and
sub
inc
xchg
jl
push
adc
or
add
in
inc
cmp
fsub
xor
inc
jno
leave
neg
cmps
dec
adc
enter
mov
push
dec
jmp
add
adc
mov
(bad)
cmp
(bad)
and
dec
movs
cli
popf
pop
call
aas
mov
push
pop
loope
pushf
push
dec
pop
aaa
mov
div
out
movs
xor
cmp
push
loopne
pop
sub
ins
out
shl
jecxz
push
pusha
xor
arpl
imul
ins
inc
das
fld
jbe
push
cdq
stos
and
test
sub
or
mov
fwait
or
ss
rol
lods
jno
gs
enter
je
fstp
cld
aad
sub
or
mov
xbegin
or
shl
call
adc
pop
adc
es
xor
mov
dec
sti
jns
(bad)
adc
rol
mov
or
dec
push
mov
not
cld
mov
jnp
loope
int
jmp
mov
jno
push
movs
sbb
push
dec
out
fucomip
addr16
xor
(bad)
lock
(bad)
hlt
mov
outs
mov
push
mov
je
out
scas
in
push
mov
xor
out
or
test
cli
icebp
shl
push
jl
push
imul
movs
stos
mov
iret
push
imul
adc
push
mov
pxor
mov
aaa
rol
mov
pop
push
shr
aaa
dec
or
xlat
jl
mov
add
cs
inc
call
adc
mov
scas
addr16
cmc
movs
pextrw
and
pop
aad
pop
cs
pop
lods
int
or
out
mov
vpandn
sbb
sti
cmp
fcmovb
ins
mov
ja
xchg
enter
mov
iret
mov
imul
shl
arpl
mov
add
push
cmp
or
in
movs
inc
sub
and
sub
lea
ror
cmp
out
addr16
jmp
dec
fnstenv
sub
sbb
cli
sub
adc
or
sbb
sub
inc
rol
and
pop
sbb
dec
mov
xor
pop
jno
mov
sbb
sub
push
ins
and
lahf
mov
mov
xchg
or
stos
retf
xchg
pop
rcr
test
and
mov
add
jg
ja
jp
loop
xchg
xchg
popa
mul
addr16
inc
lahf
and
mov
pushf
mov
jb
jbe
lds
dec
add
pusha
sbb
inc
clc
and
mov
sar
mov
aam
mov
popa
xchg
cmps
push
xchg
iret
or
adc
mov
jns
mov
jno
fdiv
call
inc
add
daa
mov
enter
data16
jb
inc
in
pop
stos
imul
sub
das
ds
push
in
mov
and
or
inc
mov
adc
ret
xor
xchg
scas
inc
icebp
xor
dec
mov
jo
cmp
sbb
and
xchg
and
jg
sub
add
aas
adc
outs
push
(bad)
out
push
adc
movs
mov
fimul
push
sbb
and
pusha
pop
push
cmps
arpl
popf
sub
ss
enter
inc
mov
mov
je
and
cdq
stc
in
or
jmp
je
or
mov
cdq
xchg
push
je
neg
test
pop
fwait
stos
mov
ins
jb
aaa
lahf
daa
mov
xchg
jmp
mov
cmps
or
loope
jbe
(bad)
mov
pop
std
daa
gs
push
in
xchg
ja
push
(bad)
test
rcr
cmp
mov
add
jg
daa
jne
push
pop
sub
cmps
repnz
dec
mov
pop
fild
or
mov
loop
or
mov
aaa
ret
les
test
mov
pop
addr16
push
popf
xchg
(bad)
xchg
test
fdivr
mov
test
dec
sub
(bad)
(bad)
shr
or
cmps
mov
sbb
cdq
inc
push
add
loopne
dec
leave
jge
pop
mov
dec
or
js
mov
in
ret
mov
dec
inc
sbb
xchg
jns
cmps
pusha
mov
out
mov
loopne
ins
push
mov
xor
sub
sti
jge
(bad)
fdiv
nop
inc
inc
adc
xchg
sbb
adc
mov
fbld
cmp
sbb
pop
lock
cmps
or
mov
jo
mov
test
dec
mov
dec
je
adc
add
sbb
pushf
ret
in
fmul
fistp
xor
pop
call
stos
push
jmp
xchg
dec
xor
cmp
repnz
pusha
xchg
enter
or
inc
loope
and
push
int
or
sub
addr16
sbb
(bad)
outs
or
push
mov
rol
jp
and
cld
stos
fdiv
fiadd
pusha
xchg
mov
mov
(bad)
test
lock
inc
loopne
push
das
test
movs
inc
adc
pop
aas
add
bnd
fbld
jnp
add
dec
sub
lahf
cwde
stc
dec
je
fcom
cwde
out
push
(bad)
jmp
mov
or
enter
mov
push
sbb
xor
dec
fcompp
push
inc
xchg
inc
ins
xor
mov
inc
dec
call
mov
jbe
inc
pop
js
fwait
pop
inc
or
movs
das
cmp
jle
xlat
xor
sbb
sub
mov
push
adc
mov
adc
jg
sub
adc
enter
mov
mov
call
popa
dec
out
scas
retf
xchg
shl
stos
(bad)
cmp
shl
xchg
sbb
clc
mov
aam
out
nop
mov
retf
dec
inc
cmp
adc
xor
stc
jecxz
aas
cmp
cmps
mov
cmp
push
sbb
sbb
jbe
cmp
xchg
jb
fcom
jle
mov
movs
push
adc
mov
xchg
mov
dec
ret
push
mov
pop
cmp
cld
jmp
or
pop
sti
dec
mov
sbb
push
mov
test
movs
imul
(bad)
into
inc
inc
ret
jmp
mov
add
push
mov
push
push
fxch
mov
mov
stc
shl
inc
xchg
xchg
jge
push
xchg
ja
pop
xchg
mov
cmp
and
popa
(bad)
pusha
dec
lds
add
and
hlt
fstp
or
cmp
xchg
out
push
jp
xchg
je
mov
inc
mov
jns
js
loope
aas
sbb
pusha
dec
jl
cs
retf
dec
sbb
mov
add
mov
mov
adc
push
push
aad
test
iret
xchg
pop
nop
ror
cmp
and
pop
pop
xchg
or
js
push
jmp
or
mov
sub
lock
or
sbb
or
test
daa
dec
scas
mov
mov
mov
repnz
(bad)
out
add
lods
enter
lea
dec
add
mov
jecxz
adc
mov
jo
mov
clc
sub
sahf
cmp
sbb
xor
loop
shl
sub
sbb
or
push
add
(bad)
out
mov
fidiv
rol
jp
pop
rol
mov
mov
xchg
popa
jnp
sti
sbb
xchg
outs
stos
adc
sbb
int3
cli
jmp
adc
clc
cmp
jmp
jmp
dec
daa
xor
pop
fsubr
loopne
nop
or
and
add
test
sub
mov
es
aaa
dec
pop
jnp
cmp
jns
or
int
add
aas
add
pop
rcl
mov
cmps
and
dec
mov
mov
sbb
cmp
mov
loop
movs
pop
test
(bad)
into
xchg
and
cmp
inc
push
scas
jl
and
lds
int
mov
mov
fsubr
xchg
xor
and
ins
cmc
sbb
sar
add
xchg
sub
movs
adc
lds
sub
sti
jns
data16
xchg
out
jo
dec
add
fs
fadd
fwait
outs
mov
mov
sbb
dec
mov
or
pop
aad
pop
sbb
neg
cwde
pop
out
cld
sti
je
push
inc
nop
loopne
mov
fld
popf
and
leave
xchg
cdq
mov
shl
aas
push
(bad)
mov
cmp
call
sbb
sbb
mul
jmp
shl
or
ret
sub
mov
xlat
aam
int
jmp
out
loop
cmc
cmp
ficom
adc
arpl
pop
mov
ret
xor
leave
and
repnz
out
sti
inc
cwde
xchg
fstp
mov
mov
cli
(bad)
fnstenv
aaa
mov
jno
mov
(bad)
bound
ins
fistp
inc
inc
add
cmp
and
or
cld
sbb
in
outs
icebp
retf
mov
call
pop
xor
clc
stos
call
cmp
xor
cmp
lds
push
cmp
lock
push
repz
and
add
call
xchg
cld
outs
in
std
cmp
fist
sub
mov
cld
push
adc
cmp
inc
js
and
bound
jecxz
push
dec
mov
xchg
aaa
lock
push
inc
enter
imul
xor
div
stos
mov
pop
sbb
and
mov
inc
mov
movs
fnstenv
mov
dec
push
mov
loopne
jno
mov
mov
adc
mov
xor
xchg
or
outs
(bad)
sbb
cmp
ret
mov
out
es
nop
xchg
or
adc
sub
fisub
or
mov
nop
or
idiv
jg
retf
mov
je
dec
enter
(bad)
pushf
imul
adc
pop
jne
push
xchg
jle
out
imul
and
repz
popf
pop
jns
cmp
aad
lock
adc
mov
cmp
and
add
xchg
xor
jl
sbb
imul
mov
ds
fisttp
loope
pop
hlt
push
adc
push
or
stos
dec
mov
cmp
jno
and
repnz
jmp
or
loope
xor
xor
add
xlat
cmps
mov
call
xchg
adc
pusha
call
jg
(bad)
(bad)
add
mov
data16
fnstenv
nop
jp
loop
rcl
stos
stc
mov
lods
dec
add
jp
mov
xchg
xchg
add
test
adc
fwait
outs
push
jno
(bad)
jecxz
jp
fidivr
js
pusha
jl
lods
or
push
mov
out
dec
mov
fnsave
(bad)
mul
or
shl
arpl
stc
shr
xchg
push
or
pushf
xchg
jp
and
mov
rcr
mov
push
mov
sbb
add
les
mov
mov
daa
adc
leave
ss
outs
jns
jecxz
cmp
fild
lods
shl
pop
scas
cmp
sbb
or
jp
jg
push
push
or
cwde
mov
iret
cmps
adc
push
or
push
or
xor
mov
mov
pop
xchg
(bad)
rol
mov
adc
nop
popf
stos
jle
or
jecxz
loopne
out
fwait
movq
movs
cmp
into
sti
inc
sahf
jge
popa
outs
sub
out
js
pop
test
jmp
mov
(bad)
jmp
or
mov
add
sti
scas
ins
mov
arpl
inc
sbb
cmp
cli
mov
and
(bad)
fwait
mov
dec
mov
test
pop
inc
nop
push
mov
in
int
les
xorps
pop
retf
add
cmp
sbb
out
sbb
cwde
test
iret
daa
adc
dec
push
xchg
dec
inc
pop
les
xor
and
les
fdiv
in
jns
in
pop
outs
pop
sbb
xchg
(bad)
ins
add
mov
xchg
cwde
pop
ret
xchg
out
jmp
sahf
pop
mov
(bad)
xchg
add
das
mov
cmp
push
cld
mov
cmp
leave
pop
shr
int
mov
jmp
stos
inc
lock
xchg
pop
icebp
jg
push
loopne
fnsave
or
movs
mul
mov
mov
mov
push
daa
sbb
das
icebp
(bad)
imul
es
pusha
jmp
fwait
iret
mov
xchg
xchg
or
push
pop
lds
ds
shl
xor
shl
and
jb
cs
je
cmp
out
js
sar
imul
dec
mov
pop
sub
jae
call
inc
dec
data16
mov
int3
test
daa
mov
out
xchg
mov
and
ja
aam
pop
ss
inc
push
jmp
imul
cmps
xlat
push
pop
or
pop
fnstcw
mov
repnz
cli
ins
sub
movs
jbe
xor
ds
enter
cmps
jmp
xchg
les
ror
pop
dec
or
imul
mov
fnstenv
retf
gs
xlat
mov
xor
arpl
neg
in
adc
sbb
dec
ins
xchg
daa
xchg
cmp
mov
out
sbb
push
popf
push
mov
dec
xlat
es
pop
lods
int3
out
inc
xchg
or
sub
les
mov
inc
fs
(bad)
push
push
test
push
mov
xchg
cdq
xchg
dec
gs
mov
in
addr16
ins
arpl
push
loopne
and
imul
out
into
pop
ins
xchg
or
data16
xchg
or
call
ror
jmp
inc
lock
mov
rol
sbb
jl
inc
lock
ret
push
sub
sub
cwde
add
test
xor
add
fwait
xchg
add
mov
pusha
add
push
mov
mov
lahf
jg
jno
jns
js
pop
rol
jl
pop
mov
sti
pop
arpl
add
xchg
xchg
sysexit
(bad)
cmp
dec
data16
jnp
sub
hlt
fild
dec
mov
ins
cmp
outs
addr16
add
fisubr
and
bnd
loop
mov
mov
hlt
clc
jle
adc
jmp
(bad)
pop
pusha
dec
push
lods
mov
cmp
ss
push
movs
(bad)
xor
jb
loopne
mov
sub
xchg
adc
retf
mov
fwait
push
mov
ret
aam
push
mov
aam
pushf
or
shl
sbb
and
aam
inc
xchg
std
(bad)
imul
sub
scas
mov
fsubr
adc
ins
out
cmp
int3
jb
dec
pop
icebp
pop
mov
dec
js
and
cmp
add
imul
mov
mov
mov
in
sub
jmp
std
dec
and
sahf
jmp
loop
retf
xor
cmp
mov
bound
das
and
(bad)
sub
lock
mov
inc
addr16
jle
jo
lods
or
neg
lds
xor
stc
(bad)
nop
das
mov
je
ret
jae
in
pop
clc
sub
pop
not
pop
or
sub
mov
jg
mov
push
sub
test
push
push
aad
data16
dec
or
leave
jo
xchg
mov
and
int
jp
call
or
and
adc
adc
fwait
enter
call
jae
mov
inc
cmps
out
data16
jmp
and
push
retf
xor
xchg
outs
add
call
pop
xor
pop
push
or
and
daa
mov
mov
ja
(bad)
test
aad
lahf
into
inc
pusha
leave
icebp
adc
test
loop
xor
push
in
cmp
xlat
or
mov
cmps
sub
cmp
xor
sbb
daa
mov
xchg
lahf
push
and
bound
cmp
popf
bound
aam
or
pushf
in
sub
(bad)
leave
out
inc
push
xchg
mov
fiadd
inc
mov
cmps
adc
clc
xchg
fsub
inc
mov
sbb
xchg
xor
es
or
cmp
shl
repz
in
ja
adc
add
lods
mov
dec
mov
cli
and
adc
fst
in
pop
mov
lds
(bad)
jne
retf
or
outs
or
test
adc
cdq
push
and
pop
mov
cmp
test
push
icebp
ret
movs
(bad)
les
stc
xchg
hlt
xor
in
aas
mov
mov
xchg
sub
dec
and
push
es
dec
jae
sbb
inc
cmc
cmp
(bad)
pop
mov
bound
lods
clc
dec
iret
clc
aam
and
xor
stos
add
xchg
sub
jp
or
push
mov
sbb
add
ret
sbb
push
inc
add
(bad)
push
sub
inc
sti
xchg
sub
cmc
fwait
loope
jle
std
scas
mov
mov
stos
inc
shl
(bad)
fdiv
stos
inc
jle
ja
inc
jae
test
or
cmp
je
cld
aaa
pop
popa
sub
and
clc
out
dec
mov
adc
loopne
fstp
pop
xor
retf
jbe
enter
test
cmp
cli
cmp
dec
mov
jp
fldenv
mov
inc
inc
rcr
std
and
mov
aaa
xor
jb
test
mov
sbb
loop
and
push
and
out
daa
pop
dec
mov
jo
and
xchg
and
mov
loopne
sbb
pop
ret
add
xchg
out
or
sbb
add
sti
mov
sbb
xchg
xchg
ret
inc
daa
ins
pop
aaa
shr
mov
pop
and
jb
inc
cwde
add
cdq
fidivr
fs
outs
xor
icebp
ror
pop
movs
imul
leave
bound
call
lock
inc
in
mov
out
adc
xchg
pop
inc
jg
lds
cmp
ret
pop
stc
movs
pop
mov
jae
stos
push
cmp
std
push
mov
(bad)
or
inc
mov
fldcw
cli
sub
add
cmps
aas
gs
mul
call
and
in
jbe
dec
sti
ret
in
call
cmp
clc
aas
inc
jle
shl
arpl
jmp
test
shl
sbb
les
ror
outs
mov
inc
enter
jmp
cwde
enter
retf
mov
xchg
int
dec
cmp
add
pop
add
loope
and
iret
and
push
outs
inc
add
fist
cdq
fidiv
xor
xlat
sti
push
aad
cli
pop
sbb
cmps
mov
in
stc
popf
iret
sti
adc
mov
xor
fldcw
xchg
mov
lods
xchg
jecxz
fdivr
xor
imul
std
fxch
pop
loope
ins
pop
or
cmp
(bad)
cdq
scas
xchg
adc
std
inc
pusha
outs
mov
enter
ss
cmp
ror
sahf
arpl
lock
dec
test
adc
enter
in
test
loope
lea
les
xor
mov
inc
fdivr
mov
(bad)
mov
pmovmskb
mov
gs
out
call
pop
add
in
jle
mov
(bad)
add
repnz
and
in
pop
xor
adc
cmp
or
ret
ja
pop
adc
xchg
xor
cmp
scas
dec
cmp
lods
cmc
mov
stc
(bad)
pusha
das
nop
les
shl
cmps
sbb
call
pop
js
inc
pop
xlat
jb
or
or
and
popf
pop
mov
clc
scas
pop
sub
push
pop
mov
(bad)
adc
dec
xor
(bad)
mov
pop
cmp
scas
imul
push
xor
into
inc
pop
xchg
cmp
js
jl
push
test
popa
pop
adc
aas
iret
test
imul
jle
mov
test
jo
movs
inc
xor
dec
fsub
repnz
pop
ins
adc
adc
dec
sub
in
cmp
in
jae
push
mov
int3
jo
stc
mov
mov
mov
imul
pusha
out
cmc
repnz
pop
sub
push
pop
jne
fcomp
mov
push
stos
mov
hlt
scas
pop
in
sub
in
mov
cli
cmp
shl
aad
xchg
data16
push
ficomp
gs
push
cmps
inc
in
or
mov
aad
sbb
cmp
inc
fidivr
dec
pop
loopne
dec
int3
dec
(bad)
fbld
movs
jmp
push
push
inc
mov
std
popa
(bad)
push
jae
push
stos
push
in
adc
inc
mov
cdq
mov
lea
cmc
inc
cdq
push
aam
sar
mov
dec
stos
or
add
mov
push
or
add
retf
out
push
jg
fs
imul
pop
push
cdq
in
and
out
inc
jge
xor
leave
popa
cmp
push
cmp
adc
mov
mov
std
les
mov
sub
xchg
xor
jp
mov
mov
jmp
jae
jge
outs
jns
gs
jae
pop
ins
cmp
inc
retf
mov
stos
or
mov
adc
jnp
ror
inc
mov
fidiv
cmp
sub
and
cmp
ins
pusha
sbb
(bad)
cli
(bad)
(bad)
clc
stos
ret
popa
xchg
inc
cli
in
(bad)
cmc
xlat
into
or
cmp
pop
xchg
xor
push
cwde
ds
jne
add
push
popa
arpl
call
inc
pop
aaa
push
and
sub
and
ret
popa
fnstsw
stc
xchg
dec
out
dec
cmps
cmc
cmp
shr
or
lods
in
and
pop
ins
xchg
ret
cmp
(bad)
(bad)
jnp
sbb
out
add
gs
xor
cmp
cmp
lea
in
push
xor
int3
inc
fsubr
call
jle
mov
inc
daa
cmps
or
imul
test
(bad)
(bad)
sbb
xchg
inc
test
rcr
pop
jmp
jns
pop
push
xchg
mov
xlat
int
xchg
fisub
push
and
loop
sahf
dec
test
sub
or
mov
mov
popa
popf
mov
mov
mov
sub
and
shr
or
adc
inc
ds
mov
add
call
mov
dec
stos
jnp
(bad)
punpcklwd
xchg
out
cmps
and
mov
xor
scas
or
sbb
mov
inc
mov
arpl
in
cld
adc
mov
scas
add
mov
aaa
aam
jmp
fld
jle
xor
and
cmp
aam
inc
les
psubb
inc
or
cmps
push
mov
mov
mov
(bad)
pop
cmp
movs
mov
jno
stos
aaa
sub
movs
jo
push
fyl2x
loope
stos
fstp
inc
mov
(bad)
mov
sti
popf
push
push
adc
pop
inc
cmp
retf
dec
dec
dec
adc
pop
daa
cmps
in
add
inc
cmp
add
mov
hlt
int
xchg
enter
push
ret
mov
dec
and
loop
imul
mov
mov
pusha
fidiv
pop
ror
mov
add
pop
jg
dec
enter
xor
or
sbb
sbb
adc
std
inc
xor
mov
inc
loop
outs
pop
out
xchg
dec
dec
call
mov
and
loopne
ja
sar
push
push
dec
xchg
mov
mov
mov
cwde
pushf
jno
ss
jg
sbb
retf
xor
icebp
aas
xor
push
sbb
(bad)
jl
and
lods
test
lahf
push
inc
xor
and
mov
xor
cs
dec
nop
lods
mov
push
icebp
daa
adc
adc
or
mov
fiadd
sar
clc
jmp
adc
sbb
fbld
sub
pop
lods
ja
aaa
js
sbb
test
cmp
popf
repnz
shl
jp
xchg
fadd
sbb
movs
mov
cmps
push
cs
das
pop
sbb
scas
pop
addr16
mov
sub
leave
pop
push
data16
sbb
xlat
ss
jle
lock
in
stos
adc
and
loopne
and
mov
inc
idiv
xchg
fs
test
test
dec
ss
and
sub
ret
ds
cmps
jbe
leave
or
imul
mov
retf
push
or
cmc
loope
stos
pop
sahf
jmp
js
leave
sar
mov
not
lods
mov
mov
jae
sahf
sub
inc
shl
leave
lock
iret
test
and
and
pop
jo
into
mov
lods
(bad)
mul
or
out
repnz
push
sbb
sub
dec
pop
pop
sub
xchg
dec
aad
arpl
stc
sti
jecxz
imul
(bad)
push
fist
inc
imul
ror
cmps
retf
sub
xor
jmp
jns
cmp
dec
push
hlt
mov
dec
loope
inc
int
or
or
jecxz
pop
pop
dec
push
ins
add
pop
mov
neg
pop
shl
aaa
ss
lock
cmp
pop
and
push
fs
in
popa
sbb
ror
xor
sbb
mov
and
nop
xor
push
mov
aad
jmp
jle
push
(bad)
int
leave
pusha
adc
inc
sub
add
jmp
mov
inc
(bad)
jnp
jae
cmps
hlt
cdq
out
pop
into
sbb
jb
mov
adc
ror
mov
jecxz
sbb
pop
mov
inc
xchg
not
pop
dec
or
jecxz
movs
aam
bound
jns
cs
mov
sbb
scas
xor
mov
movs
pop
lea
retf
jo
and
outs
jecxz
xchg
arpl
sub
(bad)
leave
addr16
sub
dec
or
bound
jbe
nop
outs
jmp
adc
scas
mov
aaa
pop
in
xchg
das
ret
enter
es
je
popf
je
fwait
jns
mov
cmp
nop
movs
mov
jmp
push
(bad)
jecxz
mov
je
xchg
sbb
add
icebp
(bad)
daa
fcomp
fdiv
das
xchg
cdq
pop
leave
adc
ins
adc
sbb
jns
movs
aas
jmp
shr
mov
jb
(bad)
pushf
mov
sub
pop
retf
adc
xchg
(bad)
pop
jbe
push
xor
rol
stc
fs
aam
and
cmps
in
mov
pop
dec
xchg
outs
clc
add
scas
cmp
mov
aam
cwde
push
mov
jmp
xor
cwde
inc
push
jge
adc
mov
shl
retf
add
jge
pop
dec
adc
pop
dec
mov
clc
out
lods
(bad)
mov
mov
(bad)
fsub
ffree
dec
retf
push
add
cs
fidiv
pop
cmps
mov
add
mov
gs
xchg
mov
push
jecxz
fldcw
cmp
outs
inc
mov
add
push
out
sbb
(bad)
cmp
jbe
adc
aaa
mov
div
lock
iret
enter
cs
inc
dec
bound
jp
sbb
mov
or
jno
xor
lahf
mov
cmps
add
ja
inc
gs
or
mov
mov
xor
pop
or
and
cmp
sbb
mov
mov
jns
sbb
ss
push
adc
sbb
xchg
cli
ret
mov
in
push
sbb
xchg
rcr
scas
ror
or
dec
mov
adc
repz
push
lods
adc
sbb
and
sub
out
(bad)
js
push
das
mov
rcl
inc
push
mov
cmp
rcr
lock
pushf
xchg
cmp
rcl
sahf
add
cs
cdq
ins
push
push
outs
add
push
mov
cmp
cmp
js
outs
ins
push
mov
mov
call
iret
fidivr
adc
outs
xchg
imul
test
sub
dec
into
mov
xor
std
dec
or
inc
scas
rcr
dec
out
cmp
mov
xchg
mov
dec
gs
sub
mov
idiv
pop
or
arpl
push
aas
retf
das
stos
ds
movs
aad
dec
fnstenv
xlat
xchg
cdq
xor
retf
aad
movs
dec
movs
rcl
push
fmul
xor
or
or
dec
retf
add
push
std
and
mov
call
pop
or
and
add
xor
jl
push
mov
retf
cwde
mov
retf
jne
std
outs
push
or
jecxz
in
mov
ror
pop
pop
sbb
and
jmp
xchg
add
aaa
inc
popf
jne
mov
iret
mov
adc
sbb
pop
and
cmc
xor
pop
jl
mov
adc
cmp
jne
hlt
(bad)
mov
fldenv
imul
jecxz
es
mov
ffree
fucomi
ins
or
push
shr
pusha
adc
xchg
int
xor
inc
cmp
dec
movs
cld
js
mov
gs
sub
push
xor
iret
pop
idiv
xchg
push
mov
mov
mov
mov
fldcw
or
movs
xchg
add
add
(bad)
arpl
clc
push
cmc
dec
xchg
lea
sbb
sub
pop
adc
sbb
push
pop
pop
xor
rcl
add
test
popf
mov
mov
imul
repz
leave
or
dec
lock
repnz
lds
in
shl
not
xchg
sbb
and
mov
fmul
inc
push
stos
dec
and
stc
fisub
sbb
fiadd
inc
jae
mov
iret
pop
mov
outs
mov
add
retfw
stos
inc
xchg
adc
js
dec
xor
js
add
jmp
pop
mov
lods
(bad)
mov
pushf
xor
xor
lock
pusha
jns
jno
pusha
lds
arpl
jecxz
call
fiadd
jp
out
sahf
and
inc
das
inc
jmp
mov
es
sahf
out
pop
popf
int
shr
pop
ror
mov
dec
inc
sub
das
or
jne
adc
push
mov
mov
or
push
ret
ret
bound
sub
xchg
mov
fisttp
ins
stos
sbb
rol
fsubr
inc
loopne
jl
hlt
outs
js
or
dec
cdq
das
jnp
xchg
inc
pop
push
daa
jae
pop
leave
iret
cmps
fs
inc
inc
push
add
push
test
ret
adc
sbb
sbb
nop
jo
dec
fistp
inc
sub
iret
push
es
dec
test
sbb
mov
iret
cmp
push
cmps
rol
push
or
cmp
push
cmc
test
scas
rcr
mov
test
jle
push
icebp
mov
std
pop
or
pop
cmp
cmc
aam
adc
call
test
push
cmp
and
mov
cmps
or
call
ss
xor
jg
daa
sbb
xor
rcr
cmp
jne
jle
cmp
and
ja
sub
dec
fstp
adc
sar
or
or
sub
nop
popa
call
and
call
sti
cmc
mov
pop
arpl
pop
mov
dec
out
jns
fwait
mul
pop
mov
shr
dec
imul
add
adc
enter
inc
mov
xchg
mov
cmp
out
dec
adc
mov
add
add
pop
dec
in
jmp
pop
xchg
pop
cli
out
jg
cmp
fst
and
test
lods
stos
xor
pop
pusha
push
mov
fwait
push
sub
clc
dec
rcl
scas
push
pop
jp
mul
gs
hlt
lds
xchg
pop
jns
outs
mov
test
mov
mov
popa
xor
pop
in
das
mov
xchg
cmp
retf
outs
mov
pop
cmp
shr
loopne
and
pop
push
pop
sar
mov
popf
inc
loope
jl
pop
add
or
enter
das
xchg
test
daa
je
mov
adc
jns
pushf
mov
inc
ja
arpl
sub
ins
retf
(bad)
cmp
gs
lahf
push
ins
mov
mov
fst
ins
aam
mov
and
mov
ins
mov
or
add
dec
(bad)
fst
jmp
imul
xor
sub
repz
add
int3
cwde
cmp
push
outs
sub
fs
push
pop
addr16
in
and
sub
aam
dec
pop
stos
jl
and
dec
fwait
jb
and
xchg
push
add
jle
sub
sub
imul
lds
mov
adc
jecxz
ret
iret
pmulhuw
jae
jg
retf
into
sbb
xchg
(bad)
cmp
or
pop
fisttp
(bad)
movaps
or
sbb
pop
xchg
repz
mov
mov
and
mov
stc
(bad)
mov
call
push
mov
mov
jmp
inc
cmps
mov
or
pop
xor
cmp
jle
aam
pop
xchg
add
xchg
arpl
retf
aad
xchg
xor
fild
or
sub
scas
dec
push
pop
mov
movs
fiadd
cld
jns
push
repz
sub
mov
push
imul
fisub
jb
cmp
(bad)
fst
dec
mov
mov
xor
adc
cmp
clc
xchg
jb
loopne
fwait
xchg
scas
sbb
fs
jl
jg
add
fsubr
pop
jmp
fldcw
daa
pusha
not
xor
dec
push
or
pushf
jge
mov
inc
jb
xor
mov
lds
sub
popf
sbb
mov
mov
cmp
cmp
retf
(bad)
xchg
jns
psubw
in
ja
push
test
fwait
(bad)
leave
je
sbb
mov
pop
xchg
stos
mov
imul
jae
push
add
daa
call
fisub
(bad)
cwde
or
jns
jmp
daa
push
aas
dec
mov
out
inc
jns
pop
jmp
les
mov
(bad)
lds
popa
je
inc
and
add
mov
cli
out
and
addr16
jge
int3
dec
sbb
dec
xchg
inc
cmp
adc
cwde
or
inc
adc
jp
retf
mov
xchg
scas
and
push
add
xor
enter
(bad)
mov
hlt
ror
imul
stos
in
jno
out
pop
mov
pop
mov
fist
rcl
pop
mov
int
aam
int
es
jmp
push
mov
sub
and
push
and
in
icebp
lea
sub
dec
jae
(bad)
lods
shr
mov
cmp
xchg
scas
pushf
gs
sub
lds
jmp
and
pop
loop
lea
push
mov
test
and
add
jno
out
sbb
sub
jmp
pop
and
inc
int3
mov
(bad)
in
mov
add
ret
lods
and
jno
pop
inc
pop
in
dec
xor
cdq
cmp
les
test
xchg
or
jns
and
adc
mov
sbb
rep
in
fdiv
mov
push
cmc
repnz
and
je
enter
dec
out
mov
jmp
xchg
dec
jae
jo
jbe
je
sub
not
sub
movs
inc
inc
adc
sub
cmp
bound
ficom
add
std
(bad)
jae
fild
xlat
pop
dec
mov
mov
stc
xor
add
adc
pop
rol
mov
mov
ins
push
std
push
cld
fcom
imul
adc
retf
xor
outs
inc
or
or
leave
je
xlat
pop
shl
ins
in
adc
adc
xchg
mov
inc
in
jecxz
ret
pop
movs
outs
ins
mov
jae
sbb
jmp
inc
cmp
cmp
sbb
addr16
push
leave
push
addr16
cdq
stos
rol
out
and
dec
pop
(bad)
sub
fsubr
sar
loop
cmp
test
sbb
xchg
and
mov
repz
lahf
push
dec
sub
jae
in
add
adc
ins
into
retf
jg
jb
and
outs
push
sub
lods
cs
daa
test
(bad)
fnstsw
and
adc
mov
aas
(bad)
aas
movs
mov
iret
mov
dec
bound
mov
pop
bound
fnstenv
cmc
add
or
(bad)
or
call
inc
popf
jl
push
ss
jp
mov
movs
inc
jmp
(bad)
leave
pop
mov
fild
adc
add
mov
pusha
mov
xchg
xor
dec
jg
into
mov
push
mov
cmps
test
icebp
aas
add
out
out
xor
or
pop
addr16
test
mov
popa
xchg
cld
add
outs
sti
mov
lods
jnp
movs
jns
(bad)
push
cmps
daa
das
xchg
push
sbb
sub
push
mov
sub
add
pop
cld
sbb
nop
test
adc
stos
retf
jb
push
ror
or
or
pop
mov
xlat
and
(bad)
clc
cmc
dec
rcr
ins
mov
ja
inc
inc
sub
shl
inc
xchg
jge
jne
icebp
mov
stos
xchg
mov
scas
mov
(bad)
icebp
scas
jmp
es
fwait
dec
mov
fwait
xchg
ins
xchg
(bad)
and
mov
scas
imul
pop
push
inc
es
or
(bad)
mov
out
movs
sub
scas
ss
imul
push
mov
int
push
mov
pop
mov
out
ins
rcr
xchg
jno
sub
daa
jl
repz
mov
jmp
or
push
rcr
int3
call
jo
inc
cmp
pop
mov
sbb
inc
fcmovu
or
fimul
jge
fsub
jg
retf
cmp
xor
into
pop
jbe
mov
sub
adc
jnp
(bad)
sbb
sub
mov
ins
mov
pop
shl
es
xchg
shl
nop
retf
loop
dec
push
sub
inc
es
call
push
jo
and
inc
xchg
pop
mov
adc
jp
inc
repz
add
mov
(bad)
nop
mov
xchg
pusha
int3
loope
mov
fucomip
or
bnd
sbb
lods
push
jecxz
and
push
mov
pushf
jae
cmp
jmp
cmp
ja
fwait
loopne
sub
jl
dec
push
repnz
push
les
repnz
sub
cld
dec
jb
retf
sub
jmp
icebp
sbb
adc
stos
mov
cmp
mov
mov
and
jne
adc
jae
test
pop
and
iret
jp
cmp
cs
mov
movs
and
in
fnsave
cmp
mov
pop
jmp
fincstp
dec
iret
cmp
pop
xchg
test
sbb
rol
xchg
xor
cmps
jmp
push
dec
dec
adc
push
push
sbb
xchg
call
sub
sub
(bad)
pop
outs
mov
adc
pop
inc
mov
stos
jg
xor
jno
xchg
cmp
pop
pop
pushf
aam
inc
adc
mov
adc
ins
dec
sbb
cli
(bad)
test
dec
std
out
pop
outs
fcom
dec
mov
push
ja
xchg
dec
xchg
fisttp
aas
imul
aaa
push
mov
mov
sub
xor
mov
jne
dec
icebp
int3
xor
sbb
pop
daa
popa
push
cmp
repz
jbe
hlt
out
or
sti
mov
in
ret
inc
aam
rcr
test
sub
scas
dec
mov
enter
retf
mov
xchg
fs
icebp
xor
adc
sti
aaa
pop
repnz
nop
cld
enter
(bad)
push
out
jg
jmp
sub
clc
and
dec
dec
pop
shr
adc
lahf
aas
repz
dec
sub
xchg
xchg
add
inc
out
add
inc
ret
xor
pop
jne
mov
loopne
(bad)
fist
jo
in
jl
int3
das
pusha
inc
dec
cmp
mov
dec
movs
pop
xor
and
mov
das
adc
pop
cmp
mov
dec
inc
test
sub
jne
jbe
xchg
add
scas
adc
(bad)
hlt
xchg
pop
sbb
mov
enter
pop
add
std
pop
add
jl
retf
cli
pop
add
jg
and
pop
mov
in
into
jecxz
sbb
mov
cmp
pop
mov
cmp
mov
mov
inc
popf
mov
xor
enter
leave
add
shl
mov
out
sbb
bswap
popf
pop
jno
inc
pop
jnp
ret
sub
mov
jecxz
jb
(bad)
cwde
push
hlt
mov
push
cld
dec
imul
test
test
mov
xchg
movs
add
cmp
xchg
mov
fidivr
push
sbb
mov
add
or
scas
mov
mov
push
and
mov
and
dec
push
into
mov
xor
data16
push
sbb
test
ins
sahf
jae
mov
cmps
jle
(bad)
mov
stc
pop
sbb
cmc
dec
adc
xor
cwde
pop
xchg
adc
mov
mov
sub
shl
test
cmp
mov
jp
(bad)
jge
mov
nop
std
imul
push
mov
pop
push
movs
aaa
imul
call
or
push
and
jle
(bad)
adc
sub
lock
mov
cmp
pop
out
je
stos
jns
sbb
push
mov
dec
xor
inc
jnp
movs
inc
mul
fwait
mov
inc
cli
jge
lea
adc
imul
add
int
fnstcw
jne
push
jmp
dec
and
cmps
push
sbb
in
into
cli
or
push
pop
out
mov
daa
fstp
xor
fadd
mov
or
lahf
lds
or
enter
dec
pop
sbb
xchg
jl
adc
addr16
push
cld
sub
dec
cmp
cmp
add
xchg
push
(bad)
fsub
cdq
rcl
fs
retf
mov
daa
call
pop
test
scas
mov
pop
mov
push
or
lss
inc
ins
cs
(bad)
out
bound
ja
xchg
mov
jne
or
mov
lds
adc
sbb
jns
pop
in
call
pop
adc
fsub
leave
imul
in
out
bound
fidivr
movs
mov
sub
mov
xchg
push
xchg
ss
push
dec
inc
pop
retf
xchg
lock
cld
sar
or
adc
stos
adc
mov
pop
scas
ror
push
cmp
mov
cmp
push
xchg
in
mov
sbb
enter
inc
jns
xchg
(bad)
stc
sbb
pop
fucomp
dec
sbb
pop
gs
push
les
dec
lock
cmps
dec
(bad)
jnp
push
dec
ja
add
inc
xchg
and
(bad)
icebp
shl
retf
jmp
loopne
mov
std
jb
cmp
lds
in
jns
sbb
out
mov
fwait
imul
sbb
out
xchg
dec
ds
push
or
xchg
sub
sar
cdq
mov
add
push
fmul
xchg
mov
xchg
fst
jb
mov
stc
or
and
mov
aas
sar
jns
sbb
sub
shl
cmp
popa
fnstenv
xor
sub
and
lods
jns
neg
mov
cmp
arpl
cli
pop
ds
cmc
(bad)
cwde
movs
add
leave
push
inc
push
(bad)
dec
or
jmp
movs
mov
mov
pushf
sbb
xchg
lds
add
das
sti
ins
mov
outs
inc
ss
sti
jae
xchg
mov
shl
sub
nop
in
nop
pop
xor
nop
and
sar
gs
sbb
cmp
push
pop
dec
ja
ret
shl
cwde
(bad)
mov
call
in
pop
sub
mov
aad
push
or
push
lea
inc
mov
cli
push
dec
adc
call
pusha
xlat
inc
pop
and
cdq
mov
dec
inc
mov
nop
sub
es
sbb
sub
fisub
cmp
push
push
inc
mov
inc
sbb
pop
call
mov
cdq
imul
mov
dec
jbe
pusha
sbb
in
xor
cmc
pop
jl
loop
inc
stos
sbb
jecxz
stos
cmp
jge
aad
inc
cmp
fwait
daa
and
adc
jne
jns
bound
dec
out
xor
xchg
repnz
nop
xchg
jl
scas
in
(bad)
sub
cld
call
adc
jne
or
ins
push
in
rol
stos
pop
inc
add
inc
ja
mov
mov
mov
jmp
retf
ins
mov
pop
ror
cmp
bound
xor
out
mov
dec
dec
jmp
push
fwait
sub
icebp
xor
in
push
arpl
scas
and
shl
fs
jne
xchg
lock
cmp
cmp
sub
or
jecxz
mov
(bad)
push
(bad)
cld
dec
scas
dec
daa
pop
lds
sub
out
xor
std
push
jp
iret
mov
sar
push
fisttp
imul
rcl
pop
movs
popa
xchg
ja
ror
int3
xor
imul
cmps
outs
cmp
xchg
xchg
mov
out
mov
add
ret
int
pop
sub
cwde
int3
xchg
repz
fwait
pusha
inc
loope
inc
fild
and
gs
out
ja
inc
cmps
(bad)
jo
iret
cld
test
cmps
daa
test
iret
mov
daa
and
(bad)
arpl
dec
imul
cld
adc
adc
in
mov
add
fdiv
lods
pop
movs
fild
jns
inc
ret
loop
and
push
loopne
movs
js
adc
push
xchg
cs
xchg
xchg
jae
dec
shr
mov
jg
ror
adc
fnstenv
cmp
adc
mov
sbb
or
jmp
mov
movs
xchg
sahf
pop
sbb
ins
add
rsm
adc
(bad)
pop
jne
mov
add
dec
pop
push
dec
add
xchg
popa
add
jb
or
(bad)
aas
inc
pop
sub
test
gs
cdq
call
gs
jno
int3
mov
pop
sub
outs
fdiv
mov
mov
xchg
xchg
jmp
add
mov
lds
mov
mov
cs
inc
sub
push
inc
scas
cmp
sbb
test
pop
mov
das
xchg
sbb
cmc
movs
push
mov
in
push
shl
adc
and
pop
dec
xchg
mov
push
mov
clc
shl
add
inc
xchg
and
cmp
sbb
pop
and
bound
fisttp
mov
sbb
fild
push
pop
ror
imul
push
jmp
add
adc
es
jl
pop
inc
push
mov
aas
add
mov
sar
cmp
call
fisttp
add
movzx
iret
xor
lods
outs
xor
lods
je
cmps
xchg
fnstcw
sbb
xchg
add
and
lea
push
fs
pop
out
mov
shl
test
and
or
add
xlat
stos
sti
push
in
ret
or
inc
icebp
mov
jbe
dec
stc
call
mov
lahf
repnz
repz
xchg
add
mov
mov
test
push
mov
cmp
and
add
push
jnp
fwait
sub
fdivr
xchg
mov
retf
loop
outs
sub
(bad)
push
lahf
xchg
inc
aaa
cmp
in
and
adc
movs
pop
cmp
dec
rcr
lds
push
dec
jp
out
inc
mov
mov
daa
fs
xchg
sub
adc
jmp
neg
jb
loope
and
sbb
in
call
dec
sbb
gs
xor
jmp
and
inc
push
(bad)
das
dec
cmp
jns
aam
and
push
cmp
adc
addr16
pop
fimul
stc
out
pop
push
mov
adc
inc
sbb
fisub
adc
ficomp
xchg
data16
addr16
pop
loopne
(bad)
cdq
mov
cmp
push
mov
pop
dec
out
xchg
or
inc
test
push
sbb
out
cli
ss
ficom
dec
pusha
sub
xor
cmps
pop
fnstenv
ret
enter
mov
or
rcr
int
push
imul
or
pushf
lds
js
daa
fstp
icebp
adc
fmul
xchg
mov
test
mov
add
adc
jmp
and
test
sub
mov
bound
fstp
clc
pop
adc
adc
cld
popa
mov
leave
pop
xchg
dec
xchg
ret
into
mov
xchg
imul
in
pop
repnz
jno
stc
into
cmp
retf
aam
jge
ins
dec
adc
push
adc
add
xchg
inc
cmp
cmp
(bad)
jmp
pop
arpl
push
adc
jne
inc
fidivr
sub
and
movs
inc
ds
jl
sub
fidivr
out
or
xchg
xchg
fistp
adc
sbb
xchg
fistp
mov
jb
and
pop
cmp
jg
mov
loope
scas
call
jmp
jge
dec
dec
pusha
sbb
daa
add
mov
mov
add
out
sti
je
push
jno
movhps
cwde
rcl
xor
jecxz
push
jmp
push
jo
jae
daa
xlat
jne
adc
(bad)
or
adc
mov
mov
cmp
cs
jmp
jg
cld
jecxz
addr16
mov
xchg
fnstsw
int3
add
mov
es
xchg
lods
outs
push
loopne
mov
push
imul
mov
sub
inc
out
shl
dec
mov
es
push
adc
ficom
repz
loope
jno
pop
mul
jo
cmp
imul
and
imul
mov
mov
push
jmp
adc
movs
mov
xchg
pushf
xor
cmc
pop
sbb
add
inc
mov
xor
add
popa
pop
rol
not
sub
mov
push
rol
sbb
movs
les
jecxz
and
je
inc
push
sub
sub
mov
pop
test
loope
or
mov
add
adc
mov
mov
xlat
pop
ror
pop
movs
adc
mov
cmc
movs
pop
dec
jne
jmp
test
rcr
imul
xor
cwde
sub
shl
lea
mov
into
inc
mov
mov
jmp
mov
repz
or
rol
in
fbld
cmp
mov
jo
push
push
adc
mov
movs
push
(bad)
sbb
shr
ins
ror
sbb
sbb
shl
pop
lahf
sbb
or
or
icebp
neg
mov
jmp
or
inc
retf
scas
mov
adc
jle
sbb
mov
dec
jmp
xchg
out
loop
loope
mov
xor
and
ja
sbb
ds
outs
xchg
mov
mov
cli
dec
mov
jb
out
jmp
fwait
dec
imul
xor
jnp
and
cmp
mov
mov
or
inc
imul
sbb
add
push
lods
mov
xchg
mov
lea
push
mov
fwait
leave
stos
shr
add
imul
jp
mov
add
loop
das
mov
jae
xchg
ins
shr
nop
xor
pusha
push
sub
mov
xchg
pop
lods
(bad)
mov
mov
pop
sbb
ds
enter
mov
dec
push
js
and
sub
test
sub
pop
nop
or
add
jecxz
fidiv
in
aaa
pop
aad
in
jno
push
and
(bad)
(bad)
popf
js
leave
or
push
push
mov
dec
or
cli
inc
mov
call
mov
test
dec
mov
mov
jns
jae
adc
test
mov
add
add
adc
(bad)
mov
and
cmp
cmc
mov
or
cmp
ret
inc
jp
pop
push
xlat
push
xlat
mov
test
dec
inc
iret
sbb
mov
stos
(bad)
cdq
mov
sub
push
popf
jmp
(bad)
xor
call
outs
retf
ret
mov
fwait
and
sbb
loop
mov
cmc
daa
test
mov
test
in
cmp
test
aas
cmp
outs
inc
sub
jmp
out
aas
dec
mov
jle
jb
adc
loope
scas
jmp
push
inc
mov
xor
jmp
std
cmps
sbb
push
add
fsubrp
or
call
(bad)
jecxz
ins
es
test
adc
pop
retf
xchg
xor
call
pusha
dec
sbb
int3
jp
repnz
sbb
mov
gs
inc
es
dec
pop
jge
rcl
in
in
shr
out
addr16
xor
shl
ficomp
(bad)
jmp
nop
bound
inc
pop
jo
dec
int3
mov
icebp
enter
mov
xchg
es
adc
jecxz
jo
mov
test
in
in
xor
inc
xor
shl
shr
or
sbb
rcr
icebp
(bad)
pop
adc
sub
imul
push
into
sbb
retf
and
dec
shl
mov
clc
(bad)
int
ins
adc
aad
mov
push
jecxz
outs
adc
mov
aas
cmps
cli
adc
imul
aaa
inc
sub
lahf
inc
jg
inc
push
inc
lock
dec
xor
imul
dec
sbb
jp
mov
js
iret
iret
mov
push
adc
mov
jno
xchg
pop
clc
sbb
sti
les
rol
cli
or
xchg
dec
sub
sbb
xor
push
leave
test
jmp
and
mov
sub
out
xor
mov
mov
xlat
rcl
cmp
xchg
pop
std
fisub
mov
pop
jge
(bad)
jbe
(bad)
arpl
fstp
pop
sub
mov
and
jmp
into
or
cmp
mov
les
mov
mov
xor
cli
outs
mov
sub
mov
xor
mov
jecxz
shr
pop
add
cmp
call
mov
inc
sub
dec
js
arpl
push
hlt
shl
in
inc
out
adc
xchg
pop
mov
shl
mov
push
sub
aad
stos
or
xchg
push
and
mov
stc
sbb
ror
mov
push
clc
sub
inc
adc
dec
fsubr
jbe
sub
sub
into
dec
popa
mov
xor
and
lea
out
sahf
mov
push
and
rcl
jge
and
xchg
imul
pop
mov
outs
(bad)
icebp
pop
xchg
imul
stos
jno
(bad)
xor
or
loop
jmp
pop
and
call
pushf
pop
pushf
clc
push
dec
in
loope
and
loope
sub
mov
in
mov
scas
xchg
shr
inc
cmp
retf
(bad)
ja
jecxz
xchg
call
pop
daa
sbb
pusha
ja
loop
test
cmp
jae
dec
xchg
mov
mov
mov
ucomiss
js
(bad)
aas
sbb
shl
out
add
lds
pop
jae
pop
mov
icebp
(bad)
js
xchg
out
mov
add
pop
int
sbb
not
jns
test
mov
cld
fisttp
pusha
xchg
mov
mov
clc
lea
dec
jmp
jae
jge
sub
xchg
add
call
xchg
push
sahf
jae
pop
les
pop
movs
dec
(bad)
sbb
and
mov
ins
(bad)
mov
sub
dec
xor
shr
dec
push
dec
push
nop
mov
or
add
or
cmps
repz
xchg
push
aad
and
into
clc
popa
mov
push
call
push
xchg
xchg
loopne
cmc
mov
outs
lock
jmp
xchg
cdq
icebp
outs
or
push
pop
dec
aad
mov
in
sub
add
repz
test
(bad)
aam
pushf
add
imul
mov
mov
jbe
pop
jae
lods
enter
out
ret
mov
xchg
loopne
xchg
fwait
push
push
mov
xchg
or
das
adc
dec
pusha
inc
cwde
jo
iret
jl
mov
lods
popa
(bad)
js
aam
mov
xor
adc
pop
mov
or
(bad)
in
ret
ror
and
in
int3
pop
ret
xor
and
add
fwait
hlt
push
pop
jle
add
jle
xor
add
push
fnsave
aad
repz
bswap
lods
pushf
and
cs
xor
xchg
arpl
xor
out
test
fst
(bad)
sbb
inc
adc
lods
mov
adc
sub
arpl
xchg
push
add
sahf
loop
xlat
cmp
xor
xchg
mov
mov
ret
sub
lods
jge
imul
ror
mov
aas
dec
jl
out
mov
sbb
adc
xchg
pushf
or
(bad)
and
push
sub
inc
mov
lods
jae
dec
mov
add
lahf
fst
adc
jbe
ss
stc
fs
(bad)
scas
mov
ret
cmc
push
and
pop
stos
addr16
fsub
mov
arpl
cmps
sub
jge
add
inc
jb
jp
jge
adc
les
addr16
sub
imul
dec
push
pop
cmp
sub
(bad)
addr16
xor
in
cdq
mov
sbb
popf
hlt
pop
pop
fbld
hlt
stos
test
dec
or
fdivr
sub
lock
sub
dec
add
sbb
dec
pop
(bad)
jns
(bad)
lock
or
mov
adc
addr16
addr16
lock
xor
lock
sahf
fs
cmp
test
mov
sub
push
movs
xor
mov
jb
mov
test
rep
in
sahf
je
aas
pop
cmp
mov
sub
in
push
inc
hlt
jnp
sbb
adc
mov
cmps
add
mov
not
dec
popf
mov
enter
sub
xor
fidiv
or
xor
pop
test
rol
pop
out
out
jns
dec
test
in
dec
test
ja
aaa
adc
ror
rol
add
push
movs
ins
movs
(bad)
cdq
inc
xor
call
imul
dec
dec
dec
in
pop
mov
xchg
ret
fst
sub
(bad)
push
mov
mov
in
scas
dec
xor
cmp
mov
mov
(bad)
sbb
push
test
cli
jb
mov
push
cdq
(bad)
movs
in
cmc
ror
xchg
pop
pop
stos
xor
adc
fsubr
mov
stos
aam
pop
cmp
inc
lahf
fsub
push
ins
nop
kunpckbw
ror
and
addr16
daa
sub
jbe
mov
push
mov
inc
cs
mov
sti
sub
fcmovnu
dec
icebp
push
adc
outs
(bad)
mov
cmp
test
xor
in
push
jmp
pop
test
in
inc
fnsave
xchg
mov
cwde
inc
adc
stos
mov
sbb
out
and
inc
adc
mov
pop
test
shl
hlt
lods
outs
mov
adc
pop
data16
push
sbb
and
stos
cs
mov
pop
inc
xor
inc
fld
shr
cwde
xchg
jecxz
fs
ss
xor
dec
pop
mov
fdivr
out
add
jge
mov
push
adc
mov
mov
rol
icebp
in
and
adc
xor
add
mov
jno
xor
dec
outs
aaa
rcr
mov
loop
test
test
cs
mov
out
mov
or
ror
fucom
(bad)
mov
movs
movs
add
es
mov
out
fsubr
(bad)
icebp
dec
dec
push
mov
dec
loope
call
int
test
fs
pop
mov
add
popf
inc
outs
dec
push
xchg
lea
jno
push
fucomi
xor
mov
dec
inc
imul
or
sbb
jnp
ror
clc
mov
loope
test
imul
test
imul
pop
lock
jge
pop
jmp
les
inc
push
rol
mov
mov
popf
fldcw
adc
leave
push
jmp
cmp
and
hlt
pop
retf
js
aaa
call
outs
mov
mov
xor
psrlw
fadd
ins
sbb
push
fcomp
or
xor
xchg
add
mov
sub
jbe
(bad)
push
jecxz
pop
inc
leave
dec
or
xor
jae
jmp
pusha
xchg
mov
pop
fwait
enter
inc
movs
sbb
inc
xchg
sbb
mov
mov
es
fld
pop
cmp
ins
push
add
add
popa
pop
sbb
xchg
or
or
dec
and
fsub
pop
int3
hlt
cmc
mov
xchg
push
pop
pushf
adc
mov
adc
push
repz
pop
mov
repnz
bnd
dec
or
into
retf
xchg
mov
xchg
pop
mov
xor
pop
inc
mov
xchg
test
fnstenv
mov
daa
xchg
jle
mov
and
or
cld
cmp
xchg
(bad)
rol
jno
mov
(bad)
mov
daa
sbb
mov
mov
mov
xchg
cmp
and
dec
push
jge
adc
mov
xor
pop
push
aam
int
dec
(bad)
push
retf
adc
in
add
fwait
dec
mov
or
rcr
mov
cmp
scas
scas
add
cmp
call
and
or
and
xor
and
ja
adc
mov
clc
ret
retf
imul
arpl
out
fnstsw
jmp
loope
jge
(bad)
inc
test
jge
inc
mov
mov
in
sub
push
adc
mov
hlt
pop
int3
popf
(bad)
test
dec
call
sbb
pop
inc
int3
jb
jnp
adc
fnstsw
call
inc
sbb
adc
enter
cmps
ins
scas
nop
test
out
(bad)
or
push
mov
imul
push
sbb
sahf
in
pop
adc
cdq
in
push
or
adc
adc
pusha
push
dec
syscall
call
cmps
(bad)
fbld
pop
push
out
test
xor
add
jae
cmp
pop
xchg
(bad)
pop
ss
xchg
cmps
stos
outs
scas
pop
fcom
or
sub
cmp
(bad)
push
dec
and
mov
cmp
gs
lds
jbe
adc
mov
xchg
push
imul
sbb
aas
push
push
push
arpl
imul
cmp
enter
test
pop
cmps
fcom
cmp
add
test
movs
popa
fwait
test
sub
pop
xchg
mov
mov
scas
stos
ins
mov
arpl
jb
and
sti
sub
dec
dec
inc
(bad)
jp
cld
test
arpl
jle
imul
sbb
aas
loope
add
repz
add
and
inc
mov
nop
bound
sub
(bad)
popa
xor
daa
sbb
cwde
cwde
(bad)
call
in
icebp
cli
mov
iret
mov
aaa
neg
mov
mov
mov
fild
in
and
pushf
xchg
inc
(bad)
adc
jbe
inc
push
(bad)
(bad)
addr16
sub
or
lods
jg
sub
(bad)
in
sub
jne
or
jecxz
(bad)
mov
loopne
imul
pop
dec
mov
lock
add
mov
cmp
call
dec
dec
jge
or
or
std
fs
push
dec
push
popa
sbb
fcmovbe
movs
ucomiss
lds
neg
repz
jo
add
lock
cmc
or
cmp
jnp
mov
pop
dec
bound
aam
ret
aas
mov
dec
jl
xor
xchg
ret
lds
push
fcmovbe
popa
leave
stc
pusha
rcl
cmp
movs
ss
popf
in
aas
iret
xlat
bound
inc
fs
neg
out
push
and
or
movs
lods
push
mov
or
sub
repnz
std
sbb
fwait
xchg
jmp
fild
jns
bound
ret
sub
inc
xor
das
std
jno
not
repz
jle
xor
xor
xchg
sbb
stos
jmp
ret
je
js
ja
(bad)
scas
push
inc
fs
and
mov
or
js
or
jmp
movs
lods
jb
pop
call
xlat
(bad)
popf
(bad)
cmps
call
xor
shl
adc
pop
adc
xor
dec
scas
mov
jno
pop
xor
push
in
pop
mov
ret
xchg
mov
xor
cdq
sbb
loope
les
gs
inc
xchg
mov
jge
or
xor
and
mov
xlat
sbb
cmc
into
mov
jo
mov
punpckhdq
inc
adc
and
lods
dec
or
dec
aam
xchg
fisubr
or
sbb
fcomp
pop
dec
aam
mov
jmp
jns
test
shl
inc
or
adc
es
mov
pusha
pop
and
and
adc
xchg
xlat
inc
retf
or
call
ja
push
add
mov
fidiv
mov
pop
ficom
gs
mov
mov
mov
pop
out
cmp
fst
sahf
ret
sbb
mov
fwait
jge
push
outs
cmp
aad
jo
mov
xor
sbb
dec
leave
sbb
mov
lods
sub
mov
pushf
or
ins
pop
sub
add
inc
mov
scas
clc
ret
movs
fwait
and
jmp
or
pop
imul
fld
xchg
mov
and
sahf
or
push
icebp
push
ja
push
rcl
dec
or
pop
mov
xor
popa
lea
aad
xchg
inc
jo
adc
aas
mov
ins
movs
enter
cmp
push
pop
call
ss
mov
dec
jb
lds
push
inc
jbe
pop
mov
xlat
jl
(bad)
jle
inc
or
mov
pop
test
mov
imul
xor
idiv
lock
jae
or
mov
repz
loope
fcomp
popf
(bad)
push
imul
inc
jnp
pop
ja
cmp
ins
add
dec
push
adc
shl
and
loope
or
sbb
jp
cmp
movs
sub
cmps
jg
cli
popf
sahf
(bad)
xor
push
std
pop
jp
movs
ins
cld
adc
sbb
(bad)
xor
dec
arpl
out
add
inc
stc
ja
jbe
(bad)
(bad)
jl
aad
dec
fcomp
and
gs
sub
adc
(bad)
cmp
sbb
ret
or
jae
adc
idiv
jb
xchg
pop
sahf
inc
out
in
mov
or
xchg
ss
inc
inc
leave
loopne
movs
scas
mov
jmp
stc
jae
pop
stos
cmps
cmp
test
enter
add
push
mov
fs
mov
or
jmp
push
in
add
aaa
mov
sbb
retf
stos
lahf
mov
mov
fld
inc
jg
dec
mov
and
mov
in
popf
mov
pusha
xchg
adc
sub
ret
adc
adc
xor
push
hlt
cmp
repz
add
mov
mov
(bad)
jmp
mov
xor
adc
push
lods
dec
mov
fnstcw
retf
loope
mov
scas
out
mov
ror
stos
and
ficomp
mov
push
and
leave
and
mov
sub
pop
outs
pop
add
dec
hlt
std
or
ja
push
xchg
imul
pop
ja
push
xlat
addr16
or
sti
jmp
jge
mov
add
cdq
ror
test
add
fisttp
neg
cmp
adc
les
fild
push
adc
ins
mov
push
adc
jmp
jo
dec
mov
ins
inc
mov
(bad)
mov
mov
fwait
movs
xchg
das
mov
pushf
scas
mov
js
and
add
ror
repnz
movs
lock
es
arpl
fwait
gs
fld
int3
div
stos
rcr
(bad)
mov
pop
mov
into
mov
test
xchg
push
push
xchg
clc
jg
pop
add
(bad)
jno
(bad)
sub
mov
retf
out
adc
adc
sbb
xor
ret
rcr
loopne
hlt
mov
loopne
(bad)
imul
icebp
or
mov
iret
nop
(bad)
out
ins
sbb
out
gs
repnz
jmp
sbb
adc
into
cmp
jne
push
lods
xor
fld
mov
mov
lds
inc
icebp
and
xchg
daa
scas
mov
pop
push
dec
sub
pop
rcr
lods
cmp
sti
popf
arpl
mov
xor
fsubr
test
mov
sub
mov
sar
aam
jb
sbb
jae
leave
inc
inc
or
es
sar
sub
test
cmp
push
jne
iret
sahf
xor
push
add
call
sbb
sub
out
jno
dec
lahf
ret
and
sub
fnstenv
add
es
or
scas
dec
dec
push
push
(bad)
into
ins
cmp
and
or
into
aam
xor
test
stc
mov
loop
iret
aad
xchg
xor
dec
dec
push
add
cmp
mov
ror
cdq
add
nop
js
repnz
cmovbe
clc
jb
mov
and
cmc
mov
stos
and
adc
enter
loopne
lods
xor
xlat
pop
pop
xor
or
sub
pop
cmp
cwde
aaa
xor
js
jne
sahf
es
xor
aas
adc
mul
or
adc
push
mov
fucomp
jns
inc
sub
mov
jmp
sub
jb
push
pop
(bad)
mov
pop
pusha
cmps
mov
mov
in
mov
add
push
and
test
lods
aas
cmp
mov
push
push
out
inc
imul
out
adc
cmp
mov
cmps
inc
mov
ror
and
xchg
out
mov
jle
mov
xchg
cld
int3
call
mov
dec
enter
sbb
and
xor
xor
loop
xor
dec
pop
cmp
inc
punpckhwd
rcl
and
push
imul
xor
in
sub
fdiv
sub
push
pop
push
cmc
test
cmp
jecxz
arpl
pop
scas
jge
add
ret
mov
lds
in
retf
xchg
xchg
dec
(bad)
mov
adc
retf
out
sub
sub
and
cmp
(bad)
push
mov
into
das
dec
sbb
adc
inc
fstp
push
inc
mov
push
sbb
cmp
xchg
cs
in
sbb
add
dec
inc
xchg
inc
pop
loopne
xor
mov
push
pop
xor
mov
sti
mov
jns
ror
mov
bound
dec
xor
lods
aaa
sbb
mov
imul
ret
and
loop
sar
leave
ficom
sbb
or
retf
dec
lods
lock
inc
fisubr
adc
push
les
push
cmps
xor
mov
movs
psubb
icebp
push
jb
hlt
or
dec
in
mov
pop
lahf
scas
sar
fwait
jecxz
sub
cmp
neg
mov
jbe
xlat
pop
fcomp
arpl
mov
aam
xchg
and
xchg
aas
push
(bad)
xor
test
fdivr
and
clc
and
enter
and
or
int3
sbb
(bad)
cli
jbe
cmp
out
test
int
std
rcl
jmp
les
inc
pop
sbb
sub
mov
pop
aad
pop
inc
jp
jl
mov
hlt
outs
int
repz
mov
or
call
lods
xchg
push
jmp
jmp
lods
sbb
pop
pop
addr16
sub
and
aam
sbb
das
call
jmp
in
xor
lahf
pop
outs
loope
js
mov
dec
pop
in
cld
sbb
xor
mov
(bad)
ficom
push
xchg
xrstor
mov
retf
push
(bad)
xchg
gs
retf
arpl
cwde
leave
iret
cmps
rcl
dec
xchg
push
in
inc
stc
cmp
das
jmp
xchg
adc
xor
mov
push
mov
iret
cmc
push
add
das
push
cli
mov
iret
ja
lahf
int
inc
adc
les
cmp
sar
mov
dec
pop
push
mov
pop
mov
xchg
cdq
ins
mov
loopne
pop
xchg
fimul
push
retf
cmp
xor
in
outs
xor
xchg
loop
pushf
rol
or
fsub
out
xor
and
jne
test
and
pop
and
add
jg
fstp
adc
aas
pusha
push
and
bound
call
cs
popf
das
or
add
or
mov
sub
jl
push
repz
push
out
movs
sbb
inc
push
shl
daa
test
pop
addr16
pop
cmp
mov
es
scas
xlat
das
int3
mov
jae
cmp
aaa
push
lods
cmp
push
out
or
aas
mov
test
in
jmp
mov
(bad)
jns
lods
adc
mov
pop
outs
adc
pop
out
mov
ret
mov
pusha
dec
cmp
addr16
sbb
sub
mov
jge
aam
fwait
lds
cmc
mov
loope
mov
bound
rol
cmc
icebp
push
push
ror
xchg
xchg
jb
xor
mov
aas
cmp
rol
(bad)
(bad)
(bad)
data16
and
das
lds
jmp
daa
adc
aam
test
mov
inc
test
pop
sti
inc
xor
icebp
hlt
retf
(bad)
xor
shl
add
mov
pop
mov
in
ficomp
mov
es
add
mov
add
cmp
mov
mov
outs
mov
pusha
imul
es
repz
inc
sub
leave
mov
jno
fptan
nop
rcl
pop
out
scas
add
xor
popa
push
xchg
int3
jb
loop
sub
pushf
out
cmps
stos
jecxz
adc
and
adc
ror
inc
push
push
sub
sar
adc
add
jmp
inc
in
cmps
inc
or
fnsave
xor
mov
sub
adc
mov
adc
push
jl
mov
shl
inc
adc
dec
ins
jl
mov
add
icebp
stos
cmp
dec
dec
fild
leave
sahf
mov
icebp
mov
iret
xor
add
sub
ds
mov
call
imul
jle
je
(bad)
cdq
adc
aas
lahf
adc
rcr
add
repz
rol
not
ret
out
inc
jmp
lea
out
fincstp
cmp
shl
sub
(bad)
push
rcl
in
cmps
(bad)
scas
das
pusha
imul
movs
mov
scas
repnz
or
add
popa
dec
popa
mov
mov
ins
retf
adc
imul
rol
daa
imul
gs
or
sub
hlt
aad
pop
inc
stc
lock
test
aas
leave
in
xor
fwait
bound
push
mov
lods
pop
xchg
cmc
pop
dec
sbb
push
pushf
xchg
lods
inc
cmp
add
(bad)
sbb
adc
lods
push
inc
and
bound
add
xchg
push
data16
int
or
pop
mov
push
leave
add
mov
mov
push
(bad)
mov
push
cmp
cs
adc
movs
inc
fldcw
nop
clc
in
cmc
mov
dec
push
adc
xchg
cwde
inc
mov
repnz
adc
cmps
and
add
xchg
xchg
ds
sbb
push
call
inc
cmps
mov
lods
vunpcklpd
in
sbb
or
retf
adc
sub
sar
xor
popf
sub
inc
ds
inc
clc
sbb
mov
cmp
pop
mov
xchg
je
jo
mov
mov
push
movs
pusha
fisubr
sbb
pop
lods
data16
stos
(bad)
push
add
mov
enter
push
mov
push
hlt
dec
inc
clc
jns
jbe
cwde
jmp
and
mov
ror
cli
push
rcl
not
ret
add
jmp
push
lods
mov
sbb
xchg
test
mov
sub
leave
fist
xchg
or
xor
xchg
add
rcl
mov
pop
pop
push
scas
cli
xchg
dec
mov
lds
ja
icebp
sub
sub
fiadd
popf
inc
cmps
js
add
mov
sbb
adc
fisubr
movs
xchg
pop
fidivr
movs
lahf
inc
movs
aad
arpl
inc
sub
ret
fcomi
sahf
xchg
(bad)
int3
outs
call
mov
and
loopne
adc
out
cmp
icebp
imul
sub
pop
xor
and
mov
pop
jnp
ror
mov
dec
jmp
fsub
push
popa
push
sbb
loopne
sub
(bad)
xchg
adc
pushf
pusha
gs
jne
rcr
mov
(bad)
sub
sub
adc
sbb
loope
cwde
or
into
add
mov
pop
sbb
pusha
data16
loope
or
jge
lods
jmp
sub
retf
add
xchg
ss
repnz
inc
mov
stc
jbe
nop
mov
inc
and
clc
inc
dec
jae
push
xchg
pushf
mov
ds
and
int
jnp
fst
adc
mov
xchg
pusha
test
inc
mov
gs
nop
aam
fstp
mov
movs
mov
cmp
dec
cmp
push
xor
pop
pushf
xchg
imul
fs
cmp
push
daa
jmp
enter
sub
sub
mov
inc
sar
mov
or
xlat
cmp
xor
or
sub
pop
add
xchg
and
mov
jmp
call
call
inc
adc
push
pop
out
sahf
pop
test
test
jl
pop
mov
add
cmp
adc
in
cmps
lds
dec
jnp
dec
mov
in
push
cmp
inc
fst
dec
out
gs
add
xchg
mov
popa
mov
pop
mov
inc
cs
sar
(bad)
xlat
das
iret
scas
movs
cmp
and
repz
out
das
dec
loope
je
test
mov
dec
inc
test
rcr
sub
dec
hlt
mov
out
push
inc
addr16
inc
in
mov
inc
into
mov
cmp
add
cmp
js
push
pop
cmp
dec
jb
pushf
or
stc
test
cmps
pop
(bad)
in
mov
adc
jne
jl
and
mov
mov
mov
call
cmps
push
xor
or
push
xchg
jmp
ss
and
or
or
dec
rol
sahf
and
in
xor
pop
std
sbb
push
shr
cmp
cmps
icebp
repz
or
into
pop
xor
and
mov
cld
repz
jmp
push
ins
jo
(bad)
or
jnp
or
into
jb
sub
mov
movs
and
in
push
pusha
xchg
dec
hlt
daa
jnp
into
les
or
sub
add
mov
lock
test
sahf
push
pop
repz
push
xor
sub
dec
add
ins
inc
jge
in
out
cmp
aaa
cmp
adc
cmp
loope
stc
or
ss
(bad)
in
popa
movs
jae
movs
jmp
xchg
das
jl
loop
mov
push
call
jno
lahf
mov
aas
arpl
rcr
inc
test
and
add
xor
je
retf
mov
mov
xchg
cli
push
lahf
xor
jne
dec
mov
aam
mov
mov
mov
in
mov
and
sti
cmp
adc
push
add
adc
inc
pop
sbb
and
sub
mov
dec
pop
add
xchg
and
(bad)
or
jb
xor
jp
int
rcl
xor
ja
xor
jbe
test
jl
in
sar
retf
fisubr
fdivr
bound
xchg
ja
cmp
in
pop
mov
push
fsub
popa
cwde
and
jbe
push
aam
sti
popf
cld
jecxz
les
pop
jns
jp
or
push
das
mul
adc
or
jecxz
mov
mov
fwait
jb
inc
push
aad
mov
push
std
or
call
and
cmps
push
cdq
mov
test
jne
pusha
mov
test
jge
test
sub
inc
fnstsw
test
fnstenv
arpl
fidiv
retf
mov
adc
push
push
or
outs
call
int3
pop
adc
scas
and
imul
fdivr
jb
dec
je
xchg
cmp
xor
sub
cld
lahf
dec
fild
mov
ins
jle
or
sub
xor
adc
fdivr
out
inc
aad
jp
je
stos
std
jge
fmul
imul
xchg
or
cs
pusha
(bad)
dec
sbb
int3
outs
mov
je
je
lea
mov
or
mov
mov
or
mov
dec
jno
fcmovbe
and
xor
outs
xchg
sbb
dec
clc
sti
adc
stos
push
adc
cmp
int
pop
push
loop
mov
xchg
std
movs
dec
sbb
hlt
out
xchg
std
jle
imul
mov
aam
in
jecxz
mov
sbb
or
scas
pop
(bad)
adc
jb
inc
jb
iret
xchg
pop
shl
pop
sbb
addr16
in
mov
imul
adc
push
ins
int3
mov
(bad)
xor
fild
inc
mov
mov
and
addr16
pop
or
push
jbe
push
fcom
add
adc
ja
mov
mov
inc
mov
out
not
jb
sbb
repz
popf
repnz
cmp
jge
popa
ss
xor
es
sbb
xor
cmp
ins
adc
pop
out
enter
(bad)
std
in
imul
ins
mov
jmp
pusha
leave
add
fs
es
mov
adc
dec
inc
mov
adc
shr
dec
sub
call
scas
(bad)
out
sbb
sub
cdq
aam
clc
aaa
sub
push
shl
ja
jae
dec
and
imul
hlt
push
xchg
mov
xchg
push
mov
or
test
test
scas
xchg
es
inc
out
jp
pop
and
dec
mul
and
pop
scas
test
xchg
pop
push
retf
push
push
rol
cmp
movs
xchg
aam
sbb
mov
addr16
add
cwde
and
test
mov
stos
mov
retf
or
jl
aam
inc
mov
xchg
fwait
pop
push
mov
push
mov
jmp
push
and
pop
clc
xchg
xchg
bound
pusha
cld
into
pop
out
mov
test
jmp
and
jae
cwde
fiadd
sti
pop
(bad)
fbld
push
pop
cld
das
mov
and
je
inc
out
mov
ss
js
and
add
js
push
push
jmp
mov
lea
ret
mov
pushf
adc
ins
dec
dec
repz
aas
and
cmp
and
je
loop
mov
fisttp
inc
mov
cmps
jb
mov
aaa
xlat
mov
mov
iret
add
xchg
cmp
push
scas
lock
add
pop
push
outs
xor
pushf
fldcw
xchg
outs
xchg
jmp
mov
ins
fld
stc
sbb
mov
adc
lock
enter
jne
jnp
and
adc
mov
sub
xor
repz
(bad)
inc
shl
int3
std
mov
xchg
and
imul
push
add
cmp
rol
sar
fnstcw
nop
dec
psrad
test
repz
push
test
in
sub
int3
cmp
stos
adc
xchg
add
dec
xlat
sbb
lods
lea
mov
dec
add
test
jmp
xor
das
loop
dec
(bad)
stos
cmp
xchg
outs
data16
mov
xor
pusha
jne
mov
ss
in
repz
jge
enter
pop
shr
mov
mov
fdivr
inc
dec
lea
sbb
js
xor
mov
test
test
rcr
pop
cdq
xor
rol
gs
imul
lea
movs
push
xchg
cmp
movs
div
lock
int3
and
jns
fiadd
ret
inc
test
in
dec
dec
xor
movs
cwde
int
inc
ficomp
pop
ret
xchg
stos
push
into
(bad)
pop
jo
xchg
mov
je
cli
(bad)
mov
mov
adc
pop
mov
xchg
sub
mov
scas
or
dec
push
into
shl
cs
je
add
sahf
push
es
mov
and
mov
sbb
gs
(bad)
lock
out
push
mov
leave
lods
shl
loop
call
pop
adc
jg
sbb
jae
cmp
std
out
ins
pop
mov
lahf
mov
or
inc
pop
dec
popa
cli
or
(bad)
jns
sub
adc
aas
out
dec
mov
js
inc
inc
cmp
das
int3
fstp
or
fsub
adc
mov
aam
and
or
iret
mov
jp
jae
jge
add
shl
jns
sbb
sub
mov
jnp
mov
mov
cwde
sar
add
push
jl
cli
mov
xchg
cmp
sub
int3
rol
xchg
repnz
ret
adc
jmp
mov
scas
pusha
stos
fwait
xchg
jne
mov
cdq
sub
call
repz
ffree
xchg
or
sbb
cmp
loope
push
aad
test
mov
push
sbb
lahf
jl
mov
cld
inc
pop
(bad)
in
mov
pop
cmps
dec
fimul
pop
mov
clc
mov
add
bndldx
dec
xor
stos
fstp
mov
std
add
int3
ret
ret
jnp
add
pop
mov
dec
adc
pop
push
xor
(bad)
pushf
mov
rcr
outs
mov
xchg
cmp
push
outs
scas
dec
xor
in
shl
push
cdq
mov
inc
cmp
or
inc
and
pop
stos
aam
test
test
int3
cmp
mov
mov
mov
lahf
jae
lahf
mov
sub
or
fdivr
stos
and
mov
push
jge
lods
or
(bad)
jp
jb
mov
xor
xchg
mov
or
mov
mov
les
loope
in
xor
adc
mov
mov
push
mov
pop
inc
mov
cmps
sbb
repz
cli
arpl
inc
add
mov
inc
and
xchg
or
jo
mov
fwait
icebp
fld
adc
or
stc
jno
or
mov
test
sub
xchg
mov
and
mov
inc
inc
push
dec
int3
in
das
es
dec
into
push
mov
jmp
jge
mov
leave
lock
les
das
add
or
in
cmovl
dec
xor
dec
xchg
xchg
frstor
and
mov
jno
xor
or
add
mov
xchg
aaa
xor
lahf
add
mov
mov
scas
neg
adc
xlat
pop
ss
fisttp
jnp
in
fadd
ins
retf
lds
sbb
stc
mov
sub
daa
jmp
cdq
push
int
ins
adc
jecxz
jno
pop
lods
jne
jne
(bad)
push
dec
push
fcomp
int
mov
pusha
fld
adc
cs
sti
call
fistp
cmp
call
jge
shl
mov
or
mov
pop
test
mov
push
mov
or
jle
jge
xlat
test
test
outs
out
pusha
pop
cmp
sub
push
inc
es
pop
aas
mov
aas
fadd
pop
js
cmc
repz
dec
sub
arpl
cmp
lahf
inc
pop
inc
scas
cmp
test
test
out
adc
hlt
adc
push
or
adc
pop
jb
xchg
pop
push
cld
mov
aas
adc
fimul
(bad)
and
or
jae
dec
cmp
jp
pop
arpl
inc
inc
test
push
mov
test
ficom
push
(bad)
in
mov
int
xlat
jnp
mov
popf
sahf
mov
dec
enter
inc
dec
xchg
pushf
iretw
sub
jg
arpl
xchg
sbb
xor
stc
iret
jne
dec
call
mov
jae
fst
xchg
mov
fisttp
cld
jno
inc
ret
xchg
psubusw
(bad)
sub
push
cli
inc
sbb
imul
adc
mov
iret
dec
cld
xchg
dec
xchg
movs
mov
ss
adc
shl
sbb
sbb
pop
mov
retf
retf
inc
scas
and
mov
or
call
add
retf
addr16
adc
or
add
mov
sbb
push
ins
leave
sub
adc
stos
mov
inc
xchg
adc
out
inc
sbb
or
retf
mov
pop
push
fnstenv
cmp
sti
int
push
or
jp
sub
cmp
mov
imul
push
jl
out
dec
mov
xchg
dec
mov
dec
int
push
push
jns
and
xchg
fs
xchg
std
or
cmp
clc
inc
add
in
adc
or
je
push
and
test
pop
or
aaa
sahf
shl
xchg
inc
xchg
inc
xor
shl
sbb
in
ret
sbb
cs
icebp
mov
cmps
pop
xor
pop
rcr
jae
mov
sub
pop
push
shl
pop
inc
inc
loopne
(bad)
jmp
cld
xchg
cs
call
outs
fdivr
adc
retf
neg
and
pop
stos
xchg
jge
jle
mov
in
jno
add
mov
popf
push
jno
lahf
push
in
popf
lods
test
push
jne
lods
adc
cmps
scas
inc
ins
mov
sub
inc
push
mov
(bad)
iret
mov
pop
inc
dec
in
int
pusha
out
jg
daa
(bad)
ror
xchg
mov
pop
xchg
inc
sbb
fidivr
jae
adc
mov
es
out
pop
cmp
jecxz
shr
shl
es
pop
xchg
and
cmp
and
es
push
(bad)
mov
fstp
dec
imul
push
add
dec
sbb
movs
push
fdivr
fs
inc
sbb
es
xchg
lods
movs
and
inc
mov
inc
fild
push
cmps
je
add
cmps
lods
push
cdq
push
adc
push
add
shl
sbb
ins
test
cmc
pushf
les
pop
out
rol
leave
dec
lahf
inc
fdiv
fild
fs
test
aaa
mov
out
shr
popa
push
loope
out
mov
int
pop
not
loope
outs
sbb
sub
jle
push
retf
pop
jns
rcl
es
mov
or
or
test
call
adc
bound
idiv
lock
mov
ds
pushf
inc
mov
popf
pop
dec
adc
xchg
ss
and
test
loope
ret
mov
ret
loop
inc
clc
mov
dec
jae
sbb
sub
adc
std
xchg
retf
imul
xchg
mov
leave
or
push
ins
into
int3
sti
fadd
nop
or
movs
loope
int
ins
jl
dec
sbb
std
pop
repnz
push
add
das
adc
jno
cwde
jo
mov
jns
and
jle
mov
push
jb
mov
push
sbb
mov
cmps
cmp
jbe
pop
and
imul
icebp
mov
dec
out
aad
(bad)
cmp
sbb
push
push
pop
in
adc
shl
ja
jecxz
pop
ret
mov
(bad)
mov
mov
cld
aad
adc
movs
xor
and
inc
clc
adc
or
mov
iret
sar
mov
fild
test
jg
xor
arpl
push
inc
sub
cmp
xor
dec
mov
enter
sbb
jo
mov
sbb
sti
stc
scas
inc
adc
mov
add
into
fistp
dec
sbb
sub
js
or
or
in
add
adc
push
adc
xor
fwait
pop
je
(bad)
xor
jnp
push
lods
data16
into
loop
xlat
jbe
lods
ss
ins
test
in
inc
push
ja
sar
fucomip
pop
mov
(bad)
sahf
xchg
inc
xor
imul
sahf
pop
rcl
push
int3
pop
loopne
inc
mov
mov
dec
jl
in
in
or
dec
iret
dec
jmp
sbb
sub
fcom
out
xor
mov
adc
fwait
retf
ret
add
lods
xchg
xchg
popa
push
jmp
dec
push
imul
adc
out
adc
cmp
and
out
jmp
imul
fidiv
pop
pop
hlt
jb
js
rcr
cmp
add
outs
sbb
dec
idiv
leave
stos
mov
sub
mov
test
sbb
mov
mov
mov
in
mov
(bad)
fsub
fisubr
dec
cmp
xchg
jns
imul
test
add
xchg
dec
pop
dec
inc
call
dec
or
jle
inc
stos
sub
push
std
xchg
sbb
mov
jmp
xchg
xchg
dec
xor
adc
or
fwait
shl
aam
sbb
(bad)
cld
imul
push
mov
push
cs
fisubr
dec
jne
aad
enter
aaa
not
and
ins
lods
add
xor
pop
jmp
dec
dec
rol
sbb
cld
cmps
repz
jp
mul
shr
pusha
(bad)
in
cmp
out
inc
scas
pminub
xor
bound
pop
in
loop
mov
adc
jbe
adc
mov
test
hlt
mov
add
stos
inc
cdq
or
add
iret
xor
dec
pusha
in
inc
inc
jg
fwait
inc
sub
and
dec
cmp
and
jl
add
(bad)
cld
arpl
outs
aas
cs
cmp
aas
sub
cmp
cmps
scas
mov
cmp
adc
adc
in
je
movs
dec
push
or
jnp
mov
pusha
jno
cs
popa
jge
or
pop
xlat
push
push
inc
loop
test
dec
sbb
push
xchg
or
jo
sbb
xor
out
popa
addr16
jo
mov
mov
xor
mov
rol
adc
cld
jg
enter
or
das
(bad)
outs
adc
cmp
out
inc
or
and
(bad)
ja
mov
les
lahf
cmp
test
(bad)
lock
mov
add
sti
ror
push
inc
loop
mov
jns
ins
int3
mov
dec
push
enter
ror
pusha
fsub
int3
aaa
dec
in
ss
sbb
movs
pop
mov
adc
xor
pop
mov
int
pop
test
jl
loop
fwait
in
xor
mov
pop
fnsave
enter
pop
into
test
(bad)
fistp
xchg
push
out
scas
push
push
add
into
ins
push
cmp
lods
not
clc
cmps
stos
ret
fisubr
inc
in
jp
inc
cmc
hlt
ja
inc
cdq
xchg
mov
fisubr
mov
mov
ins
rcr
fnsave
xchg
push
mov
add
jle
pop
cld
mov
clc
push
ret
jmp
pop
in
in
mov
pusha
xchg
aas
sub
jbe
and
and
push
into
fdivr
or
jp
push
stos
push
ss
pop
adc
out
aad
inc
outs
xchg
daa
jns
mov
mov
jne
retf
scas
mov
push
jne
jbe
cmps
mov
dec
and
adc
sub
(bad)
cmc
ret
mov
mov
and
cdq
xor
mov
jp
jns
adc
int
cmp
retf
adc
js
lock
push
aaa
mov
into
pop
dec
mov
push
outs
sbb
push
pop
jl
shl
je
push
xchg
jb
shl
jecxz
push
inc
cmp
adc
pop
pop
ror
push
inc
loopne
iret
and
or
inc
rcl
jmp
stos
pop
(bad)
std
inc
push
sub
pushf
cmp
mov
inc
and
stos
or
aad
aad
out
jge
xor
mov
pop
jmp
add
cdq
push
and
adc
and
or
fldcw
add
mov
xor
inc
jbe
ds
retf
and
inc
xchg
cld
mov
inc
jge
mov
dec
push
jmp
in
inc
mov
dec
int3
mov
push
mov
or
out
sbb
xor
cmps
iret
mov
mov
cmp
stc
adc
or
jp
stc
fs
push
push
lods
in
mov
cld
mov
push
pop
jmp
sahf
or
push
scas
jno
mov
pop
inc
retf
test
push
mov
mov
or
or
lea
in
jnp
or
or
pop
lock
mov
cmp
arpl
std
rcr
xor
into
hlt
jno
adc
sub
and
jmp
push
out
icebp
sbb
or
fadd
push
(bad)
(bad)
shl
(bad)
xchg
mov
outs
fs
scas
scas
movs
add
fadd
sbb
mov
lods
sbb
mov
xchg
push
add
inc
(bad)
jbe
dec
jle
cmps
push
data16
pop
push
js
ret
daa
pop
movs
mov
stc
(bad)
loope
pop
xor
cmp
push
in
xor
ror
push
jbe
(bad)
jl
cmps
inc
mov
jae
push
push
std
(bad)
and
ins
cwde
cmp
daa
popa
lods
int
xchg
sbb
and
inc
mov
xor
fst
clc
lahf
daa
lock
xchg
mov
test
fwait
adc
leave
xor
cmc
das
icebp
addr16
lods
inc
pop
jno
inc
and
adc
add
aaa
out
sti
in
mov
xchg
inc
fdiv
sub
lods
repz
fcmovnbe
push
ds
jle
xlat
shl
mov
punpckldq
stc
test
stos
sbb
nop
sub
in
pop
loope
add
in
jne
cmp
jecxz
sbb
loop
jmp
jg
ss
mov
and
sbb
sbb
and
pop
adc
(bad)
in
sub
sbb
mov
or
mov
call
adc
or
ret
je
mov
cwde
pop
call
cdq
pop
jns
inc
(bad)
jae
xor
jbe
inc
inc
nop
dec
cmp
stc
es
sbb
jecxz
push
rol
pushf
call
scas
je
stos
jb
icebp
mov
lds
xchg
(bad)
imul
inc
pop
add
(bad)
loop
not
arpl
xor
mov
and
mov
das
pop
xor
push
cli
(bad)
stos
adc
and
mov
sub
sub
xchg
rol
scas
inc
cs
lds
pushf
std
mov
int3
pusha
xchg
iret
dec
das
mov
or
enter
aas
push
xchg
inc
int3
std
pusha
sbb
adc
jl
jns
ficom
dec
dec
xchg
dec
cmps
sbb
jge
test
mov
jns
dec
jmp
xor
iret
js
je
or
in
inc
stos
pusha
addr16
(bad)
sub
sub
push
test
mov
mov
(bad)
into
xchg
add
jp
xchg
mov
cs
dec
loop
loope
test
jmp
(bad)
test
stos
int3
popa
stc
gs
test
clc
mov
jbe
mov
rcl
in
test
sbb
leave
mov
mov
test
ins
pop
lods
push
rol
dec
pxor
leave
sbb
in
jne
pop
fs
cmp
fcom
cld
cmp
popa
imul
cmp
xchg
enter
dec
sbb
cmp
adc
push
pop
push
pop
(bad)
push
add
shl
enter
(bad)
pushf
sbb
les
cmp
sub
cmc
pop
imul
add
es
(bad)
jbe
push
icebp
jl
daa
cmp
or
stos
and
fcomp
inc
add
fucomp
ja
pop
(bad)
push
imul
lock
mov
mov
cmp
pop
inc
and
mov
int
pusha
pop
sub
xchg
es
into
icebp
das
xlat
or
jb
jmp
mov
ror
adc
imul
popf
movs
xor
in
mov
dec
mov
ret
shl
dec
add
or
mov
mov
jp
inc
bound
jle
and
fxam
lods
(bad)
lods
push
sub
lods
sahf
pop
mov
and
mov
mov
into
test
push
sbb
xor
xchg
dec
gs
test
push
out
add
ror
imul
pop
pop
and
in
adc
cs
gs
xor
xchg
push
inc
pusha
mov
mov
addr16
(bad)
xchg
lods
aam
dec
xor
in
jge
(bad)
dec
cmp
aad
out
cld
or
shr
or
sub
call
(bad)
pop
and
xor
pop
hlt
gs
lock
into
repz
addr16
scas
pop
push
cdq
dec
fs
jmp
sar
xchg
sbb
lods
cmps
mov
mov
test
xor
call
loop
mov
pop
int
pop
shr
addr16
fiadd
sahf
adc
adc
push
ret
xlat
pop
xchg
rol
jne
outs
mov
sub
rcl
mov
stc
aam
xor
inc
pop
push
mov
stc
push
(bad)
lea
mov
das
stos
xchg
fs
adc
cli
mov
(bad)
repz
repnz
int
dec
mov
int3
jbe
push
jl
xor
ficom
fiadd
adc
retf
jmp
in
pusha
sub
test
mov
inc
ret
xchg
bound
std
ja
push
pusha
jae
inc
jae
add
jmp
push
movs
dec
fisttp
pusha
shr
jp
data16
jae
sub
jg
jo
xor
addr16
add
call
sbb
xor
stos
retf
mov
jle
div
(bad)
and
sub
cmp
or
xchg
adc
sbb
add
scas
outs
or
push
dec
push
xor
xchg
shl
inc
outs
mov
mov
mov
in
pushf
dec
cmps
dec
push
xchg
mov
ins
pushf
push
pop
adc
xchg
inc
pop
popa
rol
add
loope
ins
xchg
adc
adc
into
pop
push
sub
sbb
inc
adc
mov
adc
and
mov
mov
pop
jg
repz
mov
in
jecxz
scas
mov
out
jnp
push
lock
std
lods
inc
sahf
daa
mov
int3
xchg
and
inc
adc
pop
movs
xchg
clc
push
sbb
add
xor
adc
sub
std
mov
xchg
(bad)
idiv
imul
cmp
bound
sbb
(bad)
cli
xor
add
pop
shl
xlat
mov
mov
or
pop
xlat
sub
fwait
nop
mov
jge
push
lock
push
sub
pusha
sti
jnp
push
push
inc
fisttp
addr16
jns
cmc
lods
pushf
fstp
lgs
into
inc
adc
lods
mov
shr
(bad)
dec
(bad)
rol
xchg
xchg
xchg
iret
xchg
cmp
mov
push
add
faddp
es
push
dec
xor
sub
inc
pop
mov
(bad)
dec
pop
lahf
mov
xor
add
imul
sbb
xor
je
xchg
jbe
pop
popf
ror
outs
imul
cld
aam
xchg
call
das
dec
out
mov
xor
fimul
jnp
addr16
movs
sbb
cld
jecxz
jne
ins
push
nop
mov
fnsave
xchg
jp
xor
dec
gs
and
jge
lods
mov
cmp
test
dec
cmp
mov
push
nop
je
in
iret
push
pop
arpl
dec
xchg
out
push
sbb
imul
cmp
(bad)
mov
in
xchg
pop
call
mov
adc
enter
lahf
in
xchg
cld
lods
xor
jbe
fldcw
mov
inc
gs
push
fs
pop
int3
aad
xor
js
sbb
shr
cwde
data16
pcmpgtb
dec
aas
pushf
ins
daa
fisttp
int
repnz
icebp
outs
lods
mov
xchg
fistp
test
mov
std
or
fistp
imul
std
fcomp
push
jl
gs
fst
and
pushf
ds
mov
inc
int3
cld
pop
loopne
ret
clc
mov
pop
and
scas
add
loope
sbb
stos
jo
cdq
cmc
push
push
push
outs
(bad)
lock
ja
jbe
mov
call
inc
sub
fstp
jo
fisttp
and
mov
push
fldcw
(bad)
sbb
fs
repnz
xchg
fbstp
pusha
xor
fcmovnbe
sbb
mov
sbb
pop
push
and
cwde
std
pop
imul
mov
adc
aad
dec
(bad)
stos
out
retf
push
adc
inc
lds
xchg
jnp
fwait
adc
leave
movs
sbb
mov
add
xchg
shl
hlt
jp
jae
mov
out
out
ins
lea
hlt
mov
fstp
mov
push
cwde
sub
dec
add
and
xor
inc
jns
fdivr
cmp
inc
je
cld
mov
fdivr
ror
daa
push
nop
pop
jl
mov
nop
inc
cdq
popa
aam
iret
sub
fistp
sub
push
jle
push
test
out
xlat
and
aaa
leave
push
sub
repz
fimul
jb
cwde
inc
stc
push
xor
mov
jp
cmp
add
xor
ss
sbb
or
fbld
and
fsubp
jmp
out
lods
inc
add
sti
popa
rcl
push
(bad)
fcom
xchg
mov
inc
push
pop
test
push
pusha
rcl
or
xchg
pop
fmul
mov
cs
push
mov
xchg
sahf
fcmovu
rcr
sbb
sub
call
(bad)
lock
je
sahf
xchg
pop
mov
movs
loop
push
ffree
xchg
push
add
dec
hlt
dec
push
ret
lea
call
outs
inc
or
cmp
adc
inc
repz
adc
pop
mov
cmps
fbstp
lds
jo
(bad)
add
(bad)
aaa
pop
sub
push
test
jmp
cmp
test
sti
enter
loop
xor
and
lea
cmc
jbe
iret
ins
rol
pop
ja
adc
pop
dec
jne
shr
ror
sub
out
jp
adc
mov
pop
xor
cld
jno
pop
cmp
add
jecxz
retf
or
out
imul
leave
lods
retf
movs
ins
push
pop
sahf
inc
adc
aas
iret
stos
lock
xchg
cmps
out
mov
dec
arpl
sbb
shl
call
inc
lods
fst
push
mov
xchg
scas
aam
add
mov
push
jp
mov
or
sbb
pop
jno
sub
dec
js
repnz
enter
xor
pop
or
sub
jge
xchg
fadd
out
and
jge
js
mov
int
outs
shl
call
arpl
into
std
test
mov
jl
cs
push
cs
jbe
mov
push
sbb
adc
add
jle
shl
mov
push
ret
cli
cdq
and
and
test
ins
mov
mov
and
int
div
call
pop
xor
jbe
jp
and
popf
call
stc
cmp
ja
sub
add
les
mov
retf
mov
cmp
in
cmp
push
add
cld
cmp
(bad)
pop
dec
into
cmps
or
push
inc
xchg
call
adc
inc
mov
dec
test
push
nop
and
outs
test
outs
gs
pop
out
and
inc
dec
outs
mov
sub
fbld
out
aam
loope
xor
mov
fwait
scas
xor
xchg
ds
enter
add
gs
retf
cmp
jbe
imul
cmp
jle
cli
int
add
push
fs
push
xor
adc
movs
cmp
aaa
in
push
jp
fwait
add
neg
push
sbb
fwait
mov
test
inc
mov
in
xor
sbb
ins
or
sub
aaa
or
ret
pop
sub
dec
cld
adc
fistp
xchg
int3
cmp
retf
sub
out
xchg
retf
sub
adc
in
cmp
mov
in
dec
js
inc
pop
pmullw
in
imul
xchg
jnp
mov
cmp
in
adc
push
sbb
stc
lock
ss
repz
mov
(bad)
popf
xlat
clc
jns
lods
and
add
pop
adc
inc
test
das
mov
cs
jno
int
pop
mov
sub
mov
cmp
xor
fsubr
jge
retf
aam
js
cmp
ja
shl
sub
jo
std
adc
mov
into
js
cld
xor
fmul
pop
cmp
dec
lock
inc
adc
(bad)
scas
jle
fmul
in
dec
(bad)
fwait
adc
sub
movs
jbe
push
adc
sub
movs
sbb
add
arpl
bound
mov
push
push
into
test
mov
out
je
push
or
xor
in
or
and
pusha
xor
and
sub
mov
adc
push
sbb
fld
imul
push
cmp
mov
retf
cmp
imul
dec
das
jbe
push
loop
and
sbb
cwde
pop
add
lods
fdivp
mov
jns
or
jge
cmp
div
repz
sub
lods
jl
xor
dec
fdivp
mov
lds
fnsave
cdq
inc
mov
jno
test
pushf
sbb
xchg
cli
cmp
loop
hlt
mov
mov
mov
cmp
cmp
sub
mov
popa
in
lods
(bad)
mov
xchg
mov
push
inc
or
sub
and
ja
fld
mov
out
sbb
fst
mov
sahf
sbb
into
mov
out
dec
inc
xlat
loop
add
xchg
je
sub
loope
pop
mov
cld
cmps
mov
shl
es
lods
xchg
mov
jp
je
and
or
aad
adc
inc
loope
jae
or
ret
mov
pop
ja
ins
adc
pop
cmp
mov
and
stos
in
mov
xchg
outs
fs
sbb
repnz
push
shl
imul
addr16
inc
psrld
dec
stos
push
inc
add
xchg
out
and
mov
ja
dec
loope
repnz
adc
jb
xchg
sub
cmps
push
jp
pushf
out
leave
mov
push
lock
pop
sbb
fnsave
cmp
dec
xchg
and
stos
rcl
dec
cdq
ret
adc
sbb
xchg
dec
lods
cmp
loopne
loop
lds
or
sbb
dec
pushf
fwait
js
inc
and
and
test
xor
dec
jne
fdivr
shl
cs
dec
in
push
(bad)
jg
out
jo
loope
or
mov
adc
mov
fadd
add
imul
in
mov
std
rol
xor
or
pusha
pop
shr
add
cli
ret
int
dec
push
imul
xlat
(bad)
daa
inc
mov
aaa
mov
jg
cmp
jmp
xchg
jmp
mov
xor
mov
das
mov
aad
dec
loop
int3
mov
add
out
cli
sbb
sub
push
(bad)
jmp
pop
inc
adc
xchg
jbe
mov
lea
repz
jne
add
mov
fcmovu
retf
pop
loope
pushf
fldenv
xor
mov
scas
push
popa
dec
mov
add
(bad)
sub
out
movs
(bad)
mov
ss
adc
sub
mov
xchg
mov
cmps
pop
inc
dec
xor
push
pop
pusha
mov
and
jg
stos
and
jle
cmc
add
mov
test
mov
jb
mov
cmp
out
mov
push
int
into
jnp
add
cmp
fdiv
dec
cdq
sub
imul
fcomp
mov
in
fst
mov
mov
mov
retf
call
mov
mov
fsubr
dec
jge
(bad)
bswap
mov
dec
lods
pop
pop
out
test
xchg
adc
sbb
mov
mov
push
(bad)
scas
stc
out
(bad)
sub
xchg
cmc
cmp
outs
mov
adc
mov
(bad)
ret
not
sbb
movs
(bad)
adc
mov
ror
aaa
fadd
loope
mov
shl
jne
push
push
mov
dec
xor
cmp
test
fdiv
in
sub
test
movs
adc
jnp
or
mov
inc
xchg
pusha
sbb
add
xchg
cs
(bad)
(bad)
lods
sbb
fild
outs
dec
retf
push
js
cmp
pop
sub
xor
js
fnstcw
movs
clc
mov
addr16
mov
mov
jmp
jle
test
jl
sub
inc
push
pop
cmp
mov
push
rep
mov
jmp
retf
or
pop
sar
mov
jle
push
push
addr16
icebp
mov
cs
dec
or
stc
push
hlt
pop
and
xor
cmp
adc
xor
sub
pop
iret
sub
mov
add
sahf
dec
aaa
or
xor
fabs
call
jns
cmps
xchg
loopne
jge
shl
xchg
add
jecxz
adc
rol
pop
enter
hlt
sbb
push
loopne
jmp
imul
pop
test
in
inc
inc
call
setnp
ins
(bad)
xor
inc
mov
mov
jle
sub
dec
ins
xor
or
and
dec
add
jl
rcl
cmp
mov
stos
push
mov
cmp
test
ret
into
mov
jno
or
pushf
pop
mov
xor
stos
das
fisub
popa
xor
sub
lahf
xlat
and
stc
scas
adc
xor
pop
sub
fisttp
add
xor
addr16
cmovbe
xchg
out
fdiv
jo
xchg
test
sub
pop
outs
xchg
(bad)
test
out
xor
inc
leave
push
popa
cwde
cmp
(bad)
dec
popa
mov
push
mov
jb
shl
enter
int3
add
dec
mov
loop
cdq
or
jno
ja
cwde
fwait
rol
cli
retf
aas
call
jns
das
adc
outs
or
and
out
push
js
mov
add
stos
pop
pop
pop
adc
test
(bad)
out
cmps
mov
test
call
push
dec
pop
fmul
cmp
aaa
mov
in
lea
pop
inc
arpl
or
(bad)
cmp
adc
cmp
pop
cmp
ds
push
xor
jbe
jle
adc
retf
mov
repnz
and
jbe
xchg
dec
adc
inc
pop
mov
mov
sub
(bad)
cmp
add
loopne
dec
clc
sahf
or
push
mov
or
mov
fwait
jle
mov
mov
call
xor
fld
or
xchg
push
push
mov
push
(bad)
mov
mov
adc
xlat
xor
add
xchg
jbe
mov
mov
scas
mov
test
mov
das
or
push
xchg
addr16
xchg
jns
pop
out
xlat
xor
or
fmulp
pushf
cld
sbb
mov
pushf
(bad)
in
mov
xchg
jnp
pushf
cmps
daa
mov
jo
mov
inc
dec
sub
xor
and
shl
mov
pusha
fsub
mov
jmp
push
jmp
cmp
outs
jmp
pop
retf
sbb
je
inc
call
mov
pusha
cmp
mov
adc
jge
sub
int
mov
(bad)
mov
dec
retf
mov
cmp
xor
enter
jle
jns
dec
cmp
in
adc
sub
adc
ret
lds
bnd
scas
gs
mov
jle
(bad)
sbb
mov
push
dec
hlt
jmp
movs
push
cdq
cdq
sahf
jecxz
sub
loop
mov
adc
cmp
(bad)
int3
cld
mov
lea
push
int3
loopne
push
pop
jge
cmp
std
mov
mov
in
rcr
jp
out
call
dec
ds
fnstcw
cli
repnz
sbb
add
jle
div
xchg
(bad)
clc
xchg
jbe
pop
sbb
push
jle
push
cmp
push
push
inc
pop
je
sub
or
call
ss
push
mov
cmp
loopne
neg
ficom
icebp
scas
imul
xor
test
mov
jmp
or
xor
js
fisub
cmp
in
inc
leave
retf
les
pop
stc
imul
mov
test
jmp
jo
mov
add
lahf
jmp
push
cmp
add
scas
mov
arpl
sbb
ins
push
cmp
retf
pop
and
add
cld
mov
int
add
xlat
inc
jne
mov
(bad)
xor
jle
sbb
ins
(bad)
adc
xor
sbb
xor
xor
push
jb
lock
xor
sbb
aas
out
shr
mov
and
and
lahf
cmp
cwde
aam
mov
inc
dec
pushf
jmp
popf
cdq
mov
pusha
inc
xlat
push
sti
cli
mov
pop
jp
mov
xchg
(bad)
pusha
fst
cli
push
sub
cld
xchg
add
retf
inc
loope
adc
sahf
cwde
js
fiadd
fiadd
nop
xor
fst
inc
and
das
sub
jbe
iret
scas
test
or
fild
mov
sbb
das
es
push
fisub
dec
ror
add
fistp
jle
and
jb
repz
jbe
lds
xchg
mov
cmp
retf
loopne
fimul
cmps
sbb
adc
mov
pop
pusha
add
sar
out
lock
(bad)
fld
fild
(bad)
movs
aad
scas
in
xor
adc
dec
jnp
gs
and
xchg
imul
xchg
out
xor
and
add
or
int3
sub
push
pop
call
hlt
outs
push
push
sahf
adc
push
mov
retf
or
out
es
inc
rcr
inc
blcfill
arpl
xchg
aad
test
dec
xchg
push
cmc
rcr
sub
mov
push
daa
jns
(bad)
and
clc
push
or
xor
hlt
leave
sbb
jb
sub
cmps
lock
inc
rcl
cmp
(bad)
shl
hlt
dec
mov
aam
bound
ja
jl
and
popa
push
push
clc
pop
fwait
adc
adc
cmp
pop
sub
adc
nop
mov
add
mov
pop
dec
and
call
rol
fcomp
outs
xchg
test
xchg
dec
dec
jle
arpl
loope
cwde
mov
jecxz
mov
call
and
cld
into
std
inc
loope
or
aas
call
aas
fbstp
jbe
sub
mov
push
mov
sbb
pop
and
inc
mov
fwait
mov
rol
inc
in
ins
xor
cs
test
mov
xor
pop
push
inc
xor
jle
sub
mov
inc
icebp
lods
cwde
into
jmp
sub
add
xchg
inc
lahf
xchg
pop
loopne
hlt
mov
fcmovnbe
jne
push
(bad)
xchg
or
jmp
stc
mov
movs
arpl
push
xlat
add
cld
mov
xor
xchg
lock
xchg
jg
fldpi
cli
pushf
xchg
popa
loope
(bad)
push
scas
repnz
or
pop
idiv
sbb
jbe
dec
mov
jg
xlat
iret
psrlq
push
sub
inc
xor
mov
xchg
adc
stc
pop
jmp
push
shl
ficom
imul
xchg
sub
push
(bad)
and
iret
jno
mov
xchg
xor
pop
cmp
add
jge
pop
sti
int
div
sub
ret
and
jno
jmp
push
jle
mov
stos
pop
dec
repnz
loop
push
in
jnp
call
shl
out
lahf
ds
arpl
xor
lea
or
sbb
outs
js
rol
pop
mov
or
out
fild
ret
fwait
test
cmp
jecxz
mov
or
push
sub
fmulp
movs
test
push
movs
stos
cmp
out
sar
push
in
leave
adc
sbb
loope
push
and
std
or
pop
ss
push
or
mov
enter
out
push
aam
cmp
push
in
dec
loopne
enter
mov
jno
outs
xchg
or
fcomip
pushf
out
fldenv
cwde
jo
cli
imul
popf
out
in
xchg
jns
xchg
mov
jl
cs
dec
lods
ins
(bad)
jae
ins
fwait
cmp
add
or
ficomp
inc
sbb
lods
push
pop
js
repz
add
(bad)
out
mov
(bad)
in
es
call
push
mov
stc
jle
xchg
or
push
cmps
mov
sbb
jge
xor
nop
cmp
test
ficom
inc
repz
cs
pushf
cmp
add
ror
inc
xchg
sub
xchg
mov
out
xlat
rcr
scas
inc
lods
pushf
mov
pop
add
xor
xchg
bound
dec
pop
mov
xchg
xchg
shr
and
xchg
movs
out
rcr
stos
mov
jo
fdivr
xchg
leave
sub
jo
mov
ins
and
std
cmp
mov
and
pop
lods
js
call
popf
mov
(bad)
test
imul
sub
sub
enter
add
jmp
jge
dec
mov
mov
push
(bad)
push
retf
adc
xchg
in
fwait
adc
test
add
adc
mov
mov
lea
jl
mov
cmc
or
cmp
adc
or
sbb
call
lods
mov
sbb
or
fidivr
xchg
daa
ss
outs
adc
adc
cmc
add
loop
or
pop
fidiv
test
mov
icebp
pop
pop
std
aaa
mov
mov
sbb
scas
movs
jge
sbb
mov
jmp
movs
fsubr
(bad)
cmps
test
sbb
repnz
or
fiadd
arpl
adc
fld
dec
inc
xor
add
dec
jl
pop
repz
pop
pop
inc
cdq
pop
lahf
scas
pop
xor
jns
inc
jmp
pop
in
cmp
xchg
pushf
fimul
nop
mov
inc
test
pop
cmc
cmp
outs
enter
mov
or
add
stos
shl
les
mov
ins
outs
test
(bad)
outs
xchg
and
mov
ja
mov
add
xchg
cld
hlt
mov
xor
mov
dec
mov
arpl
(bad)
mov
pushf
or
xor
inc
gs
adc
ss
xor
mov
and
mov
push
xor
bound
inc
mov
pop
pop
mov
shl
xchg
in
popa
push
movs
dec
lods
jle
repnz
imul
(bad)
xchg
test
and
dec
pop
adc
les
arpl
xchg
dec
out
(bad)
nop
push
jp
ds
jge
rol
push
and
lock
xchg
dec
adc
xor
pusha
shl
xor
ret
inc
sti
inc
es
loopne
in
aad
push
xlat
(bad)
std
ds
xchg
jp
stc
add
sbb
clc
sbb
into
lds
xchg
mov
jbe
xchg
retf
jle
or
sub
or
out
lds
hlt
jmp
mov
bound
mov
neg
and
mov
or
in
add
and
or
rcr
and
cmps
cmp
cs
mov
mov
xchg
xchg
add
xchg
pop
js
sub
iret
popf
add
dec
outs
ja
in
xor
movs
cli
test
add
sub
dec
jecxz
jmp
mov
pop
sti
push
sbb
dec
and
mov
inc
push
adc
cmp
outs
scas
jbe
xchg
cmp
push
jb
jmp
idiv
xchg
xor
or
ins
in
imul
or
aaa
jbe
mov
pop
adc
xchg
cmp
gs
(bad)
fucomp
aaa
and
adc
and
jmp
adc
xchg
(bad)
repz
dec
mov
sub
es
dec
sbb
and
aaa
cwde
imul
sahf
(bad)
push
pop
mov
shl
dec
push
adc
imul
xchg
out
dec
mov
xchg
xchg
imul
adc
(bad)
push
fist
ret
xor
(bad)
push
or
popa
or
dec
jg
inc
add
pop
cmp
call
or
dec
pop
out
jno
stc
(bad)
das
inc
mov
mov
ja
jge
mov
xor
jmp
sbb
mov
sbb
push
aas
inc
movs
mov
sar
mov
mov
cmp
add
out
pop
mov
push
mov
mov
jecxz
push
or
test
je
inc
call
stc
fwait
pusha
push
add
ins
mov
mov
cwde
sub
das
cmp
sbb
mov
mov
rcr
pop
mov
sahf
sub
hlt
sub
mov
pop
addr16
mov
enter
dec
mov
dec
out
sar
mov
imul
ins
cmp
aam
xchg
lods
dec
xchg
loop
and
leave
xor
call
xchg
iret
mov
bound
je
test
aad
mov
int3
daa
pop
ror
sbb
std
loopne
rcl
sti
das
ss
and
and
xchg
loope
add
adc
mov
jnp
push
pop
ins
in
(bad)
or
dec
mov
mov
int3
inc
lahf
add
loop
jbe
pop
push
stos
aam
out
or
pop
sbb
mov
jmp
clc
rcl
inc
or
(bad)
adc
fst
cmc
in
arpl
dec
add
gs
fnstenv
or
jns
and
mov
shl
inc
ja
push
rcr
fbld
xchg
out
icebp
out
xchg
loope
enter
mov
push
jnp
nop
add
dec
call
gs
scas
jl
xor
out
xor
ss
add
inc
mov
pop
or
shl
dec
retf
lds
dec
push
sub
stc
popf
stos
sahf
setge
pop
ja
cmp
mov
sti
mov
push
js
les
or
fsub
ds
setp
fisub
std
jge
pop
xchg
and
fidiv
or
std
iret
outs
fs
jne
inc
push
pushf
adc
xchg
and
inc
fwait
add
movs
add
outs
mov
mov
sahf
movs
(bad)
in
sub
shr
shl
popa
out
into
dec
sub
repz
push
sbb
sahf
ds
lock
mov
sbb
push
aam
(bad)
xchg
ret
jo
jecxz
sar
lea
or
fs
xchg
xchg
mov
pop
std
sub
mov
mov
xor
pop
bound
xchg
xor
mov
lahf
jns
je
xor
dec
or
and
sar
and
add
xor
jb
pop
mul
jl
sti
lea
fs
jbe
mov
mov
mov
cmp
in
xchg
imul
and
mov
jmp
es
loop
je
js
jl
ret
cmps
xchg
push
push
out
lock
scas
xchg
mov
mov
mov
jg
lods
jl
lock
std
cmps
fsubr
sub
push
push
mov
xor
sbb
push
push
lods
icebp
mov
dec
test
push
jbe
mov
popa
pop
(bad)
sti
and
rol
mov
jl
or
sahf
and
xor
cmps
cmp
aaa
out
mov
scas
shl
fadd
jg
sbb
pushf
loopne
xchg
jg
es
or
lahf
or
bnd
cmp
pop
popa
int
idiv
mov
lods
arpl
fs
jmp
xchg
xchg
lahf
cmp
push
into
popa
outs
(bad)
rol
xor
mul
dec
loop
xor
jecxz
(bad)
cmps
test
fwait
lock
cmc
inc
xchg
ins
data16
push
push
add
inc
add
retf
fisub
lods
inc
sub
jmp
mov
and
fs
(bad)
in
test
pop
mov
ret
ins
stos
mov
jo
sbb
(bad)
jo
ja
enter
lods
jb
sub
mov
cmps
inc
sub
sub
int
in
fnstcw
cmp
inc
setge
xchg
jmp
jl
mov
mov
jo
sbb
ss
mov
leave
lods
loope
(bad)
lods
leave
out
shl
test
sbb
add
inc
mov
ja
push
out
or
repnz
and
loop
xchg
jns
clc
pop
sub
shl
adc
mov
mov
clc
(bad)
mov
test
popa
pushf
jmp
sar
pop
retf
sbb
xchg
test
outs
enter
jae
sbb
pop
and
pop
xor
(bad)
adc
jbe
ins
ficom
aad
adc
xchg
cmp
mov
in
std
fwait
call
jnp
mov
test
scas
sti
push
push
test
enter
lods
or
xchg
(bad)
ja
xchg
lods
je
add
mov
sbb
(bad)
adc
scas
xor
in
jns
test
out
cld
into
(bad)
pop
ds
popf
les
ja
adc
out
inc
and
in
in
pop
call
or
cmp
in
pop
rcr
sti
fmul
arpl
add
dec
lahf
fstp
inc
and
lahf
popa
loope
and
jb
or
cmp
sub
movs
fwait
or
psraw
xor
dec
pusha
fdivr
mov
mov
es
push
pop
je
(bad)
out
into
imul
jb
je
in
test
shl
dec
iret
jbe
mov
sahf
test
sbb
in
lods
adc
pop
fisttp
and
dec
pop
jnp
pop
aas
inc
test
jbe
pop
add
push
mov
mov
lods
mov
mov
adc
adc
test
test
sbb
add
push
mov
sub
xchg
cs
xor
xor
scas
cmc
in
call
jae
adc
ret
and
sbb
jmp
enter
pop
or
enter
fucom
mov
mov
pop
aaa
cmp
mov
mov
iret
cmp
pop
aad
cmp
and
fcmovne
mov
not
out
sub
sub
mov
xor
ins
das
jmp
rcr
mov
in
or
pusha
rol
add
in
call
loopne
jecxz
imul
xlat
fadd
stos
and
loopne
jbe
inc
or
mov
aam
jmp
lods
mov
shr
movs
adc
outs
adc
adc
fdivr
neg
sub
jo
inc
sbb
xchg
leave
mov
daa
mov
aad
je
pop
(bad)
ins
push
pop
pop
sar
lock
and
pop
add
jae
call
lods
call
sar
bound
ins
sub
shl
jmp
mov
cmps
mov
shr
jnp
add
mov
fs
cmp
mov
jnp
adc
aaa
xchg
push
xchg
xchg
loopne
push
push
mov
add
mov
pop
shl
fisubr
aam
sti
push
fist
into
mov
push
jge
and
sbb
add
mov
call
shl
movs
mov
(bad)
lods
jne
sbb
inc
aad
add
or
les
in
jge
daa
lods
test
jns
jl
les
scas
add
lods
bound
inc
(bad)
(bad)
xchg
scas
mov
xchg
ins
jnp
bound
cmp
sbb
xchg
fsubr
mov
adc
push
cmp
mov
add
push
push
sub
ror
aas
or
loop
sbb
leave
jp
push
xchg
std
add
dec
pop
add
nop
sub
inc
mov
(bad)
dec
test
add
(bad)
fsub
ret
cmp
dec
addr16
jecxz
xor
sti
cmp
xchg
pop
dec
xor
or
sub
sub
mov
xor
movs
leave
or
mov
add
lods
pop
mov
mov
hlt
rcl
sahf
mov
lds
(bad)
xor
movs
inc
cs
sub
lods
push
je
ret
adc
clc
aad
pop
sti
pop
cmovno
cs
int3
repz
loope
(bad)
xor
mov
xchg
mov
(bad)
and
sub
sti
jo
sbb
mov
pop
cdq
lods
je
in
bound
mov
sub
lock
push
jecxz
jnp
jns
scas
jecxz
cwde
cli
ja
les
sub
xor
movs
cmc
aaa
mov
sbb
in
ret
int3
out
bound
dec
out
jns
adc
jmp
sub
in
cdq
sub
inc
addr16
adc
jae
push
loop
add
mov
sub
cmp
or
dec
mov
lock
cmps
dec
(bad)
mov
inc
sub
xchg
es
push
ret
les
daa
add
adc
icebp
leave
xchg
sbb
sar
mov
sbb
mov
cmp
mov
rol
or
dec
push
mov
sbb
push
(bad)
jae
xor
ins
cmp
jl
cmp
xor
mov
repnz
out
mov
out
sub
adc
movs
xor
pop
movs
xchg
add
cmp
ja
push
lahf
jnp
and
and
inc
outs
mov
or
mov
mov
push
lea
js
and
adc
test
fstp
lds
sub
cmp
cmp
jbe
(bad)
cmp
adc
out
(bad)
jl
sbb
and
cmps
inc
mov
cmp
sbb
pushf
into
adc
mov
push
ret
push
cmp
ss
sti
jb
cs
loop
xchg
clc
and
aam
jnp
aaa
dec
and
cdq
cmp
push
sar
loope
mov
aas
inc
mov
and
ins
adc
xchg
jge
fisubr
bound
mov
(bad)
xor
jnp
mov
leave
pop
scas
xor
iret
mov
inc
in
js
imul
sub
out
test
push
pop
icebp
inc
push
stc
ja
test
lea
or
pop
hlt
sub
sbb
in
test
mov
mov
cmp
retf
mov
nop
cmp
sbb
add
outs
adc
xor
pop
iret
(bad)
retf
(bad)
arpl
mov
into
(bad)
and
mov
shl
arpl
jmp
popa
push
pop
xor
pop
sub
mov
add
pop
cmps
xor
test
(bad)
mov
adc
mov
or
aas
cld
jns
fisubr
xor
fs
shl
faddp
dec
test
imul
add
cmp
bound
pop
(bad)
xor
mov
outs
push
rcr
loope
out
xor
mov
stos
idiv
sahf
jne
sti
and
cmp
mov
xchg
aas
jb
jg
jno
and
push
cmp
push
xchg
je
jge
movs
cdq
sbb
ret
xor
push
cmps
(bad)
sbb
pop
mov
mov
clc
dec
test
ins
sub
mov
sub
push
jnp
xchg
es
mov
push
es
add
push
loope
iret
imul
cld
jnp
fsubr
mov
pop
add
mov
xor
or
test
out
xchg
xchg
retf
(bad)
lea
xchg
sub
aas
test
call
inc
adc
std
stos
bnd
xchg
adc
shl
cmp
outs
pop
ja
dec
test
jb
jnp
pushf
fiadd
sbb
sbb
push
mov
dec
mov
(bad)
jmp
out
adc
jp
jp
div
loope
call
aad
sub
add
loope
mov
jge
(bad)
xchg
dec
cmp
push
sbb
xor
popa
mov
jo
retf
xor
test
inc
xchg
mov
sbb
jl
pop
in
jp
call
mov
sub
(bad)
out
out
ins
fld
outs
hlt
out
aam
jnp
mov
(bad)
jmp
jle
jg
pop
arpl
or
mov
js
sub
jns
pop
xchg
and
mov
push
sub
adc
xchg
adc
xchg
enter
mov
pop
adc
dec
jns
cli
mov
jmp
wbinvd
mov
repnz
jno
or
addr16
and
test
sub
jb
inc
fsubp
mov
or
cmp
and
out
push
jno
pop
cmps
in
sbb
inc
xor
dec
les
test
jbe
dec
and
mov
fidivr
mov
mov
xchg
aam
add
sbb
cmp
push
sar
jp
xchg
ins
xchg
cld
call
jmp
(bad)
xchg
mov
lods
cli
shr
xchg
sti
mov
int3
cmp
sbb
mov
xchg
or
mov
dec
cs
push
mov
daa
sub
je
add
push
lea
mov
xchg
cmp
cwde
jno
push
test
js
sbb
jae
popf
xchg
add
sti
cmp
outs
dec
(bad)
jb
xchg
mov
jl
nop
popf
push
int3
adc
in
fldenv
hlt
fldenv
(bad)
cli
lds
inc
dec
lods
mov
dec
mov
fbstp
mov
push
mov
jne
cmps
addr16
jns
out
dec
pop
mov
mov
outs
or
dec
imul
xlat
shl
pop
iret
sahf
rcr
movs
mov
dec
xchg
cmp
ret
fs
push
and
jmp
dec
sbb
adc
adc
fsub
call
sub
cmps
push
adc
inc
fcomp
(bad)
cmp
imul
idiv
(bad)
cmp
scas
adc
jne
xchg
loope
and
arpl
outs
pop
jno
sahf
in
cmps
imul
or
mov
aas
ror
sub
push
test
int3
mov
jle
ds
(bad)
stc
test
cmps
in
adc
or
xchg
push
push
aaa
retf
aam
ins
(bad)
lahf
cwde
mov
movs
fisttp
(bad)
(bad)
fsub
mov
jl
test
fild
stos
sub
or
xchg
scas
dec
add
cmc
or
sub
mov
out
addr16
dec
sub
mov
leave
jl
imul
out
(bad)
xor
pop
xor
movs
push
pop
gs
jno
mov
ret
adc
cmp
stc
test
int3
xchg
add
sub
enter
inc
and
lock
in
sub
push
pushw
bound
jmp
popf
or
data16
rcl
rcr
dec
test
repnz
(bad)
cld
hlt
sub
mov
jge
mov
and
and
retf
adc
out
sbb
mov
mov
jne
dec
ds
nop
inc
dec
cmp
adc
lds
cmp
aad
aaa
mov
iret
adc
mov
jmp
ja
and
cld
inc
leave
jmp
mov
js
jb
pop
sbb
out
mov
hlt
fwait
call
push
push
inc
cdq
xchg
into
call
sub
aad
ins
dec
mov
push
sub
push
dec
outs
jnp
jecxz
jbe
rcl
dec
add
iret
aam
cld
aad
add
rcl
mov
mov
adc
or
mov
and
cwde
out
ins
pop
inc
add
and
in
pop
shl
dec
mov
xchg
ud1
leave
es
scas
cmps
shl
rcr
sbb
push
inc
or
push
add
fadd
(bad)
lds
add
jmp
sbb
mov
fisub
push
jae
mov
jmp
push
push
pop
jp
leave
pushf
add
mov
fstp
inc
sub
cmps
sahf
jo
lea
cmp
call
adc
sbb
push
add
addr16
and
add
or
inc
cmps
ror
in
jg
xchg
movs
mov
cwde
cmp
pop
sti
xchg
jg
out
dec
adc
sub
cmp
addr16
mov
ds
adc
mov
dec
push
cmp
dec
mov
push
and
and
dec
push
or
mov
pop
sub
repz
and
adc
outs
inc
or
cwde
pop
arpl
jae
lods
pcmpeqd
cmps
xor
jl
cwde
fwait
push
jmp
or
inc
sbb
adc
cwde
(bad)
stos
mov
pop
test
pop
or
nop
mov
pusha
popf
or
xor
sbb
loop
cdq
daa
stc
lock
lds
push
icebp
jmp
jecxz
cmc
outs
out
aad
dec
retf
sub
cdq
arpl
call
fiadd
or
ja
ds
ja
nop
je
hlt
pop
imul
push
test
pop
ss
(bad)
popf
pop
dec
add
rol
js
sub
cld
clc
cmp
adc
jl
xor
xchg
dec
mov
aad
mov
dec
mov
popa
jno
mov
mov
dec
lahf
enter
outs
in
imul
or
cmp
push
int
jle
jno
push
idiv
out
cmp
in
mov
xlat
adc
mov
add
mov
mov
rcr
push
cmc
rcl
sahf
gs
xchg
mov
xchg
cwde
movs
stc
or
push
shrd
mov
xchg
inc
iret
push
stos
adc
and
push
in
mov
jns
push
add
xchg
add
inc
dec
lods
jnp
inc
mov
mov
ja
lods
xor
ror
int
sbb
jnp
push
mov
mov
sbb
adc
mov
pop
out
mov
in
sub
or
adc
gs
inc
in
ja
(bad)
inc
mov
es
es
retf
jl
es
icebp
test
push
cld
retf
push
retf
mov
stc
addr16
fild
or
iret
mov
in
xchg
js
clc
and
push
test
push
push
cmp
(bad)
sbb
or
ins
jns
(bad)
pop
les
out
push
inc
pusha
cmp
in
or
mov
cld
sub
pusha
xor
add
mov
xchg
and
mov
mov
fsub
push
jl
inc
cmps
(bad)
lods
fdiv
div
dec
add
inc
cmp
test
js
outs
sbb
les
sub
xchg
sub
xchg
out
pushf
and
fwait
or
les
jg
(bad)
aaa
test
xor
iret
leave
loop
sbb
arpl
addr16
(bad)
add
pushf
enter
add
add
push
dec
push
gs
inc
mov
inc
xchg
lea
dec
imul
jmp
repz
add
dec
mov
push
adc
leave
xchg
(bad)
ret
pop
mov
loop
cmp
pop
add
xor
or
xor
out
mov
arpl
(bad)
loope
and
int3
or
sub
adc
sbb
mov
adc
ds
std
sub
ret
out
pop
and
sbb
push
fs
jne
das
sbb
adc
jo
xchg
pushf
iret
jo
sub
adc
mov
fld
adc
sti
sti
iret
pop
iret
jne
dec
push
stos
add
pop
arpl
or
inc
cmps
ss
test
xor
lahf
dec
out
xchg
cld
jl
nop
cli
pop
sbb
or
call
xor
push
add
mov
pop
sbb
pop
inc
sbb
rcl
ins
(bad)
jg
mov
fadd
mov
xor
test
adc
stos
and
dec
mov
out
out
sub
aam
fsub
ja
xor
cli
inc
inc
xlat
sub
mov
push
nop
xchg
test
shr
push
xchg
repnz
adc
js
loope
cmp
xor
or
jb
int3
and
inc
pop
repnz
pop
ret
lods
mov
lods
jmp
push
int
cmp
repz
(bad)
fdiv
cmp
fdiv
inc
jg
pop
cmps
and
xor
xor
xchg
cs
mov
aam
call
xor
(bad)
xchg
dec
lods
sbb
clc
or
and
int
add
xchg
int3
inc
mov
(bad)
movs
js
mov
mov
mov
jno
loope
ins
mov
xor
fistp
dec
data16
push
iret
mov
mov
jae
mov
(bad)
dec
fidivr
bound
test
sar
sub
dec
push
adc
dec
je
mov
xlat
lahf
test
adc
xchg
mov
jmp
and
call
arpl
movs
shl
jmp
inc
cmp
jnp
int
ret
mov
sub
pmaddwd
or
push
jbe
pop
or
aad
out
leave
cmp
jne
jmp
jne
loope
sub
lock
sar
and
dec
add
hlt
aam
packsswb
add
mov
or
lods
adc
popa
or
push
mov
popf
dec
dec
inc
mov
xchg
adc
add
ret
out
ror
inc
push
lahf
lods
and
loopne
add
pop
xchg
call
jno
rep
sbb
mov
hlt
push
sbb
jns
sbb
xor
aaa
std
imul
int3
loopne
push
das
sub
dec
inc
fst
mov
adc
jb
cwde
and
adc
stos
icebp
out
(bad)
xchg
xor
push
push
xchg
addr16
inc
sub
mov
loopne
rcr
clc
cmc
cmp
or
aaa
cli
sub
scas
push
stos
xchg
cwde
pop
cmps
mov
popf
push
fsub
lahf
inc
sub
jmp
dec
add
cli
dec
jbe
scas
sub
pop
daa
sbb
jns
xor
push
in
mov
jbe
hlt
pusha
add
fwait
xor
bound
lods
daa
adc
rcl
gs
es
dec
out
lods
or
jmp
adc
loop
and
push
in
test
cmp
jmp
lods
call
scas
jo
in
push
push
repnz
jp
loop
inc
fcomi
call
sbb
mov
data16
sbb
push
out
push
jmp
test
das
(bad)
fnsave
jbe
mov
or
icebp
pop
mov
jl
les
pop
jne
and
or
cmp
imul
fbstp
push
rcl
pop
ins
lods
or
outs
push
fidivr
xchg
xchg
push
test
leave
cmc
cli
test
sub
pop
js
bound
xchg
xor
movs
or
jle
inc
in
dec
jmp
scas
inc
clc
add
or
or
scas
sahf
inc
mov
mov
adc
push
add
cmps
or
jge
shl
out
scas
ss
add
mov
hlt
add
jno
sbb
mov
cmps
mov
and
outs
movs
jp
adc
sbb
aam
shl
push
sub
pop
cs
dec
jae
fild
dec
cld
pop
sub
jnp
adc
in
outs
sub
les
loop
in
das
cmp
xor
sbb
jbe
test
imul
dec
add
mov
push
and
aaa
mov
pushf
mov
jb
movs
out
adc
or
xor
mov
aad
mov
pop
lea
fwait
pop
inc
shl
int3
ins
ret
mov
repnz
in
in
mov
mov
inc
dec
xchg
mov
jge
push
mov
sbb
ins
pop
push
jo
cli
fcomp
rol
(bad)
neg
xchg
push
jo
cmp
in
mov
mov
cmp
repnz
inc
mov
and
or
pop
jb
mov
aas
fiadd
mov
inc
pop
mov
ds
out
jmp
in
test
ds
stos
mov
sbb
aas
push
sub
mov
mov
pusha
pop
mov
cmp
mov
in
call
mov
pushw
jle
dec
ss
lods
(bad)
xchg
push
cmp
xchg
rcl
ins
arpl
add
pop
leave
(bad)
arpl
dec
sbb
call
mov
push
lock
(bad)
cmps
xchg
and
leave
jmp
div
push
bound
stos
fwait
(bad)
pusha
ins
sub
or
mov
mov
mov
adc
cwde
or
add
movs
test
(bad)
cmp
dec
push
or
mov
daa
adc
push
jmp
dec
shl
xlat
add
(bad)
mov
sub
rcl
div
enter
push
cli
dec
ins
lock
icebp
data16
aad
inc
stc
xchg
lds
add
sub
enter
xchg
mov
or
gs
dec
shr
pusha
mov
mov
je
sub
xor
cmp
cwde
out
jp
push
aam
pop
jmp
test
dec
scas
lods
in
fnstenv
push
cmps
out
mov
test
dec
pop
rcr
ret
adc
fld
rol
sub
fimul
outs
inc
xchg
out
sub
push
rcl
scas
or
repz
sbb
leave
les
adc
movs
std
pop
jae
jp
lods
sub
int3
mov
jge
sar
sbb
(bad)
xchg
or
add
xlat
mov
mov
cmp
xor
aaa
popf
mov
adc
cmc
call
adc
push
xchg
adc
push
mov
push
(bad)
loopne
sub
add
add
push
lds
stos
cmp
dec
retf
ins
sbb
(bad)
call
(bad)
cdq
mov
mov
mov
bound
dec
inc
in
xchg
inc
popa
dec
adc
les
pop
adc
and
mov
cmps
fnstcw
into
jl
es
mov
jecxz
push
pop
dec
lock
xor
ins
xlat
rcl
pop
fistp
pop
neg
ss
imul
lahf
adc
ror
ret
ss
inc
leave
and
inc
dec
xchg
push
jmp
lock
mov
adc
pop
stos
cs
(bad)
out
add
sub
add
stos
call
cmp
(bad)
mov
or
adc
lahf
sahf
pop
(bad)
arpl
cmp
jb
cmp
in
in
popf
jmp
sbb
add
pusha
jns
stos
push
jmp
shl
jae
les
gs
div
add
cmp
mov
push
push
clc
mov
sbb
mov
xor
xor
pop
outs
(bad)
and
or
js
mov
add
jbe
je
mov
push
add
mov
push
out
unpckhps
cdq
pop
or
jbe
or
adc
sub
int3
cmp
xor
rcl
dec
lock
dec
xchg
cmp
test
test
push
mov
hlt
cmc
push
or
(bad)
(bad)
mov
mov
mov
push
sub
out
test
jbe
push
pop
dec
dec
mov
call
mov
dec
mov
cmps
pusha
sbb
xchg
scas
or
sti
pop
push
add
sub
inc
cmc
cdq
dec
dec
mov
xchg
mov
popa
mov
jge
stos
pop
sub
jle
xor
cmps
fbstp
test
sbb
call
ret
test
cld
sbb
das
jmp
mov
push
movs
nop
pop
div
sub
leave
mov
imul
into
jne
out
xchg
in
jns
sar
aaa
mov
sbb
adc
loop
pop
inc
push
push
les
retf
adc
ss
fs
imul
cmp
dec
inc
jne
pop
cmp
xchg
ja
ins
mov
pop
mov
jb
out
add
sub
fimul
or
fldenv
pop
cmp
aas
mov
test
mov
xor
dec
ret
add
pop
jecxz
pop
pop
push
push
push
popa
inc
cmps
dec
test
xchg
pop
(bad)
mov
mov
cmp
mov
add
push
pop
and
jb
and
ja
in
test
cdq
in
add
rcl
mov
mov
inc
xchg
test
jl
sti
pushf
mov
mov
sub
ret
xchg
push
or
cmp
imul
mov
ret
add
pop
mov
mov
addr16
sub
mov
shr
sub
nop
and
imul
adc
in
inc
in
xchg
xchg
push
and
ins
mov
jno
mov
call
xchg
dec
adc
scas
and
inc
clc
push
xor
inc
(bad)
pop
add
pop
mov
nop
push
sbb
cmp
stos
fadd
stos
movs
push
call
stc
pop
fsubr
sbb
sbb
out
sti
push
push
cmp
push
mul
mov
fsubr
pusha
mov
out
cmp
pop
push
and
dec
or
xlat
sub
inc
xor
ror
jns
mov
jb
sub
aad
out
pop
dec
out
dec
imul
cli
xchg
push
rcl
mov
dec
or
mov
inc
test
ins
or
call
mov
aad
movs
out
add
or
or
imul
fisttp
scas
sub
inc
int
inc
xor
push
or
mov
fcmove
add
scas
repz
cmp
dec
mov
movs
loopne
pusha
cmp
sub
(bad)
mov
mov
add
stos
adc
into
in
fsubr
cmp
or
inc
in
jns
loop
outs
sub
mov
jmp
scas
jmp
cmp
out
bound
call
inc
jo
rol
sub
(bad)
mov
mov
mov
mov
mov
neg
stc
test
sti
in
xchg
movs
adc
and
pop
adc
xor
loope
(bad)
icebp
in
xchg
out
cmc
scas
rcl
in
jle
push
xor
addr16
dec
xor
mov
sub
jge
les
into
stos
sub
xchg
(bad)
cwde
mov
xchg
inc
inc
ror
push
sub
sub
inc
out
jne
mul
jne
imul
lock
fistp
and
pop
jle
adc
iret
ror
sub
push
jmp
stc
ficomp
mov
inc
cmps
stos
jb
or
fmulp
jle
mov
cmp
or
daa
addr16
inc
jae
inc
arpl
or
cli
jns
clc
or
fs
inc
push
push
mov
sub
call
aaa
jmp
out
loop
dec
outs
or
xor
push
and
jae
adc
pop
call
mov
xchg
outs
cdq
push
sbb
into
jmp
and
cmc
xchg
add
dec
nop
jne
push
aaa
lea
mul
or
jno
aaa
xor
les
fidivr
push
arpl
push
cli
add
sbb
mov
hlt
mov
cmpxchg
test
or
dec
sbb
leave
leave
je
cmp
lea
mov
fisubr
cmps
in
int3
cmp
out
mov
lods
jb
cmps
lahf
inc
xadd
or
mov
in
mov
mov
push
scas
movs
stos
pop
call
xchg
jle
divps
mov
xchg
bound
(bad)
stos
sahf
inc
xchg
hlt
das
xor
sub
mov
test
add
pop
ficomp
mov
pushf
icebp
inc
ins
daa
mov
push
repnz
iret
cdq
ret
movs
stos
pop
push
dec
pop
ror
call
cmp
jbe
push
jecxz
repnz
push
push
push
fld
jae
or
data16
test
add
out
mov
push
out
dec
inc
retf
dec
ret
jno
dec
jae
inc
mov
fistp
retf
ret
aas
cmp
test
pushf
popa
jbe
mov
dec
inc
outs
jb
inc
adc
int
jl
fcom
je
mov
iret
pop
jbe
jae
pop
shl
fisubr
and
mov
add
sub
hlt
cmp
fstp
inc
mov
imul
ds
mov
js
sbb
jecxz
int
lds
inc
pop
dec
push
enter
pop
aam
and
mov
fistp
or
dec
fsubp
cmps
loopne
xor
(bad)
mov
ret
int
xchg
(bad)
js
pop
jns
cmps
out
push
inc
cmps
nop
popf
push
fcomip
inc
pop
shr
shr
xchg
inc
fild
cmps
add
fadd
mov
fist
add
sub
enter
pop
(bad)
xor
shr
hlt
jle
lods
pop
push
lds
xchg
cmps
fiadd
push
js
inc
sbb
xor
test
idiv
les
daa
or
lock
outs
push
sbb
in
xor
jecxz
or
fstp
cmp
sbb
cld
cmps
or
push
sbb
jge
lods
sbb
xchg
repz
add
test
std
iret
outs
mov
jecxz
out
jge
(bad)
out
std
adc
xor
ins
repnz
pandn
jmp
mov
fmul
fadd
push
xor
sahf
cmps
fiadd
dec
cmp
mov
jo
and
pop
jbe
lods
xchg
imul
mov
or
ret
scas
ja
dec
push
js
fimul
or
add
xchg
dec
jge
jp
and
fs
fstp
push
fcom
adc
ins
retf
cmps
adc
shl
cld
mov
mov
fs
std
xor
sbb
jg
and
cmps
repnz
sub
and
cli
push
pop
or
jne
shl
aaa
das
xlat
sub
ins
jge
mov
xor
adc
rol
push
add
aam
mov
cmp
call
xchg
jb
fucomp
imul
(bad)
push
movs
push
idiv
lock
push
ja
cmps
push
aaa
xor
dec
adc
xor
cmp
mov
adc
out
lds
sar
cmp
arpl
or
inc
jg
cmp
ins
lds
mov
fwait
cmps
and
clc
jmp
push
iret
mov
xor
pop
sub
arpl
mov
pop
jmp
into
sub
adc
push
int3
in
mov
retf
std
pop
in
arpl
mov
adc
fxch
cmp
icebp
icebp
test
data16
jne
mov
dec
jg
jge
mov
lods
jl
aam
ins
aaa
adc
sbb
retf
inc
mov
fild
xor
ret
push
xchg
dec
jnp
cmc
pop
or
jle
mov
jne
push
adc
mov
push
dec
mov
xor
mov
mov
mov
mov
or
aaa
pushf
lds
retf
pop
bound
mov
or
call
fcmovnbe
pop
mov
rcr
cmp
nop
adc
adc
or
fs
dec
movs
sbb
xchg
jne
or
jns
je
movs
adc
imul
mov
or
xchg
jbe
mov
mov
mov
fdivr
jp
adc
add
jle
out
cmp
jmp
lds
loope
push
mov
pop
and
mov
daa
mov
push
inc
cmp
fist
push
shl
out
pop
mov
adc
and
out
(bad)
lock
inc
outs
iret
jbe
js
sar
cmp
sbb
sahf
mov
loope
imul
push
cmp
pop
push
push
dec
test
push
inc
int
icebp
test
pop
(bad)
repz
adc
jo
out
sti
std
fs
pushf
mov
nop
and
popf
inc
pop
dec
adc
aaa
push
fild
push
adc
iret
sar
push
imul
cmps
fimul
sub
cwde
daa
pusha
jno
push
sbb
pop
inc
cdq
adc
and
jmp
or
fisub
lods
mov
ins
pop
add
xor
pop
jo
cdq
loopne
and
sub
inc
mov
dec
sub
jo
push
sti
sbb
ret
sub
(bad)
mov
(bad)
sbb
jge
sbb
ds
lods
jp
(bad)
jmp
add
jle
mov
je
faddp
call
gs
fisttp
das
fmul
jne
hlt
lods
push
adc
xchg
jg
jge
xchg
ret
dec
xchg
shr
xlat
imul
jns
dec
sbb
aas
jge
gs
inc
enter
inc
push
push
mov
jno
repnz
test
hlt
outs
cwde
sti
push
sbb
pop
pushf
mov
lods
in
cmp
inc
int3
mov
sub
mov
mov
pop
(bad)
popa
cli
add
neg
test
or
jns
add
(bad)
mov
pop
mov
pop
push
repz
(bad)
mov
mov
sub
inc
jecxz
shl
xor
repnz
adc
arpl
jecxz
out
mov
retf
inc
xor
jbe
push
jno
(bad)
pop
cmp
sbb
std
rcl
sahf
inc
iret
sahf
jno
lds
mov
push
mov
push
loope
inc
dec
add
(bad)
in
out
icebp
enter
les
(bad)
cmps
adc
aaa
dec
push
add
xor
cmps
call
popa
ror
popf
push
cs
xor
jle
xor
in
add
adc
jo
cmp
push
or
arpl
pop
(bad)
fistp
add
sub
inc
test
sbb
xor
das
xlat
jge
cmp
stos
jle
add
push
jns
adc
pop
mov
ins
and
adc
ror
cdq
jmp
outs
push
mov
cmc
or
mov
and
cmps
or
arpl
mov
jns
mov
xor
mov
push
pop
ret
dec
leave
sti
out
xor
and
mov
sbb
mov
adc
jnp
sbb
lock
push
adc
movs
jmp
mov
mov
jnp
add
push
xlat
or
or
inc
mov
fwait
test
ret
or
sbb
lods
jo
or
rcl
xor
sub
sub
int3
test
(bad)
push
jno
mov
mov
ins
imul
add
or
push
sbb
js
mov
dec
or
sub
or
sar
inc
add
cmp
sub
pop
and
cmp
or
pop
lea
stos
mov
sub
fisubr
cwde
fld
(bad)
jnp
not
ret
inc
iret
mov
aaa
dec
repnz
ins
mov
xor
push
retf
push
ins
pushf
scas
xchg
pusha
jo
jns
cdq
cmp
dec
push
push
push
inc
aaa
data16
pop
inc
enter
pop
xchg
js
mov
or
and
push
inc
outs
xlat
dec
popa
cmc
bnd
data16
or
push
inc
jne
sbb
mov
sub
cmp
mov
mov
mov
dec
and
cmp
pop
jmp
pop
push
pusha
sbb
pop
fidiv
aam
inc
add
je
int
cmp
mov
jle
add
jmp
xchg
xor
loope
xchg
popa
cmp
stc
enter
sub
mov
add
sbb
inc
stc
sti
pop
loope
xchg
or
out
shl
fcmove
or
jns
rcl
add
arpl
add
lahf
adc
add
jg
mov
inc
ja
(bad)
shr
sub
and
iret
test
inc
jle
fsub
push
cmps
ss
xor
test
mov
jns
xchg
stc
push
imul
ins
clc
jecxz
lock
loop
adc
fldcw
xchg
sbb
fnstcw
add
mov
push
test
loop
cs
or
or
mov
sbb
shl
push
retf
dec
fmulp
jmp
jmp
stos
cmp
jnp
xor
stc
jge
jne
jmp
ret
jge
add
xchg
xlat
xchg
adc
mov
fadd
mov
jecxz
add
ss
pop
pop
arpl
fs
add
dec
jp
mov
cdq
sub
pop
movs
sbb
stos
jno
xor
mov
add
(bad)
loopne
ins
lea
lods
test
ficomp
jno
(bad)
test
jmp
std
mov
ins
dec
adc
push
dec
cmp
lds
and
inc
hlt
arpl
or
cmp
jae
mov
inc
fbld
jo
movs
push
imul
fwait
jae
repz
xchg
test
jecxz
inc
cmp
mov
mov
repz
xor
mov
bound
in
dec
ror
dec
shl
es
cmp
das
jbe
and
and
jbe
add
push
int3
test
adc
jle
inc
repz
jmp
adc
adc
jbe
jo
pop
mov
push
push
pop
add
fcomp
push
sbb
(bad)
push
pop
add
test
ja
inc
pop
(bad)
repnz
xchg
or
aaa
dec
pop
rcr
jge
jo
stos
rcr
fwait
xor
fcomp
mov
mov
pop
add
jno
mov
lock
daa
push
aam
out
rdpmc
pushf
adc
jns
or
push
nop
das
xchg
call
movs
adc
jae
mov
(bad)
xor
les
xlat
nop
push
fstp
lds
xor
adc
popf
les
mov
xchg
ror
(bad)
loopne
fstp
cmp
sub
mov
or
and
push
sbb
or
add
dec
jmp
push
cwde
pop
mov
jmp
not
cwde
dec
scas
and
test
rol
mov
outs
jae
popa
mov
out
scas
inc
fbstp
sar
pop
fs
retf
mov
arpl
fsub
neg
aaa
in
inc
xor
pushf
js
clc
cdq
jnp
push
sub
int3
test
shl
jb
out
(bad)
dec
aaa
sti
loope
pop
clc
sbb
add
or
mov
dec
mov
cmc
out
or
lds
pop
gs
xor
popf
in
mov
push
iret
out
mov
sub
fst
stos
in
mov
jl
aas
pop
scas
popa
or
jns
mov
push
(bad)
inc
jo
iret
popa
dec
mov
jno
ror
repnz
clc
adc
sar
fcomp
test
cmp
or
push
xor
mov
loopne
jbe
cmp
cmp
mov
or
sbb
push
jecxz
in
xchg
sbb
pop
dec
shr
ret
cmp
and
in
sub
aas
pop
sbb
and
mov
xor
stc
fdivr
fwait
mov
push
scas
inc
(bad)
leave
inc
mov
or
push
addr16
inc
cmp
or
mov
(bad)
mov
xchg
push
and
push
aad
pop
mov
and
xchg
in
lahf
fwait
mov
test
adc
fsubr
call
dec
sbb
lea
mov
inc
std
aad
jmp
push
movs
cmp
dec
jo
cmps
and
mov
inc
mov
imul
popa
pop
push
push
jne
enter
(bad)
mov
mov
(bad)
mov
sbb
pop
pusha
pop
push
sti
sbb
push
jb
push
push
or
aaa
push
xchg
(bad)
xchg
repnz
xor
scas
add
xor
push
loope
and
mov
mov
jae
sbb
cmp
sbb
or
mov
cmp
xchg
jb
jmp
push
int
push
ret
jns
fistp
or
repnz
jge
push
xor
xchg
je
dec
or
(bad)
mov
xchg
arpl
pushf
data16
jmp
int
cmp
sbb
loopne
mov
mov
(bad)
imul
shl
cmp
xor
xchg
ins
and
les
mov
icebp
(bad)
mov
mov
push
lock
daa
retf
repnz
dec
clc
and
jmp
xchg
repnz
xchg
cmp
push
pop
lods
mov
mov
out
sbb
test
stos
scas
push
imul
inc
mov
ss
gs
adc
js
cwde
sar
xchg
sub
xor
jne
pop
dec
(bad)
adc
adc
xchg
mov
mov
sub
call
int3
lock
or
sub
lea
cwde
loop
icebp
mov
xor
and
or
lahf
pusha
cwde
sub
(bad)
jmp
push
in
and
fld
je
mov
clc
and
pop
jnp
xor
test
cld
sub
adc
and
dec
sub
mov
mov
push
inc
or
push
adc
cmp
and
jmp
push
call
retf
xchg
adc
stc
add
jae
sbb
xchg
lahf
(bad)
out
jne
cmp
push
add
les
adc
xchg
and
imul
jmp
sub
mov
popa
out
loop
push
(bad)
in
mov
mov
adc
cmp
and
out
movs
stos
out
push
dec
dec
daa
xchg
sbb
fnstenv
pop
and
sbb
cmp
add
xchg
vpcomd
mov
adc
dec
std
sbb
push
sahf
xchg
adc
jne
mov
adc
and
test
sub
dec
xor
add
xchg
stos
lahf
imul
(bad)
mov
in
sub
xor
js
jbe
mov
dec
outs
(bad)
adc
pushf
stos
xor
push
or
mov
loope
xor
call
hlt
call
rcl
in
inc
sbb
pusha
aam
stos
or
add
mov
jno
push
into
add
fs
inc
jmp
lds
sub
fdivr
(bad)
(bad)
jns
in
jns
cmp
loope
mov
(bad)
and
and
mov
outs
push
sub
jge
push
int
cmps
rcl
in
loope
mov
ins
in
adc
xor
sbb
jne
stos
int
retf
mov
pushf
bound
inc
add
adc
pop
adc
xor
dec
sar
stos
ds
cld
das
mov
sub
push
sbb
(bad)
fst
mov
rcr
jg
(bad)
sub
lods
mul
movs
jnp
and
jle
rep
test
push
add
loope
popa
fstp
jne
push
push
out
mul
addr16
xchg
fmul
out
jge
jge
loope
test
(bad)
aam
dec
jno
pop
popa
add
(bad)
ja
movd
popf
dec
clc
inc
cmp
sub
stc
inc
fsub
sahf
pusha
std
ss
mov
mov
inc
in
mov
scas
retf
movs
cmc
aaa
je
adc
add
cmps
sti
or
xlat
cld
pop
in
dec
aad
retf
and
mov
ins
and
push
adc
mov
popf
adc
repnz
adc
int3
cmp
popa
xor
mov
je
sbb
fimul
mov
or
jg
int
sahf
cld
call
xor
pop
xor
xor
fist
jns
fwait
pop
inc
fld
(bad)
cwde
lods
push
jno
xor
int3
dec
mov
mov
imul
ds
fmul
and
ss
add
aad
dec
xchg
jns
push
mov
add
jge
xor
stos
push
push
pop
jmp
xchg
adc
mov
xor
or
and
imul
xor
ja
jae
cli
add
xchg
xor
ret
push
pop
sub
jp
pop
fisttp
mov
popa
wrmsr
(bad)
scas
std
mov
mov
xor
aam
xor
ss
call
push
push
jno
cmp
aas
ins
push
sbb
cmp
repnz
jnp
out
xchg
retf
and
jbe
xor
imul
dec
ds
sub
sbb
dec
pop
sahf
mov
sub
xchg
movs
cmps
outs
fwait
movs
mov
mov
std
je
fidivr
inc
stc
loope
or
pushf
test
sbb
dec
adc
arpl
push
jg
pop
int
xchg
scas
inc
add
ins
mov
clc
psllq
ror
push
in
push
sub
jmp
in
jbe
and
cmp
retf
mov
nop
(bad)
push
jo
js
pushf
cmp
mov
test
retf
sbb
call
das
fldz
cmp
or
outs
repnz
lods
dec
outs
iret
mov
pop
inc
ret
daa
inc
ins
fsub
add
mov
imul
mov
movs
add
xor
pushf
addr16
pushf
out
xor
fild
jno
stos
pusha
xor
cmc
gs
inc
dec
mov
cmp
add
(bad)
scas
fucom
xor
and
xchg
pusha
lods
(bad)
sub
sub
stos
lds
ss
lock
fwait
mov
inc
fcom
(bad)
jmp
std
dec
push
pop
add
out
pusha
(bad)
adc
daa
jnp
mov
jne
movs
jno
aad
pop
sti
xchg
push
mov
out
data16
ds
ret
xchg
in
push
xchg
fwait
xor
movs
add
xor
(bad)
popf
xchg
arpl
add
mov
loope
(bad)
cdq
or
ja
mov
int3
mov
and
nop
push
mov
cmp
(bad)
jg
fisttp
daa
fiadd
inc
add
ret
retf
out
aas
mov
sub
les
xor
cmp
or
out
rol
xlat
in
pop
popf
and
cdq
and
(bad)
jmp
(bad)
scas
xchg
push
pop
inc
push
call
jp
hlt
jmp
pusha
stos
inc
xchg
sbb
mov
xor
and
add
xchg
mov
jno
cwde
cmp
mov
and
mov
call
sub
xchg
imul
repz
lds
mov
out
clc
mov
lods
data16
jb
sub
iret
adc
(bad)
push
mov
push
icebp
dec
sar
inc
ret
inc
out
or
sub
jle
pop
pop
popf
pop
clc
enter
jp
adc
mov
ret
sbb
xchg
mov
ja
xchg
pop
dec
fcmovne
inc
mov
inc
adc
add
xchg
cmp
out
and
xor
mov
xchg
or
mov
je
add
xchg
jbe
mov
push
add
mov
push
cmp
fcom
bound
aaa
cmp
pop
push
jl
cdq
pop
mov
mov
inc
mov
mov
cmp
and
push
outs
loopne
je
lds
shl
(bad)
pop
dec
imul
cwde
push
sbb
(bad)
es
jecxz
adc
jecxz
mov
add
call
cmp
lahf
mov
ins
mov
test
retf
inc
sub
inc
mov
dec
rcr
jb
jae
jns
shl
adc
or
dec
inc
jno
jmp
or
repz
out
dec
ret
adc
mov
ins
sub
stos
fwait
jbe
call
ss
adc
jl
cli
mov
push
xchg
mov
dec
mov
xchg
loop
push
jnp
fild
mov
sub
out
outs
sub
(bad)
loop
cli
imul
fidivr
xchg
lea
jnp
ds
xor
cmp
cmps
dec
add
xor
xchg
mov
lds
jmp
psllq
ss
in
movs
jne
dec
push
enter
inc
dec
hlt
push
loope
jnp
fmul
out
(bad)
mov
std
adc
fwait
xchg
(bad)
pop
js
mov
mov
aam
inc
push
push
sub
inc
pop
test
aam
inc
jecxz
xor
mov
jbe
mov
lods
dec
cmp
mov
(bad)
scas
inc
icebp
out
sub
in
daa
push
imul
sbb
xchg
inc
dec
jp
clc
sbb
inc
jb
mov
jecxz
inc
test
or
int3
dec
xchg
adc
push
cli
sar
mov
scas
cmp
cmp
ss
inc
ret
sub
sbb
call
jl
sub
or
aas
jae
test
jp
push
inc
add
in
mov
mov
pusha
pop
rcl
int
push
leave
xchg
movs
mov
mov
movs
div
js
dec
push
outs
inc
cdq
lods
movs
test
add
jp
push
rcr
jne
jecxz
in
inc
push
jae
aas
aaa
ret
inc
call
dec
enter
daa
movs
inc
cs
imul
or
(bad)
lods
push
cmp
not
jnp
mov
dec
cmp
jae
ror
mov
pmaddwd
cmp
inc
ss
or
adc
jns
pop
xchg
in
rcr
mov
inc
out
cmp
dec
(bad)
ret
test
cmc
ins
sbb
xor
test
jmp
cmp
jb
push
mov
xchg
jle
adc
cmp
jle
inc
dec
push
jo
or
mov
pushf
lods
mov
jb
sub
xchg
inc
ja
push
(bad)
adc
shl
popa
xor
mov
sbb
mov
or
sub
jo
call
jmp
jmp
movs
mov
mov
fs
mov
fnstcw
call
stos
outs
fucomip
jno
fs
repnz
inc
les
xor
repz
sub
sub
retf
mov
gs
lods
jae
mov
xor
jg
lahf
(bad)
psrlq
sbb
jo
adc
jns
lea
xchg
enter
add
movs
cmp
xchg
pop
or
add
repnz
push
inc
pop
pop
out
cld
xchg
lods
mov
iret
loop
lahf
sub
arpl
dec
mov
dec
adc
aaa
sar
dec
pusha
add
repnz
(bad)
loop
push
aad
add
shl
jg
(bad)
jnp
ja
retw
jle
mov
push
sahf
leave
ja
sub
out
sub
scas
mov
aaa
dec
iret
inc
xchg
cmp
adc
pop
pop
add
cmp
and
pop
mov
sti
xchg
xchg
xchg
mov
call
adc
pop
jp
in
mov
dec
mov
ins
or
mov
ja
sub
mov
or
imul
mul
cmp
scas
dec
out
push
cmp
inc
mov
bnd
and
aas
add
or
push
jb
jg
push
or
fld
pop
shl
enter
jle
imul
ja
(bad)
or
pop
adc
outs
fwait
mov
push
lahf
adc
inc
sub
imul
cmps
dec
out
popf
out
xchg
mov
cmp
xor
push
rcl
daa
in
pop
sub
and
inc
sub
loopne
gs
imul
mov
test
sbb
cmps
clc
mov
cwde
fnstenv
movs
jle
ficom
lock
or
and
or
shl
cmc
sti
jmp
(bad)
push
fcmovnbe
stos
ins
inc
xchg
xor
dec
aaa
stos
imul
xchg
fidiv
adc
inc
inc
mov
in
pop
adc
and
out
aam
loopne
les
iret
dec
enter
push
dec
lock
and
push
xchg
inc
inc
and
or
add
out
inc
es
aam
pop
ds
jnp
out
pop
aam
push
xchg
hlt
retf
dec
ins
mov
pop
sub
ds
loop
data16
and
popf
xlat
ss
rol
(bad)
push
xchg
xchg
mov
gs
loopne
scas
jae
and
or
repz
sub
nop
adc
fadd
sbb
mov
retf
ret
test
mov
fadd
cmp
adc
inc
fidiv
je
shl
add
add
push
adc
xor
pop
popf
scas
sub
add
mov
enter
stc
dec
rcr
mov
inc
sahf
dec
repz
setle
xor
popa
(bad)
daa
mov
call
push
jb
les
push
jl
shl
(bad)
ds
pop
or
je
dec
ins
add
fstp
mov
dec
xchg
sti
aad
pop
test
das
mov
cmp
add
scas
inc
or
dec
cmp
xor
inc
mov
add
(bad)
stc
movs
js
aaa
pop
adc
push
mov
leave
dec
xlat
push
jge
jo
pop
push
cdq
arpl
das
icebp
adc
or
movs
mov
stos
movs
jae
and
rcr
pop
pop
jmp
or
aam
cmps
sub
inc
sub
sub
out
mov
gs
jne
(bad)
loop
pop
in
test
les
ins
push
push
adc
mov
xchg
sub
gs
mov
jecxz
mov
rcl
sbb
dec
and
xchg
mov
call
(bad)
ds
jae
es
adc
ret
mov
jno
cmp
in
call
inc
or
dec
sbb
cmps
out
mov
pop
ins
in
icebp
loope
cdq
pop
xchg
ror
imul
push
push
push
imul
jae
(bad)
mov
icebp
aas
jae
jecxz
or
mov
mov
mov
pop
jge
in
inc
pop
jb
nop
and
data16
popa
cmp
add
xchg
das
jno
add
cld
cmp
adc
push
fcom
neg
mov
cmc
(bad)
lock
sub
retf
popf
div
aas
jg
inc
cmc
daa
jmp
pop
push
push
mov
movs
add
push
fld
data16
jno
(bad)
push
jno
adc
nop
push
gs
in
pop
cmp
test
sub
sub
pop
xchg
out
clc
pextrw
add
or
cmp
mov
imul
js
fiadd
sbb
mov
mov
mov
retf
aam
ss
cmp
mov
and
jp
inc
and
out
div
stos
add
cmp
xchg
push
cmp
adc
xor
scas
mov
rcr
pop
push
arpl
cli
(bad)
fdiv
divps
and
pop
retf
adc
jle
cmc
cwde
(bad)
mov
in
sbb
leave
popa
adc
inc
dec
ret
and
or
sub
inc
popf
mov
and
sbb
je
rcl
je
add
and
aas
mov
ret
ficomp
jg
xchg
mov
mov
lods
pop
bnd
in
sub
stos
adc
test
test
mov
(bad)
and
iret
adc
imul
and
movs
xlat
push
out
jns
xchg
pop
mov
xchg
stos
xor
xor
or
push
push
adc
in
mov
arpl
xchg
aaa
cmps
mov
jns
sar
mov
sti
scas
lea
push
ror
mov
in
push
outs
idiv
aad
(bad)
mov
movs
add
std
cld
clc
lds
lea
inc
ja
scas
or
pop
dec
mov
gs
jmp
or
push
mov
push
push
cmp
sbb
inc
aad
jo
das
mov
bound
bound
mov
and
outs
cmps
xor
sub
adc
jg
xor
mov
cmp
pop
in
outs
or
mov
loop
jb
xor
aaa
pop
neg
xchg
xchg
outs
test
lea
cwde
pop
mov
(bad)
cmp
push
push
xor
imul
std
cmp
xchg
inc
xor
mov
rcr
dec
jno
sar
call
pop
cli
inc
jae
cmp
test
sub
push
adc
push
xor
mov
out
lea
jae
adc
or
scas
arpl
jbe
or
fisttp
bound
sbb
push
add
mov
addr16
push
inc
das
adc
scas
dec
ror
xor
or
dec
cmc
and
out
mov
jl
imul
fwait
xchg
jp
pop
std
adc
pop
dec
call
and
mov
jo
lods
rep
mov
lea
mov
jns
js
cdq
dec
je
xchg
mov
arpl
loopne
sbb
and
cmp
lahf
and
mov
sbb
iret
sub
jl
cmp
lds
push
movs
ja
add
lods
jbe
hlt
push
push
data16
mov
sub
or
xor
xor
and
movs
mov
mov
pusha
jmp
sub
arpl
into
out
xor
dec
aaa
xchg
(bad)
cmps
repz
fs
imul
or
out
mov
pop
jmp
popf
retf
push
rol
ins
aad
push
mov
out
or
iret
(bad)
fldcw
jge
(bad)
jmp
fld
jmp
inc
inc
xor
aas
(bad)
mov
and
cmps
add
stc
js
mov
jb
mov
pusha
dec
and
outs
jae
push
xchg
mov
and
arpl
and
inc
hlt
mov
sti
mov
mov
ins
pop
add
fstp
fisubr
fs
stos
test
sahf
nop
push
pop
in
fcom
adc
sub
jg
dec
add
pop
in
ins
mov
xchg
pop
ret
jmp
cli
jns
test
sbb
adc
jae
loopne
shl
(bad)
out
mov
push
add
inc
pop
dec
sahf
iret
push
and
cmp
ret
cmc
sbb
mov
sbb
jmp
mov
int3
pushf
ds
adc
push
aaa
push
jnp
ret
nop
jge
(bad)
scas
mov
dec
sar
rcr
mov
into
ds
jb
adc
xor
(bad)
cmc
int
popa
pop
push
int3
add
and
push
test
test
xchg
data16
loop
(bad)
out
dec
push
popa
mov
mov
nop
mov
adc
jb
popa
test
xchg
xor
jbe
jp
test
std
aad
cmps
cmp
fisubr
cli
cmp
cmp
inc
shl
push
mov
(bad)
xor
inc
(bad)
out
push
mov
dec
pop
dec
out
inc
push
icebp
icebp
loope
pop
lock
mov
ja
in
cld
inc
xor
call
fs
outs
mov
ror
push
mov
je
mov
mov
popf
mov
adc
jae
aam
or
sbb
push
nop
mov
mov
dec
mov
(bad)
add
sbb
jbe
movs
mov
lea
mov
and
xchg
sar
push
mov
push
in
sbb
push
xor
cmp
das
jae
in
jmp
movs
retf
bound
in
pushf
jne
retf
pop
test
das
ja
pop
xor
mov
pusha
inc
xor
lods
add
jp
hlt
lock
stos
and
ss
xor
aaa
aam
mov
fwait
jb
or
xchg
ret
(bad)
mov
mov
or
push
mov
adc
cmp
adc
test
add
push
cmp
or
shl
push
not
adc
fmul
mov
aaa
jo
xchg
mov
repnz
test
arpl
fld
cs
adc
xchg
into
test
icebp
stos
mov
jbe
aas
xchg
push
sbb
jge
add
adc
(bad)
or
cld
cwde
outs
imul
jecxz
dec
dec
ret
jns
mov
and
jmp
icebp
popa
clc
pusha
pushw
clc
(bad)
sub
pop
nop
imul
(bad)
mov
out
adc
mov
xor
ins
jno
jecxz
jg
ins
es
mov
daa
pop
shr
pop
adc
hlt
cmps
add
add
add
mov
push
in
mov
pop
out
cwde
add
mov
mov
repnz
aas
mov
retf
cs
xor
mov
mov
loope
jmp
adc
cmc
xchg
or
(bad)
xor
and
or
xchg
adc
push
push
icebp
mov
hlt
test
fbstp
ins
(bad)
xchg
fndisi(8087
jmp
fsub
fcom
rol
jecxz
enter
jnp
cmps
shl
jns
imul
(bad)
fwait
jecxz
jmp
mov
out
sub
cdq
ret
cmps
jle
(bad)
jmp
clc
cs
ror
repnz
or
sub
fcmovnb
mov
(bad)
adc
das
lds
sbb
adc
push
jle
xchg
fstp
(bad)
push
jg
mov
pop
jmp
xchg
xchg
push
int
inc
xlat
xor
outs
or
or
jge
in
mov
pop
pop
jo
pop
xchg
mov
jnp
div
cmps
sbb
(bad)
rcr
mov
mov
js
xor
mov
mov
mov
sub
xor
cli
xchg
test
dec
add
jle
mov
std
jo
(bad)
into
loop
hlt
retf
inc
cmp
jae
lahf
sub
shl
pop
outs
or
jb
ins
mov
and
lock
repnz
jmp
out
rcr
dec
or
xchg
inc
lea
jecxz
xchg
in
outs
scas
or
jg
movs
mov
add
ins
cs
push
fld
mov
out
test
out
xchg
cmc
mov
fiadd
hlt
pusha
test
je
xchg
jmp
xchg
cmp
push
sbb
push
cmps
push
lock
rcr
fcomp
push
mov
dec
retf
stc
mov
scas
fbstp
and
jne
imul
jge
(bad)
retf
and
lds
push
adc
retf
push
mov
mov
fst
xor
cwde
out
ret
fcomp
(bad)
pushf
xchg
xor
fld
bound
sbb
mov
cld
aas
inc
jae
push
psrld
fstp
sahf
ror
cmp
fiadd
cs
fwait
in
xor
(bad)
(bad)
mov
lock
mov
(bad)
ror
sub
rcr
or
movs
xchg
lods
mov
(bad)
inc
lea
xor
push
pusha
cmp
daa
fldenv
push
aaa
call
scas
ins
inc
cmp
xor
shl
inc
or
cmp
lock
stos
sbb
cmps
push
mov
loope
mov
xor
adc
jmp
pop
ins
push
jle
jle
aaa
repnz
mov
das
loope
les
(bad)
(bad)
jae
cwde
sar
repnz
(bad)
sbb
stos
lock
outs
pop
fisub
cwde
test
push
(bad)
sbb
retf
and
aad
outs
ins
mov
mov
xor
inc
xchg
iret
adc
pop
cmp
inc
dec
(bad)
and
inc
mov
data16
mov
mov
fwait
cmp
mov
pop
(bad)
popf
rcl
lods
cmps
pop
inc
aaa
and
fstp
sub
sub
loope
pushf
mov
pushaw
and
mov
in
adc
(bad)
mov
stos
test
imul
dec
movs
hlt
push
dec
pop
sahf
add
ins
inc
adc
in
sub
dec
pop
js
ins
das
push
call
pop
push
aaa
mov
jle
ss
jb
mov
addr16
and
mov
jb
je
jo
xchg
jl
out
pop
jmp
sub
aam
mov
das
mov
inc
pop
dec
xchg
xor
add
icebp
cmp
test
cmps
ins
xchg
mov
mov
ins
xchg
cs
sub
inc
std
xlat
inc
fwait
div
cmp
sub
(bad)
cmp
jno
js
je
push
pusha
loopne
pop
sti
push
iret
rcl
dec
outs
das
mov
repz
dec
pushf
loopne
jmp
(bad)
jb
mov
gs
iret
js
fild
dec
mov
dec
sbb
and
xor
sub
aam
repnz
ds
cs
jl
dec
pop
and
mov
mov
push
jmp
dec
imul
dec
mov
lahf
retf
fidivr
xlat
and
popf
pushf
push
mov
sbb
adc
stos
pop
xchg
sbb
dec
ror
mov
je
dec
xchg
in
icebp
mov
adc
test
aad
pop
jno
call
inc
test
adc
sbb
retf
mov
xchg
inc
or
mov
bound
fcmovne
popf
mov
mov
out
pop
ss
in
out
inc
jnp
jge
(bad)
mov
sbb
pop
cmp
sub
imul
shl
loope
pusha
push
pop
push
push
sub
push
sbb
fistp
bound
inc
int3
aaa
in
lock
mov
xchg
icebp
add
loopne
xor
xbegin
loop
cmp
test
sahf
ret
or
js
not
lods
aam
outs
stos
pop
mov
vpavgw
es
xor
popf
ror
or
jbe
daa
int3
stos
data16
or
pushf
(bad)
(bad)
push
mov
cmp
enter
mov
dec
rcl
(bad)
or
stc
retf
push
sbb
stc
add
pop
enter
push
out
sbb
inc
loop
mov
in
add
mov
sub
xor
repnz
cmp
ror
pop
int
add
add
jne
cli
cli
bound
xor
cmp
pop
inc
cmp
aaa
xchg
push
push
fnstsw
add
idiv
cmc
test
enter
enter
std
add
test
int
fadd
sub
cwde
and
push
(bad)
cli
mov
inc
fld
fdivr
pop
scas
fwait
xchg
pop
shl
call
imul
xor
cmp
dec
js
lods
pop
cmp
ja
xchg
xchg
popf
popa
adc
dec
mov
(bad)
or
pop
test
(bad)
cmps
pop
jbe
and
pop
add
push
into
xchg
pop
ss
aaa
mov
jae
adc
repz
push
cwde
adc
cdq
test
in
movs
cwde
jno
xor
movs
sar
sub
into
in
in
(bad)
out
fiadd
mov
mov
inc
xchg
repnz
push
or
and
es
pushf
mov
inc
lea
jl
imul
pusha
aas
push
sbb
je
nop
dec
cli
sub
cdq
mov
aas
add
je
lahf
lock
xor
cld
xchg
add
add
xchg
mov
rcr
push
aaa
in
into
ds
cmp
retf
dec
mov
shl
idiv
xchg
adc
push
dec
mov
call
lds
pushf
shl
add
addr16
fst
add
out
jmp
ss
icebp
test
dec
(bad)
loopne
in
loopne
sbb
sti
add
mov
pop
ret
dec
out
dec
neg
fisub
jns
jmp
cmc
pop
ins
out
lods
rol
push
es
mov
mov
fnstsw
mov
pop
xor
xor
jge
jmp
nop
cmp
or
pop
sar
mov
mov
adc
mov
rcl
adc
addr16
xor
mov
add
add
xor
ror
push
pandn
adc
add
and
jp
xchg
jmp
ret
in
jno
push
mov
jge
xchg
push
sti
jnp
stos
call
mov
retf
pop
sysenter
in
ret
test
sbb
adc
sbb
movs
xor
rcl
and
sahf
mov
inc
pushf
or
dec
out
std
arpl
xor
cmp
mov
rcl
pop
add
sahf
mov
rcr
stos
test
shl
jne
iret
movs
(bad)
jae
and
dec
xor
adc
push
popf
sbb
adc
sub
mov
or
jmp
aad
jmp
cmp
mov
pop
jmp
push
xchg
sub
mov
sbb
std
ja
icebp
xchg
sub
mov
add
in
pop
retf
adc
addr16
jns
push
test
inc
xchg
cwde
(bad)
(bad)
mov
and
mov
mov
jl
iret
pop
mov
jmp
pop
add
push
and
cmp
sbb
(bad)
mov
mov
in
lods
inc
mov
lock
cwde
mov
jge
daa
cli
xlat
mov
mov
add
fdiv
push
mov
fbstp
call
mov
add
test
xor
cld
mov
push
sub
push
cmps
inc
push
shl
lods
imul
enter
sar
push
add
jmp
mov
and
clc
add
dec
mov
lods
mov
pop
pop
in
cmp
xchg
push
sub
xor
or
adc
clc
mov
js
daa
sub
dec
daa
call
sahf
add
xor
jo
gs
lods
aam
in
ficomp
hlt
jg
cmp
rcr
aaa
xor
add
call
xchg
add
push
(bad)
test
jg
fmul
mov
mov
outs
cwde
add
sbb
mov
xchg
jnp
stc
idiv
sub
mov
and
lods
shl
inc
mov
push
cwde
cmc
add
arpl
outs
sub
fcom
out
(bad)
cld
or
pop
push
add
mov
mov
add
jge
nop
ds
movs
dec
xchg
imul
jo
sahf
and
xor
outs
sub
lods
fisttp
ror
bound
aas
xor
adc
shl
test
adc
add
sbb
inc
xlat
cld
inc
pusha
imul
push
outs
nop
xlat
ins
push
jl
scas
sub
jb
shl
sar
sub
and
jmp
adc
stc
mov
ror
jo
and
adc
add
js
gs
push
sbb
imul
loopne
(bad)
dec
cs
pusha
es
add
addr16
mov
adc
adc
ja
sar
hlt
mov
enter
mov
cmc
xor
or
shl
fs
xchg
mov
lea
mov
leave
cmp
mov
mov
pop
pop
cmp
mov
push
dec
pop
stos
jp
jge
xchg
aad
scas
dec
rol
push
cmp
jns
pop
fsub
sub
aaa
xor
add
cwde
dec
je
test
adc
ds
outs
add
lock
fcmovnbe
ret
ret
in
cmp
mov
and
mov
out
in
(bad)
out
cmp
sbb
fs
mov
jg
xchg
xchg
cmp
adc
nop
ins
cli
popf
xor
jl
stos
outs
push
and
test
xor
push
int
or
or
push
jne
ficomp
sbb
out
cmps
stos
call
imul
pop
adc
into
push
cli
sbb
mul
push
jae
adc
mov
scas
rcr
into
xor
fmul
jp
lahf
popf
add
out
xchg
push
pop
push
inc
mov
in
pop
mov
int
sbb
adc
jb
call
and
repz
inc
pop
hlt
stc
(bad)
rdpmc
adc
fld
xchg
lods
and
push
(bad)
and
add
je
pop
mov
loop
mov
cli
rcr
push
fisttp
sbb
push
cmp
cmp
mov
inc
sub
loopne
mov
cmc
sub
and
jl
sahf
pushf
test
jge
xlat
xchg
xor
xchg
ds
call
mov
push
mov
scas
xchg
ficomp
test
ins
or
mov
cmps
ins
xchg
mov
xchg
pushf
pop
push
pop
(bad)
jno
in
or
dec
jns
stos
mov
mov
jl
ret
pusha
push
jle
sbb
adc
mov
push
push
pop
and
dec
dec
and
inc
aam
mov
movs
inc
(bad)
fld
sub
jg
push
xor
push
xchg
fxch
mov
dec
mov
mov
sbb
cmp
push
jnp
dec
pop
jae
xor
repz
fs
xchg
mov
cld
shr
xchg
(bad)
lahf
xlat
sub
fild
cmp
cwde
jmp
mov
adc
sar
mov
push
out
adc
push
inc
xor
cs
(bad)
sub
and
add
fs
push
ja
push
mov
xchg
jmp
or
jnp
jg
pusha
mov
dec
jae
mov
adc
int
dec
mov
jg
adc
or
add
test
clc
jp
fs
out
aaa
jae
stos
pop
push
and
outs
daa
pop
push
rol
mov
into
loope
out
pop
inc
int3
xchg
ret
inc
dec
jp
mov
sub
xchg
fst
cwde
fst
test
int
sub
adc
add
imul
inc
mov
pop
xchg
mov
and
pop
loop
or
dec
mov
dec
mov
mov
mov
jnp
sti
mov
cwde
mov
mov
repnz
aaa
jnp
inc
pop
and
mov
int
iret
movs
loopne
jge
or
xor
dec
xchg
mov
cld
ror
adc
jns
or
(bad)
mov
xchg
or
adc
lahf
or
or
pop
pop
(bad)
xor
in
scas
xchg
xchg
out
bound
add
xchg
sub
and
sub
lods
cmp
(bad)
loopne
cmp
mov
or
cwde
xor
jmp
mov
add
in
lea
aas
(bad)
jle
shl
pop
inc
pop
inc
pusha
mov
xchg
mov
and
inc
push
sub
cdq
jg
ret
les
ror
xor
test
test
movs
cmp
mov
sub
adc
mov
or
mov
(bad)
scas
or
dec
and
jbe
dec
fmul
retf
jo
dec
xor
push
and
sub
les
cld
push
outs
pusha
push
jnp
fsubr
pop
int3
loop
jmp
fst
call
test
mov
aad
mov
jg
push
movs
adc
cmps
cmp
pop
movs
faddp
mov
add
or
or
movs
add
dec
jne
and
sahf
mov
ds
out
fisttp
xchg
dec
sub
pop
mov
mov
inc
mov
jno
pop
pop
es
cmp
add
mov
iret
pop
pop
add
hlt
popa
or
mov
cli
jecxz
loop
mov
cwde
pushf
out
fdiv
loope
icebp
retf
adc
mov
sti
add
bound
lahf
test
leave
push
pop
out
test
xor
pop
pop
mov
cmps
cs
ss
inc
mov
ror
or
repz
in
lea
mov
sub
test
dec
fisubr
mov
iret
xchg
imul
push
outs
or
jae
push
jge
fstp
mov
mov
cwde
lods
scas
dec
sti
cdq
movs
repz
aad
push
sti
call
or
fs
adc
xor
push
movs
(bad)
jmp
push
out
scas
push
out
hlt
add
cmp
hlt
das
xor
mov
inc
mov
lock
(bad)
xor
rcl
sbb
pop
jmp
xchg
add
push
popf
push
xchg
test
xor
jmp
fidivr
dec
xchg
fbstp
in
icebp
cmp
sar
outs
sub
mov
ror
fcmovnb
cmp
jb
add
jle
xor
ss
xchg
test
xor
mov
mov
xchg
dec
sbb
pop
push
mul
lds
push
sbb
ss
xlat
cmp
in
pop
call
jmp
arpl
mov
sar
mov
ret
popf
sub
or
test
jnp
sub
mov
mov
or
xchg
dec
cmp
mov
out
cld
pop
sbb
jmp
inc
dec
jg
sub
(bad)
shl
jl
lea
and
jl
in
repz
pop
dec
push
pop
repnz
xchg
mov
shr
aam
cmp
imul
inc
call
inc
and
mov
xor
loopne
cmp
pop
inc
mov
inc
cmp
iret
adc
cmps
inc
out
mov
cmps
and
pushf
push
in
inc
mul
mov
(bad)
sar
jns
stos
sti
test
out
outs
ret
mov
cdq
test
sub
out
ja
(bad)
cld
les
dec
in
or
data16
push
daa
and
dec
and
addr16
imul
sbb
movs
out
add
mov
mov
mov
test
and
jp
sbb
test
int3
(bad)
pop
retf
adc
dec
mov
and
call
jmp
push
sub
or
mov
or
(bad)
loope
outs
add
scas
inc
sub
dec
cdq
fwait
(bad)
(bad)
std
aad
mov
pop
cmp
ins
std
jmp
cmp
test
cmps
loope
mov
push
adc
add
cdq
outs
sub
in
push
add
mov
adc
nop
jb
mov
push
out
push
test
and
and
(bad)
movs
or
push
dec
xor
jb
add
mov
retf
dec
jno
nop
or
xlat
aaa
push
pop
mov
ins
jns
pop
dec
mov
shl
adc
hlt
nop
jb
dec
and
ins
pop
in
lahf
in
and
or
jp
int
or
cmp
xchg
sbb
fadd
dec
dec
inc
(bad)
push
xchg
cmp
fidivr
(bad)
mov
sbb
fnsave
mov
jbe
ret
nop
mov
test
call
ja
ins
sub
or
fnstenv
pop
(bad)
std
cmc
cmps
and
outs
out
pusha
dec
ds
and
scas
xor
jp
sub
xor
cld
repnz
jg
cmps
mov
jb
ds
jle
push
mov
neg
repz
fadd
xchg
std
iret
inc
or
(bad)
xchg
jmp
(bad)
repz
imul
outs
lods
cld
add
out
sub
dec
dec
add
xchg
mov
xlat
mov
cmps
add
hlt
pusha
sub
sub
dec
cmc
sbb
shr
jo
popa
mov
cmc
bound
or
pop
or
sbb
inc
pop
xchg
jno
cmp
call
sub
pop
sub
or
movs
call
test
and
test
fcomip
mov
test
call
in
xor
das
push
stc
add
mov
lods
aaa
iret
pop
mov
mov
imul
mov
xchg
lods
cmps
add
in
outs
mov
mov
loope
sbb
add
ficom
and
sub
fcom
(bad)
jb
pop
push
sub
jno
les
shr
fcom
add
jne
inc
xchg
les
rcr
jbe
ficomp
(bad)
cmp
dec
shl
loop
and
jg
push
cmp
dec
mov
mov
xor
pop
fsubr
sbb
rcl
mov
dec
retf
mov
stc
scas
add
or
popa
mov
or
xchg
in
dec
fistp
xchg
pop
xchg
pusha
les
xchg
add
arpl
mov
sqrtps
push
jecxz
xlat
adc
cmp
mov
std
popf
(bad)
sub
jne
gs
popa
cmc
cmp
cdq
movs
out
test
call
into
xor
sbb
sub
inc
mov
repz
sahf
push
dec
xor
ret
daa
pusha
pop
cmp
jmp
sbb
xchg
loopne
jl
dec
sub
fcom
stos
dec
push
sar
sub
mul
gs
mov
dec
ins
in
mov
push
cs
xor
sar
stos
aam
adc
test
add
xchg
call
pop
mov
add
push
xor
out
(bad)
mov
and
and
out
sub
call
jns
xchg
mov
fist
mov
das
mov
xchg
dec
mov
jmp
scas
inc
out
mov
std
cdq
leave
movs
fs
loopne
movs
jb
lock
sbb
push
cmp
add
inc
mov
ror
cld
inc
out
ror
pop
out
je
mul
ret
bound
or
(bad)
mov
out
sahf
mov
sub
pushf
leave
pop
out
fdivp
cwde
xor
fnstsw
inc
stc
popa
call
pop
outs
adc
nop
cs
scas
mov
jmp
mov
inc
hlt
mov
loopne
dec
mov
lock
ror
mov
sbb
mov
sub
xchg
mov
fadd
test
jmp
pop
pusha
ja
xor
imul
fsub
add
inc
lock
pmuludq
in
jmp
add
js
aas
scas
jo
loop
stos
enter
aaa
aad
div
push
fnstcw
ds
and
inc
sub
dec
aaa
mov
pop
sbb
jecxz
mov
jnp
mov
call
stos
call
jns
mov
or
jmp
inc
push
aaa
mov
sbb
cwde
fidivr
shl
sub
ss
bound
push
add
nop
popf
push
in
aaa
cmp
mov
inc
cmc
xchg
in
mov
nop
xchg
call
push
les
push
mov
es
jl
add
fxam
jno
cmp
loop
in
dec
das
gs
adc
jle
mov
xchg
xor
ss
inc
adc
push
or
mov
xchg
adc
jno
sahf
inc
xor
sar
jmp
and
jmp
dec
outs
dec
iret
js
fwait
repnz
fmul
lea
(bad)
and
rcl
(bad)
mov
sub
push
in
and
and
popf
retf
retf
add
les
inc
or
scas
adc
int
mov
sbb
fld
mov
int3
mov
jecxz
or
loopne
shl
stos
sub
loopne
xor
clc
inc
jb
fs
xor
or
mov
in
pop
sti
xchg
mov
xchg
shl
aaa
retf
(bad)
sbb
adc
(bad)
cmc
xchg
jle
inc
fadd
mov
pop
xor
jg
nop
xchg
jns
fdiv
pop
sub
adc
sub
out
xor
inc
xchg
ret
xor
xor
dec
push
inc
mov
mov
int
mov
push
or
xor
jge
mov
stc
and
bound
xor
adc
in
cmc
ss
idiv
sub
call
popa
pop
mov
or
outs
(bad)
mov
jmp
inc
fxch
addr16
add
or
push
or
addr16
ret
comiss
jmp
dec
xor
pop
inc
mov
and
cmp
repz
pop
ror
mov
outs
pusha
in
xchg
push
ins
xchg
push
jno
push
adc
lds
cmp
dec
(bad)
or
add
jo
mov
(bad)
mov
mov
push
push
movs
dec
or
dec
xchg
push
and
out
je
ret
fbstp
movs
or
cmps
out
jecxz
mov
xor
jns
mov
sub
cdq
movzx
fwait
in
push
adc
sbb
jg
cdq
xchg
push
in
es
mov
mov
test
mov
in
cmp
sub
nop
ficom
dec
lahf
fidiv
les
inc
nop
loope
cmp
fs
repnz
cmp
mov
jne
ins
adc
cmp
cmp
scas
mov
stc
mov
mov
pop
xor
loop
mov
add
or
xor
ins
ret
(bad)
ins
hlt
mov
jl
push
stos
in
push
imul
sbb
fld
or
iret
call
mov
popa
and
popa
dec
gs
inc
inc
ret
inc
mov
scas
xor
pop
into
lahf
call
inc
xor
cmc
ja
outs
ins
(bad)
mov
push
pop
push
faddp
xor
adc
mov
aam
mov
(bad)
scas
ret
sub
shl
arpl
inc
addr16
in
setne
dec
not
pop
cmp
cli
mov
inc
jge
out
mov
xchg
leave
daa
into
outs
sahf
sub
xor
xchg
je
fild
call
sahf
or
imul
dec
sub
sub
and
(bad)
fld
jae
in
lods
inc
dec
mov
and
push
sahf
jl
push
icebp
enter
jb
mov
cmp
js
fld
sbb
sbb
push
mov
pop
icebp
mov
push
push
xor
cwde
out
sbb
mov
cmp
bswap
add
bound
test
in
cmp
mov
shl
and
data16
aad
mov
loope
fld
add
or
je
in
dec
imul
inc
xchg
add
ins
test
sub
or
test
adc
imul
sub
sub
int3
jp
int3
cmp
mov
inc
out
stos
adc
bound
popf
add
lock
popf
ret
xchg
ja
jle
sub
popf
lods
jb
or
scas
imul
jecxz
jle
pop
or
rcl
push
cdq
adc
lahf
mov
(bad)
sub
add
icebp
ss
add
jne
add
fadd
inc
bound
js
mov
cmps
cdq
shl
inc
pop
mov
adc
sbb
mov
fild
pop
sbb
sub
dec
jl
movs
nop
(bad)
jne
adc
js
jb
jg
pusha
ja
adc
jecxz
and
sbb
mov
xchg
arpl
jp
std
sbb
add
push
jae
lods
cmp
loop
push
cli
mov
mov
leave
pand
out
cli
jge
sub
adc
ins
cmp
add
mov
xor
clc
mov
loope
ins
xchg
mov
push
int3
cs
mov
cmps
push
sub
mov
cs
sub
and
les
rol
mov
into
movs
cs
mov
mov
adc
xchg
inc
mov
cli
in
mov
lods
aam
popa
adc
sbb
sub
inc
cwde
out
mov
dec
inc
pop
loope
xor
adc
(bad)
xchg
xchg
sbb
pop
call
das
scas
jg
jnp
dec
xchg
xor
mov
hlt
enter
push
iret
imul
dec
mov
out
cmp
sti
fidiv
test
xchg
mov
fiadd
push
sbb
xor
adc
jae
jecxz
cmp
call
fild
xchg
push
dec
das
sbb
add
pop
mov
sbb
or
and
call
dec
push
cdq
mov
rcr
cs
not
jecxz
inc
and
repz
out
adc
xchg
cmp
mov
mov
push
pusha
cdq
data16
imul
jbe
(bad)
adc
int
inc
fdivr
imul
aas
mov
cdq
jo
leave
pushf
push
lds
or
mov
jns
loope
push
xchg
jo
xchg
lods
sub
xor
inc
add
mov
retf
dec
fcomp
test
cmps
lea
cmps
xor
mov
and
mov
rcl
push
ret
push
jl
daa
xlat
aas
test
xor
scas
sub
test
pop
push
inc
adc
adc
sti
icebp
or
call
mov
inc
scas
mov
cmc
rcr
mov
mov
sub
mov
adc
sbb
cmc
popa
lods
cs
imul
lahf
sahf
xchg
std
lea
mov
inc
nop
jno
lods
loopne
jl
(bad)
ja
jge
push
lea
sbb
cmps
jmp
or
das
daa
and
sbb
out
fisttp
jmp
aad
sbb
ins
dec
(bad)
mov
jo
leave
add
jae
xchg
call
and
sbb
inc
outs
jecxz
test
xor
sub
dec
pop
xchg
sbb
loopne
(bad)
clc
ret
add
xlat
mov
and
push
mov
out
mov
cmp
inc
pop
pop
jecxz
and
mov
movs
jcxz
int
jl
xchg
pop
shl
call
(bad)
(bad)
ret
or
lea
lods
dec
retf
push
(bad)
fadd
cmps
and
jg
sbb
mov
icebp
or
js
loop
jmp
mov
jnp
dec
dec
arpl
or
xchg
call
std
mov
inc
adc
imul
push
sbb
cld
arpl
push
enter
xor
pop
or
test
or
or
dec
dec
xchg
(bad)
test
sbb
ins
outs
jp
imul
push
fs
(bad)
call
xchg
dec
mov
mov
cmp
push
mov
mov
inc
ficom
xlat
sti
cmp
xlat
js
lods
dec
ins
push
pop
mov
pop
lea
pop
nop
xchg
jno
retf
jg
or
inc
test
inc
inc
in
cs
pop
dec
arpl
add
add
jmp
cmps
js
xor
loopne
test
mov
fsubr
mov
push
and
test
movs
add
addr16
sar
pop
fmul
jne
aas
(bad)
push
call
xlat
arpl
inc
jp
ret
cld
daa
push
jne
arpl
jmp
ror
(bad)
in
lock
fsubr
jns
dec
or
push
ja
je
addr16
cmp
xchg
jb
clc
xchg
fmul
jae
jo
loop
xchg
push
mov
pop
adc
ret
dec
fwait
dec
inc
(bad)
jne
mov
adc
cmp
pop
xor
in
mov
jl
lea
rcl
repnz
sbb
jg
fsubr
sbb
aaa
into
cmp
mov
(bad)
or
mov
dec
cmp
jmp
pop
(bad)
mov
or
jecxz
loop
mov
es
xchg
or
xor
aaa
mov
(bad)
dec
jl
jmp
rol
jae
gs
pop
mov
jo
out
adc
xor
data16
das
xchg
mov
push
lods
clc
aam
pop
add
jbe
repnz
mov
adc
xor
jecxz
lods
adc
mul
jl
icebp
sbb
rcl
jmp
xchg
inc
in
retf
into
dec
adc
gs
cmp
stos
call
dec
enter
aad
inc
sub
cmc
mov
sub
jl
xor
sub
jge
or
aaa
loope
out
mov
enter
out
mov
mov
lods
ja
or
jp
push
sbb
out
ret
or
mov
fadd
aas
and
shl
jmp
ja
pop
(bad)
movs
in
push
jg
es
enter
shl
fwait
std
ins
addr16
(bad)
cs
and
dec
jg
cmp
(bad)
lds
or
cmps
clc
and
outs
in
in
fcom
or
xchg
dec
shr
data16
or
and
push
xchg
inc
aas
cmc
test
lea
js
std
jecxz
mov
jle
test
sbb
pop
add
jno
repnz
int3
repz
shl
pop
mov
sbb
jp
movs
in
mov
das
out
gs
sbb
cmp
ss
clc
retf
push
xor
ins
cwde
add
in
ja
cwde
pop
rcr
mov
add
sbb
cli
imul
cs
les
cmp
pop
movs
jo
(bad)
jmp
push
mov
add
in
in
data16
retf
mulps
lods
nop
dec
fcom
mov
dec
imul
jecxz
mov
mov
or
sar
dec
fst
cdq
lahf
pop
(bad)
shl
dec
mov
ret
xchg
and
sbb
bound
div
test
xchg
ja
jecxz
pop
push
test
test
hlt
hlt
sar
or
and
mov
scas
push
xor
mov
into
xchg
(bad)
pop
mov
mov
mov
out
lods
daa
icebp
in
mov
mov
iret
push
ja
aas
mov
pop
in
into
xchg
call
sar
mov
ss
mov
push
push
sbb
out
inc
and
add
lahf
jo
push
ja
dec
inc
int
xchg
xchg
jl
data16
movups
aam
mov
sub
cdq
stos
aam
icebp
mov
xor
and
mov
in
or
push
xlat
mov
cmp
xor
sbb
jne
and
mov
fidivr
stc
out
push
call
mov
xor
js
adc
popa
mov
pop
inc
cli
aam
inc
lock
mov
sub
sar
dec
clc
xchg
jmp
mov
inc
sbb
xchg
mov
jle
repnz
lods
or
push
xchg
jbe
cmp
mov
fst
out
out
push
adc
stc
dec
and
out
leave
pop
mov
bound
or
call
(bad)
sub
outs
jp
xchg
pop
cmp
div
inc
sti
repnz
fistp
inc
add
jb
xchg
(bad)
mov
dec
and
mov
or
inc
loopne
or
sbb
test
or
pop
push
inc
mov
xor
stos
sbb
lahf
sbb
pop
push
push
jmp
jae
mov
das
pop
add
aam
and
test
or
cmp
xor
pop
dec
je
pop
dec
bt
add
iret
xchg
cli
jnp
packsswb
jnp
rol
xchg
mov
in
inc
btc
ins
adc
mov
xchg
rol
dec
cmp
add
xor
das
inc
sub
xor
popf
aad
leave
popa
push
cmps
sbb
dec
and
sub
popf
add
mov
xlat
adc
pop
and
jecxz
add
stos
mov
sbb
retf
and
sub
sbb
mov
stos
fcomip
fcmovnb
xchg
fwait
(bad)
ss
inc
dec
movs
ret
sub
fwait
mov
dec
cmp
xchg
sbb
jo
dec
ror
(bad)
lods
movs
adc
add
inc
add
inc
popa
jg
adc
lea
xchg
adc
out
int
sbb
repnz
ftst
fisub
imul
sbb
push
and
sub
sar
mov
pop
data16
je
push
ret
or
lods
inc
mov
mov
adc
push
jg
sub
jb
dec
arpl
pop
cmp
jns
call
inc
pop
sar
xlat
dec
clc
mov
inc
popa
mov
aad
fldenv
sbb
int3
gs
push
and
pop
jne
lea
xor
not
mov
fnsave
fisttp
fcmovbe
mov
cmp
push
ins
movs
inc
loopne
vmovupd
cs
lods
fcompp
mov
mov
xchg
and
jae
ffree
(bad)
sbb
cmp
cmps
dec
and
sar
or
sub
shl
outs
push
jmp
jg
mov
mov
iret
fisubr
call
retf
mul
dec
push
mov
pushf
in
retf
xor
test
clc
or
retf
cmp
inc
mov
setge
dec
loope
test
sub
adc
pusha
cmc
push
fdivrp
adc
bound
adc
jg
call
je
dec
push
dec
cwde
jns
movs
mov
add
rol
ja
push
cmp
pop
daa
xchg
shl
out
jns
adc
mov
pop
push
cmps
mov
adc
push
and
retf
sub
adc
adc
loope
pop
les
dec
xchg
adc
mov
adc
cdq
sbb
dec
pop
mov
(bad)
xor
stc
stos
push
jmp
jmp
sahf
loop
repz
scas
cli
push
pop
ss
sub
push
xor
inc
jmp
or
push
std
mov
dec
mov
pushf
pop
sti
jmp
scas
out
push
(bad)
pminub
mov
movs
data16
pop
jno
xchg
fmul
mov
or
xchg
loop
outs
xchg
dec
(bad)
mov
data16
shl
jecxz
je
push
lock
cmp
push
scas
inc
and
stc
sub
fwait
pop
cmps
cmp
ins
mov
in
xchg
(bad)
mov
jb
jl
push
(bad)
out
fadd
and
fisub
inc
and
mov
sub
lds
mov
and
push
xchg
seta
call
test
sub
dec
pop
fcomp
scas
repnz
jmp
inc
jmp
aad
inc
fistp
fistp
xchg
clc
das
cmps
lods
das
pop
jnp
data16
int
push
sti
lea
and
ror
leave
nop
push
xor
pop
pop
cmp
inc
cmp
push
mov
enter
mov
out
dec
daa
mov
or
stos
(bad)
loopne
fisub
test
pop
imul
inc
dec
dec
pop
sar
adc
jmp
inc
stos
jmp
add
cwde
push
ss
push
push
inc
das
and
push
adc
adc
icebp
sar
cmp
mov
mov
or
int3
jge
push
stos
mov
sahf
icebp
mov
xchg
xor
(bad)
fidiv
ja
in
push
add
mov
mov
popa
mov
cmp
fcmovnu
inc
adc
push
inc
pop
stos
sbb
test
ss
inc
ffree
daa
arpl
push
inc
movs
movs
mov
outs
dec
mov
(bad)
sub
das
sub
jmp
jae
test
cmp
repz
sbb
fsub
fisub
loopne
add
sbb
rcl
xchg
jmp
in
and
mov
lock
or
scas
push
pop
sbb
pushf
push
and
loope
or
jb
out
jle
sbb
xlat
inc
lods
jo
cmp
stos
and
cmp
scas
sub
inc
inc
es
and
idiv
push
cmp
pop
cmp
into
ja
test
or
jl
jne
mov
enter
int3
xor
jecxz
data16
cmp
mov
fstp
pop
mov
retf
stc
sahf
push
test
(bad)
push
popf
outs
push
mov
adc
ins
xchg
adc
(bad)
shl
adc
in
sub
mov
adc
jmp
jle
sar
fs
sahf
cmp
pop
out
fmul
mov
xchg
and
scas
ins
clc
loop
rol
add
(bad)
aaa
test
xchg
dec
push
ss
out
call
sbb
imul
or
xchg
sub
cmp
and
sbb
fld
sub
pop
push
cmp
mov
xor
sti
xchg
mov
fcomip
in
jmp
pushf
rcr
mov
push
enter
in
movs
cmps
out
adc
push
mov
pop
mov
sub
add
mov
ss
mov
adc
(bad)
scas
neg
sub
(bad)
sti
add
cwde
xchg
out
leave
dec
or
pop
inc
push
cmp
stos
inc
xchg
fadd
jmp
out
xchg
fsubr
xchg
bound
jp
push
xor
idiv
sti
sub
sahf
pusha
jno
pop
fcmovnu
sub
xor
push
jo
cld
in
adc
fild
cli
ja
pop
xor
loopne
retf
inc
loope
push
nop
shl
sbb
push
data16
loope
mov
dec
out
test
fisttp
int3
sub
ds
ret
aam
xchg
mov
push
xchg
iret
mov
test
add
fs
aaa
jmp
popa
sbb
add
inc
lea
jge
mov
popf
imul
ror
in
xor
mov
sbb
out
mov
das
sub
inc
pop
clc
cmp
out
inc
mov
jecxz
cwde
jp
add
clc
sub
lods
icebp
pop
aas
mov
fs
add
dec
scas
pop
jp
inc
outs
adc
cmps
sub
mov
sbb
dec
sub
mov
mov
sub
mov
add
mov
sbb
pop
xor
push
test
sub
push
mov
loop
sbb
daa
aaa
data16
xor
mov
and
add
aam
and
les
ss
push
inc
jnp
jg
shl
call
push
jns
push
out
call
jecxz
out
dec
xor
cdq
int3
in
push
ja
in
movs
and
(bad)
in
push
clc
repnz
enter
pop
mov
scas
push
adc
push
scas
xor
pop
pop
cmp
cmc
fistp
pop
xchg
cmps
stos
sti
push
imul
(bad)
mov
xchg
mov
dec
(bad)
mov
adc
rdpmc
xor
push
ror
mov
fwait
or
popf
xchg
outs
int
xchg
mov
retf
aas
test
icebp
or
fdivr
dec
(bad)
loopne
xor
push
and
push
sub
cmp
test
or
jecxz
xor
adc
fs
not
xor
and
dec
push
pop
repz
sub
ret
xor
add
mov
and
test
pop
push
cmps
and
(bad)
psubusb
jbe
jns
pop
and
movs
call
sahf
imul
shl
jmp
adc
nop
shr
lock
test
leave
int3
jne
and
jne
imul
fucomip
mov
fisub
in
push
aad
inc
cdq
xchg
jl
jno
adc
push
sub
add
add
bound
adc
pushf
inc
inc
cmps
sbb
ja
dec
icebp
popa
popa
loope
mov
dec
movs
push
call
(bad)
pop
or
les
mov
xchg
retf
inc
loope
adc
lea
scas
stos
into
pusha
push
cld
ret
xor
int3
es
adc
cli
movntps
clc
shl
pop
xchg
jge
jb
mov
add
fsubr
shr
adc
mov
cmp
jne
scas
or
push
test
(bad)
fdivr
std
dec
nop
pop
adc
into
add
nop
stos
adc
sar
xor
pop
shl
shl
sbb
adc
and
outs
in
in
mov
xlat
cmp
icebp
and
lea
xchg
ins
inc
test
xchg
or
retf
or
inc
fldenv
xor
mul
dec
sub
popf
xor
sbb
(bad)
inc
loope
or
inc
push
xchg
out
call
jp
je
or
mov
scas
xchg
sub
cdq
mov
fld
out
adc
imul
mov
pop
(bad)
int
cwde
mov
mov
in
in
fcomp
jmp
out
pop
test
aad
test
mov
dec
mov
in
xor
push
and
cwde
das
dec
je
repnz
ret
dec
hlt
cmps
xlat
pop
push
or
fbstp
fldenv
int3
or
out
scas
sub
mov
cmp
ror
cs
pop
aam
push
pop
data16
cmp
cmp
inc
lahf
add
fs
bound
push
icebp
outs
out
push
movs
cmp
shr
outs
xchg
or
add
fistp
dec
push
xchg
cmp
inc
xor
fdivr
mov
outs
xor
pop
push
mov
mov
xchg
sbb
mov
mov
xchg
shl
scas
adc
sahf
sbb
fadd
pop
mov
jl
in
shr
xchg
shl
cwde
pushf
add
mov
mov
shl
sbb
pop
jnp
and
mov
mov
mov
or
dec
cwde
push
pop
in
or
inc
mov
pop
mov
push
bnd
mov
pop
adc
test
int
inc
bound
pop
push
inc
mov
mov
movs
pop
int
mov
jb
icebp
outs
adc
leave
sub
push
jne
push
cmps
and
in
pop
rcl
cmp
imul
aam
loop
mov
push
mov
retf
dec
push
ror
movs
push
addr16
push
or
fcmovnu
fcom
mov
test
mov
cld
adc
fidivr
sub
les
cmp
and
push
push
or
jnp
mov
stc
rcr
outs
jmp
pop
fsubr
stc
aas
int3
mov
in
lods
clc
and
xlat
das
or
inc
xchg
mov
jmp
cmp
pop
mov
stos
and
mov
sbb
or
xchg
dec
(bad)
outs
sub
pushf
jnp
test
jnp
pop
cmc
ins
imul
push
pop
scas
sti
sub
add
or
cmp
xchg
(bad)
cmps
aad
cwde
fcom
cmps
sub
or
inc
adc
(bad)
mov
fild
and
jecxz
ret
in
jg
jnp
cmp
sbb
movs
ins
call
sti
inc
repz
sbb
fstp
jmp
dec
xchg
jg
push
shl
rcl
mov
mov
xor
pushf
or
add
mov
jne
sbb
and
adc
inc
push
push
jno
popa
adc
jecxz
lea
and
int
dec
das
iret
inc
aam
xchg
adc
add
xor
xchg
xor
xchg
mov
mov
sub
pop
pop
jmp
sub
pop
and
addr16
ss
int3
stos
fwait
inc
sti
xchg
popa
div
add
mov
add
cmp
mov
sub
test
sbb
jnp
add
dec
js
add
jp
retf
push
sub
mov
pop
inc
stos
push
push
in
out
push
pushf
addr16
push
or
dec
push
bnd
fcomp
push
int3
dec
xor
fisttp
(bad)
mov
pop
loopne
mov
pushf
stc
ja
je
dec
sbb
mov
test
pop
pop
push
mov
scas
inc
and
jmp
jmp
nop
pop
cmp
mov
add
xor
repnz
mov
jp
int
jge
xchg
stc
gs
mov
or
inc
sub
ja
xor
adc
xchg
fadd
and
rol
mov
mov
test
mov
call
gs
mov
bound
fs
addr16
add
scas
pushf
or
pop
mov
pop
repz
push
pop
lods
and
pop
fcomp
and
xchg
cs
repz
xor
cmp
cmp
js
inc
jmp
scas
ret
sub
adc
ins
jecxz
std
in
and
pop
mov
ins
xor
sbb
fmul
xchg
out
shl
fcomp
std
adc
outs
mov
push
aaa
stos
add
cmp
imul
mov
jb
inc
imul
mov
rcl
mov
inc
cmp
in
jmp
jno
stc
test
dec
mov
mov
sbb
stos
movs
and
xor
mov
dec
jp
ds
xor
mov
mov
or
sbb
dec
jecxz
nop
loope
shr
mov
outs
movs
int3
pop
pop
cld
stos
lahf
jno
ds
lea
mov
sub
push
das
test
push
stos
mov
jb
retf
loop
data16
lahf
gs
jne
arpl
and
add
es
mov
mov
lods
clc
outs
xor
popf
iret
dec
mov
xchg
mov
retf
test
call
mov
das
fld
jecxz
fimul
mov
add
sub
inc
xor
mov
retf
mov
jp
outs
jle
mov
retf
cmc
jnp
cmp
jecxz
and
lods
fild
or
add
xchg
push
shl
std
cmp
pop
rcl
xrelease
mov
inc
jmp
pusha
mov
iret
in
outs
test
add
mov
out
lahf
movs
imul
fild
and
dec
inc
shl
pop
es
xchg
adc
sub
xlat
call
jbe
fistp
pop
retf
and
and
dec
jmp
cmp
mov
out
out
imul
pop
jb
inc
mov
ja
fld
xchg
inc
or
(bad)
mov
sub
mov
jmp
push
jo
inc
dec
pushf
mov
rcl
cli
mov
add
nop
push
xchg
test
lock
sbb
or
arpl
outs
sub
or
sahf
sub
cmp
lahf
fist
sbb
mov
push
add
rcr
outs
icebp
out
in
push
shl
push
or
inc
xor
pop
adc
push
mov
dec
cli
jno
push
and
push
je
jecxz
xchg
mov
pop
mov
push
xchg
(bad)
push
mov
mov
pushf
ror
sar
sbb
mov
lea
arpl
push
pop
and
mov
xor
int3
lock
mov
sbb
lahf
les
mov
dec
or
pusha
repz
inc
pop
jl
xchg
fcmovnbe
jb
stos
aaa
add
lock
xchg
push
ficom
lock
xchg
sbb
cli
push
pop
sbb
test
dec
pop
pop
lds
out
or
idiv
adc
or
mov
js
pop
out
xor
fimul
out
pcmpeqw
mov
lock
aad
xchg
xchg
cmp
in
and
int
push
cld
sti
adc
lods
sub
cmp
test
and
pushf
cmp
fistp
icebp
shl
and
stc
into
xor
sbb
aad
icebp
inc
out
xchg
rol
mov
fwait
jge
(bad)
jbe
sub
sub
mov
(bad)
jne
xchg
pop
je
shr
adc
jae
adc
inc
movs
adc
sbb
pop
lods
xor
mov
sbb
(bad)
retf
hlt
iret
into
add
sub
xchg
xor
add
add
mov
mov
mov
fistp
pusha
leave
pop
lods
xor
adc
mov
(bad)
shl
mov
out
push
cmp
lea
sub
jmp
ret
jecxz
cli
add
test
stc
pop
xchg
mov
and
xor
pop
mov
pusha
push
mov
mov
mov
pop
scas
hlt
add
call
mov
mov
mov
out
cmps
out
mov
outs
jecxz
cmp
mov
nop
push
and
cmp
fnstenv
shl
and
jle
leave
dec
shl
rcr
jmp
sub
xor
int
out
inc
int3
sbb
and
mov
cld
jo
mov
(bad)
fimul
mov
mov
fcmovb
xlat
push
and
push
jno
out
inc
mov
out
mov
cld
pop
xchg
mov
lea
mov
push
push
pop
lea
out
jmp
(bad)
das
pusha
retw
out
mov
stos
cmp
(bad)
jle
mov
aaa
je
es
fwait
inc
xor
sbb
xor
lea
outs
cmp
add
lahf
mov
lods
fucom
mov
data16
xchg
mov
mov
add
mov
push
shl
out
mov
daa
ret
add
and
xlat
pop
cmp
sbb
mov
lds
pop
in
pop
pop
imul
jge
popa
xor
or
dec
ins
dec
test
shl
xchg
outs
inc
mov
adc
and
cmps
jmp
adc
inc
jb
loope
lds
and
xor
out
cmp
cs
add
in
test
xchg
and
mov
test
pusha
call
or
mov
jmp
aaa
mov
mov
pushf
jnp
in
call
xchg
cmp
aam
dec
jae
lahf
loopne
(bad)
xor
xor
scas
fwait
ja
dec
xchg
xor
inc
sbb
retf
xchg
jns
lea
push
jp
push
or
cdq
rcl
mov
xchg
jmp
xor
stc
stos
pop
(bad)
add
call
jmp
mov
xor
sub
mov
mov
xor
mov
(bad)
loopne
lock
add
push
push
xlat
add
cmp
push
mov
xchg
sbb
xchg
pop
data16
je
jl
mov
dec
xor
cmp
cwde
jp
fst
jl
push
jnp
retf
dec
jmp
stc
into
xchg
sub
in
popf
pop
(bad)
fst
mov
mov
jecxz
(bad)
sti
loope
addr16
inc
mov
jl
sbb
push
movs
icebp
fincstp
(bad)
jb
push
mov
movs
xchg
fadd
jmp
jo
mov
inc
in
and
ins
cmp
mov
jmp
pop
dec
mov
pop
aad
or
mov
in
dec
mov
or
or
fnsave
(bad)
cmp
sub
mov
mov
pop
push
gs
adc
inc
sbb
xchg
jae
dec
mov
cdq
shl
cld
inc
mov
mov
lds
inc
out
dec
xchg
aas
mov
repnz
icebp
push
or
cmc
js
test
daa
pop
push
or
and
ret
sti
jmp
push
dec
mov
shr
mov
mov
mov
retf
test
push
xchg
sub
jmp
lea
xor
xchg
ret
adc
cmps
add
mov
sbb
fldcw
iret
pop
gs
ret
pop
movs
jmp
jmp
aaa
sub
call
not
pop
and
fisub
cmp
pop
in
dec
lahf
in
cmp
xchg
xor
out
jne
push
dec
not
ror
inc
sti
mov
xchg
xor
push
fiadd
(bad)
pusha
push
test
(bad)
jg
dec
arpl
push
ss
push
adc
sub
adc
xchg
loope
push
nop
pushf
xchg
lods
sub
dec
inc
cli
int3
mov
inc
jb
jp
sub
sbb
out
fistp
pop
cmp
loopne
(bad)
aam
xchg
xor
inc
neg
inc
retf
scas
xchg
mov
xchg
aaa
in
dec
mov
sub
push
adc
push
and
sbb
xchg
iret
out
or
iret
enter
push
(bad)
push
jno
fwait
inc
xchg
mov
fst
cmp
push
ds
pop
push
(bad)
iret
or
mov
bound
xor
in
loope
or
and
xchg
in
fucom
sbb
in
repnz
fisub
not
cmp
fst
jns
lods
sbb
lahf
js
mov
push
out
daa
mov
pushf
fnsave
stos
sbb
ds
xchg
(bad)
jecxz
out
clc
add
pop
js
fcomip
sub
xor
sub
adc
sub
adc
jne
add
lods
sbb
int3
mov
xchg
dec
fiadd
std
sbb
pop
jecxz
call
sbb
fldz
es
cmp
iret
inc
cmp
dec
mov
pusha
mov
pop
loopne
es
inc
jbe
mov
xlat
push
xor
ins
sub
sub
retf
test
bnd
add
lahf
cwde
ret
jecxz
jge
xor
add
xlat
adc
sub
or
fstp
pop
dec
jo
test
dec
cli
(bad)
mov
xor
inc
dec
pop
and
jns
jb
push
jge
and
push
mov
or
ss
repnz
clc
sub
int
xchg
test
and
sub
mov
or
cmp
test
inc
push
mov
fld
enter
jle
out
rcr
adc
fwait
inc
cmp
out
cmp
pop
(bad)
xchg
cmp
push
sbb
adc
clc
cmp
sub
ret
lods
imul
(bad)
jmp
cs
test
add
int
test
ret
int3
inc
dec
push
in
lods
ret
push
shr
in
or
xchg
sbb
push
xchg
mov
mov
repz
adc
mov
and
add
(bad)
cmc
inc
fcom
dec
mov
jne
pop
call
cmp
test
add
mov
mov
dec
and
cwde
data16
mov
out
sub
or
sub
leave
cmp
push
aam
rol
mov
jmp
xchg
shl
adc
sub
jae
jmp
jg
ins
pop
test
pop
cmp
shl
jnp
aad
pop
cmp
retf
cli
cld
pop
mov
fwait
dec
int3
jns
iret
cli
test
sbb
mov
(bad)
ret
fcomp
mov
les
mov
mov
or
jmp
cwde
imul
xchg
test
push
repnz
lahf
push
jl
or
mov
mov
rol
test
(bad)
push
xchg
outs
(bad)
int
sbb
jle
mov
test
dec
mov
mov
push
inc
or
fwait
aam
sbb
add
jnp
mov
xor
jle
jne
out
imul
sbb
movs
js
push
cdq
mov
jnp
and
addr16
jmp
mov
mov
mov
mov
lahf
inc
fsubr
adc
and
or
repnz
cs
daa
lods
sti
popf
leave
data16
jnp
mov
or
and
pop
fdiv
xor
inc
gs
test
jmp
in
jmp
test
xchg
dec
inc
and
sbb
add
sub
or
call
mov
jl
test
(bad)
repnz
jecxz
fwait
cmps
enter
pop
call
fstp
xchg
(bad)
mov
imul
adc
(bad)
and
retf
data16
adc
cmp
add
cmp
cmps
adc
loopne
push
jmp
add
ret
dec
add
mov
pop
jg
mov
sub
dec
cmp
retf
jbe
mov
cli
push
sbb
lods
sbb
sar
and
push
aas
and
push
inc
sub
and
or
cmps
inc
aad
hlt
or
inc
imul
adc
(bad)
out
jg
arpl
xchg
push
jmp
add
inc
push
es
push
(bad)
loop
shl
in
push
push
pop
xchg
adc
ins
push
xor
pop
in
repz
outs
out
push
ret
dec
xor
fidivr
rep
mov
adc
fcomp
gs
and
dec
xchg
cmp
push
pop
retf
jecxz
rol
sub
jnp
into
mov
aas
leave
mov
popf
adc
push
or
lods
add
cmp
mov
stc
cwde
aas
cmps
je
inc
jb
xchg
into
aas
mov
ds
in
ins
arpl
fs
ret
nop
push
cmp
pop
(bad)
(bad)
ret
mov
push
pop
push
iret
xchg
mov
call
lods
sti
pop
push
adc
addr16
mov
xchg
pop
dec
call
ss
push
clc
xchg
lahf
loopne
or
lods
sbb
push
xchg
adc
adc
cli
add
std
sub
call
add
pop
cmpps
es
or
test
rol
popf
sub
mov
stc
xchg
fld
jge
nop
mov
outs
jmp
sub
push
out
mov
rcl
loope
adc
les
and
rol
inc
and
pop
and
jmp
xor
lods
mov
cmc
clc
pop
cmp
cmp
je
sti
outs
es
mov
xchg
popa
and
push
ins
retf
push
dec
xchg
out
shl
js
ror
shr
inc
fisubr
adc
push
cmp
arpl
add
lea
ja
and
imul
cmp
in
sets
xchg
icebp
shl
jns
fld
add
fdivr
xchg
dec
jb
sub
or
or
dec
pop
xchg
repz
push
test
push
cld
adc
push
jb
or
push
cli
pop
sub
mov
jp
mov
fucomi
xchg
pop
push
jae
call
cmps
or
push
out
ja
jne
mov
inc
mov
idiv
test
in
cs
mov
pop
mov
int3
pop
cmp
xor
cs
pushf
aad
mov
inc
push
sub
adc
adc
pop
sbb
inc
pandn
pushf
sbb
inc
fs
dec
xchg
sub
sub
mov
pop
daa
fld
cmps
or
or
pop
pop
sub
(bad)
call
mov
mov
stos
pop
int3
adc
in
(bad)
mov
mov
cld
xor
repz
add
inc
cli
loopne
retf
add
push
test
mov
or
movs
mov
jno
sbb
push
lock
add
aad
xor
push
or
xor
out
in
cmp
mov
idiv
mov
jno
(bad)
addr16
cmp
mov
ficom
sbb
fistp
cmp
nop
or
shl
push
test
mov
xchg
push
push
fiadd
(bad)
das
push
push
fadd
int3
adc
and
inc
fs
into
cmp
pop
jg
in
cmps
shl
scas
inc
into
mov
add
movs
stc
jae
xor
mov
div
bnd
bound
retf
mov
mov
add
fisubr
mov
dec
in
ins
mov
add
sbb
jmp
adc
loop
xchg
mov
pop
and
push
or
je
pop
mov
div
sar
test
(bad)
test
(bad)
loop
jl
out
mov
repz
bnd
sub
les
mov
arpl
xchg
jmp
in
(bad)
aad
push
add
test
xchg
aaa
cmp
xchg
or
out
ret
js
leave
mov
ins
retf
mov
push
idiv
mov
repnz
rcl
bound
jmp
sbb
adc
fdivr
mov
ins
pop
mov
int
repnz
cmp
sbb
push
jg
pushf
rol
cmps
enter
dec
dec
jge
add
stos
sahf
movs
pusha
pop
les
out
hlt
(bad)
push
and
mov
fcomp
jp
scas
mov
add
dec
aaa
and
stos
mov
xchg
test
out
adc
pop
push
jl
(bad)
movs
push
loop
xlat
clc
push
mov
jbe
fimul
dec
cmp
dec
jae
imul
xchg
jecxz
aam
cs
adc
push
shl
cmp
inc
mov
imul
into
adc
sbb
xchg
scas
icebp
mov
or
iret
ins
retf
mov
shr
fmul
or
jecxz
and
ror
mov
movs
sub
test
adc
in
inc
inc
nop
enter
es
mov
mov
ds
fisttp
scas
and
add
xor
fsubr
dec
cmp
jbe
cmps
enter
cmc
cdq
xor
in
inc
push
lea
mov
adc
dec
std
or
imul
ror
stc
in
call
shl
ja
jnp
or
and
je
or
es
inc
cdq
adc
sub
pop
sub
ficom
ficomp
outs
mov
dec
jbe
add
imul
push
call
dec
xchg
add
(bad)
loopne
cmp
cmp
sbb
push
cmp
mov
xchg
les
pop
das
jne
mov
push
les
push
fld
mov
pop
jbe
and
and
cwde
mov
mov
mov
mov
inc
adc
(bad)
dec
jmp
cli
test
adc
icebp
push
mov
dec
rcl
jno
stc
call
daa
out
cwde
adc
jecxz
loop
mov
push
aaa
push
sub
gs
dec
(bad)
into
test
loope
mov
(bad)
adc
or
or
imul
sbb
add
jge
push
mov
lds
ficom
push
aam
xchg
out
ret
fsub
adc
loop
mov
(bad)
xchg
(bad)
call
imul
fimul
push
adc
sub
lahf
in
xchg
push
in
xacquire
and
mov
add
leave
inc
(bad)
in
jle
outs
xor
mov
or
xchg
push
call
sbb
stos
(bad)
in
scas
(bad)
rcr
pop
jbe
mov
mov
mov
jbe
xor
stos
inc
adc
sbb
ins
(bad)
int3
mov
dec
inc
les
cmp
lds
adc
adc
loopne
test
mov
das
jge
xchg
sub
in
jp
pop
fiadd
dec
pop
imul
sbb
or
das
pop
and
(bad)
aaa
or
adc
and
pop
fimul
retf
sbb
ja
aas
xor
add
div
mov
add
retf
(bad)
outs
dec
lea
iret
std
es
cmp
sbb
call
ins
cmp
(bad)
mov
push
mov
mov
push
call
pop
mov
sub
sub
mov
fcmovu
je
pop
inc
in
inc
repz
cli
movs
mov
or
mov
sub
data16
jae
cmp
addr16
inc
repnz
mov
fwait
inc
fadd
aam
dec
aad
sub
icebp
mov
xchg
mov
or
jno
ss
in
out
inc
out
mov
mov
mov
cmp
or
mov
shl
call
or
sub
pop
loope
shl
retf
cmp
pop
jo
jno
clc
ins
fnstenv
jo
push
test
mov
or
mov
fwait
sub
ss
push
mov
ja
in
int
push
out
(bad)
or
inc
push
es
cmp
push
and
arpl
lds
imul
out
lods
or
shl
dec
cmp
(bad)
pushf
stc
scas
jmp
push
pop
mov
and
and
je
mov
ja
hlt
sbb
cmp
popf
mov
pusha
cmp
dec
fiadd
nop
(bad)
or
repz
push
sub
ins
movs
or
fwait
sub
sbb
icebp
sub
pop
cmp
fsub
(bad)
in
adc
movs
stc
aad
sub
fldcw
sti
popf
push
mov
test
and
jo
fisttp
push
inc
pop
push
inc
push
pushf
push
add
cmp
inc
loop
xchg
adc
out
repnz
and
pop
sbb
xor
dec
shl
not
dec
sti
push
call
xchg
(bad)
fldcw
adc
jmp
fdivr
jne
mov
pop
daa
mov
mov
jae
out
test
arpl
xchg
cmp
pop
cmp
ss
or
adc
loopne
inc
pop
pop
psubq
sub
pop
sar
sub
ins
stos
in
push
or
ins
in
jne
pop
(bad)
fisubr
aas
mov
sub
outs
mov
sti
call
outs
div
push
popf
dec
mov
icebp
jle
fidiv
nop
es
in
inc
neg
ficom
sub
pop
mov
jg
rcl
outs
mov
mov
dec
add
mov
jp
aaa
mov
rcr
ins
hlt
daa
shl
je
jmp
jb
or
mov
sbb
jge
out
mov
inc
cmps
mov
cwde
std
mov
fs
sub
loope
fnsave
idiv
daa
xor
nop
inc
push
adc
cmc
(bad)
movs
mov
jge
in
popf
push
jno
pop
xchg
and
or
add
sub
imul
ffreep
wbinvd
push
into
retf
in
or
xor
sub
pop
std
and
or
or
sbb
shl
push
clc
dec
xchg
fadd
xchg
(bad)
out
pop
dec
stos
mov
mov
jmp
scas
cmps
pop
dec
test
xchg
sbb
jno
xchg
xor
rcl
inc
int
hlt
shr
inc
call
mov
cmp
neg
adc
push
out
mov
cmc
pop
sbb
push
sub
or
ss
cmp
mov
test
loope
xchg
lds
or
push
and
dec
loopne
and
xchg
stc
or
and
inc
sbb
ret
mov
adc
dec
or
add
scas
movs
lea
sub
mov
pop
dec
add
inc
movs
pop
jmp
popf
mov
push
dec
ret
push
lock
lods
sub
(bad)
sbb
retf
in
movs
push
cwde
mov
xlat
pop
jmp
push
sub
or
scas
pop
adc
cld
cmp
cmp
rol
jle
mov
or
xchg
jnp
xchg
and
push
xor
iret
pop
clc
ja
sahf
cs
inc
cs
and
or
jne
mov
fwait
or
jmp
pop
push
popa
jns
cwde
das
or
pop
ds
pop
xor
pop
mov
push
mov
xchg
fidiv
mov
pop
std
mov
fadd
imul
outs
lea
ror
rcr
mov
aad
iret
fimul
es
jb
or
or
shl
xor
inc
out
add
das
or
(bad)
loopne
call
rcl
(bad)
ja
pop
jno
pop
adc
outs
(bad)
and
pop
sub
pusha
idiv
cs
stos
je
and
nop
movs
add
mov
cmps
imul
in
jbe
and
rol
fs
or
xlat
out
mov
sub
lahf
inc
in
and
mov
push
aam
jnp
xor
fwait
cmps
jno
clc
in
push
int3
cmp
mov
mov
test
ret
inc
aas
xor
jb
dec
mov
lods
(bad)
call
ins
imul
sub
mov
divps
pop
bnd
push
jecxz
jmp
ficomp
jp
jbe
and
iret
imul
cmp
aam
into
rol
mov
add
retf
sahf
pop
push
sub
jb
xchg
and
pop
cld
sub
mov
stos
push
and
xchg
out
sub
cld
lock
outs
push
cli
mov
dec
shl
hlt
sbb
imul
jp
cli
mov
push
push
fs
clc
fsubr
xor
or
xchg
pop
xchg
xchg
adc
popf
rcr
in
aas
inc
fwait
jne
mov
aas
call
xchg
fs
mov
push
push
clc
test
js
sub
and
jle
jle
fwait
lea
adc
mov
mov
aam
mov
sbb
scas
stc
js
mov
loopne
push
out
call
test
fdivr
js
das
repnz
clc
mov
popa
retf
jg
cmp
jmp
xchg
iret
imul
mov
pop
jmp
jecxz
outs
and
pop
popf
and
cmp
xchg
dec
out
call
test
inc
or
aam
cwde
fsub
or
dec
inc
inc
xor
hlt
dec
mov
adc
xchg
xchg
lds
push
or
mov
mov
xchg
repz
mov
mov
pop
push
jle
lea
loope
mov
inc
icebp
jmp
xor
mov
out
sbb
sbb
cwde
mov
repz
sbb
(bad)
call
jg
inc
add
and
cmps
out
ins
es
push
lock
and
jmp
add
in
icebp
mov
and
add
push
bound
dec
aas
clc
mov
popa
(bad)
xchg
ss
jp
sub
jmp
xchg
sbb
ret
jo
push
(bad)
mov
dec
movs
xchg
mov
mov
iret
fwait
jae
mov
or
(bad)
pop
(bad)
cmp
inc
sbb
fisubr
add
sub
sbb
xor
fsubr
push
loop
(bad)
adc
movs
aad
add
xor
xor
mov
push
stc
mov
mov
cmp
xor
push
sub
imul
scas
or
dec
pop
xchg
inc
jmp
into
jbe
xchg
xor
push
into
stos
into
sub
xchg
cld
mov
loopne
test
mov
test
out
shr
mov
push
cmp
cld
cmps
scas
or
adc
jle
jo
sbb
fmul
pusha
rol
aad
push
inc
inc
mov
sbb
popf
jb
inc
(bad)
and
stos
aam
inc
jb
(bad)
movs
cmp
jnp
add
xchg
retf
pop
retf
pcmpeqb
cmp
jns
iret
dec
aas
into
ja
ss
sar
pop
dec
aas
stos
hlt
stos
add
xor
loopne
pop
pop
jo
jne
or
push
pop
je
ss
pushf
or
gs
imul
or
inc
add
nop
dec
or
mov
add
mov
pop
hlt
lods
lock
fwait
add
dec
dec
cmps
push
js
inc
das
pop
pop
dec
push
xchg
imul
sub
or
mov
fstp
in
(bad)
imul
push
outs
and
fwait
add
mov
mov
mov
or
mov
scas
gs
(bad)
std
data16
cld
inc
push
pop
test
arpl
out
push
popf
in
fldenv
cmc
shl
mov
gs
xchg
retf
icebp
dec
push
xchg
lods
imul
inc
imul
cmc
mov
or
mov
cmp
iret
bound
cli
pavgb
rcr
adc
push
retf
es
sub
arpl
xchg
daa
ret
pop
push
jmp
sub
in
and
shl
jno
sbb
cmp
push
retf
jmp
and
ret
dec
sbb
mov
(bad)
int3
js
cmp
lods
lahf
inc
pop
sbb
out
call
push
push
scas
scas
ds
ins
pop
lods
jb
mov
div
or
adc
inc
xchg
xchg
dec
(bad)
icebp
cmc
dec
add
lods
imul
lds
stos
sub
std
leave
clc
xlat
pop
js
inc
fwait
xchg
sar
je
cs
shl
cmp
mov
pop
or
pop
xchg
jnp
dec
cmp
outs
mov
cmp
xor
push
jae
inc
pop
mov
cmp
inc
retf
ja
cmp
mov
xor
dec
sbb
das
shr
mov
adc
xor
lods
addr16
cmp
push
rol
xchg
mov
(bad)
mov
push
jno
mov
in
out
push
into
les
stc
loope
xchg
pushf
sahf
fwait
sub
mov
mov
jnp
cli
add
jmp
push
mov
cmp
push
mov
dec
xchg
ds
xor
mul
inc
push
fwait
pop
dec
mov
pop
xor
(bad)
cmps
mov
cmps
jae
push
add
mov
pop
lods
dec
bound
mov
popa
jl
pop
pop
inc
inc
addr16
jmp
fnsave
xchg
test
xchg
test
clc
xor
cmps
loop
dec
mov
pop
dec
cdq
rcl
cmp
adc
xlat
fild
jecxz
dec
div
sbb
adc
add
lods
mov
js
mov
loop
dec
inc
outs
cmp
xchg
mov
jg
outs
es
es
pop
mov
or
mov
mov
inc
xchg
sbb
ucomiss
adc
(bad)
loop
rcl
cwde
int
xchg
or
test
jno
sub
push
inc
fs
add
inc
inc
ret
jae
lods
mov
jg
dec
ins
mov
cwde
mov
mov
xor
rol
jno
jno
fnstsw
pop
cwde
inc
adc
iret
mov
stc
jb
dec
add
test
mov
mov
test
fimul
lock
or
push
outs
movs
or
adc
dec
mov
loopne
cdq
or
movs
(bad)
inc
jg
(bad)
jbe
loop
scas
loopne
ret
xchg
add
fnsave
dec
retf
mov
ins
(bad)
stc
out
cmp
sbb
out
cli
xchg
inc
invd
sbb
inc
and
sub
cmp
int3
xchg
pop
inc
out
dec
imul
test
in
jbe
mov
jecxz
push
leave
lea
sbb
inc
aaa
data16
cmp
cwde
xchg
xchg
loope
pop
jmp
mov
pop
(bad)
call
fcom
popa
(bad)
push
inc
test
fcomp
and
in
pop
mov
mov
in
add
push
bound
adc
ret
add
rcr
cwde
inc
shl
xor
lahf
and
adc
push
ins
rcl
(bad)
or
movs
fstp
mov
dec
mov
shl
cwde
xor
mov
in
jbe
les
aam
dec
adc
mov
push
adc
add
stc
pop
int
xor
xor
retf
or
jae
cmp
cs
in
inc
sahf
and
inc
ss
inc
loopne
xchg
dec
in
adc
sbb
or
retf
fs
sub
mov
jno
pop
xchg
gs
push
mov
jg
sti
call
jg
mov
jne
movs
add
or
(bad)
aaa
mov
add
mov
sub
icebp
jg
push
mov
pop
fidivr
cdq
ret
mov
stos
pop
arpl
cmps
jb
mov
add
push
jns
jp
data16
adc
mov
xchg
xchg
pop
fldenv
xchg
fmul
hlt
call
imul
out
(bad)
test
cdq
inc
pop
nop
ds
out
inc
xor
fild
test
mov
sub
xchg
hlt
add
int
shl
pop
cld
sub
outs
adc
stos
xchg
enter
les
shr
lds
add
jmp
mov
jmp
sub
sbb
nop
cmps
in
aaa
aam
mov
adc
jmp
mov
mov
adc
lods
or
call
xor
dec
mov
test
in
(bad)
mov
sbb
popa
aad
int3
adc
or
and
test
int3
sbb
scas
repnz
or
outs
fst
or
xchg
mov
cwde
ins
int3
mov
or
fstp
clc
mov
sub
out
in
aad
mov
movs
fsubr
dec
fsub
xchg
fild
iret
sbb
hlt
sub
xchg
fs
or
std
jo
ss
push
xlat
sti
push
scas
xchg
es
sub
push
or
call
bound
dec
add
mulps
add
arpl
aam
push
lods
(bad)
fsubrp
xchg
pop
lds
dec
xchg
push
pop
push
pop
add
fs
sbb
dec
pmovmskb
mov
cmp
cld
sub
fwait
jp
mov
inc
ficomp
mov
dec
cmps
rcl
pop
cmps
idiv
cmp
shl
inc
js
fistp
xchg
xor
mov
push
cmp
cmp
xchg
mov
sbb
icebp
push
jo
(bad)
cli
pop
fsubr
cli
xor
js
rol
and
or
and
stos
adc
scas
cmp
fs
push
clc
push
or
and
mov
repz
lahf
call
sub
popf
bound
outs
xchg
inc
add
jmp
loope
sub
jle
enter
add
leave
mov
pusha
and
add
jg
ret
int
sub
cld
scas
pop
cdq
xor
jge
test
test
sbb
(bad)
jmp
test
push
jae
mov
sub
aas
xchg
add
dec
mov
cmp
mov
(bad)
jb
das
lods
scas
sbb
lods
imul
mov
jb
ins
ret
sbb
out
ret
or
sbb
ds
push
or
(bad)
sbb
mov
mov
xor
mov
pop
inc
sbb
fs
pusha
in
scas
rcl
cmp
icebp
div
mov
sub
stos
enter
in
dec
jnp
push
nop
fs
cli
mov
call
in
dec
test
push
imul
lahf
push
bound
cmp
ret
cmp
dec
je
push
aas
out
mov
cwde
movs
shl
push
bound
lahf
scas
iret
dec
sahf
jnp
fist
cmp
data16
cmp
outs
push
mov
stc
jmp
add
adc
outs
xchg
out
aaa
add
mov
data16
lea
fnstsw
test
dec
jmp
mov
jnp
xor
push
cmp
add
clc
xchg
add
ss
adc
pop
mov
fstp
retf
aas
xor
jl
aas
sbb
mov
retf
jl
xor
popf
sbb
add
cmps
add
vcvtdq2pd
add
mov
pop
xor
sbb
lds
(bad)
pop
xchg
ficom
mov
aaa
into
pop
inc
adc
fistp
sbb
arpl
fild
pop
(bad)
scas
mov
lock
test
pushf
and
dec
call
dec
jno
add
or
cmp
shl
pop
stos
loop
fcom
jae
dec
inc
mov
cld
dec
ins
or
ja
push
mov
test
inc
sub
inc
lahf
movs
mov
dec
mov
push
sahf
movs
xor
cli
out
icebp
div
push
mov
ja
leave
test
sub
movq
enter
lds
cli
loopne
add
adc
retf
push
jns
xor
or
adc
push
icebp
pop
gs
cmp
xchg
pop
leave
data16
aas
mov
push
adc
xchg
popa
fs
xchg
js
out
or
jno
mov
xchg
inc
push
cwde
ds
retf
test
movs
sbb
mov
inc
leave
cmp
mov
mov
std
sub
lock
add
in
idiv
sbb
push
das
push
outs
push
mov
(bad)
fisttp
fcmove
mov
mov
in
inc
adc
add
out
sub
pop
cmp
outs
das
add
lock
mov
mov
bound
call
test
aad
out
aad
dec
cmps
dec
pop
push
add
inc
sbb
loope
mov
cmps
(bad)
and
xor
out
imul
retf
out
aaa
sbb
fmul
int
mov
sub
cmp
add
xor
push
retf
adc
lods
shr
test
rcr
adc
dec
test
mov
push
stc
push
jle
xchg
rcr
push
push
and
jb
fsubr
sub
ins
dec
shr
sub
retf
xchg
daa
jne
cmp
xor
ss
(bad)
sar
wrmsr
mov
push
(bad)
jmp
loopne
sbb
iret
clc
and
fwait
or
and
mov
cmp
in
push
ins
inc
pop
pop
or
(bad)
outs
movs
mov
aam
test
adc
mov
add
pop
push
jle
xlat
inc
out
xchg
or
mov
cdq
pop
push
mov
mov
daa
outs
and
add
fcomp
sub
push
int
cmp
mov
jno
and
out
rep
push
fistp
(bad)
jle
jp
(bad)
aad
inc
pop
jb
mov
test
mov
scas
xchg
pop
mov
pop
lods
mov
int
(bad)
dec
xchg
dec
and
js
jmp
adc
sbb
lods
mov
dec
cmp
sbb
xchg
scas
fs
iret
cmp
push
loop
sbb
fisub
sub
sbb
sbb
jns
int
add
neg
jg
xor
mov
je
je
push
ins
scas
add
outs
mov
pop
hlt
sub
dec
xor
push
pop
push
stos
pop
xor
test
dec
jmp
cmp
jmp
sub
mov
shl
adc
dec
stc
cmp
cdq
add
adc
ss
push
repz
(bad)
mov
lods
jle
jnp
fucompp
jbe
fsubr
neg
into
test
into
mov
iret
cdq
mov
mov
ret
sub
jb
inc
pop
jecxz
movs
inc
xchg
pushf
mov
mov
jbe
xor
aam
push
and
jge
adc
jae
ja
stos
ins
push
(bad)
imul
outs
and
arpl
xchg
addr16
movs
pop
loope
jb
add
or
inc
ret
hlt
jne
inc
add
stos
test
stos
loopne
fisttp
iret
js
aam
adc
mov
pushf
mov
dec
and
jae
jnp
xor
retf
popf
push
sub
aas
sar
mov
xlat
jae
jmp
clc
dec
or
loop
shl
clc
ds
scas
sub
aad
cmp
inc
mov
fnstsw
mov
cmp
sub
test
mov
addr16
sub
pop
(bad)
(bad)
jl
sbb
outs
mov
pop
push
xor
lods
mov
push
in
cmps
(bad)
outs
mov
cmps
push
push
fild
mov
push
dec
and
xor
add
adc
js
inc
jmp
sub
mov
sub
or
sub
mov
scas
inc
les
jg
popf
fld1
call
bnd
(bad)
mov
inc
je
jmp
jecxz
fistp
or
adc
mov
mov
movs
sub
push
out
repnz
outs
neg
inc
into
push
frstor
sub
mov
(bad)
(bad)
sub
adc
mov
sbb
lock
ss
xor
les
call
repnz
xchg
mov
sahf
fidivr
mov
(bad)
xor
repnz
inc
rcl
fisttp
pusha
mov
imul
ins
or
or
test
enter
dec
xchg
popa
sahf
cmps
outs
dec
test
loop
adc
js
iret
pop
out
push
add
pop
(bad)
pop
lahf
js
fwait
out
push
or
daa
mov
xchg
or
popa
cmc
inc
jns
test
out
in
enter
ins
dec
cwde
pop
xor
jno
mov
mov
mov
xchg
mov
push
icebp
mov
inc
cmp
into
adc
fstp
rol
enter
add
adc
outs
out
data16
mov
bound
out
pushf
test
jg
xor
adc
lods
jmp
sub
test
lods
cmp
add
scas
push
aaa
pusha
stos
add
enter
movs
push
nop
sub
iret
xchg
xchg
out
pop
xor
pop
jno
sbb
fiadd
mulps
fs
and
sub
gs
or
jmp
fsub
xchg
ins
push
test
and
add
lods
jmp
jnp
xchg
jae
xchg
idiv
aas
pop
outs
addr16
cmps
idiv
add
and
jno
cmp
dec
push
mov
es
add
nop
enter
xchg
cli
psubusb
cmp
lea
pop
jnp
and
(bad)
pop
int
sub
add
xchg
fnstenv
popa
mov
pushf
shl
inc
cwde
jmp
jp
and
movs
hlt
sbb
cwde
xor
loope
into
popa
jmp
pop
and
xor
or
scas
pop
xchg
fidivr
ss
mov
pop
mov
or
loopne
idiv
add
push
mov
push
mov
ret
les
gs
repnz
lds
ja
inc
sbb
sbb
aad
mov
pop
xchg
imul
ret
mov
add
in
ins
std
pop
popa
mov
arpl
repz
adc
fwait
outs
cmp
xchg
aad
pop
idiv
dec
movs
stc
cmp
sbb
mov
nop
cmp
xlat
mov
jmp
adc
ror
fcmovb
aas
push
xchg
sub
mov
stos
adc
ja
and
imul
or
ss
loop
jns
xchg
add
fsub
loope
daa
in
ror
add
rol
mov
icebp
jp
lods
ins
cmps
lods
sub
movs
cdq
icebp
adc
mov
leave
or
and
pop
loop
mov
xor
addr16
sbb
arpl
jl
adc
jge
aas
xchg
and
out
or
push
and
repnz
mov
popf
data16
aaa
stos
sahf
adc
neg
cmp
and
dec
mov
enter
jge
mov
cmp
dec
add
mov
frstor
in
jmp
scas
jno
int3
ins
adc
lds
adc
lea
xor
inc
in
adc
rol
out
or
pop
or
sbb
(bad)
in
cmps
(bad)
aaa
adc
fiadd
cmps
outs
fdivr
mov
lock
push
int3
(bad)
push
or
inc
dec
push
push
ficom
rcl
aas
fwait
and
push
adc
ins
pop
loop
and
xor
adc
sub
xor
aam
in
dec
fstp
cmp
mov
es
adc
xchg
rcr
popf
inc
or
pause
iret
cld
popf
sub
cwde
aam
aas
int3
ja
inc
stos
call
in
scas
adc
jb
push
dec
or
and
sbb
jmp
dec
sub
push
pushf
mov
sbb
leave
adc
jb
jne
mov
lods
ds
mov
adc
in
fsub
jle
lahf
mov
maxps
outs
push
retf
sbb
xor
hlt
add
dec
push
push
repz
cmp
mov
call
enter
sbb
add
mov
xor
mov
lock
lds
jmp
mov
sbb
retf
pushf
xchg
test
push
out
(bad)
xchg
xchg
add
inc
int
xchg
xchg
out
dec
repnz
adc
in
dec
into
sbb
adc
and
inc
or
ins
aam
or
cld
ja
or
out
jnp
ror
sti
add
sbb
push
fdiv
loop
pop
mov
pushf
inc
inc
shl
scas
push
sti
jnp
ins
add
xor
fwait
mov
pop
inc
jmp
xor
sub
stc
fs
xchg
ret
mov
out
aam
sub
ds
lock
dec
xchg
xlat
sub
hlt
in
rcr
jmp
ud0
ja
(bad)
repz
push
pusha
fidivr
cmc
out
in
stos
dec
mov
repnz
fadd
mov
mov
sbb
cmc
cld
xchg
mov
add
cmp
xchg
test
inc
push
loop
test
call
and
fisttp
pushf
movs
cs
(bad)
xor
cmps
push
xor
xor
arpl
xor
outs
sbb
movs
push
inc
dec
test
jns
inc
adc
or
mov
pop
pushf
push
loope
out
int3
push
dec
dec
aas
fisttp
and
jno
sbb
jne
(bad)
mov
(bad)
jno
mov
stc
or
das
dec
cmp
xchg
js
dec
aaa
adc
mov
push
inc
call
pop
jbe
repnz
xchg
or
xchg
pop
cmps
sub
or
(bad)
mov
pop
sbb
jl
dec
and
pop
nop
test
leave
xchg
retf
cwde
nop
jmp
loope
repz
mov
(bad)
adc
add
and
push
xor
leave
jne
or
fisub
fistp
pusha
mov
and
stc
mov
fnstsw
dec
inc
outs
cmp
cmp
(bad)
or
inc
xchg
pop
jb
push
jmp
jb
xchg
pop
dec
or
jmp
fadd
pop
push
add
scas
pop
call
sub
xchg
sub
cpuid
pop
push
shl
mov
mov
(bad)
jno
inc
inc
shl
inc
mov
pop
dec
fwait
sub
inc
jbe
ror
or
mov
and
or
cmps
xlat
mov
rcr
inc
fild
cmp
push
leave
pop
inc
xchg
jnp
leave
jns
adc
je
pop
or
bnd
jge
in
push
fcomi
dec
lahf
sub
or
call
rcl
sub
imul
shl
out
mov
pop
sbb
test
mov
ret
(bad)
outs
nop
jbe
cmp
add
popa
xchg
into
stos
loopne
mov
je
and
je
inc
xlat
pop
sub
dec
cmc
pop
add
stos
cmp
xchg
out
cdq
sub
and
inc
xor
and
js
movs
lahf
add
ds
add
inc
and
xchg
in
sub
(bad)
mov
cwde
mov
xor
das
cmps
dec
mov
xchg
gs
jbe
inc
sub
or
pop
sub
cmp
mov
push
inc
aam
pop
cli
int3
and
out
loope
cmp
xlat
xchg
pop
jp
(bad)
cmp
xor
mov
jo
mov
inc
lea
mov
stos
mov
fstp
dec
push
rol
call
fs
mov
xchg
out
mov
fmul
shr
cmovns
jmp
cs
enter
or
in
repz
loopne
and
inc
jmp
hlt
sbb
inc
or
sub
dec
fmulp
sub
loop
pushf
loopne
push
or
mov
xchg
retf
cwde
inc
in
xchg
aam
xor
cs
gs
and
push
push
mov
dec
mov
jge
mov
pop
stos
shr
cmp
mov
mov
aaa
sbb
mov
xchg
aas
aaa
mov
dec
sbb
ret
movs
cld
jecxz
sub
loopne
iret
pop
test
dec
dec
fs
ret
rol
out
pop
sub
(bad)
jb
or
gs
push
jns
pop
cdq
sbb
xor
mov
mov
int
ret
push
int3
jmp
mov
sar
mov
test
pushf
pop
and
inc
test
jp
jbe
inc
add
rcr
fstp
sbb
sbb
cmp
inc
out
cmp
xchg
push
jb
pop
xchg
aad
imul
cmp
jmp
movs
addps
cdq
imul
xchg
mov
mov
or
cmp
pop
add
jbe
icebp
jne
imul
inc
in
outs
ins
inc
jmp
lock
cmp
cmps
daa
call
xor
or
xchg
stos
stos
xor
or
cld
test
sahf
push
push
cmp
xchg
repnz
outs
jp
sub
bound
xor
xchg
inc
jns
mov
iret
ret
cs
jo
arpl
arpl
dec
xchg
adc
sbb
push
mov
jge
lds
lods
icebp
xlat
mov
cmps
or
out
pop
mov
popa
outs
pop
ds
inc
lock
jb
xor
les
sbb
je
cld
mov
mov
sar
mov
ins
push
mov
adc
pop
mov
and
jle
inc
cmp
neg
fiadd
jle
adc
cmp
mov
xchg
mov
test
retf
jnp
cli
adc
std
mov
add
and
loope
pusha
adc
pop
xor
inc
adc
test
dec
jnp
fnstcw
add
icebp
inc
inc
pop
sbb
mov
stc
call
lea
sti
jle
dec
jle
pop
data16
mov
ficom
add
dec
loope
inc
pop
push
jo
lods
(bad)
push
test
cs
dec
jnp
ret
xchg
sti
xchg
jbe
cmc
inc
push
add
mov
aad
sbb
std
jl
mov
jae
dec
add
add
cdq
popf
mov
imul
inc
aad
fbld
dec
mov
imul
lods
mov
lods
pop
arpl
std
sbb
fnstcw
pop
call
xchg
push
call
pop
cmc
mov
enter
sar
sub
stos
(bad)
adc
or
test
popa
sub
sbb
jns
cs
pop
mov
ins
cmp
or
and
stc
mov
dec
mov
pop
stos
movs
xchg
ds
sbb
arpl
lahf
and
iret
xchg
jns
add
iret
or
in
(bad)
jmp
mov
dec
mov
cmp
sbb
aaa
inc
jne
out
sbb
test
adc
mov
sub
xor
and
xchg
push
push
adc
and
outs
sbb
fadd
(bad)
sti
adc
fmul
imul
stos
ud2
lock
sbb
es
add
dec
sbb
mov
int3
mov
cdq
dec
xchg
mov
xor
cdq
outs
fs
fcom
fs
mov
aad
das
ja
xlat
addr16
out
pop
pop
dec
adc
pop
push
dec
jle
mov
lock
adc
mov
cmp
sbb
xchg
mov
jo
retf
hlt
adc
mov
shl
sahf
pushf
es
je
mov
cld
(bad)
mov
test
fcom
mov
ret
cmp
adc
dec
ss
clc
fidivr
fisttp
lods
imul
popa
xor
test
stc
inc
dec
iret
mov
dec
xor
inc
sbb
cmp
xchg
mov
jmp
jmp
repnz
xor
in
adc
dec
mov
scas
jmp
rcl
rol
sub
mov
clc
and
cdq
push
dec
inc
cmc
sbb
cmp
out
cmps
sar
lds
jle
sbb
pop
jmp
cdq
push
inc
or
push
(bad)
jo
xlat
pushf
jp
mov
es
pop
rcl
icebp
add
cmps
retf
scas
in
xor
adc
ss
mov
cmp
mov
aam
mov
sub
(bad)
les
stos
dec
lahf
add
clc
jns
mov
xchg
xchg
mov
and
loop
fidiv
arpl
jmp
xor
je
push
pop
jge
sar
ror
scas
mov
dec
jmp
das
outs
xlat
mov
pop
(bad)
(bad)
aaa
enter
inc
mov
test
jno
mov
push
jae
sub
push
lock
aas
loopne
inc
jns
adc
cmps
dec
push
or
pop
imul
fs
jecxz
cmps
std
rcl
faddp
loop
pushf
dec
or
ins
daa
pop
mov
out
(bad)
jmp
dec
add
push
dec
fld
mul
jle
mov
cs
jmp
dec
inc
push
mov
adc
sar
ins
inc
and
inc
sbb
cmp
fldpi
test
sbb
mov
sahf
mov
dec
arpl
jmp
sub
scas
test
jle
cmp
mov
ror
jmp
(bad)
add
jp
lods
and
(bad)
cmp
test
sbb
inc
inc
shl
lock
pop
jp
pop
daa
jge
dec
inc
pop
fsub
daa
mov
mov
cmps
sub
cdq
dec
mov
pop
mov
jg
je
jmp
inc
mov
daa
and
and
cmps
pop
cmp
test
xor
push
mov
lock
and
inc
aad
adc
pusha
add
xor
jb
rcr
xor
push
adc
mov
add
clc
push
popa
mov
add
xor
cli
shl
jp
push
xchg
mov
or
sar
pop
es
clc
adc
and
stos
mov
or
sbb
js
jp
or
iret
push
cdq
sub
xchg
dec
jl
push
jmp
jp
xchg
and
sti
dec
fs
add
mov
out
push
stc
inc
out
xchg
bound
inc
cmp
in
pushf
pop
inc
xor
xchg
gs
dec
pushf
add
ins
pop
mov
add
pop
ret
ins
call
scas
and
dec
add
sub
xor
push
movsx
aaa
mov
ret
(bad)
pop
ret
mov
cwde
jnp
fst
cmp
cmp
or
sub
cmp
aaa
mov
movs
adc
push
loop
pop
clc
cs
fdiv
sub
jae
mov
cmp
adc
lahf
xor
mov
or
or
cmp
inc
mov
mov
leave
mov
das
lock
sub
dec
mov
push
cmp
mov
lods
mov
test
les
inc
call
ror
loope
xor
add
imul
out
dec
pop
inc
stos
ja
sub
push
cwde
ins
and
push
in
ins
out
inc
cld
imul
sub
xchg
(bad)
leave
dec
sbb
mov
dec
int
jno
fdivr
in
jb
inc
aas
mov
cs
scas
iret
and
dec
pusha
into
cmps
scas
inc
pop
pop
dec
sub
(bad)
es
jae
loop
scas
addr16
inc
jmp
sub
in
mov
mov
and
hlt
addr16
adc
daa
sahf
push
aas
sub
xchg
jle
push
adc
arpl
or
mov
push
rcr
mov
cmp
jae
adc
sbb
pop
test
fisttp
les
mov
cmp
ja
xchg
bound
mov
sbb
sbb
ror
aam
add
jne
dec
and
xchg
xor
into
push
mov
int3
fistp
gs
into
out
(bad)
out
mov
push
jp
or
pop
sti
cmp
mov
jne
outs
sahf
cmp
sbb
(bad)
cld
inc
push
fmul
xor
cmps
and
pop
mov
retf
fbstp
xor
bound
sbb
inc
xchg
clc
xchg
sbb
popf
push
inc
pusha
mov
xchg
test
mov
call
or
jo
stc
out
adc
movs
lods
cmp
rcr
lahf
push
(bad)
pop
leave
and
pop
cli
sub
jnp
mov
arpl
xor
out
inc
inc
bound
sub
shl
mov
pop
and
push
cmps
enter
sbb
mov
popf
scas
popa
call
into
inc
and
cmp
xchg
ds
and
loope
call
pop
mov
push
(bad)
icebp
and
popa
mov
mov
push
and
in
(bad)
push
cmps
push
(bad)
mov
push
ins
icebp
es
fiadd
jbe
cmps
sbb
xor
test
xchg
clc
retf
jg
fiadd
mov
cs
dec
int3
dec
sbb
(bad)
lods
xor
mov
cmp
mov
iret
icebp
(bad)
mov
sahf
and
inc
push
jae
out
xor
popa
dec
ins
rcl
jns
mov
inc
daa
push
mov
js
mov
cmp
inc
and
sbb
jne
ds
sub
pop
out
dec
dec
adc
ret
div
xchg
mov
(bad)
mov
icebp
inc
mov
jne
xor
gs
sbb
xor
pop
ins
xchg
fstp
cmp
retf
xchg
ja
xlat
mov
pusha
call
test
mov
ror
test
jns
jbe
pop
sti
xchg
add
sub
mov
push
dec
retf
inc
xor
cmps
mov
push
pop
pop
mov
fimul
(bad)
int3
rcr
lock
push
jo
adc
dec
(bad)
and
scas
sbb
outs
and
pop
or
inc
mov
pushf
push
push
pop
jl
sti
in
xchg
iret
add
cwde
ds
test
repz
xor
pop
jo
mov
rcr
fs
es
in
(bad)
js
sub
xchg
cwde
sahf
sbb
ficomp
cmp
sti
int3
loop
xor
cmc
or
mov
mov
std
lds
scas
xchg
push
dec
fild
mov
test
repz
sub
jnp
cmp
mov
adc
lods
rcr
aad
gs
movs
xchg
push
lahf
dec
sub
retf
int3
clc
xor
gs
adc
adc
mov
push
fcom
pop
cmps
xlat
inc
dec
les
ins
shl
mov
mov
popf
push
or
sub
xchg
ins
movs
adc
test
or
jne
in
shl
xor
jmp
xchg
in
das
fild
adc
dec
cmc
xchg
ffree
retf
pop
adc
imul
fstp
and
mov
jbe
rcr
gs
addr16
fisub
xchg
and
outs
lods
in
lahf
cld
ret
mov
(bad)
mov
lods
outs
fisubr
jl
mov
jp
mov
xor
pop
lods
(bad)
add
aad
or
fsqrt
jae
les
movs
pop
jmp
sti
and
outs
mov
xchg
push
push
dec
loope
inc
stc
xor
mov
test
or
pop
xchg
jp
sub
add
or
mov
sbb
js
adc
xchg
and
and
hlt
xchg
test
mov
inc
cmp
call
mov
mov
or
ins
addr16
push
bound
mov
push
out
mov
cwde
fcomp
cld
pop
push
sub
ret
std
sub
test
adc
xor
fs
inc
int3
adc
mov
adc
stos
dec
repnz
ret
ret
jmp
shr
movs
popf
push
rcl
in
scas
mov
test
adc
neg
into
sbb
mov
push
test
adc
in
mov
cli
jnp
pop
cmp
mov
pusha
retf
fst
jecxz
cmp
or
(bad)
es
push
popf
xchg
push
inc
vcmpss
imul
pop
mul
outs
xor
ret
cld
dec
sbb
imul
(bad)
rcl
stos
retf
adc
lahf
dec
call
inc
mul
push
fdivr
ss
and
adc
xchg
cs
call
mov
lock
out
dec
pushf
xor
jne
xlat
stos
sub
(bad)
(bad)
mov
lods
test
xor
jg
inc
lea
xchg
outs
je
adc
out
mov
cld
stc
xor
mov
(bad)
dec
lds
ret
inc
xor
cli
cli
add
adc
cmp
cmp
adc
push
mov
push
or
clc
ins
xor
mov
sub
inc
test
retf
mov
popf
inc
xchg
and
add
js
imul
push
mov
push
xor
cdq
scas
xchg
or
sbb
jge
and
test
add
mov
(bad)
lods
mov
jmp
pop
ss
xor
and
xchg
mov
or
xchg
pop
sub
shl
pusha
mov
mul
jle
mov
jp
push
jge
xor
cmps
stos
retf
mov
sub
sbb
fcomp
push
out
(bad)
cld
adc
jg
dec
fs
enter
mov
pop
inc
pop
sbb
push
xor
stos
lods
pop
dec
xchg
popa
sar
or
ds
das
xchg
loope
repnz
adc
fs
movs
ins
pop
push
rcr
imul
shl
out
outs
enter
js
xor
cmp
mov
vpavgb
sbb
xor
push
inc
loop
je
popa
adc
sub
push
popf
sar
cld
fsubr
call
fisub
pop
jnp
nop
inc
into
sbb
cs
aad
sub
cmp
fs
sub
int
pop
or
pop
ins
push
frstor
inc
out
ret
in
les
add
xor
hlt
adc
cmc
mov
in
test
xlat
cmp
cmp
push
inc
repnz
xchg
sbb
mov
add
mov
pop
mov
nop
imul
movs
xor
clc
test
sbb
dec
cmps
sbb
call
pop
dec
or
or
add
jl
xchg
mov
sub
fwait
shl
cs
sbb
cmp
or
jns
outs
sub
and
lahf
xor
call
cmp
pop
mov
das
pop
scas
add
data16
call
fcomp
mov
adc
mov
repnz
mov
shl
movs
fdiv
and
mov
mov
xchg
retf
stos
push
into
mov
sub
or
jecxz
call
cli
popa
adc
int3
xor
jo
mov
jmp
movs
xchg
cmp
or
lods
ror
adc
leave
stos
cmps
leave
lea
enter
dec
or
push
data16
aad
ret
mov
xor
mov
jb
mov
sar
pop
mov
mov
jmp
jbe
(bad)
fld
jns
adc
adc
sar
jg
mov
jae
jb
pop
inc
out
mov
stos
pop
jle
push
(bad)
inc
test
and
mov
jl
sbb
xchg
mov
out
xlat
retf
adc
xchg
aaa
adc
cwde
ins
lods
xor
and
aaa
jp
int3
out
adc
dec
out
dec
xchg
call
inc
sbb
add
and
test
jp
ds
mov
shr
xchg
adc
(bad)
cli
mov
or
stos
sbb
out
jns
out
cmp
das
int3
xchg
ret
adc
pop
iret
mov
pop
outs
sbb
call
scas
lock
dec
je
fadd
jecxz
lods
ret
retf
bound
into
xor
mov
push
mov
mov
cmp
mov
adc
popf
test
adc
sbb
movs
sar
loop
mov
lods
das
dec
out
aam
push
out
lock
dec
jg
mov
mov
sahf
adc
fbld
(bad)
inc
dec
fldenv
add
or
in
(bad)
cmp
mov
sahf
repnz
pop
jne
mov
push
xchg
mov
ds
push
push
xchg
repz
pop
test
inc
outs
xor
aas
stos
sub
shl
stos
mov
mov
les
ror
retf
jecxz
xchg
call
(bad)
mul
xor
mov
out
jmp
push
inc
adc
add
jge
in
cmp
cmp
stos
out
xchg
arpl
lods
movs
call
ins
call
enter
or
das
je
xor
jo
mov
add
inc
cmp
push
pop
call
inc
neg
test
shr
loop
jb
repz
adc
lock
adc
xchg
scas
mov
std
xchg
sbb
pusha
out
xchg
or
int
(bad)
popf
ins
jo
test
shr
add
inc
push
cld
cmc
shr
out
jmp
sahf
push
sub
loope
mov
dec
test
cli
mov
jne
pop
loope
cmp
ret
xor
add
xchg
cs
jbe
add
fcom
sahf
je
lods
es
test
jecxz
inc
das
xchg
xor
mov
movs
sar
out
dec
lahf
(bad)
iret
jnp
xor
rcr
pop
mov
sub
stos
dec
fdivr
jbe
mov
cmp
dec
mul
stos
cmps
sub
out
push
test
rcr
aaa
mov
lea
ror
mov
xor
mov
dec
dec
fst
cmp
imul
push
xchg
enter
ret
(bad)
inc
adc
shr
scas
dec
aas
adc
jbe
hlt
inc
or
mov
and
js
call
push
add
test
jae
lods
sti
sbb
gs
aaa
dec
pop
pop
ja
inc
push
dec
dec
sti
cdq
ss
mov
adc
inc
fst
pop
cmp
or
enter
into
cmp
ja
inc
push
and
aas
lahf
mov
mov
repnz
cli
ror
jnp
or
rol
xchg
dec
pop
std
enter
mov
push
pushf
xlat
jmp
int
mov
dec
out
xchg
sbb
sbb
xor
jg
enter
xchg
retf
mov
adc
out
test
mov
or
lods
into
sub
push
dec
daa
cmc
and
sbb
jnp
in
dec
jae
jge
(bad)
unpcklps
mov
add
or
rol
add
adc
fwait
cdq
xchg
fmul
jecxz
fimul
mov
dec
sbb
mov
retf
movs
je
push
push
and
in
adc
push
enter
or
adc
(bad)
jnp
scas
push
inc
jmp
pop
mov
fistp
jmp
mov
in
stc
mov
fst
lods
aad
pop
jl
or
sub
mov
xlat
dec
jmp
loopne
dec
adc
xor
(bad)
call
mov
fninit
xchg
jno
mov
sar
rcl
movs
iret
add
push
addr16
push
and
cmp
and
xchg
retf
dec
mov
shl
xchg
push
cmps
sub
push
repz
adc
push
jbe
mov
std
push
mov
daa
outs
sahf
jns
mov
lods
aad
ins
int3
lods
mov
push
xchg
fcmovu
es
inc
je
cmp
add
push
xlat
movs
push
mov
fcom
mov
sub
dec
dec
in
test
inc
push
dec
push
jb
add
ret
sbb
stos
push
cmp
out
retf
out
mov
leave
sub
loop
dec
cmp
inc
cmps
inc
ret
out
pop
jne
fisub
push
mov
pop
into
pop
mov
pop
arpl
or
cdq
and
push
out
ins
adc
(bad)
out
mov
add
dec
inc
pop
cli
sub
jnp
movs
dec
inc
std
cmp
test
jle
pop
push
pop
fisubr
sti
in
xor
jno
mov
(bad)
mov
pop
pop
xchg
sub
add
loopne
add
out
inc
mov
cdq
outs
sub
fs
push
loopne
push
inc
push
mov
cmc
inc
daa
push
jl
lahf
mov
sub
jb
and
inc
jbe
adc
(bad)
(bad)
pop
(bad)
sub
or
je
mov
mov
fadd
int3
dec
mov
mov
push
imul
out
cmp
xchg
inc
dec
loopne
neg
sbb
popf
ja
mov
add
stos
aas
push
(bad)
cmp
dec
pmullw
pop
sar
push
or
jno
mov
adc
cmps
int
sbb
jmp
add
scas
sbb
retf
mov
fisubr
adc
xor
(bad)
push
arpl
add
xor
pop
mov
sbb
arpl
sti
stc
adc
(bad)
rcl
outs
leave
lods
les
test
inc
retf
mov
push
call
sbb
push
imul
aas
test
out
cmps
stc
and
mov
retf
xor
pop
cdq
imul
mov
add
aad
nop
jno
sti
lds
sbb
or
dec
push
cmp
mov
in
xchg
push
fisub
sbb
lahf
adc
fwait
jno
mov
and
dec
mov
cmps
mov
mov
adc
(bad)
mov
lea
mov
cmp
mov
ss
mov
(bad)
ja
cmp
xor
mov
ins
in
jb
jne
pop
loop
cli
push
hlt
xlat
jns
das
data16
test
push
push
mov
xor
imul
(bad)
call
pop
std
aad
icebp
mov
push
add
pop
scas
(bad)
repnz
das
in
cmps
je
pop
push
pop
jmp
stos
scas
cs
cmp
push
cmp
mov
aas
call
add
xchg
and
add
js
add
sub
loopne
xchg
outs
aas
push
sbb
(bad)
loope
sbb
adc
lods
pushf
xchg
add
pusha
xor
ins
pop
lods
data16
(bad)
je
xor
retf
mov
mov
imul
mov
xchg
pop
jle
fidivr
mov
stos
sub
xchg
fcmove
xchg
and
mov
mov
mov
std
stos
jl
rcl
into
fnstsw
adc
inc
add
jmp
cwde
out
mov
xchg
test
out
xlat
ret
cmc
push
mov
pushf
mov
ins
movs
ret
add
mov
fsubrp
popa
mov
sti
xchg
xchg
dec
jmp
pushf
jae
(bad)
mov
sub
jb
sti
add
(bad)
fbld
mov
test
pop
cwde
retf
mov
call
test
sbb
leave
mov
pop
xor
inc
retf
ins
pop
adc
ins
loop
mov
mov
jmp
dec
jns
pop
je
and
cs
cdq
gs
cmp
xchg
mov
xor
pop
hlt
jge
add
and
mov
add
icebp
or
sbb
(bad)
jg
jmp
xor
cmp
movs
jecxz
xor
or
add
rol
mov
lods
out
adc
pop
stos
mov
inc
inc
movs
xchg
cwde
les
push
rol
pop
adc
xchg
xchg
dec
(bad)
push
lods
fisttp
and
pop
sbb
and
sahf
inc
cmp
mov
fbld
enter
sbb
cmps
and
mov
adc
add
lods
pop
push
pop
jg
mov
pusha
inc
mov
hlt
retf
mov
stos
leave
cli
jl
jecxz
xchg
ja
jb
pop
ss
mov
fidiv
or
or
pop
sbb
lods
push
clc
nop
pop
in
fs
sub
loop
xor
ds
mov
sub
dec
mov
mov
or
and
pop
mov
xchg
aad
add
mov
jmp
or
mov
mov
push
pushf
cmp
add
pop
in
jnp
lds
dec
call
adc
jmp
popf
pop
test
xchg
xlat
sub
inc
jns
repnz
jge
ror
dec
jae
and
jle
jmp
xchg
(bad)
xor
lock
push
scas
popf
into
mov
dec
loop
std
je
sub
lahf
pop
xor
movs
enter
and
mov
repnz
mov
fs
outs
js
mov
jecxz
sub
inc
imul
jno
rol
push
and
dec
sbb
rol
and
push
adc
jmp
sti
(bad)
jge
ds
sub
les
mov
pop
(bad)
xor
or
dec
pop
rol
scas
push
jg
jne
mov
sti
enter
ins
pushf
jbe
pushf
mov
xor
les
add
mov
sub
and
mov
xor
jp
xor
lods
xor
stos
cmp
mov
outs
and
out
xchg
adc
mov
aad
or
pop
jns
es
or
dec
adc
xor
xor
and
jne
xchg
leave
sbb
xchg
int3
sub
test
push
cmp
iret
inc
xlat
mov
repnz
fld
cmp
fimul
xor
shr
or
fdivr
xchg
push
(bad)
mov
and
outs
add
lods
push
inc
mov
pop
push
retf
ret
aam
mov
dec
sbb
rcr
je
loope
and
dec
inc
mov
and
rcr
sub
mov
dec
(bad)
push
or
jns
lds
js
aas
ins
(bad)
movs
jns
jno
repnz
loop
sti
push
fcomi
xor
xchg
xchg
add
movs
cld
dec
add
push
mov
jmp
xchg
(bad)
ds
sti
push
sub
jecxz
jbe
imul
mov
mov
dec
sub
imul
mov
jge
mov
add
or
retf
add
mov
lods
and
(bad)
mov
cmc
icebp
adc
mov
sub
pop
dec
dec
pop
jno
out
out
(bad)
fdivr
scas
in
out
enter
xor
pop
in
sub
das
jns
stos
jle
and
mov
jmp
jns
xor
call
arpl
or
push
lea
cmps
fdivr
leave
pop
pop
fdiv
jp
push
sub
mov
scas
(bad)
mov
sbb
lahf
cmp
adc
jns
xor
retf
(bad)
cld
sub
jbe
mov
call
mov
cmc
dec
and
push
bound
aaa
je
dec
jg
mov
xor
inc
retf
mov
fdivr
ins
mov
mov
not
mov
out
mov
sbb
test
push
or
fnsave
ret
jno
pop
xchg
xchg
adc
and
inc
mov
cs
fsub
mov
int
xchg
shl
sub
aas
test
xchg
shl
movs
not
jbe
sub
ret
inc
shl
cmps
ds
mov
and
mov
mov
mov
and
cs
and
jle
add
xchg
call
in
mov
sub
imul
cdq
cld
dec
movs
test
(bad)
push
enter
(bad)
std
sub
cmp
aam
in
push
cli
inc
xchg
ss
sub
movs
inc
mov
ret
cli
ror
pop
movs
pop
and
xchg
shl
arpl
sub
inc
or
add
adc
(bad)
push
add
or
dec
fstp
lods
aaa
xor
idiv
fmul
dec
push
mov
or
retf
dec
rcr
adc
enter
adc
in
xchg
push
jge
cli
xor
in
mov
das
popa
(bad)
mov
cli
or
fidiv
repnz
int3
push
hlt
out
pop
cld
fs
enter
dec
mov
es
mov
or
pop
aas
in
cdq
(bad)
shl
cwde
test
jne
and
xor
cdq
aaa
xor
mov
sub
xchg
inc
sub
fst
sub
jecxz
and
mov
data16
imul
in
adc
scas
xchg
das
call
xchg
stos
adc
fistp
jnp
push
mov
push
sahf
sti
mov
push
inc
push
pushf
cli
int
push
push
cmc
adc
popf
jae
not
add
retf
cmp
lahf
(bad)
xor
loopne
and
add
push
(bad)
xchg
scas
ds
sub
mov
stos
xchg
sti
dec
stos
add
xor
push
and
or
pop
imul
ret
cli
popf
mov
leave
mov
mov
(bad)
lahf
rcl
push
cmp
int3
(bad)
dec
div
test
pop
mov
icebp
imul
sahf
sub
xchg
jmp
(bad)
mov
mov
(bad)
mov
jl
xchg
lods
sub
pop
aad
fcomp
cmp
jle
pop
or
aas
jo
scas
fmul
dec
out
adc
mov
popf
fdivr
add
je
test
fmul
shr
or
retf
cmp
iret
dec
in
fisttp
push
sbb
or
in
popa
push
ret
leave
add
dec
or
sub
daa
sbb
cld
repz
mov
inc
stos
dec
lahf
sti
add
movs
cld
popf
movs
jne
push
dec
push
mov
(bad)
jl
xchg
mov
stos
jmp
jp
mov
paddusw
(bad)
popa
inc
adc
fxch
out
cmp
jbe
and
add
inc
je
out
cmp
pop
pop
movs
mov
mov
imul
jg
and
test
cmps
adc
in
mov
jnp
add
jne
fwait
lds
or
mov
iret
fiadd
popa
xor
pushw
push
rcl
inc
sahf
mov
lock
mov
jne
jae
jno
dec
mov
test
repnz
in
jo
and
jae
push
jns
pop
xchg
ja
fsub
loop
stos
call
adc
cmp
rol
aaa
into
fild
scas
inc
sub
sub
inc
fcomp
call
call
rcr
js
push
xor
cdq
dec
pop
scas
push
aaa
std
pop
jge
daa
pop
enter
jmp
dec
repnz
daa
mov
outs
(bad)
xor
push
lods
inc
aad
sub
je
div
inc
or
movs
jecxz
jns
loop
dec
out
orps
pop
in
add
das
mov
and
ins
mov
push
movs
iret
xchg
xchg
ins
mov
inc
inc
mov
cdq
retf
in
sbb
mov
sbb
bound
push
bnd
sar
mov
or
in
pop
icebp
inc
xchg
mov
fisub
loope
jp
jmp
mov
add
pop
pop
mov
fld
scas
ror
mov
nop
loop
add
ja
mov
mov
jmp
sub
jo
fmulp
jne
push
mov
pextrw
mov
out
(bad)
mov
int3
xor
mov
rol
lods
(bad)
cld
pushf
add
or
cli
cmp
xchg
int
add
xchg
adc
retf
mov
ret
mov
movs
repz
clc
in
popf
sti
int
push
fs
mov
push
(bad)
add
shr
mov
mov
adc
cmp
mov
xchg
xchg
xor
mov
in
inc
add
xlat
push
cwde
repz
fsub
bound
(bad)
(bad)
adc
(bad)
repnz
lock
rcr
aad
aam
(bad)
jo
mov
or
loope
cmp
cmp
push
cmp
pusha
fst
retf
sbb
mov
repnz
dec
fistp
test
adc
xor
jo
mov
cwde
pop
push
and
outs
imul
sub
add
pop
fiadd
cmp
sub
stos
push
ja
retf
pusha
inc
push
aaa
push
lods
(bad)
jmp
mov
retf
cmps
jne
xchg
sub
cmp
cwde
push
out
mul
mov
pop
xor
or
dec
mov
fld
sbb
sbb
push
aaa
clc
sti
sub
pop
pop
xchg
scas
lea
nop
sbb
mov
adc
out
adc
into
out
scas
js
inc
es
sbb
stc
cwde
lods
push
(bad)
pusha
sbb
pop
dec
sbb
adc
test
fdiv
(bad)
loop
jmp
add
jp
rol
sbb
outs
xchg
and
rcl
fidivr
leave
and
jge
mov
mov
fild
inc
and
out
jbe
arpl
mov
cmp
test
lahf
jne
fldcw
test
mov
inc
push
mov
or
dec
fnstcw
sub
out
mov
test
dec
jge
jl
out
fidivr
fucomi
and
jge
stos
std
repz
mov
sbb
jno
nop
sbb
cmp
mov
int
mov
cmps
jae
dec
daa
in
cmc
enter
daa
cwde
jo
shl
ins
inc
cmp
loope
fmul
movs
mov
ss
mov
movs
cmps
test
push
clc
int3
add
add
add
pop
or
fs
retf
aaa
(bad)
repz
mov
clc
mov
loope
inc
retf
out
faddp
jno
dec
sub
jmp
popa
dec
cmps
inc
dec
ins
add
push
scas
sub
stos
push
cwde
lods
(bad)
add
aam
out
lds
mov
inc
icebp
cwde
fisub
inc
sub
mov
ss
xchg
xchg
std
mov
(bad)
fwait
pop
inc
inc
imul
cld
icebp
push
out
xlat
leave
inc
inc
sbb
mov
ja
mov
sbb
adc
pop
pusha
bswap
cli
sub
or
mov
mov
xchg
cmp
fdiv
lds
mov
lds
jmp
dec
mov
scas
dec
cmp
sub
and
add
mov
js
push
into
sbb
repnz
in
inc
cmp
repz
pcmpgtd
jmp
add
push
lds
add
xchg
fwait
aad
out
call
jmp
sbb
nop
fldenv
stc
adc
xchg
push
out
(bad)
cmp
daa
ja
adc
fcomp
mov
dec
sub
fucomp
loopne
mov
mov
mov
sahf
xchg
movs
cmps
sti
cmp
int3
mov
jge
sbb
jmp
out
mov
xor
fsub
jmp
lea
mov
and
(bad)
ror
lahf
xchg
mov
ss
sub
std
cmp
aaa
dec
mov
adc
enter
dec
mov
jecxz
and
fst
xor
adc
cwde
lock
add
mov
mov
ins
xor
sahf
frstor
data16
xchg
ret
mov
jo
mov
adc
sbb
in
jne
jae
xchg
dec
cmps
cmc
inc
aad
jge
mov
xor
mov
add
mov
mov
adc
aad
dec
imul
(bad)
je
shl
adc
nop
nop
cmc
xchg
jne
cmps
push
inc
loop
push
inc
push
pushf
(bad)
cld
fsub
test
loop
cmp
jnp
rol
pop
ds
sbb
imul
mov
daa
mov
lock
enter
ds
sub
sbb
jl
pushf
sub
scas
jmp
xchg
sbb
sub
(bad)
loope
cld
fwait
sub
outs
inc
shr
xchg
nop
pop
xchg
lds
and
aas
jp
iret
push
sti
out
add
xlat
call
in
jns
push
stc
and
cmp
mov
in
(bad)
sub
(bad)
mov
xor
and
shr
retf
popf
shl
test
stos
cli
call
push
shl
sub
pushf
aad
fsub
or
pop
xchg
sub
in
cmp
ins
cs
xchg
dec
jnp
pop
jg
add
push
or
xor
aad
jp
and
pushf
fwait
movs
sbb
loop
cmc
(bad)
sub
push
jne
jmp
xor
dec
sahf
fisttp
bound
pop
push
int3
xchg
add
mov
sbb
mov
or
loope
jg
(bad)
js
pushf
in
in
push
imul
mov
jb
inc
retf
ds
out
retf
(bad)
bound
test
(bad)
xor
je
cmp
pop
arpl
call
cdq
ret
dec
shl
mov
in
loopne
cmps
cmps
jg
repz
ficom
sahf
inc
std
sbb
jecxz
adc
std
mov
jmp
jmp
and
sbb
inc
fcomp
test
out
(bad)
arpl
pop
mov
outs
push
leave
xchg
push
lock
or
mov
fs
aad
into
sar
lds
fs
inc
mov
in
sbb
and
enter
imul
mov
retf
sbb
sahf
xchg
sbb
js
shl
fwait
mov
arpl
xor
dec
push
mov
imul
add
test
test
sub
or
daa
ja
or
fs
lahf
or
jo
mov
xor
dec
test
dec
mov
sahf
sbb
cmps
jb
mov
lds
inc
jns
push
rcr
pop
sub
adc
ror
int
mov
pop
cmp
mov
cmp
aad
inc
xchg
call
push
mov
cli
dec
(bad)
push
inc
xchg
or
out
mov
cmp
arpl
out
inc
ficom
(bad)
scas
ds
xchg
push
std
mov
add
push
pop
mov
and
mov
or
or
ja
cvttps2pi
(bad)
cmps
loopne
(bad)
in
mov
sbb
sub
(bad)
sbb
cwde
jae
cli
mov
ins
in
in
mov
sub
loop
mov
dec
ret
lods
retf
dec
rol
popf
pop
jb
nop
ins
bound
push
cmp
push
test
mov
aas
or
and
iret
arpl
jmp
rol
adc
js
cli
pop
pop
ins
cmps
jecxz
sub
lea
stos
popf
fs
xchg
rcl
pop
(bad)
int3
fldenv
aas
mov
stos
out
lock
push
cld
fcomp
jmp
or
cmps
movs
jmp
cmps
mov
repnz
clc
push
jno
in
sbb
shl
es
mov
mov
cmps
fwait
dec
loopne
shl
hlt
pop
cmps
in
in
sahf
inc
push
and
loope
ret
aam
cld
repz
mov
push
pusha
gs
aad
cmp
fisttp
outs
xor
imul
or
jnp
pop
xchg
(bad)
int
mov
pop
jp
frstor
std
neg
adc
sub
test
mov
add
jb
fild
out
rol
jmp
out
std
inc
jne
sbb
or
and
retf
mov
daa
adc
xor
lods
sub
popf
jns
(bad)
into
and
outs
jmp
mov
cmp
sahf
fild
jecxz
dec
cmp
shr
pushf
xor
or
mov
psrld
mov
or
or
lahf
mov
sub
xchg
cmp
arpl
jge
xchg
cmc
daa
fsubrp
add
mov
mov
adc
adc
nop
imul
cmp
scas
fisttp
mov
xchg
leave
fcmove
movs
jo
jmp
mov
mov
and
adc
dec
adc
or
push
pop
push
sub
sbb
mov
cdq
xchg
scas
push
mov
lock
sbb
stc
mov
(bad)
pop
pop
imul
iret
push
addr16
jmp
aaa
fcom
sti
jg
scas
push
popf
cmc
test
fiadd
mov
clc
sbb
and
or
xor
mov
in
iret
or
mov
and
dec
dec
jg
xor
in
cmp
add
jno
rep
addr16
mov
adc
xor
push
or
pop
pop
xadd
bt
popa
in
cli
dec
lock
xlat
aas
lods
mov
adc
or
ud0
push
jmp
or
xor
sub
hlt
out
(bad)
xchg
int3
xor
push
adc
or
(bad)
call
ror
sahf
ret
mov
sar
cdq
mov
pop
cmc
outs
jmp
jmp
lock
push
inc
iret
or
out
lods
into
fimul
in
or
xor
add
push
addr16
fstp
jbe
movs
addr16
out
aas
stos
mov
mov
loop
jle
inc
cmp
jmp
aaa
(bad)
inc
dec
imul
mov
stc
pushf
call
xchg
fsub
adc
lahf
mov
ror
sub
mov
call
sar
jp
add
and
push
jmp
jne
leave
mov
push
xor
dec
stc
lock
sub
fwait
push
mov
cmp
jmp
cmp
inc
pop
mov
stc
sar
jae
imul
jge
mov
(bad)
sbb
xchg
inc
shl
dec
mov
data16
stc
and
cdq
lods
mov
dec
xor
pushf
ret
daa
and
inc
sub
test
xor
xchg
lds
cmp
ins
mov
adc
jo
call
or
or
ins
pop
in
cmp
cld
add
adc
js
ds
jmp
cmp
retf
ret
out
mov
lahf
les
frstor
movs
cmp
inc
jnp
xchg
adc
stos
fcmovbe
jae
dec
in
and
repnz
(bad)
mov
nop
add
lock
mov
sbb
push
mov
inc
sub
sub
int
imul
movs
arpl
and
jle
xchg
fistp
pushf
add
lahf
div
jl
imul
bound
shl
jg
(bad)
scas
xchg
inc
sub
sbb
inc
push
out
clc
push
lea
loop
js
push
out
(bad)
pop
inc
das
xor
aad
ret
rol
cli
imul
pop
or
or
mov
das
jo
pop
adc
mov
(bad)
jle
mov
or
cmp
mov
pop
lds
adc
xchg
ja
lea
stos
push
push
adc
pop
sub
sub
ins
ret
int
mov
mov
das
add
jle
or
xor
jo
mov
mov
sub
les
lods
mov
adc
sbb
add
mov
jl
shl
scas
repz
imul
inc
push
push
add
and
imul
lds
sub
sub
into
fxch
inc
add
lods
mov
add
mov
push
es
les
or
fdiv
mov
ret
sar
movs
and
push
xor
inc
ins
cmp
or
mov
repnz
fstp
stc
js
inc
mov
xchg
inc
and
or
lock
ss
jg
mov
mov
dec
add
mov
dec
call
mov
sub
mov
test
les
lahf
sub
call
xchg
inc
xor
cmc
mov
mov
outs
arpl
test
sahf
adc
and
jecxz
mov
mov
adc
inc
stos
dec
popa
(bad)
enter
jne
pop
and
pop
cwde
xchg
add
retf
inc
nop
add
sub
in
pop
ret
mov
imul
repnz
xchg
mov
dec
leave
push
cmps
mov
mov
pop
(bad)
mov
pop
lahf
pusha
pop
adc
loope
(bad)
je
fucom
inc
mov
or
pop
push
inc
cli
es
or
mov
leave
bound
xlat
enter
cs
mov
xlat
cmp
jmp
out
sub
and
nop
adc
push
stos
call
cvtps2pd
jle
aad
jle
and
nop
jnp
and
dec
inc
sbb
aam
xchg
fdivrp
pop
inc
ja
mov
add
mov
test
aad
push
test
adc
sbb
inc
iret
add
jae
mov
out
das
setb
jmp
mov
loopne
or
jmp
repz
mov
leave
test
cmc
sub
imul
cdq
pusha
pop
xchg
mov
sub
inc
mov
add
fstp
gs
or
lods
pop
dec
mov
xchg
jp
sub
(bad)
ror
test
xor
dec
jmp
mov
ss
mov
popa
test
sbb
sub
ja
lock
out
je
(bad)
in
sar
mov
imul
retf
mov
lock
adc
mov
lds
mov
sub
xor
mov
xor
push
(bad)
(bad)
adc
sub
push
stos
std
jge
out
or
nop
fnsave
push
sub
addr16
test
out
jo
mov
mov
out
xor
sbb
xchg
imul
inc
ds
enter
mov
clc
sahf
sbb
pop
and
jmp
mov
shl
rcr
ins
out
mov
aam
mov
push
sbb
inc
movs
mov
out
xor
mov
mov
xchg
sub
jmp
in
cmc
or
leave
add
popf
and
popa
push
fisub
iret
and
arpl
push
test
mov
fdiv
in
or
clc
rol
jl
dec
xchg
xor
test
jno
xlat
cmps
jge
es
pop
mov
pop
cmp
sub
mov
push
pop
int
icebp
not
mov
jnp
fst
out
dec
adc
pop
mov
fcmovnbe
jbe
out
lahf
mov
popf
mov
lahf
xor
mov
in
push
inc
outs
cmp
adc
int
iret
stos
mov
sbb
out
ret
cld
xor
bound
push
sub
or
ds
ss
and
out
mov
popf
ins
sub
movs
out
pop
add
ins
push
push
jae
pop
in
add
sbb
xor
mov
and
aaa
out
repnz
inc
rcl
and
push
adc
or
(bad)
sbb
into
imul
add
xchg
xchg
xchg
adc
mov
xchg
in
push
sbb
outs
adc
(bad)
fistp
ret
add
and
inc
inc
scas
adc
xlat
cmc
in
jns
dec
repz
pop
mov
cmp
mov
sub
stc
jnp
test
add
jp
cwde
cmp
add
repnz
mov
cmp
sbb
mov
nop
jns
and
nop
jo
out
push
int3
add
push
mov
xor
sub
pushf
in
jae
push
push
cwde
push
add
aas
push
push
(bad)
xchg
jecxz
inc
pop
cmps
and
sub
xchg
loope
ja
fwait
(bad)
fnsave
iret
jno
or
test
xchg
xchg
mov
fs
arpl
mov
cdq
and
push
scas
fistp
aad
or
adc
xchg
(bad)
shl
pop
mov
pushf
and
dec
lock
pop
mov
push
mov
jno
cmp
xor
xor
test
adc
(bad)
jl
stos
xor
pop
inc
shr
jmp
int
loop
jo
test
mov
lods
stos
mov
mov
not
fs
cwde
or
xchg
pop
rcl
dec
push
push
jbe
fdivrp
lahf
inc
shl
retf
jmp
jo
popa
iret
dec
inc
rcr
in
sbb
sub
div
dec
push
(bad)
shl
into
push
jnp
test
jo
cmp
leave
lds
mov
add
or
addr16
jmp
jb
sar
leave
outs
in
xchg
dec
mov
dec
xchg
and
xchg
push
pop
mov
out
cmp
add
(bad)
loopne
popf
or
dec
and
imul
out
mov
and
pop
pop
int
popa
inc
sbb
sub
pop
nop
imul
js
jmp
or
shl
popf
ins
popa
push
jmp
xor
mov
add
dec
aam
mov
rcl
out
pcmpeqd
mov
jg
inc
mov
cdq
xlat
rcl
cmp
xlat
inc
jmp
jne
daa
js
in
push
out
stos
faddp
jmp
dec
dec
ror
ror
cmp
cld
aaa
cs
sub
out
xchg
jg
fisttp
cmp
aad
lods
jecxz
iret
jae
cmp
add
mov
cmc
imul
outs
mov
push
mov
out
fldenv
jmp
std
gs
std
arpl
cwde
in
mov
mov
pop
xchg
imul
pushf
fs
inc
ret
xor
fs
(bad)
mov
xchg
sub
sbb
es
fld
cld
pop
adc
out
xor
ror
or
loope
or
mov
or
(bad)
or
clc
push
mov
daa
push
lods
lods
mov
inc
jno
jl
lea
pop
add
dec
sub
loopne
mov
sbb
imul
dec
scas
cmps
or
mov
add
dec
push
xchg
clc
push
adc
cmp
cmc
sbb
stos
fmul
rcl
add
add
sub
or
leave
loope
dec
icebp
xor
sbb
or
movs
clc
dec
out
imul
sub
pop
inc
mov
xor
adc
cwde
push
lods
jmp
and
into
push
push
xor
inc
clc
sub
movs
test
adc
push
or
movs
or
push
xor
mov
pop
or
hlt
fld
jmp
cmp
inc
mov
fisttp
lods
retf
(bad)
bound
(bad)
sub
jmp
push
jns
jl
mov
mov
adc
sub
retf
(bad)
xchg
prefetch
rcr
jge
pop
std
add
cmps
sbb
mov
movs
repz
fld
jnp
pop
dec
pop
dec
adc
mov
call
mov
neg
pop
imul
adc
xchg
repz
pop
sahf
in
mov
ret
std
sahf
mov
imul
jl
mov
cmp
mov
std
mov
fs
in
mov
jecxz
cmp
or
in
xor
mov
sub
xchg
mov
mov
lods
cmps
(bad)
fidivr
inc
push
pop
add
data16
lods
cwde
and
and
sbb
sbb
je
xor
jg
shl
loop
jae
fcmovnb
sub
mov
aaa
cdq
rcr
dec
stos
sub
jmp
jecxz
jmp
push
sbb
dec
push
jno
into
jecxz
mov
fcomp
and
push
sbb
xor
ja
jne
aas
xchg
adc
add
dec
sub
inc
pop
pop
push
jl
imul
(bad)
xchg
and
dec
xor
(bad)
stos
and
push
popf
mov
mov
in
std
xchg
clc
aam
js
adc
loopne
add
xchg
les
mov
adc
rcl
ror
repnz
xor
bound
xor
mov
(bad)
pop
call
jo
cmp
fcomp
mov
or
lds
or
test
pusha
loopne
outs
mov
mov
pop
sbb
jge
sbb
push
add
cmp
pop
neg
xchg
jecxz
mov
mov
mov
gs
popf
sub
xlat
scas
call
mov
jmp
jae
enter
sub
pop
sbb
push
aas
jl
sub
sbb
add
push
out
or
leave
mov
rol
xor
ja
inc
cmps
loope
ret
ret
ret
inc
inc
fidiv
xchg
jp
xchg
loope
data16
out
leave
jbe
inc
addr16
retf
cmp
push
outs
xor
pop
pop
test
jne
cmp
add
jmp
cli
test
push
hlt
pop
xchg
cli
ror
lds
push
push
adc
movs
(bad)
push
mov
inc
push
cdq
outs
adc
pushf
repnz
stos
xchg
mov
in
int3
mov
add
pop
aas
lahf
pop
ret
inc
fsubr
movs
bound
outs
and
(bad)
xlat
jmp
add
push
fidivr
add
int3
sti
inc
mov
mov
enter
stc
adc
mov
js
sti
ins
jno
movs
adc
sub
cmp
mov
ret
xchg
or
adc
jg
and
pop
cmp
retf
mov
(bad)
shr
push
test
sub
jne
jmp
mov
cmp
xchg
mov
rcl
xor
xor
jmp
mov
jno
add
into
or
aam
in
mov
mov
ret
inc
xchg
push
jo
fcmovnbe
sub
mov
push
mov
loopne
adc
popa
jmp
aam
xchg
mov
push
dec
sub
xor
dec
cs
or
inc
fdiv
mov
xor
push
cmc
sbb
stos
inc
sbb
stc
fsubr
sahf
sbb
leave
mov
and
jg
cli
(bad)
fisubr
ficomp
cmp
mov
or
push
cli
cwde
xchg
xor
shl
jbe
and
repnz
or
jmp
inc
fwait
add
jecxz
pop
mov
repnz
popf
cmp
push
dec
mov
jl
fsubp
xor
(bad)
sbb
jae
pop
mov
clc
out
in
cmp
lods
fistp
or
xor
fwait
adc
mov
push
inc
cs
sbb
ins
mov
in
mov
cdq
or
xchg
ja
sub
iret
(bad)
into
sbb
dec
ret
in
pop
pop
jne
dec
enter
lock
clc
adc
push
hlt
and
(bad)
repz
dec
mov
inc
lock
and
clc
sub
mov
in
in
or
lea
out
ins
sub
pop
enter
das
into
add
aam
out
cmc
test
cmp
int
cmps
jg
fiadd
mov
xchg
cmps
call
stos
nop
mov
mov
lahf
inc
or
inc
mov
es
inc
idiv
cmps
sahf
add
ret
fwait
outs
cwde
jnp
int3
xchg
js
lea
fwait
mov
mov
gs
ins
pop
jbe
js
loope
mov
xchg
aad
mov
add
arpl
int
sub
push
push
mov
inc
inc
push
out
xor
das
loopne
fimul
jnp
or
and
lea
or
xor
(bad)
mov
pop
loop
xlat
not
(bad)
in
(bad)
addr16
sub
sub
gs
sub
iret
(bad)
gs
mov
(bad)
stc
cmps
adc
cld
icebp
mov
mov
sub
outs
fldenv
ins
movs
mov
jmp
sbb
xchg
shr
cmc
retf
movs
cmovne
sbb
and
inc
mov
mov
jb
enter
cs
gs
and
dec
dec
push
out
ins
data16
std
cmpxchg
shl
test
add
fisubr
(bad)
dec
stc
push
sub
retf
mov
push
lahf
daa
pop
retf
inc
mov
fs
sub
add
fld
pop
xchg
dec
aam
add
call
stos
mov
data16
ss
pop
sbb
fmul
xor
js
xlat
add
aam
daa
iret
mov
xchg
sub
and
cmp
jbe
sbb
mov
push
retf
mov
inc
mov
xchg
out
fidiv
cmp
jge
daa
movs
xchg
aam
dec
inc
aad
(bad)
in
ins
int
sbb
mov
movs
nop
mov
loop
fadd
mov
fldcw
adc
mov
adc
mov
ins
pmaxsw
and
retf
adc
hlt
and
pop
xor
xchg
vpandn
jns
pop
push
test
loope
mov
sub
cmp
aas
push
lock
mov
dec
les
jge
push
jecxz
je
cmp
(bad)
jae
cmp
cmp
and
repz
int3
pcmpeqd
mov
fsub
inc
ror
add
push
mov
call
test
mov
cld
lods
or
jmp
pop
clc
scas
xchg
or
mov
adc
cwde
jmp
jne
aaa
lahf
mov
cmp
fwait
push
pop
sub
in
lods
and
mov
or
ds
fmul
retf
ds
test
repnz
dec
inc
dec
test
add
pop
mov
dec
jbe
gs
mov
adc
popf
inc
push
lods
sub
bound
clts
adc
push
jae
mov
push
dec
lds
loopne
hlt
adc
sbb
inc
or
ror
mov
div
pop
fwait
leave
push
mov
in
imul
sahf
inc
ficomp
ja
pminsw
dec
mov
rcr
sub
inc
outs
or
and
pop
aaa
(bad)
(bad)
sub
or
or
mov
add
in
daa
dec
pushf
add
jecxz
ins
mov
in
pop
push
push
pop
shl
lods
dec
iret
popa
and
pop
sbb
es
xchg
push
add
and
outs
jg
(bad)
(bad)
js
stos
inc
mov
cli
fnstsw
mov
add
lods
jno
es
jns
int3
xchg
push
jecxz
and
cmps
add
sub
cs
inc
push
sahf
jne
aad
sub
jo
bnd
sub
loop
jp
add
adc
aas
jae
push
pop
fcmovne
sahf
sbb
xor
out
imul
outs
jle
cld
pop
push
aam
add
fcom
leave
xchg
jl
pop
sbb
sub
dec
inc
idiv
sbb
add
push
mov
mov
add
or
sbb
pop
out
movs
xchg
push
mov
adc
ds
mov
lods
gs
and
cmp
push
jge
dec
push
(bad)
lahf
call
jle
adc
mov
ror
sub
outs
jmp
test
addr16
jo
cwde
mov
or
aam
dec
and
shl
in
popf
push
aas
push
fimul
aam
call
mov
scas
sbb
and
into
fadd
std
arpl
je
cli
sahf
dec
push
xchg
push
inc
adc
mov
dec
adc
je
pop
(bad)
xor
cdq
inc
mov
lock
ror
push
dec
xchg
jle
dec
jne
rcr
sbb
jecxz
lahf
jns
jb
ins
rcl
stos
jne
mov
dec
ret
mov
addr16
mul
rcr
cmp
or
je
enter
inc
outs
jne
out
sbb
iret
enter
shr
int3
sub
lea
xor
jle
adc
ficomp
mov
adc
sbb
jle
add
scas
fimul
push
xchg
out
rcl
jne
mov
add
pop
add
pop
mov
pop
sub
ret
lea
ja
sub
add
mov
in
mov
xor
call
inc
dec
jmp
add
mov
cmp
rol
sub
sub
sub
out
sahf
stos
or
dec
or
in
fwait
inc
loopne
push
mov
sub
xchg
pop
es
aaa
fcmovb
add
dec
adc
movs
(bad)
pop
inc
fdivr
cdq
test
adc
xor
shr
(bad)
lds
sub
push
arpl
xchg
movs
shl
aaa
stos
mov
xchg
imul
movs
movs
jg
cdq
fnstsw
rol
adc
sar
ja
daa
mov
jecxz
fcomi
scas
int
adc
mov
push
pop
scas
and
pop
mov
fcomp
and
pop
es
xor
add
sbb
cwde
cmps
sub
test
retf
or
mov
sbb
push
in
call
sub
daa
fdivr
(bad)
cwde
lea
fist
fsub
sar
xchg
shl
fcomp
pop
mov
and
fbld
mov
adc
xor
(bad)
out
lds
push
push
scas
dec
clc
jecxz
xchg
in
dec
pop
repz
push
sti
sub
cmps
mov
jecxz
inc
rcr
in
dec
push
sub
test
idiv
xchg
jg
movs
push
fadd
mov
sub
lea
sbb
imul
cmc
mov
mov
or
es
xor
(bad)
mov
cmovo
and
mov
ss
sbb
sbb
outs
out
sbb
push
or
(bad)
xchg
sub
dec
inc
jnp
add
jl
mov
ror
fist
push
xor
mov
sbb
shl
dec
neg
mov
xor
aam
aaa
fmul
mov
cmp
push
mov
cmp
inc
aaa
or
jae
mov
xor
into
and
jae
add
xor
fs
out
and
dec
push
dec
lods
sar
mov
sar
jecxz
push
stos
out
cmc
pop
pop
jecxz
sbb
jl
sahf
idiv
inc
or
movs
mov
lock
(bad)
jl
mov
stos
pushf
xchg
push
in
int3
mov
(bad)
fcmovbe
mov
mov
aaa
and
std
aas
cs
jp
std
(bad)
push
and
aaa
clc
into
add
jg
js
sbb
cmp
or
sub
cs
add
(bad)
sub
add
jne
vmovhpd
cld
and
jl
or
mov
mov
outs
xchg
repnz
pop
lods
sub
mov
ret
xlat
enter
jmp
aas
mov
and
loope
scas
dec
nop
jge
pop
ret
ja
ins
xor
sub
fsubr
and
adc
lea
cs
pop
jecxz
xchg
fidivr
sahf
dec
leave
(bad)
mov
ret
jge
xor
cmp
call
mov
iret
ret
cmp
cmp
out
stos
and
or
fwait
in
sub
mov
lahf
xor
sbb
call
sbb
(bad)
fstp
cli
shr
sbb
aam
scas
jb
inc
(bad)
push
add
pop
adc
(bad)
lds
pushfw
push
mov
cmp
out
das
pop
ins
gs
std
stos
xor
fs
xor
xlat
outs
mov
inc
fnsave
inc
stos
fisub
bound
pop
out
sbb
mov
ja
or
xlat
out
sbb
imul
data16
pop
jnp
popf
dec
jmp
dec
jle
jl
sub
dec
stos
sahf
cdq
ret
retf
stc
adc
and
aam
retf
(bad)
pop
fcomp
int3
call
and
ss
cmps
cdq
or
outs
js
sbb
enter
lahf
cs
cmp
(bad)
(bad)
push
scas
dec
sbb
push
adc
xchg
add
rol
xchg
imul
test
es
dec
call
js
mov
push
jmp
out
cmp
push
dec
cdq
inc
dec
xchg
sub
sbb
jnp
aad
lock
shr
in
dec
inc
shl
mov
shl
cmp
int3
mov
mov
inc
xor
add
lods
pushf
ret
dec
aam
pusha
popa
test
shl
push
pop
push
out
hlt
fadd
aad
push
pushf
scas
and
outs
(bad)
out
in
add
cmp
adc
cmc
jne
scas
lahf
mov
sbb
dec
xor
add
mov
sbb
aaa
sbb
pop
call
(bad)
or
pop
xchg
sub
or
xchg
int
popf
or
aam
cli
sti
xchg
adc
arpl
out
ret
in
jo
rep
mov
mov
mov
aas
push
sahf
mov
mov
sbb
cmps
mov
or
mov
cmp
fild
fisttp
call
mov
jp
les
cmp
adc
xchg
jl
cmps
or
cmp
js
stos
adc
ss
out
and
dec
call
dec
aas
jno
nop
push
inc
cmps
fsubr
jecxz
ret
int3
je
test
call
adc
xor
mov
jno
int
mov
or
(bad)
fild
loope
cmp
mov
test
pop
mov
and
repz
scas
(bad)
jae
lods
es
add
std
pop
icebp
std
pop
add
and
and
or
retf
dec
cmp
pop
dec
sti
or
fwait
sar
ret
push
xchg
test
std
int
inc
sub
cmp
mov
movs
sti
jp
test
add
push
outs
or
jl
repz
fwait
scas
xchg
sbb
adc
pop
imul
add
jmp
push
arpl
jg
addr16
jmp
setbe
inc
or
rcr
jg
movs
popf
stc
les
jns
xchg
cli
(bad)
sub
in
std
sbb
shl
jecxz
sub
shl
popf
pop
xlat
dec
xchg
je
xor
jp
je
loop
jb
sbb
mov
test
clc
or
cld
push
jne
lahf
jno
fwait
or
push
adc
leave
cwde
xchg
jmp
push
or
and
mov
or
test
imul
(bad)
ds
push
stc
jo
pmaddwd
xchg
bound
mov
cli
cmp
arpl
sahf
cmps
mov
mov
push
xchg
push
mov
inc
xchg
mov
stc
mov
xchg
xlat
sbb
fnsave
dec
out
xor
scas
std
mov
cmps
and
xor
pop
nop
(bad)
add
rcl
mov
jle
(bad)
imul
loop
mov
es
pop
out
or
fcomi
in
jmp
out
sub
inc
mov
lea
pop
out
es
push
xchg
xchg
in
jnp
je
sar
jnp
cmp
mov
pop
mov
jbe
xor
lods
int
jl
retf
and
add
stos
cdq
sbb
in
mov
mov
(bad)
int
into
mov
movs
nop
xchg
mov
fwait
jbe
sub
dec
int3
xchg
push
stos
pop
jns
fild
xchg
add
ja
scas
push
sub
xlat
or
adc
dec
ficomp
cmp
push
int
aad
and
dec
adc
std
retf
je
out
mov
icebp
frstor
sub
ret
lahf
(bad)
push
popf
(bad)
add
xchg
pop
popf
adc
dec
cmps
retf
inc
call
pusha
je
jae
cdq
and
mov
ins
rcl
cmps
jecxz
scas
aaa
sub
mov
push
mov
mov
xchg
xchg
gs
and
into
xor
out
int3
mov
xlat
mov
das
out
cwde
bound
mov
lods
sahf
lods
jmp
out
cwde
fistp
mov
pusha
mov
(bad)
out
jo
fisubr
hlt
cmp
xchg
stos
xchg
std
jge
pop
jnp
mov
dec
xor
pop
sub
js
adc
mov
ja
imul
xchg
mov
jle
adc
imul
mov
dec
add
cmps
fnsave
mov
lea
mov
and
repz
sbb
fwait
jge
jl
jns
repz
mov
add
ret
lds
fadd
mov
mov
lods
popf
arpl
(bad)
dec
xchg
mov
adc
mov
jg
into
xor
or
ds
jb
sub
and
mov
div
(bad)
mov
inc
lds
addr16
inc
add
les
cmc
or
fs
in
push
jo
jge
pop
and
movs
pop
xchg
jb
mov
mov
clc
movs
add
xor
and
push
xchg
call
shr
cmp
bound
inc
test
pop
add
out
add
int
fdivr
sbb
movs
(bad)
ins
imul
mov
mov
inc
fnstenv
sub
dec
sbb
test
(bad)
in
stos
add
ret
jb
bound
push
fisubr
ret
in
lea
aad
fdiv
sar
pop
jle
sub
stos
test
sbb
jbe
jp
or
mov
mov
aam
sub
pushf
mul
add
in
aaa
jmp
pop
mov
(bad)
addr16
mov
cdq
lea
xor
sub
enter
sar
jge
pop
sub
xchg
or
in
add
sar
jnp
aam
mov
pop
test
jnp
mov
jl
cwde
or
adc
test
daa
(bad)
pop
inc
mov
loope
ret
in
xchg
mov
test
xor
pop
out
aam
sbb
fsubr
add
(bad)
mov
fcom
popf
jne
sbb
sbb
fsubr
sete
and
xchg
add
cmp
ins
sub
fadd
adc
mov
mov
retf
lea
rol
xor
add
lods
pop
dec
inc
jmp
inc
loope
xchg
cs
ja
div
push
call
scas
or
outs
pushf
sbb
mov
add
repnz
mov
rep
out
mov
sbb
les
sbb
int
adc
and
ror
inc
ds
sbb
adc
xchg
mov
cmp
fild
jge
cs
jns
idiv
popf
shl
imul
pop
scas
ins
xchg
int3
fsub
retf
sbb
neg
and
jbe
cmp
lods
ins
adc
leave
out
or
cmp
dec
adc
jecxz
adc
adc
cmp
in
fcomp
aaa
scas
add
jne
out
(bad)
jae
sar
ins
hlt
xchg
cs
sbb
jle
push
mov
inc
(bad)
cmp
push
movs
jle
jmp
fld
aas
mov
imul
jbe
cli
int3
mov
pop
ja
shr
dec
ja
out
jle
mov
pop
push
xchg
inc
jmp
out
(bad)
hlt
sbb
scas
sub
popa
jnp
repz
ror
cld
sbb
addr16
test
xchg
or
sbb
jnp
les
enter
movsx
pusha
ja
iret
loop
jae
cmp
inc
test
add
inc
adc
int
sbb
xor
rol
mov
mov
inc
ja
fimul
adc
lahf
fwait
dec
cwde
ds
leave
jle
push
into
and
mov
mov
xor
jecxz
inc
push
xor
test
test
je
loopne
push
adc
(bad)
fmul
in
xchg
or
and
cdq
mov
dec
cmps
pusha
adc
pop
cli
cmps
push
out
add
iret
mov
sbb
xor
aam
in
popf
xchg
sbb
enter
mov
ds
pop
mov
push
xor
cmp
xor
into
add
scas
cmps
xchg
imul
in
dec
dec
and
jb
(bad)
push
repz
movs
call
mov
jecxz
bound
xor
ins
fisttp
mov
xor
push
xchg
mov
test
jnp
dec
iret
popf
mov
test
shl
addr16
leave
jo
inc
hlt
shl
fdivp
mov
stc
sub
icebp
fisubr
jp
addr16
mov
cld
adc
lods
sub
lea
sbb
pop
cmp
retf
(bad)
jmp
mov
shr
adc
cmps
jne
jl
and
inc
rcr
or
or
push
mov
aad
pop
and
cmp
and
sti
not
mov
mov
jecxz
(bad)
imul
xor
rcr
dec
mov
mov
jno
imul
mov
push
mov
(bad)
cld
outs
mov
push
jo
daa
out
push
mov
dec
fidivr
sti
add
dec
icebp
mov
and
jns
dec
xchg
and
scas
repz
mov
ror
or
jle
aaa
sbb
call
div
jmp
cmp
stc
mov
lds
jne
jge
mov
movs
cmp
retf
mov
pop
jns
xlat
mov
or
mov
jp
retf
ret
inc
xlat
stos
shr
shl
mov
(bad)
and
push
inc
test
or
mov
bound
add
shr
lods
jmp
inc
push
icebp
adc
je
stc
lods
push
cmc
call
inc
int3
sbb
pop
inc
push
add
cdq
xchg
mov
sbb
sar
bound
repz
cmc
sbb
xor
mov
frstor
shr
daa
jp
sbb
cmps
adc
cli
test
adc
cmp
add
cli
dec
mov
xor
test
adc
jg
mov
leave
leave
sub
xchg
jmp
jb
(bad)
lock
rcl
adc
dec
adc
cmp
mov
mov
add
imul
mov
(bad)
mov
cmp
repnz
push
xchg
ret
pop
das
mov
ins
ret
shl
mov
jbe
retf
pop
es
mov
das
or
in
shr
mov
and
sub
pop
jmp
aas
dec
cdq
scas
add
arpl
lahf
xor
xor
xor
inc
daa
scas
icebp
(bad)
das
scas
mov
inc
std
mov
mov
mov
jge
jnp
mov
dec
std
fcmove
sub
ret
pusha
push
cmps
ss
pop
les
aas
mov
in
hlt
push
bound
je
sub
les
inc
in
leave
lods
and
sub
aaa
mov
int3
mov
xchg
ins
sub
add
jnp
rcr
sbb
outs
xor
add
cmp
inc
add
xor
enter
(bad)
inc
mov
jno
xchg
xchg
or
sbb
pusha
inc
push
mov
or
lock
rcl
pop
inc
sub
cdq
add
xor
popf
cmp
dec
(bad)
jnp
outs
mov
cmp
or
ja
(bad)
imul
mov
inc
(bad)
out
cmp
adc
dec
jmp
mov
sub
test
loopne
sahf
jl
adc
in
mov
xlat
sub
adc
(bad)
cmp
jecxz
jns
add
loopne
fisttp
pusha
cmc
rcl
out
loop
cwde
fsub
push
jb
mov
sar
and
jno
dec
and
push
pop
add
add
push
pushf
shr
test
call
xchg
test
(bad)
out
jns
cmc
cdq
inc
push
cwde
mov
push
mov
shl
pop
out
loop
jbe
je
inc
jns
imul
pushf
scas
adc
push
xor
sbb
fs
or
xor
and
and
add
repnz
cmp
cli
inc
ins
int
xchg
pop
or
push
scas
add
call
xor
xor
shufps
stos
mov
out
mov
mov
inc
mov
lods
sbb
js
or
inc
(bad)
into
sub
push
imul
mov
scas
in
lock
dec
cmps
adc
(bad)
jecxz
mov
mov
mov
jne
mov
(bad)
xor
pusha
out
sar
pop
js
mov
imul
jle
or
aas
push
cdq
inc
dec
and
fidivr
test
stc
mov
fidivr
not
mov
push
call
mov
xor
mov
mov
addr16
cmp
dec
push
loopne
mov
and
in
fnstsw
pusha
ds
ss
mov
push
jne
mov
jmp
jmp
stc
dec
repz
out
xor
add
test
inc
or
(bad)
inc
test
mov
or
retf
lods
test
jo
sbb
dec
stos
mov
jbe
sub
inc
add
or
aad
hlt
or
xor
jne
ins
imul
(bad)
sysret
sbb
aad
movs
cmp
push
mov
(bad)
fcom
je
test
push
pop
das
xchg
scas
fwait
dec
fisttp
mov
ds
cdq
outs
xchg
inc
in
xchg
in
mul
push
cmp
ins
cld
dec
test
cmp
test
inc
(bad)
int
shl
jo
and
jl
int
call
fisubr
pop
js
arpl
xlat
and
mov
fst
fcom
sub
fwait
test
inc
mov
or
xor
arpl
push
xchg
mov
mov
lea
and
ja
dec
(bad)
pop
sti
pushf
rcl
cld
jno
jle
fisub
pusha
mov
mov
xor
not
cli
mov
rcr
div
dec
xchg
imul
mov
push
rcl
jb
jo
sbb
pop
inc
sub
jnp
bound
and
std
cmps
and
fwait
xchg
mov
call
cmp
cmps
push
setl
pop
cli
xchg
xchg
jo
retf
hlt
mov
add
cmp
das
mov
retf
push
push
mov
cmp
and
hlt
cli
das
clc
cwde
xchg
jp
sbb
and
pop
clc
loopne
mov
lea
push
pop
test
add
stc
push
adc
fucom
sbb
pop
inc
ja
aam
pop
and
into
push
data16
pop
mov
push
scas
gs
and
xor
and
pusha
test
dec
fiadd
jge
push
int3
(bad)
xor
and
cmp
jge
cmp
xor
push
inc
xor
adc
push
xchg
xchg
sub
in
in
dec
xchg
mov
pop
mov
cli
jl
jl
cmps
lock
pop
pop
jp
sub
mov
sahf
or
stos
fwait
jge
scas
pusha
rep
repnz
adc
xor
jb
ja
fisttp
sub
push
jo
and
repz
repnz
jle
mov
es
jecxz
add
aas
mov
(bad)
stc
xchg
fldenv
fild
out
dec
add
int3
aas
xor
jmp
(bad)
cdq
xor
ret
ret
mov
je
inc
xchg
jne
js
sub
xchg
inc
push
add
outs
leave
mov
sub
(bad)
out
(bad)
pop
pop
data16
movs
fs
inc
ror
cmp
lods
cmp
mov
mov
call
aam
mov
jg
sbb
push
scas
cmps
xlat
and
ins
(bad)
jne
inc
inc
cmp
fidiv
adc
mov
jp
cli
and
cdq
or
dec
addr16
dec
inc
leave
cmp
cmp
xchg
cdq
pop
push
or
(bad)
std
fcom
dec
mov
mov
leave
mov
mov
nop
jl
dec
clc
pop
adc
addr16
mov
and
in
retf
aam
out
aad
shl
inc
std
je
int3
cs
sub
pop
cmp
sub
iret
inc
mov
loope
mov
fmul
movs
pop
pop
fnstenv
and
ss
adc
cmp
mov
mov
std
test
fs
out
js
xchg
add
shl
sub
rcl
adc
clc
inc
cmp
or
jle
xchg
iret
cli
jne
add
dec
or
in
inc
jmp
daa
call
not
adc
in
mov
mov
adc
xor
leave
scas
sub
mov
imul
sub
push
imul
jle
rol
push
xchg
loop
xor
cmp
mov
sbb
xor
mov
(bad)
mov
dec
ja
inc
jle
iret
sub
les
rcl
cmp
add
fsubr
cli
cs
ret
cmps
dec
jl
mov
arpl
xor
jnp
adc
mov
aad
iret
hlt
pop
and
(bad)
cmc
push
enter
mov
push
test
(bad)
retf
fbld
xchg
dec
sbb
mov
hlt
dec
ret
in
fdiv
hlt
sar
pop
movs
add
mov
out
mov
add
int3
dec
fadd
xor
es
fwait
popf
add
mov
dec
and
retf
mov
(bad)
adc
test
sub
jmp
(bad)
jns
push
xchg
imul
mov
xor
js
xor
sbb
mov
mov
rol
lahf
adc
lea
mov
outs
push
and
pop
jb
lea
ss
mov
fst
cmp
push
or
cmps
mov
jmp
out
jb
cmp
sar
add
addr16
or
and
std
mov
xor
(bad)
mov
cmp
sbb
jg
rcl
lahf
int
jecxz
std
repz
pop
xlat
mov
inc
or
idiv
shr
retf
fwait
xor
not
xchg
cmps
iret
outs
mov
in
mov
in
mov
lds
jg
leave
dec
and
sbb
inc
push
in
xor
leave
cmp
push
popa
mov
shr
mov
cdq
sbb
popa
mov
or
adc
sub
imul
inc
inc
jo
out
xor
jle
push
shl
pop
outs
(bad)
test
inc
test
sub
mov
jle
cmp
xor
clc
mov
popa
mov
jecxz
pop
push
inc
pop
dec
cmp
mov
cmp
fs
push
jb
pop
call
dec
pop
pop
stos
pop
xor
hlt
fisttp
or
push
xor
pop
imul
mov
adc
cs
aad
movs
pop
(bad)
cmp
mov
mov
popa
pop
xor
es
pusha
mov
mov
movs
xchg
and
or
cmp
cmp
cdq
jg
pop
pop
mov
leave
addr16
ins
xor
add
dec
mov
mov
mov
cmp
inc
xlat
cmp
push
and
cld
push
sub
in
mov
es
adc
inc
pushf
sbb
mov
cmc
in
lahf
frstpm(287
mov
popf
in
aad
rcl
adc
add
dec
xor
xor
movs
daa
jmp
cmp
push
fisubr
cdq
imul
ret
jo
fs
inc
pop
das
pop
push
in
pcmpeqd
out
fwait
sbb
push
retf
dec
retf
je
push
rcr
cli
lds
call
sub
and
push
mov
outs
clc
rol
imul
ja
lds
cmp
ja
sub
les
inc
es
xchg
or
lods
icebp
fimul
in
mov
cmc
(bad)
cmps
add
outs
ja
fs
pop
push
pop
cmps
inc
pop
add
sbb
fstp
mov
and
mov
push
push
cmp
add
repnz
dec
cmc
push
or
sbb
fsubrp
outs
js
mov
push
popf
outs
xchg
ror
scas
rcl
adc
mov
and
aas
adc
xor
dec
cdq
ret
jecxz
mov
xchg
sub
mov
fadd
in
sub
bnd
xchg
xchg
cmp
fistp
mov
outs
adc
mov
sub
xchg
add
int3
add
nop
(bad)
xchg
cmps
test
jle
imul
or
cmp
ror
add
das
mov
push
ds
xchg
imul
or
or
jg
fcomi
aad
inc
or
sub
adc
call
int3
jb
fisubr
pop
pusha
sub
adc
pop
mov
xchg
adc
xchg
lods
bound
ret
xor
push
fadd
or
sub
mov
jle
enter
mov
enter
daa
out
sbb
fiadd
icebp
in
rcl
int3
xchg
fld
mov
ins
js
aaa
int3
std
xchg
push
fbstp
dec
inc
xchg
jle
enter
adc
xchg
or
ds
std
push
jae
and
les
jo
push
dec
hlt
repz
clc
or
inc
out
or
loopne
jp
xchg
mov
cmp
or
mov
js
nop
jl
mov
add
daa
sbb
fbld
adc
aas
mov
aas
xchg
xor
pop
push
movs
popa
fucomi
dec
dec
mov
push
xchg
aad
or
mov
into
inc
mov
ret
pushf
push
aad
(bad)
std
aaa
xor
jecxz
aas
test
dec
sbb
push
xor
std
rol
js
punpckhwd
imul
(bad)
ja
xchg
cmp
and
mov
mov
and
hlt
in
(bad)
iret
inc
int
pop
test
int
mov
into
out
call
ins
jno
in
or
shl
mov
pop
je
stos
outs
mov
mov
mov
sbb
fld
fistp
lock
repnz
add
sbb
mov
arpl
mov
or
arpl
or
sbb
and
mov
lods
adc
jae
icebp
sub
jb
and
cwde
out
(bad)
xor
push
in
ins
movs
inc
add
xchg
dec
sub
push
out
sbb
mov
ret
div
and
ret
mov
cmp
inc
sbb
mov
inc
in
push
jbe
test
sub
sbb
mov
or
jecxz
cld
daa
mov
mov
xchg
test
dec
das
aas
sti
movs
adc
sti
cmp
lods
bound
fs
loope
test
ret
dec
out
(bad)
cwde
xor
loope
jne
es
js
jp
rcr
out
pop
pop
xchg
mov
xor
call
xchg
retf
cmp
repz
cli
jns
popa
xchg
(bad)
test
add
lods
cmp
jl
mov
pop
outs
in
lgs
xor
or
pop
enter
mov
push
inc
and
jmp
retf
sbb
int3
rol
lods
ret
sub
sbb
loop
sub
cld
xor
outs
leave
scas
ret
imul
dec
cmps
mov
aas
mov
push
xchg
movs
and
js
ret
inc
dec
push
dec
mov
xchg
movs
fiadd
imul
and
repnz
push
in
and
push
scas
stos
iret
cmps
je
fwait
pop
mov
fbstp
pop
mov
mov
xor
retf
pop
or
push
jae
sub
and
or
(bad)
and
pop
mov
pop
add
mov
cmp
nop
xchg
out
push
pop
xor
les
aad
lock
add
adc
imul
and
xor
push
add
mov
jne
adc
xor
sbb
push
mov
dec
inc
sub
push
das
test
dec
or
pop
out
idiv
fidivr
sub
paddusw
sar
dec
and
inc
or
les
cmp
iret
jne
inc
stos
jmp
dec
repz
sbb
sbb
fistp
sbb
test
cli
sub
or
hlt
lahf
or
xor
mov
push
jnp
xor
push
pop
adc
xchg
(bad)
loope
mov
shl
pop
cmp
(bad)
push
sbb
push
mov
inc
pop
fisubr
aam
loope
sub
add
add
mov
fwait
pop
pop
ja
xchg
nop
nop
ds
lea
movs
out
out
mov
dec
xlat
jns
sub
lds
jmp
stos
adc
sub
cmp
xchg
or
xor
jmp
popa
mov
mov
inc
loope
push
out
movs
call
push
std
add
adc
rcpps
cmc
fdivr
cli
push
mov
js
jmp
icebp
pop
and
loope
dec
fcmovbe
test
fisubr
xlat
cmp
xor
mov
das
aad
out
push
jb
mov
outs
bswap
xor
call
lods
(bad)
xor
mov
out
test
aam
into
rol
cmp
mov
out
dec
xchg
adc
adc
lds
rcl
mov
movs
test
repnz
mov
jne
aas
xchg
sbb
add
fist
ret
mov
ret
push
and
je
adc
adc
xor
mov
scas
jns
scas
push
push
stc
adc
push
(bad)
nop
xor
aam
sti
push
xor
dec
ins
cmp
aas
clc
lods
int
cmp
cmp
sub
mov
popa
push
gs
jge
cmp
sub
loopne
test
cmp
xchg
in
popa
das
es
push
fwait
lea
cmp
daa
cmp
pop
xchg
fprem
add
adc
inc
mov
repz
icebp
hlt
sar
and
clc
xchg
aam
jno
push
pop
outs
mov
lea
ror
dec
mov
mov
pop
(bad)
stos
(bad)
mov
sub
jmp
rcl
adc
std
fdivr
icebp
adc
cmp
mov
in
mov
jmp
mov
mov
jmp
cli
js
cmp
mov
or
jge
cdq
jmp
sbb
dec
pop
xchg
jmp
lock
pop
ret
push
pop
push
jl
pop
inc
fisub
dec
mov
xchg
retf
dec
in
dec
push
hlt
push
adc
xlat
js
fs
adc
stos
mov
sub
mov
popf
aas
xchg
icebp
push
test
aas
xor
pop
out
jnp
pop
add
frstor
or
stc
out
add
(bad)
push
or
xchg
jnp
(bad)
(bad)
clc
test
dec
and
and
or
movs
test
cmp
dec
clc
and
mov
aam
cmc
je
sbb
inc
and
xor
sbb
std
sub
mov
fwait
pop
lea
(bad)
aaa
push
fs
xor
je
mov
xor
fmul
mov
push
add
aaa
pop
shl
js
mov
pop
add
push
lea
jae
outs
js
inc
js
inc
cmp
(bad)
cmc
aam
cmp
push
lds
add
repz
cmps
stc
outs
sar
and
pushf
outs
pop
sbb
icebp
ins
fnstcw
xor
lods
and
lods
mov
xchg
icebp
out
mov
mov
adc
cmps
xor
xor
xchg
dec
and
cmp
out
mov
stos
std
pop
cmp
shl
sub
dec
(bad)
mov
out
cmps
aam
dec
lods
sbb
sub
mov
cmps
in
call
retf
push
sbb
out
fld
and
dec
ret
sbb
xchg
ds
or
xchg
(bad)
pop
mov
inc
pop
dec
fst
mov
xchg
inc
add
rcl
jns
jmp
xchg
mov
les
iret
xchg
xor
sbb
xlat
ret
lea
pushf
leave
or
mov
test
(bad)
loope
bound
xor
stos
(bad)
inc
mov
jns
sti
xor
xchg
mov
jmp
pushf
jo
cwde
dec
loop
push
cdq
fdivrp
mov
lahf
sub
mov
imul
in
jbe
cs
jmp
je
or
or
mov
jae
adc
inc
shr
jno
jl
and
popf
call
inc
jle
ss
push
inc
pop
out
scas
pop
sub
arpl
dec
hlt
inc
dec
int3
or
inc
aam
push
jmp
sbb
jae
pop
(bad)
dec
or
ss
sub
and
pop
retf
push
mov
fwait
jl
outs
adc
xchg
lahf
sbb
icebp
inc
jl
push
add
or
fidiv
sbb
mov
dec
lods
and
sub
ja
push
das
aad
push
cwde
mov
jl
xor
out
mov
addr16
xor
cmps
dec
fwait
inc
mov
cmp
ret
loope
jo
push
sub
lods
daa
and
(bad)
push
adc
icebp
sbb
aaa
xor
lods
mov
jmp
shr
and
dec
jb
retf
fnstenv
or
or
cmp
mov
pusha
fs
pop
xchg
or
jo
push
xchg
push
add
mov
xor
ror
ss
mov
dec
enter
iret
(bad)
fdiv
fcomp
mov
or
mov
in
inc
mov
or
fdivr
arpl
adc
jo
or
test
enter
test
mov
dec
and
imul
push
ret
lock
jnp
dec
xor
mov
das
dec
movs
or
xchg
push
mov
in
jecxz
pushf
movzx
hlt
jle
or
cmp
sahf
js
pop
or
aas
xchg
inc
ret
xchg
and
sbb
in
pop
scas
movs
popa
jge
or
mov
dec
int3
aas
test
mov
jb
push
(bad)
mov
dec
call
(bad)
push
xchg
push
(bad)
pop
push
cmc
push
test
icebp
test
test
nop
mov
sub
scas
(bad)
adc
les
mov
sub
test
out
addr16
push
xchg
xchg
push
dec
pop
ins
lahf
outs
(bad)
mov
gs
jo
sbb
aam
scas
inc
xchg
adc
in
adc
fcomp
or
sahf
imul
out
or
and
mov
jno
inc
mov
xchg
out
mov
sbb
dec
cli
mov
mov
call
or
js
sbb
hlt
ins
pop
inc
xor
fbld
sub
jmp
pop
out
rcr
stos
jmp
mov
out
ins
xchg
jmp
rcl
cli
(bad)
mov
in
stc
lock
rcl
xchg
(bad)
pop
repz
xchg
pop
aam
ror
add
lahf
mov
dec
scas
xchg
out
sbb
out
fisttp
xlat
enter
xchg
adc
push
leave
fst
xchg
fwait
push
dec
js
repnz
(bad)
push
push
push
or
mov
popa
mov
mov
inc
dec
push
sbb
dec
(bad)
sbb
(bad)
lahf
dec
dec
mov
movs
or
repz
mov
pop
aam
mov
arpl
scas
add
jnp
push
movs
mov
dec
add
icebp
and
pop
cs
loopne
and
int
jae
jae
or
or
jge
popf
push
adc
pop
adc
retf
je
xchg
test
pop
xchg
dec
push
push
sbb
mov
jne
cwde
mov
out
or
jnp
inc
das
stos
or
sbb
movs
mov
inc
and
fld
div
mov
pop
pop
cmp
jns
pop
mov
xor
dec
gs
pop
cdq
call
jb
jns
dec
cmps
(bad)
movs
jae
xlat
stos
jg
mov
push
cli
xchg
fld
cmp
jmp
sub
jae
dec
jne
mov
adc
retf
cmp
rol
mov
and
call
dec
cld
add
mov
repnz
std
push
movs
inc
cmp
inc
xor
jns
fadd
mov
or
out
xor
jmp
push
adc
mov
pop
mov
test
push
into
push
cmp
push
aam
mov
add
sbb
loope
fdivr
xor
enter
mov
(bad)
pop
(bad)
out
mov
stc
mov
out
pop
cmps
sar
shr
addr16
dec
mov
mov
sbb
loopne
ja
arpl
xor
ss
cli
popf
jp
cmp
dec
arpl
mov
jbe
push
push
mov
sub
dec
fsubr
xor
inc
in
retf
add
jp
out
inc
aad
mov
test
jecxz
pushf
dec
mul
jp
lds
mov
and
ret
out
mov
lds
clc
(bad)
stc
mov
xchg
push
pop
dec
test
das
adc
aam
jle
cld
test
js
movs
sti
loope
in
xor
xlat
cmp
jg
jno
push
fcmovnb
loope
mov
sub
sub
inc
shl
cvtpi2ps
adc
movs
mov
into
out
ja
out
push
inc
mov
fisttp
ins
mov
(bad)
pop
xchg
ret
or
pop
mov
ret
lods
data16
pop
hlt
pop
pop
pop
cmp
or
stc
ds
aad
imul
dec
mov
(bad)
xchg
loop
out
lahf
push
pop
sub
ficom
lds
daa
iret
(bad)
repz
int
xor
jmp
outs
jmp
push
fldln2
xchg
mov
rcr
pop
inc
xchg
(bad)
imul
adc
pop
jmp
in
or
mov
mov
mov
pop
inc
pushf
stc
push
dec
xchg
mov
sub
fdivr
sbb
or
fstp
fistp
shl
lock
mov
imul
test
into
cmps
jle
arpl
mov
daa
int3
jecxz
inc
mov
lahf
cli
pop
retf
xor
jp
or
pusha
ret
dec
mov
ret
aad
out
push
jb
adc
movs
fbld
out
adc
cdq
pop
repnz
mov
sbb
loopne
aam
icebp
xlat
lds
push
shr
pushf
movs
jp
xchg
loope
push
repnz
mov
push
rcr
enter
bound
sub
and
daa
jmp
push
push
add
pop
jl
sahf
jo
push
pop
mov
mov
pop
movs
inc
stos
mov
jae
jmp
(bad)
pop
(bad)
jmp
jecxz
or
mov
hlt
jg
out
cld
sbb
adc
or
es
push
repnz
retf
adc
bound
sbb
faddp
aam
ja
je
test
test
ret
xchg
scas
stos
popa
pop
ret
jno
mov
test
pop
jbe
jge
sbb
jne
inc
sbb
pop
into
dec
mov
inc
out
jl
sub
jle
jne
js
ins
xchg
aad
or
or
jle
mov
mov
mov
jg
push
fs
push
pop
cld
std
push
pop
sbb
jg
mov
push
xchg
cli
test
cld
test
daa
xchg
mov
test
or
in
lods
pop
test
jmp
and
lods
and
fsub
adc
mov
mov
sub
or
lea
vaddss
xchg
repnz
adc
ret
xor
adc
das
jg
xchg
inc
xor
arpl
(bad)
repnz
int3
fwait
in
push
sbb
add
mov
push
(bad)
mov
nop
(bad)
je
jae
movs
xor
mov
and
push
outs
or
add
lahf
jg
fisubr
dec
(bad)
sub
mov
(bad)
xchg
jmp
(bad)
(bad)
hlt
cmp
push
mov
xor
adc
fnstcw
bound
inc
and
push
or
xor
xchg
pop
push
sbb
or
push
cmc
xchg
lods
mov
leave
pop
es
jg
repz
stc
mov
(bad)
out
imul
cmps
pop
mov
leave
pop
not
in
push
not
cwde
imul
mov
fbld
fucomp
mov
outs
ret
add
fptan
cmp
hlt
mov
mov
fistp
xor
adc
mov
gs
addr16
inc
call
and
rcr
inc
idiv
sub
pop
pop
add
gs
imul
clc
cwde
loopne
jmp
in
mov
mov
(bad)
ret
pop
pop
retf
lds
or
jl
nop
or
add
mov
shr
leave
cmp
jnp
sub
mov
xor
mov
dec
lahf
aas
push
cdq
call
push
les
in
ins
xor
nop
imul
lds
(bad)
sbb
ret
dec
fdivr
outs
xor
rcr
cmp
cmp
lea
cld
cmp
push
les
adc
(bad)
cmp
jmp
jg
xchg
adc
fwait
sub
inc
leave
cli
or
jb
ret
jl
in
mov
jo
pop
or
sbb
add
(bad)
addr16
mov
sbb
iret
mov
push
lds
fcom
sahf
(bad)
pop
in
push
push
mov
or
retf
mov
jle
lock
inc
jo
mov
and
sub
icebp
cmp
aam
sub
cli
push
(bad)
nop
call
cwde
stos
(bad)
push
adc
pop
repz
je
xchg
mul
adc
sub
mov
mov
call
or
mov
retf
jmp
xor
cmp
mov
dec
test
ins
add
dec
leave
out
scas
pop
mov
ret
inc
fwait
push
pop
ins
idiv
iret
mov
jmp
call
jnp
ins
or
das
adc
aaa
lock
mov
xchg
dec
ins
ret
inc
gs
or
lds
or
cmps
hlt
jmp
pop
and
out
mov
mov
pusha
nop
dec
lahf
sbb
jno
sbb
mov
push
mov
ds
ret
cmp
imul
sbb
xlat
mov
xchg
xchg
push
push
xchg
sahf
fsubr
pop
mov
sub
xchg
lock
push
inc
out
popf
dec
jecxz
jge
adc
pop
aad
outs
sbb
cmc
sbb
(bad)
bnd
test
jbe
(bad)
out
repz
pop
rcr
iret
and
mov
daa
call
xor
inc
mov
add
or
mov
inc
cdq
fistp
dec
sbb
xchg
cdq
lods
loope
rcl
pop
push
push
xchg
ins
(bad)
in
inc
leave
outs
loope
fdiv
jmp
mov
call
xchg
popa
xor
sbb
lds
mov
mov
(bad)
std
in
adc
(bad)
scas
jbe
imul
sub
std
jne
jne
lock
jae
cmps
test
sbb
or
jns
aas
sbb
or
sbb
mov
fisttp
pop
xchg
cmp
popa
pop
in
pop
add
xchg
jp
dec
in
mov
jnp
imul
xchg
aad
(bad)
fdivr
stc
(bad)
jg
mov
xchg
and
lahf
cmp
rcr
fucomi
jns
daa
inc
pop
mov
enter
aas
mov
cld
adc
sbb
or
lahf
cmp
and
ss
lea
push
or
jns
mov
sbb
dec
xchg
out
inc
cmp
mov
mov
test
cmp
pop
ret
xor
sbb
xchg
mov
in
pop
xlat
mov
push
or
dec
add
outs
test
and
xchg
leave
div
stc
jnp
xchg
repnz
fs
add
int3
retf
lds
in
mov
cwde
fmul
fldenv
sbb
push
push
movs
stos
rcr
lea
or
sub
add
cmc
call
scas
xor
stos
or
std
xor
push
sbb
cwde
pop
cmc
sahf
xchg
out
(bad)
pop
add
enter
nop
ins
std
pop
out
or
(bad)
dec
xor
mov
mov
pop
sbb
mov
sar
(bad)
sbb
fidivr
(bad)
mov
outs
and
pop
mov
sub
xor
cmps
cmp
pop
ret
jge
scas
js
cmp
push
cmp
fadd
add
fnstsw
jmp
ret
fld
inc
bound
shl
(bad)
cmps
jno
pushf
jne
das
out
iret
xchg
xchg
mov
xor
or
push
arpl
inc
pop
xor
adc
mov
sub
mov
call
fwait
xchg
inc
mov
or
jae
rol
popa
sbb
ins
ret
imul
inc
mov
shl
lock
sbb
shr
scas
(bad)
cmps
push
rol
movs
stc
pop
push
mov
lods
pop
push
or
and
dec
arpl
and
pop
aad
add
(bad)
imul
cmp
outs
and
mov
mov
xor
stc
or
loopne
fld
in
je
xor
outs
(bad)
into
pop
ror
out
stos
pop
retf
xchg
popa
mov
sbb
or
out
push
popa
inc
out
aaa
push
mov
xor
dec
cmps
ds
mov
clc
mov
int3
sbb
xor
fbld
fsubr
fcomp
dec
data16
out
jo
jmp
sti
adc
push
adc
gs
dec
jno
push
sbb
inc
inc
loopne
xchg
rcr
ret
xchg
bound
jmp
fsubr
outs
inc
sbb
fild
inc
push
popa
cld
call
cdq
mov
dec
xchg
scas
mov
movs
stos
xchg
std
sbb
and
cdq
jns
ss
xlat
xchg
xlat
retf
shl
and
sar
cs
icebp
jb
(bad)
rcl
jge
mov
jb
pop
pop
mov
push
gs
sub
pop
clc
jle
cmp
pop
call
hlt
xor
and
lea
xchg
fidiv
sbb
je
(bad)
clc
add
in
and
pop
popa
ins
icebp
add
sbb
cmp
inc
and
je
int3
ja
jecxz
adc
loop
movs
pop
jecxz
sbb
aad
into
xchg
fwait
ds
test
std
or
mov
xchg
cmp
sahf
jg
std
cmp
data16
loopne
or
dec
push
push
mov
mov
sbb
lods
mov
xor
mov
xlat
jno
ja
jle
mov
(bad)
jo
data16
test
sub
cwde
lahf
fwait
mov
stos
out
xchg
cmp
pusha
inc
mov
and
int
pop
fs
or
mov
das
mov
mov
(bad)
sub
cmp
daa
dec
dec
and
fbld
(bad)
xchg
jp
push
out
lock
or
lea
jmp
adc
sahf
pusha
inc
in
(bad)
xchg
retf
in
enter
jle
loop
xchg
cmps
mov
xchg
xor
add
out
mov
and
pop
dec
pop
cmc
xchg
dec
fsub
cmp
or
popf
neg
xchg
rcl
push
sahf
pop
sti
sub
xor
fldcw
addr16
das
cmc
pop
(bad)
fcmovnu
leave
ret
fisubr
frstor
icebp
mov
mov
pop
and
jge
scas
iret
mov
pop
cmp
stc
(bad)
mov
stc
xor
jmp
inc
je
fcmovne
pushf
and
out
adc
cmps
dec
jge
test
(bad)
jmp
cmps
jnp
(bad)
cdq
xor
repz
loopne
push
pop
popa
jno
jle
fsub
jg
out
test
aam
push
outs
(bad)
push
psrlq
mov
mov
mov
add
cld
adc
pop
fwait
cmps
sbb
jge
fsub
xchg
xlat
loop
sbb
iret
push
fcom
jns
sti
popa
inc
pop
mov
mov
sub
(bad)
jo
mov
fisub
movs
jo
std
push
pop
imul
loope
cmp
cld
and
cmp
in
mov
mov
cli
ret
pop
pop
rol
cmp
pop
mov
inc
outs
mov
cmp
mov
sub
out
pop
mov
xchg
retf
mov
cdq
aad
sbb
sbb
jg
ja
(bad)
mov
shl
cmp
bts
mov
rol
lea
inc
mov
retf
ss
test
fs
outs
mov
aas
sbb
dec
fst
call
inc
xor
ss
push
aam
inc
call
jecxz
ret
lahf
and
mov
xchg
dec
out
jno
js
mov
jge
xor
std
sbb
pop
push
pop
rol
data16
mov
aaa
movs
mov
inc
in
xor
jns
cmps
and
out
xor
mov
cmp
jmp
mov
mov
mov
and
adc
repnz
int3
out
in
xor
int3
out
stos
hlt
jne
lahf
call
mov
es
inc
jecxz
stos
jmp
push
sti
xor
neg
jnp
retf
(bad)
dec
mov
xor
sahf
(bad)
or
push
xor
shl
pop
in
mul
mov
cmp
into
mov
fld
inc
xor
xchg
cmp
test
adc
cmc
test
je
int
lahf
sbb
iret
call
adc
and
stos
sbb
(bad)
add
jecxz
stos
xchg
rcl
sbb
in
(bad)
and
aaa
test
xchg
push
fsubr
xchg
jb
(bad)
fldl2e
add
nop
hlt
outs
xor
xchg
loope
xchg
(bad)
jmp
popf
mov
xchg
mov
shr
mov
mov
mov
ror
stos
js
movs
pop
movs
pusha
dec
or
fcom
cs
ret
pop
outs
push
fcom
imul
in
add
aaa
aas
aam
ror
fnstcw
into
jmp
fisttp
xchg
cdq
inc
or
movs
ficom
mov
inc
and
test
aaa
jmp
js
and
aad
pop
dec
sbb
ret
sbb
(bad)
in
sti
(bad)
and
xchg
cmp
dec
stc
js
inc
pop
js
test
xor
retf
and
mov
push
jg
push
xlat
ror
leave
bound
jb
sub
pop
ret
mov
jle
lea
scas
jo
ret
xor
jmp
inc
sub
out
push
dec
jns
mov
xchg
data16
idiv
imul
and
sbb
int
fstp
xor
push
icebp
adc
xchg
pop
cmp
aad
js
je
dec
out
(bad)
xlat
jmp
in
mov
icebp
push
jmp
jns
aas
jmp
inc
call
iret
lea
push
mov
add
imul
sub
pop
fldcw
addr16
xor
inc
mov
push
out
inc
and
dec
paddusb
mov
out
and
xchg
inc
mov
test
repz
dec
jmp
xchg
in
rcr
lods
mov
ds
les
xchg
test
or
js
or
jne
ins
pop
xchg
js
ja
nop
aas
and
bound
mov
jns
imul
mov
xchg
loope
aaa
cmovl
popf
inc
dec
cmp
ja
movs
inc
pop
movs
cs
push
leave
dec
std
(bad)
leave
out
lock
(bad)
mov
add
or
loopne
adc
pushf
out
test
adc
imul
cld
add
shl
das
xor
and
mov
ret
and
fwait
or
sbb
lods
nop
push
loop
out
xor
mov
popa
cld
je
mov
ret
xchg
jmp
add
dec
and
dec
rol
inc
nop
jmp
xchg
add
sbb
icebp
addr16
add
push
sub
jo
sub
js
lahf
loop
and
jmp
in
inc
xchg
jo
inc
ret
xor
les
mov
in
outs
cmp
or
mov
cmp
popf
inc
jmp
mov
sbb
and
inc
inc
inc
int3
loop
test
inc
xor
sti
in
setg
jle
rol
in
mov
aad
pop
or
sub
push
sub
jno
pop
pop
out
add
and
sbb
cs
xor
loope
addr16
xor
test
in
adc
das
push
jno
repnz
xchg
mov
sub
cmp
add
adc
pop
inc
daa
xchg
icebp
mov
adc
xchg
adc
push
ss
(bad)
jmp
mov
push
(bad)
ja
pop
fs
push
ss
cli
jns
adc
out
ja
in
lods
or
ja
iret
aas
push
sub
(bad)
mov
pop
mov
dec
test
mov
in
sub
mov
sbb
jb
arpl
pop
sub
inc
je
out
into
pop
inc
(bad)
fild
cmp
int3
mov
fsubr
in
gs
push
cmps
nop
inc
sub
push
(bad)
(bad)
sub
add
push
mov
stos
adc
push
inc
fnstcw
sar
pop
aas
adc
fimul
mov
jb
mov
ror
adc
(bad)
aam
dec
jg
pop
mov
mov
repnz
imul
pop
sub
addr16
or
out
sbb
jne
adc
sbb
mov
cmps
or
movs
out
repnz
lock
sub
sar
mov
mov
jae
pushf
xchg
(bad)
std
stc
adc
xor
pop
xor
and
xor
cmp
mov
dec
cmp
call
stos
test
and
popf
mov
(bad)
jmp
fstp
jmp
ins
push
add
daa
push
in
fwait
js
xchg
shl
xor
pusha
(bad)
jo
cdq
aam
mov
add
cs
jne
sub
jg
xor
inc
outs
xchg
cdq
in
pop
cmc
cmp
dec
test
out
ins
pop
mov
fidiv
je
pop
je
sub
dec
xchg
xor
dec
xchg
mov
push
int
push
les
add
dec
sbb
cmp
mov
xor
cmps
cmp
sub
or
mov
or
mov
int
fidiv
jne
pop
rol
fisubr
pop
mov
call
ss
mul
mov
icebp
loopne
fiadd
daa
mov
cli
ret
je
mov
pop
push
xor
push
inc
out
loop
add
lods
inc
jge
mov
jmp
or
gs
and
retf
jle
push
mov
xchg
scas
loope
nop
inc
jne
stc
jns
call
fistp
outs
movs
stos
es
add
jle
lahf
data16
std
loopne
pop
push
sbb
xchg
icebp
sbb
or
sbb
add
aam
ret
data16
(bad)
in
add
hlt
fadd
retf
push
(bad)
and
leave
sar
movs
pop
fist
sbb
and
sub
retf
xchg
and
jnp
jp
fnsave
inc
dec
cdq
xor
pop
idiv
jl
and
mov
mov
scas
xchg
test
rcl
adc
xchg
push
xlat
ss
stc
xchg
repnz
mov
and
and
mov
pop
sbb
sbb
and
and
xor
sub
pusha
gs
jle
ins
js
or
mov
xor
xchg
retf
push
lods
dec
or
call
inc
test
popa
mov
lock
je
pop
lock
push
add
pushf
xor
arpl
movs
in
shr
inc
aam
fwait
jmp
call
lds
push
mov
xchg
cmp
sbb
dec
stos
sahf
pop
cmp
sbb
push
or
cdq
adc
xchg
adc
addr16
cmp
xor
pusha
sub
imul
aaa
(bad)
imul
ins
pop
mul
push
cmp
pop
cmps
pusha
adc
and
adc
inc
xchg
mov
sbb
xchg
imul
outs
sub
xchg
pusha
mov
imul
mov
out
or
xchg
je
das
test
xchg
pop
cdq
imul
jnp
mov
adc
push
pop
push
pop
push
pop
sahf
jecxz
push
scas
sahf
(bad)
xor
cmp
mov
inc
push
dec
or
mov
push
pop
(bad)
(bad)
push
sbb
pop
pop
add
or
xchg
inc
fld
pop
(bad)
jo
loop
in
test
outs
adc
push
mov
stc
inc
mov
push
(bad)
ror
dec
rol
mov
ins
jno
add
cdq
jmp
push
test
xor
cld
sti
out
adc
jae
xchg
adc
sub
sbb
addr16
into
xchg
or
iret
jne
xchg
push
lds
cmp
jnp
add
mov
retf
sub
shl
push
(bad)
out
imul
popf
dec
test
mov
xchg
cmp
test
push
int3
xor
leave
fild
mov
fs
fucomip
retf
sbb
cmp
cs
xor
mov
ins
jmp
int3
sbb
fistp
lea
inc
add
(bad)
fwait
sahf
es
xor
jp
inc
sub
cmp
inc
cmp
cmp
jl
fisub
mov
je
fidiv
in
sbb
mov
icebp
adc
pop
jbe
in
repnz
push
test
mov
cmp
cmc
movlps
jno
jmp
cmp
test
out
outs
xchg
adc
jnp
fistp
fsubr
shr
push
and
mov
ss
push
cmps
ror
mov
pop
pop
xchg
push
push
hlt
adc
push
into
sbb
pusha
pop
add
fist
push
sbb
movs
hlt
repz
out
and
arpl
dec
stos
sub
(bad)
movs
push
dec
aaa
add
into
sbb
jecxz
mov
xlat
leave
mov
pop
lahf
inc
movs
sbb
fisttp
inc
test
lds
add
pop
nop
push
test
xchg
int
inc
out
sti
mov
xchg
je
add
add
call
std
sti
mov
retf
movs
mov
inc
mov
adc
jge
or
sub
cmc
shl
dec
dec
aaa
dec
mov
jge
aaa
test
adc
and
es
loop
popa
aam
push
cmp
movs
dec
or
je
cmp
scas
paddsb
aaa
cmc
sahf
add
out
push
mov
jmp
out
xchg
(bad)
(bad)
mov
gs
dec
cmp
add
ja
sub
adc
inc
stc
sahf
and
neg
lock
or
jns
jb
fbstp
mov
sub
nop
jne
fisubr
xor
pop
push
mov
xor
jg
out
mov
(bad)
or
mov
mov
imul
push
xor
xor
ins
nop
and
sahf
loopne
out
xor
call
xchg
push
ins
mov
ins
inc
or
xchg
aas
pop
inc
jns
mov
(bad)
test
jg
xor
test
fs
push
sbb
inc
jmp
sti
or
loop
movs
lods
loope
leave
xor
outs
mov
mov
(bad)
repz
mov
and
fisttp
xor
add
(bad)
and
adc
daa
jb
aam
stc
jl
mov
xchg
loope
loopne
pop
mov
scas
mov
sbb
fs
sub
ins
and
addr16
mov
mov
xchg
into
mov
into
fwait
sub
dec
or
pushf
cmp
in
popa
out
test
xchg
in
pop
inc
adc
int
xchg
mov
add
mov
inc
mov
call
pop
mov
cwde
inc
cmp
mov
jno
cmp
dec
push
pop
push
pop
cmp
pop
sbb
xchg
aad
sar
in
rol
dec
sbb
and
cmps
xchg
cwde
cmp
aad
jnp
cwde
loope
pushf
out
mov
addr16
arpl
arpl
and
les
hlt
clc
cmp
pop
addr16
add
fadd
cmp
pop
xchg
jno
xchg
inc
or
mov
cmps
call
jno
fwait
sbb
popf
adc
addr16
inc
mov
(bad)
out
repz
push
xchg
sub
add
sti
inc
xor
bound
enter
bound
mov
outs
mov
(bad)
in
arpl
ret
mov
clc
pop
ror
fld
mov
out
out
(bad)
sub
push
push
and
inc
pop
dec
imul
mov
(bad)
pop
mov
aaa
xor
lods
xchg
pop
jl
mov
in
mov
cmp
sub
push
adc
retf
and
mov
push
mov
push
mov
aaa
push
mov
jnp
push
push
jp
xchg
mov
pop
push
and
arpl
jge
pop
out
gs
in
sub
push
outs
jg
sbb
sbb
test
cmp
cwde
sub
fidiv
fcompp
rcr
mov
add
xchg
pusha
mov
sar
jg
iret
xchg
pop
lea
jns
(bad)
mov
retf
out
pop
ror
scas
cmp
imul
repnz
pop
cmp
stc
pop
in
cli
push
mov
and
xor
in
ret
cmps
cmps
add
lods
movs
mov
inc
jae
(bad)
icebp
sbb
fistp
out
push
pop
out
and
mov
cmp
gs
or
aad
inc
aaa
repz
sub
cmc
mov
or
inc
sub
mov
loopne
adc
(bad)
aad
adc
adc
mov
shl
mov
sub
xchg
and
scas
mov
inc
xor
cmp
scas
mov
ror
jno
xor
jge
xchg
fisubr
data16
int3
adc
pushf
and
mov
push
mov
pop
mov
jmp
inc
ins
inc
inc
cld
das
iret
or
add
out
ja
movs
push
mov
jb
or
push
adc
scas
mov
and
pop
cmps
cmp
bound
clc
lds
enter
hlt
jl
jno
push
mov
psubsw
xchg
mov
and
hlt
fsub
call
cwde
pop
mov
scas
inc
idiv
cmp
adc
fst
mov
mov
pop
hlt
pop
or
mov
fdiv
push
mov
and
stos
fisttp
daa
xor
sbb
scas
les
test
mov
retf
add
pop
leave
adc
in
jo
nop
fidiv
cmp
out
xor
nop
inc
imul
or
adc
mov
data16
mov
mov
lahf
xchg
xchg
cmp
or
and
xchg
(bad)
mov
std
test
sub
cmp
gs
push
jmp
add
add
xchg
(bad)
retf
in
dec
jb
repz
call
xor
clc
sbb
xchg
test
out
fld
mov
jmp
aaa
icebp
stos
in
jae
mov
jl
xor
mov
(bad)
fcomp
xchg
inc
mov
in
mov
jmp
cli
or
rcr
and
push
pop
jb
popf
scas
dec
test
repz
cdq
xchg
retf
sbb
or
mov
push
stos
fistp
in
gs
push
mov
cmps
xor
jmp
inc
setbe
jb
mov
inc
lahf
sub
sub
int3
mov
cmps
stos
movs
xchg
jo
sti
sti
push
popf
jp
xlat
int
ja
rol
jno
scas
cmp
retf
in
mov
sbb
int3
imul
jmp
xor
xor
mov
push
mov
cmp
dec
or
adc
into
shufps
mov
pop
movs
sbb
lock
pop
ds
pop
dec
inc
jns
push
xchg
sub
inc
sub
sub
add
sahf
inc
scas
inc
adc
cmp
jg
dec
and
fild
shr
and
test
fnstcw
leave
or
das
push
sub
fs
ins
addr16
sbb
cwde
stc
pusha
stos
stc
mov
not
jb
cmp
sti
in
dec
leave
(bad)
loopne
out
sar
arpl
cmp
pushf
cwde
(bad)
dec
stc
and
sub
imul
clc
mov
repnz
jl
mov
add
repz
cmp
call
pop
push
mov
out
push
lahf
data16
hlt
sbb
pop
lock
daa
jmp
fst
outs
jge
mov
cmps
dec
mov
cmp
retf
add
iret
mov
sbb
jmp
popa
sbb
xchg
aam
popf
movs
div
fidivr
inc
nop
in
std
rol
cdq
dec
mov
cdq
dec
ror
in
add
jns
dec
fisttp
cli
fst
fidiv
arpl
adc
mov
cmp
jb
retf
jle
mov
clc
arpl
(bad)
inc
or
loopne
mov
int3
dec
xchg
dec
bound
daa
movs
and
inc
jmp
xchg
retf
cwde
cs
imul
or
jg
cmp
dec
dec
fisub
out
loope
jbe
pop
das
jecxz
jno
push
in
cld
mov
xchg
pop
add
xor
cmp
xchg
shl
cmp
loopne
pusha
cmps
add
das
sti
nop
clc
and
ins
not
fld
arpl
pop
scas
mov
cs
scas
push
mov
cmps
mov
inc
cmp
loope
jle
jbe
cli
inc
push
mov
jg
repz
push
arpl
mov
mov
jb
mov
dec
mov
js
loopne
adc
(bad)
ja
sbb
and
icebp
mov
add
jg
xchg
add
or
jae
and
jbe
inc
stos
push
aad
scas
rol
movs
mov
pop
xor
mov
jne
mov
add
cmps
dec
mov
fs
jp
jmp
aam
daa
jae
mov
pop
fnsave
repnz
clc
rol
inc
outs
cdq
mov
mov
lods
not
ret
push
adc
mov
int
mov
loopne
cmp
inc
xchg
dec
xor
imul
aam
ins
xchg
jge
mov
fwait
xchg
xor
sub
dec
jne
pop
js
adc
dec
outs
jmp
clc
outs
xchg
mov
icebp
pop
jmp
cmp
and
pusha
cmps
sbb
out
and
sbb
aad
cmp
sbb
bound
pop
jp
pop
shl
mov
rol
sub
ror
mov
gs
popf
(bad)
dec
(bad)
cmps
data16
inc
sub
mov
stos
les
xchg
xchg
lahf
cli
in
dec
std
imul
and
sub
fisttp
add
sbb
and
pop
mov
mov
mov
inc
nop
sbb
sub
repnz
ret
mov
adc
ja
into
daa
pop
sbb
push
cmc
hlt
imul
bound
or
xchg
jo
mov
jo
add
push
mov
and
je
(bad)
push
adc
das
xlat
nop
mov
adc
mov
add
rdtsc
shl
sahf
jle
fcomp
add
mov
rol
call
pushf
and
push
(bad)
dec
cmp
jmp
adc
lahf
cmps
and
ss
push
mov
jle
add
fldcw
jmp
(bad)
fs
das
stos
dec
cld
mov
mov
inc
arpl
iret
add
xchg
xchg
aam
inc
dec
lahf
ins
add
retf
pop
stos
sbb
pushf
sub
bswap
cmps
mov
mov
clc
sbb
xor
ret
cmc
jmp
cmp
pusha
inc
in
cmp
int
pop
xor
popa
push
mov
(bad)
adc
jp
gs
cmp
add
cmps
or
gs
test
addr16
adc
sbb
les
jo
dec
dec
xchg
adc
int3
(bad)
sbb
jb
sub
adc
cmp
js
or
sub
jg
or
(bad)
clc
stc
mov
ret
sub
mov
ins
loop
push
idiv
sbb
scas
xor
jb
xor
ss
movs
push
add
cmp
sahf
mov
test
loop
mov
mov
fild
shl
bound
cmps
fiadd
(bad)
sub
pop
pushf
stc
shr
and
das
xor
xchg
or
pop
xchg
jns
mov
repnz
xchg
popa
imul
mov
adc
mov
fs
retf
in
imul
sahf
or
add
rep
imul
std
pusha
js
push
cmc
cmp
retf
dec
xor
pop
inc
xchg
xchg
out
in
in
test
and
and
mov
sbb
jl
ins
mov
inc
arpl
pop
mov
enter
sar
leave
sub
push
cmp
mov
add
scas
cdq
xlat
cmp
ret
stos
ror
sub
dec
jmp
lods
mov
test
out
icebp
in
imul
movs
pop
lds
mov
lods
out
mov
fist
lds
jle
imul
mov
push
lahf
pop
ret
outs
call
data16
pop
jno
call
pop
add
in
fidiv
push
lods
dec
pop
sub
mov
ss
out
add
popf
sbb
or
icebp
pop
sbb
call
mov
dec
cmc
ins
mov
int3
cmp
sbb
ja
cli
pop
jmp
xchg
mov
jns
inc
inc
mov
lock
imul
adc
mov
in
xchg
xchg
add
jecxz
sub
xlat
sar
cmp
in
idiv
xchg
movs
sbb
cmps
push
rcr
test
inc
mov
and
sbb
or
add
dec
in
mov
ud2
sub
adc
jmp
lds
jl
adc
dec
add
xor
xchg
sub
fstp
(bad)
and
enter
fiadd
test
movntq
out
jo
scas
dec
jae
retf
sub
sbb
lahf
in
jnp
dec
adc
push
inc
dec
push
bound
add
sub
xchg
xchg
mov
out
in
sub
xchg
xchg
pop
rcl
rcr
jns
cdq
mov
aas
push
mov
pop
mov
cmp
cmc
in
xchg
iret
icebp
out
int3
loop
gs
mov
mov
add
sub
push
icebp
movs
add
xchg
sub
jnp
cmc
pop
stos
push
mov
fiadd
push
push
mov
push
inc
or
repnz
push
jb
in
add
push
in
cmp
sub
loopne
push
ja
cmp
das
jmp
stos
movs
je
push
cmp
imul
sbb
mov
das
mov
add
xchg
mov
sub
cmc
add
dec
jge
xchg
push
int
mov
js
or
mov
push
das
aaa
push
mov
fdiv
push
div
push
xlat
int3
mov
aas
cs
sub
xchg
shl
mov
out
and
xchg
cmp
iret
daa
dec
sub
stc
xchg
mov
fs
ins
mov
lods
mov
pop
out
sahf
js
inc
push
test
(bad)
sahf
in
mov
std
xchg
aaa
xchg
mov
cdq
ror
stos
jl
jp
sub
lock
pop
lea
ret
enter
in
fld
shr
cli
xchg
rcr
mov
and
out
cmp
push
jbe
cmc
bound
repz
ins
fbstp
dec
call
xchg
cmps
popf
mov
nop
icebp
jmp
push
jns
out
xor
dec
call
fcom
das
les
addr16
jge
xchg
dec
stc
movs
iret
sbb
retf
dec
out
daa
xchg
test
jae
lods
and
sbb
out
cs
cmp
vaddsubpd
mov
and
call
popa
pop
shl
mov
inc
retf
sbb
sbb
cmp
mov
mov
push
sub
fsubr
mov
sbb
inc
cwde
sub
xchg
dec
or
mov
mov
add
jp
jns
js
cmc
mov
cmp
mov
or
stos
mov
adc
sbb
daa
jns
(bad)
pop
dec
lock
mov
cmp
dec
(bad)
sbb
push
and
mov
nop
repnz
scas
mov
das
dec
(bad)
loope
hlt
gs
xchg
sub
add
xlat
push
jae
mov
push
in
out
repz
movs
mov
mov
dec
iret
jno
inc
cmp
sub
sti
mov
xor
fild
xor
jno
lds
pop
out
fbstp
mov
xlat
mov
push
fs
sahf
xor
loope
lods
ror
xor
pop
stc
(bad)
jbe
in
psubusb
mov
sar
in
sar
call
mov
enter
fld
and
inc
adc
cs
rcr
test
aam
(bad)
fsubr
jl
data16
fidivr
add
adc
lods
mov
outs
inc
pop
daa
pushf
push
stos
repz
int
inc
inc
loop
mov
clc
sti
push
shl
push
mov
imul
outs
mov
jne
push
out
add
outs
test
add
ret
or
sar
(bad)
fwait
xchg
ss
aaa
and
loopne
or
jno
mov
xor
xchg
add
(bad)
mov
imul
xor
jmp
sti
mov
push
test
loop
imul
adc
icebp
(bad)
nop
test
ret
or
push
jb
cmp
out
fdivr
push
mov
es
mov
test
add
push
xor
je
pop
xor
mov
sbb
xor
shl
aam
push
add
scas
popa
clc
cwde
mov
loop
push
mov
sti
outs
cld
pop
cmps
push
in
mov
cmp
jmp
out
jbe
loope
inc
stos
mov
pushf
mov
xor
jecxz
add
push
inc
jle
mov
push
inc
pxor
ins
cs
push
fstp
ror
out
mov
push
cli
dec
in
stos
pushf
movs
(bad)
mov
jmp
icebp
jmp
pop
xchg
jnp
jecxz
lock
mov
sub
add
xchg
mov
loop
inc
adc
cs
pop
sub
cmp
and
lea
out
in
pop
mov
cmp
or
aaa
fs
inc
push
and
mov
sub
mov
fdiv
sbb
fnstenv
pop
loopne
lahf
js
ficom
push
sti
jo
rcl
in
cli
jmp
shl
and
stos
inc
rcr
ret
cmp
in
jne
cmp
jmp
sar
add
in
(bad)
jg
jle
repz
sbb
rcl
pop
dec
aad
mov
jge
sbb
jecxz
add
xor
ins
jmp
mov
mov
cwde
sub
cld
or
pop
lea
mov
enter
sbb
xlat
cdq
stos
aas
(bad)
repnz
sbb
pop
xor
jb
data16
sbb
push
xchg
mov
inc
push
pop
jnp
fs
scas
test
sbb
outs
sub
ins
push
lahf
lea
or
adc
call
push
stos
fwait
cmp
cmp
mov
fidivr
inc
cmp
ins
push
fcomp
out
push
(bad)
fsubr
scas
js
add
repnz
cdq
clc
mov
sub
sbb
shl
fisttp
push
push
jnp
cmps
(bad)
mul
push
lods
jbe
movs
push
pop
cmp
mov
xor
dec
pop
push
loopne
mov
adc
xor
inc
push
mov
mov
push
cmp
retf
cli
popa
pop
call
jne
rcr
pop
pusha
les
leave
sbb
xchg
jbe
in
lea
xor
jp
scas
inc
and
lock
xchg
pminub
mov
retf
mov
loope
test
sbb
xor
rcl
mov
arpl
pop
dec
fstp
sbb
cli
dec
fld
mov
push
ret
bnd
loopne
je
lahf
pop
jmp
pop
stos
fisubr
call
test
popa
mov
daa
lock
fidiv
xchg
inc
jno
sbb
arpl
sub
nop
add
loope
test
mov
arpl
sbb
cmp
pop
(bad)
popa
add
loopne
adc
sahf
mov
xchg
bound
test
popa
je
jne
fistp
js
adc
or
and
jl
es
dec
xor
cli
scas
jae
popa
in
in
aaa
shl
sub
jbe
xor
test
rol
lds
jl
popf
aaa
dec
std
ins
imul
cdq
mov
stc
push
cs
jne
pop
push
mov
call
add
jmp
dec
pusha
std
stos
or
or
cmp
pusha
xor
adc
or
jmp
sbb
mov
jb
jl
aaa
stos
xor
test
push
pusha
dec
cmp
scas
data16
pop
sbb
sbb
pushf
fwait
popf
jnp
mov
out
sub
movs
mov
fsubp
cwde
pop
and
test
dec
adc
mov
sub
popf
jge
mov
cdq
pop
mov
and
jns
pop
jns
jns
test
mov
lea
out
das
mov
lds
dec
in
mov
cmc
dec
loop
xlat
or
mov
jecxz
mov
stc
into
mov
je
test
es
aad
test
cmp
adc
dec
test
mov
pop
jbe
push
cmp
lds
fs
leave
lods
mov
push
jbe
mov
test
mov
in
mul
in
mov
inc
add
pushf
xchg
inc
cmc
popa
pop
lds
stc
and
ja
and
xor
push
jmp
lods
pusha
mov
into
sub
mov
mov
push
jmp
enter
nop
lds
into
or
mov
movs
test
mov
jmp
and
push
cwde
xor
mov
fldenv
out
xlat
lahf
(bad)
lea
jb
pusha
push
dec
inc
cwde
mov
out
js
pop
sbb
dec
sbb
add
cmp
dec
sub
and
popf
sub
ins
mov
inc
clc
ret
outs
ja
push
mov
push
lahf
aam
push
pop
xchg
sahf
cmp
mov
pop
lods
icebp
and
push
loope
pop
pop
sbb
popa
and
mov
shr
inc
(bad)
js
push
pop
das
je
jbe
test
and
add
arpl
scas
in
xchg
call
test
push
lods
nop
js
pop
bound
dec
xchg
stos
loope
mov
mov
out
jge
hlt
inc
pop
xchg
mov
stos
xchg
jmp
cld
in
mov
sub
pop
xchg
push
or
push
sbb
sbb
mov
lods
loop
call
sub
(bad)
jg
xor
push
mov
jo
mov
out
mov
xchg
push
pop
bnd
xchg
mov
xor
inc
les
movs
(bad)
pop
cmps
sub
jo
fisub
adc
lods
jg
sub
lock
bound
push
sbb
imul
cld
out
in
rcr
das
(bad)
xor
xchg
cmp
push
cli
(bad)
sbb
into
das
xchg
(bad)
dec
push
outs
jmp
jae
xchg
push
pusha
call
sub
bound
test
dec
push
lods
sub
push
outs
jmp
xlat
cmps
ins
leave
call
xor
mov
out
xor
push
pop
scas
adc
mov
es
xor
int3
xor
fsub
aaa
into
retf
mov
xor
sub
sbb
in
push
xchg
(bad)
pop
pop
pusha
fwait
push
mov
pop
xor
test
mov
sub
pusha
int
sbb
cmp
fmul
in
pop
loopne
repz
cld
sub
xor
mov
mov
(bad)
jns
enter
adc
mov
das
cmp
mov
mov
pop
push
imul
sub
pop
scas
enter
test
ret
lahf
lock
adc
cmp
stos
xor
mul
sub
leave
test
enter
dec
test
push
std
shl
out
sub
jp
cmp
push
adc
daa
ds
shr
sub
js
push
sub
inc
clc
add
addr16
cld
inc
aaa
jmp
movs
sub
pop
cld
test
xor
xchg
test
mov
rol
cmp
dec
lods
adc
or
ins
mov
jbe
sbb
xchg
out
jmp
iret
sub
jno
pop
lds
mov
cmp
jno
add
int3
push
jecxz
push
jae
mov
mov
jno
gs
or
pop
dec
jbe
or
inc
inc
(bad)
ss
in
cmp
mov
movs
lods
add
hlt
xchg
mov
ret
pushf
jmp
push
stos
popa
dec
sub
pop
sub
inc
xchg
and
ror
ins
fcomp
dec
loope
mov
(bad)
xchg
fnstenv
lock
(bad)
rcr
push
adc
inc
pop
scas
aad
sub
jmp
ret
or
imul
and
mov
adc
add
mov
xor
and
dec
addr16
or
rcl
and
or
repnz
pop
sbb
int
sub
rol
push
loopne
add
push
sti
push
cmp
enter
pop
jge
dec
ds
(bad)
xor
cmp
xchg
cmp
xor
push
jnp
xchg
sahf
mov
stos
xchg
cmp
mov
xchg
cmp
inc
inc
int3
and
xchg
mov
imul
fsubr
adc
ror
shr
dec
cmc
sbb
loop
push
ror
mov
fdiv
jnp
or
xor
pop
add
jno
movs
push
je
or
repnz
push
lahf
dec
addr16
jl
in
or
jae
lods
mov
push
jl
cwde
(bad)
icebp
mov
cld
inc
pusha
pusha
mov
cmp
mov
inc
scas
pusha
mov
jne
pop
xchg
dec
popa
call
cld
push
mov
mov
add
add
push
inc
leave
sahf
sbb
adc
leave
mov
std
mov
lahf
addr16
lods
inc
fsubr
adc
(bad)
pop
cmp
ror
jne
cmp
pusha
jmp
movs
sbb
ret
sbb
sbb
test
jae
xor
sub
adc
js
mov
mov
neg
push
and
ja
jbe
sbb
xor
xlat
aas
cmp
jg
fdiv
call
(bad)
cmp
and
sub
jo
sub
push
or
jge
inc
sub
(bad)
xor
jb
xchg
mov
push
test
lock
dec
push
jge
aad
cmp
or
movs
stc
cwde
pop
out
rcr
add
dec
xchg
enter
or
stos
loopne
aaa
pop
mov
dec
cld
icebp
(bad)
mov
cli
cmc
das
aam
jnp
rcr
hlt
or
xchg
aam
pushf
(bad)
movs
push
push
retf
test
movs
jmp
jb
das
cwde
int
aad
sub
mov
mov
jmp
aad
mov
xor
cmp
in
dec
xchg
add
mov
in
and
cwde
imul
or
jmp
addr16
and
xor
push
arpl
inc
mov
sahf
sahf
jbe
stos
mov
push
pop
xchg
mov
popf
push
add
ret
cld
and
pusha
push
push
imul
add
jne
xchg
sbb
out
lock
lea
dec
push
std
mov
mov
mov
mov
and
mov
in
cs
scas
inc
arpl
fs
nop
test
push
(bad)
fimul
and
add
jne
mov
pushf
sub
jo
add
jbe
lock
mov
(bad)
ret
(bad)
es
pop
fadd
popf
and
lea
add
in
dec
aam
xlat
and
retf
pushf
mov
loop
jp
imul
dec
mov
mov
stos
xchg
or
add
int
xchg
inc
dec
loopne
jmp
mov
xchg
jmp
neg
xor
stos
in
retf
in
les
ja
test
or
xor
push
sar
xor
cmp
jmp
fild
jb
mov
pop
ret
into
out
(bad)
pop
pop
outs
out
int3
jge
or
imul
mov
or
sbb
rcr
xchg
sar
cmp
xor
daa
int
test
xor
dec
jcxz
sub
cmc
cmps
jge
repnz
pop
lock
ins
push
inc
and
pusha
adc
shr
mov
and
mov
mov
stos
arpl
inc
out
sbb
(bad)
aam
pop
sub
dec
pop
cmc
enter
icebp
cdq
movs
dec
popf
outs
add
mov
les
mov
in
loop
cs
outs
or
vmovsldup
dec
out
(bad)
xchg
shr
ror
push
mov
mov
push
daa
js
jno
pop
mov
fwait
inc
or
xor
cmp
in
jae
push
repnz
mov
xchg
(bad)
sbb
push
in
scas
inc
cmc
push
sub
jns
adc
test
sbb
movs
mov
stos
push
push
imul
xor
mov
xor
pop
push
outs
mov
mov
stc
(bad)
popa
mov
clc
je
or
push
xchg
jp
xchg
fs
cmp
repz
aaa
sbb
je
inc
mov
data16
jecxz
or
adc
add
sahf
adc
xchg
sbb
aam
dec
(bad)
jmp
mov
xor
or
mov
cld
jo
into
and
movs
rcl
lods
mov
and
jmp
mov
loope
lods
cmp
add
mov
addr16
and
add
int3
movs
mov
inc
sbb
jbe
jnp
or
loop
out
jae
cmp
mov
ret
fwait
(bad)
shl
mov
loop
addr16
loop
dec
jmp
inc
xchg
ins
dec
fldenv
aas
movs
sbb
ffreep
mov
cmp
push
pop
sub
cwde
int
fsubr
sub
scas
cmps
mov
iret
ins
fstp
in
xchg
sbb
push
lds
ins
pop
xor
mov
daa
inc
pop
in
sub
addr16
ss
sub
popf
stc
jle
lock
loop
or
dec
adc
mov
jmp
sbb
mov
addr16
or
mov
cmovns
iret
out
imul
xor
mov
test
push
bound
(bad)
mov
and
mov
repz
in
js
stos
jbe
dec
jns
loopne
xor
mov
jge
mov
mov
dec
repz
xchg
cmp
mov
mov
adc
adc
ins
jae
pusha
jecxz
aad
mov
mov
icebp
mov
imul
dec
rcl
das
fiadd
sbb
mov
jmp
(bad)
jle
enter
(bad)
cmps
mov
inc
fstp
and
pop
xchg
push
(bad)
and
xor
inc
sub
sbb
cmp
xchg
push
add
sub
push
out
sbb
add
and
ret
ror
fdiv
in
retf
shr
push
add
cmp
adc
retf
cli
jnp
xchg
(bad)
loop
cmp
cli
sub
mov
sahf
scas
jae
mov
cmp
loop
push
lea
fadd
aad
lods
cmp
sbb
pop
mov
cld
in
fisttp
lods
mov
sbb
add
inc
les
call
lods
jmp
add
out
outs
jbe
in
push
fcomp
and
adc
xchg
mov
(bad)
not
(bad)
enter
jno
mov
dec
movs
enter
stc
test
xchg
rcl
mov
ja
adc
mov
lds
movs
add
add
mov
fld
outs
mov
test
outs
sbb
xchg
mov
cmp
jp
pop
cmps
sar
and
adc
pop
loopne
or
sbb
mov
cdq
retf
add
stc
(bad)
in
mov
test
add
test
popf
leave
(bad)
enter
lods
ret
int
sbb
clc
xchg
pop
pop
loopne
cdq
and
aas
adc
and
mov
dec
inc
cmp
das
aas
sub
fst
and
iret
(bad)
rcr
adc
sbb
sub
inc
xchg
jle
add
pop
imul
or
aad
jl
xchg
jne
adc
not
(bad)
jmp
inc
push
xchg
dec
xor
add
push
out
cmps
rcr
mov
out
jg
sub
mov
mov
test
jl
mov
push
fstp
cmp
xchg
add
push
clc
in
loopne
imul
mov
aad
lock
jmp
mov
repnz
fisub
ss
inc
xor
fadd
mov
(bad)
popa
sbb
pop
adc
jl
or
aam
push
in
loopne
mov
loop
or
ja
pop
fsubr
push
or
and
push
ss
cmp
mov
jmp
cmp
sahf
ss
cmc
popa
or
jmp
pushf
les
push
je
cmp
pop
mov
mov
out
sti
divps
sbb
stc
in
lods
retf
pushf
and
mov
fmul
mov
jnp
mov
popf
adc
stos
fs
and
dec
repz
(bad)
sti
dec
mov
jl
jno
mov
sub
push
xor
push
adc
mov
mov
movs
mov
pop
adc
jge
ror
pop
data16
fld
gs
dec
jns
sub
or
ror
and
push
adc
fst
rcl
shl
ret
pop
xor
fwait
push
mov
icebp
pop
es
pop
mov
mov
cdq
(bad)
clc
sbb
gs
inc
pop
clc
repnz
cmp
or
ins
mov
loopne
retf
jmp
xor
lods
ins
add
cmp
sbb
ins
test
ins
or
push
loope
sbb
fwait
dec
push
and
not
pop
hlt
inc
jnp
xor
mov
inc
sbb
loopne
pop
retf
shl
pop
push
pop
xchg
mov
jmp
fwait
jp
sub
jbe
test
imul
das
add
lahf
or
bound
ins
ret
cmp
or
jge
or
stos
out
mov
xor
cmp
mov
into
test
push
mov
lea
or
push
cdq
pop
in
xor
ja
dec
add
fistp
mov
push
add
push
out
ss
daa
add
xchg
mov
(bad)
mov
dec
mov
enter
imul
(bad)
inc
stos
outs
or
mov
fwait
popf
adc
mov
test
in
xor
enter
sub
adc
test
dec
mov
outs
pop
(bad)
ins
out
adc
dec
cmps
jae
add
jbe
jmp
sbb
aas
and
push
jecxz
test
sti
ror
call
xchg
(bad)
in
ds
jne
dec
shl
ja
xchg
jle
pop
movs
outs
lea
loop
movs
out
lds
jmp
push
loop
sbb
enter
shr
out
sar
cmps
adc
and
imul
push
mov
push
pop
push
cmp
and
sub
js
(bad)
mov
lods
test
cmp
fmul
outs
inc
aas
add
shl
mov
jmp
add
mov
mov
jns
adc
dec
push
pop
and
ror
push
add
bound
popa
and
cmps
inc
test
cs
cmc
inc
aas
sahf
cmp
cmc
lods
mov
stos
movs
push
add
imul
inc
repz
in
jbe
call
add
call
inc
pop
pop
pop
xchg
ja
sub
cmp
iret
(bad)
retf
daa
lock
inc
iret
add
pop
inc
mov
enter
scas
hlt
fiadd
or
lahf
inc
push
xor
sbb
outs
pop
adc
std
test
mov
add
pop
imul
test
dec
lds
icebp
push
mov
jmp
xor
ins
sub
inc
(bad)
dec
loope
sbb
iret
add
mov
das
xchg
inc
cmp
push
fdiv
xor
xchg
inc
and
scas
xchg
sahf
ret
in
pop
ds
mov
xor
test
mov
inc
add
ret
fucomi
scas
xchg
pop
inc
push
inc
inc
repnz
sar
sbb
jo
in
inc
shl
stc
pop
dec
inc
pop
aaa
arpl
adc
or
out
out
or
neg
sbb
pop
in
aad
ja
adc
mov
jp
fsubp
inc
mov
inc
jmp
sbb
out
mov
push
enter
fs
movs
jne
jns
dec
inc
pop
(bad)
push
dec
in
push
inc
mov
into
mov
add
dec
out
loope
(bad)
bnd
or
ret
mov
std
call
mov
jne
les
jns
mov
addr16
mov
or
dec
sbb
(bad)
mov
jle
movs
ds
inc
mov
xor
stos
mov
sahf
repnz
inc
push
(bad)
cmp
add
sahf
jb
vphadduwq
cmp
loop
pop
add
cmc
mov
sub
sub
inc
daa
dec
(bad)
or
nop
xchg
push
test
lock
lods
or
jne
and
fwait
inc
xchg
inc
retf
cmp
jecxz
push
test
lods
dec
inc
fs
popa
dec
cli
mov
cmps
test
sbb
retf
(bad)
sbb
mov
dec
mov
sbb
cwde
retf
int
cmp
pop
xchg
xor
lock
cdq
ret
in
mov
mov
mov
cmps
add
jl
adc
mov
enter
loope
dec
inc
into
sahf
pop
jp
fisttp
xchg
xchg
push
xchg
xchg
inc
rcl
xor
pop
push
movs
ret
push
retf
cmp
jne
or
sbb
mov
and
cmp
rcl
dec
int3
loopne
jns
movs
fdivr
mov
mov
adc
call
bound
mov
in
(bad)
dec
dec
xor
outs
mov
inc
ss
ss
arpl
lods
inc
ins
in
loope
dec
and
jno
jl
test
out
inc
movs
push
inc
loop
test
(bad)
mov
mov
cdq
mov
shl
out
lods
stos
les
xchg
fisttp
out
test
adc
dec
dec
xchg
addr16
or
push
mov
push
jmp
icebp
(bad)
gs
sbb
add
mov
add
mov
fild
and
nop
mov
movs
out
xchg
dec
cmp
movs
pushf
fadd
jmp
or
in
fistp
out
sub
inc
add
jecxz
(bad)
fnstsw
lock
cmp
lahf
xchg
push
add
fisttp
sti
sub
in
mov
sbb
xor
sbb
cmps
xchg
stos
jmp
sbb
jl
lds
xlat
sbb
sbb
rcr
ret
push
(bad)
xrelease
daa
mov
icebp
mov
ins
cmps
nop
iret
(bad)
arpl
mov
jnp
outs
stos
cmps
pop
cs
scas
or
pop
dec
dec
shl
aad
mov
push
mov
call
mov
test
add
not
in
or
pop
push
sbb
or
scas
jp
push
jg
popa
or
mov
fstp
stos
and
push
addr16
xchg
out
int
iret
pop
js
scas
mov
xor
je
jbe
aad
jae
sti
mov
fcom
dec
popa
sub
xor
push
dec
push
push
xor
repnz
jmp
and
pop
push
mov
add
mov
fucom
bnd
mov
sar
std
cmp
push
dec
stos
mov
clc
(bad)
stc
mov
inc
fbld
cmp
dec
pop
jmp
hlt
movs
and
aas
daa
push
pop
retf
sti
int
add
or
add
addr16
jno
test
call
sub
rcr
jne
not
mov
pushw
call
add
ja
pusha
fidivr
iret
pop
popf
out
mov
mov
sbb
cmp
test
cld
pop
movs
sub
loopne
jecxz
pmulhw
test
loope
adc
rcl
jns
cli
ja
and
xor
inc
mov
push
xor
mov
mov
dec
xlat
daa
(bad)
bound
sub
sub
rcr
sub
mov
inc
pop
scas
or
xor
mov
inc
push
xchg
out
loop
sahf
dec
mov
shl
rcr
xchg
push
cmp
xchg
ret
fwait
cmp
dec
lods
js
fwait
inc
pop
jo
sub
inc
sub
push
inc
aas
pop
data16
pop
adc
arpl
xchg
push
stos
(bad)
fsubr
and
enter
jne
push
rcl
imul
inc
adc
mov
fidivr
pop
and
xlat
xchg
xlat
in
test
ror
aam
cs
nop
jmp
or
mov
test
cmps
push
add
shr
ret
jbe
paddsb
dec
repnz
or
iret
pusha
adc
xchg
and
frstor
fcomp
fs
jmp
jb
fwait
test
mov
popa
mov
cmp
xchg
loop
hlt
push
mov
int3
aas
mov
int
dec
xor
mov
stos
mov
test
and
clc
push
adc
pop
(bad)
(bad)
std
jp
fnsave
jno
mov
test
pop
add
(bad)
in
call
cmp
jnp
int
mov
sbb
cwde
ss
sbb
iret
and
call
cmc
lods
in
mov
pusha
mov
movs
adc
cmp
jbe
cs
inc
mov
pop
mov
not
pop
in
inc
push
pop
mov
sbb
icebp
sbb
cdq
xchg
mov
sub
test
cmc
cmp
xchg
xchg
aaa
or
fwait
out
ins
xor
xor
fwait
jecxz
mov
mov
ins
test
inc
mov
or
and
push
mov
movs
and
lea
cdq
out
cmc
pop
das
inc
mov
mov
or
push
or
sbb
and
adc
dec
popf
jns
cmp
cmps
shr
dec
add
mov
push
cmps
arpl
pop
repnz
into
adc
push
loopne
fnstcw
mov
push
mov
fdiv
aaa
and
rcr
mov
stc
mov
leave
aas
xor
dec
arpl
repnz
sub
adc
imul
xchg
sub
mov
dec
add
test
pop
clc
add
cmp
xchg
xchg
pop
mov
inc
push
daa
stos
adc
test
push
out
jbe
mov
sahf
test
cmp
mov
sbb
jge
call
fs
jns
fstp
mov
out
pop
(bad)
out
fst
adc
cs
or
ja
hlt
push
jns
(bad)
fnsave
fisub
cmp
fmul
fsubp
(bad)
mov
mov
int3
sbb
popf
xchg
lock
mov
es
int3
mov
fstp
nop
aad
mov
xchg
or
enter
jle
ins
and
(bad)
xlat
xchg
mov
iret
mov
fwait
pop
test
test
addr16
pop
cld
pusha
in
gs
mov
int
add
cmc
cmp
pop
xchg
add
stc
dec
inc
push
(bad)
xchg
push
cdq
repz
cwde
cmp
fild
sub
and
cwde
cmp
mul
cmp
inc
ror
and
xchg
mov
cwde
pop
sar
rcr
pop
cmps
nop
or
dec
cmp
sbb
adc
or
mov
cmps
cmp
sar
sbb
xchg
pop
test
dec
ja
outs
sbb
div
popa
sahf
cld
and
ja
pusha
pusha
adc
(bad)
jmp
xchg
into
push
cmp
and
mov
jae
mov
sbb
mov
xchg
test
fdiv
loop
mov
cdq
mov
add
ins
aaa
std
sub
jo
fdiv
push
into
ret
repnz
(bad)
pop
add
push
pop
mov
sub
(bad)
fstp
mov
and
(bad)
stos
pop
test
ja
stos
jno
rcl
pop
stos
fstp
std
jnp
inc
and
sbb
cli
fld
xor
adc
ds
rcl
sbb
mov
dec
into
fld
mov
or
xor
mov
mov
ret
je
dec
xor
neg
scas
aas
sbb
jne
sub
mov
push
movs
inc
mov
lea
ins
test
out
cmps
add
dec
stos
jl
in
(bad)
hlt
mov
test
cdq
adc
dec
out
push
into
add
pop
xor
mov
mov
jp
cdq
loope
jecxz
sub
xchg
cmc
mov
mov
fidivr
dec
mov
stos
je
aas
lock
adc
cwde
(bad)
outs
aas
mov
nop
sub
jg
and
sub
mov
xchg
lea
mov
add
inc
call
repz
sti
xor
loop
fdivr
mov
ret
cmp
(bad)
data16
xchg
pop
inc
inc
push
cmp
popf
ret
out
cmp
fsubr
add
loop
outs
dec
paddb
and
push
push
mov
sub
(bad)
mul
inc
push
fsubr
adc
in
out
cmp
and
jbe
push
jne
repz
test
jne
or
in
movs
mov
call
cli
lods
std
imul
or
ret
add
sbb
leave
dec
xchg
pop
inc
repz
jmp
and
jmp
xchg
call
dec
arpl
pop
bound
sub
or
jp
and
outs
out
pusha
test
fsubr
(bad)
inc
mov
in
je
jp
popf
mov
add
fs
out
pop
pop
ret
push
pop
push
dec
clc
jmp
das
imul
add
sbb
clc
rcl
shl
add
outs
pop
stos
pop
dec
inc
mov
add
sub
int
stc
lods
xor
dec
push
mov
and
fs
cld
pop
loope
popa
rol
scas
push
push
dec
movs
leave
sub
js
push
xchg
inc
int
addr16
jecxz
movs
mov
sar
out
ins
(bad)
fdivp
and
and
out
jl
pop
jns
dec
les
jmp
xor
cmps
jg
mov
or
mov
jae
out
pop
push
out
jle
sbb
arpl
pusha
add
cmp
mov
outs
mov
cmps
dec
pop
dec
mov
fs
mov
sbb
div
hlt
sub
out
inc
inc
or
push
out
iret
xchg
cli
ss
sahf
(bad)
adc
and
cmp
jns
mov
stos
leave
and
xchg
dec
mov
inc
cmps
mov
add
jo
imul
or
inc
cmovae
xchg
stos
inc
push
in
mov
and
and
xor
mov
or
enter
cld
xor
inc
cmp
sbb
fs
cmp
xchg
ret
xchg
dec
iret
pop
test
inc
fnstsw
jmp
dec
not
jae
lds
cmp
sti
in
xchg
cwde
adc
shl
ins
mov
cmp
mov
call
popf
jmp
or
mov
add
push
jbe
loopne
mov
xchg
cmp
pusha
loope
(bad)
test
jbe
cmp
pop
mov
movs
lock
add
rcl
lahf
mov
jno
cwde
dec
jmp
push
ja
sbb
hlt
add
xchg
mov
fldenv
jnp
or
adc
dec
pop
cmp
fcomp
mov
movs
mov
add
fs
es
adc
sbb
xchg
nop
jne
cs
add
push
xor
mov
aad
call
sub
dec
out
xor
not
outs
repnz
dec
(bad)
jb
jae
daa
sar
(bad)
arpl
dec
jns
int3
dec
push
xchg
daa
add
sub
movs
out
outs
jp
in
jb
jo
in
stos
out
mov
inc
inc
mov
adc
dec
jo
fimul
push
sti
call
push
stos
ds
xchg
jmp
inc
fild
pop
push
repz
scas
lods
in
add
sub
jmp
stos
or
jle
mov
mov
dec
ins
sbb
(bad)
xlat
adc
arpl
jo
push
push
cmp
xchg
jnp
call
pop
pop
adc
jmp
dec
push
sub
jecxz
mov
push
sar
pop
adc
stc
mov
mov
scas
push
mov
in
mov
jne
sub
mov
in
sub
inc
cmp
push
push
(bad)
mov
scas
sub
div
fistp
ficomp
xchg
jmp
jnp
mov
fstp
sbb
or
(bad)
popa
mov
hlt
mov
into
mov
cli
mov
sbb
das
mov
mov
lock
and
push
retf
cmp
sar
popa
stos
lods
sbb
test
into
adc
xchg
mov
retf
nop
nop
push
test
arpl
rcr
aas
push
iret
add
aas
adc
and
sbb
mov
xor
pop
movs
push
mov
sbb
je
ins
xor
sub
pop
test
in
aaa
hlt
stc
call
add
ins
or
xor
enter
das
popa
sub
and
add
and
in
cmc
std
fistp
aad
stos
jno
push
pushf
cvttps2pi
or
(bad)
js
mov
xchg
or
jb
pusha
lock
xor
fadd
fsubr
adc
adc
cmps
(bad)
inc
bswap
leave
cmp
call
cli
mov
add
jecxz
add
adc
or
and
pop
ret
fbld
push
scas
in
dec
mov
and
jae
(bad)
call
mov
xor
sub
daa
adc
cli
and
mov
movs
pop
and
push
out
adc
and
cmps
mov
pop
std
popf
hlt
dec
je
mov
inc
mov
or
mov
cmc
cmp
fild
pop
mov
add
lods
(bad)
xlat
popf
mov
sbb
in
gs
dec
add
mov
jmp
pop
jmp
sub
add
cmp
mov
into
sbb
sub
xchg
push
das
xor
out
inc
(bad)
loop
test
xchg
dec
enter
pusha
pop
(bad)
mov
jae
sub
jne
sub
jnp
jnp
call
int
shl
pusha
mov
es
repz
lahf
add
jb
(bad)
lods
ja
mov
cli
neg
fadd
jmp
pop
adc
pop
xor
daa
aad
mov
sbb
out
jecxz
iret
fsub
adc
adc
jo
popa
inc
mov
cld
add
dec
add
xchg
sub
inc
pop
daa
fwait
add
loop
cmp
test
push
into
fdivr
retf
dec
aam
sub
sub
add
sbb
inc
inc
xor
imul
mov
les
push
inc
sti
xchg
mov
push
icebp
jecxz
fdivp
inc
sbb
push
inc
xor
mov
add
in
jl
pop
xchg
test
xor
call
xchg
sub
push
fcomp
dec
outs
or
mov
push
jnp
call
xchg
pop
cmp
pop
dec
out
retf
test
sbb
aaa
lea
in
mov
or
adc
jno
out
test
jne
mov
mov
loop
dec
in
push
aam
je
(bad)
into
ficomp
int
jnp
pop
cli
inc
(bad)
dec
test
xchg
mov
imul
add
in
adc
fist
ins
fdiv
cmp
outs
dec
xor
lods
jb
xchg
stos
stos
aaa
cmp
(bad)
aad
pop
cld
cmp
mov
call
sub
cli
mov
dec
pcmpeqb
cmp
inc
sbb
in
and
adc
jne
pushf
ja
clc
jae
int3
outs
pop
faddp
in
jle
mov
sbb
stos
jne
jmp
stos
addr16
(bad)
fbld
inc
nop
repnz
sub
adc
clc
repz
inc
push
cmc
and
outs
jp
jmp
jmp
push
inc
mov
mov
hlt
push
dec
xor
das
ins
ja
mov
jge
jl
inc
sbb
and
and
popa
shl
pop
sub
jp
aad
fwait
adc
(bad)
out
mov
pop
inc
add
fcmovne
mul
cmp
push
fs
sbb
lahf
aad
or
icebp
inc
ja
pop
bound
imul
dec
or
xchg
cmp
cmp
cmps
dec
popa
stc
inc
stos
pop
shl
jecxz
fst
mov
add
pop
ins
mov
sub
or
in
xchg
push
fst
std
(bad)
xchg
pop
pop
retf
sbb
loop
ficom
test
cwde
add
in
arpl
fwait
scas
test
jg
adc
out
mov
not
sub
add
(bad)
fidivr
test
pop
sub
in
pushf
in
inc
dec
in
xchg
cld
mov
into
scas
(bad)
dec
add
or
loope
cmps
jecxz
outs
sti
test
les
mov
pusha
cmp
test
cmp
and
mov
mov
jbe
das
clc
icebp
adc
push
inc
xchg
jbe
dec
(bad)
or
inc
jmp
mov
test
xchg
movs
inc
es
jae
dec
push
inc
int3
leave
es
xchg
lahf
bound
inc
push
aaa
test
add
xor
inc
mov
and
(bad)
add
push
and
jb
push
xor
sbb
add
dec
mov
and
repz
push
fst
cmp
fld
mov
ret
add
fidiv
pop
ret
jl
retf
retf
jmp
popa
inc
and
mov
loopne
jns
mov
and
inc
dec
mov
sub
nop
xchg
shl
das
sub
push
nop
sub
mov
cmp
(bad)
sub
dec
xchg
test
and
mov
hlt
in
fsubr
pop
and
sub
mov
fidivr
pop
sbb
fs
sub
mov
xchg
iret
mov
pop
(bad)
mov
lods
(bad)
in
add
lea
rcr
add
lock
movs
imul
push
in
or
inc
shl
ja
xchg
push
lds
outs
int
mov
mov
pop
push
cli
jecxz
test
movzx
jnp
pushw
and
adc
pop
(bad)
repnz
add
push
mov
cdq
cmp
inc
fs
cmps
popf
(bad)
leave
and
pop
xor
(bad)
stos
loopne
lods
shr
pop
daa
pop
xchg
xchg
add
mov
int
mov
enter
shl
out
xor
and
lahf
(bad)
pop
add
push
iret
cwde
cmp
pop
daa
mov
les
jg
and
xchg
jge
das
test
ror
std
jae
jg
dec
cmp
xor
mov
into
add
aad
fwait
adc
(bad)
sub
cmp
repnz
adc
pop
pop
push
call
cwde
add
add
push
cmp
out
call
fwait
pop
cli
fidiv
rcr
es
cmps
fisttp
dec
jl
jns
rcr
pop
(bad)
mov
imul
pop
cmp
imul
xchg
into
add
das
aam
out
aaa
add
or
jmp
(bad)
aaa
out
es
inc
mov
enter
push
mov
or
adc
popa
or
push
jbe
(bad)
dec
jp
mov
call
pop
lds
aas
ficomp
out
push
cld
mov
stos
push
mov
pop
cmp
cmps
dec
(bad)
pop
cmp
test
idiv
clc
cwde
repz
mov
jmp
imul
mov
mov
hlt
sysenter
sahf
aas
push
push
ror
jge
sub
test
dec
ins
sbb
pushf
jmp
fnstcw
mov
mov
jl
movs
inc
and
(bad)
cdq
std
adc
and
fs
pop
fst
mov
cmp
imul
aaa
mov
mov
cmp
(bad)
repnz
out
popf
mov
jp
mov
adc
or
pop
jle
shl
enter
call
cmp
xor
mov
test
mov
bnd
into
mov
arpl
(bad)
sbb
and
pop
fstp
mov
mov
das
pop
fcomi
dec
pop
pop
cmps
out
out
mov
sbb
adc
and
xlat
pop
shr
xchg
(bad)
sbb
pop
sbb
mov
sbb
pop
sahf
aaa
push
mov
push
xchg
pop
inc
outs
sti
stos
xor
iret
mov
and
inc
mov
push
add
cdq
std
fs
cdq
xchg
xchg
test
cmp
or
jecxz
clc
pop
jnp
fld
jl
(bad)
inc
and
push
gs
cmc
jno
xchg
mov
ja
cmp
sub
dec
xor
add
fsub
iret
sbb
and
std
clc
pushf
adc
out
fadd
into
mov
iret
jmp
les
push
jl
inc
mov
sub
xchg
inc
(bad)
das
mov
js
cs
call
fisub
cmp
fdiv
or
out
ret
mov
ret
push
test
sub
retf
inc
xchg
adc
lea
pusha
xchg
sub
out
xor
enter
xchg
mov
and
and
cdq
mov
out
(bad)
inc
or
and
sbb
cmp
loope
sbb
aam
pop
pop
fild
cmp
jg
es
loopne
popf
sub
xor
mov
popf
(bad)
jno
xlat
jmp
rol
in
xchg
ins
in
push
push
xor
in
imul
xor
mov
push
mov
jno
add
in
test
mov
push
ins
xchg
cmp
pusha
adc
inc
fwait
mov
imul
lea
cdq
pushw
pop
push
daa
mov
daa
ret
inc
pop
icebp
push
sub
sar
mov
fistp
ret
movs
(bad)
int
and
data16
sbb
mov
jns
sahf
mov
dec
sbb
xlat
pop
jecxz
ret
adc
mov
imul
mov
stc
leave
icebp
pop
int
into
pop
cwde
inc
mov
pop
lea
fidiv
pushf
stos
(bad)
retf
inc
sbb
jmp
scas
out
popf
jns
shl
retf
(bad)
push
xchg
jae
sub
mov
inc
pop
mov
pop
cmp
call
stos
or
popa
or
mov
lea
jbe
das
push
add
xchg
shl
data16
mov
mov
aaa
ds
xor
lahf
popa
fwait
mov
stos
ds
stos
add
pop
mov
mul
adc
cmps
jbe
push
arpl
push
jmp
(bad)
aad
cli
movs
fild
inc
adc
(bad)
adc
outs
pop
jne
icebp
ret
mov
movs
cmp
mov
xlat
adc
cmp
shl
loop
adc
je
std
mov
int
jne
(bad)
fisttp
movs
mov
std
jmp
(bad)
mov
jne
mov
add
dec
jmp
xor
push
pop
scas
push
mov
or
jmp
xor
ins
fprem1
ja
jns
fwait
and
pop
(bad)
adc
push
mov
adc
mov
cmps
scas
mov
xor
sub
mov
xchg
mov
outs
fidivr
xor
mov
inc
lock
jmp
fisub
push
mov
ror
sar
and
mov
jecxz
stos
push
jp
std
mov
jmp
mov
shl
add
mov
(bad)
sub
aas
jl
sub
movs
movs
inc
jp
adc
lock
ror
daa
imul
pop
push
ror
jns
retf
jno
(bad)
mov
pop
cmp
sub
(bad)
in
ret
mov
fisttp
test
push
ss
in
inc
imul
pop
xchg
mov
clc
mov
sbb
lods
push
mov
mov
xlat
and
push
jb
cmp
out
adc
pop
scas
arpl
pop
pop
inc
pop
in
sbb
push
dec
in
dec
pop
push
and
pop
xchg
scas
and
push
retf
cwde
mov
out
loope
out
add
test
das
mov
add
mov
xor
adc
pop
xlat
pop
addr16
mov
stos
sub
retf
jmp
add
cmp
ins
outs
lds
inc
xchg
jnp
adc
retf
call
(bad)
sub
jmp
sar
into
popf
and
mov
sbb
ret
jle
sbb
stos
pop
(bad)
in
in
inc
nop
sbb
lock
cmp
mov
loopne
loop
or
cmp
int3
push
imul
mov
outs
ret
hlt
rcl
adc
ret
lock
pop
int3
gs
xor
sti
xchg
jmp
fimul
add
sbb
movs
inc
sar
sub
mov
cmc
and
push
add
test
cmp
in
imul
stc
and
imul
push
push
neg
stos
xor
out
test
dec
sub
sub
push
cmp
leave
sub
ins
adc
mov
movs
pop
mov
fisub
jmp
mov
jge
dec
mov
lods
inc
fwait
cmc
ret
add
mov
and
xor
aad
pop
shl
mov
cmp
sbb
pusha
mov
jb
jg
arpl
aas
aad
gs
mov
paddsw
pop
jbe
div
xchg
ins
sar
ret
movs
scas
sbb
mov
aas
jecxz
loope
cmp
stc
sub
mov
jle
cmp
xor
xchg
or
icebp
rol
clc
btc
dec
fnstenv
scas
clc
or
jo
cmps
pop
jmp
mov
push
push
stos
push
and
dec
cmp
leave
out
lds
push
xchg
cmp
jecxz
add
jge
push
fldenv
adc
in
mov
mov
fld
cmc
test
add
jmp
out
fld
loopne
add
dec
and
xchg
push
mov
mov
mov
xchg
mov
xchg
pop
cdq
jmp
imul
sti
inc
test
(bad)
(bad)
jne
mov
add
js
gs
ins
shl
push
or
jge
in
and
pop
shl
jg
scas
neg
and
cmp
cmp
sbb
test
push
add
sahf
pop
ror
mov
movs
daa
or
jb
(bad)
pop
and
add
aad
ror
shl
imul
mov
pop
cmps
mov
push
mov
dec
push
mov
out
push
xchg
pop
cmps
adc
add
add
mov
inc
pop
out
int
xor
stos
scas
mov
iret
pop
xor
jbe
add
js
test
mov
cli
mov
mov
in
dec
mov
sbb
push
pop
xor
retf
jmp
xchg
pop
leave
adc
in
jmp
cmps
add
jmp
popa
sbb
pop
jmp
fstp
push
icebp
and
dec
xchg
jb
(bad)
xor
mov
loop
fdivp
and
jle
pushf
enter
stos
ret
les
inc
cli
clc
push
lods
stc
addr16
(bad)
or
push
cmp
jp
scas
mov
popf
cmps
dec
cwde
and
cmp
shr
mov
test
mov
mov
movs
xchg
xchg
pop
push
add
and
or
sub
xchg
aad
mov
std
fxch
push
ja
sti
mov
lods
inc
mov
add
jb
les
aas
and
and
xchg
test
fdivr
sub
mov
test
cmp
(bad)
stc
cmp
sub
jnp
repz
(bad)
and
jmp
adc
adc
int3
and
int3
sub
adc
cmps
stc
add
mov
fucomp
or
push
out
cdq
jmp
fidiv
(bad)
pop
pop
scas
dec
repz
pop
sbb
pop
scas
adc
adc
xor
or
jge
mov
cmp
add
mov
movq
out
mov
sbb
stc
xchg
push
xor
sbb
and
js
add
icebp
cwde
jno
push
leave
retf
fadd
je
cmps
or
push
call
pop
int
test
jbe
xchg
(bad)
sar
and
test
lds
sbb
outs
dec
jnp
jp
pushf
cmc
loope
out
mov
push
outs
ins
fidivr
push
imul
jno
test
outs
sti
daa
mov
inc
nop
sub
mov
and
fld
int
clc
stos
jmp
jmp
mov
scas
xor
ja
jne
dec
lock
jne
add
jb
jns
mov
xchg
ret
rdpmc
jo
inc
dec
xor
movs
and
dec
fs
sub
out
imul
push
nop
xchg
push
inc
imul
mov
je
pop
pop
inc
test
push
pop
lods
rcl
cld
pushf
lock
movs
cmp
add
fadd
add
push
scas
sar
jmp
inc
sub
sub
mov
(bad)
je
inc
sub
js
jl
out
sti
cmp
ja
add
loope
push
(bad)
pop
adc
aam
xchg
sbb
pusha
mov
out
test
hlt
add
push
and
xchg
inc
ins
mov
rcr
lds
fidiv
and
adc
cmp
retf
lea
add
mov
or
cld
mov
dec
leave
pop
and
iret
pop
stos
sub
gs
adc
pop
sbb
movs
imul
jns
dec
xchg
and
ja
mov
ror
test
iret
dec
mov
dec
imul
sbb
repnz
ins
cmp
cmp
bound
in
add
in
retf
fisubr
pop
icebp
xor
adc
nop
ins
mov
push
sbb
jp
repz
imul
push
imul
cld
aaa
test
fdiv
stos
int
sub
das
xlat
mov
outs
inc
enter
retf
push
mov
dec
retf
dec
adc
add
mov
push
xchg
test
xor
mov
xchg
mov
and
arpl
outs
pop
cmp
std
jmp
pop
aam
sub
adc
fcom
std
and
neg
adc
iret
inc
sub
sbb
sub
fcom
cdq
imul
xchg
pop
out
jbe
push
xchg
sub
pop
ror
dec
push
popf
inc
push
dec
int3
les
das
xchg
xchg
pop
sbb
pop
jns
push
cmp
jbe
push
pop
dec
out
sar
(bad)
jmp
jne
scas
pop
mov
add
inc
jge
retf
(bad)
jle
retf
xor
out
sub
xchg
and
jg
or
xchg
popa
popa
pop
add
or
push
in
pop
xchg
mov
pop
(bad)
mov
stos
(bad)
shl
cli
cmp
nop
sub
inc
mov
pop
out
(bad)
scas
and
or
mov
sar
push
pusha
adc
scas
pop
(bad)
jne
outs
or
adc
cmp
sub
mov
lds
fst
push
dec
pop
into
imul
mov
cmp
out
inc
in
pop
xor
adc
pop
iret
mov
pop
(bad)
out
fst
fcom
mov
call
mov
mov
scas
xchg
rcl
test
test
cmps
mov
jo
inc
inc
je
pop
and
sub
int3
xor
pop
add
dec
pop
aam
and
jp
xchg
jle
jmp
cmp
pop
lods
mov
into
mov
pop
popa
sub
cld
cmp
mov
mov
loop
popa
mov
in
mov
mov
jl
xor
push
inc
push
jmp
ja
sub
adc
and
mov
dec
sub
scas
mov
test
pushw
movs
cmps
mov
popa
aam
sub
arpl
inc
out
or
sub
mov
aam
sub
aad
sub
inc
mov
pop
cwde
jg
push
mov
ja
pop
test
jnp
xchg
outs
push
repz
dec
clc
push
inc
test
leave
(bad)
push
pop
jne
dec
xlat
jecxz
dec
xchg
(bad)
jno
or
dec
nop
scas
call
cmc
fadd
lods
sub
mov
push
push
ins
ror
(bad)
mov
js
adc
mov
jmp
xor
lahf
in
repz
pop
inc
inc
pop
xchg
cmp
inc
scas
(bad)
in
leave
pop
xor
pop
leave
inc
jae
jmp
movs
loopne
cmp
or
sub
and
movs
inc
pop
xlat
nop
test
cs
adc
cmps
pop
jns
push
jl
mov
or
fst
das
fwait
push
cmps
test
icebp
pop
aad
fcomi
xchg
call
sub
sub
xor
pop
aaa
xor
mov
push
dec
cli
sbb
xlat
jge
sub
mov
add
stos
mov
fisubr
push
cmp
or
movs
(bad)
jno
push
mov
fild
retf
(bad)
mov
mov
out
leave
mov
loopne
mov
xchg
mov
adc
fs
add
cdq
test
adc
mov
dec
in
cmps
mov
xchg
shl
xor
fbstp
jge
movs
mov
mov
xchg
shl
sbb
repz
cld
(bad)
sbb
mov
imul
stos
cmp
or
sub
jmp
sub
mov
cs
xor
rcr
or
cmp
pop
mov
and
scas
jecxz
iret
mov
cmps
cs
mov
push
xchg
enter
pop
jmp
pop
popf
or
fnstcw
xchg
mov
fsubr
retf
mov
hlt
outs
clc
jle
ret
sti
and
push
push
jno
push
cmc
hlt
hlt
std
movs
pusha
enter
clc
or
and
or
add
adc
sub
cmps
and
call
js
stos
addr16
mov
shl
or
sbb
or
jl
imul
stos
lds
std
cmp
ins
or
gs
lds
xor
lds
inc
jmp
pop
jno
mov
push
mov
or
ds
pop
mov
cli
push
pop
push
fisttp
sub
inc
je
nop
pop
sbb
inc
(bad)
jge
add
data16
xchg
lods
and
mov
mov
push
add
jge
out
xor
xor
fdiv
imul
jb
mov
cmps
cmp
ficom
repz
adc
add
sub
xchg
in
invd
mov
repnz
pop
mov
into
pop
mov
push
(bad)
sub
mov
bound
stos
mov
sbb
ins
mov
retf
cmps
jmp
fnsave
and
jmp
or
and
call
int3
outs
xchg
add
sub
ds
mov
test
not
adc
inc
sbb
leave
sbb
cwde
xchg
pop
mov
and
(bad)
cmp
shl
(bad)
cmp
cmp
das
in
push
dec
daa
add
mov
loopne
mov
shl
imul
fmul
jns
(bad)
mov
pop
push
jle
fidivr
sub
dec
xlat
sub
cmps
arpl
ins
jg
push
and
adc
loope
movs
popf
mov
nop
inc
loope
(bad)
cmp
je
sbb
loope
push
dec
sbb
nop
pop
sub
xchg
pop
dec
shl
adc
lods
test
test
in
retf
xor
retf
xor
stos
popa
fsub
inc
iret
mov
adc
push
scas
outs
inc
push
push
es
fbld
add
and
or
cmp
mov
sub
js
(bad)
xchg
fwait
ret
(bad)
cmp
mov
out
inc
scas
push
xchg
dec
pop
cmp
adc
mov
jnp
aas
cmp
cwde
jmp
shl
pop
js
imul
mov
jp
das
in
shl
xor
cld
gs
xchg
add
cmps
aam
test
les
fwait
dec
test
jmp
xor
fcomp
and
mov
inc
loope
cmc
push
nop
push
mov
or
xchg
ficomp
xchg
mov
fwait
or
shl
retf
imul
and
or
(bad)
dec
out
sub
mov
inc
cmc
jmp
mov
lock
cmc
add
ja
rol
jmp
test
dec
jnp
cmp
mov
or
jnp
push
in
pop
sbb
jecxz
xchg
pop
add
rcl
jno
xor
icebp
jo
add
jecxz
iret
pop
xchg
loopne
rcl
sbb
addr16
adc
or
inc
ret
mov
stos
jmp
add
mov
(bad)
daa
mov
xchg
inc
mov
xchg
out
into
inc
pop
loop
add
pop
jmp
pop
cmps
mov
cld
sbb
mov
xchg
mov
jae
jmp
xchg
je
sar
cmp
adc
sub
js
jmp
sar
jbe
jp
or
in
cmp
pop
iret
mov
cmp
mov
mov
push
gs
dec
mov
shr
mov
jmp
cmps
cmps
das
xor
mov
sbb
add
add
and
adc
xchg
mov
stos
jle
pop
out
pop
adc
push
clc
not
(bad)
jne
mov
mov
or
in
lds
fimul
movs
mov
xchg
(bad)
sub
retf
pop
daa
or
mov
xchg
dec
mov
or
inc
test
and
arpl
jp
and
inc
sbb
(bad)
retf
in
ficomp
mov
dec
mov
mov
and
lock
test
mov
sub
aad
mov
pop
jmp
cmp
xor
jne
jae
mov
pushf
and
(bad)
lods
jl
fwait
(bad)
lock
loopne
(bad)
xor
cdq
bound
mov
jbe
pop
pop
cmp
xor
sbb
inc
xor
jno
add
loopne
sub
test
xchg
movs
mov
(bad)
mov
adc
into
inc
call
push
out
pushf
leave
in
mov
loop
and
ins
mov
in
shl
test
sub
xchg
(bad)
movs
sub
sbb
ja
dec
jnp
xor
popa
outs
jl
aaa
test
aaa
int
xor
popa
mov
sbb
outs
mov
adc
mov
mov
adc
add
in
pop
int3
and
inc
and
test
movs
in
neg
sbb
mov
adc
out
jnp
pop
jo
popa
in
cli
jne
xor
(bad)
xchg
es
neg
(bad)
mov
inc
retf
pop
cmp
test
or
cld
bound
jno
and
mov
(bad)
pop
(bad)
outs
lds
lods
and
repz
fdivr
test
dec
dec
xor
into
(bad)
sub
data16
push
jbe
bound
int
mov
mov
into
jp
cmp
mov
pop
adc
inc
and
sar
push
clc
or
stos
xchg
or
fsub
and
rcr
pusha
hlt
mov
pop
jne
sbb
push
inc
lea
ret
sbb
mov
cmp
clc
repnz
mov
xchg
mov
sub
int
fistp
ins
sbb
cmps
xchg
aas
retf
pop
push
or
pop
das
mov
mov
adc
pop
sub
xchg
or
out
mov
pop
pop
ja
fstp
pop
jle
loope
in
cmp
mov
or
fwait
popf
mov
out
call
js
jmp
ss
jle
dec
in
fwait
or
lods
sahf
jg
push
xchg
loopne
xchg
push
xor
xor
add
xchg
call
inc
adc
retf
repz
or
push
int
jmp
jbe
movs
sbb
dec
inc
imul
shl
cmp
scas
inc
cmp
add
inc
fisubr
fmulp
ret
xchg
cli
scas
rol
adc
fstp
es
mov
lahf
inc
cmc
xor
push
mov
sbb
mov
div
aad
(bad)
mov
fidiv
gs
inc
xchg
inc
movs
imul
and
cwde
sub
mov
jae
test
lahf
and
cdq
push
lahf
in
jbe
cli
std
mov
push
jge
mov
inc
adc
test
xor
ror
outs
push
not
inc
jmp
push
jg
ror
aaa
outs
lods
or
scas
sub
aas
adc
sub
popa
lods
cld
push
call
in
sar
ret
out
aad
test
dec
cmc
jg
xlat
push
mov
test
and
jo
jb
inc
sbb
xchg
push
jae
pop
adc
lods
lods
js
ins
dec
(bad)
in
or
cdq
cmp
dec
pop
(bad)
imul
or
xchg
mov
dec
mov
xor
xchg
and
imul
sar
imul
adc
enter
(bad)
push
rcr
inc
mov
dec
pop
(bad)
mov
repz
and
je
mov
push
scas
lods
mov
mul
add
iret
js
andnps
movs
cmp
call
push
ret
popf
push
push
sbb
jmp
pushf
out
xor
xor
mov
cmc
in
lods
sbb
xlat
jne
mov
xor
cmp
frstpm(287
sub
mov
gs
mov
out
jg
xchg
mov
pop
mov
push
cmps
xchg
and
fisubr
dec
fist
rcr
jmp
dec
(bad)
push
inc
ret
mov
xchg
push
mov
mov
aam
push
adc
inc
arpl
jge
inc
add
dec
mov
jno
mov
popf
sbb
mov
dec
mov
mov
ins
(bad)
pop
cmove
mov
fimul
mov
test
out
mov
fiadd
ror
pop
fild
in
in
ror
jmp
pusha
and
sbb
mov
adc
fadd
popa
inc
lds
and
xor
xor
dec
clc
xchg
mov
pop
sbb
test
mov
retf
mov
jl
idiv
xchg
fwait
bound
mov
sbb
movs
or
mov
jmp
pop
dec
je
(bad)
dec
in
xchg
vroundps
xchg
mov
dec
popa
pop
call
dec
test
add
outs
and
leave
cmps
in
pop
(bad)
jl
push
jmp
or
mov
and
test
ror
xchg
pop
retf
inc
test
xchg
ret
sbb
push
fsub
in
add
add
call
push
xchg
dec
push
push
pop
sbb
stc
inc
pop
xor
pop
(bad)
or
push
je
repnz
(bad)
ret
nop
loopne
fidiv
mov
ins
stc
sub
cmp
jecxz
popa
push
popf
xlat
sub
outs
mov
repnz
add
faddp
cmc
shr
pop
enter
inc
push
or
es
popf
jmp
in
push
jbe
int3
rol
pushf
mov
inc
(bad)
idiv
or
sti
nop
mul
xchg
pop
fild
lds
jne
js
(bad)
retf
fcomp
jp
push
sub
inc
xor
loope
sbb
or
xor
xchg
mov
stc
inc
or
cmp
jno
dec
push
adc
and
stos
aas
nop
in
sahf
fdivr
xchg
fisubr
sbb
sbb
leave
inc
sbb
xor
pop
add
movs
jge
sub
les
sub
jp
mov
div
pop
clc
cmp
dec
aaa
stc
mov
outs
hlt
out
bound
adc
adc
in
or
ficom
sti
adc
or
push
push
mov
ret
jns
add
adc
xchg
out
rol
or
mov
lock
pop
es
pop
imul
(bad)
cmp
adc
push
call
inc
aam
xchg
xor
outs
xchg
ins
sub
lods
loopne
ds
addr16
and
lock
fsubr
dec
push
mov
popa
int3
cmps
push
aad
pop
xchg
mov
push
enter
outs
jb
xor
jbe
dec
cmps
pusha
arpl
inc
inc
dec
or
bnd
(bad)
int
(bad)
aad
or
es
popa
fcmovne
sti
cmc
xchg
test
movs
adc
ins
mov
add
jmp
stos
inc
dec
outs
fidivr
pushf
cmp
sahf
xchg
out
mov
retf
out
push
enter
mov
pop
cwde
fdiv
inc
jl
fs
cmp
aam
(bad)
imul
sub
pop
xchg
aas
jb
mov
sub
jmp
ja
sbb
(bad)
sti
jg
mov
inc
xchg
mov
gs
popf
xchg
and
neg
mov
sbb
push
sub
jae
shr
pop
ins
sub
jmp
ss
push
pop
loope
addr16
das
cmp
xchg
dec
add
jmp
jbe
stos
dec
xchg
ja
push
pushf
dec
imul
shr
addr16
push
adc
mov
jp
dec
cld
cli
jno
mov
xchg
enter
movs
imul
cmps
sahf
xchg
sbb
add
js
mov
ja
mov
and
push
push
test
and
or
xor
sub
jl
fdiv
shr
ss
gs
aad
inc
or
adc
pop
add
and
xor
inc
test
jmp
pop
cmc
push
and
int3
dec
xchg
rcl
js
popf
and
push
push
or
xor
shr
sbb
inc
iret
sub
int3
popf
adc
push
sub
add
out
jecxz
out
mov
repz
pop
sbb
xchg
jmp
cmp
popf
pop
inc
leave
cmp
fcomi
cmovb
inc
outs
ror
push
fimul
jns
stc
int
cmp
cs
and
fidiv
pop
xchg
bound
fs
mov
mov
(bad)
adc
push
(bad)
out
stc
mov
xor
add
or
adc
fisttp
or
in
push
aaa
fsubr
xchg
jmp
loopne
daa
pop
adc
hlt
lods
sti
loop
or
adc
lock
xlat
loopne
push
dec
out
pop
xlat
repz
and
jno
bound
inc
into
mov
aaa
jle
jne
mov
jnp
sti
mov
mov
sti
pop
icebp
mov
adc
in
xchg
rcr
sbb
out
push
or
test
pop
add
popf
bound
leave
jbe
data16
sahf
rcr
cwde
dec
sub
jno
aad
ret
jo
push
rol
jae
push
fs
push
fdiv
clc
test
(bad)
sbb
xor
ret
ss
xchg
cmp
cmp
mov
fdiv
icebp
push
popa
mov
adc
or
dec
adc
loope
iret
sub
sbb
cld
mov
mov
xor
dec
mov
jecxz
ins
sti
adc
test
enter
push
adc
xor
xchg
xchg
mov
add
xchg
jecxz
aas
popf
push
xor
pusha
(bad)
fild
in
retf
push
retf
push
push
sub
aad
pop
dec
mov
xor
leave
or
jne
adc
xchg
xchg
pop
sub
xchg
jl
jno
inc
pop
call
sbb
cli
retf
push
dec
mov
mov
daa
cmp
mov
mov
sub
jnp
mov
cmps
cmp
xchg
mov
int
ins
xor
in
pushf
xor
and
or
add
dec
jns
aas
(bad)
sbb
xor
call
popa
data16
call
mov
jecxz
mov
inc
jb
test
mov
cmp
ins
xor
or
ins
cmc
and
shl
xor
scas
jo
mov
dec
inc
adc
inc
pop
sbb
popf
test
mov
add
push
ret
repnz
cmc
mov
xchg
and
fmul
xlat
adc
cmp
je
and
jg
mov
movntq
call
shr
jmp
cmps
outs
pcmpeqw
push
std
xor
aaa
mov
int
ss
xor
fs
inc
xlat
out
pop
clc
test
pop
jbe
outs
add
cmp
cmp
jne
jge
or
adc
ins
or
(bad)
sub
(bad)
mov
(bad)
pop
mov
aad
adc
int
je
enter
adc
jne
sub
xchg
and
add
mov
mov
adc
arpl
mov
cmp
adc
test
repz
xchg
add
push
fisttp
fs
push
mov
retf
add
ds
sub
fcomp
pushf
repz
cld
in
lahf
les
jg
ss
clc
in
sbb
js
mov
add
jge
jecxz
cmp
xchg
loop
jg
pusha
cli
xor
clc
aaa
mov
sbb
out
mov
repz
fdivr
mov
and
pop
dec
enter
call
icebp
in
loope
test
test
int
in
inc
dec
push
test
loope
and
and
adc
retf
pop
movs
pop
dec
adc
hlt
fwait
nop
(bad)
fild
in
jb
ret
sub
ret
adc
shr
pop
cli
cmp
push
push
mov
ficomp
mov
sbb
js
ret
stos
pop
rcr
or
push
jne
push
fwait
lock
xor
test
sahf
shr
cld
pop
cmp
mov
jl
mov
pop
pop
and
test
sub
jns
(bad)
in
mov
scas
xor
repz
inc
sub
in
out
(bad)
jle
mov
xor
mov
xor
ret
outs
std
aas
or
mov
aam
jnp
sub
test
fs
fs
jle
push
jmp
sub
sar
cmp
adc
add
gs
mov
or
inc
cs
iret
xor
xchg
not
lea
(bad)
push
add
cmp
fiadd
mov
dec
cs
jg
daa
jne
pop
jge
(bad)
mov
add
bound
ja
add
dec
adc
in
mov
sub
or
jge
fstp
mov
lods
(bad)
and
in
jnp
cld
cli
test
push
push
adc
in
jnp
cmovnp
jns
or
shl
sub
xor
jb
cli
pop
clc
push
stc
pop
adc
aam
and
les
mov
dec
jmp
jns
adc
scas
repz
push
arpl
js
dec
in
sub
mov
push
outs
sub
rcl
ins
jbe
dec
inc
ret
lods
nop
sahf
fadd
hlt
(bad)
sbb
ins
(bad)
stos
xchg
xor
fdiv
fdiv
xor
push
inc
push
retf
dec
xchg
xchg
jnp
xchg
ja
fnstcw
lods
or
out
arpl
stos
jp
pop
jmp
or
je
pop
mov
cmp
test
adc
(bad)
mov
jmp
mov
sbb
and
stos
jb
movs
scas
xor
pop
into
call
outs
mov
cwde
call
and
outs
popf
std
or
dec
ret
dec
ret
fsub
sub
iret
mov
cmp
popa
mov
aas
(bad)
lea
adc
push
pop
jmp
call
test
js
fadd
mov
mov
push
mov
inc
jbe
mov
dec
push
jl
adc
shl
pop
pop
jmp
dec
push
int3
xor
je
jle
test
nop
ja
lock
cmps
dec
push
or
xchg
int3
daa
mov
pop
(bad)
cld
inc
and
mov
mov
mov
into
or
ins
dec
pop
cmc
jbe
sahf
xchg
retf
jmp
nop
movs
iret
aad
aaa
outs
enter
sub
int3
sar
adc
retf
mov
in
repz
jb
(bad)
out
punpcklwd
push
push
pop
sti
xor
sbb
xchg
xchg
lahf
xchg
pop
movs
sahf
mov
add
jge
mov
dec
loope
scas
jmp
inc
inc
inc
pop
fld
outs
outs
cmc
xchg
or
pop
out
ror
cmc
out
adc
pop
inc
popf
repz
mov
(bad)
jmp
pusha
sub
pop
push
push
xor
test
push
lahf
mov
div
fwait
ror
shl
cld
adc
lahf
dec
and
div
inc
dec
pop
and
clc
cdq
or
pop
ja
add
inc
mov
mov
dec
loope
ret
sar
stc
mov
push
cmps
mov
sub
xchg
ficomp
jne
int
(bad)
(bad)
xor
pushf
outs
imul
cmp
jns
ret
mov
popf
imul
jo
jge
mov
rcl
inc
pop
adc
xor
aaa
cli
mov
inc
mov
rcr
movs
adc
dec
or
fidivr
pop
adc
std
jno
loopne
dec
inc
mov
loopne
lds
(bad)
fwait
or
jmp
pop
lock
cld
dec
cwde
dec
inc
lods
aad
daa
sbb
loop
sub
daa
daa
mov
jp
imul
sahf
xor
jmp
ja
mov
and
adc
ins
or
pushf
push
inc
mov
inc
sahf
pop
sbb
cmp
mov
cmp
jl
and
test
fnstenv
add
cmp
xor
mov
jl
xlat
loope
(bad)
daa
daa
popa
mov
pop
inc
mov
neg
pop
pop
mov
inc
cdq
dec
mov
push
inc
repz
lods
lds
fisttp
int
mov
inc
mov
xchg
addr16
enter
arpl
(bad)
into
popa
mov
pop
pop
push
adc
adc
pop
les
fist
cmc
sub
or
test
test
arpl
and
push
int3
sub
daa
das
and
(bad)
repz
mov
movs
shl
in
adc
in
xor
or
int
bound
out
pop
clc
mov
add
sbb
mov
inc
test
jmp
cmps
mov
push
adc
push
dec
sub
or
xchg
lea
jl
ja
and
(bad)
(bad)
jg
dec
push
rcl
aad
aad
and
cwde
cmp
imul
adc
mov
cmps
adc
xor
jne
push
sub
pop
scas
pop
jg
or
pop
xlat
jae
xchg
test
call
fadd
mov
les
sar
mov
dec
mov
push
(bad)
cmp
pop
sub
fld
icebp
xor
lds
js
xor
leave
rcr
popf
shl
jge
push
fmul
aas
out
push
aaa
dec
fcomp
cmp
mov
shl
mov
inc
pop
mov
in
outs
push
call
xor
mov
cmp
mov
jnp
cwde
ins
add
mov
dec
sbb
inc
add
sar
sahf
dec
(bad)
cmc
xchg
retf
sbb
les
pop
std
hlt
add
daa
mov
rcr
clc
ins
lods
repz
(bad)
es
es
inc
mov
push
and
mov
push
pop
pop
push
or
fisubr
in
dec
sub
ins
pop
out
pop
js
repnz
cwde
jg
ins
inc
adc
out
in
lods
sub
mov
mov
sahf
les
popf
inc
cmps
das
cli
outs
ss
imul
xchg
pop
aad
mov
test
adc
push
cwde
pop
mov
test
idiv
movs
pushf
(bad)
add
mov
mov
(bad)
into
xor
jmp
cdq
movs
cmps
enter
jae
retf
and
add
cdq
sbb
cmp
lods
jp
pop
lock
fadd
retf
data16
jg
stos
(bad)
aam
dec
xchg
cmp
pop
cmp
inc
in
out
mov
jne
mov
call
rol
jns
sbb
push
hlt
xor
(bad)
pop
adc
hlt
inc
push
mov
fdiv
les
push
cmp
add
je
es
jp
mov
add
add
sti
mov
outs
pop
test
dec
pop
mov
fimul
adc
xor
push
shl
sti
jp
icebp
icebp
(bad)
in
xor
fcom
ret
ins
push
(bad)
stc
mov
xchg
cmp
scas
in
jg
out
jmp
xchg
ss
adc
mov
cld
and
loop
dec
jl
std
pop
jmp
sar
stc
push
iret
fmul
js
adc
or
cmp
mov
mov
sbb
pop
xor
cmp
dec
lock
add
add
lock
mov
ins
adc
mov
lds
test
xor
mov
pop
jge
dec
aaa
fptan
jo
ds
fcom
mov
push
loopne
cmp
add
sahf
inc
(bad)
jmp
scas
pop
ffree
and
dec
inc
das
xchg
ret
pop
repz
clc
push
fs
data16
jg
imul
call
jmp
push
in
mov
enter
inc
test
cmp
(bad)
imul
add
scas
sub
mov
cdq
mov
mov
jne
mov
aas
pushf
sti
inc
jle
std
mov
dec
or
push
cmp
dec
stc
jge
push
leave
cmp
stc
enter
jns
add
jb
daa
jmp
(bad)
jle
leave
jecxz
cli
mov
mov
add
mov
jnp
mov
inc
xchg
arpl
fild
cli
pop
cmp
add
xchg
jg
aaa
addr16
xchg
cmp
mov
pop
xchg
dec
mov
lods
mov
pop
xor
sbb
mul
popa
jmp
pusha
xchg
jmp
scas
mov
gs
jge
(bad)
and
and
dec
hlt
fstp
ror
repz
arpl
call
sti
daa
test
leave
ja
outs
dec
sub
pop
shl
shl
(bad)
cmp
inc
in
data16
pop
bswap
popa
sahf
daa
rol
arpl
(bad)
shr
into
mov
push
clc
mov
je
xor
ins
dec
or
push
add
jle
mov
outs
jae
dec
movs
lods
adc
xlat
sahf
adc
xchg
jl
sbb
stos
xchg
jg
mov
add
push
dec
cmp
shr
cmp
fild
imul
lea
xchg
mov
adc
es
mov
cmps
mov
cld
lods
jmp
jne
stos
push
add
sub
push
mov
jns
scas
sbb
in
pop
mov
fcomp
cld
cmc
xor
cmps
xor
pop
adc
pop
test
push
dec
jge
imul
out
les
dec
mov
das
test
cmps
add
aam
push
pop
pop
mov
stos
loopne
enter
inc
xor
pop
(bad)
xor
das
mov
sub
mov
cmp
ret
shr
addr16
or
xlat
and
inc
test
jmp
dec
mov
test
cli
mov
mov
loop
lds
in
or
in
inc
imul
and
sub
dec
mov
ins
dec
fild
nop
xlat
cmc
sub
int3
push
xor
push
dec
push
xor
cmp
lods
pop
repz
add
mov
mov
ficom
cmc
push
cdq
jp
inc
pushf
out
mov
jecxz
(bad)
cmp
inc
test
sahf
stc
call
pop
cmp
mov
in
add
test
icebp
sbb
inc
or
mov
sbb
dec
dec
sbb
(bad)
sub
aad
pop
xor
push
pop
xchg
inc
inc
sbb
inc
fisubr
fistp
pop
enter
fmulp
adc
mov
sub
adc
fcomp
or
addr16
or
leave
ss
adc
xchg
xchg
mov
and
mov
repnz
jecxz
push
push
dec
lods
inc
adc
adc
mov
mov
js
aas
scas
jo
sub
icebp
xchg
ret
jb
arpl
mov
jge
push
or
(bad)
jo
pushf
pusha
pop
sbb
add
jno
pop
mov
(bad)
push
push
ds
imul
sub
or
sbb
adc
push
sub
ss
ins
adc
sub
xlat
jle
sub
and
mov
enter
fisub
inc
ret
mov
xchg
test
sbb
pop
or
jl
(bad)
aaa
lahf
icebp
push
push
xchg
cld
mov
pop
mov
std
mov
sbb
lahf
(bad)
push
inc
fiadd
sub
outs
pop
in
pop
pop
cmp
adc
jl
add
xor
mov
outs
mov
mov
cmp
push
xor
push
(bad)
xor
retf
cli
mov
push
cmp
mov
xchg
pop
hlt
repz
mov
call
mov
jae
in
std
mov
dec
mov
add
mov
jge
sti
cmp
cmp
and
xchg
or
data16
imul
addr16
pop
cwde
dec
or
popa
or
cmp
movs
dec
mov
jl
and
adc
mov
test
xor
lods
test
pop
push
paddq
ins
xchg
fs
movs
(bad)
div
inc
pop
clc
mov
fnstsw
push
push
sbb
xor
dec
xor
xchg
hlt
shl
repz
cld
shl
mov
pop
sub
sub
ds
push
xchg
(bad)
sub
jns
inc
pop
fst
ds
sub
push
cdq
test
jo
sbb
mov
dec
push
js
cmp
sti
xor
fisubr
arpl
stc
cld
ss
int3
in
lods
mov
test
cmp
test
xchg
and
add
pop
push
mov
nop
push
fld
sbb
fld
dec
mov
sti
(bad)
loope
lea
adc
dec
test
and
mov
stos
and
dec
mov
lahf
and
jnp
sbb
mov
mov
push
dec
push
xor
push
ds
addr16
addr16
mov
xor
loop
or
jb
cmp
sub
call
pop
test
mov
call
xchg
imul
ret
pop
sub
push
cld
pop
jmp
ret
add
out
jne
or
add
rcl
mov
stos
icebp
fiadd
mov
iret
xor
add
mov
ret
inc
stc
repnz
mov
cmp
jmp
(bad)
lock
mov
mov
push
xchg
pop
fsubr
pop
mov
mov
pusha
leave
iret
mov
icebp
out
sbb
jns
nop
jno
pushf
ins
ja
cmps
inc
out
xchg
dec
mov
imul
js
push
sub
das
jne
cmps
push
xor
mov
es
iret
jmp
shr
xchg
cli
mov
or
int3
dec
fldcw
sub
stos
inc
mov
rcr
pop
mov
sub
sbb
or
ss
adc
scas
data16
xchg
jne
rol
lea
push
jb
xor
jne
pop
xchg
repz
xchg
push
push
xor
sahf
sbb
xchg
rcr
cvttps2pi
aad
xchg
mov
push
imul
ret
add
dec
cmp
pop
ret
mov
and
popa
ja
fld
imul
shr
ja
pop
sbb
(bad)
xchg
xchg
xor
jge
pop
mov
adc
jb
cmp
jl
mov
not
movs
xlat
in
imul
mov
mov
cli
rcl
stos
xchg
pop
adc
stos
sbb
cdq
jne
mov
dec
add
sbb
test
mov
cmp
mov
mov
std
hlt
mov
mov
aad
or
mov
(bad)
dec
mov
clc
dec
and
xor
pop
adc
outs
stos
and
dec
mov
popf
add
dec
and
lea
cmp
jecxz
mov
push
inc
cvtdq2ps
aam
inc
mov
out
xchg
dec
retf
rol
sbb
ds
ret
jg
sub
adc
cmc
adc
adc
(bad)
ds
cdq
dec
aaa
adc
dec
out
mov
add
cmp
mov
je
ss
aaa
dec
aaa
imul
push
movs
adc
aam
sub
push
out
in
jb
xor
cwde
add
and
test
loope
fisttp
sbb
and
dec
pop
shl
push
shl
das
stos
aaa
inc
dec
outs
xchg
mov
push
dec
sahf
jae
jl
out
dec
xchg
call
inc
jmp
shl
(bad)
shr
call
cmc
loop
dec
stc
popa
cmc
jns
(bad)
sub
sti
stos
test
retf
jp
jbe
mov
inc
xchg
xor
mov
inc
pop
(bad)
in
and
cdq
inc
sub
repnz
fwait
inc
fcmovbe
push
add
mov
mov
push
sub
push
or
imul
push
dec
popa
scas
or
out
ds
adc
or
push
adc
fist
leave
adc
adc
xchg
mov
jbe
inc
repz
outs
pop
movs
popf
pop
xor
ror
lods
fwait
sub
(bad)
sub
fcomp
in
jmp
sub
mov
xchg
test
pop
loope
ja
cwde
pop
mov
fsubr
idiv
jo
pop
lods
push
add
fdivrp
sbb
les
xchg
pop
mov
sbb
fadd
mov
mov
mov
addr16
mov
neg
jno
xchg
sahf
xor
hlt
cmp
loop
das
lods
xchg
outs
sar
and
inc
scas
(bad)
int
in
stc
leave
das
(bad)
repz
call
mov
nop
in
test
mov
cld
retf
fdivp
test
sbb
cmp
(bad)
or
imul
int3
adc
jge
adc
push
and
push
lahf
push
push
test
cmc
mov
or
test
popa
dec
xor
out
adc
add
ret
push
adc
xor
jp
das
sub
and
add
or
dec
add
or
clc
inc
pop
mov
movs
lods
xchg
inc
dec
movs
pop
es
ds
shl
add
xor
outs
cwde
mov
fnstsw
mov
sub
cld
sub
and
lds
pushf
cs
sahf
sbb
pop
push
xor
or
in
pop
aad
iret
push
mov
cs
jge
or
retf
cmp
xor
aam
jae
sbb
xchg
add
jns
nop
add
retf
mov
inc
dec
inc
stc
bound
add
push
lahf
add
xchg
and
jae
sbb
jb
pop
sbb
in
dec
jg
nop
cmp
outs
outs
push
mov
dec
ror
in
and
mov
cld
aas
mov
sub
pushf
mov
cmp
out
lods
sbb
jle
rcl
jge
jnp
jmp
and
into
xchg
mov
mov
pusha
cmp
loope
mov
add
fcom
pop
dec
mov
dec
outs
jb
jmp
and
and
xchg
into
ss
pop
fwait
adc
inc
push
sub
rcr
mov
outs
shr
push
int3
stos
into
div
pop
sbb
in
push
cmp
in
mov
gs
ja
xor
sbb
data16
mov
pop
mov
pushf
mov
push
push
xchg
repnz
mov
sub
ret
mov
(bad)
push
lods
pop
jl
test
cld
jo
push
hlt
xor
and
push
es
sub
cdq
mov
imul
into
inc
sbb
pushf
mov
and
(bad)
lock
in
das
sbb
mov
push
rcl
pop
pop
stos
out
mov
test
ss
fst
bnd
mov
xor
inc
and
jbe
into
repnz
mov
idiv
repnz
jmp
ror
mov
pop
fimul
inc
dec
adc
adc
mov
fimul
xor
lock
dec
aam
lods
push
scas
mov
sub
aaa
out
or
or
pop
ror
mov
add
inc
das
jl
xor
jbe
imul
jecxz
sbb
aas
xor
inc
jnp
pop
pusha
push
int
pop
repz
fist
jnp
arpl
test
out
xor
loope
jp
sub
into
test
and
mov
es
(bad)
rol
and
and
out
jb
xor
cmps
sbb
cld
ror
jecxz
daa
call
addr16
sub
call
clc
mov
inc
mov
hlt
mov
ss
and
rcr
retf
mov
sub
cwde
or
test
sub
xchg
neg
sub
adc
mov
push
inc
push
dec
ror
xchg
xlat
retf
add
rcl
jbe
jp
out
cmp
xor
leave
aam
lods
cmp
loop
out
and
push
mov
inc
loop
adc
fcmove
in
sar
adc
xchg
outs
pop
sti
xchg
out
lahf
sub
ret
adc
lods
and
mov
dec
retf
gs
add
cld
mov
leave
test
mov
fcmovne
adc
std
mov
sbb
or
xor
out
mov
das
popf
xchg
int3
ja
jmp
in
sbb
dec
pushf
fmul
mul
jae
sti
aaa
pop
int3
sbb
dec
or
add
int3
retf
mov
aas
mov
mov
shl
dec
sbb
mov
stos
sbb
sub
push
stos
and
mov
in
jmp
call
add
mov
push
push
sbb
out
and
mul
ss
lahf
pop
cmp
call
cwde
sbb
cmp
fimul
or
sbb
loope
mov
(bad)
(bad)
in
fstp
sub
inc
aad
es
cs
jae
aad
daa
int
add
adc
outs
ror
mov
(bad)
inc
xor
lods
sub
xor
mov
dec
jbe
pop
arpl
xor
ror
sub
cmp
sub
sbb
gs
enter
mov
dec
loop
sahf
hlt
adc
adc
push
add
outs
jo
jl
cdq
sar
xor
shr
mov
leave
ficomp
inc
jecxz
out
sub
inc
fisttp
fcomp
xor
jbe
daa
les
int3
dec
jns
mov
int3
repz
push
jbe
popf
mov
sub
or
sti
jg
pushf
xor
jnp
sub
imul
add
adc
aaa
in
xor
dec
inc
out
mov
push
jge
adc
push
repnz
ins
add
movs
inc
push
cmp
jnp
sbb
in
ja
cmp
dec
pusha
or
rol
push
lahf
aam
lods
pop
call
inc
mov
adc
ficomp
dec
jb
repz
fdiv
jnp
ja
or
xor
lods
mov
jp
mov
scas
iret
jnp
xor
jbe
movs
mov
cmps
rcr
rcr
fnsave
cmp
call
mov
xchg
dec
dec
add
xchg
or
push
lods
pusha
enter
pop
mov
mov
adc
shl
fiadd
shl
push
fnstcw
mov
inc
pop
call
add
jno
sahf
inc
fist
xchg
cmp
push
and
mov
xor
shl
aas
xchg
xchg
jmp
push
pop
(bad)
shl
cmp
sub
(bad)
inc
jl
mov
mov
push
xor
mov
call
cmps
arpl
adc
push
ret
sbb
mov
xchg
push
nop
jmp
movs
imul
jge
int
aam
retf
int
xor
mov
ja
test
jmp
movs
add
shld
mov
ret
or
dec
cdq
jl
cmc
scas
add
xchg
je
mov
in
mov
mov
rcl
jmp
imul
cdq
fsubr
jp
cmp
jbe
sar
sbb
mov
pop
pop
pop
cld
test
dec
cmc
xchg
ror
xor
or
xor
xor
fisttp
cdq
rcr
shl
add
adc
lahf
rcr
mov
outs
int
fdivr
or
inc
int
fisub
or
out
adc
xchg
sbb
std
movs
inc
pushf
and
fadd
pushf
adc
aaa
or
inc
sbb
in
cmc
iret
lock
sbb
add
(bad)
sti
or
fwait
dec
dec
xor
ret
daa
jb
mov
or
cdq
aas
push
les
ret
mov
(bad)
pushf
and
(bad)
push
rol
xor
jp
loope
add
adc
cmp
mov
or
push
inc
inc
xor
mov
and
outs
mov
imul
popf
pop
add
loop
mov
push
outs
rcr
xor
cmp
stc
stos
clc
rcr
in
or
xor
sbb
push
sbb
stos
jbe
and
aas
(bad)
mov
(bad)
ss
dec
adc
lahf
jp
mov
add
inc
idiv
mov
pop
sub
(bad)
pop
adc
pop
adc
call
lock
fisttp
outs
jns
(bad)
sbb
xor
(bad)
pop
add
mov
cmp
push
or
int
cmps
dec
push
das
cmps
push
dec
mov
cmp
sub
sbb
add
mov
dec
push
push
fsubr
mov
(bad)
xor
and
jmp
pusha
dec
push
mov
fbstp
push
sbb
lock
fnstsw
test
add
jb
lods
hlt
push
das
ret
xchg
imul
movs
add
scas
xchg
pop
(bad)
and
or
ret
jmp
add
retf
add
mov
sub
call
sub
outs
cli
jl
and
dec
xchg
mov
fidivr
cmp
mov
adc
dec
mov
lock
inc
sub
xor
lds
mul
pop
int
pop
pushf
inc
dec
in
lahf
test
cmp
push
arpl
mov
or
in
call
jo
ret
add
pop
inc
dec
cli
dec
loope
add
vfmsubadd213ps
push
or
ror
ins
inc
mov
sub
or
movs
mov
test
or
(bad)
dec
scas
hlt
inc
add
sti
push
aaa
int3
retf
push
gs
sbb
cmp
xor
or
push
in
outs
adc
jecxz
cmp
out
test
std
and
(bad)
jb
mov
ins
in
pop
sahf
outs
and
sbb
(bad)
or
(bad)
lods
or
dec
idiv
fstp
sbb
push
add
pusha
sahf
addr16
sub
push
int
cli
in
push
adc
das
and
xchg
cmp
imul
fsubr
and
jmp
mov
mov
ficom
fisubr
jmp
add
(bad)
int
stc
xor
or
inc
sub
dec
cdq
push
xor
cmp
cmp
push
aad
sahf
lods
ins
cld
pop
adc
or
stos
jns
and
mov
ret
test
gs
ret
leave
cli
mov
push
dec
mov
out
inc
rcl
jg
stos
pop
xchg
adc
jp
(bad)
loopne
retf
mov
icebp
push
aaa
jge
dec
cli
movs
push
rcr
or
mov
pop
or
jns
(bad)
cmc
mov
or
dec
aam
cmp
ror
out
pop
sbb
fst
mov
pusha
(bad)
rcr
cmp
cwde
lahf
lock
and
mov
jns
mov
cmc
xor
or
xor
test
pop
adc
jno
outs
or
push
shl
movs
cli
xchg
es
gs
mov
das
inc
jnp
stc
and
cmp
sub
mov
sub
xor
push
ins
aaa
xchg
loope
sbb
sbb
je
inc
in
xor
ret
popa
jmp
jnp
lods
jnp
sbb
dec
adc
pop
enter
(bad)
jge
dec
push
mov
jmp
jns
bound
sbb
je
stos
mov
popa
adc
sbb
jl
push
sub
jmp
retf
sahf
jae
inc
dec
dec
push
leave
shl
add
clc
mov
or
(bad)
mov
movs
push
xchg
nop
lock
and
xchg
leave
sub
push
jle
push
or
push
inc
inc
fisub
add
add
mov
dec
jp
loope
imul
pop
ins
cmp
retf
dec
aad
pop
pop
sbb
out
das
out
mov
jae
jmp
mov
in
cmc
mov
cwde
adc
sbb
jmp
loope
add
pop
inc
daa
jnp
mov
dec
xchg
mov
scas
xchg
call
jmp
std
dec
mov
imul
fisub
aaa
int3
xchg
out
jno
jns
call
jmp
jl
or
rcr
outs
cmp
mov
cmps
cwde
cmps
inc
or
cmps
mov
pop
pop
inc
adc
shr
mov
outs
sbb
mov
push
xchg
dec
mov
mov
jnp
daa
pop
mov
je
or
fmul
inc
ret
int3
pop
cdq
jmp
ds
xchg
sahf
xchg
(bad)
leave
scas
sbb
dec
push
xor
cmp
pop
fist
and
adc
adc
mov
ret
xor
sub
inc
fs
inc
cmps
sti
call
rcr
iret
enter
cwde
xchg
retf
mov
xchg
xchg
adc
inc
or
fidivr
ret
into
mov
and
ds
loop
xor
inc
imul
shl
cmps
(bad)
mov
mov
jmp
(bad)
loopne
(bad)
in
pop
pop
mov
mov
rcr
stc
pop
xor
adc
sar
push
jne
outs
or
fstp
out
mov
push
push
shr
mov
sub
adc
add
int3
xor
xchg
push
mov
cld
(bad)
cld
popf
cs
jmp
imul
inc
fistp
mov
scas
cdq
fstp
cmp
je
jmp
inc
sub
push
mov
mov
jnp
dec
xor
dec
cli
sub
pop
js
jno
mov
cmps
mov
inc
frstor
aas
bound
xor
dec
shr
mov
xor
(bad)
loope
stos
sbb
mov
call
inc
pop
sbb
push
arpl
dec
push
adc
jecxz
ret
sbb
(bad)
repz
(bad)
fmulp
clc
std
inc
outs
movs
and
in
cmp
jb
adc
jmp
retf
stos
xchg
call
aas
and
call
pop
sub
jo
jge
je
pop
test
es
inc
inc
(bad)
adc
mov
mov
mov
loop
or
push
xchg
jnp
fs
bound
addr16
push
adc
shr
shl
lea
xor
xor
movs
push
inc
(bad)
enter
arpl
icebp
dec
mov
xor
inc
loopne
cdq
mov
je
xchg
test
jns
movs
ror
mov
je
imul
mov
repnz
or
out
mov
or
inc
retf
ffreep
push
push
sub
aad
mov
std
iret
repz
inc
cmps
sbb
xchg
push
jmp
cs
test
mov
mov
ins
mov
dec
jae
out
loope
or
(bad)
jmp
mov
das
xchg
inc
fwait
adc
inc
lahf
ins
inc
cmc
fidivr
xchg
cwde
mov
xor
add
jge
and
cmp
repz
scas
je
fidiv
push
mov
ins
add
mov
pop
xchg
mov
mov
xlat
or
lods
out
loopne
cmps
jmp
adc
jns
jecxz
jp
add
ss
inc
lahf
movs
in
and
arpl
(bad)
push
adc
push
xchg
sub
shr
ror
mov
data16
mov
xor
push
mov
arpl
inc
in
rol
xchg
shl
fidivr
push
ficom
jl
mov
js
xor
mov
(bad)
loope
xor
sbb
mov
sbb
mov
dec
pop
push
call
fistp
xlat
xor
sub
dec
xor
jo
add
cld
pusha
inc
cmp
sbb
cmp
lods
scas
push
out
xchg
cmc
xchg
dec
loop
(bad)
cdq
xchg
push
dec
dec
data16
repz
pop
cmps
ret
shl
jne
push
leave
or
and
leave
mov
ss
test
xchg
cld
loop
(bad)
inc
jo
fstp
shr
test
cmps
jb
fdiv
jnp
ror
adc
cli
out
icebp
xor
loopne
add
mov
gs
xor
lods
std
test
dec
or
shl
aas
pop
adc
sub
xor
jnp
sub
inc
mov
xor
ins
call
in
inc
imul
jmp
popf
ret
rcr
cmps
dec
push
out
inc
not
push
dec
jnp
fnsave
cdq
xchg
fimul
daa
daa
push
mov
retf
xor
adc
aaa
data16
cli
xor
repz
push
rcr
bnd
cmc
mov
push
mov
cli
movs
xchg
jnp
jecxz
leave
push
shl
aad
ins
pop
push
pop
dec
xchg
push
jg
lock
aas
mov
dec
ds
jo
xchg
sub
sbb
mov
push
(bad)
push
mov
dec
push
xor
mov
(bad)
jg
loope
pop
and
ret
pop
push
ret
aaa
sbb
fld
popf
inc
jp
and
lock
int
push
data16
scas
leave
push
aam
mov
dec
xor
dec
inc
dec
and
push
dec
sbb
fwait
mov
cmp
imul
xor
or
cli
mov
iret
popf
jne
mov
inc
pop
loopne
push
dec
jne
(bad)
push
inc
fmul
xor
mov
loop
out
fimul
inc
fild
stos
and
cwde
gs
dec
cli
mov
sbb
pop
ja
iret
retf
cmps
std
inc
sub
and
into
cmp
iret
rol
sbb
push
xchg
aad
into
jl
inc
(bad)
dec
mov
cmp
pop
(bad)
fbstp
xchg
and
push
xchg
cdq
push
push
andnps
inc
mov
enter
rcr
add
inc
mov
and
push
loopne
retf
add
sbb
or
sub
(bad)
popf
or
xchg
pop
pop
dec
cmp
jne
and
xor
jnp
retf
bswap
xchg
ret
pop
in
mov
loope
cdq
test
sbb
imul
inc
in
clc
retf
test
rcl
cs
jae
stc
scas
aas
sahf
mov
xor
mov
mov
in
es
cmps
popf
jmp
adc
cwde
lods
test
and
test
jne
iret
adc
test
cwde
xor
push
(bad)
xor
imul
and
sub
ja
or
imul
pop
adc
je
ror
mov
aas
inc
mov
dec
movs
imul
and
loope
cmc
call
add
test
out
es
shl
mov
jo
lds
inc
(bad)
(bad)
and
and
(bad)
fsubr
inc
jne
dec
or
dec
fwait
fwait
mov
adc
sub
out
hlt
enter
sub
scas
das
fcomp
push
lods
addr16
lods
into
add
sbb
and
test
nop
xchg
jns
push
pusha
mov
or
add
dec
les
test
pop
out
out
pusha
sti
fadd
mov
xchg
and
rcr
jne
shl
ins
call
dec
rep
inc
(bad)
int3
jge
ins
push
cmp
cwde
cmps
add
rcr
mov
(bad)
push
adc
sbb
popa
xchg
out
ins
(bad)
push
lock
dec
pop
mov
mov
jae
retf
pop
inc
lea
daa
shr
jne
call
mov
pop
(bad)
add
push
pop
js
lock
popf
sahf
fnsave
sahf
ret
jg
inc
hlt
(bad)
call
add
fistp
arpl
add
in
xchg
adc
in
rol
lahf
aad
(bad)
out
sbb
cld
push
jmp
jno
push
loope
enter
or
or
pop
or
retf
and
xor
test
cmp
data16
cmps
bound
pop
mov
pop
sbb
mov
or
mov
(bad)
sbb
mov
and
pop
cs
sti
fstp
sahf
sti
add
dec
test
(bad)
jne
and
mov
or
in
fwait
jo
daa
cmp
test
xor
enter
mov
pop
scas
adc
xchg
jo
sahf
cwde
xor
pop
or
xor
sbb
pop
repz
cdq
daa
add
clc
push
int
aas
shl
loope
rcr
mov
fild
and
nop
test
addr16
inc
sbb
mov
(bad)
xor
sbb
jmp
lock
mov
jle
mov
scas
sbb
imul
ds
inc
loope
pop
call
loopne
outs
xchg
xchg
aad
inc
(bad)
rcr
adc
popf
outs
fidiv
mov
jmp
or
imul
push
aaa
cmp
mov
jl
jle
mov
sti
xchg
popa
inc
xor
cmp
lods
sub
add
nop
iret
cs
jnp
jbe
cmp
mov
inc
in
addr16
arpl
mov
jns
push
dec
out
ret
xor
mov
jns
jns
loope
inc
hlt
(bad)
ja
fs
in
pop
in
popa
mov
(bad)
movs
and
xor
xchg
test
dec
mov
fldz
add
stos
(bad)
not
aad
adc
jge
ficom
or
adc
push
mov
int3
(bad)
(bad)
push
jmp
popa
or
jne
(bad)
aas
(bad)
or
push
mov
xor
les
jmp
shl
movs
hlt
mov
cmc
mov
adc
add
push
dec
loope
sub
lds
mov
jmp
push
in
sbb
out
adc
cdq
test
je
(bad)
(bad)
cdq
lds
ja
hlt
pop
and
div
cmps
or
add
fsubr
sub
pop
inc
adc
push
xor
std
mov
xor
or
jg
jge
sub
push
scas
mov
sbb
cmp
ret
stos
xor
js
dec
jo
cmp
pop
inc
in
fist
sbb
jb
mov
sub
sbb
lods
sub
adc
mov
push
lods
cdq
cwde
into
pop
outs
add
out
jae
sahf
fist
jp
outs
je
(bad)
pushf
dec
retf
xchg
xchg
or
or
mov
std
jge
mov
push
adc
in
cmc
in
xor
lea
push
pop
jl
(bad)
rol
arpl
into
loop
aad
mov
movs
(bad)
lock
out
or
cmp
aaa
into
repnz
pop
aam
mov
pop
xlat
dec
mov
scas
xor
ds
push
das
jo
pop
sbb
pop
or
daa
mov
cdq
hlt
lds
sub
(bad)
loop
les
mov
xchg
repz
push
out
ss
lods
jb
aaa
inc
lods
add
and
jecxz
or
out
fiadd
xchg
jb
sahf
add
sbb
add
in
jns
addr16
jmp
cmps
mov
outs
push
jae
mov
and
stc
xor
in
dec
int
ds
mov
(bad)
int
push
ret
out
add
and
out
pop
dec
jae
(bad)
fdivr
add
push
out
aaa
(bad)
dec
test
mov
cld
lahf
out
add
push
mov
ja
out
rcl
add
aad
dec
scas
mov
add
(bad)
fsubr
popa
xchg
push
rcr
fstp
or
shl
xchg
(bad)
cmps
xor
div
pop
dec
(bad)
or
xchg
out
jo
push
jge
xchg
lea
ret
shr
movs
inc
mov
dec
mov
ins
pop
mov
sub
movs
jb
in
jmp
es
popa
and
pop
and
fs
xchg
or
icebp
fimul
imul
sti
add
mov
dec
retf
fs
and
sub
push
sub
(bad)
pop
push
div
sti
jae
push
in
sub
mov
outs
jg
das
(bad)
or
bound
movs
and
jno
loop
mov
test
add
nop
repz
loope
push
inc
retf
mov
mov
sbb
das
out
(bad)
mov
das
mov
xor
pusha
mov
call
clc
dec
nop
(bad)
lock
sbb
cmc
int3
adc
fwait
ret
pop
inc
in
aaa
js
in
pop
push
dec
cli
mov
ja
cs
sub
std
jl
mov
das
ja
(bad)
aas
sub
sbb
out
test
outs
pop
sbb
push
mov
dec
xchg
jle
sub
fimul
popf
and
mov
add
mov
xchg
std
in
fnstcw
rol
scas
cmps
inc
(bad)
dec
and
xchg
inc
lock
and
dec
push
shl
mov
pop
pop
mov
jmp
cmp
mov
mov
cdq
fstp
push
pop
fisttp
adc
adc
jbe
ins
scas
adc
pop
fldcw
inc
fs
xchg
add
mov
je
imul
rcl
push
int
movs
jmp
mov
xchg
(bad)
mov
push
not
mov
ja
jle
fiadd
sub
or
and
ret
movs
jo
pop
push
test
jnp
or
pushf
dec
sbb
xchg
jle
ficomp
jmp
xor
pusha
lock
sbb
pop
mov
fldcw
loop
and
in
inc
mov
jl
add
psubusb
or
jp
add
enter
xchg
sti
ins
out
cs
jg
push
xchg
scas
lea
stos
xchg
mov
rcl
push
pop
sub
add
add
mov
mov
ss
sbb
xchg
dec
cmp
push
lock
iret
or
out
cli
shr
inc
mov
or
jae
lods
pop
sub
jmp
mov
sbb
and
push
dec
mov
xor
sbb
mov
ss
outs
xchg
fistp
pusha
add
cmps
add
mov
ins
aad
sbb
hlt
inc
mov
test
cmp
fld
rcl
(bad)
mov
sbb
sub
repnz
out
xchg
cld
push
sar
lds
add
mov
idiv
mov
inc
cmp
lods
or
(bad)
pop
push
in
sahf
and
inc
mov
mov
jo
fisubr
jmp
mov
stos
in
pop
test
jmp
xor
jne
and
jp
sub
push
icebp
pop
rep
sahf
sub
ret
jg
stos
out
jns
fsub
rcl
cli
jno
cld
shl
inc
fidivr
call
js
xchg
mov
shl
push
je
xor
xchg
add
xor
mov
ret
in
mov
call
sub
inc
and
mov
loope
cmps
xchg
jo
dec
fdivr
xchg
pop
(bad)
sbb
(bad)
cmp
jns
ja
ss
rcr
cmp
jecxz
scas
dec
xor
dec
sub
xchg
and
push
aam
ins
sbb
mov
and
or
shr
or
xor
pop
cs
jne
and
fstp
popf
push
pop
xchg
imul
mov
and
in
cmps
dec
int
or
inc
loop
xor
jns
lsl
pop
mov
dec
mov
out
hlt
retf
pop
add
mov
call
test
in
pop
inc
jmp
xchg
mov
aam
pminub
fstp
mov
xchg
pop
cmc
rcr
jmp
cmp
paddw
ret
dec
(bad)
or
jno
or
adc
xlat
dec
shl
sub
jnp
in
movs
in
push
aad
aaa
push
jle
cmp
add
sub
into
mov
cmp
push
mov
jmp
sub
cmp
pop
pop
icebp
and
sub
sbb
ss
stos
lea
mov
jns
pop
sub
xchg
xor
inc
or
add
sbb
es
jecxz
lahf
cmp
je
mov
jo
ret
stos
sahf
retf
dec
inc
inc
dec
and
(bad)
xchg
retf
ins
movs
cmp
mov
test
in
jg
xor
adc
xchg
dec
jmp
adc
popf
inc
cmp
aaa
mov
add
call
sub
mov
push
loope
jo
xor
fcmovnbe
inc
iret
repz
mov
mov
imul
cmp
das
(bad)
mov
sub
cmps
scas
jl
mov
push
pop
dec
mov
ins
fwait
add
jl
adc
sub
popf
adc
cmps
xchg
ins
cmp
in
imul
out
rcr
adc
sub
mov
pop
cmp
mov
mov
clc
cmps
cld
mov
cmp
lea
mov
pop
nop
movs
cmps
inc
jge
ds
arpl
dec
mov
stc
pop
ja
mov
loope
or
retf
repz
shr
aas
jmp
ins
pop
mov
mov
repz
jg
xchg
fidiv
mov
lods
jo
test
jg
pusha
cmp
std
out
icebp
mov
add
xchg
jo
scas
adc
sbb
cmp
push
xor
mov
call
push
mov
fstp
cmps
xor
inc
repz
inc
lea
repnz
dec
test
imul
fs
jo
inc
test
imul
mov
aam
gs
xchg
pop
ins
rcr
adc
ins
outs
adc
jo
rcl
or
shl
push
push
pop
jmp
mov
mov
in
fcomp
mov
lock
sub
cmp
xchg
arpl
or
inc
ret
push
lds
stos
sar
ins
fcmovnbe
or
inc
pop
(bad)
mov
push
nop
movs
cmps
call
jo
mov
jle
xor
push
and
mov
sbb
ret
and
mov
jl
cmc
or
sti
vaddss
cs
scas
dec
imul
adc
xchg
or
int3
fimul
inc
test
int
scas
ds
mov
push
mov
pop
rol
leave
mov
xchg
add
cmp
cmp
(bad)
mov
pop
cmovge
pushf
aam
jo
shl
mov
hlt
jmp
jns
pusha
mov
and
cli
xchg
hlt
aam
aas
test
loopne
lds
inc
mov
xchg
mov
mov
push
xor
(bad)
gs
adc
out
clc
cmc
mov
scas
cmps
not
xchg
sar
adc
pop
pop
or
and
mov
dec
shr
jo
pop
add
(bad)
fcmovb
pop
ret
adc
jnp
sbb
aaa
jae
fsub
rol
inc
imul
xchg
jnp
addr16
push
ret
test
xor
rcpps
mov
cmp
ret
jecxz
aaa
sbb
jnp
cmc
(bad)
fisub
sbb
inc
and
ds
push
test
test
xor
aad
dec
out
add
mov
sub
cld
leave
mov
push
out
bound
pop
xlat
add
pop
fcomp
mov
and
cmp
push
jmp
mov
int3
and
jnp
xchg
icebp
(bad)
fsubr
xor
or
(bad)
push
mov
js
mov
add
adc
add
dec
mov
stos
add
push
cdq
xor
cli
rcr
ins
scas
xchg
cld
push
retf
daa
cwde
into
and
mov
hlt
icebp
pop
(bad)
loop
cmp
retf
mov
fdivrp
add
aas
adc
and
(bad)
mov
ins
xor
lea
adc
ds
mov
cmps
sbb
sbb
push
add
retf
push
(bad)
push
xor
movs
mov
clc
fistp
out
std
movs
arpl
push
mov
int
(bad)
or
(bad)
cwde
cmp
push
call
jmp
call
mov
push
test
es
cmp
cwde
call
xor
dec
xlat
jmp
push
mov
pmulhuw
add
loopne
jae
xchg
fmul
sub
jge
scas
mov
nop
bound
out
hlt
mov
dec
jmp
push
nop
jno
mov
dec
pop
push
adc
mov
mov
cmp
je
xor
and
xor
jle
shr
xchg
mov
clc
clc
movs
popf
add
loope
rcr
cmp
sahf
loope
cmp
jge
adc
add
pushf
sbb
fst
retf
mov
push
sub
push
out
dec
sbb
push
and
xor
jnp
mov
ins
lock
mov
cwde
ffreep
ds
into
mov
xchg
sti
iret
fisttp
sahf
dec
xor
mov
outs
(bad)
mov
xlat
cld
dec
sar
xchg
and
lds
sti
adc
pop
pop
mov
aam
jmp
jb
and
add
xor
call
adc
fwait
sub
pop
sbb
in
in
loop
dec
or
add
pop
add
and
sub
push
mov
repnz
push
xchg
mov
add
mov
xchg
in
rcl
mov
addr16
test
sbb
pop
dec
mov
sbb
cli
inc
add
or
aad
mov
cmp
dec
dec
pushf
xchg
push
mov
daa
fistp
pop
mov
jge
push
xchg
jge
inc
mov
inc
sub
movs
imul
leave
daa
adc
add
jl
push
das
or
aas
sub
mov
aam
push
and
mov
ds
stos
je
add
ror
or
nop
and
scas
stc
dec
ret
pushf
jle
lods
addr16
hlt
fist
mov
cmp
stc
jo
pop
ror
icebp
jp
or
mov
cmp
ins
scas
push
retf
movs
aam
in
and
sub
shl
cwde
jl
push
les
jge
dec
popa
into
pop
(bad)
shr
mov
icebp
in
in
icebp
arpl
pop
inc
push
js
popf
sbb
ins
jnp
ins
xchg
(bad)
sbb
ret
mov
lea
(bad)
push
popf
mov
scas
and
push
fidiv
xor
pop
sub
cs
enter
mov
int
mov
sub
stos
cmp
imul
mov
stc
and
ins
inc
pusha
mov
je
xchg
xor
jns
mov
sahf
hlt
out
call
ja
and
fisttp
and
cmp
int
daa
adc
stos
adc
push
jmp
jecxz
shl
data16
mov
pop
jmp
mov
push
jge
sub
push
adc
cmp
add
call
loope
adc
aam
push
nop
fisttp
cmp
mov
xor
add
repz
inc
jmp
cmp
ror
icebp
mov
sbb
mov
and
ins
mov
faddp
pop
icebp
adc
add
imul
rcl
jbe
add
mov
and
xchg
push
sar
add
mov
dec
xchg
xor
std
pop
jp
jno
stos
mul
inc
clc
and
push
test
leave
push
es
shr
test
mov
add
pop
mov
rcl
add
or
icebp
pop
xor
or
popf
mov
imul
sbb
sub
push
jbe
mov
aaa
leave
ret
iret
sub
aas
mov
push
in
push
pop
fcomp
loope
dec
cmp
shr
jle
cmp
jno
fst
mov
fs
clc
in
xchg
cmp
ficomp
cmp
fdiv
fldcw
add
cmp
dec
dec
jle
dec
(bad)
mov
(bad)
movs
outs
into
sub
inc
jns
clc
out
cli
idiv
sbb
mov
cli
pop
inc
sar
and
stc
mov
or
mov
jmp
jmp
push
pop
jnp
push
fwait
outs
mov
inc
(bad)
mov
lock
cdq
stc
lods
outs
sbb
adc
jmp
leave
pop
jbe
lods
scas
ficomp
xchg
sbb
jb
adc
or
imul
add
out
in
data16
js
into
stos
in
and
test
(bad)
cmp
add
das
test
(bad)
pop
push
imul
cmp
stos
cmp
sahf
setae
cmp
xchg
adc
cwde
(bad)
outs
push
xchg
loop
ret
retf
push
sbb
mov
repz
inc
xchg
jne
xchg
inc
rol
sub
addr16
pushf
jnp
mov
in
xchg
leave
push
push
xchg
push
arpl
mov
dec
jge
pop
loop
xor
popf
inc
cwde
or
push
shr
sub
imul
rcl
bound
in
jb
and
mov
mov
in
ins
imul
mov
mov
cs
add
out
fld
movs
pusha
or
lea
inc
or
fwait
sub
out
call
sti
jg
jo
js
dec
es
jl
loopne
ss
dec
jp
aad
or
pop
dec
test
push
sub
imul
pop
push
cmp
int
jge
js
cld
adc
idiv
pushf
enter
movs
sbb
or
imul
xor
in
dec
xchg
dec
(bad)
dec
push
daa
sahf
inc
fnstcw
ret
data16
fidivr
cmp
dec
push
pop
mov
loope
adc
jo
fbld
loopne
add
(bad)
dec
inc
jne
mov
mov
mov
je
and
push
pop
daa
enter
xor
cmp
adc
xlat
push
inc
es
push
jg
cmp
mov
adc
lock
sbb
mov
imul
std
dec
imul
push
imul
xchg
xor
(bad)
mov
pop
in
retf
or
lods
daa
rcr
dec
mov
dec
fidiv
mov
lea
xor
push
sub
or
pop
inc
in
add
push
mov
in
adc
xlat
test
sub
add
bound
je
cmp
dec
jb
jg
push
dec
sbb
pop
in
(bad)
call
fs
sub
push
dec
adc
sbb
xsaveopt
movs
pop
outs
pop
cmp
in
pop
retf
push
outs
sbb
pop
sub
or
dec
dec
push
push
xor
sar
mov
mov
sti
push
scas
retf
sbb
jb
out
jae
dec
icebp
(bad)
test
sbb
push
leave
sub
sbb
mov
cmp
scas
adc
sahf
xor
test
mov
cmps
sub
stc
add
xchg
js
mov
data16
cs
shl
stos
sbb
leave
jo
out
and
fwait
aaa
lods
ds
and
(bad)
stos
js
pop
sbb
mov
pop
aam
ret
aas
sahf
sar
add
sub
sbb
jns
gs
or
js
cli
popf
pop
andps
or
cmp
imul
pop
mov
pop
mov
pop
push
div
adc
inc
fwait
retf
fwait
in
in
dec
adc
lds
push
sar
adc
sbb
sbb
stos
(bad)
mov
pop
aaa
pusha
sbb
xor
fs
xchg
cmp
les
cmps
mov
hlt
scas
adc
push
(bad)
jmp
fisub
cmp
xor
dec
cmp
adc
pcmpeqw
fcomp
xor
sub
mov
jae
dec
mov
neg
(bad)
std
xchg
sub
leave
loope
enter
je
lods
gs
bound
cmps
xchg
movs
imul
out
pop
inc
ret
cmps
or
(bad)
xchg
fmul
xchg
sbb
cmp
and
adc
imul
sbb
ss
jg
test
dec
mov
mov
jns
jno
call
loop
inc
xor
shl
sti
pop
mov
arpl
inc
lods
sbb
scas
mov
lods
(bad)
pushf
mov
(bad)
cmps
fimul
cmp
adc
sbb
jle
les
and
or
or
das
sub
push
xchg
ret
in
aad
shl
pop
(bad)
xchg
imul
retf
xor
aam
in
xchg
jge
ds
aad
out
scas
fidiv
cmp
mov
adc
mov
repz
fstp
xchg
ins
jmp
cs
jecxz
repz
fcomp
fcomp
aam
and
fidiv
xor
loope
mov
fwait
xlat
repnz
aam
sbb
cdq
inc
scas
dec
retf
inc
or
into
fxch
daa
int
add
mov
xchg
lods
scas
jl
and
push
fsub
aad
add
inc
cmp
push
jns
xchg
jge
adc
or
or
data16
ror
test
mov
ror
cmp
inc
sub
mov
rcr
push
sbb
lahf
xor
int3
jge
leave
loopne
mov
sahf
ja
in
mov
xor
imul
jge
rol
stos
in
inc
mov
mov
and
ss
dec
stos
ret
mov
mov
data16
push
repnz
pop
icebp
pop
aas
xor
mov
dec
adc
pop
mov
pop
sbb
or
xchg
out
test
fisub
dec
xlat
sbb
and
sub
add
mov
xor
adc
jns
sar
or
and
xor
movs
push
stos
std
pushf
out
shl
fcomp
sub
int
xor
jp
imul
mov
pop
dec
push
stos
sub
test
movs
mov
add
out
cmps
cmp
sub
jecxz
sbb
aas
inc
in
cmps
aaa
sbb
adc
mov
(bad)
push
jmp
pushf
xchg
push
pop
mov
in
mov
out
xor
xchg
pop
xchg
pop
nop
pusha
jg
sar
mov
sbb
ret
cdq
sub
adc
sti
mov
pushf
fild
pop
das
and
icebp
push
imul
rcl
retf
out
mov
sbb
xchg
movs
xchg
mov
or
aas
pop
aas
mov
imul
dec
dec
sbb
loopne
adc
dec
and
push
jmp
mov
push
ss
daa
rol
jecxz
cmp
movs
add
jns
mov
pop
in
hlt
xlat
inc
out
add
cmps
push
xlat
xchg
cmp
rcr
test
xchg
addr16
cmp
arpl
fisttp
adc
push
je
cmp
pop
shr
jns
mov
cwde
push
fs
(bad)
mov
inc
retf
int3
dec
xor
dec
inc
mov
ins
push
mov
pop
sub
mov
in
dec
or
sbb
or
ret
icebp
jb
fisub
stc
cld
add
loop
add
fsubr
lock
adc
mov
sub
pop
sar
sub
mov
push
loope
pop
push
rcl
mov
jecxz
ins
js
sub
movs
push
fild
aam
imul
rol
inc
dec
nop
lahf
repz
dec
and
cli
call
movs
pop
call
fxtract
(bad)
ja
fistp
ficomp
sbb
pop
add
test
fisttp
xchg
xor
sub
xor
push
pop
out
ret
inc
jae
sub
push
enter
retf
hlt
xchg
dec
(bad)
mov
ds
jo
imul
xchg
retf
mov
mov
mov
push
mov
pop
and
je
xchg
mov
xor
add
sub
xor
js
js
cs
shr
jp
inc
push
mov
scas
clc
hlt
loop
add
cmps
movs
es
leave
push
(bad)
in
sbb
jmp
js
gs
movs
fisttp
leave
inc
test
cmp
jp
repz
inc
jecxz
jl
mov
push
jno
mov
jge
(bad)
not
arpl
shl
loopne
mov
lock
dec
jecxz
les
pop
mov
movs
lea
push
xchg
and
dec
cmp
inc
dec
(bad)
mov
and
or
xchg
inc
vsqrtps
(bad)
(bad)
adc
test
test
and
jmp
mov
cld
loope
leave
fwait
ret
retf
push
push
inc
fmul
jl
jmp
aaa
stos
sahf
cdq
inc
xor
mov
jge
retf
jmp
ds
xchg
inc
fbstp
sub
xchg
aad
test
stos
adc
cs
pop
lds
add
mov
inc
mov
inc
loopne
pop
jecxz
pop
xchg
lods
jae
dec
adc
jl
cmp
in
loope
loop
fcom
mov
stc
fcmovb
aas
(bad)
call
mov
popa
gs
dec
or
adc
pop
cli
(bad)
sti
pop
sub
test
test
xor
punpckldq
jb
push
pop
mov
sbb
push
inc
xchg
fdivr
jns
pusha
add
stos
pop
(bad)
xor
clc
enter
push
test
jmp
jecxz
call
lds
mov
sub
fdiv
ret
fldl2t
sbb
pushf
mov
inc
add
pop
push
dec
and
pop
jge
js
adc
and
push
cmp
cmps
mov
and
add
and
cmp
fs
push
in
sbb
inc
out
loope
imul
pop
adc
mov
xchg
push
cmp
stos
nop
icebp
js
mov
mov
or
sti
out
cmp
ret
add
jmp
pop
jnp
stc
gs
repnz
std
cmc
dec
pop
enter
add
loopne
pusha
jle
pop
mov
and
and
or
xchg
sub
adc
test
or
mov
inc
xor
jbe
sahf
cmp
or
(bad)
jle
rcr
mov
std
inc
add
ja
fistp
clc
pop
out
push
clc
mov
jae
retf
(bad)
fwait
scas
in
fiadd
push
push
in
pop
dec
popf
rcl
imul
push
int3
sbb
(bad)
xor
cwde
mov
lock
fild
lock
and
push
jne
ret
mov
cmp
leave
test
sar
or
jne
aam
iret
fcomp
mov
inc
out
dec
fmul
jmp
adc
test
and
jp
sbb
xor
push
es
adc
jo
jmp
sub
push
pop
pushf
out
retf
stos
sub
mov
cmp
stos
mov
cmp
ins
popa
fwait
ja
xor
outs
mov
aad
in
ins
adc
pop
mov
fs
mov
out
xchg
ret
add
and
and
mov
mov
pop
jnp
sub
inc
sub
into
sub
call
gs
mov
and
loop
jb
call
xchg
mov
mov
mov
sbb
add
pop
or
mov
mov
pop
sbb
cmp
mov
push
xchg
pop
fcmovne
fs
sub
das
pop
loope
sub
fcom
mov
dec
in
xor
test
jno
mov
mov
lods
(bad)
push
or
jmp
lods
xchg
rcl
in
sbb
cld
mov
mov
ret
sbb
jb
jmp
sti
pop
cmp
(bad)
pop
push
mov
mov
xchg
jne
in
lock
ins
je
push
fldcw
pushf
add
hlt
into
cmc
pop
outs
lds
cs
sbb
cmp
or
jno
inc
adc
pop
mov
ror
mov
add
or
pop
(bad)
not
mov
int3
jl
sbb
shl
and
mov
nop
add
lods
sub
(bad)
push
push
ins
inc
cmps
imul
cmp
jge
pushf
movs
mov
repnz
dec
fiadd
inc
sub
test
xlat
jecxz
cs
cli
pop
fwait
or
inc
pusha
shl
xchg
sbb
jno
add
mov
out
and
jmp
cld
mov
(bad)
loope
(bad)
rcr
cmc
jle
mov
cmp
test
jno
xchg
push
mov
pop
adc
push
(bad)
ins
es
scas
mov
inc
dec
iret
ret
ret
xchg
stos
and
push
mov
jp
fadd
lds
jne
jl
push
or
jne
inc
add
loope
mov
rol
mov
mov
cwde
cmp
sbb
add
mov
neg
jecxz
test
push
inc
cmp
and
scas
xchg
enter
and
retf
or
add
leave
jo
cmc
push
lock
xor
jb
stos
lods
mov
mov
(bad)
push
cli
movs
xchg
aas
scas
shl
xchg
sub
push
sub
adc
inc
jecxz
iret
xor
and
mov
iret
sahf
cmp
and
mov
inc
fbld
jno
pop
enter
loop
jns
xchg
jno
push
into
in
lock
(bad)
retf
adc
mov
jne
aaa
ret
outs
inc
jge
in
dec
dec
lods
sbb
(bad)
stc
push
xor
or
in
add
jae
xchg
xchg
ins
out
(bad)
fsub
aaa
(bad)
shl
jns
data16
add
imul
jno
loopne
test
dec
xor
pushf
icebp
movs
adc
xor
call
and
cdq
mov
ficomp
xchg
rcl
not
add
fsub
mov
push
addr16
adc
cmp
sub
dec
inc
popa
sbb
jbe
shl
(bad)
retf
cmc
retf
mov
scas
xor
xor
lods
sar
inc
mov
xor
pop
mov
add
or
out
xor
and
stos
or
pop
cdq
cmc
jl
aad
mov
inc
inc
outs
ss
out
fstp
jb
dec
cmp
cmps
pop
push
test
sub
sbb
je
sbb
mov
inc
xchg
jns
gs
ret
stc
(bad)
jmp
push
inc
xchg
push
imul
pop
and
ds
ret
mov
clc
cli
das
outs
cmp
loope
cmc
ret
setl
js
repnz
cmp
push
sub
mov
outs
je
push
and
(bad)
sub
inc
jecxz
fsubr
not
retf
sahf
push
push
call
or
adc
mov
into
add
repz
cmps
test
call
jae
rol
xchg
cmp
push
cmp
adc
dec
or
scas
retf
jl
xchg
lock
cld
and
inc
add
xchg
mov
cmp
addr16
arpl
cli
fist
test
cmps
div
jne
imul
inc
int3
mov
pxor
pop
dec
add
shl
and
(bad)
sbb
sbb
mov
out
inc
adc
pop
hlt
movs
mov
jmp
(bad)
mov
sti
xor
sti
xchg
add
ja
out
push
call
adc
mov
cmp
jge
jo
xchg
push
loopne
std
(bad)
retf
or
into
xchg
xor
lods
or
js
imul
hlt
adc
pop
mov
mov
push
add
in
(bad)
aas
push
mov
mov
or
das
xchg
or
cld
mov
rcl
es
xor
je
inc
push
jns
sbb
mov
out
xchg
jge
inc
loop
inc
je
mov
imul
xchg
adc
shl
movs
mov
fs
ins
sub
push
sbb
out
adc
mov
or
jge
jbe
pop
adc
and
das
or
push
std
adc
pop
cmp
jge
push
cmp
not
sub
mov
xor
(bad)
ss
clc
cmp
jae
mov
aad
xlat
xor
out
fneni(8087
popf
stos
pop
jecxz
pop
stc
addr16
sti
fs
push
push
imul
mov
dec
sub
outs
data16
mov
pushf
xor
inc
xchg
arpl
hlt
and
and
push
into
ror
icebp
and
int
(bad)
push
xor
leave
retf
int3
fdiv
test
jnp
mov
dec
ja
mov
ja
cmp
into
js
jmp
dec
cmp
mov
or
and
loop
cmp
dec
(bad)
mov
ror
stos
lods
lods
mov
or
cmp
sbb
push
inc
test
ins
sbb
mov
scas
xor
repnz
lods
mov
jae
dec
pop
and
xchg
jb
mov
sbb
cwde
(bad)
jg
(bad)
das
fadd
cs
mov
je
dec
cdq
leave
sti
in
scas
arpl
loope
pop
adc
mov
aaa
fnstsw
cmp
xchg
call
je
(bad)
dec
sub
out
sbb
ret
inc
mov
shl
pop
mov
sbb
(bad)
sbb
xor
dec
retf
jge
scas
inc
les
push
xchg
in
and
int
psubusb
int
pop
xchg
aam
lods
adc
cld
stc
loop
inc
fisttp
pop
inc
call
(bad)
repnz
and
wrmsr
cmps
test
or
pop
cdq
icebp
es
add
xchg
ficomp
loopne
sti
mov
pop
icebp
sar
daa
pop
pusha
xor
loope
mov
jecxz
jl
aaa
jg
call
jmp
scas
mov
push
std
cdq
stc
and
imul
cld
mov
(bad)
push
push
xchg
sub
pop
jo
or
aas
jcxz
push
xchg
test
xchg
mov
cmp
add
xchg
mov
sbb
xchg
and
aam
push
or
inc
mov
sub
inc
fdiv
or
shl
fcomp
adc
ins
retf
or
sbb
int3
push
int3
mov
cdq
lods
fcomp
add
shl
mov
push
add
retf
sar
test
std
sub
aam
test
xchg
cmp
sahf
mov
test
cmp
mov
in
shl
mov
dec
push
and
sbb
push
add
scas
inc
adc
gs
xchg
in
popa
dec
mov
cmp
jnp
aas
lods
sub
lahf
jae
push
outs
dec
test
jo
sub
ins
arpl
sbb
sbb
sar
popf
je
lods
pop
sti
(bad)
mov
ss
xor
ror
(bad)
mov
fcom
push
cmp
nop
rcr
and
push
sub
adc
or
jnp
cmp
in
add
lock
pop
mov
mov
nop
jl
jae
adc
cmp
test
paddsb
aaa
ins
inc
lahf
mov
jmp
sub
out
push
or
dec
mov
shr
into
push
loop
xchg
call
inc
stc
mov
mov
sti
fild
stos
shr
imul
jno
test
leave
stos
cs
aaa
sbb
(bad)
push
inc
ins
jg
outs
aam
pop
lock
push
dec
and
and
outs
cmp
fsubr
iret
pop
repnz
inc
xchg
xchg
fs
xor
sbb
or
pop
ret
(bad)
jne
xchg
mov
cli
mov
repz
test
(bad)
pop
mov
(bad)
inc
frstor
sahf
jae
pop
sti
mov
std
loop
test
or
test
sub
adc
xchg
xchg
cmp
cli
or
mov
dec
icebp
mov
jb
cdq
jb
imul
inc
out
mov
or
jmp
mov
add
lea
xchg
shl
adc
test
(bad)
call
xor
and
cld
dec
js
jo
add
ror
scas
sbb
inc
and
es
out
push
lods
add
cmp
jo
inc
add
cld
sub
inc
sub
cmp
fcmovnb
and
sbb
inc
mov
sahf
in
cmp
imul
sbb
mov
punpckhbw
and
adc
jno
mov
or
ss
fidiv
movs
push
mov
jno
bnd
cld
jecxz
dec
cmps
lds
and
pushf
popf
jg
adc
fcom
data16
pop
fs
pushf
js
or
cmp
dec
aad
mov
mov
sahf
fld
inc
in
pop
jmp
fstp
jmp
add
(bad)
fwait
adc
mov
cmc
mov
call
daa
xchg
cdq
stos
aas
shl
ja
or
test
cmp
test
lods
cvtdq2ps
cmp
loope
in
cs
mov
lock
ficomp
mov
push
cmc
int3
hlt
dec
jae
bound
in
adc
pop
jae
lock
dec
sub
push
int
dec
rep
adc
rcr
adc
xchg
sbb
add
sbb
loop
mov
inc
mov
cmps
push
out
cli
push
jle
push
xchg
stc
test
sti
cmps
add
cli
cmp
cmps
push
(bad)
jg
xchg
fld
test
mov
shr
cmp
mov
jp
mov
push
xor
jp
mov
int3
and
mov
push
lahf
add
aad
push
add
daa
inc
(bad)
stc
mov
mov
rcl
inc
ja
mov
lods
retf
xchg
test
imul
jmp
sbb
mov
and
out
scas
add
xchg
xchg
sahf
int
jo
pop
mov
jae
pop
in
sub
xor
loopne
xchg
add
fadd
out
test
mov
adc
in
inc
mov
xchg
mov
inc
lahf
cmc
outs
adc
movs
fbstp
shr
xchg
pop
push
xor
mov
mov
(bad)
or
mov
adc
movs
push
ror
xchg
sub
and
xchg
dec
or
pop
adc
adc
shl
cmp
sub
(bad)
repnz
cmp
(bad)
(bad)
fsubr
sub
sub
ret
dec
ins
sbb
add
push
xor
dec
mov
xchg
sub
inc
stc
mov
(bad)
rcr
mov
mov
and
idiv
cli
mov
dec
cmps
mov
mov
add
mov
leave
mov
lods
xchg
imul
xlat
andps
sbb
xlat
enter
mov
cs
jne
int3
sbb
cmp
or
loope
or
test
ins
cmps
and
lea
aaa
retf
fiadd
mov
jnp
and
dec
cmc
(bad)
lock
and
in
sub
cli
sbb
jne
pop
es
adc
bound
(bad)
aad
sbb
in
loop
and
and
and
mov
lock
add
mov
mov
xor
loop
mov
pop
mov
imul
movs
xchg
and
push
sub
div
(bad)
jbe
std
add
dec
into
xor
jp
repz
dec
jo
sub
cmp
daa
std
push
mov
xchg
jp
xor
mov
scas
outs
popa
rcr
test
pop
mov
xor
jle
xchg
rcl
scas
push
jge
mov
xchg
jmp
dec
xchg
cmp
retf
dec
sbb
(bad)
pop
icebp
ror
test
pop
pop
(bad)
xchg
adc
pop
push
xor
cwde
cmp
mov
sbb
lds
xchg
mov
mov
cmp
aam
test
sub
add
add
in
pop
pop
repz
sub
inc
pop
fcomp
jp
xchg
mov
cmp
pusha
xchg
pop
sahf
call
shl
pop
repz
lea
mov
dec
mov
sub
mov
test
lds
nop
mov
adc
cmc
rol
mov
js
popf
xchg
leave
dec
gs
adc
enter
xchg
and
or
xchg
outs
xor
imul
and
enter
mov
sbb
jmp
fnstcw
jnp
pop
or
sub
(bad)
mov
adc
fs
mov
call
fmul
jmp
adc
lahf
jne
out
adc
test
mov
cwde
push
xor
shr
into
and
arpl
div
mov
jo
push
xchg
in
hlt
mov
inc
or
pop
mov
add
and
push
imul
sti
aad
clc
sub
sbb
in
xchg
icebp
js
pop
xor
clc
repnz
ins
xor
std
jo
push
add
gs
jbe
ror
fcom
mov
dec
iret
aaa
push
mov
push
loop
or
rcl
adc
or
sub
shl
sub
mov
ret
fs
pop
adc
stos
add
(bad)
rcr
xor
xor
sahf
mov
out
add
pop
push
mov
or
jg
inc
push
stos
(bad)
sahf
ja
nop
imul
cs
jno
sar
jg
mov
mov
test
dec
mov
xor
push
fild
bnd
jle
inc
xchg
hlt
(bad)
jbe
sub
sub
movs
jo
xor
fs
mov
adc
cmpxchg
or
es
inc
cmp
xor
test
jns
cmp
ins
push
push
dec
cmp
imul
sub
mov
aam
fisubr
jno
sbb
or
in
pop
adc
cli
pop
idiv
test
imul
test
fild
sub
ins
sahf
xor
and
push
packsswb
pushf
sbb
es
xchg
fucompp
mov
(bad)
mov
loopne
mov
das
fimul
sbb
stos
xchg
enter
jl
iret
or
hlt
je
ja
fistp
mov
xchg
pop
jnp
stc
push
es
mov
fmul
mov
mov
xchg
mov
das
popf
imul
mov
imul
pop
into
pushf
jle
mov
push
shl
and
rol
or
icebp
dec
ror
je
movs
push
and
daa
push
int
jmp
add
loope
cmp
dec
cmc
sbb
loopne
push
aad
aad
mov
fs
fld
addr16
mov
jmp
jmp
or
js
sbb
or
aam
and
clc
xchg
das
in
mov
out
cmp
in
inc
and
ficom
add
mov
xchg
shl
je
leave
loop
call
cmp
push
jmp
dec
gs
(bad)
(bad)
imul
mov
shr
inc
and
jmp
dec
pop
data16
sahf
and
dec
stos
out
inc
ja
stos
mov
add
jbe
movs
or
sub
pop
add
dec
test
mov
mov
dec
or
inc
scas
push
push
cdq
adc
scas
or
mov
in
adc
mov
ret
mov
dec
(bad)
ins
stc
mov
(bad)
stc
or
or
cmps
cmp
and
loope
pop
fsubr
xor
rol
jle
(bad)
mov
popa
push
std
mov
psubw
inc
pop
out
shr
sub
fstp
push
mov
jns
pop
xor
and
push
data16
xor
(bad)
pop
dec
push
jecxz
fs
icebp
imul
xor
rol
xchg
jno
push
out
sub
(bad)
push
pop
mov
lods
xchg
push
cmp
pop
ds
or
les
and
mov
idiv
fwait
into
(bad)
mov
mov
pushf
enter
sbb
push
jno
push
outs
mov
or
call
(bad)
int
cmp
and
or
test
pop
test
ins
popf
jmp
or
(bad)
in
mov
sti
mov
movs
dec
adc
mov
call
sti
ja
shl
imul
mov
jl
push
and
push
cld
jmp
xor
add
or
outs
mov
mov
loopne
jge
je
ret
lahf
in
das
mov
cmp
push
leave
sub
dec
lahf
dec
pop
xor
out
pop
sub
shl
loopne
js
vpmadcsswd
imul
pusha
arpl
popf
or
aaa
mov
sub
mov
stc
pushf
jns
mov
mov
pop
arpl
stc
loopne
(bad)
dec
pop
and
call
push
xor
cmp
(bad)
cmp
or
scas
sbb
ret
pop
or
shl
push
and
and
leave
inc
mov
add
scas
pop
push
nop
gs
inc
dec
add
add
fmul
lahf
sub
jae
lock
test
and
push
xchg
adc
xor
sub
div
mov
or
jno
cmps
imul
pusha
and
cmps
int3
mov
push
mov
shl
mov
xlat
or
aaa
jb
add
repnz
jns
mov
les
ss
jle
xor
iret
sub
mov
xor
jle
loopne
or
cmp
inc
add
fiadd
jmp
mov
test
ret
push
cmps
inc
add
in
retf
sahf
aaa
mov
ret
adc
lods
repz
sbb
mov
mov
imul
(bad)
fstp
jge
and
pushf
aaa
inc
jg
leave
and
cwde
outs
loope
add
adc
cmp
dec
mov
(bad)
sub
das
mov
stos
push
mov
test
lods
ret
daa
mov
leave
je
sbb
test
pop
inc
lds
push
cmp
stc
mov
xchg
scas
dec
je
jp
adc
push
dec
lock
repnz
(bad)
cmc
and
clc
aas
dec
inc
inc
sbb
(bad)
and
div
push
ja
(bad)
sbb
ins
jp
fs
ins
jecxz
cmp
pop
mov
test
aaa
stc
shl
or
sub
test
cmp
repz
les
mov
dec
sub
xor
mov
adc
mov
dec
enter
xchg
add
adc
(bad)
pusha
shr
lods
addr16
mov
outs
xor
cs
call
out
cdq
lahf
add
or
pop
cmps
mov
mov
xchg
and
xor
lea
(bad)
loope
setb
push
stos
inc
inc
bnd
and
iret
sub
or
xchg
sbb
in
cmps
outs
mov
sub
aam
or
enter
or
and
(bad)
and
int3
pushf
nop
mov
xchg
xchg
xor
(bad)
mov
arpl
daa
aam
cmp
shl
adc
pusha
ficomp
sub
mov
xchg
push
ficomp
test
stc
leave
mov
mov
ret
(bad)
pop
pop
add
mov
(bad)
or
das
pusha
lods
push
sbb
mov
cmp
retf
cli
shl
loopne
or
jge
or
dec
sub
inc
hlt
int
(bad)
test
cdq
mov
mov
or
data16
das
sti
push
pop
and
and
mov
movs
loope
test
into
adc
sbb
and
jmp
sub
mov
pop
fmul
and
fisub
nop
dec
cli
cmps
ror
loop
fmul
int3
fdivrp
test
lods
test
adc
rcr
xor
loop
(bad)
and
lock
mov
add
or
and
add
test
ja
jbe
jl
xchg
or
cmp
adc
outs
dec
mov
mov
pop
fwait
mov
sbb
cmps
push
xchg
leave
stos
aam
cmp
jge
cdq
dec
cmp
ret
jb
push
dec
mov
hlt
mov
inc
mov
push
out
fmul
xchg
mov
push
add
fldcw
cmp
xchg
and
xor
movs
xlat
loope
xor
push
sbb
add
lds
lahf
das
lahf
mov
cmp
sahf
push
and
jmp
dec
out
pop
pop
mov
out
xlat
stos
mov
cmps
ret
loopne
push
lea
mov
cmp
movs
ja
push
or
loop
movs
call
push
cs
sbb
bound
cmp
mov
bound
or
cli
mov
imul
mov
cmps
jle
call
xchg
add
sbb
adc
push
jae
cwde
xchg
(bad)
popf
cmc
cld
push
sahf
jnp
adc
test
popf
cmp
stc
sti
inc
adc
out
jp
xchg
movs
pop
fcomi
dec
push
xchg
aam
pop
xor
mov
pop
cmps
dec
xor
and
jbe
imul
dec
mov
cmp
and
push
(bad)
dec
adc
jbe
xor
lea
scas
dec
and
push
add
or
shr
cwde
mov
cld
imul
mov
(bad)
mov
lods
retf
mov
retf
aaa
xchg
or
push
pushf
mov
nop
or
mov
xor
jo
out
retf
repnz
cmc
arpl
mov
jmp
(bad)
loop
jmp
addr16
jg
test
inc
add
xchg
mov
loopne
mov
leave
pop
aam
push
pop
fsubr
xchg
cmps
cld
mov
scas
shl
mov
or
sbb
xor
imul
bnd
add
repnz
jne
dec
mov
mov
out
(bad)
jmp
hlt
dec
add
cdq
lods
rol
popf
les
ja
stos
xor
movs
in
dec
lea
sbb
sub
adc
push
je
ret
xlat
and
sbb
js
adc
xchg
and
add
sub
lahf
jns
push
cwde
sahf
pushf
mov
xchg
mov
push
xchg
ror
call
xor
pushf
leave
xor
or
repnz
mov
nop
add
pushf
movs
dec
popa
xchg
push
or
ror
mov
fwait
jmp
daa
pop
scas
xchg
imul
add
scas
cmp
push
or
fxch
xor
xor
in
call
adc
xchg
push
test
xor
xchg
fnstsw
xor
mov
jno
cmp
adc
mov
int
and
rcr
xor
lods
stc
ficom
adc
xchg
lods
inc
ja
sub
imul
aaa
pop
std
inc
arpl
push
mov
(bad)
mov
adc
loop
xchg
mov
and
in
movs
push
sub
(bad)
jg
lods
test
in
test
(bad)
shl
loop
add
cmp
xchg
pusha
lds
call
adc
jno
addr16
(bad)
lock
scas
ins
xchg
pop
cmp
jecxz
mov
mov
inc
addr16
add
mov
mov
or
(bad)
das
in
cmp
jns
inc
xchg
dec
aas
ins
cmp
dec
inc
fisttp
xchg
xor
xor
sub
out
rcr
test
out
adc
cmp
repnz
sub
lahf
arpl
xchg
cdq
hlt
rcr
nop
enter
jmp
jmp
popa
(bad)
idiv
xor
pop
push
(bad)
sbb
add
loop
ret
pushf
out
cmp
dec
dec
mov
xchg
mov
mov
in
add
fcmovu
retf
mov
and
out
jle
mov
pushf
xchg
pop
fisub
(bad)
lods
mov
mov
aam
push
gs
call
arpl
inc
mov
icebp
out
mov
ss
or
xor
js
pop
push
rol
sar
stos
pop
(bad)
push
ins
jno
jg
mov
xchg
xor
push
out
popf
jmp
frstor
test
dec
popa
sbb
pop
xor
xchg
jnp
mov
rcr
adc
and
aaa
out
mov
lock
rcl
add
cmp
cdq
sub
out
and
sbb
jo
mov
jl
cmp
cdq
test
xchg
mov
(bad)
or
nop
push
bound
retf
je
jl
in
or
retf
call
(bad)
mov
cmps
adc
stos
sub
xchg
test
xchg
xchg
je
hlt
std
lahf
or
sub
cmp
xlat
sbb
imul
jnp
iret
jb
add
xor
adc
and
fwait
jmp
sub
adc
scas
les
push
push
pop
pop
fld
push
add
inc
or
sti
pop
xchg
jae
mov
cmp
sbb
aam
cmp
retf
or
ja
stos
ror
jecxz
push
test
popf
rol
push
js
pop
mov
test
or
sub
inc
(bad)
(bad)
adc
outs
mov
ror
data16
mov
jo
and
mov
jb
pop
xor
(bad)
iret
adc
mov
std
push
xchg
cmp
(bad)
mov
and
xor
jbe
jp
std
adc
pcmpeqb
jns
jl
push
pop
das
cmp
nop
arpl
or
les
clc
cdq
(bad)
pop
jp
sub
mov
lods
xor
mov
pushf
fdiv
push
inc
push
in
(bad)
pop
pop
pop
pop
adc
ret
add
add
mov
dec
rcr
cmc
dec
int
jns
fstp
mov
data16
std
dec
and
pusha
jge
enter
int3
retf
je
xor
stos
mov
jae
cli
loopne
movs
or
push
fcmovnu
inc
fcomp
and
int3
hlt
lock
jo
das
sahf
mov
scas
scas
dec
es
out
(bad)
inc
int
cmc
lds
loop
fwait
sbb
mov
xchg
mov
movs
mov
xlat
icebp
pop
jp
jbe
xor
out
xor
jae
das
aaa
push
into
or
fs
jp
inc
cmp
ins
xor
scas
(bad)
push
cmp
jns
mov
call
bnd
(bad)
jmp
sti
ja
jecxz
cmps
in
add
adc
dec
sbb
cld
mov
retf
aam
fmul
xchg
push
pusha
fnsave
inc
mov
sar
mov
fcos
push
outs
sti
or
ja
sub
mov
(bad)
(bad)
les
iret
fwait
add
mov
cmc
push
daa
mov
dec
call
fs
cmc
das
mov
cmc
test
mov
test
ror
ds
inc
call
fistp
sahf
imul
ds
fwait
jle
pop
sub
sbb
inc
xchg
pop
push
mov
mov
cld
mov
and
inc
les
mov
inc
popa
or
mov
cmp
pop
and
cmp
(bad)
mov
mov
pop
gs
inc
outs
mov
jbe
xchg
outs
xchg
(bad)
jg
xchg
sbb
sbb
or
adc
pop
mov
addr16
xchg
fdivr
push
in
xchg
fistp
and
rol
xchg
outs
add
mov
and
lods
call
mov
repnz
xchg
adc
or
les
bound
adc
jle
out
cmp
data16
ins
ret
(bad)
loop
dec
ret
enter
std
repz
outs
xchg
and
jne
mov
(bad)
ins
in
jnp
cmp
cmp
jg
jg
jbe
shr
imul
scas
mov
loopne
push
xchg
test
add
mov
sahf
out
adc
jmp
xor
pop
ret
(bad)
es
pop
not
call
sbb
or
xchg
ret
xchg
mov
dec
mov
mov
sbb
aas
jb
jmp
jbe
pop
adc
rol
cmp
push
sub
mov
shr
scas
xchg
add
sbb
jae
dec
cli
lahf
pop
ret
sub
ja
sub
cmc
in
cli
push
es
icebp
or
add
sub
xor
retf
xor
shl
adc
inc
stc
popf
inc
fucomp
popf
je
into
pop
shl
imul
lds
push
jnp
mov
mov
adc
or
pop
jecxz
call
cli
mov
data16
xor
cmp
mov
cld
lods
sub
cld
sbb
push
cmp
adc
cmp
jbe
int3
xor
push
or
sub
mov
mov
sub
jl
arpl
pop
test
dec
dec
aam
retf
cs
mov
mov
ret
sub
mov
sub
std
test
iret
pop
sub
pop
cmp
out
xlat
dec
adc
push
mov
pop
xor
pop
sub
inc
dec
adc
ror
pop
jno
mov
sbb
fadd
xor
sub
inc
pop
test
or
rcl
cmps
ror
xchg
pop
mov
adc
adc
xor
out
push
adc
push
rcr
pop
not
inc
dec
test
or
bound
jl
mov
pop
adc
or
push
xchg
sbb
loope
repnz
add
mov
jg
jae
inc
fcom
and
push
add
jle
pop
in
movs
fiadd
clc
jbe
scas
mov
sti
test
sub
bound
sbb
adc
pop
scas
sub
ret
and
retf
mov
and
mov
fistp
ins
hlt
das
push
sbb
addr16
dec
push
xchg
push
(bad)
retf
shl
mov
(bad)
mov
repz
sbb
sahf
idiv
mov
inc
jo
out
test
adc
sbb
das
push
mov
xchg
inc
sti
jnp
addr16
and
ja
std
push
xlat
sub
dec
sbb
cmp
hlt
leave
sbb
jae
hlt
push
ret
in
(bad)
sbb
cli
xchg
pop
out
stos
mov
pop
imul
push
out
lods
sbb
mov
shl
cmp
aas
retf
xchg
in
aad
repnz
(bad)
shl
adc
cmp
mov
daa
push
jno
fstp
dec
inc
popa
push
psraw
scas
call
ror
jmp
push
dec
mov
cmp
cli
cmc
stos
rcr
pop
shl
sub
shl
lods
or
mov
and
loope
and
push
nop
pop
push
pop
dec
imul
and
cdq
pop
or
push
adc
retf
clc
in
movs
int
add
pop
test
cdq
push
out
test
pop
std
cmp
add
jmp
test
in
ret
cmp
je
imul
rcr
js
stos
loope
fdivr
cdq
dec
sub
aaa
pop
jae
sub
xor
movs
mov
or
not
lods
out
pusha
push
cmp
jns
jns
adc
test
lds
xchg
ror
in
bnd
jb
das
movs
dec
pop
icebp
mov
sbb
mov
js
add
mov
dec
add
xor
jno
out
and
popw
mov
(bad)
ds
sub
add
mov
jns
in
push
iret
lods
and
mov
popa
jnp
stos
xor
add
pop
sbb
test
pop
push
xchg
xor
retf
iret
jbe
lea
pop
mov
jne
(bad)
out
aaa
out
shl
mov
and
stos
and
shr
or
sub
repnz
jp
push
dec
pop
test
jb
pop
push
loopne
xor
push
pop
fisub
mov
call
push
mov
xor
in
jmp
add
jle
adc
push
jmp
(bad)
and
dec
dec
add
retf
pop
sbb
dec
jg
inc
jno
mov
stos
das
out
jae
test
fidiv
xor
cs
nop
ins
cmp
and
inc
lea
shl
je
xor
pop
adc
icebp
lea
ret
loope
aas
outs
test
sub
inc
cmps
mov
call
adc
cmp
shrd
and
je
add
or
sub
mov
ds
jg
adc
loope
(bad)
mov
xchg
lods
push
push
popf
fnstsw
es
inc
test
es
mov
out
mov
add
mov
pop
ins
xchg
cdq
inc
in
mov
(bad)
jp
adc
hlt
mov
lods
out
std
repnz
push
fcmove
les
mov
pop
ja
stc
pop
pop
sbb
pop
xchg
sub
fistp
stc
loope
out
call
repnz
outs
mov
loop
cwde
in
popf
push
fs
sti
stos
or
test
or
test
(bad)
scas
ins
dec
adc
xchg
sub
out
clc
cmp
mov
cmc
out
ins
mov
push
out
xchg
adc
xchg
int
cld
js
stc
je
lahf
addr16
cmp
call
mov
clc
shld
mov
mov
(bad)
aas
nop
out
test
mov
icebp
cli
test
inc
pusha
pop
xor
push
or
(bad)
jmp
(bad)
fdiv
pop
gs
mov
inc
enter
and
test
sub
xchg
(bad)
dec
add
xor
adc
jae
call
outs
das
in
mov
dec
fs
dec
xor
cwde
cmp
mov
pop
inc
jle
inc
cmp
gs
mov
jmp
pop
or
push
arpl
cmps
push
mov
scas
in
inc
sbb
stc
xor
push
js
cmp
sbb
add
dec
ds
imul
pushf
jp
in
inc
and
fstp
push
ins
ja
push
push
jl
jmp
or
mov
ret
outs
daa
jns
push
mov
xor
loopne
pop
into
mov
pop
and
sbb
stos
das
jge
bound
mov
mov
(bad)
cmps
sbb
mov
cmp
mov
sbb
aas
mov
mov
in
mov
xchg
fisttp
sbb
imul
leave
test
pop
adc
in
sub
ficomp
sbb
pop
inc
push
js
lods
add
push
mov
stos
int
jl
les
stc
outs
mov
cmp
pushf
add
cmp
inc
not
jecxz
mov
sar
adc
shr
jmp
cmp
scas
push
push
and
ret
cmp
pusha
arpl
mov
mov
sbb
fs
mov
mov
je
fnstcw
das
xor
or
call
jle
arpl
outs
bound
ds
pop
push
jb
adc
xlat
jmp
and
into
push
mov
imul
add
and
adc
mov
cs
xor
fnstcw
(bad)
cmp
repnz
out
fld
(bad)
std
jmp
lods
jp
cmp
mov
xor
or
ds
fsub
hlt
pop
shr
xchg
cmp
adc
inc
xchg
or
push
(bad)
mov
dec
and
adc
push
mov
mov
or
xor
xor
or
sub
movs
popa
adc
dec
cmc
cli
aaa
mov
das
and
push
imul
std
cmps
out
jp
push
sub
and
mov
dec
test
sub
imul
rol
ja
push
test
cdq
xchg
dec
jmp
mov
push
dec
outs
fld
adc
mov
or
add
xor
(bad)
in
xchg
inc
fldcw
in
icebp
repnz
test
dec
iret
xor
(bad)
out
add
(bad)
(bad)
dec
fsubr
and
mov
and
aas
les
mov
mov
pop
xchg
jbe
lods
pop
je
sbb
scas
out
jp
movs
inc
aad
mov
jno
dec
sti
aad
pop
sub
add
xchg
and
fistp
cs
xor
xchg
in
jp
ficomp
es
mov
les
push
or
ins
inc
or
or
inc
jecxz
sbb
mov
push
lods
and
stos
xor
dec
mov
add
xor
int
in
xchg
not
mov
jp
test
push
aas
repnz
sbb
gs
adc
ret
das
aad
inc
pop
sbb
cmp
add
push
cmp
call
xor
or
add
dec
sub
push
js
enter
call
fistp
cmps
cmps
inc
cli
out
dec
xchg
mov
aad
mov
cmp
adc
rcl
cmp
jecxz
aam
mov
add
fld
aaa
in
arpl
loope
fist
inc
lods
fisubr
shl
jb
mov
int
cmp
inc
sub
lods
push
push
xchg
(bad)
ja
cmp
mov
jno
outs
lea
push
sar
or
dec
pusha
lods
add
in
scas
cmp
(bad)
test
sub
out
add
mov
inc
pop
dec
test
cs
mov
pop
sub
dec
jmp
js
mov
push
sti
test
into
ret
push
out
inc
fucom
adc
(bad)
xor
mov
dec
xchg
test
les
imul
jecxz
not
rep
mov
or
in
fist
dec
pop
pop
jmp
or
cmp
(bad)
fnstenv
jge
hlt
jmp
xchg
imul
sbb
xchg
push
inc
push
or
xchg
fstp
ror
mov
(bad)
dec
xor
(bad)
mov
hlt
sbb
inc
mov
sbb
cld
or
jae
int3
mov
inc
mov
push
lods
loope
jmp
cmp
leave
fnsave
cmc
mov
aas
pop
pusha
fadd
cli
adc
mov
into
and
adc
add
pop
aam
cmp
ins
out
retf
cdq
fstp
mov
(bad)
pop
in
push
fidivr
add
add
fbstp
cmp
ins
shl
ficomp
lock
jmp
(bad)
fs
xor
and
xchg
mov
xchg
xor
xchg
mov
pop
stc
xor
ret
enter
repnz
pop
dec
mov
fst
xchg
xor
pusha
idiv
loopne
mov
pop
jl
scas
scas
adc
jo
mov
dec
fisub
lods
inc
inc
out
xor
xor
shl
(bad)
nop
mov
out
add
xor
arpl
lods
dec
test
and
push
movs
pop
adc
stos
pop
call
dec
jmp
int3
test
fs
ja
in
pusha
xchg
cmp
jl
and
clc
mov
icebp
pop
add
mov
jae
int3
mov
scas
ret
inc
and
(bad)
push
and
inc
pop
cmp
sub
das
stos
es
jmp
std
or
lock
cdq
in
into
cmp
setns
loopne
in
or
les
push
jns
ret
mov
mov
sbb
popf
mov
sbb
fist
call
daa
push
cdq
mov
call
push
test
pusha
push
into
imul
jp
dec
xchg
sub
xor
sbb
lahf
jg
out
dec
xor
cmps
pop
std
loope
in
fidivr
fisub
div
enter
(bad)
repnz
sub
mov
inc
adc
sub
adc
xchg
mov
loopne
pop
mov
xor
enter
(bad)
lahf
ss
data16
fmul
mov
and
(bad)
dec
mov
inc
push
pop
icebp
cwde
pop
lahf
aas
test
mov
hlt
or
pop
jne
pop
xchg
sub
jbe
lods
push
or
adc
xchg
adc
stos
cmc
pop
not
xchg
mov
es
mov
idiv
into
lock
fdivr
sub
cdq
inc
sahf
out
and
movs
(bad)
fcom
jp
push
movs
lock
inc
nop
mov
cmp
test
imul
cld
popa
mov
(bad)
hlt
clc
ins
mov
jns
iret
loope
fisub
out
or
popa
sbb
add
mov
jnp
xchg
push
mov
mov
ror
mov
xchg
ins
(bad)
je
dec
mov
jl
inc
mov
xchg
inc
xchg
sbb
mov
ret
push
cmp
mov
mov
pop
aaa
movs
jp
pop
(bad)
popa
xchg
mov
and
jo
lods
cli
fisubr
cmp
xor
in
pushf
xchg
fwait
sbb
push
adc
xchg
jg
push
cmp
xchg
add
cmp
movs
cmp
stos
scas
and
mul
jno
dec
int
cmp
es
push
xor
jmp
stc
pop
fist
stos
or
dec
call
jae
and
and
xor
sub
int
retf
jmp
mov
call
cmp
loopne
mov
and
call
xchg
sbb
inc
(bad)
fist
pop
dec
jb
mov
inc
test
imul
xchg
fidiv
mov
add
enter
xor
jl
fisubr
in
adc
int
mov
jno
or
and
fild
test
mov
fcom
out
int3
jmp
out
retf
sbb
popf
outs
xchg
shl
ins
mov
add
imul
and
or
vcvtsd2ss
inc
sahf
out
out
adc
mov
into
mov
mov
pop
add
cmp
sub
movs
mov
xchg
lods
cs
test
in
mov
push
push
movs
test
mov
and
call
push
xchg
mov
dec
sub
jb
xchg
adc
inc
gs
adc
sbb
adc
rcr
jl
xor
xchg
xchg
mov
mov
or
cs
retf
call
adc
mov
adc
jge
clc
and
and
leave
or
dec
aad
mov
mov
sub
xchg
jmp
add
loopne
das
(bad)
cmp
retf
stos
ins
shr
jp
xlat
out
sbb
clc
jg
cmp
retf
fcmovnb
lea
les
mov
inc
scas
mul
movs
add
call
mov
xor
ret
fiadd
push
sbb
pop
adc
xor
inc
lock
ins
fucomi
and
ret
xchg
fs
xlat
gs
lahf
pop
pop
mov
inc
leave
out
push
cmps
xchg
mov
(bad)
(bad)
sbb
je
sbb
mov
mov
jne
sub
sahf
adc
sbb
and
add
std
sub
cs
push
jmp
cmps
mov
mov
jns
hlt
adc
ds
xchg
and
xchg
adc
imul
lahf
cmc
sub
in
stc
sbb
bound
pop
mov
add
push
jne
jbe
imul
scas
jmp
outs
outs
inc
dec
retf
je
and
push
xchg
add
mov
xor
push
int
sbb
adc
aad
stos
enter
push
mov
cdq
xchg
out
sar
popf
sub
or
das
cli
xor
lahf
xchg
iret
push
xchg
int
pop
mov
pusha
mov
das
arpl
mov
sub
mov
ja
adc
cmp
fdivr
jge
pop
adc
scas
pushf
add
int3
add
mov
push
mov
cmp
call
or
jno
vcvttpd2dq
aaa
xchg
sbb
adc
adc
cmp
mov
adc
int3
jmp
push
fmul
cmps
imul
sub
mov
and
aad
int3
bound
fsub
popf
sbb
adc
jle
in
loopne
aas
popa
sbb
mov
fcomp
lahf
pop
psrld
push
into
mov
les
dec
cs
fcmove
or
in
cdq
(bad)
out
(bad)
jb
inc
mov
xchg
mov
iret
push
aam
cmp
mov
cmp
test
and
ret
cmp
fist
xor
push
ins
in
loop
add
and
aaa
test
test
push
loopne
pusha
test
mov
mov
pop
inc
add
inc
sar
xor
outs
aas
mov
cdq
cmp
jmp
add
cmp
adc
es
aam
js
in
adc
mov
std
push
nop
mov
sub
shl
jbe
jle
cmp
into
sbb
adc
rcl
dec
push
adc
push
lea
add
rcl
push
movs
aad
test
iret
cmc
mov
pop
ss
pop
clc
xchg
adc
sub
dec
cld
sar
mov
adc
mov
sub
popa
cdq
imul
and
data16
pop
in
xor
daa
shl
aad
mov
rcl
(bad)
xchg
into
push
mov
jmp
test
inc
sahf
adc
sub
add
cmps
ins
jmp
das
push
fwait
scas
xchg
retf
into
mov
test
pop
xlat
je
mov
mov
jmp
xor
and
inc
aaa
adc
out
ja
sbb
jnp
outs
pusha
popa
or
add
arpl
inc
loop
out
mov
xchg
pop
mov
call
popf
jnp
loopne
push
xchg
cwde
dec
outs
and
mov
mov
pusha
xchg
mov
loopne
push
fstp
cmps
mov
mov
mov
or
xchg
push
out
sub
dec
mov
mov
push
enter
mov
pmuludq
mov
jb
ins
ins
movs
aaa
inc
into
cmp
xor
cdq
add
xor
mov
dec
cli
sub
out
add
add
mov
in
or
jbe
int
inc
push
jle
dec
jno
mov
leave
cs
fild
repz
(bad)
mov
leave
sub
(bad)
xor
pop
scas
ds
inc
mov
add
fild
repnz
rcr
stos
lahf
cs
popa
(bad)
loopne
lahf
sub
or
pop
test
popf
loop
push
jo
xchg
sbb
mov
sbb
push
pop
or
push
mov
in
ds
cvtps2pd
cs
xchg
sub
cmp
cmp
and
dec
in
dec
stos
(bad)
push
xor
pop
add
jnp
pop
adc
xchg
xchg
mov
xor
pop
(bad)
pop
popa
icebp
enter
loop
or
outs
iret
fdivr
mov
ins
push
popa
push
push
hlt
mov
sbb
dec
and
cmp
push
bound
aad
imul
pop
int3
xor
sbb
cmc
imul
push
xchg
push
cmp
or
mov
sub
ds
pop
loop
pop
dec
xchg
cld
int3
cmp
sahf
or
mov
stc
cmp
mov
(bad)
and
add
inc
cmps
sbb
jp
out
add
mov
sub
icebp
or
mov
or
cmc
inc
mov
ins
retf
inc
lock
mov
pop
cmc
mov
pop
lods
xlat
fldenv
sub
(bad)
push
add
cdq
aas
enter
xchg
add
jno
movs
movs
inc
and
inc
cmp
adc
(bad)
fdivr
pop
icebp
ror
sahf
scas
test
pop
pop
cmps
mov
sub
outs
ss
push
cs
and
jp
jo
adc
das
pop
adc
pop
dec
fdiv
outs
cmp
in
pop
icebp
icebp
cmp
call
(bad)
std
cmp
sub
mov
addr16
jmp
sbb
or
mov
ins
push
jmp
cmp
test
leave
lahf
jns
jecxz
cmp
dec
iret
xor
pop
sub
sbb
cmp
stos
fld
sbb
jno
test
retf
dec
fs
stos
push
leave
hlt
shl
mov
daa
jo
out
pop
lods
mov
(bad)
cdq
add
pop
mov
cmps
cs
add
jmp
int3
lds
jbe
daa
add
in
adc
mov
sub
sbb
test
jb
mov
movs
sbb
xchg
addr16
pusha
inc
ins
clc
in
mov
movs
and
stos
ret
lds
and
int3
or
stos
sbb
addr16
fsub
js
push
loope
imul
sar
ins
or
adc
pop
rcr
loop
push
scas
xchg
ret
inc
xor
cwde
cwde
mov
sahf
mov
sub
mov
cs
popa
in
mov
lds
fs
dec
hlt
fstp
and
out
add
arpl
mov
fdiv
mov
imul
and
fdivr
push
mov
in
hlt
call
cmp
(bad)
mov
cmps
mov
cmp
(bad)
inc
xchg
into
ror
fdivr
in
and
mov
xor
pop
push
std
imul
inc
mov
jl
sub
popa
mov
addr16
pop
pop
mov
push
inc
cmp
cmc
jmp
in
dec
inc
jb
inc
fcom
jo
xor
jns
jmp
jne
rol
gs
imul
xor
dec
mov
push
jg
or
sub
pop
mov
popa
stc
mov
jl
mov
sbb
out
out
ins
mov
test
push
or
enter
mov
lods
shl
add
arpl
inc
mov
jbe
mov
js
inc
inc
into
jno
lods
fiadd
loop
mov
xor
dec
dec
stc
push
test
mov
sbb
adc
scas
pop
ss
cmps
mov
push
test
jno
mov
inc
mov
fcomp
and
and
pop
fnsave
pop
retf
cmc
fdiv
aam
dec
adc
and
xchg
push
xchg
hlt
dec
mov
xchg
cmp
shl
hlt
xor
imul
sbb
das
push
mov
scas
add
push
je
stos
xchg
fnsave
movs
mov
mov
add
shl
cmp
mov
test
pop
daa
gs
data16
out
sub
inc
bound
push
xchg
xchg
dec
rol
out
cmc
sub
xor
fwait
jp
mov
je
jno
popf
int3
int
sbb
jl
lods
inc
xchg
xor
add
pop
or
aam
and
inc
ds
xchg
mov
xchg
jno
retf
add
cmp
ss
cld
nop
movs
out
mov
retf
push
hlt
popa
jle
adc
popa
out
lahf
jl
push
push
push
push
adc
sbb
nop
sub
aad
ror
inc
jp
jge
pop
dec
outs
pop
pop
sub
and
sub
in
rcr
xchg
jnp
addr16
loopne
mov
dec
push
mov
(bad)
fld
jnp
xor
pop
mov
repz
(bad)
in
pop
ficom
aam
(bad)
mov
loope
push
pop
ret
xor
push
xor
call
xor
stos
jl
shl
mov
inc
not
dec
mov
lds
sub
mov
jecxz
adc
test
cmp
popa
sar
jne
mov
sbb
(bad)
lock
mov
out
and
mov
outs
neg
push
pop
cmp
sti
sahf
hlt
xchg
js
and
icebp
inc
(bad)
mov
mov
(bad)
(bad)
daa
xchg
jg
test
jbe
jbe
jmp
sub
out
push
xchg
xor
hlt
icebp
dec
pop
cmp
gs
xor
xchg
or
movs
push
xor
daa
adc
push
ficomp
imul
lods
daa
es
cli
jecxz
pusha
(bad)
ret
cmc
xor
pusha
js
pop
jge
and
mov
push
xor
sub
mov
xchg
inc
scas
dec
push
or
out
and
psubsw
lods
lea
je
test
push
sbb
xchg
jl
jno
ds
jmp
xchg
inc
mov
or
sub
or
xor
sub
inc
das
mov
test
jmp
mov
fidiv
fsubr
jl
xchg
test
adc
or
pushf
movs
cmp
int3
mov
inc
cmp
xchg
push
mov
iret
ret
movs
sub
adc
(bad)
mov
pop
xchg
ret
lea
out
outs
outs
arpl
pop
pusha
inc
icebp
mov
outs
cmp
xor
adc
xchg
jle
and
cmp
adc
sbb
scas
gs
jmp
jbe
sahf
xchg
(bad)
xor
xor
mov
fdiv
aad
jno
fsubr
loop
cs
cdq
xor
add
sub
or
adc
push
jg
add
mov
and
mov
push
data16
pop
push
rcr
fadd
xchg
xchg
push
cmp
cmp
xchg
jnp
push
mov
(bad)
mov
push
fs
cli
pop
shl
add
cmp
add
mov
movs
das
bound
out
ja
xor
dec
sbb
lahf
ins
inc
dec
mov
xor
out
dec
and
push
cmp
popa
mov
loope
jnp
out
mov
mov
in
jnp
fnsave
outs
lods
rol
js
stos
adc
mov
retf
xchg
gs
jo
mov
cmp
out
pop
cmps
cmps
neg
inc
adc
and
fnstcw
dec
scas
scas
lods
cmp
aas
je
push
leave
add
mov
cwde
sar
test
pop
or
(bad)
out
mov
fist
cli
in
fidivr
push
jecxz
add
(bad)
stos
fild
jbe
jle
movs
stos
sbb
jnp
pop
push
inc
xchg
ficom
cmc
push
loopne
pop
inc
aaa
sub
pop
xor
repz
xchg
sar
sti
add
push
mov
adc
js
cmp
movs
daa
mov
push
adc
out
adc
sahf
adc
push
(bad)
mov
stos
push
and
in
ficom
sub
lods
aas
fcom
scas
clc
cmp
pop
sbb
mov
adc
sbb
inc
arpl
adc
xor
mov
push
lods
enter
cmp
mov
fsqrt
or
xor
(bad)
mov
imul
jnp
sar
cli
push
push
test
fistp
idiv
jmp
mov
movs
(bad)
mov
lds
test
dec
or
dec
fdiv
ja
mov
mov
cmp
push
jmp
jb
sahf
shl
cs
sbb
xchg
in
push
pop
inc
cmps
movs
int
retf
gs
inc
xchg
xlat
mov
mov
(bad)
movs
int
adc
fdiv
pusha
ret
out
pop
(bad)
cmp
outs
mov
cdq
dec
out
fistp
push
fwait
cmps
cmp
shl
retf
push
adc
xchg
dec
data16
cmc
sbb
call
mov
push
pop
test
outs
dec
xchg
and
jg
(bad)
pop
adc
inc
scas
pop
cdq
push
fsubr
imul
pop
inc
sbb
fwait
dec
dec
and
inc
loope
mov
pop
cld
shl
xor
pusha
repz
cmp
adc
push
lods
and
add
push
push
jp
xchg
loopne
sbb
add
pop
push
and
mov
lahf
cdq
cmp
pop
je
jge
clc
shl
gs
push
and
movs
inc
pop
mov
cmps
pop
in
cmps
cmp
cwde
stos
daa
or
gs
dec
call
lea
or
mov
sub
inc
imul
mov
ds
addr16
add
jns
mov
adc
sbb
ds
jecxz
xchg
cmp
neg
aad
(bad)
in
bound
arpl
shl
push
push
cmp
cdq
inc
inc
jne
jle
test
or
fs
or
mov
popf
sub
stos
out
add
popa
xor
adc
rcr
daa
jns
retf
ss
push
inc
sub
jne
xor
enter
adc
dec
cmps
pop
cmp
and
movs
leave
and
mov
outs
pop
inc
in
xor
outs
dec
adc
scas
sub
mov
fisub
jcxz
jle
iret
dec
cmps
sub
cs
inc
aaa
inc
push
fs
push
lahf
lds
mov
cmps
cmp
imul
jnp
add
dec
clc
adc
add
dec
pusha
(bad)
mov
jmp
jecxz
in
add
movs
add
adc
and
test
cdq
dec
lahf
call
jle
fsub
push
xor
(bad)
pop
mov
loopne
imul
jno
xchg
sub
pusha
mov
mov
fdiv
fcomp
(bad)
mov
bound
cmp
test
jo
pusha
cdq
adc
sub
cmp
pop
jge
inc
dec
not
jmp
cmp
add
mov
fs
push
mov
add
xor
mov
inc
add
cmp
and
jmp
or
enter
add
cmp
pushaw
cmp
ss
(bad)
in
inc
mov
lea
adc
ss
sbb
mov
cs
inc
scas
sar
xchg
(bad)
fwait
sbb
in
xchg
sub
aad
ret
xor
outs
(bad)
adc
xchg
xchg
add
push
push
inc
xor
lds
sub
pushf
in
data16
jbe
xor
inc
dec
mov
sbb
lds
xor
dec
mov
mov
retf
sahf
rol
mov
pop
ja
in
cdq
adc
adc
out
mov
mov
mov
popf
sub
iret
fcomp
jae
shl
mov
cmps
xchg
add
mov
popa
fcmovne
sahf
fwait
jne
dec
imul
loopne
aaa
ins
cld
sub
lea
jno
data16
adc
daa
ins
aaa
into
jmp
mov
test
(bad)
repz
in
and
dec
mov
sbb
ret
mov
or
dec
mov
mov
or
pop
dec
xchg
arpl
lea
into
ins
loop
xlat
pop
or
popa
add
lock
dec
add
loop
dec
dec
sub
es
and
pop
arpl
imul
push
daa
(bad)
out
add
shr
add
xchg
xor
in
pusha
sbb
data16
scas
mov
adc
jp
or
jle
js
retf
add
aad
(bad)
sub
int
xchg
cs
test
jnp
mov
jbe
hlt
dec
xlat
sbb
pusha
dec
push
mov
inc
mov
jl
int3
mov
out
jp
jmp
movs
ret
(bad)
adc
xchg
mov
inc
in
inc
pop
outs
retf
mov
dec
cld
cmps
push
mov
sbb
mov
lea
jge
mov
inc
inc
loop
das
adc
sbb
cmp
jge
test
je
divps
xchg
test
mov
sbb
test
pop
lahf
sub
mov
pop
dec
repz
outs
shr
and
cmps
and
mov
mov
movs
int3
je
mov
xchg
sar
dec
add
test
mov
cdq
movs
jecxz
pop
xor
jno
or
inc
out
push
fldenv
push
sbb
xchg
test
or
adc
mov
je
shl
jl
addr16
adc
add
sbb
push
addr16
xchg
pop
pusha
je
pop
enter
dec
(bad)
push
push
cmps
xchg
mov
inc
fwait
push
aad
push
inc
cmp
sub
cmp
xchg
dec
and
and
(bad)
pusha
pop
cwde
mov
inc
jle
mov
std
jns
data16
mov
push
dec
es
and
(bad)
cmp
fnstcw
jae
imul
(bad)
scas
in
or
outs
cmp
jne
lods
hlt
fidiv
mov
inc
leave
push
lock
(bad)
imul
pop
inc
xchg
push
and
adc
cwde
cmp
jmp
mov
pop
mov
xor
daa
jnp
repz
push
and
lods
pop
popf
sub
mov
inc
push
sub
jmp
leave
out
movs
add
adc
mov
outs
cmp
adc
pop
cmc
push
xor
mov
push
add
or
pop
pop
pop
leave
fist
inc
dec
nop
stos
pop
popf
cwde
mov
mov
lea
xor
xor
pushf
adc
dec
sub
push
add
les
pop
jmp
jmp
jl
xchg
mov
sbb
int3
mov
retf
sub
xchg
sub
pop
jb
mov
pop
and
and
adc
mov
(bad)
sub
pop
inc
add
xor
scas
(bad)
std
jmp
addps
or
pop
push
fsubr
adc
or
stos
cmp
mov
(bad)
(bad)
cmp
gs
jecxz
cwde
add
(bad)
mov
ficomp
lea
cmp
(bad)
pop
in
sub
push
arpl
cmp
sub
mov
adc
shr
dec
xor
mov
jmp
push
movs
xor
xor
mov
adc
cmp
sbb
push
sahf
pushf
add
and
jnp
leave
xchg
or
daa
in
das
inc
test
ins
xlat
mov
sbb
inc
dec
out
movs
adc
int
(bad)
mov
push
inc
and
or
in
lds
inc
mov
jmp
add
add
xchg
adc
mov
(bad)
ins
enter
cmps
xchg
mov
out
and
mov
sar
mov
jb
jle
mov
add
fwait
mov
push
sub
mov
add
data16
sub
pop
fiadd
xor
push
dec
or
dec
fdivrp
lock
cmp
ret
adc
xor
jp
jecxz
test
mov
stc
inc
push
into
test
cs
aad
ins
or
loop
js
pop
xchg
mov
xor
inc
and
fwait
les
dec
pop
cli
lock
fistp
push
cli
out
aas
pop
clc
out
sahf
xor
mov
gs
cmp
xchg
fiadd
test
mov
outs
pop
push
cmp
scas
xor
in
mov
xchg
lods
imul
adc
test
mov
and
rcl
pop
cmp
push
(bad)
cmc
jg
imul
jl
jnp
jl
push
mov
jbe
sub
add
cmc
cmp
or
jge
shl
mov
pop
in
icebp
mov
frstor
pop
imul
mov
push
fcomp
and
dec
adc
js
pop
sbb
test
pop
retf
loop
or
fwait
add
hlt
sbb
dec
sub
mov
nop
dec
pop
mov
das
cwde
fld
cmp
clc
dec
or
test
mov
adc
or
ret
cmc
mov
xchg
in
fwait
movs
adc
ins
mov
shl
sbb
addr16
daa
gs
push
int
(bad)
mov
out
mov
or
loop
or
pusha
adc
mov
ror
pop
sbb
loop
mov
int3
jp
mov
cdq
dec
jmp
imul
test
mov
mov
jmp
inc
pusha
ret
jg
inc
mov
retf
cs
and
jp
loope
xchg
retf
sub
and
add
add
adc
inc
stc
in
and
jbe
sbb
es
das
jmp
dec
test
push
int
sbb
pop
cmps
inc
xor
inc
(bad)
into
mov
dec
adc
adc
dec
sbb
test
mov
sub
imul
dec
cmp
pop
mul
cmp
fbstp
mov
xor
and
out
or
xlat
fisttp
cmp
repz
jns
pop
dec
sub
sar
in
jae
adc
and
ret
adc
ror
dec
inc
pop
loope
in
mov
hlt
das
nop
jp
cmp
adc
push
inc
in
add
mov
jge
and
fld
outs
add
out
xor
dec
test
jns
fst
jmp
cmp
jne
mov
int
in
fsub
inc
dec
sub
sub
or
(bad)
pusha
fwait
cwde
pusha
sbb
sub
xchg
cdq
rol
mul
cld
icebp
push
stc
cld
bound
sub
stos
div
mul
mov
sti
ds
mov
retf
push
lds
in
jne
std
test
jg
int
std
popa
adc
pop
pop
sbb
push
cmps
jo
fisttp
jo
in
xor
pop
push
cmp
inc
cld
movs
add
mov
xor
daa
call
mov
cmp
test
pop
pop
outs
cmp
outs
mov
lods
js
daa
shl
pop
xor
aaa
xchg
mov
movs
or
fisub
adc
leave
jne
outs
jle
sub
fst
ins
mov
ds
xor
movs
and
sti
push
enter
cmp
sub
jecxz
add
(bad)
hlt
call
(bad)
icebp
mov
test
lods
add
push
in
ss
ja
lahf
cmps
retf
xchg
idiv
sbb
mov
xor
and
adc
xchg
xor
pushf
mov
aad
pushf
cmp
ret
stos
pop
shr
jnp
js
std
adc
add
pop
out
jmp
cmc
outs
and
iret
add
xchg
and
popa
mov
or
xlat
dec
mov
sbb
push
add
mov
ins
xor
xchg
loop
inc
pop
sub
gs
add
add
clc
mov
pop
loope
pushf
cdq
sbb
xchg
cwde
(bad)
jbe
or
out
dec
fisub
cmc
movs
stc
cmp
test
push
mov
sbb
push
pop
ins
icebp
lods
jb
ret
add
mov
outs
sbb
sti
popf
rcr
push
mov
out
pusha
test
out
pop
xor
addr16
dec
(bad)
arpl
dec
cmps
jge
inc
sbb
fbstp
pop
xchg
mov
pop
xchg
test
sar
push
sar
inc
jns
xchg
aas
(bad)
int3
aam
push
mov
push
ss
and
or
in
push
push
inc
es
js
gs
mov
div
pop
(bad)
icebp
or
pusha
aam
push
(bad)
clc
sub
inc
fstp
mov
cld
or
push
mov
mov
jns
fs
mov
xlat
clc
push
xor
cmp
scas
call
scas
ss
pushw
adc
mov
xchg
add
fistp
jno
clc
add
sub
and
dec
sub
pop
in
in
fmul
add
mov
xchg
movs
push
loop
and
xchg
jo
pop
jb
lods
push
dec
mul
mov
ret
adc
imul
pop
mov
popa
push
mov
daa
adc
lahf
call
adc
cmp
cmc
lods
sbb
out
sti
sub
sub
lea
xlat
sub
test
sti
mov
sti
adc
inc
pop
ins
sbb
repnz
or
daa
sar
sbb
outs
hlt
push
psrad
push
popf
cmp
sub
jg
add
hlt
in
mov
mov
js
pop
inc
push
dec
xchg
nop
in
pop
add
in
dec
dec
aam
pop
jno
mov
mov
daa
call
adc
test
inc
cmps
int3
pop
jns
je
bound
adc
pop
xchg
sub
mov
in
call
push
idiv
fidiv
rep
call
maxps
cmps
inc
div
and
xor
or
dec
aas
retf
es
xor
test
fcmovnbe
imul
test
and
(bad)
sub
xlat
inc
xor
retf
ret
test
mov
scas
gs
sub
mov
rol
stos
jae
int
shr
add
cmp
mov
jle
repnz
in
stos
rol
call
mov
jmp
inc
aad
loop
push
daa
cdq
loop
test
movs
sbb
xchg
inc
rcr
xor
push
jp
cli
loopne
out
cs
ins
mov
mov
push
xchg
xchg
ja
push
pop
jb
mov
or
(bad)
pusha
ins
dec
femms
loope
enter
popa
cmps
dec
mov
inc
push
mov
shr
add
data16
dec
sar
je
sbb
cs
mov
ja
push
mov
or
pop
test
arpl
pop
mov
(bad)
lods
adc
ret
(bad)
fxam
hlt
inc
cld
mov
movs
fst
add
lds
xchg
cdq
mov
dec
test
pop
mov
and
mov
retf
xchg
aaa
test
sbb
jae
xchg
dec
jne
cmps
in
scas
push
sub
adc
mov
pop
outs
mov
xor
pop
add
data16
mov
jno
retf
gs
push
push
add
jg
mov
loope
mov
cwde
popf
jbe
sbb
ror
dec
mov
or
cs
cmps
mov
and
cmp
push
add
push
and
test
xor
and
lods
fsubr
loopne
push
dec
xchg
pop
arpl
inc
mov
mov
cs
and
in
mov
cmp
mov
movs
push
imul
(bad)
sbb
sahf
je
movs
sub
pop
popa
js
pop
cmps
fs
out
(bad)
mov
test
jnp
ja
dec
test
dec
xchg
inc
pop
xchg
pop
pop
xor
cmp
cld
lds
aas
mov
ds
sbb
lea
or
mov
rol
mov
(bad)
adc
aam
ret
inc
sbb
adc
or
dec
aas
push
dec
pop
dec
sbb
mov
xchg
pop
pop
mov
sub
js
mov
cdq
mov
push
inc
push
popf
cmc
aas
retf
inc
mov
sub
mov
or
mov
(bad)
movs
(bad)
cmp
fs
inc
enter
and
push
scas
loopne
aas
(bad)
pop
(bad)
push
fwait
scas
sub
ins
mov
jo
pop
mov
(bad)
pop
cmps
inc
shl
(bad)
ffreep
jge
pusha
add
int3
rcr
mov
dec
pop
xchg
xor
mul
and
hlt
push
pop
shl
xchg
cmps
jle
rcr
cwde
and
adc
sar
ret
pop
xchg
sub
push
sbb
pop
pop
sbb
or
daa
(bad)
jge
mov
ins
sar
xor
sub
or
sbb
adc
mov
out
leave
(bad)
imul
ins
xor
aam
dec
movs
add
sar
push
xor
cmp
mov
jb
push
str
fs
mov
inc
fsub
cwde
or
les
xchg
and
or
sub
add
rcl
movs
retf
das
scas
jae
stos
(bad)
push
sub
push
xchg
std
pushf
cmp
xor
and
mov
inc
in
not
adc
inc
phaddsw
mov
call
jecxz
pop
push
mov
and
jmp
mov
jg
adc
lock
daa
sub
ror
mov
push
sub
pop
sub
in
daa
rcl
mov
loope
jb
add
shl
es
sbb
mov
pop
dec
push
mov
xor
cld
mov
loopne
hlt
out
lock
inc
lods
(bad)
ror
pop
stos
in
rep
cmp
out
add
(bad)
xchg
out
jl
push
popf
iret
adc
pop
call
sub
add
daa
dec
(bad)
sbb
pop
sbb
cmps
dec
xchg
addr16
inc
sub
mov
sbb
xor
stos
xchg
shr
mov
inc
cmp
test
jbe
shl
(bad)
or
rcl
xchg
arpl
pop
add
jl
ficomp
idiv
adc
dec
jg
lods
(bad)
popf
shl
jbe
pop
pop
jbe
cli
loopne
mov
sub
jno
stc
mov
enter
and
repz
pop
ins
enter
in
cli
test
imul
arpl
push
bound
adc
mov
xlat
inc
jecxz
adc
call
test
cld
cld
dec
pop
pop
mov
fisubr
in
pop
pop
cld
sub
xchg
dec
aas
dec
sbb
and
mov
xchg
dec
fild
push
(bad)
cmp
mov
nop
fs
xchg
push
sti
sbb
push
dec
sbb
pusha
mov
cli
mov
xchg
jl
ret
adc
mov
pop
out
push
mov
(bad)
arpl
daa
mov
call
fnsave
xchg
and
cmp
rdpmc
out
inc
mov
imul
inc
inc
lock
add
dec
add
mov
jmp
add
fsubr
push
enter
pusha
ds
cdq
jnp
inc
aaa
add
pusha
xor
adc
je
pop
jp
sub
or
xor
dec
adc
call
pushf
(bad)
imul
fimul
pop
pop
mov
js
push
inc
or
xor
fs
retf
sbb
push
jge
xor
xchg
test
cli
dec
retf
adc
or
je
mov
call
loope
jns
addr16
cmps
stos
sti
ins
stc
int
jle
adc
pop
dec
push
mov
mov
add
dec
xor
dec
dec
mov
int3
sbb
clc
inc
pop
sbb
scas
xchg
movs
mov
mov
mov
jmp
sub
inc
loope
and
jmp
enter
mov
test
lea
xchg
xchg
add
xchg
mov
cmps
mov
fcom
shl
mov
dec
ss
jo
sar
js
rcl
jl
inc
idiv
fdivp
xchg
sahf
add
fwait
dec
iret
int
dec
ss
cmp
jmp
mov
mov
es
mov
mov
inc
or
add
outs
adc
fidivr
push
or
pop
inc
adc
adc
ret
(bad)
sar
sub
dec
(bad)
pop
add
das
sar
jno
push
jbe
adc
rol
fcmovne
sub
out
ins
outs
mov
scas
js
ret
jge
out
cmp
int
cmps
out
test
sub
pop
aaa
imul
cwde
imul
(bad)
jle
pop
das
loop
fwait
fwait
aam
cmp
or
out
jl
add
mov
push
and
cmp
addr16
inc
xchg
les
push
and
mov
scas
stos
cmc
call
mov
div
adc
out
out
dec
(bad)
fadd
aas
das
jl
xor
std
and
and
mov
pusha
sbb
lock
or
push
push
iret
int
(bad)
jmp
test
jp
test
dec
out
pop
mov
xchg
ja
out
xchg
and
jnp
(bad)
sbb
xchg
aam
sub
mov
popf
or
push
jmp
or
mov
in
stos
mov
inc
push
pop
imul
(bad)
popa
add
xor
jp
cwde
(bad)
lahf
fstp
lods
add
fimul
nop
mov
push
lods
jmp
push
ss
pop
shr
scas
stc
inc
add
in
or
jb
out
mov
ror
jmp
or
mov
jne
xchg
jno
push
xchg
cmp
jmp
inc
jns
test
pop
ins
iret
adc
lods
shr
neg
loop
sbb
aas
leave
jno
xor
jmp
in
scas
xor
leave
and
mov
push
jge
add
pop
xchg
mov
(bad)
(bad)
jge
xchg
push
and
pop
outs
adc
pop
mov
xchg
repz
or
adc
xor
(bad)
jecxz
mov
mov
outs
xchg
jne
add
inc
add
aaa
fdivr
xchg
out
mov
pushf
push
test
ror
outs
mov
or
push
out
cmps
mov
jecxz
lea
cmc
daa
sbb
mov
stos
(bad)
rcr
jmp
inc
lock
cmc
xor
adc
push
es
fnstsw
fst
js
sub
xchg
aad
(bad)
cmp
dec
(bad)
mov
adc
pop
fnstcw
ss
setg
ins
daa
and
and
jns
and
call
pop
dec
nop
pop
adc
xchg
xchg
or
movs
xchg
and
mov
shr
mov
mov
int
shl
add
adc
push
mov
push
outs
cmp
inc
fwait
test
mov
cmp
push
cmp
lahf
in
inc
xchg
add
enter
xchg
icebp
outs
sub
hlt
shl
mov
push
or
fdivr
cmp
push
loope
dec
inc
sbb
pop
repz
(bad)
ffree
jg
mov
mov
test
and
outs
sub
push
xor
outs
xor
rcl
(bad)
cmps
pop
jo
or
adc
sbb
adc
pushf
lods
pop
dec
int
(bad)
add
push
sub
pop
stos
mov
rcl
mov
cmp
test
jne
push
and
sar
fmul
pop
jmp
mov
inc
outs
div
xchg
adc
icebp
push
jns
(bad)
out
outs
push
outs
push
push
xchg
dec
and
test
and
mov
pop
rcl
xchg
xchg
mov
enter
sbb
std
test
jmp
cmp
test
shl
adc
push
inc
cld
aad
bound
jp
pop
push
cs
or
fnstenv
clc
mov
jl
adc
retf
mov
and
int3
cmp
jb
push
push
out
sbb
xor
xlat
cmp
sub
dec
xlat
push
hlt
sub
loopne
sub
into
jns
test
push
aam
ds
sbb
leave
pop
call
jl
ja
icebp
push
and
inc
cli
ffreep
stc
push
cmp
dec
push
ins
or
adc
pop
ja
movs
lahf
aas
jle
dec
mov
sbb
mov
mov
or
dec
adc
(bad)
mov
mov
inc
clc
dec
retf
cwde
pop
out
mov
cmp
out
aad
lods
jns
test
in
dec
dec
out
or
scas
xchg
xchg
movs
repnz
sbb
ret
stos
xor
or
mov
jle
xor
and
dec
int
sbb
rol
sar
scas
push
test
cmps
in
dec
ins
xor
test
xor
leave
out
(bad)
aas
mov
pop
cmp
imul
sub
retf
inc
bound
inc
pop
inc
pop
pop
test
es
mov
mov
shl
mul
xchg
xchg
cwde
popf
xchg
push
pop
pop
pop
jl
mov
and
popa
shl
call
icebp
jle
pop
fcomp
jnp
cmp
pop
mov
clc
mov
or
out
mov
test
data16
stos
rcr
rcr
popf
xor
or
aaa
push
call
test
stos
mov
add
adc
pop
cmp
and
mov
cmp
into
jne
xlat
mov
aam
lods
arpl
or
push
and
pusha
in
mov
dec
jmp
addr16
arpl
ins
dec
cs
lds
fbstp
mov
stos
push
clc
sbb
cmps
sub
ins
pushf
(bad)
into
xchg
inc
addr16
push
jl
call
call
pop
test
sub
(bad)
push
dec
and
ret
sets
push
dec
sbb
call
js
add
jb
mov
push
mov
xchg
outs
jecxz
popf
xchg
pop
jmp
jnp
rep
sbb
jne
outs
pop
push
test
loopne
mov
lods
add
mov
adc
cmp
cdq
xchg
call
pop
test
stos
push
or
xchg
jp
xchg
dec
push
mov
stos
mov
pop
or
xor
or
(bad)
cmp
loope
pop
jb
outs
cmp
stos
xor
in
xor
sbb
lahf
pop
sub
imul
mov
imul
(bad)
cwde
stos
js
push
jnp
inc
or
psubsw
push
adc
lea
lods
and
fs
dec
(bad)
xchg
shl
in
sbb
jp
sbb
sub
outs
add
jmp
imul
retf
int
or
xor
sbb
jle
aaa
xor
dec
push
sub
cmp
test
mov
neg
(bad)
jge
inc
add
(bad)
mov
inc
mov
or
repnz
lahf
hlt
and
add
mov
dec
div
lods
lods
test
int3
jno
mov
mov
sar
in
inc
in
(bad)
jae
pop
je
ins
jb
adc
cld
scas
mov
pop
mov
and
xchg
pop
ficomp
mov
xor
dec
mov
loop
iret
jge
fnstsw
adc
sbb
adc
shufps
pop
mov
cmp
or
jo
adc
(bad)
in
and
jmp
sub
jge
xchg
aaa
aad
mov
push
pop
cmp
lea
jae
daa
cs
das
or
lods
sbb
dec
movs
movs
sub
jle
jg
sub
pop
inc
pop
add
fild
(bad)
adc
sti
sub
mov
xlat
outs
mov
aad
mov
cmp
mov
ffree
fnstsw
stos
inc
sti
scas
push
or
pop
add
fstp
fisubr
jle
js
jo
push
das
out
sti
pop
xchg
ret
mov
jp
into
clc
dec
mov
and
mov
leave
imul
daa
push
jecxz
mov
add
inc
jp
pop
push
fs
mov
sbb
retf
loopne
idiv
outs
icebp
jmp
cmc
push
test
lea
or
fld
add
mov
add
and
jae
pop
adc
pop
xor
cmc
add
lods
ret
xchg
cdq
add
jp
fidiv
jbe
sub
pop
sbb
dec
aad
call
popa
test
xlat
push
fcmovu
mov
stos
fisub
mov
cmp
inc
mov
push
js
bnd
or
mov
movs
jmp
sbb
jae
add
fisttp
(bad)
(bad)
mov
jle
cwde
cmp
lds
pop
out
lds
mov
mov
fucom
cmp
out
sbb
mov
shld
push
add
call
in
sar
(bad)
jnp
pop
inc
jg
sub
(bad)
fidivr
addr16
xor
popa
mov
fwait
jns
(bad)
mov
xor
cmp
(bad)
retf
xor
add
les
ins
sub
xor
sbb
mov
and
div
lds
adc
in
aam
cmps
repz
mov
mov
xchg
ja
dec
sbb
cmp
pop
inc
adc
xchg
hlt
popf
sbb
pop
cdq
test
aaa
inc
adc
xchg
mov
bound
inc
arpl
and
mov
mov
aas
ja
mov
imul
in
imul
mov
test
mov
cmp
lea
inc
hlt
cs
sahf
or
enter
jg
pop
mov
add
lahf
call
mov
xor
add
push
daa
popf
adc
stos
mov
clc
rcr
imul
dec
stc
dec
hlt
dec
pop
out
pop
sbb
cs
cmp
aam
test
lock
mov
sbb
cld
cs
jle
and
jbe
cmp
mov
(bad)
mov
jbe
sub
pushf
mov
mov
mov
stos
lods
xor
arpl
xchg
dec
test
fldl2e
jp
pop
stos
icebp
leave
mov
jne
into
pushf
cmp
inc
fwait
std
or
mov
mov
or
enter
rcr
cmp
mov
jecxz
cmp
in
call
xor
addr16
out
add
cmp
add
inc
add
cpuid
xchg
cmp
pop
dec
jo
mov
sar
sbb
sbb
push
jo
mov
into
cmp
dec
xchg
jp
inc
mov
jne
adc
test
jns
cld
push
das
pop
in
cmc
jl
jmp
mov
loope
ja
or
mov
cmp
stos
imul
jb
ss
xchg
jnp
xchg
pop
(bad)
loope
dec
out
xchg
rcr
xchg
cmp
lods
pop
stos
xor
arpl
out
imul
pop
into
arpl
inc
vmread
ss
or
mov
cmp
(bad)
mov
xor
fstp
nop
nop
imul
(bad)
fimul
cmp
js
xor
mov
call
cmp
out
xor
int3
outs
ret
cld
lahf
fwait
mov
cmp
pop
bound
popf
fwait
adc
daa
sbb
icebp
dec
push
test
ins
std
push
or
jne
fs
mov
add
fisub
test
jno
repz
sbb
push
pop
inc
(bad)
fisttp
loope
sub
in
jge
push
nop
fld
daa
fcom
mov
movs
xor
ins
add
mov
icebp
imul
mov
stos
ja
sub
mov
jp
cld
cmc
outs
stos
loope
iret
sbb
ins
and
daa
out
adc
push
ins
rol
inc
(bad)
mov
cmp
(bad)
xchg
push
imul
xchg
(bad)
in
pop
cs
loop
and
iret
fsubrp
jo
push
sub
pusha
outs
xchg
dec
pop
xor
cli
mov
lea
inc
add
daa
xor
mov
add
into
ja
in
je
cli
imul
pop
sti
(bad)
popa
xor
loop
jbe
jmp
xchg
mov
xchg
mov
jmp
push
jb
mov
je
call
jnp
mov
in
fcomp
scas
jns
adc
lds
or
je
call
iret
or
push
es
sar
mov
mov
into
mov
mov
fcomip
call
ins
mov
xor
push
int
sbb
push
loop
inc
scas
iret
lock
icebp
arpl
test
movs
neg
and
frstor
cmc
add
in
retf
inc
jge
and
(bad)
(bad)
loop
xchg
jbe
sbb
aaa
sub
sub
mov
jecxz
scas
movs
repnz
into
add
enter
ficom
inc
pop
pop
rcl
scas
cwde
movs
retf
push
les
(bad)
push
je
push
mov
cld
aam
ret
fadd
mov
xchg
rcr
xor
pushf
push
xchg
adc
or
sti
mov
loope
call
push
sbb
cmp
mov
in
clc
stos
push
xchg
mov
pop
add
outs
inc
pop
sbb
sub
push
xchg
mov
cmp
icebp
adc
pop
cmp
adc
mov
aaa
iret
aaa
pop
idiv
mov
aam
lods
sbb
push
(bad)
popf
dec
xor
xor
invd
enter
xchg
dec
es
xchg
rcr
push
pop
jl
mov
ror
call
sbb
mov
pop
and
rcr
imul
fpatan
cld
aad
das
out
mov
sti
or
or
xor
out
addr16
or
inc
push
xor
ret
fcom
sub
sub
push
data16
scas
jae
ss
xlat
jp
push
push
xchg
add
in
in
push
push
addr16
cmp
add
imul
add
aaa
repnz
jp
mov
dec
fcomp
imul
fistp
fs
inc
cmc
sbb
cmp
mov
xchg
or
fs
dec
sbb
add
push
call
push
outs
dec
and
psrlq
outs
adc
sbb
lahf
test
pop
frstor
and
cwde
and
scas
out
inc
in
(bad)
imul
xchg
and
rol
aas
enter
cmp
imul
xor
loop
add
aaa
mov
push
mov
xor
add
jge
jae
lock
xchg
cwde
push
push
gs
pop
add
pop
adc
cmc
adc
pushf
jb
pop
push
pop
clc
into
movs
lea
pop
ins
mov
push
push
jecxz
jnp
inc
add
mov
adc
xchg
pop
adc
jno
pop
movs
mov
es
push
test
ret
inc
pop
jecxz
jl
fdiv
jae
and
mov
out
lods
iret
fwait
inc
cmc
inc
loop
xchg
xchg
xorps
lea
xchg
jl
test
lods
out
inc
mov
icebp
fbld
cmp
neg
loope
or
das
lods
js
and
fiadd
mov
dec
bound
mov
pop
mov
and
lods
mov
inc
cmps
in
mov
pop
mov
lods
adc
sub
outs
cmps
jbe
repnz
fsub
push
sbb
ret
add
enter
enter
ja
cmp
dec
mov
mov
cmp
push
stc
sub
xchg
mov
aas
xchg
xor
ins
iret
jae
mov
mov
push
retf
sti
mov
loop
out
fldcw
xchg
shl
movs
aas
shl
or
fist
jnp
xor
adc
push
and
xchg
outs
add
rcr
dec
pushf
mov
mov
pop
xlat
sbb
mov
(bad)
es
les
or
pop
aas
dec
mov
popf
dec
add
add
fistp
repz
in
(bad)
jb
jmp
inc
jns
pop
je
fiadd
stos
mov
imul
mov
in
push
xor
and
lahf
push
fst
or
rol
lods
mov
sub
inc
and
mov
push
xchg
jno
add
loope
inc
sbb
or
retf
jl
inc
push
out
sahf
rcr
repz
iret
mov
rcl
push
icebp
push
adc
scas
and
xchg
sub
(bad)
jmp
stos
push
fild
icebp
in
add
push
outs
cld
pop
cmp
cmp
push
push
and
inc
jns
mov
sub
pop
adc
fdiv
inc
cs
or
push
pop
loope
repnz
popa
dec
and
cmc
shr
push
call
push
and
or
daa
jge
out
adc
repnz
pop
scas
cmp
and
ret
mov
inc
mov
xor
sbb
xlat
pop
jb
lods
dec
repz
xchg
and
jmp
mov
enter
xchg
cmp
cmp
xchg
push
js
dec
dec
inc
stos
push
popf
test
jnp
mov
fisub
xchg
and
xor
(bad)
sbb
xchg
sbb
or
sub
cmps
cmc
into
popf
imul
sub
ret
cmp
out
ffree
fimul
(bad)
dec
mov
bnd
and
jmp
cwde
mov
pop
cmp
jl
data16
cli
hlt
ret
dec
mov
loope
or
(bad)
jne
aad
fsubr
xor
push
dec
rol
pop
fldcw
outs
xchg
mov
pop
mov
stos
jns
xor
mov
jno
push
scas
pop
jnp
neg
xchg
ret
xor
sbb
sti
jl
adc
inc
lods
or
popa
mov
mov
push
std
lea
jae
cli
fidivr
xchg
add
sub
add
mov
movs
push
ins
jmp
dec
mov
stos
repz
call
adc
jmp
push
lods
fistp
sahf
mov
repz
adc
outs
ins
ins
shl
jmp
ja
push
add
xchg
xor
xor
scas
push
or
leave
and
xchg
or
mov
movs
mov
mov
das
dec
inc
loopne
ficomp
mov
push
cmp
cmp
sub
int
test
mov
mov
aad
dec
mov
lock
das
adc
cdq
rcl
mov
pop
into
pop
sub
inc
jae
jg
movs
not
inc
push
xor
and
adc
push
sbb
movs
jnp
push
in
add
or
ds
aad
xor
or
iret
enter
retf
sbb
inc
or
fldcw
sbb
lds
pushf
mov
stc
out
bswap
div
nop
and
cwde
stos
ss
mov
cwde
mov
adc
xlat
jmp
push
sub
bound
mov
retf
dec
push
ror
mov
mov
ret
std
mov
int
ret
add
xchg
adc
icebp
dec
enter
sub
aaa
(bad)
out
(bad)
fdiv
cmp
jmp
scas
push
test
sub
sub
xor
std
xchg
cdq
out
lods
loop
pop
mov
jg
aad
cmc
call
movs
jecxz
mov
dec
cmp
push
add
(bad)
lods
mov
push
or
add
and
or
or
pop
lods
mov
sub
push
mov
push
test
inc
fcom
mov
dec
or
test
sub
xchg
xor
int
(bad)
aas
push
mov
test
imul
add
jecxz
xchg
ss
aam
mov
(bad)
push
gs
mov
stos
jp
gs
xlat
sbb
add
sbb
out
cmp
mov
int3
cmps
call
adc
inc
dec
mov
imul
iret
in
mov
mov
test
push
mov
inc
mov
ror
xchg
xor
call
sbb
mov
sbb
cmc
stos
or
(bad)
shr
lea
loope
lods
adc
ds
retf
(bad)
push
dec
mov
adc
xchg
xor
sub
ins
lods
mov
jecxz
and
xor
xchg
and
fisttp
jge
test
pop
or
sbb
sahf
call
not
out
pop
dec
ja
adc
nop
dec
cli
add
std
fmulp
mov
push
jmp
cwde
shl
ja
cdq
popf
mov
pop
stc
mov
push
sub
lea
xchg
and
out
ficomp
fisubr
sbb
movs
sti
jmp
pop
push
das
ss
shl
adc
div
retf
mov
je
shl
or
(bad)
movs
mov
xchg
jmp
mov
xor
sub
push
add
addr16
dec
push
mov
sub
xchg
je
jmp
sub
xor
test
sbb
lahf
jne
sub
push
mov
pop
xchg
(bad)
jne
repnz
dec
fidiv
fisttp
fcom
xchg
loope
fsub
retf
sub
xrelease
outs
pop
outs
add
rol
cmps
stos
mov
or
pop
or
xlat
add
inc
mov
les
imul
retf
sub
cli
(bad)
mov
add
adc
mov
add
dec
pop
pop
push
push
add
xor
cmps
sbb
dec
loope
push
pop
mov
lea
mov
fmul
(bad)
mov
push
mov
stos
inc
pop
rcr
jno
sub
fdiv
ins
xor
lea
jg
pushf
ja
pop
and
xchg
mov
in
pusha
test
cdq
pop
retf
xor
inc
stos
ds
xchg
add
xor
imul
sbb
in
sbb
loope
add
inc
lahf
sub
sub
mov
fst
clc
mov
jl
mov
mov
call
jne
adc
outs
cmp
push
xor
repnz
loope
adc
mov
mov
xor
scas
sub
cs
(bad)
inc
stos
mov
fwait
jno
xchg
jno
ja
xchg
inc
out
mov
xor
imul
mov
aaa
mov
sbb
xor
adc
sbb
pop
shr
mov
add
mov
test
lea
xor
add
inc
fcomi
retf
repnz
and
push
pop
push
lods
sbb
stos
ds
add
imul
xchg
lea
cmp
mov
cmp
jp
and
loope
mov
pop
dec
jae
fcom
xor
ds
dec
mov
sub
push
jbe
mov
cmps
fwait
xchg
sbb
adc
fisttp
fstp
add
sar
cmp
outs
add
xchg
lea
sbb
or
sbb
in
loop
out
shl
pusha
xchg
mov
sti
pop
push
cmp
xor
xchg
sbb
out
mov
xchg
lods
sub
fisub
xchg
aam
sbb
dec
out
xlat
push
cdq
pop
mov
sub
aam
or
mov
cmp
(bad)
jmp
cmps
push
arpl
xchg
dec
mov
std
daa
loope
push
lock
std
add
dec
dec
js
sub
jae
out
stos
loope
sti
adc
(bad)
inc
xlat
mov
pop
cmp
fs
jb
add
not
out
fdivr
sub
scas
lock
movs
xchg
push
adc
shl
xchg
jp
vcomiss
(bad)
adc
mov
mov
es
or
xor
std
gs
daa
add
and
test
mov
mov
in
popf
adc
repnz
pop
pop
int
push
movs
cmps
shl
(bad)
and
dec
lds
pop
mov
jno
mov
std
fadd
(bad)
in
mov
or
stos
bound
pop
retf
adc
arpl
sbb
outs
js
gs
pop
cmp
fidivr
xor
jmp
ret
mov
push
test
(bad)
int
movs
pop
test
pop
pop
push
dec
sbb
lock
lahf
xor
add
dec
mov
jb
jnp
xlat
adc
or
adc
inc
jnp
sar
xchg
and
imul
(bad)
jb
cmc
xor
retf
jns
and
inc
aad
stos
jo
shl
sar
cmc
push
xor
mov
xchg
or
adc
jmp
shl
pop
cmp
outs
out
es
mov
mov
and
shr
jecxz
sub
inc
pop
inc
imul
int3
pusha
call
or
sub
adc
pop
add
add
mov
adc
popf
pop
mov
mov
(bad)
xor
pop
nop
or
pop
mov
or
icebp
dec
lods
call
jbe
push
lods
fdivr
pop
mov
mov
clc
adc
sub
mov
push
sub
(bad)
into
add
addr16
ins
enter
aam
push
loope
push
fidiv
pop
daa
aad
jmp
mov
loop
or
adc
pop
or
inc
cwde
dec
sbb
nop
add
or
push
or
(bad)
adc
xchg
clc
add
dec
jp
pop
push
xchg
stos
mov
jmp
mov
xor
xor
sar
or
rol
in
mov
cmps
aas
in
jb
jnp
dec
inc
stc
outs
pcmpeqb
fdiv
cmps
cmp
icebp
inc
pop
xchg
sbb
xchg
mov
(bad)
retf
add
jne
sbb
dec
sbb
sub
sub
ror
sub
add
ret
xor
mov
js
sub
out
adc
in
mov
fcmovnb
cs
mov
and
arpl
mov
clc
jp
or
xchg
jae
repz
in
daa
cmp
mov
(bad)
je
lds
clc
retf
(bad)
outs
sub
pop
push
cmps
lea
(bad)
sbb
cmps
mov
add
push
jge
imul
adc
test
xor
xchg
adc
mov
ds
push
xlat
iret
rol
pop
stos
sbb
push
or
xchg
lea
(bad)
push
xchg
icebp
retf
repnz
sub
cmp
xor
addr16
iret
shr
rcr
xchg
or
sub
adc
xor
sub
push
psubq
rcl
add
sbb
icebp
or
enter
adc
cmps
stos
dec
mov
mov
and
pop
loop
xor
lahf
hlt
add
inc
sub
fs
mov
pop
(bad)
fldenv
imul
xor
xor
fldenv
jge
jl
repz
mov
enter
loopne
repz
aad
leave
cmp
xchg
mov
mov
lahf
fxch
mov
sbb
pop
popf
jbe
xlat
or
shl
into
or
inc
mov
dec
retf
xchg
push
and
aam
neg
imul
scas
or
adc
cmp
test
stos
cmp
sbb
ror
fcomp
push
and
adc
pop
or
stos
jp
mov
scas
mov
sub
les
push
loop
cs
mov
cmc
dec
clc
push
mov
jmp
cld
and
inc
sbb
and
test
xchg
add
adc
(bad)
jmp
cs
push
int
inc
dec
out
pop
int
scas
rol
push
inc
mov
jle
fstp
cmps
jo
sbb
cmp
dec
mov
and
jmp
bound
mov
xor
add
xchg
outs
xor
mov
or
aam
inc
out
jecxz
fidivr
rcr
xor
imul
mov
cwde
test
das
stos
mov
shl
push
adc
or
std
or
ret
int
pop
mov
aam
shl
lods
push
mov
xchg
inc
inc
std
jb
sbb
pop
test
cmp
movs
dec
push
test
pop
sbb
dec
inc
xchg
jbe
jmp
pop
ins
xchg
call
adc
inc
xlat
and
add
adc
fmul
aaa
call
repz
push
fmul
adc
jl
scas
ins
xchg
xchg
aas
les
and
lods
pop
call
data16
shl
ror
sahf
mov
ror
sbb
nop
mov
outs
dec
rcr
mov
cli
xchg
and
sbb
mov
ficom
call
mov
push
sar
movs
jnp
mov
(bad)
xor
stc
mov
jo
ja
sub
mov
inc
pop
jne
imul
cmp
scas
out
cmps
add
aas
in
js
xor
pop
in
fidiv
outs
jle
fdiv
pop
cwde
mov
mov
adc
inc
push
adc
mov
sar
out
fidiv
cdq
ret
clc
cmc
cli
mov
pop
inc
gs
in
aam
lahf
popa
inc
rcl
out
aam
cmc
repz
(bad)
repz
es
mov
call
pop
ret
iret
in
aad
xchg
jg
xchg
mov
jo
pop
mov
lock
xor
inc
cmp
and
xchg
mov
jo
dec
and
imul
out
fucomp
icebp
dec
lods
cdq
xchg
cmp
inc
cmc
cmc
rcr
push
(bad)
ret
xlat
out
(bad)
cmp
nop
cmp
lock
aad
pushf
add
mov
inc
out
xchg
sub
jecxz
mov
jb
std
arpl
push
mov
das
cli
hlt
inc
add
(bad)
dec
and
add
in
aam
adc
fnstcw
cmp
xchg
sbb
scas
xchg
sub
jns
iret
sub
adc
or
push
inc
popf
fcmovbe
inc
sbb
popf
icebp
ss
rcr
fmul
mov
push
jl
ins
jp
and
std
and
and
(bad)
aad
sub
dec
xlat
shl
fsubr
adc
loop
(bad)
dec
lock
cmc
mov
add
sub
mov
sbb
outs
cmp
cmp
in
pop
je
mov
jo
jmp
rol
inc
xchg
sub
jae
shl
dec
xchg
and
test
or
dec
mov
xlat
xor
jg
daa
mov
xor
push
push
xchg
retf
out
cmp
cmp
aad
and
mov
add
repz
repnz
or
sbb
jmp
jl
punpckldq
push
and
push
xchg
ret
cmp
add
sub
rcr
outs
aaa
scas
mov
mov
pop
clc
sbb
rcl
pop
mov
jno
jb
mov
jns
push
and
(bad)
mov
push
imul
and
cdq
adc
(bad)
jmp
mov
scas
stos
push
jnp
ins
dec
ds
inc
push
dec
xor
xor
ret
clc
pop
sbb
sub
mov
pop
test
outs
scas
xchg
cmps
cli
fisttp
mov
imul
mov
sub
or
xchg
addr16
pop
sbb
inc
adc
(bad)
jne
add
fbld
sub
push
(bad)
dec
(bad)
xor
int3
pop
or
xchg
and
mov
mov
iret
adc
cmp
imul
and
stos
stc
aas
jbe
mov
jb
cli
ss
popa
push
mov
lods
stos
call
add
call
cli
int
loop
mov
aaa
in
stc
mov
in
pop
pop
lods
dec
xchg
xor
inc
pop
jb
push
repz
aaa
mov
sbb
scas
mov
pusha
jb
loop
add
pop
fldcw
sub
in
jnp
aad
loope
out
jecxz
ja
fidivr
ja
push
out
pop
imul
jbe
mov
test
sti
push
cmc
outs
dec
or
pop
xchg
cmc
mov
(bad)
sahf
and
add
and
fcomi
inc
cdq
cmps
jecxz
and
cmp
dec
mov
(bad)
stc
xchg
int
pop
imul
ja
lea
adc
repz
fist
jno
out
jae
popf
push
mov
imul
mul
test
dec
stc
and
arpl
or
mov
cs
xchg
js
jno
enter
ja
sbb
call
jnp
popa
fnstcw
iret
mul
adc
fwait
xchg
popf
push
add
(bad)
sti
jg
sub
and
xchg
icebp
adc
cmp
cdq
sub
div
jle
mov
sahf
mov
xor
inc
outs
push
ins
dec
comiss
sbb
mov
mov
cs
gs
and
xor
popa
and
movs
adc
cmp
dec
xor
aad
xor
jle
xchg
pop
adc
test
shl
push
leave
gs
pop
jae
push
int3
mov
and
cvttps2pi
mov
into
dec
cli
pop
mov
cwde
inc
xchg
inc
push
fst
jl
mov
inc
fmul
push
jnp
clc
stos
sti
adc
stos
adc
sbb
mov
pop
jno
jecxz
inc
into
data16
retf
pop
(bad)
xlat
sahf
mov
(bad)
outs
int
(bad)
sbb
ret
(bad)
cld
icebp
out
or
push
in
mov
cmps
clc
sbb
or
mov
mov
mov
hlt
enter
sbb
repz
inc
sbb
aad
sbb
int3
inc
int3
ss
jne
loopne
cmp
inc
adc
adc
retf
les
or
(bad)
clc
jb
in
sub
mov
and
fisubr
cld
lock
xor
(bad)
mov
push
sahf
js
enter
lea
dec
lea
xor
jle
adc
sti
test
cmps
adc
aaa
fst
xchg
icebp
mov
push
push
sub
inc
xchg
popa
mov
adc
pusha
or
pop
andps
fstp
mov
and
add
mov
loopne
sub
adc
into
push
add
mov
pop
mov
mov
fcom
dec
xor
jbe
movs
add
retf
pop
loop
push
mov
je
jg
cmps
out
ins
xchg
cmp
cmp
sbb
les
push
jne
test
or
outs
test
(bad)
sbb
dec
and
push
or
ins
xor
xor
retf
loope
(bad)
push
cdq
mov
mov
dec
fdivr
(bad)
mov
xchg
stos
movs
push
das
xchg
jle
jbe
aad
cmp
punpcklbw
or
(bad)
mov
(bad)
jmp
lahf
sti
rol
jp
in
add
mov
adc
out
jbe
inc
jbe
mov
cwde
movs
mov
lds
inc
stos
fidiv
jmp
stc
xchg
mov
dec
dec
movs
adc
call
loop
out
pop
and
dec
pop
ret
movs
icebp
mov
pop
dec
test
lea
loope
add
shl
shl
repz
or
call
dec
pop
jecxz
xchg
push
in
sti
jmp
mov
loope
pop
push
test
inc
dec
retf
stos
xchg
mov
repnz
adc
add
mov
in
movs
popa
mov
and
xor
repnz
daa
dec
mov
fisub
or
push
(bad)
(bad)
(bad)
inc
test
or
ss
cmc
xchg
cmp
out
(bad)
out
cmc
sbb
inc
scas
sbb
sbb
shl
mov
fild
fwait
jge
fnstenv
(bad)
in
xchg
hlt
push
std
sub
add
fcmovbe
xchg
shl
xor
lea
jge
ret
es
imul
rcl
test
or
pop
jne
xchg
dec
stc
adc
mov
push
nop
pop
xor
jbe
hlt
add
lods
jecxz
cmp
fist
out
mov
loop
aam
pop
test
pop
xor
jge
sub
inc
add
and
fmul
push
xlat
js
mov
add
mov
cmp
mov
pop
cmps
(bad)
loop
aas
fcmovnb
pop
lds
outs
push
popf
xor
inc
sbb
mul
lahf
mov
and
ins
mov
imul
pop
dec
cdq
ds
in
test
test
in
dec
xchg
in
xor
and
xlat
xchg
cli
push
das
gs
ds
jb
loop
out
adc
cmp
add
sti
pop
aaa
and
sbb
jne
lods
jae
(bad)
pop
or
jo
repnz
fistp
mov
lods
cdq
ss
imul
jecxz
sbb
sbb
(bad)
push
arpl
fistp
cmp
fisttp
adc
jns
push
leave
mov
mov
pushf
mov
ins
and
xor
idiv
mov
push
jl
imul
and
scas
mov
cmp
fisub
cmp
xchg
imul
lods
ss
cmp
adc
adc
add
push
call
jecxz
ja
aad
adc
push
loop
and
xor
xor
or
push
adc
jmp
add
sahf
sbb
stos
mov
adc
out
jbe
jmp
mov
and
xchg
mov
in
mov
jg
(bad)
std
stos
xchg
dec
xor
sub
(bad)
cmp
std
sbb
fidiv
adc
ins
jns
test
push
imul
pop
dec
ins
(bad)
pop
inc
jae
test
or
dec
(bad)
in
sbb
cmc
stos
xchg
loope
and
xchg
mov
imul
xlat
adc
cmp
xchg
lods
not
or
jno
add
aam
jb
jnp
add
mov
outs
mov
bound
jle
icebp
inc
push
inc
jp
movs
ja
fistp
inc
int3
arpl
push
lds
cmps
cmp
mov
out
mov
add
mov
xor
enter
inc
mov
sub
pop
mov
and
xor
std
fisubr
jl
adc
ds
fld
sub
mov
adc
inc
jecxz
adc
sub
mov
add
rol
gs
mov
rol
ja
clc
inc
mov
jno
jmp
in
xchg
mov
sbb
adc
mov
rol
ins
fs
das
loope
stos
loop
jmp
push
in
mov
out
push
adc
push
es
xor
movs
and
jp
mov
das
ss
ins
inc
(bad)
push
enter
adc
adc
sub
mov
add
gs
inc
dec
sbb
push
add
and
sub
mov
mov
jbe
cmp
pop
dec
sbb
xor
xlat
or
shufps
xchg
mov
mov
rol
mov
gs
popf
inc
dec
test
lock
hlt
out
div
adc
dec
in
(bad)
in
outs
mov
pop
cmp
in
cdq
lods
push
and
clc
pop
int3
mov
jg
jbe
and
xchg
and
outs
mov
add
scas
faddp
data16
xchg
arpl
aad
aam
xchg
xor
cmc
imul
xlat
push
or
lock
es
and
loopne
in
add
mov
sub
mov
je
repz
or
sar
int3
fisubr
push
rol
iret
push
jnp
and
loop
xor
imul
mov
push
pop
je
test
cmp
jmp
xchg
lea
mov
mov
dec
inc
inc
jmp
retf
inc
sbb
mov
pop
pop
ret
iret
dec
out
jle
lock
xchg
aad
fstp
sub
push
xor
sbb
add
jo
(bad)
aas
or
dec
push
stos
sbb
cmps
sub
and
jb
mov
dec
jbe
aaa
sub
mov
ffreep
adc
cmp
stos
(bad)
sub
clc
mov
imul
xchg
jno
xlat
adc
sub
pop
ja
icebp
cli
das
(bad)
je
daa
pop
(bad)
mov
movs
push
jmp
dec
mov
push
push
mov
sub
iret
pop
(bad)
inc
mov
sbb
mov
inc
mov
jge
enter
mov
sub
sti
and
les
jecxz
arpl
nop
ins
(bad)
mov
outs
jle
push
push
cld
mov
pop
(bad)
adc
pextrw
js
popf
mov
xchg
mov
popa
and
shr
test
jno
cdq
cmps
ins
jno
inc
jno
lods
lock
jne
sub
std
mov
mov
stos
div
into
add
icebp
iret
jp
test
jmp
jg
data16
in
pop
jg
ins
add
js
dec
cdq
lahf
shl
adc
leave
jle
aad
add
add
jp
sbb
push
(bad)
out
sbb
mov
adc
iret
cmp
sub
jp
cmp
test
xchg
mov
adc
or
test
ins
push
imul
frstor
scas
mov
fcom
ins
mov
or
inc
or
out
aam
repz
ins
or
repz
fwait
adc
ss
and
sub
xor
pop
inc
jp
and
pop
inc
lods
in
pushf
repz
mov
push
ret
mov
add
push
data16
cmps
stc
std
sahf
fnstcw
icebp
and
cmps
xchg
hlt
lahf
fistp
sub
jae
inc
lea
shr
std
cmp
mov
mov
xor
xchg
(bad)
mov
xchg
cmp
xor
push
xor
sub
pop
addr16
rcl
popf
popa
in
aas
mov
xor
int
pop
jbe
and
ret
aas
lea
pop
inc
fldenv
fidiv
pop
inc
stos
iret
xchg
imul
jle
inc
enter
inc
mov
inc
mov
icebp
sbb
mov
mov
cmp
dec
bound
mov
xchg
loopne
sbb
ds
pop
mov
mov
cld
jecxz
cmp
cld
(bad)
into
cld
dec
add
push
rol
cs
leave
loop
hlt
and
add
or
sub
retf
mov
sub
xor
js
or
mov
ds
jge
jmp
pop
or
cmp
pop
push
pop
pusha
xchg
icebp
push
mov
pop
fidiv
cmps
add
cmp
dec
imul
jo
xor
movs
popf
mov
adc
mov
mov
mov
mov
sar
mov
push
push
xlat
(bad)
repz
adc
sbb
fndisi(8087
in
dec
sti
in
inc
dec
push
cmp
sub
jmp
std
or
je
loope
xor
aad
shr
cdq
pop
dec
xor
add
sar
rcl
and
pop
xchg
add
mov
je
mov
xchg
inc
imul
push
retf
sub
popf
push
lea
push
xchg
icebp
cmp
cmp
jno
jge
push
pop
inc
pop
(bad)
jmp
je
(bad)
nop
pause
and
inc
jno
test
loop
mov
test
es
inc
es
movs
stc
es
aas
pop
pop
repz
and
sahf
xor
call
add
cwde
sahf
popf
loopne
jmp
ins
xor
sub
fild
mov
mov
cmp
xor
int3
cmp
addr16
stos
jae
xchg
xor
bound
lds
cli
xor
fmul
or
shl
jg
inc
mov
add
jmp
mov
movs
dec
or
stc
fs
inc
jg
lods
cmps
mov
xchg
add
inc
dec
pop
push
aaa
pop
mov
daa
fnsave
dec
sti
push
xchg
cmps
pusha
bound
add
mov
push
jnp
dec
jle
push
mov
into
outs
jns
int
or
fldenv
pop
mov
das
add
(bad)
adc
je
cdq
pushf
imul
shr
jbe
and
or
nop
fisub
sub
mov
push
fsubr
fdivr
movaps
lock
adc
arpl
mov
and
fwait
test
bound
add
popa
ds
xchg
sahf
ror
andps
cmp
loopne
xchg
xchg
fcomip
rcr
mov
jmp
add
sub
adc
inc
rcl
fld
jmp
mov
shl
fdivr
xchg
cmc
adc
or
and
xchg
cmp
ficomp
push
arpl
imul
mov
xchg
sbb
rcr
not
jmp
sub
and
xchg
xchg
jmp
jge
std
mov
and
pop
outs
jge
cmp
push
scas
xchg
(bad)
mov
jno
xor
push
xchg
xor
repnz
clc
add
loop
mov
(bad)
les
add
or
fbld
cmp
ins
sub
dec
data16
repnz
dec
arpl
cmps
mov
push
or
mov
cmp
aad
xor
ss
add
out
jge
jp
sub
xor
js
jp
ja
and
jo
gs
xchg
inc
add
mov
repz
jno
push
aad
sti
mov
std
inc
or
lock
neg
pop
fdivr
pusha
loop
mov
cmp
rol
xchg
lahf
cmps
aas
sbb
sbb
inc
shr
iret
mov
jno
pusha
cmp
and
mov
aaa
dec
fidiv
pop
or
or
jb
call
int
imul
jle
and
add
leave
and
ins
inc
inc
jb
dec
repz
jo
mov
jle
mov
jne
icebp
data16
xor
jo
aam
sbb
(bad)
cmp
test
enter
cmps
jae
mov
push
push
adc
and
sbb
repnz
push
jle
imul
es
or
cmp
pop
in
movs
test
lods
push
push
mov
and
push
inc
mov
outs
in
adc
jns
push
idiv
add
or
(bad)
rol
sbb
loope
popa
mov
adc
jns
mov
mov
sahf
ret
leave
xchg
out
iret
inc
adc
push
sub
sbb
dec
mov
cld
into
sbb
inc
and
mov
out
xlat
cmps
or
mov
mov
push
lds
push
movs
cmc
sti
stos
or
dec
sbb
jmp
xor
or
out
add
int3
stos
push
shl
data16
pop
jmp
pop
mov
xor
ret
imul
sub
cmp
cld
das
mov
sbb
in
and
dec
ret
sbb
xchg
push
aaa
mov
xchg
arpl
out
and
sbb
adc
fs
dec
fmul
idiv
fs
inc
into
iret
jmp
aas
je
push
cmp
fiadd
clc
xchg
pop
loope
arpl
fidivr
ins
mov
rcr
lea
pop
xchg
add
inc
aas
or
clc
cmps
inc
jae
push
push
das
test
out
fst
out
rol
std
or
(bad)
inc
jmp
fcom
fbld
(bad)
mov
sti
arpl
ja
mov
retf
mov
or
lea
lods
fs
pop
inc
dec
jecxz
dec
test
inc
cld
sbb
gs
das
imul
enter
into
outs
add
jmp
mov
pop
pop
jecxz
dec
out
add
mov
cmp
dec
or
cld
xor
mov
dec
je
imul
push
mov
push
adc
rol
sub
std
ja
in
scas
ror
ja
fbld
xor
scas
mov
mov
addr16
mov
cmps
mov
adc
mov
add
ret
popa
hlt
mov
lahf
stc
mov
(bad)
in
call
xor
add
xlat
movs
pop
lods
pop
jle
mov
movs
mov
push
ret
mov
loop
(bad)
pop
or
xchg
inc
inc
xchg
cld
jne
outs
lods
ficomp
fsub
sub
aad
jmp
mov
adc
ins
fmul
ja
stos
inc
push
(bad)
mov
push
lds
cwde
push
pop
jmp
les
push
inc
sub
xor
push
xchg
mov
fld
mov
push
outs
jmp
jp
fwait
push
jmp
sub
movs
movs
mov
ficomp
push
(bad)
mov
hlt
inc
cmps
push
mov
imul
push
into
out
sub
mul
jmp
jb
sbb
sub
arpl
add
in
test
dec
mov
or
pusha
add
mov
mov
repz
dec
sbb
iret
loopne
xor
sub
cwde
icebp
jno
inc
adc
outs
mov
adc
or
jno
mov
ja
xor
xchg
arpl
pop
pop
(bad)
mov
aad
stc
aaa
stos
cwde
push
push
cmp
sub
cld
xchg
pusha
mov
mov
call
out
sub
pop
push
push
inc
and
popf
inc
sub
mov
sbb
sub
dec
int3
sbb
test
into
loopne
mov
enter
mov
push
push
ficomp
dec
enter
loope
enter
adc
mov
call
movs
push
xor
jb
cmp
jbe
out
push
mov
mov
outs
bound
push
xor
pop
push
mov
jg
push
xchg
aaa
scas
lock
push
icebp
div
std
mov
pop
jo
out
out
es
xor
clc
adc
jmp
dec
(bad)
mov
cmp
jge
push
sbb
jle
data16
add
shl
lods
sbb
xor
dec
ret
ds
daa
rcl
stos
mov
aam
sub
push
call
inc
or
lods
ret
push
add
add
fidiv
push
nop
dec
pop
pop
adc
aas
(bad)
mov
rdmsr
mov
sub
sub
sahf
call
movs
out
aad
outs
mov
scas
sub
pop
cmp
daa
arpl
cld
movs
test
pop
xlat
fist
adc
mov
ret
add
mov
or
js
inc
rcl
outs
and
mov
ja
in
or
push
dec
mov
mov
shl
lods
dec
hlt
hlt
je
mov
retf
int
push
std
repz
mov
sbb
imul
out
pop
cld
fistp
cmp
test
sub
outs
cmp
push
cdq
and
call
lea
cmp
scas
pop
inc
mov
push
ror
dec
adc
hlt
inc
in
xor
push
or
inc
sub
xchg
lods
push
sbb
inc
adc
push
cwde
fwait
pop
pop
ret
xor
adc
mov
icebp
add
lods
cmp
(bad)
cmp
bswap
bound
jecxz
or
xlat
imul
ss
shl
mov
and
shl
push
add
psubusw
shl
aam
retf
fcom
mov
pop
mul
mov
and
and
pop
test
pop
stc
sub
inc
xchg
sar
jp
out
cld
dec
clc
mov
cli
xchg
cmc
je
cdq
mov
xor
ds
add
movs
fs
dec
xor
xchg
popf
cli
nop
add
clc
jae
int
pop
sub
pop
push
adc
loop
mov
popa
xchg
cmps
icebp
jno
retf
test
sub
(bad)
sbb
gs
sbb
mov
mov
out
sahf
push
push
les
jp
sub
mov
jns
test
test
test
adc
mov
dec
xor
cmp
dec
test
lods
sub
jns
fcom
mov
pusha
les
das
jp
shr
inc
lock
hlt
aam
add
dec
jge
movs
repnz
add
lds
enter
aaa
retf
mov
(bad)
add
cmps
lods
mov
icebp
stos
mov
cmps
add
push
and
dec
inc
inc
fcmovnu
xor
jmp
fbstp
and
shr
push
sub
sub
ss
sub
xchg
jle
sub
xchg
push
dec
mov
xor
pop
outs
mov
(bad)
cmp
push
fst
cmp
jmp
xchg
loope
pop
mov
pop
add
les
retf
(bad)
jp
xor
addr16
retf
add
outs
xchg
inc
jmp
rcr
(bad)
lock
jge
pop
nop
fimul
inc
adc
add
ins
pop
stos
dec
ins
jo
inc
cmp
enter
add
cmp
push
das
test
mov
out
and
in
vsubps
adc
int3
repz
jmp
sbb
cmp
or
arpl
cmp
inc
out
retf
mov
xchg
aad
xor
inc
mov
pusha
push
fstp
pop
imul
(bad)
mov
ds
adc
aas
(bad)
mov
ror
out
ins
inc
push
hlt
mov
je
retf
retf
fnstcw
jnp
jo
mov
sub
mov
repz
sahf
dec
pop
stos
add
int3
icebp
jle
rcr
mov
nop
mov
out
xchg
retf
gs
adc
xor
mov
pop
je
pop
sbb
push
inc
jmp
in
jmp
popa
push
mov
pusha
mov
jge
ss
ins
cmp
rol
xor
cmc
pusha
inc
cmps
fistp
pop
sub
outs
xor
jg
pop
mov
pop
jnp
xchg
iret
leavew
and
mov
jo
repz
out
int
or
mov
gs
fdivr
pop
adc
mov
xor
in
sub
push
mov
and
pop
sbb
xor
pop
add
inc
std
pop
(bad)
into
lahf
pxor
inc
cld
enter
cmp
test
push
call
inc
retf
mov
xor
ds
lods
pavgb
daa
ret
push
mov
jl
jbe
sar
retf
jge
ret
lahf
fcomp
mov
sub
js
icebp
fistp
je
test
mov
out
push
sub
xor
jge
and
clc
jb
pop
push
jno
push
rol
int3
in
fcomip
inc
call
cmp
je
icebp
sbb
aad
movs
sbb
jae
shr
mov
mov
mov
adc
sahf
and
pop
scas
das
mul
rol
movs
add
jmp
call
cwde
mov
int3
mov
xlat
sbb
sub
jecxz
jp
push
pop
retf
(bad)
loope
mul
xchg
pushf
pop
jnp
sub
xchg
inc
mov
call
xchg
xchg
aaa
adc
sub
lods
jne
pop
stc
jns
adc
sbb
cmp
fist
das
adc
stos
mov
add
sub
mov
xchg
mov
int3
shl
loope
(bad)
int3
(bad)
push
int3
or
push
mov
dec
inc
lock
xchg
repnz
sub
in
pushf
rcl
cmp
(bad)
mov
pop
jecxz
cmp
push
sbb
scas
in
cdq
fdivr
(bad)
cli
cmps
pop
sbb
pop
cdq
retf
hlt
mov
movs
scas
lahf
push
sub
test
test
popa
xchg
lods
sub
inc
and
add
repnz
xchg
pop
and
push
and
mov
and
xchg
cdq
icebp
dec
or
cs
shl
jge
leave
std
inc
imul
add
outs
mov
sub
mov
and
sub
jge
dec
adc
clc
cli
movs
lods
in
pop
sub
jp
shl
mov
push
inc
pop
inc
retf
fcmovnu
cdq
call
jmp
aaa
pop
push
mov
scas
(bad)
xor
adc
shl
cdq
ja
add
nop
or
jmp
retf
sub
cmc
dec
mov
cmp
mov
test
push
imul
mov
adc
mov
lods
sub
jge
rcl
sub
xchg
dec
sub
idiv
mov
in
cld
cmps
fs
and
test
mov
add
cmps
sub
rcr
xchg
imul
adc
mov
adc
imul
out
icebp
int
in
pop
cmp
outs
daa
jecxz
jbe
in
test
cmps
push
add
icebp
xor
pop
call
rcl
and
out
cs
(bad)
jo
dec
popa
cdq
(bad)
vpackuswb
cmp
test
dec
xchg
scas
xor
sub
push
adc
in
sbb
inc
pop
stc
rcr
inc
and
(bad)
arpl
ss
retf
js
pop
add
das
add
mov
push
fild
stos
ror
pop
sbb
cmp
xchg
jne
jge
ins
fadd
enter
call
jb
cmp
mov
dec
push
(bad)
add
pop
imul
imul
(bad)
in
test
mov
mov
and
push
outs
jne
jmp
(bad)
shl
mov
mov
cmps
or
les
icebp
(bad)
popa
rcl
push
dec
sbb
js
aad
push
vmovdqu
fwait
push
mov
jl
mov
xchg
inc
call
int3
cmps
mov
fstp
cmp
test
arpl
push
(bad)
call
pop
inc
stos
lock
ror
dec
and
cmp
adc
pop
cdq
scas
pop
push
cmp
push
jae
mov
adc
adc
push
cmp
push
push
and
jmp
je
xchg
add
out
sub
jmp
test
mov
add
sbb
push
jl
ds
mov
repnz
cdq
inc
sti
aas
jp
or
adc
push
popf
retf
mov
cmps
test
jp
(bad)
test
push
out
jmp
sbb
inc
rcr
inc
shr
or
out
cli
jnp
clc
les
iret
mov
xchg
push
and
xchg
and
jge
mov
xor
add
sbb
or
and
out
sub
xchg
xchg
cmp
add
push
xor
mov
pop
mov
inc
sub
mov
or
push
xor
add
nop
mov
out
in
adc
mov
jo
lods
lods
rcr
jp
ins
movs
mov
jge
and
(bad)
repz
adc
aas
cmp
adc
cmp
in
das
jp
(bad)
jl
dec
sub
mov
mov
pop
sub
lods
dec
out
and
inc
push
jne
mov
repnz
repnz
push
add
lods
(bad)
out
(bad)
sbb
das
pop
imul
adc
push
sbb
jmp
loope
push
xor
popf
pusha
push
cmp
test
mov
sub
xor
cmc
add
aad
fcom
xchg
jnp
imul
(bad)
lock
mov
or
clc
rcl
clc
ret
out
mov
cmp
dec
es
retf
daa
stc
cmp
mov
or
retf
xor
cld
xchg
mov
test
jecxz
xor
jno
cld
or
push
pop
mov
and
adc
mov
xchg
mov
imul
mov
outs
sbb
in
(bad)
rcr
bound
cmp
out
sub
xor
fstenv
mov
add
mov
lods
cmp
das
dec
mov
jmp
xchg
pop
movs
outs
sub
push
jae
jne
js
icebp
pop
adc
adc
sub
pop
cmp
mov
lahf
pop
or
mov
xor
adc
cmps
call
xor
out
push
(bad)
pop
mov
xchg
(bad)
inc
push
sub
fstp
test
in
jmp
mov
sahf
fidiv
stos
pusha
enter
mov
js
data16
pop
(bad)
cmp
es
cmp
sbb
les
pusha
add
jg
dec
ins
js
inc
outs
mov
nop
sbb
cld
mov
jb
mov
leave
ror
cmp
add
sbb
movs
daa
inc
cmp
rep
sbb
mov
lock
xor
lock
or
out
out
and
pop
mov
int3
cmp
push
xor
out
inc
pop
in
(bad)
sbb
call
int3
test
push
add
stc
pop
das
loope
cmc
and
xlat
push
cmps
stos
ins
xchg
mov
movs
and
std
pop
popa
jnp
or
in
mov
cmp
lods
jb
clc
sbb
adc
ins
shl
xchg
add
inc
jo
ds
or
mov
inc
xor
movs
add
and
sbb
xlat
(bad)
pop
das
xchg
cmp
mov
addr16
outs
test
jl
jb
aaa
test
(bad)
sbb
mov
mov
jns
adc
add
sbb
jno
jmp
inc
xor
nop
mov
das
in
imul
(bad)
adc
outs
psubq
xchg
xchg
retf
mov
pusha
sti
scas
out
out
dec
fwait
(bad)
fsub
out
in
mov
adc
add
addr16
push
pop
mov
xchg
and
je
loop
addr16
cwde
mov
jbe
pop
stos
fcomp
popf
and
scas
jecxz
scas
xor
jbe
push
mov
sbb
cdq
jnp
cwde
ror
xchg
in
pshufw
inc
and
imul
mov
into
sub
dec
sbb
and
int3
test
test
sar
bound
xor
std
addr16
jp
jp
mov
mov
inc
inc
or
xor
neg
in
cmp
adc
push
xchg
into
stos
pop
mov
loop
inc
pop
sbb
inc
repz
push
xchg
fisttp
call
jmp
(bad)
sub
inc
imul
leave
pop
cs
pop
push
sub
cmp
sbb
fiadd
jmp
cwde
dec
xchg
xor
jge
std
(bad)
cs
std
push
push
(bad)
loop
sahf
(bad)
jmp
clc
adc
popa
les
xchg
mov
sub
push
xchg
pop
cs
and
repnz
loopne
inc
repnz
and
mov
ret
int3
pop
jl
aaa
inc
jnp
fidivr
cwde
and
ror
in
mov
and
aad
jle
shl
push
cld
push
sub
sub
pop
and
bnd
mov
in
dec
fcomip
leave
cmp
cmps
and
daa
add
push
mov
push
and
xor
mov
call
and
push
je
cli
push
jmp
jl
es
jecxz
addr16
test
cmp
fimul
cmc
cmc
or
adc
fsubp
push
in
jg
scas
and
jno
jbe
xor
jmp
in
xchg
mov
xchg
out
fadd
or
mov
test
xchg
(bad)
mov
fcos
imul
cmp
retf
out
mov
or
(bad)
mov
loopne
popf
lods
jno
cld
fs
jbe
je
popa
stos
dec
mov
loopne
inc
push
out
inc
sub
cmps
pusha
cmp
fidiv
dec
push
cmp
add
(bad)
mov
psubsw
es
jle
shr
leave
(bad)
mov
mov
ficomp
ja
movs
leave
adc
pop
je
imul
mov
mov
shr
dec
icebp
push
dec
push
popf
lahf
js
pushf
mov
ins
sbb
or
popf
push
xchg
call
inc
pusha
(bad)
sbb
cmp
repnz
sti
mov
push
ins
push
push
ret
xchg
inc
test
pop
pop
or
test
sub
jnp
sub
pop
shl
add
push
push
or
fmul
fnstsw
aam
jo
ins
inc
and
sbb
cmps
adc
call
fs
es
sbb
mov
stc
cmp
fdivr
jnp
pop
inc
add
sub
sbb
pop
retf
nop
ret
outs
call
sub
mov
push
dec
mov
cmp
out
loopne
sub
xchg
mov
loop
daa
inc
ret
push
cld
xchg
icebp
push
cmp
cdq
test
pop
push
scas
sar
jmp
mov
push
rcl
add
jmp
mov
xchg
cmp
pop
adc
dec
scas
mov
hlt
in
iret
sbb
ficom
les
fisttp
cld
repnz
(bad)
jnp
sub
add
nop
inc
sub
jnp
and
icebp
test
int
cmp
jmp
fwait
popa
jmp
mov
in
push
call
mov
das
jo
les
clc
xor
rcl
push
cmp
mov
call
dec
push
shl
imul
adc
cmp
sbb
retf
mov
icebp
(bad)
into
imul
cmps
imul
test
add
cmps
push
int3
js
(bad)
xchg
mov
add
cs
push
in
or
cmps
test
test
enter
rcl
inc
xlat
mov
fisubr
test
ror
pop
adc
sbb
shr
mov
mov
or
movs
cmc
aas
jge
cwde
mov
mov
cli
sar
push
xor
mov
aam
xor
add
in
jno
jge
fisubr
mov
and
sbb
xor
push
aam
jmp
fcmovne
sbb
push
mov
int
add
pop
(bad)
js
pop
mov
jb
mov
adc
jmp
cmp
out
sbb
sub
and
je
ret
outs
jo
pop
je
or
imul
leave
dec
(bad)
cmc
add
xor
adc
inc
outs
mov
cmp
addr16
ja
cmp
mov
in
(bad)
lds
scas
pmullw
dec
cmc
mov
inc
cdq
add
in
mov
test
test
xchg
adc
xor
push
js
jnp
cmc
pop
arpl
mov
repz
fisttp
mov
outs
push
ror
push
fdivr
inc
dec
pop
add
jns
(bad)
adc
push
or
cmp
enter
cmp
xor
cmps
addr16
sub
pop
jae
mov
repz
lahf
dec
dec
add
dec
lahf
(bad)
ret
mov
pop
sar
mov
or
cmp
je
lds
rcr
jae
cmp
sub
add
and
aaa
mov
dec
daa
cld
and
cld
and
jne
shr
push
add
dec
inc
pusha
push
add
sub
jo
hlt
movs
loopne
clc
into
stos
gs
hlt
mov
or
jnp
lods
inc
(bad)
pop
and
hlt
imul
sahf
sub
push
ins
inc
jp
pop
sub
jnp
fucomp
das
jbe
test
ds
aam
cli
mov
enter
add
jp
leave
adc
dec
paddw
outs
test
push
jl
mov
aad
out
nop
jmp
shr
or
daa
pop
int
ror
add
repnz
xchg
sbb
je
(bad)
enter
push
add
outs
mov
push
aas
repz
repnz
sbb
test
xchg
mov
fwait
sahf
and
inc
push
ds
push
outs
fsubp
fcomp
out
in
xchg
mov
pop
aad
sbb
pop
int
lea
mov
push
push
and
leave
ja
push
popf
test
pop
adc
jp
and
xchg
sbb
dec
mov
aas
sbb
addr16
fnstcw
mov
pop
out
not
lock
call
sbb
xor
aad
jp
jbe
(bad)
cwde
enter
push
sbb
leave
test
sbb
xchg
push
cmps
iret
jne
jecxz
mov
dec
xchg
sub
jp
mov
es
jae
mov
mov
cmc
in
out
sbb
adc
stos
push
mov
cld
mov
cmps
xchg
ret
int
sub
push
scas
scas
xor
les
xchg
enter
push
cmps
fidiv
mov
push
pop
jb
test
xchg
leave
jmp
mov
xchg
cmp
movs
ret
(bad)
pop
rol
push
lds
lods
jb
ret
push
into
or
or
mov
sub
or
sahf
shr
pop
inc
inc
add
push
sub
aas
xor
push
jl
sub
pop
dec
stc
in
jle
jnp
adc
ja
gs
iret
test
call
add
pop
xor
test
adc
mov
fwait
inc
out
lea
fwait
sub
lods
cli
inc
call
shr
repnz
rol
sbb
jge
push
dec
push
popf
push
shr
xchg
imul
mov
movs
clc
mov
or
jl
sub
jge
clc
push
add
xor
push
adc
retf
enter
or
fisttp
sbb
xchg
lods
jg
and
sub
xchg
jo
mov
movs
adc
stc
dec
mov
popf
rol
movs
test
sahf
xchg
ins
stos
fistp
xchg
adc
int
xchg
cdq
shl
clc
int
jle
xor
dec
lds
shl
add
pop
jmp
js
popa
adc
inc
mov
cmp
jmp
mov
jbe
rcl
lea
xor
test
pop
out
jae
jecxz
ins
mov
pusha
pop
sti
out
scas
cdq
mov
ret
mov
push
pusha
dec
clc
cmps
mov
sub
mov
je
dec
imul
inc
or
xor
movs
pop
mul
mov
lods
ins
mov
jne
dec
aad
and
dec
xor
push
outs
adc
lods
lods
fstp
lock
fldenv
add
mov
out
(bad)
jp
ficomp
adc
fisttp
shr
pusha
popa
enter
in
lods
(bad)
shl
into
outs
call
sub
call
sbb
or
cs
inc
and
inc
cmp
xchg
sub
xchg
(bad)
xor
jl
clc
test
jle
sti
call
pop
mov
mov
or
dec
iret
dec
lahf
inc
lods
xacquire
and
xchg
dec
inc
aaa
je
dec
lods
fadd
xor
adc
(bad)
nop
and
or
leave
nop
jo
mov
jno
imul
in
sub
scas
jno
out
mov
fs
mov
stos
movs
or
fild
sahf
push
outs
in
mov
(bad)
out
xchg
clc
fild
jae
jle
fldcw
emms
xchg
sbb
fwait
pop
push
(bad)
sti
mov
in
lods
lods
jmp
push
add
pop
arpl
mov
gs
or
ins
outs
popf
mov
push
and
cmps
mov
out
fsub
dec
cmps
lahf
jmp
sbb
fistp
jl
sbb
movs
jae
(bad)
in
push
cmp
int
nop
es
push
das
iret
pusha
add
test
xor
push
cmp
loop
fld
out
mov
mov
in
push
inc
add
out
mov
add
xor
jnp
and
enter
ret
and
and
(bad)
lock
aas
sub
add
add
push
jo
out
and
mov
pop
int
addr16
mov
outs
pop
retf
mov
loope
pop
imul
out
pop
mov
or
or
cs
(bad)
xchg
popf
pop
pushf
sub
mov
gs
call
push
push
push
inc
xchg
cmp
stc
mov
popf
mov
sub
stos
pop
cmc
mov
not
xchg
stos
ins
mov
cwde
xor
add
mov
or
add
jae
push
(bad)
arpl
fwait
sbb
or
jae
xor
push
lods
jne
pusha
mov
dec
fcom
and
jge
xchg
sub
stos
or
or
sbb
repnz
cmc
call
add
icebp
add
fist
mov
jge
jbe
adc
cmps
dec
in
bound
mov
xchg
sub
into
cwde
dec
and
sbb
je
fwait
lods
dec
sub
call
jae
mov
mov
outs
pop
rcl
jge
sub
adc
je
scas
jne
hlt
and
mov
fistp
push
jns
adc
dec
movs
xchg
shl
out
push
mov
sbb
jmp
mov
xchg
mov
push
icebp
sbb
pop
add
and
outs
dec
ret
popf
push
fs
inc
jecxz
xor
fcomp
das
js
pop
pop
sub
into
popa
test
out
or
loop
out
cmp
pop
mov
mov
popf
xchg
mov
movs
adc
cwde
cmc
mov
adc
push
sbb
iret
popa
test
xchg
jmp
mov
jnp
or
iret
jp
aaa
rcl
sahf
sahf
out
scas
enter
mov
ins
ins
xor
repnz
pusha
mov
(bad)
int
scas
rol
leave
push
mov
ins
sti
push
hlt
mov
les
fcomp
js
fst
jge
dec
mov
push
adc
adc
xor
mov
adc
and
xchg
and
sub
out
(bad)
push
or
imul
cmp
xchg
into
sbb
dec
or
xor
les
lahf
pusha
in
adc
ins
push
je
mov
or
push
sbb
cli
or
stc
mov
lods
mov
pop
dec
loopne
repz
mov
pop
adc
add
sbb
enter
mov
inc
(bad)
fdivr
inc
stos
or
pusha
(bad)
cmp
sub
fdiv
inc
sbb
lahf
es
push
shl
xor
inc
(bad)
xor
pusha
ja
xor
mul
cmps
pop
ins
inc
mov
lds
mov
pop
inc
iret
sahf
pushf
pop
push
xchg
jns
(bad)
mov
mov
push
jne
int
bound
rcl
fisubr
scas
adc
into
pop
xchg
inc
ss
jmp
das
mov
or
xchg
push
sub
cmp
xchg
lods
call
pushf
sbb
repz
cli
pop
dec
test
repnz
ins
sbb
lock
call
clc
jl
add
xor
cmp
mov
dec
inc
iret
adc
mov
cmp
push
inc
cmp
sbb
push
mov
add
add
retf
call
xor
dec
gs
nop
mov
loop
(bad)
das
das
pop
push
pop
retf
repnz
(bad)
dec
sub
sti
mov
cmps
dec
pop
push
cli
jnp
mov
shl
int3
add
repz
sbb
es
in
test
push
cli
cmps
and
inc
push
hlt
js
nop
rcl
cmp
push
fs
lods
daa
addr16
xchg
add
sar
xchg
in
mov
mov
pop
adc
stc
adc
mov
ror
cmp
lds
push
jne
aas
and
(bad)
jp
dec
xchg
dec
pop
aas
fcmovb
test
xchg
pop
jne
mov
popa
pop
sub
xchg
pop
inc
ins
mov
jns
pop
mov
mov
mov
movs
lds
adc
loopne
cli
xchg
mov
js
pop
std
sbb
push
scas
and
test
and
lods
dec
movs
cmp
mov
sar
popf
and
mov
jmp
std
mov
out
xchg
pop
dec
xchg
in
ins
inc
sbb
inc
pop
(bad)
mov
lahf
cmp
sbb
cmp
jno
push
jp
mov
loopne
shr
out
enter
fistp
fwait
cld
shl
ret
dec
mov
inc
sahf
mov
imul
adc
aam
cmps
bound
inc
lock
aad
cmp
sbb
jecxz
fisttp
xor
clc
xor
into
fisubr
mov
xor
mov
call
sub
add
xor
jg
je
outs
pushf
fwait
les
sahf
test
pop
sub
test
jns
iret
pop
mov
cmp
mov
sub
sbb
fdiv
xchg
in
mov
dec
jl
bnd
retf
jge
int
loope
jbe
xor
mov
retf
dec
popa
dec
mov
and
aad
jmp
push
and
jbe
popa
xor
dec
push
sub
rcl
jnp
xchg
xchg
xor
int3
jecxz
aaa
xchg
push
outs
enter
aad
push
arpl
jbe
and
lahf
mov
out
push
xor
xchg
ret
jnp
xor
xor
ss
frstor
retf
fwait
xor
cdq
aaa
mov
mov
sar
push
cmp
pop
bound
mov
pop
dec
or
or
jle
pop
outs
dec
dec
cld
inc
hlt
mov
loop
mov
jecxz
popf
cmp
imul
ret
cmps
jle
leave
jo
pusha
push
aaa
push
adc
fnstsw
mov
(bad)
in
jp
push
xchg
test
rol
mov
lods
imul
(bad)
gs
sbb
push
in
xchg
jmp
mov
sbb
enter
xchg
pop
mov
inc
out
loop
ja
ja
xchg
sub
test
xor
test
mov
movs
std
jecxz
retf
mov
or
es
cs
lahf
push
adc
retf
inc
mov
mov
iret
mov
cmps
cli
mov
or
cwde
cld
cmp
rol
aaa
jo
mov
int
or
mov
mov
mov
cld
or
push
and
mov
jno
add
rol
or
ds
or
imul
aaa
mov
arpl
pop
nop
jp
stc
pop
rcr
fs
cmp
add
xchg
mov
sub
data16
jecxz
pop
lock
xchg
out
sub
popa
xchg
cmp
sti
sahf
es
mov
loopne
ins
mov
pop
xchg
ins
push
jmp
(bad)
dec
pop
enter
out
nop
int
sbb
sub
test
jne
adc
loope
push
icebp
push
mov
adc
jmp
xchg
leave
in
inc
shl
jmp
xor
or
dec
sub
jmp
pusha
loop
or
inc
stos
and
or
mov
and
cs
and
mov
push
imul
push
cmps
test
mov
repnz
pop
cmp
stos
jl
es
gs
fwait
mov
and
sub
jl
mov
xchg
test
pcmpeqd
lods
and
dec
dec
sti
rcl
or
pop
push
push
mov
sbb
out
xor
mul
push
mov
xor
mov
mov
sub
lock
or
xchg
lock
xor
clc
and
adc
dec
int
outs
xor
call
popa
iret
cmp
inc
cmp
inc
mov
std
and
(bad)
ficom
(bad)
push
icebp
dec
pusha
rcl
stc
xchg
xchg
mov
ficomp
ins
movs
and
xor
and
call
push
mov
popf
gs
imul
cmp
pushf
jne
xchg
iret
pop
sbb
scas
sbb
ins
push
in
mov
movs
sub
sub
mov
pop
jno
mov
mov
cdq
add
xor
sbb
out
jg
push
or
mov
stos
inc
test
or
push
retf
sahf
mov
dec
jae
xor
hlt
xor
out
pop
add
jp
xor
mov
push
xchg
ror
sbb
xor
pmuludq
aam
xchg
test
sub
loopne
mov
add
cli
xchg
lods
out
iret
and
sub
dec
mov
mov
mov
mov
(bad)
xchg
ds
pop
or
jge
dec
adc
shr
sub
test
fwait
mov
clc
push
jge
das
(bad)
mov
sub
movs
(bad)
stos
test
ret
add
(bad)
int3
movs
test
iret
loopne
div
dec
lods
mov
enter
cmps
or
stc
(bad)
mov
ret
jmp
cmp
stos
clc
add
fisttp
and
jbe
(bad)
push
push
mov
je
push
jne
cmp
jo
push
pop
jae
fwait
inc
push
rcr
in
push
in
jle
repnz
and
fbld
retf
push
mov
cmc
cmp
cmp
adc
lds
cmp
cmp
or
dec
xchg
push
cmp
push
pop
stos
jge
sub
pop
xchg
pusha
push
cmps
daa
adc
push
sbb
sbb
mov
gs
add
clc
pop
mov
pushf
in
sbb
push
aam
push
sub
mov
(bad)
cmp
fisttp
call
dec
call
mov
pop
(bad)
jne
push
fdivrp
addr16
rcl
inc
fistp
test
cmp
mov
mov
mov
scas
jl
out
sti
add
jecxz
pop
push
add
js
push
fs
bound
add
repnz
daa
inc
and
jns
mov
mov
push
ins
leave
xor
in
sti
mov
add
js
js
push
pop
add
mov
mov
xor
ss
popa
xchg
shr
xchg
jne
mov
sti
(bad)
mov
and
cmp
int
xlat
aad
inc
adc
sbb
leave
adc
cld
or
push
rcr
mov
(bad)
out
jl
cdq
mov
(bad)
js
cmc
mov
cmp
push
pop
in
test
cmps
pop
popf
(bad)
mov
sbb
les
or
ins
xchg
xchg
mov
dec
cmp
aam
fnsave
aaa
pop
dec
(bad)
stc
mov
leave
push
xchg
adc
or
test
ins
xchg
adc
ror
dec
mov
aas
push
push
data16
aaa
inc
cld
push
push
mov
mov
jmp
loope
popa
push
xor
mov
mov
outs
sbb
pop
adc
jbe
(bad)
sbb
jbe
and
movs
jg
arpl
add
stos
jae
stos
js
mov
into
mov
xor
push
rcr
jns
mov
xor
pusha
pop
mov
fbld
mov
mov
xor
mov
in
adc
inc
or
(bad)
xchg
xlat
sbb
jnp
inc
imul
cwde
lahf
popa
movs
mov
and
push
std
xchg
xchg
adc
leave
jle
rcl
dec
dec
inc
xchg
adc
(bad)
sub
mov
push
jae
jno
lock
and
mov
sub
ret
add
push
mul
add
dec
push
sar
addr16
fdivr
std
adc
shr
push
cmp
jmp
mov
lods
mov
add
sbb
sub
cmp
data16
and
adc
xchg
sbb
pop
cmps
xchg
aad
and
setp
pop
pusha
cld
adc
adc
(bad)
das
fcomp
hlt
add
jmp
(bad)
pop
and
arpl
ja
imul
add
xchg
cwde
adc
outs
hlt
jmp
or
in
mov
shr
iret
in
retf
das
adc
inc
retf
cs
scas
push
cmps
and
ror
and
cmp
sbb
add
hlt
lds
cmp
adc
xor
in
pop
call
pop
aad
and
gs
aad
(bad)
and
mov
icebp
(bad)
adc
inc
imul
data16
add
sbb
xchg
scas
mov
xor
or
sub
cmps
retf
mov
shl
nop
add
or
inc
jp
sahf
fs
iret
add
lods
fild
aas
jg
mov
mov
out
imul
pop
xchg
aad
ret
fldz
mov
ss
sbb
enter
sub
add
fisttp
mov
mov
sbb
sbb
add
(bad)
ret
push
int3
lea
add
retf
lahf
jmp
adc
jle
movs
int3
pop
lock
out
pushf
shl
sahf
(bad)
fstp
dec
rol
or
ins
mov
addr16
mov
ja
push
pusha
leave
aam
mov
ror
(bad)
xlat
add
(bad)
scas
(bad)
jmp
lods
xchg
les
mov
mov
pusha
jne
aam
imul
ret
pushf
loop
dec
lahf
xchg
adc
(bad)
mov
inc
xchg
cdq
das
bound
and
cs
lahf
sbb
jecxz
and
test
mov
fidivr
cs
mov
pop
sti
cmp
mov
add
imul
mov
xchg
in
fistp
in
xchg
sar
call
xchg
int3
inc
push
pop
fcom
(bad)
jo
sahf
ds
dec
mov
leave
stos
dec
lahf
mov
stos
rol
and
jno
rcl
(bad)
push
cmp
cdq
ja
jae
pop
adc
lds
fwait
dec
aad
sahf
xchg
rcl
rol
sub
in
loope
fild
xor
mov
jp
pop
outs
mov
test
cmp
pop
jecxz
stos
add
mov
push
ja
mov
mov
add
xor
icebp
xchg
jecxz
mov
sbb
inc
sahf
or
mov
jbe
or
mov
(bad)
fucomp
mov
arpl
fs
jmp
jg
dec
imul
dec
sahf
mov
fmul
dec
inc
xchg
cmp
outs
dec
xor
fnstsw
mov
jge
xchg
push
cli
test
cli
shl
(bad)
imul
jge
aam
or
mov
out
mov
inc
mov
pop
mov
xchg
ficom
fwait
rcl
in
jmp
int3
adc
rcl
test
push
mov
and
mov
adc
inc
dec
push
jge
or
xchg
hlt
fist
call
or
jmp
push
stos
dec
(bad)
and
cmp
test
xchg
xchg
ficom
in
pop
shl
rol
sbb
xlat
or
xchg
pop
call
test
call
mov
mov
mov
sub
add
test
inc
sub
fadd
ja
movs
mov
pop
push
outs
add
xor
sub
(bad)
mov
fwait
shl
dec
cmp
movs
out
or
adc
daa
fucomi
(bad)
xor
int
dec
imul
js
dec
popf
sti
mov
add
push
je
movs
nop
fist
lea
inc
adc
sbb
ret
sub
mov
cmp
cmp
into
mov
adc
jmp
test
inc
sbb
sub
adc
xor
in
mov
mov
and
sub
cwde
sbb
cs
lods
push
ret
aam
xor
pop
mov
mov
cmps
pop
push
dec
jb
mov
sar
mov
mov
(bad)
ja
icebp
mov
mov
jo
hlt
aaa
dec
add
dec
jmp
outs
jge
push
or
mul
lods
fsub
add
pop
pmuludq
mul
adc
add
in
jns
test
ins
push
sbb
movs
shl
jns
shl
mov
adc
(bad)
sub
out
int3
js
sti
loop
sahf
fdivr
dec
pop
cli
sar
jmp
int
out
push
iret
stos
adc
icebp
sbb
push
loopne
sub
movs
xlat
adc
and
or
mov
dec
dec
jne
pop
sbb
pushf
neg
dec
push
dec
lock
push
inc
add
je
retf
pop
fild
loope
xor
sub
out
push
daa
ret
jb
mov
ins
sub
clc
rcr
mov
mov
xchg
dec
scas
mov
or
repz
cmp
std
sbb
mov
adc
scas
dec
jg
push
cmps
jecxz
loope
sub
dec
pop
jecxz
jmp
popf
adc
sbb
xor
cld
icebp
call
out
retf
sub
xor
js
retf
retf
or
test
ficomp
jl
push
or
xor
cmp
jp
mov
aaa
mov
cmp
call
test
lea
sub
lods
add
mov
push
jg
mov
fs
jae
push
push
inc
(bad)
dec
jbe
mov
lods
scas
mov
push
xchg
jmp
add
dec
jno
test
mov
xchg
test
int3
inc
cmp
jp
or
cdq
adc
pop
leave
push
push
jp
dec
or
mov
fisubr
jg
push
loope
mov
out
pusha
xchg
pop
addr16
pop
(bad)
fstp
sti
lods
and
jo
dec
sub
mov
lods
cmp
leave
adc
xor
fiadd
shr
cmp
xchg
cmps
pop
ds
cmp
rcl
pop
idiv
bound
ins
xor
pushf
pop
cmp
cmp
popf
fsub
xor
add
out
xor
ror
mov
ret
and
or
out
and
inc
ficom
mov
(bad)
or
enter
inc
inc
gs
(bad)
enter
fisttp
out
rol
pop
mov
fst
loope
pop
outs
cmp
push
es
call
push
sub
jnp
out
mov
dec
fdivr
stc
or
call
imul
adc
xchg
sbb
jmp
cld
in
mov
lock
jo
pop
scas
ds
push
idiv
inc
and
das
cmp
mov
jno
push
mov
adc
add
shl
clc
es
ret
fisub
int
dec
inc
mov
iret
and
xlat
in
cdq
push
sub
and
lea
jbe
(bad)
popa
or
movs
mov
dec
xchg
mov
jge
and
es
push
pop
test
add
(bad)
sub
or
sbb
pop
pop
pop
(bad)
movs
repnz
xchg
push
ret
mov
sub
add
jg
aad
fmul
dec
add
shl
stc
ja
lock
(bad)
movs
ins
(bad)
imul
jg
in
cld
inc
shl
imul
mov
fisttp
sbb
mov
or
xor
push
or
movs
retf
stos
pop
mov
out
idiv
int
xor
sbb
jecxz
mov
mov
rcl
loop
xchg
jmp
push
mov
loopne
cmp
mov
ins
cmc
mov
leave
pop
arpl
in
sub
cmp
sbb
cld
loopne
inc
and
test
mov
jecxz
pop
push
sub
xchg
push
push
push
mov
shl
and
les
(bad)
add
pop
xor
clc
pop
xchg
popa
loop
ds
jle
ds
and
and
icebp
or
mov
add
and
xor
jmp
dec
sbb
popa
adc
adc
std
sub
pop
out
test
jae
leave
xor
rcl
lock
xchg
(bad)
cwde
inc
das
cmp
add
js
xrstors
xchg
and
adc
cmps
inc
or
cmp
sub
pop
popa
cmp
xchg
stos
ss
jb
xchg
mov
jge
inc
in
xor
push
adc
add
jl
in
repz
movs
test
dec
je
pop
inc
loop
fsub
mov
add
or
dec
out
(bad)
xor
mov
cld
inc
adc
iret
ret
iret
loopne
or
lods
pop
sub
sbb
hlt
pop
xlat
cmps
jnp
mov
sti
jnp
mov
or
das
xchg
mov
sub
into
mov
mov
(bad)
(bad)
in
mov
pop
push
in
adc
iret
pop
les
mov
sbb
fbstp
pop
push
in
stos
jno
push
fisttp
jne
call
push
pushf
mov
mov
in
loope
loope
mov
sub
loope
mov
mov
cdq
adc
and
mov
cmp
cmps
out
cmc
sbb
imul
mov
add
sub
mov
dec
ins
fwait
repz
mov
dec
or
jb
mov
mov
xchg
das
test
mov
inc
xchg
stos
cmp
mov
nop
(bad)
neg
fwait
out
daa
jnp
cld
push
push
mov
ins
cmp
lea
pop
sar
cwde
mov
aam
xlat
test
and
push
add
out
xor
test
inc
ret
fist
mov
cmc
ins
adc
retf
mov
in
sti
les
lds
imul
jle
rcr
add
mov
int
jns
xor
add
xor
mov
pop
mov
or
push
push
repz
fucomp
add
fs
xchg
sti
(bad)
out
lahf
dec
mul
jb
test
imul
jo
cmp
sub
and
pop
(bad)
movs
(bad)
imul
inc
ss
mov
mov
sub
pop
pop
lods
(bad)
das
jg
pop
aad
ret
cmp
jns
cli
cwde
push
fsubr
sub
jg
inc
in
es
mov
(bad)
faddp
cmp
mov
push
and
mov
lahf
mov
jp
jge
xchg
sbb
mov
cdq
ss
adc
ret
jno
repz
sub
addr16
mov
sub
mov
movs
test
mov
jecxz
fisttp
sub
idiv
mov
push
out
les
inc
popf
test
leave
dec
popa
jo
rol
mov
into
jmp
in
xchg
or
sub
outs
add
pop
fwait
xor
in
call
inc
pop
xor
test
aam
das
popa
nop
sub
push
sub
outs
aam
sahf
repz
push
pop
ja
inc
jmp
popa
mov
adc
sti
std
dec
cmp
pop
cmp
fild
push
mov
(bad)
lahf
cli
pop
add
adc
ret
clc
xchg
outs
xlat
mov
mov
mov
out
adc
fcomp
sbb
outs
sub
lods
imul
xchg
std
sbb
sti
(bad)
retf
in
add
sbb
push
or
(bad)
adc
xor
mov
out
sbb
dec
pop
fldcw
leave
pushf
push
stc
repz
loope
jne
push
xlat
or
ret
adc
adc
cwde
push
cdq
push
fdivr
jecxz
sbb
ret
pop
lock
or
add
sub
data16
and
inc
arpl
sub
and
cmps
mov
or
ret
xchg
inc
adc
cmp
daa
adc
cmp
retf
pop
xor
jo
push
cs
retf
mov
jb
lea
dec
aam
sbb
bound
add
stc
mov
push
mov
add
gs
fistp
cmps
(bad)
mov
lods
es
scas
js
cbw
ins
pop
lahf
rcr
pop
cmp
jge
sub
sbb
clc
sub
fistp
add
sahf
loopne
cmp
mov
mov
fldz
mov
repnz
lods
jb
and
and
jecxz
cmps
mov
dec
jmp
dec
in
mov
repz
cmp
sub
or
adc
clc
adc
dec
add
jno
clc
add
pop
pop
mov
xchg
dec
xlat
(bad)
and
clc
fimul
mov
or
mov
out
jne
call
and
mov
test
jmp
cdq
(bad)
lock
stc
enter
lea
in
pushf
popf
das
mov
cmp
add
inc
mov
into
addr16
jecxz
nop
adc
idiv
or
xchg
mov
repnz
imul
push
jmp
cmp
(bad)
dec
sbb
mov
ja
jo
pop
and
jnp
xchg
sbb
mov
inc
push
mov
data16
pop
cs
jnp
pop
stos
mov
inc
or
adc
cmpps
adc
jge
out
add
stos
stos
cdq
xchg
mov
pop
mov
pop
sbb
lods
jae
xchg
sub
ins
leave
add
shl
loope
mov
pop
sbb
out
push
inc
pop
jmp
rcr
add
jmp
cdq
inc
inc
push
inc
aam
(bad)
movs
mov
mov
(bad)
scas
sar
sbb
cmp
ret
sub
faddp
sbb
popf
sub
inc
xor
int
(bad)
in
cld
mov
cmp
gs
test
(bad)
mov
addr16
push
or
pop
mov
mov
cmps
(bad)
iret
and
add
mov
arpl
mov
jmp
sbb
sub
pusha
dec
sub
xchg
fwait
pop
out
inc
(bad)
adc
mov
aam
pop
or
push
sbb
sub
sub
adc
lods
or
push
jmp
xchg
adc
cmps
cmps
hlt
js
jns
dec
inc
mov
cmps
add
push
cmp
int3
repnz
mov
mov
and
lea
lods
adc
daa
adc
mov
sbb
inc
dec
jp
push
sar
cmp
imul
movs
pop
in
fild
sahf
push
pop
les
enter
ret
push
pop
call
jns
pusha
in
das
sub
cs
retf
daa
call
rcl
mov
(bad)
adc
lahf
shl
mov
aad
subps
(bad)
daa
sub
add
xor
lds
repz
sbb
das
push
pop
sahf
dec
xor
stos
ss
or
ror
hlt
xor
add
sti
aaa
lea
ins
pop
jne
es
data16
xchg
int3
xchg
ret
push
div
cdq
imul
adc
mov
dec
jne
rol
test
push
(bad)
push
pusha
fwait
aas
in
push
push
add
xor
push
sub
mov
push
rol
out
inc
push
mov
int3
and
xlat
ja
sbb
cdq
dec
inc
inc
or
int
cld
pushf
test
push
mov
cld
mov
cmp
movs
dec
push
and
mov
pop
xor
adc
xor
loope
pop
dec
xchg
gs
push
movs
enter
add
mov
out
dec
out
sar
jo
pusha
movs
cli
mov
stos
and
scas
mov
popa
inc
stos
hlt
iret
aam
outs
adc
jae
mov
xor
inc
imul
push
or
iret
pop
lods
sti
add
outs
push
mov
out
addr16
mov
popa
ss
out
test
add
cmp
ins
aas
sub
add
test
ret
push
mov
jns
bt
enter
dec
std
pop
fsubr
retf
movs
xor
mov
pop
pusha
(bad)
in
cmp
xchg
jl
add
add
or
call
mov
pusha
addr16
pusha
imul
int3
scas
aam
out
pop
dec
repz
in
ficom
dec
xor
loope
imul
mov
das
ret
push
xor
cmc
mov
shl
fst
ins
jge
cmps
(bad)
daa
mov
mov
sbb
bound
mov
(bad)
or
(bad)
cmps
(bad)
test
dec
lods
fwait
nop
sbb
out
out
adc
push
daa
and
ror
sbb
cmps
cmps
loope
inc
jno
push
xor
push
mov
and
push
fnstcw
inc
sbb
jmp
jbe
in
test
nop
loop
addr16
retf
cwde
call
add
call
test
enter
sbb
outs
mov
scas
pop
xor
xchg
pop
not
int3
sub
cs
and
arpl
pushf
cmc
pop
ins
jle
into
dec
mov
adc
xchg
ins
scas
div
push
add
inc
pop
dec
std
jl
rcr
mov
rol
cmps
clc
sub
shl
loope
xchg
sub
fwait
push
adc
mov
ret
outs
cs
loope
and
std
mov
push
dec
fs
sub
retf
cmps
and
std
mov
add
cmp
mov
int
dec
addr16
sbb
cld
sar
push
test
sbb
cmp
mov
sahf
fcomp
neg
imul
xchg
jge
stos
push
mov
fs
mov
call
jge
mov
push
movs
daa
mov
jp
push
sbb
and
pop
hlt
hlt
mov
test
dec
pop
and
popf
fldenv
and
arpl
in
sub
dec
mov
loopne
jbe
(bad)
push
movs
xchg
cli
pop
int
retf
adc
jno
call
push
or
xchg
out
xor
mov
int
retf
mov
mov
dec
or
jl
jecxz
mov
dec
cmp
in
adc
jle
inc
xchg
mov
addr16
jno
xor
retf
xor
mov
and
aas
xchg
add
aad
jne
pop
sub
push
push
inc
jno
and
fisubr
xchg
out
jnp
dec
loop
sbb
inc
or
push
data16
pop
xchg
fld
push
hlt
or
mov
dec
jg
je
ret
push
imul
mov
jb
jmp
popf
fwait
(bad)
in
cmc
cmp
inc
icebp
iret
js
retf
mov
jo
push
call
loop
in
sti
xchg
sub
loopne
mov
sbb
inc
mov
mov
test
push
and
(bad)
inc
fcmovnu
into
xchg
hlt
mov
pop
(bad)
jmp
loop
(bad)
adc
cdq
xchg
adc
add
or
xchg
xchg
sbb
push
imul
sub
push
and
xchg
adc
jp
mov
push
push
bound
xchg
test
mov
mov
push
and
test
mov
xchg
imul
dec
pop
jge
(bad)
fisubr
sbb
imul
jge
adc
add
sbb
loopne
gs
cld
cmp
js
aam
cmp
cmp
cmp
pop
mov
pop
ja
enter
lea
fwait
jo
popa
adc
push
mov
imul
pop
ins
movs
pushf
mov
cmp
or
pop
and
mov
dec
stos
mov
push
loope
xchg
movs
mov
fisub
add
aaa
xlat
mov
cmp
call
or
(bad)
pop
aas
daa
push
xchg
mov
sbb
push
xchg
call
(bad)
mov
mov
cmps
xchg
jp
sbb
into
dec
outs
cmp
push
lods
nop
sbb
nop
sub
mov
pop
jp
adc
in
lods
aad
cmc
popf
xor
icebp
or
in
out
loope
loop
cs
sub
out
inc
out
ins
(bad)
pop
fs
cmp
mov
ret
push
jmp
test
in
mov
and
mov
sti
push
inc
in
lahf
xchg
mov
xchg
cs
add
xchg
movs
jcxz
pop
push
rcr
xor
jle
repnz
mov
xor
or
and
into
fadd
out
cmp
call
push
imul
fwait
cmps
lahf
and
push
xchg
shl
cmp
or
es
mov
mov
or
xchg
or
cmps
adc
popa
pop
scas
and
inc
and
add
add
in
or
pop
mov
sub
std
dec
mov
adc
ins
lds
(bad)
mov
sub
pop
test
mov
inc
lahf
rol
sbb
nop
sbb
arpl
cmc
mov
xor
ret
adc
(bad)
out
popa
cmp
pop
lea
test
and
xor
cli
cmps
mov
out
dec
cmps
xchg
push
inc
std
mov
add
stc
mov
sbb
pop
out
(bad)
std
out
addr16
aad
in
call
scas
xchg
aam
ret
not
scas
scas
lea
dec
lahf
sti
mov
clc
inc
xchg
retf
or
ror
out
adc
push
ror
push
ret
dec
mov
mov
or
jae
pop
ror
xor
mov
dec
push
rol
outs
jb
in
mov
mov
sbb
dec
rcl
ins
xor
sub
shr
sar
sti
stos
movs
lods
leave
ss
or
sbb
fimul
leave
mov
jg
jmp
dec
push
movs
xor
jns
mov
mov
or
sub
std
neg
dec
cmc
imul
or
and
jo
xchg
jmp
test
jle
sbb
dec
into
cli
jl
xchg
xor
push
je
cmp
xchg
fsubr
sbb
test
or
jp
(bad)
and
inc
adc
add
xor
push
pop
popa
arpl
fst
call
lods
ret
arpl
push
sar
ins
add
jnp
xor
push
sbb
pop
mov
stos
das
ja
jmp
ja
iret
mov
mov
(bad)
push
sub
enter
inc
lods
inc
mov
jb
enter
dec
jo
(bad)
loope
movs
test
out
cmp
add
pop
xchg
adc
dec
hlt
je
popa
(bad)
in
cdq
int3
xchg
sahf
xchg
push
(bad)
mul
imul
or
frstor
out
stc
cmp
adc
mov
fadd
(bad)
sbb
enter
xchg
ret
stos
inc
bound
ret
add
or
ficomp
push
lock
mov
add
out
sti
lds
cld
outs
lea
out
pusha
enter
mov
aaa
fdiv
retf
or
out
ret
inc
sub
ins
push
sbb
sbb
adc
pop
mov
in
jmp
cli
sbb
rcl
pusha
pop
cmps
push
cmp
push
ds
and
xlat
sbb
rol
in
lea
add
nop
mov
in
dec
xchg
add
xor
cmp
into
pop
lahf
push
xchg
in
and
pop
out
(bad)
inc
mov
jne
sub
sub
fist
xor
mov
mov
dec
mov
mov
fbstp
rol
aam
(bad)
xor
or
push
push
mov
add
push
push
sub
mov
(bad)
xlat
out
jge
stos
sub
push
clc
dec
push
test
mov
pop
adc
arpl
mov
lock
mov
mov
and
cli
loopne
je
mov
push
(bad)
sub
hlt
add
mov
mov
jle
enter
cld
adc
jb
add
mov
push
imul
dec
jl
push
sub
shl
sbb
mov
lock
lods
jg
(bad)
nop
dec
xor
xchg
rcr
mov
test
arpl
in
shl
add
sbb
stos
(bad)
jae
inc
sbb
fadd
jmp
or
and
sub
retf
jbe
jns
shr
xchg
pop
sub
or
sbb
outs
mov
mov
lds
cmp
adc
dec
mov
sub
out
and
cmp
loop
scas
stos
test
shl
xchg
jnp
xor
jg
shl
and
(bad)
cwde
jp
inc
call
dec
xchg
sub
nop
das
xchg
mov
inc
rol
push
mov
lahf
rcl
and
add
inc
lods
icebp
mov
pop
fidiv
xchg
arpl
popf
retf
stc
inc
mov
adc
sbb
pop
mov
mov
add
hlt
fisub
and
adc
sar
int3
ror
lods
hlt
dec
xor
mov
mov
cmp
jmp
pop
icebp
dec
fbld
loope
popf
pop
adc
lock
adc
jmp
jecxz
mov
jg
mov
and
addr16
dec
stos
dec
shl
or
mov
jge
cmps
cmp
jno
out
jg
jg
in
add
(bad)
jg
sub
dec
add
std
ds
mov
in
sbb
or
cdq
mov
out
mov
pop
(bad)
lods
mov
add
sbb
inc
jecxz
xchg
mov
mov
jmp
pop
xor
cdq
div
pop
imul
into
ds
movs
repnz
add
cmp
pop
jecxz
xor
xchg
add
xor
xor
inc
push
out
mov
mov
stc
fsub
push
push
in
mov
push
sbb
es
adc
das
inc
mov
cmps
pop
sbb
shl
pop
and
cmc
ins
int
inc
sub
pop
ins
shr
add
sti
sbb
sub
pop
lods
popa
fs
xor
sub
call
add
add
jns
fisub
in
sub
push
cld
jbe
(bad)
das
rol
sbb
(bad)
imul
ja
dec
mov
shr
cmps
jge
adc
ja
sbb
dec
out
(bad)
cs
cmc
nop
push
dec
ret
fdiv
push
inc
mov
inc
(bad)
test
mov
jge
stc
add
(bad)
mov
sbb
mov
adc
mov
jnp
rcl
ja
sub
stos
inc
movs
pop
pop
out
dec
pop
js
and
pop
jecxz
aad
sbb
and
test
std
iret
jp
hlt
or
ficomp
and
int
mov
xchg
jae
movs
ds
movs
inc
fisttp
sahf
inc
test
sub
popf
cld
popf
scas
pop
test
xchg
mov
scas
xchg
movs
xor
xchg
push
push
rcr
out
jno
mov
add
add
fwait
sbb
sar
repz
cmps
pop
aam
test
aas
jns
jne
stos
dec
rcl
xor
xchg
scas
test
and
enter
jg
retf
mov
jae
or
sub
popa
sub
clc
push
or
test
lods
jle
mov
jb
xor
invd
pop
or
mov
cmc
cmp
jp
stos
xchg
clc
inc
mov
imul
pop
out
call
xor
nop
and
lock
cmps
xor
push
mov
nop
and
sub
push
jg
xchg
add
jne
mov
add
mov
dec
ins
jecxz
aas
neg
in
dec
xchg
aas
jb
jle
stos
ja
hlt
stos
scas
pop
imul
(bad)
adc
sub
fcom
(bad)
sar
fld
add
repz
cs
retf
sub
xor
cmp
adc
sub
inc
in
cmc
call
mov
sub
sbb
adc
fdivr
sub
das
push
pop
dec
jne
call
push
shr
daa
sub
or
jne
jns
and
push
mul
out
ja
cld
pop
sub
dec
push
leave
enter
lods
cli
mov
or
call
pop
lea
leave
retf
movs
cmp
(bad)
aam
sbb
loopne
xor
call
sbb
neg
dec
ret
mov
aad
xchg
test
cmp
jnp
pop
dec
stos
movs
jno
pop
fscale
and
test
int
push
test
dec
mov
mov
sbb
ret
sbb
bound
jmp
sub
sbb
retf
imul
cmc
and
rcl
fnsave
test
ds
hlt
je
xor
mov
inc
inc
fdiv
pop
repnz
loop
jo
mov
not
loopne
fiadd
xchg
cmc
sbb
or
movs
shr
(bad)
dec
aam
std
sbb
(bad)
jo
jg
mov
rcl
les
rcl
inc
mov
push
and
and
ret
jbe
ja
mov
fldcw
pop
dec
and
adc
or
xchg
ins
test
jmp
call
add
pop
int3
pop
repnz
in
cmc
in
fs
(bad)
lods
jbe
outs
cmp
aad
cmps
xchg
mov
inc
sub
stc
out
jle
mov
aas
call
pop
daa
repnz
xchg
mov
cmp
adc
inc
xchg
gs
push
daa
or
mov
pop
retf
test
or
mov
jmp
jnp
pop
ficom
pop
mov
dec
dec
in
repnz
test
jmp
and
dec
add
cmp
mov
pop
add
or
ins
xor
jmp
loope
mov
ins
dec
and
mov
sbb
xchg
fnstcw
cmp
loope
or
mov
sub
loop
jge
shl
sbb
loop
mov
push
(bad)
mov
fmul
sbb
fist
les
mov
call
das
sti
in
mov
into
mov
fs
push
jo
cwde
sub
adc
int
scas
sbb
das
jb
mov
xchg
mov
and
cwde
sub
mov
cmp
test
xchg
(bad)
cmc
ds
mov
xchg
(bad)
inc
push
mul
or
xchg
das
imul
push
add
push
sar
add
(bad)
sbb
pop
dec
jb
xchg
push
adc
sub
xchg
call
arpl
xchg
shr
xchg
push
pop
stos
or
rcl
outs
repz
sar
scas
cld
in
xchg
out
(bad)
jb
repnz
mov
aam
or
mov
push
push
push
pop
and
loop
jbe
out
push
push
cli
movs
pushf
rcl
dec
popa
and
jg
push
and
aas
lock
je
cmps
out
stos
xchg
dec
mov
imul
loopne
cs
jge
mov
js
sbb
inc
mov
sbb
jle
stc
fmul
jp
in
rcl
cmp
frstor
xchg
bswap
pushf
dec
movs
adc
cmp
add
xlat
rcr
(bad)
mov
test
test
pop
test
dec
lock
in
int
sbb
lods
mov
sbb
adc
cmp
icebp
push
nop
sbb
jno
dec
push
push
scas
ror
cli
mov
cmps
pop
inc
fnstenv
sub
ret
adc
aas
cmp
inc
mov
mov
adc
dec
xchg
push
adc
ins
stos
clc
pop
inc
jl
xor
ret
dec
mov
(bad)
enter
inc
sahf
mov
ror
push
call
test
cmc
sbb
inc
fnstcw
adc
js
pop
icebp
aam
push
add
outs
scas
movs
sbb
xchg
add
mov
jns
movs
ror
rcl
jno
inc
stc
push
test
adc
xor
push
xchg
rcl
rol
inc
cwde
push
xor
lds
cmp
ins
mul
(bad)
push
mov
mov
fdiv
mov
xor
div
and
stos
test
or
add
cmps
or
pushf
movs
dec
retf
push
popf
je
scas
out
xor
and
lods
jns
ror
in
cmps
mov
add
sahf
sahf
ret
xor
js
xchg
test
sar
mov
ss
(bad)
sahf
movs
add
outs
or
or
(bad)
les
jbe
cmp
dec
add
fwait
fwait
push
fstp
sbb
inc
clc
and
pusha
int3
out
fwait
inc
stos
pusha
push
gs
jne
xor
aas
push
xchg
add
push
mov
fsub
and
stos
scas
mov
jb
aad
call
sahf
jecxz
sahf
sub
push
jo
cdq
or
loopne
imul
test
sbb
jmp
cmps
jae
das
xchg
mov
loope
mov
cs
and
iret
xor
call
cmps
(bad)
shl
push
adc
scas
imul
xchg
adc
daa
sbb
cwde
mov
mov
mov
iret
push
mov
sub
js
add
inc
sub
push
mov
inc
out
cmp
cwde
dec
ja
sbb
mov
cmp
test
inc
aas
mov
and
movs
in
mov
sbb
cmp
xor
inc
loope
ds
(bad)
stos
mov
and
sub
xchg
dec
jmp
sub
dec
mov
push
push
movq
add
daa
inc
inc
mov
sbb
ins
mov
add
pop
sub
push
js
sub
mov
xchg
mov
and
sbb
lds
and
push
fsub
and
loop
ja
mov
outs
or
sub
je
mov
(bad)
sub
retf
sahf
xlat
sub
push
jg
sbb
rol
outs
ja
xchg
jns
sbb
sub
or
xor
xchg
pop
aad
sub
test
adc
jb
pusha
jmp
sub
xchg
cs
mul
xchg
xlat
es
call
push
mov
mov
cdq
mov
std
dec
dec
pop
in
ret
pop
ret
(bad)
out
and
xor
mov
stc
ror
mov
and
mov
sub
xor
in
inc
sbb
sbb
adc
sbb
push
inc
push
mov
pop
xlat
loopne
mov
clc
repnz
mov
pop
and
test
clc
lods
fisub
mov
mul
loopne
fistp
jnp
sub
dec
aam
pop
mov
push
ins
add
stc
sar
lds
cmp
pop
mov
neg
imul
lahf
xchg
outs
cmp
xor
xor
jl
inc
sub
aaa
or
dec
dec
jno
movs
scas
xor
test
dec
xchg
sbb
and
fdiv
test
mov
pushf
je
cmp
pusha
cmps
inc
test
jo
int3
jmp
sub
out
int
and
sbb
push
dec
xor
add
imul
je
xlat
xchg
jg
jno
data16
cmp
push
jnp
ins
inc
inc
ss
pop
(bad)
and
add
inc
les
cwde
push
pop
mov
aam
sub
popf
mov
fwait
mov
dec
(bad)
pop
sub
mov
hlt
cmps
add
adc
test
dec
pop
ins
ss
mov
lahf
shl
xchg
cli
(bad)
into
call
and
pop
dec
or
adc
xchg
push
inc
cli
sub
inc
mov
fwait
cmp
repnz
add
clc
sbb
or
int
fidiv
rcr
in
daa
mov
push
pushf
dec
or
sub
frstor
(bad)
mov
xchg
pop
pop
in
outs
fiadd
jb
mov
loope
mov
in
mov
neg
pop
dec
mov
int3
dec
pop
add
or
push
or
xlat
dec
sub
(bad)
loopne
pop
lahf
out
(bad)
sti
fmulp
sbb
dec
jl
xor
(bad)
cmps
call
sbb
adc
mov
test
and
test
push
rcl
sub
inc
or
inc
daa
pop
das
jmp
in
jno
stc
mov
je
push
mov
push
sbb
(bad)
or
mov
loop
in
out
rcr
xchg
cs
out
jle
mov
pushf
in
(bad)
je
js
repz
inc
movs
or
xchg
shl
pop
or
push
cs
push
cmc
mov
mov
mov
pop
bound
cs
movd
xor
mov
mov
mov
dec
xchg
repz
into
jge
(bad)
js
les
cmc
mov
mov
xor
imul
sub
adc
xor
in
lods
neg
gs
lea
inc
pop
pop
sar
repz
loop
jle
sub
mov
mov
push
inc
jno
xor
jnp
mov
adc
aas
and
or
pop
xor
ret
lods
and
out
cs
push
pop
pop
jg
fwait
cld
outs
adc
sbb
mov
jle
ins
pop
jo
mov
or
inc
add
mov
xlat
fisub
xor
repnz
in
fst
cwde
mov
inc
pop
push
(bad)
fimul
mov
jae
cmp
xchg
and
mov
loop
inc
push
pop
hlt
sbb
inc
loopne
xor
dec
addr16
imul
icebp
ja
in
dec
or
pop
and
out
jns
sahf
out
fistp
loop
pop
jne
sub
push
loopne
ror
clc
lea
fidivr
jl
push
cli
xchg
sub
sahf
sub
test
jb
jbe
adc
xor
test
sbb
sub
or
shl
sub
fs
mov
sbb
aam
cmps
cld
jne
mov
cmp
lahf
xchg
adc
push
sbb
xchg
mov
add
and
into
cmp
mov
fcom
popf
pop
xchg
lods
dec
fnstcw
rol
sbb
(bad)
add
in
dec
add
xchg
xor
jl
mov
mov
pop
inc
jo
jns
ss
loop
clc
fs
jns
repz
sar
adc
jge
shr
rol
pop
jae
xchg
retf
cmp
push
mov
shl
xor
mov
push
pop
and
leave
sub
mov
js
xlat
shl
iret
in
aas
dec
ret
imul
xchg
jo
jnp
adc
dec
test
inc
dec
loop
rcr
daa
adc
cmps
mov
sbb
sbb
retf
popf
xor
pop
jbe
(bad)
dec
repnz
retf
push
dec
aad
or
push
jmp
add
test
push
sbb
clc
cmp
xchg
jle
test
daa
addr16
jecxz
ins
sub
jmp
add
cmp
push
test
pushf
jne
cdq
dec
cdq
repz
lahf
aam
nop
fwait
mov
aaa
jne
mov
adc
sbb
shr
inc
in
lahf
sbb
repz
js
pop
adc
adc
lea
xor
inc
mov
fisttp
sbb
pop
push
pop
inc
imul
inc
adc
cmps
mov
mov
cmp
cmps
adc
stos
arpl
sub
std
mov
ds
adc
add
push
add
and
cmp
outs
shl
lods
xchg
push
hlt
inc
pop
les
inc
xor
sub
in
in
inc
in
fiadd
std
dec
or
imul
ds
push
mov
test
imul
adc
data16
sub
lock
jl
and
je
push
scas
pop
retf
xchg
push
leave
push
add
jne
cmc
or
pop
dec
or
(bad)
fisttp
fistp
fdivp
pop
loope
add
or
sub
sbb
push
and
enter
xor
gs
js
imul
mov
push
dec
push
mov
or
rol
mov
cmp
fisub
sub
shl
dec
cmp
(bad)
mov
test
or
enter
xchg
in
lahf
cmp
jbe
fimul
fist
push
popa
sub
ss
jge
addr16
sub
loope
add
movs
test
push
in
(bad)
(bad)
out
pop
popa
pop
add
addr16
pop
dec
push
mov
aaa
push
mov
and
sbb
jge
pusha
iret
clc
fstp
out
data16
dec
jnp
imul
or
xor
sti
leave
push
stc
jo
les
popa
ret
mov
or
cmp
retf
or
xor
daa
pushf
sbb
ret
scas
sub
shr
mov
test
dec
stc
lds
ja
mov
mov
sub
jmp
add
fdiv
rcl
inc
fs
jg
fwait
ds
add
xor
jg
rcl
or
popa
fcmovb
cmps
jp
fldenv
jp
iret
int3
sub
mov
scas
xchg
inc
dec
add
xor
pushf
int3
inc
les
(bad)
xor
mov
data16
vzeroupper
mov
xchg
push
out
add
push
inc
or
mov
mov
movs
mov
hlt
rol
pop
dec
jbe
jmp
dec
or
in
xchg
sub
stos
push
sbb
push
popf
adc
jnp
mov
or
dec
les
pop
dec
mov
neg
mov
retf
fchs
sahf
push
nop
pop
in
cmp
mov
out
cmps
jmp
retf
ret
outs
retf
sbb
popa
fwait
dec
hlt
ins
sbb
add
gs
cmp
ins
ror
add
mov
in
shl
jo
stos
cmps
adc
es
not
xchg
dec
repz
or
retf
test
adc
xchg
mov
xchg
loope
nop
in
shl
mov
popa
es
jo
and
push
int
jmp
adc
inc
mov
adc
fisubr
inc
in
jne
sub
and
adc
xchg
jmp
dec
push
push
pop
dec
push
fwait
ret
inc
sahf
(bad)
jmp
out
pop
in
xor
or
iret
div
inc
or
add
mov
movs
mov
sub
clc
test
push
inc
xchg
xor
mov
sbb
sbb
fcomi
mov
(bad)
scas
dec
jae
sahf
add
mov
pusha
jmp
aad
int
in
imul
loop
mov
loopne
xchg
movs
movs
addr16
(bad)
test
sub
pop
push
cmp
sbb
movs
mov
sub
sub
pop
inc
idiv
aad
mov
jne
cld
bound
mov
lea
sar
adc
cdq
shr
mov
mov
out
fwait
sub
xchg
adc
in
pusha
inc
and
fsubr
pop
shl
adc
or
int
imul
inc
lds
out
add
jno
inc
jg
ds
int3
or
dec
sub
or
pop
and
ins
ja
add
scas
push
jecxz
jp
xor
push
lds
(bad)
mov
and
xor
and
cmp
cli
out
or
mov
repnz
dec
aam
inc
add
syscall
adc
jp
mov
stos
xchg
mov
(bad)
sbb
cmp
sub
sti
adc
jmp
jbe
pop
mov
pop
dec
dec
xchg
inc
call
or
adc
jmp
jo
sbb
fsub
test
les
lock
cmp
outs
or
or
loope
xor
xor
adc
jl
pop
das
jg
imul
(bad)
pusha
nop
in
int
retf
push
inc
dec
sbb
jbe
pop
inc
les
aad
sub
(bad)
cmp
shl
sub
fsub
jns
jmp
jl
add
push
mov
jl
test
fistp
inc
repnz
lock
mov
cmp
push
mov
xchg
mov
dec
test
fdivr
test
int
or
sti
ins
movs
mov
inc
pop
cmp
cmp
scas
daa
xchg
fucomip
jmp
add
jo
mov
icebp
iret
mov
jle
test
sbb
sbb
xor
mov
push
inc
and
aad
mov
mov
mov
pop
jecxz
add
mov
rcr
sbb
dec
adc
dec
lahf
add
cmc
ret
add
rcl
std
push
(bad)
fcom
cld
and
sub
jno
jge
es
int
push
add
sub
ss
clc
xor
test
and
add
in
or
stc
cvtpi2ps
scas
xchg
not
int
loope
and
mov
cmps
sbb
cmc
mov
jecxz
and
adc
ret
pop
xchg
xchg
(bad)
mov
push
out
xor
imul
test
jge
cdq
push
xchg
mov
adc
rcl
push
pop
std
bound
cmps
jo
mov
mov
test
call
jmp
mov
push
lock
(bad)
cmp
test
int3
fs
enter
cmp
out
repz
jns
sti
mov
mov
loop
hlt
fdiv
out
and
jne
pop
jp
lods
mov
inc
rcr
sub
push
and
into
push
nop
idiv
fadd
sub
adc
(bad)
mov
or
push
mov
pop
int3
mov
hlt
(bad)
pop
xlat
stc
push
dec
inc
pop
in
mov
inc
enter
mov
sbb
jno
jg
xchg
push
retf
aas
lds
jnp
retf
inc
scas
jecxz
pop
cs
xchg
sub
mov
fs
popf
and
xchg
scas
ins
mov
dec
in
fs
pop
repnz
iret
loope
movs
jno
mov
mov
aad
outs
mov
(bad)
out
pop
cmc
mov
pusha
mov
sbb
add
lods
pop
jb
sahf
mov
pop
and
int
add
lahf
mov
inc
pop
movs
lods
pop
(bad)
fist
cmovb
mov
or
mov
pop
outs
push
gs
fwait
sbb
jle
pop
fsub
sub
test
xchg
js
je
sbb
xchg
mov
mov
(bad)
aaa
test
push
lock
(bad)
push
and
or
dec
(bad)
mov
leave
mul
mov
popf
dec
lods
pop
sub
jbe
cld
sbb
pop
test
or
aad
dec
xor
xor
dec
push
hlt
push
outs
pop
(bad)
das
hlt
xor
out
add
loopne
jecxz
adc
and
mov
out
jl
data16
stos
(bad)
dec
sub
pop
jle
jae
inc
add
mov
out
cmp
pusha
fs
sbb
(bad)
or
lds
adc
mov
push
push
adc
xchg
mov
push
inc
data16
push
xchg
xchg
add
lea
jb
jmp
push
inc
sbb
or
bound
sar
ret
jmp
or
and
mov
xor
xchg
push
pusha
cli
xchg
xor
add
cmp
dec
aad
scas
or
hlt
add
test
mov
push
and
gs
mov
mov
xchg
mov
inc
mov
dec
popa
retf
rol
(bad)
xor
lahf
cs
xor
(bad)
xchg
mov
push
and
add
add
cdq
cs
loope
add
cmp
lods
jmp
xor
adc
adc
sbb
jg
xchg
rcr
push
and
cmc
mov
lods
fstp
retf
inc
ror
hlt
aas
mov
cld
fs
ret
out
(bad)
jmp
xor
or
mov
mov
pop
pusha
lock
adc
xchg
cwde
movs
jae
xor
movzx
mul
hlt
out
mov
ds
das
inc
rcl
pop
inc
add
sub
add
imul
sbb
mov
adc
push
hlt
mov
inc
push
mov
int3
xor
cwde
sbb
mov
and
inc
imul
stos
popa
dec
lods
outs
ins
rol
nop
pop
mov
div
xchg
xchg
repnz
(bad)
pop
iret
xchg
bound
shr
enter
cmps
ins
sbb
dec
lds
int3
xchg
test
jne
cld
adc
mov
and
inc
xchg
mov
out
repnz
les
mov
ret
sbb
scas
pop
or
mov
call
inc
adc
aaa
inc
push
jmp
nop
cmp
mov
shl
leave
adc
mov
fsubp
cmp
pop
stos
jne
call
or
adc
aas
pop
pop
test
push
xor
xchg
inc
cli
test
pop
mov
or
xchg
cmp
bound
shl
xor
pushf
imul
xor
fsub
mov
adc
fs
mov
xchg
gs
push
sub
xor
mov
adc
and
sti
out
adc
xchg
jp
mov
movs
scas
dec
and
inc
sbb
das
dec
scas
jns
sahf
in
shl
movs
aam
dec
dec
mov
mov
(bad)
int3
inc
ret
sbb
shl
scas
and
mov
cld
test
and
shl
imul
jno
in
cmp
pop
xchg
outs
scas
xor
icebp
into
adc
gs
inc
dec
rol
ins
test
dec
mov
sbb
mov
enter
cmp
rcr
push
cmp
mov
push
stc
loopne
dec
fmul
imul
iret
xchg
xchg
lahf
aam
pushf
in
fisubr
ins
and
into
pop
je
sti
mov
mov
nop
or
ja
adc
pop
dec
ret
fadd
xor
cwde
and
sub
(bad)
movs
xchg
outs
jno
mov
ins
ja
inc
push
dec
loopne
out
push
xchg
or
mov
xchg
add
add
seta
jns
test
cmp
cld
inc
lock
jno
jb
push
jbe
retf
into
mov
jp
push
sub
push
add
mov
in
pop
cmc
leave
pushf
imul
(bad)
aad
fdivr
push
pop
cmp
(bad)
ins
jge
adc
sub
pop
stos
inc
xor
aad
bound
addr16
test
cli
push
xchg
aas
pop
popa
or
pop
lock
rcr
and
adc
xor
aas
repnz
mov
pop
fs
jo
popa
dec
into
mov
lods
xchg
xchg
dec
adc
mov
lods
mov
mov
out
inc
adc
ret
jns
dec
or
nop
lahf
std
or
jmp
cmp
arpl
adc
shr
add
sub
sbb
enter
adc
daa
add
fimul
jl
cmp
sub
xchg
sar
test
popa
fidiv
mov
mov
push
setg
jns
into
into
pop
dec
cmp
jne
mov
scas
test
add
sbb
pop
jp
jmp
out
jmp
popf
push
(bad)
pop
jb
jmp
imul
mov
out
push
in
dec
adc
stos
enter
mov
and
dec
inc
rcl
int
mov
outs
dec
cld
mov
and
push
loopne
push
shr
sub
(bad)
dec
add
call
enter
mov
adc
add
pop
fdivr
bound
bound
mov
xor
gs
xlat
ret
in
(bad)
jae
mov
adc
cmps
xchg
xor
cld
stc
pop
in
push
scas
sub
cmp
dec
mov
iret
or
out
imul
dec
cmc
shl
addr16
pop
sub
pop
mov
clc
pop
cmp
pop
mov
(bad)
pop
call
xchg
dec
(bad)
mov
jl
mov
aad
mov
adc
xor
push
add
pop
mov
loope
lahf
pusha
add
xor
shr
cmp
dec
sbb
jo
sbb
jb
mov
sub
js
push
jecxz
imul
or
mov
test
mov
sub
xchg
xchg
lods
(bad)
mov
jecxz
xor
repnz
sub
(bad)
sar
bound
cmps
jo
leave
sub
cs
imul
mov
retf
in
aas
lahf
sbb
inc
icebp
mov
cli
in
cmp
cmps
mov
lea
xor
cmp
mov
fdecstp
lds
dec
inc
mov
cs
jl
inc
mov
jbe
hlt
ins
pop
sar
sbb
inc
pop
dec
sahf
ltr
pop
cmc
push
mov
adc
mov
dec
popf
js
mov
xor
clc
push
daa
popa
mov
jne
dec
fs
and
cwde
sub
cmps
nop
jae
push
mov
and
fisub
jge
aad
jo
ins
arpl
xchg
xor
lea
imul
daa
sub
aad
jbe
lahf
jo
pop
movs
mov
jb
into
mov
xor
(bad)
(bad)
adc
shl
loop
and
inc
test
es
adc
xchg
mov
inc
sub
adc
or
sti
adc
test
dec
jge
jmp
(bad)
pop
sub
xor
mov
cwde
cld
sub
imul
(bad)
ins
je
and
dec
dec
push
push
mov
xchg
sbb
sbb
xor
mov
iret
das
enter
push
mov
and
cwde
push
sub
outs
add
dec
xchg
rcr
mov
mov
mov
or
mov
repz
mov
jl
rol
xchg
inc
cmp
add
mov
daa
cmps
dec
xchg
jnp
xor
test
(bad)
xchg
outs
mov
and
or
mov
mov
nop
stos
sti
cmp
xor
jp
cwde
push
dec
out
push
cdq
fwait
xor
sbb
xor
loopne
mov
and
fild
jmp
cmp
xlat
push
cdq
inc
xor
add
in
fstp
cmp
stos
in
movs
cmp
(bad)
sub
pop
repz
cmp
test
aaa
(bad)
shl
stos
mov
or
push
jecxz
test
jmp
std
and
loope
pop
jmp
sbb
push
add
pop
push
dec
lds
add
add
sbb
xchg
aad
pop
pop
ret
inc
dec
lods
mov
hlt
pop
outs
pop
or
mov
repz
enter
mov
lods
add
add
push
xor
in
push
and
sub
out
xchg
push
jp
mov
or
push
mov
push
and
jbe
stc
movs
cmps
sub
add
and
loopne
push
lds
sar
adc
mov
or
dec
hlt
imul
xchg
movs
pusha
mov
mov
jmp
or
dec
inc
adc
lods
imul
or
in
loopne
xor
mov
fisttp
push
test
sbb
sbb
ficom
push
ss
mov
sub
aaa
movs
fcomp
out
daa
loop
mov
mov
aad
inc
ret
push
add
mov
repz
mov
lods
dec
retf
call
and
pusha
sbb
dec
and
xchg
popf
sbb
xor
jl
dec
das
mov
idiv
ror
pop
cmp
or
data16
mov
fdivr
std
je
push
jg
loopne
sub
je
pop
mov
ins
add
ins
mov
push
push
mov
push
push
adc
ror
cmc
xor
pop
mov
not
aad
frstor
add
pop
aaa
jge
aaa
into
inc
and
imul
jo
push
xlat
inc
mov
or
fldcw
jb
pop
clc
aam
fnstcw
pop
mov
push
xor
inc
out
fs
lods
frstor
shr
std
sbb
jmp
push
jle
lds
add
add
in
mov
pop
popf
leave
ret
loop
or
adc
jmp
inc
mov
leave
jp
xchg
nop
xchg
sub
add
xchg
cdq
mov
fidiv
pushf
idiv
lock
arpl
jmp
cmc
jno
adc
pusha
mov
sbb
push
popa
push
pop
pop
out
xchg
jle
inc
fimul
xchg
cdq
mov
stos
enter
xchg
sbb
push
push
push
and
je
loope
add
fld
mov
add
adc
sbb
and
aaa
js
ret
and
lods
jo
mov
cmps
outs
les
cs
inc
pop
add
mov
inc
imul
nop
jae
hlt
aam
loope
je
inc
adc
xor
mov
das
daa
out
push
jle
cmp
daa
fst
rcr
(bad)
daa
push
retf
or
outs
mov
and
push
xor
fs
sbb
add
gs
mov
mov
sub
fisttp
xchg
loopne
sbb
std
loope
sar
repz
stos
sub
or
push
mov
sbb
daa
adc
cmps
ja
aaa
add
dec
jecxz
mov
jae
sti
pop
hlt
inc
sbb
clc
mov
int3
repnz
dec
fcomp
mov
mov
mov
cwde
xor
test
pop
mov
ss
or
or
cmp
lods
shl
xor
in
push
push
mov
pop
lods
sahf
in
repz
aad
icebp
sbb
les
sar
jmp
es
je
add
xchg
aas
xor
mov
imul
mov
or
mov
cli
xchg
add
mov
jle
imul
jg
hlt
in
sbb
xchg
or
in
fadd
mov
cmp
xchg
fcom
mov
ins
mov
inc
add
xchg
or
sahf
sbb
pusha
inc
scas
mov
dec
inc
lods
inc
dec
xchg
pop
js
js
aam
leave
mov
xchg
pop
mov
call
or
xchg
repz
or
nop
xchg
mov
push
(bad)
out
and
nop
sbb
inc
mov
mov
or
ja
cmp
xor
movs
jp
pop
popa
test
cmp
jbe
retf
dec
in
and
jl
cwde
imul
fxch
cli
pop
or
scas
adc
add
sbb
mov
daa
mov
xor
sub
cmp
mov
jo
lea
sti
stos
adc
jmp
dec
icebp
pushf
mov
sub
adc
cld
jmp
pop
adc
repnz
and
inc
jp
(bad)
dec
data16
sub
rol
jns
repz
jae
adc
xchg
and
and
sti
cli
push
xor
das
cmp
cld
cmps
pop
pop
ins
dec
mov
(bad)
packuswb
arpl
loope
imul
iret
mov
(bad)
retf
add
cmp
fs
inc
xchg
xor
enter
pop
fstp
add
(bad)
fs
sbb
pusha
dec
aaa
aad
jg
add
mul
add
dec
or
jp
push
int3
das
add
cmps
test
lods
lods
sub
or
push
cmp
cmp
add
ret
and
jmp
or
mov
mov
jno
std
lea
fdivr
adc
test
push
xchg
inc
adc
les
jns
inc
pop
mov
movs
mov
push
add
xlat
xchg
js
shl
popa
cmp
pop
cs
mov
cmps
(bad)
xchg
mov
(bad)
(bad)
xor
cld
mov
jmp
(bad)
out
push
bound
cld
mov
in
and
xchg
inc
mov
jns
or
inc
sub
loopne
jb
lods
arpl
rcr
and
mov
scas
jno
cmc
sti
cmc
ja
outs
sbb
lods
inc
repnz
bound
test
clc
sbb
push
mov
sub
lods
enter
out
mov
div
mov
std
mov
rcr
cli
addr16
cli
sub
cmps
lods
pop
je
add
push
enter
loope
jl
push
je
call
add
dec
xchg
pop
mov
jl
add
fnstsw
push
dec
add
cmp
dec
stos
dec
add
ins
(bad)
neg
stc
mov
ins
push
pop
adc
sub
mov
inc
div
cdq
xchg
mov
sbb
fiadd
xchg
mov
aas
mov
call
sbb
ss
test
lods
push
add
xchg
xor
sbb
mov
add
cmc
icebp
adc
dec
sub
xchg
lock
test
fld
div
inc
cdq
sbb
mov
inc
pop
push
dec
popf
cmps
xor
ins
jae
jmp
mov
mov
shl
mov
stos
sar
push
push
sti
cmps
fmul
emms
pop
pop
hlt
cmps
mov
in
add
pop
mov
mov
add
and
gs
cdq
push
push
bound
iret
inc
enter
adc
inc
cmp
dec
sub
push
jp
push
or
pushf
xchg
jnp
pop
adc
ins
inc
repnz
jecxz
outs
sbb
and
pop
cdq
aas
scas
call
aas
in
stos
push
in
outs
ret
or
pop
mov
xchg
aaa
je
cmps
(bad)
pop
sahf
add
rcl
es
or
jno
jp
movs
or
adc
movs
fild
add
push
int3
mov
fwait
jae
repz
pop
aam
or
mov
mov
push
mov
jp
mov
push
fld
xor
mov
or
push
dec
and
dec
(bad)
imul
shl
aam
shl
cmp
add
adc
fadd
and
test
adc
enter
adc
xor
ds
add
scas
mov
mov
jmp
jmp
or
loope
inc
aaa
pop
inc
fild
and
cmp
in
shl
cmp
xchg
mov
lods
in
mov
iret
je
inc
xchg
and
jo
dec
sub
push
push
sbb
pop
outs
inc
fdiv
lock
jb
cmc
jbe
xor
jne
aas
shr
sub
or
inc
push
jg
and
clc
cmp
je
out
inc
jbe
test
(bad)
fcomp
iret
push
and
adc
mov
cld
out
clc
ret
push
push
stc
mov
mov
stc
data16
push
int3
dec
dec
xchg
sub
jle
mov
mov
mov
das
add
mov
mov
or
clc
pop
lahf
mov
data16
xchg
test
add
out
pop
jns
clc
jne
and
mov
das
icebp
loope
nop
out
sbb
cmp
fadd
mov
ret
pop
pushf
mov
push
dec
test
cwde
stos
sar
mov
scas
cmp
mov
sub
lods
add
mov
sub
fnstcw
fisttp
imul
test
mov
leave
jmp
fwait
mov
sub
dec
daa
mov
pop
jge
sub
jnp
pop
out
sbb
js
pop
sub
sbb
repz
sbb
jae
add
pop
lds
xchg
adc
cs
aam
pop
jge
jne
fild
jbe
popf
jecxz
aaa
arpl
xlat
retf
xor
adc
sub
mov
xor
sub
ins
pop
gs
test
out
iret
outs
add
in
cmps
sbb
int
inc
inc
mov
jl
inc
test
enter
retf
(bad)
sbb
test
sbb
dec
loope
into
popa
leave
repnz
push
inc
jmp
rcr
push
sbb
jg
fisttp
mov
xchg
enter
push
mov
stos
sub
rcl
mov
push
adc
mov
adc
out
sub
nop
sahf
xor
stos
dec
daa
fmul
mov
stos
cmp
cmps
mov
(bad)
pop
or
imul
jmp
mov
scas
bound
add
mov
xchg
cmp
lock
mov
pop
add
xchg
scas
jp
sbb
jbe
ss
fnstsw
lods
cmp
scas
pushf
std
mov
xchg
or
inc
jo
push
hlt
fcomip
in
cwde
aaa
(bad)
rol
test
fld
out
(bad)
inc
gs
and
push
mov
jo
inc
sbb
pop
jp
cmp
jge
xchg
push
fsubr
mov
mov
into
inc
jbe
stos
mov
(bad)
in
mov
xchg
jnp
mov
int3
out
daa
lods
inc
cli
mov
mov
out
cli
arpl
and
jnp
mov
sbb
mov
fldpi
in
jnp
test
mov
and
mov
and
daa
cld
outs
sub
push
lods
pop
scas
inc
jecxz
addr16
pop
push
mov
paddsb
dec
fbstp
push
jb
lods
xor
inc
in
jae
and
in
sbb
adc
xchg
or
xchg
add
pop
das
mov
adc
mov
sbb
cmp
jg
pop
int
std
xchg
xor
sub
cmps
cmp
jle
in
jmp
sub
xchg
imul
and
mov
into
stos
push
inc
lahf
and
push
pushf
rcr
je
dec
or
jp
inc
inc
mov
jg
mov
aad
xchg
push
dec
sbb
xor
or
mov
idiv
xor
test
std
lahf
fild
sbb
sbb
sbb
push
ds
and
mov
jno
int3
inc
sbb
pop
ds
mov
(bad)
aad
(bad)
fbld
ss
sbb
xchg
xchg
sbb
pop
xchg
xchg
and
bound
fldenv
cs
and
out
test
fnstsw
ins
sahf
pop
inc
inc
xor
jbe
xchg
inc
xor
in
push
pop
push
and
xor
(bad)
lods
cld
ins
icebp
scas
xchg
fdiv
bound
and
and
mov
repz
fsub
int3
cmp
xchg
xor
ficom
and
add
add
imul
inc
arpl
out
push
cwde
xchg
lea
(bad)
es
jno
fcom
out
movs
pop
push
ds
pop
mov
jp
jo
outs
xchg
jno
add
cwde
das
and
jno
imul
inc
neg
sub
in
pop
cmp
in
xchg
fcomp
pop
nop
sbb
pop
or
pop
push
mov
leave
cmp
mov
dec
jb
enter
mov
stos
xchg
clc
out
and
pushf
inc
gs
push
repz
(bad)
popa
ss
ss
xlat
pop
pushf
js
fisttp
add
and
movsx
clc
and
mov
dec
sub
rol
sub
add
jge
push
into
cmp
imul
out
dec
fisttp
mov
dec
into
fs
inc
movs
mov
(bad)
std
or
cmp
pop
fld
push
ins
mov
add
cld
mov
popa
mov
dec
fcomp
repz
pusha
and
cmp
mov
push
inc
add
cmps
popa
push
out
mov
jmp
test
mov
jp
call
dec
inc
or
aas
cmps
adc
or
call
add
lods
mov
push
into
(bad)
or
pop
cmp
imul
mov
out
leave
dec
ins
inc
mov
and
shr
f2xm1
jbe
fisttp
retf
add
or
adc
stos
push
gs
int
cli
and
stos
(bad)
mov
jne
jl
add
aad
ficomp
out
sar
sbb
movs
arpl
lds
es
(bad)
push
add
mov
pop
std
cmp
cmp
cdq
inc
fldenvw
cmps
les
adc
xor
inc
jmp
mov
xor
movs
iret
lock
sub
sub
jae
ds
loope
movs
add
jae
mul
test
xchg
mov
shl
jne
inc
xchg
pop
push
dec
shl
fdivr
cld
mov
inc
xchg
scas
std
add
icebp
mov
mov
js
xchg
ja
mov
rcr
mov
je
sub
inc
repz
inc
push
mov
mov
pusha
mov
mov
cld
xor
retf
loope
push
cmp
out
ret
push
jle
std
fsubr
cs
xchg
sub
push
jmp
adc
or
and
bound
jne
dec
push
popf
sub
xlat
movs
out
mov
dec
fimul
in
(bad)
out
aam
sbb
inc
jmp
and
dec
push
mov
jno
(bad)
cdq
mov
data16
ficomp
or
push
and
sub
test
int
adc
popf
jnp
idiv
add
pop
ins
mov
jl
xchg
pop
add
push
hlt
mov
fdivr
adc
scas
sbb
sbb
(bad)
pop
hlt
stc
ror
or
(bad)
in
sbb
idiv
outs
(bad)
pop
cmp
mov
mov
icebp
xor
das
xchg
loope
cwde
lock
(bad)
psubsb
pop
bound
push
lods
sub
retf
mov
jmp
sub
fwait
sub
mov
inc
pop
mov
xchg
movs
xor
pop
push
and
jmp
pop
fist
(bad)
xchg
pop
dec
sub
inc
add
js
sub
mov
pop
push
mov
sbb
mov
cmp
not
cmp
jecxz
(bad)
repnz
sub
xor
and
retf
dec
movs
sahf
stos
inc
mov
cli
or
popf
mov
rol
(bad)
out
(bad)
and
jge
enter
ret
out
push
and
mov
scas
lods
mov
xchg
jbe
cmp
mov
and
cs
test
dec
inc
inc
rcr
jle
jno
xor
(bad)
out
aaa
shl
inc
sti
xor
call
inc
aaa
in
retf
push
ds
je
addr16
popa
stc
stos
aas
test
inc
fidiv
ret
jmp
call
retf
mov
gs
push
scas
(bad)
mov
repnz
leave
jo
outs
in
imul
leave
ins
mov
sub
fild
dec
in
in
push
inc
sbb
jmp
adc
sub
xchg
mov
test
cmp
push
push
popf
jbe
stos
scas
inc
ins
(bad)
jmp
ds
sbb
cmp
repz
fcmovbe
sub
test
les
inc
repnz
jle
ins
mov
cmp
call
mov
and
rol
in
(bad)
fcomp
not
test
fcom
push
sar
fsub
mov
cdq
popf
adc
push
xchg
leave
stos
lods
leave
cmp
sbb
rcl
sbb
push
gs
add
sti
shl
pop
sub
in
or
xor
sbb
xor
sub
repnz
fs
push
rcr
xor
inc
shr
add
enter
pop
adc
mov
dec
fcomp
aam
mov
scas
scas
add
adc
adc
sbb
iret
shl
popf
add
cmp
mov
cmp
push
dec
pop
(bad)
sbb
push
xor
push
fnstcw
out
cld
lahf
test
(bad)
scas
adc
lock
cmp
fsubr
cmp
out
bound
pop
pop
and
lahf
add
jbe
xchg
lods
xchg
jnp
scas
or
and
xchg
sub
aas
adc
mov
lock
or
push
ret
jo
mov
(bad)
or
popf
nop
(bad)
out
cmps
sar
cmp
xchg
and
clc
push
xchg
ror
bound
aas
jbe
out
jbe
and
popa
ja
mov
xor
pop
jp
arpl
push
(bad)
xchg
repnz
mov
fld
fcomp
add
inc
sti
fs
hlt
mov
jp
mov
dec
imul
mov
test
outs
mov
shl
or
lods
adc
pop
in
mov
in
mov
pop
sbb
int
push
(bad)
cmp
mov
cmc
fdiv
iret
das
in
or
cmp
outs
pop
mov
xchg
xchg
cmps
out
xor
and
inc
pushf
loop
repnz
fcom
aaa
into
push
jnp
adc
loopne
jl
outs
stos
pop
stos
dec
test
cmps
scas
dec
(bad)
cmp
sub
dec
test
and
das
imul
pop
jo
sub
jne
(bad)
dec
sub
cmp
jg
punpckhdq
dec
js
inc
pop
imul
dec
test
popf
rcl
jge
sahf
stos
mov
test
icebp
sub
mov
cdq
and
(bad)
rol
jp
not
ret
std
mov
or
xor
das
enter
jmp
mov
xchg
pop
ret
daa
xchg
(bad)
std
and
lea
mov
shl
inc
lods
cmc
out
ja
out
in
hlt
aas
cli
inc
repnz
stos
aad
ret
xchg
and
cmp
aaa
mov
push
cmc
inc
cmp
cmp
(bad)
sbb
ficom
outs
dec
loopne
push
retf
sbb
fs
pop
pushf
je
push
aaa
xchg
dec
sbb
push
mov
iret
inc
add
loop
les
sbb
xor
push
rcr
ret
jbe
scas
pop
or
pop
repz
test
mov
(bad)
and
mov
mov
pop
mov
or
xchg
test
repz
loopne
inc
pop
xor
ficom
and
pop
mov
xchg
shl
xchg
mov
mov
mov
sub
mov
js
push
pop
lahf
test
lds
cmovae
inc
pop
mov
jno
pop
xchg
xor
(bad)
cmp
out
ja
popa
retf
cmp
pop
ds
and
ins
dec
dec
popf
xchg
add
dec
inc
jl
retf
addr16
mov
fwait
inc
call
or
in
mov
enter
lock
dec
mov
mov
out
scas
test
call
loopne
mov
mov
push
mov
push
push
cmc
pop
xchg
xor
cmp
cld
not
repnz
xor
sti
ds
and
pushf
dec
mov
push
pushf
js
imul
add
cmps
push
lock
jge
fidiv
addr16
in
sub
(bad)
retf
pop
mov
rol
mov
pop
nop
mov
aad
cmp
stos
jbe
in
or
cmove
clc
pushf
loopne
jb
xor
aaa
sbb
scas
push
sbb
jge
xchg
push
jne
test
add
push
out
int3
mov
add
imul
mov
dec
iret
sbb
xchg
test
test
dec
mov
lock
mov
or
mov
(bad)
retf
add
adc
jne
jnp
scas
ror
aas
inc
cmp
pop
test
popa
inc
popa
mov
cmps
mov
jo
sbb
push
hlt
(bad)
aaa
jp
jp
mov
pop
jg
mov
sub
pop
fnstcw
jmp
lods
pop
out
test
gs
cli
call
fcmovnu
leave
push
scas
or
shr
xchg
jns
xchg
ret
jns
push
pop
inc
inc
xchg
sbb
stc
fldenv
dec
cwde
fld
add
dec
jbe
mov
mov
not
jo
in
cmps
mov
pop
push
sar
jno
push
sub
fwait
cmc
(bad)
mov
xchg
inc
movs
jl
push
lods
ds
loop
test
clc
call
js
neg
and
jg
(bad)
imul
mov
cmps
sahf
sahf
mov
or
push
mov
ins
xchg
ja
sbb
stos
mov
mov
punpcklwd
in
xchg
cmp
hlt
sub
pushf
das
or
outs
js
lock
test
imul
jne
adc
sar
int3
push
cmps
xchg
xor
lods
in
es
jl
jmp
pop
jecxz
xchg
das
or
cmps
inc
test
dec
jp
in
pop
rcr
lods
pusha
jp
adc
or
xlat
inc
sub
int3
test
loope
retf
fisub
mov
xchg
dec
stc
sbb
push
out
pusha
cmps
cmps
mov
fst
aas
ror
push
xchg
int3
sub
inc
mov
sbb
cmp
or
cmp
mov
mov
pop
jnp
data16
lods
stos
(bad)
push
ds
sbb
dec
addr16
pop
xor
sbb
xor
ja
mov
test
cmp
add
jmp
push
es
imul
and
rcr
push
mov
mov
adc
push
cmp
inc
sub
xor
jp
dec
pop
jp
movs
retf
and
cmp
sbb
retf
cmp
push
imul
iret
cmp
rcl
aam
inc
test
mov
or
pop
xor
cmp
icebp
js
push
cmps
mov
cli
inc
cmp
ins
jae
je
xchg
clc
ins
sub
push
in
and
fs
jb
rcl
repnz
fwait
xchg
adc
sbb
(bad)
outs
push
fbld
arpl
imul
test
ror
(bad)
movs
dec
(bad)
lods
leave
push
jmp
fcom
cwde
(bad)
xchg
inc
sub
and
addr16
arpl
jnp
cmp
jno
mov
packuswb
inc
mov
icebp
ja
out
loop
addr16
bound
jns
or
dec
push
inc
ds
jl
popa
mov
adc
xchg
or
xchg
les
mov
mov
jae
aam
das
and
adc
cmps
enter
fiadd
cmp
aas
ror
inc
and
and
cmp
imul
bound
mov
ins
adc
cmps
not
xor
pop
ficom
or
clc
xor
sub
les
inc
std
or
sub
imul
push
push
add
sti
cmp
call
imul
inc
push
push
sti
sbb
pop
seto
jecxz
popf
fnsave
jg
into
add
or
sub
push
aam
mov
(bad)
mov
aam
mov
xor
xor
cmp
repnz
cmps
adc
ret
jle
retf
cli
ror
cmp
lods
cmps
push
mov
xchg
jno
fdivr
(bad)
xchg
xchg
in
fild
les
sbb
push
xor
pop
movs
jb
xchg
push
push
mov
sub
and
mov
enter
call
add
imul
mov
xor
in
(bad)
and
pop
jae
pop
mov
out
adc
(bad)
fucomip
jmp
mov
xor
call
sub
icebp
pop
jmp
sub
inc
mov
push
movs
rol
sbb
mov
fild
arpl
pusha
into
push
mov
or
pop
push
js
ja
jecxz
push
push
les
shr
repnz
in
std
add
cmp
leave
mov
adc
imul
dec
or
dec
cmc
mov
pop
stos
add
repnz
inc
inc
(bad)
mov
mov
repz
popa
cmps
xchg
jmp
mov
mov
add
outs
push
pop
lods
repz
test
xchg
imul
xor
pusha
jge
jae
mov
stos
jmp
movs
mov
fldcw
scas
pop
adc
jns
adc
xor
ss
imul
dec
sti
push
shr
xor
ja
or
jne
cli
push
sub
bound
cmp
enter
jbe
sbb
or
mov
shr
retf
ss
into
(bad)
sbb
arpl
outs
inc
je
xchg
sti
sbb
xor
rol
jb
or
or
pop
mov
push
sbb
inc
(bad)
into
pop
(bad)
xchg
sub
in
pop
movs
repz
cmps
lahf
add
inc
mov
mov
xlat
dec
mov
xchg
retf
sub
jns
mul
out
dec
adc
daa
stc
hlt
cmp
frstor
mov
stos
sahf
mov
retf
pop
mov
fs
ficom
mov
mov
stos
shl
push
fmul
sbb
xchg
push
aad
test
cli
xor
jo
lahf
inc
cmp
fwait
dec
out
add
dec
or
arpl
ins
xor
popa
sbb
push
dec
call
mov
inc
ret
dec
sbb
jle
dec
mov
icebp
add
jp
lea
pushf
sub
shl
and
lock
sbb
test
stc
cmps
cmp
das
sub
mov
cmps
sbb
out
push
lea
imul
(bad)
(bad)
stos
fcmovne
xchg
and
jecxz
fs
inc
jle
pop
loope
call
sub
dec
cmp
dec
imul
out
cmps
inc
call
and
push
loope
sub
clc
pop
(bad)
lock
loope
sbb
xchg
pop
stc
lahf
cmp
push
add
jns
xchg
sbb
and
cs
enter
jae
jb
js
jmp
adc
frstor
(bad)
push
jg
mov
xchg
sbb
stos
mov
mov
iret
mov
(bad)
es
sub
in
jae
jb
dec
popf
sar
mov
mov
shl
or
or
fldcw
inc
call
je
stos
popa
dec
pop
pop
mov
ret
mul
cwde
mov
gs
xor
stos
cmp
fnstenv
or
inc
les
mov
fwait
ds
xchg
jae
jp
adc
lea
(bad)
in
movs
cmp
cld
xor
into
jae
rol
push
sbb
sbb
xchg
fnstsw
mov
scas
mov
or
mul
repz
sub
or
adc
enter
fnstcw
test
and
aam
mov
fstp
mov
rcl
xchg
or
push
nop
out
push
outs
in
push
out
xchg
adc
mov
adc
call
stos
dec
sub
loopne
jns
add
lods
push
in
sub
push
ja
mov
aad
push
inc
je
push
shr
cmc
ja
out
or
stos
rcr
aas
(bad)
cmp
shl
and
jmp
(bad)
jp
xchg
cmc
jle
test
dec
add
or
xor
aad
xlat
rcr
retf
shl
mov
repz
jo
inc
inc
mov
mov
add
loop
push
xor
and
xchg
outs
fsub
jmp
inc
fcomp
ins
adc
sub
mov
inc
jb
int3
ins
ds
imul
add
lahf
int3
pop
dec
inc
jmp
mov
jno
fcom
xor
cmp
mov
add
hlt
xor
icebp
cmp
push
rcr
out
adc
test
bound
mov
cdq
adc
mov
push
sahf
mov
test
push
adc
movs
xor
jns
(bad)
mov
jg
and
mov
xchg
mov
inc
cmc
scas
mov
sti
push
add
dec
repnz
push
push
daa
cmc
pop
or
call
push
jmp
fimul
dec
xchg
or
mov
pop
rcpps
stos
jmp
in
sub
xadd
fidiv
pop
or
cmp
repnz
mov
pop
xchg
stc
rcr
repnz
in
test
or
out
jne
cmp
fwait
stc
inc
sti
pop
pusha
adc
std
(bad)
mov
ins
mov
call
xchg
jg
and
inc
shl
mov
mov
inc
and
and
nop
stos
sub
sar
xchg
mov
data16
and
sbb
add
or
jae
mov
rcr
xor
ja
jbe
push
xchg
xor
adc
pop
jge
xchg
add
enter
dec
or
bound
std
add
addr16
stos
xor
icebp
and
push
in
scas
mov
mov
push
or
adc
test
add
ds
(bad)
add
in
pop
dec
call
add
aaa
mov
and
in
mov
retf
cmp
dec
sahf
ds
pop
outs
pop
ret
sti
mov
jo
out
adc
shl
or
or
retf
cmps
jo
mov
dec
jecxz
fs
dec
shl
sub
inc
fwait
cmp
jns
and
xchg
cld
cs
jbe
lea
push
mov
push
sar
sub
mov
add
mov
scas
pop
mov
add
out
cmp
push
ror
or
jmp
mov
rol
stos
add
enter
cmps
jno
out
in
addr16
jo
and
inc
out
and
mov
out
lea
mov
scas
cmp
aam
in
je
wrmsr
xchg
xchg
adc
mov
dec
test
ss
jno
shl
pop
hlt
push
or
pop
xchg
aam
add
pop
retf
xchg
sbb
inc
adc
not
stos
mov
xchg
mov
inc
jmp
mov
push
repz
sub
xor
mov
pop
xor
inc
shl
jbe
add
bound
jmp
mov
xchg
add
pop
xchg
xor
fs
sbb
mov
call
add
int3
ss
cmps
add
fldcw
xchg
push
cmp
xchg
or
mov
mov
pop
dec
lods
test
in
xor
pop
xor
rcl
sahf
sbb
or
dec
sub
sub
clc
sbb
xchg
add
jo
icebp
sub
int3
aas
icebp
mov
imul
shl
(bad)
rcr
inc
pop
lock
lea
jmp
int
pop
add
sub
bound
mov
mov
hlt
fs
or
shr
jmp
popa
inc
sub
xor
xor
jo
mov
add
jb
cli
fwait
jge
cmc
ds
add
push
jae
(bad)
xchg
jnp
mov
ja
jle
push
mov
ins
sbb
jp
arpl
sub
shr
mov
sub
stc
push
cmp
jp
lods
adc
xor
cmps
pop
pop
mov
lahf
and
jg
push
mov
xor
add
adc
fstp
call
mov
xor
adc
adc
call
dec
xchg
gs
(bad)
fild
int
mov
pop
xchg
push
into
out
shr
popa
sub
push
sbb
sbb
idiv
mov
jne
iret
sub
out
jl
cmp
pop
sahf
mov
xor
rep
dec
sub
rcr
jns
mov
xlat
mov
outs
cld
mov
ret
xor
int
cdq
sbb
loopne
js
push
sbb
xchg
aad
and
xor
add
adc
daa
xchg
outs
inc
fisubr
(bad)
mov
aaa
in
adc
rcl
test
push
into
movs
adc
in
xor
push
ret
push
rcr
daa
xor
xor
and
lahf
lods
and
ds
adc
(bad)
(bad)
dec
jl
mov
mov
and
(bad)
movs
mov
scas
xchg
sahf
push
aas
cmp
repz
repz
retf
jae
out
push
jg
in
dec
addr16
ror
xor
pop
sbb
sbb
inc
sbb
adc
add
or
and
xor
or
adc
mov
cmp
es
sub
mov
sar
mov
mov
xchg
sbb
push
mov
sbb
lods
push
mov
push
int3
sbb
in
cmp
dec
aam
or
push
rol
dec
cmp
sub
mov
icebp
jno
es
jl
add
ret
dec
ficomp
outs
fdiv
cwde
xor
sar
cmp
or
(bad)
scas
neg
mov
and
dec
dec
mov
or
jmp
pop
rcr
and
mul
in
xchg
pop
inc
mov
mov
inc
scas
cmps
inc
sbb
push
add
and
and
ror
inc
pop
pop
in
and
cld
addr16
call
xchg
xor
retf
sub
mov
in
out
mov
(bad)
mov
test
in
fidivr
jge
sbb
fs
hlt
stc
push
dec
mov
leave
mov
mov
push
sub
leave
retf
xchg
adc
test
lods
xchg
hlt
sbb
je
pushf
std
loope
mov
mov
dec
sub
imul
(bad)
and
mov
aad
sub
out
(bad)
adc
rcr
add
or
inc
enter
sub
xor
push
test
sbb
cwde
add
imul
or
mov
shl
sahf
pop
sahf
in
lea
ficom
sub
push
test
or
mov
add
jecxz
xor
lods
in
outs
mov
in
sti
cmps
and
add
in
repnz
repnz
xor
scas
mov
sbb
stos
jecxz
mov
or
fucomp
pop
imul
fidiv
pop
mov
mov
int3
clc
ja
cmp
arpl
retf
movs
mov
je
dec
lahf
sub
std
push
push
(bad)
test
and
pop
push
enter
loop
inc
fst
scas
inc
lahf
xlat
cmp
xor
sbb
sbb
and
push
daa
mov
mov
sbb
inc
sti
or
movs
test
ret
ds
and
ja
inc
out
push
aam
dec
fldcw
mov
jo
inc
in
les
and
xor
daa
xchg
push
jo
xor
test
das
imul
adc
test
push
inc
adc
push
mov
push
addr16
jmp
outs
mov
pop
mov
xchg
jg
mov
shr
sub
jae
jl
icebp
mov
mov
outs
jbe
jg
inc
inc
jb
daa
xor
mov
xchg
aam
aaa
(bad)
inc
pop
mov
popa
mov
push
les
push
ins
push
jle
jno
dec
daa
mov
repnz
pop
jp
je
imul
add
mov
mov
fistp
push
pop
pop
jne
mov
sub
popa
fwait
cmp
call
xchg
mov
cli
mov
adc
loope
add
fidivr
jne
ja
inc
push
outs
mov
sti
jae
pop
adc
aaa
pop
fwait
mov
ret
sahf
push
push
push
pop
add
cs
add
sbb
hlt
mov
pop
jb
nop
loope
xchg
mov
ss
clc
add
mov
jmp
sbb
fidiv
xor
sub
pop
fdiv
lods
pop
aas
add
ins
outs
int
rol
(bad)
out
sbb
mov
fs
fist
pop
mov
add
mov
cdq
mov
push
call
cmp
mov
(bad)
imul
test
inc
int3
pusha
add
lahf
mov
and
outs
push
mov
mov
xchg
(bad)
lds
cmp
rcl
scas
out
dec
mov
and
imul
sub
fldenv
call
mov
inc
cmp
ins
cmp
xor
push
mov
scas
inc
push
je
cmps
add
and
jg
push
dec
dec
test
scas
xor
add
or
inc
icebp
rcr
ds
out
cld
imul
jmp
push
shr
(bad)
cld
pop
pop
repz
scas
jmp
mov
jl
ret
mov
sbb
adc
(bad)
and
and
mov
loope
jl
push
daa
and
mov
lahf
add
jecxz
arpl
ret
lds
cmp
sbb
or
icebp
cmp
xor
add
data16
mov
sbb
addr16
test
(bad)
stc
fs
ss
bnd
lock
jns
mov
and
cmp
es
mov
and
addr16
test
or
test
mov
push
mov
mov
enter
ret
mov
dec
inc
jbe
mov
(bad)
mov
sti
cmp
push
mov
ret
mov
iret
sahf
ins
retf
aad
pop
xor
cmp
xlat
mov
les
js
das
sub
sub
aas
adc
dec
sahf
mov
pop
lods
pop
and
sbb
nop
call
jl
jp
ins
loopne
jmp
outs
test
movs
(bad)
enter
xor
mov
sub
cs
xor
sbb
cwde
bound
mov
cli
jg
pop
leave
dec
hlt
cmps
dec
xchg
add
hlt
add
cld
add
or
mov
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
call
dec
add
add
