add
pop
jge
jne
jg
xor
or
adc
jnp
sbb
jns
addr16
cs
jo
imul
cmp
retf
dec
jns
xor
sbb
sbb
cmp
adc
xchg
cmp
inc
bnd
mov
xor
dec
retf
inc
scas
xchg
jno
enter
sbb
jns
lock
inc
outs
mov
das
dec
popa
adc
xor
jmp
je
xchg
aas
fs
and
push
lock
imul
das
dec
popa
repnz
mov
mov
jmp
pop
xor
sbb
cld
movs
xor
jns
jno
repnz
and
cmp
xchg
jmp
cmp
mov
jne
bound
xchg
cmp
rcr
xor
hlt
adc
xor
bound
jb
repnz
mov
dec
mov
cmc
mov
cmp
jbe
fisub
hlt
cmp
arpl
ror
inc
mov
sub
xchg
hlt
inc
and
or
pop
xor
es
retf
sub
repnz
cmp
ins
sbb
dec
xchg
dec
jno
icebp
push
xchg
xchg
pop
imul
out
cli
mov
xchg
xor
repnz
cmp
add
mov
not
sub
xchg
or
imul
xchg
sbb
jl
fnstenv
jb
xor
adc
fsub
push
sbb
mov
cmp
mov
sbb
jns
pop
jno
pop
dec
jns
call
rcr
jns
repnz
and
add
pop
xor
pop
data16
cli
fnstsw
dec
or
cmp
enter
mov
jge
xor
es
inc
mov
inc
push
fnstenv
jns
xor
js
xor
xchg
icebp
xchg
push
mov
out
and
sbb
jns
jecxz
fcomp
xor
jns
mov
gs
or
jge
pop
jns
xor
cli
cmc
and
das
dec
mov
inc
pop
jg
jne
sbb
mov
jge
xor
jns
sbb
cmp
pop
pop
mov
fnstenv
xchg
add
jns
out
push
mov
cmp
add
pop
xor
pop
or
jl
jns
mov
popa
sub
lock
fs
pop
addr16
mov
push
fidivr
xor
mov
mov
fdivr
add
xor
das
dec
mov
xchg
mov
xor
jns
aaa
adc
xor
jns
xor
adc
xchg
cmp
les
jns
mov
xor
ins
xor
repnz
adc
mov
retf
sub
adc
jns
mov
retf
sub
icebp
in
jns
mov
jmp
xor
sub
fadd
jns
add
jmp
std
sub
retf
fs
push
sbb
cli
fnstsw
inc
xchg
xor
or
repnz
mov
repnz
xchg
inc
mov
(bad)
jbe
jbe
jns
out
shl
cld
jmp
repz
inc
std
mov
xchg
or
(bad)
jmp
fwait
adc
nop
jno
lock
cmp
dec
mov
jns
es
jns
xor
jns
xor
or
retf
or
icebp
mov
mov
dec
(bad)
cmp
or
xor
or
retf
or
icebp
nop
add
xchg
pcmpgtw
jo
inc
jge
(bad)
pusha
cli
fs
js
push
mov
sbb
jne
int3
mov
fiadd
mov
dec
mov
mov
add
cmp
dec
pop
pusha
jns
xor
jns
inc
jne
ins
cmp
dec
gs
lock
mov
popa
out
ins
xchg
jns
inc
imul
(bad)
or
icebp
xor
jns
cmp
mov
cmp
xor
mov
inc
push
mov
cmc
and
das
dec
mov
xor
sbb
jl
lock
push
lea
push
test
pop
dec
mov
fistp
xchg
cmp
retf
xchg
cmp
loope
sub
push
mov
push
mov
and
or
pop
mov
cmp
and
or
cmp
xchg
jno
inc
pop
ror
jno
xchg
push
mov
sbb
sbb
mov
cmp
out
stc
inc
sbb
and
or
out
test
pop
cmp
mov
cdq
or
ins
int
cmp
cmp
add
retf
xchg
out
jns
repnz
mov
sub
inc
push
mov
popa
lock
mov
fsubr
sbb
das
dec
mov
adc
js
mov
mov
js
mov
lock
cdq
or
ins
int
mov
sbb
xchg
fist
out
fild
loope
mov
dec
cmp
ins
and
xchg
add
gs
mov
xchg
jno
push
jmp
xor
xchg
mov
xchg
sar
mov
dec
bound
repnz
cmp
ja
mov
push
mov
out
fistp
and
jns
dec
jno
retf
imul
cmp
push
sar
cli
mov
pop
or
cmp
nop
test
popa
test
pop
cmp
jge
xor
daa
inc
std
mov
sub
repnz
repz
mov
pushf
ins
cwde
jno
xchg
pop
xor
dec
out
fistp
les
jns
dec
jno
retf
imul
cmp
push
sar
cli
mov
pop
or
jl
fnsave
repnz
cmp
jge
xor
or
dec
jns
imul
shl
sub
cld
sub
dec
mov
ins
mov
arpl
clc
cmp
(bad)
and
sbb
jl
fnsave
lock
fbld
pop
cmp
(bad)
sbb
(bad)
repnz
cmp
ins
or
mov
inc
(bad)
dec
cdq
repnz
enter
div
sub
add
mov
dec
mov
das
cs
inc
jno
dec
or
int3
push
adc
inc
jne
lahf
(bad)
cmp
fmul
test
retf
lock
mov
adc
jmp
xchg
fs
ja
das
icebp
sub
pop
repnz
push
and
mov
mov
es
inc
std
mov
das
dec
mov
jbe
cs
mov
aas
outs
xor
lock
adc
pop
xchg
xor
das
out
jno
sbb
xchg
in
jns
cwde
ret
mov
sbb
jge
xor
mov
and
popa
lock
dec
bound
repnz
cmp
mov
loope
xor
stos
jbe
jns
aas
fsub
stos
jbe
sub
mov
jge
add
sub
int3
dec
adc
addr16
in
jns
inc
push
and
popa
lock
call
or
mov
sbb
mov
jns
call
lock
jns
fadd
jns
jno
sub
mov
sbb
fimul
sbb
mov
sbb
mov
fnstcw
or
dec
pop
mov
jge
xor
cmp
fs
or
jns
fiadd
in
nop
jno
jo
inc
dec
lock
pop
mov
pop
xor
jg
add
imul
xor
lock
jns
fnstcw
lock
cmp
mov
sub
fdivr
out
and
imul
shl
sub
cld
mov
sbb
stos
push
jns
dec
arpl
push
sub
mov
stc
fnsave
xchg
xor
or
fnsave
jns
dec
mov
jne
mov
js
xor
cmp
xchg
add
mov
call
or
pop
xor
repnz
das
jno
adc
retf
jns
rol
lock
in
xchg
jmp
xchg
xor
cld
clc
retf
xchg
icebp
test
sbb
adc
(bad)
cmp
mov
xchg
retf
sub
call
jns
cmp
pop
test
sbb
xor
mov
xchg
jno
sub
xor
repnz
cs
jno
cli
sar
or
sbb
cld
dec
sbb
cli
jl
jns
and
mov
jns
inc
push
lock
stc
fnsave
repnz
rol
lock
xor
pop
cdq
lock
xchg
stc
mov
loope
mov
clc
repnz
sbb
xchg
or
jns
inc
mov
popa
sbb
call
lock
sbb
cmp
mov
mov
mov
or
call
jns
xor
fcom
xor
repnz
cs
nop
jno
clc
repnz
mov
retf
adc
pop
les
repnz
ins
inc
sbb
jns
jno
lock
lock
loopne
xchg
mov
jns
cs
xchg
mov
fs
out
in
jns
xor
cmp
mov
mov
fld
mov
sbb
xchg
mov
movs
xchg
retf
or
and
xor
inc
test
jb
test
dec
xchg
xchg
mov
cld
test
fidivr
xor
mov
in
jbe
jns
push
mov
popa
lock
call
js
stos
inc
lock
xor
jmp
jns
ret
sahf
lock
int3
lock
and
mov
mov
test
xor
jns
mov
mov
mov
xchg
add
mov
imul
jp
or
adc
dec
or
sbb
jp
dec
pop
jmp
outs
xor
cli
fnstsw
xor
xor
retf
pop
xor
xchg
test
xchg
call
sahf
nop
jno
lock
sub
jns
pop
mov
lock
xor
sbb
mov
jo
inc
jge
jmp
jno
xor
and
inc
sub
cli
jl
jns
ficomp
jns
jb
cmp
mov
dec
sbb
cld
pop
out
xchg
jl
jns
fs
retf
or
jno
sar
sbb
stos
or
xor
stc
sbb
lock
sahf
lock
fdiv
mov
jae
adc
xor
jns
xor
adc
call
sbb
adc
xor
xchg
sub
jns
jno
lock
inc
js
inc
xor
pop
jns
push
les
sub
inc
jno
ins
rcl
lds
lock
mov
adc
jno
sub
adc
jbe
xchg
das
imul
ins
rcl
inc
outs
mov
dec
mov
jnp
icebp
sub
jns
addr16
mov
mov
bound
jns
rcr
test
retf
jno
mov
sbb
sbb
sbb
cld
in
retf
xchg
out
sub
inc
cmp
jo
sbb
call
lock
sbb
jns
adc
jns
fsub
or
xor
cld
aad
xchg
out
xchg
icebp
std
add
or
retf
jns
(bad)
mov
cdq
ins
xor
lock
lock
test
hlt
pushf
aam
xchg
fs
stos
jbe
sub
mov
or
cwde
mov
(bad)
xchg
icebp
mov
repnz
stc
retf
xchg
or
xor
cmp
cmp
jno
sbb
jns
pushf
hlt
xchg
stos
jbe
sub
mov
jbe
ins
cmp
jns
fs
cmp
retf
int3
mov
dec
xchg
fidiv
(bad)
xchg
div
cld
aad
xchg
sbb
jns
pushf
mov
in
jbe
sub
mov
jbe
cmp
jns
jg
(bad)
(bad)
out
xchg
mov
jnp
xor
(bad)
in
xchg
adc
adc
pop
dec
in
xchg
out
cli
mov
nop
mov
xchg
retf
clc
xchg
mov
cmp
out
xchg
jns
push
mov
jnp
xor
into
pushf
sahf
xchg
pushf
leave
xchg
test
inc
jns
call
xchg
retf
mov
cmp
xor
fdiv
mov
call
lock
pop
xor
jbe
daa
jnp
sbb
adc
(bad)
cmp
fs
cmp
fmul
out
cli
mov
sbb
sub
jns
movs
leave
xchg
out
retf
xchg
fnstsw
inc
xchg
xor
or
out
xchg
xor
lock
adc
(bad)
cmp
fs
cmp
fcom
mov
sbb
popf
jmp
jns
movs
leave
xchg
in
retf
xchg
fnstsw
inc
xchg
xor
or
out
xchg
xor
adc
pop
mov
sub
rol
out
jns
ins
adc
js
ror
test
retf
icebp
mov
mov
jns
inc
jae
pushf
cwde
xchg
sbb
adc
(bad)
cmp
fs
cmp
fcom
mov
retf
cli
mov
sbb
popf
jmp
jns
movs
leave
xchg
in
retf
xchg
fnstsw
inc
xchg
xor
or
out
xchg
xor
clc
jmp
adc
fs
cmp
fcomp
out
cli
mov
sbb
xchg
retf
js
sbb
js
call
pop
xor
test
retf
xchg
fnstsw
inc
xchg
xor
or
out
xchg
xor
adc
pop
fimul
test
rol
out
jns
ins
jo
js
ror
test
retf
icebp
(bad)
lea
and
xchg
inc
adc
pop
loop
pop
xor
(bad)
in
xchg
out
cli
mov
sbb
xchg
retf
js
sbb
popa
xor
mov
mov
xchg
fidiv
xchg
xor
jns
dec
test
jns
push
lea
and
xchg
inc
pop
adc
pop
or
test
rol
out
jns
ins
ds
xchg
xor
jns
imul
mov
xchg
sbb
mov
cld
in
xchg
out
and
fnsave
js
pusha
leave
cmp
xchg
adc
aam
jns
fbstp
jns
xor
jns
nop
in
dec
mov
sbb
lock
out
sub
pushf
call
repnz
out
and
mov
sbb
cld
mov
mov
xchg
xchg
or
cmp
pop
js
xor
mov
sbb
fmul
retf
xchg
sar
xchg
xor
les
cmp
(bad)
sbb
shr
lock
xchg
retf
xchg
pushf
xchg
xchg
pushf
pushf
xchg
sbb
xchg
xchg
mov
xchg
retf
sub
pushf
in
xchg
out
lock
lods
out
xchg
jno
mov
sbb
xchg
xchg
or
ins
and
jns
sbb
jbe
pop
xor
xchg
mov
xchg
retf
sub
pushf
loopne
xchg
fs
out
test
cmp
mov
cld
icebp
out
xchg
fidiv
cld
js
xor
hlt
pushf
fadd
cld
leave
retf
xchg
dec
or
cmp
cmp
jp
sbb
jns
aas
mov
xchg
xchg
mov
xchg
retf
sub
and
cs
nop
jno
lock
test
cmp
mov
xor
clc
repnz
sbb
xchg
xchg
mov
xchg
retf
sub
and
cs
nop
jno
jo
cmp
adc
xor
clc
repnz
pop
jns
mov
mov
retf
out
add
pushf
leave
xchg
ja
jns
fnstsw
cli
fdiv
retf
xchg
sbb
jns
mov
jns
mov
mov
xchg
mov
xchg
jno
mov
sbb
xchg
icebp
in
pop
jns
mov
ins
nop
in
js
nop
neg
mov
out
jns
pushf
fadd
loope
retf
pushf
xchg
xchg
mov
xchg
dec
mov
xchg
sub
xchg
or
jns
jmp
xchg
inc
xchg
lock
mov
mov
jbe
inc
jnp
sbb
xchg
in
js
nop
div
cld
mov
xchg
pop
xor
cld
mov
mov
jns
sbb
cmp
cmp
jnp
sbb
jns
pushf
nop
xchg
mov
xchg
dec
pop
lock
cmp
js
sbb
xchg
call
jns
xchg
pop
jns
inc
mov
mov
pop
fidiv
jnp
xchg
mov
xchg
retf
lock
cdq
retf
xchg
out
sub
lods
dec
xchg
nop
rol
jge
xor
mov
xchg
cmc
and
sahf
mov
(bad)
fdiv
movs
pushf
xchg
out
or
mov
call
js
xor
fcom
mov
xchg
jno
mov
sbb
xchg
xchg
or
ins
and
jns
sbb
(bad)
outs
sbb
mov
sbb
les
cmp
jo
xor
hlt
pushf
pop
xchg
out
lea
xchg
retf
xchg
dec
adc
cmp
mov
mov
jbe
out
jns
sbb
les
xchg
sbb
cli
movs
inc
xchg
fnstenv
jns
mov
xchg
retf
sub
out
test
adc
sbb
mov
cdq
mov
xchg
retf
jns
popf
mov
cld
mov
retf
sbb
lock
xchg
cld
test
retf
jno
mov
sbb
xchg
icebp
test
ins
xchg
mov
cli
mov
je
inc
sbb
adc
xchg
jge
test
in
sub
pushf
int3
xchg
in
xchg
sbb
mov
sar
test
retf
jno
mov
sbb
xchg
icebp
pusha
adc
imul
retf
xchg
pushf
mov
repnz
out
jno
pushf
cwde
xchg
out
xchg
cwde
xchg
out
xchg
pushf
pushf
xchg
out
jno
rol
lock
mov
mov
xchg
fs
out
jno
pushf
fadd
popf
out
xchg
fadd
cmps
in
xchg
movs
les
jle
mov
xchg
retf
jns
fimul
add
mov
xchg
xchg
add
das
adc
xchg
cmp
cld
leave
retf
xchg
dec
cmp
mov
call
or
out
xchg
xchg
add
das
adc
xchg
xchg
add
das
adc
xchg
xchg
add
das
adc
mov
xchg
fs
out
jno
movs
ret
inc
push
mov
popa
lock
jae
adc
fnsave
adc
xchg
jns
sbb
sbb
sbb
xchg
add
cs
push
xchg
mov
dec
sub
add
mov
or
fidiv
jns
xor
repnz
xchg
retf
std
pop
and
xor
jmp
xor
cli
fnsave
xchg
js
retf
xchg
and
mov
jnp
jle
add
mov
or
repnz
mov
xchg
fisttp
aam
jns
xor
cmp
div
sbb
repz
add
lock
sahf
lock
in
repnz
mov
clc
adc
sbb
jns
repz
out
xchg
xchg
jno
sbb
sbb
das
cmps
add
or
lock
xor
jns
cwde
pop
cmp
pop
jns
sbb
call
fsub
pop
sbb
sub
push
sub
sar
xchg
cmp
cmp
in
mov
cwde
lock
enter
xor
mov
call
lock
cwde
lock
int3
lock
mov
jns
and
fnstcw
sbb
mov
cmp
xor
sbb
jl
mov
jns
sbb
lock
je
cmp
cmp
jl
popf
cmp
hlt
jbe
mov
jns
and
jns
sbb
div
sbb
xchg
xor
je
fwait
cmp
fisttp
sbb
jl
lock
hlt
stc
inc
cmp
in
mov
pop
mov
inc
(bad)
pop
xor
sub
adc
(bad)
cmp
je
jg
cmp
cmp
sbb
sar
sbb
aam
sbb
jns
pop
retf
jl
mov
jns
out
inc
jns
out
aad
cmp
mov
jns
out
inc
(bad)
pop
xor
jne
xor
xchg
mov
popa
mov
jns
ins
xor
lock
sbb
cwde
nop
jno
lock
imul
xor
push
out
xchg
sbb
or
pop
sbb
clc
lock
mov
popa
mov
jns
lock
popa
mov
jns
ins
xor
lock
sbb
jns
adc
(bad)
cmp
cmp
cmp
test
jns
out
xchg
mov
jns
ins
xor
lock
jns
mov
pop
inc
xor
stc
adc
(bad)
cmp
xor
cmp
xor
jns
cld
js
nop
cmc
nop
shl
retf
xchg
sbb
or
fstp
xor
stc
adc
(bad)
cmp
ss
cld
lock
pop
xor
jns
xor
add
sbb
mov
inc
mov
jns
lock
add
popa
mov
jns
lock
sbb
js
and
dec
jns
ret
cwde
lock
shl
mov
pop
xor
nop
(bad)
xor
jns
fcom
cmp
mov
jnp
xor
pop
xor
lods
sbb
fcomp
cmp
xor
pop
xor
mov
cmc
cdq
cmp
xor
pop
xor
int
xor
xchg
mov
inc
mov
jns
lock
jns
sbb
jns
sbb
(bad)
cmp
aaa
nop
jmp
(bad)
pushf
js
xor
je
fwait
cmp
mov
mov
jns
fs
cmp
cmp
jl
test
jns
hlt
add
push
push
retf
pop
cld
(bad)
cld
cmp
mov
jns
dec
cmp
jns
pushw
xchg
lock
popa
mov
jns
repnz
jns
add
xchg
mov
jns
sbb
(bad)
cmp
fist
sbb
(bad)
cmp
mov
mov
cmp
je
push
hlt
nop
adc
xor
rcl
jns
out
aad
cmp
mov
mov
popa
mov
jns
push
mov
jns
xor
mov
jns
imul
jbe
sbb
enter
mov
cmp
cmp
jl
test
jns
aam
icebp
pop
(bad)
jbe
pop
mov
mov
add
pop
inc
jg
sbb
fnstcw
sbb
jns
scas
jno
inc
cdq
xor
jns
aas
fdivr
sbb
fnstcw
sbb
jns
ins
and
add
xor
and
data16
jl
xchg
cmp
fbstp
stc
fs
jge
xor
stc
mov
ret
cwde
lock
fdiv
mov
sbb
jbe
sbb
aam
sbb
mov
fs
jl
adc
add
sbb
cli
sbb
fnstcw
sbb
clc
nop
mov
adc
pop
xor
xchg
add
jne
pop
xor
jns
xor
jne
xchg
fnstcw
sbb
inc
jl
xchg
cmp
out
lock
aad
cmp
mov
fnstcw
sbb
popa
nop
les
repnz
fnstcw
sbb
ror
pop
xor
jl
xchg
cmp
or
cmp
or
jns
ret
add
jbe
lock
xchg
cmp
hlt
cmp
sar
mov
add
lock
xor
mov
shl
xchg
fcom
jns
repnz
jbe
das
icebp
clc
sbb
xchg
and
xor
sbb
iret
js
jns
or
mov
sbb
fistp
jns
in
cdq
cmp
jnp
cmp
bound
fisubr
fwait
cmp
int3
js
nop
repz
shl
das
icebp
mov
jns
xchg
and
pop
xor
daa
fisub
pushf
call
mov
push
je
rcr
add
jbe
adc
jno
sub
and
cmp
sub
jns
mov
mov
xor
cli
jl
jns
pop
pushf
lock
repz
pop
xor
jns
push
cmp
idiv
sbb
xor
jl
lock
push
test
jns
ret
call
push
lods
jns
jno
js
xor
ror
jns
out
xlat
lock
mov
js
sbb
jl
(bad)
cmp
jno
xchg
mov
leave
sbb
jns
fisttp
cmp
xor
sbb
sbb
mov
or
lea
xor
fcom
jns
sbb
ins
lea
jns
out
xlat
lock
mov
sub
sbb
jns
sbb
adc
retf
or
icebp
call
cmp
dec
retf
or
xchg
jno
sub
xchg
fwait
jp
jns
sbb
mov
xchg
jns
xor
jge
xor
sbb
xor
mov
out
popf
xchg
sub
jns
out
add
icebp
xchg
mov
ins
lea
xchg
jo
in
mov
fisubr
and
imul
cld
mov
push
fidiv
jne
(bad)
inc
repnz
enter
mov
popf
lock
call
cmp
nop
jno
repnz
and
xor
mov
lea
add
lock
pop
jge
sbb
hlt
pop
int3
sub
pop
fsubr
xchg
jns
jno
sub
xchg
retf
ins
dec
mov
jns
pop
rcl
sbb
sbb
nop
jno
lock
enter
mov
jbe
and
mov
cmp
retf
or
jae
xchg
cmp
repz
js
xor
and
popa
lock
call
or
mov
add
push
cmp
retf
jns
sbb
jbe
jo
js
retf
jns
sbb
jbe
jo
jnp
retf
jns
sbb
jbe
jo
jp
retf
jns
sbb
jbe
jo
jge
retf
jns
sbb
std
jae
xor
repnz
and
cmp
daa
mov
xchg
cmp
cmp
clc
cmp
sub
div
mov
jns
into
xor
and
fstp
cld
icebp
sbb
lock
xchg
jnp
sub
test
into
cli
xchg
sbb
iret
ins
prefetch
cli
icebp
xor
sbb
xor
or
cmp
cmp
pop
mov
adc
jbe
sub
test
jns
cmp
sub
pop
stos
ins
xchg
and
jbe
sub
out
sbb
cmp
mov
xchg
daa
jl
jecxz
xchg
jge
in
cmp
mov
jge
jno
repnz
and
cmp
call
ins
sbb
jns
sbb
pop
jbe
jno
adc
and
inc
sbb
mov
sbb
js
add
add
jbe
stc
and
mov
jg
ins
jg
sbb
mov
stc
inc
pop
xor
nop
int3
cli
xchg
sbb
or
or
sbb
xchg
sbb
inc
jg
inc
outs
lock
imul
lock
xor
inc
inc
sbb
lock
stc
inc
pop
ss
nop
int3
cli
xchg
sbb
lock
xchg
jp
or
ins
jb
sbb
xor
jns
xor
xor
or
mov
xchg
daa
jl
jecxz
xchg
jge
in
mov
pop
int3
repnz
mov
cmp
loope
ins
jl
xor
jns
or
ins
lock
sbb
lock
xchg
jnp
or
ins
or
sbb
mov
jbe
sbb
cmp
xor
or
sbb
popa
icebp
fsub
imul
jge
sbb
jns
mov
jns
xor
jbe
add
imul
cld
mov
jne
bound
xchg
mov
jno
sub
repnz
inc
daa
xor
jo
mov
xchg
sbb
psubsb
jns
or
cmp
sbb
mov
sbb
cli
fistp
xchg
cmp
sub
(bad)
jnp
and
xor
mov
dec
fsub
(bad)
out
and
sbb
iret
jge
or
pop
and
jns
sbb
cli
jl
jns
pop
mov
rep
push
mov
test
sbb
jno
or
fistp
sbb
mov
jns
pop
int3
lock
out
push
test
sbb
lock
mov
sub
nop
and
fs
iret
jl
xchg
mov
xchg
in
sbb
js
call
jge
(bad)
cmp
loope
imul
xor
hlt
sub
call
jle
mov
jns
dec
bound
dec
and
fwait
sbb
dec
ins
inc
clc
cmp
inc
test
inc
push
mov
popa
lock
mov
fdiv
sbb
das
dec
fcomp
cld
cli
jmp
xchg
fadd
jns
xor
or
repnz
call
mov
sbb
mov
(bad)
cli
jmp
xchg
inc
push
xchg
out
stc
inc
sbb
mov
sbb
call
cmp
cld
jmp
sbb
ins
ss
daa
push
sub
test
lock
jbe
cmp
jbe
sub
fsub
jns
mov
xchg
sbb
xor
iret
mov
xchg
xchg
pop
mov
xchg
cmp
jbe
sub
(bad)
jnp
mov
dec
ins
dec
popf
cmp
sbb
jns
mov
xchg
sbb
xor
cld
jmp
cld
jmp
stc
and
xor
jbe
jns
xchg
repnz
mov
retf
xchg
sub
test
mov
or
fdivr
sbb
std
xor
jns
sub
test
mov
or
sar
sbb
xchg
sbb
jns
mov
js
xor
dec
loopne
xchg
pushf
in
cmps
xchg
retf
jl
fnsave
repnz
cmps
xchg
mov
mov
jl
xor
jns
mov
xchg
out
dec
xchg
adc
jns
icebp
les
jns
mov
mov
(bad)
xchg
mov
inc
test
xchg
xchg
inc
scas
hlt
pushf
mov
xchg
fs
fild
jns
sbb
mov
xchg
test
jns
mov
xchg
cmc
fild
cmps
out
xchg
jbe
retf
xchg
fnstsw
lock
cmp
fdivr
(bad)
retf
xchg
test
xchg
cmp
retf
lock
sti
ss
in
dec
ret
call
xchg
out
or
pop
mov
jns
xor
or
mov
xchg
xor
or
mov
jns
nop
mov
cmps
out
xchg
aaa
cwde
idiv
sbb
sbb
jns
outs
add
out
and
pushf
fcom
js
mov
xchg
jns
and
jbe
inc
retf
xchg
pop
xor
int3
shr
xchg
dec
and
fnstsw
jp
xor
iret
mov
xchg
xchg
cmc
fwait
jnp
and
je
lock
xchg
xchg
mov
(bad)
test
jns
mov
mov
mov
sbb
xor
xchg
cmp
xchg
and
in
in
fild
lock
jnp
aad
jp
enter
ds
pushf
rcl
test
jns
xor
or
jbe
stc
movs
xlat
cmps
xchg
xor
and
mov
sbb
xchg
and
xor
cld
mov
idiv
sbb
jns
sbb
xchg
fisttp
nop
mov
cmps
out
repnz
mov
mov
cli
mov
pushf
mov
cld
fld
retf
xchg
mov
jnp
pushf
movs
cmps
xchg
mov
xchg
pushf
loopne
xchg
mov
xchg
add
retf
xchg
out
movs
cmps
out
xchg
fild
jns
pushf
loopne
xchg
or
xchg
mov
xchg
pushf
and
(bad)
retf
xchg
movs
xlat
cmps
xchg
xor
mov
cmp
repnz
xchg
jne
mov
xchg
adc
js
out
aad
out
xchg
loop
xor
mov
mov
xchg
xchg
cmc
fwait
jnp
mov
push
hlt
int
xchg
mov
mov
mov
ins
cmp
lea
or
sub
mov
jns
mov
xchg
cmp
sbb
xor
stc
fs
jbe
push
js
sbb
xchg
xor
nop
sbb
or
sbb
std
inc
sbb
nop
add
lea
sbb
jns
sbb
jnp
nop
mov
cmps
out
mov
xchg
mov
popf
(bad)
retf
xchg
popf
cmps
out
lock
inc
jns
sbb
mov
xor
addr16
(bad)
cli
xchg
sbb
mov
xor
jae
(bad)
cli
xchg
sbb
inc
jns
cmp
jl
fnsave
jbe
mov
mov
ins
mov
mov
cmps
out
js
scas
xor
xor
or
mov
jns
call
lock
shl
lock
fbstp
pushf
rcl
jmp
jae
(bad)
std
jmp
xchg
stc
aam
jmp
mov
(bad)
jnp
movs
and
mov
sbb
jns
inc
push
stc
and
xor
or
mov
inc
sbb
jns
inc
ins
stc
and
xor
or
mov
inc
sbb
jns
sbb
ds
jbe
pushf
xchg
cmps
xchg
cmp
add
sbb
jbe
mov
xchg
out
sub
out
int3
lods
(bad)
retf
xchg
call
xchg
xor
cmp
retf
jns
mov
xchg
xchg
cmc
fwait
jnp
in
mov
jnp
jns
repnz
and
jge
retf
cld
(bad)
test
clc
movs
rcl
sbb
xchg
mov
test
retf
stc
cld
jmp
cld
jmp
stc
and
xor
jbe
sbb
and
imul
cld
mov
inc
dec
bound
repnz
cmp
cmp
or
popa
mov
test
jno
js
dec
sahf
hlt
sub
mov
sbb
mov
xchg
jno
lock
hlt
add
mov
jns
push
xor
jns
nop
hlt
add
mov
jns
push
xor
jns
nop
repnz
mov
sub
cdq
nop
xor
popa
jns
repnz
sbb
outs
repz
iret
sub
push
cmp
stc
pop
iret
jge
adc
or
popf
clc
pop
enter
xor
cmp
xor
enter
repz
iret
sub
push
cmp
in
xor
clc
je
jns
sbb
cmp
xor
inc
mov
jne
iret
cmp
adc
sbb
js
pop
enter
div
sub
cmp
cmp
mov
cli
sbb
or
call
sbb
iret
cmp
ret
fld
cli
stc
xor
sbb
jp
pop
enter
div
sub
cmp
cmp
adc
stc
sbb
or
mov
sbb
jns
push
cmp
xor
jns
ds
cmp
or
jge
jno
jge
jno
js
dec
xor
cmp
out
mov
outs
xchg
aaa
jbe
dec
int3
inc
cmp
cdq
jno
js
ds
cmp
xor
or
pop
clc
lock
ret
sbb
nop
jno
lock
enter
or
jns
xor
jge
jno
js
cmp
push
mov
popa
lock
dec
sub
dec
mov
adc
outs
mov
cmp
nop
not
xchg
xor
das
jae
xchg
push
dec
xor
lock
mov
js
inc
xor
fbstp
and
repnz
jg
mov
js
fld
or
jns
cli
mov
es
inc
std
mov
jge
xor
xchg
and
jns
dec
arpl
mov
sub
lock
sahf
lock
enter
mov
dec
jns
mov
or
xchg
mov
cdq
out
sub
xchg
mov
cdq
out
sub
call
lock
xor
fisub
pushf
dec
mov
xchg
ror
jns
xor
jns
inc
jno
sbb
retf
xor
and
popa
lock
call
or
jl
lock
xor
cdq
xor
jns
aaa
adc
aaa
adc
xor
xchg
dec
dec
xor
lock
cli
add
xor
jg
jno
cli
cmp
xchg
jle
jns
sub
xchg
sbb
das
xchg
add
jns
nop
test
mov
mov
lock
jae
xchg
mov
xor
lock
enter
int3
lock
adc
jno
lock
les
lock
les
or
bound
das
icebp
shr
sbb
lock
mov
mov
dec
mov
cs
scas
adc
pop
sbb
jns
mov
jns
pop
jge
sbb
adc
xor
mov
cwde
addr16
nop
xacquire
retf
sbb
pop
jnp
sbb
das
icebp
mov
mov
repnz
cmp
mov
cdq
or
ins
int
mov
in
sub
aam
jns
jae
hlt
cmp
adc
sub
cmp
bound
das
icebp
ins
sub
mov
or
xor
rcr
jns
inc
push
mov
popa
lock
dec
fs
cmps
cmps
ins
push
mov
mov
jns
shl
cmp
mov
stc
jns
xor
jge
xor
jns
xor
jns
retf
or
icebp
call
mov
jge
hlt
xchg
dec
jae
adc
xor
xchg
lock
nop
int3
dec
adc
inc
imul
dec
fsub
xor
hlt
cmp
inc
std
mov
sub
repnz
repz
adc
fs
jno
movd
dec
ret
test
popa
test
fistp
scas
xor
fidiv
add
dec
lea
out
jne
pop
(bad)
cmp
inc
sub
sbb
pop
xor
pop
dec
xor
cli
frstor
mov
sbb
(bad)
cmp
fs
sbb
and
gs
cmp
mov
sub
sub
xchg
jb
or
ins
xor
inc
cmp
mov
xchg
addr16
xor
cli
fnstsw
daa
inc
std
mov
sub
cs
cmp
or
repz
ins
push
add
mov
ret
sbb
nop
jno
lock
enter
jbe
xchg
lock
jns
inc
add
iret
jge
adc
jns
int3
pusha
jns
call
nop
cwde
pop
test
arpl
adc
(bad)
cmp
mov
daa
inc
std
mov
xchg
sub
mov
mov
nop
call
mov
cli
jl
jns
jl
jns
jl
jns
fs
hlt
dec
xchg
cmp
aaa
jns
sbb
fdivr
jmp
imul
jno
popa
sbb
cmp
jno
xchg
xor
jns
scas
jno
jbe
jo
mov
fdivr
add
ss
call
mov
out
stc
add
xor
test
jno
jbe
je
icebp
pop
retf
nop
in
js
nop
div
pop
retf
pop
xor
cmp
mov
xchg
inc
jge
je
jnp
cld
cmp
out
xlat
lock
mov
js
fs
ror
call
cmp
push
cmp
cmp
into
or
js
sbb
into
sub
cmp
mov
push
fdiv
mov
jno
jbe
jns
mov
mov
popf
repnz
cmp
pop
xor
sub
cmp
sub
sbb
fwait
jbe
idiv
std
mov
inc
sbb
call
cmp
push
cmp
xchg
popa
jno
scas
data16
leave
xor
popf
xchg
pop
mov
mov
mov
mov
jmp
sbb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
sbb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
push
jmp
push
icebp
xor
jns
ins
jmp
jl
or
jns
sbb
pop
xor
repnz
jge
movs
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
sbb
xchg
je
and
jns
cmp
jbe
sub
js
mov
mov
jmp
mov
jmp
mov
jmp
sbb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
sbb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
in
mov
cli
cmc
and
das
dec
mov
cmp
mov
mov
mov
push
sar
jns
fstp
sbb
jno
js
fs
inc
out
retf
xchg
nop
div
sub
mov
xchg
inc
jg
pop
retf
xor
dec
sub
xor
cmp
mov
jle
xor
jbe
popa
xchg
loopne
test
out
int
mov
out
int
mov
pop
cmp
jge
or
or
push
push
or
cmp
and
iret
push
retf
xchg
and
cmp
cmp
jge
or
push
jmp
cmp
xor
sbb
mov
adc
pop
jmp
cmp
fs
jecxz
xor
jbe
jno
sub
fs
cmp
cmp
sub
xor
sub
mov
mov
(bad)
jno
les
xchg
inc
fs
call
lock
fdiv
mov
out
lea
jno
xor
bnd
pop
retf
xchg
fisub
pushf
call
out
dec
test
jo
sbb
sub
xor
je
aaa
mov
xchg
sbb
mov
data16
lock
dec
fcomi
mov
(bad)
lock
pop
xor
or
add
jns
nop
les
nop
repnz
cmp
xchg
fadd
and
mov
std
pop
sbb
jbe
dec
xchg
mov
and
mov
sbb
ins
inc
mov
cmp
jecxz
lock
jbe
dec
xchg
mov
and
mov
sbb
mov
sbb
out
push
xor
adc
aaa
jl
aam
jns
pop
fsubr
xchg
xchg
jnp
jns
lock
fcom
stc
cmp
jno
xchg
push
mov
scas
push
xor
lock
test
xor
imul
aaa
jl
aam
jns
pop
enter
in
mov
sbb
lock
or
mov
sbb
mov
fbstp
mov
jl
stc
cmp
jno
or
fdivr
sbb
cmp
fadd
sbb
add
cmp
xchg
cmc
fwait
imul
stc
cmp
fidivr
js
xor
addr16
xor
lock
in
xchg
outs
push
xor
repnz
jbe
out
mov
fwait
or
mov
sbb
adc
in
jp
(bad)
cmp
fadd
aaa
sbb
mov
pop
xor
cmp
fbld
jmp
loopne
mov
in
mov
jns
or
mov
pop
xor
jl
stc
cmp
jno
or
xchg
mov
cmp
fild
shl
mov
xor
imul
aaa
jl
aam
jns
pop
les
cmps
nop
jmp
inc
sar
cmp
sub
(bad)
repnz
mov
mov
sbb
jns
adc
inc
jns
nop
jmp
inc
sar
cmp
sub
(bad)
repnz
mov
mov
sbb
jns
adc
xor
xchg
popa
push
cmp
mov
mov
sbb
in
xchg
fnstsw
jns
xor
jnp
xor
jns
xor
jns
retf
or
icebp
aam
jns
mov
(bad)
sub
xor
jns
jno
sub
inc
cdq
sub
inc
popf
xchg
dec
jg
jns
inc
popf
xchg
call
fsub
xor
xor
mov
shl
cmp
mov
es
inc
std
mov
xchg
add
jns
dec
bound
(bad)
mov
sbb
stos
aaa
jns
ret
lahf
lock
fadd
sbb
mov
jns
mov
jns
div
xor
xor
stos
push
push
imul
fmul
jle
loopne
push
mov
in
lock
icebp
in
out
xchg
nop
repnz
push
icebp
pop
xor
sbb
iret
add
mov
lock
xchg
mov
push
sbb
lock
lea
xchg
out
repz
or
shl
cld
jle
retf
xchg
sbb
sbb
or
fbstp
dec
mov
out
lock
(bad)
lock
out
sub
mov
mov
sbb
xchg
icebp
cmp
sbb
adc
pop
jnp
sbb
adc
xor
cmp
sub
nop
mov
test
retf
xchg
mov
movs
pop
xor
xchg
les
jns
repnz
push
sbb
jns
mov
test
retf
sub
sbb
jns
jno
mov
sbb
int3
(bad)
in
xchg
out
lea
xor
xchg
mov
movs
call
retf
xchg
push
xor
clc
fucomip
push
jns
mov
xchg
jno
mov
sbb
xchg
jno
jns
cdq
fdiv
sbb
jl
lock
test
cld
out
xchg
sbb
shr
jns
out
shl
cld
icebp
leave
xchg
jne
cmp
dec
mov
sbb
sbb
cli
frstor
daa
inc
std
mov
xchg
or
cs
inc
ins
(bad)
in
scas
pop
cwde
ret
imul
popa
lock
int3
mov
fidiv
cmp
dec
mov
jns
es
jns
xor
jns
xor
or
retf
or
icebp
int3
xor
mov
nop
jno
lock
cmp
and
mov
sub
out
imul
ins
enter
xor
clc
out
jecxz
jns
imul
shl
sub
cld
arpl
or
clc
mul
xor
retf
or
icebp
in
xor
pop
js
out
ins
xchg
or
retf
or
icebp
or
mov
sub
shr
(bad)
ins
inc
sar
repz
xor
jge
xor
cmp
xchg
retf
or
out
jno
pop
xor
jns
lock
xchg
pop
mov
bound
jns
inc
imul
cld
mov
imul
shl
mov
clc
mov
xchg
jno
sub
adc
ss
sbb
adc
retf
or
out
jno
or
jns
adc
or
inc
out
popa
xchg
or
pop
jns
ins
and
or
fcomp
sbb
mov
in
mov
sbb
mov
in
xchg
xor
xor
mov
xor
mov
mov
dec
mov
dec
mov
das
cs
inc
ins
repnz
sub
lock
sub
pop
and
xor
sbb
sahf
nop
jno
lock
jg
xchg
jno
sub
jns
sbb
xchg
or
(bad)
xor
xor
mov
repnz
cmp
fs
adc
pop
jns
ins
and
or
fsubr
xor
xor
mov
in
push
xor
xor
mov
sbb
lock
inc
jge
jns
cmp
push
mov
cmc
cmp
cmps
bound
pop
mov
mov
cmp
xor
push
icebp
mov
sbb
push
xor
lock
int3
rcr
mov
fdivr
jbe
inc
pop
int3
or
sub
cmp
fidiv
jns
xor
jns
xor
sbb
jbe
xchg
adc
mov
mov
mov
fld
dec
(bad)
ins
lock
xor
icebp
jbe
xchg
call
jno
es
std
mov
shl
mov
fdivr
sbb
adc
jns
fisub
pushf
call
or
mov
test
xor
enter
xor
cmps
repnz
inc
daa
cmp
nop
int3
push
mov
shl
fadd
mov
sar
jns
pop
test
jle
jns
loope
mov
jns
jae
inc
daa
xor
mov
cdq
or
ins
push
lock
pusha
repnz
and
jns
mov
push
sbb
sbb
mov
test
shl
les
dec
fadd
sbb
mov
fild
jo
ins
sub
mov
in
sub
pop
xor
repnz
enter
div
sub
mov
outs
dec
(bad)
imul
enter
mov
xor
in
daa
and
imul
cld
mov
push
dec
bound
repnz
cmp
cmp
hlt
push
push
sub
xchg
lock
fmul
popf
nop
jno
sub
clc
cmp
sbb
test
call
sbb
lock
sar
jmp
add
iret
jge
mov
or
hlt
or
dec
call
inc
ins
int3
or
xor
xor
add
add
int3
shl
jns
out
int
scas
call
arpl
xor
ret
push
fdivr
xchg
sbb
cli
mov
in
arpl
and
jbe
cs
sar
sbb
cmp
push
cmp
jno
or
jno
lock
in
mov
jno
repnz
shl
inc
std
mov
xor
ss
cld
jbe
jns
bound
(bad)
lods
jnp
pop
cwde
repnz
fsubr
retf
xchg
out
xchg
les
nop
repnz
cld
loope
xchg
icebp
rcl
jno
div
ins
xor
lock
jb
sbb
xchg
daa
sub
sub
nop
and
jmp
retf
or
icebp
cwde
cmp
mov
add
jns
xchg
add
xchg
mov
(bad)
xchg
mov
xchg
movs
push
jns
sbb
adc
retf
xor
cld
in
xchg
sbb
or
pop
jge
sbb
outs
pop
xor
repnz
cmp
cld
leave
retf
test
out
stc
inc
sbb
adc
test
or
mov
retf
cli
mov
push
lds
jns
inc
jno
hlt
jb
jns
lock
push
lds
jns
add
cli
fnstsw
out
pop
xor
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
int3
test
retf
lods
jb
jns
lock
push
ds
sbb
jl
cmp
es
sbb
sbb
xor
loopne
int
repnz
enter
arpl
inc
call
push
mov
jp
xor
dec
pop
xor
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
int3
test
retf
dec
jb
jns
lock
lds
jns
add
cli
fnstsw
xchg
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
int3
test
retf
add
jns
call
jns
fsubr
jae
xor
loopne
int
sbb
xchg
fdiv
jns
push
jns
sbb
les
jno
mov
sbb
(bad)
pop
xor
cli
frstor
or
pop
imul
retf
xchg
pop
xor
xchg
mov
lock
clc
fucomip
sbb
fadd
cmp
xor
jae
xor
loopne
int
sbb
adc
(bad)
cmp
add
cli
fnstsw
jae
jbe
xchg
(bad)
cmp
xor
mov
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
add
cli
fnstsw
mov
jno
mov
sbb
int3
test
retf
push
jno
jns
lock
sbb
jns
mov
lods
mov
cmp
mov
sbb
loopne
int
repnz
enter
arpl
inc
call
les
imul
xor
shl
jns
add
sub
mov
sbb
xchg
icebp
cld
cmp
cmps
out
xchg
out
imul
out
adc
icebp
cwde
cmp
pop
icebp
mov
jae
sbb
mov
mov
jl
pop
xchg
add
jns
jp
jns
add
sub
retf
adc
lds
jns
fmul
cmp
or
jns
dec
jo
jns
ds
sbb
jl
or
pop
xor
int3
in
xchg
sbb
cmp
jns
xor
mov
mov
jl
daa
adc
lods
enter
fdiv
cmp
adc
jle
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
add
cli
fnstsw
(bad)
jns
mov
or
xchg
mov
xchg
retf
sub
add
jns
fsub
mov
sbb
jae
xor
loopne
int
sbb
adc
les
jns
add
cli
fnstsw
mov
shl
cld
aad
test
pop
xor
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
int3
test
retf
mov
jns
call
jns
ds
sbb
jl
cmp
cmp
xor
sbb
xor
loopne
int
repnz
enter
arpl
inc
call
pusha
cmp
mov
imul
xor
(bad)
retf
test
sbb
cld
sbb
xchg
mov
mov
test
xor
push
xchg
mov
xchg
retf
jp
(bad)
test
out
or
mov
ret
lahf
lock
hlt
xchg
cld
xchg
leave
xchg
or
loope
arpl
xor
mov
mov
sbb
add
mov
ret
fwait
mov
movs
retf
test
js
hlt
les
xor
xchg
and
sbb
xchg
(bad)
cmp
xor
mov
out
xchg
movs
lock
cmp
or
retf
xchg
out
or
xchg
mov
jns
retf
sub
pushf
enter
adc
icebp
inc
cmp
mov
popa
mov
ret
lahf
lock
hlt
xchg
jbe
jns
ds
sbb
jl
or
pop
xor
int3
in
xchg
sbb
cmp
lea
sbb
mov
mov
jl
daa
adc
lods
enter
fadd
sbb
mov
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
add
cli
fnstsw
cld
ror
test
out
lea
loope
xchg
in
jbe
(bad)
nop
mov
xchg
retf
lock
(bad)
lock
sbb
add
movs
xor
xchg
xor
std
push
xor
mov
sbb
cmp
xor
sbb
cld
loope
xchg
sbb
cld
loope
xchg
in
xchg
xor
cld
in
retf
test
sbb
mov
out
xchg
ror
cmp
and
mov
mov
in
lock
shl
cld
(bad)
test
in
lock
out
sub
mov
xchg
retf
hlt
std
sbb
xchg
xor
hlt
pushf
rol
loope
xchg
fnsave
lock
jmp
or
mov
leave
xchg
pushf
enter
adc
icebp
fdivr
jns
mov
popa
nop
les
nop
repnz
mov
adc
jns
ret
cmp
xor
jno
mov
sbb
int3
test
retf
cld
je
jns
lock
mov
ds
sbb
jl
or
pop
xor
int3
in
xchg
sbb
cmp
lea
sbb
mov
mov
jl
daa
adc
jbe
xchg
loop
sbb
mov
jmp
les
inc
sbb
cld
in
retf
xchg
out
sub
out
xchg
mov
retf
xchg
fnstsw
lock
loope
xchg
sahf
retf
jno
mov
sbb
int3
test
retf
push
je
jns
lock
adc
mov
lods
mov
or
pop
xor
int3
in
xchg
sbb
js
nop
repnz
cmps
es
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
int3
test
retf
in
jns
call
jns
ds
sbb
jl
or
pop
xor
int3
in
xchg
sbb
mov
sbb
int3
test
retf
fmul
jns
call
jns
shl
cld
ror
test
es
rcl
jns
add
cli
jecxz
add
icebp
push
inc
jns
lea
jns
xor
mov
data16
in
xchg
pop
xor
xchg
inc
or
call
jns
ds
sbb
jl
or
pop
xor
int3
in
xchg
sbb
inc
jns
lea
sbb
mov
mov
jl
daa
adc
lods
enter
fmul
sbb
mov
(bad)
mov
xchg
(bad)
sahf
inc
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
add
cli
fnstsw
mov
adc
jns
ret
cmp
xor
icebp
test
sbb
loopne
loopne
repnz
in
xchg
pop
xor
xchg
mov
jns
call
jns
add
cli
fnstsw
mov
(bad)
lock
sbb
loopne
loopne
cmp
popa
jmp
xchg
fsubr
inc
sbb
mov
pop
xor
int3
in
xchg
sbb
inc
jns
lea
sbb
mov
mov
jl
daa
adc
jbe
xchg
and
xor
mov
pop
xor
int3
in
xchg
sbb
inc
jns
ret
lahf
lock
hlt
xchg
or
mov
lods
mov
or
pop
xor
int3
in
xchg
sbb
cmps
xchg
retf
sub
pushf
enter
adc
jbe
sub
loopne
jns
mov
imul
lea
sbb
mov
mov
jl
daa
adc
jbe
xchg
stos
inc
sbb
mov
jmp
les
jns
add
cli
fnstsw
(bad)
xor
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
int3
test
retf
mov
jns
call
jns
fdivr
sbb
clc
mov
dec
mov
xchg
jno
xchg
cmp
arpl
cli
frstor
mov
(bad)
lock
sbb
loopne
loopne
cmp
popa
jmp
xchg
fadd
sbb
mov
pop
xor
int3
in
xchg
sbb
inc
jns
lea
sbb
mov
mov
jl
daa
adc
jbe
xchg
jle
sbb
mov
or
xchg
movs
or
mov
lods
mov
cmp
rol
xor
sbb
xor
loopne
int
repnz
enter
arpl
inc
call
pushf
inc
jns
mov
imul
int3
test
retf
mov
lock
sbb
adc
pop
jns
sbb
sbb
adc
dec
inc
sbb
cld
icebp
retf
test
nop
repnz
in
xchg
sbb
hlt
movs
rol
lods
enter
retf
int3
xchg
out
xchg
out
xchg
xchg
retf
xchg
push
and
xchg
stos
inc
sbb
push
adc
mov
mov
xchg
fbld
(bad)
and
repnz
fadd
lock
mov
es
outs
mov
dec
mov
js
sbb
mov
loope
sahf
lock
int3
xchg
pop
retf
jns
and
mov
sub
xchg
cmp
mov
xchg
icebp
cld
inc
jns
pop
jns
lahf
fstp
jns
mov
xchg
retf
sub
sbb
stc
icebp
jb
xchg
mov
gs
jno
js
jno
inc
sbb
(bad)
adc
pop
inc
xchg
pop
xor
xor
jbe
adc
xor
stc
icebp
push
mov
pop
xor
mov
repnz
jns
aaa
jns
cdq
fsub
mov
loope
mov
lock
mov
in
xor
sub
(bad)
xor
cmp
jns
out
shl
cld
cdq
leave
xchg
test
xchg
cdq
or
jbe
hlt
cli
cdq
sbb
xchg
pop
cmp
jne
xor
hlt
cmc
in
xchg
fisubr
mov
jl
fsub
inc
sbb
sub
mov
lock
mov
int3
dec
adc
mov
test
retf
xchg
mov
add
sbb
add
xor
sub
mov
outs
and
lock
inc
test
in
xchg
nop
mov
test
retf
xchg
or
dec
jns
mov
or
sub
imul
jae
xchg
pusha
jnp
pop
mov
xchg
sbb
jns
out
shl
cld
jne
xchg
icebp
jbe
xchg
rol
jns
nop
mov
test
retf
lock
and
jns
mov
test
retf
sub
icebp
push
dec
jns
fs
xor
xor
adc
mov
test
retf
sub
mov
cmp
adc
sbb
cli
fst
jo
ins
daa
das
xchg
test
jns
sub
nop
add
xor
clc
idiv
pop
jns
fadd
sub
xor
sbb
xchg
xchg
mov
test
retf
sub
out
in
test
retf
xchg
mov
xchg
out
xchg
xchg
leave
xchg
out
xchg
mov
mov
xchg
icebp
ror
pop
nop
mov
test
retf
jo
ins
daa
das
xchg
and
jns
nop
int3
push
adc
pop
fst
in
xchg
sbb
xor
mov
test
retf
sub
pushf
enter
fs
repz
xchg
sub
mov
test
retf
lock
jo
jns
mov
xchg
retf
sub
call
lock
cld
shl
xchg
pushf
rol
jns
push
mov
xchg
xor
sub
leave
xchg
popf
leave
xchg
fidiv
js
nop
int3
push
adc
fdiv
xchg
out
and
pushf
nop
test
mov
pop
jns
sbb
adc
pop
jns
sbb
xchg
jae
xchg
cmps
sub
jns
fnstcw
std
cmps
sbb
xchg
out
sbb
xchg
push
sbb
out
in
test
retf
adc
jbe
adc
jns
mov
xchg
retf
sub
call
xchg
xor
push
cwde
ret
adc
xor
cld
in
xchg
pop
xor
jae
xor
lock
xchg
jp
xor
sub
jns
pushf
push
test
jle
xchg
adc
or
jns
fmul
sbb
mov
call
or
sbb
arpl
jns
sbb
mov
xchg
retf
sub
icebp
lods
dec
jns
pop
js
jae
cmp
mov
xchg
retf
sub
call
jns
adc
fadd
fbld
mov
xor
mov
repnz
fadd
mov
xchg
jns
pushf
add
xor
lock
sahf
lock
push
test
icebp
pusha
dec
jns
pop
jns
lods
nop
test
sbb
sbb
sbb
sti
sub
repnz
test
xchg
imul
shl
jge
dec
mov
sub
dec
mov
pop
push
adc
cmp
nop
repz
xor
mov
mov
xchg
(bad)
dec
sbb
mov
out
jne
mov
neg
lock
enter
shl
cmp
mov
xchg
repz
push
lock
addr16
pop
sub
push
lock
mov
dec
sub
jbe
jno
jbe
popa
test
cmp
sub
xor
(bad)
hlt
pop
and
sub
xchg
jmp
xor
lock
jns
fnstenv
in
mov
pop
pop
jge
pop
sub
lock
add
call
mov
and
jns
mov
mov
into
pop
retf
pop
xor
sub
int3
dec
jns
retf
or
push
cmp
jo
jl
sub
fsub
jbe
jno
hlt
pop
xor
popa
test
cmp
sub
mov
xchg
mov
pop
int3
sub
sbb
fmul
adc
pop
jns
enter
nop
xacquire
retf
das
xchg
pusha
pop
jns
xchg
jno
sub
jle
sbb
xchg
sub
jns
nop
int3
push
adc
imul
cld
mov
sbb
sub
xor
sub
repnz
mov
or
rol
xor
mov
mov
xchg
fidiv
cld
(bad)
xchg
push
xor
hlt
pushf
mov
cld
(bad)
xchg
pop
xor
out
sub
lock
jns
sbb
mov
cdq
out
xchg
sbb
jns
fnstsw
mov
rcl
xchg
sbb
js
nop
repz
mov
pushf
mov
jns
mov
mov
jns
pushf
mov
cld
(bad)
xchg
sub
jo
inc
push
sub
cmp
cli
fnstsw
mov
rcl
xchg
mov
jns
nop
int3
push
adc
add
xchg
lods
push
xor
es
outs
mov
dec
mov
jns
icebp
push
dec
jns
addr16
cs
imul
nop
les
nop
repnz
xor
mov
mov
xchg
fbld
jge
xor
xchg
cmp
push
mov
cld
xchg
cdq
or
ins
int
mov
sbb
sub
call
jns
fdivr
sbb
mov
(bad)
mov
xchg
pushf
les
adc
cmp
mov
cdq
out
sub
call
jns
ds
sbb
jl
or
xor
cld
sbb
xchg
sbb
mov
sbb
lahf
nop
mov
cmps
out
lock
sbb
loopne
loopne
cmp
das
sub
xor
jns
ret
sub
mov
out
adc
cmp
mov
out
cs
push
add
call
jns
ds
sbb
jl
or
xor
cld
sbb
xchg
sbb
mov
pop
xor
cld
sbb
xchg
sbb
mov
jmp
pop
jns
mov
lods
mov
or
xor
cld
sbb
xchg
sbb
mov
sbb
jae
xor
loopne
int
sbb
xchg
lods
pop
jns
mov
lods
mov
stc
retf
xchg
jno
xchg
cmp
mov
xchg
icebp
cwde
dec
jns
mov
imul
lds
jns
mov
cdq
out
sub
cmp
cmp
mov
cdq
out
sub
call
jns
fcomp
dec
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
mov
cdq
out
sub
call
jns
mov
cdq
out
sub
call
jns
fcomp
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
mov
cdq
out
sub
call
jns
mov
cdq
out
sub
call
jns
ds
sbb
jl
xor
scas
dec
sbb
sbb
xor
loopne
int
hlt
movs
xor
xchg
arpl
and
jbe
hlt
movs
xor
xchg
arpl
cli
frstor
push
jmp
xor
xchg
fs
cmps
sub
cli
fnstsw
push
pop
xor
mov
mov
xchg
(bad)
repnz
sbb
jae
xor
loopne
int
sbb
adc
(bad)
cmp
mov
cdq
out
sub
call
jns
mov
cdq
out
sub
call
jns
ds
sbb
jl
or
xor
cld
sbb
xchg
sbb
mov
pop
xor
cld
sbb
xchg
sbb
mov
jmp
push
jns
mov
lods
mov
or
xor
cld
sbb
xchg
sbb
mov
xchg
mov
cdq
out
sub
aaa
fidivr
jns
mov
cdq
out
sub
call
jns
ds
sbb
jl
or
xor
cld
sbb
xchg
sbb
mov
pop
xor
cld
sbb
xchg
sbb
mov
jmp
add
jns
sbb
jl
or
xor
cld
sbb
xchg
sbb
mov
sbb
xchg
sbb
loopne
int
scas
cwde
repz
xor
xchg
arpl
outs
div
hlt
movs
xor
xchg
arpl
cli
frstor
dec
sub
rcl
jns
add
cli
jecxz
add
jno
mov
sbb
xchg
icebp
pusha
dec
jns
mov
jno
les
cmps
out
lock
sbb
xchg
icebp
add
sbb
dec
jns
lea
sbb
mov
mov
jl
and
popa
jmp
xchg
fs
ja
xor
cli
fnstsw
mov
xor
rcl
jns
add
cli
jecxz
add
icebp
mov
sbb
loopne
loopne
hlt
les
aam
xchg
and
sbb
xchg
sbb
mov
pop
xor
cld
sbb
xchg
sbb
mov
sbb
adc
pop
jns
sbb
cmp
inc
push
sbb
cld
in
xchg
sbb
cld
sbb
xchg
sbb
jns
mov
sub
xchg
out
push
sbb
int3
in
xchg
sbb
lahf
nop
mov
cmps
out
lock
pop
mov
mov
mov
cmc
mov
jns
addr16
cmps
add
fwait
inc
mov
sbb
sahf
nop
mov
and
lock
out
jns
loope
xor
inc
cmp
xchg
pop
sbb
xchg
popa
jno
dec
ss
mov
xchg
js
xor
lock
sahf
lock
mov
xchg
mov
jns
dec
fdiv
shr
xchg
loope
xor
pop
xor
imul
test
sbb
xchg
icebp
push
jge
sbb
cld
lods
leave
xchg
pop
xor
int
jbe
adc
xor
stc
icebp
repz
xchg
mov
pop
adc
jbe
mov
xor
sbb
xchg
xchg
mov
test
retf
sub
nop
int3
js
nop
repz
mov
mov
xchg
icebp
mov
std
fs
jno
xchg
cmp
mov
xchg
icebp
jo
jns
mov
xchg
xchg
mov
xchg
retf
sub
icebp
out
popf
xchg
mov
xchg
loope
xor
sbb
xchg
icebp
test
sbb
js
nop
repz
xchg
jns
fidiv
js
sbb
les
inc
gs
fidiv
js
cwde
(bad)
sbb
cld
mov
fdivr
retf
and
pushf
nop
test
mov
pop
jns
sbb
adc
pop
jns
sbb
xchg
jae
xchg
jecxz
xor
jo
cmp
neg
xor
xchg
and
xor
mov
push
jns
out
fld
jbe
adc
jns
mov
xchg
retf
sub
call
xchg
xor
push
cwde
ret
aad
sbb
cld
in
xchg
pop
xor
mov
fistp
xchg
jp
xor
ja
xor
stc
pushf
dec
add
iret
xchg
adc
jbe
or
jns
jno
mov
fcom
sbb
xor
sbb
xchg
dec
fcomp
push
sbb
js
pop
xchg
cmp
mov
xchg
icebp
aas
enter
mov
jns
cmp
stos
sbb
hlt
pushf
mov
sub
call
ret
sbb
adc
retf
int3
in
in
xchg
pushf
mov
xchg
xchg
xor
clc
mul
jb
sbb
xchg
out
in
test
retf
xchg
stos
int3
retf
xchg
fbstp
jns
lods
mov
cmps
push
sbb
jb
jbe
xchg
test
jns
dec
pop
jb
pop
xor
xchg
xchg
sbb
call
adc
fidivr
jns
mov
in
in
xchg
repnz
sub
fidiv
in
test
retf
xchg
mov
retf
xchg
fnstsw
xchg
xchg
mov
test
retf
cli
xchg
sub
lods
mov
(bad)
scas
out
cli
mov
sub
jns
icebp
test
jns
repz
in
retf
xchg
xor
clc
ficomp
cld
int
retf
xchg
icebp
ins
push
jns
mov
mov
fucom
retf
xchg
out
fld
xor
repnz
test
xchg
fistp
loope
xor
shl
jge
dec
mov
sub
dec
mov
pop
mov
mov
cmp
sub
rcl
sbb
jne
rcr
hlt
dec
imul
xor
lock
jns
dec
(bad)
pop
sbb
xchg
lods
sbb
jne
dec
xor
icebp
test
jns
addr16
xchg
aas
xor
hlt
pop
enter
bound
call
jns
mov
repnz
xor
mov
mov
adc
sbb
cmp
fs
xchg
int3
adc
dec
fadd
sub
jno
es
outs
mov
dec
mov
jns
icebp
adc
jns
bound
(bad)
pop
sub
cwde
repz
or
xor
jl
inc
jno
nop
sbb
jo
ins
xor
bnd
sub
retf
jbe
sbb
xchg
dec
fmul
push
sbb
js
inc
jne
pushf
xor
xchg
xchg
mov
xchg
fnstsw
inc
xchg
xor
or
or
mov
inc
xor
lock
(bad)
es
std
mov
xchg
or
mov
sahf
lock
int3
lock
sbb
adc
repz
pop
retf
pop
fidivr
jns
jno
sub
pusha
push
jns
mov
jns
pop
xor
stc
enter
retf
xor
jbe
jno
cli
fnstenv
sub
out
cmp
jno
sub
sbb
jns
mov
popa
xchg
jno
sub
adc
sbb
xchg
(bad)
cmp
fdivr
push
sbb
mov
jg
cmp
push
cmp
int3
je
xchg
imul
dec
bound
(bad)
mov
mov
nop
int3
js
nop
repz
adc
xor
jl
xor
adc
movs
js
sbb
adc
pop
jg
or
mov
mov
sbb
js
pop
dec
xchg
enter
push
sbb
js
pop
dec
xchg
aam
sbb
jbe
sbb
sub
xor
dec
stc
test
jns
loopne
jns
jae
das
adc
retf
dec
push
mov
jns
lock
jns
xor
dec
gs
sbb
jns
int3
js
nop
repz
pop
dec
xchg
(bad)
cmp
fdivr
js
pop
dec
xchg
(bad)
cmp
fmul
push
sbb
js
pop
dec
xchg
retf
(bad)
push
sbb
js
pop
dec
xchg
enter
jmp
adc
jae
das
adc
retf
dec
dec
mov
jns
fs
jns
xor
dec
mov
jns
nop
int3
mov
ficomp
das
jae
xchg
cmp
pusha
push
jns
pop
js
jae
xchg
cmp
jo
jns
mov
sub
xor
sahf
nop
jno
lock
mov
popa
lock
dec
arpl
div
push
loope
xor
sub
aam
sbb
mov
pop
mov
mov
xchg
cmp
mov
sbb
xchg
enter
out
sbb
inc
mov
jns
int3
mov
xchg
cmp
mov
or
out
push
(bad)
pop
xor
or
xor
fidivr
loope
cmp
pop
test
sbb
push
pop
sbb
test
add
pop
xor
aaa
ds
ficomp
xchg
cmp
loope
cmp
pop
test
sbb
cmp
xor
test
add
pop
xor
push
ds
fisub
cmp
loope
cmp
pop
test
sbb
pop
sbb
xchg
xchg
xchg
cmp
xor
jns
xchg
push
rcr
adc
retf
dec
pop
mov
jns
in
adc
jae
xchg
cmp
call
gs
pop
xor
lods
nop
je
adc
retf
dec
std
test
jns
enter
nop
int3
dec
adc
fsub
dec
mov
lock
lock
rcl
inc
test
cmc
fnstcw
jns
fcom
test
retf
cli
mov
pop
xor
mov
sub
jns
xor
xchg
cld
adc
cwde
fcmovnu
inc
sbb
cmp
fs
xchg
rcl
jns
xor
dec
sub
xor
repnz
enter
fs
pop
cmp
dec
pop
jns
sbb
cdq
adc
lock
jns
xor
jns
(bad)
pop
sbb
cmp
sbb
dec
dec
mov
jns
sbb
xchg
jno
push
pop
(bad)
cli
xchg
jge
adc
and
jns
mov
adc
fnstcw
jns
(bad)
xchg
cmp
pop
jns
ins
adc
mov
mov
cmp
nop
repz
add
pop
xor
jns
add
jmp
pop
int3
push
cmp
mov
sbb
or
adc
sti
fnstcw
jns
xor
push
aas
xor
fidivr
cmp
xor
jnp
xor
jns
xor
js
xor
jns
xor
lds
xor
adc
pop
jns
adc
xchg
push
repnz
pop
dec
xchg
(bad)
cmp
fdiv
jns
add
pop
xor
jns
add
imul
sbb
jns
adc
sti
fnstcw
jns
xor
mov
test
jns
fild
jns
add
pop
xor
jns
add
imul
add
xor
sbb
hlt
jbe
adc
fnstcw
jns
xor
(bad)
cmp
jns
mov
xor
dec
sub
xor
dec
pop
test
jns
and
test
xor
adc
sbb
jns
xor
adc
fdivr
jns
(bad)
xchg
cmp
pop
jns
push
adc
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
imul
jno
jns
sbb
adc
xor
sub
xchg
cmp
pop
fwait
xchg
pop
xor
jns
and
xchg
ins
(bad)
pop
xor
jns
add
pop
xor
jns
add
leave
pop
xor
sbb
sbb
adc
adc
xchg
fdivr
jns
xor
cmps
cmp
cdq
cmp
repz
sbb
xor
sti
cmc
jbe
adc
pop
cmp
xor
xchg
test
jns
jno
xchg
cmp
pop
jns
pop
xor
xchg
aam
xor
(bad)
cmp
retf
dec
dec
mov
jns
sbb
dec
sbb
xor
adc
sbb
adc
jp
cdq
adc
xchg
fdivr
jns
xor
(bad)
xor
ficomp
xor
dec
sub
xor
dec
jns
cmp
sbb
sbb
adc
call
cdq
adc
xchg
fdivr
jns
xor
inc
cmp
fwait
cmp
daa
dec
jns
ret
sahf
lock
fdiv
mov
out
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
imul
sbb
adc
xor
adc
xor
sub
xchg
cmp
pop
fwait
xchg
pop
xor
jns
les
sbb
clc
xchg
test
jns
jae
xchg
cmp
xor
dec
pop
test
jns
and
clc
sbb
adc
xor
jns
and
sbb
sbb
cmc
jbe
adc
fnstcw
jns
xor
xlat
cmp
fisubr
cmp
xor
dec
sub
xor
dec
pop
test
jns
and
push
jno
js
sbb
sbb
jns
xor
adc
cmp
(bad)
xchg
cmp
pop
jns
ins
pop
jns
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
imul
jno
js
sbb
adc
xor
sub
xchg
cmp
pop
fwait
xchg
pop
xor
jns
or
sbb
lock
xor
dec
sub
xor
dec
pop
test
jns
and
das
jno
js
sbb
sbb
jns
xor
adc
fdivr
jns
(bad)
xchg
cmp
pop
jns
in
jns
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
popa
adc
movs
jns
sbb
adc
xor
sub
mov
sbb
pop
xor
jns
xor
xchg
fcom
jns
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
popa
adc
idiv
sbb
adc
xor
sub
retf
cmp
pop
jo
pop
xor
jns
xor
xchg
pushf
push
jns
mov
mov
mov
dec
mov
jns
sbb
dec
sbb
pop
push
adc
xor
jns
and
jns
mov
adc
lds
jns
cmp
jns
sbb
aas
cmp
fidiv
fwait
cmp
xor
dec
sub
xor
dec
jns
cmp
sub
sbb
sbb
adc
xor
sub
mov
sbb
pop
xor
jns
xor
xchg
adc
jns
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
outs
adc
popf
js
sbb
adc
xor
sub
xchg
cmp
pop
jnp
pop
xor
jns
loopne
jns
xchg
loope
pop
xor
inc
loope
xchg
int3
sbb
out
shl
cmp
mov
xchg
dec
mov
das
cmps
loop
(bad)
xor
jns
in
fnstcw
jns
inc
jno
loope
xchg
hlt
jbe
das
icebp
fisttp
imul
mov
dec
jno
jne
xchg
js
jns
nop
int3
mov
fidivr
xchg
sub
xor
adc
retf
dec
dec
mov
jns
sbb
cmp
pop
cmp
dec
mov
mov
jae
adc
xor
stc
dec
pop
movs
mov
adc
sbb
jns
icebp
adc
sbb
adc
add
pop
xor
jns
pop
inc
repnz
int3
push
cmp
mov
sbb
or
adc
sti
fnstcw
jns
xor
xchg
cmp
ficomp
int3
push
adc
xor
jns
add
push
sbb
repnz
int3
push
cmp
mov
sbb
or
adc
sti
fnstcw
jns
xor
sar
xor
fidivr
cmp
xor
jnp
xor
jns
xor
js
xor
jns
xor
lds
xor
adc
pop
jns
adc
xchg
hlt
adc
jns
repnz
pop
dec
xchg
(bad)
cmp
fdiv
pop
sbb
jns
add
pop
xor
jns
add
leave
pop
xor
sbb
jae
adc
mov
adc
lds
jns
mov
jns
pop
adc
jns
(bad)
cmp
mov
mov
jns
xor
cmp
xor
xchg
aam
sbb
and
adc
pop
cmp
xor
dec
icebp
cdq
cmp
shl
sbb
dec
ins
and
jns
xor
jns
sub
aam
sbb
mov
ins
jae
adc
jp
jns
retf
dec
xchg
mov
jns
test
jns
jae
xchg
cmp
xor
dec
jns
cmp
sbb
sbb
adc
xor
sub
mov
sbb
pop
xor
jns
nop
data16
xchg
stc
enter
xchg
jnp
jns
(bad)
mov
adc
add
pop
xor
jns
add
leave
pop
xor
push
sbb
adc
xor
jns
aaa
jns
dec
pop
movs
mov
adc
cmc
jbe
adc
fsub
sbb
push
mov
jns
sub
xchg
sub
xor
dec
pop
test
jns
and
clc
sbb
adc
ins
js
xor
jns
xor
adc
cmp
(bad)
xchg
cmp
pop
jns
cmp
jns
mov
mov
and
adc
retf
dec
dec
mov
jns
sbb
dec
cmp
or
adc
idiv
sbb
sbb
cmc
jbe
adc
fnstcw
jns
xor
fwait
pop
xor
fisubr
popf
cmp
xor
dec
sub
xor
dec
pop
test
jns
and
test
xor
adc
push
adc
xor
adc
fdivr
jns
(bad)
xchg
cmp
pop
jns
mov
jns
mov
mov
call
xor
adc
retf
dec
dec
mov
jns
sbb
dec
cmp
or
adc
xchg
jns
sbb
sbb
cmc
jbe
adc
fnstcw
jns
xor
adc
xor
fimul
xor
dec
sub
xor
dec
pop
test
jns
and
popf
sbb
adc
xor
jns
sub
jns
xor
adc
(bad)
xchg
cmp
pop
jns
sub
jns
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
imul
jno
jns
sbb
adc
xor
sub
xchg
cmp
pop
fwait
xchg
pop
xor
jns
int3
fs
xchg
fxch
pop
xor
jns
add
pop
xor
jns
add
leave
pop
xor
popa
jno
jns
sbb
adc
fs
stos
jbe
adc
fdivr
jns
xor
jns
fadd
sbb
gs
add
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
popa
adc
pop
aas
adc
adc
adc
cmp
xor
jns
fdivr
sbb
push
mov
jns
sbb
dec
dec
mov
jns
sbb
dec
sbb
pop
sbb
adc
xor
sub
mov
sbb
pop
xor
jns
xor
xchg
push
sub
mov
pop
jns
sub
(bad)
cmp
pop
jns
sub
leave
cmp
pop
outs
adc
je
jns
pop
adc
xor
sub
xchg
cmp
pop
jnp
pop
xor
jns
and
xchg
loope
pop
xor
add
retf
xchg
loope
xor
out
es
shl
sub
cld
mov
imul
aas
push
cwde
fcmovnu
jnp
xor
jns
mov
jns
pop
jp
sbb
adc
xor
stc
out
jno
hlt
cs
nop
repnz
xchg
cmp
in
sbb
adc
bound
lock
jns
icebp
xor
jns
mov
test
repz
sbb
repz
arpl
xor
cmp
fs
cmp
fs
cmp
xchg
pop
inc
mov
sbb
xchg
movs
xchg
xchg
inc
enter
xor
or
pop
and
bnd
xchg
or
fadd
out
cli
mov
adc
or
jge
jno
sub
inc
imul
jno
jns
cdq
fcom
add
mov
mov
cmc
xor
sbb
(bad)
sub
sub
ret
lahf
lock
enter
mov
push
sbb
pop
xor
cld
sbb
xchg
sbb
inc
add
jns
push
xor
jns
ret
xor
mov
xchg
and
jns
pushf
xor
xchg
fs
add
xor
stc
fs
jnp
or
pop
xor
cld
sbb
xchg
sbb
mov
(bad)
lock
ins
and
jns
pushf
xor
xchg
fs
aas
add
stc
fs
jge
or
pop
xor
cld
sbb
xchg
sbb
add
xor
jno
mov
jns
retf
xchg
icebp
sub
jns
mov
jecxz
xor
stc
fs
jg
or
pop
xor
cld
sbb
xchg
sbb
add
xor
jno
mov
jns
retf
xchg
icebp
shr
sbb
adc
cmc
cmp
mov
xchg
retf
sub
cdq
dec
xchg
and
jns
pushf
xor
xchg
fs
iret
push
xor
clc
div
push
jns
mov
xchg
inc
push
jns
mov
xchg
retf
sub
cdq
dec
xchg
and
jns
pushf
xor
xchg
fs
sti
push
xor
stc
fs
jne
or
pop
xor
cld
sbb
xchg
sbb
(bad)
adc
jns
cdq
dec
xchg
adc
fdiv
hlt
pushf
xor
xchg
fs
aaa
push
xor
stc
fs
ja
or
pop
xor
cld
sbb
xchg
sbb
jns
xor
xor
jbe
adc
cmp
mov
xchg
retf
sub
sbb
popf
xchg
pop
cmp
fnstenv
adc
cmp
ins
test
adc
inc
add
cli
fstp
mov
(bad)
lock
out
and
nop
shr
sub
cs
cmp
inc
sbb
push
jns
out
shl
cmp
mov
mov
push
xor
das
icebp
cld
popa
jns
mov
sub
dec
xchg
shl
xchg
fnstsw
mov
dec
fsubr
popa
sbb
mov
inc
push
mov
xor
nop
sar
xchg
xor
jns
bound
mov
mov
mov
retf
lock
nop
repnz
(bad)
daa
sysenter
jns
loopne
jns
mov
lods
mov
out
stc
(bad)
jmp
adc
idiv
jns
mov
mov
retf
sub
nop
les
nop
repnz
(bad)
jmp
adc
cmp
mov
mov
retf
sub
cdq
mov
or
pop
sbb
hlt
ret
xchg
sbb
(bad)
jmp
adc
cmp
mov
mov
retf
sub
mov
ret
lahf
lock
aam
xchg
mov
add
sbb
xchg
icebp
sub
les
ins
and
jns
pushf
(bad)
jecxz
xor
stc
movs
mov
cmp
mov
xchg
icebp
mov
jns
mov
mov
xchg
cmp
push
sbb
xchg
icebp
push
ins
jns
mov
mov
retf
xchg
and
jns
pushf
(bad)
aas
or
jns
movs
mov
cmp
mov
xchg
icebp
sbb
mov
mov
xchg
aas
or
jno
mov
xchg
out
retf
xchg
icebp
cmp
mov
mov
retf
xchg
and
jns
pushf
(bad)
mov
mov
cmp
mov
xchg
icebp
in
ins
jns
mov
mov
retf
xchg
and
jns
pushf
(bad)
(bad)
or
test
jns
mov
mov
retf
sub
cwde
fisub
sub
test
idiv
jns
xchg
xchg
xchg
mov
imul
int3
xchg
movs
fmul
jb
adc
sbb
jns
out
stos
adc
mov
push
addr16
lock
add
or
pop
xor
sbb
retf
xchg
fnstsw
cld
cmc
int3
xchg
fdiv
jns
lock
sbb
jns
mov
jnp
xor
(bad)
in
xchg
sbb
stc
movs
retf
test
xor
xchg
jmp
mov
xchg
jno
xchg
cmp
mov
xchg
icebp
hlt
popa
jns
mov
jne
mov
or
sbb
mov
nop
cmc
mov
loopne
push
mov
in
lock
(bad)
xchg
mov
jnp
xor
inc
jns
cmp
inc
dec
adc
push
xchg
cmp
mov
xchg
icebp
pusha
popa
jns
mov
sbb
adc
adc
test
retf
xchg
icebp
or
jns
mov
popa
bnd
jns
xor
hlt
pushf
enter
fs
sbb
(bad)
es
mov
xchg
jno
xchg
cmp
mov
xchg
icebp
xor
sbb
pop
xor
cld
in
xchg
sbb
mov
out
xchg
icebp
push
cld
test
retf
xchg
fnstenv
sub
pushf
enter
adc
jbe
hlt
pushf
enter
fs
mov
frstor
jns
mov
and
and
nop
les
mov
retf
lock
repz
hlt
pushf
enter
fs
test
retf
xchg
fnstsw
jo
push
mov
js
xor
cld
in
xchg
icebp
sub
jns
ins
lock
loope
xchg
sbb
adc
xor
xchg
jmp
xchg
repz
hlt
pushf
enter
fs
aas
push
xor
cli
frstor
jae
jbe
hlt
pushf
enter
fs
add
xor
hlt
pushf
enter
fs
add
call
pop
repnz
call
lds
xchg
pushf
call
std
jl
retf
sbb
jbe
xchg
call
les
outs
in
mov
(bad)
lock
out
hlt
cld
in
xchg
pop
xor
cld
in
xchg
sbb
mov
loope
xchg
icebp
and
jns
mov
xchg
movs
enter
arpl
repnz
in
mov
or
cmp
sbb
sbb
xchg
pushf
enter
fs
in
int3
xchg
sbb
mov
xchg
fs
mov
movs
enter
arpl
(bad)
in
int3
xchg
dec
fsub
push
loope
xchg
lods
rol
pop
xor
jns
xor
fisttp
xor
sub
adc
jns
mov
xchg
dec
retf
int3
xchg
loope
xchg
call
jbe
adc
xchg
retf
int3
xchg
loope
xchg
nop
les
nop
repnz
outs
das
jns
cwde
and
inc
fnstsw
daa
inc
std
mov
pushf
mov
fdivr
sbb
das
dec
(bad)
movs
or
lock
cwde
(bad)
pop
sub
xor
in
fnstenv
adc
pop
js
push
xor
pop
or
lock
nop
xchg
xchg
cmp
xchg
out
or
adc
fdiv
ins
sbb
clc
repnz
jno
add
cmp
repz
mov
jns
sbb
lock
aam
xor
xlat
or
adc
xor
jns
movs
enter
push
push
or
sub
pop
ins
jns
mov
mov
jns
mov
xchg
out
sub
or
adc
pop
jmp
cld
test
xchg
out
cli
mov
sbb
cld
xor
jns
call
test
dec
mov
add
jbe
rcr
jns
xlat
lock
test
xchg
or
jns
imul
cmp
push
sar
cli
mov
mov
cld
into
hlt
retf
xchg
add
jbe
mov
xchg
out
ret
stos
push
push
imul
fmul
jle
loopne
push
mov
in
lock
icebp
in
and
xchg
xchg
mov
into
hlt
retf
xchg
mov
xchg
out
inc
jno
hlt
mov
xchg
fcom
ins
sbb
mov
pop
repnz
aam
retf
xchg
mov
xchg
out
dec
clc
jmp
fdivp
retf
xchg
jno
enter
lods
xchg
pop
xor
cld
mov
fdiv
ins
sbb
jns
mov
xchg
out
sub
pushf
test
jmp
xor
hlt
pushf
xchg
xchg
xchg
fs
xlat
fcmove
xchg
pushf
xchg
xchg
xchg
fs
dec
(bad)
xchg
(bad)
mov
jae
hlt
cld
mov
fdivr
push
xor
lock
push
xor
lock
xchg
pop
xor
jmp
xlat
fidivr
jns
je
cmp
fsub
les
xchg
pop
xor
pop
sbb
mov
clc
xchg
push
pop
jns
jno
xchg
cmp
pop
jmp
mov
jbe
adc
cmp
cwde
push
sbb
xchg
sub
xchg
cmp
lea
xor
pop
mov
xor
call
lock
sbb
pop
xor
mov
jbe
adc
xchg
cmp
inc
push
sbb
xchg
sub
xchg
cmp
lea
sbb
pop
mov
xor
adc
movs
enter
mov
pop
xor
jns
jne
xchg
and
jns
call
xchg
mov
jns
adc
jns
xchg
shl
xor
mov
mov
xchg
ficomp
adc
pop
jge
sbb
adc
xor
cmp
xlat
cmp
fmul
jbe
xor
cmp
mov
mov
sbb
adc
fs
mov
pop
mov
cmp
fs
cld
lods
fild
ja
xor
hlt
lods
fild
cmp
int
jns
inc
shr
mov
xchg
out
int
in
cmp
jae
hlt
cmp
adc
sub
cmp
retf
or
icebp
aam
jns
mov
or
jns
pop
mov
cmp
fs
cld
lods
fild
push
lods
fild
cmp
int
jns
inc
shr
mov
xchg
out
int
test
jns
jae
hlt
cmp
adc
sub
cmp
retf
or
icebp
mov
or
icebp
adc
sbb
call
repnz
mov
xchg
lock
jns
jno
fsubr
jno
hlt
sbb
stc
cmp
mov
dec
mov
data16
adc
fdiv
cmp
pop
jp
sbb
jns
clc
jbe
sbb
movs
jns
xor
lock
xchg
mov
jno
mov
sbb
cmp
xor
jns
mov
outs
dec
xor
mov
sbb
cmp
fs
fist
xor
adc
retf
dec
dec
mov
jns
sbb
adc
pop
jns
sbb
adc
xor
jns
fst
pop
xor
jns
sub
jns
xchg
jns
pop
xor
in
fnstenv
adc
pop
jns
dec
cmp
jae
xchg
or
xor
inc
sbb
stc
imul
loopne
jbe
xchg
xor
jns
jno
xchg
cmp
fs
inc
adc
jns
pushf
pushf
xchg
xchg
mov
mov
jns
xor
xchg
xchg
repz
aad
retf
xchg
xor
clc
jmp
shl
xchg
xchg
mov
xchg
out
sub
imul
xchg
cmp
pop
sub
sbb
xchg
shl
popa
jo
inc
jle
cmp
mov
cmp
xor
cld
shl
retf
xchg
jae
adc
inc
or
sbb
adc
fcom
sbb
xchg
mov
mov
xchg
out
sub
sbb
adc
xor
jns
cmp
sbb
adc
pop
lea
xor
js
add
pop
xor
movhps
xchg
add
scas
ja
xor
mov
xchg
jno
sub
loopne
jns
pop
jns
sbb
hlt
pop
shr
xchg
push
hlt
or
inc
push
mov
and
sub
sar
xchg
and
bound
(bad)
and
jno
repz
sbb
cmp
mov
imul
xor
ja
int3
jnp
popf
pop
js
sbb
lods
jno
xor
push
popf
dec
jnp
sbb
push
sbb
jns
cmp
into
adc
inc
and
bnd
xor
ficom
xor
cli
and
mov
std
ret
jns
rcl
jbe
xchg
leave
xlat
xchg
out
clc
mov
jno
xchg
cmp
fs
sar
xchg
frstor
cld
icebp
leave
xchg
nop
repz
cld
ror
xchg
int3
xchg
in
xchg
adc
jbe
xchg
xor
jns
mov
test
retf
sub
sbb
push
sbb
mov
stc
leave
xchg
out
cli
xchg
sbb
retf
xchg
cld
test
push
mov
xchg
call
xchg
jge
mov
push
in
aad
xchg
jae
repnz
std
leave
xchg
out
sub
pushf
aam
xchg
pop
cld
mov
jae
adc
add
mov
loope
sahf
lock
lock
and
mov
std
fidiv
jns
mov
xchg
adc
xchg
xchg
dec
jns
call
stc
and
mov
jle
fadd
xchg
out
and
and
mov
jne
add
pop
dec
xchg
nop
int3
push
adc
add
jns
pop
xor
cmp
cmp
adc
xor
adc
fsub
sbb
and
pop
pop
jns
out
shl
cld
cmc
leave
xchg
mov
jns
pop
cmp
cld
xor
out
jno
or
jns
lock
jle
sbb
cld
xchg
in
xchg
fidivr
add
ins
jo
jl
test
jns
or
sub
inc
jl
cdq
cmp
sbb
lea
inc
jl
test
jns
sub
mov
and
adc
cmp
or
mov
jg
xor
jns
inc
imul
out
inc
jl
test
jns
and
jl
xchg
jns
cmp
jl
popf
cmp
cmp
leave
or
xchg
mov
out
xchg
inc
imul
sbb
fadd
leave
xchg
in
xchg
int3
js
nop
repz
cld
ror
xchg
loop
sbb
cld
std
leave
xchg
sbb
jns
out
jns
xchg
mov
xchg
retf
sub
sbb
xchg
xor
les
retf
xchg
sbb
adc
cmp
xor
adc
xor
xchg
aam
sbb
outs
jb
xor
sbb
clc
mul
jns
mov
xchg
pushf
rol
retf
xchg
or
jbe
scas
jns
sbb
sbb
cld
sbb
xchg
test
jns
cmp
jns
mov
cli
mov
je
inc
sbb
sbb
js
lahf
(bad)
cmp
test
sub
call
jns
adc
jns
xor
dec
repz
adc
fsub
dec
popf
test
jns
mov
adc
ror
mov
xchg
fidivr
xchg
xchg
mov
test
retf
sub
sub
cmp
mov
test
retf
sub
call
jns
mov
xchg
retf
sub
sbb
xchg
xor
les
retf
xchg
sbb
adc
fidivr
jns
xor
adc
xor
xchg
fdivr
sbb
outs
jae
xor
sbb
xchg
pop
mov
js
inc
cmp
and
pop
jae
adc
fist
xchg
sub
jns
out
fcomp
xchg
fwait
adc
nop
fnsave
jns
fbstp
jns
and
iret
cld
sbb
xchg
out
xchg
dec
jge
and
adc
pop
jns
repnz
jns
xor
(bad)
adc
xchg
fdivr
sbb
fidiv
xor
cld
sbb
xor
xchg
xor
xchg
nop
int3
js
nop
repz
cld
sbb
xchg
in
xchg
jno
xchg
cmp
mov
xchg
icebp
pushf
jb
sbb
jns
sbb
xchg
out
stc
enter
imul
jns
movs
xor
or
jae
adc
call
xchg
fs
stc
enter
push
adc
nop
adc
int3
mov
out
lock
out
sub
pushf
rol
jbe
hlt
pushf
rol
xor
cli
frstor
xchg
xor
hlt
pushf
xor
xchg
cmp
nop
jno
sbb
jns
adc
jns
xor
aad
jbe
adc
fdiv
sbb
dec
xor
mov
sbb
out
sbb
xor
mov
xchg
retf
sub
pushf
rol
jbe
hlt
pushf
rol
xor
cli
frstor
xchg
xor
hlt
pushf
xor
xchg
cmp
or
sbb
jns
adc
jns
xor
push
lock
adc
(bad)
jno
xor
dec
xor
jno
sbb
dec
jp
xor
hlt
sbb
xchg
cdq
or
ins
int
sbb
pop
jns
sub
cmp
xor
or
xor
xchg
(bad)
cmp
fsub
sbb
js
xor
mov
out
xchg
inc
push
cmp
out
xchg
popf
xor
out
inc
dec
xor
addr16
jns
xor
dec
lock
adc
fmul
sbb
dec
xor
jle
sbb
mov
cld
out
xchg
out
xchg
inc
shl
sbb
cld
js
retf
xchg
xchg
mov
test
retf
sub
sub
cmp
mov
test
retf
sub
call
jns
mov
xchg
retf
sub
sbb
ss
xor
les
retf
xchg
sbb
adc
xchg
ret
push
xor
xchg
(bad)
cmp
fcomp
jle
xor
xor
xor
mov
out
xchg
inc
push
cmp
out
xchg
popf
xor
out
inc
dec
xor
addr16
jns
xor
mov
jbe
adc
fadd
jle
xor
dec
cmp
jle
sbb
jae
sbb
cld
out
xchg
out
xchg
ror
cmp
and
cmp
in
out
xchg
cwde
(bad)
push
sbb
cld
sbb
xchg
in
xchg
jno
xchg
cmp
mov
xchg
icebp
sub
sbb
adc
xor
jns
xor
jns
xor
adc
cmp
mov
mov
xchg
loope
sahf
lock
aam
xchg
mov
xchg
ficomp
adc
pop
jns
lods
rol
sbb
inc
ins
lock
inc
ds
adc
sar
sbb
inc
js
inc
xor
pop
jns
mov
test
sub
lea
sbb
jns
sbb
xchg
jae
adc
jbe
xchg
mov
sbb
hlt
in
leave
xchg
cdq
or
ins
int
jns
mov
sub
xchg
test
sub
out
fidivr
adc
mov
test
retf
sub
sbb
pop
xor
int3
in
retf
icebp
mov
mov
lods
rol
sbb
dec
pop
test
jns
cld
jg
sbb
adc
pop
jge
sbb
adc
xor
cmp
fnstcw
sbb
mov
cld
in
retf
cwde
fcmovnu
cmp
xor
jnp
xor
jns
or
hlt
adc
retf
cmp
mov
xchg
inc
js
inc
xor
pop
jns
mov
test
mov
lea
sbb
jns
sbb
xchg
jae
adc
lods
rol
sbb
sbb
or
mov
sbb
mov
adc
lock
dec
xchg
cmp
pop
sub
sbb
xchg
scas
mov
popa
adc
dec
jno
jne
xchg
cld
xor
nop
int3
mov
out
lock
or
inc
jne
ins
cmp
(bad)
sbb
jns
inc
outs
mov
or
lock
mov
jne
bound
repnz
cmp
test
ret
sahf
lock
enter
jno
inc
sbb
mov
sub
dec
imul
xor
dec
popf
test
jns
aas
xchg
cmp
pushf
jge
sbb
mov
cmp
inc
jb
sub
enter
idiv
xor
dec
cdq
test
jns
aas
xchg
cmp
dec
jge
sbb
dec
push
mov
jns
adc
dec
gs
xor
nop
int3
push
adc
aas
xchg
cmp
fs
sbb
dec
push
mov
jns
adc
dec
pop
mov
jns
and
jns
mov
ret
sahf
lock
shl
and
pop
(bad)
pop
xor
ins
cdq
or
or
retf
dec
xchg
mov
jns
or
jns
and
pop
(bad)
pop
xor
gs
or
or
retf
dec
std
test
jns
loopne
jns
repnz
xor
out
inc
dec
icebp
cdq
cmp
xor
cmp
js
nop
repz
dec
cdq
test
jns
xor
fs
add
pop
xor
jg
sub
pop
xor
sbb
add
pop
xor
jg
sub
pop
xor
dec
xor
repnz
test
jns
add
pop
xor
jg
sub
pop
xor
dec
popf
test
jns
xor
fs
out
or
xchg
or
bound
xchg
ins
xor
repnz
xor
push
mov
and
jns
retf
pop
jno
ja
jmp
sbb
pop
jne
ja
jmp
sbb
pop
imul
xor
jns
retf
pop
ins
sbb
jmp
sbb
pop
pop
sbb
jmp
sbb
pop
push
sbb
jmp
sbb
pop
dec
sbb
jmp
sbb
pop
dec
sbb
jmp
sbb
pushf
dec
arpl
lock
pop
nop
int3
cmp
icebp
fs
sbb
test
inc
push
lock
js
mov
pop
ins
into
xchg
gs
cmp
jle
hlt
or
or
fistp
push
mov
fld
cli
loope
or
mov
sbb
jns
fcom
mov
ins
clc
xchg
sbb
jns
xor
jns
mov
pop
and
imul
mov
pop
out
jns
sbb
mov
xchg
in
hlt
xor
mov
repnz
(bad)
mov
repnz
adc
adc
jns
retf
pop
cmp
ja
jmp
sbb
pop
cmp
mov
jns
retf
pop
xor
ja
jmp
sbb
pop
xor
mov
jns
retf
pop
sub
ja
jmp
sbb
pop
sub
mov
jns
retf
pop
and
ja
jmp
sbb
pop
and
mov
jns
retf
pop
sbb
ja
jmp
sbb
pop
sbb
mov
jns
retf
pop
adc
ja
jmp
sbb
pop
adc
mov
jns
retf
pop
or
ja
jmp
sbb
pop
or
mov
jns
retf
pop
add
ja
jmp
sbb
pop
add
mov
jns
retf
pop
stc
sbb
jmp
sbb
pop
std
sbb
jmp
sbb
pop
icebp
sbb
jmp
sbb
pop
cmc
sbb
jmp
sbb
pop
jmp
mov
jns
retf
pop
in
sbb
jmp
sbb
pop
loope
ja
jmp
sbb
pop
in
ja
jmp
sbb
pop
fstp
ja
jmp
sbb
pop
fstp
ja
jmp
sbb
pop
rcr
ja
jmp
sbb
pop
aad
ja
jmp
sbb
pop
leave
sbb
jmp
sbb
pop
int
ja
jmp
sbb
pop
rcr
jns
mov
jns
retf
pop
lds
ja
jmp
sbb
pop
mov
mov
jns
retf
pop
mov
mov
jns
retf
pop
mov
ja
jmp
sbb
pop
mov
ja
jmp
sbb
pop
test
mov
jns
retf
pop
lods
sbb
jmp
sbb
pop
mov
mov
jns
retf
pop
movs
sbb
jmp
sbb
pop
cdq
sbb
jmp
sbb
pop
popf
sbb
jmp
sbb
pop
xchg
sbb
jmp
sbb
pop
xchg
sbb
jmp
sbb
pop
sbb
xor
jns
retf
pop
test
ja
jmp
sbb
pop
jns
ja
jmp
sbb
pop
jge
ja
jmp
sbb
pop
jno
ja
jmp
sbb
pop
jne
ja
jmp
sbb
pop
imul
retf
pop
ins
sbb
xor
jns
retf
pop
popa
sbb
xor
jns
retf
pop
gs
xor
jns
retf
pop
pop
sbb
xor
jns
retf
pop
pop
sbb
xor
jns
retf
pop
push
sbb
xor
jns
retf
pop
push
sbb
xor
jns
retf
pop
dec
sbb
xor
jns
retf
pop
dec
sbb
xor
jns
retf
pop
inc
sbb
xor
jns
retf
pop
inc
sbb
xor
jns
retf
pop
cmp
xor
jns
retf
pop
cmp
mov
jns
retf
pop
xor
xor
jns
retf
pop
xor
mov
jns
retf
pop
sub
xor
jns
retf
pop
sub
mov
jns
retf
pop
and
xor
jns
retf
pop
and
mov
jns
retf
pop
sbb
xor
jns
retf
pop
sbb
mov
jns
retf
pop
or
xor
jns
retf
pop
or
mov
jns
retf
pop
add
xor
jns
retf
pop
add
mov
jns
retf
pop
stc
sbb
xor
jns
retf
pop
cmc
sbb
xor
jns
retf
pop
jmp
mov
jns
retf
pop
in
sbb
xor
jns
retf
pop
loope
ja
jmp
sbb
pop
in
ja
jmp
sbb
pop
fstp
xor
jns
retf
pop
fstp
xor
jns
retf
pop
rcr
xor
jns
retf
pop
aad
ja
jmp
sbb
pop
rcr
jns
sbb
pop
lds
xor
jns
retf
pop
mov
mov
jns
retf
pop
mov
mov
jns
retf
pop
mov
ja
jmp
sbb
pop
mov
ja
jmp
sbb
pop
test
mov
jns
retf
pop
lods
sbb
xor
jns
retf
pop
mov
mov
jns
retf
pop
movs
sbb
xor
jns
retf
pop
cdq
sbb
xor
jns
retf
pop
popf
sbb
xor
jns
retf
pop
xchg
sbb
xor
jns
retf
pop
xchg
sbb
xor
jns
retf
pop
mov
xor
jns
retf
pop
lea
xor
jns
retf
pop
sbb
retf
pop
test
xor
jns
