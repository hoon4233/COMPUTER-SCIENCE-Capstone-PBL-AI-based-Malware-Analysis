js
sub
add
pop
push
dec
sbb
adc
ret
or
sbb
sbb
ins
fstp
dec
cmp
and
add
pop
pop
ins
jle
cs
sbb
or
dec
nop
sub
imul
sbb
jb
dec
ds
nop
pusha
test
ret
cdq
xor
int3
xchg
dec
cli
adc
sbb
ins
cdq
lea
xor
cmp
sbb
ins
jo
jae
or
sbb
pusha
dec
sbb
inc
pop
inc
in
adc
nop
dec
sar
test
dec
sbb
xor
ret
mov
rol
stos
or
fwait
pop
dec
sbb
jmp
xchg
or
out
pop
xchg
sub
jmp
loop
pop
nop
xchg
cmp
out
inc
cwde
xchg
in
lahf
les
dec
sbb
push
aas
cwde
adc
pop
dec
loope
pop
nop
sub
ret
sbb
sub
pop
dec
nop
cmp
ret
cs
pop
ins
xchg
or
iret
and
pop
ins
dec
push
dec
aad
dec
sbb
daa
fcomp
nop
pop
cs
pop
ins
jmp
stc
pop
ins
xchg
je
fcomp
inc
xor
jecxz
adc
out
inc
adc
xor
aas
repnz
xchg
in
fild
and
cmp
fcom
adc
pop
sbb
inc
in
xchg
inc
nop
pop
adc
pop
sbb
mov
xchg
sub
jo
jo
dec
test
lea
push
sbb
sbb
dec
sbb
adc
cwde
test
inc
fistp
cmp
sbb
sbb
ins
sbb
adc
lea
fidivr
aam
dec
sbb
cwde
xchg
in
xor
dec
repz
sbb
fiadd
pop
or
pop
ins
repnz
ins
sbb
fild
dec
sbb
inc
xor
div
fxch
es
stos
or
ins
outs
dec
mov
xchg
call
jno
in
inc
aam
dec
sbb
jg
sbb
ins
dec
sar
in
pop
fcomp
jae
or
sbb
sar
sbb
out
neg
cmp
jle
dec
nop
daa
dec
jl
pop
dec
sbb
inc
ds
jo
jno
jb
stos
sbb
aas
fcomp
jae
stos
or
test
sbb
xor
pop
dec
in
ds
pop
ins
in
cmp
pop
dec
xchg
dec
push
stc
pop
ins
repnz
sbb
fbstp
xchg
and
sbb
es
dec
sbb
sbb
scas
sbb
mov
mov
dec
cmp
mov
xchg
in
scas
xchg
jmp
xchg
mov
jo
jno
jo
jno
jb
sbb
cmp
pop
dec
repz
dec
sbb
fyl2x
es
sbb
mov
mov
stos
cdq
mov
sbb
js
xchg
sbb
lahf
mov
jae
push
dec
sbb
lahf
mov
xchg
in
dec
test
sbb
(bad)
push
sbb
test
sbb
jno
jb
mov
pop
loop
in
dec
mov
cwde
test
je
xchg
sbb
imul
retf
mov
mov
test
in
fcom
mov
fcomp
push
inc
aaa
ror
dec
cmp
lock
adc
cmp
ins
xchg
or
cmp
or
cmp
dec
jae
sbb
push
sbb
sbb
sbb
adc
(bad)
call
mov
lock
in
add
push
and
xchg
outs
pop
in
out
fcom
in
out
xor
ins
adc
lock
xor
ins
outs
dec
mov
xchg
enter
dec
sbb
or
mov
dec
mul
push
movs
xchg
cmp
arpl
sub
ins
in
scas
xchg
sub
rcr
pop
mov
add
dec
sbb
in
push
mov
fs
frstor
cmp
sub
sbb
mov
jo
dec
in
or
bound
fst
arpl
gs
cmp
adc
gs
mov
mov
push
inc
movs
fstp
mov
push
nop
sbb
mov
in
pop
test
or
in
js
in
mov
imul
out
ins
cdq
sub
ins
icebp
and
mov
or
in
dec
fxam
dec
mov
imul
lock
ret
adc
test
ins
pop
shr
shl
sbb
jecxz
fcomp
or
or
mov
out
and
dec
in
or
rcr
or
sub
or
xchg
and
out
pop
inc
xchg
lods
cdq
and
ins
outs
mov
sub
inc
cdq
pop
in
in
in
sbb
inc
movs
fstp
mov
mov
dec
cmp
outs
pusha
xchg
adc
stos
lahf
mov
xchg
in
sub
ret
in
in
fsub
in
mov
xchg
in
push
sbb
inc
xchg
lods
cdq
and
ins
outs
mov
stos
ins
inc
fucomp
sbb
xchg
sbb
or
loop
jmp
dec
inc
xchg
js
ror
pop
jo
adc
ret
in
in
lahf
mov
xchg
in
sahf
cwde
in
in
mov
rcr
lahf
mov
xchg
in
ret
inc
jmp
xchg
sbb
sahf
ins
sbb
shr
neg
cmp
inc
pusha
fisttp
leave
and
sbb
out
pop
mov
sub
js
xchg
sub
sbb
adc
repz
dec
in
mov
ficom
retf
scas
cdq
mov
push
jle
push
les
(bad)
dec
nop
sub
rcr
or
fwait
jg
xchg
sub
rcr
pop
inc
movs
fstp
mov
dec
cmp
inc
pusha
fisttp
pop
xor
xchg
scas
sub
in
xchg
aam
sbb
adc
repz
dec
in
mov
ficom
retf
scas
cdq
mov
push
jle
push
les
sbb
out
pop
mov
sub
mov
sbb
inc
(bad)
dec
inc
xor
fdivr
xchg
lods
dec
aas
dec
push
nop
sbb
ret
fisttp
call
pop
mov
scas
sub
push
sbb
mov
adc
push
jno
xchg
xor
movs
js
jo
sbb
js
sub
inc
pop
push
lds
into
sub
dec
sub
sbb
mov
dec
cmp
outs
movs
popf
sub
pop
loop
fcom
sbb
cli
sbb
repz
mov
in
mov
xor
or
inc
test
ins
dec
mov
dec
out
mov
aas
dec
mov
cwde
test
mov
cld
in
mov
stos
inc
pop
inc
movs
fstp
mov
dec
cmp
inc
pusha
movs
rol
sbb
mov
mov
fs
ins
sbb
fld
sbb
sbb
pop
in
adc
sbb
sbb
mov
fwait
std
rcr
mov
push
inc
pop
inc
movs
fstp
mov
dec
cmp
jg
xor
mov
cwde
push
xchg
pop
ins
sbb
pop
ins
dec
ret
dec
inc
nop
sub
mov
push
adc
sbb
xchg
dec
inc
xchg
xchg
in
scas
xchg
sub
rcr
ret
cmp
ins
inc
pop
inc
movs
fstp
mov
push
nop
sbb
neg
test
mov
stos
cdq
outs
sbb
jl
sbb
sbb
xchg
sub
sbb
sti
or
test
mov
stos
sub
frstpm(287
pop
movs
adc
test
ins
jo
jno
xchg
or
cmp
sbb
fcomp
inc
shl
xchg
sub
inc
fistp
sub
jmp
fimul
add
test
ins
xchg
dec
in
xchg
pop
in
cmovns
ins
sbb
fsubr
cmc
add
sbb
rol
xchg
or
fidivr
pop
fimul
lock
mov
pop
mov
xchg
inc
js
xor
scas
dec
sar
ss
sbb
imul
cmp
rol
ret
in
daa
xor
in
sbb
scas
sbb
adc
or
push
pop
inc
adc
ror
ins
xchg
or
iret
(bad)
std
pop
ins
fwait
mov
push
xchg
pop
ins
sbb
pop
ins
dec
ret
dec
inc
call
ins
xchg
pop
dec
sbb
int3
cli
xchg
in
dec
xchg
outs
inc
repz
and
mov
xchg
jmp
dec
mov
cwde
test
je
xchg
sbb
pusha
cdq
ins
xchg
pop
dec
sbb
fwait
mov
call
or
cmp
or
out
dec
dec
out
mov
jo
or
out
addr16
sbb
xchg
sbb
inc
sbb
out
jg
sbb
daa
xor
in
sbb
clc
in
xchg
in
in
fcom
sbb
pop
cwde
and
pop
dec
ins
imul
sbb
data16
pop
ins
xchg
or
in
(bad)
sbb
sbb
rol
ret
or
or
outs
sbb
pop
xchg
xchg
or
iret
data16
pop
ins
xchg
or
cmp
cmp
out
neg
mov
mov
nop
adc
push
nop
push
in
cmp
pop
mov
mov
stos
xchg
jmp
xchg
mov
cmp
mov
lea
nop
sub
sbb
ins
sbb
in
mov
lods
outs
jle
mov
xchg
xchg
scas
xchg
int3
(bad)
xchg
in
dec
int
jmp
(bad)
fstp
ins
sbb
pop
nop
adc
fcomp
in
sbb
sub
jo
mov
mov
sbb
dec
sbb
daa
aad
sbb
addr16
sbb
xchg
pop
mov
sub
jo
xchg
adc
mov
dec
xchg
pop
ins
sbb
pop
sbb
(bad)
xchg
int3
iret
xchg
in
xchg
scas
inc
pop
inc
movs
fstp
mov
push
movs
mov
cmc
mov
in
in
enter
dec
sbb
jg
sbb
pop
inc
fwait
push
sub
jmp
adc
out
sbb
in
shl
std
rcr
mov
adc
mov
jecxz
outs
adc
sub
ret
pop
outs
sbb
sbb
jne
sbb
retf
sbb
pop
fs
or
mov
pop
dec
repz
dec
sbb
fiadd
xchg
in
scas
xchg
sub
rcr
pop
jmp
repz
mov
fidivr
sbb
addr16
sbb
dec
int3
pop
dec
mov
xchg
jecxz
loop
fsubr
jg
sbb
shl
std
rcr
mov
jo
xchg
outs
push
icebp
pop
nop
sub
ret
pop
pop
es
push
cdq
sub
ins
xchg
mov
xchg
xchg
mov
pop
inc
fwait
push
sub
jmp
cdq
sub
ins
cdq
xor
ins
outs
inc
in
adc
sub
pop
dec
repz
pusha
enter
dec
sbb
sbb
sbb
push
and
push
sbb
sbb
jae
test
sbb
or
push
sbb
sbb
sbb
repz
jne
sbb
pop
inc
xchg
lods
cdq
and
ins
outs
mov
scas
jo
xchg
and
sbb
outs
inc
in
loop
add
dec
jno
xchg
or
cmp
dec
jae
cli
or
xchg
outs
mov
push
jne
sbb
loop
cld
in
mov
fcom
ja
sbb
inc
adc
scas
dec
sar
mov
sbb
jbe
sbb
dec
cmp
icebp
test
sbb
(bad)
xchg
int3
scas
xchg
in
xchg
scas
fwait
mov
sbb
jmp
sbb
dec
dec
sbb
lahf
mov
sahf
test
mov
cmp
cmp
xchg
in
adc
dec
xchg
mov
xchg
xchg
scas
jo
repz
imul
ja
sbb
xlat
xchg
in
xchg
mov
xchg
xchg
scas
in
xlat
xchg
in
xchg
jmp
dec
mov
cwde
test
retf
mov
and
stc
rcr
fld
sahf
mov
mov
cmp
aad
sbb
nop
push
in
push
in
mov
lods
outs
jmp
mov
stos
xchg
jmp
xchg
mov
xchg
dec
and
pop
dec
nop
jmp
dec
ret
push
je
ins
sbb
sub
inc
(bad)
jle
ins
sbb
fadd
dec
dec
sbb
lahf
mov
xchg
in
mov
cmp
jno
cmp
pop
nop
adc
sbb
mov
lods
in
in
jecxz
in
cdq
lea
in
push
xchg
shl
mov
xchg
xchg
int3
xlat
xchg
in
mov
in
pusha
ret
in
les
cmp
aad
sbb
nop
push
in
addr16
mov
lods
adc
dec
jge
cmps
mul
xchg
in
adc
xchg
dec
sbb
out
in
sbb
aam
ins
sbb
sbb
test
ins
xchg
int3
out
in
dec
test
lea
in
das
xchg
sar
sahf
push
sbb
fistp
je
xchg
sbb
call
adc
mov
sub
les
cmp
sbb
add
dec
cwde
test
inc
lods
jmp
fmul
cmp
or
ins
cdq
in
mov
in
sbb
daa
and
adc
(bad)
ins
fwait
mov
dec
sbb
ins
jb
sti
sbb
dec
int3
pop
dec
repz
in
mov
out
fiadd
xchg
in
sbb
cmp
test
out
in
dec
test
mov
pop
push
in
sbb
fsubr
mov
in
sbb
ins
jo
jae
cli
or
add
jmp
out
xchg
in
fbld
mov
ins
sbb
mov
shl
mov
xchg
dec
mov
cwde
test
je
xchg
sbb
data16
mov
in
sbb
jno
jb
sti
sbb
dec
int3
pop
dec
repz
in
fiadd
xchg
in
sbb
cmp
test
out
in
dec
test
lea
push
in
sbb
fsubr
mov
in
sbb
ins
jo
jae
cli
or
add
jmp
out
xchg
in
fbld
mov
ins
sbb
mov
shl
mov
xchg
dec
mov
cwde
test
je
xchg
sbb
data16
mov
in
sbb
xchg
mov
stos
xchg
jmp
xchg
mov
jb
sti
sbb
dec
int3
pop
dec
repz
mov
out
fiadd
xchg
in
sbb
adc
in
sbb
push
sbb
cwde
mov
jae
mov
mov
pop
push
in
sbb
fsubr
mov
in
sbb
ins
jo
jae
cli
or
add
jmp
out
xchg
in
fbld
mov
ins
sbb
mov
shl
mov
xchg
dec
mov
cwde
test
je
xchg
sbb
jno
dec
jae
cli
or
loope
mov
xchg
in
repz
out
mov
out
fiadd
xchg
in
sbb
adc
in
sbb
in
jmp
retf
in
in
outs
pop
(bad)
std
pop
ins
sbb
sahf
xchg
in
in
repnz
xchg
in
lock
dec
imul
dec
sbb
dec
jmp
scas
cs
ret
pop
ret
stos
lahf
mov
xchg
in
bnd
dec
sbb
jmp
les
cmp
int3
(bad)
xchg
in
dec
out
mov
xor
inc
sahf
fwait
push
dec
sbb
lahf
icebp
in
in
nop
jmp
dec
ret
dec
imul
out
addr16
arpl
retf
in
in
fwait
mov
cwde
leave
retf
xchg
sbb
cmps
aam
mov
ins
adc
dec
call
mov
jnp
mov
ins
sbb
loope
shl
in
xchg
jmp
dec
ret
in
in
xchg
jns
cmp
rol
stc
rcr
fld
sahf
mov
jb
cli
cs
sahf
cld
in
in
xchg
jno
js
dec
sbb
pop
nop
adc
sbb
retf
xchg
in
dec
out
popf
in
in
nop
push
in
retf
ins
sbb
sub
rol
ret
out
addr16
arpl
les
cmp
int3
retf
xchg
in
dec
out
mov
push
xchg
or
fiadd
mov
jmp
mov
in
in
nop
jmp
dec
ret
dec
jno
sub
icebp
cmp
sbb
(bad)
xchg
int3
mov
in
xchg
scas
cdq
xor
ins
adc
dec
xchg
jmp
dec
ret
in
in
xchg
jno
cmp
rcr
xchg
sub
dec
adc
jle
sbb
push
sbb
leave
jmp
xchg
in
in
dec
jmp
out
in
dec
test
and
pop
out
mov
dec
repnz
sbb
push
sbb
call
cld
not
out
in
dec
and
pop
dec
xchg
jmp
dec
mov
cwde
test
rol
ret
or
int3
xchg
xchg
in
sbb
not
mov
xchg
scas
shl
in
idiv
mov
lahf
mov
mov
out
neg
mov
mov
in
in
nop
push
in
aaa
in
mov
lods
adc
dec
cwde
leave
mov
enter
dec
sbb
lahf
in
in
in
jae
sti
or
out
aad
xchg
in
nop
push
in
es
sbb
in
mov
lods
adc
dec
call
int3
mov
out
in
in
in
nop
push
in
ja
pop
mov
lods
adc
dec
cwde
leave
mov
in
sbb
jno
repnz
ins
sbb
xchg
mov
xchg
xchg
scas
jl
sahf
sbb
mov
outs
sbb
sahf
(bad)
in
in
lahf
xor
xchg
in
sahf
in
in
in
xchg
cld
imul
sar
push
dec
sbb
xchg
fldcw
in
cdq
movs
or
std
lock
ins
sbb
leave
xchg
hlt
mov
out
mov
sbb
push
sbb
xchg
jmp
xchg
mov
jmp
cdq
in
lahf
xchg
in
sbb
lahf
int
xchg
in
jae
sti
or
out
leave
in
in
nop
push
in
es
sbb
in
mov
lods
adc
dec
cwde
rcr
inc
lahf
sbb
loope
sub
xchg
in
jno
in
out
xchg
in
nop
jmp
dec
ret
dec
imul
out
addr16
arpl
das
cwde
sar
in
adc
mov
cmps
and
xchg
in
adc
fimul
ins
xchg
int3
inc
xchg
out
dec
xchg
scas
and
xchg
in
fs
in
cwde
test
rcr
xchg
hlt
inc
xchg
out
call
hlt
inc
xchg
out
sbb
(bad)
sbb
sahf
pushf
in
in
sbb
push
push
mov
(bad)
in
in
lahf
mov
xchg
in
jae
cli
or
loope
mov
xchg
in
repz
jo
sbb
ficomp
loope
mov
xchg
cdq
and
ins
outs
mov
jmp
fwait
mov
in
inc
mov
xchg
xchg
int3
inc
xchg
out
dec
out
mov
xchg
in
lahf
imul
mov
cwde
test
and
loope
mov
xchg
in
jae
cli
or
loope
mov
xchg
in
repz
jae
sbb
ficomp
lahf
bound
ins
cdq
hlt
lahf
xchg
in
sbb
sbb
sahf
in
in
in
xchg
jns
cmp
rol
stc
rcr
fnstenv
in
lahf
jmp
sahf
(bad)
in
in
cwde
inc
in
in
sahf
enter
cmp
jns
cmp
ret
in
in
xchg
jns
cmp
mov
and
in
lahf
lods
in
in
sahf
and
in
cwde
cmps
out
in
cmps
pushf
in
in
outs
dec
fucomp
out
in
sbb
ds
sbb
(bad)
xchg
int3
mov
in
xchg
scas
xchg
int3
repz
in
dec
out
mov
fs
hlt
retf
xchg
in
sbb
push
ret
in
in
xchg
jns
cmp
retf
in
in
outs
inc
nop
jmp
dec
ret
dec
inc
nop
jmp
dec
ret
dec
inc
nop
jmp
dec
ret
dec
inc
xchg
mov
xchg
xchg
scas
xchg
int3
sti
xchg
in
dec
out
mov
rep
in
xchg
in
inc
aaa
ror
in
sahf
std
pop
ins
jb
or
sub
sbb
sar
sbb
out
neg
cmp
jle
fisttp
push
sub
lods
mov
sbb
sub
dec
sbb
pop
mov
ins
sbb
sbb
adc
dec
cwde
test
mov
cwde
push
call
xchg
mov
in
in
icebp
popa
fsubr
cli
dec
sbb
pop
mov
ret
fisttp
jbe
mov
out
xchg
xchg
xchg
sub
test
xchg
in
inc
xor
nop
sub
sub
sbb
ror
(bad)
cmp
cmp
xchg
in
scas
xchg
sub
rcr
call
ins
jb
ds
and
push
sbb
xchg
stos
dec
mov
inc
movs
fstp
mov
ret
movs
xor
jmp
jmp
cs
ret
dec
mov
dec
xchg
pushf
sbb
add
pop
dec
sbb
aas
jno
sub
adc
pop
ins
sbb
sbb
dec
sbb
sbb
ins
sbb
shr
or
arpl
adc
dec
es
sbb
arpl
mov
jmp
call
test
sbb
outs
fcomp
sub
mov
cli
dec
pop
in
mov
imul
jbe
ins
sbb
push
je
or
sub
dec
and
sbb
push
sub
or
ins
outs
inc
mov
ins
pop
jno
sub
pop
jno
sub
cld
rcr
(bad)
repnz
jno
sub
sbb
imul
add
pop
dec
or
sbb
dec
sbb
in
sbb
popa
add
pop
ins
or
pop
cmc
pop
dec
mov
test
mov
xchg
in
dec
add
pop
dec
pop
sbb
dec
sbb
pop
jl
dec
fwait
popa
add
pop
ins
push
mov
in
imul
cmp
cli
outs
sbb
stos
jnp
sbb
add
pop
dec
adc
pop
rcr
mov
mov
in
imul
cmp
scas
outs
sbb
pushf
xor
add
pop
dec
sbb
sbb
ins
sbb
in
imul
cmp
xchg
outs
sbb
adc
sbb
add
pop
dec
sbb
sbb
ins
sbb
in
outs
std
pop
ins
in
and
pop
dec
xchg
pushf
sbb
add
pop
dec
pop
test
dec
sbb
xchg
test
sbb
add
sbb
xchg
sub
rcr
pop
push
test
sbb
int
aam
ins
cdq
mov
ins
pop
jno
sub
sbb
sub
inc
mov
mov
mov
ins
pop
jno
sub
sbb
imul
and
pop
dec
sbb
xchg
mov
cwde
imul
mov
sub
leave
push
je
or
dec
fwait
(bad)
push
bound
dec
xchg
movs
pop
ret
sbb
dec
jmp
push
cmp
or
fidiv
fs
sahf
cld
mov
dec
sbb
mov
and
pop
ins
call
xchg
or
xchg
dec
sbb
(bad)
pop
ins
icebp
imul
and
pop
ins
xchg
mov
fwait
popa
add
pop
ins
pop
mov
dec
ins
sbb
call
outs
fcomp
in
imul
inc
lahf
test
dec
sbb
ror
xchg
ins
mov
shr
jmp
int
dec
lods
sbb
in
mov
ficomp
cmp
imul
loopne
fimul
ins
adc
dec
fwait
adc
or
in
adc
pop
dec
call
call
daa
leave
sbb
adc
pop
rcr
sbb
pop
dec
cwde
push
pop
rcr
sbb
in
addr16
sbb
xchg
sbb
push
out
pop
inc
mov
dec
lock
call
popa
add
pop
ins
call
in
or
sub
(bad)
aam
ins
cdq
test
fwait
adc
dec
outs
popa
call
imul
shr
jmp
sub
dec
lock
sbb
sbb
sbb
push
pop
and
pop
dec
in
push
fstp
mov
jo
pusha
mov
sbb
ror
aaa
cmp
sbb
aas
inc
mov
dec
lock
sbb
sbb
sbb
push
pop
mov
pop
dec
in
push
fstp
mov
jo
pusha
mov
sbb
shl
in
pusha
ret
iret
push
fstp
sub
fdivr
xchg
lods
dec
cmp
push
movs
and
or
(bad)
or
xchg
sub
rcr
pop
cmp
adc
pop
dec
repz
sbb
frstor
or
pop
dec
dec
test
adc
xor
pop
dec
dec
test
sbb
test
sbb
mov
and
(bad)
pop
dec
dec
test
sbb
xchg
pop
dec
dec
test
sbb
test
pop
dec
dec
test
push
sbb
mov
movs
fstp
mov
push
mov
in
dec
ret
in
mov
sbb
repz
ins
xchg
or
cmp
pop
inc
int3
pop
dec
fsubr
repnz
sbb
ret
ins
ret
out
jg
sbb
pop
loope
sub
mov
pop
dec
sbb
pushf
push
sbb
or
dec
cwde
or
dec
in
outs
std
pop
ins
cdq
sub
ins
xchg
xchg
sub
dec
fsubr
ret
ins
sbb
sbb
cmp
sbb
xchg
scas
xchg
dec
outs
(bad)
pop
dec
xchg
sub
mov
sbb
stc
sbb
mov
fwait
stc
rcr
mov
sub
retf
sbb
data16
dec
sbb
xchg
sub
sbb
sbb
loope
lods
dec
xchg
bsr
pop
ret
loope
aad
push
sbb
pop
enter
push
sbb
pop
push
sbb
outs
mov
aad
ins
sbb
pop
int3
dec
mov
enter
cmp
dec
repz
jnp
sbb
sbb
sbb
jo
jno
jo
in
(bad)
mov
mov
fwait
stc
rcr
mov
sbb
mov
in
outs
std
pop
ins
xchg
or
cmp
cmp
loope
lods
dec
xchg
bsr
mov
dec
call
pop
inc
movs
fstp
mov
mov
imul
out
pop
mov
lods
xchg
sub
rcr
or
in
mov
push
xchg
cdq
sub
ins
sub
pop
test
jno
jo
xchg
sub
sbb
sbb
and
loope
mov
outs
fs
sub
pop
dec
nop
sub
mov
or
dec
shr
dec
neg
xor
outs
fcomp
in
adc
in
mulps
sbb
mov
push
shr
test
dec
ret
xchg
adc
xchg
pop
cmp
in
lods
dec
and
ins
outs
jge
ficomp
sbb
dec
sbb
adc
pop
jle
push
in
sbb
adc
pop
jle
push
in
sbb
adc
pop
jle
push
in
sbb
adc
dec
nop
sub
les
pop
ret
rsqrtps
mov
arpl
push
push
cmps
or
arpl
sahf
sti
sbb
in
add
push
pop
and
sbb
xchg
cdq
mov
or
in
retf
adc
mov
xchg
mov
test
inc
lods
push
sbb
xor
mov
push
dec
jb
pop
dec
dec
test
sbb
dec
xchg
jno
psraw
pop
leave
rcr
dec
cmp
adc
pop
xchg
cdq
and
cmp
dec
sbb
retf
xchg
cdq
mov
nop
sub
les
pop
dec
jecxz
repnz
nop
cmp
ror
sbb
ins
icebp
imul
push
leave
daa
imul
cmp
sbb
in
outs
fcomp
fwait
push
and
outs
cmp
dec
pop
sbb
jecxz
repnz
fwait
push
sbb
outs
sub
mov
test
leave
daa
push
cmp
in
retf
adc
and
daa
neg
ins
sbb
repz
or
loope
jno
out
lock
cwde
lods
sbb
dec
sbb
and
xchg
push
leave
daa
push
cmp
in
retf
call
xchg
cdq
mov
sbb
pop
shl
repnz
adc
push
dec
test
dec
sbb
sbb
dec
outs
inc
cdq
and
cmp
dec
sbb
retf
out
repnz
xchg
sub
ret
xchg
or
cwde
test
ret
xchg
pop
push
ins
sbb
in
es
sbb
jecxz
call
xchg
cdq
mov
sbb
and
jecxz
repnz
fwait
push
sbb
outs
pop
xchg
mov
test
inc
lods
push
adc
in
sbb
imul
sbb
add
sbb
loope
pop
push
ins
loopne
icebp
push
sbb
sub
dec
adc
lods
mov
xchg
inc
pop
inc
movs
fstp
mov
push
in
outs
std
pop
ins
xchg
cmp
xchg
js
xchg
cmp
sub
dec
ins
popf
fwait
mov
outs
sbb
jle
ret
aaa
mov
fstp
ret
ins
sbb
stos
adc
sbb
sbb
lods
clc
dec
nop
push
punpckhwd
in
dec
ret
cmp
int
xchg
in
in
outs
std
pop
ins
adc
mov
cmp
repz
sbb
cwde
or
dec
lock
ret
packssdw
mov
push
pop
mov
test
outs
xchg
push
xchg
or
xchg
sub
shr
shl
loopne
shr
pop
cwde
xchg
or
out
in
dec
push
push
loope
imul
call
shl
ror
repnz
xchg
sub
(bad)
pop
pop
repz
sbb
dec
xchg
xchg
pop
in
outs
std
pop
ins
cdq
and
jb
dec
retf
out
repnz
xchg
sub
(bad)
sbb
xchg
dec
es
sbb
aas
dec
inc
lods
cmp
mov
outs
in
push
xor
or
test
in
cdq
lea
xor
scas
dec
sar
inc
ins
sbb
inc
ins
sbb
dec
cmp
xchg
loop
in
sahf
pop
mov
ins
repnz
inc
ins
sbb
sbb
push
mov
mov
stos
lahf
mov
cwde
imul
cmps
pop
mov
ins
outs
pop
adc
lahf
mov
daa
imul
add
cmps
stos
les
adc
mov
in
es
jnp
pop
dec
sbb
sbb
call
stc
mov
in
jno
adc
push
inc
and
pop
dec
dec
test
fdiv
push
sbb
stc
jmp
add
pop
dec
dec
lods
clc
dec
xchg
stc
mov
jge
cmp
or
test
adc
ins
xchg
fdivr
push
sbb
sahf
lahf
cmc
mov
ins
adc
mov
pop
ficom
push
pop
xchg
mov
jmp
fmul
call
arpl
fimul
cmp
pop
ins
sbb
neg
dec
sbb
fsubr
and
fimul
dec
rcr
xchg
fmul
mov
mov
imul
clc
mov
mov
arpl
mov
xchg
jmp
in
outs
fcomp
nop
stc
into
xchg
in
xchg
call
xchg
xchg
push
ins
sbb
sbb
lahf
mov
in
cmp
sbb
dec
test
(bad)
cwde
call
cmps
xchg
cmc
mov
sub
dec
and
out
cmps
in
ins
sahf
xchg
jmp
dec
mov
in
outs
std
pop
ins
cdq
in
test
jb
in
sbb
in
scas
xchg
les
in
cwde
test
rcr
mov
cdq
in
fwait
mov
mov
out
leave
lds
in
shr
dec
dec
nop
xchg
jge
out
cld
dec
and
cmps
mov
xchg
in
adc
fwait
mov
push
fwait
mov
outs
sbb
arpl
dec
sbb
lahf
leave
lds
(bad)
ins
sbb
loopne
jmp
nop
repnz
loope
in
call
dec
sbb
xchg
mov
mov
xchg
in
sbb
movs
hlt
xchg
in
popf
xor
mov
xchg
pop
cmp
scas
mov
mov
test
push
sbb
sbb
lods
stc
jmp
stos
sbb
push
pop
cmp
pop
dec
xchg
stc
out
cmps
in
cdq
in
out
and
sbb
(bad)
mov
stc
outs
xchg
nop
fiadd
sbb
out
pop
xchg
loopne
mov
mov
clc
dec
xchg
mov
mov
sbb
out
shr
adc
jmp
fwait
hlt
out
and
sbb
dec
imul
pop
dec
fwait
sar
xchg
in
sbb
add
hlt
pop
ins
repnz
ins
sbb
sahf
int3
les
punpckhwd
dec
sbb
xchg
bound
in
rol
xchg
in
sahf
int3
les
lds
sbb
jmp
xchg
int3
mov
stc
mov
xchg
jmp
xchg
int3
mov
in
nop
jmp
xchg
int3
(bad)
mov
mov
jo
int3
mov
xchg
scas
xchg
les
sbb
jmp
and
cmps
mov
mov
das
xchg
int3
fbstp
scas
xchg
in
sbb
(bad)
mov
mov
sar
xchg
in
sbb
add
dec
sbb
stc
scas
xchg
in
(bad)
mov
xchg
sbb
sbb
xchg
(bad)
in
xchg
in
adc
inc
lods
stc
jmp
stos
sbb
xchg
xchg
les
lds
sub
pop
dec
adc
(bad)
mov
stc
outs
xchg
pop
push
dec
mov
sbb
(bad)
mov
sbb
dec
test
pop
sbb
stos
mov
mov
lods
adc
dec
fwait
adc
dec
adc
and
ins
xchg
int3
out
and
adc
sbb
sbb
arpl
int
ins
sbb
ja
dec
sbb
lahf
mov
punpckhwd
dec
sbb
in
pop
dec
pop
in
lods
les
les
push
scas
lods
les
call
out
repnz
fwait
push
sbb
outs
call
out
repnz
fwait
push
sbb
in
retf
call
mov
pop
dec
adc
(bad)
in
stc
outs
xchg
std
push
enter
in
lahf
jmp
sbb
repnz
sbb
jp
dec
cs
sbb
out
repnz
sub
dec
xchg
jmp
icebp
retf
xchg
fwait
icebp
inc
nop
jmp
sbb
xchg
jl
jb
mov
mov
push
repz
mov
les
mov
les
nop
ror
in
rcl
jne
ins
sbb
ins
outs
popa
fwait
push
daa
dec
sbb
outs
jb
jne
outs
sbb
ins
outs
pop
fwait
push
daa
dec
sbb
outs
call
dec
sbb
pop
xchg
inc
lods
jmp
adc
adc
push
adc
lahf
mov
in
(bad)
xchg
in
in
iret
mov
mov
sbb
mov
out
fiadd
sar
xchg
in
sbb
hlt
xchg
in
nop
stc
out
cmps
in
fld
repnz
fld
nop
call
in
pop
jge
int3
out
and
call
dec
sbb
in
outs
std
pop
ins
repz
in
sahf
lahf
cmc
mov
ins
adc
mov
pop
ficom
push
pop
xchg
mov
jmp
inc
pop
inc
movs
fstp
mov
push
nop
xor
mov
in
cli
dec
fwait
and
jle
dec
sbb
scas
xchg
pop
outs
hlt
pop
ins
mov
mov
xchg
sub
rcr
sub
in
lea
mov
jl
rcr
mov
lahf
mov
jl
rcr
mov
lahf
mov
jae
ins
call
sub
dec
nop
sub
rcr
fadd
dec
xchg
fmul
outs
adc
or
fwait
sub
dec
lock
xor
jge
lods
(bad)
out
repnz
sbb
out
inc
lods
cmp
jae
jns
inc
sahf
loopne
dec
sbb
pop
mov
sub
dec
fwait
sub
dec
adc
pop
dec
lods
sbb
adc
lods
das
sbb
sbb
xchg
pop
cmp
in
pop
mov
arpl
stc
imul
loope
outs
inc
cwde
xchg
pop
xor
in
pop
mov
arpl
fistp
push
retf
cdq
mov
sbb
leave
pop
xchg
sbb
pop
xchg
xchg
mov
scas
xchg
sbb
arpl
sbb
sbb
pop
in
pop
mov
arpl
sbb
adc
pop
in
pop
mov
in
pop
mov
in
addr16
arpl
(bad)
pop
nop
sbb
lods
cmp
jae
jns
cmp
in
pop
mov
xchg
leave
pop
nop
sbb
xchg
sbb
mov
sub
dec
adc
sbb
sbb
push
adc
pop
inc
movs
fstp
mov
dec
out
inc
mov
in
icebp
or
in
sbb
push
sbb
xchg
popf
cdq
and
ins
outs
mov
stos
icebp
inc
fwait
push
and
outs
imul
sub
sbb
sbb
test
fdiv
inc
adc
dec
sar
push
imul
ins
sbb
dec
shl
mov
mov
mov
stos
xor
pop
cmp
cmp
loope
dec
sti
xchg
in
repz
dec
sbb
lahf
dec
sti
xchg
in
repz
dec
sbb
ficomp
xchg
sub
inc
xor
mov
call
movs
cli
add
xor
ins
sbb
sbb
sbb
repz
dec
sbb
inc
mov
dec
mul
pop
dec
shl
mov
jno
jb
sbb
sbb
sbb
sbb
dec
sbb
in
adc
(bad)
cwde
xchg
in
add
addr16
sbb
sbb
pop
pusha
cdq
imul
in
mov
lock
dec
test
sbb
ins
xchg
mov
sub
lea
sbb
pop
nop
fwait
cmps
mov
ins
cdq
xor
ins
outs
inc
nop
sub
rcr
dec
xchg
sub
rcr
cmp
aas
in
out
repnz
dec
dec
sbb
pop
mov
push
mov
xchg
xchg
mov
sbb
xchg
lods
dec
aas
dec
push
movs
pop
xor
xor
loop
jecxz
frstor
sbb
dec
sbb
jno
jo
jae
sbb
xchg
outs
inc
repz
dec
dec
sbb
fmul
fsub
in
outs
push
jo
jno
jo
dec
test
or
in
retf
pop
leave
daa
ins
sbb
in
and
loope
mov
aas
in
pop
cmp
test
sbb
sbb
pop
mov
push
sbb
jmp
pop
dec
dec
test
mov
dec
test
sbb
sbb
inc
aaa
ror
mul
push
movs
fist
in
paddq
push
sbb
xchg
sub
rcr
sbb
fwait
ins
sbb
push
jb
sbb
outs
fs
fucom
loop
cld
in
mov
in
push
js
xchg
and
push
sbb
sbb
repnz
dec
ins
sbb
sbb
pop
mov
xchg
outs
pop
in
push
pop
repz
dec
dec
sbb
loop
jecxz
fstp
repz
fimul
inc
xor
mov
call
dec
cmp
outs
fisttp
test
pop
in
ja
xchg
dec
sbb
mov
xchg
lock
pop
push
addr16
addr16
dec
mov
pusha
jb
sti
sbb
call
and
mov
repz
dec
dec
sbb
ficomp
mov
pop
adc
push
push
dec
add
test
dec
ins
sbb
fbld
inc
pusha
mov
fwait
push
and
outs
push
pop
jb
pusha
mov
xor
dec
ins
sbb
fbld
out
fmul
in
mov
xor
fdivr
xchg
lods
dec
aas
dec
push
nop
xor
ret
fisttp
mov
pop
mov
dec
sbb
push
cli
or
test
sbb
ins
inc
js
xchg
inc
lods
push
cli
or
test
sbb
ins
cdq
lea
sub
mov
sti
sbb
inc
out
mov
scas
sbb
inc
aaa
ror
test
push
and
xchg
sbb
stos
sbb
imul
rep
cdq
sub
ins
xchg
xor
loope
shl
ins
sbb
leave
mov
mov
xchg
scas
call
stos
pop
stos
add
adc
or
in
mov
inc
mov
mov
xchg
scas
adc
call
jmp
(bad)
or
in
addr16
sbb
retf
sbb
lock
dec
sbb
ja
sbb
addr16
sbb
ret
adc
or
xchg
enter
dec
sbb
or
arpl
add
adc
dec
outs
push
call
ins
outs
sahf
xchg
mov
stos
xchg
sub
rcr
pop
inc
adc
sbb
dec
fs
and
add
dec
sbb
sbb
arpl
rol
ret
out
mov
mul
add
fwait
sti
rcr
or
out
inc
adc
pop
dec
nop
cmp
inc
lods
ds
retf
arpl
mov
sub
ret
adc
sbb
arpl
dec
pop
mov
rol
ret
xor
scas
jp
mov
mov
mov
cld
mov
fldenv
cld
lahf
mov
inc
mov
mov
sub
cld
mov
pop
cld
mov
mov
pop
(bad)
cld
mov
mov
pop
(bad)
mov
(bad)
cld
mov
mov
cld
mov
fldenv
cld
lahf
mov
jo
(bad)
cld
mov
cwde
lods
push
(bad)
cld
mov
outs
or
mov
mov
jl
xchg
pop
out
fldcw
mov
mov
mov
repnz
sbb
mov
mov
mov
je
ins
mov
pop
dec
mov
add
mov
mov
push
push
dec
inc
mov
mov
cld
mov
mov
(bad)
cld
mov
cld
mov
mov
neg
mov
mov
(bad)
(bad)
cld
mov
cld
mov
mov
mov
repnz
mov
ins
or
sbb
xchg
or
adc
pop
inc
ins
stos
or
mov
adc
pop
scas
jp
mov
mov
mov
cld
jo
mov
mov
inc
cld
mov
mov
cdq
mov
cld
mov
outs
ds
mov
mov
fst
cld
xor
sub
dec
(bad)
movs
mov
mov
in
mov
mov
mov
mov
inc
(bad)
adc
pop
inc
cld
sub
cld
mov
sbb
mov
mov
cld
cdq
mov
cld
mov
outs
ds
mov
mov
fst
cld
xor
sub
dec
(bad)
movs
mov
mov
in
mov
mov
mov
mov
inc
(bad)
sub
pop
cld
sub
cld
mov
sbb
mov
jp
mov
mov
jge
and
mov
scas
dec
sar
not
cmp
inc
fs
or
or
mov
sub
nop
sub
rcr
fadd
dec
nop
sub
sbb
sbb
ret
ins
jmp
xor
loope
xchg
sbb
xchg
mov
xchg
sub
icebp
in
sbb
imul
sbb
sbb
in
pusha
retf
mov
lods
xchg
or
cmc
in
mov
scas
xchg
sbb
aam
push
sbb
out
pop
mov
pop
jb
cmp
es
jl
xchg
sbb
call
xor
pop
jb
stos
sbb
or
ret
sub
dec
arpl
or
pop
mov
push
sbb
fs
sbb
pop
sahf
dec
mov
adc
pop
mov
in
dec
jmp
xchg
or
arpl
repz
dec
sbb
sbb
pop
sahf
dec
rol
jmp
out
fisubr
stos
sbb
outs
nop
sub
sbb
pop
pushf
adc
jo
arpl
push
inc
aaa
ror
test
pop
enter
lods
inc
sbb
add
(bad)
pop
dec
sbb
dec
shr
add
adc
out
daa
lea
imul
repnz
dec
sbb
pop
test
repz
loop
in
fiadd
stos
adc
sbb
sbb
sbb
push
je
rcr
xor
loope
cs
int3
and
jmp
fld
mov
pop
dec
xchg
fwait
sbb
pop
dec
dec
test
add
ins
jo
jno
xchg
mov
pop
ins
sbb
cmp
icebp
push
ins
sbb
fbstp
cmps
cs
pop
nop
icebp
pop
call
mov
push
mov
or
pop
nop
push
call
sbb
hlt
pop
ins
and
push
ret
call
xchg
sub
mov
sbb
xchg
sub
rcr
jmp
rcr
sub
jecxz
mov
dec
push
mov
or
push
pop
mov
mov
sbb
pop
mov
sub
data16
(bad)
in
fadd
mov
int
es
icebp
push
sub
sbb
xchg
sub
mov
nop
adc
inc
lods
xchg
xchg
mov
enter
adc
pop
ins
jo
jae
cmps
or
in
dec
push
lods
cmps
or
cmp
test
fbld
and
xchg
jnp
ins
xchg
mov
push
mov
or
pop
cwde
push
call
sbb
hlt
pop
ins
and
push
ret
call
xchg
sub
mov
pop
pushf
xchg
pop
(bad)
rcr
sub
jmp
mov
dec
push
mov
or
push
pop
mov
sbb
hlt
pop
ins
adc
stos
nop
js
test
push
mov
push
jae
fwait
sbb
pop
dec
adc
dec
cmps
retf
pop
mov
pop
xchg
cmps
cs
pop
push
fwait
mov
arpl
dec
fwait
adc
dec
outs
push
adc
shr
pop
lea
shl
in
fiadd
ins
jo
jno
jo
jno
jb
sbb
outs
fs
push
ins
sbb
pop
mov
dec
jno
xchg
or
cmp
cmp
cmp
cmp
test
sbb
inc
mov
sub
jbe
ins
in
stos
xchg
sub
rcr
inc
adc
scas
dec
sar
not
ins
sbb
dec
cmp
movs
adc
xchg
int3
not
fwait
dec
outs
fcomp
mov
sbb
jno
xchg
pop
ins
xchg
mov
repz
sbb
leave
add
jl
rcr
lock
imul
add
rol
retf
xor
pop
shl
(bad)
mov
xchg
in
pop
xchg
sbb
sbb
xchg
mov
sbb
xchg
sbb
adc
fsubr
xchg
clc
daa
mov
xchg
in
pop
xchg
sbb
pop
xchg
es
ins
cmps
fmul
sbb
in
sbb
mov
scas
sbb
xchg
in
fucomp
sbb
in
sub
in
jb
dec
sbb
lahf
mov
xchg
in
jae
mov
xchg
pop
ins
xchg
int3
loopne
in
dec
test
add
ins
jo
jno
jo
jno
jo
jae
sbb
loope
mov
xchg
in
repz
lahf
mov
outs
mov
sbb
push
dec
sbb
sbb
sahf
pushf
out
in
jb
add
jecxz
pop
dec
in
out
mov
xchg
bnd
ins
sbb
jmp
jmp
xchg
in
fsubr
sbb
imul
(bad)
mov
dec
xchg
jmp
dec
mov
xchg
jmp
dec
and
mov
dec
xchg
jmp
dec
and
ins
sbb
repz
sbb
aam
add
ins
in
scas
xchg
jmp
xchg
(bad)
in
outs
std
pop
ins
jb
les
sbb
(bad)
mov
dec
xchg
jmp
dec
and
ins
sbb
repz
sbb
aas
jb
les
sbb
data16
dec
jae
sbb
test
sbb
dec
in
in
push
ins
sbb
inc
aaa
ror
mul
pop
dec
out
pop
movs
pop
arpl
aaa
in
pusha
jecxz
fnsave
sbb
loop
cld
in
mov
out
xchg
or
cmp
or
cmp
dec
jae
sbb
push
sbb
sbb
sbb
adc
mov
fwait
push
sbb
xchg
xchg
or
xchg
outs
mov
push
sbb
sbb
out
xor
sbb
and
out
out
sbb
inc
movs
fstp
mov
test
sbb
ins
in
je
jo
dec
xchg
outs
pop
in
or
adc
lea
xor
dec
in
sbb
jne
inc
xchg
mov
mov
and
push
push
les
dec
mov
jl
cmp
xchg
outs
inc
repz
dec
sbb
ficom
movs
fstp
mov
dec
shl
mov
xchg
xchg
mov
sub
sbb
jb
sbb
and
push
sbb
sbb
adc
adc
jle
sbb
mov
js
cmp
push
sbb
out
ja
sbb
outs
pusha
in
out
daa
add
ins
sub
xor
mov
sub
sar
neg
cmp
push
jge
pop
push
movs
xlat
push
cmp
sbb
sub
sbb
sbb
push
sbb
adc
mov
sub
add
and
push
sbb
out
dec
sbb
outs
pusha
in
out
fisttp
sbb
lock
cmp
test
(bad)
pop
je
inc
mov
fwait
std
rcr
mov
mov
call
dec
cmp
mov
stos
pop
sub
ins
cdq
je
mov
cmp
dec
test
or
in
js
in
call
and
loop
xor
fimul
lock
dec
jae
sbb
push
sbb
sbb
sbb
jp
pop
dec
repz
dec
sbb
out
pop
ins
fwait
mov
adc
pop
in
out
pop
ins
repnz
sbb
pop
nop
icebp
dec
call
pop
shr
or
rol
rcr
pop
ins
pop
loope
sub
cs
dec
fstp
mov
dec
cmp
inc
fsubr
out
pop
in
ret
xchg
mov
scas
xchg
sbb
in
mov
push
sbb
jecxz
ret
pushf
sbb
repz
dec
sbb
fiadd
xchg
xor
pop
outs
sbb
jecxz
fimul
add
or
jne
ins
outs
mov
mov
push
outs
ja
mov
in
es
adc
or
pop
jl
dec
sbb
pop
mov
dec
sbb
mov
mov
ret
cmp
in
pop
ins
sbb
fsubr
pop
mov
or
dec
adc
sbb
repz
sbb
pop
mov
scas
xor
ret
ins
loop
sbb
push
inc
aaa
ror
idiv
pop
dec
out
inc
fsubr
jmp
pushf
ds
ins
dec
mov
xchg
sub
rcr
std
retf
dec
and
fwait
or
ins
xchg
or
pop
in
mov
sub
jmp
ficomp
jp
pushf
imul
pop
pop
jb
xchg
push
imul
sub
dec
sbb
in
lods
push
and
jecxz
add
ins
cmp
or
add
ins
mov
mov
xchg
cmp
ror
(bad)
dec
out
mov
pop
ins
dec
mov
cwde
test
das
in
in
lods
sub
jb
xchg
push
push
inc
aaa
ror
push
ins
sbb
adc
sbb
dec
push
movs
and
and
out
mov
xchg
sbb
mov
ins
xchg
int3
jecxz
in
dec
xchg
outs
inc
repz
mov
out
fiadd
scas
xchg
mov
adc
repz
adc
cmps
xchg
in
in
outs
inc
dec
test
mov
jle
dec
sbb
pop
dec
sbb
lahf
xchg
in
in
add
in
leave
loop
in
xchg
int3
iret
xchg
out
nop
rol
mov
xchg
jno
ret
xchg
out
sub
(bad)
popf
in
in
cmps
push
sbb
ins
dec
and
dec
or
ins
xchg
int3
out
in
call
cmp
add
dec
sbb
pop
ins
sbb
jmp
jmp
jmp
xchg
mov
push
sbb
xchg
xchg
mov
xchg
fmul
xchg
out
sbb
in
cwde
test
and
pop
dec
in
adc
cwde
test
and
pop
dec
in
out
in
repnz
sbb
fbld
pop
ins
sbb
adc
sbb
pop
jae
cli
or
xchg
scas
mov
xchg
in
dec
sub
dec
cwde
test
shr
jmp
ins
mov
shr
xchg
cdq
mov
adc
mov
mov
cmc
in
mov
out
mov
xchg
in
jae
lds
sbb
repnz
ins
sbb
fistp
pop
ins
sbb
adc
sbb
pop
jae
cli
or
xchg
scas
mov
xchg
in
in
sub
dec
cwde
test
and
pop
dec
in
out
in
repnz
pop
ins
sbb
fbld
pop
ins
sbb
adc
sbb
pop
jae
cli
or
xchg
scas
mov
xchg
in
movs
sub
dec
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
test
sbb
sbb
in
xchg
dec
ret
in
in
jb
les
sbb
repz
sbb
ficomp
sbb
and
mov
dec
nop
jmp
dec
and
mov
dec
dec
test
sbb
paddsw
mov
sbb
mov
cmc
in
mov
xchg
pop
xor
add
test
out
in
repz
dec
sbb
fiadd
lds
sbb
in
xor
sbb
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
test
out
in
repz
dec
sbb
fiadd
outs
lds
sbb
in
in
das
sbb
test
mov
mov
cmc
in
mov
xchg
pop
xor
test
sub
ins
sbb
in
xchg
dec
ret
in
in
jb
les
sbb
repz
dec
sbb
ficomp
sbb
sbb
in
in
fsub
mov
cmc
in
mov
add
xchg
pop
ins
xchg
hlt
lds
ja
sbb
lds
outs
pop
nop
jmp
dec
and
mov
dec
dec
test
sbb
cmp
inc
sbb
in
xchg
cdq
mov
adc
mov
mov
cmc
in
mov
out
mov
xchg
in
jae
lds
sbb
repnz
pop
ins
sbb
fistp
in
mov
mov
stos
repnz
adc
sbb
pop
jae
cli
or
xchg
scas
mov
xchg
in
adc
sbb
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
xchg
pop
ins
in
out
in
xrelease
sbb
fiadd
retf
sbb
adc
ins
cmp
jg
mov
scas
nop
in
in
fisttp
sbb
adc
jmp
mov
dec
in
push
ret
in
in
jb
lds
sbb
repz
sbb
ficomp
xor
sbb
adc
ins
cmp
jg
add
sbb
in
or
ins
cdq
lea
test
or
ins
mov
shr
xchg
cdq
mov
adc
and
mov
in
out
in
repnz
sbb
fbld
pop
ins
sbb
adc
sbb
push
outs
pop
dec
sbb
jns
sbb
loop
xchg
hlt
out
in
dec
add
xchg
pop
ins
dec
mov
cwde
test
retf
sbb
call
mov
dec
repnz
dec
sbb
in
call
in
fist
gs
in
in
lahf
mov
xchg
in
sahf
xchg
in
in
popa
ret
in
in
cmps
mov
xchg
in
lods
push
and
jecxz
add
ins
cmp
in
lock
mov
fwait
clc
mov
outs
xchg
fsub
mov
xchg
hlt
sbb
dec
add
xchg
pop
ins
xchg
hlt
sbb
dec
test
sbb
paddq
sbb
ins
in
scas
xchg
jmp
xchg
(bad)
in
fidiv
fist
sbb
out
imul
xchg
in
in
add
sahf
ins
sbb
out
in
dec
add
xchg
pop
ins
dec
mov
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
xchg
pop
ins
in
out
in
repz
dec
sbb
fiadd
mov
dec
sbb
adc
ins
cmp
jg
add
sbb
in
jecxz
sbb
adc
jmp
sub
dec
mov
cmc
in
mov
xchg
pop
xor
add
test
out
in
repz
fiadd
jmp
call
xchg
in
nop
jmp
and
fist
test
not
in
scas
xchg
jmp
xchg
(bad)
repnz
sbb
out
push
xchg
jmp
repz
ins
sbb
cmps
ins
sbb
daa
ins
sbb
pushf
sub
pop
imul
int3
jecxz
in
adc
pop
dec
sbb
jecxz
in
xchg
jmp
in
(bad)
inc
xchg
pop
ins
xchg
int3
out
xchg
out
dec
test
or
ins
cdq
lea
loope
mov
rcl
sbb
in
das
xchg
rcr
mov
xchg
xchg
mov
xchg
jmp
dec
inc
lods
jmp
xchg
int
cwde
in
in
repnz
and
sahf
cwde
in
in
repnz
jecxz
in
fild
int3
jmp
out
in
out
mov
xchg
in
add
in
sahf
nop
in
in
jb
lds
sbb
repz
sbb
ficom
jmp
sbb
loop
loopne
data16
adc
sbb
in
mov
lea
in
dec
jmp
fsub
mov
cmc
in
mov
xchg
pop
xor
add
xchg
pop
ins
in
out
in
repz
and
inc
repz
and
dec
sbb
loop
loopne
data16
mov
scas
nop
in
in
dec
jbe
ins
cdq
lea
xchg
scas
mov
fcom
dec
call
int3
out
xchg
in
xchg
jmp
dec
mov
xchg
in
in
repnz
in
xchg
in
fbld
int3
jecxz
in
adc
mov
push
les
sbb
in
sbb
sbb
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
xchg
pop
ins
in
out
in
repz
sbb
fiadd
repnz
sbb
adc
ins
cmp
jg
add
sbb
in
cmps
ja
ins
cdq
lea
in
mov
in
in
fld
inc
sbb
in
xchg
cdq
mov
adc
and
mov
in
out
in
repnz
fs
lds
sbb
in
arpl
ins
cdq
lea
test
ja
ins
mov
shr
xchg
cdq
mov
adc
mov
mov
cmc
in
mov
out
mov
xchg
in
jae
lds
sbb
repnz
ins
sbb
adc
sbb
pop
jae
les
sbb
in
add
sbb
test
enter
dec
sbb
inc
sbb
in
xchg
cdq
mov
adc
and
mov
dec
in
out
in
repnz
fbld
es
sbb
adc
sbb
pop
jae
cli
or
xchg
scas
mov
xchg
in
aam
sbb
test
mov
mov
cmc
in
mov
xchg
pop
xor
test
sbb
sbb
in
xchg
dec
ret
in
in
jb
les
sbb
repz
dec
sbb
ficomp
inc
les
sbb
in
pushf
push
sbb
test
shr
jmp
ins
mov
shr
xchg
cdq
mov
adc
and
mov
in
out
in
repnz
fbld
lds
sbb
in
push
je
ins
cdq
lea
test
je
ins
mov
shr
xchg
cdq
mov
adc
and
mov
in
out
in
repnz
es
sbb
fbld
lds
sbb
in
or
cdq
lea
in
in
dec
or
push
sbb
data16
cmc
in
mov
xchg
pop
xor
add
test
out
in
repz
dec
sbb
fiadd
jmp
dec
ret
in
in
jb
lds
sbb
repz
sbb
ficomp
jmp
sbb
loop
loopne
data16
mov
scas
nop
in
in
mov
lea
add
xchg
pop
ins
in
out
in
repz
es
sbb
fiadd
and
dec
sbb
adc
ins
cmp
jg
mov
scas
nop
in
in
ja
sbb
adc
ins
xor
ins
in
scas
xchg
jmp
xchg
(bad)
repz
dec
sbb
repnz
sbb
loop
int
fdivr
sbb
xchg
hlt
out
in
dec
add
xchg
pop
ins
dec
mov
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
test
out
in
repz
dec
sbb
fiadd
mov
or
xchg
scas
mov
xchg
in
loopne
sbb
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
test
out
in
repz
fiadd
call
and
adc
sbb
push
push
and
aad
dec
sbb
loop
xchg
hlt
out
in
dec
add
xchg
pop
ins
dec
mov
cwde
test
and
mov
dec
in
out
in
repnz
sbb
fbld
jno
jo
jno
jo
jae
sbb
xchg
outs
inc
rep
and
in
mov
(bad)
addr16
sbb
in
pushf
push
sbb
ins
xchg
hlt
out
xchg
in
dec
cmp
cld
out
in
in
repnz
xchg
repnz
ins
sbb
in
jecxz
sbb
out
in
repz
sub
dec
jmp
fcomp
repz
sub
movs
in
in
inc
aaa
ror
mul
sbb
movs
add
popa
adc
jecxz
std
rcr
fisttp
and
or
cmp
ret
sbb
sahf
xchg
in
in
repnz
and
jecxz
loop
fadd
sbb
popf
mov
dec
xchg
jmp
dec
and
ins
sbb
repz
jmp
sub
dec
xchg
sub
jne
push
movs
and
add
xchg
pop
ins
jb
(bad)
sbb
sbb
repz
int3
xchg
pop
ins
jb
(bad)
sbb
lock
dec
jae
sbb
test
lea
in
cmc
adc
shr
neg
sbb
dec
cmp
shl
loop
fsubr
mov
dec
nop
sub
leave
and
fstp
out
cli
dec
xchg
jmp
xchg
or
out
dec
sbb
xchg
jmp
xchg
mov
xchg
xchg
mov
mov
or
in
retf
dec
mov
nop
cmp
les
pop
or
xchg
dec
mov
xchg
jmp
in
mov
dec
sub
inc
nop
loope
mov
xchg
xchg
sbb
sbb
ror
loop
jecxz
fstp
rep
sub
xor
xchg
in
scas
int3
out
in
jmp
sbb
outs
xchg
in
in
xor
sbb
dec
fs
les
in
xchg
cmp
dec
nop
loope
mov
xchg
xchg
sbb
sbb
ror
in
sub
ins
sbb
sbb
das
dec
sbb
lahf
fucom
xchg
in
in
adc
sbb
or
sbb
lahf
in
out
in
rep
and
test
sbb
and
sbb
push
lahf
std
out
in
jae
(bad)
or
add
xchg
pop
ins
jb
sbb
or
test
inc
fistp
pop
pop
repz
sbb
mov
repz
mov
add
dec
sbb
out
in
dec
loope
std
out
in
repz
cs
sbb
in
scas
cld
out
in
scas
(bad)
in
scas
in
mov
xchg
scas
shl
xchg
in
scas
int3
out
in
xchg
int3
scas
xchg
in
dec
test
xchg
cdq
lea
in
aad
xchg
in
fistp
pop
pop
repz
das
dec
sbb
mov
jae
(bad)
or
loope
mov
xchg
in
repz
and
in
pusha
jecxz
ffree
sahf
fsub
mov
cmp
int3
out
in
dec
test
mov
sahf
call
pop
and
loope
icebp
in
in
repz
dec
sbb
ficom
xchg
xor
mov
ins
sbb
jmp
sbb
ins
jl
sahf
test
mov
ins
sbb
cmps
call
outs
push
jge
lahf
mov
sbb
fst
ins
sbb
sahf
aam
mov
cmp
pop
jmp
in
xchg
jmp
dec
les
cmp
dec
jno
jo
jno
jo
jno
xchg
int3
out
in
dec
push
sbb
adc
dec
in
mov
in
repnz
sub
jecxz
loop
fcom
in
or
(bad)
or
loope
mov
xchg
in
repz
sub
pop
fucomp
imul
ins
sbb
sahf
nop
in
in
jb
(bad)
sbb
xchg
scas
adc
sbb
jo
sbb
jmp
sbb
sahf
pop
out
in
pop
cmp
sar
ins
repnz
cmps
cld
out
in
outs
inc
jae
jmp
ins
jb
sbb
sahf
nop
in
in
dec
mov
jno
jb
(bad)
cs
sahf
nop
in
in
repnz
fbld
mov
ins
sbb
out
mov
dec
lock
in
xchg
fst
ins
sbb
out
in
call
int3
scas
xchg
in
dec
test
sbb
add
in
cmp
xchg
in
fdivr
repnz
ins
sbb
sbb
in
fcomp
dec
in
mov
in
sub
sahf
lock
in
adc
dec
in
mov
mov
stos
inc
pop
inc
movs
fmul
cmp
sbb
xchg
adc
rcr
sub
mov
xchg
scas
jl
dec
xchg
xchg
mov
xchg
xchg
mov
sbb
mov
xchg
scas
jl
dec
nop
in
or
mov
dec
mov
sbb
jge
dec
mov
adc
dec
mov
mov
sbb
xchg
sub
popa
dec
push
sbb
xchg
stos
fwait
cmps
dec
and
dec
sub
fstp
in
mov
xchg
sub
sbb
(bad)
das
dec
sbb
fiadd
sbb
shr
fimul
and
ins
in
pop
arpl
dec
push
sub
mov
xchg
xchg
xor
or
or
loope
dec
push
arpl
pop
sbb
inc
sub
adc
pop
mov
sub
adc
dec
mov
mov
xchg
or
lock
sbb
sub
sbb
dec
and
aas
pop
dec
jno
jo
repz
sub
in
enter
dec
sbb
in
repz
sub
loope
mov
cmp
jns
ins
sbb
repz
out
mov
xor
fdivr
xchg
lods
mov
test
pop
dec
out
inc
movs
mov
jl
loop
jecxz
(bad)
xchg
sbb
mov
mov
stos
(bad)
cmps
mov
mov
jae
dec
xchg
jmp
dec
les
cmp
das
(bad)
sbb
xchg
stos
adc
sbb
pop
jp
dec
dec
xchg
scas
(bad)
sti
xchg
in
xchg
pop
sbb
test
inc
fistp
add
mov
xchg
outs
inc
repz
sub
in
mov
sti
xchg
in
fcomp
or
xor
int3
cmps
mov
mov
jae
dec
xchg
jmp
dec
les
cmp
mov
adc
mov
stos
dec
mov
test
mov
test
jge
ins
cdq
lea
fidivr
xchg
scas
cmp
pusha
repnz
xor
sbb
sub
inc
call
jecxz
lods
inc
pop
inc
movs
fstp
mov
mov
dec
cmp
inc
movs
loop
cdq
inc
enter
dec
sbb
jmp
push
inc
jns
ins
xchg
nop
cwde
movs
in
fwait
push
sbb
xchg
xchg
mov
xchg
xchg
sbb
in
cwde
test
and
pop
dec
dec
test
sbb
adc
in
fidiv
sbb
jmp
jmp
ins
xchg
int3
sbb
jge
ins
cdq
lea
test
jp
ins
mov
shr
xchg
cdq
mov
adc
and
mov
xchg
jmp
dec
mov
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
test
sub
ins
sbb
in
xchg
dec
les
cmp
(bad)
cs
cmps
ins
cli
mov
cmp
jmp
fistp
sub
adc
sbb
pop
jae
cli
or
loope
dec
sti
xchg
in
repz
out
fiadd
pushf
xor
les
sbb
sahf
ins
cli
mov
cmp
int
ins
sbb
fbld
sub
adc
sbb
pop
jae
cli
or
loope
dec
sti
xchg
in
repz
dec
sbb
fiadd
jbe
dec
sbb
adc
ins
cmp
inc
repnz
sub
js
sbb
fwait
jecxz
xchg
rcr
test
inc
mov
dec
xchg
rcr
test
in
sbb
test
mov
jl
pop
les
sbb
sahf
ins
cli
mov
cmp
push
sahf
ins
cli
mov
cmp
xchg
sub
fistp
mov
out
mov
mov
stos
repnz
sub
adc
sbb
pop
jae
cli
or
loope
dec
sti
xchg
in
repz
fiadd
lds
sbb
lahf
dec
sti
xchg
in
repz
sub
out
fiadd
sbb
dec
sbb
adc
ins
cmp
js
mov
sahf
ins
cli
mov
cmp
(bad)
ins
sbb
fbld
les
sbb
sahf
ins
cli
mov
cmp
leave
sub
fbld
in
mov
mov
stos
bnd
ins
sbb
adc
sbb
pusha
repz
dec
sbb
jns
sbb
loop
xchg
hlt
sbb
xchg
pop
ins
xchg
hlt
sbb
jnp
ins
cdq
lea
add
xchg
pop
ins
xchg
int3
sbb
jnp
ins
cdq
lea
test
js
ins
mov
shr
xchg
cdq
mov
adc
and
mov
xchg
jmp
dec
mov
cwde
test
and
pop
dec
xchg
jmp
dec
mov
cwde
test
shr
jmp
ins
mov
shr
xchg
cdq
mov
adc
and
mov
xchg
jmp
dec
mov
cwde
test
and
mov
dec
xchg
jmp
dec
mov
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
test
sbb
js
ins
cdq
lea
in
in
fidiv
ins
sbb
sbb
xchg
pop
ins
xchg
int3
sbb
js
ins
cdq
lea
test
js
ins
mov
shr
xchg
cdq
mov
adc
and
mov
xchg
jmp
dec
mov
cwde
test
and
mov
dec
xchg
jmp
dec
mov
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
add
test
sbb
js
ins
cdq
lea
aam
sbb
xchg
jmp
xchg
(bad)
repz
sbb
repnz
sbb
loop
int
fdivr
sbb
xchg
hlt
sbb
xchg
pop
ins
xchg
hlt
sbb
jns
ins
cdq
lea
test
sbb
sbb
in
xchg
cdq
mov
adc
and
mov
xchg
jmp
dec
mov
cwde
test
and
mov
dec
xchg
jmp
dec
mov
cwde
test
enter
dec
sbb
inc
sbb
in
xchg
cdq
mov
adc
and
mov
xchg
jmp
dec
mov
cwde
test
mov
mov
cmc
in
mov
xchg
pop
xor
test
jns
ins
mov
shr
xchg
dec
les
cmp
(bad)
cs
cmps
ins
cli
mov
cmp
mov
ins
sbb
fistp
(bad)
cs
sahf
ins
cli
mov
cmp
inc
sub
fbld
jno
jo
jno
jo
jae
sbb
aas
repnz
sbb
sahf
nop
lds
or
sbb
sahf
ins
cli
mov
cmp
inc
ss
sbb
sbb
cmps
mov
xchg
in
dec
loope
dec
sti
xchg
in
in
out
in
repnz
aaa
ins
sbb
in
bound
ins
sub
jmp
jmp
scas
dec
sar
test
ins
sbb
dec
cmp
shl
std
rcr
(bad)
mov
ins
sub
sbb
adc
bnd
dec
fs
sbb
(bad)
xchg
in
xchg
xchg
in
scas
xchg
jmp
xchg
mov
xor
cmp
jge
ins
sbb
call
dec
int
sbb
xchg
jmp
jo
jno
xchg
int3
mov
test
sbb
dec
sbb
sahf
fsub
mov
cmp
out
sbb
scas
mov
dec
jae
sbb
test
lods
in
cdq
lea
fiadd
rcr
sbb
dec
sbb
out
in
dec
loope
std
out
in
repz
xor
in
dec
jecxz
fnsave
in
xchg
int3
scas
xchg
in
dec
test
mov
xchg
cdq
lea
fiadd
sbb
mov
int3
out
in
dec
test
int3
scas
xchg
in
dec
loope
mov
xchg
in
repz
xor
sbb
int3
adc
mov
stos
jo
jno
xchg
int3
mov
test
sbb
lea
in
fstp
ins
sbb
in
sbb
stos
lahf
lods
in
in
sbb
cmps
hlt
out
in
outs
push
jge
lahf
mov
sbb
fnstsw
ins
sbb
sahf
aam
mov
cmp
push
std
xchg
in
xchg
jmp
dec
les
cmp
dec
jno
jo
jno
jo
jno
xchg
int3
out
in
dec
push
sbb
adc
dec
in
mov
in
repnz
ins
sbb
jecxz
loop
fcom
in
or
(bad)
or
loope
mov
xchg
in
repz
dec
sbb
ficomp
jmp
sbb
and
sahf
nop
in
in
jb
(bad)
sbb
xchg
stos
adc
sbb
push
jmp
sbb
sahf
adc
mov
push
pop
cmp
gs
inc
lahf
sbb
add
mov
xor
jecxz
loop
fadd
dec
sbb
mov
repnz
add
xchg
pop
ins
xchg
int3
mov
dec
cli
in
cdq
lea
push
in
sbb
(bad)
xchg
jmp
dec
sbb
fsubr
mov
out
fiadd
lods
adc
dec
jno
in
(bad)
xchg
in
xchg
jmp
dec
mov
call
int3
xchg
scas
fucom
xchg
in
push
mov
in
(bad)
xchg
in
repz
add
xchg
pop
ins
repnz
xor
jae
(bad)
or
cmp
mov
ins
sbb
fistp
mov
jb
(bad)
sbb
nop
icebp
xchg
aas
xchg
mov
lahf
dec
mov
clc
out
in
sub
in
cdq
lea
xchg
mov
out
bnd
cmp
cld
(bad)
xchg
in
repz
mov
out
fiadd
cmp
sbb
sbb
sbb
jmp
sbb
ins
xchg
int3
scas
xchg
in
dec
test
pusha
sbb
sbb
cld
mov
push
xor
xchg
scas
in
out
in
add
sbb
jmp
icebp
dec
call
pop
inc
movs
fmul
cmp
sbb
xchg
adc
shr
sub
or
sbb
test
sbb
jecxz
outs
inc
repz
out
mov
cmp
pop
dec
push
pop
mov
xchg
stos
dec
pop
repz
cmp
pop
sbb
xchg
sub
rcr
repnz
pusha
xchg
sbb
sbb
sbb
test
sbb
out
jo
dec
add
pop
pop
ins
jo
jno
repnz
xor
fld
in
repz
dec
sbb
loop
cld
in
mov
out
dec
mov
dec
test
sbb
out
inc
adc
scas
dec
sar
sbb
ins
repnz
shr
dec
fwait
mov
pop
sbb
imul
popa
sbb
xchg
xchg
xor
outs
push
jb
adc
sbb
sahf
ins
jmp
inc
sbb
ins
in
pop
loope
dec
jmp
in
repz
inc
es
in
sbb
push
shr
or
in
jb
dec
sbb
sbb
repz
sbb
fsub
fdivr
xchg
lods
cwde
adc
movs
das
pop
fiadd
ins
sbb
fsubr
in
sbb
in
jae
(bad)
or
loope
mov
sbb
xor
sub
sbb
jb
sbb
cs
mov
pusha
sbb
pop
xchg
cdq
mov
cmp
mov
cs
pop
cwde
dec
mov
cwde
test
les
dec
and
add
dec
sbb
aaa
repz
dec
repz
xor
or
or
arpl
inc
addr16
inc
sbb
xchg
lods
cwde
adc
dec
shr
add
mov
std
in
mov
stos
jo
jno
jo
jno
jo
jno
jo
jno
jo
jae
sbb
push
sbb
sbb
sbb
or
mov
fwait
cld
rcr
(bad)
jno
dec
and
xchg
das
int
sbb
jno
dec
and
xchg
das
mov
fs
sbb
ins
dec
and
xchg
das
leave
mov
inc
sbb
ins
dec
and
xchg
das
test
sbb
ins
dec
and
xchg
das
push
mov
mov
call
dec
dec
push
sub
sbb
dec
dec
push
sub
sbb
dec
dec
push
sub
sbb
dec
dec
push
sub
sbb
mov
jno
dec
and
xchg
das
jns
sub
sbb
ins
dec
and
xchg
das
mov
clc
dec
sbb
ins
dec
and
xchg
das
fnstsw
dec
sbb
ins
dec
and
xchg
das
sar
dec
sbb
fdiv
dec
sbb
xchg
pop
mov
push
xchg
fwait
mov
jno
in
repz
pop
dec
repz
fcomp
jb
pushf
sub
and
xchg
das
mov
and
dec
jno
in
fwait
int
dec
repz
cmp
(bad)
pop
ins
jb
pushf
sub
and
xchg
das
leave
mov
dec
sbb
fwait
pop
inc
sbb
in
ss
pop
ins
repnz
ins
sbb
aas
repz
dec
jae
popf
or
push
out
cs
test
sbb
mov
pop
push
fcomp
repnz
cmp
cld
pop
dec
jae
popf
or
push
out
cs
or
test
outs
sbb
in
xor
pop
ins
repnz
cmp
int
dec
jae
popf
or
push
out
cs
test
sbb
mov
pop
cmp
pop
ins
repnz
cmc
pop
dec
jae
popf
or
push
out
cs
test
sbb
mov
xchg
xchg
mov
in
lahf
int
dec
repz
cmp
sbb
push
(bad)
pop
ins
jb
pushf
sub
and
xchg
das
int
sbb
inc
scas
dec
sar
neg
cmp
enter
dec
sbb
xchg
pop
ins
in
adc
(bad)
jae
ror
cmp
retf
in
fistp
test
repnz
sub
dec
sbb
pop
mov
ds
sbb
sbb
sbb
sbb
xchg
or
inc
pop
mov
xor
jmp
ins
sbb
dec
add
xchg
pop
ins
jb
shr
and
outs
sbb
push
cmp
sbb
pop
jmp
in
cs
pop
ins
jo
dec
push
es
xor
out
repnz
(bad)
sbb
cmp
(bad)
shr
and
mov
dec
jno
repnz
cmp
repz
dec
xchg
xchg
xor
in
cs
pop
ins
jo
in
pop
jmp
sbb
pop
xchg
xor
out
repnz
(bad)
adc
cmp
xchg
les
sbb
shl
lea
ins
sbb
jnp
pop
dec
jno
jo
jno
jo
jno
jo
jno
jo
jno
jb
sbb
sbb
sbb
adc
push
mov
xchg
stos
jo
dec
push
sub
sbb
dec
in
cs
pop
ins
jo
in
pop
jmp
jae
sbb
push
jle
xor
dec
sbb
and
shl
adc
ins
sbb
addr16
dec
call
dec
in
cs
pop
ins
jo
in
pop
jmp
jae
sbb
push
bound
xor
dec
sbb
push
shr
and
mov
dec
jno
repnz
ds
sbb
mov
ins
in
das
repz
dec
jno
in
pop
int3
pop
dec
jno
jb
sbb
mov
inc
jb
sbb
aad
pop
dec
jae
ror
push
sbb
mov
push
sbb
sbb
sbb
sbb
or
arpl
dec
jae
sbb
push
xor
sbb
jae
ror
add
xchg
pop
ins
jo
repz
ds
sbb
push
(bad)
pop
ins
jo
in
cs
pop
ins
jo
in
jp
pop
ins
jo
jno
jb
sbb
(bad)
sbb
cmp
xchg
les
sbb
sahf
mov
dec
jno
repnz
repz
pop
dec
call
xor
sbb
sbb
dec
sbb
sub
dec
jae
ror
push
sbb
pop
ins
sbb
pop
repnz
ins
repnz
aas
ins
sbb
sbb
sbb
sbb
sbb
aaa
ins
sbb
pop
jb
sbb
popa
add
dec
fwait
cmp
xchg
les
sbb
sahf
mov
dec
jno
repnz
aas
ins
sbb
fwait
int
dec
call
dec
in
cs
pop
ins
jo
in
jp
pop
ins
jb
sbb
daa
add
dec
sbb
sbb
sbb
jae
lds
sbb
xchg
pop
ins
jo
repz
cmp
iret
ss
pop
ins
repnz
xchg
in
sbb
sbb
sbb
sbb
or
and
std
ins
sbb
add
dec
sbb
dec
sbb
and
sbb
shl
lds
ins
sbb
mov
pop
dec
xchg
xchg
in
scas
xchg
sub
rcr
sbb
sbb
sbb
sbb
or
call
dec
sbb
dec
sbb
sbb
dec
mov
dec
jae
ror
push
sbb
mov
push
sbb
sbb
sbb
sbb
or
jl
add
ins
jb
sbb
sbb
jae
ror
add
xchg
pop
ins
jo
repz
dec
sbb
sub
pop
ins
jo
in
cs
pop
ins
jo
in
pop
jmp
jae
sbb
add
dec
sbb
jae
sbb
add
xchg
pop
ins
jb
shr
and
test
imul
mov
and
xchg
das
jge
sub
das
or
or
dec
and
sbb
int3
sbb
add
dec
sbb
dec
shr
and
mov
dec
jno
repnz
ins
sbb
(bad)
iret
pop
dec
jno
in
das
repz
dec
jno
in
jnp
pop
dec
jno
jb
sbb
mov
jno
jb
sbb
dec
and
mov
dec
jae
ror
add
dec
sbb
cmp
lahf
int
dec
jno
in
das
repz
dec
jno
in
jnp
pop
dec
jno
jb
sbb
fsubr
jno
jb
sbb
dec
and
ins
ror
add
dec
sbb
cmp
pop
stc
pop
dec
xchg
xchg
xor
in
cs
pop
ins
jo
in
jp
pop
ins
jo
jno
jb
sbb
(bad)
sbb
cmp
xchg
les
sbb
sbb
sbb
test
push
test
das
jge
sub
das
sub
push
jle
out
ins
sbb
js
dec
sbb
dec
and
mov
dec
jae
ror
add
dec
sbb
cmp
cmp
pop
dec
jno
in
das
repz
dec
jno
in
pop
int3
pop
dec
jno
jb
sbb
mov
sbb
jb
dec
sbb
dec
and
mov
dec
jae
ret
or
push
sbb
mov
test
in
xchg
mov
xchg
xchg
mov
jmp
mov
xor
cmp
pop
dec
shr
mov
xchg
xchg
mov
ror
xchg
outs
inc
repz
in
mov
in
and
mov
dec
dec
test
mov
or
adc
pop
ins
xchg
mov
xchg
xchg
mov
in
adc
pop
dec
repz
dec
sbb
pop
mov
cmp
sbb
sbb
sbb
xchg
or
inc
pop
mov
xor
jmp
ins
sbb
dec
add
xchg
pop
ins
jb
shr
and
outs
sbb
mov
pop
jmp
in
cs
pop
ins
jo
dec
push
es
xor
out
repnz
(bad)
sbb
cmp
add
sbb
shl
aad
ins
sbb
pop
repz
dec
call
dec
in
cs
pop
ins
jo
in
pop
jmp
sbb
pop
xchg
xor
out
repnz
(bad)
adc
cmp
xchg
les
sbb
shl
adc
ins
sbb
jnp
pop
dec
jno
jo
jno
jo
jno
jo
jno
jo
jno
jb
sbb
sbb
sbb
adc
push
mov
xchg
stos
jo
dec
push
sub
sbb
dec
in
cs
pop
ins
jo
in
jp
pop
ins
jo
jno
jo
jno
jb
sbb
dec
and
mov
dec
jae
ror
push
sbb
mov
in
cmc
push
or
mov
dec
jno
jb
sbb
repz
sbb
xchg
pop
ins
jo
jae
sbb
xchg
das
mov
mov
dec
fwait
push
mov
pop
ins
cs
push
sbb
sbb
dec
sbb
repz
pop
dec
repz
add
and
push
sbb
push
ins
sbb
pop
repnz
ins
repnz
sbb
sbb
sbb
sbb
aaa
ins
sbb
pop
jo
jno
jb
sbb
dec
and
mov
dec
jae
ror
push
sbb
mov
in
dec
jecxz
frstor
sbb
sbb
sbb
sbb
aaa
ins
sbb
push
jo
jae
sbb
add
dec
fwait
cmp
xchg
les
sbb
sahf
mov
dec
jno
repnz
add
sbb
aaa
repz
dec
repz
mov
push
sbb
sbb
sbb
sbb
or
call
pop
sbb
sbb
jae
ror
add
xchg
pop
ins
jo
repz
dec
sbb
outs
call
in
cs
pop
ins
jo
in
pop
jmp
jno
jb
sbb
fsubr
jae
sbb
add
xchg
pop
ins
jb
shr
and
test
jns
sub
sbb
mov
and
xchg
das
jge
sub
das
or
or
dec
sbb
sbb
jg
sbb
cmp
pop
shr
and
mov
dec
jno
repnz
jmp
pop
dec
jno
in
das
repz
dec
jno
in
pop
int3
pop
dec
jno
jo
jae
sbb
add
dec
sbb
sbb
sbb
mov
or
push
sbb
mov
push
sbb
sbb
sbb
sbb
or
jmp
dec
jae
sbb
push
add
sbb
jae
ret
or
add
xchg
pop
ins
jo
xrelease
dec
sbb
callw
jo
in
cs
pop
ins
jo
in
pop
jmp
jae
sbb
add
dec
sbb
jae
sbb
add
nop
pop
ins
jb
shr
and
test
jmp
sbb
sbb
sbb
sbb
add
dec
sbb
jno
jb
sbb
dec
and
ins
ror
add
dec
sbb
push
ins
sbb
pop
stc
pop
dec
call
dec
in
cs
pop
ins
jo
in
jp
pop
ins
jo
jno
jo
jno
jb
sbb
dec
and
mov
dec
jae
ror
add
dec
sbb
push
ins
sbb
xor
pop
dec
jno
in
das
repz
dec
jno
in
jnp
pop
dec
jno
jo
jno
jo
jae
sbb
dec
add
xchg
pop
ins
jb
shr
and
outs
sbb
push
dec
sbb
cmp
pop
ins
jo
in
cs
pop
ins
jo
in
pop
jmp
jae
sbb
add
dec
sbb
jae
sbb
dec
add
nop
pop
ins
jb
ret
and
test
push
sbb
mov
lahf
in
mov
fwait
std
rcr
mov
mov
mov
xor
cmp
sbb
movs
imul
std
rcr
mov
jb
sbb
sbb
sbb
sbb
dec
sbb
in
adc
(bad)
cwde
xchg
in
lahf
std
sbb
push
sbb
repz
sbb
fstp
repz
dec
sbb
jg
sbb
sbb
xchg
in
scas
xchg
sub
rcr
pop
mov
dec
loope
mov
xchg
outs
pop
jae
scas
or
add
dec
sbb
repnz
je
adc
pop
pop
and
xchg
outs
mov
ds
or
add
nop
pop
ins
in
pop
xchg
outs
inc
repz
mov
out
ficom
sub
inc
fistp
cmp
pop
push
push
les
dec
mov
jl
je
sbb
sbb
repz
push
xchg
xchg
sub
inc
movs
fstp
mov
dec
dec
cmp
jmp
jmp
ins
sbb
mov
jmp
dec
mov
repz
push
dec
sbb
adc
mov
inc
xchg
call
shr
dec
in
in
repz
add
in
pusha
jmp
fmul
xchg
sbb
add
stc
pop
ins
xchg
int3
sbb
add
ins
call
cdq
stos
or
loope
dec
in
in
rep
add
in
addr16
sbb
and
fstp
xchg
jmp
dec
mov
xchg
pushf
sbb
in
outs
pop
jae
stos
or
loope
dec
in
in
repz
addr16
sbb
and
pop
dec
xchg
jmp
dec
mov
fwait
adc
dec
outs
jge
sub
sahf
ins
in
in
bnd
xchg
adc
add
clc
pop
ins
xchg
int3
sbb
xchg
pop
sbb
xor
inc
outs
jge
jmp
cs
sahf
ins
in
in
repnz
xchg
adc
add
clc
pop
ins
xchg
int3
sbb
dec
pop
sbb
in
outs
pop
jae
test
sbb
lahf
dec
in
in
repz
or
mov
sbb
and
ficomp
xchg
jmp
dec
mov
fwait
adc
inc
outs
jge
jo
cs
sahf
ins
in
in
repnz
or
sbb
jmp
cld
rcr
fmul
xchg
adc
or
sti
pop
ins
xchg
int3
sbb
neg
ins
jo
jno
jb
ret
and
pop
dec
xchg
jmp
dec
and
repnz
dec
repz
in
and
stos
sbb
pop
repz
dec
repz
mov
add
outs
adc
add
fild
in
mov
mov
stos
rep
in
in
inc
movs
fmul
cmp
ret
movs
scas
pop
dec
jecxz
loop
fsub
in
pop
repz
sbb
dec
mov
cwde
test
inc
fistp
adc
sbb
repnz
inc
aaa
inc
mov
ins
dec
sar
div
ins
sbb
dec
cmp
in
sbb
sbb
hlt
push
ins
sbb
imul
idiv
xor
dec
rep
add
aad
dec
sbb
loop
(bad)
mov
cmps
lahf
loop
in
outs
pop
jae
test
sbb
lahf
movs
in
xchg
in
repz
cmovns
in
cmps
mov
outs
jge
(bad)
les
cmp
lods
push
ins
sbb
cmps
lahf
loop
in
outs
pop
jae
test
sbb
lahf
movs
in
xchg
in
repz
cmovns
aam
pop
sbb
xchg
jmp
xchg
(bad)
fwait
shr
mov
xchg
push
cmp
add
cli
pop
ins
xchg
int3
neg
mov
hlt
call
sbb
and
fistp
xchg
jmp
dec
mov
fwait
shr
mov
xchg
sbb
or
cli
pop
ins
xchg
int3
neg
ja
sbb
call
sbb
and
dec
xchg
jmp
dec
mov
xchg
pushf
sbb
call
sbb
and
pop
dec
xchg
jmp
dec
mov
fwait
shr
mov
xchg
adc
add
cli
pop
ins
xchg
int3
neg
add
call
sbb
and
jmp
dec
mov
fwait
shr
mov
xchg
adc
add
cli
pop
ins
xchg
int3
neg
call
ins
xchg
mov
sti
fwait
in
xchg
stos
call
sbb
and
fistp
xchg
jmp
dec
mov
fwait
shr
mov
xchg
pop
cmp
add
std
pop
ins
xchg
int3
neg
mov
hlt
call
sbb
and
fcomp
xchg
jmp
dec
mov
jae
mov
movs
in
xchg
in
repz
mov
in
mov
in
xchg
in
fld
jmp
test
and
cwde
test
rcr
cmps
mov
outs
popa
cdq
hlt
repz
in
sbb
jb
ins
sbb
cmc
in
adc
in
mov
in
xchg
in
fld
rcr
shl
add
jmp
fcom
xchg
int3
not
int3
shr
repnz
sbb
in
cmps
mov
xchg
in
adc
ror
ins
call
arpl
leave
cmps
xchg
out
in
adc
dec
fucomp
in
in
sbb
push
pop
sbb
mov
mov
stos
xchg
int3
jecxz
in
dec
add
nop
pop
ins
xchg
int3
out
in
dec
test
lea
out
cmps
mov
xchg
in
outs
inc
repnz
ins
sbb
fdivr
add
dec
in
mov
ficom
retf
stos
pop
jb
xchg
loop
in
popf
add
es
or
outs
outs
jle
cld
mov
nop
pop
ins
xchg
int3
out
in
dec
test
push
sbb
xor
or
add
nop
pop
ins
xchg
int3
out
in
dec
test
pop
sbb
add
sbb
jmp
dec
mov
mov
fwait
cld
rcr
fadd
sahf
nop
loop
in
jb
ret
les
cmp
cmc
or
sbb
sbb
out
in
dec
mov
cwde
test
les
cmp
pop
push
ins
sbb
sahf
nop
out
in
fimul
loope
mov
xchg
in
jae
ret
loope
mov
xchg
in
repz
or
pop
jno
xchg
int3
out
in
dec
test
dec
jae
ret
loope
mov
xchg
in
repz
xchg
adc
dec
xchg
jmp
cdq
mov
cmp
xchg
or
jmp
xchg
mov
retf
fwait
in
xchg
stos
cdq
hlt
jecxz
in
adc
jge
ins
sbb
in
mov
pop
ins
jb
ret
cs
sahf
nop
loop
in
repnz
or
sbb
fistp
test
nop
in
in
bnd
ins
sbb
sahf
nop
in
in
bnd
ins
sbb
sahf
mov
cmp
sahf
mov
cmps
dec
out
in
xor
or
sahf
mov
sahf
dec
out
in
sbb
in
mov
out
cmps
popf
in
xchg
in
ins
mov
xchg
int3
xlat
fwait
in
xchg
stos
in
jecxz
in
xchg
jmp
dec
and
mov
dec
xchg
jmp
dec
mov
cwde
test
les
cmp
lea
ins
sbb
sahf
movs
in
mov
loope
mov
xchg
in
repz
dec
sbb
cmps
sub
imul
jno
repnz
sahf
cwde
loop
in
in
loop
ins
sbb
sahf
nop
loop
in
in
out
xchg
in
repz
dec
sbb
lahf
mov
xchg
in
repz
dec
sbb
cmps
mov
xchg
in
nop
shr
mov
xchg
xchg
xor
dec
jge
dec
xchg
jmp
dec
and
xchg
scas
mov
stc
push
pop
dec
jno
jo
repz
cmp
popf
or
sahf
nop
out
in
dec
mov
and
in
jecxz
in
cdq
lea
in
inc
(bad)
inc
out
in
scas
and
in
inc
pop
sbb
xor
sbb
sub
push
sbb
mov
inc
xor
fldcw
sbb
mov
mov
dec
cmp
mov
mov
xchg
xchg
scas
jb
stos
sbb
sbb
dec
add
repnz
enter
fidivr
or
sbb
enter
dec
sbb
pop
inc
mov
stos
pop
sbb
ins
sbb
ret
fwait
stc
rcr
fldenv
dec
icebp
pop
dec
repz
or
add
dec
sbb
mov
jge
dec
repz
or
cmp
imul
scas
cmp
dec
sbb
stos
and
dec
xchg
outs
inc
repz
sbb
mov
pop
dec
xchg
jmp
dec
mov
cwde
test
je
xchg
sbb
jmp
cdq
dec
outs
fcomp
adc
sbb
sbb
fldcw
mov
mov
xchg
mov
xchg
mov
lods
jecxz
xor
(bad)
fsubr
mov
int3
test
in
sbb
sbb
fisub
repz
dec
in
mov
ficom
retf
stos
cdq
(bad)
jp
call
movs
in
call
out
cli
not
fcmove
fcom
outs
dec
sbb
in
repz
push
dec
sbb
fdivr
fucomp
mov
in
sub
in
xchg
int3
mov
add
call
ret
cs
sahf
repz
(bad)
sbb
call
push
sbb
sahf
repz
stos
and
dec
test
sbb
test
pop
mov
xchg
xchg
int3
mov
test
mov
xchg
cdq
lea
push
sbb
sahf
repz
or
sbb
mov
jae
ret
add
call
ret
sbb
pop
repz
dec
repz
or
loope
sub
xchg
in
cs
cmp
ins
jmp
xchg
pop
ins
jb
mov
mov
dec
jae
mov
pop
sbb
xor
cmps
in
xchg
jl
mov
sbb
lahf
jl
jae
ret
add
call
ret
sbb
cmp
pop
dec
repz
loope
stos
not
int3
or
aad
dec
sbb
mov
ins
jb
mov
mov
dec
jae
test
sbb
lea
cmps
div
xchg
in
cs
int3
or
aad
dec
sbb
xchg
mov
xchg
xchg
scas
jo
jno
jo
jno
jo
jae
sbb
add
xlat
pop
ins
repnz
sbb
pop
fdiv
jno
jo
dec
test
or
xchg
adc
icebp
dec
loope
cld
hlt
xchg
in
repz
sbb
xchg
cld
hlt
xchg
in
rcl
sbb
push
sbb
outs
aam
sbb
xchg
dec
mov
fdiv
xchg
adc
sbb
sbb
pop
icebp
dec
push
sbb
jmp
pop
dec
in
scas
mov
call
or
xchg
adc
icebp
dec
loope
cld
hlt
xchg
in
repz
or
loope
cld
hlt
xchg
in
rcl
sbb
push
sbb
outs
aam
sbb
xchg
dec
mov
fdiv
int
ins
sbb
sbb
pop
icebp
dec
push
sbb
jmp
pop
dec
in
scas
mov
in
scas
mov
mov
fwait
stc
rcr
lahf
stc
not
pop
test
cs
pop
mov
rcr
dec
loopne
pop
dec
xchg
sub
and
adc
dec
jno
repnz
adc
sbb
pop
mov
sbb
sbb
or
in
icebp
popf
sbb
pop
mov
dec
sbb
repz
dec
sbb
pop
xchg
fsubr
cmps
dec
sbb
ret
inc
ret
stos
pop
lea
ins
sbb
sub
dec
sbb
pop
ror
mov
dec
jno
in
das
repz
dec
jno
jo
jno
jo
jno
jo
jae
sbb
pop
ins
jb
shr
and
test
pop
sbb
test
pop
dec
jno
jo
repz
sbb
sbb
cwde
test
mov
es
sbb
push
xor
dec
repz
dec
sbb
xchg
pop
ins
dec
mov
xchg
jmp
fwait
mov
repz
push
dec
sbb
sbb
in
mov
in
(bad)
mov
in
pop
ins
sbb
mov
xchg
xchg
scas
xchg
int3
mov
loope
in
xchg
in
jae
scas
or
add
xchg
pop
ins
jb
scas
sbb
sbb
repz
mov
out
ficom
lods
outs
dec
cwde
dec
jbe
pop
ins
sbb
sbb
dec
sbb
xchg
xor
cmps
in
dec
and
push
sbb
neg
dec
jno
jo
repz
sbb
rcl
sbb
sahf
(bad)
hlt
mov
cmp
dec
jno
jb
push
push
sbb
dec
test
sbb
jae
sbb
push
sbb
sbb
push
xchg
sub
sbb
(bad)
adc
sbb
fnstenv
sbb
pop
mov
lods
bound
dec
jno
jo
jno
xchg
or
cmp
sbb
fistp
iret
push
inc
aaa
ror
(bad)
in
div
ins
sbb
dec
cmp
enter
dec
sbb
pop
inc
cwde
xchg
or
cld
sbb
adc
jecxz
adc
dec
repnz
adc
push
or
ins
adc
dec
es
dec
sbb
add
sbb
loopne
inc
sbb
sbb
lahf
adc
dec
sbb
cdq
je
fcomp
sbb
popf
sbb
out
mov
dec
in
jb
pop
ins
bnd
xchg
in
sahf
and
in
loop
jecxz
frstor
div
div
xchg
in
fistp
repz
in
xchg
jmp
dec
mov
test
mov
test
inc
sbb
adc
lahf
dec
sbb
rcl
das
or
in
pusha
sbb
lods
outs
es
jmp
xor
ret
xchg
in
cwde
test
ret
out
in
pop
retf
sbb
mov
inc
lahf
xchg
out
in
repz
in
xor
(bad)
mov
xchg
and
nop
jmp
xor
(bad)
xchg
in
dec
out
test
sahf
mov
mov
cmp
dec
jno
in
pop
int3
pop
dec
repz
pop
dec
sbb
in
gs
sbb
or
int
imul
mov
iret
jb
pop
ins
fwait
mov
cwde
dec
jle
pop
ins
sbb
es
or
ins
outs
dec
dec
test
mov
es
or
ins
adc
dec
in
jb
pop
ins
repnz
xchg
in
repnz
sbb
dec
jecxz
fucomp
sbb
pop
dec
and
adc
or
mov
repnz
sbb
(bad)
pop
ins
and
sbb
mov
fs
push
ins
sbb
add
dec
in
mov
mov
stos
repz
ins
sbb
pop
js
int3
jecxz
in
call
dec
mov
pop
dec
outs
sub
dec
outs
int
dec
outs
push
and
pop
dec
outs
pop
and
pop
dec
outs
inc
and
pop
dec
outs
dec
and
pop
dec
outs
jo
dec
mov
js
dec
pop
repz
dec
outs
pusha
and
pop
dec
adc
ror
jo
in
or
nop
jmp
and
pop
dec
outs
jl
dec
mov
and
pop
dec
outs
popa
jb
or
outs
jl
icebp
pop
ins
sbb
in
in
in
or
mov
fwait
std
rcr
(bad)
mov
ins
cdq
in
sti
xchg
in
sbb
lahf
xchg
out
in
repz
dec
sbb
lahf
mov
fsubr
add
test
ins
xchg
mov
xchg
xchg
mov
sbb
loope
dec
in
in
in
repnz
ins
repnz
adc
cmps
ins
in
in
outs
imul
ret
push
sbb
in
repnz
ins
repnz
adc
in
imul
mov
stos
nop
int3
sbb
out
mov
xchg
fmul
in
xchg
in
sbb
daa
cmp
jmp
jb
sbb
sahf
ins
in
in
in
lahf
int
dec
repz
in
in
rcl
sbb
out
loop
imul
or
loope
dec
in
in
repz
mov
es
in
sbb
cmp
sbb
sbb
sub
adc
call
outs
inc
sbb
push
ins
sbb
popf
push
sbb
mov
mov
stos
xchg
int3
sbb
lahf
mov
jae
ret
loope
mov
repz
push
dec
sbb
ficomp
xchg
sbb
loope
dec
in
in
in
push
fcomp
repnz
adc
cmps
ins
in
in
outs
imul
ret
push
sbb
in
push
fcomp
repnz
adc
in
push
sbb
in
call
xchg
or
sbb
dec
repz
adc
xchg
das
push
mov
mov
repnz
push
dec
sbb
in
lock
adc
mov
out
dec
sbb
dec
daa
push
imul
int
sbb
sbb
in
push
fcomp
repnz
ins
sbb
fwait
jmp
sbb
sahf
ins
in
in
or
mov
in
les
cmp
int3
out
xchg
in
dec
add
xchg
pop
ins
xchg
int3
out
xchg
in
dec
test
lea
add
dec
sbb
sbb
das
leave
mov
sbb
rcr
mov
xchg
sbb
push
sbb
sbb
dec
repz
adc
xchg
das
leave
mov
sbb
gs
dec
sbb
cmc
inc
jae
sbb
sahf
ins
in
in
xchg
int3
out
xchg
in
dec
add
xchg
pop
ins
xchg
int3
out
xchg
in
dec
test
inc
sbb
or
int3
sbb
das
test
sbb
rcr
mov
xchg
sbb
push
sbb
sbb
sahf
pop
ins
jo
rep
adc
xchg
das
test
sbb
int
dec
sbb
loop
jecxz
ffree
sahf
ins
in
in
xchg
int3
out
xchg
in
dec
add
sahf
pop
ins
xchg
int3
out
xchg
in
dec
test
inc
sbb
or
int3
sbb
das
popa
test
sbb
rcr
mov
xchg
sbb
push
sbb
sbb
sahf
pop
ins
jo
repz
dec
sbb
sbb
repnz
sbb
loope
dec
in
in
rcl
sbb
out
loop
outs
dec
jo
jno
jb
int3
sbb
sbb
jl
repz
dec
repz
dec
sbb
fmul
in
in
sbb
in
in
nop
int
ins
in
in
sub
cmp
sbb
sbb
sahf
pop
ins
jo
repz
adc
xchg
das
popa
test
sbb
test
lahf
mov
xchg
in
xchg
jmp
es
imul
xchg
mov
xchg
dec
les
cmp
fs
cs
sahf
cdq
out
in
repnz
adc
fistp
sbb
sahf
ins
in
in
in
cmp
pop
dec
repz
dec
in
in
outs
dec
jo
jno
jb
int3
sbb
sbb
jl
repz
dec
repz
dec
sbb
in
in
sbb
in
in
nop
int
ins
in
in
sub
cmp
sbb
sbb
lahf
pop
ins
jo
repz
imul
sbb
in
lahf
mov
xchg
in
xchg
loope
mov
xchg
cdq
and
ins
outs
mov
fimul
jo
push
mov
jecxz
loop
fsub
lahf
dec
in
in
xchg
jmp
dec
and
mov
dec
xchg
jmp
dec
mov
cwde
test
icebp
movs
xor
dec
in
mov
mov
jmp
xchg
mov
jo
jno
jo
jno
jb
sbb
pop
repz
dec
repz
pop
dec
sbb
lahf
mov
sbb
sbb
sbb
in
mov
push
push
pop
ins
sbb
loope
jns
sub
retf
pop
leave
daa
ins
sbb
in
and
loope
mov
dec
add
rcr
in
out
xchg
in
repz
dec
sbb
sbb
sahf
pushf
out
in
jo
jae
cli
or
xchg
scas
mov
movs
imul
mov
xchg
cdq
and
ins
outs
mov
ins
xchg
fsubr
xchg
in
dec
cmp
aam
xchg
in
dec
xchg
scas
mov
mov
dec
jno
xchg
int3
jmp
in
dec
push
sbb
jmp
pop
dec
in
out
mov
xchg
repnz
ins
sbb
in
or
ins
in
pop
int3
pop
dec
repz
sbb
sbb
sbb
push
and
push
sbb
sbb
jae
mov
sbb
int3
out
xchg
in
xchg
xchg
in
scas
xchg
jmp
xchg
int3
call
jo
jno
jo
in
out
mov
xchg
repnz
pop
ins
sbb
push
cld
mov
mov
in
es
sbb
jecxz
fadd
sbb
mov
and
fldz
mov
xchg
repnz
sbb
lahf
mov
jno
jb
int
sbb
in
ret
dec
sbb
out
xchg
in
repz
sbb
stos
pop
and
sbb
jecxz
loop
fadd
push
and
add
std
pop
ins
jb
ret
sbb
dec
fcomp
jae
sbb
test
add
pop
mov
test
sbb
loope
ins
sbb
out
in
fadd
in
or
adc
inc
xor
fnstcw
xchg
mov
push
nop
sbb
idiv
mov
xchg
xchg
sbb
pop
push
sbb
ins
adc
dec
cwde
adc
inc
adc
fisttp
ins
and
pop
dec
outs
addr16
repz
pop
dec
repz
dec
sbb
loop
cld
in
mov
stos
and
pop
dec
outs
addr16
fwait
int
dec
repz
push
dec
sbb
leave
mov
xchg
das
test
sbb
pop
ss
pop
ins
outs
inc
in
push
fcomp
repnz
jecxz
std
rcr
mov
pop
push
fcomp
outs
inc
in
xor
pop
ins
repnz
ins
sbb
inc
test
sbb
adc
sbb
jl
repz
dec
outs
js
je
fcomp
sbb
adc
sbb
jl
repz
dec
outs
jae
je
fcomp
sbb
or
cs
out
dec
sbb
xchg
xchg
in
scas
xchg
sub
rcr
shl
xchg
sbb
sbb
push
dec
(bad)
das
leave
mov
out
jne
sub
test
sbb
sbb
push
dec
test
sbb
cmc
test
sbb
jo
or
sbb
push
ins
mov
sbb
popa
test
pop
xor
dec
test
sbb
sbb
push
inc
or
push
das
int
sbb
sub
or
or
repnz
sbb
ins
sbb
inc
aaa
ror
ds
dec
sbb
ds
jmp
dec
sbb
ds
or
cld
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
mov
repz
dec
sbb
(bad)
and
outs
push
dec
xchg
mov
cmp
sbb
ins
sbb
fbld
out
fidivr
lock
pop
leave
and
outs
mov
jo
inc
movs
imul
outs
imul
neg
loop
outs
lahf
jo
rep
sbb
push
sbb
jno
dec
mov
inc
movs
fst
call
dec
or
pop
dec
daa
dec
or
lock
fmulp
pop
dec
in
sbb
dec
dec
adc
aad
mov
xchg
popf
mov
ret
xchg
and
adc
nop
adc
dec
call
out
ins
pop
scas
adc
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
sbb
sbb
mov
ins
.byte
