mov
or
pop
mov
out
add
push
add
dec
add
xchg
cdq
fnstcw
ror
or
pop
call
pop
mov
not
scas
das
xchg
pop
mov
push
add
fnstenv
jp
pop
mov
(bad)
xor
sahf
jmp
add
fdecstp
pushf
xchg
pop
(bad)
clc
ins
push
cmp
jns
out
mov
xchg
(bad)
int
shr
(bad)
shr
les
mov
dec
retf
das
add
and
je
mov
in
outs
lsl
adc
fbld
stc
push
lahf
rcr
xor
jmp
xchg
pop
mov
pop
out
das
xchg
ror
xlat
sbb
call
sbb
ins
outs
sar
and
and
stos
cmp
das
pop
push
cld
lods
out
aad
das
out
fdivr
xor
das
sbb
pop
and
mov
outs
cmp
ror
sub
bound
ins
xchg
or
jle
dec
mov
xchg
xlat
mov
and
mov
test
cmp
shl
jbe
add
jnp
pop
xlat
jno
pop
xchg
push
mov
daa
shl
jmp
xlat
loope
les
(bad)
in
ins
movs
jne
push
push
pop
and
ror
rol
aad
movs
jmp
sar
shr
dec
(bad)
inc
xor
jl
iret
je
ins
(bad)
clc
pop
dec
sub
pop
mov
clc
push
bound
mov
jnp
das
push
pop
call
pop
loopne
jp
imul
xchg
(bad)
fwait
call
xchg
mov
lods
push
inc
and
mov
mov
mov
adc
cmp
mov
push
xchg
pop
or
xchg
loop
das
xchg
pop
xlat
jo
add
ret
iret
cdq
or
mov
das
lea
jns
sub
and
mov
movs
push
sub
das
xchg
mov
dec
xor
das
xchg
lsl
clc
movs
loop
and
mov
dec
retf
add
xchg
pop
mov
adc
add
or
mov
or
mov
mov
mov
xor
lahf
rcr
or
sbb
das
jp
icebp
das
xchg
movs
mov
shl
movs
mov
cmps
mov
cmp
mov
pop
xchg
pop
or
mov
cmps
fbld
mov
pop
cdq
out
mov
pop
fbld
xchg
pop
bound
pop
mov
xor
cmps
push
jb
push
xor
inc
xchg
xor
scas
cli
jp
outs
xchg
mov
pop
xchg
pop
add
adc
dec
(bad)
cld
shl
jne
pandn
movs
jne
push
xor
shr
loop
ficomp
mov
ins
or
(bad)
push
sub
outs
pop
xchg
pop
mov
mov
push
outs
jb
ins
movs
fcmovb
(bad)
pop
mov
adc
mov
out
mov
xchg
mov
mov
je
sbb
aas
(bad)
movs
jne
push
imul
add
(bad)
shr
jle
fdivr
jo
mov
push
dec
mov
xlat
cmps
fiadd
xor
das
clc
pop
loopne
ins
das
xchg
out
bound
fstp
clc
pop
mov
fs
push
mov
shl
inc
jne
xchg
jne
and
das
xchg
ror
cmps
bound
pop
mov
fs
push
mov
lods
out
mov
mov
xchg
pop
popa
and
mov
jle
push
imul
add
in
(bad)
shr
les
cdq
lods
jge
pop
push
or
ss
pop
mov
movs
jmp
ins
das
add
and
(bad)
pop
mov
pop
mov
xchg
inc
xchg
movs
(bad)
aas
ins
das
jbe
mov
mov
sbb
push
xchg
pop
sbb
pop
mov
out
shl
jb
push
add
add
adc
add
loope
pop
pop
adc
mul
pop
(bad)
fwait
rcr
dec
pop
or
pop
popa
inc
adc
jbe
sbb
jne
out
enter
popa
ins
sbb
jb
push
fbld
popf
in
sub
stos
mov
sub
pop
jbe
arpl
inc
rcl
fidiv
push
xlat
cmps
(bad)
aas
ins
pop
jle
xlat
dec
mov
data16
(bad)
movs
xlat
mov
jge
sbb
jp
push
sbb
jne
adc
das
out
mov
loopne
jne
push
iret
daa
sbb
or
xchg
pop
call
stos
pop
jb
adc
jne
xchg
pop
aad
leave
xchg
dec
jp
mov
mov
mov
or
movs
out
add
popf
psrlq
jne
xchg
das
mov
shr
dec
cs
rcr
shr
jne
xchg
cs
xchg
ror
daa
sbb
or
xchg
pop
call
stos
pushf
cld
es
fisttp
les
jb
(bad)
dec
mov
push
pop
mov
ins
movs
int
dec
es
movs
pop
cmps
jne
ins
ror
push
rcr
shr
jne
dec
jae
jmp
ins
movs
mov
ins
add
fbld
(bad)
and
or
jp
je
iret
rcr
pushf
mov
fs
cld
fistp
call
mov
mov
cmps
push
(bad)
sbb
imul
inc
mov
add
(bad)
shr
ret
js
pop
xchg
xlat
cmps
or
mul
iret
shl
stos
std
das
xchg
shl
daa
sub
add
gs
aad
fwait
jae
mov
ror
push
cmp
cmp
mov
out
enter
sub
inc
mov
cwde
add
add
fbld
(bad)
aas
sbb
sahf
call
imul
push
sbb
pop
sbb
movs
xlat
push
test
mov
push
xor
and
xchg
imul
dec
int
dec
es
xlat
cmps
add
mov
imul
add
(bad)
shr
les
inc
sub
or
xlat
xchg
mov
(bad)
fwait
rcr
pop
sahf
xor
into
rcr
(bad)
pop
cmps
jne
sbb
jbe
out
push
int
cli
add
ins
xchg
or
pop
outs
movs
jne
sbb
jbe
lds
cmp
lods
push
jle
jno
cdq
fbld
sbb
xchg
sbb
jne
call
jmp
cli
movs
xchg
das
xchg
or
shl
push
loopne
clc
pop
bound
out
mov
push
pushf
mov
sar
int3
add
in
(bad)
shr
ret
js
das
adc
test
xchg
lods
ins
cmps
xlat
cmps
add
adc
mov
pop
mov
sti
push
mov
pop
fisub
sbb
shl
pop
add
ins
or
das
gs
dec
movs
xchg
movs
mov
daa
jp
sti
das
xchg
add
fbld
ror
xchg
mov
ret
das
xchg
fldcw
clc
pop
(bad)
hlt
loop
mov
cmp
das
xchg
ror
sbb
das
gs
dec
push
push
push
push
and
call
les
lahf
jae
mov
xor
(bad)
adc
mov
sbb
test
fwait
call
xchg
or
(bad)
jae
mov
movs
sahf
cmp
cdq
or
fbld
das
mov
(bad)
dec
cmps
xlat
mov
mov
jns
mov
or
out
inc
mov
mov
xchg
dec
jp
mov
mov
je
mov
ror
sbb
or
out
out
enter
mov
out
or
jmp
fwait
rcr
push
push
push
jmp
xlat
push
sub
sbb
cmps
pop
xor
ror
scas
(bad)
sub
pop
(bad)
aaa
xor
sub
or
pop
ins
or
cmps
dec
jae
cmps
push
fldcw
das
cli
movs
jne
xchg
xlat
bswap
ins
movs
jne
ins
das
xchg
pop
sub
fdiv
mov
ins
or
imul
mov
fldcw
das
jnp
mov
xchg
rcl
dec
ror
push
movs
cmps
das
xchg
xlat
iret
fcmovnb
ror
daa
sbb
mov
bound
mov
iret
rcl
daa
jle
popf
fisub
push
outs
pop
test
adc
jb
adc
fwait
rcr
rcl
cdq
fldenv
xchg
pop
jne
out
out
enter
jle
xchg
es
xchg
sub
lods
mov
ds
xchg
pop
sub
sbb
idiv
pop
bound
out
mov
and
xlat
mov
jb
xlat
mov
push
sbb
mov
adc
xchg
xchg
pop
mov
popa
inc
push
call
rol
jp
push
(bad)
mov
das
fild
stc
enter
imul
iret
ffreep
shl
das
xchg
pop
add
push
dec
pop
movs
(bad)
loope
mov
ins
or
mov
sbb
mov
sbb
jbe
push
das
lahf
call
xchg
movs
jne
xchg
ror
and
movs
(bad)
push
bound
pop
mov
ins
ror
scas
(bad)
sub
pop
(bad)
and
(bad)
sub
or
pop
ins
or
rcl
mov
iret
xlat
popf
fsub
push
stc
enter
push
fdiv
ud0
jne
push
add
fbld
ror
sbb
mov
xlat
mov
aas
jbe
sbb
sub
ror
pop
sbb
das
sbb
add
jns
add
mov
dec
dec
and
adc
mov
push
pop
imul
enter
stc
das
xchg
(bad)
adc
dec
sub
clc
enter
push
fsubr
sub
push
or
pop
add
mov
daa
jbe
out
sub
sbb
das
jns
add
gs
dec
lods
mul
xchg
es
mov
popa
das
mov
adc
daa
sbb
adc
daa
mov
imul
sbb
push
fidiv
push
ins
movs
jne
mul
mov
movs
jmp
cli
push
outs
xchg
mov
inc
xchg
pop
popa
pop
sbb
loopne
clc
pop
loopne
clc
pop
loopne
cli
pop
mov
shl
mov
std
pop
mov
clc
pop
loopne
ret
inc
xchg
pop
add
ror
pop
movs
retf
pop
mov
ror
xchg
xlat
(bad)
fcmovnb
or
call
das
xchg
xor
inc
nop
xor
rcr
pop
push
cs
xchg
pop
or
mov
das
ins
das
jb
test
mov
int
shl
push
lsl
sub
mov
xchg
pop
fnstcw
loope
push
jae
or
inc
mov
sbb
dec
stos
outs
movs
je
xchg
xor
rcr
test
pop
mov
ins
xlat
por
jne
jp
jno
ins
add
daa
xchg
pop
add
xchg
add
clc
pop
bound
pop
mov
and
mov
sbb
inc
shr
idiv
out
inc
shr
stos
push
movs
je
ret
shr
or
sahf
fnstenv
das
out
or
call
fild
ins
movs
fimul
ret
rol
adc
push
push
dec
pop
cmp
popa
push
sahf
pop
mov
ins
or
dec
jae
mov
or
pop
ins
dec
mov
xchg
pop
mov
popf
fbstp
not
fisttp
ins
movs
fimul
ret
rol
and
push
push
dec
and
pop
sub
xor
(bad)
rcr
call
jo
ins
(bad)
sbb
jne
ins
ror
jecxz
movs
jne
(bad)
cli
enter
adc
pop
pop
stos
sub
je
ret
mov
pop
fisub
pop
jbe
push
push
setb
out
shr
and
iret
mov
xchg
fidiv
shr
jne
popf
fisubr
sub
add
ins
xchg
xlat
psrld
jne
jp
jge
ins
(bad)
sbb
jne
ins
loop
inc
xchg
pop
jge
sbb
shr
in
popf
in
setge
jne
ins
movs
mov
popf
fidivr
pop
call
fisub
ins
or
jg
sbb
das
adc
cmp
ins
movs
dec
sub
pop
or
xchg
fnstenv
das
popf
fisttp
pop
add
xchg
add
clc
pop
loop
jb
mov
cli
retf
das
jp
jl
ins
(bad)
scas
movs
jne
xchg
lods
inc
xchg
xor
pop
pop
xchg
outs
movs
je
lds
or
sahf
addr16
xchg
pop
(bad)
and
ins
movs
mov
xchg
pop
loopne
cli
fwait
push
xchg
xor
(bad)
rcr
popa
movs
jne
push
push
mov
ins
pop
mov
xor
das
pop
out
shr
(bad)
mov
sahf
xchg
ins
movs
mov
out
dec
stos
movs
je
xchg
pop
mov
clc
pop
loop
jb
mov
cli
retf
das
jp
jl
ins
(bad)
scas
movs
jne
xchg
lods
inc
xchg
xor
iret
rcr
xchg
outs
movs
je
lds
or
sahf
addr16
xchg
pop
(bad)
and
ins
movs
mov
xchg
pop
loopne
cli
stc
push
xchg
xor
(bad)
rcr
in
movs
jne
push
push
mov
ins
pop
mov
xor
das
pop
out
shr
(bad)
aas
scas
jne
adc
mov
out
dec
stos
movs
je
xchg
pop
mov
clc
pop
loop
jb
mov
cli
retf
das
jp
jg
ins
(bad)
scas
movs
jne
xchg
cs
out
jne
ins
pop
mov
xchg
loop
dec
xchg
pop
jge
sbb
and
ins
movs
add
clc
pop
loop
jb
mov
cli
retf
das
jp
jg
ins
(bad)
scas
movs
jne
xchg
cs
out
jne
ins
pop
mov
xchg
xor
das
cli
or
outs
xchg
mov
fisubr
or
sahf
addr16
xchg
pop
(bad)
imul
loop
jb
mov
ins
or
jne
push
push
mov
ins
pop
mov
xor
das
pop
out
shr
(bad)
scas
jne
adc
mov
out
dec
stos
movs
je
xchg
pop
mov
adc
shr
pop
test
das
pop
fbstp
ins
movs
fcmovb
push
mov
fwait
jmp
xchg
pop
sub
sbb
das
adc
dec
stos
outs
movs
je
xchg
mov
sub
mov
je
sbb
je
ret
rep
movs
jne
sbb
js
ror
rcr
pop
mov
pop
fbstp
shr
movs
pop
xor
or
pop
ins
or
add
xchg
add
adc
jbe
popf
fbstp
xchg
pop
or
xchg
rcl
dec
ror
aaa
mov
ins
pop
or
xchg
push
add
xchg
pop
mov
xchg
cmp
stos
xor
dec
stos
cmp
mov
pop
fistp
shr
mov
ins
or
stos
dec
movs
je
ret
rol
inc
or
inc
push
mov
pop
fistp
ins
movs
fiadd
mov
adc
ins
movs
fisub
pop
mov
sbb
jbe
push
push
movlps
mov
ins
or
stos
inc
movs
je
ret
rol
ror
rcl
cdq
out
inc
xchg
pop
sub
fisttp
stos
jp
je
ret
jmp
jne
sbb
js
ror
rcr
in
das
xchg
xlat
xsaves
jne
sbb
push
shr
movs
stos
movs
fst
sbb
jbe
dec
pop
push
cmps
push
fincstp
rcl
pop
mov
xchg
xlat
bswap
ins
movs
jne
sbb
(bad)
shr
movs
stos
movs
fisttp
sbb
jbe
push
push
cmova
pop
xchg
xchg
fldcw
fild
jne
ins
out
jb
ins
movs
loop
xor
mov
ins
or
(bad)
pop
mov
movs
je
xchg
mov
sub
pop
loopne
jp
out
xchg
loop
and
fild
shr
in
ins
out
data16
stos
outs
movs
je
ret
iret
rcr
stos
outs
movs
je
ret
inc
xchg
pop
or
xchg
rcl
movs
je
sbb
adc
ins
movs
pop
stos
movs
je
ret
mov
jle
add
sub
das
xchg
test
jne
ins
fldenv
sbb
mov
aaa
shl
(bad)
ins
movs
jne
sbb
js
ror
rcr
and
outs
pop
test
adc
shr
mov
ins
or
scas
jae
mov
or
pop
ins
dec
mov
xchg
pop
mov
test
mov
fwait
call
pop
fbld
shr
movs
pop
div
ins
or
pop
ins
or
add
mov
daa
jbe
popf
fbstp
xchg
pop
or
xchg
mov
cs
pop
loopne
jp
loope
xchg
add
(bad)
sar
maxps
jne
xchg
ror
lahf
ins
movs
jne
pop
and
ins
xlat
bts
jne
pop
out
cli
shr
ret
adc
xchg
xchg
pop
mov
popa
inc
call
call
pop
jns
sbb
shr
movs
lods
movs
fstp
pop
jbe
dec
imul
fincstp
rcl
pop
mov
pop
pop
stos
sbb
cli
into
rcr
stos
push
movs
je
ret
rol
pop
add
push
dec
and
inc
mov
xchg
fnstenv
cmps
ins
movs
jne
popf
fiadd
stos
repnz
je
ret
shl
scas
jne
ins
ror
cmps
ins
movs
jne
sbb
js
ror
rcr
cmp
outs
pop
test
hlt
fnstenv
dec
ins
movs
jne
popf
fistp
xchg
pop
or
xchg
push
push
jmp
pop
cmp
ins
or
cli
movs
je
jp
jns
ins
(bad)
sbb
jne
ins
rcl
jno
emms
ins
cmps
jne
push
fidiv
dec
ins
cmps
jne
popf
fiadd
stos
bound
mov
clc
pop
jne
and
ja
ins
movs
fiadd
mov
ja
ins
movs
fcmovb
adc
mov
adc
push
cmps
push
xlat
pop
shr
jne
pop
movs
retf
pop
mov
ror
xlat
ins
movs
jne
daa
push
jne
ins
xlat
cmovle
jne
sbb
jb
ins
movs
pop
stos
xchg
cmps
jne
ins
or
sti
pop
mov
fbstp
ins
movs
fiadd
mov
ja
ins
movs
fcmovb
mov
mov
adc
push
cmps
push
fnstenv
cmps
ins
movs
jne
out
xor
(bad)
pop
mov
jno
(bad)
ins
movs
jne
push
ror
stos
ins
movs
jne
sbb
jns
movs
setg
jne
pop
bnd
ins
arpl
lahf
ins
movs
jne
adc
shr
jae
sbb
jns
ror
mov
jne
sbb
jns
fstp
fcomp
rcl
mov
shr
bswap
ins
movs
jne
pop
mov
shr
or
outs
movs
jne
das
stos
jne
ins
pop
jmp
push
fbstp
ins
movs
mov
or
pop
ins
or
lods
das
mov
ins
pop
(bad)
and
fistp
ins
movs
fisub
aam
das
xchg
lods
imul
das
mov
ins
pop
(bad)
and
fistp
ins
movs
fisub
fist
ins
movs
fisub
fist
ins
movs
fisub
cdq
fidivr
xchg
pop
add
ret
rol
push
arpl
movs
jne
int3
add
(bad)
shr
ins
xor
fwait
rcr
mov
sbb
das
xchg
or
cmps
mov
mov
xchg
fldenv
ror
jbe
(bad)
cmp
shl
retf
sbb
call
xchg
pop
loop
nop
pop
mov
lock
xchg
fisub
das
gs
outs
cmps
xlat
mov
test
ins
fnstenv
das
out
popa
add
jbe
ins
movs
jne
mov
iret
iret
xchg
pop
mov
sbb
push
sbb
(bad)
call
ret
or
push
fsubr
xchg
mov
call
ins
movs
aad
leave
retf
add
sub
xchg
pop
mov
vpunpcklbw
dec
add
mov
fidivr
ins
xchg
xor
or
pop
loopne
clc
pop
bound
push
or
mov
lsl
adc
xlat
daa
sub
leave
repz
pop
jge
sbb
jbe
push
movs
(bad)
pop
sbb
sub
sbb
ds
pop
or
mov
retf
das
xchg
fldcw
das
adc
mov
xchg
mov
outs
xchg
pop
mov
xchg
rol
pop
ror
xchg
push
adc
pop
mov
xchg
sar
sbb
outs
or
mov
and
retf
pop
sub
(bad)
hlt
sub
xchg
pop
mov
sbb
movs
scas
stos
add
enter
xchg
mov
pop
retf
pop
mov
ins
pop
(bad)
fwait
rcr
out
adc
pop
call
xlat
scas
mov
stos
(bad)
jnp
mov
xchg
fiadd
outs
fs
mov
pop
jne
das
xchg
lods
(bad)
outs
or
mov
out
sub
bndstx
outs
xchg
mov
rcl
rol
pop
ror
call
mov
pop
arpl
xchg
pop
mov
xchg
cs
xchg
lods
(bad)
aaa
or
pop
mov
das
xchg
(bad)
mov
mov
xchg
dec
sub
sbb
das
jnp
jne
ins
lods
(bad)
aaa
or
pop
mov
das
xchg
loop
xor
pop
jp
push
fiadd
sub
jne
ins
lods
(bad)
aaa
or
pop
mov
das
xchg
fisttp
in
pop
mov
xchg
push
sub
sbb
das
jnp
je
ins
lods
(bad)
aaa
or
pop
mov
das
xchg
rol
pop
ror
lahf
inc
adc
sub
retf
das
nop
pop
mov
jnp
je
ins
lods
(bad)
aaa
or
pop
mov
das
xchg
fstp
mov
mov
xchg
pop
dec
sub
ret
retf
das
nop
pop
mov
jnp
je
ins
movs
(bad)
pop
sbb
outs
xchg
(bad)
retf
scas
lahf
inc
adc
cs
pop
mov
xchg
pop
mov
rcr
out
xchg
add
adc
mov
pop
retf
pop
mov
xor
dec
sub
rcr
(bad)
xchg
pop
mov
xchg
pop
cmp
pop
mov
xchg
pop
mov
rcr
sahf
xchg
pop
mov
xchg
cs
xchg
(bad)
sub
xchg
rol
pop
ror
xchg
bound
mov
push
mov
cs
pop
or
mov
retf
das
mov
jnp
mov
mov
xor
sub
push
cmp
ret
das
fwait
call
xchg
movs
scas
stos
add
enter
mov
xchg
es
adc
mov
in
pusha
jne
pop
call
or
pusha
jne
out
enter
sub
bndstx
outs
xchg
mov
rcl
fisttp
mov
inc
adc
aas
mov
pop
mov
xlat
mov
out
ins
pop
(bad)
fwait
rcr
sub
push
push
out
xchg
pop
mov
xor
sub
rol
pop
ror
and
cli
mov
pop
scas
out
xchg
pop
mov
xchg
sub
ins
xchg
fldcw
sbb
jl
and
jge
push
pop
mov
popf
fimul
xchg
pop
or
sbb
sub
cmp
mov
dec
and
jge
adc
das
out
sub
sbb
outs
xchg
fnstenv
sub
gs
jmp
daa
jl
out
or
call
scas
out
lods
mov
fiadd
scas
sbb
add
aam
mov
popf
in
(bad)
retf
bndstx
push
(bad)
fst
lods
mov
(bad)
sub
jg
mov
mov
jp
sbb
mov
sbb
pop
or
mov
xchg
push
sbb
sti
cmp
retf
loopne
or
inc
dec
mov
adc
mov
mov
jp
sbb
mov
sbb
xchg
sbb
outs
xchg
sti
mov
rcr
sub
xor
sbb
sbb
imul
push
xor
ror
fistp
fwait
aam
pop
cdq
fbld
sub
fstp
mov
cs
xchg
xor
cwde
int
mov
rcr
(bad)
push
add
sub
shl
jne
iret
rcr
popf
loop
sub
mov
repz
xchg
stc
call
sbb
das
xchg
stc
jle
rcr
sub
mov
rcl
das
xchg
stc
mov
jno
sbb
das
xchg
stc
ror
xchg
mov
inc
in
(bad)
shr
jle
fnstcw
loope
sbb
pop
or
or
das
ins
pop
(bad)
fwait
rcr
stos
sub
mov
xchg
sub
popf
iret
(bad)
mov
das
sbb
or
pop
pop
push
ror
fist
jle
xchg
pop
mov
sub
rcl
sbb
scas
jns
xchg
xchg
(bad)
sti
xchg
popf
iret
not
pop
push
cs
pop
mov
xchg
ror
iret
ins
pop
(bad)
fwait
rcr
push
pop
mov
xchg
rcl
dec
ror
xlat
out
mov
xchg
pop
or
pop
pop
push
xlat
(bad)
jmp
pop
mov
xchg
test
fiadd
pop
mov
pop
pop
outs
jg
dec
jle
rcr
mul
pop
push
jg
pop
pop
push
or
das
clc
pop
loopne
clc
pop
jne
jbe
dec
xchg
pop
pop
push
or
xlat
iret
lahf
ret
(bad)
pusha
cmp
fwait
rcr
das
ins
das
sub
xor
shl
mov
mov
xchg
movs
dec
jp
aam
xchg
movs
(bad)
pop
sbb
shl
jmp
data16
retf
das
sbb
outs
les
pop
jge
sbb
adc
pop
cdq
fbld
push
pop
jbe
mov
nop
movs
xlat
cmps
add
mov
ror
and
pop
jp
fisttp
bound
out
fist
mov
push
xor
mov
xlat
mov
shl
mov
jle
clc
movs
jne
call
movs
xlat
scas
popa
and
push
jae
cmps
(bad)
cmps
inc
in
(bad)
shr
sub
shl
push
dec
rcl
movs
jmp
clc
movs
jne
add
das
int
dec
jp
mov
fdivr
das
and
enter
test
xchg
pop
mov
push
cmp
movs
pop
mov
xchg
pop
mov
push
cmp
movs
pop
mov
xchg
pop
mov
push
cmp
movs
pop
mov
xchg
pop
mov
push
cmp
movs
pop
mov
xchg
pop
mov
push
push
mov
xchg
ror
aas
pop
push
mov
sbb
cmps
xchg
push
pop
test
xchg
pop
call
cdq
xchg
popf
fistp
aad
push
cmp
test
and
ror
lods
js
test
out
add
adc
pushf
push
push
das
in
push
bound
popf
in
mov
scas
mov
das
xchg
das
aam
and
jne
push
push
pop
sub
or
into
pop
mov
and
jne
inc
dec
pop
cmp
or
(bad)
sub
mov
sbb
jb
pop
movs
add
xlat
fidivr
pop
jo
js
mov
lods
jp
add
ror
aas
pop
push
mov
xchg
mov
(bad)
sbb
cs
pop
mov
mov
cmp
ins
xor
adc
std
sbb
push
pop
arpl
ins
movs
jne
xchg
cs
xchg
fidiv
cmps
push
or
xchg
pop
jmp
or
nop
fidiv
cmps
push
bound
data16
out
add
adc
mov
cli
cs
adc
mov
out
add
adc
scas
pop
test
push
sub
dec
pop
jnp
pop
or
xchg
(bad)
sbb
cs
pop
mov
not
jb
adc
sub
adc
mov
shl
jp
or
xchg
pop
jmp
mov
cmp
xchg
bound
xchg
pop
(bad)
sub
das
movs
lods
pop
movs
add
xlat
fidivr
pop
jo
js
mov
(bad)
xchg
ror
xlat
sbb
call
fldenv
sbb
jb
xchg
das
xchg
pop
or
lods
pop
(bad)
jge
mov
mov
shl
jp
or
xchg
pop
call
sbb
mov
xchg
das
mov
sub
addr16
and
lea
ins
pop
mov
out
bound
pop
mov
pop
mov
adc
mov
xchg
pop
int
ins
pop
mov
xchg
push
or
int3
add
(bad)
shr
jle
fnstcw
movs
(bad)
pop
sbb
xor
data16
out
int
ins
mov
das
xchg
sub
scas
ins
mov
das
xchg
sub
add
mov
stos
pushf
cld
idiv
mov
xchg
(bad)
pop
(bad)
fwait
rcr
cdq
(bad)
dec
dec
int
shl
das
mov
sbb
pop
lods
jne
retf
movs
(bad)
pop
sbb
adc
mov
out
mov
xchg
pop
mov
(bad)
rcl
pop
iret
rcr
dec
lea
outs
sti
mov
outs
sub
mov
mov
sbb
mov
xchg
ror
xlat
sbb
add
xchg
or
(bad)
inc
mov
inc
mov
xchg
sub
lods
pop
movs
add
xchg
and
xchg
mov
(bad)
xchg
ror
xlat
push
pop
mov
sbb
jb
and
lods
pop
movs
mov
sub
ror
xlat
push
pop
arpl
xchg
pop
fnstcw
in
fistp
push
mov
rcl
outs
movs
jne
push
push
aad
leave
xchg
dec
jp
mov
mov
mov
or
(bad)
xchg
mov
imul
mov
mov
scas
pop
mov
adc
(bad)
jmp
ins
pop
dec
stos
popa
mov
rcl
sbb
lock
movs
mov
push
cmp
popa
mov
rcl
data16
dec
sbb
xchg
jno
jne
xchg
cs
and
jns
ins
movs
or
xchg
cmp
ins
xchg
pop
jmp
pop
test
pop
xchg
inc
pop
push
pop
and
or
enter
pop
repnz
shr
mov
popf
in
pop
fdivr
jne
pop
inc
pop
and
or
nop
rcr
mov
shl
pop
bound
pop
mov
ror
das
adc
jns
ins
movs
mov
and
jns
ins
movs
loope
mov
mov
dec
loope
das
xchg
push
punpckldq
jne
pop
test
test
ins
fwait
push
lsl
mov
popf
ficom
sub
test
push
jg
sbb
shr
(bad)
pop
sbb
shr
test
jp
jae
ins
ror
test
ds
xchg
rcr
sti
dec
movs
jne
inc
fwait
popa
cmp
pushf
cmps
dec
pop
mov
rcr
stos
data16
shl
pop
call
pop
mov
push
mov
jb
ins
movs
int
push
pop
call
movs
jne
inc
xlat
bts
jg
fwait
shr
xchg
movs
(bad)
pop
sbb
shr
arpl
ins
movs
mov
ins
out
data16
call
jo
ins
(bad)
sbb
jbe
push
cs
shr
add
jns
mov
lds
pcmpeqd
popa
ds
push
jne
out
int
ins
pop
mov
xchg
sub
ins
movs
mov
xchg
sub
aas
xchg
pop
add
jns
or
xchg
dec
mov
adc
cld
cdq
ins
das
jbe
mov
movnti
jne
xchg
pop
mov
ja
rcl
mov
rcr
movs
jne
out
enter
push
lock
movs
bound
pop
mov
popf
in
pop
fdivr
jne
jo
add
xchg
outs
xchg
rcr
fstp
jne
aaa
scas
shr
add
push
mov
arpl
fbld
push
cmp
jne
sbb
jle
ins
movs
dec
int
rcl
jnp
dec
into
nop
pop
(bad)
rcl
movs
pand
jne
das
scas
shr
mov
xchg
sub
ins
xchg
fidiv
int3
dec
movs
jne
out
loop
das
sbb
das
sbb
sub
ins
movs
add
xchg
dec
(bad)
adc
(bad)
push
shr
dec
push
xchg
pop
add
sbb
sub
ins
movs
add
adc
btc
movs
pop
cli
push
shr
pop
mov
nop
ror
mov
pop
not
ins
ror
sti
dec
movs
jne
pop
xchg
ins
xor
shr
jne
dec
test
jp
(bad)
xchg
ror
sti
dec
movs
jne
pop
out
shr
leave
movs
pop
sahf
push
shr
setnp
jne
pop
xchg
ins
fidiv
int3
dec
movs
jne
out
loop
xchg
pop
stos
inc
xchg
rcr
fwait
dec
movs
jne
js
fsub
fwait
pusha
and
xor
mov
jns
jne
out
enter
pop
fdivr
jne
jo
add
mov
movs
add
xchg
outs
xchg
push
cmp
popa
mov
rcl
mov
pop
add
cli
pop
call
pop
mov
ins
push
dec
and
cmp
daa
xchg
push
push
adc
pop
scas
shr
cmp
scas
mov
das
xchg
test
push
mov
xchg
mov
cs
pop
add
sbb
cs
pop
mov
pop
add
push
fild
icebp
ins
movs
mov
pop
add
sbb
inc
sbb
mov
out
add
adc
(bad)
cmp
stos
or
xchg
fidiv
fist
mov
scas
stos
pop
(bad)
fdiv
ds
xchg
push
cmp
xor
cmps
es
cs
ins
movs
or
xchg
push
cmp
scas
mov
das
xchg
das
pushf
movs
xchg
outs
mov
xchg
pop
or
ins
xlat
into
pop
xchg
ror
retf
dec
movs
jne
adc
jge
popf
ror
fstp
jne
push
jp
test
call
movs
clc
(bad)
adc
sub
ins
movs
mov
and
sub
ins
movs
dec
int
shl
cmp
xor
pop
mov
xchg
pop
mov
fidiv
das
xchg
das
xchg
scas
scas
mov
xchg
pop
mov
fidiv
das
xchg
das
sub
pop
mov
sbb
jl
push
and
mov
push
cmp
popa
mov
rol
movs
aas
repz
movs
jne
daa
mov
ins
mov
(bad)
ins
movs
or
sahf
fidiv
int3
dec
movs
jne
out
or
xchg
rcr
fstp
jne
jo
add
push
mov
out
jae
mov
ror
cmp
jne
sbb
rcl
scas
shr
aaa
fstp
jne
xchg
pop
mov
movs
(bad)
pop
sbb
rcl
fistp
ins
movs
mov
and
jns
ins
movs
loope
mov
mov
dec
loope
das
xchg
push
verw
jne
int3
add
(bad)
shr
jle
fnstcw
rcl
daa
push
pop
jb
mov
adc
pop
pop
push
jbe
mov
xchg
sbb
popa
dec
inc
push
mov
cli
pop
outs
setb
pop
xor
xchg
pop
mov
xlat
mul
pop
outs
push
xchg
rcr
sub
fidiv
scas
xlat
mov
or
pop
dec
push
pop
popa
cmp
pop
test
xchg
jne
jns
or
pop
or
dec
clc
retf
sub
das
xchg
lods
out
xlat
sbb
inc
cmps
xlat
mov
arpl
push
cmp
fs
into
cmp
push
xchg
pop
mov
and
mov
push
pop
mov
out
add
ror
push
rcr
xlat
popf
in
leave
cs
mov
xchg
fnstenv
out
or
pop
test
adc
(bad)
and
fstenv
out
pop
or
pop
test
xchg
call
push
jmp
adc
jne
popf
in
leave
cs
mov
xchg
or
xchg
pop
jmp
adc
jne
sbb
jb
push
jae
cmps
(bad)
mov
jge
xchg
pop
jmp
out
or
pop
or
pop
or
push
test
push
pop
jg
jns
add
push
lahf
loope
pop
or
pop
popa
and
adc
jg
loopne
add
ror
push
rcr
xlat
popf
in
mov
adc
das
out
or
pop
test
leave
xchg
dec
jp
mov
frstor
lock
das
gs
dec
inc
ins
pop
mov
les
mov
lock
out
sbb
adc
popf
popa
and
data16
out
dec
imul
or
xchg
and
imul
push
lsl
sub
das
xchg
mov
jle
pop
fdivr
aas
mov
int3
xchg
pop
mov
gs
jne
sbb
jne
call
jg
xor
das
xchg
xlat
comiss
jne
jp
mov
xchg
(bad)
mov
mov
inc
in
(bad)
shr
sub
fstp
xchg
pop
mov
xor
das
jp
fldcw
xchg
add
outs
lods
jle
fnstcw
in
cmp
sub
call
clc
pop
loop
xchg
pop
mov
xor
das
xchg
fidiv
call
jmp
mov
mul
xchg
mov
imul
shl
jne
iret
fistp
popf
loopne
les
add
adc
bound
rcr
xlat
cmps
xor
cmps
pop
mov
jne
iret
fistp
popf
loopne
adc
xchg
out
add
ror
fistp
pop
push
ror
fild
jp
ins
das
jbe
jp
fsubr
xchg
or
sbb
pop
mov
mov
inc
xchg
pop
aad
leave
xchg
dec
jp
mov
fdivr
fnclex
mov
shl
push
dec
inc
xchg
xor
das
xchg
pop
loopne
clc
pop
loopne
cli
pop
mov
push
movs
jmp
jp
fld
xchg
ror
movs
jmp
mov
daa
xchg
xchg
lods
ins
cmps
xlat
mov
loopne
clc
pop
fadd
push
or
cmps
push
fld
rcr
mov
xchg
das
jae
push
xor
jl
das
xchg
dec
fsubr
xchg
xor
inc
nop
xor
rcr
(bad)
ins
or
jg
pop
add
gs
iret
fistp
popf
xor
xchg
pop
mov
add
(bad)
shr
ret
nop
and
sahf
adc
mov
loopne
cli
fimul
inc
xchg
xor
out
ins
das
add
or
shr
mov
push
mov
cmps
push
ins
cmps
xlat
mov
loopne
clc
pop
fadd
mov
pop
pop
push
or
and
jle
pop
fadd
mov
mov
mov
shl
push
dec
jo
xchg
dec
jp
mov
add
popf
iret
rcr
cmp
xchg
xchg
pop
mov
dec
rcl
xchg
push
cmp
lods
pop
dec
push
ror
rcr
cwde
mov
sbb
jbe
ins
das
xchg
mov
fldcw
xchg
xor
test
pop
mov
dec
test
cmps
mov
fldcw
xchg
(bad)
shl
and
mov
sar
or
lods
pop
jmp
push
pop
mov
aad
mul
out
stos
add
ror
push
rcr
rol
xor
dec
rcr
push
push
aad
leave
xchg
dec
jp
mov
add
sar
and
jbe
aam
mov
popa
xchg
pop
loop
jb
mov
movs
or
les
or
sbb
mov
mov
mov
adc
clc
(bad)
cli
jl
ins
xchg
mov
jl
pop
shl
cwde
add
add
fbld
ror
sbb
in
call
adc
data16
adc
bound
adc
outs
das
pop
daa
js
cmps
shl
xchg
jecxz
das
xchg
pop
jns
sbb
or
pop
jmp
hlt
popf
iret
int
pop
add
push
cmp
sar
xor
jno
iret
repz
test
push
inc
mov
(bad)
rcl
mov
scas
popa
sbb
out
xchg
(bad)
rcl
push
test
ins
mov
scas
push
xchg
lea
xchg
push
cmp
ins
push
cmp
xchg
stos
or
mov
(bad)
adc
je
out
or
pop
or
pop
or
pop
(bad)
clc
sbb
add
push
cmp
and
call
(bad)
mov
iret
retf
sbb
bound
popf
in
(bad)
int
mov
iret
retf
sbb
xchg
and
push
test
popf
in
(bad)
popf
cmc
dec
xlat
mov
mov
sbb
xchg
and
push
test
xchg
pop
outs
movs
xlat
mov
dec
dec
add
sbb
rcr
xchg
(bad)
aam
das
add
sbb
sbb
add
movs
mov
call
mov
add
sbb
add
sbb
retf
add
mov
dec
retf
add
mov
inc
mov
pusha
cmp
ins
sbb
add
xchg
mov
call
sub
retf
dec
retf
add
mov
sbb
retf
add
jne
repnz
add
in
(bad)
xchg
pop
mov
retf
mov
scas
sbb
outs
xchg
retf
add
sbb
add
add
retf
mov
retf
xchg
retf
stos
xchg
sbb
add
sbb
add
or
xchg
retf
out
sbb
add
sbb
outs
movs
mov
rcr
mov
outs
and
pop
into
rcr
cmp
ins
dec
dec
add
sbb
rcr
inc
xchg
retf
add
sbb
fdivr
(bad)
aam
das
add
push
mov
push
retf
add
mov
add
sbb
add
sbb
gs
add
sbb
add
sbb
outs
and
sbb
add
sbb
pusha
retf
add
mov
push
sbb
add
sbb
rcl
add
sbb
push
retf
add
mov
add
sbb
add
sbb
gs
add
sbb
add
sbb
daa
ins
sbb
mov
pop
jb
add
sbb
pusha
retf
add
sbb
jnp
fwait
shr
dec
jp
mov
fdivr
pop
and
dec
push
imul
int
iret
rcr
pop
data16
xlat
mov
dec
jle
iret
retf
sbb
jbe
fs
iret
sbb
push
fdiv
mov
iret
shl
popf
iret
fist
pop
mov
gs
jbe
xlat
mov
push
rcl
bound
bound
movs
jne
sbb
not
xchg
das
mov
xlat
mov
or
pop
add
loop
push
xchg
pop
xor
and
jno
imul
mov
pop
mov
mov
jo
xchg
inc
mov
loopne
mov
in
add
xchg
stos
retf
dec
test
sbb
cdq
xchg
inc
mov
xchg
pop
mov
rcl
bound
test
push
ror
rcr
cwde
mov
inc
call
push
or
fcomp
and
jno
sbb
iret
fstp
mov
(bad)
push
adc
das
clc
pop
pop
push
or
not
adc
das
adc
mov
gs
jbe
xlat
xchg
add
(bad)
movs
iret
fistp
arpl
push
jne
ins
add
fbld
ror
sbb
bound
lahf
pop
mov
ret
ror
js
inc
out
push
jae
cmps
inc
add
in
sbb
lods
scas
sahf
aaa
ins
xchg
pop
jmp
mov
pop
mov
out
bound
push
push
add
fwait
call
popf
in
test
xchg
xchg
rcr
cmp
rcr
sbb
bound
in
test
cmps
and
add
xchg
addr16
xchg
rcr
(bad)
pusha
pop
mov
clc
push
loopne
sbb
enter
bound
mov
das
xchg
(bad)
xor
iret
sar
or
scas
adc
push
rcr
push
sbb
rcl
pop
mov
pop
out
das
stos
pop
jbe
dec
sti
pop
xchg
rcr
push
mov
cmps
dec
pop
iret
xlat
sbb
xchg
rcr
aas
adc
jb
xor
(bad)
imul
sbb
lock
(bad)
das
xchg
ror
repz
(bad)
das
xchg
shl
repz
in
jne
push
push
cmp
es
shl
(bad)
adc
mov
sbb
push
(bad)
in
pop
mov
sbb
push
and
in
pop
out
jo
cmp
addr16
xchg
rcr
shr
mov
clc
sbb
xchg
das
sbb
out
das
sbb
das
xchg
(bad)
xor
iret
fstp
or
add
das
sbb
lahf
jmp
sbb
fist
pop
mov
pop
out
das
stos
pop
jle
dec
sti
pop
xchg
rcr
push
mov
cmps
bound
cmps
push
rcl
xlat
stos
add
dec
out
das
mov
pop
sub
das
sbb
ins
xchg
arpl
fnstsw
add
xchg
addr16
xchg
rcr
cdq
(bad)
mov
int
dec
pop
iret
das
sbb
ins
xchg
rol
adc
enter
ffreep
inc
mov
aaa
ins
xchg
rol
cmps
sahf
pusha
or
pop
jmp
adc
bound
sbb
pop
cmps
push
push
cmp
not
pop
fcmovb
sbb
sahf
add
mov
xor
das
xchg
sbb
call
push
xor
shl
mov
bound
bound
add
ins
das
outs
(bad)
fcom
mov
shl
out
rol
fbld
nop
pop
mov
xor
repnz
cmps
bound
ja
ins
ror
cs
xchg
lock
xchg
xlat
xchg
ror
mov
gs
jne
sbb
xchg
inc
pop
call
fdivr
jo
push
mov
pop
jbe
popf
or
rcl
jo
pop
movs
je
ins
fstp
pop
mov
xlat
movs
mov
mov
pop
test
fistp
call
mov
mov
cmps
push
(bad)
sbb
mov
ins
movs
jne
xlat
movs
mov
in
dec
stos
xchg
movs
jne
xchg
mov
fs
pop
add
fs
mov
pushf
cvtpi2ps
jne
push
fisttp
pop
movs
je
ins
or
mov
addr16
das
pop
fbstp
ins
movs
fcmovb
cld
adc
fistp
pushf
loopne
clc
pop
loopne
clc
pop
loopne
cli
pop
mov
rcl
paddq
jne
jp
ret
ror
fld
jne
bound
cmps
push
movs
jmp
sub
inc
ins
xchg
or
fstp
inc
xchg
xlat
pandn
jne
cli
pop
xchg
das
xchg
xor
rcr
call
ret
movs
aas
fld
jne
fs
das
ins
pop
(bad)
fwait
rcr
inc
dec
test
das
pop
fbstp
ins
movs
fcmovb
pusha
adc
arpl
cmps
jne
ret
lock
stos
ins
movs
jne
ret
das
xchg
fisub
xchg
pop
mov
xchg
cs
xchg
xor
rcr
loop
sbb
shr
loop
xchg
pop
or
(bad)
pop
mov
shl
lock
push
dec
sbb
scas
jp
mov
xchg
(bad)
int
shl
push
lsl
ret
or
jns
sar
cmp
shl
push
dec
rcl
fisttp
retf
pop
mov
mov
fiadd
xor
das
clc
pop
loopne
ins
das
xchg
out
bound
pop
mov
rcr
mov
xchg
das
jae
xlat
mov
add
ins
das
jb
clc
pop
loopne
ins
das
call
pop
mov
out
bound
mov
add
(bad)
shr
sub
shl
push
dec
shl
dec
bound
mov
or
xchg
xchg
out
bound
xchg
pop
mov
lsl
vpcmpgtw
sub
xlat
mov
pop
loopne
pop
pop
sahf
jg
das
call
mov
das
xchg
pop
or
mov
outs
jle
or
fild
xchg
xlat
iret
xlat
ret
rol
xor
das
clc
pop
loopne
clc
pop
jne
sahf
movs
jmp
jp
ret
push
dec
pop
xchg
imul
movs
push
ins
das
sahf
shl
inc
loopne
ins
das
call
pop
mov
push
cs
out
bound
push
mov
scas
jge
(bad)
das
xchg
movs
call
jp
ret
imul
xchg
dec
jp
mov
frstor
cmp
push
in
push
cmp
call
sub
das
xchg
lods
ins
cmps
xlat
stos
add
push
pop
mov
mov
das
clc
pop
jne
sahf
movs
jmp
jp
ret
push
dec
pop
xchg
imul
xlat
iret
aaa
ret
das
clc
pop
jne
and
das
xchg
push
dec
pop
sahf
movs
call
jp
ret
imul
loop
ins
xchg
pop
jge
sbb
data16
push
movs
call
jp
int
xchg
push
cmp
out
lsl
ret
or
js
std
and
ror
scas
cmps
pop
ins
xchg
pop
dec
pop
into
das
xchg
or
aam
mov
inc
sbb
add
mov
mov
inc
xchg
xor
xchg
pop
loopne
clc
pop
loopne
cli
cmp
xchg
mov
imul
das
mov
push
mov
cmps
push
jb
push
movs
mov
(bad)
sbb
mov
sbb
jbe
int3
xchg
dec
xchg
cld
sbb
sbb
add
pop
pop
cmp
test
das
sbb
sub
shr
ret
js
das
and
test
sbb
jbe
dec
mov
scas
scas
xchg
shl
dec
or
fist
dec
bound
push
push
add
mov
pushf
mov
sub
mov
sbb
clc
push
out
xor
jb
adc
ret
pop
sbb
iret
aas
push
pop
mov
gs
jbe
xlat
mov
push
outs
jns
add
xchg
sbb
js
mov
sbb
popf
das
xchg
push
jne
(bad)
sar
dec
or
xor
push
ror
push
rcr
rcr
or
jns
or
stc
loopne
xchg
add
fbld
ror
cld
jae
cmps
bound
cmps
push
or
(bad)
pop
mov
inc
mov
loopne
jp
leave
das
xchg
ror
fist
mov
jge
pop
mov
cdq
xchg
imul
pop
cwde
push
cmp
mov
pop
mov
pop
ja
dec
push
pop
mov
ficom
push
ins
push
cmp
test
pop
mov
or
dec
dec
(bad)
shl
mov
das
sub
push
jp
rcr
push
cmp
movs
out
scas
fld
test
das
lds
or
xchg
push
popa
iret
xlat
loopne
add
add
fbld
nop
pop
bound
les
scas
scas
fs
mov
fld
jne
adc
data16
mov
push
xlat
(bad)
ins
movs
jne
ins
das
xchg
adc
and
imul
push
mov
adc
jb
ins
movs
mov
or
rcr
push
push
mov
and
pop
jne
xchg
add
sub
das
xchg
lods
das
xlat
ins
movs
jne
pop
mov
ins
shl
imul
jne
das
xor
push
ja
pop
out
das
xchg
pop
mov
sbb
rcr
cmps
pop
cmps
jne
ins
loop
bound
fistp
outs
movs
add
ins
das
add
mov
jp
retf
das
xchg
sar
(bad)
push
add
sbb
or
xchg
pop
call
sbb
inc
shr
mov
shl
jmp
xor
lock
pop
call
jmp
xor
lock
call
iret
das
xchg
(bad)
jp
iret
das
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
daa
cmps
jne
ins
mov
push
pop
or
call
and
mov
test
das
sub
mov
xchg
ret
jge
rcl
shr
jne
cli
fs
ins
xchg
or
mov
pop
mov
je
movntq
jne
push
mov
push
pop
xor
mov
cdq
inc
bound
jbe
ins
movs
bound
pop
mov
sbb
shr
call
mov
imul
mov
xchg
daa
cdq
inc
bound
jbe
ins
movs
(bad)
(bad)
(bad)
pop
mov
mov
ja
sbb
xchg
cwde
pop
mov
or
test
jecxz
das
xchg
pop
adc
imul
xchg
outs
movs
je
lds
mov
rcr
(bad)
adc
mov
adc
loop
dec
sbb
shr
loop
dec
sbb
das
xchg
(bad)
jp
into
das
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
daa
cmps
jne
ins
mov
imul
xor
pop
jne
outs
movs
je
jp
into
das
xchg
(bad)
sbb
bound
pop
mov
or
idiv
stos
push
xchg
movs
aas
shr
jne
mov
sahf
add
enter
jbe
ins
movs
bound
(bad)
pop
mov
pop
mov
or
test
jecxz
das
xchg
pop
adc
imul
xchg
outs
movs
je
lds
mov
rcr
(bad)
sub
mov
adc
movs
das
xchg
mov
ins
xchg
pop
xor
xchg
pop
mov
outs
test
das
pop
out
shr
ffree
add
mov
pop
fist
movs
fcmovbe
out
add
ret
icebp
rcr
(bad)
call
sahf
stos
(bad)
enter
sub
das
xchg
ret
jge
adc
ret
pop
xor
mov
das
cmps
jne
ins
or
mov
pop
leave
das
xchg
(bad)
jp
leave
das
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
daa
cmps
jne
ins
mov
ins
xchg
pop
or
call
(bad)
push
push
mov
xchg
ret
jge
adc
inc
icebp
rcr
call
leave
das
xchg
(bad)
jp
enter
sub
pop
adc
imul
sub
dec
loop
jb
mov
daa
cmps
jne
ins
mov
ins
xchg
pop
or
call
pop
xchg
psrlq
jne
cli
rcl
bound
dec
bound
pop
mov
or
idiv
xchg
push
ins
xchg
movs
aas
shr
jne
and
mov
adc
mov
gs
ja
sbb
xchg
cwde
pop
mov
or
idiv
stos
push
xchg
movs
aas
shr
jne
in
sbb
(bad)
test
mov
sub
das
xchg
ret
jge
adc
mov
dec
xchg
pop
mov
das
cmps
jne
ins
or
mov
jg
das
xchg
(bad)
adc
stos
das
popf
fdivrp
cs
pop
or
xchg
mov
cs
pop
dec
stos
xchg
pop
jne
xchg
(bad)
pop
mov
pop
popa
pop
sbb
shr
mov
test
movs
stc
pop
sbb
shr
mov
popf
in
mov
sbb
mov
repz
xlat
sub
das
xchg
loopne
ret
push
adc
int
mov
cmps
pop
out
jne
ins
rcr
push
cmp
mov
ins
or
mov
ins
or
mov
stos
add
ins
fbstp
shr
or
adc
das
popf
fdiv
shr
jne
movs
je
ins
das
xchg
mov
ins
or
stos
outs
movs
je
ret
icebp
rcr
(bad)
fcomp
mov
adc
mov
sub
das
xchg
ret
jge
adc
xlat
icebp
rcr
call
retf
das
xchg
(bad)
sbb
bound
pop
mov
or
idiv
xchg
push
ins
xchg
movs
aas
shr
jne
mov
mov
adc
mov
sub
das
xchg
ret
jge
adc
jp
rcr
call
retf
(bad)
adc
shr
or
xchg
pop
jne
movs
je
sbb
jb
ins
movs
mov
movs
ja
popf
fsub
shr
add
sbb
arpl
xlat
inc
add
jnp
mov
xchg
fidiv
das
xchg
movs
jne
popf
faddp
cs
pop
add
mov
pop
xchg
sub
fbstp
ins
movs
test
fbstp
ins
movs
add
ins
das
sahf
inc
retf
test
das
pop
fistp
outs
movs
fcmovb
fcomp
mov
adc
jne
ins
fld
rcr
mov
xchg
das
jae
push
cmp
xchg
sub
ja
adc
stos
xchg
pop
jne
ret
stos
sub
ja
pop
fimul
jg
add
fld
jne
jp
jb
ins
(bad)
sbb
jp
outs
movs
jne
movs
je
ins
das
xchg
shl
stos
jne
ins
ror
shr
jne
cli
ds
ins
xchg
or
lods
pop
mov
pop
mov
je
seta
jne
pop
loop
shr
dec
(bad)
xor
mov
sub
das
xchg
ret
jge
adc
xlat
icebp
rcr
call
mov
xchg
(bad)
jp
mov
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
dec
sbb
shr
sub
xchg
pop
or
call
and
mov
cdq
inc
bound
jbe
ins
movs
bound
mov
movs
ja
jp
mov
xchg
fstp
pop
mov
pop
scas
jne
ins
xlat
comiss
out
jb
ins
movs
fld
xchg
lods
jne
adc
jne
ins
push
dec
and
fidiv
xor
call
mov
xchg
(bad)
jp
mov
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
dec
sbb
shr
adc
pop
or
call
and
mov
cdq
inc
pop
test
das
ins
out
jbe
ins
movs
(bad)
int3
lods
pop
mov
stos
add
jp
mov
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
daa
cmps
jne
ins
mov
adc
xor
call
mov
xchg
(bad)
jp
mov
xchg
jecxz
das
xchg
pop
adc
imul
sub
jns
pusha
lods
pop
mov
or
jbe
ins
movs
fld
test
das
lds
or
xor
and
mov
cdq
inc
iret
test
das
ins
out
jbe
ins
movs
bound
mov
mov
jp
mov
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
dec
sbb
shr
stos
adc
mov
adc
pop
mov
xchg
daa
cdq
inc
bound
jbe
ins
movs
(bad)
aam
pop
mov
pop
mov
or
test
jecxz
das
xchg
pop
adc
imul
xchg
outs
movs
je
lds
mov
rcr
(bad)
xor
das
adc
enter
jbe
ins
movs
bound
push
add
gs
ja
sbb
xchg
cwde
pop
mov
or
idiv
stos
push
xchg
movs
aas
shr
jne
adc
das
adc
enter
jbe
ins
movs
bound
pop
mov
pop
mov
or
idiv
stos
push
xchg
movs
aas
shr
jne
fsub
das
adc
enter
jbe
ins
movs
bound
scas
pop
mov
stos
add
jp
mov
xchg
jecxz
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
daa
cmps
jne
ins
mov
adc
xlat
psllw
jne
sbb
jbe
ins
movs
fiadd
test
das
ret
adc
mov
adc
pop
mov
xchg
daa
cdq
inc
bound
jbe
ins
movs
(bad)
in
pop
mov
stos
add
cli
pop
push
ins
xchg
movs
aas
shr
jne
and
das
adc
mov
sub
das
xchg
ret
jge
adc
jp
rcr
call
mov
xchg
(bad)
jp
mov
xchg
jecxz
sub
pop
adc
imul
scas
push
dec
lods
das
xchg
or
je
lds
(bad)
rcr
(bad)
lods
data16
adc
mov
sub
das
xchg
ret
jge
adc
jp
rcr
call
mov
xchg
(bad)
cli
test
xchg
movs
aas
shr
jne
mov
sahf
and
mov
adc
pop
xor
mov
cdq
inc
bound
jbe
ins
movs
(bad)
shr
push
bound
pop
mov
or
test
jecxz
das
xchg
pop
adc
imul
xchg
outs
movs
je
lds
mov
rcr
(bad)
xor
mov
adc
enter
jbe
ins
movs
bound
push
push
loopne
clc
pop
loopne
clc
pop
loopne
cli
pop
mov
shl
mov
xchg
ror
(bad)
ins
cmps
jne
push
mov
xchg
movs
aas
shr
jne
and
mov
clc
pop
pop
xchg
movs
je
lds
jne
outs
movs
je
ins
out
(bad)
shr
bound
daa
mov
shr
mov
call
mov
fdiv
xchg
ins
cmps
jne
push
or
movs
pop
mov
add
fbld
xchg
pop
mov
pop
movs
push
cli
shl
push
dec
jmp
test
pop
mov
and
jne
cli
rcl
xchg
xlat
(bad)
ins
movs
jne
jp
mov
xchg
xor
das
pop
fbstp
ins
movs
fiadd
pop
mov
ins
(bad)
adc
jne
sbb
jne
xchg
sub
rcr
gs
sbb
scas
jp
jp
ins
xor
pop
loop
dec
sbb
das
cli
pop
mov
adc
or
mov
jb
push
dec
jo
cdq
fbld
nop
pop
mov
xor
xchg
lahf
dec
mov
gs
jne
sbb
jne
xchg
ror
daa
adc
and
call
outs
movs
jne
xlat
push
add
xchg
pop
mov
xchg
ror
mov
push
jb
push
imul
push
add
adc
das
xchg
rcr
daa
pop
push
mov
rcl
pop
(bad)
outs
movs
jne
jp
mov
push
outs
movs
jne
daa
cli
ja
ins
mov
sbb
rol
push
outs
movs
jne
(bad)
push
(bad)
mov
sbb
adc
ins
movs
add
mov
mov
sbb
cmps
jne
ins
out
sub
ins
movs
bound
movs
pop
mov
ins
movs
aas
mov
movs
jne
xchg
ins
mov
sbb
and
fisub
outs
movs
jne
(bad)
push
mov
sbb
add
ins
movs
loop
inc
sbb
das
sbb
push
shr
loopne
clc
pop
pop
stos
cmps
jne
ret
push
xchg
pop
add
mov
fstp
inc
stos
pop
mov
pop
mov
pop
fistp
shr
fiadd
xchg
das
cli
out
push
ins
xchg
xor
xlat
jge
jne
push
jle
out
out
fadd
inc
outs
mov
mov
pop
mov
and
xchg
xlat
psrlq
jg
fistp
shr
fcmovb
sbb
mov
ins
out
push
shr
jne
add
push
shr
jne
sbb
adc
ins
movs
jne
xor
setnp
jne
jp
js
ins
(bad)
sbb
push
shr
sub
push
fadd
clc
outs
mov
mov
pop
mov
xchg
das
pop
fbstp
ins
movs
fcmovb
inc
bound
xlat
sbb
jne
ret
shr
jg
out
das
xchg
mov
shr
stos
push
cmps
jne
adc
loopne
clc
pop
pop
stos
sub
pop
xchg
pop
or
mov
jne
xchg
pop
mov
gs
jne
sbb
jne
xchg
pop
mov
hlt
popf
xsaves
das
xchg
fnstenv
stos
outs
movs
jne
out
in
call
ins
pop
mov
xchg
xlat
seta
jg
mov
pop
stos
cmps
jne
ret
xchg
ins
movs
jne
clc
pop
loopne
clc
jp
das
clc
pop
loopne
pop
fbstp
ins
movs
fiadd
mov
sbb
fisub
pop
jne
cmp
mov
mov
pop
mov
daa
into
ja
ins
xor
push
dec
sbb
shr
(bad)
call
push
dec
dec
stos
stc
cmps
jne
xchg
mov
cmps
push
jb
push
xlat
psrlq
jg
das
push
ins
xchg
mov
sbb
call
xchg
mov
sbb
cmps
jne
xchg
ror
inc
outs
movs
jne
xchg
sub
dec
cs
xchg
and
das
xchg
fnstenv
mov
out
loop
bound
mov
dec
xlat
das
xchg
lods
ins
cmps
pop
ds
ins
ror
xchg
pop
mov
pop
fbstp
ins
movs
fidivr
mov
inc
clc
xchg
das
pop
fbstp
ins
movs
fcmovb
sti
out
rcl
sahf
xchg
ins
movs
mov
out
or
xchg
shl
push
dec
les
jne
adc
popa
sub
call
shr
mov
ins
or
cmps
pop
mov
xchg
or
test
pop
mov
movs
aas
mov
jne
dec
imul
xchg
mov
(bad)
ja
ins
mov
cmps
push
jb
push
add
mov
(bad)
shr
jle
fnstcw
rcl
cmp
shl
jne
iret
fistp
popf
mov
pop
call
in
hlt
rcr
shr
xchg
dec
imul
pop
xor
in
hlt
rcr
fld
mov
sbb
pop
add
hlt
rcr
fist
mov
sbb
pop
test
(bad)
cmps
mov
popf
in
(bad)
xchg
mov
imul
pop
sbb
mov
pop
test
sbb
mov
pop
pop
push
or
(bad)
or
cmps
pop
mov
sar
push
pop
fcmovb
shr
ins
das
xchg
and
pop
(bad)
outs
ret
push
xchg
pop
jne
adc
ins
xlat
into
sub
xlat
into
aas
nop
or
mov
pop
jb
push
or
imul
call
push
call
pop
pop
push
or
das
les
push
jl
pop
loopne
clc
pop
bound
pop
mov
push
dec
inc
ins
or
xchg
mov
mov
mov
pop
mov
mov
dec
jp
mov
mov
or
das
ror
popf
add
cmps
push
popf
setae
jne
lea
scas
gs
das
xchg
xlat
setae
jne
pop
fisttp
ins
movs
fiadd
xchg
das
jp
movs
das
xchg
ror
push
push
mov
pop
mov
push
or
push
mov
mov
daa
fwait
call
ins
movs
jne
sahf
mov
pop
xchg
pop
xor
jne
seta
jne
push
imul
add
stos
cs
mov
pop
fbstp
iret
ins
movs
fisub
ins
or
(bad)
sbb
mov
fwait
call
xchg
pop
fnop
daa
sahf
push
ins
mov
sbb
push
dec
pop
lea
jne
out
(bad)
fdivr
lods
ins
cmps
pop
loop
shr
dec
push
push
sbb
jns
mov
out
lsl
sub
das
xchg
mov
add
rcl
daa
sub
lods
ins
mov
dec
arpl
fistp
ins
movs
add
mov
xor
inc
mov
fld
rcr
mov
xchg
das
jae
push
xor
jge
push
shr
dec
daa
cli
andnps
or
cmps
pop
mov
pop
mov
je
pandn
jne
pop
stos
push
shr
dec
cmps
bound
cmps
push
xor
lock
stos
xchg
mov
mov
xchg
pop
or
call
and
mov
sahf
inc
bound
mov
ins
movs
fcmovb
nop
outs
mov
adc
cmc
das
xchg
mov
sbb
pop
xor
mov
mov
das
sub
mov
xchg
ret
jge
rcl
das
jb
jne
cli
add
xchg
xlat
aaa
das
jb
jne
jp
mov
aas
jp
mov
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
ins
or
mov
push
loop
dec
sbb
shr
bound
push
push
add
gs
jne
sbb
xchg
cwde
pop
mov
or
idiv
cli
stos
push
xchg
xlat
comiss
jne
jp
mov
daa
jp
mov
das
xchg
pop
adc
imul
sub
jae
shl
pop
mov
or
mov
ins
movs
fld
xchg
das
pop
out
iret
ins
movs
ffree
fs
call
sbb
shr
loop
dec
sbb
shr
(bad)
cld
mov
dec
bound
pop
mov
or
idiv
cli
stos
push
xchg
xlat
comiss
jne
jp
mov
daa
cli
push
push
ins
xchg
xlat
comiss
jne
jp
mov
daa
adc
pop
mov
pop
mov
or
idiv
cli
stos
push
xchg
xlat
comiss
jne
jp
mov
daa
cli
pop
push
ins
xchg
xlat
comiss
jne
jp
mov
daa
jp
mov
das
xchg
pop
adc
imul
sub
jae
or
pop
mov
or
mov
ins
movs
fld
xchg
das
pop
out
iret
ins
movs
ffree
mov
das
adc
enter
mov
ins
movs
fcmovb
mov
sahf
add
imul
xchg
ret
jge
adc
jp
rcr
stos
xchg
mov
sbb
sar
(bad)
xchg
das
pop
fisttp
(bad)
jl
mov
adc
mov
sub
das
xchg
ret
jge
adc
jp
rcr
stos
xchg
mov
inc
push
xchg
pop
or
call
stos
xchg
mov
ds
xchg
pop
or
call
and
mov
sahf
inc
bound
mov
ins
movs
fcmovb
sbb
mov
adc
sahf
das
xchg
movs
jmp
pop
fisttp
inc
mov
fisttp
(bad)
aam
mov
adc
mov
sub
das
xchg
ret
jge
adc
jp
rcr
stos
xchg
mov
into
push
xchg
pop
or
call
stos
xchg
mov
mov
jmp
loop
xor
pop
jge
sbb
(bad)
lock
movs
add
jp
mov
das
xchg
pop
adc
imul
sub
dec
loop
jb
mov
ins
or
mov
push
bound
jp
mov
or
dec
aas
mov
mov
out
iret
ins
movs
fld
xchg
das
pop
out
iret
ins
movs
ffree
xor
mov
adc
mov
sub
das
xchg
ret
jge
adc
jp
rcr
stos
xchg
mov
cs
xchg
pop
or
call
stos
xchg
mov
sbb
xchg
pop
or
call
(bad)
aam
mov
sub
das
xchg
ret
jge
adc
jp
rcr
stos
xchg
mov
out
pop
xchg
pop
or
call
and
mov
mov
das
sub
mov
xchg
ret
jge
rcl
das
jb
jne
cli
add
xchg
xlat
aaa
das
jb
jne
jp
mov
aas
cli
mov
xchg
xlat
comiss
jne
jp
mov
daa
clc
pop
loopne
clc
pop
loopne
clc
pop
loop
xchg
pop
retf
retf
cmps
das
xchg
ror
ror
jne
push
sbb
comiss
jne
jp
cmps
das
xchg
xor
shr
fisub
ins
or
jne
jp
cmps
das
xchg
movs
aas
ror
jne
adc
mov
mov
sar
je
bswap
dec
movs
jne
push
add
fbld
xchg
pop
mov
xor
cmps
push
jb
push
fldcw
mov
movs
jne
mov
js
das
sbb
cmp
das
xchg
rcr
daa
pop
push
mov
sbb
push
shr
xor
pop
mov
jne
bts
jne
push
mov
add
pop
fcmovb
test
mov
jp
jle
ins
xor
lods
mov
cli
ja
ins
xor
mov
jne
jp
movs
das
xchg
xor
stos
cmps
jne
ret
repz
fwait
dec
sbb
scas
jp
outs
shr
dec
or
pop
mov
cli
pop
mov
xchg
xlat
psrlq
jg
fistp
shr
fcmovb
aam
mov
sub
das
xchg
lods
ins
cmps
pop
fidiv
ins
ror
daa
cli
ja
ins
or
stos
cmps
jne
ret
aad
movs
or
sahf
push
dec
and
and
repz
stos
outs
movs
jne
ret
add
cmps
jne
ret
shr
jg
ret
movs
das
xchg
mov
retf
add
sbb
loopne
clc
pop
pop
stos
sub
add
shl
push
dec
call
ins
push
mov
xchg
popf
bswap
ins
movs
jne
xchg
pop
mov
pop
(bad)
xor
popf
xsaves
cs
shl
push
dec
mov
ins
or
ja
jne
pop
fild
shr
fisub
ins
or
das
clc
pop
loopne
clc
pop
loopne
clc
pop
pop
stos
outs
movs
jne
ret
(bad)
nop
jno
das
fwait
call
ins
out
and
ins
movs
(bad)
in
mov
mov
gs
jne
sbb
jne
cli
dec
push
ins
xchg
xor
repz
stos
outs
movs
jne
ret
add
pushf
(bad)
imul
mov
pop
fbstp
ins
movs
fiadd
xchg
das
jp
mov
es
das
xchg
inc
jp
mov
jp
mov
push
imul
mov
loopne
sbb
fiadd
das
bound
(bad)
fdiv
das
cli
pop
mov
xchg
xlat
movsx
jne
les
add
mov
pop
loop
dec
sbb
shr
bound
movs
jne
push
push
mov
ins
pop
mov
push
xchg
mov
xchg
xlat
bt
jne
shl
jmp
push
dec
and
out
mov
xchg
xor
shr
bt
jne
jp
mov
mov
movs
jne
ins
out
push
shr
(bad)
(bad)
inc
movs
jne
push
fstp
mov
into
ja
ins
mov
add
dec
sbb
das
ret
repz
(bad)
pusha
jbe
das
adc
mov
das
jp
mov
mov
movs
jne
jns
fldenv
ins
out
push
shr
(bad)
fiadd
jne
push
push
popa
or
fist
shr
or
mov
into
ja
ins
mov
clc
ins
movs
or
sahf
shl
jne
cvtdq2ps
jne
push
or
aam
pop
mov
pop
(bad)
ja
ins
pop
mov
xchg
xlat
setnp
jne
jp
mov
shl
(bad)
ja
ins
mov
push
xchg
pop
add
mov
out
shr
bound
pop
mov
add
mov
(bad)
shr
jle
fnstcw
rcl
daa
sub
shl
jne
iret
xlat
sbb
mov
sbb
jle
out
bound
mov
dec
fadd
mov
pop
xchg
pop
add
ror
mov
mov
gs
dec
jl
inc
mov
and
push
mov
shl
mov
pop
jbe
clc
pop
fadd
add
das
clc
pop
loopne
jp
mov
cmps
push
jb
push
xor
jp
mov
rol
or
adc
xor
sar
add
mov
add
out
lsl
sub
das
xchg
mov
or
lods
mov
xchg
pop
jge
sbb
jbe
ins
movs
add
clc
pop
jne
call
jmp
sbb
mov
rcr
pop
jp
ins
or
mov
jne
sahf
xlat
ucomiss
jne
jp
cmp
ins
(bad)
scas
movs
jne
xchg
mov
push
sub
das
xchg
xor
das
xchg
ror
add
add
adc
mov
bound
pop
je
xchg
mov
cmps
push
jb
push
push
cmp
sub
mov
and
mov
pop
pop
jle
clc
pop
loop
xchg
pop
mov
cmps
fisubr
ins
xchg
mov
push
xchg
pop
test
xchg
or
ror
mov
sbb
das
adc
fiadd
xor
cs
pop
jne
mov
mov
dec
ss
pop
mov
pop
je
and
push
mul
(bad)
cmp
add
mov
pop
loopne
clc
pop
loopne
clc
pop
loopne
clc
pop
loopne
clc
pop
loop
xchg
pop
mov
xor
(bad)
mov
pushf
loopne
les
mov
ins
xchg
mov
pop
xchg
pop
or
add
mov
clc
pop
fadd
movs
mov
(bad)
in
mov
clc
pop
fadd
movs
mov
(bad)
hlt
jb
das
clc
pop
fadd
movs
mov
mov
pop
fadd
movs
mov
(bad)
aam
mov
sbb
loopne
les
mov
outs
xchg
mov
pop
xchg
pop
loopne
les
mov
outs
xchg
mov
pop
xchg
pop
loopne
les
mov
ins
xchg
mov
pop
xchg
pop
loopne
les
mov
ins
xchg
mov
pop
xchg
pop
add
mov
pop
fadd
movs
mov
(bad)
js
mov
clc
pop
fadd
movs
mov
(bad)
dec
jge
das
clc
pop
fadd
movs
mov
(bad)
pop
jge
das
clc
pop
fadd
movs
mov
(bad)
sub
das
sbb
aad
push
lsl
ret
or
sahf
cmps
push
ins
cmps
xlat
cmps
add
clc
cmps
jne
jp
retf
das
jp
lods
das
xchg
stc
stos
mov
adc
mov
movs
mov
(bad)
mov
cmps
jne
adc
enter
lods
das
xchg
stc
mov
rcr
icebp
adc
mov
movs
mov
(bad)
pushf
jge
das
sbb
loopne
ins
outs
cmps
mov
pop
(bad)
shl
das
cli
test
xchg
xor
cmps
jbe
outs
xchg
mov
or
outs
xchg
mov
mov
mov
test
xchg
xor
cmps
inc
pop
outs
xchg
mov
or
outs
mov
mov
enter
or
xchg
xor
cmps
jb
outs
xchg
mov
or
outs
stos
mov
pop
bound
ret
retf
test
xchg
xor
cmps
jp
outs
xchg
mov
or
mov
jne
push
sti
enter
lods
das
xchg
stc
xchg
mov
pop
loop
adc
mov
movs
mov
(bad)
fdivr
int
dec
jp
mov
fst
adc
loop
dec
sbb
mov
push
xor
rcr
(bad)
pop
cmps
jne
adc
retf
das
adc
loopne
ret
or
or
(bad)
lock
das
sbb
loopne
ins
outs
mov
das
(bad)
ror
sar
pop
jb
xlat
stos
fiadd
xor
jg
xchg
xchg
xor
rcr
das
nop
pop
mov
mov
push
sub
xor
outs
xchg
xor
push
jno
fist
mov
jg
dec
loopne
cli
pop
mov
rcr
cmc
dec
sbb
or
sbb
sbb
movs
mov
inc
add
das
sbb
jb
xlat
stos
or
test
jle
dec
loop
xchg
fcmovu
inc
dec
test
das
cli
adc
xor
das
xor
sub
xor
inc
xchg
xor
inc
xchg
xor
das
clc
pop
loopne
clc
push
loopne
jp
scas
das
xchg
ror
nop
movs
das
xchg
xor
sbb
imul
xchg
xor
outs
xchg
xor
outs
xchg
xor
das
clc
ds
cli
pop
mov
ret
hlt
rcr
cmc
dec
sbb
or
sbb
sbb
movs
mov
inc
xor
sub
clc
jb
das
xchg
pop
fiadd
or
ins
xchg
xor
das
xor
sub
xor
outs
xchg
xor
outs
xchg
xor
das
cli
cli
mov
xchg
xor
jg
xchg
push
ins
xchg
xor
rcr
das
jp
scas
das
xchg
stc
xchg
mov
pop
jne
cmps
(bad)
clc
pop
jne
(bad)
cli
retf
das
clc
dec
loop
xchg
pop
mov
pop
mov
clc
jb
das
xchg
pop
fiadd
or
cli
adc
xor
das
xor
outs
xchg
xor
outs
xchg
xor
ins
xchg
xor
inc
div
and
xchg
pop
loopne
cli
pop
mov
rcr
stos
dec
sbb
or
sbb
das
clc
pop
loop
xchg
pop
mov
jae
das
xchg
xor
cmc
rcr
das
cli
sbb
(bad)
bndstx
das
clc
pop
jne
cmps
(bad)
clc
pop
jne
repnz
enter
mov
xchg
xor
das
clc
and
sub
fcmovu
inc
dec
test
das
cli
fist
xchg
xor
das
xor
sub
shl
push
dec
inc
xchg
movs
mov
inc
xchg
movs
mov
inc
mov
data16
xchg
pop
mov
pop
mov
cli
pop
mov
rcr
stos
dec
sbb
or
pop
sub
or
mov
jne
cmps
(bad)
clc
pop
jne
(bad)
cli
retf
das
clc
dec
loopne
cli
mov
loop
xchg
pop
loop
xchg
pop
fiadd
or
cli
adc
xor
das
xor
sub
fstp
mov
mov
movs
mov
inc
xchg
movs
mov
inc
xor
das
xchg
pop
loop
xchg
pop
mov
pop
mov
cli
pop
mov
ret
cmc
rcr
cmc
dec
sbb
or
pop
sub
sbb
sbb
movs
mov
inc
xor
inc
mov
das
cli
cdq
mov
xchg
xor
ins
dec
sbb
das
clc
pop
bound
mov
mov
pop
jne
cmps
(bad)
clc
pop
jne
(bad)
cli
retf
das
clc
dec
loop
xchg
pop
mov
pop
mov
clc
ds
xchg
pop
fiadd
or
cli
adc
xor
das
xor
jb
push
dec
inc
xchg
movs
mov
inc
xchg
movs
mov
inc
xor
inc
fcomp
das
cli
cli
mov
xchg
xor
sub
mov
or
mov
push
stc
enter
jne
cmps
(bad)
clc
pop
jne
repnz
enter
loop
xchg
pop
mov
pop
mov
clc
dec
loop
xchg
fcmovu
inc
dec
test
das
cli
pop
push
ins
xchg
xor
jl
pop
mov
pop
jne
cmps
(bad)
clc
pop
jne
repnz
enter
loop
xchg
pop
mov
pop
mov
clc
dec
loop
xchg
fcmovu
inc
add
enter
push
ins
xchg
xor
cmp
iret
retf
mov
loopne
ins
outs
mov
das
ins
outs
jmp
jb
repz
pop
mov
xor
repz
sbb
das
cli
pop
mov
xchg
mov
push
xchg
pop
sub
or
movs
mov
inc
xchg
movs
mov
inc
mov
out
inc
addr16
mov
clc
dec
loop
xchg
fcmovu
inc
dec
test
das
cli
pop
push
ins
xchg
xor
mov
pop
mov
pop
jne
cmps
(bad)
clc
pop
jne
(bad)
cli
retf
das
clc
dec
loop
xchg
pop
mov
pop
mov
clc
inc
loop
xchg
fcmovu
inc
jno
enter
push
ins
xchg
xor
das
xor
sub
mov
xlat
ins
movs
xor
jne
iret
ret
sbb
jne
int3
xchg
dec
jp
mov
fst
adc
loop
dec
sbb
or
push
xor
rcr
mov
(bad)
sbb
loopne
ins
outs
xor
pop
mov
jp
xchg
das
xchg
(bad)
ret
inc
xchg
movs
mov
inc
xchg
or
push
jno
fcmovnb
ror
xlat
mov
pop
loopne
cli
pop
mov
rcr
into
dec
sbb
das
jp
stos
das
xchg
stc
into
(bad)
rcr
das
ins
outs
mov
das
ret
movs
xlat
mov
bound
xor
das
adc
loop
dec
sbb
das
clc
pop
bound
(bad)
adc
loopne
ins
outs
mov
das
ins
outs
into
(bad)
rcr
add
mov
bound
xor
inc
xchg
sub
or
repz
sbb
das
clc
pop
bound
mov
mov
pop
loopne
clc
pop
loopne
clc
pop
loopne
clc
pop
loopne
clc
pop
loop
nop
pop
mov
xor
(bad)
adc
das
sbb
shl
mov
xor
outs
mov
das
ins
outs
jmp
ds
clc
dec
loop
xchg
fcmovu
inc
dec
test
das
cli
fist
xchg
xor
das
xor
jb
push
dec
inc
call
pop
loop
xchg
pop
mov
cmps
mov
outs
xchg
mov
xor
sbb
cs
pop
jne
jp
retf
das
jp
xchg
das
xchg
fidiv
sbb
dec
loopne
clc
pop
loop
xchg
pop
mov
cmps
mov
outs
xchg
mov
xor
pop
loopne
cli
adc
das
xchg
movs
mov
(bad)
aam
mov
clc
pop
jne
cmps
(bad)
clc
pop
jne
repnz
enter
mov
xchg
xor
inc
xchg
pop
or
xchg
xchg
xor
cmc
rcr
das
jp
xchg
das
xchg
stc
or
test
mov
clc
pop
jne
cmps
(bad)
clc
pop
jne
repnz
enter
mov
xchg
xor
das
xchg
pop
loop
xchg
fcmovu
inc
dec
test
das
cli
fist
xchg
xor
das
xor
outs
xchg
mov
fisubr
loopne
ins
outs
mov
das
ins
outs
into
(bad)
rcr
aas
cli
fisttp
inc
xchg
das
cli
pop
mov
ret
cmc
rcr
cmc
dec
sbb
xor
sbb
cmps
push
xor
outs
xchg
xor
outs
xchg
xor
das
xchg
pop
loop
xchg
pop
mov
pop
mov
sbb
xchg
xor
rcr
das
jp
xchg
das
xchg
stc
mov
das
ins
outs
mov
das
ins
outs
into
(bad)
rcr
aas
cli
cmps
mov
xchg
xor
das
xchg
pop
loopne
cli
pop
mov
ret
cmc
rcr
cmc
dec
sbb
xor
sbb
sbb
movs
mov
inc
xor
inc
sub
das
cli
cli
mov
xchg
xor
sub
mov
or
and
pop
mov
pop
jne
cmps
(bad)
clc
pop
jne
(bad)
cli
retf
das
clc
dec
loop
xchg
pop
mov
pop
mov
clc
inc
loop
xchg
pop
fiadd
or
cli
adc
xor
das
xor
sub
xor
outs
xchg
xor
outs
xchg
xor
das
cli
movs
mov
xchg
xor
cli
or
push
hlt
rcr
das
jp
xchg
das
xchg
stc
sub
outs
mov
das
ins
outs
jmp
fmul
inc
xchg
mov
adc
loop
xor
mov
or
cli
pop
mov
xchg
mov
xor
sbb
das
xchg
xor
outs
xchg
xor
ins
xchg
xor
inc
xchg
mov
adc
loop
dec
sbb
das
cli
pop
mov
xchg
mov
xor
sbb
sbb
movs
mov
inc
mov
out
inc
int
sahf
inc
xchg
pop
or
xchg
xchg
xor
das
nop
pop
mov
jl
mov
xor
outs
xchg
xor
outs
xchg
xor
outs
xchg
xor
das
cli
sbb
inc
xchg
pop
or
mov
jo
rcr
das
jp
xchg
das
xchg
stc
adc
movs
jne
push
jb
push
mov
fld
aad
pop
cdq
fbld
ror
adc
loopne
cli
fimul
inc
xchg
xor
scas
ins
das
add
inc
mov
sbb
mov
xchg
or
movs
mov
cmps
push
shl
push
dec
jns
sti
xchg
das
xchg
(bad)
rcl
pop
mov
pop
pop
jp
pop
pop
jle
pop
pop
jbe
ins
das
call
pop
mov
adc
or
mov
shl
pop
loopne
ins
das
jbe
rol
ins
xchg
movs
jmp
ins
das
add
mov
xchg
cmps
xlat
mov
loopne
clc
pop
pop
push
or
xor
fwait
rcr
cs
pop
or
push
clc
jne
adc
mov
gs
dec
jo
add
(bad)
shr
jle
mov
xchg
or
xchg
lahf
inc
xor
pushf
and
xchg
pop
loop
and
mov
ins
or
mov
cmps
bound
cmps
push
mov
xor
pop
mov
sbb
jne
out
movs
mov
xor
lahf
rcr
stos
xchg
movs
jne
ret
aaa
xchg
pop
or
pop
(bad)
ds
cmp
xchg
xlat
comiss
jne
jp
xchg
das
xchg
(bad)
rcl
jmp
ins
movs
fcmovb
fs
mov
adc
push
ins
pop
(bad)
ds
dec
cmp
xlat
comiss
jne
jp
popf
das
xchg
(bad)
rcl
jmp
das
pop
fisttp
(bad)
push
dec
mov
adc
jne
out
loop
and
mov
ins
or
test
scas
out
movs
lea
xor
sahf
rcr
stos
xchg
movs
jne
ret
cmp
mov
jne
sbb
ds
fnstcw
ins
xchg
xlat
comiss
jne
jp
popf
das
xchg
(bad)
rcr
jmp
das
pop
fisttp
(bad)
enter
adc
jne
out
loop
and
mov
ins
or
test
scas
out
movs
sbb
pop
pop
stos
xchg
movs
jne
ret
cmp
stos
add
adc
jne
out
loop
and
mov
ins
or
test
scas
out
movs
xchg
xor
stos
xchg
movs
jne
ret
cmp
push
(bad)
ds
(bad)
xchg
xlat
comiss
jne
jp
pushf
das
xchg
xor
not
pop
loop
dec
sbb
shr
loop
or
mov
push
mov
push
ins
xchg
xor
rcr
outs
or
cmps
jne
cli
call
xchg
pop
or
mov
ror
xlat
ins
movs
jne
push
mov
shr
aam
pop
cwde
mov
(bad)
shr
les
das
jle
adc
xlat
mov
lods
fadd
call
push
mov
lds
bound
jge
jne
push
push
sub
push
loopne
lds
aad
leave
pop
dec
sub
mov
daa
xchg
pop
fnstcw
in
ins
mov
fbld
in
das
xchg
lods
ins
cmps
pop
mov
dec
inc
loopne
enter
fsubr
fcmovb
test
jp
nop
das
xchg
jecxz
das
xchg
pop
adc
imul
fsubr
jne
das
test
(bad)
ds
idiv
ins
xchg
xlat
cmpps
jg
mov
das
xchg
fidiv
fsubr
jne
out
loop
and
mov
ins
or
xchg
cmps
bound
cmps
push
fidiv
fsubr
jne
out
loop
and
mov
ins
or
xchg
scas
das
test
(bad)
ds
pop
cmp
xlat
cmpps
jg
iret
lahf
das
xchg
fidiv
fsubr
jne
out
loop
and
mov
ins
or
xchg
scas
jl
mov
xchg
fidiv
fsubr
jne
out
loop
and
mov
ins
or
xchg
scas
das
test
(bad)
ds
adc
cmpps
jg
sbb
fsubr
jne
out
loop
and
mov
ins
or
xchg
cmps
bound
cmps
push
fidiv
fsubr
jne
out
loop
and
mov
ins
or
xchg
scas
das
test
(bad)
ds
lock
xlat
cmpps
jg
mov
das
xchg
fidiv
fsubr
jne
out
loop
and
mov
ins
or
xchg
cmps
bound
jge
ins
ror
test
(bad)
ds
mov
ins
xchg
xlat
cmpps
jg
neg
fsubr
jne
out
loop
sbb
shr
bound
test
(bad)
ds
jp
ins
xchg
xlat
cmpps
jg
and
(bad)
rcr
stos
jg
jne
ret
ret
add
gs
jne
sbb
inc
sbb
mov
shr
dec
aas
sbb
(bad)
fsubr
or
mov
mov
shr
test
sbb
or
test
das
cli
sub
ins
xchg
mov
in
ins
movs
or
call
es
push
psllw
pop
mov
adc
jbe
ins
movs
mov
push
xchg
mov
xchg
fidiv
shr
jne
popf
fbstp
xchg
ins
cmps
jne
test
(bad)
xchg
pop
mov
pop
movs
jbe
ins
pop
pop
stos
push
jne
ret
not
pop
pop
stos
outs
cmps
jne
ret
aaa
xchg
pop
or
sahf
loop
or
fist
ins
movs
add
adc
jb
ins
movs
mov
mov
aaa
xchg
pop
xor
add
fwait
jge
push
mov
mov
cmps
push
sbb
jne
popf
ffree
sub
repnz
retf
das
nop
das
mov
das
cli
jo
ins
xchg
xlat
psrlq
jg
push
xchg
das
xchg
(bad)
pop
mov
sti
enter
push
ins
xchg
xlat
psrlq
jne
jp
popf
das
xchg
(bad)
jns
loop
xchg
pop
mov
ins
or
xchg
cmps
bound
jge
ins
ror
cmps
jb
ins
or
aas
dec
sbb
shr
bound
xchg
or
pop
fbstp
ins
movs
fcmovb
pop
dec
mov
adc
je
ins
or
xchg
mov
ins
(bad)
ret
shr
jne
cli
mov
psrlq
jne
jp
popf
das
xchg
(bad)
clc
pop
pop
stos
outs
mov
sub
xchg
pop
loopne
cli
scas
push
ins
xchg
xlat
psrlq
jne
jp
pop
shr
dec
and
pop
mov
pop
fbstp
ins
movs
or
xchg
or
test
jbe
fbstp
ins
movs
xor
ror
sti
movs
jne
push
fnstenv
xlat
push
jne
popf
fdivr
call
sub
xor
rcr
stos
outs
mov
jb
xchg
pop
or
xor
popf
rcr
stos
outs
movs
jne
ret
cmp
outs
movs
jne
ret
cmp
lods
jne
jns
add
adc
(bad)
shr
add
dec
add
push
fimul
das
jns
jne
dec
lods
jne
adc
push
fsubr
mov
fisttp
pop
mov
daa
mov
psrlq
jg
mov
xchg
xlat
psrlq
jg
daa
pushf
das
xchg
(bad)
pop
fbstp
ins
movs
fcmovb
push
dec
mov
sbb
pop
fsubr
pop
xchg
outs
movs
jne
lds
add
pop
lea
lds
retf
dec
mov
sbb
jle
ins
movs
xor
je
pavgw
jne
push
xlat
psrlq
jne
ins
out
jle
ins
movs
bound
mov
ins
or
sbb
shr
add
pop
lea
lds
pop
stos
push
jne
ret
shl
scas
jb
ins
xor
clc
pop
bound
pop
mov
xchg
fwait
das
xchg
xlat
psrlq
jne
shl
(bad)
xor
xchg
pop
pop
ja
ins
movs
aas
ret
push
jne
ror
adc
outs
in
mov
mov
mov
aad
movs
aad
leave
xchg
dec
sub
cmp
aas
xchg
pop
fnstcw
loope
sub
or
xchg
sbb
cmp
xor
das
jp
cwde
das
xchg
ror
mov
es
cs
jg
pop
fwait
das
xchg
xor
das
retf
rcl
dec
ror
xlat
push
sub
or
or
outs
xchg
into
mov
xchg
fstp
call
(bad)
retf
das
jp
fwait
das
xchg
xor
xchg
pop
loop
xor
mov
mov
das
jp
fwait
das
xchg
or
xchg
cmps
dec
imul
xor
stos
and
daa
jp
call
sti
enter
cmp
ins
movs
fcmovb
pop
jne
adc
mov
popf
fist
out
enter
scas
pop
sbb
ins
xchg
fisttp
scas
pop
mov
or
mov
sub
add
gs
aad
fwait
jae
mov
ror
push
sbb
aad
iret
sub
stos
and
mov
(bad)
cld
dec
mov
popf
in
aaa
cwde
jg
jne
inc
pop
call
fdivr
jo
push
mov
pop
jbe
pushf
or
repz
push
addr16
stos
and
ror
cwde
jg
jne
call
das
xchg
pushf
jo
jp
sahf
das
xchg
ror
push
pop
jmp
push
fbld
ret
mov
shr
pop
stos
xor
xor
mov
pop
loop
dec
sbb
shr
bound
xchg
inc
xchg
xlat
jl
pop
fistp
shr
(bad)
fmul
das
pop
fild
ret
ins
movs
fcmovb
test
adc
xor
mov
call
mov
mov
ins
or
sbb
dec
pop
push
cmps
push
xor
das
cli
out
ins
xchg
xor
mov
pop
loop
dec
sbb
das
jp
cdq
das
xchg
rcl
dec
ror
das
cmp
xlat
mov
xchg
mov
mov
popa
cmp
inc
es
cli
retf
xchg
xor
pop
loop
xor
mov
clc
dec
mov
pop
out
shr
sbb
mov
das
sub
das
xchg
test
push
ins
xchg
xor
mov
pop
loop
dec
sbb
das
jp
cdq
das
xchg
rcl
dec
ror
das
mov
mov
xchg
mov
mov
popa
cmp
inc
xor
sub
xor
pop
loop
or
mov
cwde
dec
mov
adc
shr
mov
xchg
fwait
pop
mov
popa
inc
mul
pop
loopne
clc
pop
loopne
clc
pop
loop
xchg
pop
retf
(bad)
retf
das
jp
test
xchg
ror
fwait
clc
pop
loopne
clc
pop
fcmovb
xor
das
push
pop
xor
popf
pop
mov
pop
out
shr
bound
pop
mov
ins
fld
rcr
mov
xchg
das
jae
xchg
xlat
call
daa
mov
rol
movs
call
xchg
xor
inc
nop
xor
rcr
pop
es
and
movs
test
xchg
xlat
iret
xchg
ret
call
fwait
das
xchg
xlat
pop
call
retf
pop
mov
xor
jg
out
shr
shl
out
bound
pop
mov
xlat
iret
xchg
ret
inc
bound
ds
sahf
in
xchg
lods
imul
jg
jne
push
movs
call
xchg
xlat
(bad)
into
dec
sbb
not
outs
adc
jecxz
pop
jnp
rcr
push
xor
das
jp
test
xchg
ror
sti
sbb
loop
in
pop
mov
mov
and
popf
iret
repz
pop
mov
clc
pop
bound
xlat
xor
cmps
pop
mov
jno
setg
jne
pop
jmp
xlat
out
das
xchg
pop
dec
push
pop
mov
xchg
popf
iret
out
pop
mov
sbb
pop
push
or
popf
pop
mov
movs
mov
inc
xchg
xor
inc
xchg
xor
das
cli
mov
imul
pop
loopne
jp
test
xchg
stc
mov
pop
aaa
mov
cli
into
cmp
xor
and
inc
cmp
ins
(bad)
jp
xchg
xchg
mov
xchg
(bad)
add
iret
push
ins
xchg
mov
and
sbb
das
xchg
ror
cmp
scas
push
sub
das
xchg
mov
and
movs
pop
cmp
call
ins
pop
mov
xchg
rcl
dec
ror
pop
loop
shr
pop
stos
ds
rol
xor
fwait
rcr
push
dec
sbb
das
cli
pop
mov
adc
or
mov
pop
xchg
fldcw
das
push
pop
out
rcr
das
xchg
pop
bound
cmp
shr
xchg
xlat
ja
clc
pop
loopne
cli
xchg
cli
outs
xchg
xor
and
push
mov
pop
fbld
shr
inc
xchg
xor
das
clc
pop
loopne
jp
xchg
xchg
or
sahf
pop
mov
xor
xchg
pop
loopne
ins
outs
mov
pushf
pop
mov
mov
iret
retf
ret
and
add
pop
pop
outs
jg
retf
test
xchg
xor
mov
mov
call
push
dec
mov
mov
mov
ror
sub
in
xchg
lods
ins
cmps
xlat
cmps
add
sbb
xchg
pop
mov
in
push
or
nop
push
push
inc
xchg
pop
mov
push
push
mov
scas
dec
mov
xchg
push
push
dec
nop
pop
mov
sbb
ds
pop
mov
push
and
mov
xchg
pop
test
jnp
sub
fnstenv
das
popf
ficomp
xchg
pop
loop
dec
sbb
ins
xchg
mov
retf
ins
movs
add
sbb
loop
dec
sbb
shr
mov
ins
movs
or
adc
retf
outs
movs
jne
pop
mov
ins
or
jbe
jne
jp
xchg
xchg
push
dec
and
fisttp
jmp
movs
jne
ins
outs
into
(bad)
rcr
in
pop
mov
push
cs
pop
xchg
ins
jno
sti
outs
movs
jne
jp
add
mov
movs
mov
out
add
mov
movs
or
xchg
rcr
jmp
jne
pop
xchg
ja
ins
arpl
mov
mov
maskmovq
imul
jne
sbb
push
shr
mov
rol
xor
imul
mov
in
push
mov
sbb
or
imul
enter
push
mov
imul
enter
ds
xchg
shl
push
dec
lods
mov
ds
xchg
pop
or
loop
enter
xchg
cmps
xor
ins
xchg
mov
les
shr
xchg
pop
test
ins
outs
loop
rcr
ja
movs
jne
jnp
lea
xchg
shl
push
dec
mov
pop
and
outs
lea
xchg
xor
das
jnp
lea
xchg
sti
mov
call
int3
sahf
pop
mov
pop
mov
shr
dec
(bad)
xchg
pop
mov
sbb
sahf
cmps
pop
scas
je
ins
fisttp
mov
retf
xchg
cs
adc
sub
cs
xchg
push
outs
xchg
cs
outs
xchg
cmps
adc
into
sub
cs
adc
sub
cs
adc
cli
sub
cs
adc
push
adc
adc
dec
adc
test
(bad)
aas
jp
xchg
xchg
ror
fld
adc
sub
cs
adc
adc
das
xchg
dec
call
push
mov
cli
movs
jne
xchg
movs
(bad)
aas
jp
xchg
xchg
fisttp
jmp
shr
or
xchg
xlat
maskmovq
imul
jne
jp
xchg
xchg
ror
retf
outs
movs
jne
scas
pop
mov
sbb
loop
xchg
pop
mov
ins
or
jp
retf
das
jp
sub
fidiv
shr
das
out
loopne
clc
pop
loop
dec
sbb
and
pop
jne
jp
retf
das
jp
sub
mov
sub
movs
jne
sbb
jnp
ins
movs
dec
stos
pusha
cmps
jne
xchg
fidiv
cs
fist
das
xchg
pop
loop
xchg
pop
mov
ins
or
push
sti
enter
sub
xlat
pop
shr
lods
pop
movs
retf
pop
mov
fnstenv
loopne
loopne
cli
add
ins
xchg
xlat
pop
shr
jl
cmps
sbb
ins
(bad)
scas
movs
jne
xchg
das
stos
inc
xchg
xor
das
clc
pop
bound
cmps
fisubr
ins
xchg
mov
and
xchg
pop
mov
gs
jne
sbb
jne
ret
fisubr
jne
cli
ja
ins
xchg
xlat
pmaxub
jne
jp
xchg
xchg
(bad)
cli
movs
mov
xchg
xlat
psrld
jg
outs
xchg
mov
fwait
pop
mov
ins
pop
dec
clc
pop
loopne
cli
push
push
ins
xchg
xor
das
ins
outs
xchg
mov
fwait
pop
mov
jbe
mov
pop
xlat
ja
ins
movs
or
ins
sbb
adc
mov
mov
xor
rcr
das
jp
sub
movs
mov
(bad)
and
mov
jnp
mov
xchg
pushf
psrlq
das
jns
test
ins
ror
sub
jne
scas
push
sub
pop
loopne
cli
mov
mov
pop
push
mov
ins
outs
xchg
mov
fwait
pop
mov
loop
mov
adc
jbe
ins
movs
mov
ins
call
mov
mov
ins
or
stos
arpl
cmps
not
pop
pop
stos
arpl
mul
pop
or
xor
das
xchg
pop
pop
stos
outs
movs
jne
ret
scas
xor
mov
je
mov
adc
ja
ins
movs
mov
xor
clc
rcr
das
jp
sub
movs
mov
(bad)
ins
push
mov
jnp
mov
xchg
xlat
psrld
jg
fistp
ins
movs
fiadd
or
pop
fistp
ins
movs
fcmovb
mov
das
adc
mov
pop
fbstp
ins
movs
fcmovbe
cmps
jbe
outs
xchg
mov
daa
xchg
pop
or
xchg
das
stos
inc
xchg
xor
das
clc
pop
(bad)
rcr
adc
daa
xchg
pop
arpl
gs
stos
das
xchg
xlat
psrld
jg
fistp
ins
movs
fiadd
(bad)
enter
jnp
ins
movs
fcmovb
and
das
adc
mov
pop
fbstp
ins
movs
fcmovbe
cmps
jb
outs
xchg
mov
daa
xchg
pop
or
xchg
das
stos
inc
xchg
xor
das
clc
pop
bound
cmps
jb
outs
xchg
mov
daa
xchg
pop
arpl
xchg
pop
mov
ins
fld
rcr
mov
xchg
das
jae
push
dec
clc
pop
loopne
cli
jbe
ins
xchg
xor
das
ins
outs
mov
rcl
pop
mov
push
fbstp
ins
movs
mov
scas
push
cmp
imul
adc
and
inc
xchg
xor
das
clc
pop
bound
pop
mov
cmps
jb
outs
xchg
mov
sub
pop
mov
ins
pop
add
scas
pop
clc
xchg
adc
pop
stos
outs
movs
jne
ret
fisubr
jne
cli
ja
ins
xchg
xlat
pmaxub
jne
jp
sub
(bad)
cli
movs
mov
xchg
xlat
psrld
jg
outs
stos
mov
pop
bound
xchg
pop
mov
ins
pop
dec
clc
pop
loopne
cli
dec
pop
ins
xchg
xor
das
ins
outs
stos
mov
pop
bound
pop
mov
rcr
das
push
fbstp
ins
movs
mov
scas
push
cmp
push
fimul
adc
and
inc
xchg
xor
das
clc
pop
bound
mov
cmps
jp
outs
xchg
mov
sub
pop
mov
ins
pop
pop
mov
adc
mov
out
test
ins
arpl
cmp
gs
scas
pop
mov
ins
or
stos
arpl
cmps
not
pop
pop
stos
arpl
jbe
xchg
pop
or
and
gs
pop
jge
sbb
outs
shr
add
sbb
loopne
clc
pop
loopne
cli
pop
mov
shl
retf
pop
bound
stos
je
ins
xor
shl
stos
je
ins
mov
sub
out
enter
int
lahf
push
outs
xchg
fld
rcr
mov
xchg
das
jae
push
xor
shr
fld
ret
retf
out
jp
ins
movs
(bad)
call
xchg
xlat
movnti
jne
clc
pop
loop
jb
mov
daa
stos
je
ins
mov
sub
cmps
jne
adc
mov
out
loopne
pop
iret
data16
fdivr
(bad)
jnp
ins
movs
fnop
daa
stos
je
ins
mov
sub
fbld
ins
movs
fiadd
xor
rcr
call
(bad)
das
xchg
movs
aas
fild
(bad)
ins
pop
mov
ins
outs
into
(bad)
rcr
test
mov
xor
das
xchg
sbb
lar
mov
xor
mov
sbb
jp
ins
movs
add
mov
pop
loopne
clc
pop
jne
bound
das
xchg
xlat
xchg
pop
movs
retf
pop
mov
ror
xchg
xlat
pop
ret
outs
movs
jne
shl
(bad)
rcr
call
mov
xchg
xor
shr
loopne
cli
mov
ins
xchg
movs
aas
fild
mov
mov
call
mov
xchg
popf
pop
sbb
inc
xchg
xor
das
cli
and
xchg
xor
fwait
rcr
cs
pop
or
xor
jne
adc
mov
(bad)
pop
pop
mov
sbb
popa
ds
das
sahf
shl
dec
jne
sahf
movs
jmp
jp
(bad)
das
xchg
add
call
push
fnstcw
sar
daa
sub
shl
push
dec
movs
xlat
push
mov
xchg
pop
mov
pop
mov
aas
fwait
push
psubsb
fisubr
ins
xchg
das
adc
xchg
mov
sub
push
mov
test
pop
jmp
pop
bound
cmps
fisubr
ins
xchg
das
adc
xchg
mov
sub
(bad)
out
jne
mov
retf
cmp
xor
sbb
pop
or
pop
mov
sbb
jb
push
popa
mov
pop
cdq
movs
mov
(bad)
mov
outs
stos
mov
pop
(bad)
cmp
addr16
fwait
rcr
pop
cdq
movs
mov
mov
dec
rcr
pop
mov
mov
push
push
xor
jne
iret
fistp
popf
mov
mov
pop
jmp
sbb
mov
adc
enter
add
scas
(bad)
sbb
mov
mov
pop
add
mov
retf
das
test
pop
jmp
sbb
mov
mov
pop
add
jmp
mov
pop
jmp
sbb
mov
pop
mov
push
sti
enter
add
mov
retf
das
fwait
cmp
shl
dec
jne
sahf
or
(bad)
in
mov
jns
add
mov
add
out
dec
mov
xchg
pop
jne
call
das
xchg
pop
jne
sahf
test
mov
xchg
pop
jne
sub
das
xchg
pop
jne
xchg
mov
xchg
pop
jne
mov
enter
mov
xchg
pop
jne
mov
retf
xchg
pop
jne
mov
retf
xchg
pop
jne
cmps
test
mov
xchg
pop
fbld
sub
mov
sbb
test
outs
ret
sub
ror
rcr
popf
int
xchg
sbb
jo
mov
dec
pop
xchg
fnstenv
out
popa
cs
xor
fwait
call
popa
xor
das
clc
pop
fld
or
jge
jne
pop
cdq
shr
xchg
ja
aas
xchg
pop
movntps
pop
stc
les
movs
imul
pop
add
push
mov
shr
jo
cmp
push
mov
mov
sbb
out
jle
fdiv
int3
or
sub
mov
xchg
pop
jne
shr
mov
xchg
pop
jne
(bad)
test
mov
xchg
pop
jne
fisubr
mov
xchg
pop
jne
fisubr
mov
xchg
pop
jne
ret
das
add
mov
xchg
pop
jne
(bad)
test
mov
xchg
pop
jne
retf
das
add
mov
xchg
pop
jne
into
test
mov
xchg
pop
jne
repnz
mov
xchg
pop
jne
imul
mov
xchg
pop
jne
cli
test
mov
xchg
pop
jne
(bad)
test
mov
xchg
pop
jne
loop
enter
mov
xchg
pop
jne
out
enter
mov
xchg
pop
jne
jmp
das
xchg
pop
jne
out
test
mov
xchg
pop
jne
adc
mov
xchg
pop
jne
push
test
mov
xchg
pop
jne
sbb
mov
xchg
pop
jne
push
test
mov
xchg
pop
jne
add
mov
xchg
pop
jne
push
test
mov
xchg
pop
jne
or
mov
xchg
pop
jne
push
test
mov
xchg
pop
jne
xor
mov
xchg
pop
jne
ss
mov
xchg
pop
jne
cmp
mov
xchg
pop
jne
ds
mov
xchg
pop
jne
and
mov
xchg
pop
jne
es
mov
xchg
pop
jne
sub
mov
xchg
pop
jne
cs
mov
xchg
pop
jne
push
test
mov
xchg
pop
jne
push
test
mov
xchg
pop
jne
pop
test
mov
xchg
pop
jne
pop
test
mov
xchg
pop
jne
inc
test
mov
xchg
pop
jne
inc
test
mov
xchg
pop
jne
dec
test
mov
xchg
pop
jne
dec
test
mov
xchg
pop
jne
jb
enter
mov
xchg
pop
jne
jbe
enter
mov
xchg
pop
jne
jp
enter
mov
xchg
pop
jne
jle
enter
mov
xchg
pop
jne
push
enter
mov
xchg
pop
jne
outs
test
mov
xchg
pop
jne
xchg
scas
enter
mov
xchg
pop
jne
xchg
scas
enter
mov
xchg
pop
jne
call
das
xchg
pop
jne
sahf
scas
enter
mov
xchg
pop
jne
sub
das
xchg
pop
jne
xchg
mov
xchg
pop
jne
mov
mov
xchg
pop
jne
mov
mov
xchg
pop
jne
mov
enter
mov
xchg
pop
jne
mov
enter
mov
xchg
pop
jne
mov
retf
xchg
pop
jne
mov
retf
xchg
pop
jne
mov
retf
xchg
pop
jne
cmps
scas
enter
mov
xchg
pop
jne
stos
scas
enter
mov
xchg
pop
jne
scas
scas
enter
mov
xchg
pop
jne
shr
mov
xchg
pop
jne
(bad)
scas
enter
mov
xchg
pop
jne
fisubr
mov
xchg
pop
jne
fisubr
mov
xchg
pop
jne
ret
das
add
mov
xchg
pop
jne
(bad)
scas
enter
mov
xchg
pop
jne
retf
das
add
mov
xchg
pop
jne
into
scas
enter
mov
xchg
pop
jne
repnz
enter
mov
xchg
pop
jne
imul
mov
xchg
pop
jne
loop
enter
mov
xchg
pop
jne
out
enter
mov
xchg
pop
jne
jmp
das
xchg
pop
jne
out
scas
enter
mov
xchg
pop
jne
adc
mov
xchg
pop
jne
push
scas
enter
mov
xchg
pop
jne
add
mov
xchg
pop
jne
push
scas
enter
mov
xchg
pop
jne
or
mov
xchg
pop
jne
push
scas
enter
mov
xchg
pop
jne
xor
mov
xchg
pop
jne
ss
enter
mov
xchg
pop
jne
cmp
mov
xchg
pop
jne
ds
enter
mov
xchg
pop
jne
sub
mov
xchg
pop
jne
cs
enter
mov
xchg
pop
jne
push
scas
enter
mov
xchg
pop
jne
push
scas
enter
mov
xchg
pop
jne
pop
scas
enter
mov
xchg
pop
jne
pop
scas
enter
mov
xchg
pop
jne
inc
scas
enter
mov
xchg
pop
jne
inc
scas
enter
mov
xchg
pop
jne
dec
scas
enter
mov
xchg
pop
jne
dec
scas
enter
mov
xchg
pop
jne
jb
enter
mov
xchg
pop
jne
jbe
enter
mov
xchg
pop
jne
jp
enter
mov
xchg
pop
jne
jle
enter
mov
xchg
pop
jne
bound
mov
xchg
pop
jne
data16
enter
mov
xchg
pop
jne
push
enter
mov
xchg
pop
jne
outs
scas
enter
mov
xchg
pop
