ret
lea
jmp
mov
ret
push
mov
add
call
mov
mov
and
add
mov
mov
mov
lea
and
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
xchg
mov
cmp
je
add
xchg
mov
add
mov
xchg
cmp
je
mov
inc
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
lea
and
mov
mov
mov
mov
push
call
test
je
xchg
mov
mov
lea
push
call
test
jne
mov
mov
mov
mov
add
cmp
je
mov
mov
and
mov
lea
push
call
test
jne
mov
lea
mov
xchg
xchg
mov
mov
lea
push
call
test
je
mov
mov
lea
sub
mov
lea
mov
inc
cmp
jne
mov
mov
test
je
mov
mov
mov
mov
mov
mov
xchg
add
call
inc
cmp
jne
mov
mov
mov
mov
call
mov
mov
mov
mov
and
call
mov
add
cmp
je
mov
mov
and
mov
mov
mov
push
call
test
jne
lea
and
mov
cmp
jg
xchg
mov
mov
add
mov
mov
add
cmp
je
mov
mov
and
mov
mov
pop
ret
add
add
add
outs
add
xor
add
add
xor
outs
add
jne
xor
add
add
add
add
add
jo
bound
je
add
add
js
arpl
add
add
cmp
data16
jo
add
outs
add
add
add
aaa
add
add
add
jns
xor
push
add
add
ins
add
xor
data16
add
popa
add
add
add
in
add
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
add
cmp
je
mov
mov
and
mov
push
call
mov
mov
mov
xchg
mov
mov
pop
ret
mov
loopne
mov
sub
push
cmp
inc
dec
add
add
push
mov
add
mov
lea
sub
mov
mov
lea
mov
mov
xor
div
cmp
jne
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
xor
mov
add
dec
jmp
sub
add
and
xor
mov
sub
inc
cmp
jbe
mov
mov
lea
sub
mov
mov
lea
mov
mov
mov
not
dec
mov
sub
xor
mov
mov
add
xor
mov
mov
mov
lea
mov
mov
mov
lea
add
mov
mov
push
cld
xor
add
xor
mov
mov
pop
xor
mov
cmp
jbe
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
xor
mov
mov
xor
mov
add
jmp
add
mov
mov
mov
lea
and
xor
mov
mov
xor
mov
sub
mov
lea
mov
mov
mov
jmp
push
mov
mov
in
mov
adc
add
and
mov
pop
ret
lea
mov
mov
mov
call
mov
lea
mov
mov
mov
jmp
push
mov
mov
add
cmp
je
mov
mov
and
mov
ret
mov
push
mov
add
mov
mov
mov
xchg
mov
inc
mov
mov
add
mov
call
sub
add
and
push
mov
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
and
add
mov
push
push
call
mov
mov
push
mov
push
call
mov
mov
sub
xchg
sub
mov
mov
pop
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
call
lea
mov
mov
mov
mov
pop
ret
nop
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
jmp
push
mov
mov
in
mov
add
mov
lea
sub
mov
mov
lea
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
xor
mov
sub
add
inc
inc
sbb
xor
cmp
jne
call
jne
jmp
add
add
mov
mov
mov
inc
mov
dec
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
sub
xchg
sub
add
mov
mov
mov
lea
and
cmp
jne
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
add
mov
push
call
sub
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
cmp
je
mov
mov
inc
jmp
mov
mov
mov
pop
ret
push
mov
add
mov
add
mov
mov
mov
lea
and
mov
mov
mov
cmp
jae
mov
mov
mov
mov
xchg
mov
mov
mov
pop
ret
push
mov
add
mov
sub
add
and
mov
mov
mov
cmp
jne
mov
inc
mov
mov
add
mov
mov
mov
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
mov
add
cmp
je
mov
mov
and
mov
mov
jmp
inc
mov
mov
add
mov
xor
mov
mov
mov
xor
mov
mov
cmp
jne
mov
mov
mov
xchg
mov
inc
xor
mov
mov
cmp
jne
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
lea
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
add
cmp
je
mov
mov
and
mov
lea
mov
test
jbe
mov
mov
mov
add
mov
dec
shl
add
mov
mov
sub
xchg
sub
mov
mov
add
mov
call
cmp
jne
mov
lea
mov
mov
mov
mov
add
mov
dec
add
add
mov
mov
movzx
mov
jmp
inc
dec
jne
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
sub
xchg
sub
add
mov
add
add
mov
mov
mov
mov
mov
mov
mov
dec
mov
add
add
mov
mov
mov
mov
mov
pop
ret
ret
lea
push
mov
add
mov
mov
mov
lea
sub
mov
mov
lea
mov
mov
cmp
jne
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
call
and
add
mov
push
push
call
mov
mov
add
add
mov
mov
mov
mov
xor
mov
mov
cmp
jbe
and
add
mov
push
push
call
mov
mov
mov
mov
call
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
push
call
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
mov
mov
xchg
mov
and
sub
and
lea
push
call
test
jne
mov
sub
mov
lea
and
mov
call
mov
mov
mov
dec
call
mov
sub
mov
call
mov
call
inc
cmp
jne
mov
mov
mov
mov
mov
push
call
test
jne
mov
mov
mov
sub
add
and
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
add
mov
and
push
push
push
call
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
add
call
mov
mov
mov
call
mov
pop
ret
push
add
add
add
add
aaa
add
imul
add
add
outs
add
add
cmp
jo
jns
and
imul
add
add
outs
add
add
add
in
add
lea
push
call
call
mov
mov
push
call
test
jne
mov
mov
xchg
and
mov
inc
mov
mov
add
mov
mov
mov
cmp
jge
mov
mov
xchg
and
call
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
lea
sub
mov
call
inc
cmp
jne
mov
mov
cmp
jg
mov
and
mov
mov
mov
lea
push
call
call
lea
mov
mov
mov
cmp
jl
mov
lea
and
jmp
mov
mov
mov
mov
and
and
mov
mov
push
call
mov
mov
mov
mov
add
lea
push
call
test
jne
mov
cmp
je
mov
and
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
lea
mov
dec
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
xchg
mov
xchg
sub
add
and
mov
mov
mov
mov
lea
push
call
test
jne
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
xchg
mov
call
mov
mov
push
call
mov
lea
mov
mov
mov
mov
mov
push
call
test
jne
sub
xchg
lea
sub
mov
and
call
mov
cmp
jg
xchg
mov
mov
xchg
jmp
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
test
je
mov
mov
xchg
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
xchg
cmp
jle
xchg
jmp
mov
mov
xchg
and
mov
add
cmp
je
mov
mov
and
mov
call
mov
sub
mov
mov
mov
push
call
test
jne
mov
mov
mov
call
lea
mov
mov
mov
push
mov
call
mov
mov
mov
call
lea
push
call
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
xchg
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jg
mov
mov
xchg
mov
mov
and
call
mov
add
cmp
je
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
and
mov
cmp
jg
xchg
mov
mov
xchg
mov
pop
ret
add
add
add
add
jp
aaa
add
add
add
add
add
add
add
add
add
add
add
jb
imul
jno
ins
add
add
add
jno
sub
add
add
add
add
cmp
ins
add
add
bound
xor
jb
sub
add
push
sub
add
xor
xor
add
sub
bound
add
outs
add
jns
push
ins
add
add
and
imul
add
ja
cmp
bound
add
imul
add
add
add
outs
add
add
cmp
jb
jae
popa
add
add
outs
add
cmp
push
add
add
add
add
xor
push
arpl
add
jb
push
imul
push
mov
add
mov
mov
mov
mov
dec
mov
mov
cmp
je
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
mov
pop
ret
push
mov
add
mov
add
mov
mov
mov
lea
and
mov
mov
mov
mov
add
cmp
je
mov
mov
and
mov
cmp
je
add
mov
mov
mov
lea
and
mov
push
call
test
jne
inc
mov
mov
add
mov
mov
push
call
test
je
mov
mov
jmp
mov
lea
mov
mov
mov
mov
mov
mov
xchg
mov
mov
push
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
jge
mov
xchg
xchg
lea
add
add
jmp
push
mov
mov
in
mov
add
inc
or
add
add
add
inc
cmp
jne
sub
add
and
mov
mov
pop
ret
lea
mov
add
cmp
je
mov
mov
and
mov
mov
add
mov
add
mov
add
mov
mov
mov
dec
push
push
call
test
jne
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
call
add
mov
mov
mov
lea
and
sub
add
and
call
inc
mov
mov
add
mov
lea
mov
mov
mov
call
inc
mov
sub
cmp
je
mov
mov
inc
jmp
mov
cmp
jne
lea
and
add
mov
push
push
call
mov
ret
mov
push
mov
add
mov
add
cmp
je
mov
mov
and
mov
inc
mov
mov
add
mov
call
mov
mov
mov
pop
ret
push
mov
add
lea
mov
mov
mov
lea
add
mov
jmp
push
mov
mov
add
sbb
add
add
mov
dec
call
test
jne
mov
jmp
mov
sub
cmp
je
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
call
xor
mov
mov
sub
cmp
je
mov
mov
inc
jmp
mov
cmp
je
mov
lea
sub
mov
mov
lea
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
cmp
je
mov
sub
xchg
sub
mov
pop
ret
push
mov
add
mov
call
mov
call
test
je
add
add
mov
mov
mov
lea
and
add
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
mov
pop
ret
nop
push
mov
add
lea
mov
mov
mov
lea
add
mov
push
push
mov
sub
push
mov
push
call
mov
mov
mov
mov
mov
xor
mov
mov
pop
ret
push
mov
add
mov
lea
sub
mov
mov
lea
mov
mov
mov
add
mov
call
mov
add
mov
mov
mov
lea
and
mov
sub
cmp
je
mov
mov
inc
jmp
mov
mov
mov
add
mov
call
mov
mov
mov
mov
mov
mov
xor
mov
call
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
pop
ret
mov
push
mov
add
mov
lea
sub
mov
mov
lea
mov
mov
mov
mov
dec
mov
xor
mov
xor
add
mov
sub
mov
mov
add
add
mov
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
mov
mov
mov
mov
xor
mov
call
mov
and
add
mov
push
push
call
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
cmp
jne
call
and
add
mov
push
push
call
mov
call
lea
mov
mov
mov
lea
add
mov
mov
call
mov
mov
mov
mov
call
add
mov
lea
sub
mov
mov
lea
mov
mov
cmp
je
call
call
test
jne
mov
add
cmp
je
mov
mov
and
mov
push
mov
cmp
jne
add
mov
mov
mov
xchg
mov
inc
inc
inc
mov
cmp
jne
lea
mov
mov
mov
lea
add
mov
mov
push
mov
cmp
je
mov
lea
call
mov
sub
cmp
je
mov
mov
inc
jmp
mov
push
mov
push
mov
push
cmp
jne
mov
mov
mov
mov
mov
pop
ret
lea
push
sbb
ret
ret
jne
gs
outs
in
mov
outs
sub
and
nop
inc
add
or
nop
inc
add
loop
xchg
inc
add
mov
test
pusha
nop
inc
add
scas
das
nop
inc
add
(bad)
mov
push
xor
nop
inc
add
(bad)
jmp
add
xlat
lock
push
mov
loopne
int
ror
in
jno
cmp
repnz
hlt
jns
add
call
dec
and
stos
pop
inc
(bad)
or
pusha
adc
and
in
add
xchg
cmps
ror
icebp
mov
pop
cs
das
cdq
push
pop
cmp
cmp
pop
stos
add
dec
push
adc
mov
movs
cmp
jg
add
les
clc
cmp
mov
mov
les
mov
cwde
push
mov
mov
jge
lea
pop
ror
ret
cmps
mov
out
(bad)
bound
xor
pushf
add
xchg
push
call
sti
mov
sbb
inc
data16
js
mov
retf
inc
ficom
test
pop
in
loopne
ins
sar
sbb
data16
sahf
pop
mov
retf
adc
pop
mov
test
stc
(bad)
jns
inc
add
loop
nop
inc
add
(bad)
imul
jecxz
js
xor
pop
scas
cmps
je
movs
and
data16
xchg
popf
adc
inc
add
nop
inc
add
sbb
in
clc
nop
inc
add
add
adc
inc
out
nop
inc
add
inc
nop
inc
add
cmp
ror
nop
inc
add
cmp
enter
clc
ds
xchg
cli
push
nop
inc
add
mov
jle
inc
add
mov
inc
add
imul
inc
add
outs
std
jecxz
push
sbb
mov
retf
in
mov
sar
popf
lods
adc
push
(bad)
lock
mov
add
add
add
clc
stos
sub
push
out
cmp
dec
jns
cmps
inc
add
sub
outs
jno
mov
leave
dec
je
cmp
xchg
movsx
ds
or
das
nop
inc
add
repz
cmp
shl
nop
inc
add
sbb
xor
fcomp
pop
mov
popf
jne
fwait
ret
nop
inc
add
jge
scas
jmp
add
xor
inc
add
or
nop
inc
add
jnp
push
ds
sahf
fisubr
nop
inc
add
sbb
nop
inc
add
pop
push
inc
add
loope
inc
add
jne
pop
pop
repnz
push
nop
inc
add
jmp
sbb
sub
ss
jbe
mov
add
jae
sub
add
ret
pop
mov
pop
and
fisub
adc
es
bound
(bad)
xchg
fld
push
lahf
stos
jp
mov
fdiv
pushf
test
or
nop
inc
add
iret
xchg
mov
mov
fstp
nop
inc
add
sbb
nop
inc
add
add
fidiv
daa
mov
push
pop
je
jle
mov
aas
in
loope
adc
dec
mov
dec
pop
dec
aad
sbb
inc
sub
push
jo
add
enter
loope
xchg
cmps
stos
mov
imul
(bad)
mov
xchg
and
in
inc
sbb
cwde
xor
scas
jno
jp
jae
push
nop
inc
add
add
add
mov
nop
inc
add
xchg
fwait
nop
inc
add
pop
sub
mov
dec
sbb
cmp
mov
xor
(bad)
ja
repnz
jno
push
xor
xor
(bad)
xchg
stc
xchg
add
cmps
mov
inc
xchg
mov
push
xchg
aad
ins
sub
das
push
out
xchg
xor
dec
pop
mov
mov
adc
inc
sbb
adc
cmp
inc
dec
movs
cmp
cmp
xchg
cld
sub
jmp
dec
mov
mov
xor
in
popf
mov
xchg
dec
jg
jmp
add
add
(bad)
xchg
stc
daa
or
int
adc
imul
adc
mov
icebp
sti
in
out
aas
stos
cmp
mov
jle
(bad)
pop
test
mov
loop
loopne
or
retf
push
bound
nop
inc
add
bound
nop
inc
add
adc
nop
inc
add
pop
push
lea
inc
add
nop
inc
add
ror
mov
int3
test
and
lock
or
xchg
nop
inc
add
stos
xchg
jle
test
jno
inc
lods
dec
arpl
pop
lahf
jns
inc
jno
fcomp
ret
rcl
sub
and
imul
cmps
inc
add
or
aas
jb
push
out
loop
mov
and
int
(bad)
ins
(bad)
xchg
(bad)
outs
adc
push
push
mov
pushf
cmp
cmps
imul
or
pop
xchg
push
mov
push
popa
push
pmulhw
mov
inc
es
mov
xor
test
retf
xor
mov
pop
xchg
or
adc
cmp
add
push
dec
pop
aaa
das
out
retf
sub
cmps
inc
add
test
aas
mov
out
shl
stc
pop
cmp
push
adc
add
xchg
inc
mov
add
xchg
movs
jbe
out
sbb
add
aad
inc
mov
add
jns
scas
inc
mov
add
inc
adc
inc
add
and
push
inc
add
inc
add
dec
mov
add
hlt
or
inc
add
dec
mov
add
(bad)
xor
inc
mov
add
mov
add
stc
jbe
mov
add
aad
lock
mov
add
xchg
inc
mov
add
stc
dec
mov
add
movs
adc
mov
add
inc
add
pop
int3
mov
(bad)
lods
in
or
inc
add
push
jbe
imul
out
leave
mov
in
inc
mov
ss
leave
pop
(bad)
jp
pop
or
scas
push
xor
gs
sub
jne
dec
mov
cs
adc
rol
xor
fwait
std
push
push
movs
push
daa
inc
(bad)
jmp
cmc
stos
out
lods
lods
test
fsub
icebp
int
cmp
daa
mov
outs
mov
xchg
popf
jle
jp
fdiv
sbb
adc
adc
mov
scas
outs
dec
lods
in
and
push
xchg
test
mov
mov
(bad)
cmp
pop
scas
pop
adc
movs
cld
rcr
clc
xor
in
and
mov
sub
test
les
test
fincstp
inc
xor
movs
xchg
push
adc
inc
and
jne
ret
iret
xchg
xchg
pop
(bad)
cli
mov
fnstenv
fst
ins
sahf
clc
inc
sbb
or
mov
out
(bad)
int
mov
lods
paddb
cmps
cmp
out
ds
cwde
pop
mov
popf
mov
int
jecxz
sbb
aad
je
fild
rcl
call
xchg
inc
adc
inc
add
and
out
mov
retf
adc
mov
retf
push
aaa
or
jne
test
add
mov
adc
pop
mov
add
stos
or
jg
shl
inc
add
and
imul
inc
pusha
loopne
cli
enter
add
jecxz
add
xchg
gs
jnp
jns
add
cmps
inc
add
jmp
test
jae
aaa
rol
daa
out
and
aam
inc
add
cmp
out
cli
push
movs
lock
inc
add
push
xor
in
jl
or
cmps
inc
add
out
mov
stos
cs
(bad)
jns
scas
call
scas
jecxz
xchg
lods
inc
xchg
cmps
inc
add
es
test
mov
push
mov
clc
cmps
inc
add
mov
cmp
cmps
inc
add
popa
iret
jmp
jae
fsub
sbb
in
adc
outs
mov
cmps
inc
add
lods
jbe
das
mov
xlat
stos
loopne
inc
add
adc
adc
out
cld
cmps
inc
add
outs
out
(bad)
adc
sub
push
pop
jae
pop
test
pop
sar
pop
stos
sahf
add
(bad)
and
cmp
icebp
ret
add
mov
add
ins
scas
nop
inc
add
adc
test
add
mov
test
add
inc
ja
fnstsw
sbb
repnz
nop
inc
add
jp
nop
inc
add
add
lahf
add
mov
popf
fidivr
lock
retf
aas
jb
inc
add
rcl
imul
nop
inc
add
xor
adc
push
ja
sbb
push
sbb
add
jge
icebp
iret
mov
push
push
test
test
add
ins
dec
rol
and
sahf
or
adc
inc
add
mov
xor
push
xor
pop
ins
mov
fild
stos
lds
sbb
mov
and
mov
mov
cmp
jnp
in
in
nop
inc
add
popf
popa
dec
int3
es
mov
idiv
sub
add
push
sub
shl
aam
jmp
ins
pop
nop
inc
add
push
adc
nop
inc
add
jge
mov
out
clc
nop
inc
add
add
xor
ficomp
sbb
jmp
(bad)
xadd
cmps
inc
add
jmp
add
das
nop
inc
add
inc
add
stos
jmp
nop
inc
add
add
cmp
ins
mov
mov
xor
movs
(bad)
shl
mov
pop
(bad)
mul
add
nop
add
sub
retf
mov
mov
in
pop
stos
or
lahf
mov
into
fwait
pop
lea
and
inc
add
dec
push
pop
movs
test
idiv
push
in
in
test
mov
dec
push
inc
add
adc
nop
inc
add
lods
sbb
push
nop
inc
add
and
enter
jae
jle
jb
fistp
push
ins
int
cmp
jne
icebp
cwde
xor
mov
scas
vcvttss2si
and
outs
jns
lahf
lods
rol
jb
cmc
jg
ja
mov
push
call
xchg
idiv
rcl
(bad)
push
and
jmp
fimul
imul
and
jne
test
cmp
inc
rcr
ja
rep
aas
pop
(bad)
in
cmp
cmp
ss
sub
ins
xor
xchg
adc
rcl
ds
xchg
test
jle
sub
lds
sub
cld
add
mov
mov
cmp
adc
loope
cmp
mov
sbb
or
in
out
ret
pop
dec
jecxz
data16
jge
in
cli
lsl
push
cdq
popf
imul
repz
sub
movs
in
sbb
shr
fwait
mov
and
div
movs
(bad)
dec
add
in
xor
jo
xor
adc
fucom
add
cmps
shl
leave
stos
or
fxtract
das
leave
and
(bad)
push
in
jae
inc
inc
pop
(bad)
es
imul
pop
ror
outs
pop
dec
or
iret
jo
inc
ss
rol
dec
cmp
xchg
(bad)
pop
add
adc
in
jb
lods
(bad)
xor
fild
push
sub
fistp
mov
xor
bnd
push
retf
jmp
cmp
adc
es
mov
add
mov
cmp
lock
int
test
ins
sub
bound
ins
sbb
cmp
loope
in
pop
jns
mov
xor
or
adc
mov
icebp
shl
ret
(bad)
mov
popa
repnz
nop
fild
jp
jmp
sar
dec
dec
mov
sub
stos
(bad)
aad
jmp
or
and
sahf
scas
jns
jo
call
push
call
mov
lds
movs
push
xchg
mov
push
pop
jae
add
mov
jo
sbb
inc
and
push
or
ins
mov
ja
ins
pop
push
pop
pop
push
in
push
lahf
mov
shr
pop
(bad)
fst
pop
mov
ds
shl
jne
xor
push
push
mov
(bad)
fild
std
lods
sbb
mov
lock
pop
push
stc
dec
ja
mov
sbb
mov
(bad)
loope
push
(bad)
sbb
mov
inc
mov
add
or
pop
inc
pop
(bad)
mov
pop
lods
fwait
jmp
xchg
cmp
mov
es
mov
sbb
and
cmp
int3
cmp
add
cmps
mov
mov
cmp
test
shl
push
cmp
(bad)
in
pop
stos
imul
jge
lods
fcom
xchg
pop
jo
and
mov
out
jecxz
gs
adc
daa
add
mov
data16
jae
sbb
int3
aam
ret
xchg
jbe
push
test
cmp
popa
sbb
push
mov
(bad)
out
rcl
ins
jbe
nop
add
aad
inc
push
xor
dec
jnp
sub
push
ins
add
stos
test
sub
iret
je
cmps
retf
outs
pop
mov
xor
jmp
or
xchg
loop
add
pop
loope
mov
push
mov
cmp
iret
sub
std
mov
jmp
lahf
add
nop
cmp
sub
not
movs
jne
loopne
clc
lods
sub
jns
icebp
cdq
neg
mov
pop
pop
jns
ins
mov
call
jmp
lock
mov
fcom
xchg
dec
push
in
es
into
icebp
out
out
fist
and
arpl
fcomp
into
frstor
pop
xor
ins
mov
out
clc
fldcw
adc
push
pop
add
dec
test
nop
inc
add
inc
add
stos
jl
inc
add
int3
pop
nop
inc
add
sbb
inc
add
pop
ret
movs
dec
dec
inc
add
js
cmps
inc
add
and
mov
sbb
inc
add
mov
nop
inc
add
pop
jns
inc
add
in
sub
mov
add
mov
xchg
inc
add
inc
repz
nop
inc
add
rcl
inc
add
sub
loopne
data16
xchg
ins
mov
js
or
or
fstp
icebp
sbb
inc
add
dec
jae
mov
call
mov
push
sub
ret
dec
fdiv
or
lds
mov
sbb
scas
outs
arpl
inc
add
and
dec
or
mov
mov
add
mov
xor
jge
add
pop
dec
mov
ss
out
inc
outs
je
inc
xor
add
(bad)
sbb
stos
clc
jns
push
inc
pop
jmp
cmp
scas
jb
xor
sahf
std
xor
lea
jnp
dec
sar
psubsw
inc
and
ds
repz
xchg
or
jg
inc
inc
adc
ds
push
inc
inc
pop
xor
mov
add
add
pop
xchg
sahf
mov
aam
dec
mov
add
mov
clc
jno
inc
pop
lock
push
dec
mov
add
push
jns
int3
pop
imul
mov
xor
xlat
lahf
int
jnp
pop
or
(bad)
sub
jle
pop
xchg
jne
sub
popa
out
pop
or
inc
inc
add
add
movs
in
xchg
icebp
mov
mov
out
nop
sub
mov
popf
mov
push
adc
or
nop
inc
add
imul
bound
popf
(bad)
(bad)
jmp
fxch
adc
adc
into
and
cmp
(bad)
enter
cmps
inc
add
add
cmps
inc
add
jbe
mov
inc
add
mov
mov
cmps
inc
add
and
sbb
mov
aaa
gs
stc
cwde
(bad)
xor
loop
adc
add
mov
pop
or
test
sbb
adc
add
push
sbb
mov
sub
push
pop
not
mov
cli
nop
inc
add
or
(bad)
nop
inc
add
fwait
popf
add
mov
test
icebp
test
call
sub
aam
repnz
push
push
fisub
jmp
in
test
pop
inc
push
sub
and
sbb
out
jmp
jae
lods
cli
sub
test
and
popf
mov
in
(bad)
(bad)
xchg
inc
add
lods
jns
inc
add
add
nop
inc
add
cmp
mov
mov
add
or
add
add
imul
cmp
nop
inc
add
stos
inc
cs
jmp
mov
out
sbb
adc
repz
xchg
repnz
(bad)
loope
xor
leave
pop
pop
std
inc
sbb
rcr
adc
add
repnz
ins
mov
das
inc
ja
repnz
leave
cmp
ja
inc
inc
inc
mov
fwait
aad
fld
xchg
call
mov
and
daa
imul
push
dec
xor
das
outs
out
mul
cmp
adc
push
call
sbb
leave
push
dec
das
shr
cmp
sahf
mov
sub
loopne
or
shr
scas
je
xor
neg
add
mov
sbb
and
imul
sub
imul
add
and
nop
inc
add
push
dec
nop
inc
add
add
add
mov
pop
or
adc
jo
adc
xchg
lods
jg
mov
(bad)
xchg
ror
imul
retf
add
daa
aam
outs
push
loopne
mov
in
shr
icebp
in
aas
stos
mov
inc
inc
xor
loope
adc
sbb
cdq
dec
faddp
xor
int
jg
add
js
pusha
sbb
inc
and
push
push
push
jle
inc
lock
push
adc
sbb
loope
xor
adc
sar
push
sbb
jns
pop
mov
xor
xchg
rcl
lahf
push
or
pop
aam
mov
pushf
leave
push
mov
dec
retf
arpl
xchg
mov
inc
add
cmps
inc
add
xchg
ins
hlt
jge
ins
lock
inc
add
mov
mov
fnsave
add
test
sbb
and
(bad)
and
xor
dec
pop
xor
jg
in
cmp
retf
sub
shl
cdq
test
lds
in
dec
adc
sti
cmps
jecxz
ins
inc
pop
fwait
iret
pop
dec
arpl
fbld
or
adc
data16
bound
dec
cld
inc
inc
add
cmp
inc
add
std
mov
inc
add
nop
inc
add
adc
scas
xor
inc
inc
add
in
fdiv
dec
lods
xchg
sar
ret
dec
mov
test
lea
push
mov
add
call
call
mov
mov
push
call
test
jne
lea
add
mov
mov
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
call
call
call
mov
xchg
inc
call
cmp
jle
lea
and
jmp
and
mov
mov
and
xchg
mov
and
mov
inc
lea
push
call
test
je
mov
cmp
jle
mov
mov
lea
and
mov
inc
mov
mov
mov
push
call
test
jne
lea
add
add
and
sub
add
and
push
mov
push
call
mov
call
call
inc
cmp
jne
mov
cmp
jle
mov
mov
xchg
mov
mov
mov
mov
jmp
sub
mov
cmp
jl
mov
mov
jmp
mov
mov
mov
mov
and
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
inc
cmp
jne
mov
mov
mov
mov
mov
mov
call
inc
mov
mov
add
mov
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
push
mov
call
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
and
lea
push
call
mov
lea
mov
mov
mov
mov
xchg
and
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
and
cmp
jge
mov
mov
mov
jmp
mov
add
lea
push
call
test
jne
mov
mov
mov
mov
add
cmp
je
mov
mov
and
mov
push
call
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
push
push
push
call
cmp
jle
sub
xchg
jmp
mov
mov
mov
mov
mov
call
mov
dec
mov
xchg
mov
mov
lea
push
call
test
je
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
xchg
mov
inc
cmp
jne
mov
lea
mov
mov
mov
push
call
call
add
mov
mov
call
xchg
mov
mov
mov
xchg
call
mov
mov
xchg
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
push
push
call
mov
call
mov
pop
ret
add
add
xor
add
jno
xor
ins
add
add
ins
add
add
add
sub
add
add
cmp
imul
jns
outs
add
add
pop
add
ins
add
add
add
add
add
add
imul
ins
add
sub
jp
xor
cmp
xor
xor
xor
add
add
add
ja
ins
add
add
add
xor
jae
sub
add
add
add
add
in
add
mov
sub
cmp
je
mov
mov
inc
jmp
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
pop
ret
nop
push
mov
add
call
mov
mov
mov
mov
mov
call
call
sub
add
and
mov
push
call
test
je
mov
mov
mov
inc
cmp
jne
mov
mov
mov
xchg
mov
push
push
call
mov
mov
cmp
jge
and
xchg
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
and
mov
mov
inc
cmp
jne
mov
add
cmp
je
mov
mov
and
mov
push
push
push
call
cmp
jle
lea
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
cmp
jge
mov
xchg
jmp
xchg
lea
add
add
mov
mov
call
push
call
test
jne
mov
mov
mov
inc
mov
mov
add
mov
push
call
mov
mov
xchg
mov
mov
push
call
test
jne
add
xchg
xchg
sub
add
and
mov
mov
mov
cmp
jle
mov
mov
jmp
mov
mov
xchg
push
call
test
jne
xchg
mov
mov
inc
xchg
add
mov
mov
mov
lea
and
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
xchg
mov
mov
mov
xchg
mov
mov
and
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
and
lea
mov
mov
mov
mov
inc
cmp
jne
mov
lea
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
sub
mov
add
mov
lea
sub
mov
mov
lea
mov
mov
pop
ret
add
jae
jae
and
aaa
add
push
add
add
add
add
and
and
imul
add
add
add
add
je
outs
add
push
add
add
add
jo
and
jb
cmp
popa
add
xor
popa
add
outs
add
aaa
add
sub
add
add
jb
and
data16
xor
cmp
add
add
aaa
add
imul
add
add
imul
outs
add
add
jne
jbe
bound
add
add
ja
and
aaa
add
cmp
imul
out
xor
mov
pop
jp
in
sbb
(bad)
mov
es
add
(bad)
add
push
mov
sub
add
mov
lds
and
popf
add
mov
add
fwait
jne
add
push
add
add
add
loop
sbb
add
in
sub
das
jb
(bad)
mov
cmp
in
adc
cld
test
pushf
mov
add
add
sub
test
add
popa
add
add
xor
add
or
repnz
rcr
add
lahf
dec
and
add
add
in
push
scas
sub
ss
sahf
aas
cmp
sti
loop
leave
cli
fist
arpl
add
add
jbe
outs
das
scas
repnz
add
xchg
add
in
add
inc
jnp
not
mov
outs
sbb
inc
add
add
add
mov
add
and
loop
shr
xor
test
pop
add
push
imul
add
pop
lahf
cli
add
pushf
inc
fnstcw
jno
adc
add
mov
add
add
mov
add
jmp
add
adc
add
dec
push
xor
add
push
add
add
(bad)
outs
dec
add
ret
repnz
scas
(bad)
mov
cmp
xchg
cmps
add
add
cdq
retf
push
jecxz
or
pop
sbb
retf
mov
add
mov
sbb
(bad)
add
add
add
and
sub
dec
dec
loopne
cli
xor
xor
imul
add
sbb
mov
daa
cmp
adc
add
add
inc
mov
add
add
or
and
add
dec
push
jle
retf
add
sub
fisub
(bad)
xor
add
repz
outs
sub
push
push
aam
xchg
xchg
xor
jbe
pop
add
push
int
repz
jns
add
leave
push
sub
push
test
sbb
add
xor
add
and
jo
out
mov
add
xor
inc
add
add
add
mov
ss
ret
mov
add
add
sbb
add
add
pop
add
add
daa
add
pop
shl
add
pop
add
add
add
popf
dec
xchg
sub
add
pop
fadd
add
xchg
popf
add
add
dec
or
stos
adc
ret
addr16
shl
mov
mov
test
ror
fldenv
pop
pop
add
stos
xor
and
add
bound
repnz
in
add
add
imul
iret
sbb
adc
cmp
or
sbb
pusha
add
add
add
add
jns
add
jle
sbb
inc
loope
and
inc
lods
sub
test
push
out
add
movs
dec
cmp
push
dec
dec
sbb
pop
push
mov
xchg
scas
jecxz
jmp
lods
ficom
inc
or
xchg
add
add
jl
(bad)
push
vmovntps
add
mov
xor
add
test
or
xor
dec
add
add
mov
jbe
mov
add
jae
add
add
add
push
pop
call
aam
neg
add
inc
and
add
add
mov
iret
(bad)
add
add
cli
cmps
dec
loop
add
fst
xor
fdiv
mov
add
add
add
add
aam
add
jg
ja
inc
ret
add
add
fild
add
test
xlat
inc
xchg
or
add
stos
ret
mov
add
pusha
inc
fs
repz
test
lds
fstp
shl
cmp
and
add
and
lahf
push
shr
inc
inc
add
add
add
xchg
add
add
xchg
add
add
movs
add
add
or
mov
ds
xlat
add
add
add
add
out
pop
add
add
cmps
mov
aad
sub
rcr
shl
inc
add
add
jo
test
add
loopne
and
jae
cli
add
add
fist
mul
(bad)
adc
xor
add
add
add
test
pop
add
icebp
push
dec
add
add
add
adc
add
test
mov
add
popa
add
add
sub
retf
add
xchg
ret
and
add
rcl
aam
add
dec
ret
ds
add
dec
add
add
jns
push
cmp
add
add
sbb
xchg
mov
or
add
add
pusha
fldpi
add
add
add
xchg
add
add
outs
pushf
out
add
je
shl
mov
cmp
(bad)
cmps
addr16
in
jmp
jecxz
jns
fsub
(bad)
jnp
(bad)
pop
jns
add
sub
(bad)
outs
xchg
add
inc
and
add
mov
inc
sbb
jo
dec
arpl
add
cdq
cmp
das
ins
cmps
rol
cli
jne
and
and
inc
mov
ret
je
add
fwait
add
leave
inc
add
je
pop
add
pop
and
mov
je
sub
sahf
in
test
push
ret
aaa
shl
lock
jnp
dec
add
add
cmp
add
pop
jp
cmc
dec
je
adc
ror
sub
lods
push
push
aam
mov
pushf
loop
add
mov
das
add
add
add
add
adc
pop
adc
add
rol
out
adc
push
cmps
sbb
xchg
out
mov
stc
pop
imul
(bad)
add
sub
fisub
dec
add
add
push
dec
das
jp
add
test
test
lahf
test
cmps
and
xchg
stos
add
out
call
add
(bad)
mov
pop
sbb
jmp
sub
add
add
pop
add
add
out
fs
add
jl
add
push
lds
jg
add
pop
jmp
xor
sti
out
aaa
mov
xchg
and
add
mov
mov
add
es
add
add
nop
aas
jne
aam
mov
add
jg
pop
or
add
aam
aam
enter
mov
mov
add
stos
jno
dec
rol
and
cmps
mov
sbb
pop
adc
xchg
mov
outs
or
test
ja
jno
retf
popa
xchg
pushf
add
add
jge
push
hlt
xor
mov
add
jno
and
aas
mov
fild
sub
adc
mov
add
add
add
cmp
add
push
out
or
pop
(bad)
(bad)
fdiv
add
nop
loopne
add
push
ret
adc
jae
add
iret
add
cmp
jne
add
add
data16
std
icebp
mov
mov
fadd
mov
sub
add
add
adc
add
data16
add
add
js
xchg
mov
add
add
push
iret
push
fs
pop
lds
data16
pop
add
add
dec
dec
mov
dec
or
lock
(bad)
sub
cwde
(bad)
pop
lea
cdq
sbb
sbb
add
fucomi
mov
and
add
mov
add
add
movs
sahf
mov
fsubr
add
add
xchg
push
pop
fdivr
loop
sub
aad
add
add
sti
push
rcl
add
pop
pusha
xor
pushf
jl
add
movs
ins
jp
mov
lea
add
inc
sar
in
add
in
test
or
loopne
push
mov
out
fisttp
fild
add
add
add
inc
push
ret
js
jl
call
cmp
daa
add
push
inc
arpl
xchg
add
lea
sub
add
add
and
add
and
mov
add
push
cli
add
adc
add
mov
add
ret
mul
jno
push
fdivr
add
mov
test
addr16
faddp
pop
sub
test
add
test
add
clc
push
inc
mov
xor
ret
push
mov
int3
int
mov
add
add
xchg
cmp
add
into
add
push
add
dec
rol
add
movs
aad
lea
add
xchg
lea
mov
and
pop
out
mov
xchg
jbe
imul
add
mov
add
lds
loop
add
mov
or
add
shl
add
int
jg
add
mov
add
into
jb
add
add
adc
add
test
dec
pop
rcl
add
add
shl
add
add
add
and
add
add
(bad)
in
and
add
jecxz
cld
inc
adc
add
jns
mov
ffreep
cmp
xchg
not
mov
rcr
add
and
xchg
adc
add
jo
add
add
jne
ds
xor
sahf
icebp
lods
jnp
pushf
cmc
ja
push
add
add
sbb
add
outs
push
dec
add
mov
out
fistp
popa
add
mov
add
push
mov
and
fiadd
test
sub
jb
jo
scas
test
cmp
add
test
mov
retf
xchg
or
cld
movs
mov
mov
enter
mov
add
sbb
test
std
jnp
sub
add
lods
cmp
add
jle
sbb
lahf
add
pop
cmp
and
aam
inc
stos
add
xor
jge
shl
cmp
iret
int3
sahf
jae
test
jecxz
add
lock
inc
(bad)
shr
push
pop
mov
add
jmp
mov
pop
cli
mov
enter
push
add
mul
pop
mov
mov
sar
dec
hlt
stos
aam
add
add
arpl
add
add
div
stos
add
mov
xor
mov
and
inc
add
sub
sbb
nop
add
add
inc
inc
adc
stos
aaa
mov
out
stos
add
add
and
pop
addr16
(bad)
mov
or
(bad)
mov
das
enter
add
leave
retf
fistp
add
inc
out
add
add
mov
jns
xor
ss
stos
add
add
dec
add
add
xchg
add
add
inc
add
push
or
add
add
jg
popa
imul
pop
add
and
jp
jmp
push
cld
les
jl
inc
sahf
into
jp
add
add
dec
add
add
std
add
add
fidiv
inc
ja
scas
jp
add
pop
daa
jmp
pop
fsubr
retf
inc
add
daa
mov
jae
push
cmp
pop
popf
add
add
fdivr
(bad)
shl
dec
jbe
mov
add
mov
in
add
ret
scas
add
lods
add
add
mov
mov
cli
sahf
aad
add
jb
add
add
mov
xchg
xlat
popf
pop
add
addr16
sbb
push
lahf
into
add
dec
imul
icebp
cmp
cdq
mov
mov
jno
add
mov
and
add
outs
add
(bad)
call
add
add
je
imul
dec
outs
scas
add
add
add
cwde
dec
add
mov
jmp
cwde
add
add
add
cli
add
pushf
mov
xchg
and
leave
add
out
add
imul
lahf
xchg
add
rol
scas
iret
cmc
mov
sub
or
cmps
add
data16
add
(bad)
pop
add
add
add
inc
jmp
jno
jmp
test
pop
xor
icebp
sti
and
mov
repnz
stos
ret
add
sti
add
add
jp
mov
add
es
mov
(bad)
hlt
cmps
mov
add
add
jge
add
outs
(bad)
lock
sub
add
push
imul
fidiv
sahf
loop
jmp
(bad)
cmp
sbb
adc
iret
ret
loope
xor
or
inc
cld
imul
add
add
in
and
sub
mov
sub
xchg
mov
cmp
jg
dec
push
aad
jp
aas
xchg
and
inc
cs
add
add
and
add
add
add
les
cmp
push
aaa
test
add
outs
sbb
sub
sbb
add
add
add
add
lock
add
and
xchg
clc
mov
sti
loopne
call
retf
sti
mov
stos
or
std
cmps
add
add
into
lahf
ja
test
xchg
sbb
retf
dec
call
push
rol
xlat
jb
sub
add
add
inc
in
scas
jle
jl
xchg
sbb
dec
add
add
xchg
pusha
mov
scas
or
mov
jbe
dec
inc
loope
xor
add
add
mov
mov
aaa
test
xor
fdiv
inc
push
mov
push
fistp
popf
add
pop
jns
rol
add
mov
fadd
add
(bad)
out
test
(bad)
xchg
ret
push
clc
cs
scas
ret
dec
add
add
push
outs
add
cmp
add
shl
add
ret
out
jo
sbb
add
add
jno
fisub
int
das
call
add
dec
mov
push
push
ror
add
add
add
add
stos
xor
push
(bad)
sbb
xchg
push
leave
xor
retf
sub
push
inc
dec
bound
add
xchg
outs
and
jo
add
add
pop
sbb
pop
ror
jae
adc
adc
(bad)
mov
add
inc
stos
mov
add
in
pop
ret
fstp
jno
dec
add
add
add
int
jecxz
leave
inc
js
ficom
add
add
jno
inc
add
push
add
aaa
add
pop
sub
add
sub
add
mov
add
pop
jne
add
add
outs
cdq
add
add
dec
add
jno
add
fiadd
adc
cs
pop
stos
scas
ins
push
push
call
shl
shl
and
stc
push
jo
pusha
pop
sbb
xor
mov
add
cmps
out
add
add
add
adc
add
jns
cmp
adc
jno
add
add
jecxz
add
push
mov
cmp
mov
add
sub
shl
add
or
dec
(bad)
(bad)
xor
dec
inc
fwait
adc
imul
push
rcr
inc
xor
push
jno
add
inc
pusha
or
popf
mov
int3
test
ins
xor
add
xchg
adc
sbb
ds
push
data16
add
add
xor
bound
pop
pop
add
add
pushf
sbb
add
adc
xor
hlt
dec
icebp
add
add
jbe
mov
sbb
add
add
add
fild
add
in
add
add
mov
mov
pop
popa
add
add
add
iret
or
add
add
daa
add
test
repz
repnz
push
add
add
scas
pop
and
retf
shl
adc
push
add
add
add
and
add
add
add
jns
push
scas
div
add
add
mov
xchg
push
dec
ret
int3
(bad)
sub
push
cdq
daa
and
sub
add
add
xor
add
add
ja
lods
les
mov
sbb
data16
pop
ret
pop
into
adc
add
dec
jg
pop
dec
jmp
add
data16
(bad)
add
repz
inc
pop
and
jne
add
cmps
pusha
add
add
repz
add
test
mov
test
mov
and
sbb
shl
add
ins
sub
ffreep
inc
push
scas
iret
xchg
and
rol
add
fild
add
add
int
sahf
cmps
jbe
dec
push
pop
add
cwde
(bad)
xlat
rcl
add
sar
pop
add
add
add
inc
cdq
jns
add
add
dec
aad
add
add
out
cwde
in
jb
adc
adc
add
or
add
xchg
jmp
sub
mov
(bad)
aam
add
mov
movs
xor
rol
add
and
xor
sbb
mov
add
add
adc
ins
push
add
add
lahf
or
add
sbb
pop
cmp
and
div
aad
inc
jg
push
add
jb
aad
add
outs
js
fiadd
add
adc
sub
add
movs
add
and
pusha
xchg
inc
jge
inc
mov
lahf
pop
push
mov
add
add
into
xchg
fidiv
add
pop
add
cwde
push
stc
mov
pusha
pop
add
mov
jb
popa
pushf
xchg
add
add
lock
outs
or
xchg
rcr
add
(bad)
dec
cmp
pop
cdq
stos
add
add
inc
stos
add
add
fmul
xor
jge
push
icebp
lea
sti
add
not
push
(bad)
in
cmc
jne
sub
add
add
pop
nop
in
cmp
outs
mov
mov
push
call
pushf
fcom
mov
aam
popw
inc
shl
mov
dec
loopne
rcl
rcl
add
add
cdq
mov
rol
push
call
or
add
add
pusha
push
sbb
pop
in
leave
add
fadd
or
out
(bad)
rcr
jb
jmp
add
fdivr
sbb
fidivr
into
mov
dec
cmp
lahf
cmp
jnp
ficomp
jp
add
mov
jmp
push
(bad)
and
pop
in
mov
add
hlt
lods
push
outs
xchg
repz
jle
rol
add
(bad)
add
sbb
add
add
imul
lods
and
dec
sbb
add
gs
xchg
push
icebp
mov
and
mov
(bad)
das
push
sar
in
inc
cli
in
shr
fild
ins
add
add
cmp
aaa
pop
dec
pcmpgtb
add
inc
stc
cmp
add
jnp
adc
xor
pop
add
cld
sbb
jge
jnp
add
add
add
and
mov
and
dec
add
add
int
add
sar
das
jp
push
add
add
jge
pop
pop
add
push
int3
jg
cmp
push
add
retf
cwde
mov
add
neg
dec
pop
jp
add
or
sar
or
jno
pusha
scas
in
bound
das
add
jg
fiadd
cmp
add
je
push
dec
xlat
shl
leave
dec
jle
retf
out
or
xchg
inc
aas
jg
repz
sub
add
cmp
add
add
add
mov
xchg
aaa
jo
popf
add
add
push
mov
push
test
int
inc
repz
inc
add
or
stos
xor
mov
xor
xor
cmp
fstp
add
add
sub
inc
js
sti
in
sbb
add
add
add
or
add
popa
or
dec
adc
xchg
add
add
lds
stos
add
add
enter
lea
outs
loopne
fwait
loope
add
sub
scas
jb
stos
icebp
push
pop
xchg
repz
cli
repz
add
xchg
add
xor
gs
add
dec
cli
test
add
add
add
add
pop
mov
jmp
push
or
sub
repnz
pushf
(bad)
mov
mov
add
push
mov
mov
add
jp
add
xor
add
(bad)
sti
add
add
pop
add
loop
add
inc
add
jle
daa
retf
lea
add
add
outs
retf
xchg
jle
push
add
push
adc
dec
test
(bad)
jae
cmc
in
js
fwait
sbb
add
iret
xor
mov
pop
call
mov
jp
xchg
aas
outs
push
rol
lods
ret
inc
add
add
add
jne
jle
add
inc
(bad)
mov
test
dec
add
cmp
mov
imul
inc
add
add
xor
mov
not
(bad)
and
add
leave
(bad)
popf
add
pop
add
inc
movs
clc
and
add
add
sti
(bad)
fadd
add
loope
lahf
mov
scas
mov
sub
xchg
pop
lods
fild
add
(bad)
movs
add
xchg
add
add
add
add
add
add
xchg
mov
inc
dec
les
mov
xchg
add
test
ins
add
add
je
add
add
sahf
push
mov
push
pop
daa
aaa
aad
imul
(bad)
lahf
inc
icebp
ins
mov
push
mov
lods
pop
clc
aas
mov
cwde
cmp
and
jmp
add
fadd
test
jnp
out
dec
test
mov
xchg
add
fbld
add
add
test
jb
inc
sbb
add
add
add
and
inc
sub
rcr
add
add
cli
pop
dec
pop
add
add
add
mov
dec
pop
repz
mov
xchg
add
add
xor
(bad)
(bad)
xor
push
sub
and
jge
movs
push
mov
mov
add
lea
arpl
test
mov
scas
and
fisubr
add
mov
add
cmp
add
add
add
add
add
xchg
mov
mov
add
call
add
add
xor
pusha
stc
pop
add
mov
add
add
add
cmp
imul
mov
ficom
pop
and
jns
xor
pusha
add
mov
(bad)
cmp
movs
add
push
adc
mov
xchg
add
test
imul
cmp
fsubr
cmp
add
stos
or
add
add
or
call
mov
iret
pop
retf
stos
dec
inc
std
xor
add
add
out
mov
add
xlat
int3
out
fs
cmp
arpl
das
js
jge
add
fxch
stc
mov
mov
xchg
add
cs
add
loope
add
cmp
and
xor
sar
add
add
mov
pop
sbb
outs
int3
add
add
add
add
mul
push
jg
push
loop
imul
into
(bad)
ror
call
jbe
jo
lahf
push
test
fwait
inc
loop
retf
nop
inc
stos
lds
and
xor
ins
jge
imul
adc
add
xchg
in
loope
jno
sub
pop
inc
mov
fwait
mov
idiv
and
rcl
add
fldenv
add
mov
add
add
add
outs
arpl
out
jp
add
movs
push
aam
dec
jl
rcl
(bad)
push
outs
ins
add
add
mov
pop
inc
outs
add
add
sbb
inc
jmp
gs
or
pushf
and
fld
jno
inc
add
add
add
mov
(bad)
mov
add
push
inc
adc
adc
add
aas
test
add
add
or
add
xor
adc
addr16
sbb
aam
add
mov
jno
add
aaa
cmc
add
mov
pop
mov
sbb
jg
mov
stos
dec
pop
push
ja
add
push
mov
ja
addr16
inc
fidiv
aas
enter
add
jl
mov
add
ins
jg
cmp
jb
cs
gs
das
ins
inc
add
retf
ficom
inc
xor
inc
ret
cdq
dec
lds
add
dec
add
adc
sub
add
inc
daa
push
mov
outs
jge
or
and
add
jbe
add
add
stc
cmps
ficomp
loopne
or
repnz
repnz
add
pop
call
rol
repz
add
pop
add
fdiv
add
add
pop
add
push
arpl
pop
mov
mov
lock
add
rol
pop
rcl
fld
add
test
xor
mov
add
xor
inc
mov
aas
add
jp
bound
sub
mov
pop
rol
add
mov
add
pop
(bad)
add
add
sbb
xor
add
pop
repnz
add
jbe
add
test
xchg
add
imul
add
add
jae
sub
int3
fmul
imul
mov
push
es
in
cdq
in
repnz
xor
adc
in
adc
mov
dec
mov
add
jns
pop
add
daa
add
dec
and
fs
add
mov
jns
add
add
and
popf
in
or
sbb
in
stos
pop
bound
add
pusha
pop
inc
add
add
add
jbe
push
fiadd
dec
aaa
adc
mov
jne
dec
sbb
xor
add
pop
add
mov
cmp
add
scas
in
add
add
aas
test
(bad)
stc
add
sbb
add
mov
shl
loop
mov
loopne
add
ja
xor
add
add
test
in
add
mov
arpl
add
jg
mov
push
pop
fdiv
fs
jge
adc
add
mov
inc
and
add
add
gs
add
ins
mov
jp
xchg
and
add
popa
add
add
cdq
iret
pop
es
add
push
cmp
repnz
add
jle
in
cmp
cmps
mul
add
(bad)
cmp
add
(bad)
repz
jg
add
cmps
adc
and
jmp
add
add
sbb
xor
pop
dec
or
add
jns
add
sbb
jb
stos
add
add
mov
and
fbstp
and
or
ja
data16
adc
mov
cmc
ror
fiadd
outs
call
repnz
xor
add
mov
mov
iret
push
out
aad
add
add
mov
repz
jbe
and
jp
loop
cmp
add
outs
loopne
in
movs
jle
add
fcom
add
arpl
add
add
inc
(bad)
int3
push
ficomp
mov
fnstsw
(bad)
push
out
jo
daa
scas
mov
and
or
inc
cli
inc
jl
add
add
adc
mov
imul
jmp
mov
add
add
sub
inc
jne
hlt
xor
xor
add
jne
int
mov
or
gs
add
test
call
ins
push
add
xor
cmp
aad
add
add
add
sti
std
loopne
jecxz
add
sub
add
call
jmp
jle
out
imul
add
push
inc
sub
add
into
adc
xchg
jo
sbb
add
movs
add
add
fbstp
add
aad
or
dec
lock
hlt
push
(bad)
je
adc
add
add
add
add
add
xchg
add
adc
cmc
fdivr
add
adc
xor
add
cli
psrad
test
movs
add
add
xchg
add
fadd
cld
and
xor
cli
xor
add
or
pop
cwde
sub
jl
add
sub
push
pusha
and
add
ds
pop
lods
add
sahf
imul
std
aas
lahf
aad
xchg
add
sbb
add
add
add
test
retf
(bad)
xchg
xor
add
icebp
push
imul
sub
mov
or
add
ins
cmp
add
add
(bad)
(bad)
add
add
and
bound
dec
das
xchg
call
add
fwait
rol
ror
add
dec
sub
loopne
pop
ins
add
add
sbb
add
fdivr
jno
jmp
dec
icebp
inc
xor
inc
mov
mov
mov
inc
fisttp
dec
add
mov
and
add
push
sub
add
test
add
(bad)
jnp
add
inc
test
mov
add
outs
jmp
adc
(bad)
nop
fmul
fadd
add
mov
add
push
aas
fld
sahf
mov
pop
inc
add
dec
cmps
add
add
add
lea
xlat
add
jbe
sub
add
add
cmps
clc
and
repnz
xlat
add
xchg
dec
fldenv
xchg
sbb
cld
loop
add
add
imul
rcl
stos
add
add
lahf
add
std
dec
mov
add
(bad)
cmp
ja
xchg
mov
add
add
sahf
xor
rol
rcr
add
add
adc
xchg
dec
pop
mov
xor
clc
iret
aam
pop
jne
loop
stos
movs
aaa
or
mov
xchg
pop
push
into
(bad)
(bad)
sbb
add
or
mov
add
jp
addr16
sub
jo
sar
cmps
sub
add
add
lahf
add
jp
cmps
or
cmp
add
push
mov
mov
push
inc
aam
xchg
and
pop
cs
cmp
cmp
mov
add
mov
xchg
add
push
mov
rcr
out
xchg
in
sub
inc
nop
add
sub
add
(bad)
jae
mov
aas
outs
add
dec
add
mov
add
into
cmc
rol
add
sbb
add
adc
mov
sbb
cdq
enter
(bad)
out
leave
dec
test
push
mov
jno
push
aad
sub
shl
mov
add
mov
add
fdivr
add
add
lock
fincstp
xlat
scas
sbb
sbb
cs
and
out
pop
push
movs
mov
mov
pop
or
adc
shr
sub
add
inc
push
ss
mov
int
sbb
add
inc
out
scas
fstp
std
adc
and
mov
imul
icebp
sbb
jbe
add
(bad)
enter
xchg
rol
pop
rol
mov
adc
add
(bad)
sbb
adc
xor
add
sub
push
inc
add
mov
or
add
sahf
add
add
ss
lods
sub
xchg
jge
dec
add
add
add
sahf
(bad)
xchg
sbb
ret
jge
add
je
add
add
add
mov
add
imul
add
xchg
push
(bad)
mov
jp
add
pop
jo
push
loop
fadd
pop
push
and
adc
add
push
fldpi
movs
js
repnz
retf
loopne
jne
popf
cmp
pop
add
sbb
adc
movs
mov
add
add
fadd
cmp
test
adc
add
cmps
pop
dec
push
inc
inc
adc
add
add
fiadd
mov
add
mov
add
(bad)
xchg
iret
test
add
add
mov
jb
mov
adc
and
add
inc
add
add
add
fcomp
adc
nop
gs
xor
dec
mov
inc
imul
mov
cmp
mov
push
ret
add
pop
jne
add
cmps
fiadd
icebp
and
adc
xchg
lea
xor
pop
add
outs
cmp
outs
dec
les
add
push
sahf
test
pushf
add
pop
xor
scas
mov
jns
es
int3
fild
add
into
leave
or
gs
add
sub
mov
mov
repz
inc
jno
dec
xchg
outs
add
inc
or
mov
pop
(bad)
mov
and
dec
add
add
mov
and
cmp
rol
add
lds
push
je
add
dec
xchg
lea
es
adc
jecxz
jecxz
dec
and
aaa
into
add
mov
mov
sub
rol
ins
add
add
popf
mov
mov
mul
adc
add
mov
stos
(bad)
ins
addr16
aas
add
push
jmp
push
cmc
add
inc
cmp
out
and
or
enter
add
mov
add
ror
add
push
add
add
add
push
add
jecxz
imul
xor
add
ss
in
pop
or
add
fadd
pop
add
stc
cmps
xor
cmp
add
add
(bad)
jo
lods
jmp
outs
(bad)
ja
add
add
mov
add
inc
pushf
add
xor
mov
add
jns
push
aam
stos
(bad)
fild
sub
pop
push
adc
adc
test
lods
add
add
rcr
jmp
add
mov
movs
and
xchg
add
gs
inc
dec
stc
add
xchg
jns
add
dec
lods
pop
jge
mov
nop
mov
dec
inc
mov
das
adc
dec
jle
add
pop
ret
mov
iret
mov
or
and
add
push
pop
mov
push
sbb
add
cmp
ins
add
add
and
add
jp
rol
dec
in
popf
or
adc
add
mov
add
or
arpl
push
mov
add
dec
popf
or
jo
dec
xor
inc
rol
jo
add
les
add
mov
add
add
out
mov
ss
aaa
add
adc
and
add
outs
in
mov
out
dec
pop
ds
add
js
in
jp
add
push
xchg
ins
fmul
add
add
add
add
cli
sub
cs
sbb
xor
pusha
(bad)
mov
add
push
int3
add
add
in
add
add
pop
inc
leave
lea
int
outs
lods
push
stc
nop
add
mov
adc
in
lds
xor
outs
mov
rcr
add
add
call
add
lods
add
add
inc
retf
xor
pusha
add
pusha
(bad)
aad
push
or
inc
add
test
and
jns
dec
xchg
or
inc
outs
and
rcr
adc
or
add
ja
jb
clc
pop
cmp
add
add
add
dec
add
mov
add
outs
add
add
add
test
pop
xor
or
dec
add
sbb
inc
test
mov
ja
ret
stc
sub
jns
ins
jbe
add
ret
add
add
mov
add
add
add
and
pop
js
call
adc
sub
test
outs
mov
sbb
xchg
movs
pop
call
or
sub
cli
add
fld
dec
push
dec
add
add
popa
mov
sbb
add
xor
pop
sar
add
dec
add
add
ins
rol
add
add
dec
sar
clc
fimul
aam
adc
in
sub
movs
dec
jmp
add
nop
inc
(bad)
stos
sbb
push
aam
or
push
mov
loope
fld
pusha
pop
xor
hlt
adc
add
enter
add
xchg
add
stos
jl
scas
jne
add
fbld
mov
fist
add
fcomp
mov
loope
pop
inc
int
repnz
add
cli
pop
ins
pop
imul
mov
add
sub
data16
jb
ficomp
mov
in
pop
mov
add
xchg
push
inc
or
stc
test
fdiv
retf
adc
add
loopne
mov
in
stos
add
lea
xor
or
mov
add
(bad)
retf
outs
add
add
stc
les
out
je
add
test
cmp
cmp
cmps
hlt
add
out
sub
and
mov
popf
mov
scas
shr
cmp
neg
add
cmp
push
sti
cdq
aad
mov
(bad)
lods
aam
(bad)
cmp
lds
mov
stos
in
nop
fld
jmp
adc
mov
pushf
aas
push
xchg
adc
(bad)
fild
add
add
popa
add
add
add
and
mov
inc
pop
mov
push
int3
sti
pop
xor
pushf
add
xchg
adc
das
add
imul
test
(bad)
add
arpl
add
icebp
add
mov
call
inc
in
call
cmp
mov
add
add
fcom
jmp
add
jo
add
add
mov
add
cmp
mov
xchg
inc
mov
jns
mov
inc
call
imul
add
cmp
cmp
cld
mov
add
dec
mov
add
add
(bad)
jle
and
stos
add
sub
inc
xor
dec
fwait
jb
das
and
add
add
cmp
cdq
mov
sbb
jge
jl
cmps
add
add
add
mov
xchg
popa
sti
add
or
add
xchg
mov
test
add
outs
add
(bad)
ins
mov
out
es
mov
fild
add
xchg
cdq
mov
ficom
inc
fild
add
adc
mov
add
jg
in
push
rcr
mov
aad
sbb
fild
rol
push
sub
movs
je
add
add
add
rol
mov
sub
les
push
std
push
in
inc
ss
jp
addr16
jmp
daa
mov
js
sahf
lahf
and
jnp
add
cmp
xchg
sti
add
cmp
and
jno
pop
push
mov
stc
les
test
xchg
push
loop
stos
add
cmp
inc
(bad)
cmp
add
and
cmp
out
jnp
add
and
sbb
cmps
test
mov
add
aaa
dec
add
nop
mov
das
icebp
push
add
add
xor
mov
call
das
std
retf
mov
or
add
out
sbb
add
test
sub
dec
add
add
dec
mov
fadd
add
mov
add
mov
xchg
adc
add
adc
jne
mov
pushf
ds
scas
dec
fisubr
das
add
xchg
inc
dec
add
(bad)
and
fmul
add
imul
add
inc
sahf
out
add
add
cmp
add
pop
adc
add
add
add
fiadd
pop
(bad)
popf
jmp
iret
std
cmp
jne
nop
in
movs
add
add
xchg
test
ins
add
add
add
mov
cmp
add
pusha
add
mov
adc
xor
jmp
popa
or
in
test
mov
pop
retf
(bad)
aad
imul
loop
push
arpl
xlat
push
loopne
adc
add
add
outs
jae
movs
hlt
retf
xchg
aam
sbb
outs
repz
popa
add
add
and
xchg
pop
loopne
dec
je
fidivr
cwde
add
add
out
lods
add
push
jg
and
pop
add
add
add
jp
add
shr
mov
daa
cmps
pop
cld
mov
add
jle
mov
pop
add
adc
add
jo
push
loope
jl
inc
out
xor
add
enter
add
shr
add
xor
jo
or
xchg
cdq
std
mov
call
dec
(bad)
imul
jmp
add
jl
jl
xor
dec
jecxz
rol
int3
or
or
rol
mov
fbstp
pop
sub
daa
add
add
add
jg
jno
add
or
pop
icebp
adc
sbb
cmp
add
xor
cmp
add
add
je
(bad)
movs
and
add
enter
mov
jg
bound
fst
or
add
and
mov
nop
add
lahf
lahf
add
mov
push
mov
jmp
cmp
add
pop
add
imul
pop
xor
push
std
add
out
or
jbe
lods
fwait
mov
jmp
xor
ins
mov
pusha
xchg
fwait
inc
popf
cmp
sub
add
push
mov
outs
add
add
add
in
dec
test
popf
adc
add
add
xchg
add
test
add
add
mov
push
add
add
pop
sub
imul
and
add
xchg
push
mov
leave
add
pusha
add
add
add
cmp
add
cli
enter
add
and
jnp
fwait
mov
jp
stc
pop
les
add
fidiv
or
mov
add
add
add
data16
in
inc
add
adc
mov
in
mov
loopne
pop
mov
add
fstp
add
add
jae
fmul
add
icebp
into
loope
adc
fld
add
add
jns
push
sbb
cmps
imul
add
cmp
cmp
pop
jmp
pop
sar
inc
jae
repz
dec
gs
rcl
cmp
rcr
pop
iret
loope
cmp
adc
pop
mov
add
outs
lods
pop
das
sbb
(bad)
sbb
add
add
imul
add
popa
out
test
add
add
mov
dec
jae
cmp
inc
mov
test
add
fs
mov
add
add
push
ret
ja
add
ins
in
int
(bad)
repnz
add
add
sub
add
pop
adc
dec
xor
add
out
push
add
sub
mov
fnstenv
or
add
add
add
cwde
and
(bad)
xchg
cdq
cmp
dec
or
adc
add
aaa
rol
add
aaa
es
jae
add
add
add
sti
test
clc
inc
or
lea
fcomp
mov
add
add
outs
push
push
mov
imul
add
loop
mov
mul
add
add
add
sbb
push
inc
fiadd
mov
clc
push
jmp
inc
mov
add
dec
add
add
into
inc
popa
sahf
ins
add
mov
xor
lods
add
and
mov
mov
add
stos
xchg
sti
add
fcomi
mov
pop
jae
add
add
popf
aad
pushf
(bad)
jb
(bad)
jl
add
add
mov
xor
adc
inc
add
add
les
ins
jb
jae
and
aas
out
sub
and
jge
adc
scas
mov
adc
mov
and
jne
push
add
jne
jnp
test
add
push
fsubrp
es
jge
adc
and
inc
add
jb
add
sbb
in
push
add
add
and
inc
in
and
add
add
or
dec
cmp
loop
add
and
in
jl
inc
daa
sub
push
ja
outs
add
add
push
popw
add
jge
scas
add
add
rol
add
add
add
push
mov
lods
mov
xchg
inc
add
test
add
xor
out
xlat
out
add
mov
ins
addr16
gs
ss
jnp
jle
retf
cld
outs
xchg
sti
push
add
add
sub
ds
add
and
push
jl
xor
add
sub
add
add
add
rol
ror
xor
lds
add
add
push
ret
ret
add
cld
jmp
(bad)
mov
mov
jo
add
bound
and
stos
add
add
add
mov
add
(bad)
add
fistp
gs
add
cmps
jo
add
aaa
les
xchg
repz
mov
(bad)
(bad)
add
add
jmp
and
cld
adc
jb
pop
add
cdq
ficom
add
jg
or
and
add
mov
stos
hlt
pop
cmp
call
dec
inc
and
push
ins
jne
add
add
cdq
add
in
jge
dec
inc
jp
push
shr
add
add
mov
add
sbb
sar
add
ins
ins
mov
mov
pushf
inc
pusha
add
sub
fidiv
std
sbb
jge
clc
add
add
mov
rcr
jno
or
cli
hlt
sub
add
xchg
arpl
add
xchg
jmp
inc
loope
popf
and
add
fdiv
inc
xor
in
xor
add
add
dec
icebp
jns
sbb
inc
mov
adc
cmps
test
add
add
add
sbb
add
in
or
xchg
add
push
iretw
push
jg
lock
movs
mov
and
popa
push
(bad)
and
and
data16
push
mov
nop
add
add
add
int
inc
or
leave
pushf
mov
clc
push
jle
(bad)
jae
mov
sub
add
add
and
jb
cwde
iret
mov
cld
add
add
add
push
add
and
add
mov
add
add
push
jmp
test
and
add
call
out
dec
pop
add
add
add
cmps
jmp
add
sub
dec
lock
(bad)
add
push
sub
add
add
or
cmps
add
aaa
add
add
add
mov
cld
sbb
pop
stos
arpl
rcl
push
pop
dec
mov
xor
mov
xor
xor
add
push
cmc
mov
jmp
cmc
xor
call
pop
or
add
ret
add
out
push
into
sbb
xor
fiadd
add
mov
cmp
clc
add
add
add
xchg
jne
out
mov
imul
retf
sub
imul
inc
pop
adc
js
or
xchg
daa
ja
mov
or
pop
add
loop
add
cmp
jge
cmp
add
inc
fsub
ss
jbe
fild
add
mov
pop
add
add
adc
loopne
adc
or
add
fsub
xchg
sbb
cs
aam
cmp
iret
jae
pop
cmp
arpl
add
adc
jle
xor
or
fnstcw
(bad)
mov
add
cld
js
add
mov
movs
cli
add
add
in
mov
retf
in
loop
lods
ficom
add
ror
add
adc
add
mov
arpl
clc
add
pushf
fist
add
loop
mov
add
inc
jo
add
jp
mov
fs
xlat
jb
add
add
std
mov
add
jle
(bad)
sbb
jmp
add
retf
push
inc
sldt
add
sti
add
add
cmp
movs
add
imul
add
add
ret
push
add
jo
push
les
add
jmp
fst
add
fist
xchg
jmp
or
add
add
imul
xchg
add
or
enter
sub
inc
add
add
retf
push
lea
fisttp
fadd
push
les
call
push
scas
faddp
clc
aas
pusha
sti
sbb
jmp
in
test
add
push
push
fwait
add
add
mov
mov
cli
add
pop
or
leave
es
popa
outs
push
sti
mov
jp
add
ins
pop
sbb
mov
stos
sbb
push
outs
sbb
jb
and
call
cmps
add
inc
add
add
jb
icebp
mov
mov
add
aaa
add
scas
or
in
idiv
mov
add
add
retf
add
mov
mov
inc
dec
add
pop
in
imul
add
add
dec
cmp
add
scas
pusha
add
dec
cmps
neg
test
outs
lea
cdq
push
sub
cmps
mov
push
addr16
mov
aam
jg
add
add
sbb
daa
clc
add
add
xchg
lds
mov
adc
push
jl
add
and
test
pop
push
out
dec
inc
add
sbb
add
and
shl
add
pop
adc
addr16
xchg
cwde
push
add
add
mov
jp
add
fld
jg
jl
pop
aam
add
enter
add
and
sbb
enter
add
lods
cmp
loop
push
and
add
nop
sub
adc
sti
inc
push
add
fdivr
icebp
add
add
sub
inc
call
pusha
dec
cdq
jbe
cmp
and
stc
add
add
push
add
pusha
loope
mov
retf
das
pop
in
ins
add
add
cmp
mov
pop
jg
adc
add
xchg
dec
add
xchg
fadd
add
jmp
xchg
inc
idiv
and
not
add
xchg
outs
dec
mov
sahf
push
ja
loopne
test
aaa
ret
retf
scas
cld
xchg
add
add
add
pusha
add
mov
rol
std
scas
sbb
mov
or
popf
fwait
adc
pop
clc
dec
clc
xor
add
outs
jp
(bad)
lods
add
push
sbb
or
fwait
mov
pop
in
add
je
add
sbb
add
push
and
add
add
add
add
add
stos
xor
loope
cmc
add
add
cmp
sub
sahf
add
add
adc
enter
add
or
nop
add
add
iret
in
add
(bad)
in
add
dec
add
adc
mov
add
out
cmp
inc
lahf
popf
pusha
push
mov
add
jns
imul
std
push
sti
add
movs
popf
add
or
idiv
jl
add
frstor
push
add
(bad)
es
hlt
add
add
sbb
movs
inc
adc
add
jbe
and
xor
inc
xor
add
add
sbb
add
mov
mov
mov
mov
pop
sldt
sbb
sub
add
xchg
pusha
and
push
jl
(bad)
add
data16
add
add
cmp
ret
jae
and
add
add
pop
xor
pop
jge
add
add
cmp
scas
add
lock
jnp
add
repnz
cmc
jl
adc
add
aaa
add
add
call
test
add
pop
add
into
add
push
add
shl
push
ds
frstor
add
gs
add
pop
push
mov
add
add
add
fbstp
mov
and
add
leave
aam
cdq
inc
or
add
or
push
jo
add
retf
fwait
pop
add
mov
inc
sar
inc
stos
adc
push
sbb
outs
or
dec
retf
mov
jmp
add
push
cmp
add
cmps
add
or
jp
(bad)
and
pop
iret
inc
xor
add
lds
xchg
mov
lahf
xchg
adc
add
retf
mov
mov
add
and
add
inc
add
add
add
bound
add
into
lock
mov
pop
add
add
outs
push
icebp
movs
aam
add
pop
fbld
xor
jp
leave
add
add
pop
ja
push
test
xchg
jae
dec
add
add
cmps
rol
add
rol
push
retf
nop
push
pop
add
add
(bad)
xchg
add
push
xor
jnp
or
jle
aam
mov
mov
dec
mov
add
cdq
mov
aad
add
mov
jbe
add
add
ja
(bad)
fimul
push
dec
and
mov
in
mov
add
push
sti
aam
push
sbb
mov
fidivr
ja
push
ficomp
(bad)
add
add
mov
loopne
icebp
mov
add
sbb
xchg
push
add
adc
jp
lods
add
loope
ret
int3
and
add
push
sbb
add
bound
add
add
popa
pushf
or
add
lods
add
add
sbb
add
add
pop
pop
push
stos
sar
cmp
sbb
call
or
jmp
loopne
rcr
ret
add
int3
inc
add
movs
pop
sti
fild
mov
outs
add
ins
push
add
in
sub
int3
push
add
add
add
adc
or
add
retf
jno
out
stc
not
pop
and
test
add
test
icebp
xor
addr16
xchg
pop
fdivr
add
dec
add
mov
test
in
out
add
mov
or
dec
jnp
in
push
(bad)
int3
popa
shr
cs
in
pop
adc
int
pop
or
add
call
xchg
or
add
pop
call
ins
sar
adc
add
fisub
rol
pop
fwait
xchg
add
add
add
add
shrd
pop
pushf
rol
xor
sub
add
add
rcl
or
xchg
xchg
shl
dec
dec
addr16
add
push
(bad)
mov
ja
sbb
out
pop
jl
add
repz
lods
add
dec
add
loop
add
add
mov
or
rol
push
seto
cmp
ret
add
add
push
(bad)
and
cmp
add
inc
retf
add
loop
push
cmps
gs
add
add
or
mov
ss
add
xchg
outs
arpl
jne
jle
dec
and
jecxz
add
aam
out
and
cmps
xor
or
add
mov
jo
in
mov
scas
and
add
add
add
popf
xor
lea
add
fwait
sti
jb
in
not
icebp
jge
add
add
scas
ror
add
add
fdivrp
(bad)
push
jne
pop
xchg
or
inc
xchg
sub
sub
loop
(bad)
out
call
add
add
test
add
or
jl
add
add
add
(bad)
add
lods
mov
in
out
sti
jb
ret
add
lods
loop
jmp
bound
icebp
xchg
(bad)
ss
mov
pop
add
mov
mov
add
stc
fnstsw
xor
mov
adc
ret
mov
mov
inc
mov
mov
sbb
popf
pop
add
add
sbb
or
rol
add
add
lea
add
pop
and
iret
das
push
(bad)
push
mov
cmp
push
or
or
je
sub
add
lea
fistp
add
outs
aas
push
jecxz
inc
xrelease
adc
gs
mov
add
add
sbb
lock
(bad)
dec
mov
mov
add
adc
add
add
rol
and
and
add
mov
mov
cmps
stos
add
add
cli
add
mov
addr16
fcmove
lds
add
mov
ins
jg
sub
enter
dec
adc
mov
mov
add
add
mov
xchg
jp
fnsave
cwde
add
out
jmp
jnp
fmulp
jne
push
add
icebp
enter
test
retf
xlat
loopne
loope
dec
jp
sub
add
jnp
jmp
add
add
pop
jg
pop
mov
pop
push
add
js
add
or
add
add
add
pushf
movs
out
add
inc
add
aas
mov
or
add
dec
js
test
add
stc
sub
adc
mov
pminsw
rol
lahf
or
inc
add
add
sbb
add
bound
jb
push
and
pop
sub
add
mov
add
cld
sbb
xlat
cli
xchg
aas
push
add
out
add
push
mov
add
lds
icebp
fadd
add
iret
das
lock
sub
cmps
sar
or
adc
mov
lods
fadd
and
add
add
jne
push
xor
add
push
and
mov
movs
add
and
add
std
or
add
add
add
test
cmp
imul
add
fisub
add
add
aas
add
test
int
add
cmp
add
sbb
inc
mov
add
jae
pop
shl
lods
mov
cwde
sbb
add
jnp
scas
imul
add
xchg
cmp
add
add
add
lods
add
add
enter
cmp
pop
dec
jns
xchg
add
add
push
add
pop
add
push
lock
add
and
add
out
lods
test
stc
dec
mov
xchg
mov
adc
(bad)
fcomp
cwde
add
mov
add
rol
loop
call
mov
push
fst
push
pop
pop
add
movs
inc
add
nop
add
push
adc
mov
add
cli
sti
add
sahf
loop
aam
mov
or
add
mov
add
ins
add
mov
lods
dec
ret
mov
(bad)
push
xchg
add
add
es
popf
ja
add
add
add
inc
rol
add
in
add
mov
pop
pop
dec
pop
or
add
pop
aam
mov
sbb
mov
cld
sbb
fmul
mov
add
sub
pop
clc
xchg
sub
pushf
add
imul
xchg
lea
add
sbb
add
test
mov
inc
(bad)
inc
xor
add
stos
and
sub
dec
fadd
add
sbb
add
lods
popf
int
test
add
dec
imul
push
push
add
add
pop
sub
add
xchg
adc
int3
rol
nop
mov
mov
xor
sbb
and
add
add
outs
icebp
add
add
test
xchg
loope
pop
mov
add
ja
adc
add
mov
xlat
and
mov
inc
jmp
arpl
sahf
jg
add
cwde
add
mov
dec
lods
lods
add
and
adc
add
add
add
add
adc
mov
fld
add
rcl
sub
jl
adc
inc
add
add
retf
or
mov
sbb
add
fidiv
inc
adc
adc
add
push
and
in
add
push
jecxz
inc
out
xchg
lds
add
sbb
mov
inc
add
add
add
add
pop
sti
mov
inc
xor
pusha
lock
ret
add
add
fld
pop
add
add
add
add
(bad)
icebp
dec
ret
and
add
test
push
pop
add
mov
add
stos
clc
call
dec
fxch
jb
add
add
out
push
je
(bad)
shr
in
add
pop
cmp
or
add
icebp
sbb
dec
aas
add
stos
int
add
add
dec
add
in
hlt
ins
add
pop
and
inc
mov
cwde
int3
rol
add
lods
add
mov
add
jbe
fs
imul
add
add
push
mov
fstp
ficomp
adc
rcl
jp
pushf
pop
or
sbb
shl
add
push
add
add
or
add
pop
push
add
add
pop
cs
add
add
add
mov
stos
add
in
mov
jno
jo
sbb
ds
jmp
jnp
gs
jle
clc
ss
dec
add
and
add
add
add
repnz
add
inc
ss
add
fimul
sbb
and
into
pop
add
add
sbb
add
fcom
add
add
push
(bad)
add
add
(bad)
repz
add
add
mov
add
and
add
(bad)
addps
outs
mov
jne
push
mov
mov
inc
inc
and
fcomi
inc
fisubr
loopne
pop
cmc
dec
std
stos
and
lea
cmp
or
xor
pop
cmps
dec
mov
xchg
in
cmp
jp
ins
xchg
inc
scas
add
add
push
add
out
test
mul
andnps
add
add
adc
sbb
add
inc
sbb
xchg
inc
add
xchg
vmread
add
add
xchg
ins
ret
mov
add
add
addr16
lock
not
jge
add
push
test
add
add
xor
stc
mov
add
cs
cmp
add
sbb
add
pop
adc
or
aam
xchg
add
repz
repnz
in
sbb
push
gs
pop
rcpps
ror
call
add
xor
jnp
enter
arpl
mov
fild
outs
ret
retf
add
add
add
popa
or
add
add
inc
adc
in
adc
sti
add
xor
add
xor
adc
cs
or
mul
pop
rol
add
mov
or
mov
je
rol
dec
xor
push
push
pop
or
add
dec
sbb
mov
add
add
add
mov
mov
add
xor
lds
cmp
add
sti
stos
sub
mov
adc
and
add
cmps
(bad)
add
int3
jns
retf
mov
iret
scas
add
call
loop
add
add
pop
or
add
fdivr
sub
scas
or
add
add
jae
jns
add
add
jp
add
adc
icebp
jl
add
add
xchg
mov
push
push
add
add
test
ins
loop
cmp
add
ins
fistp
fcmovnu
add
add
inc
add
inc
sub
mov
aam
add
and
mov
xchg
dec
das
out
add
add
add
add
ins
loop
mov
data16
movs
add
add
add
mov
and
test
sbb
ficom
add
pop
mov
add
aas
test
(bad)
sub
mov
ret
mov
inc
cmp
add
push
xchg
inc
dec
(bad)
pop
test
push
add
sti
into
shl
pop
cmps
add
add
pop
daa
or
push
int
add
cmc
add
ss
retf
add
push
push
xchg
xchg
jmp
pop
repnz
cmp
mov
daa
add
add
add
push
rol
add
sbb
lea
lds
add
int3
mov
xor
aam
retf
add
push
pushf
ds
or
not
jmp
add
xchg
test
pop
add
cmp
dec
jbe
cmp
shl
push
lods
stos
mov
cpuid
xchg
mov
sbb
add
push
out
xor
push
gs
cmp
add
mov
daa
inc
fnsave
mov
stos
pop
pushf
outs
or
add
addr16
or
jae
jmp
adc
add
add
adc
add
inc
push
jae
and
add
aaa
fdivr
xchg
popa
shl
mov
fsubr
inc
or
fwait
adc
add
xor
aam
pop
(bad)
scas
lods
aad
xchg
or
and
add
add
jp
dec
add
xchg
pushf
add
pusha
lahf
add
jl
lods
retf
mov
xchg
add
add
add
pop
inc
paddb
add
pop
cmp
int3
add
add
jp
add
pop
push
ror
imul
add
add
pop
outs
dec
bound
out
push
pop
push
and
xor
ja
mul
dec
add
add
stc
arpl
bnd
mov
(bad)
push
add
add
push
add
add
add
mov
ins
add
adc
jmp
mov
pop
outs
add
add
add
xor
xchg
mov
lods
std
sub
sbb
add
add
add
cwde
sbb
inc
sbb
sbb
outs
cmp
inc
mov
add
add
and
aaa
aad
cmp
add
jno
mov
mov
pop
add
stos
add
add
dec
mov
add
inc
repnz
retf
add
mov
in
out
add
add
add
gs
jb
push
add
add
imul
mov
add
daa
out
add
cmp
scas
sahf
and
jbe
(bad)
add
adc
inc
push
add
sbb
test
pop
dec
xchg
data16
popf
push
xchg
push
push
outs
sbb
add
add
shl
fpatan
push
lock
add
mov
add
test
inc
mov
mov
add
sbb
or
push
xchg
popf
add
push
add
jmp
add
add
mov
jle
mov
arpl
ds
push
xchg
sbb
pop
jp
push
test
jmp
add
sub
add
sub
mov
add
pop
add
add
push
xor
lea
push
mov
push
jmp
pop
jo
adc
ins
inc
add
aad
test
add
movs
imul
add
in
push
xchg
jb
add
inc
mov
jmp
push
cld
mov
call
add
jns
push
add
test
pop
jb
add
lldt
sbb
add
test
add
out
lea
into
or
xor
add
popa
add
push
add
add
push
imul
test
add
cli
ficom
lods
movs
pop
fwait
std
jl
ds
sub
push
add
add
add
mov
dec
and
jne
sub
xor
xor
add
jmp
lods
push
mov
add
mov
add
popf
sbb
add
jmp
mov
add
add
mov
std
add
adc
(bad)
test
jp
shl
movs
push
add
add
mov
cmp
out
pop
jmp
add
add
sbb
or
add
(bad)
retf
add
push
push
iret
(bad)
rcl
add
cmp
push
mov
jnp
adc
add
mov
add
retf
call
push
add
add
nop
les
shl
cmp
fmul
sub
iret
add
mov
sub
cdq
pop
je
test
mov
(bad)
fldcw
add
add
lahf
gs
out
push
mov
add
push
dec
clc
aaa
mov
add
add
repnz
add
clc
push
add
add
add
jmp
add
cmp
sbb
add
daa
mov
cmp
mov
call
das
out
pop
add
fst
mov
add
dec
div
sahf
adc
out
cmp
xchg
xchg
xchg
jbe
popf
jns
scas
mov
add
ret
out
add
adc
add
add
in
xchg
(bad)
mov
in
inc
xchg
sbb
std
sub
or
add
aaa
jns
test
mov
push
or
stos
loop
dec
jne
jecxz
scas
add
add
leave
inc
mov
add
fisttp
jmp
push
mov
(bad)
int
add
int
push
push
bound
les
xor
add
pop
pop
or
hlt
sbb
jle
loope
outs
fadd
or
add
cld
dec
aaa
mov
enter
or
mov
add
je
repnz
test
push
fadd
add
into
and
ret
add
add
add
add
add
xor
add
rcl
add
add
loopne
add
outs
add
sti
outs
fyl2x
loopne
add
add
add
add
ss
push
div
mov
xor
rol
cmp
fnstsw
and
ret
add
stos
pop
add
add
lock
mov
test
or
mov
jns
add
ins
outs
jmp
add
and
loopne
mov
rol
add
and
push
mov
rcl
add
jno
dec
mov
xchg
xor
add
es
int3
int
add
ja
rcl
stc
dec
(bad)
adc
data16
mov
cmp
add
pusha
aas
xchg
adc
add
push
inc
add
daa
xchg
add
add
pop
inc
les
add
clc
std
pop
mov
add
outs
add
add
add
add
ins
gs
(bad)
in
inc
sbb
add
xchg
shr
add
into
sub
add
jp
add
fwait
add
test
add
add
cwde
test
cld
mov
shr
in
jne
mov
lods
add
jl
cmp
mov
push
add
mov
add
lods
add
out
adc
mov
add
cmc
dec
jmp
lds
add
add
cmp
add
sub
or
test
or
pop
cmp
pop
add
cwde
outs
pop
add
jae
ins
add
add
test
addr16
ficomp
call
push
push
leave
add
jmp
add
mov
add
add
fist
inc
mov
add
jno
ins
add
mov
add
add
add
mov
mov
add
cmps
out
add
add
add
in
rcl
inc
add
cmp
fiadd
lods
test
add
mov
sbb
add
xchg
lahf
add
add
aas
sub
jo
xchg
or
iret
fucomi
retf
mov
add
add
sbb
jo
imul
inc
ins
sub
add
leave
xor
add
add
pop
rcr
fld
inc
dec
fiadd
add
aad
add
mov
add
inc
add
or
add
mov
push
mov
fs
pop
loope
add
add
add
xchg
add
add
xchg
bound
add
and
rol
mov
push
mov
jmp
dec
mov
(bad)
fs
frstor
mov
inc
pop
mov
and
mov
inc
leave
cmp
fs
add
inc
xor
add
add
loopne
add
add
or
sbb
dec
mov
sbb
jb
(bad)
adc
add
inc
add
add
add
pop
add
cmovo
retf
cld
popf
scas
xor
and
xor
inc
inc
sahf
retf
push
add
inc
add
imul
shr
mov
rol
loop
fsub
cwde
adc
add
add
add
push
inc
dec
(bad)
cmps
add
ret
cmp
add
add
cld
sahf
pop
add
scas
rol
rol
add
add
arpl
retf
xchg
sbb
inc
loopne
add
ss
adc
rcl
add
pusha
in
mov
imul
mov
xchg
mov
jmp
adc
lock
jp
outs
add
call
outs
pop
add
jmp
mov
fmul
cmp
jp
sub
test
lods
pop
imul
adc
test
xor
xchg
push
pop
jae
add
add
add
retf
fild
add
ins
xor
in
cmp
retf
in
(bad)
and
iret
out
ltr
iret
add
jl
add
add
lahf
or
add
mov
loopne
or
retf
add
icebp
add
sub
sbb
repz
jle
ds
add
push
sbb
mov
bound
out
pop
rcr
cwde
call
adc
mov
add
jbe
add
or
add
dec
add
call
or
pop
push
add
sbb
add
xchg
mov
add
stc
xchg
sldt
add
adc
add
add
mov
add
adc
ins
pop
add
add
add
jnp
inc
add
pop
pop
mov
mov
fs
push
add
add
pop
add
add
add
stos
pusha
push
out
add
movs
add
push
xlat
lds
add
adc
add
dec
add
(bad)
mov
add
popa
cdq
add
neg
jbe
add
add
(bad)
(bad)
jg
add
lahf
sub
js
pop
(bad)
loopne
lods
pop
mov
pop
add
sub
call
jge
inc
mov
add
js
add
cmc
sub
add
add
loopne
les
pop
and
add
popa
mov
adc
add
sar
sub
add
add
dec
cmp
add
icebp
add
jns
loop
rol
fild
int3
and
add
adc
add
adc
mov
sbb
loopne
add
add
mov
pop
push
in
add
add
mov
add
jg
add
inc
es
sti
or
(bad)
stc
popa
gs
add
(bad)
lock
add
fdiv
fiadd
add
movs
loopne
popa
sub
dec
add
add
inc
xchg
outs
mov
mov
shl
add
add
add
add
add
leave
test
add
add
mov
mul
xchg
hlt
dec
push
cmp
movs
mov
add
leave
inc
add
aas
mov
sbb
(bad)
leave
pop
cdq
jl
repnz
pop
mov
repz
mov
outs
add
add
add
inc
xor
add
repnz
js
add
jecxz
cdq
arpl
add
or
add
pop
add
add
enter
aam
add
add
add
xchg
jmp
add
lea
add
xor
dec
mov
call
mov
add
add
dec
hlt
ins
stos
mov
add
cwde
jmp
push
jo
mov
adc
ret
add
lods
retf
or
sub
ins
repz
ficomp
add
es
mov
mov
add
fidivr
add
pop
fisub
shr
add
data16
adc
js
je
pop
sbb
scas
test
rol
mov
ins
and
iret
add
outs
(bad)
fidivr
mov
in
pop
and
jecxz
mov
retf
jne
xor
add
mov
add
pop
dec
int3
mov
adc
add
shr
dec
adc
ins
add
jmp
dec
lahf
or
add
movs
pop
sbb
clc
xchg
push
mov
add
or
icebp
jo
add
cld
movs
cwde
xchg
imul
jl
or
stos
and
push
je
out
push
push
ja
add
jae
or
pop
int
add
jl
add
xchg
add
add
xor
add
stos
ins
xchg
cmp
sub
scas
cmc
xor
pop
pop
fcomp
aad
lods
in
xadd
scas
jecxz
add
add
add
add
add
mov
mov
fld
inc
adc
xor
dec
js
movs
xchg
add
push
cmp
cdq
push
std
shl
add
jge
xchg
sub
sub
inc
add
add
xchg
cmps
clc
call
add
inc
fsub
add
adc
hlt
add
add
sub
xchg
add
imul
inc
out
add
rol
add
imul
and
mov
inc
dec
pop
cmps
ss
repz
in
dec
jns
push
dec
add
cmp
enter
mov
add
call
add
or
add
add
rol
push
add
add
or
jmp
mov
pop
or
push
cmp
jae
mov
rcr
fsubr
cmp
add
add
(bad)
inc
jl
ja
pop
add
pop
jae
add
jmp
add
add
cmp
add
pusha
das
das
add
add
or
add
add
ret
adc
add
add
jo
add
dec
add
add
test
repz
mov
repnz
inc
cmp
mov
add
add
fdiv
pop
lods
push
jno
add
sti
push
pusha
add
push
add
add
jle
add
mov
add
add
pop
aam
mov
add
adc
jecxz
fiadd
jmp
pop
jl
movs
xor
cs
repz
add
inc
fidivr
hlt
jmp
add
pop
mov
je
add
add
add
shl
add
add
arpl
add
in
add
mov
sbb
add
sub
cmp
add
add
add
add
xchg
push
out
push
out
xor
je
add
add
paddb
add
push
add
add
xchg
mov
sbb
pop
arpl
add
fnstsw
mov
fild
xchg
add
in
aam
pushf
mov
call
xor
pop
out
add
add
enter
in
add
int
add
sub
ret
cmc
(bad)
ja
jo
dec
mov
out
lods
stos
add
add
inc
add
add
and
add
add
ror
imul
add
add
fiadd
xchg
(bad)
jo
xor
out
and
mov
cmp
mov
add
aaa
pop
iret
lock
pop
leave
shr
sti
add
cmp
add
aad
ret
push
add
aam
mov
push
add
inc
loopne
retf
sub
fiadd
add
popa
cwde
pop
jo
leave
fisubr
and
shl
xor
mov
xchg
xchg
adc
xchg
cmp
mov
push
icebp
loopne
adc
add
pop
lock
xchg
cli
ins
scas
scas
add
push
push
add
add
iret
(bad)
std
icebp
add
add
(bad)
cli
add
add
add
add
aam
cli
sub
add
sti
aad
ss
sub
mov
aam
add
add
add
add
add
xor
aam
add
dec
inc
(bad)
jae
(bad)
fiadd
add
bound
add
push
jae
add
add
add
add
addr16
add
cmp
pop
add
add
xor
push
mov
push
add
add
lea
mov
add
xor
cmp
call
add
add
shr
add
jle
add
cmc
add
add
inc
add
add
add
add
inc
jo
mov
add
add
cli
cmp
xchg
add
lods
jl
cmp
sbb
push
add
pop
xor
aas
pop
ret
xchg
int
popa
mov
cmp
mov
mov
xchg
add
fild
add
ja
imul
test
xlat
lock
stos
add
jl
cmp
loope
add
push
push
xchg
add
sub
inc
cmp
cmp
jge
icebp
xor
add
or
adc
add
dec
sbb
imul
jo
add
out
icebp
add
mov
dec
push
mov
add
add
add
xchg
mov
add
add
add
cli
pop
lods
add
fisubr
xchg
inc
outs
call
or
add
aam
imul
jp
stos
and
bound
stos
inc
add
add
add
fiadd
add
fnstcw
inc
test
push
add
push
lods
cmp
mov
mov
sub
add
inc
mov
movs
pop
xchg
sub
call
add
and
lahf
dec
sbb
mov
add
mov
rol
add
sar
xchg
mov
jmp
adc
sbb
add
inc
sahf
call
icebp
rcr
mov
add
int
jbe
add
cs
add
in
aam
mov
add
ins
cmc
mov
adc
retf
xor
push
adc
cdq
test
add
add
int3
out
and
mov
nop
add
add
inc
jmp
test
dec
sub
add
push
ins
inc
add
dec
adc
add
(bad)
aaa
cpuid
add
imul
xor
dec
xlat
sub
jecxz
add
loope
ins
add
pop
cmp
cwde
add
jge
aam
inc
adc
(bad)
sbb
(bad)
push
(bad)
add
bound
jmp
add
mov
sub
(bad)
jo
add
add
mov
xor
push
test
pop
pop
add
adc
add
retf
popa
mov
add
in
mov
hlt
mov
xlat
lds
sbb
and
add
add
clc
retf
and
push
add
add
test
push
xor
xor
add
sbb
add
lahf
adc
out
jmp
fiadd
add
cmp
shl
add
inc
add
add
enter
ret
shr
push
dec
rol
sbb
push
clc
add
add
add
pusha
rcl
xchg
jmp
jg
add
inc
shl
and
push
add
mov
add
add
retf
push
sub
push
add
arpl
xor
mov
cmp
adc
ret
add
add
icebp
push
mov
or
stos
add
jb
dec
add
mov
ror
add
xchg
and
add
or
xchg
fdiv
fnstcw
out
outs
rcr
scas
jle
shr
(bad)
fiadd
gs
inc
je
add
loopne
add
add
das
outs
add
push
pop
add
add
fisubr
add
aaa
in
sti
add
add
add
add
stc
mov
retf
xchg
mov
and
add
aaa
push
add
sub
add
add
dec
arpl
add
iret
inc
add
or
js
test
cli
test
add
and
fild
add
add
mov
add
add
cmp
ds
into
nop
sti
push
popf
fs
xchg
dec
inc
mov
push
arpl
add
add
add
add
movs
mov
add
je
cli
xchg
sub
xor
stos
jle
and
pusha
mov
leave
add
add
pop
cli
add
pop
jl
jle
mov
add
mov
leave
mov
mov
retf
or
add
jmp
add
inc
sti
and
icebp
and
test
add
icebp
jne
movs
sub
add
fist
mov
inc
add
jg
add
add
int3
pop
add
cmc
jle
mov
xor
add
sub
mov
xor
pushf
sbb
add
dec
push
movs
add
add
rol
and
mov
add
mov
cdq
rol
(bad)
clc
stc
aas
je
add
add
test
jbe
shl
loop
mov
pop
jno
ret
out
mov
push
xor
mov
out
add
dec
cmp
adc
add
adc
xor
jge
les
sbb
add
in
pop
push
sub
sub
movs
xchg
add
fld
add
add
add
jno
aam
xchg
xchg
pop
add
inc
pop
cmp
mov
mov
add
fsubr
(bad)
adc
add
add
add
add
rcl
mov
pop
bound
test
add
add
ins
test
aad
adc
sub
das
sti
sti
sbb
jnp
sahf
jmp
xacquire
or
add
add
pop
pop
js
add
push
retf
add
push
mov
add
xor
cmps
jb
xor
pop
xor
lods
pop
adc
loope
inc
sbb
sub
add
pop
or
sahf
jecxz
add
add
mov
cmp
sbb
add
lods
(bad)
pop
shl
ss
add
jg
add
and
pop
mov
adc
in
dec
in
movs
add
add
in
jmp
xor
push
(bad)
data16
add
fs
adc
jo
jmp
lds
adc
xchg
pop
add
add
mov
shr
popa
add
scas
push
or
mov
adc
add
test
add
dec
(bad)
sbb
sbb
dec
add
out
mov
xchg
and
fs
xor
dec
arpl
out
mov
push
inc
add
add
xchg
add
add
add
push
outs
push
lds
icebp
sub
sub
jb
dec
nop
out
lea
ror
popf
xchg
inc
imul
inc
and
retf
xchg
add
inc
xchg
add
xor
add
add
enter
or
call
jmp
icebp
xchg
loop
loop
imul
and
add
popf
inc
add
add
(bad)
sahf
cmps
xchg
int3
add
add
sar
loop
dec
push
and
pusha
out
movs
imul
js
add
cwde
add
inc
lock
add
test
test
loopne
add
pop
jge
mov
adc
lahf
pop
outs
or
das
xchg
adc
sub
shr
scas
cmps
sldt
jne
daa
sbb
xor
sar
fidiv
pop
add
stos
or
or
mov
mov
add
(bad)
daa
push
xchg
(bad)
bound
xchg
add
add
and
adc
arpl
add
jns
xchg
push
sbb
add
data16
add
jae
add
fs
bound
sub
cs
push
sbb
add
add
fidiv
add
jb
add
test
test
add
add
sub
sbb
xchg
jae
add
fiadd
add
popa
or
jmp
lahf
add
add
add
pusha
add
jecxz
pop
mov
movs
add
jge
sub
pop
push
outs
mov
mov
mov
add
add
into
pop
test
add
adc
add
xchg
add
lods
add
jecxz
(bad)
cmc
pop
pop
test
push
xor
add
push
jl
cmc
shr
inc
inc
push
or
sbb
(bad)
or
mov
inc
xor
add
add
pop
lods
cmps
xchg
inc
les
add
push
and
add
sbb
rol
add
add
dec
jnp
stos
das
add
and
add
add
add
add
add
add
(bad)
push
fiadd
aaa
add
push
xchg
mov
mov
xchg
clc
jmp
add
jl
and
mov
add
in
xlat
dec
fcom
jg
std
add
add
idiv
fild
add
ret
call
dec
ret
int3
jmp
adc
add
add
add
pop
data16
add
jmp
test
mov
cwde
mov
add
or
add
cmp
sti
and
imul
leave
lds
test
daa
sub
pop
adc
xchg
xor
push
es
sbb
add
pop
aam
add
sub
das
add
add
inc
dec
test
or
push
mov
mov
stos
mov
add
add
aaa
je
outs
xor
mov
pop
jno
add
mov
test
add
push
mov
out
pmaxub
xchg
add
test
add
xchg
add
add
imul
add
rol
push
mov
mov
addr16
into
outs
les
add
loopne
sub
jnp
cmp
ror
dec
sbb
rcl
ret
fidiv
mov
push
add
das
daa
ja
or
add
add
add
adc
adc
pusha
in
aam
std
xlat
pop
adc
jnp
cdq
rol
cmp
add
mov
arpl
lea
add
arpl
add
sahf
stos
dec
add
add
adc
pop
test
ja
add
mov
add
fld
pop
cmps
loopne
mov
daa
rcl
cli
sbb
mov
bound
cmp
loope
mul
adc
mov
outs
data16
jle
mov
enter
aam
add
add
adc
cmc
push
loopne
add
pop
fist
in
pop
repnz
outs
pop
sub
call
add
scas
inc
mov
push
dec
sbb
add
out
jge
add
jg
mov
add
inc
push
add
or
add
das
push
xchg
and
add
lock
jbe
jp
push
jbe
add
arpl
cmp
add
add
std
add
cmp
add
fimul
hlt
add
pop
(bad)
add
add
outs
and
xor
add
cmc
inc
and
add
adc
js
add
jle
add
push
cmp
xchg
call
add
add
sbb
sub
push
xchg
jmp
add
cmp
push
add
add
mov
xlat
add
cmp
add
add
add
jmp
pop
or
pop
enter
jno
test
add
push
dec
in
add
mov
outs
retf
jno
inc
pop
fstp
sub
sti
fdivr
call
mov
add
in
mov
or
and
and
add
repnz
fcmovnu
add
pop
dec
aaa
add
arpl
add
mov
add
push
sub
push
stos
pop
jne
imul
add
add
add
push
or
stos
add
mov
ss
add
xor
add
add
jmp
add
pop
outs
push
xor
(bad)
cmp
jecxz
add
out
adc
dec
pop
fistp
xchg
aad
cld
int3
cwde
ja
lock
and
add
nop
movs
lahf
cld
jmp
add
add
mov
ret
jnp
in
fisttp
add
popf
sub
add
add
pusha
pop
or
mov
pop
add
adc
jb
int3
lea
daa
out
dec
ins
jne
dec
add
mov
add
lods
sbb
add
repnz
(bad)
lods
mov
sbb
push
sub
add
outs
sub
sub
sahf
or
adc
add
clc
add
add
add
enter
add
add
add
call
les
(bad)
push
mov
repz
cli
xlat
lahf
add
lods
dec
jp
push
add
jae
inc
test
out
sub
mov
pusha
sub
loop
ror
sbb
add
mov
lock
mov
mov
add
xlat
jmp
ds
les
mov
inc
or
push
mov
add
add
add
add
lock
call
jge
add
add
mov
inc
aas
cmp
add
add
add
add
add
jle
add
fs
les
jmp
or
push
pop
add
test
add
mov
mov
(bad)
mov
cld
sti
out
and
test
add
(bad)
jmp
push
in
add
push
jle
adc
push
jae
fstp
add
es
add
lock
outs
add
(bad)
xchg
add
add
add
jle
mov
test
cmp
pop
add
pop
add
add
add
(bad)
xchg
sub
dec
data16
lods
pop
mov
xchg
lock
xor
xor
add
js
add
add
add
in
push
sub
add
mov
push
loope
sub
(bad)
pop
and
xor
ficomp
sahf
cmps
sub
add
push
push
fld
out
add
add
add
mov
pushf
and
or
push
add
add
mov
push
sbb
dec
jo
mov
add
not
loope
dec
add
add
sub
add
xchg
js
ret
fs
and
jne
add
add
add
outs
sub
xor
test
nop
cmp
add
add
aas
pushf
mov
(bad)
xchg
outs
adc
or
pop
aaa
mov
sub
repnz
mov
push
dec
push
or
ins
sub
xor
jno
add
pop
rcr
add
cmp
icebp
test
call
test
jle
add
jb
in
sbb
push
xchg
mov
ins
scas
mov
add
add
add
inc
loop
mov
ss
add
add
mov
xchg
mov
add
jle
add
add
dec
mov
stc
mov
add
cmp
add
add
or
add
sbb
retf
dec
add
sub
pop
cmp
int3
add
mov
adc
or
add
(bad)
add
sbb
fiadd
add
iret
ret
cmc
add
add
sub
xchg
sub
jge
xchg
cmps
inc
add
push
inc
cmp
add
adc
aad
dec
fisub
fld
adc
sub
push
mov
pop
jle
inc
cwde
repnz
fadd
add
cld
js
lock
or
add
dec
ja
add
add
out
nop
jno
cmp
add
add
inc
mov
or
add
cmp
add
inc
int
adc
mov
jmp
xlat
add
std
dec
jge
cmp
lds
mov
mov
mov
arpl
mov
xor
in
jo
retf
xor
rcl
add
pop
add
jo
dec
fdiv
cld
cmp
add
add
add
add
test
add
popa
loope
fstp
add
xchg
add
in
jbe
test
sbb
mov
add
pop
iret
out
fs
inc
cmps
rol
pop
and
add
adc
cmc
push
pop
add
add
add
add
ins
mov
fs
cmp
push
add
ret
add
inc
push
pop
leave
add
mul
popf
lods
sub
mov
add
push
movs
sbb
mov
cli
fimul
xchg
add
test
xchg
imul
add
and
adc
mov
mov
push
out
push
jmp
inc
add
imul
rol
(bad)
in
add
add
add
mov
add
fwait
adc
cdq
add
stc
cmps
cmc
jbe
loop
outs
or
stos
mul
and
add
add
push
addr16
imul
add
add
push
rol
js
mov
add
add
xor
and
hlt
add
popf
rcr
add
int3
inc
add
add
in
add
mov
add
sub
add
lahf
add
add
add
retf
inc
enter
add
cmps
xchg
xchg
jecxz
sbb
mov
out
and
add
jmp
add
add
add
nop
into
add
out
pop
add
add
fdiv
xlat
cmp
add
cs
jnp
mov
mov
loop
add
dec
imul
out
xor
inc
add
add
add
in
hlt
test
add
rcl
popa
sbb
add
js
add
cmp
stos
add
movs
jb
add
add
or
adc
add
jbe
add
bound
add
jg
add
into
cmp
inc
xor
cmps
add
sub
add
out
adc
push
mov
loopne
add
iret
sub
add
add
sbb
add
mov
or
add
outs
xchg
test
mov
add
cmp
add
cmp
ins
add
pop
add
or
add
fcom
dec
cmp
mov
add
or
add
add
fadd
add
add
add
or
lea
inc
push
add
xchg
cli
add
sub
movs
jle
aaa
leave
sbb
in
add
xrelease
rcl
dec
sbb
mov
ds
les
add
mov
mov
cmp
cmps
add
pop
loop
push
rcr
(bad)
add
imul
xor
aaa
data16
ja
and
and
inc
sbb
mov
jbe
add
leave
ins
pop
out
(bad)
je
sub
add
and
call
add
add
fs
out
add
out
cmps
out
mov
rcr
dec
mov
test
xchg
pop
push
scas
sub
ja
add
enter
add
rol
add
xchg
es
fs
mov
add
add
jg
add
mov
add
fsub
pop
lods
mov
push
je
sti
add
sahf
mov
mov
mov
add
add
or
adc
mov
arpl
and
push
jg
sbb
add
add
in
fisub
add
das
jb
mov
jg
sub
and
push
outs
in
iret
sbb
add
jmp
add
jnp
add
push
cdq
cmp
cmp
mov
add
sub
push
lock
call
sbb
sldt
xor
push
add
movs
cmc
in
out
dec
push
sub
add
rol
mov
icebp
dec
imul
push
pop
or
add
leave
xor
mov
adc
popa
inc
sub
imul
mov
push
add
(bad)
fnstsw
add
add
sbb
retf
fst
inc
xor
or
pop
movs
stc
and
mov
jmp
cli
idiv
out
cdq
out
arpl
inc
mov
jmp
loope
add
add
lock
add
and
cli
inc
add
push
inc
call
fst
add
or
add
inc
(bad)
sub
or
pop
lock
add
add
or
add
test
add
xchg
mov
mov
add
add
add
adc
mov
sub
cdq
out
lahf
inc
cmps
in
cmps
adc
rol
loop
add
add
add
icebp
push
add
ins
xchg
add
add
add
and
scas
leave
aas
add
jae
sub
add
add
adc
add
inc
add
add
mov
add
mov
cs
sbb
add
jns
sbb
retf
arpl
ins
leave
addr16
mov
mov
mov
cmp
add
add
aam
loop
add
add
test
add
ins
cdq
fadd
xor
add
jno
rcl
sub
cmp
jl
inc
loop
add
and
add
loope
bound
iret
lods
(bad)
lods
inc
cmps
out
sub
jmp
cwde
stos
call
mov
test
leave
shl
xor
(bad)
aam
fild
add
xor
ficomp
add
push
aas
addr16
es
add
add
add
add
add
add
add
add
add
mov
imul
js
aaa
xor
out
sub
add
add
add
je
stc
dec
mov
rol
ins
add
add
add
add
icebp
jmp
pusha
mov
lea
aad
add
pop
ret
inc
add
(bad)
out
add
shl
add
hlt
outs
hlt
dec
pop
or
add
das
call
cmc
scas
or
popa
enter
mov
jne
mov
add
cmp
xchg
add
add
add
dec
data16
dec
or
or
add
std
add
xchg
popa
rol
scas
sti
inc
data16
add
add
das
push
int
nop
and
shrd
lock
sub
add
dec
add
loope
add
add
xchg
add
mov
fwait
hlt
bound
add
add
sbb
adc
pop
cmp
add
retf
add
push
jge
or
add
dec
cmp
hlt
or
add
add
mov
or
inc
sub
fidivr
or
xchg
add
retf
xor
add
mov
cmp
pop
fs
add
(bad)
add
add
push
das
add
(bad)
iret
jp
pop
sbb
cmp
mov
add
gs
test
sbb
mov
add
add
stc
scas
fadd
add
into
add
and
mov
mov
outs
cmp
inc
lahf
cmps
add
add
arpl
cmp
out
push
pushf
dec
clc
gs
pop
add
add
add
inc
cmp
push
and
jecxz
add
add
cdq
leave
add
cdq
jbe
sub
add
and
clc
add
dec
add
push
lds
ss
sub
es
pop
aam
sub
ror
add
add
aam
aad
add
xchg
add
add
push
out
push
add
imul
scas
ficomp
mov
or
mov
rol
cdq
cmp
test
(bad)
push
pop
into
mov
into
pop
hlt
retf
pop
xchg
jmp
add
std
mov
jp
cli
pushf
das
and
aaa
sub
adc
add
dec
hlt
inc
push
sbb
add
add
add
fs
ins
add
add
popa
or
sbb
mov
dec
iret
adc
ins
dec
fcom
inc
add
add
(bad)
out
dec
pop
xchg
xlat
int
int3
add
add
add
xor
mov
cmp
or
add
add
lahf
inc
arpl
jl
add
sub
mov
and
add
inc
and
rep
add
cmc
add
in
sub
add
add
xchg
dec
out
add
mov
stos
mov
out
xlat
add
jg
mov
add
cmovge
sar
and
pop
bound
scas
out
add
(bad)
mov
stos
fisttp
add
add
sub
jmp
mov
dec
add
arpl
mov
test
pushf
add
jnp
push
add
iret
adc
aad
sub
inc
rcl
cmp
out
outs
aas
(bad)
adc
add
add
xchg
xchg
icebp
jl
add
shr
add
and
dec
or
pop
pop
add
data16
jbe
pop
xor
inc
daa
inc
add
out
popf
xchg
add
stos
pop
bound
data16
or
adc
add
add
mov
add
add
add
add
and
push
add
add
add
pop
stc
sub
bound
pop
add
add
ins
add
cmp
gs
xchg
in
mov
add
pusha
mov
sar
add
outs
arpl
xchg
in
add
out
fwait
xor
add
add
sbb
sbb
mov
(bad)
loop
js
add
add
xchg
mov
add
dec
add
stos
jbe
mov
mov
fcmovne
fiadd
mov
mov
push
add
cwde
add
add
mov
mov
add
pop
pop
(bad)
mov
jmp
add
add
fdiv
into
pop
imul
aas
add
add
add
add
movs
scas
inc
lock
sbb
inc
or
int
add
outs
ins
add
xchg
jge
out
mov
xor
inc
not
ror
adc
movs
retf
aas
mov
div
add
add
pusha
dec
add
iret
aaa
mov
inc
sub
and
enter
jb
xchg
jmp
scas
jo
cmps
mov
add
mov
test
add
add
out
push
xchg
mov
add
sahf
xor
fsub
test
in
xchg
add
add
cmp
cmp
popa
push
cwde
add
sahf
or
jnp
das
fadd
add
push
stos
cmp
add
add
adc
add
xlat
movs
rcr
iret
add
shl
cld
push
add
add
or
(bad)
xchg
and
nop
rcr
cmp
test
pop
dec
ja
add
add
inc
fidivr
and
add
jge
ins
inc
aaa
xchg
mov
add
add
cmp
add
xchg
push
sbb
add
jo
add
mov
mov
loope
xchg
test
add
pop
cmps
add
add
(bad)
xchg
mov
repnz
add
pushf
add
xor
add
mov
add
xor
add
cmps
mov
and
add
repz
arpl
jo
add
mov
fidivr
mov
loope
add
add
add
add
or
add
dec
retf
cdq
or
push
add
add
and
fs
pop
ret
add
add
add
add
inc
ins
push
add
mov
pop
jmp
pop
and
add
pop
pop
cwde
ins
add
inc
add
add
mov
push
out
add
out
add
push
sti
adc
mov
jno
test
(bad)
mov
mov
add
add
or
pusha
sub
aas
clc
in
sub
push
push
fistp
gs
mov
add
cld
test
add
add
add
rcr
cmp
add
add
inc
es
add
jnp
sbb
add
mov
add
add
sub
add
add
jb
iret
pop
out
sub
add
daa
sbb
xor
or
dec
fisubr
aam
(bad)
or
call
add
stos
ja
mov
add
add
add
mov
fld
neg
fcom
add
aaa
loope
cmp
repz
add
mov
add
fadd
movs
mov
push
mov
int3
add
add
outs
or
dec
push
cdq
dec
add
sbb
cmp
add
dec
jl
(bad)
sbb
retf
jge
add
add
add
xor
and
aas
movs
add
sbb
add
mov
test
ins
int3
push
sbb
add
loope
pushf
and
adc
in
fbld
outs
add
add
sbb
sbb
adc
ret
call
xchg
(bad)
test
inc
cmps
out
add
add
add
cli
add
add
add
sub
add
jb
inc
clc
imul
and
sub
ffree
outs
lahf
inc
add
fcomp
add
add
rol
mov
sbb
add
fild
shl
push
add
pop
add
add
add
mov
push
jp
add
add
add
fst
push
fsubrp
inc
push
mov
add
add
add
add
add
add
in
(bad)
cmp
dec
lea
mov
add
scas
lock
shr
xor
dec
cdq
jno
and
add
inc
mov
push
add
mov
aas
cwde
push
popf
and
pop
jne
inc
xor
add
stos
push
fld
int
add
add
(bad)
xchg
rol
add
pop
push
mov
add
ss
aad
add
push
jo
test
add
pusha
mov
jle
xor
loop
lds
loopne
adc
call
add
add
xchg
call
pop
pop
push
mov
pop
jns
sahf
push
add
add
add
pop
(bad)
cmps
fild
in
xchg
daa
adc
adc
or
mov
add
ret
lds
test
popf
js
jnp
ret
add
add
out
outs
mov
add
sbb
mov
mov
jmp
pop
mov
add
and
add
inc
ret
or
add
test
add
add
dec
cmp
and
ss
add
mov
add
out
xchg
add
add
out
xor
add
jbe
stc
xchg
push
pop
or
add
add
mov
add
pop
sub
ficom
test
imul
std
pusha
mov
add
add
xor
add
leave
outs
fild
lock
js
inc
ret
loopne
add
cli
test
add
add
and
push
add
xchg
or
add
pop
js
add
pop
in
mov
pop
and
add
jae
leave
dec
nop
mov
test
mov
and
xor
mov
add
mov
jge
mov
sbb
aam
add
mov
jp
add
cs
mov
mov
dec
add
add
adc
loopne
add
add
xor
ins
out
jo
stc
add
add
xor
in
or
add
pop
in
add
add
ds
add
ds
push
out
xchg
fwait
jmp
add
add
repz
push
jecxz
sub
and
mov
(bad)
add
sbb
lea
add
push
imul
push
dec
leave
retf
push
push
mov
and
es
sub
add
dec
icebp
add
test
pop
lods
popa
add
jp
test
inc
mov
scas
in
mov
in
loop
and
add
push
cmp
jbe
add
pop
nop
mov
inc
jge
add
add
sbb
not
push
icebp
inc
add
dec
xor
stc
dec
jb
cdq
add
push
pop
inc
xchg
ror
jl
cmp
js
xchg
sub
sub
add
fld
add
lea
outs
xchg
daa
mov
dec
mov
cmps
add
jmp
mov
aam
pushf
mov
repz
jo
sub
add
test
jmp
xlat
dec
leave
push
test
mov
ins
call
pop
scas
cmc
add
ds
movs
addr16
add
rcr
cmc
xlat
rol
add
inc
push
ins
cld
pop
pop
imul
add
add
std
inc
pop
inc
jnp
add
mov
rol
sub
cmp
sub
sbb
add
into
(bad)
stos
imul
add
add
cli
arpl
scas
add
test
xor
rcr
push
outs
mov
das
int3
jmp
add
mov
pop
cs
and
mov
aaa
jb
call
mov
sub
loop
pusha
(bad)
shl
loopne
inc
xchg
xor
mov
imul
add
dec
add
add
dec
dec
repz
sub
cwde
xor
jmp
pop
xor
rol
add
sub
xchg
sub
cli
xor
xor
add
jo
add
add
pop
out
adc
or
add
(bad)
rol
add
stos
call
or
push
sahf
adc
(bad)
fsub
add
je
and
add
movs
add
test
data16
add
add
push
cs
add
sbb
xchg
add
add
mov
cmp
sti
ins
add
push
sub
add
xchg
rcl
mov
inc
sbb
mov
test
fiadd
lea
push
mov
add
mov
jns
movs
lods
test
cwde
sti
movs
out
inc
in
(bad)
dec
inc
mov
or
add
push
add
js
add
push
add
add
stc
jl
lahf
popa
mov
and
loopne
call
test
mov
mov
adc
add
add
push
cmp
add
mov
daa
xor
mov
into
add
or
rcl
cmp
sbb
mul
add
fwait
ds
lea
sbb
inc
aam
outs
push
ins
add
add
or
rol
add
add
add
ficom
xchg
jne
adc
jae
xor
sub
cld
ins
dec
mov
push
lahf
mov
sbb
add
add
movs
ja
xchg
mov
(bad)
xor
add
add
mov
mov
dec
dec
not
mov
mov
push
mov
popa
jns
aam
xchg
ins
mov
add
div
and
dec
sub
push
add
cmp
jnp
jb
xchg
add
lahf
cmp
stc
add
add
not
inc
aas
shl
and
inc
mov
push
xor
ret
sub
add
leave
ss
add
push
mov
rol
add
add
mov
dec
fld
add
jno
aam
add
mov
jns
inc
out
xor
scas
add
add
dec
out
jg
and
mov
add
xchg
and
cwde
out
outs
pop
add
sbb
popf
add
rol
adc
add
shl
outs
aaa
add
jmp
and
sub
cmp
leave
add
add
xlat
aam
jge
cmps
xchg
pusha
mov
add
add
add
mov
pop
scas
in
xchg
ins
mov
or
xor
jne
add
das
mov
add
fcomp
sub
sbb
test
dec
xor
pop
inc
inc
add
add
jmp
scas
sbb
enter
stos
add
add
loopne
xor
mov
push
pop
rcr
fbld
movs
mov
les
adc
push
jecxz
cmps
add
aad
add
add
(bad)
xchg
imul
adc
cmps
mov
jp
add
add
mov
add
in
ss
add
add
jmp
add
push
add
add
add
out
or
clc
cmps
mov
pop
sub
dec
in
mov
mov
xor
enter
(bad)
cmp
hlt
out
add
add
add
jp
sub
dec
add
add
jne
fiadd
(bad)
pop
movs
mov
add
add
sbb
fcomp
mov
add
mov
push
jo
inc
or
add
add
push
xor
or
loope
dec
std
lahf
inc
cmp
or
fadd
add
add
jecxz
fiadd
test
fcom
dec
retf
mov
retf
add
int
add
add
sbb
sbb
das
in
mov
fwait
add
sbb
add
add
add
imul
test
add
sub
add
inc
xchg
add
out
xor
ins
outs
int
dec
cmps
inc
icebp
add
add
test
sar
inc
add
add
adc
add
out
lods
sub
repz
rol
add
add
pop
add
add
mov
push
add
pop
mov
mov
or
jmp
add
add
call
inc
add
aaa
fwait
jge
push
xchg
add
pop
jmp
xchg
repz
rol
add
sbb
xor
add
aaa
add
add
cmp
add
pop
pushw
in
add
push
lahf
repz
mov
mov
pop
aas
jmp
in
inc
mov
add
cli
add
add
push
add
inc
daa
xchg
imul
add
add
adc
add
daa
out
dec
cmp
mov
pusha
in
add
add
sub
sub
add
cmp
test
xor
sub
adc
jns
addr16
ins
pop
jo
sbb
shl
movs
shl
test
jae
push
and
fldenv
add
cmp
add
add
push
(bad)
out
inc
add
xchg
add
add
cmp
add
retf
jns
fisub
fild
shr
or
jmp
and
jmp
add
loope
add
dec
cmps
pop
lods
jge
jle
fimul
sbb
add
cmps
push
shr
adc
add
in
in
add
xchg
cmps
js
rcl
repz
push
pusha
add
hlt
dec
in
inc
retf
pop
adc
fadd
loop
push
fidiv
mov
mov
cmp
add
int
xor
in
dec
cld
icebp
adc
rcr
add
inc
add
inc
scas
add
add
add
cli
inc
jb
mov
add
fcom
add
mov
adc
add
retf
push
(bad)
(bad)
jmp
stc
pop
aam
add
loopne
add
add
cmp
and
add
mov
add
add
add
ror
add
dec
add
add
inc
add
xor
and
lods
add
add
pop
sbb
mov
xchg
mov
add
retf
in
pop
mov
and
out
add
fld
add
inc
mov
add
add
mov
add
pop
add
add
and
add
add
pop
test
push
jecxz
sub
adc
sub
xchg
shl
add
jl
add
add
add
or
xchg
add
add
add
push
test
xor
push
add
rol
les
add
bound
and
std
cmp
add
scas
jmp
jbe
or
mov
mov
jae
sbb
jge
mov
add
leave
mov
push
rol
mov
add
mov
sbb
sbb
ret
add
add
add
stos
retf
mov
movs
(bad)
xchg
and
add
fwait
add
mov
add
das
push
add
jecxz
or
into
fidiv
dec
outs
in
imul
inc
add
popa
cmp
mov
movs
add
add
in
enter
jne
cld
add
add
jg
neg
loope
add
cwde
gs
test
add
ins
jl
add
add
int
push
add
data16
mov
or
add
add
add
pusha
xchg
dec
adc
ret
xor
std
repz
xchg
jns
xchg
add
push
jns
cmps
mov
xchg
add
add
clc
imul
inc
aas
pop
inc
jns
mov
rol
add
es
pop
sub
xor
shr
shl
add
add
and
inc
in
jmp
xchg
inc
add
cli
push
or
ja
aad
jmp
xchg
pop
enter
add
(bad)
mov
add
pusha
adc
add
popf
add
dec
or
add
push
stc
inc
add
add
add
add
add
add
movs
xor
or
add
add
pop
push
stos
(bad)
push
inc
xchg
in
cmp
add
sub
stos
movs
add
sbb
in
add
push
stos
add
cmc
add
mov
or
or
add
add
mov
dec
movs
add
add
mov
cmp
cmps
out
add
aad
add
add
sub
stos
fnstenv
add
adc
add
add
add
inc
cmc
adc
out
xor
add
fwait
mov
ja
fsubr
frndint
add
add
add
(bad)
inc
mov
mov
add
add
retf
jnp
push
icebp
stos
mov
add
movs
adc
add
ins
add
stos
add
add
pop
adc
shr
std
adc
fist
imul
dec
add
sub
rcr
add
or
xchg
(bad)
fistp
add
add
ret
add
sbb
xchg
mov
push
(bad)
retf
aad
or
add
or
icebp
(bad)
ds
rcl
cmp
push
jg
jmp
push
retf
push
add
sbb
mov
xor
mov
dec
loope
cmps
pop
add
pop
inc
mov
add
fild
outs
sbb
mov
aad
push
mov
lds
js
hlt
xchg
add
xchg
dec
mov
retf
mov
fwait
add
jge
outs
sub
lods
stos
es
out
or
out
sub
add
test
jns
das
sbb
shl
cmp
jge
stos
fiadd
add
add
pop
sbb
jb
es
pop
mov
loope
cmp
inc
bound
add
popa
shl
add
and
adc
daa
xchg
add
xchg
add
add
add
fsub
jne
jge
add
fcmovbe
cmp
inc
xchg
mov
add
mov
add
add
mov
cli
push
mov
add
cwde
xor
add
add
add
jae
push
fimul
jl
jg
xchg
scas
(bad)
out
add
mov
stc
sub
xor
ret
xlat
and
add
add
add
mov
add
add
cmp
fadd
sub
out
movs
add
add
add
sar
add
push
add
add
add
add
add
mov
mov
mov
mov
mov
add
inc
dec
cld
cmps
add
add
out
(bad)
mov
add
adc
ss
add
jl
add
jle
hlt
add
test
sbb
push
ins
sbb
adc
sbb
xor
jae
add
xchg
add
add
and
fiadd
fdivr
add
adc
mov
cmp
pop
pop
sub
les
fld
add
lock
adc
add
mov
add
inc
add
add
add
push
sub
out
add
enter
std
inc
mov
mov
pop
div
add
jge
add
add
push
mov
add
add
add
add
add
add
add
add
scas
clc
out
hlt
hlt
sub
push
inc
enter
ficomp
and
xor
lahf
mov
add
in
add
(bad)
adc
pushf
add
lds
or
add
xchg
pusha
jnp
add
mov
enter
test
or
ss
add
add
and
adc
add
(bad)
ds
pop
into
add
add
mov
test
push
loop
add
pop
sahf
retf
add
mov
sbb
xchg
mov
rol
jge
pop
clc
xchg
add
inc
and
add
sub
aas
stos
and
cwde
scas
rcr
add
add
add
aam
add
xor
push
loopne
sbb
push
inc
jnp
retf
movs
push
std
inc
(bad)
clc
cmps
ret
sub
popf
cmp
cmc
sub
mov
movs
add
sbb
out
add
mov
add
adc
add
mov
or
inc
dec
xor
int3
inc
pusha
xor
pop
mov
ffreep
mov
or
add
sub
imul
mov
nop
add
push
mov
sar
setl
(bad)
xor
push
push
xor
jnp
or
add
ja
jle
add
leave
pop
sbb
add
add
fs
add
add
cmp
sti
es
sbb
aas
lods
jl
movs
add
add
add
arpl
mov
add
sbb
fsub
inc
stos
sbb
add
add
jle
sbb
xor
add
leave
add
add
aaa
sti
in
das
inc
repnz
xor
leave
in
ret
cwde
add
cmp
add
test
jmp
mov
out
xor
mov
add
aaa
xor
add
in
mov
add
mov
cmp
add
add
jmp
(bad)
out
add
add
jmp
jae
sbb
add
add
and
stos
(bad)
xor
xchg
inc
pushf
xor
mov
rol
add
and
and
jp
add
xchg
popa
ss
xor
call
inc
push
add
dec
add
add
(bad)
mov
fild
add
cs
add
add
or
mov
push
jecxz
mov
add
add
add
(bad)
repz
add
xor
inc
dec
add
add
retf
or
daa
sbb
jp
push
lahf
mov
push
inc
aas
adc
adc
add
je
mov
data16
(bad)
add
mov
repnz
bswap
add
sbb
movs
bound
add
add
js
push
cmp
retf
add
jne
xchg
out
lods
mov
add
test
jle
mov
cli
or
scas
xlat
retf
cmc
add
add
hlt
mov
or
mov
mov
and
mov
ds
ins
dec
add
add
mov
or
div
push
ds
pop
mov
ret
xchg
pop
or
add
mov
add
adc
fwait
xor
jmp
sbb
ins
jae
das
mov
lods
adc
add
add
add
cmps
mov
add
sub
(bad)
(bad)
add
shl
call
add
inc
loopne
add
fstp
hlt
inc
pop
push
js
inc
pop
inc
and
add
add
add
ret
add
add
add
or
sub
mov
cmp
mov
js
dec
add
push
mov
pop
xchg
test
outs
mov
je
popa
pop
jns
adc
xlat
out
mov
add
nop
jae
leave
xchg
jnp
adc
sub
add
xchg
imul
inc
and
push
xchg
sbb
add
loop
cmps
out
push
add
mov
shr
cdq
lds
jecxz
cs
push
(bad)
loopne
add
(bad)
pop
ins
imul
add
and
dec
cmp
mov
and
dec
jb
add
push
mov
xchg
es
add
add
inc
jge
fs
mov
and
add
push
aaa
sub
in
and
add
add
add
mov
sub
add
out
jg
sbb
fisub
add
xchg
lahf
xor
or
add
add
add
pop
enter
add
cmp
ss
push
cmps
lock
xor
add
fsub
add
dec
(bad)
fst
pop
in
add
inc
cmc
sub
add
add
add
fidivr
(bad)
hlt
(bad)
enter
repnz
retf
mov
inc
sbb
jne
inc
mov
pop
xchg
mov
jne
pop
outs
pop
loope
dec
popf
cmp
add
popf
mov
pop
arpl
dec
(bad)
mov
mov
loope
mov
icebp
fcmovb
retf
mov
add
sub
jmp
loope
mov
add
add
inc
and
add
retf
and
pusha
pushf
mov
dec
jmp
rcl
dec
add
add
and
add
mov
stos
sub
add
mov
mov
jle
into
add
ds
popf
test
sti
imul
jns
stc
sbb
add
popf
xchg
xchg
pushf
add
mov
dec
add
add
sbb
add
cmp
fsubr
sub
inc
outs
add
add
xchg
mov
mov
test
mov
jmp
inc
xor
xchg
aad
add
int3
add
movs
outs
add
add
mov
add
add
out
add
xchg
cmc
ss
int3
ds
add
lea
lahf
add
jp
dec
mov
push
out
dec
mov
daa
mov
xor
bound
add
inc
push
or
(bad)
loopne
fsubr
enter
shl
xchg
imul
jl
inc
add
and
add
add
adc
in
sbb
jno
jg
in
jp
jbe
or
sar
loop
add
mov
lea
outs
dec
cmp
add
outs
pusha
inc
add
push
lods
pushf
mov
push
push
cmp
jo
mov
add
das
xchg
cmp
addr16
sbb
add
add
dec
cmps
mov
add
add
aad
add
inc
fiadd
add
retf
fldenv
and
fnstsw
mov
jmp
add
add
push
add
jmp
xchg
push
mov
mov
(bad)
push
enter
add
or
mov
inc
test
jmp
pop
ss
dec
jmp
add
test
ss
pushf
and
add
add
add
add
push
add
add
lock
add
iret
and
add
add
mov
add
ror
add
add
call
add
add
fwait
jle
add
sub
and
sub
xor
scas
jle
inc
or
add
mov
add
add
cmps
jecxz
add
rol
outs
mov
jmp
(bad)
mov
adc
add
hlt
adc
mov
hlt
adc
pop
clc
push
in
add
add
inc
xchg
add
inc
cmp
jmp
fiadd
mov
add
lea
add
inc
and
add
retf
add
add
test
dec
sbb
xchg
daa
add
push
pop
adc
mov
add
dec
cmp
push
neg
nop
and
push
mov
add
popa
dec
pop
inc
out
cmp
dec
add
mov
push
rcl
repz
mov
xor
mov
pusha
gs
fist
ds
jno
or
sub
cld
call
ret
add
fdivr
xchg
xchg
cmp
or
add
jae
add
add
add
in
popf
and
mov
add
inc
inc
add
add
add
mov
add
mul
add
js
add
in
pop
daa
lods
add
inc
iret
pop
adc
push
clc
dec
loop
mov
add
adc
add
or
add
inc
ret
ficom
add
sar
mov
add
mov
add
fild
pop
arpl
sbb
mov
add
add
xchg
mov
nop
push
jecxz
add
push
pop
adc
add
sldt
push
adc
inc
aas
adc
cmp
add
mov
retf
mov
mov
add
pop
add
add
mov
mov
loope
push
in
add
add
je
add
pop
add
add
mov
add
pop
add
outs
push
cmps
mov
cmps
add
stc
rcr
lods
ror
fidiv
es
jmp
push
mov
inc
add
xchg
(bad)
mov
jge
popa
add
repz
add
(bad)
sbb
cmp
add
push
iret
int3
loopne
inc
xor
mov
add
add
adc
es
add
push
add
inc
sbb
add
les
mov
add
jl
xor
add
pop
movs
mov
add
adc
sub
stc
push
xlat
and
in
ins
cwde
sbb
gs
fild
daa
ins
inc
add
cs
in
xchg
scas
ror
push
xchg
pop
or
jmp
xor
add
inc
xchg
movs
ror
xchg
add
loopne
int
mov
test
cmp
bound
(bad)
in
inc
movs
push
ja
and
inc
stc
add
cmp
add
pop
add
jge
lds
add
outs
xchg
je
add
add
jno
pusha
or
add
dec
sub
mov
retf
add
add
dec
add
stos
add
mov
add
call
(bad)
add
mov
nop
xchg
mov
(bad)
aaa
test
in
aad
scas
push
add
jno
sbb
mov
add
imul
lahf
or
fld
jecxz
pop
and
add
add
add
test
jno
xor
add
mov
iret
or
lds
sub
add
mov
adc
xlat
shl
add
push
add
data16
into
sub
add
mov
pop
scas
mov
add
add
mov
fisub
lds
add
lea
leave
cmps
add
dec
shl
add
cmp
ins
ja
mov
int
cmp
cmp
pop
add
add
mov
add
hlt
add
loopne
inc
xchg
push
ins
lods
inc
push
mov
mov
add
shr
add
sbb
add
cdq
adc
dec
fldcw
rol
hlt
fistp
and
sbb
adc
add
jl
adc
mov
mov
das
(bad)
int
cmps
add
add
sbb
ror
cmp
add
in
add
push
lea
pop
xlat
add
icebp
scas
(bad)
cmc
das
jnp
repz
int
push
inc
add
(bad)
sub
add
jl
add
fcmove
push
add
push
icebp
sti
inc
inc
xchg
adc
add
mov
add
lods
inc
xor
int3
cs
add
int3
hlt
rol
in
add
aaa
mov
sub
add
(bad)
outs
out
lea
xor
add
adc
mov
add
add
xchg
dec
icebp
int3
test
out
add
inc
add
add
add
mov
sub
add
xor
jnp
jecxz
imul
mov
out
dec
push
and
ja
data16
xor
cmp
push
or
loopne
bound
fucom
mov
inc
add
add
jno
mov
add
stos
mov
popf
push
shr
jecxz
add
loopne
mov
bound
cld
rcr
adc
mov
add
pop
add
xor
add
jae
into
in
mov
xor
pop
add
mov
push
jbe
add
mov
bswap
scas
pop
jge
add
das
add
cmp
popf
arpl
mov
ja
nop
cmp
jns
mov
arpl
mov
sbb
(bad)
dec
fld
scas
stos
rcl
jp
add
inc
push
stos
add
out
xchg
ficom
add
outs
stos
add
dec
add
adc
sbb
dec
add
mov
add
rcl
add
loop
add
movs
mov
lods
ror
sbb
in
mov
mov
mov
add
jo
mov
add
test
sbb
add
xor
xchg
frstor
les
cmp
push
add
add
jo
push
add
loopne
fldcw
rol
pop
and
loop
jb
add
clc
test
out
fisttp
pop
add
repz
mov
pop
cmps
add
stc
add
add
mov
rol
fwait
mov
add
push
add
mov
mov
push
sub
fadd
add
pushf
lahf
fld
add
mov
add
mov
jp
dec
add
dec
fild
shr
scas
popf
repnz
add
add
inc
loopne
xchg
sti
mov
or
xchg
mov
fwait
ds
add
push
pop
jae
xchg
adc
pop
adc
lock
jns
mov
inc
push
inc
mov
loop
mov
sbb
push
ins
sbb
add
nop
cmc
xor
cmp
mov
mov
xchg
mov
dec
cmp
adc
add
or
mov
add
add
xor
adc
add
ins
add
add
push
add
add
add
mov
add
add
call
and
lahf
add
add
cmp
add
add
dec
jb
mov
inc
nop
push
add
sub
jmp
add
add
inc
xor
and
pop
mov
add
add
mov
iret
(bad)
or
stos
jnp
out
add
mov
es
and
jle
ret
test
add
fimul
push
cld
mov
add
inc
add
dec
xor
jno
add
out
sub
add
mov
add
add
push
mov
add
cmp
add
add
sub
mov
loop
xchg
add
pushf
push
add
popa
add
mov
cli
mov
add
pop
stos
ret
and
scas
dec
pop
mov
jb
add
push
push
int
xor
jnp
jns
push
dec
or
adc
push
shl
aad
loopne
add
jne
imul
or
pop
dec
cmps
stos
jecxz
clc
mov
mov
int
inc
add
pop
xchg
sbb
sbb
in
inc
add
xor
add
into
add
stos
add
jne
push
sbb
inc
mov
mov
(bad)
retf
sub
pop
ret
cmp
jp
mov
fild
add
in
add
movs
jge
test
add
cmps
mov
aad
add
lock
js
or
add
in
xchg
in
data16
add
ret
xor
add
add
sub
outs
add
fnstsw
(bad)
dec
add
test
add
nop
add
dec
(bad)
jmp
rol
mov
and
cmp
mov
les
add
add
push
shl
xchg
jl
call
add
add
mov
push
add
scas
dec
rol
pop
add
mulps
xlat
push
mov
ss
add
test
or
pop
mov
add
daa
sub
add
outs
in
and
cmp
dec
add
xlat
mov
add
add
adc
mov
dec
add
pop
or
cmp
aas
pop
inc
add
mov
add
shr
add
and
fcom
xlat
fsubrp
add
pop
add
fistp
add
les
fst
lods
add
fadd
add
cmp
ret
add
add
out
add
adc
add
js
xchg
mov
in
pop
xchg
and
xchg
fstp
cld
or
test
adc
aad
aaa
dec
or
add
jb
jmp
or
cmp
add
push
pop
mov
add
xor
add
les
ins
sldt
cmp
in
sub
and
mov
add
(bad)
cwde
jg
add
in
add
jnp
dec
icebp
mov
add
in
arpl
add
adc
add
mov
add
dec
daa
pop
or
push
sub
sub
add
jl
xchg
add
adc
push
sub
pop
cmp
inc
add
pop
scas
xor
pop
test
scas
inc
cli
xlat
test
add
add
pusha
repnz
cdq
sbb
test
adc
cmp
inc
add
xor
add
mov
add
scas
rol
aad
inc
(bad)
je
jg
jo
add
add
adc
cs
inc
inc
push
call
add
mov
dec
add
add
sbb
inc
into
out
add
out
in
mov
add
pop
add
sub
jbe
mov
add
and
inc
out
adc
js
add
mov
test
add
add
ret
adc
inc
sbb
add
mov
call
add
xchg
and
sub
add
sub
inc
cli
push
out
add
out
sub
jecxz
and
mov
mov
stc
mov
push
aam
in
xchg
clc
inc
jg
or
add
adc
add
sbb
out
push
add
pop
add
pop
add
sbb
out
fcom
add
add
jno
inc
add
daa
add
ror
inc
cmps
mov
rol
lock
mov
add
sbb
fwait
test
add
dec
add
xor
cmp
add
stc
xchg
add
cmp
(bad)
xor
add
or
nop
add
sub
pop
xchg
add
(bad)
leave
xlat
add
add
fiadd
xchg
sub
pusha
das
add
mov
mov
(bad)
mov
add
add
call
add
add
retf
cmps
jp
push
or
add
(bad)
lods
dec
call
out
outs
add
xor
out
lea
add
add
push
add
pop
fmulp
add
push
inc
clc
lock
sub
fcomp
mov
add
add
add
push
mov
add
dec
int3
scas
sti
mov
push
add
jmp
out
add
int3
pop
fwait
add
stc
add
ret
pop
cmp
das
lahf
add
push
rol
(bad)
mov
data16
pop
sbb
inc
add
mov
sub
pop
sub
or
add
dec
add
sub
sub
add
push
nop
add
push
js
pop
inc
add
(bad)
out
not
add
push
loop
ins
xor
add
pop
cmp
cmps
add
test
add
add
gs
hlt
movs
add
mov
add
push
sbb
add
test
fldenv
shl
add
adc
add
add
add
sbb
pusha
xchg
sub
mov
cmps
add
pop
aad
pop
push
sbb
(bad)
xchg
cmp
add
jmp
movs
xor
add
fisttp
call
jmp
vpmacsswd
rol
test
add
lock
int
mov
or
add
(bad)
add
adc
(bad)
mov
cmp
(bad)
add
test
xor
sbb
mov
in
adc
jbe
add
cmc
xchg
shl
sub
pop
add
cmp
add
ins
add
cld
add
leave
retf
jae
add
mov
jne
popa
cmp
sbb
imul
add
mov
retf
or
add
mov
(bad)
mov
je
xchg
cmp
inc
add
mov
(bad)
cli
pop
dec
data16
sub
sbb
add
add
or
xor
cmp
or
retf
rcr
std
pop
int
ret
or
or
add
clc
push
mov
add
jmp
repnz
sub
xor
cmc
xchg
icebp
add
js
dec
in
(bad)
ds
std
mov
add
xchg
xlat
test
add
add
add
repz
add
mov
add
xchg
inc
xchg
fucomp
add
lods
dec
mov
push
sbb
mov
push
mov
data16
frstor
add
pop
scas
repnz
shrd
jmp
sbb
jb
add
lea
repnz
data16
push
add
add
add
dec
mov
add
outs
mov
daa
add
retf
sbb
sub
cmp
pop
cs
rep
lods
add
in
aam
inc
push
or
mov
ja
add
test
fs
scas
or
repnz
add
repnz
sar
mov
mov
cmps
xor
push
inc
aad
mov
mov
push
push
adc
cmp
das
(bad)
jmp
and
icebp
idiv
lock
add
adc
pop
add
ins
ss
sbb
jl
mov
sub
imul
mov
loop
add
les
ins
add
fs
loop
cmc
repz
inc
sbb
int
add
add
outs
inc
popf
add
hlt
pop
dec
add
add
mov
sub
xchg
mov
retf
push
pop
outs
in
pusha
inc
add
cmp
push
cld
jo
cmp
ret
jns
add
sbb
add
xchg
ja
les
js
sub
dec
in
and
mov
cwde
sub
lea
ds
call
mov
inc
sbb
rol
jbe
adc
adc
addr16
add
add
sub
and
dec
mov
push
push
add
jae
cli
xlat
mov
out
add
xchg
add
mov
add
retf
adc
push
inc
add
add
in
mov
fld
cmp
add
cmp
pop
sbb
or
jle
add
mov
add
jb
sub
cli
add
in
adc
ja
test
shl
mov
add
sbb
int3
nop
jb
and
add
ds
inc
add
push
js
cli
popf
nop
xchg
pop
add
stc
fucompp
xor
jb
or
sub
mov
rcl
fcmovb
add
cmps
jg
repnz
lock
pop
leave
cwde
xchg
rol
add
pushf
or
iret
mov
call
sbb
ins
jp
jns
cmp
fwait
or
add
sbb
mov
xor
leave
push
fwait
cli
pop
fdiv
in
add
js
aas
shl
add
add
and
in
lea
add
inc
add
rol
test
and
cmp
add
inc
add
xor
jp
data16
bound
add
push
inc
add
cmp
das
jp
mov
adc
cmp
mov
add
jmp
mov
in
jae
add
add
sbb
out
(bad)
pop
cmp
adc
aad
jle
pusha
adc
add
inc
add
jb
sub
loop
sti
push
fld
add
sbb
push
shl
test
mov
add
das
mov
add
add
sbb
mov
dec
dec
xchg
xchg
add
xor
jecxz
mov
mov
xchg
ds
daa
rcl
pop
jge
cmps
stos
sahf
jecxz
add
sub
add
popa
daa
add
cld
cmp
sar
pop
fdivr
es
add
sub
add
sub
add
mov
or
add
mov
add
jmp
push
bnd
sbb
push
add
push
ins
add
repz
xor
mov
cmps
add
fistp
add
dec
add
add
pop
mov
push
add
aam
mov
add
add
icebp
push
mov
add
push
inc
shl
into
sub
(bad)
jmp
cmp
sti
adc
rol
push
stos
add
bound
sub
sub
add
shl
or
sbb
arpl
xor
add
cdq
push
add
aaa
inc
js
popf
ins
int
cmp
sbb
(bad)
adc
add
xchg
inc
add
push
es
test
fwait
shl
inc
mov
add
mov
sub
add
sub
jb
lods
add
test
push
or
add
jmp
cmc
add
add
xchg
add
and
jmp
add
icebp
jmp
stos
neg
add
mov
xchg
dec
rcl
mov
arpl
adc
mov
fs
div
int3
retf
add
jmp
add
push
push
cmp
jge
add
adc
xchg
xor
dec
shl
push
mov
jecxz
call
inc
cmp
out
es
dec
fisubr
adc
in
inc
test
sti
cmc
inc
add
imul
push
ins
xor
ds
jo
cmps
add
cwde
mov
scas
test
mov
and
mov
pop
add
cwde
sahf
add
mov
sub
add
push
iret
add
xor
mov
fdivr
add
loop
pop
push
push
add
pop
and
retf
out
cmp
ins
add
iret
cmp
xor
test
add
bound
retf
dec
popf
dec
loopne
inc
cmc
mov
add
jnp
stc
add
imul
jmp
jne
push
or
adc
adc
sbb
loope
xor
pop
add
mov
test
add
test
add
cmp
cwde
sbb
cmp
xor
hlt
mov
jo
rol
popf
add
sub
or
mov
jmp
mov
adc
jbe
test
popa
add
mov
retf
test
les
(bad)
sub
inc
pop
push
add
mov
add
add
pop
sahf
(bad)
neg
add
push
mov
fwait
inc
loope
inc
mov
ins
add
aad
xor
push
dec
loop
jo
stos
(bad)
pop
add
pop
adc
scas
inc
sti
xchg
sub
mov
adc
pop
mov
add
scas
(bad)
cmp
pop
mov
add
cmps
add
pop
add
push
hlt
retf
and
dec
rcl
xchg
add
lahf
sbb
mov
jge
icebp
dec
inc
mov
sbb
fcom
mov
pop
pop
add
add
push
add
mov
and
cmps
in
je
mov
scas
cmps
push
xor
leave
mov
adc
push
icebp
bound
(bad)
jl
cmp
jb
push
adc
add
jge
add
pop
dec
addr16
push
add
or
add
push
mov
outs
xchg
loope
push
jo
add
add
aad
jecxz
add
int3
add
jbe
xor
add
add
add
add
in
sbb
daa
sbb
add
in
pop
mov
sti
das
add
add
jmp
cld
add
pop
ss
dec
cmp
mov
add
mov
mov
and
xlat
add
sub
inc
mov
add
out
nop
mov
add
mov
add
add
mov
adc
push
scas
mov
add
cmc
fwait
mov
in
fisubr
pop
mov
mov
leave
add
and
xor
shl
cmp
sbb
sti
jnp
cli
jg
xchg
lods
xchg
mov
adc
dec
js
add
or
ret
test
inc
xchg
add
add
stos
out
cmc
or
add
test
dec
dec
or
loop
add
mov
jnp
or
add
jp
inc
dec
add
add
cdq
pop
das
movs
add
add
dec
dec
inc
xchg
add
dec
xor
fs
pop
int3
inc
not
out
add
dec
outs
adc
call
pop
dec
pop
add
or
xor
xchg
adc
add
adc
pusha
pop
mov
movs
in
push
jns
pop
mov
das
movs
sbb
add
mov
das
jne
add
popf
popf
add
mov
xor
clc
add
fs
adc
ret
cmps
push
inc
imul
add
jbe
add
add
cmps
mov
push
add
add
mov
or
(bad)
mov
cmp
add
test
jne
jnp
in
mov
push
ficomp
add
lea
mov
in
in
and
add
outs
in
popa
out
jmp
add
shr
and
inc
fwait
ret
or
xor
inc
(bad)
jno
jge
data16
inc
add
ror
add
cmp
out
add
xchg
cli
inc
fst
add
or
add
outs
ret
mov
into
cmp
sub
add
add
icebp
outs
add
fcom
sub
sbb
adc
add
and
pop
sub
jg
add
stos
loope
(bad)
imul
or
push
adc
push
add
jmp
jmp
add
hlt
add
scas
movs
jl
sbb
add
pop
add
mov
sub
mov
addr16
add
sbb
add
shr
or
add
mov
add
sbb
dec
cwde
xor
test
add
inc
aaa
pop
add
push
fmul
add
mov
add
mov
outs
xlat
add
out
lock
fcom
dec
sar
inc
inc
lahf
mov
repz
lock
xor
jne
lods
push
movs
add
jl
add
sub
call
jle
add
jns
mov
pop
and
bound
sbb
mov
cmp
js
add
xchg
add
ret
push
or
add
stc
adc
jno
add
mov
add
add
cmps
add
pop
add
daa
sub
mov
add
xor
and
mov
in
fs
stos
mov
mov
mov
sbb
add
push
repnz
fcomp
pop
cs
jp
dec
mov
shl
xor
les
add
add
leave
add
xchg
mov
add
fs
jmp
mov
sbb
pop
mov
je
xchg
push
inc
mov
repz
inc
data16
adc
add
xchg
sbb
add
mov
jle
dec
and
xchg
aas
mov
add
add
mov
rcr
retf
add
rol
xor
mov
sbb
add
add
out
out
xor
lahf
ja
add
inc
add
mov
add
loope
stc
pop
jmp
mov
pop
sbb
xchg
xor
push
cmps
out
test
js
push
div
xchg
loope
int3
hlt
cmp
add
out
fsubr
mov
and
xor
add
ret
push
add
dec
sar
add
int3
pop
jae
dec
add
xor
add
sub
enter
loopne
in
call
push
test
push
push
and
adc
pop
or
add
ds
dec
add
push
sub
sub
dec
add
add
popf
dec
sbb
bound
retf
retf
icebp
xor
mov
jl
add
pop
imul
sbb
xor
mov
or
lock
push
add
adc
sbb
push
add
mov
sbb
push
inc
mov
sbb
push
sub
int3
pop
or
adc
xchg
stos
pop
add
add
adc
mov
mov
imul
rol
add
stos
mov
inc
add
xchg
jmp
ja
sbb
pop
repz
add
out
sti
add
bound
icebp
nop
push
xor
add
out
test
add
xchg
ins
mov
pop
jbe
add
loop
or
add
loopne
in
mov
add
cmp
add
clc
scas
test
or
dec
cs
repz
jg
ror
push
adc
outs
add
pushf
sahf
call
mov
push
fidivr
add
es
fadd
into
jge
push
fimul
cmps
cli
add
cmps
pop
xlat
mov
xchg
sbb
lahf
push
mov
inc
(bad)
movs
mov
mov
sub
mov
pop
sub
add
jo
mov
sub
(bad)
pop
hlt
into
push
sub
int3
(bad)
fnsave
xor
arpl
add
pop
or
fistp
cmp
adc
mov
ror
das
inc
ja
pushf
iret
add
les
adc
mov
cmp
mov
mov
sahf
add
faddp
cmp
add
(bad)
(bad)
sahf
cmp
inc
add
add
(bad)
xchg
div
add
and
jbe
mov
push
idiv
pop
mov
loopne
retf
xor
jmp
lods
ror
jl
add
add
cmps
scas
add
inc
imul
add
int
add
popf
add
push
inc
adc
cmps
aam
mov
add
popa
cmp
and
mov
and
add
dec
pop
add
fadd
push
xor
out
lea
add
add
imul
bound
add
sar
nop
xchg
test
add
mov
pop
add
and
lods
add
jne
jb
sub
sub
add
push
add
pop
sub
add
(bad)
add
test
push
add
add
jns
sbb
add
lds
pop
xchg
add
mov
push
test
jae
sbb
stc
push
in
or
xchg
fnstsw
xor
repz
dec
ins
inc
aaa
pop
rol
add
mov
xor
add
shl
mov
add
adc
add
pop
add
xchg
sti
out
add
cmps
adc
add
or
out
leave
mov
add
imul
js
adc
ret
push
and
mov
pop
jecxz
rol
add
movs
scas
std
jl
pop
mov
mov
cli
mov
je
(bad)
jg
add
mov
into
pop
out
adc
adc
add
sti
ret
adc
jmp
test
or
push
mov
add
fiadd
add
add
test
lds
ins
inc
push
add
outs
add
sub
dec
and
and
scas
push
sbb
mov
add
jnp
inc
add
adc
in
add
add
ja
push
loopne
(bad)
sub
add
sar
stos
cmp
dec
iret
add
mov
repnz
mov
pop
ins
movs
rol
call
bswap
mov
add
imul
movs
add
add
add
add
adc
push
pop
add
scas
add
push
popf
xor
add
(bad)
out
sti
fst
mov
add
xor
(bad)
jno
jno
sbb
or
cmps
mov
add
cmp
out
dec
fld
add
data16
loopne
inc
add
fadd
fld
push
sbb
dec
enter
pop
dec
imul
mov
cmp
add
or
jnp
add
push
cmp
add
aam
add
cmp
or
movs
inc
je
int3
mov
movs
mov
lds
mov
int
ret
lock
jmp
lea
(bad)
mov
dec
add
xlat
push
add
cwde
pop
mov
jb
retf
dec
xchg
movs
mov
add
push
dec
stc
std
add
fs
and
and
leave
std
adc
xor
or
dec
(bad)
dec
add
jbe
add
ret
aas
xor
sbb
add
shr
add
add
mov
add
aas
sbb
loopne
aas
daa
sub
dec
in
mov
sub
cld
std
jo
inc
add
inc
stos
mov
add
xchg
push
leave
jmp
add
push
out
jl
add
fiadd
pop
clc
sbb
pop
add
inc
out
ficomp
outs
sub
loopne
add
outs
in
mov
bound
mov
push
add
pop
movs
(bad)
movs
mov
add
stos
add
ds
sbb
test
add
ja
adc
and
add
add
add
push
add
push
shl
push
add
fisub
add
int3
push
daa
add
lea
daa
push
xor
push
shr
push
aas
std
pop
(bad)
or
rcr
jae
into
add
mov
sub
inc
shl
mov
and
add
pop
mov
es
and
and
add
addr16
push
pusha
jg
add
jnp
js
ins
add
hlt
lods
dec
push
xchg
add
movs
lods
jge
push
add
push
scas
mov
dec
repz
cmp
mov
jae
and
add
rcr
pop
sar
maskmovq
test
mov
cmps
mov
rcr
hlt
add
icebp
push
ds
inc
or
or
dec
ds
mov
add
popa
daa
add
std
aaa
fsub
aas
add
mov
std
dec
add
int
mov
mov
jecxz
test
add
push
(bad)
cli
daa
ficomp
jb
gs
stc
inc
add
or
xchg
sub
add
pushf
add
mov
stc
loopne
adc
sbb
add
add
cmps
lock
int3
loopne
xor
push
loope
imul
jl
mov
add
sahf
cmp
xor
fld
sbb
xchg
or
add
push
imul
xchg
xchg
cmps
mov
enter
or
push
add
rcr
fucompp
xchg
dec
loopne
repz
mov
ficomp
ficomp
cvttps2pi
dec
ins
inc
pop
in
cdq
jb
aas
loopne
pusha
fiadd
call
mov
adc
xor
mov
out
jne
add
or
stos
jno
xor
dec
mov
or
push
xor
jle
or
jmp
mov
mov
repz
not
xchg
add
add
shl
pop
jnp
js
pop
pop
xchg
shl
inc
movs
mov
add
add
aaa
or
add
sbb
stc
push
lahf
retf
xchg
ficom
cs
xor
xcrypt-ctr
cmps
pop
(bad)
xor
add
inc
xchg
xchg
hlt
xchg
pop
adc
aam
pop
add
add
add
sub
xchg
mov
lods
rcl
sti
add
pop
add
dec
inc
cmp
aad
add
scas
add
mov
push
adc
dec
call
add
xchg
inc
add
aad
in
add
shr
inc
pop
inc
mov
inc
add
mov
mov
add
std
xchg
xchg
or
out
ins
retf
test
add
pop
add
(bad)
shr
arpl
add
test
mov
dec
push
adc
daa
jge
add
pop
retf
jo
mov
mov
add
push
push
inc
cdq
sahf
add
jl
scas
xchg
add
sub
int
add
in
sub
add
pop
leave
aam
add
add
or
out
pop
mov
add
or
add
dec
jne
jmp
dec
mov
xchg
jbe
add
add
out
add
and
out
pusha
add
ds
push
retf
adc
movsx
sbb
add
cmp
aaa
add
std
mov
jae
pushf
push
fistp
mov
pop
add
mov
add
add
and
lds
lds
add
sahf
xchg
add
mov
add
mov
add
js
add
mov
add
movs
ins
jo
mov
xchg
pop
adc
jmp
mov
ja
xor
or
jle
add
adc
ror
add
add
lods
add
mov
ss
add
add
pop
add
xchg
aaa
loop
ds
sbb
cmp
jmp
mov
loop
jbe
add
cld
add
push
xor
push
add
or
inc
in
imul
mov
and
cvtps2pd
fst
xor
add
add
add
adc
pop
add
add
or
pop
pop
mov
add
mov
std
and
add
add
push
dec
inc
add
push
shl
ins
repnz
aam
call
push
jecxz
inc
xor
imul
fwait
adc
ins
cmp
adc
xchg
and
add
adc
popf
addr16
add
cli
loop
push
das
push
inc
not
not
mov
jge
mov
cld
das
add
ds
add
daa
fadd
add
fdiv
ret
add
lea
(bad)
add
cmp
add
sbb
adc
push
mov
mov
and
mov
cmp
fcom
add
add
(bad)
addr16
in
jl
jmp
js
shl
retf
sub
mov
fldenv
mov
nop
aam
or
test
sbb
add
add
cmp
lahf
mov
mov
test
enter
neg
add
and
dec
jo
xchg
mov
add
add
lea
mov
mov
push
add
cmp
dec
adc
movs
xchg
jae
add
sar
push
jne
add
mov
jno
repnz
xchg
pop
or
in
add
int
add
mov
clc
mov
push
cld
sti
push
mov
xor
add
add
retf
cmp
sub
dec
test
mov
add
sbb
les
mov
ss
xchg
mov
or
add
fcomp
mov
test
loopne
jns
push
inc
test
gs
and
cmp
jl
xchg
xor
mov
clc
inc
shr
xchg
cmp
add
xor
and
sub
iret
xlat
xor
push
clc
fild
and
and
or
pop
inc
add
stos
sbb
inc
lods
push
sbb
add
inc
add
(bad)
ja
fadd
add
or
add
inc
mov
add
add
jns
add
jmp
push
dec
shl
or
mov
das
pop
pushf
add
inc
jecxz
fild
add
inc
mov
loope
add
repz
inc
pop
add
pop
data16
or
add
mov
add
xchg
push
addr16
sub
xor
add
mov
out
add
sub
add
inc
js
add
movs
scas
pop
pop
and
call
jecxz
ins
ins
add
jle
mov
popa
sbb
inc
xchg
retf
(bad)
xchg
dec
push
mov
sar
add
push
rcl
mov
add
rcl
xor
sub
add
test
fisttp
push
mov
test
xchg
add
icebp
dec
jl
pop
dec
mov
add
add
shl
push
mov
pop
test
add
cmc
movs
repz
adc
jmp
add
add
popa
jnp
(bad)
fistp
add
push
retf
iret
xchg
add
and
mov
mov
add
add
mov
mov
jbe
nop
idiv
and
jl
int3
rol
(bad)
adc
adc
arpl
mov
fadd
add
sbb
cmp
add
push
inc
adc
mov
dec
pop
out
mov
and
add
xor
test
fs
sub
pop
cwde
test
stos
fidiv
add
int
add
push
add
fiadd
jae
push
mov
xchg
out
adc
jmp
outs
fs
mov
cs
sbb
outs
xchg
popf
call
mov
scas
dec
and
pop
enter
(bad)
pop
xchg
(bad)
adc
mov
ret
das
daa
mov
mov
jo
das
aas
mov
push
jnp
(bad)
fsubr
push
cmp
jns
push
scas
push
fstp
sub
add
xchg
add
mov
mov
add
mov
add
jbe
push
loop
sub
add
fisub
nop
inc
int3
add
je
outs
pop
jle
add
imul
imul
fiadd
sbb
pop
cmp
add
add
add
fnstcw
nop
mov
mov
sbb
gs
jmp
rol
inc
outs
add
inc
call
fdiv
xchg
add
fisubr
mov
and
and
add
nop
and
jp
dec
js
clc
add
shl
jno
add
cmp
push
sahf
sbb
(bad)
ins
pusha
outs
sbb
mov
loop
mov
(bad)
in
icebp
imul
fwait
push
imul
push
add
rcr
sub
add
cmps
push
pop
call
ror
test
rol
lods
std
pusha
fdivr
adc
and
add
ficom
mov
add
addr16
retf
add
retf
jmp
cmps
cmp
stc
mov
imul
inc
or
hlt
cmp
inc
imul
fidivr
and
repnz
pop
xchg
add
jg
mov
outs
push
and
out
stos
xchg
inc
or
add
add
cmp
stos
sub
or
sbb
sbb
popf
xor
in
out
mov
jne
into
xor
dec
add
mov
popf
pop
jmp
lods
dec
neg
addr16
add
ins
cmp
inc
add
inc
fwait
pop
mov
pop
adc
add
add
ins
out
add
dec
add
mov
in
fcmovb
mov
enter
ret
add
(bad)
adc
add
inc
les
in
inc
add
add
jb
push
loopne
iret
sbb
mov
and
and
add
mov
add
call
nop
add
out
cmp
push
xchg
sub
jb
add
jb
push
push
add
mov
add
add
cdq
out
icebp
adc
add
add
add
das
test
out
add
popf
mov
fiadd
test
add
sub
pop
aam
dec
sub
out
test
add
rcr
xor
sbb
mov
movs
cmp
add
xchg
test
inc
(bad)
lods
dec
xor
pop
mov
inc
add
fwait
jmp
adc
xor
ins
add
sbb
and
xor
inc
addr16
aam
add
lock
pop
pop
stos
mov
add
mov
mov
and
aad
jae
dec
push
add
dec
sbb
mov
je
dec
mov
adc
outs
addr16
add
adc
xlat
xchg
mov
mov
add
cmp
add
arpl
test
cmp
dec
js
enter
idiv
lahf
cmp
js
ss
xchg
inc
adc
push
mov
push
in
add
lea
mov
popf
(bad)
retf
cmp
sar
and
add
out
ja
(bad)
ss
add
mov
cmp
scas
xor
fiadd
mov
push
add
add
mov
test
ror
nop
add
sub
add
rol
jne
aad
mov
xor
daa
dec
xchg
imul
jg
int3
lea
aaa
rcr
dec
movs
out
add
add
xor
push
cmp
fcmove
mov
in
mov
push
ds
rcr
js
test
out
mov
js
jmp
push
cli
les
pop
sbb
lea
cmp
(bad)
inc
add
cdq
ins
add
fst
scas
sti
add
inc
sub
jbe
dec
mov
fsub
rol
add
je
add
lahf
out
cmps
pop
add
xlat
or
dec
jns
xor
add
add
add
int
inc
imul
repz
mov
sub
add
xchg
sub
cli
xor
sbb
mov
push
outs
add
sti
scas
add
lds
jle
add
add
lea
sub
std
jmp
stos
jl
and
jb
cmp
aad
and
pop
jmp
pop
sub
sub
sub
ins
jle
add
outs
sub
leave
(bad)
jo
jo
add
into
push
mov
add
das
jmp
stos
add
add
add
xor
push
fsubr
rol
add
push
outs
push
inc
add
sbb
into
adc
push
push
stc
sbb
xchg
jl
mov
add
mov
inc
outs
js
daa
sub
xchg
cmp
sbb
arpl
or
mov
loop
std
dec
fmul
mov
(bad)
pop
cmp
add
xlat
sub
stos
push
pusha
push
push
in
cmp
add
add
add
jnp
ins
inc
lahf
mov
xchg
int
mov
push
add
jle
popf
mov
add
mov
outs
dec
nop
out
mov
pusha
daa
add
add
push
in
jnp
jne
add
sbb
push
add
scas
(bad)
pop
jae
aaa
rol
enter
sbb
(bad)
jmp
xor
xchg
data16
pop
or
pop
cld
adc
test
mov
push
rol
add
out
add
add
into
xchg
test
jmp
int3
add
in
inc
mov
jae
add
add
push
nop
js
jge
movs
add
add
jnp
(bad)
loopne
mov
xchg
inc
es
jo
add
cmp
jb
add
jae
add
imul
in
hlt
jecxz
je
sti
mov
add
(bad)
ja
jmp
les
add
icebp
out
das
and
loop
das
dec
mov
mov
add
enter
outs
lock
xchg
add
add
xchg
xor
add
gs
daa
add
cli
xor
cmc
push
or
mov
or
add
add
dec
mov
add
add
xor
inc
in
gs
push
test
dec
jmp
add
in
or
outs
mov
cmp
stc
mov
add
mov
pop
ror
clc
pop
fidivr
iret
out
pop
jg
add
gs
add
xor
xlat
add
xchg
push
add
je
ret
bound
add
xor
nop
add
xor
mov
sbb
pop
sub
add
add
add
inc
test
(bad)
mov
sbb
adc
pushf
std
push
outs
mov
add
dec
add
lds
or
cdq
push
dec
bound
jg
add
test
add
jnp
jge
das
add
add
pop
push
add
add
dec
(bad)
out
std
inc
xchg
jb
pusha
in
cmps
add
cmp
ret
rol
add
push
inc
popf
cmp
add
xchg
jl
jo
sbb
push
sub
pop
nop
cmp
movs
in
xor
push
add
imul
test
or
jp
sbb
and
adc
add
lea
outs
xchg
retf
add
call
dec
and
dec
je
mov
push
jmp
das
mov
call
dec
clc
loope
dec
add
pop
cld
mov
retf
add
ins
rcr
mov
arpl
xchg
jno
add
std
js
cli
add
cwde
rol
add
cmps
cdq
mov
cmp
and
add
dec
movs
das
push
fwait
push
add
sbb
cmp
push
adc
xchg
add
add
loop
add
jns
into
(bad)
jmp
add
xor
add
lods
aaa
sub
add
dec
or
lock
lods
pop
ins
pop
loopne
loopne
add
add
xchg
retf
cdq
jo
call
cdq
ret
jbe
add
jne
iret
sub
std
popa
mov
and
sbb
fld
add
dec
nop
pop
in
fadd
cmp
jae
push
push
sbb
xor
pop
add
add
fiadd
mov
ins
add
cmps
imul
iret
popa
add
push
pop
add
jl
in
dec
call
(bad)
outs
push
mov
mov
and
jg
movs
rol
add
push
retf
cmp
cmps
inc
in
add
cmp
add
aas
sbb
add
out
jg
not
dec
inc
sub
add
mov
iret
mov
pusha
(bad)
mov
test
add
xor
js
test
sahf
jo
jns
mov
mul
dec
(bad)
xchg
or
pop
repz
add
dec
enter
inc
add
mov
outs
mov
and
cli
aaa
add
and
aas
cwde
xor
mov
cmc
int3
mov
test
jae
inc
xchg
popf
jbe
fs
or
add
mov
add
movs
outs
push
jb
cli
push
aad
add
add
sub
dec
aas
inc
inc
sbb
test
es
add
clc
xchg
lods
add
mov
fucomip
mov
add
loopne
inc
fisubr
mov
add
jmp
jns
mov
je
add
out
mov
ds
push
daa
push
pop
sahf
pop
jns
mov
add
sbb
je
add
add
mov
pusha
add
add
sbb
add
inc
dec
mov
cwde
xor
add
fiadd
cmc
xor
mov
add
inc
inc
ins
dec
sbb
add
jae
add
xchg
add
test
rol
nop
push
jle
push
push
mov
mov
dec
ret
stos
mov
movs
add
lds
add
mov
xor
add
mov
push
push
cli
add
jnp
jge
out
adc
sbb
add
add
inc
jae
loop
or
(bad)
out
pop
enter
mov
std
add
push
stc
das
fisub
push
mov
dec
pop
pop
aam
jae
sbb
aas
into
lahf
test
adc
dec
add
shl
shl
pop
mov
test
mov
movups
fisub
mov
in
lods
scas
iret
add
dec
cmp
es
inc
and
outs
sbb
adc
push
add
jno
stos
mov
enter
mov
push
repz
xor
add
jmp
outs
cmps
add
jmp
add
stc
loopne
aaa
jg
and
int3
mov
sbb
aad
add
inc
xchg
mov
and
test
add
mov
jecxz
js
add
outs
rol
push
xlat
inc
jno
add
mov
aaa
mov
add
jae
mov
push
add
push
add
xchg
in
fidivr
or
add
cmps
or
add
add
push
jae
retf
popa
mov
cs
mov
dec
sub
xor
sbb
stos
push
push
add
xor
and
mov
jne
mov
xor
int
cmp
mov
push
xor
add
lods
jle
and
add
sahf
fs
bnd
pop
mov
aas
jmp
and
mov
fisubr
and
xchg
pop
add
leave
add
stos
add
mov
push
enter
add
push
xchg
add
fmul
add
add
(bad)
mov
and
js
sub
add
jge
add
sbb
call
data16
xor
cld
dec
push
sub
dec
sbb
dec
pop
cmc
push
jo
fnstsw
jns
scas
fs
push
add
push
add
add
mov
repnz
pop
add
rcl
and
add
scas
sub
adc
sbb
fidivr
sub
pushw
pop
add
push
sbb
sbb
dec
mov
sub
repnz
dec
add
outs
sbb
pop
movs
lods
push
in
dec
nop
(bad)
push
push
rcl
cmp
add
ret
mov
ror
and
test
or
pop
lea
add
push
mov
imul
or
scas
push
call
inc
frstor
cwde
add
push
xor
jp
cli
sbb
pop
add
aas
sbb
mov
out
push
sahf
and
add
cdq
sub
add
push
rcl
xchg
add
pop
outs
jns
jne
add
popa
pop
add
xchg
xchg
hlt
loopne
shl
inc
test
jp
sahf
push
add
and
xchg
xchg
enter
add
mov
add
sbb
fwait
add
add
inc
mov
add
js
stc
jl
sbb
add
data16
push
sub
adc
add
mov
test
clc
or
stc
mov
jae
fstp
and
mov
setb
cmp
stc
push
movs
add
sub
add
dec
int
outs
out
mov
mov
mov
mov
fucomi
add
mov
call
jle
mov
add
ror
sub
jecxz
cmp
ja
(bad)
test
add
dec
sub
push
mov
cmp
cmps
or
sbb
mov
add
add
and
loope
add
mov
add
add
jmp
sub
or
dec
test
cmc
dec
adc
cmps
sbb
add
push
lock
ja
add
xchg
mov
dec
push
outs
jo
iret
add
sbb
std
add
cmp
scas
mov
adc
mov
pop
std
add
and
xor
repnz
push
retf
sbb
ins
cmps
sub
in
mov
cmps
nop
add
and
push
sub
add
adc
pop
push
cmps
clc
sbb
bnd
div
mov
loopne
je
push
ror
pop
sub
push
(bad)
das
adc
aad
push
add
add
xor
sub
jp
push
add
popa
lock
sahf
inc
std
lahf
mov
add
popf
call
mov
add
inc
mov
cwde
cmps
add
mov
retf
in
jl
scas
add
or
data16
add
adc
add
repz
mov
add
dec
lods
add
add
add
mov
cmp
call
mov
ja
cdq
mov
sar
fsub
add
adc
pop
lock
dec
mov
jnp
mov
add
lods
add
adc
adc
cli
mov
icebp
xchg
in
xor
inc
outs
dec
pop
cs
pop
in
cmps
mov
add
daa
jmp
add
xor
sbb
sub
add
push
cwde
fist
sub
ins
outs
(bad)
add
xchg
in
push
add
push
imul
mov
sub
add
and
jbe
and
call
jmp
imul
ret
stos
pop
mov
add
pop
add
add
mov
push
xor
add
add
mov
add
repnz
inc
es
jmp
ja
add
mov
jl
xor
shr
add
or
add
mov
add
or
add
add
mov
fs
mov
shl
test
sub
mov
xor
pop
call
add
sbb
scas
add
movs
xchg
add
sbb
or
mov
mov
inc
ds
ret
push
out
dec
pop
pushf
add
xchg
jno
stos
ja
fimul
add
int3
or
pop
sbb
add
outs
rcr
jge
(bad)
aaa
cmc
pop
out
xor
icebp
mov
cmp
fcomp
icebp
add
(bad)
mov
and
pop
loopne
add
or
xchg
add
push
aaa
add
sub
xchg
cmp
movs
popa
inc
fs
repnz
test
scas
gs
sbb
iret
std
pop
xchg
fild
add
add
enter
add
and
out
jns
adc
adc
scas
add
inc
cmp
or
out
xor
add
pusha
add
cmp
xchg
lahf
pop
stc
ret
add
inc
add
mov
cmp
xchg
outs
nop
add
rol
push
stos
lea
jl
or
add
fcomip
int3
in
add
mov
lock
fld
inc
inc
add
call
mov
mov
add
jae
add
mov
cs
fild
push
pop
mov
add
inc
mov
cmp
add
rcr
jecxz
add
add
fisttp
inc
push
add
adc
sub
lahf
cmp
add
repz
aas
add
mov
dec
mov
sbb
mov
sbb
sti
adc
lea
lahf
sti
add
inc
movs
mov
dec
add
ds
mov
shl
hlt
inc
loope
adc
pop
lods
jecxz
mov
cmp
add
fnstenv
mov
ret
cmp
repnz
inc
rol
xor
xchg
add
cdq
dec
cmps
(bad)
cmp
cdq
sub
add
add
aaa
cmc
or
adc
adc
stos
inc
test
fisubr
push
lds
(bad)
jmp
das
dec
fwait
leave
ret
push
icebp
cmp
pop
jne
sti
inc
mov
or
ss
mov
dec
or
push
mov
jge
gs
out
mov
mov
add
sub
sti
mov
add
stos
gs
push
add
mov
add
cld
mov
pop
add
pop
xchg
xchg
inc
enter
lahf
add
add
pop
xchg
mov
les
div
pop
out
push
sbb
adc
xchg
add
cli
sub
or
xchg
sahf
lldt
add
int3
add
push
cmps
jno
xchg
sbb
add
adc
pop
retf
add
add
xor
add
add
loopne
cmp
lods
pop
ins
xchg
xlat
and
mov
jne
adc
inc
aaa
cmc
pop
add
dec
dec
xchg
(bad)
shr
cdq
pop
jb
cli
or
xor
add
push
rol
add
add
pop
pop
dec
add
mov
sbb
les
pusha
sub
adc
fisub
pop
ja
test
loope
sub
cdq
xor
sti
int
call
data16
cmp
icebp
rol
aaa
loop
add
mov
pop
enter
clc
push
pop
and
xchg
add
aam
xlat
add
repnz
mov
in
popa
add
out
jmp
adc
jmp
jmp
cmp
push
inc
outs
cmp
mov
sbb
dec
rcl
aas
add
cmp
push
push
cld
call
loopne
div
mov
(bad)
or
test
adc
add
(bad)
add
xor
mov
sub
jb
aaa
fdivr
pop
pop
xchg
stos
add
add
ror
or
add
xor
imul
inc
xor
test
add
add
rol
rol
dec
xor
sbb
pusha
add
fild
add
iret
das
cmp
fucomp
mov
(bad)
xor
dec
inc
add
add
scas
lds
add
fwait
stos
mov
and
jmp
sub
cmp
add
cld
add
imul
dec
inc
add
jae
jmp
jns
icebp
(bad)
(bad)
xchg
mov
sbb
add
xchg
(bad)
aam
mov
clc
fild
adc
repz
adc
adc
and
(bad)
add
xor
add
add
pop
dec
cdq
add
pop
add
aaa
add
in
call
add
add
cli
add
or
movs
mov
mov
in
xchg
cmp
in
outs
dec
sub
add
adc
mov
pop
add
mov
fisttp
add
add
mov
lahf
jg
ret
leave
in
xchg
and
push
xlat
add
or
pop
pusha
add
mov
dec
inc
jns
add
and
push
fwait
lods
fsub
fld
jne
jl
add
push
cmp
pushf
and
add
aad
jmp
add
or
(bad)
cmps
adc
iret
push
adc
mov
or
adc
or
mov
mov
pop
ud1
not
stos
adc
xchg
sbb
add
inc
cmp
in
add
add
dec
pop
xchg
mov
pop
mov
add
ret
dec
(bad)
add
stos
lods
mov
mov
push
test
enter
movs
jmp
mov
mov
add
cli
cmc
scas
or
xor
add
inc
mov
daa
mov
push
jge
sub
add
test
add
inc
dec
push
add
add
add
arpl
inc
mov
add
mov
jno
call
add
je
repnz
cmp
fdiv
in
push
pushf
sbb
add
add
sqrtps
push
aad
and
add
add
icebp
sbb
sub
jns
push
add
test
add
ja
add
cmp
add
rol
push
icebp
and
mov
pop
push
out
loop
mov
rol
sub
add
rcr
gs
sub
add
add
jp
add
mov
daa
mov
push
mov
lds
dec
rcr
aad
ds
(bad)
fs
imul
sub
outs
add
and
pusha
add
mov
cld
rcr
cmps
bound
adc
inc
ret
push
in
dec
test
add
mov
add
add
or
cdq
fild
push
lods
inc
add
xchg
add
aas
int3
sub
pusha
or
outs
mov
repnz
fadd
movs
adc
add
add
ret
cmps
icebp
sub
xchg
inc
int3
sbb
jne
mov
cmp
je
cmps
xchg
mov
fwait
shl
ins
mov
movs
sbb
gs
cwde
add
add
jne
scas
icebp
dec
lods
xchg
pop
repz
pop
xor
and
test
icebp
fadd
shl
add
mov
jno
add
xchg
retfw
jmp
cmps
add
test
jmp
movs
mov
add
arpl
ror
sbb
xor
hlt
pop
add
test
push
push
lock
adc
push
inc
mov
xchg
mov
and
inc
cmp
pop
pop
sub
add
inc
aaa
or
imul
add
add
sub
repnz
add
push
add
les
cmp
add
add
add
and
mov
adc
pop
retf
clc
xor
mov
add
sbb
add
sub
add
add
ret
xor
lahf
mov
test
inc
cdq
adc
add
inc
mov
add
sub
inc
add
aaa
cwde
push
sub
push
rol
mov
add
sbb
push
aas
add
mov
mov
xchg
jp
imul
jp
fucomp
add
inc
add
leave
ds
mov
xchg
add
retf
shl
add
push
movs
faddp
push
add
or
add
sub
add
pop
out
add
xchg
xor
sbb
add
lods
int
sub
jecxz
add
lock
lods
jmp
outs
push
xor
add
add
dec
xchg
loopne
xchg
jmp
mov
jne
jmp
jle
add
mov
add
add
add
cdq
add
cmp
add
jp
add
lock
fwait
inc
add
mov
pop
sar
idiv
sbb
out
jne
loope
fwait
xor
icebp
pop
call
pop
fisubr
cdq
add
ja
xlat
mov
pop
sub
add
mov
in
ss
call
loopne
fcomp
loopne
cmps
cmp
add
push
push
idiv
add
add
or
ins
out
pop
hlt
cmp
mov
adc
add
dec
dec
int3
dec
scas
xchg
in
add
(bad)
dec
or
add
add
sbb
test
inc
push
sbb
loope
ins
cmps
or
mov
pop
sub
int3
add
jg
fiadd
add
std
push
cdq
add
(bad)
mov
jl
sbb
imul
mov
out
cld
inc
jl
add
hlt
add
in
add
add
dec
loop
add
cdq
sbb
jecxz
dec
mov
fs
cli
icebp
leave
loope
add
jmp
xor
add
outs
(bad)
icebp
(bad)
retf
jmp
add
jns
or
mov
add
test
inc
stc
enter
add
sbb
fld
push
or
mov
cmp
xor
mov
add
les
add
fmul
jmp
shr
push
cmp
or
mov
test
outs
add
add
in
add
push
jmp
or
pop
add
mov
inc
pop
push
push
shr
lds
lock
pop
add
aad
sub
add
les
sbb
repnz
pop
popf
sahf
sbb
push
cld
add
pop
push
xchg
add
loopne
mov
mov
sub
es
push
and
les
mov
ret
add
repnz
xchg
nop
sub
push
mov
mov
outs
jp
push
dec
add
cld
aas
jb
fdiv
movs
test
popa
and
add
pop
push
add
add
pop
popa
cmp
inc
imul
push
shl
add
fs
xor
lea
popf
xor
mov
add
shl
jne
ja
add
je
sbb
xchg
push
sar
adc
add
adc
cld
(bad)
rol
test
xor
add
and
mov
rcl
test
add
inc
jecxz
add
cli
mov
out
add
mov
mov
out
inc
(bad)
lock
nop
adc
push
jo
iret
add
stos
mov
cmp
add
mov
xchg
sbb
in
ja
jne
repz
(bad)
inc
add
push
sbb
hlt
jmp
add
sar
jmp
add
jge
dec
or
(bad)
fdivr
pop
mov
inc
popf
sahf
jecxz
mov
jmp
push
cdq
sub
ret
pushf
cmps
mov
sbb
jae
push
dec
test
add
add
shl
ja
sbb
xor
add
leave
test
add
cmp
and
ds
aam
push
add
push
aaa
add
les
fwait
hlt
jge
add
add
xor
add
sub
xchg
jp
jp
add
adc
addr16
mov
mov
jg
add
mov
jmp
das
es
loopne
ret
fwait
dec
mov
movs
jnp
lock
pop
test
add
jne
scas
add
cmc
cmp
add
(bad)
fild
or
add
sbb
data16
add
or
leave
daa
js
add
call
xor
add
dec
push
hlt
pushf
cmp
scas
jo
push
xchg
push
outs
inc
jecxz
fnstcw
push
cmc
mov
jp
push
out
cli
out
push
(bad)
outs
add
add
pushf
clc
(bad)
(bad)
pop
rol
test
scas
jns
add
outs
sub
adc
mov
add
add
add
cmp
out
xor
mov
inc
jno
inc
fidiv
mov
(bad)
mov
retf
xor
add
add
(bad)
pop
lds
aaa
idiv
add
sbb
and
and
jl
stc
retf
add
outs
out
mov
xor
xchg
add
out
std
cmp
add
xlat
movs
adc
jns
or
push
aas
pop
add
cmp
adc
jnp
or
or
add
add
add
cli
cdq
popa
lds
out
call
or
mov
add
sbb
in
stc
popf
lahf
add
sub
shl
push
sbb
sti
xchg
jecxz
cmp
or
std
(bad)
nop
out
call
int3
int3
add
sbb
mov
mov
js
mov
(bad)
imul
pop
add
hlt
out
or
mov
cmps
jo
add
and
lods
add
popf
add
xor
add
push
sbb
and
sub
add
or
repz
add
add
in
or
ss
pushf
retf
popf
shl
dec
sbb
xor
cs
mov
dec
sbb
pusha
add
shl
add
mov
aaa
sbb
add
add
push
add
ja
sub
inc
add
add
add
cli
sti
aam
std
push
out
int3
outs
test
jg
xor
push
fsub
add
dec
in
add
lahf
scas
add
and
in
ret
add
pop
pop
cmp
cmc
mov
add
stc
add
aas
dec
mov
push
xor
push
addr16
add
cmp
iret
nop
aad
jns
mov
add
dec
lods
pushf
ins
add
out
xor
add
vphadduwq
xor
adc
mov
inc
add
arpl
fcom
and
and
cs
(bad)
xor
add
mov
or
leave
out
scas
add
push
(bad)
fs
lods
jne
ss
push
inc
pop
into
mov
add
adc
rcr
jecxz
fs
inc
test
les
add
or
(bad)
outs
cmp
add
push
adc
fst
jl
sub
add
adc
mov
adc
mov
jmp
mov
cmps
add
out
add
popf
xchg
jno
aaa
inc
iret
dec
bound
add
jmp
add
xchg
iret
cwde
jb
add
mov
sub
inc
dec
aaa
add
cmp
mov
add
xchg
jle
movs
sub
mov
ror
popa
loop
scas
xchg
fwait
int3
push
add
jge
jecxz
outs
mov
cmps
add
xor
outs
mov
xchg
mov
add
fbld
pop
ds
add
mov
add
add
mov
icebp
xchg
sub
mov
dec
(bad)
dec
mov
inc
mov
add
repz
add
(bad)
fiadd
add
stos
add
aad
mov
or
xor
movs
push
jge
hlt
add
mov
dec
aaa
fild
dec
ins
js
fldcw
lea
xchg
jne
sub
stos
add
ror
test
jno
cli
push
or
test
and
pop
je
shr
mov
add
push
js
sub
sbb
xor
xchg
add
popa
push
pusha
sub
shl
fwait
imul
test
add
popa
(bad)
or
xor
mov
sub
or
or
adc
add
jb
cwde
and
jge
into
jnp
adc
jae
cdq
ret
add
inc
pop
rol
ins
gs
cmp
sar
add
add
test
call
add
bound
dec
nop
js
sub
in
add
ret
pop
sub
add
xor
adc
dec
add
into
test
push
mov
xchg
test
dec
and
add
lods
outs
ja
fcom
push
add
add
add
(bad)
cli
lahf
add
lock
clc
adc
push
and
jnp
add
test
stos
sti
fiadd
add
cmp
add
ss
les
scas
addr16
add
shl
dec
pop
aam
push
adc
inc
jle
dec
jecxz
(bad)
mov
push
add
jmp
add
adc
out
or
cmps
clc
(bad)
out
js
mov
add
sbb
je
add
inc
cmc
out
jge
inc
add
gs
js
add
jl
js
add
push
jmp
xor
add
add
add
mov
add
mov
scas
fisttp
call
pop
dec
ror
je
in
add
(bad)
fnstenv
sub
add
sti
iret
and
test
stos
add
jne
stos
and
mov
retf
aaa
or
add
loope
mov
jmp
hlt
dec
push
leave
add
or
dec
add
jecxz
(bad)
stc
out
popa
add
sub
dec
ins
outs
mov
jno
xor
icebp
ficomp
add
dec
add
push
cmp
add
cmc
xchg
and
mov
add
add
dec
push
push
jg
sub
push
jo
enter
add
repnz
daa
fld
fsub
out
lods
mov
or
adc
add
pop
mov
call
cmps
add
jg
add
jb
add
push
mov
or
xor
xor
test
std
xchg
xchg
push
fisub
stos
add
stc
out
sar
xor
add
add
cli
add
xchg
movs
sbb
add
popa
mov
sahf
sub
call
retf
cmps
nop
add
clc
call
mov
stos
test
idiv
test
mul
or
mov
jae
fwait
push
outs
icebp
ret
xchg
jb
dec
cmp
shr
loop
out
push
inc
inc
or
shl
add
sbb
xchg
mov
in
add
fmul
pop
jle
test
call
stos
rol
stc
rol
cmp
test
nop
dec
je
add
stc
daa
sub
xor
mov
inc
xor
add
sbb
data16
ret
jne
add
mov
add
and
jo
add
js
pop
iret
bound
jae
adc
data16
add
into
test
push
mov
push
adc
and
in
das
add
inc
scas
out
hlt
dec
pop
outs
movs
adc
mov
add
jno
pop
test
leave
pop
inc
ret
pop
or
lods
cdq
ret
add
jne
add
cwde
adc
retf
push
jecxz
add
mov
out
xor
in
mov
xchg
outs
or
xchg
mov
add
dec
shl
dec
push
into
mov
inc
test
mov
out
test
add
sbb
rcr
dec
idiv
and
out
stos
add
jcxz
add
cmp
xor
add
aam
add
js
dec
inc
rol
add
add
sbb
lods
dec
pushf
add
loope
(bad)
and
in
ss
mul
jmp
pop
movs
inc
pop
mov
iret
add
mov
xchg
xor
mov
sbb
add
add
mov
mov
movs
rol
add
dec
xlat
dec
sahf
out
into
inc
add
add
das
(bad)
aaa
lods
test
leave
inc
push
out
xchg
fild
out
adc
dec
add
(bad)
push
and
push
es
jb
mov
add
cmps
in
test
mov
enter
jno
inc
jne
and
jg
stos
stos
cli
aaa
add
jae
jl
xchg
add
(bad)
lods
es
sub
ds
xchg
dec
jnp
push
add
add
arpl
add
mov
call
mov
scas
mov
in
xchg
clc
in
add
dec
sbb
daa
mov
sbb
or
xchg
add
add
jns
inc
fidivr
add
test
add
xchg
inc
jne
and
pop
bound
pop
push
neg
cmp
push
sbb
inc
shl
add
cmp
cwde
jecxz
jg
push
lods
add
sub
(bad)
imul
mov
mov
fidiv
add
push
mov
mov
push
add
xchg
and
mov
pop
dec
cdq
xchg
in
jns
mov
add
fild
int
ja
fcmovnu
pop
cvtdq2ps
jp
add
ficomp
shl
enter
add
in
stos
aad
call
fild
fstp
xor
and
xor
inc
sub
cli
adc
push
jns
bound
add
xchg
aam
scas
pop
add
inc
fs
add
jne
push
mov
jo
adc
or
xor
add
mov
add
pop
das
add
xchg
pushf
add
and
pop
aas
add
or
xchg
add
movs
add
pusha
and
adc
mov
ja
add
leave
and
neg
cmp
add
adc
add
add
lahf
lods
pop
aaa
ins
mov
addr16
push
sub
inc
cld
add
mov
add
mov
add
add
add
dec
add
cmp
mov
retf
push
out
add
outs
retf
jmp
call
add
sub
add
hlt
std
jmp
jb
fwait
inc
cld
cmp
sub
add
addr16
add
stc
add
sbb
int
add
aad
jmp
add
in
inc
add
cmp
lock
jns
out
mov
pop
add
enter
je
xchg
sbb
add
cld
and
adc
inc
scas
pop
adc
cmp
je
lods
popf
push
pushf
add
sbb
xchg
jl
sbb
add
adc
(bad)
int3
mov
(bad)
push
jae
adc
add
and
ret
jp
movs
fldcw
add
cwde
neg
aam
add
aad
mov
loopne
idiv
add
add
out
lods
jne
push
es
mov
icebp
cmc
pusha
pop
ficomp
hlt
xchg
pop
loope
inc
dec
add
mov
stos
shr
mov
jmp
imul
dec
dec
repnz
inc
enter
adc
sub
imul
sar
push
push
mov
sbb
add
add
adc
add
inc
xor
add
adc
fdiv
cwde
pop
add
pop
pusha
sti
push
(bad)
xchg
movs
mov
sub
les
sbb
jmp
neg
lea
into
dec
ror
add
lahf
mov
hlt
add
add
add
mov
pop
inc
push
push
adc
inc
inc
lods
fwait
ss
mov
rol
push
sub
add
ja
out
add
and
int3
pusha
push
and
sub
pop
cwde
pop
add
add
stc
(bad)
in
add
add
pop
aaa
inc
add
icebp
add
inc
xchg
jmp
add
add
xchg
pop
dec
add
adc
out
pop
repz
pop
sub
cmp
add
mov
cmps
fadd
(bad)
in
mov
pop
mov
dec
ror
nop
add
add
mov
mov
std
xchg
pop
sub
pop
add
scas
or
pop
dec
and
shl
rcl
out
add
and
cmp
mov
neg
push
pop
dec
cli
jnp
add
xchg
push
adc
add
add
cdq
mov
and
push
cld
es
and
cmp
enter
lahf
bound
call
mov
cdq
cmp
lods
aam
xchg
cmp
add
jle
push
mov
rol
mov
jbe
or
push
sbb
retf
add
add
mov
xor
pop
cmps
(bad)
mov
cmps
inc
gs
sub
lea
ins
add
pop
and
mov
xor
add
sti
inc
cmp
add
dec
adc
pop
test
sbb
or
sub
xor
lea
and
jmp
loopne
xchg
(bad)
and
out
sbb
pop
adc
add
cwde
dec
xor
jl
fst
scas
ins
aam
adc
push
add
add
pop
pop
enter
xchg
lds
add
add
add
jmp
mov
icebp
inc
mov
push
add
pushf
scas
adc
add
xchg
adc
(bad)
jmp
mov
add
inc
add
jge
add
pop
inc
jmp
push
fadd
xchg
call
ins
in
fnsave
aaa
retf
out
aam
mov
add
add
movs
shl
imul
push
jns
xlat
and
add
hlt
add
jle
iret
mov
push
or
xor
cdq
fcmovnb
add
test
push
mov
add
sbb
add
add
fsubr
pop
aad
(bad)
ins
aam
xchg
push
sbb
inc
xchg
(bad)
sub
loopne
frstor
add
add
ret
movs
movs
gs
xor
inc
icebp
scas
(bad)
retf
mov
add
pop
in
dec
lea
cmp
arpl
xchg
cmps
hlt
and
xchg
sub
loope
push
shr
jbe
call
daa
mov
aad
test
pop
addr16
test
fsubr
add
jge
mov
rol
pop
push
sbb
add
add
lea
or
loop
add
add
push
xor
add
add
jmp
mov
cli
cs
in
add
pop
arpl
into
test
add
scas
hlt
inc
add
or
rcr
inc
sbb
(bad)
xchg
hlt
adc
add
fimul
add
dec
loope
daa
jmp
movs
push
jne
loop
dec
add
mov
fisubr
cmps
aas
mov
adc
loope
retf
sub
fidiv
or
add
retf
lods
test
popa
cmp
add
lods
sub
add
rcr
ficom
jo
repz
sub
imul
add
dec
retf
fist
movs
pop
inc
jg
test
xchg
xor
shl
stos
call
inc
mov
mov
cmp
add
pop
(bad)
xchg
enter
int
int3
sub
test
cld
cmp
add
pop
lods
data16
sar
(bad)
rcl
inc
int
das
pop
lods
jmp
arpl
add
cmp
sti
fdiv
(bad)
div
add
add
enter
add
add
popa
dec
add
and
mov
test
add
add
(bad)
sti
xchg
add
jp
add
enter
pop
add
mov
sbb
sub
stos
lods
mov
pop
cmp
out
add
das
fwait
add
fiadd
dec
outs
jo
xchg
ja
or
jl
sti
and
add
add
out
push
add
mov
cmp
mov
jmp
pop
dec
into
in
push
clc
add
mov
inc
pop
or
mov
sahf
outs
lods
sub
cdq
dec
add
mov
std
jb
add
push
shl
adc
add
cld
aam
aas
popa
shl
cmp
daa
in
cld
push
add
sub
test
add
push
dec
or
xor
jl
dec
xchg
add
add
push
fiadd
dec
out
jle
inc
pop
mov
add
lock
jo
adc
mov
add
sub
cld
test
adc
add
add
shr
xor
pop
push
add
mov
add
push
inc
pop
add
in
or
jo
adc
add
or
and
add
mov
pop
or
add
jl
dec
movs
shl
inc
pop
lods
add
aad
(bad)
pop
fld
add
add
ret
mov
mov
mov
shl
aas
add
cdq
and
push
imul
xchg
xor
adc
sub
add
and
xor
adc
enter
cmp
dec
and
add
stc
add
adc
add
(bad)
mov
scas
sub
push
mov
ficomp
inc
les
das
adc
(bad)
aas
icebp
add
int
push
adc
push
pop
jnp
add
pusha
popa
inc
sub
add
add
add
retf
dec
add
int
add
cli
add
das
mov
add
xor
sub
icebp
imul
push
mov
mov
ja
loope
jecxz
inc
adc
add
imul
and
jg
add
arpl
or
(bad)
and
ret
sub
hlt
cmps
fist
add
icebp
add
add
movs
outs
or
xchg
aaa
mov
cmp
dec
cmp
sbb
retf
sbb
add
xor
dec
ud0
sub
cmp
add
add
mov
(bad)
jmp
sbb
add
mov
or
retf
pusha
jge
xchg
call
mov
mov
add
and
and
xchg
or
push
pop
repz
stos
lds
or
add
add
stos
call
add
or
das
lods
or
shl
jb
add
mov
ja
icebp
xor
movs
pop
sub
xlat
mov
add
mov
sahf
and
xor
add
and
add
dec
mov
dec
xchg
fsub
ds
add
add
and
idiv
popf
lahf
das
add
sub
xchg
popf
je
fsubr
dec
add
mov
mul
jae
(bad)
fld
mov
add
mov
mov
stos
adc
sti
xor
sahf
push
repnz
xor
cmps
add
or
rcr
movs
add
push
mov
add
stos
xor
add
xchg
add
out
pusha
movs
and
dec
lahf
lods
inc
jg
cwde
add
dec
adc
mov
add
xor
sbb
add
add
pushf
push
cs
and
imul
xor
cdq
movs
jg
dec
mov
push
(bad)
(bad)
mov
dec
add
aaa
add
movs
add
jb
add
mov
mov
add
ins
mov
sbb
jnp
loopne
lock
pusha
mov
xchg
adc
iret
mov
in
dec
or
dec
and
lds
jmp
jg
add
mov
ret
mov
add
push
les
add
cmp
pop
inc
and
jno
push
add
out
add
mov
adc
imul
mov
outs
xor
dec
pop
xchg
xchg
aam
add
neg
fild
add
adc
add
mov
sahf
jo
call
loope
out
leave
push
lods
pop
add
arpl
add
scas
(bad)
scas
add
enter
std
test
push
jmp
call
test
pop
push
pop
add
pop
push
add
retf
or
aam
pop
xchg
xor
push
cs
jl
and
push
aad
leave
cdq
cli
add
push
add
add
arpl
fwait
jmp
out
std
mov
retf
cmp
fiadd
iret
add
and
mov
je
hlt
(bad)
xchg
add
xor
fimul
fs
push
jmp
add
aam
or
add
and
loop
mov
jle
xor
rol
in
add
add
add
rol
add
add
adc
mov
and
add
add
push
fist
pushf
add
arpl
add
sub
pop
add
in
pop
cdq
xor
add
fisub
add
and
jl
add
jae
fdivr
data16
pop
adc
push
xchg
push
mov
xor
pop
repnz
(bad)
sbb
and
dec
pop
retf
push
(bad)
add
test
add
imul
mov
add
div
sbb
and
and
mov
inc
mov
ret
fdivr
add
mov
add
add
jge
mov
mov
sub
sub
into
fdiv
dec
and
cmp
adc
push
add
aad
add
add
xor
lock
dec
add
pop
jmp
add
jo
ja
add
inc
or
mov
xchg
xlat
mov
test
adc
fwait
outs
std
fidiv
and
inc
sbb
add
cmp
movs
hlt
adc
add
xor
das
cli
pop
mov
xor
sti
add
add
sahf
(bad)
fbstp
add
add
xchg
scas
(bad)
xor
xchg
mov
mov
retf
xchg
xor
add
outs
js
add
jle
mov
ss
inc
adc
push
push
pop
sbb
in
je
fcomi
xor
mov
add
shl
cli
push
or
push
or
rol
scas
add
add
add
mov
fisttp
add
inc
cld
or
outs
sbb
jmp
shl
jmp
sbb
add
test
pop
pop
cs
mov
ins
fwait
and
xchg
into
jg
mov
ins
cmovs
cmps
imul
pop
cs
xor
fcmovu
add
add
(bad)
fist
jmp
or
fmul
pop
test
add
inc
mov
popf
dec
add
lea
popf
daa
push
loop
ja
add
je
xchg
adc
(bad)
js
add
sbb
pusha
add
outs
jbe
inc
or
lods
(bad)
jp
add
push
cmps
mov
sahf
clc
out
loop
loopne
add
add
retf
cmp
add
push
pop
mov
movs
sar
sahf
mov
mov
leave
movs
mov
fdivr
xchg
xor
add
or
dec
mov
sub
add
scas
inc
nop
cmp
pop
mov
add
pop
add
enter
and
add
cmp
loope
sub
add
xor
seto
xor
dec
pop
test
rol
repnz
inc
aaa
add
add
pop
xchg
es
mov
popf
xlat
stos
inc
xchg
cmc
stc
dec
dec
call
iret
jecxz
xchg
add
sub
push
jecxz
sbb
dec
cdq
ds
pop
add
aad
add
mov
int3
cmp
or
add
sbb
or
sbb
shl
rol
and
fcmovnu
add
add
add
bound
mov
hlt
hlt
in
dec
dec
fimul
add
stc
add
mov
inc
add
dec
add
xchg
dec
xor
pop
inc
movntq
in
xchg
add
rol
ins
or
cmps
sub
test
add
mov
ret
add
dec
cmp
push
inc
push
mov
inc
push
fistp
xchg
pop
(bad)
push
popf
dec
xchg
dec
cmp
movs
mov
repz
adc
add
push
cdq
(bad)
add
push
xchg
add
aad
test
adc
aas
add
jmp
cmc
bnd
and
lahf
add
fmul
mov
pop
add
add
mov
sbb
sbb
mov
mov
dec
xor
xor
stc
sti
dec
fwait
sub
aaa
popa
and
add
fnstenv
addr16
push
aaa
sbb
fisub
retf
add
inc
mov
cli
ja
ds
in
dec
nop
cmp
and
pop
pusha
push
xchg
sub
out
out
sbb
rcl
test
lods
sahf
xor
jne
sbb
sub
sub
cmp
add
pop
add
data16
lock
mov
or
mov
add
inc
fs
add
imul
int
or
jl
imul
adc
and
pop
adc
lea
inc
nop
data16
jp
cmp
add
cmp
leave
rcr
mov
add
xchg
and
mov
lahf
and
cld
stc
add
add
scas
and
mov
add
pop
add
add
add
sahf
and
push
and
jne
add
dec
inc
aaa
cli
pushf
mov
into
leave
ins
mov
(bad)
out
add
push
mov
jno
add
or
std
pusha
add
cmp
fs
test
pop
and
add
sbb
imul
stos
loop
cmc
loopne
jle
jnp
pop
fsub
jge
xor
movs
(bad)
xchg
add
xchg
xchg
jne
add
int
scas
add
ins
(bad)
lock
hlt
inc
add
mov
je
xchg
ins
add
or
jo
mov
fnstcw
fisttp
add
clc
dec
clc
pop
aad
add
add
or
cmps
dec
add
arpl
jmp
xor
add
pusha
add
scas
jg
leave
sub
add
cmp
add
add
shr
add
mov
push
add
mov
and
dec
cld
cmp
ins
cmp
mov
add
fstp
add
xor
xchg
inc
icebp
ins
add
stos
add
add
add
or
xor
jl
add
aaa
add
jne
aad
mov
add
in
int3
mov
movs
rol
add
add
jns
add
movs
sbb
push
rcl
movs
add
and
add
in
xor
xchg
loopne
and
arpl
push
jg
fwait
pop
jno
push
pop
mov
add
sub
dec
push
mov
stos
gs
js
popa
rcr
pop
sbb
dec
xchg
add
sahf
stos
push
add
ret
dec
add
add
add
scas
mov
jle
push
cmc
out
inc
mov
imul
into
in
shl
je
ficom
xchg
pop
mov
sub
jmp
add
pop
push
or
and
lahf
movs
sub
mov
xor
outs
jnp
jle
ret
add
add
cld
dec
add
jg
push
cld
adc
iret
and
add
(bad)
in
mov
push
mov
pop
jb
mov
out
add
outs
aas
sti
add
mov
add
cmp
bound
xor
lods
add
mov
add
sbb
(bad)
xor
enter
sub
push
and
fadd
inc
push
pop
jecxz
sahf
xchg
leave
add
pop
add
lock
sbb
pop
and
jle
test
retf
cld
imul
cmp
add
fbld
and
add
dec
mov
add
inc
sub
in
add
cld
pop
mov
cld
cmps
pop
adc
sti
add
sbb
aaa
sub
mov
mov
add
xor
dec
es
and
add
pop
jns
dec
sbb
mov
jns
jae
add
dec
hlt
test
add
fiadd
push
add
clc
or
cmp
add
popw
add
add
mov
ret
test
cdq
add
mov
call
mov
pop
mov
(bad)
mov
cdq
add
jle
add
or
and
add
add
arpl
add
jns
add
in
or
sub
(bad)
xor
or
sub
add
dec
xchg
loop
fdivr
js
ret
push
ret
add
mov
jle
das
push
ds
add
xor
ss
add
cmp
or
or
mov
add
xlat
loopne
mov
add
cmp
dec
dec
jg
test
sub
cmp
dec
xchg
sbb
movs
js
mov
mov
scas
and
mov
pop
xor
sub
xchg
in
mov
loope
in
adc
sub
imul
add
push
daa
inc
out
dec
out
xadd
cmps
inc
add
daa
add
cmp
gs
cld
add
pop
in
or
add
mov
int
add
loop
add
cli
add
pop
in
in
(bad)
fwait
addr16
add
nop
(bad)
imul
cwde
pop
mov
jmp
add
(bad)
loop
add
mov
stos
sbb
jne
add
div
or
or
xchg
mov
xchg
add
sub
xchg
add
cli
add
sub
pop
push
xor
out
loop
add
inc
push
dec
cmp
sbb
cld
dec
lds
icebp
ret
add
xchg
inc
sub
add
lahf
add
inc
cmp
add
sbb
add
int3
mov
jns
dec
into
dec
add
xor
lea
add
push
(bad)
cs
rol
bound
jnp
sbb
sbb
out
dec
fisttp
sub
add
mov
pop
xor
inc
xor
movs
or
add
stos
in
mov
add
add
sub
ds
mov
aas
sbb
add
mov
xchg
add
(bad)
stc
inc
daa
mov
aad
add
mov
sub
rol
push
clc
xlat
sbb
sub
sbb
pop
xchg
inc
retf
scas
xchg
ret
add
adc
shr
push
outs
and
xchg
sub
mov
cmp
add
and
add
lock
pop
pop
sbb
fs
mov
sub
icebp
add
mov
fmulp
cmps
cmp
add
mov
lods
fcomp
add
rcl
mov
(bad)
out
pop
bound
add
rcr
data16
add
pop
(bad)
push
repz
xchg
mov
aaa
int3
cmp
mov
(bad)
call
push
jnp
cmps
outs
add
add
cmc
in
add
movzx
loopne
jl
sbb
inc
xor
or
repz
lea
mov
add
sbb
iret
cmp
jecxz
push
retf
push
ret
mov
sbb
inc
add
jle
add
cmc
inc
jmp
add
adc
add
repnz
in
jl
add
pop
stc
push
add
ins
clc
dec
add
ds
pop
or
add
add
mov
retf
pop
ret
ja
xchg
test
test
fisubr
mov
and
rol
add
fidivr
cs
lock
lea
add
mov
xchg
sub
fcom
fild
jl
aam
out
sub
cmp
into
xor
mov
test
add
add
xchg
inc
add
add
aas
add
jmp
imul
daa
inc
mov
and
cld
mov
or
add
and
add
add
add
pushf
cli
cmp
pop
xor
add
cs
jle
add
pop
and
mov
add
jl
add
into
sahf
hlt
iret
shr
pop
add
(bad)
jb
pop
and
icebp
adc
sti
pusha
adc
sahf
int
adc
shl
push
add
cmp
sbb
mov
add
add
add
lahf
jmp
jb
sti
add
xchg
nop
xchg
sbb
add
or
dec
dec
add
jno
data16
out
cmp
pop
add
push
imul
push
jge
push
retf
les
sub
add
xor
(bad)
js
ins
dec
xchg
cmp
outs
mov
add
ds
retf
(bad)
das
lock
add
fwait
and
mov
mov
add
cmps
mov
imul
and
add
cmp
fnstenv
inc
into
jge
add
cmc
fbld
or
add
pushf
mov
mov
sbb
rol
add
pushf
aam
std
iret
jbe
add
fdiv
(bad)
push
pop
xchg
push
xor
or
add
stc
inc
jo
movs
in
(bad)
sub
sbb
mov
add
adc
repz
push
add
scas
mov
xlat
jbe
add
and
cmp
es
jg
dec
inc
int3
sbb
jbe
dec
fisubr
push
and
fnstsw
dec
mov
stos
pusha
retf
jns
jg
jo
mov
xor
add
cmp
popf
mov
jae
jne
add
jb
pop
mov
adc
icebp
lock
or
add
lahf
and
add
(bad)
mov
les
add
dec
ret
(bad)
jmp
outs
das
xchg
mov
aad
in
xchg
add
xor
add
sub
add
adc
add
fstp
std
cmps
popf
and
mov
js
add
arpl
push
addr16
dec
add
aad
add
pop
mov
fwait
js
add
jne
jae
push
xor
inc
add
or
cmp
add
cli
jl
jg
add
es
in
std
adc
repz
xchg
das
mov
pop
mov
add
idiv
add
add
sbb
pop
add
cmc
and
retf
movs
add
sbb
dec
push
pop
add
ja
push
dec
bound
les
add
mov
vunpcklpd
sub
pop
pop
adc
loop
loope
lods
push
retf
pushf
jae
mov
add
add
pop
xor
dec
jnp
(bad)
je
sub
jne
xor
(bad)
hlt
fsubp
pcmpeqd
mov
or
and
ins
fild
add
push
fcomp
dec
mov
cmp
adc
inc
scas
test
mov
jns
addr16
add
js
cli
das
add
aas
popf
jb
lds
ficom
fstp
mov
push
div
or
add
mov
data16
ss
fadd
push
inc
into
cmp
add
push
push
or
retf
add
push
mov
add
outs
das
aas
mov
inc
add
fs
sub
add
xor
mov
dec
add
or
or
push
cmc
inc
jb
out
xor
aas
or
popf
enter
push
jbe
bound
out
add
adc
add
inc
or
pushf
cmp
and
in
add
mov
or
cmp
jmp
add
sbb
shr
cmp
addr16
cs
push
add
or
push
loopne
stc
add
mov
out
movs
pop
xchg
add
mov
pop
outs
sub
dec
scas
sti
int3
clc
adc
push
sub
add
pop
add
cmp
add
add
mov
iret
xchg
push
mov
add
out
xchg
add
ja
mov
vptestnmq
sbb
loope
push
push
or
bound
repz
jne
xor
add
and
retf
mov
mov
jae
add
jnp
add
xor
neg
xor
cmp
jae
jle
shl
dec
int
popa
push
repz
dec
lock
and
pop
movs
cmp
or
add
(bad)
cmp
mov
in
add
add
add
mov
add
fnsave
add
dec
add
and
xchg
stc
xor
add
pop
psubusb
and
aaa
add
push
out
cs
iret
and
add
fcomp
enter
add
jg
xor
add
adc
cli
cdq
out
sub
pop
or
fidivr
pushf
in
adc
loopne
add
add
ror
ret
add
xchg
xchg
jnp
aas
lds
mov
inc
arpl
add
rcr
mov
dec
maxps
xchg
sar
add
dec
add
fwait
pop
add
xchg
add
add
mov
add
inc
and
aad
sbb
fmulp
push
ins
int3
push
dec
mov
dec
add
(bad)
add
pop
out
jnp
add
stos
push
loope
mov
data16
cs
or
call
shr
mov
cmp
clc
clc
int3
aas
aad
mov
add
add
xor
loop
or
sbb
mov
jg
add
add
lods
add
clc
add
icebp
aaa
ss
add
jge
or
add
rol
pop
push
dec
out
mov
cdq
aas
out
pop
add
mov
sub
test
adc
ret
xchg
loopne
lods
or
add
and
xchg
in
xchg
mov
mov
sahf
jle
push
cmp
add
dec
add
ins
sti
xchg
xchg
add
ins
push
setb
add
fimul
cmc
clc
int3
repnz
add
out
add
dec
fild
add
or
add
jecxz
sbb
push
sbb
repz
or
imul
mov
add
sbb
add
dec
xor
cmp
cmp
add
xlat
in
ss
add
add
es
ja
add
xchg
push
or
in
and
add
mov
sbb
jl
add
test
add
movs
test
mov
sbb
add
rol
add
jmp
push
adc
mov
jge
iret
fwait
icebp
pop
cli
add
or
add
fst
add
mov
test
fld
inc
ret
dec
push
adc
add
add
das
mov
std
sbb
add
mov
ret
int
add
imul
add
loop
rcl
add
and
add
rol
sub
push
adc
add
mov
sub
into
pop
xor
dec
xchg
dec
pusha
cld
repnz
add
jnp
add
jl
rol
mov
sbb
add
mov
stc
add
xchg
add
add
pop
fdivrp
rcl
fadd
add
xor
add
call
sub
add
jp
pop
sti
mov
pusha
cmp
mov
mov
mov
pop
std
push
stos
pop
dec
and
ret
mov
add
push
outs
sbb
lds
add
int
mov
add
push
push
push
inc
dec
ret
add
sub
jae
add
pop
shl
xor
popa
dec
xor
add
test
sub
jne
jo
push
into
jo
das
xor
lock
mov
adc
add
cmp
add
push
(bad)
jo
clc
imul
popf
(bad)
jmp
inc
add
cmp
add
jb
xor
inc
pop
mov
stos
lahf
add
in
add
loope
add
or
cmp
jg
jle
aam
sbb
pushf
(bad)
ins
loopne
in
add
mov
push
xlat
push
pop
ins
cmp
cdq
call
popa
jge
nop
inc
xchg
ret
add
inc
paddw
int3
sub
imul
cdq
sbb
pop
add
lock
inc
jg
add
out
pop
mov
ins
jp
ins
push
mov
sbb
sbb
xor
mov
fst
mov
jge
jl
mov
add
sar
mov
cmp
add
add
adc
leave
mov
cmps
add
add
jmp
or
add
xlat
mov
add
int
mov
add
add
cmp
aaa
dec
add
mov
jae
or
add
pop
xor
push
jp
sub
add
jecxz
daa
fidiv
add
retf
add
(bad)
xlat
inc
add
lods
add
das
xchg
out
add
jns
push
inc
pop
jp
mov
add
rol
push
xor
adc
xchg
jge
add
sti
pop
cmp
fcom
or
fiadd
test
ss
adc
add
inc
xchg
adc
inc
or
push
inc
int
or
mov
mov
inc
add
repz
sqrtps
movs
retf
add
dec
cdq
lods
add
adc
add
sbb
xor
jo
add
nop
nop
outs
push
loop
jb
int
jns
add
cmp
adc
sbb
inc
jnp
cmp
add
pop
cdq
adc
add
dec
sub
cmp
add
xchg
pop
leave
jp
sbb
sti
push
sub
add
test
fs
add
mov
(bad)
and
test
lds
add
add
outs
add
cli
lahf
ret
sub
add
fcmovu
pop
push
retf
push
sbb
xor
popf
add
or
call
inc
nop
cld
aas
or
std
imul
jp
adc
out
adc
add
dec
add
fild
add
mov
sub
pushf
add
xchg
loop
add
cmp
in
add
add
xor
bound
add
xchg
sbb
mov
mov
adc
add
sub
fild
add
mov
xchg
add
or
dec
sbb
cmp
into
add
push
mov
stos
pop
add
mov
jo
mov
fwait
scas
and
add
jmp
add
and
pop
dec
jmp
popa
ins
add
in
test
dec
mov
int
add
jmp
jne
add
mov
pop
arpl
ret
jo
sbb
pop
xchg
loop
xor
add
pop
and
leave
std
mov
add
pop
popf
test
add
cdq
cs
add
mov
jb
outs
add
scas
jle
add
call
add
push
scas
cmp
add
lock
iret
fld
add
mov
(bad)
or
jnp
mov
int
add
add
sub
mov
push
jl
leave
cmp
add
fadd
fiadd
sub
das
lock
pop
inc
push
movs
imul
dec
fbstp
loope
xor
adc
or
pushf
or
and
clc
add
xchg
add
sahf
xor
mov
adc
ret
outs
add
push
dec
add
out
pop
and
fs
adc
push
add
aas
mov
push
and
dec
add
call
movs
add
add
sbb
ins
add
jl
add
push
in
dec
push
retf
fpatan
add
add
push
lock
or
add
adc
loopne
add
xlat
mov
dec
ds
mov
in
imul
in
add
outs
mov
stos
dec
jle
add
xor
jae
leave
mov
(bad)
inc
lds
xchg
add
movs
cdq
(bad)
cmp
add
pop
or
add
test
sar
add
das
push
add
ins
inc
jb
fiadd
imul
fdivr
inc
rcl
and
sub
sbb
mov
add
add
data16
add
outs
add
xchg
push
imul
sbb
pop
or
loopne
aad
cmp
mov
popf
cli
add
add
imul
cmp
les
fadd
dec
out
sbb
push
enter
repz
shr
mov
mov
sbb
mov
push
add
add
add
xor
pop
or
js
sub
sbb
popf
pop
fild
add
sar
cmps
int
add
xchg
mov
push
mov
add
ret
aam
add
fcomip
mov
xor
or
add
jbe
pop
jg
sbb
adc
add
jo
sub
pop
shl
dec
xchg
jno
fwait
sbb
dec
popf
jne
add
cmp
inc
or
add
jmp
add
add
cwde
in
dec
adc
mov
ffree
cmps
rcl
push
xor
add
fcmovne
add
cmps
pop
imul
or
retf
pop
or
add
jle
push
sbb
aaa
pop
fwait
add
xchg
int3
and
add
out
adc
push
sub
xchg
loope
add
add
add
adc
add
popf
add
and
dec
lea
push
add
js
fld
gs
shr
dec
jg
add
add
sub
inc
mov
add
icebp
mov
out
pushf
pop
mov
in
dec
outs
mov
sub
and
pop
repnz
add
jns
mov
call
(bad)
xlat
rcr
add
sbb
mov
adc
mov
mov
xchg
leave
mov
lods
loopne
sub
push
cld
add
scas
sub
add
mov
push
rcr
inc
das
mov
and
imul
and
in
add
movs
jnp
lea
inc
cmp
xchg
push
dec
adc
pop
fld
jle
fdivr
and
int3
lods
pop
jge
and
and
aad
add
jecxz
inc
add
sbb
adc
cmp
or
sub
mov
mov
out
dec
je
xchg
push
(bad)
pusha
cmp
mov
dec
jb
jno
jne
neg
inc
mov
pop
or
push
test
sbb
push
pop
shl
sub
(bad)
adc
sub
add
adc
popf
add
or
(bad)
and
je
sub
xor
add
or
inc
aam
pop
xor
movs
cmp
adc
pop
out
pushf
cs
popa
push
add
push
sub
mov
add
sti
ret
hlt
fisttp
adc
hlt
adc
dec
cmp
sbb
mov
sbb
movs
sub
out
add
add
add
out
and
adc
dec
mov
lahf
add
popf
pop
push
add
add
dec
enter
add
and
sub
add
dec
out
add
fisttp
add
out
add
jmp
add
retf
xor
or
add
icebp
jne
add
push
add
ins
call
out
(bad)
jle
mov
and
add
jl
cs
add
add
or
xchg
jns
enter
mov
jmp
mov
add
add
add
jae
in
push
add
sahf
adc
les
add
mov
xchg
sbb
xchg
nop
add
out
cmps
or
add
pop
add
cmp
adc
adc
adc
mov
jo
aam
inc
mov
add
jno
int
data16
xchg
call
(bad)
or
cmp
neg
movs
lds
add
add
pop
mov
cmp
mov
cmc
mov
loop
add
rcr
add
out
lahf
add
inc
inc
xchg
stos
enter
inc
sahf
das
movs
cmps
or
push
add
loop
add
dec
lahf
add
sub
and
cmps
into
jns
push
xchg
jnp
inc
or
add
add
add
add
mov
cmc
push
leave
test
push
xor
(bad)
or
sbb
aas
and
add
dec
seta
and
jecxz
test
pop
add
sbb
sub
add
jl
cli
nop
xchg
and
xor
sbb
sub
and
jp
jae
rcr
push
stos
fld
arpl
test
adc
adc
xchg
sbb
test
inc
sub
das
add
push
aad
add
pop
ja
or
sub
add
dec
mov
xchg
add
adc
pushf
je
gs
and
or
shl
add
or
cmps
das
pop
ret
jmp
retf
scas
enter
iret
mov
rol
sbb
mov
pop
add
push
add
(bad)
pop
mov
and
fldcw
pop
test
fstp
add
mov
cmps
cmp
call
pop
sub
add
sub
push
data16
popa
fld
iret
pop
ins
or
sub
enter
cld
mov
int3
cmp
add
mov
xchg
add
(bad)
ficom
jo
sub
(bad)
ins
inc
add
ja
xchg
mov
add
add
in
xor
add
xor
jae
add
add
arpl
dec
cli
cmc
mov
add
lea
lods
push
lock
pop
cld
cdq
dec
add
xchg
xchg
push
popa
dec
mov
add
xchg
icebp
xchg
and
iret
stos
or
dec
sbb
pop
add
and
cdq
mov
movs
fild
pop
adc
mov
stos
sub
add
add
js
add
sbb
sub
aam
add
loope
add
xor
add
inc
mov
sub
add
push
jne
loop
test
and
data16
das
retf
pop
pop
add
retf
repnz
add
add
pop
fs
js
sti
add
sbb
add
add
mov
pop
cmp
add
fiadd
sub
call
aas
jno
add
dec
add
cmps
pop
pop
enter
xchg
sbb
or
sub
je
jbe
xor
jae
or
add
xlat
aas
stc
cmp
add
shl
dec
jb
add
add
mov
add
push
jae
(bad)
(bad)
push
imul
add
test
rol
jns
add
cmps
imul
add
lds
add
(bad)
fs
ja
add
nop
in
adc
cmp
jmp
xchg
fld
add
jbe
jns
mov
add
jmp
add
push
dec
mov
mov
add
or
xchg
or
xchg
add
cli
inc
ss
push
jo
pop
ret
dec
jle
in
add
gs
adc
push
add
bound
dec
xchg
fild
or
add
loope
add
mul
iret
mov
xchg
shr
pop
jns
icebp
add
mov
imul
push
rcl
sbb
in
dec
cmps
inc
out
test
and
pop
lods
add
inc
cmp
rcr
mov
xor
imul
pusha
clc
adc
repnz
nop
xchg
push
push
adc
add
or
mov
jmp
add
enter
cmps
add
js
push
int
test
push
add
adc
sbb
add
(bad)
add
rol
jge
or
imul
out
ins
or
mov
and
add
add
push
jae
pop
add
fs
out
sar
xchg
jl
adc
(bad)
neg
add
add
cdq
jbe
push
jb
push
std
mov
ja
add
fsub
cld
add
test
add
push
rep
sub
add
add
dec
adc
add
nop
pop
cmps
mov
inc
mov
addr16
push
gs
mov
out
add
pop
xchg
pop
add
clc
dec
int
shr
adc
imul
adc
add
pusha
add
sar
out
stc
add
add
mov
addr16
add
adc
add
jmp
add
xchg
out
sbb
add
and
ds
rol
cmp
xchg
add
(bad)
or
xlat
push
inc
add
jp
std
leave
retf
sbb
or
add
out
movs
fistp
hlt
xchg
add
sub
add
leave
inc
out
ins
hlt
inc
call
add
add
adc
push
int3
jge
adc
mov
or
cdq
sbb
xchg
std
add
cmp
and
les
add
add
mov
mov
xor
push
cdq
xlat
push
mov
add
setns
jle
add
pushf
test
xchg
test
add
ins
loope
add
call
scas
into
xor
xor
pop
int
xor
add
dec
fwait
add
(bad)
push
cmc
sbb
das
gs
or
mov
add
hlt
jmp
add
imul
add
jg
jle
and
sub
push
cmp
jns
lods
add
rep
ror
test
ds
sub
popa
cmps
jb
and
cli
or
aam
cmp
call
dec
fistp
xchg
add
and
or
add
(bad)
jnp
movs
sub
out
(bad)
stos
jno
xor
out
mov
sbb
inc
mov
add
jae
push
add
adc
and
fmul
add
inc
xor
add
aaa
xchg
adc
sbb
int
add
aad
int3
(bad)
das
push
add
(bad)
cmp
inc
push
jge
add
pop
fld
out
mov
push
icebp
or
add
xor
xchg
mov
add
cmps
iret
add
ds
xchg
stos
inc
push
rcr
mov
jnp
or
add
cmovae
pop
add
add
cmp
cmp
add
shr
dec
adc
sbb
add
mov
iret
mov
inc
add
push
mov
adc
jbe
cmp
pop
xchg
cdq
cwde
or
mov
push
inc
test
call
and
test
mov
inc
mov
xchg
bound
sahf
repz
add
add
aas
dec
and
inc
add
and
add
mov
push
push
push
cmp
add
outs
add
cs
dec
pop
push
inc
and
inc
popa
or
mov
jle
jecxz
add
mov
cmp
arpl
mov
add
sti
mov
add
mov
pop
push
pop
sub
sbb
ja
add
add
push
mov
in
mov
shrd
stos
(bad)
(bad)
in
mov
inc
out
fidivr
sbb
stc
int
or
mov
sub
add
test
into
xor
inc
pop
or
pop
xlat
out
jne
fistp
inc
add
inc
adc
adc
addr16
and
adc
add
or
cli
pop
rol
mov
cmp
mov
xor
or
retf
push
add
jge
add
jbe
jge
pop
add
out
add
add
xchg
or
in
add
adc
add
cmp
add
shl
rol
cmp
loop
xor
pop
call
pop
ss
dec
neg
add
add
push
adc
and
pop
popf
out
push
push
cmc
jl
add
sbb
and
daa
sar
mov
movs
sbb
call
add
xor
xchg
add
xchg
add
xchg
jbe
add
add
and
jne
add
ins
add
(bad)
lock
mov
pop
popf
add
dec
popf
ror
dec
add
cdq
mov
ss
mov
retf
mov
jl
cli
lods
adc
cmp
xor
sub
(bad)
add
add
dec
dec
jns
mov
aad
add
int3
add
fnstenv
repz
jmp
adc
add
add
dec
call
dec
cmp
ins
dec
fidiv
jb
cli
mov
and
xchg
add
sar
xor
(bad)
and
add
pop
push
pop
data16
ficom
xchg
mov
sti
pop
iret
add
xchg
hlt
mov
test
(bad)
int
xor
or
out
loop
stos
loop
add
and
sar
in
or
add
add
push
clc
or
repz
and
jno
add
add
out
and
dec
add
pop
sub
add
not
inc
mov
xor
add
cmp
cmp
add
push
jg
jns
push
cmp
add
mov
or
sub
mov
ins
sbb
add
add
in
add
push
shl
add
sbb
pop
in
pop
add
pop
jne
add
add
jno
add
js
stos
cmps
add
sbb
add
cmp
icebp
add
clc
add
adc
jns
and
ins
scas
cmp
add
stos
sub
arpl
out
pop
mov
add
xchg
repz
test
or
add
outs
sahf
retf
clc
icebp
in
mov
add
sbb
add
xor
aam
repnz
lock
or
xchg
add
outs
or
pop
add
mov
push
leave
out
mov
and
arpl
add
pop
jae
mov
pop
and
mov
fst
sbb
js
jo
add
outs
jp
add
adc
aad
jp
adc
pushf
or
add
mov
retf
clc
add
int3
loop
jle
inc
call
rol
rol
leave
dec
and
pop
and
pop
(bad)
add
push
lods
inc
enter
add
adc
lsl
add
pop
xor
(bad)
cdq
pop
cli
dec
add
scas
add
jo
lea
add
pushf
or
cmp
cmp
(bad)
add
shl
adc
add
jnp
out
adc
push
mov
add
test
add
retf
jl
(bad)
(bad)
stc
popf
sub
add
add
sti
lods
pop
sub
and
sub
inc
pop
leave
adc
sub
add
inc
xchg
push
sbb
sbb
shl
xor
push
inc
add
arpl
ja
repz
mov
add
sbb
jo
or
pop
cli
add
mov
test
inc
adc
loopne
inc
or
sbb
cdq
aad
sub
push
nop
rol
add
add
jns
add
or
add
add
inc
stc
adc
inc
add
add
mov
(bad)
push
sub
ss
pop
inc
push
or
add
retf
adc
add
xor
jb
mov
add
dec
sub
cmp
add
dec
push
mov
jnp
add
mov
jmp
shr
or
adc
add
sbb
icebp
add
adc
jo
add
cmp
xchg
rcr
add
xchg
int
inc
xor
dec
xchg
(bad)
stc
pop
in
inc
or
(bad)
fcmovbe
xor
cmp
push
mov
add
add
lods
ds
inc
cmc
pop
popa
xchg
loopne
fdivr
add
or
add
lods
xor
add
inc
sbb
and
mov
popa
mov
cmp
sub
(bad)
data16
sbb
fld
stos
mov
mov
or
jo
and
add
jne
add
repnz
outs
xor
jle
xchg
rcl
rcl
ret
sbb
or
icebp
daa
stc
xchg
xchg
push
xchg
(bad)
add
adc
xchg
or
lds
add
add
pop
mov
and
mov
outs
out
icebp
or
mov
imul
push
pop
jmp
add
je
cld
add
mov
add
and
scas
in
pop
leave
push
lods
jmp
sbb
or
add
jno
add
xchg
add
fiadd
dec
mov
retf
data16
sub
add
add
call
fnsave
add
loop
jg
js
and
add
add
add
add
inc
mov
popf
jno
or
add
call
xchg
mov
jl
sti
and
sbb
iret
scas
lea
emms
sbb
jne
ffreep
stc
cmp
add
ret
inc
fs
inc
or
add
add
push
ja
mov
add
adc
pop
cdq
cmps
add
std
inc
inc
add
inc
xlat
add
pop
je
sbb
jb
daa
xchg
fild
popa
add
pop
fs
mov
push
cmps
jbe
mov
pop
fbstp
jle
add
rcl
fisttp
add
in
fiadd
xlat
add
and
jle
test
add
test
add
add
aam
cmc
retf
add
addr16
xchg
sub
add
mov
jmp
repnz
sbb
cmp
adc
fwait
and
push
mov
mov
shr
add
cli
pop
add
inc
push
xchg
inc
fcmovu
cmp
in
leave
std
cmp
add
inc
repz
jecxz
add
pop
and
xor
add
xchg
jo
cmps
mov
add
mov
mov
test
mov
push
cmc
or
inc
dec
pusha
shr
add
mov
mov
push
dec
(bad)
dec
jl
push
loopne
ins
inc
add
sub
xchg
adc
cmp
popa
mov
nop
push
pop
mov
adc
aas
add
xchg
dec
test
jmp
cld
add
sub
add
test
pop
add
hlt
les
inc
inc
sahf
cmp
xor
add
xchg
jns
data16
outs
inc
cmp
(bad)
in
sar
mov
and
in
rcr
pop
dec
push
push
and
add
fcmovnbe
outs
fwait
rcr
xchg
dec
out
fdivr
ja
push
rcr
inc
or
or
add
ffree
jmp
outs
dec
mov
xchg
lods
clc
jge
loopne
and
jle
repz
add
mov
add
mov
cmp
add
add
pushf
daa
rol
in
jb
sti
add
retf
cdq
adc
add
and
add
int3
add
push
jge
js
add
mov
add
shr
push
pop
push
movs
jmp
sbb
dec
xor
imul
add
sar
inc
repz
ja
push
jne
add
or
sbb
rol
cmps
stc
add
(bad)
scas
add
outs
in
popf
jmp
ja
jb
pop
adc
icebp
enter
push
sbb
jecxz
mov
hlt
lds
mov
push
cmp
loope
mov
mov
mov
add
inc
sti
dec
jge
daa
jecxz
mov
add
add
jae
sahf
jge
rol
repnz
cwde
add
enter
xor
add
xchg
cmp
shl
add
out
add
mov
and
add
add
and
scas
xchg
sub
sbb
sar
dec
xchg
add
repnz
add
pop
pop
loopne
or
push
inc
and
stc
jno
lahf
popa
out
push
into
fcomp
aaa
adc
hlt
push
inc
xchg
ret
loopne
add
add
int3
pushf
pop
inc
jge
aaa
jmp
add
add
inc
jbe
add
push
fstp
xchg
add
stc
enter
inc
int3
dec
sahf
ins
mov
xchg
mov
xor
push
add
lds
div
test
sti
clc
jo
jle
add
clc
rcl
mov
and
mov
out
xor
lea
jecxz
mov
add
cmc
leave
xor
iret
add
mov
stos
iret
inc
cmp
sbb
or
movs
sub
jmp
js
ret
adc
ror
jge
pusha
sbb
xlat
push
push
fwait
push
aam
test
add
add
div
xor
test
add
popf
fnstenv
std
dec
mov
cmp
mov
add
ins
cmp
enter
vpackssdw
into
xchg
out
mov
data16
jae
add
ja
pop
dec
movs
in
loope
or
xchg
xchg
pop
outs
repz
inc
xor
pop
jmp
leave
rol
pop
rol
jecxz
xchg
adc
cmp
sbb
sub
sbb
mov
adc
iret
mov
add
aas
inc
and
(bad)
xor
pop
test
or
add
je
sub
dec
mov
shl
push
cmps
push
xchg
add
mov
in
adc
outs
add
add
in
add
or
(bad)
sbb
dec
das
add
lock
pop
pop
std
sbb
mov
ss
cmp
add
mov
sub
mov
cmp
stos
lea
add
popf
outs
or
in
inc
stos
mov
and
pop
push
push
pop
xchg
add
add
and
add
jae
jbe
iret
lods
jp
int3
cmp
sbb
imul
adc
out
in
cld
cmp
cwde
add
les
pop
aaa
add
nop
cmps
(bad)
stos
rol
pop
push
add
daa
in
pop
ins
add
aaa
in
ret
movs
out
jmp
mov
in
std
pop
mov
add
std
jecxz
add
scas
adc
cmps
mov
add
dec
es
jp
(bad)
mov
fsub
add
lods
xchg
inc
xchg
inc
pop
fcomp
test
pushf
push
xor
mov
inc
add
dec
les
add
add
sub
add
mov
nop
fiadd
xor
add
arpl
push
xor
dec
fimul
jno
sbb
cmp
dec
xchg
add
pop
faddp
and
and
add
js
inc
and
add
in
mov
rol
test
push
jge
jne
test
cmp
pusha
add
call
dec
push
jp
dec
cmp
ss
push
(bad)
sbb
xchg
mov
add
adc
add
add
mov
add
ins
scas
add
fst
add
bnd
call
shl
retf
add
push
xchg
mov
mov
cmp
add
fdivr
inc
les
add
and
fisttp
xchg
mov
push
ins
add
(bad)
ds
popa
mov
push
push
retf
imul
push
inc
fst
inc
aas
xchg
push
add
(bad)
cmp
inc
xchg
test
clc
inc
ror
fs
sbb
push
jg
scas
mov
idiv
mov
(bad)
repz
rcl
lods
test
add
into
jp
jge
add
sbb
test
cmp
lods
sbb
add
add
test
push
add
not
xor
arpl
je
mov
dec
pop
add
in
mov
sahf
cmp
adc
sub
mov
add
jmp
out
pushw
mov
sti
add
scas
sub
xor
push
add
pop
lods
pop
add
mov
stc
add
push
add
add
adc
jno
(bad)
sub
aas
mov
(bad)
xor
popf
dec
(bad)
mov
cmc
and
sbb
scas
jmp
add
or
xor
retf
add
js
add
inc
bound
mov
pop
mov
add
test
ret
mov
sbb
and
xor
iret
out
dec
dec
hlt
ins
mov
add
popf
es
cmp
retf
ja
cdq
and
dec
imul
push
or
add
adc
dec
jb
stc
ins
sub
dec
add
retf
push
add
and
in
add
sbb
add
mov
jbe
repz
lds
add
inc
mov
jbe
cmps
test
and
popf
inc
div
data16
xchg
mov
into
mov
push
adc
lea
imul
xchg
add
mov
add
jmp
fnstsw
sahf
xchg
nop
pop
loop
addr16
cmp
pop
jp
dec
xchg
fadd
add
add
add
inc
xor
cwde
outs
add
scas
inc
test
cmps
mov
sub
cmp
add
je
arpl
aad
add
add
adc
cld
add
ficomp
mov
adc
add
dec
pop
jns
pop
xor
xor
ja
add
adc
xchg
sub
add
cmp
mov
add
adc
sbb
adc
or
add
cmp
add
pushf
add
into
cdq
add
add
cmps
sbb
pop
iret
mov
push
mov
add
push
movs
sub
inc
cmp
add
mov
add
loopne
loop
add
fstp
outs
inc
add
fld
xchg
stos
xchg
sbb
xchg
add
add
jecxz
movs
add
jns
icebp
inc
call
add
xchg
iret
push
repnz
sbb
push
xor
gs
add
ja
lods
mov
lods
push
pop
fcmove
and
sbb
cmp
add
rcr
mov
popf
push
hlt
daa
cmp
add
nop
clc
add
adc
nop
jne
add
push
and
and
aam
arpl
lds
add
scas
xor
add
dec
cmp
push
test
stos
add
xchg
add
mov
aam
fidivr
test
add
out
pushf
inc
mov
xchg
mov
add
rcl
add
add
lds
add
xchg
add
dec
xchg
add
add
add
xor
mov
sbb
lods
repnz
cmp
jg
outs
add
jecxz
cmp
dec
xor
cmp
add
pop
adc
add
(bad)
loope
sti
lea
adc
fbld
jno
cmp
out
stc
xchg
add
cdq
pop
add
iret
inc
push
xchg
movs
or
push
inc
lahf
ins
jne
inc
cmps
dec
call
add
adc
sub
fsubr
cdq
add
push
inc
test
(bad)
out
dec
pop
push
mov
test
push
mov
sbb
add
retf
sbb
out
push
cmp
add
outs
mov
add
arpl
sub
retf
out
add
dec
jno
sub
mov
imul
and
rol
xchg
adc
adc
xchg
scas
push
test
test
cmp
cmc
adc
outs
or
xlat
lahf
add
in
int3
mov
jle
add
add
mov
mov
and
add
mov
call
mov
dec
lock
shr
sbb
add
mov
sahf
mov
retf
xor
add
dec
cmps
je
rcl
and
add
jmp
sbb
sbb
add
icebp
add
sub
out
add
mov
sbb
mov
inc
jbe
add
test
mov
sbb
and
add
xchg
add
lods
or
pop
pop
iret
aas
gs
pushf
dec
sahf
stc
mov
xchg
jp
lock
fmul
add
push
sub
add
add
ss
fdivrp
add
fld
add
imul
sar
add
(bad)
sahf
mov
mov
inc
int3
sub
sbb
adc
pusha
lds
sub
inc
dec
cmp
mov
add
xchg
fimul
jl
sbb
scas
push
pop
add
mov
or
xor
sbb
mov
fdiv
and
addr16
cwde
popf
xchg
lds
jo
xor
mov
dec
clc
sub
adc
shr
popa
lock
add
imul
(bad)
sahf
outs
arpl
jmp
or
push
(bad)
xor
loope
hlt
loope
sti
imul
mov
push
popf
inc
push
and
add
add
das
cs
ret
movs
fist
add
add
cwde
add
mov
aam
lods
aam
lods
bound
daa
or
add
cmp
xlat
jmp
hlt
jbe
dec
mov
dec
test
xchg
add
sub
adc
lods
jl
data16
test
daa
inc
in
add
loope
adc
push
add
jecxz
retf
sub
add
xor
cmc
rol
add
test
cmp
in
inc
clc
jo
add
data16
call
adc
arpl
add
(bad)
jmp
add
int
jmp
push
jge
adc
daa
test
daa
add
or
add
add
shl
add
mov
adc
pop
sar
fist
jbe
mov
add
rcl
aam
push
push
leave
in
sub
dec
nop
push
jmp
add
mov
add
pusha
dec
sbb
xchg
ret
fcom
test
mov
mov
rol
lock
add
es
(bad)
add
xchg
sahf
in
jle
xchg
add
(bad)
xchg
imul
dec
or
mov
(bad)
dec
in
not
lods
dec
cld
inc
xchg
add
inc
add
cdq
dec
add
pmulhuw
inc
and
mov
cmp
add
into
out
rol
xchg
lock
scas
out
movs
push
fld
into
fs
add
sbb
dec
leave
scas
in
cdq
call
fisttp
and
and
sub
loop
xor
loop
adc
mov
test
and
pop
xor
int3
add
and
add
add
dec
cmps
mov
xor
mov
movs
das
add
mov
vaddpd
or
inc
cmp
pusha
mov
das
mov
jbe
add
aas
dec
inc
xor
add
pop
ret
dec
inc
add
or
add
sbb
sub
stc
push
xchg
pop
ss
push
mov
jb
sti
add
add
jg
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
and
add
fadd
add
ret
mov
mov
mov
ret
mov
push
mov
add
mov
mov
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
ret
nop
push
mov
add
call
call
mov
mov
mov
dec
call
sub
add
and
call
add
mov
mov
mov
lea
and
call
inc
mov
mov
add
mov
cmp
je
mov
mov
mov
mov
pop
ret
nop
cmp
jne
mov
test
inc
add
xor
mov
mov
mov
cmp
je
call
inc
mov
mov
add
mov
mov
test
je
mov
mov
jmp
mov
inc
add
adc
add
and
mov
jmp
ret
