add
inc
gs
outs
arpl
gs
outs
outs
inc
add
add
outs
fs
gs
jne
arpl
js
add
add
je
js
je
outs
fs
jb
arpl
jae
add
push
popa
imul
je
jo
gs
bound
arpl
add
push
imul
ins
ins
outs
arpl
add
add
inc
ins
outs
fs
jne
arpl
add
push
gs
ins
popa
jae
dec
outs
outs
addr16
add
add
fs
jne
jae
jb
jb
ins
inc
imul
gs
outs
arpl
add
add
je
outs
arpl
add
add
je
arpl
gs
imul
add
jbe
ins
imul
je
add
push
push
popa
jb
inc
ins
popa
jae
add
add
imul
imul
jae
inc
outs
jne
inc
gs
je
jb
jae
add
add
(bad)
int3
adc
outs
pop
xchg
stc
scas
push
adc
out
sub
mov
jl
mov
jle
(bad)
into
cmp
mov
ret
jbe
ss
ficomp
js
dec
mov
fiadd
aad
xchg
or
mov
push
rcl
ret
iret
in
jmp
out
jmp
mov
add
cld
xchg
mov
add
pop
xor
sti
lea
add
add
add
jnp
push
push
and
xchg
movs
push
in
ret
mov
test
dec
int3
mov
pop
pop
call
(bad)
inc
jbe
test
push
push
adc
ins
lods
sub
pop
sub
or
mov
retf
into
push
inc
push
cs
lods
add
add
retf
pop
pop
cli
fcmovnu
mov
es
in
xor
mov
pushf
add
and
push
mov
fist
sbb
cmc
popa
xor
(bad)
scas
loopne
mov
retf
jmp
sub
pop
cmps
xchg
push
cmp
push
dec
inc
aam
xor
cmp
add
add
sub
pusha
ss
push
inc
inc
bound
mov
xor
jbe
push
pop
pop
(bad)
int
ds
or
pop
aad
cdq
dec
xchg
push
adc
sbb
add
not
js
mov
add
push
sub
(bad)
adc
inc
adc
xchg
iret
imul
adc
fld
stos
rcl
into
xor
jo
sti
and
and
push
inc
jo
fucomp
mov
cli
adc
fild
add
add
ffreep
fwait
bound
mov
mov
outs
xor
xchg
sub
xchg
mov
add
fwait
xchg
sahf
enter
xor
aas
in
cmp
mov
inc
cmc
pop
sub
std
(bad)
sub
mov
fist
aad
fcom
mov
xchg
push
fadd
aam
xlat
jmp
xchg
mov
inc
mov
stos
sbb
ficomp
jmp
xchg
cmp
and
bswap
(bad)
mov
pop
dec
xor
aas
xchg
mov
pop
mov
and
cmp
push
mov
cli
out
push
popf
(bad)
fmul
fwait
inc
gs
loope
mov
bound
push
mov
add
add
enter
or
pushf
push
std
add
add
add
add
rcr
dec
jecxz
sbb
out
adc
mov
sbb
sar
sahf
jle
dec
inc
jb
pop
or
mov
rcr
rcl
loopne
inc
sbb
mov
jns
rcr
das
fwait
cmp
or
mov
add
add
loop
jle
lods
scas
mov
mov
jmp
xchg
cli
push
clc
xchg
push
fiadd
pusha
jp
test
in
or
xchg
mov
adc
or
popf
popf
jo
pop
add
push
popf
xchg
div
test
cmp
addr16
jb
or
test
and
aas
mov
mov
jbe
sbb
push
fcmovne
pop
aad
scas
push
push
and
jge
iret
(bad)
ins
loop
call
out
sar
das
inc
lock
(bad)
mov
mov
sbb
aad
or
add
inc
dec
xchg
sub
arpl
jg
cmp
and
jecxz
pop
bound
mov
xchg
push
fstp
add
and
icebp
mov
push
pop
and
push
dec
stc
fimul
loop
and
add
add
xchg
cmp
jae
outs
adc
movs
push
add
ret
mov
push
push
mov
scas
(bad)
sub
add
add
out
dec
movs
imul
xor
fadd
xchg
dec
push
es
inc
jg
cmp
stc
xor
dec
hlt
test
shl
lea
fwait
sub
jo
daa
aad
mov
add
xchg
sar
rcl
mov
movs
loop
inc
sbb
mov
mov
mov
lock
imul
enter
add
xchg
mov
sahf
outs
outs
pop
dec
jbe
mov
add
add
mov
cld
leave
dec
push
fs
sbb
das
les
xchg
xchg
mov
push
iret
xchg
test
inc
and
pop
push
fs
dec
push
inc
add
xor
add
add
lock
call
dec
lds
pop
xchg
sub
retf
jne
fnclex
mov
push
mov
ss
jo
clc
pop
rcr
sbb
lock
and
inc
mov
repz
adc
dec
xchg
push
into
fwait
adc
pop
and
test
ret
mov
jecxz
or
aam
jbe
mov
sar
out
fadd
jae
or
adc
call
rcl
xchg
lea
ss
sub
loop
mov
scas
jmp
js
int
test
in
in
cmps
pushf
stc
fcomip
sbb
xchg
push
je
adc
jp
jge
ror
(bad)
retf
outs
loopne
in
sub
mov
inc
pushf
pop
and
repnz
add
push
mov
out
(bad)
in
ds
movs
push
xchg
sbb
js
loopne
and
mov
movs
jecxz
xor
outs
pushf
jno
pop
loopne
ret
push
mov
pop
xlat
adc
push
ret
sbb
mov
(bad)
pop
inc
rcl
jb
mov
into
loopne
adc
out
lods
xchg
ja
jmp
push
mov
inc
fistp
dec
call
cmp
add
js
dec
or
pop
adc
rcl
pop
xor
xor
stos
les
movs
call
sbb
es
in
sub
retf
dec
jae
adc
iret
xor
jmp
into
aas
mov
xor
cmp
mov
nop
ror
lods
fmul
hlt
data16
sbb
dec
sbb
daa
aas
inc
shl
sahf
imul
mov
(bad)
popa
sbb
jl
int
xlat
fadd
push
iret
js
pop
fnstcw
cmps
sub
fs
in
adc
js
cli
int3
and
test
jb
or
call
or
dec
ret
in
sub
je
test
ins
push
xchg
add
inc
dec
inc
aaa
dec
sbb
(bad)
and
or
gs
xchg
add
dec
stos
mov
mov
aam
arpl
(bad)
pop
xchg
in
add
in
add
add
int3
adc
pop
loop
(bad)
cmp
add
adc
jmp
into
pop
push
dec
mov
mov
adc
adc
retf
or
mov
mov
leave
lods
cwde
xlat
xchg
arpl
retf
cmp
repz
mov
push
test
inc
xlat
mov
and
cmp
mov
pusha
push
movs
dec
adc
movs
sub
daa
inc
or
dec
dec
inc
cwde
je
ss
pmullw
nop
div
sbb
pushf
movs
xchg
or
outs
xor
test
mov
add
add
mov
imul
imul
sub
aam
push
pop
ret
add
stos
inc
add
(bad)
fsubr
fisubr
dec
fldl2t
mov
add
add
push
xlat
adc
nop
iret
fs
stos
outs
arpl
push
(bad)
mov
aam
add
and
mov
inc
nop
fmul
pop
pop
pop
retf
retf
and
xchg
or
inc
sub
dec
scas
int3
push
fst
daa
sbb
and
loope
ror
cmps
and
popa
(bad)
icebp
jg
lock
mov
add
fisttp
dec
test
scas
xor
pusha
push
or
loope
xchg
and
mov
(bad)
and
mov
and
ss
(bad)
pop
pop
push
xchg
and
push
xchg
mov
(bad)
mov
stc
js
xchg
in
mov
dec
xor
xchg
iret
(bad)
cmp
sub
mov
or
mov
call
mov
ret
inc
inc
jg
in
movs
sahf
adc
fistp
xchg
(bad)
fbld
rcr
adc
ret
out
in
cli
loope
cmp
cmovae
cli
stos
retf
add
inc
dec
or
xor
add
add
movs
scas
stos
add
sub
mov
into
sub
sbb
or
es
mov
fwait
mov
xchg
and
nop
jp
movs
cmp
and
ja
fs
setg
lods
sub
push
or
ins
imul
push
inc
mov
xchg
push
ss
jl
les
aam
add
add
add
icebp
xchg
lea
jns
aas
cs
test
mov
mov
xchg
xchg
in
or
repz
fdecstp
imul
jp
into
mov
test
push
push
push
lods
push
add
sbb
add
imul
in
sbb
xchg
jbe
movs
fadd
cmp
mov
stc
adc
lahf
in
mov
pop
jecxz
out
mov
adc
lods
cmp
std
fild
jbe
sub
retf
bound
mov
fwait
sub
fwait
mov
rcl
in
mov
loope
jmp
add
ret
sbb
inc
sbb
add
(bad)
arpl
add
add
mov
pushf
sbb
jne
std
sbb
add
add
adc
in
jno
in
test
xchg
jmp
sbb
inc
aas
dec
cli
dec
mov
and
test
push
sbb
iret
jmp
out
ds
jb
inc
out
mov
popf
adc
test
dec
mov
jbe
push
mov
sbb
popa
out
retf
pushf
outs
inc
and
and
movs
dec
jp
fcom
mov
rcr
out
inc
sti
jecxz
ss
add
mov
scas
pop
int3
retf
sbb
and
sbb
fidivr
js
cdq
add
add
in
and
or
out
ret
xor
xor
leave
add
or
xor
inc
das
inc
adc
and
(bad)
fidivr
add
and
adc
fwait
daa
pop
jno
scas
mov
push
mov
sub
inc
pusha
or
or
cmp
cmp
inc
inc
gs
popa
cmp
push
dec
pop
sbb
pop
add
lods
jb
mov
cmp
or
mov
xchg
sub
adc
jl
jae
cmp
imul
add
jno
push
and
or
lods
iret
xchg
and
scas
pop
dec
inc
aas
jl
aas
xchg
adc
mov
scas
jb
jg
data16
mov
push
pop
push
push
push
cmp
adc
cmp
scas
jecxz
repz
inc
fwait
and
mov
pop
repz
mov
jecxz
mov
nop
(bad)
scas
and
sbb
leave
in
inc
iret
sbb
add
cmp
mov
jmp
cmp
cmp
push
cmp
test
push
mov
jmp
or
sbb
xchg
mov
fsubr
out
adc
imul
adc
push
enter
cmc
pop
ror
fadd
add
add
js
adc
inc
jae
dec
lods
mov
call
xchg
mov
sbb
call
int3
scas
mov
xlat
ja
fild
call
shl
bound
or
ret
sbb
pusha
in
(bad)
mov
loopne
fwait
jp
xchg
mov
add
add
mov
inc
aaa
sub
les
int
sbb
adc
add
popf
cwde
ss
sbb
retf
xchg
mov
je
inc
popf
jns
push
adc
out
cli
jae
and
xor
add
add
dec
cmps
fmulp
ficom
xor
xor
adc
or
bound
mov
pop
ins
adc
adc
sub
jno
add
add
fistp
pop
pop
mov
add
jg
jb
lahf
ins
add
mov
das
rcl
xchg
mov
sti
xor
jne
xchg
add
test
mov
ss
ret
mov
jo
popf
(bad)
repz
mov
xchg
mov
aam
int3
or
stc
fist
sbb
xchg
inc
fmul
dec
and
(bad)
stos
fst
push
pop
cmp
fsubp
jns
stos
in
push
pushf
xor
fidiv
hlt
push
add
ret
mov
add
mov
lods
fcmovne
cdq
cmp
dec
aas
xchg
xchg
ret
clc
outs
ss
adc
sbb
sysenter
popa
xchg
(bad)
inc
fmulp
sub
popa
dec
repz
in
(bad)
call
in
ins
push
(bad)
(bad)
jmp
iret
mov
outs
retf
inc
mov
jbe
cld
inc
mov
xchg
adc
add
add
out
scas
enter
in
stos
int3
es
cmp
mov
add
add
push
scas
lock
mov
fldln2
cmc
and
add
push
xchg
movs
jg
aad
pushf
push
mov
dec
ficomp
cli
xchg
jp
xchg
iret
fdivr
push
cwde
mov
dec
pusha
icebp
cmc
adc
sbb
repz
aad
add
add
and
mov
fs
pop
or
sub
jae
bound
xor
sub
cmp
lods
fsubr
add
mov
xchg
das
xchg
xchg
sbb
mov
xlat
xchg
enter
jge
cmp
add
inc
popf
daa
sar
retf
sub
retf
mov
add
(bad)
pop
xchg
sub
cmp
sub
jae
dec
fcom
push
pop
ds
sti
jno
shl
dec
nop
push
dec
retf
fcomp
ss
add
mov
dec
pushf
mov
cmp
pop
test
out
ret
popa
add
dec
les
add
push
inc
stos
and
cmc
push
inc
scas
lock
and
lods
into
retf
lahf
and
xor
and
adc
push
mov
fwait
dec
call
shl
les
xor
jecxz
outs
dec
and
adc
xchg
out
add
fiadd
dec
ins
bound
dec
sti
add
add
xor
lds
iret
nop
cmps
inc
mov
mov
jne
test
adc
lds
outs
jecxz
(bad)
pop
mov
leave
inc
pusha
std
dec
scas
aas
mov
inc
cdq
fild
jmp
add
add
sub
in
call
pop
stc
push
stos
stos
shl
(bad)
adc
add
add
jb
popa
mov
div
push
imul
sar
sbb
sbb
cli
adc
and
das
rol
test
and
lea
add
mov
cmp
add
scas
jb
mov
jbe
mov
lods
mov
cld
rol
ins
and
jecxz
add
add
inc
xchg
dec
inc
and
ficom
fxch
stos
outs
sub
add
fnstenv
add
add
cdq
jb
mov
cmp
jecxz
or
stc
cmp
mov
sti
fstp
aad
repz
inc
push
sbb
(bad)
lods
outs
xor
mov
jge
and
imul
ins
pop
jno
(bad)
pop
fisubr
xchg
jg
popa
or
sub
dec
add
ins
call
arpl
mov
xchg
jae
inc
repz
jle
cmp
fstp
inc
int3
imul
and
sbb
add
sbb
sub
and
(bad)
fsub
pop
aam
(bad)
pop
fsub
popf
pop
movs
fcmovb
or
idiv
test
push
iret
sub
clc
sub
les
mov
sub
xor
rcr
push
rol
add
jecxz
cld
mov
and
add
add
das
sub
add
outs
lahf
inc
iret
call
jnp
inc
mov
mov
div
cs
mov
mov
(bad)
jae
add
add
xchg
adc
mov
add
out
xchg
mov
imul
outs
test
mov
adc
mov
mov
add
add
and
add
jle
stos
ins
daa
mov
test
add
add
mov
aad
dec
jbe
add
add
fild
mov
jne
dec
ret
bound
(bad)
dec
jecxz
mov
add
ficomp
test
nop
pop
sub
pxor
in
push
xor
and
inc
mov
aad
dec
aam
add
add
test
adc
xchg
add
adc
data16
mov
pop
jno
mov
push
mov
mov
lahf
mov
mov
pop
fs
fnstcw
adc
sub
mov
loopne
adc
jbe
push
test
dec
out
cld
xchg
mov
cli
xchg
ror
out
cmp
(bad)
ror
sbb
mov
inc
sbb
fild
iret
arpl
popa
mov
mov
in
jp
mov
add
add
cmp
adc
out
pop
mov
add
in
inc
nop
or
gs
stc
and
cs
sub
jmp
dec
mov
inc
shr
sahf
sub
ss
pop
fisttp
mov
movs
adc
add
lock
into
sub
loopne
mov
adc
sbb
cmp
dec
cld
sbb
shl
popf
xor
push
shr
pop
cmp
jae
mov
pop
push
or
sbb
popf
(bad)
mov
cmps
test
push
test
popf
pusha
inc
jae
sbb
gs
(bad)
fdiv
int3
dec
xor
fild
loope
fsubr
fdivr
retf
rcl
pop
fadd
jae
inc
or
hlt
mov
rcr
pop
or
pop
scas
adc
icebp
xchg
test
cmp
scas
mov
sbb
mov
push
retf
aaa
rcr
push
call
mov
icebp
xchg
fadd
add
push
adc
call
out
cwde
adc
pop
daa
in
popa
scas
mov
cmp
fist
popf
or
add
add
cmp
mov
cmp
shl
add
add
popf
xchg
dec
out
test
ins
cdq
cli
popf
push
mov
xchg
lea
mov
cs
lds
das
mov
sub
add
add
(bad)
mov
sub
fld
inc
cmp
(bad)
pop
or
push
(bad)
stc
jo
xor
mov
inc
int
pop
test
cmps
add
das
cli
and
mov
xchg
cmp
mov
and
jnp
dec
outs
mov
adc
ficomp
jecxz
pushf
sbb
add
add
add
push
dec
mov
test
and
add
add
sub
cmp
xchg
rol
add
add
xor
lods
fsubp
sbb
and
sar
cdq
jle
or
(bad)
sti
add
adc
sti
cmp
xor
adc
stc
xor
mov
sar
ins
jg
data16
mov
dec
fwait
jno
movs
ficom
jge
push
mov
or
mov
push
pop
sub
xchg
addr16
aam
dec
add
cmp
pop
xor
inc
dec
sbb
cld
call
cld
test
xchg
push
mov
imul
or
or
fcomp
out
movs
mov
add
js
mov
cmp
sub
and
cmp
js
shl
mov
mov
mov
dec
dec
popa
mov
jp
scas
movs
jle
not
pusha
dec
div
push
(bad)
dec
scas
js
in
cli
or
sbb
pop
(bad)
into
(bad)
lock
ja
daa
push
lea
sahf
and
stos
sub
jno
sahf
jns
add
xchg
jae
ficom
inc
or
push
(bad)
ret
xor
push
inc
cwde
cmp
fdivr
dec
mov
dec
aad
or
jb
xchg
lods
pop
clc
out
(bad)
sub
cdq
cs
push
scas
rcl
daa
or
aaa
fstp
out
add
add
shl
lock
mov
loope
push
and
test
dec
cmp
dec
mov
out
out
add
add
fnstsw
iret
mov
lds
scas
outs
push
sbb
fs
popf
push
fimul
bnd
push
mov
enter
popf
jmp
mov
add
xchg
xchg
jae
ins
inc
mov
jl
jae
lea
push
or
mov
pop
ffreep
in
inc
stos
loope
pop
add
add
mov
or
sub
adc
or
sub
cli
(bad)
scas
mov
cwde
icebp
jae
ja
mov
ds
adc
std
retf
and
push
push
in
out
fist
mov
call
loopne
inc
cmps
sub
mov
aas
(bad)
pop
cmc
fisttp
ss
pushf
push
dec
cmps
pop
(bad)
shr
sbb
adc
les
sbb
inc
add
add
pop
sbb
dec
fbstp
mov
jge
into
xor
mov
cmp
mov
inc
add
repz
iret
push
mov
hlt
xchg
pop
sbb
or
in
ins
mov
jmp
gs
mov
sti
imul
xor
clc
fiadd
sub
or
je
jns
adc
mov
imul
sub
add
add
xor
stos
and
push
cmp
fdivr
adc
nop
xchg
leave
sbb
inc
cmps
out
push
ret
and
arpl
fldcw
out
dec
cmp
test
or
add
inc
adc
push
out
sub
add
rol
cdq
adc
cmc
mov
jl
mov
rol
mov
push
adc
sbb
lock
sbb
in
fdivrp
fcom
iret
ins
fdivr
sbb
add
sub
outs
nop
lahf
add
js
imul
in
(bad)
pop
pop
mov
pop
push
js
test
jo
cmps
mov
xor
xchg
cdq
mov
add
stc
fdivr
dec
push
cwde
dec
test
sbb
jne
les
imul
jb
ds
cdq
xlat
push
jl
jbe
push
(bad)
stc
inc
loopne
sbb
(bad)
in
mov
add
add
ins
adc
ret
(bad)
adc
jg
pop
outs
and
xchg
fbld
out
cmps
test
mov
rol
add
add
xor
retf
add
push
add
ins
retf
out
xchg
xchg
xlat
pop
dec
mov
jge
mov
test
push
pop
loop
cmps
dec
shl
ret
or
add
add
adc
sbb
jp
pop
iret
mov
daa
xor
pop
mov
xor
pusha
jbe
(bad)
(bad)
dec
add
fisub
movs
lds
adc
sahf
outs
jnp
inc
enter
sar
(bad)
daa
mov
jo
(bad)
mov
mov
jb
cmp
lahf
aam
sbb
add
add
icebp
add
add
add
dec
clc
ds
mov
push
push
mov
push
sub
adc
loope
hlt
pop
pop
ret
js
and
or
sar
ror
pop
add
jne
cmps
fild
add
add
cwde
ins
ret
xor
xchg
in
lock
ja
mov
js
jae
mov
stos
jg
or
lods
call
adc
mov
(bad)
xor
addr16
add
in
mov
pusha
jle
outs
ret
inc
adc
scas
or
adc
jmp
mov
icebp
fst
cmp
ins
iret
jae
in
out
aad
icebp
jae
ins
(bad)
xor
pop
fmul
or
jmp
ret
push
adc
xchg
out
add
lods
push
je
cmps
cmps
xchg
mov
ret
add
sti
aad
stc
mov
xchg
leave
aad
cmps
dec
or
daa
sti
mov
sbb
hlt
sbb
aam
mov
rol
add
add
mul
fild
pop
sbb
sub
dec
jns
push
imul
shl
repnz
loope
push
cmp
rcl
nop
fnstsw
add
add
sbb
fs
mov
ret
mov
les
icebp
icebp
ret
jo
es
xchg
sti
sahf
test
jge
inc
or
lods
in
xchg
ror
test
dec
inc
inc
shl
out
adc
int3
and
fidivr
mov
cmp
scas
xchg
dec
das
mov
lea
stos
cmp
mov
repnz
jg
add
add
enter
pop
dec
ret
aad
adc
shl
mov
adc
jns
dec
rcl
mov
xchg
mov
xchg
dec
daa
loopne
sbb
sub
adc
cmps
dec
fdivr
inc
xor
jno
shr
xor
jne
xchg
add
add
xor
dec
ror
jecxz
or
add
les
push
ds
lods
xchg
bound
and
sbb
and
push
mov
push
rcr
out
stos
stc
pop
cli
mov
movs
out
stos
pop
jecxz
adc
jb
cmp
add
mov
mov
adc
and
dec
mov
mul
push
icebp
sti
lds
jle
ret
add
add
repz
jb
out
retf
or
mov
pop
clc
adc
adc
je
jne
add
adc
mov
repnz
jl
jae
out
pop
fdivr
add
add
mov
pusha
pop
mov
(bad)
int
sub
cli
mov
mov
pop
add
add
add
dec
(bad)
cmc
test
add
pusha
mov
ins
test
test
jmp
ret
shl
cmps
test
loope
outs
fld
jb
dec
retf
ins
inc
repnz
movs
mov
cmp
das
and
repz
stc
(bad)
pop
(bad)
enter
popf
add
xchg
scas
ret
imul
adc
retf
movs
xchg
push
out
xor
jge
(bad)
mov
add
pop
ja
sahf
mov
pop
xchg
sub
neg
sar
call
mov
stc
scas
pop
icebp
mov
test
inc
pop
das
imul
sub
mov
lods
and
outs
pop
xor
add
add
icebp
fidivr
repz
mov
leave
in
lahf
mov
lahf
sbb
mov
push
jbe
cmc
lods
es
sbb
outs
idiv
mov
icebp
loop
sub
xchg
mov
sub
jae
push
dec
out
outs
dec
xchg
dec
jmp
jno
sub
(bad)
repz
pop
sti
ret
nop
mov
mov
mov
js
adc
cmps
xchg
or
xchg
or
mov
js
pop
shl
xor
in
ror
add
add
jo
add
add
aam
or
push
imul
inc
es
addr16
push
in
sbb
je
imul
arpl
inc
adc
sbb
xchg
add
add
out
and
push
(bad)
fimul
jl
sahf
inc
aam
mov
push
ds
aas
fwait
jmp
int3
or
cwde
dec
and
scas
not
xor
mov
out
pop
scas
das
les
stos
jne
(bad)
xor
aad
or
test
adc
mov
(bad)
xor
inc
xor
mov
addr16
push
ss
push
je
popf
or
scas
std
retf
add
scas
jle
push
pusha
adc
into
pop
ins
adc
imul
xchg
(bad)
call
pop
nop
jno
xor
or
lods
ins
mov
lea
jae
jmp
mov
aas
fdivr
add
push
xchg
inc
add
adc
or
test
sbb
cmp
adc
push
ja
stos
mov
or
adc
adc
iret
retf
(bad)
xchg
mov
int
lods
jmp
movs
xchg
lea
mov
xchg
push
ficom
sub
xlat
leave
(bad)
mov
and
push
retf
pop
outs
mov
out
sahf
scas
and
mov
adc
pusha
inc
out
pop
xlat
adc
mov
sub
xlat
push
sbb
in
sbb
fisttp
js
sbb
mov
add
cld
imul
jmp
fld
adc
movs
not
fisttp
retf
mov
into
outs
loopne
retf
xchg
lods
xchg
jbe
in
push
add
jb
iret
inc
pusha
sbb
and
jecxz
mov
xchg
out
fs
xchg
mov
dec
shr
ret
std
ficomp
ins
cmp
out
push
ja
inc
dec
(bad)
mov
test
and
mov
rcr
add
int
imul
pop
mov
jmp
mov
div
inc
or
jb
mov
dec
std
jns
mov
lds
test
adc
mov
aas
inc
xor
mov
fdiv
mov
mov
jns
pusha
xor
push
outs
in
iret
mov
movs
cmp
add
rol
xchg
cmp
push
pusha
call
shl
sbb
dec
test
ss
ja
mov
shl
in
mov
add
js
push
and
mov
(bad)
or
std
mov
jmp
les
add
add
push
jmp
push
jne
shl
cmps
test
xchg
pop
loopne
push
or
aas
xor
neg
inc
enter
out
dec
ror
dec
movs
jp
out
pop
ja
je
mov
mov
mov
and
add
add
add
add
add
cmp
or
add
add
and
ret
inc
inc
xchg
fisub
lahf
xchg
xor
(bad)
fst
popa
xchg
jae
or
adc
pop
add
mov
in
je
adc
mov
pop
cmp
sbb
fistp
popa
push
mov
enter
retf
mov
in
xor
cli
inc
xchg
xlat
loopne
mov
pusha
dec
mul
sbb
add
add
mov
rcl
xchg
leave
sub
push
dec
stos
push
shr
leave
add
pop
add
sar
dec
sbb
add
add
sbb
mov
shr
xor
jo
sbb
repz
inc
xchg
and
add
sbb
xchg
mov
stc
mov
mov
in
ror
fisubr
mov
dec
aas
mov
cld
daa
dec
fcomp
add
add
outs
inc
outs
xchg
in
scas
jle
jp
pop
jno
mov
push
dec
push
icebp
out
(bad)
sbb
mov
jo
lock
(bad)
div
xchg
lods
outs
pop
inc
fwait
pop
adc
test
xor
add
add
rol
add
add
(bad)
sub
jecxz
jns
mov
sbb
pushf
sbb
je
jle
cmp
cli
xchg
out
cwde
jl
sub
pop
inc
mov
popf
jmp
pusha
imul
jl
lods
jmp
scas
jo
gs
lods
jns
scas
xor
mov
in
lds
dec
xlat
imul
inc
mov
sub
std
inc
jmp
add
adc
pop
jg
bound
add
add
(bad)
mov
sub
mov
xchg
xor
outs
jbe
push
loope
xor
pop
dec
push
aad
ins
mul
and
enter
xchg
imul
cs
cli
in
mov
add
sbb
add
ja
add
add
mov
outs
iret
int3
mov
sahf
mov
xchg
sub
loop
mov
fnstcw
xchg
jmp
pushf
(bad)
xor
mov
aad
cmp
dec
jnp
or
ror
pop
enter
inc
ins
ds
push
pop
call
fmul
test
mov
mov
(bad)
adc
push
cwde
or
xor
jge
ficomp
ds
pop
data16
add
mov
add
sbb
and
cwde
push
mov
mov
cs
into
int3
cmp
icebp
pop
and
cvtps2pi
lahf
pop
(bad)
cmc
fild
jb
cs
scas
adc
mov
pop
daa
shl
inc
sub
fdiv
dec
mov
loope
dec
push
ins
adc
mov
imul
aam
inc
fdivr
leave
push
iret
and
pop
fdivr
jno
iret
add
shl
and
call
aad
aam
ret
neg
mov
mov
fwait
sti
(bad)
in
or
dec
add
ss
aas
add
loop
dec
movs
jae
xor
pop
push
(bad)
xor
push
out
fiadd
fisttp
mov
dec
lods
mov
fist
aam
and
adc
mov
ja
or
sbb
xor
add
dec
push
xchg
mov
fidiv
inc
mov
add
add
pushf
dec
in
cmp
sbb
add
pop
dec
ror
dec
repz
sub
inc
out
add
(bad)
cmp
xchg
xor
push
mov
pop
pop
loopne
sub
push
mov
shr
push
int
(bad)
ret
jbe
and
dec
dec
or
adc
inc
mov
and
pop
push
rol
scas
lock
adc
or
cli
sbb
adc
pushf
inc
(bad)
push
lock
mov
mov
adc
jg
dec
fmul
es
mov
rcl
add
add
mov
sub
adc
add
add
aas
xchg
shl
movs
pop
inc
sbb
test
mov
push
mov
fnstcw
push
or
outs
(bad)
push
dec
sbb
and
pushf
cmp
lahf
and
add
lds
add
jb
push
clc
(bad)
xor
xchg
not
inc
popf
lods
out
cmp
(bad)
and
es
pop
cs
jmp
pop
sbb
push
cmc
adc
rol
add
add
call
add
add
hlt
dec
or
xchg
dec
sar
xchg
push
dec
jns
sub
loopne
enter
push
mov
neg
fistp
push
jp
push
cmp
xor
push
mov
inc
fst
jecxz
(bad)
(bad)
repnz
dec
jge
rol
jbe
dec
push
test
enter
xchg
xchg
and
jl
cdq
ret
adc
clc
push
xor
icebp
xchg
sar
jmp
add
add
push
call
cld
popa
fsub
std
cmp
add
inc
out
inc
aam
fiadd
aam
pop
xor
call
nop
and
push
in
add
pop
or
ficom
ins
mov
add
add
data16
pop
jbe
push
outs
stos
ds
push
jge
push
xor
inc
jecxz
mov
xacquire
xchg
or
pop
outs
les
push
jge
push
mov
or
jp
mov
je
mov
xlat
mov
xlat
lahf
dec
pop
not
jno
pusha
js
lock
test
sub
or
(bad)
and
js
push
pop
mov
jb
mov
mov
add
gs
aam
adc
jne
push
test
fucomip
loop
adc
icebp
mov
aaa
ins
jo
dec
nop
scas
lods
pop
add
xchg
rcr
inc
cmp
and
inc
ins
pop
icebp
frstor
sahf
pop
jl
stos
es
xchg
aas
mov
dec
rcr
jno
pop
inc
xor
mov
adc
pop
hlt
pop
add
add
call
jne
ja
cmc
bound
adc
into
jmp
repz
jg
add
pop
jne
popf
push
outs
mov
(bad)
ror
cs
ins
mov
arpl
and
push
pop
fcomp
dec
add
xchg
pop
xchg
cmp
adc
(bad)
aaa
cmp
or
ins
call
repnz
call
inc
xchg
test
aad
imul
mov
dec
sub
push
sti
inc
cs
pop
add
add
add
push
adc
leave
push
fsub
inc
mov
jae
mov
mov
pop
sbb
sub
sbb
add
add
or
scas
xchg
call
add
add
push
xor
clc
in
repnz
arpl
cld
scas
sub
stos
jge
mov
sbb
loop
stos
pop
mov
cmp
ret
inc
xor
push
mov
xchg
test
push
add
add
add
pop
mov
dec
pop
lahf
rcl
outs
cmp
out
test
icebp
fcmove
pop
mov
enter
lock
or
add
pop
dec
mov
ret
cmp
adc
data16
add
add
jg
bound
jb
push
jns
stc
mov
cmps
pop
or
push
add
add
add
jo
imul
jecxz
mov
jnp
adc
dec
sub
pop
cmp
int3
jg
sti
sub
sub
call
test
jg
jle
xchg
(bad)
repz
push
sub
pop
mov
(bad)
mov
jge
pusha
pop
sub
sbb
or
add
add
loope
(bad)
cmp
cdq
pusha
ss
call
inc
add
jne
mov
vpor
popa
xchg
mov
mov
add
add
or
push
lods
pop
jmp
and
xchg
jno
mov
push
adc
add
and
cmps
rcr
jg
aam
push
mov
call
and
jmp
lods
aam
fdivrp
retf
and
jl
mov
imul
into
ss
cmp
push
std
cmp
fwait
out
add
add
call
fild
dec
jne
sub
xchg
daa
push
push
push
test
rcr
mov
adc
pop
sub
(bad)
mov
adc
retf
xor
push
lds
cmps
stos
cmp
push
imul
jmp
dec
cwde
js
mov
inc
dec
sbb
pop
ins
cdq
and
mov
xor
or
fmul
loope
int
mov
dec
stos
(bad)
cld
rol
add
add
ins
xchg
inc
mov
int
fld
popf
push
loope
faddp
mov
scas
out
iret
pop
test
daa
out
mul
(bad)
jmp
lds
or
pop
dec
adc
cmps
jg
adc
add
add
(bad)
pop
or
xchg
es
push
in
pop
aad
inc
xor
jle
(bad)
out
sti
shl
cmps
movs
ja
add
add
add
add
addr16
add
push
push
mov
popf
in
mov
or
or
dec
ja
fnsave
jmp
jmp
jb
in
xor
mov
mov
mov
int3
add
adc
push
int3
cwde
sar
retf
sub
inc
lods
in
cmp
cmp
or
xor
dec
and
xor
add
mov
pop
jne
xchg
jecxz
mov
imul
adc
xlat
and
mov
sbb
imul
xchg
arpl
mov
adc
(bad)
call
sbb
or
inc
loopne
int
aas
pop
xchg
shl
out
jmp
mov
test
adc
stos
fmulp
mov
sub
jb
pop
dec
pop
pop
pop
push
inc
mov
es
dec
mov
scas
cmp
jge
add
inc
jg
jno
mov
xor
hlt
addr16
add
ins
inc
fwait
ss
(bad)
cwde
lds
add
add
xchg
ror
sub
ret
movs
or
mov
ins
mov
into
fbld
add
add
add
daa
mov
fisttp
stos
sub
sbb
pop
cli
push
loope
sti
push
std
dec
cwde
xor
xor
adc
xor
mov
mov
or
lds
scas
push
cld
sti
stos
jne
es
cmp
sub
dec
cwde
paddsb
push
sbb
mov
xchg
xchg
sti
jae
sub
jp
dec
ficom
jge
jle
push
movs
loope
adc
mov
xchg
xor
unpcklps
iret
add
sub
cmps
cmc
sbb
add
add
outs
gs
inc
shr
lods
and
test
add
or
and
cli
adc
mov
push
adc
imul
(bad)
outs
in
push
sbb
mov
xchg
mov
lods
shl
and
add
add
cmp
pop
mov
inc
(bad)
jae
leave
stos
jle
dec
imul
rol
stos
(bad)
lea
push
push
imul
aas
and
jnp
retf
adc
mov
int
mov
aas
jb
or
and
inc
out
pop
add
scas
retf
sub
icebp
daa
aaa
push
repnz
daa
jb
fadd
add
add
(bad)
fsub
fs
das
mov
add
add
jbe
int3
das
daa
pop
std
push
mov
int
loopne
and
xchg
sahf
retf
(bad)
pop
pop
inc
push
movs
popf
daa
out
sbb
cmc
mov
xchg
call
scas
icebp
xor
lahf
sbb
sub
out
and
inc
mov
sbb
xchg
jmp
jmp
mov
test
imul
xor
mov
jae
stos
mov
pop
(bad)
(bad)
ficom
dec
dec
out
test
imul
mov
jmp
xchg
mov
(bad)
int
nop
into
test
xchg
mov
ja
jns
xchg
cmp
jae
mov
mov
adc
adc
das
sahf
mov
(bad)
leave
sub
fs
mov
(bad)
sar
loope
dec
(bad)
fadd
add
add
inc
shl
add
sub
ins
xor
fadd
xchg
imul
dec
xor
mov
rcr
mov
in
icebp
mov
or
fiadd
pop
addr16
pop
dec
and
add
add
xor
clc
(bad)
(bad)
xor
les
fiadd
add
add
add
add
pop
cdq
loopne
icebp
js
jno
mov
adc
es
fld
mov
ins
pop
inc
cs
dec
xor
(bad)
in
and
cmp
add
adc
out
xor
ror
cs
fst
sub
jo
mov
adc
mov
stc
and
add
add
mov
add
add
inc
sub
xor
inc
and
add
jmp
mov
or
dec
inc
in
jge
repz
adc
scas
pop
sub
jb
call
into
xor
cmps
mov
mov
test
aas
ins
imul
(bad)
cmc
mov
jp
int
retf
adc
dec
movs
mov
push
pop
fs
mov
fs
enter
fst
push
scas
js
or
mov
mov
jmp
repnz
inc
or
xchg
into
pop
adc
inc
dec
sub
cmps
fadd
mov
xchg
ret
mov
add
add
pop
mov
and
jo
fisttp
adc
mov
std
push
stos
and
std
push
pushf
push
add
mov
add
aaa
lods
mov
push
jae
sub
cli
mov
pop
jg
je
add
add
inc
icebp
loopne
pop
or
sub
into
inc
in
sub
pop
clc
into
leave
scas
push
xlat
imul
jl
sbb
sar
jge
rcl
push
pop
push
test
dec
jg
cmps
mov
xor
nop
push
fs
sti
imul
add
add
dec
bound
test
(bad)
xor
lahf
(bad)
sub
lods
inc
retf
jbe
int3
sbb
mov
mov
repz
ret
mov
add
add
sub
jge
in
(bad)
inc
aas
jnp
dec
mov
or
dec
and
mov
add
add
inc
pushf
mov
add
mov
mov
xchg
inc
or
mov
call
add
mov
adc
push
rcr
add
and
xchg
mov
add
add
or
sbb
xor
lea
push
push
(bad)
mov
dec
xchg
fldcw
mov
cmp
mov
popa
inc
out
leave
adc
mov
dec
mov
xor
sbb
xchg
aaa
into
xchg
mov
adc
jmp
jne
rcr
dec
jge
mov
inc
js
and
add
dec
inc
int
mov
xor
fucomp
sub
cmps
adc
cmp
push
lea
push
xchg
cmp
(bad)
fucom
mov
and
mov
push
mov
into
or
lds
sub
lahf
add
cmps
clc
icebp
mov
jg
enter
out
jg
jb
add
add
lea
sub
push
mov
xchg
ins
ror
add
jle
stos
adc
add
outs
imul
fnsave
cmp
scas
retf
push
mov
mov
add
push
imul
cdq
add
cld
xlat
lahf
(bad)
mov
push
inc
adc
lahf
xchg
mov
dec
jb
inc
xchg
xchg
sbb
sar
mov
inc
cwde
or
mov
push
inc
not
clc
fs
ret
mov
add
ud0
inc
cmc
(bad)
cmp
dec
fcmove
outs
fwait
sub
xchg
fs
scas
dec
add
xchg
mov
cmps
lods
adc
mov
pop
arpl
xchg
push
push
pop
daa
jns
shr
sbb
(bad)
or
in
mov
(bad)
or
jns
xchg
xor
into
ds
adc
mov
adc
pop
mov
adc
sbb
test
arpl
push
add
data16
outs
imul
inc
dec
dec
ret
add
jns
xchg
addr16
cld
sub
(bad)
movs
loopne
daa
iret
or
rcr
(bad)
push
or
or
cmp
test
cmp
dec
fyl2x
xchg
pusha
mov
cmps
and
mov
enter
fs
add
add
js
call
std
dec
into
jo
xor
and
or
enter
fdiv
xor
call
jno
push
pop
lahf
imul
addr16
dec
pop
add
add
add
inc
sbb
add
pop
mov
in
sbb
movs
pop
iret
inc
add
mov
push
cmpps
jle
or
sahf
pop
cli
xchg
mov
jecxz
(bad)
and
pop
jle
jmp
cmc
fcmovnu
push
add
add
sub
fs
movs
les
ror
inc
sbb
mov
cmp
add
mov
(bad)
sti
ret
xchg
shr
mov
vrsqrtss
push
fmul
adc
and
loop
fcom
iret
xor
ins
cmps
call
frstor
jbe
add
aam
sub
push
xchg
enter
loope
add
jo
xchg
add
add
add
retf
inc
mov
(bad)
adc
test
push
cmp
sar
inc
test
add
add
add
jmp
adc
jmp
(bad)
push
(bad)
fwait
(bad)
(bad)
mov
iret
push
xchg
in
jl
es
(bad)
dec
push
and
pushf
dec
pop
dec
mov
cmc
xchg
xchg
ins
jp
mov
in
cmps
xor
cli
adc
mov
and
cmps
sbb
add
add
mov
cs
call
xor
mov
inc
je
fsub
cli
pusha
dec
add
push
mov
fcmovu
mov
inc
mov
add
mov
mov
inc
push
(bad)
jmp
cmp
movs
cmp
stos
ja
in
cmp
sbb
mul
add
add
out
cld
das
and
fnstcw
xor
mov
add
add
lods
outs
sbb
push
cmps
sbb
add
repz
daa
popf
in
jo
cmp
sub
loop
fld
in
imul
xchg
fwait
leave
mov
ror
in
stc
cmp
imul
mov
mov
popf
push
adc
shl
xchg
mov
retf
push
xchg
dec
inc
mov
mov
dec
inc
int3
dec
xchg
fcmovne
aam
sub
dec
cld
call
cmp
fidiv
sbb
add
add
gs
sbb
and
ret
icebp
sub
ja
cs
imul
mov
shl
dec
and
call
ins
inc
cs
xor
fcmovnb
sub
or
lock
xchg
aas
push
fnstcw
repz
repnz
mov
inc
push
mov
mov
dec
xlat
leave
popf
(bad)
jp
push
shl
test
mov
adc
in
(bad)
cmc
mov
mov
pop
repnz
pop
mov
add
add
fst
xchg
add
(bad)
push
and
gs
pop
adc
mov
sti
jo
jns
out
stc
push
retf
mov
add
jp
cmps
fst
add
add
xchg
retf
dec
dec
push
dec
mov
popa
jb
add
add
add
jmp
dec
mov
mov
xchg
je
enter
inc
cs
pop
sub
mov
sub
pop
test
popf
push
xchg
popf
ficom
adc
fs
push
xchg
mul
rcr
fs
sub
(bad)
mov
and
in
fiadd
mov
ror
push
adc
call
repz
or
mov
pop
sbb
xchg
(bad)
lock
in
leave
jb
(bad)
call
or
sbb
lods
sub
out
loopne
add
xor
test
fwait
jbe
pop
pop
ror
mov
(bad)
cmp
outs
cli
pop
jmp
xchg
test
xor
outs
loopne
fdivr
stc
push
lahf
out
xor
(bad)
cmp
push
push
cmp
sbb
(bad)
pop
jl
ret
add
(bad)
js
adc
xchg
jne
add
add
test
mov
dec
aad
mov
mov
push
jle
(bad)
push
enter
dec
aas
add
mov
cmp
into
nop
nop
in
adc
mov
add
je
outs
enter
(bad)
mov
loop
pop
loop
sbb
inc
and
pop
mov
pusha
outs
aam
inc
adc
pop
cmp
add
add
and
popf
xchg
xor
xor
fcmovu
js
or
pushf
inc
push
movs
xchg
bnd
fidiv
cs
push
lods
xor
icebp
xor
cdq
sub
and
mov
imul
mov
mov
out
mov
mov
and
add
add
cdq
leave
mov
inc
xchg
mov
lea
ss
mov
sub
(bad)
jmp
fwait
lds
aam
pop
lahf
lods
dec
sub
(bad)
push
jle
aam
loope
std
fwait
push
fsubr
pop
imul
xchg
jns
add
add
adc
xor
push
les
fisttp
cmp
add
or
push
mov
mov
out
adc
add
dec
push
mov
dec
xchg
sahf
xchg
mov
xchg
pop
sub
mov
cmps
scas
sahf
mov
push
adc
and
sahf
sbb
xchg
jmp
xlat
mov
cmp
mov
add
mov
add
sbb
icebp
fldenv
fcom
loope
xor
add
add
dec
int3
add
jmp
jmp
leave
mov
imul
add
test
pop
pop
cli
jbe
xlat
lea
scas
xchg
lds
cdq
mov
es
mov
stos
mov
xchg
inc
std
pop
mov
add
add
fxch
aad
call
inc
xor
fidiv
add
add
adc
cdq
(bad)
pop
adc
js
ret
add
mov
dec
xor
inc
push
xchg
mov
pop
push
mov
add
dec
arpl
dec
fist
pop
cld
enter
mov
jae
out
fld
add
sub
sub
mov
or
pop
xchg
push
neg
shl
ins
sbb
sbb
hlt
mov
aam
(bad)
mov
add
add
cdq
outs
mov
add
(bad)
xor
sub
dec
adc
and
std
jp
sahf
daa
jb
adc
aad
mov
call
jge
mov
add
add
xor
add
sub
sub
(bad)
std
xchg
in
cmp
not
psubq
xchg
jns
lds
push
std
mov
fdiv
sbb
sbb
shl
add
add
les
xchg
xchg
push
aas
xchg
dec
(bad)
mov
fld
xchg
dec
stos
sti
daa
pop
shr
or
xor
add
or
add
add
test
inc
xor
rcl
mul
imul
(bad)
sub
dec
dec
xor
add
cmp
pushf
sti
scas
jno
stos
scas
mov
mov
inc
and
push
loop
ja
in
inc
and
mov
leave
dec
call
loope
fcomip
inc
(bad)
popf
(bad)
hlt
(bad)
fimul
adc
adc
aad
adc
pop
push
into
pop
cdq
jle
dec
cmp
mov
add
add
adc
mov
sub
test
bnd
mov
scas
push
std
adc
les
push
pop
into
out
cmp
push
loope
fwait
or
push
sbb
loopne
jle
xchg
in
jbe
pop
mov
popf
ins
push
loopne
nop
cmp
xor
outs
and
sub
add
add
and
sub
add
jmp
sbb
sub
and
dec
scas
addr16
cs
mov
fnsave
scas
and
xchg
pop
and
in
sar
jmp
add
dec
jno
adc
jb
cmc
ins
(bad)
mov
adc
mov
popa
sub
fstp
add
(bad)
repnz
sub
xor
test
mov
test
rol
mov
or
repnz
(bad)
rol
mov
dec
ret
aam
nop
out
adc
pop
test
(bad)
sub
addr16
and
je
pop
push
outs
jle
test
addr16
popf
or
(bad)
shl
or
xlat
add
call
sbb
mov
lds
lds
cmp
repnz
pop
imul
scas
mov
add
mov
js
xor
(bad)
daa
int
mov
jo
add
xchg
sub
repz
sub
and
xor
std
xchg
jnp
shl
mov
enter
pop
add
sar
dec
mov
push
inc
mov
xor
gs
push
sbb
add
int3
add
(bad)
cmc
ds
xchg
ja
add
dec
push
cmp
cwde
xor
fucomip
rcr
fimul
mov
dec
or
mov
inc
sub
fdiv
pop
mov
xor
mov
retf
stos
xor
inc
jmp
je
and
inc
jno
test
cmp
shl
add
(bad)
add
add
outs
jo
jno
sub
adc
stos
cmp
jno
add
loop
fisttp
dec
sbb
mov
dec
push
pop
ror
aad
fbld
jge
or
fcomp
out
aam
fadd
add
add
in
pop
mov
cmp
imul
shr
add
out
test
push
push
jmp
lock
mov
mov
int
cli
stos
in
mov
aaa
pop
sbb
add
add
(bad)
and
std
in
jo
dec
shl
movs
sbb
in
lods
cld
and
add
jno
sub
mov
inc
aas
ja
leave
xchg
or
das
sub
dec
xchg
pushw
sub
xchg
lahf
xor
pop
mov
out
push
mov
int
jae
repz
xor
push
push
test
repz
inc
repnz
addr16
fild
popf
pop
cmp
inc
pushf
xor
add
sub
nop
dec
loopne
xchg
adc
sub
sub
es
out
sub
push
jge
add
add
add
ds
jnp
cmp
(bad)
jmp
mov
(bad)
mov
mov
inc
popf
jecxz
iret
cmp
mov
daa
shl
ja
xor
aam
lahf
and
push
jg
sub
mov
inc
test
std
adc
xchg
shl
out
pop
dec
inc
jge
add
jne
sub
(bad)
cmps
cmps
jl
das
pop
lods
rcl
adc
jnp
mov
outs
sbb
pusha
cdq
jl
mov
std
pop
fst
dec
mov
sub
cwde
inc
inc
ret
and
ss
in
and
rcl
jmp
push
pop
data16
jmp
leave
scas
iret
jnp
cwde
and
mov
call
add
add
pushf
fld
add
add
or
inc
cmp
mov
iret
fisttp
das
shr
mov
jae
mov
in
inc
jbe
mov
in
push
jne
jp
dec
mov
pminsw
retf
out
icebp
push
clc
or
addr16
push
push
add
loopne
or
jnp
dec
loop
lods
mov
cmp
loope
push
fnstcw
adc
inc
sub
lods
dec
cmp
mov
test
lock
add
jmp
inc
mov
mov
jp
icebp
(bad)
je
cmp
or
call
add
add
(bad)
jmp
(bad)
sub
pop
adc
out
and
push
sbb
mov
mov
and
das
add
inc
mov
mov
mov
std
xchg
fidiv
cli
adc
add
out
jae
cdq
fstp
pop
(bad)
jnp
lahf
or
sar
push
sbb
cwde
icebp
inc
addr16
cli
and
add
add
ficomp
fimul
jnp
push
push
mov
rcr
sbb
jno
or
lods
rcl
dec
aas
fiadd
add
add
mov
jo
lahf
sbb
jg
je
fcomp
es
dec
outs
inc
push
xchg
jmp
inc
dec
dec
cmp
fstp
inc
sti
or
add
add
and
mov
enter
retf
push
lods
test
cmp
mov
add
cdq
add
das
lea
and
pusha
sub
dec
cli
call
mov
mov
lds
pop
xchg
cmc
nop
ret
sbb
add
adc
retf
sbb
and
clc
xchg
repz
adc
stc
les
mov
or
(bad)
adc
pop
aad
call
test
(bad)
mov
jns
mov
sbb
jns
pusha
pop
cmp
push
lea
xlat
stos
(bad)
ins
mov
mov
dec
sub
mov
add
inc
dec
imul
adc
inc
int3
clc
push
cmps
push
pop
push
cli
sub
in
push
rol
add
retf
mov
jns
scas
int
push
rcl
push
xchg
xchg
cmp
cdq
imul
add
xor
dec
mov
sbb
popf
pushf
mov
stc
aad
mov
mov
aad
ds
inc
ins
shr
fadd
daa
call
or
adc
and
rcl
adc
add
lods
push
in
sbb
add
inc
xlat
mov
sub
dec
sbb
dec
stos
mov
xor
lock
pop
sub
add
leave
ss
inc
push
add
jge
jns
adc
push
add
push
jmp
test
cmp
jns
pop
out
xchg
outs
test
aas
xor
loop
push
xchg
sti
lahf
jns
sbb
or
test
push
or
add
add
mov
out
aas
hlt
mov
xchg
ins
out
sub
cmps
(bad)
outs
mov
cmps
pusha
xchg
sbb
cs
pusha
xor
add
retf
add
sti
sbb
lods
mov
test
adc
add
add
ja
jo
loope
fsub
popa
jnp
xchg
sbb
xor
mov
xor
pop
push
je
inc
mov
mov
cmp
or
lea
or
jmp
and
mov
ret
popf
mov
pusha
pop
arpl
mov
mov
push
push
jno
iret
and
mov
scas
int
data16
xchg
in
sbb
gs
gs
jmp
xchg
aaa
call
in
(bad)
int
sub
or
sbb
add
add
and
push
loopne
cmp
les
add
pop
dec
leave
scas
leave
cmps
cwde
mov
dec
ror
test
div
add
mov
sub
clc
(bad)
fdiv
imul
out
push
gs
push
and
jbe
sbb
and
jg
(bad)
push
jnp
adc
ins
sbb
(bad)
and
cmp
das
adc
outs
imul
sbb
adc
add
add
mov
and
in
mov
mov
jmp
xor
jae
test
out
test
jge
mov
xor
out
scas
jnp
mov
cmps
data16
add
int3
xchg
pop
push
(bad)
jnp
inc
stos
pop
and
mov
sti
sahf
or
mov
and
shl
sbb
dec
jns
jb
retf
fwait
mov
test
icebp
push
cmp
sub
fwait
mov
(bad)
pop
call
add
not
dec
push
pop
pusha
or
outs
fisubr
jns
repz
or
aaa
jmp
jl
stos
ins
jmp
xchg
retf
xchg
xlat
push
test
mov
shl
fdiv
and
popa
sbb
inc
xrelease
xchg
inc
inc
pushf
jecxz
push
daa
mov
add
jno
scas
sahf
pop
add
mov
push
ss
repnz
fiadd
mov
xchg
jecxz
scas
sub
or
or
iret
icebp
shl
add
inc
and
mov
iret
mov
add
add
(bad)
pop
movs
push
shr
mov
les
ins
into
sbb
xor
das
push
int
push
aad
repnz
movs
int
push
cs
les
sbb
pop
sti
pushf
inc
test
idiv
pop
adc
and
sbb
add
push
xor
rol
mov
call
fild
push
mov
jp
mov
stos
pop
daa
int3
and
dec
(bad)
retf
dec
jmp
mov
pop
jb
inc
jns
(bad)
mov
or
jp
leave
(bad)
out
imul
and
sar
mov
push
fiadd
in
jns
addr16
fmul
sub
sbb
add
add
add
add
pop
ja
xchg
push
mov
mov
push
loopne
cmp
xchg
sbb
fstp
xchg
jl
cmp
pop
(bad)
jb
jne
push
nop
or
jne
mov
add
add
mov
mov
dec
das
push
cmp
aas
mov
mov
mov
call
orps
or
xchg
cmp
ret
cwde
fdiv
sub
sbb
mov
loope
js
mov
xchg
and
mov
fs
push
inc
pop
and
pmulhuw
cmp
push
inc
ins
mov
pop
sti
(bad)
call
iret
and
jo
add
add
add
or
les
dec
inc
inc
fcomi
add
cmp
jl
push
not
push
ins
fld
cmp
cdq
sbb
movs
sar
mov
scas
ror
pcmpgtw
add
add
cmc
mov
mov
imul
add
sub
std
mov
nop
add
or
mov
dec
adc
adc
aam
or
mov
xchg
test
mov
lods
(bad)
jmp
mov
xor
in
iret
in
jmp
jbe
fstp
adc
mov
push
pop
mov
js
in
jbe
fs
adc
sub
jb
mov
fcomp
push
dec
cmc
stos
pop
jno
(bad)
and
inc
lahf
out
jno
add
popf
mov
jbe
inc
jno
dec
popa
lds
jo
ret
sti
pop
cmp
dec
mov
xor
push
data16
jbe
int3
stos
call
pusha
and
iret
pop
or
mov
mov
lahf
jnp
sbb
push
jnp
adc
int
call
(bad)
pop
and
stc
push
jne
adc
cmc
sub
rol
jmp
push
stos
pushf
aas
out
inc
mov
std
lea
mov
test
jbe
lea
push
dec
push
xor
xor
pop
xor
add
mov
movzx
add
add
and
mov
mov
push
mov
mov
lea
mov
pop
add
movzx
sub
movzx
xor
inc
add
mov
sub
inc
pop
dec
jne
mov
lea
dec
pop
sub
pop
pop
sub
inc
pop
jmp
push
push
push
push
push
call
sub
jne
pop
ret
push
push
push
push
push
push
add
xor
xor
sub
push
xor
push
push
push
lea
mov
mov
call
add
ret
push
push
mov
inc
je
dec
mov
mov
mov
lea
cmp
jne
xor
sub
add
mov
sub
lea
add
jmp
push
add
mov
test
je
movs
dec
jne
lea
pop
jmp
pop
add
sub
mov
add
inc
add
mov
dec
jne
lea
pop
xor
pop
ret
push
mov
push
mov
add
mov
test
je
mov
xor
mov
add
push
lea
movsx
sub
mov
add
inc
dec
je
mov
inc
pop
lea
inc
add
jmp
pop
pop
pop
ret
ret
ret
pop
pop
jmp
inc
jmp
sub
push
add
xor
mov
push
add
add
dec
lea
push
push
push
push
call
push
mov
xor
and
lea
mov
sub
or
mov
add
test
je
lea
mov
mov
push
dec
push
push
push
sub
push
call
add
pop
pop
add
add
jmp
sub
pop
pop
jmp
jmp
jmp
jmp
jmp
call
jmp
sub
mov
mov
mov
lea
dec
mov
mov
sub
xor
push
mov
add
add
pop
add
cmp
jne
push
lea
mov
push
push
xor
xor
xor
push
xor
mov
mov
movzx
sub
add
add
sub
movzx
inc
mov
cmp
jb
xor
add
mov
imul
sub
mov
inc
inc
mov
dec
mov
lea
cmp
jb
dec
xor
add
imul
mov
xor
lea
xor
pop
add
test
jbe
sub
push
sub
inc
sub
lea
pop
add
push
and
mov
add
movzx
add
and
add
mov
mov
mov
sub
pop
dec
mov
nop
jne
lea
mov
add
add
dec
sub
mov
jmp
push
pop
push
push
pop
dec
jmp
push
lea
add
inc
add
sub
lea
add
inc
sub
add
pop
call
lea
push
add
add
call
pop
xor
add
inc
add
add
pop
lea
pop
pop
or
pop
pop
pop
push
push
push
push
pop
mov
ret
push
push
push
sub
push
push
mov
add
push
sub
call
call
push
lea
add
sub
dec
sub
pop
jmp
push
lea
sub
call
add
xor
sub
lea
add
add
add
add
push
lea
push
sub
push
dec
dec
mov
lea
call
add
inc
sub
xor
add
add
lea
inc
test
jne
jmp
