sbb
add
mov
fs
jae
add
xchg
fldcw
jg
test
sbb
push
adc
dec
xchg
adc
cmp
scas
xor
bound
imul
adc
movs
and
retf
xchg
mov
fcmove
das
push
push
add
ins
add
imul
dec
out
dec
inc
pusha
in
movs
cmp
pop
mov
in
in
je
not
sub
jmp
mov
imul
and
out
pop
xchg
mov
jge
out
ins
js
iret
pop
xor
in
push
outs
imul
shl
mov
scas
xor
stos
sbb
inc
ret
fmul
adc
daa
add
sub
gs
fmul
mov
ss
js
xor
in
sub
jbe
add
leave
jb
pop
xchg
in
inc
add
(bad)
iret
mov
mov
retf
xor
xor
retf
fisubr
shl
push
xor
or
mov
fadd
iret
in
imul
pop
push
divps
push
fwait
shl
adc
pop
mov
pop
stos
mov
pop
in
ins
fldcw
ins
mov
stos
jb
cmc
out
mov
pop
nop
inc
pop
pop
test
dec
nop
sbb
js
pop
in
jge
in
mov
rol
mov
sbb
popa
add
add
sar
dec
adc
adc
sti
popf
cdq
push
rol
sub
call
jo
std
fwait
xor
js
sub
and
xchg
jns
cld
sbb
and
push
add
pop
xor
cld
inc
fwait
imul
test
push
loopne
imul
pushf
clc
cmp
xchg
call
xor
mov
mov
xchg
lods
add
xor
retf
push
sbb
lahf
neg
and
mov
loope
xchg
ret
cmp
ret
rcl
outs
mov
inc
adc
stos
fst
enter
cdq
jo
jecxz
cmp
cmp
fimul
push
sahf
cmp
xor
jns
cmp
mov
xor
bound
ret
inc
cmps
icebp
push
sub
dec
push
lea
(bad)
test
mov
sub
aaa
mov
add
and
mov
ret
pushf
mov
xchg
mov
fimul
pop
lahf
pop
inc
and
jb
pop
push
aad
scas
call
xchg
and
cmp
lahf
out
test
popf
push
push
push
enter
mov
mov
in
fisttp
out
jbe
(bad)
pop
cdq
cmp
jo
loope
jae
ins
push
adc
xchg
(bad)
xchg
add
jns
(bad)
idiv
(bad)
and
jbe
pop
or
mov
or
shl
mov
aaa
les
and
mov
sar
pop
mov
adc
xor
jo
out
push
jecxz
xchg
das
and
jns
aas
in
push
std
fsubp
test
(bad)
push
arpl
jg
and
enter
test
out
jo
push
out
add
xchg
add
and
mov
rol
pop
ficom
push
rcr
mov
jl
dec
leave
imul
jp
push
shl
ins
mov
loopne
push
scas
xor
pop
jbe
xor
push
fwait
test
stos
arpl
sbb
and
data16
out
sub
sub
sub
adc
xchg
jmp
int
fiadd
or
xor
add
es
cmp
fistp
mov
mov
xchg
lods
cmps
sbb
lock
mov
dec
jmp
or
pop
jnp
jbe
iret
xor
les
push
xor
mov
and
pop
jmp
cdq
out
imul
jp
ficom
js
cmp
dec
stc
or
and
sub
jne
pusha
sbb
outs
mov
dec
sub
add
out
aas
leave
fisubr
jmp
cmp
mov
xor
pop
cmp
dec
push
addr16
(bad)
ds
repnz
jb
xlat
stc
stos
add
sub
pusha
pop
jle
xchg
rcl
ror
cmps
js
stc
adc
jl
aad
push
(bad)
xchg
mov
aam
jl
cmp
xor
repnz
xchg
xor
mov
stc
loopne
sub
and
rcl
mov
dec
jns
xor
push
mov
adc
call
out
pop
push
ss
mov
scas
fiadd
jg
sbb
je
add
mov
mov
sbb
add
movs
ret
repz
mov
popa
jmp
adc
outs
xchg
push
cmps
(bad)
arpl
cmc
mov
mov
int
das
cwde
(bad)
sbb
stos
stos
adc
mov
mov
sbb
cmps
xchg
push
in
in
mov
movs
test
test
shl
lods
test
jnp
push
aaa
or
mov
mov
push
call
and
std
and
cld
fcom
pop
or
aaa
jmp
adc
popa
adc
dec
jne
adc
fild
bound
aas
stc
out
popa
mov
leave
adc
into
mov
daa
in
sar
mov
aad
push
add
sbb
sbb
test
adc
mov
push
adc
mov
cmp
sub
xchg
std
sbb
add
xor
scas
cdq
pop
xor
mov
fsub
call
cdq
xchg
or
mov
out
mov
inc
rcl
cdq
nop
sub
mov
(bad)
gs
scas
xchg
push
sbb
adc
mov
movs
xchg
retf
inc
loop
dec
retf
mov
sbb
push
mov
sbb
sbb
repz
(bad)
call
xor
clc
stos
and
push
inc
dec
mov
not
scas
outs
lods
arpl
inc
lea
lds
sub
inc
das
and
dec
jne
fchs
sub
pusha
xlat
outs
lds
loope
movs
(bad)
pusha
jb
fistp
and
jo
cld
(bad)
(bad)
shr
cmc
imul
push
rcr
jo
mov
cmps
scas
and
lods
push
inc
xor
mov
leave
and
test
pop
xor
adc
mov
(bad)
mov
xlat
xor
jo
or
push
daa
shl
dec
mov
push
mov
adc
loope
add
(bad)
scas
loop
xchg
sbb
pop
dec
dec
ins
inc
popf
and
js
adc
jmp
(bad)
icebp
into
aas
jo
push
mov
outs
dec
xchg
cmp
fs
pop
and
mov
iret
js
imul
push
sar
and
femms
adc
rcr
push
xlat
mov
imul
xchg
inc
daa
ds
mov
jns
je
int
dec
dec
(bad)
mov
cmp
out
add
add
push
dec
push
retf
cwde
cmp
div
cs
cmps
dec
push
movs
inc
popa
sbb
fs
int
xchg
loope
shl
jb
je
loop
push
mov
sub
mov
mov
jp
leave
loopne
into
dec
mov
push
inc
cmps
xor
sbb
lods
add
pop
xchg
cmp
cdq
dec
sbb
cdq
shl
dec
pop
fwait
sahf
xchg
mov
inc
inc
inc
xchg
jns
lahf
jae
pushf
scas
cmp
sbb
pop
je
rol
jno
test
stos
pop
and
push
sbb
aad
les
je
cld
clc
xchg
add
sbb
daa
sar
jno
cmc
js
mov
mov
out
mov
imul
inc
and
jnp
(bad)
sar
test
das
xor
ret
or
ror
and
pop
loope
in
cld
ds
call
mov
jmp
test
jl
es
nop
mov
fdivr
out
lea
cmp
test
ja
cmp
mov
sub
fstp
push
mov
nop
sub
jge
mov
add
(bad)
mov
or
hlt
outs
cld
imul
jns
pusha
movs
add
cs
inc
out
jg
jge
jl
xor
mov
add
out
mov
or
mov
fbstp
or
fdiv
cmps
mov
out
and
ss
jg
lock
scas
dec
fisub
test
xor
aas
jecxz
xor
imul
mov
mov
add
test
clc
call
mov
call
adc
jge
lahf
gs
cmp
mov
add
cmp
rol
or
jns
lea
rol
mov
xchg
cmp
(bad)
dec
or
(bad)
cmp
xchg
popa
les
pop
(bad)
clc
mov
pusha
add
lods
mov
sbb
inc
arpl
push
call
xchg
fwait
leave
ss
int
dec
imul
aas
(bad)
cmpxchg
cmp
clc
cmp
(bad)
fwait
cmp
in
frstpm(287
fimul
dec
dec
push
cmp
cmps
call
mov
and
pop
sub
mov
test
ds
pusha
mov
add
enter
jl
not
mov
and
sar
nop
inc
and
adc
and
pusha
mov
lea
movs
arpl
xor
mov
repz
idiv
and
hlt
fisub
mul
xchg
sahf
cmp
jmp
push
imul
pop
(bad)
popf
push
dec
shl
inc
dec
push
hlt
adc
outs
dec
popf
jge
mov
xchg
sbb
xor
dec
shr
jb
adc
(bad)
fisubr
push
je
fwait
or
or
xor
or
jnp
sub
iret
(bad)
out
sbb
sti
mov
pop
adc
jle
test
xchg
and
push
add
daa
shl
clc
(bad)
mov
(bad)
xor
pop
push
jno
pop
push
fsubp
sub
daa
ds
or
rcr
ret
jg
test
jmp
je
retf
adc
jne
mov
loop
pusha
or
stc
in
fmul
(bad)
ja
inc
mov
mov
imul
call
cmp
push
and
xchg
push
(bad)
(bad)
movs
xor
mov
pop
gs
push
sbb
dec
push
jb
add
int3
pop
mov
leave
das
jge
aas
or
shl
hlt
shl
rol
pop
out
mov
mov
push
add
sbb
inc
(bad)
or
mov
push
dec
icebp
mov
mov
adc
pop
xchg
out
(bad)
mov
fsub
loope
mov
dec
(bad)
sbb
mov
dec
add
outs
xchg
pop
cmc
retf
sub
stc
outs
call
je
dec
xchg
jno
mov
inc
xlat
jns
sti
sbb
cmp
inc
scas
shl
fst
add
inc
jmp
(bad)
xor
jnp
push
imul
adc
mov
into
pop
mov
sub
mov
not
fimul
dec
fnstenv
pop
pop
push
push
jmp
pop
pop
icebp
out
adc
je
push
add
imul
or
movs
jae
xchg
ss
imul
mov
sbb
ss
fucomp
mov
fidiv
test
mov
inc
and
mov
push
loope
jb
mov
add
add
or
jae
(bad)
daa
lock
imul
jae
lods
mov
xchg
xchg
dec
loop
sbb
sahf
pop
cs
rcr
jge
(bad)
push
jae
shl
sar
aad
in
and
sub
popa
push
push
push
icebp
jg
call
xor
sbb
sbb
retf
or
mov
mov
lahf
mov
bswap
test
xchg
jb
push
xchg
cmp
inc
aas
gs
mov
lds
cmp
daa
nop
out
in
stos
inc
mov
icebp
pop
ds
sbb
cdq
cmps
leave
movs
shl
fwait
sbb
inc
adc
(bad)
cmps
ins
mov
xor
sbb
adc
and
or
mov
inc
lock
dec
outs
out
inc
mov
and
inc
imul
(bad)
test
mov
mov
test
(bad)
sub
jb
stc
fiadd
into
cmp
adc
in
push
sub
dec
fwait
mov
xchg
imul
repz
xor
mov
jg
es
shr
outs
sahf
push
hlt
into
or
lahf
stc
adc
shl
jnp
mov
and
mov
and
enter
xchg
push
les
mov
sub
ss
sar
jge
adc
imul
cmp
sbb
mov
imul
(bad)
lock
jmp
jns
outs
popa
jbe
xchg
fbstp
mov
neg
pop
and
movs
dec
sbb
jae
add
sar
fidivr
jmp
pop
js
add
xor
hlt
pop
mov
lahf
mov
cmp
jne
sti
and
iret
mov
xor
xchg
xchg
neg
imul
pop
dec
(bad)
jns
das
pop
xlat
fstp
or
and
fwait
leave
push
adc
sahf
out
jne
jmp
repnz
jecxz
xchg
(bad)
sub
pop
pop
fwait
rcr
hlt
jl
addr16
aad
pop
push
aam
xlat
mov
ret
and
mov
mov
and
lock
shl
cmp
sbb
jnp
jp
shr
lds
jo
xlat
repz
(bad)
stc
add
push
mov
retf
jo
mov
enter
fist
rol
adc
pop
push
jmp
sub
sub
inc
shl
push
mov
mov
pop
push
jne
mov
xor
mov
fist
std
lock
xchg
sti
or
push
stos
out
xchg
(bad)
mov
retf
push
jne
xor
jae
jmp
fidivr
jmp
pop
out
test
fadd
mov
dec
ret
cmp
test
adc
hlt
out
arpl
stos
pop
mov
mov
xchg
xchg
fdivr
xchg
sbb
and
cld
cwde
add
push
retf
or
aas
test
mov
data16
or
lea
aaa
push
(bad)
sti
gs
cli
outs
gs
(bad)
mov
nop
int
mov
adc
jl
push
add
les
mov
mov
arpl
fisubr
add
mov
imul
mov
push
sub
add
mov
pop
or
cmc
mov
dec
shl
popa
inc
dec
retf
cmp
inc
lds
sbb
nop
inc
(bad)
mov
cld
xchg
push
mov
cli
jmp
ds
mov
leave
cli
cmp
dec
ins
(bad)
and
mov
jecxz
adc
repnz
jb
cmp
ss
(bad)
xor
rcl
jmp
inc
add
fstp
fs
gs
movs
(bad)
dec
(bad)
jmp
sub
hlt
fdivr
xchg
add
gs
(bad)
dec
lea
inc
or
adc
mov
pop
scas
push
sbb
jae
mov
and
ja
shl
mov
mov
pop
test
sbb
xchg
daa
sub
xchg
icebp
pop
jae
jno
xor
jecxz
jbe
cdq
movs
or
push
push
xchg
jno
call
mov
cmc
mov
stos
inc
jle
or
xchg
mov
jns
js
xchg
push
mov
fwait
pop
add
daa
fcom
add
stos
cmp
out
add
lock
hlt
or
jle
cs
mov
jnp
mov
mov
xchg
add
mov
shl
xchg
ins
or
dec
and
sub
cmp
ss
mov
adc
pushf
int
test
add
js
clc
pushf
out
cmps
in
mov
mov
aas
inc
mov
and
movs
gs
mov
mov
add
pop
aas
jns
dec
mov
shr
mov
out
inc
cmp
int
or
xor
cmp
fistp
popa
nop
(bad)
and
out
adc
push
loop
sub
xor
sar
aad
lock
inc
push
sbb
push
mov
mov
sar
ds
out
sub
shl
(bad)
mov
mov
adc
inc
js
mov
out
or
arpl
sar
add
pusha
out
xchg
loopne
jne
(bad)
rcl
push
sub
nop
jo
pop
(bad)
dec
popf
pop
inc
pop
mov
push
out
dec
fist
xchg
jb
out
jbe
aaa
jo
sbb
push
jae
pop
test
push
or
sub
or
sbb
pop
aad
jb
call
hlt
in
sub
adc
out
ja
test
loopne
mov
or
or
clc
or
adc
(bad)
imul
cmp
lods
and
mov
ret
jns
dec
or
in
mov
int
imul
and
pop
mov
xor
jg
in
outs
sahf
mov
inc
fdiv
xor
icebp
iret
push
xchg
repz
jp
jle
int
xchg
mov
inc
scas
jmp
push
outs
pusha
dec
sbb
outs
shl
popf
inc
push
fidiv
in
pop
sbb
test
xor
cld
add
imul
push
jnp
std
ret
xor
test
test
jg
adc
xchg
or
xor
outs
and
xchg
fsub
loopne
sub
fwait
push
adc
scas
jmp
xchg
adc
push
cmp
loope
push
pop
dec
and
and
and
mov
dec
retf
loopne
dec
mov
arpl
add
sbb
sbb
loop
xor
neg
rol
pop
sub
add
iret
aam
pop
daa
ret
xor
enter
jne
outs
shl
dec
pop
sub
inc
or
shr
and
test
push
dec
int3
dec
jne
pop
fistp
test
mov
xchg
mov
cmp
rol
nop
sti
arpl
sub
sub
adc
movs
or
inc
enter
out
sbb
sub
iret
sub
mov
xchg
leave
xor
jecxz
dec
dec
or
leave
pop
dec
mov
jnp
push
stc
add
cmp
std
cmp
test
sub
fisub
ds
push
jno
lea
push
sub
(bad)
ins
movs
jecxz
or
sbb
mov
cmps
icebp
ss
fdivr
shr
retf
outs
dec
inc
add
mov
outs
xor
call
test
into
dec
rol
mov
pop
or
mov
outs
test
fwait
sbb
daa
jmp
imul
and
xor
scas
jmp
jmp
and
push
ins
or
pop
add
rol
mov
jno
mov
(bad)
mov
std
xchg
pop
mov
push
(bad)
jno
sbb
and
pop
jp
add
movs
pushf
cmp
mov
aam
cwde
xchg
adc
mov
sub
movs
xor
lock
jnp
and
dec
aas
mov
(bad)
je
ret
sub
(bad)
push
mov
test
dec
call
sub
loopne
lahf
lods
push
sub
xor
pusha
cmc
inc
mov
(bad)
daa
mov
cs
(bad)
in
std
lods
fistp
or
out
and
adc
sbb
xchg
pop
xchg
repnz
hlt
pop
mov
aad
ret
outs
pshufw
xchg
scas
retf
fldcw
mov
in
popa
loope
jne
mov
cmp
xchg
or
and
aas
sbb
sbb
iret
xlat
or
popa
or
adc
(bad)
pop
jl
call
repnz
adc
mov
sbb
adc
popa
cld
push
sub
mov
ja
pusha
mov
outs
mov
test
test
(bad)
aam
jbe
dec
scas
test
stc
pusha
pop
lahf
cmp
sub
mov
test
or
pop
jbe
fsub
fsubp
inc
cmp
mov
fcom
cmp
loopne
xchg
and
ror
imul
out
and
xchg
das
cmps
cmps
push
and
shr
jge
stos
loop
(bad)
sbb
lods
push
xchg
pop
hlt
hlt
sub
add
mov
(bad)
sbb
dec
out
icebp
and
or
mov
lods
mov
call
xor
cmp
xor
mov
jo
cmp
dec
in
shl
inc
inc
ins
and
test
mov
xchg
pop
movs
adc
mov
data16
pop
ss
mov
stos
cld
stos
hlt
clc
push
sub
push
push
xor
dec
pop
enter
dec
loopne
int3
pop
into
add
pop
js
fst
xor
adc
(bad)
das
add
xchg
push
dec
sbb
dec
sti
sbb
mov
daa
ret
int3
in
lods
inc
int
iret
mov
lds
cld
mov
fs
dec
adc
dec
scas
ret
inc
jg
cmp
cmp
mov
jb
popa
rcr
add
pop
jo
std
jmp
xchg
ds
sub
or
jmp
pusha
and
jno
push
add
mov
es
lods
clc
sub
sub
out
jae
xor
fcom
jns
mov
ror
shr
sub
das
xchg
test
pop
(bad)
ficom
int3
lods
clc
pop
pusha
lds
dec
fisub
xchg
sbb
and
fsubr
inc
xor
ret
xchg
das
inc
fimul
xchg
mov
sbb
clc
inc
inc
test
mov
pop
rcr
test
add
jne
inc
cmp
jecxz
push
(bad)
ds
ret
retf
or
retf
int3
rcl
enter
inc
cmc
sbb
fsub
or
push
lods
cmp
push
scas
add
pusha
outs
pop
(bad)
pusha
stc
jp
mov
call
cmp
repnz
ret
xor
xchg
out
in
jmp
pop
sbb
fimul
(bad)
mov
jge
jae
scas
jmp
add
adc
pop
mov
cmp
jo
or
and
mov
or
sub
jbe
and
in
cwde
scas
jle
or
xor
mov
mov
mov
dec
jb
xor
pop
mov
mov
bnd
out
or
(bad)
sbb
test
and
or
(bad)
inc
bound
push
and
scas
outs
jge
pusha
jbe
cmp
outs
pop
outs
add
mul
jl
dec
nop
mov
pop
sbb
bound
cmps
(bad)
lods
call
cwde
dec
adc
mov
jno
nop
ja
or
add
cmp
mov
pop
sbb
mov
mov
in
jmp
imul
arpl
dec
mov
fcomip
mov
vcvtsi2ss
xor
cmp
or
inc
test
mov
sub
xchg
(bad)
cmc
adc
xor
call
inc
dec
mov
out
xchg
add
or
push
and
dec
jg
ficom
jmp
mov
dec
push
cli
dec
sbb
fdivr
sti
mov
push
das
xchg
out
fs
add
in
pop
inc
test
add
or
ret
sub
add
xchg
jne
fld
loope
out
inc
ins
call
mov
shl
adc
pop
clc
add
in
mov
mov
fsub
lock
mov
jbe
inc
ficom
push
jmp
jo
sbb
push
int
retf
push
daa
dec
in
ja
dec
outs
pop
jns
test
sahf
test
push
scas
or
hlt
push
adc
es
movs
(bad)
hlt
stos
cmp
stos
dec
in
repnz
pop
arpl
dec
test
pop
mov
or
or
shr
fs
scas
push
mov
mov
xor
inc
dec
add
sbb
and
mov
icebp
push
and
ror
mov
cli
aam
nop
and
mov
adc
ss
push
jle
movs
es
cwde
ja
popf
ins
add
adc
das
push
xor
push
pop
add
add
daa
retf
cs
test
mov
ds
retf
push
nop
leave
adc
aad
add
mov
cmc
sbb
ret
adc
inc
sar
fld
fiadd
sbb
push
xor
dec
cwde
lods
xchg
fwait
and
scas
pop
mov
inc
in
jmp
xchg
and
xor
add
(bad)
mov
sub
stos
inc
sbb
sbb
int
push
scas
adc
xor
in
xor
mov
jne
(bad)
sbb
adc
shl
retf
xlat
jp
or
push
cwde
cld
adc
cwde
sbb
pop
fs
out
arpl
mov
or
sar
mov
jne
mov
inc
pop
pushf
shr
repz
ret
hlt
xchg
scas
fadd
mov
pop
(bad)
sub
cmp
push
retf
scas
pusha
(bad)
loopne
shr
sbb
scas
in
jb
sub
(bad)
xchg
pop
pop
mov
mov
dec
addr16
stos
xlat
pop
scas
mov
push
test
cmp
ror
sub
enter
sub
push
xor
inc
repz
test
nop
shr
adc
test
out
inc
mov
inc
enter
mov
test
push
xor
inc
xchg
ins
add
xor
mov
jmp
mov
fld
stos
adc
mov
cwde
dec
rcl
fisubr
adc
jns
movs
int3
sbb
or
push
dec
clc
and
push
(bad)
call
mov
leave
push
mov
sub
and
cdq
cmp
imul
dec
dec
xor
mov
icebp
loopne
mov
cmp
xor
dec
sbb
imul
jb
cmp
add
arpl
bound
inc
int
movs
pop
jns
adc
and
jo
fidivr
pop
add
ss
pop
ret
pop
aam
ret
mov
and
adc
jecxz
nop
fs
(bad)
test
out
mov
jp
sbb
jmp
sbb
sub
cmps
jl
adc
push
pushf
stos
jo
clc
push
loope
inc
(bad)
aaa
mov
push
das
shl
dec
cmp
int3
jae
outs
inc
or
push
sbb
dec
sub
jne
push
mov
jne
loope
xchg
jle
jge
(bad)
adc
ds
jge
mov
aas
inc
icebp
xor
aas
jnp
pop
inc
mov
jmp
jp
cdq
mov
and
aam
movhps
and
das
jp
push
jbe
movs
in
std
stos
or
sub
cli
mov
xchg
sbb
sub
imul
cmp
lea
sti
fadd
jp
sbb
int
fcomp
jbe
inc
fbld
(bad)
je
fld
sub
or
cmps
xchg
loopne
pop
pop
push
imul
int
fisttp
mov
pop
mov
jg
inc
adc
sub
pop
fwait
retf
(bad)
test
and
and
sbb
push
aaa
mov
leave
cmp
popf
or
aaa
stos
xchg
sub
add
mov
test
icebp
in
(bad)
pop
inc
ins
call
or
int3
aas
pop
sbb
adc
mov
enter
mov
sub
and
je
retf
cmp
pop
(bad)
cmp
scas
sti
jmp
pop
test
loopne
(bad)
jmp
lds
jnp
fidiv
sbb
pop
dec
sub
mov
cmp
outs
test
frstor
adc
shl
add
fwait
shl
sub
cmp
inc
inc
add
in
sub
mov
xchg
or
or
inc
ror
cmp
sti
sbb
lea
addr16
jecxz
daa
es
or
data16
pop
call
jne
jge
and
jbe
add
and
or
in
xor
lds
loope
xchg
mov
inc
lock
add
pusha
(bad)
mov
push
xchg
cmp
ds
mov
cmp
xor
bound
dec
cwde
out
nop
jnp
int
mov
enter
pop
aaa
frstor
or
xor
fst
rol
rcr
(bad)
push
in
push
out
inc
pop
cmc
cmp
(bad)
mov
mov
mov
mov
es
xor
jg
push
cmp
mov
inc
xchg
dec
jbe
pop
mov
movs
gs
mov
push
arpl
mov
sbb
(bad)
push
jo
cmp
fadd
or
movs
push
sbb
sbb
stc
sti
mov
add
es
and
adc
add
imul
aas
inc
cmp
xchg
call
lahf
sbb
push
mov
jb
pop
and
xor
jmp
inc
ins
jo
jae
add
loop
add
jge
gs
sbb
test
push
push
jnp
xor
pop
adc
mov
ins
jnp
add
or
sar
jge
ins
add
mov
jae
inc
movs
jo
jae
int3
gs
inc
idiv
cmc
add
gs
stc
adc
push
fiadd
cld
jb
add
daa
jb
nop
xchg
dec
cmp
aaa
out
bound
arpl
and
imul
dec
xchg
dec
push
das
aad
dec
jne
mov
push
(bad)
(bad)
mov
mov
xlat
mov
lods
sub
retf
test
arpl
je
add
adc
jl
das
(bad)
repnz
mov
ret
sbb
cld
pusha
xchg
cld
mov
pusha
cmp
hlt
xor
clc
xchg
pop
mov
dec
cld
jns
dec
mov
movs
test
nop
enter
add
push
xchg
fsub
mov
mov
pushf
ret
sbb
loop
test
xor
sbb
push
dec
(bad)
and
pop
fdivr
mov
daa
mov
ja
jne
(bad)
mov
mov
pop
jge
jge
pop
pop
sbb
add
jecxz
mov
or
addr16
xor
xor
cmc
mov
xchg
lock
or
call
xor
pop
sub
sbb
mov
(bad)
fild
adc
inc
mov
movs
fs
xor
inc
cdq
aaa
jno
jle
xchg
push
jp
cmp
mov
in
xchg
inc
test
mov
nop
bound
xchg
in
push
ret
pop
pop
jge
sub
movs
add
add
cmp
mov
dec
cmps
or
aaa
push
sbb
push
das
jae
das
push
sbb
cmp
adc
mov
dec
cmp
repz
add
mov
cmp
lods
add
fucomi
jnp
scas
xor
into
dec
pop
mov
out
inc
(bad)
push
mov
scas
adc
ds
mov
jmp
mov
jl
pusha
mov
push
mov
repnz
imul
int3
scas
jne
ja
call
dec
in
jo
call
mov
arpl
aad
or
cmp
jmp
lods
ja
pop
fs
xchg
fsubr
push
stos
ss
jg
popf
aad
int3
xchg
dec
xchg
lds
jnp
pcmpgtb
rol
push
aaa
pushf
push
and
push
adc
(bad)
jne
mov
(bad)
jns
xlat
mov
cs
jl
cli
and
out
push
les
movs
mov
mov
fcomp
popa
enter
jae
xor
push
xor
xor
fbstp
es
mov
sahf
inc
popf
mov
push
jno
mov
pop
and
repz
std
push
or
shl
stc
aaa
loop
icebp
mov
push
fwait
ret
(bad)
shl
retf
rcr
add
xchg
mov
pop
mov
out
and
fdivrp
(bad)
jne
push
cmp
mov
test
adc
movs
pop
lahf
icebp
fucomp
out
add
adc
sbb
out
jle
hlt
inc
mov
test
stos
sub
or
(bad)
sub
or
adc
aas
and
aas
popa
jo
xor
call
and
pop
imul
lods
xchg
arpl
gs
and
and
jp
xchg
xor
cli
test
push
inc
xor
dec
pushf
lods
cmp
inc
into
outs
xor
jmp
daa
xchg
mov
aad
and
fnstcw
adc
push
rcr
jge
repnz
mov
dec
mov
or
sub
or
test
rcl
inc
es
mov
sub
sbb
inc
lahf
sbb
mov
push
jne
add
pop
add
sahf
fimul
std
or
adc
sbb
sar
dec
je
lahf
call
cmp
stos
cwde
lock
xchg
fiadd
sub
cs
dec
xchg
fisttp
mov
stos
or
or
loope
stos
es
ret
mov
scas
loop
and
add
xchg
push
dec
aas
stos
std
cmp
jmp
sub
xchg
ins
jl
cmp
pop
sahf
repnz
inc
scas
in
mov
popa
cmps
ja
cdq
ds
cli
out
cmp
pop
cmps
fisub
cmp
ja
or
pop
test
pop
aas
ins
sub
loopne
sbb
push
dec
inc
adc
ror
push
ret
push
pop
fs
lea
mov
rcl
jge
dec
pop
sbb
cmc
add
pop
push
(bad)
mov
mov
aaa
cwde
mov
mov
push
mov
adc
imul
xlat
or
dec
and
jecxz
mov
xor
fimul
cmps
xor
movs
mov
mov
lea
clc
xchg
dec
dec
retf
les
adc
xchg
test
fadd
lods
movs
fisttp
ja
ss
and
sbb
gs
mov
dec
push
(bad)
outs
push
xor
and
add
jg
or
and
dec
mov
aad
xchg
ins
loope
bound
sahf
int3
inc
out
mov
lock
cli
mov
and
outs
movs
sbb
mov
popa
push
dec
cwde
and
ficomp
mov
js
cmp
jno
ret
ror
out
imul
lock
xchg
add
mov
jb
mov
sbb
int3
imul
lahf
(bad)
loopne
push
pop
push
mov
cmps
rol
push
inc
pop
loop
clc
mov
pop
ja
enter
cwde
call
movs
push
mov
dec
sub
scas
mov
test
ins
retf
test
fwait
repnz
loop
pop
enter
aad
pushf
sbb
out
movs
pop
mov
cmp
push
pop
repz
mov
movs
out
mov
mov
test
int
adc
dec
mov
das
shl
pop
xchg
pop
pop
adc
pusha
or
mov
scas
loop
les
jb
add
imul
mov
mov
(bad)
pop
rcl
fdiv
mov
mov
cs
pop
sub
repz
jo
data16
ret
sbb
loop
xchg
add
xlat
cmc
inc
popf
imul
inc
repz
sub
inc
sub
into
xlat
not
add
jnp
dec
(bad)
or
xlat
fst
inc
retf
mov
sbb
xchg
aas
stc
test
call
std
mov
outs
sbb
arpl
push
setnp
dec
or
xchg
jge
or
(bad)
jnp
xchg
stc
aam
mov
std
pop
imul
sar
push
jmp
es
cmp
loopne
add
fild
dec
lds
pop
add
test
push
std
cmp
pop
leave
sahf
in
int3
add
cmp
sahf
(bad)
aam
(bad)
sub
(bad)
mov
nop
push
xchg
xchg
inc
jmp
jne
jns
out
dec
dec
addr16
lds
push
(bad)
js
mov
shl
jmp
push
lock
shl
ret
pop
lea
mov
fs
pop
cmp
jb
push
cli
popf
cdq
jno
mov
aad
inc
enter
aam
mov
push
into
daa
sub
outs
movs
fstp
out
popf
cmps
cmp
dec
mov
inc
mov
mov
imul
movs
fcomp
cwde
jne
cmovo
add
mov
add
retf
and
and
dec
sbb
imul
outs
jge
ja
ret
(bad)
inc
xor
int3
xor
pop
inc
sub
xor
inc
xchg
jmp
adc
movs
in
jp
ja
pop
mov
jbe
jp
adc
fsub
xchg
push
bound
into
mov
and
out
pop
cmps
mov
sar
mov
cmp
cmc
xchg
mov
hlt
cdq
pop
inc
mov
(bad)
shl
fisttp
test
jl
push
mov
ja
scas
dec
push
jb
in
repnz
and
loop
scas
mov
mov
push
cmp
mov
jne
push
and
repz
mov
scas
neg
lea
push
cmps
ds
mov
test
and
xchg
push
inc
rol
gs
pop
jl
jmp
adc
sbb
dec
retf
jle
movs
pop
ins
lods
vpunpckldq
pop
icebp
cmp
pop
adc
mov
popf
pop
lahf
jmp
mov
scas
ja
(bad)
mov
inc
dec
fs
mov
enter
pop
mov
and
das
addr16
ret
lods
and
xchg
pop
bound
adc
push
and
mov
or
dec
lods
fisttp
out
lods
pop
(bad)
retf
mov
xchg
mov
xor
cmps
loop
aam
inc
add
lock
cmp
(bad)
cmps
xchg
aas
xor
inc
in
fcom
xchg
xor
mov
or
ror
fs
cmps
xchg
ins
push
mov
ror
mov
inc
fistp
sbb
pop
pop
jb
out
push
push
ins
scas
mov
jmp
ja
not
sbb
dec
mov
sbb
mov
aad
cmp
icebp
mov
dec
test
addr16
xchg
and
cdq
xor
add
lea
in
bound
ficom
mov
push
push
outs
and
push
dec
fidivr
jbe
es
sub
into
dec
or
cld
xor
rol
add
ss
inc
sbb
cmp
pop
mov
cmp
in
sar
xlat
mov
jb
jne
out
fcmovb
jle
fidivr
mov
ret
xor
sub
cmp
jbe
xchg
push
and
jge
xchg
xchg
jbe
loopne
lahf
test
push
dec
xchg
mov
or
push
push
ins
(bad)
bound
(bad)
out
stc
add
xor
adc
fwait
in
jp
xchg
scas
xchg
rol
dec
push
dec
stos
mov
lods
scas
loopne
sbb
popa
mov
cmp
sbb
pushf
sbb
push
movs
outs
adc
mov
lock
add
clc
jmp
ss
mov
lea
int
pop
push
pop
scas
xchg
jg
test
dec
jmp
cmp
xchg
push
xor
xlat
sub
xchg
repz
es
dec
pop
ror
arpl
into
sub
arpl
scas
cs
lahf
jns
(bad)
pop
add
fmul
arpl
scas
dec
mov
into
push
mov
cmp
push
pusha
and
mov
movs
out
mov
in
(bad)
loope
iret
xor
fcomp
xchg
pop
jnp
adc
call
mov
test
adc
scas
test
sbb
lea
in
push
les
xchg
xor
loop
test
(bad)
pop
js
je
pop
xchg
outs
xchg
sbb
push
mov
aam
sbb
iret
mov
lods
cmp
pop
retf
loop
aas
inc
sub
adc
mov
shr
fbld
dec
cs
test
xchg
inc
pop
call
sub
neg
gs
xchg
push
push
dec
or
test
cmp
inc
sbb
cmps
mov
call
and
in
cmps
add
xor
call
xchg
dec
jge
jo
js
cmp
das
and
js
jp
or
mov
xchg
test
aaa
cdq
mov
je
jno
push
adc
fwait
int
pop
out
test
xchg
gs
sbb
or
mul
fistp
scas
ja
push
adc
adc
xor
mov
mov
pushf
inc
movs
add
in
scas
jmp
sub
xlat
add
add
push
repnz
xor
pop
adc
xchg
add
js
je
je
lahf
mov
out
cmps
in
test
sub
pop
or
jle
repnz
mov
icebp
test
xchg
nop
add
call
cmps
leave
pushf
dec
push
mov
lds
icebp
cwde
jecxz
pop
rcl
scas
push
adc
adc
jb
jp
mov
in
pushf
or
push
rcr
addr16
xchg
ds
sub
cmps
xchg
fbstp
add
call
rcr
test
jae
and
or
push
pusha
out
adc
pop
mov
lea
sub
xor
out
dec
jae
vpackuswb
pop
int
retf
stos
stos
add
lods
xchg
mov
enter
loop
cmp
push
xchg
sub
movs
test
push
call
(bad)
in
outs
bnd
mov
mov
outs
inc
ret
mov
xchg
cmp
inc
scas
cmp
es
aam
cmp
(bad)
fcom
dec
cmp
jbe
sub
xchg
retf
xchg
mov
sbb
icebp
or
out
aam
(bad)
xchg
jno
les
call
lock
push
inc
ins
xchg
push
fs
dec
aas
sbb
jmp
or
(bad)
cmp
ss
and
jb
push
xchg
sub
das
dec
jb
ins
inc
xor
xor
popa
add
inc
pushf
and
mov
and
addr16
adc
ins
cmp
sbb
push
mov
sub
and
mov
pop
jge
enter
lea
movs
(bad)
pop
mov
retf
mov
fwait
inc
pop
in
or
out
mov
xchg
(bad)
fsubr
(bad)
xchg
std
mov
pop
and
push
test
jge
dec
cs
cmp
sbb
call
jge
jnp
sub
cmps
les
mov
outs
xor
jle
clc
int
cli
pop
sbb
rcl
fldenv
mov
sbb
pop
sbb
adc
adc
adc
pushf
pop
cmp
loope
inc
(bad)
fwait
call
mov
mov
lahf
add
sub
enter
loope
aad
into
mov
aas
lods
jmp
inc
shl
loop
adc
imul
lock
(bad)
js
sbb
jge
popf
cmp
mov
das
or
int
sub
pop
xchg
cmp
mov
xchg
jl
and
jbe
adc
mov
mov
dec
pushf
mov
gs
sub
push
nop
jo
ds
call
rcr
iret
sub
xchg
mov
dec
push
adc
inc
ret
mov
das
repz
daa
js
dec
and
xor
test
les
add
jge
push
sub
cmp
xchg
xchg
lahf
and
mov
or
sbb
into
cmp
ja
sub
ret
mov
xchg
cmp
cmp
clc
inc
ds
sub
pop
push
jmp
mov
shl
inc
sbb
pop
les
(bad)
mov
add
aas
(bad)
pop
dec
pop
in
sub
jbe
mov
aam
add
mov
lock
inc
push
inc
lahf
push
arpl
xchg
xchg
xor
jmp
ret
dec
jo
sar
dec
imul
and
hlt
and
xchg
mov
std
mov
xor
aaa
ret
sbb
(bad)
outs
je
xlat
jecxz
jp
jns
fisubr
rol
inc
inc
sbb
scas
sbb
push
sti
test
in
retf
lahf
movs
jg
ds
sub
shr
xchg
iret
popa
xchg
fimul
imul
retf
xchg
ds
or
xchg
sub
push
mov
mov
fild
cmp
xchg
sub
jmp
fsubr
xor
and
xchg
or
push
inc
inc
mov
jge
fcmovbe
je
and
or
int
call
xchg
push
xchg
dec
or
add
mov
enter
push
cli
sbb
das
in
rcr
clc
push
mov
push
jno
xor
leave
mov
movs
imul
movs
cli
adc
push
leave
add
(bad)
adc
cmp
test
loop
inc
mov
sub
pop
lods
jns
fwait
xchg
and
mov
mov
test
sahf
or
adc
in
iret
mov
clc
xor
pop
pop
xor
xchg
lods
mov
sub
mov
jmp
movs
push
div
sti
pop
push
dec
push
push
aaa
test
push
and
out
inc
hlt
jne
pop
(bad)
into
fistp
adc
fcomp
xor
xor
and
daa
cmp
mov
in
or
sub
in
movs
dec
sahf
arpl
aad
sub
mov
or
add
jle
dec
cmp
and
sub
aas
loopne
cld
pop
pop
jp
scas
dec
sub
into
dec
sbb
jmp
pop
or
into
sar
(bad)
stc
icebp
dec
popf
aas
aaa
or
dec
imul
cmps
adc
fdiv
sbb
js
mov
lahf
out
jbe
in
fwait
sti
cmp
lock
pop
adc
aas
xor
test
xchg
cmc
out
dec
cmps
dec
jno
rcr
inc
and
jge
out
sub
ja
adc
mov
adc
dec
xor
pop
xor
sbb
dec
not
(bad)
dec
mov
push
cmp
movs
lahf
mov
jbe
ror
add
retf
lock
in
pop
(bad)
cmps
sbb
fild
into
or
loope
and
(bad)
jb
lea
in
iret
(bad)
out
cmps
sub
ret
cmc
in
fstp
inc
cli
ret
dec
xchg
sub
xchg
js
mov
(bad)
inc
fmul
(bad)
lods
imul
test
enter
cmp
add
pop
pop
in
xchg
into
jb
jmp
jae
xor
sub
push
inc
std
into
ja
mov
mov
jbe
inc
mov
stos
test
dec
dec
out
xor
gs
stc
pop
push
and
inc
lea
addr16
jb
xor
push
or
in
fwait
imul
pop
mov
mov
scas
mov
mov
add
jae
xchg
loopne
lock
in
inc
jmp
lock
sub
das
mov
xchg
popa
push
dec
push
sub
pushf
cmp
mov
fwait
mov
retf
xchg
sub
sbb
or
pop
sbb
clc
xchg
sub
sar
icebp
das
and
jmp
lea
mov
jns
addr16
adc
(bad)
or
daa
daa
sbb
xchg
xchg
cld
ficom
xchg
rcl
arpl
(bad)
movs
mov
cmp
test
push
adc
int3
push
iret
sub
xchg
in
push
(bad)
xchg
add
inc
call
pop
add
daa
ja
or
xor
push
cmps
ja
push
lods
adc
or
sbb
fst
jb
add
(bad)
rol
out
and
in
inc
into
shl
pop
jecxz
jp
test
pop
mul
imul
adc
or
adc
loope
fwait
js
mov
leave
imul
imul
and
sub
pushf
push
dec
pop
lea
jecxz
test
fsubr
stos
fld
jg
push
enter
add
add
cmp
xor
and
push
mov
jnp
aam
(bad)
xor
(bad)
mov
and
adc
lea
fmul
mov
popf
jo
jbe
cs
ins
add
sub
ja
call
mov
xlat
pusha
repnz
fnstcw
add
xchg
mov
pop
jnp
mov
mov
cmc
call
push
jp
sbb
shl
mov
mov
add
inc
xchg
pop
cli
mov
test
add
in
mov
cmp
jbe
lea
cmp
in
outs
xor
test
push
ror
pop
jecxz
int
mov
cmps
pop
popa
dec
jle
stos
or
jl
push
daa
mov
dec
leave
or
mul
mov
xor
mov
add
pop
repz
sbb
test
(bad)
fisttp
add
imul
dec
or
pop
ror
scas
fsubr
cmp
mov
out
mov
ret
cs
stos
and
retf
jnp
dec
sub
ret
push
and
mov
jle
imul
aas
idiv
xor
add
pop
jmp
xchg
loop
xor
jmp
adc
sbb
mov
mov
add
mov
add
hlt
in
rdtsc
scas
cmp
dec
test
and
adc
movs
call
mov
xor
xchg
xchg
cmc
xor
mov
push
mov
test
pop
inc
fs
in
xchg
cmp
retf
push
nop
adc
dec
popf
cmp
mov
frstor
push
ins
in
scas
push
lock
out
jge
pop
mov
arpl
popa
mov
call
jno
xchg
xlat
pop
xor
dec
cmp
les
loopne
ss
add
inc
fwait
jae
xchg
and
jp
jns
leave
arpl
jno
test
pusha
sbb
int
jno
jp
cli
and
xor
sub
mov
jl
mov
xchg
pop
sbb
daa
adc
out
mov
sbb
inc
not
inc
mov
clc
std
push
aam
jmp
ins
and
jp
fisttp
jns
cmp
xchg
inc
add
jmp
lds
sub
jp
adc
mov
adc
sub
sub
int3
fcomip
jl
loope
jle
sub
add
inc
dec
clc
dec
mov
push
xor
jne
sbb
or
jno
xchg
in
xor
mov
sub
dec
or
mov
mov
push
xchg
psubsw
and
push
jmp
jle
adc
xor
(bad)
rcr
or
lods
xchg
mov
jae
pmaddwd
jnp
lock
adc
jns
icebp
pusha
cli
cmp
retf
xlat
push
add
dec
mov
jo
pop
ins
mov
push
fsub
pop
(bad)
aas
iret
test
jmp
mov
push
inc
imul
mov
sub
(bad)
repz
sub
retf
sahf
cmps
sub
inc
add
out
nop
pusha
cld
data16
rcl
test
inc
imul
int
stc
lahf
push
jecxz
movs
push
sub
mov
jmp
push
cmp
xchg
and
jae
addr16
(bad)
lds
rol
jne
xchg
(bad)
out
adc
in
test
mov
jb
mov
shl
xor
arpl
(bad)
(bad)
cmp
sub
stos
icebp
retf
popf
arpl
ror
cmp
mov
or
repnz
mov
mov
repnz
imul
sbb
out
(bad)
cs
mov
scas
xor
xchg
dec
and
aas
inc
and
out
aad
add
sub
out
lahf
sti
fisubr
adc
cmp
shl
clc
mov
sahf
ins
fsubrp
dec
scas
dec
lea
(bad)
push
dec
mov
add
out
mov
inc
stos
hlt
aad
shl
dec
lahf
dec
xchg
in
add
mov
movs
js
fcomp
mov
hlt
adc
pop
or
inc
popf
mov
sti
hlt
fwait
pop
and
retf
iret
xchg
xor
das
std
rcl
cmc
movs
loope
es
pop
ficomp
fcom
rcl
in
mov
jg
push
aaa
enter
popa
fsub
dec
leave
xchg
lods
mov
push
sub
stc
ret
jae
ins
cmp
call
mov
lock
sbb
les
fwait
ins
add
loop
xchg
xor
push
into
or
out
mov
cli
adc
sub
xor
mov
aas
cmp
jl
inc
ja
mov
cmp
add
test
inc
or
push
xchg
cs
sub
rcr
push
dec
xor
ror
or
rcl
and
arpl
xchg
sub
dec
xchg
sti
inc
and
push
sub
mov
test
ret
and
(bad)
xlat
add
push
mov
cmp
xchg
jnp
pop
add
repz
call
pop
data16
mov
xchg
leave
outs
pop
das
sub
xchg
les
push
mov
or
and
loope
mov
xor
mov
xor
ja
xchg
cs
(bad)
out
pop
js
push
lods
cmc
out
add
pop
inc
(bad)
adc
or
mov
test
inc
fst
inc
adc
dec
adc
sbb
cmp
mov
rcr
mov
cs
das
or
aad
rcr
test
jmp
je
add
bnd
sub
repnz
adc
in
(bad)
pushf
outs
mul
and
(bad)
push
mov
imul
cld
cwde
rol
retf
imul
mov
cmp
iret
dec
mov
add
mov
popf
xchg
xor
sub
fld
cli
jb
jg
std
xchg
ins
adc
fidivr
in
pop
cwde
cmp
in
mov
in
aad
push
mov
adc
push
or
cdq
sub
outs
dec
jecxz
xchg
into
enter
push
icebp
pop
mov
push
dec
test
cmp
xchg
in
enter
adc
xchg
jns
cs
stos
pop
imul
retf
or
dec
scas
mov
dec
cwde
leave
stos
std
and
mov
in
mov
inc
cmc
ficom
adc
repnz
sar
jl
mov
das
sbb
mov
and
pop
mov
scas
hlt
pop
cdq
and
pop
leave
out
sbb
ror
mov
hlt
stos
mov
fidiv
push
inc
movs
popf
mov
inc
mov
imul
ins
cdq
inc
pop
iret
pop
cmps
jmp
or
jmp
xchg
jmp
test
jmp
mov
push
adc
fucomi
mov
mov
adc
mov
adc
sbb
xchg
ror
add
enter
scas
mov
add
push
or
(bad)
dec
fadd
pop
call
or
sbb
sti
xor
jecxz
cwde
out
out
dec
cmp
mov
xlat
test
fs
loop
mov
mov
and
mul
pop
cmp
sub
mov
clc
sbb
and
jnp
mov
inc
adc
jo
ret
mov
cmc
aad
lods
les
jae
lea
(bad)
retf
push
mov
mov
fdivr
mov
mov
out
std
arpl
push
test
jecxz
mov
add
mov
out
jo
out
mov
(bad)
leave
out
adc
and
fimul
push
test
outs
push
popa
retf
and
movs
mov
xchg
shl
sub
mov
push
fwait
adc
mov
mov
mov
rol
add
pop
push
push
cdq
push
arpl
push
loopne
imul
(bad)
pop
push
pop
inc
sub
ds
pop
add
or
in
repnz
(bad)
into
add
or
xor
icebp
fsub
or
cld
and
popf
leave
outs
push
inc
mov
in
test
enter
jle
inc
push
test
mov
push
and
cs
retf
cmc
cdq
dec
stos
sbb
fs
add
mov
mov
adc
mov
call
inc
stos
in
std
mov
mov
xor
xchg
pop
xor
cmp
sub
rcl
add
xchg
loop
inc
rcr
mov
in
sar
pop
add
jmp
sub
retf
rcr
(bad)
fld
movs
jecxz
fbld
enter
cmps
aam
nop
int
mov
mov
xchg
data16
cmp
push
pop
xchg
inc
xchg
mov
or
xlat
sub
pop
rcl
mov
es
sub
dec
or
call
xchg
clc
mov
cdq
cwde
cmp
loopne
push
mov
mov
mov
push
mov
adc
cli
mov
cwde
mov
jns
pop
int
cwde
clc
xchg
cmc
dec
sbb
fmul
idiv
xor
fdivr
jns
arpl
dec
dec
adc
pop
lds
mov
fadd
in
loopne
iret
and
movnti
pushw
mov
mov
clc
push
mov
idiv
sahf
mov
cmp
lea
sahf
shr
call
and
and
mov
jbe
outs
mov
dec
or
fisttp
sub
adc
test
retf
xor
enter
and
dec
xor
inc
jg
fdiv
loopne
adc
out
in
outs
rol
pushf
(bad)
mov
mov
dec
(bad)
cmp
or
les
jl
jns
hlt
gs
jno
sbb
fsubr
lahf
mov
pop
nop
push
lock
aam
(bad)
lock
jno
dec
arpl
sub
(bad)
jge
dec
mov
out
cmp
btc
imul
jge
ds
ja
and
adc
jb
inc
mov
xor
jns
mov
push
loopne
adc
leave
mov
jp
int
aad
mov
loopne
cmp
cmp
push
test
push
push
daa
leave
push
push
iret
mov
daa
in
push
xchg
rcl
pop
je
sti
xchg
cld
sub
mov
inc
retf
fdivp
dec
jae
aas
or
loopne
xchg
or
fdivr
xchg
mov
jg
push
ins
out
adc
sar
cmc
iret
in
daa
(bad)
pop
pop
cmp
push
imul
sbb
sahf
mov
cmps
fidiv
cmps
scas
in
inc
jg
outs
aam
idiv
dec
inc
cwde
cmp
repnz
stc
pop
cmp
cli
imul
xchg
jns
stos
test
retf
retf
xor
and
push
adc
mov
xor
lods
fwait
(bad)
imul
xor
and
inc
cli
mov
inc
call
out
mov
mov
inc
outs
jae
dec
call
movs
rol
mov
or
sbb
ret
push
jle
xor
inc
push
test
jmp
jns
shl
mov
or
cli
push
and
popa
test
daa
sbb
lahf
xchg
mov
aad
pop
add
aas
(bad)
mov
mov
mov
pop
sbb
pushf
inc
data16
xor
je
pop
cdq
adc
or
lds
loop
cmp
xor
sbb
pusha
(bad)
push
push
ins
test
add
js
and
call
xchg
fnstenv
mov
adc
daa
lock
dec
push
dec
cli
test
in
addr16
stc
jb
jo
pop
movs
aam
pop
scas
push
adc
add
shl
mov
repz
loope
push
dec
sub
inc
push
push
xchg
cmp
(bad)
fs
push
inc
sub
xchg
mov
fwait
xor
jnp
ret
stos
out
(bad)
sub
mov
dec
in
adc
ret
out
sbb
adc
adc
movs
(bad)
retf
mov
cdq
push
mov
xchg
popa
data16
sbb
sti
pop
(bad)
mov
xor
nop
lds
cld
stc
fild
nop
jo
repz
and
adc
lods
nop
dec
shl
dec
xchg
addr16
push
sti
mov
mov
repnz
adc
mov
fidivr
push
xchg
ret
inc
jne
ss
adc
xlat
xchg
xchg
sbb
inc
xchg
movq
fdiv
loop
mov
lahf
or
ja
das
and
std
mov
mul
sbb
add
sbb
mov
std
mov
xchg
in
adc
mov
fcmovne
add
mov
inc
shr
mov
pop
sub
mov
push
fxrstor
lahf
cmc
xlat
mov
xchg
or
and
fs
sbb
xlat
xchg
rcl
mov
and
shr
outs
xor
pop
mov
outs
or
stos
jge
inc
test
sub
sub
sbb
adc
mov
outs
enter
xor
sar
pop
cli
mov
addr16
sahf
push
push
mov
or
sbb
(bad)
cmp
repz
or
repnz
jp
data16
lds
mov
pop
inc
dec
or
sbb
icebp
push
xor
add
jmp
icebp
push
loopne
pop
outs
aaa
mov
mov
cmp
mov
mov
pop
fld
add
xchg
xor
(bad)
out
inc
inc
pop
adc
inc
je
cmps
(bad)
cmp
jb
xchg
adc
loopne
jne
xlat
call
xor
(bad)
push
dec
mov
mul
sbb
mov
fbld
push
jmp
xchg
mov
retf
jecxz
add
inc
pop
jne
sar
(bad)
jmp
inc
into
popf
xchg
mov
mov
push
inc
mov
mov
xchg
sbb
jno
call
scas
nop
push
dec
xor
nop
pop
test
jg
or
rcl
pop
out
pop
push
mov
icebp
push
out
adc
fwait
int3
inc
mov
ja
cmp
sbb
aaa
jmp
ret
lods
sub
adc
pop
jmp
outs
cli
xchg
fild
out
xchg
and
ds
nop
inc
stc
pusha
loopne
inc
lock
pop
and
mov
pop
into
out
test
jmp
popf
je
mov
js
xor
xor
fstp
sub
cmp
dec
adc
aaa
popf
push
dec
sbb
mov
xchg
outs
inc
sub
jnp
rcr
fmul
ror
outs
movs
or
mov
push
out
inc
add
fs
xchg
fisttp
hlt
dec
call
inc
cdq
xor
dec
cmp
mov
xor
loop
inc
or
js
test
fistp
in
push
xchg
xchg
cmp
daa
popf
add
inc
or
fiadd
ja
test
out
outs
add
pop
movs
inc
and
dec
fld
pop
mov
push
scas
das
rsm
adc
scas
mov
outs
mov
retf
retf
fimul
jmp
(bad)
rcl
mov
imul
sub
(bad)
cld
inc
cmps
mov
xchg
jmp
ficomp
lahf
pushf
push
xchg
iret
loop
xchg
hlt
mov
mov
sti
push
mov
jns
cmp
push
std
add
scas
pusha
pop
cli
sbb
mov
fwait
push
or
adc
dec
repz
aad
ret
and
jg
inc
ja
leave
xchg
mov
adc
inc
aad
pop
jecxz
add
call
into
shr
adc
or
cwde
mov
xchg
cmp
xchg
mov
xchg
(bad)
jno
mov
lds
test
call
in
cmp
dec
mov
dec
ror
stc
mov
dec
xchg
mov
cmps
mov
xchg
adc
cmp
mov
ins
inc
sub
and
and
repz
cli
pop
cs
or
cmp
mov
mov
in
add
adc
adc
jl
ds
xor
dec
xchg
cwde
lods
pop
jl
cdq
and
ficom
les
sub
bound
in
aas
cdq
call
jle
das
jmp
push
sbb
ror
push
repz
lods
ja
movs
inc
(bad)
cmp
sub
bound
push
mov
push
xchg
mov
jns
aas
mov
pushf
and
xchg
in
lods
sahf
daa
push
pop
add
les
bnd
mov
dec
mov
push
(bad)
in
enter
cmp
pop
popa
popa
xchg
lds
retf
fs
inc
enter
add
mov
push
dec
xchg
jno
out
imul
in
inc
popa
inc
sbb
sbb
or
in
add
push
je
mov
mov
xor
xchg
pop
mov
test
jmp
or
push
outs
mov
and
and
test
sbb
mov
cmc
nop
out
and
push
or
stc
lods
retf
sbb
inc
call
shr
push
mov
shl
std
test
(bad)
popf
hlt
cdq
ror
scas
rcr
inc
xor
pop
xor
retf
jae
jp
cmp
or
retf
push
pop
cli
jo
scas
loopne
mov
aam
push
inc
pop
shl
sbb
mov
sub
sub
addr16
lea
pop
(bad)
xor
cmp
cmp
and
retf
dec
xlat
and
sub
push
xchg
dec
std
mov
neg
nop
and
(bad)
mov
cdq
aam
les
inc
jmp
ja
aam
pop
jae
lahf
lds
add
xor
xor
loope
xor
cdq
or
pop
mov
ins
data16
lds
jnp
(bad)
pop
xor
iret
mov
and
sub
add
xchg
inc
and
aas
sbb
cmp
pop
rcl
xor
bound
mov
pop
out
repnz
mov
xor
inc
shr
fild
sub
mov
or
inc
dec
lea
repnz
(bad)
push
mov
loop
add
sbb
pusha
mov
mov
jbe
jbe
add
push
sbb
sub
mov
jbe
popa
imul
pop
int
in
fst
es
(bad)
das
call
pop
push
ds
dec
mov
pusha
pushf
cld
neg
jne
sub
adc
loopne
mov
iret
mov
or
stc
rcr
nop
cmc
jmp
dec
cld
frstor
jp
cmp
mov
xor
mov
fld
icebp
bound
test
inc
jo
mov
sar
int3
xor
mov
(bad)
fidiv
jecxz
push
jge
inc
jle
jmp
pop
mov
and
ss
es
adc
and
or
or
mov
jo
into
add
adc
cwde
fwait
cwde
lods
mov
mov
add
rcl
lock
cmps
(bad)
ds
in
js
sbb
test
mov
mov
retf
sti
xchg
or
enter
mul
cdq
scas
push
xlat
sub
fs
sbb
push
loopne
in
mov
fwait
cmp
push
test
stos
sbb
gs
or
out
or
push
sbb
xchg
push
push
imul
movs
in
ins
aaa
iret
mov
sub
pop
fwait
jmp
pop
inc
xor
bnd
dec
rcr
add
or
retf
xchg
clc
or
inc
pop
push
pop
cmp
adc
xchg
les
movs
or
cmp
ss
sbb
aam
fdivr
dec
cs
movs
dec
jmp
pop
mov
dec
cmp
fldln2
cmc
repz
mov
imul
xchg
pop
adc
push
xor
mov
dec
repnz
(bad)
or
popf
(bad)
lea
inc
xchg
fs
shl
jmp
cmp
xchg
(bad)
test
sbb
mov
mov
and
xor
div
data16
mov
push
(bad)
addr16
sti
adc
mov
ja
sahf
lods
fstp
inc
scas
fdivr
aas
sbb
mov
fdivp
call
jecxz
xor
jae
ja
pop
ja
cmps
shl
into
ror
pop
push
nop
ror
mov
jecxz
add
mov
adc
stc
and
xchg
out
jmp
fdivr
ins
add
push
push
adc
inc
ja
pop
add
inc
push
sub
mov
test
push
adc
dec
jb
jne
aaa
ror
mov
dec
repnz
push
scas
fist
push
and
jae
mov
ret
repz
sub
repz
movs
xchg
sub
push
sub
sub
dec
(bad)
retf
inc
pop
xor
or
test
mov
xor
mov
add
outs
sub
cmp
cmp
(bad)
mov
ret
xor
lds
scas
adc
dec
adc
leave
fild
xchg
lods
push
pushf
(bad)
push
ds
clc
test
ret
sbb
add
fcom
mov
rol
arpl
test
push
xchg
add
inc
nop
scas
xor
push
pop
fimul
push
xor
(bad)
push
mov
jnp
xlat
dec
push
in
push
pushf
data16
call
inc
sahf
je
cli
dec
and
jne
out
in
adc
in
mov
pushf
adc
ret
mov
rcl
inc
(bad)
sbb
mov
je
movs
sub
addr16
inc
push
jmp
dec
push
xchg
push
inc
ins
push
pop
fstp
(bad)
sbb
mov
mov
ficom
(bad)
(bad)
jno
cmp
xchg
test
pop
mov
dec
xor
pop
add
mov
adc
and
gs
div
test
fs
sbb
push
scas
push
mov
in
les
(bad)
call
xor
or
in
test
pop
adc
pop
pop
imul
mov
cdq
mov
dec
push
xchg
pop
fsub
bnd
dec
mov
ret
aam
mov
and
mov
or
jbe
neg
pop
stos
inc
jo
les
call
inc
fs
mov
inc
rol
leave
adc
jp
sbb
shr
in
movs
mov
movs
outs
jle
jo
sbb
pusha
test
push
out
and
dec
je
xchg
mov
mov
fsubr
test
adc
movs
in
sti
and
pop
clc
mov
mov
movs
adc
cmps
mov
rol
dec
mov
and
xchg
test
popa
cld
mov
aaa
pop
lods
retf
(bad)
mov
call
push
aaa
mov
or
inc
lock
popf
sbb
mov
outs
loopne
cmp
xchg
mov
push
dec
adc
sbb
xor
out
cmp
rcr
jae
push
or
adc
xor
je
pop
inc
xchg
outs
adc
inc
dec
mov
clc
xor
cmp
pop
dec
daa
movs
add
loop
lds
loopne
enter
sub
cmp
inc
mov
movs
aad
xchg
push
mov
icebp
mov
xor
ja
clc
jmp
cmp
cmp
ret
sub
mov
pop
jne
sbb
mov
nop
scas
adc
icebp
mov
outs
push
das
ror
dec
push
lahf
enter
xor
xchg
or
cmc
dec
int
test
adc
sti
fwait
jb
iret
mov
dec
jl
sbb
inc
sti
ficomp
sbb
sub
daa
in
sub
add
aaa
sub
sbb
mov
jae
jmp
adc
test
leave
jns
mov
and
or
mov
jecxz
enter
retf
mov
int
iret
adc
inc
stc
push
cs
mov
inc
cwde
cdq
inc
es
out
fld
mov
das
add
loop
ret
in
imul
das
and
bswap
pop
sbb
mov
inc
push
add
ds
mov
int3
sbb
dec
xor
push
ins
aam
jne
xchg
pop
push
and
mov
xchg
add
or
ss
repnz
pusha
outs
xchg
(bad)
sbb
or
xchg
push
mov
inc
pop
sbb
inc
mov
(bad)
sub
(bad)
push
xor
sub
popf
xchg
sahf
test
rol
pmulhw
jecxz
lods
icebp
int
int3
stos
shl
ficomp
adc
inc
mov
sub
shl
dec
pop
pop
xchg
jge
in
pop
aam
sub
out
mov
arpl
aad
or
push
sahf
jnp
jns
cmps
or
bound
xchg
rcr
ds
aad
ror
outs
jae
loopne
xor
mov
aas
pop
sub
add
xchg
sub
int3
xchg
and
cmp
adc
sub
add
xor
or
push
push
add
repz
mov
stc
sub
pop
cdq
pop
jp
sahf
aas
xlat
mov
shl
(bad)
lea
(bad)
mov
sti
test
pop
pop
jne
sub
cld
int3
int
cmp
mov
mov
pusha
jp
add
ins
bnd
fistp
popa
inc
out
je
aaa
dec
inc
cmp
and
inc
fcom
ins
lods
out
pop
push
add
jno
call
cwde
test
mov
xor
outs
pop
retf
add
lods
mov
jp
cmp
cmp
pushf
rcl
adc
mov
xchg
dec
or
dec
ja
add
mov
or
inc
xor
das
shl
sbb
push
imul
xchg
jle
es
int
mov
out
aam
jmp
aam
xchg
in
jbe
and
pop
mov
pop
xlat
sub
fs
clc
daa
push
out
bound
inc
mov
lock
mov
jb
xchg
outs
xor
dec
push
addr16
fadd
pop
push
ss
fcom
mov
sub
and
in
mov
jns
arpl
mov
xchg
dec
push
xchg
imul
rcr
js
mov
mov
or
aam
(bad)
sbb
retf
add
imul
jp
mov
inc
test
xchg
inc
dec
jb
dec
xor
jg
fistp
and
push
push
imul
in
and
mov
mov
test
mov
add
lods
lock
stos
jb
add
xchg
(bad)
jne
mov
xchg
je
push
adc
mov
jg
fild
int3
or
dec
pop
pop
inc
lea
push
xchg
sub
(bad)
push
xchg
push
lds
adc
sahf
repnz
or
iret
in
dec
movs
or
mov
pop
dec
pop
add
add
rcr
xchg
in
mov
out
push
loope
std
mov
aaa
xchg
jmp
adc
outs
and
adc
push
or
adc
xchg
loopne
sub
xor
xor
pop
fdivr
dec
or
or
push
adc
sti
jne
ins
lock
iret
out
jge
add
arpl
imul
pop
cmp
(bad)
call
ret
cwde
xchg
push
scas
fnstenv
scas
push
sbb
mov
mov
jg
jmp
add
fidiv
cmc
xor
int
rcl
sahf
lods
push
ficom
movs
sub
mov
adc
hlt
out
and
mov
mov
push
sub
pop
mov
loopne
cmp
sub
fistp
adc
shr
fisub
call
cld
(bad)
mov
push
inc
jne
xchg
xor
fnsave
iret
mov
mov
jp
lahf
pause
or
repz
ret
aaa
call
mov
repz
and
loope
mov
xor
dec
aaa
(bad)
push
mov
adc
mov
dec
dec
xor
cs
or
inc
aad
add
cmp
pop
cdq
inc
cli
test
adc
xchg
inc
mov
xor
dec
jns
call
popa
sub
movs
imul
push
into
fwait
cmps
aad
cmps
adc
or
or
inc
cwde
push
jle
fdivr
pop
les
movs
test
rol
or
or
or
iret
dec
data16
push
scas
mov
movs
jle
test
or
fs
dec
sub
cwde
or
xor
jge
ret
xchg
mov
jno
jp
sbb
xor
(bad)
lahf
dec
iret
add
adc
pop
movs
shl
fidivr
call
mov
int
call
pop
daa
in
adc
rcr
popa
fisttp
repz
add
mov
mov
sahf
lahf
int3
ins
div
sar
inc
out
jle
mov
adc
mov
or
call
inc
dec
pushf
cmp
mov
pop
into
js
cld
adc
sub
jmp
fwait
cmps
stos
push
movs
shl
jmp
xchg
test
retf
ret
xchg
popa
push
cli
in
inc
or
mov
fistp
in
imul
(bad)
(bad)
cmp
ror
jo
add
pop
popa
xor
in
cmp
ret
pushf
dec
lea
sbb
push
mov
scas
sti
and
jae
add
jle
inc
mov
and
push
out
push
je
jbe
cmp
movs
ja
lds
xor
fcomi
jg
aas
ret
mov
jbe
xor
lahf
imul
cmps
ins
adc
dec
mov
push
cmps
push
outs
add
retf
sbb
cwde
icebp
push
aaa
dec
dec
add
das
pop
popa
inc
and
fimul
loop
jecxz
or
adc
pop
movs
enter
mov
xor
aad
or
mov
rol
cmc
loop
jl
fmulp
jb
arpl
enter
add
and
lahf
daa
retf
inc
jmp
shl
push
fwait
lds
push
ins
cld
inc
push
sub
idiv
icebp
ss
jmp
call
xchg
and
leave
iret
push
adc
mov
sub
adc
sub
aaa
shl
xor
cld
adc
xor
scas
dec
mov
xchg
jle
fidivr
jbe
jb
adc
jp
(bad)
fild
push
sbb
or
jb
dec
(bad)
jmp
jns
pop
test
retf
cmp
into
sub
pop
fiadd
mov
lods
sub
add
movs
lods
gs
mov
add
mov
pop
or
scas
nop
sbb
cmp
lods
je
aaa
cwde
cli
mov
ja
les
out
stos
lea
(bad)
ins
inc
jns
ss
cmovne
and
mov
pushf
mov
icebp
enter
push
sbb
daa
adc
(bad)
or
dec
jno
scas
inc
dec
xchg
push
inc
sbb
xor
sbb
stos
push
pushf
imul
and
(bad)
jl
pop
addr16
sub
loope
mov
ficomp
xor
lock
jg
mov
and
cmp
in
or
leave
mov
gs
mov
mov
in
daa
mov
mov
or
test
mov
cmps
mov
push
pop
shr
adc
jge
adc
les
pop
jmp
leave
js
stos
mov
sti
mov
add
leave
out
mov
and
cmc
mov
fcmovne
mov
into
push
xchg
lods
repnz
sub
pop
jmp
cmp
out
adc
dec
imul
(bad)
push
sub
jne
adc
fbld
cmp
es
xchg
pop
in
cmp
mov
add
inc
adc
repnz
inc
jns
daa
mov
pop
and
dec
lea
or
cmps
jns
outs
inc
mov
jo
sub
shl
mov
mov
pop
adc
and
fcom
and
push
pushf
jo
rcr
mov
sub
test
mov
or
add
adc
sar
jp
ret
dec
cmp
or
int
inc
cmp
mov
inc
sub
xchg
and
jb
push
fdivp
fdivr
xchg
sbb
sbb
add
hlt
pop
jecxz
and
inc
pop
movs
test
in
mov
ins
out
ss
or
mov
cwde
sar
lds
jl
xchg
fcom
xchg
sub
pop
pop
push
dec
inc
dec
aam
cmp
cmp
(bad)
xchg
es
jmp
(bad)
mov
test
adc
mov
nop
sub
imul
adc
jnp
(bad)
loop
dec
or
ret
(bad)
sbb
sub
sbb
sbb
inc
mov
hlt
sar
mov
xlat
adc
mov
push
nop
in
pop
mov
stos
pop
(bad)
cli
je
cmp
shl
ret
repz
jle
sub
or
sbb
add
fst
pop
mov
test
mov
fiadd
(bad)
fneni(8087
stos
mov
xchg
enter
or
call
fldcw
add
mov
jecxz
scas
rcl
add
scas
test
pop
cmp
or
adc
fldcw
add
mov
push
(bad)
jg
cmp
scas
cmp
dec
inc
test
xor
in
out
xor
data16
jns
inc
lods
xor
adc
and
xchg
sbb
sbb
or
mov
add
inc
cli
xchg
and
or
push
int3
std
ret
inc
cwde
adc
dec
aad
loop
add
push
add
or
blcs
and
pop
ja
shl
in
jbe
xor
add
iret
adc
or
sub
cmp
(bad)
leave
scas
cmps
dec
jle
imul
jmp
inc
jo
ror
jb
out
xor
pop
jmp
and
shr
jg
mov
popf
sub
mov
(bad)
fidivr
mov
pop
xor
daa
ds
movs
fcmovnu
test
jp
or
adc
shl
popf
pop
aad
mov
iret
aaa
(bad)
mov
fidivr
sahf
mov
(bad)
bound
adc
push
xchg
mov
outs
xchg
xchg
or
outs
pop
sti
inc
retf
int3
test
fnstsw
push
xchg
bound
fldcw
fsub
shl
call
sub
aas
aad
xchg
mov
test
dec
mov
mov
in
pop
pop
scas
aas
push
popf
cmp
dec
inc
jle
sub
push
and
sbb
sbb
popa
test
xlat
test
ins
mov
mov
and
jmp
mov
inc
mov
xlat
fiadd
sbb
call
jns
push
adc
push
(bad)
xor
mov
push
sub
mov
loop
add
pop
xchg
rcr
inc
xchg
cmps
jae
push
mov
and
aaa
cmp
sub
xchg
cmp
out
mov
call
out
ds
cli
(bad)
sbb
jmp
(bad)
aam
push
rcr
sub
sahf
inc
ja
(bad)
jle
rcl
push
push
je
fucomp
fdivp
fnsave
adc
push
jb
lahf
pushf
push
movs
and
int3
aaa
xlat
sbb
fs
cmc
data16
out
push
stos
arpl
test
xor
das
pop
lods
imul
sub
mov
mov
add
cmp
arpl
xchg
stos
test
fmul
retf
push
dec
fild
push
aaa
out
sahf
xor
pop
in
mov
or
mov
adc
fucomi
test
push
aam
jmp
fisubr
fnstsw
and
xchg
inc
fild
(bad)
ss
fistp
iret
adc
sub
or
punpckhbw
adc
xor
sub
xchg
xchg
mov
mov
ret
jnp
stos
cs
(bad)
xchg
dec
pop
xchg
mov
scas
test
scas
out
mov
in
dec
outs
push
jecxz
xchg
hlt
cmp
jg
xor
icebp
jnp
mov
mov
cmp
or
movs
fldenv
pop
hlt
rcr
pop
add
adc
sub
push
inc
jp
and
xor
mov
out
popf
xor
int3
call
sbb
push
jmp
jl
fstp
mov
add
inc
mov
aaa
push
inc
sub
enter
push
sar
cmp
pop
shr
ds
nop
cmps
fs
mov
jo
or
(bad)
jo
cmp
sbb
in
sbb
sbb
loope
and
mov
inc
imul
ins
cmp
pushf
xor
inc
sbb
jno
ficomp
bnd
data16
push
retf
inc
and
pop
xchg
adc
mov
retf
dec
por
lds
pop
ja
fcom
cwde
or
pop
xchg
dec
mov
dec
dec
scas
inc
mov
ja
push
sbb
inc
add
xor
popa
ss
jp
fnstcw
jns
add
sbb
or
mov
adc
xlat
lods
xchg
aad
(bad)
std
cli
xchg
inc
inc
les
sbb
add
jns
pushf
add
outs
jle
loope
sub
jge
data16
or
add
jnp
stos
cdq
in
icebp
sub
(bad)
cmp
inc
mov
or
push
fiadd
(bad)
dec
and
jno
ss
jp
call
bound
ins
dec
and
dec
or
cdq
adc
and
ins
aad
push
jg
loop
bound
adc
mov
push
call
mov
out
movzx
xchg
add
loopne
(bad)
popa
dec
xchg
sti
push
sbb
pop
std
movs
mov
cmp
imul
add
in
adc
rcl
and
popf
or
mov
fdivr
jmp
xlat
xchg
retf
jbe
cli
jbe
shl
mov
push
push
jnp
jle
cmc
pop
sbb
faddp
pusha
daa
jb
push
cmc
sbb
adc
sub
jae
mov
aad
adc
mov
mov
adc
pop
std
hlt
add
mov
pop
add
jnp
sbb
outs
add
repz
gs
dec
out
jns
out
popf
mov
xor
rcr
mov
std
or
clc
ins
loope
sub
out
nop
mul
xlat
cmp
sbb
adc
mov
add
idiv
sbb
xor
push
xor
daa
pusha
or
pop
into
and
aad
ins
clc
inc
ins
mov
push
xor
or
mov
or
push
aaa
sti
sbb
dec
pop
or
rol
pop
cli
enter
fcomp
imul
lds
pop
es
sbb
mov
ret
mov
lock
pop
push
inc
frstor
xchg
lds
sar
bound
dec
jmp
xchg
ret
inc
mov
or
adc
out
mov
mov
jmp
mov
stos
pop
iret
cs
mov
cmps
jle
in
push
lock
das
cmp
push
add
test
int3
xor
mov
lods
test
dec
pop
mov
test
nop
xchg
pop
push
pop
std
(bad)
in
call
in
fld
imul
imul
or
cmp
mov
push
jnp
push
aas
call
aad
cmp
jle
mov
xchg
addr16
mov
call
pusha
sbb
fucomip
cmps
scas
mov
pop
sub
call
push
dec
enter
xchg
pop
repz
add
jo
dec
pop
and
mov
les
sti
push
aaa
add
mov
test
xchg
bound
movs
jp
fist
ja
dec
mov
mov
(bad)
in
cwde
add
push
jae
xor
jl
mov
in
in
mov
push
sbb
cmp
sbb
push
mov
jecxz
push
or
xor
ret
rcr
xchg
xlat
(bad)
fidivr
and
dec
and
xchg
shl
inc
hlt
loop
call
imul
popa
icebp
loopne
ss
xchg
int
jnp
jo
sbb
mov
cmps
dec
ds
sar
fist
xor
inc
mov
ret
jecxz
or
jl
pusha
sub
adc
xchg
fist
jmp
in
lea
fist
push
out
jp
and
or
cmps
fild
mov
mov
ins
sbb
fst
sub
mov
pop
cmps
clc
xor
mov
jl
iret
dec
sbb
outs
jg
enter
mov
mov
inc
call
adc
fstp
jbe
out
pop
cmp
(bad)
and
sahf
enter
sahf
push
fst
sub
dec
add
stos
cmp
pop
cmp
sbb
int3
ja
jbe
add
inc
dec
sbb
adc
dec
test
mov
sti
js
rol
movs
pop
loop
sbb
in
mov
ss
xor
fwait
add
outs
sbb
pop
and
jmp
stos
dec
xchg
push
lods
jns
cmp
push
ins
test
xor
pop
push
mov
mov
cld
leave
fldcw
and
ss
and
adc
mov
mov
jb
or
dec
out
push
aaa
xchg
jno
fld
xchg
mov
pusha
xor
aam
pop
mov
ret
(bad)
aam
movs
retf
scas
or
mov
arpl
mov
sar
sub
or
je
rcl
mov
push
js
mul
xchg
adc
cs
outs
retf
cmps
cmc
pop
fdivr
rol
sbb
and
pop
cmp
and
jecxz
pop
push
neg
inc
fs
fnstcw
xchg
jo
mov
and
cld
(bad)
rcl
jae
or
arpl
adc
sar
mov
push
repz
(bad)
xchg
mov
and
dec
jle
push
and
adc
scas
inc
lock
mov
aas
sbb
mov
std
fisttp
out
mov
push
mov
frstor
adc
cld
ins
stc
inc
xor
cmc
pushf
inc
lods
(bad)
cmp
mov
outs
jp
leave
push
mov
xchg
fild
or
mov
out
dec
sub
push
je
inc
sub
lods
adc
cbw
jecxz
push
ins
dec
mov
mov
mov
sub
popa
add
aaa
mov
sub
pop
shl
adc
(bad)
sbb
sbb
rol
xchg
adc
hlt
pop
adc
in
lock
xor
ret
inc
repnz
adc
mov
fisttp
test
bound
jp
cmps
mov
call
dec
test
xchg
adc
add
or
pusha
or
xchg
or
jae
or
fs
mov
add
or
je
stc
movs
test
ss
and
jae
rcr
pushf
jp
das
sub
test
stc
ins
fcom
jne
jnp
sub
pop
pop
xchg
stc
nop
aam
jge
inc
and
sbb
fnstenv
jle
add
sub
and
sti
pusha
push
push
mov
adc
mov
nop
cmp
fnsave
mov
ss
das
mov
dec
sub
in
dec
nop
pop
inc
xchg
lds
jg
xor
dec
call
gs
jg
cdq
and
sti
(bad)
or
vrsqrtss
push
xor
lods
pop
mov
sbb
jnp
and
xchg
xchg
dec
gs
dec
and
push
jbe
clc
pushf
xchg
in
inc
lea
and
imul
ror
(bad)
leave
pop
cld
pop
int3
loop
(bad)
xlat
aam
mov
or
mov
sbb
cmps
movs
xor
jno
loop
pop
mov
mov
js
rol
mov
cmp
xchg
test
fldenv
repnz
rol
jg
stc
cmp
mov
cmp
div
fs
call
lock
(bad)
mov
cmp
ja
pop
mov
inc
pushf
jle
call
cmps
sbb
jg
jl
mov
or
test
jmp
jl
adc
fisubr
int3
mov
or
and
fcmovbe
shl
int3
(bad)
(bad)
out
(bad)
aam
cmps
pinsrw
jl
sub
ss
into
xor
adc
cwde
sti
nop
ffree
dec
sub
iret
mov
retf
push
in
cld
xchg
cs
call
repnz
mov
int
sbb
dec
sub
fdivr
inc
mov
loopne
int3
jno
popf
pop
enter
enter
retf
in
xor
adc
outs
adc
shl
scas
xor
fild
leave
rcr
mov
out
pop
out
or
add
inc
jecxz
mov
fbld
aas
jge
mov
arpl
fisub
dec
cmps
icebp
les
inc
gs
fsubr
cmps
dec
in
popa
arpl
(bad)
mov
sbb
(bad)
mov
and
ins
inc
inc
lock
inc
push
ins
(bad)
in
sub
pmovmskb
mov
inc
dec
mov
xchg
add
(bad)
jle
push
adc
adc
mov
mov
cmp
jns
cmp
cmp
rcr
into
shr
push
fst
xchg
pop
mov
push
cs
cmp
dec
xor
fwait
das
mov
sbb
xchg
test
push
jecxz
adc
xchg
ja
popa
jno
sbb
adc
cmp
in
and
test
outs
xor
sbb
loopne
xchg
inc
(bad)
sbb
iret
(bad)
int3
xchg
loop
mov
and
jp
daa
inc
sahf
outs
repz
push
daa
jmp
jle
sti
ds
jle
bound
loopne
push
push
fimul
push
adc
add
das
mul
adc
lds
ins
pushf
repz
push
pusha
add
ret
inc
pusha
arpl
gs
xchg
aas
nop
shr
sub
xchg
push
adc
jmp
shl
in
out
mov
push
repz
mov
cdq
icebp
push
lock
dec
xchg
sub
push
fnstenv
mov
test
mov
enter
pop
pop
iret
das
jg
jg
dec
adc
mov
pop
cmp
add
je
gs
xchg
sar
les
sub
mov
ss
and
mov
jg
pop
loopne
push
fild
cmp
in
lds
xor
jmp
mov
push
or
call
push
cmp
adc
adc
test
mov
mov
sub
mov
mov
(bad)
mov
aaa
cmp
adc
and
fwait
adc
mov
dec
ins
(bad)
push
lea
xor
stos
mov
int
push
mov
(bad)
(bad)
clc
es
movs
jge
fcmovne
mov
ja
push
jo
cmp
xchg
je
mov
pop
push
addr16
lods
mov
fdivr
mov
aad
fidiv
xchg
push
xor
ins
adc
push
das
jmp
aad
xor
dec
frstor
jmp
inc
xchg
xlat
arpl
xchg
es
mov
test
xlat
leave
mov
adc
push
arpl
movs
rcr
jae
jno
dec
adc
mov
stc
scas
ret
ja
cld
pop
mov
pusha
arpl
adc
pop
cmp
inc
sub
jo
inc
ror
out
sub
test
dec
and
add
test
rcl
pusha
xchg
leave
cmc
ds
mov
mov
pop
ins
into
je
test
out
or
sub
fs
dec
stos
cmps
out
mov
call
ret
mov
leave
or
movs
and
mov
mov
inc
pop
xor
dec
shl
nop
add
xor
mov
dec
cmp
cdq
rcr
out
loope
and
pop
movs
rcr
(bad)
add
add
push
(bad)
jmp
xchg
add
xor
std
cmps
pop
xlat
fidivr
dec
inc
and
shl
mov
(bad)
daa
(bad)
out
push
int3
adc
loope
pop
pop
loop
jnp
and
int3
cmp
(bad)
push
mov
out
pushf
pop
lahf
nop
xor
cmps
jecxz
add
mov
xchg
add
popf
stos
sub
or
dec
push
jns
cmp
into
dec
retf
adc
xor
std
fdivp
rcr
inc
xor
push
inc
cli
stc
adc
daa
sbb
inc
xor
push
rol
es
(bad)
sahf
dec
(bad)
scas
jl
in
adc
and
xchg
xor
xchg
or
fidiv
cmps
fs
xor
call
test
add
clc
mov
inc
pop
mov
jecxz
js
push
test
out
push
stos
pop
xchg
scas
(bad)
adc
xor
jecxz
mov
cmps
out
sub
ins
(bad)
cmp
mov
test
inc
jnp
fwait
pop
sti
and
xchg
(bad)
rol
fimul
shl
mov
scas
rol
retf
pop
in
mov
mov
xor
adc
rcl
popa
stc
push
jno
nop
sahf
fwait
cmp
pushf
pushf
test
sub
ret
xor
mov
sub
xor
sbb
mov
xchg
rcl
lods
sub
es
mov
sub
xchg
or
shr
add
and
inc
fdivr
not
and
sbb
icebp
in
popf
jmp
jns
rol
lahf
mov
clc
or
sbb
cmp
loopne
gs
dec
std
push
fxch
(bad)
retf
mov
sub
pop
sbb
in
push
jmp
cmp
pop
and
xchg
retf
jo
cmps
call
ror
adc
loopne
jne
push
pushf
mov
inc
jg
xor
movs
sub
sub
aas
push
pop
adc
push
adc
imul
ss
sbb
mov
out
mov
adc
mov
inc
iret
mov
mov
mov
jnp
or
jmp
jae
push
outs
push
cmp
arpl
pop
loope
pop
ins
sub
test
stc
cmc
imul
inc
lock
jb
adc
adc
jae
rcl
adc
mov
add
pop
lea
das
mov
popf
sub
sar
pop
hlt
fild
lods
xor
push
aam
push
(bad)
adc
jo
pop
in
jbe
pushf
or
or
xor
mov
push
test
nop
xor
bound
in
fdiv
fwait
dec
mov
mov
std
int
jb
das
mov
popa
loopne
idiv
mov
repz
mul
sbb
or
mov
mov
in
ret
in
xchg
sbb
sub
xor
mov
les
dec
out
dec
ins
push
stc
and
call
pushf
call
sbb
dec
mov
mov
js
call
les
add
div
mov
test
call
rcr
sub
out
(bad)
not
stos
sub
push
push
sub
xchg
inc
and
out
iret
es
sub
mov
dec
pop
cmc
mov
mov
or
pushf
outs
and
ror
inc
mov
sbb
cmovp
or
adc
push
jns
jbe
fwait
xor
imul
dec
jae
fsub
iret
mov
and
jno
mov
test
push
nop
and
xor
adc
das
mov
dec
gs
push
loope
ficomp
jnp
mov
and
les
js
clc
fist
dec
ret
cmp
sbb
test
repz
mov
clc
lods
push
jle
cmp
sub
loopne
cmp
fidiv
and
cs
adc
mov
inc
mov
loope
scas
push
add
mov
jmp
ins
rol
ins
mov
fst
and
cmc
repnz
popf
pop
test
jecxz
xor
sbb
mov
retf
fld
test
xchg
push
pusha
popf
fstp
jno
scas
or
cmp
test
out
inc
lahf
fcmovnb
adc
loope
int
or
inc
mov
(bad)
fidiv
popf
(bad)
mov
mov
out
pop
mov
sbb
mov
shl
jle
retf
mov
stos
cwde
xchg
fidiv
inc
js
outs
mov
data16
rcr
cmps
lock
or
pop
ins
es
int3
imul
add
adc
aas
out
pop
inc
and
jle
push
call
or
pop
sub
and
or
fdivr
nop
or
cld
push
fidivr
mov
adc
push
aam
xlat
push
inc
aam
test
aam
push
add
jno
or
ss
mov
bnd
jnp
add
mov
sub
cwde
sbb
popf
cwde
dec
mov
jbe
xchg
repz
imul
and
inc
push
push
jnp
dec
mov
loop
outs
xor
sub
inc
adc
cmp
pop
pop
iret
stos
mov
mov
xchg
stc
aam
sbb
sar
shl
lods
retf
jbe
mov
pop
pop
inc
int3
shr
jnp
xor
dec
data16
jo
call
inc
dec
loope
jg
aam
dec
je
pusha
ins
adc
mov
(bad)
push
sbb
mov
pop
and
in
or
scas
iret
mov
test
mov
mov
adc
adc
call
rol
scas
test
pop
bound
and
outs
js
cmp
(bad)
adc
lahf
jp
or
jge
ins
cmc
ja
cwde
std
push
repnz
movs
cmovo
enter
sbb
les
xchg
adc
scas
sbb
aad
mov
adc
push
pop
jnp
adc
daa
mov
xchg
dec
inc
int3
adc
xchg
push
xchg
jae
arpl
ins
mov
outs
mov
push
mov
sti
add
and
xchg
mov
imul
(bad)
jmp
and
mov
push
ss
or
cmp
adc
es
aaa
push
and
mov
jecxz
(bad)
push
xlat
sub
jae
jecxz
shl
cmp
mov
jp
stos
retf
(bad)
lds
jno
mov
pushf
lods
jmp
dec
shl
push
fcomp
sub
dec
sbb
test
std
mov
pop
in
das
test
push
ja
inc
(bad)
and
cld
cmp
pop
mov
(bad)
pop
mov
shr
int
jno
dec
xchg
outs
jmp
sbb
loopne
repz
pop
retf
mov
stos
cmp
sub
pop
adc
mov
sub
mov
sbb
imul
xor
call
and
popa
fsub
inc
push
push
mov
push
sbb
pop
aaa
or
push
fcomp
and
in
neg
into
sbb
arpl
lods
lods
fisttp
xchg
push
pushf
mov
aas
out
cmp
add
mov
sar
mov
sbb
jno
pop
lock
adc
pushf
xchg
bound
aas
jb
adc
mov
nop
mov
dec
shl
pushf
arpl
adc
std
jae
adc
fs
inc
jecxz
shr
inc
je
fst
cdq
jmp
push
in
add
fs
iret
push
sbb
xlat
imul
push
push
arpl
call
test
push
fwait
cdq
sub
es
xchg
jne
ss
out
ins
(bad)
jge
xchg
lods
ffree
mov
jecxz
jge
sahf
pushf
aam
xor
repz
test
mov
sub
push
fwait
push
sub
inc
pop
jecxz
xor
xchg
pop
jbe
out
or
cld
push
dec
mov
daa
jne
mov
ds
mov
add
mov
repnz
cdq
adc
add
stc
jge
sub
pop
cli
(bad)
and
add
jnp
jnp
inc
push
mov
push
iret
ret
dec
jb
mov
pusha
mov
stos
cmps
pop
arpl
adc
or
mov
push
scas
jns
add
les
ret
push
sub
jmp
mov
xor
test
jp
fist
test
movs
push
xchg
(bad)
out
aam
fisub
shl
imul
and
mov
mov
jo
push
sbb
(bad)
(bad)
jmp
adc
sbb
pop
xchg
fidiv
xchg
aaa
dec
mov
stos
(bad)
mov
adc
sti
jmp
push
adc
push
push
xchg
int3
or
inc
dec
test
outs
xor
outs
sbb
adc
fist
hlt
mov
mov
xchg
or
pop
xor
lahf
idiv
sub
shl
jnp
add
and
adc
dec
cmc
push
push
scas
cmp
adc
mov
xor
aas
jmp
sub
push
cs
mov
pop
leave
dec
dec
js
xchg
mov
(bad)
retf
inc
dec
ins
cld
or
mov
and
out
push
arpl
jae
pop
mov
nop
vlddqu
in
and
je
jmp
dec
retf
cmp
jnp
cwde
in
jmp
push
jl
jle
xchg
inc
lds
sub
xor
enter
mov
cwde
xchg
push
jno
xchg
ss
popa
sub
je
inc
lds
sahf
clc
sahf
sbb
push
cld
icebp
fld
or
sub
pop
mov
cmp
pop
pop
shr
dec
adc
jl
xor
cmp
xchg
dec
(bad)
inc
mov
inc
shl
xchg
xchg
fsub
jno
xor
lahf
sbb
ds
adc
sbb
xor
pusha
jne
xchg
test
adc
cs
hlt
enter
xchg
inc
jg
add
clc
mov
lock
xor
xor
mov
mov
addr16
dec
jne
jp
test
stos
(bad)
sub
jnp
mov
xlat
xor
(bad)
in
sub
test
cwde
rcl
mov
adc
test
cli
dec
pop
sub
sar
inc
or
mov
ins
cmp
fistp
jp
dec
sub
push
dec
jne
scas
jae
mov
dec
int
jns
stos
jno
pop
and
ret
mov
xor
or
or
jno
push
daa
pop
jo
dec
sar
push
sub
dec
shl
push
mov
pop
cs
fs
and
cli
and
push
cmp
adc
stos
xor
loop
pushf
ins
dec
aam
mov
add
fisttp
retf
xchg
jo
sub
sti
mov
pop
stos
push
stos
or
aaa
mov
mov
lock
sbb
fwait
aaa
dec
daa
mov
xor
cmp
lock
pop
repz
jle
neg
shl
xchg
and
jb
sbb
sub
and
inc
jmp
test
dec
inc
mov
jnp
xchg
mov
jne
or
cmp
push
imul
pop
retf
in
mov
push
pop
adc
inc
push
lods
ret
aaa
mov
adc
shl
out
bnd
bound
into
cwde
pop
jecxz
rcr
movs
sub
ins
jle
imul
or
dec
jge
jnp
mov
jmp
mov
jne
ins
jecxz
call
fcom
js
cld
aad
jge
mov
sbb
int
cmps
test
cmp
inc
cmp
mov
loope
cs
add
add
in
das
and
rcr
cmp
arpl
jno
sbb
inc
adc
mov
jb
mov
dec
pop
jmp
test
fst
sub
jae
sub
pop
ss
dec
in
dec
mov
shr
movs
or
xchg
inc
ret
mov
cmp
int
pop
sub
mov
jns
jbe
aaa
and
and
pop
(bad)
and
cdq
mov
ins
or
jge
mov
sbb
mov
shl
cmps
in
adc
ins
sbb
push
push
or
mov
jg
cmp
dec
fdivr
pushf
jbe
cmp
aaa
xor
stc
mov
mov
mov
adc
adc
xor
cmp
pop
mov
xor
lods
enter
add
push
js
push
mov
fisub
mov
or
sbb
inc
jge
stos
div
mov
loopne
in
imul
call
in
shl
mov
sbb
sbb
imul
mov
sar
int
push
test
lods
jno
out
jmp
fucomi
or
cmps
pop
repnz
jg
int3
ss
gs
aam
jecxz
sub
and
mov
push
pop
test
ret
aad
int
dec
sbb
push
push
fwait
xor
or
sub
not
mov
or
enter
(bad)
cmp
idiv
sub
jnp
pop
lea
lods
movs
in
pop
jp
jns
pop
clc
aad
arpl
cmps
std
leave
in
lea
xchg
push
add
or
icebp
cmp
ror
fcmove
and
(bad)
cmp
mov
or
das
icebp
mov
xchg
mov
mov
add
leave
(bad)
sbb
sub
mov
in
std
xchg
call
inc
sbb
dec
repz
mov
inc
cmps
adc
xchg
cdq
mov
pop
mov
xchg
aam
test
xor
scas
aas
pop
mov
fsub
jb
sbb
xor
jmp
frstor
fldcw
push
cmp
cmps
jne
out
pop
mov
rol
data16
inc
jmp
ins
outs
mov
out
cli
cld
out
daa
mov
inc
sub
xor
hlt
jl
or
cdq
movs
inc
stos
push
push
sub
xchg
mov
adc
(bad)
push
lods
sub
mov
jmp
mov
push
aaa
and
stos
push
scas
mov
xchg
adc
jle
jmp
in
into
fsub
cdq
bound
push
jae
jmp
cmp
mov
(bad)
mov
retf
mov
push
(bad)
xor
lock
dec
mov
mov
ins
and
adc
(bad)
clc
lahf
ffreep
mov
jmp
pop
cmp
jmp
jns
add
sbb
inc
mov
sbb
scas
icebp
sti
popf
popf
sbb
inc
push
gs
pop
mov
(bad)
sbb
or
and
mov
jo
mov
add
neg
push
dec
mov
cmps
inc
in
push
fld
push
sbb
xchg
jne
sub
push
ret
push
std
mov
inc
dec
scas
pop
retf
gs
lds
jl
push
rcl
call
fwait
push
dec
mov
(bad)
int
ds
push
ret
push
adc
dec
or
jmp
rcr
out
leave
push
ret
mov
popa
in
pushf
inc
mov
fnsave
mov
daa
test
adc
inc
sbb
add
ret
adc
iret
mov
push
mov
setbe
xchg
sar
cmp
das
jmp
sbb
test
outs
(bad)
mov
icebp
sbb
retf
mov
add
jg
mov
in
xchg
xor
adc
xor
retf
push
cld
xchg
xchg
pop
jl
mov
bound
jbe
fs
mov
dec
push
jnp
retf
dec
and
jecxz
add
cmp
mov
push
ja
mov
in
cmp
sbb
mov
push
xchg
xchg
jbe
nop
stos
rcl
int3
cmp
out
jecxz
lods
inc
test
gs
(bad)
pop
cmp
jp
sbb
inc
fisub
sub
sbb
sub
(bad)
mov
mov
loopne
out
add
leave
lods
call
inc
dec
mov
lods
dec
adc
pusha
adc
xchg
clc
dec
sub
lds
ins
retf
or
cld
std
add
aas
adc
mov
push
fimul
mov
sbb
cmps
sbb
rcr
call
scas
fmul
ins
mov
retf
cmp
in
dec
ret
pop
mov
enter
sti
cld
jge
iret
movs
pop
pop
dec
push
dec
sbb
das
add
mov
es
ss
gs
adc
adc
scas
(bad)
in
jmp
xor
mov
test
jnp
dec
outs
add
shr
sti
sar
and
rol
es
outs
clc
hlt
push
cs
repz
mov
ins
cld
xor
adc
outs
hlt
dec
mov
pushf
out
mov
mov
cmp
call
test
ins
scas
popf
ins
adc
push
lds
imul
mov
mov
or
stos
pushw
mov
or
jmp
pop
xchg
dec
into
xor
fisub
aad
jbe
push
cld
inc
jl
lods
jge
cmp
xor
mov
les
sub
xor
mov
dec
pop
shl
jecxz
dec
out
(bad)
adc
sti
xchg
push
lds
loopne
push
fidivr
les
inc
call
sub
fwait
xchg
popf
pop
cwde
push
lahf
mov
sbb
add
mov
jp
es
outs
and
inc
pushf
mov
cmps
je
xor
arpl
or
iret
adc
jne
nop
sub
pop
sub
mov
in
inc
xchg
jecxz
jnp
loope
addr16
mov
outs
jl
gs
cmc
xchg
popf
ret
push
jmp
xchg
cmp
outs
push
fst
mov
and
cmp
mov
xor
out
pop
add
leave
jnp
adc
or
out
icebp
sub
fldcw
add
repnz
mov
out
stos
mov
lahf
mov
cwde
js
addr16
jge
es
scas
sub
and
outs
std
add
dec
mov
lock
int3
mov
scas
xchg
and
mov
shl
jg
add
ret
or
mov
repnz
inc
in
push
stos
add
bound
sbb
cmps
ja
push
jae
dec
imul
jmp
mov
cld
push
call
int3
push
inc
sar
ss
ja
push
ficomp
fcomip
stos
cmc
xor
jo
mov
dec
mov
mov
mov
or
add
loope
sub
add
jp
jns
and
mov
fdivr
xchg
in
mov
lahf
cdq
loop
cmps
hlt
xchg
(bad)
fdiv
in
xchg
std
xchg
hlt
jno
out
mov
fisubr
pop
adc
fnstenv
mov
mov
mov
cmp
jns
out
(bad)
mov
pop
sbb
stos
and
xchg
pop
jmp
sub
add
ins
push
stc
(bad)
sub
mov
mov
outs
or
xchg
shl
cmp
xlat
cwde
fs
dec
mov
or
push
lods
pop
adc
push
sub
sbb
or
pop
lea
xchg
repnz
push
xor
pop
stos
push
sbb
int
test
push
imul
pmaxub
lods
push
mov
add
pop
rol
arpl
fistp
ins
pop
std
sti
jnp
ins
test
(bad)
mov
cmps
fcmovb
rep
daa
daa
and
in
dec
imul
ins
or
sbb
je
mov
lea
push
xchg
cmps
adc
pushf
inc
inc
jl
std
call
movs
mov
sub
pusha
xor
(bad)
iret
adc
push
lea
inc
lea
xchg
mov
sub
and
push
mov
sbb
adc
xchg
and
dec
sub
xor
mov
fiadd
mov
cmps
cmp
in
mov
inc
ficom
sub
push
push
(bad)
retf
bound
call
addr16
mov
xor
stc
call
sbb
sbb
cmps
lahf
lock
fst
xchg
cmp
xlat
and
pop
inc
push
add
retf
mov
std
xlat
mov
sar
movs
in
repnz
leave
jl
dec
mov
aaa
int
cmps
xor
scas
rol
inc
(bad)
aad
scas
dec
jge
sete
ds
sbb
cmp
imul
mov
mov
adc
addr16
call
cwde
clc
push
lods
xor
mov
push
pop
scas
add
fld
inc
jae
xor
xchg
mov
retf
dec
ffreep
test
mov
xor
fbstp
ret
mov
fdiv
iret
xor
lods
sub
stc
mov
lock
imul
mov
jmp
mov
inc
jae
out
cmp
daa
test
or
mov
jecxz
enter
jg
jecxz
or
out
emms
add
sbb
shl
xor
ins
out
pop
push
and
xchg
push
xor
mov
jbe
and
cmp
and
pop
add
out
rcr
push
repnz
shl
cs
or
movs
adc
xchg
push
mul
sbb
sbb
in
outs
js
cs
inc
cwde
(bad)
xor
pushf
xchg
mov
aad
pop
bound
stos
cmp
repnz
aam
or
inc
inc
stos
cdq
jmp
sub
and
out
push
mov
mov
adc
and
in
outs
frstor
sub
jmp
xchg
jmp
or
jmp
outs
push
or
mov
push
(bad)
jecxz
sub
xchg
test
jg
xchg
or
adc
xchg
xchg
cli
or
jne
pop
mov
fmul
das
sub
xchg
xor
test
mov
imul
leave
cmp
mov
jl
jnp
push
or
fbld
mov
or
add
inc
outs
dec
add
mov
sub
or
jmp
mov
cmps
fsub
pushf
in
aaa
inc
jge
push
inc
or
movs
in
call
xchg
stc
cmp
lods
mov
push
push
cmovle
or
pop
pushf
cdq
test
repz
pusha
sar
pop
pusha
cmp
add
mov
sahf
loopne
inc
test
mov
jnp
pop
or
mov
scas
cmps
xor
adc
stos
push
jl
add
iret
cmp
cld
frstor
cdq
addr16
xchg
retf
push
pop
cmc
in
inc
cld
idiv
fnsave
cwde
je
push
xchg
add
cmps
mov
push
pop
ret
sbb
(bad)
out
inc
cmp
ds
sbb
inc
jo
jp
push
test
add
cs
(bad)
stos
shr
cmp
in
cmps
cld
in
xor
adc
pop
add
cdq
call
or
js
mov
cmp
addr16
mov
sbb
sti
xchg
xor
pop
adc
retf
(bad)
lock
mov
iret
add
xchg
jmp
xor
(bad)
enter
ret
ficomp
daa
dec
dec
and
sar
adc
sub
mov
frstor
aaa
push
test
jmp
out
es
mov
cmc
adc
inc
push
sub
mov
mov
xor
out
adc
mov
aad
mov
cmp
xor
and
fwait
scas
test
cdq
adc
push
aam
mov
dec
(bad)
addr16
in
shr
lds
mov
ins
cmp
stos
and
dec
scas
cmps
jns
ret
fiadd
mov
and
stos
mov
(bad)
lods
sbb
push
pop
(bad)
xor
mov
add
sub
jmp
(bad)
sub
popa
repz
mov
clc
lea
dec
cmp
and
iret
adc
neg
aaa
add
pop
clc
sub
adc
call
adc
pop
and
and
sub
or
mov
daa
bndldx
loope
mov
loopne
and
mov
mov
jo
push
pushf
xchg
pop
in
addr16
mov
pop
xchg
jne
sub
stc
push
jge
pop
(bad)
inc
int
loope
mov
pop
mov
xchg
int
call
test
jns
push
data16
ficomp
call
or
test
stc
mov
fabs
push
out
adc
cwde
xchg
add
jge
aad
sbb
aam
jmp
in
push
ins
loop
ret
pusha
lock
retf
test
js
pusha
pop
or
pop
jl
xchg
and
lea
add
sub
mov
repz
xchg
mov
inc
(bad)
cld
out
jns
dec
cmc
mov
ret
fcmovnu
xchg
dec
jecxz
inc
arpl
aam
lods
adc
ins
(bad)
inc
inc
cmp
movs
shl
mov
stos
xor
cmps
fadd
test
dec
push
mov
xchg
add
adc
push
repnz
inc
inc
nop
sub
out
dec
jl
loope
out
rol
rcr
mov
pop
dec
dec
loop
xor
test
add
mov
out
into
mov
movs
mov
cmp
mov
add
inc
xchg
shl
jecxz
xor
imul
xchg
push
mov
sbb
inc
jle
dec
xchg
adc
cld
lds
rcl
je
inc
popa
out
fsubr
aad
lea
popa
out
sbb
cmp
(bad)
pop
add
add
xlat
aam
out
ror
fcomi
dec
pop
dec
push
xchg
push
sub
jae
sub
push
mov
ja
or
dec
sbb
ret
mov
dec
pop
call
mov
cs
sub
sub
adc
je
pop
pop
mov
cmc
ret
cmps
nop
es
test
scas
push
callw
fild
std
jecxz
loop
dec
addr16
cmp
into
xchg
ror
pop
cmps
mov
mov
sub
clc
pushf
in
or
xor
shl
scas
iret
lds
jae
retf
inc
jmp
xchg
not
mov
test
mov
sbb
dec
push
jmp
rol
cmp
out
inc
enter
jae
sti
in
fmul
push
adc
int3
push
cmc
sti
jnp
(bad)
mov
xchg
cmp
sbb
hlt
shl
ins
bound
in
ret
dec
push
mov
inc
rol
mov
add
loope
not
pop
mov
fadd
popa
mov
push
xchg
ja
inc
and
or
in
push
pop
dec
sti
sar
inc
ja
aas
loope
enter
clc
inc
aaa
pop
nop
popa
repnz
sub
cmps
xchg
loope
adc
jne
hlt
fdivr
(bad)
pusha
pop
(bad)
jp
pop
adc
sub
add
inc
jno
or
ja
out
repz
mov
addr16
ret
sbb
in
int3
cmp
loopne
or
popa
pop
add
cmp
pop
add
sbb
mov
jne
xlat
mov
push
inc
xchg
popa
add
outs
dec
mov
je
mov
xchg
test
cdq
in
push
pop
outs
loopne
imul
sub
retf
fs
jl
xchg
(bad)
ins
jmp
into
or
jecxz
jne
je
pusha
dec
(bad)
fcmovnb
xchg
pop
or
pop
(bad)
gs
or
xchg
(bad)
shl
std
mov
fcomp
cmp
adc
mov
int
inc
cmps
mov
jmp
sbb
int
dec
repnz
xchg
xchg
dec
or
lods
adc
sar
jnp
sub
sti
cli
sub
int3
push
add
mov
add
mov
(bad)
jno
xor
imul
inc
mov
lea
and
popf
inc
movs
cmp
dec
push
sbb
pusha
in
and
mov
mov
push
xchg
push
imul
xchg
xchg
add
inc
mov
hlt
jg
push
lds
pop
fbld
push
retf
mov
fstp
adc
jl
pop
int
(bad)
and
sub
test
mov
stos
imul
fild
das
cs
pushf
dec
idiv
add
dec
lods
sti
xchg
imul
test
loopne
cmc
adc
repz
call
movs
mov
dec
js
cli
or
jnp
push
xchg
inc
pop
push
pop
mov
and
dec
ds
dec
je
and
dec
xor
cmp
repz
sub
test
iret
out
div
cmp
pop
fnstcw
dec
test
mov
ret
fwait
mov
cmp
and
mov
mov
adc
push
and
mov
into
dec
pusha
retf
mov
sub
mov
adc
ret
add
cwde
sub
pop
push
cmps
sbb
idiv
(bad)
sbb
psubd
push
and
outs
push
jl
rcl
dec
test
mov
loopne
add
or
scas
leave
mov
push
pop
mov
daa
(bad)
jmp
fwait
mov
and
xor
jge
jo
sub
sub
(bad)
sub
scas
adc
mov
mov
in
sub
movs
aad
test
psubsb
fwait
cmp
xchg
xchg
repz
add
mul
sub
sbb
rcl
addr16
lods
and
jge
in
jle
dec
lahf
ret
adc
ins
mov
and
jp
push
inc
pop
lods
xor
ins
cmp
scas
retf
inc
pop
sti
sbb
stc
sbb
retf
mov
(bad)
outs
adc
dec
das
outs
xchg
jo
(bad)
(bad)
je
lock
and
or
lods
pop
(bad)
xor
add
pop
das
imul
scas
adc
adc
popf
daa
repz
jne
dec
xchg
aas
mov
enter
in
sbb
adc
dec
cli
cmpxchg
lea
xchg
push
adc
test
movs
inc
adc
dec
pop
lods
inc
and
sbb
adc
sub
mov
mov
out
sub
popa
popf
xor
nop
push
ja
rol
dec
fld
cli
aaa
popf
arpl
ins
dec
adc
shl
test
sub
aas
stos
repnz
and
lds
sub
es
push
fadd
pop
sbb
xchg
adc
fimul
jmp
lods
pusha
les
pop
mov
ja
int3
mov
ret
loopne
pop
add
fild
pusha
xor
mov
pop
xchg
out
jge
xor
sbb
adc
repz
sbb
inc
pop
sub
adc
out
or
jmp
adc
jge
dec
sub
cmp
pop
cdq
jo
pop
xchg
sub
xor
pop
dec
(bad)
push
fcmovnu
in
aad
scas
lock
push
in
int
ins
lods
arpl
or
(bad)
mov
not
fdivrp
cli
dec
sbb
adc
mov
jae
pop
pop
adc
cmps
sbb
test
inc
pop
(bad)
ss
stos
fdivr
push
scas
repz
lahf
sub
or
pop
fcom
cwde
sahf
aas
sti
and
mov
stc
xchg
fbld
fistp
enter
stos
xchg
repnz
dec
lods
gs
clc
pushf
in
push
inc
fmul
push
loop
test
push
pop
inc
push
push
rol
mov
mov
and
data16
push
jb
js
xlat
add
pop
push
cld
push
(bad)
mov
mov
daa
out
xchg
xlat
push
dec
test
sub
push
sub
xlat
xchg
push
and
sbb
pop
push
or
mov
adc
dec
dec
loopne
jne
addr16
in
retf
and
in
mov
xor
or
frstor
loope
shr
and
rcr
rol
jns
cs
dec
add
stc
sbb
das
xchg
outs
push
jmp
dec
lds
push
xchg
dec
sub
inc
xchg
out
scas
xlat
es
ret
jmp
jl
cmp
sahf
add
je
aas
loope
mov
bound
mov
pop
imul
ds
mov
sar
pop
inc
xor
cmp
cmps
aas
cwde
mov
xchg
push
loopne
xor
loop
outs
adc
inc
pop
push
inc
cmp
das
and
and
adc
dec
loop
jg
setb
sbb
nop
mov
(bad)
and
outs
fnclex
sub
xor
into
dec
mov
mov
cdq
popa
ins
in
aam
out
xor
inc
sbb
or
cdq
loopne
mov
int
mov
pop
(bad)
push
fwait
nop
sub
pushf
cwde
ins
adc
push
sbb
sub
sti
mov
stc
mov
dec
cmp
push
shr
jecxz
mov
mov
adc
mov
pcmpgtw
xchg
xor
jecxz
jne
scas
mov
in
lock
adc
cmp
pop
ret
mov
add
adc
scas
dec
loop
(bad)
hlt
int3
dec
int
xchg
call
add
gs
stos
clc
xor
sbb
mov
pop
and
cmp
es
inc
int
and
xor
in
cmp
cmp
mov
lea
mov
stos
mov
xchg
cmp
mov
stc
dec
jge
(bad)
mov
pop
push
lahf
int3
(bad)
jp
xor
(bad)
std
out
mov
ret
aam
icebp
dec
cmp
(bad)
mov
cwde
add
cmp
loope
lods
shl
jb
pusha
cmp
(bad)
out
pop
je
inc
psrlq
aad
lods
mov
in
scas
fidiv
clc
pop
retf
lahf
push
out
and
xlat
mov
mov
sbb
mov
jp
push
pop
lods
aaa
jmp
or
push
dec
sbb
jge
in
jne
dec
retf
xor
adc
adc
test
mov
mov
jb
adc
dec
jmp
aad
lock
push
div
fidiv
cmps
out
stos
jle
cwde
rol
dec
loope
pop
arpl
addr16
sub
mov
loop
jge
xchg
lods
push
jo
dec
cmp
mov
in
mov
xchg
ds
scas
lods
lea
repz
cmp
lods
lods
movs
adc
lahf
jae
int3
jns
mov
xlat
scas
aam
test
idiv
xor
or
fsubr
mov
mov
xchg
mov
jl
jnp
nop
gs
pusha
adc
sbb
mov
into
lds
scas
pop
cmp
or
shl
stos
call
pop
fdiv
cmp
leave
mov
sbb
jns
fistp
jae
jmp
lahf
xchg
inc
inc
dec
inc
jne
test
adc
lods
(bad)
ror
pop
inc
and
inc
aaa
dec
aad
fs
cmp
inc
addr16
fnsave
inc
(bad)
fidivr
xor
in
imul
jb
int3
test
test
pop
test
dec
add
adc
sbb
xchg
(bad)
xor
inc
adc
adc
bound
add
shr
pop
lock
shufps
or
xchg
fmul
cmp
mov
scas
mov
in
sti
enter
pop
les
dec
fmul
sub
stc
inc
inc
adc
mov
jb
int
push
in
mov
stos
xor
push
popa
pop
les
(bad)
push
repnz
inc
xor
call
push
push
sbb
cwde
xor
sub
ror
(bad)
and
push
cmp
(bad)
shr
loopne
aam
cs
pusha
push
and
cmp
in
and
das
rcl
mov
fldenv
inc
inc
aad
dec
mov
mov
xchg
or
xor
push
adc
jecxz
adc
iret
ds
pop
aad
pop
inc
(bad)
pop
mov
ret
push
movs
fist
stos
pop
mov
fwait
iret
retf
(bad)
repnz
shl
int3
pop
scas
pop
fidivr
jp
adc
scas
gs
ja
mov
xchg
punpckldq
push
jp
xchg
cmc
dec
imul
xchg
dec
pop
imul
sbb
pop
(bad)
mov
jno
mov
adc
stos
addr16
lods
retf
xchg
push
add
add
fist
mov
cli
dec
out
sbb
mov
mov
mov
hlt
sahf
dec
into
pop
mov
les
sbb
ss
popa
ret
in
(bad)
outs
fsub
sar
cdq
jae
adc
pop
mov
ins
shr
dec
jl
leave
hlt
in
call
imul
in
mov
adc
not
cdq
dec
imul
lahf
and
fist
loope
fstp
leave
add
mov
fwait
adc
imul
adc
stos
xor
sub
pop
push
pop
xchg
sbb
inc
call
add
out
cmc
sub
and
arpl
add
nop
(bad)
xor
sbb
mov
push
fs
inc
stos
cwde
aaa
mov
or
pop
fcmovne
(bad)
jmp
pop
out
dec
xor
dec
retf
cmp
ror
add
dec
pushf
pushf
sbb
pop
xor
mov
inc
call
and
cdq
dec
ret
sub
js
bound
xchg
test
fistp
ror
cmp
lods
cmps
dec
xchg
ja
(bad)
xchg
jae
xchg
rcl
jl
or
jo
(bad)
stc
out
adc
enter
outs
fwait
and
in
mov
sbb
and
mov
sahf
dec
fwait
jno
pop
push
in
lea
push
es
mov
stc
cmps
xchg
mov
inc
fwait
stos
mov
stos
pop
cmp
and
xor
mov
nop
fidiv
xchg
shl
push
nop
mov
lahf
push
pop
cmps
and
cmp
push
jecxz
out
outs
or
outs
pop
sbb
lock
retf
imul
loop
push
test
and
and
shl
pop
pop
js
retf
outs
sbb
inc
xchg
outs
mov
data16
inc
push
test
fisub
jne
sub
jo
inc
xor
jae
jmp
xchg
push
out
jne
or
enter
jo
xor
jmp
jp
in
mov
sbb
das
cmc
test
lods
pusha
cmp
sbb
loop
(bad)
sti
call
sbb
cmc
shl
movs
inc
mov
push
and
(bad)
xor
pop
es
xchg
(bad)
(bad)
ret
scas
repz
adc
push
scas
pusha
(bad)
imul
popa
mul
pop
and
and
scas
mov
pop
jo
inc
jge
int
xchg
cmp
(bad)
dec
mov
mul
xlat
lods
xchg
hlt
add
adc
mov
fldenv
mov
data16
cmp
cmp
or
scas
setl
mov
or
fs
ret
mov
mov
mov
jge
mov
ja
retf
inc
add
rol
jl
push
cwde
pop
sti
pop
mov
in
adc
dec
leave
jnp
jae
pop
lods
into
cmps
cmps
loopne
ret
mov
bound
mov
and
xlat
dec
xor
push
fadd
in
aam
cmp
pop
movs
jns
cmp
movs
out
nop
xchg
sbb
mov
xor
or
outs
fistp
in
mov
or
or
add
(bad)
xchg
inc
cdq
xor
test
xor
or
fld
js
sbb
jnp
cmp
daa
mov
repnz
add
sti
ja
or
xchg
mov
add
pop
mov
and
aaa
and
pop
adc
xor
lods
jl
mov
mov
dec
or
and
sbb
(bad)
xor
data16
push
int
rcr
pop
cmp
cmp
inc
jne
daa
dec
adc
cmp
out
push
pop
push
pop
xor
jno
adc
ins
sub
sub
jne
push
jmp
inc
(bad)
loopne
xor
cmp
(bad)
push
(bad)
aad
(bad)
je
icebp
fmulp
xor
bnd
push
inc
adc
stc
and
inc
xchg
test
pop
xchg
aad
mov
sbb
mov
push
push
push
inc
gs
ror
mov
mov
jno
cmp
xor
xchg
(bad)
mov
adc
add
scas
fiadd
movs
ja
ret
sar
mov
sbb
neg
add
cmp
xchg
mov
enter
inc
cli
outs
out
jmp
pushf
xchg
push
xor
inc
mov
mov
sti
loopne
sbb
mov
lods
inc
call
outs
test
adc
mov
cmps
stc
bound
mov
dec
pushf
sti
das
jmp
inc
scas
lods
ret
cmp
test
mov
adc
pop
jbe
iret
mov
mov
pop
fstp
jns
ss
mov
xchg
repz
push
push
faddp
scas
movs
lea
mov
inc
pop
sbb
mov
es
sub
or
add
jne
inc
ficomp
jp
jmp
cmp
or
js
dec
mov
mov
push
cli
cmp
cmps
xchg
push
mov
(bad)
test
scas
sbb
dec
inc
sbb
sar
or
dec
retf
fnstsw
rol
adc
mov
xchg
jmp
pxor
loope
xor
test
sti
out
fcom
enter
loop
pop
jo
xor
les
pop
shl
pop
or
jno
xchg
cdq
aad
and
in
jg
sahf
dec
add
add
push
test
mov
or
xchg
fs
dec
mov
mov
cld
jae
or
fwait
sub
xchg
add
shl
iret
cmp
lods
fwait
aas
mov
icebp
out
sub
imul
xor
aad
xor
xlat
or
lea
in
dec
mov
cmp
jle
dec
movs
outs
push
cmc
cwde
jmp
mov
out
xchg
and
outs
rcr
inc
add
lods
cwde
aaa
lods
push
pop
dec
add
and
jle
push
lods
cwde
dec
pusha
cmp
in
int
dec
xlat
out
dec
pop
mov
aad
xchg
cmp
jmp
lods
jb
iret
ins
(bad)
ficom
in
in
lahf
arpl
xor
sbb
add
lods
in
(bad)
jmp
or
xchg
xlat
and
sub
pop
push
dec
cmc
dec
mov
xchg
adc
dec
mov
lods
scas
leave
lock
mov
(bad)
movs
mov
lods
in
imul
call
xchg
sar
pop
aad
adc
sbb
or
mov
jge
loope
sbb
inc
jno
dec
sub
sbb
sbb
out
aam
in
mov
mov
xor
add
pop
scas
fcom
and
pop
ds
jge
xchg
mov
daa
mov
gs
dec
shl
cmps
aam
jo
pop
or
jecxz
sub
inc
or
outs
sahf
mov
mov
and
rcr
pop
mov
dec
adc
pusha
xchg
xchg
int3
cmp
push
test
ins
dec
adc
data16
ja
or
lods
push
and
xchg
int3
mov
repnz
outs
stos
pop
push
aas
cwde
fimul
mov
adc
ret
add
je
ja
movs
mov
inc
push
stos
imul
and
jmp
stc
cdq
repz
inc
mov
adc
movs
xchg
loope
retf
(bad)
xchg
pop
and
enter
in
mov
mov
jg
popa
add
sar
sbb
sbb
(bad)
loopne
out
in
pop
push
icebp
and
and
and
mov
(bad)
addr16
out
inc
jle
xor
xchg
out
mov
sbb
stos
push
pop
stos
ss
dec
ret
xor
cmps
push
push
dec
pop
(bad)
xchg
pop
cmp
push
xor
jbe
xchg
pop
push
push
scas
hlt
mov
es
test
inc
mov
jmp
das
pop
sbb
sub
cmp
pop
xchg
push
or
xchg
cmp
cmp
daa
in
inc
mov
xor
pop
push
pop
das
rcl
sti
stos
adc
or
fist
xchg
(bad)
addr16
add
xchg
pop
aad
out
(bad)
nop
into
mov
and
in
ret
inc
out
frstor
pop
rol
popf
iret
(bad)
fsubrp
adc
mov
push
xlat
loop
push
jecxz
pop
jge
cmp
in
fs
loope
adc
xchg
push
mov
xor
mov
lods
aad
stos
sub
sub
lea
cmps
sub
mov
mov
cmp
(bad)
sbb
cmp
rcr
or
cmp
fadd
push
call
test
dec
dec
dec
call
push
je
jp
call
hlt
pop
pop
inc
cmp
std
push
ror
shl
rol
adc
retf
xchg
(bad)
mov
push
dec
inc
jge
lds
sbb
fs
mov
pop
mov
jg
add
cli
or
cli
icebp
sbb
mov
and
and
data16
iret
sub
test
push
cmp
idiv
add
mov
adc
pop
pop
adc
cs
sahf
mov
test
inc
sub
adc
lock
mov
inc
pop
ins
cmp
imul
shr
jbe
fs
cmp
imul
mov
jae
enter
dec
adc
out
mov
(bad)
aaa
loop
int3
xchg
and
lahf
aas
add
sub
xor
movs
mov
add
xchg
iret
and
das
pop
dec
push
sar
iret
stos
mov
ss
xchg
jp
add
pmaxsw
scas
mov
pusha
aad
inc
les
add
adc
pusha
dec
lock
das
ins
lods
xchg
xchg
mov
sub
mov
ret
into
movnti
sti
sub
inc
dec
mov
hlt
push
iret
loope
jnp
xor
add
lea
ror
mov
cmp
xlat
sub
js
(bad)
sbb
mov
retf
add
test
enter
nop
jnp
dec
jae
nop
loope
cmps
push
sbb
dec
pop
xchg
aaa
mov
dec
pop
popf
popa
dec
mov
movs
cmc
add
sbb
dec
sbb
loop
fisubr
imul
cmp
adc
dec
or
mov
sahf
sbb
mov
in
addr16
(bad)
xor
clc
mov
stc
pop
xor
xchg
inc
sbb
add
pop
adc
jne
in
cdq
cmp
cmps
cmp
mov
retf
dec
jae
xchg
push
inc
stos
and
xchg
push
mov
sbb
inc
pushf
mov
movs
sub
xchg
mov
mov
adc
(bad)
inc
das
or
mov
push
sub
ins
lods
ror
mov
clc
outs
push
xchg
lahf
into
ins
daa
les
mov
loop
shl
or
cld
adc
test
jb
mov
push
add
iret
cmp
push
xchg
cmp
or
xor
push
mov
cdq
jns
add
bound
mov
fwait
or
stos
daa
cmp
jne
push
lahf
outs
and
add
jb
cmovp
mov
pop
sbb
cmps
jne
les
sbb
jmp
inc
sbb
sbb
sub
xor
leave
mov
leave
outs
movs
pop
inc
mov
adc
ror
loope
dec
pop
iret
pop
mov
stos
out
mov
mov
dec
cmp
cmp
pop
xchg
aaa
xchg
sub
stos
mov
imul
jo
add
or
jmp
and
scas
mov
rcl
in
xchg
pop
leave
sbb
rol
jno
or
(bad)
and
inc
pop
leave
out
stos
sahf
mov
mov
lods
outs
push
cmp
pop
mov
cmps
xchg
jle
(bad)
push
mov
mov
scas
ja
adc
jle
jecxz
gs
inc
jb
or
cmp
xchg
fld
and
movhps
movs
mov
cmp
inc
fimul
sub
aad
out
pop
adc
cwde
(bad)
mov
cmp
jmp
and
jmp
xor
jge
xchg
out
xor
test
aas
in
mov
inc
push
and
mov
into
repz
ficomp
fst
or
ins
jmp
cmp
lds
aam
add
mov
sub
add
(bad)
(bad)
std
push
ret
jo
and
or
imul
xor
fldenv
cwde
jge
cs
nop
push
mov
mov
loopne
add
adc
pop
not
aaa
push
ins
add
rcr
das
add
inc
fimul
pushf
sub
nop
aam
pop
lock
push
cmp
pop
(bad)
jno
jne
add
mov
out
bound
mov
cs
stos
iret
fcmovnbe
nop
cmp
push
sar
inc
call
push
xchg
jmp
je
ror
jl
je
cwde
cmp
(bad)
popa
mov
cmp
push
inc
popf
fbld
xchg
movs
xchg
pop
fmul
sub
fld
cmp
scas
jne
jge
repz
fcomp
nop
mov
adc
out
push
or
jmp
mov
icebp
mul
adc
push
push
xchg
mov
mov
psubusw
outs
(bad)
(bad)
mul
jge
pop
(bad)
sahf
add
mov
ret
sahf
inc
outs
xor
leave
cmps
add
gs
jno
sub
fs
mov
lock
dec
int
int3
pop
adc
jne
cmc
or
jne
and
sbb
(bad)
jmp
and
fbstp
pop
popa
mov
mov
mov
push
sub
push
in
icebp
jmp
adc
push
pop
push
scas
(bad)
and
mov
xor
std
jbe
xchg
imul
mov
pop
mov
js
mov
(bad)
jae
xlat
ret
icebp
xacquire
repz
jmp
inc
or
aam
pop
pop
push
xchg
shl
dec
inc
sahf
call
(bad)
mov
mov
mov
jecxz
push
xchg
mov
mov
ror
inc
pop
mov
sahf
xor
mov
and
jp
jne
dec
push
ins
mov
mov
jecxz
div
out
adc
mov
cs
fidivr
ins
mov
int
leave
retf
retf
adc
(bad)
cwde
add
pop
cli
retf
push
in
leave
jecxz
loope
lods
jo
loopne
jmp
cs
mov
cs
jp
cmp
sub
rol
xor
rol
out
sbb
fcmovnb
sbb
in
inc
xor
out
cmp
sub
pushf
(bad)
xor
cmp
push
pop
hlt
jle
mov
out
xchg
cmp
xor
mov
sbb
dec
inc
mov
pushf
ja
jns
daa
jecxz
xor
and
popf
xor
or
lds
outs
cmp
pusha
sub
dec
cmp
mov
mov
xor
mov
push
int3
inc
mov
mov
cmp
call
fdivr
mov
aad
or
rol
pop
aam
scas
pop
jmp
fistp
stc
dec
mov
pop
(bad)
idiv
jo
loopne
popa
ffree
daa
psubd
and
arpl
rcl
lods
fidiv
xchg
jle
sbb
cmp
jg
aam
mov
sbb
fsubr
sub
dec
adc
sahf
push
sar
loope
ja
mov
in
movs
les
stos
(bad)
pushf
es
clc
jg
mov
push
ficomp
jo
retf
les
out
mov
sub
dec
cmp
mov
popf
js
cmp
popf
or
lds
jb
add
sbb
fdiv
or
cli
xchg
cld
add
dec
push
lods
es
xor
out
cmps
cld
retf
lds
mov
fs
retf
pop
mov
and
dec
dec
jae
popa
test
pop
pushf
cmp
cmp
dec
push
xchg
cmp
out
push
call
mov
mov
and
in
mov
shl
cmps
pop
jmp
cli
icebp
cmp
push
dec
dec
or
dec
imul
adc
jb
and
shr
(bad)
mov
mov
lea
iret
mov
mov
ins
cdq
test
xchg
imul
ds
ret
jecxz
mov
fsubr
or
cmp
adc
mov
or
lea
ins
(bad)
dec
mov
dec
jp
push
or
leave
jnp
popf
(bad)
cmp
shl
add
(bad)
pop
sbb
push
sahf
cwde
push
mov
inc
ss
cmp
adc
icebp
jo
xchg
cmp
stc
inc
sub
arpl
jbe
inc
or
jb
xchg
stos
retw
dec
or
stc
(bad)
and
imul
vandnpd
cmp
cmp
sub
cld
sahf
xchg
sbb
jge
mov
aam
add
add
(bad)
in
shr
cmp
cwde
and
lock
test
add
mov
push
imul
pop
and
sub
cmp
rcl
enter
xor
fadd
out
jl
push
push
mov
xlat
cmp
add
iret
arpl
(bad)
sub
push
popf
arpl
mov
inc
test
sub
mov
lods
jg
mov
addr16
jno
xor
add
imul
in
mov
and
jg
dec
es
mov
xor
dec
lods
jp
dec
retf
in
rcr
cmp
jbe
jne
mov
sbb
cmp
(bad)
lock
imul
cmp
pop
stos
push
loop
fistp
ds
or
test
pop
push
dec
or
dec
or
cmc
test
push
cmps
hlt
cmp
push
jle
ret
lods
clc
cld
jle
mov
jge
fs
jns
dec
sub
jne
push
push
cwde
mov
dec
mov
sbb
test
or
aam
pop
mov
loopne
stos
inc
push
add
(bad)
test
inc
(bad)
and
sub
aaa
fst
push
data16
call
jno
sub
sbb
inc
mov
xchg
and
aad
movs
fucomi
jge
inc
jmp
and
(bad)
les
cmp
out
adc
sbb
jecxz
ins
jns
ss
call
sahf
arpl
fistp
fldlg2
jecxz
jge
push
leave
sbb
and
mov
jo
ins
test
xchg
aaa
adc
enter
and
in
jmp
adc
inc
pop
inc
stc
dec
pusha
pop
xor
mov
jmp
mov
xlat
fs
lods
cwde
add
pop
sar
out
mov
mov
pushf
mov
lods
or
sub
push
dec
and
pop
cmps
fiadd
pop
sbb
push
(bad)
neg
movs
dec
dec
loopne
int
out
test
xlat
int3
je
into
add
cmp
xchg
push
push
movs
(bad)
ins
push
cmps
inc
or
sub
xchg
ret
push
aaa
shl
(bad)
or
mov
sub
stos
and
ficomp
or
sbb
shr
mov
jg
and
push
jl
rsm
xchg
or
loopne
mov
imul
xchg
aaa
push
jne
or
call
push
test
sub
pop
cmp
dec
je
arpl
pop
sub
je
stos
shr
xchg
test
inc
js
fldenv
dec
loope
ins
ins
out
mov
(bad)
cli
ret
jge
sbb
jb
or
inc
js
mov
in
push
mov
mov
in
adc
jo
out
out
cmp
pop
xchg
fistp
nop
xor
arpl
jmp
dec
inc
cmps
sbb
push
hlt
adc
inc
adc
dec
cmp
fidiv
sbb
xchg
pushf
icebp
movs
push
repz
stc
xchg
in
adc
inc
sub
dec
sub
xor
jecxz
pop
pushf
jle
fisub
jns
dec
jmp
cmp
xor
pop
bound
addr16
mov
sub
xchg
mov
daa
imul
and
mov
cmc
add
ss
xor
xchg
(bad)
iret
jae
jnp
mov
pop
mov
retf
mov
sahf
arpl
ins
loope
add
push
mov
les
push
mov
loope
jle
dec
push
cmp
mov
scas
outs
and
sar
xor
cdq
ds
(bad)
and
test
add
adc
test
sti
shl
mov
and
cmps
rcl
rcl
sbb
into
pop
sub
pop
pop
fisttp
push
imul
repz
(bad)
xchg
adc
ja
test
call
and
mov
lahf
lods
iret
enter
pop
and
or
mov
and
outs
fcom
mov
mov
push
cmc
sub
cli
fbld
mov
cwde
sbb
mov
shl
dec
push
or
fwait
xchg
add
(bad)
add
out
out
pop
loopne
sbb
aad
or
dec
cld
outs
mov
int3
(bad)
(bad)
adc
ds
aaa
dec
ret
sbb
lea
or
addr16
mov
test
js
scas
je
push
mov
add
fdivr
push
imul
fsubp
cmp
mov
add
xchg
lds
push
push
adc
je
dec
leave
mov
cmp
cmp
inc
adc
(bad)
cli
dec
push
(bad)
mov
jle
test
jmp
push
test
ret
adc
jmp
pop
xor
rol
dec
sub
mov
jns
inc
mov
out
les
pop
adc
push
lods
ja
pop
pushf
stos
(bad)
adc
stos
mov
jge
test
cmp
mov
inc
mov
rcl
xor
cmp
jge
pusha
sub
test
add
inc
push
jbe
cmps
(bad)
push
cmp
cmp
xchg
pop
mov
sub
adc
loop
xchg
sbb
clc
sub
(bad)
mul
out
js
hlt
adc
loope
sub
jg
xor
xchg
xlat
push
sub
sbb
dec
in
xor
ja
cmp
xor
fmul
jp
mov
aas
push
cmp
xor
sti
pop
cmp
out
jns
clc
sbb
ins
add
shl
sub
mov
xchg
scas
fsub
push
clc
sbb
mov
xchg
imul
jmp
inc
(bad)
loop
dec
hlt
cmp
xchg
cmp
mov
xchg
sub
cld
dec
cmps
aam
push
outs
es
mov
loop
xor
test
stos
stos
and
lock
adc
leave
dec
mov
xchg
jge
jmp
in
stc
sbb
cmp
sub
enter
add
sahf
(bad)
fucomi
mov
pusha
ins
adc
fiadd
mov
loopne
cmp
sahf
mov
add
call
sbb
jo
stos
lds
adc
add
out
push
or
in
jnp
data16
loope
sti
je
sub
repnz
shld
inc
fcmovu
int
lock
(bad)
outs
mov
add
mov
push
pop
jecxz
fst
fistp
cmp
sahf
mov
pushf
mov
push
je
adc
mov
das
pop
daa
push
shl
add
or
ja
loopne
dec
xchg
ins
data16
outs
dec
stos
or
add
xchg
test
ds
xor
mov
imul
jl
sbb
aad
dec
add
sar
retf
(bad)
outs
push
sar
mov
or
cdq
sub
shl
pop
scas
les
mov
xchg
push
sub
jo
ins
mov
dec
clc
movs
dec
xor
sub
sar
sub
xor
xchg
nop
mov
cmp
sub
retf
aas
mov
jns
jno
xchg
jo
fs
push
sahf
test
cld
pusha
es
mov
pop
sar
and
add
and
jo
or
adc
in
ins
xor
(bad)
push
popa
or
mov
cmp
inc
sbb
add
adc
(bad)
mov
xchg
jno
(bad)
sbb
mov
stos
sub
into
(bad)
je
mov
mov
jbe
add
push
mov
fistp
jecxz
jle
mov
js
icebp
aam
jb
scas
jg
inc
stos
test
inc
enter
aas
scas
inc
(bad)
cmp
fldl2t
gs
adc
loopne
push
test
test
push
test
xchg
pop
gs
ins
pop
ins
pop
mov
jae
int3
rcl
cmps
inc
or
push
(bad)
ja
loopne
pop
push
cmp
jb
daa
sbb
add
lods
push
sub
div
in
arpl
fstp
and
mov
xlat
xchg
mov
mov
cmps
pop
push
adc
mov
in
add
jge
imul
xchg
stos
shl
inc
xor
jae
jmp
stos
pop
repz
adc
cmp
sbb
sub
xchg
ficom
outs
out
push
add
out
mov
scas
xor
ja
ret
add
fiadd
scas
in
add
jne
mov
or
fs
dec
push
push
xor
aas
ja
push
jb
and
and
or
cmp
js
pop
icebp
je
jmp
pop
jge
jbe
mov
call
data16
jge
sbb
sti
faddp
sub
push
sti
cmp
(bad)
lahf
movs
add
mov
je
xchg
xchg
add
mov
inc
jl
(bad)
xchg
sahf
xor
outs
push
inc
add
pop
repz
adc
imul
or
inc
ret
cs
imul
clc
mov
leave
ss
mov
sbb
shl
and
es
mov
test
movs
in
jbe
pop
adc
dec
call
ds
repnz
adc
inc
pop
and
xchg
test
loope
shl
cld
mov
cmps
icebp
stos
retf
adc
xchg
mov
jne
in
pusha
pop
inc
movs
xor
in
ins
and
test
xor
loopne
jbe
(bad)
sbb
jp
int3
ins
push
xor
inc
jns
and
cmps
out
adc
adc
inc
xchg
xchg
fsub
pop
hlt
jo
cmp
imul
shl
push
shr
push
loope
xor
add
jl
dec
int
pop
call
mov
sub
icebp
lahf
xor
outs
add
mov
jl
ins
pop
lods
rcl
inc
cmp
jp
sub
jecxz
jb
loopne
push
mov
add
test
retf
push
sbb
jb
daa
jae
mov
inc
mov
or
cmps
popa
ins
xchg
popf
rcr
(bad)
popa
sub
fnsave
outs
xchg
adc
push
inc
or
retf
movs
shl
inc
cli
sub
iret
or
cmp
fwait
mov
leave
push
pop
cmp
aas
mov
pushf
xlat
add
je
data16
mov
mov
out
stos
shr
pop
push
cmp
push
sub
stc
mov
xlat
loopne
adc
or
leave
or
jmp
add
mov
inc
add
mov
scas
mov
pop
rcr
pop
and
imul
pop
scas
push
(bad)
arpl
xchg
popf
xor
in
aam
pop
ret
sar
bound
jae
jecxz
mov
js
push
repz
ret
(bad)
or
sbb
mov
sub
adc
out
mov
out
out
scas
sbb
icebp
dec
les
mov
popa
out
imul
xchg
jae
fisub
mov
shr
mov
in
outs
or
gs
jbe
dec
pop
inc
lds
xchg
mov
daa
dec
out
popf
dec
or
jno
fmul
clc
shl
mov
jmp
daa
aas
out
lahf
fnstsw
jmp
inc
push
inc
in
int
bound
ret
add
test
mov
call
xchg
pop
xchg
xchg
mov
fadd
inc
movs
jb
cmp
call
in
mov
push
pusha
or
arpl
fiadd
ret
rol
dec
leave
mov
jns
pop
sub
dec
and
fist
mov
push
or
adc
and
xchg
sub
mov
call
mov
inc
lahf
mov
mov
sbb
int3
pop
dec
out
movs
daa
mov
xchg
push
and
cmp
out
pusha
mov
cmp
(bad)
sub
push
xor
sahf
cli
sbb
lock
and
sbb
ret
pushf
jns
mov
mov
outs
clc
mov
aam
fidivr
mov
or
mov
int
xchg
in
mov
dec
pusha
jge
loop
mov
adc
jbe
iret
and
jns
mov
out
fidivr
mov
hlt
ret
jmp
ret
dec
pop
jge
mov
jmp
sbb
dec
(bad)
sub
jge
push
xor
cmp
aas
and
movs
int
xchg
and
push
imul
xor
cmps
cmc
push
mov
pop
or
mov
dec
dec
adc
adc
arpl
jle
mov
xor
push
out
fwait
mov
adc
test
xchg
aas
gs
pop
cdq
mov
stos
imul
push
fsubr
lock
outs
mov
push
xchg
inc
sbb
xchg
retf
(bad)
jle
das
mov
add
inc
xchg
and
pop
or
rol
mov
imul
xchg
(bad)
aad
pop
pushf
popa
in
or
pop
fadd
mov
ss
aam
jge
popf
and
jle
mov
aam
adc
imul
cmp
or
sub
mov
adc
xchg
cmc
div
fistp
(bad)
sub
test
aam
mov
nop
jmp
aas
dec
repnz
(bad)
fadd
arpl
cmp
outs
mov
out
pop
adc
jmp
mov
(bad)
jmp
jmp
xlat
push
mov
or
sbb
sbb
add
adc
sbb
je
scas
cld
pop
repnz
in
gs
or
outs
pop
push
popa
or
aam
push
movs
mov
xor
jl
stos
add
fbstp
call
cmp
add
pop
push
and
(bad)
int
rol
out
adc
jle
inc
outs
and
cmp
dec
(bad)
pop
call
neg
sbb
dec
cs
sub
es
fwait
push
push
dec
dec
xchg
inc
adc
pop
xor
loopne
xor
mov
ds
test
cli
(bad)
not
daa
add
in
hlt
inc
dec
mov
pop
ss
fwait
add
dec
repz
neg
sbb
jp
push
jmp
not
push
or
sbb
jp
cmp
xchg
pop
xchg
pop
fcom
xlat
rol
gs
std
inc
cmp
inc
inc
jae
lods
pop
shl
or
adc
icebp
cmp
mov
inc
(bad)
add
xor
data16
div
cdq
mov
jmp
mov
jnp
xchg
aas
(bad)
sti
and
in
mov
rol
cmp
rdmsr
xor
xor
cld
mov
and
cmp
iret
jne
cmp
inc
push
mov
sbb
xchg
pop
adc
ja
loopne
xchg
sbb
(bad)
enter
gs
push
and
(bad)
jge
addr16
adc
pop
out
rcl
jle
not
ds
mov
out
rol
ror
ss
adc
pop
xchg
in
mov
shr
pop
das
add
fnstsw
xchg
push
ret
movs
daa
inc
jns
adc
mov
jmp
call
imul
test
js
mov
pop
mov
mov
scas
sub
call
imul
xchg
and
jp
adc
nop
mov
and
add
retf
addr16
pushf
sti
xor
fwait
jle
jno
mov
jmp
jo
cmp
and
jno
inc
jbe
sbb
shl
in
pop
sbb
sub
xchg
stos
mov
loopne
mov
jo
mov
jg
gs
pop
imul
js
dec
aam
jmp
inc
inc
push
xor
sub
mov
cld
dec
data16
push
fistp
jge
mov
shl
push
retf
and
xchg
(bad)
push
lea
push
xor
dec
sub
rol
and
retf
fmulp
dec
outs
in
cmc
xor
adc
push
loope
iret
xor
in
inc
(bad)
cmp
adc
enter
in
sar
push
pop
pop
(bad)
adc
fcom
movs
mov
add
pop
or
shl
jno
add
fist
mov
je
cli
inc
xor
adc
int3
push
cld
mov
or
cmps
jno
sbb
push
(bad)
mov
dec
adc
(bad)
cmps
sbb
les
jmp
add
mov
nop
cli
int3
dec
jo
xchg
and
or
push
mov
addr16
sbb
movs
adc
cmovb
or
xchg
scas
loope
cmp
add
ret
imul
imul
mov
aad
aad
pushf
ja
xchg
mov
in
jmp
call
loope
dec
push
pop
mov
outs
(bad)
(bad)
jecxz
imul
push
xchg
retf
(bad)
fs
xchg
push
mov
call
sbb
daa
retf
lahf
(bad)
repnz
fstp
add
sbb
sub
xor
push
scas
fistp
jle
dec
cmps
xchg
xlat
addr16
daa
loopne
mov
stos
add
retf
add
mov
mov
adc
mov
xchg
sahf
imul
pop
mov
fidiv
mov
outs
(bad)
ja
xor
or
sbb
sbb
jmp
loop
pop
(bad)
retf
rcr
add
add
movs
adc
push
jb
stos
rcl
dec
adc
sub
mov
and
call
int3
retf
inc
ss
int3
xchg
outs
int
pop
or
jecxz
dec
clc
jle
adc
loopne
cmp
sbb
mov
cld
cwde
and
(bad)
frstor
in
adc
mov
dec
mov
icebp
push
jg
pop
xchg
fdivp
in
jo
cmc
pop
in
ins
ficomp
mov
fimul
cmps
sbb
sbb
xor
mov
stos
sti
jbe
aam
in
jo
or
push
test
call
retf
pusha
inc
sti
or
push
shr
cmp
sub
retf
push
mov
dec
xchg
push
adc
dec
sub
push
fs
xor
(bad)
mov
(bad)
(bad)
repz
xchg
push
xchg
push
aam
out
or
cmp
mov
mov
mov
inc
push
mov
mov
sti
inc
mov
lods
icebp
ins
(bad)
ds
fisubr
mov
or
sub
les
js
cli
xor
dec
xchg
sbb
and
shl
and
scas
call
in
sub
dec
mov
stos
out
(bad)
and
sub
cmp
mov
stos
loope
push
jmp
ds
pusha
jb
imul
addr16
push
imul
xchg
push
xor
jne
mov
dec
xchg
sbb
dec
push
jg
aaa
sbb
cmp
xchg
nop
lods
mov
imul
cmc
xor
retf
dec
pushf
jno
call
jl
pop
dec
jge
dec
sbb
xchg
xchg
pusha
ss
pop
sub
push
jns
sahf
scas
sub
xchg
jmp
cmp
fisub
mov
es
jne
test
inc
cmps
jmp
pop
or
push
std
lock
ds
icebp
lods
mov
sbb
jns
loope
adc
lods
into
push
sub
ins
retf
imul
inc
sub
push
jae
sub
int3
mov
lods
mov
cmp
mov
enter
movs
mov
call
jge
cmp
jmp
iret
pop
pop
xchg
cwde
addr16
nop
cli
bound
push
(bad)
cld
mov
jae
clc
xor
ror
das
inc
mov
out
or
sbb
pop
add
xor
(bad)
dec
xchg
push
xchg
add
inc
push
sbb
inc
ins
mov
cmp
dec
sub
dec
adc
adc
mov
rol
mov
repnz
int
xchg
sbb
sbb
or
sbb
lods
mov
add
sbb
push
xchg
inc
(bad)
mov
fild
pop
out
mov
add
icebp
mov
inc
mov
lahf
push
mov
xlat
stos
adc
mov
mov
mov
mov
mov
cmps
jl
lods
pop
xchg
push
xchg
and
call
bswap
mov
sti
out
jmp
xor
fst
dec
inc
adc
mov
add
xor
push
jp
fs
xchg
inc
imul
or
pop
mov
fs
dec
adc
mov
pop
sub
mov
sbb
xchg
cmp
cdq
je
aaa
movs
xor
ins
pop
cmps
cld
cmps
push
xor
cdq
stc
movs
dec
inc
or
sbb
xchg
repnz
dec
mov
fwait
push
xchg
scas
ja
lods
cs
(bad)
cld
and
xchg
clc
jmp
xor
jae
jnp
in
out
jae
das
or
sub
nop
adc
shl
sbb
dec
sbb
add
pop
mov
aam
lods
in
mov
fild
loop
cmp
mov
dec
std
mov
jmp
aam
fsubr
xchg
sub
xor
data16
jmp
call
ins
mov
xchg
push
into
push
mov
mov
mov
dec
dec
sbb
js
mov
rcl
cli
call
push
mov
mov
out
xchg
fsub
jne
(bad)
and
add
aas
push
push
or
jecxz
out
push
or
cli
inc
mov
jp
mov
test
xchg
mul
mov
retf
clc
popf
adc
stos
adc
or
mov
inc
mov
rep
jo
mov
hlt
test
jg
jg
sbb
sbb
test
mov
imul
dec
mov
cld
fst
xlat
int3
mov
mov
inc
aas
xor
popf
ror
shl
loop
xchg
push
int
pop
or
iret
adc
dec
loop
out
pop
das
or
inc
push
in
in
icebp
cmps
and
retf
and
les
and
sub
dec
jo
jge
or
popa
push
addr16
test
jae
mov
jmp
sbb
leave
push
mov
xor
retf
or
ret
sbb
out
jge
sub
mov
xor
jnp
loop
mov
cmp
mov
hlt
mov
(bad)
std
pop
hlt
cmp
pop
inc
inc
jae
and
les
xchg
xor
adc
shr
add
and
call
mov
jno
jg
mov
outs
push
int3
int
clc
mov
xchg
cmps
in
aaa
sar
cmps
jno
outs
mov
adc
sbb
xchg
mov
pop
xor
test
dec
fdiv
jp
pop
sbb
adc
sbb
mov
lds
jge
add
es
sub
push
ret
jb
jno
sti
mov
add
out
cmp
call
mov
pop
shl
pop
or
ucomiss
or
sar
cli
jns
loope
fcom
movs
xchg
mov
pop
aas
test
in
imul
jno
stc
mov
rcr
add
xlat
xor
repnz
jmp
(bad)
in
ror
sub
xchg
ja
xchg
mov
popf
sbb
sahf
lds
mov
inc
les
xchg
push
iret
retf
mov
cmp
add
xor
test
js
out
movs
iret
push
enter
or
test
mov
pop
inc
dec
push
add
repz
push
test
pop
xchg
dec
add
nop
scas
test
jno
mov
loopne
and
xor
mov
mov
dec
adc
xchg
push
xchg
inc
aas
retf
push
cmp
lahf
pop
int
sbb
aam
mov
sub
add
int
iret
dec
retf
fnstcw
push
mov
cli
mov
inc
loopne
jns
dec
sub
mov
or
sar
pop
xchg
inc
aas
enter
xor
arpl
cmp
push
bound
sahf
loop
aad
sub
repnz
or
pusha
jmp
jmp
and
jns
mov
movs
stc
clc
outs
cs
int
mov
cmp
pop
(bad)
xchg
pop
int3
sbb
xor
outs
xor
int
pop
mov
push
jmp
fwait
mov
arpl
mov
mov
sbb
dec
(bad)
nop
sub
or
out
mov
and
mov
push
pop
adc
inc
sub
call
test
inc
aam
jmp
les
retf
mov
inc
imul
push
cmc
movs
add
mov
cmp
jl
loop
or
sbb
sti
inc
push
dec
push
fcomp
popa
dec
nop
icebp
test
in
mov
rcl
loop
cmp
mov
mov
or
cs
das
fld
fimul
inc
sub
cmps
cmc
dec
lock
pop
mov
jne
inc
test
jl
push
inc
inc
shl
xor
in
mov
retf
stos
jp
fsubr
inc
test
xchg
ror
adc
fcomp
jae
xor
cmc
jg
sbb
pop
push
(bad)
enter
dec
out
ret
inc
xchg
pop
mov
jno
pop
(bad)
aad
je
test
stos
dec
push
xchg
pop
cmps
cmc
(bad)
pop
pop
test
jmp
or
dec
sbb
pop
inc
and
push
loopne
movs
xor
inc
pop
mov
add
xchg
js
outs
jne
fmul
pushf
jmp
aam
add
sar
mov
xchg
movs
pop
stos
jp
inc
stos
fnstcw
xlat
push
sub
call
sub
lds
mov
adc
and
xchg
lock
adc
jg
and
push
xlat
mov
dec
rcl
jbe
inc
add
sub
jnp
sbb
mov
test
xor
std
mov
inc
pop
ret
push
outs
jb
js
jne
mov
shl
outs
rcr
aaa
mov
ss
lock
sub
sti
mov
cmp
push
fstp
sbb
cwde
and
repnz
jae
jns
in
int3
mov
or
xchg
ss
push
sbb
cmps
xor
pop
in
jmp
inc
or
mov
fld
jns
test
stos
pop
or
fld
call
lods
ficom
and
push
sahf
xor
and
jge
sub
add
xor
in
jne
mul
aam
clc
xor
clc
mov
mov
mov
stos
mov
mov
sub
out
fstp
push
dec
or
and
push
xor
ret
add
mov
icebp
mov
loope
adc
gs
pop
add
mov
movs
test
cwde
and
loope
ret
pop
in
enter
sar
push
mov
in
sar
pop
(bad)
mov
inc
adc
jno
lods
retf
push
pop
ror
dec
mov
cmps
push
push
pop
int
out
aad
push
jl
add
mov
push
outs
call
xor
test
cld
out
xor
xor
cwde
sar
mov
test
mov
pop
outs
loope
ds
sbb
es
in
movs
jne
push
adc
neg
fdiv
xchg
ins
jb
fwait
loope
inc
or
stos
adc
shr
mov
add
push
adc
ins
(bad)
xchg
fld
cmp
dec
hlt
mov
(bad)
inc
imul
in
pop
int
add
mov
xchg
and
adc
push
mov
and
into
ror
pop
loop
pop
inc
and
cmc
aas
out
mov
mov
shl
fiadd
(bad)
int
xchg
ret
sub
push
ins
adc
xlat
dec
inc
pushf
int3
inc
pop
adc
jbe
push
dec
fimul
cmp
and
sub
bound
push
mov
es
iretw
fcom
dec
adc
in
push
movntq
xor
outs
xor
mov
aad
cmp
stos
rcr
push
dec
xor
cli
sub
sbb
cs
add
lock
retf
ins
dec
and
mov
add
push
mov
jmp
or
out
out
popf
mov
out
iret
repnz
lock
xchg
retf
(bad)
jmp
aas
sbb
cmp
cli
push
ss
fist
test
dec
leave
xor
(bad)
outs
rcr
jno
add
lea
jle
rol
mov
ins
repz
std
push
mov
add
xor
sbb
mov
inc
mov
(bad)
mov
and
cli
add
sbb
cmp
inc
js
mov
ret
les
fdiv
xchg
adc
mov
push
add
add
inc
pop
dec
add
mov
sbb
loop
pop
mov
fs
and
mov
xor
(bad)
repz
or
inc
pop
sbb
xchg
pop
lahf
out
cli
cld
fcmovb
or
mov
jecxz
dec
les
retf
outs
push
add
cmp
sub
loopne
jns
daa
add
cli
jle
inc
xchg
test
adc
aad
clc
in
ficomp
xlat
pop
jnp
or
retf
ja
dec
or
out
popa
jg
dec
xlat
dec
sbb
add
int3
cmps
mov
cmp
mov
push
add
jg
scas
idiv
nop
scas
pop
add
je
fsubrp
sub
lods
and
loop
push
sti
test
or
mov
pop
imul
adc
or
adc
push
cmp
shr
gs
leave
or
ds
inc
ret
ret
pop
adc
in
aaa
add
sub
pushf
add
bswap
mov
fild
cmp
jle
xchg
idiv
lock
repnz
cmc
int
inc
mov
jbe
call
int
adc
gs
cli
fdiv
inc
jne
xor
ror
inc
xchg
push
ret
mov
and
pop
retf
adc
lods
ret
cwde
add
test
sbb
(bad)
jp
loop
out
outs
mov
hlt
clc
add
cdq
sbb
ret
xor
sub
pop
sub
repnz
das
mov
sub
or
xchg
cmp
push
xchg
dec
sbb
test
test
ins
je
(bad)
stc
lods
cmp
or
and
and
cmp
or
jno
neg
xor
xchg
xlat
jnp
and
ja
sti
jp
out
mov
push
mov
imul
cmp
or
or
test
pop
fst
xor
scas
sti
and
or
je
pop
(bad)
and
fild
add
ins
icebp
adc
mov
cmp
pop
aam
mov
cmps
jge
movs
in
ins
cdq
push
push
xchg
dec
dec
inc
and
rcl
cld
inc
pop
popa
pushf
or
xabort
sub
push
mov
push
ins
retf
sub
cmp
out
sbb
dec
push
mov
in
stos
popf
cld
jmp
mov
pop
xchg
in
fdiv
cld
ffree
(bad)
sub
mov
cmp
jno
jmp
div
xchg
push
dec
call
mov
dec
scas
stos
test
ins
loop
inc
push
repz
repnz
mov
jecxz
mov
es
push
add
ins
inc
jge
jecxz
pop
iret
ss
xor
cli
test
lahf
out
push
inc
retf
dec
in
push
loopne
cmc
push
pop
push
ins
das
imul
mov
or
xor
and
pop
std
ds
sub
jnp
ret
inc
xchg
aas
xor
mov
and
xchg
or
enter
mov
push
or
xchg
pusha
dec
fstp
lods
iret
xlat
inc
mov
dec
retf
imul
sbb
xchg
loope
movs
out
in
sub
mov
(bad)
or
xlat
mov
jno
or
push
retf
lock
sbb
or
add
retf
dec
retf
movs
sub
movs
mov
jb
inc
gs
jecxz
push
ret
pop
mov
jl
ss
push
jns
adc
and
imul
dec
adc
ror
pop
mov
push
shl
retf
loope
inc
outs
ret
test
push
outs
retf
(bad)
pop
outs
cli
les
dec
repnz
push
and
clc
cwde
test
ins
adc
pop
test
and
scas
in
fdiv
xchg
or
scas
dec
xchg
jo
arpl
dec
int
sub
not
cs
ins
jg
sub
xor
shr
leave
mov
inc
ret
ret
mov
lock
mov
push
out
and
mov
popf
jmp
outs
xchg
add
loope
jmp
shl
ins
inc
mov
xor
add
push
push
mov
stos
jae
dec
movs
or
xor
icebp
rcr
adc
clc
sbb
xchg
hlt
icebp
shr
and
data16
push
dec
shl
cld
sbb
sbb
or
xor
mov
iret
dec
add
xor
sti
xor
std
loope
push
add
ficom
aaa
aaa
jge
mov
sub
rcr
sub
mov
push
pop
mov
aam
push
inc
fmul
add
leave
stc
or
movs
xlat
stos
or
mov
sub
dec
cmc
push
push
in
inc
test
jnp
dec
jno
fnstenv
loop
dec
sub
add
sbb
loope
jle
adc
add
xchg
or
lds
dec
into
pushf
test
fmul
fmul
inc
sub
arpl
(bad)
sti
xlat
push
adc
inc
leave
inc
push
aad
cmp
popa
rcr
cs
xchg
mov
retf
jmp
adc
div
inc
scas
cmp
xor
adc
inc
lds
dec
ficomp
and
xor
test
add
test
cs
xchg
(bad)
dec
int
push
push
mov
int3
adc
fst
sbb
js
enter
cs
adc
sbb
xlat
mov
mov
fsubp
iret
adc
shl
clc
dec
jge
stc
inc
and
push
jle
loopne
retf
in
aad
xchg
stos
mov
push
xor
iret
and
lds
bound
iret
xor
add
mov
pusha
jae
test
and
scas
pop
mov
sbb
aam
rcr
push
mov
cmc
lea
jp
data16
xchg
retf
mov
jmp
in
(bad)
sub
sub
mov
sti
xchg
movs
sub
std
cmp
add
and
adc
movs
ret
and
into
push
lahf
push
dec
xor
mov
sti
popa
push
out
xor
add
aas
xchg
and
jecxz
cmps
dec
xlat
mov
imul
or
or
lahf
fild
fs
jne
stos
jns
jmp
sub
mov
inc
and
loope
fwait
dec
dec
leave
mov
jns
sti
xchg
out
lock
stc
sub
cdq
(bad)
dec
arpl
mov
fs
sbb
xchg
and
gs
outs
outs
pop
jb
dec
sbb
stos
mov
ja
aaa
repz
inc
(bad)
mov
out
or
daa
mov
out
(bad)
loopne
or
xor
cmp
add
daa
addr16
jmp
add
mov
sbb
mov
push
sbb
ja
popf
pushf
adc
inc
push
cmc
fsubr
out
popf
mov
mov
icebp
mov
stc
pop
mov
inc
stos
pop
cmp
add
fnstcw
(bad)
aam
test
iret
pop
(bad)
mov
daa
jnp
aaa
push
push
push
inc
mov
les
cmps
bound
sub
xor
inc
ja
js
inc
lods
adc
jns
fwait
mov
cmp
mov
bound
in
mov
retf
mov
mov
aad
sbb
cmp
jae
ss
dec
jmp
ins
(bad)
aam
push
aad
cmp
test
sub
(bad)
scas
mov
std
jmp
in
fcom
mov
jns
loope
pop
xor
aam
xchg
inc
rcl
pop
xor
mov
test
mov
scas
dec
retf
fwait
mov
push
test
pop
or
xor
mov
test
jp
ins
adc
pop
pusha
jnp
cmps
add
inc
cmc
neg
(bad)
push
aad
aam
lea
pop
js
mov
ja
ss
mov
loope
rol
jmp
push
mov
xchg
inc
repz
out
and
pop
inc
repz
or
cli
pop
jmp
cdq
leave
or
cmps
cmps
pop
fcmovbe
popf
ror
stos
adc
xchg
mov
in
xor
ins
jbe
xchg
imul
ret
mov
jo
(bad)
iret
inc
cs
movs
push
push
mov
cli
stc
xor
adc
push
push
sub
lahf
lods
push
jae
dec
or
in
and
in
and
dec
lahf
js
imul
sbb
out
ret
xchg
call
imul
call
int3
xchg
jmp
mov
add
aam
sub
cmps
mov
add
inc
mov
push
jle
jo
adc
shr
aas
rcl
cmp
mov
test
pop
shl
nop
stos
aas
lds
movs
stos
shl
test
retf
and
enter
sbb
fistp
mov
dec
in
inc
or
ins
dec
cdq
dec
pop
adc
int3
xlat
cmps
ja
cmp
bound
lods
cmc
jbe
inc
inc
rcl
cmp
ret
xchg
cmp
dec
fs
neg
mov
sub
ror
iret
jo
jmp
nop
sub
mov
push
inc
aad
movs
lahf
sahf
sub
ss
imul
call
pop
out
in
sbb
cmc
ret
pusha
jmp
cs
int3
mov
stos
ins
pushf
fiadd
adc
hlt
(bad)
call
call
cld
jg
adc
test
mov
cmp
xor
mov
rcl
(bad)
dec
fisubr
jg
sbb
std
cmp
dec
mov
leave
push
xchg
shr
pop
retf
not
imul
stos
lahf
push
push
movs
out
dec
aam
lahf
imul
out
add
adc
in
ss
add
sbb
lahf
mov
movs
sar
push
std
xor
mov
fwait
mov
sti
mov
jg
int
cs
push
pop
pop
adc
adc
mov
pop
jb
mov
jne
bound
xchg
lds
jno
pop
les
mov
sbb
ret
imul
pop
mov
sbb
cmp
shl
and
cmp
cmc
stos
icebp
leave
lahf
jge
aaa
xchg
sub
push
mov
pop
and
push
xchg
imul
inc
repnz
push
into
lds
sbb
pusha
idiv
sti
hlt
rcr
and
dec
push
ds
and
mov
and
movs
imul
out
adc
inc
in
ss
fnsave
pop
fdivp
mov
rcr
xchg
nop
and
xchg
imul
movlps
sbb
(bad)
stc
retf
pop
add
mov
pop
(bad)
outs
mov
jmp
call
mov
sub
adc
stos
lahf
sub
popf
pop
cmc
lds
fst
or
inc
add
or
in
jbe
cmp
aas
fstp
mov
popf
or
gs
jp
xor
jb
mov
sub
sub
movs
(bad)
test
sub
push
pop
adc
aas
in
add
daa
mov
fmul
mov
xor
div
add
mov
sub
(bad)
sbb
cmp
enter
mov
call
fimul
lods
xchg
xor
dec
push
out
lods
test
push
inc
pop
shl
ficomp
das
jbe
ins
ret
fmul
repz
fwait
cwde
mov
loopne
sub
mov
cmp
sub
jne
scas
les
and
enter
push
push
sar
fidivr
jmp
je
sub
sub
jo
push
sub
fisttp
fdivr
cdq
sbb
xchg
repnz
xchg
jno
out
inc
aas
mov
lock
mov
mov
dec
cmp
xchg
mov
mov
bound
daa
or
xor
enter
xor
test
sar
mov
mov
imul
inc
loope
adc
stc
or
mov
and
fisubr
mov
cli
dec
mov
add
push
xchg
movs
aam
leave
push
push
and
adc
aas
push
push
popf
xor
int3
mov
jecxz
sbb
mov
push
(bad)
fcomp
or
(bad)
lods
sbb
clc
int
sub
pop
cmp
cmp
dec
jecxz
pop
and
jo
push
cdq
jge
(bad)
ret
movhps
lds
sbb
loop
xor
mov
or
sbb
mov
xor
rcl
aam
ja
and
leave
xor
jmp
lea
jno
sahf
rcr
mov
cli
int3
lea
adc
fisttp
ficomp
sub
fs
out
cdq
dec
sub
add
lahf
xchg
mov
mov
in
or
add
push
paddusb
cmps
sub
scas
xchg
push
and
into
into
and
xchg
jbe
ss
and
adc
cmps
aam
loop
sbb
cmp
div
jmp
sub
movs
jl
or
cmp
jmp
adc
mov
cwde
rcl
aam
outs
sbb
mov
push
fdiv
jne
pop
jb
enter
fs
inc
push
lds
and
outs
jp
mov
pop
popa
adc
icebp
pop
cmp
or
leave
sub
add
ss
mov
or
xor
or
imul
inc
mov
pcmpgtd
je
jge
rcr
or
popa
(bad)
jmp
test
inc
hlt
nop
icebp
gs
ret
add
das
jl
cmps
dec
push
je
jg
jbe
adc
rcr
mov
mov
ret
jno
mov
xor
sbb
xor
neg
cmp
dec
out
(bad)
sbb
jae
xchg
(bad)
into
fcmovnbe
inc
jbe
scas
mov
in
(bad)
and
repnz
adc
inc
add
sbb
test
jmp
sti
jmp
test
lea
rcr
es
and
sub
test
call
es
imul
mov
xchg
xor
adc
xchg
fcomp
xchg
xchg
pop
and
repnz
addr16
inc
add
iret
popa
hlt
push
xchg
sar
mov
(bad)
mov
test
movs
sub
mov
ins
dec
push
jb
mov
test
pop
mov
mov
out
imul
(bad)
mov
js
aaa
jl
loope
out
pop
(bad)
stos
mov
xor
enter
xchg
cli
sub
ss
fld
and
xor
mov
dec
jle
mov
into
fsub
or
retf
sub
frstor
imul
inc
add
sub
fwait
push
stc
adc
mov
fistp
sbb
cli
or
add
shl
mov
and
push
jmp
pop
stos
rcr
es
mov
sahf
and
shr
pop
jecxz
and
push
call
mov
(bad)
cli
dec
sar
or
(bad)
and
dec
push
call
int3
hlt
sti
rcr
ds
out
outs
retf
adc
mov
push
xchg
push
inc
sub
repz
fcomp
ficom
shl
sub
in
pop
rcr
mov
fcmovb
inc
xchg
sub
adc
iret
outs
dec
push
jmp
mov
fisttp
call
arpl
rcr
movs
(bad)
repnz
add
imul
lods
int
cmp
out
dec
outs
jne
in
xor
fdivr
fld
add
mov
jle
mov
add
sbb
jae
mov
shl
add
mov
and
mov
das
into
add
test
idiv
pop
ficom
in
retf
push
sub
cmp
mov
mov
cmp
mov
add
xor
addr16
ret
lea
lea
mov
je
inc
in
sahf
fild
pop
stc
in
xchg
push
stos
fcom
jle
clc
aam
repz
mov
out
fisttp
sahf
push
mov
cmp
imul
ja
sub
push
or
inc
(bad)
xor
jle
test
adc
daa
(bad)
cmp
adc
je
mov
int
sub
int
jle
and
lds
xor
popf
std
mov
mov
sbb
hlt
jo
(bad)
xor
dec
or
xor
or
xchg
call
xor
es
popf
mov
cmps
dec
mov
repnz
jo
dec
retf
mov
jmp
jns
fcom
push
mov
not
lahf
in
dec
pop
pop
jl
mov
sub
adc
in
add
xchg
retf
(bad)
mov
add
(bad)
div
mov
pop
ds
mov
sbb
clc
or
xchg
jo
imul
jb
xor
push
or
test
arpl
inc
aad
adc
(bad)
lods
mov
jl
adc
push
movs
sar
xchg
icebp
es
(bad)
cmp
ficomp
shl
dec
pop
pop
xor
test
pop
dec
ror
push
or
popf
fimul
push
stos
mov
fadd
test
(bad)
bnd
fild
mov
outs
(bad)
stos
cmp
push
fmul
push
cli
jno
dec
sbb
push
and
ret
and
in
cmp
push
aam
lahf
repz
enter
into
das
lahf
pop
sub
out
xchg
jb
xchg
pop
lea
test
rcl
pop
jns
loope
fst
(bad)
mov
(bad)
sbb
mov
(bad)
ficom
mov
add
pop
fst
into
sub
and
mov
scas
add
test
loope
jbe
jno
fimul
mov
inc
mov
mov
adc
into
jg
daa
dec
fsubr
outs
shr
cs
out
(bad)
std
add
fidiv
inc
and
cmps
xor
push
iret
test
outs
and
xchg
sbb
popa
adc
xchg
pop
hlt
dec
mov
retf
(bad)
std
sub
sub
aad
jae
loope
cmps
and
add
mov
inc
jg
mov
adc
mov
(bad)
xchg
xchg
xlat
adc
sbb
aaa
add
repz
in
mov
aad
imul
ret
cmc
into
aas
jl
(bad)
lods
inc
cmp
mov
cmps
inc
popa
jge
adc
add
daa
jne
inc
int
dec
cmp
adc
out
jmp
cli
mov
leave
add
dec
(bad)
loope
pop
xchg
mov
stc
imul
out
in
cmp
ror
ja
or
cmp
daa
adc
mov
mov
xchg
jge
add
mov
inc
call
aas
inc
push
xor
out
xor
in
into
movs
lahf
dec
stos
repz
data16
std
out
ins
inc
or
ja
inc
xor
xor
jmp
rcl
add
loop
(bad)
sahf
imul
push
inc
adc
call
pop
or
adc
outs
pop
jno
mov
clc
fst
cmps
jae
vshufpd
adc
mov
mov
retf
and
mov
neg
jge
push
sub
and
pushf
adc
add
jno
cmovb
sub
repnz
push
js
ret
push
scas
push
or
(bad)
pop
jmp
and
dec
icebp
mov
mov
cmp
sub
mov
and
dec
and
push
jp
in
jl
pop
jmp
in
push
inc
icebp
jge
fidiv
add
cdq
imul
mov
jnp
int3
movs
out
sbb
mov
fild
xchg
mov
xor
push
shr
mov
loop
push
mov
clc
stos
cmps
xchg
jmp
adc
lds
cmp
fs
vphaddubd
push
xchg
xor
mov
xchg
jmp
add
push
leave
mov
push
cs
popa
push
sbb
cdq
sahf
add
jno
jne
push
and
add
(bad)
loopne
push
mov
scas
xor
movs
inc
adc
cmp
pop
mov
mov
pop
cld
sbb
outs
hlt
pop
xchg
hlt
fnstcw
ins
das
push
mov
fidivr
push
push
cli
js
pop
ficomp
stos
push
or
sub
mov
jp
int3
xor
shl
add
out
dec
retf
les
clc
pop
push
dec
call
int3
dec
sub
push
mov
pop
fdivr
loope
in
das
and
jne
mov
xchg
push
dec
mov
mov
inc
clc
xchg
sbb
inc
les
and
pextrw
addr16
or
jecxz
xchg
cmp
lods
inc
ds
cli
cmp
inc
inc
popa
test
iret
or
sbb
movs
je
inc
mov
sub
cmp
loope
aad
lods
outs
(bad)
fstp
xlat
jo
dec
pop
pop
or
ja
adc
or
pop
inc
mov
ds
int3
adc
xor
mov
outs
outs
icebp
push
cld
sub
dec
or
add
push
vmovss
outs
in
in
mov
aad
dec
iret
or
loop
pop
cmp
xchg
pop
mov
aad
in
mov
mov
dec
jns
or
jns
mov
dec
fstp
adc
ss
cli
pop
adc
mov
jb
movs
xchg
jns
je
inc
adc
mov
or
les
push
lods
mov
and
dec
adc
xor
imul
rol
and
sbb
ins
mov
call
mov
push
outs
mov
mov
outs
mov
and
gs
in
outs
mov
mov
dec
stos
inc
int3
in
jmp
in
ins
jl
lea
push
scas
pushf
sub
mov
clc
aam
loope
pop
cwde
inc
add
test
out
dec
and
adc
retf
es
xor
test
lds
(bad)
leave
rol
stos
cmc
stos
sbb
rcr
scas
push
inc
sub
or
mov
pop
jne
sbb
push
cmp
pop
test
jmp
cmps
jae
or
mov
cmps
xor
fisttp
jnp
pop
cmc
(bad)
leave
mov
mov
jmp
(bad)
js
mov
mul
mov
jl
test
sub
in
rcr
jne
xchg
pop
and
jecxz
es
sub
push
or
ficom
xor
ficom
pusha
retf
inc
lods
mov
xor
out
bnd
lds
fwait
push
push
sbb
dec
movs
mov
jl
mov
adc
inc
xor
in
addr16
mov
fwait
xchg
cmps
mov
pop
pop
jmp
xchg
fnsave
mov
mov
retf
retf
sub
and
lock
xor
fistp
popf
repnz
test
sub
int
in
arpl
jmp
loopne
push
pop
mov
push
mov
sar
scas
call
sbb
mov
cli
xlat
ss
add
cs
je
retf
xchg
sub
test
push
ins
out
cmp
push
push
fwait
lods
push
loop
js
push
sub
or
jp
mov
sub
mov
pop
test
push
push
dec
mov
imul
sbb
mov
js
rcl
or
push
inc
jb
sbb
mov
data16
and
rol
sar
jno
xchg
outs
add
push
sub
mov
xchg
xchg
jo
stos
and
push
in
xor
add
shl
stc
sbb
xor
sbb
arpl
stos
aas
sti
(bad)
(bad)
sti
sub
or
int
movs
push
leave
push
leave
clc
sar
add
dec
in
adc
inc
push
in
xchg
sti
cli
ja
shr
or
sub
mov
inc
dec
in
pop
cmp
aam
retf
cmp
sbb
call
or
std
add
jecxz
clc
fidiv
mov
inc
mov
pop
mov
and
stos
xor
mov
xor
adc
sysenter
inc
adc
repz
out
mov
in
jmp
loope
mov
mov
inc
pop
call
or
inc
push
mov
mov
in
into
bound
add
lods
cmc
les
push
xor
mov
outs
mov
out
xor
outs
mov
xor
sub
loopne
lods
mov
ja
test
xor
test
and
int
fs
stos
jbe
aaa
mov
cdq
push
or
sbb
mov
or
mov
dec
sbb
call
sbb
ret
xchg
push
push
ins
cmp
lods
sti
repz
std
mov
out
sbb
in
cwde
(bad)
jnp
push
jbe
cld
popa
lds
jae
lds
mov
add
mov
lods
push
push
mov
ja
push
lods
out
int
add
enter
bswap
pop
jmp
adc
jmp
push
sbb
and
shl
mov
sbb
mov
ret
dec
lods
sub
jp
test
sahf
arpl
retf
cmps
or
push
mov
inc
(bad)
cmp
pop
push
ffreep
mov
push
push
div
cmps
xor
cwde
sub
and
mov
jp
mov
or
add
lods
pop
adc
mov
xchg
jns
lods
mov
xchg
push
pop
add
mov
jge
das
jmp
push
outs
cli
cmp
push
fcomp
mov
mov
inc
into
nop
sbb
jecxz
inc
jbe
push
icebp
xchg
cmp
push
push
cmp
data16
xchg
mov
add
repz
or
pop
in
ss
sub
(bad)
cwde
jno
push
fidivr
loope
mov
mov
pop
test
mov
jl
mov
inc
sub
sti
jmp
clc
or
fidivr
adc
sahf
sti
mov
or
aas
fs
xor
pop
mov
xchg
je
pusha
rcl
neg
pop
add
push
inc
jg
dec
mov
(bad)
sahf
pop
cli
out
cli
les
movs
and
dec
scas
xchg
add
jp
jp
mov
pop
pop
cli
cmps
fistp
inc
call
xor
pop
inc
jmp
inc
inc
outs
jnp
mov
cs
loope
mov
and
jno
dec
sub
adc
fnstsw
pop
mov
push
jmp
cs
inc
mov
inc
pop
pushf
mov
add
sub
cdq
pop
jle
cmp
fs
ss
or
cmp
dec
or
mov
sub
and
loop
mov
xor
cmps
adc
xor
or
push
out
and
stos
xchg
xor
gs
iret
cmc
aam
fs
ds
xlat
inc
push
jnp
aad
stos
mov
movs
sti
int3
scas
dec
add
stos
add
pop
xchg
das
sub
cs
cmp
fisttp
jg
mov
std
leave
mov
mov
push
xor
add
adc
icebp
add
es
aad
jae
jmp
xor
pop
rcr
inc
retf
lahf
dec
adc
hlt
add
inc
jp
mov
mov
cmc
push
xchg
jg
int3
mov
sbb
or
shl
cmps
jbe
and
call
das
pop
pusha
dec
mov
(bad)
icebp
adc
les
jle
xor
sti
call
mov
adc
and
xor
retf
and
jmp
add
sub
xor
inc
in
pop
(bad)
cmps
mov
adc
mov
repnz
cmp
hlt
mov
inc
dec
jg
std
dec
arpl
inc
lock
xchg
test
mov
sub
loopne
jbe
fs
retf
dec
dec
xchg
mov
fld
js
push
call
mov
pop
mov
in
push
das
cld
fsubr
xor
jns
ins
push
push
mov
aam
mov
jo
psubusb
(bad)
dec
movs
add
and
pushf
fcomi
pcmpeqd
jbe
push
or
lock
lock
(bad)
fcomp
mov
pop
in
push
mov
mov
pop
shl
pop
jbe
jb
ja
out
arpl
push
xor
(bad)
ins
call
mov
xor
sbb
inc
xor
jb
cld
push
outs
xlat
cdq
cmp
cmp
mov
push
xchg
out
xor
jo
or
push
adc
dec
pop
add
add
repnz
jmp
inc
xor
es
daa
adc
xor
fcmovnbe
mov
ret
loopne
adc
sar
cld
stos
mov
jae
pop
jecxz
icebp
sbb
cmp
xchg
add
lea
mov
into
aaa
repz
pop
test
aad
pushf
out
pop
jae
test
adc
xor
test
scas
or
out
daa
mov
sar
xor
and
cmp
mov
ror
das
mov
jo
xchg
sbb
cdq
jo
fcmovnb
jnp
scas
aad
loopne
jp
cmp
cmp
mov
stos
inc
ror
mov
fsubrp
popa
(bad)
fisub
inc
xor
dec
jbe
mov
jge
outs
inc
xor
(bad)
in
pop
(bad)
loop
pop
push
fsubr
push
push
jb
cmp
dec
int3
and
push
test
test
test
push
test
or
bound
repnz
je
push
into
(bad)
jecxz
push
or
inc
test
xor
add
cmp
stos
push
fwait
daa
fidivr
push
test
aam
shl
push
sbb
sub
mov
mov
pop
(bad)
xor
loopne
dec
inc
sahf
jne
mov
pop
adc
popf
(bad)
and
or
daa
mov
in
icebp
(bad)
fnstsw
mov
sbb
fcos
dec
inc
fnstenv
sbb
fcomp
mov
pop
push
cmp
addr16
daa
addr16
xor
add
mov
mov
cwde
jmp
lods
pop
lods
call
inc
leave
int3
ins
and
push
push
sub
and
cmp
(bad)
mov
dec
sub
out
add
in
inc
add
mov
cmps
inc
sbb
adc
punpcklwd
xor
sub
js
les
push
push
pop
aad
xchg
shr
xchg
jno
call
outs
ss
inc
adc
sbb
or
inc
daa
jo
jg
and
pusha
arpl
mov
int3
shl
cdq
cmp
add
or
aam
mov
icebp
push
fpatan
push
inc
dec
jno
add
mov
lods
sub
jp
adc
or
in
std
hlt
clc
xor
mov
adc
mov
mov
cmp
scas
(bad)
mov
out
daa
rcr
lahf
mov
lahf
out
mov
rcr
cs
inc
cld
call
nop
ss
daa
jae
xor
push
(bad)
jnp
push
aaa
jmp
idiv
inc
inc
push
inc
shr
sbb
dec
loop
dec
lds
lea
bndstx
(bad)
mov
pop
push
or
int
(bad)
and
loopne
mov
jne
push
lea
sub
lods
loope
jge
ret
sbb
out
jbe
stos
(bad)
ins
sub
push
es
daa
call
dec
mov
fistp
cmp
xor
(bad)
out
lahf
sahf
lods
sar
cwde
lock
fimul
jb
ins
mov
inc
fild
push
fidiv
or
dec
and
jg
xchg
(bad)
shl
dec
jns
(bad)
in
loopne
mov
mov
xchg
sub
jnp
dec
ror
sub
push
adc
jns
fisub
mov
inc
adc
pusha
in
std
cmp
inc
test
adc
add
mov
aas
in
cmp
test
cmp
and
stos
push
pop
cmc
repz
and
inc
push
mov
hlt
push
mov
ror
pop
outs
jo
aas
test
push
enter
xchg
test
inc
mov
pop
push
mov
repz
xor
aas
in
test
mov
test
loopne
jmp
sub
sbb
mov
push
mov
imul
ret
ins
xor
int3
cmp
inc
pushf
jmp
nop
and
mov
sar
loope
aad
xchg
addr16
imul
cdq
into
sbb
(bad)
out
scas
rcr
xor
mov
popa
clc
nop
rcr
adc
int3
sti
add
mov
je
jmp
repnz
or
fst
(bad)
or
(bad)
or
std
mov
aad
(bad)
mov
test
and
int3
inc
push
sub
and
mov
lahf
repnz
push
les
(bad)
ins
cwde
mov
or
out
inc
sbb
jo
leave
mov
xchg
pop
ret
div
fdivr
imul
xchg
scas
mov
jp
stos
in
test
sahf
adc
ret
mov
jge
iret
scas
jns
add
xor
rcr
in
outs
add
movs
cmp
xchg
add
pop
pop
data16
cmp
in
mov
pop
adc
xor
dec
xchg
out
mov
(bad)
shl
cmps
adc
push
icebp
lods
sbb
paddb
cld
sub
lds
xchg
mov
add
dec
or
sub
sti
retf
in
ja
jno
in
or
push
mov
mov
fwait
std
add
jbe
mul
lods
cwde
push
mov
mov
or
and
add
cmp
mov
js
push
xchg
pop
rcr
pop
out
cmp
arpl
(bad)
cdq
fidivr
mov
fdiv
pushf
mul
stos
adc
int3
aad
push
pusha
sbb
outs
nop
loop
adc
dec
ss
pop
xchg
mov
sbb
outs
lods
in
sub
imul
cs
ins
mov
out
shr
les
imul
mov
push
aaa
jecxz
push
into
in
mov
push
inc
pop
jecxz
xchg
dec
cmp
outs
loope
stos
and
sbb
jae
loope
outs
pop
pop
gs
sbb
pop
dec
jge
je
jge
and
shr
add
adc
mov
inc
xor
in
rcl
xchg
scas
push
jo
jge
sub
adc
xchg
mov
push
fs
xchg
cmps
mov
adc
popf
add
xchg
mov
outs
sbb
mov
pop
and
jae
xchg
xchg
ret
pop
push
add
pusha
std
jne
xchg
fst
call
inc
call
mul
or
push
cmc
mov
pop
test
lea
cli
rcl
enter
pop
mov
lods
cmps
push
adc
scas
add
inc
je
fisubr
xchg
leave
jb
neg
in
inc
test
push
push
lods
ja
out
imul
dec
or
pop
xchg
outs
xchg
adc
sbb
(bad)
pop
mov
jo
loop
push
cmp
aad
cwde
sub
sbb
jbe
js
es
popf
cmps
pop
imul
lods
fcmovnbe
aas
jb
push
cmps
cmc
sbb
mov
imul
mov
jns
jbe
(bad)
idiv
mov
bound
pop
je
pop
scas
cmps
gs
jmp
or
inc
xor
inc
or
repnz
push
jo
mov
push
sub
test
cmps
push
mov
ins
mov
dec
sub
hlt
xchg
mov
and
test
lock
cdq
xlat
cmc
mov
fiadd
call
imul
mov
pushf
xor
cmp
add
dec
fisub
cdq
adc
stc
pop
jl
dec
jg
dec
sbb
popf
mov
scas
and
jo
sub
dec
jne
sub
lea
add
lock
mov
sbb
and
fdiv
das
pop
push
dec
aad
pop
sub
jecxz
sbb
inc
scas
(bad)
fisubr
ret
xchg
push
call
cmps
jmp
int3
fidivr
and
mov
(bad)
fs
xchg
jmp
push
lahf
addr16
(bad)
jbe
mov
ret
add
sbb
sub
scas
sbb
mov
xchg
jmp
add
stos
add
mov
jae
mov
pop
clc
fnstsw
inc
je
dec
bound
sbb
inc
mov
push
sub
push
psrlw
or
scas
ja
gs
and
mov
pop
inc
ss
mov
xchg
and
push
xchg
fiadd
jno
mov
jl
sbb
lods
jl
(bad)
inc
lahf
xor
lods
inc
cmp
jg
out
mov
sbb
push
mov
mov
push
ss
add
mov
mov
fdiv
shl
xchg
pop
sahf
push
mov
shl
hlt
add
fs
mov
mov
and
jg
sub
es
adc
addr16
stc
fsub
and
inc
cmp
push
sbb
rol
dec
mov
push
mov
(bad)
imul
sub
rcr
out
fwait
sbb
out
nop
stc
int
mov
or
scas
les
xor
stos
stc
int3
rcr
sti
mov
jmp
fst
dec
into
fisubr
enter
outs
mov
popa
ret
xchg
(bad)
xchg
mov
adc
mov
jl
hlt
add
jo
jno
cmp
mov
and
push
rcl
and
lock
mov
js
pop
and
es
dec
aad
sub
mov
into
or
out
push
test
iret
cmp
sub
mov
outs
mov
cs
(bad)
xlat
stos
xchg
push
push
stos
mov
xor
sub
xchg
mov
(bad)
mov
addr16
mov
mul
das
(bad)
fsubr
mov
pop
shl
xchg
or
pusha
inc
add
bound
sbb
or
sti
cmp
lds
cmp
cmp
or
cmp
inc
mov
int
inc
popf
nop
mov
cmps
lds
push
out
xchg
in
bound
ret
ss
xchg
cmps
mov
lds
inc
movs
bound
in
(bad)
data16
mov
and
jle
mov
adc
enter
fsub
(bad)
pop
inc
and
call
mov
movs
mov
mov
mov
ja
std
pop
mov
push
ror
jnp
or
es
mov
ja
fadd
jns
pusha
mov
(bad)
aad
mov
mov
dec
dec
inc
hlt
jo
lahf
sub
int
pusha
sti
pop
aaa
jo
shl
mov
inc
imul
push
dec
add
lods
mov
in
retf
mov
add
repnz
mov
fcom
add
std
and
in
sar
and
mov
into
cli
cmps
mov
mov
adc
sub
mov
dec
test
xchg
scas
ins
xchg
daa
mov
popw
mov
(bad)
test
inc
cmp
arpl
pop
cmp
jnp
push
rol
jne
shr
out
dec
jae
rcr
xchg
push
scas
add
or
push
pop
xor
cwde
int3
adc
ins
movs
pop
gs
inc
cmp
lods
call
jne
push
movs
sbb
mov
gs
push
xor
stc
arpl
ror
scas
out
test
pop
adc
dec
in
frndint
sub
outs
xchg
fmul
sahf
jnp
loopne
cld
imul
scas
pushf
arpl
aas
jl
add
push
fisttp
fwait
popf
(bad)
clc
movs
(bad)
and
lahf
jg
add
fsubr
cwde
fcom
call
add
cmp
xchg
push
jge
sub
push
not
fdivp
mov
shl
sbb
mov
scas
retf
push
mov
pushf
vunpcklps
and
leave
mov
jmp
jns
nop
repz
pop
jle
mov
mov
out
(bad)
jmp
push
mov
jns
pop
or
dec
mov
push
rcl
xchg
xchg
test
cmp
mov
shr
mov
xchg
dec
mov
sbb
enter
or
add
imul
mov
ret
inc
cmp
in
xchg
adc
and
loope
jmp
xchg
pop
mov
pushfw
or
imul
lea
mov
jno
scas
dec
test
(bad)
pusha
repnz
sar
fld
and
adc
jno
xchg
scas
fld
nop
or
and
js
jae
mov
or
adc
xchg
pop
bound
cmp
dec
cmp
std
xor
mov
ja
test
test
out
xor
cld
outs
sar
dec
repz
loopne
push
dec
ins
ror
(bad)
stc
loope
pop
pushaw
cmp
test
sbb
sub
xlat
mov
test
out
and
std
jmp
stos
bound
mov
les
lods
fsubr
cmp
adc
aaa
jmp
int3
pop
out
retf
xchg
adc
loopne
mov
fwait
adc
out
retf
ror
out
mov
popf
fwait
lea
pop
mov
mov
add
mov
xchg
inc
(bad)
cmp
fbstp
ffree
push
cmp
dec
jae
push
dec
test
xchg
xchg
das
out
fs
divps
int3
sbb
leave
add
stos
adc
adc
jne
out
mov
sbb
aad
mov
jno
js
sahf
sub
mov
cmps
dec
cmp
inc
popf
push
outs
fadd
in
shr
fild
or
call
rol
(bad)
fstp
xchg
dec
mov
mov
add
fdivrp
rcl
not
bound
out
js
sub
sub
lahf
retf
daa
dec
and
adc
mov
repnz
inc
lahf
pop
sbb
popf
clc
or
cmp
fs
push
mov
(bad)
mov
or
fistp
inc
in
push
mov
mov
bound
pop
xor
jl
shl
inc
(bad)
pop
je
xor
shl
sbb
xlat
adc
pushf
add
push
cmp
add
cmp
(bad)
out
sub
push
mov
push
cs
add
mov
in
test
cdq
leave
jl
mov
pop
repnz
shl
or
push
and
nop
mov
clc
cmp
inc
dec
cmp
outs
mov
and
inc
pop
and
cdq
sub
jno
rcr
pop
mov
(bad)
jmp
(bad)
sbb
or
test
push
pop
jecxz
cmps
ins
xchg
sbb
in
retf
mov
(bad)
jge
sti
pop
fistp
gs
call
inc
jbe
pop
outs
lods
(bad)
xchg
std
mov
xchg
push
out
pop
pop
test
lock
sti
push
popf
(bad)
or
jmp
and
lock
mov
std
pop
lahf
nop
(bad)
ins
les
jmp
inc
je
rol
xor
lock
pop
test
in
test
xor
pusha
push
leave
jae
bnd
pusha
mov
cld
adc
adc
pop
sbb
imul
jge
bound
jecxz
xchg
sbb
sub
push
das
mov
popf
jl
leave
inc
push
xchg
or
repnz
cli
int
sub
mov
cmp
into
mov
or
push
call
push
xchg
inc
mov
pop
popf
mov
and
adc
(bad)
in
test
retf
enter
bound
cdq
dec
xchg
xchg
arpl
push
adc
fcom
or
sar
mov
div
xor
sbb
pop
mov
test
xchg
lds
dec
(bad)
cmp
ds
je
outs
lea
mov
fs
cs
add
test
push
adc
xor
push
or
adc
mov
leave
and
mov
sub
jb
cmp
imul
cli
cmp
xchg
xor
ret
mov
mov
dec
and
sub
push
jecxz
inc
xor
pop
daa
hlt
cli
adc
jns
test
adc
retf
lea
jo
push
ror
add
mov
adc
dec
push
fs
rcl
ror
shr
adc
sbb
out
dec
out
xchg
jo
pop
or
ret
rcl
inc
outs
stos
jbe
shl
das
jo
and
cld
mov
xchg
test
aam
jmp
inc
nop
sbb
retf
jp
ficom
lahf
(bad)
(bad)
fld
imul
jns
out
inc
or
mov
mov
popa
out
mov
dec
adc
xor
jp
xor
repnz
inc
push
xor
lock
repnz
mov
stos
iret
or
sahf
lea
rcr
push
repz
(bad)
loope
xchg
or
xchg
leave
dec
cmp
lea
adc
push
test
mov
xchg
sbb
push
lock
adc
lods
mov
jae
cmp
fsub
xchg
lods
mov
mov
cdq
test
mov
sub
ret
inc
push
std
inc
push
imul
mov
or
cwde
das
ret
aas
imul
push
jecxz
mov
hlt
loop
out
cmp
ret
xor
mov
ficom
and
mov
jb
std
fcomp
test
js
(bad)
sbb
lods
je
adc
(bad)
not
aas
inc
ret
jp
push
add
mov
sub
test
test
dec
(bad)
cmp
ss
add
scas
dec
cwde
int3
repnz
mul
xlat
pop
out
add
cwde
xchg
pop
(bad)
pop
sub
or
push
ret
cmp
pusha
sub
cmps
sbb
ss
jmp
sahf
in
retf
push
cmp
sbb
fisttp
iret
sub
outs
rcr
fstp
js
pop
nop
jmp
fild
mov
xchg
dec
dec
mov
mov
bound
push
sub
leave
pop
cmp
jecxz
popf
pop
aas
cs
push
gs
mov
repz
mov
mov
mov
add
daa
fisub
pop
es
adc
push
push
sar
int3
cmps
movs
leave
mov
repnz
sub
fnsave
mov
sbb
adc
push
nop
mov
ds
mov
loopne
jmp
nop
mov
inc
mov
xchg
repnz
sbb
out
add
add
test
outs
mov
pop
inc
clc
inc
xchg
push
sub
sub
leave
mov
jmp
mov
inc
sub
inc
inc
cs
and
and
and
popa
jmp
js
inc
adc
and
push
in
adc
ja
mov
cwde
fwait
pop
cmp
dec
sti
test
scas
push
inc
xchg
cdq
stc
add
gs
mov
add
rcr
mov
outs
xor
mov
xor
stc
mov
in
sbb
bound
mov
xchg
(bad)
hlt
xchg
test
adc
cwde
pop
ds
enter
rol
sub
imul
das
mov
mov
mov
or
es
cli
stos
adc
movs
mov
mov
(bad)
xor
jae
adc
jle
jmp
inc
sar
jno
ret
test
shr
ins
xor
(bad)
fadd
test
rol
xor
add
jg
push
fsubrp
mov
retf
xor
dec
push
jno
xchg
adc
popa
sub
inc
(bad)
popf
mov
dec
aad
adc
call
scas
nop
cdq
ins
sahf
test
ins
sub
or
xor
pusha
dec
xor
xchg
adc
(bad)
call
mov
mov
fmul
pop
mov
push
sub
adc
jecxz
cmp
mov
mul
jle
dec
in
cld
in
movs
dec
and
adc
(bad)
push
jb
cmp
cwd
mov
sub
add
and
and
dec
cwde
outs
pop
pop
jae
aaa
inc
mov
into
mov
out
out
cmp
data16
int3
out
mov
shl
xor
jp
bound
mov
aas
mov
lahf
and
test
adc
jp
rcr
sbb
data16
cmp
dec
or
add
mov
dec
sar
fwait
stc
xor
xchg
cmp
lock
lds
inc
cmp
jmp
dec
adc
mov
fldenv
or
sub
dec
xor
sub
mov
ror
cmps
gs
mov
loop
stos
jecxz
lock
pause
jle
fisttp
add
ds
jb
dec
cdq
daa
out
or
rcl
ds
data16
sub
test
les
jns
cwde
dec
jmp
sbb
jnp
pop
cmp
pop
mov
add
shl
(bad)
je
dec
sbb
ret
inc
arpl
xchg
or
mov
cli
and
push
cmp
or
out
xchg
jle
outs
mov
sbb
jne
or
sub
shl
repz
adc
fisubr
into
popw
cmp
mov
in
fiadd
in
jb
lods
rol
stos
sbb
jns
inc
mov
and
jo
int
and
mov
clc
loopne
jmp
mov
push
push
cmp
push
add
dec
sar
or
pop
ret
call
mov
stc
xchg
(bad)
fimul
push
icebp
inc
or
dec
fild
push
cmc
cs
aam
jmp
pop
pop
int
mov
cmp
and
and
pop
jl
iret
scas
test
adc
stc
sti
xchg
push
push
aas
sbb
popa
jmp
mov
push
inc
xor
out
test
lea
or
pop
rol
jmp
sub
pushf
cmp
mov
imul
sub
inc
adc
test
pop
xlat
stc
mov
fmul
cmp
mov
sub
adc
out
in
ficom
pusha
les
lods
adc
call
shr
imul
xor
out
(bad)
pop
rcr
and
aad
push
jb
ror
push
out
push
or
ss
cmps
dec
outs
sti
jle
and
and
popf
sbb
cmp
outs
fdiv
xlat
mov
cld
and
add
fisubr
shl
scas
cmps
sar
or
iret
outs
stos
push
icebp
(bad)
pop
sub
and
daa
mov
cmc
xor
daa
add
xchg
das
jno
inc
add
movs
popf
adc
icebp
jns
movs
inc
fwait
jnp
scas
adc
dec
fadd
fldlg2
mov
cdq
cmp
mov
or
pop
jmp
jg
pop
ret
dec
sub
mov
cmp
mov
jnp
sbb
xchg
dec
dec
mov
sub
or
xchg
mov
sub
call
dec
jmp
outs
bound
dec
and
xor
mov
adc
jnp
push
cmps
add
sbb
sbb
xor
mov
aas
mov
jle
jmp
or
imul
add
pop
push
pop
outs
dec
pop
jmp
ins
cld
mov
jb
xor
in
jns
xchg
and
jbe
imul
xor
inc
add
xchg
inc
or
fcomp
in
xor
(bad)
lods
xor
sbb
mov
js
scas
pop
loopne
ret
mov
call
push
xchg
std
pop
jl
mov
sbb
jnp
push
adc
ja
shl
mov
jp
jmp
(bad)
shl
xchg
add
and
int
inc
cmps
test
iret
mov
sub
adc
pop
push
mov
int3
les
(bad)
mov
jp
fiadd
sbb
inc
jb
xor
fcomp
xchg
int
aaa
and
enter
int
cmp
add
call
jne
xchg
into
pop
loope
mov
lods
jecxz
int3
xor
adc
daa
dec
push
retf
cmps
pop
jmp
pop
test
hlt
xchg
mov
push
sub
xchg
hlt
xchg
gs
dec
repz
inc
loop
movs
into
adc
test
sti
pop
scas
pop
xchg
xchg
stos
or
jbe
add
adc
xchg
sub
iret
pop
(bad)
cs
das
dec
xchg
pop
out
pushf
add
loope
jae
pcmpgtd
adc
pusha
test
std
sbb
lods
sbb
mov
pop
movs
push
outs
jo
scas
movs
sbb
stc
out
cmps
cmp
sahf
xor
div
cwde
mov
jmp
mov
xor
iret
xchg
dec
sbb
dec
pop
js
stos
call
imul
loop
lods
dec
push
outs
test
(bad)
push
xor
pop
mov
mov
nop
and
inc
sbb
sub
sub
sar
pop
or
pusha
js
cmp
inc
std
mov
adc
fistp
icebp
stos
push
xor
xchg
pushf
outs
aaa
inc
pop
je
cld
aaa
or
vcvtsd2ss
icebp
arpl
pop
jnp
retf
dec
pop
and
jl
test
nop
push
and
mov
mov
xor
fadd
sub
nop
cmps
push
jecxz
mov
xlat
cmp
mov
adc
fmul
jmp
add
out
jae
imul
out
ss
scas
xor
or
cs
sbb
add
popa
xor
inc
ds
rcl
frndint
ror
mov
shr
push
dec
movs
(bad)
pop
jge
push
cmp
arpl
cmp
xor
sub
retf
jge
in
retf
jle
sub
mov
sub
ret
pop
mov
rcl
adc
pushf
inc
add
pusha
and
sbb
mov
cmc
add
cmp
cmp
fild
rol
movs
sahf
mov
mov
push
fnsave
cmps
fucomi
(bad)
xchg
push
dec
adc
imul
ins
(bad)
mov
sahf
sar
nop
adc
sub
mov
add
int3
pop
pop
or
neg
mov
jg
jns
jmp
push
mov
retf
pop
jno
fmul
xor
fnsave
inc
inc
or
mov
adc
xor
push
(bad)
ins
xchg
call
xor
xchg
fmul
inc
test
repz
jmp
stc
mov
inc
fwait
jae
cdq
pop
fdivr
adc
lods
xchg
in
adc
jge
pop
adc
pop
add
cmp
jp
outs
jl
push
pop
fisub
loopne
and
dec
in
daa
fldenv
inc
push
inc
aas
imul
sar
sub
xor
mov
imul
shl
cmp
pop
pusha
(bad)
(bad)
in
xchg
cmp
sbb
aas
mov
pop
in
sub
lock
popa
adc
aam
add
mov
pop
std
dec
push
fwait
and
mov
retf
repnz
lds
push
and
adc
unpckhps
int3
inc
or
and
shl
icebp
and
jge
sbb
cmp
jle
push
xor
cmps
cmc
sbb
mov
pop
mov
popf
pop
cdq
int
je
fidivr
cmp
inc
fisubr
fcomp
sbb
loope
imul
cli
out
xchg
dec
dec
sahf
loop
fnstenv
ror
fild
mov
rcr
sub
sub
call
jno
cmp
call
dec
mov
hlt
rcl
push
add
push
mov
nop
daa
mov
xchg
inc
sub
push
mov
xchg
jp
out
dec
lds
and
push
mov
mov
xchg
xchg
xchg
inc
mov
ret
js
bndstx
je
pop
xor
test
and
mov
loop
cmps
clc
int3
inc
(bad)
cli
adc
mov
test
xchg
ins
jo
add
std
and
mov
in
inc
sub
fwait
xor
cld
fistp
or
xlat
mov
imul
fisttp
jnp
cmp
push
lods
pop
(bad)
scas
mov
mov
jle
mov
into
mov
xchg
(bad)
test
out
call
dec
in
(bad)
stc
dec
pop
shr
jo
icebp
loope
aad
loop
or
cli
(bad)
(bad)
xor
jb
sbb
jne
xrelease
movs
pop
aas
xchg
cdq
fwait
mov
dec
or
(bad)
mov
outs
push
cmp
sahf
icebp
xor
mov
cmps
cld
lock
call
clc
(bad)
daa
pop
in
and
pop
push
out
scas
pop
fsub
arpl
fcomp
mov
ins
adc
push
add
dec
or
scas
mov
inc
int3
cmovp
(bad)
mov
es
sub
(bad)
fstp
cmp
or
(bad)
arpl
out
das
mov
cmp
inc
mov
push
adc
es
shr
add
add
lods
xor
push
push
sbb
lea
cdq
cmp
mov
pop
das
dec
mov
outs
gs
inc
sti
stc
mov
fcmovu
mov
mov
pmullw
fwait
ss
leave
and
dec
shr
into
adc
sub
jb
pop
xchg
arpl
inc
jecxz
icebp
or
sbb
cmp
adc
fnstcw
mov
cli
inc
lahf
stos
xchg
xchg
inc
push
aas
xor
(bad)
mov
push
push
stos
fcomip
jno
inc
jno
adc
mov
cmc
cld
push
mov
sub
out
sub
(bad)
mov
xchg
jp
push
sar
mov
mov
push
jmp
sar
adc
push
mov
sbb
mov
lds
imul
and
dec
mov
xchg
sbb
das
jl
pop
out
das
dec
test
jae
adc
(bad)
push
sub
and
jle
jg
sbb
mov
add
mov
push
push
cmps
neg
mov
iret
jecxz
adc
xchg
outs
sbb
cmp
mov
sbb
daa
cmp
cld
sub
rcr
ja
or
(bad)
dec
adc
into
or
and
xor
mov
cwde
das
in
mov
lahf
push
xor
bswap
mov
mov
mov
pop
stos
sar
jmp
mov
and
push
popf
mov
test
call
jne
lea
add
or
dec
lahf
sub
dec
das
bnd
dec
or
das
les
cld
(bad)
retf
cdq
call
repz
arpl
cmc
mov
ficom
fs
mov
std
lock
mov
sub
inc
daa
mov
dec
call
scas
loopne
xor
cmp
pop
stos
jle
movs
mov
out
jbe
xchg
and
inc
push
dec
cmc
inc
and
sub
xchg
fild
jg
sahf
hlt
pop
test
jnp
mov
mov
fild
nop
pop
pop
test
adc
stos
jecxz
lea
fnstenv
div
in
jae
call
int
sub
pop
(bad)
xchg
cmp
push
sbb
dec
or
fwait
sub
div
cdq
cmp
into
or
mov
jg
inc
add
imul
jnp
xchg
std
jbe
into
test
mov
inc
retf
mul
sbb
xor
mov
inc
jecxz
xor
xor
jmp
fisubr
push
data16
gs
and
xchg
sub
jno
scas
out
xchg
or
in
leave
push
fiadd
cmp
xchg
bound
(bad)
dec
fild
ret
hlt
dec
in
or
mov
add
pop
cmc
mov
clc
dec
and
xchg
pop
pop
sahf
mov
in
mov
sub
add
xor
adc
hlt
in
cmc
rcr
jns
cs
jno
xchg
xor
in
push
aam
(bad)
addr16
js
xchg
out
sar
mov
aas
or
sbb
jno
add
jg
in
ds
sbb
(bad)
aad
cmp
lods
mov
or
imul
(bad)
adc
mov
movs
pop
jle
cli
xor
sbb
retf
scas
cmp
adc
outs
out
ins
sub
xchg
popf
xchg
inc
push
jb
mov
or
daa
and
jg
es
cmp
rol
xor
push
add
popa
jnp
adc
pop
shl
dec
lods
lods
call
adc
leave
std
iret
mov
fstp
fsubr
pusha
dec
repz
cmp
sahf
jle
aaa
sbb
sbb
cmps
push
nop
xor
(bad)
fidivr
xor
jnp
add
int3
test
add
mov
mov
call
clc
mov
lds
or
ss
pop
cmp
sbb
jo
sbb
sbb
xor
repz
jl
sub
xor
xlat
jmp
push
or
sub
mov
cmp
scas
pop
pop
nop
cmp
mov
fidivr
cdq
arpl
mov
push
fwait
cdq
mov
inc
test
sbb
ds
push
cmp
jl
cmp
xchg
mov
cmp
sub
int
push
cmp
push
js
dec
jb
push
xor
sub
push
fwait
adc
das
(bad)
fstp
mov
fdiv
jbe
add
clc
mov
mov
cli
cld
push
inc
hlt
cmp
cmps
cmp
jmp
in
fstp
cmps
aas
xor
adc
xchg
sub
cmp
dec
out
adc
mov
pop
sbb
or
call
loop
sbb
pop
dec
sbb
adc
dec
stos
call
(bad)
pop
xchg
cdq
nop
lods
sbb
js
(bad)
mov
dec
idiv
out
shl
and
add
loop
nop
pop
retf
mov
cmps
cmp
arpl
sbb
iretw
or
lds
sub
int
repz
fisub
cmp
popf
jp
or
lds
mov
pop
loopne
add
dec
push
mov
jb
pop
sbb
bound
sahf
push
dec
iret
and
test
push
jmp
dec
mov
inc
adc
(bad)
mov
push
(bad)
int3
xchg
or
outs
stc
leave
xor
aaa
inc
jnp
test
mov
push
mov
mov
inc
hlt
mov
cmp
mov
push
loope
mov
sub
repz
rcr
pop
pop
dec
and
sbb
and
(bad)
mov
add
shl
sti
out
lods
xor
dec
pop
inc
dec
lds
movs
push
jle
retf
push
jno
vmovaps
push
adc
cmp
inc
in
push
stos
push
aaa
dec
mov
mov
mul
(bad)
xchg
adc
jne
xchg
ror
gs
cmps
outs
jmp
test
xor
jb
or
and
dec
xchg
cld
in
out
mov
test
fld
rcl
pop
rcl
mov
xor
inc
mov
xchg
adc
fs
jl
pop
inc
jmp
dec
add
daa
movs
(bad)
std
inc
(bad)
xchg
add
mov
pop
(bad)
add
cmp
mov
pop
outs
xchg
cmp
xor
aaa
pop
hlt
sub
cmps
gs
neg
jl
add
int3
int
loop
enter
jnp
xor
int
pusha
aas
out
test
lds
and
and
add
out
or
clc
retf
inc
push
das
add
lods
cmps
lea
imul
dec
jne
pop
call
dec
in
add
dec
and
fwait
ds
and
adc
jmp
es
mov
sub
pop
dec
(bad)
sbb
or
ins
mov
sbb
sub
ja
push
ror
xor
jne
push
std
ja
repz
call
xchg
nop
out
mov
and
push
lods
sub
push
jmp
lods
adc
pop
and
arpl
add
xor
add
ss
xor
lods
sub
mov
cli
ins
nop
js
mov
xchg
out
repz
mov
push
pop
int3
adc
enter
mov
fidiv
add
sbb
cmps
xchg
fwait
sbb
pushf
push
popf
or
push
imul
fldenv
or
clc
jg
icebp
(bad)
push
jecxz
imul
dec
not
ficom
pop
cmp
enter
mov
call
jne
mov
out
call
jno
pop
gs
out
in
dec
gs
push
retf
inc
aas
cmp
push
aaa
xchg
add
lods
xchg
outs
scas
jb
mov
adc
xchg
repz
mov
dec
(bad)
inc
je
mov
cli
pop
jle
ss
xor
mov
fst
xor
sub
out
in
pop
and
add
jo
prefetcht0
mov
(bad)
mov
mov
outs
xor
fdivr
jno
cli
std
dec
pop
mov
add
or
fisub
jne
add
mov
and
xor
(bad)
fnstsw
lods
cld
mov
lods
dec
lahf
outs
fld
sbb
icebp
xchg
cmp
sub
les
repz
mov
xchg
rcl
sbb
sahf
mov
cld
ret
xchg
jp
je
xchg
inc
and
popf
fild
cmp
mov
imul
ds
mov
stos
int
push
sub
jno
xor
pop
out
adc
jno
in
(bad)
cmc
mov
or
xchg
adc
inc
mov
xor
xchg
mov
or
stc
and
push
jno
sub
std
and
arpl
cmps
push
daa
push
mov
jns
mov
add
sub
in
(bad)
sub
xchg
ins
xchg
inc
outs
sbb
push
lock
and
icebp
std
in
out
pop
add
(bad)
xchg
jge
arpl
test
dec
push
popa
push
dec
addr16
in
or
call
hlt
mov
pusha
mov
sbb
mov
mov
mov
jbe
mov
xchg
mov
stos
(bad)
movs
out
in
push
xchg
lods
inc
xor
mov
sub
retf
rcl
les
cmp
pop
cli
cdq
xchg
popf
xchg
sub
mov
cdq
inc
sbb
mov
cmp
cmps
mov
cmc
rol
mov
sar
jl
jns
jl
add
push
loop
adc
mov
fisub
xchg
ret
cmp
inc
gs
and
push
imul
pop
sti
or
xchg
jp
sbb
das
xor
mov
shl
jl
or
jecxz
or
test
push
sub
mov
sahf
push
pop
jmp
outs
(bad)
jg
in
aad
cdq
xchg
loop
ja
sub
add
push
add
mov
clc
mov
mov
pcmpeqb
push
clc
mov
das
imul
add
fistp
mov
fidivr
sahf
sti
dec
adc
mov
lock
repnz
mov
(bad)
aad
pop
jbe
mov
test
inc
aad
ret
arpl
mov
fidivr
add
xchg
inc
sbb
fdivr
lahf
inc
adc
retf
jg
std
push
(bad)
fidivr
out
call
and
lds
or
cmp
inc
ret
retf
sbb
mov
loope
jmp
add
mov
hlt
movs
ja
jmp
dec
or
jg
loopne
xchg
mov
sub
movs
mov
outs
(bad)
inc
aaa
and
push
dec
nop
push
adc
add
sbb
and
dec
in
xchg
sub
sub
xchg
inc
or
mov
in
xchg
adc
leave
sbb
adc
outs
cmp
mov
push
call
cld
mov
cmp
sti
test
repz
imul
sbb
inc
jno
pop
pop
in
rcl
pop
push
push
loopne
xor
pop
stos
test
mov
xor
jo
xor
xchg
inc
out
push
test
std
int3
xchg
mov
out
test
mov
dec
es
adc
daa
xchg
std
xor
fs
repz
push
xchg
fdivr
xchg
fcomp
in
push
sbb
pop
dec
push
bnd
cmc
adc
aaa
jnp
scas
mov
mov
push
pushf
pop
fsub
ret
mov
nop
push
mov
cld
ret
mov
adc
mov
xor
aam
aaa
popf
cmps
test
pop
pushf
inc
out
and
out
pop
cmp
push
xor
(bad)
scas
sub
(bad)
cmc
mov
adc
mov
vmwrite
idiv
jmp
and
adc
inc
cmp
imul
movs
js
pop
and
loope
cwde
sub
mov
xchg
test
fstp
rcr
outs
pop
jmp
inc
xor
cld
cmp
(bad)
sbb
imul
movs
mov
sub
xchg
mov
inc
out
mov
das
pop
sub
repnz
jne
add
sbb
ret
fucom
cmps
push
add
repz
lds
movs
(bad)
lods
dec
add
mov
pop
sbb
inc
fimul
dec
hlt
jge
fldcw
mov
xchg
in
(bad)
(bad)
mov
push
sar
dec
sub
shl
xchg
and
nop
push
iret
cmp
sbb
dec
ret
cmp
je
pop
adc
dec
ror
lock
push
add
adc
dec
inc
add
xchg
push
neg
fld
mov
sub
xor
sbb
dec
fistp
aas
mov
sahf
xor
add
sti
jl
fldenvw
iret
test
cs
int3
xor
jg
add
push
movs
js
push
xchg
fisttp
frstor
cmps
fstp
(bad)
sub
aam
push
fld
out
ds
mov
push
adc
cmp
shl
movs
ret
mov
(bad)
call
std
and
pop
mov
repnz
and
sbb
inc
in
xor
cmp
movs
xor
loopne
mov
cmp
mov
dec
sahf
mov
mov
inc
dec
and
xor
call
mov
mov
pop
fnsave
cmc
js
and
out
aas
mov
sahf
pusha
push
xchg
clc
add
mov
fcomp
js
aam
call
lock
rcl
push
outs
lods
sub
lods
jmp
xor
ja
jle
jns
das
mov
(bad)
ja
aas
jmp
(bad)
push
jo
mov
fild
sbb
dec
int
mov
adc
sahf
xchg
test
jae
cmps
push
or
pop
xlat
cs
into
data16
pop
jb
lahf
cmps
ds
nop
movs
in
jecxz
call
sbb
popa
add
out
mov
pushf
loopne
inc
mov
mov
movs
pop
fcomp
leave
cmp
add
sar
cmps
jecxz
jno
xchg
jne
adc
test
mov
call
lods
jo
sub
aas
xlat
or
xor
sub
dec
pushf
addr16
jmp
cld
and
aam
inc
push
out
lock
outs
mov
arpl
pop
xchg
(bad)
ins
push
in
jmp
test
rcl
out
jne
cs
call
or
out
std
repnz
retf
ror
(bad)
xor
inc
(bad)
in
mov
pop
pop
mov
add
pop
push
data16
push
and
js
(bad)
aad
pushf
mov
lea
aad
(bad)
sbb
iret
stos
xchg
ror
fild
loopne
adc
lahf
push
or
mov
sbb
ds
cmps
or
xchg
inc
sub
(bad)
cwde
gs
neg
fidivr
pusha
das
mov
cmc
les
or
js
ret
mov
pop
add
inc
jae
or
imul
cmc
(bad)
shl
adc
jl
sbb
jb
gs
push
stos
div
clc
ret
mov
mov
cwde
stos
inc
xor
cmps
out
xchg
jb
iret
call
push
js
jl
xor
daa
call
sub
jno
sub
and
push
mov
mov
icebp
add
push
jno
push
dec
mov
into
(bad)
dec
jns
dec
cli
ror
(bad)
clc
mov
mov
jbe
fdivr
mov
inc
jmp
mov
cmp
jg
fiadd
(bad)
xchg
lods
fcom
push
dec
mov
pop
push
and
popf
add
fnstsw
and
xor
pop
sub
(bad)
(bad)
mov
mov
or
outs
xor
sbb
pop
push
fldcw
rol
sbb
rol
addr16
cld
jb
jb
(bad)
fimul
stc
fcomi
jo
jb
xchg
pop
adc
mov
inc
scas
sub
cdq
fucomp
ficomp
retf
pop
push
aad
push
cmp
ret
ja
xchg
jmp
inc
mov
add
call
jno
add
jecxz
sar
in
popa
leave
ret
mov
jmp
call
xchg
dec
mov
and
test
sbb
imul
cli
(bad)
adc
call
shl
xor
cmps
aas
adc
std
mov
(bad)
inc
lock
jg
movs
enter
push
mov
test
call
xchg
fsubr
jle
sahf
jmp
data16
inc
xor
and
(bad)
mov
rol
xchg
xchg
(bad)
(bad)
push
ins
sar
sub
scas
sbb
retf
scas
std
jecxz
xchg
jp
pop
xchg
pop
ss
and
stc
neg
sbb
push
inc
and
ins
mov
(bad)
icebp
push
add
mov
lods
cwde
jmp
sub
jb
push
fnstenv
div
mov
xor
loope
cmps
sub
xor
adc
xchg
loop
shl
fadd
sub
pop
cmp
stc
jne
mov
js
in
push
xchg
scas
leave
test
fldenv
cmp
(bad)
push
mov
lods
(bad)
add
imul
push
mov
aas
xor
lock
adc
xchg
push
xchg
shl
bound
test
arpl
into
push
and
push
adc
xor
test
pushf
add
repnz
mov
mov
cmp
jns
retf
in
jae
sbb
push
sub
push
outs
mov
out
aas
mov
and
mov
repnz
adc
pop
movs
call
xor
(bad)
xor
push
cmc
jecxz
ret
pop
cwde
xchg
xor
cmp
pushf
popa
push
jmp
ror
(bad)
jge
fs
mov
adc
gs
dec
arpl
xor
(bad)
fiadd
dec
mov
mov
call
ss
and
bt
ror
outs
inc
ds
stos
mov
xchg
imul
push
pushf
xchg
cmp
mov
mov
arpl
mov
inc
and
out
aas
jmp
cmp
or
lock
movs
daa
mov
addr16
hlt
adc
scas
and
retf
cmp
jbe
je
(bad)
fiadd
repnz
jp
fbstp
inc
(bad)
call
add
scas
mov
cmp
std
sub
mov
(bad)
enter
ins
sub
jne
jecxz
(bad)
pop
outs
mov
sahf
xchg
sub
pushf
nop
jmp
xchg
add
cmp
movs
lock
push
cld
jl
aad
xchg
mov
scas
das
adc
cmp
jle
fistp
aam
sub
addr16
shr
push
fwait
(bad)
rcr
bound
jge
in
das
push
int
sbb
xchg
sahf
xor
popa
dec
lods
pop
fwait
mov
repz
xchg
mov
add
in
push
push
cli
adc
int
outs
repz
sbb
sbb
adc
sub
jb
cli
popf
jb
retf
data16
cli
out
xor
xor
push
lahf
clc
popf
push
(bad)
enter
stc
mov
inc
movs
mov
jo
aam
mov
dec
and
mov
mov
push
sub
inc
dec
ja
jno
ret
movs
jle
fisub
sub
imul
cmp
(bad)
adc
xchg
mov
mov
xor
pop
dec
(bad)
pop
pop
pop
int3
leave
pop
xor
dec
mov
loopne
in
in
js
call
imul
jle
mov
jl
loop
cli
cmp
xchg
test
jno
call
push
jns
mov
pop
cmp
mov
les
mov
mov
fisubr
or
in
inc
pusha
shl
inc
inc
mov
and
and
leave
fmul
mov
and
cmps
add
pop
cmp
jle
fnstcw
mov
pop
sub
adc
(bad)
rcl
add
push
sbb
loope
shr
ss
dec
cmp
in
push
mov
or
mov
dec
adc
inc
popa
rcr
add
xor
xor
cmps
scas
cmps
pop
inc
jns
and
or
int
dec
jle
movs
dec
outs
call
inc
xor
inc
sar
mov
ins
cli
xor
inc
mov
mov
sub
push
xchg
shl
aaa
xchg
ret
mov
jmp
push
mov
dec
cs
push
in
addr16
pop
fild
stos
adc
outs
imul
dec
rcr
mov
jecxz
dec
(bad)
dec
rcl
mov
(bad)
xchg
push
shr
call
inc
push
push
les
jmp
loopne
adc
mov
sub
int3
call
mov
(bad)
sbb
sbb
es
sub
shr
in
pop
inc
inc
popf
shr
mov
leave
sbb
mov
pop
inc
sbb
sub
adc
jo
and
in
arpl
std
je
inc
movs
inc
cld
sub
and
pop
or
jecxz
fucomip
es
pop
rcl
sub
test
out
pop
int3
mov
inc
scas
lahf
retf
pop
test
js
and
push
in
add
cmps
sbb
or
aam
inc
sar
into
mov
in
jns
cmc
pop
xchg
lods
mov
sub
je
in
mov
dec
push
push
sub
and
push
mov
push
and
sub
xor
fcomp
stos
sti
ins
sbb
outs
pushf
dec
mov
test
ds
or
mov
sbb
sbb
dec
push
iret
hlt
cwde
xlat
pop
sub
clc
ins
cdq
jmp
outs
lock
jmp
inc
data16
cwde
icebp
das
add
mov
nop
fdiv
nop
int
aaa
mov
stc
or
pop
dec
pop
ins
rol
repz
imul
push
hlt
mov
sbb
outs
and
or
jmp
mov
out
mov
mov
fnclex
aaa
add
bound
lea
aaa
std
lock
sub
or
sub
sti
(bad)
jmp
mov
ret
in
scas
retf
inc
scas
shl
movs
jmp
fnstsw
int
and
sbb
jo
out
mov
jmp
or
fnstcw
addr16
icebp
mov
xchg
cmp
mov
push
xchg
mov
vpsubb
adc
mov
(bad)
fcmove
inc
repnz
icebp
mov
lods
cmp
ror
pushf
cmp
aas
adc
loopne
sub
pop
pushf
mov
mov
(bad)
aam
(bad)
loop
test
mov
lock
cmp
xchg
inc
ins
icebp
inc
push
test
xor
in
jno
(bad)
loopne
fsub
mov
push
pop
aaa
scas
mov
fdivr
cmps
rcl
and
or
cmp
mov
out
sbb
pop
or
rcr
retf
cwde
dec
inc
popf
xor
aam
in
mov
rcr
inc
retf
add
push
lock
pop
lahf
lods
addr16
and
idiv
jge
dec
aam
jle
test
xchg
add
jae
ror
and
xor
dec
icebp
inc
loopne
xchg
xchg
sbb
mov
aas
or
mov
imul
fsubr
or
nop
push
or
enter
test
add
int
dec
mov
xor
dec
xor
dec
xchg
and
sahf
rol
cmp
frstor
(bad)
mov
loopne
xchg
xor
mov
push
xchg
ins
mov
fidivr
mov
jne
fistp
mov
dec
hlt
push
sti
sbb
mov
mov
adc
mov
jne
aam
or
dec
test
stc
mov
pop
fisttp
push
sub
jns
aas
cmp
mov
mov
sbb
daa
mov
mov
mov
popf
(bad)
sahf
sar
adc
(bad)
aas
push
scas
add
dec
arpl
dec
sbb
(bad)
adc
pop
ss
ds
and
les
cmp
cwde
pop
adc
es
mov
sub
sbb
push
xchg
je
mov
rol
into
cmp
xchg
pop
pop
sub
pop
stos
ja
retf
fisubr
or
std
(bad)
cld
jb
adc
mov
test
icebp
cld
data16
xor
jmp
and
inc
sar
sub
jp
xchg
sti
pop
sub
not
clc
mov
add
and
call
sti
int3
add
push
jl
jp
rcr
test
add
xor
xchg
jo
push
mov
fadd
xchg
cld
adc
std
mov
rdtsc
and
std
xchg
out
mov
cmp
repnz
test
call
mov
loop
sbb
in
movs
dec
jle
jmp
mov
cld
and
fisubr
dec
pop
cld
mov
push
rcl
pop
pop
ja
push
bound
xor
cmp
in
ret
push
aad
sub
test
ret
mov
rcl
addr16
std
sahf
or
sbb
sbb
jno
add
in
stos
(bad)
sbb
sbb
pop
repnz
inc
and
sub
stos
dec
loope
sbb
loop
jle
xchg
ret
fwait
mov
in
mov
push
enter
adc
test
push
shr
sub
es
sbb
neg
jmp
fld
shl
clc
lock
ds
or
xchg
popf
imul
add
lods
xor
pusha
jmp
mov
and
lods
in
mov
or
sti
ss
or
adc
inc
stos
mov
and
test
hlt
outs
aam
mov
or
or
and
dec
xchg
mov
clc
sti
rcr
scas
rol
imul
out
inc
mov
and
pop
fwait
(bad)
in
ins
sbb
jp
push
cdq
pop
mov
sbb
stos
mov
test
xor
sub
mov
cld
mov
dec
mov
inc
sub
(bad)
imul
and
popf
lea
sbb
lea
mov
xchg
dec
imul
pusha
test
jbe
sub
(bad)
sub
adc
scas
jb
and
and
fild
push
arpl
call
xlat
ret
jmp
loopne
mov
mov
mov
push
scas
rcl
mov
std
pop
ins
mov
or
cmp
push
sbb
pop
std
in
xor
sub
(bad)
mov
ret
call
fdiv
mov
push
sbb
mov
adc
xchg
fild
pushf
dec
pop
jbe
popa
xor
or
xchg
inc
jmp
test
or
mov
addr16
out
xor
xchg
aam
test
dec
leave
rol
stc
inc
dec
cmp
jmp
test
cmp
mov
jno
lea
sahf
test
out
sar
jmp
jl
mov
xor
mov
lea
ins
cmc
retf
loop
retf
ss
lock
pop
add
int3
mov
jmp
cmps
mov
loopne
lds
pop
xor
js
lods
sub
or
dec
pop
cmps
rcr
fcomp
leave
adc
ret
inc
push
out
scas
push
sub
push
test
dec
movs
dec
mov
arpl
adc
neg
cwde
or
cmp
sbb
cmp
jae
cmp
in
cli
sahf
js
sub
mov
fild
lahf
jg
jb
jmp
push
popf
(bad)
es
lahf
cld
test
test
and
jo
bound
imul
pop
mov
push
test
in
sbb
jae
in
mov
add
sbb
daa
shl
adc
and
dec
rcl
jmp
in
push
int3
cmc
adc
xor
icebp
sti
stos
xchg
mov
inc
jp
sbb
call
not
pop
popf
rep
cmp
xchg
out
sbb
sub
or
rcr
or
in
sbb
stc
outs
out
sbb
rcr
xlat
(bad)
call
cmp
mov
sbb
retf
xchg
push
std
adc
mov
mov
and
inc
aad
icebp
data16
popf
loope
and
out
clc
fsub
retf
lds
pop
xor
adc
repz
stc
stc
mov
sbb
jo
arpl
je
push
sub
stos
test
fwait
jl
mov
fiadd
xchg
xor
jno
stos
jp
std
neg
add
pop
and
xchg
push
pop
daa
add
cs
cmp
popf
push
jne
mov
add
pop
pop
adc
sbb
call
jle
add
jnp
mov
add
fistp
cmp
mov
repnz
inc
adc
mov
mov
sbb
push
mov
fisttp
mov
fwait
ins
stc
mov
xchg
mov
popf
mov
adc
jmp
add
mov
repnz
push
xor
mov
test
mov
sub
jbe
pop
(bad)
sbb
jbe
cwde
cmp
dec
adc
mov
adc
mov
adc
loopne
je
ss
xchg
fs
das
add
ficomp
loop
or
dec
jp
mov
scas
stc
and
or
ins
pop
repnz
mov
fild
xchg
mov
out
ret
pop
sbb
push
lods
clc
dec
or
jno
xchg
and
pop
cs
xor
cmps
sahf
push
push
stc
inc
cmp
jmp
and
arpl
dec
inc
fisubr
fadd
enter
pop
cmp
xor
push
(bad)
rcl
jl
jbe
clc
ins
stos
(bad)
into
or
push
rcr
and
(bad)
push
(bad)
int3
xchg
aam
push
xchg
cwde
cs
jecxz
(bad)
pop
pop
mov
aam
pop
xor
xor
fnstenv
lods
mov
(bad)
mov
int
sti
mov
in
and
lahf
test
pop
test
jg
push
data16
cmp
inc
lods
jne
cmps
pop
aam
clc
jae
sar
jno
sti
sub
cs
inc
mov
mov
mov
jmp
xor
movs
stos
push
mov
and
push
hlt
fisttp
repnz
pop
js
out
in
fnsave
ret
jns
mov
push
push
add
fwait
call
mov
push
dec
adc
add
xchg
fsubr
out
sbb
pop
rol
mov
jle
adc
and
jp
bound
jmp
dec
in
into
add
outs
xlat
rol
lds
in
repnz
clc
pop
add
in
mov
adc
cmp
mov
cmp
scas
pop
mov
test
je
inc
push
(bad)
mov
pop
jnp
bound
fadd
adc
pushf
fstp
mov
fidiv
pop
ds
out
mov
push
sbb
push
jno
out
ror
stos
pop
pop
adc
sbb
fwait
dec
ja
aad
sbb
lods
add
push
icebp
cli
fs
leave
clc
mov
movs
inc
stos
mov
jbe
jecxz
fs
ja
bound
xchg
xchg
inc
(bad)
sub
xchg
mov
movs
loop
out
cmp
cmp
inc
js
sub
xchg
push
inc
loopne
pushf
sbb
mov
daa
mov
jl
and
mov
mov
loop
xchg
or
sub
movs
std
mov
dec
jae
pop
outs
mov
mov
daa
stos
jae
out
adc
xor
or
jl
popa
mov
scas
sbb
add
adc
out
leave
push
loop
cmps
mov
aam
inc
adc
mov
jl
xor
test
fs
pushf
std
inc
inc
push
mov
mov
push
mov
cmp
xor
xor
adc
pushf
fistp
lock
push
cmp
dec
out
pop
push
mov
cs
pushf
cs
mov
cwde
sub
sub
stc
xor
fcom
ss
jo
xchg
inc
jbe
dec
jg
inc
sub
retf
ror
jmp
jmp
sbb
popf
cs
mov
adc
sbb
ss
mov
and
call
inc
pushf
int3
aaa
call
jae
mov
cmp
jne
cmps
aam
inc
xchg
push
sbb
stc
push
hlt
or
xor
sbb
jg
cli
fimul
and
gs
adc
or
cld
cs
mov
mov
or
jle
or
and
sub
ins
popf
call
jmp
cmp
or
test
pushf
mov
(bad)
test
jp
outs
rol
inc
pop
dec
out
sbb
pop
mov
ret
xchg
test
mov
adc
pop
and
popa
loope
and
stc
mov
sub
xor
outs
mov
call
jb
in
push
cmp
pop
dec
in
test
test
sub
xchg
pushw
mov
jl
sub
repnz
adc
fsubrp
mov
dec
xchg
arpl
js
push
adc
sub
loop
sar
jno
fcomip
stos
enter
mov
cmp
sbb
rol
outs
js
fwait
lock
fild
aas
pop
cmp
dec
pop
aam
(bad)
inc
stos
call
dec
mov
xor
dec
in
mov
dec
sub
inc
pop
xlat
int
aad
sbb
imul
loope
int
mov
or
outs
pop
adc
push
or
fsub
in
mov
sub
inc
movs
or
push
mov
push
fwait
dec
(bad)
pushf
xchg
jne
pop
in
or
and
push
fist
icebp
sbb
inc
push
mov
aam
and
int3
pop
push
fcmove
cli
call
xchg
std
mov
pop
push
lea
stos
jl
jg
xchg
je
mov
lds
sbb
pop
fstp
inc
mov
cmp
add
ja
pop
rol
out
pop
adc
mov
mov
jmp
adc
ss
push
pop
(bad)
dec
bound
jge
leave
mov
dec
test
sub
ret
sbb
push
stos
loopne
dec
mov
mov
pushf
jecxz
push
inc
test
loop
mov
mov
xchg
mov
aas
repz
aaa
(bad)
call
loope
lods
popf
push
xchg
mov
cmps
test
push
inc
pop
xor
xchg
push
icebp
cdq
add
sbb
daa
test
dec
xor
push
xor
(bad)
adc
push
es
sahf
pop
fistp
cmp
add
pushf
pop
mov
push
cmp
and
(bad)
in
pop
sbb
cmp
stos
cli
xchg
inc
and
add
jae
and
pusha
in
clc
push
pop
pop
jge
nop
js
xchg
inc
mov
dec
mov
mov
sti
shl
and
xchg
(bad)
repz
push
call
fld
and
idiv
and
scas
clc
dec
js
in
xchg
dec
mov
xchg
pop
push
leave
mov
fst
inc
mov
arpl
sub
sbb
into
mov
addr16
mov
sbb
or
das
adc
push
out
mov
jns
inc
rol
ins
fbld
test
jnp
adc
adc
fwait
pop
cmp
jb
ins
xor
cmc
pop
jno
fisub
adc
mov
cdq
mov
ret
loopne
jecxz
pop
add
push
call
fld
jmp
mov
adc
lock
movs
pop
leave
rcl
or
mov
scas
mov
daa
and
dec
mov
cmc
in
and
jge
into
pop
add
pop
xchg
push
aas
jmp
mov
and
or
lahf
mov
sub
call
push
out
xor
pop
inc
jl
imul
cmp
into
fidiv
nop
push
loopne
cli
push
or
sti
fs
sub
ja
mov
xor
xchg
aas
stos
popf
cvttps2pi
and
movs
cs
xchg
retf
int3
and
mov
pop
retf
and
pop
iret
pop
jle
add
mov
aad
push
mov
xchg
fidiv
xor
cmp
(bad)
std
pop
push
mov
mov
fstp
mov
sub
in
les
and
stos
outs
mov
aam
cmp
scas
mov
sub
jecxz
test
jmp
cmp
(bad)
(bad)
aas
ret
dec
xor
imul
jecxz
mov
bound
clc
adc
xchg
or
mov
sub
mov
add
push
fld
xor
pop
imul
push
add
adc
or
(bad)
xchg
pop
add
ins
je
jg
xchg
into
std
(bad)
imul
shr
(bad)
push
call
test
sub
dec
xor
dec
movs
xchg
mov
jge
retf
xchg
add
and
std
in
nop
push
bound
push
or
push
pop
xchg
call
ins
pusha
aad
inc
loop
push
inc
or
cmc
outs
pusha
fadd
int3
out
dec
mov
rcr
scas
adc
movs
inc
dec
jns
sub
movs
bound
hlt
lds
icebp
sub
test
cmp
je
jo
push
pop
test
stos
mov
push
(bad)
jmp
hlt
fst
and
cmp
in
pusha
data16
into
mov
dec
xchg
jbe
icebp
or
jb
mov
mov
retf
inc
mov
jns
add
and
inc
scas
ss
push
cmps
pop
sahf
sbb
stos
(bad)
inc
mov
lahf
sub
jb
or
addr16
sti
cwde
sahf
lock
mov
aad
xchg
pop
sbb
mov
push
xchg
f2xm1
mov
out
dec
lods
icebp
je
inc
jmp
xchg
jle
or
cs
add
push
addr16
repnz
ss
jge
cmp
pop
push
ret
jmp
mov
push
dec
jl
jmp
pop
jle
cwde
inc
fistp
xchg
or
xor
jo
jb
jl
sbb
mov
fcmovnu
add
xchg
ror
les
into
and
daa
pop
and
loope
adc
cmps
jo
adc
(bad)
dec
jle
pop
sub
icebp
adc
or
mov
pop
cld
cmp
sub
and
cmp
or
in
not
(bad)
ficomp
fisub
sub
mov
inc
push
cmc
jl
xchg
das
adc
fcmovbe
sub
sbb
jle
ja
gs
and
test
sub
sar
stos
pushf
popf
jmp
mov
jno
scas
push
xchg
mov
jmp
popf
push
aaa
retf
inc
aam
test
daa
mov
jle
cmp
addr16
push
push
sbb
sbb
ds
movs
mov
pop
dec
sbb
mov
or
movs
cwde
(bad)
or
fcom
jno
sbb
or
xor
shl
jnp
test
nop
fmul
scas
js
cmp
call
(bad)
icebp
dec
icebp
and
adc
mov
lds
stos
call
jb
aam
int
test
xchg
push
bound
lahf
or
jae
jl
cld
mov
inc
arpl
test
mov
cdq
test
outs
int
in
ror
movs
mov
pop
ror
push
scas
jmp
xchg
and
or
mov
push
test
sbb
jecxz
mov
inc
pop
pop
ds
mov
loop
popa
sti
fst
add
(bad)
and
jns
inc
adc
leave
repz
or
in
mov
jno
xor
aas
dec
loop
outs
push
adc
fld
icebp
cdq
ja
push
(bad)
and
xchg
popa
dec
iret
(bad)
xor
pop
xchg
pop
xchg
add
jae
xor
adc
rcl
xor
push
xor
rcl
(bad)
out
cmp
pop
call
fimul
les
and
cli
ficomp
ds
ret
sub
sahf
rol
inc
popf
push
adc
leave
ins
xchg
ds
adc
mov
xor
shl
xor
pop
gs
push
push
add
leave
dec
inc
xor
js
scas
inc
cwde
or
and
sti
in
repnz
fmul
dec
sub
in
cmps
dec
mov
fldcw
in
adc
push
(bad)
repz
xchg
stos
shl
jne
ret
call
xchg
jns
mov
sbb
pushf
xchg
push
in
jl
mov
pop
call
adc
fcmovu
mov
dec
mov
adc
cmps
add
adc
mov
push
inc
cmp
jmp
xchg
ja
push
in
adc
sub
jns
xchg
imul
sub
mov
dec
shr
pusha
mov
inc
jmp
pushf
cdq
call
ja
or
cmp
enter
gs
inc
xor
mov
dec
or
rol
adc
(bad)
(bad)
ja
add
mov
pusha
sbb
inc
ficom
aas
ja
inc
cmps
icebp
add
test
outs
jmp
aas
push
stos
imul
(bad)
jl
push
iret
test
mov
cwde
jnp
mov
mov
enter
mov
out
in
inc
push
clc
mov
in
add
test
aaa
and
repz
icebp
sub
push
pusha
sub
jae
out
inc
sbb
jo
push
ins
pop
cs
(bad)
(bad)
jp
pop
pop
retf
jg
cmc
cmp
and
xchg
dec
or
add
mov
loope
xchg
and
xchg
pop
ffreep
add
rcl
push
das
psraw
in
sbb
fdivr
(bad)
jb
xor
cmc
mov
dec
in
add
sbb
mov
fsubr
mov
addr16
pusha
xchg
stos
int
fs
add
ret
sub
push
fistp
ret
(bad)
pop
shl
shl
mov
mov
xchg
xchg
fld
popa
clc
jmp
mov
jae
inc
int3
mov
push
pusha
cmp
ins
push
pop
retf
(bad)
aas
add
xor
aad
mov
cs
sbb
inc
mov
imul
pop
subps
push
pusha
call
xchg
dec
lock
out
jge
loope
out
mov
std
inc
pop
fsub
ffreep
push
mov
in
pop
adc
fst
mov
mov
arpl
adc
pop
ficom
(bad)
fisubr
shl
aaa
pop
aaa
jge
retf
std
adc
ror
inc
sbb
(bad)
(bad)
ror
test
or
std
clc
push
pushf
xor
sbb
scas
jecxz
das
xor
out
push
aam
mov
push
cmp
adc
in
in
fcmovne
movs
call
imul
cmp
jge
pop
repnz
rol
jb
pop
pop
inc
adc
inc
pusha
mov
out
in
inc
fs
xchg
sub
movs
hlt
or
les
or
call
(bad)
test
dec
int3
sub
pop
cmp
adc
push
jp
loope
sbb
(bad)
mov
arpl
cmc
dec
jmp
loop
rcl
push
pop
(bad)
rcr
stos
fdiv
push
xor
sub
mov
push
outs
(bad)
dec
mov
sbb
sub
inc
push
je
mov
xchg
test
mov
or
xor
dec
data16
and
xchg
ret
outs
and
cmp
daa
daa
or
mov
inc
jmp
mov
mov
loopne
xor
cmp
dec
or
clc
sbb
repz
mov
add
pop
pop
xor
push
adc
sub
arpl
and
dec
out
clc
adc
hlt
inc
and
xchg
sbb
test
jbe
ins
cdq
je
and
mov
mov
outs
cli
pop
aad
sbb
inc
mov
jmp
test
sbb
inc
dec
adc
mov
dec
mul
jne
pop
cdq
jo
lock
xor
call
add
push
mov
mov
std
adc
xor
test
les
pop
xor
push
popf
adc
mov
jbe
pushf
ror
cld
inc
pusha
mov
and
fdiv
ret
adc
les
xlat
mov
adc
out
mov
test
ret
test
xor
jmp
ret
ss
xchg
rcl
adc
imul
mov
ret
xchg
enter
les
mov
sbb
push
mov
cmp
out
or
sub
mov
xchg
and
adc
xor
fcomp
xchg
loopne
and
ja
test
scas
mov
mov
xlat
rcl
loopne
jl
imul
call
mov
mov
js
push
outs
mov
and
jb
(bad)
out
inc
out
jg
mov
movs
mov
sub
xchg
cmp
jmp
outs
mov
dec
sub
and
int
in
cdq
jmp
mov
(bad)
fld
fidivr
add
jmp
jno
aad
fist
sub
arpl
mov
shr
retf
push
fs
cmp
xor
shl
xlat
dec
push
pop
fmul
sbb
push
xchg
pop
das
and
cld
push
mov
xor
cmp
imul
push
sti
push
xor
mov
inc
sub
xor
push
inc
pushf
xchg
push
push
pusha
jae
jno
cmp
(bad)
in
cs
push
in
cmps
pop
ja
push
inc
out
scas
or
jmp
fmul
push
mov
outs
rcl
and
sub
loop
ins
mov
dec
jae
inc
call
mov
adc
sar
mov
fimul
dec
xor
fdivr
popa
jmp
fwait
rsm
push
pop
mov
(bad)
or
scas
jae
mov
pushf
mov
xchg
and
jae
popf
sahf
movs
jbe
jmp
test
xor
adc
jmp
jbe
pusha
pop
xor
in
(bad)
push
arpl
dec
retf
in
pop
xor
out
adc
sbb
addr16
jp
mov
or
sub
dec
adc
xor
fsubrp
lods
hlt
ins
xchg
mov
cli
push
pop
stos
in
and
lods
push
sbb
daa
jg
or
pop
jmp
stc
jmp
pop
ret
push
inc
cmp
or
jge
int3
pusha
cmp
push
shr
mov
lock
fst
ret
div
test
push
xchg
cmps
inc
outs
int3
pop
in
or
mov
jne
cmp
dec
movs
sti
and
jl
dec
mov
cmp
shl
sbb
lock
push
rcr
ins
pop
(bad)
cmp
cld
xchg
and
dec
dec
xchg
pop
call
xchg
enter
fwait
jmp
and
cmp
pop
jmp
or
push
push
lock
loopne
xchg
mov
(bad)
call
dec
pop
pop
jae
cmc
dec
(bad)
out
add
adc
sti
pop
nop
ficom
test
mov
stos
xor
shl
jecxz
adc
aad
dec
and
dec
jecxz
xor
xor
(bad)
(bad)
ja
fmul
jmp
inc
dec
jg
xchg
fcmovnbe
pop
push
push
aad
loop
test
(bad)
mov
cmps
idiv
inc
fcomip
sbb
adc
sub
ins
int
xchg
aad
sti
inc
(bad)
pop
(bad)
mov
imul
iret
mov
sar
hlt
jp
clc
outs
pop
cld
gs
rcl
mov
ret
inc
mov
sbb
sti
call
cs
inc
repz
arpl
int
addr16
sub
xchg
jmp
mov
scas
out
and
fprem1
or
ret
pop
cld
scas
and
pushf
je
scas
push
aad
xchg
inc
in
xor
adc
fnstsw
int3
outs
jle
lock
xchg
aas
pop
rcr
and
sar
xor
xchg
jne
jns
jl
sub
mov
js
test
mov
sub
push
jae
or
icebp
nop
pop
int3
mov
out
push
inc
imul
clc
jo
fsub
cmp
jmp
lea
aam
sub
jo
pop
mov
sub
data16
mov
mov
cmc
cli
adc
in
mov
jmp
add
shl
scas
push
push
popf
ret
or
lods
inc
loop
loop
fisubr
repnz
ins
dec
les
xchg
jl
sti
call
push
mov
and
xor
inc
scas
sahf
in
pop
push
ret
xchg
cmp
mov
aam
loop
xchg
scas
jle
imul
and
inc
jmp
fild
in
mov
out
pop
inc
push
xor
or
je
loopne
add
jb
pop
imul
loope
ss
xor
jmp
or
mov
punpckhdq
cmps
sti
jne
imul
in
rcl
aad
or
nop
pop
jp
repz
cwde
dec
dec
jge
add
not
xor
pop
xchg
clc
mov
movs
rol
pop
in
mov
jge
jae
(bad)
das
dec
iret
pusha
test
sub
imul
stc
movs
sub
dec
scas
sub
arpl
add
mov
mov
dec
pop
sbb
aas
mov
ror
sbb
fld
test
mov
sub
iret
ss
dec
(bad)
jg
mov
out
jecxz
or
pushf
push
pop
dec
jle
xchg
pop
xor
inc
lods
xor
jo
jbe
dec
nop
add
and
dec
and
sub
cmc
inc
inc
rcl
sbb
stc
mov
out
stos
push
popa
ins
(bad)
sbb
das
mov
xlat
rol
icebp
int3
mov
jecxz
jp
or
push
sbb
jns
retf
or
sbb
push
fist
int3
sbb
les
cmp
adc
in
jne
mov
inc
scas
leave
out
add
pusha
les
lods
inc
jns
xchg
fwait
(bad)
dec
mov
fcomp
clc
lods
mov
mov
mov
pop
fbld
pop
sbb
cld
test
xor
(bad)
xchg
dec
call
sti
scas
cmps
lahf
cdq
movs
sub
pop
push
and
ds
sahf
push
movs
in
push
add
jp
push
pushf
xor
sub
and
push
pop
jne
movs
pusha
stc
clc
mov
xor
test
(bad)
jbe
sub
mov
in
(bad)
jmp
(bad)
dec
ds
push
nop
pop
dec
push
das
add
fdivp
fdivr
mov
retf
dec
jmp
fldcw
push
mov
leave
out
or
scas
in
cmp
test
jmp
xor
xchg
jns
sbb
fstp
mov
xchg
adc
lods
pop
and
lea
and
aaa
jb
or
test
dec
inc
push
mov
es
ins
or
pop
adc
jae
pusha
adc
aam
add
push
sahf
push
jne
scas
int
aad
cmp
(bad)
sti
pop
pop
cmp
cmps
sub
popa
(bad)
out
imul
sbb
test
pusha
inc
call
cmp
repz
xor
pop
les
mov
xlat
mov
add
mov
es
(bad)
mov
mov
mov
sbb
movlps
aad
push
sub
pop
and
or
lock
adc
clc
adc
int3
dec
data16
nop
out
ror
dec
mov
adc
lods
int3
int
lahf
xchg
fsubr
mov
sahf
mov
clc
jnp
push
inc
pop
ins
add
mov
aaa
aas
mov
xchg
mov
movs
pop
xchg
clc
loop
push
rcl
ins
(bad)
outs
retf
xor
inc
fimul
xchg
std
dec
mov
add
lds
or
push
jl
(bad)
mov
push
sbb
sbb
mov
xchg
es
movs
stos
(bad)
lock
cmp
sar
mov
sbb
mov
dec
pop
xor
aas
outs
mov
shl
repz
test
add
sbb
js
daa
loopne
repz
sub
test
xchg
cdq
mov
add
pop
jbe
iret
js
xchg
iret
cli
sbb
les
sub
mov
pop
jnp
mov
retf
mov
inc
jae
sbb
xor
dec
movs
fstp
pop
(bad)
jns
push
rsqrtps
cmp
adc
fs
xchg
cmovno
xchg
jo
outs
mov
mov
push
(bad)
sahf
push
add
repz
xchg
in
popa
mov
adc
push
xchg
or
cmc
ss
sbb
jecxz
jns
jne
xor
retf
jnp
ds
dec
sub
and
js
icebp
mov
add
and
imul
icebp
loope
inc
mov
fwait
push
lahf
lock
mov
nop
jbe
ret
cmps
pop
jnp
xor
sti
mov
xchg
xchg
push
pop
in
mov
sbb
dec
pop
jg
mov
shl
loopne
ins
sbb
aaa
and
jns
mov
(bad)
repnz
xchg
cmc
fiadd
fdivr
scas
faddp
rol
imul
pop
push
push
(bad)
pusha
pop
dec
test
mov
aaa
(bad)
xor
dec
fwait
mov
jmp
push
pushf
add
mov
pop
mov
fwait
sbb
and
and
xchg
xor
mov
popa
into
(bad)
cs
pop
adc
es
mov
mov
mov
dec
cmps
dec
ins
rcr
xchg
mov
test
fs
and
and
ror
int3
mov
sbb
jae
add
out
jmp
mov
scas
out
ins
mov
jns
mov
mov
ret
stos
and
dec
sbb
inc
cmp
push
nop
xchg
ret
mov
mov
stos
ret
bound
cmp
not
in
pop
sbb
rcl
add
xchg
fimul
xor
out
adc
enter
mov
mov
outs
inc
rol
and
jb
lahf
xchg
loope
dec
add
hlt
out
and
bound
ss
mov
sar
mov
daa
arpl
test
ret
xchg
push
xchg
cmp
xchg
and
in
clc
mov
test
push
out
dec
push
mov
int
add
sahf
js
lds
inc
(bad)
push
pop
or
les
jmp
mov
fnstsw
sub
add
push
jb
es
data16
movs
or
ret
lods
jge
pop
inc
in
push
add
aas
sub
stc
pushf
movs
icebp
xor
dec
out
cmc
fidivr
jp
(bad)
or
sbb
jle
push
mov
push
sbb
push
jg
in
dec
imul
xor
xor
popf
fwait
dec
ja
xchg
xor
dec
pop
cmp
adc
dec
adc
dec
or
(bad)
sub
mov
jmp
in
sub
into
in
(bad)
xchg
pop
mov
pop
or
push
jno
sbb
sahf
stos
shr
dec
test
int
push
push
mov
xchg
pop
xor
push
gs
cmp
jbe
lods
pushf
pop
sbb
movs
cmp
mov
scas
and
jecxz
outs
xor
pushf
xor
mov
nop
sbb
addr16
jo
call
clc
jle
fisubr
adc
(bad)
dec
fisttp
inc
inc
(bad)
mov
jle
jno
push
retf
mov
loope
inc
sbb
add
stos
xchg
(bad)
adc
nop
inc
aaa
popa
fstp
push
inc
mov
dec
imul
fimul
cmps
sub
mov
(bad)
jmp
pop
xchg
adc
add
out
js
stos
mov
(bad)
cmp
inc
mov
xchg
retf
dec
loopne
dec
idiv
mov
and
add
xchg
(bad)
inc
push
inc
imul
rol
jge
or
jmp
loopne
rcr
movs
inc
ins
mov
in
shl
and
push
xor
push
out
sub
outs
pusha
dec
fistp
pop
dec
lock
adc
pop
adc
jo
sbb
loopne
popf
add
mov
das
xchg
ds
or
pop
mov
cmp
and
mov
das
push
fiadd
repz
sub
ins
(bad)
mov
dec
cmp
shl
inc
dec
lods
aam
xchg
pop
and
sub
push
test
(bad)
pop
adc
xor
out
push
aad
ficom
cmps
pushf
add
jns
or
mov
repz
out
and
jne
or
fidivr
(bad)
lods
pop
mov
xor
sub
sub
iret
dec
aaa
xor
xchg
sbb
mov
jmp
and
jno
mov
fcomp
iret
in
pop
aas
pushf
pop
adc
cmp
lea
not
mov
push
lods
aaa
rol
test
lds
inc
lahf
pusha
repnz
mov
xor
add
fld
jne
mul
xchg
fcomp
sar
inc
and
push
mov
and
call
lea
pcmpgtd
add
sub
fldcw
xchg
mov
pushf
hlt
addr16
cmps
test
aas
inc
or
mov
mov
sbb
sub
add
jmp
dec
jmp
jge
ss
leave
mov
xchg
rol
and
pusha
sub
ss
test
bound
nop
test
pop
test
mov
push
pop
retf
dec
push
adc
daa
imul
mov
cmp
mov
mov
stc
inc
and
push
aam
add
mov
hlt
adc
icebp
or
dec
sub
mov
inc
(bad)
nop
das
in
call
clc
push
xchg
cmp
scas
cwde
dec
js
mov
fisttp
daa
stos
cmp
(bad)
mov
pop
in
out
sti
xchg
pop
fwait
and
ss
(bad)
frstor
repnz
scas
mov
ins
scas
data16
jns
inc
loope
test
jle
sbb
out
sub
int3
and
jo
sbb
push
lods
jl
aas
fsub
cmp
inc
test
and
push
cmp
pop
pop
fsubrp
pop
in
xchg
or
(bad)
fucomp
sub
fiadd
sub
add
das
leave
rcr
cdq
dec
push
in
sub
mov
or
popf
dec
rcr
adc
hlt
arpl
xor
lea
xchg
(bad)
jg
cmp
and
add
js
sub
repz
inc
out
(bad)
les
or
xchg
imul
(bad)
dec
gs
push
add
mov
(bad)
retf
leave
add
xchg
add
not
jle
dec
cmps
loopne
in
mov
xor
aam
or
repz
xchg
call
std
inc
outs
push
fnsave
add
rol
ret
bound
sahf
sub
outs
sti
jns
aaa
shl
call
ret
adc
sar
fwait
mov
ins
push
push
outs
add
btr
mov
and
mov
or
ret
enter
or
cmp
lds
xchg
and
add
fsubr
out
sub
push
dec
jp
mov
cwde
inc
dec
popf
and
loopne
jb
or
xchg
icebp
call
imul
pop
mov
sti
jbe
xor
pop
push
rcl
repnz
lods
jne
inc
lods
mov
adc
jg
(bad)
mov
pop
(bad)
out
xchg
les
cdq
(bad)
movs
cdq
mov
test
daa
push
cmc
xor
push
iret
dec
cmp
sti
into
ror
xchg
or
cld
fnstenv
and
call
mov
imul
xor
push
repz
data16
clc
repnz
in
mov
adc
imul
out
mov
idiv
test
in
cdq
int3
inc
enter
push
(bad)
(bad)
lods
or
inc
stos
ror
imul
(bad)
lea
xchg
outs
mov
inc
retf
jo
jmp
outs
add
sub
mov
outs
push
dec
mov
movs
xchg
mov
cmp
fcom
scas
inc
jg
xchg
cmp
xchg
dec
int
mov
jb
rol
sub
addr16
movs
xchg
mov
sbb
mov
or
shr
push
mov
lea
ins
sti
add
js
jecxz
and
retf
push
pop
aas
jle
mov
cmp
xlat
pop
das
mov
mov
pop
or
ds
xchg
int
addr16
sbb
or
into
xchg
and
jb
inc
mov
or
(bad)
jl
ffree
mov
adc
imul
adc
xchg
fmul
sbb
jle
js
xor
aaa
out
scas
xchg
cmps
ror
adc
aad
push
dec
mov
js
(bad)
xor
xor
in
jge
cmps
aaa
jnp
out
inc
push
sbb
movs
outs
adc
into
jbe
mov
xor
mov
and
fisttp
add
jbe
and
cmps
sbb
loope
mov
lea
aam
fistp
lahf
inc
mov
or
add
call
nop
call
push
push
xor
es
in
mov
sub
lahf
jp
dec
stos
mov
imul
icebp
pop
ins
sub
test
pop
mov
(bad)
loopne
push
imul
js
outs
sti
add
pushf
inc
cld
mov
mov
dec
push
arpl
retf
adc
sahf
sub
add
out
adc
adc
xchg
in
xchg
pop
adc
fbstp
mov
aas
cmp
je
ret
jle
iret
or
xor
push
and
mov
out
fs
hlt
aaa
cmp
mov
cmp
stos
ret
lods
aaa
cmp
cmps
jno
retf
push
aaa
inc
dec
jne
pusha
jmp
adc
cdq
jb
xchg
sbb
aam
inc
loope
stc
outs
add
test
int3
adc
jle
ret
or
pop
or
je
popf
sub
(bad)
std
adc
pushf
xor
mov
jp
inc
ja
div
sbb
mov
jne
sbb
jbe
mov
pop
inc
stc
sbb
mov
call
fs
or
into
jg
cmp
imul
mov
jns
mov
adc
jg
sbb
adc
lods
fiadd
loope
scas
lods
fdivr
cmp
mov
jl
fisubr
(bad)
or
test
add
or
dec
pop
cmp
movs
pop
and
pushf
pushf
push
push
adc
sbb
cmp
xchg
in
add
xchg
and
ret
jns
inc
inc
loope
test
push
sub
add
sbb
cmp
movs
sbb
ja
cmp
pop
or
mov
mov
inc
cli
sub
fadd
fwait
std
inc
inc
sub
sub
and
out
sub
in
arpl
push
sbb
neg
xchg
jp
jecxz
dec
mov
(bad)
stc
mov
gs
and
pop
inc
jg
jp
into
mov
je
push
out
add
xor
adc
lahf
or
fcmovne
pop
aas
loope
jp
dec
xlat
inc
mov
mov
sub
or
lods
cwde
push
or
and
jae
inc
fldenv
lds
movs
lea
mov
inc
call
rcr
test
xchg
cld
mov
ins
jnp
or
cmc
loopne
mov
fisttp
jns
mov
xor
int3
fstp
gs
push
push
push
push
cli
mov
sbb
push
adc
sbb
and
xchg
mov
adc
ds
cmp
retf
push
cmp
jl
and
push
or
icebp
adc
std
cdq
jb
push
add
cmc
test
sbb
jmp
arpl
out
out
out
mov
or
aaa
aas
cmp
iret
loope
dec
cmp
mov
fwait
or
mov
push
jns
(bad)
icebp
int3
jo
cld
mov
mov
add
cmp
movs
push
leave
ss
repnz
ss
mov
jb
sahf
cli
mov
lahf
mov
fldcw
mov
rcr
sub
into
and
outs
adc
inc
repz
pusha
stc
popf
(bad)
dec
je
xor
outs
dec
push
pop
outs
scas
push
dec
cli
jg
xchg
lods
ins
pop
inc
push
xchg
outs
adc
cmps
adc
data16
cwde
mov
pusha
sub
jmp
rol
jge
lds
in
aad
scas
jnp
data16
data16
arpl
sti
mov
pop
fdivr
iret
xchg
loope
popa
and
xor
adc
push
mov
mov
mov
adc
test
jg
popa
and
adc
int
ja
ss
mov
cmp
dec
cli
mov
push
mov
cmp
shl
rol
and
cmovge
aaa
loope
hlt
retf
mov
rcr
xchg
cli
sahf
ror
jle
xchg
sbb
push
inc
pop
inc
jp
pushf
xchg
popf
cmps
scas
push
(bad)
lea
mov
es
cs
outs
repz
out
cmps
dec
dec
mov
mov
ins
sub
or
inc
imul
jle
inc
pop
lods
push
cdq
dec
fstp
popf
mov
jmp
pop
push
aas
adc
xchg
lods
mov
inc
addr16
xor
cld
or
fadd
xor
lock
es
imul
mov
retf
cli
(bad)
inc
je
jle
enter
xlat
and
repnz
jle
cmp
in
jle
mov
mov
mov
fwait
(bad)
push
xchg
inc
pop
jmp
das
rol
out
cmps
pop
inc
out
sbb
fisub
nop
jo
dec
cmps
mov
inc
aas
shl
mov
push
push
mov
and
dec
in
int3
int
cmp
(bad)
pop
adc
inc
cmp
push
scas
cli
int3
mov
aad
gs
sti
ins
sbb
mov
push
xchg
jg
adc
sbb
popa
mov
mov
leave
ret
fs
push
ret
into
lahf
lahf
sbb
mov
push
test
cmp
jb
mov
sti
pop
cdq
push
and
xor
push
bound
cmp
inc
dec
inc
cmc
inc
or
add
jge
pusha
(bad)
ins
out
mov
outs
inc
or
dec
(bad)
icebp
pop
push
pop
sub
pop
pusha
fwait
mov
sahf
int3
mov
jae
and
scas
inc
clc
pop
cmp
adc
inc
test
dec
ret
jmp
sahf
(bad)
mov
sbb
fnsave
push
jbe
mov
pusha
xor
loope
inc
add
in
inc
dec
enter
push
add
push
xchg
pop
js
jl
or
std
push
pusha
call
dec
sub
retf
pusha
retf
aas
ss
out
fiadd
je
aaa
push
sahf
cmps
adc
shl
cmp
aad
(bad)
sub
inc
jl
push
icebp
mov
pop
(bad)
iret
sub
outs
adc
mov
mov
push
push
or
dec
es
xor
mov
lds
fstp
or
mov
pop
fidivr
pop
test
movlhps
jbe
push
ja
dec
jnp
mov
call
cs
pusha
popf
in
lods
xchg
dec
pop
dec
sti
mov
xchg
jnp
mov
retf
jo
fwait
pop
dec
add
ins
pop
(bad)
xlat
call
(bad)
hlt
xchg
les
bound
test
(bad)
repz
hlt
punpckhbw
add
jmp
pop
cmp
fcompp
rcr
mov
push
jno
or
ss
cwde
icebp
adc
xchg
xor
ins
in
invd
test
lea
test
jmp
sbb
into
sti
nop
mov
pop
test
inc
push
sbb
mov
popf
sub
adc
imul
sahf
clc
cwde
pop
mov
and
shr
dec
xlat
push
xor
sbb
mov
mov
addr16
fadd
xchg
(bad)
mov
adc
inc
mov
cmp
fwait
push
inc
stos
(bad)
push
cmp
jbe
and
mov
imul
cmps
scas
xor
stos
loop
cmp
push
(bad)
mov
ins
aas
mov
in
inc
cmp
pop
inc
popa
cmp
push
sub
mov
aaa
cli
das
jnp
data16
pop
and
data16
mov
daa
(bad)
mov
hlt
push
pop
cmps
(bad)
lock
xchg
push
adc
dec
fsubr
ins
dec
mov
dec
fdivp
add
ror
push
aam
xchg
out
sbb
cli
movs
push
scas
punpcklbw
popf
pop
shl
cmc
arpl
cmc
fs
pop
fs
xor
pushf
or
lock
jl
sbb
lock
adc
nop
cmp
inc
rol
dec
pop
inc
mov
xor
xchg
leave
mov
jmp
rol
(bad)
stos
leave
bsr
mov
dec
xlat
cdq
cmp
jne
sub
jg
inc
inc
adc
push
add
jns
in
xchg
xchg
and
sbb
mov
push
scas
es
jmp
mov
je
popf
inc
sub
jns
arpl
in
shl
fst
fld
js
sub
inc
push
jb
sbb
xchg
mov
add
xchg
das
mov
ss
dec
add
mov
pop
lea
xchg
leave
ret
push
jecxz
xchg
cmp
cwde
mov
adc
fstp
mov
sti
test
sbb
(bad)
mov
inc
xor
adc
pop
jnp
jmp
add
dec
shr
xchg
pop
xchg
inc
dec
ja
dec
in
mov
push
int
push
mov
cmp
adc
mov
lahf
cmps
cmc
nop
aas
fiadd
xchg
arpl
pushf
retf
ret
fild
mov
jmp
inc
mov
in
xchg
leave
ret
cdq
dec
outs
addr16
jmp
add
or
sbb
mov
mov
mov
pushf
stos
mov
sar
jg
push
ins
test
mov
retf
fisubr
or
xchg
jns
dec
out
pop
xchg
popa
push
rcl
mov
push
mov
mov
in
mov
int3
sub
xchg
mov
push
ret
aas
xor
sub
popa
arpl
xor
int
push
xor
jmp
nop
rcl
cli
outs
sbb
mov
sub
pop
(bad)
mov
add
dec
mov
popa
lahf
(bad)
mov
ror
push
test
push
add
loope
push
jnp
sbb
sahf
mov
icebp
fwait
int
out
loop
xchg
xor
ds
xchg
xor
jno
lock
and
adc
div
add
into
or
(bad)
adc
xor
test
pop
adc
xchg
repnz
fdiv
pop
jbe
in
fldenv
push
pop
adc
in
push
outs
ja
inc
fdivr
sbb
lea
daa
push
out
cmp
(bad)
retf
cdq
jle
xchg
and
mov
pusha
(bad)
dec
loopne
pop
rsm
fdiv
mov
and
test
ds
jmp
stos
inc
add
mov
sub
sub
push
jne
das
pop
dec
aam
mov
jmp
in
or
cmp
cmp
push
add
xchg
ret
sti
xchg
in
fld
imul
jmp
nop
cdq
out
or
out
or
jmp
sub
jne
shl
shl
jmp
aam
cmp
push
shl
inc
ret
ret
sti
push
les
jg
das
cwde
xor
cmps
fwait
jne
pop
std
loopne
int3
xchg
(bad)
rcr
fiadd
cmp
jge
sbb
jno
lods
pusha
dec
je
cs
sbb
pop
mov
imul
jmp
sub
sub
fild
cmp
or
sub
xchg
repz
sbb
push
xchg
jmp
dec
jb
popf
pop
popa
sbb
mov
loope
mul
stc
xlat
mov
xlat
mov
add
mov
rol
pop
pop
pcmpgtw
popa
sub
mov
mov
(bad)
iret
sub
jbe
ja
aam
xor
sub
ffree
push
and
push
aam
ins
inc
je
push
sub
mov
jmp
bound
test
pop
fisub
imul
cld
call
rcl
add
scas
add
stc
in
daa
fild
aaa
xchg
repnz
lahf
rol
mov
je
loop
add
sub
jp
sub
arpl
es
jle
jno
rcr
sbb
fld
aas
div
cmp
sahf
xchg
test
repz
stc
repz
fprem
cmp
jb
leave
xor
nop
repz
adc
nop
imul
xor
sbb
lods
int
icebp
pop
jne
mov
adc
push
and
in
sbb
mov
mov
icebp
xor
stos
fisttp
in
out
xchg
jle
int
stos
cmps
pop
mov
mov
ja
push
mov
and
xchg
js
out
popf
jo
clc
cmp
movs
sub
sub
daa
push
sbb
jbe
mov
arpl
xchg
dec
xor
cmc
push
or
jbe
idiv
mov
inc
ja
lock
test
adc
addr16
mov
jae
push
lahf
push
jp
push
and
push
test
push
test
call
aad
sub
push
test
ror
adc
mov
imul
pop
mov
dec
jno
stc
movs
inc
xlat
cmp
cmp
or
pop
sbb
test
leave
stc
mov
mov
push
xchg
call
jo
jns
cdq
push
rcl
retf
leave
pop
mov
jp
jb
movs
push
popf
aad
(bad)
push
jbe
call
inc
fwait
cmc
andps
and
(bad)
pop
add
push
test
outs
mov
jne
out
cmp
jnp
repnz
in
sub
syscall
movq
pop
cli
jmp
icebp
cmp
dec
fxch
xor
icebp
das
fcomp
cmps
inc
mov
sbb
mov
call
ret
jle
imul
fld
inc
sub
mov
sti
ja
inc
cdq
outs
cli
sbb
jno
fs
pushf
loop
sti
cmp
stos
(bad)
mov
into
sub
das
cmp
aad
add
icebp
shr
fimul
inc
xor
push
(bad)
clc
mov
sbb
je
icebp
outs
add
cmps
(bad)
sub
and
or
jbe
cmp
in
push
daa
call
and
rol
adc
call
cmp
sub
ret
dec
(bad)
jl
sbb
outs
repz
ret
fadd
jle
pop
fld
cld
imul
imul
and
sub
sub
xchg
add
mov
push
lock
cld
fwait
xor
adc
mov
fmul
pop
je
cmp
jns
pop
gs
iret
and
ja
push
push
nop
lea
inc
iret
xchg
add
sub
std
adc
push
push
aaa
(bad)
imul
pop
test
test
cmp
ins
adc
push
aad
scas
outs
sbb
cmps
mov
push
je
nop
or
mov
in
jg
mov
bound
in
pop
mov
stos
ret
sbb
leave
test
lds
rcl
out
mov
jg
in
shl
sub
cmps
mov
pop
(bad)
xchg
inc
and
fisub
lds
imul
daa
mov
push
test
fwait
add
es
hlt
in
fldz
(bad)
add
stc
push
aam
(bad)
adc
mov
and
pusha
pusha
jbe
xor
mov
movs
xchg
mov
addr16
push
fwait
mov
or
sbb
push
jno
adc
outs
and
clc
jp
rcl
mov
adc
xchg
mov
xor
shl
jmp
fisttp
enter
mov
je
cmps
rcl
aaa
inc
push
cmp
adc
xlat
retf
les
dec
aaa
fild
pusha
cmp
outs
jle
dec
outs
adc
fs
sbb
jns
xor
fwait
or
std
in
or
repz
add
push
sub
sub
xchg
dec
or
ret
and
mov
dec
mov
jns
mov
imul
add
mov
gs
data16
fist
retf
jne
sahf
shl
cmp
sub
pop
movs
sbb
mov
xchg
cmp
xchg
ds
xchg
arpl
jl
adc
adc
cmp
rol
jmp
inc
adc
movs
xchg
mov
pop
jbe
dec
xor
iret
push
inc
mov
jae
adc
mov
fcom
cdq
push
mov
xchg
mov
bound
clc
fiadd
pop
xchg
jg
or
test
addr16
pushf
clc
mov
out
iret
or
pop
sti
call
inc
addr16
adc
add
xor
dec
gs
nop
iret
leave
push
lods
cs
push
jp
stos
inc
(bad)
adc
sbb
adc
mov
enter
fistp
lahf
jnp
mov
jo
mov
icebp
pop
push
or
out
pop
(bad)
xor
imul
sub
pop
dec
push
ret
shl
xor
aad
xor
jo
cdq
in
sbb
ret
push
push
es
jns
imul
push
jbe
push
sbb
mov
fidiv
not
stos
push
es
inc
fcom
(bad)
fcomp
out
cmp
js
lods
nop
rcr
mov
call
inc
adc
inc
xchg
push
fs
dec
sub
mov
pop
mov
ins
xchg
popf
jns
mov
sbb
and
cld
lods
pop
test
cdq
xlat
and
sbb
add
push
pop
arpl
(bad)
xor
call
lods
outs
icebp
iret
scas
shl
bound
cmp
sbb
jmp
or
(bad)
jge
jne
or
(bad)
ins
stc
scas
clc
mov
int3
fwait
shl
in
add
push
rol
xchg
mov
call
daa
(bad)
mov
(bad)
pop
lods
sbb
adc
sub
loopne
xor
or
loope
scas
cmp
fwait
or
jnp
imul
ins
adc
mov
push
out
mov
scas
or
sub
loopne
sub
mov
arpl
arpl
sub
sti
adc
mov
jp
sub
jo
mov
sub
in
push
lock
cmps
and
pusha
sbb
add
(bad)
xchg
sti
inc
jle
aam
or
pop
gs
scas
add
xchg
adc
mov
dec
inc
mov
pop
addr16
(bad)
pusha
pop
rep
mov
inc
dec
and
push
push
dec
ins
add
adc
pop
retf
imul
fnsave
imul
in
test
sahf
jns
mov
hlt
dec
into
sbb
ret
shr
pop
cli
test
nop
dec
mov
sbb
and
push
or
addr16
mov
repz
retf
sbb
jmp
mov
into
fcmovnbe
mov
ins
lods
fwait
cmp
ret
xchg
add
popa
repnz
xchg
and
(bad)
push
adc
inc
icebp
ret
push
pop
in
imul
adc
adc
adc
push
xor
sub
cmc
mov
jmp
dec
les
xchg
jl
pop
jmp
lds
repnz
mov
lock
hlt
(bad)
inc
xor
mov
cld
inc
and
sbb
repz
xchg
pop
sub
add
mov
inc
and
cli
mov
out
dec
dec
add
shl
push
rcl
cmp
ss
lock
sub
ss
int
ins
jnp
inc
lds
xor
push
push
mov
dec
mov
sbb
fcomp
push
mov
fmul
mov
adc
jo
loopne
dec
mov
(bad)
stos
aas
mov
dec
bswap
push
jne
ins
xchg
adc
and
xor
dec
data16
cmp
daa
push
xchg
movs
ds
inc
mov
sub
sbb
repnz
lods
or
mov
inc
stc
outs
mov
jmp
test
or
lea
ret
xchg
sub
mov
mov
xchg
xchg
je
inc
mov
sub
pop
(bad)
dec
repnz
dec
mov
fcomip
sar
movs
mov
mov
shl
dec
shr
cwde
xchg
pushf
test
jle
rcr
xchg
jle
int
push
xchg
aad
mov
fcos
sti
push
fcom
xchg
push
xchg
mov
dec
add
int
xchg
pop
jnp
and
jle
jno
sub
jb
xchg
lahf
cli
in
dec
push
das
mov
test
mov
lods
scas
movs
and
ds
(bad)
loopne
xchg
sub
test
sub
and
or
rcr
neg
hlt
pop
mov
out
aad
add
gs
jl
je
arpl
enter
jbe
out
sbb
xchg
xchg
push
add
add
sti
xor
xor
xor
out
in
and
dec
rcl
pop
imul
stos
inc
lock
dec
dec
ret
mov
fild
xchg
mov
jecxz
pop
inc
movs
and
dec
or
jl
pop
idiv
mov
jmp
in
xor
mov
cmp
inc
fistp
ins
push
cmp
int3
jecxz
lea
lods
push
inc
mov
(bad)
jb
sti
mov
test
icebp
mov
(bad)
and
scas
loope
cmp
push
sbb
push
scas
es
sar
jne
das
inc
pop
nop
enter
(bad)
retf
cli
dec
push
enter
mov
sahf
jmp
loop
sbb
out
inc
add
call
test
pop
cmps
add
not
and
inc
jmp
jo
xor
dec
std
xor
pop
xchg
pop
mov
mov
add
inc
fsubr
mov
cwde
ficom
adc
fstp
fstp
pop
das
inc
jnp
scas
fwait
rcr
in
retf
dec
out
pop
dec
and
sub
xor
ss
stos
cs
xchg
pop
fldenv
aas
dec
xor
mov
add
mov
sub
xchg
jmp
mul
retf
mov
out
lods
enter
push
(bad)
mov
lahf
jmp
jns
push
pop
movs
inc
push
call
ins
shr
push
iret
clc
push
imul
dec
mov
and
add
cld
adc
test
add
add
pop
jno
imul
cmc
mov
and
enter
and
mov
jae
inc
pusha
arpl
sahf
jmp
dec
adc
ror
mov
call
jmp
(bad)
or
movs
ret
outs
cmps
pop
jp
sahf
add
in
data16
popa
push
push
jae
mov
jge
(bad)
or
aam
mov
out
push
add
mov
sbb
icebp
mov
mov
xchg
and
int
out
punpckldq
shl
and
popf
adc
and
mov
and
mov
popa
xor
and
jmp
je
mov
mov
scas
lods
dec
mov
enter
sti
fwait
mov
inc
call
add
mov
ins
xchg
jmp
and
(bad)
cs
in
adc
test
je
push
call
mov
or
cdq
nop
adc
fs
mov
fwait
imul
fdivr
inc
into
scas
cmps
ins
je
cld
or
pop
push
cmps
movd
sbb
cmps
mov
movs
lahf
loope
or
xchg
mov
xchg
loopne
ficomp
pusha
fs
xchg
xchg
fwait
out
ja
imul
mov
jle
in
ds
fs
jle
mov
pop
mov
lods
xchg
xor
mov
pop
lods
lahf
cmps
pushf
(bad)
jge
icebp
nop
les
adc
push
sbb
or
icebp
lods
push
xlat
sbb
sbb
movs
je
movs
lods
cmp
sbb
jg
adc
or
data16
pop
adc
pop
loope
jg
dec
retf
mov
in
dec
jp
pop
nop
add
fistp
xchg
loopne
out
pushf
and
daa
mov
mov
out
call
mov
(bad)
xchg
js
test
loope
mov
cdq
std
push
mov
lods
adc
lods
inc
xlat
movs
in
dec
mov
add
and
add
inc
clc
push
mov
imul
adc
dec
jle
pop
mov
adc
dec
rcr
into
dec
xchg
repnz
loopne
mov
mov
adc
fisttp
test
rol
pop
jge
sub
add
shl
sbb
inc
mov
std
imul
pop
test
adc
push
test
(bad)
out
xchg
xchg
es
fbstp
(bad)
pushf
dec
sar
(bad)
mov
pop
lea
mov
leave
mov
fisttp
lahf
sahf
xchg
jbe
jb
cmps
movs
outs
xchg
cmp
sbb
or
in
xor
sbb
xor
int
mov
ss
idiv
das
mov
movs
jo
adc
repz
nop
loope
in
loope
les
cld
jno
call
cmp
call
pop
xchg
out
sbb
xchg
ins
push
or
std
cwde
mov
in
data16
push
mov
fdiv
fdiv
add
in
mov
sbb
aaa
das
mov
movzx
inc
fnclex
lea
imul
cmc
xchg
(bad)
in
(bad)
std
dec
sbb
add
not
cli
aaa
sub
ja
popf
(bad)
retf
fsub
js
and
and
mov
push
stos
add
jl
aad
sbb
cli
mov
arpl
int
test
aad
jl
mov
mov
out
jp
in
(bad)
mov
mov
cmps
popa
arpl
mov
imul
dec
daa
fld
adc
pop
data16
jo
call
sbb
mov
xchg
popa
pop
sub
and
xor
addr16
inc
xchg
addr16
fdivr
jmp
bnd
ins
xor
cmp
call
push
push
cmp
bswap
rcl
add
inc
sti
pop
retf
je
std
xlat
das
ss
std
cmp
push
and
xor
mov
gs
adc
pop
pop
test
mov
jb
nop
sub
adc
adc
popf
pushf
or
bound
xchg
loopne
xchg
sub
call
outs
add
repz
imul
sub
mov
push
mov
adc
aad
out
fucomp
ss
inc
stos
jg
out
push
lahf
xor
pop
fild
xchg
sub
cli
aad
call
xchg
cmp
sbb
call
mov
test
retf
dec
test
push
sub
out
pop
or
mov
addr16
gs
cdq
cs
mov
push
xchg
mov
loop
sbb
sbb
or
retf
dec
xor
lods
mov
xchg
lock
xor
icebp
outs
inc
adc
push
pop
clc
mov
push
imul
and
mov
rcl
inc
xor
shl
pop
repnz
or
pop
scas
push
mov
fs
cmp
mov
push
(bad)
mov
mov
loop
fdiv
mov
dec
and
xor
xor
repnz
repnz
or
or
mov
pop
or
(bad)
inc
aam
in
movs
push
adc
int3
movs
ins
sub
sbb
and
test
arpl
pop
fiadd
lea
js
pop
lock
fbstp
out
add
mov
or
scas
out
push
in
inc
cld
pop
in
cs
into
mov
xor
push
pusha
pop
retf
fcomi
cmp
bnd
leave
mov
movs
xchg
xchg
push
and
fstp
sub
loopne
out
rcr
jae
xor
pop
int3
cli
pop
int3
call
xchg
xor
mov
xor
push
fs
cdq
jmp
sub
imul
xchg
and
inc
imul
lock
mov
mov
iret
dec
loop
pop
cdq
pop
imul
lds
imul
shr
mov
ins
adc
or
jp
mov
fdivrp
sbb
xor
out
(bad)
iret
inc
jg
sti
aaa
dec
mov
mov
add
loope
popf
pusha
enter
out
cmps
pop
fsubr
push
xchg
xchg
mov
mov
dec
movs
mov
pop
ret
sbb
in
cdq
add
mov
sbb
xchg
mov
ror
daa
pusha
loop
(bad)
adc
sbb
cld
movs
mov
nop
pop
cmps
aam
jl
in
xchg
ja
jge
outs
test
lock
and
cmp
xor
daa
fisttp
sub
add
adc
mov
cwde
jns
xchg
mov
imul
push
xchg
shr
dec
push
adc
adc
mov
ds
inc
cs
test
push
mov
out
jmp
adc
ds
mov
je
add
mov
xor
(bad)
ds
cmp
test
inc
aad
add
push
adc
push
fs
fs
dec
ja
xchg
jmp
mov
stos
hlt
sub
add
xchg
dec
pop
push
pushf
pop
sub
xchg
cmp
inc
push
retf
rcr
aad
ja
rol
dec
dec
call
jle
sub
lods
movs
sub
cmp
stc
mov
xchg
lds
sbb
sbb
enter
fstp
arpl
xchg
sbb
mov
jmp
cmovo
sub
iret
arpl
js
iret
sub
aas
pop
xor
add
add
mov
repnz
mov
adc
sub
ss
mov
mov
in
and
mov
ss
stos
repnz
rcr
ins
mov
cld
iret
and
stos
mov
mov
rol
sahf
dec
bound
push
sbb
sbb
leave
inc
push
mov
sbb
ret
mov
jo
xor
test
daa
(bad)
loop
jge
adc
cmp
fwait
out
pop
jns
stos
sti
sub
popf
in
mov
out
push
cmp
ss
(bad)
(bad)
pop
xchg
ins
sub
cmps
in
dec
out
inc
mov
repz
push
div
clc
shl
add
mov
jg
xchg
and
xor
out
inc
sbb
jne
fnstcw
cmp
ss
mov
xor
stos
push
das
mov
sub
das
push
jmp
(bad)
push
jb
xchg
mov
arpl
adc
fimul
mov
push
pop
mov
push
arpl
dec
pop
dec
jno
popa
mov
lods
in
pop
cld
lea
clc
add
sub
fs
inc
pusha
sbb
and
sti
mov
pop
mov
and
adc
mov
mov
shl
js
leave
pop
hlt
retf
mov
cdq
out
std
cmc
clc
lods
sti
add
int3
gs
fistp
movs
xchg
jmp
adc
or
enter
out
test
inc
push
or
inc
mov
mov
div
and
xchg
or
xchg
push
jmp
ror
shld
jae
jl
popa
je
sbb
div
hlt
pop
xor
cs
mov
mov
or
in
cdq
pop
and
les
mov
xor
jle
out
cmp
cmc
gs
sti
test
inc
dec
dec
in
mov
jb
dec
fs
div
add
jecxz
sbb
(bad)
mov
push
adc
cmp
mov
ror
ss
mov
jnp
dec
cmp
outs
push
call
inc
push
cmc
pusha
stc
adc
sbb
push
dec
(bad)
outs
and
cmps
in
mov
or
in
mov
pop
add
les
cmps
mov
test
lods
ret
and
nop
or
outs
hlt
pop
mov
or
aaa
push
cmp
or
or
(bad)
cs
les
add
mov
not
test
imul
in
push
or
in
jb
in
fwait
and
es
pushw
and
frstor
mov
adc
mov
in
dec
xchg
sub
sub
lds
xchg
and
lahf
enter
fcom
shl
xor
sub
iret
sti
cmp
int
sub
mov
dec
movs
xchg
mov
jnp
add
xor
xor
inc
out
ins
jne
ret
mov
inc
retf
mov
and
mov
xor
fcmovb
iret
clc
outs
rcr
push
int
(bad)
int3
xor
xor
add
(bad)
dec
fcomp
ret
or
xchg
xchg
mov
mov
lods
inc
imul
repnz
stos
ins
jp
jne
dec
daa
push
mov
test
stc
inc
fs
mov
pop
test
retf
jmp
cmp
dec
add
push
xchg
dec
icebp
jnp
sar
mov
aaa
jns
fnstsw
lods
cld
(bad)
retf
cmp
adc
repnz
cwde
mov
and
mov
pop
fcmovnu
dec
push
push
jge
call
push
fwait
sbb
cmps
sub
(bad)
push
xchg
dec
inc
xchg
jae
das
lods
jno
xor
sub
sar
ret
int
mov
(bad)
jo
pop
xchg
repnz
cmc
mov
mov
mov
arpl
retf
in
fmul
sti
repz
sub
xlat
push
nop
(bad)
out
mov
cmc
ret
sub
mov
or
rep
sbb
adc
push
bound
push
ins
std
pushf
addr16
fs
and
icebp
repnz
fs
(bad)
icebp
cdq
jmp
sbb
inc
dec
stos
push
jb
push
pushf
mov
jb
(bad)
loopne
imul
outs
in
int
daa
cld
cmps
push
cmps
pop
repnz
movs
int3
rcr
jo
(bad)
sub
int
dec
scas
jnp
xchg
bound
xchg
dec
out
and
push
xchg
bound
xchg
push
add
push
sub
lock
mov
xchg
ja
adc
out
pop
sahf
mov
mov
mov
mov
call
mov
imul
sub
jnp
mov
jo
xor
inc
out
out
add
out
loop
inc
cdq
out
pop
xor
or
das
mov
out
dec
mov
jne
in
aaa
xchg
mov
pusha
adc
xchg
std
jl
shr
jle
lea
dec
nop
mov
xchg
sti
pop
call
aad
std
and
sti
sub
in
inc
xor
cmps
jne
div
rcr
imul
jne
xchg
(bad)
in
pop
sub
sahf
addr16
mov
sub
xchg
pop
stc
mov
iret
sub
(bad)
cmp
hlt
test
ds
jne
jne
or
pop
fs
dec
mov
(bad)
arpl
inc
xchg
shl
or
ds
add
add
out
mov
int3
dec
int3
sbb
cs
xchg
push
aad
lds
mov
in
clc
jg
pusha
cmp
rcl
rcl
repz
repz
push
fwait
ins
mov
inc
call
or
xor
sub
xor
test
add
fstp
cli
in
sub
(bad)
ins
addr16
test
out
ins
pop
mov
or
mov
xchg
(bad)
test
arpl
fisubr
mov
pop
lock
jmp
sbb
xchg
loop
mov
stos
or
add
dec
xor
fisubr
shl
xor
pushf
cli
cli
lahf
mov
push
inc
and
out
push
fsubr
or
sti
into
lods
mov
cdq
pop
dec
jmp
and
test
mov
sub
gs
outs
push
fst
cmps
mov
sub
pusha
inc
mov
xchg
fld
out
int
test
xor
jmp
imul
repz
in
enter
and
inc
xor
cmp
loop
pop
or
sbb
sbb
sbb
mov
mov
(bad)
pop
mov
cmp
data16
sub
add
and
push
lods
mov
inc
add
xor
mov
or
and
sbb
repz
popf
cmps
cdq
jg
add
in
cdq
jae
mov
cmc
or
mov
pop
lods
(bad)
lock
pushf
adc
cmp
push
push
aaa
scas
push
mov
adc
out
arpl
cmc
push
push
and
mov
push
pop
mov
dec
shl
dec
and
xchg
sub
lock
pop
add
xor
or
mov
inc
sbb
(bad)
loopne
stc
ret
xchg
jno
push
mov
mov
in
(bad)
pushf
jne
std
(bad)
ret
stos
repnz
adc
dec
outs
cmps
mov
addr16
sbb
cmp
movs
cmp
add
sub
fwait
pop
shl
not
xlat
pop
aaa
inc
or
mov
repz
push
scas
inc
data16
popa
lods
ja
mov
out
or
repnz
cld
pop
inc
xchg
cwde
pop
mov
push
mov
out
scas
pop
push
mov
fldcw
pusha
inc
shl
outs
icebp
xchg
into
push
scas
sbb
cmp
jecxz
cmp
jmp
pop
mov
adc
mov
and
inc
and
jae
sub
mov
lahf
sbb
in
push
cmp
add
cli
ss
out
mov
jl
lock
push
daa
or
(bad)
jecxz
out
adc
cmc
sar
mov
pop
int
jg
jle
in
xchg
repnz
add
and
sbb
call
mov
mov
pop
xchg
sub
shr
sbb
sar
(bad)
jbe
push
push
ret
dec
scas
sbb
mov
outs
xchg
aad
jmp
(bad)
outs
push
lods
xchg
pop
call
int
retf
lea
popf
push
test
pop
nop
pop
(bad)
pop
mov
fisttp
and
test
inc
mov
js
sbb
push
mov
and
sub
push
popa
sti
fwait
jmp
ret
sahf
(bad)
stc
xor
jmp
imul
shl
push
push
aaa
xor
or
retf
into
out
xchg
inc
aad
and
mov
push
mov
ret
popf
test
cdq
lea
adc
int3
js
sub
shl
into
push
popf
fsub
(bad)
or
push
xor
xor
enter
lods
cdq
lea
xchg
inc
sub
out
call
dec
dec
push
enter
push
outs
and
jl
pop
nop
and
fdivp
push
dec
and
stos
sub
sti
push
call
test
mov
xor
and
add
cld
adc
pop
test
test
xchg
pop
sub
sub
dec
dec
loop
push
test
repnz
aas
mov
inc
sub
scas
retf
mov
pop
not
ss
adc
scas
xchg
xchg
and
aad
mov
add
in
mov
mov
sub
add
xchg
or
inc
rcr
mov
(bad)
or
cmp
out
adc
xchg
mov
xor
pop
mov
ja
das
mov
push
push
das
xor
sub
xor
daa
popf
shl
push
loopne
add
pop
xchg
cmc
dec
xchg
aaa
pop
repnz
xor
jnp
call
ret
jbe
xchg
jne
cmps
repz
in
ins
add
adc
mov
xchg
xor
movs
jge
jecxz
pop
nop
repz
inc
push
scas
jnp
or
jno
pop
xlat
and
dec
inc
xor
pop
int
out
xchg
loopne
out
mov
or
(bad)
dec
and
and
ret
or
dec
cs
inc
jae
jge
(bad)
leave
sub
out
neg
das
js
jns
mov
repnz
xor
sbb
inc
popf
push
dec
repz
pushf
mov
call
rol
sar
or
mov
js
add
cmp
mov
(bad)
mov
mov
push
outs
add
cmp
push
sub
imul
xor
pop
xor
fidiv
pop
aas
jo
test
mov
ja
sub
mov
repz
xchg
mov
push
pusha
cmp
mov
jbe
add
(bad)
fistp
repnz
and
xor
loop
mov
adc
xchg
icebp
cmps
sbb
and
stos
pushf
ds
ret
jmp
ins
shr
adc
push
mov
jecxz
test
lods
mov
popa
mov
int
rcl
add
in
retf
inc
fidiv
mov
aam
sahf
test
inc
js
push
pusha
pop
lods
jae
sub
xchg
xchg
pop
cmp
loop
xor
(bad)
ins
pop
xchg
mov
jmp
arpl
fiadd
pop
ins
ins
sub
stc
pop
lds
aaa
dec
test
repnz
inc
jmp
push
out
out
lahf
cdq
add
or
test
stos
and
jp
mov
je
mov
dec
adc
jle
addr16
aad
inc
jne
clc
(bad)
mov
fcom
or
enter
fild
ins
imul
dec
pop
xor
rcl
test
mov
push
push
icebp
add
cmp
ror
add
xor
popa
(bad)
dec
dec
cmp
mov
or
mov
adc
jne
in
out
pop
retf
cmp
cwde
ja
push
leave
not
ret
or
scas
xor
cwde
mov
xor
or
add
or
mov
jnp
cs
les
sti
mov
fist
retf
std
xlat
fcomp
xor
cld
test
pop
jns
test
mov
xchg
lods
cdq
gs
push
(bad)
mov
add
or
fild
int3
ss
sahf
cmp
into
out
inc
(bad)
addr16
in
push
dec
std
fstp
add
jnp
pop
addr16
jle
xor
dec
add
sbb
fbld
test
ret
jl
pop
and
push
mov
mov
or
stc
mov
cmp
and
nop
inc
jb
js
jae
stos
pop
xlat
add
in
fst
arpl
in
ins
outs
icebp
retf
push
cwde
jmp
rcl
arpl
mov
push
fsubrp
xor
mov
popa
push
call
ds
push
dec
push
add
ins
aas
mov
sbb
cli
add
popa
and
enter
and
repnz
outs
sbb
jmp
test
pusha
(bad)
leave
jbe
add
fisttp
int
into
gs
movs
or
out
push
sbb
cmp
sub
cld
push
retf
fs
je
or
xchg
push
mov
xor
sar
cmp
push
fnsave
sbb
inc
mov
pop
addr16
cwde
or
dec
fdivrp
jg
in
xor
mov
test
sub
xor
push
rcl
xor
sbb
sub
mov
and
jmp
aas
test
mov
jns
call
jne
outs
call
addr16
inc
mov
cmp
test
fld
pusha
test
ror
out
add
fistp
movs
sub
inc
jge
xor
addr16
pop
mov
imul
and
imul
test
stos
add
mov
ins
xchg
sbb
inc
fsubrp
add
mov
push
dec
in
fcom
xor
mov
(bad)
jmp
(bad)
adc
test
inc
fcmovne
aas
cmp
das
xchg
fs
xchg
fneni(8087
ja
into
add
mov
fistp
ins
ins
nop
gs
jae
cmps
stos
xor
iret
xchg
xor
adc
or
test
addr16
and
cmp
cmp
iret
inc
and
in
cdq
in
mov
lods
hlt
mov
ins
cli
icebp
or
mov
cmps
repnz
mov
pop
inc
pop
and
test
xor
mov
push
fisub
or
arpl
jmp
ja
add
add
pop
dec
mov
nop
stos
(bad)
in
jle
dec
lods
paddsb
push
outs
imul
jbe
lods
hlt
cli
or
out
hlt
mov
jmp
fmul
mov
xor
mov
fs
pop
and
mul
mov
adc
inc
inc
popa
sbb
jbe
push
add
cmp
arpl
xor
xchg
jmp
aaa
mov
dec
jnp
retf
jmp
sbb
and
int
aam
test
cdq
leave
fdiv
dec
jns
xlat
cli
cmp
pop
fwait
call
ins
and
dec
adc
int3
fwait
(bad)
push
icebp
mov
add
icebp
jno
or
vpshufd
lods
inc
jg
xchg
adc
or
add
xchg
pusha
sub
mov
add
out
retf
or
add
mov
mov
rcr
push
adc
leave
movs
mov
add
imul
mov
loopne
(bad)
popf
dec
cmp
xchg
popa
dec
js
daa
jbe
sub
je
enter
int3
ds
jp
cmps
(bad)
pop
lahf
mov
adc
inc
add
xchg
iret
inc
push
dec
ret
imul
int
mov
stos
dec
xlat
mov
sbb
pop
rcr
pop
jo
inc
xchg
jno
popw
test
ins
pusha
inc
or
sub
loop
cmp
fwait
daa
push
xchg
out
shl
mov
xor
jl
jmp
ja
dec
shr
rcl
dec
aaa
push
dec
lahf
ror
fsubr
jecxz
adc
add
mov
add
jb
fwait
inc
(bad)
mov
inc
data16
bound
add
sub
not
jnp
mov
shl
cmp
jle
mov
fsub
fmul
pop
add
xchg
imul
in
cmp
movs
shr
ins
cmc
int
push
adc
dec
add
xor
in
pop
out
in
jns
bnd
fsubr
or
or
or
jne
lea
push
jg
int
int
repz
imul
cmp
adc
js
ds
jl
add
std
sub
adc
lock
scas
push
fimul
aam
jns
inc
js
sbb
xor
sub
push
(bad)
in
cmp
or
mov
mov
es
mov
cld
sbb
ja
jp
jmp
mov
inc
dec
je
xchg
cmp
in
mov
add
imul
pop
and
repz
jmp
out
jo
mov
mul
cwde
rol
jmp
iret
mov
inc
inc
js
test
rep
dec
sbb
mov
pop
(bad)
jns
sbb
(bad)
jo
daa
adc
iret
int3
clc
sbb
cs
enter
jge
sahf
call
aam
lock
cmp
mov
jo
inc
push
adc
pusha
mov
fisubr
fs
jae
ss
sti
call
or
add
dec
add
mov
mov
(bad)
addr16
add
idiv
push
mov
jg
inc
icebp
mov
sahf
jmp
or
ret
imul
push
or
inc
pushf
adc
call
dec
in
xor
shr
popf
fidiv
fldenv
mov
dec
shr
hlt
sub
push
int3
jmp
sbb
pusha
mov
push
push
into
cmp
popa
xchg
mov
mov
xchg
add
xchg
mov
cdq
int
mov
mov
cmps
mov
jne
xchg
call
jg
sub
scas
hlt
test
inc
add
sbb
dec
and
xchg
lods
icebp
loope
mov
(bad)
mov
leave
xchg
shl
add
sbb
ffreep
movs
mov
test
lds
push
int
sbb
and
xchg
adc
movs
test
int
fisubr
mov
dec
jecxz
ins
xchg
xchg
aad
sub
(bad)
pop
cmp
xor
arpl
mov
hlt
mov
ins
sub
cmp
add
fadd
sar
pop
jg
jo
adc
inc
aad
jbe
rol
movs
call
pop
fcmovnb
xchg
lods
cmp
fidiv
dec
mov
push
jb
pop
(bad)
pop
pop
sub
push
mov
ret
adc
jmp
pop
movs
js
and
fst
add
sar
cdq
or
and
cmp
and
mov
(bad)
iret
dec
nop
bound
inc
das
repnz
sub
rcl
xchg
add
sbb
sub
sub
lahf
xchg
cmp
pop
das
xor
xchg
dec
or
aaa
pop
popf
lea
pop
call
inc
ror
clc
cmps
addr16
shr
mov
fcom
adc
xor
test
dec
push
lods
movs
xor
adc
aad
push
in
arpl
push
imul
jg
fnstcw
inc
adc
pop
ins
pop
outs
lods
stos
aaa
lahf
jno
push
mov
jnp
test
aad
stc
enter
push
mov
lock
sub
mov
mov
mov
repnz
mov
inc
stos
cmp
add
bound
or
mov
ss
push
mov
or
push
(bad)
xor
push
(bad)
mov
ss
push
mov
sub
push
or
cmc
and
pop
and
stc
adc
inc
cld
xor
sbb
jmp
nop
dec
es
rcl
sub
cmp
add
mov
xor
repnz
xchg
inc
jb
je
cmc
push
push
out
sbb
dec
jae
les
pusha
mov
test
(bad)
movs
jo
jecxz
add
fwait
leave
imul
inc
sub
jecxz
call
lods
cs
outs
div
mov
jns
pop
iret
sbb
jne
js
retf
mov
js
push
scas
jecxz
(bad)
or
fdivr
sahf
nop
adc
and
stc
sub
test
xor
loope
push
dec
fcmovb
cs
sbb
and
mov
dec
xchg
add
jnp
sbb
sub
inc
and
xor
dec
pop
comiss
(bad)
leave
mov
in
dec
push
and
js
outs
(bad)
fcomp
adc
dec
fidiv
dec
mov
fcmove
out
repnz
mov
mov
jmp
mov
add
fwait
rcr
dec
popa
dec
sub
pop
mov
jge
mov
es
dec
xor
in
xor
stos
loope
stos
add
pusha
out
adc
pop
pushf
adc
outs
les
xchg
addr16
fnstsw
je
dec
push
push
fnsave
mov
mov
stc
outs
push
enter
mov
mov
mov
stc
inc
loopne
xchg
mov
pop
push
jmp
ds
das
fld
ficom
mov
mov
jne
icebp
loop
jl
dec
fsub
test
pop
leave
xor
add
fadd
sahf
lock
cwde
cmps
sti
mov
lea
aam
xchg
in
push
pop
xchg
mov
(bad)
fsub
movs
sbb
xchg
outs
sbb
mov
or
xchg
ss
in
jp
pop
lea
xchg
dec
clc
xor
cmp
sbb
nop
call
sbb
outs
shl
sbb
sar
lods
call
cmp
push
and
call
aaa
cs
add
pop
in
jbe
and
dec
in
lahf
clc
(bad)
lods
jno
and
cmc
ins
and
push
stos
or
or
xor
sub
push
div
in
pop
pop
in
sbb
xchg
jecxz
sub
mov
xor
mov
jl
fldcw
mov
bound
jno
(bad)
xchg
push
retf
jne
and
inc
cmps
cs
jno
xchg
mov
mov
movs
sbb
int
lods
and
(bad)
dec
inc
inc
or
or
inc
jae
mov
jle
xor
and
or
leave
pop
cmp
jmp
push
pop
xor
xor
shl
add
test
adc
repnz
pushf
mov
lea
mov
repz
jno
jg
mov
mov
fisttp
in
cmp
add
inc
enter
cmp
test
xlat
and
mov
(bad)
(bad)
popf
xchg
fld
std
or
lods
mov
adc
inc
xchg
into
rcl
mov
dec
cli
cmp
pop
jmp
dec
pusha
rcl
xchg
loope
sahf
push
push
div
xor
sub
pop
test
inc
lahf
popa
out
dec
stos
enter
fwait
mov
test
xor
ret
mov
addr16
std
loopne
les
push
cli
push
dec
dec
ds
sbb
movs
pop
fadd
imul
mov
les
imul
mov
xchg
push
imul
inc
mov
out
rcr
pop
mov
cmps
scas
rcl
js
popa
xchg
and
and
dec
rcl
bound
adc
std
(bad)
pop
or
sub
out
fmulp
out
popf
mov
mov
mov
shl
adc
or
add
jecxz
mov
imul
xchg
sbb
xor
in
xor
or
inc
mov
push
inc
add
ja
jo
mul
std
and
mov
sbb
fs
xor
in
(bad)
and
fiadd
mov
mov
and
sub
add
das
lea
sub
bound
in
xchg
or
dec
es
adc
push
cmps
xchg
stc
ret
fwait
rol
stos
cmc
mov
jle
mov
fisubr
push
sub
icebp
test
(bad)
pushf
mov
fdivr
in
pusha
arpl
test
in
sbb
inc
cdq
adc
push
rcl
sbb
test
ins
sub
daa
mov
jge
inc
mov
test
inc
xor
push
ins
sub
out
imul
es
loop
stos
sbb
int
mov
sbb
sub
push
jle
shr
jnp
scas
fimul
sar
lods
pusha
fdiv
xchg
pop
nop
clc
jae
xor
or
mov
xchg
mov
in
xchg
push
fidivr
ins
sub
call
daa
call
ret
push
shl
fstp
in
ja
mov
inc
test
loopne
mov
bound
scas
add
mov
jnp
push
jecxz
sbb
outs
push
push
push
loop
jne
inc
inc
mov
ret
dec
pop
bound
and
push
dec
fdiv
fmul
sub
data16
out
jmp
pextrw
push
enter
(bad)
fisubr
into
push
and
lods
xchg
mov
xor
loopne
repnz
mov
popa
sub
je
mov
push
jmp
ror
sbb
push
cmp
push
push
(bad)
ja
mov
in
cmc
icebp
movs
cmp
sub
aad
push
mov
adc
dec
xchg
push
push
icebp
shl
arpl
push
ret
jo
ss
into
adc
retf
aam
out
pop
mov
dec
lock
xor
xor
mov
iret
int
in
mov
jae
sub
mov
cmc
xchg
adc
ret
(bad)
pop
and
adc
add
pop
mov
fisubr
add
stc
loopne
cmp
cmp
outs
mov
xor
div
xlat
pop
pop
jmp
lds
add
mov
sub
imul
adc
hlt
mov
stos
and
mov
cld
mov
pushf
jmp
cmp
adc
mov
sbb
out
jae
lock
pop
or
(bad)
out
xor
mov
mov
dec
aad
pop
inc
push
pop
mov
or
adc
pop
mov
mov
mul
lahf
into
fcmovnu
mov
movs
(bad)
pop
sbb
out
jmp
aaa
loop
ins
sub
jnp
jge
cdq
(bad)
and
pusha
(bad)
js
and
test
ret
mov
or
adc
lods
pop
mov
aaa
call
adc
cmp
jmp
in
mov
adc
sub
xlat
sub
or
mov
std
test
icebp
scas
adc
push
daa
jnp
std
mov
data16
mov
push
pushf
shl
add
ins
push
ss
cmp
mov
adc
enter
sub
pop
ret
inc
sbb
out
adc
test
je
shr
scas
push
sbb
or
cmp
pop
and
mov
lock
adc
or
int3
dec
mov
mov
(bad)
ror
sbb
adc
or
mov
mov
loop
sahf
dec
rol
ficomp
cld
mov
push
data16
pop
jne
and
jno
mov
mov
imul
mov
(bad)
(bad)
dec
add
xchg
xor
mov
inc
in
xchg
fisttp
rcr
outs
xchg
fisub
hlt
mov
and
ins
cdq
dec
xchg
call
adc
test
push
std
push
jmp
cmp
sub
pop
ror
fwait
mov
(bad)
adc
(bad)
sbb
dec
xchg
adc
xor
std
inc
push
int3
inc
jle
mov
ret
(bad)
fstp
pop
jp
jae
pop
aas
sahf
xor
push
imul
hlt
mov
cmp
xor
cmp
std
push
popw
jge
inc
inc
and
mov
mov
aas
pop
mov
lods
popa
loopne
mov
and
fnstcw
int
dec
mov
inc
sub
cmps
push
add
mov
fs
dec
movs
sbb
push
call
jo
dec
outs
(bad)
loop
mov
ret
push
fdiv
pop
ins
mov
xchg
aaa
int3
pop
mov
(bad)
imul
lea
out
jmp
jo
ror
xchg
setb
xchg
push
xor
imul
mov
sub
xor
xchg
int3
pop
les
outs
inc
cmps
pop
jl
push
pop
out
ja
(bad)
mov
popf
xchg
outs
ret
xchg
cwde
xchg
stos
into
retf
aad
adc
cld
cmps
add
arpl
cmps
mov
dec
in
popf
sub
add
xchg
xor
lea
pop
jns
add
inc
pop
imul
adc
retf
or
push
call
retf
in
sub
test
xlat
out
jmp
pop
jne
cmp
mov
iret
jo
or
jl
dec
stos
sub
loope
pop
fistp
mov
sbb
cmovl
rol
ja
dec
inc
repnz
cmp
out
ret
mov
xchg
pop
push
loop
mov
mov
mov
fdivrp
arpl
jne
xchg
rep
and
(bad)
xchg
adc
or
mov
in
dec
jg
mov
or
es
and
xchg
inc
test
pop
loope
ins
rol
xchg
and
cmp
in
cmp
add
div
push
push
xchg
mov
cmp
ret
pop
xor
bound
mov
fs
add
dec
mov
jns
jle
jg
loop
out
pop
pop
xchg
mov
cdq
sahf
call
jbe
push
ret
mov
dec
(bad)
icebp
mov
pop
and
mov
or
jnp
retf
inc
jg
je
ja
bt
int
push
mov
xor
aas
jle
test
pop
mov
fild
gs
inc
out
jo
mov
mov
sti
shr
scas
nop
xchg
and
dec
js
adc
sbb
push
inc
jmp
int
sbb
ror
pop
repz
es
in
cmovb
and
mov
lock
cmp
cdq
into
icebp
je
fs
jbe
xor
xor
mov
fwait
in
jge
stos
imul
es
lock
pop
call
pop
xor
popf
adc
push
test
xor
out
mov
push
ror
cmps
sbb
imul
imul
jle
jecxz
shl
mov
js
add
sub
sub
pop
pop
shl
pop
aaa
les
pop
jno
(bad)
xor
mov
dec
lods
adc
or
test
dec
pop
ret
movs
lea
daa
lahf
jo
adc
lahf
out
cmp
outs
in
rcl
and
mov
out
icebp
mov
add
imul
out
jae
(bad)
pop
jmp
dec
inc
imul
fnstcw
das
ja
clc
or
adc
sub
js
push
xor
and
jmp
push
fadd
popa
cwde
adc
outs
cmp
xor
mov
inc
daa
arpl
push
test
into
(bad)
loop
and
fsub
sub
int
push
push
nop
fistp
dec
jae
cmp
mov
dec
imul
xor
xchg
xor
add
ds
stos
aam
imul
fldenv
inc
mov
dec
push
daa
sbb
mov
mov
mov
je
inc
push
test
loopne
xchg
xor
or
adc
mov
cdq
(bad)
jl
cmc
mov
or
inc
jmp
ror
cmp
into
outs
js
pusha
gs
in
dec
adc
out
lods
xor
lock
cmp
fisttp
pop
jmp
je
in
arpl
xor
jnp
jp
lea
jo
dec
jmp
push
mov
imul
xchg
mov
adc
jl
mov
(bad)
enter
xchg
call
mov
loope
push
leave
shl
xchg
out
je
sbb
dec
add
mov
in
or
ins
call
data16
repz
pop
loop
mov
int3
push
shl
sti
pusha
in
mov
mov
push
aas
cmp
xchg
jnp
out
ss
fucom
pop
into
adc
or
jo
add
in
xchg
retf
outs
sub
jmp
jmp
adc
arpl
loop
mov
(bad)
shr
xchg
shl
clc
out
add
push
fbstp
test
push
mov
inc
cmp
cmp
mov
imul
or
scas
int
in
jle
mov
(bad)
shl
repz
fidiv
ds
sbb
data16
outs
inc
and
mov
out
push
fld
(bad)
jmp
dec
xchg
sahf
add
popaw
mov
xor
or
cdq
jno
xchg
dec
or
or
stos
pusha
xchg
sub
xor
jns
(bad)
pop
push
sbb
add
inc
lock
jp
in
mov
mov
sti
enter
dec
mov
js
(bad)
pop
add
cmp
call
xchg
ret
fs
fld
push
and
sbb
xor
popa
rcl
outs
retf
jnp
mov
add
mov
mov
in
ss
ja
mov
fidivr
push
addr16
shl
dec
lea
js
cmp
and
add
scas
fstp
xchg
sub
into
xchg
dec
mov
enter
mov
dec
xchg
je
mov
xchg
dec
out
(bad)
sub
pop
or
cmc
imul
mov
lea
jmp
mov
pop
je
test
jno
cmp
(bad)
mov
adc
(bad)
neg
mov
pop
stos
(bad)
repnz
xchg
xor
and
movs
lahf
ret
cmp
pop
dec
add
outs
sbb
dec
mov
push
js
mov
fs
jns
sub
cli
fprem1
mov
nop
add
(bad)
mov
and
fldenv
sbb
add
dec
jb
mov
retf
stc
mov
ss
pop
stc
inc
jle
jns
mov
mov
and
lahf
cmp
mov
stos
xchg
ret
pop
retf
dec
test
out
mov
or
popf
bound
mov
call
scas
in
cwde
(bad)
cmp
inc
push
dec
adc
pushw
and
loop
dec
fst
jbe
inc
les
jge
out
ret
fwait
scas
mov
fld
pop
push
lods
mov
sub
mov
add
fwait
mov
pop
arpl
dec
pop
pop
jb
xchg
jbe
outs
push
cmps
adc
rcl
imul
cld
or
add
out
or
div
dec
aas
popf
mov
sub
cli
retf
fwait
retf
out
sub
xor
ret
stos
out
loopne
jo
test
jno
sub
sub
hlt
sub
jne
and
mov
pop
mov
lods
adc
test
push
(bad)
fcomp
dec
push
pop
mov
pop
inc
test
ja
jecxz
retf
jle
push
test
adc
out
es
dec
mov
and
pmaxsw
std
je
imul
mov
ret
(bad)
int
mov
shl
cmp
loop
in
iret
out
div
jno
push
inc
nop
and
imul
test
out
sub
jbe
push
lods
and
mov
xchg
scas
sbb
jae
icebp
xor
dec
les
in
movs
fiadd
mov
js
inc
push
sub
xor
repz
and
cmp
loopne
sub
and
xor
stos
shl
stos
icebp
push
mov
pop
mov
stc
popa
xor
xor
stos
fistp
in
sub
mov
hlt
mov
cmp
inc
add
xchg
fwait
data16
test
inc
jmp
icebp
lods
mov
mov
rcl
pusha
xor
sub
sub
inc
jo
sub
lahf
shr
js
(bad)
cmps
sub
mov
es
fwait
mov
sbb
int
sub
or
add
pop
in
scas
xchg
or
jg
sub
bound
xchg
aaa
jno
pop
dec
loopne
lock
mov
xor
mov
outs
cmp
ss
enter
cmp
xchg
mov
loop
stos
(bad)
shl
cmps
jne
lahf
mov
jmp
into
in
lahf
xor
pushw
jecxz
into
push
repz
rcl
add
xchg
mov
xchg
aam
stos
sti
hlt
repz
leave
fnstcw
sub
mov
mov
les
mov
lahf
jge
xor
repz
dec
or
or
mov
test
push
push
popf
jnp
or
pop
push
dec
add
xor
cld
dec
pushf
movs
sti
sbb
rcl
sti
fistp
fcomp
call
push
ja
lock
loopne
adc
dec
mov
addr16
mov
xchg
test
dec
lods
out
call
(bad)
mov
pop
sar
nop
pop
outs
out
jne
mov
in
outs
das
scas
(bad)
mov
iret
retf
and
in
into
arpl
mov
(bad)
jo
jmp
stos
sub
cwde
cmp
idiv
dec
adc
lods
sub
aad
jnp
cmp
or
mov
out
(bad)
lea
and
fmul
cmp
lea
call
sub
xchg
sbb
repnz
(bad)
jns
xchg
hlt
scas
push
retf
fistp
jp
stos
mov
mov
aas
xchg
mov
lods
mov
xor
xchg
cmp
and
imul
stc
pop
or
add
dec
rcl
xchg
add
frstor
adc
jmp
test
pop
movs
lock
inc
dec
inc
sahf
xor
add
mov
mov
push
pusha
sahf
in
cmp
push
aad
rol
setp
mov
jne
pop
xchg
pop
test
add
and
mov
and
jl
xchg
pop
push
data16
in
sahf
push
dec
xor
out
add
pop
imul
ss
xchg
cmp
add
mov
mov
cmp
clc
arpl
mov
fwait
pop
aaa
out
push
and
sub
in
shl
out
xchg
xchg
test
sbb
stos
add
les
loopne
mov
sti
add
mov
in
pop
push
mov
mov
push
cld
gs
mov
iret
jb
retf
mov
pop
imul
mov
stc
pushf
dec
imul
push
push
and
mov
movs
fwait
mov
inc
mov
test
pop
shl
pop
xor
and
int3
pop
inc
mov
and
loope
xchg
lods
leave
jge
sar
jl
mov
call
xchg
or
sti
sub
mov
(bad)
pop
aam
ss
outs
aas
test
jns
cmp
dec
cmp
jp
add
sbb
pop
rcl
add
shl
lea
outs
jb
mov
jb
out
push
cld
mov
dec
in
idiv
hlt
dec
or
sub
cdq
push
jne
mov
mov
mov
shr
stc
into
shl
inc
rcr
clc
xlat
mov
stos
push
test
idiv
shl
pop
ins
out
mov
sbb
mov
sti
dec
aas
outs
or
jbe
(bad)
out
push
(bad)
mov
cmp
loopne
loopne
(bad)
cdq
sub
(bad)
cmp
push
bound
retf
mov
gs
mov
xor
add
jno
inc
inc
popa
sbb
mov
xchg
mov
sbb
sub
sub
arpl
cmp
stos
out
pop
nop
mov
out
test
aaa
pop
cmp
call
cdq
push
or
dec
sub
sub
xchg
idiv
outs
mov
push
mov
cmp
movs
inc
adc
daa
inc
adc
mov
mov
xchg
nop
and
cmp
mov
jmp
ret
add
push
mov
out
xchg
xchg
and
cmp
cmp
call
mov
pop
ins
enter
lea
mov
out
inc
push
mov
sbb
aad
mov
fisubr
xchg
shr
icebp
push
not
(bad)
imul
push
xor
lock
ins
push
add
add
sub
pop
xor
in
jnp
pop
push
or
inc
bound
or
cmp
add
push
jno
loop
dec
repnz
dec
stos
aaa
iret
pop
clc
arpl
add
fmul
(bad)
ficom
pop
repz
cmps
inc
adc
stos
xlat
dec
mov
sub
push
push
dec
clc
cmp
leave
cmp
xchg
(bad)
(bad)
xchg
adc
xchg
mov
std
add
push
cld
mov
pop
jnp
mov
sbb
inc
dec
sbb
mov
xchg
in
jbe
jg
out
jge
jns
push
loope
icebp
(bad)
nop
jne
dec
push
not
inc
(bad)
iret
(bad)
es
xchg
or
lods
cli
push
or
jbe
jge
hlt
cmp
(bad)
cmp
outs
dec
shl
in
xor
not
nop
dec
or
inc
cli
enter
call
adc
xor
dec
ret
cmps
adc
push
fcmovnu
push
add
bound
inc
mov
sub
leave
popa
mov
std
sar
ror
lock
retf
movs
inc
or
sbb
pop
xor
(bad)
or
inc
sbb
or
iret
inc
pop
outs
lods
adc
cwde
xchg
add
pusha
jns
movs
jg
sbb
sub
adc
xchg
and
mov
inc
pop
call
stc
rcr
mov
(bad)
(bad)
pop
pop
mov
(bad)
mov
rcl
movs
iret
xchg
pop
mov
jb
sub
push
sti
aas
outs
pusha
imul
fcom
mov
push
jne
in
imul
pop
ins
int3
inc
test
sub
ficom
clc
mov
adc
add
int
(bad)
cmp
pop
not
inc
xchg
xor
jnp
mov
cmp
cld
jbe
add
cmp
xor
not
mov
mov
repz
rcl
pushf
lock
lods
lea
stc
gs
mov
mov
(bad)
popa
mov
sbb
sub
jmp
hlt
aad
xchg
or
mov
push
mov
aam
dec
loop
out
sub
mov
and
xchg
pop
xor
sbb
ret
cld
int3
loope
inc
retf
fadd
fidiv
ror
cmp
in
int3
repnz
fs
sub
mov
sbb
mov
sbb
xor
or
pop
xchg
mov
adc
jg
push
or
scas
or
ins
push
mov
shr
sub
push
push
push
sbb
inc
shr
cld
or
rcl
sti
add
push
test
or
dec
movs
and
shr
mov
lahf
cmp
int3
pop
cmp
push
nop
popf
and
movs
daa
mov
bound
sub
sub
fld
add
push
rol
jmp
pusha
jecxz
fstp
lods
jno
xor
stos
fmul
mov
and
dec
mov
mov
mov
inc
(bad)
imul
aas
mov
sar
mov
js
pop
sub
jecxz
repz
inc
or
retf
mov
sub
mov
pop
sbb
xor
sub
adc
adc
ss
inc
xor
or
sub
(bad)
fidivr
jbe
imul
aad
adc
cmp
js
push
fadd
xchg
aas
xor
sti
das
add
(bad)
mov
iret
rcr
(bad)
jp
loope
pop
inc
mov
imul
xchg
push
(bad)
mov
pop
xchg
cmp
dec
rcl
cs
or
popa
cmp
jmp
mov
xchg
pop
sar
cmp
jb
in
mov
jo
repnz
add
cmp
ja
fldenv
xchg
dec
pop
or
and
in
inc
push
mov
push
cld
dec
xchg
lock
push
push
dec
jbe
aaa
fisttp
pop
jmp
lahf
add
mov
retf
ret
imul
cmp
dec
cmc
dec
pop
jb
lods
pop
aaa
jae
mov
jmp
xor
or
inc
cmp
ins
and
cmps
cmp
add
movs
sbb
mov
cmp
cmp
mov
jg
fmul
out
icebp
inc
and
dec
stc
aad
rcl
(bad)
iret
test
sub
xor
in
lea
mov
xor
cwde
repnz
adc
leave
jg
in
adc
mov
lods
jmp
mov
cld
and
add
das
fnsave
pusha
mov
jb
adc
sub
icebp
mov
push
lds
ins
shr
pop
or
movs
js
ds
xor
addr16
cli
or
shr
sub
push
stos
scas
cmp
add
pminsw
loopne
gs
fnstenv
ds
and
inc
pop
or
pop
repnz
mov
jg
lahf
es
jmp
les
daa
jge
adc
cmp
arpl
loop
ret
lods
fisttp
mov
mov
push
(bad)
jmp
and
xor
mov
ja
mov
rol
push
mov
mov
cli
movs
out
popf
(bad)
in
imul
retf
repz
test
fld
cmp
pushf
sub
out
mov
(bad)
(bad)
fmul
adc
shr
inc
iret
dec
je
mov
mov
loope
ficomp
cmp
cmp
sti
mov
fcmovnu
out
into
push
rol
jb
test
lods
mov
bnd
pop
jg
aad
in
in
jge
ja
xor
imul
cdq
jbe
sbb
xchg
nop
je
outs
or
jns
test
mov
fwait
sahf
mov
inc
inc
das
mov
fiadd
lods
jns
sub
ja
push
in
and
and
cmp
fadd
pop
adc
int3
(bad)
pop
pop
rcl
xor
add
dec
push
pop
sbb
dec
xor
sbb
test
mov
push
lock
xor
sub
push
sbb
sub
inc
mov
hlt
fwait
xor
push
es
dec
ins
sub
(bad)
and
xor
scas
push
push
out
add
ins
aaa
adc
jmp
and
cli
sahf
fistp
data16
(bad)
lods
outs
sbb
cmp
mov
jno
xor
add
add
gs
sub
cmp
sbb
adc
mov
xor
adc
xchg
fsubr
jae
inc
fcomip
js
out
lods
jno
scas
add
cmp
mov
xchg
lock
(bad)
pop
xlat
sbb
cs
sar
pop
cmps
cmp
inc
scas
sub
test
add
in
imul
jmp
inc
push
sub
pop
bound
lock
out
hlt
ins
cli
hlt
jle
and
mov
pop
xor
addr16
out
and
push
pop
jl
les
cmc
or
sub
inc
cmp
mov
stos
jo
inc
imul
sbb
inc
andnps
mov
(bad)
xor
push
cli
pop
idiv
test
(bad)
lods
or
outs
imul
inc
mov
cmp
pop
adc
cmp
movs
push
icebp
call
(bad)
aaa
push
stc
popa
sbb
cdq
add
add
test
sbb
push
add
mov
aaa
xchg
mov
jg
xor
das
and
pop
jns
adc
in
sbb
pop
loope
mov
mov
(bad)
or
imul
adc
hlt
sbb
jmp
push
push
xlat
fadd
pop
and
push
in
out
sub
adc
or
in
mul
cs
aad
sub
out
jmp
adc
ret
leave
add
lahf
xchg
test
repz
lds
add
icebp
pop
mov
dec
xchg
adc
lahf
pusha
jle
out
pop
pop
xor
lahf
jo
mov
popf
js
adc
shl
sbb
jmp
mov
and
cld
es
and
mov
cmovp
push
xor
in
lea
and
push
inc
into
call
pop
int3
enter
adc
dec
leave
outs
pop
mov
inc
mov
or
cs
dec
or
sbb
icebp
(bad)
out
sbb
scas
inc
inc
or
mov
mov
pop
dec
ficomp
je
mov
push
add
mov
sub
enter
rcl
or
lock
xchg
scas
add
popf
mov
in
fiadd
dec
aas
fwait
jnp
inc
retf
enter
icebp
(bad)
sbb
ret
xlat
loope
xor
mov
xor
xchg
movs
or
jle
popa
xchg
jge
dec
mov
jle
and
adc
movs
jl
and
and
mov
cmc
shl
call
mov
inc
jo
mov
xchg
into
xor
mov
dec
sbb
leave
cmove
dec
jnp
or
rol
jg
add
mov
ins
(bad)
loop
push
inc
out
out
cmp
daa
xchg
jg
mov
add
jg
push
mov
test
sub
addr16
mov
in
std
mov
mov
pop
add
bnd
aaa
push
cmp
push
pop
pop
stc
push
gs
mov
jb
fdiv
call
inc
or
cs
fistp
xor
jge
rcl
push
or
xchg
or
icebp
jg
fs
or
dec
movs
repnz
mov
test
inc
jmp
push
lds
pop
xchg
xor
cmp
scas
push
jo
inc
and
cmps
imul
lods
inc
cmp
mov
push
into
and
rcr
sahf
iret
xchg
hlt
pop
inc
mov
jns
loopne
adc
cmp
and
je
xchg
jae
aad
jp
sub
inc
fisubr
mov
ins
pop
stos
rol
inc
xor
mov
lea
mov
ret
jno
mov
push
adc
int3
jl
mov
xchg
std
test
jmp
test
paddsb
mov
add
in
imul
mov
ins
clc
mov
punpcklwd
imul
lea
push
xor
(bad)
ins
shl
repnz
inc
xchg
enter
es
imul
outs
pop
xchg
push
mov
imul
push
(bad)
into
out
mov
enter
push
add
sar
repz
lahf
scas
jo
pop
call
ds
jno
test
scas
inc
stc
jg
mulps
xor
adc
ins
dec
leave
lods
mov
pop
xchg
in
mov
out
jne
clc
dec
add
xchg
push
sub
dec
or
call
sbb
xchg
lds
push
pop
test
push
xor
gs
out
or
sub
push
dec
movs
sub
cld
outs
pop
lds
adc
je
fisub
loop
psubusb
add
je
dec
sbb
ret
loop
fstp
into
loopne
idiv
cli
test
addr16
outs
retf
cmps
xchg
(bad)
aad
std
addr16
shr
sbb
es
lds
push
imul
mov
test
cmp
out
sti
inc
adc
movs
xchg
cmps
inc
push
call
retf
sbb
stc
pop
cmp
movs
push
ds
cs
dec
mov
and
pusha
inc
mov
pushw
sub
push
jle
cmp
and
mov
jp
(bad)
push
mov
xor
pop
retf
inc
inc
fld
pop
aaa
in
push
jl
or
jle
cmp
xchg
dec
jnp
jae
mov
mov
retf
out
daa
cwde
lock
mov
dec
add
rcl
pop
adc
jb
mov
sub
xchg
cmp
mov
adc
add
push
sahf
sbb
popa
sar
inc
jg
cmps
hlt
in
fsub
std
or
cs
pop
xor
cmovns
adc
hlt
xchg
loope
and
retf
sub
adc
std
rol
add
dec
out
leave
shl
hlt
stos
dec
or
and
add
pop
pop
xchg
or
and
out
jl
loop
and
ret
mov
repz
sbb
shl
nop
lock
stos
stos
fldenv
and
or
in
sbb
and
mov
jmp
xor
and
xchg
xchg
cmc
jge
dec
out
das
aam
aaa
xchg
into
jae
inc
inc
in
test
lds
add
inc
sub
ins
mov
scas
xchg
test
jecxz
adc
push
stc
icebp
xor
inc
inc
xor
arpl
(bad)
aad
cmp
out
mov
out
mov
stos
mov
jns
pop
xor
ss
mov
sbb
ins
movs
add
pop
mov
(bad)
mul
or
jge
shr
add
inc
and
xchg
cmp
or
mov
add
imul
rcr
dec
dec
xor
das
ret
cwde
ins
pop
mov
ins
daa
inc
mov
into
mov
or
sub
xchg
shr
in
pop
mov
dec
out
add
out
dec
adc
aas
out
inc
and
test
ret
cmps
add
je
test
sbb
cmc
call
or
aaa
int
jbe
pop
mov
imul
in
sbb
ds
add
xor
es
dec
je
cmp
sbb
lea
xchg
ret
jge
adc
mov
mov
jns
or
std
call
fist
outs
xor
imul
jno
xchg
dec
daa
mov
jmp
jbe
retf
mov
and
sub
div
inc
and
mov
or
mov
dec
push
aas
inc
jo
mov
cmp
jecxz
sbb
mov
cmp
push
nop
mov
push
and
add
xor
mov
sti
xchg
sbb
inc
dec
ins
jnp
fs
sbb
mov
(bad)
sub
sub
jg
das
outs
sub
jne
mov
fwait
sub
aaa
inc
jb
icebp
mov
pushf
sbb
mov
clc
pusha
ss
sbb
sbb
inc
xor
int3
ds
cli
nop
mov
push
jmp
into
xchg
idiv
inc
sub
or
xchg
jne
sub
sub
fcomp
shl
daa
jne
or
dec
mov
je
and
je
push
adc
jo
xor
gs
movs
cwde
cli
retf
clc
ret
lds
add
jne
mov
int3
fsub
adc
fcmove
(bad)
icebp
add
bound
jb
and
imul
inc
in
cmp
(bad)
xchg
xchg
loopne
sub
xor
in
xor
ins
push
jae
test
cmps
jl
mov
ss
repz
mov
scas
hlt
(bad)
ja
xchg
xchg
ds
and
xor
and
jmp
xchg
call
adc
mov
enter
pusha
xchg
cmc
test
inc
pop
sbb
out
dec
bound
sub
jmp
cmp
pusha
adc
test
jg
retf
sbb
out
fs
cli
into
push
jle
ins
test
or
and
outs
inc
sti
pop
mov
sub
adc
movs
mov
pop
pushf
sbb
call
fist
fwait
or
in
stc
sub
inc
jbe
add
mov
jecxz
xor
inc
jecxz
jecxz
outs
pop
int
push
push
mov
pop
arpl
or
iret
sub
call
pop
fnsave
cmp
mov
or
inc
pop
cdq
xchg
jb
js
in
ja
jb
scas
pop
pop
xchg
scas
in
pop
jnp
maskmovq
push
test
addr16
dec
fwait
leave
add
shl
aaa
mov
and
sbb
pop
pop
xor
nop
fiadd
rol
ret
and
fidiv
sbb
xchg
rol
fsubr
mov
(bad)
(bad)
test
scas
je
xor
mov
icebp
mov
jmp
mov
add
loop
xor
fidiv
sbb
jge
dec
xchg
ja
xchg
push
scas
or
repnz
and
(bad)
cmps
jmp
pusha
xchg
(bad)
hlt
sti
push
fisttp
jl
xlat
cmp
pop
cli
sbb
xchg
adc
pop
xchg
mov
sbb
cmps
mov
xchg
sar
xchg
inc
lock
or
add
mov
jp
lods
inc
mov
mov
mov
inc
xor
psubw
lock
in
mov
jge
(bad)
stos
pushf
inc
js
(bad)
fsubr
sub
jle
sbb
lds
bound
sbb
mov
ds
hlt
and
xor
add
retf
fst
cmps
psllw
sub
bound
mov
push
or
inc
mov
leave
dec
dec
sbb
mov
test
jle
lahf
leave
cmp
push
pushf
and
pop
int
mov
dec
and
pushf
shl
repz
bound
inc
adc
sbb
aas
out
shl
ror
aam
sbb
adc
in
(bad)
xchg
add
cmp
xlat
inc
out
mov
mov
mov
sbb
in
fist
mov
fistp
stos
stos
jnp
and
mov
aas
mov
in
mov
adc
and
fadd
lods
cmp
pop
popf
mov
addr16
adc
and
xor
mov
retf
movs
test
dec
xor
push
repz
icebp
mov
les
push
mov
jmp
or
mov
sbb
jno
inc
mov
add
pop
pushf
cmp
jae
int3
je
iret
aaa
add
repz
test
jbe
pop
call
cmp
sub
and
fnstsw
mov
mov
out
xor
mov
mov
mov
test
pop
mov
pop
aad
stos
pop
push
mov
rcl
bound
push
ins
mov
in
fdiv
dec
mov
or
xor
push
sti
dec
mov
mov
jl
aam
mov
jmp
cwde
mov
sahf
or
rcl
inc
xor
jle
arpl
pop
test
push
(bad)
nop
fsub
jmp
data16
and
movs
mov
jb
add
xchg
jo
icebp
pop
pushf
enter
mov
test
inc
mov
les
jbe
fsubr
pop
outs
movs
pushf
test
sbb
scas
vgetexpss
ret
inc
call
inc
mov
and
leave
jb
sub
cwde
xchg
add
cld
nop
hlt
test
jnp
mov
pop
ins
dec
aaa
(bad)
movs
sub
mov
retf
push
sti
sub
sbb
adc
iret
sub
inc
mov
sub
cmp
in
sub
hlt
test
(bad)
mul
ret
(bad)
mov
cmc
xor
mov
imul
cmp
mov
nop
leave
pop
add
inc
adc
mov
clc
call
loope
mov
fidivr
or
cmps
fs
jo
lods
sbb
jecxz
arpl
mov
cmp
test
dec
ret
push
rcl
out
je
push
ins
cld
dec
push
sti
cs
fdivr
aas
jae
jnp
inc
sbb
xlat
sub
sub
fcomp
inc
push
adc
lahf
outs
je
mov
ins
jecxz
scas
mov
jmp
cmp
jno
bnd
popa
mov
pop
inc
sub
sub
pop
push
push
in
test
das
sahf
stc
cmp
and
or
scas
fbld
and
push
jne
sub
(bad)
cwde
push
adc
xchg
xor
arpl
in
xor
loop
cmp
out
(bad)
aaa
sbb
ins
push
jno
add
pop
inc
repz
mov
add
shl
(bad)
push
ds
(bad)
in
cmc
movs
rcl
leave
inc
mov
int
fisttp
cs
jmp
(bad)
int3
aaa
pop
jle
dec
sub
lea
dec
mov
adc
fdivr
popa
cmp
cld
stc
pop
push
dec
out
movs
sub
or
mov
pop
mov
loop
pusha
push
in
jp
xchg
push
nop
push
xchg
lahf
stc
hlt
movs
mov
push
popf
(bad)
cmp
add
push
sbb
mov
stos
test
mov
inc
imul
dec
or
push
xchg
mov
sub
pop
shl
dec
and
push
mov
push
push
xor
(bad)
addr16
fxch
jg
call
es
aas
test
inc
mov
inc
call
mov
rcl
pushf
sub
xchg
jge
(bad)
repnz
xlat
movs
cmp
sbb
xchg
fwait
outs
cli
dec
xchg
add
mov
and
leave
test
push
jge
pop
sahf
add
adc
int3
data16
and
jmp
fmul
cld
jno
inc
test
push
int
retf
add
xchg
or
sub
mov
or
adc
movs
or
clc
(bad)
mov
(bad)
test
fs
xor
(bad)
and
jne
adc
jb
xchg
cdq
inc
jbe
enter
jo
pop
aaa
dec
test
test
mov
inc
push
xor
mul
push
mov
cmp
jmp
cmps
push
sti
mov
mov
repnz
in
jg
dec
outs
fild
inc
out
adc
outs
jns
mov
or
cmc
xlat
xor
scas
adc
jp
xor
ins
cmp
push
scas
or
sbb
xor
cmp
mov
out
outs
movs
push
dec
dec
outs
jl
xchg
jb
jae
adc
push
iret
jno
cmps
push
out
mov
call
ins
das
stos
mov
push
jge
add
das
add
pop
jecxz
lods
mov
gs
pop
arpl
or
fisubr
imul
inc
cli
test
sti
mov
inc
shr
iret
popf
sbb
xchg
xor
dec
sub
cld
add
add
lds
sub
not
in
dec
pop
ins
jge
xchg
mov
shr
cmps
outs
nop
mov
mov
aas
pop
pop
fcomp
ins
xor
aas
daa
iret
pop
pop
jp
repnz
rcl
xchg
jecxz
loope
push
jge
(bad)
sahf
jae
jmp
add
mov
mov
imul
test
or
sub
xlat
jp
sahf
imul
push
xchg
loop
inc
inc
and
nop
sbb
loop
pop
imul
pop
ret
mov
mov
pop
adc
or
mov
pop
ss
nop
cdq
xchg
sub
sub
movs
pop
movs
out
fstp
pushf
iret
sub
dec
dec
fimul
aad
and
push
pop
fcomp
sbb
cmp
push
data16
movs
cmp
ret
mov
in
xchg
leave
loop
lods
rcl
sub
call
mov
xor
clc
jno
mov
xchg
inc
stos
scas
push
sbb
mov
jbe
mov
lods
xchg
inc
mov
imul
mov
(bad)
das
les
cmp
movs
sub
cwde
mov
xchg
pushf
cdq
je
push
jns
mov
push
mov
cmp
xchg
neg
dec
cmp
(bad)
pop
cmp
sub
push
cdq
ret
push
or
add
add
push
lock
(bad)
mov
cwde
mov
xor
inc
pushf
je
xchg
cli
mov
cmp
fcmovu
ins
je
adc
push
outs
lods
stos
jmp
sub
(bad)
js
fnstcw
mov
sti
inc
pop
scas
inc
nop
fbstp
cmp
jmp
leave
xchg
repnz
ret
stos
out
xchg
pushf
xchg
arpl
jo
aad
push
push
mov
sbb
jg
test
outs
daa
adc
pop
movs
cmp
outs
(bad)
test
mov
pushf
cmc
jne
mov
push
mov
jns
addr16
je
in
test
add
in
hlt
pop
xchg
fldcw
cld
mov
inc
xchg
shl
bound
jg
push
xor
inc
js
lock
ja
loop
push
xchg
or
cmp
ror
imul
mov
xchg
xor
rcr
and
(bad)
nop
adc
scas
add
lock
imul
push
hlt
push
gs
out
sub
fidivr
pusha
cmps
mov
test
mov
sub
mov
hlt
or
mov
test
test
lahf
mov
scas
sbb
xor
pop
and
ins
imul
push
mov
sbb
test
pusha
push
mov
push
mov
cmp
sub
sub
jnp
repz
aaa
into
sbb
jmp
sub
ficom
ror
ret
xchg
iret
mov
pop
or
(bad)
jg
cmps
ins
mov
push
pop
mov
push
clc
es
fadd
jnp
inc
dec
call
mov
retf
ja
pop
(bad)
retf
cmc
push
adc
jo
lods
and
test
retf
bound
push
jns
inc
pop
push
daa
imul
inc
cmp
mov
jo
mov
mov
sub
retf
pop
or
ror
ins
and
push
dec
ret
cmp
repnz
enter
jae
inc
je
and
and
icebp
pop
call
mov
je
jge
sub
shl
pop
in
enter
add
add
mov
xchg
rcr
call
mov
push
add
mov
cs
aam
pop
xor
xchg
mov
xchg
dec
jl
jno
inc
xchg
mov
mov
in
fs
push
addr16
loope
les
mov
inc
ret
xor
fist
jno
(bad)
ins
scas
rol
int3
mov
mov
inc
ja
and
ja
loope
popa
push
popf
repz
icebp
lods
adc
enter
push
leave
inc
cmp
pushf
mov
add
(bad)
and
pop
sbb
in
or
retf
mov
loope
sub
and
pop
sub
mov
xor
es
enter
inc
fisttp
mov
dec
imul
aaa
loopne
xor
mov
ds
setnp
gs
retf
ret
jmp
shl
inc
in
jmp
jmp
jne
test
mov
cdq
or
fwait
mov
sbb
adc
fisttp
xor
jge
jg
scas
int3
test
sbb
xchg
(bad)
xor
aad
xchg
loope
sub
inc
and
jae
imul
inc
stos
cdq
call
add
shr
push
sar
or
in
pusha
pop
addr16
fs
aaa
ins
mov
sbb
es
cmps
jb
fdivp
sub
sub
sahf
sbb
inc
scas
mov
inc
(bad)
clc
sbb
mov
pop
and
inc
ins
inc
int3
mov
xchg
and
push
push
addr16
sub
adc
or
push
leave
jno
enter
mov
(bad)
mov
cmp
inc
or
in
outs
adc
push
fwait
cmp
cmp
cmp
jae
sub
call
ja
stc
add
test
xchg
scas
sbb
pop
push
xchg
jo
into
cld
jnp
cli
mov
adc
inc
pop
cmp
jp
imul
push
ficom
pushf
mov
xchg
pop
inc
xor
std
sbb
sbb
pop
mov
jg
add
push
xchg
xchg
cmp
or
(bad)
rcl
popf
outs
repz
sbb
jnp
stos
cdq
fs
lahf
outs
adc
pop
lds
mov
mov
jmp
pop
(bad)
mov
imul
sub
ds
mov
andps
cmc
jl
cmp
stc
cmc
jmp
jl
sub
and
mov
inc
movs
ss
jne
push
stos
push
push
xor
addr16
scas
or
imul
push
movs
inc
xlat
inc
loop
push
pusha
call
sub
sahf
das
pop
neg
fadd
xlat
pushf
pop
xor
and
movs
les
ret
aas
cmps
jp
fbstp
and
and
jnp
inc
sub
jno
add
and
xor
addr16
push
cmp
enter
or
adc
js
mov
aaa
and
das
sbb
mov
sub
es
mov
rcl
and
sbb
and
push
(bad)
aas
pop
sbb
addr16
(bad)
stc
cmp
stos
xchg
gs
mov
xchg
bound
or
fidivr
or
mov
lock
sub
dec
ds
mov
mov
loope
retf
xlat
popa
int
fst
sub
or
arpl
inc
pop
cmp
mov
cld
sub
enter
mov
(bad)
sti
dec
icebp
mov
sub
mov
sbb
test
mov
mov
sub
nop
aad
xchg
inc
add
push
add
outs
fwait
add
loop
or
cmp
dec
int
push
arpl
mov
pop
shl
repnz
mov
mov
enter
jb
in
(bad)
mov
adc
aam
push
into
inc
rcl
gs
inc
jecxz
pop
es
mov
jno
pusha
sub
outs
(bad)
jo
gs
cmp
es
xor
mov
or
in
(bad)
adc
test
test
icebp
mov
mov
mov
pop
mov
pop
in
mov
cmp
ins
in
(bad)
das
sub
out
fmulp
push
dec
inc
in
push
scas
dec
xchg
inc
mov
xchg
test
inc
cmc
pop
int
out
in
sub
cdq
jmp
out
and
dec
mov
shl
(bad)
or
and
cmp
sbb
or
icebp
mov
aam
mov
and
hlt
repz
or
xchg
adc
outs
(bad)
pop
inc
xchg
jo
fstp
or
out
out
ror
(bad)
sub
vhaddpd
imul
mov
xchg
test
sub
mov
clc
or
sub
test
imul
and
push
pop
fbstp
ins
or
loop
push
or
jb
rcl
(bad)
rol
cmp
adc
jecxz
pop
mov
rcr
pop
mov
and
das
test
inc
sub
cmp
sub
mov
push
fisubr
ret
dec
ret
cdq
hlt
xor
mov
and
test
push
arpl
fs
popf
jbe
fsub
xchg
push
adc
push
cmp
loopne
popa
adc
dec
xchg
sub
mov
mov
repz
shl
jecxz
jle
cld
push
jg
sbb
and
shr
lods
iret
das
es
nop
mov
push
push
(bad)
invd
jmp
fwait
pop
fwait
xchg
cmp
movs
mov
push
and
lahf
fmul
jb
xor
push
and
add
pop
jecxz
adc
test
retf
pop
(bad)
and
inc
lods
js
xor
sub
cdq
out
cmps
inc
shl
adc
xchg
shl
cmp
xor
cmps
jno
test
push
push
loopne
test
dec
in
add
lods
leave
xor
sbb
sbb
cwde
sbb
lahf
and
pusha
retf
pop
iret
fs
cmp
or
mov
fdivr
pop
ss
or
xchg
mov
fild
xchg
jge
mov
and
cmp
movs
xor
ret
sbb
jg
iret
sub
mov
xor
inc
mov
mov
stos
jmp
and
aaa
lods
mov
je
push
push
clc
pusha
js
add
and
jmp
pop
out
loope
pop
jne
daa
stc
test
data16
out
adc
mov
fxch
outs
mov
bound
retf
and
in
fucom
push
mov
xchg
xor
sbb
jl
xchg
sbb
mov
hlt
mov
inc
sub
clc
dec
(bad)
xlat
leave
adc
xchg
cmps
popf
mov
(bad)
aam
gs
and
push
retf
mov
mov
or
adc
xchg
fld
xor
lock
cld
mov
or
lahf
add
fidivr
mov
call
mov
xor
enter
mov
les
das
scas
ins
loope
mov
sbb
and
sub
mov
clc
aam
inc
icebp
in
sbb
aad
jne
(bad)
bound
cmc
jno
mov
leave
inc
or
stc
sub
gs
mov
sbb
ins
aad
or
xor
fwait
mov
stos
xchg
int3
movs
and
lahf
sub
dec
popw
test
scas
dec
inc
add
sbb
retf
loope
push
mov
mov
loope
ret
fist
rcr
outs
lahf
mov
jb
mov
popf
mov
and
dec
int
stc
or
or
retf
(bad)
addr16
add
shl
and
sub
sub
xchg
cmp
add
movs
jnp
stc
xchg
fmul
or
ret
sbb
add
xchg
mov
call
mov
pop
cmc
mov
daa
loope
das
nop
cmp
in
xor
loop
call
les
mov
pop
pop
xor
sub
jbe
mov
pop
and
push
loop
or
fist
dec
mov
loopne
sbb
enter
mov
addr16
or
or
mov
clc
or
ins
daa
xchg
dec
je
push
das
lea
adc
in
loop
out
imul
call
or
ret
xchg
repz
mov
sbb
mov
pop
fcom
stos
pop
rdtsc
repz
mov
bound
loop
xchg
sbb
pop
loope
jns
pusha
int3
inc
cmc
fwait
xchg
ins
jmp
jnp
fwait
div
test
out
imul
imul
jns
(bad)
rcr
std
push
jmp
hlt
xor
or
clc
jge
lea
out
sub
sbb
out
retf
and
pop
fstp
or
cwde
mov
out
jne
aas
neg
stos
sbb
push
cmovb
pop
les
xor
cmps
hlt
leave
inc
in
fsqrt
je
add
xor
mov
ins
xchg
mov
inc
in
push
jbe
mov
popa
jge
dec
xchg
out
pop
push
inc
stos
stc
loope
mov
sbb
jnp
add
pop
out
or
mov
sbb
inc
movs
pop
push
xor
mov
popa
add
xchg
mov
fsubr
dec
mul
hlt
jecxz
xor
fsub
or
mul
popa
std
xor
mov
std
lock
mov
sub
xchg
mov
bound
fs
dec
cdq
pop
xchg
push
dec
jo
in
das
xor
jno
es
cwde
(bad)
mov
(bad)
cs
call
lahf
cli
mov
cmps
fistp
jmp
adc
nop
jg
cld
jmp
jns
ja
adc
xchg
push
enter
aam
adc
dec
(bad)
jne
mov
xchg
xchg
mov
enter
adc
test
sbb
sub
inc
ss
in
test
rcl
enter
loope
cmc
aas
out
shl
ret
inc
mov
cmp
sub
ds
hlt
push
cmp
or
jae
ficom
add
dec
ins
and
in
sub
push
dec
sahf
loope
out
mov
shl
je
ror
mov
shr
fst
dec
inc
jmp
push
mov
dec
ds
xor
xor
dec
cmp
mov
fld
adc
pop
(bad)
and
(bad)
xchg
push
mov
sbb
inc
pop
or
mov
or
mov
and
fidivr
cmc
mov
and
xchg
mov
adc
dec
jmp
rcl
xor
push
rol
push
je
sub
jmp
inc
jnp
shr
jmp
dec
fild
cmp
mov
(bad)
pop
mov
sub
push
in
add
jp
jae
xor
leave
outs
xor
mov
iret
aas
pop
aas
movups
xchg
ins
sub
aad
loope
dec
and
cmp
cli
push
pop
xchg
cmp
aas
pushf
imul
in
jge
fisub
mov
std
inc
cld
cmp
cld
xchg
inc
out
dec
xor
jle
idiv
xor
(bad)
lock
cmp
int3
inc
dec
pushf
(bad)
loop
outs
mov
movq
mov
sbb
mov
sahf
out
and
lods
out
xor
jmp
xchg
fadd
add
sub
inc
std
adc
sub
xor
xchg
push
mov
jmp
jae
enter
push
sub
dec
inc
cwde
push
cmp
in
pop
add
sbb
repz
xchg
cmp
mov
stc
ins
jne
mov
call
loop
(bad)
out
shl
sbb
test
sub
loopne
adc
leave
dec
mov
sti
dec
jbe
adc
lock
cmp
(bad)
arpl
cmp
sbb
push
cdq
dec
aas
loop
mov
les
test
(bad)
sub
test
cli
pop
mov
xor
ficomp
nop
or
hlt
mov
inc
add
dec
jg
hlt
mov
push
push
jg
add
xchg
test
in
cmps
or
or
and
dec
loopne
xor
pop
push
mov
(bad)
and
adc
inc
cdq
lock
(bad)
mov
(bad)
shl
sub
imul
jg
ins
call
out
xchg
(bad)
inc
lahf
cmp
sub
int3
mov
add
xchg
xor
mov
js
xchg
imul
sub
pop
test
dec
stos
push
add
movs
cmp
or
enter
and
pop
cmp
fdiv
pop
aad
xor
out
in
lods
mov
pop
mov
into
js
fisubr
(bad)
and
and
loopne
xchg
mov
sub
outs
xor
lods
adc
iret
std
xor
jmp
fs
jmp
(bad)
(bad)
jge
ror
mov
and
sub
daa
dec
imul
or
das
push
xchg
and
(bad)
loop
adc
jp
dec
jle
enter
mov
jnp
push
jmp
movs
push
fs
sti
scas
les
pop
fs
sub
test
stc
sub
dec
test
cdq
pop
xlat
ins
mov
or
dec
pop
xchg
fs
and
and
jg
ja
xchg
add
sar
rcl
sub
pushw
in
(bad)
mov
pop
ja
jno
aam
add
adc
xchg
pop
or
in
aas
mov
arpl
pushf
adc
clc
inc
sub
xchg
and
cmp
xchg
movs
ins
ins
inc
xor
push
mov
gs
jo
cmp
or
or
dec
ins
dec
icebp
mov
push
ins
pop
inc
sub
dec
mov
sub
shl
ret
imul
mov
cmp
inc
and
or
sti
xchg
mov
stc
lahf
or
xor
adc
(bad)
xor
push
and
mov
xor
dec
mov
cmps
fs
movs
mov
or
movs
loop
pop
adc
rcl
xchg
sub
add
das
movs
or
aad
les
mov
mov
ins
cmp
sub
inc
mov
adc
js
dec
scas
enter
xor
and
sbb
lods
xlat
pop
popa
dec
sti
imul
hlt
sbb
ds
push
inc
cmp
adc
inc
push
cmp
fmulp
push
call
in
sub
sbb
mov
cld
imul
mov
leave
ror
(bad)
bound
sub
ficom
and
adc
call
popa
xchg
jb
in
inc
loopne
cmc
add
iret
sub
jle
cmps
ins
sahf
leave
mov
movs
xchg
pop
jb
and
cs
ret
sub
push
fsub
repnz
dec
int3
sahf
inc
jae
pop
sti
fisttp
push
test
mov
add
dec
into
or
fadd
and
dec
loopne
inc
cmp
sar
in
int
sbb
inc
loopne
loope
outs
mov
jns
jne
aas
ss
sub
cmc
and
loop
test
adc
mov
fild
xchg
jecxz
jmp
ins
lock
dec
fucomi
mov
mov
xor
mov
lods
clc
jno
(bad)
shl
test
ja
push
mov
in
hlt
lock
(bad)
mov
xlat
call
or
test
xor
int
jns
push
mov
push
cmp
out
movs
(bad)
xchg
leave
or
(bad)
sub
cs
outs
dec
or
jb
loopne
popf
mov
push
int3
mov
mov
fwait
cmp
ja
inc
sbb
or
aam
inc
in
mov
fnstsw
(bad)
or
outs
sub
movs
or
mov
aaa
daa
jno
xchg
jb
out
mov
data16
mov
(bad)
jg
inc
xchg
movs
add
adc
sbb
jns
jmp
in
dec
sbb
or
in
(bad)
aad
dec
or
mov
mov
dec
sbb
mov
jae
gs
and
and
cli
iret
lea
(bad)
mov
ins
lods
sbb
mov
loopne
mov
scas
test
xchg
add
xchg
sbb
int3
inc
pop
inc
cmp
sub
dec
sbb
retf
add
push
mov
js
pushf
in
gs
adc
or
imul
push
sbb
inc
push
lds
(bad)
lahf
int3
stos
jnp
cmc
imul
xor
pop
add
cli
mov
mov
sbb
rol
mov
xor
(bad)
and
mov
mov
enter
pop
and
push
sbb
cld
in
das
pop
sbb
cld
push
jae
push
cld
(bad)
idiv
jbe
xor
and
repnz
ins
xchg
push
std
sbb
cld
add
jp
mov
movs
scas
push
clc
lahf
push
clc
sub
add
xchg
shl
ret
push
sar
cmp
adc
bound
sbb
pop
push
inc
pop
or
into
daa
je
mov
or
in
fsub
call
loope
lods
sub
inc
sbb
rep
outs
or
(bad)
retf
sbb
movs
xchg
call
adc
and
lds
popa
xor
out
and
pop
stos
xor
mov
imul
jmp
sub
stos
sbb
lods
fisttp
or
inc
mov
loop
add
inc
pop
lahf
cmp
into
aas
inc
push
sbb
fs
ss
pop
xor
pop
dec
inc
int
dec
sahf
in
adc
ror
mov
ss
aam
stos
movs
jmp
imul
cwde
inc
hlt
scas
cs
arpl
xor
outs
(bad)
bswap
sbb
test
aaa
ins
xor
or
inc
dec
call
pop
cmp
dec
mov
call
mov
and
jle
test
cmp
(bad)
neg
xor
mov
lds
sbb
push
mov
push
xor
imul
lods
xor
aam
pop
pusha
es
cmp
xor
fwait
push
cs
pop
xchg
arpl
pop
ficomp
or
pop
mov
pop
or
inc
(bad)
aad
jp
push
(bad)
mov
push
stos
or
fistp
cdq
xor
mov
dec
out
xchg
jmp
nop
dec
or
movs
or
or
xchg
jnp
push
loop
div
(bad)
out
pop
jo
cwde
adc
stos
test
dec
retf
into
stos
lods
mov
jmp
in
jg
push
xchg
inc
data16
jmp
daa
mov
add
icebp
inc
cmps
sub
add
out
adc
loop
fsubr
xor
add
and
stos
test
pushf
mov
(bad)
sub
stos
sar
ror
test
out
jae
call
das
sbb
cld
dec
sub
cmp
dec
sbb
fs
ss
dec
movs
cmp
and
out
test
push
out
jle
adc
add
xor
sbb
(bad)
pop
jns
ds
sbb
mov
pslld
cmp
jbe
jp
add
mov
stc
xchg
inc
jne
ret
and
jp
idiv
mov
pop
stos
dec
xchg
test
fisubr
push
in
mov
or
je
data16
push
scas
jmp
in
jb
xor
mov
cld
sbb
dec
shl
xor
fsubr
cmps
pusha
enter
pop
jo
xchg
dec
pop
out
(bad)
sbb
jno
ret
into
xchg
(bad)
mov
shl
xor
gs
out
aam
pushf
arpl
cmps
mov
repz
aam
push
into
cmc
daa
xor
mov
dec
rcr
jecxz
push
mov
pusha
inc
imul
and
mov
adc
je
push
push
(bad)
xchg
lods
ret
call
mov
or
cmps
movs
std
(bad)
cmp
pop
cmp
jns
push
fisttp
cmc
xchg
imul
test
(bad)
xchg
ror
scas
fisttp
jbe
mov
rol
sbb
nop
mov
jno
push
push
cmc
pop
jp
scas
(bad)
nop
aaa
pop
outs
fild
add
cmps
jecxz
call
xchg
mov
mov
sbb
(bad)
mov
mov
pop
sub
mov
xlat
inc
loopne
or
xchg
imul
stos
cmp
or
xor
scas
arpl
cmps
lods
sbb
jb
push
add
adc
aam
clc
pop
dec
cmp
cmp
push
mov
mov
dec
ret
popa
stc
add
xlat
sbb
inc
jge
mov
ja
mov
or
lods
clc
dec
rcl
pop
cmp
ds
xlat
add
add
ja
aas
xchg
out
jmp
push
lods
add
mov
xchg
bnd
out
push
or
leave
xchg
outs
mov
dec
and
dec
adc
or
or
es
pushf
jmp
sub
add
fmul
ret
stc
or
mov
xor
cvtpi2ps
dec
mov
imul
mov
out
pop
rol
aad
push
sar
sub
daa
dec
or
cli
push
mov
and
outs
mov
cmp
cmp
icebp
pop
jle
push
lods
cmp
into
(bad)
sbb
inc
jl
jl
jne
repz
retf
bound
sbb
xchg
test
sub
push
in
loopne
jg
push
mov
xor
mov
ss
cmp
cmps
sub
pop
adc
and
sbb
and
aas
dec
jo
das
scas
addr16
scas
clc
mov
fsubr
cmc
call
std
add
in
retf
test
pop
fnstenv
fnstsw
push
(bad)
sbb
jl
(bad)
cmp
inc
inc
xlat
lods
test
test
add
adc
pop
pop
mov
mov
fimul
xchg
and
xchg
leave
xlat
dec
popf
fistp
add
sahf
xchg
sahf
shl
cmp
add
cdq
push
push
loopne
scas
inc
and
jp
rep
add
mov
adc
sbb
jae
mov
popa
loopne
sbb
dec
sub
push
push
push
imul
movs
jns
in
or
inc
jecxz
sbb
bound
mov
cmc
sbb
ret
and
xor
cld
fnclex
inc
lods
and
jle
loopne
ret
sub
dec
pusha
outs
jp
cmp
daa
jg
pop
scas
cmp
push
std
in
cmp
cmp
aas
mov
push
cmps
mov
ja
pop
in
inc
pop
mov
xor
sub
xor
clc
jae
add
les
out
leave
and
mov
out
fadd
or
xchg
int3
test
mov
mov
iret
adc
inc
xchg
dec
jl
cmp
and
in
or
cmps
sbb
int3
loopne
retf
xchg
nop
and
lds
scas
mov
adc
add
pop
js
and
push
inc
mov
jno
pushf
xor
gs
mov
jno
lds
inc
outs
add
and
test
push
and
das
out
sub
lods
repnz
std
lods
dec
mov
and
cwde
or
les
sar
push
adc
mov
add
push
popf
iret
out
xchg
push
sbb
pop
shr
or
mov
jmp
shr
in
mov
xchg
fistp
inc
imul
mov
sub
pop
retf
push
pop
and
or
add
scas
icebp
mov
jle
and
(bad)
repz
push
add
pop
inc
xor
jnp
and
ja
jmp
ret
imul
sbb
xchg
sar
mov
mov
add
xor
add
mov
push
in
es
loope
fs
das
mov
in
push
ss
sub
adc
or
mov
aas
jmp
aaa
sbb
movs
ins
dec
mov
sub
sub
int
mov
or
sub
xor
out
ret
loop
or
icebp
addr16
and
cld
stos
and
aas
enter
lea
repnz
xchg
inc
mov
jl
pop
mov
(bad)
cmp
mov
inc
jno
clc
or
push
stos
ja
sbb
stos
addr16
pop
mov
lods
add
cmp
add
sbb
jle
cmp
pushf
into
inc
pop
inc
idiv
stos
pop
les
xchg
push
shr
push
pop
nop
push
xor
repnz
sbb
add
pop
outs
add
cdq
or
jbe
loope
inc
add
aaa
sbb
cmp
daa
mov
mov
stos
jl
mov
and
jne
cmc
push
xchg
and
sbb
shl
add
or
mov
fyl2xp1
pop
mov
std
or
dec
fmul
or
sbb
in
jecxz
xor
vsubpd
sub
sbb
mov
push
xor
fadd
jno
int3
clc
ror
test
outs
sub
iret
cdq
add
or
jmp
test
and
sbb
pop
sub
xchg
cmp
leave
jo
in
popf
mov
addr16
int3
mov
sbb
ins
lahf
outs
push
pop
or
push
test
xchg
std
rcl
xor
cld
pop
cmp
mov
cwde
in
xchg
pop
adc
loope
sub
(bad)
mov
mov
pop
nop
jecxz
lods
fstp
pop
pop
dec
arpl
test
xor
xor
dec
add
idiv
sbb
dec
loope
out
pop
retf
popf
push
xor
aad
sbb
and
popa
jnp
xchg
mov
cdq
out
inc
dec
lods
mov
mov
retf
shr
loop
mov
inc
loopne
in
test
mov
dec
pop
cmp
retf
cwde
pop
(bad)
aas
xchg
sahf
(bad)
sub
jae
mov
xor
push
and
call
jb
into
adc
xchg
inc
sbb
xchg
xor
call
mov
shl
aas
shl
pop
jae
fyl2xp1
(bad)
out
xor
sub
jp
std
inc
stos
sub
lds
stos
adc
mov
adc
push
mov
sub
fisubr
cli
jno
outs
cmp
lock
adc
sub
repz
add
bound
rcr
ret
dec
sbb
into
arpl
mov
inc
hlt
mov
inc
sub
test
and
enter
inc
clc
fsubr
rol
inc
ret
mov
jecxz
js
aas
jno
js
push
ja
fsub
xor
std
push
int3
push
data16
dec
loope
stc
dec
lahf
jns
pop
dec
ficomp
pop
bound
mov
mov
push
inc
stc
stos
sbb
mov
and
push
pop
sbb
add
mov
(bad)
int3
aas
(bad)
cmp
fisttp
shl
cs
call
lds
or
rcl
stos
pop
data16
mov
dec
dec
fidivr
(bad)
cwde
or
push
dec
jae
sbb
mov
mov
mov
rol
xchg
mov
cs
xor
jmp
out
sub
repnz
adc
fidiv
adc
pop
leave
arpl
xchg
inc
sub
inc
cmps
xchg
es
jns
lds
hlt
out
xor
or
sub
int
mov
pop
adc
(bad)
jg
mov
mov
rol
xor
jbe
mov
jnp
xor
or
and
in
aas
fisub
pop
xchg
mov
loope
fild
add
adc
fstp
lahf
lock
adc
mov
or
test
pop
adc
js
push
adc
pop
xchg
out
mov
leave
mov
aaa
in
mov
sub
imul
ret
ror
jmp
data16
pop
pop
out
dec
into
rol
movs
into
(bad)
or
xchg
adc
call
mov
iret
dec
scas
mov
and
loope
test
xchg
outs
mov
loopne
cld
das
(bad)
push
pop
out
mov
push
inc
push
push
scas
or
inc
or
test
mov
test
and
movs
repz
shl
mov
push
mov
cmp
or
adc
ret
fwait
jo
call
test
shl
rol
push
les
adc
sbb
fdiv
push
fdiv
leave
rcr
in
jmp
movs
pop
xchg
cld
sar
push
cmp
or
sti
pop
cmps
mov
fs
xor
sar
xor
mov
sbb
loopne
loop
popa
jns
or
dec
dec
sub
push
imul
xchg
aam
cmp
add
inc
cwde
mov
xchg
jg
mov
xchg
inc
lea
xchg
add
mov
int
shl
stc
call
fsubr
lock
cmp
in
jge
out
movs
fcmovu
clc
jb
add
adc
mov
pop
and
mov
lahf
cwde
xchg
jae
add
sub
xchg
ret
hlt
fisubr
and
pop
test
mov
lods
mov
rcl
sahf
dec
push
jne
xchg
adc
dec
leave
cvtdq2ps
dec
pop
and
jo
outs
push
ret
stc
and
(bad)
mov
cmp
pop
fisub
outs
pop
ja
clc
mov
add
cmp
inc
dec
(bad)
xor
sub
daa
ins
cmp
ds
xchg
les
js
mov
xchg
xlat
or
sub
enter
mov
lahf
mov
mov
retf
lds
jno
rol
cmc
pop
jge
xchg
clc
test
mov
mov
ret
lock
rcl
sbb
icebp
mov
dec
shr
and
enter
das
fwait
push
jno
idiv
cmp
retf
jae
sub
stos
push
popa
or
retf
xchg
les
xor
or
cmp
push
clc
mov
mov
pop
aad
jp
shl
aad
sub
(bad)
and
outs
and
sbb
xchg
dec
mov
jb
rcr
push
pop
inc
xchg
cmc
sub
bound
int
sub
mov
inc
in
xchg
fld
shl
inc
mov
xor
pop
jmp
iret
mov
jb
mov
inc
sub
inc
sub
into
ret
aad
(bad)
xor
sub
and
imul
mov
ins
adc
ins
mov
add
pop
aam
jmp
pop
int3
mov
es
or
lock
xor
and
mov
test
ja
push
inc
dec
fcomp
and
(bad)
fs
add
addr16
and
cs
ins
test
adc
scas
mov
test
pop
pop
aam
sti
xchg
push
out
mov
xchg
lea
sahf
mov
repnz
sub
push
popa
in
xor
js
repz
mov
mov
sysret
aaa
xchg
xlat
push
xchg
push
ror
inc
out
ss
add
je
pop
mov
inc
sub
nop
pusha
cmc
cs
adc
cmp
lock
mov
(bad)
sub
pop
or
mov
adc
call
mov
xchg
and
dec
and
mov
add
repnz
push
fs
add
and
pop
fst
int3
repnz
pop
mov
arpl
mov
cmc
fldenv
and
ja
push
add
mov
xchg
jnp
jmp
xchg
mov
xchg
cmps
sbb
mov
fbld
pop
cmp
sub
xchg
sar
xacquire
clc
je
ror
push
mov
cmp
pop
dec
sbb
dec
mov
mov
cmp
fcom
pop
sbb
scas
loop
inc
leave
call
cmp
add
jns
hlt
sub
imul
sbb
mov
jne
add
add
mov
lods
shl
jmp
jmp
and
and
pop
gs
inc
push
std
mov
fstp
bound
popa
mov
mov
push
jo
jnp
sub
pop
clc
sahf
add
dec
je
das
mov
mov
lahf
adc
push
inc
dec
adc
scas
pop
sub
inc
es
pushf
inc
xor
repnz
mov
xor
test
or
sbb
(bad)
ins
in
mov
fild
or
jl
js
mov
xchg
pop
dec
push
push
mov
in
gs
add
scas
pop
enter
mov
push
fld
sub
cmc
test
mov
scas
xchg
push
shl
cmp
sub
call
rcr
test
ds
call
fcom
adc
test
shl
sub
cwde
imul
call
in
gs
test
add
clc
aad
xchg
jno
xchg
pop
mul
pop
xor
or
push
and
jge
ret
lods
out
mov
daa
sbb
(bad)
test
iret
imul
stc
xchg
jecxz
scas
in
pop
pop
jge
aas
stos
stos
mov
aaa
cmp
pop
fisttp
ins
lods
aaa
scas
push
xlat
(bad)
lods
outs
sbb
inc
dec
push
or
xor
lods
cwde
and
rcr
and
ret
add
jl
dec
scas
sub
add
inc
inc
cs
cmps
adc
mov
mov
shl
sbb
jg
clc
neg
fnstsw
popf
push
out
or
repnz
cli
fnstsw
repnz
inc
push
out
cmps
pop
data16
je
sbb
cmp
cmp
mov
jg
pop
fld
xchg
(bad)
or
movs
ins
clc
popa
or
in
stc
mov
mov
pop
sub
sbb
popa
mov
mov
jbe
pushf
sti
test
sub
bound
stos
ins
leave
push
pop
or
xor
add
inc
frstor
push
xor
or
pushf
xchg
pop
aaa
es
in
int3
sbb
sbb
das
dec
add
(bad)
je
rcr
push
xlat
test
push
xchg
adc
shr
push
clc
cmc
stos
sub
push
lock
ins
mov
push
iret
ins
mov
in
ds
jge
push
pop
jae
cs
repz
mov
sub
mov
lds
jecxz
xor
pop
inc
sub
push
jg
jae
dec
ins
mov
and
and
popa
jge
mov
enter
sbb
mov
ret
pop
push
and
ja
sahf
sahf
mov
adc
mov
push
pop
inc
das
cmp
pop
inc
push
jae
(bad)
inc
or
scas
and
out
out
int3
or
add
dec
xor
lahf
mov
mov
pop
push
sub
movs
xabort
(bad)
cmps
test
ja
call
jge
popa
stos
adc
push
jns
aam
cli
int3
and
mov
movs
xor
adc
dec
fidivr
das
pop
sbb
dec
or
and
sti
jl
out
cmps
shl
mov
jge
jbe
daa
jp
scas
lahf
clc
xor
imul
push
test
sbb
pop
jl
(bad)
out
sub
push
sar
sub
mov
dec
out
xchg
and
clc
mov
mov
push
data16
clc
pop
leave
outs
sub
dec
pop
xchg
arpl
shr
cs
repz
lea
and
mov
fiadd
dec
fsub
xchg
loop
loope
neg
sub
fcom
fwait
mov
inc
mov
hlt
outs
hlt
jo
bound
push
das
outs
rcr
add
xor
shr
jbe
loope
movs
fnsave
sub
mov
sub
lods
gs
pop
ins
pop
add
mov
adc
rcr
push
mov
push
lahf
xchg
sbb
adc
jle
sbb
mov
enter
adc
or
mov
push
lods
enter
mov
inc
jp
dec
add
(bad)
enter
xchg
sbb
cmp
xor
imul
enter
jecxz
sub
inc
sub
add
mov
xor
and
cli
inc
add
fwait
(bad)
mov
(bad)
mov
cmp
imul
and
aam
xchg
lods
xor
fisub
push
aad
out
sar
imul
aas
cmp
dec
ds
aad
imul
xchg
pop
das
gs
daa
daa
and
mov
(bad)
outs
push
pop
test
(bad)
sbb
imul
jb
das
inc
outs
outs
fnstcw
rcr
jb
push
gs
jns
add
fmul
aad
outs
pop
adc
fdiv
mov
sbb
xchg
out
sbb
fimul
in
add
imul
mov
cmp
lds
stc
sub
sti
xchg
mov
rcr
inc
mov
mov
test
pop
out
out
jecxz
int
add
jmp
xchg
rol
jns
sbb
push
xchg
shr
clc
fstp
enter
mov
jno
pop
pop
mov
das
inc
in
push
ds
inc
jno
mov
add
push
xchg
sbb
inc
sbb
(bad)
mov
sub
aam
jle
mov
sbb
cmp
or
jl
(bad)
stos
fcomp
loop
dec
fimul
cmp
inc
(bad)
jns
rcl
pusha
(bad)
imul
std
ins
add
add
daa
mov
sub
xor
in
inc
stc
dec
xchg
fchs
mov
(bad)
not
jg
and
and
out
mov
imul
jmp
fidivr
add
stos
jnp
aam
mov
mov
outs
inc
cmp
enter
mov
pop
pop
lock
push
dec
fmul
daa
jo
pop
pop
in
xchg
xlat
mov
mov
aas
adc
ins
sub
aaa
inc
je
clc
jno
fldlg2
into
aad
test
cs
pushf
cmp
xor
sub
add
xchg
cli
out
fistp
dec
sbb
cwde
xchg
addr16
and
jmp
jge
fucom
jbe
xor
and
push
sbb
add
push
add
jbe
addr16
dec
jecxz
mov
push
imul
mov
mov
jmp
push
and
out
pop
mov
popa
jmp
sub
std
aas
ret
js
cmps
icebp
ret
inc
pop
int3
push
mov
test
aam
pop
cmc
inc
jns
xchg
push
jmp
ss
movs
push
and
nop
leave
mov
sub
cmps
adc
lahf
retf
retf
imul
xor
jp
jl
repz
aas
and
fwait
mov
shl
xor
inc
out
bound
imul
or
fiadd
or
jge
ret
call
xor
and
pushf
lahf
mov
lea
mov
cmc
sti
xchg
rcr
repnz
clc
loopne
dec
cmp
hlt
pop
popf
loopne
shl
jmp
and
pop
aam
add
or
jno
pop
inc
sahf
rcr
mov
lea
nop
mov
mov
mov
cld
and
pop
hlt
scas
lds
push
sbb
fiadd
ins
xor
mov
inc
jnp
mov
jbe
ret
push
inc
shl
mov
jne
xchg
out
bound
shl
scas
cs
stos
fiadd
adc
and
cmps
sbb
shr
xor
mov
hlt
pop
test
adc
cmp
fwait
loop
adc
jmp
out
popa
add
add
imul
inc
and
push
pop
sbb
gs
jge
(bad)
lods
in
mov
adc
addr16
aad
out
xchg
out
int
jp
cmps
push
arpl
mov
pop
scas
cwde
sti
sar
mov
dec
jo
sbb
xor
dec
and
dec
mov
daa
(bad)
pop
xor
push
pop
add
in
cmps
dec
push
ficom
(bad)
dec
mov
dec
popaw
stos
mov
dec
inc
retf
ret
mov
push
cmp
rcl
data16
xrelease
sub
pop
aad
inc
jg
jo
mov
cvtps2pi
mov
cmp
xor
mov
add
pop
push
in
dec
add
mov
dec
ret
pop
sub
in
daa
or
or
sbb
aas
popf
mov
xor
inc
jge
mov
or
mov
mov
xlat
(bad)
enter
adc
inc
nop
xchg
in
pop
not
xchg
xor
jae
push
sub
pop
movs
xchg
scas
aaa
popf
adc
mov
arpl
inc
popa
das
mov
jecxz
popf
jmp
dec
iret
loopne
out
and
pop
in
dec
jmp
adc
fidiv
push
push
sar
loop
das
push
hlt
inc
dec
push
call
adc
lea
sub
pop
pusha
(bad)
pop
repnz
cmp
push
jp
pop
pop
jb
aas
test
fist
push
aam
in
ins
or
bound
test
cmp
dec
imul
push
sub
fmul
dec
and
rcl
imul
push
call
pop
arpl
fdivp
mov
jmp
jnp
and
das
xor
js
push
jne
sar
jnp
scas
inc
mov
shr
leave
test
test
loopne
(bad)
push
xor
sub
popf
ret
aaa
mov
div
mov
xor
add
jnp
jbe
lds
cmc
push
mov
dec
xchg
fdiv
pop
xor
mov
xchg
pop
cmp
adc
or
ret
repz
test
jno
popf
inc
in
cmp
out
push
out
cmp
in
out
xlat
in
push
mov
mov
inc
mov
js
test
dec
(bad)
iret
imul
mov
mov
gs
cmp
pop
mov
mov
jae
inc
fcom
clc
mov
stos
icebp
sub
mov
dec
push
daa
jmp
ss
mov
ss
shl
stos
dec
jmp
mov
adc
lock
das
jg
icebp
rcr
int
loopne
bound
xor
pushf
mov
mul
and
(bad)
(bad)
and
inc
imul
hlt
xchg
mov
in
or
repz
fsubp
aaa
and
or
dec
fidivr
fucomip
rcl
push
dec
retf
mov
retf
mov
int
jg
scas
inc
push
cmp
cmps
and
jmp
(bad)
push
outs
addr16
in
loopne
push
cmp
es
gs
push
mov
ficom
sbb
in
push
pushf
dec
test
mov
loopne
adc
cmp
sti
or
aam
jno
(bad)
(bad)
or
cmp
test
or
adc
shl
mov
nop
int
fisubr
int3
mov
lods
lds
and
sub
je
int3
xchg
or
dec
jns
int
and
in
adc
lahf
ins
jmp
pushf
out
lahf
add
daa
test
cmp
mov
sub
xchg
push
outs
sbb
sti
cmp
popa
pop
sub
in
gs
sbb
dec
out
test
inc
push
jno
jbe
sbb
das
mov
imul
lods
inc
add
daa
cli
push
enter
cld
jle
imul
scas
ss
(bad)
sbb
push
in
fst
enter
xchg
movs
xchg
jb
inc
pusha
das
sbb
sub
fimul
rol
into
add
fwait
add
mov
fsubr
pop
adc
stos
fnstsw
adc
push
shl
pushf
xchg
sbb
jns
cmps
cdq
sbb
dec
xchg
push
adc
fst
call
inc
sti
jl
(bad)
out
icebp
jnp
inc
out
mov
jns
arpl
in
clc
std
cmps
pop
addr16
iret
aad
mov
int3
add
cmc
sub
pushf
mov
lahf
xlat
mov
aad
pop
(bad)
retf
inc
push
or
pop
xchg
dec
fiadd
add
inc
fwait
cmp
(bad)
ret
mov
xor
(bad)
pop
mov
in
mov
push
mov
push
lock
icebp
aaa
add
add
xlat
fstp
mov
std
mov
pop
jp
mov
cdq
push
pop
inc
or
jp
fs
fs
ins
rep
dec
sbb
adc
std
xor
sub
outs
popa
ds
push
test
or
pop
push
xor
ins
ret
fild
lds
xchg
adc
push
pushf
mov
mov
push
or
call
or
fistp
test
fbstp
jg
adc
mov
pop
pop
pop
adc
or
aad
dec
inc
mov
icebp
ins
add
enter
pop
out
sti
add
clc
mov
imul
mov
rcr
pop
cld
jbe
(bad)
pop
dec
in
outs
inc
dec
mov
inc
jb
xor
push
cmp
cli
cli
mov
lds
cs
(bad)
scas
idiv
out
xchg
mov
pop
loop
xchg
cmps
retf
inc
cmp
les
rcl
cmp
cwde
icebp
ja
jmp
dec
stc
or
jecxz
aas
imul
fild
adc
mov
cs
icebp
mov
retf
jns
hlt
push
mov
addr16
mov
test
pop
dec
cdq
and
mov
loopne
or
inc
mov
cwde
xor
mov
jge
inc
shl
dec
fadd
neg
(bad)
pop
pop
fs
ja
push
mov
or
sti
pop
shl
mov
push
pop
xor
dec
frstor
dec
inc
iret
mov
(bad)
add
sar
retf
daa
test
fs
je
bound
xor
jp
xchg
in
cwde
and
adc
pop
push
neg
or
mov
and
ror
xchg
jae
mul
push
jg
inc
mov
imul
sbb
imul
lahf
mov
mov
pop
ss
push
repnz
fucomi
jno
mov
jo
push
dec
aaa
test
rol
jb
retf
imul
shl
or
jmp
dec
mov
mov
dec
scas
sar
lods
loopne
mov
inc
imul
add
xchg
test
xchg
loop
je
mov
mov
es
push
xlat
pop
mov
out
or
ds
mov
or
push
(bad)
xor
mov
arpl
arpl
test
(bad)
sbb
movs
movs
dec
jbe
lods
adc
jle
and
pop
ficom
xchg
mov
push
daa
in
in
add
mov
adc
xchg
fadd
sbb
dec
movs
push
out
cld
cdq
sub
sub
add
mov
repnz
aad
xchg
ds
xor
aaa
scas
sbb
sahf
jge
dec
gs
into
ret
adc
xchg
mov
xchg
(bad)
xlat
jnp
xchg
xchg
or
inc
movs
sub
and
mov
adc
ds
or
jo
int
or
push
sbb
inc
sar
fdivrp
xchg
test
popf
(bad)
sti
fnstcw
and
das
leave
push
hlt
repz
push
mov
fcom
dec
jae
hlt
pop
les
rol
lea
imul
and
arpl
sbb
(bad)
cli
ins
mov
push
mov
push
xchg
std
or
push
stos
cmp
mov
retf
mov
and
xchg
pushf
xlat
mov
or
loop
je
aaa
(bad)
daa
cmp
pop
pop
push
and
imul
sbb
dec
fidiv
mov
jecxz
fsubr
cmps
dec
stos
hlt
out
pop
xchg
popf
int
lods
fldlg2
or
push
sub
mov
inc
push
out
dec
jo
mov
adc
dec
xchg
aad
pop
adc
jl
cmps
out
bnd
pop
ins
push
lahf
mov
(bad)
lods
mov
idiv
call
mov
cmp
mov
repnz
xor
iret
sub
jnp
and
adc
mov
mov
scas
dec
inc
jno
(bad)
arpl
sar
retf
and
inc
inc
imul
push
ret
inc
mov
mov
(bad)
xchg
imul
imul
push
jle
leave
imul
out
mov
mov
gs
push
shl
add
fadd
xchg
lea
jnp
adc
inc
add
and
sahf
add
fwait
out
inc
jg
pushf
lods
sbb
outs
pop
fstp
pop
and
sub
pop
xchg
loop
lock
add
xchg
push
xchg
push
into
cmps
xchg
or
repz
pop
jnp
test
and
fstp
fstp
and
lahf
push
xor
xor
mov
mov
in
jecxz
(bad)
jne
jmp
cmp
jne
xchg
ins
lea
hlt
lds
dec
pushf
mov
sbb
fbld
daa
sbb
pop
dec
pop
movs
pop
push
lahf
loope
jg
pop
dec
mov
cwde
test
js
ds
outs
loope
stos
movs
mov
fxam
(bad)
fdiv
loope
out
cmp
xor
aad
mov
cmc
xor
mov
fimul
xchg
ins
inc
cmc
add
hlt
gs
lahf
and
adc
mov
inc
adc
push
mov
pop
test
mov
dec
imul
lea
sbb
add
gs
inc
jb
mov
sbb
add
dec
hlt
out
shr
rcr
sub
jg
mov
mov
lds
mov
aam
add
mov
mov
mov
sub
imul
jle
aad
aas
sub
stos
xchg
mov
cmovp
loop
jo
fldcw
xor
inc
sti
adc
mov
int
data16
les
xor
dec
data16
push
loop
int3
call
jns
jle
test
sub
inc
xchg
imul
jmp
mov
imul
sbb
les
inc
fprem
(bad)
xor
push
repz
stos
cmp
cld
pop
mov
ror
movs
ror
adc
xor
mov
adc
fwait
outs
xchg
dec
out
push
pop
xchg
xor
ss
nop
add
pop
into
fbstp
sub
imul
out
div
je
test
mov
push
in
icebp
xor
xchg
(bad)
imul
add
das
push
push
jo
loopne
mov
stos
mov
sub
push
ds
iret
add
dec
outs
sar
loop
mov
(bad)
sbb
sbb
ja
jnp
add
jne
pop
movs
and
pop
pop
ror
dec
push
cld
or
jg
aaa
retf
mov
cs
pop
push
ret
in
jnp
outs
clc
in
sub
pop
out
pop
sbb
jle
arpl
mov
fistp
inc
aaa
ja
scas
jo
inc
repnz
inc
ror
cli
sbb
sub
ror
out
push
sbb
pop
js
mov
inc
fimul
pop
push
and
jp
enter
(bad)
jecxz
add
inc
retf
and
adc
(bad)
jae
xor
cld
gs
(bad)
fnstenv
jns
cmp
or
out
pushf
jno
(bad)
cmp
or
test
repnz
repnz
inc
mov
xor
sbb
scas
push
sbb
out
cs
mov
push
pop
jp
push
mov
cmp
or
ror
push
mov
adc
jp
int3
pop
(bad)
push
cmps
or
jo
sub
mov
mov
fild
mov
add
pusha
cli
xor
xlat
es
mov
adc
xor
out
pop
push
jae
xor
arpl
pop
scas
fstp
mov
xor
pop
push
xor
xchg
xchg
pop
xchg
jl
xchg
rcr
add
sub
mov
xchg
dec
sub
scas
ja
popfw
jp
call
stos
mov
jp
icebp
cld
adc
scas
cdq
jmp
cdq
or
je
je
rcr
ja
push
add
xchg
(bad)
sub
xlat
mov
inc
dec
adc
add
sub
jns
loope
pusha
push
js
aaa
add
mov
jmp
in
fadd
nop
push
call
jp
sahf
mov
cmp
aas
mov
ins
push
inc
inc
dec
pusha
stc
mov
mov
movs
cmp
pop
sbb
test
in
leave
arpl
hlt
icebp
ss
cld
mov
push
lods
adc
or
fdivr
in
mov
pop
mov
add
in
sub
retf
pop
pop
pop
test
imul
outs
and
jmp
movs
(bad)
and
outs
push
mov
pop
in
and
std
dec
mov
lahf
push
xor
jp
cmp
push
repnz
dec
scas
scas
adc
push
shl
bnd
mov
add
test
mov
cmps
lock
xchg
enter
je
sbb
jns
mov
loope
pop
cmps
adc
je
repz
lock
mov
adc
lods
mov
adc
jl
movs
inc
xor
jecxz
dec
lahf
in
mov
pop
(bad)
cmc
aad
jmp
adc
stc
push
aaa
cmp
gs
loop
ret
outs
jbe
push
stos
xor
stos
sbb
cdq
mov
inc
push
mov
mov
cmc
sbb
retf
daa
sahf
jmp
sub
adc
and
or
mov
lods
imul
movzx
mov
test
and
push
xor
pop
int3
add
cli
inc
sbb
ror
fdiv
pop
push
repnz
cmp
pop
ins
jmp
hlt
fidivr
test
cmps
aad
lock
(bad)
cmp
lock
pop
enter
mov
out
mov
mov
pop
movs
push
jmp
test
sbb
in
mov
rol
mov
addr16
sub
cmc
test
sbb
(bad)
sbb
stos
ins
add
mov
mov
sahf
push
scas
test
add
push
pushf
pop
dec
cwde
pop
loop
movaps
dec
es
xchg
call
ins
test
inc
push
add
lods
ffree
adc
push
mov
cmp
mov
and
mov
cmp
mov
fstp
popa
test
movs
call
jmp
dec
xor
dec
(bad)
popf
test
jmp
fcom
clc
pop
push
(bad)
imul
xor
repnz
jbe
and
mul
cmps
test
repnz
dec
or
ins
sbb
push
fild
xor
js
inc
mov
adc
(bad)
xor
xor
mov
mov
cmp
or
lods
and
scas
mov
pop
call
in
sbb
push
dec
pop
outs
movs
or
fidivr
xchg
std
and
dec
sti
adc
int
push
mov
(bad)
mov
push
sbb
popf
adc
cli
mov
xchg
xchg
fnstsw
sub
out
icebp
aaa
fst
fadd
add
lock
popf
dec
lods
push
in
xchg
or
test
fisttp
adc
(bad)
mov
sub
(bad)
pop
or
xor
sub
ins
mov
adc
ins
push
outs
(bad)
adc
das
lock
fist
pop
movs
or
push
data16
or
fst
xchg
iret
(bad)
out
call
sbb
cmp
fld
test
push
and
adc
lahf
pop
push
push
stos
ret
and
jmp
pop
xor
pushf
daa
and
loop
and
or
xor
cmp
retf
lods
retf
mov
sbb
popa
dec
sub
mov
inc
mov
test
mov
sbb
jbe
cmps
jmp
inc
pop
sahf
xchg
or
test
(bad)
xchg
test
or
ins
mov
pop
dec
ins
sub
pop
pop
push
jns
and
adc
add
int
dec
jnp
sbb
popa
xchg
retf
xlat
outs
pop
sti
cmps
sub
cwde
or
xchg
lds
jnp
inc
lods
inc
dec
and
imul
dec
std
cli
call
out
mov
push
cmps
push
or
mov
mov
cdq
pop
lods
pop
jne
(bad)
out
add
hlt
ds
cdq
dec
clc
imul
sbb
add
movs
fstp
and
inc
and
imul
ficomp
cmp
xchg
enter
jb
int3
aad
jl
mov
ja
and
scas
mov
into
cwde
jno
loope
or
cmc
mov
mov
lahf
inc
scas
shr
jge
pop
popa
and
daa
mov
jae
scas
je
add
push
inc
cmp
xchg
jmp
or
int3
in
dec
inc
jno
popf
jg
sub
loopne
(bad)
mov
push
stos
add
das
dec
mov
or
mov
add
xor
(bad)
imul
adc
sub
into
pushf
nop
mov
add
xor
fcom
sub
rol
add
addr16
leave
aaa
add
jg
aaa
sar
rcr
xchg
inc
ret
mov
in
jbe
not
movs
das
xchg
imul
popf
add
add
mov
lds
jle
mov
aad
jo
jmp
inc
ss
ficomp
mov
daa
sbb
fsubr
stc
repz
xchg
mov
mov
cmp
lea
out
or
xchg
or
inc
ja
push
push
retf
jo
call
fscale
jno
test
test
push
pop
out
loop
call
xor
xor
mov
ja
shl
and
mov
movs
jae
add
(bad)
xchg
pop
repz
movs
push
lock
daa
inc
sbb
push
dec
fist
ins
jno
mov
xor
ja
repnz
push
sub
dec
imul
aaa
inc
mov
fcmovne
movs
pop
jecxz
sahf
adc
scas
lds
mov
ins
cmp
or
(bad)
sub
mov
mov
shl
scas
inc
pop
cs
rcl
aad
shr
mov
(bad)
adc
sbb
mov
xchg
sub
je
test
and
pop
scas
clc
gs
sbb
mov
xchg
pmaxub
jge
xor
or
push
mov
call
fxch
ja
cmp
daa
mov
outs
jl
adc
stos
jmp
in
xchg
dec
xchg
mov
sbb
jnp
cmovns
cmp
adc
cmps
adc
imul
mov
(bad)
jp
and
mov
push
test
mov
and
inc
mov
xchg
fisub
xchg
jl
(bad)
(bad)
fld
test
and
mov
fs
xchg
mov
fdivr
loopne
leave
cmp
sub
sti
dec
stos
pusha
loopne
dec
movs
pop
je
ins
(bad)
pusha
mov
or
xchg
add
repnz
jns
ins
sahf
sub
test
cmc
or
mov
push
scas
adc
repnz
movs
xor
jl
enter
arpl
and
push
pop
mov
mov
clc
fwait
jbe
inc
mov
pop
cmps
push
or
or
sbb
jmp
cmc
retf
pop
or
lods
mov
fild
push
enter
sbb
xchg
fisub
idiv
xchg
dec
fsubr
push
in
add
in
fwait
and
ja
xor
cmp
inc
pop
fucom
cmp
pop
mov
je
jp
jg
bound
push
cmp
or
and
jbe
cld
repnz
jmp
fwait
js
push
xchg
sub
gs
popa
mov
inc
pop
dec
push
and
hlt
xchg
stc
jb
ja
push
mov
je
mov
mov
stos
out
and
pop
test
add
push
enter
inc
mov
out
jno
aad
inc
cwde
test
ss
test
dec
rcl
push
mov
dec
push
xchg
and
repnz
mov
stos
in
mov
dec
(bad)
xlat
loop
lods
add
mul
(bad)
pop
mov
ds
xchg
dec
jo
icebp
sbb
sbb
dec
pop
or
jns
pop
sbb
inc
add
cmp
mov
movs
jmp
add
les
call
sbb
lahf
lahf
call
scas
inc
ret
jge
std
sub
ret
jbe
mov
nop
sti
lock
sbb
std
sbb
aad
loopne
lods
retf
stos
push
fidiv
arpl
jo
rcl
jl
push
mov
jbe
outs
outs
pop
or
vcmpss
xchg
jmp
retf
retf
fcmovnbe
in
xor
push
push
mov
inc
fld
adc
ror
mov
add
call
ret
ret
les
mov
pop
sti
movs
adc
mov
sbb
cli
mov
sub
pop
loop
hlt
outs
out
or
lods
imul
mov
pushf
dec
ds
lahf
icebp
jge
mov
mov
aas
and
stos
or
jp
pop
loopne
fdivr
mov
mov
in
cli
shl
js
lds
stc
fyl2x
dec
jg
cdq
fdiv
neg
aam
sbb
out
int3
movs
cmp
jns
enter
add
int
sbb
repz
int
out
or
push
int3
jbe
imul
je
pop
inc
sahf
retf
mov
push
cmp
sbb
add
cld
inc
imul
dec
sbb
mov
jb
add
(bad)
inc
test
mov
jg
imul
xchg
push
jmp
pop
repnz
dec
or
es
jmp
ins
(bad)
movs
sub
not
and
aam
(bad)
mov
sub
dec
fisub
call
cmps
add
mov
aad
imul
cmp
fwait
jne
lods
(bad)
add
jecxz
mov
inc
push
mov
ds
int3
sti
cwde
mov
or
gs
adc
bound
gs
sub
fwait
sbb
adc
movs
dec
mov
and
jg
fidiv
pop
pop
out
push
and
test
add
fisubr
xor
adc
cmps
imul
add
dec
cli
fucomp
pop
jno
mov
mov
punpcklwd
cld
jg
inc
jle
push
int3
(bad)
test
and
in
rol
shr
inc
shr
repnz
jg
stos
cmp
mov
outs
push
push
es
out
mov
test
repz
dec
pminub
dec
ss
xor
aaa
ins
out
xor
add
mov
into
mov
fs
repnz
cdq
cmp
cmps
shl
jb
fldenv
mov
retf
retf
xchg
(bad)
retf
jns
mov
dec
ret
cdq
and
imul
cmp
and
add
test
push
and
sub
sub
jno
xchg
cwde
out
xchg
jbe
xor
movs
xchg
and
or
mov
or
cmps
sbb
xchg
xchg
xchg
or
(bad)
test
mov
in
and
rcl
adc
retf
mov
and
or
mov
clc
mov
push
jmp
call
mov
bound
sub
sbb
mov
add
test
arpl
in
ja
aam
or
xor
jae
xchg
sub
sbb
or
sub
cli
dec
and
outs
rol
xor
jbe
jmp
fld
add
aad
cmp
jecxz
outs
(bad)
mov
dec
lock
push
mov
aam
cdq
jecxz
in
arpl
push
add
cli
and
mov
dec
lods
in
fs
inc
inc
test
inc
ds
pop
and
dec
mov
and
add
fldenv
cdq
cmps
adc
mov
sbb
inc
out
add
pop
(bad)
cmc
adc
dec
ficomp
bound
xor
ss
cmps
adc
(bad)
int
push
(bad)
jmp
out
pop
pop
mov
cld
cmp
inc
inc
mov
arpl
jmp
fistp
add
add
jecxz
aam
mov
and
sub
jmp
pop
mov
cs
lds
mov
mov
loop
sar
daa
push
inc
outs
jnp
pop
ret
popa
addr16
mov
aam
scas
pusha
xchg
imul
pop
pop
and
es
out
mul
or
xor
sub
pop
jl
popa
in
js
push
mov
xchg
mov
xor
push
stc
(bad)
jne
in
ror
test
es
dec
and
dec
popf
test
mov
sbb
xchg
sbb
add
or
or
add
repnz
loope
jg
imul
cmp
fadd
out
xchg
(bad)
in
adc
xor
mov
clc
push
pop
or
add
pop
lds
push
movs
fldenv
loop
mov
jae
daa
pop
int3
cmp
ficom
test
push
inc
jb
cmp
popa
or
mov
mov
nop
ins
ins
adc
mov
mov
fisubr
xchg
pop
mov
fisubr
push
push
jecxz
sub
test
(bad)
lds
cmps
mov
sbb
mov
sbb
(bad)
stc
aas
(bad)
jne
jno
repnz
mov
sub
es
into
mov
add
call
xor
sbb
out
repz
xchg
out
and
push
dec
add
arpl
sbb
ret
popf
sub
stos
imul
fbld
loope
jno
test
and
xor
fucomi
mov
movs
ss
mov
ficomp
mov
inc
mov
pop
xor
cmps
push
fxch
pop
inc
dec
sbb
cmp
in
or
pusha
aam
icebp
add
sbb
mov
cmps
jne
mov
out
cmp
dec
lods
loop
repz
jae
xlat
mov
push
adc
mov
dec
inc
push
pop
rcr
mov
cwde
js
arpl
mov
add
(bad)
jnp
push
inc
fstp
xchg
hlt
cmp
mov
test
cwde
sbb
fbstp
inc
xchg
jmp
cmps
sbb
test
and
mov
popf
rcl
jae
ret
pusha
mov
int3
loopne
cld
imul
lods
mov
jnp
gs
and
sbb
sbb
cmp
push
fistp
and
rcr
adc
mov
sub
(bad)
jb
jo
mov
push
or
mov
pop
inc
cmp
fwait
mov
mov
xchg
jae
leave
xchg
add
mov
in
mov
push
hlt
mov
add
fcom
lods
ss
push
push
xchg
bound
hlt
fbstp
iret
fild
jg
pop
xchg
js
push
in
arpl
xor
and
scas
add
sub
push
loopne
aad
or
mov
retf
out
ins
dec
movs
fst
or
xor
sar
inc
adc
mov
push
inc
add
pop
add
cli
adc
push
mov
mov
push
mov
(bad)
shr
daa
pop
mov
xor
mov
(bad)
aad
mov
or
xchg
mov
int3
jp
jp
xchg
repnz
xor
xor
loope
retf
repnz
inc
inc
adc
mov
cmps
lods
test
scas
push
xchg
mov
call
cli
std
mov
and
add
mov
add
aaa
fdivr
iretw
idiv
daa
inc
jns
clc
pop
les
in
popf
mov
mul
mov
adc
retf
jmp
jmp
call
enter
rcr
(bad)
sbb
sbb
fistp
lock
mov
loopne
arpl
rcl
jecxz
pushf
pusha
icebp
pop
mov
enter
je
push
int3
in
mov
inc
cmp
pop
imul
mov
mov
inc
into
js
outs
repnz
mov
jmp
sti
in
sub
stc
loop
mov
sahf
in
mov
xor
cmp
dec
int
xor
das
inc
adc
add
cmc
scas
add
mov
mov
mov
jb
pop
mov
out
lods
adc
mov
push
test
adc
dec
mul
push
hlt
or
test
adc
dec
in
mov
sti
mov
push
in
push
sahf
adc
std
mov
push
or
push
data16
inc
pop
clc
js
or
mov
cmp
popf
fstp
inc
leave
or
mov
mov
sbb
cmp
mov
(bad)
data16
push
cmp
push
add
cmps
pop
div
std
mov
cmp
cmps
mov
bound
shr
scas
nop
jp
push
mov
pop
jo
inc
xor
xchg
test
jge
into
add
out
mov
mov
jmp
cmp
push
ret
mov
ins
push
out
clc
sbb
cmc
jnp
ret
retf
push
push
scas
stos
loopne
dec
cwde
jne
(bad)
test
popa
shl
sub
out
xchg
or
(bad)
mov
xchg
mov
int
cmp
mov
ja
movs
dec
add
mov
dec
jb
and
leave
and
jo
out
mov
fiadd
fbstp
mov
cmps
aad
out
mov
cmp
lock
repz
fdivr
push
mov
jl
mov
aam
fild
retf
std
pop
lahf
sub
xor
cld
mov
movs
dec
sbb
adc
pusha
lea
movs
in
(bad)
xchg
call
stos
sbb
ss
stc
sbb
mov
aad
shr
push
xchg
mov
fdiv
icebp
hlt
pop
hlt
icebp
push
pop
loopne
xchg
pop
inc
nop
push
arpl
lea
push
jne
cmp
sbb
xchg
or
ficomp
leave
cmp
cs
xchg
aaa
jmp
outs
movaps
xor
xor
mov
xor
mov
popa
dec
(bad)
(bad)
mov
adc
mov
loop
push
jne
rcl
cli
mov
push
fdivr
mov
mov
push
cli
push
sbb
mov
ins
dec
sub
mov
out
(bad)
mov
mov
mov
push
in
popf
jmp
imul
xor
setge
add
das
adc
mov
imul
xacquire
imul
push
fcmovnbe
push
and
shl
je
mov
push
les
xchg
cmc
mov
es
or
mov
push
das
mov
fisttp
sbb
sti
fcomp
dec
sahf
push
hlt
ret
mov
test
push
mov
(bad)
pop
jo
sbb
inc
call
enter
inc
mov
aas
fcmovnu
mov
inc
stos
xor
dec
sub
mov
mov
add
aaa
jg
or
cmp
cmp
dec
inc
cs
out
ja
cmps
lods
sbb
pop
xchg
dec
mov
(bad)
cs
xchg
mov
clc
fwait
call
or
xor
ins
clc
imul
sub
xchg
lods
mov
icebp
add
add
xchg
jmp
aad
bound
lods
inc
add
mov
sahf
xor
fst
adc
cli
push
adc
aam
(bad)
mov
cmps
outs
mov
and
(bad)
sbb
sbb
mov
sub
out
xlat
and
lock
xor
rcl
jg
sahf
mov
jge
mov
xchg
clc
sbb
sbb
mov
inc
mov
retf
(bad)
jmp
xlat
test
pop
pop
stos
retf
repz
cmp
inc
daa
std
mov
lods
popa
mov
add
add
aam
fistp
jmp
add
and
push
dec
lock
and
fsub
outs
movs
dec
inc
fstp
jae
pop
push
xchg
aad
outs
fwait
pop
loopne
pop
xchg
lea
out
sbb
jg
ja
jb
dec
(bad)
(bad)
jl
dec
inc
mov
or
xchg
and
cmp
pop
pop
push
and
and
ret
rcl
add
stos
(bad)
sub
hlt
sub
stos
inc
xor
out
(bad)
push
mov
sbb
imul
pop
es
cmp
xchg
aad
aaa
lea
popa
arpl
xchg
hlt
jge
push
jnp
cld
ror
pop
je
push
pop
cmp
cmp
mov
loop
cmp
in
mov
mov
lds
out
or
call
scas
jge
stos
adc
adc
add
xchg
jge
or
pop
ins
xchg
dec
ret
sub
pop
mov
mov
mov
into
aas
cmp
and
xchg
(bad)
or
leave
jp
push
int3
movs
push
and
mov
sub
sbb
sbb
aaa
dec
jmp
sub
leave
shl
call
fcomip
sub
int3
cmp
movs
iret
jl
inc
xchg
dec
add
ret
push
(bad)
mov
sbb
scas
scas
push
fwait
or
stos
enter
jno
pop
sbb
outs
xchg
pop
pop
inc
fst
cli
sbb
ss
push
das
pop
add
repz
aam
ins
ret
dec
shr
leave
pop
xchg
mov
scas
cld
sub
ficom
pop
ins
ss
ja
dec
xchg
ds
stc
test
jle
sbb
test
mov
xor
jge
gs
mov
or
in
pop
jae
inc
cli
aas
add
sbb
cli
mov
sbb
es
cs
mov
cmps
and
cmp
pop
ins
xor
dec
or
or
xor
mov
sti
push
add
mov
push
retf
fist
ficom
fild
push
popa
rcl
cmps
cmps
pop
std
scas
jl
or
xchg
fdivr
aad
jg
fild
cdq
jle
lea
push
ins
lahf
add
pop
inc
out
xor
mov
sub
ror
fld
cmp
or
adc
(bad)
mov
dec
loopne
pop
(bad)
jb
push
xor
cld
std
adc
(bad)
sub
mov
cmp
pop
retf
push
xchg
aad
aas
fistp
add
and
in
mov
sub
inc
stc
jb
or
mov
jge
inc
in
xlat
adc
popf
xor
cdq
(bad)
es
inc
sub
push
icebp
cmps
jecxz
jo
pop
gs
mov
push
xor
dec
and
dec
(bad)
std
sub
stos
jecxz
or
cmp
jle
or
add
xor
fwait
sti
push
push
sub
pop
in
call
lds
mov
outs
fdiv
push
fild
push
enter
out
scas
pop
(bad)
lds
mov
jp
cmc
popa
into
movs
(bad)
and
lods
std
inc
sub
add
fnstenv
data16
aad
ret
xor
repnz
aaa
push
push
popf
xchg
sti
push
sbb
je
addr16
ror
aaa
or
jmp
add
cmp
lock
xchg
adc
dec
cli
jae
push
loope
pop
pusha
cmp
stc
cmc
jns
mov
or
dec
dec
mov
dec
adc
xchg
ins
xchg
add
test
inc
jge
imul
jmp
push
push
in
inc
(bad)
lds
mov
jge
xchg
cmc
mov
les
jae
mov
data16
ins
mov
leave
fwait
pop
add
test
jle
fadd
push
jbe
(bad)
mov
sbb
push
cmp
movs
inc
push
scas
dec
cld
cmp
test
fcomip
es
stos
pop
dec
push
xor
stc
test
mov
rol
inc
inc
out
xchg
jbe
push
clc
fdiv
loop
mov
or
jae
cdq
jae
lahf
mov
mov
lods
retf
push
pusha
shl
jne
imul
enter
lds
dec
sbb
adc
add
pop
scas
ss
loopne
mov
sar
dec
push
jmp
outs
mov
stos
mov
cmps
mov
cmp
test
mov
mov
movs
push
lahf
inc
fidiv
imul
(bad)
loopne
and
repz
cld
and
ins
xchg
cs
loope
enter
aaa
addr16
hlt
mov
pop
adc
inc
clc
movs
mov
xor
mov
cli
cmps
pop
scas
add
sub
xchg
xchg
xor
mov
std
leave
push
repnz
stos
shr
jne
dec
imul
jecxz
cmps
sub
movs
jecxz
mov
aaa
cmps
iret
psllq
inc
dec
xor
cmp
jmp
mov
adc
(bad)
cld
jbe
mov
lahf
(bad)
aad
mov
je
cwde
addr16
push
cwde
inc
xchg
xchg
push
frstor
or
push
push
dec
mov
(bad)
mov
inc
jae
iret
jnp
inc
cmp
jmp
push
push
cmp
ja
sub
cmp
popf
adc
pushf
retf
popa
fisub
stc
es
mov
pop
and
jmp
repz
outs
mov
imul
mov
inc
fwait
mov
cmp
loope
(bad)
repnz
jo
push
das
fstp
mov
sub
add
xor
dec
ss
lea
pop
pop
aam
push
outs
xor
(bad)
xor
xor
call
mov
push
fsub
stc
dec
sbb
jecxz
fmul
and
add
pop
push
clc
jle
(bad)
pop
ja
lds
jge
add
test
add
add
movs
out
sbb
xchg
push
inc
shl
and
dec
cmp
sbb
inc
xor
aaa
cmps
pop
sahf
and
push
sbb
adc
jbe
jbe
jo
ss
add
out
addr16
rcr
or
jno
sub
movzx
xor
add
mov
or
test
hlt
push
sahf
adc
aas
mov
mov
pop
jo
inc
sbb
int3
mov
in
jno
sbb
push
nop
xchg
loope
sbb
mov
movs
mov
add
sub
addr16
xchg
jp
pop
mov
cmp
adc
xchg
fisttp
dec
test
ins
mov
inc
jle
mov
push
aas
xchg
add
jbe
jle
fsubr
cld
add
lds
push
or
cwde
pop
ins
xchg
jmp
sub
hlt
into
push
mov
add
pushf
push
out
push
jecxz
inc
sub
jbe
mov
cmp
cmps
and
movs
aaa
mov
pop
stc
xchg
fwait
xchg
xchg
push
(bad)
pop
mov
xor
das
repnz
inc
jne
cld
pop
jns
retf
xchg
ret
sar
or
(bad)
sub
jbe
cmp
outs
jb
and
sub
and
push
pop
dec
enter
rcr
lods
inc
inc
icebp
sub
sbb
call
(bad)
mov
xchg
push
add
lea
repnz
pop
in
cli
daa
or
fs
push
ret
mov
mov
jns
cmp
mov
adc
cli
fcomp
inc
loop
adc
movs
sbb
sbb
pop
xchg
xor
mov
popf
dec
xchg
jg
dec
cwde
push
test
sub
mov
cmc
sar
popa
or
cld
mov
scas
shl
stc
add
sahf
xchg
mov
(bad)
repnz
xchg
cmps
loop
push
test
inc
mov
mov
or
jbe
jl
stos
dec
adc
retf
add
loope
outs
mov
jnp
loop
retf
lds
fimul
pop
retf
int3
mov
mov
mov
jmp
das
cmps
movs
sbb
int3
scas
fistp
pop
retf
mov
loope
mov
inc
sub
xor
adc
xchg
jp
jno
pop
pop
sbb
cli
fisub
mov
scas
xchg
cmps
jmp
push
jmp
mov
add
movs
(bad)
mov
pop
jecxz
(bad)
push
js
in
sub
(bad)
div
sbb
jmp
stos
inc
pop
mov
in
popf
pop
fsubr
inc
dec
pop
std
call
push
in
imul
imul
lahf
out
in
hlt
jecxz
adc
push
rol
xchg
or
inc
movs
cli
jns
mov
loop
and
sub
sbb
mov
out
jb
retf
lds
push
mov
lds
cmc
dec
imul
xchg
sub
jecxz
inc
mov
cs
ds
pop
add
test
mov
fldenv
(bad)
sub
mov
mul
mov
dec
xchg
cmps
dec
(bad)
test
inc
cdq
outs
xor
es
xchg
in
js
mov
mov
jb
retf
je
cli
xor
pop
adc
lock
xor
or
pop
mov
aam
addr16
out
dec
xchg
pop
cmps
mov
inc
jecxz
aas
sub
aad
inc
mov
and
shr
out
cmp
aaa
nop
add
sbb
mov
mov
je
sbb
cmp
fld
mov
inc
mov
and
pop
add
imul
outs
rcr
push
jnp
mov
add
fild
mov
out
shr
stos
inc
sub
(bad)
jae
(bad)
cmp
test
out
cmp
test
repz
movs
popa
mov
xor
repz
movs
lds
xor
jmp
push
jp
jmp
int
pop
call
mov
mov
mov
jg
fdivr
scas
inc
ins
inc
xor
add
call
dec
sbb
inc
mov
lds
adc
lds
jge
jecxz
cmp
and
push
test
or
mov
pop
or
mov
dec
mov
leave
jbe
aad
jmp
adc
js
aaa
daa
in
aaa
sbb
xchg
outs
hlt
xchg
out
es
cld
aam
push
clc
sub
mov
inc
ins
sbb
sub
dec
repnz
and
push
pop
pop
rol
xchg
mov
xchg
loop
mov
jns
push
cwde
mov
push
sbb
das
mov
lock
ret
shl
retf
mov
jb
jg
jne
lea
cmps
xor
cmp
mov
ja
retf
mov
pop
std
xchg
outs
sahf
push
fidiv
pop
pop
jl
(bad)
push
int3
pop
cmp
sbb
das
cwde
out
ror
inc
int3
push
mov
cmps
imul
test
xor
popa
cmps
add
pop
in
int3
and
inc
movs
pop
es
inc
push
test
movs
gs
or
std
add
fisttp
mov
inc
add
inc
mov
mov
in
xor
xchg
(bad)
in
mov
inc
dec
mov
jmp
lock
mov
mov
jp
pushf
(bad)
rcl
call
(bad)
fisttp
(bad)
cmc
in
scas
bound
mov
test
or
cmp
adc
and
mov
fisub
retf
neg
mov
cmp
or
pop
leave
mov
rcl
outs
mov
jecxz
fld
xchg
sub
dec
pop
dec
pop
dec
adc
movs
xchg
jbe
ds
lea
scas
add
push
(bad)
xlat
test
adc
jp
cmp
xor
push
push
(bad)
lahf
xlat
bound
out
push
test
mov
xchg
aaa
jecxz
loop
loope
loop
jmp
test
adc
mov
ret
test
and
lea
repz
mov
pop
out
popf
mov
jmp
loope
add
loopne
gs
sbb
add
pop
mov
jecxz
pop
mov
rcr
dec
into
pop
jecxz
dec
ins
addr16
jnp
out
mov
out
dec
pushf
xchg
inc
test
adc
(bad)
ret
xchg
int3
push
test
xchg
sti
lods
push
(bad)
sar
mov
fisubr
or
mov
mov
pop
cmp
mov
pop
jg
call
adc
call
push
shl
jecxz
clc
add
push
adc
test
or
or
ret
shl
inc
inc
cmc
pop
jae
cld
sub
test
or
add
repnz
mov
fstp
jle
push
jnp
test
clc
push
and
call
ins
xor
lock
mul
dec
aam
imul
push
retf
scas
mul
push
xor
mov
nop
pop
fild
test
stos
xor
mov
cld
je
adc
sbb
loop
inc
sbb
mov
adc
fisttp
ret
iret
push
scas
inc
pop
shl
mov
sahf
das
scas
pop
push
int
add
test
xchg
ss
retf
loop
xor
in
popa
cmp
addr16
push
mov
sbb
in
push
daa
out
ja
pop
jge
fs
fs
xlat
mov
pushf
or
xchg
add
ret
xor
sub
imul
cmp
mov
or
in
mul
loopne
lods
pop
or
adc
mov
mov
push
mov
mov
ret
loopne
in
ins
add
add
xchg
xchg
mov
add
int3
sub
cmp
idiv
fbld
cwde
test
and
ffreep
inc
fsubr
mov
movs
cwde
xchg
(bad)
and
and
movs
mov
mov
std
mov
js
int3
jo
mov
dec
cmp
test
out
lds
and
loop
jne
jmp
mov
xchg
sub
mov
add
shr
push
dec
ficom
or
int
inc
lods
xchg
jge
pop
mov
add
inc
enter
ficomp
je
cmp
mov
test
mov
out
xor
jo
jge
inc
ja
xchg
movs
popf
test
stos
retf
ror
inc
pop
ins
mov
jb
daa
rol
stos
imul
repz
pusha
mov
pushf
jno
pop
into
adc
je
push
cs
rcr
call
mov
sub
clc
pop
or
mov
jp
adc
iret
mov
arpl
adc
xor
mov
xchg
popf
xor
mov
stos
pop
fwait
dec
dec
jmp
dec
jmp
mov
xor
mov
fwait
adc
cmovnp
fsubrp
sub
dec
jle
pop
sbb
or
je
add
mov
out
stos
es
ret
and
sub
dec
mov
pop
in
movs
sub
hlt
pop
mov
cwde
adc
inc
loopne
test
lods
stos
push
xor
cmps
jne
js
cli
push
dec
mov
xchg
pop
outs
into
adc
je
cmps
dec
push
jmp
mov
pop
dec
mov
push
jne
(bad)
std
ss
stos
(bad)
pop
inc
jg
and
es
or
sub
inc
pusha
outs
push
outs
add
(bad)
or
jge
dec
fbld
mov
lods
mov
(bad)
or
xchg
in
sti
out
jmp
sar
fs
mov
pop
hlt
dec
pop
mov
sub
popa
jmp
jmp
xor
out
jae
test
pop
pop
adc
mov
push
push
xchg
stos
iret
mov
adc
fbld
mov
bound
pop
sub
cwde
addr16
and
jo
rcr
lock
jmp
pushf
xor
dec
mov
out
(bad)
mov
inc
dec
ret
push
mov
mov
pushf
stos
sahf
in
pop
xchg
add
pop
in
mov
data16
movs
imul
loope
mov
and
mov
adc
clc
or
call
inc
mov
xor
cmp
(bad)
xor
push
fisubr
retf
mov
xchg
rcl
cmps
rcr
add
cli
jb
imul
lahf
inc
ins
sti
mov
cmp
(bad)
data16
fisttp
push
(bad)
jmp
movs
pop
imul
lods
jle
xchg
fsubr
repz
aaa
and
xlat
and
cwde
shl
add
mov
adc
jge
xchg
cmp
jge
das
loope
inc
fld
dec
(bad)
outs
bound
adc
jae
xchg
in
sbb
or
xchg
mov
push
fs
cdq
xor
push
daa
and
mov
cmp
xchg
mov
gs
xchg
nop
int3
or
cmp
and
inc
aam
mov
cmp
je
dec
fnsave
mov
push
add
scas
enter
jno
stos
pop
jo
imul
fcmovb
hlt
aad
add
mov
int
dec
xchg
in
sub
and
pop
repnz
adc
dec
sti
xchg
aam
call
mov
leave
jle
cmps
adc
div
jne
cdq
adc
in
push
add
test
adc
imul
push
cmps
jmp
sub
mov
mov
cmp
cmp
int3
retf
push
ficomp
pop
loopne
inc
aam
jmp
shl
add
ror
or
xchg
push
sbb
leave
ja
mov
fiadd
cmc
daa
or
dec
arpl
loopne
adc
inc
addr16
pop
mov
fwait
(bad)
xchg
loop
xor
cmp
daa
fs
call
movs
adc
loopne
sbb
imul
add
pop
and
stos
int
xchg
mov
jecxz
xor
jecxz
jmp
jno
out
push
mov
and
lds
mov
sbb
ror
adc
test
out
arpl
shl
add
cld
mov
in
enter
xchg
inc
test
int
mov
lahf
mov
xchg
inc
jnp
aam
jne
or
add
pop
xchg
ss
pop
xchg
out
inc
repnz
cwde
js
out
fcomi
sub
jg
das
fidiv
push
xchg
mov
xchg
out
mov
cmp
mul
or
loope
or
cmps
jbe
sub
mov
xor
in
lods
xchg
(bad)
out
adc
stos
jmp
push
fmul
jp
icebp
clc
pop
pop
jmp
push
and
xor
mov
movs
ret
lods
sbb
call
jl
aaa
mov
adc
add
jg
push
sub
sbb
pop
cmp
pusha
retf
jg
(bad)
mov
pop
jecxz
cdq
cmps
(bad)
std
jnp
repnz
add
xor
fcom
imul
movs
scas
mov
je
pusha
mov
mov
sub
test
jbe
movs
in
call
mov
cmp
pop
inc
cmp
cli
outs
in
xchg
xchg
sbb
imul
jb
xor
xchg
repnz
(bad)
hlt
push
sti
mov
mov
mov
enter
(bad)
mov
sub
xchg
ins
lods
ds
enter
cmp
nop
add
add
test
jecxz
or
out
test
repnz
inc
mov
sub
dec
and
hlt
mov
(bad)
mov
cmps
dec
cdq
sbb
add
ret
pop
push
jp
(bad)
out
cmp
pop
push
push
(bad)
push
repnz
add
je
push
test
mov
push
pop
fcmovb
jg
retf
inc
jg
sahf
test
mov
cld
enter
xor
adc
xchg
mov
cs
pop
test
shr
sar
(bad)
jge
mov
shl
or
xor
test
rol
push
lds
(bad)
xor
mov
hlt
adc
inc
cmp
cdq
add
hlt
jge
lock
cmps
sub
sbb
jp
data16
pop
sbb
movs
in
cmps
bound
sbb
scas
sahf
test
scas
inc
aaa
or
inc
jp
jns
jmp
pop
sbb
push
movs
(bad)
int3
xchg
pop
mov
fistp
outs
sbb
les
and
mov
dec
enter
stos
adc
hlt
ins
fst
test
jmp
cli
ds
stc
retf
add
sbb
leave
mov
mov
inc
(bad)
dec
inc
sbb
xchg
arpl
add
mov
mov
jns
push
popf
sahf
push
jbe
stos
inc
das
pop
cs
dec
fadd
into
movs
fsubr
leave
fsub
retf
jo
ret
icebp
pusha
bound
sbb
or
mov
jo
es
frstor
ins
(bad)
jmp
out
je
enter
in
dec
dec
inc
pop
leave
pop
mov
mov
sbb
sub
pop
or
into
cmc
adc
push
mov
adc
adc
(bad)
stc
icebp
loop
lds
xor
jne
sbb
sub
rol
cmp
xchg
push
clc
mov
outs
inc
xchg
mov
dec
dec
pop
push
adc
out
pop
mov
xchg
out
iret
inc
dec
jb
xchg
mov
in
into
mov
dec
mov
and
imul
(bad)
xor
jmp
fld
dec
mov
in
shl
(bad)
pop
leave
shl
imul
and
sar
outs
push
mov
fadd
(bad)
in
cmp
inc
xchg
adc
jp
repnz
adc
dec
test
jle
xchg
out
mov
out
or
idiv
dec
inc
add
push
add
aam
(bad)
cli
daa
stc
rcr
xchg
rol
hlt
cwde
or
cli
mov
test
add
call
fidivr
lods
sbb
cmp
jp
inc
mov
pop
mov
cmp
data16
(bad)
mov
in
test
mov
xchg
xchg
adc
stos
hlt
scas
mov
scas
add
retf
sub
push
loopne
mov
xor
adc
adc
sti
bound
xchg
out
pop
aad
frstor
or
mov
dec
mov
mov
pushf
dec
(bad)
iret
jecxz
sahf
sbb
xchg
in
scas
out
fnstenv
rcr
repz
dec
pop
fnsave
sbb
sbb
sbb
mov
(bad)
xor
ret
xor
mov
xor
push
retf
aaa
sub
daa
sub
jnp
(bad)
test
les
adc
imul
outs
jg
idiv
cmp
sub
sahf
out
add
xchg
sahf
sbb
dec
mov
shl
out
rcr
adc
inc
int3
jl
xchg
rcr
sahf
fiadd
push
or
mov
pop
sahf
shl
jmp
sub
mov
xchg
pop
adc
ins
adc
lods
addr16
or
cmc
sub
inc
jg
pop
push
hlt
fidivr
cmp
(bad)
adc
shl
retf
mov
sbb
bound
out
mov
push
push
movs
sub
loopne
add
mov
pop
sbb
loopne
xchg
test
push
push
out
adc
std
shl
xor
sbb
outs
mov
test
jns
and
pop
sahf
push
sbb
cwde
fst
mov
ror
pop
js
lods
pop
iret
mov
xor
add
and
(bad)
(bad)
rep
into
cli
push
sahf
fs
jns
sbb
je
mov
cmp
lds
jge
adc
addr16
daa
and
shl
sub
nop
in
dec
out
cmp
jo
pop
test
adc
popa
scas
loope
out
fxch
pop
inc
add
scas
inc
xor
inc
sub
(bad)
xchg
or
cld
arpl
xchg
(bad)
jnp
ja
xor
aad
sub
mov
mov
popa
cmp
adc
arpl
inc
iret
jmp
std
ja
add
push
mov
xor
pop
jmp
cli
jg
(bad)
not
shl
fsubr
xchg
scas
dec
jge
mov
addr16
out
nop
jo
adc
jg
(bad)
(bad)
mov
mov
mov
test
xor
mov
clc
out
in
into
int
jp
sar
aam
aaa
popa
xchg
adc
adc
adc
mov
jns
xchg
inc
sbb
mov
hlt
mov
pop
adc
dec
jae
enter
and
mov
aam
les
fwait
out
mov
lds
sbb
jne
xor
leave
daa
out
cli
sbb
call
xchg
pop
inc
xor
pop
inc
xchg
push
ja
lods
lds
xchg
add
cli
xchg
dec
sbb
jnp
lods
pop
sbb
mov
push
(bad)
mov
out
cmp
loop
fs
xchg
je
ja
ss
test
inc
and
lds
ins
add
mov
mov
add
add
pfsub
sub
popa
or
nop
sbb
pop
push
aaa
lock
pop
xor
or
add
dec
test
shl
aam
or
or
xchg
inc
aaa
mov
add
xor
push
adc
dec
mov
lock
test
mov
loop
xor
add
xlat
lods
out
or
cld
adc
ficomp
lea
shl
dec
ins
aam
xchg
or
add
jmp
int3
sub
fcmovnbe
sub
mov
inc
mov
or
xchg
sbb
push
clc
or
mov
les
test
fild
mov
pop
adc
ret
push
in
outs
xchg
jns
pop
mov
mov
ja
xchg
idiv
inc
dec
pop
push
pop
xor
xor
or
xchg
cmp
aas
loop
pop
js
sub
adc
addr16
xor
push
adc
scas
xor
xor
into
in
adc
mov
jle
rcl
das
mov
sete
neg
jmp
xor
pop
push
adc
jge
test
out
pushf
cwde
cwde
xchg
rcl
push
xacquire
mov
xor
call
sar
iret
fwait
call
fidiv
dec
scas
mov
push
cmp
cmps
mov
aam
rcl
xor
push
das
inc
jb
pop
add
ss
mov
pop
mov
sbb
aam
fst
and
in
push
inc
cmps
add
ret
pop
fucomip
retf
ins
inc
repnz
mov
cwde
xor
popf
lds
(bad)
cmp
cmp
xchg
mov
add
test
add
imul
(bad)
jb
or
add
xchg
fimul
je
arpl
jp
movs
push
ins
jg
pop
and
loopne
imul
movs
mov
(bad)
loope
fadd
sbb
(bad)
ss
add
bound
jg
loopne
outs
pop
and
ret
mov
sar
ror
ss
mov
data16
ja
mov
pusha
cmc
js
repnz
adc
dec
ins
rcr
push
je
mov
xor
retf
das
scas
mov
cmc
in
les
add
mov
jge
jb
pushf
cs
and
int
popa
jne
lock
jecxz
xor
xchg
aaa
fisub
mov
pusha
fdiv
dec
mov
cmp
or
xor
fcmovbe
pusha
pop
mov
push
mov
mov
cmp
xor
and
mov
imul
ds
xchg
lods
fwait
in
mov
xchg
xchg
lods
mov
in
test
enter
inc
rcl
imul
dec
cdq
push
je
xor
hlt
repz
and
xchg
adc
push
cld
dec
jae
xor
push
push
mov
pushf
dec
icebp
push
xchg
lock
add
ficomp
adc
(bad)
ins
cmp
test
bound
dec
js
fcom
pop
sub
enter
jecxz
mov
test
clc
fcom
sar
jl
mov
mov
imul
ds
inc
pop
or
in
(bad)
pop
test
mov
mov
xor
jno
outs
mov
jnp
fisttp
push
lds
mov
ret
adc
jg
inc
and
xchg
mov
sub
sbb
iret
mov
std
sbb
sar
mov
loopne
push
pop
dec
jb
ret
fadd
icebp
sub
dec
pmaxsw
loop
jmp
ins
pop
inc
jns
xor
xchg
and
inc
ficom
xlat
pop
push
into
fs
movs
cmp
sub
push
ret
cmp
xor
cmp
jge
mov
xchg
shr
xor
mov
int
and
aad
sub
xlat
pop
mov
out
sub
and
dec
pop
sbb
ret
pop
test
dec
inc
outs
test
mov
pop
mov
vxorps
aaa
inc
adc
dec
and
inc
in
outs
fs
jns
jne
(bad)
out
xor
call
push
xor
aam
xchg
add
inc
pop
jno
aas
or
lds
mov
mov
mov
sbb
mov
xor
pushf
xor
jbe
fdivr
or
scas
mov
ror
test
std
ror
std
mov
dec
push
data16
adc
xchg
(bad)
(bad)
(bad)
mov
inc
mov
repnz
inc
cmps
lds
std
sbb
cld
push
mov
mov
pop
pop
pop
inc
iret
and
cmps
inc
sbb
div
stos
cs
sub
cmp
cdq
jecxz
sahf
push
xchg
das
into
sub
jp
inc
dec
mov
iret
shl
mov
sub
out
out
shl
add
sbb
das
sbb
js
popf
xor
mov
xor
dec
dec
cdq
fadd
mov
push
fisubr
jp
jmp
mov
sub
and
scas
pop
jbe
aam
outs
out
jecxz
enter
ins
lods
data16
pop
xlat
add
imul
mov
or
jl
sbb
adc
mov
mov
mov
sub
imul
clc
sbb
or
push
cwde
mov
sub
stc
gs
es
fstp
sbb
mov
into
test
xor
or
cmps
lea
js
cmp
out
add
add
leave
rcr
mov
dec
in
push
and
pusha
mov
xchg
ja
in
sar
clc
dec
mov
push
addr16
retf
fdiv
push
cmp
lds
xor
inc
cmp
test
xchg
(bad)
in
cmc
or
pop
or
and
jmp
aad
or
faddp
mov
ja
hlt
fidivr
mov
xchg
nop
dec
ror
fild
ja
or
sub
xchg
fistp
jle
inc
or
les
jbe
inc
mov
xor
fld
mov
mov
adc
jns
iret
and
cmps
pusha
ja
aaa
outs
push
in
mov
xchg
mov
mov
jmp
(bad)
add
pop
ret
inc
mov
stos
ds
mov
add
test
add
dec
jae
dec
gs
pop
inc
push
jp
inc
jmp
loop
jecxz
jns
mov
push
jnp
je
jo
jg
stc
inc
icebp
(bad)
sbb
lods
icebp
sbb
add
nop
leave
push
ins
enter
(bad)
fadd
pop
pusha
lock
or
or
mov
js
mov
arpl
mov
or
pop
ret
dec
call
jge
fwait
add
cdq
inc
sub
out
jmp
aas
shl
arpl
pop
clc
xchg
mov
adc
mov
ins
cmp
sahf
jae
sub
xchg
dec
hlt
ret
movs
mov
popf
add
div
cwde
add
shl
jbe
popa
sahf
mov
inc
sahf
cli
in
mov
out
nop
jge
fistp
xchg
(bad)
aaa
jo
and
sbb
cmp
dec
and
push
inc
sbb
stos
test
int3
or
sub
hlt
fwait
mov
inc
mov
scas
leave
(bad)
fiadd
(bad)
push
mov
scas
xchg
cld
mov
neg
add
inc
test
aas
or
call
pop
iret
add
dec
inc
pop
inc
ret
cmps
xchg
mov
(bad)
push
loope
jae
loop
pop
shr
cmp
xor
lds
mov
pusha
dec
aaa
enter
hlt
jmp
iret
es
dec
mov
in
pusha
jb
jnp
add
mov
fimul
idiv
mov
loop
gs
dec
rcl
mov
or
les
leave
inc
aam
cli
or
shr
mov
loopne
sub
test
int3
mov
add
cmp
(bad)
scas
xchg
(bad)
sub
popf
pop
jns
jecxz
mov
cmc
movs
stc
outs
leave
sbb
outs
jo
popf
add
push
imul
aam
or
xor
mov
call
sub
stos
inc
test
movs
mov
or
mov
jns
shl
addr16
pop
jno
test
ja
xchg
call
rcl
nop
jmp
(bad)
repz
into
test
or
(bad)
icebp
fsubrp
ret
sbb
clc
aad
or
hlt
lahf
jecxz
or
outs
cmps
arpl
lahf
jo
cmp
mov
xchg
push
jae
leave
sub
mov
rol
adc
cmp
enter
jnp
ins
shl
les
(bad)
mov
inc
pop
dec
dec
lods
cwde
ss
sahf
mov
or
aas
jecxz
ret
pop
inc
es
fcomp
cmp
mov
cmp
pop
inc
(bad)
jmp
pop
or
or
movs
push
cmp
dec
sub
push
movs
test
test
mov
dec
jmp
pop
sub
int
jb
pop
dec
and
(bad)
pop
cmp
cmp
ss
pushf
add
inc
mov
pop
in
add
xor
daa
addr16
loop
inc
(bad)
pop
dec
leave
dec
dec
call
popa
push
(bad)
(bad)
fnstsw
cmp
daa
adc
jno
adc
push
jns
mov
adc
fs
(bad)
in
shl
sub
mov
aas
xchg
xchg
pop
push
in
icebp
mov
test
push
test
lahf
(bad)
mov
xor
cmp
cmp
xchg
in
and
sub
jb
jb
idiv
xchg
ins
mov
faddp
(bad)
inc
popa
lock
sbb
xchg
dec
inc
mov
cmp
sbb
xchg
(bad)
jecxz
retf
xchg
(bad)
cmp
jo
repnz
add
mov
clc
pop
inc
mov
push
ins
pop
cmp
cmp
mov
retf
mov
loop
or
lods
(bad)
jae
gs
jmp
retf
(bad)
paddb
out
cli
lods
jae
sub
(bad)
ret
inc
fist
test
ror
cld
mov
js
rcl
bound
add
cwde
sti
xor
xor
xchg
aam
mov
push
xchg
fcom
jl
sub
in
es
cmp
add
in
enter
push
cs
shr
jmp
jmp
(bad)
pop
imul
xchg
pop
jns
cmc
mov
sahf
imul
std
push
in
mov
dec
inc
nop
ds
cmp
stc
xchg
mov
out
push
sub
mov
fdivr
adc
popa
push
outs
fwait
mov
and
push
cdq
ins
push
sti
sub
fidivr
sbb
mov
lea
or
adc
push
pop
stos
pop
adc
inc
(bad)
test
or
fwait
sbb
cs
cs
dec
pop
jp
fs
cmp
and
add
mov
sub
loop
sbb
aad
jge
mov
stc
mov
add
fwait
enter
pop
xchg
in
fs
mov
adc
test
sbb
repz
adc
arpl
in
add
or
and
mov
xchg
loopne
push
or
adc
sar
shl
pop
stc
loop
fwait
adc
mov
popa
pop
or
sub
js
call
punpckldq
mov
mov
sahf
in
in
push
mov
bound
in
jmp
push
icebp
or
fnstcw
out
and
sahf
pop
or
fisub
lock
push
loopne
jl
inc
fcom
adc
icebp
push
mov
mov
sbb
ret
pop
xchg
inc
dec
mov
xchg
adc
gs
or
dec
adc
sar
xchg
in
inc
(bad)
and
daa
jbe
outs
aam
fsubr
stos
les
add
imul
lods
pusha
fwait
es
imul
and
adc
pop
movs
mov
jmp
fdivr
fidiv
push
mov
out
push
stc
clc
adc
push
in
push
xor
push
es
sbb
mov
(bad)
jmp
std
imul
test
mov
xor
jbe
or
add
ret
stos
test
ror
aaa
push
sbb
add
movs
scas
(bad)
cmp
jnp
mov
cmc
xchg
xchg
loopne
mov
inc
sub
movs
mov
and
xor
dec
je
dec
lods
or
stos
aad
std
or
cwde
mov
jg
iret
push
int3
push
mov
inc
jb
adc
fsubr
or
test
test
(bad)
mov
test
jecxz
fsubr
pop
lea
and
pop
adc
jns
(bad)
cld
adc
pop
mov
stos
test
in
mov
xchg
inc
movq
push
ja
inc
(bad)
aas
sti
cmp
in
adc
fwait
jge
sub
jle
fld
in
and
movs
push
popf
push
jge
or
mov
mov
or
das
loopne
and
in
pop
jmp
fcomp
mov
out
daa
dec
push
inc
xor
pop
sbb
dec
xchg
sub
jmp
push
fisttp
test
(bad)
test
aaa
aaa
loope
loopne
inc
test
push
popa
clc
aam
fstp
inc
jns
(bad)
punpckhdq
imul
test
mov
pop
mov
je
test
aad
(bad)
lds
repz
inc
lahf
retf
fstp
dec
test
xchg
cmp
sqrtps
rcl
sub
mov
in
in
jae
(bad)
fcom
jle
aam
or
loope
push
lahf
sub
loopne
pop
cmp
jno
cld
jge
je
jae
lock
inc
adc
push
nop
ins
inc
pop
add
cwde
inc
inc
ret
rcr
mov
ret
jns
sub
jae
cmp
int
test
aad
adc
test
repz
retf
arpl
outs
add
ss
xchg
add
fisttp
loop
sbb
xchg
les
call
jae
int3
test
sbb
jnp
ret
push
nop
mov
jmp
cmp
mov
sub
mov
jne
iret
pop
mov
movs
mov
jo
inc
dec
pop
or
inc
inc
mov
scas
push
sub
je
add
jae
and
clc
jno
mov
dec
rcl
dec
fld
xchg
pop
in
js
loop
lock
inc
test
test
sub
pop
jno
mov
arpl
mov
xor
fild
into
sbb
dec
test
fadd
out
sub
pop
mov
jp
xchg
pop
xor
scas
dec
add
adc
ins
test
sar
xchg
ret
dec
add
xchg
or
(bad)
sbb
inc
and
pop
sbb
mov
cmp
mov
xor
clc
(bad)
sahf
pop
mov
imul
test
mov
aad
adc
push
call
pop
test
test
sub
mov
adc
(bad)
into
xchg
into
mov
push
push
fild
pop
dec
pop
call
pop
(bad)
lds
push
das
ins
outs
adc
sti
pop
into
adc
mov
call
dec
xor
cld
fstp
or
rol
push
sbb
dec
out
fidivr
pop
sbb
xchg
or
cwde
hlt
inc
mov
(bad)
icebp
adc
mov
int3
rcl
add
movs
mov
popf
jae
cmp
cmps
int3
sub
push
je
hlt
jb
or
cld
cmps
scas
pop
inc
lahf
mov
and
adc
mov
loop
ins
aas
pusha
adc
mov
push
and
dec
push
jo
push
mov
shl
loop
clc
mov
stos
push
dec
mov
(bad)
loopne
cli
rol
fistp
xor
imul
sbb
scas
cmp
mov
sub
add
test
fnstenv
inc
cmps
(bad)
sbb
inc
add
and
xor
adc
xchg
jae
ins
xchg
popf
lahf
dec
dec
sbb
jmp
pop
data16
xchg
addr16
push
xchg
jae
retf
adc
pop
inc
out
mov
dec
inc
lods
cmp
leave
es
or
ret
xor
in
jl
iret
fadd
mov
into
ficom
in
xchg
sar
mov
lds
arpl
repnz
mov
mov
bound
test
(bad)
hlt
movs
mov
mov
jbe
push
dec
push
inc
adc
mov
popf
rol
in
or
inc
and
jl
cld
jecxz
lea
add
js
cmc
(bad)
out
pop
outs
sbb
test
mov
(bad)
lock
sbb
pop
scas
retf
aam
dec
mov
xor
int
xchg
jnp
(bad)
repz
cmp
or
icebp
and
icebp
jge
inc
leave
fs
xchg
and
push
les
mov
add
inc
dec
xchg
xor
add
(bad)
jp
mov
xor
lea
imul
stos
and
push
shl
or
jle
sub
xor
cmp
pop
sbb
jns
inc
es
leave
and
pop
xor
add
(bad)
icebp
dec
adc
shl
cli
mov
scas
push
adc
and
ja
int
push
ror
ret
mov
mov
pop
pusha
dec
mov
ss
jge
hlt
enter
dec
aaa
movs
sbb
or
push
shl
fdivr
fcomi
std
sbb
aad
rcl
and
dec
retf
push
xor
sub
shl
mov
adc
in
fldenv
xchg
mov
sbb
pop
rcr
ror
inc
jbe
or
pop
cmc
out
cmp
retf
sbb
cmps
mov
jg
imul
movs
repz
sbb
out
or
repz
cmp
in
add
bnd
push
mov
mov
out
ret
xor
icebp
jne
xlat
fild
xlat
dec
sbb
xchg
sub
mov
adc
pop
jmp
adc
js
push
push
cmp
pop
stos
add
dec
popf
push
in
ja
mov
fstp
loope
jbe
xchg
jo
xor
inc
sub
jge
sti
lahf
sbb
fwait
bnd
clc
xchg
sub
add
dec
jle
jmp
cmp
push
enter
xchg
mov
fucomip
ins
inc
(bad)
and
and
aam
int3
xchg
adc
xchg
pop
inc
add
sub
dec
loope
xor
pop
mov
jbe
pop
or
xchg
clc
inc
add
push
movs
mov
push
ror
popa
pusha
call
loopne
mov
dec
sti
lds
lods
imul
les
xchg
nop
sub
pop
add
(bad)
xchg
mov
or
les
push
inc
shl
dec
mov
and
jno
xchg
mov
mul
fs
ds
ins
xlat
adc
(bad)
and
test
jo
cmp
inc
or
inc
into
xchg
adc
jbe
lahf
mov
or
push
sahf
jecxz
fisttp
adc
and
ins
dec
leave
mov
das
iret
int3
push
mov
test
sbb
js
mov
xor
sub
std
cmc
cmp
les
mov
shl
sbb
xchg
or
shr
jge
test
test
inc
fldcw
rcl
or
popa
inc
sbb
(bad)
cmp
(bad)
icebp
stc
test
pop
(bad)
out
jmp
jo
adc
mov
retf
inc
jp
or
ins
xchg
jl
les
inc
pop
adc
bound
arpl
enter
mov
cmp
xchg
fisubr
pop
sbb
test
xchg
adc
hlt
mov
adc
cmp
jb
mov
repnz
mov
lods
div
jbe
scas
mov
lods
std
pop
jp
stos
jo
inc
test
cmps
stc
test
fldcw
gs
(bad)
push
adc
rol
fld
lock
pop
jbe
cmps
ret
jle
mov
int3
xchg
sub
test
sub
mov
and
pop
test
pop
adc
jbe
(bad)
lods
aaa
ja
push
cmp
jnp
mov
in
and
sbb
mov
pop
jne
inc
mov
cmp
test
xchg
gs
sbb
jp
test
mov
lahf
and
inc
ds
lea
xor
cwde
sub
stos
cmc
xchg
adc
and
jno
cmp
xor
push
ja
stos
mov
adc
sub
dec
adc
ss
std
and
xor
mov
std
hlt
push
loopne
xchg
mov
pushf
inc
push
jl
test
pop
pop
stc
xchg
stc
xchg
or
aas
(bad)
sub
repz
call
pushf
(bad)
ds
add
cmp
cmp
shl
lahf
push
fnsave
jp
adc
jb
inc
(bad)
dec
fstp
pop
(bad)
jl
jo
xchg
mov
pop
and
out
mov
iret
jne
mov
jge
aam
xchg
movs
inc
out
and
add
sub
(bad)
jmp
cmc
in
or
cs
jns
dec
jae
out
outs
add
cmc
gs
stc
mov
mov
xchg
adc
js
leave
push
div
cmp
enter
push
outs
push
scas
xchg
das
mov
sti
add
push
into
retf
or
sbb
mov
fisttp
jle
mov
sub
shl
dec
int
add
cmp
push
shl
dec
das
jno
cmps
sti
mov
sub
je
jnp
jae
out
pop
cwde
hlt
repz
inc
(bad)
xchg
push
push
lahf
ret
pop
or
loopne
jecxz
push
push
jbe
add
ins
mov
or
ja
cmp
(bad)
cwde
and
loopne
mov
xchg
dec
xchg
mov
jb
cmps
mov
(bad)
ins
push
mov
outs
adc
fmul
dec
popa
mov
adc
fild
push
cmc
iret
mov
mov
jmp
xchg
fs
cmps
mov
into
aas
pop
mov
push
and
loop
cmc
aaa
lds
xor
fwait
dec
fadd
retw
les
in
movs
jg
fpatan
movs
inc
fiadd
sub
add
loop
retf
push
mov
pop
hlt
leave
dec
and
jp
loop
push
inc
ret
imul
ja
mov
jle
clc
jae
jnp
push
cmp
out
hlt
nop
xchg
sahf
dec
inc
imul
dec
adc
div
inc
mov
ds
sub
retf
push
rcl
test
enter
jecxz
test
imul
inc
mov
loopne
sub
frstor
loope
popa
sbb
add
jecxz
aas
lahf
and
mov
pop
push
cli
pop
jnp
into
popa
and
ucomiss
mov
aaa
int3
add
inc
mov
and
into
cmp
xchg
imul
xor
cmp
mov
data16
jle
push
jmp
and
loopne
adc
and
mov
imul
call
mov
imul
imul
mov
ja
mov
(bad)
je
call
bound
movs
mov
sbb
popa
cwde
arpl
out
(bad)
xchg
pushf
xor
jecxz
loopne
rcl
xor
movs
mov
mov
push
or
int
sbb
aaa
ss
dec
push
adc
add
movzx
mov
add
cli
sbb
int
rcr
or
push
adc
arpl
call
xor
imul
inc
test
and
mov
xor
dec
in
inc
sub
and
xchg
adc
or
push
(bad)
xchg
daa
stos
ins
push
xor
xchg
add
lock
and
mov
jne
outs
adc
inc
jmp
sbb
jp
retf
cwde
lods
test
icebp
pop
mov
imul
hlt
pop
sar
xor
aas
inc
(bad)
ins
jnp
mov
mov
(bad)
jb
add
aam
pop
sbb
inc
(bad)
inc
push
xor
outs
mov
xor
scas
pop
add
aam
mov
pop
lods
pop
dec
bound
out
add
adc
sbb
jns
dec
imul
aaa
outs
sub
sbb
loop
(bad)
or
pop
rcl
fnstenv
shl
mov
jno
mov
jno
jns
addr16
ins
mov
pop
mov
inc
hlt
mov
add
mov
fs
mov
push
xchg
(bad)
sbb
push
push
scas
push
(bad)
retf
iret
fild
into
and
push
xor
in
mov
sahf
aad
scas
cwde
mov
mov
push
je
xor
and
call
jp
mov
out
pop
mov
arpl
out
inc
fidiv
jbe
pop
ja
ja
inc
popf
retf
into
xchg
cmps
inc
clc
popf
inc
and
or
ss
mov
sbb
into
push
mov
int3
push
cli
loop
sahf
xor
dec
mov
mov
loop
adc
pop
movs
sar
and
mov
mov
add
add
sub
add
mov
xchg
iret
mov
gs
repz
test
or
adc
test
fcomip
push
out
ds
clc
cmp
cmp
popf
out
mov
pop
xchg
ds
push
push
arpl
pop
shr
ins
or
jns
enter
pop
dec
mov
pop
fsubp
in
nop
push
jae
pop
xchg
sti
mov
loope
xchg
movs
sbb
mov
inc
xor
jo
xor
ins
data16
inc
test
jecxz
jecxz
ss
sti
repz
cld
jg
daa
aad
sbb
cmps
sbb
loopne
mov
int
mov
sub
outs
sub
mov
cli
test
ffreep
loopne
dec
outs
(bad)
pop
icebp
cmp
es
stc
fcomp
outs
sub
leave
or
icebp
test
rol
mov
cli
out
lods
mov
pop
rol
scas
fidiv
cld
retf
cs
cmp
je
test
pop
out
sahf
mov
sub
lahf
pop
nop
outs
adc
int
fdivr
jns
shr
adc
inc
adc
mov
mov
adc
mov
push
add
cmps
popa
cmp
push
bound
pop
bound
outs
inc
icebp
test
dec
xor
gs
cmps
shl
inc
cmp
out
loopne
dec
inc
inc
sbb
adc
retf
add
bound
cmp
sbb
fs
jo
adc
les
mov
push
das
sub
cmc
mov
repnz
mov
pop
mov
cmp
sti
daa
push
shl
ror
cmp
add
outs
xchg
cli
xor
cld
scas
loop
cmp
mov
fist
(bad)
shl
mov
mov
push
push
int3
sar
lods
aas
lea
ins
inc
pop
(bad)
rcl
rcr
pop
mov
adc
or
pop
add
jns
lods
xchg
or
(bad)
dec
xor
pop
mov
ficom
and
xor
xor
xchg
mov
xor
mov
std
in
sub
inc
mov
inc
xchg
(bad)
clc
mov
sahf
arpl
daa
dec
cmp
push
xchg
sti
cmps
aam
aam
sub
and
cld
int3
sub
sub
adc
fadd
dec
out
fs
fidivr
mov
mov
lds
jo
pop
lds
jno
pop
jns
jecxz
adc
sar
xor
aad
or
adc
add
rcr
xchg
sbb
les
dec
inc
and
lock
mov
(bad)
ror
gs
shl
add
out
mov
xchg
mov
mov
mov
shl
std
push
sbb
xor
lea
pop
shl
cs
enter
call
sbb
mov
inc
add
loope
push
int
dec
test
ret
dec
iret
out
retf
out
cmps
neg
adc
adc
xchg
mov
stc
jp
jo
xchg
add
or
cli
cmps
int3
xchg
loope
loope
jge
rcl
mov
test
sar
mov
pop
(bad)
ror
xchg
inc
push
ror
push
xchg
pop
mov
and
push
adc
dec
push
xor
add
mov
pop
xor
sub
jmp
dec
std
mov
fs
lock
daa
outs
xchg
xor
inc
pop
ins
(bad)
loope
mov
test
xor
idiv
or
xchg
adc
mov
xchg
dec
xlat
sbb
in
in
inc
inc
rcr
cs
fadd
mov
sub
push
xor
int
mov
xor
mov
ss
mov
ret
cs
pushf
imul
ins
hlt
not
loop
add
xchg
(bad)
push
mov
jbe
push
in
sbb
test
add
xor
test
or
mov
xchg
xchg
into
pop
cdq
sbb
ret
mov
lds
push
cmp
push
or
xchg
ins
mov
int3
cmp
adc
dec
dec
and
adc
stos
mov
mov
push
inc
dec
add
pop
push
mov
mov
add
cmps
outs
addr16
jl
push
rcr
xor
mov
fmul
aas
mov
cmp
ins
or
jge
(bad)
dec
jbe
pop
loop
mov
xor
cmc
cmp
js
push
jne
cwde
mov
and
cmps
jge
call
pop
repnz
stos
call
jp
pop
cmc
sahf
es
pop
dec
jnp
cli
repnz
or
lods
jo
in
jg
ror
cmp
mov
jle
imul
add
into
inc
aaa
lock
fdiv
add
lea
sub
(bad)
pushf
call
in
inc
(bad)
cdq
adc
aas
or
and
(bad)
push
imul
popf
push
sbb
retf
jle
add
add
stos
and
out
cli
and
push
adc
lods
dec
push
mov
jmp
sub
ror
and
test
mov
mov
xchg
add
lds
mulps
fsub
pop
ds
into
in
gs
ins
push
cmp
mov
jne
mov
stc
fst
scas
(bad)
jno
sbb
call
lock
add
push
mov
imul
mov
jle
test
xor
lock
pop
popf
int3
cmp
dec
cli
loope
in
push
fimul
cmps
or
sbb
test
xchg
jmp
data16
or
and
mov
fnsave
je
add
popa
or
(bad)
hlt
neg
jo
jnp
mov
fcmovu
out
xchg
and
adc
adc
fldenv
sbb
adc
xchg
into
je
lea
jo
pusha
jno
xchg
call
pop
cmp
inc
sub
sbb
adc
inc
mov
call
fisttp
popf
out
hlt
loope
stos
pusha
or
adc
inc
jle
or
mov
xor
fild
xchg
mov
mov
and
jne
xchg
outs
mov
retf
add
fimul
test
xor
and
je
(bad)
jecxz
mov
frndint
jle
xor
fsincos
mov
dec
cmp
jmp
inc
pop
sub
int3
in
idiv
dec
inc
sbb
cmp
or
adc
cmp
sbb
push
pop
gs
dec
dec
push
jecxz
add
loopne
add
xchg
imul
popa
lahf
push
dec
add
push
sbb
setle
push
and
test
cwde
jmp
jl
xor
or
call
clc
sub
jmp
inc
xchg
jp
push
hlt
sbb
inc
movs
jb
ret
int
ins
test
cli
aam
add
or
jbe
push
loope
fdiv
mov
imul
mov
fs
scas
sub
enter
mov
rcl
stos
sub
es
bound
iret
xchg
repz
ins
outs
push
push
in
fimul
push
ja
or
mov
adc
sub
fisubr
into
ds
lock
jae
jb
jnp
push
cmp
add
pop
test
hlt
push
out
pusha
(bad)
jmp
fst
xor
test
inc
pop
(bad)
into
adc
adc
jno
test
fiadd
cmp
data16
mov
xor
psubsb
aas
dec
loopne
popa
mov
add
xchg
fwait
jns
hlt
repz
dec
mov
sub
adc
add
inc
daa
pushf
lds
inc
xor
pushf
es
push
or
xchg
scas
mov
rol
ret
loop
adc
imul
vpsadbw
(bad)
(bad)
fiadd
inc
ss
mov
jno
dec
ret
sbb
and
lds
mov
paddsb
mov
idiv
mov
pushf
stos
mov
jmp
mov
inc
xlat
pop
pop
scas
lea
cmp
dec
pop
sti
mov
xchg
aaa
popa
test
dec
scas
and
std
xor
ds
xor
pop
or
rol
in
push
js
sbb
(bad)
nop
mov
jmp
cmp
jmp
ret
fmul
fcom
and
retf
dec
dec
and
mov
jae
dec
mov
(bad)
rcl
shl
mov
and
pop
inc
mov
pop
sahf
sar
jbe
lahf
sub
xor
test
(bad)
(bad)
(bad)
cmp
adc
jno
sbb
stos
pop
pop
call
aas
movs
shl
inc
in
daa
(bad)
sar
jge
js
or
sub
and
xchg
pop
pop
cs
or
cmp
int
jae
adc
bound
push
je
or
jne
sbb
ins
out
cmp
cmp
and
test
movs
mov
mov
shl
xor
fwait
mov
dec
sbb
lods
in
imul
adc
cmps
ret
sub
and
dec
push
dec
sbb
pop
mov
add
add
popa
mov
or
or
xchg
cmp
ror
and
jmp
in
mov
ja
imul
retf
xchg
std
sar
ss
and
xchg
pop
cmp
hlt
add
sbb
sahf
in
dec
add
adc
push
sbb
mov
aam
cld
popa
retf
add
and
mov
pusha
fld
mov
mov
xchg
inc
fsubr
and
mov
xchg
xor
dec
dec
out
dec
cdq
call
push
test
and
xchg
cmps
dec
sbb
push
mov
rcr
pop
stos
stc
push
dec
fcmovb
(bad)
add
pop
call
add
xchg
in
pop
icebp
bound
stc
retf
cmp
ins
cmp
or
xchg
or
arpl
xchg
(bad)
jmp
ret
sub
clc
sub
xor
lods
lods
xor
inc
adc
push
nop
mov
push
add
scas
fucomi
lods
(bad)
ficomp
mov
sti
and
push
sub
pop
add
add
(bad)
enter
push
test
fadd
sub
mov
repnz
xchg
pop
pop
test
xchg
mov
mov
aaa
adc
dec
add
popa
xor
mov
sbb
mov
dec
pop
push
xchg
or
pop
pushf
push
int
jbe
jns
adc
mov
popf
jae
mov
jnp
int
sub
sbb
or
test
dec
pop
jge
mov
jo
iret
jmp
ret
popa
push
pushf
sub
sbb
addr16
nop
adc
shl
dec
out
jne
jecxz
mov
sub
mov
jle
fisubr
in
add
div
cmp
(bad)
fistp
enter
mov
sahf
and
imul
dec
test
arpl
and
inc
push
movs
(bad)
inc
std
xchg
mov
out
sbb
xchg
fld
add
in
xor
(bad)
mov
cmp
jge
mov
xchg
sbb
sub
dec
jne
mov
mov
(bad)
mov
push
xor
or
fcmovnbe
fidivr
rcl
and
sub
bswap
pop
adc
cli
adc
push
in
push
imul
xchg
call
push
jbe
cwde
xor
push
dec
mov
xchg
rcl
rcl
xlat
jns
pop
xchg
sub
cmp
jne
shr
xchg
sbb
and
in
mov
jns
jl
test
mov
sub
or
jmp
rcl
push
sub
sub
in
and
int3
retf
pop
push
inc
and
mov
into
aaa
rcl
loopne
pop
popa
lea
test
mov
lods
push
push
push
repz
cs
and
sub
pop
pop
pop
gs
sbb
jecxz
xchg
xor
pop
sti
and
pop
dec
outs
pushf
(bad)
clc
push
mov
pop
dec
cli
xor
xor
pushf
mov
fisttp
adc
pop
loopne
loopne
popa
dec
xchg
xchg
fcmovne
fdivr
bndldx
or
shl
jmp
repnz
fsubr
inc
ins
test
jo
push
sahf
loopne
movs
push
or
(bad)
(bad)
je
loopne
shr
inc
js
das
movs
faddp
cmp
out
xchg
cmp
cmp
xchg
and
pop
pop
call
inc
xchg
jnp
cdq
jae
loop
adc
jb
cs
xor
out
lahf
mov
pop
rol
repz
lea
mov
or
fdivr
call
retf
xlat
mov
test
mov
fisttp
mov
inc
add
mov
outs
sub
std
add
mov
fist
pop
rol
ret
pop
adc
xor
ror
fcmovbe
mov
sar
cmp
push
xor
mov
add
jo
inc
sub
dec
call
pop
xchg
fdiv
test
fldcw
rcl
mov
cmp
call
test
iret
in
sahf
(bad)
mov
mov
out
neg
or
mov
int3
mov
je
(bad)
ss
jmp
add
daa
adc
push
inc
out
test
loope
dec
ret
pop
imul
xor
sub
xor
push
test
cmp
inc
lock
leave
sub
xchg
(bad)
cmp
lods
jnp
xor
xlat
lods
push
add
push
cmps
add
sub
mov
loopne
fucomip
sub
mov
pop
xchg
les
hlt
xor
fistp
sbb
leave
inc
push
je
test
jbe
cmp
stos
(bad)
int
mov
jno
aad
sbb
ror
loopne
mov
icebp
dec
mov
fsubr
pop
and
mov
imul
call
sbb
inc
fwait
ins
mov
mov
test
mov
popa
or
hlt
jl
(bad)
(bad)
into
jecxz
ja
ficom
enter
cmps
cdq
imul
in
stc
data16
in
or
cmps
cdq
mov
jmp
daa
popa
in
inc
push
cmps
cs
lods
adc
pop
in
dec
inc
fimul
add
mov
sub
sub
push
xchg
jb
fwait
pop
gs
(bad)
fidiv
or
sub
les
pop
mov
lea
push
int
pop
add
mov
movs
sub
ss
cmp
jnp
add
fcmove
mov
push
test
inc
sti
cmc
adc
movs
fnstsw
mov
fstp
mov
jno
hlt
cmp
(bad)
popf
pmaddwd
sub
jmp
or
fdivr
(bad)
mov
aaa
jo
shl
xor
imul
aaa
loopne
mov
xlat
xchg
mov
sub
sub
test
mov
test
fisub
push
mov
int
(bad)
jae
or
mov
add
adc
call
fidivr
in
test
mov
cs
das
loop
retf
jne
in
mov
and
sub
rcr
add
test
jecxz
xor
jge
push
cmp
cmps
mov
sub
ss
loop
mov
mov
(bad)
mov
shr
idiv
test
cdq
cli
inc
pop
inc
dec
stos
and
adc
add
sar
not
sbb
call
xor
jmp
jmp
mov
test
push
(bad)
cmps
arpl
pushf
nop
(bad)
je
pop
icebp
mov
test
pop
push
dec
mov
mov
fwait
mov
jae
je
xchg
xchg
dec
addr16
movs
loopne
fdivr
ss
call
or
mov
jo
lahf
dec
test
inc
add
hlt
(bad)
xchg
out
and
pop
out
inc
pushf
fbld
xchg
cli
(bad)
mov
xchg
xchg
(bad)
and
call
ja
ret
jnp
dec
and
mov
call
pop
pop
test
sub
inc
add
call
rcl
mov
xchg
das
inc
push
or
jmp
push
adc
push
(bad)
push
gs
sbb
jl
xchg
cmp
xor
sahf
mov
pop
gs
mov
inc
mov
mov
mov
push
lods
lds
repz
sub
ins
ds
cmp
mov
mov
add
mov
adc
or
loop
adc
sub
mov
xor
sbb
ins
in
cmps
pop
sbb
cmp
lods
rcr
scas
mov
xor
cmp
push
jmp
out
fucomp
push
sub
pop
mov
mov
shl
and
in
int
dec
fcmove
(bad)
loope
ss
push
push
movs
jbe
call
je
ins
daa
jg
xchg
inc
je
push
pop
mov
sub
dec
ins
sbb
nop
adc
push
sub
xchg
mov
rcr
or
xor
mov
cmps
imul
dec
pop
sti
fwait
push
mov
jl
ja
jo
push
repnz
mov
adc
push
push
lods
and
stc
push
sub
pop
cmps
jnp
into
jp
mov
std
(bad)
repz
jnp
jg
jb
add
and
push
jmp
shl
sbb
cli
lods
add
lods
add
je
xchg
sbb
aam
hlt
dec
arpl
pop
jmp
pop
xchg
mov
mov
call
into
and
jmp
mov
jmp
out
es
cmps
loop
push
aad
inc
test
dec
lods
sub
sbb
dec
and
and
(bad)
and
inc
xchg
mov
inc
push
mov
mov
mov
ja
outs
cmp
ds
ret
loop
retf
pop
mov
push
imul
test
ja
sbb
cmps
or
lods
js
ror
push
inc
xchg
ja
or
jnp
and
inc
pop
adc
in
pop
stos
or
and
mov
push
pop
inc
inc
mov
popa
push
stc
mov
rcr
jo
call
mov
jl
or
and
mov
fdivr
(bad)
arpl
mov
adc
out
xor
pop
jmp
jo
pop
and
adc
push
std
or
mov
pusha
int3
xor
push
test
lds
sub
out
push
test
test
add
in
dec
in
pop
lock
push
stos
xchg
or
pop
ins
xchg
mov
jg
mov
ss
sbb
lods
ins
adc
imul
sub
and
into
mov
or
stos
push
in
jo
sti
jb
mov
jecxz
test
shufps
(bad)
inc
daa
in
xor
cmps
jg
dec
jmp
xor
mov
or
bound
scas
adc
cwde
sbb
popf
cmps
sbb
pop
mov
and
gs
inc
aad
jnp
mov
out
cdq
stos
jae
in
pop
sbb
xor
cmp
inc
jne
pop
lahf
push
js
mov
or
add
sub
scas
cmovne
mov
push
sub
mov
inc
cmp
cmps
lahf
sti
cs
fisub
jg
loope
inc
repnz
sbb
test
aaa
jb
jl
popa
outs
mov
add
xchg
out
mov
lea
adc
sbb
cmp
adc
mov
cmp
ss
cmp
xor
sti
sbb
add
out
sbb
test
fimul
rcr
sbb
loopne
or
inc
movs
mov
dec
sbb
ror
xchg
jecxz
push
dec
or
jno
(bad)
inc
aas
push
add
push
pop
movs
inc
nop
out
rol
inc
push
add
inc
inc
cmp
xor
(bad)
adc
xchg
cmp
bound
std
push
xchg
enter
mov
dec
shl
iret
cmp
sbb
mov
cmp
out
cmp
loope
bound
xlat
fdiv
mov
jmp
stos
jecxz
sbb
int3
sub
sahf
mov
fistp
daa
jo
mul
in
enter
in
fiadd
mov
push
mov
ja
xchg
stc
popf
and
fist
cmps
mov
mov
mov
jg
call
mov
sti
cli
mov
xor
xor
aas
add
lods
bound
sbb
(bad)
xor
aam
(bad)
in
xor
gs
test
call
iret
inc
mov
rcr
adc
add
cmps
push
stos
inc
mov
push
int
sub
inc
cmp
aas
adc
pop
xor
js
retf
scas
jnp
mov
sbb
jbe
mov
xchg
pop
xchg
(bad)
lock
mov
push
inc
adc
dec
shl
(bad)
xchg
push
call
nop
aas
mov
fs
scas
mov
push
mov
out
addr16
cmp
or
bswap
inc
loopne
xchg
mov
(bad)
jg
popf
int3
hlt
mov
arpl
xchg
ds
int3
outs
cwde
xor
xor
ror
sbb
sub
lock
xchg
sbb
mov
cmp
fldcw
hlt
aad
mov
iret
cmp
retf
lock
xor
xor
or
lahf
xchg
add
sub
ror
sbb
pop
popa
outs
mov
cmp
stos
js
xchg
or
call
sub
push
mov
sub
pop
push
gs
call
push
ins
aam
bound
aad
mov
mov
cmc
(bad)
push
and
dec
in
fcomp
adc
jg
adc
std
pop
push
mov
leave
cmp
in
pusha
and
loope
add
mov
retf
push
loope
dec
mov
jge
jne
mov
or
sahf
sbb
retf
call
pop
inc
ins
inc
pop
push
retf
sub
leave
movs
out
inc
pop
dec
int3
shr
loope
xchg
pop
cmp
imul
and
inc
call
out
mov
and
fs
push
dec
cld
lds
dec
cs
(bad)
call
mov
loopne
cmp
xor
mov
mov
push
hlt
mov
dec
sbb
das
jns
lock
or
addr16
into
dec
mov
push
jo
fsub
idiv
pop
xor
int
cld
adc
(bad)
jle
xor
mov
mov
cmp
pop
jmp
lock
ds
in
xchg
sbb
or
js
int3
xchg
jmp
mov
jg
adc
xchg
fist
mov
std
mov
sbb
outs
call
in
gs
mov
or
(bad)
mov
adc
jmp
xchg
jnp
lea
add
lock
jo
push
xchg
les
mov
push
fwait
cmp
std
inc
push
(bad)
mov
jp
mov
mov
push
cld
sbb
inc
les
sub
cmp
push
inc
inc
or
repnz
and
aam
pop
add
je
int3
ja
and
sbb
cmp
sar
or
mov
add
pop
mov
add
inc
pop
xor
nop
out
fimul
test
pop
and
cmp
clc
hlt
cdq
(bad)
ficom
fmul
push
pop
idiv
mov
or
cmp
es
(bad)
fnsave
into
adc
pop
and
sbb
inc
jmp
jno
lods
cmp
or
lods
ror
ret
jge
xchg
cmp
sub
ds
lock
imul
dec
in
pop
jne
push
dec
pushf
mov
sub
dec
jecxz
cdq
and
sub
add
pop
fld
int
xor
cmp
or
mov
push
rcr
scas
inc
les
dec
sbb
xchg
dec
push
into
push
jns
jle
(bad)
or
and
or
xlat
(bad)
icebp
cs
loope
inc
lock
outs
nop
ret
jg
ja
lahf
arpl
jmp
lods
cmc
lods
out
dec
fs
das
inc
dec
push
inc
pop
cmp
not
adc
ret
out
sub
jecxz
(bad)
fcom
add
sbb
ret
inc
aas
inc
and
add
sbb
push
add
adc
stc
outs
mov
shr
or
and
aaa
or
fisub
out
scas
cs
pop
mov
out
cmp
xor
iret
outs
call
test
adc
in
outs
and
test
adc
pusha
rol
mov
mov
dec
xor
push
outs
outs
test
xor
jns
pop
push
ficom
shl
dec
pop
sahf
and
pusha
cmp
movs
mov
test
popf
pop
loop
je
dec
mov
ficom
sub
mov
test
movs
js
adc
mov
fadd
fwait
add
dec
cmc
sbb
cmp
mov
push
inc
cmp
fsubr
rol
fs
(bad)
cmp
mov
pushf
shl
mov
inc
jge
mov
shl
(bad)
sub
call
jbe
jbe
cs
clc
push
out
jl
xchg
jg
sti
and
inc
or
inc
jnp
dec
xor
or
fstp
jno
fisttp
stos
push
add
adc
xchg
add
mov
xchg
cmp
test
int3
movs
scas
xchg
(bad)
fsubr
test
pusha
movs
xchg
xchg
dec
mov
jmp
fimul
ins
shl
lds
sub
(bad)
dec
cmps
sub
out
je
in
pop
repz
dec
jns
mov
cmps
dec
dec
aaa
inc
sti
fbstp
adc
retf
in
test
daa
and
fbstp
scas
jp
lock
(bad)
push
enter
ret
mov
rol
gs
hlt
mov
mov
pop
cmp
movs
ret
out
push
rcl
iret
aam
mov
arpl
adc
mov
mov
adc
lahf
mov
adc
js
cmp
outs
pop
xchg
push
clc
sub
popf
mov
sub
sub
imul
mov
jns
fdivr
adc
jnp
loopne
jb
loop
mov
lock
je
push
add
fwait
jbe
or
nop
pop
jmp
jae
xchg
je
push
xor
pop
and
mov
sahf
sub
fwait
adc
bound
jb
arpl
unpckhps
stos
rol
out
stos
cdq
jmp
mov
push
fmul
xchg
pop
shl
push
mov
ja
mov
mov
jge
and
add
pcmpgtd
xor
pop
lea
inc
rcl
je
stc
test
scas
inc
test
xchg
pop
xor
jmp
xchg
pslld
sbb
cmp
cwde
(bad)
cmp
arpl
cmp
push
rcl
xchg
clc
cmp
push
(bad)
cwde
inc
sub
jmp
sar
loopne
mov
or
and
and
outs
pop
jb
sbb
into
and
cwde
das
stos
test
mov
mov
jbe
imul
push
adc
sbb
loopne
xor
add
jge
dec
sub
scas
shl
mov
mov
add
add
test
icebp
shl
cmp
pop
jo
es
push
in
es
in
and
pop
jne
ins
push
add
cmc
aad
test
movs
cld
sbb
xchg
mov
test
inc
cmps
imul
loop
dec
mov
pop
mov
shl
dec
popf
les
jg
sub
cmps
aaa
push
jae
xchg
enter
mov
mov
add
dec
fild
stc
cmps
mov
sbb
test
pop
mov
in
mov
sbb
fsub
mov
push
xchg
dec
popa
or
into
and
mov
cmp
ret
fst
retf
sub
xor
sub
mov
cli
in
dec
sub
fadd
jl
ret
pushf
sti
sbb
lahf
adc
ins
arpl
mov
xchg
stos
pop
xchg
jmp
dec
sub
shr
push
add
mov
inc
mov
test
cmps
push
les
adc
mov
push
jnp
fcmovb
mov
fsubrp
cs
jo
ins
pop
mov
pop
mov
out
lea
or
(bad)
call
push
bound
pusha
cmp
sbb
int3
jecxz
xchg
ss
lahf
fucomi
shr
adc
mov
xchg
cdq
outs
dec
inc
shr
push
out
push
out
js
mov
mov
xor
mov
jge
imul
aas
aad
(bad)
mov
xor
cmp
popa
jg
call
stos
inc
xchg
ins
int
mov
add
retf
outs
sar
dec
pop
fs
mov
stc
cmp
(bad)
je
jl
jo
mov
fdivr
sbb
in
sbb
mov
push
cmp
mov
and
ret
adc
adc
jg
mov
sbb
xor
mov
stos
or
pmuludq
aaa
test
test
test
push
lods
call
push
in
jmp
add
xchg
push
sub
cmp
imul
add
xchg
loope
push
sub
fild
cmp
(bad)
lods
aam
or
lods
test
enter
xor
clc
in
inc
(bad)
and
dec
adc
mov
aam
cld
iret
imul
cmc
div
pop
fcmovnu
mov
sahf
rcr
dec
dec
jne
shl
jb
cmp
pop
mov
cmps
mov
and
dec
xor
pop
or
adc
lock
sar
outs
xor
push
cwde
jnp
loope
and
mov
mov
js
fidivr
mov
push
lods
jns
add
cwde
cmc
and
inc
mul
push
pop
in
mov
js
and
call
dec
fidiv
and
mov
call
push
scas
(bad)
fprem
mov
and
call
jmp
repnz
xor
fld
iret
clc
stc
fld
out
mov
push
aam
xlat
inc
outs
cmp
xor
jp
add
sahf
inc
outs
adc
mov
jb
xchg
movs
dec
ja
inc
mov
sub
pop
les
loopne
lea
fsubr
mov
push
jns
clc
dec
sar
mov
call
jecxz
int
pop
adc
ja
dec
or
arpl
jmp
(bad)
iret
lock
outs
pop
push
ror
js
ja
fadd
(bad)
mov
xchg
popf
jecxz
push
adc
sub
mov
push
cli
sbb
mov
dec
pop
shl
mov
or
(bad)
cwde
mov
mul
cwde
sub
in
mov
test
jnp
cdq
push
xchg
ds
jmp
(bad)
ss
fisttp
xor
in
xor
aaa
outs
or
pop
(bad)
pop
test
mov
test
and
stos
cmp
retf
jmp
movs
(bad)
loop
xor
sbb
push
les
es
fsubr
dec
cmp
js
inc
xchg
loop
pop
mov
jecxz
out
xor
mov
or
pop
into
arpl
jl
leave
xchg
je
sar
xor
mov
outs
imul
sbb
sub
cdq
lds
rcr
push
sbb
dec
mov
in
push
shl
jnp
icebp
or
std
dec
(bad)
movs
and
nop
or
fs
stc
add
lea
xor
xchg
sbb
mov
dec
jg
push
mov
add
das
sub
and
dec
adc
push
push
lds
scas
hlt
neg
push
push
nop
sti
sub
ret
shl
out
fstp
dec
mov
retf
xor
hlt
shl
jmp
icebp
cmc
std
pop
pop
fisubr
jg
push
loope
rcl
call
(bad)
mov
cs
movs
(bad)
outs
lahf
xchg
and
dec
repz
jmp
loopne
ins
sbb
je
shl
test
push
inc
xor
jg
sub
adc
push
pop
jp
leave
mov
jmp
xchg
(bad)
test
cwde
push
mov
mov
push
daa
dec
cmp
ret
jnp
ins
xor
add
jb
mov
jmp
jmp
pusha
pop
pop
cmps
jg
mov
jb
jno
and
movs
mov
jb
pop
aad
and
jno
in
xchg
inc
push
fcmovnb
ins
clc
inc
lea
(bad)
lea
or
inc
jl
sbb
jmp
mov
int3
xor
pop
push
mov
mov
sub
xor
mov
dec
imul
bound
pushf
jmp
shr
arpl
sti
ss
shr
mov
leave
imul
in
sbb
mov
cmps
jecxz
add
jo
jge
mov
stos
test
test
pusha
mov
xor
jmp
lds
dec
add
lds
xchg
(bad)
lock
pop
cmp
push
and
adc
jne
repz
mov
clc
into
lods
fwait
inc
sahf
shr
(bad)
call
xor
in
mov
xchg
mov
push
xchg
inc
aam
push
pop
lahf
xchg
adc
sbb
cmp
adc
clc
and
mov
mov
push
and
and
cmp
nop
push
sbb
fs
dec
scas
lea
jae
jp
arpl
sar
jle
fisttp
test
jbe
int3
test
call
data16
jl
push
push
push
ss
push
enter
jmp
cwde
fsubr
fidivr
(bad)
xchg
sub
add
push
or
xor
sbb
cs
push
jge
push
retf
mov
jo
jb
test
dec
mov
cdq
inc
mov
bound
fs
add
inc
sub
jae
ins
add
(bad)
mov
push
ins
data16
cld
jb
cmp
mov
shl
(bad)
cli
aam
xchg
pop
fld
sbb
xor
aad
xlat
jg
js
adc
pop
pop
stc
out
push
out
lea
clc
in
lds
je
cmp
inc
xchg
test
movs
cmps
and
std
mov
pop
iret
ret
xchg
sub
adc
(bad)
or
push
fisttp
pmaddwd
push
mov
pop
cmps
inc
int3
push
sub
pop
dec
aad
fidivr
xor
rcr
int3
stc
push
les
leave
mov
xlat
adc
mov
into
xchg
jne
push
adc
xchg
mov
and
inc
mov
out
or
pop
or
mov
sub
push
or
leave
enter
(bad)
mov
mov
fwait
cdq
and
and
xchg
mov
sahf
outs
lds
sbb
inc
popa
jle
pusha
sub
lea
js
gs
mov
xor
cmp
bound
out
sub
xchg
mov
stos
jecxz
mov
pop
xchg
jo
pop
jo
fcom
xchg
xchg
sar
cdq
add
ss
in
dec
stc
pop
inc
add
repz
fld
fidiv
add
push
xchg
mov
mov
jnp
clc
pop
dec
rcl
jo
cdq
stc
xchg
in
loopne
cs
pop
not
fistp
inc
sbb
out
sub
mov
scas
mov
clc
inc
rol
dec
mov
retf
les
hlt
nop
in
mov
adc
movs
dec
test
enter
pop
test
popa
cmps
mov
(bad)
sti
mov
aam
leave
fcomp
sub
mov
(bad)
int
inc
mov
sub
cmc
out
push
es
push
movs
shr
jne
repz
push
ret
add
or
shr
scas
out
in
sbb
pop
cwde
pushf
or
add
pop
sbb
fmul
retf
stos
int3
mov
daa
adc
fdiv
adc
daa
mov
stos
xor
inc
pop
jp
pop
pop
sub
mov
cmps
adc
hlt
clc
stos
mov
inc
cmp
sub
jno
mov
out
mul
retf
repnz
cld
fst
push
call
sar
call
xor
ins
int
jae
ja
hlt
rcl
pop
outs
jmp
or
mov
pop
cmps
add
push
and
fst
clc
mov
lahf
fwait
xchg
mov
(bad)
sti
stos
pop
into
test
or
or
mov
adc
push
inc
pop
shl
xchg
or
or
nop
push
mov
jmp
mov
lahf
das
adc
adc
or
dec
add
neg
ret
mov
retf
call
xchg
or
dec
jne
(bad)
sbb
test
(bad)
fadd
or
adc
jmp
pop
pop
and
dec
xchg
mov
adc
add
inc
fnstenv
cmp
test
pop
mov
or
movs
test
and
xor
cmps
jno
lahf
add
test
clc
bound
ret
dec
test
arpl
or
pop
and
dec
cmp
test
mov
or
pop
rcl
xor
pushf
pop
icebp
mov
push
out
xchg
cmp
sbb
mov
push
cwde
sbb
sar
adc
push
movs
repz
adc
adc
jmp
xor
fwait
adc
xchg
repnz
mov
clc
mov
jo
sti
sbb
adc
pop
pusha
ret
cmps
in
or
fldcw
push
xor
push
in
jnp
jne
(bad)
loope
js
push
(bad)
sbb
fwait
cli
je
sbb
xchg
(bad)
mov
push
rcr
mov
in
std
jecxz
inc
pop
scas
cwde
daa
in
fistp
enter
lock
lock
push
lea
sti
cs
in
mov
fist
add
outs
(bad)
scas
or
cld
movs
push
call
push
adc
sub
cwde
fst
repnz
lods
or
jle
cmp
leave
pop
std
cmps
fstp
or
ja
je
pop
mov
call
test
sbb
inc
ret
inc
das
adc
fnstenv
nop
inc
inc
pushf
(bad)
adc
add
add
call
imul
cmp
inc
cmp
push
inc
mov
arpl
call
arpl
push
mov
sar
enter
in
cmp
dec
pop
(bad)
adc
outs
dec
loopne
jl
push
cmp
jns
nop
push
xchg
jmp
adc
cmp
cli
dec
fwait
loop
jle
mov
jae
lods
mov
dec
int
mov
push
ficomp
outs
inc
shr
mov
in
retf
loope
cli
mov
jne
jno
dec
cmp
cmp
mov
out
leave
push
jmp
test
cmp
add
or
stc
fdiv
stc
or
sbb
mov
ins
jmp
xchg
cmc
test
push
cmp
xchg
jp
mov
push
lock
fimul
ds
pop
pop
retf
jg
in
inc
fnstsw
fs
adc
fidiv
gs
mov
into
xor
ins
mov
mov
test
sbb
cs
dec
xor
push
and
(bad)
and
dec
lods
cmp
mov
aas
or
inc
int3
and
xor
test
dec
sub
pop
dec
jmp
mov
arpl
enter
xlat
mov
pop
mov
rol
scas
pusha
sbb
push
lods
inc
pop
sahf
(bad)
popf
prefetchwt1
out
loopne
jbe
out
pushf
repz
xor
adc
mov
shl
sub
scas
out
xor
iret
jecxz
inc
loop
xchg
xchg
cmp
cmps
jge
push
mov
push
sti
out
icebp
test
repnz
sub
popa
or
fst
imul
(bad)
pop
and
loope
or
mov
and
loopne
out
dec
mov
mov
lock
mov
call
cs
stos
sar
(bad)
(bad)
out
ss
ret
push
lahf
inc
jns
inc
sbb
bound
fmul
rol
ds
nop
and
inc
fisttp
daa
cmps
into
js
push
push
and
dec
dec
enter
(bad)
push
sub
pop
mov
sbb
repz
fiadd
sub
xor
pop
pop
in
test
xchg
add
dec
les
(bad)
push
fbld
int
iret
sti
xchg
enter
sbb
jp
movs
mov
outs
xor
ja
cmp
ret
and
push
pop
mov
sub
xchg
test
mov
mov
stos
loope
and
out
sub
add
dec
pop
test
xchg
xchg
js
cwde
push
sahf
push
sbb
jnp
leave
pop
cmp
vmptrst
or
aad
ja
xor
push
lods
pop
cmps
jae
pop
ss
shr
popa
lds
pushf
fst
dec
int
repz
cmp
push
bound
popa
xchg
cmp
mov
cmps
sub
ins
fadd
test
loop
cmp
pop
add
cld
call
mov
scas
mov
mov
pop
mov
jns
push
(bad)
imul
rcr
sub
and
or
sbb
pop
lods
and
cmp
movs
std
cmps
adc
stc
pop
leave
fst
hlt
fdivr
mov
repnz
mov
mov
addr16
ss
jge
inc
aam
dec
dec
sti
jo
mov
fdivrp
es
cld
push
ins
mov
cmp
inc
xlat
arpl
pop
pop
jmp
pop
mov
push
mov
cmp
lods
stos
ja
popf
adc
les
fdiv
pop
cmc
(bad)
mov
inc
pop
xchg
fst
cmp
scas
sbb
sub
inc
pop
dec
push
stc
mov
(bad)
dec
add
push
arpl
inc
push
jnp
imul
and
jnp
mov
in
push
sbb
inc
jmp
or
retf
ins
popa
outs
icebp
out
pusha
test
ja
push
and
movs
jae
sub
sub
push
fisub
xor
dec
xchg
test
imul
push
int
outs
pop
jbe
mov
and
xor
adc
dec
cmps
psadbw
add
push
push
cmc
(bad)
cmp
test
ins
mov
lahf
aad
in
(bad)
outs
lds
add
cmp
jle
jbe
cmp
push
rcr
inc
call
jmp
xchg
jae
pop
test
clflush
mov
push
jns
cmp
sti
lea
in
ror
pop
clc
hlt
push
fwait
(bad)
(bad)
mov
pop
iret
push
jle
lods
lods
hlt
adc
mov
retf
lods
lods
arpl
add
pop
sbb
inc
mul
add
add
inc
jns
or
loope
mov
les
or
push
popf
or
adc
fs
leave
dec
in
jmp
test
mov
sbb
mov
iret
mov
xlat
nop
es
fadd
(bad)
loope
call
pop
pushfw
sbb
and
adc
dec
fs
(bad)
sub
add
ds
(bad)
ja
cmp
fidiv
enter
sbb
cmp
pop
push
cmp
jns
pop
or
sbb
scas
test
xchg
xlat
sbb
dec
add
hlt
shl
xor
(bad)
das
mov
fucomip
or
icebp
sbb
xchg
mov
xchg
pop
retf
test
jecxz
pop
adc
les
cmc
adc
fld
iret
xor
pop
out
add
out
jbe
sbb
inc
fneni(8087
and
pop
call
adc
lods
fwait
add
push
das
push
mov
jecxz
cli
sbb
push
mov
sbb
lods
lahf
add
jae
or
jmp
cmp
in
movs
rcr
xchg
shr
jmp
(bad)
fs
mov
xor
add
stos
mov
cli
mov
stos
xor
add
cmp
dec
cwde
adc
mov
mov
les
loop
aas
pop
xor
xchg
sub
cwde
cmp
jmp
jmp
je
mov
and
sbb
addr16
push
out
xchg
imul
ins
repnz
xchg
movs
cmp
test
mov
inc
lahf
fisub
loopne
cmp
mov
inc
out
or
int
xchg
xchg
mov
jb
bound
jle
adc
inc
cmc
scas
xchg
cmc
mov
inc
cwde
(bad)
jmp
and
pop
cwde
retf
push
mov
pop
pop
aam
and
icebp
ret
add
scas
dec
or
mov
sub
pop
repz
rcl
sub
lock
ror
mov
nop
adc
je
push
ja
xor
ins
pop
mov
adc
outs
addr16
clc
xor
xchg
mov
xchg
or
jns
(bad)
cmp
mov
sub
test
add
ficom
jb
add
aam
jns
mov
call
add
clc
xchg
repnz
sti
and
xchg
sar
js
aas
dec
push
loope
inc
sbb
sub
inc
rol
add
sbb
loop
mov
jae
mov
std
outs
(bad)
mov
push
mov
mov
lods
outs
mov
fsub
sbb
stos
inc
push
ins
push
jmp
and
push
pop
mov
int
div
xor
mov
retf
out
or
push
and
pop
mov
loop
call
mov
in
addr16
dec
xchg
mov
adc
je
xor
mov
jnp
inc
adc
js
mov
adc
aaa
fld
sub
sbb
mov
data16
aas
add
(bad)
(bad)
mov
or
jmp
imul
push
sbb
xchg
out
repnz
rcl
xchg
fld
xchg
mov
cmps
xchg
data16
mov
ins
rcr
push
je
mov
inc
shl
inc
or
lock
enter
push
pop
imul
push
add
push
jbe
dec
cmps
shr
sbb
adc
rcl
and
imul
sbb
js
shr
popa
test
fcmovnbe
les
pop
mov
popa
in
inc
adc
out
push
xchg
es
bound
test
test
scas
lods
out
fld
xor
pop
lock
xor
xchg
arpl
sbb
add
popa
dec
push
push
sbb
out
mov
xchg
das
cli
mov
scas
mov
mov
add
mov
jle
pop
into
mov
xchg
in
les
mov
pusha
sub
xchg
in
sbb
inc
xor
pop
std
retf
cmp
jo
out
loope
push
mov
fucomi
xchg
and
vmovd
xor
cmps
in
outs
sub
in
sub
inc
popf
(bad)
push
dec
outs
mov
rcl
inc
push
aam
and
add
icebp
outs
cmps
out
out
push
cdq
and
ins
push
xor
stos
pushf
dec
xor
stos
in
ror
outs
sub
test
aad
cmp
cmp
call
mov
and
sub
xchg
repz
adc
cs
fisubr
fist
dec
psraw
push
int
xchg
repz
movs
cmp
fdivr
call
in
xor
push
enter
(bad)
scas
jbe
adc
sub
and
cmp
aad
stos
push
jmp
out
push
int
cs
arpl
mov
xchg
fidiv
mov
mov
adc
inc
rol
mov
iret
jg
retf
outs
push
push
mov
ret
sub
int3
int
loope
in
(bad)
xchg
test
popf
in
out
dec
mov
loope
jmp
xor
mov
add
ror
lahf
in
adc
cwde
or
pusha
and
pop
out
pop
loopne
jo
popf
pop
shl
sub
hlt
mov
bnd
aaa
xchg
arpl
inc
sub
pop
jne
mov
push
pop
adc
xor
mov
sbb
pop
jle
test
call
daa
and
xor
mov
jno
aad
adc
(bad)
xlat
push
adc
dec
out
xor
mov
jno
sbb
and
int
fidivr
shl
loopne
ins
loopne
jo
or
jo
inc
xchg
xlat
iret
stos
add
cdq
adc
dec
rol
out
adc
mov
jbe
scas
leave
push
in
fnstenv
in
lds
shr
push
push
mov
mov
imul
mov
mov
pop
pop
nop
and
jecxz
das
mov
mov
int
in
dec
neg
push
mov
das
cmps
test
sbb
or
out
jb
movs
cmps
jno
xchg
and
cmc
push
or
ja
add
outs
loope
shl
stos
jecxz
cmp
call
call
jb
gs
sbb
xchg
push
adc
cmp
mov
or
xchg
(bad)
cmp
test
cld
and
or
xchg
out
mov
xchg
or
inc
(bad)
pop
and
cmp
mov
icebp
xchg
add
xlat
out
es
cwde
(bad)
mov
stc
xchg
add
imul
movs
ror
mov
jno
pop
xor
in
dec
lods
call
aad
dec
jle
retf
dec
dec
bound
pop
xchg
ret
mov
not
sbb
mov
dec
repz
pop
xor
ja
sbb
xlat
cmc
dec
dec
repnz
movs
out
push
ret
or
les
stos
mov
xchg
(bad)
jmp
imul
in
jmp
xor
xor
xor
fs
xchg
pop
int
shl
std
imul
xchg
mov
push
pop
push
adc
pop
leave
and
mov
mov
sub
ds
sub
xchg
ss
pop
mov
hlt
sbb
cwde
mov
push
dec
ficomp
inc
mov
daa
dec
push
sbb
icebp
jl
out
lea
jbe
sub
cmp
movs
add
outs
(bad)
loope
aaa
fisttp
add
cmp
mov
adc
adc
(bad)
fdiv
std
lock
ret
nop
out
test
push
sti
xlat
inc
xor
mov
mov
fcomp
push
cmp
fs
dec
xor
push
clc
mov
xchg
xchg
outs
push
sar
xlat
cmc
jnp
adc
(bad)
mov
sub
scas
pushf
jl
pop
sub
imul
inc
lock
push
jns
div
or
jne
push
retf
push
fs
lods
xchg
mov
aaa
hlt
test
aaa
sub
push
dec
cmps
pop
ins
imul
dec
xor
lods
sub
inc
ret
jae
add
mov
or
mov
mov
inc
daa
fisttp
(bad)
lock
(bad)
jno
sbb
stc
push
mov
sbb
stos
sbb
dec
(bad)
and
ss
nop
lock
xchg
iret
popf
scas
mov
ins
or
or
dec
mov
retf
push
movs
std
jae
and
push
and
js
imul
adc
sbb
lds
bnd
xchg
addr16
popa
ja
and
xchg
mov
call
leave
retf
es
add
lock
mov
mov
mov
cmps
xchg
mov
idiv
enter
sub
adc
pop
jecxz
sbb
cmps
or
sub
mov
push
fsubr
sub
push
lds
mov
nop
mov
adc
fldcw
aad
out
xchg
aad
mov
add
pusha
jbe
iret
cmp
rcl
jae
mov
xchg
mul
mov
ss
mov
and
out
push
xor
xchg
pop
js
mov
dec
cmp
dec
aam
inc
gs
(bad)
adc
mov
mov
lea
jl
mov
out
mov
sahf
fcmove
pop
in
or
enter
das
mov
imul
in
inc
loop
stos
xchg
pop
inc
test
push
stos
inc
ds
sub
mov
cmp
adc
mov
outs
xor
adc
push
movs
inc
dec
popf
cli
pop
nop
pop
mov
mov
or
fmul
push
aas
std
(bad)
jo
inc
rcl
push
(bad)
ss
or
xchg
fstp
popf
mov
jmp
or
lds
or
mov
and
lds
adc
mov
mov
in
jl
sbb
fnstcw
sub
iret
jno
cmp
sbb
out
adc
arpl
stos
mov
push
shl
xchg
addr16
sub
xor
mov
mov
enter
pop
mov
cmp
out
fs
movs
pop
cmps
mov
cli
sbb
nop
rcr
cmp
sar
jge
rcl
and
push
pop
or
(bad)
push
ror
lods
dec
adc
xor
into
adc
movs
mov
jnp
inc
fucom
jge
mov
sbb
pusha
push
push
pop
(bad)
pushf
call
aas
or
je
dec
xchg
push
pushf
and
ficom
sar
xchg
in
out
xor
out
mov
(bad)
cmp
scas
(bad)
jmp
jecxz
loop
mov
int
pop
add
popa
daa
and
sub
inc
daa
arpl
and
push
mov
adc
lds
inc
push
xor
pop
sub
adc
(bad)
xchg
icebp
aas
sti
push
not
out
in
push
jecxz
outs
cmps
fs
xlat
push
push
jns
and
out
fbld
test
mov
add
enter
and
mov
ret
inc
jae
sbb
je
gs
arpl
mov
fmul
dec
adc
ss
clc
addr16
test
cmp
(bad)
push
sbb
ret
fild
xchg
aas
popf
and
int
add
and
sbb
mov
push
ins
retf
scas
retf
jb
shr
xchg
leave
out
or
xchg
into
add
push
aam
cmp
enter
loope
jmp
and
sub
mov
sbb
sbb
or
(bad)
jae
(bad)
stos
mov
nop
jl
cmp
mov
and
int
jns
test
xor
ret
mov
sbb
add
aaa
bt
and
sahf
jbe
ja
scas
inc
loopne
jnp
inc
mov
adc
iret
rcr
dec
(bad)
fisub
aad
add
mov
cld
sbb
mov
sbb
sahf
inc
loope
aad
cdq
pop
adc
stos
jl
cs
sbb
retf
das
sbb
and
(bad)
mov
cld
cmp
into
xchg
popa
adc
mov
mov
mov
xlat
retf
mov
xor
sbb
ins
sub
xlat
mov
popf
sti
daa
hlt
sub
lods
stos
pushf
fwait
jle
sbb
push
inc
scas
repnz
inc
pushf
xor
cmp
adc
inc
push
pop
ret
sahf
ss
add
retf
ins
setns
data16
inc
cmp
sti
outs
jmp
pop
dec
std
cwde
stc
jo
pop
mov
and
cmp
and
mov
xor
adc
sub
inc
cmp
mov
iret
cmp
ret
outs
add
aad
stc
rcr
std
cmp
adc
dec
cmp
add
sub
mov
fisub
add
das
cmp
adc
mov
nop
cdq
cmp
repnz
sbb
jo
xchg
bound
jae
xchg
inc
loop
dec
mov
mov
repz
cmps
xor
stos
cmp
into
sbb
lahf
jae
sub
adc
add
dec
dec
add
call
push
cwde
int
mov
sahf
push
add
gs
xchg
inc
mov
pop
inc
mov
test
push
xchg
adc
pop
xchg
push
ja
jno
xchg
cmp
push
and
fwait
aad
pop
sbb
sbb
push
pushf
push
cs
and
pushf
pop
sbb
out
or
lock
and
mov
sub
jmp
xor
inc
cmp
icebp
push
or
xchg
inc
xchg
mov
xor
pop
les
ret
hlt
cld
mov
je
cmp
hlt
in
sbb
or
pusha
add
dec
(bad)
and
xchg
(bad)
pusha
in
(bad)
pop
retf
inc
nop
jle
popa
fimul
xchg
jmp
fidiv
xchg
jp
mov
imul
addr16
jmp
sar
jmp
cwde
jmp
pop
sti
mov
inc
adc
and
fs
into
xchg
push
xchg
pop
add
(bad)
into
ins
inc
cmp
in
not
hlt
movs
clc
out
daa
dec
cs
mov
movs
jg
dec
mov
addr16
jae
adc
fsub
es
xor
sub
cmp
sbb
popa
mov
shl
inc
shr
cwde
ins
mov
lea
jmp
push
cmp
mov
xor
scas
in
cmp
ds
or
ret
inc
sahf
arpl
cmp
jge
dec
mov
jg
out
mov
mov
fldcw
mov
lahf
mov
outs
push
jmp
neg
ins
jmp
jae
lods
mov
je
sar
imul
js
hlt
int
(bad)
or
ret
shl
(bad)
les
in
and
xchg
fimul
adc
bound
jns
sub
mov
inc
dec
addr16
dec
mov
(bad)
dec
and
push
ret
mov
dec
jae
sbb
xchg
cmp
pop
mov
inc
in
lods
ret
addr16
shr
sub
in
push
jle
pop
ret
int3
jo
dec
test
mov
out
or
out
sahf
mov
add
jne
jnp
add
mov
sar
or
mov
mov
(bad)
push
jae
cmc
(bad)
repz
movs
add
dec
mov
gs
(bad)
scas
fwait
std
pop
adc
or
push
fistp
mov
mul
leave
fsub
or
repnz
ror
cmp
xchg
jmp
call
jno
ss
mov
outs
(bad)
sub
or
popa
aam
nop
xor
jecxz
inc
or
(bad)
mov
fst
das
shr
cmp
xchg
xor
loope
popa
imul
frstor
sbb
sbb
test
mov
retf
pop
in
and
ret
mov
sbb
gs
cmp
shl
ss
push
and
lock
(bad)
sbb
ins
cli
retf
xchg
mov
adc
add
dec
sub
xchg
sub
sbb
adc
stos
jbe
lds
mov
mov
(bad)
test
cli
xchg
lods
mov
xchg
xor
inc
add
pop
stos
imul
mul
mov
mov
jl
repnz
fs
int
outs
jge
cdq
mov
cmp
inc
xchg
cmp
mov
xor
stos
sub
cmps
call
std
and
sbb
sar
mov
xchg
ja
iret
gs
jbe
sub
cmc
cmps
xor
retf
dec
jnp
pop
mov
ja
push
fcmovnu
call
and
mov
cmp
mov
adc
pop
stc
xor
cwde
inc
cmp
test
nop
inc
ins
sbb
imul
ins
lods
fisttp
ds
jmp
and
push
xchg
ja
or
popf
sbb
sbb
or
add
fs
mov
sbb
cmp
mov
addr16
xor
mov
mov
call
std
mov
scas
and
loope
outs
call
aaa
push
jnp
sbb
popa
or
pop
mov
xchg
and
test
and
pop
ja
cli
jl
leave
sub
cmp
mov
or
mov
or
bound
aam
stc
pusha
sub
aas
add
xor
or
out
fst
(bad)
fdiv
push
jo
imul
lods
icebp
sahf
(bad)
xchg
jmp
inc
push
(bad)
sub
lock
pusha
adc
stc
cdq
fdivr
js
jmp
jecxz
(bad)
mov
sub
call
and
mov
fwait
daa
dec
xlat
repnz
xchg
mov
cmc
inc
mov
lea
mov
dec
out
xor
or
jns
mov
push
repz
pop
daa
sar
fiadd
clc
jg
cmp
movs
inc
retf
xchg
inc
pop
dec
aas
or
push
int3
call
lods
stos
push
ins
pop
pop
mov
loope
in
pop
pop
(bad)
div
and
xor
push
sub
inc
movs
mov
test
or
daa
jo
add
jb
cmp
pop
adc
xor
pop
sbb
mov
jl
dec
aam
mov
mov
mov
rcr
xor
push
mov
movntps
xchg
pusha
mov
mov
nop
adc
push
in
jbe
scas
cmp
mov
inc
sbb
sbb
push
stc
xor
ins
pop
mov
xchg
sar
vcvtps2dq
push
mov
fdivr
mov
sahf
jb
dec
add
aaa
inc
mov
lods
pop
pushf
sub
arpl
adc
cmp
ins
mov
(bad)
mov
bswap
aam
cmp
sar
sbb
cmp
loope
push
add
and
lea
push
test
xor
cwde
pushf
and
jecxz
push
pop
or
outs
stos
pop
xor
scas
dec
add
sub
fist
(bad)
sti
popf
xchg
shl
loope
sti
outs
dec
pop
(bad)
fnstcw
pop
pop
pop
pushf
dec
imul
jno
mov
push
bound
outs
rol
mov
stc
push
push
outs
lods
in
out
into
adc
xchg
xchg
in
push
into
cmp
lods
(bad)
mov
(bad)
icebp
xor
xchg
or
test
jecxz
sti
ds
mov
jb
retf
sbb
cs
jae
clc
pop
pop
xchg
sar
iret
jecxz
cmp
adc
push
retf
xchg
add
cmps
sub
mov
add
lock
adc
rcr
aam
std
stc
mov
mov
loop
dec
popf
xor
addr16
cmp
es
or
mov
inc
add
and
out
mov
in
ja
mov
repnz
xor
ins
call
xor
and
and
fild
jl
aaa
pop
dec
dec
push
or
xor
cmps
loop
sbb
and
mov
imul
cmc
adc
or
add
nop
xchg
popa
mov
inc
xchg
sti
imul
call
shl
xchg
data16
call
sub
cmp
mov
sub
mov
or
cmp
mov
pushf
and
out
out
loop
imul
jmp
lea
scas
add
or
inc
scas
lahf
and
xor
adc
jno
push
mov
imul
sbb
push
cld
xchg
lods
jb
gs
or
and
js
and
std
mov
dec
xlat
add
fwait
inc
inc
jg
xor
test
gs
lods
call
repz
hlt
pop
xchg
add
test
sbb
and
sub
add
in
mov
push
cwd
sbb
scas
mov
pop
mov
(bad)
int3
mov
fldenv
test
cmp
and
js
jl
scas
js
stc
js
sub
das
repz
jno
xchg
mov
sub
pop
add
movs
enter
jae
mov
movs
xchg
pop
nop
cwde
int
jecxz
(bad)
stc
cmp
cmp
scas
mov
mov
add
imul
add
jnp
pop
into
ins
je
call
cmp
gs
sbb
sar
sub
sub
and
test
das
mov
inc
outs
jmp
ds
and
lods
mov
sbb
nop
jno
enter
adc
mov
push
dec
or
repz
pushf
jne
add
in
xor
mov
jo
adc
and
repz
movs
fwait
jo
and
inc
jp
xor
mov
test
mov
lea
js
movs
push
lds
jecxz
outs
movs
push
ret
shl
cmp
xor
or
inc
push
pop
mov
ret
push
lds
xchg
cmps
loopne
or
dec
mov
adc
jnp
xchg
pop
push
adc
pop
pop
outs
xchg
inc
(bad)
mov
inc
push
fmul
in
es
adc
pop
ds
js
pop
jmp
xlat
scas
int
repnz
push
mov
movs
ret
repz
cmc
push
xor
mov
push
inc
mov
das
jbe
loope
mov
jne
out
push
xchg
xchg
leave
loope
repz
sti
cmp
and
out
in
fnstcw
jae
gs
(bad)
in
(bad)
mov
inc
mov
scas
sbb
xlat
ffreep
inc
push
cmc
or
mov
in
jnp
xchg
push
mov
test
in
mov
mov
aam
pop
daa
dec
mov
or
lds
add
adc
not
pop
shl
or
push
sub
push
test
sub
int
dec
add
push
ret
pusha
jmp
cwde
shl
add
and
pop
mov
ds
inc
bound
pop
push
xchg
mov
pop
jmp
mov
mov
push
adc
or
cs
scas
push
dec
in
sbb
push
mov
pop
scas
(bad)
and
mov
inc
test
and
ret
mov
xchg
xchg
imul
jle
jb
push
stos
mov
fcom
inc
in
adc
push
push
sub
out
ret
stos
ins
daa
sbb
xchg
jecxz
xchg
jl
lahf
push
dec
cmp
jge
sub
hlt
(bad)
mov
push
inc
mov
pop
mov
adc
enter
and
sub
xor
push
sub
ja
in
xchg
daa
(bad)
jmp
xchg
xor
push
or
jecxz
repnz
xor
int
outs
fldln2
mov
out
outs
fcom
loope
push
xor
xor
fistp
sub
mov
fbld
rcr
or
retf
and
mov
sbb
and
cmp
in
dec
ds
and
fxam
and
or
fisttp
inc
movs
adc
ja
xchg
sub
push
js
and
inc
pop
add
shl
xor
in
lds
inc
das
mov
fprem1
jl
shr
sbb
cmp
(bad)
sub
ret
mov
fsubr
sbb
lock
push
mov
jl
jbe
mov
rcl
sbb
enter
shl
(bad)
out
jmp
xor
lea
push
mov
pop
shl
mov
retf
xor
cmc
dec
out
gs
adc
inc
ret
xor
popf
push
sub
scas
mov
cld
mov
xor
js
inc
outs
int
stc
fpatan
cwde
rcl
xor
xchg
in
or
pop
lea
push
sub
adc
(bad)
arpl
pop
xor
push
add
xchg
pushf
pop
or
cmp
imul
pop
mov
xor
push
test
fstp
in
in
(bad)
pushf
jmp
cli
(bad)
xchg
rol
loopne
push
cld
pushf
fcomp
mov
repnz
cwde
mov
mov
jne
cmp
mov
fiadd
adc
(bad)
imul
repnz
scas
pop
loop
cdq
sahf
cmc
ss
out
mov
ror
inc
xor
jb
iret
shl
push
xor
es
add
test
ret
mov
add
fist
es
add
outs
pop
and
xlat
stc
pop
data16
ss
jne
cmps
adc
mov
or
xchg
and
cmp
jo
aas
ret
scas
inc
repz
mov
int3
xchg
inc
test
jo
xchg
sub
mov
clc
push
clc
jmp
push
je
adc
mov
push
jnp
int
dec
mov
and
fcom
dec
jecxz
arpl
mov
stos
mov
xor
push
rcr
(bad)
mov
lea
pop
dec
jae
add
out
icebp
xchg
cli
mov
gs
leave
jnp
bound
xchg
jns
add
cmps
or
shr
(bad)
push
xchg
lods
xlat
outs
adc
dec
add
cmp
or
or
les
adc
add
push
repnz
add
mov
iret
xchg
out
mov
jg
cdq
push
xlat
sub
jp
pop
in
sub
sub
xor
sub
or
inc
loope
scas
pop
cmp
lock
ds
loop
ds
xchg
xor
ret
scas
mov
inc
push
and
hlt
shr
mov
xchg
pop
cmps
xor
dec
xchg
mov
lods
mov
mov
retf
cld
inc
(bad)
mov
sub
xchg
mov
repz
aam
in
jmp
push
or
inc
push
add
shl
in
mov
enter
int3
add
push
int3
movs
shl
test
test
or
call
xchg
pop
sub
fsubr
adc
in
cwde
iret
jo
arpl
jb
imul
ins
fisub
out
lahf
aad
out
mov
clc
sub
mov
lods
cli
add
mov
cmp
cdq
push
add
hlt
fdiv
pushf
jge
ret
out
push
jl
add
or
(bad)
xor
int3
mov
sub
jmp
xor
adc
mov
xchg
popa
aad
call
fs
cmps
in
inc
imul
fs
pop
mov
addr16
loope
jl
jge
sar
pop
jo
jmp
jne
ins
add
xchg
push
sub
xor
sahf
fist
sub
fwait
mov
loope
call
ins
adc
test
xchg
mov
mov
and
mov
cmp
imul
cmp
mov
pop
ja
mov
mov
push
mov
ret
js
pop
push
inc
jae
and
fidivr
test
pushf
out
(bad)
fmul
xor
and
mov
hlt
mov
jns
or
(bad)
rol
cmc
call
xchg
aad
mov
(bad)
repnz
out
push
jp
rcl
pop
inc
jo
jno
lahf
jp
je
stc
(bad)
sbb
rol
add
(bad)
nop
push
pop
jne
lds
leave
in
aad
push
push
xchg
and
fnstsw
xchg
push
(bad)
iret
xchg
inc
xchg
cwde
cmp
stc
jb
adc
fmulp
(bad)
arpl
aad
sub
clc
ret
add
jl
sbb
stos
shl
cmp
pop
ins
push
jge
movs
test
in
adc
pop
mov
jmp
aam
arpl
add
xor
iret
scas
lea
ds
and
ins
xor
sub
mov
inc
fnstsw
cmp
sub
push
out
cmp
mov
loopne
fmul
adc
cwde
mov
cld
mov
sub
add
scas
or
into
jne
int
int3
and
das
jge
mov
push
loopne
pushf
sub
outs
jle
scas
adc
sbb
push
imul
jnp
pop
inc
sbb
std
mov
xchg
jmp
adc
outs
mov
xor
sbb
inc
outs
ret
rol
(bad)
and
inc
pop
hlt
xchg
or
pop
hlt
ret
cwde
mov
out
mov
mov
push
mov
mov
test
pop
aad
inc
jns
rol
neg
in
inc
and
add
jmp
xchg
pop
mov
std
pop
idiv
in
outs
sbb
fbstp
out
mov
pop
jb
sbb
fbld
cli
or
inc
test
pop
(bad)
ret
fs
mov
pop
inc
fwait
loop
scas
pop
add
lods
dec
pop
xor
mov
ret
neg
js
(bad)
sbb
jge
scas
lods
fld
inc
or
icebp
mov
xchg
mov
rcl
pop
arpl
js
sti
xor
dec
mov
sbb
das
and
aam
dec
ret
xor
cmp
inc
or
adc
(bad)
sbb
pop
push
pop
mov
mov
mov
lahf
jle
jle
or
sti
js
call
popa
and
add
push
mov
sub
dec
(bad)
jmp
mov
cdq
aam
xchg
fwait
in
cld
es
mov
retf
cmps
gs
mov
call
jbe
lea
ret
or
or
sbb
adc
out
test
mov
pop
or
mov
xchg
imul
(bad)
cmp
mov
pop
and
mov
mov
xchg
pushf
and
jmp
scas
or
(bad)
(bad)
outs
push
inc
and
and
es
dec
inc
push
inc
push
rcl
mov
mov
push
into
push
adc
sub
xchg
jb
or
clc
hlt
shr
dec
fcomp
sbb
in
add
loop
ins
out
out
add
mov
gs
mov
add
test
push
shl
and
in
xor
sbb
add
cs
jmp
dec
rcr
mov
fsub
ret
fstp
js
sub
jo
or
push
jb
mov
jge
aam
outs
in
setno
pop
enter
call
push
mov
outs
or
xor
inc
div
xchg
in
js
jmp
mov
sbb
in
enter
data16
shl
and
sbb
and
jbe
aaa
(bad)
adc
lods
sbb
mov
xor
mov
jae
fmul
fiadd
pusha
mov
aas
ret
cdq
lock
adc
and
lahf
dec
push
xchg
lock
rol
mov
aam
push
xchg
retf
leave
inc
sbb
fpatan
push
fistp
ret
leave
repz
(bad)
add
dec
sbb
push
jno
mov
nop
(bad)
call
xor
jne
cmp
test
maskmovq
test
jae
bound
es
fldenv
cmp
in
ss
fiadd
repz
dec
sbb
dec
ss
bound
fwait
or
cmps
dec
pop
mov
pop
inc
sbb
push
dec
into
xor
rcr
push
lods
or
mov
je
cmp
inc
xchg
fimul
out
es
mov
cwde
std
jg
xchg
shl
sbb
mov
jbe
retf
sub
loope
sti
mov
pusha
push
cdq
adc
mov
xchg
push
call
inc
jmp
mov
lahf
or
(bad)
out
out
mov
mov
sub
mov
sbb
mov
xchg
arpl
and
adc
cmp
retf
das
pop
mov
cmp
imul
inc
movs
imul
jl
or
or
aad
leave
lahf
int3
sub
pop
xchg
clc
inc
ins
cmp
test
sub
into
repnz
(bad)
out
out
push
mov
imul
sub
rol
cwde
cmps
adc
pop
sbb
dec
sub
into
div
repz
push
shr
adc
mov
jnp
lock
popf
pop
sbb
call
fmul
push
(bad)
cmp
sbb
jge
out
sub
imul
inc
cmp
and
mov
fldenv
repnz
imul
imul
sbb
push
scas
aas
add
aaa
dec
jbe
xor
xchg
frstor
lods
or
jp
out
lock
ds
cmp
xor
jmp
in
jmp
hlt
js
pop
sub
inc
sub
test
mov
dec
inc
xor
pop
sub
test
nop
test
fmulp
retf
imul
ror
ins
xchg
pop
push
in
repnz
inc
mov
cmps
mov
adc
push
pop
call
in
mov
daa
shl
retf
and
dec
mov
pop
add
pop
xor
jg
push
data16
adc
test
sub
or
dec
sbb
sbb
cmp
adc
push
mov
mov
lods
cmp
ret
call
pop
(bad)
out
mov
fcmovu
pop
ins
sahf
xor
xor
pcmpeqw
cmp
fstp
stos
dec
mov
adc
shr
std
cmp
pop
inc
mov
mov
pushf
inc
dec
retf
cmp
jbe
fs
mov
movs
rcr
out
xor
lock
xchg
imul
ds
popf
mov
mov
xchg
inc
in
mov
cmp
rcr
sub
push
add
scas
fsub
xchg
das
jle
xchg
pop
cmp
jge
sub
xchg
sbb
shl
pusha
mov
int3
add
jge
pushf
cmps
inc
jle
xor
cmps
test
and
fsubr
fbstp
call
out
scas
lahf
rcl
jecxz
sti
pop
push
lods
jle
in
adc
and
jnp
jg
and
push
daa
adc
test
test
popf
inc
dec
mov
sub
cmp
repnz
cmp
add
hlt
inc
dec
lahf
(bad)
push
retf
dec
cmp
inc
and
test
imul
retf
push
mov
and
dec
loop
and
fist
push
cs
inc
test
cmc
hlt
mov
jno
cmp
lods
nop
jmp
jmp
and
jg
call
inc
xlat
sbb
dec
lea
inc
mov
lahf
js
ret
mov
adc
pop
into
(bad)
leave
cmp
sar
push
pop
sbb
sbb
mov
dec
loop
mov
inc
shr
mov
stos
stos
leave
pop
js
mov
push
nop
mov
(bad)
and
mov
inc
fwait
neg
pop
add
or
fnstcw
pop
cmc
cwde
mov
leave
loopne
sahf
add
xchg
test
ror
dec
clc
aaa
or
inc
mov
add
cli
call
(bad)
xchg
bound
xchg
loopne
inc
inc
ds
sbb
mov
cld
add
in
push
mov
fcomp
or
out
mov
jmp
movs
in
or
xor
aad
xor
adc
(bad)
popa
adc
pop
(bad)
shr
out
or
lds
rcr
arpl
cmc
jno
sbb
jmp
push
in
push
add
dec
out
cmp
cdq
mov
icebp
pop
mov
adc
movs
sti
sub
in
test
(bad)
mov
in
ror
enter
adc
xor
rcr
or
inc
cmp
test
test
ret
cmps
retf
xor
out
push
fcmovbe
lods
inc
ins
das
scas
push
xchg
xor
out
popf
mov
jmp
out
aad
pop
or
leave
imul
cli
mov
xchg
fcomp
popa
pop
les
and
out
dec
(bad)
dec
retf
imul
daa
mov
dec
add
popa
mov
sti
cmp
mov
in
iret
mov
sub
jle
jae
leave
es
xor
(bad)
adc
repnz
dec
push
fldcw
stos
ror
test
leave
adc
arpl
jg
pop
lahf
mov
psrad
sbb
ss
outs
cmp
(bad)
mov
movs
lea
mov
loopne
sbb
mov
retf
mov
std
in
mov
mov
cmps
add
xchg
sub
or
retf
(bad)
sbb
pop
xlat
add
fcomp
cmc
mov
loope
(bad)
adc
(bad)
stos
mov
jl
push
mov
out
jmp
cdq
sub
loop
and
cmp
jnp
push
adc
and
dec
pop
mov
jnp
and
mov
pop
push
fs
int
xchg
sahf
sbb
add
mov
or
ja
vmovsd
push
jmp
inc
jmp
push
xchg
add
xor
outs
xchg
cmp
je
imul
call
push
outs
xchg
sbb
stos
mov
mov
jle
out
jne
sar
xchg
scas
pop
cmps
(bad)
in
add
fisubr
repnz
add
push
xchg
outs
lea
sub
xchg
dec
ja
dec
sar
xor
dec
(bad)
retf
sahf
xchg
out
or
mov
cmp
cmp
(bad)
je
jge
ins
jl
xchg
xchg
ds
in
bound
xlat
call
movs
mov
sbb
inc
daa
scas
xchg
into
ror
jecxz
cmp
retf
cmp
mov
pop
dec
(bad)
in
add
mov
xor
add
mov
loope
shr
sbb
add
fsub
lock
xchg
and
jl
sar
cmp
ficom
push
mov
cld
jo
xchg
das
mov
inc
jmp
paddq
pop
or
and
pop
mov
cdq
pushf
sub
mov
fwait
jb
xor
ret
in
push
stc
leave
pop
movs
pop
cmp
jge
jae
xchg
(bad)
in
pop
lds
fcom
sub
xchg
not
(bad)
mov
xor
rol
inc
sub
mov
sti
fnstcw
mov
xor
mov
cwde
dec
rcl
std
mov
xor
enter
mov
lock
pop
add
dec
add
call
sbb
das
sti
fisub
dec
sbb
shl
sti
pmulhuw
jne
and
mov
leave
pop
mov
leave
add
xchg
xchg
push
inc
cmp
jmp
repnz
push
clc
ins
int3
(bad)
xor
pop
or
mov
imul
cmp
int
mov
cmps
jnp
jg
test
les
mov
in
cdq
adc
loope
mov
jo
cwde
mov
add
(bad)
lock
sub
jg
mov
imul
repnz
lds
out
mov
push
and
retf
daa
aad
inc
sub
mov
movs
shr
or
lods
jmp
int3
inc
call
ret
fmulp
mov
mov
pop
push
enter
popf
or
ss
cmp
and
mov
and
mov
mov
adc
fistp
or
mov
out
retf
mov
mov
cdq
hlt
mov
cs
popf
les
clc
dec
aas
cmp
lods
fld
xor
mov
ja
mov
xchg
frstor
or
mov
sub
and
sbb
xor
inc
cmp
aam
sub
mov
pop
xchg
sub
and
pop
xor
mov
fist
mov
push
and
add
cmp
pusha
pop
jecxz
lods
push
or
test
fdivr
mov
dec
and
mov
mov
(bad)
jmp
mov
popa
movs
dec
mov
mov
fistp
dec
mov
mov
out
ret
dec
(bad)
jmp
jmp
xchg
xchg
fistp
cs
les
imul
push
in
push
test
xchg
xchg
dec
sar
push
(bad)
not
fwait
push
add
stos
mov
test
ss
add
push
and
and
dec
loopne
nop
mov
pop
xor
movs
lods
cmp
pop
dec
pop
fldcw
adc
(bad)
mov
icebp
(bad)
inc
and
xchg
imul
xchg
mov
(bad)
jmp
cwde
jecxz
dec
lahf
push
js
dec
jg
loope
and
(bad)
imul
jne
mov
push
movs
xor
ja
dec
sar
pop
fsub
call
movs
lods
fnstsw
or
push
scas
(bad)
or
cmp
(bad)
jmp
jge
mov
(bad)
popf
push
xchg
aad
test
(bad)
jbe
das
jo
xor
loopne
ins
dec
jns
inc
adc
and
mov
addr16
cs
dec
jae
mov
test
fdiv
dec
dec
rol
js
sbb
ins
pop
adc
xor
mov
movs
in
lods
dec
daa
neg
cld
mov
imul
test
loopne
add
lahf
cdq
jns
push
cmp
repz
inc
sbb
fwait
sbb
xchg
adc
(bad)
stc
xchg
jae
adc
mov
push
ret
lahf
ins
sbb
mov
mov
dec
(bad)
push
cmps
pminsw
cmp
je
or
dec
je
sbb
mov
dec
and
ret
test
sbb
mov
sbb
xchg
push
cli
xchg
stos
stos
pop
fcomp
mov
dec
(bad)
jl
cmps
lock
lods
push
js
fstp
xchg
(bad)
outs
jbe
int
push
xor
sbb
aad
retf
lods
scas
xchg
lods
sbb
movs
mov
popf
test
or
push
or
loop
pop
test
pop
dec
xchg
sbb
mov
or
push
xchg
cmp
inc
push
cmp
mov
xor
mov
inc
loop
sbb
stos
push
dec
mov
call
dec
jmp
loopne
ins
stc
pop
test
mov
ret
mov
bnd
cdq
mov
aas
push
pop
ds
(bad)
ror
pop
mov
fcom
getsec
aaa
mov
jge
leave
sub
cld
dec
call
xor
sbb
retf
jb
dec
add
push
in
jg
(bad)
mov
xor
test
mov
xor
loopne
mov
xchg
inc
fs
adc
push
xor
inc
mov
pop
mov
movs
js
cs
bound
or
push
shl
push
fisttp
clc
in
stos
jns
in
adc
ja
pop
mov
cdq
clc
mov
lea
lock
jo
es
pop
outs
or
fdivp
jecxz
leave
ins
xchg
push
jbe
inc
vhsubps
inc
retf
push
call
jno
(bad)
cwde
mov
push
lahf
sbb
in
jne
push
inc
add
loop
leave
loop
push
sub
push
lods
pop
in
fucom
mov
fisubr
fbld
cli
inc
xchg
inc
mov
je
retf
hlt
aas
jmp
call
leave
mov
add
out
es
dec
ins
cmp
out
push
leave
cmp
std
mov
test
adc
pop
mov
xor
inc
push
xchg
mov
dec
aas
cmp
xchg
ja
jmp
and
dec
xor
ins
mov
test
aaa
ss
mov
xlat
daa
leave
jmp
imul
xor
mov
leave
jb
shr
jb
inc
(bad)
jmp
fadd
jmp
jb
dec
test
sahf
pop
nop
cld
push
push
js
les
jecxz
in
mov
repz
dec
iret
pop
rcl
nop
arpl
mov
mov
in
out
push
add
xchg
push
pop
dec
add
ins
sbb
ins
lahf
daa
and
dec
cli
aam
mov
sbb
push
ds
repnz
sbb
cmp
dec
std
data16
pop
pop
fisubr
xchg
aad
cmps
mov
cmp
in
add
xchg
or
cli
dec
scas
enter
push
or
popf
int
movlhps
inc
jge
hlt
jns
dec
push
xor
stos
sbb
dec
ret
daa
mov
enter
mov
push
jnp
jmp
stc
xor
bound
cmp
jp
and
cld
dec
adc
jg
push
(bad)
sti
xchg
mov
in
mov
stos
mov
jns
into
jmp
bound
mov
cmp
mov
jp
in
xchg
test
shr
jmp
pop
push
mov
inc
(bad)
push
outs
daa
jecxz
imul
lods
fst
mov
xchg
push
push
push
xlat
out
shl
lds
sbb
sub
sub
jne
fld
imul
aad
in
push
mov
enter
sbb
inc
lea
push
cld
xchg
test
fs
push
jae
mov
mov
stos
dec
test
jne
rcr
imul
sahf
sahf
add
jmp
ins
xchg
adc
adc
repnz
ss
mov
xor
dec
mov
neg
sti
(bad)
(bad)
adc
inc
lods
cld
aaa
mov
ficom
xchg
lock
dec
lds
xlat
bound
inc
ret
int
bound
push
cli
ror
int3
and
mov
inc
dec
inc
(bad)
ror
out
xor
into
pop
xor
jmp
adc
mov
(bad)
std
lods
cmp
jo
sbb
xchg
out
push
push
icebp
outs
jb
mov
sub
mov
les
add
gs
scas
out
bnd
mov
xchg
mov
and
xchg
out
sub
sar
xchg
call
fsubr
mov
sti
je
xchg
push
push
popf
cmps
and
dec
aaa
popf
(bad)
mov
int
das
in
push
adc
inc
inc
std
(bad)
repnz
(bad)
repz
into
ror
dec
call
ins
or
test
in
repnz
dec
rcr
mov
jl
dec
cmp
shl
test
mov
mov
mov
inc
push
mov
(bad)
adc
and
outs
inc
jmp
pop
inc
xlat
lahf
imul
movs
sub
div
test
leave
lahf
mov
and
or
sub
pop
int3
out
aas
scas
sbb
ja
push
fidiv
repnz
inc
adc
in
data16
into
xchg
jecxz
sub
push
shl
mov
xor
cmp
in
mov
xchg
nop
test
push
mov
inc
or
push
jb
(bad)
cmp
call
fnsave
mov
mov
mov
mov
lock
dec
data16
mov
out
rol
lods
or
add
push
add
sti
xor
in
mov
push
iret
inc
dec
in
mov
popa
mov
cmp
shl
sbb
mov
mov
mov
sub
in
xchg
icebp
push
ss
cwde
fcmove
jl
and
inc
dec
aas
js
mov
leave
cli
cs
xor
mov
call
call
dec
push
mov
mov
aad
in
nop
stc
sar
stos
fistp
mov
xchg
and
das
pop
daa
jp
xor
jl
js
ds
or
ds
shl
(bad)
call
and
cmps
add
inc
push
add
sti
dec
mov
ror
clc
jbe
pop
inc
call
mov
mov
jg
mov
xor
call
and
fcmovnbe
cmp
loop
std
mov
mov
fcmovnbe
mov
xchg
das
push
xchg
dec
pop
movs
jl
or
cmp
sbb
sti
test
inc
int
push
xchg
arpl
xor
fldenv
or
ds
(bad)
fdivr
lock
push
jno
stc
sub
ja
fmul
ret
pop
in
mov
lahf
test
imul
and
mov
cmp
sub
pop
ret
mov
das
hlt
sbb
mov
jno
sbb
movd
ficomp
loope
shl
xchg
dec
loop
mov
sbb
icebp
push
push
repz
cmp
sahf
pop
sub
movs
xlat
pop
sbb
enter
adc
daa
jmp
fnstcw
pushf
call
gs
aam
pop
outs
cwde
jae
imul
fiadd
dec
push
or
or
cmp
sbb
ja
and
add
adc
push
mov
leave
or
push
mov
mov
jne
aam
cmp
push
cdq
fstp
pop
inc
jne
out
retf
mov
inc
and
inc
add
push
inc
cmp
sbb
add
mov
cmp
rcl
mov
fbld
pop
xchg
cmp
ins
movs
jle
(bad)
rcr
out
pop
ds
rcl
and
push
hlt
fwait
sub
fisubr
aam
push
or
mov
outs
mov
cmps
movs
inc
ss
movs
ins
addr16
cmps
mov
pop
and
jle
iret
jns
int3
retf
ins
ins
add
je
movs
sbb
adc
aaa
sub
add
push
faddp
out
call
jle
scas
and
data16
mov
adc
retf
bound
jne
call
push
push
arpl
and
jmp
sub
jmp
sbb
sbb
add
mov
sbb
sbb
push
sar
xor
sub
xchg
push
xchg
push
test
or
pop
repz
mov
mov
sub
sahf
xchg
add
dec
pop
fidivr
xor
push
jp
inc
pop
cmp
ss
aam
sub
sub
cdq
inc
nop
aam
jl
xchg
aaa
ror
inc
add
mov
outs
and
daa
(bad)
imul
cmp
movs
jo
xchg
sahf
and
or
imul
fcmovu
mov
pop
ret
fiadd
push
mov
retf
xchg
test
ror
in
add
mov
ds
jge
out
mov
xchg
inc
mov
icebp
pushf
movs
xor
and
sbb
jmp
es
jg
das
xlat
push
or
dec
mov
fmul
push
pop
and
mov
nop
cmp
cli
cld
mov
and
sar
(bad)
lahf
pop
add
ret
inc
xor
push
lods
(bad)
and
aas
(bad)
(bad)
por
std
int3
ins
adc
imul
call
icebp
lahf
dec
mov
aas
call
or
movs
aaa
push
ds
sbb
imul
sbb
dec
gs
imul
movs
or
push
sub
dec
arpl
and
sbb
bound
cli
lahf
pop
inc
scas
or
cmp
sbb
ret
icebp
rcr
out
pop
pop
cmp
fimul
ficomp
repnz
test
add
mov
scas
lahf
mov
icebp
cmp
daa
jo
xor
xchg
xlat
adc
adc
imul
ret
mov
dec
ja
adc
add
popa
sub
xor
sub
add
pop
push
pusha
mov
xor
aas
push
call
les
adc
and
add
out
nop
aas
push
sub
jae
push
retf
out
fucomi
repz
js
ror
in
mov
out
jae
push
fcomp
aas
paddd
out
cwde
or
call
mov
sbb
mov
ret
sub
adc
ss
push
xor
mov
push
jns
pop
mov
dec
icebp
or
jl
mov
sub
imul
in
dec
sbb
clc
aas
add
dec
outs
aad
adc
adc
scas
test
int3
nop
jmp
ror
cmp
cmp
mov
xor
js
adc
inc
ret
lods
scas
adc
mov
stos
pusha
and
push
push
mov
adc
stc
sbb
clc
push
push
out
mov
ret
das
test
or
pop
mov
mov
(bad)
push
adc
sub
iret
cld
sbb
enter
mov
mov
lahf
pop
pop
es
in
fadd
rcl
rcl
cmps
das
xchg
dec
jnp
sbb
push
or
fimul
mov
frstor
test
cmp
inc
or
imul
aaa
cdq
pop
inc
leave
cli
jp
nop
cmp
inc
movs
mov
xchg
test
(bad)
cmp
mov
sbb
cli
mov
fcmovb
enter
lock
pusha
mov
cmp
cmp
into
outs
cli
and
and
int3
loope
in
sub
dec
arpl
and
enter
mov
adc
into
add
jmp
adc
pop
xchg
in
lock
rcr
rol
mov
add
fidivr
mov
fst
xchg
push
out
pop
enter
sbb
xor
icebp
mov
shl
pop
push
jb
add
das
popf
dec
sbb
fcmovnbe
xchg
movs
and
(bad)
mov
dec
adc
ins
call
ins
(bad)
push
xor
in
jmp
and
lds
jge
sub
popf
jnp
xor
inc
aad
xor
pop
add
xchg
cmp
inc
adc
mov
inc
xchg
cwde
or
shl
xchg
dec
or
pop
lds
fldcw
lds
jns
es
mov
mov
fisub
xchg
sahf
iret
fsub
push
cs
inc
xchg
imul
int
push
mov
or
test
adc
stos
in
movs
pop
mov
or
add
jmp
fistp
and
and
adc
inc
xchg
(bad)
cmp
out
mov
and
in
or
xor
push
add
not
rol
mov
sub
mov
and
not
inc
pushf
test
or
in
fstp
add
inc
es
enter
xchg
scas
mov
dec
mov
sbb
add
pop
mov
inc
push
(bad)
je
dec
jmp
mov
and
clc
xchg
mov
push
pop
add
adc
leave
inc
test
or
js
retf
fimul
push
adc
mov
int
inc
jmp
jmp
loope
mov
push
mov
addr16
xor
sub
sub
(bad)
in
test
ror
(bad)
mov
add
lods
jmp
int3
std
sbb
adc
in
pop
mov
and
in
inc
setg
sti
mov
retf
call
fwait
js
outs
les
jle
push
ss
push
fild
call
adc
loope
dec
push
sub
add
imul
jle
pop
les
std
inc
xchg
mov
aam
lods
sbb
jge
in
in
mov
(bad)
sub
add
js
mov
ja
adc
mov
xchg
and
out
into
push
movs
ja
pusha
mov
xchg
stos
sti
mov
pop
push
sti
lods
daa
mov
inc
ror
fisubr
bound
dec
aam
test
jb
call
retf
xchg
xor
mov
xor
fwait
out
je
repz
and
in
pop
test
movs
ja
or
movs
mov
inc
cs
cmp
(bad)
loope
xchg
movs
inc
mov
inc
jbe
xchg
mov
mov
std
push
popf
stc
adc
mov
rcl
dec
mov
jne
mov
jns
hlt
lods
aam
push
add
gs
icebp
xchg
cmps
xchg
mov
mov
or
lds
jns
mov
ret
pop
movs
es
in
stos
mov
xchg
movs
xchg
cmp
inc
adc
inc
idiv
mov
push
lock
(bad)
push
pop
popf
jns
ss
(bad)
jbe
add
add
pop
mov
mov
stos
cld
jo
jbe
sbb
sbb
imul
shl
xor
jge
dec
mov
jno
add
out
mov
or
nop
xor
dec
cmc
ret
jmp
mov
out
adc
fmulp
lahf
int3
jmp
cmps
or
mov
sti
sbb
sub
in
call
movs
out
push
mov
ret
outs
mov
mov
out
xchg
mov
adc
mov
jl
push
lods
sahf
in
push
mov
mov
jae
mul
(bad)
inc
push
loop
stos
aas
mov
mov
mov
xchg
sbb
ss
xchg
movs
clc
or
bound
scas
mov
aas
shr
xor
or
sti
sub
mov
sub
je
dec
xchg
jg
idiv
mov
sub
inc
lods
js
in
pop
ins
dec
sar
cmp
xor
cmp
jbe
pop
and
sbb
and
mov
pop
dec
add
add
jle
fld
fiadd
mov
sbb
stc
mov
out
cmp
push
pop
sbb
jg
out
xlat
cmps
push
push
push
and
mov
je
ficom
shl
push
cmp
call
mov
xchg
inc
xchg
xchg
mov
jle
ficomp
rcr
lahf
movs
loop
test
inc
(bad)
fist
outs
imul
jo
pop
popa
jmp
int
mov
inc
movs
fsub
xor
mov
ins
and
in
push
mov
test
pop
sub
cmp
jg
ss
push
repz
cmp
adc
inc
sbb
imul
pop
xor
mov
add
pusha
add
scas
movs
jmp
add
inc
lds
mov
pop
mov
arpl
or
mov
retf
mov
cmp
sahf
popf
fsub
fstp
mov
imul
add
pushf
cmc
xchg
rol
mov
les
or
dec
add
mov
je
mov
or
xor
or
add
jne
push
push
sbb
out
adc
and
xchg
xchg
mov
xchg
not
pusha
adc
cs
jecxz
jmp
test
shl
not
fnsave
xor
lods
lock
and
jg
push
jo
ffreep
(bad)
sub
jae
jbe
scas
in
pop
es
or
sbb
xor
fcomp
jb
adc
xor
popa
loope
mov
and
mov
(bad)
or
pop
into
push
xlat
push
icebp
repz
xor
(bad)
popa
out
aad
mov
call
test
cmp
fadd
pop
inc
or
mov
jle
xlat
sbb
adc
push
pop
hlt
jno
cmp
iret
cmp
aam
enter
sbb
jmp
lahf
or
mov
popa
inc
mov
and
nop
cwde
fcmovu
sub
(bad)
cmp
dec
push
mov
jno
enter
fbstp
sbb
mov
repnz
pop
popa
mov
cdq
test
dec
inc
cmp
inc
dec
mov
or
test
es
add
fwait
jno
loopne
js
jno
adc
cmp
inc
and
popf
jo
sar
int
js
shl
push
ins
and
add
(bad)
dec
pop
daa
xor
jmp
pusha
pop
mov
fisub
jns
hlt
dec
mov
repnz
cmp
adc
aad
stos
mov
pop
mov
pusha
jecxz
jmp
pop
ins
out
inc
xchg
dec
jnp
js
ficom
or
int
and
xor
dec
ror
pop
dec
js
xchg
sub
pop
stc
mov
sbb
retf
xchg
cmp
int
xchg
add
aaa
inc
cmp
test
pop
jno
psubw
out
cli
(bad)
or
and
jmp
out
sub
xor
pushf
imul
call
xchg
and
sbb
lea
sub
or
sub
sti
data16
xchg
and
(bad)
cmp
into
mov
xor
je
sbb
add
(bad)
xor
adc
add
xchg
les
dec
ss
lods
(bad)
mov
cs
jmp
gs
xor
enter
movs
lds
in
push
mov
jmp
mov
nop
rcr
jbe
popa
dec
fidiv
adc
rcl
or
ficom
(bad)
mov
jb
pusha
cmp
bound
cmps
test
mov
mov
dec
jbe
loope
out
lahf
ss
fmul
xchg
jg
test
mov
lods
test
xchg
adc
mov
dec
inc
addr16
dec
add
xor
adc
sbb
xlat
popa
repnz
xor
fsub
lds
sub
shr
fdiv
rcl
outs
iret
push
cmp
cmp
push
cmp
adc
je
movs
mov
scas
xor
hlt
xchg
dec
je
lds
xchg
jle
ret
adc
jge
lods
or
sbb
ja
loop
pop
jmp
xor
sub
mov
pop
add
loope
add
adc
cmp
pop
out
push
popa
daa
mov
outs
jg
push
add
test
cli
push
xchg
sti
xlat
or
dec
(bad)
not
cmp
cmps
out
adc
test
mov
shl
test
cmp
inc
fs
pop
adc
sahf
xchg
pop
sbb
xchg
cld
mov
out
lods
and
jecxz
repz
mov
xor
push
call
icebp
and
pop
cmc
adc
retf
jae
xchg
add
(bad)
int3
pop
jp
and
lods
(bad)
das
fst
jno
cmp
jg
fwait
popf
aaa
and
daa
jle
shr
into
in
stos
bound
add
add
movs
and
jnp
and
fdivr
sub
sahf
out
cmp
out
mov
cld
ret
jle
daa
dec
ret
scas
out
sub
ds
push
inc
sbb
cli
jge
je
scas
and
(bad)
add
adc
(bad)
(bad)
lods
or
xor
repnz
mov
lea
call
aaa
stc
cmps
mov
(bad)
shl
lods
and
(bad)
mov
sub
jns
fs
add
mov
(bad)
cli
jae
(bad)
fiadd
mov
add
push
mov
mov
sub
cdq
sbb
icebp
ss
push
mov
and
out
shl
adc
xlat
ret
adc
inc
sbb
mov
adc
inc
dec
int
vpxor
ja
mov
imul
sbb
jns
ret
mov
test
mov
aad
jmp
pop
rol
sahf
sub
xor
jno
mul
dec
movs
dec
and
arpl
sbb
loopne
je
ins
mov
rcr
repz
test
int
inc
jmp
idiv
jo
cmc
lds
push
and
jbe
enter
aaa
xchg
rol
imul
test
mov
ins
mov
pop
ins
add
mov
mov
xchg
push
in
scas
add
mov
xor
jae
xorps
jmp
xor
addr16
mov
repnz
jnp
xor
push
gs
inc
arpl
jg
lods
push
retf
(bad)
fs
xor
add
or
or
imul
mov
sbb
pop
in
retfw
sub
push
jb
and
inc
cmp
mov
xor
stos
mov
jmp
aad
out
mov
out
fld
jg
xchg
xor
daa
jo
in
int
add
sub
(bad)
sbb
setne
out
(bad)
call
jae
or
mov
fisttp
in
aas
mov
fucomi
mov
rcl
call
and
mov
add
gs
or
imul
mov
cld
sub
jmp
push
neg
mov
popa
in
jle
adc
mov
js
sbb
stc
push
push
ja
clc
aas
dec
sbb
hlt
gs
mov
fbld
popa
or
sti
aam
push
(bad)
pop
dec
xlat
jge
sub
xor
or
test
inc
sub
xor
dec
push
pslld
fcmovnbe
adc
mov
adc
mov
daa
jo
cdq
jb
mov
bound
pop
and
adc
jp
(bad)
cmp
inc
ss
movs
test
in
enter
scas
cmp
push
mov
pop
call
dec
mov
sub
loop
loop
sub
jns
loopne
aad
xchg
sub
lock
xchg
inc
js
cli
push
push
adc
ja
inc
je
sub
pop
add
push
jb
ins
jl
xchg
mov
mov
cwde
scas
in
xor
push
or
adc
cmp
xchg
nop
inc
sub
mov
lods
pop
inc
out
in
push
ins
std
mov
dec
push
add
push
adc
mov
cdq
ret
jge
std
mov
jmp
push
adc
aas
inc
loop
pushf
dec
cmp
inc
test
fnstsw
cmp
mov
mov
mov
(bad)
xor
int3
mov
sbb
push
mov
xchg
cmp
mov
cmp
or
(bad)
push
ss
bound
imul
ins
mov
fcomp
test
push
cmp
pusha
sub
add
repnz
pop
lahf
lock
dec
cmps
pusha
fdiv
push
cmp
(bad)
out
xor
mov
inc
and
cmp
inc
adc
(bad)
arpl
dec
dec
jnp
fwait
lods
xlat
push
inc
push
pop
dec
jnp
mov
dec
mov
retf
pop
cmp
dec
lahf
and
pop
hlt
push
xchg
leave
mov
leave
jmp
sar
sahf
cdq
mov
movs
int3
shr
and
out
call
jns
out
fild
cmc
shl
add
inc
ins
sbb
inc
popf
int
movs
movs
pop
sub
push
out
pop
lea
ins
mov
mov
stos
sti
popf
mov
leave
jl
jl
inc
in
outs
sub
add
mov
mov
xor
add
cwde
inc
(bad)
xchg
sub
jle
fbstp
out
cmc
into
push
sub
das
dec
mov
je
in
adc
or
jae
ret
shl
xchg
cmp
pop
sub
movs
adc
and
xchg
frstor
test
and
sub
cmp
cmp
pusha
push
sbb
inc
inc
repnz
jbe
push
inc
adc
jmp
sbb
xchg
adc
cdq
adc
aas
frstor
dec
cmp
frstor
push
xchg
sub
sub
mov
iret
inc
mov
add
adc
cmp
outs
lea
rcl
mov
push
jmp
cmp
movs
add
in
mov
shr
ficomp
ins
stc
imul
neg
xchg
ss
test
mov
test
test
sbb
jmp
pop
scas
imul
inc
cmp
xchg
and
inc
mov
(bad)
aam
test
pusha
lds
add
inc
and
cdq
inc
sbb
imul
mov
pop
add
sbb
lahf
(bad)
adc
adc
xor
push
dec
fstp
cmc
mov
pushf
and
mov
mov
sbb
xor
pop
out
sbb
ret
adc
out
cmp
adc
rcl
or
xor
test
(bad)
(bad)
xchg
and
stos
test
xchg
jge
fidivr
sub
in
xchg
bound
adc
dec
inc
mov
push
pop
jg
lods
sbb
sahf
push
adc
iret
fstp
scas
lods
popa
cmc
pop
inc
pop
(bad)
push
inc
(bad)
mov
dec
test
loop
rcr
xchg
fwait
sub
lds
popa
fisubr
and
lea
std
shl
or
clc
fisttp
lods
popa
and
adc
sbb
dec
xchg
sbb
or
aaa
push
xor
cs
cmp
pushf
clc
mul
add
ss
out
push
sbb
lods
js
push
lods
aad
out
cmp
xchg
jl
ficom
idiv
and
out
ja
pop
clc
pop
push
push
and
cmp
stos
xor
je
stos
and
mov
dec
ins
sbb
js
hlt
and
cmp
fisub
xor
jge
fs
xor
stos
xchg
xchg
mov
(bad)
cmps
retf
push
dec
pop
in
sub
cmp
lea
push
aas
pop
into
adc
rcl
jge
mov
test
adc
mov
push
and
test
xchg
jmp
jg
addr16
(bad)
int
mov
lock
loop
pop
push
push
mov
and
or
xor
adc
mov
out
push
mov
push
les
aam
adc
loopne
leave
xor
ins
sub
sbb
jb
xor
mov
sub
add
mov
outs
pop
add
pop
mov
and
dec
cmps
jns
loop
push
cdq
ds
xchg
outs
mov
fldenv
push
add
inc
ins
pusha
adc
jno
popf
out
popf
in
and
or
mov
imul
pop
or
(bad)
pop
adc
push
xchg
iret
pop
cs
xor
jle
div
cmp
test
dec
mov
xchg
mov
fdivr
daa
pop
(bad)
imul
lock
push
aas
pop
mul
lahf
inc
in
fadd
inc
out
sub
lea
fmul
call
or
jp
xchg
ins
clc
shl
cmp
cli
js
or
retf
out
jl
adc
neg
ror
jp
add
jae
inc
sbb
lds
xor
cmp
cmps
aad
or
mov
mov
push
js
in
mov
and
js
lods
xchg
les
jb
aaa
add
cmp
hlt
movs
fidiv
cmp
xchg
(bad)
out
jecxz
pop
loope
mov
inc
pop
sbb
jns
leave
sub
(bad)
das
out
xor
cmps
cmps
mov
xor
xchg
call
lods
inc
xor
xchg
test
add
repnz
push
inc
dec
xor
out
in
jns
push
jne
sub
(bad)
pinsrw
(bad)
or
inc
ffree
mov
jnp
sar
xor
imul
call
out
out
mov
dec
test
sub
test
daa
std
ins
ds
and
cmp
loope
inc
mov
jge
(bad)
mov
mov
add
xchg
sub
pop
inc
ss
push
retf
outs
test
(bad)
in
aas
and
dec
movs
ficomp
pop
dec
mov
out
je
push
xchg
and
push
clc
adc
icebp
pop
push
add
add
in
inc
pop
gs
loope
sbb
inc
push
ja
mov
lods
in
or
mov
shl
cmp
call
and
scas
mov
and
iret
jb
daa
arpl
pop
xchg
push
sbb
xor
mov
xchg
into
ja
(bad)
push
(bad)
loopne
mov
inc
es
call
loopne
jae
and
je
test
push
dec
push
cli
ret
mov
adc
data16
imul
sub
outs
jl
push
jne
jo
pop
les
pop
mov
and
pushf
adc
test
inc
loopne
into
or
sub
mov
call
mov
jno
dec
ret
mov
sbb
pop
popa
icebp
int
mov
mov
jg
mov
add
ins
mov
push
cli
add
jmp
imul
imul
shl
cld
push
loop
and
push
push
pop
dec
lahf
into
xor
or
lods
cs
mov
mov
(bad)
xor
out
push
dec
sbb
dec
cmp
loopne
cmp
loop
push
das
xchg
jb
outs
ja
lahf
jae
daa
dec
sub
push
repnz
cmp
cmp
xchg
lock
neg
adc
mov
and
and
or
and
and
inc
cmp
add
xor
adc
sub
popa
jo
sub
xchg
test
lea
sbb
out
mov
and
cmp
or
aam
mov
pop
dec
xlat
hlt
lock
aas
sti
fsubr
arpl
leave
imul
jo
inc
push
cmp
jb
push
cmp
sub
sbb
or
retf
ins
outs
pop
fisttp
or
pop
hlt
(bad)
xor
dec
jmp
cwde
push
rcl
(bad)
mov
or
inc
cdq
sbb
or
enter
adc
lock
adc
mov
dec
push
(bad)
test
adc
cli
or
pop
test
or
jge
icebp
sti
cmp
and
fwait
xchg
pop
fst
(bad)
mov
les
lock
pop
or
push
push
sbb
mov
lods
cmp
mov
lahf
xchg
iret
fdivr
push
jb
in
imul
cmp
pop
xchg
jg
les
add
out
addr16
mov
xlat
cmp
sub
mov
scas
pop
addr16
inc
push
cs
fcomp
mov
outs
out
lods
mov
sub
jg
mov
popf
mov
or
shr
pop
psllw
popa
pop
jnp
mov
xchg
jg
or
and
cmp
push
loopne
inc
and
cmp
(bad)
mov
mov
cs
pop
jnp
push
dec
mov
xchg
push
jg
adc
inc
pop
clc
cmp
aas
xor
fs
shr
arpl
xchg
dec
iret
fmul
cmp
int3
xchg
mov
inc
and
in
aaa
mov
cmc
int3
mov
into
popf
mov
inc
push
mov
sub
jbe
mov
sub
inc
dec
jno
xor
aas
sbb
adc
jb
in
push
ds
inc
stos
and
out
mov
xlat
vzeroupper
or
pop
and
or
xchg
mov
not
or
(bad)
mov
jecxz
fs
push
xor
sbb
xor
in
sbb
xchg
mov
dec
mov
lods
push
stc
xor
xor
js
xor
pop
inc
mov
sub
fidivr
inc
push
leave
out
mov
mov
call
bswap
push
mov
ret
inc
bound
(bad)
mov
test
or
xchg
repnz
retf
push
adc
fsub
out
or
or
sbb
jne
imul
inc
xchg
mov
mov
jl
out
mov
mov
clc
push
cmc
in
sub
jle
sbb
sub
dec
outs
scas
ret
mov
sub
pop
cmovno
pop
mov
fwait
sbb
xchg
arpl
adc
inc
mov
sti
pop
fdiv
cmp
mov
(bad)
pop
es
and
inc
pop
fdiv
test
adc
adc
out
xor
inc
mov
cmp
daa
lods
pop
adc
jb
in
and
ds
leave
sbb
pop
sbb
call
fmul
inc
lahf
sub
cmps
xor
and
test
das
iret
jg
leave
push
test
or
aam
scas
pop
rcr
or
jmp
sbb
popf
sub
out
popa
rcr
dec
(bad)
sbb
std
inc
dec
inc
out
shl
fild
out
inc
pop
loope
mov
dec
sbb
sbb
ret
or
dec
in
in
mul
xor
addr16
stos
les
dec
and
or
loope
leave
adc
inc
sub
sbb
mov
out
jne
call
or
mov
mov
arpl
sbb
repnz
sub
dec
add
fild
les
sub
push
outs
mov
test
and
(bad)
mov
ret
mov
not
out
dec
xor
xchg
pop
mov
push
sbb
scas
dec
neg
sti
pop
(bad)
scas
sub
out
(bad)
push
scas
int3
inc
into
sub
test
jl
cmp
mov
fdivr
xlat
cmp
jge
mov
and
lods
dec
test
jno
cmp
inc
jae
cmp
imul
and
loop
add
popa
shl
inc
push
push
xchg
push
ins
sbb
mov
addr16
daa
fist
cs
(bad)
cmps
imul
ds
or
icebp
push
dec
jl
inc
jno
ins
ror
mov
icebp
lea
xchg
arpl
loop
push
xor
setbe
dec
push
lods
dec
xchg
and
stos
repz
loope
cld
mov
mov
in
mov
push
or
dec
outs
loopne
mov
sbb
into
jg
jecxz
adc
(bad)
cld
mov
jns
pop
jae
add
dec
xchg
and
sar
enter
and
fcomp
mov
xchg
xchg
mov
inc
(bad)
into
rol
iret
shl
ja
fist
xchg
push
xor
push
add
push
lock
adc
icebp
das
stos
lods
xor
stc
adc
push
jg
out
add
sub
mov
mov
mov
inc
cmp
sti
es
or
ficom
add
or
test
pop
bound
mov
xchg
and
pop
lss
mov
fiadd
or
sar
mov
daa
add
inc
jae
fcmovu
les
jo
(bad)
mov
es
in
(bad)
dec
adc
xchg
mov
add
xlat
aam
lods
rcl
int3
and
ja
(bad)
dec
and
cmp
pop
add
push
ffreep
adc
sbb
cdq
mov
and
cwde
and
ja
xchg
in
cwde
xor
xor
jmp
add
(bad)
mov
push
jae
(bad)
pusha
aaa
push
sbb
loope
(bad)
shl
test
mov
cmps
imul
adc
adc
dec
xor
sbb
cld
sub
xor
fisubr
push
mov
jnp
dec
jmp
(bad)
pop
popa
push
outs
and
pusha
les
push
in
stos
sti
pop
push
mov
fs
or
cli
outs
(bad)
(bad)
stos
sar
lock
dec
cmp
fisub
lock
push
push
mov
push
mov
fadd
jge
fldcw
js
test
pop
rol
stos
adc
jo
dec
xor
out
or
jg
fstp
jo
fwait
xor
idiv
sti
mov
inc
push
dec
popa
inc
push
aam
movs
in
adc
dec
(bad)
or
es
jo
test
fisubr
mov
daa
sbb
call
sub
dec
sar
cmp
xchg
xchg
dec
mov
inc
(bad)
iret
repnz
push
push
clc
sbb
mov
xchg
cmps
xor
push
jge
into
push
test
js
mov
adc
lea
mov
adc
hlt
dec
into
in
lea
stos
sbb
retf
cwde
(bad)
(bad)
jmp
mov
pop
mov
vunpcklps
mov
ins
ret
sub
adc
ret
(bad)
das
pop
pop
add
pop
ins
ret
fimul
rcl
movs
pop
sbb
bound
push
repnz
or
sbb
sahf
or
fsub
fwait
push
push
rol
jg
outs
mov
rcl
xor
scas
das
mov
imul
nop
sahf
jne
clc
cld
xchg
mov
add
scas
push
add
ins
int
push
inc
mov
sbb
cmps
out
jl
push
and
jge
add
cwde
push
(bad)
outs
pushf
inc
xchg
xchg
push
ret
adc
(bad)
xor
xchg
mov
sub
out
jl
and
mov
sbb
push
jbe
inc
mov
and
sub
test
out
ja
dec
xchg
cdq
imul
(bad)
int
add
jnp
cmp
sub
xchg
push
mov
xor
outs
ja
push
imul
shl
ret
mov
mov
adc
mov
out
dec
arpl
(bad)
push
icebp
into
add
imul
mov
js
push
sbb
frstor
dec
xchg
mov
jns
ret
loop
mov
dec
mov
cmp
sbb
sbb
call
loopne
mov
lea
xchg
pop
arpl
xchg
das
jae
stos
movs
dec
popa
pop
add
xchg
leave
scas
xchg
add
xor
mov
mov
lahf
sbb
(bad)
aas
jnp
shl
mov
mov
js
xor
sbb
dec
sahf
out
cmp
cwde
mov
popa
scas
ror
jmp
xor
mov
mov
jno
out
cmp
ja
mov
inc
xor
jecxz
pop
push
pushf
mov
mov
cwde
ins
mov
sub
push
cld
push
xchg
mov
mov
xor
int3
scas
repz
repnz
retf
xchg
jecxz
and
jnp
in
pop
scas
pop
aam
rcl
arpl
jmp
mov
jae
lahf
test
das
ror
out
or
and
push
jmp
cwde
int
add
into
xchg
fbstp
mov
pop
stos
popa
mov
xchg
inc
push
fwait
cmp
cmps
scas
mov
cmc
push
mov
add
mov
shr
cs
enter
ret
cmp
pop
xchg
in
icebp
mov
sub
stc
cmp
xchg
add
call
push
cmps
inc
stos
cli
popa
fwait
out
pushw
scas
gs
and
inc
and
ret
xchg
jno
fsubr
mov
mov
daa
jmp
aaa
sbb
in
and
xchg
or
push
inc
cmp
push
inc
push
mov
xchg
inc
in
pop
test
inc
lds
add
daa
loopne
sbb
lock
in
cwde
mov
mov
mov
test
sbb
push
lods
cs
movaps
call
icebp
mov
adc
jae
mov
add
pop
push
mov
push
jne
dec
xchg
loop
sti
mov
pusha
cwde
or
jne
sbb
mov
jns
je
arpl
pop
pop
scas
xchg
fild
xlat
mov
rcl
pop
cmps
sbb
mov
aam
or
cmps
leave
bound
clc
xchg
aad
dec
cmp
xor
aaa
pop
fistp
gs
xchg
adc
inc
adc
dec
mov
dec
aas
stos
mov
sbb
dec
cmp
lahf
mov
mov
into
xor
in
mov
js
jge
popf
clc
jmp
clc
retf
call
xor
fwait
xchg
call
and
inc
fisubr
jmp
test
jp
sbb
xchg
outs
mov
mov
cmps
pop
(bad)
sbb
popf
and
sub
lods
jmp
mov
in
push
pop
add
ja
shl
push
es
data16
add
mov
(bad)
stos
jp
ss
jae
cmps
xchg
cs
aaa
xor
sbb
push
mov
and
mov
sbb
retf
cwde
retf
mov
in
das
push
sbb
mov
into
fwait
mul
mov
test
(bad)
test
mov
lahf
inc
sbb
aad
nop
and
pushf
cwde
mov
adc
mov
cmps
mov
jb
test
jmp
movaps
and
fstp
add
in
sbb
out
mov
mov
out
mov
jge
xlat
push
fcmovnu
cli
sbb
pinsrw
js
add
test
adc
adc
test
pop
pop
jge
mov
mov
sub
dec
jno
jmp
add
mov
fmul
xor
xor
cmp
push
repz
or
mov
jae
js
aad
test
or
xchg
test
xchg
mov
fs
mov
xor
inc
jno
add
iret
dec
jb
or
les
pop
and
mov
mov
iret
lds
adc
inc
push
jle
mov
jp
push
xlat
pop
and
ins
add
retf
sub
xor
jp
jnp
pushf
dec
stos
rcr
push
nop
int3
shl
sub
dec
leave
sub
aam
stos
push
test
pop
(bad)
mov
sub
aad
inc
pop
xchg
movs
cmp
push
jb
inc
cli
ss
mov
sub
dec
or
sbb
push
push
add
leave
ins
push
jle
inc
and
pop
aad
retf
stos
enter
iret
inc
cdq
imul
lods
retf
mov
sbb
daa
xor
(bad)
and
pop
and
test
or
adc
and
mov
inc
out
pop
sbb
inc
pop
aam
dec
fidivr
imul
adc
pop
mov
adc
push
sbb
add
nop
cmp
bnd
xor
xchg
pop
mov
call
imul
rcl
and
or
vmwrite
jns
jmp
dec
pop
je
test
scas
cmp
arpl
outs
push
ret
inc
rsm
add
loope
or
jne
outs
jmp
fs
adc
mov
sbb
sbb
pusha
inc
push
mov
retf
int3
pop
mov
(bad)
jecxz
push
pop
test
cdq
data16
jbe
(bad)
(bad)
jge
cld
shl
sub
cli
xchg
jmp
push
popa
sub
sbb
sbb
cli
jecxz
fxch
ss
mov
int3
jp
mov
jg
stc
and
pop
or
cmp
lods
mov
call
sub
enter
popf
mov
sbb
and
loope
push
pop
mov
imul
rcl
mov
mov
adc
sbb
scas
paddusb
dec
cmp
sbb
cwde
add
aad
mov
dec
pushf
scas
aas
push
cmp
jmp
cmp
lea
sar
mov
mov
outs
(bad)
xor
loope
and
mov
dec
mov
sbb
xlat
and
or
aaa
and
jmp
aaa
out
fdiv
push
enter
and
inc
je
pusha
push
shl
xchg
xor
xor
add
jmp
cmp
scas
cmps
sbb
test
in
retf
mov
sub
scas
push
adc
dec
add
imul
mov
adc
jb
loope
add
xchg
sbb
sar
mov
jge
sbb
cld
xchg
lods
mov
pop
or
inc
std
inc
sti
push
ds
add
sub
sub
jnp
sbb
mov
dec
adc
or
mov
jecxz
sbb
inc
(bad)
sbb
ja
or
cmp
xchg
sbb
inc
cmp
mov
pop
les
bound
bound
cdq
loop
add
sub
stos
add
inc
(bad)
sti
or
imul
loope
sbb
inc
adc
test
loop
(bad)
inc
jg
push
fcom
xchg
in
mov
loopne
fidivr
fs
dec
dec
nop
mov
xchg
mov
and
stos
arpl
push
jbe
jl
push
ins
fadd
adc
sub
fisttp
(bad)
or
pop
dec
call
std
sub
neg
and
sbb
call
fcmove
inc
pop
test
(bad)
mov
jmp
adc
loope
xchg
outs
and
ds
mov
mov
jb
dec
(bad)
sbb
cs
jo
js
dec
pop
or
(bad)
jmp
sub
pop
ins
xchg
mov
xchg
outs
test
sub
mov
adc
int3
sbb
or
mov
out
call
add
fst
(bad)
movs
dec
xor
sbb
cmps
fsubr
dec
jg
out
push
pushf
iret
jbe
data16
cmp
mov
out
and
add
retf
sbb
test
ss
lahf
cmp
mov
pop
jno
retf
inc
fwait
jns
inc
dec
and
or
sub
out
out
mov
leave
xor
jmp
cmp
addr16
fisttp
push
pushf
jmp
jmp
fisub
inc
sub
mov
fbld
in
push
adc
xor
add
jmp
sub
adc
mov
jg
mov
cmp
sbb
adc
test
cmps
mov
cmp
adc
in
xchg
jmp
add
addr16
mov
mov
mov
mov
jge
cmps
inc
mov
xor
cli
mov
dec
pop
jg
das
and
mov
mov
sbb
push
mov
xor
sti
mov
psubq
pop
dec
pop
pop
push
sbb
and
repnz
add
jmp
inc
test
add
adc
or
jae
and
mov
dec
daa
icebp
test
ret
loope
imul
mov
ja
cmp
and
and
pop
pop
rcl
mov
dec
pop
int
clc
in
sbb
dec
movs
and
clc
add
cli
cmp
xor
nop
into
jne
mov
push
sti
push
scas
dec
adc
xchg
sbb
out
or
sbb
xchg
mov
lock
adc
out
push
or
fdivp
jmp
sub
adc
fidivr
pop
mov
inc
stos
and
sahf
in
mov
repz
test
fs
out
add
xchg
daa
or
ds
loope
sar
mov
movs
fsub
xchg
mov
repz
in
xchg
out
test
(bad)
adc
dec
inc
pushf
mov
cmp
bound
ror
xchg
pop
test
dec
sbb
out
shr
aam
pop
mov
sub
sbb
sub
shl
sti
loopne
xor
jge
cs
ins
adc
push
int3
leave
mov
call
cmp
xchg
addr16
in
xchg
push
outs
enter
call
cmp
xchg
out
add
push
lods
and
sub
or
in
push
stc
ins
ins
test
or
mov
dec
popf
test
fwait
jl
mov
and
ret
xlat
jl
or
sbb
sbb
xor
frstor
cmp
jns
mov
mov
pop
adc
add
fucomi
jg
jnp
leave
shl
jne
(bad)
push
iret
ret
jo
push
push
inc
jae
dec
es
xor
lea
jg
inc
jg
and
out
fst
test
inc
enter
out
xchg
pop
add
dec
ins
push
mov
aas
int3
xor
gs
aam
add
or
xchg
dec
jg
adc
in
lea
arpl
scas
std
xchg
ret
rcl
cmp
into
sub
daa
jmp
shl
mov
pop
xor
les
retf
xor
fsubr
out
mov
and
and
fnstcw
imul
pop
and
xchg
clc
inc
push
sub
repz
dec
push
sbb
sub
or
stos
mov
mov
hlt
imul
push
jl
js
jae
imul
or
retf
adc
nop
jmp
pop
sti
jo
mov
cmp
jo
cmp
cld
sub
mov
inc
mov
popf
int
push
jg
adc
mov
and
fsub
(bad)
or
ins
fild
ins
retf
cwde
sbb
fisttp
jbe
push
std
cmp
sbb
lods
(bad)
pop
fldcw
jmp
ds
clc
adc
nop
xor
lea
das
(bad)
cmp
pop
dec
bound
arpl
je
sbb
mov
xchg
es
xlat
sar
fwait
cmp
imul
in
ja
mov
gs
pop
(bad)
hlt
cwde
push
mov
dec
mov
jnp
cmp
jmp
mov
inc
pop
sub
or
push
aaa
ret
cmp
add
inc
pop
or
mov
retf
mov
(bad)
ins
std
cmps
ficomp
or
jecxz
xor
mov
rol
inc
pop
out
and
sbb
mov
test
dec
adc
ret
pop
push
clc
inc
in
aaa
pop
test
sahf
xor
outs
in
shr
inc
mov
pop
int3
adc
data16
addr16
xchg
fadd
stos
mov
jae
push
mov
retf
(bad)
adc
ds
repnz
scas
mul
pop
(bad)
add
push
sub
jecxz
or
rcr
push
outs
popf
fild
das
jns
or
clc
mov
add
jbe
pop
shl
cmp
mov
sbb
pop
pop
(bad)
cmp
aas
dec
scas
sar
jo
xlat
jmp
dec
add
mul
test
sti
rcl
test
sub
movs
daa
or
dec
cmp
pushf
jecxz
jne
adc
dec
fcom
push
fidiv
iret
mov
aam
out
test
dec
js
cmp
xor
arpl
jae
shr
dec
bound
cmp
arpl
rcr
sub
rcr
hlt
and
shl
ror
icebp
(bad)
mov
sar
inc
mov
dec
int
ss
or
add
jle
dec
out
mov
ret
add
aam
cwde
mov
ss
clc
or
in
dec
inc
jp
das
mov
imul
xchg
into
repnz
ss
arpl
jae
mov
push
mov
(bad)
cld
mov
jp
cmc
test
mov
add
xchg
repz
ror
mov
popf
mov
mov
sbb
jb
fcmovb
ret
icebp
out
add
call
mov
in
jo
sub
xchg
cmps
mov
jp
aas
and
push
mov
mov
movnti
cs
movs
(bad)
ins
(bad)
mul
push
fwait
aam
mov
mov
and
dec
jne
or
jne
scas
movs
push
pop
fcom
stc
mov
or
push
shl
dec
xchg
dec
add
or
xchg
out
cmp
pop
push
jb
or
cmp
mov
in
or
cdq
jae
out
mov
jns
push
shr
jle
add
cli
std
sbb
outs
fsubr
(bad)
cmp
arpl
pusha
sbb
(bad)
mov
lock
outs
es
call
aaa
stos
sbb
in
inc
sahf
xchg
pop
mov
test
sub
mov
call
mov
idiv
inc
mov
push
js
or
ins
jmp
(bad)
push
popf
and
dec
mov
sbb
pop
sahf
xchg
xor
sub
sub
daa
fwait
mov
enter
into
ror
mov
jae
push
sub
clc
xor
or
adc
pop
mov
push
mov
or
adc
(bad)
mov
or
clc
jecxz
sbb
and
push
pop
or
clc
je
mov
mov
sti
xchg
xchg
push
cmc
inc
add
jb
(bad)
xchg
sbb
cmp
sbb
(bad)
lods
fs
ins
jo
sahf
xor
or
test
and
push
movs
jl
jae
mov
adc
ror
add
add
fisubr
fisttp
pop
jg
es
div
dec
xchg
sbb
ins
sbb
pop
leave
scas
jns
push
sbb
xor
fcmovnb
jmp
scas
xchg
add
sub
xchg
repnz
mov
mov
sub
dec
sbb
gs
push
push
outs
adc
push
pop
cwde
jae
add
pop
lahf
(bad)
jmp
adc
add
add
mov
fs
pop
clc
jns
pop
sbb
or
inc
and
neg
rol
cmps
clc
sub
adc
jmp
pop
push
mov
push
imul
int
in
pop
and
rcl
xchg
cmp
scas
shr
std
sbb
aas
lea
push
pop
adc
retf
cmp
popf
ret
jle
xchg
inc
jge
imul
leave
daa
in
dec
pop
fwait
and
fwait
stos
mov
(bad)
mov
sbb
nop
or
loope
mov
pop
ror
sbb
into
or
js
adc
call
test
pop
cli
lea
pop
cmp
inc
lods
mov
(bad)
dec
sbb
shr
sub
sar
imul
test
cmps
(bad)
div
div
scas
rcr
adc
mov
sbb
sub
fcom
ins
scas
in
pop
test
les
fistp
inc
out
mov
popa
into
stos
out
ror
add
cmc
xchg
mov
pop
xor
call
cdq
fistp
jge
and
mov
ss
in
inc
mov
add
idiv
xchg
push
xchg
aaa
leave
pusha
stc
pop
cmp
mov
mov
push
mov
sub
aas
mov
jecxz
jbe
mov
fld
retf
mov
or
ficomp
ss
les
nop
xchg
push
icebp
cli
mov
xchg
mov
cmp
rol
movs
test
std
ins
pop
div
ins
jmp
ss
mov
sub
(bad)
lock
sub
adc
leave
cmp
mov
cmp
jl
pop
int
xlat
sar
cs
pop
add
arpl
sbb
in
imul
into
scas
cli
ins
push
clc
mov
cmps
sbb
sub
pop
push
dec
cs
push
mov
mov
and
cmp
mov
dec
dec
and
dec
test
out
mov
push
mov
stc
(bad)
push
sub
je
mov
and
add
mov
sub
push
jg
sbb
cld
rcr
imul
call
inc
test
sub
xchg
js
dec
and
pop
pop
xchg
shl
ret
jg
jp
jg
xchg
loope
out
das
push
int3
mov
pop
cmps
(bad)
pop
and
pop
data16
cli
sub
and
mov
dec
addr16
in
sbb
mov
les
neg
or
jo
cmp
test
cmp
(bad)
je
movs
clc
lods
cwde
aad
and
pop
xor
sbb
adc
jo
pop
arpl
jae
adc
sub
in
clc
arpl
mov
jmp
dec
inc
jmp
cdq
pop
cmps
cmps
xchg
lods
pop
jae
into
dec
aad
pusha
rol
pop
out
jmp
xchg
mov
jbe
sub
(bad)
arpl
inc
jl
xchg
jl
push
inc
mov
fwait
ja
ins
loop
lea
out
dec
mov
scas
mov
sub
es
xchg
aad
sub
test
xchg
iret
and
mov
in
mov
scas
sbb
mov
ins
jle
es
out
xor
jo
stc
or
sbb
jmp
or
mov
cmp
add
in
imul
ror
pop
aaa
lea
add
test
adc
scas
test
stos
xchg
mov
fdivr
fdivr
mov
cdq
(bad)
xchg
(bad)
push
gs
push
adc
fscale
iret
stos
lds
test
out
call
push
or
enter
push
push
xchg
not
mov
dec
stos
outs
dec
outs
jne
fcmovnu
int
mov
sub
mov
mov
push
xor
cmps
jg
mov
or
call
in
adc
int3
out
fimul
out
punpcklbw
jne
scas
or
mov
sar
xchg
cdq
sar
add
cmp
inc
pop
cmc
test
inc
fwait
and
xor
in
push
pop
sub
stos
in
ficom
push
je
mov
iret
mov
mov
and
mov
push
xor
fisttp
imul
pushf
(bad)
xchg
scas
ret
fdiv
sti
dec
adc
push
xor
lods
xlat
xor
mov
or
cs
outs
sub
dec
pushf
or
mov
jnp
mov
pusha
rcr
and
dec
rep
jno
cmp
jl
cmps
add
aas
push
pop
push
movs
inc
mov
xor
inc
cmc
lahf
cmps
outs
fwait
ss
cmp
lea
jne
ds
sbb
repz
jp
cmp
fs
scas
in
dec
call
js
push
loop
push
add
stos
outs
mov
call
sbb
pop
and
call
scas
or
xor
inc
call
lods
cmp
cmovs
jmp
mov
add
push
or
xchg
mov
xchg
mov
adc
jbe
push
sub
and
sbb
xlat
hlt
jb
or
adc
pop
das
cmps
pushf
xchg
pop
push
and
(bad)
mov
fidivr
mov
mov
nop
jp
pop
std
dec
inc
sub
add
int
jo
mov
dec
push
jne
aaa
les
pop
(bad)
push
call
sbb
or
xchg
movs
xor
push
jo
pop
cmp
pop
jo
xlat
add
test
ins
arpl
(bad)
fisttp
dec
add
cmp
pop
sysret
cmp
repz
sahf
dec
lock
inc
jnp
xchg
in
sub
cdq
movs
ret
push
dec
mov
pop
xlat
outs
mov
cmps
rcl
add
xchg
cmp
dec
cdq
out
in
lods
or
mov
or
icebp
and
loopne
push
pop
icebp
es
dec
xor
jge
jle
xor
test
fldenv
pop
ins
cmp
popa
loope
add
inc
fdivp
aaa
dec
pop
out
cmc
pushf
popf
dec
fisub
enter
dec
test
stc
shl
adc
jp
inc
and
add
mov
das
pushf
dec
dec
lahf
inc
mov
push
mov
les
sbb
in
out
aam
or
inc
stos
pop
aad
mov
stos
push
push
xor
in
mov
icebp
adc
pop
mov
cs
xchg
sub
cmp
and
lods
pop
shl
sbb
and
push
loopne
lock
pop
adc
stos
div
(bad)
mov
out
std
xchg
pop
push
int3
and
pop
mov
lods
aam
dec
cmp
jo
or
je
enter
outs
dec
(bad)
xor
cwde
(bad)
sbb
movs
test
pop
popf
xchg
sub
push
cmc
pushf
push
mov
adc
and
push
and
ficomp
sub
sbb
mov
mov
retf
sbb
mov
test
gs
out
pop
repz
in
push
pop
out
mov
nop
out
loope
aas
aaa
xchg
xor
jl
adc
xchg
dec
add
mov
cdq
ficomp
cmp
pop
mov
daa
call
sti
xchg
dec
push
leave
pop
adc
lds
jno
call
ds
out
ret
dec
sub
das
fs
mov
inc
pop
ja
xchg
and
jbe
cmc
in
data16
ret
sbb
popf
inc
jns
in
rcl
pop
inc
adc
sub
mov
aam
inc
sbb
xor
clc
jae
sahf
scas
icebp
or
xor
inc
pop
out
and
mov
cmp
and
fnsave
mov
nop
(bad)
mov
xchg
sub
fild
adc
aad
icebp
cmc
pusha
jg
jae
clc
pop
es
and
mov
mov
jns
in
jg
pop
(bad)
push
jle
in
(bad)
or
fld
scas
push
out
scas
dec
jo
sbb
mov
adc
pop
stc
mov
sbb
push
arpl
cmp
adc
call
add
mov
out
retf
cmp
cmc
in
retf
pop
pop
pop
mov
inc
xchg
into
and
scas
out
leave
inc
sub
mov
mov
dec
mov
fs
adc
ss
stc
lock
and
les
add
adc
cmc
mov
nop
aad
inc
dec
je
and
pop
popa
int3
int3
enter
adc
xchg
inc
or
(bad)
jecxz
call
push
imul
mov
cmp
shr
ins
rol
sar
adc
mov
mov
in
(bad)
pop
loope
retf
jecxz
and
xor
je
push
dec
add
mov
shl
mov
loop
call
out
cmp
mov
add
cmp
cmp
fdiv
imul
stos
fiadd
sub
inc
lea
in
push
mov
movs
add
add
sbb
leave
mov
add
lds
xlat
lock
int
test
push
das
inc
cld
mov
mov
rol
int
mov
push
and
lods
iret
pop
add
mov
inc
xchg
sub
lods
(bad)
out
pop
shr
ja
mov
mov
ret
les
mov
adc
inc
inc
adc
aam
ss
jne
popf
aam
leave
ret
pop
add
sub
sub
xchg
jne
out
mov
dec
mov
dec
and
and
test
push
movs
(bad)
jl
ds
test
addr16
loopne
(bad)
sub
retf
push
cs
sub
adc
or
or
inc
ret
push
fs
inc
push
loopne
pop
adc
push
sti
aam
es
ja
mov
lock
rcr
cmp
enter
pop
sar
dec
lahf
pop
xchg
mov
cmp
scas
adc
pop
or
sbb
dec
sbb
test
pushf
xchg
add
xor
test
test
pop
daa
cmp
out
jb
int3
test
int3
cmp
inc
pop
test
xchg
int
add
movs
repnz
cmp
dec
xor
adc
mov
movs
cmp
stos
cmps
or
sbb
cmp
das
gs
jmp
mov
shr
je
sti
adc
dec
jb
pop
out
repz
add
in
mov
or
bound
add
(bad)
mov
jnp
hlt
xor
sahf
push
cmp
mov
cld
mov
ja
cmp
stos
push
inc
test
in
movs
jb
mov
rcl
or
dec
sbb
enter
jmp
sahf
stos
mov
test
jmp
and
ds
push
addr16
push
outs
xchg
ins
rcr
aam
repz
jecxz
dec
adc
cmp
loop
or
inc
aaa
lods
sub
jo
js
or
mov
sbb
(bad)
lock
cmps
aas
rcl
sub
jle
or
or
out
mov
call
pop
add
sbb
(bad)
outs
pop
aad
test
inc
push
add
aaa
loop
dec
pop
push
xor
or
lea
pop
pop
outs
mov
lahf
test
adc
pcmpeqw
(bad)
in
or
mov
inc
sub
jecxz
mov
mov
inc
repz
add
mov
sub
push
xor
push
sub
pop
js
or
arpl
xchg
ror
(bad)
sti
mov
xchg
call
aas
pop
out
sub
pop
xor
in
sub
sub
retf
pusha
mov
sbb
mov
mul
mov
jbe
test
pop
push
push
loope
lahf
enter
xlat
stos
pop
int
arpl
cs
fnstsw
hlt
dec
sub
inc
sahf
int3
mov
outs
cmp
(bad)
xchg
imul
xor
inc
inc
gs
add
repz
test
aad
inc
mov
lahf
inc
mov
cld
loop
imul
sbb
add
push
(bad)
out
into
xor
jbe
(bad)
cmp
dec
jmp
pop
mov
or
aaa
push
jb
rol
in
dec
outs
out
pop
loop
lock
retf
cs
mov
jp
sbb
dec
addr16
mov
in
cmp
loopne
bound
or
add
sub
inc
retf
loopne
pop
cmp
das
out
fmul
popf
nop
ja
dec
aaa
xor
jbe
into
push
xlat
lock
xchg
add
sub
cmc
pop
push
mov
jbe
popf
ds
in
pop
dec
(bad)
fiadd
addr16
sti
cli
dec
imul
lds
daa
les
rcr
xor
mov
stos
mov
jmp
xor
mov
ja
addr16
dec
adc
pop
sbb
pop
repnz
int3
push
and
jg
iret
inc
bound
sub
xor
sbb
cs
xor
sub
loope
push
test
out
sbb
fmul
and
cmp
loop
in
adc
repz
lahf
cdq
cmc
push
das
jmp
mov
dec
push
push
lock
ins
cli
xor
imul
sub
mov
pop
add
inc
es
shl
bound
jne
rcl
ret
lock
and
out
ins
in
int
xor
ins
adc
imul
pop
mov
clc
retf
mov
ins
loopne
mov
push
jnp
out
cdq
(bad)
icebp
mov
sbb
ret
pop
and
sbb
dec
test
fisub
aas
imul
xor
sar
es
out
stos
jmp
call
push
gs
sti
cmp
scas
mov
scas
xchg
mov
(bad)
cmps
scas
lods
into
je
push
jl
mov
gs
xor
call
pop
mov
mov
imul
and
lods
dec
pop
adc
mov
sub
lock
stos
aam
inc
cmp
movs
test
sbb
retf
jecxz
mov
push
mov
js
je
sbb
outs
mov
stos
in
scas
xchg
sub
lods
leave
addr16
int
mov
clc
leave
push
mov
jle
repnz
popf
cmp
pop
in
adc
ja
ins
int
mov
jmp
aaa
sbb
mov
rcr
xchg
mov
out
and
push
xor
cli
pop
dec
xchg
mov
mov
outs
call
cmps
add
jecxz
jmp
mov
mov
lods
inc
xor
pop
clc
mov
lds
mov
mul
js
or
(bad)
repz
bound
jge
cmp
push
mov
imul
(bad)
loope
fmul
cmp
(bad)
pushf
inc
xchg
inc
jmp
es
stos
out
dec
sub
mov
mov
inc
aaa
shr
sbb
rol
or
(bad)
cld
add
mov
or
add
mov
jecxz
clc
retf
sbb
sar
dec
cmc
xor
xchg
and
add
xchg
aad
in
adc
inc
mov
ficom
(bad)
lea
push
xchg
push
xchg
xor
jns
xchg
push
loope
aam
outs
sub
or
push
cld
fidivr
jp
syscall
jo
aas
dec
or
int3
mov
xchg
jmp
jmp
push
daa
popa
sbb
cmp
ret
ficomp
and
aam
xchg
cs
xlat
int3
mov
stos
mov
in
xchg
sbb
mov
clc
mov
loopne
test
jge
cmovns
jle
sub
scas
pop
fsub
jg
ja
inc
shl
out
xor
stc
add
sub
dec
out
pop
jge
out
iret
ins
cmp
sub
out
repnz
in
cmp
dec
or
pop
sbb
mov
cld
sbb
out
call
inc
std
cmp
xchg
aam
imul
mov
or
mov
sahf
stos
and
inc
icebp
xor
call
add
dec
sti
mov
jmp
scas
imul
bound
dec
in
ds
and
push
pop
dec
popf
xchg
jo
stos
das
jle
rol
loop
pop
dec
inc
xchg
or
add
cli
and
mov
lock
popf
ret
pushf
push
loop
aaa
push
sub
in
cmp
push
xor
add
add
lock
pop
mov
in
cmp
je
pop
dec
lods
jge
arpl
sub
inc
push
mov
repz
icebp
popa
aas
(bad)
ret
adc
addr16
mov
pop
push
inc
jne
push
ret
add
add
stos
fs
cmp
scas
add
(bad)
loope
out
and
ss
mov
jge
jmp
fild
out
test
call
or
cmp
push
aam
rcl
add
inc
scas
stos
retf
jecxz
push
shl
jle
in
fbstp
mov
dec
cmp
fild
cmp
xchg
add
cwde
mov
jmp
sub
and
jg
sahf
into
jo
sub
into
or
mov
dec
bound
(bad)
adc
jmp
std
jecxz
fmul
fld
add
inc
test
ret
lods
pop
and
rcl
cmp
data16
icebp
push
(bad)
fdivr
or
fisubr
jmp
dec
cmp
daa
aas
jnp
mov
or
cmc
mov
cmp
call
(bad)
clc
cld
test
jne
lock
push
and
jne
mov
mov
xchg
jae
mov
adc
ftst
retf
push
jle
loope
out
or
(bad)
pop
fcomp
into
mul
cli
and
repnz
pop
adc
inc
(bad)
cdq
xchg
stc
mov
scas
pusha
xchg
nop
movs
icebp
xchg
sbb
leave
inc
mov
outs
or
inc
cmp
jl
shl
sub
add
push
jmp
enter
push
movs
inc
out
ficomp
(bad)
jne
xlat
inc
xchg
jecxz
in
sbb
jno
pop
and
and
repnz
cmp
rol
stos
jno
jbe
xchg
call
addr16
push
jg
add
or
pop
fucomip
xchg
(bad)
mov
sub
mov
les
mov
mov
push
loope
dec
adc
add
repz
mov
dec
mov
in
icebp
fwait
cwde
imul
or
daa
pop
inc
and
push
xor
cmp
jg
(bad)
pop
scas
xchg
push
scas
adc
out
loop
push
jp
cwde
sbb
and
adc
cmps
jmp
and
mov
fld
bound
inc
cld
mov
inc
pop
loopne
add
rol
jb
inc
sub
fidivr
nop
pop
adc
sbb
div
adc
inc
mov
leave
xor
cwde
clc
iret
mov
push
mov
mov
mov
push
test
cwde
repnz
cdq
cmp
outs
lods
push
fild
fisubr
xor
outs
ds
pop
scas
mov
sbb
out
repz
movs
int3
jno
push
adc
xor
xchg
or
imul
leave
in
push
jns
jno
in
pop
shl
xlat
pusha
mov
test
xor
test
sti
sub
in
movs
stc
adc
in
les
xchg
xor
sbb
inc
sbb
pop
jge
gs
repz
pop
call
inc
rcr
ss
(bad)
test
lds
test
fcomp
shr
mov
int
loopne
mov
in
data16
push
int3
xchg
in
mov
out
mov
push
stos
sti
test
ficomp
ss
inc
in
outs
daa
movs
adc
cmp
ja
push
ja
outs
mov
sbb
nop
dec
test
fisubr
add
fdivr
or
test
jecxz
outs
daa
cwde
ja
test
sub
loop
cmps
ret
dec
pop
add
xchg
adc
je
mov
lahf
adc
stc
add
adc
pop
add
inc
pop
call
cdq
mov
xor
mov
or
outs
pop
daa
push
lods
xor
xor
data16
ret
psrlw
rol
dec
push
in
dec
inc
xchg
mov
fidivr
imul
addr16
xor
gs
inc
mov
mov
xor
mov
adc
lea
pop
imul
sub
push
ficom
gs
dec
jle
aad
stos
aad
fld
jne
jmp
inc
pop
bound
adc
(bad)
bndldx
push
add
cli
in
xchg
xlat
add
ror
mov
sub
popa
scas
jnp
jo
mov
dec
std
sahf
sub
cmp
pop
dec
push
stos
mov
pop
cdq
push
retf
mov
push
jne
xchg
xlat
sbb
xchg
inc
sbb
or
dec
neg
in
data16
xor
lahf
pop
cmp
es
xchg
stos
aam
pop
pusha
repz
dec
cmp
dec
inc
and
in
lock
retf
or
fcmovnbe
aaa
mov
neg
push
push
(bad)
push
inc
retf
int3
in
mov
nop
loop
push
int
shr
jmp
inc
adc
dec
mov
lds
mov
push
jmp
push
mov
mov
sub
inc
jmp
mov
adc
mov
shl
ud2
bound
mov
gs
inc
sbb
cmc
ins
rcl
ins
xor
push
mov
loope
cmp
aaa
jmp
cmp
ret
fnstsw
mov
cmp
js
xchg
dec
movs
cmp
fisubr
cdq
cmp
push
ins
movs
xchg
and
sub
mov
in
mov
jle
ret
ja
or
int3
test
movs
das
mov
jecxz
adc
into
and
outs
fs
pop
cwde
mov
les
icebp
mov
ss
add
cmps
xor
inc
fsub
scas
or
bound
or
jp
pusha
aas
push
push
bound
shl
jg
retf
inc
xchg
scas
mov
inc
mov
clc
dec
jb
mov
ds
add
(bad)
jmp
xor
std
(bad)
cld
adc
mov
xchg
cmp
xchg
lahf
(bad)
int
xchg
jo
je
daa
pop
test
adc
in
sub
retf
(bad)
and
mov
push
loop
outs
fcmovb
out
fisubr
movs
xor
loopne
ret
daa
xchg
shl
sub
sub
jnp
or
fs
pop
stos
(bad)
xchg
push
popf
cdq
xchg
cmp
retf
stos
push
repnz
pop
xor
mov
adc
sbb
cmps
out
enter
inc
mov
jp
cmp
loopne
or
sbb
movs
test
hlt
inc
adc
or
ret
les
test
ficom
cli
mov
pop
adc
or
dec
retf
lahf
mov
ror
sub
xchg
or
daa
inc
sbb
mov
popa
cmp
inc
lods
sub
mov
addr16
aad
dec
movs
dec
or
movs
dec
call
(bad)
sub
out
pusha
pop
jne
mov
jp
mov
cdq
ins
xchg
pushf
bound
icebp
(bad)
jns
xchg
adc
ins
sub
test
fisttp
sbb
dec
and
aam
(bad)
xor
fwait
xchg
xchg
movs
cmp
enter
aas
mov
pop
jo
pop
or
in
xor
push
cmp
jne
xchg
je
(bad)
ins
sahf
add
repnz
inc
popf
scas
add
cld
and
jno
out
mov
xchg
mov
es
mov
inc
pop
outs
pushf
pop
es
cmps
cmc
fucom
and
sub
pop
sub
lock
loope
iret
jg
push
xor
jmp
add
(bad)
sti
dec
shl
arpl
dec
aas
stos
loopne
movs
push
rcl
in
bound
fnstcw
inc
imul
pop
ins
pop
inc
mov
jno
or
push
div
mov
into
aam
adc
dec
and
les
fist
cmp
push
mov
push
repz
mov
into
cmp
in
xor
cdq
push
xchg
inc
pop
ja
inc
leave
mov
inc
mov
or
mov
mov
jmp
mov
xor
xlat
sbb
sub
clc
cmp
sbb
sti
adc
mov
sbb
clc
or
mov
xchg
cmp
or
lahf
or
sbb
outs
sar
push
in
jl
addr16
mov
lds
jno
dec
or
xchg
dec
add
test
enter
into
jb
mul
and
dec
pop
(bad)
pop
mov
mov
sbb
js
mov
es
xchg
scas
mov
add
mov
(bad)
and
sub
lock
dec
sbb
jno
pop
adc
aad
int
push
xchg
dec
icebp
ins
ret
je
cwde
cmc
add
out
fcom
(bad)
pusha
(bad)
push
cdq
dec
or
ins
sub
out
ins
sub
mov
jmp
outs
cmps
xor
pop
pop
cli
cmp
xchg
ss
mov
stos
retf
inc
push
add
sbb
mov
xchg
push
or
add
pop
lock
jp
inc
shl
(bad)
enter
inc
fnstenv
scas
lock
inc
adc
cmp
push
ret
mov
call
(bad)
into
sbb
sbb
xor
adc
cmp
jmp
pop
inc
sbb
call
movs
repz
loope
mov
pop
jnp
pop
mov
xchg
jae
pop
mov
push
mov
aaa
repnz
in
and
mov
or
mov
jecxz
movs
pop
dec
xchg
fld
cwde
ffreep
shl
aaa
jle
push
out
sub
movs
cmps
mov
jecxz
fwait
(bad)
adc
in
test
and
mov
adc
mov
push
push
dec
mov
dec
(bad)
rcr
iret
add
test
pop
(bad)
mov
xor
fild
sbb
outs
retf
xlat
cmp
in
dec
xchg
clc
test
addr16
lock
mov
mov
pop
rcl
mov
push
arpl
ret
pop
(bad)
mov
jg
jno
out
inc
out
mov
stos
adc
add
push
xchg
ds
call
test
xchg
push
retf
mov
int
imul
xor
aas
out
or
(bad)
out
jge
mov
pusha
jmp
int3
pextrw
mov
adc
mov
rcr
dec
xchg
pushf
and
mov
movs
adc
sti
ins
pop
stos
ins
ss
neg
dec
jb
imul
pop
outs
mov
fisttp
or
(bad)
pop
add
js
mov
in
and
test
sbb
sbb
ret
jno
mov
into
add
lea
dec
jo
call
xchg
idiv
(bad)
jmp
fild
fisttp
mov
js
inc
jmp
popa
out
adc
adc
pusha
jo
frstor
jecxz
cmps
bound
or
aas
inc
jl
leave
xchg
cdq
loope
jb
xor
add
mov
sub
sub
mov
(bad)
ds
xchg
sub
jg
icebp
mov
sahf
dec
pop
out
stos
adc
dec
xor
and
mov
mov
or
xchg
push
(bad)
imul
push
std
adc
rcr
pop
push
aam
jecxz
adc
out
dec
jp
test
sbb
add
gs
jge
repz
in
out
and
fisttp
(bad)
out
addr16
ds
outs
rol
inc
lods
imul
xchg
stos
punpcklwd
inc
das
and
mov
push
scas
xchg
mov
lahf
enter
shl
jnp
or
xor
push
jg
into
ins
outs
adc
frstor
dec
xchg
pop
mov
(bad)
dec
cmp
lock
loop
xchg
mov
aam
push
push
daa
jg
and
aad
clc
out
enter
adc
mov
or
push
scas
push
je
js
push
pop
xor
add
outs
cwde
dec
cmp
xor
aam
or
sbb
inc
loope
sbb
mov
fist
dec
imul
in
aam
jns
cld
stc
mov
cmp
xchg
arpl
inc
cmp
les
or
jp
jl
mov
xor
(bad)
sti
add
js
mov
(bad)
cwde
imul
mov
pop
mov
jae
cwde
dec
loope
push
(bad)
mov
xchg
sar
lds
retf
out
sbb
mov
imul
mov
sub
loope
fisubr
ins
addr16
pop
fisub
inc
jge
and
pop
repz
es
dec
mov
out
cmp
iret
or
push
mov
jb
inc
adc
dec
or
shl
mov
sub
or
test
icebp
jbe
cli
cdq
mov
cmp
ror
repz
lahf
not
into
mov
out
scas
lea
gs
pop
sub
jb
stos
dec
dec
enter
and
lahf
cwde
movs
push
std
adc
sbb
ins
pushf
fdiv
repz
es
cmp
inc
mov
mov
xor
aaa
xchg
call
jp
sub
cmp
fldenv
fbstp
fld
lods
mov
pop
popf
lahf
dec
mov
xor
mov
retf
xchg
je
aas
cli
les
dec
into
jo
(bad)
test
cwde
outs
repnz
aaa
add
sbb
push
pushf
inc
lock
jmp
(bad)
or
shr
inc
jbe
sub
or
pop
jmp
dec
xchg
outs
scas
mov
add
jne
push
ficom
test
mov
fcmovnu
jo
sub
mov
mov
mov
js
fistp
cli
in
cmp
int3
mov
fild
icebp
imul
adc
cdq
dec
xchg
and
jge
vpmacssww
test
addr16
in
fnstenv
daa
test
and
push
dec
cmp
cmps
push
push
pop
nop
cmp
push
push
push
not
lea
test
pushf
aaa
jne
mov
aas
mov
pop
stos
and
cmp
out
mov
cmp
lock
mov
and
or
cmp
call
pop
xor
xchg
int3
adc
sti
jb
or
xor
scas
es
fistp
dec
pop
dec
cmp
jae
cmp
ss
inc
sahf
fisub
xchg
sar
retf
xor
sub
fwait
iret
lea
lods
cmp
out
xor
sbb
push
push
jmp
std
mov
stos
nop
ror
outs
push
lea
in
dec
leave
or
xchg
in
ins
pop
or
and
dec
stos
push
in
call
inc
jmp
add
push
xor
jae
mov
push
xor
test
xor
test
les
retf
mov
sar
into
leave
jge
add
(bad)
aas
inc
call
(bad)
sub
mov
push
mov
mov
inc
jle
pusha
xor
stos
data16
jl
jmp
cmp
pop
test
push
cmp
ret
cmp
jns
out
inc
push
loop
inc
mov
leave
pop
cmp
inc
call
pop
lods
test
arpl
and
(bad)
xchg
popa
(bad)
inc
xor
xchg
xchg
dec
(bad)
lods
scas
stos
out
xchg
jne
jle
and
sti
test
sub
cmps
inc
mov
mov
daa
dec
and
xor
out
loopne
outs
dec
push
outs
dec
loope
sbb
les
inc
pop
dec
fmul
out
in
and
(bad)
and
outs
sbb
jge
dec
in
nop
xchg
jmp
dec
cld
sbb
mov
aaa
cmps
adc
mov
cs
jb
pop
cmp
lods
push
push
jnp
push
test
sub
cdq
mov
sbb
mov
fist
clc
aam
aam
mov
scas
inc
sub
fwait
and
jle
pop
(bad)
adc
clc
hlt
outs
jb
imul
or
out
sahf
jo
pushf
hlt
jmp
shl
in
js
mov
xchg
aam
add
jbe
xchg
bound
xor
je
pop
or
pusha
in
cli
mov
jmp
xor
mov
inc
adc
xor
rcpps
repnz
push
data16
jo
push
cmp
mov
inc
mov
cmp
mov
repz
hlt
arpl
sub
dec
lock
or
fbld
fdivr
and
leave
mov
inc
mov
add
pop
inc
xchg
dec
cmps
xor
mov
cmp
xlat
ds
mov
es
sub
mov
hlt
bound
pushf
add
test
add
pop
(bad)
aaa
sbb
idiv
shl
cmp
pop
sbb
iret
in
sti
sub
push
xchg
push
push
fld
jmp
lea
mov
adc
add
pop
shr
mov
fst
dec
cmp
inc
(bad)
mov
not
test
cwde
aad
fwait
xor
or
xor
(bad)
mov
data16
mov
adc
sub
fstp
fstp
push
dec
(bad)
push
mov
cmp
movs
or
jae
ins
cmp
mov
jge
aad
push
dec
cli
retf
xor
ja
mov
adc
xchg
dec
into
jmp
cmp
loope
add
imul
mov
or
cmps
cld
pusha
dec
or
int
cs
mov
or
imul
sbb
or
mov
xchg
mov
mov
xchg
jg
scas
inc
xchg
xor
add
or
pop
into
jecxz
xchg
rcr
imul
xchg
or
push
aaa
lods
adc
stos
dec
jmp
popa
dec
inc
mov
dec
pop
rcr
xchg
ds
jp
adc
sub
les
jno
test
ret
mov
sar
jl
xchg
push
mov
xor
bound
dec
sbb
jae
xchg
add
inc
call
push
ds
dec
retf
add
sub
mov
into
mov
push
scas
bound
jbe
or
xchg
dec
sbb
loope
fidiv
lahf
mov
lods
sahf
and
bound
in
jg
cmp
or
in
mov
xchg
fld
cwde
js
lods
push
and
dec
pop
push
adc
pop
int
sti
jecxz
out
cli
sbb
dec
inc
sub
push
out
and
icebp
add
and
daa
mov
and
cmp
leave
and
retf
pop
sbb
mov
sbb
test
mov
inc
aas
(bad)
mov
cdq
xor
push
les
data16
jno
imul
jae
retf
mov
aam
movs
clc
mov
iret
stos
pop
add
retf
ja
dec
gs
mov
adc
bound
sti
jl
mov
test
pop
outs
sbb
sbb
iret
shl
cmp
(bad)
aaa
mov
and
in
push
out
aas
add
or
push
addr16
jbe
loopne
mov
into
adc
std
cmp
jns
adc
test
jecxz
iret
je
ret
js
loope
es
xchg
xlat
or
out
mov
cmps
jmp
push
push
push
inc
jecxz
xchg
fimul
jae
(bad)
jmp
sbb
adc
adc
adc
mov
sbb
push
test
add
xchg
mov
jnp
jmp
outs
shl
add
sbb
(bad)
aad
and
cmp
adc
xchg
loop
cmps
sub
in
stos
pop
mov
sbb
dec
leave
cwde
enter
pop
addr16
jle
daa
or
leave
mov
cwde
retf
xor
ins
adc
cdq
mov
push
aad
popa
inc
xchg
ror
retf
mov
bound
loop
(bad)
punpckhwd
inc
int3
cmp
fs
(bad)
add
cli
imul
xlat
out
enter
add
xor
jne
fild
in
nop
or
mov
fcom
lahf
jmp
adc
xor
dec
jo
in
in
cmc
jns
shl
mov
mov
outs
sahf
fsubr
sub
hlt
mov
fwait
mov
popa
jecxz
xor
mov
pop
and
ds
jmp
inc
mov
cmp
push
shr
xor
and
inc
les
jo
test
out
movs
and
add
xchg
shl
loopne
lds
mov
cmps
bound
call
fnstenv
cmp
call
loop
push
fwait
push
sti
ficom
mov
fst
imul
xor
repnz
lahf
inc
sbb
fisubr
mov
cmp
in
daa
xchg
cmp
lock
(bad)
les
add
mov
cdq
pushf
popf
outs
cs
aad
shr
push
cli
add
clc
dec
lods
faddp
and
adc
fwait
lgs
aam
inc
jbe
lahf
cmp
xchg
sub
adc
xchg
pushf
mov
xchg
outs
cli
mov
sbb
adc
sub
(bad)
stc
mov
inc
dec
sub
sti
(bad)
push
movs
imul
and
cmps
in
jae
das
sahf
pop
push
mov
sub
int3
xchg
nop
sub
iret
xlat
loopne
aas
xchg
adc
leave
sti
into
push
(bad)
fiadd
fdiv
(bad)
dec
xor
jle
iret
fsub
jle
arpl
cli
call
add
sub
xchg
pop
(bad)
jle
lods
daa
rol
inc
push
iret
dec
push
or
and
inc
dec
cmp
xchg
jl
jmp
inc
int
shld
jp
jg
mov
es
cs
mov
test
enter
or
sbb
mov
mov
dec
mov
cli
aam
rcr
cmp
jge
cmp
push
sbb
mov
cmps
je
mov
or
mov
xor
pop
xchg
and
pop
push
cwde
fadd
push
fwait
ins
jae
call
test
dec
icebp
mov
jge
fcomp
mov
sti
(bad)
jecxz
add
jmp
je
test
xor
push
mov
mov
add
retf
call
std
imul
jmp
mov
or
jnp
stos
adc
and
pop
ret
int3
scas
add
mov
ja
jge
mov
xchg
pop
ret
das
popf
pop
aam
mov
retf
mov
jbe
fdivr
pop
and
pop
push
push
xchg
jle
outs
adc
sar
jge
outs
sbb
xchg
je
jge
add
aam
mov
jg
and
mov
sbb
shr
mov
pop
mov
mov
sbb
fcomp
fs
add
icebp
and
lods
xchg
repnz
ins
repnz
mov
pop
pop
mov
xor
addr16
out
dec
mov
mov
ficom
imul
shl
rcr
call
mov
fwait
or
add
pop
and
fist
push
js
aaa
in
adc
stc
push
call
sahf
idiv
add
mov
pop
mov
nop
(bad)
rcl
jnp
mov
dec
retf
rcl
push
cmp
xor
ds
cmc
div
loopne
push
cmp
cmps
div
pop
mov
jb
mov
add
xchg
mov
and
jle
push
xchg
movs
lahf
or
in
sti
jecxz
sub
cmps
mov
scas
add
push
(bad)
adc
movs
add
inc
sbb
ror
jp
fldcw
and
push
push
cs
shl
les
imul
cmp
movs
rcl
fisubr
daa
xchg
les
mov
cmps
sub
mov
mov
mov
ss
or
es
movs
cmc
(bad)
sar
dec
fwait
movs
(bad)
loopne
add
test
pop
cmc
mul
addr16
or
mov
aam
push
xchg
mov
xor
jb
inc
pushf
sbb
mov
addr16
lds
pop
in
stos
pop
push
test
xchg
out
mov
lods
cmp
inc
mov
mov
mov
adc
fnstenv
dec
push
int3
js
lds
jecxz
pop
jne
push
mov
xchg
sub
push
(bad)
push
xor
push
inc
xchg
mov
adc
out
jae
ins
adc
sti
pop
(bad)
jmp
clc
jno
xchg
fist
pop
test
scas
xor
sbb
loope
adc
xchg
cwde
jbe
mov
lock
xor
xor
xchg
push
dec
psrlw
out
leave
and
aas
inc
jno
test
lea
vmovntps
mov
jne
mov
cmp
pop
mov
pop
adc
cli
or
push
or
cmps
cld
cld
or
(bad)
ss
fwait
jbe
lods
mov
sub
movs
pop
adc
les
xchg
jg
push
cmp
dec
stos
mov
and
popa
mov
adc
mov
pop
mov
fnsave
cld
push
cld
push
les
sub
mov
jae
push
add
pop
sub
in
mov
lods
out
loope
fsub
push
pop
lahf
jmp
add
add
jno
in
movs
jge
cwde
sti
icebp
ins
movs
(bad)
enter
inc
xchg
sbb
and
xchg
or
scas
or
pop
mov
add
cwde
xchg
mov
dec
inc
mov
jle
jmp
mov
cmp
rcr
aam
cmp
mov
out
fiadd
mov
stc
inc
mov
lods
mov
outs
cmp
or
xchg
push
jns
popf
mov
jo
xchg
or
add
add
fwait
lods
fisttp
add
mov
bound
dec
mov
bound
cs
pop
xor
sub
jnp
mov
or
xchg
gs
aam
mov
ja
add
mov
pop
sub
fnstsw
inc
cs
add
xor
cmp
add
out
sbb
and
popf
add
sbb
mov
xlat
pop
hlt
mov
pop
dec
int3
xchg
in
xor
mov
ja
xor
mov
mov
adc
lds
outs
or
cmp
xor
adc
popf
push
sbb
jmp
xor
add
pop
sar
sub
jnp
dec
cli
or
loope
pop
mov
outs
jae
(bad)
and
sub
(bad)
scas
xchg
(bad)
js
(bad)
bound
retf
sbb
jmp
dec
(bad)
cmp
cmp
mov
shl
iret
fcomp
outs
and
popf
sti
in
mov
rep
in
inc
cmp
mov
ror
push
sbb
movs
jmp
pop
pop
or
cdq
pop
imul
mov
scas
es
fldenv
mov
adc
cli
ds
retf
sbb
call
nop
loope
jo
inc
pop
not
arpl
daa
pop
test
mov
fistp
dec
sbb
imul
pop
pop
jno
xchg
mov
les
inc
clc
sbb
shl
fcmove
arpl
ds
sub
adc
div
arpl
mov
dec
aaa
nop
mov
xor
(bad)
loopne
sub
out
popf
call
ins
push
and
jns
cli
imul
sub
sahf
add
push
push
outs
jns
xor
scas
leave
retf
ret
stc
outs
xchg
adc
mov
lds
push
test
push
inc
stos
push
mov
push
bound
pop
mov
push
in
jnp
dec
stos
xchg
lods
bswap
jle
das
jb
add
pop
div
jo
nop
shl
push
jle
mov
rol
inc
jmp
adc
lea
mov
rcl
mov
iret
add
add
jmp
cmp
inc
or
call
xchg
inc
pop
retf
out
dec
ss
and
out
in
fmul
(bad)
imul
repz
pop
push
arpl
pop
dec
push
imul
mov
addr16
dec
or
sub
jg
sub
out
pop
pusha
push
(bad)
les
pop
jae
add
stos
movs
in
sub
cmp
sub
push
repnz
xor
mov
mov
sbb
xor
xchg
cmp
stos
sbb
mov
sti
push
stos
add
pop
mov
pop
dec
mov
xchg
dec
push
in
sbb
lods
xor
xor
rcl
adc
mov
mov
call
sar
call
xchg
fld
dec
imul
pop
rol
ffreep
int3
push
loopne
adc
dec
pusha
pop
test
jno
jne
add
xchg
hlt
addr16
cmp
xor
inc
push
and
or
mov
jg
mov
int3
and
xor
fidiv
xlat
pushf
inc
pusha
adc
gs
jmp
mov
aaa
push
cmp
pop
sub
std
sti
sub
and
hlt
xchg
mov
sbb
inc
mov
inc
push
dec
xor
adc
sbb
js
pop
icebp
push
cdq
mov
xchg
jg
sbb
pop
xor
and
and
cmp
pusha
les
lea
and
pop
sar
add
sub
test
in
fdiv
stos
cmp
dec
icebp
add
aad
loop
sbb
xor
stc
popa
fcomp
int3
test
data16
(bad)
adc
rep
(bad)
repnz
jnp
push
mov
mov
cmp
fiadd
iret
inc
sti
iret
inc
stos
mov
test
cmp
mov
mov
push
sbb
mov
mov
xor
cmp
or
inc
ret
add
inc
jmp
call
leave
shl
rol
loopne
rcl
sbb
cmp
imul
jl
dec
sbb
mov
(bad)
das
jmp
out
inc
int3
mov
in
out
shl
mov
clc
cmps
(bad)
in
sbb
push
push
inc
pusha
inc
stos
lods
cmp
ins
xchg
adc
cmp
popa
in
inc
adc
popa
push
and
inc
outs
mov
push
xchg
push
and
sub
das
popa
arpl
stc
push
fistp
xchg
push
(bad)
lods
xchg
adc
inc
pop
or
dec
push
xor
in
mov
dec
sbb
ficom
mov
xchg
or
push
bound
imul
popf
inc
jmp
jmp
push
(bad)
imul
fwait
mov
and
dec
js
lods
mov
outs
mov
adc
cdq
lods
push
das
out
clc
cmp
fbstp
ins
mov
sub
and
adc
in
or
sub
adc
sbb
inc
es
pop
lahf
xchg
pop
cmp
leave
mov
dec
sti
sbb
test
das
adc
stos
fcom
mov
xchg
(bad)
mov
sub
repnz
stc
out
sbb
iret
xor
dec
xchg
adc
out
mov
jb
(bad)
movs
sub
rcl
outs
mov
out
adc
push
xchg
popf
or
cwde
inc
mov
aam
stc
mul
fucomi
mov
mov
aam
mov
jbe
out
jne
cmp
mov
jge
push
xchg
jne
fcom
in
push
cmp
or
test
xor
clc
cmps
sbb
mov
sbb
adc
inc
cwde
je
icebp
cmp
mov
and
loope
and
test
and
dec
mov
test
mov
xor
dec
cmp
jl
icebp
test
into
int
mov
xchg
(bad)
loop
inc
xchg
mov
loopne
mov
jne
jno
adc
cld
in
add
sar
scas
in
mov
push
pop
aad
xchg
sub
stos
cld
mov
xchg
adc
shr
add
mov
shr
ss
add
sub
fucomp
or
fs
xor
test
xchg
mov
push
mov
dec
neg
std
fs
jae
test
lods
or
inc
dec
cld
cwde
push
or
aaa
ret
sahf
sbb
popf
nop
adc
fwait
cmc
retf
xor
sbb
add
pop
fwait
mov
outs
push
pop
xchg
inc
clc
inc
and
pop
in
pop
test
(bad)
mov
les
push
lock
or
pop
sar
inc
jns
ins
inc
and
sbb
push
sub
dec
imul
repnz
sar
and
push
mov
dec
icebp
out
pop
not
loope
jno
jl
or
fwait
push
adc
test
ficom
xor
sub
int
and
fsubr
xchg
or
scas
out
popf
jbe
ins
stc
pop
pop
dec
aaa
fst
scas
cmp
xchg
inc
sti
imul
dec
cmc
jo
out
mov
dec
dec
daa
out
stos
or
add
popf
pop
sbb
fimul
test
mov
ins
shl
sar
pop
mov
pop
jecxz
clc
cmp
(bad)
and
rcl
mov
xor
mov
sti
jae
ror
das
jmp
lock
inc
lahf
sbb
push
sub
(bad)
enter
daa
test
xchg
inc
push
mov
adc
ficom
not
(bad)
mov
dec
lock
in
daa
stos
sub
retf
pusha
sub
or
int3
lock
stos
into
test
nop
inc
stc
int3
jge
(bad)
fistp
inc
imul
lods
or
and
dec
mov
pop
jne
and
jecxz
jecxz
mov
add
aas
inc
push
and
out
dec
inc
add
aas
fisubr
inc
xor
and
and
xor
mov
dec
and
sti
cmps
jp
test
fnstsw
movs
mov
cmp
inc
jmp
mov
cmp
add
pop
mov
fs
test
in
arpl
loopne
push
xlat
fisttp
pop
push
sti
lea
out
in
cmp
stc
stos
xchg
pop
inc
inc
xchg
dec
out
jb
fwait
or
mov
aaa
mov
sub
and
dec
push
adc
xchg
pushf
sub
call
pop
xchg
xor
daa
out
sub
add
js
cmp
mov
and
out
out
inc
loop
sub
imul
scas
popf
mov
cmps
icebp
sbb
xchg
pop
xor
fs
dec
hlt
jb
movs
mov
cmp
jp
(bad)
shr
sub
add
xchg
test
psrld
lods
(bad)
retf
push
push
jne
push
mov
fmul
jmp
fucomip
and
adc
cmp
pop
jnp
inc
imul
inc
rcl
adc
div
aad
cmc
je
dec
fsub
nop
cdq
inc
xchg
pop
sub
cmp
sbb
push
and
inc
hlt
cmp
push
xchg
lock
(bad)
sti
out
out
mov
fcmovne
rcr
mov
call
rcr
sub
mov
cwde
xor
fdivr
fucomp
into
push
popa
movs
int3
daa
jne
out
mov
cmp
js
xchg
fidivr
out
adc
jne
int3
lahf
mov
jle
sar
push
cdq
ins
mov
or
(bad)
mov
cmp
xchg
and
in
cmc
fimul
mov
aaa
add
sub
lds
sbb
jo
push
fs
retfw
(bad)
gs
or
jb
xor
int3
jmp
pop
clc
xor
and
xor
bound
lahf
push
nop
imul
mov
js
into
jne
mov
pop
repnz
add
test
int
cmps
jle
sahf
add
push
cmp
or
movs
mov
xchg
cli
pop
outs
(bad)
loope
sbb
push
rcr
push
or
fild
add
cmp
sub
call
sub
adc
and
sbb
scas
push
call
test
add
popa
int3
test
push
dec
popf
mov
inc
or
add
lods
push
loope
or
out
xor
mov
inc
push
push
call
inc
push
cmc
sbb
call
jnp
loope
mov
cs
leave
push
xchg
int3
aaa
push
cmp
xchg
sbb
push
addr16
retf
sbb
fnstsw
mov
jmp
or
aad
sub
sbb
lahf
jo
leave
movs
jl
test
ror
(bad)
jle
mov
adc
retf
xchg
fiadd
push
push
pusha
call
cli
inc
xchg
(bad)
lea
jge
inc
ds
gs
out
repz
jmp
ret
imul
fsubr
push
bound
fst
mov
pop
aaa
cmp
dec
sub
movs
sub
das
imul
mov
mov
inc
cld
adc
outs
rol
sub
push
inc
sti
jp
mov
dec
xchg
add
push
inc
pop
lea
and
in
loopne
pop
mov
shr
jp
ret
mov
mov
push
or
sbb
xor
cmps
mov
leave
sub
jp
leave
mov
js
cdq
sub
jl
jp
stc
rol
retf
sbb
push
aas
push
stos
pop
clc
adc
repnz
inc
sub
cld
add
pop
test
xchg
sbb
in
loope
pop
inc
xchg
or
lods
mov
add
adc
shl
mov
jbe
xor
inc
iret
je
or
mov
test
fnstcw
mov
nop
xor
ret
pop
shr
push
test
in
fadd
es
in
rol
inc
cld
(bad)
jp
aam
out
cdq
inc
retfw
add
movs
scas
adc
adc
test
stos
xor
push
leave
ror
int3
sbb
cwde
add
test
or
in
sbb
aam
inc
scas
mov
and
and
cmp
out
(bad)
xor
sahf
pusha
sti
cmp
pop
inc
dec
std
inc
jmp
cmp
cmp
pop
push
icebp
scas
ret
scas
loop
test
movs
icebp
(bad)
shl
adc
or
addr16
fbstp
ret
inc
add
mov
push
fdivr
cmp
js
cmps
lock
jnp
leave
movs
aam
out
push
cmp
es
push
std
fimul
std
jl
je
xor
js
cmps
mov
xor
inc
stos
ficomp
out
jge
push
inc
mov
ds
jns
and
add
jae
and
imul
stc
mov
dec
sbb
dec
call
cwde
cwde
inc
loop
pop
mov
add
jmp
sbb
test
push
and
(bad)
cli
stc
cmc
bound
fcomip
ins
jle
push
dec
dec
jnp
cs
or
jg
push
and
sub
add
cmps
test
pop
dec
xor
das
and
inc
add
sub
test
dec
sbb
scas
mov
dec
addr16
aaa
xor
inc
mov
add
and
cmp
or
or
jo
xchg
mov
mov
aam
pop
cmp
pusha
imul
ins
fcom
sti
js
mov
mov
mov
call
or
and
movs
loopne
mov
jbe
sbb
fisub
test
xor
ds
aaa
push
dec
mov
inc
lea
push
xor
push
mov
lea
adc
ins
mov
mov
(bad)
idiv
xor
lds
dec
and
scas
push
push
movs
mov
nop
push
shr
jae
popf
or
std
into
pop
(bad)
xor
or
push
sti
dec
pop
fsub
inc
std
in
adc
mov
mov
push
ja
or
ret
out
nop
cdq
mov
mov
fnstsw
push
arpl
shl
sub
dec
mov
add
xchg
dec
push
add
and
shr
push
pop
lock
arpl
movs
mov
sahf
icebp
mov
sbb
(bad)
fadd
enter
push
jg
cmp
int
jmp
pop
pop
outs
int
add
sbb
add
cmp
arpl
into
mov
mov
ffreep
push
lock
lds
or
stos
test
sbb
rol
(bad)
push
aas
inc
aaa
adc
or
les
scas
sub
sub
cmp
pop
jg
lds
jae
ins
out
jle
mov
mov
repz
mov
stc
inc
and
scas
jmp
jl
cld
push
gs
call
sub
dec
popf
and
jecxz
push
or
repnz
cmp
test
addr16
(bad)
pop
outs
add
add
push
xchg
dec
lahf
ins
sti
add
jp
(bad)
pusha
adc
pop
pop
pop
and
mov
dec
mov
(bad)
pop
mov
movs
cmps
movs
adc
add
adc
xchg
pop
jge
iret
test
sbb
adc
scas
mov
mul
hlt
jg
imul
test
jg
aaa
repnz
or
cmp
int3
xchg
(bad)
push
daa
leave
xor
jmp
sbb
and
mov
mov
mov
jmp
add
out
inc
and
test
sbb
adc
shl
int
add
mov
add
cwde
pushf
cli
xchg
gs
add
or
dec
lds
ins
jge
test
stos
and
dec
dec
(bad)
addr16
mov
dec
jmp
xchg
mov
jae
fwait
xchg
outs
icebp
retfw
dec
and
mov
cmp
fld
mov
xchg
addr16
iret
fnstsw
mov
test
cmps
add
add
add
movs
xchg
cli
dec
rol
nop
push
retf
mov
mov
call
cli
iret
pop
mov
cmps
jge
imul
test
adc
aaa
inc
lea
test
movs
add
jle
and
jbe
or
and
push
push
dec
lea
clc
jbe
int
xor
cmc
ja
retf
rol
sti
mov
mov
mov
sub
call
xchg
rcl
adc
es
outs
pop
add
push
xchg
jnp
push
add
ret
ds
sar
ret
sub
popa
push
sbb
push
ins
ret
fisttp
repz
inc
repnz
(bad)
dec
popf
fdivr
mov
pop
popf
add
sub
js
add
jl
(bad)
xor
and
sbb
xchg
ins
add
std
test
addr16
xor
and
ficom
inc
repnz
arpl
icebp
inc
mov
mov
(bad)
dec
(bad)
(bad)
iret
xchg
daa
mov
pop
xchg
and
xchg
dec
inc
fdivr
mov
mov
ss
dec
popa
fadd
(bad)
dec
int
(bad)
mov
mov
loopne
sti
lods
cmps
push
adc
inc
scas
cmps
mov
lds
retf
ja
std
in
aad
inc
jbe
iret
push
mov
push
or
jg
add
add
retf
xor
sahf
add
jp
pop
sbb
popa
fstp
(bad)
int3
sbb
and
js
sbb
leave
sar
ja
aad
pop
dec
cs
retf
inc
sahf
pop
jmp
rol
rcl
inc
fcomp
pop
shr
(bad)
mov
jbe
mov
je
or
inc
test
or
pop
inc
scas
int3
jmp
or
jb
jl
mov
std
lahf
cmp
idiv
jmp
jge
pop
stc
and
ins
mov
sbb
leave
sub
arpl
fxch
fwait
mov
in
out
in
das
aad
jp
pop
fs
inc
movs
mov
dec
cmps
adc
ror
test
popf
fisttp
push
outs
jo
or
fsubr
xor
adc
leave
sar
mov
dec
ret
(bad)
xor
push
xchg
icebp
es
pop
adc
sti
mov
imul
and
lods
inc
mov
test
xlat
xchg
jae
jmp
inc
pusha
imul
test
div
pop
(bad)
xchg
in
(bad)
cld
hlt
dec
js
ins
in
push
ins
dec
rcr
push
mov
popf
mov
adc
icebp
je
adc
or
clc
or
sti
test
mov
sub
cmp
pop
mov
fist
mov
ja
rcr
shl
cmp
popa
push
cli
xchg
mov
arpl
lock
inc
push
(bad)
leave
movs
aas
mov
adc
mov
retf
les
data16
push
jecxz
add
mov
pop
lds
das
clc
aad
dec
or
dec
dec
es
(bad)
xchg
xor
call
imul
mov
jmp
sbb
scas
loop
xchg
(bad)
scas
cs
inc
cdq
repz
and
mov
xor
sti
mov
inc
adc
call
les
and
mov
jg
outs
sbb
stc
sbb
or
mov
cmps
ret
cmp
cs
ret
stc
call
jmp
out
fisub
mov
jmp
fisub
loopne
mov
or
adc
and
xlat
iret
or
shr
or
ficomp
or
repz
fiadd
imul
sbb
stos
fs
dec
imul
mov
inc
test
sahf
test
sub
stos
xchg
mov
push
pop
xlat
xchg
inc
mov
push
mov
nop
adc
and
xlat
lahf
das
mov
mov
push
adc
or
iret
mov
stc
stos
cld
leave
fcomp
je
lahf
inc
and
shr
adc
imul
or
xchg
add
or
sbb
or
bound
jno
push
das
push
jmp
pop
lods
out
mov
rcr
lods
ss
leave
sti
mov
fwait
sub
lea
push
push
stos
push
aam
adc
fcom
push
adc
cmp
mov
pushf
adc
cmps
ror
mov
or
js
and
push
dec
push
out
pop
dec
in
sbb
push
in
dec
mov
aam
fdiv
jge
xchg
shl
out
cmp
and
fsub
xchg
(bad)
dec
inc
cmp
mov
inc
inc
dec
(bad)
jne
outs
jo
mov
ins
movs
sbb
xchg
sahf
push
mov
call
dec
lods
or
test
push
stos
imul
push
out
popa
lock
inc
aam
add
hlt
mov
dec
stos
mov
cmc
pushf
xor
dec
jg
xor
sub
fmul
add
xchg
sbb
mov
jl
int3
shr
xchg
call
out
or
push
or
outs
or
pop
push
xor
jmp
push
leave
bound
adc
lea
mov
cdq
jmp
jnp
sysexit
jbe
xchg
jp
xchg
movs
dec
add
jmp
pushf
sub
clc
and
adc
dec
lds
mov
xor
sahf
mov
jmp
jl
sub
fcom
and
or
(bad)
or
adc
clc
fwait
and
pop
adc
jae
scas
popf
mov
aas
movs
call
das
int
dec
jns
push
xchg
and
mov
jecxz
(bad)
sbb
cmp
and
mov
push
inc
jmp
mov
xor
(bad)
movs
push
push
sub
mov
push
daa
pop
mov
sub
int3
cmp
xor
xchg
sub
in
rcr
jo
cmp
(bad)
mov
cmp
push
jmp
aam
push
sub
(bad)
fbld
or
adc
cmp
fidiv
sub
dec
cli
push
sbb
adc
jns
push
pop
cmp
(bad)
pop
sar
or
push
hlt
ds
out
aad
ins
mov
sbb
jg
pusha
icebp
push
sti
pop
fwait
sbb
int3
aam
jp
mov
mov
sar
push
lods
and
ficomp
data16
dec
cmp
idiv
out
dec
pop
mov
xor
push
nop
leave
xor
jp
aaa
jge
mov
test
mov
call
dec
or
sub
pop
ret
and
cld
js
inc
dec
fs
sub
arpl
push
dec
push
adc
adc
xchg
mov
add
and
retf
push
sbb
nop
jmp
fdivr
mov
bswap
mov
jno
adc
mov
and
icebp
mov
aas
mov
sub
xchg
xchg
fiadd
or
xlat
repnz
xchg
adc
mov
(bad)
mov
cmp
push
sub
stc
retf
push
inc
fisub
add
or
cs
lods
jle
cmps
in
sub
cmp
sbb
dec
les
xchg
sbb
pusha
sbb
test
push
shl
push
sbb
push
mov
add
xor
dec
fcom
mov
dec
xchg
es
call
scas
scas
inc
inc
dec
std
push
pop
dec
fmul
jmp
(bad)
xchg
xchg
fcom
xlat
mov
pop
adc
imul
adc
(bad)
je
jmp
cmps
jns
iret
(bad)
mov
push
out
add
xor
xor
jmp
jae
call
jne
xchg
jne
mov
(bad)
or
movs
xor
lods
mov
mov
es
retf
jge
dec
sar
icebp
cmp
mov
scas
xchg
cmp
sar
push
gs
mov
cmps
fldenv
popf
jo
iret
mov
jmp
sbb
mov
aad
push
push
shr
jo
push
enter
pop
test
mov
inc
(bad)
std
sub
xchg
fsubr
cmp
fistp
nop
ins
jp
push
fwait
adc
loope
std
or
pop
lods
test
mov
cdq
jmp
aas
(bad)
sbb
es
cdq
imul
xor
(bad)
jns
dec
sub
push
pusha
punpckhdq
cs
and
adc
mov
inc
mov
xlat
xor
push
(bad)
hlt
adc
xor
pop
inc
jle
fld
lea
in
jl
into
sbb
inc
push
mov
sbb
sahf
sub
and
cmps
stc
jae
and
adc
add
cld
inc
push
(bad)
lahf
xor
leave
ror
inc
mov
sbb
fdivp
sbb
sub
pop
or
sub
aas
fcmovne
imul
dec
mov
jmp
cmp
and
jecxz
in
cmp
mov
pop
push
fwait
shl
call
loopne
lods
in
test
mov
enter
fdiv
xchg
mov
sbb
aam
jnp
mov
dec
cmp
repz
and
lock
gs
cld
jb
mov
mov
and
xor
aaa
push
mov
test
mov
shr
loope
test
int3
xchg
or
push
sub
icebp
or
push
adc
loop
mov
repnz
fld
cmp
add
xor
pop
es
inc
or
or
cmp
mov
mov
icebp
cmp
pop
fldcw
adc
repz
lahf
xchg
bound
add
mov
movs
mov
mov
ror
mov
call
mov
sbb
repnz
pop
pop
xchg
ss
neg
(bad)
pop
adc
push
mov
mov
xor
mov
leave
lods
daa
add
mov
pop
dec
or
or
scas
inc
push
or
inc
shld
(bad)
adc
cmp
mov
fsubr
nop
xlat
gs
pop
pop
or
daa
jl
cld
sub
sub
mov
inc
js
xchg
in
xor
gs
loopne
lahf
jno
(bad)
xor
cmp
sahf
mov
loopne
bound
sbb
jnp
or
pop
fstp
push
shl
jbe
mov
retf
push
ins
int3
and
outs
pop
sub
xor
cli
mov
and
jl
neg
pop
sub
inc
add
xor
fmul
jmp
mov
stc
add
jle
repnz
pop
(bad)
pop
(bad)
cmp
cmc
test
mov
mov
lds
int3
mov
jno
dec
lods
scas
cmp
inc
nop
cld
jne
push
pop
cdq
sub
mov
jne
push
retf
cmc
and
mov
inc
sub
sub
outs
cmp
push
les
outs
bnd
jge
iret
push
out
jno
jb
out
stos
leave
in
int
ret
mov
fist
stos
pop
in
adc
and
mov
(bad)
xchg
cmps
test
out
adc
cmps
sub
sbb
dec
ret
jmp
mov
nop
cmp
gs
inc
lahf
sbb
std
mov
loopne
add
stos
rol
mov
sbb
pop
in
test
sbb
inc
hlt
sub
stos
movs
ss
or
push
mov
push
fdivr
test
cmps
aad
cmp
push
js
mov
pop
loopne
rcr
and
mov
inc
jo
iret
clc
shl
in
ins
inc
leave
jle
cmp
fadd
and
test
sbb
in
sahf
test
inc
sub
test
push
push
out
mov
in
dec
inc
jnp
push
or
ins
test
les
lods
hlt
inc
mov
xor
pop
cld
push
xchg
jmp
mov
push
sbb
ror
retf
xor
sub
jno
xor
(bad)
push
fsubr
mov
pop
mov
(bad)
aaa
push
mov
das
retf
mov
sub
popf
cmps
mov
ret
arpl
mov
adc
cmovns
pop
sub
and
sbb
mov
in
jo
push
rcr
stos
into
call
jmp
lock
xchg
(bad)
out
lahf
mov
int
rcr
jle
lahf
fisubr
cwde
cmps
and
xor
and
xchg
xchg
sub
(bad)
mov
jmp
shl
push
cs
push
lahf
into
pushf
loopne
je
retf
lahf
mov
mov
lods
jns
(bad)
shl
sub
jle
xchg
enter
out
or
jle
int
jmp
add
aaa
dec
test
dec
or
jmp
inc
dec
pop
adc
out
push
jne
jb
test
add
scas
and
daa
sbb
jl
call
loopne
xchg
and
std
or
gs
pop
dec
ins
push
pusha
cmps
adc
cli
jg
jmp
and
adc
sbb
inc
fmul
ja
jmp
int3
mov
sbb
test
jmp
lods
movs
adc
mov
and
mov
out
into
outs
adc
and
fwait
(bad)
call
push
jmp
fld
fwait
mov
fwait
xor
retf
push
and
popf
arpl
push
cmp
sbb
xchg
shr
or
mov
in
aam
add
ss
adc
xor
je
mov
fwait
lds
jns
aam
xor
neg
jecxz
in
ins
sub
fsub
pop
add
jle
std
imul
adc
fnsave
(bad)
lods
mov
add
jns
cmp
jecxz
enter
shl
jns
sub
sbb
sub
les
push
push
sub
retf
sbb
cmc
sti
shl
pop
cli
pop
jge
mov
ret
pop
nop
add
push
or
mov
dec
xchg
jne
mov
pop
add
mov
dec
mov
ret
mov
sar
in
mov
fsubp
pop
jbe
mov
in
pop
push
mov
or
push
adc
in
xchg
jo
add
jecxz
shl
pop
leave
leave
xor
jl
and
retf
mov
inc
xchg
adc
aas
or
dec
xchg
repnz
js
addps
dec
inc
pop
dec
mov
pop
mov
gs
movs
stc
mov
scas
mov
fsubr
jb
inc
ficomp
pop
cmps
pop
add
push
test
clc
sub
pop
lea
inc
ins
(bad)
and
jne
repz
fsub
fsubr
or
in
pop
(bad)
aam
enter
adc
inc
sti
xorps
cmp
inc
pop
and
sub
(bad)
jecxz
or
lock
jp
inc
sub
xchg
fcom
sbb
pop
ins
xchg
sub
jno
into
and
(bad)
arpl
or
hlt
stos
pop
cs
mul
xchg
in
fwait
test
imul
aas
and
add
je
push
mov
adc
sub
inc
xchg
cmp
mov
push
jae
pop
or
adc
xor
idiv
xor
pop
out
aas
jg
call
mov
jae
xor
ficom
aad
shl
jae
push
aas
fdiv
mov
pop
add
cli
mov
shl
jge
addr16
xchg
leave
adc
lahf
shl
daa
mov
es
and
test
daa
out
mov
loope
jp
xchg
in
mov
test
xchg
(bad)
(bad)
icebp
mov
mov
pop
adc
mov
xchg
test
das
arpl
bound
mov
out
or
and
mov
jl
daa
mov
pop
add
adc
add
mov
(bad)
stos
(bad)
mov
cmp
aaa
push
imul
sahf
ds
out
lds
jns
cmp
pop
inc
pop
sub
out
lea
mov
dec
sti
fimul
jnp
inc
scas
or
xchg
and
cdq
inc
inc
fidivr
pop
push
xlat
scas
retf
loope
adc
inc
loop
das
mov
shl
jne
call
mov
mov
pop
mov
mov
cli
not
xchg
pop
int3
pop
adc
jmp
test
xor
sub
jne
xchg
arpl
sub
sbb
jecxz
call
hlt
adc
test
and
in
fs
dec
inc
push
icebp
or
pop
pop
and
lahf
mov
cmp
sti
inc
je
hlt
mov
sbb
cdq
and
not
in
mov
mov
cs
jmp
fwait
lahf
jne
nop
je
jmp
test
pop
ret
adc
loop
xor
fbstp
or
sub
jnp
xchg
mov
ficom
lds
imul
mov
xchg
repz
out
fucom
fcomp
(bad)
mov
cmps
cmp
xor
adc
fcom
jb
pop
xchg
jge
add
in
out
rcl
pop
mov
enter
xchg
xchg
mov
cdq
dec
pushf
pop
or
mov
mov
sbb
pop
cmc
mov
out
in
pop
add
pop
or
adc
xor
in
call
push
mov
inc
repnz
sbb
addr16
ja
jecxz
cwde
cmc
push
shr
aaa
jmp
xor
dec
idiv
xchg
xchg
xchg
ja
sti
lahf
add
call
add
loope
dec
mov
(bad)
mov
jecxz
sub
sub
out
es
mov
mov
and
lods
repnz
pop
scas
aas
cdq
mov
mov
cld
xchg
pop
sbb
fld
mov
mov
push
mov
rcr
or
std
iret
ret
fld
ss
or
xchg
dec
pop
loope
xor
ror
dec
cld
stc
je
cmovno
cmp
dec
rcr
dec
dec
sti
jle
xchg
jns
aaa
nop
push
sub
icebp
cmp
jbe
sti
pusha
nop
(bad)
out
into
jp
inc
mov
add
(bad)
fimul
or
inc
jge
out
add
loopne
or
pushf
dec
jl
shl
out
and
or
jmp
es
sbb
xor
or
adc
inc
and
int
popa
sub
out
fxch
mov
clc
add
movs
loopne
shl
shr
retf
adc
ins
sub
fidiv
inc
shl
jg
ins
aam
in
jmp
sbb
(bad)
out
movs
or
cdq
shl
add
xchg
or
mov
push
adc
popa
mov
xchg
jmp
ds
pop
sub
dec
ins
aaa
dec
pop
fwait
adc
movs
cmp
mov
mov
push
jae
push
and
or
pushf
ds
mov
in
movs
sub
jne
jmp
int3
push
test
mov
fld
aam
(bad)
dec
je
push
sbb
jne
and
xor
pop
loope
push
mov
mov
pop
out
popf
add
(bad)
mov
mov
mov
push
ret
pop
adc
or
mov
idiv
jb
jne
jp
xor
bound
int3
cmp
mov
or
pop
leave
ret
and
or
mov
(bad)
cmps
es
add
add
outs
push
sub
jb
js
rcl
into
mov
lods
mov
cmp
mov
popf
and
scas
mov
inc
loope
pop
add
push
(bad)
popa
xor
into
shr
imul
mov
add
mov
call
sahf
into
lods
in
sahf
cmps
pop
(bad)
movs
xchg
cmp
adc
inc
ret
sbb
jo
xchg
(bad)
ret
icebp
and
lahf
or
sbb
adc
ja
fs
mov
pop
fidiv
stos
mov
stos
fist
movs
sub
daa
iret
pop
sbb
xor
loop
cmp
cmc
dec
(bad)
je
cs
xchg
fisttp
iret
jbe
push
test
fdiv
cmp
mov
cdq
cs
mov
repnz
nop
jl
mov
int3
xor
cmp
cmps
and
dec
arpl
inc
sbb
mov
jne
inc
scas
push
or
aam
xor
les
test
add
dec
pop
cmp
ins
xor
push
and
pop
pop
test
lds
xor
jbe
cmp
mov
fcomp
test
loop
gs
and
dec
ret
xor
mov
xor
pop
dec
xchg
add
xchg
inc
loope
mov
mov
dec
pop
les
jbe
add
fistp
in
cwde
cmp
inc
call
pop
ret
gs
retf
xor
xor
pop
stc
addr16
cli
outs
dec
add
call
mov
xlat
mov
stos
jecxz
test
fst
add
cmc
stos
dec
pop
leave
push
lods
loopne
adc
cmp
aas
fstp
sti
aaa
add
(bad)
popf
adc
mov
pushf
cmp
cmp
push
shr
mov
dec
mov
and
rcr
cmp
lea
int3
mov
cdq
ds
cwde
fldenv
cld
shr
fdivr
mov
adc
pushf
sti
push
sub
jmp
or
pop
gs
pop
sbb
retf
popa
jl
je
adc
jle
sbb
push
neg
mov
cmp
ret
jle
push
cmps
shl
sbb
pusha
xchg
daa
push
add
mov
(bad)
nop
sahf
pop
aam
ins
(bad)
sar
mov
std
xchg
sbb
enter
pop
sub
pop
(bad)
or
inc
icebp
fstp
mov
pop
dec
cmc
jno
pop
add
fidiv
add
pmaddwd
ja
aaa
sar
std
mov
hlt
mov
jno
xor
call
mov
jmp
mov
popa
pop
mov
retf
mov
js
arpl
out
cmps
popf
or
and
and
dec
inc
xor
xor
mov
inc
and
sbb
adc
outs
add
mov
or
fadd
imul
pop
push
pusha
sbb
pop
xor
and
popa
or
pop
inc
leave
mov
leave
movs
inc
imul
out
in
outs
cmp
adc
sub
loope
call
nop
idiv
jne
cmc
ret
sar
cwde
lods
dec
push
xchg
and
in
clc
fistp
mov
mov
test
stc
cmp
add
xor
add
sti
jp
xchg
lods
in
iret
ds
pop
adc
inc
and
xchg
test
mov
test
xor
movs
das
(bad)
cmp
sbb
or
or
cli
xchg
mov
test
test
sbb
ss
shr
push
aas
jp
(bad)
ins
mov
xchg
push
pusha
jmp
sub
es
test
pusha
out
dec
sbb
or
fcomp
imul
xor
inc
and
call
and
push
mov
sub
mov
fiadd
dec
xchg
or
adc
cmp
fsubr
mov
xchg
pop
mov
or
out
pop
mov
cmp
sbb
adc
pop
ss
icebp
inc
js
lods
xor
gs
pop
ins
ret
cmp
or
cmp
cmp
out
xchg
rcr
cmps
push
cmc
xchg
xor
(bad)
pushf
push
(bad)
jmp
inc
stos
cdq
jecxz
clc
jp
aam
fistp
out
movs
push
outs
ret
mov
out
pop
loope
aaa
add
pop
sub
test
and
jae
mov
cmp
dec
pop
mov
xchg
jl
cmp
nop
es
(bad)
in
clc
shl
pop
loop
adc
mov
ja
test
imul
inc
or
adc
mov
stos
test
push
aas
xor
fisub
fld
retf
lods
jp
add
inc
cmp
inc
pushf
cli
daa
cdq
cld
scas
sbb
jp
sbb
arpl
fisub
out
aam
xchg
push
jbe
push
ins
and
lods
inc
daa
fist
adc
es
jle
arpl
mov
aas
jp
cmps
or
mov
enter
mov
mov
add
sub
push
daa
sbb
js
int3
movs
cdq
clc
sub
and
mov
xchg
cmp
in
sub
leave
popa
inc
inc
mov
icebp
mov
and
out
push
es
add
adc
and
cmps
cmc
inc
jo
cmp
mov
xchg
leave
rol
inc
shrd
push
fiadd
ss
test
imul
test
std
ja
add
mov
not
aad
cmp
cmp
ss
mov
mov
xor
inc
arpl
cmp
test
push
retf
arpl
aaa
mov
add
add
lods
inc
pop
into
ins
leave
gs
and
mov
repnz
mov
jbe
sbb
sbb
scas
fld
jmp
adc
push
xor
jl
cwde
sar
ret
sbb
sbb
shl
dec
gs
loope
lods
pop
outs
push
les
push
xor
int3
sub
sar
js
pop
(bad)
xor
cmps
in
adc
jecxz
ret
cmp
test
push
and
out
mov
(bad)
ficom
sar
outs
enter
fs
jge
or
lods
retf
(bad)
dec
repnz
cs
cmp
adc
stc
mov
xor
pop
ja
cmc
fdiv
xor
dec
xchg
clc
mov
stos
inc
xlat
cmp
addr16
mov
shr
adc
scas
retf
push
movs
push
xlat
mov
nop
retf
xchg
inc
mov
sahf
cli
or
and
outs
addr16
repz
xchg
pop
ds
add
pop
retf
(bad)
push
mov
mov
mov
jle
adc
cmp
xchg
jp
mov
fcomip
or
sti
mov
fnstsw
or
out
outs
add
adc
xlat
(bad)
pop
jmp
or
cwde
add
out
mov
mov
leave
cmp
retf
add
inc
jmp
in
jae
jae
jge
push
bnd
out
inc
pop
sbb
push
inc
lea
add
daa
cmp
pop
push
add
push
ds
hlt
test
mov
mov
push
test
pushf
enter
jo
sbb
xchg
mov
sub
into
rol
add
mul
sub
in
repz
iret
xor
mov
retf
les
mov
shr
lods
hlt
(bad)
jne
lahf
lahf
adc
xchg
fmul
int3
pop
pusha
ds
lods
mov
mov
clc
js
push
push
out
inc
mov
enter
inc
icebp
popf
loopne
outs
cmc
pop
sbb
pop
stos
jmp
out
mov
lea
sbb
push
cmp
add
cmp
in
mov
dec
dec
popa
outs
inc
xor
inc
fist
outs
mov
loop
xchg
xchg
clc
sub
or
popa
fsub
push
aad
test
jp
or
mov
cmps
rol
push
cmp
fisub
pop
push
xchg
adc
adc
loope
xchg
call
pop
std
das
lock
xor
bound
and
repz
ss
and
ja
xor
push
dec
or
adc
mov
in
(bad)
mov
push
ins
pop
xor
clc
ds
pop
add
xchg
xchg
fnsave
inc
int
aam
push
clc
cmp
sbb
and
pop
cmc
mov
inc
xchg
fisubr
retf
mov
sbb
jg
add
xchg
lods
sbb
and
in
lds
pushf
jo
inc
cmp
les
push
mov
stos
(bad)
pushf
sub
bt
(bad)
jmp
push
push
mov
jmp
mov
daa
leave
cmps
and
xchg
or
psubd
mov
sar
mov
add
or
sti
xlat
lods
fs
push
mov
outs
xor
cld
addr16
std
xor
jl
ins
sub
pop
test
add
xchg
hlt
lds
out
jb
pop
add
adc
sbb
push
js
imul
jg
pop
add
call
fwait
sbb
cli
mov
inc
sub
je
xor
shl
inc
cmp
xor
out
mov
mov
je
rol
jle
cmp
add
fstp
push
out
out
push
sti
(bad)
dec
jb
xor
sub
ret
inc
mov
mov
xchg
adc
(bad)
sbb
mov
test
adc
arpl
inc
enter
push
je
xor
push
jge
movs
imul
push
dec
jg
sub
in
inc
sub
sbb
and
xchg
hlt
les
jmp
popa
mov
xor
mov
js
into
cmp
mov
clc
les
(bad)
pop
sub
jle
mov
mov
dec
jae
leave
fild
loopne
ja
inc
jecxz
rcr
cwde
into
inc
mov
jp
repnz
add
retf
and
cmps
aad
pop
jp
pusha
lods
les
pxor
sahf
test
mov
cmp
mov
fdiv
int
fldenv
mov
or
sub
inc
sub
or
mov
xchg
pop
repnz
retf
xchg
sbb
push
imul
addr16
and
or
(bad)
(bad)
in
inc
mov
push
outs
rol
inc
xchg
add
and
loope
mov
and
add
adc
xor
or
popf
gs
retf
mov
sub
ss
int3
mov
test
pop
jo
mov
pop
cmp
loope
inc
les
cwde
fbld
add
xor
dec
setle
cli
inc
in
adc
dec
xchg
xchg
dec
sub
mov
mov
sbb
cmps
call
mov
ret
dec
adc
cmp
mov
inc
push
repz
push
and
mov
mov
sbb
or
test
cmp
cmp
cmp
mov
movs
jb
(bad)
pop
fcom
loop
xchg
gs
and
scas
push
jle
xor
xor
or
icebp
sub
add
cmp
or
bound
inc
push
xor
push
(bad)
cld
lea
pop
iret
pop
outs
add
push
out
mov
(bad)
sahf
cmc
(bad)
jg
or
fs
mov
jge
mov
cwde
daa
dec
dec
pop
fild
loope
call
push
call
stos
push
cmp
mov
inc
xchg
mov
xchg
aad
pusha
pushf
xor
cmps
lahf
xor
data16
mov
fiadd
mov
mov
adc
rol
sub
xchg
mov
dec
mov
cwde
stos
outs
js
jns
mov
rol
push
jno
xchg
add
xor
xor
sbb
inc
fwait
or
test
nop
fcom
dec
aam
in
mov
jbe
add
dec
rol
enter
nop
sbb
xlat
mov
xor
retf
add
enter
lods
mov
fist
lock
fistp
jnp
xchg
dec
adc
adc
scas
add
jns
xchg
fs
(bad)
cld
sub
pop
xor
inc
arpl
rol
xchg
xchg
sti
push
pmovmskb
cdq
dec
(bad)
test
mov
fmul
or
leave
inc
test
xchg
inc
fdiv
dec
xor
outs
enter
cmp
daa
cwde
out
xchg
add
popa
clc
or
lahf
int
xchg
shl
aas
(bad)
fcomp
outs
call
(bad)
push
sub
jg
jmp
or
push
mov
xchg
inc
xor
inc
pop
lds
bound
and
sbb
ret
inc
mov
imul
imul
jo
jmp
and
xlat
lods
inc
rol
push
or
push
daa
(bad)
out
popf
mov
pop
dec
push
add
push
sbb
retf
jl
cmp
fcom
add
inc
mov
int3
xor
fcomp
(bad)
jne
es
(bad)
mov
test
fild
xor
sbb
ret
add
cmp
cmp
test
lods
sub
aad
inc
mov
fadd
int
mov
lods
jecxz
(bad)
mov
out
pop
jae
ret
(bad)
pop
test
std
mov
xor
sbb
dec
sar
pop
sub
jb
inc
clc
pop
mov
xor
mov
lock
add
(bad)
adc
inc
and
pop
pop
cs
and
and
dec
clc
ss
pop
mov
xchg
xchg
lds
mov
movs
je
(bad)
dec
inc
pop
push
fisub
jne
icebp
(bad)
mov
aaa
pop
sub
(bad)
jp
xor
mov
xchg
pop
mov
call
iret
out
in
mov
icebp
ror
xlat
mov
loope
push
or
ror
mov
arpl
jne
jb
dec
sub
in
dec
cmp
mov
sbb
xlat
jecxz
stos
call
mov
jne
sbb
jg
aad
inc
jnp
adc
pushf
into
inc
push
out
(bad)
mov
(bad)
test
cmp
adc
jg
jmp
or
cmps
retf
xchg
outs
test
inc
mov
icebp
std
mov
cmps
les
dec
cmp
popf
ficomp
mov
or
and
cmp
cs
xor
fidivr
fild
aam
pop
sbb
mov
or
xor
(bad)
pop
dec
inc
mov
cmp
pop
shl
xor
xor
loop
test
pop
das
inc
sahf
dec
ins
aaa
dec
inc
mov
ja
iret
rcr
fnstsw
cs
jle
mov
aas
add
sbb
ror
push
cmp
mov
adc
bound
idiv
and
(bad)
out
and
fld
mov
icebp
xchg
dec
mov
test
ror
pop
fcom
xchg
mov
in
mov
mov
or
mov
add
int
out
jecxz
arpl
or
and
cwde
push
repz
fsub
jg
push
mov
bnd
mov
push
ret
sahf
pop
xchg
std
cwde
loope
test
test
cld
push
ret
xor
inc
sub
movs
xlat
xchg
(bad)
cli
in
mov
jns
cmp
lods
push
mov
loope
fwait
shr
or
mov
(bad)
mov
mov
data16
push
or
inc
cs
mov
jno
jmp
in
scas
add
xor
repnz
test
ja
push
adc
leave
mov
xor
adc
add
sbb
mov
sbb
inc
add
(bad)
std
nop
push
daa
jmp
push
mov
mov
test
mov
mul
adc
jecxz
fmul
mov
aas
es
imul
das
lods
fadd
mov
jb
mov
dec
sbb
fdiv
jnp
push
adc
push
xchg
(bad)
cmp
out
or
popa
and
cmps
std
mov
aam
pushf
dec
mov
nop
stos
fdivr
xor
je
inc
adc
add
sbb
jae
outs
jae
aam
kandb
sbb
in
cdq
adc
mov
ds
or
aas
or
and
or
mov
retf
inc
sub
adc
cmp
jecxz
leave
dec
sub
pop
sub
out
xchg
jns
inc
sbb
xlat
aaa
jge
das
inc
movs
ja
jmp
(bad)
xchg
cmp
adc
movs
test
xor
mov
rcl
sahf
sub
loop
xor
(bad)
ficomp
push
lahf
inc
leave
jmp
push
xor
or
test
pop
mov
mov
add
data16
xor
inc
cmp
inc
movs
sub
mov
mov
nop
mov
dec
arpl
cdq
sub
xlat
fstp
popa
and
arpl
inc
loopne
ret
adc
jl
inc
pop
inc
push
sub
call
sbb
(bad)
inc
push
stos
fist
fdiv
mov
pushf
nop
jge
mov
mov
or
mov
scas
dec
jp
dec
dec
lock
push
jmp
pop
xchg
xor
mov
call
fdivr
sub
mov
fcom
mov
test
test
sbb
js
jp
shl
mov
adc
ins
mov
test
sbb
pop
ins
xchg
test
jns
or
push
ja
jae
xor
jns
or
fstp
out
arpl
enter
xchg
push
mov
sub
cdq
jb
dec
cmp
jns
popa
and
lock
das
(bad)
aam
push
lock
lods
jp
sub
xchg
sub
sub
mov
(bad)
mov
xchg
mov
aaa
gs
push
mov
out
ss
add
sahf
xchg
lds
cli
pop
movs
ret
fdiv
lds
cld
sbb
cs
pop
push
xor
nop
sub
mov
imul
dec
dec
ret
les
(bad)
out
into
test
ins
daa
pop
movs
sub
imul
sub
das
stos
movs
jle
loop
lock
out
aam
dec
sbb
lods
inc
js
jle
loop
ficom
sub
xlat
inc
mov
loope
cmp
pop
lock
inc
xchg
leave
push
inc
stos
and
in
call
stc
mov
xchg
dec
add
add
or
xchg
(bad)
fcom
aaa
test
loop
adc
dec
mov
pop
pop
jl
push
and
mov
ja
rcr
adc
fcomp
push
push
sbb
call
jae
add
push
sub
(bad)
jb
jmp
out
scas
test
xlat
add
jg
movs
cmp
and
bts
jb
mov
cmp
(bad)
ja
and
(bad)
enter
arpl
cmp
mov
push
loopne
pop
icebp
push
add
daa
push
add
jle
in
or
(bad)
sub
sub
outs
test
lea
call
sub
fwait
mov
dec
ins
aas
test
mov
scas
int
std
mov
popf
popa
push
je
cwde
and
mov
jo
fcmovb
pop
rcl
mov
jb
or
lods
dec
pop
dec
adc
fwait
jno
sbb
cdq
xor
mov
rcl
mov
ficom
sbb
repnz
mov
cmp
mov
psllw
xchg
repz
movs
sub
push
push
mov
xor
mov
ficomp
xor
mov
ja
xlat
xchg
popf
out
dec
pushf
cmp
pop
lahf
sbb
fcmovnu
lods
shr
xchg
mov
or
jl
call
dec
outs
pop
jo
add
jmp
xlat
imul
xor
push
out
mov
and
lea
mov
push
stos
stos
xor
mov
dec
mov
retf
mov
ret
mov
loop
xor
cmc
mov
mov
jg
in
cmp
sbb
outs
mov
mov
shl
fidivr
bound
or
mov
int3
imul
cmp
mov
bound
pavgw
sbb
xchg
daa
adc
in
(bad)
iret
jae
sub
icebp
mov
fwait
(bad)
xor
fidiv
mov
bound
repnz
sbb
cmps
test
inc
fwait
mov
jge
and
fadd
jb
sbb
sbb
push
enter
shl
push
cmps
xor
out
and
repnz
mov
lea
clc
rcr
xchg
fmul
repnz
sbb
mov
mov
and
mov
ins
mov
xchg
(bad)
jmp
imul
and
pop
dec
xor
mov
pop
(bad)
pop
imul
cwde
sub
lods
cmp
xchg
jmp
ja
mov
(bad)
or
in
ins
mov
rol
xor
movs
daa
in
jp
pop
inc
(bad)
adc
mov
lahf
cs
xchg
outs
out
mov
add
mov
cdq
inc
sub
pop
add
or
sub
leave
dec
inc
movs
jae
mov
add
stos
adc
cmp
pop
cmp
add
imul
mov
push
std
fcmovbe
js
sbb
clc
sbb
push
add
fs
xchg
in
mov
dec
mov
jl
ss
jo
sbb
repz
push
mov
movs
call
and
dec
fsubp
cld
cmp
xor
es
retf
adc
repnz
cmp
imul
jbe
jo
dec
fisub
(bad)
clc
xchg
push
pusha
ret
sbb
adc
xor
mov
stc
loope
mov
andnps
mov
inc
into
lahf
int
and
pop
cmps
neg
xchg
sbb
pushf
minps
cdq
aas
cmp
in
pop
sbb
xchg
cmp
adc
xor
push
push
repnz
jno
sub
or
mov
ret
aas
or
cdq
jle
xor
aad
and
popf
lahf
mov
das
ja
xor
das
jne
cmp
push
ret
mov
pop
outs
jmp
out
movs
ins
popw
ficomp
in
lds
push
push
les
das
mov
mov
inc
add
outs
sbb
daa
inc
arpl
mov
sbb
push
sub
dec
mov
jmp
(bad)
out
sub
jne
shl
(bad)
lods
arpl
ror
inc
addr16
mov
dec
ret
jg
cmc
(bad)
adc
loope
xchg
cld
and
xor
jge
add
pop
pop
sbb
push
sub
xor
das
outs
push
(bad)
jbe
add
jno
es
cmps
call
jae
xor
and
pop
jg
out
and
rcr
fs
cmc
push
dec
ins
enter
sbb
xchg
daa
int3
sub
add
or
sti
sub
ja
hlt
iret
out
(bad)
rcr
sbb
sub
stc
dec
add
pop
out
mov
out
jmp
int
inc
sar
pop
pop
test
adc
mov
inc
ss
adc
push
popa
cmp
clc
pop
into
in
dec
push
sbb
mov
inc
jbe
dec
xor
movs
add
ss
mov
xchg
sbb
div
(bad)
mov
mov
aas
fst
(bad)
jae
sti
out
mov
shl
enter
les
adc
cmp
cmc
stos
sub
cs
jl
push
or
sti
outs
jae
xchg
es
test
mov
pop
test
and
cmc
cmp
fiadd
jp
aad
jbe
mov
mov
sbb
aas
sbb
jl
and
retf
jl
push
aas
sbb
cmp
gs
or
jle
pop
ret
jne
int3
in
sbb
pop
mov
xor
inc
std
fistp
jo
sti
(bad)
aaa
sbb
out
rol
out
ins
cwde
xchg
add
out
xor
jmp
pop
int3
cmps
and
es
mov
or
fld
ds
dec
dec
ss
std
xchg
pop
mov
xor
not
test
imul
dec
dec
mov
int3
loop
add
jnp
pop
jl
mov
adc
cdq
popf
(bad)
retf
adc
dec
jbe
jmp
test
ja
pusha
and
aaa
in
adc
jne
mov
out
push
pop
call
xchg
and
jg
or
xchg
mov
cld
out
outs
mov
test
daa
hlt
or
repnz
adc
adc
xchg
dec
popa
pop
addr16
adc
out
add
rcr
sbb
loope
mov
push
or
test
outs
mov
xchg
mov
out
sub
add
js
cmp
push
(bad)
stos
in
push
arpl
jmp
cmp
fbld
pop
xor
jmp
sub
jg
inc
mov
or
out
xlat
mov
(bad)
int
ror
mov
retf
adc
pop
inc
(bad)
dec
push
push
cmps
(bad)
lods
push
mov
adc
es
jo
jmp
fs
das
std
sbb
push
jno
mov
xchg
retf
pop
outs
jl
cmp
movs
mov
and
gs
inc
(bad)
ins
mov
sub
fnsave
mov
hlt
xchg
test
mov
pop
jecxz
mov
aaa
loop
out
mov
and
push
lds
cmp
mov
jae
ds
dec
dec
xchg
pop
dec
fsub
ja
mov
mov
pushf
mov
fprem
mov
xor
or
mov
cmps
mov
inc
jnp
cmp
add
(bad)
rcr
mov
fidivr
push
scas
dec
sti
cmp
inc
inc
rol
mov
ja
(bad)
sub
push
mov
adc
xor
push
dec
sbb
mov
dec
pop
sbb
mov
retf
mov
mov
adc
nop
add
daa
ja
xchg
(bad)
shl
fsubr
sbb
cld
mov
dec
jne
cmc
in
inc
and
mov
nop
push
and
lods
pushf
pushf
push
cmp
mov
jg
mov
pop
or
sahf
xor
mov
icebp
jbe
cmps
inc
push
loope
ror
adc
push
mov
retf
call
push
popf
jle
mov
ds
xchg
int3
mov
sub
into
fiadd
cwde
jecxz
retf
cmp
push
push
bound
stos
xchg
xor
cmp
push
cli
mov
jbe
sub
and
iret
sub
test
mov
xor
test
ret
jl
imul
test
xchg
mov
xor
jne
mov
pushf
adc
mov
in
icebp
test
or
cmp
xor
lahf
sbb
xor
add
loopne
shl
ror
cli
sub
test
rol
cli
or
data16
xlat
movs
jo
pop
and
sbb
iret
and
cmps
mov
mov
loope
mov
bound
or
sub
mov
rcr
or
ja
xchg
mov
xor
xor
je
or
(bad)
dec
in
push
or
mov
fld
popf
daa
inc
mov
cmp
inc
shr
adc
data16
jp
xchg
xor
(bad)
cwde
jmp
sub
dec
cdq
jp
jno
cmp
ss
sbb
mov
and
lods
iret
xchg
jg
inc
dec
out
mov
repnz
or
adc
push
cwde
xor
pop
mov
adc
or
repz
sar
pop
fistp
(bad)
mov
jno
push
and
xchg
scas
dec
in
xchg
outs
(bad)
inc
movs
jbe
or
dec
mov
imul
push
int
ins
lods
mov
lock
js
sbb
aaa
push
cwde
adc
adc
or
movs
cwde
xchg
push
ficom
jmp
inc
mov
jb
mov
out
sti
(bad)
push
mov
mov
mov
add
ret
mov
xchg
add
popf
xchg
sbb
jbe
ins
xchg
lds
sub
jmp
xlat
repnz
xor
sub
inc
pop
inc
adc
jbe
imul
push
push
fiadd
leave
cmp
test
xor
pop
dec
(bad)
add
xchg
mov
or
rcl
dec
mov
xchg
test
lea
push
cmps
mov
jb
xor
aaa
lock
add
fld
aas
lea
scas
pmulhuw
dec
std
cmps
mov
test
mov
push
iret
xchg
imul
pushf
lea
lods
lods
nop
int
mov
cmp
sbb
jg
inc
and
pop
(bad)
sahf
inc
cdq
push
dec
imul
test
cdq
es
fs
xor
ss
add
repz
mov
rcl
(bad)
aam
jns
xor
sahf
xor
xor
mov
jle
mov
mov
sbb
push
cli
icebp
or
xor
and
dec
xchg
cli
mov
and
add
stc
push
mov
sbb
dec
or
xchg
stos
outs
test
sti
and
enter
push
aas
pusha
cli
das
outs
push
in
in
leave
popa
push
popf
xor
mov
call
(bad)
into
rcr
jecxz
outs
cld
scas
iret
call
jg
adc
dec
(bad)
cmps
and
push
lods
mov
imul
mov
cmp
mov
and
pop
retf
jmp
or
xchg
mov
clc
xchg
cmps
gs
xor
gs
les
out
repz
mov
add
arpl
out
cs
in
jbe
dec
or
das
cmc
out
ja
daa
xchg
stos
push
sub
inc
ja
adc
mov
and
popf
out
movs
inc
outs
mov
jecxz
mov
aaa
inc
out
ins
dec
xor
and
imul
lods
mov
mov
xchg
adc
cmp
js
mov
sbb
sub
and
dec
imul
cmp
mov
sub
pop
jbe
int
adc
xchg
aad
adc
stos
mov
cmc
sbb
mov
sub
mov
xchg
inc
repz
lods
dec
dec
jle
lods
cmp
das
inc
sbb
das
xlat
inc
jle
jle
out
xchg
pushf
pop
and
inc
and
adc
dec
mov
add
jmp
fcmovb
dec
push
inc
into
lods
xchg
(bad)
mov
or
xchg
inc
xor
cdq
neg
loope
and
xlat
mov
sub
mov
cwde
(bad)
in
dec
xchg
xor
cdq
push
call
sbb
cmps
push
mov
int
dec
mov
mov
ds
and
jae
mov
daa
push
js
addr16
mov
mov
sub
sbb
or
inc
leave
jns
adc
mov
icebp
sub
or
adc
cmp
push
add
je
and
and
push
std
dec
adc
inc
(bad)
jmp
xchg
aas
sar
xlat
enter
mov
daa
jmp
inc
aas
outs
mov
xchg
sbb
xchg
sbb
sbb
(bad)
pop
ja
out
popf
dec
push
or
fldcw
xor
clc
retf
ja
inc
inc
scas
jnp
test
(bad)
push
xor
xchg
push
jg
pop
in
and
(bad)
xor
lahf
dec
mov
mov
fmul
add
mov
push
mov
test
push
jge
movs
call
jmp
mov
call
lea
movs
add
sub
jb
mov
pop
add
loopne
mov
adc
pop
inc
in
jae
jle
std
daa
sar
(bad)
jecxz
ror
imul
add
mov
push
and
rcl
(bad)
xchg
aaa
ins
test
gs
pop
test
(bad)
(bad)
mov
push
sub
ret
rcr
mov
cmps
mov
cmp
ins
inc
xchg
sub
sub
into
outs
aaa
jecxz
mov
xchg
mov
pop
push
das
gs
push
fldcw
adc
out
cmp
xor
rol
dec
ja
pop
fs
mov
xchg
cmp
cmps
or
ja
fcom
xor
pop
pusha
std
stos
jo
pop
adc
ror
(bad)
movs
mov
icebp
mov
pop
sbb
repz
xor
ja
(bad)
shl
mov
sub
dec
xchg
int3
inc
jne
mov
sub
and
or
ja
call
pop
ret
rcr
mov
xchg
sub
or
mov
daa
fidivr
sbb
scas
mov
dec
cmp
dec
rol
and
lods
dec
popa
mov
movs
cli
sti
nop
sub
imul
xchg
test
mov
xor
addr16
add
into
and
jmp
loopne
or
mov
test
mov
xchg
mov
in
jbe
xchg
cli
and
lock
loop
push
add
aaa
fcmovu
mov
mov
inc
cli
pop
ret
stos
and
mov
xlat
add
sub
pop
dec
and
sbb
add
dec
push
cmc
dec
mov
mov
push
push
sbb
and
daa
cld
jne
push
sbb
retf
sbb
mov
aad
dec
pop
jecxz
pop
call
xor
or
pusha
(bad)
and
jmp
sub
cmp
(bad)
mov
mov
push
and
pop
pop
stos
fwait
stc
ficomp
arpl
cld
adc
(bad)
ss
sbb
stc
gs
mov
and
pop
adc
data16
test
in
or
movs
mov
rcr
int
shl
stos
push
cmovg
push
mov
xchg
push
enter
dec
add
icebp
jmp
pop
div
ins
je
daa
adc
inc
adc
dec
sub
(bad)
jo
pop
sbb
jge
mov
mov
enter
aaa
fcomi
loopne
inc
lds
sar
inc
lock
jnp
xchg
mov
cmps
or
or
test
loopne
lock
icebp
popf
mov
mov
fcmovnu
xor
xlat
jo
cli
mov
ret
enter
pop
sub
push
jg
popf
xor
lods
(bad)
push
ror
or
push
aad
ret
push
add
mov
and
xor
inc
mov
dec
sub
mov
pop
or
test
jmp
pop
ret
bound
mov
aam
xor
pop
ficom
cli
ins
lods
mov
fistp
sti
mov
inc
(bad)
ret
mov
popa
div
fistp
pop
in
enter
into
in
mov
push
je
leave
jecxz
push
in
dec
adc
xchg
pop
cmp
dec
mov
sti
int
or
cmp
lods
stos
add
jnp
lahf
mov
sbb
inc
imul
(bad)
jmp
out
sbb
(bad)
stc
inc
mov
leave
mov
bound
jmp
pop
push
jl
mov
sti
dec
push
jmp
dec
pop
clc
(bad)
xchg
xchg
cmc
mov
ficom
call
pop
outs
cmp
repz
and
fldcw
stos
leave
sbb
ror
push
cmps
mov
xor
adc
stos
adc
add
or
mov
pop
push
scas
or
push
cmp
sahf
pushf
retf
mov
adc
cmp
outs
popa
icebp
adc
mov
leave
out
xor
popa
inc
leave
ror
fcomi
xor
or
or
xor
push
mov
pop
inc
fadd
dec
mov
iret
lock
adc
cdq
cmp
adc
push
mov
push
lds
inc
retf
pop
pop
enter
xor
sbb
lahf
into
mov
fdiv
pushf
scas
js
adc
add
dec
add
es
inc
out
call
out
cmc
loope
and
dec
add
ret
ds
or
push
test
adc
aam
cmps
(bad)
mov
sub
cmp
pop
push
stos
or
enter
jmp
cmp
push
jp
push
(bad)
std
pop
hlt
ins
sti
jecxz
mov
jo
rol
cmp
sub
lahf
jg
xchg
sar
scas
add
clc
mov
pop
inc
neg
inc
push
rcr
daa
push
inc
adc
hlt
icebp
jmp
xor
fimul
sub
add
daa
lock
into
inc
adc
add
test
psubsb
cmp
(bad)
mov
pop
arpl
mov
add
rcl
jmp
jg
or
push
test
push
and
lods
inc
push
mov
push
movs
loopne
mov
pop
in
out
leave
dec
cmp
div
in
dec
add
pop
mov
or
xchg
lds
das
jp
aad
cmps
mov
jae
pop
rcl
in
mul
mov
push
add
cmp
rcl
pop
adc
dec
cld
push
std
mov
ins
out
aaa
aam
repnz
push
mov
pop
inc
cmc
icebp
mov
jb
mov
xchg
fist
clc
xor
or
or
adc
jns
sbb
xchg
js
popf
or
and
jnp
cmp
mov
push
inc
or
lods
or
cmp
push
adc
xchg
mov
retf
or
ins
fsubr
(bad)
dec
gs
cmp
or
sbb
in
(bad)
xor
das
inc
add
movs
std
pop
mov
mov
push
push
cmc
sbb
enter
xlat
adc
leave
xor
(bad)
lods
out
pop
add
in
mov
sbb
arpl
mov
xor
jmp
imul
(bad)
ja
je
adc
xor
mov
in
mov
add
xchg
jle
sbb
std
sub
dec
xor
cmp
and
inc
pop
cs
jmp
das
loop
icebp
inc
push
inc
sbb
ds
push
imul
xor
popf
xchg
pop
and
mov
ja
pop
or
sub
mov
xor
push
cwde
into
call
pop
dec
push
cwde
inc
push
mov
arpl
cmps
sub
loope
pop
aaa
addr16
dec
sub
mov
xchg
cmp
adc
jae
jno
push
xor
call
cmp
outs
movs
ss
add
xchg
mov
shl
fnstcw
sbb
pop
ret
mov
add
xchg
xor
xchg
push
sbb
out
fdivr
lods
and
cwde
jnp
sar
gs
or
sahf
and
mov
mov
addr16
or
call
xor
out
in
inc
or
cdq
sar
scas
js
fidivr
jmp
mov
fwait
stc
xor
cwde
fmul
pop
stos
mov
dec
popa
push
inc
push
cmc
sub
(bad)
aam
and
clc
retf
fsub
scas
ins
add
add
push
fimul
inc
retf
push
jns
ds
ins
ins
repnz
xchg
retf
mov
into
mov
neg
and
in
sbb
sbb
cdq
add
sbb
xchg
sbb
or
and
dec
addr16
bound
inc
aad
push
mov
jo
in
jmp
mov
out
lods
pop
inc
popf
jno
bound
mov
sub
pop
ror
addr16
cmp
or
std
sub
test
dec
inc
into
mov
retf
mov
cmps
sub
scas
(bad)
in
add
shl
mov
nop
jmp
(bad)
cmp
sbb
cli
lock
int
adc
pop
mov
pop
test
push
les
push
mov
dec
arpl
js
sahf
out
dec
call
aam
jmp
mov
fist
jl
out
jae
inc
and
(bad)
push
sbb
and
lahf
xchg
xlat
inc
adc
out
mov
adc
jecxz
dec
jl
and
sbb
ins
arpl
in
fldcw
or
pop
pusha
and
push
adc
mov
jge
fldcw
pop
cmc
fucom
cmp
cs
xchg
push
psubsb
ins
xor
dec
fist
and
sti
mov
retf
and
ficomp
adc
mov
lods
or
jmp
mov
add
add
or
adc
int3
inc
jmp
daa
dec
jle
cmp
mov
sbb
das
pop
jne
jae
out
fs
push
jno
lahf
mov
mov
fucomp
in
push
push
imul
(bad)
xlat
jp
add
mov
jnp
cmp
push
push
or
push
mov
cmp
adc
adc
dec
inc
mov
pop
sbb
rol
push
stos
inc
mov
test
gs
jl
icebp
mov
ja
push
adc
enter
inc
xor
push
(bad)
mov
mov
or
imul
jae
mov
loope
xor
xor
rcr
leave
inc
daa
or
jg
dec
dec
xor
in
stos
(bad)
mov
sub
sbb
and
xlat
cwde
fs
bound
lea
loopne
aaa
out
int
xor
call
pop
push
cmp
test
push
pop
loopne
hlt
jle
cwde
ror
into
push
ss
cld
and
cmps
test
mov
adc
mov
xchg
add
jecxz
jmp
aas
fcmovb
push
dec
inc
in
cmp
cmp
and
adc
aas
inc
fiadd
das
and
mov
and
pop
mov
cmp
mul
jp
outs
and
js
push
and
pop
jb
mov
pop
mov
xchg
mov
nop
push
sub
in
cwde
push
inc
xor
and
adc
fistp
lods
add
nop
jmp
outs
pop
jnp
jge
fidiv
lahf
jne
lea
call
or
xor
(bad)
cmp
dec
mov
fs
xchg
ret
sti
dec
pusha
add
push
data16
cld
mov
sub
and
ins
fbstp
cmp
xlat
or
mov
cmp
mov
aad
jo
out
lds
fwait
inc
repnz
jb
(bad)
jg
jmp
jmp
loop
fisub
iret
ds
sub
(bad)
mov
sub
jg
cs
push
mov
push
scas
repnz
pop
bound
xchg
inc
imul
pop
stos
and
dec
push
stc
mov
mov
fidivr
xchg
cmp
add
lahf
xor
mov
xor
cs
push
cdq
mov
shl
or
xor
jge
sbb
mov
jl
es
sub
das
lea
rcl
and
mov
scas
es
int
dec
sbb
xchg
adc
clc
aam
sbb
sub
jae
and
xchg
sar
mov
imul
imul
(bad)
mov
adc
mov
sub
xchg
mov
xchg
stos
dec
mov
lods
lock
or
xchg
inc
xor
js
out
add
push
mov
or
ret
les
mov
aam
pop
hlt
xor
lahf
ins
push
add
daa
mov
push
pop
jne
mov
add
retf
scas
fmul
add
ffree
daa
fld
lea
add
test
neg
ins
xor
mov
sub
lea
cmp
push
push
stos
cmps
popf
dec
dec
test
push
and
jle
lds
xchg
cmp
sub
bound
test
sub
push
mov
cmp
add
pop
mov
and
fsub
pop
popa
cmp
push
sub
mov
and
adc
ss
mov
into
add
jl
imul
and
xor
pop
pushf
dec
xchg
movs
js
jge
sbb
stc
xchg
popa
rcr
rcr
test
pop
xor
leave
pop
cmp
fimul
fs
sbb
adc
lock
pop
mov
xchg
je
scas
(bad)
(bad)
xlat
lock
mov
stos
std
jl
nop
out
xchg
mov
sub
call
mov
xchg
mov
fst
sub
adc
in
std
adc
call
mov
cld
push
seta
sbb
mov
and
and
retf
sbb
arpl
ret
aam
jl
ficomp
xchg
inc
sahf
scas
cmps
scas
fidivr
gs
mov
or
mov
(bad)
std
jmp
cmp
call
cld
jne
jmp
sub
fld
fmul
add
inc
mov
mov
(bad)
xor
mov
push
loope
sbb
scas
inc
jnp
jmp
imul
pop
mov
sub
(bad)
test
inc
fwait
mov
xor
mov
jo
mov
adc
xor
cmps
mov
mov
aad
popa
mov
xor
pop
fdiv
in
jmp
not
out
jno
retf
jo
inc
fbstp
test
bound
jp
fidivr
mov
sub
inc
out
and
cdq
mov
lock
pop
fwait
jnp
(bad)
pop
iret
adc
xchg
inc
mov
mov
and
pop
imul
inc
ret
mov
int3
lock
ja
pop
inc
jl
and
leave
cmps
sub
repz
ins
test
add
hlt
add
popf
jne
es
sub
ins
fs
or
arpl
loope
push
ins
pop
mov
or
stos
sub
pop
out
jne
pop
mov
add
in
xchg
in
in
(bad)
rcr
xchg
leave
or
repz
sbb
jo
(bad)
adc
dec
cdq
sub
sar
ss
push
push
or
adc
not
push
pop
push
repz
(bad)
sbb
xchg
mov
scas
jle
fwait
or
into
mov
sti
(bad)
cld
pop
out
data16
xchg
enter
pop
cmps
pop
mov
sbb
and
mov
imul
bound
mov
addr16
lods
mov
ficomp
stc
cmc
popa
add
in
mov
inc
aaa
bound
lahf
(bad)
sub
or
movhlps
and
adc
arpl
pop
js
jmp
pop
repz
icebp
inc
inc
mov
popf
pop
in
mov
xchg
rcl
imul
jne
es
int3
stos
test
jl
add
movs
jno
inc
mov
ins
xchg
add
inc
jge
ja
leave
or
sbb
daa
mov
xchg
in
xchg
mov
movs
pop
push
jg
add
xchg
sbb
icebp
pop
lea
mov
sub
xchg
fstp
dec
cmp
cs
push
inc
fcomp
add
pop
push
pop
lods
fsub
(bad)
out
adc
paddsw
jg
push
sub
xor
(bad)
pop
pop
sub
call
mov
or
sub
adc
mov
fadd
adc
fsub
cmp
int
arpl
lahf
loopne
cmp
std
(bad)
repnz
or
out
fistp
cmc
add
mov
retf
shl
pop
in
push
add
sub
mov
dec
cmp
jge
out
push
and
test
mov
out
retf
cwde
pop
ror
cmc
mov
not
mov
mov
stos
icebp
out
adc
xchg
dec
cmp
xchg
xchg
mov
adc
pop
(bad)
mov
xor
js
sub
cmp
in
in
out
aad
add
sar
jg
mov
dec
mov
dec
push
fcomp
scas
arpl
iret
dec
cdq
loope
mov
mov
push
and
sub
ret
and
fistp
xor
jbe
retf
push
jb
out
or
leave
jg
and
jg
push
sahf
aaa
jg
jo
arpl
scas
push
pop
xchg
push
sbb
shl
movs
jne
push
out
call
(bad)
into
pusha
push
xor
cld
loopne
xor
pop
push
jmp
push
fcomi
fdivr
mov
je
fwait
sub
cmp
mov
add
paddusb
mov
pop
ret
xor
or
sub
cmc
adc
pusha
idiv
adc
iret
push
aam
pop
hlt
xor
aam
rol
inc
movs
mov
dec
nop
adc
mov
fs
lahf
cmp
(bad)
lods
sbb
out
repnz
std
mov
mov
jmp
inc
mov
dec
dec
dec
imul
mov
ret
clc
sub
popf
imul
(bad)
clc
adc
dec
xchg
push
(bad)
or
cmps
scas
jmp
int3
jmp
dec
aad
outs
clc
adc
dec
push
xor
stos
stc
int
daa
lock
jnp
cmp
inc
test
inc
sub
stc
outs
sbb
es
hlt
les
imul
pop
jl
fdiv
adc
(bad)
jno
push
sub
mov
mov
sub
xchg
lea
mov
and
add
mul
jbe
outs
mov
lods
fldcw
aam
and
adc
xor
add
loop
mov
mov
(bad)
mov
sub
cmp
repz
cs
mov
fisub
inc
jmp
xor
in
fmul
loopne
out
std
loopne
stos
pop
ss
bound
setp
stos
outs
inc
hlt
dec
loopne
std
inc
lods
jle
pusha
stos
cdq
xor
in
jno
in
rcr
and
dec
jnp
aad
push
mov
add
mov
jl
arpl
push
int
rol
mov
(bad)
jne
call
fisttp
cmp
xchg
adc
and
inc
push
xor
push
enter
or
add
clc
aad
imul
mov
pop
in
sub
sahf
lahf
ret
scas
jge
push
aad
rcr
mov
xchg
mov
jge
dec
cmp
ror
jnp
mov
pop
add
mov
mov
xor
int3
loope
sub
es
cdq
pop
xchg
mov
add
add
xchg
les
xor
xor
and
xlat
gs
imul
and
popa
xlat
cmp
jne
mov
and
sar
(bad)
sbb
outs
adc
or
in
and
ss
out
cmp
sub
xor
and
ficomp
(bad)
repnz
aad
mov
cwde
inc
fsub
push
jno
sbb
aas
cmc
(bad)
hlt
jno
into
adc
adc
test
mov
push
ja
lods
jecxz
mov
dec
jns
dec
out
in
outs
and
lds
out
xor
ins
call
or
dec
popa
cmp
dec
scas
aad
in
cmps
inc
ja
sub
std
pop
fisttp
dec
cs
shl
jecxz
inc
lds
fs
imul
les
in
adc
in
jp
fidiv
or
jae
pop
inc
push
mov
cmc
cmp
xchg
adc
sub
das
ss
cmp
cwde
pop
pop
int
push
repz
into
imul
shl
push
sbb
movs
xchg
pop
pop
mov
sub
adc
sbb
call
mov
out
jne
repnz
cmp
mov
or
test
mov
cmp
in
cmp
enter
mov
jmp
adc
and
sub
nop
ret
call
and
mov
std
(bad)
lock
sti
test
cmps
xor
push
fnstsw
pushf
ins
cmp
out
push
pop
into
add
mov
hlt
dec
iret
jmp
jmp
add
aaa
clc
out
fs
popa
pop
mov
inc
pop
pop
inc
cmp
mov
mov
fcomp
inc
xor
cli
mov
fstp
fwait
add
lock
mov
fwait
out
sbb
mov
jmp
shl
cmp
cmp
std
in
(bad)
fwait
inc
sbb
adc
shr
dec
jmp
fist
xor
cli
or
cmp
inc
inc
inc
(bad)
xor
inc
push
mov
pop
test
mov
lods
aaa
aam
shl
adc
cmp
jmp
dec
sbb
popa
mov
mov
inc
pop
jecxz
and
imul
daa
movs
sbb
in
jge
cs
(bad)
out
inc
and
and
dec
aad
test
xchg
mov
jnp
sub
div
sub
push
mov
jp
jb
pop
xor
ins
cmp
out
rcl
pop
test
dec
jecxz
pop
cs
sub
cdq
inc
mov
aas
xchg
dec
add
arpl
(bad)
xchg
fldenv
fs
cmps
inc
xchg
sbb
jp
jnp
and
inc
xor
push
test
outs
mov
jp
mov
sti
in
add
sub
fwait
cmp
icebp
pop
cmps
push
adc
jmp
mov
mov
scas
mov
mov
movs
test
test
ins
int3
mov
dec
std
sar
test
mov
scas
pushf
xor
xchg
not
es
mov
xor
pop
xchg
pop
mov
or
cs
inc
rcl
stos
out
shl
xor
je
pop
pop
mov
jp
psubsw
mov
sahf
pop
add
mov
jns
fcmovnbe
adc
inc
pop
mov
ins
jg
repz
ds
cmp
push
imul
sahf
nop
cwde
fcom
cwde
ret
iret
loop
rcr
push
mov
pop
dec
mov
sbb
mov
mov
in
push
adc
imul
sub
(bad)
out
or
cmp
jae
clc
xchg
shr
imul
jne
cld
movs
inc
mov
sub
mov
mov
test
es
dec
jecxz
cmps
cmp
mov
pop
mov
or
outs
popa
sbb
adc
ror
jo
loope
pop
inc
and
sub
in
inc
sub
rep
jmp
pop
scas
fcmovb
loope
mov
packssdw
int
fcmovne
sti
out
inc
cld
inc
dec
push
arpl
mov
xor
and
lods
xor
dec
xor
jg
(bad)
push
ins
xchg
sub
(bad)
inc
push
sub
scas
xlat
das
std
mov
push
pop
push
xchg
mov
mov
xchg
inc
imul
fcomp
(bad)
call
retf
out
out
ins
std
dec
xchg
sahf
sub
inc
jp
je
xor
pop
scas
jp
popa
dec
xor
mov
int
cmp
call
das
outs
mov
(bad)
movs
dec
gs
inc
(bad)
dec
stos
pop
outs
mov
push
sub
xor
shl
ins
pusha
mov
adc
cli
ret
gs
mov
lods
rol
aad
push
movs
addr16
pop
outs
int3
or
into
gs
push
(bad)
movs
dec
lahf
sbb
sub
ret
add
popf
fwait
xchg
int3
inc
icebp
mov
add
mov
leave
or
push
jnp
out
or
xor
lds
aad
dec
test
bound
adc
push
fsub
jecxz
sbb
push
mov
out
inc
shr
push
add
cmp
dec
daa
xchg
pop
jp
adc
adc
imul
daa
retf
add
pop
xchg
mov
pop
sub
out
and
hlt
les
movs
mov
dec
cmps
loop
pusha
fwait
in
rcr
ss
mov
and
loope
ss
push
xchg
lock
push
pop
icebp
mov
mov
and
cs
jo
inc
aaa
sbb
mov
fidivr
and
outs
fsub
outs
daa
push
loopne
or
or
(bad)
push
out
jmp
(bad)
adc
(bad)
retf
push
les
retf
pop
test
clc
test
push
inc
addr16
movs
js
mov
fsubp
push
sahf
mov
and
test
cmps
cmp
loopne
stos
and
pop
jnp
ja
mov
aaa
icebp
out
jle
aam
mov
or
xlat
in
aaa
jp
and
sbb
aad
dec
cmp
fidivr
xlat
(bad)
jmp
mov
jle
shr
test
sbb
jg
(bad)
add
and
push
sbb
cmp
jmp
movs
je
cmps
add
mul
fcmovnbe
push
mov
jp
sub
pop
mov
jge
xchg
inc
test
test
ret
mov
push
add
cmp
add
sti
mov
sbb
mov
pusha
sbb
clc
jle
pop
je
sbb
mov
mov
inc
pop
mov
inc
mov
(bad)
inc
stos
add
cmp
pusha
pop
mov
iret
retf
ins
dec
and
cmp
xor
dec
jno
mov
mov
icebp
movs
jno
mov
mov
sub
xor
ds
lea
fnstsw
mov
sub
jns
pcmpeqd
pop
out
ret
aaa
rcr
out
xchg
sbb
add
or
mov
inc
and
inc
or
inc
pop
div
jnp
inc
jl
mov
xchg
movs
fdivr
fisub
ins
push
add
sub
dec
inc
mov
(bad)
pop
fwait
(bad)
pop
jns
test
shl
mov
xchg
fst
cmp
mov
pop
add
jbe
ret
aaa
ja
fs
imul
xchg
popa
push
push
mov
std
je
xchg
cmp
retf
sti
call
push
adc
ss
mov
icebp
stos
xchg
out
pop
inc
inc
xor
daa
pop
xor
cli
inc
push
jb
sbb
or
cs
push
aam
test
pop
test
and
ja
shl
aas
inc
cmps
stos
mov
mov
mov
sub
jge
push
outs
dec
pusha
mov
sbb
mov
pop
mov
xchg
or
inc
retf
inc
popa
mov
inc
stos
inc
in
cwde
sbb
pop
xchg
pop
test
stc
pop
mov
call
sbb
inc
les
cli
mov
fild
mov
push
and
bound
adc
bound
repnz
stos
adc
or
sub
into
push
jg
adc
ja
std
pop
icebp
je
ret
jge
enter
movd
hlt
test
xchg
outs
add
mov
in
div
pushf
ja
dec
mov
or
mov
fidivr
gs
push
or
jns
jg
pushf
ret
lods
sub
aaa
movs
sub
cmps
push
sbb
mov
xor
mov
in
jno
repnz
ret
sbb
or
mov
je
(bad)
inc
gs
retf
mov
aad
push
out
rol
in
(bad)
aad
(bad)
or
sahf
(bad)
cld
xchg
clc
cs
mov
out
push
mov
movs
loopne
mov
jl
(bad)
scas
ja
je
jne
ins
cli
xchg
scas
outs
ins
xchg
xchg
jnp
pusha
fistp
adc
dec
mov
inc
leave
add
cli
out
dec
loope
call
push
shl
out
fwait
cmp
mov
cwde
sbb
mov
mov
out
dec
xor
or
gs
or
xor
in
xchg
jbe
sub
(bad)
aas
inc
out
dec
push
cs
test
add
fsubr
hlt
dec
dec
retf
mov
fwait
pop
hlt
pop
gs
outs
jle
pop
jg
mov
(bad)
lods
jp
ss
dec
ror
iret
movs
dec
xor
mov
call
mov
add
xlat
dec
jne
imul
fidiv
lea
xor
call
pop
dec
stc
js
(bad)
cli
or
cli
sub
push
push
sub
fnstsw
adc
and
ret
repnz
fadd
push
not
adc
mov
dec
push
cs
jmp
mov
sar
xor
retf
sbb
mov
outs
and
mov
sar
fs
sub
mov
dec
stos
rcl
pop
mov
cmp
std
push
fidiv
stc
lds
sahf
nop
sub
aas
(bad)
cld
pop
xchg
clc
add
jbe
sar
fxch
jno
sahf
das
dec
jle
stc
jo
gs
test
or
and
jno
lock
bound
pop
jp
test
sub
or
fwait
add
push
add
xchg
(bad)
aam
pushf
jae
cmps
stc
mov
cmps
inc
mov
cmc
call
pop
lahf
inc
sbb
int3
fld
dec
jge
sbb
cmp
daa
dec
cld
stos
loop
pop
mov
lahf
movs
in
pop
outs
jne
rcr
sub
fild
in
(bad)
push
mov
mov
retf
cs
cmps
scas
lods
pop
out
pop
mov
sub
aaa
mov
mul
add
lods
or
inc
daa
add
push
xor
and
pop
xor
lock
jne
pusha
pop
loope
in
outs
fdiv
hlt
or
stos
mov
push
pop
ds
jae
pusha
and
cwde
and
vandps
jp
dec
mov
retf
xor
scas
pop
cs
in
not
addr16
arpl
ret
je
scas
mov
call
popa
popa
lods
lea
shl
(bad)
push
mov
mov
fadd
arpl
pop
adc
sbb
(bad)
fwait
mov
cmc
mov
sbb
sti
movs
shr
mov
sbb
(bad)
push
xor
cmps
push
in
nop
mov
pop
inc
sti
jmp
rcr
pop
dec
iret
daa
adc
mov
add
add
inc
int3
stos
push
cli
mov
ret
(bad)
lods
mov
push
adc
push
enter
jge
fstp
sahf
jecxz
cmp
mov
mov
or
fucomip
repnz
vpavgw
jge
mov
or
or
enter
jmp
pop
mov
and
ret
test
stos
(bad)
fisub
popa
xor
jp
inc
call
cli
ds
sub
int
inc
cs
cs
dec
push
das
aad
pushf
jb
pop
ds
cli
push
shl
jg
pop
sahf
pop
ror
jg
inc
push
sahf
xchg
mov
pop
inc
stos
pop
add
daa
and
les
sub
sub
test
mov
mov
and
out
cmp
mov
pushf
sar
outs
fstp
adc
pop
sbb
jbe
mov
xor
fcomp
jecxz
xchg
test
sbb
fwait
mov
lds
outs
ret
mov
mov
push
pop
(bad)
rol
push
ins
xor
retf
loop
pop
cwde
es
sahf
cmps
xchg
xlat
jg
outs
hlt
or
push
iret
std
mov
adc
sbb
hlt
(bad)
adc
div
mov
int
lahf
rcr
lahf
popa
pop
movs
cmps
jge
cmp
cmp
cli
sbb
fs
jge
sbb
push
pop
mov
sub
mov
jo
sbb
jmp
mov
mov
ss
int
or
repz
push
jb
inc
push
aaa
xor
addr16
dec
outs
xor
dec
sub
in
sbb
sub
test
add
retf
cli
test
sahf
add
adc
push
inc
dec
nop
stos
or
jge
or
scas
adc
dec
gs
jnp
not
inc
fsub
es
push
cmps
sahf
jle
test
cmp
daa
cmp
inc
lods
push
popf
push
sbb
xchg
dec
cmp
or
jmp
adc
sbb
add
(bad)
addr16
int
sbb
adc
pop
fbld
push
pop
cmps
push
mov
aam
fistp
dec
mov
or
les
daa
mul
sbb
stos
sbb
ror
push
push
call
in
pop
xlat
jp
mov
syscall
cmps
jmp
xor
ss
jns
jecxz
pop
jl
xchg
and
jle
sahf
(bad)
frstor
outs
enter
bswap
dec
ins
add
mov
aam
mov
sub
xchg
cmps
add
sbb
fwait
lds
and
cmp
sub
sbb
dec
clc
pop
fldcw
sti
addr16
(bad)
sbb
imul
ja
dec
fsub
ins
sub
rol
inc
call
push
movs
pushf
bound
inc
jmp
into
rol
popf
jge
push
data16
in
in
jnp
pop
push
pop
xchg
imul
leave
xor
hlt
add
or
stos
mov
outs
adc
daa
(bad)
fistp
dec
les
movs
push
dec
in
jl
xchg
adc
pop
out
stos
dec
scas
outs
xor
or
(bad)
addr16
push
clc
add
mov
inc
(bad)
(bad)
stc
pop
add
(bad)
fnsave
cmp
div
fwait
iret
or
jecxz
out
popf
jmp
out
out
dec
call
pop
mov
jmp
aad
daa
fwait
mov
mov
jge
mov
adc
pop
jo
jo
sti
(bad)
es
lock
fdiv
in
xor
sar
pop
push
adc
fiadd
add
pusha
jmp
pushf
std
clc
popa
outs
jge
fdiv
in
adc
sbb
and
retfw
in
fnstcw
or
or
je
or
es
xchg
jge
add
adc
std
pop
or
fs
shl
leave
(bad)
or
xchg
mov
cs
jl
mov
mov
and
adc
mov
lock
ins
xchg
or
pusha
dec
push
xchg
inc
jno
adc
out
sahf
jle
movs
stos
push
xlat
xor
fcom
sbb
fnstenv
ins
mov
outs
cs
dec
push
jge
mov
push
repnz
shl
outs
cs
or
inc
js
outs
icebp
test
cmps
scas
(bad)
xchg
pop
cld
stc
xchg
pop
dec
cdq
mov
ror
imul
jnp
sub
add
mov
int
je
stos
ins
dec
mov
push
repnz
fcmovnu
pop
fistp
push
rol
stc
popa
xchg
cmp
cmc
sub
fbstp
xor
jle
loop
(bad)
xor
ja
push
dec
jmp
movs
xor
cld
fcom
add
xchg
add
nop
sti
jno
bound
bound
and
in
jno
or
retf
sub
shl
ret
jmp
rcl
dec
stos
push
mov
xchg
int
gs
sbb
into
pop
iret
cmc
icebp
dec
jnp
mov
fldenv
jge
mov
imul
sub
data16
imul
mov
clc
(bad)
gs
arpl
or
jge
into
(bad)
into
fldenv
fstp
mov
(bad)
pusha
in
ss
jno
inc
xchg
add
mov
sbb
xchg
add
mov
xchg
jg
jno
and
jp
inc
popf
ins
lods
dec
pop
dec
sub
add
in
int
mov
test
mov
or
cld
test
das
out
sbb
pop
sub
aad
xor
cmp
or
movs
inc
cld
scas
mov
call
sbb
mov
mov
not
inc
js
retf
mov
inc
fidivr
daa
xchg
cmps
in
iret
mov
enter
and
mov
add
inc
adc
sti
pop
not
pop
and
xchg
repz
jne
jmp
sub
mov
pop
gs
sbb
gs
jbe
inc
adc
ficomp
mov
lds
in
ins
das
sub
xchg
inc
dec
inc
push
cmps
push
loopne
out
mov
popa
sub
mov
pop
lahf
sbb
aas
daa
dec
mov
jnp
mov
(bad)
xchg
dec
jbe
cmp
push
push
cmc
daa
sar
lock
in
dec
test
push
push
push
xchg
fs
sar
popa
pop
loop
jo
cs
and
into
inc
rcl
pop
inc
xchg
xlat
popa
xor
jne
inc
and
pop
push
cmp
out
ins
jb
push
lock
call
fst
cmp
iret
cmp
pop
push
ins
retf
mov
jns
cs
pop
inc
test
retf
in
xchg
mov
test
lds
pop
mov
cmp
xor
pop
in
and
jmp
dec
test
inc
aad
imul
aaa
stos
out
xor
mov
pop
sti
daa
aaa
ins
cmp
int3
mov
jmp
enter
addr16
mov
push
pushf
mov
bound
call
pop
movs
xchg
inc
(bad)
repz
add
pop
cmc
repz
push
cmp
or
(bad)
xor
inc
mov
imul
ss
retf
rol
inc
retf
mov
cmp
xchg
inc
jp
jge
(bad)
inc
iret
inc
mov
dec
lahf
cwde
stc
nop
add
sbb
cwde
imul
mov
mov
add
and
ins
sub
pop
rol
sub
clc
xchg
(bad)
dec
inc
sbb
(bad)
int3
adc
cli
or
scas
cmp
pop
mov
cmp
sbb
fs
xor
mov
bound
clc
call
fistp
(bad)
xor
add
sub
out
jns
xor
cmp
out
imul
test
imul
gs
loope
inc
loope
dec
push
int
cmps
loop
je
cwde
add
out
xlat
add
and
adc
test
repz
(bad)
mov
fimul
cwde
imul
stc
push
and
iret
and
inc
repnz
sub
cmp
test
sti
mov
pusha
pushf
mov
mov
xor
aaa
xor
imul
mov
inc
rcl
xchg
or
sar
rcr
push
push
jecxz
fldenv
in
mov
enter
lds
pop
xchg
sbb
adc
mov
jle
push
pusha
mov
ds
inc
and
or
mov
in
dec
sub
or
pop
cmps
das
mov
data16
les
lods
retf
jno
popf
mov
sbb
test
shr
jg
fidivr
(bad)
sar
mov
jns
or
sub
sub
mov
xchg
test
mov
or
out
sbb
repnz
push
cmp
and
or
add
arpl
fstp
jle
xor
addr16
jmp
bound
bound
sub
jns
das
xchg
add
or
jl
cmp
xor
lea
imul
mov
in
lods
mov
aad
jno
pop
adc
pop
pop
push
inc
div
stos
iret
adc
sahf
retf
shr
xchg
leave
xchg
int
das
cmc
xlat
pop
mov
xor
js
jl
xchg
inc
fbld
push
sbb
adc
call
jmp
push
inc
mov
fisub
cmp
into
fwait
arpl
sbb
sub
cmp
gs
add
ret
sbb
out
lahf
int3
mov
pushf
inc
and
mov
rcr
add
or
push
inc
xchg
sbb
test
dec
(bad)
imul
sub
pop
pop
icebp
inc
es
mov
xor
sbb
inc
les
sbb
mov
or
and
cmp
xchg
push
dec
popa
icebp
ins
fisubr
cmp
adc
pop
out
loopne
rcr
add
push
pop
repz
fimul
loopne
or
or
(bad)
and
or
cmp
add
mov
lds
ds
cmp
pop
test
add
pop
or
cmps
and
les
xor
mov
mov
fimul
xor
cwde
mul
jl
push
sub
xchg
test
ja
stc
ins
stos
(bad)
imul
je
(bad)
pop
mov
sub
inc
or
test
scas
dec
jl
pop
adc
or
xchg
cmp
loopne
ss
(bad)
sub
jg
mov
cmp
aas
mov
cmps
(bad)
(bad)
outs
out
xlat
mov
mul
adc
shl
int3
in
cmp
add
or
int3
lahf
mov
fisubr
inc
or
mov
leave
jns
int
not
mov
ret
cmps
fisttp
pop
(bad)
hlt
mov
hlt
out
(bad)
sti
test
inc
inc
cmp
retf
sub
adc
sub
mov
cmp
pop
dec
leave
xor
cmp
repnz
dec
cmp
mov
mov
ja
call
cmp
jle
pop
lods
dec
ins
xchg
scas
add
fadd
push
xor
pusha
sar
ds
adc
inc
loop
mov
push
push
sub
fwait
or
or
(bad)
mov
sbb
pop
mov
in
dec
jb
and
xlat
xchg
aaa
xchg
mul
fiadd
(bad)
retf
mov
std
xchg
fidivr
push
mov
push
retf
mov
aam
fwait
out
ins
loope
lahf
and
popa
fld
push
int
adc
adc
icebp
dec
dec
in
mov
out
cli
sbb
popf
inc
sbb
ja
jg
inc
jecxz
cld
adc
call
mov
jg
or
xchg
lock
ins
test
mov
push
out
fs
in
les
es
outs
das
aad
pop
movs
out
out
jo
(bad)
adc
dec
push
jbe
aam
lahf
hlt
int3
fwait
sub
mov
jmp
imul
xchg
(bad)
mov
sub
jns
pop
in
add
jmp
push
dec
mov
add
shl
cdq
cmp
cmc
sbb
retf
imul
push
sbb
rcl
pop
push
stos
in
lods
pop
jmp
mov
xchg
inc
scas
stos
(bad)
in
ja
lea
sub
jecxz
pop
aas
push
stos
sbb
mov
in
and
popf
mov
das
add
cmp
xor
push
jo
sbb
xchg
cmp
imul
test
ds
shl
dec
pushf
inc
mov
inc
push
push
push
aas
scas
pop
inc
call
push
stos
and
mov
popa
sbb
mov
push
sti
pusha
es
mov
mov
test
je
xor
xchg
sub
aaa
add
out
popa
iret
cmp
lea
push
adc
call
push
pop
inc
mov
adc
scas
xchg
inc
jecxz
addr16
ins
xlat
js
gs
xchg
push
or
mov
mov
sub
lds
imul
sbb
hlt
repnz
mov
adc
es
push
pop
data16
push
retf
scas
outs
xchg
stc
mov
aaa
or
push
ss
or
inc
mov
stos
test
lea
mov
mov
mov
cli
push
(bad)
scas
cmp
clc
cdq
push
pop
pop
add
hlt
std
mov
mov
test
pop
(bad)
xchg
imul
call
xchg
jbe
aad
gs
in
sub
or
pusha
mov
outs
leave
push
rcl
pop
je
imul
sub
pop
inc
ins
call
cwde
call
mov
dec
mov
and
clc
jl
ss
mov
clc
mov
pop
iret
pop
in
push
in
and
cmp
fst
out
xor
scas
mov
sbb
outs
or
and
jge
outs
mov
add
push
ret
or
outs
shl
leave
mov
mov
loope
mov
hlt
xchg
hlt
jo
nop
and
call
pop
and
retf
pop
loope
jnp
mov
cwde
js
cmp
mov
ficomp
daa
inc
jg
jmp
pop
mov
adc
retf
mov
loopne
xor
mov
popa
int3
fld
aaa
cwde
jecxz
fnstenv
fnstenv
jecxz
jns
fidivr
stos
retf
fs
or
repz
imul
sar
jmp
cwde
imul
xor
and
mov
lock
loop
or
lds
mov
cmp
shr
xor
mov
adc
cmp
sbb
imul
in
dec
sbb
xor
into
jp
xchg
and
cmps
inc
retf
mov
or
(bad)
pop
pop
push
add
mov
mov
inc
push
and
in
retf
shl
ret
inc
repnz
pop
dec
jo
pop
fild
sbb
(bad)
pop
fwait
sti
adc
enter
outs
inc
aam
jae
push
repnz
sbb
xor
or
dec
jns
in
gs
movs
shl
sbb
ss
mov
movs
push
out
jecxz
dec
adc
sbb
movs
ror
lods
adc
mov
enter
pop
mov
enter
rcl
div
cwde
pusha
pop
dec
mov
lods
inc
imul
push
mov
pop
dec
jbe
popf
cmp
adc
daa
ficomp
mov
dec
mov
jb
pushf
jg
add
pop
jge
retf
(bad)
push
cmps
jle
pop
fmul
repnz
sub
rol
fdiv
hlt
ror
scas
fnstenv
inc
clc
and
(bad)
int3
fmul
inc
push
mov
fcmovne
mov
(bad)
pop
je
push
mov
mov
inc
adc
repz
sbb
fwait
cmp
mov
and
sahf
pop
xchg
xchg
jg
mov
fwait
cmps
arpl
ja
addr16
rcl
xor
sbb
push
aad
mov
cmps
ins
and
dec
dec
test
sbb
inc
pop
sbb
xor
sub
mov
mov
xchg
test
shr
mov
inc
repnz
sbb
xlat
imul
jnp
cld
int3
adc
mov
(bad)
data16
sar
push
inc
je
les
sbb
mov
xlat
cli
repz
add
xchg
xor
sti
loopne
std
in
hlt
inc
retf
out
sbb
xor
jmp
stos
mov
aam
pop
repz
push
loop
dec
jg
jge
xchg
sar
add
(bad)
jp
jge
fdiv
pop
mov
loope
mov
mov
xor
mov
pop
push
jl
stos
dec
vmwrite
lods
out
out
adc
loop
or
inc
mov
das
js
mov
mov
ficomp
aaa
pop
mov
mov
and
inc
adc
or
xor
sahf
cwde
mov
jmp
xlat
or
ficom
mov
movs
or
mov
retf
daa
xchg
out
sub
xlat
out
adc
gs
jne
xor
cwde
(bad)
fild
std
mov
jecxz
pop
pop
ds
jl
mov
(bad)
in
cmp
aad
push
sbb
jle
push
leave
push
or
pop
push
iret
repnz
mov
lds
adc
addr16
das
mov
test
xor
xchg
loopne
daa
loopne
xor
ret
mov
out
dec
add
outs
sbb
pop
or
xchg
cld
lahf
jmp
mov
dec
mov
cld
push
ror
movs
shl
lods
push
dec
or
call
icebp
and
xor
popf
dec
dec
iret
lahf
repnz
adc
pop
stos
stos
add
call
and
pop
xchg
jmp
cld
or
xchg
imul
loope
mov
cmps
pop
add
ret
mov
mov
push
adc
(bad)
push
push
jl
add
test
aam
test
add
es
or
jnp
retf
sbb
add
fcmovu
and
hlt
(bad)
cmps
mov
sahf
sbb
mov
cmp
adc
dec
(bad)
and
pusha
inc
stos
scas
pop
push
sti
mov
std
inc
add
mov
or
or
sub
int
xlat
push
jns
adc
rcl
cmp
mov
xor
or
lods
iret
fild
jns
add
ds
pushf
outs
cli
int
in
mov
dec
sbb
lods
test
popw
hlt
fwait
mov
mov
and
and
daa
mov
inc
mov
sbb
or
pop
in
rcl
outs
outs
scas
add
retf
iret
sub
repnz
ret
inc
(bad)
fisubr
popa
adc
enter
jne
jbe
repz
into
movs
dec
pop
js
sub
scas
dec
repnz
lahf
jo
adc
and
mov
jecxz
lock
and
(bad)
cmp
movs
out
or
cmp
xor
mov
and
adc
loope
fiadd
sar
aas
imul
pop
movs
pop
push
bound
test
les
push
and
cli
movs
stc
cdq
movs
push
xchg
movs
loopne
mov
push
adc
add
push
aad
or
les
dec
lock
(bad)
fld
pusha
inc
clc
mov
leave
dec
popa
aaa
in
add
adc
loope
mov
mov
mov
sbb
adc
loope
sub
pop
pop
jl
sub
jb
mov
stc
sbb
adc
push
jne
pop
ins
fdivr
jo
xor
mov
and
push
push
lahf
push
mov
xchg
xchg
mov
dec
outs
add
mov
jns
xchg
int
fs
ror
sbb
push
jecxz
imul
(bad)
sub
sub
fcomp
pop
xchg
jge
lods
(bad)
fisttp
imul
sbb
xor
addr16
push
hlt
movs
je
and
adc
shl
mov
in
xchg
int3
xor
or
dec
inc
pop
cmp
mov
jp
dec
jnp
ret
sbb
sub
mov
ins
push
mov
dec
shl
je
sbb
add
retf
inc
mov
ss
mov
fst
sbb
fwait
in
int3
cmp
outs
cmc
mov
jb
loope
gs
xchg
fisttp
or
add
and
das
mov
mov
lahf
sub
cmp
test
and
data16
and
test
imul
push
and
popf
and
jbe
jg
call
pusha
stos
ror
inc
sub
lock
adc
add
movs
sub
in
xor
js
pop
mov
mov
sbb
jo
call
std
mov
xchg
outs
dec
mov
jmp
push
cmps
pop
in
loop
imul
dec
scas
jo
aad
sbb
loop
idiv
popf
dec
bound
dec
jb
fs
in
jmp
pop
or
and
push
and
jge
inc
bound
arpl
adc
cvtdq2ps
jl
ins
or
add
mov
movs
push
xchg
ret
adc
setns
xchg
mov
outs
stos
xchg
pop
xor
fst
add
stc
xor
pusha
push
mov
bnd
int
idiv
mov
aas
mov
mul
add
mov
jmp
cmp
mov
xchg
fisub
xchg
stos
xchg
sub
(bad)
int3
xlat
imul
repnz
jbe
les
nop
cmp
(bad)
loopne
sub
xor
mov
shl
push
cs
mov
cmp
mov
int
inc
mov
cmp
pop
cmp
mov
ret
adc
adc
xchg
xchg
and
js
push
mov
jg
cwde
stos
(bad)
cmps
jmp
daa
sbb
pop
int3
xor
out
adc
pop
xor
and
push
dec
jl
popa
lahf
add
in
pop
in
lods
and
sti
cmp
lahf
dec
sbb
cld
dec
popa
cmps
sbb
xor
push
retf
sbb
sub
aad
jb
imul
adc
xchg
cmp
add
repz
repnz
call
out
cli
retf
out
dec
sahf
sub
sar
sbb
mov
pop
mov
xchg
sub
addr16
outs
adc
int3
or
mov
xor
add
mov
pop
mov
mov
cmp
adc
inc
mov
mov
je
or
(bad)
fmul
mov
call
or
add
xchg
cmp
call
es
movs
push
clc
stos
sbb
mov
es
add
es
xor
sub
mov
mov
jnp
cmps
xchg
es
repnz
icebp
jge
inc
fcmove
add
cmp
sbb
sub
movs
xchg
sahf
and
or
bound
push
bound
scas
sbb
pop
jl
fucomip
das
adc
add
loope
ret
pop
retf
xchg
in
xchg
push
sub
jmp
sub
pop
pop
sub
sahf
ins
and
bound
sub
loopne
shl
leave
cmp
mov
sbb
or
jle
pop
mov
rcr
leave
je
aas
push
rol
cmp
stos
test
jle
(bad)
xor
imul
repz
ret
mov
outs
push
cdq
mov
xchg
icebp
inc
dec
rol
xchg
sbb
mov
repnz
jmp
or
(bad)
shl
repnz
and
stos
in
xor
(bad)
cmp
push
scas
cmp
mov
sbb
into
stos
cld
repz
sbb
movs
mov
jp
xchg
shl
mov
cmp
sub
jmp
setg
jle
add
pop
test
pop
pop
ins
inc
fwait
mov
cli
dec
dec
xchg
push
xchg
outs
shl
mov
inc
mov
jne
sub
cdq
lock
and
pop
or
sahf
xchg
pop
sub
call
xor
mov
cmp
jle
loope
and
inc
xor
xchg
mov
or
(bad)
outs
not
cmp
outs
repnz
jmp
mov
sub
or
arpl
jmp
xor
sub
clc
ins
cmp
retf
xchg
cmps
inc
mov
mov
or
add
ficom
popf
pop
call
std
stos
ret
xchg
adc
(bad)
(bad)
test
dec
push
sbb
mov
ins
dec
in
and
jns
jge
jae
xor
and
or
ds
or
and
mov
dec
dec
lahf
rcl
fdivr
leave
push
inc
icebp
and
jo
mov
pop
cmp
pop
mov
pop
cmps
daa
jmp
mov
test
jnp
sub
mov
(bad)
in
add
loop
mov
aad
inc
arpl
push
fistp
mov
mov
mov
pop
jo
dec
enter
js
mov
mov
cmps
cdq
outs
or
test
mul
mov
int3
jge
mov
test
hlt
daa
cs
fsubp
cld
mov
pusha
xor
ret
dec
test
aaa
jecxz
mov
std
retf
xchg
(bad)
sti
push
movs
cmps
jge
xchg
stc
int3
push
sub
clc
sub
xlat
jbe
inc
(bad)
pop
and
aaa
clc
mov
scas
(bad)
jbe
inc
out
adc
mov
dec
mov
cmp
shl
inc
and
jo
sahf
mov
into
pushf
aad
mov
cmc
stos
jp
add
inc
(bad)
dec
jno
xchg
call
xchg
add
cmp
mov
scas
out
pop
sub
outs
and
mov
bound
push
jno
xchg
jmp
jns
mov
int3
js
push
out
es
js
repz
push
pop
mov
xchg
sub
ja
cmp
pop
push
in
and
sti
out
pop
lods
cdq
cs
cdq
sbb
adc
push
mov
xchg
loope
push
xchg
sub
mov
mov
push
push
mov
test
inc
cmp
push
or
scas
in
retf
popf
fist
mov
cmp
call
and
mov
and
cli
inc
push
cwde
inc
and
aas
sub
sub
and
pop
stc
sub
out
popf
aaa
or
sub
xchg
popf
push
out
fld
xchg
arpl
add
gs
sub
js
repz
sbb
pop
mov
ret
leave
dec
popa
sub
lods
add
or
popa
xor
pop
xchg
or
cdq
fisubr
add
movs
iret
das
in
test
jge
jecxz
mov
xchg
xchg
pop
cmp
cld
pop
fild
ss
and
sub
push
les
popa
xchg
xchg
sub
outs
push
(bad)
(bad)
cmp
push
loope
jb
pop
shl
clc
out
(bad)
div
retf
cmps
jl
pop
mov
xor
mov
add
xor
cs
into
mov
add
pop
pop
popa
xchg
mov
xchg
out
(bad)
scas
xor
jae
ins
fistp
ds
dec
mov
es
rol
fild
mov
xor
rcl
pop
aam
adc
lahf
(bad)
imul
lods
imul
test
push
inc
xchg
(bad)
cs
xor
gs
inc
mov
adc
movs
dec
mov
push
sbb
rol
test
fcom
and
xor
sub
add
xchg
xchg
pop
jmp
fwait
inc
mov
add
xchg
(bad)
cli
bound
fwait
stc
mov
fsub
or
ins
stos
call
movs
test
add
test
push
or
xchg
loope
cli
fld
xchg
js
sub
aas
stc
and
adc
fwait
xchg
pusha
jnp
data16
int
push
pop
mov
sub
cmp
jns
add
jbe
int3
mov
cmps
cmc
sbb
call
adc
imul
xchg
inc
in
push
add
aam
aad
jmp
fmul
jbe
sub
add
cmp
sub
push
inc
pop
ret
or
out
jae
cmp
nop
and
sub
adc
ss
mov
xor
nop
shl
pop
pop
push
movs
and
xor
or
mov
sbb
dec
add
and
add
pop
leave
adc
imul
sar
push
mov
mov
xor
stos
arpl
mov
xchg
or
sub
jbe
je
out
ftst
pop
sbb
inc
cmp
leave
dec
sbb
push
adc
out
js
retf
push
daa
in
adc
inc
push
jle
or
call
mov
xor
call
mov
pop
jno
ja
cdq
in
and
repnz
and
push
adc
lea
or
sub
add
or
pushf
fsubr
inc
call
mov
pop
ss
xchg
mov
movs
outs
or
fidivr
mov
loopne
xchg
jmp
test
xor
cmp
fiadd
mov
test
sbb
leave
xchg
mov
ret
pushf
xlat
mov
out
mov
xor
cs
or
xchg
in
push
adc
xor
icebp
sbb
push
mov
fcomp
sbb
and
jge
adc
test
test
loope
mov
mov
fs
adc
test
(bad)
cmp
jmp
cld
daa
mov
xchg
bswap
sbb
ret
jecxz
sbb
mov
sbb
gs
push
and
movs
jle
push
(bad)
mov
stc
js
push
and
jnp
jmp
xchg
(bad)
movs
jmp
dec
aas
xlat
pop
inc
stc
pop
mov
sbb
repnz
jl
or
jno
pop
dec
or
xor
fnstcw
sbb
mov
adc
mov
sar
std
push
les
mov
adc
mov
cmc
mov
imul
xor
aaa
fnstenv
movs
into
cdq
or
retf
aaa
sbb
push
push
push
mov
jbe
xchg
jecxz
ins
push
push
jno
jb
movs
mov
push
or
cmp
cdq
cmp
nop
xchg
lock
push
add
in
jmp
jbe
xchg
out
mov
mov
jge
je
adc
loopne
fld
inc
fdivrp
mov
out
packuswb
in
xchg
xor
aas
sub
ins
mov
fwait
lods
nop
inc
ja
xlat
das
aas
mov
arpl
imul
inc
lods
sar
(bad)
lea
cmp
push
sahf
ficom
mov
fsubr
pushf
xor
not
lea
mov
out
pop
adc
mov
sub
cmps
mov
gs
(bad)
xchg
jp
jno
and
cmp
jns
stos
call
cmc
out
jecxz
lods
out
push
fmulp
mov
shr
mov
sbb
xor
call
sub
sub
add
lahf
fisttp
jle
out
outs
ret
shl
pop
mov
repnz
or
dec
xchg
inc
push
push
sbb
push
sub
pop
add
test
push
add
aaa
clc
mov
or
mov
mov
ins
mov
jo
or
sbb
scas
lock
inc
lds
mov
add
pop
mov
sbb
xchg
fwait
add
and
lea
fadd
fsubr
and
pop
ja
add
and
or
mov
retf
sahf
cwde
cmps
mov
push
rcl
sub
sub
in
or
lds
pop
dec
push
in
cmps
pop
jns
push
push
inc
sbb
xchg
retf
das
dec
arpl
mov
dec
sbb
rcr
inc
std
sub
fwait
loope
pop
jmp
xor
daa
push
xchg
mov
(bad)
lahf
scas
imul
js
gs
pop
adc
cs
push
mov
lahf
xor
test
call
add
mul
pop
pop
mov
xchg
xchg
cmp
or
shr
add
je
inc
mov
cmp
mov
xchg
push
ret
jmp
mov
adc
add
or
mov
cmps
lock
cmps
shl
adc
je
jp
mov
xlat
loope
loopne
mov
jmp
or
pusha
repz
popa
pop
dec
or
fdiv
pusha
mov
ror
call
shr
xchg
jmp
jae
fst
sbb
jmp
pop
repnz
sar
push
xor
xor
lock
add
hlt
sub
sar
and
mov
fwait
inc
in
mov
in
fild
fwait
mov
call
xchg
cmp
push
or
mov
dec
fcmovnbe
or
jae
outs
movs
shl
inc
jnp
xlat
nop
scas
pusha
arpl
push
inc
or
and
sbb
xor
xchg
movs
pop
lea
push
push
and
dec
int
xchg
mov
adc
jp
jecxz
cmp
ins
cmp
repnz
aas
js
dec
xchg
jecxz
mov
retf
nop
gs
and
mov
jae
jmp
mov
xor
dec
xchg
mov
popa
dec
dec
call
enter
push
rol
adc
push
mov
adc
mov
push
js
stos
xor
push
clc
stc
sbb
sbb
cmp
adc
xchg
cmps
rcr
leave
les
pop
or
es
or
mov
imul
cmp
pop
jo
cs
jg
xchg
adc
mov
jmp
mov
or
jp
jns
pop
add
add
push
iret
fidiv
xchg
sbb
(bad)
lahf
ja
fldenv
jae
out
imul
add
and
mov
mov
push
test
movntps
jp
lock
pop
adc
and
int
inc
ror
imul
and
push
repz
rcr
mov
push
arpl
cli
out
jecxz
dec
sub
repz
test
arpl
mov
shl
mov
push
scas
ds
imul
pop
xchg
retf
(bad)
(bad)
sub
pop
sti
push
aaa
xor
pop
retf
pop
popf
dec
xor
or
sbb
mov
and
inc
lock
push
mov
fisttp
mov
xchg
or
jne
and
adc
xor
js
leave
mov
mov
sub
ret
sti
pop
lds
sub
pop
push
jecxz
pop
jnp
push
xor
in
icebp
ffreep
mov
inc
(bad)
adc
stc
aam
adc
pop
mov
je
mov
popf
pop
push
or
fmul
clc
aad
mov
es
data16
cmps
add
fwait
lock
(bad)
mov
test
stc
call
mov
jl
sub
lahf
mov
imul
std
das
mov
inc
adc
adc
adc
popa
push
add
jp
ror
lods
fs
xchg
out
not
aaa
push
cmp
neg
jle
and
lods
call
call
(bad)
in
aam
pushf
mov
bnd
ss
push
loop
repnz
fwait
imul
lods
cmp
mov
movs
sub
mov
dec
retf
mov
mov
cwde
jno
mov
dec
push
lahf
jne
retf
xchg
ss
lea
lock
sar
pop
cmp
dec
or
jmp
adc
test
test
fimul
lods
mov
adc
sub
maxps
mov
push
dec
add
sub
sub
inc
sbb
lds
iret
inc
addr16
in
dec
hlt
jno
repnz
xlat
aad
dec
ins
mov
retf
(bad)
add
and
in
lea
add
loopne
xchg
pop
lea
and
xchg
inc
or
push
push
pop
cmp
jae
dec
imul
in
dec
add
into
cwde
or
push
xor
and
xchg
rol
test
sub
mov
imul
jle
rol
ror
or
push
movs
add
or
cmp
sub
pushf
arpl
mov
or
or
iret
xchg
jmp
fild
jo
retf
lahf
mov
pushf
int3
jnp
adc
scas
scas
inc
xlat
movs
push
pop
xlat
push
xchg
lahf
jne
mov
mov
sbb
pop
mov
jns
fimul
lea
cmp
dec
ja
adc
xor
ja
xchg
movs
and
into
es
and
xlat
jecxz
push
xchg
push
aas
jne
xchg
xlat
jmp
sbb
jge
add
sahf
call
pop
cmp
or
fadd
push
test
nop
sub
mov
jmp
xchg
xor
mov
inc
aas
pushf
test
mov
mov
nop
(bad)
test
mov
pop
push
in
add
xchg
arpl
add
xchg
xor
arpl
adc
jge
lods
loopne
and
clc
iret
int3
into
sub
cmp
cmp
mov
adc
adc
sub
dec
xor
inc
aam
(bad)
cmp
(bad)
push
inc
or
mov
iret
mov
push
jns
mov
add
cmps
or
adc
and
push
xchg
sub
mov
retf
adc
pop
pop
dec
sbb
sbb
push
xchg
lock
jbe
lock
xchg
cmp
xor
loopne
shr
mov
mov
movs
(bad)
sbb
ret
adc
call
call
fsubr
dec
jmp
popa
stc
cdq
sub
and
mov
xor
add
dec
adc
adc
out
sbb
cmp
push
ja
jb
sub
pushf
mov
dec
ret
les
inc
jno
inc
jae
jge
add
mov
cwde
mov
data16
pusha
enter
mov
(bad)
mov
outs
push
popa
loopne
in
add
add
pop
jle
inc
or
jnp
adc
mov
rol
mov
mov
inc
in
adc
daa
les
and
or
pop
scas
cli
adc
jle
xchg
test
pop
pop
aad
pop
ror
imul
lock
mov
add
xor
dec
dec
and
xchg
dec
sbb
fsubr
inc
and
sub
mov
es
ret
into
hlt
and
cs
xor
ror
repz
inc
mov
bound
xor
xchg
(bad)
mov
addr16
add
pop
arpl
jne
sbb
ss
ins
push
bound
push
rcl
xchg
xchg
pop
push
mov
in
pop
sbb
xor
loop
dec
dec
cwde
jo
sti
cli
mov
jo
push
xchg
dec
push
pop
fwait
dec
xor
inc
push
dec
cwde
xor
xchg
fidivr
cmp
push
int3
loope
cdq
jno
push
or
rol
jecxz
xchg
movs
inc
sbb
(bad)
call
pop
aaa
stos
data16
mov
imul
jg
and
lds
mov
sbb
movs
(bad)
cmp
mov
mov
test
fcmovbe
push
cwde
fcomp
(bad)
sbb
mov
push
into
jmp
xchg
mov
icebp
jmp
gs
retf
jbe
fld
clc
les
dec
sub
push
ret
lds
js
rcr
xchg
pop
add
sub
inc
and
jb
xchg
inc
pop
mov
jle
test
push
and
fisubr
pop
xchg
pcmpgtw
jbe
iret
test
sahf
cdq
daa
mov
adc
xchg
adc
xor
out
mov
cmps
add
sbb
inc
stos
cmove
sbb
mov
mov
mov
fidivr
rcl
pop
xlat
push
inc
xor
fsub
xor
fcom
mov
fimul
aas
cmp
sbb
add
sub
push
(bad)
cli
out
jg
xchg
cwde
mov
rcl
cwde
pushf
adc
(bad)
pop
mov
lods
jns
inc
shl
ret
mov
clc
imul
ss
pop
pop
push
jecxz
fiadd
inc
les
ds
aas
add
(bad)
outs
in
pop
mov
adc
dec
ins
and
jp
push
jnp
fnsave
pop
cmp
out
push
pop
adc
mov
or
mov
sbb
repz
lock
push
movs
fstp
cmps
aad
imul
mov
rep
mov
adc
int
clc
cwde
pop
ret
ror
jg
sub
push
cmp
and
sbb
add
push
jae
cmp
xor
scas
cmp
jl
cmp
imul
pop
rcr
sti
push
(bad)
sub
jno
test
jl
sbb
inc
mov
es
push
(bad)
push
mov
mov
inc
mov
outs
add
xchg
mov
cmc
mov
loope
cmp
mov
addr16
test
xchg
loope
pop
add
cmc
ja
test
and
jge
dec
pand
scas
mov
add
je
(bad)
in
mul
pop
int
mov
mov
cdq
jno
arpl
xlat
inc
add
adc
jp
push
xchg
push
(bad)
xchg
out
xchg
fmul
ret
pop
jb
movs
pop
bnd
sub
loope
int3
leave
adc
adc
adc
ret
(bad)
lock
push
jbe
stc
aam
push
mov
ja
and
jno
mov
sbb
lods
mov
frstor
es
nop
jge
shr
ins
adc
jmp
xor
loope
ins
ins
adc
cmp
add
aas
xchg
xor
jle
push
sbb
aaa
sbb
out
or
and
out
adc
dec
cwde
sahf
mov
jmp
imul
aam
pop
imul
dec
ss
dec
mov
jne
outs
out
clc
mov
push
xchg
cmp
jmp
jb
daa
pop
pop
sbb
inc
scas
mov
or
mov
fist
and
mov
sbb
xchg
xor
mov
cmp
mov
xchg
push
fcmovnbe
or
mov
mul
mov
test
in
xor
ins
adc
idiv
stc
neg
ret
dec
into
jns
mov
jae
inc
inc
aad
cmp
fstp
into
loop
test
fsub
and
cmp
sbb
inc
or
push
mov
xor
pop
test
push
mov
fs
inc
jmp
jb
push
icebp
dec
es
movs
cmc
adc
sub
rol
pop
add
in
cwde
std
ins
clc
mov
data16
push
and
and
push
imul
fcom
and
push
push
xlat
and
clc
inc
push
xor
lahf
lods
leave
xor
pop
mov
fwait
imul
mov
leave
push
adc
dec
arpl
add
xor
aas
xor
dec
int
in
aad
mov
mov
mov
les
sub
add
jl
aas
outs
pusha
lods
inc
(bad)
dec
popa
movs
hlt
pusha
dec
cmp
add
repnz
jle
cmps
out
add
pop
pop
outs
or
aam
rcr
nop
sar
fst
jns
sbb
sti
mov
nop
add
xchg
or
cli
cli
inc
cmp
inc
dec
into
add
jmp
push
loopne
mov
pusha
push
inc
retf
imul
xchg
mov
sub
test
fnstcw
jne
leave
shl
in
retf
push
pop
lds
aas
inc
popa
arpl
and
lods
stos
popa
outs
retf
pop
stos
mov
int
sbb
outs
cmps
jl
es
sti
pop
retf
out
sbb
outs
lahf
cmps
sub
or
in
mov
push
xor
sbb
push
loope
les
jb
arpl
sbb
in
out
inc
ds
adc
cmp
adc
sub
clc
fnstcw
jne
sub
sbb
add
xor
icebp
mov
test
push
out
outs
ds
les
addr16
xor
adc
icebp
arpl
pop
in
or
push
ror
mov
test
and
or
mov
in
jno
loopne
cs
fcom
dec
ret
nop
inc
inc
jecxz
add
add
hlt
cld
call
lahf
(bad)
adc
stc
stc
dec
dec
cmp
call
mov
push
adc
mov
mov
inc
jns
sub
(bad)
fwait
cld
mov
sbb
dec
sub
icebp
inc
sahf
and
jecxz
jle
push
add
pop
lock
mov
and
pushf
repnz
out
dec
mov
xchg
jl
jg
retf
jno
call
add
adc
mov
cmp
test
mov
jae
mov
jo
pop
mov
cmps
lods
mov
popf
lods
jo
sbb
cmc
sbb
sbb
daa
es
popf
cs
xor
mov
dec
fprem
mov
or
mov
dec
mov
popa
and
jmp
xchg
jmp
add
pop
push
add
jl
push
push
cwde
adc
test
(bad)
int
repnz
pop
ja
lods
lds
rcl
call
fwait
icebp
mov
enter
call
jp
add
retf
add
and
or
mov
xchg
jg
shl
cmp
fadd
scas
dec
std
or
jecxz
in
mov
es
and
mov
push
cmps
or
xor
inc
mov
xor
iret
je
rcr
(bad)
mov
inc
retf
mov
push
retf
mov
in
push
rcl
push
aaa
sub
movs
stos
jle
dec
pop
adc
jmp
out
js
xchg
mov
inc
jp
mov
push
pop
or
cmp
or
dec
push
xchg
cmp
mov
movs
ins
mov
call
sbb
hlt
test
fcomi
fld
lea
pop
cmc
push
xlat
mov
loope
adc
dec
fs
mov
jns
cmp
movs
pop
cmp
iret
mov
cwde
shl
jge
int
xor
gs
and
pop
loop
into
test
ss
jae
jne
cmps
fs
sub
movsx
shl
cmp
(bad)
inc
inc
jnp
ds
inc
adc
jno
or
cli
cmp
rcr
repnz
inc
sar
inc
push
pslld
and
movs
adc
xchg
aam
push
imul
add
aaa
sub
mov
jnp
push
call
cdq
xor
xchg
jle
in
js
stos
pushf
push
aas
jge
clc
lahf
loopne
sbb
jae
inc
adc
sub
xchg
cdq
mov
outs
(bad)
push
imul
dec
ret
and
ins
sahf
test
inc
dec
add
retf
loope
xor
fwait
inc
inc
sub
lea
call
xchg
loopne
cmps
cdq
jg
add
cmp
mov
aam
pop
data16
cmc
dec
into
sub
mov
jns
mov
retf
stos
(bad)
fnstsw
imul
push
cmps
aam
(bad)
dec
fldz
or
mov
or
mov
int3
aam
(bad)
(bad)
stc
scas
out
sbb
fbstp
sbb
imul
das
mov
cmps
mov
pop
test
mov
dec
or
cld
and
test
aad
mov
jmp
imul
cld
call
ss
or
int3
mov
lock
fwait
pop
dec
fstp
retf
adc
mov
pop
in
les
mov
bound
jmp
popf
loope
mov
nop
xor
xchg
mov
cmps
and
dec
scas
popf
xchg
mov
cmp
(bad)
imul
popf
jo
pop
movs
std
dec
sbb
lea
call
sbb
loope
inc
pop
xlat
cmp
ror
out
jg
adc
mov
add
push
cmp
jmp
movq
cs
call
xchg
sub
cmps
xor
mov
push
cmc
push
push
int
hlt
jmp
in
scas
sbb
cmp
xchg
popa
push
add
ss
add
cmp
sahf
aam
inc
das
jnp
lods
inc
dec
nop
test
repz
and
lods
cmp
push
cmp
ss
jg
shr
call
and
int3
fcomp
and
fcom
mov
repnz
cs
xchg
fidiv
in
or
inc
adc
push
test
daa
push
int
rcr
cmps
js
mov
clc
push
popa
xor
mov
jae
call
out
lods
inc
inc
aam
movs
pop
push
and
mov
inc
in
stc
call
pop
or
clc
hlt
lock
cwde
mov
fld
retf
movs
iret
jge
cmp
mov
adc
sub
sub
pushf
jp
jns
mov
mov
(bad)
fcom
in
rcr
jae
inc
adc
adc
add
jl
outs
call
dec
gs
xchg
sbb
xchg
push
xchg
and
mov
xchg
call
enter
hlt
push
ds
jle
dec
pop
fcomp
jmp
ss
in
das
mov
pop
cdq
lea
push
retf
jae
or
cmp
fdivrp
(bad)
sbb
or
dec
jbe
cmp
ret
cmps
inc
dec
cmp
push
pop
cmp
test
pop
mov
int3
mov
jae
daa
mov
test
jnp
into
push
dec
pop
sbb
mov
hlt
dec
cmp
sbb
mov
mov
rcl
into
gs
imul
shl
sbb
jg
fiadd
sar
push
in
mov
dec
cmc
jae
addr16
xchg
mov
xor
add
cmp
dec
mov
aad
mov
jp
jno
dec
add
out
xor
pop
mov
sbb
les
fisttp
mov
loop
call
push
bound
cli
or
mov
xchg
sub
or
xor
xor
enter
loope
and
jmp
int
mov
inc
dec
loop
hlt
jp
pop
mov
in
cmps
pop
out
out
(bad)
dec
test
call
jp
loope
fld
popf
sub
xor
cld
adc
jb
mov
sub
sub
sbb
mov
dec
xchg
sbb
leave
shr
sub
out
loope
xor
push
and
repz
mov
sbb
mov
xchg
push
mov
scas
shl
mov
adc
and
pop
inc
mov
jno
dec
dec
xchg
xlat
fcmove
out
or
add
mov
jge
cmp
shr
or
shl
rcr
outs
stos
xor
jecxz
loopne
and
js
add
jp
push
fcmovne
outs
out
cmps
add
mov
cmp
in
les
test
movs
ret
loope
leave
mov
adc
mov
cmps
xchg
cld
adc
call
rcl
(bad)
(bad)
cwde
and
fwait
mov
adc
fs
in
mov
(bad)
daa
inc
call
and
fst
push
adc
xchg
inc
fidiv
push
sar
retf
jns
pop
repnz
lea
push
(bad)
dec
inc
rcl
xor
and
push
and
inc
(bad)
xchg
lock
fs
adc
aaa
cmp
imul
addr16
mov
fwait
pop
ret
pop
xchg
out
jnp
mov
push
loope
xor
and
push
rdpmc
outs
ja
pop
or
adc
jecxz
add
xchg
retf
stos
or
and
cwde
sti
out
gs
jmp
(bad)
out
sub
adc
push
das
je
inc
aaa
fwait
lods
jge
inc
and
pop
push
jmp
jno
sbb
stc
stc
cmp
addr16
mov
xchg
js
call
(bad)
pop
ins
fstp
push
xor
stos
inc
sti
sti
(bad)
mov
fisttp
or
int
push
push
das
popa
add
inc
push
lods
ror
aas
rsm
fild
xchg
or
dec
mov
shl
pop
repz
scas
sbb
mov
adc
icebp
adc
or
loop
dec
hlt
test
arpl
mov
push
pop
adc
mov
pop
pop
mov
jg
inc
data16
mov
lods
xor
jl
rcl
cmp
push
jecxz
jmp
add
mov
cmps
icebp
ss
push
lock
xchg
xchg
leave
inc
jb
fistp
mov
push
or
pop
xchg
push
iret
pop
fcom
dec
cdq
pop
mov
aad
mov
pop
lahf
cmps
mov
sbb
dec
in
arpl
aad
cmp
ds
add
neg
outs
shl
leave
fnstsw
xchg
pop
and
movs
fistp
mov
jnp
sti
mov
jne
xchg
stos
and
push
sub
ins
cmp
or
mov
std
mov
popf
in
mov
outs
lea
push
sar
mov
jg
call
sub
mov
push
lods
adc
in
jp
mov
xchg
pop
sbb
push
push
adc
dec
into
shl
inc
cmp
hlt
fldcw
pusha
cmp
sbb
pop
ret
pop
sub
hlt
mov
pop
push
(bad)
xchg
or
fnstsw
jmp
inc
stos
stos
outs
daa
lds
mov
in
outs
cld
int3
sbb
popf
(bad)
jmp
xlat
gs
int3
gs
sar
ficomp
adc
jno
sub
xor
outs
div
adc
push
out
mov
js
jmp
jmp
std
pop
jbe
sub
(bad)
sbb
in
dec
sbb
data16
adc
cmp
xlat
inc
ins
test
ins
sub
or
dec
or
push
test
jb
mov
stos
sbb
jae
add
enter
or
mov
push
mov
test
adc
stos
popa
popa
inc
mov
mov
cld
pop
cwde
fchs
repz
and
jbe
dec
test
cdq
dec
popf
add
fldcw
outs
aas
sub
out
dec
and
mov
and
cmp
mov
and
pop
inc
leave
push
adc
lds
(bad)
xchg
sub
xchg
lds
or
cmp
ja
xor
pusha
inc
inc
jnp
fwait
jge
mov
inc
sbb
inc
dec
bnd
movs
mov
jle
mov
jle
dec
ss
icebp
mov
call
ja
call
int
mov
xchg
in
mov
clc
jmp
je
sub
xor
aaa
in
call
test
int
fs
outs
aas
jmp
fs
(bad)
cmc
and
push
test
inc
push
(bad)
adc
cli
ret
imul
test
scas
or
sub
cmc
nop
cwde
mov
pop
sbb
inc
mov
int3
push
or
jnp
ss
dec
add
jo
and
sub
xlat
add
pop
sbb
jnp
movs
or
or
mov
rcl
cmp
or
xchg
ret
gs
adc
inc
hlt
cmps
dec
(bad)
mov
xchg
mov
mov
jnp
adc
or
jns
jl
and
ins
cmp
mov
jbe
(bad)
int
mov
mov
xchg
loop
push
or
stos
adc
xor
aaa
outs
in
xchg
es
imul
push
pop
inc
xor
out
jecxz
ds
mov
xor
cmp
and
inc
xor
repnz
pop
jnp
icebp
shl
test
fnsave
sbb
int
push
idiv
out
add
xchg
pop
(bad)
push
xchg
mov
test
test
retf
cmp
stos
fwait
(bad)
mov
add
sbb
hlt
push
xor
dec
scas
mov
lea
call
or
stos
cdq
ror
pop
and
and
fmul
addr16
(bad)
stos
push
sbb
dec
ret
or
loop
push
and
mov
or
aaa
cmps
std
push
sub
mov
and
shl
cmp
xor
cdq
in
test
movs
call
cld
mov
outs
sahf
push
cli
pop
push
(bad)
jb
inc
cli
or
mov
stc
into
leave
shl
repz
out
cdq
push
cmc
xchg
in
movs
out
cmc
lods
adc
xchg
test
pop
test
xor
(bad)
or
in
popa
xor
shr
(bad)
push
fwait
cmp
enter
add
in
call
and
imul
xchg
movs
les
(bad)
mov
aam
retf
push
mov
xchg
jecxz
jns
add
lahf
push
sub
dec
(bad)
retf
xchg
inc
stos
mov
sti
push
mov
add
inc
pop
pop
jg
push
retf
popa
in
mov
int3
add
sbb
outs
dec
test
xor
sub
scas
cwde
addr16
sti
sti
addr16
dec
rcl
xchg
pop
add
lahf
ror
add
cld
in
fidivr
xor
mov
hlt
pop
ss
pop
sbb
shl
or
xchg
adc
and
dec
jecxz
cmps
lock
adc
fisttp
jne
xor
add
sub
pop
xor
pop
cmp
or
rol
push
and
cmp
sub
test
cdq
dec
fidivr
dec
iret
int
jmp
cmp
lahf
mov
sbb
mov
sbb
cli
outs
or
push
cmp
leave
xchg
fst
pop
push
or
fistp
inc
jae
pushf
inc
jmp
lock
mov
inc
xlat
imul
cmp
jp
ja
call
sar
jno
pop
icebp
(bad)
cmps
mov
pop
out
inc
outs
xor
js
jl
xor
and
call
mov
je
lods
add
push
cmps
out
ins
into
cwde
xchg
aad
sbb
shr
pop
adc
outs
clc
sub
dec
adc
mov
jmp
movs
add
sar
mov
(bad)
xchg
jnp
arpl
in
shl
cli
jp
stos
mov
inc
and
ss
dec
pop
mov
jo
add
mov
jno
hlt
and
push
push
imul
inc
or
pop
xlat
idiv
cmp
sub
cmc
mov
inc
(bad)
jbe
movs
dec
cmc
and
mov
popf
sub
jo
sub
cmp
xor
adc
sub
pusha
jg
jecxz
sbb
and
(bad)
jg
adc
cmps
push
std
loopne
sahf
cmps
in
jmp
test
dec
pop
mov
lds
aad
mov
sub
popa
rcl
sub
mov
or
fmul
jecxz
imul
sub
fstp
inc
cwde
jne
stc
push
call
cli
ds
adc
push
cmp
inc
fcmovb
inc
and
arpl
pop
outs
sbb
or
ffreep
push
xor
(bad)
add
(bad)
adc
mov
mov
xor
int3
shr
mov
xchg
adc
mov
mov
cld
push
mov
or
mov
stos
loope
or
push
jnp
push
push
xor
inc
sbb
shl
popa
out
int
lods
lea
inc
fisttp
adc
or
test
in
(bad)
retf
pushf
cmps
pop
jmp
mov
sbb
push
stos
pop
or
adc
push
fist
inc
mov
pop
push
hlt
adc
push
dec
int3
imul
mov
jmp
clc
retf
(bad)
cmps
sub
sub
mov
mov
mov
fbld
cmc
dec
inc
pop
jge
jecxz
push
(bad)
call
sahf
test
or
jle
and
imul
jae
mov
mov
test
(bad)
test
jbe
call
mov
xchg
sub
cmps
aam
or
xor
cmp
pop
mov
push
addr16
mov
clc
mov
mov
cmp
popa
mov
fwait
mov
outs
fstp
sub
pop
fwait
xor
mov
call
movs
sub
jne
ds
pop
inc
pop
mov
cmp
inc
inc
retf
test
(bad)
fld
mov
push
gs
ret
fstp
xchg
sbb
iret
xchg
cs
iret
jb
cmp
adc
js
jmp
ja
xor
mov
pop
dec
mov
mov
ds
pop
pop
ins
xchg
retf
pop
mov
jo
bound
cdq
mov
mov
sbb
cmp
cmp
(bad)
sbb
fbld
mov
dec
dec
or
ret
movs
mov
fidivr
daa
call
or
std
and
adc
and
mov
inc
shl
(bad)
in
aad
stos
xlat
inc
push
jno
pop
je
lods
push
fiadd
test
xchg
(bad)
shl
test
pop
in
(bad)
popa
icebp
fs
adc
mov
pop
lods
mov
scas
mov
in
aam
shr
push
js
mov
xchg
jge
scas
ja
arpl
adc
add
aam
out
repnz
inc
xor
icebp
sahf
(bad)
mov
jp
fistp
mov
inc
jle
jnp
pop
scas
xchg
mov
repnz
rol
les
out
dec
mov
sub
sub
repnz
mov
jns
mov
mov
xchg
enter
xchg
dec
mov
loopne
fbld
pop
sti
stc
cs
call
inc
or
stos
mov
rol
inc
pop
adc
push
push
sti
in
out
das
dec
dec
push
clc
bound
call
sbb
xchg
pop
das
fcom
rol
mov
push
pop
inc
ss
inc
xchg
adc
jnp
popa
lock
cmp
out
sub
dec
movs
stos
mov
pop
mov
(bad)
out
outs
(bad)
iret
xchg
dec
jle
jecxz
(bad)
das
dec
push
pop
fs
adc
ret
stos
(bad)
cwde
sub
and
jle
xor
xchg
push
mov
jecxz
imul
nop
cmp
jno
pop
push
retf
and
lock
jnp
pop
mov
pop
inc
adc
xor
sub
enter
mov
ud1
inc
pop
inc
out
out
scas
(bad)
dec
idiv
sub
mov
repnz
sub
retf
push
popa
ss
fst
aaa
pusha
jp
popa
pop
cmp
inc
inc
mov
ds
(bad)
in
mov
mov
push
jno
add
leave
dec
pop
ret
cmps
mov
call
xor
dec
jno
stos
pop
xchg
sub
outs
retf
ror
adc
mov
pop
lods
add
cmps
call
inc
push
push
adc
adc
mov
push
pop
addr16
or
mov
jo
mov
cld
inc
dec
cmp
arpl
leave
fistp
fsubr
cmp
pop
fisub
xor
cmp
xor
leave
stc
jp
push
cwde
outs
pop
jmp
inc
pushf
(bad)
push
and
ret
daa
jge
push
push
ds
dec
mov
repz
xor
adc
mov
add
mov
xchg
std
mov
and
push
fcomp
pop
(bad)
popf
xchg
jb
loop
inc
adc
aaa
enter
pop
loope
sub
push
mov
mov
retf
cmps
xor
pop
fidivr
pop
push
push
dec
test
(bad)
retf
cli
dec
sub
(bad)
push
xor
(bad)
xor
add
adc
push
mov
adc
dec
push
(bad)
mov
jl
aas
outs
inc
sbb
lods
sbb
mov
mov
pop
stos
adc
push
adc
iret
cmp
dec
popf
adc
imul
cmc
or
scas
push
out
repz
adc
icebp
lea
cli
xchg
sub
call
or
cmp
ins
repz
dec
cdq
pop
mov
mov
pop
leave
and
clc
xchg
jnp
jle
pop
jae
adc
or
dec
sub
imul
fild
push
aaa
xor
mov
popf
inc
pop
cmp
mov
into
loop
fwait
sbb
cs
mov
push
pop
retf
jg
repz
mov
lods
adc
les
cwde
cwde
jo
mov
cmps
sahf
add
icebp
adc
(bad)
sbb
push
push
jmp
sbb
dec
xchg
aam
loopne
mov
cmp
icebp
call
jns
cli
cmp
ss
das
mov
add
mov
in
push
daa
arpl
(bad)
fsub
push
mov
movs
mov
xor
aam
test
xor
push
(bad)
xchg
popa
repnz
mov
loop
cmc
jp
push
into
repz
push
std
fdiv
in
and
(bad)
rcr
xchg
imul
rol
jno
ret
(bad)
loopne
pop
mul
ret
bound
sub
aas
lds
push
mov
cld
pop
mov
loopne
add
lds
fs
add
jge
push
sbb
stos
mov
call
pop
or
das
jb
leave
cld
ret
xchg
bound
push
dec
and
cmp
mov
loope
add
add
dec
enter
lods
xchg
xor
out
cli
addr16
cmp
(bad)
ins
loope
fimul
pop
mov
jne
push
inc
xlat
daa
jno
inc
aaa
sbb
add
aam
fdiv
movs
fdiv
cmps
ds
or
xchg
out
jg
mov
movs
dec
int3
(bad)
pop
mov
test
fdivr
or
mov
(bad)
movs
in
jecxz
or
add
int3
cld
cmp
pop
mov
cmps
imul
dec
xchg
mov
dec
sbb
mov
loop
mov
mov
sahf
cmp
jmp
cmp
loopne
cld
movs
outs
call
xor
aam
xchg
push
pop
pop
out
adc
pop
mov
(bad)
iret
xlat
mov
sbb
sti
aas
xchg
aas
lods
jno
sub
and
adc
retf
dec
sar
das
or
jae
jecxz
xchg
xor
push
dec
ffreep
push
dec
inc
mov
sahf
push
ins
cld
pusha
add
sub
imul
jecxz
push
mov
fidiv
test
arpl
push
dec
stos
inc
and
daa
jmp
sub
xor
mul
popa
lock
div
ja
jne
jno
push
add
popw
mov
jl
inc
and
dec
fisubr
push
ss
push
mov
jnp
ret
pop
scas
int
push
xchg
sub
xor
(bad)
sti
mov
jle
fdiv
sub
ins
(bad)
daa
mov
push
mov
xchg
int
sti
ins
sbb
das
and
mov
xchg
add
movs
in
pop
xchg
hlt
add
inc
test
or
jns
and
aaa
cld
xchg
sbb
xchg
repnz
xchg
(bad)
pop
mov
cmc
fnstcw
inc
jo
punpcklbw
jb
lods
arpl
jmp
cmp
lock
pop
jl
movs
outs
nop
mov
imul
inc
lahf
mov
sub
mov
jb
ret
outs
inc
psubsw
and
jmp
and
les
xor
pshufw
pop
call
shr
pop
movs
mov
icebp
fdiv
adc
cmp
aam
push
mov
xlat
ficom
push
mov
std
jge
sub
imul
loopne
xchg
into
mov
mov
or
lahf
popa
outs
sbb
push
pop
add
retf
rol
ins
cmps
pop
mul
imul
retf
pop
loope
dec
mov
outs
add
add
leave
aam
mov
adc
out
fcmovb
dec
mov
or
std
xchg
push
inc
dec
mov
jbe
inc
inc
lock
xchg
hlt
arpl
pop
xchg
movs
xchg
idiv
push
test
scas
push
jle
(bad)
jmp
cmp
fwait
dec
and
(bad)
nop
clc
xchg
inc
push
adc
icebp
mov
sub
pop
mov
push
inc
test
add
mov
setae
call
jmp
not
sbb
imul
or
popf
cmp
call
sub
inc
rol
out
rcr
pop
aaa
loopne
sub
rcl
lock
mov
xacquire
jmp
dec
inc
stos
and
mov
jo
std
mov
sub
jp
popa
(bad)
(bad)
jns
fwait
and
popf
xor
fistp
out
and
mov
jp
cmp
out
and
ds
aas
cdq
mov
int3
sbb
inc
dec
addr16
add
mov
mov
inc
pop
repz
jb
sar
xchg
sub
push
rol
call
sub
mov
add
movs
mov
lods
sti
xor
int3
sbb
push
dec
sbb
cmp
and
push
(bad)
xchg
jbe
sub
movs
xor
cmp
pop
test
pop
sub
push
xchg
hlt
sbb
mov
gs
inc
push
jecxz
add
(bad)
loope
dec
mov
(bad)
mov
fwait
or
jle
idiv
sti
push
movs
mov
into
mov
xchg
in
jp
sar
out
in
mov
mov
push
adc
jg
jmp
outs
div
ds
inc
imul
xchg
pop
repnz
scas
jp
jmp
hlt
push
jle
xor
js
cmp
mov
aaa
dec
test
adc
gs
les
(bad)
and
pop
mov
rcr
mov
leave
test
fcmovnbe
mov
sti
addr16
mov
js
mov
popf
imul
fisttp
add
add
add
shl
and
jbe
leave
loope
cmps
dec
cdq
sbb
sub
sub
xlat
stos
mov
mov
popf
adc
call
push
mov
mov
sbb
dec
pop
call
sbb
fmulp
add
or
mul
iret
cwde
push
mov
call
ror
jns
inc
cwde
pusha
mov
ins
(bad)
rol
and
je
lods
sub
gs
repnz
ja
loope
pusha
scas
and
mov
mov
mov
mov
xchg
add
ret
push
xchg
mov
dec
out
mov
sbb
call
push
pop
and
cmp
cmp
cwde
cmps
pop
pop
sub
test
mov
(bad)
in
popf
jnp
sub
pop
mov
mov
pop
imul
call
xchg
dec
scas
mov
and
cmp
mov
push
push
mov
pop
sbb
jg
rol
mov
cs
inc
add
(bad)
dec
retf
sbb
or
(bad)
dec
loop
pop
shl
cmp
bnd
mov
fcom
adc
sub
(bad)
or
mov
jno
arpl
or
xor
push
cld
dec
lock
dec
add
ret
clc
mov
retf
retf
inc
test
push
lds
cld
push
or
mov
cmp
cld
add
(bad)
popf
iret
push
sbb
push
leave
and
mov
mov
repz
les
fidiv
test
gs
out
ja
mov
jae
dec
pop
addr16
mov
sbb
xor
pop
out
data16
in
call
hlt
mov
in
nop
jne
add
fidivr
out
xchg
push
xchg
clc
je
je
push
imul
fxsave
push
frstor
inc
mov
mov
popa
cmp
sbb
cwde
mov
inc
mov
pop
xchg
add
pop
movs
out
sub
jns
xchg
mov
ror
pop
(bad)
scas
cs
addr16
nop
xor
and
test
fwait
rcl
pop
pusha
inc
aaa
adc
jns
loop
lds
lods
mov
add
pop
sub
jmp
mov
mov
movs
in
push
jl
lods
push
inc
int3
add
outs
loop
(bad)
and
xor
xor
sbb
fild
mov
cmp
jmp
lea
call
mov
fs
or
cmp
pop
test
fiadd
into
in
add
or
xor
cmc
sbb
or
(bad)
mov
lods
and
aas
fdiv
adc
adc
ins
inc
retf
shr
call
out
fsub
adc
adc
out
sub
(bad)
aaa
loop
sub
add
mov
mov
jp
aas
shl
fldenv
and
stos
popf
pushf
or
jl
js
mov
xor
je
cmps
shr
xchg
ja
xor
retf
cmp
cdq
imul
xchg
adc
out
iret
mov
xchg
mov
pop
ins
test
mov
retf
(bad)
xchg
sahf
mov
popf
xchg
xchg
std
inc
sbb
inc
push
mov
sbb
mov
movs
add
into
lods
jp
and
xor
mov
adc
shr
xor
xchg
cmp
jp
mov
pop
jp
xor
and
xor
mov
and
adc
cmp
xchg
or
dec
iret
movs
shr
jp
push
or
(bad)
xchg
addr16
jle
rcl
mov
shl
jg
movs
test
and
aas
dec
and
(bad)
(bad)
dec
int
mov
call
and
ins
sti
cwde
add
mov
fmul
and
xor
bound
cmp
cmp
(bad)
fs
fmul
pushf
xchg
sub
xor
and
and
repz
pusha
fild
sbb
sar
adc
push
jmp
mov
inc
sub
out
daa
pop
mov
ds
repz
mov
push
push
js
jg
xchg
jle
test
imul
outs
cmp
jecxz
loop
ds
in
sbb
retf
jno
nop
cli
push
mov
jg
and
int
repnz
jg
in
sbb
cmps
loop
adc
scas
or
div
ficom
mov
and
add
xor
sub
or
push
fst
sub
sub
test
xlat
dec
jns
add
pop
loopne
lods
outs
and
sbb
mov
mov
pop
pusha
test
ret
fidivr
inc
xchg
push
std
xchg
imul
pusha
leave
or
(bad)
add
cwde
scas
mov
rcl
je
out
pop
daa
mov
loope
jl
test
and
call
xor
jge
xchg
fiadd
das
loopne
push
shl
mov
daa
dec
arpl
cmp
lea
movs
ss
cdq
int3
pop
stos
mov
and
rcr
pop
mov
mov
call
das
data16
push
and
and
push
cmps
js
mov
(bad)
fimul
jne
fwait
ret
aas
dec
dec
mov
and
arpl
sti
leave
call
leave
rcr
pop
gs
nop
lods
inc
push
into
js
pop
sbb
inc
scas
test
add
in
mov
retf
and
pop
and
inc
jg
(bad)
rol
xchg
pop
push
cmc
add
in
vmovhpd
(bad)
pop
dec
bound
aad
pop
fld
enter
movs
adc
shr
(bad)
inc
push
dec
xchg
adc
(bad)
pushw
mov
jo
sub
mov
push
dec
pop
out
dec
xchg
dec
fsubr
(bad)
in
ret
ret
inc
xor
push
lods
leave
fcmovbe
sbb
sbb
mov
sbb
aad
xor
adc
sub
and
outs
cmp
jmp
iret
inc
push
sti
sbb
jg
xchg
sub
jb
inc
retf
mov
jmp
es
lods
mov
lods
pop
and
dec
or
out
and
aam
retf
pop
and
push
test
jp
sub
xchg
inc
call
mov
(bad)
loop
mov
inc
mov
in
mov
(bad)
push
sahf
lea
mov
into
cli
xchg
cs
loop
ret
cmps
sub
and
jle
shl
lds
xchg
pop
retf
(bad)
xchg
das
cmp
mov
inc
pop
add
cs
scas
jmp
inc
pop
icebp
xor
rcr
pop
push
loope
mov
push
mov
xchg
xor
test
add
es
outs
xchg
popf
inc
mov
popf
ins
inc
add
(bad)
lds
sar
call
clc
ds
mov
mov
retf
lods
sub
sahf
jmp
sub
hlt
fidiv
jle
rcl
cmc
cdq
or
inc
shl
and
shl
xchg
push
pop
cmp
mov
jae
sub
xchg
xor
xor
aaa
retf
pop
mov
retf
loopne
ret
push
in
push
aaa
sub
push
xchg
test
jbe
je
(bad)
jle
cmp
and
jbe
sbb
add
imul
aaa
inc
in
addr16
mov
or
adc
test
and
jne
mov
dec
add
(bad)
(bad)
push
dec
sub
jle
push
stc
icebp
xor
mov
repz
outs
hlt
mov
test
push
enter
repnz
ja
mov
cmp
imul
loopne
not
loop
hlt
inc
and
rol
xchg
inc
adc
shr
add
add
mov
xor
sti
xchg
movs
inc
out
dec
and
cmps
and
xchg
(bad)
xchg
jo
repnz
nop
neg
lea
dec
stos
cmps
outs
popa
jl
pop
or
jno
dec
cmp
push
xor
ins
push
xor
sbb
mov
cmps
sub
lahf
push
dec
mov
add
pop
aaa
jp
jns
pushf
lds
stc
ja
sahf
aas
dec
ret
(bad)
push
mov
mov
and
lods
lods
or
jp
lds
dec
mov
test
xchg
retf
(bad)
cmps
aas
or
push
mov
sub
jg
cmp
xchg
inc
inc
cwde
das
mov
inc
shl
test
out
add
sti
or
mov
fstp
leave
inc
or
icebp
icebp
test
sahf
out
pop
data16
enter
cmp
cld
mov
jbe
xchg
call
adc
test
call
mov
pushf
fmul
leave
popf
mov
es
sbb
adc
mov
(bad)
repnz
pop
sti
sub
cmc
push
mov
mov
stos
mov
sub
addr16
je
and
sub
add
mov
jne
sub
add
mov
jmp
mov
cmc
push
dec
mov
push
mov
add
dec
cmp
xor
in
in
retf
shl
(bad)
fld
mov
or
movs
dec
and
xchg
or
sub
test
shl
pop
pop
and
mov
jno
push
repz
sub
(bad)
imul
adc
adc
and
cmp
outs
and
nop
inc
call
cmps
xor
mov
shr
push
xor
jecxz
mov
xor
mov
jnp
mov
dec
ja
gs
push
cwde
repz
or
sbb
rcl
jb
and
enter
shl
mov
stos
nop
pop
mov
fs
sbb
and
cmp
inc
ss
test
iret
xchg
(bad)
scas
fst
pop
xchg
mov
dec
mov
aam
cmps
cmp
add
add
inc
or
cs
pop
popa
inc
mov
inc
mov
sti
sbb
push
movs
lahf
imul
das
rep
mov
das
data16
adc
sbb
test
loop
imul
dec
and
mov
push
arpl
jno
lock
clc
leave
(bad)
ret
movs
mov
mov
jae
sbb
sbb
dec
add
dec
cmp
std
enter
push
cmp
call
jp
sbb
fldln2
faddp
ins
enterw
in
test
jecxz
daa
inc
xchg
push
adc
sub
cmp
cmp
loope
add
xor
ja
pushf
loopne
out
dec
stos
jmp
jne
ja
xchg
das
mov
scas
adc
sub
inc
into
sti
mov
ror
retf
inc
xor
pop
sub
xor
and
scas
lds
mov
pop
les
leave
(bad)
scas
outs
retf
movs
pop
cmp
mov
out
xor
cmps
(bad)
dec
mov
mov
aam
cmp
mov
popf
xor
sub
jg
out
repz
loope
sbb
rol
sub
test
pop
inc
xchg
sub
xchg
imul
push
sbb
push
inc
mov
and
add
rol
retf
imul
ins
cmp
jge
mov
ins
xor
dec
cs
(bad)
into
mov
add
icebp
rcr
pop
loope
inc
xor
and
hlt
imul
sbb
dec
push
mov
call
xor
cmp
jns
fdiv
imul
pop
sar
ins
mov
dec
push
push
scas
dec
mov
cmp
iret
xchg
popa
rol
stos
retf
in
adc
cli
mov
xchg
test
or
xchg
inc
outs
inc
lea
loopne
jmp
js
in
fs
adc
push
cmps
test
fucomp
imul
xchg
lahf
jnp
push
jmp
add
xor
inc
sub
adc
mov
jle
xchg
pop
push
(bad)
xor
mov
leave
push
vpaddq
sub
pop
rcl
and
data16
jl
mov
adc
cmps
fldcw
je
dec
outs
int
mov
loop
inc
add
movs
addr16
add
xchg
xchg
fisttp
pop
enter
cmp
xlat
cmp
sbb
mov
lods
in
retf
mov
fst
mov
mov
dec
mov
aam
add
nop
mov
pop
js
mov
sub
daa
jge
or
in
mov
nop
enter
stos
and
int3
inc
enter
jbe
ins
inc
add
mov
ins
and
sbb
cmc
mov
push
ins
sti
ss
dec
scas
andnps
fist
pop
call
loop
mov
cmp
div
cmp
xchg
xchg
sub
add
gs
dec
ins
and
sub
sub
xchg
call
sub
dec
movs
rcr
mov
cmc
mov
add
jmp
sbb
sub
jecxz
cli
push
leave
call
fldcw
sbb
mov
aam
and
or
int
mov
clc
in
cdq
add
shr
inc
jo
inc
retf
xchg
aas
test
or
call
push
dec
xchg
push
scas
loope
dec
sub
and
mov
cmp
ins
movs
xor
push
pushf
sub
sbb
shl
sub
mov
gs
fwait
pop
or
stc
sbb
dec
jmp
movs
mov
and
popf
lds
cdq
imul
out
push
aaa
push
mov
inc
in
repz
and
add
mov
pop
sbb
adc
ror
pop
and
mov
nop
and
mov
sahf
mov
sub
shr
lods
ins
cmp
push
iret
inc
jmp
jmp
test
shr
push
(bad)
mov
jmp
mov
in
shl
xor
dec
push
adc
jle
outs
mov
xor
xchg
inc
sbb
sar
pop
push
jge
and
inc
ret
pop
je
mov
pop
mov
inc
jmp
mov
sbb
leave
sub
mov
dec
ds
pop
mov
push
push
ins
jae
xchg
jge
cmp
dec
sub
mov
and
(bad)
jge
mov
int
ds
pop
in
les
xchg
mov
xor
(bad)
mov
(bad)
jge
mov
xchg
(bad)
push
div
in
jne
jge
xor
int3
inc
test
ror
sbb
jecxz
dec
pop
jbe
rcl
mov
inc
xchg
adc
fxch
mov
outs
call
popf
(bad)
retf
or
push
lods
mov
ins
jne
pop
and
mov
pop
pop
xchg
ret
xor
(bad)
push
push
outs
pop
xor
fs
mov
xlat
push
push
mov
in
and
outs
(bad)
clc
cli
jp
dec
clc
jo
cdq
scas
mov
xor
mov
mov
rcr
or
enter
or
jmp
sbb
fmul
mov
or
adc
hlt
ds
or
loope
or
xchg
sar
and
and
rcl
and
mov
and
dec
ret
mov
enter
cs
xor
cdq
into
data16
bound
pop
hlt
dec
and
test
outs
shl
pop
mov
xor
dec
mov
add
iret
pop
push
aad
lahf
push
ret
inc
jae
pop
fisub
sub
movs
pop
sahf
sub
pushf
sbb
fucomip
add
cmc
jmp
rol
jmp
dec
dec
loop
test
mov
test
mov
in
scas
or
arpl
dec
mov
and
pop
test
ins
xchg
jbe
or
sti
sub
cmc
ret
stos
mov
fsub
movs
cmp
rep
out
and
cmc
mov
mov
in
add
out
add
sar
test
loop
fcomp
test
pop
adc
inc
cmp
mov
fisub
mov
or
cmps
mov
(bad)
shr
cs
retf
in
push
lock
mov
bound
sub
aad
test
dec
adc
xlat
std
daa
xchg
adc
stos
sbb
pop
ror
js
mov
into
sub
adc
cld
test
mov
mov
fild
pop
adc
xchg
imul
retf
in
xor
xchg
lods
or
jns
adc
call
mov
dec
add
cld
and
clc
dec
push
inc
aad
xchg
xchg
out
dec
dec
push
adc
pop
arpl
rol
cmpxchg
bound
daa
cld
inc
pop
push
push
loope
enter
lock
dec
adc
retf
out
push
es
mov
call
cs
and
xchg
xchg
(bad)
adc
in
ror
test
out
or
and
sar
sub
pop
(bad)
imul
das
lods
sahf
shl
xor
pop
inc
jo
retf
lea
cmp
stc
xchg
out
add
jbe
ror
inc
dec
in
inc
(bad)
je
adc
mov
loope
cmp
dec
aad
adc
lea
mov
inc
mov
inc
sar
pop
ins
sbb
aad
xor
add
js
push
add
stos
push
pop
jle
mov
pop
fwait
jb
mov
stos
push
fnstenv
jge
xchg
out
in
xor
jmp
xor
dec
loop
jecxz
in
adc
jge
mov
xor
idiv
inc
cvtps2pd
mov
arpl
sbb
test
out
jg
pop
sar
and
rol
(bad)
push
mov
(bad)
ins
jo
jecxz
sub
ror
and
xor
loopne
and
imul
shl
pop
push
fstp
pushf
shr
add
popf
xchg
iret
or
ja
stos
adc
push
push
or
lahf
jmp
add
inc
jo
or
add
mov
pop
ins
lea
or
add
retf
into
scas
mov
xor
fcmovu
fcomip
inc
and
xchg
test
daa
jg
and
push
stos
sbb
mov
push
adc
ret
cli
pop
or
dec
pop
inc
xchg
and
push
sub
pop
mov
outs
int3
push
mov
pop
mov
push
push
mov
(bad)
inc
or
mov
mov
xchg
retf
add
or
out
in
cmps
outs
outs
xlat
cmp
ja
xor
imul
mov
push
adc
shl
pop
inc
or
push
xor
out
out
adc
xchg
cmp
dec
lods
icebp
sub
imul
pop
cmp
adc
out
mov
xchg
lods
mov
mov
pop
scas
cwde
jae
add
stos
in
adc
int
jge
mov
push
mov
mov
xchg
or
adc
out
sbb
xlat
je
mov
and
mov
in
daa
in
ror
inc
aas
(bad)
mov
pop
fs
xchg
popf
sub
mov
mov
or
xor
and
xchg
retf
inc
pop
fdivr
jo
or
or
aaa
repz
dec
into
jge
icebp
and
push
sahf
mov
sub
bound
pop
cmp
es
inc
sub
pop
mov
int3
std
push
outs
xchg
mov
inc
pop
addr16
dec
xor
clc
sbb
jecxz
call
jp
or
leave
add
push
cmp
(bad)
sbb
pop
sbb
int
xchg
nop
push
push
jecxz
and
jg
and
add
(bad)
cmp
clc
pop
movs
sbb
or
pushf
iret
int3
enter
dec
xchg
out
ror
mov
push
mov
cmps
stos
mov
lea
dec
pop
mov
fs
hlt
mov
sub
fwait
mov
xor
mov
sbb
mov
mov
inc
mov
pop
imul
stc
into
movs
das
or
mov
mov
sbb
add
mov
pop
xchg
outs
nop
imul
xchg
cwde
nop
ror
inc
xchg
sbb
jmp
mov
sbb
lods
ds
mov
stos
loope
xchg
and
int3
pop
add
adc
mov
and
cmp
push
aaa
out
inc
aas
mov
cmp
dec
sbb
xchg
rcr
mov
push
sbb
aas
lock
iret
fxtract
cmp
scas
dec
aaa
or
sub
std
ins
cmp
inc
cmp
xlat
adc
adc
(bad)
sub
sub
sub
adc
imul
call
into
cmps
xchg
sti
jecxz
or
inc
in
sbb
nop
sbb
sub
dec
add
xchg
or
xor
push
or
(bad)
or
hlt
retf
jb
push
xlat
and
test
dec
and
inc
dec
out
xor
aas
mov
daa
das
fdivr
call
dec
in
pop
ins
int3
push
test
ret
stc
cwde
sar
sub
test
stos
adc
cmp
(bad)
xor
jmp
jle
(bad)
retf
leave
(bad)
out
xchg
shl
cmp
mov
or
popf
jnp
mov
jg
mov
mov
cdq
shl
call
xchg
mov
lods
jne
hlt
data16
xchg
(bad)
sbb
pusha
stos
ds
or
fild
ins
cmp
add
adc
inc
push
hlt
sbb
(bad)
test
adc
adc
lods
lahf
cs
ss
cmp
leave
adc
call
push
push
out
sbb
push
mov
pop
gs
loopne
pop
or
stos
push
mov
arpl
arpl
push
out
movs
push
cmp
cmp
dec
pop
mov
cmovge
push
cmps
out
and
mov
(bad)
in
in
call
mov
push
xor
int3
fbld
jae
out
mov
cmp
test
jae
dec
dec
xor
lods
test
jl
jge
jbe
cs
in
jb
xor
adc
nop
sub
inc
sub
ss
cwde
mov
inc
fcomp
xlat
adc
das
jge
sbb
and
in
cmp
sbb
stos
int
test
cli
neg
add
xor
(bad)
stos
inc
std
push
addr16
popf
or
cmc
mov
out
call
ins
jmp
sbb
mov
xchg
xchg
gs
cmp
push
sar
pop
js
pop
inc
xor
mov
daa
inc
mov
jnp
mov
imul
push
dec
sahf
dec
push
mov
push
push
jno
xchg
(bad)
bound
hlt
loop
fisubr
movs
sahf
or
sub
scas
adc
lock
movs
jns
(bad)
not
int
fild
bound
jl
pusha
(bad)
aam
clc
dec
mov
or
stc
sbb
inc
mov
stc
aad
push
mov
(bad)
pop
cmp
test
xor
scas
ret
jns
call
lahf
mov
cmp
cmp
pop
cmp
clc
fild
mov
jbe
cs
mov
mov
sub
jmp
enter
js
jb
add
mov
mov
fnstenv
jns
aaa
push
add
les
sar
pop
retf
xchg
jmp
sbb
stos
push
repz
out
push
pop
cli
push
rcr
jae
aas
(bad)
(bad)
and
adc
jecxz
and
inc
into
ret
dec
jge
aas
js
jmp
ds
push
repz
lods
xchg
in
scas
add
or
mov
fwait
adc
mov
in
add
rcr
xchg
sbb
push
xor
mov
test
int3
bound
mov
repnz
test
outs
push
mov
mov
mov
mov
or
call
cmp
cdq
mov
mov
xor
outs
dec
dec
jo
adc
add
sub
addr16
fidiv
cwde
(bad)
jmp
push
cld
hlt
les
hlt
out
jb
aad
cmp
adc
push
jno
pop
jbe
pop
hlt
aaa
cwde
sahf
mov
push
jo
or
add
or
cmps
xor
daa
ret
(bad)
ss
mov
loopne
sub
fisubr
lods
aaa
leave
or
mov
mov
(bad)
xchg
dec
test
mov
aas
(bad)
(bad)
mov
push
mov
imul
and
addr16
fldcw
xor
(bad)
std
mov
mov
aas
xor
mov
pop
fisub
xchg
sbb
int
js
sbb
sbb
cmc
and
loopne
scas
ins
bound
xor
inc
shl
push
shr
or
fdivr
and
pop
dec
pop
xor
(bad)
jae
mov
bound
and
mov
jae
jnp
push
mov
push
lea
dec
icebp
lock
push
test
mov
fs
xchg
pop
rol
(bad)
fst
or
mov
call
mov
syscall
jp
dec
(bad)
cmp
pushf
push
push
cwde
sub
cmps
out
int3
lods
jae
cs
adc
imul
loope
push
sub
je
mov
nop
inc
iret
repz
rol
xchg
jmp
pop
jge
ficomp
mov
sub
into
mov
and
mov
jecxz
xor
gs
cmps
or
shl
lea
sub
jg
ds
push
and
add
push
popf
ins
outs
add
xchg
ins
mov
mov
mov
and
xor
shl
sub
cmc
ror
mov
or
outs
mov
mov
in
pusha
pop
aam
xlat
push
and
lea
mov
stos
aas
sbb
or
push
push
inc
loopne
sub
jge
ret
in
enter
mov
push
lahf
aaa
mov
xor
dec
and
and
ins
rcl
cmps
sbb
mov
lea
inc
mov
push
in
sbb
pop
jnp
in
fs
sub
loopne
sbb
dec
sbb
and
jp
imul
repnz
ret
cli
(bad)
jmp
mov
xor
sub
nop
ja
cmp
mov
les
shl
bound
dec
stc
(bad)
icebp
xchg
pop
fwait
outs
and
sti
cs
jp
mov
sahf
xchg
ins
ja
mov
xchg
add
xor
pop
add
call
mov
dec
(bad)
std
jmp
lods
ret
ss
add
mov
(bad)
in
fdiv
(bad)
lds
and
jecxz
jge
in
jp
mov
shr
jle
inc
outs
jno
adc
or
xchg
jecxz
lea
(bad)
div
xor
push
(bad)
mov
pop
repnz
(bad)
xor
and
inc
pop
mov
inc
dec
scas
inc
aad
push
jle
push
daa
ret
mov
xchg
and
jmp
out
and
bnd
add
push
cmc
dec
mov
inc
sbb
fist
loop
sub
adc
cmps
inc
(bad)
int
push
sbb
icebp
push
adc
outs
and
fistp
test
sbb
mov
(bad)
data16
addr16
push
xchg
mov
mov
push
jae
pusha
test
mov
neg
mov
dec
enter
shr
in
mov
push
push
dec
add
push
loop
pop
lock
test
adc
sbb
call
mov
les
call
fstp
int
movs
outs
popa
ja
in
fisubr
lock
dec
jne
mov
ja
cmps
cmp
fsubp
mov
and
pushf
jecxz
test
sub
mov
push
pop
fisubr
hlt
sub
fldcw
into
into
xchg
rol
jmp
add
pop
inc
sub
push
int3
hlt
(bad)
cdq
inc
cmp
bound
mov
xor
xor
push
jle
lods
sar
jecxz
and
push
test
(bad)
mov
pop
clc
test
push
or
out
cmps
sbb
sbb
popa
mov
xor
fadd
inc
adc
mov
icebp
ds
pop
push
sub
dec
dec
sub
lods
lods
mov
add
stos
xor
cli
(bad)
hlt
sub
cmc
pop
fdiv
mov
pop
shr
shl
addr16
retf
stos
cmps
movs
inc
pop
cmc
push
(bad)
mov
dec
mov
mov
pop
and
and
adc
add
add
ret
js
push
cli
xor
push
outs
and
ret
shr
sub
jg
mov
inc
aaa
std
repnz
pop
or
push
mov
mov
sti
out
pop
push
adc
inc
in
xchg
and
mov
pop
cmp
pop
repnz
add
retf
mov
xchg
sti
xor
jnp
pop
or
(bad)
adc
adc
loopne
dec
adc
pop
repz
dec
pushf
xchg
add
add
lock
inc
pop
dec
ret
fisttp
xor
dec
mov
jns
sub
fst
and
out
sub
popf
inc
xor
fmul
repz
cmp
sub
outs
icebp
push
mov
in
xchg
popa
cmps
fwait
sbb
mov
outs
dec
dec
iret
ret
push
lods
dec
movs
test
xor
mov
lds
inc
clc
adc
sbb
hlt
cmp
or
fstp
pop
sbb
push
neg
push
ins
push
call
adc
cmps
stos
mov
adc
lds
loop
test
cwde
mov
mov
das
pop
hlt
ds
lea
(bad)
pop
jmp
push
movs
mov
pop
scas
test
cmps
inc
push
push
rcr
shr
xchg
mov
jge
out
adc
mov
add
loop
mov
push
add
mov
iret
std
xor
outs
jbe
mov
fmul
push
cld
xchg
sub
dec
jge
jmp
add
inc
fwait
push
test
pop
fs
cli
fstp
xlat
dec
mov
pop
hlt
(bad)
jae
shl
jb
or
sbb
sti
pop
adc
arpl
lds
inc
sbb
xchg
mov
enter
bound
jno
jo
jge
stos
xlat
fdivr
in
sbb
dec
call
xlat
outs
inc
cld
in
xchg
loopne
pop
repz
push
pop
inc
rol
xchg
push
fcom
hlt
xor
dec
gs
(bad)
xchg
pop
fldcw
adc
and
cmp
push
mov
mov
(bad)
pop
shl
es
push
mov
dec
adc
adc
mov
mov
sub
pop
cmp
pop
sub
cmp
add
pop
aas
xor
lahf
mov
lds
sbb
outs
popa
mov
mov
pop
xchg
mov
rol
dec
sbb
xor
lahf
movs
cmps
jns
mov
std
sbb
sbb
hlt
jg
push
mov
adc
add
loope
cmps
iret
adc
dec
aam
sti
test
int
cli
sar
gs
jo
cmp
dec
loopne
inc
xchg
pop
fstp
jge
aad
pop
iret
fist
or
popa
add
out
and
xor
dec
retf
mov
pop
lds
(bad)
aas
pusha
push
pop
fstp
mov
popf
test
rcr
imul
jecxz
xchg
lea
popa
into
or
sub
jb
stos
int3
scas
add
and
xor
jge
daa
(bad)
rcr
mov
pop
in
ret
call
push
test
fcomp
dec
xchg
stos
add
inc
je
int3
ror
and
jb
push
cmp
add
cs
fist
jno
jnp
inc
dec
mov
loopne
sub
xchg
leave
and
mov
in
bound
adc
xchg
mov
or
jecxz
ss
jmp
push
xor
or
jg
push
repnz
addr16
ficomp
test
je
iret
adc
xchg
jmp
jo
push
or
lds
call
push
jae
dec
scas
gs
retf
movs
xor
retf
call
add
jle
lea
adc
stc
sbb
adc
xchg
xchg
ja
or
test
lahf
mov
mov
adc
daa
in
inc
mov
jg
sub
pop
adc
popf
add
imul
fucomip
xorps
and
popf
sbb
xchg
add
push
popf
sub
inc
out
fild
into
pop
mov
and
iret
sbb
repnz
mov
retf
out
cwde
shl
jno
mov
(bad)
jns
mov
fwait
and
movs
mov
ret
stos
pop
enter
xchg
fcos
mov
shl
xor
sub
out
(bad)
outs
cmp
stos
idiv
enter
push
xor
loope
mov
cmp
ds
sub
and
cmp
hlt
lock
(bad)
stc
mov
jge
int
out
pop
loop
call
mov
mov
shl
test
fldcw
(bad)
push
out
xlat
ins
push
bswap
cli
jbe
ret
xchg
leave
inc
push
dec
dec
ins
cmp
cmp
in
sar
pop
xchg
(bad)
cmp
out
sar
cmp
mov
add
popa
mov
cdq
or
push
pusha
jbe
pop
test
and
or
outs
mov
push
sbb
ins
adc
fdiv
xor
test
xor
and
aam
mov
pop
in
popa
ss
repz
scas
outs
mov
test
adc
mov
mov
cmc
jecxz
or
sahf
push
(bad)
sbb
mov
test
imul
xor
xor
(bad)
neg
popf
inc
adc
data16
aad
inc
and
inc
sbb
adc
stos
dec
call
jns
dec
cmp
sbb
fcom
leave
fisubr
icebp
push
(bad)
les
mov
pop
pop
std
mov
daa
sbb
jb
repnz
lock
cmp
mov
hlt
jle
xchg
pop
mov
cmps
add
cmp
jno
adc
cmp
and
or
test
jmp
aad
push
shl
cmps
test
out
and
adc
xchg
xchg
dec
call
outs
repnz
adc
and
sub
push
std
mov
fs
push
ins
inc
dec
xor
enter
fisttp
push
mov
ins
test
jmp
push
xor
pop
rol
mov
jl
mov
dec
push
dec
mov
std
mov
hlt
sub
ins
dec
adc
stos
pusha
ret
push
xor
fcmovbe
pop
enter
stc
cmc
add
inc
jecxz
add
jbe
add
pop
xchg
push
outs
inc
das
clc
jle
ss
cli
xchg
inc
push
add
pop
(bad)
adc
ins
sub
cdq
cmp
call
nop
mov
and
push
cwde
aad
xor
call
mov
imul
(bad)
sti
mov
sbb
jne
rcr
pusha
cdq
(bad)
ds
push
sub
xor
mov
cmp
dec
push
fwait
(bad)
retf
dec
movs
xchg
mov
adc
cmp
sbb
sbb
mov
jnp
scas
fld
xchg
jecxz
dec
stos
mov
test
dec
cmp
out
loopne
jmp
adc
mov
inc
or
in
out
rcl
dec
or
stos
fsub
mov
fst
mov
inc
pop
sub
pop
rcl
test
jecxz
pop
xor
mov
test
lods
outs
in
add
inc
cmp
gs
mul
inc
mov
xchg
mov
ficom
out
test
xchg
rcr
sbb
jl
push
fisttp
pop
enter
cmp
xchg
add
push
dec
xchg
and
mov
mov
out
jg
scas
outs
xor
mov
out
fbld
xor
rcl
jecxz
div
push
out
outs
xor
aaa
in
fdiv
in
and
mov
into
ins
pushf
enter
lea
add
jp
or
or
adc
fstp
fucomip
imul
mov
daa
add
jno
(bad)
push
push
mul
lods
fst
push
sub
(bad)
mov
in
imul
jg
cmp
inc
sbb
or
push
sub
mov
xchg
mov
pushf
mov
pop
test
clc
mov
add
jmp
std
ret
jne
aam
and
cmp
dec
or
xor
outs
push
and
clc
add
scas
sahf
xchg
adc
lahf
in
fidivr
adc
pushf
xchg
push
jecxz
lea
arpl
jae
xor
xor
fnstcw
mov
stc
lods
(bad)
jge
daa
scas
adc
push
fsincos
push
add
or
jb
ja
dec
fisub
stos
test
out
gs
aas
add
shl
fdivr
fmul
jnp
cwde
pop
out
xor
rcl
movs
cmp
repz
leave
push
sbb
ins
aaa
sbb
dec
aaa
(bad)
aad
pop
(bad)
aam
xchg
iret
loop
in
jns
jge
fwait
and
std
mov
mov
cmp
mov
add
and
or
add
aas
je
cmp
pop
outs
shl
mov
fsubp
push
push
scas
bound
gs
es
in
or
pop
out
int
pop
in
popa
call
(bad)
mov
int
pop
xor
or
or
stos
lfs
test
push
ret
rcl
sub
mov
aad
adc
ss
dec
jo
dec
mov
sti
pop
int3
(bad)
cmp
arpl
mov
sbb
jp
int
xchg
neg
adc
ret
xor
push
jge
clc
adc
push
cmp
rol
xor
sbb
ss
aad
repnz
jnp
in
les
sbb
sbb
adc
inc
popf
xchg
fcom
jp
loopne
push
cld
(bad)
push
ja
xlat
js
scas
pop
xchg
fistp
push
jp
xchg
lods
in
es
mov
ins
mov
mov
int
inc
sub
add
push
ins
pop
js
xchg
cmp
push
xchg
dec
jg
nop
push
jbe
and
lock
push
loop
sub
sub
ds
sub
popf
into
jae
pop
push
push
jmp
and
mov
or
mov
lods
dec
push
and
cs
shl
aaa
mov
das
pop
dec
push
stos
mov
xor
mov
cmp
inc
add
cmp
cli
dec
test
adc
adc
data16
cmp
daa
pop
pop
cld
mov
sbb
xchg
inc
(bad)
rcr
jmp
push
pop
inc
(bad)
and
mov
fcmovne
pop
mov
mov
jmp
mov
jle
movs
push
mov
adc
and
xor
aas
sbb
jmp
arpl
inc
push
rcr
js
jbe
sub
frstor
out
in
std
(bad)
into
cwde
ins
push
retf
push
pushf
mov
emms
pop
add
outs
pop
mov
pop
lahf
fnstcw
mov
stc
pop
imul
in
mov
xchg
cwde
stos
(bad)
mov
sbb
pushf
retf
mov
push
int
out
mov
push
out
mov
jmp
push
stos
jecxz
mov
cmp
jb
ss
or
rol
add
rcr
cs
(bad)
sub
or
ret
sbb
sbb
jne
aaa
add
sub
es
sbb
ins
pop
sub
sub
adc
adc
or
int
fnstenv
xchg
pop
call
mov
dec
(bad)
sub
sub
lods
or
pop
out
fldenv
xor
aam
or
lock
mov
inc
mov
int
(bad)
mov
push
stos
icebp
xchg
por
test
(bad)
imul
ror
and
leave
add
or
or
rcr
gs
sar
xchg
jnp
jl
mov
pop
call
es
cwde
(bad)
inc
out
mov
inc
shr
inc
cmp
add
test
ss
sbb
pop
mov
in
pop
pop
xor
sbb
(bad)
jg
mov
add
fs
cmps
mov
cmp
dec
lahf
or
sub
stos
adc
jmp
leave
out
xlat
or
xor
scas
cmp
cmp
xor
push
fld
leave
hlt
jno
xor
xor
fcomp
ins
mov
js
inc
div
sub
mov
inc
xor
xor
mov
je
add
cdq
adc
pop
pop
inc
push
bound
out
xchg
lock
cmp
scas
sti
retf
in
fsubr
sbb
int3
mov
inc
xchg
inc
mov
xchg
xchg
fild
adc
inc
scas
fild
test
push
int3
ss
and
pushf
dec
pop
push
sbb
push
cli
(bad)
loope
fistp
mov
push
daa
(bad)
loop
fiadd
mov
jno
mov
(bad)
push
ror
pop
push
inc
cli
xor
xchg
jecxz
push
lds
mov
or
(bad)
jbe
jnp
xchg
shl
(bad)
aam
and
lods
sar
jecxz
into
daa
xor
stc
pop
xor
retf
lea
out
cmp
jmp
inc
pop
push
push
inc
add
js
cmp
sub
and
sub
cmc
adc
(bad)
cmp
push
cmp
stc
sar
clc
ja
and
xor
pusha
sbb
dec
xchg
stos
int3
fstp
add
jg
das
sub
cmp
scas
daa
out
cmps
or
xchg
and
fidiv
out
add
mov
enter
or
jecxz
jl
lock
inc
in
into
xchg
mov
sub
mov
mov
arpl
loope
pop
out
push
les
pop
cmp
ror
jl
ret
into
data16
dec
rcl
jle
cmp
jecxz
cwde
js
and
or
call
dec
pop
push
jmp
ja
pop
or
or
and
stos
mov
jne
xchg
pop
mov
(bad)
scas
shl
cmp
pop
xchg
rcl
xchg
mov
sub
push
dec
xor
inc
push
int
(bad)
(bad)
outs
cli
int3
sub
fs
inc
retf
inc
push
jmp
lea
xchg
jmp
ret
sub
or
pop
shl
mov
(bad)
sbb
aam
inc
test
int
add
push
inc
mov
pop
push
out
out
idiv
and
mov
int3
pop
jmp
cmp
fidiv
icebp
mov
iret
dec
repnz
sub
dec
(bad)
psllw
pop
and
(bad)
push
push
jb
sub
pop
jmp
xor
daa
leave
movs
movs
sub
xchg
adc
cmp
outs
outs
pop
nop
gs
and
test
mov
repnz
jge
dec
jge
inc
aam
inc
addr16
test
or
xchg
xlat
xchg
dec
mov
xlat
adc
mov
ins
movs
sbb
in
(bad)
imul
push
jb
scas
jmp
dec
cmc
pop
jl
or
cs
dec
test
xchg
mov
cmp
addr16
retf
add
mov
sbb
jmp
dec
nop
adc
xor
jg
inc
sub
in
xor
call
mov
jmp
push
(bad)
cli
push
lods
dec
pushf
sub
scas
sub
push
push
xchg
(bad)
daa
call
loop
jns
jo
ja
add
dec
data16
(bad)
leave
rep
pop
mov
rol
xor
lods
xchg
imul
stc
pop
push
mov
loopne
or
outs
sahf
xor
push
cwde
rcr
mov
xor
push
jns
test
inc
test
fidivr
cmp
mov
addr16
push
jmp
sbb
adc
nop
jmp
xchg
xchg
or
pop
jne
and
cmps
and
sbb
mov
retf
mov
mov
cli
loope
mov
loope
imul
jmp
push
mov
outs
pop
scas
xor
(bad)
dec
aad
push
jg
dec
dec
nop
add
out
sbb
iret
cmp
or
inc
inc
jl
add
sub
xor
(bad)
in
call
fdiv
push
fucom
cmp
call
mov
xchg
lods
daa
lods
mov
dec
jl
and
out
mov
xchg
mov
aas
add
(bad)
sub
sbb
cs
adc
scas
xor
mov
dec
xor
mov
xchg
loope
pop
lods
loopne
adc
jmp
push
push
pop
in
xchg
(bad)
scas
mov
adc
aas
and
shr
dec
shr
aaa
adc
xchg
xchg
inc
dec
xchg
ror
add
(bad)
dec
das
cmp
gs
fimul
sahf
xchg
jns
xchg
xor
mov
mov
add
arpl
inc
popa
arpl
int3
or
ror
(bad)
dec
fs
aas
push
add
adc
sub
or
or
or
jl
jb
sub
ds
lods
jp
inc
mov
aas
cmp
scas
xchg
add
cmp
(bad)
xchg
bound
cwde
inc
arpl
mov
push
push
pop
aam
lock
dec
sahf
inc
cmp
stos
sti
mov
pop
ins
movs
iret
popf
rcr
mov
repnz
cmp
inc
retf
jle
dec
js
pop
pop
sub
add
movaps
in
pop
int
sub
push
push
cmc
or
icebp
push
pop
push
ss
adc
push
jmp
or
fwait
sbb
sbb
outs
enter
xor
test
(bad)
dec
movs
pop
add
std
dec
lahf
cmps
rcl
xor
aas
and
das
sar
mov
out
or
mov
jle
cmp
dec
mov
sub
mov
retf
std
je
sbb
dec
out
mov
inc
mov
xchg
clc
mov
inc
ror
mov
or
dec
test
sub
scas
hlt
outs
scas
clc
inc
jge
push
clc
loope
adc
cmp
test
and
les
dec
mov
dec
enter
sbb
imul
dec
or
out
aam
sub
jg
mov
dec
pop
rcr
push
push
push
sbb
jnp
jbe
push
add
fimul
sub
or
hlt
jbe
adc
fidivr
cmp
idiv
pop
sar
mov
popa
bound
fwait
stos
pusha
cmp
call
jmp
icebp
mov
in
cmp
xchg
pop
je
popa
rol
push
mov
pop
jg
pusha
cmp
icebp
cli
mov
add
inc
cmp
hlt
lds
shl
mov
sbb
aaa
leave
cdq
ds
mov
and
mov
add
inc
xor
mov
fst
or
sti
nop
cli
aam
lahf
scas
enter
add
xchg
test
fdiv
jmp
mov
ins
sub
gs
dec
retf
stos
cmp
retf
mov
outs
ds
sbb
and
mov
and
shr
shl
gs
and
shl
repz
jb
mov
test
(bad)
push
jo
inc
mov
adc
fs
stos
repz
dec
jae
fisub
and
mov
les
movs
sar
mov
scas
pushf
push
xor
fisubr
lods
out
(bad)
push
jg
fsubr
and
pop
arpl
xchg
xchg
mov
test
add
rcr
shr
xor
cmp
jp
icebp
dec
aaa
popa
push
mov
fs
dec
add
mov
sub
popf
xor
dec
or
add
sub
iret
scas
and
pushf
and
xor
lods
icebp
mov
mov
test
push
loop
inc
std
or
ret
call
mov
pop
fdivr
jg
jg
push
add
mov
imul
pop
sbb
mov
test
sti
les
imul
mov
push
push
xchg
ss
es
dec
hlt
and
push
xchg
addr16
inc
push
mov
mov
gs
rol
leave
minps
jbe
jg
retf
jno
and
jle
pop
popw
ret
clc
xor
push
xchg
cli
jg
je
dec
push
adc
cmp
popa
ret
aaa
cmps
xchg
xor
(bad)
bound
imul
je
stos
lea
pop
aam
leave
jmp
inc
call
data16
push
shr
es
movs
mov
je
into
jno
push
ja
fwait
xchg
shl
fadd
jge
sub
imul
sbb
sub
mov
adc
clc
imul
out
popa
add
fwait
inc
ins
icebp
out
movs
jmp
ror
push
push
xchg
sub
das
outs
cmp
(bad)
scas
mov
mov
mov
xor
lock
mov
xor
adc
mov
mov
fsub
jl
clc
fs
jg
mov
cmp
(bad)
cdq
ret
cwde
adc
(bad)
outs
and
(bad)
pushf
jns
in
sti
sbb
add
xlat
in
sub
aaa
cmc
popa
push
mov
rol
popf
push
mov
jmp
adc
mov
mov
pop
mov
(bad)
mov
cmp
pop
and
stos
mov
sub
mov
push
stos
xlat
xchg
and
(bad)
ret
mov
clc
fbld
xchg
(bad)
loope
adc
mov
or
jbe
cmp
xchg
fwait
push
jo
test
and
dec
jnp
pop
out
jmp
sub
pop
mov
jg
imul
pop
(bad)
lahf
add
icebp
mov
fcomp
retf
pop
jecxz
lods
out
and
lods
ins
out
scas
add
int3
mov
mov
(bad)
int3
daa
test
inc
dec
add
aas
out
pop
call
mov
ins
mul
and
jmp
ss
gs
or
out
cli
inc
in
mov
lea
idiv
popa
cmp
popa
(bad)
add
pop
dec
mov
(bad)
iret
icebp
gs
imul
(bad)
xor
imul
push
out
or
pop
add
test
arpl
jmp
outs
inc
dec
fwait
cmps
or
mov
jg
mov
icebp
mov
mov
ret
cmp
jmp
mov
sbb
add
out
sahf
cli
dec
or
sar
mov
gs
push
imul
push
mov
push
adc
cmp
int3
ins
push
add
cld
xor
xchg
ret
aad
aas
dec
idiv
mov
lock
inc
adc
sbb
cmps
xchg
cdq
leave
loop
jp
lock
jl
adc
stc
xchg
ja
pop
lahf
mov
jno
pusha
cmps
adc
pushf
enter
pop
pop
inc
fwait
push
sti
cli
adc
jl
inc
fcomp
mov
fbld
dec
push
popf
jl
pop
mov
sti
loopne
adc
sub
test
cmp
cmps
lods
rcr
enter
inc
test
rcr
push
pop
pop
xor
or
cwde
scas
mov
push
dec
mov
cmps
popf
sub
int
mov
inc
fbstp
mov
cmp
push
std
enter
in
adc
sti
adc
xor
add
jle
outs
ins
jnp
or
mov
cmc
sub
dec
xor
(bad)
add
or
push
sub
je
inc
push
dec
ror
mov
jmp
add
push
xchg
or
int
push
xchg
cs
jg
cdq
loope
jmp
sub
mov
xchg
cmc
add
mov
sti
dec
xor
push
movs
stos
test
jb
lods
lods
push
imul
adc
bound
adc
and
test
sbb
xchg
mov
xchg
jae
dec
aam
test
mov
shl
cli
xchg
sub
paddsw
dec
rol
pop
repnz
xchg
sti
and
stos
shl
sub
stos
imul
inc
xchg
bound
xor
inc
dec
mov
mov
push
push
movs
test
xchg
pop
iret
(bad)
scas
jg
inc
leave
mov
stos
pop
or
repnz
jecxz
inc
adc
dec
pusha
ss
movs
jo
sbb
bnd
cmp
cwde
(bad)
popf
stos
outs
xor
(bad)
jno
pop
mov
cmp
ins
pop
jle
test
sub
jns
jg
dec
sbb
in
xchg
inc
sub
sahf
xchg
sar
and
mov
ret
out
mov
pushf
scas
outs
push
and
cmps
data16
outs
push
or
jns
mov
push
inc
cmp
cdq
jbe
pop
mov
cwde
test
mov
xchg
pop
and
adc
xchg
ds
jmp
mov
aam
data16
or
ret
adc
xlat
and
inc
jp
hlt
and
data16
ja
rol
inc
add
push
mov
ins
dec
cmp
sbb
pop
or
outs
dec
xchg
rcr
inc
in
cld
or
dec
call
mov
push
inc
addr16
and
int
retf
ss
sbb
call
xor
aas
jmp
mov
or
repz
lods
mov
pushf
cmps
cmc
lds
and
adc
mov
sbb
mov
cmp
js
mov
push
xchg
sar
shr
and
cwde
push
xor
mov
xor
sbb
imul
fcmovne
dec
jl
in
or
dec
xor
jno
jne
rol
cmps
xor
xchg
outs
addr16
push
jle
add
mov
and
dec
enter
fcomi
dec
add
mov
dec
daa
cdq
xchg
inc
lahf
xlat
pop
mov
cmp
jmp
xchg
mov
bound
mov
pusha
aas
xlat
test
cmp
stos
xchg
into
(bad)
cmps
xchg
adc
push
in
jnp
inc
sbb
shr
mov
push
dec
push
mov
pop
shr
dec
aas
push
and
fnsetpm(287
into
jne
(bad)
push
jo
fdiv
xlat
cmp
popf
cmps
mov
cmp
jmp
pop
int3
jl
adc
imul
outs
mov
add
inc
jecxz
in
in
je
out
mov
nop
cs
fidiv
xchg
sbb
pop
dec
call
neg
loopne
cs
rol
and
cmp
jmp
mul
cwde
mov
test
jle
std
out
repz
cmp
sub
cmp
sub
cmc
fwait
sbb
fdiv
dec
fcom
and
adc
cld
into
idiv
mov
jge
cld
xlat
neg
ins
pop
and
pop
sub
fwait
(bad)
pop
and
inc
dec
pop
(bad)
xchg
sbb
jle
cmps
adc
bound
mov
mov
sub
push
out
mov
loopne
mov
sahf
shr
adc
dec
retf
xor
or
into
ins
sub
je
push
cmp
cmc
lea
jno
mov
popf
or
mov
(bad)
gs
push
mov
in
rcl
(bad)
sbb
mov
adc
push
(bad)
pop
jmp
mov
sbb
push
leave
pop
in
mov
add
fcmovnb
mov
fnstenv
push
loop
push
adc
movs
push
out
aad
push
adc
mov
pop
popf
cmp
dec
imul
ja
adc
out
lahf
sub
jne
add
repnz
inc
xlat
and
cmps
test
mov
aas
xor
mov
andps
call
sbb
or
outs
ins
les
daa
inc
push
xchg
idiv
out
stos
jp
xchg
icebp
repnz
movs
fs
and
sub
sti
xor
dec
mov
inc
stos
fldenv
sub
ret
pushf
pop
push
icebp
xor
or
inc
xor
pop
lods
and
fisubr
call
bound
js
fnstcw
adc
mov
hlt
jns
fwait
mov
xor
mov
mov
ficom
push
mov
pop
rol
ins
scas
xchg
in
mov
mov
cmp
shl
add
out
aaa
mul
xchg
fs
adc
push
mov
mov
adc
dec
ror
lods
retf
in
(bad)
sbb
sub
sbb
jg
sub
shr
lea
cmp
mov
test
mov
out
int
mov
jbe
dec
das
movs
push
(bad)
add
jle
jecxz
dec
dec
enter
xchg
pop
shl
mov
test
cmp
in
mov
and
or
shl
adc
add
mov
or
pop
dec
xchg
in
in
jmp
movaps
or
arpl
push
pop
call
adc
cmp
scas
jo
loop
ja
inc
test
and
jnp
shr
dec
ins
sbb
in
xor
jmp
es
fwait
push
mov
pop
adc
mov
mov
xor
dec
sub
dec
dec
mov
add
pop
sub
popf
mov
mov
or
sbb
push
jmp
cmp
cs
pop
inc
mov
mov
jmp
mov
imul
push
clc
jno
fimul
xchg
inc
aas
daa
mov
test
jmp
daa
sbb
push
scas
(bad)
jecxz
retf
adc
das
inc
xor
sbb
cmp
lock
mov
movs
rcl
iret
push
push
xor
dec
mov
hlt
retf
stos
mov
int3
or
lods
sub
mov
sahf
aaa
cmp
dec
pushf
pop
out
cmc
inc
lods
sbb
inc
popf
hlt
mov
pop
inc
and
mov
add
fsub
stos
and
call
push
push
push
mov
push
(bad)
cmp
dec
mov
in
xor
inc
mov
test
ffree
or
inc
(bad)
xchg
test
jp
inc
div
sbb
out
sbb
dec
mov
rcr
imul
imul
pop
xor
gs
scas
sbb
mov
imul
mov
(bad)
push
fdiv
pop
lahf
xchg
push
and
mov
and
int3
xchg
cli
mov
mov
mov
inc
mov
xor
retf
dec
in
js
movs
lahf
mov
ret
push
adc
aas
push
jecxz
addr16
and
rcr
dec
inc
inc
iret
cmps
mov
retf
(bad)
int3
fdiv
inc
jg
adc
lea
inc
std
lods
add
inc
pop
outs
xor
lahf
test
enter
mov
cdq
mov
ret
in
xor
sti
fistp
dec
xor
popf
pop
cmps
mov
dec
or
cmp
mov
jge
mov
pop
call
ret
popa
push
sbb
mov
out
hlt
fidivr
pop
movs
pop
aad
pop
push
xchg
outs
sub
aad
ficomp
mov
adc
arpl
sub
cmp
cld
rsm
xchg
clc
or
xor
aam
aad
adc
dec
lods
repnz
lea
jne
ds
mov
es
js
out
adc
(bad)
or
cmps
iret
pop
inc
mov
adc
mov
pop
and
fmul
sub
pop
adc
movs
stos
cmp
je
sahf
test
(bad)
mov
lods
pusha
xor
test
addr16
cwde
mov
cmc
jno
xchg
daa
pop
cmp
inc
inc
call
ja
cmc
ins
mov
sbb
lock
ins
xchg
ror
dec
inc
push
mov
fldcw
jbe
pop
ret
mov
push
cld
sub
shl
in
pop
xor
or
repz
or
outs
ss
adc
popf
(bad)
mov
test
bound
int
jg
xor
adc
lods
mov
xor
xchg
ss
fmul
or
xlat
in
sbb
inc
and
mov
aaa
cmp
(bad)
in
sub
dec
sar
or
ins
les
in
mov
movs
lods
xor
shl
nop
add
xlat
push
cwde
add
int
loope
cmp
and
mov
mov
mov
pop
call
inc
jmp
and
ret
mov
mov
mov
cmp
aaa
jecxz
mov
pop
inc
aam
bound
and
push
scas
in
fild
push
sub
pop
pop
push
das
and
das
xchg
(bad)
loope
push
js
inc
scas
mov
xchg
sbb
push
mov
lds
xor
push
mov
fidiv
jne
mov
popa
jne
shl
pop
sub
test
call
push
in
std
sub
jge
xchg
mov
xchg
test
loopne
lea
ror
jnp
mov
adc
sub
call
pop
and
leave
dec
js
mov
aam
std
movs
push
mov
sbb
fmulp
test
aaa
leave
cmp
loopne
jae
mov
cmp
psrlq
dec
movs
jne
sub
in
fld
push
dec
inc
je
sub
in
add
test
xor
and
or
ins
inc
add
or
or
inc
mov
sub
repz
add
adc
movs
sub
dec
pop
inc
es
mul
or
mov
idiv
shr
ins
pop
adc
xchg
lock
xor
add
cmp
sub
mov
cmp
nop
mov
mov
push
popa
scas
mov
jne
or
mov
cmps
setne
push
cs
loopne
(bad)
ffreep
int
push
or
data16
pushf
mov
ins
lahf
repz
mov
sbb
sub
add
sbb
pusha
popa
pop
ja
push
inc
sub
shl
lods
imul
adc
movs
adc
adc
add
ins
add
jae
mov
xor
or
push
icebp
jge
(bad)
push
movs
popa
cmp
pusha
push
mov
cmc
retf
inc
mov
inc
push
cmp
iret
pusha
neg
mov
dec
pop
les
pop
outs
pop
out
and
(bad)
fwait
pop
and
inc
retf
cmp
out
mov
out
sbb
test
inc
pop
lock
or
xchg
or
sub
cmps
xor
dec
test
pop
dec
cmp
add
ficom
in
adc
and
push
es
inc
jl
mov
jmp
sbb
xchg
mov
push
outs
pop
in
loop
jmp
aas
sbb
mov
(bad)
mov
or
popa
push
stc
xchg
or
lods
or
ins
cmps
cwde
int
push
addr16
adc
xchg
inc
mov
js
repz
jns
aas
adc
inc
xchg
add
jmp
push
cdq
scas
repnz
scas
jbe
inc
mov
das
nop
stos
out
push
mov
xchg
sbb
je
pusha
jno
dec
loop
jl
adc
mov
cmp
into
mov
push
or
ret
cmp
sbb
int3
fcomp
jecxz
xlat
adc
mov
jecxz
imul
xchg
shl
retf
xchg
ror
jae
push
iret
jno
sbb
adc
pusha
sar
xchg
push
jmp
outs
inc
sahf
mov
leave
movs
xlat
mov
(bad)
aas
shl
out
jmp
sub
jl
ror
(bad)
bnd
scas
add
push
sub
mov
lock
cmp
icebp
sub
lock
fsub
push
lahf
pop
nop
std
add
sub
jnp
jmp
fmul
loope
addr16
inc
cmp
pop
neg
fdiv
mov
xor
xchg
inc
js
adc
outs
pop
add
ficomp
or
cmp
xchg
(bad)
hlt
lock
fisub
jecxz
pop
jnp
sub
(bad)
outs
push
jecxz
sti
lahf
call
and
test
cmp
fdivr
add
retf
xchg
jmp
or
xchg
call
js
push
outs
scas
sbb
sub
retf
lods
pop
add
fldl2e
lock
inc
stos
lods
mov
dec
jmp
push
mov
or
adc
lea
and
and
xor
sub
aaa
mov
stc
fbstp
push
dec
xchg
setg
xchg
xchg
and
xchg
out
in
out
or
mov
rcr
mov
out
xor
(bad)
out
mov
stos
adc
mov
dec
jmp
pop
popf
fwait
sbb
popf
jno
sbb
je
scas
or
bound
lea
inc
adc
or
hlt
mov
(bad)
fdiv
clc
xchg
mov
cmps
loopne
mov
sbb
sub
jns
(bad)
test
mov
adc
popf
lods
pop
sub
iret
inc
or
mov
mov
cmp
dec
jbe
pusha
add
fistp
xchg
or
mov
sbb
lahf
and
jle
xor
add
and
mov
xchg
ret
cmp
popf
mov
fdivr
imul
dec
fldenv
cli
es
les
in
into
daa
ret
aas
pop
retf
(bad)
retf
aad
mov
cmp
jle
(bad)
jg
or
aam
xchg
push
adc
repz
push
jle
cmps
sub
or
fild
das
push
add
inc
sar
cs
pop
test
and
test
xchg
xchg
or
out
cmc
mov
jns
aam
gs
cdq
popf
rcr
sub
mov
or
mov
int
jo
nop
ja
jne
fmul
xchg
ss
sub
sar
cmc
ss
dec
stos
and
in
pop
(bad)
jp
push
sti
ret
mov
std
jae
xchg
push
and
ins
push
mov
les
jle
and
lea
pop
mov
scas
or
xor
es
fisub
xor
push
cld
adc
nop
cmp
inc
test
popa
sahf
push
pop
and
xchg
in
sbb
mov
stos
icebp
pop
(bad)
xor
jle
scas
mov
sbb
or
(bad)
repz
cmps
sti
or
test
pop
mov
pop
jecxz
sub
and
not
leave
pop
jo
dec
stc
test
movs
pop
ins
cmps
sbb
stc
ja
or
jle
adc
add
cli
push
lods
shr
popa
add
push
mov
ins
scas
nop
clc
ret
gs
ret
sub
ret
jnp
hlt
shl
rcl
xchg
add
aam
gs
lods
pop
inc
lods
inc
ret
int
mov
clc
or
(bad)
(bad)
adc
imul
jae
das
rcl
pop
xchg
jae
test
aad
(bad)
mov
adc
sbb
adc
mov
mov
jg
push
push
repnz
js
enter
test
vpshaq
jbe
adc
cmps
pop
std
push
push
pop
pop
leave
fldenv
mov
push
push
push
test
cmp
clc
sbb
or
sub
xchg
and
push
cmps
sahf
add
addr16
push
inc
cwde
or
push
imul
stc
pop
pop
jl
inc
sbb
mov
xchg
push
ror
(bad)
push
out
gs
dec
jecxz
mov
inc
and
sub
test
clc
(bad)
cld
fidiv
add
push
sbb
into
pop
and
sub
add
loopne
std
mov
push
push
into
inc
inc
in
repz
jno
and
jmp
pop
cmps
jl
popa
iret
das
jb
cli
mov
leave
fisubr
mov
cdq
pop
add
push
push
sbb
push
fwait
aad
mov
push
cli
imul
mov
push
inc
sahf
xlat
int
outs
mul
xor
mov
aas
jmp
icebp
mov
rcr
inc
dec
jae
fisub
jb
mov
das
icebp
sbb
fyl2xp1
int3
aaa
add
cdq
xchg
jmp
sub
imul
daa
jne
or
retf
addr16
sub
shr
test
add
and
mov
dec
call
xchg
cmp
mov
and
out
add
test
out
loopne
sub
jns
jb
fisub
mov
or
or
mov
(bad)
clc
int
les
sbb
fincstp
mov
dec
or
xchg
jae
mov
es
pop
mov
data16
cwde
xchg
dec
jl
or
adc
add
xchg
or
(bad)
aad
sbb
enter
mov
cmp
scas
or
sti
pop
stos
cmp
loopne
xchg
inc
sbb
push
popa
shl
adc
inc
add
out
adc
xlat
out
mov
fdiv
test
or
sbb
adc
aad
sahf
xchg
mov
dec
test
in
pop
sbb
out
xchg
adc
cmps
ins
pop
call
jnp
and
sbb
mov
sub
popa
aam
cmp
mov
push
leave
outs
and
adc
test
sub
push
ret
jns
cld
jne
loope
rcr
stos
in
mov
nop
pop
add
outs
xor
fdivr
stos
jb
mov
lods
sbb
sbb
xor
xor
mov
ret
mov
adc
mov
cmp
cmps
rcr
xchg
ins
retf
call
iret
pop
mov
mov
rol
inc
mov
movs
push
inc
imul
in
sub
push
clc
jne
std
add
fadd
add
in
hlt
inc
and
(bad)
out
ltr
cmp
inc
lahf
pop
out
dec
sub
jg
or
faddp
inc
ins
sbb
jnp
sub
push
dec
stos
mov
out
(bad)
and
ror
call
repz
vpmacssdql
or
pop
jge
push
add
test
shl
sbb
mov
adc
dec
bound
push
add
jno
call
repnz
jg
and
jmp
mov
mov
pop
mov
adc
rcl
or
xchg
mov
cld
pop
xor
fstp
push
test
xchg
jnp
jg
push
or
push
(bad)
stc
jle
jnp
iret
out
shl
jmp
inc
lock
pop
movs
sbb
cld
push
shl
xchg
add
adc
jno
pop
iret
aas
cmp
popa
inc
cmc
stos
arpl
(bad)
xchg
lods
mov
adc
fsub
gs
call
sti
rcr
xor
jmp
jp
faddp
repz
sub
std
rcr
xchg
lods
jne
clc
sahf
out
and
(bad)
stos
sbb
and
aas
xchg
pushf
lahf
sbb
xchg
pop
push
out
iret
popf
mov
ror
xchg
lahf
xchg
rcr
aam
loopne
jno
add
mov
mov
retf
pusha
xor
sbb
in
sub
pop
xor
(bad)
push
out
out
and
movs
cmp
mov
popw
jg
inc
push
test
cmps
repz
cld
hlt
jg
mov
inc
dec
mov
fist
adc
in
push
add
inc
dec
fsubp
and
add
icebp
sub
add
pop
push
sbb
cwde
mov
ficom
add
or
(bad)
leave
popf
add
push
out
shr
sbb
jnp
loope
lock
xlat
in
xor
or
sbb
mov
push
push
adc
jmp
fist
rcr
call
or
dec
mov
bound
or
jb
repnz
cs
adc
fcmovb
je
lock
outs
jl
mov
adc
mov
add
jne
jge
inc
inc
xor
jmp
mul
pop
test
jle
sbb
xor
add
cmc
mov
test
push
mov
push
ins
test
mov
sub
inc
mov
bound
(bad)
cld
pop
xor
daa
sub
mov
pop
push
jo
adc
push
xchg
sub
div
(bad)
cmp
adc
adc
dec
hlt
fisub
add
test
cmp
mov
dec
push
test
jmp
ficomp
adc
mov
ja
dec
inc
xor
push
rcl
dec
mov
jae
mov
xor
sub
dec
loope
data16
pop
add
aaa
outs
shl
lods
jp
pop
lahf
mov
cmp
pop
add
fidiv
sbb
xor
fdivr
or
lods
xchg
dec
loop
push
jle
(bad)
fistp
les
pop
and
fnsave
xchg
mov
push
stos
xor
inc
jnp
mov
std
push
jmp
fsub
xchg
aas
dec
cmp
adc
pusha
jb
dec
adc
cmc
sub
sti
fisttp
mov
add
ja
popf
aad
cmp
loop
add
ret
mov
xchg
retf
mov
mov
out
push
push
in
dec
les
jbe
in
stc
mov
pop
sahf
das
aad
add
sbb
clc
push
stc
movs
dec
jecxz
jo
sti
ret
dec
int3
fmul
sbb
xchg
retf
bound
xchg
or
loopne
mov
mov
in
inc
mov
scas
add
inc
inc
je
sub
mov
retf
bound
fmul
scas
cmp
push
stc
pop
les
cmps
pushf
idiv
mov
test
push
pop
sub
adc
fs
mov
jns
cmp
push
ins
aaa
mov
ret
cmc
push
cmps
gs
fwait
jle
test
xchg
xchg
out
call
mov
stos
adc
loopne
jle
rcl
sti
push
xchg
xchg
xor
push
add
ins
add
jge
cwde
xchg
push
jecxz
mov
popf
mov
scas
in
mov
in
add
das
pop
mov
loopne
test
xor
adc
inc
in
jp
xchg
retf
rol
loop
pop
sbb
mov
(bad)
ss
push
jo
push
adc
pause
fist
mov
out
lea
inc
jl
das
xlat
jae
jecxz
mov
stos
(bad)
aad
xor
shl
adc
mov
push
xrelease
nop
mov
repz
mov
js
in
xchg
and
in
loope
dec
mov
scas
outs
daa
mov
cdq
push
mov
sahf
pop
push
jnp
or
shr
xchg
in
pop
sub
enter
pusha
sbb
push
jmp
cmp
jg
pop
pusha
pushf
cwde
mov
xchg
pushf
shr
ret
std
scas
cmp
xor
sbb
ror
push
xchg
(bad)
adc
sbb
inc
test
mov
xor
push
int
dec
sbb
(bad)
scas
imul
sbb
mov
jp
fild
dec
scas
inc
xor
lods
mov
xchg
push
dec
outs
inc
repnz
inc
lods
cld
cs
jl
pop
cmps
scas
cmp
push
jecxz
movs
aas
pop
cmps
rcl
enter
dec
shl
push
rol
and
push
sbb
mov
pop
inc
lods
retf
mov
mov
xor
aaa
push
mov
iret
mov
ficom
mov
jno
mov
xchg
pushf
cdq
pop
movq
ins
fmul
dec
and
aad
pop
or
or
das
retf
fld
sub
inc
popa
sysexit
xor
call
sub
stos
or
popf
xchg
call
mov
push
es
dec
inc
pop
rol
in
js
scas
or
xchg
jp
adc
jmp
lahf
xlat
pop
sub
jnp
fcomp
sub
imul
popf
mov
int3
or
test
xor
outs
pop
jns
cmps
in
rcr
push
shl
or
add
shr
imul
sbb
add
call
xor
cmp
xchg
aad
jne
adc
lds
jae
sub
and
imul
mov
xchg
pop
push
push
adc
aas
inc
adc
jecxz
jb
mov
xchg
fmul
aad
inc
xchg
fild
call
jnp
push
enter
call
int
ficom
pushf
mov
or
in
or
add
fs
popa
neg
dec
mov
cmp
push
(bad)
lods
pop
pop
ss
inc
int3
xor
pop
xor
adc
aas
cs
bound
stos
jmp
inc
pop
lds
test
(bad)
into
xchg
xchg
fdivp
sbb
stos
(bad)
loopne
idiv
out
pusha
pop
dec
pop
retf
jnp
and
hlt
cmps
mov
push
pop
dec
push
add
lock
jg
jno
push
call
pushf
ja
int
icebp
xchg
sub
es
xor
rcl
and
int
lock
ror
cmp
cs
sbb
xchg
xor
scas
js
lock
adc
repnz
inc
stos
push
jne
dec
mov
cmp
xchg
movs
mov
cmps
jmp
not
adc
sbb
outs
jmp
mov
mov
mov
jl
shl
pop
cmp
aam
mov
in
je
xor
jnp
lds
scas
cmp
jns
cmp
jbe
daa
sbb
and
push
inc
jae
sti
inc
mov
pop
loopne
in
cmp
inc
xchg
scas
sub
cmc
sub
mov
xchg
cmps
cs
jne
inc
mov
sub
sbb
inc
outs
outs
iret
data16
xor
sub
sbb
cmps
in
aas
aaa
add
sbb
sub
fidiv
cmp
push
inc
popf
add
push
pop
xchg
nop
mov
je
xchg
add
mov
dec
xor
adc
adc
ins
xor
dec
ficom
mov
mov
ror
pop
or
mov
sbb
iret
sub
scas
xor
loop
fwait
jno
mov
xor
adc
adc
jle
pop
aam
push
outs
loope
fadd
or
inc
xor
stos
push
mov
dec
push
je
retf
ss
stc
fstp
sub
sub
xor
(bad)
or
shr
out
mov
cmps
jmp
enter
xchg
xor
push
xchg
clc
pop
out
and
dec
je
cld
ret
scas
in
shl
jle
in
es
bndldx
pop
push
icebp
dec
sub
cwde
push
arpl
out
push
(bad)
frstor
inc
ins
push
scas
pop
and
xchg
pop
mov
mov
ds
arpl
fsub
iret
pop
push
stos
push
dec
mov
mov
dec
les
dec
xor
retf
xchg
cmps
(bad)
in
dec
sbb
std
sbb
cli
dec
and
dec
cmps
inc
cmp
jge
mov
nop
(bad)
std
inc
mov
fs
clc
mov
shl
retf
andps
stos
aas
sub
mov
int
adc
pop
aam
(bad)
dec
inc
inc
jae
out
test
lods
hlt
mov
sub
xchg
xchg
push
mov
xchg
xchg
jb
xchg
jns
leave
push
mov
outs
imul
pushf
jecxz
pop
and
or
mov
mov
mov
arpl
pop
setbe
fwait
xchg
cs
(bad)
fimul
dec
or
test
out
lods
dec
xchg
inc
xchg
add
retf
inc
inc
fnsave
repz
cmps
and
cli
xor
call
inc
add
add
inc
jl
jbe
pop
mov
mov
test
cdq
fcomp
aad
xchg
enter
jg
push
ss
xor
out
arpl
imul
and
sub
call
jno
es
mov
dec
xchg
mov
ss
inc
mov
nop
scas
and
cmp
sbb
enter
jmp
xchg
pop
xchg
lea
adc
repz
out
bound
stos
test
or
mov
mov
dec
pop
icebp
xchg
int
fwait
jmp
pop
pop
icebp
mov
adc
js
into
fadd
bnd
sbb
das
shl
and
xchg
or
xchg
inc
out
inc
dec
retf
mov
test
and
push
idiv
mov
and
jnp
mov
(bad)
fsubr
jns
pusha
ins
dec
call
mov
int3
pop
mov
push
test
dec
xchg
push
ror
xchg
xor
icebp
jl
ficom
push
jne
mov
xor
cwde
cmp
lahf
or
sbb
mov
ins
stos
pushf
sub
pusha
xor
pop
popaw
rcr
stc
loope
jo
xor
dec
sub
pop
lods
(bad)
int
(bad)
pop
jge
lods
scas
xchg
mov
in
jo
add
pop
ss
lahf
or
inc
jns
xchg
jo
mov
call
adc
cmp
out
xchg
add
cmp
dec
out
imul
adc
sbb
std
xor
sbb
lock
shl
div
cdq
nop
test
popa
retf
sub
nop
mulps
dec
div
clc
(bad)
dec
cmps
shl
repz
in
lock
pop
push
xlat
hlt
sti
aaa
repnz
cmp
(bad)
outs
lods
scas
dec
test
icebp
call
xor
call
rdpmc
sbb
inc
int3
fst
ins
ja
and
retf
inc
xchg
rol
and
sbb
mov
push
push
jg
(bad)
jp
clc
dec
mov
xor
div
rcl
sbb
inc
jg
(bad)
mov
fild
mov
xchg
in
adc
ins
jle
div
orps
jl
retf
repz
and
fld
and
dec
mov
outs
js
arpl
mov
(bad)
into
jge
sbb
mov
sbb
das
call
cmp
ins
arpl
fstp
xchg
les
or
push
xchg
lahf
push
push
inc
(bad)
sbb
pop
addr16
cld
int3
ins
push
into
(bad)
sub
(bad)
loopne
pop
jns
or
rcl
sahf
pop
(bad)
fisttp
sub
out
shl
xchg
in
push
mov
loope
mov
fwait
sbb
jl
je
pop
push
xor
aaa
inc
mov
and
push
mov
das
pop
daa
inc
fst
out
dec
(bad)
xchg
into
pop
adc
sub
jp
test
call
repz
mov
push
or
mov
out
and
inc
add
cmp
pop
fwait
icebp
test
pop
sahf
mov
xchg
fst
mov
retf
lods
sar
cmp
sub
aas
mov
lds
sar
pop
fist
and
pushf
push
jg
pop
or
popf
inc
stos
sar
fxch
jb
outs
bound
add
pop
xchg
test
mov
(bad)
ds
test
jne
mov
push
jl
jo
mov
cmp
sbb
xor
adc
and
push
xor
daa
or
or
pop
into
inc
shl
xchg
mov
in
out
inc
stc
push
repz
cdq
jo
cmps
jl
mov
or
push
int
es
cmp
cmps
xchg
fcom
lea
push
aad
sub
push
push
adc
ret
mov
and
pop
iret
in
retf
or
lods
jne
inc
movs
jno
mov
xlat
and
ds
cli
and
cmps
jecxz
inc
dec
ins
pop
pop
add
dec
imul
inc
das
mov
mov
adc
mov
sbb
fldenv
mov
mov
pop
or
and
fs
jecxz
adc
jns
(bad)
push
pop
push
cmp
mov
movs
ret
bound
push
dec
and
push
cdq
je
icebp
fbld
rol
push
mov
into
(bad)
call
ret
aam
mov
add
mov
leave
rcl
test
ja
add
sub
popa
push
push
leave
jnp
dec
stc
ror
push
mov
(bad)
and
xchg
popa
xchg
sub
xor
and
jae
(bad)
push
sub
stos
ja
fdivr
cmp
repnz
je
aam
cmp
movs
inc
xor
setbe
cld
out
jecxz
or
push
bswap
(bad)
jge
and
or
xlat
mov
enter
sub
or
jnp
lds
sbb
outs
cmc
idiv
push
adc
fs
scas
icebp
or
jbe
fisttp
push
jae
into
push
sub
jb
scas
or
cmc
pop
or
jae
mov
loopne
(bad)
add
mov
push
lds
ins
cmps
cmp
clc
mov
je
or
add
jecxz
pop
sub
gs
les
xor
pop
jp
movs
data16
out
xor
inc
mov
mov
fisub
lods
loopne
pop
pushf
dec
cmc
je
dec
mov
sub
icebp
mov
clc
lea
popf
cwde
mov
push
ds
jmp
(bad)
sub
push
or
sbb
add
loope
push
sti
stc
ret
stos
(bad)
mov
repz
mov
mov
mov
adc
jne
mov
cmp
popa
jbe
shr
add
(bad)
mov
sub
rcl
push
imul
push
xor
cmps
adc
(bad)
xor
cmp
lahf
adc
imul
lods
xor
pusha
int
aaa
dec
dec
ins
pop
fst
leave
add
mov
jecxz
jle
xor
lods
pop
mov
push
shl
push
sub
(bad)
xlat
ss
dec
pop
(bad)
xor
cmps
pop
iret
mov
inc
cwde
pop
sar
mov
mov
pusha
call
cld
inc
xlat
sbb
stos
or
fiadd
inc
(bad)
popf
retf
stc
(bad)
clc
(bad)
mov
out
push
xchg
cmp
loopne
pop
(bad)
sub
mov
sub
(bad)
ja
sbb
mov
hlt
cmps
aad
pop
ins
sbb
int3
xor
adc
fisubr
and
fs
stos
sub
icebp
imul
jl
mov
lock
mov
pop
jne
jno
jb
jg
loope
add
je
pop
or
repnz
xchg
sbb
and
outs
pushf
cmp
mov
jmp
mov
jae
sbb
aaa
xchg
xchg
dec
inc
add
dec
adc
push
inc
and
mov
bound
jmp
je
cmp
call
adc
dec
mov
arpl
outs
rcr
jne
cli
mov
inc
shl
stc
retf
xor
add
out
inc
fmul
arpl
cmp
in
(bad)
movs
dec
push
dec
mov
imul
daa
leave
inc
fwait
xchg
jns
adc
jl
mov
jne
add
push
xor
mov
sub
pop
cmp
fadd
lods
xchg
in
and
add
add
sbb
sub
in
jmp
imul
stc
pop
sbb
cmp
sbb
xor
f2xm1
adc
dec
adc
push
enter
ret
subps
ror
mov
xchg
xchg
dec
dec
adc
sub
repz
inc
add
ret
sub
dec
cld
xchg
cmp
adc
fiadd
cmp
aaa
lock
in
(bad)
cmc
mov
lods
fnstsw
mov
aam
inc
stos
outs
jnp
pop
xchg
aas
outs
sub
xchg
and
jp
loopne
and
jp
in
and
outs
test
push
scas
jmp
scas
leave
ss
xor
out
les
push
mov
sub
mov
movs
jae
cmp
(bad)
icebp
in
es
xor
and
cmp
retf
fidivr
dec
imul
ds
retf
push
movs
ds
add
mul
mov
add
inc
push
jle
mov
leave
jmp
movs
stos
in
nop
out
repz
call
add
gs
out
mov
cmp
adc
pop
add
dec
xlat
test
sbb
xor
cmp
lock
push
sbb
imul
jae
jl
data16
xchg
mov
pop
push
xchg
shl
pop
adc
and
inc
setno
mov
mov
adc
jle
lods
xor
jp
test
dec
mov
scas
mov
push
mov
push
adc
adc
mov
jle
pop
mov
xor
dec
out
stos
stos
shl
jle
sahf
pusha
cwde
jnp
test
pop
aam
push
lock
inc
sbb
jno
test
mov
rcl
std
sbb
scas
into
pop
push
cmp
nop
hlt
mov
xor
inc
mov
lods
test
jo
fiadd
fimul
jno
xor
dec
sbb
loopne
jl
lods
sbb
lahf
into
mov
mov
fdivp
xchg
adc
pop
scas
icebp
and
adc
push
loope
inc
or
sub
out
add
or
ss
cmp
adc
popf
ficomp
call
inc
xchg
(bad)
fild
das
mov
xlat
jmp
push
ins
mov
mov
pop
in
cmp
aad
stc
retf
out
push
mov
mov
out
ficom
retf
xor
jb
mov
sub
rcl
fbld
inc
mov
test
ins
xchg
mov
cmps
stos
int3
jne
push
push
or
popa
xchg
inc
xchg
push
int
sub
dec
xor
jg
inc
and
std
lds
scas
cmp
adc
test
jne
retf
mov
loopne
jb
pop
aas
bound
das
iret
push
aam
jmp
cwde
ss
repnz
xor
xor
stos
cmp
xchg
cmps
lahf
lock
adc
xchg
mov
(bad)
(bad)
cmp
xchg
adc
push
and
pushf
in
jge
push
jl
js
popf
xchg
adc
aad
xor
cmps
xchg
xor
mov
mov
mov
or
add
jae
ins
mov
or
fimul
hlt
push
out
call
push
ins
cmova
jns
ror
scas
jg
or
jg
(bad)
test
fucomi
arpl
pop
fcmove
inc
mov
pusha
adc
mov
xchg
mov
mov
movs
test
into
dec
ret
mov
adc
dec
pop
stc
xchg
fidiv
dec
xchg
mov
(bad)
jo
inc
and
jb
push
sbb
xor
push
loopne
dec
push
mov
sbb
je
sub
adc
aas
xchg
mov
or
mov
scas
xchg
dec
int
sub
mov
ja
inc
cmp
retf
mov
lock
adc
pop
test
(bad)
mov
add
lahf
mov
loope
pop
pop
test
pop
dec
mov
push
xor
jp
dec
(bad)
dec
mov
push
pop
sti
add
and
rol
add
jo
es
shr
jno
mov
inc
inc
add
(bad)
dec
loopne
cmp
pusha
cmp
dec
lea
ins
in
xchg
mov
scas
dec
pop
jmp
cmova
push
fild
popa
and
jle
mov
xlat
cmps
sahf
lods
jns
dec
shl
pop
sub
in
mov
jns
leave
add
cdq
inc
adc
mov
adc
and
or
jno
cmc
sub
jae
adc
jmp
jbe
jle
pop
dec
push
or
(bad)
pop
lds
retf
dec
inc
xor
retf
adc
popf
daa
ins
les
cli
lods
sub
pop
ret
push
aaa
lods
jp
(bad)
jbe
popf
push
jecxz
sbb
gs
mov
retf
mov
jl
inc
or
lods
push
push
lea
in
and
mov
jne
push
or
pop
lods
ss
xor
retf
loop
stos
dec
sub
(bad)
jl
xchg
mov
or
mov
out
mov
aaa
add
les
js
sub
(bad)
movs
(bad)
cmp
dec
pop
in
mov
jns
cmps
test
pop
jae
mov
inc
mov
(bad)
cmp
sti
dec
push
test
imul
ret
mov
into
cld
mov
mov
nop
xlat
test
adc
test
lods
icebp
test
push
fild
loopne
jae
dec
je
push
neg
enter
xchg
addr16
test
pop
push
pop
mov
and
cmp
lahf
fadd
mov
xchg
adc
fstp
xor
cmc
lea
jmp
mov
retf
pop
and
scas
cmps
sub
xor
add
dec
retf
or
mov
(bad)
cmp
mov
push
repz
mov
cs
scas
jle
mov
or
inc
lods
cmp
aam
pop
test
fcomp
lods
mov
std
call
cli
push
push
pop
retf
cmp
add
and
retf
in
lahf
add
out
or
or
loopne
or
mov
stos
cdq
push
call
enter
pusha
or
xor
pavgw
xor
and
mov
stc
push
out
add
rol
js
dec
mov
jne
pop
retf
jp
ret
mov
mov
dec
lea
addr16
dec
test
pop
dec
mov
cmp
inc
(bad)
jge
mov
imul
or
scas
cmp
ins
lahf
loop
lods
pop
inc
popa
push
imul
ds
leave
add
stc
jp
fwait
pop
lahf
xchg
jnp
outs
jl
push
jl
push
das
adc
mov
fwait
ins
jno
test
in
mov
mov
adc
std
je
push
jns
xlat
movs
in
pop
mov
mov
adc
loope
ss
rcl
popf
and
mov
call
ret
sub
and
rol
jecxz
or
lea
daa
jbe
sub
add
push
cmp
jge
outs
sub
ins
push
test
es
add
lahf
xchg
xor
sub
xchg
ins
sub
jl
inc
ins
pop
(bad)
mov
movs
adc
fbstp
enter
(bad)
pop
push
jecxz
iret
ds
mov
and
or
jl
sub
dec
cmp
jb
loop
scas
xor
fst
jmp
stos
xchg
aas
(bad)
out
xchg
xchg
test
mov
icebp
or
and
dec
add
adc
fs
and
out
push
add
jecxz
push
and
sbb
test
dec
pusha
push
inc
adc
call
cmp
lahf
ror
jecxz
inc
xor
cmp
lock
xchg
addr16
retf
sbb
cmps
lods
cmc
loop
push
mov
aas
xchg
adc
inc
pop
cdq
jmp
mov
scas
sbb
mov
cmp
push
jg
mov
lods
jmp
mov
ret
or
cmp
test
pop
call
inc
neg
and
xor
(bad)
jge
loopne
and
shr
sub
sahf
adc
pop
mov
push
push
mov
leave
inc
call
mov
pcmpeqd
iret
loope
sub
sub
adc
call
or
xchg
or
inc
jno
jmp
idiv
pcmpgtd
cmp
addr16
nop/reserved
shr
inc
fnstcw
rol
push
mov
popa
inc
(bad)
fucom
out
push
cwde
call
loope
pushf
add
xchg
and
xor
xchg
dec
xchg
jmp
dec
adc
jecxz
or
push
mov
sysexit
push
push
aam
sbb
push
xchg
js
enter
add
cmps
out
mov
sahf
sbb
add
jo
(bad)
jmp
sbb
gs
fst
cld
jns
adc
dec
adc
imul
cmp
pop
(bad)
mov
pop
push
adc
sub
or
loope
sbb
jae
push
int
and
push
dec
and
fs
pop
xor
sub
mov
cdq
rcl
loopne
dec
mov
sbb
or
xchg
jb
(bad)
int
jmp
jns
in
xchg
jo
fild
pop
mov
and
push
ss
sub
inc
jge
movs
retf
and
rcr
pop
jae
ds
push
and
xchg
cmp
popa
push
dec
fucomp
adc
jnp
xchg
adc
or
xor
lods
cmp
iret
(bad)
cmc
(bad)
xchg
test
dec
push
or
addr16
mov
outs
push
cmp
sbb
adc
pop
mov
jmp
or
and
fsubr
inc
ins
lds
fisttp
inc
jmp
clc
and
(bad)
sub
stc
ins
stos
stc
js
xchg
mov
(bad)
and
cwde
push
rcl
daa
pusha
xchg
fistp
sub
cmps
jecxz
add
shl
ja
call
popa
pop
mov
jge
(bad)
fisub
adc
push
and
jbe
cmp
cmp
std
mov
out
push
cwd
xchg
clc
sbb
mov
and
mov
jg
pop
mul
sbb
dec
popa
jbe
in
fwait
(bad)
mov
xchg
sub
mov
sbb
sbb
cmp
mov
inc
loopne
lock
push
stc
into
sub
jae
cmp
scas
mov
mov
fisub
call
pop
or
xor
cwde
popa
xchg
pop
xor
lods
inc
cmp
mov
dec
mov
jne
push
cwde
dec
pop
leave
fsubrp
adc
int3
cmps
dec
sti
ret
mov
cmps
addr16
and
iret
push
xlat
fnstcw
mov
idiv
shr
scas
lock
pop
test
in
cld
(bad)
and
inc
jmp
nop
movs
stc
lds
xchg
je
adc
xchg
or
jp
aaa
xchg
lea
xor
or
mov
(bad)
repnz
push
xchg
add
xor
mov
icebp
rcr
cmc
mov
dec
xchg
jmp
dec
sahf
aaa
je
test
push
cli
outs
mov
out
pusha
adc
jecxz
mov
neg
mov
jbe
aad
(bad)
push
pop
xchg
dec
sub
mov
in
hlt
jo
xchg
push
sbb
sub
push
in
pop
(bad)
in
popa
mov
add
dec
jo
repnz
jmp
sub
lahf
push
jp
stos
dec
icebp
pop
popf
inc
pop
sti
aaa
in
fdivp
ret
xchg
sahf
mov
xchg
xchg
ret
bound
mov
pop
mov
sub
cs
repnz
(bad)
stos
loope
lock
push
cmp
(bad)
mov
sbb
push
inc
jmp
or
cmp
sbb
addr16
movs
mov
sbb
pop
dec
syscall
int3
adc
sub
nop
test
mov
fwait
adc
dec
push
sbb
inc
mov
call
xchg
pop
into
mov
cmp
(bad)
fcmovnbe
daa
sub
or
dec
add
fcomp
imul
dec
adc
stos
fwait
pusha
push
pushf
inc
cmp
and
cmps
or
mov
mov
dec
aam
loop
sbb
imul
mov
jle
das
bswap
js
stc
hlt
adc
scas
dec
out
sub
dec
mov
adc
outs
mov
sbb
loopne
and
and
xchg
sub
inc
push
xor
nop
fisttp
jmp
push
inc
cmp
xor
lods
mov
push
pop
outs
(bad)
stc
add
push
int
xchg
xlat
sub
pop
(bad)
rcl
sub
mov
mov
leave
aad
shl
fs
push
fadd
cdq
lods
push
xor
iret
push
cmp
adc
(bad)
sub
retf
cmp
lods
(bad)
mov
push
mov
in
mov
shl
nop
and
or
call
jmp
ss
jecxz
daa
ins
out
mov
clc
dec
ins
aas
mov
scas
aad
jmp
adc
mov
inc
stc
arpl
fwait
dec
fstp
xchg
cmp
cmp
xchg
inc
out
sbb
jmp
and
mov
xchg
jae
xchg
mov
jne
das
push
jmp
cmp
sub
out
jmp
add
jnp
and
fst
sub
ret
dec
(bad)
pop
sbb
lods
icebp
xor
and
pop
mov
or
add
aad
mov
mov
lds
jo
fsubr
xchg
adc
sub
ja
call
or
fs
psrad
ret
rol
dec
aaa
lea
imul
cmp
ficomp
enter
rcl
jo
call
call
mov
push
push
push
imul
out
xlat
cmps
gs
inc
mov
push
repnz
jnp
mov
int
pop
push
xlat
mov
rcr
(bad)
mov
add
cs
repnz
and
(bad)
in
movs
xor
inc
adc
push
dec
xchg
cmc
xor
xor
bound
popf
cmp
xchg
pop
pop
retf
inc
lahf
lock
inc
rol
stos
outs
xchg
aaa
xchg
(bad)
inc
fsub
push
lock
dec
daa
jno
imul
xor
dec
sbb
push
dec
fldcw
data16
adc
push
jg
add
sub
les
sbb
dec
xchg
popf
push
mov
cmp
sub
or
jo
xor
mov
popa
cmps
cmps
sub
jmp
cmps
and
and
xor
loopne
test
jmp
in
movs
and
ss
sbb
inc
mov
jg
ins
hlt
sbb
imul
inc
cmps
in
cmp
scas
pushf
push
aas
cmps
ror
call
jo
clc
jb
cmps
je
sbb
push
fs
shr
movs
(bad)
(bad)
jmp
fld
(bad)
jmp
inc
retf
mov
test
or
adc
pop
jne
sti
(bad)
out
sub
sbb
ins
xor
sub
lds
ds
pop
adc
add
loope
shr
ins
(bad)
sbb
idiv
iret
ficom
fdivr
add
cmp
and
outs
fild
or
je
sub
std
pop
push
mov
mov
push
push
mov
and
cdq
gs
clc
mov
stos
or
lock
pop
jbe
sub
and
retf
and
cmc
cdq
je
dec
stc
loop
dec
dec
hlt
daa
cmp
dec
push
cld
xor
add
imul
or
xchg
and
in
mov
adc
mov
in
rol
inc
inc
arpl
lods
dec
and
call
retf
mov
or
push
adc
imul
retf
nop
data16
cmc
and
fwait
add
and
sub
or
mov
call
scas
or
xchg
add
mov
daa
(bad)
loope
mov
inc
xchg
dec
pusha
jnp
rcl
fs
cmps
nop
push
jl
loope
stos
shl
add
dec
call
sbb
retf
nop
in
ret
push
mov
adc
mov
xchg
dec
cmp
inc
hlt
jne
fwait
rol
int
in
adc
not
inc
push
nop
shl
int3
popa
clc
and
je
loopne
scas
adc
jns
xchg
scas
sbb
pop
and
sub
dec
lock
jmp
shl
test
mov
and
repz
cmp
xchg
fwait
aam
cwde
jle
xchg
(bad)
rcl
clc
dec
and
js
lock
aaa
leave
xchg
sbb
js
push
cmps
cli
inc
push
test
pop
ins
adc
sub
push
dec
inc
mov
add
mov
mov
imul
nop
loop
push
int
mov
push
mul
pop
in
mov
fidiv
pop
or
mov
scas
loope
xchg
repnz
xor
sar
(bad)
or
pop
jne
cmp
shl
in
call
push
popf
mov
ret
cmc
cmps
es
jns
fnstcw
mov
push
fsubr
popf
retf
inc
(bad)
jns
neg
call
jbe
stos
(bad)
fmul
push
push
mov
mov
mov
jecxz
in
fidivr
sti
sbb
and
pop
ret
mov
jno
cs
or
dec
dec
out
cmc
or
dec
pushf
or
add
test
popa
retf
mov
pop
cmp
clc
xor
pop
retf
jb
and
sbb
jmp
add
scas
mov
jl
frstor
arpl
and
popa
cwde
and
sbb
shl
mov
leave
pop
inc
cmps
retf
xchg
inc
test
out
mov
enter
cli
xchg
pop
or
fsubp
cmc
inc
mov
and
and
aaa
scas
pop
test
mov
dec
les
ss
adc
lods
or
or
(bad)
mov
ret
std
das
pop
(bad)
fcmovbe
(bad)
sahf
adc
loopne
in
mov
outs
popa
or
int3
sub
push
mov
sbb
loopne
pop
fcom
outs
nop
mov
pusha
pop
adc
pop
out
jl
call
out
inc
add
call
cli
out
ins
add
add
xchg
int
in
rcr
jns
fild
scas
sar
mov
add
setl
std
gs
fst
lds
test
push
jge
pop
addr16
cmp
and
sub
aam
into
pop
cmp
sti
aam
stos
mov
scas
ins
add
add
shr
push
repnz
add
shr
sbb
aad
pop
mov
stos
adc
bound
pop
(bad)
(bad)
jmp
mov
push
call
inc
and
outs
dec
(bad)
enter
jnp
movs
and
bound
jle
test
jnp
mov
xor
inc
sahf
das
sub
xor
push
mov
jb
pop
adc
(bad)
xchg
shl
mov
add
fcomi
stc
cmp
add
test
mov
iret
and
out
jbe
adc
dec
dec
mov
push
outs
leave
dec
dec
jecxz
push
jae
jecxz
sub
scas
inc
mov
cld
ret
push
inc
fstp
xor
nop
pcmpeqd
or
jl
xor
push
std
inc
imul
mov
inc
push
sti
cdq
mov
mov
cwde
imul
dec
sub
jmp
fwait
jecxz
inc
popf
outs
xor
fstp
add
lods
mov
test
mov
mov
or
lods
adc
pushf
aad
sub
and
movs
jne
xlat
mov
fcomi
jle
xor
sar
dec
push
stos
fs
and
mov
push
ins
dec
outs
or
push
fld
sbb
(bad)
call
inc
inc
or
iret
popa
mov
stos
or
ret
mov
dec
lods
or
icebp
fcmovnb
xor
(bad)
xchg
aaa
(bad)
sub
cmp
test
add
adc
mov
cmp
rcl
imul
gs
cmps
aaa
mov
cmp
repz
enter
ret
test
push
push
or
sbb
clc
jo
out
inc
sub
push
movs
adc
add
mov
mov
clc
sahf
sti
ins
xlat
pmuludq
pop
leave
clc
mov
leave
aaa
lds
mov
in
retf
scas
fidivr
inc
scas
sar
call
lods
retf
and
js
das
mov
rcl
loop
out
fs
inc
mov
cmp
sbb
or
inc
mov
pop
pushf
sub
aam
stc
popa
mov
sti
cdq
icebp
dec
add
sbb
dec
bnd
popf
xor
or
mov
and
sbb
je
jno
stc
pop
xchg
in
test
pop
lea
push
xchg
fwait
mov
ror
adc
push
call
shl
add
(bad)
sbb
inc
dec
jecxz
inc
cmp
lea
repnz
(bad)
retf
fst
or
and
xor
pop
pop
jo
cmc
(bad)
shr
fcmovnu
jl
mov
mov
in
push
mov
push
lock
push
mov
dec
and
fnsave
xchg
in
dec
cmp
xchg
popf
mov
jb
pop
movs
repz
outs
dec
add
lds
jmp
std
(bad)
push
int3
jmp
imul
jbe
xor
cmps
inc
ret
sbb
add
les
add
dec
push
add
bound
mov
mov
adc
push
out
in
sbb
test
pop
mov
iret
loopne
xchg
mov
aas
mov
cmp
cmp
jge
repnz
cmps
mov
lds
in
mov
adc
push
leave
fs
(bad)
lods
js
dec
out
sbb
pusha
pop
fstp
test
pop
push
sbb
ret
test
cmp
pop
mov
test
mov
push
pop
cmp
jl
pop
rcr
cmp
(bad)
mov
popf
mov
aad
or
sahf
and
xchg
test
ins
mov
stc
sbb
xchg
loopne
and
(bad)
sbb
(bad)
jg
inc
test
xor
inc
fidivr
xor
test
imul
mov
repz
int3
push
xor
rcl
push
xor
cwde
addr16
sub
mov
jne
arpl
push
adc
pop
fs
sbb
imul
cmp
retf
jne
mov
pop
into
mov
mov
sbb
mov
xchg
cs
das
push
push
test
jl
rcr
inc
xchg
or
mul
push
xor
imul
jo
dec
ins
les
dec
inc
mov
pop
cmp
push
(bad)
int
(bad)
mov
push
pop
push
inc
leave
sub
jne
cld
mov
scas
(bad)
pusha
fild
mov
cld
or
jbe
add
cld
loopne
xchg
call
sbb
aaa
push
out
push
or
mov
mov
ins
pop
xchg
mov
xor
stc
jns
sub
rcr
mov
jmp
xchg
jge
push
into
or
jecxz
cmp
aas
cwde
add
jno
pop
cmp
pop
call
mov
sbb
xor
call
adc
and
loop
cmp
clc
mov
jbe
shl
mov
jno
test
jmp
xchg
push
or
std
inc
push
and
out
clc
in
scas
(bad)
cld
daa
stos
js
sbb
push
movnti
and
das
js
test
scas
dec
in
mov
mov
mov
loop
push
popf
jge
fsub
sar
and
add
sbb
sub
push
xor
sub
jmp
pusha
inc
movs
xchg
jmp
xor
pop
fsub
rcl
pop
xchg
popa
jmp
mov
mov
nop
inc
retf
jns
sub
retf
sub
and
aam
loope
jb
jge
sub
loop
mov
jbe
xor
and
das
fild
fs
cwde
inc
lea
or
jmp
repnz
or
dec
je
pop
daa
addr16
and
push
push
jo
jo
test
lahf
xchg
in
mov
pusha
jbe
mov
mov
movs
xchg
aad
fcomp
out
dec
inc
cmps
scas
push
xchg
xlat
gs
stos
cmps
sub
push
push
xor
jne
int3
xlat
outs
les
sahf
call
(bad)
std
sbb
xchg
xor
retf
adc
push
mov
in
or
adc
popf
xor
mov
push
sub
repz
mov
or
lea
bound
sub
mov
or
xchg
jle
pop
sbb
push
out
xchg
mov
mov
mov
ret
scas
or
les
inc
mov
mov
add
mov
and
shl
out
sbb
or
pop
jo
sub
pop
imul
sbb
mov
push
push
out
icebp
cmc
push
add
lahf
imul
shl
cmps
sbb
test
push
inc
aaa
cld
out
fsubp
movq
out
mov
fsub
mov
pop
sbb
aad
stos
aas
jnp
mov
mov
test
mov
shr
mov
cmp
cmp
jns
push
sub
xchg
mov
repz
out
xchg
btr
and
push
idiv
pop
ficom
pop
pop
subps
and
cmc
test
or
fidivr
pop
mov
push
mov
xchg
pop
add
jmp
xchg
add
jbe
jns
add
aad
cs
push
fincstp
les
js
or
adc
xor
pop
aaa
sbb
in
adc
loope
and
or
jmp
mov
sub
out
rcr
jle
xchg
imul
or
mov
inc
ins
mov
add
out
aaa
pop
mov
aad
cmps
dec
adc
jecxz
mov
sahf
fyl2x
mov
fs
(bad)
in
adc
jns
pop
jecxz
test
cmps
les
in
mov
jle
adc
adc
scas
gs
out
shr
sahf
iret
xor
out
mov
inc
test
mov
imul
push
inc
mov
pushf
xor
shl
test
pushf
inc
ds
mov
adc
(bad)
test
nop
lods
xchg
and
out
adc
(bad)
pusha
sbb
mov
inc
and
cdq
fldenv
daa
sbb
ss
ficomp
sbb
std
fldcw
pop
cmp
mov
clc
inc
dec
xlat
inc
and
outs
fadd
stos
mov
jl
ds
fist
xor
aad
push
outs
retf
xlat
cmc
cmp
cwde
jl
sub
jmp
lds
pop
push
add
xchg
sbb
and
fwait
loopne
test
mov
cld
lahf
hlt
add
mov
and
test
dec
jns
aas
aaa
dec
hlt
cli
sub
dec
ret
lea
jmp
mov
push
adc
(bad)
pop
mov
cmp
cs
adc
lea
imul
xor
or
and
or
push
jmp
js
daa
call
xchg
fnstsw
out
and
and
sub
mul
das
jae
or
iret
xchg
adc
das
aad
aam
or
fnstcw
test
mov
cmp
dec
ds
sbb
aam
leave
cmp
jo
mov
jle
aaa
pop
jae
fs
ins
call
je
popf
test
sub
push
xchg
xchg
sub
or
cwde
das
xchg
cmps
xor
cmps
and
push
adc
dec
sub
out
sbb
adc
movs
inc
dec
test
test
adc
scas
ror
push
mov
jne
push
xor
fld
push
in
jb
pop
rcr
sar
add
rol
sbb
add
cmp
sub
loopne
in
xor
dec
and
mov
mov
xchg
loope
outs
jmp
xchg
mov
(bad)
mov
mov
push
mov
mov
cmp
movhps
lock
and
mov
xchg
js
enter
dec
shr
lds
add
xchg
push
fwait
out
and
adc
xor
inc
clc
out
clc
out
add
hlt
js
add
movs
adc
das
inc
xchg
sbb
mov
daa
inc
xchg
mov
inc
aam
xchg
and
xor
leave
ret
cmps
push
add
into
aaa
(bad)
adc
xchg
pop
sbb
scas
cmp
mov
aam
out
mov
inc
(bad)
cs
pop
test
rcr
stos
xlat
cmp
popa
mov
cmp
inc
imul
in
leave
sub
or
stos
and
adc
jb
(bad)
div
sbb
xchg
dec
jle
fmul
adc
mov
push
sub
aam
xor
jns
loop
clc
push
pop
fcom
fidiv
loopne
push
jb
pusha
clc
sbb
int3
fwait
ret
and
aas
and
stc
jno
fdivr
arpl
sahf
or
movs
or
fisubr
pop
xor
pop
inc
jge
cmps
or
dec
(bad)
adc
in
add
and
pop
ds
or
jbe
sbb
je
cwde
adc
pop
fstp
in
pop
cmc
mov
stc
cmp
fisubr
fnstcw
push
cmp
sub
(bad)
into
movs
adc
out
sbb
and
daa
inc
arpl
push
out
jae
xor
(bad)
jnp
mov
inc
ds
lock
fimul
inc
mov
adc
loop
mov
sub
ds
shl
xor
outs
sbb
(bad)
test
bound
ret
add
js
add
test
mov
xor
xchg
fild
cld
lods
cmp
hlt
stos
mov
int3
adc
jle
loopne
jb
mov
mov
or
add
sbb
xchg
lods
fnsave
js
push
adc
fisub
inc
pusha
add
cmp
call
imul
rcr
pop
jge
fsub
xchg
ds
pop
push
stc
fistp
stc
popf
and
push
repnz
jbe
or
lds
dec
in
sub
pop
daa
sub
sub
or
gs
fs
add
js
mov
movs
fstp
cmps
mov
xchg
mov
mov
xchg
in
pop
shr
sbb
(bad)
mov
jl
mov
add
mov
jmp
sub
and
stc
jp
stos
scas
jne
mov
add
pop
sub
jl
mov
jmp
and
(bad)
imul
pop
es
mov
ins
das
ds
sub
push
fsub
ds
pop
lods
mov
imul
stos
or
jne
dec
cdq
in
sub
add
fs
mov
enter
arpl
addr16
add
retf
mov
inc
and
cmp
add
outs
movs
push
out
sti
jmp
int
mov
xor
stos
push
mov
clc
sub
into
js
mov
push
xchg
out
imul
mov
xchg
cmps
rol
int3
hlt
xor
out
sar
dec
add
adc
int3
cmc
push
push
or
lock
test
push
dec
adc
(bad)
loop
lahf
cmp
pop
add
xlat
adc
jle
cmp
imul
add
lea
mov
test
push
or
sub
or
jg
adc
cwde
mov
fwait
(bad)
jmp
push
xor
or
scas
sbb
(bad)
xchg
fidivr
fisubr
dec
jne
add
sub
mov
mov
dec
pop
out
jbe
test
ins
cld
rol
inc
out
and
imul
out
xchg
add
dec
cmps
fs
test
movs
dec
add
sbb
lock
cmp
fs
mov
iret
xor
or
pop
iret
retf
cmp
test
outs
ja
push
mov
out
or
je
(bad)
sti
icebp
mov
dec
loop
(bad)
xchg
pusha
jmp
aaa
jb
in
mov
rcl
and
mov
shl
xchg
xchg
sbb
mov
or
ja
js
inc
push
xchg
mov
repz
sbb
(bad)
mov
add
mov
imul
call
pop
int
fnstenv
mov
cmp
clc
aas
imul
mov
dec
add
and
loope
in
or
jge
or
(bad)
adc
js
or
pop
xchg
int3
mov
dec
fistp
cdq
popf
jb
fidivr
fdivr
in
push
rcl
shl
not
pop
inc
test
int
fisubr
dec
xchg
mov
mov
mov
mov
dec
push
(bad)
int3
sub
jge
lahf
mov
adc
(bad)
hlt
ret
cmp
fstp
mov
and
mov
addr16
adc
cmps
das
mov
add
xor
xor
gs
addr16
adc
push
rol
xchg
popa
and
push
sbb
and
jno
int3
test
pop
sub
push
js
sbb
into
in
mov
mov
cmp
and
lds
imul
mov
jecxz
dec
push
pop
pop
pop
push
sub
aam
xor
fs
adc
mov
push
cli
mov
aam
and
xchg
inc
fistp
adc
je
aad
(bad)
call
cmp
inc
movs
push
outs
sbb
in
jg
loopne
cmp
aaa
int
cdq
aam
das
inc
push
sar
xor
push
cwde
or
cld
outs
fs
mov
adc
bound
fiadd
sbb
repnz
fs
mov
fiadd
lea
dec
iret
sbb
xlat
xchg
outs
lock
adc
mov
inc
lea
xor
mov
bound
inc
fcomp
fisubr
out
and
push
stos
test
(bad)
movs
xchg
imul
jle
scas
sub
add
jp
fs
retf
jb
call
adc
jb
(bad)
push
xchg
movs
sbb
and
fadd
enter
shl
inc
clc
xor
xor
lock
rcl
movs
pop
jns
cmps
fmulp
into
sti
ret
neg
mov
aas
loopne
jmp
jne
mov
sbb
sub
(bad)
clc
lods
bound
adc
scas
inc
pop
pop
scas
jecxz
in
inc
lock
mov
inc
leave
mov
(bad)
out
mov
xchg
sbb
leave
aad
cdq
adc
inc
push
dec
test
pop
mov
add
cwde
inc
rcl
xor
mov
mov
sub
rol
call
ffreep
call
add
jmp
mov
and
jno
mov
push
xchg
(bad)
push
in
cmp
inc
ror
pop
pop
retf
ret
bound
iret
xchg
cwde
jg
inc
push
pop
push
pop
adc
(bad)
xlat
and
stc
inc
push
cmp
sti
call
clc
stc
adc
mov
sub
pop
dec
retf
fstp
jo
imul
loop
ins
cmp
test
call
dec
jne
fbld
inc
jno
or
push
das
dec
sub
lds
fcom
cmps
cmps
add
cmp
xor
data16
sub
lea
dec
addr16
das
icebp
sub
inc
test
dec
jp
xlat
mov
stc
sbb
pop
ins
test
fdivr
in
push
movs
sbb
pop
ret
push
xchg
je
lods
lock
lds
clc
inc
rcl
mov
arpl
inc
xor
std
dec
js
pop
jmp
cmp
into
jns
mov
clc
imul
outs
ins
xlat
movs
add
pop
ret
sahf
pusha
out
fcmovnbe
pop
jnp
sbb
mov
loope
jle
jmp
(bad)
imul
and
fcom
sbb
sbb
daa
(bad)
scas
retf
adc
mov
sahf
xlat
rol
cmps
popa
xchg
and
out
loope
dec
repz
imul
aas
retf
call
shl
push
test
cmp
cld
ss
mov
xchg
fbstp
pop
xor
xor
popf
stos
neg
imul
out
xor
loope
sbb
xor
xchg
adc
in
aas
sub
or
leave
es
fidivr
loope
js
or
add
pop
push
dec
pop
dec
fidiv
push
rcl
xor
retf
bound
hlt
inc
add
ins
add
call
(bad)
out
outs
sbb
xor
cmps
jl
jo
ins
mov
test
(bad)
(bad)
aad
(bad)
call
(bad)
shr
and
dec
sahf
repz
and
leave
dec
and
inc
add
mov
sbb
push
xor
loop
push
cmp
cmp
icebp
into
(bad)
sti
or
or
fnsave
sbb
int
test
or
cmp
int
cmc
dec
adc
jp
mov
ins
outs
