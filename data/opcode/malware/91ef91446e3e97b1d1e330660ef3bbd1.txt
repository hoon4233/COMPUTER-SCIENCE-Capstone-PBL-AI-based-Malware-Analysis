dec
xchg
add
add
add
add
add
add
add
add
add
add
add
add
pop
fadd
add
push
add
add
adc
add
sub
add
add
or
xor
add
add
add
add
adc
add
add
add
sub
add
push
and
add
jle
add
add
add
add
jae
add
or
add
add
add
add
xor
add
add
add
add
add
outs
sub
push
and
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
jnp
add
add
outs
pop
add
or
add
add
xor
add
add
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
outs
sbb
add
and
add
sub
jnp
add
add
outs
pop
add
or
add
xor
add
add
adc
add
sbb
add
and
add
sbb
add
and
pop
sub
push
sub
add
or
sub
add
push
add
push
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
add
or
push
add
add
add
sbb
es
jle
add
add
sbb
add
add
add
push
add
or
adc
sub
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
sub
pop
add
push
and
pop
add
push
and
add
or
or
add
or
add
add
sbb
es
sub
add
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
push
outs
sbb
add
and
adc
add
add
add
add
add
add
adc
add
push
add
add
add
adc
or
push
sub
add
pop
inc
add
add
and
add
push
add
add
add
add
add
sub
pop
xor
pop
add
push
and
sub
push
and
sub
push
and
sub
push
and
sub
push
and
xor
add
add
add
add
add
add
push
dec
add
add
add
or
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
or
add
add
xor
add
add
add
add
add
or
add
or
pop
add
add
add
add
or
add
add
xor
add
add
add
add
add
add
or
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
push
add
or
add
and
add
add
add
or
pop
add
push
jae
add
or
add
or
add
or
adc
daa
add
or
add
or
sub
add
or
sub
add
push
and
sub
add
and
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
push
add
adc
sub
add
or
sub
add
push
and
sub
add
and
add
or
pop
outs
add
or
popa
push
sub
es
add
and
adc
add
das
add
add
add
adc
outs
xor
add
or
pop
sub
xor
add
or
push
xor
push
push
pop
outs
xor
add
and
mov
add
add
xor
add
and
xor
add
add
or
add
jle
add
add
pusha
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
xor
add
and
sub
or
call
add
sub
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
ficomp
pop
pop
or
xor
pop
inc
add
add
idiv
(bad)
call
jle
add
add
pop
sub
add
or
push
add
add
add
add
add
or
jle
add
or
add
add
jle
add
or
add
add
add
add
or
dec
add
add
add
add
jnp
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
add
add
lahf
add
add
pop
add
push
and
add
or
add
add
xor
add
add
add
add
add
jnp
add
add
and
add
and
add
add
add
add
add
lahf
add
add
pop
add
push
and
add
or
add
add
or
or
add
add
add
add
sub
add
push
sub
xor
adc
add
add
add
add
add
add
or
cld
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
and
add
sub
add
add
(bad)
(bad)
inc
and
add
add
pop
add
push
and
add
and
mov
add
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
push
add
adc
add
sub
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
loopne
add
sub
push
sub
add
or
add
add
idiv
(bad)
call
sub
add
es
add
add
push
add
push
sub
add
or
sub
sbb
add
add
add
adc
adc
add
sub
push
and
add
sbb
push
add
push
adc
add
xor
adc
add
imul
add
add
pop
add
push
jb
add
jo
call
add
add
pop
add
push
and
add
or
add
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
sub
add
adc
add
adc
add
sub
pop
or
push
add
push
and
pop
add
push
and
add
or
add
sub
es
sub
add
add
add
add
add
inc
add
add
xor
add
add
adc
hlt
add
add
pop
add
push
and
add
pop
adc
push
add
push
adc
add
or
add
add
add
(bad)
(bad)
call
sub
add
and
add
add
pop
add
push
sub
add
add
jl
add
sub
push
and
add
call
push
sub
add
or
inc
add
add
idiv
(bad)
jmp
stc
add
add
pop
add
push
and
add
sub
and
add
sub
push
and
add
jle
add
add
outs
dec
add
push
and
add
pop
add
push
and
add
and
add
call
and
add
and
sub
add
or
add
and
add
add
pop
add
push
pop
sub
add
or
add
pop
sub
add
or
inc
add
add
idiv
(bad)
call
adc
push
add
push
adc
pop
add
add
es
sbb
push
add
push
and
add
add
pop
add
push
or
add
or
add
sub
add
add
adc
add
add
add
and
es
add
add
xor
add
add
adc
adc
pop
add
push
and
add
pop
sbb
push
add
push
sbb
add
xor
sbb
add
imul
add
add
pop
add
push
and
pop
add
push
and
add
and
add
add
pop
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
inc
add
add
pop
add
push
and
add
sub
push
sub
or
rol
add
pop
add
push
push
sub
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
and
push
add
push
sbb
add
sbb
add
sub
pop
and
push
add
push
and
add
add
pop
add
push
and
add
or
add
sub
fiadd
sub
adc
add
add
add
add
add
xor
add
add
adc
inc
add
add
push
sub
sub
add
sbb
add
or
pop
sub
push
add
push
and
add
xor
and
add
xor
push
add
push
and
add
or
pop
xor
push
add
push
sub
add
xor
sub
add
cmp
push
add
push
sub
add
or
pop
cmp
push
add
push
xor
add
xor
xor
add
inc
sub
add
xor
add
or
pop
inc
sub
add
cmp
add
xor
cmp
add
dec
sub
add
cmp
add
or
pop
dec
sub
add
add
add
xor
inc
add
add
push
sub
add
add
add
xor
inc
add
add
push
sub
add
or
add
xor
dec
add
add
pop
sub
add
or
add
xor
dec
add
add
imul
add
add
push
and
add
add
pop
add
push
and
add
and
add
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
sub
add
and
daa
add
add
sub
pop
pusha
sub
add
and
add
add
push
pop
outs
sbb
add
and
add
sub
es
jle
add
add
dec
push
add
sub
push
and
pop
add
push
and
add
and
push
add
sub
push
and
add
or
add
or
and
add
and
sub
add
xor
aaa
add
add
sub
add
push
and
push
add
sub
push
and
add
or
add
sub
es
jle
add
add
push
pop
add
sub
push
pop
ins
sub
add
sub
add
mov
pop
add
push
and
imul
and
add
adc
and
jo
push
add
push
adc
cmp
adc
call
add
pop
add
push
and
cmp
add
sub
and
or
add
pop
add
push
and
push
add
push
outs
cmp
es
pop
js
push
add
push
sbb
pop
jl
push
add
push
and
push
add
push
outs
add
or
push
and
or
add
pop
add
push
adc
sub
add
or
mov
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
push
sbb
add
and
test
add
sub
add
pop
adc
adc
adc
mov
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
jle
add
add
sub
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
push
pop
add
sub
push
and
push
add
push
sub
adc
dec
or
add
pop
add
push
and
imul
and
add
adc
and
mov
add
sub
add
adc
cmp
and
and
or
add
pop
add
push
adc
sub
add
or
mov
add
adc
and
or
add
pop
add
push
and
add
sub
add
outs
cmp
es
and
add
push
sbb
and
push
add
push
and
add
push
outs
add
or
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
or
adc
and
push
add
push
pop
adc
adc
adc
mov
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fidiv
adc
and
add
push
and
pop
add
push
and
sbb
add
and
add
sub
es
sub
add
push
adc
adc
outs
aas
add
or
xchg
add
adc
inc
add
or
and
add
mov
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
sub
or
outs
or
add
pop
add
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
and
add
or
and
add
xor
or
add
push
add
push
and
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
or
add
sub
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
sub
add
push
sub
add
adc
and
add
push
and
or
add
pop
add
push
adc
outs
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
mov
pop
add
push
adc
sub
add
or
mov
add
adc
sub
add
or
mov
push
add
push
sub
sub
add
adc
and
add
push
and
or
add
pop
add
push
adc
outs
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
pop
add
push
and
add
and
add
sub
push
sub
adc
and
add
pop
add
push
and
cmp
add
sub
sub
add
or
inc
add
add
idiv
(bad)
jmp
rol
add
push
add
push
xor
add
adc
fisubr
adc
and
add
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
fiadd
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
or
add
pop
add
push
and
add
and
add
sub
push
and
add
and
std
or
add
pop
add
push
adc
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
jmp
enter
sub
add
cmp
add
adc
cmp
add
adc
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
fiadd
jle
add
add
and
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
or
add
push
and
pop
add
push
and
add
and
add
sub
push
and
add
and
movs
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
rol
add
sub
add
cmp
cmp
add
xor
pop
and
add
add
push
add
push
and
or
add
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
jle
add
add
or
add
push
and
add
sub
push
sub
add
or
add
sub
push
sub
sbb
dec
or
add
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
fadd
add
sub
add
add
add
sbb
fidiv
adc
and
add
add
push
add
push
and
add
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
sub
adc
and
push
add
sub
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
add
add
sbb
fidiv
adc
and
add
add
push
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
sub
add
or
add
sub
push
and
add
and
ror
add
pop
add
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
jmp
call
push
add
push
or
add
sbb
dec
add
add
xor
sbb
add
push
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
cmp
imul
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
adc
and
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
add
add
(bad)
(bad)
jmp
lock
add
push
add
push
or
add
push
or
add
xor
pop
and
add
add
push
add
push
and
pop
add
push
and
sbb
add
and
add
sub
es
adc
inc
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
sub
inc
push
add
add
add
sub
add
add
add
add
add
add
add
ret
add
add
add
sbb
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
jmp
add
jns
add
fs
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
outs
add
add
push
add
add
add
add
add
add
sub
add
add
add
inc
add
add
add
add
pop
add
jns
add
data16
add
add
add
add
add
add
lods
or
add
add
sub
add
xor
add
inc
add
add
add
add
add
ja
add
loopne
add
xor
add
inc
add
add
add
add
or
add
add
cmps
or
add
add
add
add
add
add
icebp
or
add
add
ins
or
add
add
add
add
add
add
stos
or
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
add
add
xor
add
add
and
add
add
push
add
push
adc
add
cld
add
add
push
add
push
adc
add
add
add
sub
add
sbb
add
add
add
sub
add
sub
add
and
add
add
push
add
push
sub
add
or
or
add
sub
add
sub
add
and
add
add
and
adc
add
pop
add
push
and
add
and
adc
add
pop
add
push
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
add
sub
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
adc
add
imul
sub
add
sub
push
and
add
and
xor
add
sub
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
call
add
inc
add
or
add
sub
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
adc
add
imul
inc
adc
add
pop
add
push
and
add
adc
add
pop
add
push
and
cmp
add
sub
sub
add
or
inc
add
add
idiv
(bad)
call
add
or
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
sbb
add
xor
push
and
add
sub
add
and
add
sub
push
and
sbb
add
and
add
sub
es
sub
add
jecxz
add
jecxz
add
xor
add
inc
add
add
xor
mov
add
add
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
pusha
add
mov
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
add
push
add
push
add
das
add
push
and
add
leave
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
popa
pop
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
and
add
sub
add
add
das
add
push
and
add
not
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
pop
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
and
sub
add
sub
add
add
das
add
push
and
add
sub
add
sub
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
dec
add
dec
adc
add
pop
add
push
and
add
and
sub
add
sub
add
add
das
add
push
and
add
push
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
sbb
add
add
(bad)
(bad)
inc
and
add
pop
add
push
outs
inc
add
or
xor
add
sub
add
add
das
add
push
and
add
xchg
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
xor
add
sub
add
add
das
add
push
and
add
mov
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
add
das
add
push
and
add
out
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
sbb
add
add
idiv
(bad)
jmp
cmp
add
sub
add
add
das
add
push
and
add
and
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
dec
adc
add
pop
add
push
and
add
sub
sbb
add
(bad)
(bad)
jmp
inc
add
add
push
add
push
add
das
add
push
and
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
(bad)
(bad)
inc
and
add
push
and
add
sub
pop
inc
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
add
das
add
push
and
add
(bad)
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
sub
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
dec
add
add
push
add
push
add
das
add
push
cmp
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
dec
add
add
push
add
push
add
das
add
push
add
add
add
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
adc
add
pop
add
push
and
add
sub
sbb
add
add
idiv
(bad)
jmp
push
add
add
push
add
push
add
das
add
push
add
and
add
sub
push
and
add
dec
add
add
xor
add
sub
add
add
push
add
jo
add
sub
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
push
add
add
push
add
push
add
das
add
push
and
add
mov
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
sbb
add
add
idiv
(bad)
inc
and
pop
add
push
and
add
and
pop
add
add
push
add
push
add
das
add
push
and
add
xlat
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
push
add
or
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
add
add
push
add
push
add
das
add
push
and
add
pop
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
xor
ret
add
add
add
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
pusha
add
mov
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
add
xor
add
adc
add
leave
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
add
add
push
add
push
add
xor
add
and
add
not
add
sub
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
push
push
add
push
add
xor
add
and
add
sub
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
ins
add
add
push
add
push
add
xor
add
and
add
push
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
push
pop
inc
add
add
idiv
(bad)
inc
and
add
pop
add
push
and
add
and
jo
add
sub
add
add
xor
add
and
add
xchg
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
arpl
idiv
(bad)
inc
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
je
add
sub
add
add
xor
add
and
add
mov
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
sbb
add
add
idiv
(bad)
jmp
js
add
sub
add
add
xor
add
sub
add
out
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
outs
inc
add
or
sbb
add
(bad)
(bad)
jmp
jl
add
sub
add
add
xor
add
and
add
and
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
push
pop
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
and
add
add
push
add
push
add
xor
add
xor
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
push
sbb
add
add
idiv
(bad)
inc
and
add
push
and
add
and
test
add
sub
add
add
xor
add
and
add
(bad)
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
dec
add
mov
add
sub
push
outs
inc
add
or
mov
add
sub
add
add
xor
add
and
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
hlt
adc
add
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
add
xor
add
and
add
add
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
sbb
add
add
idiv
(bad)
jmp
nop
add
add
push
add
push
add
xor
add
and
add
inc
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
dec
add
jo
add
sub
push
and
add
and
xchg
add
add
push
add
push
add
xor
add
and
add
mov
add
sub
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
popa
pop
inc
add
add
idiv
(bad)
inc
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
cwde
add
add
push
add
push
add
xor
add
and
add
xlat
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
sub
sbb
add
add
idiv
(bad)
jmp
pushf
add
add
push
add
push
add
xor
add
and
add
pop
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
sub
add
xor
add
add
add
add
add
sub
add
push
add
sub
add
add
daa
add
push
sub
sbb
add
out
add
add
sub
add
sub
or
dec
adc
add
pop
add
push
and
add
or
add
sub
add
or
add
push
outs
inc
add
or
push
cmp
push
sub
add
or
outs
mov
es
outs
push
add
or
pop
cmp
add
adc
sub
add
or
or
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
adc
push
sub
add
and
pop
add
push
and
adc
add
and
add
and
dec
adc
push
and
add
and
adc
add
pop
add
push
and
adc
add
and
add
adc
push
and
adc
add
push
and
adc
add
and
add
and
add
mov
add
adc
push
and
inc
add
add
idiv
(bad)
call
add
push
and
add
and
add
sub
push
and
adc
add
sub
add
or
dec
adc
push
and
add
and
adc
add
pop
add
push
and
adc
add
and
add
and
push
and
pop
add
push
and
adc
add
and
add
and
add
mov
add
adc
sub
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
adc
sub
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
sub
inc
add
add
add
lea
add
sub
add
mov
add
add
add
add
add
and
add
sub
add
dec
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
mov
push
add
push
sub
add
and
add
add
sub
pop
or
add
push
add
push
adc
push
or
add
or
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
test
add
sub
add
sub
es
lods
add
add
push
add
push
pop
adc
add
mov
mov
add
idiv
(bad)
jmp
add
sbb
add
adc
add
sldt
adc
add
push
or
outs
jb
add
pop
outs
je
add
and
jae
add
pop
outs
push
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
imul
sub
add
and
adc
add
push
and
add
push
and
add
and
es
outs
imul
add
push
and
adc
add
push
and
add
push
and
add
or
sbb
inc
push
add
sub
push
and
add
push
and
add
and
mov
add
or
and
add
sub
add
add
(bad)
(bad)
dec
sub
add
and
inc
add
add
idiv
(bad)
dec
and
push
add
push
sub
add
and
add
sub
push
or
cmp
add
and
and
pop
add
push
and
add
or
push
sub
add
adc
add
add
add
arpl
sub
add
sbb
add
add
add
adc
sub
add
jle
add
add
jle
add
dec
add
or
jg
add
fcom
add
sub
push
and
add
sub
or
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
push
and
add
or
add
sub
push
pop
add
sub
push
or
cmp
add
and
add
and
add
sub
push
and
add
sub
push
or
cmp
add
and
add
sub
add
and
push
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
push
and
mov
add
sub
and
pop
add
push
and
add
or
mov
add
or
dec
add
or
icebp
pop
add
sub
push
and
add
or
or
enter
and
sbb
add
pop
add
push
and
add
or
push
sub
add
add
add
stc
add
add
add
xor
add
add
adc
mov
push
add
push
sub
add
and
add
push
and
add
add
and
add
sub
push
and
add
add
push
add
push
sub
pop
outs
aas
add
or
add
adc
inc
add
or
outs
dec
add
push
or
add
and
add
sub
push
and
add
sub
add
sub
es
inc
add
or
add
add
(bad)
(bad)
call
sub
add
fimul
adc
push
or
add
outs
add
sub
add
add
add
inc
add
add
add
add
adc
add
rol
add
adc
add
add
push
inc
adc
add
add
add
add
add
add
add
jle
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
cmp
jne
add
test
add
sub
push
and
add
and
add
add
xchg
sbb
add
pop
add
push
and
add
sub
add
add
movs
sbb
add
pop
add
push
and
add
sub
add
add
leave
sbb
add
pop
add
push
and
add
and
add
add
(bad)
sbb
add
pop
add
push
and
add
and
add
add
jecxz
add
sub
push
sub
add
or
add
add
repnz
add
pop
add
push
and
add
and
add
add
call
add
sub
push
and
add
and
add
add
push
sbb
add
pop
add
push
and
add
and
add
add
sbb
pop
add
push
and
add
and
add
add
sub
add
sub
push
sub
add
or
add
add
cmp
pop
add
push
and
add
sub
add
add
dec
sbb
add
pop
add
push
sub
add
or
add
add
arpl
add
sub
push
and
add
and
add
add
jle
add
sub
push
and
add
and
add
add
cdq
sbb
add
pop
add
push
sub
add
or
jle
add
or
add
xor
add
add
adc
scas
sbb
add
pop
add
push
and
add
add
xor
add
and
add
add
sub
add
and
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
sbb
add
pop
add
push
and
add
add
xor
add
and
add
jle
add
or
jle
add
add
and
add
sub
push
and
add
and
sbb
add
pop
add
push
pop
mov
add
sub
add
or
add
pop
jle
add
or
dec
add
or
add
sub
add
push
and
aas
add
or
mov
add
inc
add
or
add
outs
dec
add
push
and
add
or
add
sub
push
and
add
or
jle
add
or
dec
add
or
add
jle
add
add
and
add
sub
push
and
push
dec
add
add
add
or
enter
sub
add
sub
es
sbb
add
add
(bad)
(bad)
jmp
int3
sbb
add
pop
add
push
and
add
add
xor
add
and
add
sub
cmp
add
sub
push
and
add
add
xor
add
and
add
sub
add
inc
add
or
aaa
(bad)
(bad)
(bad)
fimul
adc
push
or
add
outs
add
pop
sub
adc
add
add
add
nop
add
add
add
adc
push
add
add
adc
sub
add
and
add
or
add
add
and
add
sub
push
and
push
dec
add
add
add
or
int3
add
add
push
add
push
sub
es
sbb
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
add
xor
add
and
add
sub
and
sbb
add
pop
add
push
pop
mov
add
sub
add
or
mov
add
pop
sub
add
xor
jns
add
adc
sub
or
jle
add
or
dec
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
and
add
add
pop
add
push
and
add
or
add
xor
add
and
add
add
xor
add
and
add
push
jge
add
add
add
add
add
sub
es
sub
add
adc
push
add
add
add
add
adc
sub
or
jle
add
or
dec
add
or
xlat
add
add
add
(bad)
(bad)
call
sub
add
add
add
push
and
sbb
add
pop
add
push
and
add
sub
add
lea
or
aam
add
sub
add
add
xor
add
and
fadd
add
sub
add
add
xor
add
and
fadd
add
sub
add
push
mov
add
mov
add
sub
add
add
add
sub
add
sub
add
push
and
call
push
add
push
sub
add
push
and
add
mov
add
sub
add
jle
add
add
or
push
add
or
lock
add
push
add
push
sub
es
sub
add
xor
add
add
add
add
adc
or
inc
adc
add
add
add
add
add
add
add
aaa
add
add
add
add
pop
add
add
add
je
add
add
add
cdq
add
add
add
add
mov
add
push
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
sub
and
add
push
and
sbb
add
push
sub
cmp
add
push
and
sbb
add
push
and
sbb
add
push
sub
pop
sbb
add
push
and
sbb
add
push
sub
jns
add
sub
push
and
sbb
add
push
and
sbb
add
push
sub
mov
add
sub
push
and
sbb
add
push
and
add
or
add
add
xor
add
add
adc
or
inc
adc
add
add
add
or
add
push
add
add
add
sbb
add
and
add
add
add
add
xor
add
cmp
add
add
add
add
add
push
add
add
add
pop
add
add
pusha
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
or
adc
add
mov
add
adc
test
add
sub
add
and
add
(bad)
and
add
pop
add
push
sub
add
mov
add
sub
add
and
add
push
and
push
add
push
jae
add
or
sub
add
and
add
sub
push
outs
push
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
xchg
add
add
push
add
push
and
push
add
push
pop
jae
add
or
sub
sbb
add
loop
add
pop
add
adc
add
or
add
add
sub
add
pop
inc
add
add
add
add
add
add
add
sbb
add
add
or
adc
pop
add
push
and
sub
add
and
cld
add
add
push
add
push
xor
push
sub
add
or
push
outs
push
add
or
add
push
adc
pop
add
or
add
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
sub
add
xor
sub
add
push
and
add
or
sub
add
or
add
adc
and
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
pop
sub
add
adc
add
add
imul
push
add
add
adc
add
jns
add
sbb
add
add
sub
add
push
or
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
mov
or
add
sub
add
xor
inc
add
add
idiv
(bad)
jmp
push
add
or
outs
push
add
or
add
add
sub
sbb
add
add
(bad)
(bad)
inc
outs
sbb
add
and
push
add
sub
push
sub
add
jo
add
add
xor
or
add
add
add
add
adc
sub
add
push
and
push
add
add
add
add
adc
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
sub
add
and
push
add
or
mov
add
adc
sub
add
or
or
add
sub
add
or
add
cmp
add
and
inc
add
add
idiv
(bad)
inc
adc
add
or
adc
add
sub
add
pop
or
add
pop
add
push
and
add
pop
add
or
add
sub
add
and
add
jle
add
add
pop
add
or
jle
add
add
xchg
sbb
add
add
(bad)
(bad)
call
push
sub
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
fidiv
adc
sbb
add
pop
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
and
push
add
sub
push
sub
adc
add
add
cmp
cmps
jecxz
push
add
add
add
sub
retf
repz
inc
add
add
xor
add
add
adc
sub
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
cld
push
add
sub
push
and
add
and
add
add
adc
add
sub
add
(bad)
fld
add
adc
add
sbb
add
sub
add
and
push
add
sub
push
mov
add
add
push
add
push
outs
pop
add
or
imul
sub
add
xor
inc
add
add
idiv
(bad)
inc
and
add
sub
add
call
add
push
add
push
call
push
and
add
push
and
inc
add
add
idiv
(bad)
(bad)
jle
add
or
and
push
add
sub
push
and
pop
add
or
add
sub
sbb
add
add
add
adc
sbb
add
sub
push
add
cmp
add
and
add
add
xor
and
add
sub
add
or
adc
add
pop
add
or
add
or
and
add
add
push
add
push
jae
add
or
add
or
outs
pusha
add
or
add
or
outs
popa
add
or
xor
add
sub
add
inc
jg
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
add
or
arpl
add
adc
adc
outs
add
or
add
or
add
add
push
add
push
or
push
sub
sbb
add
add
(bad)
(bad)
inc
push
mov
sbb
inc
add
add
idiv
(bad)
jmp
inc
pop
add
sub
push
and
add
fimul
add
pop
adc
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
or
add
or
add
sub
push
outs
add
or
mov
pop
add
push
and
cmp
add
and
add
adc
or
mov
add
sbb
add
add
(bad)
(bad)
call
add
add
pop
add
push
and
add
adc
and
pop
add
sub
push
and
push
add
add
xor
add
and
add
adc
and
add
sub
add
xor
inc
add
add
idiv
(bad)
inc
add
add
add
push
add
push
pop
outs
imul
push
and
pop
add
sub
push
and
cmp
add
and
add
ficomp
adc
and
and
add
pop
add
push
and
xor
add
and
add
fiadd
ficomp
or
jo
add
sub
push
adc
sub
add
or
add
fiadd
push
sub
add
inc
add
add
add
xchg
add
add
add
out
add
or
add
add
add
add
add
mov
add
data16
add
add
add
add
or
add
retf
add
add
add
add
add
add
add
add
add
sub
add
mov
add
sbb
add
xchg
add
sbb
add
pop
add
add
add
add
cmp
add
and
add
push
and
inc
add
add
push
add
push
sub
xchg
and
add
pop
add
push
and
add
or
add
sub
add
and
push
add
or
xchg
add
add
add
or
add
add
push
add
push
or
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
adc
ja
and
add
sub
add
pop
or
add
pop
add
push
and
add
pop
add
or
cmp
add
sub
add
add
pop
add
or
jle
add
add
nop
pop
inc
add
add
idiv
(bad)
call
add
or
(bad)
(bad)
fimul
adc
add
outs
add
and
add
push
add
push
sub
add
add
adc
add
add
cmps
jmp
push
add
add
sbb
add
add
sahf
and
add
pop
add
push
and
add
or
add
sub
add
and
add
or
pop
add
or
add
or
and
and
add
pop
add
push
and
add
pop
and
and
add
pop
add
push
and
add
pop
push
mov
outs
outs
add
or
and
add
sub
add
outs
outs
add
or
outs
jo
add
and
and
add
push
add
push
push
mov
jno
add
ficomp
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
pop
outs
pusha
add
or
add
or
add
or
add
or
add
sub
add
inc
adc
adc
inc
add
add
idiv
(bad)
dec
outs
add
adc
adc
add
sub
push
and
xor
add
and
add
and
add
push
add
push
adc
sub
add
sub
add
add
push
xchg
add
add
mov
adc
add
add
add
add
icebp
add
inc
add
add
xor
outs
add
add
add
adc
add
or
add
add
push
add
push
adc
inc
or
add
jae
add
and
or
ins
add
add
push
add
push
das
sbb
add
idiv
(bad)
call
sub
add
es
pop
outs
je
add
and
and
add
sub
add
pop
adc
add
outs
jne
add
and
outs
sbb
add
sub
adc
add
add
add
adc
inc
and
add
pop
add
push
and
add
or
add
jle
add
add
sub
add
or
add
sub
add
sub
or
jge
add
sub
push
push
sub
add
or
add
push
sub
add
or
add
les
add
sub
push
sub
add
or
add
sub
add
outs
jbe
add
and
jl
add
sub
add
xor
push
pop
add
add
or
add
add
push
add
push
pop
outs
imul
sub
add
or
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jmp
add
sub
add
and
adc
add
ja
add
pop
add
adc
aas
add
push
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
and
add
pop
add
push
sub
adc
add
pop
add
push
and
add
sub
add
sub
add
or
mov
push
add
push
sub
add
push
sub
add
add
(bad)
(bad)
jmp
movs
add
add
push
add
push
sub
test
add
sub
add
sub
adc
add
pop
add
add
add
and
and
add
pop
add
push
and
add
or
add
and
add
sub
push
add
cmp
add
and
add
and
pop
add
push
add
cmp
add
or
add
add
and
add
push
sub
sub
add
xor
add
add
and
add
and
push
add
push
sub
add
and
js
add
or
adc
add
jns
add
and
pop
add
push
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
sldt
sbb
add
or
sub
add
adc
add
add
add
dec
add
add
add
adc
push
add
add
adc
add
add
fbld
add
sub
push
jle
add
add
xchg
sbb
add
pop
add
push
and
add
and
adc
add
pop
add
push
and
add
and
adc
add
pop
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
outs
inc
add
or
add
sub
push
and
add
sub
sbb
add
(bad)
(bad)
jmp
mov
add
sub
add
sub
mov
push
add
push
sub
add
xor
add
add
add
add
add
adc
add
inc
add
push
add
dec
add
push
add
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
repnz
add
pop
add
push
and
add
and
add
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
je
add
add
add
add
add
add
add
add
add
repnz
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
repnz
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
and
add
pop
add
push
and
add
or
add
cmp
add
and
adc
add
add
add
adc
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
or
sub
add
and
add
or
push
sub
xor
sub
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
jle
add
add
sub
add
sub
xor
add
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
sub
add
xor
add
add
add
add
add
add
add
sub
sub
add
xor
add
add
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
sub
je
add
xchg
pop
inc
pop
sub
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
or
inc
add
add
idiv
(bad)
jmp
jle
add
add
add
push
sub
add
add
xor
add
add
add
add
add
add
add
push
and
add
push
and
add
push
and
add
sub
add
or
adc
add
add
add
and
add
pop
add
push
and
add
add
sbb
add
stc
add
add
add
adc
add
or
add
jns
add
sbb
add
(bad)
(bad)
call
sub
add
sub
or
outs
test
add
and
adc
sub
es
cmc
and
add
pop
add
push
and
add
push
and
add
sub
push
add
push
or
add
or
pop
sub
rcr
add
add
pop
(bad)
push
adc
add
outs
add
sub
add
push
adc
add
aas
add
or
cmp
or
inc
add
or
cmc
and
add
pop
add
push
adc
push
and
add
sub
jae
add
push
adc
push
adc
outs
xchg
add
adc
sub
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
push
sub
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
sbb
add
dec
add
add
add
adc
inc
add
push
add
inc
add
push
and
add
sub
push
and
add
and
cli
add
push
and
or
jg
add
sub
push
and
add
or
cmp
add
and
add
fiadd
sub
add
add
add
add
sub
add
add
xor
add
add
adc
hlt
add
add
pop
add
push
sub
jae
add
or
jle
add
add
sub
add
and
add
cmp
add
and
add
call
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
jbe
add
pop
add
jo
call
or
and
add
and
inc
add
add
idiv
(bad)
dec
sub
add
or
add
and
add
add
pop
add
push
and
add
or
add
push
jae
add
or
fisubr
or
add
push
add
push
and
pop
add
push
and
add
or
add
sub
add
sub
adc
add
add
add
add
add
xor
add
add
adc
add
add
push
sbb
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
and
add
or
add
or
push
sub
xor
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
push
or
add
add
xchg
and
sub
add
xchg
or
pop
pop
dec
add
cmp
ja
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
idiv
(bad)
(bad)
jle
add
or
sub
es
add
add
push
outs
jge
add
and
mov
add
sub
add
add
pop
add
add
add
add
add
or
jle
add
add
leave
add
sub
push
and
add
cmp
add
and
add
jae
add
or
jle
add
add
leave
add
sub
push
and
add
cmp
add
and
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
adc
add
add
rol
add
push
add
push
and
add
add
push
add
push
and
add
add
push
add
push
and
add
add
push
add
push
jae
add
or
sub
outs
mov
add
and
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
add
and
add
or
add
add
push
add
push
sub
add
or
add
add
add
add
lea
add
outs
mov
add
and
add
add
push
add
push
xor
lea
add
and
add
and
add
and
add
sub
add
xor
sub
outs
pop
add
and
add
and
add
sub
add
inc
sub
in
add
sub
add
sub
xor
add
add
add
add
sub
outs
mov
add
and
add
sub
add
xor
lea
add
and
add
and
add
and
add
sub
add
xor
sub
pop
add
and
add
and
add
sub
add
inc
sub
hlt
add
add
push
add
push
sub
add
xor
add
add
adc
clc
add
add
push
add
push
or
cld
add
add
push
add
push
or
add
add
loope
add
sub
push
and
add
add
push
add
push
sub
es
imul
and
add
pop
add
push
and
add
sub
add
sub
es
push
and
bound
add
adc
push
adc
or
jp
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
popa
add
add
add
add
loope
add
sub
push
and
add
sub
push
and
add
sub
add
sub
pop
adc
sub
sbb
add
(bad)
(bad)
call
pop
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
or
add
sub
add
xor
and
add
add
push
add
push
or
mov
add
and
add
sub
add
adc
and
add
add
push
add
push
adc
jle
add
add
sahf
and
add
pop
add
push
and
add
sub
add
sub
scas
add
add
inc
add
add
idiv
(bad)
call
add
add
add
idiv
(bad)
call
add
push
and
and
add
push
and
inc
and
add
push
and
imul
and
add
pop
add
push
and
and
add
sub
add
sub
adc
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
and
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
adc
jle
add
add
mov
add
push
and
add
sub
add
sub
jg
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
mov
add
push
and
add
sub
push
and
add
sub
add
sub
pop
adc
sub
adc
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
xor
add
sub
add
xor
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
adc
adc
sub
add
add
(bad)
(bad)
call
or
adc
sub
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
or
test
add
push
cmp
add
add
or
call
inc
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
or
into
add
add
cmp
add
add
idiv
(bad)
dec
cmp
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
adc
and
add
sub
add
adc
imul
and
add
push
and
add
sub
add
sub
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
repz
add
push
and
add
sub
push
and
add
sub
add
sub
adc
sbb
add
add
(bad)
(bad)
call
or
jo
xchg
add
or
or
add
push
add
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
push
add
push
adc
jle
add
add
outs
add
sub
push
and
add
sub
add
sub
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
add
sub
push
and
add
sub
push
and
add
sub
add
sub
adc
adc
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
or
add
add
add
push
add
push
xor
push
push
add
push
adc
or
sbb
add
add
(bad)
(bad)
call
or
sbb
add
add
(bad)
(bad)
jmp
ins
add
add
push
add
push
or
jo
add
sub
add
or
sbb
and
add
push
add
push
inc
or
and
add
sub
add
inc
or
add
fiadd
push
sub
add
add
(bad)
(bad)
inc
and
add
push
add
push
inc
sub
add
add
push
add
push
sub
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
add
add
and
add
sub
push
and
add
or
add
sub
push
and
add
cmp
add
sub
push
and
add
dec
daa
add
sub
push
and
add
push
daa
add
sub
push
cmp
add
push
daa
add
sub
push
and
add
pop
add
jo
add
add
push
daa
add
sub
push
and
add
imul
add
pop
add
push
add
daa
add
sub
push
and
add
int
add
sub
push
and
add
cmp
add
sub
push
and
add
xchg
add
sub
push
and
add
enter
sub
push
add
sub
add
pop
add
push
and
add
cmp
add
sub
push
and
add
jnp
add
sub
push
and
add
mov
add
sub
push
or
xor
add
add
add
add
add
sub
jb
add
jo
xchg
add
add
jb
add
jo
xchg
add
add
jb
add
jo
xchg
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
jnp
add
add
add
and
pop
add
push
and
add
loopne
add
sub
push
sub
add
or
and
add
add
push
sub
add
or
add
sub
add
sub
push
and
add
dec
cmp
add
pop
add
push
or
add
add
push
adc
add
add
push
adc
add
or
das
add
add
add
add
jnp
add
add
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jb
add
add
add
add
add
xor
add
add
add
add
add
add
add
jle
add
dec
add
or
add
push
and
sub
add
pop
add
push
and
add
sub
or
add
add
or
push
add
add
add
add
sub
add
and
add
sub
add
xor
add
add
add
jnp
add
add
jne
add
sub
add
add
(bad)
(bad)
call
sub
add
add
jb
add
add
add
add
add
add
xor
add
add
add
add
add
call
add
and
add
push
sub
add
or
add
or
or
add
add
cld
sub
add
pop
add
push
and
add
xor
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
sub
push
and
add
sub
push
and
add
and
sub
add
pop
add
push
and
add
or
add
add
jae
add
or
add
add
add
fiadd
add
add
add
add
adc
add
add
push
ins
add
inc
add
add
xor
add
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
ja
add
add
add
add
add
or
inc
add
add
add
add
sub
add
and
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
sub
mov
add
sub
add
sub
add
xor
in
add
add
add
adc
jnp
add
add
sub
idiv
(bad)
call
sub
add
add
add
add
imul
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
add
imul
add
add
push
add
push
sub
or
jae
add
or
push
and
push
add
push
push
xchg
add
add
push
add
push
outs
xchg
add
or
xchg
add
or
cwde
add
add
push
add
push
push
pushf
add
add
push
add
push
outs
xchg
add
or
or
add
or
add
or
sub
pop
outs
add
fisub
inc
add
add
idiv
(bad)
inc
outs
add
and
pop
add
push
and
add
add
add
add
add
add
add
push
mov
or
add
add
add
imul
add
add
add
arpl
add
add
add
add
add
add
xchg
add
add
sub
add
and
sub
add
pop
add
push
add
imul
sub
add
or
add
and
sub
add
pop
add
push
and
add
push
and
add
sub
add
or
add
add
sub
add
and
add
add
xor
add
add
add
add
adc
sub
add
sub
push
and
add
add
imul
add
or
sub
add
pop
add
push
push
sub
add
or
add
push
sub
add
sub
add
add
(bad)
(bad)
call
sub
add
es
sub
add
pop
add
push
and
add
or
mov
add
sub
and
sub
add
pop
add
push
and
add
and
sub
add
pop
add
push
and
mov
add
sub
add
or
add
pop
adc
and
push
add
push
adc
sub
pop
adc
call
or
sub
add
sub
es
sbb
add
add
idiv
(bad)
jmp
bound
add
pop
add
push
or
ja
add
sub
push
and
add
push
and
add
and
add
or
dec
add
or
sub
add
adc
and
add
push
pop
adc
adc
adc
mov
mov
add
(bad)
(bad)
inc
sub
adc
add
or
test
add
sub
add
adc
sub
or
or
add
add
add
jnp
add
and
inc
add
add
idiv
(bad)
call
add
add
pop
add
push
sub
push
adc
mov
lods
add
add
push
add
push
xor
sbb
add
(bad)
(bad)
call
add
add
push
add
push
sub
add
adc
and
add
push
pop
adc
adc
adc
mov
mov
add
or
sbb
add
add
add
add
imul
add
or
add
push
and
add
sub
add
or
and
add
add
add
add
sub
add
and
add
sub
push
and
add
and
add
and
add
add
add
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jns
add
sub
add
sub
add
sub
retf
add
pop
add
push
and
add
add
sub
add
and
sub
add
pop
add
push
push
sub
add
or
mov
add
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
push
and
add
push
sub
sub
add
or
add
and
add
sub
push
and
add
and
add
or
pop
outs
mov
and
pop
add
push
and
add
push
push
sub
or
add
or
mov
push
add
push
outs
mov
and
add
add
push
add
push
outs
mov
movs
add
or
add
or
outs
cmps
add
or
cmps
add
or
and
pop
add
push
sub
or
add
add
dec
add
or
add
sbb
add
(bad)
(bad)
call
add
test
add
and
add
jne
add
add
add
sbb
add
add
(bad)
(bad)
jmp
(bad)
sub
add
push
and
add
or
add
and
add
add
push
add
push
adc
fstp
add
add
add
add
pop
add
push
and
add
push
and
add
outs
pop
add
push
adc
add
add
push
add
push
sub
add
push
sub
adc
add
sub
push
and
add
sub
and
add
sub
push
and
add
or
add
and
add
add
push
add
push
adc
fisubr
(bad)
add
sub
push
and
add
and
add
add
push
add
push
adc
fimul
and
add
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
es
and
das
add
sub
push
and
add
and
add
add
push
add
push
sub
pop
sub
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
add
fadd
add
sub
add
sub
or
dec
das
add
sub
push
and
add
or
add
push
sub
add
or
add
push
sub
or
pop
and
pop
add
push
and
add
and
add
nop
das
add
sub
push
and
add
add
cmp
add
and
add
add
and
das
add
sub
push
outs
push
add
or
add
fisubr
add
sub
push
and
add
add
and
add
sub
push
add
add
add
pop
add
or
add
add
add
add
xor
add
sub
push
and
add
or
and
add
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
and
add
add
push
add
push
pop
outs
imul
or
add
and
inc
add
add
idiv
(bad)
inc
or
add
or
add
add
and
add
xor
pop
add
push
and
sbb
add
sub
add
or
add
fiadd
add
jnp
add
add
and
add
sub
push
and
add
add
add
or
add
add
add
adc
add
add
add
add
inc
add
add
xor
push
add
add
add
adc
call
push
add
push
or
sub
add
and
add
and
add
add
push
add
push
or
or
xor
add
pop
add
push
and
add
or
add
and
add
and
add
add
push
add
push
or
add
sub
add
add
add
add
or
sbb
add
adc
add
push
add
add
add
and
add
add
push
add
push
or
jnp
add
sub
push
and
add
add
imul
sub
or
mov
pop
add
push
and
add
or
add
jae
add
push
or
pop
outs
mov
add
add
add
add
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
ja
add
or
jnp
add
add
clc
add
add
push
add
push
outs
popf
add
push
or
add
push
and
xor
add
pop
add
push
and
add
or
add
or
add
push
and
inc
add
add
idiv
(bad)
inc
sub
sbb
add
add
(bad)
(bad)
jmp
lock
add
pop
add
push
and
add
add
sbb
add
and
add
sub
jnp
add
add
xchg
add
add
cld
add
add
push
add
push
sub
add
add
push
add
push
sub
add
xor
add
sub
push
or
and
pop
add
push
sub
xor
add
pop
add
push
push
sub
add
or
add
jle
add
or
push
or
and
add
sub
add
outs
jae
add
and
add
sub
add
xor
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
outs
jae
add
and
add
and
and
add
add
push
add
push
outs
jae
add
and
add
and
add
push
and
add
sub
add
outs
imul
add
or
xor
add
pop
add
push
and
add
or
mov
add
sub
or
add
or
add
or
sub
adc
add
sbb
add
push
add
push
and
add
sub
add
sub
es
xor
add
pop
add
push
jle
add
or
add
or
div
add
sub
push
and
cmp
add
and
add
adc
add
add
push
add
push
adc
sub
adc
outs
jae
add
and
jle
add
add
pop
add
push
outs
xor
add
and
add
and
add
sub
add
or
and
add
sub
add
pop
adc
adc
adc
outs
jne
add
xor
add
idiv
(bad)
jmp
xor
add
sub
push
and
add
or
mov
add
fidiv
adc
and
add
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
es
pop
sub
add
add
add
add
xor
add
lea
add
rol
add
add
add
add
add
push
add
add
add
add
add
enter
sub
push
and
add
jle
add
add
sub
push
and
xor
add
pop
add
push
and
add
push
and
add
sub
add
sub
es
pop
inc
add
add
idiv
(bad)
call
sub
add
es
xor
add
pop
add
push
and
add
jle
add
add
sub
push
and
add
sub
push
and
add
push
and
add
and
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
push
and
add
push
and
add
sub
add
or
add
sub
xor
add
or
add
add
adc
sbb
add
push
adc
and
add
sub
push
sub
add
push
and
and
pop
add
push
and
add
into
xor
add
pop
add
push
or
ins
xor
add
pop
add
push
and
add
add
push
add
push
sub
add
or
cmp
add
push
and
add
and
add
add
push
add
push
sub
add
or
add
sub
push
sub
or
adc
add
push
add
push
adc
jle
add
add
push
sub
es
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
push
sub
or
or
sbb
inc
add
add
push
add
push
adc
add
sbb
sbb
jle
add
add
and
and
add
pop
add
push
and
add
or
add
sub
push
sub
and
add
push
add
push
outs
mov
add
and
inc
add
add
idiv
(bad)
call
or
add
add
pop
add
push
and
cmp
add
and
add
sub
or
push
sub
es
sbb
add
add
(bad)
(bad)
call
push
adc
xor
push
adc
adc
add
push
add
push
pop
adc
mov
push
(bad)
(bad)
call
add
(bad)
(bad)
call
add
or
add
add
add
(bad)
(bad)
call
pop
and
add
push
add
push
pop
adc
adc
sub
add
add
sub
push
and
add
or
shl
add
push
and
cmp
add
sub
add
add
and
add
sub
push
and
add
sub
add
push
sub
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
add
pop
add
push
and
add
sub
add
push
sub
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
sub
push
and
add
sub
push
and
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
pop
add
push
and
xchg
add
push
cmp
add
add
add
add
and
add
pop
add
push
and
add
sub
push
and
add
push
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
pop
add
push
and
xchg
add
push
and
add
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
pop
add
push
and
add
sub
push
and
add
push
and
add
jle
add
add
and
pop
add
push
and
add
sub
push
and
add
push
and
imul
shl
add
pop
add
push
and
add
sub
add
push
sub
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
sub
push
and
add
sub
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
fdiv
add
sub
push
adc
or
add
add
ins
add
push
and
imul
push
sub
or
add
add
push
add
push
adc
adc
adc
and
add
push
add
push
adc
cmp
pop
adc
call
add
and
add
or
or
sub
sub
add
and
inc
add
add
idiv
(bad)
call
or
add
add
pop
add
push
and
cmp
add
and
add
sub
or
push
sub
es
pop
inc
add
add
idiv
(bad)
call
push
adc
xor
push
adc
adc
and
add
sub
add
pop
adc
adc
adc
mov
jb
(bad)
call
inc
add
add
idiv
(bad)
call
add
or
inc
add
add
idiv
(bad)
call
pop
and
add
push
add
push
pop
adc
adc
sub
add
add
pop
add
push
and
cmp
add
and
add
jle
add
add
or
add
add
and
add
push
and
mov
add
sub
push
and
add
push
sub
sub
add
push
sub
add
add
(bad)
(bad)
dec
outs
mov
add
and
aaa
add
sub
push
and
add
sub
push
outs
and
add
and
outs
mov
add
and
aaa
add
sub
push
and
aaa
add
sub
push
and
add
adc
sub
es
dec
add
or
add
sbb
add
add
(bad)
(bad)
jmp
jo
add
sub
add
adc
add
or
mov
add
and
add
adc
adc
jle
add
add
sbb
add
(bad)
(bad)
call
push
jge
add
jae
add
or
jle
add
add
mov
adc
adc
and
add
push
add
push
xor
adc
and
aaa
add
sub
push
and
add
adc
adc
jnp
add
add
sub
add
or
add
and
add
sub
add
adc
add
push
adc
adc
sub
push
push
add
push
jae
add
or
sbb
sbb
add
or
adc
jl
add
sub
add
xor
inc
add
add
idiv
(bad)
jmp
stc
aaa
add
sub
push
and
add
adc
adc
and
push
add
push
pop
adc
jnp
add
add
sub
add
or
add
or
test
add
push
add
push
adc
adc
outs
mov
outs
inc
add
or
add
add
(bad)
(bad)
jmp
pusha
cmp
add
pop
add
push
and
add
adc
and
and
adc
outs
mov
es
sub
add
or
add
and
push
add
push
adc
jle
add
add
adc
push
jle
add
jae
add
or
jle
add
add
mov
adc
adc
mov
add
push
add
push
xor
inc
add
add
idiv
(bad)
jmp
fistp
add
sub
push
and
add
adc
adc
and
push
add
push
pop
and
add
sub
push
and
add
and
add
push
adc
add
add
add
(bad)
(bad)
call
add
push
outs
mov
mov
add
and
add
cmp
cwde
add
add
push
add
push
(bad)
fld
add
adc
and
pushf
add
add
push
add
push
and
aaa
add
sub
push
and
and
push
add
push
adc
jnp
add
add
sub
add
or
and
add
push
and
add
sub
push
mov
adc
adc
mov
add
sub
aaa
cmp
add
pop
add
push
and
add
or
pop
cmp
add
pop
add
push
sub
or
add
sub
add
and
add
push
jae
add
or
adc
adc
mov
add
and
add
adc
adc
mov
add
and
add
adc
add
or
add
sub
add
push
cmp
inc
add
add
idiv
(bad)
call
adc
add
ret
add
or
adc
add
ret
add
or
ja
add
sub
push
and
add
cmp
adc
xchg
add
or
add
add
xor
add
idiv
(bad)
call
adc
xchg
add
or
add
sbb
inc
add
add
idiv
(bad)
jmp
test
add
sub
push
sub
and
cmp
add
pop
add
push
and
add
sub
adc
adc
add
or
les
add
and
add
or
add
adc
and
add
sub
push
and
cmp
add
and
add
adc
and
add
push
lea
add
add
and
add
add
push
add
push
and
add
push
popf
adc
add
push
add
push
and
add
add
push
add
push
popf
adc
add
push
add
push
outs
lds
add
adc
adc
adc
and
add
add
push
add
push
adc
cmp
adc
call
ins
add
push
and
add
sub
add
outs
jbe
add
and
add
sub
add
cs
sbb
add
add
(bad)
(bad)
call
sbb
sub
add
and
add
add
push
add
push
outs
jbe
add
and
add
sub
add
cs
arpl
add
sub
push
sub
add
add
daa
and
add
add
push
add
push
pop
adc
adc
adc
mov
jne
(bad)
call
inc
add
add
idiv
(bad)
jmp
mov
add
and
add
push
and
add
add
push
add
push
mov
add
add
xor
add
outs
imul
or
adc
or
add
sub
push
add
ins
add
push
and
pop
add
or
add
and
add
adc
add
push
add
push
outs
ret
add
or
adc
add
push
add
push
outs
mov
adc
mov
ret
add
or
adc
add
push
add
push
outs
mov
adc
outs
mov
or
adc
add
push
add
push
outs
mov
cmp
add
pop
add
push
and
add
fimul
adc
adc
outs
add
sub
add
inc
sbb
add
add
add
add
add
add
add
or
add
add
add
add
or
sbb
add
add
and
aaa
add
sub
push
and
add
sub
add
outs
mov
add
sub
add
add
or
pop
add
add
add
add
and
cmp
add
pop
add
push
and
add
sub
add
outs
cmp
sub
add
or
cmp
add
add
add
pop
outs
sub
push
sbb
push
add
sub
add
sbb
push
add
sub
add
sbb
add
sub
push
and
add
sbb
push
add
add
add
add
adc
jle
add
or
enter
or
add
add
adc
add
or
add
or
jae
add
or
add
or
pop
outs
mov
or
add
add
adc
add
adc
or
add
sub
add
adc
adc
add
push
add
push
pushf
adc
add
push
add
push
pop
adc
add
add
fstp
inc
add
add
idiv
(bad)
call
sub
add
and
add
add
push
adc
and
add
push
adc
sub
add
push
add
pop
outs
jae
add
and
push
xchg
popa
rcr
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
(bad)
(bad)
jmp
and
add
sub
add
adc
adc
and
add
add
push
pop
adc
adc
add
add
or
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
adc
and
add
add
push
adc
sub
outs
push
add
or
sub
add
or
or
xor
add
sub
add
adc
cmp
or
or
add
or
adc
or
popf
add
add
or
add
or
or
or
adc
xchg
popa
rcl
or
adc
int3
add
or
or
cmp
add
push
pop
adc
adc
jle
add
add
jne
add
and
cmp
add
sub
add
adc
adc
and
add
sub
add
pop
adc
adc
jle
add
add
or
inc
add
add
push
adc
adc
and
add
sub
add
pop
adc
adc
adc
outs
jne
add
aas
(bad)
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
jle
add
add
adc
add
adc
add
push
add
push
adc
sub
adc
add
add
push
pushf
adc
and
add
push
add
push
pop
adc
adc
jle
add
add
fldenv
pop
add
add
push
adc
or
add
or
pop
add
add
push
adc
sub
or
adc
xchg
adc
rcr
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
fs
add
push
adc
adc
and
add
sub
add
pop
adc
adc
push
outs
ret
or
inc
add
add
idiv
(bad)
dec
adc
or
outs
into
add
or
or
add
or
add
and
and
add
push
add
push
adc
fimul
and
add
sub
add
sub
adc
add
add
add
add
pop
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
jae
add
or
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
pushf
add
add
je
add
sub
add
pop
pop
das
or
js
add
sub
add
sub
and
add
pop
add
push
and
add
sub
push
and
add
and
add
sub
or
sub
jle
add
add
imul
or
add
add
adc
add
or
pushf
add
add
adc
add
or
add
adc
add
adc
jl
add
sub
add
adc
add
add
push
add
push
pushf
adc
add
add
push
add
push
pushf
adc
add
push
add
push
pop
adc
add
add
retf
and
add
push
adc
and
push
add
push
adc
sub
add
push
push
adc
xchg
adc
push
xchg
popa
rcr
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
(bad)
(bad)
jmp
cwde
add
add
push
adc
adc
and
add
push
pop
adc
adc
push
mov
pushf
add
add
xor
add
push
add
push
adc
and
add
push
adc
sub
push
push
mov
pushf
add
add
adc
pop
xchg
adc
or
add
add
idiv
(bad)
jmp
test
add
sub
add
adc
adc
and
add
push
pop
adc
adc
jle
add
add
mov
add
idiv
(bad)
call
or
add
idiv
(bad)
jmp
mov
add
sub
add
sub
mov
add
sub
add
adc
and
push
add
push
adc
jle
add
add
or
pop
add
push
adc
adc
or
adc
popa
rcl
or
fwait
add
add
adc
mov
push
add
push
pop
adc
adc
pop
mov
push
sbb
add
(bad)
(bad)
jmp
rol
add
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
pop
inc
add
add
idiv
(bad)
jmp
enter
sub
add
adc
adc
int3
add
add
push
pop
adc
or
pushf
add
add
fwait
add
add
aas
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
rol
add
push
adc
and
add
add
push
lea
add
add
lsl
add
or
fwait
add
add
pushf
add
add
adc
cmp
add
add
adc
xchg
adc
adc
push
adc
xchg
popa
rcl
adc
adc
adc
xchg
popa
rcl
adc
adc
adc
or
push
xchg
popa
rcr
add
sub
add
adc
pushf
add
mov
add
adc
outs
push
add
or
add
and
and
add
add
push
pop
adc
adc
pop
mov
push
sbb
add
add
(bad)
(bad)
jmp
loopne
add
sub
add
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
pop
inc
add
add
idiv
(bad)
jmp
call
push
add
push
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
or
lock
add
push
adc
adc
and
add
add
push
pop
adc
adc
push
mov
pushf
add
add
aas
push
(bad)
(bad)
jmp
clc
add
add
push
adc
sub
or
adc
cs
sbb
add
add
(bad)
(bad)
jmp
cld
add
add
push
adc
adc
and
push
add
sub
add
pop
adc
adc
jle
add
add
enter
add
add
(bad)
(bad)
call
or
and
add
sub
add
sub
or
add
sub
add
sub
add
xor
add
add
add
add
adc
mov
and
(bad)
(bad)
jg
lahf
add
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
adc
outs
xor
add
or
pop
sub
xor
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
add
and
add
sbb
add
mov
add
xor
add
add
add
or
mov
push
or
push
das
or
jb
add
jo
push
pop
push
das
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
addps
push
pop
outs
jae
add
and
and
add
(bad)
(bad)
inc
pop
outs
jae
add
and
prefetchnta
add
add
(bad)
(bad)
call
add
pop
adc
add
or
add
add
sub
add
or
add
and
add
rol
add
adc
add
add
adc
adc
add
add
add
add
add
xor
add
add
add
add
adc
add
add
or
aam
add
pop
popa
push
sub
es
pop
pop
sub
add
or
push
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
xor
add
add
xchg
add
and
es
popa
push
sub
es
add
sub
adc
add
add
add
or
psrlw
add
adc
pop
add
add
add
add
add
adc
pop
or
or
add
and
pop
or
sbb
out
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
ror
jecxz
add
pop
inc
add
add
idiv
(bad)
push
add
or
add
lea
add
add
add
push
outs
fadd
add
and
adc
or
lea
add
add
push
add
push
push
push
outs
fadd
add
and
pop
adc
adc
and
adc
or
or
pop
inc
add
add
idiv
(bad)
call
adc
sub
adc
pop
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
call
pop
sub
pop
inc
add
add
idiv
(bad)
jmp
sub
add
and
add
adc
adc
push
outs
fiadd
add
jle
add
add
cmp
add
(bad)
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
adc
add
add
outs
ret
or
fild
add
sub
jle
add
add
lahf
add
add
fild
add
jle
add
add
push
fadd
add
adc
fld
add
and
or
add
or
or
add
or
outs
fild
add
and
add
adc
adc
outs
fiadd
add
and
add
adc
outs
les
add
and
sub
adc
outs
fadd
add
adc
adc
adc
adc
push
outs
loopne
add
and
mov
or
adc
outs
jno
add
adc
or
pop
push
outs
ret
or
mov
add
idiv
(bad)
inc
adc
add
add
or
pop
imul
es
adc
add
add
or
pop
imul
movd
movhps
jle
add
jle
add
add
push
push
push
fadd
add
jle
add
add
or
pop
cmp
add
add
idiv
(bad)
(bad)
jle
add
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
add
add
outs
ret
or
outs
fild
add
sub
jle
add
add
mov
fild
add
jle
add
add
push
fadd
add
push
push
jae
add
or
adc
call
adc
adc
adc
adc
adc
push
adc
outs
fadd
add
and
adc
xor
jle
add
add
adc
adc
outs
jno
add
adc
adc
das
(bad)
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
outs
iret
add
or
ret
or
outs
les
add
and
adc
add
adc
adc
adc
imul
es
add
add
xor
add
add
xor
sub
jb
add
jo
movs
add
add
adc
movs
add
add
jae
add
or
add
add
and
add
jae
add
or
add
push
call
add
or
jnp
add
add
outs
out
add
add
add
add
outs
out
add
add
add
add
outs
call
jnp
add
add
jo
add
sub
add
outs
jmp
add
or
push
add
add
add
add
sub
dec
add
or
add
or
add
add
add
add
sub
add
add
or
push
add
add
add
add
jnp
add
add
adc
add
sub
add
outs
jmp
add
or
push
add
add
add
add
jnp
add
add
jmp
add
and
add
or
sub
add
add
add
add
lea
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
adc
add
add
add
in
add
or
add
add
add
or
jb
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
sub
add
xor
add
add
idiv
(bad)
jmp
lea
add
sub
push
add
xchg
add
push
and
add
and
add
add
jge
add
add
sub
es
sbb
add
(bad)
(bad)
inc
outs
xchg
add
push
and
add
xor
add
add
add
add
add
jnp
add
add
in
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
pop
add
add
add
add
adc
add
add
add
adc
mov
add
sub
push
and
add
push
and
add
and
add
and
add
sub
add
or
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
xchg
add
push
and
add
and
add
xchg
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
or
sub
sbb
add
add
idiv
(bad)
inc
outs
xchg
add
push
sub
xor
add
add
adc
and
add
sub
add
or
sub
add
xchg
add
push
and
add
and
loope
add
sub
push
add
xchg
add
push
and
add
and
add
push
sub
sub
push
add
sub
add
sub
add
add
or
xchg
add
push
and
or
add
pop
add
push
and
add
push
and
add
sub
push
and
add
or
pop
add
or
mov
add
and
add
sub
add
or
add
sub
sub
add
add
add
dec
add
add
adc
add
add
add
adc
sub
or
sub
add
and
xor
pop
add
push
and
add
or
mov
add
push
sub
es
push
add
sub
add
or
push
add
cdq
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
pop
add
push
and
add
or
add
pop
and
add
sub
add
pop
or
cmp
add
sub
add
sub
add
pop
and
add
sub
add
xor
add
idiv
(bad)
inc
sub
es
pop
inc
add
add
idiv
(bad)
jmp
xchg
cmp
add
pop
add
push
and
add
or
add
add
add
xchg
add
push
sub
and
cmp
add
pop
add
push
add
cmp
add
and
add
add
sub
out
add
or
sub
add
or
add
xchg
add
push
and
add
sub
xor
pushf
add
add
add
adc
sub
or
out
add
or
sub
add
or
add
and
add
or
sub
add
or
dec
add
or
stc
cmp
add
pop
add
push
pop
sub
add
or
add
pop
add
out
add
or
push
cmp
add
push
and
add
or
add
add
sub
add
or
add
lock
or
sub
add
push
and
add
sub
push
and
add
or
add
sub
xor
add
add
add
add
add
mov
add
add
cdq
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
add
xchg
add
push
and
add
and
add
add
xchg
add
push
and
add
sub
sub
sub
add
sub
add
sbb
add
add
add
adc
add
xchg
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
xchg
add
push
and
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
outs
repnz
or
and
add
push
add
push
or
and
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
repz
or
and
add
sub
add
sub
sub
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
hlt
add
or
add
push
and
add
sub
sbb
add
(bad)
(bad)
call
sub
add
es
hlt
add
or
add
push
and
add
sub
xor
mov
add
adc
add
or
push
push
add
sub
add
sub
sub
add
push
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
mov
mov
adc
add
idiv
(bad)
jmp
pop
push
add
sub
add
sub
pusha
push
add
sub
add
or
sub
push
xchg
add
xchg
cs
add
idiv
(bad)
jmp
fs
add
sub
add
sub
and
add
sub
add
pop
or
add
inc
add
add
idiv
(bad)
jmp
ins
push
add
sub
add
sub
add
xor
add
add
add
add
add
sub
jb
add
jo
cmps
add
add
add
add
or
sldt
add
add
add
add
add
add
add
test
add
add
xor
mov
add
cmp
add
and
add
push
add
push
or
jnp
add
add
cmc
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
jnp
add
add
add
push
or
sub
jnp
add
add
jnp
add
add
add
aaa
add
push
and
jnp
add
add
sub
or
add
pop
sub
sub
adc
inc
add
add
idiv
(bad)
inc
outs
xchg
add
push
and
or
add
pop
add
push
and
add
or
add
and
add
sub
add
or
add
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
and
pop
add
push
and
add
and
add
jae
add
pop
add
adc
mov
es
and
cmp
add
push
and
add
and
pop
add
push
and
add
sub
add
sub
add
and
push
add
sub
add
sub
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
sub
mov
add
sub
add
sub
adc
add
popa
add
add
add
adc
add
add
inc
add
add
pop
add
push
and
add
call
and
cmp
add
push
push
sub
add
or
add
jae
add
or
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
jae
add
or
pop
sub
add
adc
add
je
add
and
mov
or
and
add
sub
push
jae
add
or
add
or
mov
add
sub
add
xor
sbb
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
and
push
add
push
sub
xchg
add
sub
push
and
add
and
add
push
sub
xor
add
add
cmp
add
and
add
sub
push
and
add
sub
outs
inc
add
or
adc
sub
add
or
outs
mov
add
dec
add
or
add
add
(bad)
(bad)
call
sub
add
fimul
adc
(bad)
push
or
add
sub
add
add
add
add
and
cs
add
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
call
push
add
push
(bad)
fld
add
adc
add
in
sbb
add
push
add
push
and
pop
add
push
and
or
sub
or
adc
add
push
add
push
adc
sub
add
pop
or
hlt
sbb
add
push
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sbb
add
push
add
push
sub
add
sub
add
or
and
sbb
add
push
add
push
pop
adc
adc
adc
and
add
sub
add
sub
sub
add
adc
add
add
add
adc
or
add
sub
add
jae
add
or
add
push
outs
stc
add
or
add
and
sbb
add
and
xor
add
add
add
add
sub
es
and
pop
add
push
and
stos
add
sub
push
and
add
or
add
jp
add
add
xor
add
add
adc
sti
add
or
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
adc
fucomp
add
add
das
jno
add
pop
add
push
sub
push
and
lods
add
sub
push
and
add
or
sub
sbb
add
add
idiv
(bad)
inc
outs
fld
add
sub
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
adc
fstp
test
and
add
sub
add
and
sbb
add
push
add
push
or
test
add
and
cld
add
or
std
add
or
add
sbb
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
add
dec
sbb
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
add
add
add
idiv
(bad)
jmp
and
add
sub
add
adc
(bad)
add
add
or
sub
es
and
add
sub
add
adc
and
sbb
add
push
add
push
jae
add
or
cmps
add
push
and
and
add
sub
add
adc
fiadd
adc
sub
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
adc
fst
xchg
lods
add
sub
push
sub
adc
adc
and
pop
add
push
and
add
and
or
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
sub
inc
mov
add
jae
add
push
jle
add
or
add
push
and
add
add
sbb
idiv
(bad)
jmp
cmp
add
sub
add
adc
ficom
add
add
fiadd
and
add
sub
add
sub
or
inc
add
add
add
mov
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
inc
add
push
and
add
push
and
add
push
and
add
add
add
or
mov
and
push
add
push
sub
jae
add
or
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
add
mov
add
inc
add
adc
jnp
add
add
inc
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
add
dec
add
push
and
add
sub
push
and
add
or
jae
add
or
pop
outs
add
add
and
outs
add
add
and
add
cwde
push
add
sub
add
adc
adc
lods
add
add
outs
add
add
and
add
adc
add
push
add
push
pop
adc
mov
rcr
inc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
add
add
add
add
add
add
and
add
xor
add
add
inc
add
adc
add
or
sub
add
push
and
aas
add
or
xor
add
inc
add
or
aas
add
sub
push
and
add
push
sub
add
or
mov
add
or
add
push
or
add
or
add
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
push
or
add
outs
add
push
sub
add
adc
add
add
add
add
add
add
sbb
add
aad
add
inc
add
adc
sub
add
and
add
sub
push
and
add
and
add
add
or
outs
add
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
sub
es
outs
add
add
or
adc
and
push
add
push
adc
sub
adc
adc
call
or
add
sub
push
and
add
and
add
cli
add
push
adc
and
add
push
pop
adc
adc
adc
mov
mov
add
idiv
(bad)
(bad)
fisub
adc
add
pop
add
push
and
sbb
add
and
add
sub
sub
add
add
add
add
add
mov
add
inc
add
add
xor
add
add
add
add
add
add
aam
add
sub
add
sub
add
adc
add
add
add
add
adc
or
inc
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
and
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
add
sub
push
sub
add
or
add
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
add
sub
push
and
add
jge
add
add
add
outs
dec
add
push
and
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
push
and
add
and
or
push
add
add
add
add
sub
add
push
sub
sub
add
xor
add
add
add
add
add
sub
add
push
and
add
or
add
xor
add
add
add
sub
add
push
and
add
and
add
sub
add
add
or
sbb
add
add
add
add
and
add
push
sub
add
push
and
add
sub
add
adc
add
lods
add
add
adc
sub
add
push
and
sar
add
sub
push
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
aas
add
sub
push
and
add
jne
add
add
pop
sub
pop
and
aas
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
aas
add
sub
push
and
add
and
add
or
sub
or
outs
sbb
add
and
add
or
inc
add
add
idiv
(bad)
dec
sub
add
add
xor
mov
add
adc
sub
add
push
and
sar
add
sub
push
outs
push
add
or
pushf
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
aas
add
sub
push
and
add
jne
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
and
aas
add
sub
push
and
add
and
and
aas
add
sub
push
outs
pop
add
or
add
add
sub
sbb
add
add
(bad)
(bad)
dec
add
add
push
je
add
add
inc
add
add
idiv
(bad)
dec
add
add
or
sub
add
push
sub
adc
add
cmp
add
inc
add
adc
add
mov
push
and
and
and
aas
add
sub
push
outs
sbb
add
and
push
pop
sub
add
or
add
sub
add
adc
or
add
xor
add
add
add
sub
add
push
or
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
and
add
and
cmps
add
add
sub
add
or
push
add
sub
add
lea
or
mov
add
sub
add
and
inc
add
sub
push
and
mov
push
add
push
or
or
mov
push
add
push
and
inc
add
sub
push
and
rol
add
push
add
push
add
add
sub
add
and
add
sub
push
and
enter
sub
add
add
rol
push
mov
add
and
add
or
add
or
and
add
sub
push
and
inc
add
sub
push
and
add
push
sub
add
and
add
adc
adc
adc
sbb
add
inc
add
inc
add
adc
sub
add
push
and
test
add
sub
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
pop
add
push
outs
pop
add
or
add
or
sub
pop
inc
add
add
idiv
(bad)
inc
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
push
add
rol
push
and
add
and
add
and
push
add
sub
add
or
inc
add
sub
push
and
add
push
and
add
sub
or
outs
sbb
add
sub
and
inc
add
sub
push
and
add
push
sub
add
or
add
and
push
add
sub
add
sub
sub
add
adc
add
add
add
lds
push
inc
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
and
adc
add
pop
add
push
and
add
and
or
pop
add
add
add
add
aad
add
and
fadd
add
sub
add
sub
fadd
add
sub
add
sub
sbb
add
ins
add
add
add
and
pop
add
push
and
add
and
push
add
sub
add
sub
add
push
and
or
add
and
adc
sub
or
outs
fiadd
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
adc
add
sub
add
add
add
add
sub
xor
push
add
add
add
or
pop
add
add
add
add
add
add
push
and
add
push
and
add
push
and
add
sub
sbb
add
in
add
add
add
jae
add
or
add
sub
or
outs
test
add
adc
sub
adc
sub
es
mov
pop
add
push
and
add
push
and
add
and
add
or
add
push
or
add
or
pop
sub
es
add
adc
(bad)
push
adc
add
outs
add
sub
add
push
adc
add
aas
add
or
or
cmp
or
inc
add
or
add
add
pop
add
push
and
inc
add
push
and
add
and
add
adc
push
adc
push
adc
outs
adc
add
adc
sub
add
sub
add
add
(bad)
(bad)
call
sub
add
fimul
adc
(bad)
push
or
add
outs
add
push
sub
sbb
add
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
add
add
adc
sub
add
push
and
dec
add
or
(bad)
add
push
es
sub
add
push
and
or
icebp
inc
add
sub
push
and
add
or
cmp
add
and
add
fiadd
sub
add
adc
add
add
add
add
inc
add
add
xor
add
add
add
sbb
sub
push
and
add
or
add
add
and
pop
add
push
and
add
and
sahf
inc
add
sub
push
sub
or
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
or
sbb
add
add
add
sub
add
or
add
or
add
or
add
or
adc
sub
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
add
jecxz
add
add
add
push
and
add
add
in
add
and
add
add
adc
add
add
add
push
and
add
push
and
pop
add
push
and
add
push
and
add
and
add
add
add
jae
add
or
add
jae
add
or
add
add
jnp
add
add
sbb
add
and
push
add
sub
add
sub
add
add
add
mov
add
add
or
add
sub
push
and
add
push
and
add
sub
jmp
jnp
add
add
mov
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
sbb
add
and
inc
add
add
idiv
(bad)
jmp
inc
inc
add
sub
push
add
in
add
and
add
sub
mov
sbb
add
and
push
add
sub
add
sub
add
and
pop
add
push
and
add
add
sbb
add
mov
add
add
xor
add
and
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
out
add
sub
add
push
and
inc
add
sub
push
and
add
push
and
add
and
add
add
call
outs
in
add
push
sub
xor
add
add
add
add
add
add
add
xor
add
add
add
add
sub
add
or
add
and
add
sub
push
sub
or
dec
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
adc
add
or
jae
add
or
pop
and
inc
add
sub
push
outs
pop
add
or
and
inc
add
sub
push
outs
pop
add
or
and
inc
add
sub
push
outs
pop
add
or
and
add
sub
push
outs
pop
add
or
and
add
sub
push
and
add
pop
and
add
sub
push
and
add
pop
and
pop
add
push
and
add
jle
add
add
pop
add
jo
in
push
add
sub
add
sub
es
adc
and
push
add
sub
add
adc
cmp
or
or
sbb
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
or
sbb
sub
push
and
add
and
imul
add
add
xchg
inc
add
sub
push
and
add
and
imul
add
add
lods
inc
add
sub
push
and
add
and
add
or
inc
add
add
idiv
(bad)
dec
adc
add
push
adc
push
adc
outs
sbb
or
hlt
push
add
sub
add
pop
adc
adc
adc
mov
dec
(bad)
(bad)
call
idiv
(bad)
inc
sub
xor
test
add
dec
add
adc
add
add
mov
pop
add
push
and
add
and
push
add
sub
add
or
or
add
push
add
push
adc
xor
or
and
pop
add
push
and
add
sub
pop
and
pop
add
sub
add
pop
or
add
add
add
sub
add
pop
adc
add
mov
les
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
and
pop
add
sub
add
xor
add
or
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
sub
add
xor
add
(bad)
(bad)
inc
and
add
sub
add
inc
and
pop
add
sub
add
inc
sub
sbb
add
sub
add
sub
and
add
sub
add
sub
xor
add
add
add
add
add
add
add
add
sub
add
push
sub
add
or
push
add
add
add
add
jnp
add
add
outs
inc
add
and
add
and
add
or
push
add
add
add
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
adc
pop
add
push
sub
add
pop
add
push
and
add
add
push
and
pop
add
sub
add
sub
add
xor
add
add
add
add
add
add
add
push
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
or
push
add
add
add
add
add
add
add
and
add
sub
add
inc
sub
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
and
add
sub
xor
add
add
add
add
add
add
and
add
sub
xor
add
add
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
outs
jne
add
and
inc
add
add
idiv
(bad)
jmp
push
inc
add
sub
push
and
add
sub
push
jae
add
or
add
add
add
add
sub
add
add
(bad)
(bad)
jmp
jle
add
add
ret
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
mov
add
adc
add
or
push
and
inc
add
sub
push
outs
sbb
es
add
add
add
sbb
es
and
add
sub
push
and
add
and
ret
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
add
or
and
add
add
add
outs
and
add
and
add
and
xor
add
sub
add
pop
or
add
add
add
add
or
into
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
sbb
add
sub
add
add
or
or
add
add
add
add
sub
add
or
add
or
adc
add
add
add
jae
add
or
add
push
add
add
add
or
or
add
add
add
add
sub
add
sub
add
or
add
or
sldt
add
add
add
add
sub
add
and
add
sub
add
or
xor
add
add
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
sub
add
sub
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
or
add
sub
add
or
adc
add
xor
popf
add
add
add
and
adc
add
pop
add
push
and
add
imul
add
and
add
je
add
sub
push
and
add
jge
add
sub
push
and
add
push
push
add
push
and
add
push
add
push
and
add
sub
add
jae
add
or
adc
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
jae
add
or
sub
add
adc
add
add
add
add
sbb
add
and
inc
add
sub
push
and
add
add
dec
inc
add
sub
push
and
add
sub
add
adc
add
inc
add
add
add
add
add
add
xor
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
or
add
add
add
or
add
add
and
pop
add
sub
add
push
or
sub
add
adc
add
sbb
add
push
add
adc
add
and
add
sub
add
push
jle
add
add
sub
add
or
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
jle
add
add
add
add
or
push
add
add
add
add
sub
add
or
add
sub
add
xor
add
add
add
add
add
outs
sbb
add
and
add
xor
add
add
add
add
add
add
xor
add
and
add
sub
xor
add
add
add
add
add
add
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
sub
xor
add
add
add
add
add
add
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
sub
add
or
or
adc
add
add
add
lldt
xor
add
sub
add
and
or
push
add
add
add
add
add
xor
add
sub
add
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
cmp
add
add
add
and
add
sub
add
mov
add
add
add
lods
inc
add
sub
push
sub
add
or
aas
add
or
add
sub
add
mov
add
add
das
add
or
add
or
adc
add
add
add
add
dec
pop
add
sub
add
sub
sub
add
or
adc
add
add
add
add
and
add
push
add
push
sub
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
add
add
add
cmp
add
sbb
add
add
(bad)
(bad)
inc
jne
add
add
push
outs
inc
add
or
push
pop
add
sub
add
pop
inc
adc
add
and
add
adc
add
sub
add
add
add
add
add
push
add
add
add
jg
add
lea
add
fwait
add
add
add
add
add
add
retf
add
je
add
add
sub
add
and
adc
add
sub
add
push
and
push
add
add
sbb
push
movs
retf
add
add
sub
add
and
push
add
add
and
add
and
icebp
add
add
and
add
and
push
add
add
and
add
and
adc
add
sub
add
push
sub
movs
repnz
add
and
add
and
push
add
add
and
add
and
repz
add
and
sub
movs
fadd
add
sub
add
push
and
inc
add
add
daa
add
push
sub
movs
add
add
sbb
add
sub
movs
aaa
add
add
sub
add
and
inc
add
sub
push
and
add
or
add
and
add
jp
add
xor
add
add
add
add
add
add
xor
add
and
xor
movs
add
add
add
sub
add
or
add
or
jae
add
push
or
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
add
push
or
sbb
outs
mov
add
add
call
and
add
sub
add
pop
or
add
imul
add
add
(bad)
(bad)
inc
jae
add
push
or
inc
add
add
idiv
(bad)
dec
and
add
push
add
push
outs
mov
or
outs
xchg
add
push
fimul
or
or
add
or
push
outs
sbb
add
and
add
adc
add
add
daa
xchg
add
add
add
add
or
or
add
add
add
add
sub
sub
add
or
or
add
add
add
add
adc
xor
sub
add
or
or
add
add
add
add
add
add
and
add
or
sbb
add
add
add
add
pop
add
sbb
inc
add
or
sub
movs
pop
add
sbb
add
add
xor
jl
add
push
add
adc
jae
add
or
jae
add
push
or
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
or
sbb
add
and
outs
inc
add
or
and
add
push
add
push
pop
or
add
imul
add
push
adc
adc
outs
mov
add
or
sub
adc
add
or
add
add
add
bound
or
add
add
add
xor
add
add
add
add
add
sub
add
xor
sldt
add
add
jae
add
push
or
add
xchg
add
push
sub
add
or
add
add
add
add
nop
dec
add
sub
push
and
add
or
add
and
add
jae
add
or
add
xor
add
add
jle
add
add
enter
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
sub
add
and
mov
jge
add
and
add
or
add
or
push
sub
es
add
dec
add
or
jle
add
add
jae
add
or
add
or
add
adc
adc
xchg
add
or
outs
xchg
add
or
pop
jle
add
add
push
adc
outs
dec
add
or
add
adc
sbb
add
add
(bad)
(bad)
(bad)
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
sar
add
inc
add
or
inc
add
add
idiv
(bad)
jmp
sub
add
and
add
and
dec
add
or
add
add
adc
add
add
inc
mov
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
push
add
adc
add
add
or
or
sub
add
and
add
and
add
add
or
or
sub
add
and
add
or
or
sub
add
and
add
and
mov
add
or
add
(bad)
sbb
and
add
add
add
or
adc
cmp
add
add
or
adc
add
add
and
sub
add
and
outs
push
add
or
add
or
add
outs
inc
add
or
add
pop
add
or
add
add
add
add
(bad)
(bad)
call
sub
add
es
je
add
add
add
or
add
pop
pop
outs
push
add
or
add
or
add
add
adc
outs
push
add
or
outs
pop
add
or
or
push
adc
sub
add
push
adc
pop
adc
sub
or
or
aas
add
push
adc
add
adc
adc
add
pop
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
sbb
add
add
add
add
add
add
ins
add
add
inc
add
add
xor
add
add
pop
add
adc
add
add
dec
sub
add
and
dec
sbb
jle
add
add
dec
sub
add
and
dec
sbb
pop
lea
add
add
retf
add
dec
or
pop
sub
or
inc
add
push
or
add
add
push
outs
pop
add
or
and
sub
add
xor
add
add
sub
or
pop
add
or
add
and
or
add
or
push
pop
outs
pusha
add
or
add
or
add
or
add
or
add
add
(bad)
(bad)
call
sub
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
add
outs
add
or
add
or
add
add
adc
add
add
add
add
add
add
xor
add
add
add
add
jle
add
add
dec
sub
add
and
dec
sbb
push
sub
add
add
(bad)
(bad)
call
sub
add
sub
lea
add
add
jle
add
add
dec
pop
push
push
sub
or
sbb
sbb
push
adc
jo
or
jle
add
adc
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
aaa
jle
add
add
or
or
or
jle
add
sub
add
adc
add
push
outs
add
or
pop
adc
or
sub
add
sub
jb
add
jo
add
or
sbb
adc
pop
adc
add
xor
add
or
add
add
xor
add
add
add
add
add
and
add
add
pushf
add
and
add
add
arpl
pushf
add
and
add
add
adc
pushf
add
and
add
add
sbb
pushf
sub
add
adc
add
add
add
add
add
or
imul
add
sub
or
(bad)
out
add
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
or
inc
add
add
idiv
(bad)
dec
push
add
add
or
add
and
or
add
add
or
pop
or
sbb
or
adc
outs
ins
add
or
pop
pop
adc
pop
pop
or
imul
add
add
(bad)
(bad)
dec
sub
add
or
pop
add
add
add
add
sub
add
sub
adc
add
rol
add
adc
add
add
lea
add
add
add
add
lea
add
add
movs
add
add
inc
add
or
sbb
add
or
add
je
add
or
add
or
adc
outs
add
or
or
add
jo
add
ror
and
add
add
adc
add
add
(bad)
movs
add
add
and
add
pop
and
inc
add
sub
add
(bad)
(bad)
call
sub
add
es
add
add
and
add
add
movs
add
add
and
adc
mov
test
idiv
(bad)
jmp
add
add
add
add
add
add
sub
add
add
add
rol
add
push
jge
add
add
add
add
or
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
add
add
or
jge
add
add
add
add
or
inc
add
add
idiv
(bad)
inc
outs
push
add
or
add
sub
adc
aam
add
add
or
sbb
add
add
add
sub
add
inc
add
push
add
add
add
jnp
add
add
imul
adc
push
add
add
adc
jnp
add
add
jle
add
or
push
or
sub
add
or
add
cs
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
(bad)
movs
add
add
add
add
sub
add
dec
add
push
and
add
add
(bad)
movs
add
add
add
add
adc
sub
add
and
or
adc
add
adc
add
sbb
add
and
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
enter
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
dec
add
push
or
add
add
add
jnp
add
add
outs
jbe
add
and
add
push
adc
sub
add
and
add
push
adc
add
dec
add
push
or
add
add
add
jnp
add
add
outs
jns
add
and
add
and
sub
add
pop
sub
add
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
jnp
add
and
add
add
add
add
jl
add
and
push
add
or
add
and
add
and
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
jg
add
and
add
add
add
add
or
add
or
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
add
or
add
add
add
push
outs
jge
add
and
add
and
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
add
or
pop
outs
test
add
and
sbb
pop
outs
test
add
and
add
xor
sbb
add
add
(bad)
(bad)
call
pop
jne
add
add
or
jnp
add
add
or
add
or
add
and
add
add
pop
outs
test
add
and
adc
outs
test
add
and
adc
jne
add
add
or
jnp
add
add
or
add
or
push
add
or
add
outs
jle
add
and
adc
outs
test
add
and
pop
inc
add
add
idiv
(bad)
call
pop
jne
add
add
or
jnp
add
add
or
add
or
add
and
push
adc
sub
add
and
add
push
adc
add
dec
add
push
adc
add
or
pop
sub
add
adc
jb
add
jo
add
jne
add
mov
xor
add
and
add
jp
add
or
sldt
add
add
add
and
add
pop
jge
add
add
add
xor
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
xchg
sub
add
adc
add
and
add
pop
add
adc
jnp
add
add
add
add
pop
jge
add
add
jnp
add
add
sub
add
and
add
add
add
add
jnp
add
add
and
add
add
pushf
add
add
add
and
add
add
arpl
pushf
add
add
add
and
add
add
adc
pushf
add
add
add
and
add
add
sbb
pushf
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
push
or
add
xchg
add
je
add
add
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
idiv
(bad)
call
sub
add
sub
add
xor
add
add
add
add
add
add
push
or
add
mov
add
and
add
or
jl
add
add
pop
sub
add
sub
push
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
xor
add
add
add
add
add
add
or
outs
mov
add
add
add
or
add
or
push
outs
mov
add
push
outs
scas
add
push
sub
xor
add
add
add
add
add
jnp
add
add
and
idiv
(bad)
call
sub
add
add
add
add
add
add
or
add
add
xor
push
add
adc
sub
add
sub
push
and
add
jp
mov
add
outs
pop
add
and
pop
dec
add
push
jae
add
or
dec
add
push
fidiv
or
push
outs
xchg
add
or
jle
add
or
add
push
add
add
or
in
dec
add
sub
push
and
add
or
add
add
add
add
adc
xor
add
add
or
or
add
add
add
and
push
add
push
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
or
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
dec
add
sub
push
and
add
jp
add
add
add
and
add
push
add
push
jae
add
push
jge
add
add
and
add
sub
add
jge
add
add
jae
add
or
add
add
and
add
push
add
push
jge
add
add
and
add
sub
add
sub
push
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
outs
xchg
add
or
and
add
test
add
sub
add
pop
jge
add
add
adc
add
inc
add
add
add
add
pop
add
push
and
loopne
add
jnp
add
add
xchg
add
or
mov
add
sub
add
pop
outs
cwde
add
or
and
add
mov
add
sub
add
pop
jge
add
add
sub
add
or
pop
add
add
add
add
jnp
add
add
jnp
add
add
nop
pop
add
sub
add
pop
outs
cdq
add
or
xor
lea
add
bound
add
and
add
push
or
fld
add
add
add
add
pop
and
push
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
cmp
add
inc
add
add
idiv
(bad)
inc
and
push
add
push
inc
js
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
or
movs
pop
add
sub
add
xor
inc
add
add
idiv
(bad)
dec
and
push
add
push
cs
add
idiv
(bad)
dec
and
add
push
cmp
add
add
idiv
(bad)
(bad)
cmp
and
push
add
push
data16
mov
add
sub
add
pop
inc
pop
add
add
add
add
add
fiadd
add
add
add
fiadd
add
cmp
add
jnp
add
add
mov
push
add
push
outs
out
add
cmp
jnp
add
add
mov
push
add
push
outs
out
add
cmp
jnp
add
add
rol
add
push
add
push
outs
out
add
cmp
jnp
add
add
les
add
sub
add
outs
out
add
sub
jnp
add
add
enter
sub
add
outs
out
add
sub
jnp
add
add
jnp
add
add
out
add
sub
cmc
dec
add
sub
push
and
add
add
xor
add
and
add
jp
jnp
add
add
xor
add
push
add
push
or
adc
jnp
add
add
jnp
add
add
out
add
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
sub
push
and
add
add
xor
add
jae
add
push
jp
sub
add
add
rol
add
sub
add
jge
add
add
and
pop
add
sub
add
jge
add
add
add
add
add
sbb
add
and
add
jnp
add
add
fadd
add
sub
add
outs
in
add
add
fld
add
sub
add
jge
add
add
add
add
add
add
add
xor
add
add
pop
add
adc
jnp
add
add
call
fadd
add
sub
add
cs
add
add
(bad)
(bad)
call
sub
add
add
sar
add
add
loopne
add
sub
add
sub
in
add
sub
add
sub
add
xor
add
add
add
add
add
jnp
add
add
fwait
add
or
add
sub
add
inc
and
pop
add
sub
add
inc
sub
add
xor
add
add
add
add
add
jnp
add
add
fwait
add
or
add
or
adc
add
add
add
add
lock
add
sub
add
jge
add
add
add
add
xor
add
add
add
add
add
adc
jnp
add
add
xor
and
pop
add
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
add
sub
add
sub
add
xor
add
add
add
add
add
add
add
xor
idiv
(bad)
call
sub
add
add
pusha
add
push
sub
add
add
(bad)
(bad)
jmp
cld
pop
add
sub
add
sub
jnp
add
add
push
inc
or
add
add
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
(bad)
jmp
xor
sub
add
and
add
push
and
add
push
cmp
call
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
sub
dec
dec
add
sub
push
and
add
add
cmp
add
sub
add
or
add
jp
add
adc
add
dec
add
add
adc
jnp
add
add
push
and
add
sub
add
xor
push
and
or
add
push
add
push
cmp
and
add
sub
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
cmp
and
or
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
inc
and
add
sub
add
xor
add
add
idiv
(bad)
inc
and
or
add
push
add
push
sub
push
add
arpl
add
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
add
arpl
add
and
add
sub
add
sub
sub
add
and
or
add
push
add
push
sub
sub
add
add
arpl
add
and
add
sub
add
sub
jnp
add
add
pushf
add
or
sbb
add
add
idiv
(bad)
inc
sub
add
sub
ins
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
xor
add
sub
add
sub
add
adc
add
retf
add
adc
jnp
add
add
push
and
add
sub
add
cs
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
or
add
push
add
push
cs
inc
add
add
idiv
(bad)
inc
and
add
sub
add
xor
inc
add
add
idiv
(bad)
inc
and
add
sub
add
sub
push
and
add
push
add
push
sub
sub
add
and
add
sub
add
sub
and
add
push
add
push
sub
push
and
add
sub
add
sub
jnp
add
add
pushf
add
or
add
push
and
pusha
add
push
and
(bad)
jmp
push
or
add
push
add
push
sub
add
xor
add
add
add
add
add
add
push
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
imul
push
sub
jnp
add
add
pop
or
add
push
add
push
cs
add
add
(bad)
(bad)
inc
jnp
add
add
pop
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
add
add
add
imul
and
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
jp
jnp
add
add
pusha
or
add
push
add
push
cs
add
idiv
(bad)
inc
and
add
push
add
push
sub
push
and
push
push
add
push
add
add
add
sbb
add
and
add
add
add
add
ins
or
add
push
add
push
outs
in
add
and
add
sub
add
sub
add
add
or
pop
add
add
add
add
sbb
jnp
add
add
xor
sub
jnp
add
add
jnp
add
add
out
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
dec
add
sub
push
and
add
add
xor
add
and
add
jp
add
add
or
pop
add
add
add
add
jnp
add
add
popf
add
or
add
add
(bad)
(bad)
call
sub
add
add
add
add
je
add
sub
add
cs
add
idiv
(bad)
inc
jnp
add
add
js
add
sub
add
inc
sub
jl
add
sub
add
sub
add
xor
add
add
add
jnp
add
add
jnp
add
add
out
add
cmp
jnp
add
add
pushf
add
or
add
add
add
add
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
add
push
add
sub
sbb
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
out
add
sub
or
sub
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
and
(bad)
jmp
add
xor
add
add
add
add
add
add
ins
add
push
sub
add
adc
add
dec
add
add
add
add
jge
add
add
or
and
add
push
pop
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
and
push
add
push
jge
add
add
and
add
push
sub
push
add
arpl
add
cmp
and
push
add
push
jge
add
add
and
add
push
sub
push
add
arpl
add
cmp
add
add
cwde
or
add
push
add
push
sub
add
add
arpl
add
add
pushf
or
add
push
add
push
jge
add
add
push
add
mov
push
add
push
sub
add
add
arpl
add
add
movs
or
add
push
add
push
jge
add
add
sub
and
push
add
push
jge
add
add
sub
add
sub
add
lods
or
add
push
add
push
jge
add
add
sub
add
add
inc
add
or
add
add
add
sub
add
adc
add
into
add
add
add
add
add
add
pop
and
push
add
push
cmp
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
push
xor
inc
add
add
idiv
(bad)
inc
and
push
add
push
cmp
add
add
inc
add
add
idiv
(bad)
inc
and
add
push
pop
inc
add
add
fld
add
mov
add
add
popf
add
add
and
or
add
push
add
push
cmp
add
add
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
and
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
pop
inc
add
add
imul
add
add
add
and
or
add
push
add
push
cmp
add
cmp
add
add
and
or
add
push
add
push
cs
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
pop
inc
add
add
cmp
add
cli
add
add
and
or
add
push
add
push
pop
inc
add
add
out
add
add
add
add
add
cmp
add
add
add
add
add
pop
add
push
and
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
sub
push
and
or
add
push
add
push
sub
sub
add
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
or
and
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
sub
and
or
add
push
add
push
xor
add
jo
add
sub
and
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
jp
push
dec
add
sub
push
and
add
jp
hlt
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
jnp
add
add
sub
add
sub
add
xor
add
idiv
(bad)
inc
and
add
sub
add
jge
add
add
xor
add
sub
add
sub
out
add
sub
push
and
add
add
adc
add
sub
add
or
add
push
jp
jnp
add
add
pushf
add
or
mov
add
sbb
add
(bad)
(bad)
inc
jnp
add
add
sahf
add
or
add
add
(bad)
(bad)
inc
jnp
add
add
xor
add
sub
add
cs
add
add
(bad)
(bad)
inc
jnp
add
add
cmp
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
sub
add
sub
out
add
sub
push
add
add
add
adc
add
sub
add
or
add
jp
sub
add
and
(bad)
jmp
inc
or
add
push
add
push
sub
add
xor
add
add
add
adc
inc
or
add
push
add
push
or
adc
dec
or
add
push
add
push
or
sub
add
add
add
add
pushf
add
or
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
dec
or
add
push
add
push
sub
add
adc
add
iret
add
add
add
add
jno
add
sub
push
and
add
sub
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
push
or
add
push
add
push
sub
add
cmp
inc
add
add
idiv
(bad)
jmp
sbb
jnp
add
add
jnp
add
add
out
add
add
pusha
add
push
and
fadd
add
lahf
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
sbb
add
and
fld
add
pop
or
add
push
add
push
outs
in
add
jae
add
or
add
pop
or
add
push
add
push
sub
add
add
add
add
pusha
or
add
push
add
push
inc
test
add
add
idiv
(bad)
inc
sub
add
and
add
sbb
add
(bad)
(bad)
inc
and
add
push
add
push
jge
add
add
sbb
add
add
add
mov
and
add
sub
add
jge
add
add
sub
add
and
and
add
sub
push
sub
es
add
add
(bad)
(bad)
inc
and
add
push
add
push
outs
mov
sub
es
sub
add
and
jo
add
sub
add
or
ins
add
push
sub
pop
jae
add
push
jae
add
push
adc
jnp
add
add
je
add
sub
add
xor
add
(bad)
(bad)
inc
and
add
sub
add
adc
ins
add
push
add
pusha
add
push
and
adc
add
add
add
imul
or
add
push
add
push
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
or
adc
jnp
add
add
jnp
add
add
out
add
push
sub
add
push
sub
add
add
(bad)
(bad)
inc
jnp
add
add
sbb
add
and
test
add
sub
add
outs
xor
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
sbb
add
and
add
sub
add
add
mov
add
sub
add
or
fld
add
sbb
add
sub
add
or
add
and
add
or
nop
or
add
push
add
push
or
add
xchg
or
add
push
add
push
outs
in
add
add
or
ins
add
push
sub
adc
add
dec
add
add
add
add
pop
add
push
or
add
je
add
and
sbb
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
add
mov
add
add
pop
add
or
add
jp
adc
add
outs
add
add
add
add
pop
add
push
and
pop
inc
add
add
add
add
adc
add
and
add
sub
add
cwde
or
add
push
add
push
jge
add
add
add
pushf
or
add
push
add
push
jge
add
add
add
mov
push
add
push
jge
add
add
and
dec
add
sub
push
and
add
add
xor
add
jae
add
push
jp
adc
add
push
add
add
add
add
push
and
add
push
pop
inc
add
add
add
add
or
push
and
push
add
push
sub
lods
or
add
push
add
push
sub
test
add
sub
push
and
add
add
xor
add
and
add
jp
add
xor
adc
add
add
add
add
pusha
add
push
and
fadd
add
mov
add
sub
add
inc
lods
add
add
mov
add
add
add
add
mov
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
push
add
push
outs
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
mov
push
add
push
outs
out
add
add
add
add
jnp
add
add
out
add
sub
add
add
add
jnp
add
add
out
add
add
pusha
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
jecxz
add
sub
push
and
add
jp
and
or
add
push
add
push
add
add
add
sbb
add
sub
add
add
add
add
les
add
sub
add
outs
in
add
add
arpl
add
sub
adc
add
outs
add
add
add
adc
enter
sub
add
or
jnp
add
add
push
outs
jae
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
or
add
push
add
push
pop
or
add
add
or
inc
add
add
idiv
(bad)
inc
sub
add
sub
add
add
(bad)
(bad)
inc
add
add
or
add
xor
add
add
add
adc
add
jbe
add
or
add
add
(bad)
(bad)
call
sub
add
es
sub
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
and
sub
add
and
or
add
push
add
push
sub
aam
add
sub
add
sub
add
xor
add
add
add
adc
jnp
add
add
push
and
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
or
add
push
add
push
cmp
add
add
idiv
(bad)
inc
and
or
add
push
add
push
cs
and
or
add
push
add
push
cs
push
and
or
add
push
add
push
cs
push
and
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
jmp
lock
add
push
add
push
sub
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
add
and
add
sub
add
inc
sub
clc
or
add
push
add
push
sub
jnp
add
add
cld
or
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
sub
jnp
add
add
pushf
add
or
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
sub
or
add
sub
add
sub
add
add
or
pop
add
add
add
add
jle
add
add
or
add
sub
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
sub
add
and
add
sub
add
mov
add
add
ins
add
push
sub
sub
add
pop
add
push
and
add
jp
add
xor
add
add
add
add
add
jle
add
add
sbb
add
sub
add
sub
add
and
and
add
sub
add
sub
push
sub
popa
dec
add
sub
push
jae
add
push
jp
add
xor
add
add
add
add
add
add
add
and
add
sub
add
sub
add
and
and
add
sub
add
sub
push
sub
xchg
dec
add
sub
push
and
add
jp
xor
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
sub
add
sub
add
and
or
add
push
add
push
mov
add
add
ins
add
push
sub
sub
add
pop
add
push
and
add
jp
add
xor
add
add
add
add
add
and
add
sub
add
sub
add
sub
add
add
or
sbb
add
add
add
add
add
add
cmp
add
sub
add
or
sub
add
jg
add
sub
xor
add
add
add
add
add
cmp
add
sub
add
jge
add
add
and
add
sub
add
jge
add
add
adc
fiadd
add
adc
fild
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
cmps
add
or
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
out
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
pop
add
add
add
add
sub
and
add
push
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
or
add
push
add
push
xor
sbb
add
(bad)
(bad)
call
sub
add
add
pop
or
add
push
add
push
xor
and
dec
add
sub
push
jae
add
or
add
add
add
add
add
xor
add
add
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
jge
add
add
jnp
add
add
add
add
xor
add
add
add
add
add
add
mov
add
and
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
dec
add
sub
push
and
add
jp
outs
add
push
and
sub
add
mov
add
and
xor
js
add
imul
adc
add
push
or
push
add
add
push
and
pop
or
add
push
add
push
cs
add
add
(bad)
(bad)
call
sub
add
or
pusha
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
inc
sub
add
mov
add
and
outs
mov
outs
add
push
and
jmp
pop
add
push
and
add
jp
xor
out
add
ins
add
adc
add
push
or
mov
outs
pop
add
push
and
or
add
push
add
push
pop
inc
add
add
and
add
fwait
add
add
and
add
sub
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
outs
pop
add
push
outs
sbb
add
and
add
push
and
cmp
add
sub
push
and
add
jp
outs
pop
add
push
and
add
sub
add
rol
add
mov
add
or
pop
or
add
or
sub
sub
xchg
dec
add
sub
push
and
add
push
and
add
sub
add
or
add
jp
outs
add
push
and
(bad)
jmp
cmp
add
sub
push
and
add
jp
adc
add
inc
add
add
add
add
add
jo
add
sub
add
pop
jge
add
add
add
add
cwde
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
cmp
add
and
pop
add
push
or
and
add
push
add
push
pop
inc
push
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
jo
add
je
add
je
add
bound
add
dec
add
add
outs
add
add
add
add
(bad)
(bad)
inc
add
lea
add
sub
add
add
xchg
add
push
and
add
add
add
add
(bad)
(bad)
inc
add
mov
add
and
add
xchg
add
push
or
dec
add
outs
pop
add
push
and
add
push
and
add
add
push
outs
sbb
add
or
sub
sub
and
dec
add
sub
push
and
add
push
and
add
sub
add
or
add
jp
and
add
js
add
sub
add
pop
jge
add
add
sub
add
adc
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
or
inc
add
add
idiv
(bad)
inc
sub
outs
inc
add
or
push
add
mov
inc
add
add
idiv
(bad)
inc
stos
add
or
pop
push
outs
stos
add
or
inc
add
add
idiv
(bad)
inc
rcr
add
add
inc
add
or
add
or
sbb
add
(bad)
(bad)
inc
sub
add
add
or
or
add
or
add
outs
scas
add
or
inc
add
add
idiv
(bad)
jmp
inc
dec
add
sub
push
and
add
or
add
or
add
or
sub
adc
xor
add
and
add
or
add
add
xor
push
add
add
add
add
add
add
or
jae
add
or
add
add
jnp
add
add
adc
outs
mov
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
add
xchg
add
push
and
test
add
push
outs
mov
add
push
sub
add
sbb
pop
add
add
add
add
add
jl
add
sub
add
sub
add
push
and
add
push
or
outs
mov
add
and
add
add
or
mov
add
and
or
add
push
add
push
sub
add
and
add
or
add
push
add
push
and
or
add
or
xor
inc
add
or
add
sub
add
outs
mov
add
and
sub
add
push
and
sub
add
push
and
or
or
add
sub
add
push
pop
adc
outs
loopne
add
adc
sub
cmp
(bad)
(bad)
fimul
adc
(bad)
push
pop
add
sbb
add
or
pop
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
push
add
cmp
add
and
add
jp
add
push
and
add
mov
es
sbb
add
(bad)
(bad)
inc
push
add
mov
es
add
push
sub
sub
add
fld
add
and
inc
add
add
idiv
(bad)
jmp
adc
sub
add
push
and
add
and
pop
sub
es
add
fiadd
add
add
sub
add
push
sub
and
add
sub
add
add
or
inc
add
add
idiv
(bad)
inc
inc
add
or
add
push
and
pop
sub
es
je
add
add
add
outs
mov
and
dec
add
sub
push
and
outs
mov
outs
inc
add
or
pop
add
or
add
jp
add
xor
cmp
add
jb
add
jae
add
push
or
add
add
add
add
add
add
add
sub
es
add
add
pop
inc
push
add
push
jae
add
or
inc
add
and
add
add
xor
add
add
adc
mov
or
jle
add
add
add
push
and
mov
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
or
mov
add
sub
add
cs
inc
add
add
idiv
(bad)
jmp
sbb
outs
pop
add
push
outs
sbb
add
or
add
add
sub
and
sub
pusha
push
add
sub
push
and
add
push
mov
xor
add
jae
add
push
jp
outs
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
mov
pop
add
push
and
add
jp
add
add
or
push
add
add
add
add
add
add
push
add
xchg
add
push
sub
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
sub
add
add
(bad)
(bad)
jmp
fimul
add
pop
add
push
and
add
jp
add
xchg
add
push
sub
xor
or
add
je
add
add
sbb
add
(bad)
(bad)
call
sub
add
add
add
push
sub
add
inc
add
or
cwde
add
push
and
add
aaa
add
push
sub
cmp
add
sbb
add
add
(bad)
(bad)
inc
or
outs
inc
add
or
nop
or
add
push
add
push
pop
inc
adc
add
pop
add
add
add
add
add
pusha
add
add
add
add
add
push
add
add
add
jp
add
xchg
add
xchg
add
add
add
add
add
add
ret
add
add
pop
je
add
add
add
push
sub
pop
movs
adc
add
outs
int3
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
retf
add
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
icebp
add
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
adc
add
outs
int
add
sub
pop
movs
repnz
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
repz
add
add
push
sub
pop
movs
fadd
add
outs
mov
pop
movs
inc
add
add
add
push
sub
pop
movs
add
add
add
push
sub
pop
movs
aaa
add
add
add
push
sub
add
call
and
sbb
inc
add
add
idiv
(bad)
inc
add
and
pushf
add
push
sub
sub
sbb
add
add
(bad)
(bad)
inc
add
and
add
sub
add
and
add
sub
sbb
add
add
(bad)
(bad)
inc
add
and
add
sub
add
sub
add
sub
sbb
add
add
(bad)
(bad)
inc
add
sbb
add
outs
rol
push
sub
add
call
add
xor
xchg
add
add
add
add
add
add
jns
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
or
aas
add
add
add
outs
mov
or
add
add
push
and
inc
add
add
idiv
(bad)
inc
push
and
push
add
push
sub
and
add
push
pop
or
add
add
add
rol
or
inc
add
add
idiv
(bad)
inc
push
and
push
add
push
sub
add
xor
scas
add
add
add
add
push
and
add
add
add
and
mov
es
outs
rol
or
movs
or
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
pop
inc
add
add
add
add
adc
add
xor
adc
and
add
pop
add
push
and
add
jp
and
add
pop
add
push
add
add
add
cmp
add
sub
add
jae
add
or
push
add
sub
inc
add
or
add
add
push
sub
add
xor
add
add
adc
inc
add
or
stos
add
or
imul
add
(bad)
(bad)
call
sub
add
es
jne
add
add
add
add
(bad)
(bad)
inc
outs
inc
add
or
xor
add
sub
add
and
rcr
add
add
inc
add
or
add
and
inc
add
add
idiv
(bad)
inc
pop
add
lods
add
or
add
sub
outs
mov
es
mov
outs
mov
add
add
sub
es
outs
ret
add
or
add
dec
adc
les
add
or
add
push
and
inc
add
add
idiv
(bad)
call
add
fadd
add
and
inc
add
add
idiv
(bad)
inc
add
add
fiadd
add
and
fld
add
and
add
adc
arpl
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
add
pop
adc
add
add
add
push
add
add
push
and
add
or
add
add
add
add
movs
add
add
add
add
xor
add
add
add
add
mov
or
or
and
push
add
push
outs
mov
push
sub
add
xor
add
add
adc
outs
mov
add
and
add
push
or
sbb
outs
enter
and
add
push
and
push
add
push
pop
or
add
mov
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
sub
add
sbb
add
add
add
add
add
push
add
leave
add
or
pop
outs
retf
or
or
adc
sub
add
or
add
and
add
add
adc
sub
add
or
add
pop
outs
arpl
add
and
inc
add
add
idiv
(bad)
call
sub
add
ficomp
pop
jne
add
add
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
add
add
push
sub
adc
add
add
add
add
add
add
add
add
mov
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
jae
add
or
add
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jae
add
or
add
add
jnp
add
add
cld
or
add
push
add
push
outs
xchg
add
or
and
or
add
push
add
push
jge
add
add
add
adc
add
add
add
and
add
sub
add
and
or
add
push
add
push
jae
add
or
push
and
add
sub
add
and
or
add
push
add
push
and
add
sub
add
sub
add
or
and
or
add
push
add
push
and
add
sub
add
and
or
add
push
add
push
sub
add
or
and
add
sub
add
and
or
add
push
add
push
and
add
sub
add
sub
add
or
and
or
add
push
add
push
and
add
sub
add
and
or
add
push
add
push
sub
add
or
and
add
sub
add
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
or
add
push
sub
add
or
and
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
or
add
push
sub
add
or
and
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
push
add
sub
add
and
add
sub
add
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
push
add
sub
add
and
add
sub
add
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
adc
add
add
or
sub
add
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
jnp
add
add
add
add
xor
add
add
adc
jnp
add
add
push
inc
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
and
push
add
push
sub
mov
push
add
push
sub
ror
add
push
add
push
sub
les
add
sub
add
sub
enter
sub
add
sub
int3
or
add
push
add
push
sub
cmps
push
add
sub
push
and
add
add
inc
add
add
xor
add
and
add
jp
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
and
or
add
push
add
push
das
and
add
idiv
(bad)
call
sub
add
es
push
add
sub
push
and
add
jp
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
aam
add
sub
add
xor
and
or
add
push
add
push
cs
add
idiv
(bad)
call
sub
add
and
push
add
sub
push
and
add
jp
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
and
add
fmul
add
sub
add
pop
jge
add
add
jnp
add
add
xchg
add
or
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
xchg
add
or
add
add
add
jnp
add
add
outs
rol
add
sub
add
adc
add
and
add
popa
add
adc
sub
or
and
add
loopne
add
sub
add
pop
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
jnp
add
add
cdq
add
or
or
or
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
sub
jnp
add
add
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
sbb
add
mov
add
sub
push
outs
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
sbb
add
mov
pop
add
push
and
add
sub
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
add
xor
add
add
add
add
add
cld
or
add
push
add
push
sub
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
aam
add
add
add
add
outs
rol
add
add
add
add
adc
jnp
add
add
jnp
add
add
aam
add
add
add
add
add
add
sub
add
outs
aam
add
sub
add
or
or
add
add
add
scas
add
push
sub
add
add
xor
add
add
add
add
add
push
inc
add
add
add
add
or
add
sub
add
mov
add
sub
sub
mov
pop
add
push
and
add
add
xor
add
and
add
jp
add
or
add
add
add
add
push
add
mov
add
add
add
add
add
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
xor
add
add
add
adc
or
and
or
add
push
add
push
pop
inc
add
add
add
add
or
push
and
add
sub
add
sub
adc
add
sub
add
sub
add
add
pop
add
push
and
add
add
xor
add
and
add
jp
add
xor
add
add
popa
add
adc
or
inc
add
add
add
add
or
push
and
add
sub
add
sub
sbb
add
sub
add
sub
sub
add
pop
add
push
and
add
add
xor
add
and
add
jp
adc
add
sti
add
add
adc
sbb
add
sub
add
or
and
add
sub
add
or
dec
add
add
add
pop
or
jnp
add
add
outs
cdq
add
or
add
mov
xor
sbb
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
pop
or
and
and
or
add
push
add
push
pop
or
add
add
add
test
inc
add
add
idiv
(bad)
inc
sub
add
add
(bad)
(bad)
jmp
pop
push
add
sub
push
and
add
jp
sub
add
sub
add
or
add
add
lods
add
push
and
add
and
jnp
add
add
xor
add
sub
add
cs
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
add
sub
add
adc
add
(bad)
(bad)
inc
sub
adc
adc
and
or
add
push
add
push
pop
inc
add
add
add
add
sbb
add
sub
add
add
add
adc
add
outs
rol
add
sub
add
add
add
test
add
pop
add
push
and
add
sub
and
pop
add
push
and
cmp
xor
add
and
add
jp
and
add
sub
add
pop
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
adc
inc
add
add
add
add
adc
add
and
add
sub
add
inc
or
add
push
add
push
jge
add
add
add
inc
or
add
push
add
push
jge
add
add
add
dec
or
add
push
add
push
jge
add
add
and
pop
add
push
and
add
add
xor
add
and
add
jp
adc
add
movs
add
add
add
add
add
add
dec
or
add
push
add
push
inc
mov
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
aad
add
outs
rol
add
and
add
sub
add
or
dec
and
add
push
add
push
or
push
add
add
add
jnp
add
add
aam
add
pop
and
add
sub
add
pop
or
add
add
add
fstp
idiv
(bad)
inc
and
add
push
add
push
pop
or
add
add
add
lods
sbb
add
(bad)
(bad)
jmp
adc
add
add
add
add
and
add
sub
add
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
add
push
add
push
or
add
add
add
add
add
(bad)
add
or
push
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
push
and
add
add
add
or
add
add
inc
add
add
add
or
add
jae
add
push
jp
jnp
add
add
ins
or
add
push
add
push
cs
inc
add
add
idiv
(bad)
inc
jnp
add
add
jo
add
sub
add
xor
add
je
add
sub
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
js
add
sub
add
outs
aam
add
sub
jnp
add
add
jl
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
or
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
test
add
sub
add
outs
aam
add
add
mov
add
sub
add
sub
inc
add
add
idiv
(bad)
inc
sub
and
add
push
xor
sbb
add
add
(bad)
(bad)
inc
sub
jge
add
add
add
or
adc
add
add
add
add
mov
jnp
add
add
outs
rol
add
sub
xor
add
add
add
add
add
jle
add
add
nop
or
add
push
add
push
sub
add
add
or
push
add
add
add
add
jle
add
add
xchg
or
add
push
add
push
sub
add
add
or
adc
add
add
add
add
and
push
add
push
sub
add
add
or
pop
add
add
add
add
add
jnp
add
add
sub
and
add
push
sub
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
and
add
push
sub
add
add
xor
add
add
add
add
add
add
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
daa
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sbb
and
push
add
push
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
push
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sbb
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
fmul
add
sub
add
sub
jnp
add
add
pop
push
add
sub
push
and
add
add
add
add
outs
rol
add
add
add
add
bound
sub
push
outs
rol
add
sub
add
add
or
cmp
add
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
inc
add
push
and
addr16
add
sub
push
jae
add
push
jp
jnp
add
add
outs
rol
add
sub
add
add
or
adc
add
add
add
add
fmul
add
sub
add
sub
add
push
sub
add
add
or
add
add
add
add
sub
es
or
add
push
add
push
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
add
add
add
add
add
add
add
add
sub
add
add
add
push
add
sub
add
push
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
fld
add
sub
xor
add
add
add
add
fld
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
sub
sub
(bad)
sub
add
push
sub
or
add
fild
add
and
inc
add
add
idiv
(bad)
jmp
rcl
sub
push
(bad)
sub
add
push
and
fiadd
add
and
add
and
add
and
add
jp
push
sub
add
or
add
sub
add
or
add
or
adc
add
add
add
add
adc
jle
add
add
add
add
add
add
or
adc
add
add
add
add
adc
add
jge
add
add
add
xor
add
add
add
fs
add
sub
add
lea
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
add
add
adc
jnp
add
add
dec
push
add
sub
add
pop
add
add
add
imul
add
add
(bad)
(bad)
call
sub
add
add
push
push
add
sub
add
sub
add
push
add
add
add
and
add
or
push
push
add
sub
add
pop
jge
add
add
add
add
or
sbb
add
add
add
add
add
add
add
add
and
add
sub
add
jge
add
add
adc
add
xor
add
add
adc
jnp
add
add
and
add
push
add
push
pop
pop
lea
add
add
add
add
add
add
add
add
fiadd
add
add
jge
add
add
add
xor
add
add
add
add
add
add
add
pusha
push
add
sub
add
add
add
add
fild
add
sub
xor
add
add
add
add
add
jae
add
or
add
xor
add
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
push
push
add
push
inc
sub
ins
push
add
sub
add
sub
xor
add
add
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
sub
add
inc
sub
je
add
sub
add
sub
add
xor
add
add
add
add
add
sub
es
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
sub
add
sub
add
xor
add
add
add
adc
push
sub
add
sub
add
adc
add
stos
add
add
sub
add
sub
push
and
add
jp
adc
add
or
add
add
(bad)
(bad)
call
sub
add
adc
or
jl
add
sub
add
sub
sbb
add
add
(bad)
(bad)
jmp
mov
add
sub
push
and
add
sub
push
and
add
jp
loopne
add
or
outs
fld
add
and
inc
add
add
idiv
(bad)
inc
sub
sub
add
or
inc
add
add
idiv
(bad)
jmp
or
add
push
add
push
sub
adc
sub
add
or
add
pop
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
sub
adc
sub
add
or
or
or
fild
add
and
inc
add
add
idiv
(bad)
inc
outs
fld
add
and
or
fiadd
add
or
add
sub
add
xor
add
idiv
(bad)
dec
sub
add
add
or
or
mov
add
sub
add
xor
add
idiv
(bad)
dec
sub
add
add
or
or
nop
push
add
sub
add
sub
add
or
outs
fld
add
and
add
push
pop
sub
add
or
push
push
add
add
jecxz
add
and
add
adc
pop
adc
add
xor
push
sub
add
xor
cmps
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
push
add
sub
push
and
add
jp
in
add
or
outs
out
add
and
adc
out
add
and
outs
call
push
or
add
add
or
inc
add
add
idiv
(bad)
push
add
or
jmp
add
or
outs
in
add
or
add
arpl
add
and
inc
add
add
idiv
(bad)
(bad)
ficom
adc
adc
inc
add
add
idiv
(bad)
call
add
add
push
sub
add
add
add
cmp
push
pop
push
add
add
sbb
add
pop
add
add
adc
sti
push
add
sub
push
and
add
jp
sub
in
add
or
pop
outs
out
add
or
outs
out
add
or
outs
arpl
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
pop
sub
pop
outs
add
sub
add
adc
add
add
add
push
add
add
add
sbb
add
add
add
loopne
add
or
outs
lock
or
adc
sub
add
or
push
pop
outs
repnz
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
in
add
adc
sub
add
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
add
sbb
add
or
push
sub
add
add
add
add
sldt
add
add
add
adc
add
add
hlt
add
or
jae
add
or
add
add
or
cwde
push
add
sub
add
pop
push
sub
add
sub
sub
add
adc
add
add
add
add
or
push
add
sub
add
or
movs
add
add
push
pop
outs
jecxz
add
outs
clc
add
or
add
add
or
add
sub
add
pop
xor
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
movs
push
add
sub
add
or
or
add
or
add
or
test
add
sub
add
pop
or
add
or
inc
add
add
idiv
(bad)
inc
add
sub
add
lods
push
add
sub
add
pop
add
sub
add
sub
and
push
add
push
pop
or
push
outs
fld
add
aas
dec
(bad)
(bad)
jmp
adc
add
dec
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
sub
push
and
add
jp
outs
mov
or
or
push
and
add
push
outs
mov
fadd
add
sub
xor
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
(bad)
(bad)
inc
sub
add
add
(bad)
(bad)
inc
adc
add
and
push
add
push
sub
outs
fld
add
and
add
or
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
sub
std
add
or
and
push
add
sub
add
or
ds
add
outs
jecxz
add
and
jecxz
add
and
add
and
inc
add
add
idiv
(bad)
jmp
les
add
sub
add
sub
and
push
add
sub
add
pop
or
add
add
or
mov
add
push
add
push
sub
xor
add
add
add
add
add
ror
add
sub
add
add
or
add
and
add
sub
add
mov
add
jae
add
or
push
add
add
or
add
add
or
inc
add
add
jae
add
or
or
add
and
add
xor
add
add
add
add
add
and
push
add
sub
add
sub
add
sub
add
add
xor
add
outs
fld
add
and
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
fmul
add
sub
add
outs
jecxz
add
and
sub
inc
add
add
idiv
(bad)
inc
outs
fld
add
and
inc
add
add
idiv
(bad)
call
add
adc
push
sub
pop
push
add
sub
push
and
add
sub
add
and
add
or
add
sub
or
add
jp
sbb
add
xchg
add
add
test
pop
add
push
and
add
add
add
or
add
or
outs
in
add
or
or
add
or
sub
inc
add
add
idiv
(bad)
call
sub
add
add
outs
add
es
add
add
(bad)
(bad)
inc
pop
outs
in
add
or
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
push
sub
add
adc
add
add
add
add
add
add
xor
add
add
lea
add
add
jo
add
sub
push
sub
push
add
add
sbb
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
sub
jae
add
or
push
outs
push
add
or
add
or
xor
add
add
add
add
test
add
pop
add
push
and
add
rcr
add
add
inc
add
or
and
push
add
sub
add
lea
inc
add
push
and
or
cdq
add
add
add
add
and
pop
add
push
and
add
add
add
or
sbb
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
add
sub
and
inc
add
or
add
or
inc
add
add
idiv
(bad)
jmp
call
push
add
push
sub
rcr
add
add
inc
add
or
add
and
inc
add
add
idiv
(bad)
jmp
in
push
add
sub
add
sub
lock
add
sub
add
sub
add
adc
add
add
and
pop
add
push
and
add
add
xchg
push
add
sub
push
sub
push
and
push
add
sub
add
or
outs
pop
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
and
push
add
sub
add
or
test
shr
add
add
inc
add
or
add
sub
add
and
add
sbb
add
(bad)
(bad)
inc
outs
jae
add
and
add
sub
add
call
sub
add
and
add
sub
add
(bad)
out
add
add
or
or
add
add
sub
add
or
add
push
and
or
add
sub
add
adc
add
and
or
add
sub
add
adc
sub
or
or
outs
imul
adc
adc
outs
or
add
and
add
sub
add
xor
add
idiv
(bad)
call
add
pop
and
add
sub
add
outs
or
add
and
add
and
add
and
sbb
add
sub
add
adc
and
add
sub
add
pop
adc
adc
adc
mov
test
add
(bad)
(bad)
call
add
push
add
sub
push
and
sub
or
add
or
sub
add
push
je
add
add
and
sldt
sub
add
or
pop
shl
inc
add
or
add
or
inc
add
add
idiv
(bad)
inc
sub
add
push
and
inc
add
add
idiv
(bad)
inc
sub
es
add
add
sub
and
add
sub
push
and
add
or
add
or
push
outs
or
add
or
add
idiv
(bad)
inc
outs
pop
add
or
je
add
add
sub
or
or
dec
add
sub
add
sub
add
sub
add
push
and
inc
add
add
idiv
(bad)
inc
and
add
sub
add
lea
or
or
sub
add
sub
add
push
mov
add
or
add
or
sub
xor
add
add
add
add
add
add
or
push
add
sub
push
and
push
add
sub
push
and
add
sub
push
and
push
add
sub
push
and
add
sub
add
outs
adc
add
and
pop
add
sub
push
and
push
add
sub
push
and
add
and
add
adc
or
jp
add
add
add
add
add
or
pop
add
sub
push
and
pop
add
sub
push
sub
add
or
add
sub
push
and
add
sub
push
and
add
sub
push
and
sldt
sub
add
outs
adc
add
and
pop
add
sub
push
and
push
add
sub
push
sub
add
or
push
sub
add
xor
add
add
adc
or
and
add
sub
add
pop
inc
push
add
add
add
add
add
fadd
add
js
add
add
add
and
sldt
sub
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
cs
sbb
add
add
(bad)
(bad)
(bad)
cmp
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
outs
rol
add
sub
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
and
add
sub
add
inc
sldt
sub
add
cs
add
idiv
(bad)
call
or
add
add
pop
add
push
and
add
sub
and
add
push
add
push
xor
sbb
add
(bad)
(bad)
inc
add
add
or
add
sub
add
sub
add
xor
jb
add
pop
add
adc
outs
aam
add
add
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
or
sbb
jae
add
and
add
push
push
and
add
push
add
push
pop
or
add
add
or
ficomp
inc
add
add
idiv
(bad)
inc
add
add
idiv
(bad)
inc
add
aam
add
sub
add
xor
add
add
add
and
add
sub
add
and
add
push
add
push
sub
sub
add
sbb
add
add
sub
add
and
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
adc
sub
add
or
add
and
add
add
add
push
outs
sbb
add
or
or
sub
push
outs
add
pop
sub
add
adc
add
add
push
add
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
and
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
pusha
sldt
sub
add
xor
sbb
add
(bad)
(bad)
inc
and
add
push
add
push
pop
sub
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
and
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
and
add
sub
add
pop
and
add
push
add
push
pop
sub
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
and
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
and
push
add
push
pop
and
add
push
pop
sub
mov
add
sub
add
sub
add
or
xor
add
add
add
add
mov
add
sub
add
xor
add
nop
sldt
sub
add
pop
shr
add
xchg
sldt
sub
add
pop
and
push
add
push
pop
shr
sbb
add
inc
add
add
add
add
pop
pop
add
sub
push
and
add
add
outs
adc
add
and
add
and
add
push
or
adc
pop
add
sbb
mov
push
add
push
or
add
sub
adc
add
add
add
sub
add
adc
add
and
add
nop
add
adc
add
push
or
add
add
add
inc
pop
add
push
jae
add
or
sub
add
and
adc
add
cdq
add
add
and
pop
add
sub
push
and
add
add
add
add
push
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
pop
outs
adc
add
and
inc
add
add
idiv
(bad)
inc
add
add
or
add
and
pop
or
sub
or
sbb
add
add
(bad)
(bad)
dec
outs
adc
sub
sbb
add
pop
add
push
and
add
or
cmp
add
jae
add
or
add
adc
add
add
and
add
pop
add
push
sub
push
add
add
or
add
or
movs
sldt
sub
add
or
sbb
pop
add
outs
enter
sub
add
push
mov
add
sub
add
pop
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
sub
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
sbb
add
and
or
push
add
add
add
add
sub
outs
inc
add
or
add
add
mov
add
add
and
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
outs
pop
add
or
add
add
(bad)
(bad)
inc
outs
sbb
add
and
inc
add
add
idiv
(bad)
inc
sar
add
add
inc
add
or
inc
add
add
idiv
(bad)
jmp
lods
sldt
sub
add
sub
sub
add
and
mov
add
sub
add
sub
mov
add
sub
add
sub
add
or
pop
add
add
add
add
and
add
sub
push
and
add
add
add
or
mov
push
add
push
sub
and
add
push
adc
ror
add
push
add
push
(bad)
out
add
add
sbb
add
and
and
sldt
sub
add
inc
sub
add
xor
add
add
add
add
add
and
add
sub
push
and
add
add
add
or
add
add
push
and
sldt
sub
add
sub
add
xor
add
add
add
add
add
jbe
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
mov
add
sub
add
and
and
sldt
sub
add
sub
adc
add
cmp
add
xchg
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
sldt
sub
add
sub
outs
inc
add
or
add
or
push
outs
xchg
add
or
add
xor
int
add
add
add
add
jns
add
sub
push
sub
push
add
add
or
sbb
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
or
add
sub
push
jae
add
or
outs
sbb
add
sub
add
add
(bad)
(bad)
inc
outs
pop
add
or
inc
add
add
idiv
(bad)
inc
sar
add
add
inc
add
or
or
inc
add
add
idiv
(bad)
call
add
add
or
inc
add
add
idiv
(bad)
inc
sub
and
pop
add
sub
push
add
cmp
add
and
add
sub
push
and
add
jp
add
add
or
sub
add
add
add
add
inc
pop
add
sub
push
sub
push
add
add
or
push
add
sub
aam
add
sub
add
inc
sub
xor
or
add
xchg
add
adc
add
add
sub
add
sub
add
xor
add
add
add
add
add
and
add
sub
push
and
add
add
pop
pop
add
sub
push
and
add
add
add
sub
add
and
add
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sldt
sub
add
sub
pop
add
or
add
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
add
add
(bad)
(bad)
inc
add
add
add
inc
add
add
idiv
(bad)
inc
outs
push
add
or
fmul
add
sub
add
or
call
sub
add
sub
sbb
add
(bad)
(bad)
inc
inc
add
add
idiv
(bad)
inc
sldt
sub
add
or
xchg
add
add
and
sldt
sub
add
pop
or
xor
add
idiv
(bad)
inc
outs
sbb
add
and
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
inc
add
add
idiv
(bad)
inc
add
add
or
sub
add
and
add
call
push
add
push
sub
outs
pop
add
or
adc
and
sldt
sub
add
sub
add
add
or
sub
add
and
add
adc
add
les
add
xchg
add
adc
and
add
sub
push
and
add
add
add
or
add
add
or
push
add
add
inc
add
or
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
sbb
add
and
inc
add
add
idiv
(bad)
jmp
arpl
add
pop
add
push
and
add
or
add
jp
outs
jae
add
and
sldt
sub
add
call
sub
add
and
add
or
sbb
add
(bad)
(bad)
call
and
add
sub
push
and
add
or
add
or
xor
mov
add
xchg
add
adc
and
add
sub
push
and
add
add
sbb
add
sub
add
and
sub
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
sbb
add
and
inc
add
add
idiv
(bad)
jmp
xchg
pop
add
sub
push
and
add
or
add
jp
outs
jae
add
and
add
sub
add
call
sub
add
and
add
or
sbb
add
add
(bad)
(bad)
call
and
pop
add
push
and
add
or
add
or
add
adc
add
add
add
and
pop
add
push
and
add
add
add
or
add
or
outs
imul
or
add
sbb
add
(bad)
(bad)
call
sub
add
es
sub
add
push
and
sldt
sub
add
or
aas
add
outs
jecxz
add
and
add
add
sbb
add
or
inc
add
add
idiv
(bad)
jmp
cld
sldt
sub
add
sub
and
adc
add
push
add
push
pop
or
add
add
or
mov
add
idiv
(bad)
(bad)
cmp
outs
sbb
add
and
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
or
outs
jecxz
add
and
add
adc
add
adc
add
idiv
(bad)
jmp
or
add
sub
add
sub
and
add
sub
add
pop
or
add
or
inc
add
add
idiv
(bad)
jmp
sbb
int
add
sub
push
push
sub
add
and
add
jp
adc
add
sub
add
sub
add
xor
add
add
adc
and
add
sub
push
sub
push
add
add
or
adc
add
sub
add
pop
inc
add
add
cmp
add
dec
add
add
add
add
and
adc
add
push
add
push
and
idiv
(bad)
call
sub
add
sub
add
add
outs
and
add
sub
je
add
add
add
or
test
add
outs
and
add
sub
xor
add
pop
add
push
and
add
sub
push
jae
add
or
xor
add
add
cwde
add
adc
and
add
sub
push
sub
push
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
and
adc
add
push
add
push
sub
add
add
or
sub
add
add
add
add
inc
pop
add
sub
push
and
add
add
add
or
and
add
sub
add
inc
sub
add
add
or
adc
add
add
add
and
add
sub
add
sub
add
and
add
xor
add
and
add
sub
push
and
add
add
dec
inc
add
sub
push
and
add
add
add
outs
and
add
and
sldt
sub
add
xor
fld
add
call
pop
add
sub
push
and
add
add
mov
add
sub
push
and
add
add
add
or
and
adc
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
or
sub
add
sub
add
adc
push
add
add
add
add
or
mov
add
add
and
es
pop
or
mov
pop
add
push
and
add
or
add
and
add
sub
push
and
add
or
or
sub
push
and
add
or
add
and
add
sub
push
and
add
jp
sub
add
add
add
add
imul
mov
add
adc
add
add
and
add
sub
push
and
add
add
mov
add
sub
push
and
add
add
add
or
xor
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
sbb
inc
add
add
idiv
(bad)
jmp
sbb
add
add
pop
add
or
add
add
add
outs
daa
add
or
and
add
sub
push
and
add
or
add
and
add
sub
push
and
add
jp
add
xor
add
add
outs
test
add
or
and
adc
add
push
add
push
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
cs
sbb
add
add
(bad)
(bad)
jmp
sbb
inc
adc
add
push
add
push
sub
je
add
add
add
or
adc
add
push
add
push
sub
xor
add
add
outs
test
add
and
dec
adc
add
push
add
push
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
jmp
pop
and
add
sub
add
sub
je
add
add
add
or
and
add
push
add
push
sub
xor
add
add
add
pop
add
sbb
inc
add
or
add
push
and
add
xor
add
add
sub
add
or
add
outs
push
add
or
add
push
add
outs
sub
add
and
add
push
sub
add
xor
add
add
add
add
add
and
add
sub
add
sub
add
sub
xor
add
add
adc
add
adc
add
and
pop
adc
add
push
add
push
sub
add
sub
add
xor
add
add
add
and
pop
add
sub
push
and
add
add
pop
add
sbb
inc
add
or
add
or
add
sub
add
add
or
inc
add
add
add
add
and
add
sub
push
and
add
add
add
or
add
sub
push
and
add
or
add
and
add
and
add
and
pop
add
add
add
sbb
add
pop
add
push
and
add
add
add
push
add
xor
add
and
add
or
and
add
sub
add
pop
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
pop
sub
pop
inc
add
add
idiv
(bad)
inc
push
push
add
push
popa
or
sbb
add
ins
adc
add
push
add
push
pop
add
add
or
add
add
add
or
add
sub
add
add
(bad)
(bad)
inc
sub
xor
add
add
add
add
add
sub
pop
add
push
and
add
add
pop
pop
add
sub
push
sub
add
sub
outs
sbb
add
and
add
sub
push
and
add
sub
push
and
add
or
add
add
outs
xor
add
and
xor
add
and
add
sub
add
(bad)
out
add
add
push
and
add
push
add
push
add
add
push
and
add
aas
add
add
sub
pop
add
push
and
add
add
pop
pop
add
sub
push
and
add
add
sub
add
sub
add
and
sub
add
or
xor
jg
add
pop
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
push
and
add
jp
js
add
sub
add
or
sub
push
outs
jae
add
and
add
and
jl
add
sub
add
sub
and
push
add
push
pop
or
add
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
sub
adc
add
pushf
add
add
add
adc
sub
add
sub
push
and
add
jp
outs
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
mov
add
sub
add
or
xor
push
outs
jae
add
and
add
and
inc
add
add
idiv
(bad)
jmp
nop
adc
add
push
add
push
sub
and
add
push
pop
or
add
add
or
ret
sbb
add
(bad)
(bad)
jmp
cwde
adc
add
push
add
push
sub
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
sub
add
sub
push
and
add
jp
outs
jne
add
add
add
or
add
add
outs
jne
add
and
add
or
pushf
adc
add
push
add
push
add
add
or
add
sub
add
sub
add
or
sub
adc
xor
add
and
outs
jne
add
and
add
or
and
add
push
add
add
or
add
sub
add
sub
add
or
sub
add
cmp
add
and
add
or
cmp
add
add
add
verw
xor
es
sbb
add
(bad)
(bad)
call
sub
add
and
add
push
sub
add
add
or
and
add
and
or
inc
add
add
add
add
sub
add
or
and
push
add
push
sub
sub
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
sub
mov
push
add
push
sub
add
xor
add
add
add
add
add
add
dec
add
push
sub
add
add
or
cmp
add
add
sub
add
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
outs
aaa
add
or
add
adc
inc
add
add
idiv
(bad)
inc
outs
aaa
add
or
add
add
xor
add
add
add
add
add
and
add
push
sub
add
and
add
add
pop
add
push
or
add
add
add
add
into
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
push
jae
add
or
jnp
add
add
rcl
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
jmp
lds
add
pop
add
push
and
add
sub
push
and
add
jp
jae
add
or
jae
add
or
push
pop
or
push
pop
add
push
jae
add
push
sub
push
pop
outs
sbb
add
and
add
xor
dec
add
add
les
add
sub
add
or
push
pop
sub
add
or
or
enter
sub
add
or
push
outs
pop
add
push
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
sub
add
adc
add
add
pop
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
push
and
add
jp
jae
add
or
jae
add
or
or
int3
adc
add
push
add
push
jge
add
add
pop
or
push
pop
add
push
jae
add
push
sub
push
pop
outs
sbb
add
and
xor
add
add
add
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
add
xor
add
add
mov
jae
add
or
jae
add
or
and
adc
add
push
add
push
or
xor
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
or
or
add
add
or
outs
sbb
push
outs
cmp
add
and
mov
add
idiv
(bad)
inc
outs
sbb
add
and
add
or
or
add
add
add
add
push
add
push
and
add
or
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
push
jae
add
or
add
push
add
push
sub
add
xor
add
pop
add
push
or
adc
rol
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
or
outs
cmp
add
and
add
jge
add
add
outs
cmp
es
add
or
rol
add
outs
aas
add
or
add
or
outs
arpl
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
or
or
add
or
and
pop
add
sub
push
and
add
sub
add
jae
add
or
pop
add
inc
pop
add
push
jae
add
or
add
or
add
adc
add
add
add
jno
or
add
add
xor
add
add
add
add
add
and
pop
add
push
and
add
sub
xor
enter
and
add
add
and
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
jp
and
adc
add
push
add
push
xor
sbb
add
add
idiv
(bad)
jmp
mov
pop
add
push
and
add
sub
push
and
add
jp
add
jne
add
pop
or
and
adc
add
push
add
push
xor
and
pop
add
sub
push
and
add
jp
sub
sbb
add
add
(bad)
(bad)
inc
outs
jne
add
and
add
in
add
sub
add
push
outs
xor
add
and
inc
add
or
sub
add
or
add
adc
add
adc
add
mov
jae
add
or
push
jae
add
or
pop
sub
xor
add
add
add
sub
adc
push
sub
outs
jne
add
and
add
sub
sbb
add
and
add
movs
add
adc
add
or
push
add
pop
add
push
push
outs
sbb
add
or
or
sub
push
outs
add
pop
sub
add
adc
add
add
add
push
add
add
add
adc
add
mov
add
adc
and
pop
add
push
sub
push
add
call
push
add
push
arpl
in
adc
add
push
add
push
pop
sub
add
push
and
lock
add
push
add
push
arpl
hlt
adc
add
push
add
push
pop
sub
add
push
or
and
adc
add
push
add
push
arpl
cld
adc
add
push
add
push
pop
sub
add
push
or
and
adc
add
push
add
push
pop
sub
add
push
and
add
add
sub
add
outs
aam
add
add
or
add
sub
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
sub
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
add
add
or
outs
jne
add
sub
add
add
(bad)
(bad)
jmp
mov
add
sub
push
and
add
or
jae
add
or
add
add
xor
add
add
add
add
add
sub
add
add
inc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
add
sub
push
and
add
or
add
or
add
or
inc
add
add
add
add
and
pusha
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
pusha
add
sub
push
add
cmp
add
add
add
or
add
xor
add
add
add
add
add
and
add
sub
push
and
add
or
add
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
outs
fld
add
and
inc
add
add
idiv
(bad)
inc
jae
add
or
add
add
or
sbb
add
add
add
add
and
add
sub
push
and
add
or
arpl
add
sub
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
outs
mov
or
add
add
(bad)
(bad)
inc
jae
add
or
add
or
push
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
or
cmp
add
add
add
add
or
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
and
pop
add
push
and
add
jp
add
add
or
sbb
add
add
add
add
adc
add
sub
add
xor
add
mov
add
add
inc
add
or
add
or
xor
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
add
mov
add
and
pusha
add
sub
push
and
add
jp
add
or
and
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
mov
add
add
inc
add
or
add
add
xor
add
add
add
adc
push
(bad)
push
pop
add
sbb
add
or
adc
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
sbb
or
pop
add
push
and
add
jp
add
xor
add
add
add
add
add
and
adc
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
mov
add
add
inc
add
or
add
xor
add
add
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
add
or
add
jp
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
add
xor
add
add
add
add
add
and
add
sub
push
and
add
add
jge
add
add
add
cmp
add
add
add
adc
add
mov
add
adc
jnp
add
add
or
movs
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
push
and
add
sub
sbb
add
add
idiv
(bad)
inc
jnp
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
push
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
sub
add
push
sub
xor
add
add
add
add
add
sub
add
xor
add
sub
add
and
add
sbb
add
sub
add
adc
add
add
add
dec
add
or
add
and
cmp
push
outs
retf
or
add
or
and
add
sub
add
and
add
sub
add
or
add
or
add
and
add
and
outs
arpl
add
and
adc
add
add
pop
adc
sub
adc
outs
add
adc
add
push
add
push
pop
adc
mov
jno
(bad)
jmp
sub
add
sub
add
or
add
xor
add
sub
add
sub
sub
add
add
add
add
dec
jge
adc
add
add
mov
add
add
xor
add
add
adc
xor
add
sub
add
or
sub
add
and
and
adc
add
push
add
push
adc
jo
add
or
add
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
or
add
or
fiadd
or
add
or
mov
adc
add
push
add
push
sub
add
or
add
or
inc
add
add
idiv
(bad)
inc
and
add
sub
add
pop
or
add
inc
adc
add
push
add
push
pop
adc
add
mov
mov
add
fiadd
push
sub
add
add
add
add
and
add
add
add
add
add
xor
sub
add
adc
dec
adc
add
push
add
push
or
dec
add
or
add
or
add
or
pop
add
jge
add
fiadd
fiadd
push
sub
add
add
add
add
or
sbb
add
add
xor
int3
add
add
dec
adc
add
push
add
push
or
sub
add
and
push
and
add
sub
add
adc
cmp
push
adc
call
or
add
xchg
add
adc
fwait
add
or
push
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
dec
add
or
mov
adc
add
push
add
push
sub
add
or
add
or
and
add
sub
add
pop
or
add
fiadd
adc
and
add
push
add
push
pop
adc
adc
adc
mov
ins
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
push
sub
sbb
add
add
add
add
lea
add
add
or
mov
add
add
xor
add
add
add
sub
add
and
imul
sub
add
inc
or
push
fiadd
and
add
push
add
push
sub
sub
add
add
add
add
sbb
add
lea
add
sbb
add
pop
add
add
sub
add
and
imul
add
push
push
add
push
sub
sub
add
add
add
add
(bad)
sldt
lea
add
sbb
add
push
add
add
sub
add
and
imul
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
add
call
outs
push
add
or
fiadd
fiadd
adc
pop
sub
add
add
add
add
add
dec
dec
add
lea
add
adc
add
dec
add
add
dec
add
or
push
or
je
add
sub
add
or
call
or
add
or
js
add
sub
add
pop
or
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
adc
add
and
add
lods
add
adc
sub
add
and
imul
sub
add
call
fiadd
add
xor
add
add
add
sub
add
and
imul
(bad)
(bad)
call
sub
add
sub
and
push
add
push
call
and
add
add
xor
add
add
adc
add
or
sub
add
and
add
test
add
sub
add
adc
adc
push
add
or
test
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
or
add
add
push
add
push
pop
adc
mov
mov
inc
add
add
idiv
(bad)
inc
outs
mov
sub
add
sbb
push
add
add
scas
add
adc
mov
add
sub
add
or
jae
add
or
and
push
add
push
and
add
push
add
je
add
and
cld
add
or
std
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
push
sub
add
and
add
sub
add
sbb
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
mov
or
sub
add
and
pushf
adc
add
push
add
push
and
push
add
push
add
je
add
and
cld
add
or
std
add
or
jns
add
sbb
add
add
idiv
(bad)
inc
or
or
add
and
add
and
add
push
xor
and
push
add
push
pop
adc
sub
add
and
inc
add
add
idiv
(bad)
dec
and
add
push
ss
sbb
add
(bad)
(bad)
inc
outs
sbb
add
adc
fisttp
add
add
pop
push
sub
add
and
push
add
push
inc
out
add
sbb
add
add
(bad)
(bad)
inc
outs
sbb
add
and
push
add
or
mov
add
sub
add
adc
cmp
pop
adc
call
adc
add
push
add
push
lea
add
add
or
or
mov
push
add
push
and
adc
add
push
add
push
popf
adc
outs
xor
add
and
js
add
and
add
sub
add
ss
sbb
add
add
idiv
(bad)
call
add
outs
sbb
add
and
add
and
inc
add
add
idiv
(bad)
call
add
adc
add
push
add
push
pop
outs
pop
add
or
add
and
add
and
sub
or
int3
adc
add
push
add
push
pop
adc
adc
adc
mov
dec
(bad)
(bad)
(bad)
fimul
or
jns
add
and
xor
adc
sub
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
xor
add
add
add
add
or
jle
add
or
xor
jle
add
or
and
add
sub
push
and
add
add
test
add
pop
add
push
sub
add
or
add
or
pop
jae
add
or
outs
pop
add
or
add
and
adc
fstp
outs
pop
add
or
add
or
mov
add
pop
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
and
popa
add
sub
push
adc
aas
add
sbb
add
or
fldenv
add
pop
add
push
and
add
and
add
add
add
aam
add
sub
add
call
jle
add
or
adc
fcom
add
sub
add
call
jle
add
or
fcom
add
sub
add
(bad)
fld
add
adc
add
sub
push
and
aas
add
sbb
add
or
adc
add
push
add
push
call
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
outs
add
fiadd
es
adc
fiadd
push
sub
push
sub
add
inc
xor
add
add
add
add
out
add
add
add
push
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
or
add
push
add
push
push
dec
add
add
add
add
xor
add
add
mov
add
add
popa
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
popa
add
sub
push
sub
add
or
add
or
add
or
add
or
add
add
and
adc
add
push
add
push
push
add
xchg
add
push
sub
add
or
sbb
add
add
add
or
call
push
add
push
push
add
xchg
add
push
and
add
xor
add
add
mov
add
push
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
sub
lock
add
push
add
push
or
add
add
add
idiv
(bad)
jmp
hlt
adc
add
push
add
push
or
clc
adc
add
push
add
push
or
add
cld
adc
add
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
sub
add
adc
or
add
sub
add
and
add
sub
add
push
pusha
and
adc
add
push
add
push
adc
adc
sub
es
add
adc
add
sub
add
push
add
add
add
push
and
sbb
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
adc
and
adc
inc
add
add
idiv
(bad)
inc
sub
and
add
sub
add
sub
add
add
add
add
pop
add
add
add
xor
add
add
and
add
sub
add
sub
or
sub
add
add
(bad)
(bad)
call
sub
add
add
add
and
add
sub
add
sub
or
sub
add
xor
add
add
mov
add
adc
add
add
add
idiv
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
inc
sub
sub
add
sub
add
or
adc
add
push
add
push
or
xor
add
sub
add
or
add
xor
add
sub
add
and
adc
add
push
add
push
pop
pusha
adc
sub
es
add
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
adc
inc
adc
add
push
add
push
adc
add
push
add
push
lea
add
add
push
adc
and
add
sub
add
and
add
push
add
push
sub
add
or
push
adc
add
push
add
push
adc
push
adc
push
and
pop
add
add
inc
add
add
idiv
(bad)
call
add
or
or
push
adc
add
push
add
push
pop
inc
pop
add
add
add
add
add
add
add
add
add
cmp
add
add
add
and
add
sub
add
ss
inc
add
add
idiv
(bad)
call
push
adc
add
push
add
push
pop
loopne
sub
pusha
adc
add
push
add
push
pop
adc
sub
add
and
adc
add
push
add
push
adc
outs
jge
add
or
mov
push
add
or
or
push
add
or
push
push
add
push
adc
or
ins
adc
add
push
add
push
adc
adc
and
add
sub
add
adc
outs
data16
or
or
cmp
adc
adc
adc
pop
outs
xor
add
and
add
adc
and
add
push
add
push
pop
adc
adc
and
add
sub
add
adc
outs
data16
or
or
or
mov
add
idiv
(bad)
call
or
add
or
adc
and
add
push
add
push
sub
add
and
add
or
or
sub
fadd
sub
add
inc
sbb
add
add
add
add
icebp
add
add
add
or
add
add
xor
add
add
add
adc
add
push
add
push
lea
add
add
and
add
push
or
add
mov
add
sub
add
push
add
add
add
idiv
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
call
and
add
push
or
sub
sbb
add
add
(bad)
(bad)
jmp
nop
adc
add
push
add
push
or
xchg
adc
add
push
add
push
or
adc
add
push
add
push
and
add
push
or
add
mov
add
and
add
pop
and
push
add
push
adc
add
push
add
push
adc
push
and
push
add
push
and
add
push
sub
add
or
mov
add
sub
add
adc
lea
add
and
add
or
add
add
ficom
inc
add
add
idiv
(bad)
dec
sub
pop
lea
add
add
pop
push
adc
pop
sub
add
or
pop
sub
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
push
and
add
sub
xor
add
add
push
and
sbb
add
idiv
(bad)
call
sub
add
adc
(bad)
adc
pop
sub
sub
add
or
add
sub
add
xor
add
add
add
xchg
add
push
and
or
add
adc
pop
sub
sub
add
or
add
sub
add
xor
add
add
add
add
sub
or
sub
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
push
jae
add
or
adc
add
and
add
add
add
add
add
call
push
sub
add
or
jle
add
or
push
jae
add
or
add
or
add
add
add
add
add
mov
add
sub
add
sub
es
and
push
add
push
sub
add
mov
push
add
push
sub
sub
add
xor
add
add
push
and
or
rcl
add
push
add
push
sub
les
add
sub
add
sub
add
add
or
inc
add
add
add
add
add
enter
sub
add
sub
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
add
push
add
push
sub
add
rcl
add
sub
add
sub
sub
add
sbb
push
add
add
adc
daa
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
sub
fcom
add
sub
add
or
adc
add
idiv
(bad)
jmp
fcom
add
sub
add
or
loopne
add
sub
add
or
in
add
sub
add
or
add
call
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
inc
add
add
idiv
(bad)
jmp
lock
add
push
add
push
or
pop
pop
sub
sbb
add
(bad)
(bad)
inc
sub
fmul
sub
adc
add
add
cmp
add
add
add
sbb
or
inc
add
mov
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
jmp
hlt
adc
add
push
add
push
sub
clc
adc
add
push
add
push
or
or
cld
adc
add
push
add
push
or
add
add
sub
add
or
add
add
add
sub
add
and
adc
add
push
add
push
push
pusha
adc
sub
or
sbb
add
add
(bad)
(bad)
inc
add
or
add
sub
add
adc
adc
add
sub
add
and
add
sub
add
push
pusha
and
adc
add
push
add
push
adc
adc
sub
or
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
adc
and
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
sub
fsub
and
add
sub
add
sub
add
add
add
add
add
pop
add
add
add
xor
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
sub
sub
add
sub
add
or
or
sub
add
sub
add
or
xor
add
sub
add
or
xor
add
sub
add
or
and
and
add
pop
add
push
and
add
and
add
jo
add
pop
add
jo
add
add
sub
add
xor
add
and
add
sub
add
pop
outs
imul
adc
and
add
sub
add
or
add
or
adc
add
push
add
push
and
add
sub
add
push
pusha
adc
sub
push
adc
sub
add
add
(bad)
(bad)
inc
adc
mov
add
and
inc
add
add
idiv
(bad)
jmp
dec
adc
add
push
add
push
or
or
sub
fmul
sub
adc
add
add
or
sbb
push
add
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
push
adc
add
push
add
push
or
add
add
idiv
(bad)
jmp
pop
adc
add
push
add
push
or
pop
adc
add
push
add
push
or
pusha
adc
add
push
add
push
or
add
adc
add
push
add
push
and
add
sub
add
push
pusha
adc
sub
or
pop
add
and
ins
adc
add
push
add
push
or
or
sub
fmul
sub
add
add
add
add
arpl
cmp
add
adc
add
inc
add
add
add
jo
add
sub
add
sub
or
mov
daa
sbb
add
(bad)
(bad)
call
sub
add
add
and
add
push
add
push
sub
or
sub
add
xor
add
add
add
js
add
sub
add
or
or
jl
add
sub
add
or
adc
add
push
add
push
or
add
or
sub
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
and
add
push
and
push
add
push
push
pusha
adc
sub
or
xchg
add
add
add
(bad)
(bad)
jmp
mov
add
sub
add
adc
nop
adc
add
push
add
push
jae
add
or
add
adc
add
push
add
push
adc
pop
adc
add
add
or
add
or
add
or
push
sub
or
add
add
(bad)
(bad)
dec
adc
or
add
adc
cwde
adc
add
push
add
push
pop
adc
outs
jle
add
add
mov
add
idiv
(bad)
(bad)
ficom
inc
add
add
idiv
(bad)
inc
sub
or
add
or
add
adc
add
add
mov
add
add
xor
das
add
add
add
pushf
adc
add
push
add
push
sub
or
mov
adc
add
mov
push
add
push
sub
or
sub
sbb
or
add
movs
adc
add
push
add
push
or
push
sbb
add
add
idiv
(bad)
call
sub
add
and
push
add
push
or
lods
adc
add
push
add
push
or
add
or
sub
sub
add
push
and
outs
mov
sub
add
mov
add
sub
add
and
add
push
push
pusha
adc
sub
or
fld
add
and
push
add
push
adc
add
push
add
push
adc
and
adc
add
push
add
push
adc
pop
adc
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
xchg
add
push
and
jg
add
and
adc
add
push
add
push
jae
add
or
or
enter
sub
add
adc
sub
int3
adc
add
push
add
push
adc
pop
adc
adc
adc
jle
add
or
add
or
add
or
add
or
xchg
add
push
or
inc
add
add
idiv
(bad)
dec
adc
outs
sbb
add
and
add
adc
and
adc
add
push
add
push
pop
adc
adc
push
pop
outs
xor
adc
inc
add
add
idiv
(bad)
inc
sub
or
add
or
add
add
add
add
push
add
add
add
add
add
adc
add
add
xor
xor
add
mov
add
aam
add
sub
add
sub
or
add
sbb
add
and
add
fcom
add
sub
add
sub
push
sub
sbb
or
add
adc
add
push
add
push
or
or
loopne
add
sub
add
or
in
add
sub
add
or
add
adc
add
es
add
(bad)
(bad)
call
sub
add
es
add
push
sub
add
add
(bad)
(bad)
dec
sub
add
call
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
or
add
sub
add
adc
jle
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
xchg
add
push
or
inc
add
add
idiv
(bad)
call
add
imul
or
or
hlt
adc
add
push
add
push
bound
or
or
add
push
add
outs
pop
sub
add
and
add
or
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
sub
fmul
sub
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
add
mov
es
add
push
add
push
and
add
add
push
add
add
push
sub
add
adc
pop
add
add
add
add
test
add
and
clc
adc
add
push
add
push
adc
sub
adc
adc
call
adc
sub
es
add
add
push
and
and
adc
add
push
add
push
pop
adc
adc
adc
mov
lds
add
(bad)
(bad)
call
sub
add
add
sub
adc
and
adc
add
push
add
push
adc
sub
or
or
and
add
pop
add
push
and
add
or
add
and
and
add
pop
add
push
or
add
or
adc
add
push
and
add
adc
sub
or
add
add
sub
add
pop
adc
adc
adc
mov
popf
pop
inc
add
add
idiv
(bad)
jmp
add
add
add
lea
add
add
add
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
sub
add
and
add
sub
push
and
add
and
add
and
adc
add
push
add
push
inc
sub
xor
add
add
add
add
add
sub
add
add
xor
add
add
add
mov
add
fiadd
fiadd
and
bound
add
pop
add
push
and
add
sub
add
and
add
sub
push
add
xor
add
and
add
and
add
mov
add
fiadd
and
adc
add
push
add
push
sub
sub
add
add
add
add
or
add
add
add
or
xor
add
add
or
push
add
add
add
add
outs
sbb
add
and
add
sub
add
xor
add
add
add
add
add
add
add
jo
add
sub
add
add
xor
add
add
add
outs
add
or
add
sub
push
outs
push
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
and
add
and
inc
add
add
idiv
(bad)
inc
sub
add
or
inc
add
add
idiv
(bad)
jmp
add
jle
add
add
sub
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
mov
add
outs
test
or
inc
add
add
idiv
(bad)
inc
adc
outs
add
or
inc
add
add
idiv
(bad)
jmp
add
push
add
and
pop
add
push
and
add
and
add
and
add
or
xor
add
sub
add
outs
jo
add
and
dec
add
or
sbb
add
add
idiv
(bad)
inc
jae
add
or
add
and
add
sub
add
push
adc
inc
add
add
idiv
(bad)
dec
outs
jb
add
pop
sub
add
and
add
bound
add
pop
add
push
and
add
sub
add
lea
add
adc
add
push
add
push
sub
or
add
mov
adc
add
push
add
push
add
adc
add
push
add
push
jle
add
add
adc
add
push
add
push
sub
add
outs
jbe
add
mov
add
mov
adc
add
push
add
push
or
adc
add
push
add
push
or
mov
add
and
add
mov
adc
add
push
add
push
add
adc
or
push
adc
adc
inc
add
add
idiv
(bad)
call
add
add
fiadd
fiadd
sub
add
add
add
add
cmp
add
mov
add
out
add
add
add
add
add
push
add
add
add
add
add
sbb
add
arpl
add
mov
pop
adc
add
push
add
push
sub
add
or
fs
add
push
add
push
and
ins
adc
add
push
add
push
and
add
add
or
gs
sub
add
pop
push
pop
sub
add
and
add
or
(bad)
and
add
push
add
push
push
fiadd
or
add
adc
add
add
add
add
lea
add
adc
add
add
add
adc
add
or
add
js
add
sub
add
lea
add
add
add
add
jl
add
sub
add
and
push
add
push
popf
adc
jge
add
and
add
add
push
add
push
adc
cmp
add
or
mov
add
push
add
push
lea
add
add
pop
adc
and
add
push
and
push
add
push
popf
adc
outs
jge
add
and
imul
sub
add
xor
or
cwde
adc
add
push
add
push
call
or
pushf
adc
add
push
add
push
call
outs
jg
add
adc
and
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
es
sub
xor
add
add
add
add
add
add
add
push
and
add
push
and
add
push
and
add
sub
sbb
add
add
add
adc
add
or
and
and
add
pop
add
push
and
add
cmp
add
and
add
push
and
aas
add
or
pop
adc
sub
add
and
outs
dec
add
push
and
imul
add
add
mov
add
sub
push
and
add
and
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
push
outs
add
sub
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
push
sub
add
add
add
add
xor
je
add
add
add
add
add
mov
add
add
add
jg
add
sub
push
and
add
sbb
add
push
and
add
ins
add
sub
push
and
add
cmp
add
and
add
fbld
add
sub
push
and
add
cmp
add
xor
add
aad
add
sub
push
xor
add
fadd
add
push
and
add
cmc
add
sub
push
cmp
add
push
test
add
pop
add
push
cmp
add
movs
pop
add
sub
add
cmp
add
test
add
sub
add
cmp
add
lods
pop
add
sub
add
cmp
sub
add
xor
add
add
add
add
and
add
push
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
sub
lods
adc
add
push
add
push
sub
xor
add
add
adc
add
and
add
sub
push
and
add
add
jb
add
jo
sahf
add
push
and
inc
add
or
dec
add
or
push
add
or
add
add
jb
add
jo
add
push
dec
add
add
add
or
mov
add
sub
add
sub
es
sub
adc
push
add
add
adc
loop
add
sub
push
or
add
add
jle
add
or
mov
add
sub
add
sub
and
add
sub
push
and
add
add
xor
add
and
add
jle
add
add
jle
add
or
mov
push
add
push
sub
es
cmps
arpl
add
pop
add
push
and
add
add
xor
add
and
add
pop
jle
add
or
dec
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
or
add
or
dec
add
or
inc
add
add
idiv
(bad)
jmp
push
add
or
and
arpl
add
pop
add
push
and
add
add
xor
add
sub
sub
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
dec
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
dec
or
xor
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
dec
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
inc
or
imul
xor
add
push
dec
add
add
add
or
mov
push
add
push
sub
es
add
add
jle
add
or
add
push
dec
add
add
add
or
add
sub
add
sub
es
sbb
push
add
add
adc
add
jle
add
add
jne
add
ds
sub
push
and
add
and
add
sub
push
and
add
or
add
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
sub
hlt
add
push
or
outs
aas
add
or
add
mov
add
inc
add
or
imul
add
outs
dec
add
push
jle
add
add
cmp
add
and
add
sub
push
and
add
and
and
add
sub
add
jne
add
ds
sub
push
and
adc
add
push
add
push
sub
es
sbb
add
add
idiv
(bad)
jmp
xchg
add
sub
push
push
sub
add
or
mov
add
sub
and
pop
add
push
and
add
or
add
push
or
sub
add
and
(bad)
call
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
and
pop
add
push
and
add
jle
add
or
or
add
adc
add
add
ret
push
add
add
sbb
push
add
add
ret
add
adc
add
or
sub
pop
add
outs
xchg
add
or
add
sub
push
and
enter
sub
add
xor
add
sub
push
and
add
and
and
add
sub
push
and
add
or
add
and
add
adc
cmp
add
push
outs
pop
add
or
add
adc
outs
jne
add
and
add
sub
add
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
adc
and
add
push
sub
add
or
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
or
add
data16
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
adc
data16
sub
push
and
add
and
add
and
add
and
rcl
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
add
jge
add
sub
push
outs
pusha
add
or
inc
add
add
idiv
(bad)
inc
and
pop
add
push
and
jge
add
sub
push
and
add
and
add
and
pop
and
adc
add
push
add
push
das
dec
adc
fwait
data16
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
pop
add
push
and
fwait
data16
sub
push
and
add
and
add
or
push
outs
popa
add
or
nop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
idiv
(bad)
call
push
outs
add
pop
and
adc
add
push
add
push
aas
cmp
and
data16
sub
push
and
add
or
add
and
add
and
out
add
add
pop
outs
pop
add
or
add
adc
add
and
adc
add
push
add
push
cmp
add
add
inc
add
add
idiv
(bad)
call
add
add
add
(bad)
(bad)
inc
sub
add
or
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
or
add
add
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
inc
adc
add
pop
add
push
and
add
outs
sbb
add
and
add
and
and
add
sub
push
outs
pusha
add
or
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
and
jge
add
sub
push
and
add
sub
add
or
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
pop
sub
adc
outs
add
fiadd
fiadd
and
add
sub
push
and
add
or
mov
add
push
sub
inc
dec
add
add
add
imul
add
jmp
add
add
add
add
add
add
or
add
add
add
push
add
add
add
dec
add
add
add
add
add
adc
push
add
add
add
add
adc
sub
add
or
add
add
(bad)
(bad)
call
sub
add
add
and
add
and
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
sub
outs
mov
add
and
add
or
add
and
in
add
sub
add
sub
and
adc
add
push
add
push
(bad)
fld
add
adc
or
in
adc
add
push
add
push
and
add
sub
push
and
and
adc
add
push
add
push
outs
pop
add
or
or
add
push
add
push
adc
cmp
add
add
or
pop
outs
mov
add
and
add
or
add
or
add
sbb
add
(bad)
(bad)
inc
and
adc
add
push
add
push
(bad)
fld
add
adc
adc
and
adc
add
push
add
push
and
pop
add
push
and
and
adc
add
push
outs
pop
add
or
add
add
sub
add
call
adc
mov
or
add
push
ds
add
add
inc
add
add
idiv
(bad)
dec
and
add
push
call
sub
add
adc
and
add
push
adc
or
add
or
add
sbb
add
add
(bad)
(bad)
call
add
add
push
add
push
pop
and
add
push
arpl
or
or
and
add
push
cmp
inc
add
add
idiv
(bad)
call
add
dec
add
sub
push
outs
inc
add
or
or
and
add
sub
add
inc
sub
and
adc
add
push
sub
and
add
push
adc
adc
add
push
add
push
pop
and
add
push
inc
adc
sub
adc
sub
es
adc
adc
adc
adc
add
sub
add
idiv
(bad)
call
pop
sub
sbb
add
add
(bad)
(bad)
call
or
or
cmp
add
push
adc
fnstsw
add
adc
adc
fidiv
jne
add
and
add
push
xor
sbb
add
add
(bad)
(bad)
dec
and
add
sub
add
call
add
or
inc
add
add
idiv
(bad)
call
or
or
das
adc
and
add
push
add
push
pop
adc
adc
adc
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
dec
adc
add
push
sub
or
add
sbb
pop
add
add
adc
add
or
push
adc
jle
add
add
imul
add
and
add
adc
jle
add
add
imul
add
outs
test
add
adc
jle
add
add
imul
add
and
add
adc
jle
add
add
imul
add
and
add
adc
or
outs
add
sub
push
and
pop
add
push
jae
add
or
pop
outs
pop
add
or
add
adc
cmp
add
add
pop
outs
pop
add
or
add
or
cmp
inc
add
add
idiv
(bad)
call
sub
add
or
add
add
pusha
add
or
inc
add
add
idiv
(bad)
inc
jle
add
add
jle
add
add
pusha
add
or
add
and
add
or
add
add
pusha
add
or
add
jle
add
add
pusha
add
or
add
or
add
or
add
add
pusha
add
or
jle
add
add
jle
add
add
pusha
add
or
add
and
add
sub
add
and
add
sub
add
outs
xor
add
and
add
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
pop
sub
adc
outs
add
fiadd
fiadd
adc
and
add
sub
push
and
add
sub
push
jae
add
or
add
add
pop
add
or
add
and
out
add
adc
outs
pop
add
or
add
adc
add
add
inc
add
add
idiv
(bad)
call
add
add
pusha
add
or
add
sbb
add
add
(bad)
(bad)
call
add
add
pusha
add
or
add
and
add
sub
push
and
add
and
add
adc
add
pusha
add
or
add
and
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
add
add
pusha
add
or
add
and
add
sub
add
lea
add
add
or
or
pop
adc
add
push
and
add
sub
add
popf
adc
outs
jge
add
and
adc
outs
popa
add
or
push
(bad)
(bad)
(bad)
fimul
or
adc
outs
add
or
lods
add
add
inc
add
add
idiv
(bad)
inc
jle
add
add
fs
add
push
(bad)
fld
add
adc
adc
and
add
sub
add
or
ins
adc
add
push
call
add
sub
add
and
xor
add
pop
add
push
and
and
add
push
add
push
or
js
add
sub
add
call
add
sub
add
and
xor
add
pop
add
push
and
and
push
add
push
or
test
add
push
call
add
and
add
fiadd
fiadd
push
sub
inc
add
add
add
xchg
add
add
add
add
add
add
add
sub
add
xchg
add
add
add
add
add
add
add
lds
add
stc
add
add
add
add
add
jle
add
add
add
inc
add
add
xor
add
add
add
add
and
push
add
push
add
cmp
add
and
add
add
mov
add
push
sub
sub
xor
add
add
adc
dec
push
add
push
and
add
or
add
jae
add
or
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
and
adc
inc
add
add
idiv
(bad)
inc
outs
mov
add
and
or
outs
sbb
add
and
add
fiadd
and
pop
add
push
and
add
or
add
push
sub
adc
add
add
add
pop
add
inc
add
add
xor
add
add
adc
add
jo
jle
add
add
outs
dec
add
push
and
add
cmp
add
and
add
sub
push
and
add
or
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
outs
sbb
add
and
add
add
inc
add
add
idiv
(bad)
call
add
add
pop
add
push
and
add
and
add
add
pop
add
push
and
add
and
add
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
sbb
add
sub
push
and
and
pop
add
push
and
and
adc
add
pop
add
push
and
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
dec
add
push
jle
add
add
cmp
add
jle
add
or
call
pop
cmp
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
add
and
punpckhwd
add
pop
add
push
outs
push
es
and
add
push
cs
sbb
add
add
(bad)
(bad)
inc
and
push
add
push
outs
mov
add
and
add
sub
add
pop
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
or
or
xor
add
and
adc
sbb
add
pop
add
push
adc
xor
add
and
add
fiadd
push
sub
inc
sbb
add
add
add
add
add
add
add
add
inc
add
add
xor
aam
add
enter
jae
add
or
add
dec
add
or
add
pushf
adc
add
push
adc
add
add
add
jg
add
or
add
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
into
add
push
and
imul
add
and
add
or
add
or
and
add
and
outs
mov
add
and
outs
lea
add
and
inc
add
add
idiv
(bad)
inc
or
outs
push
add
or
add
or
add
add
push
add
push
pop
adc
mov
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
adc
add
or
add
dec
add
or
add
movs
adc
add
push
adc
add
add
add
mov
add
sbb
add
add
idiv
(bad)
call
sub
add
or
add
or
sub
add
and
inc
add
add
idiv
(bad)
dec
outs
push
add
or
add
and
imul
add
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
inc
or
add
or
inc
add
add
idiv
(bad)
inc
or
outs
push
add
or
add
adc
add
push
add
push
pop
adc
mov
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
adc
add
xchg
add
add
add
adc
push
add
or
and
add
push
adc
pop
or
add
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
mov
add
and
adc
add
push
outs
mov
add
sub
sbb
add
add
idiv
(bad)
inc
outs
push
add
or
add
or
sub
add
mov
add
sub
add
pop
adc
add
mov
fwait
sbb
add
(bad)
(bad)
call
add
add
adc
xor
add
add
adc
jne
add
sub
push
and
add
add
xor
add
or
jae
add
or
pop
outs
pop
add
or
pop
add
or
pop
cmp
pop
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
adc
and
add
push
jle
add
or
adc
add
push
jle
add
or
or
enter
sub
push
and
pop
add
or
add
adc
sbb
add
(bad)
(bad)
call
sub
add
adc
les
add
push
call
pop
add
push
and
enter
sub
add
call
adc
fidiv
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
(bad)
(bad)
call
pop
outs
add
jle
add
or
adc
sub
add
add
add
xor
int3
cld
add
add
add
sbb
add
jmp
add
adc
jne
add
sub
push
add
xor
add
and
pop
add
or
outs
pop
add
or
pop
add
or
pop
cmp
add
adc
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
adc
and
adc
add
push
jle
add
or
or
loop
add
sub
push
and
pop
add
or
or
add
and
add
add
add
idiv
(bad)
call
sub
add
adc
aam
add
sub
add
call
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
idiv
(bad)
call
pop
outs
add
jle
add
or
adc
sub
add
add
add
add
xor
call
add
xor
add
add
add
add
adc
fcom
add
push
or
shr
add
pop
add
push
add
cmp
add
and
add
add
dec
add
or
add
add
push
add
push
adc
sub
add
or
add
idiv
(bad)
call
sub
add
or
add
or
sub
add
and
or
add
pop
add
push
and
add
or
add
or
add
or
loopne
add
sub
add
or
push
and
adc
add
push
pop
adc
adc
adc
sbb
add
(bad)
(bad)
inc
sub
add
sub
push
add
cmp
add
and
add
fisubr
or
add
pop
add
push
and
add
or
add
and
adc
add
push
adc
add
sub
add
add
add
add
and
lods
iret
add
fadd
add
sbb
add
add
add
adc
sub
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
imul
sub
push
and
add
and
adc
add
push
sub
add
or
push
add
add
or
add
add
or
add
or
sub
add
adc
inc
add
add
idiv
(bad)
inc
outs
cmps
add
or
lock
add
push
or
cmp
sub
push
and
sub
mov
add
and
adc
add
push
or
add
add
add
add
aaa
add
add
inc
add
add
xor
xlat
add
add
add
adc
sub
add
or
add
idiv
(bad)
call
sub
add
es
ins
add
sub
push
sub
adc
add
push
sub
pop
ins
add
sub
push
add
cmp
add
and
add
and
add
push
and
add
or
add
add
cld
adc
add
push
sub
add
push
and
outs
add
sub
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
sub
adc
cwde
outs
add
sub
push
and
cmp
add
and
add
and
push
add
sub
add
adc
or
push
add
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
adc
push
add
add
add
add
add
sub
add
adc
adc
adc
sub
add
push
es
outs
add
sub
push
and
add
mov
add
sub
add
or
add
and
push
add
sub
add
adc
fimul
pop
and
ins
add
sub
push
and
pop
sub
sub
fisub
and
add
sub
push
sub
mov
add
sub
add
or
mov
add
fsub
or
add
sub
add
sub
or
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
retf
add
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
ins
add
sub
push
and
add
and
push
add
sub
add
sub
mov
pop
add
push
and
add
or
add
add
adc
add
sub
add
sub
add
push
and
outs
add
sub
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
and
outs
add
sub
push
jle
add
or
add
or
add
and
cwde
outs
add
sub
push
adc
cmp
add
sub
push
add
sub
add
adc
or
push
add
adc
add
add
add
add
and
adc
adc
adc
and
add
sub
add
adc
adc
adc
sub
add
push
and
outs
add
sub
push
sub
push
add
add
xor
add
sub
push
add
sub
add
adc
fimul
pop
and
outs
add
sub
push
and
sub
or
add
fiadd
fisub
and
add
sub
push
and
add
and
add
sub
add
or
mov
add
fsub
and
add
sub
add
sub
or
add
add
add
add
cmp
add
inc
add
add
add
pop
add
add
add
add
add
cmp
add
popa
add
add
add
add
add
add
xor
adc
add
into
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
ins
add
sub
push
and
add
adc
(bad)
adc
adc
sub
pop
ins
add
sub
push
and
add
or
mov
add
and
add
push
and
add
or
add
add
sub
add
sub
add
sub
add
push
or
sbb
pop
add
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
sub
adc
cwde
outs
add
sub
push
and
cmp
add
and
add
and
add
sub
add
adc
or
push
add
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
and
add
add
add
xor
add
sub
add
adc
adc
adc
sub
add
push
and
pop
sub
push
add
pop
sbb
add
add
(bad)
(bad)
call
add
add
add
xor
add
sub
add
sub
add
push
and
jnp
add
add
or
or
add
and
jo
add
pop
add
push
adc
mov
add
add
xor
add
sub
jae
add
or
or
push
ficomp
adc
and
ins
add
sub
push
add
or
xchg
add
or
add
fiadd
fisub
and
jo
add
pop
add
push
sub
add
push
and
add
sub
add
or
add
fcom
or
adc
adc
adc
sub
add
add
add
add
cmp
add
mov
add
rol
add
add
add
add
add
add
cmp
add
test
add
loope
add
and
add
add
add
adc
add
push
add
add
add
adc
add
or
push
outs
xchg
add
or
add
sub
add
outs
mov
outs
xchg
add
or
add
sub
add
outs
xchg
add
or
outs
xchg
add
or
add
sub
add
outs
xchg
add
or
outs
xchg
add
or
add
sub
add
outs
mov
outs
xchg
add
or
outs
mov
outs
xchg
add
or
add
or
outs
cmps
add
or
add
or
cmp
add
push
outs
xchg
add
or
add
and
outs
xchg
add
or
add
or
sub
add
or
or
add
or
call
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
call
cmp
add
and
and
add
and
inc
add
add
idiv
(bad)
inc
or
add
or
push
outs
dec
add
or
(bad)
inc
outs
xchg
add
or
add
or
(bad)
inc
outs
call
cwde
add
or
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
outs
sbb
add
sub
add
add
or
adc
add
add
add
sub
and
add
sub
add
inc
sub
xor
add
add
add
adc
(bad)
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
add
push
sub
das
jno
add
pop
add
push
and
add
sub
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
add
mov
es
sbb
add
add
(bad)
(bad)
inc
sub
push
push
add
sub
add
sub
adc
add
xor
add
adc
sub
push
jle
add
or
std
add
or
add
rol
push
and
add
sub
add
or
and
add
push
add
push
sub
add
add
or
push
add
add
pop
push
add
sub
add
sub
es
add
pop
add
push
and
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
and
jno
add
pop
add
push
and
add
and
or
adc
add
add
add
sub
add
push
and
add
dec
add
or
or
adc
add
add
add
sub
add
push
and
add
dec
add
or
add
add
or
adc
add
add
add
sub
add
push
jle
add
add
dec
add
or
adc
add
je
add
add
add
jle
add
add
je
add
dec
add
sub
push
sub
or
sub
add
or
and
jno
add
pop
add
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
push
add
pop
add
push
and
add
cmp
add
and
add
and
add
sub
add
sub
xor
add
add
jle
add
add
jne
add
and
add
sub
push
and
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
sub
and
jb
add
pop
add
push
and
add
and
xor
add
add
rol
add
and
jb
add
pop
add
push
and
add
sub
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
sub
add
push
and
sbb
add
push
and
add
and
add
add
idiv
(bad)
jmp
and
add
sub
add
sub
add
or
add
add
dec
add
or
add
sub
push
and
add
or
mov
pop
add
push
and
add
or
add
jle
add
add
je
add
dec
add
sub
push
and
add
sub
jle
add
add
je
add
fnstenv
add
pop
add
push
pop
jle
add
add
clc
jb
add
pop
add
push
and
add
push
sub
es
add
add
je
add
adc
add
pop
add
push
and
add
add
cmp
add
sub
push
and
add
and
add
push
es
add
add
je
add
pop
jae
add
pop
add
push
and
xchg
add
push
and
add
add
je
add
jl
add
sub
push
and
add
and
sub
add
or
add
and
add
push
and
add
add
je
add
xchg
jae
add
pop
add
push
pop
jle
add
add
stos
jae
add
pop
add
push
and
add
and
add
push
and
add
add
je
add
mov
add
sub
push
and
add
sub
es
add
add
je
add
(bad)
jae
add
pop
add
push
and
add
sub
push
and
add
ins
push
add
sub
add
outs
imul
jae
add
pop
add
push
sub
add
or
add
push
and
add
add
je
add
std
jae
add
pop
add
push
and
add
sub
push
and
add
jo
add
sub
add
outs
imul
add
or
add
push
and
add
add
je
add
sbb
sub
push
and
add
sub
push
and
add
je
add
sub
add
outs
imul
and
jae
add
pop
add
push
and
add
push
sub
es
add
add
je
add
xor
sub
push
and
add
sub
add
push
sub
imul
add
add
inc
je
add
pop
add
push
and
add
push
add
push
push
sub
imul
add
add
and
add
sub
push
and
add
sub
push
and
add
sub
add
sub
es
push
je
add
pop
add
push
and
add
sub
add
xor
add
add
adc
loope
add
or
sub
add
or
add
sub
push
and
add
or
add
push
sub
add
or
sub
add
add
(bad)
(bad)
call
sub
add
and
jne
add
pop
add
push
and
dec
jne
add
pop
add
push
and
add
or
add
pop
or
or
outs
sbb
add
and
add
fiadd
and
add
push
sub
sub
add
adc
add
add
add
add
inc
add
add
xor
add
add
adc
jg
add
sub
push
and
add
cmp
add
sub
add
add
je
add
fnstenv
add
pop
add
push
sub
and
jne
add
pop
add
push
and
add
or
mov
add
push
sub
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
push
and
imul
add
and
push
add
push
outs
jbe
add
and
mov
add
sub
add
xor
push
and
push
add
push
pop
and
add
push
pop
outs
xor
add
and
cwde
push
add
sub
add
lea
add
add
and
add
push
and
push
add
push
popf
or
movs
push
add
sub
add
and
push
add
push
popf
or
lods
push
add
sub
add
and
push
add
push
popf
or
add
or
jne
add
pop
add
push
and
add
or
add
push
sub
add
adc
pop
add
add
add
adc
adc
add
sub
push
and
add
add
xor
add
and
add
add
sahf
add
or
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
sub
and
push
add
push
adc
sub
add
and
jbe
add
pop
add
push
adc
sub
push
add
add
xor
add
sub
jbe
add
pop
add
push
and
add
and
add
sub
add
or
mov
add
add
xchg
add
add
add
(bad)
(bad)
call
add
adc
adc
or
xchg
add
or
add
add
and
add
push
adc
and
push
add
sub
add
and
push
add
sub
add
adc
sub
es
ja
add
pop
add
push
and
lahf
add
or
xor
add
and
add
and
pop
add
push
and
add
mov
add
sub
add
or
add
pop
sub
sub
xor
ins
add
add
add
adc
add
or
adc
add
enter
sub
add
sub
add
push
or
sub
add
sub
push
sub
mov
add
sub
add
or
add
jle
add
or
and
js
add
pop
add
push
and
lahf
add
or
add
sub
add
or
add
push
sub
xor
add
add
add
adc
in
add
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
adc
idiv
(bad)
jmp
out
add
push
and
adc
inc
add
add
idiv
(bad)
jmp
hlt
add
push
or
sub
xor
add
add
add
adc
out
add
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
adc
idiv
(bad)
jmp
jmp
or
sub
add
and
add
sbb
add
out
add
(bad)
add
adc
aas
js
add
pop
add
push
and
push
add
sub
add
lea
push
add
or
pop
add
or
outs
pop
add
or
pop
add
or
outs
adc
outs
pop
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
cmp
sub
push
and
add
jne
add
add
add
add
and
add
and
add
inc
add
or
add
outs
sub
es
and
push
add
sub
add
adc
outs
popa
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
idiv
(bad)
call
push
outs
add
and
push
add
sub
add
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
and
pop
add
push
and
add
and
or
inc
add
add
add
add
xchg
js
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
sub
add
push
and
push
add
sub
add
sub
add
add
or
adc
add
add
add
and
js
add
pop
add
push
and
add
and
or
adc
add
add
add
and
js
add
pop
add
push
and
add
sub
add
xor
add
add
add
add
sub
add
push
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
or
sub
add
add
(bad)
(bad)
jmp
out
add
push
and
add
xor
add
add
xlat
add
adc
mov
mov
and
push
add
sub
add
or
call
or
add
sub
add
xor
sbb
add
(bad)
(bad)
call
sub
add
es
push
add
sub
add
or
sub
and
push
add
sub
add
pop
or
xor
add
idiv
(bad)
jmp
in
push
add
sub
add
sub
sub
add
xor
add
add
add
adc
outs
add
sub
push
and
add
sub
push
jae
add
or
pop
add
or
add
and
add
sub
add
inc
or
push
es
push
add
sub
add
or
add
sub
adc
add
add
add
cmp
push
inc
add
add
xor
add
add
fadd
add
sub
mov
es
clc
push
add
sub
add
or
call
or
add
and
add
sub
add
xor
add
push
add
push
or
xor
and
add
sub
add
pop
or
xor
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
add
sub
sub
add
adc
add
cmp
add
adc
lock
push
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
adc
inc
add
add
idiv
(bad)
jmp
repnz
push
and
add
add
xor
push
add
add
add
jle
add
add
bound
add
pop
add
push
and
add
and
imul
jns
add
pop
add
push
sub
das
jle
add
add
arpl
add
pop
add
push
and
add
sub
add
fdivr
add
pop
add
push
and
add
sub
or
add
sub
add
sub
add
xor
add
add
add
add
add
add
add
adc
add
pop
add
push
and
add
and
add
xor
add
add
add
add
jle
add
add
fnstsw
add
pop
add
push
and
add
and
imul
jl
add
pop
add
push
and
add
and
imul
jl
add
pop
add
push
and
add
and
pop
add
sub
add
sub
xor
inc
add
add
add
and
add
sub
push
and
add
sub
push
and
add
sub
add
outs
pop
add
or
adc
add
sub
add
inc
or
push
and
pop
add
sub
add
or
add
sub
add
adc
add
add
add
add
inc
add
add
xor
add
add
add
add
sub
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
add
add
or
pop
add
add
add
add
add
add
cmp
pop
add
push
and
add
sub
sbb
add
mov
add
fld
add
sub
add
push
or
je
add
sub
push
and
add
or
xor
add
and
add
push
outs
aas
add
or
adc
sub
add
and
add
add
outs
dec
add
push
and
add
sub
push
sub
add
or
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
or
adc
sub
add
sub
add
add
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
and
pop
add
sub
add
sub
sub
add
add
add
xor
cbw
add
add
add
add
or
pop
add
add
add
add
add
add
loop
add
sub
push
and
add
sub
add
or
push
add
add
add
add
add
add
and
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
push
jle
add
pop
add
push
and
add
and
pop
add
sub
add
sub
add
adc
add
add
add
jle
add
add
loop
add
sub
push
and
pop
add
push
sub
push
sub
add
or
imul
jle
add
pop
add
push
and
add
sub
push
and
add
and
sbb
add
aam
add
fiadd
add
add
dec
add
or
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
add
sub
jmp
pop
add
push
and
add
or
add
add
cmps
add
or
add
sub
add
sub
add
adc
adc
dec
add
or
add
fiadd
adc
add
push
add
push
pop
adc
mov
fadd
sub
or
adc
and
add
sub
add
adc
sub
push
adc
call
push
adc
and
pop
add
sub
add
pop
adc
adc
adc
mov
fcomp
add
(bad)
(bad)
jmp
cmp
add
sub
add
sub
adc
add
add
or
add
add
or
add
inc
add
add
add
add
sub
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
sub
sub
add
push
and
cmps
add
or
add
fiadd
and
add
push
add
push
sub
add
add
add
add
das
add
aaa
add
inc
add
add
xor
jno
add
fild
add
and
add
sub
add
sub
add
or
add
sub
push
and
add
and
test
add
and
mov
add
and
add
or
add
and
or
inc
jg
add
pop
add
push
and
add
or
add
fiadd
and
add
push
add
push
sub
sub
add
add
add
add
add
dec
dec
add
add
add
xor
jecxz
add
fadd
add
and
add
sub
add
sub
add
or
add
sub
push
sub
or
test
add
or
add
or
adc
add
push
add
push
adc
sub
add
or
add
or
add
or
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
pop
add
push
and
add
or
add
sub
or
outs
pop
add
or
push
and
add
sub
add
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
inc
or
add
or
add
ficomp
adc
(bad)
jg
add
pop
add
push
and
xor
add
and
add
fiadd
sub
add
add
add
add
(bad)
les
push
inc
add
add
xor
sub
add
fld
add
add
add
or
push
rcl
add
add
inc
add
or
add
and
add
or
outs
sbb
add
and
adc
add
pusha
add
add
add
adc
lea
add
and
mov
add
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
pop
add
and
add
and
add
sub
add
inc
fs
add
sub
add
inc
sub
push
push
add
push
sub
xor
add
add
fiadd
add
sub
or
outs
mov
add
and
add
push
add
push
xor
outs
pop
add
outs
xchg
add
or
add
sub
add
xor
sbb
add
(bad)
(bad)
call
sub
add
es
outs
pop
add
and
add
and
add
push
add
push
inc
js
add
sub
add
inc
sub
jl
add
sub
add
sub
sbb
add
aam
add
fild
add
and
jg
add
pop
add
push
and
add
sub
add
lea
push
add
or
pop
add
or
outs
pop
add
or
pop
add
or
jo
push
outs
pop
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
pop
add
sub
push
and
add
and
add
adc
add
lods
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
adc
sub
adc
outs
popa
add
or
push
sub
adc
outs
add
and
push
add
push
sub
add
add
add
or
add
add
xor
sti
add
add
add
adc
add
push
adc
rol
add
cmp
add
push
and
add
and
add
sub
push
and
rol
add
cmp
add
and
add
and
add
push
or
add
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
sub
pop
add
sub
add
sub
loope
add
sub
push
and
add
and
add
sub
push
pop
outs
scas
add
or
add
sub
add
or
add
pop
outs
scas
add
or
add
sub
add
or
add
pop
outs
scas
add
or
add
and
int
add
adc
sub
jae
add
push
adc
add
add
add
add
or
add
or
add
dec
add
add
and
rol
add
push
add
add
xor
add
and
add
and
pop
add
push
and
rol
add
cmp
add
and
add
adc
push
popa
add
push
jae
add
or
add
or
add
and
add
add
adc
add
cmp
add
sub
cwde
pop
add
sub
add
outs
mov
add
and
add
sub
push
and
rol
add
cmp
add
sub
sub
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficomp
adc
(bad)
push
inc
add
sbb
add
or
and
add
push
or
push
and
push
add
push
or
add
sub
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
das
add
add
add
add
sub
add
add
add
jb
add
jo
cmps
add
add
jae
add
or
add
add
jae
add
or
add
add
add
xor
add
add
add
add
and
pop
add
push
and
add
pop
xchg
add
pop
add
push
jle
add
add
cmp
add
and
and
add
pop
add
push
jle
add
add
cmp
add
and
add
mov
test
add
sub
push
sub
add
or
add
pop
add
jo
movs
add
add
add
xor
add
add
add
add
add
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
jle
add
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
mov
outs
sub
add
pop
add
push
and
add
and
jae
add
or
add
add
add
fiadd
add
add
add
add
add
adc
add
add
push
push
add
inc
add
add
xor
add
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
add
add
add
add
or
dec
add
add
add
add
sub
add
push
and
add
push
and
add
sub
and
pop
add
push
sub
pop
add
sub
add
sub
pop
test
add
pop
add
push
and
add
and
add
push
sub
add
sbb
add
add
add
adc
add
add
mov
push
add
push
sub
and
pop
add
push
and
add
or
add
push
sub
add
or
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
sub
pop
and
pop
add
push
and
add
and
add
fiadd
add
and
add
cmp
add
sub
and
das
add
sub
push
and
add
and
add
sub
add
push
and
add
add
cmp
add
and
add
add
add
add
xor
add
sub
push
and
add
and
mov
push
add
push
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
and
pop
add
sub
add
pop
outs
imul
or
add
and
or
add
or
add
add
and
add
jl
add
sub
push
and
sbb
add
and
add
sub
add
jnp
add
add
and
add
sub
push
jle
add
add
add
or
add
add
add
add
add
repnz
and
and
add
add
or
cmp
add
add
add
add
add
add
sar
add
sub
push
sub
or
add
push
and
add
sub
push
and
add
sub
or
or
cmp
add
add
add
add
add
add
sar
add
sub
push
and
add
and
add
and
add
sub
push
and
add
and
add
and
xor
add
add
add
add
add
sub
add
push
sub
add
and
add
or
push
add
add
add
add
sub
add
sub
add
and
sbb
add
push
add
add
add
add
adc
add
and
add
fimul
or
outs
sbb
add
sub
sub
add
adc
add
add
add
str
inc
add
add
xor
fadd
add
loope
add
and
pop
add
sub
add
or
mov
add
sub
push
sub
add
push
or
add
adc
add
and
add
add
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
pop
add
add
add
enter
sub
add
outs
popf
add
push
pop
outs
sahf
add
push
and
test
add
pop
add
push
and
add
push
and
add
and
add
pop
outs
mov
add
and
inc
add
add
idiv
(bad)
inc
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
movs
add
add
int3
pop
add
sub
add
sub
rcl
add
sub
add
sub
xor
add
add
add
add
add
add
mov
outs
sub
add
pop
add
push
and
add
push
outs
sbb
add
and
pop
add
sub
add
sub
adc
test
add
and
add
sub
xor
imul
add
add
and
pop
add
push
and
add
fist
add
push
sub
add
or
or
add
and
add
and
test
add
mov
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
add
or
sub
add
add
jae
add
or
add
add
and
add
push
jge
add
add
jae
add
or
add
add
sub
add
add
xor
add
add
adc
ins
xchg
add
pop
add
push
and
add
and
pop
add
push
and
add
or
add
add
sub
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
outs
sbb
add
pop
sub
add
add
and
inc
add
add
idiv
(bad)
jmp
or
add
push
and
outs
sbb
add
pop
sub
add
push
adc
and
add
sub
add
push
sub
add
push
sub
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
inc
and
add
sub
push
outs
sbb
add
jle
add
add
call
add
and
add
cmp
add
and
add
sub
push
sub
push
sbb
add
add
(bad)
(bad)
inc
sub
add
push
jle
add
add
call
add
and
add
cmp
add
and
add
sub
push
and
add
sub
push
and
add
sub
add
sub
es
add
sub
add
sub
sbb
add
add
(bad)
(bad)
jmp
mov
add
sub
push
and
add
sub
add
and
add
push
sub
push
and
sub
add
push
add
inc
and
add
jae
add
or
test
add
test
add
mov
add
jge
add
add
call
pop
add
push
and
add
push
add
add
xor
add
sub
mov
add
and
add
add
jnp
add
add
mov
xor
inc
add
add
idiv
(bad)
jmp
jp
add
sub
push
and
outs
sbb
add
pop
sub
add
push
and
add
add
jnp
add
add
inc
add
push
and
mov
add
pop
add
push
and
add
and
pop
add
sub
add
and
pop
add
sub
add
and
pop
add
sub
add
jae
add
or
pop
add
or
jnp
add
add
adc
add
push
inc
add
add
idiv
(bad)
jmp
cli
mov
add
pop
add
push
and
add
ficomp
or
sbb
add
push
or
xor
add
and
add
fiadd
and
add
pop
add
push
sub
sbb
add
add
add
add
add
add
sbb
add
add
add
and
add
sub
push
and
add
jle
add
add
call
add
and
add
cmp
add
and
add
sub
push
and
add
and
sub
add
push
jle
add
add
call
add
and
add
cmp
add
and
pop
add
push
and
pop
add
sub
add
sub
es
add
sub
add
add
(bad)
(bad)
call
sub
add
sub
add
sub
add
push
add
push
sub
add
sub
add
and
pop
add
push
sub
or
in
pop
add
sub
add
and
pop
add
push
and
add
or
add
sub
es
and
mov
add
pop
add
push
and
add
sub
add
add
add
add
ret
ret
add
inc
add
add
xor
add
add
add
sbb
pop
add
push
and
add
add
lock
add
sub
add
jge
add
add
jnp
add
add
inc
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
pop
add
push
and
add
add
add
add
hlt
pop
add
sub
add
and
pop
add
sub
add
outs
mov
sub
add
and
cld
pop
add
sub
add
and
pop
add
push
and
add
sub
push
and
add
sub
es
add
xor
add
add
add
add
add
std
mov
add
pop
add
push
and
add
sub
add
sub
add
push
sub
add
sbb
add
add
add
adc
and
add
sub
push
and
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
jae
add
push
add
sub
add
push
jge
add
add
jnp
add
add
xor
jno
add
sub
push
and
add
and
pop
add
push
and
add
add
push
add
add
xor
add
and
add
add
and
add
or
and
sbb
add
push
add
push
lea
add
add
sbb
sbb
add
add
sub
add
and
sbb
add
push
add
push
popf
adc
outs
jge
add
or
loope
add
sub
push
and
add
push
and
add
sub
add
or
test
add
or
adc
add
sub
add
adc
cmp
add
adc
adc
call
add
or
add
sbb
xor
add
pop
inc
add
add
idiv
(bad)
(bad)
(bad)
adc
add
add
enter
and
add
sub
add
jae
add
or
add
pop
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
and
add
pop
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
sbb
add
push
add
push
sub
and
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
push
add
push
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
push
add
push
sub
and
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
adc
(bad)
adc
add
add
sbb
sbb
mov
cmp
inc
add
add
idiv
(bad)
call
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
cli
add
add
in
push
add
jno
add
cmp
pop
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
push
and
mov
add
pop
add
push
and
push
sub
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
pop
sbb
add
push
add
push
or
adc
add
or
fs
add
sub
add
push
and
push
mov
add
pop
add
push
sub
pop
add
jle
add
add
inc
add
or
dec
add
or
xor
add
sbb
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
lods
mov
add
pop
add
push
and
cmp
add
and
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
pop
sbb
add
push
add
push
or
adc
add
or
mov
add
add
add
inc
add
or
dec
add
or
mov
add
sbb
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
jmp
pop
add
push
and
cmp
add
and
add
add
add
add
add
or
add
sub
add
or
adc
add
or
push
push
add
jle
add
add
inc
add
or
dec
add
or
aas
push
add
sbb
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
lea
add
pop
add
push
and
or
pop
add
or
mov
add
add
add
add
add
or
add
sub
add
or
adc
add
or
loopne
add
jle
add
add
inc
add
or
dec
add
or
int3
add
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
jg
add
sub
push
and
or
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
push
push
add
push
or
adc
add
or
pop
add
add
add
inc
add
or
dec
add
or
dec
add
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
fmul
add
push
and
or
pop
add
or
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
ins
sbb
add
push
add
push
or
adc
add
or
loopne
add
jle
add
add
inc
add
or
dec
add
or
int3
add
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
xor
add
push
and
or
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
jo
add
sub
add
or
adc
add
or
pop
add
add
add
add
inc
add
or
dec
add
or
dec
add
add
add
add
push
dec
add
add
add
or
mov
add
push
adc
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
je
add
sub
add
or
adc
add
or
out
add
jle
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
push
and
mov
add
pop
add
push
adc
add
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
js
add
sub
add
or
adc
add
or
jno
add
jle
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
mov
pop
add
pop
add
push
and
movaps
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
jl
add
sub
add
or
adc
add
or
clc
add
add
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
adc
fwait
pop
add
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
sbb
add
push
add
push
or
adc
add
or
jne
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
cli
pop
add
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
test
add
sub
add
or
adc
add
or
repnz
add
add
add
inc
add
or
dec
add
or
add
pop
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
push
nop
add
sub
push
adc
add
or
add
add
add
add
add
or
add
sub
add
or
adc
add
or
jnp
add
jle
add
add
inc
add
or
dec
add
or
add
pop
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
rcl
add
and
adc
pop
add
or
add
add
add
add
add
or
mov
add
sub
add
or
adc
add
or
add
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
das
xchg
add
sub
push
and
adc
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
nop
sbb
add
push
add
push
or
adc
add
or
jnp
add
jle
add
add
inc
add
or
dec
add
or
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
adc
add
pop
add
push
and
adc
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
xchg
sbb
add
push
add
push
or
adc
add
or
sbb
cwde
sbb
add
push
add
push
pop
adc
adc
adc
mov
call
add
add
(bad)
(bad)
inc
jnp
add
add
mov
outs
mov
adc
sub
adc
or
push
outs
mov
es
add
add
(bad)
(bad)
jmp
pushf
sbb
add
push
add
push
or
sbb
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
add
outs
add
add
jge
add
add
sub
sbb
add
add
(bad)
(bad)
jmp
pop
xchg
add
sub
push
and
add
sub
add
and
adc
and
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
es
and
xchg
add
sub
push
and
add
sub
add
inc
xor
add
add
add
add
inc
add
add
add
add
add
add
or
add
or
add
add
add
add
adc
add
ja
add
add
add
and
add
sub
push
and
add
jle
add
add
cmp
or
jge
add
sub
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
outs
inc
add
or
and
add
sub
push
sub
add
and
sbb
add
push
add
push
sub
adc
add
aaa
add
add
add
and
add
sub
push
and
add
jle
add
add
cmp
or
jge
add
sub
push
and
add
or
mov
add
push
sub
add
add
xchg
add
add
add
add
fld
add
and
add
loopne
add
and
add
xlat
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
dec
xchg
add
sub
push
and
add
lea
add
and
add
and
add
and
add
sub
add
pop
sub
pop
add
and
add
pop
xor
add
push
and
add
add
xor
add
add
add
add
add
add
sbb
add
sub
xor
add
add
add
add
add
add
add
or
add
add
and
pop
add
push
sub
add
cmp
add
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
sub
add
and
add
xor
jl
add
add
add
add
rcr
add
sub
add
jge
add
add
sub
add
push
sub
add
and
xchg
add
sub
push
and
add
and
and
add
sub
add
add
(bad)
(bad)
call
sub
add
add
sub
add
jge
add
add
add
fiadd
add
aam
add
sub
add
jge
add
add
and
sbb
add
push
add
push
jge
add
add
add
add
add
push
add
add
inc
add
add
xor
add
add
add
add
add
loope
add
sub
push
sub
sbb
add
add
add
adc
jbe
pop
add
push
and
add
sub
es
and
add
push
jge
add
add
jae
add
push
jge
add
add
jnp
add
add
sbb
add
add
mov
push
add
push
jge
add
add
jnp
add
add
sub
dec
xchg
add
sub
push
add
add
add
push
add
add
xor
add
sub
mov
add
ja
add
sub
and
add
sub
push
sub
mov
add
jl
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
fnstsw
add
or
mov
push
add
push
and
xchg
add
sub
push
and
add
or
add
push
sub
push
or
rcr
add
push
add
push
and
xchg
add
sub
push
and
add
or
add
sub
sub
les
add
sub
add
and
add
sub
push
and
add
or
add
push
sub
fiadd
sub
add
add
add
add
mov
add
jmp
add
add
add
add
mov
add
inc
add
add
xor
add
add
add
and
sbb
add
push
add
push
jge
add
add
adc
add
sub
mov
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
adc
add
idiv
(bad)
inc
jae
add
push
jge
add
add
jnp
add
add
push
add
push
add
add
add
xor
inc
add
add
idiv
(bad)
jmp
mov
pop
add
push
sub
mov
rol
or
int3
sbb
add
push
add
push
sub
add
sub
add
xor
add
add
add
add
and
xchg
add
sub
push
and
add
add
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
jge
add
add
jnp
add
add
sbb
add
xor
add
add
add
add
add
dec
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
push
add
add
add
adc
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
xchg
add
sub
push
and
add
sub
add
and
add
jae
add
or
push
cmp
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
cmp
adc
add
and
add
xchg
add
adc
sub
and
pop
add
push
jle
add
add
les
add
or
je
add
sbb
add
xor
and
add
adc
sub
es
mov
add
pop
add
push
and
add
les
add
or
je
add
sbb
add
add
xor
add
add
add
add
add
sub
and
pop
add
push
and
add
lds
add
and
or
pop
add
add
add
add
sub
add
xor
adc
add
add
add
and
stos
add
sub
push
and
add
jg
add
(bad)
add
push
and
add
and
add
loop
add
sub
push
and
add
test
add
mov
add
sub
push
jle
add
or
add
or
add
sub
push
jle
add
or
add
or
add
sub
push
and
add
outs
and
add
cmp
add
add
mov
add
sub
push
and
add
outs
and
add
and
pop
add
push
jle
add
or
add
or
add
sub
push
jle
add
or
add
or
add
sub
add
and
add
push
outs
xor
add
and
add
test
add
mov
add
sub
push
and
add
outs
and
add
and
pop
add
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
push
add
push
and
add
push
outs
xor
add
and
add
test
add
mov
add
sub
push
and
add
outs
and
add
and
pop
add
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
sbb
add
push
add
push
and
sbb
add
push
add
push
outs
xor
add
and
add
jg
add
icebp
stos
add
sub
push
and
add
and
add
loope
add
sub
push
and
add
adc
add
push
add
add
mov
add
push
and
add
add
xor
add
add
add
add
add
add
or
add
jle
add
add
fwait
xchg
add
sub
push
sub
add
or
dec
add
or
or
add
add
add
add
add
or
add
and
add
fwait
xchg
add
sub
push
and
add
and
add
and
add
or
sub
add
add
add
sub
add
or
add
and
add
fwait
xchg
add
sub
push
and
add
sub
or
add
add
or
sub
add
add
add
sub
add
or
add
and
add
movs
xchg
add
sub
push
sub
add
or
add
sub
add
xor
add
add
add
add
sub
add
or
add
and
add
fwait
xchg
add
sub
push
and
add
and
add
sub
xor
add
add
add
add
add
add
or
add
and
add
punpckhwd
add
pop
add
push
and
add
and
add
and
add
or
sub
add
add
add
sub
add
or
add
and
add
fwait
xchg
add
sub
push
sub
add
or
dec
add
or
add
or
sub
add
add
add
sub
add
or
add
or
add
movs
xchg
add
sub
push
and
add
and
add
and
or
sub
add
add
add
sub
add
or
add
or
add
fwait
xchg
add
sub
push
and
add
sub
or
add
or
add
add
add
add
add
or
add
and
add
movs
xchg
add
sub
push
and
add
and
add
and
add
or
sub
add
add
add
sub
add
or
add
or
add
punpckhwd
add
pop
add
push
and
add
sub
or
add
or
sub
add
add
add
sub
add
or
add
jle
add
add
mov
add
sub
push
sub
add
or
add
and
add
or
sub
add
add
add
sub
add
or
add
jle
add
add
mov
pop
add
push
sub
add
or
add
sub
xor
add
add
add
add
sub
add
or
add
and
add
punpckhwd
add
pop
add
push
and
add
and
add
sub
xor
add
add
add
add
jle
add
add
fcomp
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
add
in
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
add
and
add
add
add
adc
lds
add
push
and
add
and
sbb
add
push
add
push
or
cmp
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
xchg
add
sub
push
and
add
and
add
sub
push
and
add
sub
push
sub
add
push
and
add
and
sbb
add
push
add
push
and
sbb
add
push
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
xchg
add
sub
push
and
add
and
sbb
add
push
add
push
or
and
mov
pop
add
push
and
add
sub
and
xchg
add
sub
push
and
add
sub
add
and
add
and
add
sbb
add
(bad)
(bad)
jmp
aas
cwde
add
sub
push
and
add
and
add
sub
push
and
add
sub
push
and
add
and
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sahf
cwde
add
sub
push
and
add
push
or
in
add
sub
push
and
add
sub
and
add
sub
push
and
add
fisub
or
sbb
es
sub
add
or
add
and
add
sub
add
or
add
sub
sub
add
inc
sbb
add
add
add
add
jb
add
mov
add
daa
add
add
add
sbb
add
add
add
adc
(bad)
cdq
add
sub
push
and
add
and
sbb
add
push
add
push
or
cmp
add
sub
add
cmp
icebp
cdq
add
sub
push
sub
pop
add
sub
push
and
add
sub
push
and
add
sub
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
and
add
sub
add
or
and
mov
pop
add
push
and
add
sub
and
fwait
add
sub
push
and
add
sub
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
bound
add
push
and
add
and
add
sub
push
and
add
sub
push
and
add
and
add
and
add
sub
add
and
add
sub
add
sub
add
push
sub
and
fwait
add
sub
push
and
add
push
or
and
adc
add
sub
push
sub
and
add
sub
push
and
add
fisub
add
sub
push
pop
sub
add
or
add
and
sbb
add
push
add
push
or
add
sub
sub
inc
sbb
add
add
add
add
push
add
add
add
and
add
add
xor
add
add
add
and
pop
add
push
and
add
sub
add
push
sub
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
aas
add
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
and
add
and
inc
add
add
idiv
(bad)
jmp
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
inc
add
push
sub
add
sub
add
add
(bad)
(bad)
jmp
dec
add
push
sub
push
and
add
push
and
add
cmp
add
add
add
(bad)
(bad)
jmp
cmp
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
cmp
sub
add
and
add
sbb
add
(bad)
(bad)
jmp
inc
add
push
and
add
and
add
sub
add
and
add
and
add
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
push
add
push
adc
and
popf
add
sub
push
sub
jle
add
or
add
add
outs
mov
outs
mov
adc
sub
or
mov
or
or
add
gs
add
sub
push
and
sbb
add
push
add
push
and
sbb
add
push
add
push
outs
xor
add
and
mov
or
add
and
add
and
add
or
rol
or
or
push
inc
add
sbb
add
or
adc
jnp
add
add
and
add
and
or
add
ins
cmp
add
pop
add
push
and
add
and
add
or
add
js
add
sub
push
and
add
les
add
and
add
and
add
jge
add
add
test
pop
add
push
and
aad
add
cmp
add
sub
add
push
or
out
add
sub
push
pop
outs
scas
add
or
add
sub
add
or
add
pop
outs
scas
add
or
sub
add
sub
add
fild
add
sbb
add
(bad)
(bad)
inc
outs
scas
add
or
add
and
mov
add
adc
mov
add
or
sub
add
and
inc
add
add
idiv
(bad)
jmp
inc
sahf
add
sub
push
and
add
or
mov
add
cmp
arpl
add
adc
add
or
add
add
lods
sahf
add
sub
push
or
cmp
add
and
add
adc
or
add
or
add
setg
add
pop
add
push
adc
xlat
add
add
push
add
add
xor
add
and
add
adc
push
add
push
jae
add
or
add
or
add
and
add
pop
add
push
and
add
and
add
and
add
or
dec
add
push
and
inc
add
add
idiv
(bad)
jmp
iret
lahf
add
sub
push
and
add
or
add
cmp
add
push
adc
adc
adc
jge
add
add
dec
mov
add
push
and
add
or
add
adc
pop
or
add
or
add
add
mov
pop
add
push
and
fld
add
push
add
add
xor
add
sub
inc
add
push
jae
add
or
add
or
add
add
or
xor
add
sub
push
sub
add
and
add
and
add
adc
mov
add
and
(bad)
(bad)
fimul
adc
push
inc
add
sbb
add
or
and
sbb
add
push
add
push
adc
fisttp
mov
add
push
sub
sbb
add
push
add
push
adc
fisubr
pop
and
mov
add
push
adc
sub
add
or
add
and
sbb
add
push
add
push
adc
fiadd
pop
mov
add
push
and
add
and
add
sub
add
adc
fisubr
adc
and
pop
add
push
adc
sub
add
or
add
and
add
sub
add
adc
fiadd
adc
sub
add
add
add
mov
add
arpl
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
and
mov
add
push
and
add
jle
add
add
rol
add
and
add
add
rol
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
and
add
push
and
add
and
add
and
sbb
add
push
add
push
sub
add
xor
add
add
add
add
adc
add
add
dec
add
or
and
add
sub
add
adc
jo
adc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
mov
add
jle
add
add
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
daa
mov
add
push
and
add
cmp
add
and
add
and
add
push
add
push
or
inc
adc
push
sbb
add
push
add
push
pop
adc
add
mov
mov
add
(bad)
(bad)
jmp
js
add
sub
push
jle
add
add
cmp
add
and
add
and
add
push
add
push
sub
sub
add
xor
add
add
add
add
adc
add
add
and
add
push
sub
add
or
dec
add
or
add
pop
sbb
add
push
add
push
adc
adc
push
sbb
add
add
(bad)
(bad)
call
sub
add
or
add
or
add
or
inc
add
add
idiv
(bad)
jmp
leave
mov
add
push
and
add
or
add
and
add
push
add
push
or
and
add
sub
add
pop
adc
mov
mov
inc
add
add
idiv
(bad)
jmp
push
movs
add
sub
push
push
sub
add
or
add
and
add
push
add
push
sub
sub
xor
dec
add
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
jae
add
sub
push
and
add
or
mov
add
jle
add
add
dec
add
or
add
ins
sbb
add
push
add
push
adc
add
add
add
xchg
add
add
inc
add
add
idiv
(bad)
inc
outs
mov
add
and
add
and
add
and
inc
add
add
idiv
(bad)
jmp
fsub
add
and
add
cmp
add
sub
push
add
or
add
and
and
add
sub
add
sub
add
or
inc
add
add
idiv
(bad)
jmp
push
movs
add
sub
push
and
add
and
add
push
add
push
or
and
add
sub
add
pop
adc
mov
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
js
add
sub
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
sub
xor
dec
add
add
add
adc
sub
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
sub
into
movs
add
sub
push
add
cmp
add
and
add
jle
add
add
and
add
push
sub
add
or
dec
add
or
add
add
push
add
push
adc
cmp
adc
call
add
idiv
(bad)
dec
outs
mov
add
and
add
or
inc
add
add
idiv
(bad)
jmp
cmp
add
push
push
sub
add
or
add
or
add
or
add
or
sbb
add
push
add
push
sub
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
push
and
add
and
add
push
adc
inc
adc
and
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
movs
add
sub
push
push
sub
add
or
add
and
add
push
sub
add
add
xor
add
add
adc
add
or
and
add
sub
push
and
add
or
adc
cwde
sbb
add
push
add
push
adc
add
add
add
mov
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
loope
add
sub
push
and
add
sub
sbb
add
add
(bad)
(bad)
dec
outs
push
add
or
add
and
imul
add
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
outs
lea
add
and
inc
add
add
idiv
(bad)
inc
or
outs
push
add
or
add
adc
add
push
add
push
pop
adc
mov
cmp
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
xor
add
add
add
add
and
pop
add
push
sub
add
push
sub
add
sub
add
push
sub
add
sub
add
push
sub
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
and
add
jle
add
add
inc
add
push
and
add
jle
add
add
inc
add
push
and
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
sub
sub
add
and
add
sub
push
and
add
and
add
and
add
and
add
and
add
or
fwait
cmps
add
sub
push
and
add
or
add
sub
add
push
and
push
add
push
and
add
push
sub
add
push
and
test
add
pop
add
push
sub
sbb
add
into
add
add
add
adc
inc
test
add
pop
add
push
and
pop
add
or
add
add
dec
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
outs
enter
and
add
or
sub
sbb
add
add
idiv
(bad)
inc
mov
test
add
sub
add
xor
and
pop
add
push
add
sub
or
add
add
sub
add
or
and
add
pop
add
push
and
add
push
lea
push
add
or
add
ficomp
and
add
pop
add
push
and
add
or
add
fiadd
sub
add
adc
add
add
add
add
add
xor
add
add
add
mov
pop
add
push
and
add
sub
add
and
add
sub
add
push
and
add
sub
sub
add
sub
add
push
and
add
sub
add
and
add
sub
add
push
and
add
sub
add
and
add
sub
sub
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
sub
add
sub
add
push
and
add
and
test
add
push
and
add
sub
add
sbb
add
jg
add
pusha
add
adc
sub
add
push
and
add
or
add
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
or
add
add
dec
add
or
or
add
enter
fiadd
ficomp
and
pop
add
push
and
add
or
add
fiadd
sub
add
add
add
or
or
add
add
sbb
dec
bound
sbb
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
enter
sub
add
outs
cmp
add
xor
add
add
add
add
add
sub
add
xor
mov
add
in
add
adc
pop
add
add
add
pop
add
push
and
int3
sbb
add
push
add
push
cs
pop
and
sbb
add
push
add
push
xor
add
(bad)
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
jnp
add
add
mov
add
and
outs
leave
add
or
add
add
add
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
stos
add
sub
push
jae
add
push
jp
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
or
jnp
add
or
adc
sub
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
pop
add
push
and
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
jnp
add
add
int3
add
or
add
or
add
rol
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jl
add
add
mov
add
and
add
sub
add
outs
int
add
outs
rol
add
add
push
pop
add
push
and
add
add
rol
add
add
add
fcomp
add
sub
add
pop
jge
add
add
add
xor
add
add
add
add
add
sub
add
xor
push
add
add
add
add
add
or
add
sub
push
and
add
and
add
and
add
and
rol
add
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
outs
sbb
add
and
xor
add
add
or
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
shr
add
pop
add
push
and
add
add
rol
add
je
add
sub
push
and
add
and
add
sub
add
sub
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
aas
add
push
and
add
add
aad
add
loopne
add
sub
add
sub
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
inc
add
push
and
add
add
aad
add
in
add
sub
add
sub
add
push
and
push
push
push
add
add
cmc
jge
inc
mov
mov
mov
mov
sti
sahf
aaa
mov
ret
push
push
xchg
into
in
mov
jns
jecxz
icebp
aaa
push
popf
push
call
popf
add
pushf
inc
xchg
nop
arpl
and
mov
shl
sbb
inc
popa
cmp
pop
cli
mov
in
in
add
repz
sahf
imul
outs
(bad)
call
and
inc
imul
ret
mov
sti
add
jge
in
push
and
push
and
cdq
mov
mov
lock
push
stos
mov
or
ret
pop
sti
dec
mul
push
mov
xlat
jle
mov
cmp
addr16
mov
fsub
out
ret
test
push
test
mov
and
(bad)
popf
leave
dec
push
es
into
xchg
cmp
push
cmp
mov
mov
fwait
adc
mov
in
push
xchg
add
adc
lods
add
push
popa
into
imul
test
shld
sbb
jmp
pop
pop
leave
xchg
popa
rol
cmp
(bad)
(bad)
xchg
data16
(bad)
mov
and
fsub
sbb
sub
or
mov
pop
cmps
(bad)
fld
push
imul
in
inc
mov
mov
in
xchg
mov
int
frstor
enter
dec
cmc
fld
push
ret
mov
dec
daa
adc
push
inc
sar
(bad)
cdq
push
loope
mov
xchg
scas
or
movlps
push
sub
dec
sbb
test
imul
in
pop
mov
lahf
adc
or
leave
adc
or
fwait
push
scas
mov
add
jbe
inc
test
adc
es
popa
(bad)
jmp
pop
dec
fcom
outs
in
(bad)
pop
aaa
movs
push
dec
dec
(bad)
out
xchg
or
mov
xchg
arpl
(bad)
pop
stc
add
and
out
aas
in
pop
inc
int
sbb
imul
xchg
push
cmps
pop
test
add
add
inc
loop
push
fdiv
dec
ds
push
inc
add
repz
mov
scas
retf
fs
adc
sbb
call
mov
movs
jo
jge
or
loope
rol
jnp
jo
retf
repnz
neg
jge
pop
ret
sar
xchg
and
xor
xchg
retf
mov
cmp
dec
test
xor
sbb
jae
mov
pusha
pop
sbb
cli
pop
lock
cmps
cmc
js
sbb
and
push
push
rcl
push
ins
mov
retf
lds
mov
dec
int
dec
or
sub
inc
pop
cli
xchg
cdq
inc
shl
data16
push
in
jne
sbb
jae
xchg
mov
cdq
xchg
test
je
ja
fwait
fwait
jbe
ficom
push
xchg
std
(bad)
in
cwde
push
mov
fidiv
dec
xor
sti
pop
jae
xor
dec
push
jo
jle
dec
into
arpl
jp
outs
push
push
dec
inc
std
pushf
dec
or
mov
xor
sbb
cmp
mov
cs
or
ret
out
shl
mov
and
xchg
sahf
push
std
adc
xlat
mov
xchg
jmp
push
stos
mov
push
push
mov
enter
data16
ss
push
sahf
sub
test
shr
or
into
sub
dec
xchg
adc
outs
leave
lea
inc
sub
xchg
xchg
(bad)
push
push
cmc
ret
in
push
dec
sub
pushf
xchg
dec
iret
xor
sbb
jle
push
js
cmps
pop
fnstenv
(bad)
inc
pusha
mov
dec
cmps
mov
inc
jae
(bad)
adc
add
jmp
js
aam
(bad)
scas
loope
inc
out
lock
pop
mov
jl
pop
adc
push
mov
pop
mov
jecxz
xchg
mov
pop
sub
in
pop
int
pop
femms
outs
or
and
xor
and
sub
mul
jecxz
cwde
or
not
cmp
push
cli
jb
fs
pcmpeqw
cmps
popa
cdq
ret
aaa
cmp
jnp
adc
or
sub
lods
pop
int
pop
aad
call
jmp
dec
(bad)
outs
push
movs
repz
call
dec
xchg
add
pop
mov
sub
pusha
in
(bad)
ficom
and
sbb
out
inc
aas
shl
mov
sub
mov
pop
inc
outs
cmp
(bad)
jge
stos
push
into
push
out
out
mov
pop
mov
sbb
jp
pop
xchg
add
xchg
outs
jle
out
sbb
push
mov
mov
inc
push
pushf
dec
ins
sub
cmp
add
ret
mov
pxor
dec
lods
out
repnz
in
lock
iret
jo
push
jecxz
add
xchg
out
jmp
(bad)
mov
mov
fcomp
arpl
xor
sti
or
mov
in
jmp
xor
cmp
mov
das
sar
sub
dec
mov
sub
pop
test
mov
outs
ja
xchg
cmc
sub
daa
aaa
iret
sti
ret
and
or
leave
sar
cmps
adc
sti
repz
jg
(bad)
add
jmp
push
(bad)
mov
xchg
rep
nop
inc
mov
cli
enter
in
mov
ja
adc
es
sbb
arpl
imul
ret
(bad)
gs
mov
push
cli
xchg
cmps
fist
or
push
cmps
pop
cmc
add
out
adc
mov
(bad)
sub
mov
in
cmp
sbb
mov
lea
or
imul
call
mov
or
cdq
cdq
cmp
adc
xor
aam
(bad)
sbb
and
sub
mov
inc
and
pop
aaa
adc
aad
sub
xlat
fcom
ins
cld
rol
bound
add
and
jnp
and
or
jnp
or
pop
fidiv
inc
cmp
pop
xor
jne
cmp
shr
mov
mov
(bad)
jle
xor
dec
or
and
cmps
sbb
xchg
pop
push
das
(bad)
xchg
cmp
out
pop
mov
jp
fadd
js
inc
stos
mov
daa
inc
ja
xor
fstp
pop
or
cli
mov
sub
mov
mov
cmp
call
aaa
mov
jp
nop
lahf
sbb
test
jecxz
test
mov
(bad)
movs
mov
push
repz
xor
and
mov
fbld
aam
scas
jbe
pop
aaa
ret
js
sub
nop
test
and
sar
push
xchg
sbb
cmps
adc
cli
data16
add
push
movs
and
setno
add
call
lahf
sub
mov
(bad)
mov
ds
hlt
int3
jno
inc
retf
or
fcom
fdiv
or
inc
sub
aam
dec
shl
adc
in
adc
add
call
sub
in
ins
xchg
repnz
scas
xor
popa
or
(bad)
(bad)
rcr
push
mov
mov
lds
iret
stc
jbe
pop
ins
inc
shr
fucomip
aas
call
(bad)
mov
or
aaa
mov
cmps
rcr
stc
jno
xchg
and
dec
cmc
xor
adc
inc
dec
jle
(bad)
inc
cmp
aam
cmp
cs
arpl
pop
jno
pop
jo
pop
sti
dec
cmps
xchg
out
stos
push
xchg
cmp
dec
pop
inc
mov
adc
ror
mov
aaa
enter
movs
adc
and
pop
jnp
rcl
inc
cli
or
lea
pop
jbe
mov
inc
xor
fwait
and
iret
xor
jns
adc
sbb
aam
fcom
cmp
mov
sub
popf
jecxz
mov
gs
push
inc
dec
jo
inc
mov
mov
jae
loope
xor
lea
aaa
jecxz
jbe
bound
jne
push
int3
rol
lds
add
push
push
jnp
loop
cmp
in
mov
push
cmp
add
int
mov
hlt
and
pop
in
test
or
mov
push
sbb
cs
mov
jns
ficom
in
jb
sub
push
sub
xor
fs
mov
xor
out
gs
arpl
daa
adc
ret
jne
(bad)
out
shl
jmp
dec
cmc
xchg
(bad)
ret
push
(bad)
cld
fld
cmp
jmp
cmp
add
sahf
jle
inc
jge
ss
cmp
rol
inc
in
sti
xchg
add
push
cmp
inc
lods
xor
shl
inc
adc
mov
out
aaa
jg
push
adc
test
dec
sbb
sar
mov
adc
(bad)
jnp
ins
mov
pop
cmps
adc
js
jno
pop
int
mov
or
out
cwde
ins
cmps
cs
xchg
sub
and
dec
shr
push
int3
inc
jno
div
inc
inc
push
cmps
dec
cli
cmps
(bad)
fistp
lds
inc
mov
or
adc
pop
mov
mov
add
inc
out
pop
mov
js
loope
dec
mov
adc
sub
leave
cdq
scas
repz
ds
aaa
inc
(bad)
hlt
xchg
rol
into
out
xlat
das
mov
lock
inc
sub
jnp
fimul
xchg
pusha
and
mov
stos
push
fimul
sahf
or
add
out
fistp
mov
lods
jnp
push
shr
(bad)
jae
in
xchg
les
clc
push
push
mov
outs
mov
out
or
out
cmp
jle
ficom
mov
mov
or
in
in
aas
push
cmp
push
dec
(bad)
not
inc
int
cmps
je
int3
imul
push
aad
push
mov
push
add
cld
xor
jecxz
into
sub
mov
icebp
xlat
cmps
stc
addr16
sbb
inc
ror
xor
jno
inc
mov
inc
jnp
out
lock
iret
cmp
xor
cmp
sti
std
ins
push
stos
daa
sub
aaa
xchg
push
xor
jb
nop
loop
shl
push
adc
push
idiv
mov
or
gs
mov
jne
hlt
clc
and
(bad)
sar
fimul
mov
sbb
xor
scas
stos
dec
adc
jno
repnz
pop
mov
sub
prefetcht1
push
shl
add
mov
inc
xor
(bad)
inc
push
repz
inc
test
inc
mov
into
mov
icebp
jmp
dec
fcom
popa
pop
mov
xchg
pop
in
(bad)
popf
jae
(bad)
fidivr
mov
fwait
adc
xor
out
dec
dec
xchg
call
sti
or
lds
out
scas
fs
cmps
jp
aaa
sub
xor
in
xchg
pop
adc
adc
ret
xchg
arpl
jae
jb
or
and
sahf
imul
dec
or
arpl
mov
cs
(bad)
cmps
jle
mov
jle
int
addr16
mov
mov
adc
nop
in
cld
xlat
mov
or
inc
loop
mov
repnz
mov
test
dec
sbb
addr16
fnstenv
lahf
pop
xor
and
gs
retf
inc
lock
pop
sub
jne
int
(bad)
aas
sub
mov
pmulhuw
mov
fcomi
stos
sub
jbe
add
push
or
aaa
mov
iret
sti
aaa
sub
jg
sbb
xlat
mov
xor
stc
mov
cmc
and
push
push
cmc
scas
pop
popa
pusha
in
clc
cwde
stc
cli
test
loope
mov
and
rol
add
(bad)
fld
stos
scas
pop
add
push
in
push
imul
xor
js
and
and
push
mov
dec
cmp
sbb
add
mov
loope
ins
out
ror
push
enter
jecxz
iret
bound
mov
data16
fwait
sbb
cmps
xlat
xchg
ret
(bad)
cmp
push
jge
sbb
test
jmp
call
ss
adc
sbb
jo
push
mov
add
xchg
pop
fdivr
inc
lea
pop
sbb
inc
mov
fldcw
jns
ror
sub
mov
inc
aam
stos
jne
aam
lods
sbb
in
cmp
cmp
data16
pop
neg
test
sti
call
leave
xchg
nop
push
lea
outs
xchg
jl
scas
out
jl
mov
arpl
jb
mov
push
cs
dec
pushf
cmp
mov
mov
or
dec
mov
popf
push
xor
sub
aad
cmp
mov
shr
dec
inc
and
dec
pop
jge
fisub
sti
out
fistp
stc
test
dec
jnp
pop
inc
ret
fcom
nop
push
in
or
mov
cdq
in
inc
stos
mov
jne
mov
inc
mov
stos
add
cmp
push
bswap
mov
iret
sub
xchg
(bad)
mov
stos
das
dec
dec
mov
cld
dec
fwait
pop
push
and
sar
push
loop
loope
pop
sub
add
cmp
in
dec
xor
inc
adc
and
sti
daa
cmp
push
lods
mov
jg
aad
(bad)
ins
ret
not
nop
into
imul
popa
loop
jecxz
sbb
lock
fxch
and
daa
inc
mov
sub
jns
add
cmc
outs
out
adc
and
rcr
cmp
loopne
fdivr
cli
sub
inc
and
inc
out
shl
sub
dec
in
cli
and
and
cmp
push
into
fwait
ret
popf
jmp
and
stos
addr16
mov
jmp
mov
and
mov
jmp
cwde
dec
inc
and
mul
cmp
iret
cli
push
mov
add
push
retf
gs
sti
clc
sub
mov
pop
xchg
leave
mov
adc
or
jle
fsubr
add
daa
sub
cli
or
inc
cmp
popf
fisub
aas
and
mov
popa
xchg
adc
jae
and
rcr
das
rcl
scas
jns
xchg
inc
push
push
pop
fild
bound
mov
je
lods
sub
nop
add
push
pop
inc
xchg
jmp
pop
(bad)
retf
xchg
push
addr16
adc
jns
imul
and
mov
movq
jns
in
add
mov
cmps
daa
enter
jnp
into
mov
popa
xor
xor
retf
retf
lock
mov
xor
repz
pusha
fistp
les
aam
nop
mov
sbb
xor
sub
jbe
xlat
xchg
add
jl
xlat
aaa
and
clc
shl
fdivr
hlt
sub
and
mov
lods
sub
xchg
shl
sar
push
lds
inc
cmp
cmp
jmp
mov
or
push
test
movs
dec
repnz
mov
jge
mov
and
or
inc
mov
push
mov
fidivr
test
dec
cmp
mov
sbb
inc
jns
popf
cli
sub
adc
or
xor
xchg
enter
push
mov
lods
gs
ror
cli
nop
(bad)
xor
xor
enter
sub
jmp
fidivr
sbb
mov
adc
aas
pop
xchg
test
dec
xor
jnp
or
and
sti
push
cmp
fsub
adc
fdivp
iret
jle
pop
adc
shr
dec
inc
(bad)
cli
arpl
shr
inc
cli
pop
cli
scas
xchg
pop
test
pop
mov
in
adc
inc
inc
sahf
xchg
ja
inc
or
inc
cmps
xor
arpl
push
xchg
outs
imul
scas
mov
inc
jne
cwde
add
inc
adc
ret
sahf
mov
shl
loop
sub
mov
movs
xor
xchg
add
clc
retf
iret
fs
add
and
sbb
cs
mov
in
xchg
ss
xchg
mov
jmp
inc
sub
sub
int
jb
or
in
ret
push
mov
xor
fdiv
mov
mov
push
int3
inc
shl
sahf
dec
mov
sub
mov
sbb
or
jge
fs
sbb
fbld
dec
mov
lahf
inc
add
mov
lods
iret
pushf
adc
adc
fwait
dec
mov
mov
pop
sahf
sub
push
jo
(bad)
xor
int3
and
out
mov
scas
cmps
push
icebp
pop
bound
adc
xchg
daa
test
jge
mov
or
pop
ror
(bad)
imul
ins
shl
mov
call
and
xchg
aam
(bad)
adc
cmp
dec
fstp
xor
test
out
movs
in
out
stos
imul
lods
mov
cmp
inc
cmp
cmp
jp
or
mov
cmp
je
dec
xchg
mov
mov
push
lods
sbb
ins
fidivr
fsubr
popf
push
shr
or
or
mov
stos
loopne
out
mov
or
inc
cdq
mov
cmp
xor
adc
push
push
cli
jbe
add
cmc
lods
stc
mov
pop
fbstp
(bad)
fwait
or
fnstcw
dec
xor
dec
nop
mov
add
or
movs
add
int3
movs
cld
dec
es
adc
mov
mov
jecxz
inc
jne
fisubr
(bad)
xor
mov
and
and
mov
imul
pushf
shl
rol
mov
pop
mov
in
adc
xchg
movs
or
sbb
jmp
ins
fld
adc
mov
cmp
stos
jecxz
mov
mov
outs
or
or
into
ins
adc
movs
test
mov
adc
push
sub
scas
adc
cmp
movs
or
leave
fld
clc
mov
call
popa
mov
adc
or
push
pop
dec
jbe
cwde
adc
shl
aad
xor
arpl
inc
aad
add
jno
mov
xor
nop
lods
or
(bad)
jbe
jmp
or
jmp
data16
call
rol
xchg
mov
fwait
sub
jne
jns
cmp
xchg
mov
sub
jbe
ret
ins
xchg
dec
arpl
mov
mov
lea
test
push
stos
sbb
jmp
out
in
mul
repnz
aaa
xchg
mov
jbe
out
popa
and
repz
xor
mov
sbb
xchg
je
pusha
and
jno
xchg
push
int
push
sbb
clc
pop
mov
inc
and
mov
sti
jns
sti
es
into
rcr
lahf
mov
daa
cmp
and
jecxz
push
mov
jmp
loope
and
mov
shl
cmc
loop
mov
repnz
rcl
mov
les
cmp
popa
sbb
call
push
push
out
cwde
addr16
outs
mov
sub
push
test
in
xor
mov
cs
jns
int
adc
sub
add
sbb
cmp
jge
or
hlt
push
mov
hlt
add
sub
jbe
jae
xchg
stc
fs
push
mov
inc
inc
fbld
aad
(bad)
or
fild
jb
mov
sub
and
xor
popa
stos
adc
daa
stc
cmp
jecxz
sahf
cmp
scas
cdq
xlat
adc
sub
rcr
jge
sub
jp
inc
popa
cmp
pop
xor
es
iret
or
push
adc
in
cdq
int3
mov
hlt
fild
ss
xchg
dec
and
inc
mov
push
sub
cs
mov
jae
rcr
push
push
inc
lock
test
cmp
shl
and
push
xchg
push
or
mov
cwde
stos
xchg
je
stos
mov
jb
rcl
imul
push
test
sbb
leave
xchg
xchg
and
enter
sbb
mov
cmp
mov
mov
and
jmp
call
pop
arpl
add
icebp
dec
retf
add
jl
stos
mov
pop
repz
outs
xor
or
jns
js
lock
ror
lock
test
jne
sbb
cli
aaa
push
cwde
jo
mov
lahf
sub
mov
sub
inc
inc
xchg
test
ret
pushf
shl
mov
in
sub
mov
add
in
mov
(bad)
or
inc
xchg
jge
and
sub
lods
popa
dec
sbb
sbb
mov
or
imul
xchg
not
aad
shl
jns
rol
mov
stc
inc
ror
pslld
pop
cmp
arpl
dec
in
neg
ret
mov
lahf
out
sbb
cmc
jge
xor
hlt
or
fstp
aas
ins
pop
pop
cmp
iret
aas
fst
sti
mov
xor
cmc
or
inc
mov
add
sbb
fld
inc
daa
mov
mov
dec
add
xchg
xor
adc
test
pop
test
cmp
(bad)
out
jg
xchg
jb
movs
xor
inc
loope
jo
fst
jo
in
jae
stos
repz
jle
xor
inc
cmp
mov
xchg
dec
fdivr
pop
lahf
repnz
push
sti
repnz
jnp
push
arpl
pop
push
xchg
push
cli
ret
jmp
aad
cmps
mov
xlat
sub
(bad)
push
(bad)
test
and
dec
outs
pop
ja
and
(bad)
sub
jnp
sahf
fadd
pop
pop
push
xchg
xchg
add
cs
imul
iret
sub
push
jmp
sbb
into
int3
aad
sub
mov
stc
adc
add
ds
xchg
icebp
lods
adc
pop
outs
push
or
lods
sub
jo
enter
sub
es
mov
cs
sbb
add
push
inc
and
in
mov
nop
or
ins
mov
mov
sbb
out
adc
jno
outs
sub
jnp
sbb
arpl
popf
call
or
lds
xchg
ss
lods
mov
(bad)
mov
jno
rol
sbb
mov
mov
cmp
in
ins
(bad)
adc
xor
mov
ror
jle
cmp
add
emms
jo
jo
sub
sbb
xor
sbb
mov
xchg
adc
mov
add
scas
add
dec
pop
push
dec
gs
je
fs
data16
stc
ret
stc
pushf
jp
adc
or
mov
or
jae
mov
jp
jecxz
ins
sub
xor
inc
pop
ret
jb
sub
cmp
je
fwait
and
xor
daa
loopne
jl
adc
inc
shl
xchg
sub
xchg
or
into
dec
adc
ss
inc
sbb
popfw
imul
add
mov
mov
ds
pop
scas
lock
pushf
jns
mov
movs
xlat
cwde
clc
sti
and
inc
cmp
iret
stos
repnz
loop
shl
inc
sbb
jnp
cmc
jo
push
pushf
jmp
ret
dec
cdq
mov
dec
dec
std
pop
nop
and
scas
push
adc
fidivr
imul
adc
xor
xor
fwait
nop
mov
fbld
adc
jle
cmp
and
test
retf
xchg
dec
xchg
cmp
push
mov
dec
dec
scas
mov
sahf
or
and
pushf
and
sub
sub
add
sbb
dec
addr16
cmp
(bad)
in
sahf
push
dec
ret
push
scas
rol
pop
bound
cmp
pop
aaa
outs
mov
push
xor
aad
fsub
sti
cmp
(bad)
sbb
mov
xchg
in
imul
dec
inc
jns
js
int3
retf
mov
outs
cld
sbb
push
add
and
jmp
sbb
lods
pop
out
shr
add
mov
(bad)
jle
pop
sbb
jo
push
mov
and
dec
cmc
idiv
mov
mov
and
repnz
mov
jne
push
cmps
push
pop
mov
ficom
pop
or
cmps
add
ret
mov
call
repz
aaa
jmp
mov
int
push
pop
loop
aaa
ret
loop
mov
popa
pop
jbe
pop
push
xchg
je
sub
test
(bad)
in
dec
sar
stos
addr16
mov
inc
rcr
pop
mov
cmps
es
adc
in
inc
repz
push
(bad)
xchg
inc
jo
cmp
mov
movs
pop
imul
adc
sub
adc
inc
push
leave
lds
xchg
imul
out
xchg
popf
push
sub
jne
add
pop
ficomp
fnstcw
and
mov
jne
ret
push
fcmovb
cld
mov
rol
and
(bad)
cmps
gs
push
inc
retf
push
jmp
push
dec
lods
(bad)
in
stc
or
jp
jge
data16
arpl
lahf
lea
inc
xor
mov
jle
cmps
sar
add
test
jp
inc
and
out
imul
dec
nop
in
sti
loope
jns
push
push
or
jns
lods
sti
dec
xor
and
adc
movs
das
push
std
pop
rcl
and
pop
adc
sbb
jle
ins
sub
and
std
scas
sar
ja
push
xor
and
push
fs
(bad)
mov
and
sbb
ss
sbb
push
jge
mov
icebp
fstp
jle
(bad)
fcomp
sub
mov
sbb
bound
push
test
fwait
jne
add
sbb
sbb
jbe
and
push
push
mov
push
cmps
mov
sub
sbb
out
dec
ins
mov
lods
std
mov
add
push
loope
enter
mov
cmp
add
retf
hlt
sahf
mov
mov
sub
cli
and
push
(bad)
(bad)
stos
icebp
mov
loope
mov
jbe
div
inc
dec
xor
pushf
mov
sti
push
scas
add
sub
(bad)
push
sub
cmc
and
sti
out
aas
mov
cmc
psllw
jle
lods
add
mov
ja
ror
test
jae
daa
sbb
popa
movs
mov
pop
fsub
cmp
sbb
inc
push
jmp
repnz
(bad)
xchg
pop
sbb
xchg
jl
test
push
fnsave
iret
test
xchg
or
jns
sub
mov
mov
push
je
mov
cmp
jo
xchg
lea
jne
cmc
mov
adc
lock
or
call
cs
mov
call
xchg
nop
and
sbb
or
retf
jl
idiv
xchg
push
jo
aaa
jbe
fucomip
pop
fstp
mov
cwde
fidivr
mov
push
push
sbb
mov
stc
(bad)
(bad)
pop
cli
inc
shl
test
lock
pop
cli
cmps
mov
xchg
call
xor
outs
movs
jl
ja
cli
inc
xchg
std
sti
cmp
shl
dec
inc
out
imul
xchg
mov
or
fiadd
mov
jnp
push
jbe
setle
shl
and
arpl
jle
and
pop
mov
cmp
mul
out
mov
push
fisubr
iret
shr
ret
jmp
stos
pop
pop
mov
push
inc
inc
pusha
inc
int
push
adc
stc
fcomp
xchg
fwait
mov
leave
xchg
sahf
in
and
dec
leave
jae
out
sbb
mov
add
cmp
xor
sahf
and
inc
cmp
and
nop
dec
cmp
sub
xchg
adc
(bad)
into
dec
outs
mov
ja
jnp
sub
int
jb
std
inc
add
sbb
loop
out
fadd
jle
daa
fs
stos
mov
popa
fldenv
push
xor
fidiv
lahf
gs
jge
in
xchg
inc
sub
push
pop
mov
pusha
xlat
in
push
xchg
sti
or
cmp
adc
xchg
xor
jns
into
mov
add
nop
ret
cwde
in
pusha
pop
aas
mov
out
call
lock
(bad)
cmp
ja
pop
jmp
xor
stos
ds
mov
call
test
add
add
sub
jae
adc
push
xor
cld
movs
sub
mov
ror
stc
xchg
dec
pop
or
movs
push
ins
jp
jg
lea
mov
add
repnz
in
movs
pusha
mov
out
mov
cs
jmp
dec
dec
cdq
mov
scas
scas
hlt
mov
jbe
lea
sahf
mov
add
and
mov
adc
push
cli
call
adc
lods
sar
mov
mov
dec
cmp
pop
test
push
out
mov
mov
cmp
ret
jb
(bad)
mov
sub
pop
ss
push
test
std
mov
clc
(bad)
push
push
in
add
test
xor
fdiv
or
sbb
ror
shl
mov
stos
es
inc
xchg
jo
pop
push
dec
(bad)
xor
xchg
lahf
shl
push
jl
into
or
mov
jae
loopne
lock
sahf
les
push
jecxz
pop
cmp
mov
push
div
cmp
cdq
jns
mov
fist
ret
nop
adc
fwait
scas
mov
bound
out
xchg
mov
jmp
sub
cmp
and
or
sub
add
inc
(bad)
push
adc
push
xchg
xchg
dec
aad
mov
fs
push
or
xchg
std
add
xchg
dec
aad
sub
jns
push
js
and
and
sbb
daa
add
sti
and
mov
and
mov
test
(bad)
fsubr
xor
xchg
test
outs
cwde
js
mov
or
retf
or
bound
rol
fcom
mov
retf
dec
cs
js
out
imul
(bad)
outs
in
add
pop
dec
and
dec
mov
xor
call
shr
test
xchg
sti
jecxz
iret
ss
(bad)
(bad)
cmp
adc
lock
popa
aad
fistp
adc
shl
push
cmp
pop
nop
popa
xchg
movs
int3
(bad)
adc
lahf
sub
loopne
ins
lahf
mov
pop
jnp
mov
mov
push
fdivr
out
ins
xchg
mov
xchg
lods
cmp
repz
test
aaa
xor
xlat
pusha
push
mov
add
xlat
xor
std
dec
int
hlt
sbb
mov
cwde
push
mov
pop
xor
push
outs
clc
(bad)
push
movs
sub
stos
dec
ins
popf
mov
stos
pop
fmul
push
adc
inc
sub
or
mov
jb
into
lahf
jns
and
lock
push
or
lds
push
xchg
out
leave
test
ins
jo
lods
cdq
inc
aaa
cmps
jge
shl
inc
sbb
dec
sub
adc
lods
push
xchg
fwait
(bad)
out
mov
xlat
or
jbe
mov
lods
sar
push
push
hlt
pop
ins
inc
sub
clc
mov
scas
repz
sub
jmp
pop
cmp
xchg
and
and
cmp
or
rcr
lea
loopne
xchg
fcmovne
jbe
xchg
out
cwde
push
xchg
es
test
add
leave
jp
push
push
aad
cld
mov
and
sbb
mov
mov
cwde
popf
mov
mov
int3
jmp
inc
inc
pop
inc
xor
lahf
ret
push
xlat
fucomi
in
cdq
sbb
test
imul
ss
push
mov
add
movs
cmps
jg
out
in
or
sbb
jbe
je
push
cmc
mov
inc
(bad)
retf
(bad)
out
jb
cli
or
out
outs
and
push
xor
or
push
xchg
inc
fist
push
mov
xor
out
inc
mov
fsub
pusha
mov
pop
ficomp
adc
xchg
aaa
and
jle
or
repz
and
jp
mov
test
pop
cdq
add
sub
(bad)
rcl
inc
and
mov
sbb
mov
pop
add
xchg
loopne
mov
rcl
(bad)
aas
xor
push
movs
mov
test
dec
pop
das
sub
(bad)
adc
jl
out
std
leave
jmp
add
icebp
cmp
xor
lahf
mov
mov
ret
mov
imul
imul
mov
inc
ds
push
repz
add
xlat
mov
les
out
call
mov
jne
loop
lods
int3
test
cwde
ds
aas
mov
sbb
ret
jb
lock
fmul
es
xchg
sub
pop
fucomip
jl
(bad)
arpl
sbb
std
shr
jae
lods
jg
xchg
pop
fs
xlat
jle
jg
mov
pop
mov
ja
lds
or
xor
hlt
popa
movs
sub
mov
adc
adc
adc
mov
xchg
call
mov
and
cmps
mov
neg
lods
mov
mov
jp
std
pop
in
sbb
jnp
repz
adc
pop
push
jecxz
aas
les
push
sbb
sahf
mov
mov
aas
mov
cmp
pop
and
leave
adc
std
mov
repnz
cmp
enter
cs
cmp
aad
aam
jb
or
mov
hlt
lahf
popf
jns
cli
push
sub
mov
out
jno
movs
push
int
mov
jb
pop
fimul
and
cwde
mov
and
rol
jne
js
imul
sub
fmul
adc
(bad)
pop
imul
pusha
popf
dec
ds
loopne
test
jne
js
push
adc
cdq
cdq
cmp
sub
adc
sub
ins
sub
jbe
hlt
loope
repz
mov
repnz
or
cmp
jg
mov
mov
outs
sbb
call
in
adc
es
jbe
dec
into
cmp
clc
aaa
pop
jp
xlat
(bad)
call
sub
jmp
in
jbe
jp
and
xor
sbb
popa
mov
retf
pop
xor
sbb
adc
cs
xchg
adc
xor
in
or
inc
inc
push
loope
xor
movs
add
mov
inc
test
mov
cmps
push
out
mov
gs
jbe
jge
add
push
imul
loop
mov
stc
lds
jecxz
rol
mov
inc
xchg
out
push
fcmovnbe
stos
sbb
stos
out
outs
cmp
scas
xlat
sbb
or
jl
rcr
jmp
retf
lahf
bound
or
repz
inc
pop
lea
shl
fnstsw
(bad)
popf
inc
push
xchg
dec
out
mov
cmp
les
push
fldl2e
mov
dec
mov
out
mov
retf
cwde
mov
data16
jge
idiv
mov
pop
sub
and
add
xor
es
inc
jp
xchg
inc
mov
jmp
(bad)
out
cmps
mov
adc
loopne
nop
fs
adc
cmp
and
int
mov
stc
jmp
jecxz
cmp
das
dec
inc
xchg
cdq
pop
call
sub
(bad)
sbb
popf
xlat
fs
fwait
pop
dec
cmps
pop
xchg
inc
jmp
mov
cmp
cmp
js
sub
and
movs
(bad)
loop
mov
mov
push
xor
scas
mov
or
lahf
mov
mov
sbb
call
test
dec
mov
sbb
mov
scas
lods
dec
cli
mov
and
cmp
push
mov
clc
outs
inc
add
in
rcl
enter
int
fisub
cmp
ret
xchg
in
add
jb
fs
int
lock
adc
lds
pop
add
mov
mov
sbb
enter
add
sar
out
fadd
jp
jecxz
std
repnz
or
not
frstor
jmp
inc
cmp
and
mov
retf
nop
mov
es
lock
dec
cmp
stc
cmp
mov
repz
ret
mul
dec
iret
lods
aaa
std
and
dec
dec
jl
sbb
inc
xchg
add
outs
pop
cmp
retf
dec
xchg
hlt
pop
xor
dec
(bad)
jbe
add
pushf
mov
mov
jno
pushf
adc
xor
shl
mov
or
sbb
mov
sbb
push
mov
mov
movs
(bad)
pop
cld
lds
outs
mov
das
cld
sti
aam
shl
mov
inc
out
out
(bad)
popf
in
shl
add
ret
lds
pop
xor
mov
adc
jle
fild
ss
stos
sbb
cmps
mov
dec
cmp
inc
mov
movs
outs
dec
and
mov
xlat
ss
adc
mov
ja
ss
js
jmp
stos
mov
push
and
cmp
loop
mov
cld
shl
pop
repnz
aas
hlt
xlat
retf
inc
shr
ret
arpl
in
fnsave
push
jae
mov
xor
sub
fwait
aaa
fadd
cmc
pop
in
xchg
in
pusha
or
fstp
pop
outs
lock
fld
sub
and
inc
retf
mov
add
fwait
mov
outs
jb
into
fistp
mov
loop
outs
retf
out
arpl
mov
cmp
jmp
int3
hlt
mov
sbb
movzx
mov
inc
and
gs
rol
mov
popf
jmp
loope
cmp
push
fs
ins
jg
mov
pushf
push
jp
daa
sbb
loop
mov
rol
dec
pop
loope
mov
push
pop
push
mov
int3
dec
jle
and
push
dec
aam
in
out
mov
fidiv
push
fist
adc
cs
cmp
movs
mov
mov
or
push
xchg
pop
les
cs
or
mov
sub
clc
test
scas
pop
arpl
sub
icebp
inc
push
pop
into
mov
test
test
das
dec
es
ret
inc
push
lock
in
adc
or
ins
mov
test
add
jecxz
push
std
fild
or
shl
or
test
jno
inc
jle
int
adc
xor
ret
(bad)
jbe
mov
es
sbb
push
xchg
adc
sub
aam
mov
out
sbb
out
fstp
mov
test
xor
gs
outs
pop
xchg
jle
call
pop
(bad)
stos
mov
sub
mov
xchg
jbe
cwde
or
mov
mov
sbb
pop
leave
int3
and
pop
mov
push
add
pusha
hlt
imul
jnp
in
(bad)
int
mov
pop
sbb
add
faddp
or
mov
xchg
push
xchg
retf
xchg
(bad)
push
daa
push
add
pop
dec
loop
mov
aaa
clc
pop
ins
cmp
loopne
cmp
movs
inc
div
cmp
mov
fdivr
jae
sub
xchg
aam
cmp
in
xchg
aad
rcl
xchg
and
inc
sub
shl
jl
dec
sbb
sahf
out
inc
pop
jmp
icebp
imul
xchg
mov
jmp
call
dec
push
sbb
sbb
addr16
xchg
xor
pop
je
into
jle
call
sti
call
mov
sub
sub
sbb
into
inc
call
div
lods
sub
pop
jmp
in
push
addr16
das
fmul
jno
cmp
xor
sub
clc
sbb
xor
push
xchg
into
lds
je
xor
pop
dec
inc
fcmovb
xlat
(bad)
or
dec
icebp
ins
mov
mov
jmp
pushf
jge
and
scas
lea
int
inc
xchg
mov
xchg
sub
jnp
push
sbb
out
out
pushw
or
dec
jmp
mov
ret
dec
clc
cmp
pop
ins
mov
cmp
sub
mov
dec
cmc
dec
adc
or
pop
mov
mov
int3
arpl
call
add
pop
sub
cmp
mov
lods
sti
push
hlt
and
aam
mov
inc
call
sbb
and
mov
ror
sar
dec
in
jp
repz
or
jno
into
xchg
jb
mov
mov
ds
fldenv
or
pop
fiadd
mov
add
xchg
pop
mov
test
jae
sbb
jmp
pop
push
sbb
int
lods
outs
xchg
aad
mov
or
mov
(bad)
or
pop
mov
aas
ret
cmps
imul
(bad)
in
or
mov
add
clc
xor
addr16
xchg
push
retf
sub
mov
mov
adc
ret
jp
(bad)
arpl
jno
fidivr
xchg
js
mov
test
add
jle
pop
pop
and
jb
xchg
rol
les
push
pop
dec
adc
and
std
jecxz
shr
xor
mov
enter
test
lock
gs
sbb
xchg
and
jmp
cdq
dec
jne
mov
mov
rcl
arpl
(bad)
inc
xchg
repz
dec
jae
xor
sbb
and
sbb
mov
pusha
aam
repz
xor
mov
rcr
js
jecxz
sahf
mov
fbld
mov
enter
addr16
cmp
xor
sbb
bnd
pop
mov
les
mov
mov
push
adc
rol
cld
(bad)
lahf
jbe
sub
xchg
xor
sub
daa
fisub
loop
xchg
frstor
sbb
inc
lods
xor
out
clc
push
mov
mov
cdq
hlt
arpl
jno
dec
mov
adc
push
mov
retf
mov
mov
in
out
dec
ins
inc
enter
dec
mov
hlt
inc
pop
mul
call
test
ins
pop
push
hlt
pop
aam
push
dec
and
dec
(bad)
cmc
fst
sub
mov
mov
xor
mov
xor
sbb
stc
ins
popa
cmp
jge
sti
sbb
or
bound
outs
inc
mov
and
jne
mov
shl
jmp
jno
add
push
mov
jge
cmps
mov
xchg
jne
outs
in
addr16
jne
xchg
push
rcr
xchg
sar
leave
adc
movs
xchg
pop
cld
dec
xchg
pop
sar
inc
sbb
ja
jo
sub
cmc
mov
pop
gs
xor
jno
div
add
dec
push
jp
add
mov
lods
dec
xor
cld
pop
mov
push
dec
cmp
int3
pop
sub
or
cmp
push
repz
pop
adc
cmps
ror
div
and
mov
jmp
icebp
mov
dec
fistp
cmps
add
sub
sbb
mov
jmp
jmp
movs
sbb
adc
push
outs
enter
les
and
nop
xchg
push
jbe
test
sub
outs
cs
out
mov
cmp
pop
setp
dec
(bad)
int3
dec
bound
in
mov
movs
icebp
leave
and
pop
ins
pop
lods
cmc
add
lods
and
imul
mov
daa
push
xor
repz
jecxz
sub
mov
les
inc
and
addr16
jmp
mov
sbb
enter
das
ror
dec
icebp
cwde
pusha
cmp
popf
mov
in
loop
cs
cmp
imul
rcl
in
and
movs
aaa
lods
inc
ja
bound
xchg
jecxz
add
pop
rcl
jne
int3
or
mov
add
pop
add
push
stos
pusha
push
jle
sub
mov
inc
mov
cmps
and
dec
sti
jecxz
das
(bad)
sbb
popf
in
and
out
or
std
in
clc
jne
ret
or
push
std
mov
shl
fild
push
out
aam
les
dec
xor
sahf
iret
leave
fbld
test
fstp
pop
repz
inc
lds
aas
hlt
push
int3
xchg
loop
pop
out
sbb
cmp
clc
mov
jno
pop
mov
and
jp
cmp
mov
ins
dec
xchg
lock
in
lods
push
test
fadd
add
retf
hlt
fcomip
inc
lahf
pop
(bad)
mov
jne
jae
jp
addr16
js
push
xor
lea
and
xor
repz
retf
cdq
xchg
ffree
adc
jecxz
inc
mov
push
push
push
ror
sub
je
mov
dec
test
mov
loop
cmp
add
fild
jne
dec
daa
aam
loop
push
xor
retf
or
xor
and
inc
dec
sar
cdq
mov
dec
test
mov
int
pop
mov
mov
mov
leave
push
dec
fsubr
test
dec
inc
and
and
cmp
dec
mov
push
push
xor
aad
neg
push
mov
xchg
mov
mov
ins
or
retf
repz
mov
arpl
es
sub
popf
in
mov
or
and
xor
loope
bound
mov
out
jns
push
push
fbstp
fwait
shl
fild
jmp
mov
cmp
cmp
and
dec
xchg
xor
mov
dec
std
or
adc
xchg
in
test
mov
jnp
inc
sbb
imul
aas
adc
and
jno
aas
out
arpl
ja
call
out
pop
inc
inc
xor
(bad)
sbb
gs
mov
add
pop
xor
dec
inc
(bad)
mov
mov
cmp
dec
add
ret
lahf
std
(bad)
sub
push
cmp
shl
and
jb
inc
jb
lock
pop
int
int
mov
inc
arpl
jns
(bad)
jmp
push
mov
push
mov
ret
mov
retf
dec
aaa
(bad)
fmul
or
repz
push
fidiv
mov
(bad)
enter
pop
mov
mov
adc
pop
(bad)
and
jg
fcmovnbe
fs
test
retf
mov
leave
xlat
nop
in
cld
dec
mov
ds
dec
inc
ficomp
push
fisttp
adc
sahf
popa
les
xchg
shl
iret
fisubr
cmc
push
push
inc
adc
lock
out
out
cmp
into
jb
and
mul
ror
mov
out
dec
jne
sbb
dec
mov
cmps
fmul
ja
fsubr
ror
loopne
dec
gs
sub
xor
movs
pop
jg
adc
mov
mov
cmp
cld
ins
mov
imul
mov
push
xor
xchg
cmp
xchg
jmp
cmp
test
or
jo
or
in
add
jbe
sub
aam
push
ror
and
enter
xchg
xchg
mov
mov
push
push
sub
test
ret
repnz
es
cvttps2pi
xchg
xchg
sbb
push
leave
mov
cmp
jg
xchg
inc
add
pushf
neg
mov
and
mov
sub
(bad)
js
ins
jp
aaa
fs
clc
push
cmps
pop
xor
add
in
and
and
fld
sub
pop
push
inc
adc
mov
jp
movs
outs
push
push
ficom
loop
sub
mov
ret
pop
mov
lock
push
cmps
stc
mov
dec
pop
fwait
sbb
mov
mov
pop
aaa
lea
jmp
jne
mov
push
add
imul
dec
sub
mov
xchg
repnz
pop
and
sub
add
and
mov
nop
repnz
out
push
in
mov
(bad)
sahf
push
add
popf
icebp
out
scas
adc
leave
in
jge
sti
xchg
ror
xchg
pop
lahf
mov
adc
dec
push
and
sbb
inc
jle
mov
test
cmp
popf
dec
inc
sub
jno
das
sub
xor
imul
out
fwait
retf
cli
movs
sub
out
loop
cli
mov
xlat
inc
or
sub
cmp
loop
(bad)
jle
sbb
leave
pusha
arpl
call
or
jge
or
shl
adc
xor
inc
ins
push
mov
icebp
ficom
int3
mov
loop
iret
push
xor
imul
sub
fsubr
repz
jecxz
inc
sbb
pop
js
cmp
sbb
add
loopne
adc
dec
dec
not
lods
xchg
iret
dec
test
pop
ficomp
fimul
(bad)
push
std
xor
inc
pop
push
leave
out
mov
daa
nop
(bad)
call
in
xchg
outs
cli
cmps
add
push
fist
scas
pop
adc
stos
in
mov
inc
sahf
aad
lds
xchg
mov
dec
pop
or
repz
je
jo
adc
test
aad
es
pop
cs
inc
aam
inc
test
mov
sub
stos
(bad)
pusha
push
xor
or
ss
sbb
clc
mov
outs
or
xchg
inc
inc
cli
mov
jnp
cmp
imul
mov
addr16
mov
xor
pop
clc
jmp
xor
enter
adc
addr16
cdq
nop
mov
and
dec
cwde
ss
jg
jno
and
scas
adc
jae
popa
push
popf
cmp
imul
jo
das
add
sbb
shl
mov
sbb
mov
jbe
cmps
add
in
fs
xchg
push
cmp
push
fcomp
jge
repnz
dec
std
sbb
sub
push
jne
(bad)
add
mov
xchg
jp
cs
dec
xchg
stc
cmps
pusha
(bad)
int
add
in
inc
cld
cli
mov
pop
or
cdq
ins
and
mov
lea
xor
rcl
pop
out
mov
hlt
or
cmps
das
and
dec
sbb
xor
ret
mov
aam
xor
int
data16
mov
pop
add
int
push
mov
out
mov
int3
cwde
inc
adc
in
stos
enter
pop
or
stc
sar
mov
mov
cmc
inc
and
adc
xchg
mov
call
adc
adc
or
or
lahf
enter
int
add
mov
inc
call
jno
pop
stos
mov
out
lock
dec
xchg
adc
add
fnstcw
mov
mov
dec
dec
xor
pop
add
jmp
scas
es
lds
sar
mov
sub
inc
or
cmp
mov
je
jg
add
out
add
ss
jecxz
jl
xchg
push
(bad)
jmp
xor
mov
fcmovu
mov
sbb
or
(bad)
cmps
push
jmp
jmp
xor
(bad)
xchg
mov
inc
dec
mov
push
ud0
mov
push
popf
(bad)
push
and
loope
movs
sbb
xor
iret
push
call
aaa
gs
arpl
sbb
nop
cmp
jg
dec
sbb
cld
mov
mov
push
jbe
outs
lock
int
push
iret
out
dec
sbb
mov
dec
je
xor
push
and
push
icebp
idiv
cwde
push
stos
imul
mov
cs
push
cmp
sub
repz
mov
push
sbb
(bad)
sti
shl
pop
pop
mov
in
lock
ins
push
(bad)
pop
dec
xor
dec
iret
popf
test
aaa
xchg
mov
push
aaa
push
push
mov
cmovs
push
pop
cmp
xor
push
mov
jecxz
jle
fisttp
(bad)
mov
dec
int
inc
push
mov
repz
mov
sbb
jmp
cld
popa
mov
xchg
xchg
mov
xlat
and
retf
xchg
or
xchg
into
mov
hlt
in
mov
adc
mov
clc
pop
mov
pop
scas
jne
dec
push
dec
shr
xlat
xor
add
adc
mov
pop
push
and
sbb
aas
repz
push
mov
xchg
aaa
sub
cs
stos
dec
test
xchg
pop
addr16
inc
mov
add
cmp
fdivrp
xchg
jge
adc
push
(bad)
lea
add
push
rcr
cmp
or
adc
cli
test
cs
inc
test
mov
mov
adc
cmp
push
sahf
mov
in
pop
or
xchg
pop
push
push
sub
lock
gs
and
sbb
mov
in
test
shr
push
imul
cld
in
push
(bad)
inc
ins
(bad)
mov
into
addr16
mov
pop
aam
cmp
or
add
push
ds
xor
cmp
cmps
push
pop
or
loop
mov
xchg
inc
mov
mov
xchg
adc
not
popa
pop
pop
cmp
fwait
jne
push
xor
mov
pop
adc
mov
pop
lods
sub
mov
lahf
mov
mov
adc
lahf
push
sub
cli
cdq
or
retf
fdiv
movs
add
ret
icebp
dec
repz
fs
or
push
mov
jmp
dec
xchg
mov
imul
shr
imul
ins
adc
imul
xchg
cmp
push
(bad)
mov
mov
mov
(bad)
xor
inc
inc
pop
mov
xor
inc
mov
adc
repz
in
sbb
or
inc
inc
cs
jns
or
enter
xchg
and
pop
xchg
idiv
loope
add
push
lea
or
mov
jmp
lock
cwde
sbb
pop
xor
xor
mov
push
pop
xor
popa
jmp
sbb
fwait
add
sub
dec
and
jecxz
cmps
push
sub
mov
bound
sbb
out
mov
addr16
test
jg
in
xchg
ja
jmp
stos
xchg
fs
sub
out
xchg
sbb
jb
call
pop
jae
ds
fistp
jge
cli
gs
cmp
xor
cmp
in
mov
xor
scas
ins
mov
adc
add
in
lds
daa
iret
xchg
repz
mov
pop
xor
or
out
loope
sub
add
loope
inc
aas
xchg
aas
cld
pop
pop
popf
jne
add
push
(bad)
shl
ds
repnz
repz
xchg
cli
std
std
or
jg
(bad)
shr
jno
fadd
pop
fild
jecxz
pop
(bad)
or
xor
push
arpl
xor
jecxz
inc
test
and
push
sbb
xchg
mov
sub
inc
imul
es
add
mov
int3
fist
lods
inc
cmp
xchg
dec
xor
into
retf
retf
jnp
adc
out
push
jg
fcmovb
in
pop
(bad)
sub
lahf
(bad)
into
or
or
mov
fcom
daa
jns
xor
jecxz
js
push
cmp
repz
sbb
retf
dec
dec
mov
push
jo
dec
sbb
sub
and
cmp
ins
mov
inc
cmp
push
ins
pop
sub
pop
inc
jbe
push
inc
(bad)
in
in
dec
jbe
add
fadd
bound
stc
neg
out
xchg
mov
cwde
jmp
nop
aas
fwait
cmp
movs
sbb
jmp
mov
xlat
int3
rcr
push
jb
dec
cld
int
jge
xchg
add
cmp
nop
fwait
push
add
(bad)
test
add
fidivr
js
(bad)
mov
call
(bad)
ja
test
and
(bad)
xor
test
cmp
retf
xchg
sar
jmp
ja
out
mov
add
add
in
mov
cs
jno
jmp
inc
iret
xchg
mov
xchg
pop
loopne
cmp
(bad)
mov
jecxz
and
das
mov
popf
xor
mov
jne
or
ins
jmp
and
cmp
mov
movs
test
jnp
xor
jmp
not
sahf
pop
push
in
pop
out
sti
scas
sub
je
in
or
adc
pop
cdq
es
jns
inc
mov
ror
jecxz
rcl
mov
dec
cmps
lds
out
call
mov
push
mov
inc
lds
imul
mov
mov
stos
lea
lods
lock
(bad)
sub
jle
ret
or
cli
sub
mov
inc
cmc
out
cwde
dec
xchg
and
jns
arpl
jb
or
jl
xchg
aam
outs
mov
xor
xor
das
mov
clc
xlat
or
inc
lock
loop
dec
add
sbb
and
ds
push
sub
sbb
cdq
(bad)
call
lea
push
and
daa
sbb
pop
mov
es
xor
int
(bad)
nop
or
mov
sub
imul
fld
retf
pop
mov
es
outs
fimul
sub
leave
jno
xor
(bad)
push
popa
mov
fld
sbb
ds
jl
push
sbb
add
add
scas
push
cmp
dec
dec
retf
mov
dec
mov
inc
jge
ins
out
addr16
ins
ins
push
jmp
cmp
mov
lods
outs
push
stos
cmp
addr16
cmp
pop
(bad)
jge
and
push
fild
jae
or
ja
aas
push
xchg
and
loop
int
mov
mov
jle
cmp
pop
cmp
(bad)
scas
(bad)
jbe
lods
xchg
sub
xlat
icebp
dec
jl
(bad)
outs
cdq
pop
jb
mov
loopne
xchg
ins
test
or
pop
mov
xchg
ficom
pop
sub
mov
cmp
cdq
cwd
mov
mov
daa
mov
jbe
test
xor
hlt
jns
or
test
sbb
pusha
cdq
cwde
xor
aaa
pop
(bad)
dec
jmp
xchg
and
lods
mov
mov
fidivr
sahf
xchg
push
cmp
xor
xchg
movs
repz
retf
mov
dec
lds
and
push
ins
xchg
fcmovnbe
aam
cmp
iret
and
fimul
add
dec
xchg
mov
fwait
out
sbb
rcr
push
mov
push
pop
add
leave
xor
sbb
pop
adc
rcr
test
jp
push
sbb
or
leave
stos
dec
mov
mov
adc
mov
lock
xchg
inc
movs
out
mov
(bad)
shr
fdiv
rol
lods
stos
jno
lods
add
stos
inc
add
das
out
jae
and
retf
dec
xor
jg
sub
push
fdiv
sti
cli
jo
xlat
dec
fbstp
sub
xor
jge
and
addr16
mov
cs
jbe
movs
push
cli
fsubr
or
es
mov
rcr
dec
test
push
push
and
xchg
mov
jg
aam
cmp
repnz
xor
stc
jl
xchg
pop
out
jl
fild
js
cld
inc
push
jg
xchg
js
push
ins
adc
fcom
inc
push
push
adc
loop
scas
ins
dec
sub
jl
mov
pusha
mov
out
fidivr
or
retf
not
inc
out
inc
xor
push
sbb
cmp
pop
push
sbb
loope
add
xor
pop
mov
xchg
sar
cmp
mov
pop
loopne
lea
popf
imul
sub
fsubp
shl
add
in
or
and
jge
inc
outs
sub
fadd
xchg
inc
dec
test
lods
loop
lods
and
push
sahf
mov
xor
daa
shl
xchg
sbb
ins
iret
adc
(bad)
daa
jnp
pop
pushf
mov
sahf
iret
aaa
enter
clc
sub
div
call
mov
int3
mov
pop
enter
loope
cwde
jmp
jmp
push
push
add
inc
addr16
dec
pusha
cdq
xchg
idiv
fisttp
sbb
mov
push
fisttp
imul
cwde
ins
pop
sbb
ins
pop
xor
repz
(bad)
movs
repz
int3
popf
cmp
retf
fwait
pop
adc
call
jge
scas
(bad)
gs
adc
xchg
cwde
mov
inc
sub
sbb
cmps
inc
cdq
std
pop
pop
fisubr
popf
ss
push
cwde
std
das
retf
dec
outs
jmp
cwde
sbb
dec
test
sti
adc
aad
pop
ins
(bad)
hlt
cwde
dec
outs
clc
jecxz
mov
out
cmps
rol
jp
hlt
jno
ss
cdq
jb
pop
outs
sbb
daa
mov
sahf
into
lods
xor
rol
test
pop
and
xchg
cmovbe
retfw
and
sbb
xchg
push
push
ja
jle
adc
mov
add
lea
jne
leave
hlt
ins
sbb
xor
inc
ds
aaa
popf
ins
cmp
aam
mov
aas
stos
push
pop
fwait
cdq
sub
xchg
pushf
push
jo
fwait
xchg
add
add
sar
inc
mov
jb
xor
cmp
and
sar
shl
mov
cmp
inc
push
daa
mov
or
inc
mov
inc
adc
test
push
dec
cmp
xchg
sub
ficom
xlat
mov
dec
fwait
je
test
mov
fadd
gs
sub
(bad)
fcom
mov
dec
pop
xor
lds
add
or
jmp
int3
jns
scas
add
xor
xchg
push
dec
mov
push
inc
ror
and
in
stos
aad
dec
ins
xor
cmp
repnz
add
push
retf
pushf
xor
ss
lock
inc
stc
mov
fst
mov
sti
ins
push
cmp
push
not
sub
adc
repnz
lods
mov
into
sar
into
dec
rol
(bad)
jle
jecxz
cmps
adc
(bad)
and
pop
or
imul
cmps
test
push
inc
jge
dec
outs
test
call
add
mov
mov
xchg
jmp
push
cld
into
xchg
das
test
inc
adc
add
dec
ret
pop
add
dec
call
sbb
es
jle
scas
loopne
sub
xchg
in
sub
mov
mov
jecxz
or
jmp
pop
sub
ret
xchg
nop
or
xor
pop
sub
pop
adc
inc
cs
movs
jo
xor
xchg
nop
mov
mov
inc
cmp
xor
inc
in
sbb
stc
fidiv
adc
ss
jl
or
jmp
enter
or
clc
jge
jle
xor
out
xchg
jge
mov
stos
ficom
xchg
add
mov
xchg
and
inc
dec
push
and
cmp
mov
xor
mov
bound
cmc
jecxz
dec
add
neg
adc
push
cmp
cdq
push
test
fistp
push
xchg
cmp
push
push
cmp
mov
push
mov
xchg
push
cmp
call
out
pop
aad
cmc
xchg
add
hlt
(bad)
pop
mov
call
imul
retf
cwde
loope
lahf
scas
repnz
xor
mov
enter
mov
push
jnp
repnz
pop
inc
int
int3
sbb
(bad)
mov
ret
add
pop
(bad)
outs
dec
iret
xor
pop
(bad)
fsub
mov
xor
or
mov
mov
and
aaa
inc
das
adc
iret
in
ret
jb
cwde
pop
test
push
cmp
cli
and
mov
mov
sti
adc
jmp
dec
fidivr
add
push
movs
mov
int3
push
fcmovb
mov
pushf
ret
lods
xchg
sub
dec
push
out
sub
stos
addr16
dec
xchg
stos
push
dec
lds
add
ror
stos
fld
mov
push
scas
fwait
test
adc
dec
jns
pop
xchg
xor
mov
mov
pop
cmps
ficom
into
xor
lods
pop
jle
mov
mov
retf
inc
imul
adc
push
loope
in
cmp
add
sar
nop
mov
lahf
scas
pusha
jle
stos
popf
and
in
jns
call
ret
repnz
idiv
and
inc
movs
dec
gs
sbb
clc
inc
std
icebp
ror
inc
xchg
stc
ss
out
cmp
dec
mov
repz
jmp
sub
add
ja
stos
jne
test
aaa
ss
inc
dec
leave
push
inc
aam
mov
cmp
ja
push
repnz
sbb
in
mov
push
xchg
sub
gs
adc
je
std
mov
mov
jnp
mov
and
pushf
sbb
cmps
call
arpl
jo
mov
aam
jecxz
jge
leave
(bad)
xchg
cs
xor
ret
dec
and
sub
sar
sbb
jmp
leave
sbb
sub
jle
mov
mov
mov
mov
aaa
shl
lock
push
and
adc
cld
popa
cmp
xor
dec
test
adc
or
push
scas
mov
adc
pushf
or
aad
sbb
es
sbb
dec
stc
push
aaa
sbb
bound
mov
xor
movs
rol
adc
xchg
pop
lds
jecxz
stos
cmps
clc
xor
pop
xchg
mov
dec
cli
sub
lods
adc
push
fimul
xor
stc
mov
out
cwde
inc
nop
xlat
push
stos
sbb
pop
dec
jp
mov
cmp
add
pop
fs
pop
shl
push
and
and
mov
mov
(bad)
test
mov
jbe
lods
or
rol
xor
push
or
das
pop
scas
daa
div
and
add
ds
call
out
dec
lock
imul
fnsave
rcl
aam
into
ds
js
xor
pop
shl
sub
imul
pop
mov
sar
(bad)
jg
in
not
test
stos
pop
jnp
inc
mov
cmp
daa
sahf
test
mov
adc
cmps
(bad)
dec
cmc
ds
mov
inc
push
pop
xor
cmp
pop
mov
xchg
lea
pop
mov
fwait
loop
icebp
xchg
stos
out
push
cmp
add
jg
in
and
cli
fstp
sbb
fbstp
and
dec
xchg
dec
xchg
inc
inc
cmc
inc
mov
pop
push
jae
jge
sbb
movs
aam
das
in
sub
and
inc
retf
mov
mov
jmp
stc
push
sbb
cld
movs
add
mov
or
outs
or
repz
xor
mov
outs
sar
clc
and
adc
mov
mov
stc
dec
cmp
retf
xor
mov
sti
ret
push
jg
fld
loop
shl
pop
or
popa
daa
and
cmp
int
dec
pushf
sbb
lock
in
hlt
dec
jnp
mov
push
cmp
enter
fcmove
mov
mov
scas
and
pop
ss
jmp
js
gs
inc
gs
mov
(bad)
xchg
adc
adc
(bad)
mov
add
inc
cmp
mov
mov
iret
popa
arpl
mov
sub
jne
cmp
mov
inc
xchg
lods
mov
cmp
retf
pop
dec
hlt
inc
add
fadd
push
repnz
xor
mov
clc
out
xchg
int3
shl
sub
mov
outs
mov
js
fwait
fwait
repz
fisubr
push
adc
and
scas
push
cmp
add
jmp
inc
sub
or
jg
or
popf
std
(bad)
pop
or
lock
xor
or
jmp
test
inc
lods
push
mov
fwait
outs
xor
mov
push
jae
push
in
popa
in
jmp
add
jle
or
mov
xchg
mov
mov
push
in
inc
push
xchg
repnz
repnz
push
jl
mov
jecxz
adc
ja
js
stos
repz
(bad)
mov
pop
jle
(bad)
scas
iret
cli
inc
add
nop
or
xchg
imul
into
mov
cmc
mov
(bad)
cmp
fld
mov
sahf
cmp
popa
data16
jmp
inc
add
aaa
mov
addr16
pop
xchg
xlat
inc
mov
fist
push
push
or
out
mov
mov
cmp
xchg
mov
cmp
repz
and
add
dec
idiv
enter
add
int
lods
adc
or
fxch
scas
fmul
adc
rcl
sbb
fs
ret
movs
ror
test
pop
cld
dec
sub
dec
dec
mov
sbb
test
mov
or
mov
jnp
and
lahf
push
push
pop
xor
xchg
xchg
out
ror
sbb
in
mul
xor
mov
pop
adc
adc
dec
loope
test
add
pop
push
fst
stos
leave
and
dec
cli
add
scas
dec
ja
push
sub
shl
cli
jno
pop
icebp
cmp
mov
fmul
pusha
shl
out
mov
push
inc
loop
xor
or
aaa
mov
jmp
test
(bad)
xchg
jns
neg
mov
sub
fcomp
pop
pop
jle
add
inc
mov
inc
mov
and
lds
pop
push
pop
into
adc
push
add
mov
outs
test
inc
cmp
or
loop
xchg
popf
(bad)
lods
adc
jb
fwait
ret
aaa
inc
popf
push
ins
mov
mov
ret
xor
sub
push
ds
rcl
or
inc
mov
cmp
leave
shl
add
fcom
sbb
or
outs
fisttp
loopne
popa
sti
jle
fdivr
sbb
sub
js
adc
push
add
fsub
fldenv
ret
mov
xchg
xor
outs
dec
rcl
inc
push
mov
and
cmp
test
fs
and
push
jmp
push
movs
js
xor
outs
mov
loope
sbb
cmp
scas
push
adc
in
mov
jb
sbb
pop
push
mov
or
push
adc
or
xor
xor
sub
jb
xchg
fsub
pop
loope
inc
xor
mov
or
fwait
jle
imul
pop
call
bound
stos
push
rep
adc
addr16
mov
push
(bad)
out
jb
add
stos
cdq
ret
jb
fs
jae
adc
push
sub
inc
sub
mov
xor
fwait
add
sbb
icebp
mov
mov
dec
add
(bad)
pop
mov
icebp
out
or
adc
cmovb
lock
dec
cli
sub
loope
fcomp
scas
push
movd
adc
sbb
sbb
push
enter
outs
leave
into
sbb
nop
leave
cmp
xchg
pop
xor
repnz
enter
sub
ja
inc
inc
pop
or
lea
mov
push
xchg
fcom
mov
xor
mov
mov
xlat
xor
shr
dec
stos
(bad)
test
loop
cmp
out
add
inc
adc
ins
test
fucom
jg
mov
jns
inc
clc
loop
movs
mov
xor
push
pop
mov
iret
mov
out
pop
pop
rol
inc
fwait
xchg
cvtps2pd
repnz
or
hlt
jp
nop
movs
ja
sbb
rol
out
mov
test
mov
mov
dec
push
push
pop
xor
pop
das
mov
retf
retf
cmp
mov
xchg
in
aas
ja
jns
jge
xchg
call
add
fstp
adc
xlat
repz
pop
xor
xor
add
ss
jo
inc
test
dec
mov
cdq
lea
je
aaa
and
outs
imul
call
shr
shl
push
xchg
je
adc
mov
or
xor
adc
inc
mov
int3
lock
and
test
sub
fmul
fdivr
pop
jbe
xchg
jmp
push
push
in
or
nop
imul
add
sbb
dec
mov
movs
cwde
cld
ins
jp
mov
test
cld
dec
aaa
ja
xor
fnstsw
cmps
sbb
mov
std
(bad)
mov
or
sub
inc
sbb
xor
ret
mov
mov
lahf
add
sbb
in
in
jmp
scas
mov
mov
js
call
rol
xchg
add
lods
dec
iret
inc
mov
fs
inc
scas
stos
pop
add
push
add
cdq
push
add
inc
int
out
(bad)
xchg
push
test
push
out
add
push
and
retf
ror
fs
pop
js
ds
mov
xor
mov
dec
pusha
jmp
call
inc
sub
jno
mov
out
mov
js
ficom
jmp
cwde
rcr
adc
dec
repnz
dec
inc
fwait
lock
jle
xor
xor
je
ret
mov
mov
xchg
jo
or
xchg
fs
xor
add
(bad)
jle
popf
popa
and
enter
aaa
test
cmps
fcmovb
dec
or
xchg
mul
dec
cld
in
mov
jp
sar
mov
lds
fidiv
ja
xchg
cmp
int
aaa
lahf
(bad)
sub
cmp
xor
movs
sbb
jmp
aas
inc
or
in
cli
jecxz
jnp
dec
into
or
mov
or
and
add
and
int
and
fmul
jmp
ss
push
das
fs
mov
adc
es
lahf
and
sbb
aas
cli
arpl
mov
iret
dec
repnz
push
mov
mov
mov
push
or
xchg
call
inc
dec
mov
add
mov
ffree
xor
jnp
push
xor
test
cmps
cmp
fs
adc
out
arpl
aad
data16
sbb
je
adc
push
add
in
sar
dec
mov
hlt
outs
and
pop
pop
retf
xor
retf
push
mov
add
cmps
sub
add
cmp
dec
cmp
push
dec
mov
movs
rcr
mov
adc
jns
cwde
test
dec
or
xlat
movs
fcom
xchg
popf
push
dec
lds
(bad)
mov
imul
cs
fistp
mov
std
(bad)
jns
call
loope
lds
push
sub
lahf
stc
mov
js
mov
jmp
mov
clc
into
outs
ja
rol
out
push
inc
sar
mov
in
sbb
stos
push
cmps
lods
ss
fcmovnb
leave
push
repnz
sbb
cmp
addr16
pop
sub
mov
lahf
(bad)
mov
lds
icebp
fadd
pop
dec
aad
cmp
xchg
out
mov
loop
cmc
dec
(bad)
and
loope
js
and
out
vandnps
jp
dec
test
(bad)
out
popa
sbb
pop
adc
sysret
rol
xchg
popf
dec
sub
stos
push
adc
xor
movs
push
mov
mov
addr16
and
inc
rol
ins
jl
clc
mov
mov
in
pop
or
add
(bad)
retf
into
nop
add
popf
jg
xor
cmc
movs
jno
jmp
cld
mov
iret
push
xlat
xor
(bad)
(bad)
pushf
arpl
jbe
xor
test
push
or
fdiv
pop
sahf
not
sbb
xchg
sbb
push
je
rcr
inc
cmp
mov
into
lahf
pop
inc
ja
inc
add
data16
ins
arpl
mov
push
xchg
dec
sub
pop
mov
or
lea
(bad)
sbb
outs
mov
loope
outs
adc
outs
sbb
sub
int3
repnz
fcmovnu
das
jmp
adc
iret
cmp
cmp
adc
mov
stos
cmps
(bad)
xor
test
ins
lock
add
dec
pop
test
fimul
jl
xchg
ror
xor
scas
sahf
adc
lods
push
push
pinsrw
(bad)
sti
aad
test
sbb
ja
push
inc
pop
mov
cmp
ja
shr
adc
shl
imul
add
fisubr
inc
lock
enter
faddp
jmp
xchg
fmul
push
aas
movs
add
cmp
xchg
mov
movs
pop
gs
fdivr
sub
sub
hlt
idiv
mov
jnp
mov
add
adc
cmc
mov
shr
rol
fld
dec
int
pop
inc
clc
mov
cmp
push
fldenv
retf
rcl
dec
(bad)
pop
adc
pusha
mov
fwait
sub
hlt
add
jg
and
mov
push
mov
nop
ins
stos
xchg
xor
fwait
xor
aaa
inc
add
or
xchg
adc
add
lahf
inc
push
mov
mov
test
in
push
outs
jmp
icebp
cmp
mov
in
call
fcomp
imul
clc
in
fistp
aad
idiv
(bad)
push
mov
jecxz
sub
or
jl
es
dec
and
(bad)
adc
add
hlt
xchg
fcom
rol
pusha
jnp
scas
shl
aas
lods
ins
jg
imul
ins
es
jo
sar
test
scas
dec
adc
mov
inc
inc
mov
mov
popa
and
cld
scas
mov
mov
retf
popa
lock
xchg
pop
inc
mov
jnp
mov
dec
xchg
(bad)
push
imul
fidiv
add
cmps
adc
jae
and
test
jecxz
fsubr
jo
lods
out
push
es
mov
repnz
mov
adc
popa
sti
loop
out
popa
sbb
cld
add
xchg
push
xchg
push
pop
punpckldq
rcl
mov
in
out
movs
(bad)
lahf
sbb
sbb
push
inc
icebp
daa
mov
push
cmp
sti
scas
neg
mov
pop
sbb
fadd
ja
fisttp
icebp
cmps
test
lahf
dec
loope
xchg
aas
lods
jae
sbb
mov
xor
mov
iret
movs
adc
mov
xor
xchg
adc
cdq
mov
das
jo
idiv
xchg
dec
or
stos
shr
xor
jnp
ret
cmp
pop
daa
inc
jnp
adc
pop
inc
movs
add
lods
ja
mov
cdq
mov
push
mov
nop
(bad)
cmp
inc
call
shr
inc
mov
sub
mov
mov
add
push
push
dec
fs
jp
in
add
pop
out
int
sbb
jo
cmp
push
pop
outs
das
arpl
inc
jo
xchg
cmps
mul
xchg
mov
call
add
cmp
addr16
sbb
mov
test
mov
push
int3
sbb
test
outs
jne
imul
daa
and
sub
adc
pop
faddp
mov
fidivr
out
inc
(bad)
popf
add
ja
scas
(bad)
mov
inc
loope
sbb
dec
lods
mov
pusha
std
addr16
xchg
dec
or
xchg
lea
sbb
popf
popa
or
lahf
stos
jno
es
and
xchg
xchg
cmps
inc
sbb
jmp
jmp
pop
outs
test
fidiv
mul
imul
xrelease
movs
push
inc
jge
push
mov
sub
repnz
mov
pop
shr
pop
dec
cmp
mov
mov
xchg
xor
adc
mov
test
loop
(bad)
and
call
fist
jbe
ins
popa
mov
pop
adc
sub
int3
mov
adc
mov
sbb
pop
push
cmps
pop
mov
ror
ret
sbb
push
call
jbe
pop
lods
push
scas
push
xchg
pusha
pop
enter
fild
cmp
in
jb
(bad)
mov
dec
jecxz
and
pop
popa
lods
mov
retf
dec
cwde
xchg
sbb
pop
sahf
enter
lods
aad
retf
retf
mov
call
clc
jno
add
xchg
jmp
pop
push
pop
adc
cwde
dec
dec
adc
loopne
or
icebp
push
sar
scas
pop
jo
ins
jge
push
sub
cmp
cmp
jmp
push
aas
xor
jne
(bad)
in
mov
inc
dec
mov
ror
clc
mov
dec
ret
mov
mov
daa
xchg
shl
aas
add
inc
sbb
fld
sbb
call
or
jne
adc
dec
jge
xchg
pushf
jmp
retf
hlt
inc
xlat
out
arpl
and
addr16
lods
push
cld
pop
ins
mov
sbb
push
push
(bad)
fimul
dec
mov
jmp
mov
mov
pop
push
fsub
(bad)
out
adc
std
scas
(bad)
cdq
push
popf
push
sub
push
pop
inc
sub
call
ja
cs
sbb
popf
add
mov
inc
jge
aam
mov
(bad)
cmp
xchg
aaa
push
sub
mov
repz
out
shl
xchg
mov
(bad)
sub
pushf
(bad)
outs
push
xor
outs
jecxz
cwde
jg
enter
xchg
mov
xchg
cmps
mov
int3
xor
pop
xor
sti
lahf
and
imul
bound
push
pop
lods
sub
mov
dec
xchg
in
inc
push
push
inc
xor
dec
nop
push
pop
adc
cmp
jecxz
mov
test
es
sub
shr
jp
add
xlat
and
jmp
test
je
xor
xor
xor
mov
inc
call
clc
ret
adc
jl
pop
and
inc
in
mov
mov
dec
test
cmovle
xchg
out
imul
out
xchg
jns
clc
mov
jnp
in
mov
sub
cmp
add
bound
xchg
xchg
xchg
cli
jne
mov
mov
loope
jne
nop
addr16
dec
sbb
out
call
fild
xchg
mov
mov
and
pop
(bad)
cmps
xchg
sub
sub
pop
xor
adc
call
mov
scas
push
shl
push
test
cmp
popa
add
int
and
mov
add
pop
les
push
iret
jnp
mov
mov
sbb
or
push
mov
in
jle
fdiv
push
scas
xchg
mov
daa
jge
sub
xchg
fbld
stc
(bad)
mov
call
sub
std
fsub
cmc
lock
dec
sti
imul
aas
mov
fisub
fs
mul
aas
fmul
stos
and
dec
push
add
std
add
xor
or
mov
push
int3
(bad)
mov
stc
fisubr
push
retf
sub
cmp
lea
outs
loope
rcr
adc
scas
test
add
out
xchg
or
std
dec
fisub
pop
jmp
and
les
(bad)
fdiv
in
dec
mov
push
xchg
fcomp
push
daa
stos
mov
cli
or
sub
es
push
pop
shl
lock
stos
cmp
lods
pop
into
test
in
mov
xchg
mov
in
std
cmp
ret
push
(bad)
ins
mov
pop
scas
xchg
ret
xchg
dec
repnz
pop
jno
mov
add
cmp
push
sar
stos
dec
xchg
retf
add
xor
mov
dec
repz
mov
aas
inc
stos
mov
jg
fldcw
inc
sub
outs
scas
or
or
adc
out
(bad)
inc
pusha
fisttp
stc
cmp
movs
mov
not
repnz
xchg
lods
les
push
mov
sub
or
push
ficom
je
lea
ret
xor
ins
or
add
outs
jmp
or
aad
jne
adc
mov
inc
or
sub
cmp
adc
pop
scas
ins
(bad)
adc
aaa
mov
call
fwait
mov
inc
xor
aaa
xchg
jns
bound
clc
cmps
cmps
ret
push
out
sbb
push
xor
fucomi
xchg
push
xchg
dec
movs
cmp
xchg
mov
sub
mov
ins
leave
jb
mov
sub
mov
and
inc
add
inc
fld
push
leave
mov
call
mov
fistp
dec
test
mov
mov
sub
lock
add
sbb
not
mov
sbb
adc
mov
lds
adc
lods
mov
cli
and
sub
push
neg
shl
push
pop
fidivr
mov
fcomp
mov
add
fisttp
lock
push
ja
push
movs
out
push
push
pusha
sbb
and
aaa
lock
in
sbb
cs
aam
sbb
test
ins
call
push
loop
dec
dec
shl
mov
movs
cld
xor
or
add
std
scas
jbe
repnz
jg
pushf
jmp
adc
xchg
mov
out
jns
push
pop
data16
and
mov
repz
push
scas
int
call
sbb
mov
xor
sbb
aad
or
sti
test
mov
aas
nop
movs
push
pop
iret
(bad)
ins
sahf
scas
(bad)
ins
xor
sub
frstor
mov
loopne
jmp
mov
sti
in
ret
sbb
pop
ror
pop
shl
shl
cdq
fwait
add
xor
pop
jae
push
loop
adc
sbb
cld
lods
add
repz
inc
dec
cmc
xor
retf
ja
push
jmp
adc
arpl
(bad)
popf
fdivr
jp
mov
and
jbe
test
mov
stos
in
retf
call
jp
rcr
(bad)
xor
mov
ins
mov
mov
xor
sub
mov
cmps
lods
mov
sbb
shr
adc
je
mov
mov
(bad)
dec
(bad)
call
popf
jne
stc
mov
push
pop
cmp
loopne
fs
(bad)
stc
dec
enter
cmps
mov
je
xor
dec
push
pushf
or
adc
addr16
jge
aaa
test
pop
ins
xor
cmp
iret
inc
(bad)
cmp
ins
bsf
and
ror
mov
mov
jo
out
loope
std
pop
mov
inc
cmp
es
std
aas
jge
loop
mov
xchg
popf
mov
inc
sbb
ins
cwde
and
call
enter
push
inc
(bad)
fidivr
(bad)
movs
outs
mov
ins
push
jmp
aad
(bad)
in
and
popf
xchg
aas
stos
mov
mov
or
aad
lea
nop
rol
fidivr
push
or
rcl
popf
mov
icebp
and
cmp
inc
mov
jne
cdq
dec
cmps
add
(bad)
in
push
mov
retf
int3
dec
push
in
call
pop
ds
sbb
push
stos
xchg
fisubr
pop
std
sbb
adc
mov
push
repnz
(bad)
cmc
movs
mov
pop
mov
rcl
jns
in
imul
lock
pop
ficomp
out
mov
out
mov
(bad)
retf
(bad)
jno
bound
mov
pop
in
sbb
xor
xchg
enter
xchg
neg
(bad)
stos
xchg
retf
fidivr
dec
dec
mov
sbb
xchg
test
or
jl
mov
(bad)
sbb
mov
jnp
(bad)
jne
int3
enter
mov
fsubr
jne
inc
lea
cmp
cmp
lahf
cwde
or
fldenv
mov
call
or
adc
daa
js
lahf
pop
scas
jo
sub
push
arpl
(bad)
mov
jecxz
jb
pushf
cmps
xchg
out
inc
mov
fcom
int
int
in
push
adc
push
mov
arpl
adc
jmp
xchg
mov
das
call
cmc
aaa
js
dec
test
dec
cmp
pop
jmp
retf
pop
push
mov
jg
jb
fisub
jl
mov
or
cmp
jge
fiadd
xchg
inc
ins
fisubr
bnd
mov
inc
aas
sub
push
xchg
sbb
sub
lahf
ins
fisub
sbb
fabs
pop
cmp
out
xlat
add
push
mov
dec
jle
ret
push
mov
mov
add
push
push
cmc
push
cmp
fmul
stos
pop
aaa
xchg
in
sbb
jmp
aas
out
jle
push
pop
mov
xchg
loope
sub
jl
lahf
movs
inc
xchg
sub
cwde
adc
les
movs
fucom
pusha
sahf
xor
stc
mov
scas
retf
push
aad
inc
jno
clc
push
lea
pop
test
push
dec
leave
mov
push
outs
jmp
push
jl
jnp
cdq
ins
add
out
cli
sub
jl
adc
cmp
sbb
loope
pop
cmp
xchg
inc
pop
adc
(bad)
push
or
adc
div
push
or
mov
loopne
es
pushf
lahf
stos
push
push
pop
movs
cmp
(bad)
movs
or
(bad)
int3
push
cmp
repz
ror
mov
sahf
dec
adc
shl
fld
add
add
rol
inc
cld
jbe
sbb
jl
rcr
ret
ror
imul
sbb
dec
ret
retf
xchg
lock
(bad)
in
jo
jmp
dec
mov
icebp
inc
jo
test
and
push
inc
cmp
dec
(bad)
and
pop
mov
dec
adc
scas
push
clc
mov
out
fs
mov
mov
nop
mov
les
ret
pop
pop
loope
stc
in
jae
fnclex
mov
loope
retf
sub
adc
adc
icebp
lock
adc
out
xor
jecxz
push
outs
inc
cmc
pop
jo
pop
push
add
in
dec
loopne
into
jbe
sub
and
hlt
and
mov
pop
push
test
fucomi
pop
loop
popa
mov
or
mov
pop
mov
add
cmc
xor
imul
cdq
sbb
call
(bad)
cmps
data16
lock
jo
inc
cmp
(bad)
jmp
push
addr16
comiss
test
mov
fcmovnu
lods
in
lods
cli
gs
jecxz
xor
scas
mov
aaa
push
adc
mov
pop
xor
sbb
cld
mov
add
outs
fdivr
in
outs
add
iret
dec
push
movs
fisub
jo
xchg
imul
iret
xchg
jl
xchg
aam
std
stos
or
dec
or
int3
iret
vpsubsb
jle
popa
adc
mov
mov
mov
jg
cdq
or
(bad)
mov
scas
mov
dec
sbb
jmp
xor
cmp
lods
push
sub
xor
and
push
mov
cmp
(bad)
add
sbb
data16
popf
inc
sbb
mov
jg
int
fmul
push
shr
jno
mov
fst
add
imul
cmps
mov
repnz
lahf
dec
imul
xchg
jl
inc
icebp
arpl
hlt
push
inc
jp
mov
shl
out
(bad)
mov
mov
retf
push
push
jp
(bad)
fstp
fiadd
add
push
sahf
inc
mov
push
enter
fistp
iret
out
aam
mov
cs
dec
add
fnstenv
jo
xchg
mov
xchg
mov
pop
imul
adc
mov
int
les
xchg
icebp
rcl
inc
mov
mov
in
stos
pop
lds
stos
adc
outs
or
mov
jo
lods
lods
inc
push
sahf
jnp
jb
lea
inc
ins
pop
hlt
xchg
aaa
hlt
(bad)
sub
cld
sub
test
add
stos
push
push
pop
sahf
cmp
sub
push
cmovnp
jb
cmp
orps
dec
add
imul
xchg
mov
jns
out
add
xor
sbb
arpl
dec
rcl
std
and
sahf
(bad)
cmovbe
adc
xor
mov
mov
ret
add
cmps
xchg
push
test
in
dec
retf
loop
push
cmp
clc
ds
xchg
adc
test
jb
mov
icebp
in
and
xchg
cmp
(bad)
adc
adc
pop
jl
and
shl
test
push
pop
xchg
aas
es
sti
imul
div
repz
(bad)
out
inc
leave
aam
in
lods
movups
fstp
mov
jecxz
pop
push
imul
sbb
in
loopne
call
movs
and
aas
mov
or
sbb
push
repnz
aaa
mov
dec
pop
push
shr
test
lods
lea
inc
mov
jecxz
stc
popf
pop
lds
ret
mov
push
ret
or
arpl
loopne
nop
inc
adc
inc
mov
sub
es
jmp
repz
sbb
lahf
sbb
and
and
hlt
xor
(bad)
in
repnz
sbb
pop
aam
pushf
imul
mov
cmp
imul
sbb
and
push
cwde
or
jl
sahf
push
push
(bad)
fs
xor
or
lahf
adc
cli
nop
sti
cmp
js
imul
in
shl
mov
add
xor
pop
sub
das
repnz
push
mul
dec
add
push
loop
push
adc
jnp
mov
push
outs
rcl
ror
dec
iret
xchg
sbb
cdq
(bad)
loope
jb
mov
xlat
imul
or
or
fwait
jp
push
hlt
(bad)
cmp
jg
add
inc
cli
xchg
sbb
loop
loope
movs
dec
repnz
bnd
push
sub
enter
imul
inc
pop
mov
fadd
and
inc
mov
sub
cmp
cmp
dec
xchg
popf
or
adc
cld
jns
jg
loopne
mov
aas
pop
xor
push
xchg
jge
jecxz
sbb
mov
xor
aam
and
in
ret
(bad)
in
outs
xchg
imul
lods
test
mov
mov
addr16
(bad)
int3
mov
retf
es
add
jns
push
out
push
ins
cdq
and
xchg
arpl
xlat
pop
shl
push
cdq
push
pop
outs
call
or
cmps
xchg
adc
push
je
fsubr
(bad)
cmps
addr16
stos
sbb
or
fistp
clc
ja
mov
cdq
es
adc
pusha
mov
mov
mov
int
or
inc
cmp
sbb
push
rol
mov
not
(bad)
out
cli
jmp
inc
cmp
fnstsw
into
test
sbb
add
(bad)
fucomip
mov
xchg
mov
pop
or
push
jo
stos
call
sub
jmp
xor
mov
and
enter
out
pop
mov
cwde
mov
test
xor
inc
pop
(bad)
lods
sub
sub
dec
sbb
mov
in
in
call
dec
arpl
mov
xchg
data16
imul
mov
mov
loop
lea
dec
sbb
mov
stc
jne
xchg
mov
dec
jmp
jg
test
in
dec
jae
in
fisttp
inc
adc
mov
jg
mov
ret
push
cmps
or
mov
jb
aaa
push
jns
pop
jmp
scas
add
or
jp
xchg
ins
nop
sub
std
fdiv
xor
jae
out
add
inc
push
movs
(bad)
sahf
push
sub
inc
loope
pop
arpl
jb
cmp
inc
lods
mov
scas
push
add
shl
fs
movs
inc
cld
inc
rcr
fld
adc
pop
jnp
sti
or
sub
sahf
sub
inc
xchg
or
push
nop
xchg
and
sub
retf
mov
or
ins
sbb
dec
adc
and
movs
jmp
out
enter
and
in
sub
dec
and
sub
in
xchg
jnp
mov
jl
rol
sbb
inc
movs
hlt
ret
call
test
repnz
fsubr
push
mov
retf
retf
mov
cmp
aad
push
imul
xor
push
cld
jge
xlat
lock
call
out
add
xor
dec
inc
pusha
jl
push
in
out
mov
inc
jmp
in
mov
sbb
pushf
cmp
mov
mov
add
mov
pop
mov
sbb
sub
pop
push
lahf
xchg
mov
push
adc
push
xchg
mov
jp
(bad)
fstp
sbb
fs
pop
mov
ja
test
loopne
movs
pop
xchg
or
fisubr
leave
pushf
jmp
mov
push
stos
cmp
mov
cs
pop
xchg
inc
and
icebp
imul
lods
out
fiadd
push
jb
leave
cmp
push
icebp
pusha
or
in
pop
mov
cmp
vpsubw
(bad)
mov
fld
int
addr16
(bad)
movs
xchg
or
int3
popa
mov
(bad)
lahf
pop
adc
leave
and
iret
test
fild
lock
in
sbb
cwde
cmp
sbb
push
movs
mov
cdq
mov
push
pop
push
and
popa
cmps
lock
cmps
ss
int3
test
mov
cld
retf
popa
cmp
fs
jge
push
add
sub
mov
stos
jnp
add
pop
fwait
scas
into
sub
out
xchg
int
sar
and
sbb
fsubr
adc
jp
test
addr16
in
jl
cmp
xchg
cld
mov
xor
(bad)
pop
and
mov
pop
mov
int3
dec
hlt
xor
mov
mov
dec
and
in
repnz
jb
pop
lods
xchg
jg
pusha
mov
push
call
pop
mov
lock
pusha
jns
test
movs
ins
mov
fxam
jne
jmp
or
jle
lods
add
(bad)
pop
xlat
mov
mov
imul
in
pop
push
arpl
rcl
cmc
repz
sbb
(bad)
out
scas
mov
dec
and
lea
add
mov
aas
cld
mov
jne
ret
nop
enter
cli
ret
jns
loope
xor
(bad)
jb
ja
repz
or
mov
cli
pop
push
pop
iret
push
and
enter
add
pushf
movs
or
add
mov
pop
(bad)
repz
ret
in
or
lock
icebp
neg
mov
(bad)
dec
aas
test
adc
enter
(bad)
int
jb
and
inc
in
mov
(bad)
ja
and
movs
mul
xchg
in
add
clc
xchg
sub
push
pop
dec
mov
jbe
dec
jg
aam
and
cmp
adc
and
movs
push
push
and
push
inc
ins
loop
mov
or
pop
lea
sub
je
ds
jmp
(bad)
test
mov
mov
cli
or
stc
popf
retf
add
mov
pop
mov
aaa
ss
pop
pop
push
push
lods
push
pop
mov
xchg
add
pop
ins
push
das
enter
fild
mov
pop
push
ins
lahf
dec
cmp
mov
in
jnp
or
sbb
or
int
leave
push
or
fs
movs
imul
sbb
mov
xor
cmps
(bad)
retf
jne
js
jne
lahf
pop
ss
or
(bad)
mov
inc
and
test
push
inc
out
shl
in
pop
push
sbb
out
dec
fstp
mov
mov
and
adc
bound
movs
call
jecxz
in
pop
int
jge
xchg
mov
push
xlat
push
push
dec
shr
mov
mov
jmp
les
mov
dec
add
into
xor
stc
inc
mov
inc
inc
stos
xor
pop
inc
mov
jno
pop
retf
mov
push
mov
das
push
or
inc
add
rcr
retf
xchg
sbb
adc
jg
std
scas
mov
sbb
or
inc
mov
movs
(bad)
mov
adc
adc
stos
push
fs
push
mov
pop
mov
mov
pop
dec
aaa
mov
mov
ret
inc
jns
pop
jmp
repz
or
jle
es
push
dec
mov
fucomip
repnz
stc
(bad)
mov
dec
xchg
sbb
iret
cmp
add
loope
inc
fdiv
and
rcr
push
enter
mov
xor
and
mov
dec
push
retf
dec
sbb
outs
in
or
fistp
pusha
aaa
add
gs
add
outs
cmp
mov
cmp
fwait
in
mov
lds
sbb
jne
adc
sub
jns
adc
sub
icebp
xchg
arpl
test
ins
and
imul
or
jns
out
cmp
jge
mov
jle
(bad)
iret
loope
pop
jp
dec
ror
mov
pop
test
jns
(bad)
jge
cdq
mov
cs
xor
ins
ins
add
fbstp
and
push
daa
xchg
fstp
ret
aas
sbb
mov
(bad)
scas
mov
repz
jl
dec
loopne
inc
dec
dec
in
and
or
and
jno
cmp
(bad)
jmp
sets
ins
lods
add
jge
mov
mov
push
jnp
mov
mov
leave
nop
push
jne
mov
and
out
cwde
add
in
pop
mov
call
push
aad
ins
(bad)
mov
aaa
jb
cmp
lods
add
test
jbe
mov
cmc
lds
bound
push
jmp
mov
ret
cwde
lock
ror
cmps
and
cmps
pushf
cs
mov
pop
xor
pushf
(bad)
pop
repnz
aaa
test
nop
jmp
das
cmp
pop
test
es
(bad)
call
mov
aam
fistp
inc
int
pop
xchg
cdq
add
or
popa
inc
ror
iret
xchg
dec
fs
xchg
retf
or
xchg
cdq
sti
rcl
mov
adc
bound
xchg
adc
push
mov
adc
or
stc
ss
call
xor
and
mov
ins
push
fdivr
adc
xchg
adc
aaa
nop
(bad)
in
mov
pop
add
loopne
xchg
ficom
ja
mov
jne
das
jb
add
retf
(bad)
xchg
mov
push
mov
cdq
mov
jmp
fsub
sbb
mov
jp
push
push
xor
xchg
mul
push
and
dec
push
xchg
inc
mov
test
sbb
movs
dec
es
imul
add
pushf
enter
inc
fistp
add
push
bound
jge
xchg
test
xchg
popf
sbb
stos
xor
xor
inc
xchg
jnp
jecxz
add
dec
jmp
scas
retf
xor
inc
inc
sub
gs
mov
cmc
test
retf
push
sbb
pop
scas
call
fistp
fnstsw
dec
inc
hlt
inc
jmp
push
ret
ins
lahf
push
mov
sbb
imul
sbb
hlt
(bad)
ret
and
dec
inc
push
push
dec
fxch
and
jbe
dec
xchg
popa
lds
fnstcw
xchg
sti
nop
pop
ins
jb
jmp
mov
loopne
or
(bad)
xchg
rol
hlt
dec
push
call
mov
jle
rcr
add
lea
cli
out
(bad)
push
clc
push
lds
adc
fidivr
cmovno
mov
mov
adc
nop
loopne
adc
fstp
push
sub
jp
cmp
outs
mov
sub
sub
fisub
repz
lea
and
js
ds
loop
rcr
push
int
scas
and
mov
add
jbe
adc
mov
xor
outs
add
cmc
mov
dec
fld
jno
pop
mov
stos
mov
sbb
pop
(bad)
add
sahf
rcl
adc
cs
ja
xor
movs
shl
in
scas
cmp
mov
outs
mov
mov
fs
jbe
push
loop
stc
xlat
jnp
cmp
and
ins
lock
lock
inc
test
inc
out
mov
ds
push
xchg
ins
arpl
dec
sbb
movs
arpl
xlat
iret
xlat
lods
push
loope
add
test
push
and
sbb
in
cld
mov
out
jne
add
jo
dec
enter
call
mov
pushf
cwde
pop
xor
loop
ffree
in
and
daa
mov
sbb
xor
fwait
imul
sti
jns
mov
xchg
lock
movs
test
repz
ja
add
sbb
sbb
xchg
mov
mov
int
cmp
xor
xchg
cmpxchg
and
adc
setbe
jbe
(bad)
mov
loop
ror
push
jmp
loope
mov
pop
or
movs
(bad)
imul
(bad)
jns
js
jbe
mov
jo
lock
add
test
cwde
mov
sbb
mov
push
push
xchg
jns
cmp
clc
(bad)
clc
call
mov
ret
fadd
or
pop
int
add
icebp
mov
pushf
or
pop
dec
mov
push
cmc
push
cli
out
in
and
dec
xchg
jae
out
shl
pop
je
setbe
dec
or
mov
fistp
test
xor
je
add
jg
adc
sbb
sbb
rcr
cmp
outs
cmp
jge
adc
push
shl
or
imul
mul
push
retf
sbb
adc
jmp
jg
test
cmp
mov
idiv
or
mov
mov
inc
mov
cwde
pop
xchg
movs
test
sbb
nop
addr16
int
repz
mov
dec
not
leave
ins
or
dec
fisttp
pop
inc
sar
vshufps
enter
pop
pop
int3
or
push
xor
pop
jo
scas
add
cwde
jmp
test
mov
fdiv
test
mov
or
in
jp
ret
mov
popa
jge
lds
cmps
scas
sub
test
sbb
jb
clc
xlat
sbb
movs
cmp
dec
inc
fnsave
fadd
sub
cmc
adc
repz
add
int
inc
push
sub
mov
inc
sub
retf
push
clc
gs
adc
jecxz
pop
(bad)
mov
ret
sbb
ds
jmp
js
jo
fnsave
fiadd
push
cmc
mov
dec
fcom
sub
pop
and
jne
sub
fidivr
xchg
fldcw
inc
pop
pop
sub
pushf
inc
push
jo
xor
jl
lahf
inc
mov
retf
jl
fidivr
out
pushf
ffreep
ins
ins
or
xor
mov
jne
icebp
out
ret
pop
(bad)
(bad)
cs
movs
movs
xchg
enter
dec
(bad)
call
hlt
and
push
test
ror
ret
adc
aam
mov
retf
les
es
enter
and
test
scas
cmp
js
arpl
es
dec
add
push
xor
out
inc
idiv
adc
cmp
repnz
xor
dec
cmp
push
sbb
adc
mov
jecxz
push
sahf
call
loopne
adc
aas
mov
xchg
xor
stos
icebp
aam
icebp
fs
ret
push
pop
rcr
mov
dec
xchg
je
inc
out
add
sbb
sti
pop
push
scas
mov
fxch
lock
sbb
cmps
mov
rol
or
mov
(bad)
cmp
cmp
jle
ds
pop
pusha
(bad)
jmp
mov
jne
pop
pushf
pop
inc
dec
int3
mov
(bad)
jle
cmp
dec
retf
fistp
pop
sub
inc
mov
xchg
pop
pminsw
sub
shl
lods
call
lds
or
jbe
lods
mov
test
out
pop
xor
popa
fdiv
xchg
sysexit
sbb
cli
mov
push
jmp
sub
mov
sbb
ins
outs
outs
lahf
rcr
sub
in
std
je
pop
mov
xchg
xor
xlat
push
adc
jl
xchg
sub
jl
(bad)
sbb
adc
add
into
enter
lea
(bad)
pop
dec
xchg
jnp
inc
in
outs
and
sub
dec
cmps
and
ja
into
cmp
repnz
cmp
inc
mov
cmps
fist
sbb
mov
je
adc
mov
lods
or
mov
mov
aad
ins
or
jg
pop
mov
leave
xchg
fisubr
rol
mov
xchg
sar
xor
xchg
cmp
push
jbe
loop
cmp
or
popf
inc
push
dec
ror
js
clc
pushf
jl
shl
outs
fbld
pop
push
jmp
mov
push
or
scas
sub
ret
mov
fisttp
call
xchg
mov
rcr
movs
xor
hlt
xchg
lods
ja
int3
dec
pop
pop
fnstenv
sti
sbb
lock
sub
sub
push
std
adc
or
div
xchg
sub
dec
jle
pop
jecxz
push
and
in
jo
cmp
push
mov
stos
int3
and
jns
push
pop
call
repnz
xchg
pop
(bad)
jbe
ja
pop
std
arpl
(bad)
jbe
pusha
cmp
lods
stos
in
mov
mov
inc
cmp
ins
cmps
jl
dec
in
arpl
jns
cmp
mov
mov
popf
add
add
je
mov
xchg
mov
call
mov
ja
jge
fwait
or
js
mov
je
lods
mov
xchg
add
sub
fistp
xchg
dec
adc
out
mov
(bad)
xor
dec
mov
jp
add
neg
loope
xor
rcr
loope
adc
xchg
test
ret
mov
test
inc
push
iret
movs
mov
dec
add
and
adc
stos
jnp
fild
aaa
outs
(bad)
jns
jmp
inc
scas
es
fnstenv
mov
push
dec
push
(bad)
loop
jo
and
sub
xchg
jge
nop
pop
mov
daa
or
cmps
inc
scas
cmc
(bad)
js
shl
arpl
and
fcom
repnz
jl
add
push
nop
push
dec
xor
mov
gs
cmp
push
pop
pop
inc
inc
mov
popa
pushf
cmp
mov
sbb
mov
cmps
xchg
adc
out
adc
ja
cmp
arpl
loop
push
ret
mov
icebp
fdiv
fwait
jle
push
mov
aaa
cld
push
pop
add
jecxz
sahf
push
mov
ret
clc
push
test
outs
jmp
sti
xchg
stos
sub
cdq
aad
jmp
mov
cmp
cmps
xlat
jl
into
call
mov
mov
dec
pushf
fnsave
cmp
(bad)
(bad)
cmp
cmp
pop
stos
and
aam
fld
push
sbb
xor
fucom
xchg
pop
mov
inc
iret
adc
push
mov
inc
cld
cmp
sbb
aas
mov
add
cdq
jb
sub
inc
inc
mov
sar
ror
xor
outs
sub
lods
mov
dec
add
dec
ins
push
iret
lock
xchg
sub
loopne
jae
fwait
mov
xchg
into
and
cmp
arpl
icebp
imul
mov
mov
mov
shr
mov
pop
or
cwde
mov
arpl
mov
sub
clc
cld
push
shl
fsubr
sbb
inc
push
in
ds
fidivr
sbb
adc
icebp
xchg
leave
jmp
je
push
mov
sub
sub
pusha
xchg
jbe
test
repnz
out
pop
pop
das
push
scas
(bad)
enter
push
ja
js
inc
push
popf
adc
xchg
sahf
int3
xor
pop
xor
leave
aad
jmp
fistp
or
xchg
jnp
cmp
popf
cmp
pushf
jle
xchg
and
jmp
movs
call
xor
jg
in
push
push
mov
sub
pushf
xchg
jle
call
lahf
sbb
int
int
fsub
xchg
dec
xchg
or
rol
cdq
xchg
or
std
push
mov
pop
lods
sbb
mov
test
push
aas
fdiv
mov
fcomp
jge
mov
xchg
icebp
and
bound
js
cli
push
mov
mov
cmc
out
sub
mov
or
pop
pop
pop
inc
scas
jp
dec
cli
pop
inc
mov
or
dec
mov
inc
cwde
scas
(bad)
mov
or
(bad)
sti
leave
popa
hlt
push
mov
or
ins
jno
mov
je
scas
into
dec
sbb
push
retf
jnp
cs
mov
pop
mov
jl
pop
mov
push
imul
push
sbb
jno
xor
sub
add
push
jbe
cmp
(bad)
jp
es
cwde
retf
call
or
jmp
popf
call
call
lods
mov
movs
test
mov
mov
push
jl
adc
movs
imul
pop
xor
(bad)
retf
cmp
dec
movs
mov
loope
loop
ror
add
pop
or
and
xchg
pusha
sbb
sti
adc
out
(bad)
outs
cmp
je
pop
lea
es
std
and
jo
xchg
xchg
enter
popf
sub
iret
xor
stc
out
sub
aas
jp
jmp
mov
scas
adc
pop
mov
add
cmp
(bad)
ins
mov
mov
cmp
rol
arpl
sub
fild
mov
dec
(bad)
mov
push
sbb
push
mov
sbb
fcomp
cmp
xchg
bound
pop
dec
in
int3
loop
inc
data16
loop
jge
inc
retf
sahf
mov
xor
push
movs
mov
xor
push
lods
xchg
lahf
dec
jmp
dec
in
adc
xchg
pusha
xor
dec
int3
aam
mov
jecxz
mov
xchg
pop
les
cdq
push
pusha
xchg
xchg
dec
call
or
cmp
dec
cmc
movs
pop
add
scas
pop
lahf
call
cmp
out
shl
into
pusha
mov
sub
shl
cmp
lock
ss
mov
inc
mov
push
add
(bad)
mov
jmp
(bad)
scas
jns
jno
aam
sbb
test
aam
in
mov
es
gs
jl
jnp
movs
pop
rcl
test
dec
sbb
xor
adc
mov
push
mov
jmp
xor
mov
push
sar
mov
inc
sub
mov
test
push
lea
fld
je
ins
retf
cs
inc
xor
jp
cmps
fnsave
clc
cli
mov
lods
call
ss
imul
ficom
or
add
adc
scas
or
mov
sub
in
leave
in
sahf
rcl
es
jg
cmps
out
jbe
sub
pop
clc
inc
in
mov
and
xlat
mov
enter
call
enter
aaa
sub
lods
mov
push
sbb
test
data16
leave
and
sub
inc
ss
loopne
clc
add
repnz
jl
popa
ins
repnz
push
leave
fadd
pop
pop
mov
retf
(bad)
movs
mov
std
push
loop
loopne
jge
das
movs
and
cmp
dec
loopne
adc
movs
mov
and
imul
addr16
and
mov
vmovq
add
sbb
cmp
sar
jae
xchg
inc
loop
pop
sbb
pop
push
clc
cmp
aas
dec
mov
xor
dec
hlt
scas
lahf
lea
ds
mov
mov
leave
sub
cmp
xchg
out
inc
out
fs
xchg
cmp
inc
mov
push
mov
pop
or
(bad)
jne
mov
repz
jg
push
pop
xchg
xchg
aam
fdivr
gs
jb
addr16
stos
test
sub
or
test
mov
mov
sbb
(bad)
jmp
das
add
and
or
dec
lock
push
mov
mov
add
add
xor
jmp
push
ds
(bad)
int
std
dec
mov
jnp
inc
test
add
cmp
pop
cli
mov
ret
xor
push
popf
sbb
into
adc
inc
leave
inc
in
in
std
jo
inc
je
imul
jo
inc
ins
adc
arpl
xor
mov
inc
push
(bad)
std
fisttp
add
ja
jnp
sbb
dec
hlt
add
cwde
shl
pop
add
fs
loopne
or
into
cmc
and
sub
adc
dec
push
adc
jns
sti
cmp
add
xor
out
or
and
dec
jl
bound
in
or
ins
xchg
cmp
in
test
push
add
(bad)
push
out
repnz
push
sub
stc
(bad)
stc
pop
aam
and
mov
fmul
xchg
pop
cdq
and
das
shr
in
in
xchg
or
pop
push
xchg
mov
dec
call
cmps
pop
ret
pop
push
ins
mov
inc
sub
clc
cmp
frstor
adc
xor
loopne
loopne
sub
add
xlat
lahf
xor
sar
imul
mov
gs
mov
loop
pop
mov
rcl
popa
cmp
fstp
add
(bad)
in
and
(bad)
shl
in
test
xor
mov
sub
xchg
and
and
or
jg
pop
xchg
cmp
or
add
dec
fwait
pop
and
mov
cmps
push
xchg
jecxz
leave
fwait
icebp
loop
fild
addr16
xchg
adc
add
fild
dec
push
mov
push
ins
mov
dec
xor
mov
out
mov
scas
in
fs
xchg
daa
scas
sbb
xchg
int3
add
ja
sub
movzx
push
in
mov
dec
sbb
in
pop
jg
push
sub
and
mov
push
pop
movs
pop
hlt
dec
icebp
fidivr
ja
inc
xchg
mov
mov
push
cwde
retf
movs
(bad)
ret
xchg
ret
push
dec
dec
xor
mov
xor
jns
rcr
cmp
push
pop
dec
nop
rcl
push
bound
push
call
out
ret
pop
sub
sub
pop
lock
cs
arpl
cmp
jecxz
sbb
call
sub
xor
ret
inc
inc
imul
aad
cdq
xchg
out
pop
es
in
mov
aaa
je
xor
xor
push
push
pop
outs
pusha
push
add
mov
icebp
outs
rcr
sbb
inc
push
mov
inc
pushf
xchg
xor
nop
mov
sub
adc
dec
jmp
rcpps
popf
mov
mov
aam
jmp
je
je
and
xor
es
xchg
mov
xchg
std
mov
and
imul
push
add
loope
scas
aam
jl
push
fcomp
movs
mov
hlt
push
out
xor
push
fnstcw
dec
inc
push
cld
pop
or
dec
pop
xor
jo
mov
mov
dec
ss
push
retf
jmp
jno
(bad)
(bad)
jp
inc
pop
mov
fist
test
popf
in
cdq
mov
ret
add
std
repz
mov
loope
gs
dec
sbb
mov
add
xor
fnstcw
fld
and
inc
sahf
push
lahf
pop
pop
push
inc
pusha
aad
pop
pop
pop
push
sub
stos
sbb
mov
push
gs
jmp
aaa
sbb
xlat
fcom
and
rol
sub
jno
and
call
pop
repnz
sti
pop
inc
xchg
push
cmp
outs
out
test
add
ret
cmp
loopne
out
mov
add
dec
sub
push
mov
mov
jo
fsubr
or
adc
mov
jmp
and
gs
cs
movs
ficom
and
add
cmp
(bad)
jno
shl
or
add
xchg
sbb
push
test
icebp
call
je
sbb
in
in
adc
dec
popa
sti
js
ret
xchg
int3
jmp
stos
inc
sbb
aas
mov
out
push
test
mov
inc
xlat
retf
pop
nop
cmp
out
xchg
adc
fistp
cmps
add
stos
addr16
push
icebp
fmulp
stos
cmp
mov
inc
jmp
mov
sub
or
rol
and
and
pop
mov
push
scas
pop
push
fldcw
xor
xchg
movs
js
int
cmp
push
test
mov
mov
push
imul
es
jbe
arpl
and
mov
mov
rcr
sub
stos
repz
dec
push
cmp
push
push
int
jbe
enter
imul
or
out
sub
mov
hlt
jno
sbb
jo
dec
ror
(bad)
xchg
dec
retf
fisubr
mov
xchg
cmps
bts
shl
cmp
pop
data16
xlat
cli
push
clc
mov
dec
dec
std
cmp
lea
or
mov
pop
rol
test
loop
pop
icebp
rcl
jecxz
dec
jge
retf
cdq
ret
xchg
jl
mov
ret
sub
xchg
fdivr
push
rep
and
push
mov
xor
lahf
adc
shl
dec
cwde
(bad)
or
jb
enter
mov
pop
adc
mov
cld
and
and
mov
or
cld
fiadd
mov
stos
cmp
pusha
cli
xlat
daa
in
jae
clc
dec
scas
jg
fidiv
fs
out
xor
lds
add
inc
fisubr
cli
fstp
add
xor
cmp
cmp
aaa
lock
pop
push
push
rol
sar
mov
mov
pop
sahf
lods
scas
call
shld
mov
xchg
push
sub
pop
xchg
stos
in
stc
xlat
push
mov
cmps
xchg
mov
pop
jnp
int
scas
dec
cmp
mov
out
mov
fs
mov
mov
jge
xor
add
xor
rcl
xchg
push
push
and
sub
pop
dec
or
cli
dec
lods
ss
pop
repz
add
out
pop
cmps
pop
cld
mov
or
aaa
addr16
xchg
fdivr
lds
or
mov
sbb
ins
jnp
or
icebp
je
sub
arpl
mov
jb
mov
fst
sbb
mov
or
jae
inc
ins
mov
add
pop
xchg
xchg
cdq
add
ja
lahf
or
mov
inc
retf
cwde
call
sar
repz
pushf
sub
xor
sub
jae
leave
push
or
sub
lea
cwde
popa
cmp
mov
(bad)
fld
and
ds
adc
pop
pop
ja
jle
inc
fisttp
push
aam
inc
mov
push
stc
hlt
loop
mov
jbe
cld
pop
hlt
pushf
sub
adc
dec
jbe
xchg
push
mov
sub
xchg
dec
in
outs
xor
push
iret
cmp
(bad)
shl
push
int3
sub
and
call
and
leave
rol
arpl
dec
dec
cmps
pop
adc
ds
mov
mov
or
xchg
shl
pop
ja
fimul
push
mov
cwde
sub
in
sbb
jb
jg
outs
enter
in
fs
mov
sub
ins
(bad)
xlat
sub
sbb
ret
mov
inc
in
jne
push
imul
daa
cmp
ja
jl
test
jge
adc
dec
mov
sbb
int
cmc
mov
adc
sar
retf
xchg
int3
test
cmc
cld
fldenv
shl
mov
bound
cmps
sbb
sti
and
inc
cmp
loopne
jo
xor
mov
xor
ins
mov
inc
jmp
sub
aam
pop
cmp
ret
lea
push
sahf
aas
cmp
ins
scas
test
and
dec
jnp
ret
scas
mov
cmp
push
test
xchg
rcl
inc
mov
call
pusha
push
ja
inc
nop
inc
add
and
push
xchg
jne
fidivr
iret
push
sbb
and
(bad)
mov
int3
fbld
sbb
add
pop
(bad)
cmp
js
jmp
arpl
jge
hlt
test
leave
fstp
inc
nop
jbe
push
cmp
mov
mov
pop
mov
mov
scas
pop
mov
push
cmps
fsub
or
in
ds
outs
add
lods
cmc
js
test
mov
repz
mov
mov
pop
sub
sbb
inc
or
arpl
leave
push
rcl
js
xor
icebp
and
pop
xchg
icebp
push
jns
test
loopne
popa
movs
gs
cli
adc
mov
stos
dec
aad
fistp
add
xor
cdq
mov
dec
and
imul
inc
mov
push
(bad)
xor
or
xor
dec
shr
jae
repnz
mov
mov
add
and
xchg
sub
lods
cmps
imul
pop
in
(bad)
pop
or
fisttp
add
imul
mov
pop
mov
sbb
adc
call
push
arpl
rol
nop
test
and
pop
add
addr16
hlt
(bad)
stos
sahf
jb
dec
add
movs
arpl
pop
out
inc
es
or
mov
or
mov
xor
in
idiv
ret
adc
lock
loope
fwait
xchg
test
mov
aas
clc
push
aam
movs
es
lods
adc
mov
pop
mov
or
inc
je
div
xchg
addr16
fcmovbe
adc
imul
xlat
(bad)
mov
ficom
icebp
inc
out
add
or
push
ins
mov
call
jg
cmp
mov
pop
push
das
xor
(bad)
and
fistp
sub
xor
mov
ds
xchg
jb
mov
outs
pop
push
xchg
and
stc
cmp
fidivr
out
aaa
xchg
icebp
test
or
mov
mov
jbe
xor
ret
and
xor
out
pop
les
in
clc
cmp
movs
in
dec
sub
cld
and
ss
push
mov
mov
cmp
jns
stc
pushf
nop
dec
jnp
sysexit
fnsave
retf
jno
fild
in
push
cld
shl
lds
enter
enter
jbe
movs
jne
sbb
add
ret
call
aaa
mov
test
cmp
and
fdivr
and
and
sbb
mov
inc
cwde
scas
push
jo
outs
retf
test
or
ss
push
leave
mov
xchg
mov
inc
stc
jle
jmp
pop
cwde
mov
adc
cmp
scas
popf
sbb
and
fidivr
cli
shl
movs
cmp
movs
fnstsw
jae
cli
js
xchg
cmp
adc
mov
icebp
mov
inc
sbb
push
ficom
mov
cmps
xlat
shr
hlt
lods
clc
data16
cmp
ds
push
pop
add
jmp
push
inc
and
mov
mov
sub
xlat
fld
xor
xchg
daa
arpl
mov
cs
and
imul
mov
(bad)
sub
inc
hlt
pushf
fwait
mov
pop
mov
leave
or
dec
jmp
aas
sbb
jle
add
sahf
push
mov
cmc
push
mov
(bad)
aaa
leave
das
mov
das
sbb
les
mov
shl
mov
ror
stos
mov
jns
xor
pop
jb
sub
int3
es
rol
add
in
mov
int
dec
push
fsub
add
jo
pop
ins
inc
dec
loope
sti
out
neg
and
cmp
adc
fdivrp
loop
jg
dec
aas
(bad)
and
pop
mov
lock
pop
jmp
scas
xchg
rcr
sbb
comiss
ss
loope
mov
das
add
sub
jmp
test
test
pop
int3
mov
popf
ins
jmp
aas
pusha
cmc
daa
push
and
jb
pop
mov
out
ret
and
jl
mov
sbb
cmp
rcr
adc
clc
idiv
sbb
popf
int
pop
fisub
dec
push
or
leave
hlt
adc
cmp
mov
mov
outs
push
xchg
loopne
pusha
pop
jno
mov
cmps
and
or
or
mov
hlt
cwde
cmps
aam
aaa
scas
lods
loope
jno
inc
push
or
mov
mov
push
aad
outs
(bad)
jp
pop
cmp
fistp
inc
dec
je
je
inc
dec
xlat
mov
adc
imul
repz
call
test
xchg
cdq
std
or
gs
in
test
push
push
adc
dec
add
bound
dec
or
lea
mov
scas
test
or
pop
mov
xchg
mov
je
cmp
dec
push
rcl
sar
or
mov
out
push
aaa
aam
mov
outs
mov
push
sbb
mov
cmp
aad
or
xchg
pop
aas
cmps
int3
mov
inc
sbb
xlat
loop
fcomp
inc
adc
(bad)
sub
movs
stos
(bad)
ss
std
push
iret
mov
add
fimul
mov
sub
push
ret
icebp
push
ds
inc
imul
stos
fsub
ret
lock
dec
ror
cmp
jp
mov
inc
push
mov
mov
sbb
loopne
fwait
dec
(bad)
pop
out
pop
sub
pop
pop
xchg
stos
ds
je
push
rcl
sub
fmul
addr16
push
dec
push
test
add
pop
out
lahf
daa
(bad)
mov
aad
cmp
ja
mov
lock
adc
inc
ret
push
movs
jnp
out
or
fadd
lahf
xchg
inc
push
mov
or
jg
jge
sub
cmp
sbb
int
faddp
fisubr
sbb
int3
adc
push
es
in
mov
or
rol
out
sbb
cmp
push
stos
jne
cmp
loopne
push
adc
pop
outs
or
nop
out
call
pop
popf
push
pushf
xor
mov
fimul
cld
ret
mov
(bad)
xchg
push
xchg
pop
mov
(bad)
pop
sub
ror
and
and
add
or
xor
fld
xchg
in
or
(bad)
out
lock
pop
dec
xchg
mov
popa
adc
and
lea
sub
ins
cmc
push
fwait
xor
xor
scas
or
retf
add
cdq
mov
call
push
test
mov
pop
(bad)
dec
xor
jno
lahf
cmps
in
jb
into
shl
fldenv
cmp
mov
fld
sbb
sub
push
cmp
push
(bad)
jp
push
xchg
and
mov
cld
int3
jmp
pop
pusha
addr16
mov
js
dec
xchg
push
sub
or
retf
(bad)
jnp
scas
aam
push
out
sbb
xor
inc
out
mov
jmp
or
xor
inc
cmp
pop
adc
mov
jg
adc
shl
cli
out
sbb
fwait
aaa
fadd
sti
in
ins
jmp
jge
dec
in
add
jae
mov
mov
(bad)
fcom
sar
sub
push
sub
arpl
adc
inc
cdq
mov
sar
mov
dec
pop
add
push
stos
mov
jecxz
fstp
inc
fwait
scas
inc
sub
push
pop
or
scas
adc
jnp
fdivr
leave
inc
jnp
rcl
imul
nop
jle
iret
jl
jno
(bad)
cmc
aas
das
bound
jp
and
pop
jmp
fcom
iret
(bad)
mov
cwde
lds
jnp
push
enter
mov
xchg
or
sbb
test
fmul
jb
movs
mov
rol
ret
sub
adc
cmc
(bad)
xor
cmp
inc
fcomp
xchg
xlat
arpl
in
movs
adc
lods
mov
cmp
(bad)
cld
cmc
icebp
mov
imul
ret
cwde
sahf
(bad)
loope
xchg
xor
in
ret
mov
jg
pop
data16
stos
(bad)
cmp
mov
sub
mov
mov
mov
xchg
and
in
dec
ror
xlat
mov
lock
addr16
pop
sub
xchg
fsubr
(bad)
jo
jle
lahf
sub
mov
mov
pushf
(bad)
lock
ins
mov
bound
jle
xlat
js
jne
pop
retf
jns
cmp
in
cmps
es
mov
dec
xor
nop
adc
test
call
cmps
ins
(bad)
mov
push
jno
or
movs
sub
out
dec
xor
cmp
movs
iret
in
mov
(bad)
std
or
adc
cs
pop
(bad)
cdq
add
inc
inc
dec
repz
jl
shl
mov
daa
push
jg
in
fwait
and
push
das
xchg
nop
xchg
daa
jmp
(bad)
and
arpl
clc
jp
push
in
fimul
int
xor
inc
shl
or
jg
in
inc
push
fcomi
stos
xchg
mov
mov
fdiv
mov
fs
mov
(bad)
mov
fld
inc
les
xor
dec
mov
out
js
or
inc
rcl
js
cwde
xchg
popf
xor
inc
int
shl
iret
popf
add
sub
aas
or
sub
lahf
call
rol
mov
pop
inc
cmc
repnz
inc
inc
int3
xchg
adc
cmp
mov
jge
popf
dec
add
cmc
add
in
ret
sub
xchg
clc
dec
out
adc
push
push
sub
retf
pop
mul
jbe
xchg
jb
mov
cmp
inc
outs
loope
sub
jg
xor
push
dec
scas
rol
pop
shl
pop
jmp
and
adc
jno
jmp
sub
or
jecxz
inc
ins
and
int
jge
mov
add
bound
fdivr
xor
push
xchg
mov
out
adc
mov
ret
and
fisttp
ins
adc
in
popa
add
mov
out
test
dec
daa
and
mov
std
and
js
in
cdq
hlt
out
test
fstp
add
push
pop
(bad)
imul
out
push
inc
adc
or
dec
adc
in
mov
test
adc
mov
sub
ret
xchg
into
cmp
jmp
inc
add
bound
loopne
cmp
mov
lods
fstp
push
loope
cwde
mov
in
xor
xchg
call
jge
sbb
jns
xor
cmp
add
mov
(bad)
mov
jb
adc
mov
outs
popf
stc
mov
pop
xchg
leave
mov
xchg
enter
jae
dec
out
arpl
ins
mov
or
inc
loope
pop
fs
jno
push
pop
lods
fild
imul
adc
xor
or
ins
jge
adc
pop
mov
add
(bad)
ds
ficom
pop
and
or
xlat
push
jo
mov
push
dec
ja
inc
mov
dec
lds
mov
lea
pop
icebp
mov
xchg
cs
int
xchg
sbb
cmp
(bad)
inc
test
nop
(bad)
push
or
xchg
mov
sbb
jbe
movs
sub
push
movs
push
in
nop
push
sbb
cmc
call
xor
call
mov
push
in
mov
pop
xor
and
call
leave
out
pop
mov
adc
pusha
xor
mov
or
or
cmp
inc
pop
and
aad
mov
in
push
pop
xchg
out
inc
jns
js
mov
or
adc
adc
cld
mov
lods
xchg
jae
icebp
and
sahf
cdq
enter
or
mov
pop
cmps
pop
push
es
dec
and
inc
(bad)
in
cwde
sbb
jae
mov
rol
(bad)
mov
rol
pop
pop
jae
jg
push
add
int3
test
pop
and
call
or
fs
xor
aas
and
xlat
data16
and
pop
cmp
mov
aaa
jmp
das
mov
(bad)
ins
aaa
pop
ss
lahf
mov
cmc
clc
popa
inc
jae
adc
ins
addr16
mov
jns
gs
int3
(bad)
mov
shl
mov
call
out
mov
fidivr
mov
shl
xor
hlt
arpl
push
inc
inc
cli
(bad)
jo
xor
mov
shr
ds
clc
scas
retf
and
jp
mov
xor
mov
jmp
push
fcmovb
cmp
inc
std
push
es
mov
jl
sbb
jmp
pop
adc
push
mov
adc
lock
add
cmp
adc
and
fwait
sub
push
mov
push
retf
dec
xchg
mov
mov
mov
pop
ins
jge
and
adc
test
push
cmps
or
push
arpl
dec
jnp
out
push
pop
add
push
cs
pushf
push
retf
or
gs
pop
cmps
add
or
mov
jmp
sub
shl
dec
mov
ds
mov
jecxz
jle
cmc
lahf
pop
inc
mov
leave
call
mov
cmp
xacquire
sar
mov
pop
pop
mov
stos
mov
pusha
sub
jge
rcr
mov
mov
lahf
xlat
imul
sub
shl
in
mov
repnz
fcom
not
push
repz
or
in
and
mov
xchg
push
pop
inc
call
jmp
stos
inc
dec
(bad)
sahf
cmps
(bad)
dec
jns
gs
jnp
mov
jne
adc
pop
sbb
stos
push
movs
out
pop
inc
loope
ss
ret
cdq
outs
mov
pushf
xchg
clc
xlat
shr
mov
adc
sti
jle
movs
das
int3
cmc
aam
ja
mov
xchg
dec
loope
xor
retf
jg
stos
sar
jns
or
mov
pushw
and
ret
addr16
mov
icebp
test
cs
popf
lock
imul
mov
ret
pop
add
les
(bad)
cmc
inc
mov
dec
cli
emms
cmp
and
mov
mov
std
scas
mov
aaa
and
cmp
pusha
pop
push
daa
dec
aam
push
jae
pop
dec
test
dec
ret
mov
inc
mov
ja
mov
(bad)
fs
or
push
push
shl
clc
int3
imul
jmp
xchg
lods
push
inc
adc
stos
lea
in
push
mov
nop
clc
dec
outs
or
pop
fiadd
sub
fisubr
push
sar
mov
inc
call
or
ja
add
sbb
mov
loop
sbb
and
pusha
fdivr
pop
xchg
sub
adc
out
pop
pusha
lea
shr
(bad)
mov
rcr
push
movs
jle
mov
es
cld
dec
cmps
test
imul
xor
pop
inc
sub
imul
sub
cs
stc
nop
out
dec
xchg
mov
cli
dec
repnz
data16
mov
(bad)
and
jmp
ins
cld
jns
shl
stos
mov
sbb
pcmpgtb
mov
add
mov
mov
rcl
fdivr
jae
mov
xchg
into
pop
xor
mov
push
in
add
out
cmp
adc
retf
or
fnsave
mov
in
sbb
and
pop
sbb
sub
sbb
cmp
jnp
jnp
out
in
sar
dec
mov
mov
lods
cmp
bound
dec
fst
movs
out
mov
jbe
or
out
dec
xchg
pop
mov
pop
loop
cdq
inc
pop
push
sti
adc
jp
out
dec
mov
in
das
ror
mov
repz
je
fldenv
sub
push
or
mov
pop
in
xor
lds
les
push
cmp
scas
gs
jmp
push
jns
rcr
nop
mov
jge
add
mov
cmp
cmp
adc
je
mov
jmp
mov
jno
push
sar
sbb
std
xchg
pop
sbb
push
push
movs
cmps
dec
inc
retf
adc
jns
add
cmp
test
je
test
xor
xor
and
shr
xor
aas
in
pop
jae
cmp
add
push
and
adc
stos
jne
push
and
push
stc
jmp
push
cli
jbe
imul
call
fisttp
repnz
sti
(bad)
in
xor
jne
xchg
inc
fistp
mov
outs
cmc
mov
aad
mov
out
(bad)
push
mov
(bad)
dec
(bad)
and
xor
mov
adc
jns
and
dec
cwde
cmps
inc
push
out
xchg
fld
push
loopne
and
add
xor
ins
iret
cdq
loope
inc
cmp
xor
cs
mov
fisubr
daa
lea
mov
pop
push
dec
ror
sub
lahf
xor
cld
push
hlt
jo
inc
mov
xchg
ins
ror
cmp
pmulhw
mov
jo
pop
sbb
push
add
mov
mov
ficomp
arpl
jae
lods
mov
adc
cmp
test
push
clc
xor
xchg
sbb
fild
movs
cld
test
test
rcr
shl
mov
xor
jns
add
bound
sti
mov
inc
ja
daa
out
and
daa
jnp
or
pop
push
or
lock
jbe
jno
and
stc
sahf
arpl
cmp
les
xchg
je
xchg
(bad)
jecxz
cmc
mov
jle
lods
push
push
retf
add
dec
bound
int3
stos
lock
ja
(bad)
lahf
jnp
pop
xchg
jmp
and
sub
push
or
lods
or
add
jbe
iret
sbb
movs
(bad)
sub
cmp
in
std
(bad)
jmp
and
movs
fstp
adc
in
movs
cmp
std
inc
push
test
push
xchg
add
push
bound
pop
pusha
jmp
(bad)
stos
retf
test
(bad)
sar
mov
pop
(bad)
shl
mov
mov
outs
push
mov
pop
fisubr
cmps
jecxz
hlt
call
dec
into
gs
movs
mov
add
rcr
mov
leave
adc
(bad)
popa
fwait
int3
les
imul
sub
cld
jecxz
jmp
inc
sub
push
icebp
xchg
pop
(bad)
(bad)
xor
repz
and
imul
fcom
inc
cmp
sahf
int
xchg
dec
aaa
shr
ins
push
xchg
or
mov
scas
mov
fucomip
mov
cmp
lahf
arpl
or
inc
(bad)
dec
lods
ret
pushf
pop
push
push
popa
(bad)
sti
cwde
mov
or
dec
pop
jge
dec
daa
clc
gs
xor
hlt
movs
cmp
xor
xchg
into
cmps
pop
pop
pushf
out
mov
les
js
cmps
xor
lahf
xchg
call
sahf
rcr
mov
cmps
mov
pop
mov
fwait
sub
mov
adc
jge
call
stos
test
and
dec
cli
and
adc
mov
mov
aaa
jne
and
aam
and
jns
out
pop
in
sbb
popa
daa
and
cdq
adc
mov
lods
cmps
sbb
popf
xchg
adc
inc
mov
push
inc
inc
lds
ret
rcr
xor
scas
cdq
ja
pop
in
popf
ret
cmps
xchg
cld
rol
mov
xor
call
enter
jnp
fadd
push
push
inc
sub
aad
sbb
scas
mov
into
pop
adc
(bad)
xlat
fwait
js
mov
inc
xchg
mov
imul
xor
pop
clc
adc
xlat
retf
sti
xchg
fimul
cmp
arpl
ds
jmp
mov
sub
bound
test
push
sbb
les
iret
dec
sbb
jge
iret
int
aaa
cmc
push
inc
mov
jnp
and
outs
aam
sahf
stos
pop
ins
fsubp
xchg
(bad)
push
jnp
inc
cmp
shr
loope
call
out
mov
jmp
mov
or
sahf
out
sti
add
enter
rol
cmp
and
je
popf
dec
popf
imul
sub
push
mov
lahf
(bad)
rep
sub
jmp
addr16
out
dec
repnz
add
xchg
push
cmp
mov
test
or
cwde
fwait
ror
and
and
mov
ins
pushf
dec
mov
mov
lea
cmp
(bad)
mov
and
jnp
jp
adc
out
in
in
lea
xlat
add
out
pop
or
xor
sbb
iret
sub
(bad)
dec
stos
and
(bad)
push
inc
mov
fs
push
jmp
pusha
pop
repnz
push
and
in
and
in
jno
fdivr
dec
sub
icebp
ret
cld
cmp
mov
lahf
lods
adc
push
adc
mov
aad
imul
fld
adc
sub
add
push
clc
cmp
loopne
pusha
int3
add
push
(bad)
lds
(bad)
test
xor
pop
cmp
sub
sub
xor
ret
cs
jmp
adc
mov
sbb
(bad)
in
in
mov
cdq
cs
adc
aam
sub
(bad)
nop
data16
(bad)
hlt
jno
clc
push
(bad)
mov
inc
and
push
test
xchg
test
sbb
je
cmp
stos
cld
cli
cmp
gs
jbe
sbb
jmp
push
scas
fsub
cli
addr16
mov
retf
outs
fiadd
fs
repnz
pop
das
dec
lods
aas
imul
mov
sbb
mov
bound
dec
cmp
add
jp
pop
(bad)
loop
retf
std
dec
pop
data16
ds
lahf
aas
in
bound
push
inc
jmp
cmp
out
cmc
aam
and
je
and
mov
(bad)
push
mov
lea
retf
stc
call
cmc
push
lods
inc
loopne
outs
(bad)
push
xchg
inc
or
rol
lock
push
push
jae
stos
mov
mov
sbb
add
dec
mov
sbb
mov
add
rcl
mov
test
xchg
xchg
inc
add
loop
rcr
adc
mov
outs
test
sbb
(bad)
fucomip
xor
ja
test
xlat
mov
mov
arpl
sub
nop
inc
out
fdivr
mov
test
test
jb
adc
and
out
movs
xchg
imul
popw
ret
(bad)
repnz
out
push
data16
adc
mov
fwait
lock
dec
pop
pop
in
pop
enter
ss
jmp
out
(bad)
loope
cld
adc
or
or
pop
repz
lds
(bad)
scas
dec
test
mov
pop
jne
scas
pop
repnz
or
(bad)
adc
inc
push
rol
pop
neg
and
sar
xor
(bad)
neg
ss
(bad)
je
or
cmp
add
shl
fs
stc
fmul
add
aaa
sbb
test
push
hlt
add
cmc
xchg
dec
inc
inc
jmp
(bad)
cmps
cwde
cli
shl
mov
out
addr16
ret
(bad)
mov
add
jne
or
sub
cmp
aaa
adc
call
shl
out
sbb
xor
mov
dec
rol
cmp
pop
ins
(bad)
inc
lea
mov
and
loop
or
cmc
add
mov
pop
movs
adc
popf
jg
pop
test
pop
and
pop
stos
jecxz
mov
out
loopne
xlat
rcl
std
push
sahf
cmp
dec
movs
and
dec
in
mov
and
fwait
cld
das
mov
push
loope
jno
pop
call
fs
pop
mov
fld
bound
and
xchg
jl
in
xchg
stos
inc
sahf
retf
(bad)
(bad)
jae
pop
fistp
popf
enter
cmps
xchg
mov
test
ret
or
xor
inc
xor
addr16
ficom
int3
cmp
aas
fcom
scas
fnstsw
jnp
push
ret
xor
outs
repz
nop
movs
adc
gs
add
push
cmp
mov
mov
test
enter
shl
sbb
sub
add
fwait
adc
out
push
loop
xor
mov
xchg
(bad)
adc
int3
mov
les
mov
les
mov
mov
or
dec
and
jl
shl
ret
lock
lea
xor
sub
int
mov
jmp
js
xchg
and
push
in
mov
fwait
out
mov
jmp
pandn
cmp
scas
call
push
adc
push
and
mov
cmc
sbb
rol
sbb
xor
in
js
and
xchg
mov
sti
push
nop
adc
jl
push
sbb
std
in
fidiv
es
xchg
ds
in
jecxz
jbe
lds
pop
sbb
mov
mov
in
sbb
sahf
dec
retf
shufps
scas
popa
shl
adc
(bad)
(bad)
stc
inc
cmp
dec
fs
sahf
dec
mov
push
push
iret
(bad)
icebp
jp
(bad)
(bad)
mov
mov
(bad)
and
and
jmp
inc
enter
xchg
xchg
cs
pusha
and
xlat
(bad)
int3
sahf
jmp
nop
mov
call
in
or
stos
dec
mov
dec
and
jns
adc
je
iret
push
jns
dec
cld
or
cmp
push
sub
or
and
scas
sahf
cld
push
xchg
jne
inc
and
mov
mov
mov
sbb
mov
fisub
call
dec
push
cmp
mov
cli
and
cmc
mov
cmp
ror
cmp
gs
(bad)
gs
dec
imul
repz
test
cmp
stos
pop
adc
xor
xabort
and
fs
repz
dec
outs
mov
lahf
or
or
das
aas
or
push
test
xchg
rcr
retf
int
push
pop
add
or
fwait
push
call
adc
out
into
ror
shl
xor
xor
cwde
sbb
push
and
sub
out
icebp
dec
idiv
mov
push
jae
inc
(bad)
mov
pop
lods
mov
mov
inc
xor
xor
push
xchg
pop
iret
mov
ja
scas
cmp
hlt
pop
das
jge
sbb
sub
in
dec
and
addr16
fimul
cmps
jmp
test
pop
inc
cli
es
pop
or
mov
lock
pushf
cmp
or
leave
cmp
inc
mov
xchg
cdq
inc
jp
and
cmps
rcl
pop
or
and
push
out
push
or
cwde
lods
out
bound
add
jmp
or
fadd
fucom
xchg
xlat
fs
nop
rcr
and
add
mov
into
xchg
call
sbb
icebp
xor
scas
adc
push
adc
int3
jp
cmp
jbe
cmps
stos
adc
mov
adc
sub
mov
into
xchg
(bad)
jmp
aaa
imul
adc
sub
add
xchg
dec
cmp
je
gs
mov
pop
cli
leave
sti
lea
inc
mov
lea
jmp
xor
sub
or
jmp
cli
jb
jecxz
(bad)
sbb
hlt
int3
add
mov
pop
popf
inc
cmp
jnp
jl
or
in
mov
sub
or
cmp
movs
dec
repnz
shl
mov
cmp
imul
inc
sbb
mov
cmp
dec
lahf
aas
leave
rol
pushf
call
enter
xor
mov
pushf
jb
cdq
lds
movs
and
mov
sub
pushf
arpl
pop
adc
pop
imul
mov
xor
inc
xchg
sbb
cld
dec
sub
jne
fxch
(bad)
out
je
iret
out
add
xchg
pop
movs
sbb
add
in
ret
aaa
xchg
mov
xchg
inc
(bad)
retf
in
ss
pusha
fwait
push
xor
add
sub
xchg
inc
inc
inc
sub
je
mov
jmp
std
lods
adc
cdq
mov
sub
xor
xchg
pop
adc
fmul
icebp
rcr
cld
test
pop
into
fst
xchg
ins
fbld
rcl
in
loope
movs
mov
pop
fsub
mov
fld
mov
mov
push
dec
cmp
sbb
icebp
int
sub
std
loopne
jno
sub
cmp
and
ja
push
adc
and
adc
xchg
mov
adc
aaa
mov
xlat
jns
pop
cmps
or
test
jns
mov
test
adc
mov
sub
std
cmps
cwde
out
shl
dec
push
sub
(bad)
mov
stos
out
rcl
icebp
icebp
mov
jl
into
dec
gs
jmp
pushf
hlt
xor
push
sub
loop
sub
cli
push
nop
movs
mov
(bad)
and
pop
ficom
mov
mov
int
cmp
add
add
add
jg
mov
loopne
push
aaa
(bad)
fnstcw
push
add
dec
push
outs
sbb
(bad)
call
lahf
sahf
pusha
cdq
inc
(bad)
test
xchg
jl
jg
adc
pop
xchg
mov
test
aaa
ret
dec
loope
retf
lahf
xchg
adc
(bad)
ss
and
dec
int3
jne
test
aam
inc
lods
mov
shr
sub
mov
outs
adc
(bad)
fidiv
mov
lahf
jb
daa
sub
mov
mov
mov
mov
loop
mov
pop
mov
mov
and
xor
dec
dec
dec
movs
pop
add
sub
inc
daa
xor
adc
jnp
ret
push
fdivr
(bad)
test
pop
inc
jmp
pusha
outs
and
pop
jl
aaa
or
mov
enter
and
cmp
mov
mov
mov
pop
shr
add
jmp
mov
dec
and
push
adc
mov
jp
push
xor
mov
ins
dec
cdq
mov
neg
xor
fstp
lahf
retf
cmp
jg
dec
out
xchg
addr16
and
mov
inc
push
push
mov
dec
ins
pop
out
or
cmp
sbb
fxch
add
or
lods
aas
adc
lods
sbb
add
push
push
mov
pop
cmp
inc
in
in
jne
das
xor
adc
add
test
loopne
xchg
rol
dec
iret
xchg
lods
sub
retf
enterw
xchg
test
neg
cwde
ss
mov
xlat
jne
pushf
cmp
fild
pop
out
push
and
push
cmp
push
shr
cmps
ins
je
add
fldenv
scas
xor
fdiv
pushfw
imul
sub
push
xor
sbb
sbb
xor
xor
cmps
fld
movs
push
adc
into
push
or
je
push
cmp
mov
mov
dec
out
icebp
fstp
(bad)
xor
lock
push
movs
cmps
(bad)
mov
sub
arpl
ret
add
pop
outs
das
mov
mov
xchg
push
cwde
inc
clc
add
or
(bad)
test
adc
push
cmp
pop
in
sbb
shr
jb
dec
sahf
fst
jl
stos
movs
call
add
mov
int
not
sbb
push
adc
push
push
int
xor
or
ret
jle
and
adc
retf
xchg
bnd
dec
out
pusha
int3
imul
xor
fdiv
add
inc
adc
fild
or
or
mov
imul
jp
jno
mov
jecxz
inc
outs
sub
sbb
push
(bad)
lea
imul
retf
jb
idiv
and
sahf
add
push
call
aas
pop
mov
cmp
lods
jns
(bad)
(bad)
mov
adc
xchg
sbb
mul
fist
and
je
jecxz
movs
adc
pop
fcomip
sub
outs
cli
mov
out
sbb
data16
jg
sub
sub
inc
xor
(bad)
pop
mov
mov
in
mov
xor
aam
pop
jmp
fucomi
into
jns
jnp
enter
jge
jbe
push
mov
jo
mov
test
sub
fld
loop
and
test
icebp
(bad)
jae
out
ret
(bad)
(bad)
clc
pop
jp
push
pop
pushf
add
push
js
sub
nop
aam
add
jle
mov
pop
(bad)
xchg
xchg
or
test
nop
and
fist
xor
sub
into
cmp
push
das
rcr
add
fild
push
(bad)
cmp
fldenv
pusha
gs
push
call
and
lahf
add
sub
dec
test
adc
test
ret
mov
and
jae
es
mov
dec
hlt
inc
mov
mov
lods
das
or
mov
test
or
sub
jns
add
and
(bad)
repz
mov
dec
sub
xor
mov
test
aas
mov
mov
or
(bad)
cmps
add
arpl
shl
push
xor
push
push
pop
pop
push
jmp
jno
dec
push
inc
xor
fisttp
fiadd
imul
pushf
stc
xlat
sti
stc
jns
mov
shl
mov
sbb
add
mov
cmp
xor
mov
ficom
test
ja
out
(bad)
mov
jb
sbb
cli
sahf
test
mov
stos
cmps
clc
cwde
mov
aam
clc
leave
add
xchg
sub
jns
aas
push
cmp
jp
(bad)
in
push
outs
xchg
mov
popf
push
add
xor
or
mov
dec
hlt
sti
and
mov
push
sub
xchg
jg
push
mov
stc
rol
addr16
sbb
sbb
aaa
pop
stos
test
push
stc
enter
and
nop
fs
cmp
je
test
imul
add
xchg
ins
jp
and
outs
mov
add
add
push
mov
xchg
fwait
test
or
std
shl
lds
sub
push
aaa
cmp
movs
or
stos
add
jo
cmps
lods
int3
jbe
cmp
(bad)
or
and
sub
retf
in
aas
arpl
and
sti
js
sbb
cmp
push
and
inc
lahf
scas
mov
inc
jbe
add
push
xlat
imul
mov
add
inc
addr16
cmp
ret
lds
fcom
pop
sub
or
mov
xor
mov
dec
or
mov
inc
mov
pop
sbb
loope
adc
pop
repnz
jbe
dec
cdq
jl
dec
mov
or
aaa
aad
bound
gs
call
out
jnp
inc
mov
jmp
jmp
repnz
fbld
cmp
test
shr
cwde
cmps
or
xchg
cli
imul
lds
cmp
repz
in
sbb
and
es
mov
xlat
add
pop
mov
pop
call
(bad)
fist
push
xlat
mov
pop
mov
push
mov
or
pop
das
(bad)
mov
mov
dec
scas
cmp
adc
int
xor
mov
adc
dec
stos
push
mov
pop
push
or
lods
mov
and
sti
fsubr
adc
repz
hlt
mov
stos
xchg
jl
xchg
jl
fwait
mov
adc
jns
arpl
rcr
aas
data16
scas
inc
fmulp
arpl
jmp
mov
je
sub
in
inc
pop
faddp
mov
mov
aaa
adc
mov
enter
inc
sub
mov
fcmovnb
xor
enter
push
hlt
pop
jmp
cwde
mov
xor
mov
xchg
add
mov
inc
leave
and
je
inc
cmp
push
jg
loop
sbb
jo
(bad)
xchg
inc
xor
mov
and
cmps
pop
in
jbe
std
fsubr
adc
push
(bad)
gs
and
sub
and
jp
adc
test
out
push
es
outs
push
es
pop
sbb
cdq
out
cwd
xchg
ds
imul
out
fild
setp
sbb
or
fnstsw
and
sbb
mov
pop
pop
sub
mov
mov
mov
je
dec
pusha
push
pop
pop
ret
dec
jmp
test
sahf
cs
jb
sbb
cmp
das
or
mov
dec
dec
pushf
out
fidiv
imul
ja
imul
or
into
or
and
adc
bound
cld
retf
pop
sub
or
jo
xchg
push
imul
pusha
mov
outs
test
cmp
mov
push
lock
jg
mov
inc
test
fwait
int
inc
inc
cmc
push
mov
jne
adc
pop
imul
clc
stos
aaa
repnz
dec
frstor
sub
fcom
dec
push
sar
div
jnp
out
jle
aam
mov
aaa
fsubr
mul
adc
ret
dec
ror
in
mov
and
cli
xchg
loope
push
jl
mov
push
mov
cmp
jge
xchg
(bad)
jecxz
lods
cmp
js
push
and
or
shl
push
pop
sti
sub
test
rol
or
sub
push
aaa
mov
mov
push
jge
jg
std
jb
dec
rcl
jl
ds
scas
les
sbb
sub
fisttp
int3
lahf
mul
lock
fcomp
and
inc
movs
mov
lahf
dec
dec
inc
jns
push
jnp
ins
mov
xchg
test
sbb
jmp
imul
outs
pop
adc
cdq
or
pop
ficom
add
jmp
jle
add
jo
mov
and
into
ret
scas
mov
xor
push
adc
push
outs
jp
cmp
inc
fwait
inc
mov
dec
sbb
sub
add
pushf
shr
mov
movs
xchg
xchg
sub
ss
(bad)
jl
adc
push
lds
ds
iret
ins
sar
in
and
push
add
call
sub
jle
jbe
push
pop
fs
inc
xor
mov
enter
mov
fwait
js
and
mov
pusha
cmps
push
mov
scas
xchg
add
imul
dec
cli
lods
imul
div
mov
popa
push
and
cmp
jno
rol
push
mov
mov
or
mov
ror
push
sbb
inc
push
fidiv
and
or
mov
popf
sub
xchg
add
not
lea
dec
test
xchg
mov
popa
adc
xlat
scas
movs
mov
ds
xchg
out
jbe
pop
movs
pop
mov
repnz
es
add
mov
sar
jg
or
push
test
mov
jno
jmp
jnp
jp
jmp
xchg
cmp
push
je
in
ja
lea
mov
dec
jge
or
push
pop
jl
xchg
mov
mov
sahf
sbb
mov
fstp
mov
js
fidivr
sti
test
xchg
inc
or
mov
lods
jbe
jns
sbb
cmp
hlt
xlat
push
xor
and
pop
mov
sub
test
mov
into
or
mov
dec
cdq
ficomp
or
movs
int
ins
mov
fisttp
cmp
xor
call
fdiv
jno
and
(bad)
movs
ficom
(bad)
jle
cmps
push
adc
add
bound
xchg
aam
push
pop
dec
out
mov
iret
cmps
xchg
push
xchg
lods
push
test
in
mov
or
loop
mov
neg
leave
ret
das
hlt
mov
rol
pop
xchg
pop
leave
jno
push
or
sbb
pop
pusha
xor
je
mov
and
cmp
add
adc
popa
pop
psrlq
(bad)
and
add
pop
ficomp
mov
pop
xchg
mov
out
sbb
ja
pop
movs
(bad)
inc
jecxz
outs
jp
pop
leave
add
push
adc
loopne
lock
in
lds
mov
lea
sbb
imul
fucomi
cmc
out
add
outs
fsubr
fmul
or
in
(bad)
inc
pop
test
and
and
shr
aaa
pop
add
or
retf
dec
out
pop
cmp
pop
repz
int3
cli
ds
jo
dec
lods
adc
sahf
stc
into
mul
iret
neg
mov
clc
xor
scas
cld
sub
test
lea
ja
push
mov
adc
aad
lock
sub
mov
cmp
and
cwde
test
mov
push
xchg
and
xchg
jge
sbb
xchg
sbb
daa
mov
int3
(bad)
imul
jle
out
mov
or
adc
push
mov
arpl
or
add
or
cmp
adc
cld
retf
mov
jbe
shl
ror
in
xlat
push
xchg
popf
loopne
fcmovne
bound
into
push
ror
sbb
add
push
mov
or
imul
out
ds
imul
push
inc
cwde
xchg
sti
mov
in
into
nop
mov
or
cmp
mov
pop
ja
(bad)
pop
out
push
aas
(bad)
push
sbb
iret
add
mov
or
inc
cdq
push
add
js
mov
addr16
mov
je
jbe
ja
call
xor
data16
icebp
mov
out
bound
shr
dec
and
arpl
sti
mov
jge
mov
aaa
or
ja
sbb
jnp
(bad)
in
mov
adc
pop
push
ss
out
movs
stc
es
push
jb
jl
mov
mov
dec
popa
mov
xor
int
sbb
sub
out
daa
sub
into
push
in
cli
cmp
das
jae
sti
or
retf
push
cmp
test
cmps
mov
stc
xchg
mov
rol
(bad)
push
push
sub
jmp
int
pop
pop
mov
stc
dec
lods
xor
loop
and
ret
push
mov
jb
adc
idiv
mov
ficom
sub
adc
xchg
push
jecxz
iret
scas
dec
(bad)
xchg
lds
aam
or
in
(bad)
ja
mov
sti
fisttp
aas
sti
pop
and
ja
mov
enter
stos
mov
jae
sbb
mov
dec
or
shl
push
jo
into
popa
ret
sub
dec
pusha
fisubr
jle
mov
lock
adc
xlat
jmp
out
xor
fst
mov
cli
pusha
(bad)
addr16
cdq
ror
push
aam
stos
sbb
repnz
jmp
xor
mov
int
popf
jl
xor
icebp
loop
mov
hlt
cmp
xor
push
mov
stos
stc
and
ds
mov
and
inc
pushf
or
outs
mov
cmps
loope
pop
(bad)
in
enter
mov
xchg
and
int
icebp
push
sahf
hlt
test
mov
jp
xchg
push
aad
outs
loopne
add
leave
push
sti
loopne
mov
cmp
outs
mov
mov
xchg
(bad)
jnp
mov
jmp
xchg
je
jns
or
push
mov
cmps
lock
bound
int
std
sti
fcmovb
mov
cmp
loopne
rcl
sub
int
lods
mov
stc
push
jo
cmc
or
packssdw
nop
and
inc
dec
inc
inc
or
push
xchg
stos
and
jecxz
std
and
lds
mov
in
jo
xchg
mov
mov
pop
jae
push
shl
mov
push
inc
xor
xor
cmp
mov
pop
sti
rcr
(bad)
fsubr
stos
add
mov
pop
sbb
push
retf
xchg
fs
imul
nop
cmp
and
shl
jbe
jae
push
cmp
loope
sub
cmp
jmp
outs
cmp
pop
mov
cmp
add
push
jmp
sar
inc
fdiv
xor
lahf
sbb
cmp
int3
and
iret
push
xchg
jecxz
rcr
jmp
pop
sbb
sahf
mov
cmps
mov
jo
in
lock
push
lock
or
adc
mov
loop
leave
xchg
xchg
lds
cwde
je
sbb
bound
dec
loop
aam
inc
xchg
pop
loopne
cmp
jno
hlt
scas
cmp
rol
adc
mov
sub
retf
xchg
inc
cwde
in
sub
imul
pop
fsub
and
xchg
test
test
mov
dec
and
leave
cs
mov
cmp
sahf
outs
cmp
xchg
cmp
mov
sbb
inc
inc
mov
dec
test
shl
sar
xchg
cmp
and
pop
shl
es
jmp
xchg
rcl
cmc
cwde
call
xchg
jmp
jl
xchg
test
lea
mov
lock
xchg
adc
fsub
std
test
(bad)
cwde
stc
pop
aad
movs
mov
sahf
xor
ja
shr
inc
add
sub
adc
fiadd
ins
mov
cmp
sub
lock
outs
(bad)
rcr
push
cli
inc
in
xor
add
dec
gs
pop
clc
add
arpl
mov
popa
dec
cmp
push
mov
fwait
lock
ret
pop
aas
inc
fcomp
(bad)
in
adc
xlat
and
lahf
xor
sub
jge
mov
cld
ss
dec
sbb
add
shl
mov
frstor
stos
mov
arpl
mov
mov
xchg
cmp
rcl
div
cmp
jmp
test
sub
pop
pop
gs
sub
xor
xor
js
dec
mov
out
push
pop
cwde
or
mov
ror
in
mov
mov
dec
pop
ficom
pop
or
ds
sub
jo
sbb
push
cmp
pop
retf
dec
stos
pop
cld
minps
add
fbstp
aam
xchg
pop
aam
loop
xor
lea
and
hlt
and
xchg
aaa
rcr
adc
in
ffree
test
mov
ja
dec
not
int3
addps
inc
ins
test
jecxz
mov
mov
jl
fisub
push
lahf
hlt
mov
add
xor
xchg
ret
pop
pop
fwait
sbb
shl
icebp
enter
shl
aam
sbb
bound
in
mov
sub
fsubr
repnz
xor
in
or
cmp
cdq
jmp
cmp
ins
jns
imul
dec
cmp
pop
jo
movs
out
push
test
mov
jo
jl
ror
mov
push
inc
rol
in
xor
lock
sbb
add
hlt
in
xchg
and
shl
test
pop
mov
mov
jns
aaa
adc
or
out
outs
and
in
mov
popf
push
xchg
xor
cli
mov
cmp
sti
in
add
jmp
hlt
mov
sub
aad
adc
cs
neg
sub
xchg
lock
mov
sbb
cmp
nop
pop
mov
sbb
cmp
pop
fmul
dec
cwde
jns
cmp
hlt
out
rcl
mov
loope
push
sar
mov
or
jb
xchg
adc
outs
dec
test
mov
scas
imul
cmp
fst
xchg
in
cdq
xchg
push
or
xchg
and
mov
int3
mov
lahf
(bad)
movq
sbb
sub
(bad)
int3
mov
xchg
jg
jg
add
es
jne
pop
sti
xlat
mov
sbb
test
fimul
iret
pop
outs
push
or
mov
shr
test
push
dec
pushf
movss
ds
ret
sub
out
neg
jp
pusha
es
add
adc
retf
dec
mov
push
ins
xchg
push
jg
xchg
test
(bad)
dec
cmp
jno
and
scas
pop
into
retf
and
(bad)
ss
aaa
fwait
cmp
or
inc
iret
gs
add
inc
and
jecxz
test
aaa
mov
ret
jb
push
fidivr
pop
shr
add
imul
xchg
jo
dec
into
fild
add
xchg
xor
(bad)
push
pop
or
cmp
aam
sbb
ins
or
mov
lock
scas
xor
adc
lds
loopne
lods
cmp
adc
inc
cs
jb
and
jnp
std
pop
mov
jecxz
int
ins
test
and
or
dec
dec
fld
mov
mov
xchg
and
mov
cmp
mov
ja
movs
adc
pusha
retf
dec
jmp
add
cmp
pusha
push
xchg
sti
(bad)
(bad)
std
jo
xchg
push
ins
xchg
or
ror
inc
cmp
jno
cwde
in
push
dec
mov
repz
fdivr
mov
call
nop
fisttp
scas
call
mov
loop
push
xchg
cs
fidivr
push
ins
pop
mov
cmp
cli
cmp
ret
sub
les
sub
fimul
xor
pop
daa
sub
inc
cwde
mov
aas
int3
aas
retf
test
pop
out
popa
mov
xor
mov
jg
call
imul
pop
fldenv
or
jg
fistp
popa
mov
push
mov
or
jle
dec
pop
or
popa
inc
mov
adc
leave
inc
into
retf
jecxz
xchg
in
and
sbb
test
es
cs
ret
lods
jecxz
sbb
sti
jp
icebp
dec
adc
mov
cld
sbb
nop
arpl
cmps
jne
imul
test
inc
sbb
add
call
arpl
and
cmp
retf
js
sub
add
sub
dec
pop
(bad)
jb
repnz
mov
lea
jmp
cmc
pop
das
lock
add
push
jno
fwait
add
sti
mov
ss
dec
shl
jns
ds
mov
test
mov
pop
adc
repnz
sbb
xchg
sub
retf
inc
mov
add
enter
push
jp
jecxz
xchg
xor
xchg
div
adc
dec
shl
xor
scas
in
ds
mov
or
lea
xchg
xchg
icebp
and
test
adc
fcmovnb
or
shl
daa
jmp
pop
hlt
popa
lods
pop
xor
rcl
mov
mov
mov
(bad)
fld
jo
mov
mov
xchg
lods
adc
sub
adc
adc
outs
dec
test
stc
div
jno
push
jmp
dec
mov
popf
cli
xor
cwde
sahf
ret
pop
mov
fimul
fcmove
pop
push
sbb
or
mov
cwde
iret
pop
sub
les
or
cli
std
dec
addr16
test
loopne
bound
jae
xor
test
sahf
mov
int3
movs
mov
into
retf
daa
sbb
ja
mov
lahf
neg
push
inc
mov
repz
fstp
(bad)
aam
push
sti
jmp
and
mov
add
cs
sub
pop
loop
xchg
lods
mov
mov
(bad)
fnstcw
mov
popf
and
sub
movs
(bad)
out
sub
pop
bnd
je
in
push
mov
ins
leave
cmps
mov
mov
sbb
add
sub
lods
push
imul
shl
aam
mov
stos
cdq
jb
sbb
pop
push
mov
repz
sub
push
jae
fsub
xchg
sub
scas
push
push
rcl
adc
mov
pop
aas
stos
(bad)
sbb
sbb
int3
test
xor
cmp
jne
xchg
xor
inc
jae
hlt
int3
xorps
shl
arpl
pop
outs
push
cdq
add
inc
add
stc
sti
ins
sar
sub
retf
call
pop
in
mov
jno
xchg
pop
ret
add
xchg
xchg
xchg
out
cmp
add
add
push
jle
loop
xor
leave
cwde
adc
movs
jmp
push
push
lods
pop
jmp
pop
push
dec
push
jecxz
mul
or
and
retf
pushw
jo
add
sbb
or
bound
aaa
mov
sub
jge
mov
fdiv
(bad)
out
rcl
pusha
(bad)
mov
sbb
xchg
cmp
test
ffreep
or
sbb
(bad)
xor
or
imul
cmp
fwait
push
out
sub
mov
sbb
inc
(bad)
xor
jmp
sbb
sub
mov
jns
pop
fwait
scas
xor
sub
fcom
or
out
pop
push
and
add
cmp
das
test
inc
test
mov
mov
pushf
xchg
xor
push
arpl
mov
mov
outs
mov
jmp
scas
mov
xchg
mov
pop
and
jp
add
stos
nop
mov
(bad)
dec
scas
loop
pop
jmp
sub
jl
jg
xor
addr16
inc
fisubr
mov
fwait
or
fiadd
loope
aas
inc
fcomi
jbe
ja
xor
xchg
jne
adc
loope
add
push
mov
mov
movs
adc
xlat
sbb
pop
and
jmp
scas
or
jmp
xchg
ror
sub
movs
xor
repz
inc
ss
clc
dec
inc
sub
stos
pop
and
jg
imul
push
daa
xor
add
inc
jns
adc
aaa
or
aaa
push
shl
scas
mov
aas
pop
inc
mov
fucom
lock
call
jne
data16
pop
mov
adc
cmp
aad
loope
jne
fbld
mov
aaa
mov
arpl
mov
ins
mov
sub
cli
push
stos
dec
add
inc
pop
retf
ja
mov
ss
jp
adc
out
je
push
xlat
or
mov
dec
arpl
sub
and
lods
sub
mov
cmp
call
xchg
pop
push
rol
into
imul
mov
ret
push
push
popf
sbb
pop
or
inc
pusha
mov
or
fnstenv
push
mov
add
hlt
into
lahf
mov
test
xor
mov
sahf
push
dec
(bad)
xor
xchg
cs
cs
xchg
jmp
or
or
ja
imul
jnp
sti
in
xor
into
pop
out
outs
(bad)
push
dec
sbb
lea
cmp
loope
cmps
mov
rol
popa
xor
and
mov
call
(bad)
iret
jmp
iret
jp
leave
sub
arpl
jo
mov
push
jge
out
xor
push
dec
and
cmps
sub
stos
ins
jb
fstp
mov
cmp
ss
pop
xor
leave
dec
inc
imul
sbb
mov
sub
mov
mov
xchg
out
fsubp
pop
mov
loop
loopne
jge
lods
cmp
popa
and
lahf
pop
jns
lds
sub
adc
dec
mov
push
pop
(bad)
ja
jl
xchg
jbe
mov
mov
retf
or
jecxz
mov
(bad)
es
mul
mov
icebp
adc
fbld
ins
(bad)
js
cmp
jae
(bad)
retf
test
lock
mov
imul
xor
and
mov
mov
and
mov
popf
lods
inc
pop
lods
sbb
das
pop
int3
popa
sub
aaa
aas
jecxz
add
xor
adc
call
or
xor
sbb
bound
adc
ss
add
jnp
and
xchg
adc
rcr
pop
push
dec
lock
enter
xor
psubusb
xor
pop
mov
mov
cs
mov
je
and
(bad)
data16
xor
dec
jmp
fcom
fpatan
popf
imul
inc
ss
sub
pop
xor
movs
add
or
lock
cmc
test
cmp
fstp
aad
push
jmp
mov
(bad)
sahf
mov
sar
xor
outs
icebp
out
imul
cmp
nop
cmc
pop
push
leave
cwde
pusha
sbb
pop
mov
xchg
out
xchg
xor
shl
retf
imul
jbe
mov
cmp
lahf
adc
popa
movlps
mov
mov
push
push
sbb
cmp
pop
repz
int3
aas
xchg
jb
push
loope
cmp
xor
nop
test
cmp
aad
inc
inc
fistp
mov
and
xor
or
pop
mov
out
test
lea
arpl
lods
jns
ins
add
sbb
into
imul
test
lahf
adc
or
mov
and
add
adc
aaa
lahf
pop
dec
add
fidivr
cdq
cli
ret
xchg
adc
mov
and
pop
mov
repnz
ror
xchg
mov
aas
(bad)
scas
enter
sub
stos
mov
push
cmps
std
dec
fwait
mov
out
ins
sbb
xchg
adc
pop
imul
sub
sub
xor
cmp
sar
add
adc
outs
popf
xchg
or
inc
cmp
sahf
mov
xchg
hlt
xchg
mov
cmp
dec
daa
mov
add
ret
(bad)
fldcw
fsubr
cmp
mul
ret
aaa
pop
aam
pop
(bad)
int
add
data16
mov
jmp
sar
popf
jae
out
mov
into
cmp
repnz
cmp
ins
pop
pop
and
arpl
movs
rcl
mov
mov
push
mov
push
addr16
jecxz
sub
jmp
repnz
imul
xchg
test
out
push
push
(bad)
pusha
pop
(bad)
call
lods
mov
daa
cdq
sti
push
mov
sub
mov
lods
cmps
push
mov
(bad)
push
mov
inc
icebp
aad
(bad)
(bad)
clc
(bad)
jns
hlt
mov
sub
push
inc
dec
int
add
pcmpgtw
or
and
push
scas
retf
call
sub
inc
jns
mov
test
sbb
inc
mov
ins
sub
fbstp
push
add
sti
cdq
fs
and
inc
add
je
xchg
mov
dec
xchg
add
mov
pop
adc
jnp
dec
dec
popf
pop
fstp
mov
sub
and
adc
adc
cdq
sbb
add
pop
fld
test
mov
fmul
push
fsubr
jmp
lods
jmp
add
adc
mov
sbb
xchg
stos
(bad)
add
fucomp
adc
inc
mov
inc
arpl
hlt
sahf
pop
and
jno
stos
lds
push
inc
sub
retf
retf
push
out
xor
pop
into
cmp
inc
out
inc
mov
retf
and
jp
and
inc
jmp
adc
test
dec
(bad)
pop
repnz
xchg
aas
stos
out
push
and
icebp
mov
stos
in
fsub
icebp
adc
sahf
mov
pop
repnz
std
and
inc
int3
in
jmp
fistp
bound
loop
mov
fisub
arpl
dec
call
call
(bad)
mov
mov
jmp
in
test
jbe
pop
xchg
mov
in
adc
or
mov
mov
xor
sub
cwde
(bad)
cmc
stc
inc
loop
mov
lock
mov
mov
fdivr
push
mov
dec
dec
shr
es
cmp
xchg
popa
fdivr
fdiv
daa
dec
jae
push
mov
fistp
push
shl
push
cmp
jo
retf
ds
pop
popa
mov
out
hlt
(bad)
sahf
nop
stos
adc
pop
sub
je
aam
cmp
loopne
cmp
mov
inc
push
inc
ins
std
fcmovnb
test
xchg
test
paddb
mul
push
pop
(bad)
ds
stc
mov
test
xchg
popa
push
ins
dec
sbb
gs
jno
cmp
sar
fwait
jg
inc
mov
rcl
(bad)
cdq
scas
stc
cmc
fsub
out
(bad)
and
sub
fild
xor
jp
bound
jmp
stos
jmp
pop
mov
push
mov
lods
pop
lds
pop
aam
adc
fadd
push
jne
outs
push
push
xchg
iret
push
xor
mov
fmul
loop
pop
xchg
and
inc
popa
cld
adc
mov
jne
push
jnp
outs
xchg
cmp
xor
push
in
jo
sbb
sahf
loope
mov
adc
ret
div
jecxz
push
lahf
mov
rol
mov
repz
jle
dec
ins
jecxz
adc
xchg
fdivr
jnp
imul
into
test
inc
sub
fcomp
adc
xor
and
lahf
jmp
jmp
imul
adc
mov
(bad)
mov
es
jle
pop
mov
or
and
scas
test
lahf
mov
mov
neg
xor
xchg
pop
jl
imul
xor
int3
cdq
push
xchg
cmp
int
enter
xchg
out
icebp
fstp
loop
sar
daa
lods
hlt
mov
inc
jmp
lock
ja
mov
jmp
das
outs
das
cs
out
mov
daa
ret
ins
mov
and
push
ror
push
das
xchg
adc
lods
fnsave
mov
adc
ins
lds
das
xchg
adc
scas
aad
in
pop
dec
and
lods
sub
gs
sub
fistp
sbb
jp
(bad)
inc
sub
mov
mov
xchg
cmp
xchg
ds
imul
shl
mov
push
ror
adc
fnstcw
sub
jae
les
or
jmp
or
repz
jae
out
pop
push
pop
mov
mov
aam
lock
push
pop
fmul
push
ins
pop
xchg
scas
(bad)
leave
bound
aad
sub
mov
mov
cli
aad
jl
retf
dec
cld
int
xor
xlat
adc
ins
sbb
lods
jge
adc
aam
inc
xor
jb
add
cld
dec
in
pop
jle
mov
push
lods
xor
sbb
adc
sub
adc
xchg
lea
out
ret
rcr
adc
shl
pop
push
clc
push
adc
sub
or
push
imul
test
es
sub
or
sbb
cmp
jge
movs
outs
lahf
dec
adc
xor
repz
fwait
aaa
mov
xor
xchg
add
outs
pop
cwde
inc
mov
add
and
mov
(bad)
or
push
jne
mov
push
or
fcmove
adc
or
and
xchg
push
and
sub
popa
pop
jmp
and
popf
push
(bad)
imul
cmc
test
add
or
jns
sub
adc
mov
cmp
rcr
adc
add
mov
sub
shl
sub
add
test
mov
stc
adc
xchg
das
xchg
imul
lahf
(bad)
sub
and
mov
jno
outs
lahf
and
jae
dec
sbb
cmp
rol
test
loope
mov
cmc
pop
push
jne
nop
push
inc
lods
push
xchg
stos
lock
test
jg
lock
cmc
ja
adc
xor
ret
dec
or
cmp
sti
(bad)
adc
sub
dec
outs
add
loope
mov
js
push
jmp
lahf
dec
jmp
inc
scas
sub
repz
mov
mov
fadd
mov
int
imul
push
test
mov
test
dec
aas
out
fist
push
fs
jns
add
mov
inc
clc
xor
sub
xchg
push
mov
fcomp
pushf
pop
leave
sbb
mov
fst
push
dec
push
mov
mov
enter
movs
das
mov
int
cmp
pop
mov
mov
xor
mov
loopne
lahf
rcl
add
inc
out
hlt
or
enter
inc
in
loop
sbb
cmc
push
or
or
and
push
hlt
mov
icebp
loope
outs
sbb
or
dec
jmp
ds
dec
xchg
push
rcr
add
fist
cmps
or
push
pop
cmp
mov
xchg
fistp
jge
fs
int
movs
in
loope
addr16
fldenv
scas
hlt
xor
jge
push
repz
enter
out
repz
shl
das
pop
push
pop
mov
push
je
push
mov
mov
std
pop
mov
cld
icebp
mov
sub
add
cmp
or
imul
cli
sbb
cmc
lock
adc
dec
pusha
pop
adc
cs
cwde
jle
das
adc
int
sbb
add
add
daa
lods
popa
xchg
sbb
pop
(bad)
ss
adc
enter
mov
call
jbe
leave
in
xor
enter
rcl
das
ds
rol
sub
mov
out
pop
jg
or
cmps
jmp
lea
loopne
cld
sbb
jae
call
adc
dec
cmp
cmp
mov
ss
mov
fs
(bad)
sub
xor
inc
inc
lea
test
xchg
pop
cli
fmul
mov
fsub
in
cmp
mov
adc
stos
sub
pop
cdq
lods
push
movs
xor
sti
gs
loopne
inc
mov
mov
aam
stos
ds
xchg
mov
(bad)
push
outs
jno
push
mov
stos
pop
iret
std
repnz
jge
mov
fsubr
inc
xor
fwait
inc
data16
push
rcr
(bad)
movs
adc
fcomp
add
push
add
rol
or
sbb
pushf
jbe
inc
xchg
imul
mov
pmaddwd
std
xchg
xlat
mov
cmps
scas
adc
in
sahf
push
mov
jge
add
sbb
fcom
bound
push
xor
pop
cld
fs
mov
fadd
xchg
pusha
xchg
mov
loope
int3
jl
xor
arpl
cwde
xchg
test
in
ret
xor
outs
shr
adc
cmps
pop
test
in
(bad)
push
daa
sub
sub
mov
jb
push
xchg
movs
add
mov
int
pop
sbb
sub
stos
mov
cdq
repz
test
(bad)
out
icebp
je
or
mov
aas
pop
jmp
xlat
sbb
dec
dec
dec
(bad)
(bad)
movs
lods
arpl
pop
(bad)
scas
adc
loop
inc
push
(bad)
mov
fwait
jne
btc
popa
and
push
inc
not
dec
inc
fwait
in
xor
outs
jl
daa
mov
xchg
fs
xor
cmp
pop
push
and
jnp
test
cmp
(bad)
addr16
ret
push
push
bound
cmps
dec
lods
ss
outs
sbb
fiadd
call
pop
pop
pandn
xor
inc
and
(bad)
dec
xor
jnp
fimul
push
fld
jnp
push
cmp
jo
outs
std
inc
mov
xchg
rcr
dec
xor
push
pop
xchg
leave
and
dec
stc
jle
inc
push
jmp
sub
or
pop
cmp
js
jns
jne
pop
ss
push
add
mov
mov
stos
xchg
pop
ja
(bad)
jecxz
adc
stos
enter
xor
push
cs
mov
fwait
pusha
int3
adc
lods
sbb
or
inc
mov
inc
and
push
ja
int
test
sbb
sbb
arpl
addr16
outs
ror
pop
adc
sub
inc
aam
xchg
jmp
mov
fisub
jmp
add
adc
shl
or
loop
xor
outs
popf
test
test
cmp
stos
movs
ins
fwait
jo
mov
inc
lahf
jecxz
mov
ins
mov
cmps
(bad)
adc
(bad)
or
(bad)
fs
mov
jg
push
mov
out
mov
and
dec
or
adc
sbb
dec
and
and
dec
aad
cmps
imul
rol
mov
daa
mov
lock
sbb
jbe
out
mov
mov
repnz
stos
add
jns
mov
stc
dec
sub
sbb
ror
cmp
fcomp
add
test
inc
ins
push
loopne
lea
cmps
mov
cmp
fwait
les
movs
cmps
ja
and
pushf
fs
outs
xor
std
gs
dec
jbe
lods
repnz
out
and
xor
jo
or
jns
and
inc
ins
jb
loopne
dec
mov
cs
adc
sbb
jbe
popa
xchg
leave
outs
ins
ret
cmp
aam
test
je
repz
outs
mov
ret
inc
pushf
cwde
push
cmc
inc
out
ror
pop
test
push
adc
mov
cli
mov
or
dec
loope
sbb
je
in
pusha
inc
repnz
jns
fnstenv
scas
lods
pop
shl
push
inc
mov
adc
arpl
call
icebp
repnz
xlat
les
retf
fisubr
add
push
push
dec
jnp
xchg
push
(bad)
mov
adc
xor
or
ror
in
data16
mov
pop
pop
in
mov
rol
xor
test
add
xchg
ret
fnstsw
js
jg
cmp
lds
pop
jo
jg
add
sbb
js
xchg
mov
pop
pop
cmp
jo
xlat
sub
pop
mov
mov
xlat
cmp
bound
ins
or
inc
(bad)
jns
dec
add
push
dec
sbb
out
jl
fs
inc
xor
arpl
rol
das
ins
mov
bound
dec
shl
mov
add
xchg
xchg
pop
xchg
mov
xchg
fld
hlt
xor
mov
movs
xchg
fstp
movs
sub
lods
shl
inc
push
push
add
push
std
push
inc
mov
ret
cmp
shr
inc
stos
mov
push
mov
mov
add
hlt
xor
jb
cmp
scas
sar
and
mov
cmp
retf
ror
fiadd
mov
in
iret
ja
sti
xchg
and
cmp
cli
call
test
jae
call
mov
daa
mov
pusha
cli
xor
arpl
iret
arpl
cmp
jmp
dec
shl
enter
aaa
addr16
pop
push
jle
adc
xor
xchg
in
xchg
mul
xchg
add
and
cmp
fwait
jb
cld
pop
or
xor
xor
rcl
stos
adc
add
fdiv
sub
cli
pop
xor
jnp
xchg
lahf
out
out
cmc
pop
sub
ins
cli
cmp
in
sar
inc
dec
fisubr
jns
push
mov
and
fsubr
inc
mov
stc
cs
and
pop
(bad)
popf
pop
ins
push
sbb
repnz
cmp
xlat
sub
sub
cdq
push
xchg
and
sub
ss
jae
icebp
adc
xor
dec
mov
xchg
cmc
mov
leave
xor
or
xor
push
mov
cld
dec
cmps
inc
pusha
fs
fs
icebp
jmp
fcomp
adc
mov
(bad)
pop
rcr
push
rcr
sti
rcr
and
mov
jno
fs
and
sbb
shr
adc
scas
push
xor
xor
fsubr
sub
add
imul
mov
movs
dec
sub
or
movs
clc
dec
push
cmp
out
sar
dec
ja
test
dec
mov
cmp
sti
rcr
pusha
nop
bound
sar
pop
pop
pop
jmp
push
inc
jne
and
inc
mov
add
fimul
icebp
jecxz
stc
xchg
sub
fcom
mov
push
mov
mov
sub
shr
add
ss
jle
add
repz
xchg
jp
repz
mov
mov
jno
jns
neg
nop
jbe
fstp
xor
jns
cli
mov
divps
inc
push
and
sar
mov
aaa
retf
mov
pop
xlat
aaa
add
loopne
jmp
push
pop
jl
pop
inc
push
adc
cmp
pop
cmp
xor
fisubr
shl
lods
mov
sar
sub
mov
inc
sahf
add
jno
and
dec
in
xchg
scas
adc
jo
dec
push
enter
push
and
and
sbb
shr
arpl
and
adc
jl
test
les
scas
and
iret
lahf
push
mov
sar
push
jl
sbb
ds
xchg
mov
push
add
mov
inc
retf
cdq
xor
retf
inc
or
inc
sub
mov
imul
mov
imul
shr
jnp
jmp
inc
idiv
cli
test
jns
push
js
js
aam
dec
jp
stos
cwde
inc
push
push
xchg
mov
xchg
pop
leave
adc
call
mov
loop
push
jle
lahf
test
mov
and
lea
outs
int
xchg
dec
pusha
cwde
cmp
dec
cmp
mov
pop
fiadd
scas
push
dec
pop
and
lea
mov
mov
and
jns
cld
xchg
push
cdq
mov
clc
inc
in
mov
(bad)
icebp
stos
out
xchg
jb
int
xor
dec
add
mov
jmp
sub
xchg
mov
pop
in
cmps
and
out
leave
sbb
and
fnstsw
jmp
push
xor
sbb
sbb
pop
test
in
sahf
(bad)
adc
int3
hlt
iret
aaa
mov
iret
mov
mov
lods
adc
test
push
fldenv
(bad)
les
xor
mov
out
sbb
data16
(bad)
sub
fmul
dec
mov
(bad)
dec
scas
xchg
int3
mov
std
dec
mov
loope
xlat
test
cmps
or
(bad)
push
mov
es
xchg
jl
scas
test
mov
adc
mov
jcxz
or
pop
mov
sbb
pop
inc
sub
into
ret
aaa
je
pop
test
daa
ret
in
(bad)
mov
sar
add
aad
push
gs
pop
test
sbb
add
cdq
loop
frstor
jp
pop
push
movs
mov
xor
test
pop
xor
je
jae
repz
lods
ret
xchg
mov
sahf
xchg
or
inc
call
or
test
out
mov
lods
mov
int3
ja
inc
sub
sub
xchg
sub
ret
jl
pop
xchg
mov
cmc
dec
mov
outs
fst
scas
fisttp
sti
cmp
lock
xor
inc
mov
daa
adc
test
(bad)
out
(bad)
push
xchg
push
sti
jae
cmp
outs
mov
add
jmp
sahf
nop
inc
aam
push
or
adc
adc
into
adc
jmp
aaa
pop
movs
les
imul
sub
mov
mov
dec
mov
xchg
not
sbb
and
xchg
(bad)
jnp
inc
pop
lahf
push
int
xchg
pop
iret
out
sar
jmp
push
into
mov
xchg
data16
(bad)
or
sub
pop
lahf
les
sbb
(bad)
(bad)
call
xor
cmc
and
and
stos
pop
ss
(bad)
dec
sub
ja
leave
clc
js
shr
jp
cmp
cmp
xchg
push
sahf
cmp
adc
ins
sti
inc
stos
fistp
mov
out
xchg
cdq
xchg
mov
data16
mov
jge
pop
jbe
mov
popf
dec
test
ins
jge
sub
inc
pop
(bad)
iret
sub
scas
fcom
btr
jmp
sbb
sub
out
xchg
icebp
(bad)
arpl
mov
(bad)
push
dec
enter
cs
outs
(bad)
cli
int
call
sbb
xchg
pop
lock
fwait
call
daa
cld
repnz
scas
xor
stc
inc
xchg
lahf
jl
mov
cmp
inc
les
pop
adc
movs
mov
mov
jno
inc
lds
test
adc
mov
dec
push
in
es
xchg
jbe
mov
(bad)
movd
dec
pusha
ins
in
push
ror
(bad)
das
neg
fisttp
call
adc
xchg
imul
add
pop
jmp
dec
sub
pop
jl
popa
cmc
or
out
shr
pop
test
jb
repz
cmp
xor
mov
cmp
pop
in
repnz
cld
shl
shl
add
xor
stos
(bad)
lods
scas
jg
cmp
xchg
daa
jno
outs
shr
or
test
xchg
push
leave
add
and
das
fwait
stos
adc
cmps
cmp
pop
outs
xlat
inc
dec
pushf
fs
xchg
mov
aas
stos
leave
in
(bad)
aaa
dec
and
dec
test
repz
and
ins
cdq
and
pop
xchg
and
cli
mov
adc
ss
mov
and
cli
stos
push
jo
adc
jo
test
push
cmp
scas
lahf
ror
sub
mov
push
out
loope
mov
frstor
(bad)
aas
mov
ds
ror
push
icebp
xchg
cwde
pop
leave
sbb
repz
jge
push
sbb
push
inc
pop
ja
imul
scas
repz
mov
mov
mov
cmps
imul
out
sub
sbb
movs
out
sub
xchg
rcr
cmp
mov
add
cmp
mov
dec
in
jne
ret
push
movs
add
mov
push
xchg
inc
sbb
add
jmp
call
fidivr
mov
in
xchg
inc
push
lea
cmp
pop
inc
sub
cmps
pop
das
push
xchg
lods
inc
scas
xchg
out
fdivr
xor
pusha
mov
sbb
sbb
imul
xor
jns
xor
push
les
xchg
(bad)
bound
in
sbb
aam
(bad)
loopne
dec
idiv
xlat
jo
xor
out
cmc
xlat
dec
jg
push
mov
sbb
xchg
aam
pop
setns
int
ret
call
inc
pop
pop
sbb
sub
jns
icebp
sub
push
call
test
retf
ins
out
jl
je
aas
into
inc
xorps
(bad)
cmp
jmp
movs
dec
call
jnp
aaa
ret
push
add
jno
mov
dec
xchg
xlat
mov
dec
sbb
cmp
xor
push
xchg
imul
rol
mov
mov
mov
ficomp
in
pusha
in
push
sti
or
dec
popf
movs
pushf
int3
push
out
mul
sub
lods
push
push
gs
lods
jbe
sub
cmp
repz
jbe
iret
sbb
shl
jg
push
inc
dec
dec
rcr
and
mov
dec
in
jmp
push
sub
lods
js
fsubr
into
out
mov
inc
hlt
xchg
call
xor
inc
add
sub
pop
inc
push
sbb
cmp
(bad)
shl
retf
mov
lods
ret
popa
push
or
gs
ds
mov
mov
sub
int
xor
pop
sbb
popa
call
and
outs
outs
and
mov
rcr
les
fsub
add
lods
test
push
mov
sub
push
les
movs
out
cmps
jl
pop
push
jns
and
mov
pop
retf
shl
ret
sub
sti
dec
stos
movs
icebp
dec
ja
or
test
jne
nop
or
hlt
jle
pop
inc
cli
xchg
ins
rcr
push
push
mov
mov
hlt
arpl
inc
dec
not
sti
int
in
push
dec
mov
push
cld
fiadd
hlt
dec
pop
inc
adc
lods
loop
adc
rcl
pusha
mov
out
sub
in
(bad)
mov
jne
ss
ret
inc
fwait
xor
enter
cmps
cmps
aaa
lahf
xor
adc
(bad)
sbb
sub
ins
jbe
cmp
loope
fsubr
mov
or
xchg
and
loop
and
(bad)
jnp
out
xchg
mov
call
nop
adc
mov
sbb
mov
adc
dec
push
add
sbb
cmp
sbb
inc
(bad)
xchg
outs
fcomp
push
pusha
inc
retf
inc
(bad)
adc
lods
imul
jae
xchg
jne
scas
xor
retf
sar
mov
jle
pop
jg
ins
push
cwde
push
cs
inc
mov
xchg
pop
mov
fiadd
into
popa
iret
jae
icebp
std
dec
pop
jmp
std
ret
js
xchg
add
pusha
out
lea
in
mov
hlt
mov
mov
xor
cmp
cmp
pusha
loopne
or
hlt
jno
das
inc
retf
pop
(bad)
xchg
loopne
icebp
sub
pushf
mov
xlat
dec
(bad)
shr
cwde
xchg
inc
movs
mov
mov
inc
fadd
push
mov
fcom
cmp
shl
call
mov
and
aad
out
mov
lods
(bad)
add
mov
in
fdivr
mov
inc
add
xchg
enter
xor
and
ds
in
inc
xchg
pop
xor
std
ret
es
out
push
mov
push
sub
pop
fistp
pop
or
xchg
enter
and
test
inc
inc
adc
push
inc
arpl
fcomi
sbb
ins
inc
jle
(bad)
ja
jbe
inc
mov
jbe
retf
imul
push
dec
sti
adc
icebp
sbb
mov
or
movs
adc
mov
or
retf
dec
jo
mov
repz
adc
(bad)
cmps
pop
sub
dec
lahf
jmp
sbb
adc
jae
das
or
sbb
lods
pushf
mov
jecxz
jne
pop
or
cdq
test
pop
jge
jmp
xchg
dec
mov
stos
test
retf
fstp
popf
popa
lahf
add
mov
push
retf
movs
xor
cdq
mov
sub
mov
fisub
push
leave
and
(bad)
dec
retf
cmp
arpl
ins
out
in
fidiv
frstor
cmp
dec
bound
mov
dec
pop
sub
or
ins
inc
xor
das
add
jge
dec
xor
bound
sbb
fidiv
sub
leave
jle
or
lea
xchg
pop
cmp
sahf
push
inc
push
ins
xchg
(bad)
xchg
dec
arpl
sar
jb
call
loopne
aam
xchg
and
sub
mov
adc
shl
in
mov
rol
cmc
mov
lods
mov
jg
cmp
cmp
xchg
stos
(bad)
outs
mov
jb
into
push
cld
cwde
sar
dec
(bad)
mov
addr16
clc
je
pop
jg
ja
(bad)
dec
cli
not
je
mov
(bad)
xor
mov
cmps
mov
sbb
xor
mov
xor
add
inc
push
repnz
stos
call
push
push
pop
repnz
data16
adc
mov
jecxz
mov
inc
jecxz
pop
push
sbb
fldcw
arpl
push
jg
push
iret
stos
jle
jmp
ja
fsub
das
add
fwait
pushf
cmp
retf
cmc
mov
mov
leave
call
xchg
out
fiadd
xor
imul
push
mov
cmp
jge
pop
cmp
and
mov
mov
les
call
inc
xchg
mov
cwde
pop
js
lods
outs
mov
dec
pusha
mov
mov
mov
scas
xchg
(bad)
hlt
pusha
mov
jbe
scas
mov
jg
jno
and
jmp
xor
add
int3
stos
int
fsubr
out
sbb
xlat
test
inc
ret
sub
push
xchg
mov
jp
mov
or
xchg
jmp
mov
in
mov
pop
ins
hlt
fist
mov
dec
in
ror
inc
pop
sbb
fs
jmp
out
pop
sub
pusha
push
xchg
and
stc
push
enter
(bad)
xchg
cmp
sbb
mov
cmps
ins
dec
add
stos
mov
mov
adc
rcr
aaa
imul
add
sti
jns
popf
pop
mov
xchg
iret
cmp
xor
test
mov
xor
mov
and
gs
aas
adc
je
xor
inc
xor
sub
std
dec
pop
dec
xlat
mov
sbb
pop
pushf
dec
inc
pop
cmp
mov
sbb
movs
sub
xchg
imul
jbe
sub
inc
loope
sbb
sub
(bad)
and
std
jge
test
cmp
cmp
fistp
punpckldq
out
jmp
arpl
mov
sub
adc
xchg
add
ror
mov
(bad)
jge
stc
lods
or
test
dec
mov
into
adc
xor
fwait
imul
ror
jl
sbb
push
xor
retf
xor
pop
les
gs
mov
in
stos
(bad)
cs
mov
ins
ss
sbb
iret
sbb
push
in
dec
and
dec
add
into
inc
cld
pop
push
ins
ss
pop
ror
add
cmp
lods
nop
out
pop
(bad)
sub
sub
bound
dec
pop
xor
fisubr
xchg
gs
jne
jne
out
and
mov
push
xor
stos
in
int3
rol
or
or
xlat
call
cmp
dec
daa
sub
sbb
aas
les
dec
rcr
pop
jle
je
xchg
cmp
xor
push
mov
test
js
(bad)
js
sti
mov
pusha
mov
sbb
mov
repnz
xchg
sbb
xchg
mov
inc
mov
imul
dec
sbb
hlt
add
push
mov
bound
pop
xor
iret
xchg
movs
adc
inc
out
cmps
add
or
dec
push
lods
int3
sub
movs
rcl
inc
test
push
pop
jmp
inc
push
rol
shr
mov
and
dec
sbb
int
adc
scas
fst
inc
outs
mov
adc
ins
jle
aaa
cmovnp
(bad)
push
loope
xor
repnz
inc
fistp
and
icebp
sbb
pop
movs
mov
push
icebp
repnz
push
dec
(bad)
out
lock
adc
push
popf
cwde
and
xor
add
dec
pop
dec
xor
test
(bad)
rcl
adc
jbe
xchg
mov
(bad)
cmps
addr16
push
push
mov
rcl
aas
mov
inc
dec
lea
retf
push
xchg
and
sar
in
push
dec
pop
or
jbe
push
mov
in
jns
xchg
mov
or
pop
inc
clc
xor
push
jmp
cdq
xor
imul
mov
retf
(bad)
div
lods
pop
test
pop
sub
repz
or
or
pushf
xchg
cmp
scas
xor
femms
pop
dec
clc
loopne
mov
fmul
loope
mov
cmp
pop
push
xchg
sbb
rol
mov
xchg
cmp
pop
and
and
mov
and
sbb
sub
xchg
add
sub
dec
jne
mov
(bad)
xor
loop
in
enter
cmps
sub
xchg
jmp
jecxz
mov
rol
pop
addr16
xchg
call
xchg
cli
lods
inc
retf
cld
or
inc
cmps
into
out
xchg
cmps
add
mov
sar
or
mov
mov
jb
sti
push
jg
call
add
mov
out
cdq
ficom
push
mov
pop
and
mov
push
dec
dec
in
in
pop
in
push
call
lods
mov
dec
sbb
xchg
push
into
cmp
xlat
out
sub
mov
fst
lods
pop
mov
mov
mov
push
cmp
aas
jnp
mov
cmp
retf
and
bound
in
jo
test
lea
jb
push
sub
cdq
mov
dec
aad
push
add
bound
mov
or
ror
push
imul
in
dec
aad
push
and
fdivr
mov
dec
ins
adc
das
rcl
int3
aad
inc
mov
loopne
dec
cmc
jnp
rol
ins
jns
pop
inc
mov
sbb
sar
mov
imul
pop
mov
ret
leave
dec
cmp
loope
and
dec
dec
adc
fsub
mov
jno
cmp
ret
lods
fwait
out
pop
add
sbb
iret
fsub
fld
jecxz
clc
jl
and
lock
pop
mov
movs
mov
mov
inc
mov
sbb
xchg
sbb
mov
cmp
or
push
fisttp
xchg
ret
pop
lea
xlat
push
xor
push
clc
inc
lock
cmp
pop
popf
je
jmp
fiadd
lods
mov
adc
sbb
jge
xchg
mov
inc
mov
aam
dec
sti
aam
das
movs
test
mov
mov
ret
pop
cmps
lods
sub
(bad)
data16
shr
lods
jno
push
out
sahf
dec
das
jae
movs
add
mov
inc
xchg
bnd
enter
xchg
sbb
sbb
in
or
outs
(bad)
mov
sahf
push
out
push
cli
mov
cmp
dec
push
das
arpl
jmp
mov
lock
xchg
(bad)
(bad)
mov
nop
inc
cs
into
outs
popw
cld
es
mov
sbb
(bad)
out
dec
test
add
dec
and
daa
sub
cmp
pop
push
cmp
xchg
cli
xchg
mov
out
das
dec
add
das
out
pushf
jo
call
xor
mov
inc
push
shl
int3
sbb
push
dec
pop
mov
pop
aad
cld
ret
or
test
outs
cmps
push
push
shl
test
mov
sub
or
mov
(bad)
xor
adc
stc
push
mov
mov
jnp
add
aaa
adc
mov
pushf
adc
mov
test
mov
mov
adc
int
mov
inc
xor
jl
ss
int3
cmp
mov
xor
cmp
neg
aad
add
or
xchg
lock
lahf
xchg
ss
adc
sbb
jo
inc
pusha
arpl
fs
pusha
in
add
mov
inc
rol
adc
xchg
mov
fdivr
cmp
js
add
lar
jp
and
lock
inc
hlt
mov
retf
leave
fisubr
cld
out
or
popf
enter
fidivr
xor
movs
sbb
(bad)
(bad)
jb
add
jg
repz
mov
sbb
stc
and
retf
cmps
and
(bad)
pop
movs
mov
ficomp
rcl
mov
push
push
retf
fimul
and
lods
inc
cmc
mov
dec
adc
rcl
and
and
in
movs
icebp
push
or
jp
ds
int3
hlt
jnp
loop
out
mov
jl
mov
ss
(bad)
sahf
jmp
dec
jp
adc
cwde
mov
sbb
cdq
pop
in
std
rcr
cmp
mov
das
dec
rol
sub
fidiv
ins
xor
push
xor
test
sub
mov
xchg
loop
test
mov
inc
jp
test
dec
(bad)
sbb
mov
leave
jns
ror
xchg
cmps
xchg
fisub
call
(bad)
ret
scas
in
out
frstor
add
mov
add
push
jne
jecxz
cmc
push
js
mov
mov
jle
aad
push
clc
lea
sub
(bad)
jns
fsubp
xchg
ror
xchg
ja
jbe
call
loop
inc
fimul
je
ret
test
add
add
hlt
jns
xor
jl
cmc
jne
mov
push
pop
jne
ret
sub
mov
pop
adc
jnp
mov
xchg
in
fwait
icebp
or
addr16
xlat
push
fidivr
sbb
mov
jbe
xchg
add
adc
jae
call
fsubr
jge
pop
push
mov
ror
pop
jg
ror
test
cli
shl
sub
call
test
std
push
clc
push
adc
dec
xchg
inc
shl
jp
loop
mov
cmp
jo
xchg
sub
xchg
adc
add
sbb
jne
lods
retf
and
dec
(bad)
adc
jge
rcl
jae
cmp
cmp
add
sar
cmp
cdq
and
sub
cmps
aad
pop
inc
test
jmp
ror
retf
xchg
loopne
mov
outs
push
imul
jae
rcl
test
shr
js
aad
mov
fs
jecxz
(bad)
xchg
sbb
aad
dec
cmp
jl
call
stc
inc
dec
lods
dec
xor
push
push
adc
hlt
outs
pop
repz
adc
sbb
adc
sbb
mov
push
xor
sar
xchg
add
sub
repz
imul
xchg
leave
test
mov
dec
fdivr
ins
out
sbb
mov
retf
ds
lock
pushf
add
jae
pop
mov
fbstp
movs
cmp
inc
movs
push
adc
add
sub
push
das
dec
ds
pusha
xor
push
dec
push
nop
push
loope
cmp
or
into
mul
in
in
cmp
cmp
fstp
mov
ins
pop
cmps
xor
xchg
or
pop
js
dec
rol
jnp
aas
inc
push
jb
mov
not
ret
int
jns
push
arpl
(bad)
cld
ins
rcl
mov
push
test
mov
cwde
clc
or
sbb
in
icebp
icebp
jg
(bad)
jl
push
add
push
push
inc
adc
jno
mov
jno
arpl
pop
lea
xor
push
bound
mov
mov
jp
(bad)
push
adc
(bad)
and
das
cld
cld
js
or
popf
mov
xor
pop
fcom
inc
jl
mov
adc
push
mov
push
shr
push
retf
daa
xor
fcomip
push
adc
jmp
jp
sbb
out
xchg
movs
retf
addr16
mov
adc
xchg
xor
push
sub
bound
adc
loope
add
sti
add
xchg
cmp
jecxz
movs
jle
pop
jns
mov
mov
dec
int
outs
mov
mov
dec
mov
(bad)
mov
pop
pop
sbb
imul
adc
adc
sub
sar
mov
sbb
cli
xchg
sub
sbb
sub
or
in
(bad)
icebp
jp
stos
adc
mov
dec
sbb
dec
clc
movs
outs
(bad)
cmps
jnp
cli
cmp
add
ret
popa
xchg
enter
xchg
fmul
cmp
jno
scas
std
pop
sbb
ins
adc
js
inc
test
movs
shl
retf
sub
dec
mov
push
and
aas
lods
fcom
jae
retf
ficomp
lods
mov
and
es
fiadd
std
xchg
sbb
retf
stos
addr16
cmp
jge
jl
xor
mov
jg
jmp
adc
enter
dec
(bad)
cli
pop
mov
mov
int3
call
and
stos
clc
or
lea
neg
test
mov
movs
xor
enter
fs
and
mov
xor
aam
mov
jg
xor
in
jb
mov
mov
mov
mov
mov
inc
push
xchg
jne
adc
or
hlt
leave
ins
scas
ror
jge
mov
pop
fist
aaa
xchg
stos
dec
ficomp
mov
fmul
int
rcl
enter
retf
(bad)
and
mov
jmp
add
repnz
mov
out
xchg
mov
xchg
cmp
cwde
adc
mov
in
call
(bad)
pop
in
adc
clc
les
sbb
push
sub
adc
imul
xchg
adc
or
mov
inc
dec
(bad)
into
jno
cmc
ja
icebp
xchg
cmps
hlt
sub
mov
nop
shr
add
jl
mov
sbb
inc
xchg
ret
(bad)
xchg
nop
push
ret
mov
push
dec
adc
xchg
mov
ret
aas
icebp
add
adc
jo
bound
mov
dec
mov
out
retf
and
xor
int
(bad)
in
into
or
dec
sbb
inc
add
arpl
mov
sar
cmps
sub
pop
push
fld
fcomp
pop
out
iret
popa
and
stos
sbb
je
adc
sbb
mov
aad
ins
mov
sti
mov
xchg
pop
scas
lea
fsub
xchg
pop
cwde
lahf
push
push
mov
pop
push
test
(bad)
lea
(bad)
mov
(bad)
mov
jl
loop
hlt
or
xor
cmp
sub
jns
sbb
ret
inc
lods
sahf
lock
(bad)
sub
inc
cld
mov
fisttp
push
xchg
jle
sbb
mov
ins
ud0
cmp
mov
add
and
inc
push
inc
and
push
sbb
loopne
mov
cmovg
clc
jmp
ret
pop
shl
lea
dec
dec
das
mov
dec
or
mov
rcr
add
push
call
xor
aam
or
fstp
and
mov
xchg
mov
and
into
iret
cmp
leave
push
jle
pusha
push
lds
sub
mov
movs
xchg
adc
add
pushf
push
popf
mov
add
mov
pop
xchg
mov
jl
add
or
jecxz
xchg
in
mov
jns
dec
pop
dec
fistp
mov
cmp
addr16
in
push
xor
cmp
sub
pop
sub
mov
sub
shl
movs
call
jge
aam
lea
ror
repnz
mov
fidiv
and
addr16
jae
addr16
push
arpl
and
mov
movs
test
(bad)
fwait
icebp
sbb
retf
cli
xchg
or
outs
mov
xchg
nop
xchg
xchg
es
(bad)
aaa
jno
icebp
jl
aas
sub
mov
add
(bad)
lahf
mov
and
mov
sbb
push
adc
mov
not
arpl
mov
adc
mov
sar
mov
adc
je
mov
mov
mov
leave
add
jecxz
inc
sub
cdq
cli
jns
push
jns
cmp
push
pop
cld
imul
jp
leave
sbb
in
sub
xchg
and
cmc
xchg
stos
test
cmp
dec
test
test
mov
(bad)
add
aas
pop
cmps
sti
push
jle
(bad)
jge
ret
sbb
inc
sub
fld
bound
pop
push
iret
clc
inc
inc
and
push
std
ins
cmp
mov
xor
jae
mov
or
test
jmp
jmp
inc
scas
mov
mov
mov
cli
int3
lahf
or
in
jo
data16
inc
sahf
std
jecxz
mov
jg
mov
xor
stos
jbe
sub
loop
ds
stos
push
std
and
popa
xchg
imul
pusha
or
retf
push
cdq
mov
in
push
mov
jb
jmp
sbb
sbb
(bad)
ds
imul
sub
jl
sub
mov
jle
outs
adc
push
cmp
loop
adc
hlt
add
ins
jg
or
gs
fwait
or
adc
jne
mov
dec
fwait
aad
test
(bad)
icebp
sbb
pop
mov
repz
add
xor
stc
test
mov
fld
lea
into
xor
cli
jae
dec
out
pusha
jp
mov
push
or
jns
pop
call
into
inc
push
enter
push
add
xchg
xchg
cmp
jle
(bad)
in
repz
out
mov
ret
xor
inc
add
mov
les
retf
add
xchg
pop
xor
out
inc
jns
ret
ret
push
pop
jmp
inc
add
mov
mov
push
ffree
popa
imul
pop
int3
lods
mov
sbb
mov
into
popa
inc
pushf
sbb
ret
xchg
xor
popa
daa
inc
mov
imul
sti
xchg
cdq
xor
ins
sub
movs
sub
sbb
ret
lds
dec
inc
stc
and
add
les
dec
mov
mov
test
popa
and
sub
pop
dec
mov
jb
retf
bound
data16
iret
or
inc
imul
leave
int
xchg
sub
jmp
rol
std
pop
js
iret
fcom
sub
fsubr
push
lea
push
mov
lods
ret
add
push
push
outs
inc
fst
loope
mov
mov
into
bound
or
lea
jmp
rcr
dec
add
push
jnp
mov
or
aaa
es
pop
push
cmp
dec
pop
cld
cmp
sbb
test
cmp
adc
sbb
(bad)
in
mov
sub
dec
imul
mov
sahf
sbb
std
inc
sub
bound
mov
pop
pusha
jnp
fnstcw
test
pop
movs
xor
mov
(bad)
dec
sbb
xor
mov
inc
mov
fadd
in
mov
sub
bound
lock
sbb
shl
test
or
push
jae
adc
add
dec
mov
push
call
mov
jp
int3
sbb
adc
push
or
jne
or
cmps
iret
scas
adc
outs
mov
sahf
xchg
sub
cli
ficomp
adc
xor
(bad)
push
dec
mov
and
add
push
pop
sar
fwait
jp
loop
loopne
pop
cmp
out
aaa
push
imul
cmc
imul
xor
jns
test
push
sub
in
dec
data16
in
sbb
cwde
adc
sbb
jge
lds
out
or
clc
cmps
nop
pop
xor
imul
push
adc
icebp
mov
clc
out
(bad)
fmul
das
dec
mov
xlat
add
cmc
fwait
xchg
add
mov
dec
(bad)
push
clts
pop
aas
fsub
push
jl
adc
jno
(bad)
xlat
push
cli
retf
imul
sbb
movs
push
bound
mov
mov
mov
dec
sub
or
addr16
add
sti
loope
inc
cli
and
adc
and
and
and
push
fadd
push
in
ret
ins
imul
out
mov
cmp
mov
fcom
lds
adc
aaa
repnz
xchg
mov
or
aaa
pop
mov
icebp
(bad)
dec
lock
fild
mov
pop
xchg
repnz
pop
sbb
and
shl
mov
lea
xor
addr16
mov
mov
mov
xchg
mov
inc
cmpxchg
sub
fcomp
pushf
xchg
sub
mov
movs
fwait
cmp
fisttp
dec
es
enter
dec
in
std
jmp
xchg
(bad)
bound
mov
call
mov
mov
mov
and
mov
pop
sub
xlat
aaa
or
aas
(bad)
idiv
sub
jae
xor
outs
sub
mov
mov
idiv
adc
int3
push
or
stos
fs
gs
js
stc
js
sub
(bad)
push
pop
iret
xor
or
lea
fs
cli
dec
loope
or
(bad)
cli
inc
jno
ret
push
xchg
or
mov
dec
cmps
jg
pop
cs
xchg
ja
xchg
shl
mov
jb
int3
dec
jae
sbb
sti
mov
cmp
sbb
mov
pop
fld
daa
xchg
ds
or
repnz
jnp
scas
pop
push
scas
push
adc
jo
jl
mov
fcomip
ror
shr
ja
in
dec
gs
lahf
pusha
jmp
(bad)
imul
mov
mov
pop
push
cmp
pop
push
cmp
push
sbb
cli
pop
pcmpeqb
out
stos
dec
jo
ss
lods
xor
jo
inc
shr
jl
cmp
pop
push
mov
je
or
mov
push
pop
jbe
jl
add
jae
sbb
jb
enter
mov
and
add
fadd
jne
sar
icebp
add
xchg
and
jg
push
sub
shl
aas
js
mov
lahf
lods
icebp
aad
sbb
pop
dec
movs
ss
data16
xchg
icebp
popa
ins
bound
(bad)
mov
frstor
adc
test
hlt
or
cdq
in
mov
rol
inc
sub
jmp
or
inc
mov
loop
popa
sar
fdiv
mov
cdq
jl
dec
int3
pop
mov
daa
in
jl
sti
mov
ins
inc
jle
stos
sub
adc
mov
mov
push
xchg
add
push
movs
adc
(bad)
movs
clc
lea
fisub
pop
and
es
xchg
mov
fsub
je
loopne
inc
push
rol
cmp
and
scas
push
test
add
call
xchg
cmps
lods
mov
dec
es
and
add
push
clc
or
sbb
hlt
shr
mov
stos
movs
stc
mov
jb
and
adc
adc
arpl
push
mov
xor
jns
xchg
cmp
jns
xchg
sar
and
push
sar
and
mov
mov
add
fsubr
and
scas
jo
mov
jae
adc
mov
sub
mov
and
sub
stos
(bad)
ins
lds
xchg
(bad)
and
mov
repnz
jb
xchg
call
sbb
jge
std
call
push
(bad)
cld
push
sbb
mov
mov
mov
jle
(bad)
mov
pop
lock
lea
shr
hlt
mov
test
test
jp
or
sahf
xchg
cmp
retf
loope
xor
cmp
xor
push
cdq
xchg
pop
pop
arpl
inc
pushf
pop
or
xor
ins
aas
retf
(bad)
and
rdtsc
call
add
or
and
and
mov
shl
or
mov
cmp
add
or
jp
leave
and
sar
inc
mov
lds
js
inc
xchg
lahf
jecxz
fist
stos
repnz
cmps
sub
xchg
push
jbe
push
(bad)
cmps
mov
pop
push
jecxz
dec
test
daa
mov
outs
cmp
sub
psubd
lods
add
les
(bad)
xchg
call
inc
inc
dec
mov
(bad)
xchg
push
push
(bad)
lahf
add
ss
mov
jnp
(bad)
push
and
icebp
add
psllq
pop
xchg
mov
iret
push
loop
mov
xor
jmp
sbb
(bad)
imul
and
ret
movs
(bad)
sub
adc
mov
pop
jmp
in
ror
jl
adc
(bad)
push
push
fcomp
sub
jnp
call
lahf
out
sar
xor
jnp
addr16
jmp
test
fidivr
rol
push
rol
leave
mov
and
call
and
loope
add
sbb
sahf
pop
pop
or
aam
jnp
ret
cmp
jle
enter
in
das
add
mov
jmp
loopne
ds
adc
sar
add
or
dec
jo
sahf
pop
pop
jmp
add
aas
mov
inc
push
data16
pop
or
pop
sbb
xchg
test
out
int
sbb
mov
test
mov
push
mov
lods
sbb
push
xlat
jmp
std
fisttp
das
inc
cli
mov
aad
pop
sbb
dec
stos
sti
rcr
push
and
shr
jp
dec
scas
repnz
jns
mov
push
int3
xchg
mov
add
cmps
imul
push
sti
xchg
into
xchg
call
mov
(bad)
fidiv
imul
push
fldenv
daa
nop
push
hlt
mov
sub
xchg
adc
cmp
stos
in
jae
test
pop
add
adc
sub
and
in
mov
std
xor
popa
dec
mov
clc
and
outs
hlt
adc
shr
add
jmp
sbb
leave
inc
inc
xor
rcr
cmp
inc
jmp
adc
ret
inc
jo
in
mov
mov
push
xchg
mov
mov
jns
mov
sub
sbb
mov
shr
xor
dec
xchg
push
mov
cwde
in
xchg
popf
call
xor
adc
das
sbb
push
test
mov
mov
mov
or
cmp
aas
test
movs
cdq
xchg
jae
cmps
inc
pop
mov
aaa
gs
jmp
xlat
fild
cmp
xor
dec
inc
std
(bad)
test
repnz
xchg
sbb
jo
lea
push
test
iret
popa
cs
(bad)
enter
int
fimul
mov
mul
cmp
push
dec
(bad)
bnd
mov
add
mov
retf
xchg
inc
idiv
dec
mov
das
dec
push
sbb
pop
sbb
adc
and
xor
xchg
ret
clc
(bad)
call
arpl
cmps
test
imul
jne
mov
xor
xchg
mov
dec
adc
test
dec
les
stos
pop
mov
mov
inc
inc
fidivr
ss
cli
push
cmc
mov
sub
adc
cdq
inc
sub
jo
adc
mov
(bad)
mov
or
mov
or
iret
das
das
fs
fisttp
movs
push
xor
mov
xlat
ret
cmp
jae
sbb
dec
mov
inc
pushf
gs
mov
cmp
push
push
jo
mov
pop
fstp
ins
push
xor
cs
aas
sbb
mov
and
cmp
repnz
push
(bad)
xchg
xor
lds
test
inc
cld
inc
das
aas
ret
in
cmp
ds
mov
dec
mov
outs
mov
in
cmps
sbb
in
and
xchg
mov
push
cs
ficomp
jmp
ret
fcom
pop
adc
jmp
and
fstp
add
mov
cld
push
stos
jne
test
loopne
sub
sti
push
xchg
rol
pop
addr16
(bad)
sub
aad
dec
(bad)
rcl
ss
ds
in
jge
or
xor
jo
and
push
in
sub
mov
out
mov
push
(bad)
sub
fsub
add
fdiv
ds
lods
mov
mov
movs
popf
jmp
std
xor
mov
mov
push
mov
fstp
(bad)
or
cmp
mov
int3
and
inc
sub
cs
out
jmp
sub
(bad)
lods
cmc
and
(bad)
fmul
fs
add
add
xlat
jo
cwde
inc
out
and
cwde
ss
xchg
sub
jecxz
sub
sub
xchg
scas
ja
stos
pop
adc
mov
jg
adc
inc
xor
mov
ret
scas
icebp
adc
call
push
xor
(bad)
test
sbb
into
inc
dec
push
and
stc
jae
iret
xchg
sbb
stos
pop
ss
mov
dec
mov
call
ja
(bad)
jecxz
or
push
push
xlat
loop
inc
leave
je
xor
out
xchg
add
fisubr
mov
adc
mov
xchg
and
lea
jp
mov
inc
sbb
stos
aas
fnstenv
or
sub
mov
pop
jbe
xchg
test
push
pop
ins
xor
out
push
mov
dec
jo
xlat
jmp
cmp
add
call
jb
loopne
add
js
jae
push
retf
out
hlt
inc
push
mov
outs
test
pop
mov
adc
push
sub
adc
fstp
int
ror
xor
adc
pop
add
cmps
nop
sub
test
dec
mov
or
stos
cmp
inc
add
movs
jmp
jne
ins
jmp
fld
ja
sub
xchg
inc
mov
push
loop
sbb
xchg
movs
sbb
adc
pop
push
pop
cld
clc
retf
sub
sti
jb
mov
and
imul
mov
sub
lods
rcr
add
mov
enter
jb
lods
cmp
stc
adc
das
cmp
inc
sbb
inc
nop
push
clts
es
gs
jmp
(bad)
sahf
sub
les
imul
gs
jne
sub
cmp
fwait
imul
inc
and
and
push
sub
ror
fcomp
pop
shl
jbe
sbb
je
fimul
mov
aad
push
sbb
mov
out
cmps
cmp
mov
mov
(bad)
daa
add
cld
pop
or
rcr
enter
xor
pop
inc
mov
fwait
xchg
jp
dec
dec
clc
inc
pop
jb
scas
cmc
outs
and
pop
ret
dec
js
push
jp
movs
sub
aaa
add
cmp
pop
sub
mov
jmp
out
jp
cmps
sub
mov
cmc
push
inc
push
cdq
mov
add
xchg
aaa
jecxz
dec
call
add
adc
std
int3
movs
enter
shl
xchg
sbb
inc
or
sub
mov
ror
aaa
fbld
mov
or
sbb
sbb
je
push
mov
outs
jmp
jo
hlt
jmp
jne
or
adc
cmp
fwait
add
xchg
scas
add
outs
push
popf
pusha
cdq
jmp
xor
xchg
dec
out
in
xchg
push
jns
retf
js
xor
cmp
cdq
xlat
in
pop
pushf
pop
pop
fist
icebp
cwde
mov
out
dec
popf
xor
sub
inc
in
cmp
call
add
aad
in
add
xchg
pop
push
adc
push
cwde
hlt
addr16
cmp
fisub
mov
mov
imul
aad
jge
in
add
popf
(bad)
mov
push
mov
mov
lds
pop
xchg
lahf
in
push
or
pusha
mov
loope
pop
dec
dec
adc
into
sub
stc
and
js
(bad)
jge
inc
push
rcr
sti
xchg
popa
lods
int3
enter
cmp
xor
xlat
repz
inc
cld
cli
push
add
dec
aas
cmps
ret
dec
lods
jae
mov
push
inc
or
popf
or
sbb
push
jne
push
jmp
dec
or
xor
jge
imul
adc
hlt
push
xor
cli
jns
mov
cmp
cmps
pop
leave
cmp
mov
push
(bad)
cwde
aam
jmp
call
popa
dec
(bad)
push
push
add
mov
fisubr
fmul
ds
popa
leave
aad
rol
iret
cs
hlt
jo
jecxz
fs
sub
jecxz
clc
pop
push
iret
xor
cmp
movs
imul
dec
or
mov
pop
push
ja
or
inc
mov
in
mov
push
inc
pop
scas
ffreep
pop
in
mov
push
xor
mov
aam
xor
shl
pusha
repz
push
pop
pusha
sub
movs
es
jb
or
lea
adc
sahf
dec
mov
pusha
into
shr
xchg
push
mov
call
test
adc
and
add
mov
mov
out
imul
repz
pop
stos
bnd
movs
inc
aam
add
shl
sbb
mov
ins
push
dec
xchg
jne
aaa
pop
aas
pop
clc
jne
test
ror
pop
push
loope
cs
cs
dec
adc
mov
inc
sahf
xor
test
inc
pop
or
aaa
js
xor
or
js
sar
xor
sub
(bad)
int3
imul
dec
mov
sbb
mov
popa
push
lock
cmc
sub
rcr
xor
sub
mov
sbb
xchg
mov
iret
sub
fnstcw
int3
je
push
hlt
pop
test
jo
pop
out
mov
cmovs
add
mov
fwait
jbe
or
jp
push
mov
(bad)
dec
mov
cmc
bnd
lds
mov
stc
stos
(bad)
fstp
inc
gs
jge
and
add
dec
adc
or
xchg
outs
mov
rcl
call
dec
int
mov
jne
ficom
enter
imul
ficomp
mov
add
iret
jo
adc
adc
cmps
mov
jo
fbld
adc
js
or
sar
mov
(bad)
cmp
leave
scas
xchg
fdiv
push
adc
xlat
or
mov
data16
mov
mov
inc
inc
fnsave
stos
xor
dec
dec
xor
add
rcr
shr
and
sub
mov
or
test
xchg
das
push
cmp
push
aam
je
lock
mov
push
pop
repz
cs
mov
std
mov
int
mov
inc
cld
rcr
mov
ret
mov
adc
cmp
sahf
mov
cmp
div
add
xor
and
int
outs
sub
rcr
dec
mov
pushf
(bad)
cmp
int3
xchg
mov
ja
jo
shl
or
mov
inc
pop
dec
ss
and
xchg
sahf
mov
jg
(bad)
loop
scas
mov
or
and
xchg
rcr
int3
mov
rol
cwde
mov
outs
adc
ins
sbb
mov
sbb
sub
cli
mov
sbb
add
jmp
gs
jmp
push
loope
int3
jge
sub
mov
fwait
jmp
xchg
jmp
sub
cmp
cli
not
jnp
mov
je
cmc
ficomp
movs
mov
in
test
dec
data16
sbb
cs
adc
mov
xchg
jb
loop
repz
clc
test
shl
sti
xchg
xlat
mov
rol
mov
hlt
mov
or
and
ficom
xlat
test
adc
dec
mov
and
inc
pop
das
lods
or
mov
xchg
aad
mov
(bad)
movs
xor
jmp
leave
jno
shl
or
adc
out
pop
cmps
lods
xor
sub
jae
adc
pop
sub
push
lock
addr16
adc
pop
js
pop
cs
push
(bad)
cmp
(bad)
mov
mov
pop
hlt
sub
jbe
push
mov
adc
(bad)
ffree
xor
iret
retf
mov
ja
arpl
sub
sub
enter
retf
jl
icebp
pushf
test
mov
xor
add
mov
icebp
ja
lds
jmp
dec
call
stc
mov
or
dec
es
aaa
mov
out
jge
or
lock
mov
js
xchg
mov
dec
js
repnz
enter
lahf
cld
xchg
xor
enter
sbb
test
xor
adc
and
mov
repnz
or
push
mov
pop
test
jnp
pmulhuw
or
rol
sub
pop
or
inc
pop
mov
push
inc
xchg
xlat
jmp
int3
(bad)
cwde
jmp
inc
out
movs
pop
cmp
(bad)
dec
repnz
lock
inc
mov
gs
fwait
inc
mov
dec
pop
jge
in
into
hlt
mov
inc
pop
xor
call
fwait
push
sbb
ss
jge
out
movs
cmp
xchg
stc
cmp
or
and
dec
mov
dec
sbb
lahf
cmp
mov
fcom
xchg
mov
mov
push
fiadd
in
rcl
adc
jae
pusha
jmp
push
adc
sahf
ror
push
int
test
cs
jbe
inc
js
xor
and
adc
adc
mov
jne
ret
add
ret
lahf
ins
xor
push
loope
xor
adc
jecxz
stos
cmp
cmps
imul
mov
leave
cs
inc
or
out
call
cmp
scas
aaa
sbb
mov
pop
neg
scas
sbb
xor
mov
adc
xchg
test
mov
ret
xchg
(bad)
outs
push
adc
jp
call
ins
jb
push
lds
inc
rol
inc
aam
cmp
je
ror
cli
adc
adc
mov
gs
push
mov
fcmovu
fmul
lods
cmps
fidiv
add
or
jmp
jle
mov
fist
jmp
inc
mov
cmps
mov
addr16
jae
aaa
retf
or
jae
adc
xchg
popf
stos
inc
rcr
mov
call
movs
dec
adc
push
mov
cli
(bad)
push
lock
gs
ins
gs
mov
sub
mov
cli
shr
dec
shr
push
jle
sub
test
sub
mov
scas
inc
daa
(bad)
loop
mov
imul
cli
pop
dec
sub
xchg
jne
cmp
sub
test
cmp
(bad)
fisttp
xchg
fldenv
sti
mov
adc
daa
rol
mov
lock
aad
ins
mov
in
mov
int3
adc
sbb
pop
ins
jae
xchg
sub
shl
repz
dec
jl
or
stos
fs
pop
mov
arpl
stc
mov
mov
pop
xor
neg
sar
aaa
fst
mov
in
mov
adc
stos
mov
shl
sub
jp
pop
fstp
cmp
cmps
in
pop
int3
pusha
inc
mov
shr
popf
(bad)
pop
and
jle
stc
mov
dec
rcr
data16
xchg
sahf
jne
jge
fild
gs
add
or
or
jmp
pop
ins
or
fstp
inc
call
push
ins
pop
jmp
sbb
sub
pop
scas
test
in
and
stc
aad
sbb
mov
jnp
inc
out
mov
and
xor
push
pop
adc
adc
xchg
mov
sahf
hlt
adc
jmp
pop
aas
sub
cmp
push
xlat
call
lahf
test
inc
test
mov
cli
ins
int
xor
push
add
jno
push
mov
xchg
xchg
pop
rep
mov
sbb
dec
fwait
mov
jecxz
test
je
outs
out
fistp
(bad)
out
and
call
xchg
popa
dec
and
inc
fst
data16
jge
shl
pop
push
cdq
mov
pop
(bad)
inc
nop
push
push
push
lahf
movs
arpl
inc
xchg
cmp
daa
aam
xchg
push
mov
ja
es
inc
inc
outs
or
in
xor
les
into
jnp
pop
pop
imul
leave
popf
pop
pop
aad
dec
xchg
jmp
cmp
movs
add
pop
cmps
arpl
out
stc
adc
je
sbb
dec
ret
rcl
repz
out
push
mov
sbb
mov
jo
aad
push
cmp
mov
sub
jge
popa
pop
imul
mov
and
aad
push
mov
les
push
lea
mov
mov
movs
xor
sbb
int3
mov
icebp
dec
fstp
adc
out
jmp
mov
sbb
adc
sti
sub
jmp
push
(bad)
rcl
retf
adc
ins
mov
out
gs
dec
and
dec
or
xchg
inc
push
push
repnz
xchg
sti
xchg
out
sbb
sub
dec
clc
in
push
cld
pop
push
outs
mov
ja
loope
in
mov
mov
cmc
test
sahf
sbb
push
ror
sub
push
stos
mov
jge
lods
inc
jmp
das
es
in
loopne
sbb
test
dec
popa
dec
repnz
and
and
pop
rcl
pop
cmc
into
jnp
mov
push
mov
bound
inc
int3
inc
sahf
js
cld
add
icebp
mov
dec
xchg
fisub
cmp
push
and
les
das
lds
pop
xchg
pop
imul
push
fs
cli
into
add
ficomp
mov
bnd
mov
pop
nop
(bad)
cli
xor
adc
fimul
test
mul
cmp
adc
lods
xchg
inc
xor
loop
sub
xor
mov
dec
daa
sub
and
cmp
fucomp
pusha
shr
call
mov
in
and
das
dec
xchg
cli
in
mov
out
mov
mov
mov
inc
cmc
xchg
sahf
in
call
inc
sub
sbb
dec
mov
movs
jo
cmps
leave
rcl
in
dec
adc
sub
test
imul
xchg
adc
jmp
pop
sub
push
popa
mul
inc
ins
push
jle
pushf
jle
mov
ss
addr16
cmp
adc
pop
sar
cmps
jmp
fwait
adc
fsub
add
jnp
mov
fisubr
loop
(bad)
xor
scas
xchg
scas
aam
es
movs
inc
scas
repz
ror
cmc
mov
dec
das
cwde
aas
inc
loopne
mov
inc
add
mov
inc
ins
push
push
loope
mov
ror
pushf
sub
nop
add
jns
xchg
mov
push
in
and
cld
xchg
jmp
test
fist
int
dec
add
clc
lods
shr
loope
ror
mov
cwde
outs
ja
in
call
sbb
in
nop
cmp
movs
mov
adc
data16
cmp
shr
ds
adc
stos
jle
neg
das
in
lods
and
pop
push
(bad)
push
cli
in
xchg
or
mov
pop
xor
adc
lds
dec
inc
jmp
mov
scas
scas
sbb
xchg
pushf
sbb
cmp
mov
pop
loope
ins
xchg
pop
or
or
into
call
iret
xchg
icebp
xchg
push
dec
lock
mov
mov
push
stos
aad
mov
pop
inc
(bad)
sub
sti
cmp
xchg
inc
mov
mov
mov
jno
and
fidivr
pop
in
mov
outs
jge
imul
mov
adc
push
push
sbb
mov
jmp
test
popa
icebp
xchg
dec
xor
test
jb
gs
dec
jmp
mov
push
jns
mov
sub
push
retf
out
cmc
sub
or
pop
jmp
jg
lahf
cmp
leave
ins
shr
cmp
lods
push
dec
in
aaa
std
push
inc
sti
inc
mov
repz
test
cmp
xchg
xor
or
inc
xor
movs
dec
xchg
cli
in
push
jns
and
dec
movs
jl
js
int
pop
popa
jnp
jnp
mov
outs
mov
add
pop
sbb
adc
mov
xor
xchg
mov
cmp
popf
stos
addr16
fst
xchg
mov
pop
aaa
push
cs
or
hlt
int
fld
dec
pushf
fsub
xchg
les
in
leave
sbb
js
sub
mov
or
dec
xor
mov
mov
jl
pop
dec
rcr
push
adc
cmp
mov
(bad)
in
clc
test
mov
in
dec
hlt
inc
(bad)
xor
test
enter
cmp
std
dec
jmp
xor
inc
and
leave
xlat
ins
lea
loop
outs
cld
sub
push
cmp
and
add
add
mov
jge
lea
sbb
mov
mov
test
or
dec
dec
int3
loopne
loope
mov
jmp
xor
les
and
cmp
add
jno
inc
pop
out
pop
stos
aaa
or
enter
and
mov
add
sahf
mov
or
inc
ds
lods
je
fld
mov
ss
jno
in
add
xchg
fwait
pop
repnz
(bad)
imul
(bad)
rcr
jo
fnsave
inc
dec
sub
push
(bad)
nop
jb
push
(bad)
sahf
dec
neg
cmp
fsubr
test
les
mov
dec
jns
xchg
out
or
jle
push
sbb
fwait
jmp
lods
scas
call
pop
mov
fist
ret
fmul
ss
into
xlat
iret
dec
push
mov
pop
ss
mov
pop
mov
and
xor
lock
shl
aam
mov
mov
mov
jbe
adc
into
rcl
shl
retf
or
jmp
aas
pop
int
push
mov
pop
shr
movs
push
addr16
lea
adc
add
hlt
and
cld
dec
jl
rcr
in
out
iret
adc
cmc
clc
mov
out
nop
sub
outs
aas
jmp
outs
pop
int
mov
scas
jg
popa
inc
push
bound
mov
aas
mov
xor
les
jg
sahf
jp
cli
add
mov
and
(bad)
cmp
sbb
or
jno
jnp
mov
jo
movs
add
mov
imul
adc
je
inc
call
jp
icebp
std
or
(bad)
daa
dec
mov
inc
fsub
les
sub
xchg
and
icebp
ret
out
movs
mov
cmp
and
and
mov
loope
jno
dec
jns
iret
xchg
adc
sbb
iret
sub
add
jle
nop
cs
sub
jp
int
sar
sar
inc
movs
mov
int3
cwde
xor
cmp
inc
fs
cmc
xchg
pop
xchg
xchg
addr16
adc
scas
hlt
ds
adc
push
mov
xor
push
pop
(bad)
lock
jmp
jle
push
sbb
ror
mov
int
leave
push
js
ss
je
dec
jecxz
xchg
sbb
(bad)
sub
in
fs
pop
mov
add
adc
pushf
push
push
mov
outs
add
scas
and
fadd
repz
lods
retf
popa
es
test
fmul
bound
icebp
clc
jecxz
cwde
and
sti
adc
imul
xor
aas
pusha
test
mov
stos
pop
(bad)
cld
mov
push
out
fisttp
fmulp
push
daa
pop
jmp
ret
ds
(bad)
movs
jle
aaa
jge
ja
push
or
jbe
push
push
xlat
mov
in
xchg
retf
scas
into
cli
xlat
stc
enter
xchg
and
bound
cwde
bound
mov
and
inc
call
retf
movs
call
retf
add
js
div
and
aaa
movs
out
jb
sub
imul
add
xor
(bad)
out
and
jmp
xchg
xchg
add
or
in
sahf
clc
xchg
hlt
(bad)
int
add
cmp
pop
movs
jg
popa
ret
outs
sbb
inc
scas
mov
cmps
movs
inc
or
xor
push
sahf
mov
repnz
cmp
sbb
test
or
fdivr
sti
test
xchg
cld
pop
ins
stos
and
or
sbb
test
and
push
pop
or
stos
dec
or
lods
xchg
and
je
out
jns
test
mov
in
pop
and
jle
sub
push
jbe
cld
imul
stos
xor
pop
xchg
out
ja
and
dec
push
hlt
cmp
jnp
pop
sahf
loopne
repnz
ins
fadd
xchg
(bad)
sbb
retf
imul
jl
repz
jecxz
mov
imul
sahf
enter
loop
pop
stc
(bad)
(bad)
cmc
fucom
xor
mov
inc
(bad)
jno
cdq
dec
(bad)
xchg
retf
dec
cmp
retf
or
jecxz
aam
loop
dec
inc
mov
stos
lods
ins
sti
loopne
and
xchg
ja
test
and
jb
sti
out
or
cwde
cmc
xchg
mov
sub
jo
outs
cmp
xchg
rol
stos
push
push
popa
xchg
push
popa
lods
(bad)
sbb
clc
inc
lods
loopne
push
sbb
jmp
scas
addr16
stos
cmp
or
inc
mov
les
jmp
fwait
ins
xor
shr
out
push
jecxz
push
adc
adc
data16
jge
ss
pop
aas
ret
fsub
xchg
ffree
push
mov
sub
cld
pushf
jnp
adc
test
in
and
add
bound
out
pop
pcmpeqd
push
cmp
xchg
pusha
js
lods
repz
or
inc
retf
fadd
jle
sbb
cmc
jae
inc
add
push
imul
ins
cli
rcr
scas
mov
add
in
mov
sti
xchg
cwde
out
mov
jno
in
cmp
mov
jnp
movs
lock
push
sbb
dec
adc
sub
stos
cli
imul
jmp
ficom
jl
and
dec
xchg
cmp
jbe
sub
xchg
mov
sbb
mov
sub
dec
rol
adc
(bad)
ss
test
ins
popf
xchg
jg
movs
int3
pop
(bad)
data16
sbb
mov
dec
pop
mov
pop
xchg
lods
jnp
cs
jl
or
js
icebp
add
or
push
test
scas
or
cmp
je
dec
fldenv
call
out
adc
fs
mov
xor
pop
scas
movs
inc
das
sti
ins
clc
bound
adc
fwait
ror
jp
mov
sbb
pop
adc
test
jg
jp
mov
push
add
mov
sbb
xor
jno
scas
sbb
sar
push
popf
and
sub
stc
fidivr
dec
rcr
add
xchg
push
mov
sbb
addr16
mov
stos
push
in
mov
in
sub
dec
sub
out
jnp
mov
xchg
mov
shl
xchg
out
push
sub
pop
sub
popf
js
xor
jbe
mov
mov
inc
js
sub
dec
int
add
push
leave
mov
mov
inc
add
xor
sub
sub
push
jae
mov
add
mov
(bad)
add
int3
in
stos
rol
adc
xchg
push
add
stc
shl
ficomp
mov
add
add
aaa
mov
nop
leave
xor
jmp
(bad)
aad
jecxz
sub
mov
jo
mov
push
mov
inc
addr16
inc
xchg
cmp
stc
scas
rol
inc
repz
aad
and
pop
sti
fild
add
and
mov
pop
(bad)
repz
popf
in
out
cdq
push
pushf
std
mov
xor
imul
aam
popa
or
inc
out
push
stos
inc
out
cmps
lods
push
xlat
cmp
mov
mov
xor
retf
mov
rol
ret
pop
mov
sub
enter
div
shl
dec
add
xchg
mov
pop
outs
jl
mov
inc
pop
ins
cmp
sti
out
ss
out
cmp
clc
jnp
xchg
out
inc
mov
shl
arpl
out
fwait
mov
in
clc
push
je
jmp
add
ins
push
iret
das
sbb
call
push
cmp
test
cs
or
neg
movs
inc
sbb
adc
dec
clc
push
inc
arpl
sbb
xchg
std
test
(bad)
push
loope
(bad)
cmp
mov
dec
push
es
jmp
push
mov
xrelease
loope
or
xchg
sbb
inc
sub
cdq
mov
adc
aas
mov
cmp
cmps
mov
pop
add
div
inc
inc
retf
mov
sbb
push
and
push
jno
and
into
(bad)
ja
dec
out
pushf
addr16
dec
sti
sub
adc
push
mov
adc
cli
ror
into
xchg
inc
test
ficomp
push
inc
ret
sahf
mov
push
jge
sbb
popa
inc
fs
dec
jle
jbe
pop
mov
lds
(bad)
stc
dec
push
adc
js
or
cdq
mov
mov
mov
ret
mov
cmps
or
fisub
clc
mov
lds
xor
xchg
test
and
xor
enter
push
inc
bnd
(bad)
xchg
les
inc
cmp
dec
jno
sbb
fs
dec
pop
adc
xor
xchg
cwde
adc
push
or
test
or
sub
int3
push
push
push
ins
sub
mov
jecxz
jmp
cmc
sub
aam
fst
lea
fild
(bad)
lahf
mov
aad
ror
call
out
add
pop
stos
and
mov
dec
out
jmp
or
add
aam
inc
nop
push
pushf
sub
outs
pop
mov
ins
fadd
sub
xor
push
jmp
dec
mov
push
das
fs
push
mov
pop
cmp
dec
outs
inc
add
das
xlat
adc
iret
div
sbb
mov
iret
cs
mov
lods
aad
xchg
shr
xlat
cmp
ja
jecxz
xor
xchg
add
leave
or
lahf
rcl
clc
xchg
test
add
(bad)
ret
fst
pop
push
fild
sub
aam
(bad)
(bad)
cmp
popf
outs
iret
scas
int
daa
mov
sbb
and
sub
mov
out
inc
call
stc
jne
nop
mov
outs
cs
popf
outs
ror
push
xlat
test
arpl
dec
cmps
icebp
icebp
pop
pop
cmp
mov
repz
dec
push
mov
inc
jmp
das
rol
sbb
or
in
lea
sbb
mov
test
int3
dec
jmp
xlat
dec
ss
dec
pop
dec
adc
fs
enter
dec
(bad)
ror
popw
retf
out
or
data16
jl
stc
push
cmp
jo
mov
xor
add
xchg
xchg
mov
dec
adc
cmp
dec
movntps
test
movs
lea
and
sbb
push
pop
call
sub
fdivr
mov
mov
xlat
cwde
test
cwde
(bad)
cmc
cmp
aaa
cmp
pop
stos
pop
inc
test
push
cmp
(bad)
test
mov
pop
hlt
test
jmp
addr16
ds
xchg
and
jg
sub
test
test
sahf
out
dec
cmp
sbb
jbe
test
jle
mov
outs
adc
pusha
clc
and
mov
call
inc
(bad)
cli
mov
adc
sub
aaa
ins
sahf
and
ins
xchg
lods
sub
cmp
mov
psubsb
mov
sbb
inc
and
mov
sbb
jns
push
pop
movs
mov
iret
add
sub
(bad)
ds
push
ret
or
sbb
cmp
daa
and
stos
out
imul
or
xor
cmc
test
cld
jle
and
out
sub
jnp
adc
xchg
scas
sar
sahf
inc
mov
inc
clc
fmul
ins
inc
mov
out
cld
inc
(bad)
sub
cmps
dec
loop
inc
movs
mov
gs
ja
leave
mov
jge
jns
scas
cdq
loopne
(bad)
cdq
add
lods
dec
bound
dec
and
dec
sub
dec
push
jnp
iret
adc
test
mov
aas
pop
pop
js
jnp
mov
dec
mov
and
sub
aam
ins
sar
aam
les
push
lock
lock
inc
sub
and
xchg
bound
inc
enter
mov
push
inc
rep
push
gs
cmp
sub
loope
dec
xchg
push
cli
js
adc
cdq
xor
adc
stos
fdivr
dec
mov
inc
repnz
lea
mov
jo
arpl
arpl
or
jno
les
pop
mov
cmp
mov
imul
xlat
adc
jnp
jno
xor
push
cmc
jp
pop
aas
jno
and
or
xor
in
or
iret
nop
lds
neg
jge
jmp
sbb
mov
add
adc
cmc
jmp
rcl
ret
and
dec
add
add
mov
inc
call
mov
icebp
loop
mov
dec
mov
mov
es
sub
or
mov
mov
in
out
or
lods
test
aaa
sub
sub
stos
je
xor
xchg
pop
cmc
call
cli
cwde
in
inc
and
enter
scas
inc
(bad)
cwde
movs
or
dec
sbb
cmps
in
sbb
clc
add
nop
out
adc
std
sub
push
push
cmp
out
dec
out
leave
movs
sub
mov
and
pop
clc
inc
iret
fnstsw
icebp
cld
jo
mov
inc
sub
inc
cli
mov
cmp
leave
mov
inc
cld
mov
pop
call
stos
adc
leave
ins
or
shl
xlat
mov
(bad)
mov
(bad)
push
in
dec
dec
pop
mov
dec
pusha
mov
test
int
cmp
ror
sub
int3
mov
lock
pop
sbb
pop
lea
adc
adc
movs
scas
in
sbb
adc
mov
gs
sbb
fisub
js
push
sahf
xor
xchg
stos
mov
and
mov
pop
mov
lds
dec
mov
mov
jl
fcomi
push
mov
(bad)
push
mov
push
adc
lock
call
aas
test
fmul
cmp
dec
mov
inc
sbb
xchg
stc
push
cmp
sub
ret
push
jg
or
adc
jo
fucomip
jns
movs
push
push
sub
mov
fst
adc
push
enter
xchg
push
cmc
dec
dec
pop
adc
in
jmp
xchg
xor
stos
cmc
rol
adc
jo
xor
pop
add
out
add
sub
ss
add
(bad)
and
xchg
sub
adc
out
jo
push
inc
and
mov
es
outs
cwde
inc
aam
out
(bad)
adc
cmp
sbb
cld
push
ins
cli
sub
push
and
add
sbb
in
loop
fisubr
push
iret
xchg
sub
and
addr16
sub
ret
je
xor
jecxz
test
les
xor
push
cdq
mov
movs
loopne
xchg
sti
push
jno
leave
pushf
hlt
movs
aaa
sbb
jb
dec
addr16
add
add
ret
je
test
push
lods
and
int3
xchg
sub
ror
(bad)
out
push
lahf
push
xor
mov
or
lahf
popa
pushf
or
es
ja
lds
in
not
xchg
pop
arpl
or
push
xor
retf
xchg
mov
sub
xchg
or
sub
add
test
cs
jmp
(bad)
xchg
in
iret
ins
aas
and
lods
pop
movs
dec
pop
lahf
mov
rol
(bad)
cmp
fbstp
call
fcmovnbe
movd
movs
test
push
cmp
int3
lea
fsubp
mov
push
dec
or
sub
inc
mov
xchg
or
iret
outs
fstp
in
mov
lds
test
aaa
(bad)
pop
out
mov
daa
and
xor
adc
mov
sti
fcom
dec
paddsw
dec
(bad)
sar
or
jle
icebp
stos
sub
xor
out
out
or
outs
xor
bound
mov
sub
fwait
push
pop
jae
sbb
or
(bad)
cmp
lar
sbb
stos
cmc
mov
aaa
jmp
adc
push
bswap
(bad)
repnz
or
xchg
xchg
pop
es
mov
mov
dec
rcr
nop
adc
mov
or
inc
jmp
loop
xor
push
ret
jo
xchg
sbb
mov
lahf
inc
std
enter
inc
test
bound
pop
or
mov
rcl
or
push
arpl
push
lock
rol
xchg
add
mov
push
jg
mov
test
pop
jne
sahf
in
xchg
mov
cmp
xchg
lods
push
and
shl
cmp
rol
jl
mov
and
in
add
mov
push
stos
mov
and
xor
xor
cwde
xchg
sub
movs
outs
xlat
cs
inc
mov
cli
fs
mov
dec
inc
jno
mov
in
adc
xor
fld
enter
jl
shl
xor
ror
rcl
scas
xor
dec
cmps
push
sbb
(bad)
xchg
or
daa
scas
popf
xor
xchg
inc
xchg
(bad)
sub
fcomp
jo
movs
cmp
loop
shl
sbb
mov
loop
dec
mov
mov
cdq
pop
sub
mov
mov
cmp
pop
xchg
loope
gs
sbb
mov
or
fsubr
push
pop
arpl
in
mov
mov
mov
mov
or
push
add
mov
cmp
aam
and
cdq
pushf
jo
pop
or
or
or
arpl
mov
sbb
sub
sbb
out
xchg
pop
scas
ins
fsubp
xchg
mov
sti
(bad)
xlat
lods
ficom
xor
repz
arpl
mov
add
ror
fsub
(bad)
cmps
mov
fild
inc
dec
mov
jge
cmovnp
xchg
loop
or
adc
nop
(bad)
fisttp
es
loope
sub
popa
add
pop
xor
cld
push
imul
ret
jecxz
sahf
push
jg
cmc
cmp
push
add
jns
lahf
hlt
ffree
addr16
fist
lods
sub
xchg
fstp
sbb
cmp
dec
fnsave
rol
push
mov
fcom
mov
es
or
imul
cmp
call
neg
sbb
cmp
fwait
mov
mov
mov
addr16
dec
imul
retf
dec
(bad)
arpl
mov
mov
xor
inc
or
mov
shl
ficom
pop
xor
inc
pop
dec
adc
push
mov
popa
in
loopne
push
inc
mov
add
or
xor
push
mov
lahf
mov
aam
add
popa
cwde
or
jbe
movs
and
push
daa
loope
stos
and
pop
imul
int3
lods
(bad)
pop
or
jb
cmp
outs
stos
sbb
add
movs
movs
push
cli
and
or
sub
sbb
xchg
pop
shl
cdq
xchg
push
in
jp
mov
nop
pop
sbb
int3
jae
adc
out
cmps
or
cdq
xor
sub
popa
jl
(bad)
and
out
xor
out
push
push
not
add
ret
sub
cmp
(bad)
fld
arpl
fwait
pop
mov
or
aam
sbb
outs
sbb
pop
retf
cld
bound
int
cmp
mov
out
out
xor
imul
or
aad
das
jmp
in
cmp
adc
pop
push
sub
fcomp
jno
or
cmps
pop
ficom
stos
push
cmp
jns
rcr
pop
rep
fstp
push
jo
mov
jbe
xor
inc
rol
add
sub
xor
mov
cmc
icebp
cmp
rcl
ins
add
dec
push
dec
xchg
in
sub
cmps
fidiv
clc
or
enter
mov
push
sbb
movs
arpl
(bad)
loopne
and
or
jmp
push
sbb
sub
and
mov
xchg
movs
mov
inc
(bad)
mov
xchg
std
jns
cmp
jecxz
xchg
pop
inc
push
addr16
aad
adc
sahf
ds
cli
retf
aam
test
mov
cmp
mov
jae
and
push
test
cmp
in
mov
rcr
xchg
fld
icebp
fs
sub
push
das
outs
mov
add
xor
mov
fisubr
js
inc
ds
xchg
(bad)
div
and
call
ins
adc
pop
cmps
dec
mov
xlat
xchg
xor
(bad)
loop
or
adc
xor
push
sbb
aas
sub
push
cdq
ins
push
jae
call
add
sbb
fidiv
xchg
setl
jbe
pusha
dec
leave
sub
rol
call
sti
add
imul
dec
push
ffree
js
mov
xor
sub
ins
adc
jp
mov
push
nop
stos
and
test
mov
cmp
jle
ja
jae
mov
xor
loope
mov
xor
mov
mov
cmp
iret
sub
push
inc
fld
jp
pop
jmp
dec
pop
scas
and
bound
lock
in
cmp
clc
inc
jo
mov
mov
repnz
arpl
js
cwde
jecxz
push
push
shl
jb
mov
xchg
data16
test
test
ja
cmp
inc
jmp
inc
sub
xor
adc
xor
sub
stc
xor
ret
xor
xchg
and
xchg
les
pop
loop
mov
jmp
inc
add
test
pop
hlt
cmc
sbb
std
cwde
ror
scas
aam
jl
jno
scas
ins
jp
cmp
mov
test
int3
inc
sahf
mov
sub
in
(bad)
mov
sub
loope
rcl
jle
push
mov
out
rcl
mov
push
dec
add
into
pop
ja
adc
pop
fpatan
ins
call
pop
dec
jnp
push
aad
adc
lock
shl
lock
add
or
mov
push
stos
repnz
imul
jae
add
aam
inc
mov
out
mov
pusha
adc
mov
dec
mov
shl
mov
cmp
sub
inc
mov
mov
cmp
retf
push
(bad)
cmp
icebp
push
dec
sbb
cld
push
stc
(bad)
push
out
mov
mov
cmc
cwde
stc
ds
push
std
rcr
ins
outs
mov
mov
sahf
jmp
xor
or
inc
mov
mov
mov
lahf
rcl
js
add
pop
push
in
retf
in
in
arpl
inc
mov
stc
cmp
push
dec
xchg
mov
push
mov
arpl
inc
jno
es
lods
repz
mov
nop
cdq
fs
in
cmp
ds
ror
and
addr16
cmps
jecxz
adc
test
in
in
test
mov
pop
retf
stc
inc
inc
arpl
xor
repz
shr
test
(bad)
out
xlat
pop
jns
test
add
cmp
outs
lock
mov
out
push
jb
ja
cmc
ins
or
mov
push
pop
shl
cwde
sahf
jbe
cmps
dec
push
mov
les
jae
shl
adc
push
mov
retf
xor
rol
cdq
and
bound
add
xor
repnz
jb
(bad)
push
mov
jae
and
cmp
inc
jns
mov
(bad)
pop
xchg
xchg
cmps
out
xor
and
sbb
test
les
jmp
pop
mov
sbb
adc
repnz
aad
stos
dec
xor
pusha
mov
rcl
hlt
das
sbb
imul
shl
int
je
pop
nop
imul
(bad)
pop
dec
jns
jp
fwait
mov
movs
xor
(bad)
fadd
fs
adc
adc
out
cmp
jno
mov
jg
jl
xor
xchg
ror
in
in
out
xchg
scas
jl
or
aam
and
xchg
sar
adc
lock
or
mov
fucomp
out
push
dec
(bad)
pop
or
loop
call
div
fs
cmp
jne
js
add
dec
add
xchg
and
inc
or
neg
cmp
jne
and
aad
or
push
sbb
clc
(bad)
cmps
daa
into
leave
jmp
pop
jnp
lods
or
jne
out
mov
mov
ret
fld
sub
in
pop
mov
int3
leave
adc
stc
mov
outs
cmp
mov
(bad)
in
pop
scas
inc
push
xlat
mov
iret
test
sbb
movs
jl
fdivr
xchg
outs
jecxz
adc
sub
loope
sub
outs
jnp
movs
addr16
pushf
jne
adc
addr16
out
push
imul
cmp
cdq
xchg
push
cmp
inc
loope
daa
push
sbb
sub
xor
out
and
test
mov
arpl
ss
cmp
inc
sub
iret
adc
jnp
div
inc
scas
mov
in
sub
mov
jbe
cmp
pushf
sub
std
stc
add
repnz
mov
fdiv
xchg
pop
pop
xchg
mov
int
fcmovbe
add
mov
push
xchg
ja
xchg
lods
inc
dec
mov
js
sub
clc
push
mov
cld
outs
test
sub
xor
out
mov
mov
sar
mov
ret
and
or
clc
outs
pop
pop
mov
mov
gs
outs
xlat
call
mov
lods
and
or
sbb
popf
stc
add
popa
popa
lea
frstor
rol
adc
xor
das
xchg
xor
repnz
sub
inc
je
stc
inc
cmp
(bad)
cli
push
fcom
push
pop
shr
add
fsub
int
jo
jno
xor
mov
cmp
test
dec
cmp
add
cmc
sub
lea
lods
adc
dec
sahf
jg
xor
lds
stc
bound
js
push
sbb
sar
pop
js
mov
mov
mov
cld
or
xchg
push
shl
sub
pop
xchg
in
xor
repz
sbb
shl
dec
cwde
sub
scas
xor
adc
ins
sub
popf
dec
dec
push
pusha
push
outs
pop
mov
push
xchg
add
cld
cmc
push
data16
mov
add
mov
sub
retf
add
add
rol
mov
dec
cmp
nop
mov
inc
mov
jle
adc
into
popf
neg
fimul
cmp
xor
xchg
xchg
pop
(bad)
adc
cmp
xchg
cmp
sti
sti
imul
ret
xchg
xchg
mov
scas
movs
sub
js
inc
pop
aaa
fild
shl
icebp
mov
iret
push
pop
push
pop
inc
rcl
or
adc
inc
pop
out
jnp
mov
aaa
cmp
mov
nop
xchg
cmp
pop
loope
out
jp
sub
leave
add
xchg
or
pop
shl
adc
pop
sub
jne
cmp
int
in
icebp
inc
inc
pop
add
mov
sbb
inc
in
push
mul
xor
jg
sub
les
das
cld
stos
adc
scas
out
cli
adc
mov
aaa
in
pop
mov
scas
(bad)
jbe
inc
mov
mov
iret
push
int3
mov
fldenv
(bad)
xchg
addr16
adc
(bad)
fnstsw
mov
add
in
xlat
and
mov
mov
and
jnp
adc
add
mov
lods
adc
test
imul
dec
scas
aad
jae
jge
jle
repz
and
jg
add
cmp
mov
cmp
cmc
xchg
sar
icebp
add
les
xchg
lea
xchg
cmps
sbb
scas
cmp
jle
cmc
inc
movs
test
xor
push
push
(bad)
lods
sar
jecxz
in
rcl
xchg
je
arpl
pop
jmp
mov
xor
jns
mov
fstp
fs
pop
in
push
inc
xor
pop
movs
into
pop
mov
aam
push
data16
xor
xor
(bad)
push
push
pop
xchg
imul
cmc
cmps
adc
mov
popf
and
out
sbb
fs
push
pop
push
pop
xor
add
sbb
xor
cwde
ja
mov
adc
hlt
arpl
imul
outs
adc
and
xchg
mov
add
pop
add
jp
or
mov
jg
mov
mov
push
mov
cli
rcr
das
ret
out
out
xchg
stos
and
sub
and
add
rcl
test
pand
mov
pop
jecxz
out
dec
cmc
cs
jge
addr16
ss
nop
into
fbstp
push
imul
or
idiv
mov
fwait
mov
jp
jecxz
retf
das
pop
cmps
sub
cmp
add
movs
das
pop
or
mov
out
repnz
test
inc
pop
cmc
mov
inc
add
adc
neg
push
or
cmps
push
cmp
mov
inc
cmp
out
dec
movs
xor
out
jo
dec
iret
adc
(bad)
aad
rcl
dec
push
test
push
xor
daa
outs
(bad)
push
pushf
mov
mul
add
test
sar
mov
sub
cmp
jo
scas
xor
(bad)
mov
lds
or
fwait
sbb
push
(bad)
inc
cmps
xlat
mov
sub
mov
shl
pop
sbb
ds
dec
das
push
leave
or
dec
sbb
scas
jne
jbe
repz
sti
clc
call
xchg
(bad)
outs
ret
xchg
mov
mov
adc
movs
fiadd
out
pusha
and
push
pop
imul
jnp
(bad)
inc
(bad)
scas
mov
mov
xor
add
pop
mov
inc
mov
mov
add
mov
or
jmp
lea
out
call
daa
sub
jb
mov
call
dec
or
push
mov
lods
aaa
inc
adc
fbld
dec
mov
test
pop
mov
loopne
into
jg
mov
xchg
int
dec
sahf
jmp
popa
mov
dec
mov
xor
cmp
add
adc
sbb
xchg
ds
mul
push
adc
dec
and
stc
mov
inc
mov
dec
out
mov
jmp
cs
mov
repz
and
mov
out
cdq
or
push
xlat
popf
out
dec
jb
(bad)
loop
ret
das
jmp
xchg
jne
cld
mov
inc
imul
jecxz
aas
add
scas
in
test
cmps
(bad)
cmp
mov
pushf
sub
mov
inc
pop
out
push
imul
enter
inc
stc
mov
push
xor
clc
es
bound
ficomp
push
push
ins
idiv
ins
mov
das
sbb
enter
mov
pop
dec
pop
test
mov
xor
inc
jb
shr
xchg
les
rcl
sub
sub
jl
(bad)
jl
sub
es
out
sahf
mov
mov
inc
loope
xchg
sahf
xor
sub
loopne
repz
call
mov
test
icebp
lods
sub
stc
inc
mov
cdq
iret
outs
addr16
cld
and
outs
loop
cwde
inc
je
iret
cmps
(bad)
in
fidivr
cli
xor
daa
shl
test
test
xchg
es
(bad)
jmp
adc
call
pop
and
mov
sub
lods
and
scas
xchg
xor
or
cmp
mov
outs
clts
xor
pop
out
push
frstor
mov
or
add
adc
std
ins
adc
movs
cs
inc
test
cwde
mov
dec
push
or
mov
inc
add
jg
inc
sbb
add
jmp
mov
push
clc
movs
loope
clc
pop
lods
test
jg
idiv
jmp
xchg
adc
push
push
add
ror
ret
(bad)
js
mov
push
sbb
dec
jge
(bad)
in
mov
and
pop
fnsave
ror
out
sub
cli
sar
sub
in
push
dec
push
das
mov
lods
imul
(bad)
pop
dec
stos
cmp
inc
cmp
adc
pop
add
dec
xchg
xchg
xor
shl
rol
ins
shr
jno
ss
xchg
sub
or
mov
jne
imul
outs
mov
sahf
mov
sti
retf
imul
mov
or
mov
push
retf
dec
pop
retf
ins
add
jo
mov
jl
ss
(bad)
or
(bad)
lock
js
xchg
push
fcomip
jmp
aam
mov
xchg
or
out
cmp
pop
mov
pop
pusha
daa
jmp
imul
arpl
mov
lods
mov
cmp
rcr
enter
jb
push
scas
jo
ja
add
and
std
xor
jp
mov
and
cmp
mov
xor
cdq
test
in
repnz
fld
aas
in
pop
add
mov
call
pop
xor
mov
mov
inc
addr16
movs
call
and
mov
rcl
cli
ins
inc
movs
addr16
sub
sar
das
or
mov
fisttp
xchg
cmps
sahf
fadd
cmp
int3
pop
pop
out
leave
cmps
xor
loop
cli
movs
pop
loope
int
ja
sub
xchg
div
add
mov
imul
imul
dec
daa
call
push
cmp
jmp
pop
or
push
xor
sbb
cmps
call
ins
add
xor
or
push
mov
xor
mov
out
inc
std
sbb
mov
out
push
movs
and
jg
xchg
out
and
hlt
xchg
mov
xchg
dec
mov
clc
and
call
rol
xchg
pop
dec
mov
mov
xchg
mov
scas
repz
mov
aam
pop
and
and
mov
aaa
pop
dec
xchg
xchg
call
(bad)
dec
rol
add
adc
dec
aaa
push
aaa
cmp
mov
xchg
out
push
sub
mov
pusha
pop
fld
ret
sub
movs
xor
push
in
and
daa
cmp
push
jnp
pusha
test
std
inc
test
xor
or
aaa
rcr
dec
movs
mov
adc
pushf
sbb
cmp
sti
push
push
inc
fbstp
sar
repz
jp
adc
mov
pushf
mov
mov
mov
dec
les
in
cli
div
out
push
sub
jmp
mov
sbb
mov
imul
pusha
or
add
outs
mov
add
ss
inc
mov
pop
(bad)
cmp
mov
scas
test
test
fadd
xchg
mov
scas
popaw
sti
dec
xchg
cs
mov
hlt
mov
icebp
out
adc
imul
pop
test
mov
inc
mov
xchg
jbe
scas
stc
cmc
or
loope
inc
out
mov
aaa
adc
adc
fdivr
sahf
fsub
fs
or
je
cmp
and
jmp
pop
and
inc
cs
mov
in
(bad)
(bad)
out
aam
aam
fstp
clc
push
adc
cmc
mov
(bad)
adc
jp
inc
sbb
push
sbb
jge
sbb
mov
push
add
in
popf
dec
popa
cwde
sbb
leave
sub
mov
push
ja
mov
add
xchg
sub
mov
test
mov
dec
sub
mov
mov
pusha
imul
or
jp
sub
and
push
add
(bad)
je
and
xor
rcr
and
cld
mov
inc
cmp
mov
int
pop
and
dec
call
add
push
jge
(bad)
(bad)
(bad)
fidiv
lock
xchg
add
or
cs
lea
mov
movs
popa
int3
dec
data16
mov
add
add
retf
ret
fisttp
fsubp
jbe
inc
shl
loop
je
sbb
xor
or
or
jle
inc
dec
jno
add
pop
scas
xchg
mov
fidiv
or
(bad)
xchg
mov
mov
inc
mov
inc
ss
popf
in
std
int
cs
xchg
cs
inc
in
mov
sbb
or
pusha
cmps
xor
mov
inc
aaa
xchg
cmp
rol
cmc
repz
fisttp
(bad)
jno
clc
hlt
call
loopne
and
mov
and
cmp
call
mov
in
test
adc
or
packsswb
daa
xchg
sub
xor
ret
add
xchg
or
pop
daa
daa
ret
pop
push
mov
popa
loop
(bad)
daa
hlt
mov
or
push
mov
pop
dec
adc
fs
push
xlat
pop
jle
mov
addr16
dec
push
mov
aaa
xchg
lds
ins
adc
mov
push
int3
mov
cwde
popa
repnz
xchg
pop
inc
imul
out
sbb
mov
rcl
push
pop
arpl
sub
jae
clc
ins
push
nop
fsub
sub
icebp
xlat
aad
sub
adc
or
xor
jb
shl
push
int3
ficom
mov
mov
lods
pushf
jp
sbb
arpl
(bad)
test
mov
retf
xchg
into
pop
add
fsubr
inc
inc
popa
repz
out
xchg
cmps
into
inc
out
adc
adc
loop
xchg
ret
test
adc
pop
je
inc
pop
mov
add
push
rcl
ficomp
mov
cli
ret
dec
pop
adc
sub
dec
cdq
pusha
(bad)
fst
add
add
out
or
sbb
mov
jns
pop
pop
neg
aad
jo
aaa
call
add
movs
mov
shl
xor
lahf
or
cmp
es
push
rcr
fcmovne
push
inc
pop
sub
in
pop
adc
ror
push
fadd
sub
sub
cdq
(bad)
xor
push
out
push
or
pop
pop
xor
push
mov
rcl
add
sub
test
or
jmp
pop
(bad)
mov
out
out
mov
pop
ds
xchg
icebp
loopne
dec
sar
and
xchg
xchg
and
mov
cdq
inc
ins
sbb
cld
shr
in
adc
lock
xor
dec
or
adc
mov
aaa
jle
mov
xchg
push
sbb
int
fadd
loopne
or
jnp
sbb
adc
jge
dec
rcr
(bad)
pop
int
sbb
cld
fiadd
in
or
call
push
mov
sub
mov
out
adc
cli
pop
fsub
mov
inc
push
outs
xchg
jo
push
xor
sub
adc
push
jns
aam
sar
cmps
idiv
in
popf
add
leave
cld
push
xchg
fadd
mov
or
mov
pop
sub
add
ins
or
cmp
das
pop
into
xor
cwde
int
xor
aaa
dec
movs
push
mov
cmc
pop
iret
pop
loope
in
mov
cmp
mov
jbe
ret
xchg
sbb
pop
push
fadd
(bad)
outs
lds
ret
add
stos
cmp
cmp
jge
push
stos
in
bound
das
jecxz
adc
lods
jle
es
clc
fsubr
out
retf
test
and
arpl
sub
mov
cmp
and
push
xchg
imul
or
dec
jmp
imul
jl
mov
dec
cmps
xchg
mov
inc
arpl
sbb
pop
jae
jo
mov
fisubr
jle
(bad)
xchg
add
cmp
iret
sub
and
sub
daa
and
(bad)
dec
inc
cmps
int
into
mov
push
push
aam
adc
and
mov
or
fwait
cmps
inc
jmp
and
les
shl
(bad)
sahf
pushf
mov
xchg
das
retf
pop
addr16
repz
mov
cmp
cmp
mov
fld
inc
ins
xchg
jae
in
bound
sahf
mov
xor
add
cmps
cs
mov
or
sub
stos
xor
shl
ins
mov
mov
test
jl
mov
sbb
cmp
add
add
test
mov
mov
mov
int3
inc
jo
das
es
push
into
int3
stos
and
lods
dec
sub
lds
cmps
aam
push
push
xor
std
ret
aam
mov
xchg
jl
ds
mov
rol
fs
clc
dec
inc
sub
mov
sbb
push
popa
mov
ss
dec
out
loop
jbe
nop
push
cdq
mov
push
xor
xor
ret
inc
inc
or
ss
imul
inc
leave
mov
pop
lea
movntps
iret
fcmovne
and
xchg
loopne
sbb
xor
mov
test
or
jnp
fucomp
and
jo
push
adc
test
sahf
bnd
inc
add
add
ss
arpl
imul
mov
add
dec
dec
adc
ret
jbe
shr
jg
xchg
lods
shl
and
popf
pop
fnstcw
int
inc
jp
dec
or
imul
scas
xchg
jnp
jns
dec
mov
aam
sub
and
push
fisub
push
and
js
mov
loopne
mov
or
rol
dec
scas
call
mov
movs
and
dec
leave
fidivr
mov
adc
xor
push
mov
pop
inc
mov
cwde
pop
retf
dec
cmc
adc
mov
loop
es
aas
and
icebp
das
ds
les
retf
gs
sbb
xor
sub
loopne
les
mov
sbb
xor
jg
ret
bound
(bad)
cmp
push
cmp
aas
xchg
out
mov
and
fwait
push
pusha
neg
mov
inc
loope
pop
mov
call
push
jo
cwde
add
ins
pop
xor
rcr
out
push
sub
loopne
adc
repz
jno
xor
sub
fcomp
jmp
push
retf
loope
xor
or
cs
(bad)
(bad)
(bad)
ficomp
mov
mov
inc
jb
sti
mov
(bad)
(bad)
sub
xlat
mov
pop
mov
jbe
sbb
frstor
or
fmul
cmp
sbb
jecxz
daa
sbb
add
nop
lods
push
adc
hlt
jge
pop
mov
lds
xchg
jno
shr
pop
adc
or
pop
in
pop
jmp
or
sub
xor
cmp
div
gs
jb
xchg
jg
xchg
dec
jmp
inc
cmp
mov
add
ins
xchg
mov
push
mov
in
outs
cmp
mov
call
jecxz
inc
ss
jmp
push
push
cmps
sti
pop
test
sub
(bad)
out
push
dec
ss
push
adc
fdiv
test
mov
stos
pop
jns
sbb
inc
loopne
(bad)
dec
js
push
in
and
xor
movs
mov
nop
inc
push
xchg
cli
sub
or
jnp
sub
test
rcl
pop
arpl
and
push
xlat
shl
hlt
mov
pop
aas
inc
in
imul
sbb
mov
mov
sub
sub
push
sbb
push
pop
and
inc
xchg
mov
outs
sub
xor
rcr
loope
int
fadd
aad
jg
das
push
test
int
lods
dec
popf
ins
mov
inc
xor
cmp
jmp
sub
xchg
adc
fwait
adc
(bad)
jmp
mov
je
push
ins
push
hlt
out
inc
in
push
push
fs
adc
stos
aad
cmp
lea
push
call
mov
and
int
into
xchg
nop
and
ror
ja
and
fnstsw
(bad)
jmp
push
test
sbb
jecxz
or
mov
or
stos
jge
(bad)
movs
xchg
push
pop
inc
daa
stc
or
push
and
aas
pop
cmp
outs
mov
cmc
js
bound
jo
test
dec
jmp
xor
popf
ret
fidivr
inc
jnp
jl
xchg
cmp
inc
mov
call
mov
mov
lahf
dec
inc
lods
cmp
loope
(bad)
fadd
js
mov
mov
jne
out
ja
inc
adc
int
lds
clc
out
loop
loop
xchg
xchg
out
mov
xor
push
mov
cmc
dec
nop
add
in
mov
and
pop
sub
xor
(bad)
mov
or
les
inc
lds
outs
test
dec
push
cld
jae
ror
push
ret
pop
jne
movs
pop
pop
into
push
sahf
add
ror
jg
jb
sbb
fwait
movs
mov
cld
(bad)
adc
sub
and
mov
hlt
shr
aaa
ret
jge
xchg
fsubr
(bad)
and
mov
sti
cli
in
(bad)
in
xchg
mov
or
leave
mov
push
scas
mov
hlt
jmp
fidiv
mov
and
xchg
sub
adc
movs
or
outs
push
in
add
mov
push
mov
jge
mov
jg
xchg
dec
sbb
add
and
mov
dec
outs
push
mov
dec
ins
cmp
add
adc
fbstp
inc
in
mov
int
adc
rol
lods
mov
xor
jl
mov
xor
fs
xchg
sahf
enter
dec
inc
scas
mov
movs
movs
lock
xor
adc
pop
pop
fmul
xchg
mov
add
fwait
sub
cmp
xchg
imul
das
aam
dec
ret
mov
mov
xor
push
stos
aam
std
dec
ss
jmp
ins
popa
push
retf
in
xor
retf
rcl
cmp
aaa
or
dec
xor
fdiv
aam
dec
inc
shl
pop
fxch
pop
cwde
and
xchg
add
mov
sahf
test
add
sub
push
frstor
icebp
jmp
fmul
mov
and
sahf
sbb
inc
jo
cmc
or
movs
mov
mov
dec
jle
gs
(bad)
aas
mov
movs
xor
jb
mov
cmps
js
jmp
(bad)
stos
je
xchg
dec
retf
inc
mov
jge
dec
loop
or
push
pusha
sbb
(bad)
mov
(bad)
mov
mov
mov
fistp
stos
mov
outs
xor
sbb
(bad)
or
xchg
add
int
dec
add
inc
imul
repz
jnp
xchg
(bad)
(bad)
sub
pop
sub
das
ret
and
or
or
mov
and
jns
repnz
inc
mov
out
mov
fmul
inc
sub
sahf
inc
or
js
mov
push
and
jecxz
retf
imul
xchg
shl
repz
aas
repnz
repz
cwde
repz
scas
out
push
in
xchg
call
lds
call
sbb
fstp
test
sbb
sbb
mov
ror
movs
pop
clc
in
sbb
sar
stos
add
mov
mov
int3
mov
(bad)
xor
inc
jge
pop
movs
stos
inc
shl
ret
arpl
jno
mov
out
pop
fisubr
push
call
enter
push
rol
hlt
out
mov
dec
in
lods
cld
fcomp
dec
push
ins
xchg
sub
add
cmp
xor
out
push
or
imul
es
fdiv
mov
cmps
sbb
xchg
fsub
les
les
cli
mov
std
jmp
test
inc
fstp
int3
mov
xchg
jno
leave
adc
popf
enter
add
sahf
retf
and
fcmovu
ins
lods
jns
ror
hlt
test
cmp
jecxz
xlat
icebp
adc
(bad)
lods
out
fneni(8087
cmp
(bad)
gs
scas
inc
bound
and
sbb
ret
jnp
add
fdiv
add
push
fmul
fnstsw
mov
nop
jnp
fwait
gs
push
shl
mov
jns
lock
addr16
dec
inc
adc
lock
push
cmp
bnd
pop
cmp
imul
sub
mov
jl
ret
xor
push
jge
das
loope
cdq
test
pushf
dec
gs
(bad)
ins
popa
mov
jmp
jmp
pushf
hlt
add
(bad)
sbb
fist
or
hlt
in
in
cdq
pop
cdq
popa
mov
in
dec
data16
stos
outs
lods
ins
test
repnz
fmul
push
xor
(bad)
frndint
lods
int3
sbb
pop
outs
fsub
(bad)
fstp
xchg
stos
add
imul
cmp
or
loop
jno
fs
hlt
inc
push
lds
pushaw
fdivrp
nop
pop
lds
add
cdq
jae
retf
mov
jae
pop
inc
addr16
loop
sbb
in
and
sti
pop
push
test
inc
pop
in
or
pop
inc
mov
mov
int
movs
dec
jg
(bad)
pop
aad
ins
xchg
mov
sub
pop
clc
sbb
out
dec
imul
inc
mov
scas
dec
es
inc
call
push
sub
mov
call
or
aaa
dec
retf
adc
movs
add
mov
xchg
ret
xor
pop
daa
add
inc
add
test
mov
mov
xchg
add
push
ud0
or
jae
cmp
je
jnp
adc
aas
fcmovnbe
mov
mov
movs
add
jo
mov
fsubr
(bad)
ret
(bad)
sti
ins
fs
cmps
inc
push
sub
out
mov
xor
mov
add
xor
ret
popa
jmp
pop
enter
outs
push
mov
dec
ins
pop
dec
jne
and
adc
add
rol
mov
ds
mov
sub
jl
retf
xor
aam
jecxz
(bad)
or
xor
sbb
mov
push
inc
mov
test
shl
jnp
es
pop
mov
adc
cmc
and
js
inc
sub
popa
jl
cli
jmp
sbb
retf
dec
add
jl
jnp
or
adc
cli
add
std
mov
add
int
mov
mov
inc
push
or
bound
mov
imul
mov
mov
xchg
adc
push
out
pop
dec
jmp
leave
std
and
xor
adc
inc
pop
dec
or
cmps
rcr
scas
pop
or
lods
and
dec
push
(bad)
fwait
aam
loope
ins
es
jge
lahf
xchg
push
or
repnz
loopne
out
je
out
adc
and
out
mov
xor
hlt
add
enter
fst
ins
push
xchg
in
ja
popf
(bad)
mov
jne
push
out
std
adc
in
add
pop
fisub
mov
lds
scas
or
mov
inc
daa
jne
mov
mov
add
sbb
push
cmp
mov
loopne
jge
mov
lds
ja
dec
fisub
adc
push
pop
loop
mul
inc
js
adc
add
movs
in
call
pmulhuw
inc
outs
clc
int
add
push
hlt
mov
ins
or
add
or
(bad)
push
pop
jnp
loop
ret
push
(bad)
icebp
jnp
and
cmp
or
mov
pop
cmp
mov
repz
dec
call
aad
ins
std
pop
mov
mov
lods
sub
ds
in
fwait
ins
ins
dec
lds
and
popf
and
in
rol
inc
pop
icebp
xor
pop
imul
daa
rcr
ss
push
or
push
mov
dec
cwde
dec
mov
inc
mov
inc
ins
cmp
cmps
jp
add
jbe
jecxz
dec
inc
jns
mov
in
inc
sub
adc
adc
jl
scas
inc
popf
xchg
jge
add
adc
push
mov
pop
int3
mov
and
clc
cmps
xchg
adc
cld
mov
mov
mov
loop
test
aaa
inc
and
jae
inc
xchg
(bad)
mov
bound
arpl
sbb
dec
add
mov
jne
js
add
retf
pop
or
out
dec
stos
(bad)
int3
xor
cmps
fstp
(bad)
cmps
ja
push
icebp
dec
fdivp
movs
std
or
inc
sub
rol
movs
mov
iret
push
mov
clc
xchg
ins
movs
out
and
mov
mov
mov
stos
xchg
jno
cmps
shl
das
mul
push
jns
retf
imul
in
cmc
xchg
lods
adc
xchg
and
stos
fsubr
dec
pop
idiv
(bad)
ficom
in
mov
cmp
into
jmp
xchg
ficomp
popf
push
add
mov
(bad)
cmc
add
add
cmp
outs
push
rol
sbb
cmp
xchg
jge
push
jle
mov
out
push
movs
inc
jmp
push
in
ins
in
in
xchg
mov
inc
jno
push
loop
enter
add
push
retf
jne
into
div
jo
ins
pop
adc
pop
popf
or
fdiv
jo
inc
out
loope
movs
fs
sbb
popa
es
jmp
sub
xchg
imul
add
or
mov
ror
in
lds
mov
mov
sub
outs
cmp
ficom
sti
adc
push
jge
cmp
xor
iret
scas
test
adc
mov
push
fwait
cmp
aad
dec
enter
and
mov
in
dec
lea
call
pop
nop
pop
ss
shl
ins
push
out
js
push
(bad)
imul
cwde
xor
jl
and
dec
push
cmp
rol
sbb
cmp
dec
es
loopne
cwde
and
mov
scas
or
hlt
mov
call
ret
adc
test
dec
add
push
psubw
or
xchg
sub
inc
jecxz
(bad)
pop
xor
mov
add
pop
aaa
pushf
addr16
push
cmp
xchg
shr
cmp
loope
jmp
mov
repz
cmp
out
punpckldq
adc
push
pop
(bad)
arpl
imul
jg
adc
sti
add
mov
sar
out
push
(bad)
das
pushf
addr16
jle
cmp
dec
jg
int3
jge
xchg
push
jecxz
sar
scas
and
mov
outs
xor
or
into
test
sub
test
mov
mov
fiadd
jmp
push
xor
adc
and
mov
stc
or
ins
mov
adc
(bad)
sbb
jmp
mov
sub
imul
and
(bad)
pop
pop
inc
add
mov
xchg
jmp
mov
div
data16
push
pop
jmp
mov
(bad)
cmc
xor
mov
dec
and
inc
dec
sub
pop
nop
inc
mov
cmp
add
aam
frstor
clc
xchg
mov
fdiv
in
and
imul
test
rcr
stc
push
push
lock
retf
test
and
shr
adc
cmps
pop
repnz
in
mov
mov
adc
retf
sar
fnstsw
mov
inc
cdq
mov
push
adc
ja
xor
or
nop
data16
les
out
dec
sub
mov
cmps
dec
ds
sub
leave
xor
int3
pushw
inc
stos
rol
sbb
push
jne
daa
mov
dec
xchg
shl
mov
(bad)
sbb
out
xlat
mov
daa
xchg
movs
neg
xor
call
and
lea
jmp
and
(bad)
rcr
inc
mov
inc
mov
stc
push
push
sahf
add
xor
dec
push
mov
sbb
and
mov
out
inc
(bad)
fiadd
ds
inc
dec
jae
sub
(bad)
jmp
add
ficomp
in
inc
push
sbb
xchg
inc
cli
mov
cmp
push
idiv
mov
jnp
jecxz
mov
add
mov
in
lahf
and
pop
out
shl
les
enter
add
mov
jmp
bound
jmp
ror
dec
pop
jecxz
jp
xor
fist
cmps
mov
data16
push
test
hlt
mov
int
enter
push
retf
pop
in
mov
clc
adc
jg
pop
ret
les
sub
sar
cmp
jnp
or
mov
mov
(bad)
je
stos
jle
js
jmp
sub
scas
jp
clc
mov
pop
loope
enter
das
data16
(bad)
pop
fmul
push
ret
pop
pop
or
fwait
sti
dec
inc
or
out
aaa
sub
not
mov
fcomp
pop
dec
sub
and
test
mov
mov
and
mov
fisttp
adc
xchg
pop
sahf
xor
sbb
pusha
xchg
rcl
sbb
cmp
sbb
fist
xor
aam
pop
inc
cs
cmc
sub
xchg
pop
or
xchg
daa
es
push
lock
mov
hlt
inc
xlat
mov
push
(bad)
repz
sbb
retf
mov
nop
and
jns
fwait
push
sbb
popa
clc
jo
xchg
dec
lock
mov
mov
mov
sub
mov
icebp
adc
jmp
ret
adc
div
xchg
mov
es
push
jp
push
fmul
mov
mov
jl
or
sub
pop
pop
pop
out
call
(bad)
daa
lods
loop
mov
mov
ret
sub
xor
in
jmp
pusha
xor
in
jo
movs
in
in
loope
xor
xor
mov
sub
xchg
enter
sub
push
dec
mov
inc
ror
les
fisttp
call
sahf
and
jle
mov
ret
je
mov
add
jb
mov
inc
dec
cld
mov
sti
js
mov
push
fldenv
icebp
stos
das
bnd
cmps
js
cmp
mov
cmps
xor
xor
jmp
inc
sub
movs
ds
out
in
push
mov
xor
inc
jp
mov
jecxz
mov
es
arpl
jle
sub
cmps
push
lods
cmp
xchg
ror
addr16
push
jb
mov
lahf
in
ret
cmc
push
xchg
fsincos
clc
xchg
and
enter
push
add
in
mov
stos
sub
xor
movs
scas
ret
mov
ss
outs
push
dec
test
fwait
loop
cwde
inc
cmp
lock
mov
adc
and
jne
sbb
sbb
add
leave
dec
aad
adc
ins
jmp
cs
push
mov
mov
inc
in
xor
or
scas
outs
push
pop
loope
pushf
cmp
xor
test
push
movs
lahf
push
hlt
cdq
aas
cwde
jge
enter
xchg
pop
mov
outs
sbb
mov
ror
movs
xor
shl
xchg
fnstcw
inc
fistp
mov
pop
jnp
fdiv
inc
iret
jnp
cdq
mov
lods
cmp
dec
push
push
inc
pop
add
sub
pop
xchg
dec
push
add
gs
and
push
and
pop
add
fwait
or
pop
or
jns
ss
lock
pop
dec
add
test
pop
xchg
test
fsubr
mov
js
xchg
aad
test
ret
ss
pop
adc
cmps
add
ret
mov
idiv
loope
push
or
aaa
pushf
sub
mov
scas
xchg
fs
and
add
mov
sub
(bad)
jnp
ficom
mov
xor
mov
xlat
add
inc
xchg
xor
js
jno
jecxz
mov
sub
popf
inc
stos
xchg
mov
aas
mov
xchg
aaa
xor
pop
sar
test
fcom
mov
(bad)
mov
jmp
(bad)
call
push
mov
daa
jbe
mov
pop
in
pop
outs
les
lock
lahf
cmp
setb
das
iret
fs
dec
push
imul
xor
sub
or
add
(bad)
adc
dec
arpl
add
enter
sti
and
test
sub
push
adc
xchg
ja
retf
arpl
ins
ret
test
cld
and
enter
shl
clc
int
call
jne
repnz
cdq
in
dec
ret
aaa
pop
pop
iret
pop
nop
(bad)
xchg
add
sbb
mov
sub
and
jg
sbb
push
or
cmp
pop
ds
lods
rol
scas
push
xchg
in
add
movs
xor
jle
push
pop
mov
and
push
add
pop
add
or
imul
adc
and
mov
pop
xchg
in
mov
push
inc
push
sbb
adc
ficom
mov
pop
jnp
and
hlt
xor
ins
leave
stos
push
add
xor
gs
adc
cmp
stc
dec
sahf
test
xchg
sub
fbld
std
test
push
pusha
scas
or
and
dec
imul
movs
iret
cmp
and
and
stc
in
sbb
cdq
in
(bad)
push
add
push
xor
daa
gs
daa
push
mov
mov
lods
mov
pop
aas
(bad)
pop
inc
pop
shr
(bad)
(bad)
iret
repnz
sbb
pop
mov
jp
daa
loop
pop
push
shl
(bad)
(bad)
mov
pushf
jne
shl
in
aam
jnp
popa
int3
rol
xor
push
sbb
or
inc
fcomp
mov
ja
inc
std
xchg
and
mov
cmps
push
test
inc
push
lahf
ins
mov
fistp
in
sub
es
inc
int3
or
dec
sbb
ins
enter
cmp
mov
pop
arpl
test
repz
jg
cli
addr16
fsub
int
or
repz
jb
gs
and
pop
xor
clc
int3
iret
retf
lahf
repnz
jb
fwait
or
lods
fiadd
rcl
add
call
sub
pop
test
outs
xchg
jl
adc
pusha
mov
lock
sub
add
cmp
xor
daa
pushf
xlat
mul
iret
les
or
lods
jle
pushf
jb
cmc
push
xchg
inc
int3
movs
repnz
loope
ffree
cli
mov
test
int
repz
in
mov
retf
or
pop
scas
js
lods
and
cmp
or
cmps
ret
mov
or
jg
cdq
cmp
add
adc
test
test
push
xor
xor
pop
(bad)
test
mov
sub
jmp
jp
cli
ja
mov
pop
out
popf
xchg
inc
lods
jae
xchg
push
jmp
fisubr
xchg
inc
leave
loope
sub
mov
cs
dec
je
push
jmp
les
cmp
jo
xchg
int
push
(bad)
sbb
std
pushf
loope
outs
fstp
lds
jmp
dec
int
out
sbb
les
sbb
sbb
xchg
je
stc
push
inc
sbb
fiadd
and
xor
pusha
dec
cmc
dec
pop
xor
retf
daa
and
cld
jns
and
fmul
popa
pusha
imul
lahf
cmc
mov
in
lea
call
mov
add
add
pop
ffree
fs
movs
shl
cmc
in
pop
rol
rcl
mov
mov
pop
outs
(bad)
fsub
ror
push
dec
xchg
sbb
fs
jo
push
mov
mov
push
and
mov
sub
cmp
lock
cs
test
pop
sub
dec
inc
loopne
sbb
jo
xor
lods
sub
call
int
data16
imul
inc
shl
inc
out
mov
int
stos
lea
clc
xor
push
je
adc
push
outs
loop
inc
fnstcw
gs
jecxz
push
or
lds
sub
in
cmp
push
xor
jb
lds
adc
push
mov
dec
daa
stos
and
xor
pop
loopne
xchg
mov
xlat
pushf
das
cmp
imul
jg
mov
push
scas
imul
mov
mov
lahf
je
mov
or
cs
mov
fadd
scas
hlt
(bad)
push
shl
and
jl
rol
xor
pop
sub
movs
les
dec
dec
jp
adc
adc
lods
xor
jns
sub
sbb
mul
out
fstp
not
jno
fcom
add
mov
mov
push
(bad)
jae
jae
cli
mov
shl
lods
pop
ds
arpl
inc
inc
mov
fmul
pop
pop
mov
push
pop
dec
jle
imul
inc
lahf
fsubr
js
and
in
fstp
hlt
jmp
inc
mov
aad
lea
jle
mov
repnz
hlt
and
or
push
fadd
pusha
xchg
mov
movntq
xchg
std
pop
add
mov
xor
(bad)
call
popf
call
jo
xchg
dec
adc
inc
pop
int3
loopne
xlat
loop
sbb
inc
sahf
sbb
mov
(bad)
inc
jge
mov
movs
fcmovu
dec
jge
pop
cmc
jae
sar
and
inc
mov
push
cli
push
and
pop
mov
repz
call
xchg
or
repnz
cs
push
aam
or
mov
xchg
out
or
int3
loopne
cmps
repz
inc
(bad)
jno
ror
mov
pop
xlat
mov
fsubr
out
into
inc
test
and
fcom
jmp
sbb
mov
jns
sub
pop
mov
sar
and
adc
fstp
aam
std
dec
sub
arpl
popf
pop
push
hlt
sub
pop
ret
data16
repz
inc
movs
sbb
sub
hlt
out
jne
sbb
call
jns
inc
push
add
sti
out
das
xchg
std
js
mov
daa
sub
ror
ins
mov
cmp
enter
loopne
adc
lds
sub
in
sub
leave
jl
in
xor
dec
test
sbb
mov
out
add
jmp
and
inc
dec
mov
cld
mov
mov
addr16
mov
sub
lods
(bad)
gs
and
nop
jg
sub
pusha
das
ins
push
sbb
sub
jl
stc
xor
dec
pop
push
pop
push
fs
add
ss
das
hlt
xchg
fistp
movs
dec
cmp
hlt
mov
push
arpl
fiadd
std
outs
sar
jmp
inc
movs
lods
sub
adc
mov
pop
push
push
les
jbe
jl
cmc
add
out
out
mov
repnz
cli
adc
push
cmc
ret
adc
loop
icebp
adc
retf
cmp
add
mov
inc
mov
cmp
vpcmpgtb
mov
outs
pop
push
sbb
push
pushf
scas
lock
or
inc
mov
or
out
das
lods
fwait
lods
std
mov
rol
sbb
in
sbb
int
ss
mov
icebp
mov
aam
inc
sbb
scas
sbb
sbb
jmp
call
arpl
repz
mov
sub
xchg
out
sahf
data16
(bad)
mov
inc
mov
jmp
mov
pop
xchg
movs
popa
pusha
mov
cmp
cmps
xchg
push
out
xchg
movs
imul
es
movs
unpcklps
xchg
test
cmc
je
xchg
xor
(bad)
xlat
pop
lahf
pop
les
les
test
push
jb
hlt
xchg
mov
lock
add
inc
cld
push
or
enter
xchg
sub
or
mov
mov
imul
fwait
pop
pop
lea
pop
push
add
mov
adc
mov
mov
xor
(bad)
dec
leave
push
pop
aaa
mov
sbb
into
cs
or
inc
pusha
es
cld
xor
stc
push
mov
addr16
cmp
mov
call
dec
adc
pop
movzx
cli
icebp
shr
cmps
ret
mov
hlt
sub
dec
jmp
nop
sbb
ror
pop
shl
xor
sub
scas
dec
and
lahf
cli
out
call
in
dec
ins
pop
iret
pop
and
push
adc
add
(bad)
adc
mul
(bad)
int3
jbe
mov
pop
jmp
lods
jno
or
outs
inc
mov
pushf
mov
mov
sub
(bad)
in
sbb
sub
outs
shl
push
ficomp
sbb
add
(bad)
scas
dec
ret
aas
std
and
fstp
xchg
jmp
push
add
int
movs
ret
nop
scas
jo
dec
xchg
dec
out
mov
inc
rcr
(bad)
push
rcr
retf
push
lock
pop
repz
mov
in
lds
popa
add
daa
mov
ds
adc
adc
outs
(bad)
gs
sub
inc
inc
xchg
enter
xchg
sub
jns
movs
aaa
jo
shl
loope
test
cmp
sub
jns
enter
lds
lods
popa
xor
cwde
dec
les
into
movs
pop
(bad)
and
(bad)
into
iret
fs
cmp
mov
fist
cs
mov
dec
mov
mov
pusha
and
repz
mov
sub
test
xor
retf
sbb
sahf
out
mov
jmp
clc
push
mov
and
inc
jmp
adc
lods
fs
jecxz
jg
stos
jl
fidiv
dec
pop
add
sbb
xor
cmp
mov
out
mov
xor
mov
outs
enter
or
iret
mov
in
ins
push
psubd
adc
idiv
inc
xor
sub
sbb
aad
jle
cmc
xchg
lds
or
mov
jge
(bad)
pop
and
xchg
mov
jno
xchg
loop
jnp
adc
(bad)
or
and
int3
imul
jmp
lods
mov
xchg
jecxz
nop
es
jp
dec
inc
cli
mov
aas
ficom
or
xchg
mov
xor
mov
shr
es
adc
jne
push
jne
imul
loope
mov
and
je
push
jae
arpl
in
jmp
pop
jl
mov
push
test
xor
into
jl
div
dec
std
push
in
outs
out
cmps
dec
cs
(bad)
dec
xchg
mov
mov
add
aam
push
push
and
fimul
out
xchg
jne
test
push
dec
sbb
add
lock
push
mov
popf
or
and
xchg
call
popf
imul
inc
pop
jle
add
mov
adc
mov
cmc
fnstcw
gs
iret
repz
aad
xchg
pop
pop
push
fninit
mov
add
jecxz
shr
xor
sbb
mov
xor
cdq
sub
rcr
or
not
sub
and
push
rol
(bad)
popa
xor
arpl
or
cmp
in
pop
scas
mov
stc
and
test
stos
in
inc
pop
mov
dec
sahf
stos
int
ds
daa
movs
sti
jnp
cmp
xlat
ficomp
inc
movs
xor
outs
aad
lahf
das
lods
xchg
jge
aas
arpl
lahf
cmc
aaa
and
fnsave
retf
arpl
and
(bad)
stc
cmp
push
outs
fidivr
cmps
xchg
mov
int3
inc
stos
jae
push
or
pop
push
pop
cmp
inc
xchg
nop
pusha
or
pop
or
jb
ror
imul
dec
push
dec
mov
add
push
dec
push
push
mov
dec
or
mov
pop
sbb
icebp
mov
mov
popa
dec
dec
scas
or
xor
push
ficom
cdq
(bad)
loopne
dec
xchg
mov
sbb
aaa
hlt
push
sub
scas
adc
cmp
adc
mov
aaa
adc
and
pop
or
subps
and
mov
lods
cwde
pop
dec
push
daa
or
repnz
jmp
out
in
and
push
outs
pusha
mov
sbb
hlt
je
cmps
sub
rcr
cdq
imul
cmps
jle
xor
cdq
cli
std
pop
sbb
adc
leave
dec
dec
and
mov
scas
pop
in
arpl
or
mov
ret
sub
add
pop
push
aam
int
push
cmp
std
ins
int3
leave
jae
dec
jmp
cmps
cmc
call
aas
cmp
gs
shr
pop
inc
and
popa
rcl
mov
pop
or
fadd
imul
jg
inc
in
and
int
faddp
pop
imul
lock
movs
jl
push
pop
jge
mov
daa
push
mov
inc
(bad)
repz
(bad)
pop
pop
ret
gs
push
push
sub
stos
and
shr
sub
clc
(bad)
int3
cmp
jbe
mov
sub
fnstsw
push
adc
fwait
nop
jle
sub
(bad)
push
mov
popfw
jl
jl
cli
sbb
aas
push
(bad)
rol
jle
push
mul
ucomiss
pop
jnp
push
bound
jp
mov
and
jbe
mov
mov
xor
jne
sbb
rcr
cmp
dec
ins
shr
jno
fwait
jnp
sar
cdq
int
test
repz
mov
xchg
lock
pop
adc
dec
outs
push
cs
jecxz
in
jmp
jns
fwait
jl
loopne
adc
dec
mov
lea
mov
es
mov
sbb
and
adc
fisubr
std
ss
pusha
addr16
mov
jle
or
inc
scas
(bad)
jo
fimul
pop
xor
scas
inc
imul
lock
ds
rol
add
cmp
cwde
push
or
je
ficomp
in
jp
and
jmp
mov
push
sub
fist
xchg
enter
jecxz
imul
and
and
mov
jns
popf
xchg
mov
ret
ds
stos
inc
inc
pop
pop
xchg
mov
push
or
or
inc
fsub
push
xchg
cld
mov
jae
mov
sbb
nop
dec
jl
in
out
test
repnz
push
dec
mov
fcmovnbe
pop
imul
(bad)
cmp
or
jno
push
mov
sub
clc
lods
(bad)
and
cmps
mov
sbb
cmp
sub
aam
fiadd
inc
jne
daa
adc
mov
retf
pop
icebp
stos
sub
outs
xchg
push
(bad)
loopne
dec
cmp
xchg
loope
pop
test
cwde
fst
add
mov
jo
push
fisubr
je
inc
sbb
pop
xchg
aam
aas
xchg
ror
adc
xor
mov
or
xchg
call
inc
ins
xchg
mov
jecxz
pop
ins
and
adc
sbb
inc
cmps
xor
int
bound
shl
and
pop
lods
and
jns
pop
out
stos
shr
sub
imul
test
call
mov
cmp
movs
lods
jmp
inc
into
(bad)
sub
cmp
pop
push
xchg
sub
dec
pop
sub
or
mov
popf
or
mov
push
addr16
bnd
jle
movs
add
push
stos
cs
pop
add
add
sbb
and
pop
dec
pop
add
stc
js
gs
inc
add
jg
int
lahf
sahf
push
loop
movs
pop
ds
dec
adc
in
jmp
push
mov
cmps
fidiv
and
mov
cdq
jb
jnp
jb
add
inc
inc
loop
mov
outs
in
xchg
stos
lea
mov
js
out
scas
add
xor
mov
loopne
sbb
sub
xchg
mov
jbe
lods
sahf
in
adc
and
gs
push
cmp
mov
dec
pop
lock
call
push
loope
lock
and
cmp
and
pop
loopne
clc
(bad)
repz
sbb
aam
jmp
sbb
add
cdq
mov
jmp
sub
imul
pop
fdiv
test
push
repz
int
shr
sbb
mov
pop
cmp
push
aad
push
xchg
pop
jecxz
sbb
jnp
out
loop
fbstp
loop
pop
addr16
neg
in
cmp
push
cmp
add
push
add
(bad)
mov
lods
sbb
xor
push
sub
sbb
push
ins
arpl
rcr
mov
push
jle
sbb
or
cmps
ins
outs
sbb
mov
ficom
cmp
jno
mov
mov
fs
sbb
add
rol
jp
push
or
jecxz
jmp
ja
aaa
mov
sahf
jge
jmp
dec
loope
dec
pop
cmp
sub
js
push
jnp
mov
mov
imul
sub
call
or
dec
(bad)
clc
adc
jo
addr16
mov
or
cmc
xor
mov
pop
jae
pop
scas
aam
shl
xor
mov
ss
test
dec
xor
imul
call
xchg
shl
xor
mov
adc
or
call
mov
aaa
push
mov
pop
mov
pushf
and
mov
mov
hlt
ret
arpl
mov
pop
test
(bad)
push
pop
lds
mov
movs
sar
movs
cmp
test
mov
mov
std
in
out
(bad)
js
inc
dec
adc
cmp
xchg
inc
sub
iret
and
ret
(bad)
imul
sub
cs
mov
jecxz
pop
mov
adc
mov
or
mov
sub
xor
lahf
mov
out
push
inc
jb
mov
xchg
dec
push
cmp
xor
mov
xchg
enter
mov
inc
cdq
das
add
dec
sbb
les
ds
retf
pop
ss
sar
jae
dec
ror
sub
aad
and
loope
inc
push
mov
mov
int3
rol
xor
das
int
cmc
(bad)
iret
sub
lods
mov
and
frstor
fbstp
add
mov
pop
cmp
xor
sbb
cdq
cmp
push
fld
or
xor
adc
pop
popf
sbb
into
xchg
dec
adc
cmp
push
pop
jecxz
push
adc
xor
adc
dec
mov
movs
fisttp
cmp
jne
jmp
arpl
mov
movs
in
outs
lahf
(bad)
dec
inc
aam
jnp
test
cmps
call
add
iret
jo
add
popf
mov
push
dec
lds
test
cld
push
popf
jle
jmp
push
(bad)
in
mov
inc
adc
not
inc
test
xchg
imul
dec
hlt
sub
std
loopne
and
retf
in
xchg
mov
mov
inc
xor
scas
cmp
scas
out
lods
(bad)
cli
cmp
(bad)
shl
push
outs
(bad)
fstp
lock
fidiv
bswap
sub
and
call
cli
jecxz
imul
add
pop
je
mov
dec
inc
cmp
dec
ret
aam
dec
cli
adc
out
sub
mov
test
mov
enter
out
and
bound
pop
popf
bound
lods
inc
and
cmps
push
repz
xchg
push
pop
mov
add
jo
pop
les
mov
pop
mov
and
outs
mov
in
mov
mov
jmp
sbb
test
lea
cmp
cdq
inc
cdq
mov
sbb
ret
jae
stc
pop
adc
rcr
pop
mov
in
pop
or
ret
and
mov
mov
push
cmps
cs
dec
lahf
sti
shl
sbb
push
cdq
aam
test
mov
addr16
xchg
cli
pop
call
pop
sbb
loopne
jecxz
sbb
sbb
in
cli
cs
cmps
pop
jmp
push
add
inc
pop
add
pusha
pop
movs
out
sub
dec
daa
ret
popf
cmp
pushf
sbb
or
mov
imul
cmp
jmp
cmp
daa
(bad)
jno
or
aam
xor
fild
mov
ret
addr16
adc
cmc
push
push
xchg
int
push
adc
lds
mov
outs
hlt
cmp
pop
mov
pop
iret
aam
mov
retw
pop
add
pusha
sub
mov
jno
mov
jno
jmp
mov
fdiv
push
push
int3
xchg
and
rcl
repz
cwde
jmp
mov
inc
add
xor
sahf
sub
(bad)
sbb
neg
ss
cs
retf
push
pop
sbb
dec
dec
ins
xchg
mov
cmp
int
cli
iret
dec
lahf
dec
imul
stc
adc
dec
data16
dec
repz
call
movs
fs
fldenv
std
mov
inc
sbb
cwde
xchg
rol
icebp
xchg
mov
jecxz
inc
sbb
lods
jae
or
xor
and
bnd
ss
out
jnp
loopne
push
nop
add
xor
sbb
sbb
test
add
mov
pop
dec
sub
sbb
cwde
hlt
jae
xchg
push
mov
or
aas
movs
sub
sbb
iret
push
xor
pop
jo
retf
aas
div
sbb
cmps
in
fcomi
pop
call
adc
stos
ret
pop
(bad)
xchg
out
dec
test
cwde
mov
mov
or
mov
xchg
mov
gs
mov
lahf
loopne
(bad)
das
push
jno
push
in
int3
cmp
inc
into
int
jno
mov
test
jb
std
js
scas
mov
jmp
out
out
jae
repz
sbb
jbe
xor
mov
retf
test
sbb
arpl
movs
xchg
add
lahf
and
out
or
jo
int3
push
inc
adc
fist
dec
ins
icebp
jg
ja
or
mov
pop
adc
mov
and
cmp
mov
cdq
loop
dec
and
lods
jle
scas
movs
je
add
xchg
push
and
lahf
test
in
test
movs
cli
lods
movs
pop
shr
(bad)
cmc
mov
imul
push
outs
inc
std
iret
dec
cwde
sbb
jb
pop
xchg
push
cmc
mov
iret
push
repz
inc
imul
aaa
adc
pop
cmp
mov
popf
push
push
aad
mov
mov
cmp
test
add
xchg
popf
mov
cmp
jl
or
addr16
arpl
mov
scas
dec
(bad)
lahf
in
sbb
push
pop
aaa
dec
mov
ins
xor
out
xchg
jbe
lock
outs
sbb
mov
add
lods
ja
out
or
mov
cmps
cmp
dec
and
ffreep
cmp
(bad)
mov
push
cmps
sbb
dec
and
pop
daa
push
xorps
jns
pop
inc
mov
adc
add
aam
stc
jb
mov
shr
aad
out
out
dec
xor
ins
pop
pop
xor
or
das
leave
inc
movs
(bad)
into
mov
jle
out
mov
mov
mov
push
push
test
pop
pop
mov
stos
pop
es
das
fcom
sub
retf
imul
and
mov
xor
int
mov
jl
outs
sub
repz
jecxz
pusha
and
imul
popf
ins
pop
pushf
movs
or
inc
cmps
popa
repnz
mov
jmp
sub
je
jnp
mov
cmp
into
xchg
cmc
test
scas
popf
int3
add
sub
pop
aaa
repnz
cmc
enter
jmp
mov
sbb
pop
sub
jmp
sub
ss
adc
push
pop
mov
adc
sbb
jno
mov
sbb
(bad)
cli
out
cmc
nop
jmp
mov
mov
mov
test
sbb
pop
bound
and
jle
sub
sar
iret
arpl
xchg
inc
dec
imul
call
jmp
ins
lods
push
rcl
cmps
arpl
jmp
sub
addr16
push
inc
or
sub
dec
fs
inc
or
add
mov
mov
fwait
mov
sub
cmp
jle
push
je
push
pusha
mov
or
stc
clc
in
(bad)
jne
add
ss
jns
int
and
out
in
es
jo
rol
or
lds
(bad)
pop
sub
cmp
int3
jno
ss
dec
mov
push
into
outs
aas
and
js
or
sbb
push
mov
retf
push
and
adc
data16
rcl
das
ja
rol
xchg
test
sbb
or
xor
jnp
push
sti
push
sub
sahf
sbb
icebp
mov
xor
dec
mov
cmp
pop
lods
add
cmp
dec
repnz
mov
push
push
mov
aas
sbb
dec
jbe
dec
mov
loopne
cbw
xor
mov
and
lods
pop
dec
cmp
cmp
mov
mov
xchg
adc
xchg
jmp
ins
sub
outs
in
mov
imul
callw
outs
xor
imul
adc
mov
sbb
mov
cmp
pusha
repz
out
mov
xchg
add
dec
scas
xchg
fst
int3
inc
pop
jae
cld
aas
sbb
jb
add
add
pop
add
jae
jns
dec
or
xchg
mov
movs
je
out
mov
fidiv
out
pop
and
test
call
ins
mov
lock
mov
push
inc
repnz
jl
inc
loope
cmc
fmul
push
xchg
fisub
aad
jb
mov
add
popa
bound
mov
fcom
xchg
gs
add
stos
push
cmp
je
out
mov
gs
adc
sbb
push
test
outs
xor
mov
mov
loope
dec
dec
in
adc
repnz
push
and
or
cdq
push
mov
add
cli
(bad)
jp
jo
fcomp
mov
je
and
loopne
fst
or
rcr
mov
imul
bound
(bad)
aas
mov
or
out
jnp
pop
stos
jne
in
retf
jmp
pop
mov
out
jl
push
mov
(bad)
xchg
jg
dec
cmp
stc
lahf
adc
imul
cmp
je
icebp
ja
lahf
adc
adc
inc
jnp
jmp
ja
xchg
jl
and
add
sbb
enter
int3
(bad)
fmul
pop
stos
outs
cmp
pop
add
and
xchg
jle
sahf
imul
add
push
aam
mov
inc
mov
or
loopne
js
pop
loopne
ror
in
nop
cmp
lods
cmp
enter
xchg
fsub
mov
mov
or
mov
or
ins
mov
cmp
movs
shl
cmp
in
inc
jecxz
out
dec
adc
addr16
xchg
les
shr
enter
stc
adc
leave
enter
dec
xor
rol
mov
retf
pop
retf
push
lea
mov
jmp
out
bound
lahf
inc
rcl
leave
push
add
adc
out
cmc
fsub
retf
cmp
lods
std
mov
loope
idiv
jne
mov
jp
js
loopne
fs
sar
sbb
fld
xor
repz
push
stos
in
rcl
pop
lds
add
inc
xchg
in
xchg
jl
int
push
or
inc
imul
push
shl
leave
pop
mov
cmc
and
shl
dec
in
out
mov
stos
pop
pushf
clc
mov
aam
or
test
mov
fdivr
imul
fcomp
cmp
lea
fs
dec
int
xor
jmp
int3
push
adc
cmps
xchg
push
les
movs
mov
imul
jmp
call
popa
ret
xor
lds
repnz
and
jmp
stc
std
push
retf
add
ja
mul
sub
mov
popa
xchg
xchg
fisub
bsf
xor
mov
mov
sbb
das
rcr
pop
jge
je
xchg
add
ds
pop
xor
gs
xor
mov
push
les
mov
jb
xor
enter
jl
cmp
mov
out
mov
sub
or
dec
sbb
in
daa
mov
pushf
cmp
aas
dec
aas
pop
ss
stos
sub
ror
fwait
dec
xchg
sub
xor
nop
nop
mov
jb
pop
inc
leave
jmp
cmps
cmc
xchg
cwde
imul
movs
ins
sbb
pop
les
mov
cmp
pop
aaa
sti
or
jmp
aas
cld
jne
dec
je
xor
test
mov
lds
repz
shl
dec
fwait
xor
retf
mov
jecxz
inc
mov
enter
jo
xchg
push
sahf
ja
pop
inc
lea
mov
add
aad
sbb
jg
or
jmp
jmp
dec
mov
xchg
xchg
and
cmp
sub
jns
and
jnp
test
cmp
adc
js
pop
push
inc
ret
cmp
sub
sar
xor
inc
lods
push
cdq
sub
ss
xchg
mov
mov
call
pop
in
inc
test
rol
(bad)
cmc
jbe
adc
retf
test
call
cmp
add
fcom
sub
xchg
dec
xor
enter
xor
stc
push
lea
jmp
xor
mov
stos
lea
or
mov
sub
jmp
retf
(bad)
cdq
icebp
out
push
push
mov
xchg
ret
jb
pop
pop
(bad)
repnz
loop
call
and
fwait
add
fs
adc
push
fstp
push
jb
or
imul
push
push
or
xchg
pusha
out
pop
mov
add
aad
cmp
inc
loop
xchg
scas
xchg
out
mov
ins
dec
in
loop
pop
xor
iret
pop
ins
cwde
jp
push
xchg
mov
fisub
out
loope
adc
mov
(bad)
pop
adc
sub
(bad)
cmp
sahf
out
cdq
and
sub
sbb
mov
(bad)
jns
jae
sbb
pop
mov
xor
sbb
mov
test
lea
push
xor
imul
and
js
pushf
mov
leave
nop
add
adc
das
pop
sbb
xchg
mov
sub
cmps
test
and
in
sub
call
je
xchg
fwait
jmp
mov
xchg
fs
mov
mov
pop
(bad)
pop
iret
pop
cmp
sub
pop
mov
ret
arpl
jmp
xchg
or
imul
sub
cs
clc
sub
test
mov
xchg
scas
aad
add
xor
inc
push
pusha
sub
pop
xchg
pop
mov
adc
jb
and
inc
xor
outs
mov
mulps
jno
cdq
scas
mov
add
inc
lds
cs
cwde
mov
mov
ror
out
or
(bad)
mov
repz
xor
ret
mov
ins
jnp
add
stos
push
rcr
xchg
mov
lods
daa
scas
addr16
xor
sub
imul
(bad)
xchg
repz
ss
xchg
cdq
jo
lahf
mov
mov
xchg
xor
cmp
imul
adc
rcl
inc
(bad)
pop
rcl
jmp
xor
rol
xlat
retf
jnp
adc
mov
ss
stos
sahf
dec
jge
pushf
mov
mov
mov
call
sub
add
cmc
pushf
in
and
jae
and
mov
push
movs
repnz
daa
push
push
call
adc
sub
jmp
push
rcl
int3
adc
test
xchg
add
clc
adc
jae
dec
call
sar
adc
dec
repnz
(bad)
imul
repz
xchg
jle
inc
sahf
mov
xchg
shr
js
and
loop
and
retf
popa
jecxz
xor
sbb
xor
aam
and
loope
mov
fisubr
icebp
pusha
int
cmps
dec
push
fidiv
les
pusha
mov
jp
mov
pop
mov
dec
xor
es
sbb
mov
ins
iret
mov
popa
mov
out
cld
push
inc
das
(bad)
(bad)
loopne
mov
jge
pop
inc
scas
call
in
lds
leave
mov
(bad)
sahf
jecxz
test
pusha
ja
adc
sar
hlt
ret
in
xchg
mov
jb
add
repz
idiv
push
retf
mov
and
push
psubd
sahf
or
mov
fs
inc
mov
ins
test
pop
jb
pop
xlat
fmul
mov
in
cmp
jmp
ror
sub
inc
mov
xor
xchg
shr
(bad)
xlat
ret
or
mov
aad
mov
mov
mov
neg
cmp
fst
adc
and
ds
pop
pop
jl
fisub
and
int3
dec
pop
cmps
cmps
sbb
and
xor
xchg
(bad)
push
push
fisubr
rcr
adc
ja
pop
push
add
gs
sub
outs
shl
sub
and
repnz
xor
dec
push
mov
(bad)
push
sbb
neg
and
sahf
rcl
imul
dec
test
inc
pop
mov
mov
pop
push
or
ret
pop
repz
invd
push
cs
adc
icebp
jmp
dec
pop
push
imul
arpl
push
call
call
lods
int
or
aad
or
dec
scas
mov
ror
cmc
add
les
pushf
push
adc
mov
fsub
mov
in
(bad)
inc
mov
push
cdq
push
(bad)
push
mov
mov
icebp
push
push
(bad)
cmp
ror
ds
in
es
cmp
push
rcl
fwait
adc
outs
es
bound
iret
ss
mov
jno
(bad)
div
popa
adc
sahf
inc
cs
or
in
adc
sub
or
jg
push
xchg
fcmove
(bad)
out
nop
(bad)
retf
scas
ja
xchg
mov
sbb
test
push
add
(bad)
enter
imul
aas
out
mov
xchg
outs
inc
jecxz
repnz
pusha
aad
sub
cmp
dec
xchg
jmp
cmps
(bad)
scas
and
shr
fcomp
xchg
lds
push
shr
xor
pop
popf
mov
add
lea
imul
ficomp
call
cmps
push
ret
mov
push
mov
out
push
in
out
inc
or
or
icebp
dec
xchg
mov
or
sbb
sbb
mov
sub
mov
push
repnz
mov
pop
ret
cwde
xor
scas
ss
mov
sub
push
and
mov
cmc
mov
cmp
ret
call
call
jle
mov
in
test
or
sbb
fadd
retf
fs
push
cmp
and
mov
add
aaa
add
push
test
ds
xor
js
xchg
xchg
das
(bad)
scas
sti
dec
xor
shr
ss
xchg
pop
test
imul
pushf
shl
jno
pop
push
mov
rcr
xor
lock
cmp
cmp
mov
mov
scas
aaa
test
xchg
jmp
cs
mov
sub
popf
xchg
clc
add
and
out
movs
(bad)
jge
and
jle
fisttp
sub
fild
imul
pop
in
pop
push
add
cmp
mov
fld
stc
xor
clc
lods
addr16
je
mov
das
pop
dec
pop
rcl
push
inc
daa
push
dec
ins
mov
xchg
aad
inc
sbb
lods
xor
add
repz
push
aam
(bad)
sub
sub
test
sbb
icebp
ret
out
mov
jl
sbb
fiadd
retf
fimul
les
shl
loop
cdq
in
aaa
jge
push
retf
es
dec
arpl
mov
fbstp
push
mov
cwde
mov
aas
mov
mov
sub
push
scas
call
ficom
fsubr
pop
outs
xchg
mov
std
fimul
leave
rol
push
int
push
stc
sbb
sub
(bad)
mov
imul
xor
dec
push
mov
call
mov
loopne
test
jmp
(bad)
jp
xchg
fisub
sbb
jbe
adc
int3
adc
jmp
gs
out
sbb
cmp
pop
loopne
arpl
dec
mov
cli
cli
inc
mov
sar
jns
jae
punpckhdq
xor
dec
mov
ins
push
sub
rol
inc
imul
mov
cmp
(bad)
mov
pop
pop
aam
out
jle
push
sub
outs
fnsave
int3
mov
mov
pop
xchg
mov
sbb
leave
in
jg
pusha
adc
nop
arpl
sub
cld
xor
mov
mov
(bad)
addr16
jl
loope
sbb
lahf
leave
jae
scas
shl
std
stos
lds
(bad)
or
add
and
push
add
fild
ins
arpl
and
data16
sar
adc
pop
or
dec
adc
jl
pop
movs
jo
and
or
pushf
lea
pushf
mov
sbb
ror
xor
lock
cmp
loopne
push
jg
outs
push
(bad)
sahf
inc
push
pop
jp
xchg
or
mov
pop
xchg
rol
out
pop
sti
xor
inc
imul
fbld
jmp
clc
out
loope
scas
dec
call
sbb
add
inc
aad
mov
cli
jle
fdiv
test
clc
or
test
pop
je
lods
dec
cmps
aaa
mov
push
push
sbb
mov
popf
sbb
(bad)
jbe
sbb
hlt
inc
adc
fisttp
shr
je
stos
repnz
jae
sub
xor
xchg
aad
xchg
xchg
mov
mov
mov
add
xchg
fdiv
push
bnd
std
jle
loope
add
nop
fnsave
jecxz
push
sbb
adc
jmp
xchg
push
inc
and
pop
jnp
dec
pop
or
mov
cmp
mov
fwait
mov
lods
cs
xchg
cmps
loope
fidivr
sti
addr16
dec
cld
sbb
jnp
inc
mov
rep
pop
add
in
sbb
shl
test
or
aas
out
mov
inc
arpl
mov
mov
leave
lock
xchg
jmp
cmp
mov
out
mov
ss
adc
adc
imul
pop
cli
pop
(bad)
lahf
jo
adc
pusha
xchg
inc
mov
jno
or
mov
pop
sbb
(bad)
int3
out
pop
xor
mov
mov
xchg
aas
and
aam
out
ins
pop
lea
xchg
rcl
push
cld
push
inc
pop
lds
dec
cmp
inc
and
(bad)
cld
jb
xchg
cmp
add
xchg
je
dec
adc
mov
std
call
ror
jmp
mov
mov
and
inc
imul
retf
in
iret
(bad)
jnp
cwde
mov
icebp
call
dec
mov
push
sbb
int3
das
sub
enter
loop
stos
inc
aas
adc
movs
fstp
dec
or
rcl
fimul
dec
outs
add
jp
int
inc
and
fmul
mov
or
cmps
popf
jnp
cdq
jp
loopne
jp
push
mov
leave
ins
dec
xchg
pop
sub
into
sbb
lea
mov
dec
repnz
lock
shl
push
xchg
mov
add
sbb
sti
mov
jae
mov
pop
jge
cmp
fnstcw
sbb
xchg
push
pop
int3
fnstsw
mov
fs
ret
(bad)
in
adc
xlat
sahf
bound
movs
test
push
xchg
push
jle
pop
fistp
inc
lock
pop
call
or
clc
out
adc
cli
ret
push
fstp
in
adc
dec
mov
xlat
cmp
fldcw
xchg
cmc
inc
out
pop
and
xor
cmps
les
test
adc
in
shl
ret
ins
add
jo
in
jge
and
ja
sub
and
(bad)
(bad)
fisttp
sub
fstp
dec
xchg
fistp
xlat
ror
into
nop
pusha
fisub
xchg
adc
(bad)
dec
xor
sub
aaa
pop
stc
push
mul
or
adc
xor
jge
sbb
jmp
add
xchg
js
daa
xor
jg
and
dec
mov
data16
fsub
mov
daa
mov
mov
icebp
jecxz
pop
adc
cmp
or
adc
mov
pop
jmp
adc
jns
mov
mov
mov
jae
ror
jnp
ds
das
aas
or
rol
das
lahf
cdq
add
imul
pop
rol
mul
rol
mov
sbb
and
cmp
cmp
cmp
(bad)
jge
arpl
cmps
jno
sbb
pop
push
xchg
xor
cmp
fmul
jb
adc
movs
push
test
cmp
fnstcw
push
cmps
sbb
rcl
jl
cmp
daa
cwde
leave
xchg
in
xchg
xchg
mov
sbb
imul
test
aam
pop
in
jl
xor
jmp
mov
pop
clc
xchg
test
aam
sti
and
(bad)
addr16
ret
mov
repz
adc
ins
mov
inc
out
retf
mov
push
dec
pop
int
int3
mov
daa
mov
stos
push
xor
xchg
pop
mov
popw
and
aaa
xchg
mov
adc
xchg
or
add
mov
cli
inc
inc
ret
xchg
push
dec
add
loopne
xor
jbe
pop
adc
out
retf
hlt
dec
jg
xor
mov
and
mov
stos
inc
mov
ja
ins
push
test
out
icebp
jl
xor
sub
pop
ret
nop
movs
repz
leave
inc
shr
retf
sbb
jae
test
mov
dec
ss
mov
adc
jae
inc
pop
shr
jae
movs
stos
cwde
cmp
(bad)
mov
icebp
fsubr
lahf
push
inc
inc
call
push
bnd
xlat
and
sahf
xor
push
lock
(bad)
and
add
mov
pop
inc
out
inc
xor
scas
pop
imul
fadd
xchg
cld
shr
xor
jbe
mov
cmp
push
cmps
repz
or
icebp
sub
adc
movs
add
repnz
cmp
jmp
dec
cs
fisub
push
push
sti
mov
add
sub
pop
inc
aam
fld
stc
call
sti
adc
or
ja
add
sbb
mov
xchg
retf
int
pop
in
daa
popa
and
rol
ja
js
jno
add
sbb
jle
mov
movs
jae
call
nop
and
scas
lea
ja
aam
outs
(bad)
jg
jge
jne
ins
add
shl
leave
or
clc
cs
retf
jmp
ss
adc
sar
mov
jge
popa
mov
dec
(bad)
popf
outs
push
into
popa
xlat
jae
les
out
stos
call
mov
sahf
pop
(bad)
mov
(bad)
xchg
xor
bound
xchg
retf
hlt
mov
in
mov
ja
adc
ret
ins
mov
adc
ror
test
xor
mov
outs
dec
pop
xchg
cmp
mov
xchg
ds
jno
scas
jnp
jno
repz
jl
sar
sub
push
es
aaa
push
movs
push
outs
xlat
pop
lods
and
adc
add
or
pushf
out
cmps
aaa
mov
stc
jb
fdivr
pop
mov
fimul
pop
jb
mov
loopne
rcl
mov
xchg
aas
mov
mov
movs
dec
in
arpl
inc
les
jmp
jg
dec
jp
dec
add
fidiv
sbb
mov
call
movs
sbb
or
cmp
outs
sub
imul
cli
sbb
repnz
ret
dec
popf
(bad)
xchg
mov
dec
mov
or
pop
out
ins
jp
and
jmp
and
aaa
into
mov
(bad)
jbe
aad
jae
imul
mov
mov
daa
cmps
jl
nop
xlat
cmp
add
lds
ror
sub
popf
adc
xchg
xchg
cmps
clc
mov
xchg
adc
mov
sahf
in
cmps
psubb
cdq
adc
mov
dec
aad
xor
sbb
inc
inc
pushf
jmp
daa
mov
cmps
aam
subps
cmp
nop
pusha
jb
cmc
out
pop
cli
lahf
jno
mov
dec
inc
rol
add
or
sar
adc
cs
loope
into
call
sbb
or
sub
cwde
or
sub
imul
mov
add
dec
fstp
adc
mov
inc
adc
lahf
mov
xchg
jo
push
sbb
cli
ds
lock
mov
pop
repz
or
jge
add
stc
fsub
push
push
mov
fwait
push
xor
lock
jge
push
scas
pushf
ins
ret
inc
dec
jo
scas
fs
(bad)
jmp
push
add
jmp
mov
out
or
cmp
cld
retf
jecxz
out
inc
inc
add
imul
sahf
jmp
int
leave
(bad)
xor
out
and
and
sbb
and
add
push
retf
push
adc
stc
mov
jle
jmp
(bad)
xlat
and
or
js
hlt
lods
sahf
mov
nop
iret
fs
lds
push
sbb
ret
add
pop
pop
mov
mov
fdiv
mov
pop
addr16
inc
jl
clc
ins
dec
dec
jg
inc
xchg
test
out
leave
fldcw
and
nop
sub
jbe
push
add
rol
cdq
stc
je
mov
mov
mov
addr16
jge
xchg
cmp
mov
pusha
mov
sti
xchg
scas
ss
aam
jns
fwait
jecxz
ss
scas
popa
or
push
fwait
xchg
outs
push
inc
jg
dec
mov
cmps
inc
push
arpl
aaa
mov
adc
fmul
sub
or
cwde
jmp
push
je
xlat
movs
sub
sbb
fsub
stos
add
nop
jp
or
int3
imul
test
bound
lahf
(bad)
mov
sbb
pop
add
jg
popf
adc
movs
pop
out
fwait
mov
retf
(bad)
lea
ja
dec
aad
(bad)
mov
mov
or
mov
into
or
aas
mov
(bad)
lods
mov
pushf
daa
sub
xchg
repnz
push
push
or
fld
call
imul
bound
jns
push
aas
xchg
setl
lock
push
mov
mov
fcmovu
push
push
mov
nop
aam
retf
mov
movs
mov
js
scas
das
mov
sub
and
dec
sbb
ret
fadd
xor
add
icebp
repnz
sbb
gs
jb
loop
(bad)
sub
mov
xor
jle
scas
mov
mov
icebp
xchg
sar
sbb
enter
repnz
dec
mov
cmp
push
mov
stc
mov
or
movs
mov
add
adc
push
dec
sub
shl
adc
fstp
or
fistp
push
cmp
dec
sub
and
sub
clc
fwait
jg
stc
dec
ds
int3
adc
push
clc
mov
or
dec
outs
and
pop
(bad)
mov
xchg
(bad)
jbe
push
push
ins
add
imul
or
lods
stos
adc
pop
repnz
in
out
clc
mov
rcr
xor
pop
mov
mov
call
fs
sub
fbstp
push
inc
clc
xchg
je
pop
or
mov
jle
fbstp
mov
adc
rol
sub
jecxz
out
push
pop
lahf
push
xor
inc
adc
cmp
rcr
adc
cli
jbe
xchg
out
mov
std
add
mov
sub
fwait
inc
adc
cmps
or
aas
icebp
fmul
retf
(bad)
loope
push
add
out
pop
mov
inc
iret
shl
or
and
or
adc
adc
in
sbb
push
test
lock
sub
inc
ffree
aaa
adc
push
sar
xchg
inc
test
fadd
shl
fs
outs
sub
leave
sbb
xor
cdq
mov
mov
cld
sbb
fsubr
addr16
in
mov
mov
push
dec
adc
aaa
xchg
jbe
xor
inc
sbb
pop
fdiv
lods
mov
and
call
push
pop
sbb
pop
js
cs
xchg
popa
call
jae
ins
inc
jmp
pop
(bad)
jg
cli
cld
jae
xlat
xor
and
and
mov
sbb
jne
mov
fmul
mov
adc
mov
bound
icebp
add
cmps
adc
aad
test
or
adc
xchg
pushf
cmps
das
adc
test
mov
mov
jmp
int3
mov
das
imul
or
inc
xchg
inc
mov
jge
(bad)
xchg
cmp
jp
cmps
int
icebp
mov
xchg
add
ror
sar
add
addr16
arpl
inc
stc
and
and
sub
cwde
rcl
int
(bad)
into
mov
les
lods
mov
fdiv
adc
mov
mov
hlt
lods
shl
int3
js
(bad)
xor
cmc
mov
les
xchg
push
sbb
cmp
mov
dec
fisubr
dec
sub
adc
add
push
mov
cmp
add
mov
imul
inc
jmp
mov
test
cmp
xchg
iret
popa
leave
in
cmp
xor
retf
sbb
mov
fiadd
cli
push
pop
or
jno
push
dec
xchg
push
retf
ins
sbb
sbb
ins
and
cmps
iret
pop
sbb
cdq
inc
or
jbe
inc
clc
mov
and
sub
jge
popf
inc
sbb
cmps
and
push
aaa
in
jno
ins
xchg
jmp
in
push
aaa
mov
test
in
xchg
push
sbb
loop
inc
xor
movs
and
cmc
mov
or
mov
mov
loop
sub
and
push
pop
out
push
and
(bad)
enter
xor
pop
adc
push
fstp
sbb
jp
push
ja
push
sub
cmp
and
aam
stos
mov
pop
mov
scas
(bad)
andps
int3
es
jo
push
and
pop
fld
pop
or
add
pop
(bad)
cmp
lock
pop
mul
pushf
mov
ins
push
ins
arpl
inc
mov
std
mov
je
scas
and
xchg
sub
call
pavgb
je
cld
cmp
jp
or
test
cmp
inc
mov
sub
pusha
and
jmp
push
iret
mov
sbb
xor
sbb
(bad)
neg
addr16
and
mov
push
inc
test
mov
push
(bad)
mov
jns
aaa
jb
mov
mov
ret
in
ffreep
inc
jb
xor
lods
mov
xor
mov
jp
mov
xchg
push
lods
fwait
adc
ss
aas
or
and
mov
or
push
and
in
and
adc
xor
retf
fisubr
dec
outs
push
xchg
daa
mov
shl
repnz
loop
rcl
xchg
adc
loopne
imul
xchg
mov
loopne
inc
sbb
das
dec
in
in
rcl
mov
jne
jl
fsub
push
lahf
fs
and
cmp
jmp
fnstenv
rol
pop
in
mov
jne
adc
fs
clc
aas
cmp
ds
daa
inc
popf
adc
imul
push
cli
inc
lods
lock
xor
inc
jmp
sub
push
aas
fisub
rol
add
cmp
mov
js
lea
mov
arpl
mul
aas
jmp
adc
mov
popa
ja
fnsave
aad
adc
jne
sahf
push
jg
(bad)
sbb
sub
cmp
mov
jbe
pusha
pusha
jb
mov
xor
test
loope
enter
repz
inc
pop
mov
jmp
sub
mov
push
pop
cwde
shl
pop
xor
popa
imul
adc
xchg
ins
mov
mov
out
adc
pop
mov
into
cmp
jno
stc
pop
scas
mov
cli
push
or
ins
sbb
retf
stos
pushf
iret
ret
or
scas
jbe
icebp
(bad)
cmp
repz
gs
jecxz
pop
lods
test
hlt
shl
pop
fadd
mov
and
add
hlt
retf
(bad)
xor
(bad)
loop
vxorpd
mov
mov
mov
xchg
xor
and
sbb
je
dec
cmp
sti
paddw
mov
scas
xchg
xor
xchg
test
pop
adc
fstp
cli
and
xor
mov
hlt
sti
cmp
jmp
adc
mov
sahf
lea
(bad)
inc
je
jb
std
pop
mov
cdq
repnz
and
imul
shr
imul
adc
mov
movs
cmp
movs
add
dec
inc
ins
loope
sub
fwait
call
pop
aad
push
or
sub
ss
fsub
xlat
sbb
sbb
mov
sub
loop
mov
pop
sub
mov
mov
sub
push
ficom
fwait
iret
pop
add
push
ss
pusha
xorps
scas
pop
or
inc
loope
cmp
dec
in
shl
int
dec
and
popf
dec
int
mov
sub
cmp
push
inc
adc
icebp
(bad)
xlat
aaa
mov
(bad)
gs
fld
jno
dec
xor
xchg
out
xor
dec
pop
sbb
test
in
or
sbb
xchg
popf
fldenv
adc
mov
xlat
push
xor
and
xchg
add
stos
icebp
pop
and
ret
mov
daa
mov
imul
dec
push
das
sbb
fs
mov
and
sbb
push
in
out
mov
clc
sub
inc
jae
xchg
add
inc
loop
mov
sub
into
jle
dec
cmc
and
rol
sahf
mov
scas
push
adc
inc
fucomip
ja
mov
xor
fistp
inc
rep
in
jae
pop
jbe
jo
xor
mov
lea
and
out
sbb
xchg
sub
or
ror
call
cld
imul
cmp
xchg
mov
mov
add
add
push
mov
cld
sbb
ret
(bad)
ficom
les
mov
or
mov
jl
jne
push
arpl
push
movs
cmps
out
daa
xchg
es
inc
arpl
push
popf
in
and
and
inc
neg
push
mov
push
ret
or
aad
jno
dec
loope
sub
inc
std
inc
iret
cmps
or
lods
shl
je
cmp
dec
and
out
mov
sbb
inc
stos
or
std
mov
pop
sbb
mov
mov
scas
je
aam
or
cmp
data16
push
xchg
scas
add
push
or
fmul
sub
lods
sub
dec
retf
add
push
mov
jl
aas
inc
inc
and
in
fild
in
add
lock
(bad)
test
cmp
inc
popf
sub
ins
mov
popa
jl
iret
cmps
pushf
test
dec
cld
mov
mov
cwde
and
aas
mov
mov
mov
es
jp
pop
test
xor
mov
mov
enter
call
addr16
loopne
inc
pop
and
shl
shr
fmul
hlt
push
jl
sbb
imul
add
jp
cli
cmp
into
mov
outs
mov
ret
je
mov
xchg
(bad)
popf
sub
lods
syscall
add
dec
cld
lahf
pop
mov
cmp
das
or
out
add
mov
pusha
imul
mov
out
mov
cmp
inc
retf
aam
inc
pop
and
(bad)
fs
enter
add
int3
mov
pop
jmp
das
or
je
test
dec
lods
mov
xchg
xchg
call
into
xchg
mov
or
or
and
shl
sbb
push
mov
ja
int
pop
gs
iret
push
fmul
or
repz
lods
es
pop
pop
jp
es
add
std
in
mov
bound
xor
not
jno
or
jle
(bad)
sbb
repz
add
imul
enter
pop
push
popf
pop
add
xchg
mov
movs
rol
sti
lea
xchg
mov
in
inc
stc
or
cmc
push
adc
xor
je
(bad)
lds
xor
xchg
mov
and
or
mov
pop
inc
out
aad
mov
sub
call
(bad)
aam
inc
aad
xchg
sub
push
pop
pop
call
(bad)
fs
addr16
jb
in
test
pop
pop
push
(bad)
in
or
and
ins
mov
imul
in
push
sub
cld
cwde
sbb
in
lods
cmp
mov
int
xchg
icebp
xor
daa
xor
(bad)
in
and
or
xor
lea
xchg
xchg
lock
lods
popa
jne
cdq
out
or
rcl
loop
or
ja
stos
or
mov
jae
xchg
pushf
jecxz
add
cdq
add
sbb
out
in
cmp
(bad)
push
ret
xlat
cdq
sbb
and
loop
cmp
jmp
mov
lods
lods
xchg
mov
ds
lock
push
xchg
cmps
data16
pop
je
or
pop
fist
xor
xchg
dec
fsubr
jo
and
sqrtps
jns
(bad)
jp
outs
or
in
mov
(bad)
loop
sahf
mov
iret
shr
sub
jbe
retf
lds
cdq
push
lock
test
jno
sub
loope
in
call
lahf
rep
adc
enter
std
and
pop
dec
pop
add
(bad)
mov
popa
scas
inc
cs
pop
imul
fiadd
lds
or
cmps
pop
jle
or
cmp
push
lods
xlat
je
loope
pushf
mov
in
add
iret
retf
lock
cmp
or
adc
pusha
and
mov
push
in
push
and
add
jge
mov
ficomp
movs
rcl
movs
or
mov
push
mov
stos
jp
(bad)
xchg
jnp
rcr
xchg
dec
cmp
xchg
pop
mov
and
and
pop
jns
stos
fcomp
jno
inc
out
ins
xchg
cli
mov
sub
ins
pop
stos
cdq
sbb
dec
push
pop
add
mov
test
push
or
aam
mov
stos
data16
xor
pop
(bad)
mov
icebp
xor
add
push
popa
sbb
adc
popa
or
ins
in
repnz
cmc
mov
xor
or
mov
sbb
les
pop
ds
mov
adc
inc
loope
daa
in
pop
inc
(bad)
nop
hlt
movs
into
js
jae
xlat
xor
jl
das
std
bound
dec
popa
xchg
leave
bound
dec
cdq
cmc
mov
adc
mov
movs
sbb
add
ja
jns
icebp
arpl
inc
sahf
arpl
retf
xor
test
das
xor
outs
dec
xchg
dec
repz
xchg
sti
and
std
jae
into
mov
(bad)
out
enter
arpl
mov
add
fld
outs
jg
pop
pushf
(bad)
int3
push
jl
retf
xor
test
inc
je
adc
les
aaa
test
les
inc
ror
xacquire
scas
ss
data16
mov
mov
scas
mov
fidivr
(bad)
dec
enter
sbb
repnz
push
mov
xor
dec
test
(bad)
mov
add
jmp
push
sub
adc
shl
in
add
clc
(bad)
das
fcomi
imul
jnp
pop
test
jo
ret
cdq
cmp
mov
mov
fild
cdq
or
sbb
lea
cs
fs
xor
aad
pop
iret
push
pop
jne
mov
in
je
popa
cmps
nop
cmc
movs
call
or
lea
xchg
pop
inc
xchg
push
sbb
call
push
lods
add
jo
imul
fwait
mov
mov
pop
inc
bound
in
bnd
mov
mov
adc
(bad)
jno
call
inc
xor
pusha
je
stos
stos
jmp
sbb
outs
inc
mov
or
jne
out
add
outs
adc
pop
mov
stos
cmps
dec
jb
jge
pusha
jle
mov
xor
ror
(bad)
push
adc
sub
and
sar
push
nop
xor
les
pop
pop
cld
fsubr
sub
or
xor
push
sub
jecxz
cmps
fcom
idiv
call
dec
sbb
retf
dec
pushf
pop
and
push
mov
mov
cmps
jo
add
aas
mov
div
or
fadd
adc
mov
adc
push
sub
pusha
xchg
es
rol
dec
pop
cdq
in
mov
jge
les
jnp
mov
and
and
inc
push
cmps
retf
sbb
and
or
pop
adc
test
fcom
xlat
mov
push
inc
jns
pop
sub
ror
or
xor
(bad)
repnz
adc
pop
xchg
mov
jmp
inc
adc
inc
loop
jo
push
repnz
mov
inc
mov
int3
bound
dec
popf
(bad)
or
inc
aas
mov
mov
and
cmp
out
jge
jno
std
or
mov
push
or
pop
mov
(bad)
rcr
popf
mov
mov
xchg
add
sbb
test
(bad)
pushw
aad
mov
and
(bad)
sbb
jmp
addr16
cmp
gs
(bad)
dec
jmp
(bad)
(bad)
xchg
pop
cld
and
sbb
fstp
lods
push
cmp
pop
ja
sbb
lock
mov
int
sub
jmp
mov
in
add
fadd
out
sti
div
mov
je
xor
add
test
lods
arpl
mov
and
mov
mov
lods
pmovmskb
push
test
leave
push
pop
push
dec
ret
cs
sub
or
inc
mov
movs
rol
cmc
mov
add
push
mov
out
test
mov
imul
and
push
xchg
mov
mul
scas
mov
fdivr
sbb
jae
xchg
mov
aas
mov
mov
or
sbb
cmc
inc
dec
fnstcw
popf
jnp
mov
(bad)
cli
or
lea
test
leave
add
jbe
in
adc
mov
xor
pusha
sbb
lods
leave
push
int
adc
call
xchg
enter
jecxz
jo
scas
pop
cmc
add
inc
loopne
out
push
push
rcr
fs
cli
movs
cmp
fist
imul
mov
jns
sbb
mov
mov
jmp
jmp
xchg
mov
out
popa
xor
lods
shld
sar
pop
xlat
inc
xchg
imul
scas
inc
mov
ins
cmc
cwde
cmp
cmps
pop
(bad)
ror
movs
or
bound
ror
scas
xchg
mov
out
imul
xor
or
mov
lock
js
inc
mov
cmps
aam
out
outs
inc
inc
xor
inc
repnz
pop
mov
cmp
inc
push
not
out
mov
xchg
rcl
jmp
sahf
out
dec
repz
fld
add
push
dec
pop
dec
mov
or
lods
clc
dec
sub
jge
sub
fs
cmp
test
(bad)
in
sbb
mov
sbb
cmp
jae
pushf
push
int
add
jmp
shl
pop
sub
mov
les
jmp
sub
add
arpl
nop
mov
push
xchg
cmp
repz
jle
in
mov
jge
ffree
jge
push
ret
aad
pop
xor
cwde
cmps
or
jae
mov
clc
sar
dec
push
movs
mov
jp
jns
data16
add
xlat
pop
addr16
nop
pop
sub
sahf
aam
mov
(bad)
repnz
sar
sbb
mov
in
arpl
xchg
ret
add
adc
pop
fstp
pop
mov
xchg
sbb
ins
push
gs
ror
cmp
sub
mov
jbe
cmp
push
pop
movs
cmp
hlt
cmps
(bad)
cmp
loope
pshufw
mov
std
ret
mov
popa
xchg
out
cli
ret
jbe
sti
mov
repnz
fadd
mov
mov
jne
shr
ret
aas
in
mov
ins
cwde
and
mov
push
int
sub
es
mov
(bad)
clc
cmp
jg
test
xchg
sub
sub
pop
jno
mov
dec
arpl
retf
int
xchg
shl
push
xchg
add
int3
jo
outs
stos
lahf
popa
fdiv
cmp
out
mov
adc
scas
leave
mov
outs
iret
or
sbb
or
fwait
inc
call
add
daa
mov
out
jb
jo
mov
and
push
fstp
sbb
or
lds
aas
and
or
ins
cwde
inc
mov
int3
push
cmps
cmps
jg
bound
dec
sub
stc
xor
mov
mov
leave
pop
mov
(bad)
aaa
add
pop
or
pop
push
daa
jne
les
into
cdq
sahf
adc
shl
pop
sbb
sub
iret
mov
rol
mov
push
(bad)
pop
movs
and
sub
adc
pop
xchg
inc
ret
cmp
jl
jnp
mov
or
lods
adc
adc
or
cs
mov
cld
inc
sub
sbb
test
test
int
xor
(bad)
mov
fld
jne
cs
or
mov
inc
fwait
xor
lods
push
push
stos
mov
je
dec
push
std
and
or
and
cmp
push
inc
mov
fs
repz
or
xor
pop
fistp
sbb
popa
mov
out
in
sub
mov
pop
add
jmp
and
sub
jle
cmp
push
jo
mov
dec
addr16
ja
jmp
not
and
ret
hlt
sub
xor
lds
adc
gs
or
out
pop
push
xor
ss
lds
xor
push
aas
mov
cwde
fcom
movs
mov
int
and
mov
imul
xlat
(bad)
cli
(bad)
xor
sub
and
out
and
lahf
inc
push
lds
enter
pushf
xor
push
jb
popa
bound
jge
push
loopne
daa
pusha
pusha
xchg
xor
test
in
fs
add
and
imul
retf
repz
adc
mov
aaa
cmps
mov
inc
pop
jne
cs
hlt
xor
int3
add
add
or
lods
jns
or
cmp
int3
outs
pushf
jne
push
mov
(bad)
ret
scas
in
xor
or
push
sub
mov
xlat
nop
mov
call
mov
in
sbb
dec
sub
xor
mov
stc
aam
rcl
jbe
inc
lods
adc
lods
mov
adc
imul
into
or
xchg
or
out
call
movs
scas
int
mov
dec
cmps
xor
in
scas
int3
ds
int3
and
cs
mov
mov
cmc
out
iret
test
or
adc
ret
cmc
leave
pop
push
ficom
stos
in
clc
and
or
pop
pop
ins
pop
xchg
addr16
rcr
jnp
jmp
fisttp
cmp
xchg
mov
or
jmp
mov
enter
adc
retf
lea
int3
cli
xchg
dec
jmp
xor
push
jbe
(bad)
sub
cdq
bound
sub
xor
ret
mov
sub
cdq
(bad)
cmc
jns
push
adc
repnz
pop
sbb
stc
jge
into
xor
mov
std
push
pop
dec
mov
gs
inc
cmps
mov
cmovno
stos
out
inc
fsub
mov
das
into
push
dec
jns
sbb
mov
push
add
inc
adc
rcr
fdiv
ret
dec
mov
aam
add
adc
int
add
jo
jns
test
mov
dec
adc
bound
pop
push
fstp
push
test
jecxz
mov
or
(bad)
js
sti
or
scas
leave
and
outs
ds
cmps
push
jp
dec
cmp
scas
ret
or
adc
inc
xchg
shl
(bad)
movs
outs
std
mov
repz
aas
nop
(bad)
jmp
shl
pop
mov
call
and
dec
add
or
cmps
and
xor
push
sub
adc
push
pop
xchg
out
pop
mov
cmp
push
xchg
es
scas
xchg
mov
cmps
and
jl
or
out
adc
pop
xor
out
jae
cmp
(bad)
add
repnz
cmp
xchg
jb
imul
mov
xor
mov
adc
pushf
outs
cmp
ror
test
push
lods
pop
lds
pop
mov
pop
sub
cmp
or
test
adc
pop
xchg
jo
mov
dec
mov
ins
lods
outs
stc
jae
cld
pop
fmul
cmp
cmp
mov
inc
add
inc
mov
out
xchg
or
(bad)
out
cli
mov
sbb
add
cmp
lea
xchg
dec
aad
inc
fsubr
xor
in
(bad)
rol
inc
repnz
dec
inc
fbld
lock
xchg
test
sub
adc
imul
iret
jb
out
mov
sbb
cwde
(bad)
mov
cmps
pop
enter
or
fstp
pop
dec
fcomp
add
cld
bound
add
jecxz
icebp
pop
movs
(bad)
xor
mov
dec
mov
movs
adc
jge
jns
add
scas
loop
icebp
adc
popa
push
adc
jp
cmps
ins
fstp
adc
test
pusha
xor
adc
adc
test
or
mov
inc
fs
es
inc
jle
dec
or
ja
add
mov
test
pop
mov
or
popa
mov
daa
and
mov
push
xor
pop
pop
fld
jp
pop
jno
mov
mov
aas
test
movs
(bad)
xor
xor
mov
pop
fs
cmp
and
sbb
sar
inc
or
jb
jecxz
fisub
inc
mov
jmp
test
xor
or
push
enter
xchg
sub
stos
ror
pop
mov
mov
scas
out
jno
dec
mov
in
popf
and
imul
repz
inc
pop
push
mov
or
ficom
loopne
or
mov
sbb
cdq
mov
and
das
rol
pusha
pop
xchg
fs
add
jne
mov
adc
out
push
sbb
xor
fistp
mov
sbb
or
pop
not
mov
movs
stos
icebp
fwait
sbb
lds
out
sub
int
cmc
aaa
fidivr
sbb
ret
and
mov
(bad)
mov
sti
mov
cmp
mov
out
add
mov
stc
into
and
push
jp
and
sub
xchg
es
push
adc
add
pop
push
into
or
sub
push
jp
sub
popa
(bad)
(bad)
fstp
jno
push
and
push
jno
dec
aad
or
test
addr16
enter
fdivr
mov
jp
add
pop
loope
pop
mov
add
addr16
sbb
ins
push
inc
mov
sbb
or
mov
cmp
xchg
or
push
stos
sar
jecxz
xchg
loopne
sahf
ins
pop
bound
sub
std
xor
xchg
mov
or
pop
jp
ds
call
loopne
xchg
inc
mov
xlat
xchg
xchg
xchg
or
out
mov
gs
mov
push
loop
cmp
imul
stc
sbb
push
xchg
call
dec
scas
pop
adc
fcmovnb
inc
dec
mov
sbb
cmp
jnp
jbe
scas
dec
and
push
aaa
inc
clc
arpl
fdivr
imul
dec
or
popa
test
jns
addr16
add
fwait
or
or
popf
lods
retf
sbb
cmp
and
and
add
jmp
sub
(bad)
stos
fistp
sti
inc
push
jg
out
jmp
out
jl
cs
mov
dec
or
into
aaa
jno
xchg
xchg
dec
mul
(bad)
adc
xchg
or
js
jmp
or
dec
ins
mov
xchg
sbb
popf
ins
ret
cmc
out
lea
outs
mov
pop
or
push
xor
loope
dec
mov
push
outs
call
pop
jno
ud1
jmp
in
add
add
sub
movs
pop
jae
outs
mov
push
adc
xchg
pusha
mov
xchg
cmp
dec
out
pop
repnz
lock
in
xor
sahf
repnz
jmp
inc
nop
fcmovne
dec
into
dec
leave
ja
fsincos
dec
(bad)
out
xor
sub
js
sbb
sbb
sub
push
fidivr
retf
inc
or
cmp
(bad)
loopne
and
mov
sbb
push
cmp
pop
gs
lods
xchg
lahf
xchg
rcl
sbb
jbe
in
fdiv
lds
pushf
sbb
rol
aad
adc
cmp
sbb
sub
jg
mov
(bad)
and
out
jo
dec
movs
cmc
iret
xor
mov
jne
or
and
jmp
les
cmp
mov
xchg
mov
jno
(bad)
sub
cld
mov
pop
loop
jbe
or
sar
fstp
pusha
jmp
rcr
mov
shl
inc
push
and
add
ins
pushf
cmp
dec
ss
inc
std
add
jl
(bad)
fucomp
iret
ja
or
push
mov
cmps
daa
mov
outs
div
pushf
sbb
jno
cmp
xchg
mov
pop
push
jb
mov
cmp
mov
push
sub
inc
cli
push
pusha
add
ret
dec
int3
pop
sbb
ret
push
inc
jmp
lea
psubq
push
mov
fisttp
push
loope
cmc
cld
aaa
and
push
fisttp
xor
lahf
test
es
jb
lods
cmp
inc
pop
not
sbb
or
xor
add
fmul
mov
cmp
xchg
push
sbb
and
jns
mov
ret
data16
ins
je
push
cwde
pop
ss
mov
stc
or
pop
jb
(bad)
addr16
imul
pop
push
lea
dec
cs
inc
iret
fmul
jnp
loope
mov
jb
stos
mov
pop
inc
ret
mov
inc
sti
mov
mov
sub
fstp
test
(bad)
pop
dec
fdivr
adc
sti
xor
ins
sbb
xlat
push
out
in
stos
inc
and
hlt
and
sti
adc
mov
daa
fwait
push
(bad)
out
inc
outs
inc
push
idiv
cmp
pop
ins
cdq
cmp
xor
sub
dec
and
pop
sbb
push
push
sbb
mov
and
lea
add
mov
shl
lods
mov
test
fs
ja
add
push
test
sahf
pusha
int
arpl
outs
imul
mov
test
mov
fwait
pop
jo
mov
ret
es
dec
addr16
cmp
hlt
jbe
ficom
cmps
mov
pop
mov
dec
data16
adc
ret
add
xchg
mov
push
mov
or
int3
push
or
nop
scas
int
mov
sti
aad
ins
cwde
pop
in
cmp
fbstp
(bad)
(bad)
out
jecxz
daa
test
inc
cmc
daa
jo
and
popa
scas
xor
call
sub
(bad)
adc
jp
out
call
js
push
out
shl
lahf
ins
mov
inc
aad
div
(bad)
cmp
fs
sub
dec
mov
fwait
iret
mov
push
inc
cdq
rol
or
push
cmp
(bad)
enter
lods
retf
push
in
jbe
out
ror
sbb
lds
xchg
jb
sub
(bad)
(bad)
scas
loopne
xchg
pop
xor
sub
jne
shl
mov
out
sti
and
cmp
(bad)
test
jp
sub
ss
mov
sahf
and
scas
in
fild
add
mov
imul
or
mov
lock
cmp
dec
call
int3
mov
cmp
dec
jns
pop
jns
xor
(bad)
mov
pop
mov
icebp
mov
jnp
lods
cdq
add
jge
fild
or
mov
mov
cmps
popa
jne
mov
adc
xor
mov
inc
loope
pop
neg
js
fs
js
in
xor
cmp
adc
addr16
ds
mov
sub
sub
push
mov
lahf
lahf
and
fst
call
(bad)
pop
jb
adc
mov
std
arpl
rol
adc
xlat
mov
repz
dec
aad
aas
or
in
add
xchg
add
push
cmp
in
cmps
adc
cli
mov
dec
fwait
es
mov
xor
xor
mov
pop
cmp
out
fistp
pop
lods
jno
ss
xchg
mul
js
and
retf
mov
stos
fild
mov
sub
cli
sub
call
ins
mov
jb
push
into
shl
icebp
mov
bound
mov
ds
retf
push
div
mov
fwait
outs
xchg
sahf
outs
lds
or
leave
and
dec
jb
adc
js
xchg
shr
add
movs
pop
mov
pop
xchg
xchg
add
js
in
jmp
jne
pop
xchg
(bad)
inc
mov
add
sbb
sub
xchg
aas
retf
call
xor
dec
sub
adc
pop
xchg
mov
mov
mov
stos
xchg
sbb
mov
mov
movsx
inc
or
out
adc
into
repz
inc
das
retf
and
jns
jbe
sahf
rol
jmp
mov
cs
xor
mov
jbe
fistp
rol
mov
(bad)
jae
pop
popf
mov
add
retf
mov
mov
(bad)
xchg
outs
cmps
ss
xchg
outs
fs
push
dec
aaa
add
inc
hlt
pop
mov
aas
mov
sbb
rol
imul
retf
xlat
into
es
mov
adc
js
out
pop
dec
out
dec
push
(bad)
push
push
mov
inc
or
xchg
jae
jns
mov
clc
dec
mov
ds
mov
mov
scas
xlat
scas
jb
movs
or
std
scas
pop
(bad)
sbb
jmp
cmp
inc
jg
fdiv
jno
xor
popf
leave
shl
sbb
and
aaa
hlt
bound
sbb
in
mov
and
pop
lods
add
and
sbb
mov
ja
loope
addr16
and
xchg
xchg
pop
adc
sbb
pusha
ins
(bad)
retf
mov
cmc
loop
out
ins
xchg
call
push
out
inc
scas
(bad)
mov
loop
enter
jno
loop
cmp
dec
mov
ins
mov
in
out
add
push
inc
gs
xor
fstp
pop
sub
cmp
add
cmp
xor
loop
ds
imul
call
jnp
dec
test
ja
sub
mov
mov
add
xor
mov
adc
push
aaa
xor
in
jae
jp
cwde
pop
inc
int
std
cld
mov
cmp
ins
(bad)
retf
xchg
cs
xchg
imul
pop
std
inc
mov
cmc
inc
jnp
nop
mov
(bad)
dec
mov
add
mov
sti
aad
mov
xor
clc
inc
cmp
in
test
dec
and
add
dec
clc
repnz
pop
or
sahf
imul
adc
cs
pop
out
movs
in
loope
imul
shr
cwde
mov
push
sub
and
stos
in
sub
cmp
rcl
pop
xchg
or
add
jb
or
fisubr
ror
icebp
jle
fimul
inc
inc
daa
push
mov
fadd
mov
popa
sbb
iret
shl
fcom
outs
add
inc
addr16
ret
int3
aaa
ds
out
shl
mov
scas
pop
sub
psrld
dec
test
cmps
mov
jle
das
mov
xchg
mov
outs
push
adc
xchg
movd
mov
add
or
mov
adc
arpl
sub
in
xor
in
call
dec
(bad)
scas
pop
mov
rol
add
cmc
inc
jl
pop
cmp
ss
(bad)
(bad)
push
rol
shl
mov
fcomp
repnz
nop
cmp
pop
repnz
inc
ds
mov
(bad)
mov
mov
lea
shr
loope
pushf
lsl
jl
popa
mov
mov
jmp
jge
rcr
(bad)
in
sub
dec
xor
movs
scas
sub
push
pop
sbb
daa
add
xor
bound
fild
cmps
mov
jne
jp
mov
mov
push
xor
inc
mov
and
and
leave
mov
loopne
jmp
or
mov
add
or
cld
adc
in
xor
inc
and
lods
sbb
sub
test
dec
mov
mov
or
xchg
repz
dec
dec
push
fcmove
imul
popf
pop
xchg
cwde
cmps
fwait
xchg
dec
imul
push
out
and
ds
mov
fwait
cmp
std
jne
imul
sbb
push
push
dec
push
push
jb
sub
add
xchg
mov
inc
ret
fimul
or
or
test
aaa
fld
or
stos
sub
ret
aaa
fstp
fisubr
jle
sub
ins
sbb
pop
cmps
dec
adc
(bad)
pop
xor
mov
jbe
xchg
mov
jecxz
xchg
retf
jp
imul
out
daa
inc
imul
ror
or
in
lea
mov
arpl
mov
jno
sbb
sbb
aaa
jns
jne
movs
dec
mov
lea
jmp
add
mov
jo
es
(bad)
shr
mov
adc
push
inc
aas
push
les
test
push
inc
(bad)
lea
es
sub
push
inc
cmp
xor
cmps
push
fmulp
inc
and
xor
cmc
hlt
leave
or
icebp
mov
loope
mov
(bad)
push
and
int3
sbb
test
xor
inc
inc
and
and
or
cmp
(bad)
push
int3
movs
inc
or
movs
mov
jl
and
dec
aam
retf
pop
push
mov
test
pop
mov
jae
xchg
mov
push
push
pop
bound
mov
imul
or
in
ja
test
or
repnz
sbb
ss
and
lahf
loopne
out
adc
mov
dec
xor
xor
cmp
data16
call
and
xor
or
mov
repnz
dec
xor
sar
jmp
nop
cld
xor
xor
add
adc
pop
jecxz
shr
(bad)
mov
stos
mov
sbb
fst
cdq
mov
fmul
lods
pushf
jle
mov
dec
mov
mov
push
outs
xor
sbb
loop
xchg
cmp
push
out
dec
out
outs
push
retf
inc
icebp
dec
dec
clc
cld
mov
fidiv
arpl
dec
add
xchg
clc
cmc
fidiv
dec
mov
lods
repnz
and
mov
push
fsubrp
inc
mov
sub
mov
dec
sub
jns
das
add
xchg
inc
mov
inc
xor
cmp
sahf
cwde
clc
pop
test
clc
fcom
cmp
fcomp
cmp
mov
ror
das
pop
inc
cdq
or
jne
push
push
mov
fld
push
clc
jmp
test
adc
pusha
cmp
push
arpl
repnz
pop
mov
test
jl
retf
inc
cmp
aam
movs
cmp
cmp
ret
imul
jnp
mov
les
or
jno
(bad)
cmp
jbe
sub
cmp
in
pop
xor
sbb
sub
ins
pop
xchg
inc
adc
xchg
fistp
mov
xor
or
test
xor
call
daa
jge
mov
imul
sub
(bad)
mov
dec
sar
in
aad
mov
jmp
adc
mov
xor
push
scas
adc
pop
xchg
cdq
(bad)
cmp
dec
repnz
call
fisttp
inc
pop
icebp
pop
fnstenv
mov
jg
or
cmps
(bad)
dec
int
leave
(bad)
adc
mov
mov
dec
popa
push
sub
jmp
sub
jbe
leave
je
pop
mov
movs
lds
js
not
push
sub
adc
inc
hlt
je
test
jge
cwde
sahf
repz
sbb
std
(bad)
stc
xchg
cs
or
mul
mov
cwde
ret
mov
jmp
shr
inc
int3
loop
data16
jbe
retf
imul
jmp
dec
mul
mov
pop
inc
xchg
je
sbb
(bad)
imul
sbb
jo
fisttp
stos
inc
dec
xchg
pop
daa
mov
shl
es
retf
mov
scas
lea
cmp
cs
and
popa
xchg
sbb
cmp
in
mov
jo
pop
cmp
ret
gs
xor
jmp
adc
stos
ins
mov
fwait
es
enter
das
sub
das
adc
xor
scas
stc
enter
cmc
push
inc
sar
xor
pop
mov
fisttp
or
sahf
pushf
push
inc
fsub
repnz
fldcw
mov
push
stc
in
xchg
inc
xchg
cmp
idiv
neg
aam
test
adc
test
jmp
je
fcomp
out
mov
retf
mov
pop
sub
dec
add
test
ins
dec
shr
(bad)
or
ret
jno
ror
mov
popa
out
enter
not
push
cli
imul
inc
lahf
pop
test
stos
cmp
mov
inc
xchg
push
lods
(bad)
mov
sbb
imul
push
stos
dec
xor
dec
xor
jmp
or
(bad)
jo
inc
dec
mov
jb
test
sub
clc
popa
cmp
sbb
mov
mov
add
and
fwait
or
mov
mov
jle
hlt
sub
pop
mov
pop
fsub
test
lock
mov
inc
inc
fnstsw
add
push
imul
cmc
jo
add
push
xchg
ins
add
fnstcw
jecxz
loopne
sub
aas
pop
cmp
xor
dec
mov
or
xlat
daa
jl
repnz
pop
nop
inc
pop
rcl
mov
xchg
stos
imul
movs
pop
push
sar
dec
jmp
test
sbb
enter
ret
lea
sbb
sub
jmp
(bad)
imul
iret
addr16
xchg
repnz
add
ret
sub
sub
cmc
nop
arpl
or
jecxz
jp
dec
scas
enter
ret
cmps
push
jno
out
sbb
sub
pop
mov
test
es
loop
cmp
sub
inc
or
rol
loope
enter
jo
ss
mov
out
out
pop
and
mov
xchg
jbe
ror
das
ins
add
xor
mov
cmp
bnd
mov
lahf
push
inc
push
push
fsubp
bound
mov
dec
test
cmp
and
xchg
mov
popa
mov
pop
cmp
add
fwait
aaa
les
dec
repnz
pusha
imul
mov
jo
fs
shr
push
popf
fnstenv
hlt
mov
js
int3
mov
aas
add
dec
xchg
outs
pop
gs
nop
jg
repnz
inc
hlt
stc
jl
pusha
div
out
int
add
pushf
jmp
push
stc
sub
fs
adc
add
jg
cmp
cli
sub
push
enter
xchg
mov
mov
stos
sbb
push
dec
pop
dec
stos
leave
mov
jmp
adc
inc
fcomi
sub
retf
mov
mov
pop
popa
mov
jae
and
movs
call
imul
jecxz
aad
adc
repz
xor
jmp
inc
or
out
loop
xor
mov
sbb
(bad)
dec
sbb
mov
popa
scas
fst
inc
xchg
(bad)
imul
dec
loop
lea
push
enter
sbb
xchg
fld
ja
jmp
mov
push
adc
adc
xlat
cdq
lea
mov
mov
inc
adc
ds
push
xchg
std
mov
mov
xchg
pop
xor
adc
sub
cli
out
leave
add
outs
pop
test
xchg
add
ror
add
cmp
(bad)
dec
scas
test
loopne
adc
lds
pop
add
adc
xlat
cmp
int
xor
movs
jmp
sub
jg
nop
inc
cmp
hlt
sub
xchg
ret
xor
push
push
popa
scas
call
inc
(bad)
and
mov
mov
cmc
(bad)
xlat
pop
jge
cwde
mov
inc
and
setb
rcl
sub
jg
out
call
aad
ret
sub
outs
jmp
push
lock
add
xor
(bad)
pushf
pushf
shr
add
push
or
jbe
in
rol
stos
fsubrp
arpl
mov
xor
rol
xchg
sbb
imul
inc
ret
mov
movs
cld
mov
mov
dec
ret
push
repnz
inc
dec
std
int3
fst
sar
xchg
xor
out
les
inc
dec
cwde
mov
and
clc
push
fdiv
test
adc
cld
mov
mov
cbw
dec
mov
out
mov
cmp
fnstsw
fsub
jp
dec
inc
mov
jmp
shl
mov
jmp
daa
cmp
les
adc
ja
sbb
ins
inc
in
pop
adc
(bad)
mov
inc
out
cmp
sub
cmp
sub
aaa
xor
test
xor
cmp
or
push
nop
mov
adc
and
push
pop
mov
test
pop
adc
jnp
or
scas
mov
cmp
inc
das
(bad)
dec
push
addr16
sbb
jnp
xchg
push
loope
adc
mov
and
(bad)
mov
retf
shl
push
or
jecxz
mov
cwde
add
icebp
aam
sbb
jge
push
gs
xor
inc
mov
or
mov
mov
mov
push
inc
mov
sti
inc
sti
ret
test
stos
pop
xchg
aas
push
retf
js
sub
jae
mov
lock
ss
jnp
sar
fsubr
sahf
add
stos
sbb
fldz
not
mov
nop
outs
mov
push
pop
push
or
ds
fdivr
cmp
adc
pop
sub
arpl
inc
(bad)
dec
dec
push
cdq
dec
pop
jecxz
test
cli
sub
xchg
pop
jp
jge
(bad)
jl
in
enter
enter
call
xor
out
inc
and
pop
(bad)
cmp
das
mov
jne
sbb
sti
push
ficomp
adc
aas
pop
inc
out
mov
cmp
inc
and
lods
pop
mov
fcmovbe
pop
xchg
jo
cs
les
or
imul
mov
stc
xchg
shr
je
inc
hlt
popa
out
aam
fild
into
outs
in
mov
sbb
iret
rcr
jne
outs
mov
pop
pop
cmps
out
out
mov
cmp
hlt
int
mov
call
cmp
push
and
mov
icebp
enter
ret
int3
cwde
cmp
mov
pop
jnp
or
mov
add
pop
push
adc
dec
loopne
lahf
or
inc
jbe
scas
pop
and
(bad)
iret
push
sbb
ins
push
ret
nop
jmp
movs
push
mov
push
push
push
sbb
xor
mov
fcom
sbb
mov
adc
cdq
xchg
sbb
fistp
push
lods
adc
daa
mov
inc
cmc
jae
jle
repnz
data16
or
sub
mov
pop
adc
lock
sub
sbb
out
sahf
cmp
cdq
pop
mov
fs
test
mov
mov
xlat
loope
xor
mov
sbb
mov
or
pusha
or
mov
bound
adc
mov
mov
dec
push
xchg
scas
(bad)
sti
sub
icebp
and
mov
pop
mov
imul
lahf
hlt
out
inc
dec
sub
or
add
icebp
add
inc
cs
fs
mov
outs
bsf
cmps
out
xor
xor
sub
inc
adc
stos
push
xchg
loope
icebp
cmp
fmul
mov
cmp
(bad)
mov
inc
mov
out
not
inc
shl
bound
jnp
stc
adc
xlat
es
fist
dec
mov
pop
nop
xchg
cmc
sar
mov
ret
xchg
add
add
and
xchg
loope
out
cdq
out
sub
fwait
pop
jno
push
mov
dec
and
jns
pop
fimul
mov
mov
push
aad
ins
xor
scas
movs
cmp
dec
clc
jl
mov
mov
test
push
neg
jl
or
xor
and
vpcomb
inc
lods
fs
mov
mov
js
addr16
pop
jle
xchg
frstor
ret
sbb
js
inc
cwde
int3
xlat
sub
and
shr
jmp
jp
ret
int3
add
mov
js
mov
mov
addr16
push
mov
je
fsubr
push
mov
add
out
push
or
in
icebp
mov
jmp
mov
mov
mov
adc
cmp
hlt
pop
pushf
xchg
cmp
push
sbb
xor
pop
xor
push
xor
jae
sub
inc
xchg
xor
jle
mov
jnp
add
xchg
es
inc
sub
inc
add
fsub
adc
pop
jne
mov
std
hlt
in
pop
rcl
dec
bound
mov
cmp
dec
mov
or
aas
imul
sub
(bad)
ror
sub
idiv
add
adc
sbb
push
aaa
and
and
test
(bad)
aad
adc
call
jae
outs
clc
inc
(bad)
ror
lahf
inc
cmps
inc
mov
aam
mul
test
fwait
ret
aam
mov
jmp
popa
sub
fdiv
in
and
fadd
adc
fxch
sbb
mov
sar
push
pop
fistp
mov
cs
mov
fwait
lea
adc
dec
paddw
(bad)
sub
add
and
xchg
xor
push
lds
and
data16
xor
and
jno
adc
mov
ret
outs
pop
sub
push
addr16
mov
(bad)
das
stos
sub
scas
pop
in
xor
sbb
inc
inc
cmps
(bad)
ds
js
or
mov
pop
sbb
sbb
or
imul
lock
inc
dec
or
pushf
pop
test
test
mov
out
cmp
inc
jmp
inc
cmps
push
ja
jp
mov
popa
out
les
jle
in
push
push
add
jge
sar
shr
or
or
xor
jne
and
je
sbb
or
jp
movs
or
sbb
repz
addr16
iret
movs
sbb
movs
adc
or
imul
inc
jno
mov
jmp
mov
cdq
pushf
daa
out
popa
(bad)
icebp
das
movs
leave
outs
(bad)
dec
jno
fnsave
push
or
jo
push
je
js
es
stos
cld
adc
inc
(bad)
sbb
xchg
retf
push
add
data16
dec
dec
xchg
and
into
js
push
sbb
scas
movs
dec
call
dec
es
xchg
hlt
sbb
inc
loope
jbe
clc
loopne
mov
cmp
loop
shl
hlt
clc
retf
icebp
stc
inc
(bad)
xor
cmps
test
ds
push
inc
cmp
and
adc
in
cdq
mov
xor
sbb
dec
sub
inc
fxch
lds
ret
leave
(bad)
dec
xor
cmc
mov
xor
aam
cli
das
fcmovnu
pop
in
dec
loopne
pop
in
mov
mov
adc
jne
mov
(bad)
mov
pop
scas
pop
dec
dec
jbe
or
push
test
faddp
mov
push
popf
mov
cmp
aas
shr
pop
jo
adc
lock
push
or
pop
rcl
je
retf
or
jb
loopne
aam
test
mov
in
js
movs
cld
(bad)
fild
sti
xchg
sar
(bad)
or
mov
in
adc
inc
jbe
pop
mov
es
dec
sub
inc
and
dec
iret
mov
lods
push
icebp
pop
cmpxchg
data16
jnp
(bad)
pop
or
cwde
inc
mov
cmp
rol
cmp
fwait
add
jp
xchg
xchg
xor
cmc
inc
aad
ss
test
inc
mov
mov
dec
(bad)
cmp
xchg
cmc
call
jne
std
add
imul
cmc
cdq
jmp
stos
dec
ret
iret
xchg
add
cwde
or
int
lock
clc
outs
nop
xor
lock
sub
(bad)
(bad)
shl
sub
xchg
in
vmread
loope
dec
mov
pop
mov
std
ss
xchg
and
and
or
push
les
mov
or
ds
iret
retf
rol
pop
xor
jb
pop
cmp
push
jno
xchg
cmps
mov
sub
xor
test
aam
lods
and
stos
shl
push
pop
in
mov
and
dec
cli
rcl
mov
mov
jle
jno
jp
push
xchg
pop
fsubr
xchg
bnd
stos
fs
outs
adc
sbb
dec
mov
push
mov
add
pop
jl
scas
sub
test
repnz
aas
lods
in
mov
xor
call
(bad)
stc
ds
mov
test
pop
mov
bound
ss
sbb
icebp
ret
mov
dec
nop
pop
fidivr
sub
stc
jne
cmp
adc
mov
repnz
xchg
jb
push
aam
stc
and
je
push
aam
xor
mov
inc
jmp
jge
cmp
sbb
outs
mov
or
cmc
(bad)
jo
je
and
mov
icebp
adc
test
stos
mov
ja
sbb
pop
popa
mov
mov
cmp
dec
adc
jl
outs
xor
dec
call
(bad)
push
mov
pusha
add
jno
mov
xor
repz
xchg
add
pushf
pop
popa
or
icebp
popf
idiv
cli
call
xchg
lahf
xor
inc
retf
pop
stos
nop
or
dec
mov
clc
and
stc
push
div
jmp
out
dec
jne
ss
xchg
jb
jp
adc
sbb
cs
lahf
or
cwde
mov
sub
add
mov
daa
outs
cmp
jmp
add
dec
fdivr
pop
jbe
ss
iret
xchg
out
sahf
mov
ins
pop
cdq
or
lds
jmp
inc
test
add
adc
push
ins
aas
int
pop
out
cwde
into
jne
cli
scas
ret
push
das
imul
push
mov
ins
stos
xchg
mov
and
test
cmp
aad
call
push
fsub
aas
dec
ret
lods
(bad)
mov
sub
sbb
dec
test
scas
mov
imul
or
lds
ins
mov
inc
frstor
repz
test
push
hlt
std
movs
jns
lahf
call
inc
aam
test
ds
xor
cmp
daa
sub
daa
xchg
jae
test
(bad)
xor
shl
inc
pop
add
lods
adc
ret
jbe
push
xchg
(bad)
neg
icebp
pop
loop
jle
pop
test
mov
ret
pop
adc
js
loopne
cmp
cmp
in
xchg
push
(bad)
pushf
push
mov
fwait
test
test
hlt
or
popa
neg
ja
retf
dec
cmp
cmp
stos
jae
in
stos
fistp
cdq
test
xchg
rcl
and
call
pop
(bad)
repnz
pcmpgtd
fsub
stos
adc
sahf
mov
cmp
aaa
je
sbb
cmp
jmp
inc
aas
jae
in
cdq
repz
arpl
or
adc
xchg
enter
push
sub
xchg
lock
pop
icebp
jmp
sub
adc
mov
adc
cmp
loop
rol
cdq
ja
mov
push
movs
or
stc
mov
cmps
outs
jmp
enter
dec
fnsave
mov
fisttp
add
(bad)
mov
push
xor
pop
mov
das
jnp
addr16
es
mov
fs
mov
lods
add
fist
scas
mov
jge
sub
adc
add
sub
leave
xchg
add
les
inc
call
push
pop
and
rcr
or
retf
jg
inc
inc
cmp
lock
neg
sbb
mov
push
ret
xchg
dec
push
pop
inc
int3
movs
dec
and
xor
movs
jae
xbegin
ds
outs
mov
sar
mov
in
(bad)
mov
test
lock
pushf
fimul
inc
lds
(bad)
gs
xchg
jmp
adc
or
dec
jg
push
mov
pop
mov
in
mov
add
cmc
add
test
ins
inc
or
sbb
je
les
push
cmp
pop
and
ficomp
jo
push
dec
mov
pop
(bad)
cmp
int
loopne
mov
shl
stos
cmp
jbe
xlat
add
xchg
and
pushf
fcmovu
mov
mov
retf
cld
jbe
push
jno
push
xchg
adc
or
mov
(bad)
sub
(bad)
inc
dec
(bad)
dec
out
pop
dec
fadd
push
int
jp
cmps
js
aam
pop
jl
enter
sbb
icebp
(bad)
xor
mov
ret
test
or
je
inc
mov
fist
sbb
mov
cld
mov
scas
or
inc
jns
test
arpl
in
iret
push
or
dec
cld
sbb
add
dec
mov
dec
dec
jne
push
mov
add
xchg
or
xor
jo
adc
movs
mov
sahf
sbb
outs
mov
outs
jo
cmps
sti
addr16
into
arpl
mov
pop
add
addr16
add
(bad)
mov
cmpxchg
xor
hlt
(bad)
jle
out
jno
mov
and
retf
(bad)
xchg
mul
addr16
outs
jge
mov
icebp
lahf
cli
and
aaa
jle
cmps
aam
aaa
push
test
push
xor
das
xor
xor
shl
xchg
jp
pop
gs
jno
fmul
dec
sbb
hlt
std
jne
cmp
(bad)
xchg
ds
adc
jo
cld
in
call
cwde
out
js
mov
cmc
hlt
movs
ffreep
pusha
xor
push
push
fcmove
pop
inc
loopne
aas
cmp
mov
popf
inc
cmp
outs
adc
sub
fcom
hlt
or
sbb
retf
adc
in
mov
mov
mov
fild
std
and
dec
jno
or
lds
and
push
adc
lods
cmp
in
retf
hlt
push
(bad)
sahf
call
movs
jmp
sahf
mov
adc
mov
sti
stc
mov
dec
lahf
dec
jmp
cs
out
data16
inc
outs
stc
out
cmps
stos
jns
mov
push
pop
cli
or
jb
(bad)
cmp
inc
jecxz
inc
jmp
(bad)
add
retf
mov
sbb
or
pusha
in
jmp
repnz
mov
xchg
loop
sbb
imul
fadd
pop
fstp
push
sub
fwait
pop
adc
iret
seto
cs
add
jns
cmp
mov
fild
(bad)
scas
add
pop
(bad)
sub
sbb
lods
mov
ret
or
xor
push
inc
mov
fwait
gs
test
mov
sub
lahf
add
jg
or
add
inc
cld
jp
scas
push
repz
and
loopne
add
pop
mov
inc
cs
gs
lahf
cmc
in
pop
sbb
xor
or
pushf
fs
movs
inc
bound
sub
lods
sub
hlt
cdq
dec
(bad)
jle
dec
ss
xchg
stos
je
leave
cmp
gs
or
adc
or
adc
int3
pop
movs
mov
gs
sub
in
into
inc
adc
mov
ins
mov
iret
adc
adc
stc
mov
shl
cwde
das
dec
mov
mov
sbb
push
mov
mov
hlt
inc
rcr
cs
jno
fcom
jo
sbb
add
xchg
mov
cmps
stos
and
push
add
in
retf
dec
dec
mov
mov
mov
cmp
mov
cmp
loope
into
ss
daa
out
inc
iret
(bad)
add
out
inc
fmulp
sti
out
sub
push
jp
div
jb
jecxz
jecxz
cmc
mov
ret
bound
hlt
out
push
repz
popa
and
scas
fldcw
rol
mov
(bad)
mov
sbb
mov
mov
outs
or
les
clc
xor
adc
mov
push
inc
int
(bad)
das
xor
mul
jo
(bad)
mov
xchg
adc
das
lods
push
mov
cmp
outs
jle
nop
or
fnstcw
bound
scas
loopne
pop
xchg
and
dec
sub
or
pop
sbb
jl
arpl
jae
xor
pandn
push
pop
and
sbb
aam
jb
jno
or
and
es
iret
mov
pop
xchg
popa
cmp
adc
aaa
xchg
mov
mov
mov
mov
pop
push
jae
out
cmp
push
pop
mov
sbb
in
xor
sub
addr16
add
and
stc
push
inc
fsub
mov
stos
shl
and
test
inc
js
shl
(bad)
jmp
hlt
loop
dec
lock
xchg
push
push
rol
push
pushf
repnz
add
mov
sti
pop
movs
movs
sub
test
jno
mov
int3
xchg
rol
sti
nop
mov
cwde
test
cmp
mov
sub
cmp
adc
sub
xor
movs
call
fistp
jns
cld
loop
inc
push
movs
scas
in
pop
adc
xor
sbb
das
dec
adc
adc
add
sub
push
sbb
or
mov
inc
dec
pop
popf
aas
mov
loopne
gs
pop
cdq
(bad)
xchg
push
mov
adc
ss
add
or
call
jno
mov
jmp
dec
and
and
js
mov
sbb
inc
test
or
xor
out
(bad)
mov
inc
leave
and
in
cmps
xor
and
imul
push
(bad)
enter
jle
xlat
and
xchg
clc
pusha
stos
add
imul
inc
sbb
add
mov
cmovae
add
ficom
push
push
movs
push
or
imul
dec
sub
push
ret
sub
cmp
jbe
dec
iret
jle
xchg
jg
push
sbb
sbb
int
push
stos
idiv
repnz
mov
mov
or
pusha
mov
fimul
das
(bad)
jl
ins
xor
pushf
pop
jo
cmp
cmp
and
mov
jecxz
adc
mov
or
cmp
bnd
mov
(bad)
stos
adc
or
jmp
or
xchg
sbb
scas
jge
sar
xchg
les
js
xchg
mov
in
gs
movs
cmp
pop
xor
(bad)
aam
add
fs
push
imul
in
shl
pop
xor
and
cld
mov
adc
call
mov
push
scas
xor
mov
add
(bad)
jmp
cmps
xchg
pop
push
mov
xor
cmp
lds
loopne
dec
jl
jg
adc
les
mov
xchg
aaa
jge
int
fadd
jbe
mov
leave
push
pop
out
cli
mov
ss
cld
lods
je
cmp
jg
mov
cmp
xchg
lea
pop
addr16
sbb
add
xor
sbb
or
imul
mov
test
(bad)
loopne
in
dec
icebp
iret
(bad)
call
sbb
xlat
jmp
hlt
test
std
stc
and
into
add
xor
jo
(bad)
mov
loop
pop
push
and
sub
or
sub
push
inc
mov
stos
stc
test
or
mov
mov
imul
ins
(bad)
xchg
outs
jae
xor
xchg
out
or
lods
push
jbe
mov
push
arpl
mov
sbb
jb
xlat
popa
xchg
jmp
(bad)
mov
sub
clc
rol
test
inc
loope
movs
loopne
adc
sub
hlt
xchg
xchg
xchg
jne
rcl
xchg
retf
jle
dec
jne
mov
mov
fld
mov
or
stos
scas
fnstenv
fist
inc
jno
into
(bad)
repnz
iret
jne
cmps
adc
jge
in
(bad)
aad
adc
xchg
aam
sbb
cmps
inc
in
into
test
mov
xchg
les
inc
loope
ja
lahf
cmps
lock
adc
int3
jne
inc
mov
loop
add
clc
aam
lods
mov
push
or
cmps
mov
movs
leave
mov
adc
xchg
adc
push
out
aas
out
xchg
pop
cmps
cdq
outs
cmp
jb
push
icebp
mov
and
sbb
adc
mov
imul
stc
aas
ficomp
mov
xchg
pop
pop
repnz
test
cmps
xor
adc
sbb
cld
repnz
and
mov
add
fisubr
add
mov
mov
push
push
stos
das
push
xchg
xchg
pop
or
push
cmp
mov
not
clc
sub
out
inc
jae
jns
inc
repnz
add
pop
neg
or
xchg
sbb
xor
imul
mov
mov
or
inc
mov
in
pop
adc
retf
jno
xor
(bad)
push
out
xor
lea
js
in
lock
push
adc
(bad)
cmps
popa
pop
pop
mov
cmp
inc
(bad)
aad
inc
or
mov
shl
add
fnstcw
xlat
dec
(bad)
ret
sahf
pop
adc
and
enter
outs
add
rcl
dec
das
sub
(bad)
not
pop
push
push
int
push
mov
push
mov
int
leave
shr
mov
mov
ret
movs
je
inc
or
fstp
cmp
push
pushf
mov
pop
repz
mov
es
jnp
aaa
out
fs
add
and
cmps
inc
leave
add
mov
sti
popf
fbld
sub
loope
push
out
push
push
fwait
inc
fist
push
addr16
ss
mov
jle
scas
cwde
mov
push
mov
mov
cmp
pusha
aas
xchg
jbe
dec
enter
mov
xchg
xlat
jno
xlat
fnstenv
call
inc
and
gs
ins
fist
sub
inc
xchg
jmp
inc
mov
test
push
ins
or
jne
dec
inc
jo
fild
outs
adc
lahf
sub
and
loope
stos
mov
in
add
xchg
jnp
daa
mov
dec
cli
imul
aam
fnstcw
jg
enter
inc
movs
das
div
aaa
stos
cld
into
lahf
mov
rol
fld
xor
add
add
xor
js
cmp
outs
test
aaa
inc
dec
xchg
cmp
mov
xchg
loop
xchg
imul
adc
dec
les
inc
fs
and
xor
popf
push
mov
ja
mov
sti
in
push
pop
cs
xor
pushf
ins
nop
lock
lods
or
(bad)
cmovl
jnp
push
out
lds
push
jmp
adc
jb
mul
pop
outs
sar
mov
test
test
cmp
pop
push
add
gs
mov
shl
xchg
popw
scas
add
outs
stos
ja
fisub
jmp
jnp
inc
imul
ds
xchg
cmp
cs
adc
sar
add
sub
sbb
add
scas
int3
or
push
cmp
fistp
je
sbb
test
lea
adc
hlt
add
push
in
das
pop
mov
sbb
cmp
cwd
out
inc
inc
les
jmp
mov
retf
stc
movs
(bad)
pop
sbb
inc
xchg
ret
xor
shl
adc
fwait
daa
(bad)
movs
stc
outs
push
inc
lock
imul
xchg
and
adc
push
cmp
mov
and
call
test
test
pop
push
imul
fstp
or
xchg
adc
pop
pop
pop
mov
xchg
ret
push
sub
mul
push
push
fiadd
sub
xchg
mov
adc
std
inc
je
jns
das
fldenv
(bad)
fbstp
lahf
add
lods
pop
(bad)
rcr
sar
fidiv
dec
jae
cmps
rcl
adc
lods
mov
cmps
jl
out
imul
pop
leave
fstp
inc
arpl
lock
jp
or
mov
idiv
retf
push
push
sub
push
test
aaa
mov
and
in
pop
imul
mov
and
push
inc
lock
call
xchg
adc
cld
sbb
cmp
sub
cmp
jbe
mov
mov
js
or
popa
mov
in
add
das
iret
mov
jne
or
mov
dec
outs
xchg
lea
push
mov
xchg
cmps
cli
loopne
in
out
push
aas
pop
sub
or
push
lods
ficomp
push
cs
mov
and
idiv
mov
daa
fiadd
sub
lods
rcl
vpcomb
data16
xchg
call
(bad)
comiss
jge
mov
rol
mov
data16
xchg
push
push
sar
jns
mov
fbld
dec
adc
(bad)
cmp
and
mov
lods
icebp
test
push
jecxz
push
in
jl
outs
jle
out
mov
int
sbb
ins
sub
arpl
pop
inc
gs
and
jb
cdq
sbb
test
xor
(bad)
sbb
push
or
neg
enter
stos
sbb
sbb
mov
mov
fwait
mov
inc
es
sub
jle
test
popf
lds
call
es
inc
or
lods
(bad)
jne
and
jg
mov
fs
popf
mov
fdivr
je
cmps
sub
stc
cld
sub
xor
call
or
jo
rcr
lds
fst
xor
mov
call
loope
outs
jnp
test
sub
add
pop
mov
push
push
inc
dec
ja
adc
je
add
pop
sbb
test
popf
js
inc
push
mov
cmp
sahf
inc
add
sahf
and
push
push
mov
js
pop
xor
jne
and
cwde
cmp
icebp
test
cdq
loopne
aaa
push
jmp
add
or
test
ja
xlat
pop
sbb
sbb
call
mov
inc
pop
ins
bound
xchg
call
les
enter
dec
or
aam
(bad)
mov
lock
jno
jns
jg
fs
xor
mov
test
jmp
pop
and
in
push
aam
xor
ins
stos
jge
xor
jle
jmp
or
mov
and
cdq
sahf
rol
loopne
push
mov
or
or
popa
pop
sub
mov
movs
mov
mov
mov
mov
popf
das
pusha
mov
pop
fsubr
xchg
cwde
into
push
es
sahf
add
inc
inc
add
mov
imul
outs
push
(bad)
push
fisubr
js
jge
inc
jb
push
lahf
jne
add
or
(bad)
mov
sti
cdq
push
lock
enter
shl
sbb
rcl
cmp
dec
or
mov
cmp
mov
pop
shr
call
xor
cmp
mov
sub
call
aad
xchg
inc
enter
fs
jge
addr16
sbb
out
push
call
mov
imul
(bad)
pushf
cmc
test
dec
scas
pop
xor
test
mov
int3
repz
add
pop
test
sub
arpl
pop
sub
div
(bad)
retf
and
mov
dec
jno
arpl
arpl
mov
and
shl
stos
imul
jge
jbe
xlat
and
sbb
and
sub
push
mov
jg
sub
push
cmp
jl
cmp
and
sub
shl
mov
jmp
rcr
idiv
dec
jg
(bad)
xor
imul
movs
movs
sbb
xchg
shl
aam
cmps
pop
scas
mov
cld
pushf
sub
pop
jnp
mov
daa
rcr
gs
cmps
rol
dec
ds
fcomp
fnstsw
cs
repz
and
pop
loop
push
repnz
or
(bad)
and
xor
xchg
out
fcom
sbb
jno
fnstenv
dec
jae
jge
jge
xor
js
repz
mov
out
addr16
mov
jnp
or
push
loope
cmp
loopne
jg
movs
rcpps
mov
imul
push
xor
pop
test
je
or
out
cwde
int
aaa
sub
pop
jp
movs
pop
cmp
test
retf
sbb
sti
pop
push
jb
repnz
jbe
xchg
iret
push
pop
(bad)
sar
shr
pop
in
sub
or
xchg
push
jmp
and
jns
das
xor
int3
jae
stc
hlt
(bad)
lods
in
pop
push
sbb
and
(bad)
aam
sub
jl
push
aas
jbe
in
pop
jne
pushf
mov
cdq
mov
xor
sbb
pushf
dec
fimul
int
add
sub
inc
fcom
ins
ret
adc
and
int3
popa
leave
xchg
cmps
jo
push
xor
retf
jb
in
adc
cmc
mov
out
stos
(bad)
cmp
ins
sar
push
add
or
aas
add
leave
jge
mov
(bad)
xchg
call
hlt
cmps
xchg
mov
mov
or
inc
sar
pop
mov
inc
mov
xor
or
fbstp
out
xchg
mov
jae
jns
pop
imul
dec
outs
int
out
and
icebp
jnp
or
or
jmp
mov
jno
fwait
mov
inc
loope
(bad)
pop
jp
int
jg
push
jmp
es
sub
push
call
loope
retf
aaa
fwait
dec
arpl
ffree
cdq
jb
jbe
jmp
lods
xor
daa
fnstcw
fcom
in
push
mov
and
stos
pop
and
sahf
ins
stos
dec
xor
mov
scas
add
xchg
stc
enter
(bad)
and
call
aas
in
inc
sub
mov
sbb
pop
push
push
dec
(bad)
fst
or
inc
in
fs
dec
je
mov
or
inc
inc
xchg
push
idiv
pop
(bad)
outs
popa
jbe
pop
rcr
inc
dec
aam
xchg
int
sbb
cmp
adc
aam
push
outs
mov
shr
xor
sbb
data16
dec
mov
ja
cmp
inc
inc
push
add
sahf
push
nop
mov
xor
push
mov
push
sub
pusha
outs
pop
jo
xchg
dec
push
aaa
aad
adc
loopne
or
push
xchg
pop
movs
test
mov
scas
aaa
cld
xor
ins
xchg
les
add
and
bound
xor
popa
jmp
cwde
mov
jno
adc
scas
int
stc
cmp
pop
sub
jae
inc
jbe
mov
add
xor
aam
movs
add
cmp
(bad)
shl
sti
push
dec
cmp
add
ror
(bad)
sar
mov
(bad)
movs
jle
pop
shr
inc
cld
mov
test
lods
cs
pop
xor
mov
leave
jne
mov
hlt
arpl
mov
adc
call
mov
enter
mov
dec
mov
mov
aaa
(bad)
aam
stc
ror
das
inc
pop
in
fadd
fmul
aaa
lock
movs
leave
mov
sti
(bad)
(bad)
int
inc
push
in
mov
or
dec
js
arpl
adc
add
ror
(bad)
fldcw
lods
repnz
mov
stos
jp
fwait
lahf
test
test
sbb
out
add
dec
(bad)
mov
lock
mov
sbb
ja
(bad)
dec
nop
out
inc
mov
mov
addr16
aad
add
call
adc
pusha
add
mov
mov
test
cmp
les
mov
jae
js
push
jnp
cwde
imul
pop
adc
mov
imul
cmp
mov
das
xor
cmc
es
sbb
lahf
xchg
or
mov
lods
dec
cmps
sub
loop
ret
cmp
cs
inc
jg
dec
cmp
div
addr16
mov
mov
sbb
or
cli
nop
sbb
jae
fiadd
add
or
inc
mov
cmc
mov
shl
out
jle
mov
cmp
push
or
retf
xor
add
inc
cmc
fisttp
push
lock
adc
sbb
or
loopne
mov
and
imul
arpl
jb
jle
mov
ror
adc
pop
push
mov
in
fldcw
cmp
mov
fisub
fnstcw
mov
jecxz
jnp
add
sbb
mov
mov
out
cmps
pop
lock
bound
mov
push
in
mov
adc
scas
es
xor
out
scas
xchg
mov
js
sub
xchg
xchg
sub
xchg
mov
dec
mov
cmp
aaa
pop
push
retf
mov
inc
adc
or
int3
fbld
xchg
es
fwait
push
outs
jbe
shr
aas
jb
xchg
ins
je
push
shl
pop
dec
pop
out
sub
jge
cld
adc
dec
mov
dec
xchg
neg
retf
gs
ret
inc
push
stos
or
push
lahf
lahf
fild
jb
mov
xchg
cmp
imul
add
and
movs
sub
adc
mov
jb
repz
jg
lods
(bad)
(bad)
cmp
add
sbb
mov
and
and
sahf
mov
push
outs
loop
pop
ins
test
in
popf
mov
or
stos
mov
mov
bound
mov
cwde
aad
mov
inc
adc
pop
pop
push
loop
rcl
out
cmps
mov
test
loopne
daa
pop
out
je
inc
push
and
call
add
jns
or
or
cs
xchg
cmps
xor
jnp
inc
ins
stos
or
sbb
scas
shl
(bad)
or
jp
daa
ret
or
lock
lds
cmp
and
pop
jbe
dec
cmp
or
stos
aaa
cmc
js
mov
repz
mov
dec
ficomp
out
call
jns
gs
cmp
mov
dec
test
inc
ins
leave
pop
in
fadd
rcr
xor
ss
(bad)
jns
inc
aas
ret
cwde
outs
not
xchg
sahf
arpl
and
cmc
(bad)
in
inc
fdivp
mov
jno
call
jp
mov
pop
stc
jns
dec
mov
xchg
sbb
leave
rol
sbb
or
call
push
mov
push
aas
cmp
sub
inc
cmp
xor
jmp
bound
mov
jno
mov
retf
int
jge
and
sbb
jns
test
mov
js
mov
dec
dec
xor
ror
push
xor
add
mov
icebp
pop
and
and
add
jns
fsubr
dec
mov
inc
add
jbe
jmp
xor
sbb
or
(bad)
push
rol
inc
shl
adc
scas
pop
jb
mov
std
and
arpl
(bad)
mov
ds
jne
iret
ds
das
xor
jbe
fdivrp
jle
add
out
xor
push
arpl
mov
dec
sbb
inc
push
sub
jmp
out
mov
mov
and
out
fild
jno
imul
imul
(bad)
pop
movs
stos
popa
std
cmp
sbb
leave
mov
sbb
mov
dec
aad
inc
inc
aaa
cmp
add
pop
fcomp
popf
retf
jo
mov
rcl
shl
and
inc
jb
outs
jno
mov
xchg
mov
dec
outs
sub
xor
pop
imul
stos
rcl
test
stos
ins
mov
or
and
aas
mov
pop
and
sbb
push
mov
and
mov
jae
pop
mov
and
cld
inc
dec
enter
pop
or
cli
ror
add
mov
cmp
dec
adc
jnp
sub
iret
mov
cmp
pop
add
(bad)
shr
jecxz
inc
xor
test
fst
(bad)
and
jns
repnz
cmp
inc
jnp
daa
hlt
ret
xor
mov
hlt
icebp
pushf
and
xor
ud2
(bad)
jp
dec
jmp
int3
outs
cs
inc
mov
adc
inc
sahf
popf
rol
pop
xor
mov
push
in
in
aad
ds
in
out
lahf
div
push
pusha
jle
jg
adc
shr
test
js
nop
fsubr
addr16
icebp
push
das
bound
stos
test
(bad)
(bad)
repz
xchg
inc
shl
neg
lods
test
cli
das
arpl
adc
add
fpatan
inc
add
inc
jecxz
add
dec
xchg
fmul
and
jae
stos
lea
xchg
aas
sbb
in
popf
out
jle
xor
lods
ret
sbb
xlat
sub
popa
cmps
xor
dec
xchg
or
jecxz
clc
aas
dec
jmp
mov
loopne
shl
mov
xchg
sub
retf
mov
mov
cmps
(bad)
lods
fwait
mov
xchg
fidiv
jmp
dec
add
xchg
mov
sbb
inc
retf
stc
push
inc
add
sub
(bad)
in
ror
mov
stc
ret
das
test
and
stos
cmp
imul
shl
mov
movs
adc
jo
arpl
xchg
push
popa
test
pop
fistp
mov
test
xchg
in
pop
inc
push
aad
and
add
stos
(bad)
jae
mov
sbb
iret
iret
jecxz
fisub
mov
call
leave
ins
fmul
retf
inc
int3
jo
xchg
aam
adc
arpl
mov
dec
(bad)
outs
ins
gs
out
test
out
fisttp
jmp
push
sub
das
add
pushf
inc
adc
test
imul
js
inc
push
and
hlt
push
test
push
pop
sub
in
add
imul
jbe
add
push
inc
popf
xchg
repnz
mov
jge
or
(bad)
pushf
aaa
dec
cvtps2pi
sbb
(bad)
lea
jb
push
test
xchg
ret
movs
mov
adc
sbb
outs
retf
xor
ss
loope
sbb
inc
jns
leave
or
data16
mov
xchg
mov
cmp
ins
pushf
add
mov
call
scas
outs
cmps
push
retf
cmps
outs
mov
into
loop
mov
icebp
adc
leave
sub
mov
xlat
out
movs
rcr
push
jmp
push
lods
les
push
out
or
and
push
stos
ficom
cmp
es
in
xor
sbb
out
retf
pop
aaa
arpl
(bad)
iret
push
(bad)
aaa
mov
ror
xchg
push
mov
outs
(bad)
(bad)
adc
jmp
or
xchg
adc
push
add
cmp
mov
adc
dec
jb
push
arpl
daa
add
cmp
cmps
out
aad
icebp
aam
stos
jae
arpl
push
imul
les
dec
je
repz
test
std
sub
xchg
xor
mov
call
fisubr
mov
les
cwde
clc
adc
fcom
das
cmp
sub
push
(bad)
xchg
je
retf
sbb
mov
out
stos
sbb
xor
xchg
lea
mul
add
sahf
or
xchg
mov
(bad)
jge
sbb
loopne
(bad)
xor
jecxz
outs
xor
shl
inc
leave
clc
dec
(bad)
ds
pop
inc
fiadd
imul
pop
pop
cwde
add
popf
sti
dec
out
mov
dec
iret
jne
pusha
pop
test
leave
jge
add
aas
inc
pop
ins
movs
rcr
sub
das
out
inc
cmp
mov
pop
dec
scas
or
rol
inc
call
clc
cmp
cmp
fs
pop
cld
mov
adc
add
pop
jge
scas
out
adc
xor
lods
bound
sbb
push
into
jecxz
test
lods
jl
and
add
(bad)
cs
adc
or
imul
add
push
mov
pop
repz
pusha
push
mov
cmp
inc
outs
call
fmul
adc
popf
jo
outs
jbe
jns
mov
add
fcom
sar
sahf
addr16
push
popa
xchg
jmp
jge
mov
fwait
sub
(bad)
push
add
mov
call
jp
fwait
push
push
int
and
and
test
(bad)
jne
ficomp
call
dec
and
mov
into
int
xlat
cmps
stos
dec
mov
aas
push
in
inc
fsubr
push
and
in
sbb
and
cmps
cmp
mul
push
outs
jno
xchg
adc
add
push
mov
xor
fistp
outs
ja
adc
sbb
mov
jmp
out
into
imul
pusha
imul
ins
mul
mov
pop
mov
das
mov
(bad)
or
fnsave
outs
adc
pop
stos
add
and
ss
cwde
push
(bad)
(bad)
cli
imul
adc
icebp
mov
fsubr
nop
ins
mov
jae
cmp
mov
jns
push
sub
dec
repnz
push
adc
fadd
(bad)
loope
mov
mov
sub
jb
imul
repnz
add
loope
daa
(bad)
push
dec
sbb
jnp
cmp
outs
std
cwde
aaa
jmp
cli
cmps
in
jne
in
adc
mov
push
inc
or
push
cli
push
nop
imul
jae
ds
lds
je
jp
mov
push
jp
jno
int
cli
mov
pop
arpl
fwait
pop
sub
mov
dec
mov
mov
int3
pusha
repnz
cwde
mov
cmp
mov
xor
adc
sbb
(bad)
les
push
xor
mov
jns
cld
push
sahf
push
jns
test
push
fsubrp
pop
hlt
(bad)
jle
adc
fucomp
jo
call
jb
sub
in
stc
sti
aas
adc
shl
(bad)
pop
call
in
stos
sbb
sbb
shl
sbb
xchg
jnp
mov
or
and
pusha
inc
in
pop
mov
and
lods
inc
add
mov
popf
mov
movs
call
hlt
(bad)
sub
xchg
inc
dec
sub
xlat
pop
loope
sub
fcomp
dec
fs
cmp
inc
out
cmp
cmps
mov
dec
or
cmp
dec
jne
add
dec
adc
cmp
ss
inc
jg
loop
dec
loop
jge
gs
sub
std
fistp
data16
jno
cwde
aad
push
mov
(bad)
xchg
mov
and
pop
addr16
mov
rol
sub
les
xor
movs
std
sti
std
popa
mov
xor
push
mov
cmp
jp
or
push
sbb
stos
popa
sub
fidivr
test
lds
aad
mov
xchg
mov
fdivr
push
or
jno
ins
inc
mov
jb
ror
jge
push
(bad)
out
mov
xchg
dec
clc
inc
stos
pop
fisttp
mov
cmp
sbb
cdq
jns
inc
adc
or
push
jl
outs
pop
ficom
cs
mov
xor
adc
mul
sti
and
popf
or
adc
test
push
pop
and
mov
in
cmc
(bad)
hlt
xchg
push
inc
or
fild
xor
xchg
movs
inc
mov
aaa
rcl
lea
push
mov
xchg
inc
mov
(bad)
inc
and
xchg
push
xchg
ss
clc
fsub
jns
inc
ds
or
in
sub
les
sets
pop
stos
fldcw
xor
cli
and
call
push
fmul
mov
mov
add
cmp
ds
pop
ret
rol
ins
jp
pop
xchg
enter
scas
lds
cmc
jns
ins
(bad)
out
aas
add
lock
fcom
fs
mov
leave
xchg
add
add
jmp
sbb
out
adc
movs
enter
push
repnz
mov
or
xor
cmp
popa
pusha
mov
aaa
inc
or
pop
test
sar
mov
jne
retf
pop
mov
outs
mul
dec
lahf
sub
bound
dec
mov
mov
repz
call
test
scas
and
mov
jle
shl
inc
int3
push
lods
repz
mov
or
mov
(bad)
imul
out
sbb
pusha
inc
lock
(bad)
xchg
mov
or
popa
jl
inc
(bad)
jg
movs
inc
retf
pop
adc
cmp
popf
xchg
and
adc
and
sub
and
leave
mov
jge
and
inc
mov
cdq
pop
int
inc
mov
pop
ss
dec
mov
aam
test
(bad)
jno
mov
clc
mov
addr16
loope
je
imul
ret
cs
xchg
in
imul
cmp
cmp
sub
mov
imul
pop
loopne
push
mov
pop
and
pop
mov
pusha
dec
pop
outs
rcr
inc
add
sub
xchg
imul
(bad)
(bad)
out
int
inc
stos
xchg
out
push
std
cmc
into
aas
push
mov
sub
in
mov
cld
jmp
call
dec
xor
add
mov
daa
dec
xor
mov
sub
iret
les
xor
imul
daa
inc
movs
repz
lods
xchg
jmp
shl
ror
jo
adc
inc
test
cmp
push
cmp
push
sbb
jbe
idiv
ins
(bad)
push
pop
pop
retf
out
jb
mov
mov
xchg
repnz
jecxz
pop
adc
lahf
outs
fldl2e
pop
sub
inc
pop
or
loope
xchg
adc
and
or
cmps
xor
into
ret
loope
mov
inc
cld
test
int
js
xchg
cs
mov
dec
pop
popf
retf
push
cwde
or
jae
addr16
mov
push
(bad)
int
and
clc
jne
jmp
fdivrp
cmp
mov
xchg
dec
xchg
test
scas
mov
stos
(bad)
xor
sub
out
sub
sahf
add
adc
mov
jmp
ja
fisubr
add
ss
xchg
dec
jno
cmp
ffree
mov
jg
mov
rcr
jbe
std
mov
mov
xchg
fld
jecxz
or
push
and
fsub
or
dec
call
hlt
inc
loopne
test
pop
jo
(bad)
call
loopne
xor
loop
sbb
mov
out
mov
adc
sbb
cdq
repz
shl
mov
xor
into
jbe
out
add
mov
aad
mov
mov
shl
jmp
lods
cld
mov
cmp
push
xor
adc
inc
lds
ss
lds
idiv
movs
sub
ss
arpl
stos
aam
call
mov
(bad)
aam
or
mov
int3
and
sbb
pushf
pop
out
into
shr
pop
fwait
movs
cmps
pop
push
sbb
mov
sbb
xor
into
nop
sub
mov
icebp
mov
ja
addr16
enter
mov
inc
mov
pop
adc
movs
imul
inc
push
repz
loope
inc
and
add
xchg
pusha
xor
lahf
cmp
jbe
cmp
sbb
add
in
jecxz
lock
cmps
push
cmp
fs
ror
lock
adc
scas
leave
cmp
loopne
ret
loopne
and
or
imul
imul
push
lahf
push
mov
xor
outs
mov
jnp
pusha
add
push
mov
mov
xor
arpl
cmp
shl
out
sub
mov
dec
mov
and
push
fbld
stos
mov
jno
(bad)
fs
ret
jne
or
jno
cmps
icebp
pop
test
mov
fistp
mov
or
inc
fsub
call
imul
(bad)
mov
(bad)
mov
aaa
pop
in
enter
and
aad
mov
cmp
(bad)
lahf
mov
les
in
or
bnd
mov
mov
in
push
add
ret
(bad)
imul
mov
aad
(bad)
movs
pop
pushf
dec
call
out
mov
push
gs
out
mov
sahf
outs
mov
adc
lods
fninit
adc
adc
dec
mov
pop
cdq
(bad)
adc
mov
rcr
inc
lds
add
popa
in
inc
pop
out
xchg
jb
sub
add
or
std
jns
es
(bad)
mov
sbb
jg
dec
add
sbb
hlt
push
out
mov
jmp
or
jno
mov
loope
jnp
xor
fwait
xor
mov
xchg
cmps
adc
sbb
mov
adc
addr16
mov
sbb
out
dec
cmp
daa
shl
pop
dec
aam
aaa
xchg
dec
inc
dec
and
out
stos
sar
sbb
xor
clc
push
ins
xlat
push
jp
jg
test
neg
dec
dec
outs
add
inc
push
(bad)
sbb
push
push
inc
cmc
mov
mov
and
mov
stos
rcl
into
call
xor
scas
in
loopne
and
xchg
lock
enter
int
jns
xchg
mov
clc
shl
rcl
add
pusha
mov
mov
fnsave
out
lods
mov
fs
xor
aam
cmp
mov
retf
xor
add
inc
jno
mov
dec
mov
mov
lods
push
xor
mov
pop
sti
sbb
ins
xchg
popf
and
jb
scas
call
jmp
lods
adc
repz
mov
adc
cmps
leave
(bad)
sti
cmp
dec
cmc
loop
xor
sbb
cmps
in
and
jge
jp
xor
ss
data16
inc
add
sub
imul
fsub
std
idiv
out
mov
pop
or
or
addr16
mov
retf
push
dec
ja
xor
pop
adc
and
push
dec
dec
fldpi
popf
repnz
and
pop
cld
fldcw
push
movs
test
jecxz
movs
pusha
jg
imul
(bad)
loope
or
movs
or
xor
sub
movs
pop
stos
mov
add
pushf
or
sahf
mov
aas
mov
xchg
and
repnz
inc
mov
xor
adc
mov
dec
inc
neg
ins
call
jle
dec
stos
daa
pop
sbb
sbb
dec
inc
fisub
push
add
lahf
inc
(bad)
ins
imul
mov
push
icebp
add
cli
out
shl
inc
shr
inc
out
push
loopne
aad
push
cmps
int3
(bad)
aam
jno
shr
popa
movs
jbe
iret
sbb
adc
sub
dec
add
mov
(bad)
fistp
mov
not
mov
add
ret
out
test
add
jb
psrld
repz
jge
xor
aas
dec
pop
and
daa
lods
push
xor
test
aam
lahf
xchg
sbb
(bad)
mov
cli
jp
aas
sbb
sar
iret
adc
loop
jmp
ja
push
pusha
movs
inc
mov
outs
adc
cwde
sbb
(bad)
push
and
push
fst
inc
jbe
hlt
and
jmp
bound
rcl
jnp
je
in
mov
push
in
retf
pop
test
jo
and
in
mov
jg
sbb
(bad)
ret
cmp
stos
rol
inc
nop
not
aas
dec
push
cmp
pop
or
push
cmp
inc
push
ret
jge
push
movs
retf
aad
dec
cdq
push
sub
ins
int3
and
inc
adc
aas
add
xor
pop
mov
jmp
in
push
cmc
xor
xor
jle
push
icebp
adc
add
ins
test
fst
loop
lahf
out
shl
dec
jns
mov
inc
pushf
popf
mov
adc
ja
jle
push
call
(bad)
mov
cli
cmps
scas
icebp
sbb
and
cwde
jle
repz
ins
mov
adc
fs
sub
sub
ret
data16
xchg
or
inc
adc
xchg
ror
test
popf
(bad)
jle
jb
aad
mov
test
cmp
stos
mov
mov
xchg
xor
pop
rol
mov
add
fistp
mov
lods
js
ja
inc
mov
int3
jb
data16
mov
add
out
pop
mov
pop
jns
movs
jge
and
ja
xchg
jg
ret
jp
jge
push
mov
add
ret
leave
fwait
inc
mov
call
dec
push
and
pushf
icebp
xor
mov
dec
lahf
mov
pusha
push
out
add
xchg
xchg
cmp
inc
sahf
sub
ss
xlat
js
scas
jns
or
xchg
popa
dec
mov
ret
cmps
cmps
out
stc
mov
test
sbb
iret
neg
jno
push
mov
cmp
or
int
and
mov
call
pop
test
pop
pop
mov
push
scas
inc
pop
or
dec
popa
inc
cdq
push
mov
dec
scas
lock
cmp
dec
push
fs
sti
ror
mov
mov
or
mov
lahf
mov
cli
stos
(bad)
lods
(bad)
pop
jg
fcmovnb
dec
push
(bad)
movs
mov
retf
sti
adc
(bad)
pop
dec
stos
pop
add
xchg
inc
into
(bad)
mov
daa
test
movs
dec
adc
inc
imul
rcr
shl
vmulpd
xchg
inc
mov
mov
add
or
fs
rol
sbb
adc
mov
mov
sub
add
or
adc
push
inc
stos
jo
enter
xor
or
and
sbb
add
aaa
(bad)
jp
cli
sbb
pmaxsw
push
or
xchg
or
scas
dec
cwde
mov
push
cdq
mov
push
pushf
mov
mov
push
cmp
and
aad
sub
int3
add
cmps
leave
or
xlat
es
popa
clc
int3
mov
jno
mov
mov
inc
mov
cmps
sbb
adc
xchg
dec
dec
cmp
sub
std
inc
sub
movs
push
cmp
push
sub
movs
xchg
xchg
(bad)
mov
cmp
add
stos
pop
push
aam
lahf
rol
es
push
out
xor
call
jg
mov
push
mov
cmp
faddp
jnp
sbb
sub
(bad)
xor
call
add
ret
out
cmps
shrd
adc
pop
mov
loop
fdiv
cmp
mov
push
jne
jns
mov
cmps
or
loope
outs
scas
adc
push
out
repnz
push
xchg
sbb
push
xor
aam
xor
cli
aad
cmp
jae
imul
lods
push
in
stos
(bad)
mov
pop
(bad)
(bad)
fiadd
clc
gs
add
pop
icebp
clc
sbb
xlat
cmps
leave
mov
lods
leave
mov
sub
cmp
sub
pop
sub
enter
inc
sbb
push
scas
jge
scas
mov
jo
xchg
mov
test
out
je
jne
pop
imul
in
inc
enter
in
in
push
stos
das
add
cmp
nop
mov
pop
mov
hlt
xor
xacquire
xor
int3
gs
mov
rcr
test
(bad)
bound
enter
push
and
sbb
or
adc
sub
imul
adc
nop
out
hlt
or
jne
enter
test
fcom
xchg
or
and
or
fyl2x
inc
hlt
mov
test
mov
cld
or
stc
xchg
xor
mov
dec
push
adc
dec
repnz
icebp
jae
iret
in
sub
dec
rcr
mov
fxch
push
call
mov
mov
sbb
jb
jecxz
dec
inc
out
mov
clc
sbb
push
jb
sub
xchg
test
sub
and
add
aad
sub
pushf
xor
or
and
jle
mov
(bad)
jmp
mov
sbb
aam
dec
mov
jle
cmp
jmp
movs
scas
xchg
push
sbb
sbb
dec
xchg
xchg
push
add
hlt
or
outs
inc
mov
int3
pop
and
adc
add
outs
push
mov
les
dec
je
xchg
jb
adc
mov
outs
fisubr
cmp
bound
fwait
inc
pop
cmp
xchg
sbb
fldcw
clc
mov
mov
test
imul
cmps
cld
cli
xor
add
dec
jno
dec
stos
mov
call
outs
shr
pop
addr16
fnsave
in
push
fistp
mov
in
jp
sbb
dec
pop
inc
popf
daa
sub
sbb
inc
fcom
iret
stos
sub
das
sub
push
sub
pop
ret
fcomip
mov
mov
push
mov
cdq
loopne
mov
(bad)
mov
mov
int
inc
jge
iret
xor
push
sub
clc
sbb
mov
scas
pop
cwde
add
cli
cmps
dec
out
mov
stc
pop
mov
mov
loope
inc
inc
into
jb
cmp
mov
test
push
push
dec
or
je
add
push
push
mov
fisttp
dec
jle
jmp
scas
mov
push
(bad)
adc
pop
mov
retf
adc
rcr
pop
adc
xchg
and
xchg
push
pop
cmp
(bad)
inc
loop
sahf
mov
mov
frstor
xchg
mov
sbb
mov
in
xor
cmp
adc
in
cmp
pusha
hlt
lock
shl
dec
nop
sub
movs
mov
jle
push
push
mov
es
(bad)
pop
pop
push
mov
sub
mov
les
aad
jo
lea
xlat
pop
fnsave
enter
lahf
xor
dec
or
pop
inc
test
dec
pusha
xchg
pushf
in
or
mov
or
push
out
mov
mov
xchg
cdq
adc
fadd
pop
mov
and
retf
gs
mov
jnp
sti
and
movs
mov
mov
xchg
push
jns
push
sbb
push
mov
mov
adc
fadd
pop
sub
inc
adc
fist
xchg
pop
loope
push
mov
mov
xchg
mov
and
sar
and
add
rcl
lea
cli
fwait
add
inc
ficom
adc
sahf
jno
std
mov
xor
cmps
lods
mov
pusha
jns
cmps
lods
inc
push
aaa
idiv
dec
pop
int3
push
aad
pop
(bad)
out
xchg
inc
and
push
shl
std
jae
mov
jmp
rcl
and
adc
repz
xbegin
clc
rol
push
shl
into
adc
mov
std
inc
shl
pop
inc
(bad)
xchg
mov
movs
push
mov
push
and
jmp
aad
ja
jae
mov
jmp
in
push
fnstenv
daa
mov
xchg
cmp
mov
push
inc
pop
jg
enter
mov
and
mov
sbb
cmp
loope
jmp
adc
mov
inc
inc
mov
sub
xchg
imul
push
adc
cmp
or
aam
adc
repnz
dec
xchg
inc
sti
inc
lahf
aam
mov
mov
xlat
es
mov
mov
xlat
dec
pop
add
js
nop
push
inc
jmp
aas
pusha
mov
and
fcom
fwait
jmpw
and
jge
icebp
pop
jle
dec
pop
xchg
imul
in
mov
sbb
mov
in
jne
dec
rol
arpl
dec
dec
out
ret
out
ins
out
in
fild
les
sbb
retf
mov
hlt
push
jp
pop
push
xchg
outs
ficom
cmp
mov
popa
xlat
xchg
push
rcl
cdq
icebp
int3
aad
pop
push
rcl
out
stc
(bad)
jbe
xor
or
xchg
mov
imul
dec
mov
scas
mov
add
cli
xchg
test
or
xor
xor
int3
xchg
mov
adc
pop
pop
pop
sub
repz
adc
xor
xchg
jne
lock
movs
adc
cmps
or
ror
fiadd
out
push
jecxz
xor
jg
shl
xchg
push
jp
aas
jp
cmp
or
stos
stos
out
mov
add
push
push
in
push
cmp
in
stos
ror
dec
not
jmp
sahf
adc
push
mov
cdq
dec
mov
mov
int
fisttp
enter
leave
xlat
std
or
push
shl
imul
mov
out
adc
shr
mov
stos
mov
iret
cld
sub
mov
scas
cmp
sahf
cmps
dec
mov
inc
aam
sub
sub
and
and
push
je
adc
out
dec
(bad)
aad
(bad)
aaa
loop
cmp
lea
sbb
call
shl
sti
mov
push
pop
(bad)
ins
xor
mov
sub
dec
sti
mov
push
daa
call
gs
dec
shl
fst
jo
pusha
(bad)
jmp
jbe
test
inc
sbb
jmp
(bad)
lea
push
pop
mov
fisub
xchg
xor
mov
or
sub
repnz
add
or
inc
mov
add
push
sub
inc
xor
cmc
xor
movs
mov
xchg
cbw
cmp
mov
lds
cwde
lea
(bad)
retf
mov
pop
add
mov
fisub
inc
sbb
jge
rcr
mov
jb
ja
hlt
aas
in
cmp
les
adc
push
ud1
cmp
push
xchg
add
sbb
adc
cmp
ins
pop
retf
mov
mov
mov
or
push
imul
inc
(bad)
(bad)
lds
push
jne
xchg
dec
(bad)
cmp
adc
xchg
push
push
cmp
sbb
sbb
pop
xchg
mov
ins
(bad)
xor
add
xor
mov
mov
rcl
into
out
ret
mov
stos
or
jno
inc
jnp
xor
xor
push
push
xor
push
push
jno
loopne
mov
push
sbb
and
sub
iret
and
or
xchg
and
and
imul
in
xchg
inc
jp
iret
sub
jg
dec
scas
or
inc
popa
sbb
enter
sub
sbb
xchg
out
xchg
push
ret
xor
clc
add
xchg
mov
jl
imul
outs
mov
sub
xlat
les
xchg
ret
mov
sub
inc
shr
mov
fldcw
es
jg
shl
lods
mov
pop
mov
loopne
loopne
sub
jge
das
test
and
jl
cmp
(bad)
cmps
(bad)
ds
into
pop
and
cwde
test
jmp
jo
jp
xchg
ror
and
jo
xor
mov
in
rcr
data16
retf
mov
repnz
pop
lahf
addr16
ss
mov
cmps
inc
fisubr
xor
adc
or
out
push
mov
les
mov
out
add
push
and
pop
fcomp
mov
mov
inc
mov
mov
(bad)
xor
mov
jne
cmp
std
add
cld
push
(bad)
call
adc
or
in
pop
(bad)
in
lahf
push
adc
dec
cmp
and
xor
xor
xchg
sti
mov
push
mov
div
retf
cld
stc
rol
push
xchg
dec
push
in
les
xchg
js
inc
arpl
outs
fidivr
push
push
add
ins
xchg
jle
pushf
jo
call
jmp
ret
clc
(bad)
imul
push
cvtdq2ps
movs
add
mov
stc
das
cld
jg
mov
scas
jnp
and
and
test
fsubr
movs
and
aad
add
icebp
xor
push
out
adc
(bad)
(bad)
pop
clc
cvtdq2ps
sbb
outs
xchg
mov
jo
inc
inc
push
ins
(bad)
imul
or
retf
or
mov
sar
mov
outs
fnsave
dec
pop
xchg
or
dec
pop
sti
inc
cmp
inc
xchg
push
sbb
xor
shl
xor
bound
sub
or
and
sar
dec
inc
and
fiadd
jno
mov
sbb
pushf
test
add
popa
pop
and
mov
aas
dec
jmp
sahf
adc
mov
xor
sub
push
and
imul
ret
repz
push
cmps
(bad)
or
(bad)
call
jbe
fsubr
adc
adc
jo
shl
pushf
pop
test
sub
inc
mov
scas
adc
mov
xor
gs
or
out
push
pop
in
sbb
jbe
pop
jbe
lods
inc
fdivrp
add
inc
(bad)
mov
not
pop
and
in
fs
push
les
or
add
jb
mov
loope
int3
out
in
fwait
mov
in
inc
in
mov
jle
push
aad
sub
jno
in
fild
jmp
fcom
cli
inc
popf
and
cs
sub
mov
sbb
xor
jp
hlt
mov
enter
jl
stos
pop
pop
xchg
jae
and
shr
popf
sbb
das
call
dec
jle
outs
sbb
les
sbb
or
outs
push
dec
jbe
js
pusha
das
or
pop
push
jg
pcmpgtd
fsubr
mov
pusha
jp
push
push
jmp
xchg
xor
(bad)
xor
retf
sub
ja
repz
push
mov
retf
loopne
push
clc
cld
ins
mov
add
mov
mov
inc
mov
arpl
rcl
dec
mov
je
xor
(bad)
cmps
cmps
jmp
xor
jecxz
ret
or
sub
pusha
mov
adc
loope
pop
in
push
sub
pop
mov
pop
lods
cdq
mov
mov
jnp
xchg
(bad)
add
jge
cli
and
cmp
rcl
sbb
jecxz
dec
pop
xor
aas
iret
neg
mov
mov
cs
es
cmp
fist
shl
mov
cmp
lds
loopne
dec
push
call
call
in
xchg
out
outs
add
je
or
sbb
int
mov
pop
retf
out
adc
pusha
or
or
pop
sar
jle
movs
or
inc
pop
sbb
xchg
xchg
xchg
pop
mov
add
mov
mov
sti
sub
sub
xchg
mov
mov
inc
xchg
mov
pusha
ja
hlt
mov
pop
(bad)
fldenv
ret
sbb
sbb
pop
mov
xor
jbe
cmp
sbb
adc
xlat
push
(bad)
inc
ins
sbb
mov
xor
sub
stc
push
jecxz
stos
or
mov
cmp
cmp
(bad)
push
retf
les
pop
mov
and
dec
and
xchg
pop
out
cmps
out
pop
mov
dec
fs
pop
mov
pusha
iret
and
fwait
cmp
push
imul
or
es
jmp
fadd
js
frstor
push
mov
xor
cmp
das
mov
jno
xchg
sti
mov
xchg
sub
sar
xor
cmp
pop
sahf
jl
out
xor
and
aaa
mov
mov
les
loopne
push
sub
jae
jmp
aad
or
leave
sbb
aam
mov
and
mov
pop
pop
cld
push
les
fist
and
into
sub
clc
dec
aad
cmps
pop
cmps
cs
lods
jbe
mov
push
dec
or
loopne
imul
or
cld
into
sbb
fadd
jge
dec
xchg
push
scas
push
jecxz
inc
sub
ret
sti
cmp
xor
xchg
mov
xchg
jp
dec
adc
or
(bad)
sar
dec
push
in
dec
dec
(bad)
inc
mov
(bad)
int3
xor
dec
mov
loope
daa
adc
aas
sub
push
add
jmp
adc
ret
mov
xor
and
inc
mov
lds
jmp
add
iret
test
mov
mov
xchg
cmp
push
(bad)
pusha
test
fwait
mov
xor
pop
aas
mov
and
xchg
push
cmp
shr
inc
mov
ret
neg
pop
out
mov
sub
je
mov
stos
pusha
jle
mov
ins
adc
daa
or
adc
test
lock
sbb
in
ret
pop
es
mov
sbb
int3
sub
cmp
inc
cmp
push
sub
mov
cmc
int3
and
push
test
sub
pop
adc
(bad)
outs
jmp
dec
sahf
fcmovnu
dec
retf
inc
cli
add
mov
cmp
pop
(bad)
mov
fbstp
push
clc
cmp
cmps
and
sub
xchg
add
mov
xor
add
gs
leave
inc
xchg
push
scas
call
mov
inc
jbe
jg
sub
bound
or
pop
cmp
cmp
stc
fyl2x
mov
push
retf
lea
call
sbb
lahf
mov
push
int3
mov
cs
jno
jo
push
mov
aam
out
fwait
cmps
ret
clc
ds
mov
mov
sbb
pop
mov
mov
or
movs
and
sub
pop
jmp
cmps
cmp
and
mov
jmp
stos
fsubr
repz
mov
inc
in
add
xor
jmp
aad
arpl
xchg
mov
repnz
cmp
jg
in
icebp
out
jle
and
repz
and
mov
inc
repnz
adc
pushf
aaa
xor
mov
ins
pop
xor
xchg
push
adc
dec
sbb
xchg
jne
pop
dec
add
sub
sar
and
shr
mov
sti
pop
inc
ret
in
cmp
jp
rcr
(bad)
es
or
je
mov
xchg
cmp
add
xor
jle
daa
test
es
cmp
push
inc
mov
pop
test
outs
inc
mov
aaa
ss
leave
jge
sub
adc
movs
sti
aaa
addr16
jl
pop
(bad)
push
test
mov
mov
call
aad
lds
inc
ins
or
cmp
xor
push
jle
pop
push
sbb
jo
inc
inc
adc
adc
stos
xchg
ret
lea
pop
jl
jmp
sub
int3
add
loopne
push
movs
xor
leave
jae
and
call
xchg
or
sbb
sbb
aad
jmp
imul
test
and
adc
mov
xchg
xchg
adc
daa
fst
mov
adc
push
shl
in
enter
jb
out
adc
adc
pushf
jge
int3
sbb
js
cmps
stc
stos
ret
test
jno
xor
or
xor
je
and
inc
adc
jl
pop
and
sbb
mov
std
lds
cmp
or
arpl
fwait
dec
(bad)
scas
sub
pop
imul
push
loope
xchg
sar
xchg
int
push
mov
or
movs
jnp
mov
nop
div
xchg
inc
mov
jmp
in
ins
jl
add
adc
xor
sub
mov
sub
div
test
jge
pop
test
lahf
mov
xor
call
add
sub
in
fadd
pushf
push
jnp
xchg
dec
mov
and
sub
push
mov
into
mov
and
pop
adc
jbe
pop
inc
jns
hlt
mul
imul
ja
mov
push
cmp
push
(bad)
add
div
xchg
mov
and
sub
in
fistp
jno
mov
pop
sbb
jmp
push
lods
add
shr
mov
adc
pop
adc
rcl
out
pusha
xchg
nop
es
or
mov
stos
sub
push
mov
arpl
sub
mov
std
daa
jnp
sub
cs
das
lea
dec
in
int
sbb
jl
add
xchg
call
push
movs
mov
push
mov
dec
push
fild
int3
cmp
xchg
mov
int
cmps
adc
mov
cmp
sbb
lods
xor
sar
add
push
cmp
pop
fwait
mov
int
dec
add
(bad)
fucom
xor
shl
(bad)
(bad)
aaa
pop
mov
sbb
loop
adc
(bad)
and
ja
jb
sub
iret
cdq
jno
lock
jge
cwde
xchg
sbb
mov
pop
sbb
pop
or
shrd
lea
sbb
dec
sbb
pop
iret
inc
icebp
mov
adc
adc
dec
inc
add
sub
in
ins
test
cmp
inc
jb
push
in
push
pop
shr
test
mov
ret
or
inc
pop
nop
jnp
in
dec
and
adc
push
outs
pop
mov
loop
js
and
or
out
cmp
cmps
xor
int
pop
cmp
pop
cwde
adc
ja
arpl
lea
xor
xlat
mov
adc
jmp
sbb
mov
cli
or
mov
jp
and
inc
sar
xor
mov
ds
ret
sbb
call
push
mov
enter
cmc
es
enter
dec
in
fadd
fs
and
cmps
ds
dec
test
or
push
(bad)
xchg
push
rol
and
aas
jb
mov
icebp
imul
popf
or
daa
inc
mov
inc
out
nop
mov
test
cdq
fstp
inc
iret
dec
leave
adc
outs
or
mov
cmp
das
(bad)
jmp
in
push
or
sbb
pop
ret
xchg
out
xchg
inc
inc
sub
call
cmp
inc
into
test
repnz
test
sar
and
sub
stc
popa
xor
test
test
mov
jg
pop
cmp
daa
pushf
enter
add
fstcw
fnstenv
test
add
sub
adc
mov
retf
pushf
xchg
pop
pop
jnp
dec
(bad)
or
sub
adc
sbb
push
inc
pop
pusha
and
adc
xchg
sar
sbb
loop
or
mov
addr16
xor
sbb
loop
adc
fstp
inc
(bad)
jae
sub
mov
or
xor
enter
fld
jle
mov
fld
js
rcr
sar
cdq
push
test
cwde
pop
xor
loope
or
scas
cmps
cdq
jno
or
pop
dec
inc
das
cmps
dec
outs
cmps
nop
daa
mov
(bad)
cmc
push
push
adc
pop
ins
aad
and
or
mov
lea
or
xchg
xchg
push
mov
adc
int3
test
mov
popf
sti
cmp
jb
sub
cmp
(bad)
mov
inc
inc
les
xchg
repnz
mov
pushf
and
fwait
adc
push
cwde
push
sbb
movs
xchg
outs
imul
cmp
push
xchg
adc
xor
push
imul
sar
hlt
pop
xchg
xor
int
add
pop
fimul
jns
sbb
fbld
xor
jmp
push
and
out
push
ror
outs
jnp
(bad)
sub
js
loope
fadd
jbe
cli
sub
popf
imul
aad
movs
fist
xchg
mov
and
cld
fldenv
push
mov
or
pop
sub
pop
and
aas
and
jo
sti
push
sub
push
enter
mov
mov
pop
xor
test
in
and
ds
scas
jp
ret
adc
shl
add
div
test
outs
mov
adc
sbb
jnp
or
xchg
xchg
bound
mov
adc
fwait
(bad)
cli
aas
ret
out
cmps
inc
sub
mov
add
lods
dec
sar
cdq
in
push
jb
add
pop
iret
idiv
shl
push
inc
pop
fdiv
scas
dec
xor
or
dec
popf
push
dec
or
jge
and
cmp
xchg
enter
mov
lods
inc
adc
cld
mov
mov
add
ja
test
stc
out
pop
iret
add
jns
xchg
imul
xchg
popa
call
dec
dec
in
sbb
ror
inc
dec
lock
adc
xchg
fdivr
mov
pop
and
lds
scas
adc
xlat
or
imul
popf
dec
je
jle
idiv
jmp
test
xchg
aaa
test
push
retf
bound
aaa
add
stos
push
pop
popf
sbb
clc
mov
or
adc
(bad)
adc
(bad)
in
push
mov
push
fcomp
out
push
in
xchg
repz
test
rcl
inc
arpl
rcr
ss
in
push
xchg
pop
fisttp
repz
pop
cmps
mov
ror
mov
sub
(bad)
icebp
rcl
jo
mov
retf
sbb
inc
leave
mov
cmp
sbb
sub
shl
mov
push
icebp
fwait
sahf
ss
push
jae
mov
xor
loop
(bad)
in
pop
cmps
ror
shl
adc
call
lea
sbb
addr16
mov
fisttp
imul
cld
inc
call
call
sub
inc
mov
stc
int3
jle
mov
ins
jmp
inc
int
pusha
aaa
pop
pusha
retf
sti
mov
pop
shl
mov
xchg
(bad)
or
repnz
addr16
scas
repnz
jmp
data16
push
pop
pop
mov
xchg
shl
fmul
pop
outs
repz
imul
and
cmp
gs
pop
fnstcw
mov
xchg
daa
inc
scas
shl
push
ss
add
sub
and
jecxz
sub
pop
cmp
rol
rcl
mov
test
cmp
in
xor
mov
nop
in
das
int3
xchg
fisttp
out
mov
out
int
cld
xchg
outs
(bad)
loopne
loop
push
inc
cmps
mov
or
pop
cmp
es
jge
push
aam
sbb
jp
jae
mov
push
stos
add
aad
cmps
lods
push
into
cmp
mov
add
adc
push
jb
push
mov
sub
mov
lods
jle
in
stos
movs
mov
adc
fstp
xchg
sbb
and
in
lahf
cmp
dec
ror
mov
cld
pop
inc
jmp
jnp
cmp
scas
jmp
mov
hlt
push
je
sahf
cld
pushf
lods
fcmovne
xchg
jg
loopne
movs
neg
xor
imul
stc
cmp
adc
shl
xor
je
push
inc
and
aaa
pop
sub
sub
xchg
movs
or
loop
push
pop
cdq
cmc
daa
xor
mov
xor
jnp
adc
leave
pop
aam
loopne
mov
loop
mov
repz
cmp
retf
sbb
xchg
fwait
stos
dec
fwait
sbb
in
rcr
xchg
stos
jae
mov
xor
nop
inc
or
out
cmp
aam
addr16
pusha
sahf
cmp
fdiv
shr
xchg
daa
int3
inc
cld
sub
lods
jo
mov
pop
imul
dec
shl
(bad)
into
lds
xor
test
adc
adc
mov
mov
xchg
cmp
push
push
mov
outs
ss
mov
rol
pop
retf
sub
dec
inc
int
stc
adc
xchg
aad
int
in
jecxz
test
sub
xor
enter
adc
cdq
xor
and
mov
js
int3
out
retf
push
call
sbb
out
push
sub
push
dec
push
jp
sar
mov
leave
xor
aam
cmps
add
shl
(bad)
sti
pop
jbe
test
repz
fwait
pop
daa
repz
add
pop
cmp
jo
cli
aas
jne
cmc
fsub
cmp
out
mov
in
xor
jge
imul
arpl
es
or
loop
imul
sti
and
mov
dec
imul
lock
mov
rcl
cld
push
cmp
pop
ins
fisub
pop
jno
lea
stc
pop
or
adc
(bad)
cmps
pop
mov
pushf
xchg
(bad)
xchg
cmp
in
inc
out
ins
fadd
in
mov
dec
push
das
les
xor
out
mov
inc
nop
or
pop
out
sbb
es
adc
jp
stos
adc
mov
nop
sar
fs
fcomp
and
mov
aam
xchg
push
xchg
mov
repnz
or
call
clc
sar
daa
add
push
jae
xor
inc
sahf
dec
inc
inc
jle
data16
fsub
in
jg
mov
(bad)
xor
mov
retf
out
lea
test
cwde
cmp
dec
mov
sbb
sar
xchg
or
imul
(bad)
inc
sbb
inc
leave
mov
pusha
cmps
(bad)
push
ins
sti
mov
mov
ss
push
imul
ds
inc
dec
clc
js
sbb
loopne
popf
mov
mov
das
pop
and
push
shl
pop
cmp
add
cmp
and
pop
fwait
xchg
adc
adc
xchg
test
adc
jge
jmp
dec
pop
or
xchg
gs
loope
cli
cmp
repnz
scas
(bad)
pop
sbb
fisubr
es
adc
gs
or
and
pop
jg
inc
fdivr
aas
mov
inc
jle
jbe
or
ror
jmp
xchg
cli
retf
int
data16
les
mov
mov
pop
scas
adc
sub
adc
adc
call
fistp
shl
neg
pop
mov
mov
dec
test
icebp
gs
mov
cmp
dec
or
jmp
test
cmc
sub
add
cmp
ret
aaa
inc
add
and
shl
pusha
jecxz
arpl
push
pusha
xchg
push
rol
mov
xor
xor
push
xbegin
jae
cmc
sbb
add
sbb
ret
je
add
xchg
aad
pop
clc
sbb
popf
fisttp
movs
mov
js
and
push
mov
cmp
adc
aam
add
shr
jl
call
cmp
movs
mov
inc
nop
stc
inc
push
jno
push
sub
xchg
jmp
pop
sbb
cmp
push
xchg
ins
daa
push
rcl
adc
mov
test
pop
in
sbb
enter
jmp
adc
movs
inc
repnz
mov
es
adc
xor
mov
fs
sti
push
jmp
jge
(bad)
mov
icebp
adc
jmp
retf
movs
add
mov
cmp
fisubr
mov
dec
fwait
xchg
sub
daa
adc
mov
mov
jno
jmp
inc
bound
push
or
or
rcl
loope
cs
jno
in
sub
icebp
aas
or
cmp
stos
out
push
push
cmp
sbb
pushf
pop
dec
add
dec
push
cmc
mov
sbb
ficomp
adc
ins
xchg
enter
sub
mov
in
shl
xlat
xchg
inc
stc
js
mov
jbe
cmp
fcomp
xor
or
arpl
into
pop
test
mov
cmps
mov
rol
inc
sbb
lea
test
fidiv
cmps
add
ins
pop
mov
dec
mov
cwde
xchg
stos
pop
inc
add
jg
pop
sbb
push
xchg
inc
push
xor
clc
xchg
fwait
and
mov
imul
(bad)
sar
jle
cs
mov
push
out
mov
dec
fadd
jl
fmul
inc
push
sub
jns
and
jbe
sub
lods
movs
mov
ins
xchg
cmps
jmp
jl
jns
push
frstor
sub
jb
inc
clc
or
and
xor
mov
data16
cld
ret
cmp
movs
mov
dec
mov
std
rol
jg
clc
jo
cs
xchg
scas
xor
ds
sub
sub
inc
div
xchg
push
and
mov
xor
cmp
call
adc
ret
cmc
pop
inc
pop
out
add
pop
ret
fwait
cmp
xchg
repnz
aaa
push
xchg
mov
pop
adc
ret
jge
mov
sbb
(bad)
aam
mov
push
cdq
cmc
in
sub
xchg
pop
test
in
scas
dec
mov
xor
cmp
xchg
sar
xchg
enter
and
les
int3
push
sbb
add
(bad)
mov
loop
dec
repnz
push
pusha
(bad)
mov
cli
int
lods
and
and
outs
lods
pop
pop
(bad)
jle
movs
cmps
inc
fidivr
sbb
mov
std
sahf
push
popf
pop
mov
xchg
mov
xchg
mov
js
xchg
nop
lods
mov
popf
cmp
outs
mov
push
push
(bad)
xchg
push
outs
inc
mov
pushf
push
jmp
enter
stos
js
(bad)
ror
mov
mov
mov
or
xchg
cmp
pusha
sbb
mov
inc
push
jnp
sahf
dec
sahf
sub
sbb
jns
dec
ja
dec
mov
dec
outs
lods
jmp
aad
loope
popa
dec
into
std
in
adc
pop
sbb
mov
pop
cli
aaa
dec
rcr
pop
fdivr
dec
push
test
ss
stos
jno
cli
fist
mov
sub
cmc
xor
iret
jno
jae
fs
test
loope
ins
adc
mov
sub
fistp
das
jmp
jmp
xchg
stc
stos
xchg
jmp
push
rcl
fsubr
test
das
cli
push
lea
sbb
push
fild
call
(bad)
mov
lods
enter
sahf
mov
(bad)
push
cmp
outs
xor
hlt
jg
aas
lods
xchg
loop
out
stc
iret
lock
ss
ret
xchg
pop
in
out
aaa
movs
fbstp
sahf
out
int3
das
jmp
je
mov
jnp
push
sbb
jmp
and
les
nop
cmp
les
and
push
setle
fwait
sbb
xchg
outs
mov
outs
cmp
ins
je
ss
test
pop
enter
cwde
xchg
or
call
cli
or
adc
loopne
in
cmc
test
add
jle
stos
mov
or
push
or
pop
or
(bad)
jb
lea
ds
(bad)
sub
test
call
jl
pop
add
movs
jle
loope
push
mov
mov
stos
cmp
lahf
sub
inc
cld
in
xchg
xor
in
mov
xchg
mov
aaa
sub
inc
fdivr
add
(bad)
fstp
pop
nop
sub
repnz
repnz
cmps
pop
xchg
jbe
or
pop
rol
pop
push
movs
or
ss
pop
lock
mov
sbb
aaa
cmp
sub
leave
dec
jp
int3
sbb
test
fidivr
adc
inc
jns
sub
cli
les
xlat
jp
fldenv
cmp
sub
pop
cmps
ds
dec
jb
adc
stos
ins
(bad)
lds
es
fdivr
mov
fs
cld
stos
sub
std
dec
jp
cmp
ja
movs
sbb
push
jbe
push
into
sbb
cwde
dec
add
push
push
and
data16
ror
inc
or
add
enter
aam
es
(bad)
jle
data16
mov
(bad)
ficom
jns
and
add
test
call
in
fwait
dec
xchg
mov
(bad)
adc
jl
test
xchg
mov
sub
scas
aad
test
push
mov
sahf
xor
push
ds
or
dec
rol
xchg
cld
xlat
jecxz
cmps
rcl
push
push
dec
out
jp
and
mov
pop
push
xor
out
push
xchg
lods
mov
cmp
inc
out
add
cmp
sub
xchg
sbb
jecxz
std
push
and
fild
jbe
xchg
rcl
mov
jp
int
retf
shr
xor
and
das
addr16
fisub
not
or
pop
cmp
xchg
popw
mov
cs
push
dec
shr
add
push
(bad)
daa
push
pop
jp
mov
sub
and
in
mov
mov
dec
int
mov
push
mov
mov
push
cmp
lods
mov
sub
ins
dec
jmp
rcr
xchg
cmp
cmps
mov
pop
sbb
mov
inc
js
fld
add
add
(bad)
fs
in
xchg
sbb
pop
push
enter
sahf
add
push
push
enter
xor
push
jno
adc
scas
test
mov
jno
sub
add
(bad)
jge
(bad)
test
stos
cmps
pop
adc
sub
call
mov
mov
mov
mov
out
jne
add
pop
sub
das
xchg
jns
movs
add
mov
lods
das
sbb
sub
cmp
pop
mov
inc
cs
sti
pop
mov
mov
fdiv
lds
xchg
or
mov
xchg
jecxz
jns
sar
dec
mov
jecxz
cmp
gs
or
push
jmp
fisttp
adc
add
jno
imul
dec
pop
dec
pop
fsubp
xchg
mov
sbb
(bad)
lea
dec
inc
or
cmps
or
dec
ins
and
loop
(bad)
adc
cs
pop
sub
mov
dec
cld
push
ins
cwde
push
cmps
pop
push
xor
loopne
fwait
xchg
out
and
push
mov
xchg
pushf
push
sbb
and
test
xchg
mov
mov
push
fidiv
inc
int3
and
test
sar
jp
int3
loopne
jge
dec
out
pop
out
or
mov
sub
mov
mov
jecxz
daa
test
ret
mov
mov
fwait
inc
aad
mov
icebp
lods
inc
mov
sub
cmps
cs
iret
movs
stos
inc
sti
sbb
jle
sub
mov
add
add
add
enter
sbb
mov
dec
aad
and
fiadd
shr
sbb
fsub
(bad)
sbb
jmp
mov
std
or
into
mov
or
xchg
dec
aad
ins
nop
out
inc
enter
(bad)
jmp
pop
mov
sbb
sub
popa
add
call
push
in
push
cld
sysexit
fist
adc
xchg
sti
xchg
pop
push
xchg
sbb
add
test
stc
ins
push
inc
ror
or
lock
mov
jmp
jns
in
cmp
rcl
xor
movs
pop
movq
aad
cmps
out
pop
pop
popf
mov
idiv
xchg
hlt
and
addr16
scas
icebp
add
lea
mov
in
mov
(bad)
outs
enter
(bad)
stc
pop
lea
pop
push
call
mov
cmp
mov
jne
cmc
into
pusha
and
and
mov
xchg
les
sbb
fs
out
dec
xor
inc
and
add
jnp
cld
xchg
sti
sub
sbb
(bad)
int
mov
jne
mov
mov
out
push
jo
bound
mov
sub
jb
scas
sub
or
jb
test
js
adc
je
imul
adc
mov
jae
cld
pop
pop
mov
or
mov
xlat
fs
aam
inc
fst
jmp
cmp
(bad)
fst
or
and
addr16
int
outs
xlat
test
cmps
jmp
jo
fstp
xchg
icebp
inc
push
push
and
les
aas
pop
adc
ss
push
call
out
jmp
mov
das
push
push
sar
arpl
mov
popa
push
xchg
shl
pop
sbb
xor
jns
fwait
sahf
fiadd
mov
sub
mov
loopne
add
lahf
outs
pop
push
ret
jge
jl
cmp
inc
enter
fist
cmps
and
mov
rcr
jae
xchg
lock
retf
test
or
mov
jl
stos
mov
lods
or
and
xor
jae
pop
into
das
mov
cmp
scas
add
aaa
push
push
xor
repnz
ficomp
js
sbb
mov
mov
hlt
js
dec
and
sub
mov
xchg
mov
pop
call
leave
lock
retf
es
xchg
adc
push
out
and
add
mov
dec
cmc
xchg
jae
jge
loope
sub
sbb
xlat
sbb
add
mov
or
xor
lock
push
adc
adc
mov
adc
(bad)
dec
xor
sub
out
cmp
mov
add
pop
push
jp
sbb
fist
xchg
lahf
mov
xchg
xor
loopne
int3
call
push
mov
movs
sub
(bad)
push
cwde
mov
aam
shr
mov
xchg
cmp
aaa
mov
test
cmps
push
cmp
popa
enter
xor
data16
outs
popf
inc
jno
pusha
in
xor
inc
rol
cmps
ins
scas
add
fst
sub
nop
jg
pop
pop
pop
sub
mov
daa
outs
and
loope
cli
into
scas
lahf
xor
test
add
or
jae
add
jo
jmp
pop
enter
push
shl
inc
or
repz
test
movs
cmp
fild
aas
or
xchg
or
outs
push
outs
dec
mov
mov
lock
add
add
stos
mov
loope
mov
jnp
popa
or
pusha
xor
je
push
add
popf
jge
sbb
(bad)
hlt
bound
aas
movs
mov
fist
sbb
mov
xor
ss
push
and
stc
jmp
pop
mov
in
lods
cmp
push
fsubr
icebp
mov
cmps
fisub
add
pushf
jnp
fwait
ss
sti
test
inc
xchg
in
pusha
outs
test
mov
bound
and
sub
inc
jno
or
imul
cmp
retf
push
mov
out
xor
fild
leave
out
inc
mov
add
in
adc
movs
mov
rol
mov
sub
push
rcl
sti
retf
or
fcmovnbe
popa
mov
inc
mov
clc
into
shr
scas
jo
and
rcl
rol
daa
les
and
das
hlt
xor
iret
mov
and
shr
sti
pop
and
push
test
scas
dec
mov
xor
xchg
dec
lea
aas
int
fiadd
push
dec
sub
sti
sub
es
jg
jbe
(bad)
fadd
mov
dec
xor
imul
cmps
int
sbb
pop
cmc
cli
push
jne
pop
pop
and
sahf
adc
movs
cmp
xor
and
(bad)
movs
js
xor
std
hlt
dec
retf
movs
imul
xchg
(bad)
xor
inc
(bad)
dec
shl
mov
(bad)
cmp
xchg
xchg
ins
mov
jmp
mov
inc
dec
or
cmps
sahf
mov
aad
das
(bad)
xor
int3
les
stc
sahf
es
cmp
pop
mul
and
cli
mov
push
mov
rcl
addr16
(bad)
mov
push
lock
stos
dec
jnp
bound
clc
xor
fiadd
(bad)
fsubr
mov
or
adc
popa
cmp
push
sub
(bad)
call
cld
dec
repz
jae
out
data16
in
mov
jmp
dec
hlt
lods
pop
mov
outs
cmp
mov
add
and
ret
add
mov
jle
test
add
and
pop
pushf
push
xor
cdq
cmps
repnz
out
jg
pop
jae
fist
ficom
punpckhwd
icebp
sub
fs
ins
push
dec
pop
cmp
xor
add
test
ja
js
jp
mov
sub
je
mul
sub
push
(bad)
addr16
mov
mov
cmp
sub
pop
push
jp
xor
xchg
fild
or
cmp
leave
jno
add
mov
rcr
mov
inc
retf
pop
xchg
pushf
pusha
and
inc
retf
sub
loopne
jmp
sbb
push
push
in
(bad)
jnp
icebp
adc
ja
aam
loope
iret
cmp
lea
sub
div
(bad)
arpl
rep
data16
inc
push
jecxz
push
sub
mov
arpl
(bad)
leave
cmps
add
lds
adc
sub
cmc
push
in
out
add
in
cli
pop
cld
daa
cmp
pop
xchg
pop
jge
inc
es
cmp
sar
out
or
adc
adc
imul
popa
pop
pop
add
jns
lock
push
pop
push
or
push
sahf
sahf
or
ss
loop
jecxz
dec
jge
cs
cmp
and
hlt
not
or
push
bound
fwait
dec
mov
ret
sub
xlat
add
das
lods
and
jb
test
sbb
jno
sar
xlat
pop
xchg
pop
das
sub
enter
aad
loopne
ss
out
jbe
bound
clc
mov
(bad)
push
xchg
sub
and
arpl
mov
mov
int3
sbb
xchg
imul
retf
ja
cli
daa
ja
jl
enter
loopne
call
(bad)
stc
jmp
popf
xlat
push
cmps
outs
mov
adc
push
pusha
inc
cmp
mov
pop
mov
dec
pop
sti
xchg
sub
mov
aad
popa
mov
dec
push
mov
out
jne
movzx
add
push
jno
inc
lahf
sub
test
mov
pop
test
xchg
(bad)
jmp
ja
ret
and
sbb
ins
xlat
sub
inc
imul
(bad)
in
add
mov
ror
jno
add
ds
push
sub
sub
jno
xchg
xchg
jno
ja
mov
and
cli
jmp
adc
add
pop
and
imul
push
add
cmp
cdq
ror
icebp
xchg
repz
jno
and
enter
and
stos
adc
outs
repnz
shr
ds
or
fdiv
leave
mov
in
aad
ja
push
rcl
sar
es
push
or
adc
iret
xchg
icebp
or
fcmovu
nop
mov
inc
shl
outs
fdiv
dec
les
pop
mov
js
js
dec
and
xchg
adc
fnstsw
push
fsub
jno
sub
iret
xchg
jb
pop
and
jmp
and
(bad)
xchg
retf
test
(bad)
shl
push
lock
xchg
jp
fs
ret
xchg
pop
shl
out
addr16
add
out
jecxz
stos
mov
adc
adc
cmp
xchg
add
ret
fwait
loope
add
repnz
pusha
loope
sub
mov
mov
pop
inc
or
mov
retf
loop
sar
inc
popf
pop
in
jmp
push
sti
push
sbb
clc
movs
arpl
ds
in
es
in
mov
jb
push
out
test
call
and
adc
sbb
ins
cmp
das
retf
and
int3
mov
shr
mov
call
xchg
xchg
inc
dec
out
not
sbb
stos
sbb
(bad)
leave
dec
add
scas
inc
push
push
sti
stc
xor
add
mov
clc
cmp
imul
iret
mov
pop
xlat
scas
stc
stos
pop
fxch
pop
sub
mov
jns
std
mov
jmp
xor
jge
sub
loopne
fisttp
adc
ret
sub
enter
xor
push
lods
push
clc
leave
jmp
aad
xchg
jbe
pop
aaa
or
sbb
sti
mov
inc
pop
and
aaa
iret
pusha
xchg
shl
pop
pushf
xor
sahf
lods
call
mov
cmps
jnp
retf
aaa
stos
inc
inc
mov
fstp
jnp
fs
xchg
or
int3
pop
adc
sbb
lods
dec
sbb
and
mov
inc
jle
xlat
int3
(bad)
jge
es
xor
daa
and
sub
push
sbb
fmul
adc
lahf
inc
add
aaa
es
push
mov
movs
or
ins
or
inc
mov
out
jne
sbb
add
mov
mov
or
scas
xchg
repnz
loopne
ret
xchg
push
mov
add
cmps
ds
pop
sub
cmp
push
and
addr16
and
dec
jl
inc
or
test
loop
sub
xor
and
xchg
add
je
repz
dec
mov
mov
adc
jle
lds
retf
icebp
cld
mov
and
add
mov
mov
loop
(bad)
mov
and
mov
mov
and
mov
mov
or
pop
xor
stc
(bad)
cmp
daa
adc
jns
jno
lock
(bad)
repz
(bad)
clc
or
shr
aas
out
dec
gs
xchg
xchg
int
loopne
lahf
sbb
sti
ror
push
mov
jle
mov
(bad)
sub
in
or
pop
fdiv
and
push
aaa
movs
dec
inc
pop
dec
ins
movs
int
cmp
(bad)
ins
xchg
add
enter
cdq
push
push
int
adc
add
push
rcl
jno
push
lea
mov
loop
nop
or
ror
xor
jg
mov
loope
retf
cld
fwait
xchg
sub
icebp
or
mov
adc
mov
addr16
sub
ret
xchg
add
in
outs
loopne
(bad)
shl
sbb
mov
cmp
xlat
jne
xor
pop
push
out
push
addr16
sub
push
ret
out
aaa
xchg
mov
sbb
mov
inc
cs
arpl
test
sub
cs
add
and
aam
cmp
mov
(bad)
cmp
jg
(bad)
dec
xchg
(bad)
jle
cmc
jle
(bad)
mov
add
les
and
aas
mov
cmp
sahf
mov
not
js
mov
mov
popf
sti
xor
and
or
sub
mov
call
push
out
jecxz
add
mov
adc
out
scas
jecxz
das
fadd
or
sahf
mov
mov
sub
pop
lahf
pop
mov
inc
xor
cld
push
mov
cmc
fdiv
sbb
sub
pop
lahf
xor
fs
movs
mov
aam
xor
xor
pop
popa
mov
mov
out
test
cmps
inc
jge
enter
rcr
pop
cmp
mov
pop
cli
lea
retf
mov
inc
jbe
outs
xchg
es
pop
push
leave
and
sahf
cmp
jg
xchg
mov
and
jecxz
xor
sahf
loopne
xor
bound
int
sahf
cmps
popf
ficom
jnp
add
adc
lea
call
push
and
mov
xor
pushf
push
mov
shl
or
jb
cmp
rol
clc
out
cmp
or
xchg
push
movs
xor
imul
push
test
bound
xchg
dec
mov
xchg
mov
fstp
push
popf
cmp
dec
or
rcl
dec
cmp
and
lea
arpl
popa
cli
int
(bad)
cmp
out
mov
sub
sar
jp
jae
adc
cmp
(bad)
mov
cs
dec
sub
ror
push
mov
lods
ins
cmp
iret
sbb
(bad)
cmp
push
enter
outs
mov
or
daa
adc
mov
push
cmc
xlat
cmp
loope
push
sub
xor
daa
fisttp
jae
es
loop
xchg
fnsave
ret
push
xor
or
addr16
xchg
outs
xchg
cli
(bad)
ficom
out
daa
test
inc
loop
pop
pushf
mov
push
cdq
dec
leave
dec
test
mov
mov
ret
push
push
adc
dec
add
out
sbb
pop
fsub
pop
jae
ror
xchg
js
div
shr
sbb
popf
mov
or
jmp
ret
adc
inc
test
jle
jae
and
jno
inc
std
das
mov
icebp
jae
mov
cdq
sti
dec
jns
mov
and
jno
mov
test
xchg
arpl
dec
jmp
int
cli
fstp
xchg
dec
inc
sbb
(bad)
sar
out
sysenter
push
test
int
cmp
cld
xor
ss
mov
hlt
adc
sub
aad
dec
scas
mov
push
(bad)
jecxz
in
bound
xchg
cs
pop
mov
std
sbb
xchg
inc
clc
or
push
add
dec
ins
mov
mov
das
cmp
jmp
js
cmc
arpl
jmp
ror
cdq
ja
(bad)
retf
enter
add
xor
sbb
clc
or
push
or
int3
cmp
cli
mov
sbb
mov
or
leave
push
in
ins
call
sbb
pushf
loop
mov
cmp
popa
pusha
iret
push
mov
sbb
and
xchg
mov
mov
sub
dec
lahf
out
pop
sub
popa
in
jg
dec
data16
ss
sti
rol
fsubr
or
inc
loope
pop
sbb
mov
inc
leave
jp
mov
dec
mov
xor
mov
xchg
mov
sub
cmp
dec
test
and
and
xchg
sub
sbb
push
aam
mov
add
and
rol
stos
fidiv
sahf
and
add
sar
mov
js
cmps
ret
add
clc
cmc
add
pop
xchg
js
dec
in
jbe
repnz
std
inc
and
fld
pop
aaa
lods
sbb
scas
inc
js
lods
shl
(bad)
test
adc
inc
push
int3
lahf
cmp
jg
iret
sub
out
in
xor
lods
jl
or
cmp
ins
push
push
(bad)
mov
nop
or
add
cmp
push
push
or
enter
cmps
cmps
mov
cmp
mov
mov
out
gs
aas
xor
push
mov
rcr
aas
pop
aaa
xchg
pushf
leave
fnstenv
les
das
or
pushf
repnz
cmp
mov
sbb
cmp
adc
int3
fwait
jb
xor
xchg
dec
mov
or
jb
call
or
stos
fcomp
adc
mov
ins
jg
cmp
dec
xchg
(bad)
sub
xchg
push
cmp
or
push
cli
mov
adc
and
adc
loop
cmc
sub
dec
adc
inc
mov
inc
iret
repnz
jl
pop
adc
adc
into
sub
cmps
jae
jp
mov
dec
pushf
(bad)
loope
push
push
push
fbld
xlat
mov
repnz
add
sub
dec
and
adc
repz
adc
cmc
cmp
xchg
and
mov
in
rdpmc
loop
cmps
loop
leave
test
cmc
aam
iret
(bad)
retf
ds
(bad)
das
push
xchg
icebp
fisubr
cli
add
jmp
mov
(bad)
scas
adc
mov
jae
xor
ret
inc
jmp
mov
add
xchg
dec
cmp
inc
(bad)
js
pushf
inc
imul
stos
aaa
movs
or
dec
dec
xor
cld
xchg
push
jmp
call
pusha
mov
out
jns
mov
fld
jge
and
nop
mov
daa
arpl
dec
sub
out
enter
mov
mov
aad
push
pop
push
test
stos
cs
std
add
icebp
and
lds
xchg
out
fistp
mov
into
inc
not
data16
out
mov
xchg
in
imul
sub
mov
inc
inc
enter
(bad)
dec
into
jne
nop
mov
in
aas
adc
ficom
imul
or
inc
cld
loopne
mov
adc
mov
cdq
test
inc
sub
cld
pop
jo
mov
mov
test
int
mov
inc
adc
test
and
je
popa
repnz
xchg
sub
scas
icebp
cmp
adc
fcomp
fstp
nop
cmc
cmp
fwait
mov
mov
test
in
fild
sbb
cdq
es
lea
aas
das
sbb
aaa
sbb
pop
mov
mov
pushf
lods
ss
mov
dec
pop
mov
xchg
test
pop
sub
xchg
mov
scas
and
shr
pop
rcr
pop
ret
sti
lods
pop
repnz
clc
pushf
and
ficom
jne
ins
mov
in
cld
sub
fcompp
dec
bnd
cwde
test
jmp
mov
movs
xchg
call
jb
xchg
retf
pop
jne
pushf
(bad)
sbb
pop
inc
mov
push
adc
push
mov
cmp
adc
lods
jmp
repz
add
and
shr
mov
jb
mov
int3
cmps
mov
mov
pop
or
fiadd
push
fisttp
cmp
adc
jno
inc
cdq
cmp
lock
inc
mov
mov
mov
(bad)
push
repnz
into
jmp
and
pop
fucomip
loopne
cmps
ss
sub
xchg
pop
call
dec
clc
test
cmp
test
add
inc
pop
ret
nop
js
or
or
and
iret
jge
in
adc
sbb
lahf
and
mov
xchg
xchg
or
loopne
clc
mov
(bad)
adc
and
(bad)
call
les
pop
rep
cmps
mov
inc
enter
xchg
xor
js
(bad)
mov
repnz
adc
mov
dec
push
dec
dec
aad
mov
jle
out
xor
xlat
inc
nop
mov
mov
xchg
enter
push
jmp
or
jmp
out
(bad)
xchg
in
and
mov
or
addr16
(bad)
dec
clc
fisubr
jo
movs
shr
int
push
jl
mov
fbld
dec
jno
adc
jne
push
loop
jmp
hlt
out
out
enter
outs
dec
xchg
inc
add
fs
jmp
lock
aas
leave
pop
mov
xor
jmp
push
in
adc
sub
adc
or
int3
pop
aad
xchg
jae
nop
lds
bound
mov
mov
cmp
stos
fist
mov
and
push
(bad)
aaa
test
sub
push
das
dec
xchg
mov
pop
cmp
pop
xchg
sbb
or
ins
jbe
xchg
mov
icebp
rol
cmp
cmp
call
retf
jmp
or
add
dec
xor
loop
icebp
inc
std
mov
xchg
push
daa
mov
or
sub
sbb
fwait
sub
add
jmp
or
and
or
mov
imul
push
dec
jp
xor
push
fisubr
fcom
outs
popa
scas
shl
ja
xchg
push
rcr
mov
jmp
ins
cmp
jns
cmc
cmp
mov
cmps
add
scas
sahf
retf
jb
fdivr
cmp
dec
repnz
int
xor
dec
jmp
jmp
cmp
mov
mov
popf
sub
pop
xchg
out
lods
lds
pop
pop
mov
std
add
cmps
jno
sub
lea
push
cmp
ss
in
sub
dec
mov
cmp
mov
cmp
cdq
pop
or
bound
shl
movs
sar
push
add
mul
test
push
mov
xchg
test
mov
pop
cli
mov
pop
cwde
mov
cmps
or
cmps
popa
and
enter
cmp
pushf
js
jmp
sahf
push
mov
sub
rol
sbb
dec
aam
xchg
dec
mov
test
xor
clc
faddp
xchg
aaa
cli
sub
cmp
cld
clc
fimul
bts
cld
sub
pop
xchg
fstp
or
mov
jle
sub
cmp
scas
cdq
dec
rcr
mov
mov
jmp
lds
mov
in
jns
xchg
popa
or
lds
and
ficom
sbb
imul
call
push
add
sti
movs
shr
retf
xor
push
loopne
fldcw
cmc
mov
push
mov
fimul
(bad)
adc
xor
sbb
xchg
int
test
out
or
stos
mov
sbb
xchg
lods
cmp
test
jle
push
mov
sbb
inc
and
pop
jmp
outs
or
stos
xchg
add
jl
in
push
ins
retf
dec
loope
sbb
scas
push
sbb
pop
(bad)
addr16
inc
cmp
push
stos
lea
repnz
unpcklps
daa
pop
pop
xchg
adc
inc
pop
repz
pop
push
jmp
loope
mov
repnz
lea
pusha
pop
aaa
sub
mov
ret
mov
and
cmp
jae
or
out
test
test
xchg
inc
repnz
jg
stos
xor
in
mov
inc
lahf
sub
adc
or
std
sub
test
dec
xchg
mov
sar
inc
int3
sbb
in
loopne
inc
pop
in
repnz
mov
adc
into
scas
rcr
ds
out
inc
out
call
mov
mov
mov
xchg
jo
push
js
adc
push
loopne
stos
scas
out
lods
ds
adc
ins
jno
mov
cmps
out
imul
pop
xchg
push
stos
inc
mov
sub
dec
bound
adc
(bad)
loope
mov
loope
jb
sub
sub
leave
fcom
ss
loopne
mov
cs
xchg
cwde
mov
cmp
mov
test
add
lea
imul
push
xor
jae
jmp
mov
jl
mov
dec
push
sbb
bound
mov
mov
mov
movs
icebp
imul
mov
aas
adc
jae
mov
faddp
enter
jo
sub
(bad)
aaa
jecxz
cmp
sbb
sahf
and
push
sub
or
sbb
imul
or
adc
sbb
(bad)
int
ds
out
xchg
or
ret
outs
enter
mov
je
mov
push
lahf
inc
shr
sub
mov
hlt
inc
scas
addr16
lahf
mov
cs
pop
in
leave
add
xlat
and
dec
or
in
das
mov
aas
jo
push
sti
push
in
adc
pop
daa
adc
or
mov
(bad)
aad
pop
dec
adc
dec
clc
jmp
int
dec
push
test
push
mov
adc
push
out
hlt
mov
fidivr
out
out
pop
xor
dec
xor
add
lahf
test
push
push
push
push
int
je
movs
loopne
jo
mov
mov
loop
loop
cwde
movntq
mov
push
sub
imul
(bad)
stc
jne
fidiv
ins
and
add
jbe
in
in
in
dec
mov
ret
out
xchg
sbb
jmp
and
inc
jge
pop
stc
adc
or
jb
aad
cmp
fstp
inc
cmp
rcr
and
push
cmp
pop
rol
mov
cmp
fmulp
inc
pop
inc
mov
cs
jge
lahf
mov
ss
dec
jbe
adc
inc
fwait
xor
or
push
jno
mov
imul
out
dec
or
aad
pop
jmp
mov
add
sub
mov
adc
call
cmp
mov
xchg
cmps
out
push
adc
push
bound
hlt
lods
jne
push
add
sub
push
xchg
sbb
jnp
push
loope
mov
add
popa
(bad)
inc
or
mov
std
pusha
pusha
pop
rol
shr
mov
mov
clc
rcl
pop
cmps
pop
into
pop
repnz
add
jb
jo
stc
adc
or
aad
push
sbb
inc
add
cdq
call
mov
rcr
xor
add
jbe
xor
adc
sbb
(bad)
pop
cmps
push
mov
xchg
add
xor
sub
add
into
movs
mov
shl
push
mov
mov
data16
js
fsubr
stos
scas
int3
mov
inc
stc
pop
or
xchg
xchg
gs
callw
ss
stos
jmp
mov
inc
popf
push
mov
pop
pop
mov
add
and
dec
and
mov
xchg
sahf
test
inc
dec
jns
sbb
push
mov
ss
out
add
pop
shl
je
mov
ins
loopne
sti
mov
js
jp
xor
adc
ret
call
rcl
sbb
stc
inc
inc
outs
cs
push
or
in
sbb
je
mov
lds
mov
call
xchg
push
mov
sbb
mov
pop
rcr
aaa
mov
and
jp
xchg
aad
out
mov
das
mov
shl
repnz
test
stos
loopne
cdq
sbb
mul
adc
cmp
push
popf
not
aad
adc
retf
xor
fiadd
cmp
jmp
push
sub
ret
pop
lahf
(bad)
mov
cld
mov
clc
js
dec
loopne
leave
mov
add
fdiv
push
imul
cmp
sbb
neg
mov
hlt
fisubr
or
and
sub
mov
add
add
in
cmp
repz
sbb
jae
xor
call
dec
mov
clc
inc
in
stc
(bad)
ja
es
jp
adc
loope
pop
jmp
pop
imul
or
or
xor
sahf
push
jle
xchg
dec
test
push
adc
pusha
movs
repnz
push
dec
mov
jnp
push
mov
inc
jns
adc
and
or
fiadd
inc
imul
imul
rol
neg
stos
and
fld
add
std
mov
ror
into
adc
pop
jno
mov
fisttp
repnz
cmp
fidiv
jb
mov
fwait
lock
jb
jmp
movs
mov
jg
and
dec
in
adc
fist
mov
icebp
pop
ja
jmp
imul
jo
(bad)
int
sbb
hlt
mov
repnz
cli
pop
inc
pop
nop
pop
pop
inc
mov
xor
call
adc
out
data16
fsubrp
out
test
das
sbb
fisub
pop
loop
or
retf
loopne
enter
mov
and
pusha
in
xchg
shl
dec
mov
fisubr
lods
popa
cmc
jmp
sub
and
aam
and
test
sbb
jo
mov
cmc
bound
lds
pop
outs
cmp
clc
repnz
pop
xchg
jbe
repnz
mov
sar
scas
ja
sbb
aad
mov
sbb
adc
hlt
adc
push
inc
adc
fdiv
pop
mov
gs
in
fwait
push
or
or
lods
je
cmp
or
mov
xchg
push
dec
pop
lods
aad
mov
out
inc
mov
fild
xor
pop
and
cmp
sbb
cmp
lods
xchg
repz
and
and
mov
sub
mov
arpl
mov
and
aas
sbb
pop
cmp
out
ds
push
sub
rol
stos
daa
jmp
(bad)
fdiv
xchg
outs
lods
lahf
sbb
les
lahf
jns
loop
dec
jne
adc
dec
retf
int3
(bad)
fincstp
dec
in
add
adc
call
in
xchg
xor
mov
xor
arpl
or
(bad)
cmc
test
iret
push
out
xlat
out
cmp
cmp
(bad)
imul
pop
or
in
xchg
ret
mov
dec
pop
aas
rol
adc
addr16
lock
jle
and
popf
sbb
cmp
retf
pop
daa
fwait
xor
add
dec
retf
pop
push
iret
shl
xor
test
xchg
sbb
out
cdq
mov
jns
test
sub
(bad)
out
push
test
add
xor
out
adc
imul
add
lahf
cld
in
jns
aas
fstp
push
(bad)
ins
and
pop
adc
and
xchg
test
pop
or
push
mov
and
jno
add
mov
nop
(bad)
ja
shr
jmp
mov
into
xchg
push
out
adc
xchg
je
pop
mov
sbb
lea
inc
mov
lock
mov
stos
enter
sub
aaa
repz
arpl
mov
or
stos
ins
test
xlat
adc
out
pop
ficomp
popa
out
out
pop
cmp
add
pushf
repnz
in
repz
ins
ret
pop
popf
ret
xchg
jmp
shl
into
mov
mov
retf
xor
xchg
ds
cwde
sbb
dec
jb
pop
fwait
loope
mov
xor
dec
mov
pop
leave
cs
gs
jp
push
fiadd
pop
fsubp
jae
xor
inc
xlat
cmp
cdq
inc
scas
mov
call
rol
or
cdq
inc
repnz
or
push
dec
rol
ins
sbb
mov
inc
sbb
add
dec
pop
add
or
xchg
cmp
lods
cmp
pushf
xor
(bad)
mov
xchg
and
iret
push
cmp
sub
adc
and
imul
add
jmp
or
in
rcr
inc
inc
loopne
jmp
pop
mov
dec
rcr
ds
inc
push
xor
ins
pop
out
mov
mov
retf
push
push
push
addr16
leave
xchg
mov
push
test
mov
sbb
and
hlt
jnp
push
push
loope
jp
(bad)
(bad)
scas
push
sahf
sar
pop
inc
dec
mov
add
pop
popf
dec
sub
adc
xchg
movs
(bad)
adc
cwde
les
mov
pop
ud1
int3
adc
inc
sar
mov
cwde
jecxz
jmp
xchg
repnz
(bad)
mov
sub
sbb
repnz
fimul
ja
add
ret
xor
jmp
pop
dec
stos
ins
push
movs
inc
xor
lea
add
sub
bound
hlt
jp
int
mov
push
mov
test
mov
cld
push
(bad)
jnp
test
std
cwde
pop
push
ret
inc
sub
dec
(bad)
fyl2x
jmp
push
add
je
pop
push
and
or
sub
imul
and
mov
or
imul
and
xor
mov
mov
xchg
lods
sub
jno
std
ss
push
sub
adc
or
xor
sbb
mov
add
pop
xchg
mov
aaa
ins
call
fwait
jne
ja
inc
retf
gs
or
xlat
(bad)
xchg
xchg
hlt
das
aad
test
pop
aaa
test
xor
popf
lea
jbe
mov
popf
mov
and
pop
xchg
lea
call
popf
xor
pop
jnp
aam
fsubr
lods
mov
or
(bad)
sbb
xor
(bad)
(bad)
hlt
lds
or
cmps
mov
inc
in
xchg
mul
shl
dec
inc
pop
es
pop
dec
jp
leave
mov
xchg
mov
xor
jbe
hlt
sbb
mov
pcmpeqd
add
add
cmc
lea
js
mov
addr16
dec
dec
mov
or
pop
or
push
enter
mov
inc
fidivr
cld
iret
xchg
jmp
les
push
mov
mov
adc
sub
mov
add
sbb
jnp
or
mov
cli
push
dec
mov
push
aas
add
into
inc
aas
sti
adc
xor
push
(bad)
or
out
movs
lea
rcl
leave
shr
mov
jmp
adc
mov
retf
dec
and
pop
xchg
aas
inc
pop
sets
xchg
lods
add
push
lahf
pushaw
xchg
push
pop
add
and
push
jo
push
dec
test
mov
in
out
lds
imul
or
sub
xchg
mov
cmp
mov
mov
push
push
or
fsubr
sbb
gs
adc
cmps
out
lock
jo
retf
pop
xor
outs
mov
inc
adc
(bad)
popf
jnp
cwde
and
mov
sbb
rol
adc
add
cdq
mov
into
and
into
lods
push
jnp
cli
hlt
repnz
jl
(bad)
iret
dec
aad
push
enter
sub
(bad)
aad
mov
or
or
sub
xchg
sar
cdq
or
or
or
sbb
add
mov
shl
or
aad
dec
jns
icebp
stc
daa
xor
clc
push
add
and
psubsb
jg
xchg
push
test
mov
retf
mov
mov
fist
dec
mov
inc
sti
or
je
mov
pusha
jp
sbb
sub
aas
ds
mov
inc
imul
pop
jle
(bad)
jge
cld
inc
cdq
cmc
cmp
mov
out
js
sti
test
popa
movs
or
dec
cmp
jp
lea
imul
or
loop
sub
cli
aam
fwait
add
mov
pop
pop
xor
sar
addr16
cli
sbb
sahf
push
push
lea
popf
movs
pusha
xor
stos
sub
pusha
adc
adc
cmp
lock
dec
jnp
xor
sar
push
adc
ds
or
out
push
xchg
out
retf
adc
sub
cmp
jnp
jne
dec
mov
dec
iret
repz
cmp
jns
loop
push
cs
adc
aam
xchg
stos
push
loopne
mov
call
dec
hlt
inc
mov
push
pop
dec
sbb
jl
loop
outs
cdq
xchg
mov
iret
sub
or
inc
aaa
jbe
pop
daa
dec
pushf
dec
ins
pop
in
push
test
addr16
inc
call
inc
cdq
or
popf
push
mov
or
sbb
inc
rcr
pop
cwde
mov
or
sub
clc
mov
sub
ror
push
pop
dec
xor
(bad)
in
arpl
call
cmp
xchg
mov
pop
loope
push
push
mov
lds
js
xor
xchg
je
pop
jnp
push
xor
je
retf
or
mov
bound
push
mov
inc
sar
add
cs
jecxz
ja
std
push
pop
mov
cmps
hlt
dec
ss
imul
xchg
cmp
jl
inc
mov
lods
push
stos
mov
sub
push
mov
add
iret
inc
pop
mov
arpl
imul
xor
sbb
mov
and
pop
jns
inc
in
xor
jmp
pop
sbb
mov
dec
xchg
int3
mov
dec
ins
mov
mov
(bad)
jg
push
fadd
inc
xchg
(bad)
push
movs
repnz
dec
cdq
pushf
or
cmp
and
or
jg
pop
fcmove
(bad)
or
fabs
push
in
sub
adc
xchg
push
cmp
sub
add
scas
test
je
fsub
push
xchg
mov
pop
jmp
adc
fwait
sub
test
lahf
sahf
dec
push
pop
sbb
mov
ins
cld
out
pusha
ret
mov
adc
dec
sub
inc
sbb
jae
sbb
add
adc
sbb
mov
xor
lock
lods
(bad)
mov
and
and
js
mov
aaa
(bad)
in
fs
bound
sar
call
xchg
sbb
movs
stos
bound
cdq
inc
push
aas
repz
rcr
mov
inc
shr
push
(bad)
xor
jg
and
in
jmp
(bad)
aad
idiv
pop
xor
pop
js
xchg
scas
out
test
and
fwait
inc
push
aaa
cmp
into
inc
mov
inc
test
add
aam
das
push
mov
outs
ret
popa
gs
scas
inc
push
mov
inc
fstp
jae
xchg
das
xchg
push
out
jnp
movs
xchg
ret
sar
lds
ds
xor
scas
jne
leave
retf
jno
jecxz
mov
jno
(bad)
fnstcw
or
(bad)
idiv
imul
jns
jae
jno
xor
xor
ret
sbb
ret
clc
mov
pusha
and
inc
adc
adc
mov
or
(bad)
mov
mov
shr
push
and
push
jbe
pop
shr
into
stos
inc
dec
lods
imul
jno
inc
or
cwde
dec
xor
xchg
aam
dec
xchg
(bad)
clc
adc
mov
dec
ja
pop
push
jg
adc
cmp
push
xor
push
jl
ror
bound
xchg
cli
aad
aaa
or
les
jo
rcr
push
ins
(bad)
out
mov
shl
xlat
test
or
ror
cmp
rcl
es
int
or
bound
lods
(bad)
adc
adc
js
xchg
xor
ins
sti
dec
scas
je
out
xor
call
mov
stc
lods
loopne
adc
aas
mov
mov
cdq
add
sub
xor
repnz
mov
cld
cdq
aam
clc
dec
out
aaa
jle
mov
jbe
movs
fcom
xchg
call
dec
test
adc
movs
jmp
int
dec
int3
mov
inc
fmul
mov
push
sbb
out
pop
movs
push
add
leave
xor
scas
jmp
mov
add
rol
imul
sub
push
test
fsubrp
inc
popa
sub
xchg
call
push
mov
and
and
mov
std
or
inc
sbb
cmp
xor
popf
add
fistp
ds
and
mov
adc
gs
xchg
push
cmps
repz
adc
add
mov
adc
cdq
sub
sbb
pop
push
into
into
movs
mov
mov
out
int
xchg
sbb
ret
stc
inc
adc
cmp
mov
stos
ins
bound
ds
sbb
cmps
addr16
push
lds
inc
pusha
pushf
push
mov
aas
mov
fs
jmp
push
mov
sub
ret
mov
repz
test
fwait
ror
cmp
mov
int
xchg
xchg
nop
clc
mov
dec
les
add
mov
or
ds
loop
adc
xor
in
adc
ret
popf
jle
xor
cmps
mov
adc
push
push
retf
add
sbb
repz
adc
pop
xor
adc
sub
fwait
mov
std
inc
call
repz
inc
js
sti
movs
sub
xor
sub
out
pop
push
lahf
push
test
movs
lods
or
jg
sub
int
js
mov
sub
push
pop
or
bsf
adc
movsx
mov
(bad)
idiv
push
gs
fisub
or
mov
mov
addr16
(bad)
cs
pop
jbe
leave
adc
xor
gs
push
or
and
push
cmps
out
pop
les
daa
mov
(bad)
stc
sub
outs
shl
movs
mov
pop
add
mov
mov
jecxz
push
cld
rcl
cld
mov
fld
mov
xchg
fwait
jmp
(bad)
jp
pop
add
iret
and
xchg
(bad)
lock
cmps
ds
add
add
cmp
jecxz
mov
out
sbb
and
ret
ins
lea
fild
sbb
cmps
(bad)
fisubr
pop
push
add
sbb
pusha
repnz
cmp
js
inc
push
cwde
pop
and
xchg
mov
leave
popa
sbb
mov
(bad)
ins
or
mov
fxch
add
push
jg
add
enter
out
xchg
inc
adc
outs
mov
clc
in
mov
loope
xchg
fistp
sbb
add
in
mov
cdq
pop
(bad)
or
push
jl
stc
add
pusha
movs
(bad)
adc
pop
xor
test
sar
lods
es
nop
mov
sub
loop
es
ret
outs
not
loope
push
push
jno
and
lods
icebp
cmp
popf
push
push
iret
and
sbb
into
pop
push
inc
idiv
in
or
sbb
mov
fsub
xchg
adc
dec
leave
out
loopne
jmp
sub
push
fbld
dec
sub
sub
(bad)
or
std
test
sub
sahf
retf
pop
stc
mov
jno
retf
sbb
out
cwde
outs
jecxz
in
enter
dec
mov
mov
enter
mov
je
out
pop
push
fst
pop
cwde
add
mov
ss
mov
mov
mov
ins
add
push
pusha
imul
fsubr
inc
pop
clc
and
lahf
cli
and
call
ja
movs
enter
and
and
mov
test
push
ror
dec
fcom
sbb
fsubr
adc
or
aam
(bad)
jb
jp
sub
xchg
ror
imul
je
ins
or
test
fucom
push
jmp
(bad)
xchg
dec
mov
xlat
loope
xor
das
inc
mov
(bad)
inc
fs
dec
imul
repnz
ss
add
cmps
push
out
jecxz
mov
fdivr
les
lods
adc
cmp
sub
inc
push
xchg
xor
loop
mov
jmp
test
add
push
mov
jnp
push
aaa
inc
push
jnp
loop
clc
jae
in
push
mov
int
cwde
jp
shl
push
into
sbb
clc
inc
cdq
pop
icebp
mov
xchg
fisub
in
jb
jge
mov
dec
int
int
repz
add
adc
jae
sub
ret
out
xor
xchg
adc
adc
or
rol
mov
daa
and
xchg
fs
sub
jmp
or
ret
sbb
shr
mov
pop
dec
cs
pop
push
bound
lock
jmp
sbb
or
mov
fisub
fs
mov
aam
jmp
inc
cmps
test
lods
gs
pop
retf
xchg
rcr
inc
shr
add
sub
push
shr
push
xlat
into
rol
dec
daa
enter
push
add
sub
push
mov
iret
in
mov
sub
in
pop
inc
fstp
out
jle
inc
or
pop
lods
mov
mov
scas
jnp
scas
mov
mov
sbb
test
jge
in
(bad)
fcom
retf
in
mov
and
fbstp
mov
pop
xchg
xchg
in
cmp
mov
mov
mov
popa
add
mov
fist
adc
in
push
out
in
sahf
cdq
mov
imul
icebp
sub
sub
les
jns
ret
js
xor
xchg
into
test
lods
mov
cmp
xor
xchg
imul
test
sbb
repnz
xchg
sbb
inc
ror
xlat
pop
xor
and
aad
jae
mov
repz
idiv
sub
jae
es
sbb
and
psubusw
cmps
jo
scas
cmp
xor
outs
aas
jmp
add
xchg
and
mov
loopne
in
setge
sbb
(bad)
stos
(bad)
xchg
mov
mul
ds
leave
jbe
sbb
dec
das
fst
mov
loop
inc
xor
pop
leave
ror
scas
out
(bad)
cmp
xor
xlat
mov
mov
and
test
xchg
mov
mov
sbb
sub
jae
and
fld
xchg
and
push
dec
pop
push
jmp
in
adc
(bad)
cwde
jmp
mov
stos
xor
cmp
sbb
mov
or
sahf
push
cli
loopne
std
or
xor
add
mov
push
aam
mov
jg
sar
jmp
in
retf
dec
repnz
mov
add
inc
jp
add
hlt
and
push
add
cs
sbb
movs
add
and
sar
pop
sub
and
fild
js
sahf
sub
and
into
ficomp
xchg
dec
das
inc
sahf
call
les
and
cli
mov
lea
mov
out
dec
rcl
cmp
mov
cs
test
(bad)
jp
dec
xchg
mov
dec
gs
cmp
ins
add
nop
ss
add
jp
sub
(bad)
jb
push
popa
xchg
push
and
cmps
(bad)
pop
xchg
hlt
dec
adc
clc
ja
stos
shl
xchg
cmp
pushf
in
sub
(bad)
cmc
jbe
das
out
dec
test
add
cwde
dec
sbb
and
and
or
fxch
test
cdq
scas
fnsave
sbb
retf
xor
(bad)
sub
mov
(bad)
xchg
dec
push
test
iret
inc
daa
(bad)
cwde
pop
adc
dec
sti
mov
loopne
aad
out
jmp
shl
pop
fmul
mov
jns
xchg
ffreep
mov
adc
cld
xchg
aad
adc
ins
push
and
inc
push
pop
lea
(bad)
popf
scas
lock
sub
ss
xlat
xchg
call
xor
xor
pop
dec
cmp
cwde
and
sbb
adc
add
mov
leave
push
fstp
ret
scas
fadd
mov
rcr
push
ins
daa
xor
js
(bad)
(bad)
sub
pusha
sub
mov
pop
bound
mov
push
dec
mov
pop
in
fsub
fmul
xor
push
inc
lds
shr
sbb
pop
movs
sub
jno
xchg
mov
jmp
pop
in
push
imul
sar
cmp
(bad)
jb
fnstenv
repz
div
mov
out
pop
int
add
xor
push
(bad)
jns
sub
cmp
sbb
in
jmp
push
cmp
xchg
mov
mov
pop
pop
enter
sub
mov
aam
cmp
loop
lock
out
xor
fsub
out
xor
mov
clc
push
aaa
sar
jmp
lods
mov
jns
inc
aas
pop
(bad)
xor
lds
aaa
add
push
inc
mov
pop
xor
dec
mov
stc
scas
add
in
and
out
push
add
jae
pop
pop
xchg
jg
lods
mov
test
sub
loopne
enter
fbld
xor
or
lds
fimul
mov
mov
inc
rep
movs
mov
daa
jecxz
in
call
stos
stc
lea
jae
sub
and
mov
das
stos
out
mov
pop
int
aad
or
call
lahf
jmp
mov
mov
add
push
pop
add
push
push
fld
xor
cmp
int
cs
dec
test
retf
jmp
test
in
or
int
pop
cmps
js
ja
mov
cmp
add
les
out
push
scas
out
xchg
call
dec
mov
fcomp
enter
imul
call
adc
lock
test
arpl
push
movs
(bad)
gs
arpl
jne
lahf
cmp
stos
adc
scas
movmskps
jae
int
push
pop
xlat
mov
pushf
sub
lods
imul
ja
call
xchg
dec
and
jg
nop
fdiv
scas
ins
mov
jmp
lds
arpl
test
sub
pusha
popa
add
pop
pop
mov
jnp
pop
call
mov
imul
cmps
rol
xor
mov
sub
daa
sub
das
mov
sbb
cmp
mov
mov
xchg
aad
test
cmp
dec
(bad)
or
retf
out
fs
(bad)
xor
jns
dec
xchg
dec
retf
push
pop
jmp
xor
ss
pushf
leave
push
mov
enter
jbe
not
dec
mov
js
mov
mov
mov
and
mov
repz
cwde
or
jo
shr
loop
rcr
fldcw
inc
xchg
cmp
mov
lods
add
mov
and
add
outs
xor
retf
xor
adc
add
rcl
add
out
sub
js
push
out
fdiv
cmps
mov
loop
xor
and
and
hlt
push
fwait
call
and
lea
in
dec
lahf
in
push
push
jne
pop
pop
mov
push
cmps
in
inc
in
jmp
add
and
inc
jle
sbb
and
mov
in
sar
lea
pop
mov
scas
test
fs
ins
ins
or
jo
inc
or
int3
mov
jge
enter
or
mov
jb
pop
rcl
das
loope
mov
add
daa
or
std
out
inc
mov
push
mov
jge
es
pop
mov
scas
and
mov
loope
int3
push
clc
scas
inc
xor
push
and
or
popa
or
retf
icebp
mov
aam
push
inc
jne
jo
scas
fisttp
lods
cs
cli
mov
mov
lock
inc
cdq
push
sub
cmps
fptan
adc
mov
mov
or
mov
test
ror
mov
mov
bound
pushf
mov
jl
xor
sbb
mov
xchg
cmp
and
cdq
and
push
enter
je
test
push
or
jmp
cmp
loop
or
sbb
shl
int3
sar
aam
call
fidiv
push
call
inc
cld
push
rep
rol
popa
jnp
mov
cmps
jb
xor
mov
xchg
and
adc
jmp
jmp
or
lods
push
push
push
ret
(bad)
aad
sub
xchg
add
(bad)
jbe
nop
icebp
imul
retf
inc
popf
call
popf
ret
sbb
xor
adc
bound
push
xchg
stos
push
jns
(bad)
mov
loop
mov
loopne
mov
dec
inc
out
leave
imul
and
sub
not
xor
push
ror
xchg
adc
mov
movs
cli
pop
fild
shl
jge
inc
gs
xor
mov
sub
jg
inc
fstp
or
adc
ret
add
xor
mov
mov
shr
dec
pop
push
xchg
les
data16
push
outs
inc
inc
pusha
stos
ret
in
push
je
punpcklbw
xor
(bad)
bound
sub
cmp
mov
add
xchg
lahf
sbb
lock
mov
mov
push
add
mov
jg
mov
sbb
pop
mov
gs
mov
psraw
stos
pop
pushf
fistp
pop
inc
inc
pop
push
cmp
pop
mov
jae
or
call
xchg
cmc
sub
test
es
add
sbb
jmp
mov
retf
inc
lods
push
cmp
rol
fmul
jmp
sbb
push
lods
and
stos
fsubp
aad
inc
or
xor
(bad)
les
jp
jmp
ret
(bad)
dec
cmc
xor
dec
bt
add
mov
retf
fnsave
push
sub
movs
mov
inc
(bad)
pushf
push
pop
retf
scas
outs
add
dec
fcmovb
rol
jle
jbe
jg
das
leave
mov
cwde
or
arpl
loope
xlat
out
call
(bad)
xchg
call
(bad)
xchg
sbb
hlt
push
sub
pop
mov
mov
mul
lahf
out
out
test
clc
dec
pop
jl
dec
imul
push
dec
fidivr
jmp
add
popa
xlat
icebp
xor
int
pop
jns
cmp
iret
mov
inc
es
dec
hlt
xchg
in
pop
or
in
scas
(bad)
loope
sbb
ins
or
push
arpl
or
ret
cmp
jnp
cmp
dec
ret
push
out
push
inc
imul
cmps
mov
bound
repz
unpcklps
sbb
data16
pusha
jb
pop
push
ret
test
test
pop
push
(bad)
mov
mov
xchg
scas
push
adc
pop
cli
dec
scas
nop
push
or
xor
(bad)
lods
nop
pop
(bad)
mov
jmp
jo
pop
shl
test
(bad)
and
sub
sub
cmp
out
(bad)
mov
mov
es
test
es
add
bound
mov
sub
pop
inc
xchg
mov
push
shr
inc
dec
test
arpl
shl
sbb
cdq
adc
ss
rcl
or
push
dec
fwait
movs
sahf
sbb
call
and
dec
mov
mov
gs
or
or
imul
sub
in
push
mov
xchg
fist
push
stc
leave
dec
repz
jmp
jno
ret
mov
dec
pop
jno
sbb
sbb
pop
and
icebp
leave
mov
scas
repnz
xchg
jnp
mov
inc
stc
loope
jp
cdq
lock
prefetchwt1
rcl
pop
pop
fldenv
jmp
jmp
js
enter
add
mov
into
add
shr
jo
mov
push
das
mov
xchg
jp
scas
push
sub
push
cmp
mov
movs
jns
cli
mov
test
xchg
ror
mov
push
rcr
adc
dec
jnp
inc
mov
adc
stc
pop
ret
push
bound
inc
ror
daa
jae
fmul
icebp
stos
call
or
out
xchg
inc
xchg
mov
inc
xlat
outs
dec
push
fcomp
(bad)
cmc
ret
clc
jbe
out
xor
call
mov
mov
aas
je
cmps
in
sub
and
mov
push
mov
sub
in
push
push
ret
xchg
inc
cmp
cmp
xor
cmp
retf
jmp
sbb
xchg
or
clc
jl
push
sub
fstp
or
aas
inc
and
(bad)
in
mov
sub
cmp
mov
fsubp
adc
lds
jg
repz
add
stc
ins
into
mov
rcr
pop
je
push
movs
aas
scas
xchg
mov
sbb
loope
fmul
jp
int3
ret
pop
xchg
mov
js
sbb
call
sub
enter
ret
dec
sub
mov
or
push
jbe
test
mov
dec
jmp
repz
fnstcw
cdq
int3
mov
rcr
test
enter
cld
iret
gs
xchg
mov
mov
cmp
in
das
xchg
lea
cmps
add
aas
push
push
jl
pop
mov
rcr
cld
sbb
(bad)
jp
retf
or
dec
lods
adc
xlat
pop
xchg
xchg
mov
xor
sti
js
popa
jmp
pop
gs
jmp
mov
mov
in
(bad)
jmp
adc
lock
pop
add
xchg
rol
push
add
sbb
bound
sub
pushf
push
mov
fdiv
add
adc
loope
ins
test
inc
pop
sub
loop
jl
mov
and
or
mov
push
inc
mov
sysexit
loope
xchg
sbb
sbb
in
stc
mov
ins
and
or
repnz
jmp
inc
sub
shl
dec
inc
xlat
enter
mov
cmps
jecxz
or
sub
mov
or
mov
dec
push
jl
fcmove
jp
sub
mov
ja
push
ret
cli
and
mov
add
dec
mov
stc
jne
test
jp
stc
sti
add
jl
ret
popa
push
mov
jno
cli
jmp
xor
add
pop
xor
fmul
jbe
add
nop
mov
or
mov
scas
ror
das
jbe
xchg
sub
pop
cdq
and
cmp
push
loope
call
xchg
cmp
ds
push
ds
jge
dec
sbb
pop
mov
add
adc
rcr
cmps
add
in
push
mov
in
shr
dec
sub
add
pop
xor
fs
push
popa
adc
inc
and
lds
jns
pop
push
push
imul
xchg
shl
outs
leave
mov
mov
add
iret
fwait
sbb
dec
mov
sub
es
cli
scas
cs
rcr
nop
cmovg
cmc
mov
outs
les
adc
cmc
enter
cmp
xchg
hlt
outs
outs
fcomp
and
mov
xor
xchg
test
outs
jle
cmps
add
loopne
nop
pop
jecxz
mov
fldenv
into
movs
lods
mov
test
push
in
cmp
add
push
xor
push
lahf
out
xor
es
sub
loop
neg
mov
xor
add
sbb
sub
ds
jp
loop
mov
out
gs
jno
(bad)
scas
sub
mov
adc
dec
fisub
bound
cmp
mov
idiv
out
mov
mov
or
fs
jae
xchg
sahf
pop
mov
not
movs
inc
repz
inc
adc
pop
test
xor
and
test
and
int
adc
aad
call
sbb
adc
int3
jne
mov
lahf
jmp
rcr
movs
jno
cmp
mov
jge
enter
xchg
ret
std
dec
test
ins
cdq
xchg
xor
dec
pop
push
jnp
test
aad
mov
dec
cmp
inc
xor
adc
(bad)
pushf
mov
stos
popf
test
dec
mov
adc
sbb
fs
jno
lahf
mov
(bad)
call
es
mov
inc
ror
xchg
popa
sahf
nop
mov
ss
xor
addr16
cmp
inc
mov
mov
lea
sub
xchg
or
and
cmps
adc
push
sub
mov
cwde
shr
xchg
sub
(bad)
and
lods
jle
xchg
dec
cmps
(bad)
pop
or
mov
adc
push
lea
mov
inc
cs
shr
mov
xor
mul
or
sbb
jne
lods
aaa
and
push
sar
pop
adc
sub
sti
cmp
cdq
fldenv
sbb
sbb
in
ins
pop
scas
jno
pop
jge
test
ret
test
or
shr
and
and
imul
repnz
or
push
mov
mov
and
(bad)
out
add
(bad)
arpl
pop
mov
jp
adc
mov
jle
rol
pop
cmp
inc
lods
mov
ror
scas
jo
nop
(bad)
lea
sub
jae
jp
xchg
test
and
imul
fld
jne
jnp
jp
jge
pop
fiadd
retf
out
inc
lock
pop
rol
call
ret
sub
xchg
movs
lods
les
pop
shr
scas
push
daa
jle
mov
jmp
outs
movs
ror
test
movs
pop
dec
add
in
and
pop
(bad)
and
in
push
retf
(bad)
jb
xchg
mov
add
aas
inc
or
addr16
sub
cli
lods
mov
lea
sub
sub
sahf
jle
and
xor
or
dec
jg
jge
out
jns
cmp
test
push
pop
in
cdq
fmul
retf
jbe
std
fisttp
into
sbb
test
pop
jo
jnp
shl
adc
pop
xor
cwde
adc
or
push
ins
outs
jg
push
fnstenv
cmp
mov
jmp
into
push
out
pop
adc
add
(bad)
cdq
inc
cmp
into
aas
and
cdq
ficomp
and
fwait
jp
or
js
jae
push
loop
pop
loope
add
cs
addr16
jl
mov
mov
mov
test
inc
dec
dec
es
jae
sti
sbb
jle
cmps
cmp
sbb
adc
int
push
cmp
mov
cwde
xlat
popf
or
data16
data16
out
inc
add
jl
test
push
cmp
and
mov
xor
hlt
sub
jb
aam
push
repnz
ja
mov
(bad)
mov
xor
dec
add
stc
hlt
add
sub
xchg
ss
add
lds
test
pop
jmp
mov
out
push
xchg
imul
enter
sub
loop
int3
ins
ret
cmp
paddsb
jl
inc
sub
outs
sub
int3
adc
mov
inc
or
aam
jo
in
rol
pop
lea
leave
inc
aad
or
and
push
aad
add
sahf
scas
add
jo
sbb
pop
bnd
push
mov
sbb
mov
retf
pop
popa
lock
sbb
dec
fnstsw
nop
mov
add
dec
push
push
cmp
in
mov
mov
aad
pop
fwait
loopne
mov
dec
out
sub
shl
sbb
cmp
in
inc
sbb
pop
cmc
data16
iret
pop
xor
out
sub
fsubr
inc
jns
fdiv
mov
xchg
fwait
data16
inc
add
xor
data16
movs
(bad)
mov
and
imul
push
mov
pop
push
pushf
pop
mov
pusha
push
icebp
dec
sbb
pop
std
cwde
div
or
xor
xor
sar
mov
jmp
in
xor
popa
dec
retf
pop
xor
aaa
and
adc
stos
sar
pop
or
jbe
repnz
cmp
daa
mov
mov
push
imul
cli
icebp
xor
and
loope
and
mov
loop
inc
rcl
test
mov
sub
fild
adc
cmp
mov
lds
and
ins
inc
ret
mov
out
xor
fild
inc
mov
inc
(bad)
fdiv
jae
sbb
sti
mov
add
cmps
or
enter
ficomp
jae
outs
or
daa
mov
repz
cmp
inc
enter
push
adc
pop
sbb
pop
ins
rcr
sbb
cmp
push
pop
imul
ficom
repz
pop
cs
(bad)
adc
in
sbb
mov
repnz
sbb
sbb
or
jmp
push
mov
push
pop
jb
dec
shl
mov
xchg
pop
xor
inc
cld
fcomp
shl
lea
shl
ret
dec
and
loopne
mov
int3
mov
jb
dec
sub
adc
pop
ins
cdq
push
test
xor
jmp
pop
pop
aas
or
imul
(bad)
(bad)
(bad)
lods
xor
jbe
push
iret
mov
inc
cli
sti
inc
or
push
dec
xchg
icebp
add
cmp
xchg
aaa
cmps
jmp
add
mov
pop
ds
push
rcr
(bad)
clc
pop
sub
sti
(bad)
out
mov
mov
mov
add
loopne
jne
and
sbb
xchg
rol
dec
push
and
cmp
xchg
leave
lock
mov
xor
jno
xchg
fs
movs
pop
(bad)
in
mov
cdq
mov
fwait
mov
ss
sbb
add
and
xchg
sbb
(bad)
inc
loop
adc
add
mov
mov
adc
mov
xor
ss
push
mov
(bad)
out
(bad)
adc
imul
repnz
scas
cmc
in
sahf
mov
inc
jne
add
jne
mov
(bad)
cmc
push
and
les
ret
or
adc
pop
call
push
xor
gs
scas
loope
shl
aad
retf
jmp
inc
mov
dec
mov
dec
jmp
ja
or
and
inc
pop
mov
mov
ret
and
not
in
xchg
pop
add
retf
fbld
xor
xlat
pusha
inc
lods
pushf
mov
mov
shl
call
and
retf
lahf
into
mov
inc
fs
pop
jmp
fwait
ret
jge
xlat
int3
inc
je
ins
push
out
adc
cli
and
(bad)
fwait
or
scas
popa
and
xor
mov
mov
sub
lahf
out
(bad)
lock
or
inc
aas
lods
mov
inc
out
inc
mov
sub
(bad)
aad
clc
mov
stc
push
or
cwde
jge
outs
(bad)
cmp
or
nop
ins
mov
push
mov
mov
push
icebp
inc
pusha
test
xchg
mov
cli
lods
data16
push
push
push
movs
fistp
or
(bad)
jle
xchg
bound
jmp
add
pushf
push
retf
push
ja
sbb
out
push
in
retf
mov
inc
and
adc
pop
cmc
xchg
movs
leave
fsub
aam
xor
ret
fstp
mov
mov
out
popf
jmp
ret
and
sub
push
jnp
pop
jo
xchg
movs
adc
mov
into
mov
or
push
fs
xchg
ficomp
push
test
fiadd
jle
fsubr
je
and
stos
or
add
push
leave
pop
lods
mov
(bad)
dec
pop
clc
cld
repz
les
test
movs
push
or
jb
push
test
stc
sbb
mov
xor
pop
fdivr
or
mov
(bad)
jns
adc
and
shr
jae
cli
push
adc
cdq
jne
push
dec
cdq
in
add
(bad)
and
sbb
dec
sbb
cmp
mov
fldenv
mov
adc
xor
dec
mov
enter
xor
xor
sbb
jl
dec
fidivr
sbb
mov
leave
retf
mov
ret
inc
mov
mov
mov
sbb
add
mov
jge
cmps
int
call
neg
and
push
(bad)
mov
pop
lods
ds
add
xchg
sar
shr
arpl
dec
loope
xchg
loopne
sar
pop
cli
sahf
dec
retf
aad
ret
dec
inc
xor
xor
inc
fisttp
jb
or
movs
fxch
fwait
cmp
(bad)
jbe
and
sbb
adc
mov
push
jmp
sbb
bound
jae
xchg
mov
cmp
mov
call
xor
out
mov
fimul
sub
adc
fdivr
aam
mov
fisubr
aad
lahf
std
(bad)
dec
hlt
fcmovnbe
cmp
fwait
jb
pop
outs
cli
sub
stos
and
fld
repnz
push
or
test
mov
test
sbb
inc
xor
loope
call
(bad)
sbb
push
out
inc
adc
jl
(bad)
mov
les
mov
ja
mov
loop
jo
xchg
pop
mov
adc
cs
cmp
div
pop
and
es
imul
lds
lods
mov
push
jecxz
scas
mov
loop
jnp
imul
mov
pop
jne
mov
mov
xor
push
ds
dec
inc
mov
shl
fisttp
into
pop
mov
dec
(bad)
and
cwde
repz
ds
jbe
pop
push
and
call
sub
aas
mov
xchg
add
inc
xchg
cmps
add
cmp
inc
sub
gs
push
xchg
mov
jb
and
and
or
xchg
movs
ret
mov
leave
mov
jl
xchg
std
mov
call
frstor
xor
nop
mov
jb
xchg
(bad)
rcr
inc
(bad)
pop
or
inc
pop
(bad)
(bad)
cmp
and
test
dec
test
fwait
aam
stc
xchg
in
cmp
sub
cmps
lea
or
jge
mov
in
sub
adc
inc
cmp
stc
xlat
div
repz
mov
xor
mov
and
out
enter
adc
adc
(bad)
pop
jns
outs
fwait
mov
int3
popf
aas
mov
sub
jmp
int
cmp
mov
outs
ins
rcr
ret
cwde
inc
lfs
and
stos
(bad)
stc
shr
pop
lods
mov
dec
cmp
test
push
push
mov
mov
jmp
gs
das
and
cmp
je
xchg
push
pop
mov
xchg
cli
es
fnstsw
mov
cmp
and
and
sahf
jl
aam
jp
sub
test
call
aaa
or
call
out
xchg
jo
movs
add
mov
pop
or
cmc
jae
hlt
sti
and
mov
outs
sahf
jbe
lahf
lahf
and
and
or
mov
ret
aaa
jne
ss
jge
inc
shr
test
imul
ret
jecxz
cmp
dec
popf
cmp
in
icebp
shr
push
cmp
das
jnp
frstor
fld
fld
imul
lea
in
mov
cs
push
push
pusha
sahf
das
xchg
cmp
push
popa
cmp
jmp
popa
js
lods
xor
fwait
add
imul
stos
sahf
xor
pop
leave
scas
(bad)
rcl
mov
sub
or
inc
cmps
xchg
push
mov
ror
in
or
into
test
ds
jmp
mov
cmp
mov
adc
inc
jmp
pop
mov
sub
push
arpl
and
sbb
imul
adc
cld
mov
ror
hlt
cdq
xor
icebp
std
sbb
and
adc
lods
sbb
sbb
jmp
les
cmps
xor
aam
aad
fwait
dec
gs
test
push
jo
mov
sbb
popf
cld
nop
inc
shr
and
gs
or
inc
mov
pop
fidiv
sub
and
sub
lds
and
lds
mov
imul
movs
cmps
dec
pop
sbb
dec
push
std
inc
xchg
mov
mov
stos
stos
inc
rcr
adc
stos
xor
popa
and
mov
aad
xor
ins
imul
jg
jl
add
dec
in
jg
aaa
cld
xor
test
mov
or
popa
xor
test
mov
pop
retf
icebp
push
and
mov
mov
pop
jb
push
dec
mov
stos
xchg
jmp
mov
sbb
int3
int
adc
bound
jge
pcmpeqd
mov
cmp
ins
sbb
in
bound
jns
sbb
pop
xchg
cmp
xchg
imul
test
push
jb
jne
sbb
or
mov
and
xchg
(bad)
inc
ins
aas
sbb
sub
push
mov
mov
(bad)
dec
div
mov
add
cmp
pusha
push
shr
cmps
int3
out
inc
icebp
xchg
fs
stos
jmp
test
add
lods
fsub
daa
mov
sbb
ins
jbe
pop
push
(bad)
int3
mov
lods
and
in
fimul
xchg
cmps
fld
popa
mov
mov
arpl
adc
jge
loope
fwait
cmp
popf
lea
xchg
aas
dec
cdq
in
imul
mov
inc
adc
pusha
or
gs
jae
popa
(bad)
push
sub
stos
(bad)
movhps
movs
push
repz
js
test
test
push
mov
inc
pop
loopne
xchg
sub
jecxz
mov
jb
mov
inc
loope
mov
jp
sahf
es
rcr
pusha
jmp
aad
push
jne
mov
xor
inc
ret
push
test
fwait
movs
dec
and
lahf
pop
cmp
inc
push
inc
test
jo
and
inc
dec
mov
pop
test
lods
arpl
inc
inc
aad
je
mov
hlt
fst
retf
cmp
shl
mov
test
mov
sbb
jo
int
jp
outs
icebp
call
xchg
inc
dec
cmp
mov
sub
add
jb
pop
mov
jp
push
lahf
jbe
and
push
mov
push
xchg
push
(bad)
movs
adc
push
and
adc
fs
sub
aas
call
adc
push
rcl
lods
shl
push
add
int
popf
mul
xor
or
and
sub
fld
push
std
mov
adc
rcr
and
cli
retf
test
ds
push
pop
jns
retf
hlt
pusha
fidivr
mov
popf
adc
cs
fiadd
fcomp
adc
push
test
data16
fs
out
add
neg
ss
arpl
push
jp
jmp
in
push
rcr
jnp
fwait
lds
lea
imul
scas
push
mov
test
loopne
std
add
add
add
adc
loop
cmp
pop
shl
push
fdiv
data16
pop
adc
test
ja
or
mov
mov
xchg
mov
xchg
out
add
imul
sub
pop
lea
xchg
mov
ror
shl
add
fistp
sar
loopne
ja
or
sub
xor
jne
inc
jmp
jp
call
jo
test
cmps
sbb
xor
inc
jne
repnz
and
push
int3
icebp
into
push
mov
xor
arpl
clc
dec
add
mov
add
push
jg
not
mov
in
or
sbb
ds
or
mov
xorps
mov
push
div
xor
(bad)
call
loop
add
cmp
addr16
(bad)
icebp
into
dec
jl
jb
xor
inc
xor
mov
mov
ret
mov
xchg
outs
add
or
push
dec
cmp
clc
test
lock
rsm
dec
addr16
mov
sub
ret
or
mov
(bad)
into
push
mov
add
mov
fisub
or
out
xchg
pop
ror
add
cwde
mov
pop
and
jle
cmps
fnstsw
xchg
adc
sbb
cmp
dec
stos
out
inc
jo
cmp
outs
nop
push
jl
dec
mov
cmc
mov
call
int3
pop
xchg
or
ret
shr
xchg
cmp
pop
call
std
pop
xchg
xchg
lock
cld
cmp
sti
test
les
add
movs
data16
xchg
cmp
daa
jns
and
je
jp
daa
out
stos
in
pop
add
fucomip
rcl
es
out
cmp
fist
dec
aam
pop
arpl
lods
mov
adc
push
adc
or
sub
stos
push
sub
outs
mov
inc
xchg
rcr
loop
push
xchg
hlt
sbb
cdq
leave
push
dec
inc
mov
into
or
fs
stos
dec
ja
rcl
repz
push
mov
dec
mov
test
add
cmps
push
and
ror
cwde
gs
je
(bad)
fldln2
scas
mov
sbb
ret
sbb
sbb
or
sbb
mov
arpl
dec
add
pop
aas
or
rol
fs
mov
fs
jb
inc
dec
test
inc
inc
addr16
lea
jbe
push
add
shl
or
repnz
mov
jge
lahf
inc
mov
mov
in
cmp
(bad)
iret
das
cmp
sub
out
inc
ds
ins
inc
jo
inc
mov
add
adc
in
jp
jle
icebp
inc
mov
sbb
adc
add
bound
ror
sbb
lea
int
adc
(bad)
into
leave
dec
mov
mov
or
repnz
in
inc
xchg
das
hlt
cmps
imul
ins
enter
jl
adc
call
mov
inc
in
cmc
adc
and
ret
fimul
fyl2x
cmc
cmps
out
sbb
mov
repz
push
mov
out
test
inc
lahf
inc
jns
dec
in
sub
mov
icebp
sub
pop
ja
xor
lahf
sbb
and
pop
jnp
jl
jmp
mov
mov
adc
jno
mov
lods
jge
push
adc
xor
retf
in
and
retf
add
lods
push
push
aas
clc
and
in
repz
sbb
mov
lods
aad
and
push
sti
aam
adc
xchg
add
push
mov
test
pop
ds
push
addr16
or
mov
adc
push
cli
clc
adc
mov
xor
and
les
jae
fxch
jge
out
push
cmp
push
in
xchg
(bad)
dec
pop
inc
cmps
push
nop
retf
sbb
(bad)
(bad)
fcom
sbb
cli
ins
lock
in
cwde
(bad)
in
sbb
jg
sub
jg
adc
mov
jmp
cli
movs
fidiv
dec
inc
popa
fcomp
ss
jne
(bad)
inc
push
or
mov
in
and
retf
call
dec
cmc
add
std
sti
fmul
repz
mov
xchg
mov
sub
jge
add
jecxz
jmp
dec
mov
push
xchg
lds
mov
dec
jae
push
test
dec
enter
adc
icebp
sub
jle
mov
mov
jle
mov
mov
popf
adc
pop
stc
dec
or
aas
or
cmps
cwde
or
xor
xchg
mul
fst
popf
add
xchg
lods
lahf
bswap
add
jmp
xchg
xlat
popa
inc
mov
es
pop
loopne
int
sar
and
test
pop
mov
jge
xchg
jns
out
xchg
aas
cmp
mov
into
les
test
scas
cmp
pop
sbb
and
movs
sub
xchg
jp
cdq
xor
cld
mov
fdiv
iret
sbb
test
sub
jg
call
das
movs
cli
adc
int
add
adc
mov
test
dec
mov
scas
cs
dec
xchg
jnp
sub
mov
ret
retf
sbb
add
test
fwait
pop
loop
jnp
sbb
cmp
ret
jns
stos
ret
repz
inc
mov
clc
sti
or
dec
mov
imul
call
icebp
xor
aam
mov
out
sub
in
push
sbb
jno
cdq
cmp
jmp
inc
jbe
ret
xchg
icebp
fld
or
je
movs
add
bound
aad
retf
test
sar
mov
mov
mov
inc
or
adc
loopne
xchg
mov
sbb
hlt
mov
int
pop
outs
hlt
imul
jne
push
mov
mov
(bad)
sbb
cmps
push
scas
cmps
popf
hlt
retf
lea
int
retf
ret
sbb
pusha
popa
adc
cmp
fistp
dec
jmp
add
mov
inc
scas
cmc
or
xchg
adc
arpl
mov
jge
fisubr
xor
dec
xor
push
repnz
xlat
outs
push
sub
outs
out
adc
dec
fsub
fwait
mov
jge
dec
add
push
pop
mov
cmp
mov
test
arpl
pop
jmp
cs
es
push
xor
and
mov
cmp
cli
lock
fsubr
mov
(bad)
pop
(bad)
pop
aaa
dec
fild
sbb
push
jo
jle
repz
out
fsub
or
adc
das
mul
mov
repz
mov
ja
clc
adc
pop
xor
call
mov
mov
xchg
das
pop
mov
adc
mov
adc
sub
inc
or
div
push
jge
lods
cmc
xchg
mov
pusha
daa
icebp
xchg
mov
es
jmp
sub
sbb
test
jnp
push
repnz
(bad)
xchg
stc
mov
xchg
mov
nop
popa
add
xchg
mov
lock
mov
nop
sbb
inc
data16
inc
push
cmp
pop
dec
adc
enter
fisubr
cdq
sub
int
daa
adc
and
jecxz
and
mov
stos
sbb
push
sbb
sub
dec
xchg
mov
lock
mov
mov
mov
sbb
fadd
cli
fsubr
(bad)
dec
loope
sar
outs
xchg
sbb
es
ret
stos
push
adc
aam
mov
or
ror
call
retf
xlat
mov
movs
cwde
cld
fdivr
xchg
or
aas
mov
xchg
push
stc
out
xchg
gs
fwait
call
mov
jecxz
adc
sbb
mov
xor
sub
jmp
cmc
ret
pop
add
int3
sbb
mov
ret
pop
(bad)
out
imul
lods
aam
or
imul
call
xchg
jne
xor
cmp
xchg
add
push
sti
push
repz
(bad)
pop
lahf
(bad)
xchg
ror
cmps
xor
scas
jg
adc
aas
fs
jne
in
lahf
psubsb
xchg
inc
(bad)
mov
and
nop
sbb
mov
loopne
pop
mov
test
cdq
fimul
xor
push
and
fcomi
lock
add
mov
pusha
pop
bound
dec
cmp
dec
imul
jns
sti
shl
stos
stc
rol
fwait
sar
ins
sar
popf
lea
out
sbb
out
popa
iret
mov
push
lods
or
enter
ret
cmp
rcl
sbb
out
pop
xlat
push
int3
enter
(bad)
out
jp
fisubr
add
pop
jne
sub
push
popa
scas
push
cmp
adc
dec
jnp
outs
loop
push
mov
pop
xor
sbb
cld
aas
dec
enter
psubusw
xor
xor
xlat
rcr
out
sbb
ror
dec
jno
dec
out
pop
jno
retf
mul
outs
mov
cmp
sti
xor
fs
pop
test
sub
int3
js
shr
movs
xchg
mov
lock
push
sahf
xchg
pop
fnsave
mov
or
(bad)
mov
(bad)
cmp
add
in
add
xlat
cmps
je
fwait
cmp
sti
mov
or
sar
fimul
std
jno
add
mov
push
cld
and
jecxz
cdq
lahf
call
cmp
xor
rol
popf
jmp
xchg
push
add
adc
mov
dec
ja
jne
jge
mov
test
mov
pusha
(bad)
int3
add
dec
jbe
push
ins
mov
ins
mov
and
ret
icebp
shl
push
or
out
ss
ja
arpl
das
mov
jne
dec
xor
fnstenv
je
movs
mov
(bad)
and
gs
push
(bad)
call
and
arpl
ret
sahf
mov
out
(bad)
jl
aam
aad
es
jns
mov
dec
cmps
mov
movs
or
mov
cwde
shl
enter
nop
or
inc
dec
dec
and
and
mov
or
pop
sbb
outs
test
and
pushf
push
pop
mov
xchg
icebp
cmps
xchg
rol
(bad)
xchg
rcr
nop
push
jb
test
xor
mov
xchg
xor
cdq
sbb
pop
pop
fild
fdiv
scas
mov
pop
out
mov
xchg
mov
mov
cli
cmp
mov
jbe
enter
lods
or
push
xor
adc
mov
and
scas
jo
xchg
cmc
sbb
cmps
(bad)
mov
rol
jbe
or
mov
pop
iret
cmovns
lea
xor
cmp
call
dec
sbb
mov
loop
xchg
and
push
pusha
mov
ins
inc
add
push
in
push
xor
or
xor
adc
movs
into
jns
cmc
cmp
fsubr
and
(bad)
ins
sahf
retf
repz
push
adc
fld
sbb
repnz
and
or
or
inc
cli
pop
jl
dec
mov
inc
loopne
add
(bad)
jne
and
sbb
xchg
xor
mov
aaa
out
mov
dec
pop
sub
or
mul
test
pop
inc
call
jae
pop
aas
call
xchg
dec
xchg
mov
add
in
pop
dec
jp
jmp
jle
mov
pop
movs
cmp
xor
adc
push
jge
aaa
inc
adc
out
les
je
stos
push
and
ss
mov
je
cmp
inc
xchg
jns
addr16
pop
inc
mov
scas
dec
(bad)
mov
inc
mov
mov
(bad)
(bad)
adc
inc
sub
and
jnp
jo
stos
sbb
jo
jecxz
mov
pop
sahf
push
out
out
je
push
gs
mov
ds
clc
sub
adc
dec
call
mov
shl
icebp
inc
stos
mov
ret
mov
dec
jmp
mov
jae
cwde
xchg
add
hlt
stc
cmp
cwde
sub
cwde
fwait
mov
sbb
mov
sbb
aas
jg
push
pop
jo
jecxz
xchg
push
sub
jecxz
aad
cmp
pop
inc
jp
jnp
lss
cmp
xor
pop
iret
sar
aas
xor
xchg
mov
in
movs
aad
jl
dec
mov
cmps
enter
shl
xchg
iret
and
fidivr
loop
and
les
and
xchg
pop
or
imul
mov
cmps
rol
sbb
ins
sar
pop
enter
jg
xor
cld
mov
mov
push
dec
jb
cwde
loopne
je
test
outs
sub
scas
pop
sub
jl
(bad)
and
fmulp
jp
loop
or
popf
and
push
fwait
add
hlt
das
add
hlt
int
test
or
xor
push
into
xor
(bad)
mov
push
jnp
push
das
push
mov
loope
gs
popa
test
jne
lods
sbb
mov
mov
stos
enter
outs
pop
push
outs
pushf
mov
or
popa
shl
pop
push
cmps
sar
or
out
ficom
and
loope
sub
sbb
enter
jb
pop
or
ins
std
dec
xor
lock
call
lock
gs
retf
fs
and
mov
bound
pop
mov
ret
and
ret
fs
test
call
add
cmc
inc
cmp
std
mov
and
push
jns
sub
ins
(bad)
or
fstp
add
mov
lods
push
not
cmp
xor
cwde
mov
adc
xchg
aam
jge
mov
mov
movs
shl
sbb
and
sbb
cdq
aas
inc
push
pop
call
lods
fwait
hlt
arpl
mov
add
int3
jmp
cmp
jl
xor
xlat
std
jp
or
cmp
mov
xor
aad
clc
in
sbb
xor
fcom
jecxz
xchg
js
in
movs
mov
mov
inc
ins
movs
add
es
movs
clc
stc
jmp
mov
hlt
jmp
xor
retf
pop
fimul
pop
pushf
xor
fs
arpl
sahf
xchg
jmp
outs
push
fldpi
into
or
repz
fcmovu
mov
or
imul
pop
clc
jle
jne
loopne
add
ss
fdivr
ret
mov
outs
cmp
jno
push
pop
mov
in
pop
sub
aaa
mov
cmps
and
pop
push
ins
adc
and
mov
shr
mov
sbb
dec
jge
outs
pop
and
jmp
stos
scas
movs
lds
mov
out
ret
pop
sub
lods
lea
fs
(bad)
xchg
loope
jle
into
sbb
mov
sub
jp
ins
addr16
daa
jg
sbb
fcomp
(bad)
push
jbe
js
push
add
mul
adc
jle
lahf
fmul
mov
mov
xchg
or
addr16
aaa
(bad)
push
sbb
fstp
jmp
fs
(bad)
sbb
jmp
sub
xchg
bound
aaa
test
mov
cli
fldlg2
sbb
or
xor
push
jecxz
shr
sbb
mov
cli
or
jl
inc
lea
adc
(bad)
push
mov
ficomp
enter
xor
sub
cmps
adc
aas
and
retf
movs
add
outs
hlt
cli
push
jmp
pop
imul
dec
scas
xor
test
and
jp
adc
push
sub
(bad)
xchg
or
pop
in
mov
cld
xchg
cwde
mov
(bad)
adc
(bad)
jmp
mov
nop
pop
mov
popf
loope
jns
jb
adc
push
aam
retf
dec
xchg
add
mov
(bad)
into
push
mov
jb
(bad)
cmps
pushf
daa
jecxz
popf
sub
sub
push
and
adc
imul
xchg
add
push
xchg
aad
stos
xchg
(bad)
mov
mov
pop
int3
and
ds
mov
sbb
adc
xlat
jo
popa
ss
ror
in
arpl
or
or
jbe
iret
inc
cli
xchg
mov
clc
sub
loop
sub
loope
fsub
pop
std
and
mov
test
add
aaa
mov
int3
push
ret
pop
sbb
(bad)
fld
sub
and
out
cmps
pop
xlat
imul
xor
aas
push
add
jo
loope
mov
outs
call
pop
pop
inc
cld
dec
cmp
into
xchg
rcr
add
loop
xor
cmps
sahf
(bad)
sub
or
stos
mov
outs
cli
mov
pop
push
in
mov
and
inc
iret
jg
add
sub
push
lods
and
cmp
lock
and
iret
out
mov
inc
dec
lahf
mov
repnz
ins
repnz
add
(bad)
out
int3
xchg
jmp
add
loope
sbb
jecxz
or
mov
cmp
jno
into
bound
int3
in
stos
inc
xlat
cmps
jmp
sti
adc
scas
fwait
sub
ror
cmp
pop
inc
outs
adc
inc
js
(bad)
mov
dec
jnp
xor
mov
test
fldl2e
pushf
cmps
cmps
mov
push
sbb
ins
mov
cdq
xchg
sbb
pop
loop
mov
xor
add
inc
fwait
pop
scas
clc
xchg
fwait
nop
sub
test
xchg
mov
cmp
je
retf
and
movs
adc
pusha
mov
jbe
jmp
outs
cld
loopne
(bad)
fdiv
dec
dec
arpl
xchg
dec
ss
add
test
mov
clc
and
push
imul
push
cli
jl
inc
dec
loop
ja
xchg
adc
mov
sub
fsubr
inc
and
nop
jae
hlt
cmp
pop
lea
(bad)
(bad)
push
addr16
push
xor
adc
inc
xchg
xchg
push
xor
mov
and
add
int3
mov
jp
movd
mov
sbb
xor
xchg
and
jo
bound
mov
les
fmul
mov
jb
mul
add
push
pop
jno
div
push
mov
xor
nop
mov
xor
leave
push
xor
stos
xchg
cmp
add
retf
mov
repnz
cmp
mov
xlat
or
shl
mov
adc
lods
xor
idiv
sbb
lahf
or
dec
neg
imul
scas
add
sbb
repz
mov
shl
pop
(bad)
dec
mov
iret
push
popf
jmp
repnz
stc
call
inc
dec
imul
or
and
stc
pop
adc
or
(bad)
xor
rcr
push
ja
(bad)
jae
std
stos
shl
push
xchg
js
(bad)
lock
jecxz
mov
ret
xchg
test
sub
(bad)
bound
xchg
mov
popa
push
fidiv
in
mov
addr16
push
push
out
std
sub
or
loopne
loope
ss
xlat
arpl
xlat
idiv
sbb
inc
out
bound
js
mov
lods
sub
mov
sub
mov
inc
pop
jl
enter
fst
xchg
jg
outs
and
nop
sub
cdq
cmp
icebp
les
push
stc
loop
mov
inc
add
add
stos
div
call
mov
iret
mov
in
dec
sbb
data16
loope
push
mov
sbb
cmp
lds
cmps
xor
rol
(bad)
leave
xchg
mov
inc
xchg
mul
mov
mov
push
push
cmp
test
test
pop
loopne
outs
or
cmps
pop
bound
add
(bad)
loopne
dec
jmp
mov
and
jo
cmp
push
sahf
pop
(bad)
loope
das
daa
mov
stos
in
jge
mov
and
fsub
(bad)
jmp
mov
sbb
inc
scas
and
(bad)
mov
js
je
jns
add
push
adc
jp
fidiv
push
mov
mov
fidiv
xor
aam
call
adc
sar
adc
jns
cmc
jecxz
jns
mov
jecxz
xor
ins
xchg
sar
out
dec
sub
cdq
push
scas
sahf
mov
loop
iret
mov
add
arpl
push
not
hlt
mov
in
inc
xor
mov
stc
mov
lock
(bad)
repz
pop
mov
retf
xchg
inc
das
sahf
sbb
add
xor
shl
push
add
and
mov
shl
jno
mov
mov
pop
psrld
jnp
div
popa
push
and
loope
fcomp
pop
mov
(bad)
(bad)
cmps
dec
add
inc
daa
mov
test
mov
(bad)
imul
test
data16
ds
or
xchg
add
sahf
mov
jbe
(bad)
sbb
add
xchg
mov
push
stc
les
(bad)
mov
sbb
cmp
xor
ins
lahf
lods
add
mov
imul
movs
mov
jp
ss
xchg
ins
mov
fnstsw
cs
popf
gs
pop
lods
cmp
(bad)
fsub
adc
mov
scas
jno
jnp
fcmove
mov
nop
icebp
retf
icebp
xchg
xor
ret
aas
mov
movs
pop
xchg
jl
jg
mov
test
sbb
test
std
and
push
je
std
mov
jle
hlt
inc
sbb
loopne
add
pop
dec
push
dec
xlat
pop
pop
cs
stos
mov
cdq
xchg
inc
or
mov
(bad)
cmp
mov
cld
pop
nop
jmp
xlat
add
dec
pop
inc
cmps
inc
and
ss
(bad)
cmp
fimul
out
repz
mov
popa
pop
mov
push
lods
jmp
cwde
dec
sti
adc
inc
jb
xchg
push
cld
pop
sbb
mov
sub
(bad)
mov
mov
out
mov
cwde
cdq
pop
and
int3
cmp
dec
mov
fist
in
in
fidivr
mov
lods
pop
leave
inc
(bad)
fimul
loop
adc
jecxz
(bad)
cmp
call
retf
xor
xchg
mov
or
shr
fist
add
xchg
shr
mov
ds
lds
xor
imul
mov
pop
or
out
jns
lods
mov
aas
in
into
xchg
aaa
jae
adc
icebp
lock
addr16
mov
add
in
dec
xchg
in
mov
and
popa
out
hlt
mov
sbb
mov
fcomp
xchg
sbb
loop
repnz
cld
sub
pop
out
mov
xchg
sub
xor
mov
dec
dec
xlat
(bad)
and
dec
cmp
pop
out
ficom
fld
pop
call
in
cmps
adc
nop
sub
adc
inc
shl
aad
fwait
or
(bad)
mov
clc
std
aas
add
dec
je
push
pop
and
movntq
out
in
push
inc
dec
cmp
push
sahf
and
push
mov
cmp
mov
sbb
or
sub
mul
test
call
jno
jg
adc
mov
jge
fs
xor
push
call
cmps
or
mov
rol
out
and
fstp
fiadd
jne
data16
(bad)
in
inc
out
add
fmul
cmp
mov
xchg
jo
push
push
es
cdq
(bad)
mov
xchg
fild
fld
jno
sbb
arpl
out
cs
mov
mov
out
jecxz
lods
dec
bound
fisub
xor
shl
call
enter
loopne
daa
(bad)
xlat
repnz
fild
fiadd
pop
pop
out
pop
std
pop
mov
iret
fisttp
mov
shl
cmp
adc
adc
push
adc
icebp
sbb
mov
in
xchg
lahf
push
cmp
pop
addr16
into
(bad)
sbb
shr
loop
xchg
jecxz
mov
pop
adc
or
iret
pop
(bad)
out
int3
addr16
clc
shl
int
dec
xor
or
inc
test
adc
jno
repnz
dec
and
add
gs
push
nop
xchg
rol
jb
fistp
jecxz
pop
in
popa
fild
cdq
fild
dec
aad
shl
sbb
outs
scas
inc
jnp
inc
inc
mov
mov
into
jns
pushf
loope
outs
push
fwait
jne
daa
test
or
fstp
jns
jp
movs
xchg
inc
or
dec
movs
outs
xor
mov
pop
jbe
sbb
jno
jmp
ficomp
in
add
pop
mov
popa
sbb
fistp
shl
mov
xchg
pop
and
outs
or
outs
fmulp
push
movs
mov
add
mov
xor
mov
inc
push
cmps
imul
dec
div
sub
xchg
push
pop
pop
imul
into
sub
inc
cmp
lods
push
popa
xchg
sbb
cdq
mov
icebp
xor
nop
pop
jns
outs
push
mov
in
pop
out
push
retf
aad
sub
sti
pop
retf
rol
or
in
popa
aam
fs
push
outs
xchg
(bad)
scas
add
xchg
in
adc
adc
or
jno
inc
repz
push
int
mov
sbb
xchg
push
jo
push
jg
out
inc
inc
ror
pop
and
retf
push
repnz
mov
call
inc
aaa
mov
add
pop
sub
sti
in
shl
clc
(bad)
pop
popf
arpl
(bad)
loopne
sbb
jp
add
test
sub
pop
inc
inc
pop
jmp
push
stc
adc
push
cmp
xchg
loope
add
lds
lock
pop
out
adc
loop
in
cmp
outs
popa
nop
dec
ret
fnstenv
jecxz
les
stos
call
gs
repnz
in
mov
(bad)
lock
lds
or
gs
shl
fs
mov
loop
pop
lock
xlat
outs
shl
iret
jle
cmp
jecxz
pop
fstp
pop
test
mov
push
sub
xchg
mov
sbb
dec
jbe
add
dec
enter
lss
pusha
outs
sub
ins
mov
xchg
mov
repz
xor
lods
adc
imul
push
es
inc
xlat
pop
sar
popf
jmp
push
(bad)
jne
popa
test
jecxz
std
dec
mov
je
or
mov
xchg
adc
add
les
popa
pop
or
mov
mov
sbb
jge
jae
xor
loop
mov
test
sar
mov
and
jnp
fld
push
lods
xor
mov
mov
mul
xor
mov
dec
sbb
or
pop
adc
sti
retf
in
fcom
sbb
movs
out
inc
pop
xor
cmps
inc
and
fisttp
mov
dec
fiadd
sti
movs
add
jle
and
movs
out
(bad)
cmp
push
cs
push
hlt
sti
xchg
push
movs
dec
sti
jns
mov
mov
inc
loopne
aam
inc
cmp
sbb
push
xchg
mov
dec
daa
push
mov
xor
jmp
addr16
out
pop
das
xor
arpl
shl
mov
cmp
das
lea
sbb
enter
js
fistp
lea
jmp
jmp
jp
add
fst
xchg
daa
adc
mov
cmp
pusha
out
stos
or
out
lahf
mov
je
(bad)
jp
(bad)
rcl
bound
sbb
dec
(bad)
cld
lods
into
cmp
loop
xchg
or
mov
arpl
scas
xchg
or
or
xchg
jnp
jmp
std
aas
loop
test
hlt
jge
les
fcmovbe
ret
rcr
dec
aad
dec
clc
adc
inc
aaa
adc
addr16
shr
js
cwde
mov
loop
adc
sub
jnp
cmp
(bad)
inc
fstp
into
push
(bad)
fdiv
mov
add
cmp
dec
or
paddd
add
push
push
sub
call
push
out
aad
ins
mov
fs
mov
jmp
adc
xchg
mov
fistp
js
fldenv
lods
in
outs
pop
stos
call
pop
xchg
xor
jbe
aam
sahf
shr
retf
xchg
mov
jns
push
jo
inc
ja
sbb
and
rcl
cmc
cmp
lea
pusha
scas
out
push
cld
jp
in
or
jbe
jns
adc
and
mov
retf
jl
xchg
ror
imul
int3
mov
mov
jae
push
ficom
sub
xchg
aas
dec
and
aam
adc
scas
add
mov
mov
(bad)
push
icebp
or
int
out
scas
push
scas
add
mul
add
outs
and
test
cmp
(bad)
das
jg
lahf
enter
mov
mov
push
jmp
das
mov
add
aas
and
mov
xor
adc
nop
scas
mov
retf
push
cdq
cli
jbe
movs
mov
rcr
fdivr
pop
sbb
dec
in
mov
jl
pop
mov
xchg
pop
jbe
bound
hlt
mov
add
loope
jmp
arpl
cmc
imul
movs
pop
aaa
mov
or
out
fsub
fs
push
inc
xor
ror
push
cmp
and
or
outs
ds
scas
pop
test
jne
test
popf
pop
lock
xor
adc
and
cli
fs
push
push
sahf
rcr
nop
popa
push
nop
sub
fist
sub
and
das
sub
lock
push
inc
ret
cdq
cmps
mov
aas
or
(bad)
rcl
das
add
cmp
xchg
pop
pop
pop
or
fisubr
out
jb
loop
retf
sub
push
xchg
xor
mul
mov
outs
sub
data16
jns
xor
lahf
aad
pop
es
mov
xor
pushf
jb
stos
mov
mov
jge
(bad)
adc
add
std
mov
add
inc
push
and
rcr
dec
and
aaa
inc
retf
(bad)
ror
mov
add
ds
or
mov
stc
cld
mov
stos
adc
dec
mov
xchg
nop
fistp
add
aad
jno
cmp
imul
cs
mov
and
jae
rol
jg
cmp
xor
mov
mov
jo
sbb
mov
pop
test
retf
aas
push
and
cmp
out
in
mov
stos
outs
mov
sbb
xchg
and
mov
not
mov
cwde
pop
xor
xchg
or
mov
sub
cmc
aaa
xor
btr
enter
add
inc
mov
std
mov
mov
sti
es
sub
mov
dec
test
and
mov
pushf
sbb
mov
and
jnp
nop
xchg
jne
retf
adc
rcr
mov
lock
xor
jns
and
popa
mov
push
outs
ja
sti
mov
retf
and
push
cmp
mov
lahf
aam
test
scas
xor
pop
inc
std
and
ror
cmps
jnp
cs
mov
mov
cmp
jmp
jne
loopne
sbb
imul
and
ins
scas
pop
out
cdq
iret
mov
sub
call
mov
cs
xchg
adc
pop
pop
xor
dec
mov
enter
(bad)
in
mov
xor
inc
dec
shl
dec
push
leave
dec
jb
lods
lods
push
in
fchs
retf
int3
(bad)
xlat
sub
sbb
dec
add
push
mov
fadd
and
xchg
add
outs
ror
pop
mov
retf
pop
sub
loopne
inc
outs
daa
mov
cmp
dec
js
jmp
shl
xchg
cmps
fmul
cmp
mov
pop
cmp
adc
add
(bad)
mov
and
(bad)
adc
pop
ss
es
pop
pop
mov
rcl
adc
mul
loope
push
sbb
add
sbb
sub
xor
call
xchg
or
mov
push
pop
popa
movs
add
cld
in
mov
add
and
pusha
xor
ja
or
sbb
es
(bad)
lahf
jmp
shl
(bad)
test
je
jp
fldenv
arpl
jbe
enter
icebp
cmc
cdq
loopne
leave
test
pop
jbe
or
push
cmps
call
clc
pusha
stos
dec
clc
stos
data16
adc
fcom
ret
sbb
arpl
push
scas
test
adc
dec
mov
fisttp
fucomip
mov
or
imul
not
jne
pop
cmp
xor
sub
push
lods
mov
iret
cmp
pop
mov
ret
inc
dec
mov
aad
xchg
jg
(bad)
popf
sbb
out
push
mov
test
mov
sahf
mov
inc
sbb
pop
xchg
pop
test
loope
fwait
lods
and
push
add
cmps
sar
retf
add
pop
xor
nop
push
les
int
arpl
jnp
pop
fist
fldenv
inc
or
aad
mov
jle
jmp
int3
xor
int
jnp
xchg
shl
(bad)
cmps
imul
gs
mov
lea
cs
add
push
pop
and
cdq
dec
dec
icebp
fcom
jle
cmp
mov
jno
xchg
pop
dec
movmskps
xchg
sar
mov
mov
sub
cmp
push
stos
pop
lods
out
xor
in
(bad)
sahf
adc
or
push
sub
out
lock
(bad)
mov
inc
sti
cmp
push
rcl
fwait
mov
std
mov
mov
mov
push
scas
test
into
fcmovb
sbb
inc
pop
jg
jno
mov
idiv
enter
retf
ret
rcl
das
cmova
fwait
mov
lds
(bad)
xor
mov
sbb
inc
xchg
mov
or
gs
addr16
mul
cmps
mov
scas
popa
gs
mov
(bad)
mov
xor
jns
ins
mov
sbb
xor
ret
xlat
add
(bad)
mov
repz
sub
and
jmp
rcl
jb
xchg
push
mov
push
jge
cmc
and
retf
pop
inc
clc
rcr
je
xchg
les
or
xchg
scas
stos
mov
cmp
pusha
cdq
das
scas
inc
arpl
add
sbb
adc
pop
mov
or
hlt
js
scas
push
ds
and
cmp
cld
mov
daa
jp
pop
aaa
push
scas
jmp
sbb
jno
aam
popf
aam
(bad)
cwde
mov
mov
sub
pop
mov
mov
scas
mov
stos
mov
inc
pop
mov
sub
fsubr
adc
stc
or
or
ret
push
sub
out
pushf
sub
or
pop
jmp
sbb
mul
movs
sahf
cli
mov
mov
sbb
call
sbb
lea
fcom
mov
es
iret
xchg
pop
je
rcr
shl
push
add
inc
pusha
leave
push
dec
cmc
scas
and
js
ss
adc
xchg
scas
aam
jge
dec
movs
push
mov
mov
loope
add
into
inc
push
sbb
and
or
xchg
fld
out
and
in
scas
mov
or
stc
fnstenv
sbb
jnp
add
repnz
mov
(bad)
and
push
cmp
add
xlat
int
jecxz
lods
rcl
sbb
loop
arpl
xlat
xchg
inc
sar
xor
inc
sbb
in
das
ins
jg
sbb
xchg
mov
scas
mov
mov
mov
sub
sbb
out
inc
je
rcr
push
mov
hlt
inc
in
cmps
xchg
ds
jnp
test
or
xor
sub
mov
or
and
and
push
xor
les
cmp
enter
pushw
adc
dec
xchg
fstp
stc
xchg
mov
mov
jb
jno
mov
lds
ss
or
adc
mov
xchg
stc
pop
je
or
cmp
mov
or
or
(bad)
nop
fild
xchg
test
sbb
data16
lods
or
push
in
pop
sub
enter
sub
cli
imul
aaa
ja
cmc
lods
or
mov
stc
cmp
sub
int3
stos
xchg
or
xchg
mov
push
ror
inc
div
mov
mov
xor
movs
pop
and
sub
cmp
inc
in
push
in
mov
addr16
xchg
jbe
hlt
pop
and
and
push
xor
xor
pop
inc
mov
nop
outs
add
dec
mov
nop
loop
sub
cmp
cli
int3
in
xchg
and
js
sub
lods
rol
mov
adc
sub
add
dec
gs
sbb
mov
scas
ins
leave
inc
mov
loope
jns
xor
xchg
(bad)
push
xor
dec
test
popf
cmp
push
jmp
mov
(bad)
bound
jnp
jmp
rcr
jb
mov
hlt
scas
std
add
xlat
outs
int3
js
ins
clc
cmps
sti
movs
dec
(bad)
dec
sub
adc
aad
jae
push
sub
pop
clc
iret
mov
dec
or
xchg
stos
aam
pop
pop
into
in
dec
push
sbb
cs
dec
fwait
daa
inc
and
(bad)
jp
mov
add
(bad)
outs
mov
iret
les
pop
jno
iret
sbb
push
pop
pop
push
push
lods
adc
jbe
loope
dec
jo
cmc
(bad)
les
jmp
jae
push
mov
rcr
xlat
movs
adc
xchg
mov
pop
mov
leave
adc
out
shl
popa
adc
call
adc
sbb
adc
push
push
sub
test
jo
popf
or
or
sbb
push
or
or
inc
and
das
aam
test
mov
sti
jge
mov
add
mov
mov
je
mov
mov
pop
lods
inc
wrmsr
mov
repnz
mov
xchg
loope
out
inc
(bad)
shl
fdiv
outs
scas
iret
les
cmp
(bad)
pop
push
dec
loop
imul
pop
jmp
jge
push
push
movs
je
dec
sub
jmp
push
sub
or
lahf
jnp
int3
rcl
or
jg
push
jmp
adc
sub
retf
jmp
pop
addr16
loope
pop
pop
add
out
stos
ror
mov
jo
das
jbe
daa
imul
push
push
jne
push
sub
push
pop
mov
bswap
cmps
mov
jmp
jns
jno
mov
push
cmc
sub
cld
push
das
outs
aad
loope
pop
xchg
into
stos
sub
imul
adc
jb
stc
mov
loop
fdivr
inc
xor
shr
lock
xchg
into
cs
sbb
out
xchg
leave
inc
int
push
sub
sbb
pop
retf
call
cmc
jp
pop
jl
mov
jnp
inc
pop
add
(bad)
jmp
mov
aaa
mov
imul
push
out
mov
bound
cmp
hlt
in
push
scas
add
push
cmp
adc
not
fnclex
jp
test
fistp
ret
pop
sbb
aaa
mov
adc
inc
stc
jnp
jecxz
(bad)
xor
adc
pushf
in
movs
pop
xor
int
int
popa
or
cmp
fwait
std
leave
aad
jnp
mov
iret
mov
mov
pusha
sub
lock
pusha
sub
dec
das
cli
or
sub
push
xor
(bad)
(bad)
fimul
loope
into
mov
loope
out
dec
scas
cwde
call
xchg
mov
cmps
jae
push
ds
sbb
scas
mov
lds
(bad)
lods
cmp
leave
les
sbb
and
mov
gs
push
lds
in
(bad)
cmp
jmp
dec
sbb
sbb
test
or
rol
inc
lods
inc
loopne
inc
inc
fwait
imul
fimul
inc
cmps
jne
dec
xchg
test
sbb
inc
jae
mov
int3
or
test
ja
xchg
jno
push
jmp
dec
out
loop
inc
adc
cmp
jp
imul
call
sub
(bad)
cmps
inc
(bad)
or
jl
jecxz
mov
pop
dec
frstor
addr16
cmp
sahf
sbb
aad
sub
sub
pop
mov
xor
out
mov
inc
data16
or
sahf
pop
movs
add
cmps
aad
sahf
icebp
jo
out
call
jl
fwait
mov
xchg
xor
or
ins
adc
push
(bad)
adc
shl
lds
(bad)
xlat
lds
mov
fwait
in
push
aas
jb
push
out
mov
and
(bad)
xlat
cmp
cmps
and
imul
loope
aas
inc
lods
xchg
pop
movs
mov
mov
cmp
cwde
std
jle
rcl
(bad)
in
stos
(bad)
shl
(bad)
mov
xchg
mov
and
mov
sbb
iret
adc
(bad)
es
push
xlat
jmp
mov
mov
sub
ins
adc
vsubss
or
in
fnstcw
cld
cmp
fiadd
call
xor
cmc
xlat
inc
cdq
loopne
mov
enter
(bad)
cmps
dec
pop
jns
jl
jmp
test
add
out
aas
lock
inc
(bad)
movs
lods
std
test
xchg
adc
mov
cli
pop
push
mov
jae
mov
mov
into
bound
sub
mov
fnstcw
cmp
fs
popa
dec
add
sub
enter
cmp
lahf
add
cmp
sbb
jg
je
aas
pop
cs
xor
xchg
or
sub
push
fiadd
fisubr
cdq
shr
cmp
pop
jne
repnz
adc
arpl
dec
stc
sbb
movs
into
out
out
fwait
int
fst
neg
mov
inc
movs
ja
cs
jne
cmp
xchg
(bad)
mov
(bad)
icebp
mov
cmp
push
icebp
call
ficomp
sar
xor
jg
push
cdq
aam
cld
pop
das
mov
bound
loope
jmp
fadd
pop
shl
xchg
adc
gs
pusha
cmp
outs
ret
cwde
push
xchg
(bad)
in
(bad)
push
and
jnp
(bad)
fld
mov
cmp
push
sub
add
sub
stos
in
mov
aaa
je
into
std
and
sub
sub
mov
cmp
sub
pop
out
enter
and
sub
ja
fwait
addr16
jae
dec
and
mov
push
inc
sbb
inc
outs
inc
add
loope
retf
or
xor
mov
pop
mov
fs
xlat
pushf
dec
pop
enter
mov
mov
add
lock
push
xor
push
nop
mov
mov
add
test
daa
iret
lods
je
dec
dec
aam
clc
dec
jmp
icebp
add
out
cmps
or
movs
or
jp
stos
sbb
(bad)
ss
dec
fldenv
popa
clc
and
xor
idiv
ins
lea
cmp
and
mov
dec
add
push
pop
jo
call
fdiv
pop
outs
jmp
jne
dec
push
xor
mov
push
mov
mov
imul
adc
icebp
cmp
cmp
jecxz
in
mov
push
cmp
rcl
mov
jne
push
sbb
add
jno
fidivr
daa
movs
and
xor
mov
hlt
fcomp
cmp
pop
out
or
xchg
(bad)
mov
pop
call
xchg
cmps
mov
arpl
jns
jno
or
mov
cmp
repnz
fsub
jbe
sub
sub
push
call
cmp
out
push
scas
pop
mov
aas
in
cmp
test
xlat
imul
cmp
outs
ja
inc
hlt
pop
repz
push
outs
test
and
lods
int3
std
push
sbb
and
adc
mov
xor
aaa
inc
pop
xchg
jp
out
and
es
cmp
add
loopne
repz
or
iret
pusha
loop
sti
in
xchg
les
fadd
lods
shl
(bad)
sahf
popf
test
hlt
jne
sbb
dec
cmp
out
in
fidivr
add
daa
ss
and
ds
bound
ret
dec
fstp
xchg
jp
out
mov
adc
push
jg
jecxz
movs
out
lock
mov
test
les
pushf
rcr
loope
jns
clc
(bad)
or
rol
jmp
inc
stos
and
mov
mul
pop
stos
mov
sar
cmp
repz
test
xlat
or
mov
jle
loop
sub
xchg
mov
xchg
sub
call
test
adc
jmp
jne
mov
inc
or
sbb
rol
idiv
stos
push
adc
jle
not
inc
cmp
jge
cmc
jmp
fst
pop
mov
mov
in
sub
sbb
push
out
cmc
cmp
jo
cmps
mov
mov
mov
int3
mov
xchg
scas
out
sub
lock
fidivr
xchg
sbb
ja
inc
cmc
ss
ret
mov
or
arpl
(bad)
out
sub
adc
repnz
and
dec
pop
stc
iret
fst
fimul
call
sub
adc
cwde
call
adc
test
pop
xchg
mov
add
push
in
pop
mov
(bad)
pop
mov
(bad)
call
or
pop
outs
sbb
xchg
mov
je
inc
jmp
jo
(bad)
sub
sub
sbb
jmp
(bad)
jg
push
adc
ins
xchg
call
cwde
popa
cmp
cmp
xor
jge
cmp
jl
push
jb
and
cmp
cs
aad
push
mov
sbb
cli
mov
loopne
mov
jle
dec
mov
push
les
fadd
fisubr
pop
mov
mov
pop
cmps
jg
add
ja
or
mov
sbb
jnp
cmp
fld
sahf
add
push
lea
dec
mov
dec
xor
push
les
push
sub
xchg
in
lods
mov
into
push
out
mov
pop
push
or
das
mov
aad
mov
in
in
mov
push
adc
mov
ret
mov
cmps
in
fwait
fs
sti
icebp
fimul
push
jne
ror
or
in
adc
pop
sub
ja
cmc
stc
lea
sub
pushf
xor
stos
push
jmp
test
stos
cmp
das
sbb
pop
loope
ja
jmp
pop
mov
and
cwde
jae
mov
outs
and
sub
popf
out
mov
cmp
mov
es
fstp
inc
leave
mov
or
cmps
call
out
xchg
rcr
js
popa
lahf
cmps
sbb
shl
inc
mov
in
mov
(bad)
ins
cmc
xchg
int3
push
aam
rol
int3
inc
inc
daa
mov
cmp
enter
sub
cwde
cwde
rcl
push
gs
dec
in
mov
dec
xchg
fucomi
sbb
xchg
js
shr
mov
xchg
sub
in
cli
push
bound
sti
adc
ret
dec
inc
data16
mov
push
adc
outs
mov
in
movs
imul
popa
dec
mov
jp
out
adc
loope
(bad)
sbb
dec
cmp
pop
pop
pop
fisubr
cmp
sub
in
jle
ret
in
fs
das
mov
sub
inc
fild
push
out
add
inc
push
fwait
imul
aaa
mov
icebp
sub
loop
sahf
mov
mov
clc
xchg
pop
pop
cdq
cmp
test
cmp
sbb
xor
mov
sbb
ret
sub
adc
xchg
pop
xor
push
push
xchg
mov
inc
jl
dec
sub
sahf
ss
adc
sub
mov
xchg
repz
mov
and
fisttp
mov
repz
push
out
or
bnd
pop
xor
cwde
ror
pop
aaa
cmp
mov
lds
hlt
or
push
out
adc
sub
jle
fadd
pop
fs
das
push
int3
adc
and
push
xchg
mov
(bad)
int3
sbb
sub
mov
jmp
push
xor
jp
xchg
mov
(bad)
ja
in
rcr
rol
fwait
cmp
dec
add
cmps
or
stos
lahf
scas
test
sub
and
pop
cmps
hlt
fs
adc
call
rol
mov
inc
cmp
jg
test
adc
push
leave
pusha
add
inc
dec
inc
xor
cmp
ins
stos
dec
(bad)
push
add
popf
retf
test
scas
and
mov
push
jle
jmp
mov
ret
rol
jb
xchg
jo
jne
add
sub
pop
outs
xchg
ja
and
je
mov
jp
stos
jmp
in
outs
xchg
retf
lahf
mul
fsubr
lock
imul
mov
add
dec
xchg
xchg
mov
push
(bad)
retf
les
sti
addr16
adc
adc
and
call
mov
scas
les
lahf
sbb
pop
add
in
jle
stos
dec
les
nop
push
push
js
lods
sbb
pop
jb
dec
push
dec
inc
mov
cmp
mov
enter
mov
mov
out
shl
(bad)
lods
jecxz
test
add
xchg
loop
call
jmp
fwait
cmp
or
jecxz
sub
leave
mov
dec
call
mov
imul
hlt
bound
sbb
pop
jae
adc
cmp
sub
jne
iret
popa
mov
push
ds
xchg
mov
pop
std
inc
rol
retf
repz
imul
int
xor
inc
call
test
repz
xor
mov
adc
inc
out
jae
sub
or
sub
(bad)
push
xchg
mov
int3
sti
pop
jg
clc
mov
outs
loope
xlat
adc
int3
in
shl
call
adc
lea
add
cmp
out
mov
daa
xchg
(bad)
das
and
scas
fcomp
mov
out
rcr
ins
nop
xor
cmp
push
jle
shr
mov
xchg
icebp
aas
sbb
ss
mov
mov
xchg
sub
loopne
push
dec
adc
mov
cmp
jno
push
in
and
jp
jecxz
sbb
pop
xor
push
scas
cmp
xchg
add
aas
in
bound
cmc
and
jo
sub
lods
leave
mov
in
push
cmp
sub
(bad)
stos
test
retf
mov
pop
lods
rol
sub
xor
xchg
or
sub
out
loop
into
aas
fptan
pop
iret
out
outs
xor
xchg
push
movs
ss
push
mov
call
loop
rcr
repnz
mov
sub
lods
js
aam
pop
jnp
pop
pop
push
into
(bad)
pusha
in
dec
add
dec
stc
rcl
push
(bad)
sbb
sub
push
pop
or
cmc
push
dec
push
or
inc
push
or
repnz
(bad)
dec
inc
mov
inc
addr16
mov
rol
bound
cmp
cld
rcr
inc
xchg
inc
ja
mov
cmp
jae
or
adc
call
dec
call
or
inc
pop
pushf
int
xchg
or
jae
xor
pusha
pusha
dec
add
mov
jno
mov
sub
sub
jl
mov
pop
jge
dec
loop
in
adc
cmp
ins
or
test
add
xor
jp
fwait
lods
jge
or
push
ret
push
out
fimul
call
cwde
mov
out
add
fs
or
jne
cmps
into
sbb
clc
sub
mov
dec
rcl
popf
xor
ret
xchg
or
adc
sub
jne
and
inc
movs
xor
inc
xor
mov
pushf
sbb
scas
addr16
push
ins
arpl
jo
push
xchg
aam
jmp
aam
adc
dec
xchg
cmp
(bad)
in
add
push
adc
cmps
mov
mov
and
pop
test
mov
sub
popa
sub
adc
mov
mov
jbe
mov
mov
shl
pusha
mov
pop
imul
cwde
sbb
mov
(bad)
enter
sti
jg
xchg
mov
dec
and
push
push
not
xchg
retf
hlt
out
or
fcom
lock
fcom
iret
add
adc
sti
jo
pop
cmp
xchg
fdiv
mov
or
in
into
and
push
mov
sbb
and
xchg
push
ret
inc
sbb
and
jbe
jle
add
sub
jb
inc
out
aam
push
adc
bound
or
mov
jne
sub
inc
dec
arpl
in
dec
imul
mov
or
cld
inc
dec
(bad)
fist
sbb
and
add
(bad)
mov
adc
das
ror
iret
fs
cld
adc
mov
movs
scas
mov
ror
das
xchg
and
cmp
ret
dec
loopne
nop
mov
mov
nop
retf
add
aaa
add
popf
mov
jb
popa
push
mov
xor
ja
jb
mov
cmps
shr
mov
mov
outs
jmp
outs
jmp
out
imul
je
imul
xchg
sahf
ins
in
sub
(bad)
push
xchg
add
mov
int3
icebp
push
enter
sbb
mov
mov
mov
sar
adc
shl
in
push
xor
mov
mov
pop
in
push
lods
add
retf
mov
div
repz
jecxz
jmp
push
js
gs
xchg
adc
push
push
pop
sub
sbb
imul
cdq
xchg
cmps
inc
js
or
test
adc
add
(bad)
in
es
movs
xchg
xor
mov
lods
adc
adc
jge
loope
pop
mov
xchg
dec
mov
pushf
add
fldcw
aam
fist
push
or
mov
inc
jge
retf
cwde
push
adc
pop
dec
pop
or
sub
call
sbb
les
retf
pop
mov
and
adc
inc
ror
mov
push
jb
cmp
mov
dec
cwde
out
hlt
jns
ins
neg
out
pop
stos
xchg
(bad)
jg
mov
test
sar
xchg
je
jnp
sub
xchg
jo
or
imul
movs
mov
ins
retf
mov
scas
jo
out
pop
in
or
xor
out
adc
adc
push
addr16
or
stc
adc
jns
int
cld
int
lds
imul
adc
mov
push
and
sub
ss
frstor
in
and
push
pop
xchg
out
add
push
jmp
ret
scas
stos
scas
test
lahf
aam
cmp
xchg
shr
clc
fs
rcl
sbb
ror
stos
inc
arpl
sbb
add
dec
sahf
sbb
movs
aaa
nop
enter
fldcw
les
sbb
(bad)
jge
ds
sub
rcl
loope
pop
fsub
out
jmp
not
sbb
cmp
dec
xchg
adc
inc
push
and
mov
call
lods
cmp
dec
push
adc
call
xchg
jl
fstp
jge
pop
fisttp
mov
movs
adc
lds
sub
pop
adc
cmps
add
and
(bad)
cdq
dec
sbb
mov
movs
test
call
xor
stos
js
jmp
xchg
sbb
or
adc
ins
arpl
or
popa
rep
sbb
call
pusha
(bad)
add
xor
adc
lea
or
cmp
sub
inc
add
xor
mov
retf
ins
pop
fisttp
jl
pop
fbstp
push
cmps
fcomp
movs
leave
out
sub
xchg
mov
es
jne
stc
fistp
retf
inc
pop
sbb
in
fmulp
push
das
push
push
and
fcom
xor
cli
xchg
xlat
pop
cmc
xor
fwait
icebp
pop
mov
fs
std
xor
ret
or
pop
dec
xchg
sbb
adc
xchg
test
outs
xor
mov
jle
aad
sub
mov
mov
repz
mov
push
xor
stc
jae
outs
mov
neg
jg
shl
dec
enter
outs
add
pushf
(bad)
hlt
inc
(bad)
cmps
mov
sub
popf
mov
out
xor
xor
xchg
scas
add
in
xchg
and
outs
pop
sub
push
jmp
or
inc
jb
inc
imul
sub
test
sbb
add
pop
adc
xor
test
inc
loop
sub
pop
lods
pop
mov
add
stos
fnsave
pop
(bad)
nop
mov
adc
jmp
xor
pop
leave
mov
add
int
sbb
xchg
inc
in
pop
nop
cmp
pop
mov
pop
push
inc
mov
xchg
xor
popa
pop
mov
pusha
pop
xchg
sar
mov
stos
and
pop
ja
mov
inc
jns
das
jl
push
call
push
aaa
xchg
jge
push
(bad)
cli
addr16
push
cmp
leave
shr
lods
daa
pushf
xor
shl
push
je
sub
lds
lods
jne
or
mov
cmc
or
mov
adc
xchg
mov
call
icebp
add
pop
lea
sar
push
dec
sub
adc
rcr
push
push
mov
or
and
arpl
int3
ret
xor
je
loop
jl
stos
ins
and
dec
sar
pop
mov
push
in
push
les
daa
not
dec
sar
scas
movs
mov
adc
inc
cwde
xor
and
push
stos
bound
xchg
xor
pop
sbb
outs
jnp
icebp
fsub
repz
addr16
jns
xor
inc
cmc
popf
idiv
adc
scas
sbb
mov
fistp
in
stos
jecxz
(bad)
push
retf
bound
cmp
jmp
(bad)
in
cmps
dec
cmc
lahf
xchg
sar
lods
movs
inc
imul
or
ds
xor
(bad)
cli
cmp
jp
gs
xor
mov
arpl
xchg
jge
pop
add
inc
(bad)
cmp
or
push
aad
fistp
xor
mov
mov
xor
out
mov
mov
push
xor
out
add
jmp
jns
cmp
push
inc
mov
jmp
mov
dec
int
das
sti
(bad)
js
lea
addr16
xchg
test
pop
sbb
adc
adc
pop
mov
cdq
fwait
mul
pusha
mov
in
jp
dec
push
sti
push
aam
dec
mov
xor
inc
or
push
inc
pusha
cmp
push
stos
lods
popa
xchg
sar
inc
or
adc
mov
fnsave
call
xor
and
and
sti
test
jmp
cwde
fwait
and
(bad)
dec
int3
or
jge
out
bound
dec
jge
mov
(bad)
jge
or
sysenter
dec
mov
ja
jbe
stos
shr
test
movs
sub
jmp
cs
mov
movs
xor
mov
mov
sahf
pop
shl
ins
repnz
cmp
std
inc
mov
in
cdq
test
mov
sub
das
lahf
add
lods
add
cmc
jne
sub
adc
in
in
mov
fucompp
scas
jp
not
imul
icebp
or
and
add
push
push
jle
cmp
ins
jecxz
dec
mov
adc
or
(bad)
stos
jo
pop
dec
ins
adc
jmp
add
lea
xor
add
sbb
add
cmp
cs
add
cmp
xor
xchg
pop
push
pop
cmc
in
out
sub
cdq
inc
out
mov
push
cmp
cs
sbb
cmp
jl
div
inc
push
mov
fisttp
fist
fld
repnz
rol
mov
in
add
pop
cmp
movs
add
xchg
ret
cs
jb
lods
adc
fs
lods
shr
scas
cmp
or
cmp
fs
out
pop
rol
jge
xchg
sbb
ins
xor
cmp
lods
pop
mov
pushf
test
(bad)
or
stos
adc
push
loop
aam
add
aad
xchg
stc
jge
push
mov
(bad)
xchg
stos
dec
jge
pop
add
adc
inc
mov
xchg
inc
mov
xor
mov
adc
jae
inc
dec
js
fsubr
jecxz
jp
fist
jp
push
mov
ret
iret
jb
movs
cmp
inc
mov
pusha
xor
cmp
inc
aad
push
sub
or
or
out
shr
dec
(bad)
hlt
arpl
adc
in
imul
movs
add
loopne
cwde
or
cmp
or
jmp
ds
or
repnz
inc
mov
addr16
into
jmp
(bad)
(bad)
out
push
shl
dec
sub
sbb
mov
mov
jg
xlat
and
ins
stc
fucom
rcl
add
popf
retf
sbb
pop
mov
mov
int
cwde
cdq
mov
pop
ins
scas
dec
lods
jns
mov
dec
sbb
call
xor
push
popf
mov
fucomi
and
in
mov
cvtps2pi
nop
pop
(bad)
pop
jno
movs
mov
mov
fst
adc
and
mov
push
mov
loope
popf
in
in
push
loopne
mov
aam
enter
and
adc
loop
call
out
mov
dec
jns
addr16
and
mov
addr16
pop
rol
bound
and
aas
stos
daa
(bad)
xor
cmp
mov
into
jge
and
xchg
sub
xor
cmc
pop
mov
jmp
aaa
pusha
inc
push
in
and
(bad)
mul
dec
call
or
int3
and
add
js
cmc
cbw
and
js
and
repnz
mov
or
mov
dec
add
jge
add
xor
mov
or
sahf
cmp
or
iret
xchg
stos
arpl
jge
xchg
jl
and
imul
jecxz
push
sbb
jge
xlat
popa
mov
sahf
jae
loopne
aas
sub
push
shr
dec
retf
stos
mov
inc
jne
out
sbb
(bad)
rol
ret
or
and
out
cs
sbb
or
iret
fs
js
imul
in
cdq
in
not
js
adc
push
and
movs
test
xchg
dec
out
xor
lock
std
mov
movs
movs
ins
pop
int
push
jne
jae
xchg
call
mov
jnp
sbb
fidiv
pop
or
jne
mov
add
outs
adc
addr16
arpl
xchg
dec
dec
imul
xchg
movs
or
sbb
mov
and
mov
fsubr
stos
sbb
add
xor
push
sub
ret
sub
add
xchg
xor
jl
or
sbb
(bad)
fimul
or
cmp
ret
cdq
mov
inc
js
mov
scas
loope
push
push
ins
sti
popf
movs
dec
stc
in
or
fild
xchg
xchg
mov
xchg
jmp
pop
sub
push
fwait
mov
adc
popf
nop
jmp
push
push
xchg
pushf
sbb
lods
mov
clc
cs
and
mov
aad
sbb
btr
popf
int
push
jne
dec
retw
mov
fisttp
pop
mov
popf
das
out
jns
inc
xor
ss
dec
add
mov
scas
lgs
jg
hlt
stos
pop
inc
js
add
daa
jne
adc
ret
jle
jo
fwait
push
js
push
out
lock
(bad)
mov
movs
pusha
ins
xor
push
and
push
in
aad
call
fsub
and
rep
push
add
aaa
or
sub
arpl
adc
sbb
stos
in
mov
enter
dec
std
pop
or
xchg
retf
out
(bad)
mov
mov
out
fimul
fsubr
aaa
repnz
and
jg
xor
mov
dec
in
idiv
ror
daa
das
mov
popf
or
cld
mov
and
push
loopne
push
fistp
movs
sar
fmul
loop
test
(bad)
std
xchg
mov
mov
adc
dec
pop
push
inc
inc
gs
mov
outs
mov
mov
(bad)
sub
sbb
xchg
xor
and
mov
inc
xchg
mov
push
sar
pop
xchg
cmp
iret
fwait
sub
pop
ss
pop
inc
mov
push
scas
push
sbb
or
mov
dec
mov
nop
sbb
cmp
xor
fs
int3
fldcw
mov
test
aaa
inc
dec
xchg
std
xchg
xchg
jmp
call
cwde
jae
cli
xchg
out
pop
dec
mov
sti
ins
or
cmps
cs
(bad)
aad
mov
dec
std
inc
add
adc
jl
mov
push
push
ja
iret
int3
cmp
lahf
call
sub
test
test
add
sub
nop
cdq
test
inc
stos
mov
pop
ins
xchg
(bad)
pop
loope
outs
jecxz
inc
das
mov
dec
into
in
cmps
dec
and
mov
mov
pop
aad
adc
cmp
dec
js
adc
into
adc
mov
sahf
(bad)
cmp
shl
test
push
push
pop
xor
in
test
mov
stos
rcl
adc
mov
(bad)
test
shr
fs
add
fsubr
lea
bound
jg
jmp
cmps
pop
mov
aad
mov
mov
pop
xchg
in
aad
push
adc
xor
retf
in
arpl
sahf
stos
mov
aad
push
add
mov
movs
rcr
leave
nop
adc
mov
retf
sbb
sub
aaa
mov
inc
sbb
inc
mov
cmp
mov
fdivr
mov
inc
stos
jge
popf
daa
xchg
sbb
ror
cmp
stos
push
fisub
aam
xor
and
sub
fild
push
(bad)
in
cs
mov
sub
rcl
push
add
mov
repnz
cmc
mov
add
xor
sub
pop
jg
jb
aaa
pop
cmps
out
int3
mov
cwde
push
out
fld
sub
(bad)
icebp
(bad)
xor
mov
push
retf
sub
or
fild
int
xchg
movs
mov
sub
mov
cld
(bad)
jne
(bad)
cld
ficom
and
mov
push
push
mov
iret
mov
cmp
push
push
shr
push
leave
lods
push
jo
mov
sub
adc
ror
mov
inc
xor
cs
dec
push
jmp
es
sbb
outs
pusha
call
push
push
lods
add
adc
jne
sub
push
mov
mov
ss
dec
leave
push
pushf
push
bound
cs
mov
sub
xor
and
sbb
sub
sbb
adc
rcl
xor
push
sub
imul
repz
das
cmp
(bad)
fdivr
xlat
or
sub
call
outs
imul
loope
repz
stc
cmc
imul
inc
jecxz
pop
call
xchg
fmul
adc
in
loope
xor
stos
xlat
or
daa
out
pop
addr16
outs
mul
xchg
movs
jp
stc
rcr
daa
mov
imul
sbb
fbld
jecxz
mov
scas
xchg
mov
cmp
lock
mov
(bad)
into
mov
jecxz
das
mov
mov
iret
into
hlt
hlt
dec
pop
pop
iret
lds
fidiv
xchg
mov
mov
std
mov
add
daa
and
in
xchg
test
bound
mov
js
sbb
mov
pusha
cmp
addr16
les
xchg
pop
and
xchg
inc
dec
jb
outs
jnp
(bad)
jne
shl
cmps
js
imul
test
mov
inc
mov
mov
dec
jo
jno
mov
shl
inc
int3
lock
sar
inc
call
imul
stos
inc
pop
dec
je
mov
push
call
inc
cli
add
mov
(bad)
mov
and
pop
in
adc
inc
enter
and
cs
sub
addr16
dec
outs
leave
jecxz
and
mov
ret
aad
imul
bound
add
mov
(bad)
mov
inc
cs
js
jge
xchg
dec
int3
(bad)
(bad)
cmp
mov
mov
inc
sar
jbe
lds
in
rol
add
not
(bad)
stos
sbb
into
in
pop
sahf
sar
xchg
loope
or
scas
mov
pop
hlt
adc
out
xchg
jb
call
push
cdq
cmp
push
cmp
push
cmps
mov
cwde
xchg
jmp
retf
dec
cmovae
sub
cmps
sbb
add
call
cmps
inc
and
les
mov
(bad)
pop
push
mov
sbb
dec
sbb
je
int3
loop
sbb
shl
mov
pop
out
mov
test
dec
jae
push
adc
mov
add
cli
or
loopne
mov
sbb
xor
xchg
pop
add
(bad)
push
pop
sub
pop
jae
mov
adc
ins
imul
fimul
dec
shr
mov
js
(bad)
adc
jae
stos
mov
stc
out
(bad)
shr
bnd
out
dec
popa
xor
and
pop
pop
push
mov
sbb
data16
rcl
stos
fild
jmp
adc
mov
lods
sbb
retw
or
(bad)
push
inc
lods
int
inc
scas
xor
or
add
push
in
ja
xor
push
add
cdq
out
push
mov
ja
push
cmp
adc
inc
fcomp
jle
fwait
mov
jecxz
adc
bswap
loope
std
or
mov
stc
inc
add
(bad)
mov
clc
movs
scas
mov
xchg
inc
and
mov
aad
(bad)
xor
aam
or
dec
call
push
out
mov
and
daa
fadd
repnz
or
mov
or
out
loope
aam
adc
(bad)
jmp
or
xchg
mov
sbb
daa
inc
and
dec
xchg
icebp
aad
jne
cmp
adc
xchg
scas
nop
inc
xor
sub
aas
fs
mov
or
shr
gs
jmp
xchg
scas
imul
rol
pop
int
mov
stos
bnd
popf
into
cmp
(bad)
and
sbb
fmul
dec
ss
(bad)
out
xor
mov
sbb
dec
xlat
sub
jmp
mov
xchg
movs
call
mov
test
mov
fdiv
pop
je
jns
test
je
lds
nop
push
jbe
movs
hlt
outs
add
sub
jae
mov
dec
cmp
loope
and
xchg
js
mov
or
mov
pop
add
loope
push
mov
fsub
and
mov
stos
inc
int
xlat
ret
icebp
dec
cli
rol
mov
or
sbb
and
xor
or
and
(bad)
aas
sbb
xor
pop
mov
mov
add
int3
push
jl
and
neg
leave
icebp
inc
iret
icebp
mov
aam
pop
and
mov
repnz
mov
inc
jmp
ins
sub
dec
in
cwde
jns
sti
imul
scas
lock
pop
jbe
rcl
outs
pop
mov
mov
cld
(bad)
dec
xor
fmul
and
adc
push
cld
pop
mov
xor
push
sbb
fwait
popa
add
ja
icebp
dec
scas
adc
shl
aaa
sbb
loope
stc
test
out
inc
(bad)
sbb
push
cmp
mov
jge
lods
clc
jp
mov
cmp
adc
mov
test
pop
loopne
adc
daa
ret
das
into
cwde
adc
jae
cmps
xor
dec
cmp
loopne
lods
out
jno
push
pop
inc
pop
and
leave
(bad)
in
push
adc
push
fnstenv
ds
je
mov
sub
sub
adc
mov
cmc
daa
shr
into
inc
aad
mov
and
mov
xchg
or
jg
mov
jmp
inc
dec
pop
jae
cmp
or
pop
je
retf
jl
sbb
mov
out
xchg
outs
jo
jl
xchg
lods
stos
clc
jnp
cmps
outs
jle
mov
xor
pop
jns
xchg
sub
out
xchg
lods
push
mov
mov
iret
sub
cmp
test
test
inc
sar
repnz
adc
lods
hlt
retf
mov
push
std
inc
jae
and
sar
(bad)
retf
dec
mov
fucomip
outs
mov
scas
xchg
aas
lods
in
xor
aad
ret
inc
arpl
daa
pop
cld
ret
inc
aas
xor
or
and
in
scas
sub
dec
add
push
hlt
ins
shr
sahf
and
sbb
inc
add
sub
sbb
xlat
bnd
mov
test
popa
test
repz
cmp
test
push
push
cmc
inc
add
cmp
add
out
test
hlt
pusha
push
fnstcw
xchg
mov
ins
imul
sbb
mov
cli
mov
add
sub
sub
in
cmp
mov
xchg
inc
rol
daa
neg
mov
or
pop
(bad)
push
inc
xchg
sbb
gs
idiv
repnz
mov
fild
pushf
push
mov
aad
test
stos
inc
pop
pop
and
popf
out
pushf
ja
ret
jne
rcl
cdq
mov
imul
jecxz
cmp
pop
test
mov
(bad)
xor
pushf
inc
outs
movs
ins
mov
sbb
sar
mov
mov
aaa
or
cs
arpl
and
and
aam
inc
xor
repz
push
test
popf
or
dec
push
fidiv
nop
sti
jmp
outs
mov
pop
call
call
or
jmp
jp
stos
gs
pushf
adc
adc
icebp
test
sar
or
and
add
push
push
inc
movs
inc
pop
add
fs
enter
xor
dec
movs
into
(bad)
sti
icebp
mov
push
xchg
xchg
fisub
retf
imul
js
cmp
jle
icebp
(bad)
das
mov
aad
lock
loop
or
push
mov
leave
cld
fiadd
and
pushf
rol
aam
and
lock
xor
in
dec
cli
jp
cli
les
inc
mov
sub
das
sbb
add
loopne
and
push
cmp
cmp
imul
xchg
cld
mov
pop
addr16
cmp
pop
or
lds
cmp
mov
sub
xor
jno
mov
mov
cmp
ds
out
scas
rol
xor
xchg
jo
cwde
pop
neg
add
iret
stos
mov
repz
clc
sub
jle
xor
aaa
push
div
dec
std
iret
pusha
nop
add
cdq
dec
call
ret
jge
ret
jns
xor
lock
push
fistp
in
jns
xor
push
push
xor
fwait
mov
xchg
xor
bnd
mov
mov
xor
inc
cli
push
dec
mov
sbb
mov
cmps
and
inc
cmp
and
mov
ins
fldenv
fistp
stos
push
ds
clc
sbb
xchg
sub
xor
and
test
ss
test
not
or
mov
sbb
imul
xlat
xor
mov
hlt
inc
or
or
popf
sbb
inc
out
(bad)
push
cmp
data16
fadd
sbb
out
outs
ja
or
jg
push
pop
mov
pop
lahf
jb
jg
sub
pop
mov
or
lock
push
push
cld
cmp
dec
repnz
movs
add
in
movs
mov
out
iret
cdq
push
mov
xchg
dec
sbb
pop
daa
cwde
int
pusha
cli
jae
sbb
loopne
(bad)
pusha
inc
and
mov
cmp
mov
cmc
test
mov
push
gs
test
cmc
jp
adc
inc
xor
inc
fucomip
dec
aam
mov
pop
xor
sub
lock
or
and
xchg
sub
mov
fwait
je
and
jmp
xchg
mov
inc
sub
dec
test
jge
xor
clc
adc
pop
cmc
cld
mov
sub
xor
jmp
push
js
cld
push
call
cmp
and
adc
jmp
std
fimul
dec
push
mov
add
(bad)
jl
dec
pop
xchg
scas
repnz
pop
(bad)
loopne
push
add
movs
fild
inc
mov
mov
and
pop
xchg
xor
push
enter
mov
dec
fwait
or
adc
mov
icebp
adc
or
aad
sbb
repnz
popa
or
repnz
sbb
mov
jb
rcr
cmp
cld
pop
clc
jle
sbb
or
push
outs
jns
sub
(bad)
sar
sub
adc
xchg
hlt
jg
or
loopne
push
jge
dec
or
ret
pop
js
cs
(bad)
cld
leave
enter
xchg
ins
or
in
sub
aaa
push
jno
fdiv
adc
inc
aaa
push
pop
ret
scas
push
fwait
mov
jge
(bad)
mov
pop
cmp
sbb
mov
or
or
out
mov
ret
test
ins
call
imul
call
xor
xor
(bad)
mov
ins
retf
xchg
popf
inc
cmp
fnstsw
mov
lock
and
mov
rcl
jo
fldcw
and
adc
jne
adc
(bad)
adc
jmp
add
push
jmp
inc
jmp
jg
cmc
or
and
aad
cwde
and
sahf
call
pop
(bad)
out
stos
into
fidiv
add
add
inc
imul
nop
jmp
and
push
stos
or
lahf
dec
adc
dec
enter
mov
dec
(bad)
rol
stos
xchg
(bad)
stos
sti
xlat
cmps
jo
out
call
push
test
popf
mov
enter
bound
adc
cmp
test
push
fucomi
sbb
inc
test
cwde
mov
out
ds
(bad)
jnp
aaa
sub
dec
lods
jmp
ret
xor
inc
jge
nop
cmp
retf
mov
cmp
cdq
cmp
pop
scas
sub
into
cmp
sub
outs
jecxz
test
sbb
jge
xor
mov
stos
xchg
pushf
cmp
test
push
xchg
xlat
jo
jne
cli
mov
cmp
frstor
and
jae
jl
dec
(bad)
leave
int3
mov
jnp
add
add
add
rsm
push
aaa
inc
js
jne
pop
dec
sahf
or
xor
cs
imul
or
xchg
push
sub
mov
lds
cmp
mov
frstor
mov
js
inc
sbb
pop
cli
lea
jg
or
mov
arpl
cli
mov
ds
lods
into
mov
xlat
adc
test
dec
push
xchg
repz
mov
jo
test
out
mov
inc
inc
retf
xchg
pop
aaa
cld
jmp
fcomi
in
ss
sti
mov
sub
inc
sahf
lds
push
jo
dec
jo
sbb
adc
outs
adc
ins
mov
xor
out
out
(bad)
fdiv
cmp
fucomi
mov
cs
jae
push
push
rep
xor
xor
in
xchg
stos
(bad)
in
mov
pop
test
es
sbb
retf
fstp
adc
aas
lods
nop
scas
mov
int3
dec
icebp
test
sahf
test
adc
sub
repnz
jle
fimul
and
pop
xlat
jb
enter
push
jb
xchg
and
jnp
sub
cmp
mov
mov
mov
rcl
outs
ins
inc
jle
in
sub
arpl
lock
inc
mov
imul
sub
xlat
sub
add
stc
jne
stc
xchg
enter
mov
es
shl
xchg
retf
add
scas
sti
add
xchg
jns
stc
test
fbld
or
mov
push
add
dec
mov
icebp
xchg
mov
movs
push
inc
push
push
mov
jmp
hlt
pop
loop
or
push
jp
retf
cmps
(bad)
and
rcl
pop
xchg
out
or
mov
add
sbb
or
ja
fcomp
(bad)
mov
movs
mov
dec
xlat
xchg
fimul
mov
mov
mov
loope
cmp
test
jmp
adc
mov
shl
clc
test
(bad)
lea
movs
test
lods
pop
xor
in
xchg
ds
ins
fadd
mov
mov
pushf
pop
or
fwait
push
mov
inc
nop
dec
pop
ds
rol
add
cmp
out
std
dec
dec
cwde
push
sbb
imul
push
call
jmp
inc
aad
(bad)
pop
jp
xchg
mov
cs
adc
jno
cmp
or
pop
and
je
sbb
jne
cmp
scas
pop
int
adc
cld
mov
mov
(bad)
pop
jns
shr
mov
pusha
mov
cs
jb
fdivr
stc
movs
scas
xchg
(bad)
mov
es
jg
sahf
jne
mov
push
inc
cmc
sub
arpl
out
test
leave
jno
xor
mov
aam
scas
cmp
cs
inc
call
mov
rcl
pop
xchg
lods
mov
xor
ret
ins
ret
add
nop
loopne
imul
mov
pop
jne
in
ror
icebp
cmps
retf
lods
pushf
(bad)
cmc
sti
mov
ret
pop
pop
adc
push
into
in
mov
push
jmp
pop
popf
xor
pop
je
inc
mov
cmps
fidivr
in
loopne
or
ss
cs
or
aas
daa
(bad)
lds
(bad)
sub
(bad)
xlat
push
mov
add
mov
adc
add
push
or
shl
outs
xor
jmp
arpl
xor
sbb
shl
adc
push
sub
cli
jns
ins
ja
fst
out
push
add
xchg
jmp
stos
movs
jg
jns
retf
xchg
xor
or
ja
mov
cli
ins
shl
stos
mov
rep
lock
rol
xchg
stos
dec
ds
sbb
ins
dec
icebp
sub
rol
xor
push
mov
leave
push
lock
jge
xor
mov
fnstcw
icebp
inc
cmp
mov
imul
out
mov
daa
pop
icebp
cmp
xchg
pop
xchg
ds
mov
mov
dec
pushf
or
sahf
xchg
adc
ficom
cmp
imul
ror
arpl
xor
(bad)
aad
fwait
mov
repz
and
jne
mov
xor
gs
mov
test
cdq
sbb
rcr
call
dec
sub
int3
sbb
push
cmp
out
jmp
mov
daa
int
add
bound
pop
out
ret
shl
int
jne
sub
jmp
out
pop
dec
or
pop
hlt
test
xchg
xor
sbb
mov
hlt
popa
jecxz
cmp
cmp
push
xchg
dec
in
or
mov
jp
push
push
scas
mov
dec
icebp
ds
xor
(bad)
mov
xor
push
ins
dec
adc
in
xchg
xor
es
xchg
(bad)
push
adc
mov
pop
jmp
adc
xchg
movs
inc
stos
push
lea
cmps
adc
sub
mov
sahf
arpl
push
mov
sub
int3
scas
inc
cli
xor
mov
inc
and
fld
in
sbb
ficom
pop
or
(bad)
icebp
mov
cmp
adc
mov
pop
pop
ror
mov
dec
sbb
xchg
mov
bnd
loope
pop
sbb
mov
mov
adc
inc
push
lahf
xor
cmp
dec
(bad)
cmp
in
adc
hlt
ror
cwde
jbe
add
ss
xchg
ins
cmp
xor
jmp
push
xor
pop
lock
jne
js
fild
xor
loope
fcmovnu
loop
jmp
das
pop
call
ds
mov
mov
imul
lods
adc
cwde
mov
cld
jne
pop
cmps
test
mov
cs
pushf
stc
call
mov
clc
jmp
mov
mov
mov
lods
loope
sar
pusha
xchg
dec
or
mov
mov
xchg
daa
inc
pop
lds
inc
add
xor
sbb
and
inc
fcmovbe
push
adc
outs
push
in
inc
sub
inc
mov
or
leave
fdivr
mov
retf
xchg
jbe
pop
adc
daa
shr
xchg
xchg
iret
movs
mov
pop
cdq
xor
leave
jecxz
je
ja
add
sbb
dec
sub
aad
jl
adc
jp
test
hlt
adc
out
pusha
(bad)
pop
sbb
sti
jmp
mov
call
mov
lods
(bad)
nop
(bad)
jmp
jb
jmp
and
cmp
in
mov
ror
lea
add
inc
add
mov
mov
xor
leave
ja
adc
cmp
mov
clc
mov
and
xchg
pop
call
xor
out
pop
inc
fcmovnbe
mov
dec
int3
call
icebp
cmp
jbe
push
push
fsubr
out
push
push
call
in
pop
data16
adc
dec
retf
test
xchg
mov
sub
sub
push
and
xor
pop
icebp
call
xor
cmps
retf
push
and
jns
(bad)
(bad)
call
neg
in
xlat
(bad)
cmp
push
out
lea
sbb
jecxz
movs
sbb
dec
jmp
nop
xchg
mov
adc
inc
inc
xor
test
xor
mov
push
aad
push
repnz
xchg
dec
fs
pop
mov
leave
jmp
test
jge
jns
iret
and
mov
jp
jns
fild
add
push
or
shr
ins
add
popf
and
jg
icebp
iret
loop
sbb
pop
pop
mov
out
xlat
dec
xchg
adc
retf
dec
adc
fiadd
clc
out
push
inc
repz
pop
mov
ss
and
cwde
fidiv
outs
out
test
jmp
sbb
pop
inc
mov
lods
aas
rcl
enter
push
sub
inc
shl
hlt
leave
ret
ret
jne
and
dec
fadd
rol
ins
pop
out
dec
dec
cmp
push
call
fistp
cld
xchg
dec
sub
xor
std
jmp
cmps
dec
aam
fld
rol
xchg
bound
clc
rol
mov
in
popw
cs
sti
push
xor
sbb
mov
inc
cmp
xor
mov
mov
in
mov
pop
xchg
sbb
sti
cld
stos
pop
fs
movs
mov
sub
cmp
adc
outs
stc
mov
dec
ret
leave
jmp
mov
inc
xchg
in
aad
dec
loopne
push
jb
stc
jmp
xor
out
mov
in
mov
sbb
out
mov
in
push
or
das
(bad)
hlt
retf
outs
and
ds
sar
xor
mov
out
ror
adc
aas
adc
out
daa
sub
cli
lahf
jl
imul
or
cmp
sub
test
pop
inc
das
pushw
out
push
jl
(bad)
cmp
outs
in
aas
dec
jns
jmp
(bad)
je
lods
(bad)
js
pop
int3
xchg
data16
xor
mov
loopne
sbb
ja
popf
sbb
push
push
out
push
aam
sbb
cdq
dec
int
stc
adc
std
cmp
dec
test
loopne
(bad)
dec
call
fmul
sub
enter
test
dec
imul
ss
inc
sbb
loopne
push
cdq
cmps
xchg
push
xchg
and
daa
mov
in
sub
sbb
jg
fbld
fsubr
cmp
and
sub
or
aaa
out
push
fstp
and
dec
jbe
mov
dec
mov
mov
mov
icebp
jns
lods
or
or
arpl
stc
adc
push
fs
push
cli
out
mov
push
push
(bad)
enter
(bad)
dec
and
out
mov
jae
(bad)
jns
ror
mov
div
cld
(bad)
int
and
jno
out
fcomp
cli
pop
jg
push
jo
xchg
pop
sub
xchg
push
sub
sbb
cwde
and
lods
mov
imul
not
cmp
xchg
adc
pop
addr16
push
add
adc
sbb
mov
mov
data16
push
in
lods
imul
mov
dec
mov
movs
ret
iret
mov
(bad)
push
dec
mov
xchg
inc
movs
inc
sahf
mov
and
adc
sbb
ja
mov
movs
es
outs
jle
sahf
or
popf
jge
push
xchg
cmps
push
add
mov
xchg
and
dec
sub
xor
cmps
sti
push
test
cs
lea
jnp
addr16
dec
jmp
xor
xchg
pop
sbb
dec
bound
inc
xor
repnz
es
icebp
add
outs
jge
ins
(bad)
sub
enter
cdq
mov
jp
ja
fisttp
aam
sub
enter
outs
sbb
ja
mov
imul
and
ret
sbb
dec
jg
push
loopne
fs
aas
and
in
in
mov
call
jg
out
icebp
add
sub
(bad)
jg
int
push
popa
mov
push
test
dec
cmc
mov
or
xor
jl
jo
loopne
aaa
test
dec
cmc
add
inc
push
cmp
test
ins
mov
jp
shl
dec
jg
cmp
lods
and
cli
shl
(bad)
and
mov
test
aas
jo
(bad)
popf
addr16
daa
mov
repz
push
pushf
cmp
fdiv
(bad)
sub
mov
in
aaa
mov
sub
pop
int3
jmp
inc
sub
fcomp
sbb
sahf
out
retf
jns
ret
repz
js
cwde
cmp
and
mov
mov
int3
jge
push
(bad)
mov
in
aas
adc
xlat
bound
push
xchg
pop
(bad)
dec
fidivr
inc
sbb
lock
mov
xor
test
into
dec
ds
repnz
cmp
repz
imul
pop
out
xor
shl
in
mov
js
rcr
stos
stos
pop
int
mov
je
cs
jg
mov
sti
pop
or
out
rol
jecxz
cdq
popf
pop
cmp
inc
mov
test
call
jle
(bad)
and
aaa
push
and
fsubr
loopne
stos
xchg
sbb
cli
cmp
mov
sbb
pop
jle
imul
out
and
lods
mov
retf
dec
ret
inc
cmp
aad
or
jmp
cli
mov
(bad)
mov
pop
mov
out
pop
(bad)
js
pushw
lds
je
sub
add
cmc
jmp
inc
xor
jle
addr16
mov
mov
fist
jo
adc
out
(bad)
in
je
out
adc
std
test
sar
mov
inc
and
ds
mov
js
inc
push
cmc
jnp
fistp
inc
shl
rcr
cdq
xlat
loope
jae
sahf
leave
jecxz
pusha
pop
imul
fwait
jno
(bad)
sub
aas
aam
out
xchg
cmp
dec
cmp
lds
xchg
out
or
xchg
les
test
dec
inc
das
int
and
loopne
dec
sbb
and
fmul
(bad)
mov
into
jne
into
cmc
and
imul
or
(bad)
push
inc
or
cmc
scas
cdq
mov
(bad)
call
mov
fnstsw
aam
scas
sbb
stos
cmp
and
and
cmps
pop
imul
scas
add
ss
punpckhbw
lahf
mov
pop
dec
mov
push
adc
imul
ja
mov
js
fistp
js
dec
and
pop
pop
mov
stc
jo
(bad)
xor
ss
rol
sar
(bad)
add
mov
iret
shl
(bad)
int
pop
imul
jne
jae
xchg
inc
sti
cmp
pusha
retf
xchg
outs
inc
inc
push
xchg
fcomp
lods
pop
js
fidivr
popf
out
ins
dec
(bad)
call
jbe
icebp
inc
adc
and
ja
sbb
push
rcl
ret
add
dec
pop
cdq
in
je
dec
add
std
loope
dec
in
and
sar
popf
jae
(bad)
shl
add
mov
xor
sbb
bound
xchg
jmp
gs
jae
pop
push
or
push
adc
add
inc
push
jmp
stos
cdq
stos
push
add
mov
mov
(bad)
jmp
nop
ds
mov
sbb
mov
cmp
dec
cmp
movs
xchg
retf
icebp
sbb
pop
adc
nop
xor
(bad)
xor
mov
aam
or
mov
xor
jle
fadd
nop
sub
fcmovnu
shl
push
push
jbe
and
cmp
mov
jmp
dec
fwait
out
test
mov
daa
outs
inc
push
dec
lods
jge
jmp
adc
add
fsub
lea
out
xor
test
movs
sbb
or
test
clc
imul
mov
std
fild
and
cdq
fs
retf
push
sub
iret
mov
adc
mov
nop
dec
jg
repnz
xchg
xor
out
retf
jbe
jle
scas
xchg
sbb
push
adc
and
inc
in
int
jl
idiv
or
jge
in
cmp
mov
imul
xor
mov
push
pop
sbb
test
jge
add
push
lock
add
inc
mov
or
dec
mov
pop
push
push
shr
cmc
ror
icebp
stos
jge
adc
int
ins
scas
xchg
push
ficom
fcmovnbe
outs
add
xchg
data16
mov
inc
mov
jge
dec
es
push
xchg
mov
inc
sub
jcxz
aas
addr16
cli
sbb
mov
push
in
loope
adc
adc
(bad)
mov
(bad)
xchg
sbb
(bad)
std
mov
xchg
cwde
push
loope
addr16
add
xor
in
inc
rol
jbe
xchg
fild
out
fisttp
cmp
xchg
pop
push
imul
loop
add
imul
movs
lock
gs
and
jle
push
and
jae
in
inc
sub
(bad)
adc
or
iret
inc
push
ins
inc
movs
sahf
ds
cmc
push
pop
push
mov
outs
mov
test
sub
mov
fwait
imul
cdq
adc
pop
dec
shr
sbb
clc
jns
test
pop
retf
and
sbb
ret
adc
or
sti
jmp
add
xlat
leave
xor
mov
dec
scas
dec
outs
inc
mov
in
loopne
loope
shl
int3
int3
retf
sbb
shr
jl
dec
retf
out
xor
in
fs
pop
aas
add
mov
mov
adc
add
lods
in
mov
dec
daa
xchg
cmps
or
iret
jno
test
xchg
add
cmp
inc
out
sub
pop
dec
(bad)
(bad)
fsubr
cmp
sar
scas
or
ss
adc
xchg
aaa
cmp
and
and
ins
or
jmp
movs
outs
pop
mov
sub
call
int3
xlat
mov
and
pushf
mov
jge
hlt
add
pop
cmps
jecxz
push
retf
xor
sbb
out
xor
bound
sub
test
inc
add
ror
mov
das
nop
mov
and
xor
pop
stc
pop
sar
pop
xchg
adc
je
scas
in
pop
pop
scas
movs
movs
cmp
scas
push
in
mov
add
mov
stos
jns
leave
int3
adc
adc
jecxz
leave
xor
iret
push
push
mov
jnp
out
jmp
shl
push
(bad)
sub
adc
ja
rcl
cmp
adc
hlt
fsubr
daa
sub
cmp
aam
and
adc
icebp
dec
icebp
inc
add
cmp
int3
add
retf
adc
jecxz
push
stos
imul
mov
mov
mov
mov
jne
push
(bad)
mov
rol
sub
add
fwait
push
inc
mov
leave
jle
xor
sub
stos
test
xor
test
mov
adc
pop
sub
xchg
stc
pop
fimul
or
test
neg
hlt
leave
add
xchg
loop
movs
pop
sbb
mov
int
les
ins
out
xor
cmps
je
and
movs
cli
imul
and
xchg
(bad)
adc
mov
push
pusha
mov
mov
shr
add
cld
or
test
and
mov
pop
mul
aad
call
add
es
lods
xchg
imul
pusha
ror
ss
ins
jbe
sbb
outs
call
in
jp
cmp
sahf
test
popa
push
or
retf
and
jo
cmp
mov
jbe
inc
push
scas
inc
jae
push
cld
pop
adc
and
pop
lods
dec
loop
mov
cli
mov
aas
mov
adc
lds
cmp
(bad)
mov
cdq
jo
cmp
retf
pushf
cli
sub
mov
fadd
or
push
sbb
repz
add
cmp
hlt
imul
movs
inc
inc
sar
push
pop
and
and
dec
push
in
push
cmps
sti
add
push
ret
pop
sbb
inc
xchg
jae
sbb
movs
test
jl
out
mov
shr
mov
ret
shl
jecxz
and
cli
push
cs
lock
xchg
dec
retf
jae
push
leave
loop
xchg
cmp
pop
and
push
xlat
in
push
jp
jmp
pusha
movs
mov
pop
sbb
jnp
ror
mov
fstp
and
outs
jmp
add
xchg
push
or
packsswb
shr
add
push
and
sahf
jae
out
aad
(bad)
ja
mov
adc
out
fcom
lea
fcom
imul
fimul
outs
cmps
jae
mov
pop
pop
jbe
push
sbb
clc
ss
fsub
push
loopne
mov
jne
clc
push
aaa
or
xchg
rol
movs
movs
mov
pop
stc
mov
push
adc
mov
adc
popf
mov
or
ins
icebp
dec
jmp
mov
(bad)
cld
jns
outs
jns
pop
dec
cmp
xor
fwait
sub
adc
adc
(bad)
mov
dec
icebp
adc
into
adc
into
aas
jae
stos
xchg
movs
xor
out
fild
out
shr
dec
(bad)
out
lds
(bad)
pop
mov
push
push
(bad)
in
sub
aaa
outs
mov
imul
mov
and
adc
add
mov
add
sbb
push
das
add
sahf
mov
inc
push
xchg
movs
jnp
mov
and
mov
mov
repz
rcl
scas
fistp
outs
mov
in
outs
test
daa
push
cmp
inc
add
sbb
(bad)
repnz
xor
arpl
cmp
retf
sbb
mov
(bad)
in
dec
ja
movs
fdivr
add
jg
mov
(bad)
sub
(bad)
jno
cmp
adc
push
dec
idiv
sar
mov
jae
sbb
repz
push
out
mov
inc
mov
add
shr
mov
mov
pop
xor
iret
call
inc
cli
movs
mov
xchg
ror
sbb
pop
xchg
pop
test
dec
fsubp
shr
std
or
xor
adc
add
sub
and
mov
sar
bound
leave
mov
push
dec
cmp
xchg
fnstenv
sub
xchg
mov
pop
mov
xchg
repnz
(bad)
push
sub
int
sub
jg
or
stos
lahf
repnz
xor
out
mov
data16
paddw
repz
ret
sbb
fldenv
mov
pop
mov
lock
pop
add
xchg
mov
loopne
mov
(bad)
aad
sar
cmp
jns
jg
repnz
inc
cmp
mov
cmp
lahf
pop
or
mov
adc
push
call
lock
and
cmp
js
adc
adc
or
dec
jns
xor
push
outs
jae
inc
imul
xchg
inc
cwde
pop
pusha
scas
std
cmp
cmps
or
or
jle
pshufw
jg
cmp
mov
xor
in
mov
(bad)
fild
fdivr
fisttp
shl
add
clc
xor
dec
xchg
push
mov
aam
push
outs
mov
out
stos
mov
xchg
scas
sub
rol
in
ss
pop
imul
mov
adc
sub
retf
push
paddusw
imul
jcxz
lds
xchg
add
add
aas
and
jge
sub
mov
call
cmp
jle
pop
inc
shl
inc
cwde
mov
cmp
rcl
pop
xchg
jge
outs
pushf
pop
stos
sahf
imul
dec
or
xor
fs
xlat
xlat
mov
icebp
ins
das
mov
inc
ins
fcompp
mov
xor
and
inc
dec
mov
mov
clc
repz
jbe
adc
pop
mov
pushf
jns
jnp
in
jno
call
push
xchg
push
jns
push
lahf
lds
lds
or
imul
gs
mov
sub
imul
retf
sbb
xchg
ror
cmp
in
mov
cs
(bad)
jae
enter
shl
(bad)
sbb
mov
aam
dec
dec
(bad)
push
test
data16
mov
std
das
xor
mov
add
gs
in
data16
jno
call
sbb
cld
movs
mov
repz
mov
sbb
xor
mov
mov
mov
movs
dec
add
pusha
bound
mov
shr
js
add
popf
lea
lahf
jge
push
adc
jnp
jl
mov
nop
(bad)
adc
jge
rcl
adc
sub
dec
push
inc
or
lods
idiv
adc
dec
cli
shl
out
fcomi
fcomp
repnz
in
fidiv
(bad)
or
in
mul
sbb
sti
mov
cmp
out
fwait
pop
or
mov
jl
inc
xchg
out
mov
xor
popf
iret
add
add
popa
mov
mov
adc
jnp
inc
cmp
mov
push
cld
stos
scas
aad
(bad)
bound
mov
or
dec
(bad)
pop
arpl
or
sub
gs
mov
mov
or
inc
sub
xchg
(bad)
sti
leave
sbb
int
std
xchg
clc
in
mov
and
mov
retf
es
cmp
and
add
fldcw
push
adc
rol
dec
adc
cwde
add
int
mov
leave
push
mov
movs
or
xchg
inc
ja
mov
push
inc
inc
adc
sbb
jb
or
cmps
outs
or
cmp
mov
sub
(bad)
jge
add
pop
jg
mov
cmps
mov
retf
ret
sbb
repnz
pop
call
cli
stos
fnstenv
sub
arpl
test
mov
icebp
mov
cmps
adc
ror
push
lods
call
cld
add
lds
cmp
adc
outs
xchg
ret
sbb
lods
sar
jp
fild
jge
out
pushf
dec
(bad)
ins
daa
lock
push
inc
out
push
dec
repz
jnp
cld
ret
mov
test
adc
xor
mov
test
xchg
jne
daa
cld
add
(bad)
sbb
mov
rcl
xchg
mov
dec
lock
outs
mov
neg
mov
mov
mov
data16
imul
fiadd
xor
cld
and
dec
pop
rcl
clc
jmp
call
pusha
mov
ja
jg
sbb
pop
leave
arpl
(bad)
mov
scas
xchg
jnp
or
sub
pop
popf
mov
xchg
ret
push
inc
pop
xlat
lock
push
mov
out
sub
mov
pop
test
addr16
mov
stos
cmp
dec
gs
pop
es
outs
sahf
test
push
sub
enter
add
inc
nop
loopne
stc
inc
mov
sub
or
mov
fstp
fwait
sub
push
lds
pop
les
lock
xor
popf
sub
ins
sub
stos
pusha
aas
xchg
inc
in
mov
fidivr
push
mov
popa
and
cmp
popa
xor
pop
loop
or
aas
add
int3
sbb
or
add
mov
inc
inc
mov
test
push
jmp
xchg
out
mov
xor
das
mov
cmps
cld
test
dec
sbb
popf
xchg
lds
out
jecxz
pop
test
push
pop
scas
push
add
add
pop
pop
push
stos
inc
mov
ror
mov
fnstenv
fsub
int3
cwde
(bad)
and
jp
adc
mov
rol
cmps
pop
fwait
jp
retf
pop
shr
popf
popa
aas
fwait
dec
stos
and
js
cli
cld
aam
out
mov
sub
mov
cmp
iret
sbb
pushf
ret
fdivr
cmp
dec
inc
mov
jo
outs
sbb
cmps
push
xchg
dec
int3
push
sbb
dec
int
xlat
sbb
ficom
push
mov
fcmovne
out
movs
push
lea
aad
ss
int
je
call
outs
clc
sub
rsqrtps
and
sub
stc
xchg
cmps
xor
jecxz
pop
jecxz
or
nop
pop
in
jbe
clc
ret
and
mov
lock
(bad)
in
xchg
push
mov
jns
pop
out
bound
dec
stc
loopne
es
test
inc
mov
data16
and
jnp
jns
sbb
jns
out
aas
jecxz
loop
cmps
int3
jne
cmp
lock
and
xor
push
hlt
jle
or
jnp
cld
aaa
je
xchg
(bad)
enter
test
mov
daa
(bad)
jmp
out
sub
loopne
xor
lods
ror
mov
jge
adc
push
xchg
scas
push
xchg
rcl
adc
pcmpgtd
pop
xor
std
dec
imul
dec
fcomp
or
out
and
xchg
mov
xor
mov
out
std
push
les
xor
add
shl
xor
scas
mov
enter
(bad)
mov
jle
mov
jbe
cmp
imul
xor
clc
cmps
daa
dec
inc
pop
push
ret
dec
std
into
or
cli
lods
inc
leave
loop
aad
dec
add
jl
test
and
sahf
mov
sbb
cmp
(bad)
mov
sar
hlt
jmp
pop
clc
stc
sub
popf
arpl
retf
or
addr16
dec
cmp
add
pop
lods
fiadd
jb
arpl
pop
enter
add
aaa
or
std
mov
pmullw
mov
ror
scas
loope
jae
loope
cs
or
test
add
jo
mov
adc
mov
jno
or
add
(bad)
imul
ror
pop
push
and
adc
inc
add
push
rol
push
jbe
mov
and
xchg
test
shl
jge
enter
mov
or
sbb
pop
pop
mov
add
mov
aad
and
retf
aas
xchg
(bad)
cmps
dec
jno
mov
push
push
cmc
shr
sbb
nop
xor
scas
push
stos
mov
dec
or
dec
cwde
into
lods
mov
fnstenv
push
mov
ror
pushf
sar
ds
push
xor
mov
dec
(bad)
(bad)
pop
mov
or
retf
inc
ss
xchg
lahf
cmps
jmp
mov
mov
daa
outs
nop
xchg
cmp
les
fmul
add
leave
push
retf
repnz
sbb
lods
outs
push
mov
je
push
in
mov
pop
jae
mov
clc
xor
jmp
ins
dec
mov
je
aam
adc
imul
fucom
pop
mov
jge
jmp
rol
out
xlat
fs
adc
jge
mov
rol
mov
sub
sbb
xchg
imul
pop
adc
loope
xor
in
lods
popf
jle
dec
mov
jo
mov
loope
ret
les
push
xchg
retf
cwde
dec
push
std
push
xor
enter
jnp
pop
jbe
pop
adc
scas
arpl
(bad)
fcomp
pop
sti
repz
or
jno
adc
scas
sub
lods
jecxz
(bad)
test
shl
and
fdivr
jmp
inc
into
jne
fmul
int
pusha
dec
or
xchg
in
mov
jecxz
jo
adc
cmp
push
fwait
dec
sub
mov
pop
mov
stc
(bad)
jmp
sub
mov
fsub
loope
sub
repnz
retf
jae
add
cmp
rol
cli
mov
pop
into
les
mul
in
idiv
popa
mov
out
mov
shl
fistp
test
sbb
or
gs
sbb
adc
xchg
ror
repnz
out
fild
xchg
push
out
aas
ds
inc
out
and
fsub
jno
xchg
into
inc
cmp
mov
movs
xchg
lahf
jecxz
movs
dec
xchg
enter
repz
xor
ins
test
cmp
add
xor
nop
jp
call
rol
pusha
(bad)
jecxz
inc
(bad)
xchg
or
adc
and
aas
xchg
cmc
sub
test
aam
inc
cmp
adc
mov
mov
push
icebp
push
sar
aam
dec
outs
adc
xor
fwait
add
je
mov
mov
add
out
or
ja
ss
sbb
cmp
lods
movs
adc
in
xchg
stos
emms
xchg
aad
faddp
sbb
scas
add
add
xchg
stos
xor
xchg
lea
or
jae
outs
inc
mov
mov
popa
inc
cdq
pop
test
lock
xchg
or
add
pop
mov
dec
mov
push
mov
push
das
or
add
shr
clc
add
sub
mov
xchg
lock
cmp
ret
jo
xchg
fadd
std
jne
xchg
pusha
jmp
into
jb
or
shl
jb
retf
xchg
inc
jne
mov
inc
jle
ja
mov
push
arpl
mov
jg
mov
rcl
sbb
ins
sub
lahf
xchg
fldenv
gs
stos
xchg
sahf
cdq
pop
jg
or
(bad)
jnp
jo
pop
fst
cmp
fld
adc
mov
pop
inc
mov
loop
sub
inc
jmp
jno
mov
lahf
pop
lea
repnz
jmp
aam
lods
outs
loope
shl
test
in
inc
cdq
es
mov
dec
inc
bound
and
sub
rol
popa
test
inc
shl
cli
mov
into
pop
mov
leave
adc
dec
pop
leave
in
(bad)
fs
lods
loop
stos
jmp
push
test
sub
push
(bad)
jge
cmp
out
adc
cwde
fistp
cmp
hlt
out
jl
push
pop
inc
mov
nop
mov
(bad)
out
adc
and
add
ins
jg
adc
or
sub
shl
sbb
mov
fucomp
xor
push
rcl
jmp
and
mov
stos
lods
into
jnp
mov
sub
sahf
cmp
ss
mov
pop
cmp
xlat
xlat
push
pop
push
mov
xchg
pop
dec
pop
xchg
jmp
sub
ja
not
mov
and
push
cwd
mov
movs
dec
test
push
(bad)
fld
imul
jno
mov
push
jae
je
xor
(bad)
out
outs
inc
adc
(bad)
(bad)
fstp
sub
inc
pop
push
fistp
out
sub
push
popf
out
jo
pop
push
ins
mov
push
rol
xchg
je
clc
jge
mov
adc
cs
add
xor
inc
cmc
(bad)
ds
sub
push
(bad)
and
dec
(bad)
loop
push
xchg
jns
jl
mov
adc
(bad)
ds
jl
neg
push
in
push
mov
fidiv
sti
and
jae
sahf
xor
push
inc
dec
cmp
(bad)
repz
imul
cld
xchg
mov
and
test
mov
shl
(bad)
sbb
dec
out
sub
or
mov
push
add
pop
xor
out
add
mov
jns
mov
mov
push
movs
mov
push
pop
cmps
into
repnz
les
push
jo
xchg
into
jae
mov
loop
add
jle
idiv
sbb
inc
mov
mov
adc
ror
retf
in
mov
jle
cs
arpl
jnp
sub
(bad)
sar
mov
sar
mov
sbb
dec
or
xor
sub
call
and
cld
adc
ret
and
int3
xor
inc
adc
dec
mov
add
pop
fisttp
int
pop
or
mov
push
and
daa
ja
loop
pop
imul
pop
movs
ret
or
sub
mov
mov
adc
sub
rcr
out
lea
lds
retf
cmp
push
loope
mov
push
xlat
and
cmp
sbb
gs
out
cdq
loopne
mov
adc
sbb
adc
aad
or
dec
pop
popa
inc
jg
cmp
call
mov
mov
mov
xchg
sbb
mov
mov
jb
pop
dec
pop
mov
bound
inc
sbb
cmp
mov
cmp
adc
mov
xchg
cwde
mov
je
inc
inc
jecxz
popa
nop
mov
std
adc
jg
mov
pop
retfw
repz
push
mov
pop
out
push
sbb
push
pop
leave
mov
pop
mov
add
test
ret
sub
mov
loop
jno
sub
fabs
mov
xor
pop
popf
xor
jnp
in
cmp
retf
push
xchg
popf
sti
jp
mov
and
sti
retf
sbb
push
mov
and
mov
mov
ds
push
adc
sbb
lock
pop
mov
jbe
jne
mov
mov
cld
je
cmp
shl
and
mov
fisttp
mov
xchg
adc
adc
adc
lea
or
pop
fidivr
adc
pop
outs
cmp
shl
jns
pop
xchg
call
sbb
adc
mov
in
adc
inc
push
cmp
stc
pop
gs
lock
repz
adc
jge
or
cmps
inc
and
dec
(bad)
mov
data16
xchg
mov
call
leave
icebp
fisttp
cmp
push
aam
inc
std
dec
xor
mov
(bad)
mov
aam
ds
(bad)
xchg
mov
push
dec
(bad)
into
inc
mov
lods
into
jbe
popa
mov
push
loop
dec
hlt
aaa
jo
ret
adc
(bad)
popa
loop
inc
or
popf
(bad)
loopne
adc
mov
and
ret
inc
ins
mov
scas
mov
cmp
sbb
repz
mov
push
ins
call
mul
sbb
add
cmp
jbe
push
imul
jns
test
sbb
loop
iret
mov
mov
std
ret
pop
retf
mov
push
inc
shl
popa
or
pusha
or
jmp
sbb
pop
jo
std
lock
or
jns
sub
popf
hlt
mov
xlat
inc
enter
xor
inc
cmc
iret
or
jne
dec
sub
mov
sub
mov
lahf
lds
cmp
push
sbb
dec
and
inc
adc
push
jmp
push
or
push
ret
sub
test
in
mov
mov
sahf
in
or
push
and
and
push
inc
sub
dec
into
mov
sub
push
cmps
and
jnp
inc
lods
arpl
pop
mov
sub
in
inc
sahf
dec
pusha
xlat
loope
icebp
cwde
cmp
add
sub
dec
inc
stc
and
(bad)
push
call
push
out
xor
add
xor
push
cmc
fsubr
std
pop
loop
fiadd
in
and
push
(bad)
(bad)
fnstenv
pop
fld
out
mov
mov
iret
xor
movs
sub
arpl
(bad)
dec
dec
jg
pop
xchg
inc
(bad)
jp
mov
mov
mov
lahf
jmp
stos
pop
mov
cmp
std
push
ret
jge
push
add
inc
dec
icebp
xor
fwait
scas
mov
mov
lock
xchg
push
pop
enter
sub
or
xor
mov
ret
or
daa
xor
dec
mov
sbb
pop
in
cld
xchg
inc
out
jmp
sbb
xlat
leave
sahf
mov
sbb
add
dec
mov
xchg
pushf
cmovl
sub
dec
xchg
cmps
retf
fistp
sub
mov
xchg
push
fisttp
aam
sub
mov
mov
jle
dec
cmp
push
push
add
mov
and
lock
out
jae
scas
repz
and
sbb
xchg
arpl
daa
adc
(bad)
xchg
lahf
or
inc
inc
or
xchg
cmp
or
pop
lds
or
add
cdq
push
and
sbb
jge
xlat
sbb
push
pop
and
std
and
xchg
mov
adc
xchg
leave
pop
push
and
mov
add
adc
add
push
dec
push
or
cld
xor
cdq
mov
add
cmps
pop
mov
push
pop
mov
bound
mov
mov
cmps
jecxz
pop
pop
or
xchg
hlt
sbb
ret
xor
push
and
ret
loopne
pop
cmc
adc
cdq
stos
outs
fmul
cld
sbb
aas
mov
popa
sbb
nop
repnz
outs
sbb
je
mov
adc
addr16
sub
popa
hlt
movs
aad
mov
push
cmp
mov
push
mov
frstor
adc
jmp
test
xor
cmps
adc
je
leave
mov
fistp
dec
sbb
fadd
aas
jmp
into
retf
adc
mov
sbb
fsub
push
sub
in
icebp
enter
pop
mov
and
outs
call
mov
movs
xchg
(bad)
leave
or
popf
sbb
cmc
iret
and
stos
pop
es
sbb
inc
dec
mov
pop
xchg
out
mov
movs
cmp
xchg
faddp
cld
dec
mov
test
push
jmp
dec
mov
mov
(bad)
jae
xchg
(bad)
pop
ins
fstp
fimul
retf
mov
xor
pop
mov
leave
out
out
in
adc
cmp
xor
clc
sub
or
in
or
lds
daa
call
nop
inc
push
pop
xchg
xchg
pop
fcomi
pop
pop
int3
fadd
std
in
je
mov
enter
test
sbb
lods
movs
hlt
(bad)
xchg
fadd
adc
lods
xchg
or
and
push
aas
jge
arpl
pop
addr16
cld
lock
inc
hlt
(bad)
pop
mov
enter
or
jmp
stc
shl
add
mov
add
pop
iret
mov
div
xor
mov
lock
add
push
sub
jp
ins
push
inc
jne
aad
dec
loop
cmp
add
sbb
fdiv
push
push
sub
popa
pop
std
sbb
scas
arpl
(bad)
mov
mov
bndldx
imul
sbb
or
push
repnz
push
(bad)
xor
or
mov
sub
mov
stos
cmp
fcmovnb
inc
imul
xchg
popf
push
sub
or
icebp
sbb
ins
sbb
and
cmps
sub
shl
lahf
mov
mov
push
std
pop
std
movs
gs
in
clc
lods
and
sub
(bad)
stos
push
mov
or
fld
out
int
loopne
adc
out
mov
and
adc
fiadd
push
xchg
repnz
fs
rol
adc
ins
jae
shl
ffreep
bound
jo
inc
outs
loop
retf
and
xchg
push
jbe
popf
push
jle
movs
repz
(bad)
cmc
sbb
inc
dec
jbe
adc
xchg
push
jl
cmp
arpl
jge
out
ja
pop
jmp
xchg
pushf
adc
data16
push
outs
sub
jb
mov
xchg
in
xor
push
push
shr
add
(bad)
lods
inc
mov
pop
adc
fstp
push
mov
jb
ja
shl
nop
inc
push
repnz
push
cmp
mov
std
icebp
sub
add
push
inc
push
outs
jecxz
and
arpl
dec
mov
xor
into
sar
or
add
and
xor
inc
call
invlpg
add
aam
in
fsubrp
(bad)
repnz
mov
popf
mov
call
pop
je
out
mov
imul
push
mov
cmp
jb
pop
jle
and
push
adc
and
ffree
movs
add
repz
jle
xchg
xor
pop
jp
lds
test
add
mov
cmp
pop
(bad)
or
sub
xor
and
or
in
clc
jle
test
xor
adc
ret
xchg
jmp
cwde
pop
cmp
call
inc
mov
aas
xchg
imul
mov
shl
data16
rcr
rol
inc
repnz
ja
push
push
call
pop
mov
mov
in
mov
dec
jns
jecxz
push
pop
and
dec
call
push
mov
aaa
inc
or
mov
je
cmp
sahf
jne
mov
adc
jecxz
stos
dec
jle
mov
mov
ret
mov
loopne
sub
mov
mov
xor
paddusw
sbb
mov
or
test
mov
jle
jg
popa
jecxz
push
add
xchg
mov
leave
mov
imul
jmp
je
or
inc
mov
push
or
dec
and
adc
aam
push
ja
sbb
repz
scas
ret
sub
pop
adc
sub
shr
adc
inc
xor
fs
cmps
pop
div
ret
std
mov
add
xchg
enter
retf
(bad)
mov
xchg
cmps
outs
jnp
cmp
add
in
mov
dec
movs
cld
and
dec
add
pop
dec
mov
aas
ins
out
popa
retf
add
adc
mov
xor
cmp
int
mov
mov
loope
pop
xor
mov
inc
adc
enter
ds
imul
and
idiv
mov
aad
mov
mov
or
xchg
jne
out
test
jmp
scas
out
cs
shl
sbb
les
(bad)
xor
inc
mov
add
push
repnz
rcl
shl
cwde
inc
loop
cli
cmp
test
jp
aas
push
aas
pop
dec
mov
push
add
call
xchg
jae
out
pop
in
mov
movs
mov
cmp
or
dec
lock
pop
in
adc
or
sbb
aad
popa
loope
sbb
sub
es
outs
adc
sbb
pop
nop
(bad)
cmp
movs
pop
cli
cli
mov
and
pop
xchg
dec
jl
push
aam
call
call
sbb
iret
add
mov
dec
xchg
aad
pop
movs
les
cmp
add
inc
jnp
fstp
fsub
cmps
mov
xor
mov
data16
arpl
(bad)
xchg
cwde
fmul
addr16
mov
or
xchg
mov
in
ret
nop
jmp
mov
dec
arpl
sti
ret
mul
jne
mov
pop
icebp
mov
jns
xchg
mov
adc
sub
pop
push
movs
cmp
inc
jp
jno
pop
pop
call
adc
inc
(bad)
jl
and
or
sub
xchg
jle
cmps
repz
adc
jnp
cmp
inc
(bad)
call
cmp
mov
mov
fldcw
enter
adc
in
xchg
pusha
bound
mov
add
mov
pusha
inc
mov
mov
test
retf
push
mov
(bad)
iret
loopne
pop
add
pop
xchg
cmp
loopne
dec
test
jae
or
rcl
dec
sub
pop
jb
mov
inc
sbb
jae
pop
test
sub
js
add
cs
repnz
cwde
lods
cmp
in
shl
inc
sbb
push
lea
sar
mov
loopne
jmp
push
stc
rol
xchg
jmp
arpl
test
or
fdivp
popf
dec
add
add
mov
push
sbb
cmp
pop
and
dec
mov
mov
mov
mov
mov
add
sbb
push
lock
(bad)
mov
mov
sub
shr
sub
jo
mov
daa
test
or
jmp
mov
icebp
cmps
les
pop
js
sar
lods
mov
add
neg
test
int3
outs
jecxz
add
sbb
inc
push
mov
add
aas
ret
hlt
out
add
(bad)
cmp
jo
fwait
mov
dec
repz
(bad)
repnz
pop
lock
mov
sub
add
and
push
and
rcl
mov
cmc
data16
cs
push
xor
icebp
pop
xchg
(bad)
fimul
adc
sti
int
jae
push
jmp
and
pop
out
inc
sti
aaa
or
lea
cld
push
retf
test
pop
ror
outs
xchg
scas
test
and
pop
scas
ins
popf
(bad)
clc
mov
pop
rcl
mov
jbe
pop
jbe
test
xor
add
add
xor
mov
iret
or
mov
sbb
sahf
xchg
stc
cmp
mov
loop
and
add
cs
jns
inc
dec
or
test
sbb
repnz
arpl
mov
mov
les
adc
cli
and
bound
dec
outs
cmps
popf
xor
or
fld
mov
ret
add
into
imul
adc
imul
(bad)
clc
jmp
pop
loop
rcr
jmp
fwait
test
and
enter
jo
and
adc
mov
jecxz
push
add
cmp
mov
adc
test
rol
push
ja
jns
xchg
fsub
and
inc
aaa
mov
lds
push
(bad)
mov
mov
(bad)
cdq
sbb
out
out
mov
adc
int
mov
pop
mov
add
mov
xchg
mov
retf
jne
das
imul
lods
ja
pop
or
jnp
cmp
cmp
sbb
ins
pop
cs
sub
aaa
mov
(bad)
aas
xchg
mov
push
or
push
mov
adc
(bad)
mov
(bad)
xchg
ror
fcomp
cld
pop
and
mov
sbb
or
(bad)
test
jmp
mul
aas
xor
mov
or
or
(bad)
rcl
(bad)
xor
arpl
popf
sub
jnp
jle
or
cmp
dec
das
in
mov
xchg
(bad)
jecxz
adc
leave
stos
nop
cmc
iret
push
faddp
aaa
push
add
xor
ds
(bad)
dec
or
call
aam
test
xchg
call
inc
sub
jmp
jbe
or
cdq
retf
xor
lods
cmp
mov
fld
or
(bad)
add
jbe
adc
enter
ficom
push
jl
(bad)
ret
fisubr
xchg
call
mov
or
pusha
or
ret
nop
push
test
lods
nop
mov
mov
fiadd
push
or
xchg
xor
ins
push
mov
scas
pop
stos
sub
rcl
mov
sub
in
sbb
dec
inc
ins
mov
leave
pop
add
xor
movs
imul
retf
mov
cwde
mov
(bad)
sti
pushf
out
add
adc
int
add
les
pop
iret
in
cdq
and
sub
ins
test
add
repz
push
les
jae
(bad)
fwait
mov
jge
stc
test
movs
scas
pusha
add
in
shl
mov
pop
sub
jno
sub
xchg
aas
dec
fimul
adc
loop
sbb
cs
jge
aas
fild
jle
out
push
jg
mov
mov
xchg
cmps
stos
pop
push
jmp
js
pop
mov
fmul
cmps
bnd
adc
xchg
outs
dec
cmc
mov
xchg
out
inc
addr16
pop
xchg
mov
ret
cmc
or
imul
into
ds
mov
xchg
add
loopne
cmps
psubusw
jp
in
rcr
ja
dec
gs
nop
in
mov
dec
out
xor
rol
shl
dec
pop
inc
xchg
retf
mov
clc
xchg
js
(bad)
out
mov
mov
push
jae
and
and
mov
aaa
xor
mov
mov
push
movs
test
push
(bad)
iret
jo
cwde
sub
sbb
idiv
adc
inc
mov
mov
pop
mov
jmp
loop
or
mov
out
add
lds
add
fld
mov
jo
aas
mov
fimul
lea
xchg
pop
mov
repz
sub
ins
dec
adc
test
nop
ins
rol
add
jns
stos
jns
push
into
push
ror
mov
pop
add
imul
add
and
mov
inc
nop
jns
xchg
jb
lods
xchg
adc
popf
pop
inc
cld
push
mov
ret
imul
dec
(bad)
jg
push
stos
inc
test
mov
fidivr
fidivr
adc
ret
inc
scas
int
sbb
jbe
inc
test
cmp
xchg
es
or
jo
add
adc
or
xchg
fild
aam
out
and
and
sahf
enter
adc
pop
movs
mov
inc
adc
pop
pop
cmp
xor
outs
loope
jnp
push
xchg
movs
mov
or
mov
jne
sbb
cmp
hlt
jb
mov
sub
call
xor
jmp
pop
adc
(bad)
dec
jp
adc
in
cmp
pop
xchg
push
lds
lahf
fisubr
pop
mov
inc
call
ffreep
sbb
jle
ds
adc
sahf
imul
pop
out
sub
gs
loop
ss
sahf
int
and
cli
jb
and
cs
das
ret
or
cmp
jl
xchg
jbe
retf
mov
xchg
outs
dec
xchg
adc
mov
(bad)
pop
out
pop
pusha
dec
(bad)
hlt
call
aaa
xor
jmp
mov
xor
repnz
dec
dec
pop
push
ins
outs
test
fidiv
mov
mov
(bad)
pop
xchg
imul
loope
movs
cld
xchg
ja
cmp
jl
mov
test
and
mov
sbb
xchg
fcomp
repz
sbb
scas
jno
dec
jo
add
push
push
inc
mov
mov
cwde
add
sar
rcr
std
out
out
stos
jmp
gs
fimul
sbb
jnp
daa
mov
lods
xchg
out
adc
adc
or
scas
fld
mov
mov
adc
je
cs
adc
add
fistp
cs
jbe
test
mov
test
test
or
inc
lods
pop
inc
xchg
cmovae
sti
es
clc
fsqrt
(bad)
inc
mov
or
xor
inc
arpl
js
pop
outs
into
pop
test
test
jno
sbb
jne
ins
push
xor
icebp
sub
jle
add
lahf
jne
cld
movs
cwde
sub
sub
jne
push
jae
xor
add
mov
call
dec
clc
ins
and
pusha
icebp
mov
push
mov
in
or
push
jne
popf
dec
inc
imul
inc
sbb
int3
pop
fst
or
mov
lahf
or
in
call
and
pop
dec
out
retf
addr16
dec
ret
xchg
xchg
mov
xchg
call
jnp
sbb
dec
movs
inc
cmps
or
test
push
sahf
popf
or
push
mov
xlat
xchg
je
push
cmp
adc
loop
pop
and
not
mov
mov
cwde
stos
sub
call
jne
loope
xor
pushf
jne
jns
fwait
or
vcvtsd2si
pusha
jge
add
loopne
out
dec
aad
sbb
(bad)
popf
cld
xor
cmp
arpl
in
test
pop
inc
jge
bound
sbb
mov
aad
test
shl
lock
dec
cld
sbb
out
fisttp
xor
mov
jmp
repz
lds
pop
pushf
fcom
int3
popa
mov
imul
jmp
pop
mov
iret
mov
jle
xchg
fmulp
es
addr16
inc
mov
and
mov
fsub
cmp
in
add
fistp
loop
fisttp
inc
xor
xchg
or
xor
in
jb
aaa
xchg
rol
ret
sub
enter
sbb
mov
sbb
cwde
test
xchg
xchg
(bad)
cli
int3
inc
pop
dec
adc
outs
ins
lock
retf
repz
mov
inc
inc
mov
(bad)
jg
arpl
stc
retf
xchg
xchg
push
add
sub
ja
test
mov
or
sub
push
in
lea
mov
hlt
stos
loopne
sbb
test
retf
daa
or
sub
inc
nop
mov
add
call
ret
push
adc
sbb
(bad)
rcl
push
push
(bad)
lods
ret
pop
mov
in
rcl
pop
inc
movs
push
inc
jnp
inc
mov
ror
pop
cmc
je
mov
scas
add
daa
sbb
mov
push
and
cwde
xor
enter
dec
and
scas
pop
retf
mov
jmp
xor
(bad)
out
mov
push
xchg
add
or
mov
dec
pop
cmp
lea
daa
adc
gs
add
lods
dec
adc
sar
mov
neg
cmp
pop
jl
ret
lds
daa
pop
call
les
mov
cmps
lahf
test
sbb
push
shl
push
mov
inc
bound
mov
popf
mov
fld
rol
xor
push
mov
mov
gs
cmc
movs
jbe
inc
adc
out
pushf
in
lea
dec
mov
mov
jmp
dec
out
into
outs
fst
(bad)
jmp
mov
shr
sub
out
or
pop
ins
mov
sub
cmp
nop
push
call
add
xchg
outs
arpl
push
xor
(bad)
rcr
push
or
dec
pop
jno
mov
adc
cmp
jae
cmp
mov
lods
pop
mov
cdq
outs
jbe
cli
loope
std
pop
pushf
dec
pop
push
jnp
ret
in
dec
repz
ja
mov
mov
stos
shl
adc
xchg
jge
aaa
(bad)
jb
in
ins
push
les
xor
lods
fldcw
jbe
lods
sti
outs
push
mov
mov
scas
ins
(bad)
xchg
mov
xor
or
pop
cwde
sbb
dec
add
add
add
ja
ins
xlat
hlt
cmc
sbb
push
adc
test
and
adc
ret
(bad)
or
mov
retf
xchg
mov
std
repnz
lods
sbb
mov
add
stos
sbb
inc
mov
push
xchg
cwde
and
test
mov
in
into
or
pop
scas
adc
nop
mov
or
mov
test
fsub
add
ins
xor
mov
iret
push
ss
jl
sbb
mov
or
enter
pop
mov
push
fsubr
mov
fs
xchg
or
jmp
cs
iret
shl
data16
pusha
stc
ss
cmp
jnp
sbb
out
jno
test
jmp
dec
and
(bad)
sub
jo
and
push
movs
(bad)
cmp
sar
inc
and
mov
cmp
mov
xchg
mov
imul
in
cmps
mov
or
jmp
jno
mov
xor
cmp
bound
push
mov
jmp
xchg
ds
xor
fwait
stos
(bad)
rcl
fisttp
arpl
mov
(bad)
mov
aam
cmp
add
cld
sub
(bad)
xchg
mov
js
sti
cmp
pop
jae
adc
jnp
lahf
neg
ficom
mov
popa
and
mov
pop
jns
test
cwde
setne
xchg
dec
mov
mov
push
sar
(bad)
mov
sub
push
cmc
icebp
cmp
and
ins
adc
cbw
(bad)
daa
clc
mov
xchg
pop
sbb
sub
(bad)
xor
ss
jecxz
fisub
arpl
dec
pop
test
jp
cwde
call
icebp
shr
jl
pop
fdivp
addr16
pop
mov
aaa
cmp
adc
or
sub
scas
xlat
js
mov
mov
jle
adc
imul
mov
(bad)
fist
dec
sbb
fwait
cld
push
in
rcl
pop
add
mov
xlat
popa
mov
mov
dec
(bad)
out
call
sub
push
js
fsub
daa
or
shl
(bad)
sub
scas
fwait
jae
shl
xchg
push
lods
test
dec
mov
test
pop
fst
and
sub
adc
inc
repnz
pusha
sub
xor
pop
retf
sar
retf
les
jo
pop
pop
rcl
ss
jmp
pop
cli
sbb
or
push
fucomip
dec
loop
adc
push
dec
xor
sti
cwde
xchg
cmp
scas
jle
xchg
sub
movs
dec
sub
cli
sub
mov
xchg
sbb
mov
loopne
sbb
fwait
cmp
idiv
mov
arpl
and
adc
popf
test
add
xlat
jg
inc
mov
enter
dec
xchg
add
xchg
add
mov
push
popa
sbb
xchg
cmp
jo
sbb
stc
cli
xchg
sbb
and
and
push
icebp
inc
and
ror
push
dec
sub
xor
cmp
cwde
sbb
xlat
sbb
push
hlt
or
xor
pop
dec
ds
dec
jo
dec
pop
adc
daa
jbe
in
cmp
daa
addr16
pop
jg
pop
and
dec
jecxz
pop
(bad)
std
outs
out
xchg
and
repz
xlat
fldcw
pop
jecxz
cmp
loop
cmp
popf
mov
fisttp
gs
xchg
cli
enter
(bad)
xrelease
push
scas
cs
cmp
mov
push
xchg
test
mov
test
dec
push
scas
and
and
retf
sar
push
mov
and
stc
and
mov
inc
sub
mov
cs
inc
call
pop
test
adc
add
repz
popa
std
clc
xchg
sub
scas
pop
pop
test
mov
fadd
xchg
jg
or
es
inc
test
jno
jmp
popa
mov
inc
inc
in
mov
popa
sbb
adc
pop
imul
inc
iret
(bad)
shl
inc
pop
or
pop
and
mov
std
cmps
retf
push
or
out
pop
inc
jle
in
push
rol
ret
mov
mov
or
sub
or
inc
ds
pop
lea
gs
pop
or
leave
cmp
das
icebp
mov
cmp
jl
mov
mov
lock
loope
(bad)
cmp
xor
in
adc
scas
leave
shr
push
in
in
dec
sub
pop
jp
lahf
stc
daa
jno
aas
rol
jmp
dec
outs
retf
xor
pop
inc
cmovle
xchg
mov
mov
and
int
fadd
ret
mov
mov
addr16
jge
or
pop
fcomp
dec
dec
fwait
xor
lock
jne
shr
pop
cmps
loopne
js
lods
cmps
jnp
daa
xchg
inc
xor
hlt
lods
test
out
xchg
in
push
lea
mov
pushf
cmp
dec
cld
adc
or
fwait
jbe
nop
fimul
mov
aas
adc
das
push
mov
and
sbb
fld
or
push
pushf
or
in
iret
cmp
cmp
lock
addr16
mov
xor
cwde
jae
sbb
lea
mov
mov
test
das
mov
outs
and
stos
pop
and
dec
daa
or
ret
dec
inc
mov
outs
lahf
xor
mov
fwait
mov
sub
add
inc
arpl
movs
je
sbb
call
dec
pop
das
test
and
das
sub
call
push
adc
sub
cmp
pusha
add
aad
es
push
daa
dec
adc
mov
and
in
inc
jp
popf
pop
or
mov
add
out
mov
add
out
jecxz
fdivr
cs
add
ror
cwde
dec
mov
leave
mov
aad
js
in
das
mov
and
ret
pusha
add
cs
test
push
out
fwait
iret
pop
adc
ret
jo
add
xchg
push
jmp
xchg
mov
mov
sar
(bad)
or
push
xchg
jl
sbb
inc
lahf
adc
sbb
in
rol
dec
jb
sbb
out
nop
xchg
mov
inc
mov
push
test
xchg
or
adc
mov
mov
and
adc
inc
adc
mov
ds
pop
ins
jns
jno
lds
dec
fcomp
xor
mov
in
enter
mov
aaa
fadd
dec
pusha
cli
and
ss
mov
xor
into
xor
jbe
cmps
ror
fnstenv
repz
jmp
pop
call
sub
mov
sti
mov
mov
or
and
out
jae
loop
dec
push
das
lds
fild
das
jmp
xor
pop
mov
stos
aad
and
mov
cwde
or
sub
nop
cwde
and
mov
sub
dec
jnp
mov
out
loopne
jae
in
stos
sti
or
addr16
pop
std
gs
ror
mov
add
mov
cmps
popf
add
icebp
jl
sbb
shl
movs
cmp
ss
jmp
or
clc
mov
ja
pusha
in
sbb
mov
mov
and
popf
and
mov
rol
or
sbb
mov
jl
cmp
mov
data16
sbb
mov
imul
push
add
add
fist
jl
mov
aaa
movs
mov
mov
test
imul
dec
mov
cmp
mov
mov
ins
sub
dec
pop
fstp
mov
push
fs
cli
aam
pop
pusha
js
shl
and
je
repz
push
fsub
sub
push
je
dec
aam
call
inc
clc
inc
daa
pop
pop
xchg
cmp
xchg
xor
mov
jecxz
inc
dec
outs
les
add
les
mov
popf
clc
retf
sahf
fwait
call
mov
jmp
loopne
mov
push
(bad)
popf
outs
lahf
or
sbb
loopne
and
push
arpl
pop
mov
inc
and
sti
repnz
cwde
or
pushf
jne
dec
cmp
stos
ret
jb
ror
cmp
in
faddp
mov
imul
movs
ret
adc
jno
scas
mov
xor
lea
or
ss
and
inc
pushf
push
add
pop
jmp
idiv
inc
movs
arpl
sar
cli
mov
call
inc
and
sar
in
into
shl
xor
in
pushf
sub
push
lahf
add
and
push
mov
xchg
jae
std
into
ror
jg
int3
lods
mov
arpl
arpl
xlat
adc
sub
push
cmps
call
dec
out
gs
xchg
(bad)
call
sbb
inc
xchg
mov
xor
loop
(bad)
push
imul
xchg
out
inc
adc
mov
(bad)
lock
sub
ficomp
xchg
pusha
jae
mov
and
dec
lods
dec
lahf
mov
and
sub
jb
push
jg
pop
push
aad
fld
daa
push
mov
xchg
xor
inc
dec
mov
retf
push
hlt
sbb
mov
ret
cmp
xchg
pop
add
dec
(bad)
jb
adc
fs
ret
and
out
mov
mov
adc
(bad)
pop
xchg
stc
pop
ret
mov
sbb
ret
cmp
sti
dec
fstp
push
dec
jo
mov
pushf
mov
iret
push
cli
mov
add
stos
mov
sub
xor
or
mov
mov
dec
or
pop
out
std
xor
inc
sub
in
xchg
sbb
cmc
dec
and
add
xor
push
push
cmps
es
(bad)
mov
and
lock
mov
fcomp
fbstp
add
mov
mov
call
push
cld
sahf
in
or
out
push
dec
scas
dec
sti
or
push
test
xchg
mov
pop
mov
leave
jae
dec
fidivr
mov
int
int
addr16
mov
cmpps
fcom
cmp
add
sub
in
xchg
or
(bad)
ja
add
xor
daa
je
xchg
les
jecxz
fwait
daa
stos
mov
retf
dec
mov
call
(bad)
xor
push
fcmovnbe
add
xor
mov
push
cmp
xchg
imul
jmp
cmp
dec
push
sub
out
jg
pop
mov
add
(bad)
fcomp
inc
adc
mov
sahf
test
pushf
shr
xor
inc
adc
xor
outs
shl
jns
adc
dec
(bad)
mov
xor
fdiv
and
sbb
mov
cmps
sar
push
mov
dec
xor
adc
cwde
int3
pop
test
mov
loope
sub
clc
xchg
ins
lods
sar
xor
cmps
ja
mov
std
int
fwait
(bad)
in
and
mov
jnp
fcom
into
neg
int3
xchg
int3
leave
cmp
jno
test
je
loopne
adc
sbb
and
inc
push
scas
jmp
xchg
in
sub
nop
(bad)
dec
jae
inc
push
mov
pop
sub
ins
pop
dec
ss
pop
cmp
adc
(bad)
jne
das
or
or
outs
push
xchg
ret
xor
mov
test
jl
icebp
pusha
loopne
popa
imul
add
inc
jbe
cld
popf
(bad)
out
jl
or
repz
sub
dec
xor
xor
imul
ins
fcomp
loope
xchg
aaa
add
and
sub
fisubr
or
test
push
nop
ret
arpl
shl
daa
push
xor
adc
dec
mul
or
pop
push
push
ins
cmps
and
(bad)
mov
shl
ret
in
and
pop
push
mov
cmps
sub
mov
std
and
cmp
mov
ins
cmp
push
jmp
and
(bad)
xor
xchg
jnp
add
mov
pop
sti
outs
or
mov
fxch
mov
jmp
sub
fsub
sbb
loope
inc
out
and
sbb
std
out
xor
inc
pushf
fld
mov
pop
mov
shr
gs
movs
xchg
pop
movs
daa
cmp
xchg
mov
xor
fcomp
and
jno
movs
add
inc
retf
sub
cmps
jle
loopne
dec
or
add
clc
sbb
stos
pop
shr
lods
add
mov
mov
cmp
sbb
cmp
mov
aas
in
jne
icebp
pop
xchg
pop
xchg
xchg
sub
in
pop
sub
or
cs
jbe
fwait
loopne
popf
xor
out
inc
adc
xchg
fs
pushf
(bad)
adc
fidiv
or
pop
dec
movs
fs
xor
mov
fwait
sbb
(bad)
xor
das
pop
sub
outs
test
test
xor
cmp
ret
test
enter
mov
jns
fdivr
je
out
xchg
xchg
and
add
lahf
fld
(bad)
sbb
in
enter
sbb
pop
in
repnz
test
xor
imul
adc
pop
push
(bad)
sbb
into
(bad)
outs
or
push
out
ror
mov
clc
movs
(bad)
sbb
hlt
ins
jae
cld
pop
xor
jle
lahf
scas
pop
cdq
push
mov
test
jbe
stc
sbb
outs
aam
pand
(bad)
retf
jo
outs
mov
dec
pushf
stos
rcr
mov
mov
mul
hlt
pop
bound
dec
push
lock
jne
add
(bad)
les
xor
mov
dec
rol
(bad)
cmp
out
mov
ds
jnp
sub
in
cs
push
loope
mov
mov
cmp
les
(bad)
inc
cmp
and
adc
xor
and
jmp
sbb
jmp
addr16
push
dec
pop
mov
mov
frstor
inc
mov
ror
or
add
fld
and
aad
xchg
mov
rcl
test
sub
(bad)
and
sub
into
mov
push
scas
jle
xor
or
std
sub
mov
dec
mov
stos
(bad)
ficom
test
ret
jp
fs
stc
or
mov
jnp
push
adc
popf
xor
or
call
fdiv
mov
jb
xor
push
mov
sub
ins
pusha
jp
imul
ins
popf
sahf
or
mov
lods
push
data16
jns
add
bound
stos
xchg
dec
jns
pop
add
rol
inc
adc
and
sbb
dec
and
loop
mov
lahf
je
in
mov
xor
inc
dec
stos
cmc
cmp
sub
popa
push
push
out
ficom
xchg
pop
pop
pusha
cmp
sbb
scas
dec
fmulp
xor
xchg
dec
adc
(bad)
ins
pop
sub
or
repz
pushf
fstp
das
ds
or
pop
sti
push
cmp
sbb
cmp
dec
mov
fsub
popa
aas
pop
inc
loope
retf
int
(bad)
(bad)
jbe
repz
outs
stc
xchg
data16
pushf
lahf
adc
mov
lods
pop
jno
retf
je
scas
cli
jle
sahf
cmp
out
mov
sti
repnz
clc
rol
cmc
mov
dec
push
dec
retf
cmps
loop
and
xor
jp
loope
imul
cmps
shr
mov
sub
das
call
xchg
cld
mov
or
inc
mov
jae
inc
ja
xlat
jo
les
jns
mov
push
fwait
rcl
mov
pop
out
jl
inc
or
and
je
xchg
fwait
sub
cmp
fistp
loop
sbb
imul
push
daa
add
ins
add
pop
add
stos
in
repnz
psubd
cs
out
mov
repz
outs
lods
mov
inc
jl
sbb
(bad)
stc
cwde
cmp
ret
xor
dec
cmp
adc
stc
repnz
inc
test
push
test
cmp
cmp
in
push
sub
inc
leave
hlt
test
stos
loopne
loop
push
mov
movs
lods
ds
mov
push
sbb
sbb
ror
int3
xchg
push
sub
rcr
pop
add
fisttp
push
sub
sbb
dec
loope
add
and
mov
push
xor
aad
sti
xchg
std
and
gs
inc
inc
gs
lahf
repz
xchg
dec
xchg
aam
pop
add
dec
and
mov
lods
jae
pop
mov
dec
mov
mov
dec
push
out
pop
and
xor
sub
hlt
(bad)
std
adc
add
sbb
aad
ss
mov
nop
jle
cwde
sbb
inc
pop
push
lods
inc
aad
mov
test
add
mov
adc
cli
sti
lods
(bad)
xchg
xor
xchg
cwde
mov
(bad)
in
pop
cs
stos
fnstenv
dec
movs
stos
aam
clc
popa
sbb
or
cld
jne
xchg
mov
inc
je
mov
push
push
lahf
and
icebp
into
out
dec
dec
pop
in
pop
or
mov
xor
je
xchg
xchg
adc
fsub
jae
or
dec
jmp
cwde
mov
mov
sub
add
push
cmp
push
cs
in
fimul
in
jecxz
mov
test
addr16
cmp
mov
clc
mov
or
dec
or
bnd
sub
inc
nop
cpuid
adc
lahf
add
loopne
add
mov
loopne
mov
jae
dec
lods
repnz
sbb
push
cdq
adc
mov
jmp
mov
mov
daa
jnp
adc
jl
wbinvd
sub
inc
or
fisttp
cmp
rol
push
push
stc
or
push
mov
jmp
jb
retf
pop
das
frstor
lock
push
and
or
rcl
fnsave
mov
lds
out
mov
push
mov
mov
sbb
add
xor
mov
mov
outs
mov
in
imul
cmp
dec
xlat
xchg
inc
fwait
push
cld
or
jmp
inc
mov
mov
imul
and
or
xchg
inc
sub
or
in
or
retf
push
push
rcl
xlat
retf
aaa
das
fimul
sub
movs
pop
cmp
in
(bad)
and
jmp
cmp
sbb
sbb
mov
or
aaa
out
sbb
mov
or
xor
push
data16
pop
jb
sti
in
sub
jmp
inc
xor
pop
inc
mov
and
sub
push
in
dec
ins
mov
cli
sub
cmps
jl
push
or
mov
add
cmp
mov
fbstp
dec
xchg
mov
mov
ins
jmp
adc
mov
shl
add
xor
fdiv
push
inc
inc
icebp
stc
sbb
(bad)
out
pop
dec
or
dec
imul
mov
data16
in
popf
pop
jne
jp
push
clc
out
mov
xor
lods
js
mov
pop
ja
je
cwde
pop
int
push
lock
jp
dec
dec
add
mov
movs
pop
or
pop
adc
push
xor
sbb
mov
lods
(bad)
shr
addr16
in
or
jp
dec
lahf
popf
adc
or
inc
loope
sub
jp
sar
mov
lds
lods
out
push
pop
jns
mov
pop
stc
dec
outs
push
jo
(bad)
push
xchg
lock
inc
jns
adc
ins
mov
pop
mov
idiv
(bad)
push
addr16
push
lock
sub
xor
jb
inc
or
mov
aaa
leave
dec
les
push
mov
inc
mov
mov
in
loope
xchg
sub
xchg
pop
sbb
or
jge
arpl
push
xchg
enter
add
popa
xchg
out
sbb
inc
into
pop
mov
outs
aam
mov
sub
out
int3
daa
mov
call
cdq
fldcw
bnd
mov
inc
inc
cmp
xor
shr
push
ret
push
mov
mov
pop
in
lods
fiadd
ja
cmp
pop
mov
outs
fs
xchg
retf
les
pushf
stos
fwait
fs
imul
inc
sahf
mov
or
in
pop
mov
call
arpl
loope
pop
aad
push
jecxz
out
call
scas
push
push
ror
clc
jo
sti
push
stos
fdivr
add
test
mov
jecxz
cli
sub
pusha
xlat
mov
pop
bound
icebp
jl
(bad)
jo
pop
loopne
enter
fs
push
in
cmp
aaa
lahf
js
popf
sub
adc
frstor
ins
scas
lds
and
pop
iret
pop
lock
sub
sub
ret
inc
lds
pop
mov
mov
mov
cmps
retf
je
shl
push
pop
xchg
aad
add
ret
sub
sbb
int
sbb
or
loope
test
jbe
addr16
movs
or
or
das
mov
fsubr
mov
int3
pop
inc
ins
fld
loopne
gs
fadd
dec
sub
addr16
mov
cmps
mov
les
xchg
sbb
inc
adc
inc
jg
outs
rcr
jne
add
test
inc
inc
mov
pop
or
cmps
pop
stos
xchg
adc
cmp
add
xor
pop
cmps
imul
call
cmp
js
outs
clc
mov
jecxz
xchg
fld
mov
fistp
not
call
jp
ret
pop
cmp
lods
jo
xor
std
xchg
rol
mov
mov
xchg
xchg
out
add
cmps
push
bound
out
out
mov
xchg
jnp
and
scas
aam
imul
sbb
sub
mov
loope
cmp
mov
and
mov
shr
xor
add
or
push
cmp
fucom
iret
mov
fld
jp
lahf
test
lds
mov
xchg
imul
movs
mov
jl
sbb
cmps
jmp
loop
push
mov
sbb
cmps
mov
mov
shl
or
ins
mov
adc
push
add
mov
(bad)
xchg
cmp
mov
sub
ins
cmps
cmp
sub
or
sub
adc
div
add
imul
push
or
outs
test
pop
jmp
xchg
ret
(bad)
jg
stos
mov
cmc
adc
dec
mov
(bad)
movs
mul
mov
or
adc
add
cli
rcr
dec
neg
mov
xchg
nop
add
sub
pop
gs
in
aam
(bad)
jmp
adc
fst
pop
mov
call
test
sub
(bad)
push
fcmovnb
out
and
clc
push
jmp
ins
scas
cmp
fbstp
jb
pop
arpl
pop
push
sti
shl
out
fcom
mov
inc
adc
pushf
jle
inc
js
aas
stc
jle
jae
movs
xor
shl
out
push
cdq
lods
int
rcl
test
lahf
sbb
call
pop
fwait
dec
pop
scas
jb
jbe
and
xor
add
hlt
mov
aas
xor
mov
xchg
and
cmc
sbb
lea
mov
stos
nop
iret
jg
stos
cmp
int
sub
jmp
repz
repnz
mov
or
or
nop
jmp
hlt
test
sbb
jmp
xor
loope
mov
xchg
addr16
jge
ja
aas
cmc
cmc
sbb
jg
inc
nop
lds
or
jns
cmp
ffree
xchg
out
or
add
jo
xor
lods
push
or
test
(bad)
xchg
ja
mov
pop
and
clc
pop
sbb
pop
pop
jp
pop
adc
xor
push
sub
pop
jno
ret
shr
mov
or
push
pushw
call
sahf
(bad)
out
data16
mov
mov
and
out
stos
and
rol
stos
jg
outs
in
loop
pop
fadd
test
out
jo
dec
and
xchg
xchg
ret
hlt
(bad)
pop
daa
(bad)
dec
into
sub
mov
and
mov
loop
in
(bad)
jmp
xor
stos
cmp
and
xchg
jno
mov
jmp
adc
and
dec
pop
xchg
in
cli
(bad)
xor
fdiv
xchg
outs
cs
ja
inc
ins
push
into
adc
sub
push
jmp
dec
inc
sub
loop
mov
imul
call
rol
jno
mov
fxtract
aas
jl
dec
or
or
mov
out
out
sar
mov
(bad)
out
push
pusha
mov
nop
pop
sbb
sbb
mov
cwde
ss
dec
and
add
sbb
cmp
dec
in
and
pop
inc
fisttp
add
aaa
ds
pop
push
out
cmps
cmc
cld
push
sbb
pusha
popf
adc
cmp
lods
sub
stos
sub
outs
je
movs
scas
retf
lods
sbb
cmps
outs
aaa
push
imul
push
push
test
or
punpckhwd
aaa
pop
push
xchg
xor
jne
or
call
cmp
repz
shl
and
pusha
mov
jg
pop
stc
jl
cwde
fwait
mov
shr
fisttp
cmps
push
faddp
jno
rdmsr
daa
jmp
and
js
xor
in
jnp
lds
sbb
loop
dec
sub
jmp
mov
(bad)
imul
jmp
adc
add
mov
add
mov
enter
dec
scas
call
adc
lods
add
outs
sub
movs
popa
jmp
daa
ror
es
jne
or
cli
xchg
popa
stos
mov
mov
cli
or
gs
cwde
jl
pusha
push
adc
clc
aaa
cmps
sar
dec
pusha
rcl
xor
mov
jo
adc
loop
outs
xchg
movs
pop
push
in
das
in
sahf
pop
in
xchg
sbb
jle
in
add
(bad)
(bad)
xor
pop
js
repz
dec
and
cmp
sbb
pop
jo
xchg
(bad)
dec
(bad)
adc
push
(bad)
fsubr
sub
push
or
jnp
mov
arpl
ficomp
cmp
or
cld
sbb
icebp
inc
sbb
lods
adc
sub
(bad)
cmps
iret
xor
ret
xor
cs
aam
push
(bad)
sbb
cmp
mov
out
ins
out
xchg
fild
(bad)
mov
xchg
lock
pop
scas
push
sbb
ret
dec
cmp
adc
push
into
(bad)
cdq
cmp
sbb
dec
js
in
cs
push
in
xchg
push
popf
retf
xchg
pop
imul
rcl
mov
outs
lea
or
ss
pop
or
xlat
pop
jle
or
in
aad
(bad)
adc
ret
rol
mov
mov
xor
sbb
dec
cmc
loop
add
enter
xlat
aas
ins
out
loopne
add
inc
sbb
out
pop
movs
adc
xchg
std
retf
mov
push
ins
jp
aad
or
xchg
xchg
das
jecxz
jns
dec
inc
bound
jl
pop
nop
stc
or
fwait
les
inc
fdiv
mov
inc
mov
shl
inc
mov
xchg
outs
pop
in
pop
(bad)
ss
pop
out
mov
loop
(bad)
and
mov
fbld
xchg
lods
and
sbb
xor
sbb
cdq
xchg
adc
cli
das
cmp
cmp
sub
mov
sbb
movs
pop
dec
es
dec
cmp
jp
mov
sahf
mov
hlt
adc
mov
mov
popf
mov
push
ins
stos
fwait
xor
loop
nop
add
shr
add
loop
xchg
pusha
loop
inc
lds
pop
out
retf
mov
test
push
cmp
hlt
aam
(bad)
sar
pop
push
cmp
push
test
sbb
dec
mov
rol
pop
push
rcl
xchg
pusha
adc
or
mov
adc
sar
mov
pop
cs
daa
cmp
loopne
test
sti
addr16
out
icebp
inc
test
les
cmps
adc
call
ins
inc
cmps
lahf
ins
mov
in
xor
js
jge
dec
out
xor
dec
sub
out
loope
cwde
xor
shl
or
pop
sub
daa
sbb
pop
mov
and
test
mov
imul
pop
enter
mov
and
lock
dec
das
cmps
(bad)
cmp
cmps
mov
test
jecxz
idiv
add
mov
stos
pop
or
das
cmp
scas
adc
loope
(bad)
aas
adc
iret
cmp
mov
xor
push
jmp
pop
sahf
adc
addr16
and
daa
xor
in
pop
shl
ret
fdivrp
push
mov
xchg
mov
inc
inc
push
arpl
xchg
push
jg
jae
ins
nop
repz
adc
pop
mov
ret
jno
(bad)
push
(bad)
not
cmps
(bad)
and
push
pop
(bad)
xor
das
inc
sbb
stos
xor
fnsave
and
ja
sub
ins
push
test
mov
and
out
shl
xor
pop
loopne
sbb
push
xchg
or
jbe
sub
and
mov
test
inc
pop
cmp
fdivr
mov
rcr
pop
icebp
pop
add
repnz
sahf
push
loope
aad
adc
pop
pusha
xor
sti
pusha
or
and
rcr
mov
add
fcmovu
(bad)
faddp
out
popf
jl
xor
retf
inc
in
dec
pop
retf
sahf
dec
xor
cmp
arpl
mov
mov
push
scas
and
mov
ja
push
push
pop
sti
div
stc
pop
inc
out
dec
mov
stos
and
aad
mov
add
push
mul
mov
out
sbb
push
(bad)
xchg
sub
mov
xchg
jns
mov
ficom
ins
or
inc
or
dec
stos
push
imul
div
mov
sti
mov
sub
mov
std
sub
dec
out
rcl
out
into
clc
ficom
sub
mov
sbb
das
or
ret
test
std
dec
aad
pop
cmp
and
pop
jmp
xchg
adc
cmp
icebp
sbb
xchg
pop
fnstsw
inc
shl
add
jmp
mov
inc
sub
jns
shl
out
push
cli
adc
adc
test
and
ss
cmp
xchg
and
push
leave
push
mov
in
pusha
pop
out
push
and
xchg
frstor
and
xor
rcr
mov
sub
pop
sub
fdivr
pop
xor
cs
test
jmp
push
test
call
lock
and
popf
mov
jae
fwait
out
fs
or
ds
mov
dec
push
icebp
sub
sbb
hlt
cmp
inc
sbb
test
outs
movs
ror
adc
frstor
shr
mov
fdivr
nop
push
lahf
and
out
xor
xor
into
pop
xor
mov
aaa
cmp
adc
stos
mov
and
adc
rcl
mov
or
lods
mov
and
cmps
push
loopne
jl
daa
sbb
pop
sahf
test
cmc
push
add
jbe
sbb
pushf
jae
clc
jo
add
imul
mov
sar
xchg
test
(bad)
cdq
scas
push
xor
repz
loopne
or
mov
mov
fdiv
retf
cmp
shr
in
mov
aad
out
sub
imul
call
aam
test
call
add
addr16
imul
fnstcw
outs
sahf
aas
es
xor
or
push
cld
loope
inc
(bad)
fnsave
pop
add
push
in
push
pop
fisubr
arpl
pop
mov
pop
xchg
push
sub
and
loopne
int3
test
out
mov
std
icebp
push
jbe
mov
dec
mov
scas
loopne
movs
cmp
xor
push
cmp
xchg
mov
add
push
ja
cmp
xchg
xchg
std
mov
adc
int
in
lods
add
mov
and
daa
fisttp
cmp
sub
xor
loop
inc
mov
and
and
jne
scas
out
retf
inc
pop
pop
retfw
popf
inc
pushf
mov
sbb
jns
dec
push
xor
push
sub
mov
daa
or
dec
popf
xor
(bad)
stc
xor
fsubr
ss
(bad)
fld
sbb
or
adc
inc
dec
pop
aad
outs
mov
in
data16
jae
xrelease
(bad)
add
or
out
sti
cmp
inc
call
xchg
in
mov
cld
pop
xlat
push
mov
rcr
cs
mov
(bad)
(bad)
fbld
jb
iret
ret
shr
pop
imul
sub
sub
je
shl
xchg
xor
mov
gs
enter
loop
cmps
gs
mov
xchg
sbb
int3
mov
cwde
sbb
arpl
fs
sbb
ja
or
fnsave
pop
scas
jno
cwde
jg
out
imul
mov
inc
jge
pusha
ja
pop
xor
inc
sub
sbb
sbb
dec
test
mov
mov
nop
sub
mov
sbb
jo
hlt
adc
mov
mov
xor
lahf
cmp
adc
xchg
loop
jecxz
inc
pop
or
xor
retf
sbb
rcl
sub
sahf
not
mov
mov
int3
mov
xor
stos
retf
jno
push
lods
rol
and
jmp
test
xor
test
fisub
mov
rcr
scas
ins
test
je
ror
dec
jl
sub
xchg
pop
pop
mov
icebp
movs
ret
movs
aas
sar
shl
jno
ror
cmp
jbe
int
add
jae
sub
jbe
and
out
daa
out
stc
mov
aam
dec
dec
dec
push
xchg
ret
mov
shl
outs
xor
mov
fild
add
sbb
(bad)
fdivr
jmp
mov
adc
aaa
arpl
aaa
mov
out
pop
push
iret
ror
call
popf
jmp
int3
adc
dec
jecxz
test
shr
pop
hlt
lods
jnp
sub
lods
mov
jge
sub
and
fidivr
int
not
push
cmp
push
mov
adc
push
inc
out
mov
mov
add
xchg
dec
outs
(bad)
leave
inc
pop
shr
inc
es
sub
cmps
pop
sbb
adc
aas
fistp
aam
dec
inc
data16
jbe
imul
jbe
dec
out
sub
imul
sub
adc
scas
retf
jmp
jae
lahf
mov
mov
inc
ffree
jl
aaa
in
xchg
mov
push
add
shr
pop
push
je
call
in
add
xchg
xor
dec
(bad)
jmp
mov
push
shl
scas
test
mov
popf
bound
lods
pop
sti
hlt
jnp
(bad)
cmc
movs
push
pop
jo
retf
and
mov
push
arpl
sbb
scas
cmps
test
adc
out
pop
pop
pop
and
cmp
cmp
je
push
sub
and
stos
xchg
xchg
mov
jae
outs
cmp
xor
outs
xlat
(bad)
lods
and
pop
mov
clc
and
out
xor
in
adc
adc
inc
lea
mov
pop
add
repz
stos
inc
pop
ds
sahf
xchg
dec
sub
push
adc
add
jno
and
enter
out
(bad)
sub
rcl
xchg
movs
arpl
das
xchg
mov
push
pop
sti
sub
call
ins
and
shr
out
in
pop
jbe
add
xchg
or
mov
ins
cmp
pop
clc
ins
pmulhw
int3
sbb
(bad)
je
and
dec
fcomi
xor
dec
and
imul
adc
push
stos
unpcklps
push
fst
xchg
xlat
push
out
movs
cmp
rcl
sti
mov
push
lahf
or
and
jb
mov
jno
into
cmp
sub
jno
adc
cmp
xchg
dec
mov
push
int
cld
mov
gs
xor
xor
int
pop
and
not
push
jp
dec
cld
push
es
or
add
mov
hlt
out
aad
push
imul
fst
inc
lods
dec
mov
retf
js
mov
pushf
xchg
stos
outs
out
pop
xor
mov
leave
jb
pop
sbb
out
scas
mov
add
mov
pushf
xor
adc
leave
mov
inc
lds
call
cmc
test
movs
(bad)
pop
mov
mov
adc
push
retf
shl
inc
addr16
mov
mov
push
sub
aam
scas
call
inc
push
ficomp
pop
xor
or
jmp
cmp
xor
add
or
xor
movs
adc
pop
fadd
mov
rcr
jl
inc
pop
cld
movs
xor
mov
jecxz
push
daa
sub
pop
jecxz
data16
mov
stos
pop
scas
mov
pusha
lea
mov
mov
iret
pand
and
repnz
mov
popa
mov
call
(bad)
cmp
adc
adc
fadd
sbb
xchg
aad
mov
lahf
mov
(bad)
fisttp
mov
push
out
jo
push
mov
les
push
in
mov
fadd
ficomp
fidivr
mov
sti
jno
cmp
ins
add
mov
dec
sub
dec
pop
xchg
mov
sbb
fmul
inc
shr
cmp
outs
lods
outs
dec
call
cmp
(bad)
retf
lods
pusha
lods
daa
adc
(bad)
mov
or
not
sub
arpl
loopne
call
inc
hlt
jp
mov
add
repz
xlat
jo
dec
mov
push
icebp
sti
(bad)
fcomp
(bad)
pop
adc
dec
icebp
sbb
in
aam
dec
(bad)
push
pop
movs
adc
int3
adc
mov
pop
ret
mov
aad
mov
pop
cmps
aaa
jg
inc
ss
int3
pop
retf
jmp
pop
jl
(bad)
aas
mov
movs
test
xchg
sbb
fnstsw
arpl
xchg
cwde
popa
adc
mov
stos
mov
retf
cmp
and
xchg
fistp
in
ret
pop
sub
xchg
loope
inc
ins
jne
out
cmp
push
mov
stc
dec
nop
stc
pop
ret
icebp
lods
pop
jmp
push
or
out
cmps
push
test
push
push
retf
or
in
add
xchg
imul
bound
andps
pushf
push
retf
lock
cmp
fcomp
xor
pop
mov
sub
inc
std
dec
test
sub
fwait
cmp
sub
test
pop
ins
mov
cmp
cmc
(bad)
cmps
arpl
fld
adc
adc
and
iret
xchg
add
add
xchg
(bad)
sub
mov
test
fcom
sub
out
mov
sbb
dec
(bad)
clc
inc
aam
inc
jb
sbb
aas
xor
mov
in
jmp
in
mov
mov
imul
in
dec
popa
std
and
mov
inc
inc
xlat
popf
js
xor
hlt
addr16
pop
push
dec
xchg
fldcw
mov
lods
jle
push
sbb
cmp
xchg
repz
sub
out
test
pop
mov
pop
fstp
ins
add
daa
sbb
(bad)
dec
sub
xor
xchg
fdivr
shufps
das
movs
popf
mov
into
dec
(bad)
imul
sti
out
xor
test
jp
call
mov
push
jne
pop
mov
mov
jmp
mov
push
inc
add
call
xchg
ja
sub
jmp
pop
mov
or
bound
push
fimul
loopne
(bad)
push
dec
out
add
push
in
sub
dec
(bad)
or
outs
cmps
push
fidivr
sub
les
(bad)
xchg
push
rol
or
popa
xchg
je
ins
or
(bad)
cld
push
movs
mov
fwait
mul
mov
cmp
lahf
xchg
cld
push
out
movs
adc
adc
mov
push
cmp
xor
je
mov
pop
mov
mov
movs
add
cli
cdq
adc
aaa
xor
and
int
retf
ins
jmp
sbb
cmp
pop
mov
cmps
mov
pop
jmp
push
retf
ja
mov
lods
or
shr
(bad)
cli
push
pushf
dec
ins
pop
jne
dec
rcr
lock
add
lea
jmp
mov
inc
rol
aad
out
aaa
ss
xchg
inc
out
push
pusha
jecxz
pop
jge
jmp
mov
imul
adc
adc
test
or
lock
in
and
pop
xchg
xchg
xor
or
xchg
fdivr
dec
and
xor
out
xchg
aam
xchg
xor
and
push
push
repnz
loop
push
mov
mov
cmp
rcr
pop
jb
fldenv
out
les
pop
shl
mov
loope
jecxz
cmp
mov
movs
mov
and
pushf
jge
aas
mov
mov
leave
push
(bad)
pusha
loope
jecxz
je
rcl
push
mov
push
mov
fnstenv
je
push
mov
pop
int3
jmp
sbb
cmp
xchg
sub
fptan
cmp
cmp
pop
aam
cmp
sub
mov
lock
jecxz
dec
lods
mov
and
jbe
inc
in
and
test
int
push
addr16
sub
inc
sbb
cwde
fist
xor
es
in
fstp
jmp
jmp
xchg
jle
out
std
(bad)
lock
mov
nop
call
push
pop
sub
mov
inc
push
pop
adc
cld
inc
mov
push
pushf
sar
xchg
fsubr
mov
aam
jg
xchg
mov
xchg
fwait
out
sbb
retf
mov
retf
and
mov
inc
(bad)
out
dec
push
mov
retf
not
out
sub
inc
mov
add
xchg
add
mov
movs
int3
mov
lea
ret
mov
fdivr
test
icebp
adc
mov
inc
or
fwait
add
mov
es
(bad)
cli
stc
push
stos
inc
test
pushf
xchg
shr
sti
scas
fnstcw
mov
jno
rcl
push
jle
push
push
and
aas
and
stc
in
mov
add
push
xlat
rol
out
shl
xor
adc
pushf
dec
cmps
add
fild
or
aam
fisubr
sub
sbb
add
dec
inc
pusha
iret
mov
repnz
test
xchg
or
lock
xchg
div
sub
test
ss
fsubr
ss
mov
(bad)
hlt
adc
repnz
in
inc
sub
mov
loope
or
mov
add
jnp
jo
push
sub
xor
xlat
mov
sbb
add
mov
dec
sub
jno
mov
in
jge
xor
xor
loop
inc
fsubrp
dec
xor
(bad)
(bad)
lock
xchg
inc
ret
adc
or
scas
xchg
lock
cwde
cmp
sbb
jecxz
ins
call
xchg
and
cli
fsub
inc
test
mov
shl
adc
xor
cmp
adc
cli
mov
sbb
adc
push
loop
pop
cmps
mov
ret
sub
lods
dec
ror
not
cmp
or
out
shr
jge
out
xchg
sbb
push
pop
ja
pop
pop
hlt
xchg
(bad)
loop
xor
call
les
mov
call
dec
sbb
out
ja
dec
sbb
stos
stos
or
stos
push
movs
ret
inc
jp
loopne
pop
mov
sbb
jno
adc
inc
loopne
mov
dec
movs
inc
and
cmp
xor
repz
jl
adc
push
pusha
stos
dec
repz
mov
dec
mov
outs
retf
adc
xor
(bad)
sub
pop
cmp
push
shl
sahf
jns
jb
mov
pop
cmp
adc
outs
test
cmp
mov
(bad)
jp
(bad)
cdq
movs
outs
sbb
jle
popa
out
dec
xor
or
cmp
xor
lods
fst
(bad)
es
out
cmc
retf
jp
and
js
and
pop
mov
fwait
inc
ror
adc
loope
dec
xchg
push
adc
(bad)
not
bnd
out
pop
into
outs
addr16
retf
or
and
dec
cmp
mov
icebp
lds
inc
enter
mov
and
pop
xchg
js
mov
ss
sub
cmps
pop
in
retf
imul
ja
dec
sub
scas
ins
cmp
push
jmp
xor
sub
sahf
push
pop
rcr
or
rcr
or
hlt
mov
dec
dec
add
ds
xor
push
mov
(bad)
cmp
(bad)
xchg
call
idiv
mov
xor
pop
outs
js
clc
add
xor
push
(bad)
or
clc
xor
push
test
retf
and
xor
call
leave
and
adc
loop
cwde
sub
sub
or
mov
xchg
push
sub
out
push
mov
xchg
outs
(bad)
push
ds
imul
fadd
ins
and
gs
mov
int
fstp
repz
add
add
fcomp
pop
mov
dec
and
cld
or
or
push
pop
icebp
dec
out
sub
pusha
sti
or
(bad)
and
mov
push
rcr
mov
mov
(bad)
sbb
out
jmp
and
inc
mov
and
or
inc
xor
fistp
lods
pop
mov
cs
dec
mov
loop
imul
fsub
inc
pop
popf
leave
or
xor
inc
sub
sbb
pop
sub
mov
jnp
retf
std
mov
ds
hlt
jo
inc
stc
fiadd
push
cmp
add
mov
and
dec
nop
mov
adc
cmp
or
scas
in
pop
aaa
inc
out
pop
(bad)
shl
sub
xchg
fsincos
loopne
push
inc
or
(bad)
adc
jnp
jg
mov
mov
fs
loope
xchg
scas
cmps
cwde
(bad)
daa
imul
nop
ret
je
push
and
aaa
imul
cmp
test
ret
sbb
xchg
popf
outs
inc
rol
jbe
xor
shl
xchg
add
in
fld
xor
mov
mov
stos
pushf
lds
(bad)
sub
jmp
jge
sub
or
dec
jge
and
mov
scas
adc
adc
xor
sbb
movs
or
push
fwait
mov
cdq
or
rcl
pop
push
mov
cdq
loopne
pop
adc
cmp
cmp
jno
sub
std
outs
enter
sbb
jbe
push
xchg
dec
outs
cmp
ret
arpl
pushf
fstp
mov
mov
aaa
xchg
sti
push
enter
dec
xchg
cvtdq2ps
or
cmp
into
sub
ret
dec
mov
imul
imul
cmps
(bad)
idiv
inc
inc
cmp
clc
pop
scas
in
retf
xchg
inc
int3
jae
sahf
or
xchg
leave
mov
out
xchg
push
add
mov
inc
jno
and
sbb
leave
mov
or
xchg
lock
test
or
(bad)
pop
and
js
clc
fisttp
and
sub
adc
xchg
mov
fidivr
ins
sub
fs
add
ja
and
dec
pop
call
call
cdq
mov
fnsave
in
ror
fstp
out
addr16
xchg
scas
lock
adc
adc
js
ror
retf
call
and
xchg
jg
add
movs
sub
mov
repnz
les
push
jmp
imul
xor
dec
shl
push
std
inc
test
xor
dec
xor
shr
cmp
adc
sub
cmps
push
icebp
xchg
jne
call
mov
lods
mov
movs
or
gs
sahf
mov
test
push
repz
and
hlt
mov
js
jns
mov
inc
xor
xlat
dec
jb
jbe
cmp
sub
inc
mov
push
sub
sar
jl
ja
or
fldl2e
add
jbe
imul
fs
rcr
stos
xchg
pop
loopne
loopne
movs
test
movs
je
pop
scas
sbb
lock
mov
jge
in
push
movs
sbb
es
xchg
loope
fnstsw
out
lds
int3
jne
ds
enter
cld
std
into
inc
inc
jl
mov
(bad)
out
dec
out
cmps
stc
xchg
xor
adc
push
call
jno
adc
sub
cwde
or
xchg
cmps
jns
adc
das
xchg
adc
int
shl
mov
sbb
shl
push
sbb
test
shl
sbb
imul
retf
xchg
(bad)
mov
retf
inc
rcl
pop
lock
js
inc
dec
xchg
scas
cli
xor
ficomp
repnz
movs
pop
bnd
cmp
or
pop
bound
push
icebp
cs
call
sar
das
xchg
and
mov
lock
hlt
jle
mov
and
pop
dec
or
das
movs
lock
fs
dec
fldcw
clc
mov
xchg
dec
lods
inc
in
je
pop
push
or
inc
mov
into
add
xchg
pusha
mov
test
and
mov
xor
retf
rcr
pop
push
das
(bad)
mov
or
in
aaa
rcr
cmp
and
add
test
xchg
outs
in
push
or
movs
fnsave
xchg
add
dec
sti
sbb
cmp
jo
xor
mov
test
retf
pop
and
mov
or
cmc
aam
cmp
xchg
fucomip
push
das
xor
mov
mov
jle
movs
add
cmps
out
cs
cmp
xlat
dec
sub
pop
stos
or
push
pop
mov
ss
inc
icebp
xchg
clc
lods
xchg
arpl
adc
cmovne
cmps
jp
pop
mov
fmul
scas
ret
and
loop
sub
cmp
cmp
or
add
mov
scas
pop
cmp
and
and
or
mov
adc
popf
sar
and
(bad)
icebp
shl
lahf
mov
rcl
(bad)
loopne
cmp
idiv
sub
fidiv
dec
sbb
adc
fwait
mov
inc
mov
push
pop
(bad)
fcom
out
stc
das
cli
dec
mov
mov
in
adc
stc
jmp
and
mov
pop
push
fild
fistp
loopne
test
(bad)
(bad)
mov
inc
repz
bound
mov
pop
test
cmp
fld
inc
pop
sub
test
clc
rcr
mov
bound
cmp
sbb
xchg
push
aaa
movs
adc
pop
rol
sub
mov
mov
scas
movs
pop
stc
ja
scas
(bad)
xchg
lds
test
out
movs
(bad)
pop
ret
ret
das
retf
sbb
and
out
out
lea
dec
adc
add
mov
or
cmp
dec
imul
(bad)
pop
jmp
sti
fcmovnb
hlt
inc
xchg
jecxz
inc
mov
or
(bad)
cmps
ror
mov
call
mov
test
add
pushf
loop
imul
inc
(bad)
push
xchg
clc
(bad)
popa
push
xlat
out
in
dec
loopne
js
cs
ins
cs
fidiv
sbb
mov
pop
movs
pushf
test
and
es
mov
call
(bad)
std
pop
sbb
pop
js
mov
inc
adc
das
sub
dec
add
sbb
(bad)
cwde
dec
cmp
mov
add
js
pop
add
(bad)
inc
pop
cmp
push
or
cli
cmovbe
in
mov
icebp
std
rcr
stos
call
shr
adc
cdq
push
pop
xor
add
bound
mov
push
xor
movs
imul
cdq
scas
mov
sbb
dec
bound
adc
lds
push
arpl
mov
mov
movs
ret
and
mov
jle
fcomp
cmp
pop
into
rol
jae
(bad)
push
sar
push
mov
mov
addr16
ss
xlat
push
xor
jmp
xor
das
and
test
dec
loop
xchg
imul
sbb
sbb
mov
inc
mov
aam
adc
call
adc
cmp
xchg
pop
pusha
or
call
out
or
add
pop
sti
jecxz
ins
jns
rcr
mov
sbb
push
mov
ja
add
sbb
ror
retf
sbb
xchg
inc
rcl
push
in
ret
sub
or
mov
jecxz
iret
pushf
lock
pop
frstor
shr
(bad)
call
in
pop
sub
xor
sub
call
jne
adc
sub
mov
mov
push
sub
rcr
pop
loopne
call
jl
add
fisub
xchg
movs
movs
inc
sbb
rol
lea
adc
jmp
mov
and
test
cmps
cdq
enter
retf
push
nop
clc
jno
fdiv
mov
adc
cmc
cli
push
push
out
and
xchg
stos
lock
pushf
cwde
shl
mov
scas
mov
inc
aam
inc
fxam
rcl
xor
add
pop
jmp
aam
or
cmp
data16
sbb
pop
enter
shl
movs
aam
inc
das
test
push
ret
dec
mov
popf
push
xchg
mov
fld
mov
(bad)
cmp
xchg
hlt
or
mov
mov
and
push
cdq
(bad)
xor
pop
xor
push
mov
addr16
xchg
jbe
and
jb
jge
sub
popf
inc
adc
xchg
inc
push
cmp
js
sbb
pop
loopne
sbb
jbe
xchg
push
mov
lahf
or
stos
aam
push
cmps
inc
push
enter
faddp
int3
icebp
dec
ror
push
outs
push
inc
cs
mov
dec
and
bound
or
push
mov
std
mov
scas
pop
mov
sub
dec
jae
sub
xor
dec
data16
sbb
jnp
in
int3
sbb
jecxz
mul
pop
cmps
(bad)
pop
jo
sub
push
movs
jno
in
leave
mov
pop
dec
lock
mov
jae
and
sbb
mov
mov
inc
push
jae
mov
xchg
or
lahf
jmp
call
pop
xlat
lock
test
jae
cmp
dec
xor
fmul
in
retf
push
sbb
xchg
es
mov
xchg
mov
cmp
adc
push
dec
jle
mov
xor
or
dec
das
mov
cmp
xor
call
gs
jns
mov
push
mov
arpl
mov
and
jecxz
(bad)
xchg
das
cli
out
xchg
or
inc
or
add
rcl
lods
push
jp
mov
push
movs
fld
jmp
lods
xchg
movs
data16
sbb
xchg
jns
clc
xchg
imul
mov
mov
mov
fcmove
int
sub
inc
jge
xor
mov
adc
and
ja
pop
cmp
cmp
mov
pushf
loop
or
inc
inc
repz
fs
push
mov
js
jl
push
cmc
adc
xor
jo
fcom
jb
ret
mov
daa
test
dec
pop
ja
test
inc
mov
aaa
fsubr
or
and
mov
mov
mov
rol
xchg
mov
test
jno
dec
sub
fidiv
stos
adc
movs
les
es
ret
xchg
call
mov
ins
addr16
jecxz
dec
push
fdivr
std
retf
dec
pop
sbb
ret
sub
add
ror
add
xchg
popf
nop
mov
jb
and
adc
and
jmp
cli
push
fisttp
pop
and
cdq
add
pop
mov
imul
jnp
xor
clc
lea
xchg
ins
pusha
(bad)
cli
xchg
jmp
pop
mov
daa
nop
sub
xor
adc
cmp
mov
imul
mov
and
adc
pop
(bad)
popa
pop
or
ins
jl
push
call
pop
inc
dec
jp
and
pop
jne
mov
jl
dec
mov
js
adc
add
mov
adc
dec
xlat
cwde
cld
lock
dec
add
dec
adc
nop
inc
out
aam
das
inc
pop
add
lock
xor
mov
std
loop
not
ror
dec
retf
xor
sub
xor
push
cmp
push
and
stc
push
xchg
jmp
and
adc
xor
adc
shl
retf
push
out
inc
mov
mov
adc
cmp
or
out
popa
mov
jnp
fiadd
pop
jp
repnz
and
mov
out
scas
cmp
rcl
push
sub
dec
adc
dec
cmp
rcr
dec
movs
adc
sub
inc
adc
pop
mov
dec
dec
(bad)
das
sti
and
mov
mov
xchg
xlat
dec
clc
mov
inc
or
sub
aaa
xor
outs
push
inc
dec
call
pop
stc
and
xchg
addr16
nop
pop
or
push
jg
and
loopne
pop
xor
repz
push
(bad)
hlt
xor
mov
xor
dec
mov
pop
mov
das
sub
or
ss
sub
icebp
mov
jbe
inc
add
ins
or
repnz
xor
fdivr
ins
aas
fs
ret
add
cli
sbb
jne
ret
mov
in
pop
push
shl
arpl
jo
sub
jbe
xor
nop
imul
mov
fiadd
mov
jns
xchg
jb
movs
pop
scas
mov
cs
pop
dec
and
pop
mov
cmps
push
dec
clc
and
mov
push
or
and
dec
inc
jecxz
cmp
mov
add
mov
pop
push
cmps
bound
addr16
rol
sbb
mov
imul
xor
repz
push
retf
sti
mov
xor
mov
retf
fstp
add
fmul
mov
(bad)
hlt
stos
into
pushw
mov
add
jns
pop
sub
push
sub
mov
addr16
adc
mov
scas
das
js
jmp
(bad)
xor
and
sub
in
sbb
jo
sbb
or
pop
pop
dec
adc
pop
test
movs
scas
arpl
loopne
pop
imul
jo
in
inc
cmc
dec
or
jle
mov
inc
cli
jecxz
neg
lds
cmp
aas
inc
retf
stos
push
repz
mov
mov
adc
pushf
push
jbe
adc
jl
inc
adc
fst
mov
dec
ds
and
xchg
das
out
out
and
push
pop
arpl
stos
in
je
cdq
(bad)
in
xchg
push
lahf
xchg
rol
ret
xchg
push
out
das
inc
inc
sar
mov
inc
shl
fcmovne
jle
aaa
imul
mov
cmp
in
sti
hlt
ror
sar
or
mov
mov
mov
loope
add
mov
out
mov
jp
sti
push
fsub
or
push
test
loop
cmp
adc
pop
cld
dec
adc
mov
loopne
xchg
pop
repnz
repnz
fadd
sbb
movs
rcl
pop
sti
leave
fist
(bad)
fdivr
sbb
gs
push
mov
pop
lea
cmp
inc
or
dec
push
(bad)
test
(bad)
xlat
push
cmp
in
xchg
hlt
dec
in
push
cmp
jbe
cmp
test
cmp
xchg
iret
add
ja
fmul
call
pusha
ret
sbb
cmp
inc
fistp
xlat
inc
dec
(bad)
mov
inc
mov
fmul
add
daa
out
push
cmp
pop
scas
pop
cwde
cmp
pop
test
push
fimul
aaa
inc
cmps
pop
sbb
adc
retf
retf
cmps
out
and
cmps
or
stos
fsub
and
pop
and
retf
xor
cs
xor
fcomp
in
mov
pop
xchg
cmps
hlt
mov
dec
lahf
jg
stc
jbe
lahf
mov
push
lods
outs
xchg
fdivr
cdq
ficomp
cwde
cmp
bound
push
xchg
inc
push
mov
jg
adc
lock
sbb
mov
out
cmp
mov
dec
jnp
push
xlat
or
and
adc
adc
mov
mov
or
test
jne
in
xor
les
cmp
add
push
int
and
or
dec
and
pushf
jne
ret
and
push
shl
mov
fwait
shl
mov
sbb
mov
les
jo
stc
cdq
mov
arpl
loop
and
cs
stc
jmp
loopne
rol
push
xor
xor
dec
cmp
pop
frndint
push
or
xor
mov
ror
js
repnz
fsubr
mov
mov
cmp
push
dec
lahf
clc
(bad)
sub
mov
scas
test
xchg
hlt
cdq
adc
push
cmp
xor
jecxz
pop
cwde
outs
mov
push
repz
mov
sahf
sbb
repz
jecxz
iret
or
pop
xchg
jb
call
dec
cmp
jecxz
xchg
pop
jl
mov
cmc
cmps
rcr
xlat
or
lahf
or
inc
lods
data16
div
cmps
xchg
xchg
mov
mov
pop
mov
mov
je
lods
ficom
mov
jmp
arpl
sub
jmp
leave
xor
sbb
aaa
dec
sahf
pop
movs
aaa
xchg
out
outs
(bad)
cmc
hlt
jp
pushf
sti
mov
sub
rcr
mov
imul
imul
aad
cli
adc
push
outs
out
fcom
lock
mov
pop
sbb
out
sar
add
mov
xchg
cmp
jae
retf
mov
je
imul
sbb
push
div
lock
(bad)
fistp
pop
add
push
xchg
dec
mov
popa
sub
add
sub
xchg
pop
scas
mov
inc
push
pop
cmps
xchg
or
fld
fwait
out
cmp
jge
jno
push
pushf
jo
mov
mov
mov
aam
aad
sbb
sub
js
and
mov
js
imul
ins
mov
lds
je
aas
scas
mov
and
inc
xchg
(bad)
cmc
pushf
enter
pop
clc
call
or
jle
das
mov
addr16
mov
inc
adc
pop
sahf
jae
lock
js
xchg
cmp
jno
dec
repz
xchg
adc
sub
aas
aam
push
push
cld
loop
sbb
mov
out
aaa
adc
mov
std
push
(bad)
push
mov
xor
mov
cmp
push
in
rcr
pushf
loop
stos
jo
jmp
push
shl
cmp
sbb
xchg
jne
pop
and
dec
mov
cmp
mov
fldenv
pop
in
sub
retf
jae
sbb
repz
(bad)
or
cdq
push
jl
pop
mov
jne
and
addr16
les
mov
sub
call
pop
pushf
loopne
pop
jnp
mov
xchg
pop
cli
lock
jnp
repnz
fs
popa
bnd
dec
hlt
jg
cld
and
fisttp
sbb
icebp
and
(bad)
mov
pusha
shr
add
sub
inc
adc
mov
xor
loop
mov
sub
add
stc
test
jle
xor
mov
jns
popa
push
mov
or
cdq
(bad)
hlt
jp
js
jmp
push
inc
pop
and
test
loope
shl
imul
cld
mov
jmp
cmp
scas
shl
ret
cld
shr
pop
mov
dec
push
mov
ja
out
(bad)
jmp
xchg
pop
pop
inc
push
les
jecxz
addr16
lea
or
cmp
dec
sub
das
pop
add
rcr
xor
add
sub
sbb
(bad)
and
inc
sub
scas
cmp
mov
adc
enter
mov
sbb
and
mov
ret
mov
pusha
push
xor
add
pusha
(bad)
test
add
hlt
or
std
fmul
jb
add
sti
push
retf
push
xchg
dec
sub
clc
fcom
sbb
pushf
add
rcr
cmps
fimul
cmps
mov
fldcw
xchg
xchg
add
sbb
mov
sbb
push
mov
and
fs
test
mov
pop
add
xchg
in
stos
sbb
cli
lahf
pop
daa
mov
ret
sbb
(bad)
mov
(bad)
push
adc
jno
xchg
mov
fdivr
(bad)
xchg
fsubr
sub
dec
push
outs
fs
jae
push
inc
es
sub
mov
sub
adc
out
inc
add
mov
mov
jecxz
jns
and
xor
pop
into
xor
mov
inc
mov
int3
pushf
aaa
test
jb
mov
jp
sar
push
mov
fs
cs
in
test
mov
stos
outs
test
lock
neg
sub
cmp
mov
adc
movs
adc
inc
sbb
sub
aaa
inc
sub
or
add
(bad)
pop
push
test
scas
test
jae
call
pop
je
jmp
fisubr
or
inc
cmp
scas
adc
test
(bad)
clc
cs
sbb
xor
cmp
mov
xchg
adc
call
mov
mov
scas
or
mov
xchg
dec
sbb
not
or
clc
in
cmp
arpl
(bad)
ins
mov
je
jg
fiadd
inc
test
ja
popf
push
shl
movs
rcr
int3
inc
push
mov
jl
or
dec
jl
xlat
lods
mov
mov
aad
stos
outs
cmc
sbb
pop
nop
inc
adc
pusha
(bad)
js
or
call
std
dec
jne
ret
sbb
xchg
out
adc
shr
in
test
std
sub
test
cmps
retf
out
leave
inc
sub
arpl
lods
mov
add
in
push
pop
das
aad
pop
bound
adc
adc
cmp
in
add
jo
lea
push
cmps
dec
jb
ret
rol
stos
aam
jecxz
outs
dec
mov
(bad)
cmp
mov
lods
push
das
nop
push
xor
sub
enter
int3
add
mov
xchg
cmp
mov
into
call
rcr
shl
pop
cmp
test
rol
sahf
shl
fdiv
std
loop
push
es
ja
test
mov
and
jl
pop
pop
jae
fmulp
push
aam
(bad)
or
loopne
sub
jb
dec
add
add
push
rcl
(bad)
and
into
jecxz
xor
adc
pop
jns
add
outs
cmp
clc
mov
sti
(bad)
daa
cmp
out
and
add
dec
push
je
iret
out
adc
and
jmp
int3
repnz
aad
mov
(bad)
mov
pop
mov
and
mov
cmps
mov
xchg
pop
or
pop
sar
or
lods
cmp
data16
or
mov
ins
adc
mov
mov
push
dec
pop
push
pop
sahf
adc
pop
mov
inc
cld
(bad)
push
add
call
inc
jne
pop
inc
jnp
call
push
inc
call
fwait
sub
stc
add
xchg
lods
xchg
hlt
std
mov
xchg
(bad)
and
aam
pop
pop
lods
shl
pop
ret
popf
jmp
test
and
add
cmps
ins
and
and
cmps
and
adc
aam
imul
cli
(bad)
leave
rcr
xchg
and
cwde
(bad)
xor
inc
scas
mov
(bad)
fdiv
stc
mov
(bad)
enter
add
movs
fwait
ja
or
sbb
in
daa
cmps
sub
mov
fsub
loop
retf
ins
pusha
mov
arpl
fild
fsub
in
push
push
jnp
stos
fwait
arpl
jo
push
shr
pop
jmp
mov
mov
mov
inc
and
push
(bad)
rcr
xchg
sub
xlat
jmp
shl
inc
cmp
fnstsw
ins
or
push
inc
push
mov
xor
cmc
adc
push
jb
out
jmp
(bad)
fsub
jl
in
push
xor
and
add
or
mov
sbb
cdq
pop
pop
push
sub
leave
scas
outs
xor
ja
add
test
pop
dec
fwait
and
std
addr16
add
or
xchg
pop
push
mov
call
cs
das
dec
icebp
rcl
mov
jg
dec
mov
sar
test
xor
(bad)
stos
push
and
pop
xchg
dec
std
push
adc
cdq
and
ds
cwde
add
aas
aaa
inc
je
scas
or
pop
add
das
xor
in
jb
cmp
shr
ja
rep
popf
push
jg
xor
xchg
adc
ja
(bad)
(bad)
cmp
inc
inc
inc
out
inc
out
imul
sbb
mov
xlat
test
xor
or
mov
dec
(bad)
or
inc
adc
push
mov
das
dec
sub
or
je
push
sbb
jge
jp
jo
mov
leave
(bad)
adc
ins
pop
call
cs
push
out
mov
test
cmc
or
and
xor
lock
cmp
mov
adc
inc
lock
jb
js
dec
jle
jne
fs
fmul
(bad)
fst
sub
mov
idiv
push
sti
popa
ss
xor
jmp
add
in
jmp
mov
das
jo
(bad)
mov
rcr
sar
sub
adc
fstp
enter
mov
cli
dec
dec
mov
add
cwde
adc
pop
addr16
ins
jl
pop
mov
pusha
out
add
ss
(bad)
iret
idiv
or
idiv
xor
mov
ss
or
inc
mov
or
sub
repz
rcl
push
inc
mov
jo
(bad)
mov
sub
and
add
mov
cld
push
pusha
idiv
outs
popf
or
and
xchg
mov
pop
inc
dec
or
(bad)
std
pop
lods
daa
neg
cmp
movs
lock
push
xchg
xor
sti
(bad)
dec
xchg
fadd
and
mov
ret
add
and
mov
xchg
add
into
out
bound
nop
aad
ret
mov
mov
shr
iret
adc
shl
or
jno
cmc
push
lea
pop
ror
sub
mov
or
cmp
(bad)
and
out
les
adc
fisub
and
int
add
xor
xor
push
jns
xchg
cli
mov
xor
inc
cmc
add
and
xchg
and
xchg
cmc
in
fwait
add
mov
fild
retf
push
dec
or
inc
or
xchg
in
(bad)
jl
mov
repz
pushf
pop
cdq
mov
fidivr
mov
pop
addr16
mov
or
call
jmp
mov
stos
jne
mov
add
imul
push
fxch
lods
fdiv
cmc
into
sti
loopne
sbb
mov
xchg
(bad)
jmp
lock
out
mov
add
inc
or
sub
xchg
xchg
scas
fs
mov
mov
jnp
mov
fdiv
and
cmp
js
add
pop
dec
xor
int3
add
inc
sub
sbb
sbb
or
xchg
and
xchg
xor
int
std
pop
sbb
in
xchg
outs
sar
sbb
cs
popa
out
jnp
mov
rcl
push
dec
cwde
lods
and
xlat
mov
xchg
push
xchg
movs
lods
jne
lea
pop
lock
inc
(bad)
std
jo
mov
aad
fcom
int3
sub
in
icebp
xchg
mov
add
dec
inc
mov
jge
adc
adc
adc
jmp
inc
shr
or
jno
pop
fistp
mov
pop
sbb
stos
push
fs
or
retfw
adc
mov
lods
lds
mov
jge
sub
sub
out
into
push
mov
push
cdq
out
mov
xor
int
retf
jno
js
or
pop
fild
inc
aas
in
cli
pop
jns
pusha
mov
std
mov
pop
inc
xchg
cmp
add
(bad)
ins
leave
push
ds
dec
or
xor
or
push
test
xor
pushf
in
not
loop
icebp
xlat
ins
iret
pop
inc
out
pushf
ins
out
movs
mov
or
mov
fisttp
pop
adc
jbe
fs
lods
pusha
popf
xor
and
xor
xchg
cmovp
mov
jnp
or
jb
cmps
fld
xor
test
mov
inc
add
aaa
or
test
repz
shrd
adc
fs
mov
sbb
ficomp
ss
test
push
cmps
shl
cld
pop
sbb
(bad)
xor
fcomip
ja
xor
ret
cwde
(bad)
out
mov
movs
dec
fistp
or
sbb
shl
mov
in
outs
inc
ror
xchg
xchg
call
into
push
fcom
add
loopne
clc
jne
pop
stos
popf
aam
sub
dec
aad
dec
inc
or
sbb
stc
and
sahf
out
pop
dec
lds
xchg
arpl
pop
iret
repnz
mov
(bad)
xorps
cli
adc
adc
inc
mov
pop
iret
outs
(bad)
fld
mov
sahf
movs
dec
retf
mov
sub
push
push
push
jae
outs
test
cli
adc
jmp
xchg
pop
sbb
lods
test
xchg
in
mov
cmp
and
and
pop
sbb
mov
cdq
daa
add
or
jle
gs
std
aam
pop
xchg
test
dec
mov
pop
add
pop
mov
mov
es
test
movs
mov
ror
addr16
mov
add
and
retf
adc
cli
mov
inc
xchg
mov
fild
dec
cmp
rol
retf
adc
fstp
iret
fwait
das
xor
dec
xchg
sub
pop
stc
jo
mov
dec
xchg
cmp
sub
cmp
inc
mov
mov
sahf
pop
ins
das
test
rcl
jge
les
ins
movs
iret
sbb
(bad)
(bad)
ja
into
js
jg
mov
dec
xchg
icebp
sub
inc
ja
and
mov
sub
pop
pop
jle
ins
cmps
push
mov
xchg
inc
xchg
mov
inc
gs
xchg
ds
sbb
and
xchg
pop
fcom
sahf
sahf
mov
nop
sbb
jle
das
sbb
cmp
and
out
pop
inc
and
std
xchg
dec
inc
jb
sti
iret
jmp
xchg
pop
sub
lahf
aas
cmps
pop
sub
fwait
stos
mov
mov
xchg
add
iret
add
daa
test
sbb
jecxz
lds
pop
mov
xchg
or
fnstsw
hlt
jmp
mov
push
jmp
mov
mov
les
(bad)
sar
push
inc
jmp
mov
retf
pop
push
inc
addr16
ds
pop
imul
scas
push
(bad)
xor
jb
push
retf
sbb
xchg
mov
and
imul
(bad)
int
fcom
inc
imul
pusha
jmp
mov
inc
xchg
mov
ret
cmp
fcom
test
adc
and
jnp
lahf
mov
push
retf
fidiv
rcl
aad
jb
add
xchg
jmp
sar
mov
arpl
test
arpl
or
int
sub
xchg
or
test
inc
fcomp
fcmovne
dec
or
xchg
dec
fadd
adc
rol
dec
mov
jb
jbe
or
fsub
bound
xchg
cmps
jecxz
(bad)
shl
cli
cs
sub
ss
icebp
(bad)
push
(bad)
sahf
movs
aaa
fmul
adc
mov
cmc
out
mov
and
dec
jns
push
mov
shl
xor
int3
dec
pop
imul
mov
add
(bad)
push
stc
shl
out
cmp
dec
dec
inc
rcr
xchg
inc
mov
lea
jmp
mov
sti
popa
cli
cdq
dec
mov
jae
mov
mov
ds
push
iret
aad
rcl
jnp
push
xchg
outs
scas
sti
sub
ins
dec
out
shl
mov
mov
lods
sub
ror
sbb
mov
rcr
es
push
inc
addr16
retf
cmp
mov
mov
ret
lahf
imul
cs
dec
mov
std
push
scas
in
jb
dec
jns
lahf
test
fnstsw
cli
test
push
and
jge
sub
dec
out
rcl
inc
bound
sbb
xor
retf
repnz
cld
cmp
movhps
mov
fimul
jo
call
push
test
shl
jbe
stc
in
mov
jmp
inc
add
xchg
cmps
(bad)
jmp
inc
push
retf
add
movs
cmps
add
mov
test
pop
ins
scas
sbb
add
dec
stos
int
int3
inc
and
es
mov
sahf
push
pop
call
not
pop
fst
popa
ss
mov
mov
mul
jno
xor
loopne
arpl
mov
jecxz
into
in
dec
test
and
mov
test
mov
aam
mov
push
(bad)
nop
push
push
xor
(bad)
jmp
jle
clc
inc
pop
sahf
(bad)
es
fisub
(bad)
dec
dec
xchg
jle
call
pop
push
mov
and
(bad)
sbb
ins
jae
sub
aaa
(bad)
mov
movs
ja
cmp
mov
out
sub
lods
lods
fdivr
mov
ds
and
xchg
mov
inc
jo
div
rol
outs
pop
pop
loop
inc
adc
das
or
dec
adc
repnz
out
test
mov
movs
sub
lea
hlt
clc
inc
and
dec
dec
jmp
jo
mov
loop
mov
ret
sub
inc
mov
ror
out
xchg
push
into
and
mov
cmp
das
and
fdivrp
push
in
push
jnp
xchg
es
or
mov
pusha
(bad)
mov
or
sbb
cld
mov
push
stos
push
mov
cmp
ficom
cwde
lds
or
or
js
adc
outs
sti
or
push
loopne
inc
mov
leave
call
(bad)
clc
icebp
mov
pop
xor
cmp
inc
daa
test
inc
sbb
and
ffreep
pop
mov
jp
out
ret
mov
bnd
pop
inc
out
mov
pusha
jo
fwait
sbb
cmp
popf
jmp
mov
nop
xor
pop
popf
adc
cld
add
push
sub
ror
add
pop
(bad)
rcr
pop
dec
cmp
sub
adc
add
movs
jno
add
pop
add
lock
aad
push
jmp
ret
test
sub
mov
repnz
out
jno
push
movs
cmp
xchg
loopne
adc
and
cmc
mov
add
(bad)
stos
in
inc
repz
enter
cs
xchg
push
pop
neg
ss
pop
addr16
mov
ins
pop
imul
mov
cs
cmp
mov
arpl
int
call
mov
(bad)
mov
sub
iret
and
(bad)
movs
mov
add
sbb
xchg
rcl
lock
aam
dec
xlat
cmp
adc
pop
int3
rcr
push
and
stos
(bad)
shl
dec
add
mov
movs
loop
inc
ins
xlat
rcl
xchg
mov
in
or
jge
push
inc
(bad)
jne
jmp
cmp
mov
dec
push
cli
mov
call
inc
jge
in
ret
adc
pop
bound
jl
sahf
push
or
mov
(bad)
nop
jg
(bad)
or
sbb
jge
and
in
ret
dec
push
shl
and
idiv
ins
repnz
ja
aad
mov
ss
mov
shr
or
shr
je
jmp
and
mov
pop
ret
shl
cdq
dec
adc
fbld
push
add
mov
lock
imul
inc
jbe
xchg
(bad)
aas
aas
add
inc
fimul
inc
cli
mov
in
sar
aad
test
icebp
(bad)
aam
sub
sar
leave
or
dec
mov
loop
mov
mov
call
(bad)
mov
es
adc
push
xor
and
mov
shl
xor
jmp
jecxz
sbb
cli
lea
ins
loopne
(bad)
sar
pop
inc
sub
dec
add
retf
push
mov
xchg
add
repz
dec
push
and
imul
xor
pop
xchg
inc
icebp
jmp
popa
mov
in
mov
outs
sbb
rcr
cld
mov
cmps
rol
std
pop
mov
sub
mov
lods
dec
leave
iret
mov
jecxz
repnz
in
mov
pop
jne
inc
add
sahf
rcl
cmc
inc
rol
or
dec
jbe
xor
jmp
add
aaa
fdivr
daa
dec
and
jo
push
sbb
cmp
imul
ficom
movs
js
add
push
push
inc
into
stc
inc
mov
sub
mov
jmp
inc
sbb
aas
iret
push
mov
sub
push
jecxz
fiadd
les
(bad)
fcos
adc
or
or
push
cld
push
pop
mov
inc
cwde
push
adc
jnp
jl
addr16
iret
int
jp
ror
and
push
clc
and
sub
mov
xchg
push
loope
push
loopne
xchg
and
push
inc
aas
iret
mov
neg
js
inc
pushf
jae
xor
in
cmp
pop
mov
dec
movzx
sahf
test
inc
dec
dec
jg
sbb
push
std
arpl
cdq
popf
leave
mov
inc
or
and
daa
out
in
aaa
into
retf
or
pusha
dec
jge
mov
test
push
jnp
inc
popf
pop
pop
xor
fistp
xchg
sub
inc
jno
inc
cld
xchg
or
and
inc
and
sbb
les
(bad)
clc
int
fistp
pushf
jne
add
sub
mov
and
cld
scas
add
sub
push
test
adc
mov
js
jg
fisub
call
xor
adc
mov
daa
mov
nop
shl
add
scas
cli
xchg
pop
fldcw
shr
adc
push
popf
(bad)
movs
xor
clc
fstp
sub
xor
out
adc
imul
enter
out
sub
cli
sahf
cmps
cmp
inc
ret
inc
pop
jns
mov
push
mov
test
jno
adc
ficom
es
mov
push
xor
pop
and
and
mov
add
jmp
sub
mov
cmp
dec
push
in
adc
jle
inc
jge
inc
repnz
pop
loopne
jnp
aas
repnz
retf
movs
loopne
ds
mov
pop
sbb
mov
into
pop
dec
dec
or
lods
enter
xlat
xchg
sub
add
xchg
(bad)
cmps
or
xchg
call
jge
call
jecxz
pop
pop
es
not
push
stos
inc
into
mov
(bad)
fsub
imul
sub
bound
or
or
jno
add
mov
add
pop
adc
pop
movs
jmp
fxch
jbe
ret
test
in
out
mov
push
js
mov
loope
sub
js
push
(bad)
xchg
ret
ds
sub
sbb
and
mov
and
lods
shr
inc
mov
outs
jno
fstp
dec
stos
fnstcw
cmp
sub
add
test
sbb
hlt
or
dec
add
lods
out
inc
movs
bound
pop
mov
xchg
push
or
inc
addr16
inc
outs
push
push
test
or
ds
nop
sbb
pop
cmp
aaa
adc
and
inc
shl
cmp
and
jo
(bad)
mov
mov
js
adc
cmp
jbe
jle
rcr
sahf
les
pop
mov
push
ins
jb
push
and
in
sbb
pop
arpl
or
sar
and
mov
pop
sub
push
inc
fldcw
into
sub
loopne
jmp
mov
out
adc
pop
push
ins
jl
fmul
inc
cwde
push
or
adc
adc
add
js
and
adc
fcmovnbe
scas
add
cdq
adc
mov
mov
loopne
ficomp
popa
pop
push
add
retf
enter
and
adc
in
push
sbb
in
or
mov
pop
arpl
xchg
in
out
pop
push
stos
and
mov
shl
and
adc
popf
jge
mov
(bad)
ror
push
pop
jmp
push
sbb
mov
pop
jmp
test
cs
pop
add
(bad)
jp
pop
rol
mov
pop
cmp
adc
xchg
or
dec
sbb
pop
mov
xor
or
pop
adc
and
lods
fisttp
cmp
adc
add
dec
xor
test
ror
fnsave
into
sbb
mov
iret
jnp
adc
inc
test
xchg
or
mov
enter
int
cwde
scas
inc
ret
cli
jmp
imul
add
ds
dec
mov
mov
lea
xor
inc
sahf
rcl
xlat
test
push
iret
mov
push
into
jns
push
add
int3
sar
mov
or
stos
mov
stc
sbb
xchg
and
mov
or
xchg
pop
and
xlat
push
or
mov
pop
jno
daa
and
pop
xor
jle
mov
cld
ss
add
fwait
imul
mov
ss
xor
ins
movs
and
and
(bad)
loopne
xchg
xchg
and
arpl
out
sar
adc
(bad)
int3
mov
adc
xlat
inc
add
dec
iret
jl
cwde
repnz
mov
loop
ins
js
xlat
sub
xor
pop
rol
push
cs
xchg
push
sbb
aad
jnp
cmp
jne
xchg
movs
mov
jle
push
in
enter
stos
xor
arpl
mov
xor
jg
dec
in
rcl
inc
add
pop
sub
xor
adc
cli
test
out
xor
mov
cdq
mov
or
mov
aad
arpl
push
and
idiv
in
xchg
ins
push
popa
test
pop
pop
push
and
pop
(bad)
movs
or
ins
dec
mov
mov
dec
jo
aam
or
dec
shl
and
or
gs
pop
leave
daa
cdq
movups
daa
aas
clc
adc
test
jbe
repz
aaa
cmp
fdivr
ret
push
adc
idiv
gs
jg
ja
xor
scas
inc
xchg
cmps
mov
cmc
adc
sbb
cdq
sbb
dec
lods
mov
ins
inc
xchg
push
mov
inc
in
or
xchg
inc
test
cmp
xor
push
clc
mov
sahf
sub
je
imul
aam
add
xlat
stos
mov
push
rcl
adc
int3
mov
rcr
daa
sbb
mov
pop
pop
repnz
inc
pop
test
xchg
inc
inc
ins
sbb
mov
out
inc
(bad)
test
mov
cs
mov
jge
mov
mov
jnp
inc
adc
sub
rcl
test
inc
sub
(bad)
hlt
pusha
bound
in
push
ss
or
jae
mov
push
push
add
pushf
and
push
lock
out
or
fsubr
mov
in
xchg
add
lods
div
or
call
ins
cmc
dec
scas
int
(bad)
in
jle
jecxz
aam
lahf
daa
or
mov
arpl
mov
add
jnp
jne
fucom
fmulp
(bad)
call
sub
mov
mov
and
lds
fs
mov
scas
or
mov
sub
ret
push
jns
lock
mov
inc
mov
fcomi
and
mov
inc
cs
das
sar
in
cmp
cmp
xchg
inc
scas
mov
mov
pop
out
scas
sahf
stos
mov
mov
fadd
aaa
loope
sbb
add
rcr
sbb
adc
loop
mov
push
(bad)
cmp
pusha
or
ja
xchg
mov
mov
xchg
data16
xor
dec
lock
or
bound
mov
mov
out
cmps
clc
adc
pop
xchg
or
xchg
leave
push
(bad)
jge
dec
leave
push
mov
inc
push
mov
adc
imul
repz
enter
js
ret
and
inc
std
pop
into
jg
pop
xchg
int3
test
and
imul
or
sbb
inc
enter
dec
jmp
into
cmp
mov
inc
stc
jne
scas
xlat
and
js
fmul
ins
retf
pusha
cld
add
adc
jb
movs
inc
jmp
mov
mov
mov
(bad)
push
xor
ins
and
sub
inc
test
mov
leave
sti
out
mov
(bad)
mov
outs
mov
pop
stos
out
mov
ret
call
inc
jg
aas
arpl
mov
sar
cs
adc
ffree
retf
ja
addr16
fs
mov
sbb
xor
(bad)
fwait
out
in
test
movs
clc
dec
fild
bound
(bad)
pushf
jmp
lahf
loope
mov
mov
int
lods
arpl
fdivr
push
fisttp
xchg
jmp
out
fldcw
xor
mov
xchg
or
push
loop
lock
ret
xchg
fdiv
daa
std
mov
bound
(bad)
stos
pop
add
push
cmp
in
fs
cld
xor
enter
in
ja
and
jge
cli
in
mov
mov
xchg
mov
lsl
xchg
add
inc
pop
aad
xor
mov
in
mov
jo
rcr
cdq
into
lods
rol
mov
pushf
bswap
inc
xor
mov
(bad)
mov
xchg
cli
shl
retf
lea
mov
fwait
nop
jl
or
xchg
mov
es
je
sahf
push
bound
out
repz
add
cmp
mov
pop
retf
or
leave
xor
mov
mov
xchg
idiv
mov
inc
js
lock
int
out
mov
std
lods
(bad)
cmp
loope
push
sub
pop
dec
and
aam
add
jmp
jnp
sbb
mov
mov
jbe
out
ins
dec
add
xchg
rol
sbb
xchg
rcr
ins
cwde
and
cdq
ins
push
rcl
adc
daa
sub
popf
icebp
(bad)
mov
jns
mov
dec
jns
scas
adc
outs
push
shl
repnz
loop
xchg
aad
call
int3
mov
in
int
movs
(bad)
ret
adc
sbb
xchg
in
dec
add
xchg
and
sahf
loopne
sbb
xchg
aam
jbe
das
sahf
xchg
jge
or
xchg
icebp
repnz
shl
xchg
sahf
in
dec
cli
xchg
xor
dec
mov
pop
test
imul
jo
movs
fisubr
ret
xchg
sbb
(bad)
lods
(bad)
lock
xchg
or
(bad)
cmps
retf
and
push
inc
jne
cmps
adc
xor
xchg
cdq
(bad)
dec
rcl
test
iret
mov
xchg
test
push
xor
inc
sbb
icebp
sar
sar
mov
shr
xor
(bad)
fisubr
popa
lea
sbb
enter
loope
shl
jae
and
sbb
mov
inc
xchg
inc
jl
adc
leave
and
ja
hlt
aas
loope
rcr
sbb
not
or
or
out
cli
fild
lea
mov
daa
xlat
ficomp
(bad)
adc
or
add
push
cmp
shl
outs
or
std
add
inc
pop
into
xchg
daa
stc
fmul
int
jbe
nop
adc
push
popa
mov
ins
mov
adc
sahf
call
cmp
test
sub
jo
sbb
lahf
mov
xchg
cmp
rcl
sbb
test
(bad)
push
movs
xchg
call
ja
shr
lea
mov
pusha
stos
jge
inc
(bad)
lock
pop
adc
stc
cld
sti
test
pop
in
mov
call
or
inc
push
inc
imul
pop
adc
mov
dec
pop
and
xchg
inc
add
mov
xchg
jmp
mov
js
mov
imul
mov
stos
aad
ret
dec
mov
in
dec
mov
into
sub
ret
mov
mov
xchg
pop
and
jp
sub
js
call
inc
adc
pop
jno
sub
xchg
mov
dec
mov
inc
cwde
add
xor
sbb
mov
mov
xor
cmc
inc
ror
inc
xchg
dec
mov
std
mov
mov
popa
ins
push
test
cmp
les
lahf
mov
mov
jl
dec
push
(bad)
fs
mov
sbb
loop
or
dec
aaa
iret
and
mov
je
sbb
clc
cmps
ss
test
sub
jmp
int
xor
mov
in
sub
add
xor
loope
mov
mov
mov
jns
lea
dec
or
adc
je
xchg
and
push
aam
xchg
inc
gs
xor
ret
dec
sete
mov
daa
lds
(bad)
call
pop
adc
lock
dec
or
cld
pop
push
xchg
fstp
mov
nop
mov
(bad)
jno
xlat
jmp
les
test
pop
pop
push
call
pop
sahf
call
inc
stos
sbb
push
outs
lea
cmc
and
inc
bnd
adc
icebp
stc
inc
add
dec
mov
in
mov
mov
sahf
clc
pop
lods
test
fcomp
add
enter
push
mov
test
pop
push
dec
pop
pop
add
and
and
pop
dec
out
test
xor
jecxz
movs
or
stos
mov
inc
pop
imul
or
cmps
add
movs
mov
cmp
jle
(bad)
out
mov
mov
xchg
sub
mov
fs
popf
xor
mov
mov
mov
xchg
sti
cmps
add
cmps
loop
movs
pop
mov
sbb
in
arpl
push
pop
xor
dec
sub
mov
outs
scas
cmc
fst
fdiv
dec
push
pop
pop
stos
push
jge
xor
mov
test
ficom
outs
movs
lea
mov
or
xchg
aad
pushf
mov
ins
add
sbb
inc
mov
mov
popf
pop
mov
repnz
adc
and
dec
test
shl
push
and
imul
fwait
jmp
push
enter
arpl
stc
bnd
fwait
call
js
lea
pop
dec
mov
inc
mov
jno
fimul
or
mov
xor
and
mov
mov
es
(bad)
dec
pushf
test
(bad)
push
fnstsw
sub
sub
cdq
arpl
xchg
sub
xchg
or
shl
pop
repnz
sbb
xchg
sbb
inc
cmps
out
out
push
sub
rcr
lds
test
inc
test
sub
or
in
dec
pusha
les
fiadd
xor
sbb
repz
sbb
ret
mov
repz
ds
ins
rol
ja
jne
cwde
mov
mov
xchg
jnp
xchg
xchg
pop
dec
xchg
scas
enter
push
movs
lods
int
cmp
jle
sub
ret
dec
adc
rep
and
and
aaa
clc
jno
jno
pop
iret
cmp
addr16
ja
inc
dec
jns
fcomp
ror
mov
repz
dec
ja
iret
mov
mov
adc
in
and
push
and
cmp
ja
retf
test
xchg
xor
daa
sar
jmp
aaa
inc
imul
mov
mov
mov
xchg
(bad)
mov
lock
sbb
repz
popf
or
call
mov
jge
pop
out
pushf
inc
add
outs
sbb
nop
addr16
inc
push
(bad)
int
ins
les
mov
mov
pop
aam
sub
xchg
inc
in
cmps
or
lods
adc
leave
cmp
cmp
jbe
mov
xchg
rcr
fisubr
int3
push
push
outs
clc
pop
jge
(bad)
sbb
sbb
pop
cli
rcr
pop
xchg
in
mov
push
push
jmp
retf
mov
(bad)
sar
and
jbe
mov
mov
mov
sub
movs
mov
add
push
shr
popf
out
mov
push
div
shl
shl
and
les
aam
ret
lock
stc
push
pop
jmp
fiadd
sub
ss
mov
pop
xchg
daa
out
mov
add
inc
add
ins
mov
out
(bad)
jmp
push
or
push
ins
mov
mov
add
es
imul
add
sti
adc
mov
popf
ret
sub
clc
ret
aam
mov
push
call
adc
jmp
fucomip
sub
jg
mov
rcl
or
xchg
call
cmps
fcmovnu
pop
hlt
xchg
sbb
test
test
icebp
clc
pushf
lds
cld
sub
fwait
xchg
mov
inc
out
aad
repnz
dec
out
(bad)
cmp
xchg
sbb
inc
sbb
outs
xor
stos
gs
sub
mov
jb
fcom
imul
pop
jmp
call
bound
xchg
sbb
xchg
jo
addr16
sbb
mov
mov
xchg
shl
and
inc
(bad)
fsubrp
and
shl
and
dec
out
mov
pop
mov
and
retf
push
mov
pop
pusha
cmp
jb
xor
js
jge
add
dec
int
xor
mov
sbb
ret
(bad)
(bad)
ins
push
fs
adc
mov
ja
out
push
mov
adc
mov
jmp
or
arpl
test
mov
frstor
jl
ror
dec
jb
mov
fs
inc
push
adc
inc
pusha
sahf
gs
int
mov
loop
inc
pop
clc
jnp
cld
(bad)
lock
jns
and
cwde
iret
ror
adc
es
stc
test
push
movs
add
(bad)
xchg
fcmove
xchg
(bad)
adc
mov
jge
cmp
hlt
jno
sbb
xchg
mov
jle
icebp
clc
stos
mov
xor
sub
inc
fadd
out
and
movs
sbb
outs
popf
ins
or
mov
xchg
jg
pop
lods
fs
repnz
test
mov
(bad)
loopne
mov
iret
cmp
jns
add
lods
icebp
pop
enter
add
push
mov
shl
in
cdq
add
push
pop
sti
pop
cdq
xor
mov
sub
int3
test
rcl
(bad)
in
jg
fild
mov
mov
nop
pop
outs
or
or
jecxz
js
jb
or
rol
ins
shr
nop
imul
pop
push
stc
xor
xlat
cmp
jecxz
data16
xor
jo
cld
add
pop
das
xchg
sbb
popa
rol
call
mov
mov
mov
add
data16
and
or
add
cli
cwde
pop
imul
shl
pop
xacquire
pop
sti
and
mov
jae
and
cwde
int
std
mov
mov
jmp
or
adc
mov
jbe
xchg
mov
ins
les
dec
jge
stos
xor
add
mov
xchg
dec
fs
mov
or
lds
and
add
aam
jae
rol
pop
inc
mov
xor
mov
xchg
ret
jo
fistp
ret
in
xchg
movs
adc
cwde
mov
sbb
test
cmp
inc
int
lock
daa
inc
aam
add
xchg
sar
out
jnp
in
jns
or
or
cdq
mov
(bad)
pushf
lock
in
int
gs
adc
(bad)
xor
mov
pop
cmp
adc
lods
mov
dec
cmp
cwde
imul
pop
outs
push
dec
stc
and
pusha
inc
sub
cld
fisubr
ftst
cs
loope
lock
jbe
retf
test
pop
push
sbb
aad
fmul
push
or
test
push
into
popa
aas
imul
int
jne
mov
mov
cmp
les
jbe
push
xchg
popf
pop
addr16
shr
daa
not
jns
mov
sbb
aam
movs
jbe
lds
cmc
xor
scas
mov
pop
fnstenv
sbb
jne
sbb
inc
pop
cmp
imul
ss
jg
xchg
fdivr
xor
add
pop
xor
mov
ins
mov
fild
xlat
(bad)
aas
inc
sar
pop
outs
sbb
daa
xchg
aas
sub
mov
add
push
jge
pop
into
xor
cmp
bound
sbb
sahf
jns
retf
clc
fild
scas
mov
pop
ror
jnp
aaa
(bad)
mov
cld
outs
sub
out
retf
and
jecxz
pop
call
lods
pop
xchg
test
inc
imul
sbb
or
xor
rcl
adc
xlat
cdq
stos
pop
enter
inc
out
xlat
sub
push
push
pushf
or
or
mov
int3
aam
stos
pop
in
xor
xor
add
scas
popf
xor
push
ins
mov
dec
cmp
stc
or
nop
xchg
dec
mov
test
push
inc
daa
pusha
push
dec
xor
jecxz
jle
push
xor
ins
test
add
idiv
inc
rcl
cmp
das
outs
dec
push
movs
mov
mov
push
sub
jmp
mov
imul
in
aam
arpl
xor
aas
xor
xor
test
stos
adc
add
fwait
in
cmc
neg
lahf
xor
xlat
stos
enter
test
cld
pop
jg
xchg
push
mov
mov
sbb
mov
adc
cld
adc
stos
hlt
and
ret
neg
adc
mov
and
call
xchg
imul
movs
loope
and
jb
lahf
inc
scas
scas
pusha
sub
sub
lods
cmp
dec
push
cmp
push
pushf
jg
(bad)
cmp
or
mov
test
ss
xor
mov
add
xor
clc
cmp
sbb
cs
iret
xor
rol
jns
sub
nop
dec
push
jns
adc
sti
or
movs
into
popf
das
cs
clc
mov
adc
dec
xchg
test
(bad)
popa
adc
adc
inc
add
sub
sub
test
lock
hlt
dec
mov
jne
in
arpl
(bad)
ret
push
mov
movs
add
xor
jae
push
mov
dec
cdq
mov
outs
dec
(bad)
or
cmc
out
and
mov
in
mov
nop
jmp
movs
or
fcmovu
imul
test
out
xchg
fist
xor
add
add
and
xchg
cli
mov
mov
xor
pop
add
jmp
pop
mov
xor
mov
cmp
popf
add
js
xchg
cmp
cdq
in
and
cli
jge
sub
out
cwde
add
fcom
cmp
xor
aam
sub
dec
dec
(bad)
pushf
or
rol
push
jmp
pushf
sbb
popa
ror
xor
or
jecxz
mov
lea
pop
mov
sub
out
mov
shl
cmp
push
pop
neg
lds
cli
mov
or
mov
add
mov
das
sbb
lods
adc
pop
inc
push
gs
hlt
adc
lds
or
adc
inc
jae
leave
test
fisub
nop
out
dec
mov
sub
push
data16
sbb
mov
or
idiv
loopne
adc
dec
xchg
and
jns
aaa
xor
adc
pop
sub
cmp
or
mov
fstp
outs
repnz
xchg
mov
mov
scas
or
je
cmp
pushf
dec
mov
xchg
or
jb
gs
es
cld
xlat
gs
call
sub
push
cli
mov
test
repz
shl
or
ja
loop
gs
nop
sbb
xchg
cmp
fild
dec
jmp
ins
xchg
outs
cmp
mov
cmp
jbe
mov
and
in
xchg
mov
in
ret
dec
add
mov
fwait
adc
mov
cmp
lock
xchg
dec
cli
mul
pop
inc
mov
push
in
sbb
retf
jno
int3
mov
sub
xor
test
and
adc
push
std
pop
out
jg
aas
push
lds
hlt
cmp
adc
nop
fdiv
fistp
ror
cmp
sar
shr
addr16
pushf
iret
(bad)
call
fstp
shr
add
inc
retf
inc
jne
push
arpl
pop
xchg
mov
xor
shl
dec
scas
sar
push
mov
fadd
stos
add
popa
xchg
stc
clc
sub
adc
outs
aaa
xor
fucomi
(bad)
dec
push
mov
add
cli
std
push
outs
inc
mov
inc
ror
(bad)
aas
xchg
xor
mov
xchg
(bad)
push
int
or
ins
jp
mov
pop
ror
xor
mov
idiv
retf
dec
fs
nop
pop
aas
sti
xchg
movs
mov
add
cdq
sahf
xchg
jmp
sub
cmp
sbb
imul
push
or
lds
out
mov
dec
or
sub
bswap
pop
pop
data16
add
xor
mov
sti
loop
jne
pop
mov
inc
cdq
pop
dec
or
out
or
pmulhuw
loopne
call
sub
cld
inc
test
es
fs
mov
push
call
scas
push
ins
icebp
mov
push
mov
sbb
xchg
ins
shl
loopne
and
jle
aad
rcl
mov
outs
adc
cmc
jl
in
cmp
xor
dec
out
push
ins
popf
stc
pop
xchg
outs
aam
pop
out
cdq
inc
push
cmp
stc
fld
pop
sub
lea
retf
inc
popf
rol
(bad)
cmp
cmc
leave
push
movs
jns
int
and
cmp
xor
test
mov
sub
repnz
add
add
xor
cmp
fcmovb
adc
in
push
std
add
and
test
xor
pushf
cmp
and
adc
lods
inc
fcomp
or
pop
enter
jl
gs
mov
and
leave
lods
mov
pusha
icebp
scas
jle
mov
loop
pop
jo
mov
pop
push
dec
cmp
xchg
in
jno
rcl
dec
adc
rcl
or
addr16
scas
(bad)
jno
in
inc
jp
dec
sbb
pop
pop
jb
cld
pop
mov
push
(bad)
mov
xchg
push
cwde
ins
inc
xchg
jb
pushf
add
inc
loopne
sub
dec
mov
loop
add
or
fisubr
stos
xor
xchg
adc
shl
mov
xchg
pusha
mov
pop
fisttp
out
xor
dec
scas
push
(bad)
cmp
sar
sbb
inc
fstp
xor
sti
mov
mov
test
icebp
loop
sub
(bad)
arpl
ror
dec
push
xchg
cmps
jne
clc
hlt
dec
pop
stos
cs
shr
mov
inc
int
scas
shl
push
sar
pop
jmp
test
cmps
sub
mov
out
pushf
mov
xchg
cmp
lds
stc
cmp
call
and
test
add
clc
ins
mov
ins
(bad)
in
aad
push
aam
or
loope
xor
push
outs
xchg
fstp
addr16
xlat
xor
and
inc
mov
jecxz
sub
ret
mov
and
jge
push
push
and
cmp
rep
or
(bad)
int
ja
mov
xchg
bound
test
xor
sub
movs
jge
jns
mov
xchg
pop
dec
sbb
retf
jbe
out
add
fst
ds
push
iret
jae
push
mov
push
leave
jp
xchg
mov
jae
sti
dec
push
out
lds
push
jmp
jmp
mov
arpl
sub
pop
call
dec
retf
call
add
adc
pop
clc
(bad)
test
mov
test
jno
dec
repz
pop
mov
inc
cli
jmp
mov
lods
add
loope
popa
pop
and
dec
jecxz
call
dec
(bad)
inc
popf
not
push
dec
test
mov
and
xchg
pop
mov
pop
mov
out
inc
fsubr
mov
lock
call
in
ja
dec
or
ficom
call
dec
jle
fimul
sbb
test
(bad)
repz
loop
out
into
retf
sub
(bad)
rcr
leave
xchg
mov
jne
or
pop
lea
push
inc
fs
icebp
add
inc
sbb
fwait
and
sbb
ret
div
pop
(bad)
mov
sbb
sbb
sbb
xor
dec
lods
mov
cmps
inc
stos
sbb
mov
add
or
xchg
scas
push
or
mov
xchg
out
mov
add
into
xchg
(bad)
in
dec
movs
xchg
inc
sub
jmp
std
rol
jge
bswap
xlat
aas
lahf
inc
lahf
repz
out
xlat
leave
jmp
dec
fidivr
dec
jecxz
popa
mov
xor
call
lock
jo
sub
out
pop
jns
mov
pop
push
cmp
rol
test
pop
test
iret
jmp
pop
test
add
or
pop
mov
mov
mov
cmp
sbb
mov
test
cmp
pop
fistp
sub
mov
ret
sbb
jge
call
jns
sbb
sub
sbb
inc
pop
enter
xchg
lods
es
js
mov
jge
jecxz
pop
test
pop
mov
shr
mov
repz
mov
lock
lea
and
inc
dec
std
pmaxsw
sub
pop
mov
in
and
fs
cli
(bad)
frstor
jecxz
xor
mov
jp
jnp
dec
in
xchg
push
pushf
push
jno
dec
adc
ja
std
push
and
jl
and
pushf
fsubr
rcr
das
cdq
rol
mov
pop
or
loopne
sbb
int
fsubr
in
call
push
ret
adc
sar
retf
aad
or
push
cmp
push
jp
adc
jecxz
mov
popa
adc
inc
mov
mov
ficom
mov
jmp
retf
sub
push
inc
les
cld
adc
pop
clc
fdiv
(bad)
scas
dec
movs
mov
ins
xor
in
cwde
test
pop
xchg
rcr
mov
rsqrtps
inc
daa
popa
fadd
lea
add
cdq
js
rol
aaa
add
dec
pop
test
push
cmp
jns
gs
hlt
mov
(bad)
mov
clc
movs
pop
pop
add
xchg
inc
dec
ss
imul
mov
retf
or
xor
cmps
xor
mov
fcomp
inc
int
stos
into
mul
and
fisubr
or
adc
and
repnz
xchg
ret
repz
cmp
xchg
cmc
in
scas
dec
repnz
scas
retf
jl
or
pcmpgtd
stos
daa
push
sti
(bad)
fsubr
cmp
cs
adc
(bad)
inc
cmps
push
call
jns
sub
int
and
sub
es
or
xor
pop
dec
mov
ficom
ret
loop
cwde
mov
ins
xchg
arpl
xchg
dec
(bad)
div
jmp
movs
or
fstp
adc
mov
pop
push
stc
rol
xlat
daa
(bad)
ds
jae
pop
pop
and
imul
or
sub
fxch
dec
mov
dec
xchg
add
mov
call
mov
out
ret
sub
jns
pop
or
ds
push
inc
mov
mov
inc
and
pop
shl
(bad)
in
aam
jg
movs
dec
mov
adc
mov
add
and
adc
add
xlat
movs
mov
push
leave
aaa
fidiv
or
and
sub
sub
loopne
outs
dec
pop
or
repz
sub
push
push
xor
mov
cmp
or
mov
daa
mov
pop
sub
mov
std
jge
pop
jmp
in
xor
shr
hlt
push
dec
add
sbb
outs
sar
jnp
(bad)
std
jb
fnstcw
mov
xor
cmp
xor
add
shl
cs
or
test
in
mov
fwait
jno
mov
and
stc
cli
je
fsub
jne
xchg
cmp
call
popa
xchg
les
in
pop
dec
lock
dec
add
or
movs
mov
imul
or
jg
add
fnstcw
push
sub
popf
dec
and
(bad)
xor
pop
popa
add
imul
or
xor
es
aad
pop
mov
mov
jns
dec
test
ret
mov
sti
add
push
sub
(bad)
outs
jb
push
mov
aaa
mov
sub
jmp
jb
pop
mov
sub
sbb
ss
pop
(bad)
call
popa
and
push
and
stos
push
mov
rol
pop
test
add
and
and
aas
into
cwde
sbb
xchg
adc
ror
call
enter
cmps
inc
inc
stc
xor
aaa
into
mov
dec
inc
enter
jo
imul
outs
xchg
pop
xor
dec
sahf
in
xchg
xor
cmp
sbb
cli
mov
pop
es
outs
push
cld
jbe
inc
jb
sti
aad
fdivr
jne
inc
xor
arpl
mov
push
(bad)
mov
adc
aas
cmp
xor
retf
iret
mov
jp
xlat
sysret
cmc
cmp
xchg
or
scas
cmp
adc
inc
cmps
inc
cmc
stos
mov
mov
int3
jne
cmp
cs
push
adc
out
popa
jae
rcr
test
mov
push
dec
cmp
(bad)
repnz
xor
or
fisttp
pop
mov
sub
shr
adc
lods
sbb
mov
inc
pusha
js
jnp
fwait
inc
in
jo
inc
adc
xchg
mov
jne
mov
out
popa
and
cmp
pop
push
test
xchg
popf
movs
mov
gs
push
(bad)
cmp
xchg
and
or
enter
popa
dec
(bad)
mov
repz
into
jno
jnp
push
cmp
cmp
or
or
inc
retf
out
push
je
pop
iret
xor
test
push
adc
xchg
adc
mov
popa
xchg
iret
xor
ss
mov
stos
sub
jp
and
sbb
mov
inc
adc
mov
popf
out
(bad)
pop
aam
cmp
nop
aas
test
lahf
out
es
(bad)
stc
fisub
xlat
add
out
mov
jmp
jb
push
(bad)
int
popf
add
sbb
or
out
out
dec
(bad)
dec
add
pushf
or
pop
mov
push
mov
add
fs
jb
popf
jp
das
es
stc
(bad)
pop
inc
adc
fs
sbb
inc
push
cmps
lea
out
mov
xchg
shl
mov
test
push
mov
and
sub
test
xchg
cmp
mov
not
imul
les
(bad)
popa
fcom
add
pop
das
jle
adc
add
jns
push
cs
dec
inc
xor
inc
call
xor
(bad)
fistp
stc
inc
inc
scas
and
push
test
cmps
outs
mov
mov
cli
loop
mov
and
cld
pop
lods
js
cmp
jp
or
(bad)
stc
sti
mov
push
cmp
fstp
cmps
out
push
sub
add
and
(bad)
test
cld
inc
jns
push
gs
xchg
aam
ror
mov
iret
mov
stc
adc
mov
hlt
scas
xchg
adc
xchg
out
adc
cmp
jmp
xor
aad
and
sahf
adc
lock
pop
add
xor
gs
repnz
sbb
mov
inc
pop
inc
cld
jbe
sbb
mov
xchg
and
iret
inc
jo
xor
aaa
leave
dec
fldenv
and
mov
(bad)
mov
ins
daa
jp
adc
and
dec
and
jno
xor
jmp
popf
cmp
xchg
in
sbb
je
or
popa
inc
clc
sbb
mov
mov
adc
stos
jge
push
cdq
stc
pop
psrlq
mov
enter
add
push
push
sbb
ins
mov
adc
adc
sub
fcmovb
jl
dec
push
xchg
in
mov
mov
push
mov
popa
inc
pop
fmul
jno
ret
push
imul
adc
retf
stos
push
add
pop
xchg
outs
neg
sbb
pop
pop
sbb
adc
dec
xchg
xor
adc
mov
outs
sbb
sub
or
fs
xor
jnp
jp
inc
mov
stos
sbb
mul
repnz
mov
rcl
push
sub
bndldx
push
dec
inc
sahf
or
inc
imul
mov
mov
xor
arpl
sbb
daa
dec
popf
data16
xor
jecxz
or
pop
adc
cmp
push
jne
jg
(bad)
arpl
xchg
scas
sbb
fisubr
shl
aas
cmp
dec
xor
pushf
ror
loope
mov
ins
(bad)
outs
pop
pop
mov
xchg
call
or
mov
xchg
dec
dec
adc
xchg
mov
push
sub
(bad)
cdq
or
imul
bound
aam
inc
sahf
or
es
cmp
ror
jnp
fstp
clc
out
jl
or
loop
or
inc
clc
and
test
mov
mul
mov
sahf
jg
out
cmp
rol
pop
mov
jg
iret
push
lods
enter
in
cld
sahf
js
cmps
jl
lods
mov
xor
push
stc
ror
jae
arpl
(bad)
lahf
xchg
ds
add
fmulp
inc
sbb
stos
js
adc
pop
dec
mov
bound
call
mov
push
call
sbb
loop
ss
jge
out
push
mov
mov
gs
in
mov
mov
adc
xchg
mov
call
cmp
sub
aaa
push
mov
push
das
dec
mov
mov
xchg
jecxz
fucomip
lea
ins
xchg
jle
imul
dec
adc
cli
sub
jg
jo
add
leave
dec
popa
retf
jbe
xchg
stc
int
into
mov
sub
inc
mov
cmp
sub
jnp
imul
xor
div
into
or
sub
in
sti
popf
nop
jge
test
pop
sbb
push
rol
je
push
fsubr
icebp
lea
mov
pop
push
ret
nop
jb
pop
jmp
and
sti
test
(bad)
and
jg
ins
rcr
lods
sbb
popf
mov
push
frstor
arpl
cmp
adc
in
sub
pop
inc
(bad)
js
xor
ja
test
dec
out
pop
mov
scas
pop
xor
xor
pop
lds
pop
(bad)
sbb
push
xor
cli
jne
(bad)
icebp
inc
push
cli
inc
cli
xor
in
mov
cs
clc
fadd
or
jno
div
jmp
bound
out
(bad)
cmps
repz
xchg
add
jbe
jle
pop
and
cdq
jno
and
int
repnz
xor
imul
pop
or
das
sbb
push
fisttp
data16
and
jb
mov
mov
popaw
jae
out
repz
mov
ds
test
and
add
into
inc
add
cwde
pop
enter
ja
lea
pop
xchg
icebp
jp
pop
(bad)
jp
add
test
add
(bad)
aam
inc
test
cli
cld
std
jmp
pusha
repz
add
inc
loope
mov
sub
mov
add
outs
push
sar
pop
and
mov
dec
or
das
or
pop
xchg
fisubr
pushf
loope
fistp
jg
add
daa
push
fwait
cmp
sbb
dec
arpl
pop
push
jmp
cli
jmp
xlat
add
neg
mov
jo
jmp
mov
or
push
pmaxsw
jmp
xchg
mov
sbb
add
mov
pop
cmc
hlt
xchg
imul
dec
(bad)
jnp
shr
retf
mov
and
call
push
dec
or
xor
out
mov
pop
sub
mov
jle
in
push
fcom
bound
cmp
out
inc
add
or
sti
mov
lds
movs
pop
aam
adc
out
loope
sub
push
inc
scas
enter
or
fst
mov
pop
mov
push
ret
dec
stos
lock
mov
jnp
(bad)
in
out
shr
scas
imul
mov
cdq
cli
xor
pop
mov
outs
cmc
sub
add
inc
call
repz
lods
dec
icebp
jmp
call
gs
cs
sub
call
sub
rol
enter
dec
in
jnp
fstp
or
jb
xor
cdq
pop
jns
adc
dec
and
cmp
mov
push
jmp
push
ficomp
loopne
jbe
mov
xchg
cwde
ret
ins
pop
adc
popf
stc
xchg
gs
push
les
add
mov
leave
ror
dec
or
cwde
mov
jp
and
xor
in
mov
jecxz
(bad)
mov
(bad)
jge
mov
out
dec
std
fs
in
and
adc
test
jp
fld
jo
xchg
mov
cmp
fiadd
jge
dec
aaa
sbb
cmp
fcom
lds
xchg
cli
nop
sti
test
int3
cmps
fisttp
stc
repnz
adc
or
test
xor
add
nop
adc
mov
xchg
push
retf
lods
retf
inc
sar
cmp
mov
fistp
scas
ror
test
lds
push
push
jb
ins
dec
mov
or
or
inc
in
iret
push
aad
cmps
enter
mov
call
repz
cmps
clc
mov
fcomp
sar
imul
jmp
mov
out
mov
push
int3
stos
jo
lea
dec
and
clc
xor
idiv
fild
call
mov
(bad)
inc
cs
outs
pop
stc
mov
jnp
jo
jnp
rcr
movs
(bad)
jo
dec
sbb
or
mov
push
shl
sbb
(bad)
cld
cmp
scas
lods
mov
cmps
fild
sub
push
enter
push
xchg
dec
cmp
push
inc
sbb
cmps
mov
pop
call
add
add
adc
or
dec
cld
xchg
pop
pop
lea
xchg
data16
fild
lds
mov
loope
add
push
in
movs
ret
and
and
mov
xchg
stc
jge
fnstenv
or
and
loop
push
mov
imul
mov
aam
ficomp
cmp
and
stc
xchg
dec
or
xor
mov
cmp
or
xchg
jno
bound
push
dec
int
int
jne
inc
mov
jle
push
jbe
pop
or
inc
add
inc
or
mov
retf
pushf
addr16
pop
hlt
push
scas
pop
mov
imul
cmp
mov
scas
push
movs
mov
iret
jnp
lea
inc
add
popf
mov
inc
ret
out
or
mov
cmp
mov
mov
cmps
mov
shl
rcl
inc
test
ret
sub
(bad)
sub
adc
into
xor
stos
call
fst
mov
xor
imul
cmc
mov
dec
push
adc
stc
(bad)
ror
sbb
call
pop
mov
jae
mov
cmp
retf
and
mov
dec
lds
mov
xchg
xor
neg
or
inc
movs
pop
jns
jle
enter
jp
into
mov
cmp
xchg
mov
pop
movs
and
scas
popa
xor
enter
test
test
jg
wrmsr
inc
mov
call
sti
mov
(bad)
mov
push
inc
cmp
jb
pop
test
mov
push
arpl
enter
fidivr
rol
and
scas
lea
data16
sbb
jl
dec
stos
mov
pop
inc
mov
scas
rcl
fisubr
pop
jnp
test
lods
adc
ror
and
mov
addr16
and
jle
xchg
sub
cmp
push
icebp
mov
ins
add
pop
aas
mov
ror
mov
loope
rcr
mov
out
scas
push
dec
sar
test
sbb
iret
call
out
inc
and
dec
repnz
cmps
pop
pop
xchg
leave
cmp
call
adc
dec
int3
push
(bad)
in
adc
xor
dec
cwde
mov
ja
jns
repz
loope
mov
fs
lahf
mov
ds
leave
inc
(bad)
std
push
dec
ret
mov
jl
enter
call
mov
ror
or
push
shr
int
sar
loopne
in
pusha
icebp
sbb
aaa
loop
mov
and
aad
ss
hlt
out
mov
scas
mov
mov
mov
sbb
pop
jge
pop
les
cwde
mov
loop
fmul
mov
mov
mov
xchg
jmp
shl
lds
push
xor
daa
mov
fsub
xchg
js
call
in
arpl
pop
dec
sbb
and
jecxz
repz
lods
and
sti
cdq
inc
mov
xchg
mov
int
mov
stc
xchg
lds
(bad)
int3
and
out
inc
or
dec
ins
jmp
mov
mov
inc
sbb
inc
mov
int
sub
cmp
das
pop
jp
inc
cmp
rcr
pop
and
sub
lds
inc
cld
dec
out
fnstsw
pop
fisub
movs
std
arpl
lock
in
imul
pop
mov
fsub
sti
std
(bad)
sub
sbb
or
pop
cmp
and
inc
(bad)
xchg
les
or
and
push
rol
ins
cld
fdivr
mov
xor
cmp
mov
mov
(bad)
and
mov
popf
inc
or
in
test
dec
add
mov
daa
hlt
sub
xor
pop
xor
das
push
fsub
xlat
sub
mov
arpl
out
and
dec
mov
mov
test
inc
push
(bad)
(bad)
in
lahf
aaa
shl
add
pop
repz
fucomip
dec
inc
lds
xor
lahf
cmp
fs
les
and
or
in
ins
mov
cli
cmc
push
movs
inc
or
jp
shl
xor
retf
cmp
push
je
pop
add
fist
and
pushf
aas
mov
mov
dec
push
xor
jnp
js
jb
jge
les
or
fs
cs
mov
out
jle
lods
mov
pop
out
mov
push
add
fstp
mov
sbb
cld
out
cmps
or
push
and
xchg
ror
loopne
cmp
add
js
loopne
test
adc
lock
les
push
mov
mov
jle
inc
push
mov
pusha
mov
es
push
jae
int3
xchg
jg
push
lods
in
inc
dec
push
cmps
pop
mov
mov
adc
out
or
(bad)
pop
(bad)
add
fdiv
adc
fs
jb
and
aam
pusha
fwait
jg
xor
or
adc
popf
xchg
xchg
out
add
add
or
inc
mov
lea
sar
daa
je
clc
mov
xchg
lods
cld
xor
ja
sub
mov
xchg
clc
mov
jno
fnstsw
retf
call
cmp
mov
not
pusha
aaa
push
jb
lds
test
loopne
adc
cmp
push
lods
sbb
mov
(bad)
imul
pop
mov
mov
arpl
lods
jne
nop
or
fwait
cwde
shr
enter
mov
call
popf
push
or
sub
pusha
adc
dec
js
xchg
enter
outs
mov
int
xor
and
mov
das
push
xlat
pop
lods
leave
xor
fldz
dec
xor
sbb
and
test
pop
(bad)
or
je
push
pop
xchg
(bad)
or
cmp
sbb
mov
adc
sbb
das
xchg
push
xor
(bad)
out
nop
xchg
xchg
pop
(bad)
sbb
daa
sbb
int
mov
and
ds
jbe
in
int
or
in
loop
scas
push
mov
inc
add
xor
aas
sbb
inc
mov
sbb
dec
push
cmp
push
out
add
jns
lds
sbb
bound
adc
pop
cdq
imul
and
int
add
dec
and
sbb
scas
push
xchg
sahf
stos
mov
pop
add
mov
add
jnp
aas
in
jl
lock
mov
cdq
loope
test
jmp
mov
sbb
std
sti
mov
push
fild
mov
pushf
iret
loop
(bad)
xchg
xchg
xchg
adc
adc
and
pop
stc
jl
add
es
xchg
inc
cmp
std
pop
rol
aaa
xchg
mov
das
xchg
je
push
mov
pop
ds
(bad)
sub
mov
fiadd
fld
retf
mov
loope
(bad)
adc
jo
cwde
cmp
push
or
push
jge
and
mov
fidivr
xchg
fwait
rcl
xchg
xor
les
lods
cmp
xor
popa
sti
push
cld
push
inc
add
or
adc
jo
xchg
add
cmp
adc
jmp
(bad)
ins
cmps
imul
cli
pop
pop
xchg
mul
(bad)
inc
inc
jge
xchg
outs
sbb
jae
outs
xor
cld
(bad)
aaa
xchg
call
dec
xor
mov
cmps
push
push
arpl
add
adc
mov
dec
(bad)
hlt
xchg
adc
mov
add
push
fwait
push
inc
xchg
data16
inc
push
fld
xchg
push
ret
(bad)
in
mov
mov
call
or
icebp
shl
cmp
inc
fdiv
stos
sbb
pop
(bad)
loopne
add
data16
xchg
push
dec
jecxz
mov
imul
mov
dec
out
mov
popa
cli
sar
push
mov
int3
lods
mov
push
leave
mov
sbb
popf
mov
fsub
inc
inc
mov
js
pop
mov
arpl
sub
dec
cdq
mov
aaa
movs
add
out
mov
aam
cwde
(bad)
pop
ins
xchg
sbb
cmp
push
push
push
lods
fidiv
cmp
pop
nop
xchg
pop
outs
stos
inc
sbb
mov
adc
add
retf
xchg
mov
lock
or
cmp
add
add
xor
xchg
imul
in
mov
jo
push
sbb
jmp
push
dec
inc
jbe
data16
popf
sub
xchg
mov
icebp
or
adc
out
rcl
xor
add
in
mov
lds
xchg
push
dec
iret
or
cwde
sbb
or
sti
stos
int
cmp
test
inc
fs
and
xlat
mov
inc
pusha
dec
or
arpl
pop
ins
push
sbb
xchg
sbb
xor
jo
jbe
cmp
fild
dec
je
aas
lods
xchg
xchg
or
pop
fisubr
or
mov
cmp
push
jmp
adc
lea
or
les
add
add
clc
or
mov
std
cmp
dec
rcr
mov
jle
mov
adc
scas
mov
mov
data16
xor
push
mov
out
push
(bad)
das
movs
dec
aad
and
sub
push
inc
push
cmps
test
jecxz
call
mov
adc
(bad)
aam
inc
mov
dec
inc
out
retf
sahf
pop
hlt
add
sub
pop
aam
sbb
mov
push
push
mov
call
(bad)
fld
iretw
sbb
add
jecxz
pop
push
xor
dec
jmp
into
std
dec
je
or
xchg
add
and
inc
jg
out
int3
sar
cwde
adc
in
mov
mov
out
mov
xchg
mov
cmps
in
add
sbb
jmp
shr
mov
mov
jg
mov
or
shr
pusha
dec
sbb
sbb
into
jp
xchg
sbb
fs
fwait
je
push
jns
jbe
push
leave
aas
xor
cli
mov
push
push
stc
arpl
sbb
aaa
mov
movs
stc
in
fisub
pop
and
movs
jg
cmp
lock
adc
rcl
mov
push
sar
je
add
lea
outs
and
(bad)
cld
pusha
push
inc
pusha
pop
push
popf
add
jg
cmp
rcl
or
jno
cdq
cmp
js
iret
pop
cwde
xchg
mov
pop
test
inc
aam
mov
jle
fnstcw
in
ret
mov
push
int
pusha
ret
jo
mov
mov
iret
add
lock
js
jno
jnp
pop
ja
push
or
int3
inc
les
dec
fild
lea
inc
int3
ret
bound
add
pop
mov
sbb
pushf
sub
push
sbb
rcr
(bad)
movs
sub
popa
mov
mov
loop
test
xchg
jb
or
and
jns
inc
adc
ret
push
xchg
sbb
inc
push
sbb
out
sbb
cmp
mov
ins
mov
mov
out
cmc
adc
fdivr
add
and
jbe
push
and
(bad)
and
int3
inc
mov
icebp
lods
dec
cmps
xchg
test
pop
xchg
mov
push
cmp
test
fsub
or
lahf
xchg
fnstcw
dec
test
adc
push
jo
hlt
nop
xor
das
xlat
push
and
cdq
inc
es
fs
hlt
inc
mov
mov
cmp
rcr
jle
loop
sar
pop
cld
mov
mov
inc
lds
test
into
dec
or
xchg
push
rcr
movs
and
push
push
fwait
inc
(bad)
movs
fcmovb
mov
dec
(bad)
ret
cld
xchg
fdiv
push
lock
(bad)
retf
sahf
inc
mov
aaa
and
add
test
sahf
int3
or
pop
out
fisttp
ficomp
sar
inc
call
lods
(bad)
jge
mov
pop
mov
adc
stos
inc
mov
aad
sub
and
mov
outs
shl
aad
and
sub
sub
pop
and
loopne
push
ins
jge
sbb
hlt
lea
xchg
cs
mov
jmp
les
test
push
out
sbb
fs
popa
and
adc
stc
push
mov
and
sub
sar
(bad)
stc
or
sti
ror
jmp
inc
(bad)
xor
inc
adc
mov
push
or
cmps
icebp
cmps
in
add
push
arpl
fwait
(bad)
into
pop
jnp
add
pushf
(bad)
mov
and
in
cmp
in
dec
in
js
out
sbb
mov
out
js
push
popf
sahf
xor
pop
mov
inc
pushw
mov
jo
sub
lahf
jbe
mov
mov
call
or
xchg
cmp
adc
add
imul
shr
jne
ror
lahf
and
sub
and
pop
fsub
imul
inc
dec
xor
sbb
loope
adc
aaa
sub
jnp
mov
(bad)
jmp
sahf
sub
fcomp
xchg
mov
scas
mov
adc
imul
test
inc
sbb
out
jo
je
xchg
xor
sbb
mov
mov
jmp
or
mov
sbb
cs
push
jl
jmp
mov
or
mov
or
xor
cs
pushf
sbb
add
cs
jmp
or
jo
bound
sub
jae
adc
mov
jecxz
fcomp
cmps
test
jno
movs
fiadd
mov
add
xchg
pop
loop
push
cmp
iret
cmp
mov
das
pop
add
loope
cdq
adc
in
enter
fcomp
repz
mov
xor
pusha
push
cmp
xchg
leave
push
jle
imul
adc
pop
leave
xchg
test
in
sbb
les
sbb
adc
inc
inc
and
mov
fdivr
ret
mov
inc
cmp
repnz
add
int
scas
cmp
adc
jb
pop
sbb
pop
cmp
aad
outs
jecxz
daa
xchg
push
jne
call
ror
mov
mov
ja
aaa
inc
jne
fwait
sti
adc
(bad)
leave
(bad)
loop
push
das
pop
xor
std
inc
pop
jbe
mov
cmp
xor
or
stos
test
cmp
mov
push
ror
mov
pusha
ret
pop
in
and
sub
std
addr16
mov
stc
mov
cli
mov
xchg
pop
or
in
dec
sbb
dec
push
xlat
dec
mov
mov
fidivr
mov
stc
mov
jmp
add
inc
cmc
xchg
lock
mov
cmp
enter
(bad)
ja
aas
jae
push
out
sti
mov
sub
popf
jae
dec
sbb
jne
push
pop
jle
jae
pop
push
dec
sti
pop
in
push
jge
aad
push
in
gs
(bad)
add
fistp
outs
inc
or
test
adc
sar
mov
and
xchg
inc
int3
mov
aad
pop
mov
xchg
inc
cmp
inc
pop
mov
imul
scas
mov
lods
mov
inc
xlat
out
das
cmps
push
ret
and
ins
dec
mov
push
sbb
xchg
dec
ret
enter
jo
lock
xchg
xor
div
xchg
cli
imul
bound
push
int
bound
xchg
(bad)
adc
sub
das
into
push
ja
les
jp
(bad)
cmc
push
jmp
mov
cli
jmp
jno
add
jne
xchg
adc
inc
lea
dec
ss
xor
jns
rol
pop
cmps
jle
sub
sbb
outs
and
fidiv
repnz
xchg
jns
xchg
ret
ja
call
pop
stos
out
add
add
jmp
retf
and
ret
cmp
push
inc
clc
xor
pushf
adc
aam
iret
jo
cmps
and
mov
mov
push
rcl
sbb
xchg
inc
arpl
clc
jl
mov
mov
cmp
stc
jae
hlt
retf
shl
xor
or
xor
cmp
dec
jmp
push
mov
loopne
out
push
cwde
in
pop
inc
loopne
lods
inc
aas
inc
movs
call
xor
sub
sbb
lahf
fnsave
dec
mov
add
mov
xchg
test
fist
shl
lods
dec
aas
push
mov
push
or
push
push
or
rcr
sbb
inc
scas
lahf
call
lods
mov
add
lods
inc
ja
mov
out
cs
sbb
movs
xchg
push
xchg
fsub
les
pop
(bad)
pop
and
imul
(bad)
dec
mov
daa
dec
push
xchg
int3
dec
fisubr
pop
push
in
out
dec
cmp
pop
es
(bad)
adc
mov
inc
sub
ins
and
scas
les
lds
test
fdiv
add
frstor
ds
cmp
neg
mov
xor
jno
mov
xchg
test
movs
xchg
and
repz
mov
xchg
cdq
and
mov
or
jne
mov
cwde
jne
sti
mov
pop
cmp
xchg
jg
inc
fidiv
mov
cs
fwait
dec
fist
sub
lods
inc
test
or
outs
sbb
sbb
jno
xor
or
pop
mov
shr
movs
inc
ret
mul
test
mov
mov
sbb
mov
lds
inc
jae
xchg
pop
dec
aam
fs
(bad)
and
fcmovnb
rol
xlat
ss
or
sbb
popf
sbb
daa
jg
cwde
(bad)
lods
loop
cmps
in
mov
pop
push
and
repnz
push
es
xchg
mov
movs
outs
in
outs
jns
sbb
cmp
fmul
mov
inc
push
xchg
lods
retf
mov
xchg
mov
lds
outs
inc
dec
jo
mov
mov
adc
jle
(bad)
mov
pop
lea
nop
inc
xchg
test
cmp
push
mov
ss
stos
gs
cdq
jp
cmp
loope
sub
xchg
and
mov
mov
push
add
into
inc
stos
aaa
jno
fld
test
int
sub
inc
jnp
sub
fadd
mov
add
dec
call
xor
inc
jle
mov
dec
stos
xchg
ret
cmp
jl
mov
repnz
das
sub
jno
push
(bad)
xlat
add
in
out
shr
jmp
in
popf
inc
adc
fst
repz
sbb
idiv
out
popf
xchg
sbb
pop
inc
(bad)
mov
push
cs
push
fldcw
push
test
(bad)
cmc
(bad)
cmp
adc
loope
lods
inc
sbb
xchg
jnp
mov
nop
aad
jb
leave
mov
bound
xor
add
xchg
dec
in
push
mov
xor
fadd
and
in
sar
neg
add
cmp
mov
or
mov
mov
ja
inc
inc
cmp
sahf
std
mov
out
sub
jl
cli
fst
sub
pop
mov
in
popf
les
mov
push
(bad)
sbb
bound
pop
arpl
outs
cmc
pop
mov
xor
inc
clc
sbb
mov
shr
cmp
ficomp
jmp
aas
fcmovu
icebp
pop
cwde
fist
sbb
shl
jo
push
rcr
jns
mov
sbb
jecxz
aaa
in
inc
adc
jo
leave
sti
mov
mov
fild
sub
out
adc
mov
xchg
inc
mov
outs
jg
cmp
imul
jb
lods
push
pop
cdq
jle
ss
cmp
(bad)
sub
dec
test
shl
(bad)
jbe
rcl
dec
mov
xchg
out
mov
cmp
scas
bound
dec
jo
or
add
push
cld
jae
jbe
xor
sbb
adc
dec
div
sbb
(bad)
out
dec
sti
pop
add
fimul
test
pop
scas
mov
adc
jnp
xor
icebp
in
xor
sub
mov
sub
push
int3
(bad)
call
mov
add
nop
test
push
xchg
mov
rcr
mov
xchg
cwde
into
int
in
cld
js
sub
xor
sub
scas
fimul
leave
or
adc
addr16
mov
(bad)
push
inc
in
adc
adc
rcl
ret
aaa
retf
push
adc
jmp
in
adc
daa
shl
adc
lahf
lods
jmp
les
add
lock
sbb
mov
cld
pop
xor
and
pop
push
jo
jl
fstp
lods
sub
lea
push
mov
out
sub
pop
pop
cli
and
dec
imul
inc
(bad)
xor
xchg
into
ins
fucompp
test
sub
fistp
adc
mov
jae
sahf
jge
sbb
cwde
mov
or
xor
cdq
ror
xchg
sub
ss
mov
dec
push
jb
lea
or
mov
cld
es
adc
in
test
push
and
test
push
sub
mov
fld
(bad)
sbb
jp
pusha
dec
ficom
pop
push
xchg
loop
pop
or
test
push
mov
or
sub
inc
adc
(bad)
repnz
test
push
sbb
mov
xchg
inc
fnstcw
mov
iret
xchg
xchg
test
loope
arpl
clc
in
inc
lods
adc
iret
in
aad
jnp
or
inc
(bad)
lods
or
xchg
adc
push
jg
shl
icebp
int
sub
mov
add
xchg
pop
aad
fsub
scas
and
sbb
sub
mov
icebp
add
shr
dec
inc
sub
inc
xor
xchg
add
push
outs
loope
mov
scas
call
lods
std
ins
cmps
jne
sub
cli
push
jb
das
mov
leave
xor
(bad)
jns
mov
jb
cmp
xchg
xchg
sub
lock
adc
adc
push
cmp
inc
inc
jno
inc
fldenv
push
int
pop
push
cmp
outs
or
ja
and
arpl
mov
loop
mov
pop
cwde
nop
xor
inc
push
dec
loop
aas
cmp
mov
pop
add
sbb
aad
cli
cmp
adc
xor
cmps
sbb
dec
icebp
fstp
pop
xchg
push
stos
(bad)
dec
or
in
(bad)
lods
rcl
sbb
mov
or
or
sbb
mov
gs
popf
pop
gs
std
push
xchg
es
dec
fdiv
jmp
loopne
fwait
movs
cmp
pop
dec
adc
xor
mov
pushf
mov
adc
(bad)
outs
outs
sar
inc
test
pushf
push
adc
sahf
pop
push
ds
loope
xor
js
sub
xlat
scas
mov
sub
mov
and
xor
js
jge
shr
xchg
es
and
cmp
and
xor
es
in
cmp
retf
inc
pop
ret
push
inc
cmp
ins
fsub
xor
cmp
ds
mov
fcmovnb
add
dec
addr16
sub
push
fldcw
mov
and
(bad)
fimul
aad
mov
in
(bad)
sub
leave
jno
adc
test
or
fdiv
test
dec
push
pusha
das
push
clc
retf
aas
ficomp
mov
push
ds
mov
scas
push
cs
sub
fldcw
cmovg
xlat
pop
fs
(bad)
push
(bad)
sub
int
dec
in
pop
jmp
mov
dec
push
mov
and
add
sbb
sbb
aam
xor
or
mov
cmp
test
je
popa
or
pop
add
jne
les
mov
cdq
add
es
fistp
mov
pop
pop
xchg
scas
gs
sub
bound
pop
dec
(bad)
(bad)
jnp
jl
xchg
out
mov
xchg
test
stos
and
or
repnz
dec
push
inc
adc
bsr
mov
push
cmp
ret
pop
repnz
call
xchg
adc
adc
(bad)
push
inc
repnz
mov
rol
inc
add
cmp
enter
xor
(bad)
xchg
stos
dec
inc
mov
sub
or
mov
cld
sbb
mov
popa
add
sub
popf
or
cdq
add
jl
in
push
jnp
jmp
mov
cmc
movs
pusha
pop
pop
and
outs
dec
shl
es
adc
add
fdiv
or
clc
or
cdq
push
pusha
sbb
cmp
dec
movs
retf
sub
jno
sbb
stc
lahf
or
inc
add
data16
cld
(bad)
addr16
dec
push
pop
dec
call
mov
cmp
fsubr
jbe
lods
inc
push
inc
repnz
and
or
push
daa
sub
aaa
dec
dec
and
or
mov
mov
pop
fld
ins
push
dec
pop
inc
mov
(bad)
sbb
push
jmp
int
adc
sub
fistp
les
cmps
mov
daa
in
inc
sub
mov
cs
retf
aad
mov
ins
repz
sbb
jge
jmp
imul
in
sub
jo
dec
jl
icebp
mov
mov
or
mov
popf
jg
into
or
adc
jmp
loope
mov
fild
stc
lds
dec
inc
mov
out
int3
cmps
fldl2t
movs
test
dec
shr
pop
in
call
and
or
arpl
jns
fcmovnb
dec
pop
mov
cmp
test
mov
jmp
mov
out
dec
jge
add
xchg
pop
adc
pop
jns
jno
mov
cmc
ror
in
add
xchg
xchg
pop
in
leave
lods
loope
aas
cmps
dec
adc
fadd
dec
add
add
(bad)
iret
scas
jmp
xchg
dec
test
cwde
jp
pop
das
aaa
jns
popa
mov
xchg
or
push
xchg
mov
pop
sub
sbb
stc
push
fiadd
mov
mov
mov
fld
jb
arpl
shl
out
scas
icebp
stos
dec
add
pop
pop
xchg
or
ins
dec
mov
rcr
mov
sbb
fs
inc
cmps
(bad)
push
and
stos
pop
gs
rcl
test
push
test
or
and
xchg
inc
ror
or
sti
ins
popf
xor
stc
loopne
mov
and
jne
push
lods
add
adc
daa
stos
loop
dec
add
repz
pop
cmp
push
in
xor
jno
mov
jmp
cld
mov
mov
je
ror
mov
sbb
jb
test
sbb
std
sti
mov
lds
and
ins
mov
lea
rcr
jb
jae
mov
test
push
pusha
stos
imul
(bad)
hlt
xchg
inc
out
push
inc
imul
loope
push
stos
mov
cmovnp
jbe
or
int
xor
popf
mov
xchg
nop
xchg
mov
mov
pop
xchg
mov
iret
xlat
xor
mov
dec
sar
push
out
sub
push
shr
cmp
jmp
sbb
sub
leave
jbe
adc
daa
xchg
fcmovbe
jmp
jne
aas
mov
std
int
sub
cmps
xchg
pop
push
inc
cmc
imul
cdq
or
cli
pop
inc
aaa
popa
jecxz
addr16
inc
arpl
push
push
call
dec
push
or
inc
and
sub
mov
pop
setl
fmul
nop
mov
sub
test
leave
dec
test
into
div
lods
adc
hlt
repnz
repz
test
push
in
mov
add
xchg
in
fdiv
shl
add
adc
popa
call
mov
cmp
pop
gs
pop
loopne
pop
lods
jns
ins
or
test
cmp
retf
call
sub
in
sub
mov
dec
sti
sub
xchg
lods
push
sbb
pop
call
or
mov
ret
xor
cld
loopne
xchg
(bad)
or
js
dec
icebp
inc
shl
cwde
imul
mov
cmp
loopne
xor
aad
and
ret
nop
adc
mov
xchg
imul
stos
in
fcomp
xchg
in
call
mov
mov
cmc
jp
jmp
jo
jge
or
sbb
rcr
ja
xor
push
fs
add
mov
xchg
dec
ins
fcom
shl
adc
(bad)
into
loop
jecxz
push
pusha
int
xchg
sbb
sub
sti
add
stos
fucomip
loopne
ds
add
mov
or
adc
stc
rol
pop
mov
lods
mov
cmp
movs
mov
or
std
xor
jmp
loopne
scas
xchg
cmp
es
jne
sar
cmp
(bad)
loope
mov
loop
sub
xor
adc
data16
or
mov
scas
test
addr16
ret
movs
jle
retf
adc
mov
nop
cdq
pop
ret
pop
jmp
cmc
js
xchg
hlt
pusha
sub
repz
cmps
mov
mov
inc
cmp
cmp
pop
ins
push
sbb
mov
ins
mov
and
outs
dec
div
adc
int
sub
ja
das
mov
and
fwait
cmps
(bad)
pop
pop
ss
adc
add
jge
add
fs
aaa
test
hlt
jg
outs
xchg
add
mov
and
and
sbb
dec
ret
loop
mov
scas
in
and
loop
sub
(bad)
in
or
jb
push
or
imul
cmp
fs
xor
sar
pop
stc
in
fnstcw
cmc
aam
pop
ficomp
dec
mov
aaa
fwait
xchg
mov
mul
sahf
sub
mov
and
lds
sbb
inc
test
mov
jae
test
rcr
in
icebp
in
jbe
(bad)
sub
jmp
push
push
clc
das
cmc
jne
jb
ins
xchg
sbb
fs
cmp
sbb
pop
push
in
push
or
mov
fmul
movs
sub
clc
fnstcw
mov
test
push
loop
pop
push
or
cmp
not
call
and
cmp
push
mov
or
pop
adc
mov
(bad)
mov
cmps
mov
and
mov
pcmpgtw
mov
sub
aam
pop
add
outs
push
mov
and
xor
sar
mov
mov
pand
int
pop
dec
cs
adc
nop
inc
adc
add
div
inc
and
mov
mov
cs
iret
or
call
int
scas
ja
jecxz
push
mov
cmp
ja
les
mov
mov
xchg
and
adc
pop
pop
jb
dec
cmc
mov
xor
dec
add
(bad)
call
loopne
js
xchg
rol
shr
shl
fcmovb
sar
cmp
pop
adc
sahf
test
push
(bad)
add
ins
push
fist
mov
dec
movs
in
sahf
jnp
inc
fxch
mov
add
fs
icebp
inc
mov
dec
sub
test
int3
nop
and
or
or
cmps
not
dec
add
pushf
pusha
push
add
cmps
shl
into
jo
cdq
lods
mov
jnp
xchg
das
ds
push
(bad)
into
mov
sub
xchg
mov
and
cmps
cdq
cmp
mov
cmp
adc
cmps
cmp
cmp
sub
out
mov
sbb
stos
pop
xchg
mov
out
repnz
sbb
pop
in
movaps
xor
jp
mov
and
sahf
dec
xchg
stos
inc
mov
mov
imul
mov
clc
nop
inc
dec
mov
adc
fwait
clc
xchg
cli
xor
loope
in
mov
ds
aaa
jecxz
cld
xchg
ds
into
repz
sbb
xlat
outs
push
or
call
adc
jge
movs
cdq
pop
idiv
sbb
sahf
out
xor
cdq
add
in
fst
pop
js
cmps
push
mov
ss
jo
sbb
and
data16
stc
jp
cmp
and
retf
jecxz
cmp
sbb
dec
pushw
push
fs
sub
inc
cmc
fiadd
lock
cmps
in
inc
inc
cmp
fsub
jb
xor
retf
cmp
adc
mov
xchg
jo
mov
jbe
push
out
sbb
shl
cmp
scas
iret
push
mov
or
push
xchg
fcom
sbb
xchg
and
xor
push
in
sahf
xchg
loope
mov
or
nop
pop
sbb
xchg
arpl
test
rcl
xchg
fidivr
movs
bound
xor
in
adc
xchg
aad
stos
popf
or
je
mov
inc
ret
bound
sbb
cmc
lahf
pop
lahf
je
out
imul
xor
test
xchg
push
iret
cmp
inc
cmp
scas
xlat
xchg
xlat
in
add
dec
jb
test
imul
ss
mov
cmp
add
call
jns
cmp
jg
jae
xor
popa
mov
mov
sbb
cmps
pop
mov
fnstcw
std
sbb
cmp
jo
les
pop
push
iret
rcl
into
out
mov
and
jbe
jp
int
adc
(bad)
xor
test
mov
stc
pop
inc
ds
mov
push
je
add
mov
pop
scas
retf
ret
cmp
adc
sub
arpl
cmp
js
xchg
mov
or
adc
jmp
test
cld
lahf
add
jge
mov
adc
dec
cmp
xor
jge
call
sar
in
inc
movs
add
push
aaa
nop
xchg
cmc
push
test
jmp
jl
xchg
xor
cs
dec
loop
in
xchg
cmp
int3
popf
inc
fsub
int3
xchg
out
(bad)
repnz
(bad)
cmc
inc
adc
and
jnp
adc
pop
and
mov
xchg
shl
mov
jb
scas
in
repnz
ror
and
iret
mov
mov
mov
in
sbb
mov
pop
lods
pop
cwde
push
inc
es
mov
adc
je
jecxz
pop
test
sbb
jno
add
add
fs
push
mov
test
fcmove
adc
xchg
or
jo
loopne
mov
push
jge
ss
pop
ds
mov
sub
sub
sub
dec
xchg
xor
sub
aas
idiv
push
dec
xchg
dec
lods
inc
mov
ds
mov
mov
cdq
lahf
test
cmp
xchg
mov
jmp
jp
(bad)
js
sub
lea
inc
iret
push
repnz
movs
xor
bound
jne
repz
daa
mov
test
dec
or
fwait
jp
cmovle
loop
push
ja
arpl
push
sbb
fcomp
mov
mov
pop
fwait
inc
test
add
pop
xlat
mov
and
call
(bad)
mov
push
js
jo
movs
pop
mov
ja
loopne
dec
test
jp
mov
mov
enter
cdq
mov
xchg
sub
es
sar
je
and
pop
rol
sti
test
jp
enter
sti
sbb
fisub
out
repz
imul
push
ret
(bad)
inc
mov
adc
mov
mov
enter
mov
dec
mov
and
daa
mov
add
adc
lods
sbb
sub
ds
in
mov
xor
arpl
xor
movs
out
stc
sti
mov
jbe
inc
arpl
ret
push
ud2
imul
dec
mov
daa
push
add
or
in
jmp
sub
xor
mov
sbb
mov
pop
int3
xchg
gs
cmp
dec
dec
jo
or
rcl
mov
push
ret
rol
cmp
rol
mov
cmps
xor
sbb
(bad)
popf
and
cmp
jns
jno
cmp
inc
jecxz
neg
mov
movs
cwde
cmc
jmp
mov
mov
jmp
call
cmp
cli
pushf
dec
push
hlt
jmp
gs
hlt
cmp
cwde
pop
scas
dec
dec
int3
loop
stc
bound
or
mov
mov
iret
fisubr
cmp
js
(bad)
push
hlt
daa
aaa
inc
or
mov
add
(bad)
ret
mov
lahf
sub
push
mov
icebp
inc
inc
jmp
push
pushf
push
mov
pop
lock
push
inc
sbb
adc
sti
mov
mov
ror
mov
cmp
fidivr
stos
dec
lods
aaa
jl
loope
mov
addr16
push
ja
pusha
scas
mov
test
or
fsubr
iret
xor
and
xor
xchg
pop
sbb
or
mov
stc
test
adc
pop
mov
rol
and
mov
sbb
adc
inc
(bad)
ficom
aam
pop
add
clc
cmp
retf
ins
sbb
add
or
repz
cmp
adc
adc
jno
movs
test
outs
cs
push
inc
cmp
fbstp
out
sub
loopne
xor
dec
inc
mov
cmp
retf
fnstsw
lods
cli
xor
mov
push
aaa
push
lds
data16
cs
dec
xchg
push
int
pop
push
mov
jb
pop
out
cmp
sub
add
jne
cmp
test
jns
sbb
xor
shr
lea
pop
cld
jo
xor
(bad)
call
pop
inc
jmp
lea
leave
or
pop
inc
outs
push
dec
dec
cwde
xchg
and
inc
mov
(bad)
loop
aaa
into
sbb
mov
stc
stc
or
mov
push
aas
cld
or
pop
xchg
jp
push
repnz
rcl
fidiv
out
sub
in
popf
pop
xchg
push
scas
cmps
inc
mov
test
rcr
pop
pop
repnz
imul
or
movsx
lock
add
lea
xchg
jp
in
lahf
xor
adc
push
aam
sub
mov
fistp
mov
cmps
jle
rcl
and
mov
inc
sub
out
push
xor
fld
aaa
push
outs
push
dec
lahf
dec
jge
rol
pop
test
lds
inc
rcl
popf
adc
jb
pop
and
sahf
(bad)
sbb
movs
test
mov
or
cmp
inc
pushf
iret
cli
cmps
add
mov
ins
or
mov
adc
add
dec
push
dec
sub
outs
inc
mov
sub
xchg
cmp
popf
inc
cld
rcr
mov
test
lahf
repnz
shr
jle
xchg
xchg
call
dec
xor
lods
push
call
lock
mov
push
add
dec
fprem1
mov
pushf
mov
loopne
hlt
fwait
mov
aaa
dec
js
xchg
lods
cwde
jb
lods
add
(bad)
bound
fld
dec
outs
inc
cmp
stos
mov
cld
mov
jge
nop
push
inc
out
add
shl
movs
xor
sbb
pop
mov
jg
lahf
dec
test
cli
loope
sub
jmp
aam
ret
sar
cwde
xchg
dec
adc
addr16
(bad)
mov
xchg
in
or
(bad)
int
les
fld
arpl
xor
mov
retf
movs
pop
adc
stos
fld
inc
mov
sbb
scas
pop
jns
lea
gs
repz
ins
pusha
ficomp
sbb
and
rol
mov
clc
retf
ins
aas
and
jp
fs
dec
sbb
dec
sbb
mov
add
mov
movs
mov
adc
call
pop
(bad)
bound
repz
push
ds
pop
sar
xchg
pop
cmps
ins
fidivr
aad
and
fs
add
repz
fld
pop
pushf
das
neg
pushf
and
les
mov
je
dec
lahf
jl
mov
icebp
jle
or
sub
xor
cmp
ins
aaa
es
adc
ins
lahf
mov
mov
inc
and
inc
push
and
or
lock
cli
or
xchg
test
mov
jns
cdq
adc
cld
shl
mov
int
mov
das
jecxz
pop
stos
adc
out
or
daa
jno
ins
mov
daa
add
push
or
js
stos
mov
adc
loop
jmp
ins
fidiv
pusha
inc
dec
out
pop
add
cdq
pusha
movs
cdq
ja
sbb
in
mov
jle
daa
pop
cmp
(bad)
jg
sbb
mov
mov
pushf
push
xchg
mov
add
loopne
xchg
mov
mov
into
inc
push
mov
aaa
pusha
shl
test
outs
dec
sbb
cmp
sub
outs
in
push
in
neg
pop
popf
outs
in
fsub
(bad)
inc
fist
adc
xor
jg
pop
es
mov
jb
mov
push
sub
xchg
mov
test
in
mov
mov
push
pop
or
fwait
jmp
sbb
fisttp
push
xchg
jge
(bad)
ja
xchg
xchg
rep
in
aad
and
fadd
shr
les
(bad)
dec
test
jo
ret
(bad)
xchg
sbb
icebp
in
fisub
call
push
leave
mov
subps
repnz
push
out
inc
icebp
adc
mov
dec
pop
cwde
xchg
add
dec
jno
outs
adc
mov
adc
cli
jbe
sub
xchg
jns
jl
xchg
ja
jl
xchg
adc
aas
jno
into
lods
inc
jnp
push
pop
adc
inc
dec
and
xchg
imul
loop
cmp
daa
stc
inc
jns
sahf
inc
push
loopne
mov
xor
out
cmp
lods
jle
pop
jp
into
pushf
push
stos
movs
mov
mov
mov
mov
sub
jns
sbb
cmp
fstp
daa
xchg
add
xchg
leave
add
xchg
jnp
arpl
ins
fwait
sbb
leave
jge
pop
test
pop
fiadd
dec
call
(bad)
jmp
add
pop
sbb
pop
in
xor
gs
add
xchg
dec
xchg
and
ds
in
push
fbld
jno
sbb
(bad)
call
sub
loop
repnz
loope
aad
adc
xor
ror
pop
add
cld
inc
and
add
dec
or
pushf
clc
in
sbb
loop
in
push
(bad)
repnz
inc
or
xchg
pop
pushf
jnp
push
sysexit
js
push
(bad)
pushf
ficomp
(bad)
cmps
imul
sub
cwde
les
push
scas
test
rol
and
popf
push
add
mov
fwait
movs
sub
jns
push
and
pop
pusha
test
push
test
push
ins
or
outs
movs
mov
jb
adc
add
rol
lods
jecxz
aad
and
adc
pop
cmc
dec
dec
sbb
pop
mul
push
je
popa
loopne
adc
xchg
xchg
call
push
pop
mov
ds
in
sti
xchg
not
stc
push
ret
mov
jge
and
jae
sti
push
test
fist
fadd
xor
jbe
jbe
fnsave
loop
cmp
cmp
rol
jp
movs
lods
dec
stos
call
lods
aad
cdq
das
push
jg
xchg
cmp
daa
inc
add
imul
mov
aam
je
mov
adc
enter
mov
(bad)
movs
sub
mov
push
mov
xchg
push
sahf
xor
add
cmp
icebp
imul
push
stos
sub
push
jp
sbb
imul
cmp
sbb
out
pop
aaa
ins
jmp
xor
pop
xchg
jbe
xchg
jbe
cmp
sub
inc
icebp
xor
dec
pop
pop
std
daa
jmp
or
rcr
int3
cli
cmps
repnz
pop
outs
cmp
mov
mov
ja
test
and
xchg
add
fwait
dec
xor
push
inc
push
fwait
adc
retf
cli
push
(bad)
add
mov
movs
mov
xchg
in
out
outs
in
mov
xor
sti
dec
imul
lods
nop
test
mov
sbb
adc
or
add
inc
jb
jmp
sahf
xchg
add
adc
fwait
jnp
loopne
push
mov
out
fist
xor
mov
cmp
xor
or
cmps
test
mov
jns
ror
popa
xlat
int
push
enter
push
mov
jge
mov
out
sub
and
in
loopne
call
ja
lods
popf
sub
sbb
push
xor
or
jo
push
les
sub
pop
add
aad
jmp
ss
out
repz
inc
stos
or
sbb
(bad)
sub
sub
adc
idiv
dec
cmps
mov
test
or
ret
stos
clc
imul
jns
in
inc
ror
and
and
cmp
jmp
inc
push
sub
stos
pop
xchg
cmc
cmp
pop
sbb
icebp
and
push
movs
pushf
sbb
int
popa
jmp
fcomp
sub
push
(bad)
push
das
stc
fnstenv
fucomi
sub
cmc
push
fwait
in
ins
aaa
cmps
pop
mov
mov
mov
xor
adc
mov
add
cmp
mov
or
sub
mov
and
je
std
imul
sub
daa
icebp
inc
cld
les
mov
cs
push
adc
clc
retf
fcomp
dec
xchg
in
test
dec
xchg
or
outs
stos
ficom
lsl
and
jb
add
fwait
fs
dec
xor
sbb
ja
pop
push
mov
xor
push
jge
pop
adc
mov
jno
push
and
push
cmp
push
test
sti
dec
xor
(bad)
or
push
out
or
lds
int3
ins
dec
ja
xchg
enter
in
mov
push
xor
mov
pop
in
push
mov
jge
out
mov
ficomp
jl
mov
push
mov
pop
and
sbb
sbb
push
cmp
dec
or
push
adc
(bad)
jmp
mov
or
and
jp
mov
lahf
xor
sahf
or
mov
inc
or
xchg
cs
fistp
cmps
movs
enter
push
jnp
mov
cmp
out
xchg
aad
shr
shl
leave
aam
jne
jne
mov
int
out
popa
mov
nop
mov
jmp
xlat
scas
(bad)
pop
adc
jb
movs
sbb
fild
dec
test
cmps
nop
mov
add
pop
call
dec
xor
push
aaa
adc
imul
stos
mov
cdq
jnp
nop
sbb
paddsb
mov
pushf
pushf
xor
shr
bnd
pop
xchg
jecxz
mov
popa
jne
cs
scas
jmp
xor
lea
or
xor
or
mov
dec
pop
rcl
xlat
mov
jmp
push
mov
push
rcl
lahf
cmp
imul
mov
add
jno
jge
and
(bad)
dec
sbb
push
jb
gs
fwait
sub
push
cmp
cmp
aad
mov
pop
push
jp
fs
mov
pop
mov
loop
sub
aad
sub
not
lea
(bad)
(bad)
mov
dec
or
mov
dec
ins
add
daa
std
mov
cmp
mov
cmc
push
jge
scas
jg
shl
xchg
mov
mov
mov
jge
rcl
cmp
cmps
pushf
lods
inc
xlat
xchg
xchg
lods
mov
dec
add
loopne
pop
mov
xor
push
xchg
fcmovne
cmp
xor
xor
loope
mov
sub
aad
jo
daa
cmp
jbe
xchg
and
into
mov
addr16
(bad)
jb
xchg
mov
inc
loopne
outs
or
push
dec
gs
in
imul
bound
push
aad
aad
dec
sti
add
stos
scas
mov
aaa
jb
cs
mov
into
mov
add
and
mov
mov
pop
push
xchg
and
adc
mov
jge
and
mov
adc
mov
jae
add
ins
add
ret
imul
arpl
and
gs
repz
sti
movs
test
dec
or
clc
(bad)
ja
ret
or
xlat
scas
mov
and
loope
or
mov
pushf
mov
(bad)
cmps
push
fidivr
out
sub
jb
test
sub
push
push
cld
cmp
fadd
jp
cld
xor
xor
call
ret
cmc
pop
lods
jne
dec
js
push
push
adc
push
add
mov
push
loop
data16
rol
cli
ficomp
xchg
cdq
popf
mov
inc
(bad)
mov
dec
pop
xor
arpl
jnp
push
mov
xchg
rcr
pop
pop
jno
push
mov
in
and
mov
cmp
dec
push
test
loop
and
sbb
inc
ds
mov
jae
lds
out
jns
in
push
cmp
repnz
mov
mov
aad
adc
push
rol
and
int3
cmc
xchg
xor
call
jecxz
call
je
hlt
mov
data16
and
je
enter
outs
inc
fist
fadd
inc
jnp
test
pop
dec
adc
aam
and
aad
xor
(bad)
sar
aas
dec
fisttp
push
jne
fsubr
push
out
and
in
stc
or
frstor
xchg
out
push
jno
mov
iret
outs
das
cmps
push
sti
dec
in
imul
fst
nop
psrlw
ss
or
jmp
imul
xchg
sbb
sub
push
and
jg
icebp
xor
adc
fs
xchg
jle
inc
arpl
neg
sahf
stos
or
and
cmp
adc
fcom
push
jb
aad
cmps
test
cmp
gs
pop
dec
out
pop
jbe
dec
jmp
adc
ret
retf
and
aad
ret
add
mov
jne
nop
cwde
es
xchg
not
xchg
repnz
inc
sub
test
mov
push
mov
leave
nop
or
sbb
movs
add
fild
ret
pushf
stos
repz
inc
jge
xchg
lahf
add
test
lock
inc
sub
stos
outs
pop
ins
stc
daa
iret
call
outs
dec
call
js
lds
lea
mov
xor
xchg
popf
xor
fwait
shl
int3
outs
push
retf
and
push
xchg
dec
retf
jp
or
retf
jb
adc
dec
stc
add
xor
sub
push
arpl
sbb
bound
data16
fild
jno
push
jmp
mov
jl
dec
mov
push
iret
bound
stc
inc
mov
push
mov
or
push
cwde
retf
sub
lods
repz
sub
or
int
addr16
out
push
ins
sbb
mov
cmp
sub
icebp
pop
int3
xchg
xchg
ror
jmp
or
inc
movs
sub
imul
movs
sub
mov
ins
xchg
in
out
jge
jo
cmp
xchg
mov
mov
in
leave
inc
and
inc
aam
mov
sbb
test
mov
pop
lea
(bad)
daa
push
stos
js
pop
repz
dec
leave
xchg
es
lods
mov
out
xchg
inc
and
and
adc
xchg
pop
dec
icebp
ja
jbe
mov
repz
mov
ja
lods
mov
mov
clc
adc
rcl
xor
out
mov
jl
sub
pop
jecxz
das
and
pushf
add
aas
scas
and
pop
sbb
icebp
loopne
mov
cld
xor
sbb
mov
and
imul
adc
or
or
repz
and
xor
fstp
mov
js
sbb
add
aad
out
push
es
xor
das
cmp
rol
cmps
push
enter
mov
jmp
jmp
sub
adc
jge
pop
sbb
mov
dec
ror
scas
sbb
dec
cld
retf
jp
sar
adc
pop
in
mov
inc
sub
inc
push
cmp
mov
mov
adc
out
adc
lock
stos
pop
lahf
sbb
push
cmps
or
sbb
xchg
aas
sub
inc
int
pop
push
mov
inc
xchg
xchg
(bad)
adc
into
(bad)
mov
cmp
jg
mov
dec
pop
popf
pop
sbb
mov
or
xchg
cwde
xchg
mov
add
jle
mov
jbe
call
xchg
and
push
adc
and
dec
inc
das
cld
std
or
idiv
addr16
jle
push
popf
scas
repz
mov
jmp
mov
mov
addr16
(bad)
(bad)
clc
ror
dec
int3
imul
pop
cmc
in
pop
mov
inc
mov
push
ins
out
and
das
push
adc
mov
cmp
push
ins
and
or
out
addr16
adc
mov
push
xchg
mov
mov
movs
push
arpl
ficom
mov
adc
push
nop
addr16
not
(bad)
cmp
mov
pop
add
aaa
and
imul
push
mov
(bad)
aas
lods
jge
sbb
out
cmps
idiv
jle
dec
inc
xor
jecxz
add
test
cli
dec
dec
pop
sti
jbe
pop
inc
(bad)
retf
lahf
(bad)
and
jnp
mov
xor
sbb
out
data16
inc
add
and
dec
push
das
out
dec
test
jbe
(bad)
jg
xor
pop
inc
inc
mov
sbb
(bad)
add
inc
outs
lds
shl
cmp
pop
loope
cs
xor
loopne
jmp
mov
mov
adc
add
and
movs
xlat
cmps
pop
call
in
mov
add
test
mov
push
xor
call
pop
iret
test
push
test
bnd
test
or
jg
lds
add
mov
pop
jo
dec
jno
push
pop
sbb
xchg
jmp
rcr
jge
in
xchg
xor
loope
mov
stos
rol
push
cmp
xor
push
out
mov
shl
pop
ds
adc
sub
adc
mov
or
pop
out
scas
in
jb
inc
shl
dec
jnp
or
push
mov
sub
inc
sub
cmp
ret
xor
xchg
test
retf
aam
std
fnstcw
aas
ins
mov
cmp
pop
cdq
xchg
lods
cdq
ja
jno
loopne
dec
in
adc
jae
dec
aam
cmp
loope
jnp
xor
loopne
pushf
je
out
sub
outs
fdivr
push
inc
test
mov
popf
push
cld
bnd
test
je
sub
or
or
repz
xchg
in
std
fwait
stos
push
add
xor
push
out
jno
xchg
xchg
jecxz
mov
lahf
fdecstp
stos
xor
cmp
add
test
and
sbb
sbb
sub
xchg
mov
stc
or
(bad)
lods
stos
stos
loopne
call
cmp
xchg
aam
popf
pop
aaa
call
mov
cmps
mov
inc
mov
mov
leave
cs
(bad)
sub
int
cmp
sub
ret
in
or
and
sub
inc
dec
pop
or
stc
jbe
ret
push
sbb
adc
test
sbb
inc
xchg
(bad)
out
push
add
jge
pop
ja
sbb
cmps
adc
shl
dec
int
xchg
pop
fadd
jb
push
fcomp
pusha
dec
and
movs
jno
icebp
and
movs
pop
sbb
add
int
add
and
lock
outs
ja
sar
js
pop
inc
jp
lods
stc
inc
repz
mov
retf
dec
push
xchg
ja
xor
mov
add
fst
sbb
mov
lods
inc
addr16
jl
mov
mov
popa
adc
dec
mov
popf
xor
mov
fwait
dec
sbb
inc
xor
xchg
shl
test
ins
push
xchg
ds
mov
sub
dec
in
and
sbb
leave
lahf
mov
sub
xchg
aaa
inc
mov
cld
push
loop
loope
dec
sub
push
imul
in
xchg
call
out
ror
daa
fs
and
cmp
dec
or
aam
(bad)
sar
cmp
jge
(bad)
sti
add
adc
in
cwde
jg
mov
mov
loop
aas
mov
xchg
add
mov
mov
arpl
fwait
pusha
inc
xor
sub
or
outs
stos
xchg
pop
add
pop
das
jnp
jp
mov
gs
out
pop
xchg
pop
pusha
push
retf
fbstp
xchg
shr
mov
jmp
push
aad
or
repz
mov
cmps
push
sahf
mov
fwait
jmp
int
out
ret
ret
lods
(bad)
jge
and
add
pop
push
push
call
jae
push
sub
jae
cmp
inc
jne
loopne
add
xor
sbb
scas
xchg
jns
or
cmp
mov
scas
scas
lods
push
scas
jmp
jnp
sbb
dec
mov
add
sbb
mov
mov
cmps
jbe
push
cmp
imul
in
or
adc
jmp
or
and
lea
inc
imul
mov
out
call
test
ret
lods
(bad)
into
out
in
js
sub
sbb
or
jno
bound
xchg
sub
sbb
push
scas
out
mov
sbb
ja
imul
mov
js
call
inc
hlt
mov
add
add
not
arpl
pusha
rol
shr
xor
lods
ror
mov
movs
sub
sub
dec
push
jns
std
imul
push
sti
jmp
int
scas
ret
jbe
pusha
nop
jmp
sbb
hlt
adc
mov
aas
ret
mov
pop
mov
mov
push
call
sub
inc
pop
movs
push
fnstcw
test
push
in
add
mov
push
cmc
ret
pop
lods
adc
sub
sub
outs
pop
pop
push
inc
sbb
cdq
inc
cdq
bound
shl
mov
cmp
pusha
out
pop
inc
mov
or
cmp
lds
jle
stos
sub
adc
jp
in
push
push
repz
aad
inc
jo
jmp
jecxz
das
hlt
add
adc
call
and
push
add
xchg
fisubr
xor
mov
jae
xchg
cmp
leave
mov
je
(bad)
xor
push
(bad)
test
ja
dec
or
aaa
dec
xchg
mov
ret
mov
push
mov
inc
pop
add
mov
pop
out
clc
in
sbb
fwait
push
cmc
lods
mov
jbe
cmp
mov
mov
nop
xchg
inc
sbb
int
call
mov
cwde
lods
int3
mov
sub
pop
inc
push
cld
xor
loope
push
popa
jbe
inc
xor
outs
bnd
rcl
xor
fs
inc
mov
pop
cs
mov
cmp
gs
or
or
imul
nop
push
ja
and
outs
sub
les
pusha
mov
aaa
pop
iret
or
mov
mov
rcl
xor
dec
retf
xor
or
adc
cs
loopne
out
cwde
fwait
inc
jmp
(bad)
jle
rol
sbb
mov
pop
rcl
jo
js
mov
mov
inc
or
cmc
je
push
jbe
scas
and
dec
mov
lods
xor
fidiv
mov
push
jmp
movs
dec
xor
retf
push
test
add
push
jge
hlt
mov
jecxz
repnz
jmp
fistp
mov
add
adc
bound
xor
jae
addr16
(bad)
lods
jge
xchg
mov
leave
jl
adc
mov
dec
hlt
cld
ret
xchg
pop
aaa
(bad)
cld
sahf
jg
aas
fld
jmp
fbld
popa
sub
inc
xor
pusha
lods
jne
test
sbb
sahf
cmp
(bad)
mov
jmp
xor
enter
fisubr
mov
test
sub
loop
adc
leave
jle
push
stc
es
add
cmp
aad
pusha
inc
retf
sub
int3
mov
loopne
adc
loope
mov
or
jg
je
mov
scas
push
mov
or
in
cmp
cmps
ss
or
jl
popf
sub
jle
jecxz
lock
inc
lds
js
adc
fidivr
les
sub
mov
pop
inc
and
js
haddpd
std
leave
xchg
lock
stc
sub
stos
aam
add
pusha
mov
and
and
ret
imul
cs
enter
les
pop
out
pop
inc
mov
int3
and
rol
xchg
pop
iret
or
das
popf
arpl
ds
shr
cmps
loope
pusha
cmc
js
and
mov
js
pop
sub
and
push
aad
add
dec
add
(bad)
ret
sub
dec
pusha
adc
push
xchg
jle
xor
addr16
inc
in
sahf
sub
or
pop
add
aam
(bad)
mov
xor
pop
es
push
stc
mov
xchg
stc
xor
jmp
mov
loope
inc
mov
and
(bad)
sub
imul
push
into
rcl
loop
out
add
pop
out
std
inc
or
not
add
(bad)
fcmove
stos
xchg
add
das
push
movs
cmps
ds
push
pushw
stos
jo
jle
mov
pop
mov
int
call
pop
or
ret
clc
stos
hlt
(bad)
ins
xor
das
(bad)
mov
lods
pushf
pop
inc
dec
add
jmp
mov
adc
adc
scas
pusha
and
cmps
daa
add
push
jmp
xor
xor
ret
mov
(bad)
(bad)
mov
push
test
into
and
hlt
loopne
es
mov
and
sub
call
and
mov
loopne
ds
jle
mov
test
mov
and
cmps
pop
cmp
enter
shl
add
push
hlt
sub
pop
sbb
sti
adc
daa
in
push
xchg
mov
xchg
dec
mov
or
fadd
cwde
js
sbb
cmp
fwait
jno
dec
add
add
sahf
xchg
push
xchg
jb
inc
test
leave
repz
and
aas
sbb
mov
jecxz
(bad)
mov
loopne
mov
int3
test
or
add
add
push
test
mov
mov
xor
mov
je
daa
ins
pushf
xchg
pop
scas
sbb
adc
aam
das
cdq
mov
mov
dec
(bad)
out
out
adc
jne
inc
leave
addr16
pop
sub
test
adc
ret
daa
adc
das
aam
inc
and
cmp
loopne
cmp
mov
js
lods
mov
out
and
lahf
ss
in
xchg
bound
jge
sbb
jnp
jmp
or
jmp
push
xor
jle
std
pop
lods
pop
mov
pusha
or
and
bound
loopne
push
call
jle
outs
mov
daa
fs
jbe
pusha
ret
nop
popa
out
cld
jl
cmp
cs
in
jno
or
jecxz
imul
jmp
adc
mov
sbb
mov
lock
scas
rcl
push
out
jae
mov
fbstp
mov
ficom
outs
adc
mov
std
(bad)
mov
lods
lds
xor
outs
pop
mov
xchg
push
mov
jmp
pop
pop
test
sub
daa
lock
pop
lods
mov
test
adc
mov
ret
xchg
inc
call
sbb
mov
inc
icebp
call
mov
ins
jecxz
cwde
lahf
popa
scas
and
sub
push
sbb
(bad)
mov
movs
mov
push
dec
adc
or
inc
imul
cmp
outs
or
adc
call
and
adc
inc
in
push
shl
lods
mov
ds
mov
(bad)
aaa
jmp
jmp
je
mov
jg
pop
ret
adc
xor
sbb
jmp
adc
and
imul
mov
aad
ss
pop
stos
mov
mov
mov
jnp
fimul
outs
imul
test
in
cmp
cmp
or
retf
leave
bound
jno
leave
dec
push
adc
hlt
in
stc
imul
mov
mov
test
mov
movs
mov
adc
(bad)
mov
xor
adc
loop
movs
stos
leave
sbb
or
xor
aas
jno
pop
mov
icebp
mov
mov
and
aaa
dec
push
daa
mov
cvtps2pi
leave
lds
pushf
push
or
inc
rcl
enter
xchg
mov
rol
sbb
jno
arpl
fwait
push
ins
lods
push
or
push
cdq
mov
cld
inc
jmp
leave
js
cmp
xchg
dec
pop
int3
jmp
ja
cmp
xor
ror
mov
in
pop
sbb
hlt
and
jnp
test
mov
int3
je
jbe
mov
bound
adc
jg
inc
xor
les
mov
daa
adc
rcr
push
loope
mov
movs
cs
daa
sbb
xor
jmp
(bad)
dec
adc
shl
or
sub
scas
fistp
or
push
in
and
xchg
enter
out
dec
leave
fmul
dec
push
pop
popf
push
push
pop
(bad)
in
sbb
ret
int
jecxz
ja
leave
pop
das
fnstsw
cmp
inc
stos
out
mov
cmp
(bad)
xor
add
in
hlt
mov
out
outs
inc
stos
retf
ret
add
pop
inc
daa
mov
sbb
pop
pop
scas
push
dec
jmp
inc
mov
jecxz
pop
pop
xchg
cmp
scas
movs
or
pop
(bad)
xchg
push
cmps
push
mov
push
nop
pop
add
rcl
shl
and
(bad)
fdivr
test
addr16
jp
clc
pop
bound
dec
loope
out
dec
mov
es
sub
jg
jne
add
jg
add
jno
xchg
bound
lahf
nop
inc
jnp
ja
in
push
das
jo
stos
jmp
sar
pop
cli
add
repz
cmp
push
aas
das
fcomp
fbld
add
or
cld
sbb
sub
popf
(bad)
pop
cli
inc
lods
fucom
aas
ret
inc
mov
and
mov
jge
cli
jl
pop
aas
xor
sbb
cmp
xor
sbb
xchg
movs
mov
std
dec
or
pop
shr
js
or
leave
push
push
add
push
xor
push
loop
ud0
stc
mov
jge
scas
jecxz
or
(bad)
and
retf
or
rcl
lsl
outs
adc
fwait
mov
add
push
pop
and
sub
xlat
test
into
add
hlt
and
push
jg
inc
ret
shl
add
inc
test
popf
sub
jmp
push
ins
repnz
pop
enter
sbb
pop
clc
je
and
xlat
bound
(bad)
push
mov
jae
ja
xchg
jge
fmul
xor
aam
test
daa
push
mov
pop
pop
push
sub
nop
jbe
pop
dec
and
push
dec
ins
sub
mov
mov
mov
push
cmp
xchg
cmp
ss
pusha
sbb
xchg
addr16
and
pusha
cmp
pop
and
jge
xor
stc
dec
dec
sub
jp
enter
pop
mov
jp
dec
add
sub
loope
out
lods
cld
cmp
cmp
scas
leave
scas
mov
push
inc
stos
cmp
or
add
pop
push
out
cmps
test
out
mov
sub
push
push
shr
mov
mov
(bad)
mov
mov
in
call
inc
xor
mov
pop
imul
jle
sti
and
cmp
xlat
pushf
jo
inc
xor
push
outs
sub
dec
mov
js
push
sti
sbb
(bad)
out
dec
add
cmp
inc
repz
jmp
push
jb
jmp
pop
mov
sbb
ins
jl
mov
pop
fistp
inc
shl
inc
push
call
xchg
mov
rep
add
outs
outs
add
push
fisub
push
in
inc
repz
jno
(bad)
loop
push
cmp
push
hlt
xor
jecxz
push
and
jg
adc
outs
xchg
(bad)
pop
nop
mov
out
xor
test
inc
mov
push
sbb
mov
aam
test
push
add
or
dec
out
in
lahf
jnp
sub
xor
into
xchg
test
shr
fld
add
test
jmp
stc
xchg
add
in
cmp
int
movs
aad
and
cmc
cbw
movs
jo
push
ret
sbb
sbb
sbb
jmp
mov
mov
or
gs
popf
adc
hlt
mov
mov
push
mov
adc
push
iret
call
fisub
fstp
aaa
adc
dec
cmp
jmp
mov
ds
test
stc
dec
(bad)
out
pop
rcr
fnstsw
fbld
push
pop
fild
inc
movs
jmp
out
mov
popf
sbb
shr
push
das
rol
outs
int
into
add
mov
shr
daa
in
cmp
iret
xchg
enter
inc
popf
push
test
adc
sbb
pop
repz
and
mov
jbe
dec
dec
jle
ins
loope
ret
js
rcl
inc
or
cwde
jbe
inc
scas
iret
dec
mov
(bad)
jo
cmc
nop
repz
push
fwait
test
xlat
mov
xor
std
inc
mov
cld
lock
push
xchg
cdq
mov
xchg
jo
pop
in
ja
push
ret
mov
das
dec
add
shl
sbb
test
xor
imul
add
pusha
(bad)
and
test
fcomip
loope
inc
push
jmp
xor
(bad)
loope
call
fcomp
rol
fisubr
scas
xor
dec
imul
lea
ins
imul
dec
or
cwde
lds
ins
mov
add
call
(bad)
shl
xchg
mov
and
pop
or
push
jae
xor
test
jmp
pop
imul
mov
jno
aad
in
inc
jg
scas
stos
clc
rep
or
fdecstp
icebp
xchg
dec
jmp
add
jb
addr16
or
(bad)
mov
mov
mov
push
jmp
scas
aas
mov
or
mov
add
sbb
xor
rcl
mov
jne
mov
inc
shl
mov
pop
jmp
xchg
jnp
add
jge
(bad)
pop
pop
cmp
lds
mov
sti
adc
in
adc
bound
shl
add
imul
dec
sbb
inc
inc
movs
aaa
ja
outs
pop
or
fsub
jb
lods
xlat
cmp
ror
lods
cmp
faddp
test
mov
adc
and
cli
push
sub
outs
mov
shl
cld
mov
movs
test
adc
repnz
add
pop
add
retf
je
pop
push
aad
rol
gs
xchg
enter
imul
stos
stos
add
(bad)
cmp
mov
pop
sub
daa
sahf
movs
mov
pop
(bad)
ss
push
xchg
out
and
and
xchg
outs
lea
pop
xchg
cli
test
fmul
mov
xchg
cmp
sbb
xor
scas
pop
adc
adc
int3
mov
push
stos
fs
or
loopne
pop
retf
leave
inc
lods
cmp
dec
xor
sbb
in
(bad)
dec
ret
mov
adc
fdiv
adc
rol
mov
shr
cmp
repnz
push
retf
cmc
mov
pop
call
adc
pushf
int3
and
inc
in
pushf
sbb
and
jl
add
dec
(bad)
jbe
(bad)
mov
inc
pop
push
into
push
repnz
fistp
pop
or
or
dec
cmps
push
cwde
daa
stos
add
mov
adc
mov
loop
or
loope
ds
popa
mov
fcom
inc
in
mov
inc
out
div
mov
out
dec
adc
or
jne
out
sub
add
push
das
jmp
cdq
xchg
jle
sub
add
push
ffree
xor
lods
jecxz
jbe
out
imul
dec
push
icebp
add
repnz
stc
aas
inc
adc
rcl
(bad)
shr
or
jmp
mov
ss
mov
rol
inc
push
mov
and
call
pop
jmp
out
push
loop
sbb
push
add
out
jae
push
movs
inc
xchg
iret
add
jmp
div
repnz
sub
xchg
in
loopne
push
icebp
dec
cmps
stos
dec
fs
leave
fs
pop
or
mov
dec
xchg
add
inc
sbb
(bad)
pop
mov
dec
pop
rol
push
xor
jge
sti
jmp
cmc
pop
sahf
adc
mov
mov
sub
or
pop
outs
adc
repnz
cmp
jae
cdq
fisttp
(bad)
call
lods
xchg
mov
sbb
out
inc
call
sbb
xchg
mov
lods
lea
les
mov
daa
jl
cmp
dec
mov
lds
dec
popa
and
je
movs
pop
sub
out
add
dec
bound
sub
push
in
ret
cmp
push
adc
lds
(bad)
mov
stos
pop
xor
mov
(bad)
jae
pop
push
jb
(bad)
mov
ja
pop
mov
add
pop
scas
inc
jg
jae
or
xchg
mov
call
jge
mov
loope
aaa
push
cld
mov
mov
cmp
or
movs
dec
stos
addr16
lahf
pop
cmp
push
xor
addr16
test
cmp
popf
adc
and
ja
xchg
hlt
test
std
hlt
js
or
aad
enter
or
or
ds
xchg
dec
mov
cwde
fcmovb
adc
xor
inc
pushf
out
jle
repz
xlat
push
push
cmp
jp
or
mov
xor
fwait
add
into
add
sbb
ffree
nop
mov
pop
mov
dec
dec
push
js
das
mov
sti
dec
lds
inc
pop
(bad)
mov
jge
push
push
out
lods
mov
sub
cmp
es
add
ja
idiv
test
jbe
inc
icebp
les
in
mov
aas
mov
sbb
test
je
jmp
shr
in
lods
add
call
and
or
outs
pop
pop
push
mov
dec
in
pop
ins
cld
mov
std
jle
xchg
sub
mov
mov
pop
rcr
xchg
mov
dec
(bad)
(bad)
cli
cld
or
dec
pushf
mov
adc
or
aaa
mov
out
push
add
int3
pop
and
repz
mov
ins
imul
test
jnp
jp
lods
ds
xchg
lock
aas
xchg
ret
test
loope
mov
jno
sbb
cmps
jmp
mov
sub
push
in
stc
mov
iret
jne
test
iret
push
pop
mov
pop
xor
mov
pinsrw
ss
outs
test
fdiv
cli
mov
test
jb
mov
les
loop
inc
adc
push
mov
loop
cmps
add
cmp
push
(bad)
test
fsub
pop
xor
enter
mov
dec
cld
in
sbb
icebp
clc
stos
xor
push
ins
mov
jmp
jl
push
movs
pop
jbe
nop
sub
mov
cmp
mov
ds
pcmpgtb
adc
xlat
xchg
ins
adc
jnp
add
nop
push
stc
cmp
hlt
dec
in
fld
scas
mov
xchg
xor
jle
sub
jne
mov
sub
movs
lods
adc
lahf
inc
pop
fnstcw
xor
and
ret
add
push
je
and
pop
sub
neg
out
push
addr16
pop
dec
leave
idiv
sbb
xchg
ret
mov
clc
mov
ins
retf
sar
pop
sub
sub
or
fisttp
cwde
scas
xlat
imul
es
lods
call
mov
sbb
pop
jmp
xchg
(bad)
addr16
retf
pop
stos
adc
mov
test
cwde
or
aam
fsubr
repz
into
mov
pop
lods
jmp
or
sahf
imul
inc
inc
nop
sbb
aas
push
arpl
xchg
outs
jb
adc
jecxz
fbld
mov
and
cmp
fld
sbb
mov
test
add
mov
sti
aam
daa
and
mov
jnp
mov
adc
into
hlt
out
sbb
test
or
mov
cdq
repz
push
or
mov
jmp
sbb
in
push
sbb
cmc
fstp
movs
dec
fs
inc
int
ror
adc
in
ins
xchg
lock
std
loope
sbb
(bad)
jmp
mov
mov
xchg
cmp
call
inc
outs
push
out
jmp
pop
jae
ins
lea
sbb
push
or
or
push
out
jle
push
loope
cmp
sbb
jecxz
in
ds
xchg
icebp
test
sbb
pop
sbb
xchg
out
xchg
xchg
shl
cld
fs
nop
bound
test
mov
push
lock
inc
jnp
sbb
jno
xchg
mov
jne
adc
push
cmp
push
push
mov
mov
scas
les
push
jmp
pop
sbb
cmps
or
popf
(bad)
cmp
iret
push
iret
scas
lds
iret
push
lods
icebp
sub
shr
pushf
sub
lods
lock
push
retf
jecxz
test
jl
div
loope
push
arpl
imul
and
lock
(bad)
pusha
pop
jo
mov
es
jecxz
ins
jmp
pop
mov
pop
mov
call
test
fist
pop
push
test
adc
adc
test
mov
nop
dec
retf
pop
ror
test
je
lea
movs
cwde
lea
out
inc
jmp
jmp
jmp
mov
mov
pop
inc
aam
std
xor
pop
add
cmp
sar
sti
mov
dec
dec
addr16
xchg
call
scas
jp
push
cld
mov
push
jg
xor
cld
call
stc
mov
pop
xlat
push
shl
cmp
dec
jg
icebp
iret
cwde
push
int3
push
lods
out
(bad)
nop
inc
loopne
xchg
jle
sar
mov
sub
cmp
(bad)
clc
mov
les
ja
adc
test
pushf
sbb
test
xor
adc
pop
pop
movs
rcr
mov
repnz
fild
cmp
repz
stos
push
int3
sub
sar
ret
xchg
push
mov
xchg
adc
mov
jmp
jns
addr16
jns
or
jb
test
or
pop
rol
call
pushf
(bad)
mov
fild
gs
jae
mov
inc
aaa
push
in
or
jge
hlt
stos
push
mov
and
imul
xor
dec
adc
loope
int
or
fisubr
jp
lock
jno
push
xor
lar
push
outs
(bad)
mov
inc
cld
add
jmp
jle
jb
jnp
aad
pop
movs
out
sbb
stos
mov
pop
cs
leave
adc
es
mov
repz
dec
mov
out
xor
xchg
leave
call
sti
daa
cwde
push
ss
shl
ss
scas
xchg
sbb
(bad)
scas
(bad)
mov
push
push
lea
inc
scas
jg
inc
mov
fsubp
sbb
aas
sbb
push
mov
mov
push
(bad)
xchg
ja
outs
adc
or
dec
sub
jae
imul
popf
sub
inc
(bad)
loop
movs
push
adc
je
dec
mov
ret
and
or
das
jg
bnd
sub
xchg
pop
push
sti
ret
outs
or
(bad)
jg
or
xor
(bad)
or
and
adc
rcr
add
in
mov
out
sub
lahf
mov
cmp
xor
jns
inc
adc
pop
xor
xor
add
shl
mov
sub
mov
and
push
les
(bad)
fwait
cmp
mov
add
imul
outs
rcl
mov
std
jmp
adc
mov
adc
jb
jne
fadd
lea
cmc
sub
(bad)
psrad
in
xchg
fimul
int3
xor
sub
push
outs
cmp
ins
(bad)
mov
lods
lock
shr
jae
add
pushf
push
pop
fst
jno
mov
dec
inc
mov
mov
out
pop
cmp
bts
jbe
mov
call
dec
retf
(bad)
mov
aaa
sub
or
pop
pop
inc
into
sbb
jmp
(bad)
mov
js
add
lahf
je
push
mov
pop
stc
(bad)
pop
shl
shl
ja
pop
(bad)
cld
jnp
ins
aad
lds
(bad)
call
pop
jle
popf
jg
mov
or
movs
cmp
mov
mov
push
fucomi
sub
inc
xchg
in
pop
rcl
jnp
in
mov
adc
stc
jg
sbb
sub
mov
xor
jns
mov
pop
xchg
dec
fcmovbe
mov
in
mov
push
pop
mov
test
shl
push
push
add
jno
jae
xchg
pmaxub
push
fidivr
cmp
mul
adc
inc
repnz
adc
stos
ds
loop
add
mov
push
std
and
lahf
cmp
xor
aam
jle
mov
int3
or
cdq
and
cwde
arpl
push
lahf
stos
push
cmp
ss
outs
xchg
rcr
adc
pop
push
mov
fstp
sysret
in
cmp
add
cmp
add
cdq
ins
stos
jb
mov
sbb
movs
retf
hlt
mov
(bad)
mov
add
sub
int3
test
out
mov
sub
mov
ins
imul
(bad)
(bad)
push
sub
dec
jmp
test
in
repnz
and
xchg
add
cs
inc
dec
inc
out
mov
lahf
lods
xchg
pop
mov
jp
out
pop
jl
mov
or
int3
int
mov
gs
adc
ret
add
stos
retf
lods
mov
sub
es
shl
adc
lods
lea
push
sbb
push
stos
loopne
mov
push
sahf
sub
add
mov
xor
popa
add
mov
inc
mov
push
je
jp
push
ss
imul
push
out
out
pop
(bad)
gs
rcr
ja
sbb
cmp
pop
aas
xchg
js
mov
mov
or
or
and
movs
fs
add
or
jg
push
push
cmp
out
add
or
shl
into
(bad)
enter
sbb
adc
mov
fstp
clc
xchg
sbb
xchg
mov
mov
sub
jnp
daa
jp
ins
or
dec
sbb
outs
mov
imul
in
mov
sub
out
call
adc
or
pop
aas
push
adc
adc
push
icebp
ins
clc
ret
fimul
adc
pop
retf
and
dec
nop
ret
add
mov
dec
aad
out
cmp
mov
and
cmp
lea
and
cmps
mov
adc
cmp
jo
loopne
cs
addr16
adc
mov
mov
call
fsubr
or
ja
cmp
lock
mov
retf
jbe
call
add
cmp
push
jmp
xlat
mov
push
xchg
loopne
test
popa
and
jnp
ret
and
mov
icebp
inc
xor
xlat
shl
test
pusha
fnstcw
mov
or
mov
and
cmp
fs
mov
mov
gs
(bad)
jmp
rcl
lock
cmp
inc
repz
jmp
or
in
hlt
jnp
adc
repnz
fnstsw
jae
push
fisubr
xor
inc
mov
cmp
or
stc
pop
or
jo
(bad)
mov
push
cmp
jl
rcl
retf
movs
es
dec
jnp
faddp
cmp
or
mov
jno
les
pop
inc
mov
dec
sub
out
or
inc
sub
push
leave
mov
and
jb
mov
pop
mov
and
inc
dec
push
lds
push
inc
sub
enter
dec
fcmovnb
into
inc
(bad)
cmp
xor
and
out
push
lods
enter
xchg
repnz
es
sub
repz
pop
adc
xchg
push
jae
add
jmp
inc
mov
ja
mov
pop
test
jg
pop
das
dec
repnz
pusha
sbb
retf
mov
iret
cmc
into
pop
pop
pop
xchg
push
lods
fist
les
xor
call
jb
ret
adc
add
call
and
xlat
or
mov
test
mov
lods
xchg
pushf
out
mov
test
mov
mov
sbb
xchg
ror
lods
stos
adc
into
jae
push
push
out
mov
dec
sub
arpl
cli
pop
jg
xchg
sbb
push
pop
pop
outs
test
push
es
mov
adc
cmp
out
shl
dec
outs
inc
arpl
jbe
lods
neg
mov
aas
stos
loope
ss
pop
arpl
out
cmp
shl
pop
addr16
popf
xchg
in
call
dec
lahf
outs
adc
(bad)
cld
cmp
adc
sti
xchg
stos
loopne
shl
xchg
inc
inc
aad
lea
popa
into
dec
cmps
xor
dec
int
xor
pop
inc
ss
add
shr
icebp
mov
jl
out
xor
pop
push
xor
(bad)
mov
adc
jo
add
xchg
add
mov
push
cli
les
popf
jb
es
and
ret
aas
xor
dec
jle
div
fist
retf
or
mov
stc
inc
jmp
pop
xchg
adc
sti
outs
mov
pop
push
lea
fst
push
daa
test
into
xchg
and
and
cmp
mov
movs
add
xor
push
cmp
ror
mov
mov
std
xchg
inc
in
and
push
pop
mov
and
jle
mov
cwde
movs
push
retf
(bad)
cmp
xchg
data16
bound
cmp
pop
cmps
push
sub
rol
inc
sub
daa
and
jmp
loope
or
pop
push
mov
fstp
loope
fmul
inc
into
mov
outs
xchg
in
mov
dec
sub
fsub
cmp
imul
data16
enter
sub
mov
mov
push
ror
pop
fldcw
push
icebp
mov
outs
mov
xchg
pop
imul
jmp
jmp
js
mov
adc
dec
or
xor
push
add
shl
jbe
cmps
leave
fiadd
icebp
nop
das
pop
adc
push
xchg
or
pop
dec
xor
xlat
xor
xchg
sbb
dec
retf
dec
jb
push
jecxz
test
fisttp
jecxz
jp
sub
sub
sbb
lock
inc
dec
out
xor
inc
add
xchg
pop
sub
loopne
cld
jmp
popa
dec
(bad)
cmp
mov
aam
aad
and
test
fwait
cwde
mov
ret
jbe
loopne
mov
xchg
push
into
into
mov
pusha
call
stos
test
outs
inc
ds
sti
inc
mov
jns
das
push
sub
jnp
pop
inc
call
xchg
add
mov
dec
cmp
int
sub
stos
enter
icebp
sti
int3
leave
ins
push
das
je
lds
ja
mov
dec
dec
inc
push
les
xor
push
push
ret
cs
ins
cmp
add
xchg
ss
call
popa
call
es
sbb
sbb
cmc
aas
xchg
ret
popf
cmps
arpl
push
mov
jl
push
dec
test
mov
xchg
stc
and
mov
sahf
(bad)
xchg
xchg
clc
xor
inc
xchg
and
fs
div
lds
stos
lahf
pop
(bad)
mov
xchg
repz
repz
outs
xor
push
dec
or
les
push
xchg
inc
adc
movs
icebp
es
xchg
ret
jge
outs
push
lods
cmp
loop
sbb
jb
xchg
mov
test
enter
cld
unpckhps
add
retf
xor
sub
or
out
pop
adc
shl
fimul
(bad)
out
pop
ins
sbb
nop
or
stos
push
add
add
popf
dec
xor
add
pop
sar
aad
int3
xor
out
addr16
mov
icebp
inc
adc
or
cmp
mov
iret
or
push
cmp
jmp
and
mov
in
jnp
cmp
jbe
je
call
das
fwait
adc
add
or
stc
xor
(bad)
mov
pushf
mov
pop
or
data16
inc
pop
aas
pop
add
pop
mov
jnp
mov
scas
fsubr
jno
sbb
cdq
mov
das
sbb
mov
sub
dec
(bad)
retf
sbb
cmp
or
inc
mov
and
scas
test
xor
jecxz
dec
shl
lahf
add
jmp
sub
addr16
in
add
dec
(bad)
jmp
out
or
and
fdiv
repnz
outs
cmp
jg
xlat
hlt
test
pop
xor
mov
daa
pop
mov
push
jle
test
mov
cwde
punpcklwd
xor
outs
add
imul
cmp
mov
fild
and
(bad)
or
(bad)
scas
add
adc
xchg
mov
shl
mov
or
gs
xor
out
cmc
push
aas
sub
xor
dec
cs
add
(bad)
push
mov
ins
push
cmps
inc
and
lds
fcmove
repnz
out
scas
enter
(bad)
jnp
add
or
repnz
push
rol
les
dec
sbb
out
xor
adc
cdq
adc
xor
push
cmove
mov
add
pop
mov
ret
push
nop
jmp
jecxz
int3
dec
inc
sub
ret
fisub
int3
push
stos
dec
xchg
sbb
pushw
and
xor
mov
jle
push
adc
and
sub
pop
pop
mov
add
push
js
jne
push
pop
adc
(bad)
into
ret
scas
jmp
mov
mov
ds
mov
and
retf
sbb
rcr
cmp
adc
loop
add
add
ror
push
dec
mov
stos
not
das
or
xchg
(bad)
dec
enter
scas
imul
or
ds
shr
pop
jge
das
sub
lock
cmp
mov
and
stc
mov
sub
and
ret
mov
inc
jo
dec
clc
sbb
in
outs
aaa
loope
dec
cmps
cmc
cmp
xchg
xor
jo
(bad)
movs
iret
mov
movs
jg
mov
fiadd
xor
repz
popa
push
(bad)
cmps
mov
and
xsaveopt
sbb
cmp
mov
rcl
add
test
mov
mov
pusha
in
mov
cmc
dec
jg
fidiv
mov
jmp
xor
outs
mov
addr16
div
(bad)
imul
stos
xor
fstp
cmp
test
inc
add
inc
gs
or
push
and
imul
popf
(bad)
fnsave
ds
or
add
xor
xor
fbstp
pop
loope
out
cli
enter
mov
mov
seto
mov
popa
pusha
aam
and
xchg
push
jle
imul
aas
inc
jnp
retf
into
sbb
cmp
repz
inc
mov
test
sbb
xor
xor
xchg
dec
ja
jb
aad
shl
xor
dec
cmp
jecxz
shr
shr
cmc
bound
fstp
imul
stos
or
pop
inc
pop
aas
cmp
inc
or
loop
sbb
jmp
mov
loopne
sbb
mov
and
jecxz
inc
sbb
pop
and
outs
in
mov
sub
pop
jmp
aas
mov
mov
jbe
sbb
or
mov
in
icebp
xchg
and
add
(bad)
js
scas
jecxz
jmp
or
in
push
sub
jo
pop
call
ds
bound
cwde
pop
sbb
mov
cmps
sub
pop
lahf
cmp
sub
dec
xchg
mov
jno
mov
add
or
mov
stc
and
fcomp
jmp
sub
leave
stos
gs
repnz
fcom
pop
mov
inc
push
test
push
mov
xor
sar
or
cmp
and
test
jp
push
mov
push
fld
mov
dec
jge
sub
pop
je
sub
sbb
call
fld
mov
inc
fld
cmp
inc
push
out
in
fbstp
ror
outs
mov
sbb
cdq
sbb
loop
pop
jno
je
out
inc
sub
pop
jmp
xor
cmp
or
push
pop
or
fs
adc
cmp
sbb
sti
jnp
sbb
adc
rcl
pusha
cmp
jnp
outs
xchg
test
and
dec
pop
inc
or
shl
mov
aam
rcl
sub
lock
xor
fldenv
test
dec
ins
jmp
imul
leave
jg
dec
cmp
sbb
ins
xchg
jecxz
and
outs
xor
jecxz
(bad)
cs
pop
in
stos
cli
mov
push
mov
mov
pop
ins
sub
push
mov
inc
cwde
push
add
add
xlat
or
idiv
ja
and
xchg
cmp
mov
aas
stos
xchg
cmps
or
shl
aaa
retf
dec
mov
push
xchg
jecxz
aad
sar
(bad)
scas
jecxz
xor
(bad)
outs
inc
dec
jle
lahf
lods
add
lock
add
lods
in
adc
jecxz
push
mov
call
aam
jecxz
xchg
and
lods
or
cmps
ja
push
inc
out
je
or
xchg
mov
rol
scas
cld
xchg
or
repnz
jg
movs
mov
cmp
ds
pop
inc
int
je
jp
das
inc
xor
pop
cmps
loopne
cmps
call
not
popf
jo
jnp
or
fisubr
mov
inc
cmp
lahf
imul
adc
mov
pop
ss
(bad)
cmp
cmp
sub
js
pop
inc
pop
mov
add
sub
shr
(bad)
loop
adc
es
mov
sub
rcl
dec
(bad)
mov
nop
pop
and
arpl
(bad)
mul
push
push
sub
iret
shr
addr16
sub
sti
call
cmp
xor
nop
mov
fnstcw
mov
jmp
push
mov
cmp
mov
cli
mov
mov
mov
sbb
repnz
cmps
jnp
cld
or
jo
add
xchg
cmps
stos
mov
xor
push
jg
js
test
mov
lahf
jnp
mul
test
pop
and
pop
cs
loop
pop
pop
push
sub
mov
cmc
in
bound
(bad)
aad
jb
mov
test
and
call
lea
fwait
(bad)
cmp
out
in
jne
and
dec
dec
in
mov
mov
imul
push
xchg
adc
mov
fcomip
sahf
push
mov
ficomp
xchg
xchg
xor
repnz
lea
sub
scas
mov
repz
inc
je
cmp
aad
mov
scas
push
jecxz
movs
push
lods
ja
and
mov
dec
(bad)
jbe
sbb
stos
jb
loope
fldenv
fxch
das
dec
int3
jae
add
imul
aam
rcl
popf
(bad)
into
sbb
(bad)
sbb
shl
pop
inc
rol
jmp
pop
lock
mov
push
stc
xchg
push
gs
aam
neg
popa
jl
pop
(bad)
mov
in
or
push
cs
cwde
pop
mov
push
xor
add
xor
ins
or
xor
mov
mov
arpl
sub
jge
jo
dec
xor
dec
mov
mov
das
push
loopne
jno
inc
clc
mov
mov
sub
shr
jo
xor
xchg
jp
add
xchg
or
imul
je
mov
int3
js
das
dec
fdivp
mov
stc
imul
and
movs
lods
push
ror
repnz
and
out
xor
cmp
xchg
scas
out
xchg
add
inc
inc
lods
mov
div
fdiv
xchg
or
xchg
and
dec
out
mov
adc
sub
sub
xchg
cmp
arpl
jecxz
sub
sbb
sbb
add
sbb
jmp
pop
adc
dec
test
jmp
inc
jnp
mov
fwait
xor
jle
pop
das
repnz
adc
repz
xchg
ins
push
test
sub
outs
and
sbb
in
xchg
pop
sub
and
cmp
xor
or
mov
(bad)
pop
shl
sub
sbb
popf
add
and
mov
push
inc
add
stos
aam
cdq
in
jmp
inc
adc
sahf
mov
stos
xor
(bad)
lods
cmp
adc
sub
jge
and
jmp
sbb
fbld
movs
outs
loope
add
add
inc
add
and
test
fdiv
cmp
fdiv
sbb
sub
jae
add
out
mov
xchg
add
nop
dec
repnz
push
(bad)
adc
adc
mov
push
dec
sbb
comiss
je
xchg
pop
or
jns
out
fcmovnu
std
or
cmps
nop
pushf
inc
mov
push
fcomp
ds
arpl
call
mov
push
ret
add
imul
jo
mov
imul
in
xchg
ja
ret
add
xchg
loop
dec
ror
xchg
jbe
pop
ror
scas
mov
call
add
fcomp
ret
sub
arpl
cmp
jae
xchg
jmp
adc
pushf
add
mov
scas
iret
adc
push
daa
or
sbb
std
aam
cmp
mov
aad
xchg
iret
push
inc
pop
sahf
adc
xchg
cmc
neg
cmps
add
mov
sub
rcr
sbb
test
stos
scas
(bad)
lea
xor
popf
fdiv
into
mov
frstor
xchg
pusha
xor
dec
call
xchg
mov
ficomp
xor
call
daa
fidivr
cmc
(bad)
push
pop
mov
mov
js
mov
jp
push
pop
inc
cmp
fs
enter
stc
adc
dec
push
gs
push
daa
pusha
mov
in
or
daa
sahf
(bad)
mov
imul
stos
stc
adc
mov
loope
in
popf
data16
add
cmp
mov
rcl
cmp
cmp
fild
jno
(bad)
mov
jge
or
adc
jmp
mov
jo
pop
dec
adc
dec
jbe
setl
dec
inc
sti
test
mov
int
call
xchg
clc
mov
cmps
test
cmps
mov
adc
cmp
push
mov
movs
sub
push
(bad)
push
mov
int
int
into
test
cmp
add
mov
popf
xor
popa
mov
call
leave
ins
and
cmp
push
add
mov
je
push
or
mov
inc
addr16
div
std
jns
daa
fwait
inc
movs
retf
pop
sbb
imul
pop
cmp
mov
ror
ret
scas
in
lods
scas
out
retf
cmps
jb
daa
or
fisubr
and
cmp
(bad)
test
leave
enter
xor
ins
retf
or
mov
pop
adc
mov
push
or
repz
mov
fmul
mov
hlt
pop
or
mov
aaa
mov
sahf
pop
pop
inc
out
xor
mul
mov
cmp
sub
loope
fild
push
(bad)
test
dec
adc
fnstsw
push
nop
inc
fidivr
fdiv
and
push
add
cli
aas
mov
or
inc
mov
aam
sub
pop
and
pop
fadd
push
cmps
xor
or
das
cmps
test
jmp
stos
pop
out
xchg
xchg
(bad)
ror
jo
retf
inc
mov
(bad)
leave
push
scas
and
js
or
shl
int3
test
push
jae
ret
mov
xor
push
call
fcomp
outs
outs
mov
xchg
(bad)
shl
xchg
data16
je
ret
and
int
outs
in
push
fld
jg
ins
xchg
stc
(bad)
push
sti
jbe
adc
cmps
shr
popa
xlat
mov
aaa
repnz
addr16
sub
mov
scas
jns
(bad)
cs
in
popa
sub
inc
sub
stc
mov
jecxz
icebp
in
shr
xchg
hlt
lds
inc
pop
fcom
sbb
les
outs
mov
mov
cmp
cwde
sahf
mov
xlat
and
rol
adc
adc
fsub
loope
xchg
push
jecxz
aam
jbe
lock
lock
cdq
mov
cmc
sub
cld
adc
fwait
ins
ja
mov
mov
aaa
xchg
inc
xor
addr16
cdq
pop
xchg
imul
push
aam
out
rol
ss
test
bound
dec
sbb
dec
cmp
dec
pop
(bad)
pop
and
mov
test
or
mov
stos
mov
and
jmp
and
cmp
(bad)
adc
add
inc
sub
jecxz
sub
push
sbb
push
movs
daa
mov
lea
cmps
movs
nop
test
shl
mov
push
test
mov
cwde
scas
jmp
pop
clc
jmp
retf
mov
leave
enter
in
js
pop
jmp
(bad)
jl
dec
retf
sbb
pop
jge
xor
(bad)
mov
js
cwde
dec
push
inc
fsubr
dec
dec
dec
dec
push
push
or
sub
cmp
lock
into
mov
test
push
cmc
imul
jnp
ret
inc
ins
mov
pushf
stos
int
pop
cmps
inc
or
daa
adc
pop
arpl
fs
xor
mov
xchg
mov
jo
pop
fild
lods
fild
int3
popf
std
cmps
(bad)
jae
pushf
shl
loop
mov
lods
jne
jge
push
pop
cmp
cmp
call
stos
sub
or
xchg
sahf
cmps
frstor
test
hlt
icebp
pop
cmps
or
lea
push
into
sbb
and
rol
ret
lock
xor
outs
aam
std
mov
dec
xchg
cmp
pop
je
xor
push
sbb
inc
cmp
or
jmp
fwait
adc
xor
sti
add
mov
and
push
adc
xchg
imul
ss
xor
xor
js
jo
std
mov
mov
lahf
or
ins
or
retf
mov
lock
mov
pop
inc
pop
dec
cmp
add
sub
gs
mov
xchg
loope
hlt
imul
inc
(bad)
test
mov
xlat
cmc
sbb
in
sub
(bad)
sbb
push
pop
clc
(bad)
dec
xor
push
xchg
leave
stc
call
scas
add
fnsave
mov
xor
(bad)
jno
mov
jecxz
pushf
or
loopne
(bad)
mov
lods
cmp
sti
sub
pop
jle
ins
inc
jl
add
adc
jb
sahf
mov
mov
push
jmp
stos
xor
mov
mov
sub
sbb
mov
dec
mov
mov
scas
icebp
sbb
int
mov
jo
mov
idiv
push
stos
(bad)
(bad)
cmp
scas
mov
mov
cmp
xchg
xchg
inc
dec
je
mov
out
mov
clc
dec
sub
popf
fnstenv
push
sub
adc
rol
pop
mov
xchg
lea
adc
dec
ds
shr
shl
xchg
cmp
xor
xor
popf
inc
mov
ss
jns
add
or
cmp
mov
mov
ss
mov
idiv
in
push
add
mov
cmp
lods
sbb
adc
mov
out
out
sub
xor
pop
sub
add
std
push
cmp
stos
push
cld
mov
(bad)
test
loop
xchg
rcl
cdq
and
in
mov
test
jnp
dec
loope
and
fs
adc
jbe
jecxz
inc
in
mov
mov
ss
movs
popf
cdq
or
mov
out
aaa
repz
sbb
ins
sub
push
sub
ja
in
and
cmp
xor
cmps
neg
scas
data16
loope
retf
dec
pop
push
movs
inc
pop
sahf
cmp
fmul
cmps
mov
mov
push
inc
pushf
imul
leave
xor
jns
fcmove
stos
movs
into
out
push
mov
mov
add
(bad)
addr16
icebp
push
pop
or
and
dec
jecxz
loopne
popa
inc
xor
(bad)
leave
jae
dec
arpl
xor
push
inc
inc
dec
inc
shl
addr16
mov
data16
xchg
jno
je
add
inc
(bad)
and
repz
outs
fs
mov
loop
leave
sub
imul
stos
mov
add
pop
mov
xchg
jl
sub
in
xchg
jl
cmc
jge
xchg
cmp
sub
jg
dec
and
xchg
sahf
jno
bound
hlt
dec
sti
mov
retf
lods
mov
xor
cmp
inc
(bad)
arpl
and
push
lods
pop
icebp
or
mov
sbb
cmp
inc
(bad)
inc
(bad)
xor
dec
imul
movs
jne
mov
add
pop
mov
mov
loope
retf
pop
je
jmp
daa
aas
xor
jge
xchg
xor
jbe
imul
shr
dec
sub
test
fmul
sahf
loop
retf
ds
push
adc
xchg
call
sub
loopne
cs
jns
idiv
jge
xor
arpl
(bad)
push
cmps
push
cmp
les
daa
jmp
inc
push
fldenv
sub
outs
es
or
and
repnz
into
sbb
cwde
dec
fs
cmc
jmp
mov
in
or
cwde
mov
ss
aad
or
sub
push
lock
or
call
shr
mov
push
sub
push
mov
or
inc
or
jnp
cmp
mov
or
jp
stc
test
es
arpl
mov
inc
and
lods
ror
test
scas
sahf
dec
mov
push
fadd
mov
mov
dec
std
dec
in
repnz
cmp
push
or
xchg
and
push
cmp
aad
sbb
cld
test
add
xor
je
pop
in
pop
xchg
or
aad
jmp
cmp
int3
push
popa
scas
imul
(bad)
fcmovne
fwait
mov
push
inc
mov
xor
pop
mov
sahf
(bad)
test
stos
nop
jl
loopne
int3
lock
push
cmp
cdq
pop
mov
jb
popa
sbb
fnstcw
das
aas
cld
stos
cmp
cmp
push
mov
stc
out
fild
je
stos
mov
xchg
call
sbb
pop
adc
cmc
mov
inc
les
mov
inc
(bad)
das
inc
leave
dec
cmp
(bad)
fcom
jb
loopne
lahf
scas
(bad)
int
add
out
xlat
in
scas
or
and
repnz
pop
stc
fwait
js
dec
push
pop
jbe
jno
jge
test
push
adc
pop
jmp
push
xchg
jbe
ss
add
mov
cmps
ja
scas
shr
out
aas
call
in
mov
test
pop
sub
ins
imul
add
cmp
jmp
sbb
mov
and
mov
ret
add
stos
ja
inc
add
pushf
(bad)
int3
xchg
cmp
out
xor
jecxz
adc
test
ret
mov
push
pop
pop
or
sbb
xor
add
(bad)
inc
jnp
pusha
shl
xchg
dec
push
sub
(bad)
mov
mov
mov
icebp
mov
xor
dec
ret
jns
cmp
and
sbb
pop
xchg
icebp
rol
adc
add
in
or
push
(bad)
inc
in
rcl
xor
rcr
mov
pop
xor
xchg
lahf
jg
pop
loopne
cmp
cli
in
inc
mov
repz
popa
popf
psllw
lea
dec
call
push
and
jecxz
(bad)
mov
xor
push
fdiv
or
movs
cld
popf
and
sbb
(bad)
jmp
ds
push
rcl
scas
jge
cmp
pop
aas
sbb
or
retf
fmulp
inc
idiv
loope
xor
(bad)
xchg
rol
lea
adc
dec
sbb
call
mov
movs
adc
jbe
fs
movs
cmp
bndldx
test
call
cmps
jno
stc
xor
mov
ins
sbb
shl
xchg
ror
sub
xchg
jo
or
mov
mov
jbe
mov
xor
sbb
sbb
xor
or
and
icebp
jns
mov
test
xor
movs
popf
out
call
fbstp
and
retf
sbb
bound
and
cmp
mov
movs
and
sbb
pop
ins
aam
dec
cmps
mov
cs
xor
imul
ja
fmul
mov
jb
mov
jge
add
(bad)
repz
sti
sti
push
sbb
xchg
cwde
push
out
pop
cli
mov
fsubr
dec
inc
push
mov
mov
mov
idiv
pop
xor
shrd
cmp
test
les
xor
imul
ret
jns
or
dec
inc
aas
cmps
scas
inc
mov
adc
xor
mov
jo
push
xchg
mov
sub
or
mov
ss
mov
(bad)
adc
mov
sub
jo
cmp
add
mov
scas
push
stos
xor
int3
ds
mov
cmp
or
push
sbb
pop
jo
push
ds
add
jns
inc
in
(bad)
add
enter
cwde
pop
push
lods
mov
inc
jnp
shl
(bad)
adc
sbb
call
movs
retf
movs
sub
adc
mov
cmp
and
inc
out
mov
stos
xchg
mov
pop
pushf
cwde
sub
fwait
or
mov
stos
or
mov
push
les
out
stc
push
lods
xor
test
ds
aam
sbb
jae
sahf
xchg
xchg
pcmpgtb
fbld
sbb
(bad)
sahf
pop
(bad)
(bad)
data16
or
xchg
fbld
imul
or
addr16
push
loopne
cs
(bad)
mov
ins
add
xor
mov
mov
mov
push
iret
pop
mov
(bad)
adc
sti
setnp
adc
xor
loope
lods
mov
add
scas
push
sbb
les
or
mov
pop
je
rcr
fistp
lock
mov
mov
inc
enter
mov
xchg
iret
stos
retf
pop
fld
ins
push
clc
ret
out
shl
mov
lods
lods
jnp
or
jne
icebp
jmp
push
shr
and
(bad)
daa
(bad)
in
scas
add
push
ss
push
xchg
mov
enter
lahf
sub
outs
out
imul
ds
fcom
pop
xchg
(bad)
div
jbe
and
sbb
lahf
(bad)
aad
pusha
jmp
fsub
mov
lahf
mov
jae
js
sbb
(bad)
cs
iret
adc
std
inc
movd
or
pop
adc
mov
out
in
imul
dec
lea
iret
jne
retf
mov
mov
aas
movs
push
jno
jecxz
retf
inc
pusha
adc
aam
sub
popaw
sub
mov
in
imul
nop
addr16
add
test
sub
push
or
lds
pop
fld
and
xor
or
mov
pop
pop
test
ret
and
call
add
scas
pusha
rcr
adc
push
popa
movs
das
daa
xor
fst
sub
inc
pushf
or
cmp
push
rcr
(bad)
xchg
cwde
mov
inc
xchg
test
sbb
dec
mov
popf
cmp
jmp
add
mov
jnp
out
daa
ins
addr16
in
cmp
test
(bad)
fidiv
add
or
loope
loope
pushf
mov
scas
mov
jnp
jge
mov
mov
adc
aas
fdiv
pop
mov
push
inc
mov
les
xor
ins
xchg
in
xchg
jno
mov
push
mov
mov
into
scas
push
add
and
imul
gs
jl
push
jge
rcr
call
test
sbb
sub
out
out
ror
inc
inc
or
in
bound
fsubr
pop
or
scas
mov
jns
cmp
sub
out
addr16
xor
and
je
push
and
(bad)
rol
cld
mul
mov
outs
fdivr
arpl
fld
xchg
dec
lds
dec
and
cmp
push
xchg
mov
jns
jmp
out
inc
inc
arpl
inc
sar
mov
fisttp
xor
dec
repz
sbb
inc
pop
test
sub
(bad)
or
test
fnsave
std
or
xor
xchg
bound
or
fidivr
mov
cmp
mov
das
mov
xchg
mov
dec
jae
aas
add
ins
stos
xor
push
xchg
test
jno
(bad)
mov
and
pop
jle
loope
mov
or
mov
out
xchg
jo
cmp
or
jbe
idiv
add
inc
(bad)
and
out
in
fdivp
sbb
dec
or
ja
dec
jmp
sub
mov
lds
cli
dec
test
enter
sti
enter
cmps
loope
repnz
and
scas
sahf
and
out
ret
mov
fwait
out
jle
nop
pop
aas
mov
and
mov
popf
in
and
cmp
fdivr
and
add
test
mov
inc
imul
jg
lds
js
cmps
aaa
out
loop
cmp
adc
push
dec
fcmovne
in
jne
inc
mov
inc
fistp
ds
push
sbb
int
jmp
mov
cs
push
cld
or
push
mov
shl
jno
fidivr
pop
(bad)
loop
or
fsubr
inc
jmp
push
push
arpl
(bad)
mov
stos
call
jno
push
adc
add
repz
or
cmps
stos
ins
icebp
aad
int
xchg
add
sbb
mov
aaa
jmp
(bad)
add
rcl
loopne
mov
sar
loop
sbb
sub
pop
sbb
mov
fcmovbe
add
sub
mov
cwde
push
jmp
in
sbb
retf
lea
es
and
ss
ins
pop
xor
arpl
pop
push
push
clc
pop
add
mov
xchg
pop
shr
pop
sbb
xchg
call
push
xchg
imul
adc
stos
push
(bad)
rep
rol
lds
xor
jae
fild
cmp
retf
push
mov
mov
push
inc
repz
sti
mov
in
sub
sbb
out
pop
cmps
cmp
jecxz
cmc
mov
shld
pop
push
(bad)
pop
repz
jmp
cld
sub
cmp
das
push
inc
movs
ja
test
mov
xchg
ficom
aam
sbb
cmp
or
addr16
ret
aaa
xchg
sub
pop
in
xor
stc
mov
pop
jg
cmp
jmp
mov
xor
adc
aas
out
and
jl
ficom
or
(bad)
push
(bad)
out
fcomp
mov
mov
or
push
dec
xor
add
mov
pop
lods
lea
cmp
jp
mov
popa
adc
aam
lock
cmp
and
push
inc
pop
cmp
stos
mov
adc
or
jp
les
mov
arpl
push
icebp
mov
jmp
inc
ss
shl
pop
xor
jae
leave
mov
adc
pop
(bad)
cmp
and
outs
mov
rol
pop
loop
inc
pop
je
pusha
call
cmp
mov
mov
cdq
dec
jnp
lods
sbb
ficom
push
inc
sbb
cmc
loope
sbb
jg
fs
addr16
push
out
xchg
dec
xchg
xchg
mov
not
fcom
jmp
push
xchg
(bad)
lds
out
xchg
fcom
push
jl
cmp
inc
sub
shr
or
scas
mov
gs
jae
xchg
movs
int3
xor
pop
pop
in
add
pop
mov
sub
push
push
xlat
int3
jg
stos
int3
inc
mov
sahf
pop
ret
push
mov
xchg
cmps
jecxz
in
rcl
fst
mov
popf
mov
xor
dec
and
repnz
inc
and
rol
fld
jmp
ret
mov
fmul
mov
jno
xchg
popa
fcom
push
sub
or
loopne
jnp
(bad)
(bad)
movs
sti
(bad)
test
icebp
cdq
hlt
cmp
inc
mov
mov
adc
lahf
scas
sbb
int3
inc
jae
daa
xor
add
aas
sub
dec
sub
and
push
test
xor
pop
jo
sti
add
sub
ret
shl
aas
mul
into
mov
sti
fcom
inc
dec
rcr
sub
sub
cwde
and
inc
enter
nop
out
test
mov
mov
adc
rcl
cmc
mov
cld
movs
jo
mov
cmps
xor
std
int3
jl
scas
xor
or
mov
pop
mov
sub
mov
popa
mov
adc
loop
cmc
adc
pushf
adc
sub
nop
jp
cdq
mov
loop
clc
adc
mov
xor
add
fwait
or
(bad)
jp
pop
add
out
inc
cmp
inc
les
sbb
leave
push
les
mov
dec
lds
xchg
std
js
sbb
mov
xor
cmp
cmovbe
js
dec
inc
mov
add
fst
sub
pushf
fld
mov
call
xor
nop
repnz
stc
sbb
dec
xlat
dec
push
dec
jle
pop
push
sub
sub
and
adc
adc
sbb
js
inc
mov
outs
fwait
adc
push
push
sbb
movs
js
jmp
xchg
loopne
daa
or
arpl
pop
add
test
aam
and
nop
ins
push
inc
rcr
daa
ins
out
jp
das
dec
adc
jb
push
mov
adc
pushf
enter
out
sub
add
movs
inc
push
js
and
retf
jo
dec
xchg
ins
sahf
jbe
test
lods
aad
fidiv
push
lock
lahf
push
mov
mov
lods
bound
jb
ficomp
aas
in
jmp
movs
pushf
aas
xchg
pop
mov
fbld
mov
pop
test
or
jo
les
mov
sub
ror
push
add
mov
xor
in
cmp
and
cmps
sbb
xor
(bad)
mov
inc
call
sub
jmp
je
adc
and
sar
and
shr
ret
int
jle
outs
cmp
xchg
ja
inc
cmps
inc
or
add
add
fistp
fmul
dec
cmp
jo
add
mov
cwde
xchg
and
imul
out
leave
sbb
xchg
div
hlt
or
mov
stc
in
cdq
mov
loope
(bad)
addr16
sub
fs
nop
lds
or
pop
mov
das
add
imul
inc
adc
mov
or
xchg
jp
ret
ror
mov
icebp
call
stos
pop
adc
into
push
pop
or
mov
jo
adc
pop
sbb
jge
jbe
adc
imul
loop
stos
in
sahf
setl
out
xor
mov
pop
mov
xor
jbe
push
mov
das
pmaxsw
inc
mov
cmps
mov
inc
(bad)
xor
jnp
out
adc
pop
and
call
jge
adc
aas
ins
int3
pushf
aaa
jge
aam
jecxz
cwde
(bad)
shl
pusha
pop
fisttp
xchg
std
inc
outs
push
iret
lods
pop
out
xlat
test
ret
cmp
mov
jb
add
in
xchg
push
jmp
enter
icebp
lahf
imul
aad
and
fiadd
push
xor
inc
jge
mov
out
pop
push
call
stos
pop
idiv
mov
and
(bad)
adc
into
call
or
xlat
push
sbb
xor
xchg
call
les
add
dec
xor
inc
mov
or
cmp
xor
adc
pop
shr
leave
aad
pop
rcr
cmp
dec
pop
pop
sbb
sbb
mov
stos
adc
add
test
adc
ins
jecxz
bound
and
pop
jmp
dec
mov
(bad)
in
fldenv
jge
(bad)
push
or
or
pushf
sbb
push
aad
add
out
shr
mov
xlat
push
lds
push
test
sub
push
dec
inc
push
pop
xchg
ja
pop
sub
cld
xor
and
std
sub
inc
mov
stc
inc
add
push
push
int3
jae
ins
retf
pop
inc
stos
arpl
add
xchg
sub
or
cdq
out
sub
xchg
or
and
jbe
cli
movs
out
stos
mov
and
add
pusha
add
movs
sub
bound
inc
adc
pop
pavgb
mov
adc
gs
(bad)
xor
bound
push
push
es
push
scas
call
loop
pop
push
inc
js
pop
arpl
(bad)
outs
fisttp
rcr
push
add
pop
les
mov
push
rcr
(bad)
aam
cmp
and
push
movs
inc
add
jne
daa
dec
ins
mov
and
ret
call
add
xchg
stos
inc
cmp
cmp
sets
inc
(bad)
outs
mov
pusha
xchg
push
mov
stos
adc
loop
sbb
push
test
inc
pop
cs
ja
mov
ds
pop
int3
or
pop
loope
jo
sti
loopne
cs
mov
pop
mul
sub
cwde
sub
xchg
push
jp
add
test
aad
jno
inc
pop
dec
pop
xchg
fs
inc
jl
push
xchg
xchg
jns
pop
fld
pushf
loope
inc
enter
xchg
inc
pop
xchg
idiv
pop
cli
push
sub
sbb
mov
push
mov
cmp
and
or
pop
xchg
and
movs
sub
hlt
fwait
retf
inc
pop
loope
in
fmulp
fadd
in
mov
dec
scas
xchg
push
fsubrp
inc
bound
jns
cmp
pushf
imul
push
cmps
mov
mov
int3
mov
inc
jecxz
dec
(bad)
cmp
leave
cwde
js
out
jae
cwde
cmc
add
(bad)
xor
fs
imul
les
mov
popa
int
add
cwde
mov
lea
imul
add
adc
stc
mov
mov
push
shl
(bad)
mov
cld
ret
test
iret
pop
sub
push
jl
mov
mov
xor
mov
outs
mul
and
loopne
stos
adc
inc
cmp
push
mov
xor
sbb
jae
mov
sti
in
pusha
test
mov
out
aaa
sbb
les
adc
push
jae
pop
(bad)
in
out
sbb
ins
in
in
(bad)
into
xor
or
das
mov
lods
imul
(bad)
jg
gs
aad
sub
shl
imul
and
dec
loop
out
addr16
jp
pop
dec
sbb
mov
mov
(bad)
aad
sbb
mov
sahf
jge
in
call
adc
cli
cmps
mov
int
ret
dec
rcr
pop
jno
mov
imul
xchg
add
and
aaa
imul
inc
mov
es
mov
int3
and
mov
popf
dec
add
add
mov
push
mov
in
dec
lods
jmp
adc
sbb
xchg
mov
xchg
cli
mov
inc
outs
jae
dec
(bad)
add
dec
adc
and
icebp
repnz
or
mov
inc
xchg
add
dec
popf
or
outs
pop
jne
cli
cli
lods
fnsave
jae
ins
fwait
pop
rcl
inc
out
sub
fld
test
pop
imul
cmps
mov
push
pop
pop
push
inc
in
push
test
popf
test
mov
std
movs
mov
ja
mov
outs
mov
push
daa
(bad)
xor
shr
out
dec
(bad)
sti
jno
mov
test
mov
(bad)
lods
out
jae
(bad)
add
sub
mov
push
and
in
sub
cmp
mov
adc
and
cmp
cmp
push
repz
mov
movs
dec
inc
icebp
fmul
push
mov
pop
stos
mov
(bad)
movs
add
jp
jle
mov
popf
inc
push
lahf
les
cmc
adc
arpl
mov
push
jmp
dec
jnp
adc
jle
xor
rcl
js
cmc
fist
or
jo
adc
fs
or
adc
mov
sub
xor
test
jbe
jnp
mov
add
xor
jp
add
scas
rol
jmp
pusha
lock
jbe
pushf
cld
stc
les
int3
push
adc
cmc
and
mov
(bad)
mov
retf
pop
lea
or
jp
sub
or
sbb
pop
sbb
test
jnp
mov
jge
jg
lock
mov
mov
cmp
adc
mov
jns
or
cmp
pop
xor
or
mov
mov
adc
daa
dec
repnz
pushf
test
in
scas
adc
inc
in
pusha
or
and
stos
add
out
das
and
test
loopne
cmp
pushf
cdq
mov
sub
cdq
icebp
jmp
loope
sub
out
push
or
or
ss
lock
inc
mov
mov
stc
daa
les
cmp
pcmpgtb
stc
mov
nop
fbstp
jle
dec
pop
mov
jl
lea
and
xor
push
add
dec
mov
in
jp
fist
int
xlat
xchg
fidivr
ss
fwait
(bad)
push
retf
outs
stos
mov
mov
ds
shl
xchg
retf
sub
mov
daa
sub
add
jge
je
dec
out
shl
xchg
sahf
mov
add
mov
or
add
pop
inc
xlat
inc
sbb
jg
les
mov
ins
xor
add
outs
cmps
shr
(bad)
and
jns
into
mov
jecxz
ins
jne
adc
(bad)
mov
movs
into
mov
cmc
mov
loop
imul
xor
mov
mov
add
fcmovnbe
stos
mov
adc
and
mov
sbb
sar
sub
or
sahf
push
sub
dec
cmp
imul
jo
push
mov
icebp
shr
ret
xor
push
stc
mov
dec
xor
xchg
loop
sub
pop
bound
(bad)
cmps
cmp
pop
cmp
jnp
push
push
fxch
cmp
and
xor
shl
sub
mov
in
loop
pop
ror
enter
dec
jbe
mov
or
or
pop
stos
loope
and
leave
jg
xchg
xor
jge
mov
daa
aaa
jbe
clc
dec
out
cmp
imul
xchg
clc
addr16
adc
pusha
xor
lahf
inc
fcmovu
hlt
cwde
sbb
test
out
pop
dec
rcl
aam
(bad)
sub
pop
in
repz
stos
int
mov
and
in
xchg
xchg
dec
xchg
xor
jbe
scas
jge
sbb
into
sbb
movs
sahf
cs
xchg
sbb
cmp
cmps
sti
mov
lods
ds
(bad)
jmp
or
adc
pop
shl
mov
push
fidivr
retf
push
retf
sar
test
mov
and
ins
adc
push
cmps
sar
loope
sub
bound
push
jle
push
scas
mov
xchg
aaa
iret
fs
add
jno
jno
dec
rcl
cmps
push
mov
cmp
aas
xor
mov
mov
icebp
leave
add
in
or
popf
mov
jmp
jne
sbb
loop
push
je
push
jmp
xchg
add
jb
retf
xchg
ins
xchg
test
xor
pop
adc
mov
cmp
inc
mov
mov
test
outs
shr
and
std
(bad)
(bad)
jno
sbb
push
xchg
aas
mov
adc
xor
retf
aaa
push
xchg
and
sbb
push
std
dec
sti
xor
rol
sbb
or
cmp
out
dec
inc
sbb
fwait
cmc
xchg
jne
(bad)
inc
daa
gs
fstp
adc
out
ins
cmp
cmp
xlat
add
add
cmp
cld
fstp
dec
inc
add
nop
xchg
cmp
dec
mov
jmp
push
enter
lods
loop
fadd
das
mov
js
xor
leave
imul
js
mov
xchg
jmp
hlt
push
inc
fimul
movs
cmp
mov
jae
cmp
call
mov
iret
add
cmp
js
not
pop
jmp
rcr
and
je
cmp
push
clc
and
sbb
cdq
cwde
scas
and
jecxz
sub
push
adc
cmp
xchg
loope
mov
xor
(bad)
pop
and
mov
in
outs
and
push
and
test
sahf
push
inc
inc
jbe
movs
(bad)
jmp
cmps
les
mov
loope
mov
cmovae
inc
mov
jo
push
aas
pop
ret
imul
push
ror
adc
int
outs
imul
clc
adc
lock
ret
fs
leave
cmp
jg
mov
cmps
and
rol
pusha
and
ror
inc
push
stc
mov
stc
or
mov
(bad)
je
cmp
and
xchg
adc
mov
fdivr
cmp
xchg
sbb
enter
hlt
data16
mov
sbb
jmp
mov
movs
leave
dec
ja
xchg
fwait
pop
sub
stc
call
lods
shl
cs
and
mov
std
aas
imul
push
pusha
mov
xor
inc
test
addr16
push
imul
(bad)
aad
sub
ror
(bad)
cmps
ficomp
xchg
xchg
scas
jmp
ss
lods
inc
sbb
stos
cmp
outs
ror
cmp
in
and
push
js
jmp
(bad)
loopne
dec
mov
add
and
inc
or
xor
popa
push
mov
add
ja
jo
mov
or
scas
in
pop
mov
and
fistp
or
push
jmp
sahf
retf
push
popf
cmp
sbb
(bad)
hlt
in
into
ja
(bad)
jle
std
inc
daa
sbb
scas
pop
shr
leave
iret
mov
push
jl
int3
jmp
popa
cwde
dec
inc
fidivr
adc
adc
cld
sbb
sbb
sahf
idiv
imul
repz
inc
push
out
es
fucom
push
inc
push
iret
push
lds
imul
jge
pop
push
mov
out
jae
pop
cmp
cs
sbb
cdq
imul
jge
retf
imul
int3
pop
adc
cmp
fidivr
add
xor
cmps
and
xchg
sub
inc
test
mov
pop
sti
sbb
xchg
mov
(bad)
or
cmps
rol
xlat
push
je
retf
sbb
mov
cmc
add
mov
adc
lea
push
test
mov
out
pop
sbb
mov
push
loope
add
mov
hlt
in
sbb
cli
fidiv
es
and
cmc
mov
dec
dec
inc
or
jmp
xor
fnstenv
push
inc
dec
dec
mov
push
jecxz
ja
mov
lods
jge
dec
fist
pop
cmp
mov
ins
mov
int
ins
mov
and
(bad)
clc
dec
xor
in
or
jbe
lods
sub
mov
adc
movs
xchg
or
pop
popa
out
lods
pop
rcl
(bad)
popf
enter
xchg
dec
sub
add
test
test
movs
(bad)
(bad)
fistp
inc
je
fsub
jae
mov
jecxz
sar
test
jne
out
dec
jmp
call
iret
push
fwait
retf
xchg
jecxz
dec
ins
test
jp
pop
and
push
call
jns
mov
xlat
in
cwde
inc
xor
mov
movs
cmp
or
fsubp
or
rcl
or
lock
xchg
push
in
sbb
xchg
and
aaa
mov
or
(bad)
sub
mov
shr
out
mov
lds
xor
push
popa
jo
pop
jmp
mov
jl
or
jmp
retf
stos
movs
push
adc
dec
mov
mov
(bad)
dec
adc
loopne
sub
mov
daa
mov
mov
jmp
sub
sub
xchg
in
(bad)
mov
call
xor
in
lds
mov
push
and
adc
sub
repz
jns
bnd
fwait
and
(bad)
adc
clc
dec
cld
popf
int
(bad)
jle
inc
pop
fcmovbe
mov
xchg
push
fistp
add
cmp
jmp
daa
in
stos
dec
(bad)
hlt
mov
cmp
enter
(bad)
cdq
stc
push
retf
rcr
xlat
mov
icebp
push
pop
jg
add
sbb
push
cmps
xor
jno
ss
dec
fidivr
jp
ins
or
sbb
mov
jmp
iret
jno
or
fdiv
xor
int3
scas
rol
or
mov
inc
sub
fdivr
icebp
cwde
clc
or
or
lahf
mov
xor
call
je
lods
push
not
loope
ja
test
mov
arpl
add
jns
push
ss
cwde
pusha
cmp
jmp
dec
call
sti
dec
ins
repnz
sub
sbb
sub
add
ror
inc
cmp
cmc
data16
outs
leave
jmp
add
cwde
test
scas
retf
and
push
jbe
push
pop
xor
pop
pop
test
dec
pop
xor
or
outs
ins
mov
leave
mov
add
cld
cmps
push
xlat
sub
jne
dec
(bad)
outs
and
popf
sahf
into
imul
retf
mov
xchg
pop
sbb
mov
cmc
(bad)
shr
push
enter
(bad)
cmp
xchg
rol
mov
jl
ins
push
pop
out
arpl
je
fcomp
xor
inc
aad
inc
and
(bad)
je
outs
int3
mov
cmp
shr
pop
ds
movs
pop
mov
dec
pop
out
lods
mov
mov
jb
in
pop
jle
(bad)
xor
sbb
scas
mov
in
stc
test
loope
xchg
dec
cmp
fwait
inc
outs
cs
popf
clc
test
pop
fist
addr16
adc
xchg
mov
cmc
sbb
daa
mov
mov
retf
fisubr
sahf
adc
sbb
adc
daa
jb
mov
js
fistp
xchg
retf
fisub
dec
push
jecxz
mov
cmp
pushf
inc
or
lods
sahf
pop
xor
imul
sbb
aam
or
sub
jne
adc
ret
inc
xchg
(bad)
mov
bound
sbb
retf
xor
xchg
ja
sahf
iret
ds
(bad)
mov
dec
retf
cmp
xchg
test
mov
(bad)
cmp
in
enter
push
mov
and
adc
retf
ins
jo
mov
(bad)
and
and
fstp
fisubr
stos
stc
bound
ret
rcl
or
fistp
jg
ins
sub
lahf
push
jmp
sar
mov
outs
adc
int3
adc
cmps
imul
lahf
dec
(bad)
outs
test
shl
sub
fisub
mov
cwde
fidiv
mov
fcmovne
popa
(bad)
sub
mov
es
jnp
mov
jne
push
mov
sub
repnz
cmp
dec
fdivr
mov
(bad)
ret
retf
sbb
pop
ins
and
popa
mov
inc
lods
pop
retf
or
cdq
sti
jle
mov
xor
aaa
outs
mov
das
sbb
test
sbb
lahf
push
or
movs
addr16
cmps
je
mov
or
popa
mov
in
dec
icebp
ds
daa
lock
adc
jnp
inc
fidiv
mov
icebp
test
fwait
and
add
push
stos
outs
hlt
xchg
(bad)
retf
xor
jp
mov
and
and
nop
adc
das
jmp
adc
pop
aam
add
in
sub
xchg
loope
jbe
enter
lock
shl
xor
shl
loop
sub
test
mov
(bad)
adc
xchg
xchg
dec
outs
clc
mov
std
loop
call
mov
mov
cmp
pop
in
add
aad
imul
pop
fdiv
loop
test
loope
jmp
sub
xchg
fnsave
dec
and
mov
(bad)
mov
and
test
and
psubw
sbb
enter
sub
or
mov
ins
movs
inc
xchg
fdivp
fcom
ja
cmps
les
fsincos
imul
adc
test
pop
jb
test
inc
mov
cmp
sub
sbb
sbb
cmp
mov
cmps
jp
inc
pusha
es
icebp
pop
test
packsswb
mov
fdiv
dec
adc
fistp
cmp
stc
inc
fwait
and
jno
sar
adc
shl
test
outs
pop
push
and
out
ins
push
pop
add
or
push
leave
rol
mov
mov
pushf
shr
cmp
ss
xchg
jbe
test
push
sti
sub
push
sub
jne
or
jns
or
sbb
daa
fimul
imul
dec
ficomp
inc
mov
ror
push
bound
push
(bad)
fst
mov
arpl
adc
clc
call
pop
call
jmp
movs
jae
repnz
cmp
jmp
jbe
out
and
in
lock
mov
jmp
pop
jno
sti
(bad)
cmp
pop
repnz
lahf
cwde
dec
(bad)
push
inc
out
cmp
lea
adc
xor
les
push
jle
cmc
jno
mov
mov
inc
hlt
imul
fisttp
jno
mov
push
retf
adc
ins
rcr
nop
jo
fsub
and
push
fnstcw
int3
dec
mov
xor
ja
and
test
ja
dec
rcr
fsub
pushf
outs
mov
scas
or
outs
std
dec
sbb
pop
imul
pop
add
repnz
sahf
or
outs
fistp
ror
jno
jne
shl
outs
pop
retf
xor
lods
out
cs
test
or
push
shr
imul
adc
cdq
sub
aas
sar
aad
pop
jmp
sub
fist
into
mov
sbb
cmp
sub
sub
fcom
shl
std
(bad)
ds
mov
xchg
in
inc
lods
sbb
mov
jbe
xor
jne
adc
dec
inc
mov
mov
mov
xor
and
jo
std
add
xchg
imul
dec
leave
rcr
xchg
shl
mov
cmp
and
pop
mov
stos
mov
and
xor
(bad)
inc
dec
or
es
or
jg
nop
mov
jge
xor
cmp
das
jl
inc
or
ja
shl
in
aaa
inc
mov
cmc
cli
inc
in
xchg
leave
movs
fs
ins
scas
push
hlt
std
and
inc
je
scas
xor
hlt
and
rcl
ins
pushf
adc
xor
ret
xlat
movs
cmp
push
outs
cmp
dec
enter
data16
iret
leave
test
ds
jmp
cmp
mov
mov
jl
dec
shl
mov
(bad)
test
pop
test
mov
or
xor
in
(bad)
pop
outs
or
mov
inc
add
and
iret
mov
bound
mov
sub
mov
push
cmp
lds
ins
pop
push
xor
push
or
out
out
jns
xor
pop
retf
rol
xor
xchg
pusha
aas
pop
lods
sbb
call
adc
fild
mov
sbb
xchg
jp
cmps
fcmovnu
clc
push
cmps
mov
inc
sbb
dec
and
and
enter
push
dec
or
call
jl
jbe
std
stc
xchg
shl
aad
fsub
arpl
jno
sub
jle
lock
mov
pop
pop
(bad)
pop
mov
push
mov
mov
cs
pop
(bad)
xchg
arpl
neg
stos
adc
xchg
lds
(bad)
adc
mov
jae
jmp
jge
push
ret
mov
mov
and
test
push
imul
push
out
call
outs
push
inc
ins
inc
adc
popf
and
imul
cmp
test
in
mov
cli
push
sub
test
gs
shl
push
das
xor
mov
xor
pop
mov
call
mov
push
add
popf
sbb
sbb
cmps
cmp
mov
test
inc
addr16
lock
push
sub
cli
in
xor
js
fwait
mov
stos
out
ins
push
push
sti
dec
cmp
call
rcl
mov
pop
out
push
test
xor
(bad)
adc
or
push
dec
cmp
push
mov
mov
rcr
rcl
xor
pop
adc
(bad)
pushf
cmp
and
fwait
xor
cmc
xlat
push
adc
lods
xchg
enter
enter
cmp
hlt
mov
push
fst
mov
and
ins
dec
dec
cmp
retf
push
fwait
push
jl
adc
in
mov
repnz
cli
mov
js
clc
enter
xor
outs
sub
test
jb
xchg
nop
xchg
push
inc
fistp
cmp
out
pop
aaa
imul
enter
movs
out
jb
hlt
and
enter
not
aaa
and
mov
leave
xor
jnp
xchg
push
out
xor
pop
dec
bound
or
cmps
inc
xor
pop
mov
js
hlt
mov
div
sub
push
cmp
aam
jb
mov
jb
add
dec
loopne
fld
addr16
mov
mov
push
mov
mov
lahf
jl
inc
push
or
call
jbe
das
hlt
and
sub
mov
imul
add
pop
js
sbb
aam
adc
(bad)
movs
bound
sbb
in
mov
test
ret
mov
imul
adc
loope
lea
mov
out
adc
cs
rol
push
xchg
ret
jne
test
sbb
test
out
fiadd
mov
sti
xor
jg
lods
mov
add
sub
or
dec
cmp
xor
sbb
cs
xchg
pop
retf
push
pop
clc
mov
in
pop
dec
mov
inc
aam
int3
or
stos
sub
rcr
pop
and
stos
rcl
inc
int3
lock
popf
cmp
das
add
add
sar
not
dec
xor
adc
pop
sub
loope
fst
jge
cmp
test
fidivr
call
retf
outs
pop
jmp
cmps
data16
mov
std
push
dec
and
out
sub
(bad)
pand
cmc
add
jmp
fldpi
pop
pop
mov
popf
into
jl
clc
add
or
lahf
in
movs
xchg
xor
data16
pop
xchg
mov
nop
xlat
addr16
loop
xchg
or
sar
pushf
loop
cmps
and
xchg
hlt
inc
xor
aas
sub
sar
repnz
cdq
dec
and
dec
xchg
xor
push
icebp
or
mov
jo
out
sbb
ror
pop
mov
xor
sub
cmps
cli
sbb
mov
in
pop
jl
loop
mov
out
xor
popa
in
pushf
jecxz
jl
scas
sbb
jecxz
mov
push
mov
xchg
(bad)
gs
fidiv
dec
push
inc
sti
pop
(bad)
jp
sbb
je
push
mov
cmc
inc
jmp
or
ins
and
xchg
pop
retf
cli
fbstp
jae
sub
add
call
jbe
dec
sbb
sbb
aaa
loop
push
pop
ret
retf
push
cmp
fsub
je
lods
leave
push
add
mov
adc
xchg
fcmovbe
mov
push
pusha
aad
adc
jl
pop
cld
xchg
je
(bad)
imul
mov
sbb
inc
jns
rcr
mov
pop
dec
dec
int3
push
fwait
mov
fs
mov
addr16
adc
cmp
in
ins
fld
cdq
ret
lods
ja
ror
cmp
stos
or
mov
cmp
jmp
mov
inc
retf
jno
pushf
out
es
iret
repz
fwait
pop
or
mov
aad
pop
cs
iret
xor
(bad)
std
xchg
pop
(bad)
aad
aas
in
jae
mov
add
std
test
dec
cmp
dec
(bad)
outs
mov
cbw
dec
pop
sahf
ret
cmp
addr16
mov
(bad)
mov
ins
and
cmp
fisttp
mov
jnp
jmp
dec
hlt
out
and
adc
fmul
test
imul
jae
xor
inc
aad
xchg
mov
push
adc
into
push
addr16
xchg
mov
push
pop
and
pop
xchg
pop
push
add
out
and
cmp
jns
retf
icebp
pop
xchg
jae
cld
and
inc
jbe
and
bnd
adc
xchg
xor
xor
jmp
mov
and
bnd
sub
pop
bound
fisttp
mov
fs
sbb
jl
sbb
pop
fistp
mov
iret
push
ja
adc
cmps
push
pop
mov
push
jae
mov
out
pop
iret
loop
xor
pop
mov
fcom
inc
leave
push
in
xchg
js
or
iret
add
or
adc
dec
push
test
ds
add
sar
std
test
hlt
cmps
jmp
mov
xchg
not
pop
aaa
or
xor
out
and
repnz
out
je
cmp
or
mov
pop
dec
sub
mov
in
pusha
cmp
clc
xor
or
bound
push
mov
retf
cdq
sub
xor
ss
les
popa
test
sbb
pushf
mov
sub
xor
ja
xchg
sub
push
xchg
mov
icebp
ja
popf
mov
ja
sub
ret
pop
inc
fwait
movs
push
sbb
shr
fcomp
add
or
jle
jle
and
add
cmp
or
(bad)
adc
cmp
pop
push
sbb
das
inc
dec
inc
jmp
call
lea
xor
pop
int
xchg
out
jl
imul
adc
add
pop
pop
fidivr
xchg
jg
inc
mov
sub
nop
push
mov
loope
mov
cli
icebp
xchg
jmp
xor
(bad)
fnstcw
and
push
stos
or
inc
push
ss
inc
out
add
inc
inc
scas
lds
push
mov
gs
add
out
ss
mov
(bad)
cld
mov
mov
in
dec
outs
inc
and
xchg
cld
retf
fiadd
push
inc
dec
iret
das
out
cmp
xchg
retf
popa
and
inc
outs
fidiv
adc
fistp
(bad)
jle
mov
or
fucomi
ret
mov
fnsave
fistp
xchg
mov
mov
jecxz
jmp
push
push
add
inc
jnp
push
pushf
pop
out
and
icebp
call
test
(bad)
test
fcomp
push
inc
aad
cmps
mov
and
dec
sbb
test
aam
jg
push
mov
lahf
mov
inc
cmp
dec
not
dec
jg
repnz
mov
(bad)
or
lahf
sbb
mov
sub
fadd
and
push
adc
js
xor
pusha
add
add
std
pop
sbb
xor
ret
inc
xchg
repnz
ds
pusha
mov
popf
mov
loope
pop
dec
mov
jle
jne
je
cmp
sar
in
loope
rcr
xor
scas
xor
(bad)
leave
mov
jge
mov
in
adc
stos
xchg
cld
mov
push
pop
xchg
pop
ins
inc
movs
add
mov
(bad)
mov
test
xchg
xchg
and
loope
add
mov
inc
jo
push
jns
jmp
adc
std
pop
aaa
xchg
push
out
and
sbb
xchg
or
sub
mov
sahf
(bad)
jg
jge
and
pop
push
imul
repnz
fs
in
sbb
xor
xchg
add
mov
movs
jl
lds
mov
ss
out
loop
cmp
xor
loop
xchg
or
mov
fisttp
(bad)
cmp
pop
scas
inc
push
shl
lds
cli
scas
inc
movs
aaa
(bad)
ins
mov
inc
mov
shr
test
and
inc
jne
loope
lahf
sbb
jg
les
enter
pop
cmp
mov
push
ret
jno
pusha
inc
cmp
test
int
mov
push
fdiv
jno
add
xchg
aam
(bad)
sahf
jne
or
loope
std
sub
mov
mov
call
inc
xchg
jmp
add
cmp
pop
add
(bad)
call
outs
std
fld
jo
test
sub
es
loope
dec
add
(bad)
jg
dec
dec
dec
ins
sub
xchg
push
sub
xor
int3
fnsave
push
dec
(bad)
data16
fst
jecxz
jg
cs
push
and
cmc
test
ins
aaa
adc
aaa
inc
adc
div
add
cmp
into
inc
mov
test
lock
and
xchg
mov
or
or
aam
ins
adc
mov
xchg
adc
out
fstp
and
das
ja
fidivr
cmp
jno
push
and
push
xor
mov
add
movs
jmp
pop
mov
(bad)
mov
ja
fsubp
dec
test
test
xchg
ret
rcr
xor
add
push
jg
mov
pop
pop
mov
add
sbb
add
fcomp
lahf
enter
adc
outs
adc
xchg
scas
xchg
sbb
gs
dec
xchg
data16
pop
std
cmc
out
inc
mov
or
mov
mov
pop
add
fs
add
jae
push
adc
xchg
test
push
test
std
mov
fistp
daa
jmp
or
ins
push
sti
in
or
movs
aad
mov
mov
sub
enter
dec
(bad)
dec
pushf
ss
fiadd
adc
jbe
iret
xor
xor
fdiv
or
cdq
sbb
not
or
popa
mov
iret
jmp
(bad)
adc
pop
std
fst
js
xchg
mov
mov
lgs
inc
fild
dec
push
pop
add
nop
push
fnstcw
mov
int3
lods
(bad)
jae
lock
inc
xor
jne
pop
xchg
cmp
mov
scas
icebp
aaa
and
test
cmps
sbb
ins
mov
jb
or
mov
cdq
pop
imul
aas
mov
mov
pop
or
cli
adc
push
xchg
fwait
sbb
xor
into
dec
aaa
sbb
lahf
sti
push
ins
(bad)
jno
push
add
stos
push
mov
fisttp
dec
imul
pop
adc
mov
dec
retf
lahf
(bad)
stos
inc
ret
xor
jno
sub
mov
pop
and
lods
(bad)
ds
retf
sub
into
in
bound
cmp
cmp
icebp
add
enter
mov
aam
xor
cdq
sbb
fdiv
inc
ds
lahf
ja
jbe
mov
aam
div
call
xchg
aas
sub
xchg
sti
dec
adc
imul
jp
or
push
sub
sti
loop
cli
fistp
call
adc
or
jbe
mov
lock
pop
inc
jl
mov
jbe
fiadd
test
stos
mov
neg
fdivr
mov
jp
push
xor
or
scas
pop
xor
in
mov
arpl
push
test
ret
jnp
adc
popa
jg
sub
pop
in
cmc
je
dec
jmp
push
es
dec
inc
and
sub
xchg
mov
sbb
adc
std
push
mov
into
mov
fwait
mov
mov
mov
cmc
push
mov
cli
sub
push
les
jb
pop
push
push
dec
popa
fiadd
push
rcl
mov
sbb
inc
(bad)
adc
or
cmp
jo
loope
stos
cmp
xchg
dec
and
pop
rcl
sahf
inc
dec
sbb
div
push
cld
ins
test
movs
fcmovu
stos
cli
out
frstor
or
test
pop
dec
ds
or
out
stos
cmp
iret
ja
ret
sbb
fnsave
pop
xchg
push
xchg
les
cmp
xor
mov
neg
pop
shl
movs
dec
in
movs
fisubr
mov
pop
inc
pop
repnz
xchg
mov
test
mov
movs
popa
adc
fcom
jnp
aad
mov
(bad)
mov
enter
arpl
daa
or
xor
mov
les
cmc
pusha
je
sbb
add
add
inc
mov
or
int3
es
mov
jns
xchg
js
cli
sbb
push
xor
das
retf
test
(bad)
push
dec
test
add
lods
fwait
mov
into
scas
(bad)
push
cwde
adc
push
nop
cmp
sahf
movs
xchg
dec
clc
mov
into
and
inc
mov
sub
adc
pop
mov
in
mov
jno
scas
ds
fisttp
add
pop
in
int
fisubr
dec
daa
(bad)
neg
fwait
cld
jnp
test
sar
imul
mov
xor
in
hlt
cmp
sub
xlat
mov
arpl
arpl
xor
out
call
std
daa
mov
fadd
pop
sub
loopne
retf
clc
or
add
xor
mov
push
mov
or
out
adc
fimul
dec
push
(bad)
cmp
push
adc
sub
pop
mov
and
pop
movs
test
jle
pushf
push
adc
xor
pop
xor
pop
cmp
jnp
xor
test
out
int3
jb
add
add
fild
das
jbe
js
or
inc
or
retf
ins
dec
dec
jnp
in
cmp
movs
cdq
pusha
test
sub
ss
daa
jne
cmp
cdq
or
xor
mov
sbb
jmp
retf
mov
das
mov
fwait
cmp
pop
retf
aas
not
sbb
mov
leave
retf
cld
push
fcom
in
adc
jnp
into
test
inc
push
push
pushf
mov
ret
call
add
ins
cmp
push
xchg
xchg
stos
mov
jns
aad
pminsw
rol
inc
adc
pop
add
sti
mov
jnp
fsub
xor
pushf
xchg
cmps
fld
fxsave
out
ins
stc
cmp
dec
dec
repz
or
mov
mov
std
ficomp
std
outs
and
add
adc
or
dec
clc
mov
jnp
stc
xor
lea
push
outs
inc
xchg
bnd
push
and
jg
pop
movs
ss
pop
dec
pop
jne
jecxz
mov
fwait
inc
stos
adc
jecxz
cmc
pop
mov
xchg
jge
int
into
pusha
cmp
cs
pop
gs
mov
sbb
push
or
and
je
xchg
dec
and
ret
test
std
xchg
mov
lods
add
enter
add
hlt
xchg
cmps
shr
pop
jbe
jne
loopne
daa
cmc
push
mov
cld
fadd
bound
add
and
sub
push
movs
xlat
adc
push
fidivr
test
cmp
ss
repz
mov
daa
(bad)
jg
mov
int3
stc
(bad)
hlt
mov
in
bound
cwde
jge
dec
mov
and
in
scas
popa
adc
imul
outs
icebp
pop
repnz
mov
inc
mov
sbb
jno
inc
aad
retf
push
jmp
dec
aaa
cld
push
mov
pop
shl
xchg
aad
cmps
cmc
xchg
sub
into
push
mov
imul
xor
mov
mov
aaa
addr16
inc
inc
cs
cmp
jno
or
test
pop
mov
(bad)
mov
bound
mov
les
aas
mov
xchg
mov
jno
cmp
inc
inc
stc
outs
jle
mov
mov
les
in
xor
cld
push
leave
jo
scas
pop
mov
pop
cwde
jmp
jae
pcmpgtb
xchg
mov
cmp
add
cld
or
gs
ja
lods
xchg
or
push
adc
test
and
jno
and
ins
add
xlat
cmp
stc
jecxz
jmp
(bad)
dec
jnp
call
fistp
sbb
iret
and
and
std
sub
pop
jle
cli
mov
cld
sub
jmp
loop
mov
add
adc
inc
mov
rol
aad
dec
mov
mov
pop
push
xor
ret
pop
add
(bad)
push
lods
mov
sbb
sbb
out
aaa
hlt
je
aaa
fsub
sti
adc
in
mov
mov
pop
popa
sub
inc
frstor
and
push
sbb
mov
aad
jmp
mov
inc
sbb
or
gs
and
pop
fcmovb
push
rcl
sbb
fmul
sbb
fsubr
mov
sub
inc
xor
xchg
leave
adc
repnz
dec
adc
mov
pop
(bad)
loopne
add
jae
jg
popf
fstp
out
pop
mov
dec
sahf
in
sbb
(bad)
in
sbb
adc
xchg
or
fidiv
jle
mov
movs
mov
jnp
adc
leave
jbe
hlt
jp
mov
rcr
lahf
cmp
loopne
daa
or
cmp
mov
xchg
cmc
mov
adc
iret
mov
dec
outs
push
sbb
sub
retf
rcl
jnp
jnp
cdq
mov
push
jl
pop
sub
adc
aas
mov
xor
dec
cli
sbb
aas
push
aaa
jae
sti
jmp
sbb
pop
cwde
sahf
aas
dec
lea
clc
pop
cmp
sbb
out
add
mov
add
shl
enter
xchg
cmp
pop
fdivp
ins
and
add
in
mov
jae
stos
and
mov
inc
jg
scas
mov
dec
lods
sub
jnp
or
xchg
jno
inc
push
sbb
(bad)
in
mov
jge
mov
int
cmp
sbb
test
cs
push
jg
(bad)
pop
mov
aas
bound
add
jle
call
popf
daa
stos
push
dec
out
jecxz
pop
rol
popa
sbb
lock
adc
and
fld
add
push
sub
xchg
jbe
pop
push
and
lahf
pop
not
pop
in
push
scas
int
je
and
push
dec
ins
inc
jmp
pop
das
lahf
mov
inc
lods
sbb
mov
test
(bad)
fstp
imul
inc
cld
mov
dec
(bad)
cmp
mov
sbb
adc
adc
and
adc
movs
dec
pusha
sbb
mov
push
xor
xchg
fisttp
dec
out
aaa
inc
aas
cmp
inc
xchg
sbb
aaa
pusha
mov
cmp
push
lods
loop
(bad)
loope
ret
mov
sub
jbe
push
pop
mov
inc
mov
test
movs
idiv
stos
inc
rcr
daa
adc
or
cmps
jl
cmc
pop
push
and
push
mov
cmp
mov
or
popa
cmp
jmp
adc
dec
push
jno
inc
ins
jg
lds
pop
fcom
dec
mov
jp
cmc
sub
lock
pusha
(bad)
fdiv
mov
or
nop
into
enter
lahf
sub
sar
shl
mov
scas
and
ins
xchg
push
in
aad
js
in
lods
mov
popf
mov
mov
cmp
xor
push
cs
lds
jecxz
call
jne
int3
arpl
sub
push
xlat
or
sub
jge
dec
scas
mov
scas
cs
mov
sub
push
and
pop
jle
arpl
neg
jbe
inc
mov
cmp
mov
(bad)
das
test
aad
lock
push
mov
sti
(bad)
adc
and
jnp
pop
push
in
mov
cmp
cmp
pop
sbb
mov
cmps
ret
aam
cli
pop
loop
cmp
and
sub
mov
xor
aaa
add
inc
mov
lods
and
mov
into
frstor
fisttp
sbb
or
inc
movs
sar
sub
mov
inc
lods
add
mov
adc
mov
jge
test
test
stc
mov
cmp
jmp
mov
sbb
push
inc
cmc
mov
push
cs
fwait
scas
pop
nop
mov
por
cmp
and
test
lea
aas
es
aam
(bad)
aaa
or
sub
adc
test
jle
pop
sub
std
out
out
pop
xor
lahf
div
sbb
jb
lahf
fnstcw
retf
and
push
lods
ret
or
mov
imul
mov
mov
pop
jp
test
cmp
std
mov
aam
adc
mov
adc
sbb
(bad)
dec
data16
dec
sub
je
jb
inc
jbe
retf
addr16
mov
mov
ss
pop
sbb
imul
mov
adc
arpl
lea
adc
xchg
test
or
fstp
push
and
jae
stc
inc
aam
inc
out
test
sbb
jo
jp
push
out
movs
(bad)
mov
adc
adc
stos
cwde
mov
repnz
(bad)
aas
mov
sbb
inc
adc
(bad)
es
shl
cmps
pop
cmp
push
lahf
scas
mov
div
retf
(bad)
fiadd
ret
icebp
jne
mov
xor
inc
ret
inc
xchg
aad
test
mov
dec
pop
into
add
mul
ret
mov
and
push
or
fwait
xor
sbb
lea
dec
fadd
inc
test
les
(bad)
std
sbb
ss
les
test
das
add
sub
mov
in
pop
xor
cmp
mov
daa
js
jge
push
pop
fld
sqrtps
add
dec
xchg
int3
dec
imul
mov
iret
inc
ror
sbb
jo
dec
imul
rol
or
mov
xchg
rcr
jecxz
xchg
xchg
jnp
mov
cwde
movs
stos
push
dec
sbb
loope
and
inc
scas
imul
cmp
cmp
ja
xchg
in
es
ins
data16
les
cwde
xor
enter
jno
dec
xlat
hlt
fidivr
leave
cli
addr16
lock
inc
mov
sahf
xor
(bad)
pop
xor
loop
cmps
lea
dec
imul
xchg
ins
jne
hlt
icebp
add
inc
add
jb
cmp
stos
mov
or
mov
mov
pop
adc
mov
sahf
xor
cmp
inc
retf
scas
sbb
xchg
std
iret
pop
icebp
rcl
jbe
lock
pop
sub
call
sbb
sub
cmp
cmc
scas
fsub
sub
(bad)
loop
or
lea
xchg
jg
dec
rcl
ret
call
or
pop
inc
jge
retf
idiv
rol
in
xlat
mov
cmc
adc
outs
retf
cld
dec
pusha
lock
inc
xlat
cmp
dec
sahf
add
xchg
cmc
jmp
sbb
call
or
hlt
fld
sahf
mov
mov
and
fwait
mov
(bad)
jmp
mov
inc
clc
lods
add
xor
call
stc
pop
leave
les
mov
enter
xor
les
bound
test
call
pusha
int
std
rcl
adc
push
div
or
mov
lahf
cld
push
ins
dec
sub
loop
push
movs
mov
iret
test
stos
test
sub
aad
call
xchg
pop
xchg
jmp
push
xchg
push
mov
mov
and
je
jo
scas
call
xchg
push
arpl
jbe
adc
daa
pushf
mov
lods
inc
push
pop
ja
dec
sti
jbe
mov
xor
dec
add
push
fidiv
inc
jmp
cmp
mov
push
lds
cdq
lds
xor
or
push
ror
dec
sub
fst
cmp
pop
push
sub
pushf
sbb
mov
xchg
sub
mov
bound
repnz
mov
outs
pop
lahf
adc
sbb
and
sti
sub
push
aas
or
aas
mov
jno
int
ficom
xchg
call
div
and
imul
in
setno
pop
jnp
pop
jmp
ficomp
dec
pop
pusha
test
leave
setp
dec
dec
cmps
cmps
pop
fdiv
pop
enter
mov
cmps
add
enter
je
fild
mov
aam
ja
pushf
sbb
dec
or
(bad)
pop
push
aaa
xchg
pop
mov
or
xchg
and
pop
aad
aas
dec
idiv
xchg
jnp
scas
popf
je
pop
(bad)
fbstp
sub
sub
mov
aad
ret
cld
adc
mov
cmps
aad
dec
cmp
sbb
cmp
mov
arpl
sub
call
dec
aaa
sub
es
test
loopne
nop
mov
dec
or
or
popa
cld
jge
jnp
cs
test
mov
sahf
mov
push
in
add
mov
pop
pushf
push
dec
jge
call
(bad)
xor
cmp
or
shl
cmp
scas
cmps
jge
call
mov
ret
not
repz
cmp
dec
bts
xchg
out
xor
ficomp
imul
test
mov
call
shr
xchg
xor
dec
jns
loopne
out
sbb
daa
ror
xchg
jne
mov
hlt
add
push
xor
push
mov
mov
mov
xchg
fnstcw
xchg
mov
jo
or
lods
or
test
jp
scas
sub
(bad)
clc
cmp
add
jnp
stos
pop
in
pop
stos
das
or
mov
popa
rcr
sar
aaa
dec
push
ficomp
inc
adc
pop
out
nop
jl
mov
outs
push
pop
into
xchg
push
mov
and
mov
test
and
jmp
or
popf
mov
mov
push
sub
inc
call
adc
and
pop
test
out
jno
fstp
in
jnp
in
fstp
dec
daa
(bad)
pushf
mov
rcr
mov
or
outs
mov
sahf
push
cmp
test
shr
nop
jecxz
retf
enter
push
out
in
fidivr
dec
mov
mov
outs
cs
loop
mov
adc
jo
add
push
rol
lock
xlat
jp
sub
into
ja
out
fmul
and
add
adc
inc
jbe
mov
push
push
iret
or
nop
iret
(bad)
mov
mov
stos
mov
jne
and
daa
stos
and
fadd
cmc
xor
or
or
add
xchg
lahf
frstor
mov
cld
sbb
sahf
xchg
cwde
adc
cmp
(bad)
xlat
mov
in
clc
cdq
mov
or
jb
imul
mov
pop
cmps
adc
outs
sbb
cmps
lea
push
add
(bad)
test
xchg
sbb
sbb
fistp
jbe
loop
fstp
pop
inc
xchg
jne
rol
or
or
in
and
add
add
iret
xchg
inc
lahf
push
sbb
test
jl
mov
(bad)
push
adc
fwait
loop
xchg
pop
mov
aad
cmp
and
ror
mov
push
add
(bad)
cmp
or
jbe
cli
daa
jbe
cwde
inc
sub
dec
jg
or
outs
fbstp
mov
mov
add
sbb
icebp
scas
pop
data16
ss
in
sbb
mov
hlt
mov
dec
mov
dec
retf
ins
outs
aaa
inc
not
lds
frstor
jo
stos
jle
fwait
or
(bad)
dec
call
das
retf
dec
push
cmp
lahf
sbb
pop
test
sbb
mov
sbb
adc
jl
pushw
jb
mov
sub
push
pop
je
pusha
mov
push
xchg
hlt
inc
push
adc
sbb
mov
aad
scas
lds
pop
xchg
paddd
push
mov
iret
or
retf
sub
leave
clc
jb
nop
test
push
cs
mov
dec
loope
sbb
jge
pop
lea
dec
outs
fdiv
or
sbb
out
inc
out
or
pop
test
into
and
popf
jp
call
push
jbe
arpl
data16
jb
lock
shl
mov
retf
and
stos
rep
xor
dec
into
xor
ret
fbld
and
scas
clc
sub
dec
mov
cwde
imul
and
push
mov
ror
adc
jno
test
xchg
cmp
mov
push
ins
movs
into
idiv
pushf
sub
adc
jns
dec
sub
xchg
ins
lods
aad
(bad)
adc
stos
or
push
cmp
mov
arpl
jmp
mov
lea
(bad)
push
pop
mov
test
ficomp
pop
dec
jo
xor
mov
jg
ins
xchg
xchg
xchg
inc
mov
test
movs
sti
mov
sub
je
cmp
cmc
cmp
mov
nop
jno
push
sbb
jbe
sub
js
push
or
xchg
mov
aad
mov
xor
mov
ror
xor
repz
dec
mov
jne
or
add
iret
iret
int
cld
cmp
imul
inc
add
pop
dec
cmp
xchg
(bad)
jmp
or
inc
(bad)
icebp
mov
(bad)
movs
pop
out
pop
mov
xchg
add
jp
push
es
xor
pop
mov
in
fdivr
mov
imul
aad
jl
sahf
xchg
shr
push
jge
mov
stos
sub
and
repnz
cwde
rol
jb
mov
scas
mov
scas
call
mov
enter
repz
cmp
pop
in
in
and
cmp
xor
inc
aas
adc
popf
sar
fmul
cmp
gs
hlt
cmps
dec
push
add
adc
dec
dec
scas
add
test
inc
mov
popa
outs
clc
shl
jno
jbe
mov
bound
test
scas
cdq
sub
leave
sbb
cwde
xchg
aad
stos
xchg
outs
pop
les
pop
(bad)
fcmovu
lods
mov
inc
cmp
ja
enter
shr
add
lods
(bad)
cmp
cmp
(bad)
shr
sbb
add
in
or
adc
mov
icebp
fild
jnp
xlat
xlat
leave
mul
lahf
(bad)
cmp
(bad)
ret
push
mov
mov
in
scas
fwait
loopne
daa
xchg
pop
retf
shl
ins
cmps
lds
pop
mov
cli
in
xchg
xchg
adc
movs
sbb
push
xchg
inc
pop
push
adc
sbb
add
xchg
dec
cs
pop
adc
(bad)
add
xor
jmp
loope
cdq
pop
inc
stc
and
pop
mov
jae
inc
outs
cmp
out
push
std
neg
test
xchg
xchg
arpl
add
cld
in
arpl
mov
dec
inc
mov
pop
mov
nop
fbld
movs
pop
xchg
cli
push
sbb
xchg
test
or
out
mov
fiadd
and
dec
rcr
jns
loop
cmps
and
xchg
cmp
pop
(bad)
aas
xchg
sbb
jnp
mov
mov
sub
repz
(bad)
pop
pop
movs
in
cmp
dec
shl
jnp
dec
cmp
jns
(bad)
xor
ins
fstp
sub
mov
jo
mov
inc
inc
fcom
xchg
or
sub
pop
jmp
dec
inc
jl
inc
cwde
mov
xor
enter
hlt
inc
cdq
pop
mov
mov
lods
cdq
test
and
scas
adc
enter
sub
dec
jge
mov
mov
nop
rol
fwait
test
mov
mov
cmp
mov
fwait
in
test
or
push
jmp
mov
ins
ins
fs
(bad)
(bad)
(bad)
daa
push
ffree
fnstcw
add
ins
mov
push
mov
jb
jb
(bad)
fcomip
rcr
cmps
add
sub
cmp
mov
xchg
jae
daa
add
test
mov
jge
aas
jl
stc
lds
stos
fmul
mov
addr16
iret
xchg
cdq
ss
mov
in
cmp
ds
les
test
rol
mov
pop
cmps
add
loopne
cld
jne
cmp
outs
push
in
call
jge
rcl
and
in
into
lahf
cmp
cmp
push
and
xor
mov
rcl
pop
inc
xchg
cld
out
jbe
jno
(bad)
std
aad
and
jle
fwait
and
ins
les
outs
cwde
iret
popf
je
add
push
out
ins
pop
pusha
mov
pop
icebp
leave
outs
loop
dec
jle
stc
das
dec
cmc
in
xchg
popf
movs
call
xchg
les
pop
cmp
add
jge
sub
(bad)
pusha
(bad)
fdivr
push
sbb
jp
fistp
not
xor
pop
and
push
jbe
push
add
call
aaa
ins
scas
shl
in
lock
sbb
xchg
ds
bound
or
lahf
lods
(bad)
imul
mov
ss
push
adc
push
xor
sar
fidiv
mov
xlat
dec
sar
push
sbb
fld
call
mov
(bad)
in
loop
sub
test
xlat
and
int
mov
dec
test
cdq
scas
sub
push
push
or
push
lods
fidivr
xchg
popa
aam
push
sub
xor
pop
imul
stos
push
aaa
pop
push
je
outs
inc
ds
inc
je
jnp
leave
je
js
stos
mov
std
stos
xchg
les
loop
lds
(bad)
stc
xchg
pushf
jb
call
inc
and
sbb
push
sbb
dec
mov
jecxz
ror
cli
ret
mov
bound
dec
int3
jp
sub
les
add
pop
sub
or
xchg
rcl
xor
(bad)
ror
icebp
or
cdq
mov
xchg
push
xor
xor
add
sub
sti
test
lds
inc
push
movs
mov
inc
and
fs
aas
add
mov
cmp
jnp
cmp
push
arpl
mov
jp
mov
nop
mov
loop
(bad)
iret
out
dec
jo
je
cdq
(bad)
mov
push
mov
(bad)
sub
mov
xchg
jmp
aad
xchg
cmp
mov
add
mov
add
fsubr
(bad)
and
xor
jae
icebp
pop
mov
test
(bad)
push
loopne
fsubr
sub
push
aam
in
adc
hlt
mov
je
ds
mov
push
add
cmps
jle
xchg
out
push
xchg
mov
sub
int3
jp
sbb
jp
test
cmc
pushf
and
mov
xchg
retf
mov
sub
ret
cwde
fisub
cmp
daa
xor
jmp
adc
es
pop
inc
fnstcw
sar
test
push
mov
sub
ss
push
inc
or
stos
cs
loop
fld
mov
dec
pop
(bad)
pop
(bad)
mov
(bad)
retf
push
mov
xchg
shl
int3
rcl
push
(bad)
ficom
test
jne
xor
xor
inc
daa
cli
cmp
adc
movs
in
jmp
sub
push
in
dec
jo
into
adc
sub
inc
inc
fist
mov
inc
sub
loopne
mov
or
cmps
loop
sbb
add
out
je
xchg
xor
jl
xchg
stos
shl
(bad)
test
retf
outs
jmp
mov
mov
mov
inc
or
int
xchg
and
faddp
loope
jnp
cmp
out
push
jl
jp
jle
dec
xor
add
lods
lds
mov
aam
mov
cwde
jne
xchg
or
popa
xchg
clc
stc
sub
and
inc
outs
push
sub
mov
add
push
sbb
ror
(bad)
or
out
sbb
cmp
inc
mov
push
lods
jne
mov
jecxz
push
inc
inc
pusha
ins
out
lea
jmp
cmp
or
push
lods
lods
mov
sbb
inc
js
push
dec
or
mov
xor
int3
mov
inc
sahf
call
fstp
fs
stc
cmp
xchg
xchg
dec
push
push
pop
adc
and
sbb
clc
movs
pop
inc
lods
xchg
mov
mov
dec
pop
nop
push
adc
call
mov
push
mov
stos
es
or
outs
adc
cmp
cmp
dec
push
dec
pop
sbb
adc
or
fs
aad
fld
or
push
adc
push
in
sub
test
pop
in
rcr
pop
jnp
imul
hlt
fwait
loop
ds
xor
cmp
sbb
or
xchg
push
jge
(bad)
sbb
jge
mov
loop
aam
push
arpl
arpl
mov
ret
cmp
pop
in
adc
push
retf
jb
dec
js
jl
test
push
shl
test
sbb
(bad)
xchg
cmp
mov
cmp
(bad)
(bad)
cmps
(bad)
jg
push
les
xchg
mov
stc
addr16
int
ins
inc
in
sub
div
outs
test
in
imul
arpl
in
sbb
push
retf
bound
fiadd
pop
mov
and
lahf
mov
std
sti
mov
mov
test
(bad)
pop
fisubr
jl
xchg
fstp
sbb
cmp
mov
jmp
xchg
repnz
cli
popa
ins
mov
xchg
cmps
rol
sbb
cmp
scas
pop
inc
ficomp
retw
lahf
stos
add
ss
or
ds
pop
xor
push
push
adc
jge
cmp
and
ret
ficomp
jns
inc
ret
xor
mov
hlt
xchg
test
xchg
sbb
and
adc
jge
jl
sub
mov
outs
xchg
arpl
(bad)
in
mov
pop
jmp
call
add
int3
mov
idiv
xchg
dec
xlat
dec
in
jns
fcmovnb
aas
pop
add
sub
mov
inc
push
jno
dec
rcl
je
gs
inc
out
ret
out
leave
fstp
xchg
out
pop
sbb
adc
push
pop
xor
shl
xchg
add
cdq
dec
out
dec
xor
scas
and
or
and
into
xchg
sbb
addr16
scas
in
lock
adc
add
cmp
ret
movs
aaa
mov
sti
and
jnp
es
pop
sub
scas
les
cmc
inc
movs
cmp
pop
addr16
rcr
mov
mov
aam
sub
sar
das
arpl
push
push
push
fmul
and
retf
mov
mov
mov
fs
lods
aad
cld
frstor
fld
push
xchg
jae
movs
cld
and
dec
mov
scas
fbstp
idiv
outs
shl
(bad)
call
movs
shl
adc
sbb
or
out
in
and
cmp
push
out
ins
pop
mov
jae
fisttp
add
pop
loope
fwait
and
mov
call
mov
mov
fcom
mov
sub
or
fist
leave
xchg
(bad)
inc
xchg
sahf
fild
jno
push
test
fist
adc
dec
addr16
xchg
mov
cmp
outs
cvttps2pi
fidiv
(bad)
push
adc
(bad)
xchg
push
gs
jmp
je
sub
inc
jmp
ret
pop
outs
jae
aad
dec
hlt
dec
mov
dec
rcl
ficom
pop
movs
in
fdivrp
pop
int3
dec
dec
inc
nop
pmaxsw
push
fadd
and
sbb
js
jno
dec
rcl
scas
push
sub
pop
rcl
sbb
sbb
xchg
stos
retf
dec
int3
lods
xor
sbb
sub
and
fcomi
mov
mov
lahf
or
mov
mov
mov
int3
aas
jecxz
jo
xor
mov
ja
push
xor
gs
cmp
mov
jmp
loop
push
dec
mov
repz
dec
aam
lods
xchg
loopne
mov
xor
iret
cdq
xchg
into
js
pushf
outs
xchg
stos
xchg
jo
xor
mov
scas
(bad)
movs
and
and
imul
out
push
pusha
jecxz
mov
test
ret
call
add
idiv
xchg
jg
mov
ins
inc
mov
ja
loope
push
mov
in
push
fstp
add
push
call
xor
sbb
ss
xor
dec
xor
ror
cli
jno
mov
mov
cmps
in
lea
or
push
add
inc
fsubp
ret
mov
addr16
hlt
sub
loope
and
and
sub
test
in
movs
sub
test
mov
les
sahf
movs
shl
or
push
cmp
aaa
loope
pusha
pushf
pop
outs
push
push
test
add
fdiv
stos
xchg
loop
popf
sub
ja
mov
pop
repz
sub
or
cmp
lods
icebp
sub
scas
test
mov
inc
sti
out
or
pop
pusha
bound
ins
push
in
mov
xchg
popf
xor
sbb
xchg
ret
ins
xchg
cmps
add
mov
shr
ja
cli
scas
rcr
add
mov
xor
lods
movs
and
push
dec
cmp
jmp
mov
xchg
outs
ret
imul
pop
movs
(bad)
enter
and
fild
mov
adc
aaa
add
fs
in
mov
je
cdq
addr16
lock
mov
mov
sbb
out
mov
mov
mov
icebp
pop
(bad)
mov
xor
push
nop
cmps
sub
loop
int
stos
lock
sbb
mov
sub
out
sbb
fcom
dec
stc
sbb
add
mov
xchg
pop
es
pop
sub
lods
inc
std
cmp
dec
mov
jl
addr16
iret
sti
movs
dec
rcr
push
outs
jno
lock
add
or
add
hlt
cs
seto
xchg
cmp
fild
outs
dec
out
adc
ret
mov
push
dec
loop
out
adc
xchg
pop
add
aas
int
or
dec
jg
jbe
jecxz
fcom
jne
mov
sti
push
cmp
repnz
xchg
add
mov
(bad)
movs
mov
imul
mov
inc
out
jo
outs
or
mov
nop
jmp
(bad)
xchg
sbb
push
xor
retf
gs
stos
dec
clc
inc
fcmovne
into
xor
pop
test
scas
in
xor
dec
aas
and
shr
mov
dec
mov
pushf
and
lds
das
mov
inc
inc
add
ins
cmp
nop
movs
add
pusha
(bad)
dec
sbb
sbb
xchg
(bad)
shl
xor
push
mov
or
enter
repz
aas
cmps
into
xchg
add
addr16
cmp
test
enter
test
or
push
daa
call
push
mov
sbb
adc
lds
movs
(bad)
push
gs
pop
cmp
ins
lahf
mov
jle
pop
inc
retf
or
mov
repnz
and
fnstcw
cdq
loop
mov
push
xlat
rol
and
stc
jmp
cmp
mov
imul
cmps
loop
jne
in
mov
xchg
jne
mov
push
sub
mov
imul
mov
sub
pop
mov
dec
dec
aaa
(bad)
stc
xor
or
out
xchg
stc
inc
sahf
hlt
daa
cmp
(bad)
jecxz
or
es
xor
cmp
dec
(bad)
gs
mov
xchg
mov
pop
out
mov
in
cmps
lahf
mov
pop
test
test
(bad)
stc
adc
inc
ins
jnp
sub
sbb
sub
push
push
cmp
ins
and
cdq
scas
xchg
xor
mov
scas
call
xor
frstor
std
add
mov
dec
pop
cmp
and
js
icebp
mov
xlat
or
sbb
inc
cmp
or
push
mov
or
js
les
ins
dec
mov
cmp
(bad)
fnsave
imul
or
or
mov
sbb
adc
icebp
mov
mov
xor
push
jmp
jno
xor
jge
push
adc
in
into
adc
mov
pop
lds
add
mov
outs
push
add
push
dec
inc
adc
or
cs
inc
shl
scas
out
fs
sti
cmp
out
mov
mov
(bad)
pop
pop
mov
fwait
js
cmp
ror
ins
lahf
xor
mov
cmp
inc
xchg
and
stos
sar
push
xchg
pop
cwde
push
loop
rol
add
enter
les
push
iret
cld
lds
xor
jl
dec
(bad)
push
dec
adc
in
shl
add
and
add
(bad)
jge
mov
stos
adc
and
(bad)
xchg
xchg
xchg
push
cmps
gs
int
inc
popa
and
in
add
push
or
imul
daa
movs
retf
dec
add
shr
in
cmp
addr16
pop
aas
xchg
xchg
xchg
in
sti
push
mov
adc
ja
arpl
fimul
cmps
push
das
sbb
sbb
xchg
fwait
cmp
xchg
loopne
adc
out
daa
ror
mov
lods
ins
sbb
lods
mov
mov
adc
lea
cmp
stos
(bad)
and
sub
pop
or
inc
adc
mov
adc
cs
scas
or
push
jnp
sbb
fs
movs
mov
cmp
xor
xchg
sbb
cmps
ss
xor
pop
idiv
and
mov
push
sahf
mov
mov
les
(bad)
in
fld
ja
or
test
xchg
add
or
adc
mov
lahf
mov
and
bound
push
mov
push
add
jno
mov
or
mul
in
sbb
ins
fs
ja
lahf
outs
rcr
cmp
rcl
cmp
xor
xor
jge
(bad)
lods
cmps
je
stc
loope
and
dec
js
mov
outs
push
mov
cdq
aaa
mov
sbb
add
sub
test
jne
pop
mov
push
cmp
lock
xchg
fldcw
out
mov
xchg
(bad)
fisubr
arpl
fisttp
pop
xlat
icebp
mov
ss
test
adc
in
mov
out
cmp
fldcw
pop
retf
dec
sbb
xor
dec
scas
inc
ins
mov
inc
dec
dec
add
jmp
scas
push
sub
jl
adc
ret
cmp
or
pop
fcom
jp
jo
push
(bad)
xor
test
sub
cmp
or
fsubr
pop
dec
(bad)
nop
or
cmp
sar
mov
and
aam
mov
cmp
clc
mov
xchg
sbb
jg
or
pushf
sbb
(bad)
retf
scas
xchg
xor
outs
inc
pushf
cmp
add
out
pushf
or
ins
fidiv
add
fadd
or
jo
test
mov
sbb
aam
push
inc
jge
mov
out
push
lods
mov
dec
push
das
jp
fcmovu
(bad)
stos
lea
scas
mov
int
fstp
outs
adc
sti
inc
mov
outs
inc
mov
ds
leave
cmps
rcr
repnz
mov
sbb
loope
test
jmp
mov
out
mov
(bad)
fcmovne
aam
(bad)
std
int
shr
div
hlt
mov
or
icebp
inc
mov
fwait
sahf
mov
push
inc
push
xchg
pop
cdq
rcr
mov
je
pop
ds
int
mov
push
int
jecxz
aam
scas
sbb
ror
mov
jl
(bad)
adc
pusha
je
push
ins
dec
xor
addr16
mov
adc
pop
push
mov
stc
cmp
and
adc
xor
add
push
shl
sub
lods
cmp
in
lock
mov
loope
and
iret
aaa
mov
dec
xor
int
sub
or
rcl
aas
(bad)
mov
scas
ret
mov
stos
or
mov
mov
mov
in
imul
cmps
mov
mov
gs
inc
aam
psrld
or
ja
and
dec
(bad)
lods
stc
mov
int3
mov
stos
jg
pop
(bad)
dec
push
mov
pop
jbe
jo
mov
and
dec
push
and
mov
or
cs
xchg
(bad)
(bad)
shl
lahf
(bad)
pop
repnz
ror
and
jp
outs
mov
mov
and
xchg
ret
mov
adc
cmp
enter
std
call
cdq
int3
sbb
mov
mov
pop
es
mov
mov
mov
retf
retw
xchg
push
xor
or
mov
pop
sub
loop
out
fs
(bad)
mov
inc
ins
les
pop
retf
sbb
aam
mov
or
jne
pusha
inc
les
sub
arpl
mov
test
cmp
and
aam
inc
push
mov
test
adc
dec
xchg
dec
aaa
fdiv
sub
inc
add
cdq
push
fcmovb
ins
out
mov
fimul
(bad)
adc
and
pop
jmp
or
(bad)
pop
pop
xchg
lahf
in
push
jge
sahf
nop
mov
jle
mov
call
out
xor
mov
adc
clc
cmp
sahf
add
cmp
ja
repz
adc
xor
push
dec
jne
iret
jnp
or
in
int
adc
inc
add
jnp
and
jns
mov
xchg
push
mov
push
fisttp
mov
xchg
push
inc
mov
cli
rcr
sbb
or
xchg
cmps
stos
stc
enter
dec
and
adc
fs
inc
into
sub
xor
mov
push
les
mov
xchg
cmp
loope
mov
adc
pop
out
repnz
xchg
push
js
and
fld
imul
fistp
add
bound
out
add
add
iret
ror
outs
retf
xor
mov
cs
ja
cmps
inc
cmp
js
inc
jp
stos
dec
xor
hlt
std
jno
sbb
test
aaa
test
or
scas
stc
scas
sahf
push
push
ret
push
jno
mov
addr16
aas
pop
sub
das
in
(bad)
push
inc
mov
sbb
ret
mov
in
dec
xchg
aad
jmp
cmp
mov
or
and
sub
cli
and
or
cwde
ror
adc
(bad)
mov
je
mov
xor
add
mov
mov
adc
sub
push
and
xor
xchg
push
arpl
jnp
sub
inc
push
scas
(bad)
pop
and
bound
mov
xchg
jb
and
add
scas
lds
mov
out
ds
and
sbb
pusha
inc
jp
out
dec
mov
jmp
lods
stos
pusha
das
mov
gs
jbe
(bad)
imul
repz
push
sbb
adc
cmp
jg
push
jae
mov
in
xchg
out
xlat
ds
fs
cmc
jl
cmp
in
cmps
repz
out
add
idiv
lods
push
stos
mov
ret
outs
push
or
test
pop
jne
add
(bad)
push
xor
xchg
and
out
fcmovbe
sub
stc
jns
mov
and
push
and
sub
pop
push
push
xor
addr16
iret
loope
mov
adc
inc
dec
mov
mov
js
xor
jecxz
rcr
hlt
cmp
fidivr
lea
fwait
clc
ror
adc
scas
fsubr
test
sar
mov
gs
inc
fisubr
hlt
jmp
jl
imul
idiv
dec
bound
push
fdivr
and
mov
pop
or
inc
fld
popf
fisubr
mov
mov
enter
ja
inc
stc
mov
data16
cmp
adc
in
pop
dec
test
add
ss
fsubr
sbb
add
hlt
add
cdq
sub
test
mov
pusha
pop
(bad)
push
gs
sub
stos
add
xor
push
enter
jb
pop
jo
dec
retf
and
mov
ret
aam
pop
push
dec
ss
mov
ret
call
sbb
mov
addr16
hlt
xchg
lea
cmp
cmp
cmps
dec
jnp
fwait
xor
imul
inc
ror
addr16
jle
imul
and
mov
add
ins
cmp
xchg
stos
enter
fwait
add
mov
dec
stos
faddp
add
xchg
ror
popf
sbb
mov
ret
out
xchg
fisub
mov
outs
rcr
push
mov
dec
les
adc
push
les
mov
test
and
call
cmp
test
je
fsub
pop
inc
cld
ja
mov
cdq
xor
aas
mov
test
(bad)
mov
movs
inc
pop
stos
mov
mov
xor
pop
jo
push
and
jbe
loope
out
movs
test
rcl
sub
fs
sub
cld
test
or
inc
jg
cmp
xchg
and
push
sbb
fsubr
mov
push
inc
aam
sbb
dec
(bad)
sub
ret
sahf
clc
xchg
in
add
sub
add
dec
xchg
xor
and
inc
(bad)
repz
movs
xchg
sbb
pop
scas
test
or
pop
pop
mov
push
iret
sub
popf
mov
fld
jo
and
fild
popa
jge
imul
repnz
cwde
xor
xchg
scas
cmp
mov
ds
push
push
fdiv
sub
imul
jae
mov
push
ins
cmp
push
and
cld
icebp
xchg
mov
leave
lea
jmp
add
push
inc
xor
push
jp
and
sbb
loope
(bad)
out
fimul
ret
xor
pop
inc
fadd
sub
jae
aas
int3
mov
cmp
out
mov
pop
and
imul
jbe
sub
mov
enter
sar
retf
repnz
cmp
(bad)
loopne
sub
and
popa
and
ins
call
out
and
call
pop
shl
std
es
xor
cdq
bound
dec
sub
xchg
dec
fnstsw
(bad)
movs
sub
shr
sbb
cmp
cmp
adc
jg
xor
cmp
call
int3
xor
lods
or
push
or
dec
cdq
std
adc
sbb
mov
pop
inc
push
out
(bad)
in
mov
mov
sbb
mov
cmp
mov
arpl
lods
cmps
es
cmp
int3
movs
or
adc
or
jbe
aam
(bad)
ror
pop
mov
sbb
xchg
push
adc
cmp
les
jo
pop
cmp
aam
pop
int3
std
test
sbb
sub
inc
hlt
scas
jg
shl
scas
movs
clc
lahf
mov
inc
stc
hlt
fnstenv
movs
in
mov
jae
jmp
mov
jne
lahf
fdiv
lahf
xor
imul
adc
xchg
pop
rol
jecxz
outs
add
mul
lea
sbb
push
pop
push
xchg
addr16
scas
pusha
(bad)
adc
pop
xchg
hlt
lahf
pop
retf
gs
test
pop
daa
xlat
xchg
inc
cmp
jb
ret
test
inc
ins
mov
fsubrp
mov
inc
push
(bad)
(bad)
xchg
movs
cmp
push
xor
cmps
and
jae
lds
ins
mov
push
(bad)
mov
and
test
mov
mov
xchg
or
push
pop
push
outs
cmp
jge
test
xchg
and
mov
pop
mov
or
rcr
pop
mov
rcl
xor
mov
call
stc
imul
test
push
mov
sub
retf
scas
test
shr
add
sbb
jbe
jne
mov
cmps
(bad)
test
pop
or
dec
sub
cmp
add
mov
int3
nop
cmp
lds
scas
or
imul
in
or
iret
ds
jae
and
sub
mov
adc
shl
mov
and
cli
mov
pminub
jle
(bad)
repz
push
sub
push
es
pop
fsub
outs
inc
mov
sub
mov
jg
xchg
xchg
xor
push
inc
(bad)
lods
fisubr
and
inc
xor
and
push
dec
je
cs
mov
sbb
lds
adc
ss
cmps
pop
cmps
loopne
pushf
xchg
cmp
shl
jnp
(bad)
sahf
shl
ret
add
test
mov
icebp
in
in
enter
sbb
cld
mov
pop
lock
shl
mov
arpl
xor
push
and
mov
sbb
push
inc
aam
(bad)
cdq
xlat
pop
stos
push
push
out
popa
inc
fistp
(bad)
in
push
scas
aam
outs
enter
adc
leave
loope
inc
imul
xchg
std
fs
aas
scas
shl
iret
mov
jmp
test
ja
and
shr
pop
jp
adc
add
mov
or
sub
lahf
lds
mov
scas
xor
cdq
sbb
add
dec
sub
jno
imul
jb
push
add
ja
jb
push
pop
or
xor
lods
cmc
in
cmp
cmp
sahf
sbb
xchg
stos
xchg
xchg
sbb
inc
movs
test
repnz
push
pop
mov
cmp
or
ret
sub
add
mov
les
cdq
xchg
push
addr16
mov
cmp
aas
xchg
add
rcl
pop
jns
jae
mov
test
xchg
enter
sbb
(bad)
loope
test
xor
jne
jecxz
mov
(bad)
scas
or
mov
ins
mov
sbb
in
ror
or
mov
jb
and
out
inc
addr16
mov
dec
jnp
loope
repz
adc
push
outs
push
inc
in
pminsw
push
es
sub
push
mov
jecxz
gs
cmp
lods
cmps
in
and
gs
mov
push
repz
mov
cmp
fucomi
inc
in
fidivr
jl
mov
(bad)
hlt
adc
push
scas
fdiv
hlt
sbb
test
add
loopne
mov
(bad)
adc
push
dec
sbb
xchg
xor
ds
pop
inc
xchg
mov
pop
inc
in
sbb
enter
js
and
mov
mov
loope
shl
ss
xchg
inc
mov
movs
or
dec
popf
adc
(bad)
bound
jne
dec
xor
test
leave
shl
call
ret
ja
xchg
lods
inc
add
shl
mov
or
ret
jp
add
pusha
bound
jmp
test
(bad)
stc
inc
sub
xchg
dec
icebp
clc
mov
cmp
mov
(bad)
sbb
xchg
jb
aaa
add
push
push
aaa
fcmovnbe
jmp
paddq
mov
arpl
test
dec
add
add
jb
pop
popf
push
lahf
inc
retf
(bad)
jno
pop
push
push
popf
mov
outs
ss
xchg
push
cmps
lock
dec
add
int
pushf
dec
in
fstp
aad
or
arpl
int
fs
mov
dec
cmp
mov
pop
dec
clc
pusha
std
or
in
mov
push
(bad)
dec
aaa
add
sub
pusha
loopne
or
add
outs
and
sbb
loope
xlat
jnp
les
fild
xchg
adc
mov
jae
fnstenv
hlt
pop
add
jmp
push
add
pop
imul
mov
retf
pop
les
inc
sahf
pop
jge
push
push
and
mov
je
and
sbb
cwde
xchg
leave
cmp
int3
repnz
jno
sub
push
icebp
cmp
sbb
icebp
pop
jo
inc
fst
push
pop
xchg
(bad)
repz
cs
mov
cdq
cmp
stos
mov
out
loopne
push
std
sub
retf
enter
ret
pushf
out
das
and
in
int3
or
xor
xchg
add
popf
sar
add
dec
cdq
xor
or
(bad)
retf
pop
std
aaa
xchg
pop
rol
jno
xchg
inc
and
nop
mov
lods
call
mov
rcr
mov
gs
or
iret
xchg
aam
inc
cmp
repz
loop
inc
jmp
or
xor
(bad)
scas
scas
pop
hlt
addr16
push
inc
int
sub
ins
jle
mov
fs
mov
movs
cmp
xlat
leave
into
dec
pop
shr
and
sti
xchg
cdq
mov
sbb
sub
test
ins
cmps
push
and
and
enter
fstp
fldcw
jo
jge
jl
sub
in
cmp
outs
aas
ss
cmp
(bad)
call
jno
scas
sbb
sub
pushf
add
jo
pop
cmc
inc
enter
call
push
sahf
aas
in
cmp
sbb
in
xor
mov
inc
xor
(bad)
jl
jge
stc
nop
xor
adc
movs
push
rcl
lock
dec
xchg
mov
mov
jno
adc
packssdw
mov
daa
inc
lods
cs
lds
(bad)
push
sub
and
loopne
add
fisub
aas
xor
sti
loopne
imul
test
pop
out
test
lock
scas
mov
ins
cmc
adc
dec
(bad)
xchg
pop
mov
push
push
(bad)
shl
inc
jmp
mov
or
(bad)
repz
mov
(bad)
fadd
fisttp
pop
adc
rcl
push
movs
jmp
mov
pop
xchg
adc
sbb
or
sar
scas
cmp
rcr
mov
fstp
or
jecxz
fwait
sub
dec
test
mov
add
popf
sbb
aam
mov
das
retf
inc
scas
dec
scas
mov
cmp
dec
data16
push
xchg
shr
leave
int
ins
int3
or
adc
loopne
pop
inc
push
fisub
inc
test
out
jg
pop
stc
push
(bad)
repnz
cmp
shl
xor
aaa
lods
and
(bad)
xor
add
int
cli
retf
lock
outs
(bad)
xor
aad
mov
pop
push
cmp
rol
lds
test
out
jae
shr
leave
dec
cs
popa
or
clc
add
cmp
push
add
mov
bound
aad
pop
pop
mov
pop
sbb
cdq
sbb
xchg
lahf
mov
cs
retf
jnp
leave
rep
out
pop
jne
pop
popf
les
push
and
(bad)
rol
mov
jecxz
in
xchg
add
leave
scas
aas
push
cmp
sti
scas
es
or
lahf
sub
scas
rol
or
popf
mov
mov
popf
loopne
lock
jp
loope
scas
ds
xchg
adc
cmp
je
jge
mov
pop
inc
sub
inc
ud2
rol
push
xchg
push
mov
push
and
call
sbb
sbb
popa
or
inc
ret
cmp
push
mov
pushf
sub
xchg
jmp
ficom
or
mov
popf
mov
imul
dec
mov
inc
push
mov
pop
jb
dec
fldenv
adc
repz
mov
retf
ret
mov
loopne
pusha
mov
scas
les
ins
aaa
fs
push
(bad)
push
addr16
aas
sbb
hlt
imul
test
ja
jnp
pop
cmc
cs
inc
sbb
or
aas
and
or
or
js
cwde
int3
add
addr16
aaa
(bad)
pop
loop
sbb
jo
inc
pop
cwde
mov
xchg
sbb
inc
or
ds
push
js
cmp
add
jl
popa
call
and
hlt
(bad)
out
es
sbb
mov
ror
sbb
mov
jbe
inc
sti
mov
ins
xchg
push
ret
mov
xchg
mov
ss
mov
call
mov
stc
sbb
call
int3
scas
iret
mov
test
sub
sbb
mov
mov
or
outs
pcmpgtb
mov
jns
test
or
mul
sub
repz
repz
mov
sub
mov
and
hlt
repnz
ror
lds
sbb
xchg
dec
rol
push
pop
jae
inc
aaa
or
inc
gs
pusha
ss
sub
out
sti
in
lods
outs
and
leave
scas
xchg
dec
inc
xor
sbb
xchg
out
(bad)
retf
xchg
or
(bad)
call
xchg
cmp
xor
outs
addr16
add
jbe
cwde
add
or
imul
adc
ins
jns
dec
cmps
mov
mov
leave
cmp
sub
pop
push
jbe
mov
scas
outs
sar
sbb
aaa
adc
jge
mov
leave
(bad)
(bad)
sbb
mov
dec
and
cmp
sahf
dec
dec
and
mov
cmp
push
jmp
pusha
dec
jge
mov
popa
mov
in
(bad)
aaa
popa
add
ret
(bad)
pop
pushf
add
and
inc
test
into
add
or
aaa
imul
stos
jl
add
dec
or
and
or
gs
mov
in
int3
popa
push
stos
loop
push
rcr
into
mov
(bad)
sbb
mov
clc
cmps
mov
adc
jecxz
xor
mov
ss
movs
out
xor
fwait
stos
(bad)
cmp
jmp
fbld
aas
sub
mov
jl
xchg
pop
or
(bad)
or
sub
xchg
test
out
into
test
popa
test
sbb
cwde
addr16
mov
loop
adc
fucom
xor
ins
retf
shl
and
int3
imul
jge
scas
cmp
pop
cmc
mov
push
mov
jmp
xor
mov
lock
lods
pop
ins
pop
mov
dec
out
inc
sbb
inc
pop
ficomp
add
pop
call
xor
hlt
fst
add
mov
int
aam
or
pop
xor
jne
or
add
inc
push
test
jb
repnz
lock
mov
pusha
test
sbb
cmp
scas
mov
inc
pop
pop
pop
sahf
mov
push
jg
and
sbb
es
into
imul
push
aad
dec
aad
push
jmp
pop
pop
or
scas
(bad)
mov
lahf
adc
sbb
cli
ja
add
fild
push
addr16
sub
ss
add
push
push
or
inc
(bad)
cmp
pop
pushf
sub
call
popa
xor
and
out
sbb
and
sti
mov
sar
cdq
lods
jg
inc
cmp
inc
aad
daa
cmps
iret
dec
sbb
pop
repz
mov
inc
iret
jb
pop
xchg
adc
cmp
pop
xlat
sbb
outs
pop
mov
sub
retf
test
xchg
ss
dec
out
div
mov
pop
inc
push
cli
adc
fisttp
out
pop
lods
jno
in
inc
rcl
repz
xchg
rcl
dec
mov
jp
xchg
fstp
fld
or
fist
mov
jno
enter
std
into
cmp
outs
mov
mov
mov
mov
add
(bad)
sub
arpl
inc
pop
fdiv
movs
dec
dec
retf
xchg
cmp
clc
mov
xchg
(bad)
jge
mov
inc
iret
in
mov
mov
sub
pop
and
mov
cmps
int3
pop
mov
add
cmps
pop
pop
popa
mov
adc
loope
xchg
jne
mov
(bad)
mov
pop
pushf
shr
loopne
scas
push
inc
inc
xchg
xlat
dec
dec
push
ror
mov
add
fsubr
push
mov
repz
mov
(bad)
sbb
or
ret
cmp
pop
(bad)
movs
xor
scas
add
(bad)
sbb
std
lods
cli
add
lock
xor
mov
out
push
sub
inc
jg
out
mov
pop
mov
sub
mov
dec
shl
addr16
fs
(bad)
arpl
mov
push
push
loop
aaa
mov
retf
inc
dec
inc
or
mov
sub
out
lea
sub
push
jge
ss
mov
push
lea
inc
(bad)
xchg
ja
cmps
dec
rol
das
stos
fild
dec
jge
add
(bad)
ja
cmp
(bad)
mov
mov
sysenter
dec
dec
add
dec
mov
call
ret
inc
mov
push
inc
mov
jns
lds
pop
jmp
arpl
push
cli
jns
sub
add
mov
mov
jg
mov
fstp
jecxz
cli
es
std
adc
cli
or
push
int3
(bad)
jmp
mov
aaa
les
rol
or
lods
jae
movs
fisub
push
cld
adc
xchg
aaa
sahf
out
and
in
outs
leave
push
push
dec
cmp
cmp
push
sti
ins
xchg
iret
mov
mov
jae
sbb
mov
or
push
ret
mov
jae
nop
test
aad
les
repz
cdq
push
stos
lds
mov
clc
mov
jmp
xchg
and
dec
jl
daa
aad
or
(bad)
jnp
and
mov
ja
lods
or
(bad)
in
scas
pop
xchg
imul
out
mov
fst
mov
push
cmp
inc
pop
outs
(bad)
neg
inc
xchg
pop
call
sub
sbb
in
jl
ds
mov
stc
inc
adc
add
add
pop
dec
push
test
pop
adc
push
mov
test
and
push
iret
lods
enter
clc
mov
add
ins
leave
jmp
loope
call
bsf
cmc
(bad)
call
cmp
adc
push
adc
iret
push
jle
dec
loope
jmp
adc
lahf
cmc
push
call
mov
test
stc
imul
cmp
xchg
sbb
mov
fiadd
adc
ret
mov
fnstenv
nop
push
addr16
aaa
fist
sbb
or
arpl
mov
push
fild
mov
sub
dec
ins
fsubr
inc
xor
inc
inc
xchg
push
sbb
xor
scas
in
adc
ror
dec
mov
sbb
repz
pop
mov
or
adc
inc
cmp
and
outs
mov
fisub
xchg
fwait
rcl
mov
fistp
lock
jne
adc
xor
in
lods
add
outs
cmp
push
push
jmp
sub
inc
cmp
lahf
xor
adc
push
test
mov
ret
mov
dec
repz
cs
adc
inc
test
push
mov
repnz
xor
fnstenv
mov
es
scas
lahf
fwait
pop
mov
ficom
push
mov
test
add
push
dec
fs
enter
or
cmp
addr16
ud0
les
jl
push
inc
mov
loop
dec
mov
xor
(bad)
push
or
out
inc
add
lea
outs
jg
pmaxsw
sbb
xor
imul
retf
xchg
iret
jge
and
xchg
sub
mov
xchg
call
and
xchg
cmps
inc
mov
mov
jb
outs
xchg
jno
in
dec
cmps
shl
mov
dec
ret
call
pop
mov
enter
jae
pop
fistp
adc
and
and
adc
(bad)
popf
aad
test
cmp
je
ficomp
sub
xor
lods
cwde
inc
lea
(bad)
aam
ret
cs
into
lds
ficom
xchg
leave
mov
pop
xchg
jbe
or
scas
mov
mov
push
pop
mov
ds
pop
pop
iret
out
mov
xor
mov
mov
xchg
dec
ins
sbb
push
push
xchg
les
xchg
stc
mov
push
add
fild
lods
xchg
scas
ins
xor
test
add
fwait
int
outs
dec
dec
cld
loopne
mov
sti
mov
push
xor
outs
ret
frstor
mov
jmp
cmc
je
ins
dec
rol
retf
arpl
test
jl
sub
xor
dec
jl
push
jb
ss
popa
mov
sti
sub
lea
(bad)
cdq
and
fsubr
repnz
ret
and
ficomp
sbb
mov
aad
ss
daa
jae
imul
fisub
mov
push
mov
(bad)
int
fld
lea
xor
out
test
jmp
mov
leave
and
mov
xlat
jmp
out
ror
aam
xor
add
sub
les
mov
sub
jb
cmc
mov
mov
scas
sub
stos
mov
mov
rcl
push
dec
fild
add
mov
push
(bad)
push
adc
stos
call
inc
pushf
stc
fisub
ss
mov
sbb
hlt
add
mov
jp
xor
dec
in
pop
mov
mov
call
pop
pushf
dec
add
(bad)
pop
mov
retf
lods
pop
lods
jg
hlt
push
in
retf
fisttp
jmp
push
or
fnstsw
mov
mov
cmp
xchg
ds
pop
xor
daa
lods
push
dec
push
scas
(bad)
jl
ds
nop
stos
call
inc
leave
mov
xor
pop
mov
loop
daa
xchg
das
push
push
(bad)
lea
sbb
mov
xor
xchg
stos
dec
add
mov
cwde
jae
push
add
cmps
cmps
mov
lea
inc
clc
sbb
adc
mov
dec
or
xlat
cdq
test
sub
dec
ins
inc
cdq
mov
mov
mov
mov
ror
repnz
sub
inc
daa
(bad)
xor
jl
ss
cmp
cmc
fisubr
outs
popa
inc
xor
mov
inc
cmp
cwde
or
std
sub
pusha
pop
dec
iret
mov
cmps
fld
ja
pop
mov
cmp
and
sub
mov
push
sti
pusha
push
push
(bad)
div
or
inc
(bad)
sub
sbb
out
lds
loopne
xchg
movaps
mov
adc
lods
ror
push
in
adc
xor
mov
shr
mov
cmp
mov
add
xchg
xchg
inc
mov
sbb
fdiv
xor
dec
push
xchg
jecxz
xchg
fld
xchg
js
or
imul
in
cmp
cmc
mov
pop
fadd
xchg
push
cmp
lea
mov
(bad)
sbb
imul
dec
mov
sbb
fimul
sbb
dec
pop
dec
arpl
adc
adc
xchg
(bad)
dec
inc
sbb
mov
jle
dec
aaa
jge
jb
jl
and
push
inc
arpl
add
cmp
sahf
ret
dec
ror
fimul
xchg
test
xchg
imul
imul
mov
fs
loopne
jbe
add
and
and
repz
jmp
xchg
mov
fst
mov
mov
je
pop
mov
movs
mov
fisubr
xchg
gs
xchg
js
jg
test
add
fisttp
adc
int
push
jge
xchg
inc
push
aaa
clc
add
and
pop
add
aaa
dec
movs
mov
popf
fyl2xp1
imul
inc
push
push
xlat
call
iret
cli
(bad)
(bad)
xchg
dec
sub
pusha
xor
add
push
and
retf
inc
(bad)
not
dec
and
shl
mov
and
stos
cld
aas
jbe
aam
pop
adc
sub
imul
call
xor
sub
adc
aas
cmp
or
imul
pop
mov
and
xchg
mov
aam
ins
outs
pusha
ss
stos
jle
mov
(bad)
push
or
push
pop
sub
lds
loopne
push
ret
pop
adc
mov
and
stc
das
cmps
mov
cmp
out
xor
mov
sub
(bad)
jnp
sbb
out
add
inc
xchg
pop
dec
retf
fcmovnbe
jecxz
cmp
mov
dec
rcl
popa
pop
aaa
rcr
nop
cmp
xchg
div
dec
test
dec
imul
repnz
data16
rcl
xchg
jle
mov
loop
ins
cmc
retf
je
les
sti
out
dec
out
(bad)
rol
and
addr16
int
iret
int3
xor
clc
test
cmp
ss
mov
lds
cmc
lahf
iret
aad
adc
jb
bswap
clc
inc
push
sub
inc
jne
dec
pop
clc
xchg
push
mov
cs
adc
cmp
mov
xchg
cmps
sub
hlt
fldcw
sub
push
mov
(bad)
lods
enter
loope
xchg
sbb
push
mov
add
cmp
push
test
pushf
sti
leave
inc
in
pop
ss
mov
dec
jp
sbb
xor
inc
cmp
neg
jge
jl
mov
arpl
adc
or
sbb
into
or
rol
mov
xchg
adc
addr16
cmp
jmp
xor
xor
fneni(8087
rcl
rep
and
fist
push
bound
stos
daa
xchg
sbb
pop
xchg
xchg
inc
cmc
adc
pop
loopne
push
mul
xor
fiadd
fchs
or
out
bound
ret
push
dec
lods
cmp
and
clc
jle
das
add
fcomp
mov
in
ds
push
retf
scas
rcl
ret
fldln2
lea
in
sbb
mov
call
add
push
cmp
mov
cmp
and
pop
mov
fild
lods
cmps
adc
(bad)
jmp
rol
inc
cmps
mov
(bad)
in
test
lods
enter
gs
stos
or
(bad)
cmp
js
mov
push
xor
mov
pminsw
jb
cmps
shr
fxam
sub
div
jecxz
xchg
in
pop
mov
addr16
scas
sub
push
adc
outs
add
dec
dec
pop
jge
data16
xchg
lods
(bad)
stc
inc
sti
into
jb
inc
int
or
or
fst
dec
daa
jle
push
cs
test
aas
fisub
jo
(bad)
addr16
sub
leave
int
xchg
mov
loope
daa
sbb
scas
adc
xchg
je
(bad)
jo
movs
jle
dec
push
pop
(bad)
pusha
shl
inc
cmps
stos
movs
fdiv
je
cmc
sbb
jnp
add
sbb
nop
push
dec
add
icebp
inc
add
js
stos
cmc
push
adc
div
stos
stc
sbb
fst
xchg
ret
rol
adc
pop
xchg
ins
aas
shl
cwde
jo
sub
test
int3
mov
inc
jo
xchg
jmp
push
adc
pop
scas
mov
adc
fbld
test
leave
jb
xor
test
inc
cdq
retf
sub
dec
xchg
push
mov
es
cld
jbe
inc
cmc
sub
stc
fs
xor
mov
lods
call
dec
xchg
outs
sbb
into
or
dec
cmps
gs
std
sub
inc
or
jmp
or
mov
movs
mov
ss
mov
add
push
lods
out
test
out
lock
out
xlat
ror
or
cmps
in
outs
mov
pop
push
cli
lods
cld
adc
or
test
xchg
pop
dec
xchg
xchg
jae
sbb
pop
daa
stos
shr
xchg
mov
stos
dec
ror
addr16
outs
xchg
aad
push
fsub
cmp
mov
jbe
cld
jb
fnstenv
inc
mov
in
out
push
xor
lods
jmp
scas
add
fidivr
mov
pusha
push
mov
lea
push
je
adc
mov
fwait
add
pop
leave
sub
inc
test
test
adc
lahf
add
cmp
jbe
xchg
iret
int3
xchg
test
sub
xor
push
daa
repz
jg
in
(bad)
xlat
sub
out
shl
aaa
out
dec
xchg
out
lods
add
(bad)
lea
test
cdq
jl
lock
mov
sbb
push
mov
mov
vrsqrtss
stc
sub
jmp
ins
push
or
out
jge
sbb
std
in
daa
gs
js
and
xchg
pushf
scas
ret
jle
pop
cmp
jmp
xchg
dec
loop
mov
mov
mov
cmp
hlt
imul
mov
mov
add
mov
out
mov
(bad)
in
pop
ror
lods
cli
mov
mov
push
xchg
pop
lock
clc
mov
sahf
jle
(bad)
jl
popf
fidivr
mov
movs
out
xchg
lds
mov
jno
pop
xor
leave
mov
bound
scas
test
addr16
sbb
dec
adc
and
push
call
shr
push
in
mul
push
jo
mov
add
popa
les
pop
fs
call
push
dec
neg
int
aad
mov
dec
or
hlt
pushf
and
sbb
daa
push
dec
xchg
mov
shl
(bad)
cmp
xor
cmp
ja
mov
mov
test
fld
cli
retf
fcmovne
push
and
push
addr16
pop
out
test
mov
and
mov
stos
sbb
pusha
xchg
loopne
(bad)
(bad)
in
lods
add
outs
lahf
gs
dec
ds
and
mov
jmp
push
imul
mov
call
and
(bad)
repnz
ins
xchg
xchg
ins
leave
dec
mov
scas
push
inc
(bad)
jbe
dec
test
std
stc
cmp
sbb
and
xchg
ror
fidivr
stos
mov
out
sbb
icebp
daa
pop
test
jb
sub
xchg
or
loop
dec
mov
sti
or
cmp
add
or
(bad)
cmp
addr16
xchg
aaa
adc
(bad)
pushf
(bad)
hlt
jge
mov
shr
fld
push
xlat
xchg
cld
and
test
enter
pop
dec
pushf
push
or
xor
add
and
js
xchg
jle
adc
push
jns
add
loopne
mov
cmp
sbb
push
cmps
pop
pop
xchg
mov
push
jp
mov
mov
sbb
or
out
(bad)
adc
inc
jo
sbb
mov
(bad)
(bad)
push
inc
xor
sar
mov
ror
add
sub
add
mov
jg
je
dec
das
dec
jo
das
pusha
lea
adc
test
shl
mov
shl
add
add
dec
lods
push
lods
xchg
and
cdq
cld
rcl
int3
enter
enter
or
add
imul
inc
xchg
xchg
aaa
mov
xlat
in
jb
test
mov
jge
outs
mov
sahf
add
sub
inc
jns
pop
pop
ins
xor
xor
jmp
xchg
jp
loopne
mov
movs
xor
pop
push
jge
or
adc
push
xor
ja
(bad)
pop
mov
cmps
(bad)
add
movs
cmps
aam
and
int3
cdq
repnz
es
adc
retf
(bad)
js
xchg
or
pop
inc
inc
retf
hlt
xchg
es
out
je
outs
jbe
cdq
cmp
stc
mov
push
lahf
dec
cmps
in
fild
mov
push
sub
mov
sbb
rcr
cdq
add
pop
mov
fst
mov
xor
add
pop
icebp
mov
add
outs
(bad)
dec
div
pop
xor
shr
xchg
and
jns
add
pop
dec
das
popa
aad
adc
sub
pusha
popa
sti
pop
loopne
lea
lods
ds
ja
ins
test
sbb
inc
and
enter
out
popf
ds
dec
lock
inc
fisub
jns
jge
pop
stc
ror
enter
rol
pop
xor
pushf
fstp
nop
inc
sub
cmp
jo
enter
dec
sub
jmp
popf
push
or
cwde
pushf
aas
das
sbb
add
fnstenv
push
pop
jp
pop
add
xor
push
in
mov
mov
adc
xor
scas
ret
rcr
inc
dec
mov
inc
mov
icebp
pusha
out
sub
icebp
mov
scas
mov
out
xor
imul
loopne
and
nop
push
pop
jmp
pop
repnz
gs
jo
and
pusha
loopne
push
cmp
inc
andps
xchg
dec
(bad)
mov
pop
push
into
xchg
mov
pop
xchg
fldenv
fadd
mov
add
popa
jmp
jno
jmp
inc
xor
retf
or
lock
repnz
mov
xor
pop
pop
push
adc
in
jmp
pusha
adc
lahf
loopne
imul
inc
sbb
mov
xor
loop
pop
cld
cmps
mov
imul
push
xor
es
jecxz
mov
aad
and
bound
or
call
jecxz
iret
scas
mov
or
test
je
lods
mov
jmp
jecxz
popa
jmp
cmp
ret
cmps
jge
imul
inc
inc
xchg
addr16
cmp
xchg
jge
mov
xor
aam
movs
ror
adc
lock
push
(bad)
dec
and
loop
mov
adc
cli
jnp
push
jmp
sahf
mov
mov
aas
or
xchg
xor
sbb
je
inc
retf
push
mov
lahf
or
pusha
inc
mov
lock
jg
mov
xchg
inc
jne
and
aam
call
pushf
pushf
xor
add
das
ds
das
cmps
pop
cmp
xchg
push
mov
and
adc
or
pop
or
sti
cld
cmp
rcl
mov
dec
lock
fldenv
pop
es
pop
ret
jmp
into
outs
mov
jae
inc
leave
fdivr
pop
shr
dec
and
lods
ss
push
and
call
xor
cmp
ret
pop
inc
mov
ins
in
stos
xchg
lods
xchg
dec
inc
les
and
popa
pop
push
or
sub
pop
mov
aaa
shl
std
pop
clc
mov
arpl
xchg
(bad)
jo
push
fs
retf
or
ins
pop
call
ins
call
test
bound
or
(bad)
scas
rcr
push
inc
(bad)
imul
rcl
mov
cdq
sub
mov
push
iret
pop
push
sub
outs
xor
(bad)
jl
add
ja
sbb
dec
movs
fwait
in
and
sar
gs
inc
mov
test
js
rcl
(bad)
cmovo
push
enter
xchg
pop
xor
mov
mov
call
adc
pop
rcr
imul
push
xchg
pop
cmp
mov
aaa
fsubp
add
xor
les
sahf
sbb
(bad)
fcomp
cmp
mov
add
std
lods
mov
in
aad
jns
out
sbb
daa
sub
push
btc
jb
mov
push
jmp
clc
mov
xchg
sbb
out
ins
xor
into
xor
out
sbb
sbb
bound
retf
dec
int
cmp
xor
push
push
iret
sub
(bad)
popa
mov
sub
xor
mov
loop
sub
inc
outs
xchg
jbe
fmul
xchg
sar
mov
div
(bad)
xlat
fwait
loope
mov
jo
push
fcom
sahf
inc
or
es
add
sbb
jae
imul
inc
dec
push
push
mov
adc
xchg
ins
jb
sbb
je
test
int3
xchg
int3
movs
mov
aam
push
test
mov
xchg
stos
(bad)
fidivr
push
inc
mov
pop
mov
push
inc
cmp
in
inc
imul
push
sbb
loope
shl
adc
xchg
dec
pop
fist
cmc
jmp
pop
sar
jns
adc
repz
out
jmp
or
(bad)
scas
fnsave
fs
test
fcom
push
test
pop
aas
mov
les
sbb
mov
sub
xchg
xchg
and
and
outs
jb
mov
xchg
(bad)
nop
or
loopne
jne
pop
pop
inc
jmp
fsubr
mov
fucomp
ins
mov
ins
mov
cmp
jne
stos
daa
int
das
pop
jno
lea
cmp
outs
loopne
in
and
loopne
lods
addr16
xchg
das
mov
cmp
or
int
ret
loopne
adc
or
inc
iret
pop
pop
movs
xchg
daa
cmps
push
dec
sub
adc
popa
xor
cmp
out
xchg
add
push
ret
pusha
arpl
dec
ret
or
arpl
jo
jg
mov
rol
popa
int3
push
push
push
sbb
fs
sbb
dec
lock
jae
fcomip
mov
mov
movs
cmp
repnz
mov
sub
lds
iret
daa
xchg
into
or
test
imul
rcl
sbb
jmp
cmp
xchg
popf
push
int3
cli
loopne
jbe
sbb
(bad)
repnz
dec
repnz
sub
xchg
mov
mov
test
sub
add
mov
lods
and
rcl
jp
popa
add
pop
push
mov
dec
out
mov
dec
(bad)
cmp
ss
retf
les
dec
add
in
sbb
pushw
mov
mov
mov
sbb
and
cwde
mov
mov
test
aam
push
out
xor
imul
mov
adc
and
imul
push
mov
(bad)
adc
jmp
and
sub
sti
xchg
jmp
inc
and
call
mov
xor
mov
outs
cli
or
retf
mov
jne
pop
call
cld
cmp
sar
mov
js
fwait
push
sbb
aad
test
pushf
mov
pop
stc
aaa
test
cmp
mov
push
pop
fist
js
(bad)
mov
mov
sbb
or
cmps
pushf
push
inc
ins
sub
mov
jns
jns
add
inc
or
shr
jmp
imul
cmp
int
fnstcw
mov
cs
jnp
xor
in
dec
mov
cmp
jns
imul
inc
test
(bad)
pop
leave
adc
pop
jge
and
loope
pop
adc
or
push
push
cmp
adc
pop
test
pop
aad
test
and
add
pop
in
div
aad
fcomp
mov
int3
and
into
scas
mov
inc
mov
(bad)
cmps
loopne
mov
int
push
jmp
int
jle
push
or
addr16
xor
out
pop
xchg
imul
je
pushf
jnp
in
hlt
push
mov
mov
(bad)
movzx
dec
mov
push
daa
out
fs
push
movs
ror
adc
daa
fcomi
jmp
outs
int3
dec
(bad)
push
dec
pop
add
jmp
mov
mov
xchg
sbb
dec
mov
into
push
jb
arpl
mov
call
movs
sbb
add
clc
cmps
sub
xchg
mov
ds
mov
fnsave
jno
adc
movs
mov
push
fnstsw
in
(bad)
fistp
or
inc
sbb
or
inc
in
test
pop
ins
pop
push
int
test
jmp
dec
dec
and
rcl
stc
into
dec
mov
adc
fwait
aas
aam
xchg
jns
jecxz
das
mov
pop
mov
pop
mov
cmps
imul
(bad)
or
fld
xor
(bad)
dec
mov
shl
xor
fwait
inc
cdq
cdq
jmp
jmp
cmc
pop
inc
(bad)
jecxz
inc
mov
daa
(bad)
cs
out
mov
ja
mov
push
pop
fidivr
push
int
aad
popa
mov
test
push
jo
in
call
xor
outs
mov
jmp
stc
jb
add
test
test
sub
cld
add
mov
xchg
pop
movs
aad
aad
pop
je
sub
shr
inc
jge
pop
(bad)
jl
push
sbb
cmps
ins
jecxz
add
pop
sbb
or
inc
imul
out
in
mov
sbb
inc
adc
sbb
xor
stos
js
or
stos
rcl
mov
xchg
and
and
adc
adc
daa
cld
or
adc
ret
jb
mov
mov
aaa
shl
lea
mov
jns
movs
xor
popf
adc
cmp
mov
inc
add
shl
shr
aas
fist
out
ficom
mov
outs
dec
nop
lods
idiv
add
imul
push
mov
sub
xchg
xchg
pop
push
dec
pop
cmps
frstor
test
mov
mov
sahf
mov
div
sti
movs
ret
fsubr
(bad)
fcomp
nop
mov
pop
adc
jno
std
shl
push
fidivr
ror
js
or
(bad)
into
fisub
push
retf
iret
data16
(bad)
cmp
ins
cmp
cli
int
adc
lahf
stos
and
cmp
jnp
test
test
or
shr
jns
loope
mov
and
test
add
retf
mov
mov
scas
jl
xor
or
xchg
add
out
cmp
sub
jno
lods
out
out
dec
dec
jecxz
or
mov
loopne
(bad)
pop
xchg
ins
or
ins
mov
mov
mov
or
std
inc
sbb
push
mov
retf
rcl
dec
xchg
push
scas
out
jb
adc
cld
and
xchg
sbb
adc
mov
and
in
in
ret
aas
sub
mov
int
lds
rol
in
and
rol
adc
xor
mov
js
rol
mov
pop
sub
lea
cld
(bad)
pushf
mov
xor
mov
xchg
test
jo
pop
clc
adc
xchg
cmp
jmp
mov
jge
add
or
inc
es
cdq
and
pop
xchg
mov
retf
les
js
pop
mov
repz
inc
and
popa
adc
and
jge
ins
push
gs
mov
fwait
pop
or
(bad)
imul
hlt
push
call
inc
enter
rcr
les
xchg
cs
jecxz
mov
adc
loope
movs
mov
push
ins
push
shr
into
push
ins
(bad)
xchg
ja
xchg
outs
pusha
add
shr
stos
or
(bad)
ds
dec
adc
fcmovu
sub
jl
clc
(bad)
out
dec
ror
ret
ds
xor
inc
sub
add
leave
sbb
push
jg
rcr
mov
shl
push
add
fdivrp
adc
push
mov
jno
out
(bad)
ret
mov
cmps
mov
pop
xchg
xchg
stc
dec
lods
mov
sbb
ror
mov
mov
out
mov
in
mov
push
fcom
mov
nop
sub
jnp
das
mov
pop
mov
fmul
stos
addr16
push
mov
sub
lahf
dec
inc
jo
fld
lock
mov
test
lahf
lahf
dec
call
add
rcr
cmc
popf
das
icebp
test
inc
dec
enter
in
cli
push
sbb
dec
inc
call
div
push
mov
add
sbb
daa
lods
fs
lock
rol
int3
popf
mov
xlat
mov
not
scas
mov
in
xchg
add
ret
and
or
add
mul
int
push
jns
ja
inc
daa
mov
aas
push
lock
or
add
cmps
and
bound
arpl
pushf
pop
mov
(bad)
and
jmp
dec
adc
jp
add
cmp
or
iret
repz
push
mov
mov
test
paddsb
push
dec
pop
xor
adc
out
sbb
jae
cli
cmp
popa
lock
rol
inc
xchg
pop
inc
jecxz
imul
dec
clc
sbb
imul
in
fs
addr16
cmps
popf
out
outs
fisubr
mov
dec
bound
int3
cld
imul
cdq
jge
popa
pop
test
aaa
or
pop
dec
call
sbb
xchg
mov
sbb
mov
ja
dec
(bad)
push
push
pushf
les
xor
jg
jne
bound
mov
or
ins
lds
imul
mov
repz
push
mov
loop
pushf
add
aad
cmc
and
pop
inc
ss
in
dec
cmp
leave
add
call
push
push
xor
ja
jge
and
jb
push
ins
push
shr
and
call
xor
add
inc
jl
push
pop
outs
jmp
sub
or
and
adc
mov
fs
cmp
push
push
push
sbb
sub
(bad)
cmps
retf
add
test
and
adc
pop
repnz
jmp
repnz
or
mov
in
xchg
push
imul
in
std
cmps
sub
sub
xchg
outs
mov
enter
add
loope
retf
repnz
xor
cmps
sub
and
adc
add
ss
mul
pandn
lds
fsubr
in
sub
mov
mov
nop
lock
mov
xor
mov
jo
jge
xor
inc
cmps
sub
pop
ins
repz
adc
sub
xchg
and
shl
repz
lods
je
xchg
repnz
in
shl
adc
sar
inc
or
lock
xor
shl
(bad)
sbb
mov
push
sbb
fcom
jnp
or
aad
in
dec
jns
pop
iret
mov
push
xlat
push
div
idiv
mov
jmpw
pop
neg
push
mov
repz
mov
sbb
push
movs
ins
pop
in
(bad)
cmp
in
dec
cdq
xchg
nop
mov
xor
outs
xor
nop
jmp
cmp
jno
shl
std
(bad)
out
(bad)
into
mov
mov
mov
push
sbb
sub
lock
push
mov
push
andnps
addr16
dec
and
jb
aas
popa
inc
sbb
leave
pop
xchg
jae
xor
lds
mov
inc
push
mov
mov
jbe
(bad)
pop
ds
push
mov
iret
cs
sahf
aaa
js
repnz
popf
push
inc
mov
sub
sub
hlt
test
jno
leave
cld
push
cmc
jmp
pop
leave
mov
jae
fidiv
test
sbb
push
push
js
jae
add
inc
mov
jl
mov
xchg
fwait
stos
cmp
push
out
pop
mov
push
adc
icebp
(bad)
cld
ret
repnz
cmps
sub
lds
jmp
xchg
(bad)
popa
(bad)
cmp
mov
pop
inc
dec
dec
ja
sbb
inc
mov
icebp
in
mov
bound
xchg
cwde
(bad)
(bad)
(bad)
sbb
and
les
adc
sbb
nop
je
inc
and
jb
or
inc
(bad)
mov
mov
arpl
(bad)
pop
cmp
ins
mov
push
mov
sbb
push
repz
dec
js
xor
inc
popa
inc
ret
adc
sbb
loopne
outs
rcr
add
sub
push
loop
outs
xlat
xchg
pop
loop
xor
push
push
data16
mov
sbb
inc
push
dec
sbb
fild
adc
push
adc
dec
out
jmp
nop
cld
mov
or
js
pop
push
sub
inc
test
inc
cdq
outs
icebp
call
push
(bad)
mov
mov
add
mov
mov
push
bound
mov
hlt
sbb
rcl
retf
push
jmp
push
or
dec
lods
jp
test
ins
mov
arpl
jp
or
test
stos
popf
push
sti
sub
jl
push
dec
sub
inc
dec
pop
or
retf
idiv
fnstcw
ds
inc
adc
mov
add
and
and
pop
mov
scas
mov
dec
mov
pop
or
psllw
push
ins
push
std
add
cmp
cmp
rol
sbb
adc
outs
out
iret
bnd
popa
add
inc
xchg
mov
mov
mov
cdq
shr
(bad)
repnz
movs
idiv
retf
ds
enter
jbe
push
in
jae
jo
in
jo
aaa
mov
setg
ret
lock
dec
int3
jl
sub
mov
int3
add
cwde
pop
dec
inc
mov
adc
mov
sbb
cmp
clc
aam
mov
xor
mov
xchg
es
cwde
pop
je
or
jae
pushf
xchg
sbb
mov
jns
xor
fndisi(8087
ja
(bad)
add
or
and
mov
scas
sahf
push
pop
test
push
(bad)
mov
sub
aas
gs
xchg
adc
mov
(bad)
cld
pop
lock
rcl
pop
imul
cmp
mov
repz
jp
xor
or
mov
sbb
mov
cmc
loop
retf
out
inc
add
mov
mov
mov
cmp
push
xchg
mov
push
ror
mov
xchg
jo
add
int3
inc
or
lds
nop
xor
in
mov
push
scas
cmps
add
sub
gs
int3
icebp
std
and
fwait
add
mov
sahf
jb
xor
icebp
in
add
pushf
or
outs
in
jno
pop
neg
mov
mov
jne
adc
mov
pop
repnz
push
pop
mov
aaa
imul
inc
nop
push
mov
adc
push
xchg
jmp
xchg
sar
jl
adc
adc
lahf
scas
and
cmp
dec
adc
(bad)
and
pop
popa
jmp
lds
out
and
fwait
jb
cmp
push
fsubr
leave
out
sbb
popa
push
sbb
mov
add
stos
sbb
cs
sub
int
fwait
mov
mov
fcmovne
push
push
mov
retf
cld
mov
xor
les
arpl
push
jg
mov
rol
aam
and
mov
je
adc
adc
jle
pop
push
addr16
popa
ja
ds
pop
pop
push
xor
shl
sub
call
cdq
das
cmps
shr
xchg
rol
fidiv
aam
jns
adc
xor
(bad)
pop
inc
cmps
inc
std
push
push
rep
or
add
jp
or
jecxz
imul
inc
mov
cmps
sti
stos
and
push
xor
jmp
jns
mov
xor
retf
mov
repnz
mov
cmps
mov
pop
dec
sbb
xchg
mov
inc
imul
and
not
mov
je
aam
adc
dec
cmps
iret
ss
mov
dec
mov
push
ss
add
cmp
adc
dec
xor
xlat
push
xchg
dec
shr
xchg
and
mov
jno
imul
outs
aad
and
sbb
pop
fsubp
xor
outs
push
in
mov
icebp
push
mov
sbb
fcmovu
loop
pop
xor
int3
gs
ror
push
adc
mov
add
rol
lock
fsubr
gs
ss
push
fld
cld
xor
dec
lods
add
daa
in
mov
jge
jp
js
shl
loop
jne
sub
retf
jb
jg
fwait
je
push
adc
aas
cwde
aas
adc
sbb
jmp
jmp
bound
and
stc
lock
jg
mov
pop
outs
dec
stos
cli
ja
add
jmp
scas
sahf
loop
dec
and
push
push
xchg
inc
jmp
movs
mov
fs
xchg
dec
sub
and
pop
fld
sar
jg
mov
cmp
add
loopne
das
sbb
inc
pop
xor
jge
into
mov
cmc
push
add
xchg
cld
call
and
jmp
mov
cdq
daa
je
mov
outs
push
or
pop
push
mov
dec
imul
or
popf
je
bound
adc
in
inc
ins
in
add
pop
fcmovbe
and
iret
xlat
retf
fucomp
(bad)
lods
leave
xor
mov
frstor
std
js
cli
pusha
nop
push
div
int
ins
push
outs
cmp
jbe
rcr
cmp
iret
add
rol
lahf
or
leave
or
mov
inc
add
or
fsubr
or
inc
lahf
or
add
imul
push
jno
cmc
cmps
mov
dec
cmp
inc
mov
mov
sbb
mov
sbb
sar
loop
jp
std
inc
xchg
fild
shl
and
ret
mov
adc
jno
pop
cmc
fisubr
sub
fsubr
mov
cmps
lahf
test
movlhps
jae
retf
out
jmp
sahf
adc
sar
shl
sub
outs
ins
lods
ins
xchg
les
js
or
mov
mov
imul
call
mov
les
jo
mov
pop
outs
pop
mov
je
mov
cwde
inc
cmc
ins
push
mov
arpl
popf
lods
imul
movs
movs
in
nop
inc
mov
(bad)
cmp
inc
stos
pop
adc
fs
sahf
(bad)
adc
loopne
lahf
dec
scas
iret
call
out
cmps
jg
test
icebp
inc
cmp
adc
shl
call
data16
out
inc
jae
gs
aaa
outs
test
sub
sbb
ret
sahf
inc
or
popf
es
or
pop
pop
cmovl
aas
jecxz
xchg
jnp
outs
cwde
sbb
push
xor
cmp
pop
add
aaa
lds
dec
dec
dec
lods
add
push
xor
xchg
aaa
movs
push
fisttp
and
sbb
add
add
je
mov
(bad)
icebp
out
adc
adc
fwait
(bad)
out
pushf
jae
pop
aas
dec
call
mov
mov
lods
(bad)
adc
mov
and
sar
or
(bad)
out
ficom
jg
and
mov
sub
pop
in
fs
mov
sbb
jmpw
and
outs
cdq
jg
xchg
dec
xchg
mov
jnp
dec
pop
outs
dec
mov
test
add
sti
dec
or
xchg
pop
dec
lea
lea
fidivr
and
push
dec
jo
push
scas
ss
mov
xchg
mov
fdivr
dec
sub
jmp
ror
dec
popf
ret
dec
or
scas
dec
jp
lds
dec
push
and
(bad)
jb
and
pushf
push
jp
imul
fdiv
push
cmps
pop
sbb
sbb
cld
dec
lds
iret
inc
pushf
mov
pusha
into
mov
xchg
jle
and
jbe
test
lea
push
fld
imul
outs
pop
xchg
jle
fsubr
dec
(bad)
popa
cmp
lods
mov
xor
or
jne
pop
addr16
and
mov
jle
and
add
jno
int3
add
pop
not
xchg
imul
pusha
(bad)
mov
or
jb
or
inc
or
xor
mov
fild
aam
or
xor
sbb
cmps
in
je
fistp
mov
out
pop
call
sbb
sub
retf
add
(bad)
fucomip
jb
iret
shl
sti
fcomp
inc
jo
cmps
and
(bad)
pop
jge
mov
test
cld
jmp
or
mov
mov
nop
cmp
mov
into
sbb
sub
aaa
mov
cmp
(bad)
xlat
sub
add
add
mov
and
(bad)
cmp
aaa
pop
sbb
dec
into
hlt
xchg
imul
xor
xchg
jecxz
sub
xchg
xchg
test
aad
or
jle
popa
fidiv
outs
movs
adc
adc
ss
aaa
mov
out
popf
sub
sar
(bad)
jecxz
mov
cmp
fimul
mov
test
retf
les
mov
cdq
out
mov
ins
movs
sbb
outs
push
or
test
cmps
hlt
repz
jg
aaa
push
in
(bad)
mov
xchg
and
xchg
ins
ficom
jg
aaa
or
jecxz
push
mov
or
mov
inc
sbb
jp
xchg
arpl
mov
in
add
std
pop
jmp
push
jb
dec
cwde
adc
cmps
imul
loopne
mov
data16
rol
push
jp
cmp
(bad)
mov
popf
hlt
push
xor
or
jae
pop
jbe
sub
das
repz
mov
fsubr
out
dec
fild
shl
je
jg
loop
mov
push
dec
xchg
mov
addr16
adc
aaa
cmp
adc
xor
sti
inc
nop
jnp
in
sbb
jmp
aad
aam
mov
rol
bound
add
pop
mov
out
fsubr
sub
and
lock
scas
push
mov
inc
jmp
jae
mov
cdq
retf
shr
pop
aaa
cmp
mov
cwde
inc
mov
retf
mov
packssdw
push
out
dec
dec
movs
pop
xchg
jg
leave
mov
mov
int
std
cmp
iret
dec
call
repz
mov
push
pop
imul
mov
dec
(bad)
mov
add
sub
js
cmps
fiadd
xchg
stc
fwait
or
(bad)
inc
sahf
jmp
out
and
jno
loopne
(bad)
xchg
xchg
mov
mov
sub
rcr
pop
int3
xchg
lea
call
loopne
xor
(bad)
jnp
and
movs
inc
jl
clc
mov
test
lea
sub
daa
jnp
popf
in
sbb
jne
hlt
fild
(bad)
xor
outs
idiv
ror
jl
je
nop
xor
addr16
int3
cmp
mov
aaa
mov
cmp
jae
xchg
jb
mov
scas
mov
jge
fs
mov
call
pop
mov
hlt
or
ror
popf
(bad)
pmulhuw
fidivr
jae
(bad)
sbb
and
(bad)
pop
mov
in
jecxz
and
fstp
mov
hlt
mov
jne
out
mov
jnp
jmp
xor
jp
add
xor
rcr
dec
inc
inc
mov
sub
(bad)
mov
bound
movs
mul
shl
cs
jle
out
ja
jecxz
data16
clc
add
aas
push
arpl
dec
imul
fnstenv
lock
je
fnstcw
mov
dec
sti
imul
xchg
fisub
shl
rcl
sub
ins
xor
stos
xor
mov
es
rol
jp
out
arpl
mov
jmp
enter
imul
jo
jno
push
scas
retf
pusha
(bad)
inc
test
jecxz
jp
cmc
dec
lods
imul
sub
ret
cmp
stos
cmp
(bad)
mov
inc
retf
(bad)
(bad)
test
push
add
pushf
pop
sbb
gs
jbe
scas
lock
xor
in
mov
dec
mov
test
jns
inc
movs
cmp
push
(bad)
cmp
push
or
push
cmp
stos
jmp
repz
jecxz
sub
imul
mov
dec
add
call
ja
cmp
test
pop
clc
repnz
or
shl
out
shl
aaa
xchg
repz
fiadd
or
addr16
jl
dec
xchg
dec
loopne
push
data16
ret
lock
(bad)
data16
dec
sub
inc
inc
call
shl
ss
add
cmp
jb
call
test
pop
scas
add
gs
sbb
cs
shl
add
dec
jle
jne
icebp
cmc
xor
add
enter
dec
or
mov
pop
mov
inc
std
xor
popa
daa
cli
fsubr
pop
loopne
fcmovb
mov
sbb
inc
push
shl
cmp
mov
push
aad
addr16
int3
jb
push
(bad)
and
mov
pop
int
mov
es
in
mov
enter
(bad)
out
js
or
(bad)
sub
dec
inc
aaa
cmps
xchg
(bad)
ficomp
test
nop
in
ret
clc
and
push
lds
clc
dec
setns
sub
jp
rcr
sub
jecxz
inc
nop
inc
or
repz
push
cld
mov
xchg
pop
jecxz
neg
or
(bad)
mov
lea
pop
fucomp
fdiv
mov
add
cmp
jge
data16
pop
lock
int3
leave
jne
jmp
gs
xchg
test
cld
das
out
retf
stos
fbld
imul
or
mov
lea
out
push
out
retf
or
mov
ret
cmc
push
ja
lods
addr16
test
jmp
out
ret
sub
or
sbb
fadd
add
mov
mov
rcr
int3
ins
xchg
cld
add
xor
ret
call
inc
and
fld
(bad)
movs
or
push
mov
sub
(bad)
xchg
or
sbb
add
add
pop
push
or
gs
cwde
mov
and
mov
sahf
ror
inc
sbb
aam
mov
mov
cmp
pop
dec
aas
jecxz
push
jle
lods
test
push
fcom
cwde
add
xor
dec
mov
lahf
aaa
inc
arpl
mov
repnz
mov
or
iret
add
jmp
adc
test
stc
leave
mov
and
cmc
stos
aas
xchg
loop
loop
jge
test
out
mov
jb
mov
nop
xchg
aam
mov
push
fcompp
dec
sub
sbb
mov
cmp
adc
mov
and
mov
inc
add
retf
shl
fisubr
rcl
sahf
and
mov
inc
ret
lahf
mov
and
sbb
mov
ins
cli
neg
(bad)
cmp
aaa
sti
add
sub
add
xor
nop
or
pop
in
push
lds
aam
aas
or
xchg
daa
pop
outs
cmc
(bad)
loopne
jb
add
sbb
mov
mov
jmp
adc
mov
ja
icebp
sbb
addr16
movs
push
fist
lahf
and
mov
cmp
call
adc
lods
ja
in
fucomp
add
xor
xchg
repnz
fidivr
aas
loop
or
cdq
inc
pop
scas
jg
movs
rol
(bad)
lods
js
ret
mov
test
pop
aaa
lds
add
das
cmp
cmp
cli
xchg
fucom
sahf
and
inc
inc
jnp
dec
lahf
jmp
cli
jmp
loopne
icebp
inc
or
les
stos
loopne
je
outs
sub
mov
outs
xor
test
aad
fs
jecxz
addr16
loope
push
aas
lods
pop
mov
jo
jb
data16
scas
lods
out
mov
lods
fxch
jns
js
mov
jb
xchg
xchg
adc
jecxz
xchg
dec
idiv
ror
pop
fidivr
sbb
or
mov
hlt
pop
mov
retf
adc
cli
xchg
rol
pop
ins
push
popa
mov
repz
outs
mov
dec
pop
push
loope
pop
xchg
in
ror
mov
mov
add
fild
jp
inc
push
fisub
ja
mov
push
rcr
mov
push
dec
sbb
sbb
cs
in
stos
pop
loope
add
dec
mov
dec
xor
xchg
sbb
int
pop
out
(bad)
sti
pop
push
inc
jmp
xchg
jmp
jp
pushf
mov
jmp
add
fcomp
in
into
xor
rcl
test
mov
xor
mov
xchg
mov
jp
adc
stos
stc
stos
mov
clc
(bad)
mov
pop
xchg
pop
fldcw
pop
es
or
sbb
xor
(bad)
test
mov
movs
dec
(bad)
into
fild
rcl
mov
iret
mov
ja
(bad)
jmp
stos
test
fwait
push
test
mov
(bad)
lds
push
ror
retf
mov
or
pop
cwde
adc
sub
cmps
fdiv
cdq
add
push
gs
lods
sub
pop
fs
aas
frstor
fisttp
lock
adc
push
fimul
movs
mov
daa
ins
jmp
into
pop
dec
or
push
jne
jecxz
sbb
jmp
push
neg
and
sbb
imul
push
push
adc
mov
xor
xor
jmp
sbb
fild
rcr
addr16
ficom
xor
add
jmp
mov
test
and
jg
fisub
ds
and
adc
mov
fwait
xor
je
dec
(bad)
ja
std
out
shl
mov
mov
scas
sbb
loopne
add
inc
cmp
in
fcomp
pop
inc
out
mov
push
ins
fadd
jo
jp
pop
adc
adc
pop
(bad)
mov
sub
jb
out
jne
(bad)
fld
loop
cli
test
std
loop
jg
(bad)
push
push
sbb
add
xchg
sub
mov
fcmovnb
arpl
xchg
add
inc
call
mov
fisttp
enter
je
jmp
addr16
inc
sbb
sub
xchg
fwait
cmc
mov
aam
cmp
cmp
sbb
xor
aaa
cmp
mov
mov
hlt
test
scas
mov
mov
lods
sar
movs
je
and
ror
in
xchg
lods
leave
ins
sub
lahf
cmps
rep
adc
dec
(bad)
loope
(bad)
jmp
mov
push
ficom
mov
imul
dec
mov
mov
mov
push
mov
and
test
or
fwait
push
inc
sub
inc
(bad)
sti
lods
jne
xor
mov
fnstenv
mov
xchg
xor
ret
pop
pop
aas
push
ror
(bad)
sub
retf
ret
scas
sub
or
and
sar
repnz
scas
int3
out
hlt
push
sbb
test
js
out
cs
pop
jl
sbb
cmp
fsubr
lea
(bad)
fild
xchg
std
sar
mov
or
test
add
or
scas
fnstsw
pop
sub
xchg
xchg
or
and
sub
mov
cmp
dec
xor
adc
loopne
pushf
sti
xchg
jg
rol
pop
mov
and
(bad)
imul
fdivr
dec
imul
pop
(bad)
loop
sub
cmp
sbb
jmp
mov
jg
push
ins
dec
sbb
jge
adc
jns
xor
dec
ss
fwait
cmc
mov
outs
pop
out
mov
sub
push
ins
jl
scas
ja
jl
addr16
sti
and
scas
push
retf
pop
lock
xchg
or
cs
push
mov
pushf
add
add
scas
pop
xor
jo
fnstcw
sub
cwde
adc
loop
data16
adc
rcl
inc
adc
mov
add
mov
loop
retf
cmc
adc
xchg
leave
sub
es
dec
outs
and
cmp
bound
fwait
test
xchg
sbb
je
add
xchg
adc
int3
in
shr
dec
push
(bad)
arpl
jmp
cmps
jno
push
pop
loope
mov
push
in
adc
leave
leave
jl
rcl
hlt
sbb
iret
shl
xchg
xlat
sar
mov
mov
adc
or
mov
jge
mov
icebp
cld
sbb
call
mov
mov
xchg
cmp
lahf
cdq
mov
orps
push
movs
mov
test
fcom
pop
inc
mov
push
cmps
je
mov
data16
retf
test
push
cmp
xchg
dec
hlt
sub
fild
ret
push
clc
mov
out
cs
addr16
retf
sub
(bad)
stc
mov
fdiv
arpl
cmc
push
mov
push
sbb
shl
pop
push
cdq
cwde
cmp
push
pusha
cmp
movs
mov
(bad)
call
test
xchg
outs
and
retf
mov
dec
push
mov
int
or
cmps
outs
mov
mov
pop
loope
and
xor
or
lods
jl
cld
mov
cmc
pop
pop
and
push
imul
xor
std
sbb
(bad)
push
and
jbe
jo
jp
das
jo
gs
ins
xchg
adc
push
xor
pop
pop
jo
mov
add
or
sti
mov
mov
fcom
xchg
fldcw
jge
dec
jl
mov
sub
aam
sub
cmps
pop
std
and
aaa
lahf
popf
stos
mov
test
pop
cmc
mov
in
cmp
ja
pop
stc
push
push
push
fmul
ret
add
push
ins
lods
test
les
sahf
mov
movs
pop
in
and
ror
imul
mov
push
aam
adc
shl
dec
mov
cmp
ret
std
arpl
rcr
bound
or
push
sbb
ror
xlat
push
xor
icebp
(bad)
cmp
test
xor
jmp
dec
xchg
leave
out
pop
mov
push
scas
(bad)
call
push
call
aad
add
iret
dec
aaa
xor
xchg
jl
add
test
jns
inc
aas
test
pop
imul
stos
daa
arpl
jno
sbb
popf
aaa
pushf
mov
test
movs
jno
jo
jmp
cdq
push
sub
push
popa
psrlq
jmp
stc
retf
sub
loop
pop
inc
mov
xchg
test
jmp
or
mov
icebp
das
data16
mov
imul
sar
inc
popa
hlt
xchg
and
enter
outs
dec
sbb
test
xchg
sub
mov
xchg
xor
outs
push
inc
imul
addr16
adc
inc
push
xor
push
add
cmc
xchg
rcl
call
test
ficom
fistp
xchg
cmc
enter
xchg
jnp
daa
out
add
sbb
sbb
js
or
in
cld
push
pop
inc
in
pop
and
sbb
jae
lods
dec
cli
jns
loop
pop
jae
out
and
int
add
mov
iret
add
sub
xchg
and
inc
imul
sbb
mov
pushf
popa
and
jns
aaa
dec
adc
sbb
sbb
fnsave
adc
push
jae
das
pop
push
sub
sbb
ret
in
test
aas
xor
lea
inc
jae
imul
ret
lods
and
movs
aam
dec
xchg
pop
jp
ror
neg
mov
test
dec
pop
xor
or
sbb
push
pop
std
ins
das
jl
hlt
jp
mov
push
pop
scas
mov
jg
daa
jb
add
inc
popf
xor
idiv
dec
push
ret
out
in
cmp
je
pop
jno
scas
sbb
add
cmp
mov
dec
push
gs
imul
(bad)
scas
test
mov
xchg
jno
inc
shl
gs
sub
dec
std
stos
sbb
push
sbb
xor
inc
mov
cmp
cmc
push
retf
sbb
jns
xor
cmp
mov
lahf
cmp
loope
pop
ror
sbb
hlt
push
sbb
push
mov
(bad)
and
pop
and
cmps
or
inc
push
adc
xor
pop
or
xchg
jg
call
fbld
fs
jns
rcl
xchg
loope
mov
mov
addr16
dec
jge
mov
ins
inc
bound
sar
ja
pop
cmp
aaa
xor
lea
pushf
mov
fdivr
imul
adc
test
push
cmc
add
xor
data16
dec
push
xor
fisubr
into
fdiv
in
push
retf
pop
dec
ins
les
sub
ss
stc
repz
es
(bad)
sub
enter
xchg
add
xor
mov
imul
scas
cmps
xchg
or
movs
mov
lock
int
pop
mov
inc
sub
cmc
pop
pop
fdivr
fwait
cmp
mov
in
sbb
sbb
xchg
pop
sub
nop
stc
pushf
(bad)
push
stc
out
ret
cmp
sti
jbe
jp
lods
cmp
add
fs
adc
in
inc
push
push
jmp
xlat
sbb
pop
adc
dec
jne
retf
push
pop
sub
pop
gs
push
xor
popf
bound
push
in
cmc
jmp
stc
sub
or
push
or
add
sbb
add
cmp
ja
add
cmp
and
retf
loop
fs
mov
sbb
lahf
test
pop
jno
mov
mov
(bad)
fsub
in
cmp
xchg
les
add
das
fwait
sahf
in
jne
stos
mov
in
push
xchg
jmp
jmp
adc
lock
add
hlt
xlat
add
push
test
cmp
inc
pop
je
push
cs
out
add
mov
(bad)
test
inc
xchg
js
test
enter
icebp
out
(bad)
lahf
mov
js
or
sbb
xchg
les
xchg
icebp
and
xor
dec
(bad)
mov
mov
inc
jmp
das
or
push
pop
leave
inc
mov
mov
repnz
int
test
push
xor
and
mov
leave
out
je
test
xchg
push
test
in
xor
jp
sub
loope
arpl
daa
sub
popa
cmps
movs
ret
mov
or
aaa
sub
jns
dec
aaa
dec
mov
aam
add
in
or
jmp
jp
and
and
ss
ins
push
call
fistp
inc
dec
and
push
in
or
cdq
xor
pop
xor
fwait
adc
out
icebp
mov
mov
dec
fs
retf
or
es
ret
ror
dec
stos
pusha
push
leave
dec
pop
fcmovnb
nop
cld
adc
lods
xchg
push
push
mov
iret
adc
cdq
mov
pop
jae
or
mov
jns
mov
inc
sub
das
mov
xchg
mov
scas
leave
cmp
mov
fisub
xchg
enter
(bad)
clc
push
adc
or
and
dec
jg
ror
xchg
sbb
es
inc
pop
ret
fnsave
push
jbe
into
jo
mov
mov
and
mov
push
pop
xor
cld
(bad)
adc
jmp
cwde
mov
dec
js
sbb
rol
xchg
mov
jne
std
loope
int
mov
mov
cmp
mov
and
sbb
push
dec
retf
shl
jmp
(bad)
mov
clc
jbe
mov
dec
add
mov
inc
mov
in
mov
ins
shl
xchg
xor
and
dec
in
inc
sbb
and
(bad)
mov
aaa
xchg
push
faddp
outs
movups
mov
daa
aad
icebp
ins
jo
xlat
out
test
out
(bad)
aas
mov
daa
mov
jmp
ret
mov
cwde
enter
pop
(bad)
fucomp
popf
push
cmp
dec
rol
ds
iret
repz
ret
jne
(bad)
and
jns
push
and
add
mov
sub
clc
scas
cmc
cmps
shl
adc
xor
in
movs
pop
xchg
mov
sbb
sahf
dec
mov
xor
sbb
or
daa
mov
rcr
rcr
dec
or
shl
mov
or
scas
addr16
push
mov
mov
add
xor
js
cs
push
push
xor
sbb
push
push
jl
and
push
sub
fbstp
lds
rcl
and
mov
dec
xchg
ins
stos
or
xor
add
dec
pop
ret
inc
and
outs
into
and
pop
jae
mov
std
cdq
fstp
add
cmp
mov
push
loopne
icebp
sub
mov
pop
cmp
xor
ja
out
xchg
in
fwait
jl
jmp
ror
fwait
ret
in
inc
cmp
rcr
cmp
add
retf
mov
sbb
ret
(bad)
in
ret
dec
and
or
data16
jmp
int3
lock
call
xor
mov
dec
dec
sar
pop
jmp
push
sub
xor
add
adc
ret
leave
mov
les
test
outs
push
xor
jbe
das
les
xchg
mov
push
fsubr
adc
add
movs
(bad)
pop
jae
add
sbb
outs
jge
inc
and
lds
ins
in
pop
xor
jecxz
fcomp
jl
rcl
jl
lea
ret
inc
jae
dec
cli
sub
fst
sar
sub
sbb
fmul
cmp
mov
fwait
shl
inc
(bad)
mul
rcr
adc
add
jno
test
push
fcomip
mov
pop
jns
mov
sahf
scas
cdq
gs
or
sub
push
mov
inc
or
jle
cmp
jo
ret
js
daa
push
and
pop
ins
daa
jmp
shl
cmp
idiv
mov
mov
and
and
jno
xor
mov
pop
jecxz
repnz
mov
stos
bound
xor
out
ds
mov
sahf
push
lahf
out
jae
sub
call
cmps
cmp
xchg
(bad)
mov
push
adc
adc
jp
push
arpl
xlat
out
pop
nop
(bad)
ror
or
stos
cmp
int
pop
sub
pushf
mov
mov
popa
lahf
xchg
and
jge
cs
xor
adc
cmp
imul
jns
outs
cmp
jo
fadd
xchg
gs
sar
lea
rol
mov
mov
add
out
lock
pusha
(bad)
hlt
push
adc
sub
arpl
adc
sub
daa
je
sub
int3
gs
sar
pop
and
cdq
movs
dec
inc
lock
jno
rol
push
push
fmulp
push
push
mov
push
sbb
popa
cmps
add
cld
dec
int
inc
or
js
repnz
pop
cmps
dec
(bad)
push
sub
jns
mov
in
push
dec
pop
test
jle
xchg
mov
retf
cmp
xor
xchg
mov
sub
mov
into
arpl
out
and
loop
push
out
fwait
xchg
enter
jns
in
out
jl
loopne
cmps
sti
pop
cmps
mov
ret
stc
ds
mov
dec
xlat
cdq
jp
dec
mov
mov
call
shl
or
jno
pop
mov
shl
jae
xchg
in
out
movs
bound
rol
pop
ja
addr16
and
hlt
mov
fbld
test
cld
xchg
adc
sbb
in
clc
ror
bound
cld
out
pop
sbb
vmovapd
stos
xchg
mov
fstp
or
inc
int
ja
dec
pop
in
mov
dec
je
fidivr
dec
repz
jne
xchg
lds
fdiv
aam
pop
aad
int
jle
mov
sbb
push
int
mov
cmp
adc
aad
fs
ds
jmp
ror
in
aam
mov
pop
js
sbb
jecxz
jo
cmp
and
adc
xchg
in
xchg
out
nop
jle
fwait
add
jg
scas
or
xchg
ss
fadd
push
mov
pop
mov
loope
aaa
test
sbb
sbb
xchg
mov
retf
in
mov
aaa
iret
popf
mov
aam
xor
lods
bound
repz
xchg
std
push
scas
push
cmp
xchg
inc
sbb
mov
out
mov
cld
adc
mov
and
std
xor
add
clc
push
ins
sbb
(bad)
fisubr
sbb
out
cmps
mov
cmp
inc
mov
(bad)
inc
lock
mov
add
outs
call
outs
into
out
aad
fdiv
addr16
sahf
or
movs
xchg
dec
or
rol
fwait
jmp
lock
and
fnsave
push
mov
in
lds
stos
sub
(bad)
fld
or
es
not
push
scas
jno
cmps
call
scas
(bad)
popf
jl
adc
shl
call
inc
cmp
int3
adc
(bad)
sti
aam
and
cmp
inc
jb
push
clc
and
mov
iret
xchg
jo
jle
pop
sub
in
arpl
mov
and
loopne
dec
push
adc
sub
xchg
mov
call
mov
xor
cmp
rcr
mov
adc
int
mov
dec
pop
mov
jb
dec
mov
retf
cmp
out
in
add
and
add
stos
pop
sbb
lock
pop
iret
add
and
and
xlat
shl
shl
pop
movs
xchg
popf
outs
pop
pop
into
xor
push
pop
pop
adc
pop
clc
and
fidiv
jns
xor
shl
mov
cmp
add
cmp
int3
imul
jb
aas
nop
xchg
or
jg
pop
dec
mov
mov
mov
hlt
sti
add
mov
in
cmp
jmp
adc
fist
mov
pusha
nop
dec
int
sbb
adc
adc
cmc
lods
xor
mov
sbb
add
arpl
ins
rcr
and
sbb
call
stc
(bad)
jmp
jg
adc
pop
xor
pop
inc
mov
xor
inc
dec
hlt
mov
repnz
fstp
jae
jno
(bad)
(bad)
xor
cmp
fcomip
mov
outs
sbb
adc
adc
daa
popa
cmps
mov
xchg
lods
push
adc
sub
mov
(bad)
retf
dec
push
aas
ret
inc
arpl
aam
add
pop
test
stos
xchg
mov
jge
fnstenv
mov
movs
ds
or
jge
jmp
cdq
mov
in
or
call
mov
mov
imul
adc
inc
pusha
dec
cs
in
xor
push
bound
add
out
mov
retf
xchg
jl
add
push
adc
in
mov
shl
cmp
push
inc
mov
push
xor
pop
jmp
loopne
pop
mov
lock
std
out
retf
mov
mov
sbb
sub
or
jmp
in
jb
je
or
sahf
adc
stos
dec
mov
arpl
cmp
icebp
aas
cwde
pop
retf
mov
mov
add
mov
fstp
sub
repnz
cld
mov
push
lods
sub
mov
jne
push
jae
xor
sahf
fstp
push
adc
out
mov
and
lds
pop
mov
mov
mov
mov
jge
ins
into
cli
iret
dec
mov
outs
dec
sbb
arpl
adc
out
je
mov
mov
jge
sbb
mov
adc
lock
or
and
adc
xor
xor
sbb
lods
jg
sbb
add
jecxz
or
xchg
mov
call
and
dec
mov
inc
or
mul
(bad)
test
push
(bad)
push
cli
movs
sub
xor
dec
pop
mov
xor
cmc
jg
mov
fidivr
jg
push
popa
loopne
sbb
std
stc
out
sbb
mov
mov
mov
ret
stos
dec
into
mov
std
sub
push
mov
xor
fldcw
mov
daa
dec
in
std
sub
jbe
cwde
inc
inc
sahf
mov
pop
(bad)
mov
sub
mov
imul
into
daa
stos
sbb
mov
imul
mov
cmp
adc
rcl
daa
inc
shl
inc
cmp
dec
sbb
scas
jg
jb
not
out
cmp
mov
push
(bad)
dec
mov
xchg
push
jl
outs
into
adc
push
push
push
fistp
scas
xlat
mov
mov
aam
sbb
popa
in
sahf
jb
lods
dec
jbe
gs
jae
mov
loopne
std
rcr
lods
adc
mov
add
fadd
js
cmp
xchg
jp
sbb
mov
(bad)
popf
pop
popf
bound
mov
or
push
jno
inc
add
sub
fwait
aam
or
imul
mov
add
xor
shl
mov
jge
aad
jle
out
cdq
clc
stos
push
xor
ss
push
outs
dec
jl
in
mov
sbb
sub
cwde
pop
dec
pop
cmps
mov
adc
cmp
jp
retf
leave
int3
icebp
pop
jp
addr16
fiadd
ss
arpl
add
push
jnp
pop
push
mov
out
and
mov
xchg
dec
int3
push
retf
xchg
sti
test
outs
push
pop
fisub
(bad)
xor
test
retf
xchg
push
rol
stos
jle
sub
xlat
pop
cmp
in
mov
idiv
pop
push
xor
sbb
inc
jg
cld
push
loope
push
jae
icebp
nop
fisub
dec
sar
push
adc
shr
inc
xchg
dec
nop
cmp
xchg
sub
shr
movs
sbb
xchg
fmul
(bad)
leave
and
push
(bad)
sub
je
out
sahf
pop
sub
sar
int
call
imul
inc
cdq
jp
stos
mov
clc
push
stos
or
push
jecxz
sub
lock
add
sub
xor
aas
cmc
out
aad
sub
jp
mov
cwde
repz
xor
pop
and
test
imul
sub
clc
lahf
retf
mov
push
lods
mov
scas
adc
fs
inc
pop
pop
push
inc
movs
adc
xor
sbb
adc
pop
retf
xchg
mov
jns
loopne
enter
mov
popa
loope
mov
stos
je
dec
fld
mov
fs
pop
call
xchg
and
push
cwde
push
sbb
sub
iret
cmps
(bad)
cmp
cmp
push
add
dec
out
in
fstp
jo
jp
mov
movs
(bad)
push
(bad)
out
sub
dec
(bad)
cmp
shr
and
mov
sub
push
push
pop
jnp
in
sbb
bound
test
dec
out
in
movntps
test
nop
cmps
xchg
inc
mov
xchg
cmps
in
push
fld
push
jecxz
pop
jp
fidiv
fcmovnb
stc
dec
and
ins
adc
rol
inc
push
in
mov
retf
mov
jge
fdiv
gs
sbb
push
jb
call
int3
mov
pop
xchg
mov
sahf
xchg
xor
mov
dec
(bad)
xchg
or
jbe
fisubr
and
jge
mov
lods
iret
or
inc
xor
dec
lahf
inc
out
adc
shl
mov
jb
mov
cli
adc
dec
sub
jl
xor
xchg
popf
cmp
mov
mov
push
sbb
ret
push
adc
out
movs
in
pop
ins
inc
add
cmp
cld
xor
pop
clc
aas
jge
loope
inc
jo
inc
fsub
and
jo
jge
call
xchg
out
loop
adc
push
pop
or
call
je
jne
cmp
sbb
push
mov
and
mov
dec
ja
sbb
push
stc
cmp
cmp
sbb
cmp
pop
inc
fmul
cmps
inc
mov
inc
and
jmp
(bad)
mov
fadd
jecxz
mov
dec
lods
int
cld
push
dec
sub
dec
add
ret
fimul
cmp
aam
sbb
test
jecxz
cld
dec
and
add
push
pop
sub
or
adc
sbb
js
test
push
repz
es
dec
sub
push
add
(bad)
lock
rcr
pop
dec
dec
jmp
cld
lahf
test
int
and
fwait
jp
gs
sub
mov
push
inc
cmp
mov
in
retf
or
movs
sub
outs
popf
mov
adc
scas
jle
loop
ins
popa
add
stc
xchg
sbb
jo
mov
shr
push
jl
mov
and
sbb
es
out
pop
arpl
in
adc
push
push
and
sbb
sbb
shl
sub
mul
pop
std
test
lock
xlat
xchg
(bad)
adc
dec
jecxz
aas
mov
jo
pop
xchg
mov
out
cmc
mov
inc
rcr
pop
fwait
mov
or
ja
shl
movs
sbb
mov
imul
or
retf
cmp
xchg
rol
jecxz
cdq
call
xchg
hlt
jl
push
daa
sub
xor
mov
mov
pusha
int
add
movlps
mov
push
ja
lods
and
call
mov
loope
or
movs
ror
adc
push
and
adc
cmps
and
mov
adc
lahf
rcr
jns
cmc
loop
(bad)
jecxz
addr16
mov
stos
(bad)
mov
xchg
and
call
mov
mov
test
push
in
scas
cmp
nop
loop
fld
cwde
xor
div
mov
sbb
mov
jno
adc
jl
sbb
push
inc
jmp
inc
inc
add
std
scas
lods
add
in
cmp
into
cmp
test
inc
sbb
sbb
cmp
inc
ret
or
lods
loopne
or
sbb
push
call
cmp
sbb
cwde
jmp
cmc
push
adc
or
imul
or
movs
jb
add
xchg
mov
push
dec
fldenv
xor
dec
jae
cmps
cmps
add
inc
(bad)
sar
std
imul
inc
jo
mov
jle
loope
bound
int
imul
xlat
pop
lods
ret
mov
hlt
mov
es
add
cmps
addr16
popf
lods
and
mov
in
mov
out
xchg
ror
sub
xlat
scas
mov
ret
out
mov
mov
dec
pop
adc
sub
inc
inc
mov
push
pop
rol
(bad)
pop
push
icebp
sub
scas
stos
mov
test
sbb
outs
lods
pop
(bad)
mov
xor
loopne
lahf
imul
data16
sub
mov
test
or
jno
(bad)
mov
sub
cmp
jne
call
aam
xchg
push
add
cmps
inc
pop
loop
test
loop
jbe
ins
jle
stc
jg
jbe
sub
jno
adc
cli
or
shl
in
cmp
and
(bad)
lahf
jne
cld
das
hlt
xor
xor
fdiv
pop
xor
add
test
aam
mov
jo
jge
stc
add
or
enter
cs
pop
aas
xor
scas
sbb
dec
pop
bound
mov
fstp
xor
inc
cmp
aas
mov
mov
sub
out
outs
mov
iret
mov
daa
arpl
mov
fld
fdivp
sbb
outs
cmps
mov
xlat
fwait
xor
paddq
adc
sbb
ss
sbb
mov
stc
dec
in
outs
xor
das
mov
mov
std
mov
xchg
sub
inc
sar
sbb
pop
and
cmp
mov
cmps
xchg
cmp
xchg
cmps
test
add
xchg
sub
nop
icebp
call
mov
call
sub
dec
leave
xchg
mov
mov
pop
mov
add
cmp
ret
push
(bad)
and
dec
sub
xor
inc
and
test
das
mov
sar
shl
pusha
aaa
rol
jl
add
jo
into
jmp
push
leave
mov
sub
ins
in
pop
mov
cmp
fistp
and
pop
aad
mov
pop
clc
movs
clc
lock
shl
movs
sti
out
mov
dec
cmp
or
xor
out
add
out
addr16
ja
xchg
sub
call
pop
dec
jle
adc
loop
hlt
add
dec
xor
gs
test
jne
call
and
cld
and
dec
in
jno
jg
test
push
mov
rcl
sbb
scas
movs
ror
jecxz
rcl
push
cs
sti
sbb
cmps
fisttp
clc
lahf
aaa
mov
add
rcr
ror
leave
mov
cmp
std
or
cmps
sahf
fcomp
push
dec
out
repz
mov
xor
daa
loopne
adc
scas
mov
outs
rol
sbb
jne
and
mov
cli
mov
shl
gs
dec
and
jo
mov
xchg
inc
ins
mov
pop
or
jo
(bad)
pop
into
ja
mov
repnz
test
pop
mov
add
mov
enter
repz
jns
push
ss
std
ins
inc
lahf
dec
push
je
inc
cmp
(bad)
sub
cs
imul
popa
inc
stos
js
out
adc
pop
xchg
aam
and
sbb
xor
es
mov
in
neg
jns
push
mov
and
shl
nop
xchg
push
dec
fimul
bound
pushf
(bad)
fldenv
sub
repz
lods
inc
xchg
push
inc
test
pop
jge
unpcklps
xchg
jb
into
rol
xchg
add
lahf
push
mov
ja
rol
push
int
lea
cld
sbb
fwait
out
aas
jg
pop
lahf
push
jae
and
not
or
test
dec
xchg
int
(bad)
into
mov
mov
push
into
imul
or
ja
retf
pop
inc
jbe
push
pop
sub
out
mov
and
loopne
sub
iret
dec
iret
xchg
add
sub
scas
retf
sbb
adc
xchg
jle
les
pop
aaa
call
fmul
imul
sub
mov
loopne
push
mov
inc
cmps
add
sbb
icebp
ret
lods
ss
jno
ficom
shl
mov
stos
pop
arpl
sti
xor
dec
mov
mov
fist
iret
aaa
test
xchg
and
test
push
(bad)
icebp
outs
test
ins
in
cli
push
pop
xor
shl
ret
and
dec
pop
fucomp
cmp
inc
sbb
fisub
jbe
ins
fs
in
dec
int
sub
mov
les
inc
mov
nop
int3
pop
in
int3
push
fcmovne
movs
jmp
jmp
ds
cmp
add
stos
inc
xchg
push
lock
push
imul
fiadd
mov
fs
in
lods
mov
mov
test
lods
in
scas
jbe
sahf
(bad)
icebp
pop
ds
inc
cmp
xor
jb
outs
sub
fisub
popa
pop
xchg
jmp
shl
adc
pop
or
mov
push
sbb
sbb
pop
or
push
jecxz
addr16
dec
xchg
loop
(bad)
sbb
repz
nop
dec
out
lods
call
mov
mov
arpl
push
bound
int3
vcvtps2dq
adc
and
xor
add
fcom
iret
cwde
mov
outs
es
call
xor
cmp
icebp
mov
retf
fdivp
mov
into
mov
jmp
jb
nop
call
out
sbb
stc
loop
ds
jle
arpl
(bad)
mov
cmp
lods
adc
or
and
ficomp
fwait
cmp
adc
mov
lods
into
mov
xor
dec
jmp
int3
add
push
in
dec
sbb
xchg
cmp
mov
cmp
hlt
setno
lods
fild
std
hlt
xor
call
jmp
xrelease
add
icebp
pusha
jno
das
mov
loopne
mov
or
and
sti
xor
stos
cmp
aas
jle
and
addr16
pusha
mov
cli
pop
ds
cld
sub
cld
daa
or
and
int
in
pop
push
stos
mov
je
mov
int3
in
out
jle
jecxz
enter
sbb
fcomip
xor
and
pushf
out
cmc
rol
xchg
ins
pusha
push
outs
jae
leave
inc
push
or
js
or
jl
push
jo
(bad)
pop
mov
rcr
cdq
push
stos
in
stc
repnz
clc
cwde
mov
mov
sbb
mov
inc
lods
sbb
mov
inc
mov
jnp
fist
jp
pop
xor
inc
jno
mov
mov
sub
mov
xchg
dec
test
and
sub
int3
sar
lahf
xor
and
pop
stos
mov
test
add
cld
sahf
ins
xor
in
push
pop
jnp
daa
push
mov
sub
mov
or
sub
mov
sbb
fmul
cmp
lds
xor
(bad)
stc
jl
or
ret
sbb
jle
sahf
or
jns
push
push
and
(bad)
repnz
xchg
stc
jp
or
jge
ret
clc
push
sbb
add
sub
lahf
mov
lahf
mov
mov
sbb
push
mov
fs
sbb
jg
movs
das
mov
arpl
xchg
inc
pop
sub
fiadd
js
out
int3
loop
xchg
jno
rcr
xor
(bad)
lea
inc
push
push
mov
jne
cmc
add
or
pop
xchg
dec
xchg
int
call
mov
std
clc
jo
and
sbb
inc
pop
xlat
cdq
inc
jg
imul
cmp
ds
inc
sbb
xor
add
or
and
mov
shl
sub
mov
fdiv
jno
dec
loop
(bad)
sahf
jns
fisub
ds
std
pusha
lods
sbb
push
(bad)
in
btc
pop
jp
dec
ret
nop
add
std
into
xchg
dec
cmp
jmp
mov
jnp
jmp
lock
fisttp
fidiv
sbb
push
stos
pop
ja
inc
ja
push
cmp
inc
shr
xor
or
out
inc
enter
pop
clc
mov
push
add
xchg
sbb
(bad)
(bad)
mov
popf
pop
fstp
(bad)
shl
xchg
xchg
and
in
inc
movs
sar
fdiv
mov
cmp
sbb
inc
xchg
and
pop
mov
jae
stos
xchg
out
inc
repnz
or
test
(bad)
mov
mov
pop
push
cmp
cwde
xchg
inc
mov
adc
repz
jmp
or
adc
loope
ja
das
add
inc
leave
stc
add
mov
inc
retf
lods
inc
mov
inc
jmp
lahf
outs
push
xchg
xchg
sub
add
hlt
xchg
pop
outs
ret
lock
push
enter
xor
dec
out
dec
stos
es
or
fisub
cmp
jg
mov
cld
jmp
pop
jnp
fcom
std
call
stos
xchg
ror
ss
iret
test
fwait
cdq
fisttp
pop
xor
xor
mov
or
inc
xor
data16
xlat
shl
sahf
inc
sub
sub
add
std
xor
sbb
add
and
sub
ds
int
retf
inc
sub
ror
inc
iret
add
adc
in
dec
stos
dec
mov
in
mov
ror
cdq
mov
sar
mov
fwait
icebp
jb
push
test
repnz
push
mov
xchg
out
stos
adc
in
push
mov
cmps
retf
fwait
mov
mov
jbe
lahf
add
stos
xchg
mov
jle
sbb
or
ins
outs
and
mov
dec
retf
fidiv
dec
jg
or
movs
push
dec
jmp
xchg
jno
and
jae
sbb
xor
adc
jo
inc
or
cmp
push
mov
ret
or
into
xor
mov
jecxz
dec
and
aaa
rsqrtps
neg
jo
add
dec
adc
jmp
push
mov
nop
lahf
adc
and
in
gs
iret
push
int
stos
adc
jmp
dec
sbb
push
aaa
mov
cmps
test
add
shl
xchg
ss
jp
xchg
cwde
pop
sbb
shr
pop
inc
mov
xor
pop
jecxz
jmp
fwait
(bad)
xor
gs
jge
push
mov
hlt
dec
leave
stos
int3
pop
xchg
bound
and
shr
or
or
jae
dec
mov
dec
mov
cmps
ret
ds
cs
push
ds
or
(bad)
xor
fistp
push
scas
mov
scas
or
sti
push
call
sbb
push
jecxz
mov
(bad)
loopne
and
and
cmp
inc
repz
sub
leave
sahf
std
(bad)
push
sti
or
jmp
inc
ja
ret
sub
push
out
mov
sbb
mov
adc
add
rol
iret
jae
fistp
add
ret
mov
cmp
ret
push
aas
les
hlt
hlt
lahf
pop
popa
add
out
mov
cld
cmps
mov
xchg
xor
test
mov
xlat
push
bound
push
push
lods
xchg
dec
push
adc
push
xchg
xchg
call
nop
das
push
cmps
daa
aas
mov
enter
cli
xchg
pop
push
adc
jae
xchg
jo
add
mov
mov
cdq
xor
leave
mov
(bad)
mov
int3
adc
aaa
sub
pop
lds
sbb
aas
in
xor
pop
mov
shl
out
xchg
ror
scas
sbb
sti
push
aaa
pop
adc
cmp
xchg
adc
sar
xlat
aaa
xor
iret
pusha
and
pop
daa
cmp
inc
outs
cmc
jo
mov
(bad)
adc
inc
aad
ret
and
push
ja
cmps
shl
clc
and
push
push
add
sahf
xchg
push
mov
je
mov
jle
ret
sub
mov
int
adc
scas
push
cmp
leave
jmp
mov
dec
xor
addr16
(bad)
nop
mov
mov
movs
gs
push
popf
sub
rcr
sahf
jns
daa
jns
jle
xchg
call
inc
fsub
adc
shr
mov
pop
int3
sbb
push
mov
or
or
adc
xchg
xchg
mov
xor
and
xchg
cli
scas
mov
xor
(bad)
hlt
mov
jne
mov
out
dec
sbb
jge
dec
sti
sub
lar
cwde
test
dec
lods
mov
retf
fiadd
mov
cld
mov
sbb
pop
jmp
in
cmps
(bad)
retf
and
mov
pop
mov
dec
dec
aam
and
xor
fist
jae
mov
mov
or
loopne
aam
jmp
mov
push
dec
fsub
aad
jg
sub
loopne
fisub
(bad)
push
stos
xchg
adc
in
push
push
xchg
fistp
shl
sbb
repz
jns
ins
mov
sub
and
cli
sub
push
dec
and
popa
or
call
cmp
sbb
inc
push
or
jle
and
push
mov
push
icebp
shl
jge
fs
in
les
or
test
cmp
sub
or
fidivr
mov
call
in
xchg
ror
xor
sbb
cld
add
ins
outs
add
fs
jp
mov
sub
xor
(bad)
repnz
dec
js
int
push
in
adc
lock
sbb
fcmovu
xchg
inc
stos
ins
or
and
push
pop
popf
ss
inc
jecxz
fistp
repnz
adc
pop
mov
jae
push
aam
call
mov
call
pop
aaa
or
sbb
mov
mov
cmp
fcmovu
(bad)
imul
adc
xor
dec
push
mul
mov
outs
fsubr
fistp
test
repz
cmp
or
sbb
ins
xor
add
test
fcmovbe
cmps
movs
test
sub
push
mov
add
cmps
ror
mov
pop
rcl
jmp
xor
mov
lods
idiv
test
mov
enter
call
mov
loopne
test
xlat
xor
(bad)
nop
add
std
push
cmps
mov
push
xor
cli
ins
ins
push
push
xchg
jmp
cdq
adc
xor
adc
or
sub
jae
inc
sub
rcr
pop
jmp
jmp
mov
dec
mov
outs
lods
pop
jp
sbb
fcom
sar
popa
or
icebp
lea
adc
in
and
and
inc
hlt
shr
cmp
jo
(bad)
in
test
fbstp
(bad)
movs
sub
push
and
sar
push
(bad)
cmp
sub
in
mov
jmp
add
or
cmps
ds
mov
ret
imul
in
cmps
in
mov
jl
imul
push
mov
shr
in
int
nop
repz
mov
enter
sub
in
shl
fidivr
pop
cmps
(bad)
repz
mov
stos
inc
pop
pusha
fwait
test
xchg
jmp
aam
inc
inc
shr
loope
adc
repz
jb
sub
sub
or
mov
out
pop
addr16
pop
sbb
jne
pop
es
cmp
xor
mov
add
sbb
pusha
push
xchg
cli
iret
inc
inc
retf
or
pushf
sbb
nop
dec
lods
cli
std
inc
ficom
repnz
sbb
pop
cs
test
jle
jmp
mov
enter
or
and
aad
iret
movs
cwde
inc
bound
test
push
adc
dec
movs
adc
mov
add
mov
lods
xchg
fidiv
(bad)
mov
and
lea
cmp
fwait
call
dec
pop
pusha
adc
cmp
add
dec
mov
adc
enter
cmp
in
add
fcomp
xbegin
aam
cmp
aas
jmp
inc
pop
je
hlt
xor
cdq
cs
aam
aad
scas
daa
fimul
mov
and
and
mov
xor
sub
sbb
jmp
push
inc
cld
cmps
pop
mov
cmp
in
into
mov
or
add
jbe
push
out
xchg
or
js
inc
add
(bad)
dec
popa
xor
xchg
es
inc
fwait
and
movs
xor
mov
xor
sbb
xlat
cmp
push
sub
outs
lods
repz
aaa
popf
loopne
inc
in
movs
mov
ss
enter
inc
(bad)
adc
inc
es
jle
movs
div
push
cmps
in
popa
push
pop
lahf
aam
dec
int
outs
out
mov
mov
or
call
ret
inc
pop
icebp
cld
test
mov
(bad)
ds
pop
sbb
in
lock
sub
or
pop
mov
stos
lock
popa
shl
nop
rcr
push
mov
ja
lock
punpcklbw
jb
sub
pop
pop
lods
outs
adc
jmp
ja
cs
sub
sbb
dec
and
ins
push
xor
cmp
pop
lock
sub
cli
sti
dec
mov
xchg
push
and
sub
mov
or
gs
or
sub
in
jae
jb
lahf
jge
mov
xchg
sub
aad
ins
and
dec
ja
add
add
sub
in
inc
xor
hlt
or
int3
pop
aaa
scas
aad
fild
int
sbb
dec
test
adc
aas
jg
fsubr
xor
push
call
jmp
(bad)
imul
mov
sub
fistp
push
loopne
(bad)
shl
xchg
fmul
mov
(bad)
aad
inc
mov
loopne
add
mov
mov
and
pop
sub
mov
cmp
in
lea
mov
xor
(bad)
and
rcl
movs
idiv
add
cmp
inc
adc
add
pop
mov
(bad)
jmp
adc
int3
pop
xchg
push
mov
cwde
pop
imul
and
dec
stos
out
fimul
mov
vsubps
aam
mov
rol
dec
sbb
call
movs
jecxz
outs
stc
daa
addr16
add
pushf
nop
in
sub
cmp
loopne
cmp
test
mov
xor
aad
nop
inc
mov
and
and
enter
jb
bound
aas
xchg
jo
xchg
xor
sub
mov
dec
stos
add
out
and
xor
popa
jge
not
into
int
xor
mov
or
inc
into
xor
sti
out
pusha
popa
pop
rol
xlat
ret
mov
sbb
mov
in
mov
lods
push
jnp
and
stc
mov
adc
sahf
nop
mov
iret
loope
aam
cmp
sub
rol
sbb
mov
clc
dec
sar
repz
jge
jle
lock
adc
mov
lods
inc
sub
adc
ret
push
inc
rcl
adc
pop
push
ds
test
(bad)
scas
not
out
(bad)
ficomp
and
mul
fisub
ins
stc
cwde
movs
enter
jae
and
fstp
icebp
jmp
stos
popa
fistp
jo
stc
lods
inc
gs
aad
push
lds
out
xchg
fld
dec
push
out
push
dec
xor
lods
imul
in
inc
arpl
push
xor
sbb
lods
pop
inc
mov
into
out
inc
add
cmp
js
xchg
add
sbb
fwait
pop
push
cmp
nop
jmp
popa
mov
shl
push
mov
and
ins
cmp
pop
stos
je
scas
fisttp
lods
xor
mov
cmc
jmp
sub
push
xchg
jmp
ja
push
add
sahf
loope
mov
out
dec
(bad)
icebp
rol
inc
adc
adc
mov
pop
pop
mov
dec
arpl
arpl
push
jb
into
iret
push
and
arpl
xor
jmp
ds
ins
mov
lock
pop
cli
jne
dec
push
xchg
cmp
sbb
jo
or
pop
dec
(bad)
and
mov
sar
jmp
sub
add
jmp
add
cmp
repnz
and
jmp
fidivr
adc
aaa
int
(bad)
call
fild
out
xchg
jg
test
inc
shr
daa
mov
test
outs
call
imul
bound
nop
inc
ror
call
inc
inc
retf
popf
xor
pusha
fs
test
jp
call
sbb
xor
push
bound
pop
sbb
loope
xor
mov
test
push
bound
push
sbb
mov
lds
mov
mov
mov
push
ror
arpl
dec
ja
mov
inc
inc
mov
jge
and
jmp
add
loope
sahf
and
call
sub
mov
int
adc
jnp
pop
(bad)
sbb
jo
mov
mov
adc
pusha
mov
xlat
adc
jno
pop
les
test
push
sub
aad
icebp
xlat
clc
mov
sub
aaa
mov
push
pop
pop
push
and
test
mov
cwde
xchg
out
iret
in
sbb
lock
pushf
xor
mov
fcom
in
imul
push
or
(bad)
mov
add
cmp
in
mov
jno
pushf
retf
mov
and
pop
jecxz
nop
push
shr
scas
stc
xchg
ins
mov
(bad)
push
ja
mov
movs
jg
fdivrp
dec
in
test
add
in
jbe
jb
call
push
xchg
xchg
lods
aas
in
add
dec
imul
mov
leave
xchg
pop
fmul
push
sar
enter
test
(bad)
div
inc
(bad)
outs
push
mov
jmp
daa
and
mov
mov
lahf
fst
repnz
test
pop
ret
stc
mov
add
rcl
nop
lds
jge
or
mov
popf
mov
adc
test
jl
xchg
or
adc
sbb
mov
loope
mov
xchg
loopne
adc
div
pop
pop
loop
add
ja
sub
imul
inc
inc
xor
dec
sar
jns
cmp
pop
ins
(bad)
xlat
jmp
call
test
push
pandn
xchg
inc
test
outs
mov
mov
cli
jns
popf
adc
xchg
jmp
xlat
and
mov
sar
xor
out
clc
cs
pop
jecxz
xchg
int
cdq
fsubr
pop
and
dec
sbb
adc
stos
add
mov
push
push
fstp
mov
cmp
enter
mov
and
pop
jg
push
imul
iret
dec
adc
inc
cwde
cmp
js
aad
nop
sub
lds
pop
mov
test
in
cmc
mov
call
and
mov
loop
xchg
cmps
mov
mov
pop
push
sub
(bad)
pop
sub
add
jecxz
call
mov
arpl
stos
out
mov
xchg
aas
pop
pop
mov
jb
adc
in
mov
sbb
or
repnz
lea
jmp
sub
inc
push
mov
pushf
(bad)
out
enter
adc
loope
xor
test
add
jo
loopne
cmp
and
fistp
xchg
not
dec
jns
call
ja
(bad)
std
pop
repnz
jmp
mov
nop
mov
xchg
cli
in
ss
lods
inc
lds
aas
movs
inc
aam
shl
stc
or
mov
pop
(bad)
leave
mov
retf
sar
adc
xchg
adc
inc
scas
jmp
test
dec
jnp
in
add
or
fisttp
outs
in
js
ror
mov
mov
(bad)
retf
scas
jle
add
cld
inc
cmps
ret
dec
pop
inc
push
inc
shl
push
std
daa
add
popa
outs
push
aad
pop
ds
rol
mov
gs
in
das
jns
jle
add
fsub
mov
cli
stc
sahf
jp
stos
jmp
push
dec
cmp
out
or
add
mov
sbb
int
mov
lea
pop
xchg
sub
mov
pmaxub
int
je
les
xor
out
mov
mov
popa
jne
jl
sub
scas
lea
and
nop
arpl
dec
pop
cmp
out
inc
mov
fmul
cmp
dec
xchg
imul
push
add
push
cdq
popf
test
in
mov
jg
out
(bad)
inc
frstor
mov
xor
add
push
jb
cs
loopne
ss
xchg
fnsave
clc
dec
ds
mov
rcl
loopne
adc
push
cmc
jmp
pop
jo
call
xchg
add
xlat
sub
cs
in
cwde
cmp
or
mov
adc
ds
leave
or
xor
jecxz
jecxz
in
(bad)
shl
dec
push
pop
dec
jae
xchg
mov
mov
inc
mov
jl
dec
ret
push
adc
lods
pop
cmp
js
xor
ret
lods
movs
or
clc
call
int
ficom
push
mov
mov
sbb
jecxz
fisttp
(bad)
daa
ins
idiv
loop
push
sub
sub
cmp
push
movs
add
dec
and
dec
jae
mov
xchg
xlat
xchg
xchg
push
sub
scas
movs
push
test
jp
mov
(bad)
push
mov
leave
xchg
pushf
retf
fistp
mov
leave
popa
push
xor
gs
jp
lods
inc
dec
push
popa
aam
sbb
mov
es
lods
adc
retf
inc
xchg
rcl
cmp
mov
xor
ds
jle
sub
fdivr
(bad)
jmp
lds
cmp
push
jmp
rcl
lahf
mov
rcl
ins
jae
int3
(bad)
out
mov
mov
in
icebp
add
pop
test
cmp
leave
fcmovnbe
sbb
fwait
leave
sbb
into
or
cld
jmp
dec
mov
pop
or
cmps
mov
sub
(bad)
mov
imul
inc
test
pushf
aad
pop
les
imul
sbb
or
inc
xlat
loop
jp
gs
test
jo
adc
mov
push
pop
xor
mov
inc
or
sbb
add
repnz
mov
popa
les
pop
imul
and
movs
fstp
mov
aaa
scas
jnp
mov
jo
jae
mov
adc
nop
das
dec
dec
dec
push
pushf
aaa
adc
mov
std
ins
cmp
push
or
data16
mov
or
sar
mov
mov
je
fcomp
fwait
mov
lds
inc
cdq
push
pop
cli
stos
mov
lock
scas
pop
xchg
mov
(bad)
or
mov
push
add
xor
add
add
pop
push
mov
and
hlt
push
and
jp
ins
je
(bad)
fnstsw
push
fdiv
shr
(bad)
bound
popf
mov
into
pop
jne
dec
sbb
pop
bound
and
jo
cld
repz
iret
stc
cmp
push
inc
gs
sbb
cmp
rcr
loopne
push
mov
lds
sar
ins
cmp
fwait
xchg
jne
mov
sub
mov
aaa
data16
in
popf
sbb
jp
cli
leave
mov
push
add
adc
pop
jmp
aas
test
adc
stos
xchg
ss
sbb
fidiv
mov
out
pusha
push
cmps
mov
test
rcr
pop
lods
adc
aas
dec
lods
adc
adc
dec
dec
xor
sbb
test
and
xchg
in
dec
arpl
cli
dec
rol
jl
dec
cmp
ss
or
jmp
call
(bad)
jae
jno
inc
dec
sbb
ja
es
repnz
jecxz
lea
cmc
jmp
sbb
dec
sub
push
cmps
push
in
jbe
inc
popa
cwde
imul
jns
and
mov
inc
ficom
retf
sbb
lods
mov
mov
push
dec
adc
retf
jae
mov
stos
add
fs
or
sbb
inc
and
mov
sar
fldenv
stos
and
inc
std
push
imul
mov
leave
ficom
idiv
push
stos
in
inc
dec
mov
mov
cmp
push
jns
and
xor
push
mov
jp
and
lds
sub
cmp
push
stos
repnz
gs
test
ins
(bad)
sub
in
jmp
push
push
popf
fst
cli
and
ret
cmp
lods
cdq
inc
sub
sbb
sbb
ja
loopne
mov
fsub
lods
rol
cmp
inc
les
xchg
cwde
repnz
cs
data16
add
pop
jbe
mov
movs
cmp
jmp
test
cmp
xor
mov
cmp
(bad)
cmps
jmp
cmc
mov
test
jge
lea
cmps
push
mov
and
inc
add
fcomp
(bad)
xchg
sbb
mov
retf
inc
xlat
pop
jno
push
inc
test
or
inc
(bad)
cdq
retf
pop
mov
popa
cld
mov
and
add
sar
push
das
mov
stc
cmc
lahf
inc
dec
fcomp
shr
or
hlt
push
mov
inc
lea
jle
jg
cmp
and
or
int3
and
mov
mov
sbb
enter
xchg
imul
add
clc
out
lods
pop
jo
leave
or
stos
mov
les
xchg
fcmovne
cmc
xchg
loope
mov
mov
xor
mov
fmul
lods
sbb
out
fnstenv
ror
pushf
imul
cmp
jecxz
mov
lea
pop
loop
cdq
xchg
mov
(bad)
push
sbb
test
mov
sahf
sbb
xchg
or
shl
or
and
add
ins
inc
pop
mov
js
pop
mov
(bad)
and
pop
in
push
push
dec
push
in
xchg
lds
fs
lds
daa
jge
inc
mov
dec
and
test
bound
jo
pusha
mov
ds
jne
repnz
push
add
(bad)
gs
(bad)
sahf
inc
mov
popa
inc
mov
xchg
clc
arpl
cs
mov
pop
lods
js
xor
ss
retf
js
test
and
shl
mov
imul
and
icebp
pop
cmp
inc
test
mov
das
ss
js
test
mov
push
or
and
push
dec
xor
ror
stc
fidiv
mov
add
outs
jbe
push
mov
add
repz
jmp
mov
stos
pop
jp
mul
mov
xor
and
sub
xchg
lea
pop
jle
cs
add
int3
ds
fdiv
push
cmp
push
imul
push
jne
mov
ret
lea
leave
jmp
imul
lock
clc
clc
and
sbb
test
dec
sub
aad
xchg
fdiv
into
lds
push
push
dec
xchg
lods
sbb
inc
pushf
pop
xor
jno
call
xchg
call
mov
xchg
mov
lds
xor
(bad)
jns
and
scas
pop
into
(bad)
out
xchg
out
imul
rcr
dec
lods
inc
test
xchg
outs
push
fucomip
fnsave
cmp
out
or
in
jo
fdivrp
movs
jmp
rcr
xor
xor
pusha
xchg
jne
repnz
icebp
bound
add
push
jno
es
push
mov
sahf
sub
jp
xchg
mov
pop
lahf
(bad)
pop
or
xchg
les
idiv
shl
aaa
arpl
frstor
sub
(bad)
jmp
test
mov
test
pusha
mov
and
dec
jmp
(bad)
clc
leave
add
test
call
retf
pop
aaa
inc
adc
clc
imul
mov
and
jge
xchg
and
pop
pop
sub
ret
(bad)
ficom
(bad)
jle
xchg
sub
ret
mov
add
mov
push
rol
add
outs
pop
jnp
in
xor
sub
or
mov
leave
cmps
cmp
stc
sbb
fisub
mov
fld
out
pop
adc
push
sub
imul
push
retf
xchg
mov
fnsetpm(287
pop
xchg
pop
aas
mov
ficomp
xor
ss
lock
xchg
icebp
xchg
xor
pop
(bad)
xor
sbb
in
mov
fwait
mov
ins
xchg
pop
leave
lahf
jmp
mov
ins
clc
and
sbb
stc
sbb
adc
sbb
cmp
inc
or
fcomp
adc
cdq
in
das
arpl
mov
push
cmp
push
cld
push
inc
mov
icebp
xor
neg
pop
loopne
mov
sub
dec
lods
retf
shl
or
dec
stos
xchg
and
repz
jbe
pop
dec
pop
mov
mov
int3
cmps
sub
pop
mov
cmp
dec
add
rcl
jecxz
gs
mov
ins
or
lea
or
adc
test
dec
cdq
adc
outs
pop
cmp
xor
mov
fadd
int3
outs
xor
fistp
push
cmp
dec
push
dec
aas
adc
loope
ret
xlat
scas
fwait
(bad)
addr16
in
outs
dec
bound
aam
shl
mov
fs
mov
pop
mov
leave
int
ret
arpl
xor
jmp
mov
aaa
and
mov
add
shr
jmp
fcmovbe
jo
jecxz
and
movs
mov
repnz
mov
lea
popf
pop
push
or
ret
test
mov
lock
and
push
nop
add
dec
add
movs
pmulhuw
shl
or
pop
xchg
lods
bound
adc
jmp
popf
into
mov
out
gs
cmps
(bad)
jl
retf
sub
imul
adc
mov
(bad)
and
arpl
pop
lock
cmp
mov
cmps
xchg
jnp
das
xchg
pop
enter
test
mov
mov
xchg
je
mov
jmp
fdiv
shl
push
mov
and
rol
push
test
arpl
sbb
test
xchg
lds
into
scas
jno
xchg
push
es
xlat
lock
or
mov
xlat
push
mov
sbb
test
jmp
ja
retf
(bad)
cli
pop
sahf
shr
push
cmp
add
xlat
jns
cmp
dec
movs
ret
stos
dec
ror
add
add
in
add
or
sbb
sbb
push
dec
add
xor
scas
sbb
inc
popf
loop
pop
adc
jns
mov
mov
daa
push
push
xchg
fisubr
xor
ins
mov
jmp
mov
pop
adc
inc
das
test
rcr
or
fnstcw
test
push
cs
(bad)
les
xchg
jl
pop
and
or
push
out
out
jns
fst
out
sahf
fsub
inc
add
lock
or
sbb
adc
ficomp
sub
inc
push
retf
(bad)
mov
in
cmp
ret
aas
jno
rcl
loope
xchg
cld
es
repz
imul
arpl
dec
xchg
dec
dec
hlt
jo
pop
sub
adc
ret
mov
add
out
cld
cmp
and
call
dec
sbb
cmp
sub
add
scas
cwde
add
dec
mov
sub
xor
xchg
add
daa
lock
(bad)
test
add
out
inc
inc
test
outs
add
lods
mov
mov
push
call
aaa
in
push
mov
mov
add
cmps
je
ret
add
mov
(bad)
jp
mov
lahf
pop
dec
jae
mov
jmp
adc
cmp
jns
and
jns
fmul
mov
jecxz
jmp
and
fld
xchg
add
mov
cmp
ror
push
(bad)
leave
stos
and
jmp
and
into
test
xor
inc
aad
jno
inc
rcl
or
sub
push
arpl
test
imul
or
les
hlt
mov
test
imul
mov
dec
in
or
in
add
mov
ins
lods
out
pop
sub
test
and
aad
push
jecxz
inc
mov
sar
or
mov
pop
repnz
fst
mov
adc
in
arpl
mov
mov
imul
dec
jns
add
sub
in
dec
jle
arpl
in
push
adc
inc
jne
or
aaa
add
xor
mov
repz
mov
imul
nop
mov
jg
inc
nop
stc
fcmovbe
jnp
je
repnz
loope
adc
push
sbb
ret
jne
fucomi
cmc
inc
mov
and
pop
dec
sub
push
ror
sbb
in
fisubr
pop
cmp
dec
mov
out
outs
ja
push
jl
ins
sbb
inc
and
cmps
mov
ds
out
fidivr
xchg
and
sub
mov
aam
fistp
adc
aas
enter
add
sub
pop
and
cmp
jmp
cmp
imul
pop
mov
in
test
mov
dec
(bad)
fstp
xor
aaa
popf
push
sbb
cmc
mov
fucomi
mov
and
hlt
daa
stc
push
and
pop
test
fadd
pusha
adc
push
scas
fstp
push
into
adc
push
scas
dec
pop
lods
outs
push
and
test
mov
icebp
out
xor
(bad)
push
adc
stos
(bad)
out
pop
ret
mov
dec
dec
mov
pop
mov
idiv
jge
(bad)
jb
ror
and
xchg
loopne
sbb
dec
inc
nop
sti
cmps
in
cld
in
imul
add
and
mov
out
pop
nop
daa
mov
add
lods
ins
push
or
aad
outs
mov
fdivr
imul
fcom
cmp
mov
mov
dec
pusha
or
pusha
mov
mov
in
fs
aaa
aad
or
in
rcl
out
dec
call
or
les
xor
or
(bad)
lds
push
add
lods
pop
fidiv
nop
push
and
retf
cmp
pusha
mov
sub
ins
popf
js
lea
mov
or
fisubr
pop
mov
and
cwde
sub
sbb
test
cld
aad
cmp
(bad)
(bad)
out
out
aas
xlat
push
mov
int
lods
xchg
pop
sub
loopne
test
fwait
stos
test
lea
and
xchg
pop
sahf
inc
xlat
fisttp
mov
ins
cmp
mov
xor
pop
jmp
or
push
movs
adc
cmp
cmp
pop
sahf
scas
pushf
dec
(bad)
jne
(bad)
clc
ins
xchg
inc
out
jl
lods
(bad)
stos
cmp
lods
sub
ss
sbb
dec
dec
and
(bad)
mov
xchg
dec
popa
sar
imul
push
es
cwde
push
add
or
cmc
inc
mov
cmp
std
(bad)
and
pushf
sub
dec
push
inc
rcl
and
lods
cmps
movs
adc
outs
into
in
aad
push
or
out
and
retf
nop
push
les
mov
inc
xor
stos
cmp
movs
rcl
loopne
fwait
cmp
imul
test
add
jge
push
mov
xchg
int3
and
mov
inc
aad
dec
cmps
out
pop
outs
(bad)
pop
imul
loopne
movs
aam
pop
imul
adc
mov
movs
xor
data16
test
mov
mov
out
inc
fs
ja
fdiv
retf
fld
das
jbe
dec
in
call
mov
repnz
out
push
and
jecxz
mov
adc
sar
das
jno
xor
jbe
lods
imul
jle
or
arpl
dec
cmp
inc
push
gs
cmp
shl
retf
xlat
pcmpeqd
fsubr
loop
mov
fbld
xchg
add
cmp
(bad)
dec
icebp
sub
sti
jnp
cmp
test
cwde
xchg
mov
mov
movs
ss
shl
sub
jnp
sar
jno
ret
cmp
pop
dec
jae
sahf
or
and
mov
xchg
fmul
add
add
push
movs
push
jmp
loop
xchg
outs
ins
cwde
cwde
push
fwait
cmc
jno
sbb
out
mov
jecxz
mov
lahf
ja
ds
aaa
dec
fcmovu
stos
clc
xchg
call
pop
mov
dec
mov
movs
cmp
(bad)
out
adc
sbb
dec
ror
jbe
xor
jp
mov
dec
xor
jmp
mov
shl
push
mov
sub
push
sbb
pop
pop
lahf
(bad)
or
dec
aaa
cmp
test
cmp
scas
cld
xor
retf
and
mov
sbb
ss
xchg
ficom
xlat
scas
ss
push
add
or
je
xchg
mov
mov
sbb
jno
push
fimul
fbstp
mov
daa
adc
dec
sbb
mov
aaa
jnp
leave
hlt
in
dec
push
xlat
jmp
mov
mov
arpl
data16
fild
lahf
movs
aas
inc
sbb
es
cmp
popa
add
pop
mov
rcl
jbe
sub
loopne
(bad)
pop
inc
jl
xor
dec
ficom
mov
add
xlat
xchg
jge
adc
inc
sub
adc
inc
add
ds
sbb
movs
ds
in
jge
movs
adc
inc
sub
jae
mov
xor
mov
vxorpd
mov
arpl
adc
stos
cwde
daa
movs
jo
mov
xor
movs
(bad)
in
push
or
(bad)
loop
cmp
int
inc
stos
pop
and
push
cmps
cmp
pop
fild
jecxz
aam
imul
push
sub
sahf
cs
stos
imul
in
mov
jl
xchg
jae
push
sbb
or
fcom
lods
jl
cmc
push
imul
lods
xlat
dec
cmps
push
retf
les
jecxz
(bad)
mov
int
pop
fild
add
js
dec
pop
stos
sub
dec
push
cmps
xchg
adc
cmp
mov
dec
nop
cli
std
in
mov
push
xchg
leave
sub
int3
pop
call
and
mov
pop
cs
sahf
aad
xor
sbb
add
mov
and
add
test
jmp
xchg
xor
fnsave
test
mov
arpl
xor
and
fisttp
pop
icebp
adc
xchg
aaa
outs
mov
jbe
or
mov
and
inc
sub
pushf
enter
dec
mov
add
add
pusha
xchg
sbb
pop
mov
mov
std
scas
or
push
cmp
xor
push
out
xchg
ss
outs
and
dec
mov
stc
jae
xchg
retf
adc
sbb
pop
dec
and
xor
mov
dec
imul
cmp
push
xlat
push
or
mov
ins
add
call
push
mov
imul
jle
pop
in
call
test
popf
jne
xchg
popa
push
addr16
sbb
mov
mov
fld
nop
nop
mov
lds
test
rcl
add
mov
stos
and
cwde
xchg
dec
aas
adc
fyl2x
mov
or
imul
out
in
inc
lahf
and
cmp
xchg
shl
int
xchg
dec
outs
or
push
jl
lahf
xchg
xor
cdq
push
mov
int
pushf
xchg
fwait
je
pushf
adc
sahf
shl
xchg
and
lahf
sub
pop
int3
or
xchg
xor
add
cmp
fisttp
xchg
cmc
into
xchg
lea
(bad)
aad
mov
and
jne
mov
sbb
and
mov
fs
scas
jmp
cmc
sar
xchg
pop
inc
xor
outs
sbb
mov
je
mov
ror
mov
shl
gs
lock
enter
mov
mov
mov
xchg
mov
test
xor
inc
iret
pop
adc
sbb
mov
mov
mov
outs
les
call
stos
inc
inc
mov
xor
xlat
jo
push
mov
outs
into
(bad)
mov
(bad)
mov
push
call
cmps
jl
test
lds
mov
scas
pop
inc
sbb
xor
lds
fcomp
mov
sub
retf
retf
adc
rcr
dec
mov
xchg
fwait
movs
shr
shl
jo
or
(bad)
mov
(bad)
mov
cmc
outs
push
sub
inc
rcr
fs
add
in
lahf
test
rcl
cmp
imul
cmps
(bad)
mov
je
scas
push
push
test
rcr
out
xor
rcl
fmul
hlt
sub
dec
or
push
mov
and
push
mov
fmul
lock
adc
cli
mov
jp
ins
adc
mov
bound
adc
rol
and
xor
sbb
mov
sub
push
and
dec
sub
sub
pop
in
adc
jbe
test
test
adc
jge
stos
and
call
int3
icebp
xchg
adc
adc
cmp
sub
mov
ja
addr16
out
sbb
es
int
add
jmp
mov
inc
mov
scas
mov
stc
mov
cmc
shl
add
or
push
mov
push
cmp
mov
fs
les
mov
or
xor
out
ins
retf
mov
out
(bad)
push
pop
adc
mov
enter
xchg
les
mov
cmp
dec
cmc
jg
daa
mov
jg
repnz
sbb
mov
popa
adc
call
sbb
jmp
jb
shl
sbb
cwde
push
mov
dec
adc
inc
mov
rcl
or
sbb
sub
test
mov
aad
imul
add
repnz
mov
push
jbe
xchg
xchg
sti
jmp
es
and
mov
sbb
int
inc
retf
aas
sbb
dec
adc
sti
jle
xor
dec
jno
cli
push
jno
pop
sbb
sub
fild
pop
mov
fst
push
iret
dec
ins
dec
inc
mov
div
sbb
mov
inc
or
pop
adc
adc
sub
fidiv
cmp
repnz
inc
dec
inc
lods
jmp
dec
adc
inc
sub
arpl
js
(bad)
dec
stc
cmp
test
(bad)
scas
sbb
inc
add
(bad)
in
inc
pop
stos
cmp
repnz
dec
lea
sahf
sbb
mov
mov
cmp
add
leave
xlat
mov
or
(bad)
test
xor
cmp
bound
mov
cmp
inc
cmp
mov
jp
fisttp
movs
push
sbb
push
pop
mov
aad
fnsave
dec
adc
cmp
hlt
retf
test
add
xchg
and
mov
adc
dec
cmp
xchg
mov
xchg
idiv
mov
cmc
pop
and
push
adc
int
push
pop
mov
xchg
hlt
and
jnp
out
mov
test
xchg
and
adc
push
or
push
sub
sub
mov
push
add
sti
icebp
(bad)
nop
repz
repz
cmp
push
outs
lods
stos
add
push
icebp
cli
repz
shl
cmps
add
rol
pop
ds
icebp
test
push
loop
pop
in
fs
ret
dec
ficom
xchg
loop
cmp
mov
pusha
or
or
mov
push
or
inc
in
fnstsw
mov
mov
dec
cmp
stos
test
cdq
push
mov
enter
clc
es
jle
clc
add
xchg
cmps
mov
cmp
imul
hlt
jns
sbb
jbe
xchg
jns
fs
xchg
xchg
ja
jmp
hlt
enter
inc
mov
mov
das
fdivr
mov
cmp
sahf
cmp
add
ror
rcl
jecxz
loop
jge
inc
stos
inc
mov
cwde
cs
sub
cmp
out
stos
jle
sbb
or
mov
addr16
xchg
int3
sti
mov
push
jp
sbb
jmp
jmp
mov
cmc
ficomp
fiadd
fsubr
xor
jle
xchg
pop
test
mov
inc
pop
fwait
jbe
sbb
push
lahf
xor
retf
(bad)
mov
les
and
sti
loopne
add
out
pushf
cmp
jne
ficomp
xchg
adc
xchg
lods
cmps
xchg
inc
jmp
mov
aam
and
cmc
(bad)
push
dec
sub
leave
imul
scas
call
sbb
mov
jbe
out
push
lea
loope
cdq
jmp
push
movs
cmps
test
jne
int
push
enter
push
sti
and
les
xor
mov
jno
cmp
fild
sub
lds
imul
das
sbb
fcomp
test
pop
aam
add
inc
js
sub
iret
cmp
jnp
sbb
pextrw
add
setg
loopne
aaa
loop
cmp
push
cmc
push
jp
in
push
clc
out
fist
int
xchg
mov
leave
outs
int3
pop
sbb
out
dec
sahf
push
mov
sahf
push
pushf
jo
mov
sbb
pop
clc
xchg
cmp
jp
push
xlat
jmp
mov
imul
test
dec
adc
mov
icebp
mov
(bad)
dec
stos
add
mov
jmp
arpl
popa
aaa
push
pop
xchg
mov
rcl
sbb
xor
pop
mov
call
pop
mov
sbb
sbb
fsubr
enter
jo
push
adc
push
fs
xor
xchg
ds
loopne
sar
pop
xor
push
das
fmul
cmps
inc
mov
xor
pop
in
jge
xchg
push
retf
sar
inc
imul
push
pop
lds
mov
adc
xor
daa
scas
pop
gs
mov
dec
outs
mov
pop
mov
test
pop
push
scas
std
jae
mov
xor
and
imul
mov
retf
and
push
ss
int
ror
mov
add
dec
cdq
jg
ret
data16
(bad)
sbb
je
je
fdivrp
dec
xchg
inc
in
fidivr
mov
xor
jecxz
out
or
bound
frndint
mov
mov
cld
pop
cmp
pop
test
add
xchg
out
or
cli
out
lea
call
pop
lock
aas
jge
movs
jmp
sub
jns
loopne
hlt
push
mov
jo
retf
outs
mov
jl
mov
jne
pushf
loopne
mov
stos
loopne
sub
out
xchg
das
cmp
pop
push
ror
sbb
and
in
mov
js
add
mov
(bad)
(bad)
pop
xchg
enter
out
mov
gs
ficom
mov
ins
lock
shr
adc
or
inc
stos
add
inc
inc
or
call
bound
mov
sbb
push
icebp
inc
sub
ja
repz
xchg
mov
out
std
fwait
stos
ds
rol
jecxz
jmp
outs
mov
(bad)
popf
jns
sbb
fld
dec
inc
imul
mov
sbb
imul
xchg
loopne
in
scas
ds
push
fidiv
xor
lahf
(bad)
cmp
frstor
inc
mov
mov
dec
jae
pop
xchg
cld
sbb
add
and
adc
nop
lods
les
pop
pop
js
mov
dec
fcmovu
js
pop
xchg
adc
adc
(bad)
or
xchg
fcom
icebp
xchg
or
and
imul
dec
ja
xor
imul
add
xchg
sbb
pop
out
pop
sub
pop
push
or
pop
dec
mov
lahf
add
pop
ror
das
(bad)
lahf
push
dec
dec
cld
daa
lods
pop
sbb
dec
out
fcmovu
sbb
in
rcl
imul
push
out
outs
call
call
push
sbb
aaa
mov
into
fs
adc
cld
add
inc
imul
bound
or
cmp
xchg
jecxz
dec
push
sbb
inc
push
(bad)
out
fldcw
xor
push
jecxz
push
add
cld
mov
leave
mov
sti
mov
fild
xchg
imul
cmps
push
and
jbe
sbb
mov
js
add
ret
popa
sbb
fisubr
test
movs
push
aam
xchg
test
dec
sbb
mov
adc
cmp
loopne
jno
mov
test
add
sbb
sub
ja
sbb
inc
sub
mov
shr
inc
adc
jb
fsub
enter
or
shl
call
push
(bad)
mov
jno
push
mov
pop
sbb
int
cdq
xchg
sbb
xchg
imul
aad
scas
lea
retf
fadd
pop
fcomp
mov
(bad)
in
cmps
inc
jmp
in
dec
test
adc
rcr
aad
lds
(bad)
fild
gs
or
ret
stc
std
nop
inc
sub
mov
pop
xchg
out
test
ins
jecxz
xchg
fld
push
jnp
adc
js
in
push
mov
sar
aam
popa
or
dec
pushf
in
mov
les
add
pop
out
daa
mov
push
pop
lods
ficom
pop
push
imul
push
je
aam
shl
fs
les
data16
push
mov
(bad)
mov
imul
pop
xchg
aaa
mov
shr
or
jno
inc
push
lods
mov
pushf
push
mov
pushf
adc
sbb
sub
add
pop
imul
xor
xor
mov
ja
outs
mov
jmp
stos
sub
out
inc
xchg
adc
inc
cmps
cmp
jo
and
mov
leave
mov
sahf
jne
adc
into
cmp
stos
das
cmp
ss
mov
and
pop
pop
cmps
leave
or
cmps
shl
sbb
test
pop
sbb
shl
jmp
nop
repnz
scas
sub
inc
xchg
stc
add
sbb
mov
jno
shr
cmps
hlt
arpl
test
push
mov
add
inc
cmp
fst
mov
jecxz
test
call
sbb
loope
jmp
fld
xor
and
dec
(bad)
pop
xor
adc
je
adc
push
cdq
jne
inc
push
pop
nop
lods
xor
jns
ds
fstp
aaa
shr
cmps
cdq
jno
dec
xchg
xchg
fwait
adc
and
fsubp
loop
push
pop
cmps
xchg
scas
jbe
sbb
clc
inc
daa
add
repz
inc
aas
and
cmps
sub
cdq
ds
xor
fsubr
das
push
sbb
pop
clc
lds
jo
or
jmp
psllw
inc
(bad)
cmp
(bad)
pop
ds
mov
pop
jne
sahf
out
fbstp
jecxz
lea
pop
mov
(bad)
pusha
inc
xchg
sar
jecxz
js
mov
loopne
loope
jno
mov
loop
ss
sub
xchg
jne
jmp
cli
jmp
lods
jo
xor
dec
lahf
xor
mov
fstp
and
je
retf
mov
mov
ins
(bad)
xchg
retf
cmp
stc
adc
hlt
push
pop
or
ins
add
and
inc
sub
cdq
cmp
sub
mov
pop
je
sbb
pop
xchg
or
retf
mov
or
cmp
push
inc
outs
aam
lds
mov
push
or
stc
cdq
retf
es
test
mov
pop
xchg
retf
dec
or
ret
stos
sbb
sbb
or
push
or
mov
lahf
xchg
outs
cmps
adc
push
fcmovnb
lds
push
ret
into
imul
lahf
(bad)
mov
cwde
jge
add
stos
pop
xor
push
mov
loop
mov
ret
div
mov
sub
test
dec
std
pushf
or
cmc
inc
cmp
jmp
retf
cmp
(bad)
or
cli
fdivr
mov
xchg
pop
jle
mov
int
adc
aaa
add
xor
aas
retf
imul
imul
lods
dec
ret
cli
push
cmp
std
jae
cmps
jg
and
shr
sar
sbb
daa
xchg
jmp
push
fs
ror
xchg
push
xlat
cmp
stos
ds
and
jg
int3
shl
inc
mov
(bad)
(bad)
mov
outs
aas
fbld
add
aam
ret
xor
mov
jb
pushf
jg
pop
xchg
fisttp
mov
fnstenv
xchg
mov
jl
mov
stc
in
sub
jp
int3
in
test
add
jmp
inc
cmc
fldcw
jne
pop
or
ret
sbb
pop
and
sar
sbb
dec
adc
xchg
mov
shr
setne
pcmpeqw
adc
push
imul
xchg
sub
lods
std
add
pop
das
retf
icebp
ds
test
xor
mov
idiv
sbb
and
repz
or
or
loope
retf
inc
mov
pushf
lods
popf
pop
add
loop
pop
test
mov
pushf
movs
pop
inc
bound
mov
push
aam
jne
leave
inc
aas
xlat
jge
dec
jnp
pop
cmp
pop
stos
ror
in
push
xchg
xchg
jb
xor
idiv
jns
mov
lock
in
inc
rol
movs
sub
lods
push
div
outs
mov
xchg
aad
out
jge
cmp
cmp
dec
pop
cmps
retf
cmps
retf
stc
jbe
fwait
repz
mov
sbb
or
mov
pop
fcom
mov
and
sbb
pop
jae
sbb
cwde
in
jmp
mov
fucomi
inc
push
out
bound
cwde
push
fiadd
ret
(bad)
fneni(8087
cmp
inc
mov
rol
xor
aaa
ror
cmc
inc
jb
adc
push
lock
fcomp
iret
sahf
mov
fadd
cwde
sub
pop
mov
cmp
cmp
or
cmps
xor
push
fs
loope
xor
pop
pop
or
sub
test
lods
xchg
fadd
inc
push
out
mov
inc
mov
loope
xchg
addr16
and
fmul
(bad)
into
lock
fistp
adc
in
lock
dec
movs
test
repz
adc
xor
cmp
cdq
iret
shr
sub
push
out
(bad)
dec
mov
stos
xchg
or
int
pop
mov
out
or
mov
dec
jp
in
push
cmp
stos
sbb
shl
jbe
mov
jmp
push
ret
jl
dec
out
mov
push
sbb
test
loope
dec
cli
cmps
repz
shl
lock
xchg
pop
test
adc
push
push
pushf
pop
jle
ja
mov
add
mov
div
and
cdq
mov
pusha
xchg
imul
jo
stc
sar
sbb
(bad)
retf
loopne
jb
mov
sar
out
mov
push
xchg
add
in
data16
movs
push
leave
sub
mov
and
ins
sub
pop
sti
jne
les
mov
rcl
iret
xor
inc
sti
in
mov
or
ret
int
scas
xor
in
sub
(bad)
int3
jae
jmp
in
and
inc
sub
ja
pop
adc
shr
jl
pop
xchg
and
and
movs
sbb
fild
cmp
ret
test
arpl
xchg
mov
or
inc
push
ja
dec
jmp
sub
addr16
jp
sub
stc
push
jge
xor
dec
xchg
lahf
xor
aaa
add
dec
data16
cs
retf
pop
movs
out
(bad)
push
daa
or
(bad)
jmp
or
retf
mov
shl
push
movs
cmps
mov
popf
and
cmp
mov
and
xchg
test
sbb
push
push
mov
ins
je
jae
cmc
or
inc
test
mov
jg
pop
mov
js
lds
and
and
push
les
shr
mov
imul
push
mov
mov
sub
mov
rol
into
mov
jg
cmovns
inc
aas
xlat
xchg
repz
add
sti
fdiv
dec
inc
jns
xchg
jno
adc
addr16
jle
jb
mov
mov
loopne
xchg
cmps
fcmovnu
mov
push
addr16
enter
cmp
dec
sub
adc
shr
jecxz
lods
sub
mov
dec
jnp
sub
int3
sub
xchg
pop
aad
adc
jmp
mov
repz
pop
sti
push
aaa
adc
jle
ficom
mov
mov
xor
jg
into
pop
icebp
xchg
cld
enter
mov
stos
sbb
lds
and
ds
and
sub
or
jp
je
inc
mov
xor
outs
and
jbe
arpl
jns
xor
gs
(bad)
mov
push
sub
xchg
sub
cmp
jnp
lods
push
jle
push
jecxz
or
scas
(bad)
retf
add
xchg
inc
push
pop
fstp
je
(bad)
xor
das
sub
scas
mov
ins
nop
rcr
push
mov
push
sbb
sub
inc
xchg
xor
xchg
sub
mov
inc
rcr
aam
popa
stc
inc
sub
mov
movs
movs
leave
stos
dec
mov
mov
xchg
mov
mov
cld
jns
mov
or
int3
scas
mov
or
mov
push
sbb
aad
in
adc
pop
rol
push
sbb
sahf
iret
ret
stos
repnz
je
std
mov
dec
repz
int
aam
loop
add
out
push
or
cmps
(bad)
scas
fprem
or
jb
sub
or
hlt
fcom
jmp
sub
cmps
jmp
inc
mov
push
mov
scas
xor
add
xchg
push
ds
pop
stos
cmp
adc
leave
and
inc
jno
sbb
sbb
mov
inc
inc
xchg
jl
frstor
les
mov
xor
push
mov
inc
retf
push
xchg
call
and
push
mov
jnp
inc
xor
pop
adc
push
jmp
jmp
ret
dec
fidiv
xchg
lods
into
stos
add
fnstcw
pop
mov
dec
push
mov
add
push
pop
lods
in
repz
sbb
ss
ins
dec
out
pop
lds
(bad)
jmp
mov
mov
(bad)
in
push
cld
cmp
add
cmp
bound
cmp
adc
je
scas
add
jmp
into
adc
or
mov
and
repz
lea
or
call
mov
push
fwait
adc
mov
xchg
arpl
in
push
retf
xor
push
xor
adc
pop
jae
leave
inc
cs
xchg
retf
xor
jb
pusha
loope
jmp
pop
inc
fcom
mov
jmp
push
push
cmp
jbe
sahf
sub
dec
jae
bound
push
push
and
add
fisttp
leave
xchg
les
pop
inc
popa
les
xchg
mov
sbb
dec
shr
mov
jmp
mov
outs
je
push
pop
cmp
lods
fwait
enter
mov
or
les
jns
aam
push
sub
(bad)
push
and
(bad)
in
test
repnz
cs
test
pop
mov
in
pop
mov
and
xchg
mov
outs
jge
push
sbb
mul
pushf
pop
fstp
rcr
fisubr
dec
jmp
jo
sub
test
xchg
js
and
xor
test
inc
push
xor
pop
mov
mov
mov
and
loop
xchg
and
(bad)
lock
aas
sti
(bad)
inc
and
or
mov
or
out
lahf
in
fidiv
inc
dec
jbe
pushf
scas
inc
shr
xchg
mov
sti
imul
jp
mov
push
arpl
ds
(bad)
repnz
aad
and
xchg
fdiv
mov
lods
inc
add
lods
push
and
pop
mov
ret
push
out
cmps
mov
out
dec
movs
dec
jbe
cmp
xor
inc
imul
adc
dec
out
mov
mov
xchg
sbb
enter
mov
jb
adc
dec
cmp
mov
sub
shr
popf
ror
fistp
les
adc
stc
lods
inc
inc
cmc
lahf
cs
mov
icebp
call
dec
or
xchg
aas
cmp
aas
xor
mov
ret
cmps
(bad)
push
aad
scas
int
dec
mov
ss
dec
das
lods
cli
(bad)
not
jne
repnz
and
div
and
ficom
sub
jmp
es
push
jbe
std
push
int3
int
lock
cdq
(bad)
jmp
je
cmp
stos
xor
clc
xchg
in
xor
dec
(bad)
fsub
clc
mov
push
and
dec
inc
outs
fisub
sub
scas
(bad)
sub
sbb
dec
dec
ficom
iret
sub
test
aaa
mov
pop
and
imul
inc
call
mov
gs
nop
mov
gs
(bad)
fs
mov
or
xor
jns
ret
xchg
test
int
xchg
and
(bad)
xor
repz
ror
mov
cmp
ror
mov
sbb
scas
sub
sti
idiv
and
ins
push
sar
aad
jnp
std
test
dec
clc
sub
cmp
push
ins
retf
dec
and
cli
sub
daa
or
xchg
mov
pop
in
and
rcr
arpl
in
stos
mov
xchg
cmp
ja
popa
ins
(bad)
and
push
out
dec
scas
leave
cld
imul
lds
fs
imul
mov
push
add
sahf
jb
add
sub
std
push
mov
sbb
sbb
pop
(bad)
jg
call
mov
ds
jae
xor
retf
mov
dec
and
idiv
jns
loop
xor
sbb
rcr
adc
mov
repnz
jl
or
pop
cmc
aas
jae
cmp
fwait
cmp
mov
xchg
pop
loopne
xchg
scas
or
push
push
pop
sbb
pop
mov
mov
mov
inc
rcl
adc
inc
cmp
mov
int
inc
jne
or
in
lods
(bad)
jecxz
sub
mov
int3
lods
xor
cwde
inc
inc
pop
xchg
dec
into
lods
push
inc
and
push
outs
push
idiv
push
mov
and
out
cmp
dec
xchg
ds
iret
out
mov
cmps
xchg
xchg
add
xchg
or
push
gs
dec
dec
mov
int
inc
(bad)
sahf
add
adc
inc
add
fld
mov
mov
and
xchg
adc
(bad)
xchg
dec
cmp
push
aas
pop
popa
aad
jp
cmp
movs
mov
mov
cmp
dec
xor
dec
jo
pop
push
add
loop
mov
push
inc
ja
scas
jns
imul
mov
leave
movs
outs
fldenv
out
adc
xchg
aam
sbb
pop
in
push
xor
and
stc
ins
cli
inc
push
gs
jno
xlat
stc
add
movs
xor
mov
xor
bound
pop
sahf
lods
push
test
test
stc
retf
shl
int
gs
sub
addr16
sar
push
pop
xchg
mov
test
jae
das
lods
in
aam
sbb
loopne
movs
mov
jl
fsubr
fst
jmp
ins
mov
or
pop
push
pusha
cs
and
xor
jge
push
cli
jecxz
xchg
pop
in
hlt
mov
add
movs
push
mov
scas
test
dec
inc
sub
addr16
and
sbb
pop
loop
hlt
xchg
in
push
jecxz
mov
es
dec
inc
call
and
and
cwde
or
ret
dec
(bad)
dec
inc
xchg
mov
dec
inc
push
stos
jle
or
(bad)
iret
ds
jp
mov
cld
shl
push
cmp
push
dec
dec
imul
jmp
or
pop
add
ret
jnp
lds
mov
fwait
inc
mov
ins
sub
icebp
mov
jecxz
inc
xchg
jne
addr16
or
jge
jns
sub
or
sbb
sub
mov
and
ss
test
sub
xor
scas
sbb
push
inc
mov
sub
add
fwait
jbe
push
fmul
inc
bnd
pop
xor
aas
fst
popf
sub
call
dec
mov
pop
repnz
lock
add
fwait
push
(bad)
mov
mov
push
or
cmp
movs
and
call
test
jbe
mov
test
mov
sti
aaa
dec
jmp
cdq
mov
in
or
xor
jno
pop
push
vpsrlw
inc
fld
sbb
xor
add
addr16
shl
cmc
fwait
dec
sub
sub
lock
jne
xchg
mov
scas
xchg
xlat
js
lods
clc
aad
jb
stos
int
test
jo
stos
retf
or
(bad)
in
jo
push
lahf
std
or
clc
sub
xchg
ret
pop
add
inc
mov
dec
push
mov
(bad)
fidivr
mov
jl
push
shl
enter
mov
adc
fnsave
imul
mov
fs
adc
inc
mov
movs
inc
dec
dec
push
adc
or
mov
outs
mov
xchg
xchg
push
mov
jp
mov
(bad)
dec
xor
mul
movs
out
sub
and
add
dec
xchg
loop
ret
dec
sahf
test
mov
scas
pushf
mov
aaa
fst
mov
jnp
cmc
mov
inc
xchg
push
jmp
jmp
xor
or
pop
in
pop
into
pop
jo
(bad)
xchg
and
inc
xor
or
jle
das
xchg
lock
sbb
daa
(bad)
jecxz
adc
and
lods
std
cmp
scas
and
push
lods
sbb
sbb
and
dec
xchg
and
xchg
or
shr
rol
ror
outs
mov
lds
sbb
mul
mov
sbb
int3
loop
std
dec
jmp
addr16
cmp
(bad)
rol
(bad)
aad
scas
loop
call
or
adc
adc
push
enter
mov
sbb
je
cmp
movs
idiv
jae
jo
pop
xor
push
jne
ja
pop
dec
mov
leave
xchg
outs
cld
iret
mov
sbb
sub
pop
xchg
(bad)
sub
mov
dec
test
(bad)
(bad)
ss
xchg
add
inc
xor
call
or
jle
pop
pop
pop
push
or
shr
cmp
jle
out
dec
lea
xchg
push
mov
(bad)
in
and
sbb
rcl
test
test
sbb
add
fldcw
sbb
jp
leave
sub
test
repnz
adc
inc
imul
cmp
inc
lods
cmc
cmp
mov
mov
les
popa
mov
mov
inc
push
sub
push
sahf
cmp
push
dec
lods
mov
icebp
push
push
inc
pop
les
lods
xor
sub
sbb
inc
int3
or
inc
fstp
xchg
aaa
cmp
add
fiadd
shl
and
js
pushf
data16
jae
pop
or
adc
xor
aam
and
push
sbb
mov
sub
push
ror
or
xor
sti
push
xchg
fild
push
push
mov
cmps
sbb
not
mul
cmps
or
push
fistp
ds
xor
xlat
lock
adc
(bad)
jecxz
outs
add
adc
jo
jne
stos
adc
jg
cli
cli
repnz
and
ss
cmp
mov
sub
push
jbe
push
bound
mov
imul
jmp
mov
xor
add
pop
stc
cmp
mov
dec
xchg
xchg
add
add
es
inc
sbb
jp
push
stos
loope
dec
rcl
int3
pop
hlt
lods
clc
mov
mov
push
aam
js
repz
sub
movs
mov
and
dec
mov
(bad)
mov
push
sti
sub
rcl
mov
mov
adc
mov
imul
sub
data16
test
mov
inc
and
mov
out
xchg
jge
in
mov
mov
dec
jns
je
ins
cmc
sbb
sub
enter
daa
cli
lds
pop
cs
and
sar
idiv
scas
xor
sbb
push
aad
mov
cmp
cmps
xchg
jae
in
fwait
jns
sti
imul
mul
push
gs
sbb
mov
stc
push
xlat
pop
inc
mov
jecxz
cmp
sahf
inc
sbb
mov
jb
in
pop
mov
das
(bad)
dec
mov
stos
xor
(bad)
lahf
xchg
push
sbb
lods
retf
and
push
push
mov
pop
jno
lods
mov
in
sub
es
call
mov
sti
xchg
cs
push
xchg
adc
mov
in
xchg
mov
(bad)
in
loope
jns
push
cmp
repnz
inc
dec
dec
rol
cmp
dec
popf
fld
push
pop
xor
adc
sub
rcl
adc
fyl2x
mov
or
sahf
inc
inc
sar
pop
fwait
pop
xor
cmp
push
mov
rol
clc
add
repnz
lea
imul
out
adc
fdiv
fadd
jnp
cmp
call
xchg
je
jae
mov
(bad)
arpl
sub
(bad)
imul
imul
push
fidiv
push
jecxz
mov
mov
popa
sbb
mov
imul
loope
xchg
popa
shr
cmp
in
pop
push
jo
dec
pushf
retf
jbe
lods
pop
dec
dec
and
call
push
pop
fadd
cmp
cmp
xor
sar
pop
icebp
das
push
and
int
test
xchg
sub
dec
cmp
xor
dec
cs
add
add
jo
shr
dec
sub
inc
sar
xor
(bad)
in
call
shl
out
mov
cwde
xor
and
jg
cmp
imul
loopne
ins
ja
ret
jb
cmp
sub
scas
cmc
cmp
or
stc
push
bound
sbb
ins
pop
test
jmp
sbb
movs
mov
rcr
push
inc
mov
or
pushf
call
call
addr16
mov
sub
or
jae
es
(bad)
mov
cmp
das
jmp
cmp
or
retf
iret
icebp
rcr
mov
mov
sub
or
ficomp
xor
pop
pop
pushf
(bad)
imul
rcl
xchg
xlat
push
mov
push
sbb
xchg
jnp
jns
xlat
push
pop
cmp
xlat
mov
jge
mov
sahf
test
repnz
lods
fisubr
push
clc
leave
push
push
or
sub
push
mov
push
jo
mov
mov
in
out
(bad)
or
into
push
repz
je
test
xchg
adc
outs
outs
mov
div
mov
bound
repnz
fadd
inc
jge
movs
call
mov
int3
lock
push
cli
icebp
jg
mov
push
nop
push
sub
mov
mov
inc
cmps
cmp
sub
(bad)
in
add
mov
jmp
hlt
lods
idiv
and
cmp
push
(bad)
sub
sub
sbb
jl
xor
imul
jbe
gs
ss
xor
jbe
xor
mov
or
pushf
mov
loop
dec
sbb
push
jle
(bad)
gs
cli
mov
inc
ins
cmp
xor
sbb
xchg
inc
retf
in
cmp
mov
in
or
xor
pushf
jmp
daa
jmp
rcr
sub
sub
test
leave
xchg
jbe
jo
and
add
jb
mov
pop
int
movs
dec
add
movs
add
std
dec
nop
sbb
mov
std
inc
cmc
cmp
dec
aas
hlt
lock
int3
out
push
mov
or
pmullw
pushf
mov
pop
fcom
arpl
lods
stc
out
cmp
jp
add
mov
inc
sub
jmp
xchg
cmps
add
xchg
jns
and
and
inc
rcr
loopne
popa
xor
addr16
out
mov
jmp
inc
add
pop
inc
sub
mov
inc
jg
add
mov
push
mov
xor
shl
pop
sub
cmp
sub
push
(bad)
pop
lahf
and
or
xchg
cld
jmp
ds
adc
lods
(bad)
aas
jg
lahf
outs
lods
shufps
cmps
sub
pop
dec
pop
dec
iret
pop
mov
das
sti
mov
mov
cmp
leave
arpl
pusha
xchg
imul
adc
push
jne
hlt
or
add
popf
and
sub
push
cmp
push
cmp
pop
push
push
pop
ins
leave
push
js
adc
inc
or
(bad)
out
pop
repz
xchg
movs
sar
jle
cmc
cmc
mov
mov
imul
pop
sti
jno
inc
mov
push
pop
inc
xchg
xchg
rol
loopne
addr16
mov
ret
xor
mov
enter
mov
cmp
mov
mov
pop
jns
ins
cdq
mov
xor
not
shr
rol
jns
push
xchg
adc
(bad)
push
fwait
dec
mov
xchg
imul
mov
dec
jle
lods
call
cmp
add
mov
enter
sbb
push
add
dec
pusha
pushw
das
and
imul
out
push
aam
jmp
push
push
mov
add
outs
aam
push
push
jmp
jg
mov
push
sar
sub
and
addr16
dec
fdivp
fistp
push
mov
and
stos
imul
data16
mov
in
outs
mov
shr
fiadd
add
(bad)
in
and
sbb
push
ficom
xchg
mov
mov
xor
popa
mov
into
lods
xor
aaa
js
push
nop
int
cmc
lahf
into
xor
xor
inc
mov
mov
pusha
shr
fcomip
xchg
sar
jecxz
pop
int3
cwde
jle
leave
test
xchg
jno
push
add
fcmovb
mov
jecxz
push
movs
and
outs
mov
mov
inc
out
mov
adc
iret
pop
xchg
adc
rcr
xchg
iret
fnstenv
popa
cs
stc
push
aam
mov
sub
inc
icebp
stc
ins
popf
push
jg
mov
lahf
stos
push
sub
idiv
or
movs
aaa
fild
js
movs
push
loopne
lea
push
out
sub
inc
mov
inc
adc
cmps
jnp
xor
or
fwait
in
dec
inc
push
inc
push
and
mov
xor
add
jge
adc
sahf
sbb
lods
mov
mov
mov
mov
xor
jg
sub
pop
mov
outs
or
xchg
out
or
jbe
ins
les
pop
xchg
fcmovnb
(bad)
ffreep
loopne
aas
pop
mov
les
add
sub
in
push
mov
dec
popa
aam
or
lods
ins
outs
pop
or
xor
inc
push
or
daa
(bad)
out
dec
cmp
pop
ror
jl
test
int3
xor
mov
stc
std
cmps
xchg
dec
shl
imul
and
ja
jp
sbb
mov
xor
lea
jmp
or
pop
inc
int3
mov
fwait
push
cmp
sysenter
in
pop
mov
pop
push
rcl
push
or
and
and
pop
sahf
stos
jb
jb
retf
and
rcl
xor
cmp
add
adc
imul
dec
push
ja
inc
ror
into
in
(bad)
xchg
mov
test
test
(bad)
or
sahf
fcomi
push
push
add
cmp
mov
add
jmp
ret
cmp
pop
jp
jecxz
out
sub
in
lea
push
adc
push
pop
inc
test
sub
loope
mov
popf
cmp
test
fst
xor
sahf
scas
sbb
fucomp
cmp
lock
dec
mov
shr
call
ss
push
xor
mov
dec
pop
push
jmp
inc
add
retf
pop
mov
inc
sar
loopne
lock
stos
jo
and
pushf
out
mov
xor
ror
mov
test
pusha
pop
aas
test
mov
dec
xor
cld
xchg
lahf
jbe
pop
jle
push
retf
out
iret
call
jle
fcom
xchg
add
and
(bad)
push
mov
and
xchg
push
jmp
sbb
bt
je
std
outs
inc
push
adc
int
(bad)
adc
out
and
mov
les
push
imul
lods
sub
loope
xor
jmp
sbb
mov
or
xor
push
pop
stc
mov
mov
xor
ja
stc
dec
xor
imul
adc
mov
jle
je
cmp
out
out
sti
jbe
dec
mov
dec
adc
jg
sbb
and
mov
xchg
xor
adc
pop
nop
shl
sbb
aam
daa
sub
xchg
lahf
test
inc
inc
push
push
retf
fnsave
mov
cs
mov
jecxz
cli
pop
inc
aam
data16
or
mov
outs
retf
neg
jp
fistp
xor
fist
stos
mov
push
mov
and
cmp
and
xor
push
arpl
push
jnp
outs
iret
push
nop
jge
loope
mov
inc
sub
dec
jmp
xor
(bad)
mov
cmp
mov
stos
hlt
or
test
dec
adc
mov
jae
and
dec
sub
push
xor
lods
ja
jge
xor
(bad)
outs
test
jle
push
xor
shr
xor
jl
jmp
shl
mov
stos
(bad)
xor
jl
mov
arpl
loope
je
push
cs
gs
(bad)
mov
retf
leave
cdq
mov
jns
cmp
in
xor
mov
mov
lock
imul
mov
sbb
aas
ss
cmps
int3
adc
test
add
movs
and
arpl
call
jecxz
into
shr
pusha
std
dec
aaa
jnp
xor
dec
imul
lods
and
into
push
fisubr
stos
nop
sbb
push
movs
dec
or
(bad)
int3
iret
repz
je
adc
lea
jle
adc
into
fld
ret
jae
pop
mov
lea
jo
mov
or
jmp
loopne
addr16
or
sti
dec
mov
pop
or
out
sub
out
dec
pushf
xchg
popf
test
or
xchg
out
xor
addr16
(bad)
in
mov
dec
jbe
jmp
cmp
fwait
xchg
les
fild
mov
dec
dec
lea
pushf
dec
loope
inc
jnp
cwde
fcomp
mov
fst
or
xchg
sbb
test
push
ret
xor
mov
sub
and
lea
cmp
ficom
and
xor
xor
sbb
dec
sbb
clc
scas
or
push
addr16
sbb
fdiv
ins
jns
lock
xchg
ja
outs
dec
js
jbe
mov
or
xchg
sbb
fmul
outs
cmp
jae
cmp
push
mov
pop
cli
push
push
push
out
mov
leave
clc
cmp
xchg
or
mov
fst
mov
fimul
and
dec
(bad)
jns
inc
adc
repz
popa
arpl
add
fadd
je
dec
retf
mov
push
mov
ins
jne
sbb
dec
call
(bad)
cli
(bad)
xor
rcl
sbb
clc
mov
xor
adc
out
sbb
mov
gs
cli
push
pop
mov
mov
jmp
xchg
pop
mov
in
in
sbb
mov
cmps
ja
xor
outs
sub
sahf
adc
out
imul
xchg
ja
js
inc
adc
pushf
sub
push
stos
leave
mov
clc
stos
pop
jp
xchg
push
in
retf
mov
sti
in
jmp
xchg
stos
stos
outs
daa
test
cmp
aaa
mov
and
enter
jmp
bound
and
pop
div
mov
pop
pop
stos
add
test
inc
and
cmps
imul
shl
jo
daa
jg
xchg
rcr
push
mov
jns
pop
push
frstor
or
mov
sub
or
cmp
sahf
jmp
or
jmp
int
dec
lods
stc
sub
aaa
jb
cmc
mov
inc
push
ja
xchg
sbb
lds
push
ds
jmp
ror
push
dec
cmp
jecxz
jle
jecxz
add
lds
ins
mov
inc
dec
(bad)
out
push
lock
fwait
dec
movs
dec
xchg
push
cmp
dec
in
xor
jns
dec
dec
shl
jg
outs
outs
mov
and
iret
xchg
fld
pop
mov
aas
and
xchg
inc
out
out
xor
adc
pop
pop
lods
cmp
mov
loopne
mov
add
loope
test
jge
mov
mov
xchg
jns
in
mov
not
stos
mul
fldlg2
and
(bad)
aam
aaa
call
fwait
sar
int3
call
ss
mov
or
jecxz
outs
(bad)
arpl
in
lods
pop
mov
pop
dec
out
dec
(bad)
pusha
cmp
xchg
push
pop
scas
push
(bad)
je
dec
mov
pop
or
mov
push
sbb
test
ror
movd
dec
mov
stos
or
data16
or
jo
retf
add
push
nop
int3
push
push
add
in
nop
popa
lahf
sub
mov
pop
jns
lea
out
xchg
lods
dec
dec
push
(bad)
sbb
fnsave
inc
std
jb
mov
sub
mov
mov
add
ficomp
cwde
cmp
and
cmc
sub
lock
cmp
mov
lea
mov
iret
cmp
inc
xlat
mov
cmp
data16
shl
out
mov
xor
xor
add
add
push
(bad)
pop
imul
sahf
inc
(bad)
in
mov
cmp
sub
imul
jmp
xor
mov
mov
arpl
adc
movs
mov
in
mov
xor
jecxz
ins
xlat
das
xchg
daa
xor
pushf
mov
push
(bad)
cdq
cwde
xchg
cmp
mov
fld
cmc
mov
push
xchg
mov
cmps
cmp
add
sub
add
push
dec
pop
imul
in
push
pop
xor
aam
cmp
cmp
xchg
cmps
ja
inc
pop
add
repz
push
jb
pop
mov
or
pushf
adc
sub
mov
ret
sub
inc
push
dec
push
push
test
(bad)
pop
(bad)
mov
(bad)
sbb
xor
test
add
and
dec
xor
xchg
leave
pop
enter
add
push
pop
xor
movs
fsub
test
clc
test
and
ins
lss
retf
mov
int3
push
stos
nop
adc
neg
mov
call
call
rcl
popf
dec
and
cmp
sub
mov
push
daa
add
mov
lds
pop
daa
mov
push
lods
dec
adc
fwait
jno
jle
test
inc
cld
cmps
repz
aaa
mov
pop
push
(bad)
push
add
repz
adc
hlt
sub
dec
imul
mov
mov
cmp
or
xor
sbb
adc
inc
jge
clc
jno
frstor
int3
or
outs
adc
shr
test
imul
sub
push
imul
xor
ds
push
mov
arpl
jg
loope
push
xchg
mov
mov
les
xchg
out
push
cmps
ins
jl
pushf
fild
xlat
(bad)
pop
hlt
nop
mov
enter
scas
mov
ins
cmp
jns
dec
push
or
add
sbb
push
mul
ret
movups
mov
inc
push
adc
jecxz
mov
fabs
inc
sub
xor
push
dec
xor
ins
arpl
sbb
pop
js
and
aad
ret
pop
(bad)
sbb
mov
xor
jecxz
scas
xor
fst
movs
pop
(bad)
popa
add
fidiv
push
jnp
scas
cdq
sbb
sar
cmps
fidiv
ja
retf
sbb
lock
rcl
ss
or
movs
ror
into
cmps
sti
test
mov
push
cli
jg
or
pop
pusha
in
mov
fistp
xchg
repnz
enter
arpl
jge
sub
test
sar
mov
jp
arpl
pusha
adc
das
ret
clc
inc
sub
ins
nop
mov
pop
lock
xchg
push
push
cmc
ror
dec
xor
mov
xor
aas
enter
cld
cs
mov
cmps
sub
cmps
into
cli
cs
xchg
push
fst
add
(bad)
mov
cdq
out
dec
adc
jl
push
ret
cmp
pop
cmps
or
mov
ror
arpl
sub
stos
arpl
aad
(bad)
sub
lods
and
add
test
arpl
inc
xchg
jge
mov
and
in
adc
pop
out
jno
push
mov
addr16
nop
mov
inc
sahf
lds
jb
adc
loop
jne
(bad)
out
push
out
jmp
lock
sub
into
pushf
fdiv
fistp
push
jbe
call
xchg
adc
pop
or
or
call
add
and
stc
sahf
xor
outs
out
cld
cld
es
test
outs
xchg
jnp
add
pop
jae
sub
sbb
lods
mov
cmps
ja
dec
mov
dec
ja
sub
mov
loope
xchg
outs
icebp
les
cmp
push
lods
fwait
pop
mov
jmp
sbb
sub
movs
add
add
jnp
fwait
jp
jmp
icebp
aas
test
cmps
mov
mov
idiv
cmps
cli
daa
add
pushf
pusha
mov
jmp
ret
ss
aas
pop
pop
bnd
(bad)
mov
push
int3
(bad)
mov
mov
push
sub
shl
push
add
adc
inc
sbb
(bad)
clc
repnz
mov
mov
cmp
cs
sub
repz
in
mov
idiv
out
mov
mov
inc
addr16
push
mov
loope
aam
stos
cld
bound
push
arpl
sar
enter
test
lock
sub
push
adc
icebp
es
(bad)
arpl
lods
call
test
cmps
xchg
pop
(bad)
cmc
out
ds
push
cmc
sbb
aad
pusha
cwde
pop
mov
ret
push
mul
pusha
mov
cmc
pop
mov
(bad)
retf
xchg
arpl
mov
sub
mov
xor
adc
sub
imul
push
adc
mov
mov
mov
sbb
int3
sbb
stos
hlt
jge
ret
inc
test
aam
jmp
sub
mov
adc
scas
jb
and
lea
test
adc
loop
fistp
push
(bad)
adc
mov
mov
push
jb
mov
pop
mov
sub
mov
rcr
in
dec
push
inc
add
cmp
push
and
and
dec
test
inc
in
mov
pop
fdivr
hlt
and
loop
cs
cld
outs
dec
mov
sti
ret
jo
and
leave
mov
xor
sbb
lods
xor
std
or
mov
sahf
dec
inc
hlt
bound
sub
fdiv
in
push
(bad)
mov
jge
mov
(bad)
daa
sbb
mov
pop
push
inc
leave
das
push
ret
mov
rcr
rcl
(bad)
mov
push
pop
jmp
push
outs
sub
ja
pop
aad
sub
ins
aaa
fdivp
mov
ds
cs
mov
xor
mov
mov
fmul
ds
lahf
(bad)
scas
lock
sub
push
stos
mov
and
out
pop
mov
cmp
movs
cs
mov
fdiv
out
cmp
or
mov
mov
mov
in
adc
icebp
mov
mov
pop
inc
mov
call
push
push
fwait
sub
fild
daa
daa
fdivr
test
(bad)
push
xchg
jo
cmc
loope
inc
ret
add
pop
mov
dec
pop
jae
cmp
or
push
and
daa
dec
aam
jle
mov
sub
push
lods
push
int
add
xchg
aam
or
sbb
aaa
lods
ret
inc
jmp
push
inc
mov
sub
mov
leave
inc
cld
enter
fnsave
daa
(bad)
cmp
sbb
mov
mov
push
dec
movs
fdiv
hlt
mov
xor
mov
mov
xor
loope
loopne
dec
mov
pop
rcr
popf
jmp
push
push
call
inc
cli
sub
sbb
ret
movs
pop
push
retf
repz
inc
jns
mov
mov
mov
mov
aam
mov
xchg
push
test
jnp
pusha
icebp
push
or
iret
pushf
xchg
adc
imul
dec
daa
mov
(bad)
cmp
in
cmp
ins
mov
loope
mov
jnp
fwait
cmp
pop
rcr
dec
dec
mov
pop
(bad)
jmp
inc
loopne
and
xchg
movs
outs
inc
dec
ins
adc
mov
mov
lahf
int
inc
dec
push
fild
fiadd
mov
(bad)
in
fwait
in
rol
add
ss
add
pusha
add
cdq
jmp
(bad)
sub
xor
sti
aaa
dec
test
and
sbb
rol
test
fstp
adc
fadd
fbstp
mov
(bad)
sub
adc
jne
dec
mov
add
ja
pop
fimul
xchg
iret
sbb
test
sub
call
push
je
xor
imul
dec
mov
inc
pop
dec
xchg
push
mov
sub
leave
jmp
test
(bad)
or
add
hlt
mov
in
sub
xor
jne
fild
mov
or
rol
mov
into
dec
(bad)
sbb
gs
sub
mov
mov
lods
movs
sub
dec
mov
rol
fs
fdiv
add
dec
adc
(bad)
jmp
inc
pop
or
cmc
cmp
and
mov
ins
inc
jmp
leave
dec
bnd
jmp
loopne
sbb
(bad)
mov
xchg
pop
jo
inc
in
out
or
mov
push
or
out
xor
xchg
cdq
es
push
mov
adc
and
jne
jb
fbld
cdq
xchg
push
cmps
test
mov
hlt
jo
pop
inc
shl
test
sub
out
ror
rcl
dec
jb
iret
sbb
ror
pusha
mov
pop
mov
push
aaa
(bad)
out
pop
imul
jge
movs
and
retf
inc
sbb
lahf
and
aam
dec
bound
mov
lds
imul
leave
dec
test
inc
push
mov
gs
adc
mov
jbe
lock
cmp
cld
out
inc
(bad)
fwait
test
les
rcr
iret
sar
mov
cli
and
addr16
test
(bad)
push
out
and
xchg
rol
js
fiadd
adc
loopne
lods
pop
int3
sbb
aam
(bad)
mov
fild
pop
and
repnz
push
adc
cli
out
pop
pop
mov
fs
fstp
shr
pop
aad
mov
(bad)
sub
rcl
pusha
stc
setbe
and
test
scas
push
sub
push
lods
inc
add
adc
push
std
pop
jmp
repz
lahf
scas
dec
outs
jo
pop
pop
mov
pop
ss
dec
mov
mov
push
jecxz
mov
ins
and
inc
mov
fist
sub
lods
jmp
dec
mov
sub
fdivrp
cmp
sub
je
ret
pushf
in
cmps
sti
pop
adc
iret
int3
fsubr
cmp
sbb
cmp
ja
xchg
outs
invlpg
outs
jecxz
shl
mov
and
in
stos
call
cs
xchg
jl
imul
jecxz
into
xlat
cmps
mov
push
xchg
jl
mov
lock
push
jle
retf
xchg
ret
test
repnz
mov
jle
jae
int
jno
jle
mov
xor
call
inc
rcr
xchg
je
fwait
xchg
adc
mov
stos
movs
xor
sub
jnp
repz
popa
mov
mov
xchg
adc
sbb
cmps
out
sbb
stos
neg
cdq
xchg
inc
or
stos
hlt
(bad)
mov
add
adc
and
into
in
test
mov
push
jns
pop
jecxz
mov
dec
sub
aaa
xlat
mov
(bad)
sbb
sbb
pop
ror
push
cdq
xchg
fidivr
out
pop
dec
test
lods
stos
cmps
xor
outs
mov
mov
addr16
outs
xchg
add
push
ss
sub
adc
jge
cmps
xchg
into
push
mov
xor
ret
mov
push
cmp
jno
pop
push
imul
pop
ret
fmul
shr
push
xchg
xor
pop
inc
pop
pop
jnp
jle
or
and
inc
adc
leave
cmp
out
inc
outs
xor
retf
les
fadd
test
push
pop
inc
loop
cmp
popf
lods
in
inc
pop
mov
or
cwde
hlt
mov
test
xor
out
jno
cmc
cmps
jbe
xchg
push
lods
(bad)
retf
inc
inc
lds
ins
inc
es
xchg
cdq
inc
dec
xchg
fs
inc
repz
cmp
or
adc
popa
mov
leave
add
xchg
iret
dec
test
mov
mov
sbb
mov
fistp
(bad)
retf
ret
dec
out
xor
sbb
sbb
xchg
sbb
jae
rol
mov
adc
retf
in
iret
xlat
in
leave
mov
push
or
or
ds
pop
pop
sbb
jno
or
inc
test
(bad)
pop
bnd
outs
push
mov
in
push
push
test
ins
and
mov
daa
pop
int
mov
jmp
pop
pushf
sbb
pop
pop
pop
mov
ret
pop
std
cmp
add
push
loope
or
arpl
push
retf
jge
cmp
inc
jge
mov
sub
mov
or
call
xchg
adc
inc
bound
push
sbb
in
into
outs
cli
fwait
dec
(bad)
arpl
mov
(bad)
pop
xchg
call
loope
lea
lea
out
inc
call
cli
les
xchg
clc
xor
in
outs
das
ja
mov
call
mov
out
jo
cdq
push
sbb
or
inc
lock
(bad)
mov
rcr
jge
dec
dec
ins
movs
pusha
cmps
(bad)
mov
cmp
sbb
ins
mov
daa
mov
sbb
jnp
xchg
jecxz
int3
in
jbe
and
ret
or
pop
jae
pop
cmp
out
icebp
mov
pop
retf
fcomip
pop
ret
cmp
cdq
ficom
mov
xor
retf
pop
js
jne
pop
add
scas
scas
or
xchg
xchg
int3
ret
mov
and
in
hlt
cmc
push
xchg
loop
sub
pop
gs
int
push
inc
out
or
(bad)
xchg
fwait
hlt
xor
jne
popa
xchg
in
xor
pop
cdq
sub
mov
stc
sub
xchg
jmp
cmp
ret
pop
push
push
cmp
adc
ror
cmps
fadd
jle
popa
daa
mov
jl
push
rol
loop
sbb
mov
enter
and
pop
scas
jns
test
enter
jnp
xlat
not
les
jl
or
sub
les
xchg
and
loop
mov
adc
mov
push
mov
or
inc
xor
popa
and
mov
push
push
xor
movs
mov
pushf
fst
jg
add
or
stos
mov
inc
out
mov
jae
sub
(bad)
nop
test
stos
aad
sub
stc
out
pop
jnp
push
icebp
mov
ret
dec
popa
shl
xchg
inc
and
sbb
cmp
pop
fmul
jbe
not
cmps
push
int
jne
inc
call
rcl
jo
mov
xchg
fs
push
fidivr
(bad)
sar
shr
addr16
inc
sub
mov
es
and
test
adc
or
movs
xchg
dec
rcl
(bad)
in
mov
mov
fwait
mov
xchg
xchg
adc
fwait
nop
scas
cli
loop
adc
pop
mov
pop
shl
addr16
cld
or
rcr
aam
xor
or
inc
dec
cmp
in
adc
add
outs
bnd
pop
and
dec
fcomi
fadd
jmp
arpl
pop
daa
mov
stc
repnz
mul
scas
pop
rol
cmc
fnstsw
and
lahf
lds
xchg
fsub
sti
stos
shl
push
enter
fisubr
cmp
mov
xchg
test
shr
test
pushw
scas
inc
mov
pop
xchg
frstor
test
sbb
sbb
jno
ja
fld
dec
or
fsubr
mov
inc
lahf
nop
push
aam
(bad)
hlt
cdq
or
xor
stc
out
cmp
mov
xchg
pusha
(bad)
cmp
leave
jno
pop
adc
ds
and
add
push
idiv
shr
pop
add
pop
test
ss
pusha
out
les
mov
inc
or
or
xchg
addr16
push
mov
pop
jmp
jns
fcomp
hlt
push
pusha
pusha
aam
(bad)
mov
or
mov
add
popa
adc
rol
wbinvd
jp
call
mov
cli
jo
cmps
dec
inc
outs
stos
sub
in
inc
adc
or
std
inc
aas
cmp
mov
aam
mov
sub
cmp
push
pop
out
mov
and
adc
inc
jmp
das
cmc
jp
lods
(bad)
mov
jp
dec
jmp
pusha
pop
dec
cmp
nop
or
xchg
mov
add
pop
loope
cld
repz
lods
push
(bad)
lods
je
rol
cmp
xchg
call
xchg
es
mov
repnz
or
push
ffree
int
inc
neg
xlat
pushf
(bad)
jge
mov
rcl
ret
ss
mov
loop
add
inc
or
mov
inc
call
xor
xchg
jmp
movs
es
stc
bound
jno
cs
data16
stc
pop
pop
sbb
or
pop
jp
jge
cmps
xor
enter
mov
enter
cmp
mov
jle
pop
xchg
mov
bound
and
mov
(bad)
push
rcl
call
dec
mov
mov
ds
pop
dec
in
test
push
idiv
ret
xchg
xor
loopne
outs
mov
stos
and
into
sbb
lahf
or
stc
or
jg
push
cmp
out
inc
push
lea
(bad)
outs
xchg
mov
ficom
cmps
pop
or
scas
mov
loopne
inc
test
lahf
pop
sub
or
lock
pop
loope
sub
outs
xor
add
cmc
add
ret
or
adc
in
xchg
mov
cs
sub
push
stc
out
push
adc
out
cs
sub
xchg
cmp
mov
cmp
mov
retf
sub
pushf
cmps
pusha
call
mov
lock
pushf
aas
shr
lea
inc
aaa
mov
cmp
rcr
sahf
(bad)
cmp
mov
data16
inc
repnz
sbb
js
xchg
dec
sub
movs
mov
inc
push
clc
jo
mov
sbb
out
test
sub
and
xor
mov
cmp
and
jns
retf
dec
imul
and
xchg
bound
sub
lds
inc
mov
adc
and
hlt
xlat
sbb
out
stos
pop
inc
(bad)
inc
pop
mov
imul
icebp
lock
adc
cmps
shl
or
outs
lock
cs
or
inc
inc
or
lds
ds
cmps
adc
mov
mov
mov
pop
and
xor
leave
test
cmp
inc
scas
scas
or
imul
movs
xor
lahf
sub
mov
adc
adc
push
sub
dec
xor
pop
sub
sub
mov
xor
popf
add
sbb
adc
add
sbb
mov
loope
mov
xor
add
aaa
mov
pop
inc
jne
or
jmp
push
and
dec
retf
cli
xchg
sbb
popa
pop
xor
and
mov
cmc
pop
popa
mov
pop
ss
pop
call
xchg
fcomp
pop
cmp
cmp
xor
sub
push
jp
push
xor
sbb
push
addr16
jne
cmp
inc
xchg
or
add
add
cmps
aaa
sar
jecxz
add
jnp
sub
cs
bound
ja
icebp
(bad)
jl
push
or
sti
dec
jmp
out
sub
and
dec
fwait
mov
fild
call
mov
arpl
pop
int
fsubrp
push
sbb
push
leave
jno
fwait
mov
push
in
clc
push
mov
out
jl
fwait
push
rcr
movs
ja
mov
cs
lods
in
add
mov
(bad)
(bad)
xchg
adc
bound
loopne
ins
mov
add
jecxz
xor
clc
jnp
(bad)
out
int
lea
pop
or
pop
das
mov
inc
into
cmps
out
push
ja
bound
jo
mov
mov
fistp
into
pop
xor
pop
or
out
xchg
popa
and
lea
pop
xchg
fdivr
movs
xor
sbb
add
wrmsr
dec
out
push
inc
pop
or
mov
adc
mov
jmp
movs
(bad)
jmp
mov
aas
mov
aad
xchg
aam
sahf
lds
out
dec
test
mov
mov
sbb
push
mov
dec
jb
lea
mov
mov
movs
push
loopne
or
and
fwait
jle
ror
xor
mov
xchg
jmp
sar
imul
movs
sar
mov
push
mov
in
sub
sbb
(bad)
(bad)
mov
jp
(bad)
fs
mov
jae
mov
add
cmp
pop
mov
stos
outs
mov
lock
mov
mov
fsub
test
jae
sub
ret
push
sahf
pop
mov
outs
dec
test
cdq
daa
jge
mov
xor
dec
stos
addr16
mov
pop
test
mov
pushf
mov
out
mov
inc
push
cld
and
int
add
sbb
cmp
mov
lds
adc
pop
dec
cmp
xor
dec
cwde
pop
pushf
pop
jecxz
mov
retf
pop
mov
dec
fcom
dec
jecxz
dec
add
repnz
pushf
lods
and
xor
xlat
inc
mov
xor
fadd
scas
sub
scas
(bad)
jg
xchg
xchg
aad
pop
imul
push
sbb
push
mov
mov
pop
push
jne
rcl
(bad)
and
into
test
in
mul
pop
xchg
aad
xor
push
lea
adc
mov
call
dec
xchg
mov
into
call
jno
push
jns
mov
push
outs
aas
cwde
stos
ret
inc
adc
add
fwait
dec
outs
dec
push
add
or
out
jmp
mov
shl
popf
sbb
pop
push
mov
lea
dec
push
dec
fistp
enter
or
int
rcr
jo
inc
je
retf
sahf
add
xchg
lds
js
das
ins
scas
ins
popf
sti
out
jle
xchg
mov
stc
repnz
out
stos
sbb
cmc
popf
jbe
(bad)
sti
inc
sub
cmp
(bad)
xchg
inc
bnd
das
mov
and
and
pop
push
adc
push
sbb
add
mov
mul
nop
inc
adc
dec
dec
jmp
fcom
xchg
mov
mov
mov
sbb
sahf
shl
gs
mov
mov
xor
jne
push
sub
fs
cdq
jmp
sub
push
movs
mov
and
leave
mov
push
xchg
cmps
in
clc
adc
in
mov
push
(bad)
not
sbb
xchg
sub
fsubr
data16
shl
xlat
loope
repz
jmp
fwait
pusha
xlat
sbb
movs
push
push
dec
jl
adc
mov
push
mov
cmps
loope
push
in
ins
ret
out
call
dec
sbb
sub
lds
mov
ds
bound
aaa
inc
sbb
loopne
adc
call
push
enter
xor
sub
sub
cli
shl
pop
mov
jnp
or
dec
(bad)
xor
ret
mov
sbb
mov
mov
xchg
fsubrp
stos
dec
ds
sub
xlat
jns
mov
mov
cmc
pop
and
mov
dec
jmp
add
cli
mov
jle
enter
retf
mov
mov
fisubr
or
lock
sahf
xor
mov
adc
add
and
test
push
sub
in
pop
mov
test
push
cld
icebp
hlt
data16
pop
adc
ret
aaa
cmc
fild
sar
fs
pop
xchg
retf
lds
(bad)
dec
out
popa
aas
adc
loop
mov
push
mov
cwde
push
ja
jb
adc
sti
mov
aam
xchg
mov
adc
repz
jl
retf
pop
inc
pop
mov
call
popf
sub
ss
pop
pop
aaa
inc
lods
and
pop
dec
sub
xchg
pop
mov
adc
jo
sub
push
jmp
dec
stos
aad
mov
jge
add
mov
mov
es
jmp
out
inc
in
ret
jmp
mov
sar
lock
addr16
lods
push
or
movs
mov
retf
shr
xlat
pushf
mov
xlat
xor
shr
pop
outs
inc
jne
test
mov
rcl
mov
leave
sti
add
xchg
imul
std
xor
mov
xchg
mov
pop
dec
or
jne
cmp
jnp
xlat
xor
call
mov
sbb
xchg
cwde
inc
sub
sub
and
dec
mov
or
push
js
mov
out
push
sbb
lahf
xchg
push
retf
fs
addr16
jecxz
xchg
bound
jle
fistp
pop
jge
dec
imul
stos
int
in
iret
cmc
cmp
retf
loopne
mov
mov
aaa
in
cmp
cmp
aad
xor
xor
out
inc
cmps
loop
sbb
ret
retf
push
mov
shr
into
and
stos
fistp
mov
rcr
jo
add
(bad)
shl
push
call
mov
(bad)
sub
add
mov
ja
mov
push
push
cld
popf
(bad)
popf
aam
xor
popa
sub
xchg
add
pop
mov
movs
lds
aad
inc
ret
popa
cmc
xor
xchg
arpl
push
cmp
pop
cmc
mov
dec
sub
in
jno
inc
inc
add
ret
adc
jp
das
stos
sub
fwait
mov
loop
jae
ss
sub
push
mov
mov
je
shl
pop
into
ret
jge
repnz
jns
ins
xchg
daa
and
imul
into
and
call
sbb
mov
not
popf
lock
add
outs
shr
das
daa
mov
inc
inc
test
inc
mov
or
fstp
aad
xchg
xor
dec
movs
js
cmc
push
mov
dec
push
adc
fiadd
fsubr
stos
imul
js
dec
and
sub
sbb
icebp
dec
xchg
test
mov
out
cld
and
mov
jge
mov
mov
xchg
test
add
xor
push
jo
xor
xchg
pop
(bad)
loope
mov
lahf
jo
loopne
mov
(bad)
xchg
jnp
shld
inc
fdivr
pop
pusha
inc
pop
add
mov
xchg
aas
in
inc
jle
xchg
sub
mov
xchg
sub
inc
js
icebp
adc
sahf
xchg
sub
push
jno
ins
shl
rcr
xchg
cwde
test
scas
xor
bound
movs
in
mov
push
jmp
xlat
dec
stc
or
mov
push
in
dec
(bad)
and
outs
sub
jl
xlat
push
pop
aam
sub
aad
mov
jmp
pop
cmp
stc
mov
jbe
or
faddp
mov
fcom
outs
cmp
push
mov
sar
aad
ja
cmc
popf
xor
jp
and
mov
test
pop
mov
push
push
sbb
cmp
mov
aam
jmp
jp
add
push
mov
fld
rcr
int3
sbb
push
and
xlat
xchg
or
jmp
neg
repz
push
push
or
jecxz
jne
jecxz
push
fstp
stos
repnz
lock
mov
xor
sub
xor
out
movs
fisub
mov
fnstcw
sub
mov
dec
jp
call
cmp
pop
add
imul
jp
cmp
stos
sbb
in
movs
xchg
jmp
pop
pop
loope
dec
mov
loopne
fs
in
pop
lods
imul
cmp
icebp
push
jb
fucomip
mov
sbb
sbb
mov
cmp
inc
in
jns
mov
dec
jnp
das
out
cli
dec
mov
enter
aad
pop
mov
ds
xchg
xor
cmp
xchg
add
jmp
aad
or
out
add
cmp
addr16
push
xor
in
test
std
loopne
dec
(bad)
mov
popa
push
daa
or
lea
pop
test
and
int3
jmp
mov
pop
popa
xor
daa
dec
adc
test
retf
movs
push
cld
or
pop
jnp
loopne
scas
push
inc
(bad)
fidiv
dec
call
stc
and
and
lds
sti
xchg
pavgb
shr
and
pop
(bad)
adc
test
sahf
(bad)
jbe
sbb
leave
(bad)
mov
inc
and
push
mov
push
sbb
mov
jnp
inc
jmp
pop
inc
rol
push
ins
and
add
fist
imul
mov
mov
or
jno
retf
push
sbb
xor
xchg
out
rcl
or
mov
pop
mov
push
cmp
jne
mov
fidivr
push
loopne
fisttp
mov
xchg
mov
inc
retf
or
outs
push
mov
sbb
sub
repz
jg
cmp
int3
fwait
ret
pop
jae
pushf
dec
or
loopne
scas
in
sub
sbb
retf
mov
ss
test
out
bound
cmp
xor
ins
cdq
mov
dec
mov
fs
sbb
(bad)
add
sub
cmp
dec
jge
imul
xor
int
loopne
lods
push
mov
stos
std
sub
or
jne
jmp
jge
inc
int
or
mov
mov
sahf
push
imul
int3
movs
add
pop
and
mov
xchg
jg
not
mov
add
out
test
loopne
xor
pushf
idiv
repz
ror
xchg
push
push
add
arpl
jmp
ins
retf
push
ins
clc
inc
fs
(bad)
dec
cmc
mov
cmp
xchg
dec
out
mov
xlat
xor
or
jp
xchg
pop
add
lock
mov
jne
add
add
jbe
dec
jmp
(bad)
(bad)
cmp
push
mov
pop
cwde
ss
movs
mov
mov
inc
xchg
inc
sbb
aad
sti
sub
and
test
cdq
jp
outs
les
(bad)
mov
adc
retf
popf
pop
into
xchg
adc
cmc
popf
(bad)
shl
ret
inc
jo
int
push
push
jmp
push
mov
adc
sti
inc
push
push
sbb
add
mov
mov
enter
xchg
pop
push
adc
inc
pop
retf
test
jae
cmp
mov
ror
or
cmps
iret
scas
sub
push
pusha
push
cli
jecxz
mov
push
add
xchg
xchg
shr
inc
lods
nop
sbb
fnstsw
sub
mov
cs
dec
int3
cdq
cdq
sahf
and
pop
mov
fwait
popa
ss
and
push
mov
push
repz
push
sbb
sar
cmp
sbb
add
xor
push
inc
mov
xor
xor
xor
(bad)
add
test
dec
scas
(bad)
jae
cwde
ficomp
mov
adc
and
or
jl
sbb
sbb
lock
lock
inc
icebp
jp
in
push
jae
pop
pop
mov
fisub
repz
enter
aam
sti
enter
mov
jnp
scas
dec
and
(bad)
fiadd
pop
jns
cmps
mul
xor
ins
mov
cmps
fs
jbe
aas
push
or
and
sbb
sbb
fadd
push
je
xchg
adc
mov
mov
jno
fsub
jmp
(bad)
sub
movs
jns
(bad)
jl
sbb
dec
cwde
sbb
maxps
ret
jnp
xor
and
sub
and
mov
cmp
jmp
inc
and
hlt
dec
fist
xlat
out
xchg
and
dec
je
mov
lods
addr16
dec
jle
or
mov
cmp
jecxz
jb
push
jecxz
test
inc
fistp
sub
out
shl
pop
sbb
repz
les
xor
jo
ret
inc
adc
mov
jnp
cmp
inc
fs
aaa
lods
mov
stos
mov
lds
into
ja
aas
jle
outs
mov
jne
call
sub
imul
cmp
cmc
dec
xor
(bad)
scas
xlat
repnz
in
adc
inc
mov
cld
test
or
add
and
dec
pop
jno
push
pop
cdq
int
cvttps2pi
cmp
hlt
jle
jae
inc
fcomp
xchg
imul
cdq
jo
and
sti
mov
hlt
call
loop
ja
test
repnz
repz
inc
push
mov
mov
int3
push
push
pop
sbb
push
stos
inc
retf
je
dec
addr16
inc
inc
mov
pxor
(bad)
xchg
add
mul
out
push
xchg
and
pushf
mov
aam
jmp
outs
xchg
imul
push
popa
xor
and
aad
loopne
scas
lock
imul
lds
sbb
loop
hlt
and
dec
mov
push
jnp
loop
fadd
add
xchg
shl
into
data16
test
call
rol
icebp
push
xchg
idiv
sub
xor
lahf
div
jnp
imul
mov
xchg
and
in
sbb
pushf
mov
loop
test
xor
outs
(bad)
xchg
fwait
ins
xchg
pop
loope
movs
sub
sbb
mov
mov
icebp
xchg
sbb
jg
push
jle
int
mov
daa
imul
pop
(bad)
cmp
jbe
nop
(bad)
hlt
mov
adc
or
aad
out
and
xchg
adc
jmp
dec
push
push
add
in
mov
fst
pusha
adc
sbb
adc
mov
mov
cmp
shl
fadd
test
fwait
inc
retf
pop
mov
inc
lods
xchg
add
sbb
push
stos
jne
lahf
icebp
or
(bad)
cmp
pop
sbb
pushf
sti
inc
ror
ins
mov
push
wrmsr
js
ins
push
je
push
jae
rcl
stos
inc
add
repz
lea
mov
and
and
adc
or
ja
out
ffreep
cmc
mov
into
dec
and
mov
out
(bad)
sub
cs
jbe
push
dec
add
mov
call
inc
xchg
push
xlat
and
sbb
sub
imul
cmps
jp
or
xor
mov
push
adc
dec
jno
mov
jno
out
or
push
jmp
cmp
test
je
inc
ror
ficom
daa
test
(bad)
and
mov
pusha
pop
out
test
fsubp
icebp
mov
sub
out
fwait
adc
shl
jl
cmp
cmp
test
mov
ja
mov
lock
rcr
fwait
push
adc
or
ror
or
push
push
sbb
jp
outs
mov
dec
aad
cli
inc
rcl
xchg
sub
outs
repz
out
mov
icebp
pop
adc
or
sbb
cwde
hlt
mov
mov
(bad)
push
sbb
xchg
sbb
hlt
xor
outs
lods
mov
mov
(bad)
and
xchg
push
adc
cmp
jmp
fimul
mov
in
scas
pop
sti
push
int
ss
pop
xchg
enter
cmp
stos
outs
jae
jg
(bad)
out
data16
test
push
sbb
mov
xor
mov
in
dec
pop
mov
dec
mov
bound
xor
mov
fwait
jecxz
adc
xchg
cli
sar
cli
xchg
mov
in
add
dec
push
gs
mov
(bad)
jmp
mov
leave
xor
lock
loope
sbb
xchg
sbb
popa
pop
or
mov
adc
dec
je
lods
jg
in
push
fidivr
mov
push
inc
pusha
cmc
dec
dec
push
jmp
pop
call
push
ret
mov
pop
xchg
add
cwde
mov
(bad)
out
mov
xchg
adc
jecxz
inc
das
pop
shl
xchg
inc
aad
xor
cmc
or
test
pop
test
std
dec
stos
and
adc
jne
adc
mov
and
mov
scas
jb
out
fild
(bad)
mov
pop
sub
icebp
sub
lds
cmc
mov
sub
push
xor
mov
add
cld
lea
jbe
pop
sbb
xlat
(bad)
ds
loope
or
lea
je
and
(bad)
lock
fld
in
int
ds
ja
adc
mov
cmp
xchg
xor
retf
aaa
movs
push
inc
jle
inc
mov
mov
cmp
jg
jo
cli
and
int
sub
jne
fsub
pusha
push
mov
ror
xchg
cwde
mov
push
pushf
call
mov
stos
(bad)
xor
into
adc
sbb
jecxz
fidivr
(bad)
aad
sti
movs
lock
xchg
pop
ins
cmp
push
addr16
sbb
hlt
in
inc
sti
fld1
jmp
dec
rcl
mov
repz
out
icebp
pop
cmp
xchg
cmp
or
push
sbb
pop
sub
loop
daa
scas
cmp
in
cmc
push
jge
retf
movs
or
adc
or
xchg
adc
call
push
cmc
stc
mov
sub
add
xchg
aad
cwde
jne
sub
push
into
jmp
mov
sbb
mov
dec
out
mov
lock
or
sub
fdiv
test
pop
mov
(bad)
int3
cmc
or
ret
imul
clc
lods
push
imul
imul
push
call
cmc
mov
mov
popa
daa
fnsave
mov
jmp
or
lea
or
stos
add
push
jg
(bad)
or
jo
test
scas
dec
js
jecxz
mov
mov
in
mov
push
imul
xor
sbb
call
int3
in
shl
ret
mov
xor
mov
in
pop
sbb
je
aaa
fdivr
adc
fstp
mov
fwait
xchg
push
sub
loopne
repnz
(bad)
pop
std
jo
enter
std
cdq
outs
aas
sub
imul
xor
pop
adc
in
and
dec
inc
cmp
jo
mov
dec
outs
xor
jle
jno
push
mov
inc
mov
inc
pop
push
mov
outs
jmp
pop
jns
mov
pop
cwde
stos
mov
mov
out
mov
and
loope
xor
sub
sar
mov
xlat
ds
bound
sbb
int3
gs
and
daa
int3
bnd
nop
rcl
pop
out
mov
xchg
pop
imul
xchg
cwde
cmp
push
ret
xor
and
pop
rol
mov
(bad)
ficomp
out
js
daa
or
xor
aam
scas
movs
inc
cs
mov
test
shl
xor
sahf
mov
inc
or
sbb
jbe
xchg
enter
out
mov
mov
jmp
cli
sbb
retf
scas
leave
mov
dec
adc
dec
mov
(bad)
mov
push
xchg
ror
loopne
xor
lea
or
pop
ficomp
add
cmp
cmp
adc
frndint
and
mov
inc
pop
outs
sub
call
cmps
inc
or
inc
out
mov
pushf
inc
jnp
dec
das
mov
sbb
inc
lock
xor
pop
enter
fwait
push
push
scas
jmp
sahf
jne
sub
push
mov
pop
jns
inc
ja
inc
sbb
test
aas
in
adc
pop
daa
cwde
or
sbb
mov
add
adc
pop
std
pop
cmp
stc
xchg
lea
jo
mov
mov
jae
inc
cmp
mov
es
pop
xor
into
out
out
(bad)
enter
ror
add
xlat
fcomi
adc
dec
inc
xchg
mov
sahf
mov
cmps
jno
or
sub
ja
xchg
ror
ja
hlt
das
test
mov
or
inc
pop
adc
push
outs
cld
cmp
xor
sbb
loopne
fisubr
mov
pop
pop
push
mov
bound
cld
mov
dec
rcl
sar
stos
xchg
push
or
inc
push
push
mov
cmp
loope
fidivr
out
push
test
test
adc
push
fwait
out
cdq
jecxz
dec
stos
or
(bad)
addr16
xlat
aad
enter
(bad)
and
js
ss
mov
cli
add
jmp
sar
into
stc
add
push
cmp
xchg
mov
mov
or
sbb
dec
and
push
pop
sbb
out
cmps
(bad)
dec
call
mov
outs
or
inc
das
lock
enter
cmps
(bad)
stos
popf
jne
jbe
inc
mov
cld
pop
outs
push
(bad)
push
cmp
out
dec
jo
sub
pop
pop
lahf
adc
inc
sbb
stc
push
and
inc
or
retf
jp
ror
scas
jge
and
scas
std
pusha
test
push
pop
cld
scas
push
movs
pop
retf
mov
or
lds
adc
adc
dec
push
aaa
inc
fild
repz
dec
adc
in
mov
inc
cmp
mov
dec
push
sub
in
push
stc
dec
movs
ret
popa
stos
or
mov
jne
xlat
adc
test
push
push
aaa
inc
add
xchg
int3
aaa
popa
les
in
inc
mov
sub
(bad)
nop
mov
stos
mov
cmps
stc
pushf
fnsave
add
scas
retf
pop
dec
xchg
outs
(bad)
and
ret
mov
xchg
movs
cmp
dec
pop
mov
jge
push
pop
fdiv
add
inc
dec
jmp
fwait
or
push
pop
mov
cmc
gs
push
ins
out
sub
push
pop
or
rcr
jns
push
das
ud2
pop
mov
mov
push
pop
or
mov
sbb
out
cdq
jbe
leave
popa
stc
push
stc
lock
mov
mov
pop
and
pop
pop
rol
mov
xor
loope
dec
sub
jnp
cmp
xchg
jle
ret
retf
or
jle
lods
xor
push
retf
pop
jno
and
jne
sbb
in
adc
mov
enter
iret
fsub
or
or
push
mov
xchg
outs
add
or
mov
xchg
call
jbe
shl
in
mov
mov
lods
loope
aaa
dec
das
xlat
std
ins
jo
jno
stc
fsubr
(bad)
jno
mov
mov
or
ret
cmp
push
mov
xor
ja
dec
mov
(bad)
cmp
nop
dec
into
dec
xor
adc
test
jo
add
je
mov
adc
aam
mov
push
cmp
adc
push
mov
inc
cmp
add
adc
into
lahf
and
pop
shr
xchg
aaa
sub
or
and
mov
es
in
inc
shr
add
scas
shl
test
clc
ror
sbb
jmp
ins
retf
cli
pop
push
mov
jg
mov
ins
add
or
push
popf
and
or
inc
xchg
push
sar
aas
int
pop
jno
int
into
mov
mov
jbe
inc
push
les
std
int
cdq
outs
mov
pop
sub
xor
ja
and
scas
fbstp
xchg
xor
fs
mov
xchg
aad
fistp
or
sub
test
mov
inc
xor
dec
xor
ret
xchg
je
(bad)
push
out
pushf
ins
and
pop
(bad)
ficom
call
int3
mov
repnz
cmps
ret
push
aam
cmp
mov
mov
pop
xchg
push
fldenv
mov
push
sbb
nop
adc
arpl
mov
inc
ret
cli
cmp
push
cmc
mov
jb
es
or
push
or
sbb
jns
outs
dec
pop
push
mov
cmc
sbb
xchg
fiadd
jg
jb
test
lods
test
sbb
jnp
pop
out
pop
sti
sub
push
in
or
test
jmp
adc
daa
inc
mov
fsub
cmp
mov
movs
push
mov
movs
mov
and
dec
lds
js
hlt
add
sti
mov
add
lock
push
in
out
sbb
dec
mov
mov
cmp
mov
sbb
cmp
loope
add
outs
stos
jbe
xchg
mov
cmp
xchg
add
hlt
ja
test
dec
ffree
cmps
test
mov
les
xor
dec
adc
or
add
loop
sar
cmp
jge
xchg
adc
sbb
dec
bound
ins
int3
ins
xor
mov
aam
add
mov
and
jae
movs
jmp
push
push
scas
arpl
cmp
mov
add
retf
or
cmp
ret
stos
mov
sbb
clc
adc
out
pop
sbb
enter
adc
jbe
stos
mov
and
lds
push
cmp
jg
dec
pop
aad
mov
sub
mov
aam
sbb
test
shl
jae
sbb
mov
cmp
in
out
jbe
cwde
(bad)
pushf
test
adc
xchg
fstp
jne
or
addr16
aam
xor
pop
and
jo
pop
(bad)
pop
pop
nop
cld
test
xchg
rcl
xchg
inc
inc
cwde
imul
in
cld
in
sub
cmova
pop
push
mov
loopne
sbb
clc
push
clc
loope
rcl
in
sub
cwde
mov
sub
dec
push
call
int
aaa
mov
inc
sbb
lahf
jnp
sub
cmp
retf
movs
out
in
push
xchg
push
out
jne
fnstenv
dec
lock
sub
push
in
mov
es
xchg
sbb
and
retf
pop
outs
mov
div
inc
shr
retf
data16
sub
cli
fs
xchg
push
adc
pushf
mov
sbb
sahf
push
push
xor
call
or
ins
lea
push
cmps
je
mov
fmul
xchg
xor
into
push
std
push
pop
nop
push
mov
mov
sbb
jae
std
dec
aaa
push
sbb
inc
test
outs
pop
mov
iret
(bad)
cmp
mov
jo
ffree
scas
rcr
xchg
pop
(bad)
popf
jle
sub
sbb
inc
sti
outs
dec
mov
xor
mov
xchg
xchg
call
inc
clc
sbb
out
pop
fmul
xor
xchg
cmp
jmp
inc
mov
stos
fsub
and
pop
test
pusha
xchg
les
inc
mov
sahf
scas
xchg
popa
push
int
push
pushf
(bad)
mov
and
dec
bound
retf
cmc
ss
mov
adc
cdq
gs
xchg
push
in
and
cmps
in
or
jne
push
adc
sbb
push
test
in
push
or
shl
xlat
mov
in
and
in
cmc
shr
into
ds
xchg
imul
jo
cwde
ins
bswap
in
das
out
daa
jle
sti
lods
sub
mov
(bad)
jmp
mov
or
stc
pop
jnp
mov
retf
dec
imul
mov
rcl
xlat
adc
cmp
daa
or
in
shl
fcomp
mov
cmp
push
addr16
adc
test
cmps
outs
mov
fidiv
push
mov
dec
jmp
(bad)
in
lods
not
or
fbstp
(bad)
rcr
jp
mov
sbb
daa
push
mov
and
jmp
mov
or
xchg
(bad)
stos
or
adc
fnstcw
lea
je
push
repz
mov
jg
mov
push
or
pop
leave
push
addr16
aam
mov
int3
inc
neg
or
loope
or
mov
cli
or
loop
inc
in
xor
jo
cmc
shr
fisubr
or
in
fadd
dec
inc
or
ret
call
mov
mov
inc
je
clc
mov
daa
add
fsub
mov
xchg
(bad)
jge
sahf
loope
mov
inc
les
test
popf
sub
jno
repnz
in
outs
fs
pop
sub
pop
xor
jmp
mov
inc
cdq
sub
fwait
xchg
push
sbb
dec
lods
cdq
in
or
mov
loop
sub
pop
mov
mov
outs
call
add
les
int
loopne
movs
jle
jno
test
in
cmps
adc
jb
jle
adc
call
jmp
push
and
and
and
nop
test
loopne
inc
jecxz
or
sub
jae
pop
aad
push
pop
imul
(bad)
in
jns
inc
jnp
fld
jne
popf
add
push
add
or
bound
jo
ds
out
or
pop
icebp
jae
fs
ins
sub
jg
loope
adc
stos
test
xchg
push
shr
out
sub
dec
mov
xor
(bad)
arpl
pushf
xor
int3
out
and
sbb
push
xor
int3
push
mov
loope
nop
pop
mov
or
xchg
in
sub
inc
icebp
ret
sbb
lahf
dec
xor
mov
sub
xchg
retf
xchg
cmc
sub
stos
cmc
sbb
aaa
pop
push
ins
jecxz
js
pop
scas
jl
test
dec
dec
push
fadd
adc
adc
xchg
out
test
jmp
xor
inc
loope
daa
inc
retf
gs
or
dec
dec
cmp
push
jns
je
popf
aaa
out
push
add
pushf
ret
ins
div
cmp
(bad)
add
addr16
out
mov
add
mov
mov
mov
aaa
popa
push
adc
mov
sub
jmp
int
aam
mov
test
jg
pop
retf
leave
xor
jbe
call
imul
data16
dec
js
pop
xchg
not
icebp
mov
enter
pop
fcom
scas
lods
ds
pop
add
enter
das
inc
call
add
mov
test
pop
fsubr
adc
sbb
dec
xlat
mov
sbb
nop
cmp
dec
sbb
fcomp
xor
inc
cmp
inc
rcr
mov
inc
bound
jmp
into
in
hlt
or
(bad)
push
sub
pop
pop
ds
xlat
mov
push
jne
push
imul
xchg
push
jo
div
xchg
and
inc
add
or
outs
xchg
mov
sub
scas
jmp
stos
call
call
and
mov
jle
dec
iret
push
(bad)
inc
aaa
es
popf
mov
int3
pop
xor
int3
mov
mov
inc
cmp
outs
mov
loopne
stos
inc
fdivr
inc
not
push
sbb
out
shl
repz
mov
dec
call
cmps
shl
sub
lods
std
xchg
stos
inc
push
mov
mov
imul
push
jg
and
pop
gs
mov
sahf
mov
imul
cmps
and
xchg
scas
hlt
inc
dec
lds
jns
nop
das
ss
inc
pop
pop
je
fndisi(8087
jge
aad
pop
add
pop
xchg
(bad)
xor
adc
test
out
repz
mov
cmp
aad
outs
nop
stc
xchg
add
inc
je
out
je
xor
ja
xlat
xor
jnp
dec
(bad)
cdq
add
cmp
xor
xor
and
inc
mov
cmp
loope
jae
sbb
and
mov
leave
pop
xchg
imul
mov
inc
shl
outs
push
pop
cmps
mov
out
jle
sub
out
loop
stc
jno
sbb
bound
pusha
inc
sahf
(bad)
lock
arpl
outs
and
jl
test
push
pop
pop
cmp
jo
inc
mov
data16
pop
mov
inc
or
aas
xchg
mov
ja
or
addr16
sub
jle
test
mov
xchg
je
repnz
and
aas
mov
pop
cmp
enter
jbe
push
add
pop
(bad)
test
cli
jnp
pushf
jecxz
gs
jae
jl
or
mov
retf
jbe
fstp
int
cs
mov
sub
lock
dec
mov
ret
in
movs
hlt
jmp
sbb
daa
fsubr
jle
out
in
xchg
xor
pusha
jne
push
outs
pop
mov
xor
call
and
pop
xchg
test
xchg
xchg
out
fs
dec
mov
pop
sbb
sub
mov
stos
je
pop
adc
repz
or
in
add
ds
in
dec
jge
repz
xor
push
sahf
pop
mov
pop
outs
mov
mov
cs
and
imul
bound
adc
in
ror
cmp
xchg
mov
jbe
arpl
cdq
rcl
or
add
in
or
fbstp
jl
sbb
in
stos
rcl
loope
jecxz
or
lock
push
xor
pushf
and
inc
aad
popa
fsqrt
stos
and
enter
or
mov
mov
or
test
mov
scas
popa
or
cmp
stc
push
inc
inc
add
imul
and
out
or
or
push
fcom
lahf
inc
lods
inc
addr16
repnz
es
out
xor
test
fist
pop
pop
xor
shr
or
addr16
cmp
inc
std
jl
data16
jnp
dec
add
xor
daa
sub
dec
imul
xor
xchg
pop
pop
dec
fwait
or
call
mov
sub
mov
inc
mov
js
or
adc
sbb
sbb
cwde
and
dec
xchg
xchg
data16
fdiv
fadd
mov
add
fwait
pusha
sahf
lock
mov
cmp
aaa
sti
and
mov
cdq
(bad)
repnz
lods
lea
lock
and
dec
xor
xor
lds
inc
adc
sub
xchg
lods
neg
xlat
dec
mov
sbb
push
out
outs
push
(bad)
pop
das
push
(bad)
popa
lods
in
fdiv
outs
pminub
mov
out
imul
adc
lahf
push
in
mov
inc
add
mov
punpcklwd
in
sub
jmp
addr16
inc
hlt
(bad)
mov
push
das
pop
cmp
jge
shl
lods
add
cld
jmp
lahf
retf
mov
sub
dec
or
dec
call
and
cld
push
sbb
push
emms
push
add
cs
jg
or
adc
mov
imul
jno
adc
pop
imul
icebp
jo
fisub
movs
and
aas
jno
popa
pop
(bad)
lahf
aad
pushf
sbb
mov
inc
fild
push
dec
push
scas
loop
push
cmp
pop
xchg
(bad)
in
fsub
push
mov
retf
call
lods
fnstsw
dec
retf
stos
out
jg
(bad)
push
cli
sub
stc
dec
lahf
push
sbb
ins
test
mov
xor
repnz
jns
jns
inc
rcr
or
xor
lock
int
inc
les
adc
cmps
(bad)
xchg
or
ret
enter
push
add
fsub
xor
mov
push
add
xchg
jbe
sbb
jno
mov
inc
pop
inc
fsub
fadd
xchg
add
inc
ret
out
and
rol
cmp
(bad)
in
push
rcl
pop
xchg
mov
sub
pop
ja
ins
loope
mov
adc
and
es
iret
pop
xor
cmps
shr
xchg
jp
fs
and
mov
lea
stos
jmp
cmc
mov
jmp
lods
cmp
and
sbb
mov
repz
lock
sbb
dec
cmps
rcr
fcmovnu
cld
xchg
jmp
push
call
pop
inc
mov
mov
ficomp
pop
adc
lea
movs
in
mov
sti
inc
retf
xor
pushf
inc
and
cli
jle
mov
fwait
xor
movs
or
(bad)
mov
jae
mov
jl
and
mov
mov
movs
dec
mov
pushf
dec
outs
xor
push
or
(bad)
adc
cli
xchg
in
cs
sub
nop
or
inc
mov
sbb
push
xchg
repz
mov
test
adc
out
call
pop
add
and
or
jmp
cmc
pushf
scas
in
data16
mov
inc
xor
and
jmp
gs
cmc
xchg
int3
sbb
add
cmps
jo
fadd
icebp
xchg
cmp
sub
iret
adc
or
inc
or
and
xchg
sub
mov
daa
or
inc
xor
inc
hlt
scas
lds
sbb
fs
xor
push
in
js
shr
bound
clc
and
icebp
xchg
push
cli
cwde
sub
jns
mov
dec
add
popa
mov
adc
sti
xchg
mov
xchg
cmp
les
(bad)
mov
rcl
mov
mov
and
(bad)
xlat
fdivr
add
sahf
lahf
jge
mov
movs
mov
das
add
pop
cmp
pop
not
(bad)
and
(bad)
scas
xor
cli
retf
jno
mov
jmp
and
outs
pusha
out
dec
pop
pop
push
stc
leave
bound
dec
mov
xchg
ror
nop
call
movs
cwde
mov
shr
jg
mov
push
fldcw
push
mov
and
cmp
loop
stos
add
mov
or
sub
call
call
add
pop
dec
mov
dec
lods
movs
mov
push
nop
adc
out
into
fwait
cld
inc
push
push
loope
and
loop
int3
aaa
sbb
adc
(bad)
std
pop
leave
(bad)
out
test
push
dec
sahf
mov
mov
cmp
call
jno
adc
and
retf
or
jns
cmp
and
jp
bound
jae
dec
adc
adc
(bad)
das
fild
add
xlat
js
(bad)
js
sbb
not
scas
shl
clc
call
jle
sub
data16
xor
pop
fldl2t
mov
popa
cmc
mov
xchg
mov
push
mov
xor
and
xchg
ins
mov
sbb
xor
icebp
sbb
xlat
push
cwde
inc
or
in
lods
add
push
ja
imul
(bad)
ins
xchg
icebp
mov
and
cdq
dec
xor
inc
enter
cmp
nop
lods
outs
mov
xor
mov
dec
je
or
or
sbb
cld
cmp
jmp
sub
push
cld
jge
call
sahf
pop
xor
and
aad
loopne
loope
call
push
pop
in
int
cmp
pop
cmps
or
push
out
pop
jbe
push
sbb
cmp
inc
cmp
xor
test
inc
rol
sti
push
add
sub
mov
jo
inc
sub
mov
fsin
fadd
dec
pop
ja
rol
retf
call
add
push
xchg
jae
ds
out
and
repz
or
aaa
mov
sbb
addr16
pop
call
bound
cmps
int
xchg
cmp
frstpm(287
out
retf
outs
lea
inc
imul
mov
nop
clc
push
(bad)
and
mov
fwait
imul
cmp
sbb
cmp
xor
out
data16
xchg
sub
fisttp
xchg
out
ins
push
data16
(bad)
aad
mov
and
or
movs
push
dec
lock
add
cmps
clc
inc
jbe
lahf
fsubr
xchg
or
sub
mov
pop
(bad)
das
pop
imul
sub
mov
sahf
mov
ss
or
fbstp
jae
mov
int
add
sub
out
mov
(bad)
repz
leave
mov
fimul
in
addr16
adc
add
mov
mov
mov
sbb
out
sbb
sub
pop
fwait
cld
mov
push
xchg
sbb
ja
dec
cmp
fld
xchg
outs
lods
dec
inc
loope
fstp
inc
test
sub
and
jle
dec
movs
jl
fdivr
ficom
add
ror
sub
lods
pop
lods
mov
ret
lea
inc
shl
(bad)
loopne
add
les
int
scas
test
mov
mov
mov
in
dec
xor
cld
dec
mov
addr16
jno
sbb
mov
or
daa
fs
jmp
mov
or
in
sti
retf
pop
mov
arpl
shl
aad
in
sbb
inc
popa
aad
pop
and
icebp
jno
sub
xchg
push
push
xor
push
mov
test
clc
sar
fdivr
mov
sub
pop
jp
idiv
inc
ja
dec
enter
fst
mov
out
pusha
retf
cmp
adc
or
xchg
xchg
mov
std
shl
push
xchg
aaa
xchg
movs
or
dec
retf
sbb
cwde
call
stc
(bad)
rol
push
mov
(bad)
jno
(bad)
jae
xor
shl
jg
mov
push
int
mov
inc
je
push
xor
aas
mov
cld
lods
fwait
jnp
out
retf
(bad)
xchg
not
or
pop
out
in
inc
pop
adc
and
push
jle
scas
ret
shr
xchg
dec
and
(bad)
or
inc
(bad)
(bad)
jl
push
sti
cli
jl
loop
adc
jge
add
jb
mov
inc
and
jecxz
pop
sbb
pop
pop
and
push
xchg
and
pop
pop
ins
cmps
rcr
pusha
xor
ret
and
mov
ret
add
add
jae
mov
int
test
dec
dec
jne
aam
ds
xchg
xchg
cmp
(bad)
mov
leave
test
(bad)
popa
test
scas
pop
icebp
lods
pop
stc
out
out
std
sbb
jmp
mov
sub
inc
mul
mov
jne
xor
and
mov
cmc
(bad)
in
stos
out
aad
or
xchg
int3
into
mov
mov
enter
(bad)
xor
mov
rcl
and
rsqrtps
test
popa
push
je
cli
mov
xchg
stos
pop
clc
inc
ja
retf
mov
std
sbb
pop
inc
in
or
mov
mov
push
sbb
sub
jno
lock
sbb
sahf
(bad)
cdq
daa
xchg
and
inc
fidivr
cmp
aad
outs
pushf
(bad)
ss
push
je
mov
inc
xor
out
xchg
(bad)
in
and
ja
movs
leave
fild
xchg
or
retf
nop
add
ins
popa
jl
jae
rcr
popa
movs
xchg
pop
sub
mov
loopne
cwde
adc
sub
xchg
movs
inc
xlat
arpl
jns
push
jo
ja
or
sbb
inc
mov
aas
movs
test
pop
dec
push
cli
or
aaa
aas
ss
xchg
mov
in
cmp
mov
test
push
sub
xor
aam
test
(bad)
fnstsw
pop
jno
pusha
push
popa
stos
(bad)
xchg
cmp
ins
inc
xchg
(bad)
adc
dec
pop
xchg
sbb
xor
aam
mov
add
xor
mov
inc
out
mov
mov
mov
std
cmp
leave
xor
popf
dec
and
push
mov
sbb
test
rcl
mov
jns
pop
cli
sbb
stos
aad
imul
outs
out
cs
pop
(bad)
sbb
sub
lahf
scas
mov
jo
jl
dec
out
mov
jg
bound
lock
mov
inc
sahf
add
test
ffreep
clc
jl
cmp
jmp
push
inc
fcomp
cmp
sti
adc
mov
jb
fst
out
cmps
(bad)
clc
cmp
mov
sub
lds
push
pop
repz
or
mov
jns
out
test
(bad)
or
fmul
jle
xchg
or
test
dec
jle
xchg
fwait
(bad)
xchg
inc
mov
(bad)
data16
js
jbe
xor
mov
dec
push
jmp
sub
sub
test
clc
and
xchg
cmc
push
out
retf
push
sbb
jnp
fwait
mov
inc
push
clc
dec
in
shl
or
rcr
sub
inc
inc
out
aam
lock
jle
(bad)
jmp
push
dec
mov
sti
jae
mov
js
jg
pop
adc
adc
(bad)
push
movs
data16
fwait
pop
sub
mov
pop
pop
and
jl
out
push
add
mov
adc
xor
into
cmps
xor
int
in
(bad)
add
mov
push
dec
mov
shl
dec
outs
(bad)
pop
enter
(bad)
mov
and
jmp
int3
add
nop
fcomp
aad
ficomp
push
push
xor
push
mov
jmp
jmp
mov
lods
push
cwde
mov
shl
xor
pushf
mov
hlt
add
jmp
(bad)
loop
mov
ret
push
mov
xor
mov
xchg
jb
dec
mov
outs
loope
mov
ins
pushf
(bad)
fs
ret
pop
jo
les
int3
and
das
imul
lods
les
retf
std
mov
mov
and
int3
stos
xor
inc
cmc
adc
aaa
mov
or
ss
sar
xchg
das
fcomp
add
mov
cmp
pop
int
nop
pop
xor
pop
stc
pop
sub
jns
push
adc
mov
push
push
adc
cmp
sub
xchg
sar
jnp
popf
push
jp
add
dec
pop
(bad)
rol
fsub
cmc
mov
(bad)
push
fisttp
xchg
dec
data16
and
jbe
or
cwde
mov
sahf
cmp
gs
pop
xchg
mov
dec
mov
cmp
cmps
cmc
rcl
(bad)
(bad)
xchg
adc
je
dec
dec
hlt
dec
lahf
jno
mov
call
(bad)
not
aam
rcl
dec
(bad)
fldcw
xchg
nop
mov
rcr
xchg
pop
not
and
mov
xor
push
fiadd
dec
loopne
lock
mov
js
std
xchg
mov
xchg
cmpxchg
bswap
mov
mov
dec
or
sbb
test
pop
mov
xchg
leave
mov
mov
mov
inc
mov
cwde
leave
repz
(bad)
adc
xchg
imul
out
stos
mov
mov
mov
sbb
out
lods
(bad)
js
dec
sub
add
into
sub
lods
int
jmp
(bad)
fidivr
mov
(bad)
int3
push
sub
hlt
xor
mov
xchg
push
nop
sub
call
add
jl
or
push
mov
mov
test
pop
popf
sbb
fnstsw
jge
out
jno
popa
repz
or
stos
in
jp
shl
pop
mov
or
push
adc
int
in
or
push
jnp
mov
cmps
jns
jg
cdq
mov
loope
adc
cli
push
daa
(bad)
mov
lock
push
nop
stos
(bad)
enter
dec
pop
mov
fcomip
mov
mov
das
push
cli
sbb
dec
sbb
sub
xor
fiadd
push
sbb
into
loope
(bad)
int3
dec
out
push
test
ror
adc
cwde
add
pop
xor
stos
dec
(bad)
jmp
push
imul
cld
dec
lods
popa
adc
push
in
lods
gs
jp
mov
es
(bad)
into
or
mov
xchg
jo
xor
sub
xor
mov
push
sar
jmp
shl
js
enter
gs
bound
aam
(bad)
push
xor
inc
ja
stos
test
push
das
cmp
rcr
nop
sbb
inc
jge
scas
lea
push
ja
lds
lea
push
and
retf
jne
mov
pusha
(bad)
push
inc
xchg
push
push
sbb
cwde
adc
xchg
popa
outs
mov
inc
push
fcomp
ss
cdq
or
enter
xor
and
mov
xor
das
dec
mov
imul
sub
pop
dec
mov
mov
adc
aaa
cmp
retf
mov
(bad)
sub
fnsave
out
fwait
aad
ret
psrlq
jle
fs
mov
in
std
in
outs
movs
sub
and
pop
rcl
dec
test
sub
xor
and
mov
jmp
scas
or
rol
mov
call
push
clc
push
mov
fist
(bad)
and
lea
pop
or
xchg
dec
xor
(bad)
clc
push
mov
xchg
scas
cld
mov
cs
and
lods
adc
shr
mul
in
or
jl
jno
clc
movs
or
fldcw
pop
or
push
mov
and
mov
fld
callw
(bad)
fstp
or
cmp
cdq
and
cmp
mov
sahf
add
cmc
add
mov
mov
cld
jecxz
inc
xchg
cmps
pushf
fs
repz
and
push
in
aam
fsub
lea
sbb
sub
call
not
pop
fist
adc
(bad)
xor
(bad)
mov
div
mov
push
pop
shr
xchg
adc
add
nop
add
dec
sub
and
sub
xor
and
sub
ret
and
mov
outs
xchg
fmulp
aaa
iret
xor
push
call
test
push
bnd
mov
adc
or
sahf
push
loop
(bad)
and
adc
jl
mov
popa
inc
xor
sbb
or
pop
(bad)
cld
mov
mov
lds
mov
outs
std
cs
jl
scas
mov
push
lock
mov
ficom
or
daa
loopne
add
fisubr
dec
cs
nop
ins
add
dec
in
xchg
ja
test
or
xchg
fs
pop
inc
mov
pop
mov
lock
jmp
in
iret
sbb
ja
int
js
not
push
inc
adc
loope
fdiv
mov
xchg
cmp
repnz
jge
loop
jae
sub
addr16
mov
loop
pop
mov
inc
push
jmp
mov
cmp
cmp
lods
adc
pop
out
lods
aam
cmp
movs
std
fst
adc
cmp
lods
push
xchg
or
mov
xchg
add
mov
xchg
cmps
cmp
mov
sar
mov
test
lods
mov
jo
jns
sub
sbb
bound
hlt
xchg
cmps
aaa
sub
popa
aaa
fstp
pop
mov
bound
push
(bad)
fmul
push
loop
mov
dec
fldlg2
sub
dec
jl
inc
add
xor
mov
jno
push
mov
cli
fmulp
adc
dec
(bad)
pop
repz
jge
cmp
sub
mov
xchg
das
sub
enter
jl
inc
add
sub
in
sbb
fist
(bad)
js
repz
inc
adc
jp
arpl
pop
or
pop
push
xlat
loope
sbb
sbb
xchg
fmul
sub
xchg
pop
arpl
dec
je
jns
pop
add
mov
cmp
leave
dec
jle
lods
sbb
rcr
push
or
jmp
test
ret
rcr
sub
sbb
aas
test
jae
repz
in
pop
ss
push
dec
or
push
sbb
adc
mov
and
mov
pop
(bad)
cld
bound
inc
inc
mov
pop
je
pop
int3
retf
mov
nop
scas
xchg
addr16
xchg
push
xor
and
ficom
fwait
pop
(bad)
repnz
les
mov
inc
jne
into
mov
xor
aad
call
rcr
fld
xor
movs
dec
inc
xor
popf
test
ss
xor
int3
pop
call
scas
pop
imul
jge
mov
adc
or
sti
mov
push
movs
outs
aam
dec
stos
jnp
mov
jecxz
mov
out
ins
out
pop
mov
add
imul
mov
mov
pcmpeqw
pop
int3
pop
sbb
mov
mov
mov
cs
loopne
stos
scas
push
test
fwait
pushf
adc
aas
iret
mov
ja
adc
mov
mov
in
imul
pushf
add
(bad)
dec
int
iret
push
(bad)
inc
dec
sbb
test
jg
arpl
pop
(bad)
repz
repnz
cdq
mov
xchg
pusha
mov
test
add
jo
pop
add
out
cmp
ins
or
ficom
adc
rep
cmova
leave
add
cmps
in
int
inc
ret
xchg
jmp
popf
dec
or
call
adc
daa
outs
(bad)
pop
sbb
in
dec
push
and
(bad)
pop
pop
cmp
leave
or
or
cwde
rcl
mov
xchg
cld
out
sbb
jmp
and
pusha
mov
inc
cmp
adc
lods
aas
outs
inc
and
sti
cmps
mov
xor
movs
xchg
or
jmp
cs
jnp
mov
xor
xchg
mov
sbb
adc
xor
ins
aad
jge
jne
add
fadd
stc
push
fwait
or
outs
cmp
pop
ins
mov
into
jle
sub
jp
inc
dec
mov
mov
lods
inc
scas
ja
sbb
ja
xchg
imul
push
mov
sub
aam
sub
call
xchg
xor
inc
adc
push
pop
ja
jmp
in
call
(bad)
jns
stos
pop
mov
add
pop
add
cli
mov
and
mov
iret
cmps
not
or
arpl
push
pop
add
stos
les
leave
and
inc
dec
jae
mov
lea
adc
cmp
dec
(bad)
nop
pop
dec
inc
dec
jo
mov
into
xor
pop
inc
(bad)
pop
aaa
cmc
adc
sti
pusha
dec
adc
or
(bad)
cdq
into
push
retf
adc
or
xchg
cld
dec
lahf
add
push
bswap
inc
sbb
push
cmps
jb
adc
stos
cdq
das
dec
cmp
and
imul
sbb
repnz
xchg
add
mov
fnstcw
fcomp
call
jb
pusha
mov
call
out
or
or
(bad)
shl
xor
adc
sub
mov
(bad)
ins
sbb
int
dec
ja
sbb
and
call
clc
mov
data16
mov
sub
inc
js
in
xchg
mov
aaa
out
sbb
mov
xchg
mov
push
out
jmp
ins
fsubr
fwait
ror
out
add
cmp
out
lock
push
mov
sub
or
xor
add
pop
test
je
mov
xor
xor
push
push
xchg
add
(bad)
jo
fwait
cmp
ss
push
test
mov
jae
fsubr
iret
sbb
jbe
lea
jle
out
pop
sbb
xchg
sub
inc
sub
cmp
mov
ret
xchg
mov
mov
ret
shr
sub
or
jg
imul
out
clc
pop
lea
push
stos
pushf
loop
mov
test
adc
cmp
inc
movs
pop
(bad)
push
jg
jno
inc
out
and
ins
and
xchg
in
test
mov
mov
mul
ja
xchg
hlt
pushf
test
rcl
mov
mov
out
js
push
ficom
js
adc
sub
(bad)
shr
inc
stos
adc
jp
sbb
call
shl
aaa
js
scas
add
loope
sbb
movs
and
sub
or
dec
xlat
call
scas
out
jecxz
dec
les
push
(bad)
cmp
dec
fcomip
jns
or
sbb
mov
mov
sbb
and
aam
(bad)
(bad)
sub
(bad)
stos
sbb
cmp
inc
push
jecxz
mov
sbb
or
out
addr16
fcomp
jl
dec
sub
rcr
or
mov
fcomp
scas
jge
movs
inc
cmp
sub
daa
jno
adc
mov
add
cmp
add
push
and
or
xor
lods
and
sti
test
jns
push
cmp
popa
rcr
and
(bad)
(bad)
call
and
sub
add
sar
arpl
stc
cdq
ficomp
mov
push
call
or
call
shr
pop
(bad)
cmp
into
shl
(bad)
retf
push
sbb
inc
in
add
add
sub
jge
push
fst
out
repz
dec
out
xchg
dec
rcr
sub
push
xor
cs
push
push
or
adc
jb
sbb
and
ret
jns
shl
retf
cmp
stos
cmps
repnz
sub
retf
mov
sub
ss
cmp
push
(bad)
das
adc
pop
xlat
cwde
xor
pop
pop
sub
mov
sbb
xor
(bad)
dec
fistp
mov
test
push
xchg
scas
jecxz
cmps
daa
call
arpl
xchg
mov
test
inc
mov
sbb
arpl
pop
mov
sub
dec
and
push
cld
add
xlat
and
(bad)
div
int
mov
ffree
dec
cmp
lods
sub
mov
sbb
(bad)
sub
pop
(bad)
cmp
das
pop
lea
cmp
int3
add
inc
sar
loop
or
adc
mov
mov
xor
jle
out
push
fsub
cmps
outs
pop
out
cmp
sub
xchg
test
push
cmp
daa
into
leave
jo
je
ins
icebp
jbe
test
dec
out
es
call
std
pop
mov
xor
dec
ins
mov
mov
scas
nop
cmp
jne
sub
div
out
test
xchg
sbb
or
inc
aaa
ins
imul
pop
dec
cs
stos
jnp
stos
and
add
and
mov
pusha
aas
jp
pop
cmp
leave
sahf
sbb
sbb
pop
fld
add
stos
fist
sbb
push
xor
or
add
pop
sbb
retf
mov
mov
mov
xchg
(bad)
mov
lock
mov
xlat
dec
fsubr
std
jmp
sbb
mov
push
imul
in
loop
lahf
sub
pop
nop
test
mov
test
jmp
and
jne
cwde
jbe
ins
adc
xor
jns
pop
jns
pop
addr16
mov
jno
lock
and
(bad)
push
or
sbb
pop
xchg
xchg
call
rol
inc
mov
ret
cmp
xchg
or
adc
push
hlt
retf
xor
push
jp
es
ss
xor
fsubrp
mov
and
adc
push
ss
call
cmps
and
inc
fwait
mov
dec
add
sti
inc
mov
retf
scas
(bad)
lahf
cmc
sub
mov
sbb
mov
or
movs
dec
ds
and
int
adc
adc
push
xlat
adc
es
out
shr
pushf
add
cld
and
out
cdq
rcl
sbb
and
dec
pop
enter
ins
add
hlt
fisub
mov
lods
cmc
add
fs
fwait
cmp
fstp
(bad)
mov
fisubr
ins
pop
add
jne
mov
push
jne
es
and
xor
xor
in
in
jb
mov
add
fisttp
(bad)
imul
stc
ja
dec
(bad)
jg
push
enter
adc
scas
jae
ja
js
mov
outs
sub
fnstcw
inc
cmp
pushf
stc
push
(bad)
daa
push
fcom
es
mov
xor
and
aaa
push
movs
fcmovne
jmp
or
jge
(bad)
push
add
fild
test
inc
jmp
pop
pusha
pop
popa
adc
pop
inc
ret
push
cmp
add
shr
lock
js
in
dec
xor
arpl
test
xor
es
ss
dec
sub
jo
fs
pusha
cdq
aas
movs
jecxz
push
pushf
cmp
push
or
iret
cld
xchg
cmp
lds
pop
pop
cdq
adc
out
test
xor
call
aam
add
cmp
inc
loopne
mov
popa
leave
mov
push
adc
lods
pop
xor
clc
pop
push
inc
outs
test
fs
into
pushf
xor
or
sbb
pop
lds
dec
(bad)
out
pop
aas
pop
mov
fbstp
dec
push
aaa
xchg
rcr
jp
mov
mov
in
or
dec
mov
lods
dec
push
pop
lds
push
push
sbb
add
ins
xor
sbb
scas
sub
aam
adc
and
daa
stos
cmps
lds
jmp
cli
mov
fidivr
les
and
add
xchg
addr16
jb
pop
push
pop
jge
mov
mov
pop
shr
fcomp
jle
cmp
dec
push
sbb
adc
jne
shl
sbb
pop
fiadd
in
mov
push
or
test
inc
ss
pop
pusha
or
xor
mov
push
pop
or
inc
sbb
aam
movs
call
dec
ds
mul
pop
inc
jae
add
mov
sbb
inc
mov
or
and
or
add
fiadd
gs
sub
sub
rcr
fnsetpm(287
and
lods
rol
sbb
retf
js
popa
adc
shr
rcr
adc
xchg
aam
or
xor
fs
imul
adc
push
jns
sahf
sub
cmp
call
neg
sahf
ficomp
sub
xchg
lods
xor
std
xchg
sbb
out
iret
push
cmps
adc
pop
mov
push
retf
fldcw
mov
cmp
push
jae
test
xchg
les
jg
call
xor
mov
pop
mov
mov
jnp
push
mov
jbe
in
mov
mov
cmp
loope
cwde
xchg
add
or
lods
(bad)
je
cmp
in
aam
sbb
xlat
imul
clc
ret
jnp
or
dec
addr16
mov
test
int3
sub
mov
fs
and
push
ror
addr16
lea
(bad)
sub
je
sbb
xchg
ins
fiadd
jae
test
mov
push
mul
cmp
and
inc
jmp
fcomip
sbb
sahf
lods
mov
pop
add
push
jp
fcomp
mov
jne
push
fst
cmp
mov
movs
scas
add
adc
enter
scas
mov
int
ror
(bad)
loopne
dec
jns
mov
das
mov
or
inc
shl
(bad)
lock
dec
mov
(bad)
pop
jnp
pop
pop
rcr
mov
test
movs
lock
je
ja
mov
inc
push
das
shl
lods
mov
fadd
je
sbb
dec
jbe
test
and
scas
pop
test
loopne
in
lahf
fucomip
pop
imul
mov
outs
push
xchg
call
pop
jmp
inc
pop
data16
mov
mov
cmps
or
jne
mov
pop
jl
hlt
push
lds
daa
sbb
scas
add
popf
xlat
and
dec
push
mov
xchg
adc
xchg
mov
inc
xor
sub
js
xor
repz
mov
fld
out
ja
imul
sbb
add
sbb
gs
(bad)
mov
ins
in
cmps
sub
fcomp
cmp
sbb
or
fadd
xor
fs
sahf
jbe
les
jno
mov
jecxz
mov
xchg
dec
mov
mov
jae
mov
aam
test
xchg
mov
and
push
adc
cmp
sbb
pop
add
mov
imul
stc
inc
jbe
push
sar
push
pusha
jp
mov
inc
cmp
mov
(bad)
lock
jle
push
xor
add
in
movs
fisttp
fnsave
mov
xchg
xor
fisub
stos
inc
dec
jge
aas
jl
pop
add
jb
lea
lods
mov
fs
sub
dec
push
push
xchg
mov
push
cmps
sub
scas
mov
and
mov
stos
push
push
nop
sub
daa
enter
cdq
scas
push
sub
push
mov
sbb
mov
into
(bad)
in
cwde
int3
rcr
pop
hlt
stc
lods
scas
jno
inc
jle
imul
rcl
sub
push
cmp
xchg
push
loop
sbb
rol
cmp
pusha
jns
in
ror
push
(bad)
push
xor
and
dec
or
cmc
and
test
mov
xchg
xor
stos
addr16
lea
test
cmp
outs
cmp
dec
ins
pop
inc
mov
pop
aad
int3
ror
add
(bad)
push
pusha
out
out
mov
(bad)
adc
mov
(bad)
arpl
in
stc
add
into
pusha
mov
in
dec
in
mov
sub
fst
iret
add
scas
mov
cdq
jmp
inc
jmp
xchg
hlt
test
pop
push
mov
ret
ins
or
mov
hlt
pop
mov
icebp
inc
xor
xlat
dec
cwde
(bad)
popf
mov
addr16
adc
out
aad
or
mov
xlat
test
xchg
sub
imul
push
scas
cmps
pop
outs
pop
mov
cs
in
arpl
cmp
jp
in
clc
daa
xchg
mov
mov
dec
add
inc
mov
jle
iret
(bad)
mov
ins
(bad)
dec
cmps
ror
dec
push
ret
dec
xor
jp
jns
xchg
not
xlat
xchg
mov
scas
pop
(bad)
or
mov
mov
call
mov
arpl
mov
loop
cld
icebp
xchg
addr16
sbb
pushf
fiadd
and
jmp
xchg
out
hlt
(bad)
pop
jbe
lods
pop
sbb
arpl
pop
ud1
movs
test
adc
(bad)
out
fisubr
dec
(bad)
pop
xor
pop
ins
add
pushf
pop
push
sar
nop
(bad)
shl
push
(bad)
js
pushf
cmps
mov
xor
sub
jns
xor
sub
adc
in
fsub
lea
or
daa
inc
in
dec
fs
fwait
xchg
or
and
lods
adc
cmp
mov
test
std
jecxz
push
sahf
test
aaa
mov
dec
(bad)
jge
je
pmulhuw
ret
adc
adc
jmp
mov
jne
cmp
xor
push
sub
sar
jae
pop
fst
adc
data16
or
lea
sbb
add
mov
pop
jnp
(bad)
outs
inc
add
enter
push
cs
loop
call
movs
jnp
cld
sbb
nop
es
jmp
jg
movs
mov
push
ret
inc
mov
mov
and
jb
and
cli
jle
clc
std
arpl
sbb
jmp
jg
inc
jmp
cmp
repnz
ins
mov
fs
outs
jmp
push
nop
mov
sti
push
test
sub
mov
fsubp
outs
xor
mov
lahf
jg
mov
or
sub
jno
mov
test
push
mov
sub
add
cs
push
and
imul
sahf
daa
daa
inc
sahf
fmul
add
xchg
hlt
loop
inc
add
out
(bad)
fidiv
push
sbb
popf
repz
pusha
ret
jb
mov
into
mov
add
push
xchg
sbb
outs
mov
or
cmp
pop
cmp
xchg
mov
ja
push
adc
out
and
lds
cmp
rcr
(bad)
cli
add
data16
xor
dec
xchg
inc
lods
out
sub
jle
inc
iret
xlat
repz
mov
cmp
sub
call
mov
pop
and
ror
adc
mov
pushf
sub
fwait
pop
mov
in
ret
popf
push
cmovno
add
xchg
leave
ss
push
pop
call
retf
ins
lock
scas
jno
jbe
lds
inc
inc
inc
mov
add
xor
fsubp
dec
push
mov
and
pop
dec
aas
popf
out
ret
cs
in
dec
(bad)
mov
(bad)
sbb
jp
push
cmp
or
bound
pop
xchg
sbb
rol
in
sbb
inc
inc
sbb
xchg
adc
dec
pop
cmovs
loop
jge
push
aas
mov
lock
dec
mov
arpl
or
cdq
sub
mov
push
cwde
hlt
shr
mov
dec
int
in
and
add
shl
test
loopne
cli
or
mov
xchg
fs
inc
sbb
stc
sahf
and
jmp
imul
mov
movs
aad
dec
repnz
jecxz
shl
lea
aas
mov
or
inc
aam
xor
or
or
in
sub
pop
(bad)
push
cli
addr16
into
aaa
xchg
gs
push
pop
dec
das
stc
pop
add
sbb
cmps
xchg
bound
bswap
xor
cdq
sub
and
sub
ret
mov
push
jo
cs
jne
mov
xchg
pop
xchg
ins
mov
jecxz
fwait
cmps
inc
test
sbb
scas
dec
sub
mov
push
cs
xchg
mov
in
nop
jp
inc
mov
push
out
nop
das
xchg
pushf
mov
fcom
loopne
lock
fwait
sahf
xchg
adc
and
cs
loopne
dec
xor
or
enter
out
cmp
ins
lahf
aas
retf
nop
shr
mov
inc
ss
inc
mov
mov
pusha
movs
sub
out
rcr
loop
test
add
mov
add
fadd
dec
mov
dec
jl
pop
test
ss
outs
sbb
sbb
pop
mov
pop
lock
(bad)
cwde
loope
mov
xchg
outs
iret
ficomp
cmp
jae
push
dec
gs
enter
pop
pop
in
inc
stos
ficomp
test
push
adc
xchg
leave
out
mov
mov
scas
loopne
jae
out
repz
mov
stos
pop
pop
xlat
aam
jl
fwait
sar
nop
push
fdiv
jmp
in
ins
push
fadd
fdivr
cwde
adc
push
or
and
dec
push
adc
arpl
pop
jnp
(bad)
xor
call
in
inc
pop
loopne
xlat
sub
leave
cmp
jp
addr16
imul
sub
repnz
jns
test
sar
push
div
mov
(bad)
sahf
adc
mov
and
push
jbe
push
sbb
std
loop
and
fbld
inc
dec
mov
xchg
push
mov
mov
aaa
jb
sbb
(bad)
mov
mov
cmp
fsubr
retf
cld
xor
sbb
retf
mov
popa
loopne
fdiv
popf
iret
inc
lods
mov
mov
jp
sbb
and
stc
mov
mov
sbb
lds
ss
enter
or
jo
mov
xchg
stos
je
xchg
adc
push
test
or
jmp
pushf
jecxz
jge
or
pop
jle
stos
and
repz
mov
dec
test
jno
add
adc
popf
gs
in
repz
push
aas
retf
lods
mov
shl
ds
xchg
jmp
mov
pop
sbb
movs
inc
fs
cmps
mov
ret
add
push
mov
ds
lods
test
xchg
shr
jbe
nop
jecxz
repz
lods
imul
sahf
jb
sub
xchg
sbb
js
bound
mov
xor
les
ins
push
stos
or
popf
aam
idiv
lods
(bad)
aam
fmul
lds
rcl
outs
jmp
mov
int
test
pushw
ret
cld
xchg
lahf
sti
nop
jbe
jge
inc
push
push
sub
pop
jl
adc
push
setns
jle
and
(bad)
sub
in
push
retf
mov
pop
test
adc
(bad)
xchg
scas
and
cmp
mov
mov
jb
adc
jl
push
div
ficomp
xchg
mov
icebp
sbb
rol
and
mov
mov
ins
cli
sbb
jecxz
cmp
and
rol
inc
lea
xor
push
jp
jge
loope
dec
dec
shr
adc
add
sbb
xchg
jbe
and
xchg
arpl
ror
int
ds
xchg
(bad)
addr16
daa
xor
cli
jbe
dec
jns
ficom
jo
push
ds
and
bnd
or
sbb
fistp
inc
pop
mov
push
add
sub
xor
inc
or
xor
mov
dec
pushf
leave
sbb
xchg
mov
mov
mov
pop
pop
xchg
push
adc
call
sbb
ds
lock
std
in
loope
sbb
dec
sub
xchg
cmc
dec
enter
out
fdiv
adc
jg
jecxz
sbb
ja
shl
cmp
push
ror
stos
pop
add
cmp
jge
mov
adc
mov
rcr
adc
fild
xchg
addr16
mov
add
stos
inc
rcl
xchg
mov
je
sbb
not
push
or
dec
loopne
or
div
jmp
xchg
sahf
push
icebp
jp
(bad)
or
(bad)
and
sub
push
inc
fnsave
or
test
pop
jb
inc
jno
push
adc
aad
xchg
repz
sti
dec
or
add
xchg
inc
int3
pop
(bad)
push
xor
dec
inc
xlat
ret
or
inc
in
cwde
cli
inc
cdq
lds
mov
dec
out
cdq
mov
pop
pop
sub
sbb
mov
jnp
neg
jns
xor
sub
aam
add
pop
in
cld
pop
stos
and
pop
leave
jnp
into
fild
cmp
push
adc
mov
cmp
ret
mov
jae
inc
in
es
ja
push
js
mov
jmp
add
sbb
xor
dec
mov
mov
jmp
es
stc
jecxz
mov
test
cdq
dec
sbb
out
(bad)
cdq
ss
adc
pop
call
push
shl
adc
std
popa
pop
daa
adc
call
call
add
jnp
mov
stc
icebp
(bad)
and
aam
out
dec
cmp
scas
int
sbb
sar
int3
jmp
icebp
ficomp
shr
movs
bound
xchg
adc
sub
scas
cs
adc
shl
adc
or
xor
cmps
push
inc
ja
dec
into
cmp
ins
inc
xchg
call
ins
jl
ja
aas
test
add
adc
inc
sbb
adc
je
cmp
(bad)
jmp
push
pop
and
xchg
sub
mov
xchg
xchg
push
out
push
mov
sbb
cmp
int
and
pop
push
push
add
addr16
cmp
sbb
fwait
shr
shr
xor
gs
or
repnz
jb
push
cld
stos
not
mov
pop
add
jb
push
push
in
mov
adc
sbb
cdq
inc
shl
xor
(bad)
iret
mov
mov
imul
pop
xor
jnp
(bad)
js
and
cmp
push
inc
xlat
inc
fwait
add
inc
push
jne
adc
fs
jne
mov
(bad)
fwait
jbe
(bad)
fs
jmp
and
call
xor
mov
inc
and
xor
outs
jmp
mov
sub
sbb
not
pop
sub
idiv
xchg
iret
ret
mov
inc
and
and
push
hlt
xchg
adc
adc
stos
mov
pusha
push
push
bound
mov
xchg
jnp
cs
push
movd
jg
xchg
lock
push
mov
xchg
jb
lea
mov
fidiv
xchg
movs
push
inc
scas
add
sub
pop
fnstenv
jbe
aad
adc
push
push
inc
(bad)
shl
(bad)
sub
mov
push
mov
sbb
es
jno
xor
xlat
int
stos
mov
and
ss
xchg
repnz
imul
xor
pop
and
pop
ror
dec
mov
in
jo
xchg
xor
xchg
fdiv
ss
mov
cmp
imul
push
xchg
movs
dec
cmc
cmp
mov
mov
or
out
xor
or
mov
out
js
mov
jbe
jb
data16
pop
jb
mov
sbb
and
inc
in
jbe
push
ins
mov
test
jge
fwait
aad
jo
out
fcomp
xor
call
mov
mov
std
movs
ror
adc
and
sub
ret
out
and
fwait
leave
sbb
and
push
adc
loope
jl
call
test
popf
or
mov
sahf
xlat
jg
clc
mov
jge
pop
jle
or
cmp
dec
lods
mov
mov
mov
pop
imul
(bad)
cmc
push
popa
fld
mov
fldcw
sbb
icebp
lds
ret
push
icebp
ret
mov
out
cmp
loope
aas
fadd
popa
sub
fcmovbe
dec
push
mov
xor
cmp
push
pop
daa
stc
lods
cmp
aam
rol
push
cmp
adc
sar
sub
push
ja
pop
dec
lods
xchg
inc
iret
cmc
sbb
lds
mov
stos
outs
push
and
adc
fdivr
dec
mov
retf
les
shl
mov
mov
ret
sub
neg
inc
xor
test
cwde
jbe
adc
fisub
aas
das
mov
or
mov
lods
add
retf
sub
mov
mov
lods
push
push
sub
arpl
dec
or
das
or
fnstsw
cmp
mov
test
aam
jnp
out
aam
push
mul
out
sbb
bnd
aaa
imul
scas
hlt
mov
enter
mov
or
jno
cs
sar
xchg
adc
lea
dec
stos
test
add
gs
icebp
push
xchg
adc
push
pop
scas
enter
xchg
sbb
cli
(bad)
and
inc
push
ja
xor
inc
mov
mov
sbb
fimul
xor
leave
sub
out
test
dec
aad
pop
js
sub
rcr
mov
jo
sti
sbb
ss
inc
adc
push
idiv
push
xchg
dec
movs
ret
mov
and
(bad)
mov
mov
pop
adc
iret
into
pop
push
loop
xchg
in
fadd
shl
in
or
fs
mov
mov
jl
push
icebp
inc
ss
jp
cmp
ret
nop
pusha
push
inc
leave
mov
xchg
jae
in
or
test
(bad)
sub
inc
loopne
xor
cdq
stos
mov
popf
xchg
mov
(bad)
sti
or
and
dec
sar
fnsave
inc
sub
hlt
aas
retf
addr16
int3
shl
adc
shr
fadd
cmp
mov
ds
dec
add
pop
sub
lock
scas
mov
je
jns
cmp
sub
dec
aad
adc
mov
sbb
dec
ret
ins
or
aam
push
add
dec
xchg
xor
pushf
xchg
popa
jmp
push
push
outs
outs
mov
shr
jno
jnp
fwait
mov
les
adc
rcr
pop
aad
lahf
scas
popf
mov
add
dec
jbe
pop
jns
pusha
movs
mov
out
(bad)
sbb
dec
dec
jo
ss
adc
mov
fdivr
es
aas
mov
xchg
inc
stos
mov
mov
jl
and
(bad)
and
or
pop
iret
stos
mov
fmul
cli
getsec
enter
jne
cli
mov
pop
mov
(bad)
and
jp
fst
mov
outs
lock
(bad)
imul
or
push
mov
pop
clc
and
jne
dec
lods
pop
adc
retf
sbb
sahf
jmp
int3
cmps
mov
(bad)
fcomp
imul
push
inc
or
cli
mov
js
iret
ffreep
aaa
sbb
les
pop
inc
and
push
fadd
ja
jbe
lods
mov
jnp
es
pop
mov
mov
(bad)
outs
adc
jne
jecxz
fs
mov
pop
adc
aad
aaa
and
mov
not
scas
xchg
cdq
es
push
pop
lods
add
or
sbb
int
ds
out
iret
les
add
add
fsub
mov
leave
xlat
mov
mov
andnps
sub
sbb
jg
jge
inc
loop
(bad)
mov
ja
in
sub
ret
mov
popf
cmps
aad
dec
xlat
lea
scas
pop
add
addr16
mov
nop
mov
push
xor
bound
fwait
or
pop
xor
jbe
in
leave
lea
stos
push
push
mov
scas
xchg
stos
mov
arpl
movs
xor
dec
pop
dec
stos
fcom
cmps
adc
cmp
mov
adc
mov
dec
movntps
xor
xor
xlat
xchg
mov
sbb
int
dec
xor
mov
mov
outs
sub
daa
(bad)
(bad)
jno
loope
xchg
imul
mov
fcomp
pop
sbb
push
mov
pop
mov
scas
(bad)
ret
ror
adc
ret
js
mov
cmp
add
add
push
xor
xlat
test
jb
retf
push
jno
retf
jno
jne
pop
mov
jle
xor
test
xlat
lods
fisub
lock
xor
mov
xor
fdivr
jp
retf
pop
add
push
test
xchg
pop
jae
jne
enter
rep
add
faddp
mov
ins
mov
push
jp
and
or
std
nop
mov
xor
(bad)
add
stos
dec
and
lods
dec
xchg
pop
mov
mov
or
cmp
or
test
scas
les
gs
mov
sbb
jge
sbb
fidiv
dec
cwde
xlat
mov
je
es
lods
jno
hlt
jmp
xor
mov
mov
mov
pop
mov
stc
loop
lds
fs
cmp
movs
loope
jmp
and
inc
jno
(bad)
pop
pop
pushf
cmp
aam
lds
sbb
push
push
mov
and
(bad)
hlt
sub
data16
movs
inc
xchg
mov
inc
shl
int
ins
xchg
js
mov
mov
pop
sub
push
ret
mov
stc
arpl
mov
test
int3
inc
add
push
scas
add
mov
jecxz
out
pop
push
(bad)
popf
sbb
mov
out
mov
push
in
movs
push
popf
and
mov
inc
(bad)
fucomip
fsubr
xchg
gs
or
add
mov
(bad)
dec
push
or
add
adc
test
dec
and
xor
or
adc
cld
rcr
rcl
test
xchg
outs
push
sbb
in
(bad)
mov
dec
pop
ret
fsubr
in
ror
and
mov
je
push
imul
imul
cmp
loop
xchg
stos
push
xor
mov
push
rcr
pop
mov
add
call
sub
ret
les
xchg
loope
sub
xor
sub
push
clc
aad
(bad)
fadd
cmp
or
fistp
(bad)
adc
cmp
ins
and
cmp
lds
add
sbb
cdq
comiss
mov
rcr
xchg
sbb
in
jge
ficomp
cdq
sub
cmp
jp
scas
add
inc
pop
nop
or
push
sbb
loope
cmps
add
in
xchg
mov
sbb
fwait
mov
daa
add
enter
fnstenv
(bad)
jne
mov
xchg
fs
push
call
test
lds
ss
out
mov
not
push
xchg
rcr
jns
(bad)
dec
pop
mov
in
in
xchg
gs
(bad)
dec
inc
xchg
pop
inc
push
push
hlt
mov
outs
mov
inc
xchg
int3
sbb
mov
push
ss
add
test
sbb
dec
cs
sbb
scas
fdiv
stos
pop
pop
push
push
mov
cmp
pop
sbb
fwait
sbb
jg
retf
rcl
repnz
mov
outs
ins
test
out
sub
dec
jl
push
outs
sub
sub
fdiv
rcl
fstp
daa
jns
es
(bad)
xchg
adc
imul
and
lods
mov
dec
pop
mov
jge
mov
mov
push
iret
cmp
pop
cdq
xor
(bad)
sub
hlt
shl
jl
std
sbb
dec
shr
inc
sbb
adc
pop
fadd
or
mov
fimul
xlat
mov
jge
lods
retf
sar
mov
pop
mov
fld
ins
std
ror
adc
jmp
repz
sbb
jbe
adc
mov
ror
mov
or
mov
inc
ror
aaa
mov
nop
imul
and
and
pop
pusha
ret
push
mov
add
outs
adc
jne
test
mov
scas
mov
pop
icebp
rol
clc
mov
add
xor
cmp
jne
mov
test
or
int3
jne
jne
inc
dec
leave
adc
jecxz
mov
inc
hlt
leave
fiadd
out
stc
push
adc
fcomp
pop
fs
mov
add
jmp
mov
loope
sub
xor
int3
lea
add
fild
jnp
into
push
push
sbb
out
stos
cdq
xchg
sub
aas
mov
add
and
or
pop
inc
ficom
mov
test
mov
push
fimul
fisubr
adc
ret
xchg
fistp
dec
(bad)
adc
fs
movs
cmp
mov
push
fcmovnb
fdivp
in
cmc
push
pusha
mov
jmp
mov
hlt
int3
loop
xor
lahf
push
in
lods
ss
push
dec
cli
pop
sub
dec
test
fldenv
mov
sub
inc
shl
mov
out
push
dec
scas
xor
add
call
lahf
aam
add
add
enter
dec
movs
sahf
mov
or
or
cwde
adc
inc
daa
inc
cmps
pop
push
xchg
and
mov
cmp
and
iret
in
mov
xlat
push
aaa
stos
popa
aam
aam
jge
out
cld
fimul
sbb
push
cmp
das
mov
xchg
(bad)
mov
mov
imul
inc
or
aam
call
in
cmp
pushf
mov
repz
mov
lock
pop
dec
and
and
inc
xor
jo
adc
push
jno
mov
push
adc
cmps
pop
pusha
push
loope
dec
stos
shl
mov
adc
ffree
hlt
addr16
adc
inc
stos
push
sub
adc
lock
push
jae
push
xor
pop
cmp
clc
add
push
movs
scas
jmp
and
in
pop
push
(bad)
jbe
int3
xchg
mov
and
xor
into
ret
add
sti
scas
aas
cmp
fidiv
mov
lds
or
sbb
lock
ins
lahf
mov
je
mov
push
add
stc
or
sbb
xor
xor
cli
ret
and
and
xor
jae
or
inc
push
mov
push
add
outs
mov
cmp
add
or
cmp
xchg
inc
(bad)
pop
push
mov
jecxz
stos
mov
js
push
cmp
bound
mov
xor
aam
cwde
mov
fmul
test
cs
pop
nop
push
jno
mov
dec
sbb
popa
push
jp
dec
out
sbb
shl
les
nop
dec
push
movs
ins
pop
and
sbb
pop
aas
cmp
sbb
inc
jno
jnp
cmc
inc
inc
mov
test
xchg
jo
retf
cs
sub
aad
push
cmp
cdq
imul
xchg
sti
pop
mov
sbb
mov
daa
adc
mov
push
jmp
add
iret
or
loopne
push
inc
xchg
push
and
ds
cli
and
into
sti
stc
fdivr
jle
test
add
data16
(bad)
mov
xchg
dec
add
sub
cmp
cmp
or
mov
pop
cmp
fstp
in
mov
cmp
(bad)
clc
mov
frstor
pop
cmps
cmp
js
cmp
sub
xor
mov
xchg
jmp
or
xchg
xchg
mov
sbb
in
jbe
fdivr
cmp
leave
xor
push
mov
sbb
popa
cli
call
inc
xor
cmp
xchg
jno
out
mov
loop
cmp
mov
xchg
xchg
pop
arpl
mov
pusha
add
outs
push
dec
call
sub
bound
pusha
(bad)
cdq
push
push
mov
ror
xor
inc
repnz
je
mov
clc
scas
sub
jnp
dec
jg
xlat
mov
jmp
push
cdq
dec
shl
test
and
jb
nop
outs
push
sub
enter
pop
push
inc
mul
in
add
dec
mov
dec
stc
retf
cli
int
and
pop
pop
mov
pop
pop
in
sbb
out
add
jl
shr
dec
dec
push
inc
xchg
in
not
dec
in
inc
sahf
(bad)
cmp
cwde
inc
sahf
into
ins
cmc
mov
dec
clc
dec
fcomp
fwait
and
out
ja
jbe
mov
outs
inc
jbe
jl
aaa
nop
div
mov
xchg
xchg
jge
dec
call
add
mov
mov
dec
xchg
je
mov
mov
push
push
paddusw
xor
scas
inc
jbe
mov
sub
xchg
dec
jbe
add
test
outs
ja
add
sub
in
or
fst
mov
dec
sbb
push
push
mov
cmp
mov
push
ja
jmp
inc
(bad)
and
cmps
lahf
and
loop
xchg
cli
mov
movs
mov
nop
ss
jg
push
sbb
cwde
jl
sub
fnsave
push
shl
xchg
xor
jo
icebp
mov
and
xchg
push
cmc
cmc
sbb
lods
add
adc
mov
and
mov
sbb
xor
fisttp
dec
cdq
std
mov
lahf
add
repnz
mov
mov
pop
retf
add
jg
outs
(bad)
pop
daa
jne
or
imul
daa
push
xchg
cmp
dec
mov
cmp
(bad)
cmps
out
call
ins
enter
jne
mov
inc
mov
adc
cmps
repz
jmp
sbb
js
in
(bad)
out
repnz
fisttp
in
data16
push
data16
retf
(bad)
pop
fcmovnbe
sar
pusha
fisttp
(bad)
dec
not
mov
jbe
arpl
mov
aaa
out
cmc
out
icebp
sbb
mov
mov
jno
adc
add
fld
or
cmp
fwait
addr16
repnz
ins
and
add
repnz
xor
aad
inc
push
(bad)
xchg
jle
outs
outs
sub
jp
dec
cld
inc
(bad)
imul
bound
xor
add
sbb
nop
xor
mov
push
call
gs
in
mov
pop
lahf
jecxz
pop
and
leave
adc
pop
jnp
loopne
cwde
cmp
fwait
jmp
sahf
add
div
mov
loopne
xchg
ror
inc
repnz
or
in
stos
jnp
test
or
jnp
pushf
pop
mov
push
cmps
sub
sbb
jno
seto
push
mov
std
hlt
aas
or
and
mov
mov
sub
mov
xor
cmp
inc
cwde
stos
stc
daa
or
xor
loope
(bad)
(bad)
icebp
rcr
push
fcom
test
sub
aaa
aas
test
hlt
fwait
lahf
out
sub
push
pop
jle
cmp
test
xchg
mov
std
and
mov
bound
fcomi
dec
gs
fld
jmp
movs
loope
je
call
jb
push
jnp
mov
jge
aad
add
int
add
and
(bad)
int3
ins
mov
sbb
inc
or
lods
mov
(bad)
lea
push
push
sub
push
xchg
sahf
out
or
jge
jno
inc
daa
int
jp
inc
cli
jo
or
inc
jl
cmp
pop
or
mov
and
pop
xchg
jmp
ret
cmps
push
aaa
push
cwde
shl
mov
mov
cli
cmp
imul
jle
mov
and
rol
idiv
out
in
mov
mov
or
sbb
sar
jl
jbe
jno
movs
in
mov
(bad)
in
sbb
mov
push
in
outs
sti
jmp
jb
fistp
push
imul
sub
mov
xor
push
push
push
dec
mov
pop
mov
dec
or
lods
mov
adc
fstp
push
add
imul
loopne
add
cmp
pop
jle
jmp
lahf
shl
sbb
mov
movs
loop
icebp
xor
into
lock
add
daa
push
xor
js
rcl
popf
cs
repnz
cmp
push
daa
ja
pop
jbe
xchg
and
mov
stos
adc
test
(bad)
fnstenv
sub
mov
push
or
(bad)
pop
push
adc
mov
cli
stc
push
pop
xchg
push
cmp
leave
stc
ins
sub
call
in
dec
jne
(bad)
mov
xor
sar
inc
inc
mov
in
outs
ds
iret
lds
push
inc
mov
jle
pop
retf
pop
call
xchg
dec
cs
jl
outs
cmp
into
sbb
sub
cdq
inc
sub
jp
pop
(bad)
popf
add
outs
ret
adc
lods
cdq
(bad)
push
add
dec
ins
retf
push
movs
in
mov
fsubr
push
add
pop
or
and
loope
adc
sub
pusha
dec
adc
repz
leave
hlt
adc
scas
adc
cdq
jl
lock
jae
jmp
adc
adc
adc
in
movs
(bad)
mov
mov
adc
cmp
xor
setns
xor
xchg
jl
sti
gs
faddp
adc
pop
rcr
sbb
push
clc
aad
pop
jle
adc
icebp
sbb
ja
push
pop
hlt
add
int
xlat
test
imul
mov
sti
xchg
xor
mov
mov
and
inc
xchg
push
xchg
in
in
mov
jge
out
pop
or
div
xlat
pop
mov
dec
and
push
mov
sahf
enter
mov
into
jg
in
dec
mov
lea
aas
stc
lahf
out
pushf
jbe
dec
js
push
fwait
sub
out
cmp
xor
xchg
push
cmp
pop
dec
out
dec
mov
mov
pop
ds
mov
dec
sti
xchg
add
dec
mov
fwait
or
sub
jge
sbb
imul
sbb
xchg
adc
jbe
push
int3
and
fwait
sub
dec
dec
aaa
xor
or
cmp
sub
scas
ins
or
(bad)
sbb
adc
in
mov
pop
ds
leave
jb
xor
xchg
sbb
mov
jle
pop
(bad)
sbb
test
aam
cwde
mov
dec
cld
mov
hlt
and
cdq
mov
jg
jg
int
call
ret
mov
mov
inc
les
rcl
(bad)
jg
cwde
cmp
loopne
popa
sahf
push
mov
fmul
addr16
fisub
adc
pop
mov
xchg
pop
inc
scas
fldcw
pop
xchg
or
dec
mov
xchg
cld
cmp
inc
push
cwde
mov
aas
ds
add
aad
arpl
sub
pop
lock
repz
iret
pusha
cmc
js
add
xor
cmps
sar
clc
inc
xor
jns
stos
pop
and
sbb
int
cwde
(bad)
add
xchg
mov
gs
mov
and
pop
sub
and
xor
xchg
outs
rcr
test
add
(bad)
pop
lock
into
sbb
mov
in
test
pushf
or
(bad)
push
inc
cli
fiadd
arpl
mov
lahf
dec
outs
idiv
push
std
cmp
cmps
cdq
scas
and
mov
lods
sahf
xchg
xor
aam
mov
xor
pop
cmp
stos
fwait
xor
xor
shl
ret
xor
cmp
pop
add
(bad)
test
in
xchg
and
loopne
shl
push
push
arpl
jge
popa
lea
adc
or
shl
pop
xchg
(bad)
adc
movs
not
xor
popa
loopne
cwde
inc
inc
dec
leave
push
xchg
add
dec
push
out
(bad)
and
inc
ss
int
or
push
dec
fisttp
xchg
mov
aas
inc
pushf
test
xchg
add
xor
mov
inc
dec
leave
jb
push
mov
sbb
push
inc
ins
popf
xor
out
push
and
aad
pop
addr16
out
rcl
mov
jmp
loopne
ja
aaa
sub
push
and
(bad)
inc
ss
mov
push
ret
mov
clc
mov
cmp
out
pop
cmp
fiadd
shr
sub
les
mov
and
and
call
retf
sbb
xor
dec
cmc
push
dec
call
xchg
xchg
mov
sub
mov
hlt
and
add
push
mul
push
jns
sub
loope
fstp
mov
(bad)
aaa
rcr
jo
pop
cs
hlt
pop
push
add
imul
repnz
sbb
dec
call
das
sar
dec
data16
test
push
inc
test
ret
rcl
es
das
shl
lock
add
out
jl
or
outs
xor
jb
pop
fimul
jl
ds
cld
mov
mov
outs
fisttp
cmp
and
xor
sub
mov
sbb
jne
jo
push
xchg
adc
pop
or
jge
jmp
outs
ret
scas
jno
push
(bad)
(bad)
mov
inc
lock
fst
retf
int
pusha
jae
fst
les
shr
xor
sti
mov
pop
arpl
fwait
jno
adc
cld
or
jae
push
sub
mov
dec
push
lods
sub
aam
jbe
or
fwait
inc
and
push
jae
repz
aam
test
in
cmc
nop
add
in
jno
push
pusha
push
stos
das
fucomp
mov
add
push
shl
jl
mov
daa
pop
xlat
cli
out
leave
hlt
icebp
or
dec
fbld
mov
push
jmp
out
mov
push
push
dec
add
loope
or
punpckhdq
icebp
rol
outs
mov
add
pop
add
mov
or
ror
mov
adc
add
jno
popa
sbb
push
lds
cwde
sbb
dec
mov
mov
lea
bnd
jnp
imul
mov
jo
ret
sbb
in
dec
dec
test
iret
retf
inc
dec
fidivr
pop
mov
xor
mov
add
push
ret
xor
mul
jle
pop
inc
jmp
fdivr
sub
and
addr16
inc
in
xor
stc
clc
fisttp
dec
push
mov
lock
mov
jp
es
cs
push
dec
pop
xchg
pushf
es
jge
aaa
aaa
and
not
in
jmp
cmp
in
out
sub
fnstcw
in
dec
sub
rcl
xor
push
mov
xchg
fnstsw
xor
shl
mov
loopne
loopne
pop
jmp
test
mov
sahf
pop
icebp
jmp
cwde
ficom
mov
ins
cmp
test
(bad)
dec
pop
movs
scas
in
xchg
xchg
pop
inc
les
sahf
mov
scas
xchg
outs
out
sub
sti
cli
pop
xrelease
inc
sar
inc
cmp
cmp
jne
repnz
dec
jp
ins
icebp
aas
cdq
or
pop
mov
(bad)
mov
mov
cmps
mov
add
es
xchg
cs
pop
sti
movs
cmps
ds
rcl
xchg
xor
pop
mov
cmp
or
xchg
mov
inc
jmp
inc
mov
ss
sar
push
adc
inc
loopne
addr16
cmps
sub
int3
dec
repz
aad
aaa
pop
lock
fadd
xchg
add
clc
rol
scas
and
enter
mov
and
hlt
add
push
bound
inc
mov
cwde
cmp
ss
pop
aam
lock
lock
hlt
cmp
dec
inc
(bad)
jecxz
pusha
push
mov
pop
test
or
xchg
shr
mov
retf
cli
and
aam
daa
jno
out
jmp
push
push
add
aaa
aas
push
lea
sti
sbb
sbb
mov
sbb
xchg
nop
pusha
lds
enter
inc
dec
adc
bound
fxch
sahf
adc
call
cmp
out
jne
adc
adc
sahf
jmp
mov
loopne
imul
mov
mov
ins
pushf
xor
xor
add
outs
push
inc
mov
sbb
loop
das
fldenv
mov
mov
repnz
add
shr
cmc
pop
outs
xchg
scas
cmp
mov
(bad)
inc
push
loop
inc
inc
into
adc
inc
mov
mov
or
nop
xchg
and
cmp
push
ror
out
adc
test
xor
push
int
mov
push
cmp
inc
or
aam
fsubr
pop
repz
retf
xchg
addr16
sub
in
cmp
xlat
cmp
ja
push
popf
in
xchg
mov
jb
(bad)
cmp
or
loop
sbb
out
(bad)
bound
or
repnz
xor
mov
mov
movs
popf
add
js
(bad)
movs
adc
mov
je
imul
mov
pop
mov
mov
neg
jmp
sub
nop
xor
frstor
add
pushf
dec
outs
jne
cmp
or
test
gs
mov
xor
inc
or
or
scas
cmp
jle
xchg
pop
leave
dec
push
push
jle
addr16
test
into
jmp
out
mov
ja
pop
jl
mov
push
push
dec
lahf
stc
jg
or
jb
mov
pop
scas
nop
jmpw
inc
(bad)
std
dec
in
xchg
cmp
dec
mov
shr
test
jmp
jne
and
or
push
xchg
sub
les
or
xchg
sbb
cmp
sbb
cmp
sbb
(bad)
cmp
xchg
or
sbb
dec
xchg
adc
scas
xrelease
sti
push
data16
mov
clc
add
cmps
mov
push
int3
push
and
push
pop
cld
jb
cmp
sbb
out
jmp
xor
sub
pop
mov
sub
inc
not
xchg
out
adc
iret
mov
fnstcw
(bad)
pop
mov
aad
jmp
arpl
movs
ficom
ins
push
mov
movs
call
mov
popf
in
shr
shl
mov
pop
or
repz
xor
xor
jg
icebp
or
jb
sub
xor
cs
xchg
mov
outs
cmp
push
in
mov
mov
stos
inc
iret
and
in
shr
xor
pop
adc
inc
mov
scas
inc
ret
push
jmp
hlt
(bad)
or
xor
jmp
cmp
cs
inc
mov
mov
mov
inc
arpl
mov
(bad)
js
mov
mov
fiadd
cmps
div
mov
inc
es
movs
shl
sbb
loop
mov
loop
test
pop
lods
pop
mov
sub
add
scas
sbb
pop
(bad)
(bad)
in
mov
rol
sub
jo
or
shl
stc
dec
inc
push
dec
ficomp
push
mov
mov
in
jg
jne
xorps
sar
push
inc
sub
fstp
push
(bad)
xchg
jmp
outs
fyl2xp1
stos
cli
iret
xchg
jno
xchg
dec
push
pop
popa
inc
add
cmps
mov
push
test
fistp
jne
iret
adc
sbb
push
aaa
or
out
xor
(bad)
sub
das
das
data16
dec
push
jle
adc
jmp
repnz
aaa
out
hlt
xor
mov
scas
call
sbb
hlt
sar
cmps
or
mov
shl
call
xchg
popf
inc
push
cmp
dec
sbb
jp
cmp
icebp
ds
mov
push
dec
outs
push
pop
dec
push
pop
sub
xchg
pusha
adc
enter
aam
rcr
ja
push
(bad)
fsubr
in
enter
xchg
mov
cli
mov
jae
out
imul
pop
inc
dec
jae
push
cmp
inc
and
ja
ss
cmc
mov
xlat
lock
fwait
pushf
popf
jmp
(bad)
repz
lea
pusha
xor
inc
mov
cld
adc
push
jns
xchg
aad
pop
cmp
repz
xchg
jp
mov
pushf
pop
sbb
dec
push
push
dec
imul
rol
mov
sbb
call
sub
fistp
out
(bad)
cmp
aam
mov
xchg
adc
iret
mov
mov
ficom
data16
enter
(bad)
(bad)
jmp
pop
(bad)
vdivps
mov
aam
mov
sub
shr
outs
sbb
xor
(bad)
std
jle
bound
push
movs
(bad)
outs
call
cmp
in
cmps
pop
fnstcw
(bad)
xchg
mov
mov
enter
inc
mov
adc
mov
push
outs
fs
ss
ja
mov
aas
jb
sbb
xor
or
lods
mov
dec
xor
imul
mov
fcmovnbe
adc
outs
fbstp
aam
push
jg
(bad)
in
jmp
js
xor
ins
cld
loope
adc
(bad)
push
mov
sub
stos
aam
sub
lods
mov
and
je
and
sub
xchg
add
sbb
fiadd
int3
xor
push
rep
push
mov
pushf
(bad)
jb
je
pop
pop
mov
gs
imul
jae
fld
in
or
addr16
fs
inc
sahf
leave
repnz
xchg
cwde
mov
mov
fnstenv
cli
ja
mov
loope
add
hlt
sbb
lock
test
jno
add
mov
inc
and
xor
and
movhps
adc
push
and
mov
std
in
mov
or
xor
or
and
shl
push
jmp
(bad)
pop
jno
loopne
iret
hlt
xor
dec
les
pushf
xchg
fistp
cmp
fsubr
add
fwait
adc
and
xchg
mov
test
loopne
pop
(bad)
mov
in
push
and
loop
add
lock
xchg
and
sar
add
into
adc
push
enter
push
stc
sub
mov
add
add
loop
addr16
shl
aad
pop
fisubr
add
das
cld
scas
cmp
test
push
cwde
std
retf
loopne
cdq
mov
fcom
sub
dec
pop
icebp
clc
mov
cmp
sete
mov
shl
dec
push
add
cmp
adc
cdq
nop
xchg
add
outs
fimul
int3
retf
pop
outs
std
movs
sahf
adc
popf
sar
shl
jg
addr16
xchg
dec
mov
xor
cmps
test
jg
fs
aad
fisub
sar
mov
and
push
push
mov
xchg
cwde
inc
and
fadd
and
push
hlt
sbb
mov
jmp
dec
loopne
jge
sbb
xchg
and
aam
stos
call
hlt
push
lahf
add
repnz
in
or
push
dec
repnz
in
imul
mul
adc
(bad)
lds
inc
jnp
hlt
stos
xchg
out
sbb
push
and
jmp
inc
add
lea
test
cs
repnz
lahf
pop
mov
in
push
sub
and
push
push
sar
rcr
push
(bad)
stos
icebp
push
mov
and
std
sbb
push
and
ret
inc
inc
out
(bad)
dec
xor
hlt
xor
rdpmc
mov
int3
clc
cwde
lods
lea
je
sbb
les
rol
xchg
fmul
jno
stos
repz
and
xchg
outs
fisub
nop
call
test
mov
lds
xor
adc
stos
cmc
in
(bad)
mov
xchg
cmps
mov
iret
cmp
jecxz
or
inc
pop
mov
sub
sbb
add
push
lods
or
jae
cs
aam
imul
cmps
call
cmc
jns
cmp
cdq
jnp
push
pop
pushf
test
in
add
pop
sbb
add
xor
adc
in
in
mov
lods
ins
aam
sub
shr
shl
mov
jecxz
cmp
(bad)
fistp
neg
imul
pop
add
or
mov
cmp
xchg
shr
lahf
mov
cmps
cmp
mov
mov
movs
or
dec
push
dec
fisubr
xchg
and
inc
out
mov
dec
mov
sbb
pop
out
push
dec
cmp
jno
sbb
lahf
sti
pop
imul
imul
ds
sub
sub
pop
mov
jg
(bad)
cmp
aas
push
mov
retf
add
xchg
sti
xchg
loop
sub
sbb
in
popf
icebp
mov
xor
(bad)
jns
cdq
es
pop
mov
outs
inc
shr
out
pop
cmp
mov
shl
mov
sbb
loope
cmp
cmc
xchg
and
loopne
ficomp
repz
cld
iret
in
or
xchg
mov
sub
bound
retf
pop
and
jmp
div
sar
xor
and
sbb
lahf
cmp
lahf
mov
add
ja
mov
xchg
mov
add
daa
daa
cs
mov
movs
and
pop
xchg
cmp
push
push
xchg
out
gs
add
mov
dec
loop
aam
lods
mov
cmp
fcom
push
mov
and
jp
test
pop
sbb
fdiv
in
jg
mov
adc
fisttp
into
into
sbb
jbe
push
push
icebp
push
cmp
in
movs
mov
dec
shl
cs
push
pop
fs
mov
inc
arpl
push
rol
imul
sbb
pusha
xchg
out
fild
sub
gs
enter
push
call
jmp
stos
(bad)
xchg
sub
add
sub
dec
dec
es
imul
ret
jno
pop
sub
out
mov
imul
adc
cli
imul
jmp
inc
js
(bad)
jnp
sbb
dec
daa
xchg
sub
xlat
xor
mov
sti
(bad)
repz
pop
mov
sub
shr
jmp
cmp
dec
out
daa
push
mov
sub
push
in
ins
dec
js
cmp
jne
inc
pop
(bad)
mov
dec
neg
or
cmps
pusha
push
(bad)
std
xchg
pop
pop
adc
sti
push
xchg
js
ins
fild
bound
repz
mov
enter
pop
dec
mov
sub
sbb
js
iret
test
ins
aaa
dec
imul
fldenv
test
cmps
add
int
jae
adc
data16
int
inc
jg
jne
lods
(bad)
cmp
dec
enter
pop
xchg
daa
test
mov
pusha
js
jmp
and
pop
js
inc
int
xor
and
dec
ja
stos
inc
jbe
loope
pop
sbb
mul
cmp
push
sbb
mov
mov
div
int3
mov
sub
cmps
dec
sub
push
push
lods
lds
and
pop
in
push
mov
jne
mov
(bad)
mov
aaa
stos
ins
jl
test
mov
mov
imul
test
cmp
test
push
sub
ja
push
mov
jo
jp
loope
rcl
shl
jne
adc
test
jbe
pop
adc
das
push
(bad)
retf
mov
cmc
or
dec
(bad)
out
dec
nop
mov
ja
mov
mov
xchg
add
scas
xchg
add
cmp
cwde
imul
xchg
ror
mov
jnp
retf
mov
stc
or
call
out
xrelease
pusha
loop
loop
out
push
jmp
popa
std
pusha
jns
iret
pop
pop
sahf
jmp
jne
in
mul
addr16
std
icebp
push
jl
retf
lahf
push
test
repz
pusha
xor
(bad)
test
xchg
lods
aas
(bad)
mov
cld
jp
test
es
(bad)
cdq
jge
loop
pop
lods
adc
repnz
cmc
pop
xchg
outs
mov
push
call
leave
xor
cmp
mov
add
out
cmps
or
and
and
in
sar
stos
adc
cmps
xor
nop
pushf
and
dec
sar
mov
xchg
ins
fisubr
sahf
mov
xor
mov
xor
pop
ss
sub
fwait
inc
adc
(bad)
and
adc
or
sbb
inc
inc
jb
sbb
test
out
iret
sub
pop
ret
or
or
xchg
imul
mov
imul
mov
add
sub
jge
gs
jge
lds
(bad)
mov
js
push
mov
and
lock
hlt
pop
cmp
mov
mov
dec
aam
int
leave
mov
mov
xor
jo
fmul
push
js
xor
xchg
sub
xchg
out
cmc
push
sub
fcom
cmp
xor
or
fcom
jb
loope
mov
mov
inc
out
mov
and
pop
enter
dec
popa
xor
jae
add
data16
call
push
or
movs
jbe
pop
or
vminsd
pusha
jno
jae
mov
loop
or
xchg
push
(bad)
fisttp
mov
int3
call
imul
fmul
(bad)
jbe
bound
lahf
dec
xor
int3
js
fdiv
(bad)
add
sub
xchg
cld
and
sahf
pop
test
ins
push
xchg
jp
cmp
jbe
int3
cmp
iret
out
inc
aaa
(bad)
std
pop
mov
div
and
mov
xor
addr16
ins
xchg
imul
retf
jnp
shl
add
rcl
mov
adc
(bad)
ror
jl
cs
push
idiv
fcomp
mov
sti
inc
jb
add
(bad)
sbb
jmp
add
fsubr
test
inc
int
push
push
or
js
int3
cmp
cmp
adc
arpl
aaa
jne
push
call
in
fidivr
push
mov
xchg
aaa
out
outs
inc
mov
dec
into
jno
mov
outs
inc
(bad)
jmp
in
inc
adc
(bad)
in
cwde
cmps
fwait
push
iret
xchg
and
mov
ja
(bad)
pop
sub
ja
mov
ror
lods
mov
inc
cdq
sbb
in
jecxz
outs
and
mov
loop
iret
adc
out
aam
mov
fcomi
dec
xor
shl
nop
push
jae
popa
aaa
sbb
mov
dec
pop
push
pop
ja
not
stos
push
mov
pop
cmp
mov
shl
lea
add
in
and
sub
jb
push
adc
out
jmp
scas
xor
dec
outs
pop
pushf
cdq
pop
and
fadd
jle
xchg
ss
dec
or
adc
or
and
ficomp
push
adc
sbb
ja
xchg
mov
add
xor
push
(bad)
cmp
out
mov
js
or
rcr
ret
pop
fwait
inc
repnz
inc
aam
jbe
test
or
popa
xor
sub
sahf
push
push
sub
xor
mov
xchg
inc
in
ja
call
shl
fild
out
icebp
repz
mul
cmp
dec
sub
shl
arpl
add
ror
int
test
call
mov
aas
popf
loope
mov
xchg
jne
add
ror
pop
scas
repnz
or
adc
pop
addr16
es
pop
sub
leavew
outs
mov
pop
pushf
mov
shl
add
lods
or
lea
push
pop
iret
repz
pop
jmp
jmp
or
addr16
popa
(bad)
jns
xchg
mov
std
xchg
push
jle
shr
jge
pusha
(bad)
aam
popa
test
fisttp
push
aaa
push
lods
sbb
out
or
jge
movs
add
adc
dec
out
test
daa
int3
mov
add
sbb
popf
test
push
mov
fstp
jnp
push
dec
mov
or
addr16
cli
cli
mul
pop
xchg
fistp
or
fidivr
in
hlt
mov
stos
loope
not
add
xchg
or
push
stc
adc
inc
push
sbb
rol
nop
dec
inc
div
popa
sbb
bound
inc
mov
push
lods
stos
test
fs
repz
xchg
xchg
xor
push
imul
daa
adc
add
aam
mov
pop
mov
add
push
sbb
inc
ret
fwait
test
enter
repz
sub
lods
and
call
fwait
mov
push
mov
jmp
xor
call
dec
scas
daa
aad
fistp
dec
vpcmpgtd
(bad)
iret
pushf
loope
nop
aaa
aaa
mov
push
xlat
ret
sub
cli
nop
jnp
loop
xchg
addr16
cmps
cmps
jbe
out
mov
fisttp
mov
call
stos
cmp
and
add
jecxz
xchg
cmp
xor
xor
xchg
fld
pop
enter
enter
sbb
div
adc
mov
pop
adc
dec
or
lock
jg
adc
lods
enter
movs
jns
mov
sbb
lahf
dec
imul
push
or
ja
push
dec
pop
in
jne
sub
(bad)
mov
jo
lahf
sub
in
clc
jns
movs
lock
in
icebp
std
cmp
and
sub
mov
push
and
(bad)
jl
pusha
sahf
dec
xchg
xor
push
std
in
outs
out
cld
(bad)
out
jmp
cmp
mov
lahf
(bad)
mov
inc
sub
ins
jecxz
mov
retf
retf
pop
cwde
test
adc
ffree
jae
or
sub
js
pop
int
fmulp
ror
js
adc
xchg
pop
xor
push
sub
adc
in
ins
dec
iret
hlt
mov
adc
xchg
sub
std
or
cdq
xchg
xor
jno
mov
xchg
enter
shl
push
das
pop
sbb
and
(bad)
dec
ja
cmp
(bad)
in
ret
xor
push
out
fnsave
inc
mov
sbb
dec
aam
aas
push
mov
mov
xchg
loop
fwait
int3
ja
neg
cs
xchg
mov
dec
sub
movs
sbb
lahf
dec
mov
out
idiv
adc
push
lods
in
ds
add
inc
jmp
mov
jmp
xchg
xchg
arpl
scas
mov
bound
mov
push
outs
mov
pushf
xor
repz
(bad)
cwde
outs
out
movs
pop
loopne
and
rol
push
rol
mov
push
xchg
sahf
ja
scas
cwde
inc
int3
cmps
push
sbb
pop
mov
adc
scas
sub
mov
xchg
fwait
addr16
mov
inc
je
xchg
aas
push
nop
out
addr16
(bad)
bound
pop
push
cmp
lods
mov
aam
(bad)
and
retf
sbb
adc
inc
test
fcmovne
xor
inc
test
in
push
cmps
jge
dec
sahf
fnsave
js
(bad)
sbb
dec
dec
jo
cmp
add
adc
push
jae
jmp
xor
add
xchg
hlt
outs
and
test
jb
mov
popa
or
pop
bound
sti
loop
cwde
inc
stos
mov
dec
repnz
repz
xchg
aaa
dec
dec
xchg
sbb
adc
lods
rol
push
or
inc
push
xor
push
int
ins
les
fistp
jecxz
sub
and
ja
inc
push
mov
dec
pop
jns
pop
sub
lds
ins
lods
icebp
jns
mov
jne
mov
stc
mov
push
mov
adc
xchg
lahf
retf
jmp
inc
cmp
lods
xor
(bad)
dec
fisubr
mov
and
cmp
rcl
retf
cmps
sti
and
jl
cld
mov
and
mov
push
shr
iret
inc
mov
ja
ins
es
cld
push
jge
rcr
call
pop
out
cmp
loopne
mov
pop
mov
jle
loope
imul
ins
scas
cmp
(bad)
pop
mov
xor
cli
mov
mov
fst
rcl
scas
aam
add
(bad)
in
ds
xchg
jns
loopne
repz
mov
retf
jne
jmp
mov
mov
imul
xlat
out
movs
dec
or
cmp
pushf
push
sub
fwait
cli
fcom
push
sbb
or
enter
push
data16
fdivr
jae
jg
pusha
mov
loopne
mov
loop
mov
test
xchg
rol
retf
jge
mov
fs
loopne
iret
in
cmp
loop
sahf
imul
fwait
test
lock
lea
dec
push
aam
sub
shl
jae
cmps
jo
inc
jp
cwde
lock
mov
dec
xor
xor
out
(bad)
push
push
shl
pop
js
lds
push
dec
addr16
pop
xchg
xor
or
call
scas
lock
movs
cli
mov
pop
in
xor
loopne
mov
adc
imul
push
mov
mov
jecxz
mov
test
fild
jmp
mov
mov
imul
stos
fstp
hlt
pop
mov
lods
arpl
xlat
(bad)
ss
mov
repz
cdq
or
lds
push
rol
pop
mov
js
in
aaa
jmpw
jne
retf
push
mov
jmp
scas
data16
adc
pop
push
out
(bad)
aaa
sub
test
xchg
lock
sub
add
nop
test
popa
or
enter
jmp
imul
fs
and
dec
test
dec
cmps
aaa
jne
ins
pop
dec
xchg
mov
scas
push
mov
cwde
ins
xchg
aad
jmp
lea
mov
sbb
ins
jno
adc
sahf
sbb
jne
and
fidivr
dec
add
pop
imul
push
shl
fisubr
mov
mov
mov
cs
adc
fld
xor
or
jne
cmps
push
addr16
aas
out
lods
cmp
fisttp
in
jnp
add
add
ins
repnz
(bad)
mov
call
dec
stc
xor
sbb
call
mov
cmp
jne
push
inc
push
xchg
pop
inc
push
js
add
mov
or
mov
enter
push
jnp
and
push
sub
jns
shl
and
jecxz
(bad)
imul
data16
das
es
lods
push
repz
in
jmp
pop
xchg
jne
aad
jns
inc
and
mov
add
jge
je
xlat
push
push
adc
push
loopne
aam
fisub
shl
push
call
adc
adc
add
or
repnz
iret
mov
and
cmc
loop
jae
jno
mov
cld
xor
jb
cwde
lea
add
xchg
les
or
pop
or
mov
shl
lock
jns
add
in
adc
sbb
or
call
xchg
enter
or
pop
stos
adc
push
xchg
lods
call
adc
xor
add
(bad)
iret
repnz
jmp
fadd
pop
xor
aas
xchg
jmp
into
fcmovne
xchg
iret
or
pop
or
and
dec
jne
int3
data16
into
scas
pop
cmp
lods
fimul
aaa
mov
push
xchg
add
das
loopne
shl
mov
push
fstp
pop
lods
ds
in
dec
ins
test
xchg
pop
lods
or
and
test
jb
push
ins
add
xor
out
push
adc
inc
in
stos
fst
lock
mov
sbb
int
pusha
mov
sub
push
(bad)
in
cmp
mov
sbb
mov
sbb
retf
xor
mov
ja
or
sub
loopne
fld
cmp
or
jo
retf
lods
and
push
pop
pusha
fstp
lods
push
cmp
mov
add
lods
(bad)
(bad)
aad
push
mov
adc
je
add
push
or
push
rcl
push
aam
retf
jo
jno
push
dec
adc
sub
cli
cwde
mov
pop
push
mov
jns
push
and
xor
push
mov
cdq
xchg
mov
push
dec
jb
xchg
push
in
popf
pop
les
dec
cmc
and
push
mov
rol
mul
cmp
or
iret
aaa
aad
xchg
and
or
pop
jge
cmp
mov
scas
inc
out
pop
(bad)
aas
mov
push
mov
mov
mov
add
jg
jge
inc
stos
add
mov
mov
add
add
addr16
jnp
cli
out
cmp
adc
std
test
cmc
loopne
or
movs
sar
aad
aad
jl
mov
and
adc
daa
shr
mov
call
jl
mov
mov
sbb
or
sub
mov
test
and
pop
jnp
fist
imul
push
jns
xlat
int3
pop
push
xchg
dec
in
push
pop
pcmpeqb
or
out
das
mov
in
dec
ror
dec
inc
sub
retf
or
pop
xor
stos
and
mov
and
(bad)
arpl
ret
inc
idiv
inc
cdq
enter
sub
fs
sti
sbb
sbb
or
cmc
sub
cmp
cdq
cmp
cwde
mov
cmps
adc
inc
cdq
and
inc
out
mov
pop
inc
inc
loopne
ficom
daa
aad
push
movs
dec
sbb
stos
enter
test
dec
popa
pop
test
adc
test
ret
ret
jns
sub
or
pop
ficomp
cs
icebp
pop
fmul
test
add
loope
(bad)
not
add
jne
adc
sbb
pop
in
into
adc
fnstcw
xor
jge
add
add
dec
in
(bad)
repnz
sar
cmps
ret
fucomip
shl
inc
dec
xor
rcr
and
es
adc
inc
inc
jg
dec
(bad)
sub
nop
cmps
jmp
out
inc
mov
imul
dec
stos
sub
jbe
mov
xchg
sbb
sbb
scas
push
adc
mov
mov
xor
pop
mov
add
sub
aas
inc
xchg
pop
stos
dec
xchg
add
ja
gs
hlt
ja
pop
imul
call
xchg
pop
scas
sbb
inc
call
aas
(bad)
jmp
jge
dec
sbb
lahf
pop
cld
leave
xlat
(bad)
dec
mov
sub
cli
add
js
iret
push
lea
(bad)
sub
shr
lock
aad
jge
cmp
and
and
add
sbb
dec
sub
les
push
(bad)
mov
sbb
dec
pop
call
lock
inc
xchg
aaa
rcr
xchg
pusha
popf
in
test
adc
sbb
test
push
outs
jl
mov
adc
mov
repz
aad
call
mov
sbb
or
out
mov
stos
lods
cmps
push
(bad)
in
int
xor
xor
mov
adc
cmps
inc
add
bound
inc
adc
in
ficom
iret
adc
fcmove
xchg
jmp
in
int
inc
aaa
push
jnp
push
xor
sub
and
fcomip
jno
push
in
inc
lahf
mov
jle
call
mov
jne
mov
scas
and
mov
cmp
push
xchg
loopne
cwde
ds
out
xor
push
out
call
mov
mov
push
enter
push
mov
cmp
add
sbb
hlt
jo
stos
pop
repnz
cmc
xchg
jmp
cmp
test
add
sub
retf
aas
into
adc
ror
fst
in
xchg
ret
data16
and
mov
cld
mov
test
fucom
and
push
(bad)
push
loopne
sbb
lahf
cmps
adc
xchg
jno
mov
aas
outs
ret
bound
pop
mul
mul
or
push
and
out
mov
inc
outs
mov
mov
out
outs
or
mov
adc
xor
push
test
xor
hlt
sub
mov
jo
ret
dec
push
jno
inc
mov
loop
pop
pop
xor
js
push
in
jl
movs
push
sbb
ds
fcomp
xchg
xchg
cmp
add
add
jmp
hlt
clc
xchg
push
add
push
sub
fs
aad
jmp
and
mov
push
xor
out
sti
loope
xchg
or
mov
dec
cmp
push
push
rcl
out
xchg
cmp
ja
or
test
cwde
cli
icebp
inc
shr
jne
outs
mov
ror
pop
jae
push
cmp
cld
sub
jecxz
jle
xor
sub
rol
aad
mov
mov
(bad)
rol
push
loopne
frstor
cdq
retf
data16
cmp
das
mov
sub
sub
(bad)
xchg
add
xchg
mov
dec
(bad)
push
sahf
fwait
nop
add
movs
mov
scas
(bad)
mov
int3
adc
shl
jmp
cmp
xor
sahf
popa
adc
les
push
pop
movs
daa
mov
adc
arpl
and
xchg
jg
les
loope
jl
sbb
push
push
dec
je
aam
les
cmp
pop
je
cs
add
sbb
jne
jp
push
fnstenv
xchg
pop
jg
scas
ret
mov
pushf
jb
lahf
stos
mov
jne
cwde
sub
mov
jno
xchg
pop
cmp
mov
or
sub
adc
lea
dec
or
popf
ins
out
add
in
inc
jb
gs
cs
push
cmps
fcomp
mov
and
rcr
add
sub
jne
pop
loope
xchg
repnz
fdivr
or
cmc
ss
test
fst
rcl
xchg
std
aaa
out
lods
mov
or
jae
push
pop
sub
int
jo
test
ror
enter
int
mov
pop
in
jl
and
xor
lock
pop
aaa
in
push
pushf
inc
cmp
or
fmul
(bad)
push
jnp
inc
psrlq
in
inc
cwde
jns
jno
sahf
inc
push
jae
popa
pop
and
ret
retf
pusha
and
(bad)
daa
inc
sub
cli
jns
jbe
mov
inc
xchg
mov
xor
mov
cmp
ret
dec
stos
sbb
aad
push
data16
push
push
fild
xchg
xlat
cmp
and
aaa
mov
add
iret
add
cmps
pop
push
ficom
jmp
aad
adc
ss
push
inc
mov
retf
test
and
test
push
pop
arpl
push
and
ins
and
cmps
div
xchg
push
push
stos
jo
stc
in
fdiv
pop
push
outs
pop
sub
ficomp
ficom
in
pop
inc
sub
fisttp
jge
xor
xchg
pop
push
in
fbld
call
out
enter
pop
imul
mov
mov
dec
cmp
outs
imul
(bad)
(bad)
ja
pop
xchg
call
sbb
or
cmc
dec
outs
mov
std
fisubr
push
jg
rol
push
push
dec
jecxz
mov
inc
js
call
nop
retf
cmp
pop
mov
cmp
popf
adc
and
movs
xchg
jle
mov
push
test
jecxz
ret
loope
cmp
mov
inc
adc
and
mov
push
cmps
cmp
cmp
int3
jmp
mov
xchg
ror
pop
leave
jnp
das
cmp
and
mov
cmp
inc
pop
mov
retf
lds
xchg
pop
ins
cmp
in
jle
mov
push
mov
out
add
and
in
in
loop
xlat
in
inc
leave
les
mov
cmp
dec
push
js
jle
lds
mov
test
addr16
mov
mov
sub
mov
mov
jg
lods
jo
inc
xchg
dec
pushf
push
fdiv
jbe
mov
test
jmp
test
cmp
adc
neg
cdq
or
sbb
jbe
cdq
inc
out
xchg
imul
ss
jb
out
mov
mov
xor
xchg
ds
mov
mov
push
sbb
rcr
lods
out
mov
xchg
sti
pop
stos
mov
nop
jno
sub
daa
push
out
mov
pop
(bad)
cmp
aas
mov
mov
or
inc
sbb
arpl
push
push
push
dec
adc
cmp
out
cmp
jmp
cmc
gs
test
add
push
int3
sub
retf
mov
mov
ds
add
daa
sub
pop
bound
cmps
adc
sar
fs
aam
retf
lock
cmps
dec
mov
adc
stos
rcl
cmp
jne
jns
mov
mov
(bad)
sub
sahf
pop
mov
xchg
inc
xor
jae
sbb
mov
daa
pop
in
dec
xchg
xchg
imul
call
jo
cmp
jg
in
jp
mov
movs
sub
je
into
popf
mov
mov
mov
cmp
scas
pop
xor
push
xchg
mov
sub
sti
mov
push
imul
pop
scas
aad
mov
sar
dec
mov
not
addr16
jo
test
xor
shl
sbb
mov
sahf
(bad)
cs
mov
pop
add
pop
jmp
cmps
jne
enter
and
xor
push
pop
loope
mov
ret
fiadd
dec
jno
jmp
cld
cdq
mov
in
adc
add
outs
mov
pop
adc
pop
adc
hlt
loopne
jno
pop
jl
mov
mov
xchg
shl
test
cmp
(bad)
stos
and
pop
in
in
fcom
dec
fild
mov
inc
jmp
and
push
adc
int3
cmp
std
stos
and
cld
aas
mov
mov
pop
mov
pop
es
(bad)
leave
popa
pop
stos
(bad)
inc
mov
mov
ins
pop
cmp
rcl
mov
add
push
retf
inc
xchg
cli
sub
mov
int3
xor
cmp
xor
fisubr
repnz
rcr
ins
jl
push
xchg
mov
cmp
nop
in
pop
(bad)
mov
mov
mov
mov
cmc
js
xor
xor
nop
icebp
sahf
stos
mov
jo
leave
rcl
es
xor
jno
cld
mov
fwait
(bad)
cmp
das
sub
loop
mov
lahf
jecxz
pop
jne
jnp
xchg
push
or
ins
dec
(bad)
push
out
mov
inc
mov
mov
mov
sti
rcr
xor
ret
xor
mov
dec
adc
mov
or
lahf
ss
jle
mov
es
(bad)
in
xchg
outs
rcl
jns
pop
fisttp
mov
enter
outs
dec
rol
push
jmp
nop
jns
add
xchg
mov
jb
xchg
mul
mov
test
xchg
fstp
popf
mov
xchg
or
shr
in
pop
push
ins
or
pushf
inc
jecxz
pop
xchg
(bad)
jns
add
aas
inc
cmp
inc
dec
and
or
mov
imul
dec
dec
stos
adc
es
push
imul
lahf
sub
mov
popa
jge
and
jbe
pop
inc
enter
xor
stos
sti
inc
int3
test
call
dec
psubusw
push
call
jecxz
or
mov
sub
or
add
push
(bad)
adc
sub
jo
es
clc
lock
stos
test
mov
lods
(bad)
push
xchg
hlt
ficomp
xor
repz
and
adc
mov
daa
fst
xor
or
mov
push
jne
push
pop
pushf
xchg
cmp
sbb
test
lods
outs
or
lea
push
push
leave
pop
lock
inc
aam
repz
and
in
daa
push
jno
aad
(bad)
push
outs
mov
push
movs
das
adc
call
jns
mov
(bad)
rcr
test
jns
aas
stc
rcr
or
add
jb
lock
nop
mov
scas
aad
call
pop
inc
pushf
loopne
in
push
xchg
xor
xchg
add
in
pushf
sahf
imul
cmps
inc
xor
call
stos
test
push
and
or
and
xor
mov
(bad)
stc
movs
or
in
mov
mov
jns
sub
les
inc
push
pushf
scas
dec
cli
xchg
fldenv
test
pushf
or
add
push
mov
cmp
pop
movs
mov
(bad)
into
cli
mov
push
mov
sub
cmp
adc
pop
cmc
xor
mov
mov
mov
sahf
sub
(bad)
push
dec
arpl
xor
xchg
add
adc
sbb
pop
inc
pusha
clc
and
data16
sbb
pop
pop
pop
out
popa
dec
sbb
(bad)
js
daa
pop
xchg
dec
cdq
jno
cmps
rcr
loopne
mov
or
movs
loope
push
sub
mov
adc
and
adc
xchg
add
pushf
inc
scas
in
inc
xchg
mov
test
push
jmp
hlt
adc
and
daa
ins
add
mov
push
jbe
mov
pop
pop
cmp
add
ret
pop
cs
out
frstor
dec
fstp
cmp
cli
stos
ficomp
ret
aas
clc
inc
test
cmp
shl
js
iret
popf
pushf
test
sub
push
jp
and
popa
test
inc
sbb
test
inc
xchg
(bad)
mov
mov
mov
and
in
pop
stos
in
ds
xchg
ss
enter
js
push
mov
xchg
loope
pop
into
(bad)
loope
push
mov
xchg
jg
push
iret
daa
sbb
pushf
es
inc
repz
sub
outs
mov
xlat
loop
mov
test
push
shl
mov
sub
cwde
ret
ja
(bad)
push
pop
pop
clc
and
in
adc
int
repnz
push
jne
push
xchg
xchg
inc
pop
loopne
fdivr
dec
(bad)
mov
cmp
addr16
sub
xor
(bad)
mov
jns
inc
sbb
mov
mov
push
push
mov
retf
push
dec
fnstsw
inc
lea
retf
out
sbb
lock
cmp
shr
(bad)
pop
repnz
das
retf
dec
(bad)
repz
xor
lock
pop
into
lock
jae
lds
and
push
imul
push
and
jle
pusha
and
xchg
jb
imul
or
xor
(bad)
mov
test
pop
sbb
jo
xchg
adc
add
sub
(bad)
jnp
add
jo
adc
daa
inc
daa
imul
jno
mov
sub
cmp
mov
repnz
mov
inc
fmul
or
das
in
in
cmp
and
(bad)
fadd
jle
dec
sbb
fnstcw
xchg
mov
xchg
xor
add
and
jmp
daa
sar
dec
or
cs
inc
lods
das
dec
test
popf
mov
dec
adc
js
mov
lock
repz
daa
pop
xchg
push
outs
or
push
sbb
or
cmp
cs
xchg
or
push
sahf
push
inc
jb
inc
mov
lods
fimul
sbb
inc
pushf
or
sub
mov
aad
dec
pop
or
cs
dec
mov
cmp
cmp
pop
pop
call
and
or
fsubr
test
cwde
xchg
mul
sti
cmp
out
and
xchg
and
xchg
adc
and
mov
shr
ss
fstp
ror
mov
add
mov
pusha
test
call
adc
lock
dec
pop
and
jno
pop
cdq
je
ja
mov
jae
neg
aaa
mov
dec
and
xchg
ret
mov
test
daa
jl
sub
lds
or
sbb
into
retf
pusha
aad
adc
inc
push
(bad)
mov
push
js
sbb
lods
(bad)
(bad)
mov
mov
in
aaa
inc
out
in
mov
mov
gs
sub
sbb
cmc
pushw
push
(bad)
test
stos
sub
mov
mov
sbb
fisubr
stos
mov
xor
cmp
rol
xor
jb
sub
repnz
sub
loopne
fist
ficomp
or
cmp
iret
pop
pop
ficom
mov
and
es
add
jbe
jns
jg
mov
cmp
es
jno
mov
xchg
xchg
mov
push
add
sub
jmp
sbb
jl
aaa
fistp
jmp
outs
xchg
xchg
in
mov
sub
es
(bad)
adc
jecxz
imul
sub
(bad)
fisttp
test
not
icebp
neg
push
test
data16
push
mov
jge
push
shl
pop
(bad)
neg
cmp
loopne
mov
adc
push
jmp
sbb
dec
jo
in
xchg
in
lds
sub
adc
icebp
cmp
aad
fldenv
mov
mov
mov
or
jns
mov
mov
inc
sbb
dec
and
push
adc
lock
jl
jmp
sub
nop
or
es
mov
pusha
popa
popa
pop
xlat
or
mov
jae
dec
xchg
sahf
loope
inc
fmul
(bad)
ret
push
mov
and
loop
mov
stos
shl
or
mov
xlat
mov
push
xchg
push
fidivr
or
inc
mov
xchg
jno
out
pop
fwait
mov
mov
push
call
add
jns
xchg
fmul
xchg
adc
mov
rol
rcl
pushf
dec
inc
in
mov
jnp
cdq
push
popf
arpl
sub
xchg
js
lds
inc
cwde
pop
shr
or
mov
popf
push
or
(bad)
sub
jg
(bad)
fiadd
push
mov
test
mov
jmp
adc
hlt
and
and
and
inc
fsubp
jno
jge
jecxz
sub
xchg
mov
xor
xlat
aam
jg
xor
outs
mov
shl
push
add
sbb
pop
sbb
xchg
iret
cmp
fcomip
and
push
fistp
adc
(bad)
call
adc
cdq
scas
inc
push
arpl
pop
xor
aam
xchg
inc
js
xor
mov
rcr
stos
ret
outs
stos
(bad)
sbb
repnz
sub
sbb
inc
sti
add
or
jge
shl
(bad)
imul
cld
pop
pop
leave
stos
loop
scas
and
ret
adc
std
push
xor
fmul
imul
aam
add
fs
fnsave
cwde
(bad)
(bad)
cmp
fisttp
mov
xchg
mov
cli
inc
lahf
shl
enter
mov
stc
jge
mov
(bad)
pushf
xor
adc
cld
inc
mov
sbb
and
pop
sub
push
loope
cmc
push
xchg
sbb
or
ins
mov
stos
out
arpl
or
dec
xor
pop
push
sub
lock
imul
xor
jle
not
sub
shl
mov
call
aas
sub
(bad)
push
rcl
dec
mov
xchg
jns
(bad)
arpl
mov
jecxz
scas
mov
aas
jnp
mov
(bad)
aad
push
sar
and
movs
pusha
jge
jne
(bad)
mov
jl
je
in
dec
imul
popa
mov
gs
xlat
mov
stos
jb
cmp
cmp
jmp
mov
mov
shl
rcr
add
scas
inc
and
pop
xchg
xchg
ror
imul
or
pop
jns
adc
sbb
cvttps2pi
iret
pop
pop
in
in
fs
inc
push
adc
pavgb
and
(bad)
das
aam
mov
jge
sbb
or
jb
and
jns
dec
inc
adc
scas
sub
xchg
loope
imul
push
pop
xor
xor
xor
das
sar
mov
loop
out
scas
sub
adc
xchg
hlt
popa
and
jg
movs
xor
push
aaa
shl
adc
adc
in
repz
mov
call
mov
into
(bad)
fidivr
nop
push
nop
cmp
xchg
int3
or
out
cmc
jmp
sbb
fist
inc
mov
das
sbb
inc
out
and
add
jp
sub
mov
div
pop
aas
cmps
loopne
cmp
pop
test
stc
add
adc
sub
xchg
je
mov
std
adc
mov
cmp
mov
rol
xor
add
cmps
cmp
aam
pop
dec
push
inc
pop
jg
mov
or
test
pop
cmps
jge
movq
pop
mov
das
movs
cmp
add
cmp
(bad)
(bad)
jmp
push
leave
hlt
test
jp
cmp
lock
jbe
mov
and
mov
iret
scas
retf
ror
and
sar
adc
mov
mov
lahf
mov
ins
xchg
cmc
clc
popa
xor
push
in
pusha
and
mov
and
mov
sub
pushf
scas
rol
cwde
dec
rcr
pop
popf
jl
push
push
rcr
xchg
add
mov
fwait
mov
sub
or
cmp
jae
inc
pushf
mov
repz
sti
movs
lea
jle
retf
sahf
push
std
sbb
push
cmps
lock
(bad)
inc
push
pop
mov
cmp
push
dec
dec
sbb
xor
ret
add
ss
fsub
cmc
inc
and
out
cmps
pop
or
in
into
cmp
cmps
stos
lods
pop
sbb
bound
xchg
sub
test
lods
das
aaa
outs
js
inc
mov
add
movs
ss
inc
mov
out
pop
push
mov
inc
jmp
jbe
retf
test
sbb
push
mov
jmp
mov
mov
out
arpl
lods
cld
mov
hlt
jge
ss
push
test
lahf
ss
or
sub
pop
mov
fwait
push
inc
xchg
sbb
fwait
nop
pop
scas
fnsave
out
dec
mov
out
mov
jmp
sbb
xchg
(bad)
sbb
xlat
jmp
jmp
jne
sbb
imul
jl
push
or
sti
push
mov
(bad)
and
in
imul
repz
outs
pop
retf
stc
jnp
push
(bad)
dec
test
or
(bad)
fdiv
add
or
scas
pusha
ret
shl
cs
push
and
add
rol
mov
pop
mov
ins
gs
jl
push
sub
call
jo
jl
inc
jmp
xor
fld
or
popa
dec
imul
rcr
mov
test
jns
dec
xchg
fxch
ins
xor
fcom
lds
and
xor
call
mov
push
gs
cmp
fistp
push
sub
or
jmp
adc
pusha
repnz
out
(bad)
sti
aam
add
sub
cmps
imul
(bad)
test
arpl
mov
cld
call
inc
push
dec
sahf
fcmovbe
js
test
mov
pop
shl
in
xchg
xor
mov
loopne
clc
rcr
(bad)
(bad)
lods
bound
call
jl
das
gs
leave
pop
inc
(bad)
shl
cmp
sbb
movs
adc
mov
ss
pop
push
dec
lods
or
dec
adc
fmul
mov
mov
add
cmps
dec
sbb
lods
(bad)
xlat
pop
imul
sbb
out
stc
or
sbb
aaa
push
push
and
mov
(bad)
sbb
cld
lds
cli
jbe
sahf
imul
adc
inc
sti
mov
sbb
scas
or
cmp
pop
mov
xchg
jmp
das
loope
cmps
mov
test
adc
cmp
(bad)
stos
adc
add
lods
std
add
push
in
mov
mov
jb
lods
pop
inc
inc
(bad)
lahf
rcl
inc
jno
mov
cmp
mov
xchg
lods
loope
clc
(bad)
ds
add
push
sbb
cs
(bad)
aaa
xor
adc
fs
es
clc
xchg
popa
clc
mov
fwait
push
or
(bad)
push
mov
mov
pop
xchg
cmp
icebp
in
shl
(bad)
retf
stos
dec
out
adc
aaa
mov
fisub
loopne
inc
test
inc
idiv
dec
ins
pusha
xchg
call
hlt
jo
popa
inc
inc
mov
adc
jle
dec
push
sbb
ror
imul
test
jg
daa
or
xor
test
ss
in
dec
repz
cmps
fbld
pop
cmp
mov
lahf
mov
dec
xor
inc
iret
and
leave
cwde
cmp
sbb
push
and
or
sub
clc
or
xor
lods
data16
mov
jno
jmp
mov
sbb
(bad)
xchg
push
push
dec
test
xor
inc
fisubr
test
outs
or
mov
add
cld
sar
fdiv
arpl
dec
gs
cmp
movs
pop
stos
add
in
sub
(bad)
cmp
xor
dec
jg
pop
or
adc
dec
or
shl
sbb
cwde
loopne
add
adc
and
imul
or
and
jge
fwait
into
cmp
loopne
dec
push
adc
jmp
sar
mov
sbb
pop
mov
sbb
rcr
sbb
(bad)
pushf
scas
pop
aad
mov
test
jmp
mov
clc
test
add
inc
cmp
mov
in
lock
jg
add
sub
cmps
fidiv
(bad)
out
mov
jg
ss
cli
and
dec
sbb
lahf
sub
inc
outs
bound
shl
xchg
inc
data16
add
mov
mov
into
and
clc
push
or
fsub
pop
push
hlt
push
cmp
fwait
inc
fwait
mov
and
cmp
sbb
or
shl
dec
add
jg
das
(bad)
iret
es
cmp
stc
add
inc
mov
and
adc
sub
pop
xchg
jnp
aam
jno
mov
jmp
xor
cmp
push
mov
xlat
sub
cs
in
loope
rol
out
push
or
push
or
(bad)
idiv
pop
mov
inc
movs
outs
test
dec
cmp
cmp
lahf
fs
push
jo
inc
push
pop
dec
(bad)
ret
cmp
sbb
mov
cmp
icebp
push
adc
(bad)
dec
inc
pop
jae
fstp
aad
punpckhdq
in
aam
adc
inc
or
into
int
mov
sbb
loop
hlt
push
xchg
imul
jp
pop
fnstcw
push
cwde
movs
clc
jp
fwait
jmp
scas
imul
sbb
fisub
int3
push
stos
mov
out
cmps
dec
hlt
lock
sti
push
adc
stos
fisub
adc
in
ret
push
inc
jmp
cwde
int3
push
rcr
pop
mov
fcmovbe
lock
loope
lods
jecxz
or
mov
inc
dec
gs
dec
mov
xor
adc
jbe
or
test
mov
mov
xchg
dec
loopne
sub
rcr
(bad)
and
and
xor
fwait
jmp
cmp
xchg
push
cmp
ins
lds
pop
cld
xchg
mov
push
inc
lock
rcl
xchg
sub
out
inc
xchg
sar
and
into
cdq
and
xor
nop
pusha
lahf
cmc
push
adc
(bad)
push
pop
lods
cmp
in
imul
pop
or
sub
sbb
add
pop
add
xchg
adc
jnp
mov
sub
daa
bound
cli
fild
jne
out
les
jge
es
jecxz
out
mov
inc
and
and
cmp
adc
dec
xlat
ror
cmps
or
cmps
es
addr16
mov
pop
push
in
mov
adc
sbb
je
dec
push
sub
clc
sbb
pop
clc
test
or
bound
or
leave
jl
inc
xlat
out
ins
mov
retf
stos
test
fxam
add
retf
mov
xor
push
adc
adc
dec
or
sbb
add
lds
(bad)
cmp
in
popa
outs
mov
jo
xor
cmp
dec
push
adc
cmps
ss
jle
mov
div
pop
pop
jecxz
scas
cmp
aas
push
jg
cli
idiv
jge
jo
std
xchg
icebp
adc
loop
adc
pop
jne
into
out
retf
push
cmp
push
mov
call
mov
in
call
aas
pop
mov
sbb
sbb
adc
aam
mov
push
mov
div
jl
add
jle
ror
scas
push
mov
sub
out
imul
pop
jbe
outs
in
rcr
jo
or
mov
(bad)
les
jno
cmc
int
shr
xor
stos
lahf
(bad)
enter
pop
mov
jb
jmp
sbb
jne
xor
xlat
div
push
or
aaa
fisub
ds
or
xor
das
dec
xor
lock
ins
ins
(bad)
mov
retf
inc
outs
pushf
and
lock
es
popf
sti
mov
sub
push
fidiv
mov
mov
ror
sti
fadd
mov
inc
cmp
dec
lods
or
push
sti
push
add
jbe
push
cmp
jp
loop
xchg
fist
mov
and
mov
inc
int3
dec
and
out
and
add
jns
and
cs
(bad)
pop
or
inc
(bad)
add
leave
(bad)
int3
adc
cli
push
or
test
pop
loop
jo
scas
rep
cmp
cmc
jns
ret
(bad)
test
xor
out
pop
div
or
fcmove
mov
mov
in
ret
push
in
es
xchg
dec
hlt
(bad)
add
pop
sbb
stos
out
xor
xchg
lods
loope
cli
(bad)
or
cdq
add
push
mov
add
cmp
jne
in
push
push
mov
inc
mov
or
jl
movs
pop
inc
ja
dec
dec
jb
lods
add
mov
push
in
mov
add
pusha
rcr
in
test
popa
lea
outs
neg
loop
rol
aas
xchg
int3
pop
lea
mov
(bad)
xchg
ficomp
jle
push
lods
or
xor
sbb
imul
dec
nop
mov
(bad)
cmps
in
xchg
sub
(bad)
out
sti
mov
dec
loope
inc
sti
mov
call
push
xchg
cmp
aaa
xor
pusha
fdiv
add
pop
test
mov
test
fwait
xchg
inc
mov
(bad)
jbe
mov
and
xchg
mov
ret
mov
mov
and
push
mov
sbb
cdq
outs
iret
mov
adc
mov
inc
push
inc
in
test
and
cmp
ds
or
pusha
mov
and
pop
loopne
int
inc
sbb
pusha
and
fwait
add
add
pop
inc
sub
es
inc
add
pop
loopne
jg
mov
xor
fisttp
cli
add
rol
movs
jg
popf
mov
cmc
or
xchg
sub
sub
mov
out
lods
hlt
mov
bound
fwait
sub
aaa
in
adc
shr
xor
ror
icebp
icebp
add
(bad)
push
nop
dec
movs
(bad)
fld
push
and
retf
jp
aas
ss
push
xchg
dec
fiadd
cld
cmp
mov
add
icebp
sbb
or
sub
mov
popf
xor
cwde
fcomip
dec
test
adc
ror
add
push
push
xchg
sar
push
rcr
movs
cdq
cmp
xchg
xchg
loopne
cmp
jno
mov
add
xor
and
sbb
das
xlat
jbe
jae
sub
dec
cmp
dec
bound
mov
inc
stos
jl
cmp
or
les
xlat
ret
lock
in
pop
sub
cmp
mov
cwde
ds
inc
pop
mov
add
pop
popf
lahf
es
add
lods
adc
out
sub
loop
add
clc
retf
dec
dec
fild
jle
cs
aad
xor
outs
leave
test
xchg
into
into
aaa
cmp
sar
dec
or
lea
inc
lods
gs
and
inc
xor
pop
jo
lds
inc
cdq
add
jp
cld
clc
lahf
jmp
or
sbb
icebp
push
test
or
add
scas
nop
add
mov
stos
jno
push
fwait
sbb
retf
nop
fstp
mov
retf
pop
lahf
mov
stc
jo
pop
inc
push
out
sbb
pusha
cs
mov
sub
inc
mov
xor
call
jno
outs
das
out
push
cmp
jecxz
repz
out
mov
jb
int3
mov
fadd
loope
mov
pop
pop
xchg
in
dec
xchg
movs
or
mov
cmps
dec
push
or
clc
ret
xlat
xor
into
cmc
mov
into
dec
xor
jno
(bad)
mov
jl
(bad)
jmp
pop
add
mov
xchg
adc
and
out
into
xor
mov
scas
(bad)
repz
jle
lds
sbb
inc
cmp
daa
mov
mov
out
xchg
(bad)
sub
je
or
and
jno
or
movs
(bad)
cdq
jbe
sbb
pop
ret
jmp
jle
xchg
call
or
sub
sbb
mov
stos
cmp
fnstsw
les
jno
or
ficomp
push
sub
arpl
mov
push
dec
add
jmp
cmp
add
es
cmp
and
out
clc
mov
xlat
fmul
es
out
test
sub
add
dec
arpl
pop
in
add
lods
jg
inc
cmp
mov
shr
test
mov
mov
inc
inc
cmc
(bad)
scas
sub
push
test
mov
hlt
scas
lea
inc
lahf
cmp
loopne
push
fwait
push
or
cmps
sub
std
push
pop
lds
scas
stos
outs
sti
loopne
idiv
inc
shl
rcr
and
pop
popf
aas
test
lahf
sbb
cmp
pop
enter
les
jne
add
arpl
call
das
xchg
adc
addr16
xchg
pop
mov
bound
and
xchg
mov
ins
add
fmul
leave
ret
and
mov
test
sub
inc
out
cmp
je
cdq
or
and
cmp
popa
stos
sahf
cs
pushf
jbe
inc
into
mov
cmpxchg
mov
movs
mov
int3
jb
add
imul
loop
movs
ret
imul
(bad)
sbb
pop
ins
fwait
test
mov
dec
cmc
pushf
nop
xchg
retf
lds
out
in
ror
push
cmps
cmp
jne
xchg
rcr
pushf
mov
(bad)
mov
cmp
pop
dec
sub
or
pop
int
lds
lods
pusha
push
push
push
or
sbb
mov
(bad)
xor
out
pop
scas
dec
clc
pop
les
mov
pop
rol
mov
sub
mov
aaa
mov
mov
cmp
int3
or
inc
xchg
out
dec
or
cmps
add
push
sbb
pop
sar
sbb
fsubr
pop
out
(bad)
scas
mov
cld
je
cmp
xor
xchg
pop
dec
call
mov
mov
cmp
sahf
jecxz
int3
mov
mov
mov
and
je
and
mov
test
cmc
outs
in
les
mov
jmp
push
loope
repnz
imul
sbb
call
inc
cli
test
cmc
iret
pop
and
(bad)
(bad)
push
dec
cmp
daa
int
push
push
mov
or
out
nop
or
stc
jns
pop
test
les
fcomp
sti
in
and
mov
std
daa
stos
jb
(bad)
and
mov
and
sbb
jp
shr
or
pushf
sub
mov
mov
push
jmp
push
or
scas
mov
popf
push
leave
fist
movs
out
xrelease
outs
fwait
lea
bnd
imul
mov
jecxz
or
cmp
dec
fcmovnb
add
imul
scas
daa
iret
leave
adc
loop
adc
rcl
(bad)
in
imul
(bad)
mov
shl
push
push
pusha
rcl
jo
xor
daa
add
pop
test
popa
out
push
fs
(bad)
ret
push
xchg
inc
inc
or
add
and
fidiv
jno
xchg
adc
push
rcl
lea
int
mov
mov
mov
shl
cmps
mov
dec
in
sub
ins
imul
mov
or
push
rcl
cmps
or
push
gs
push
mov
pop
dec
fbld
test
pop
mov
cmps
pusha
ret
ins
clc
lods
mov
jecxz
int
pop
iret
mov
imul
mov
icebp
movs
jge
xchg
aaa
call
lock
and
sub
cmc
cwde
sbb
push
pop
(bad)
es
jle
fmul
sbb
cmp
mov
ror
ret
and
mov
fwait
das
and
sub
xor
(bad)
sar
xor
push
sub
test
jmp
sub
pop
out
in
or
pop
cli
into
arpl
mov
mov
pop
inc
(bad)
push
mov
adc
or
retf
mov
shl
xchg
cmovo
repz
and
or
adc
inc
push
(bad)
fist
xchg
pusha
or
mov
leave
aaa
push
push
sub
xlat
loope
pop
adc
mov
adc
loop
add
sub
stos
icebp
pop
mov
push
retf
ds
dec
out
icebp
mov
push
inc
or
adc
sub
mov
and
mov
in
repz
pop
pop
and
rol
or
into
push
sbb
out
fisub
add
mov
int3
sar
test
or
mov
push
aam
adc
cmp
mov
call
sbb
cdq
out
test
cmp
mov
fstp
cwde
fst
enter
movs
dec
add
retf
cwde
cmp
push
fwait
into
xchg
inc
aad
ss
ins
xor
xchg
xchg
bnd
jne
push
dec
mov
(bad)
adc
fimul
bnd
cli
or
mov
loope
or
adc
add
push
cmp
lods
push
out
xor
inc
mov
hlt
mov
push
jl
int3
out
mov
cmps
push
adc
sub
xchg
lds
cdq
xchg
test
xor
add
imul
sar
xlat
imul
xorps
sub
lods
ror
and
enter
sbb
xchg
add
mov
and
(bad)
loope
(bad)
pop
movs
inc
mov
ret
loopne
adc
jecxz
mov
das
ror
inc
or
jo
(bad)
and
add
inc
pushf
gs
mov
mov
hlt
or
mov
int3
xchg
mov
sbb
lds
sub
mov
test
mov
loop
xor
adc
in
clc
bound
cmc
jns
sub
dec
stos
mov
xchg
xor
aas
or
pop
fisttp
ret
(bad)
or
xor
mov
aaa
jbe
and
adc
pop
fstp
mov
adc
mov
js
fcmovnbe
clc
xlat
fidiv
push
pushf
and
rol
test
and
shl
and
js
and
mov
xchg
push
dec
dec
sar
push
sbb
sub
sub
ret
xchg
dec
push
xor
nop
sbb
push
into
mov
hlt
mov
mov
xchg
(bad)
xor
pop
inc
xchg
icebp
vmovsd
gs
into
test
add
mov
(bad)
ja
xor
jge
stos
pop
test
add
add
mov
dec
and
aas
(bad)
aad
loopne
cmp
xor
mov
retf
cmp
pop
cmp
mov
cdq
or
inc
jnp
jp
pushf
cmp
xchg
mov
xchg
je
jne
into
mov
imul
test
dec
mov
sahf
mov
sti
mov
jbe
xchg
mov
lds
pop
xchg
sub
je
mov
mov
lods
cmc
outs
sbb
pop
mov
dec
leave
aas
loop
xchg
sub
mov
imul
pop
inc
push
jp
xor
popa
jge
pop
or
loopne
xchg
mov
cwde
lods
mov
sbb
hlt
jbe
or
rcr
nop
add
neg
not
sbb
pop
xchg
cwde
or
mov
pop
(bad)
stos
ins
xor
(bad)
push
popa
push
aaa
movs
cmp
push
rol
scas
sbb
mov
cdq
movs
out
imul
inc
stos
in
jae
add
(bad)
mov
pusha
sbb
jmp
and
inc
add
mov
mov
mov
cmp
sub
cdq
inc
mov
jg
jge
(bad)
dec
(bad)
and
push
or
les
pop
mov
sub
mov
xchg
cli
mov
dec
cmps
jae
fcmovnb
lds
(bad)
lock
(bad)
sbb
sbb
inc
xchg
hlt
addr16
retf
ds
movs
pop
inc
cmp
shr
pop
xchg
outs
or
aaa
or
xchg
lahf
mov
adc
xchg
pop
sbb
jg
and
sbb
clc
add
push
mov
outs
cmp
mov
adc
pop
ja
mov
pop
mov
idiv
push
movs
into
inc
push
xor
cmp
adc
pop
outs
jae
in
fwait
mov
mov
in
xor
stc
pop
sub
add
and
adc
cmps
mov
imul
adc
jl
fnstsw
cmps
sahf
adc
xor
push
imul
rol
mov
push
add
sub
dec
scas
inc
add
cmp
cdq
out
pop
xor
lahf
(bad)
mov
retf
and
mov
adc
pop
push
test
pop
shl
push
scas
(bad)
cmp
push
in
jo
enter
dec
sub
shl
dec
jns
sub
push
in
(bad)
sahf
lea
outs
popa
inc
stos
adc
lods
(bad)
loop
call
adc
out
push
push
cmp
sar
cmp
gs
rol
add
popf
pop
pop
pushf
jl
js
cmp
in
and
bound
call
lahf
cmps
in
ss
cmp
ror
in
inc
int
std
or
out
gs
shl
movs
sub
popa
clc
inc
inc
nop
daa
push
std
add
mov
push
leave
lock
push
push
ja
cwde
cmp
popa
clc
inc
int3
mov
dec
xor
bound
xchg
pop
adc
mov
dec
jmp
push
mov
out
rol
ds
mov
sti
dec
(bad)
(bad)
fmul
mov
mov
fistp
fisttp
sbb
cmp
aaa
sahf
dec
ja
or
(bad)
shr
push
imul
jl
cmp
mov
ficom
sub
lods
outs
add
and
xor
pusha
mov
lea
cli
in
inc
add
popf
dec
sti
jecxz
jle
(bad)
fstp
sub
test
xchg
imul
lods
add
loop
(bad)
xor
fucomp
mov
cdq
add
adc
test
add
ins
fnstsw
lds
popf
pop
mov
aas
loop
cmp
outs
dec
repnz
clc
cmps
sbb
jae
out
dec
std
repz
sbb
fst
dec
aaa
mov
pop
mov
push
fadd
mov
xlat
mov
mov
popf
(bad)
jbe
lea
sbb
pushf
not
dec
call
test
jae
cs
js
dec
xchg
dec
gs
sti
mov
mov
call
pop
les
or
ins
ret
lahf
rcl
in
mov
fiadd
jnp
sub
(bad)
push
je
adc
jmp
fisubr
fstp
xor
or
jb
or
jl
inc
dec
xchg
xchg
xor
(bad)
scas
or
dec
add
inc
pop
fisub
or
icebp
scas
loope
sbb
ja
cdq
add
clc
nop
out
add
pop
and
mov
jnp
(bad)
cmp
mov
mov
retf
stos
nop
in
fidivr
fsubrp
and
xchg
bound
bound
stos
lods
icebp
stc
loopne
in
and
ret
or
test
pop
mov
ins
mov
pop
mov
int
test
movs
fs
movs
pop
push
lea
mov
cmp
call
cmp
pop
jne
sub
ret
push
mov
repz
out
xor
mov
push
bound
and
rol
ror
cdq
and
xchg
cld
mov
and
mov
and
jle
sub
lahf
adc
inc
mov
into
fs
sbb
(bad)
push
and
cmps
add
mov
push
sbb
pop
dec
adc
ins
or
mov
mov
aas
add
adc
(bad)
push
mov
cmp
test
push
ror
in
pop
or
inc
mov
rol
inc
xchg
hlt
sub
pop
push
xchg
retf
lock
and
jge
stos
sub
ror
push
or
mov
sbb
dec
loopne
sbb
and
push
nop
cmc
jb
push
movs
ins
(bad)
jmp
or
out
inc
fsubr
cld
ret
xor
in
fmul
mov
je
sub
lahf
jnp
sbb
ret
test
call
das
jbe
adc
bnd
jp
hlt
sbb
xor
call
lea
adc
dec
repnz
repz
in
in
les
jmp
jle
clc
xchg
lea
pop
mov
stc
push
xor
or
(bad)
inc
jge
in
movs
mov
jne
popa
fcomp
add
loopne
or
cmp
cdq
repnz
cmc
mov
stc
push
int3
or
lds
push
and
jl
sub
xchg
dec
sti
cmps
mov
dec
stc
sub
out
jnp
icebp
lock
scas
pop
addr16
jle
adc
(bad)
loop
fs
out
mov
stc
push
jae
sub
push
jge
and
out
push
rcr
push
jge
fisubr
sbb
jno
imul
ds
and
add
(bad)
jno
(bad)
cld
jmp
(bad)
je
inc
xchg
pusha
rol
clc
es
pop
push
fnstcw
sbb
push
icebp
adc
hlt
pop
lods
lea
mov
add
sub
shr
adc
fucomi
in
inc
stc
mov
push
das
xchg
mov
shl
ror
js
ins
push
les
adc
es
pop
movs
xchg
cs
pop
(bad)
clc
lods
cmc
test
mov
repz
mov
fdivr
jecxz
cdq
call
out
cwde
xchg
fsubr
loope
xchg
nop
or
cmp
dec
pushf
jecxz
xchg
mov
cli
(bad)
call
push
mov
out
cmp
ror
xor
dec
leave
mov
xor
jge
in
stos
xor
out
sahf
push
sub
cmc
xor
fst
dec
or
push
xchg
mov
mov
mov
gs
mov
outs
in
sbb
dec
aaa
or
call
loope
outs
adc
jg
push
push
addr16
stos
movs
push
pop
mov
je
add
sbb
mov
lods
adc
mov
fdivrp
pop
inc
xor
or
pop
shl
jo
push
fstp
and
adc
push
adc
sub
test
mov
pop
push
stc
inc
repz
mov
sub
xchg
call
mov
cmova
pop
dec
and
mov
sub
xlat
mov
xor
inc
std
repz
fldenv
inc
sar
or
cld
int
mov
dec
pusha
fisttp
xor
fdivr
mov
or
mov
add
add
sahf
fstp
xor
das
sbb
std
add
cmp
pop
addr16
mov
mov
ret
or
add
clc
mov
xor
into
mov
inc
outs
inc
pop
outs
and
xor
lahf
fdivr
clc
inc
les
pop
daa
data16
cmp
inc
sbb
dec
push
cmp
add
call
sub
out
enter
(bad)
or
not
cmp
outs
rol
shl
pusha
xchg
xchg
sub
cmp
lahf
loope
add
jecxz
mov
sbb
mov
pop
aas
inc
movs
popf
or
sub
lods
shr
test
das
cwde
mov
js
mov
fisubr
push
xchg
lahf
xlat
lods
stc
cmp
adc
(bad)
in
loope
xor
mov
aas
xchg
jmp
sbb
popa
sub
ror
add
mov
jno
femms
sub
or
in
mov
inc
or
xor
sub
adc
arpl
test
pop
pop
hlt
xchg
ret
dec
cmps
fst
dec
push
test
in
fisubr
mov
mov
lods
sbb
loopne
adc
movs
jbe
pop
aas
std
add
mov
mov
test
xchg
aaa
add
movs
push
adc
ret
push
ins
dec
mov
movs
adc
lods
push
mov
jb
mov
adc
movs
mov
cld
sbb
mov
mov
in
cdq
mov
fcmovne
ss
mov
sbb
inc
out
dec
movs
jmp
scas
int3
rol
and
imul
iret
loopne
cmps
jl
and
jb
mov
lods
cmp
aad
dec
out
or
es
aas
cmp
push
xchg
(bad)
scas
mov
aas
aam
mov
inc
add
cmp
jecxz
jp
(bad)
test
cld
(bad)
mov
test
ss
inc
adc
stc
push
inc
mov
cli
addr16
int
std
int
sub
pop
cmc
inc
mov
mov
pop
nop
xchg
pop
mov
mov
pushf
dec
icebp
iret
adc
outs
sub
ins
xor
dec
std
adc
int
int3
cs
popa
outs
sbb
mov
push
sar
pop
into
jo
retf
pushf
sbb
pop
fs
xchg
imul
mov
and
test
sbb
icebp
rcl
xor
push
cdq
lds
xchg
mov
ds
ror
test
fsubr
xchg
aad
(bad)
movs
push
dec
cmp
(bad)
aas
lahf
and
test
mov
mov
fld
xchg
push
int
dec
mov
loope
add
rol
push
shl
loopne
aaa
je
arpl
and
pop
leave
pushf
cwde
mov
(bad)
movs
clc
and
pop
shl
gs
test
cmp
test
adc
(bad)
jge
xchg
push
pop
out
enter
loopne
(bad)
xor
and
int
retf
and
inc
jb
ret
push
cmp
xchg
in
les
and
dec
sub
call
ja
mov
dec
imul
sbb
dec
rol
xor
or
movs
test
xchg
pop
outs
adc
add
(bad)
stos
icebp
jmp
imul
pop
daa
pop
ror
mov
mov
cld
and
jne
xor
adc
pusha
ins
ins
ja
test
in
call
out
pushf
cmp
pop
dec
jle
jmp
inc
cli
cld
lock
pusha
mov
aaa
xor
sti
push
mov
cld
fst
jo
dec
jne
jmp
sbb
pop
jmp
fstp
idiv
fiadd
mov
popf
mov
hlt
push
dec
or
sbb
lock
ret
mov
fisub
outs
mov
xchg
inc
leave
je
adc
ret
(bad)
aas
mov
lds
xchg
pusha
adc
dec
xchg
cs
fisttp
xor
sbb
scas
cmp
fcmove
or
test
js
(bad)
jnp
fmul
xchg
push
mov
or
inc
(bad)
rol
cs
in
or
lods
inc
data16
dec
mov
(bad)
pop
scas
xor
retf
fisub
push
pop
jno
das
icebp
sbb
adc
ret
mov
retf
push
test
jle
xor
mov
mov
dec
and
stos
leave
pushf
mov
mov
lahf
xor
je
jo
adc
pop
popf
push
clc
xchg
pushf
cmp
fs
mov
dec
xchg
pop
inc
daa
shr
lahf
jbe
rcl
test
or
shr
pusha
loope
cmp
mov
and
stos
mov
push
aas
fbld
push
ins
xchg
lea
call
stos
xchg
stos
mov
adc
sar
push
fs
lds
arpl
xor
sub
push
and
cmp
mov
jl
mov
sub
xor
call
data16
adc
mov
mov
xor
daa
xor
mov
xor
pop
mov
push
push
ins
imul
pop
vminsd
and
pop
pusha
push
xor
cmc
data16
cmps
cmp
stos
mov
mov
lea
push
cdq
and
cmp
sti
add
or
push
test
inc
sub
cmp
mov
cmc
es
cdq
pop
(bad)
jl
xor
xor
jae
push
mov
scas
jl
cmps
inc
pop
jno
inc
fisttp
cmps
pusha
push
and
adc
ins
cmp
cwde
push
mov
jg
lock
xchg
daa
jl
sar
mov
and
adc
inc
xor
or
jbe
inc
int
fldl2t
pop
jp
adc
inc
stos
ds
jge
ffree
push
push
ret
cli
mov
movs
bound
mov
das
fcom
mov
(bad)
fsub
mov
lods
sti
sbb
jg
ds
fcom
push
push
cmp
mov
dec
or
lods
lea
jmp
cmps
xor
fisttp
pop
inc
xchg
imul
inc
dec
sub
fmulp
jl
das
jb
jl
mul
sbb
sub
outs
add
inc
test
push
loope
cwde
jg
sar
cmp
push
std
push
or
data16
aas
sbb
cmp
and
xor
retf
nop
pxor
mov
loop
rcr
cmp
(bad)
and
scas
sbb
in
and
ds
rcr
jae
imul
push
mov
stos
mov
fstp
outs
dec
movs
(bad)
aaa
push
ins
or
fwait
js
cmp
ror
xchg
dec
cwde
out
enter
repz
mov
aam
cmp
mov
and
jmp
icebp
and
in
pop
(bad)
add
(bad)
or
clc
shl
mov
in
dec
sbb
jae
push
cli
mov
cli
mov
aas
pop
out
retf
xor
fcmovnbe
pop
push
lock
mov
push
mov
leave
xor
sti
dec
cmp
push
xchg
push
test
inc
fsubp
arpl
inc
sub
jl
inc
data16
dec
scas
fld
pop
inc
or
sub
ret
sbb
(bad)
out
adc
into
loope
xor
fild
inc
(bad)
retf
(bad)
scas
xchg
icebp
cmps
fist
lea
add
lods
sub
fcom
add
cdq
cld
xchg
aad
jmp
cmp
sti
xor
(bad)
cmc
add
xor
sbb
stos
clc
in
mov
popf
and
mov
sub
outs
and
outs
clc
loopne
test
push
jge
bt
push
daa
in
or
jno
or
sbb
iret
movs
movs
cmps
stc
sbb
shr
mov
call
jno
lods
out
sbb
lea
test
iret
icebp
inc
or
xchg
or
pop
ds
vmovdqa
adc
or
in
add
std
push
cmp
test
xor
xor
and
aas
xor
test
lea
mov
ror
dec
enter
pop
sbb
xchg
lock
inc
ror
(bad)
pop
adc
nop
jne
(bad)
mov
dec
push
(bad)
mov
in
xchg
stos
aaa
jne
jp
fsubr
outs
dec
sbb
xchg
ret
jg
fwait
cmp
jp
jbe
push
out
ja
push
test
rcr
popa
clc
mov
les
push
call
xchg
retf
dec
out
ret
cmp
pop
stc
add
cmp
dec
adc
jp
add
arpl
cmp
lea
mov
(bad)
sub
inc
fwait
cld
xchg
outs
data16
inc
xchg
das
xchg
add
push
jnp
cmp
cs
or
scas
adc
popf
enter
inc
mov
cdq
cwde
xchg
push
or
aaa
pop
xor
call
xor
mov
fwait
and
cli
fild
cmp
mov
daa
xchg
(bad)
mov
adc
daa
je
cwde
fisttp
inc
rol
jb
mov
adc
mov
jne
ja
dec
add
rcr
ja
repz
or
dec
imul
out
(bad)
ret
ins
call
rcl
ins
cmp
pop
mov
mov
repnz
dec
scas
jnp
ss
jae
mov
shl
das
xlat
cmp
sub
test
bound
int3
jge
aaa
clc
xor
je
pop
ins
xchg
call
pop
test
mov
cmp
daa
into
add
push
neg
mov
(bad)
test
xchg
and
fiadd
mul
push
push
xor
imul
and
sbb
(bad)
out
nop
mov
lods
idiv
and
xchg
movs
mov
jl
aad
pop
gs
cmp
or
adc
fcom
clc
and
loop
mov
cmp
dec
inc
bnd
cld
mov
jns
push
sar
pop
mov
and
int
mov
xchg
jae
daa
in
xlat
es
cdq
es
jmp
icebp
ror
daa
adc
mov
outs
adc
adc
xor
repz
clc
pop
mov
and
(bad)
das
push
shl
and
jns
cmps
or
sti
mov
lahf
fidivr
or
scas
ror
inc
daa
retf
dec
and
test
(bad)
sti
fs
aad
ja
mov
xlat
test
fs
xchg
inc
out
jecxz
adc
sub
xchg
jo
mov
jmp
sub
test
and
iret
adc
mov
fwait
xchg
jne
jb
rcl
imul
or
cmp
sub
in
mov
or
call
mov
mov
jnp
call
aas
ror
retf
mov
sar
mov
fdivr
push
adc
std
cmps
jp
ja
pop
jl
mov
mov
arpl
push
mov
inc
sti
neg
inc
and
xchg
sar
inc
movs
inc
xchg
cmp
jo
pop
shr
dec
jnp
xor
scas
(bad)
shl
enter
es
loope
jg
fdivr
cmp
cli
xor
(bad)
ins
out
mov
mov
pop
or
ja
adc
clc
loope
mov
inc
jns
enter
cld
cli
xor
dec
test
pop
(bad)
lahf
es
lahf
loop
or
or
out
mov
mov
xor
push
dec
xor
das
xchg
(bad)
out
mov
dec
imul
gs
retf
push
jmp
xchg
and
(bad)
and
out
dec
cld
cmps
push
and
and
js
out
add
and
std
inc
sub
cmp
cmp
in
inc
mov
pop
call
out
lods
xchg
sbb
(bad)
mov
fwait
xor
cmp
fmul
push
stos
or
in
jmp
inc
cmp
mov
mov
dec
cmp
xchg
add
push
sub
jbe
dec
pusha
add
lds
mov
shl
xchg
sub
cs
repz
out
mov
fist
stc
inc
test
int3
mov
adc
pop
in
in
out
out
cwde
popf
lahf
fwait
jp
inc
call
mov
or
outs
dec
dec
mov
cmp
inc
(bad)
in
jns
inc
test
mov
xchg
xchg
adc
in
movs
pusha
or
dec
lods
clc
ins
scas
mov
pop
jbe
sbb
xchg
xchg
cwde
dec
xchg
cmps
push
sbb
and
push
loope
fist
xor
mov
idiv
jge
inc
lahf
in
add
xor
call
mov
push
inc
movs
jno
cwde
mov
xlat
out
std
push
cld
mov
jno
add
pushf
push
ret
pop
repz
add
imul
pop
inc
lds
cwde
cs
ret
pop
sub
mov
bound
mov
mov
das
xchg
jns
test
cmc
das
dec
adc
iret
data16
mov
and
and
xor
push
data16
add
lods
and
movs
cmp
mov
stos
adc
popf
mov
or
aad
call
ret
adc
int
or
add
jae
mov
cmp
adc
fsub
mov
mov
fmul
lods
out
sub
jo
les
cli
inc
mov
enter
scas
push
in
outs
js
imul
push
dec
rcr
pusha
jns
in
int3
out
add
adc
jae
pop
les
xchg
mov
cld
ins
popf
sub
adc
ins
push
push
dec
lods
std
jg
stc
cmp
pop
and
(bad)
(bad)
or
push
sbb
sbb
sub
inc
and
mov
ret
sbb
jo
cmp
aas
inc
dec
sbb
mov
sbb
js
adc
out
jno
cmp
cmp
or
mov
test
lea
jbe
shl
mov
cmp
aad
test
or
add
out
scas
mov
loope
lock
adc
sti
inc
push
adc
jb
xchg
mov
js
xor
pop
scas
dec
icebp
push
pop
cld
mov
xchg
xchg
cmps
pop
mov
cmp
mov
mov
mov
inc
jg
sub
and
lock
fild
in
add
jae
adc
das
scas
retf
jmp
int3
pop
xchg
sbb
xor
xchg
seto
sub
cmp
jmp
mov
(bad)
addr16
sub
add
pop
cmp
cs
inc
pop
mov
adc
leave
mov
pop
mov
pop
add
or
(bad)
data16
into
fs
and
xor
pop
adc
xlat
push
mov
adc
jmp
loop
adc
xchg
sub
xchg
sbb
imul
das
mov
es
jb
xchg
jl
push
call
xor
fst
fmul
arpl
test
icebp
cli
nop
mov
push
xor
pusha
int
aas
push
stc
es
mov
mov
pop
and
and
add
jl
cmc
sar
js
pop
jno
dec
imul
push
add
mov
mov
add
mov
int
xchg
dec
mov
mov
xor
jmp
fdiv
popa
xchg
fldenv
xchg
out
dec
add
and
push
jge
out
sub
xor
mov
cmp
out
mov
retf
lock
cmp
and
ret
movs
pop
cdq
ret
mov
inc
fistp
rol
dec
dec
int3
jno
lahf
xchg
ds
call
mov
dec
hlt
ss
mov
mov
mov
or
or
jnp
add
dec
xchg
xor
xor
std
dec
and
push
dec
jg
jns
fild
wbinvd
and
jecxz
pop
mov
or
push
(bad)
sti
sbb
loop
jns
push
aas
mov
ret
xor
call
and
push
mov
mov
pushf
shr
cmp
rcr
pop
repnz
inc
mov
and
pop
push
push
add
cmp
xor
pusha
lds
prefetchwt1
jno
rcl
scas
mov
outs
cmp
dec
push
push
mov
adc
xor
adc
test
push
das
xor
das
call
fdivr
xor
add
js
xchg
popa
add
xchg
dec
fbstp
in
pop
lods
fndisi(8087
in
das
fs
add
loope
fwait
je
jge
mov
js
mov
popa
stos
imul
mov
gs
mov
fwait
inc
cmps
in
mov
or
push
inc
xlat
add
or
fidivr
push
jp
arpl
mov
add
jmp
push
(bad)
and
xor
cmc
push
sub
retf
jmp
and
fdiv
xor
shl
or
xchg
icebp
and
loopne
neg
fs
mov
lods
test
jmp
cmc
or
cld
add
aam
pop
in
fs
addr16
pop
mov
arpl
in
dec
ret
cwde
xor
push
fwait
or
jmp
mov
int3
sbb
xchg
cmp
inc
retf
and
out
int
mov
lea
sub
daa
push
xchg
(bad)
jo
movs
hlt
lods
pop
popf
addr16
pop
clc
or
pop
push
lds
shl
fs
aas
sbb
adc
jg
mov
jb
out
mov
xor
ja
jo
sbb
jge
jne
stc
test
dec
jmp
xor
push
je
out
aaa
inc
dec
jo
sbb
aas
jns
pop
adc
mov
ds
sbb
dec
mov
pusha
loop
cmp
inc
pcmpeqb
das
or
neg
aas
icebp
mov
dec
in
jmp
add
icebp
int
aas
enter
inc
inc
xlat
(bad)
push
jge
retf
jne
mov
jge
push
push
aas
jne
pusha
push
ja
outs
sub
les
cmc
aaa
out
dec
scas
jb
retf
inc
jb
add
scas
push
xchg
inc
sar
xor
ficomp
outs
sti
xor
into
pop
dec
fild
xor
sbb
sub
sbb
mov
sbb
sahf
jp
imul
adc
or
in
inc
in
cmp
idiv
dec
jmp
jns
rcl
dec
ret
aaa
adc
(bad)
jno
pop
pop
xchg
mov
jecxz
popf
out
test
cmp
lods
jb
mov
aad
or
pop
cld
div
xchg
mov
jnp
int
add
icebp
push
fs
jnp
xchg
je
lahf
stos
cmp
pop
mov
sbb
xchg
push
shl
cmps
push
out
inc
into
jge
nop
sbb
int3
and
jl
sub
mov
sbb
push
jg
bound
mov
outs
mov
sub
fs
mov
ins
or
pop
aas
jecxz
sbb
int3
sub
cmps
ins
and
xor
rol
or
shl
sar
sub
xor
outs
or
ins
push
outs
dec
cmps
push
dec
or
stos
push
pop
add
pop
fld
mov
fxch
dec
loope
xchg
fistp
scas
sub
push
mov
cli
mov
scas
cmps
push
popf
or
dec
std
inc
xchg
(bad)
js
jae
call
mov
rol
jmp
add
test
dec
xchg
stos
or
test
push
jo
nop
mov
icebp
add
add
cmp
fiadd
popa
pop
add
retf
and
push
ins
or
and
sahf
call
fmul
dec
add
mov
adc
add
xchg
inc
mov
or
fidiv
sti
xor
out
fild
mov
stos
ret
push
outs
xchg
call
push
sbb
mov
jno
xor
mov
cli
xchg
pop
jmp
xor
mov
(bad)
jbe
sub
clc
jle
in
into
cld
and
sbb
outs
or
jno
jp
(bad)
xlat
shr
sbb
xchg
test
sub
mov
or
ror
je
adc
jmp
call
sbb
fsubr
push
in
mov
loopne
fisubr
(bad)
lds
test
movs
xchg
cs
pop
and
adc
jp
ins
ja
(bad)
cmps
jae
mov
sub
inc
clc
repnz
in
and
cmp
shr
jp
xchg
mov
xchg
idiv
into
sub
mov
mov
psrlq
clc
and
mul
sar
in
loope
jge
in
lahf
cmp
inc
fnstsw
js
dec
xchg
dec
std
mov
pop
xor
jmp
mov
push
leave
sbb
dec
cmp
outs
pop
imul
test
inc
xor
sbb
cmp
dec
(bad)
dec
ret
shl
data16
stos
mov
ret
das
lods
mov
mov
mov
fisttp
fs
(bad)
loopne
jns
mov
and
es
mov
dec
and
add
inc
loop
mov
daa
daa
shl
jnp
sub
loope
and
mov
aad
dec
sahf
aad
les
pop
push
mov
cmp
inc
add
mov
rcl
mov
add
inc
mov
ret
ins
and
jbe
test
fidiv
int3
sub
shl
add
fisub
in
test
push
out
les
inc
outs
cwde
ret
popf
xor
push
test
pusha
add
clc
test
push
outs
xor
add
(bad)
jg
jle
jle
lds
mov
sahf
add
sub
stos
push
sub
cmp
xor
xchg
pop
int3
pop
ins
daa
sbb
rcl
movs
fidiv
and
or
adc
aaa
jno
sbb
fdiv
xchg
inc
mov
cmp
xchg
data16
and
and
ret
ds
repz
xchg
add
rol
pop
cmp
mov
xchg
dec
dec
clc
dec
or
push
push
rol
mov
cmps
pop
lods
test
aas
imul
int
jl
push
je
jmp
pop
xchg
clc
in
mul
pop
adc
xchg
fnsave
(bad)
pusha
dec
mov
xor
enter
jnp
xchg
shl
movs
retf
mov
scas
lock
mov
pop
mov
movs
mov
shl
push
inc
dec
push
inc
and
sub
sbb
push
add
es
sub
loope
cmp
bound
fnsave
cmp
xor
cwde
(bad)
push
sbb
clc
aas
retf
and
mov
pop
dec
xor
push
mov
push
mov
je
mov
daa
adc
je
out
jbe
jb
shl
test
movs
xchg
rcr
mov
inc
(bad)
outs
imul
mov
mov
repnz
daa
dec
rcl
mov
pusha
movs
lods
jnp
in
inc
pop
push
cmp
retf
(bad)
lock
call
push
popf
sbb
xor
mov
aas
jae
outs
(bad)
sbb
iret
scas
adc
xchg
outs
or
ja
jecxz
mov
mov
stos
popa
pop
or
inc
or
call
mov
rcl
movs
fild
add
jl
mul
ret
push
xchg
pop
(bad)
push
mov
test
sbb
fs
imul
nop
fisub
shl
out
add
adc
gs
cmp
vfmsubadd231ps
adc
sbb
xor
rol
repnz
mov
out
mov
xchg
pop
and
mov
xchg
xor
xchg
dec
jb
pop
mov
mov
adc
icebp
jle
push
(bad)
push
add
cld
shl
jne
and
inc
sbb
mov
adc
mov
xor
stc
iret
iret
aam
sbb
loopne
(bad)
xor
outs
mov
cwde
add
jp
ja
jae
movs
mov
pop
jne
(bad)
mov
dec
or
xor
shr
mov
cmp
mov
cmp
stos
js
pusha
ret
lea
call
mov
mov
shl
fld
ror
ss
jle
pop
sub
and
jmp
xchg
das
fs
out
cmp
(bad)
jecxz
call
mov
nop
in
out
ja
lock
mul
jnp
ins
sbb
ret
mov
int3
ds
ds
sub
inc
dec
repz
lds
hlt
inc
dec
test
xchg
dec
adc
push
leave
cmps
shr
ss
pfadd
dec
mov
lods
add
dec
dec
adc
rcl
push
push
repz
shl
pusha
les
cwde
add
add
test
jnp
popf
mov
adc
loop
ja
push
cld
adc
push
fld
out
outs
cdq
xchg
dec
sub
push
dec
inc
xor
(bad)
mov
sar
das
mov
rol
scas
jo
loope
ret
add
mov
dec
ror
sub
xor
dec
sahf
ret
mov
das
stos
fadd
mov
pop
cmp
xchg
pop
cli
jp
mov
push
pop
sub
std
adc
push
or
jg
nop
xchg
lahf
push
cmp
xchg
test
xor
dec
xchg
into
in
add
push
cmp
and
fwait
clc
push
sti
neg
xor
ins
adc
mov
pop
xchg
adc
add
cwde
pop
add
call
pop
dec
jmp
push
adc
xlat
jno
inc
pop
mov
xor
jo
jecxz
cmp
mov
mov
movs
mov
into
sub
push
dec
call
outs
repnz
mov
test
xchg
in
xor
test
mov
mov
loop
(bad)
out
or
das
jne
(bad)
xor
push
aas
cmps
sub
pop
div
xchg
or
jnp
push
xchg
jae
or
sub
push
das
xor
aaa
mov
addr16
push
out
adc
ret
int
jle
stos
dec
out
pop
das
cmps
gs
out
int3
mov
in
xchg
mul
sub
add
cli
cmps
pop
push
int3
push
sub
retf
xchg
lods
repnz
retf
dec
mov
lds
loope
out
pusha
inc
pop
mov
and
pop
call
mov
sahf
test
stos
stos
nop
pushf
lahf
int
nop
add
mov
sbb
movs
cmc
or
jge
ret
fsub
das
xchg
addr16
nop
js
aad
xchg
mov
or
loope
inc
sbb
xchg
cmp
cmp
inc
cmp
js
sub
inc
test
mov
pop
push
into
aas
(bad)
aaa
out
(bad)
fisubr
mov
push
iret
or
data16
xchg
xlat
sub
xor
repnz
pop
cmps
test
call
push
push
jns
ret
adc
jle
push
or
mov
push
mul
fincstp
or
jmp
or
popa
pop
outs
or
adc
in
inc
fisttp
pop
cdq
xchg
lock
xchg
pop
jnp
or
int3
mov
jmp
sbb
sbb
cmp
pop
adc
jle
fst
mov
daa
fucomi
inc
push
test
jne
and
cmp
adc
jp
das
sbb
jl
xor
das
mov
pop
or
pop
out
scas
xor
mov
cmp
xchg
js
retf
add
jb
sti
xor
scas
mov
retf
dec
push
mov
mov
or
mov
imul
xchg
cmp
inc
inc
jge
and
aaa
mov
repz
add
pusha
mov
es
sbb
cmp
xchg
xchg
mov
int
and
fiadd
dec
ja
enter
pushf
cmp
enter
call
arpl
(bad)
aaa
xchg
push
outs
cld
sbb
pop
(bad)
(bad)
jnp
or
nop
inc
les
in
out
call
inc
mov
jns
jo
jle
adc
cmc
push
and
cmp
adc
out
sub
add
xchg
lock
cmp
cmp
shr
bound
xchg
lods
dec
iret
js
adc
mov
jns
jle
push
jp
ds
arpl
movs
aaa
inc
in
and
cmps
addr16
frstor
push
add
pop
call
in
retf
push
dec
pop
jle
jmp
packssdw
int3
mov
xchg
mov
(bad)
fldenv
and
ja
out
xor
mov
mov
cli
aas
cmps
std
mov
(bad)
or
xchg
or
fidiv
lds
out
test
lock
lods
add
mov
and
ins
out
test
imul
in
arpl
pop
xchg
sar
dec
test
push
leave
mov
mov
sub
packssdw
add
ficom
mov
cmp
dec
cs
xor
stos
(bad)
xor
cmp
and
mov
imul
(bad)
push
ins
push
cdq
call
call
ds
dec
pop
inc
fsub
into
retf
pop
stos
or
inc
daa
pop
or
add
pop
dec
push
jno
dec
sub
mov
(bad)
push
imul
jne
sub
xor
mov
add
mov
in
mov
dec
push
dec
shl
mov
jb
dec
fsub
pop
pushf
retf
into
push
(bad)
or
mov
(bad)
mov
ss
push
daa
and
push
leave
dec
ja
xchg
or
and
adc
and
mov
mov
push
ror
enter
icebp
xchg
jmp
imul
test
outs
neg
sub
push
jo
enter
jl
jnp
jge
xor
bound
mov
jmp
xchg
cmps
(bad)
shl
dec
cs
xchg
mov
or
and
mov
pusha
jne
scas
pushf
mov
xor
int
add
mov
inc
(bad)
aad
or
sub
xor
fimul
in
pop
pop
sub
mov
stc
or
jns
mov
lea
jne
sbb
and
test
add
inc
add
ror
push
xlat
aam
pop
mov
cdq
jb
arpl
les
pop
mov
out
rcr
das
jno
cmp
fistp
dec
scas
ins
aam
imul
nop
cmp
push
xchg
inc
mov
addr16
bound
cmp
xor
cmp
xor
xor
mov
vpxor
ins
shl
push
push
sub
in
cli
call
pop
fisub
xchg
mov
sub
and
jb
cli
clc
pusha
mov
cmps
inc
mov
mov
inc
sti
adc
jno
jecxz
or
mov
(bad)
hlt
sbb
sar
jne
adc
mov
sbb
pop
ss
sub
or
or
sub
dec
jl
ss
(bad)
jmp
jae
fucomp
and
adc
mov
dec
xchg
mov
iret
fstp
mov
pop
ds
popf
sbb
mov
push
mov
add
add
sar
mov
in
push
rol
popf
jno
jo
mov
imul
fistp
popf
inc
data16
mov
retf
imul
or
cmps
fadd
xor
cmp
pop
cmp
sar
pusha
aaa
jb
fxch
xchg
add
xchg
imul
push
(bad)
stos
dec
sub
aad
push
pop
mov
(bad)
movs
dec
add
sub
cmp
inc
dec
pop
seta
aam
popf
xchg
outs
sbb
pop
sahf
outs
ror
sbb
mov
sbb
ret
jno
bound
jecxz
or
(bad)
aad
lock
test
stos
push
xchg
push
arpl
cmp
setge
into
pushf
clc
and
cmp
add
sub
ins
nop
test
call
loope
mov
jnp
pop
dec
repnz
push
sbb
aas
sub
push
jbe
nop
clc
jg
add
lods
jp
pushf
mov
mov
push
adc
jl
loope
sbb
and
idiv
jb
jmp
imul
cmps
aam
and
xor
jmp
lock
test
pop
jle
ins
scas
nop
add
retf
and
cmp
data16
dec
lock
mov
push
xor
jb
sub
push
mov
mov
or
loope
cdq
cdq
ja
popf
fisub
cmp
mov
cmp
(bad)
cmp
cmp
into
fnsave
out
(bad)
aad
cld
daa
xor
sbb
sbb
out
sbb
arpl
popf
faddp
mov
adc
xchg
inc
adc
add
outs
add
adc
inc
cmps
loopne
inc
hlt
ret
cwde
das
push
aad
sbb
mov
inc
mov
call
int3
es
inc
xchg
jns
(bad)
and
push
test
sar
sub
in
mov
push
mov
pop
mov
inc
out
add
xchg
mov
rcl
enter
rcr
test
ret
pop
push
daa
xchg
mov
retf
imul
cwde
and
loopne
fcomp
arpl
shr
pop
cmc
(bad)
js
rcr
pop
sbb
xchg
repz
dec
ss
jne
dec
mov
test
and
je
mov
sbb
mov
icebp
loop
test
std
les
(bad)
ror
jge
add
mov
loopne
cmp
cmps
sub
sub
cmp
adc
mov
int3
out
(bad)
cmp
push
sar
xchg
mov
in
cmp
(bad)
mov
dec
dec
mov
or
stos
xor
rcr
das
hlt
sti
sbb
cmp
retf
mov
jne
push
icebp
sub
fdivr
not
stos
in
out
mov
jp
or
sbb
adc
jmp
add
add
adc
adc
arpl
cli
mov
fisttp
mov
adc
push
dec
pop
mov
push
lahf
pop
push
sti
daa
mov
add
outs
and
fild
and
call
and
jo
scas
mov
rcl
ja
jg
(bad)
dec
dec
test
jmp
cmps
jg
pop
push
cmps
(bad)
cmc
daa
fsub
pusha
sbb
and
mov
mov
push
xchg
(bad)
fisubr
adc
pop
jns
iret
vmptrst
add
sbb
out
xchg
data16
mov
mov
retf
mov
sbb
push
push
out
fiadd
pop
pop
js
or
fwait
inc
ins
push
es
mov
inc
fcomp
and
ret
aas
arpl
cld
adc
sbb
and
mov
icebp
push
sub
xor
jmp
pushf
add
leave
loop
push
jmp
xlat
and
sbb
test
push
cmp
sar
call
xor
jp
push
adc
mov
call
gs
and
aas
dec
loopne
pushf
cs
fild
add
push
ret
ins
xor
mov
mov
mul
adc
xchg
aad
sbb
imul
rol
hlt
xor
xchg
sbb
sub
movs
jmp
(bad)
add
sub
inc
jg
data16
jmp
out
addr16
test
or
in
jge
xor
push
or
push
cmps
es
pop
movs
dec
ins
push
push
push
sbb
lods
xchg
shr
addr16
inc
(bad)
adc
loopne
sahf
add
add
cmc
or
jle
lds
push
push
jae
std
sub
lahf
pop
dec
sahf
into
mov
ja
fnstenv
xchg
retf
xchg
pop
sub
daa
push
inc
out
push
(bad)
(bad)
sub
inc
jno
mov
sub
sar
lods
push
jg
pop
stos
xchg
sbb
push
repz
dec
adc
stc
call
pop
xor
jae
rol
shl
hlt
in
aad
xor
add
inc
and
fidiv
(bad)
psubq
dec
adc
aas
xlat
vpshab
ret
fbld
lds
push
mov
out
(bad)
push
mov
fs
adc
mov
cmp
fwait
cmps
ss
cmps
inc
fiadd
xchg
imul
adc
retf
pushf
add
mov
adc
jp
mov
and
repnz
xchg
test
call
ret
push
idiv
shl
cmp
xchg
(bad)
or
in
mov
into
jnp
ins
jmp
out
dec
dec
xchg
(bad)
daa
dec
mov
lods
cli
push
inc
xchg
sub
les
iret
lods
lods
shr
pop
ja
inc
lea
popa
xchg
cmp
pop
movs
cmp
ss
out
cwde
movsx
inc
in
adc
mov
cmp
jmp
pop
sub
sbb
mov
xor
sahf
dec
pop
xchg
mov
push
jno
mov
out
lds
call
adc
fisttp
xor
loopne
(bad)
inc
xchg
add
sub
mov
inc
ja
imul
cmp
aas
test
punpckldq
pop
shr
pop
std
mov
lea
push
inc
sbb
and
mov
stos
adc
dec
(bad)
shl
mov
fbstp
inc
push
xchg
jnp
push
jbe
loopne
mov
(bad)
fstp
pop
enter
(bad)
inc
rol
jl
push
(bad)
dec
or
(bad)
scas
aas
mov
xchg
jb
test
jg
(bad)
and
mov
dec
push
or
retf
cmc
dec
mov
add
pop
or
push
es
mov
xchg
shr
or
jnp
cld
and
sbb
push
aad
es
pop
jbe
test
stos
pop
test
lods
mov
fwait
outs
xor
mov
cld
das
mov
gs
ss
outs
jecxz
mov
pop
sbb
inc
add
mov
dec
out
cs
ret
mov
mov
dec
bound
out
pop
outs
scas
fcmovne
call
push
sbb
dec
adc
xor
jb
jbe
or
sub
les
inc
mov
cmp
lods
cwde
add
jo
push
jns
call
mov
aas
out
fwait
movs
adc
adc
call
neg
sar
rcr
or
mov
outs
xor
dec
fmul
mov
outs
xor
and
aaa
int3
add
adc
sub
add
adc
sbb
sub
mov
jae
ds
adc
es
push
xchg
pusha
mov
aas
nop
add
call
into
xchg
sbb
hlt
pop
or
cs
xlat
js
xchg
sub
imul
aas
je
sub
adc
in
and
ret
cmp
sub
cli
push
nop
das
ret
fsubr
xchg
lds
and
lock
loopne
add
leave
pusha
and
inc
das
loop
mov
push
pop
push
add
mov
push
stos
dec
pop
ret
xor
stos
fisub
int3
and
and
pop
or
xor
sti
or
mov
jmp
push
js
scas
sti
gs
fisub
cmp
sub
repnz
xchg
in
inc
fsub
inc
xlat
loopne
pop
mov
in
in
popa
lods
mov
push
or
(bad)
bndldx
dec
out
std
push
ret
imul
cmp
pop
xchg
bnd
mov
test
adc
inc
push
retf
mov
dec
or
aam
sbb
leave
or
out
retf
mov
mov
imul
dec
out
cmps
jae
jmp
pushw
xchg
int3
or
or
jmp
cmp
jmp
jl
jnp
and
in
out
xor
sbb
ret
retf
out
jmp
xchg
daa
retf
and
adc
dec
push
mov
mov
call
and
out
dec
push
xchg
imul
or
mov
inc
pop
out
popf
std
cmp
sbb
cwde
cwde
push
icebp
movs
inc
xor
mov
movs
test
jae
and
cmp
test
pop
repz
fsubr
dec
cmp
jp
sbb
je
sbb
xor
and
repnz
inc
cli
or
in
add
pop
jmp
mov
sub
imul
jmp
shr
bound
mov
aad
mov
jmp
fcom
ds
(bad)
inc
adc
sti
iret
jno
sbb
mov
pop
xchg
imul
retf
not
rcl
nop
loopne
dec
(bad)
je
jns
pop
mov
adc
and
(bad)
push
cmc
sbb
jae
in
imul
pop
xchg
int
xor
rcr
in
jns
pop
mov
add
cs
mov
mov
fxtract
xchg
push
mov
push
sub
mov
(bad)
mov
push
retf
inc
xchg
jne
mov
clc
iret
lea
loope
jbe
pusha
fmul
sbb
add
frstor
stos
cs
cs
mov
in
xor
in
mov
repz
sbb
push
rcl
inc
pop
data16
jmp
xchg
leave
jp
pop
test
out
loopne
sbb
mov
jmp
test
cmp
popa
add
or
mov
cs
xor
push
jb
pop
jp
sbb
js
mov
cmp
cld
or
nop
mov
not
mov
iret
pop
mov
inc
js
jmp
out
lahf
mov
mov
jge
jbe
lods
scas
sbb
pop
leave
jo
jne
mov
ja
out
fnstenv
pop
mov
out
loop
fsub
or
sbb
xchg
shr
adc
popf
jmp
add
out
ret
push
call
add
add
lds
sub
push
mov
not
mov
inc
dec
fisubr
test
stc
jne
imul
inc
jmp
fdivr
(bad)
cmp
arpl
and
push
pusha
or
stos
xchg
cmp
retf
jecxz
ss
jp
add
jno
enter
xor
fs
sub
sub
adc
mov
dec
adc
scas
inc
pop
xor
add
and
ds
push
es
push
dec
repz
das
cmp
ins
bound
adc
out
ret
add
dec
adc
xchg
loopne
mov
lds
mov
in
xlat
imul
lods
jne
and
in
jg
ins
dec
dec
in
sbb
jecxz
int
out
or
shrd
pop
lea
ret
stos
push
push
mov
test
push
fdivr
in
pop
mov
cmp
add
test
sbb
xor
dec
push
jns
movs
enter
pop
cdq
scas
pop
mov
mov
or
lods
mov
push
clc
push
repnz
iret
push
out
in
enter
fwait
shl
push
mov
jg
out
xor
add
pusha
and
(bad)
sbb
mov
ds
jno
popf
mov
dec
push
ins
sbb
(bad)
repnz
div
mov
inc
pop
mov
mov
das
jne
rcr
fwait
shr
into
or
add
in
cmps
lods
sbb
mov
and
push
repz
mov
push
rcl
pop
movs
fdivr
in
unpckhps
rol
js
ss
xchg
cmps
pusha
sbb
int3
test
ins
imul
sub
out
inc
push
nop
dec
mov
pusha
cli
fimul
jne
mov
and
call
aad
cwde
enter
mov
sbb
push
dec
push
jns
fs
jae
xchg
in
fs
retf
jns
xor
and
or
inc
loop
call
add
loope
inc
xor
les
neg
inc
xor
and
jg
ja
inc
xor
je
pop
cmp
aas
mov
mov
vmread
xchg
push
stc
test
int3
stc
adc
jae
fwait
popf
cwde
xchg
aad
mov
inc
out
cld
dec
dec
mov
mov
pushf
cmp
movs
test
mov
or
or
sbb
nop
cmp
sahf
push
xor
test
into
movs
xchg
add
pop
fmul
ffreep
jecxz
jb
pop
xor
test
jbe
xchg
scas
mov
test
mov
(bad)
and
test
lahf
mov
leave
push
arpl
cli
ret
imul
ror
push
cld
dec
mov
inc
out
aas
cmp
mov
retf
push
dec
ins
mov
(bad)
xor
mov
mov
push
mov
push
(bad)
out
and
jnp
jge
dec
push
adc
fidiv
sub
into
push
(bad)
(bad)
sub
loopne
out
push
cmp
add
rol
dec
cmp
dec
inc
jge
dec
pop
ja
fsub
xchg
xor
xor
sbb
stos
adc
pusha
lea
cmps
popa
pop
or
mov
in
loop
sbb
inc
sbb
pop
cmps
js
iret
cwde
push
cmp
jmp
cmp
or
or
lods
pop
push
out
cmp
cmp
aaa
ds
mov
enter
and
idiv
(bad)
movs
imul
lods
xchg
jnp
inc
or
ins
xor
scas
pop
fcmovnu
jb
maskmovq
div
pushf
sbb
lods
fisub
pusha
and
das
add
mov
sbb
call
stos
mov
loopne
pop
fnstenv
mov
pusha
mov
inc
les
mov
sar
enter
test
jmp
movs
xchg
and
adc
cmc
cmp
leave
sub
mov
fnstenv
or
mov
jp
cmp
pop
ins
mov
stc
ret
arpl
jbe
mov
jecxz
sub
test
jle
push
loopne
push
mov
(bad)
dec
fadd
sub
fcom
test
jecxz
xchg
std
fisttp
add
xchg
pop
popa
sub
enter
or
xor
or
add
ja
mov
push
xrelease
dec
ds
(bad)
pop
jmp
mov
add
jo
mov
xchg
fwait
neg
mov
sub
cmps
mov
cdq
fcom
mov
lds
addr16
js
rcl
adc
ret
sbb
jl
sahf
iret
adc
mov
inc
in
cmp
hlt
int
push
movs
add
mov
and
mov
mov
clc
mov
dec
pop
gs
inc
pushf
dec
sahf
es
ss
dec
mov
hlt
inc
jg
int3
rcl
fs
ret
lock
xchg
pop
mov
sbb
das
sbb
shl
pop
(bad)
dec
sahf
add
adc
retf
xor
outs
xchg
mov
call
mov
dec
cmp
shr
test
sbb
and
sbb
sbb
pushf
push
xchg
ret
icebp
jb
xor
mov
pop
xchg
stc
pop
fwait
lods
mov
or
outs
in
jns
push
sbb
mov
xchg
call
rcl
out
ds
scas
dec
pop
pop
add
in
and
sub
or
or
sbb
and
mov
push
add
fiadd
push
jno
dec
xor
mov
inc
iret
in
aas
inc
enter
inc
dec
and
(bad)
leave
das
daa
lds
mov
enter
xchg
xchg
push
scas
jecxz
mov
out
imul
nop
fldcw
int3
movs
stos
mov
inc
sbb
pop
mov
xchg
ins
pop
neg
bound
imul
aam
adc
mov
jmp
bound
call
mov
imul
sub
les
mov
retf
mov
xchg
mov
sub
xor
xor
inc
(bad)
xor
shl
shl
test
clc
stos
mov
out
sbb
add
adc
repz
(bad)
fnsetpm(287
and
mov
ja
adc
rol
fcom
add
pop
push
jae
clc
cwde
ds
mov
xor
(bad)
test
lods
sti
jge
dec
inc
dec
mov
and
movs
out
inc
nop
fbstp
inc
outs
push
inc
inc
mov
mov
fiadd
sbb
mov
(bad)
cmp
mov
dec
hlt
pop
mov
mov
xchg
xchg
leave
or
and
dec
loopne
mov
adc
mov
jp
cmc
test
dec
aad
in
sbb
mov
dec
xchg
lahf
jmp
ja
ret
mov
jecxz
push
lea
push
adc
mov
lock
xchg
pop
mov
test
add
pop
adc
mov
retf
pop
int3
fnsave
jae
mov
or
neg
xor
xchg
jo
ja
(bad)
fs
or
inc
adc
int3
or
sub
loop
in
xchg
cmc
inc
xor
xor
push
ficomp
or
xchg
aam
push
jae
jg
jbe
mov
loope
enter
mov
sar
div
data16
push
lea
das
xchg
dec
ret
and
inc
sbb
lds
adc
pop
xchg
(bad)
fld
jecxz
ins
(bad)
fldln2
lods
xor
in
imul
and
or
pop
cmp
pop
(bad)
mov
inc
jge
mov
fwait
movs
pop
jmp
push
push
dec
cmc
or
hlt
iret
(bad)
sbb
lods
mov
mov
xchg
jno
mov
mov
mov
adc
or
daa
push
pop
cld
mov
jbe
clc
cmps
pop
adc
fisub
scas
xchg
scas
mov
test
int
adc
test
mov
inc
cmp
jnp
add
mov
xchg
rcr
jmp
repz
add
outs
sub
sub
out
or
and
mov
retf
add
or
aas
xor
jp
cmp
push
push
jle
inc
mov
cwde
aaa
dec
in
mov
shr
jmp
cmps
pop
cmps
fisttp
fnstcw
scas
or
out
and
mov
out
fbld
add
movs
adc
dec
push
gs
cmps
inc
test
add
add
mov
iret
xor
add
jne
gs
shl
mov
xor
inc
mul
sti
mov
call
sti
jg
cld
pusha
shl
sub
jmp
pop
jmp
ins
and
arpl
outs
movs
pop
fdiv
push
popf
not
xchg
dec
jmp
adc
outs
les
int3
mov
push
ret
xchg
rcl
sbb
or
mov
pop
and
add
outs
ins
test
dec
bound
sbb
(bad)
stos
push
xchg
mov
mov
movs
test
and
dec
jg
dec
ss
das
gs
sub
mov
jecxz
outs
adc
inc
(bad)
into
dec
cwde
fild
jmp
and
and
iret
pop
mov
xchg
pop
cld
cvtdq2ps
dec
adc
movs
mov
jmp
xchg
dec
jmp
psubb
xchg
rol
cmp
jl
mov
std
ss
pushf
sub
sub
ins
aaa
jns
stos
pop
and
xchg
lods
clc
jnp
das
push
cmp
stc
jns
and
fwait
dec
push
aad
pop
mov
jl
cs
std
xchg
int
sbb
cli
push
daa
es
jg
test
popf
shr
cmp
out
rcr
cmp
jns
clc
mov
call
outs
xor
sbb
jne
xchg
shl
pop
cmp
(bad)
ds
ret
fnstsw
xor
ja
mov
push
cld
add
enter
nop
cmps
add
hlt
les
xchg
int
inc
dec
cdq
mov
test
stc
scas
xor
hlt
cli
fld
add
mov
sahf
jno
stc
nop
lea
lds
and
lds
or
not
repz
mov
lahf
aas
mov
into
adc
bound
pop
stos
pop
dec
rol
popa
mov
in
mov
fwait
mov
xor
push
xchg
jl
inc
inc
clc
sar
mov
push
scas
adc
and
repz
mov
mov
add
into
adc
jbe
arpl
and
test
dec
dec
fs
and
sbb
mov
or
jle
cmp
jnp
pop
pusha
mov
fldcw
adc
retf
and
mov
xor
jae
leave
nop
in
(bad)
and
fisubr
fdivr
pop
repz
test
inc
inc
dec
add
ror
fdiv
jp
cmps
cmp
inc
mov
arpl
int
jb
sub
loop
mov
ffreep
(bad)
rcr
mov
add
adc
mov
jmp
sti
aaa
popa
push
(bad)
jge
mov
stc
dec
mov
cmps
jno
xlat
jns
stc
mov
and
test
pop
xchg
mov
jle
push
cmc
lods
xchg
aad
mov
mov
sahf
rcr
dec
leave
pop
xchg
mov
std
adc
pop
jg
in
bound
cld
jmp
shl
sti
cdq
inc
iret
sahf
adc
dec
lods
mov
dec
add
sbb
sar
pop
lahf
lahf
jl
or
fnsave
inc
lea
fisttp
test
cmp
mov
and
cs
rol
das
jno
cli
push
and
dec
sub
pop
mov
inc
push
pusha
into
push
out
aas
push
mov
cld
dec
add
xchg
xor
jb
es
mov
add
popf
inc
mov
or
fstp
xor
mov
call
xchg
jnp
pop
std
je
xlat
sub
push
aam
sub
add
movs
mov
inc
pop
and
scas
shl
mov
xorps
fwait
xor
std
mov
inc
jmp
and
out
mov
jns
pop
jae
je
out
mov
xor
push
cmp
iret
xchg
mov
xor
std
ror
sbb
mov
call
loopne
adc
push
(bad)
jle
cmps
add
xchg
jecxz
lods
dec
pop
add
call
scas
xor
je
imul
aam
test
mov
dec
aad
(bad)
in
ins
stc
stos
jcxz
cmp
movs
in
pop
rol
cdq
sub
add
mov
mov
pop
dec
stc
je
push
jmp
mov
fsub
push
fwait
data16
(bad)
jl
adc
addr16
adc
xor
mov
sbb
cmp
and
lock
cmp
mov
pushf
imul
scas
add
adc
xor
fs
in
ins
mov
bound
sbb
and
dec
cmp
push
sub
fst
jne
jo
ja
mov
adc
(bad)
mov
adc
pop
xor
hlt
sahf
les
loop
jg
adc
or
retf
push
into
pop
outs
mov
mov
xor
cdq
ja
(bad)
movs
not
call
pop
rcl
push
movs
mov
data16
scas
fmul
or
inc
pmaxsw
rcr
enter
add
push
xor
fs
fmul
stc
push
xchg
and
jb
mov
xor
jbe
add
jl
xchg
(bad)
and
fisub
aas
xchg
jl
loop
xor
or
scas
retf
outs
fs
fwait
lahf
inc
and
mov
and
clc
add
cmp
mov
push
xchg
repnz
stos
xchg
lds
in
shl
aaa
dec
jb
dec
fist
and
shl
in
inc
je
sbb
and
push
inc
mov
(bad)
mov
cdq
jmp
les
or
pop
push
sub
mov
or
mov
pop
mov
lds
push
and
add
sbb
out
mov
jl
adc
xor
sub
call
aam
add
fisub
push
rol
jp
sti
add
out
mov
inc
mov
in
ins
scas
in
mov
jnp
test
clc
jns
mov
shl
mov
test
ret
sbb
mov
sar
mov
test
xchg
pop
mov
jbe
stos
scas
adc
test
pop
jae
xchg
and
ja
ret
xor
icebp
jns
mov
ds
call
out
push
je
dec
pusha
call
adc
mov
es
push
popf
lods
not
xor
xchg
mov
scas
xor
cmps
stos
or
pop
mov
and
mov
mov
mov
sub
or
aas
push
(bad)
sti
push
(bad)
mov
es
add
data16
push
add
push
xchg
push
cld
js
mov
cwde
ds
(bad)
mov
cmp
fld
xchg
aas
adc
gs
lods
rol
xchg
neg
(bad)
sar
jb
add
test
jg
mov
sub
ret
sub
sub
jge
dec
stos
xor
int
ror
jns
push
push
jae
shl
inc
je
repnz
pop
fisttp
jecxz
add
lods
mov
dec
xor
retf
mov
or
arpl
jge
push
and
lock
mov
rcl
xchg
fwait
mov
mov
repnz
adc
movs
inc
xchg
pusha
ret
loopne
pop
(bad)
xor
mov
ins
aas
mov
in
shl
xchg
fdivr
mov
inc
int
fild
cmp
call
scas
das
adc
fidivr
mov
call
pusha
lahf
add
xchg
jmp
sub
repz
add
push
cmc
adc
iret
xor
jge
push
(bad)
sahf
mov
fcomp
hlt
push
ds
push
pop
mov
push
dec
pop
(bad)
retf
inc
mov
test
(bad)
dec
enter
sbb
fild
or
ins
inc
enter
ins
and
mov
(bad)
fsubrp
in
imul
jl
push
out
jnp
push
jb
push
mov
sar
mov
(bad)
loopne
and
lock
or
or
add
adc
sbb
dec
ss
push
xchg
fs
fcomip
iret
push
aad
(bad)
imul
mov
cmps
dec
into
daa
pusha
sub
pusha
sub
sbb
cli
test
mov
pop
icebp
xor
add
add
shl
add
mov
rcr
lea
dec
bound
jo
sub
cmp
push
ret
push
mov
neg
call
push
cmp
add
dec
add
leave
test
jno
or
repnz
cdq
mov
daa
dec
dec
add
jns
or
das
xor
mov
inc
fimul
add
ins
daa
fndisi(8087
mov
sti
mov
test
movs
pop
xchg
fiadd
xchg
inc
stos
shr
xchg
(bad)
pop
adc
call
sub
in
gs
or
test
push
js
xchg
jo
scas
int3
push
cmp
pop
popa
lea
add
enter
iret
mov
dec
and
mov
into
mov
mov
das
xchg
mov
mov
test
retf
mov
nop
movs
mov
call
repz
dec
not
fcomp
cwd
out
fnstsw
test
push
dec
cmp
xchg
ficomp
inc
pop
inc
mov
push
and
mov
in
add
push
fisubr
gs
setbe
push
xchg
or
adc
push
fdivr
inc
leave
(bad)
add
mov
jg
ret
fiadd
out
ja
lahf
imul
test
add
lock
add
ret
or
sbb
adc
push
retf
scas
(bad)
and
or
iret
dec
mov
jmp
sub
jecxz
movs
sahf
sub
popa
cmp
ret
push
gs
pop
push
mov
cmp
imul
jae
in
mov
jmp
mov
ins
and
cmp
ins
dec
dec
jg
jecxz
lods
xor
push
rol
cmp
pushf
test
daa
or
icebp
sub
mov
mov
(bad)
jecxz
mov
lock
hlt
lahf
fcomp
sub
dec
xlat
fst
call
push
repnz
mov
ds
(bad)
(bad)
std
mov
sbb
mov
xor
jge
pushf
dec
pop
nop
stos
out
push
mov
imul
jmp
jmp
das
mov
and
push
cs
push
xor
xor
push
mov
lock
in
and
cmp
mov
fcompp
jb
mov
(bad)
mov
sub
push
sbb
scas
out
or
cwde
repnz
sbb
jno
loop
jle
push
neg
dec
cmp
jb
in
pop
xchg
imul
out
fwait
clc
mov
in
sub
inc
mov
je
mov
push
xchg
leave
into
dec
or
ret
mov
std
scas
stos
or
jmp
hlt
mov
pop
push
and
imul
jle
mov
pop
lds
pop
dec
mov
push
sub
sti
into
pop
fidivr
out
neg
sbb
adc
push
cmp
mov
mov
jg
cmp
pushf
and
add
shl
mov
pop
sbb
push
es
popa
push
or
jno
and
daa
pop
adc
sbb
push
push
jmp
popf
jecxz
mov
sub
dec
stos
fsubr
cld
dec
outs
mov
mov
out
in
int
ja
clc
xor
push
test
pop
arpl
(bad)
scas
inc
mov
adc
xchg
mov
pushf
and
dec
mov
lea
push
cli
aam
pusha
enter
or
adc
jle
js
xor
or
jmp
in
icebp
(bad)
cmps
dec
shl
inc
jo
les
das
ins
push
into
mov
aas
scas
std
push
rcl
fwait
movs
ins
in
xor
xchg
xchg
bound
cmc
xchg
dec
ror
cmp
mov
mov
jb
jmp
pusha
loop
mov
push
xor
das
dec
gs
sub
outs
popa
(bad)
mov
fild
sbb
push
xchg
inc
into
and
mov
cld
mov
cli
push
std
hlt
pop
dec
add
adc
lock
xor
outs
push
cmps
or
ja
mov
jp
mov
adc
sbb
sub
into
fidiv
push
adc
sub
and
fwait
hlt
ss
ins
inc
cmps
sub
pop
ss
gs
das
dec
pop
xor
push
je
and
mov
adc
nop
pop
add
mov
mov
enter
adc
sub
jg
push
imul
das
aas
mov
or
imul
jg
jle
cmp
jne
push
inc
sub
sub
call
ss
mov
lds
loop
sub
sahf
cmp
(bad)
lock
dec
retf
mov
ret
cmp
push
pop
jno
enter
push
(bad)
mov
add
std
push
or
and
pop
inc
mov
sar
ficom
outs
cld
or
push
xlat
mov
mov
or
push
stos
arpl
call
lahf
lods
xlat
not
fistp
in
or
addr16
fldenv
repnz
pop
push
fistp
push
mov
shl
out
adc
(bad)
loope
or
lods
jne
out
xor
or
daa
pop
enter
ror
aad
sub
inc
push
adc
je
xchg
fld1
pop
ficomp
ret
push
(bad)
arpl
cmp
lock
jmp
inc
fadd
mov
mov
adc
std
pop
call
push
mov
sbb
imul
pop
idiv
pop
xchg
mov
jno
mov
cwde
mov
push
add
loope
idiv
jmp
aaa
cmp
out
hlt
cmp
popf
cmp
adc
jmp
adc
mov
push
push
test
repnz
(bad)
(bad)
mov
cmp
pop
inc
stc
mov
cs
cmps
dec
mov
adc
sbb
mov
xchg
pusha
pop
mov
dec
shl
fnstsw
inc
sub
and
jo
and
ss
stos
xchg
xchg
pop
lahf
mov
rcr
or
loopne
sub
(bad)
aad
add
(bad)
aam
jno
push
jbe
mov
push
sbb
sub
sbb
ret
push
push
fiadd
jns
dec
add
sub
sar
and
push
imul
out
inc
fdivrp
jp
or
fldenv
jnp
aaa
nop
xor
mov
push
dec
and
pop
push
jge
pushf
fidiv
add
mov
cmp
adc
xor
cmp
xchg
inc
in
aas
test
fcmovne
adc
imul
and
mov
test
cmp
test
jb
ds
cmp
je
adc
push
mov
test
sbb
(bad)
fldl2e
push
pop
mov
pop
ret
or
mov
cmp
and
xor
je
push
adc
mov
rol
ret
(bad)
cmp
sbb
loop
retf
jle
jp
sub
sar
sub
fwait
retf
sbb
mov
or
cmps
fild
mov
fwait
xchg
aaa
pop
jne
rcl
mov
leave
hlt
test
dec
inc
mov
pop
fcmovnu
cwde
fnstenv
sti
aaa
jg
out
icebp
inc
in
popf
dec
not
movs
fdivr
call
or
cwde
ds
xor
es
jl
mov
mov
and
jecxz
dec
and
cmp
sbb
mov
sbb
xor
inc
inc
pusha
push
scas
dec
ss
xchg
stos
cwde
cmp
imul
scas
(bad)
adc
mov
push
jge
addr16
sub
push
pop
(bad)
int3
inc
cmps
xchg
mov
ret
adc
cs
ror
adc
je
pusha
or
(bad)
and
dec
mov
(bad)
mov
and
mov
pop
test
stos
push
nop
fdiv
pushf
lahf
into
fstp
cmps
jbe
push
mov
jp
mul
sbb
pop
cmp
dec
lock
rcl
pop
jecxz
data16
bound
sbb
jae
inc
dec
mov
jo
sar
pusha
and
cmp
test
jmp
mov
sbb
and
sub
(bad)
(bad)
mov
loopne
leave
into
or
int3
loope
inc
loope
ss
or
or
push
out
retf
jno
mov
dec
mov
sbb
and
add
mov
lds
sbb
adc
in
leave
jno
jnp
sbb
sbb
imul
xor
shl
out
inc
xchg
arpl
mov
pop
mov
jmp
push
xor
bound
push
mov
aaa
in
inc
ja
(bad)
fbstp
stc
xor
cmp
arpl
pushw
pop
loope
push
push
dec
pop
hlt
jae
cmps
push
adc
push
pop
inc
sar
fdiv
addr16
ret
mov
push
or
mov
and
jne
pop
mov
and
xchg
repz
pop
xlat
scas
lds
(bad)
mov
sub
int3
jg
and
out
xchg
jns
dec
push
out
sub
sbb
mov
ins
add
pusha
or
fld
dec
dec
mov
in
ins
xchg
push
loopne
push
dec
inc
out
jo
lds
mov
jbe
pop
ins
inc
ins
mov
aad
data16
dec
ret
loopne
movs
leave
rol
jnp
leave
shl
xor
rcr
push
ja
fidivr
cmp
in
fs
push
push
push
xchg
fcmovu
mov
in
hlt
push
popf
cmp
cdq
push
loopne
out
das
sub
sti
fidiv
stos
push
rol
push
scas
cmc
adc
(bad)
lahf
in
mov
inc
addr16
cmp
repz
inc
fs
jg
cwde
lahf
push
outs
outs
sbb
and
aad
sbb
pop
and
clc
pop
cmp
out
xchg
std
outs
pop
outs
xchg
dec
mov
retf
retf
cdq
or
or
ret
arpl
mov
push
repnz
movs
jo
es
sbb
movs
in
mov
push
jmp
push
mov
sahf
mov
xchg
push
movs
cmp
imul
dec
aad
pop
xor
push
jne
xchg
sbb
jae
xor
mov
popa
int3
inc
add
xor
aad
out
int
retf
push
xchg
call
in
mov
ret
sub
pop
sub
hlt
push
pop
enter
loopne
push
push
test
je
or
test
fstp
mov
mov
xchg
cmp
loop
cmp
mov
bound
lahf
jbe
into
add
cmps
pop
in
xchg
mov
and
(bad)
mov
mov
int
mov
and
lds
xor
add
and
scas
mov
jno
test
int
sub
retf
stos
lea
sahf
lods
push
fistp
es
pusha
ds
aad
sub
sbb
fwait
(bad)
sti
pop
push
jp
mov
sub
inc
not
mov
(bad)
shr
out
or
push
(bad)
out
jp
test
(bad)
dec
jbe
adc
pop
leave
(bad)
mov
xchg
mov
and
fidivr
inc
add
cld
pop
mov
nop
mov
fucomip
(bad)
(bad)
jecxz
mov
sbb
sahf
aas
pushf
int
pop
push
gs
dec
and
xor
inc
dec
in
nop
mov
lods
fsin
adc
dec
adc
dec
push
push
inc
gs
fnstenv
dec
dec
or
sbb
pop
inc
lds
mov
out
pop
cld
mov
mov
scas
ins
(bad)
mov
and
lods
out
arpl
ja
loope
push
fsub
aaa
out
jnp
ret
ss
das
xchg
xor
mov
stc
in
cmp
add
adc
outs
imul
and
push
lahf
adc
mov
adc
int
mov
adc
call
or
in
imul
call
jp
inc
dec
aas
mov
jmp
push
vpmaxub
and
push
inc
fstp
pop
or
test
fimul
(bad)
cmc
pop
and
ja
test
xor
lods
lods
mov
cmp
aaa
(bad)
jle
retf
dec
push
sbb
cld
push
imul
cmp
neg
out
enter
adc
lock
xchg
mov
cmc
out
loop
pop
mov
push
xchg
or
pop
adc
ror
cwde
push
push
jo
sbb
pop
mov
ret
dec
retf
or
xchg
sub
mov
call
xor
mov
add
sub
jmp
jl
and
sti
or
push
rcr
movhps
inc
mov
idiv
cmp
enter
scas
lahf
cmc
pop
mov
mov
push
inc
mov
mov
repnz
cmp
imul
pop
mov
imul
xor
(bad)
cwde
enter
mov
cmp
cwde
aaa
jb
inc
mov
in
(bad)
adc
iret
dec
sti
jge
xchg
mov
das
sti
sbb
mov
paddusw
loop
xor
(bad)
jle
repz
into
loopne
mov
repnz
mov
push
or
cmp
mov
loop
push
mov
dec
imul
(bad)
and
jecxz
fld
or
mov
mov
mov
cmp
dec
inc
add
outs
hlt
dec
int3
aad
push
bound
sub
push
inc
mov
lea
int3
in
jnp
iret
jno
imul
cmp
js
adc
pop
(bad)
sbb
jns
push
lods
out
sub
and
sub
popf
shl
ins
fisttp
cli
adc
cmps
hlt
dec
xor
xchg
mov
cmps
inc
mov
xchg
inc
(bad)
sbb
push
xor
aas
loopne
sub
(bad)
loop
icebp
add
xchg
xor
pop
add
jle
das
jl
cmps
sbb
jge
jl
popa
cmp
sti
mov
test
mov
in
cdq
jns
push
xchg
movs
adc
xlat
mov
mov
fist
js
cmp
data16
lods
ins
pop
jmp
ja
adc
pop
jns
daa
sub
dec
xor
jns
or
movs
xchg
(bad)
fs
sahf
jmp
movs
cld
dec
xchg
sub
mov
jne
mov
xchg
or
xor
and
jge
aas
retf
jae
out
pop
(bad)
(bad)
pop
int
loopne
(bad)
jge
push
jb
sbb
sub
mov
cli
or
mov
and
add
add
push
fstp
scas
sub
cmp
push
out
mov
xchg
cmp
pop
or
lods
popf
sbb
popf
data16
cdq
adc
add
mov
mov
test
mov
pusha
mov
mov
mov
js
fst
cmps
xchg
leave
push
jbe
xchg
or
retf
sub
call
mov
and
sti
repz
cmp
call
mov
rcr
in
dec
lods
push
(bad)
mov
push
or
sti
aam
cmp
clc
sbb
or
je
scas
imul
cmp
dec
cmp
cmps
pop
(bad)
jmp
jo
jecxz
popa
cmp
mov
cli
mov
icebp
xor
xchg
xor
xchg
leave
inc
add
(bad)
jmp
ins
push
addr16
cs
in
stc
sbb
or
jno
clc
mov
fimul
shl
nop
in
scas
retf
pop
repnz
adc
icebp
dec
pop
cmp
jnp
call
sti
sar
scas
push
mov
inc
out
jns
out
push
cld
fnstenv
test
pop
mov
fisub
(bad)
mov
xor
pop
cli
daa
add
mov
loop
js
xchg
ret
inc
fucom
stos
loopne
(bad)
call
arpl
cld
fisubr
cld
clc
call
movs
push
sbb
mov
addr16
pop
push
ins
stos
mov
adc
movs
or
dec
cdq
dec
(bad)
mov
cmp
add
retf
repnz
pop
mov
sar
aam
pop
jae
(bad)
test
rcl
outs
sbb
dec
nop
out
sbb
dec
mov
ja
push
cdq
(bad)
(bad)
xor
jle
mov
pop
enter
lods
push
jae
js
call
aas
outs
sub
scas
mov
adc
stc
jl
es
in
inc
push
lea
lgs
icebp
test
cld
mov
mov
push
pushf
dec
inc
nop
sbb
outs
ins
fist
sub
ja
push
sub
jmp
add
sti
mov
jo
cmc
xchg
std
adc
pushf
and
sub
cdq
jecxz
fstp
out
xor
xor
add
sbb
call
and
or
add
pop
jb
cli
and
jge
retf
pop
push
out
push
mov
popf
lods
(bad)
fisub
jne
lock
xchg
aam
cwde
test
inc
aam
aam
div
push
out
test
xor
les
add
or
test
jge
add
adc
or
mov
ret
sahf
inc
cdq
call
push
adc
jbe
or
fidiv
(bad)
hlt
mov
sub
add
and
and
shr
dec
aaa
inc
shr
ss
hlt
mov
inc
fistp
mov
sub
test
ficom
mov
lahf
inc
scas
test
cli
fild
test
mov
stos
lds
sbb
retf
es
out
or
sub
lds
(bad)
out
xor
mov
or
aas
outs
sbb
inc
push
ret
pop
and
les
xchg
pop
xchg
popf
popf
cmp
mov
sbb
push
dec
movs
gs
jae
scas
test
(bad)
adc
xor
test
xchg
stc
dec
sti
mov
fild
mov
dec
clc
cld
jp
ror
sub
jno
or
xor
retf
mov
and
xchg
mov
js
into
cs
cmp
pushf
sbb
inc
push
(bad)
mov
sub
sub
ror
jmp
adc
jo
jl
shr
(bad)
aad
sar
sub
jmp
test
pop
add
(bad)
push
mov
mov
push
push
(bad)
movs
lahf
push
fcomp
push
cli
jns
arpl
les
xor
nop
sub
repnz
test
add
pop
xchg
sbb
mov
das
jp
jbe
mov
outs
sbb
inc
es
scas
cmp
xchg
mov
fdivr
cwde
pop
not
popf
add
push
out
je
jbe
movs
in
jp
mov
fimul
add
std
add
fwait
pop
sbb
jmp
int
mov
fwait
and
repnz
jbe
test
inc
xchg
xor
xchg
and
jg
inc
arpl
hlt
(bad)
lea
sahf
cmp
outs
pop
inc
mov
dec
out
fisttp
pop
xchg
gs
test
int
mov
jle
cli
mov
xchg
pop
add
lds
xchg
arpl
mov
push
(bad)
mov
xorps
sbb
imul
int3
mov
ins
loope
jbe
mov
push
leave
pop
pusha
lods
movs
popa
jo
inc
leave
jns
data16
xor
lods
ja
lods
jl
sbb
test
pop
cld
sbb
je
cmc
test
xchg
test
shl
cmp
repnz
retf
stos
cs
rcr
cmps
mov
repz
int
and
jl
sub
jl
shl
js
add
xchg
cmps
mov
mov
jb
sbb
adc
ja
xor
xchg
ret
push
(bad)
xchg
jg
stos
ficom
inc
mov
mov
into
lods
loope
fst
cmp
rol
cmp
jecxz
adc
jae
push
stos
cwde
mov
xchg
bound
sub
(bad)
jbe
jb
cmc
lea
mov
into
fist
and
clc
jno
inc
pushf
push
sti
data16
inc
stos
repnz
mov
jle
scas
ds
or
dec
shr
out
and
lods
mov
jle
sti
cmp
shr
in
mov
push
mov
mov
inc
inc
das
jmp
inc
test
xor
adc
mov
add
ret
sbb
pop
ds
mov
push
push
xchg
scas
push
add
jmp
pop
bound
stc
cmp
and
into
dec
aaa
sbb
push
mov
cdq
sahf
add
mov
loope
and
das
mov
fldcw
jnp
adc
mov
add
inc
fmul
scas
lsl
mov
jecxz
les
arpl
dec
lahf
xor
sub
or
aad
pop
out
push
daa
(bad)
sbb
aam
fnstenv
lds
jb
pusha
nop
xchg
and
xor
xchg
add
pop
aas
mov
xor
cdq
xor
and
xchg
inc
mov
dec
mov
sbb
data16
or
sub
lods
out
ret
popf
or
inc
ret
fsubr
mov
xor
add
mov
ja
ins
adc
pop
mov
ins
inc
data16
mov
leave
std
iret
inc
mov
outs
movq
mov
and
mov
inc
fs
xchg
sbb
jns
cmp
ss
inc
popa
adc
les
out
jle
xor
push
mov
xor
mov
das
adc
jle
xchg
xchg
push
(bad)
movs
std
xchg
pop
pop
fld
sbb
dec
cmc
sub
pop
fwait
adc
xor
jmp
push
fcmove
cmps
sar
mov
xor
cmp
mov
mov
dec
sub
jecxz
mov
outs
fisttp
add
mov
jg
ds
scas
out
pop
cld
adc
mov
sbb
adc
xchg
jl
pop
mov
inc
not
shr
rcl
mov
xchg
arpl
jns
retf
imul
push
aad
sti
aaa
xor
out
jne
cmp
loop
pop
mov
adc
jg
sbb
jg
mov
jnp
push
add
mov
sub
(bad)
push
dec
jmp
ret
add
test
gs
xor
dec
mov
stc
push
test
xor
add
into
xchg
adc
and
ins
or
and
adc
adc
inc
iret
int
inc
lods
rcr
push
inc
mov
fbstp
call
jae
jmp
jmp
pusha
nop
inc
popf
mov
dec
adc
shl
cmp
movs
sahf
cmp
(bad)
hlt
pop
jge
cmp
aaa
es
xlat
neg
fistp
ins
mov
push
int
jge
add
repz
arpl
(bad)
into
jg
call
ret
cld
mov
jmp
xchg
push
out
jbe
int3
scas
dec
cmp
adc
cmc
clc
movs
(bad)
pop
jge
or
imul
mov
fmul
mov
jmp
out
test
dec
jge
jg
jae
jmp
fst
sbb
sub
icebp
dec
ret
sub
test
push
and
dec
shl
arpl
(bad)
cmc
mov
inc
outs
scas
add
std
in
pop
mov
push
cld
sbb
nop
xor
sub
adc
pop
movs
dec
push
pavgw
push
sbb
test
add
mov
sbb
add
push
adc
inc
dec
jge
cmp
sub
aas
cmps
dec
adc
adc
cmp
fs
mov
sub
(bad)
sub
push
aam
loopne
icebp
sub
clc
aad
xchg
mov
push
ret
fbstp
cmp
test
loop
mov
add
mov
sub
mov
push
loop
dec
call
into
test
xor
push
ja
ficomp
xor
xchg
inc
push
rcr
out
cld
ja
xchg
aad
daa
pop
gs
mov
jne
inc
in
jl
int
icebp
scas
in
xchg
pop
cmps
jbe
pusha
jg
std
jecxz
pop
mov
hlt
mov
mov
sub
dec
jb
cs
lods
mov
xchg
loopne
adc
xchg
pcmpeqd
pop
inc
and
xchg
into
scas
xor
gs
(bad)
jmp
mov
fsubrp
sub
(bad)
push
pop
mov
inc
adc
test
pop
inc
or
inc
out
(bad)
dec
xlat
lods
push
data16
pushf
jo
push
jmp
loopne
or
popf
inc
adc
jmp
nop
int
dec
xchg
shl
xchg
xchg
repz
cmps
xlat
pop
push
cmp
mov
or
test
jmp
and
dec
jae
loope
sub
lahf
test
xor
test
sbb
pop
sbb
dec
ja
nop
pop
mov
mov
pop
fld
and
out
push
mov
jnp
mov
iret
js
pop
imul
mov
adc
dec
shl
pop
xor
repz
cwde
lods
imul
ja
test
iret
xchg
test
in
cld
mov
add
push
jns
jecxz
add
stos
sbb
sbb
xor
mov
pop
add
mov
jmp
adc
repz
or
les
mov
outs
leave
xlat
push
pop
push
imul
xchg
mov
cmp
std
xlat
mul
shl
sbb
mov
mov
add
inc
xor
pop
pop
jbe
rcr
xchg
or
outs
popf
cwde
or
pusha
fwait
mov
push
in
stos
cmps
mov
xchg
in
in
(bad)
mov
imul
ds
shr
ret
sbb
ja
fsubr
imul
and
(bad)
icebp
dec
and
ins
sub
fwait
dec
jns
ins
mov
lods
shr
dec
mov
fistp
xor
jnp
fld
test
pop
dec
adc
and
jns
rcr
test
cmp
imul
repnz
cmp
enter
mov
daa
push
push
xchg
ins
mov
cwde
cmps
adc
data16
loope
dec
adc
add
cmp
shl
cmp
xlat
or
and
inc
int3
mov
cmp
scas
scas
cwde
out
xor
shld
test
pop
or
jmp
dec
pop
iret
aam
jle
dec
jge
aam
pusha
or
jmp
and
cmovg
pop
jl
pop
das
pop
mov
dec
inc
scas
mov
sub
inc
push
test
mov
cmp
mov
fadd
jmp
je
ret
xor
frstor
dec
dec
test
ins
nop
mov
sub
cmp
cmp
mov
xchg
sub
fnsave
jae
js
int
int3
sti
lahf
inc
cli
rol
call
addr16
scas
test
add
fsubp
mov
jl
pop
stos
fistp
jo
dec
gs
scas
popf
data16
stc
inc
push
and
js
xchg
repz
jle
mov
call
and
mov
bound
xchg
daa
not
aam
movs
sbb
push
sbb
jmp
fcom
jmp
sbb
loopne
fcmovne
gs
cmp
xor
push
cmp
psubsb
push
mov
std
call
mov
movs
sti
addr16
loope
shr
mov
or
(bad)
sahf
dec
pop
int
inc
push
adc
add
adc
mov
nop
je
hlt
test
xor
(bad)
jecxz
fs
lock
push
int3
jmp
push
jno
cmp
mov
into
call
cld
out
cmc
out
push
push
sbb
icebp
pop
jns
sub
je
cmps
push
mov
push
mov
jbe
aam
push
pusha
imul
lds
jmp
sub
outs
imul
stc
mov
or
fidiv
pop
push
repz
jnp
adc
retf
cdq
mov
push
and
lahf
mov
inc
(bad)
push
test
ins
jae
jge
out
aaa
sbb
cld
mov
movs
inc
push
push
inc
fs
inc
push
sbb
jg
fistp
(bad)
ficomp
in
add
add
or
xchg
jbe
cld
(bad)
movs
xor
jnp
and
pop
test
cmp
sahf
sahf
jmp
(bad)
adc
fst
xchg
sub
rcr
jge
int
sbb
xor
add
push
mov
out
sbb
adc
lods
bound
retf
pop
mov
popa
scas
mov
mov
rcl
adc
les
mov
js
daa
xor
mov
mov
jne
push
scas
fstp
inc
(bad)
into
push
(bad)
xor
out
cli
lds
in
mov
enter
repnz
adc
jmp
mov
push
mov
ins
test
inc
cmp
int
fmul
test
mov
stos
in
mov
mov
nop
rcl
std
jp
mov
mov
(bad)
shl
sar
inc
sbb
push
retf
sbb
pop
stos
in
mov
rcl
and
dec
movs
xor
sbb
sbb
(bad)
cmp
xchg
call
mov
jle
sbb
inc
xchg
cmps
push
data16
xchg
jns
fisttp
xor
ins
sub
mov
lea
mov
cmps
mov
xor
dec
inc
call
mov
push
mov
xor
ins
fcmovb
(bad)
push
jge
push
dec
aaa
sub
mov
(bad)
repnz
cmp
icebp
enter
repnz
pop
jmp
add
in
inc
das
mov
mov
inc
scas
push
retf
jmp
ja
cld
and
jge
jae
aam
sub
add
add
aaa
pop
sub
gs
(bad)
push
inc
rol
lds
mov
xchg
jge
aam
inc
lods
(bad)
jns
inc
jo
adc
imul
arpl
sub
cmp
fwait
push
jns
lea
out
sbb
fldenv
mov
das
mov
or
ficomp
movs
mov
rcr
or
(bad)
iret
mov
mov
popa
jne
sbb
or
scas
dec
cmp
xchg
sbb
icebp
lods
test
in
pop
shr
and
test
in
clc
loope
pop
aam
icebp
inc
rcl
test
jmp
cmp
pop
xchg
and
pop
mov
inc
pop
mov
pop
xchg
jp
mov
adc
mov
mov
jp
movs
(bad)
jnp
ja
lods
and
mov
dec
cmp
push
pushf
jbe
int3
adc
scas
cwde
jp
dec
test
adc
fild
sub
shl
xchg
and
addr16
lods
sub
dec
cmps
pop
dec
or
pop
mov
push
xchg
das
js
jp
cmp
jmp
neg
cmp
cwde
mov
lods
jge
ins
popf
cld
pop
ret
sub
or
aas
repnz
adc
out
add
adc
push
mov
mov
xor
fdivr
xchg
fbstp
or
and
loopne
jecxz
out
mov
jnp
add
ss
xchg
sub
adc
add
movs
les
jl
jo
xchg
inc
ret
inc
jmp
stc
fimul
mov
sub
aaa
mov
or
dec
(bad)
rcl
fldenv
fiadd
hlt
push
dec
test
push
mov
xchg
ss
push
jp
repnz
gs
shl
dec
(bad)
push
es
pushf
in
test
push
mov
scas
adc
pop
push
rol
ins
ds
fnstenv
popa
addr16
pop
cmps
out
inc
mov
xchg
retf
inc
cmp
mov
icebp
pop
push
fidivr
pushf
or
cmp
push
out
pushf
sbb
inc
xor
movs
fwait
xor
sahf
sub
or
or
movs
push
sbb
inc
pop
xchg
test
int
in
lods
xchg
sub
fisub
or
mov
sar
cmp
push
and
lea
mov
mov
jns
stc
inc
sub
test
repnz
sbb
les
push
pushf
mov
push
mov
neg
xor
xlat
mov
cmc
fisttp
ror
pop
cld
mov
shr
scas
les
push
xor
ret
fwait
add
jae
mov
mov
shl
push
test
es
rcl
in
and
xor
fmul
dec
repz
loop
cdq
dec
or
inc
int
popa
jo
aas
imul
push
mov
outs
stos
jo
loop
xor
sbb
fstp
push
out
pop
push
mov
and
xchg
dec
xchg
and
cmps
popa
ret
hlt
mov
add
mov
test
or
rcr
dec
lods
popa
push
pop
jbe
and
sti
mov
jl
pop
and
jmp
push
add
call
fucomi
sbb
dec
not
and
cmp
add
mov
out
inc
arpl
sub
jno
and
(bad)
xlat
retf
cmc
out
and
das
pushf
fild
fisttp
cmp
cmp
bound
and
sub
ret
jmp
xchg
add
in
adc
mov
daa
dec
das
test
mov
stc
fisub
adc
sar
cmp
pusha
mov
outs
push
dec
icebp
sbb
inc
and
leave
xchg
rcr
jmp
rcr
or
mov
mov
retf
adc
cmp
inc
xlat
mov
pop
jmp
test
xor
jmp
jl
dec
dec
xor
xlat
jbe
clc
shr
in
in
pop
sub
aaa
mov
imul
xchg
inc
retf
leave
mov
mov
(bad)
fcmovnb
pop
lahf
jl
lods
pop
pop
lea
xchg
nop
out
mov
outs
in
sbb
fwait
and
sub
sbb
jne
push
xor
cwde
pop
ret
stos
out
lds
xor
or
std
cli
xchg
loope
rol
shl
dec
in
loope
jns
xchg
jg
sub
pop
fild
ret
sbb
daa
and
mov
fnstcw
jno
and
mov
cld
lods
aas
arpl
push
sti
inc
int
mov
(bad)
adc
or
pop
add
jbe
cmp
dec
inc
cmps
push
aad
push
xchg
cmp
sub
call
icebp
mov
pop
pop
test
xchg
push
pop
mov
(bad)
(bad)
push
xchg
pushf
loopne
mov
pop
call
fimul
inc
inc
cdq
stos
popf
lahf
cmc
mov
cmc
sbb
sbb
and
repnz
pop
mov
test
xor
lahf
popf
dec
adc
sbb
cmp
pop
mov
pop
pop
shl
push
mov
je
aaa
lods
add
outs
push
xchg
cmps
sar
pop
lods
mov
mov
lahf
sbb
inc
mov
cwde
leave
out
pusha
into
aas
jp
fadd
fst
mov
mov
out
dec
mov
(bad)
lock
jae
aam
(bad)
es
xchg
pop
lods
mov
jmp
test
aas
pusha
dec
mov
rol
cdq
dec
push
mul
hlt
inc
cmps
dec
pop
sbb
jge
fs
daa
arpl
outs
mov
xor
clc
xchg
pop
inc
out
add
sbb
sbb
out
retf
xchg
xor
cmps
les
sbb
pushf
xor
pop
cli
(bad)
lods
adc
adc
loopne
dec
push
cmp
jmp
jne
jle
jmp
jp
popf
jmp
xchg
repnz
outs
inc
and
jmp
loopne
(bad)
sbb
mov
pushf
mov
add
fdivr
(bad)
icebp
cmps
dec
ror
(bad)
les
sahf
xor
rep
sbb
(bad)
cld
sub
push
arpl
sub
pushw
inc
pop
mov
mov
xor
cmp
mov
clc
ret
inc
push
into
add
add
mov
mov
mov
add
fisubr
stos
std
rol
pop
pop
movs
dec
ret
das
and
cwde
sti
cmps
(bad)
cmp
and
inc
jle
(bad)
hlt
fsub
cmp
in
repz
loope
jmp
push
push
aas
mov
mov
cmps
mov
cmp
xchg
push
mov
icebp
call
jbe
jle
sbb
rcl
sub
inc
push
cld
(bad)
jecxz
cmp
call
cld
(bad)
in
cs
ss
cmps
sbb
add
loop
sbb
inc
out
frstor
nop
ja
mov
lock
jae
push
jbe
mov
pop
mov
popf
stos
inc
jno
loop
dec
fnstcw
add
dec
push
pusha
push
out
(bad)
sub
add
jbe
stos
mov
inc
ret
ja
stc
retf
int
stc
push
clc
mov
test
cwde
out
push
cmp
adc
dec
dec
ret
and
mov
push
cdq
or
arpl
jmp
xchg
sub
jne
fild
imul
mov
dec
in
push
mov
jle
jp
bound
push
test
or
test
stos
push
adc
in
push
inc
movs
nop
xor
push
(bad)
xchg
out
push
sub
retf
imul
sub
test
(bad)
fld
mov
jl
les
pop
xchg
sti
movs
sar
pop
loop
or
int
lods
or
dec
dec
fisubr
pop
mov
inc
fisubr
ins
cmp
cmp
outs
mov
push
or
out
rol
or
pop
xchg
dec
sub
xor
mov
push
cld
cld
pushf
inc
or
les
and
pop
xlat
xchg
jge
inc
rol
arpl
int
sar
sub
xor
adc
fnstsw
cwde
xchg
sti
dec
pop
fistp
mov
jl
mov
push
mov
clc
push
push
js
push
add
inc
in
xchg
inc
sbb
sbb
js
popf
pop
and
in
sahf
enter
in
js
std
ja
cli
and
mov
mov
imul
mov
jb
push
mov
push
ins
xor
daa
dec
dec
pushf
or
mov
(bad)
pop
icebp
push
push
jno
fst
sub
dec
adc
cmp
arpl
(bad)
(bad)
aad
mov
fidivr
jns
xchg
stos
sub
cmp
repz
and
xor
jb
js
pop
cmc
fistp
lahf
jp
mov
(bad)
add
dec
sar
test
adc
hlt
and
mul
test
call
mov
pop
jp
pusha
call
jge
lods
pop
and
iret
cmp
or
cmp
movs
inc
sbb
mul
mov
add
mov
int3
add
lods
loopne
xchg
fwait
sbb
in
loope
pop
mov
sbb
cmp
and
add
imul
xchg
add
pop
dec
xor
xchg
inc
cdq
cmp
and
adc
jecxz
push
out
ja
push
ret
sbb
ins
arpl
push
cmc
sahf
sbb
test
imul
and
ins
movs
xchg
cwde
adc
sub
fild
jle
lods
mov
aas
inc
xlat
repz
sub
xchg
dec
fcmovbe
pusha
sahf
or
pushf
std
ins
dec
sbb
sti
xchg
jecxz
cli
sbb
mov
cmp
sahf
jge
out
inc
cmps
das
popa
xlat
std
cmp
fldcw
pmaddwd
mov
loope
data16
ret
and
ret
adc
test
aam
popf
add
test
push
int
dec
in
mov
mov
xor
sub
pop
aas
mov
mov
xchg
fcmovne
jbe
add
std
test
cmp
sahf
iret
mov
mov
sahf
cdq
stc
mov
fwait
mov
xchg
adc
push
push
aam
stc
mov
out
pop
cmps
jle
fs
popf
std
movs
push
mov
outs
xor
fidivr
push
scas
inc
xchg
xchg
xor
jno
out
jge
inc
push
jmp
sub
pusha
push
inc
je
rcr
out
lahf
into
call
nop
(bad)
mov
fsubrp
mul
mov
ror
push
movs
and
cdq
jno
mov
add
xchg
add
adc
jg
push
pop
pop
imul
add
ins
dec
cmp
fld
mov
daa
add
(bad)
out
ret
mov
sbb
mov
xor
fisttp
sbb
jecxz
push
cmps
ins
sub
mov
mov
jns
scas
test
stos
stos
and
sahf
rcl
cdq
xor
shr
lea
(bad)
pop
cmp
xchg
fucomip
push
pop
and
mov
aam
repnz
adc
outs
mov
fs
stos
sub
fisttp
das
sbb
ja
jge
push
loopne
cmp
je
push
mov
bound
sub
jge
mov
add
push
mov
sti
fcom
out
inc
mov
cmp
pop
or
retf
push
repz
retf
inc
cld
shl
push
adc
fild
pop
fsubp
inc
lock
les
cmp
mov
mov
inc
push
mov
mov
sbb
sub
mov
jmp
and
(bad)
pop
sbb
push
push
icebp
inc
xor
jmp
push
imul
cmps
je
pop
mov
lahf
fimul
or
mov
sub
cmp
mov
dec
pop
(bad)
dec
push
mov
jmp
fdiv
sub
sub
xor
cmps
pop
imul
xchg
xlat
adc
scas
cmp
sbb
ins
cs
iret
sti
jmp
cmp
push
icebp
lods
inc
popa
test
add
mov
xor
enter
and
add
xchg
popa
mov
mov
sbb
icebp
pop
adc
fadd
mov
xlat
cdq
lock
jnp
pushf
mov
fbld
loop
or
inc
push
dec
inc
movs
jb
and
push
cwde
push
cmps
or
jb
inc
mov
fwait
dec
mov
pop
add
loope
inc
dec
fmul
mov
push
sub
into
sub
adc
and
xchg
lds
xor
xor
pushf
pop
retf
lods
jg
lock
sub
cmp
scas
add
pop
(bad)
sub
and
and
retf
(bad)
or
popa
(bad)
aaa
cwde
adc
or
sbb
mov
popf
jb
call
adc
imul
xor
(bad)
ins
pop
call
inc
dec
push
sahf
add
shr
iret
inc
jns
dec
fld
jo
xor
mov
fcom
mov
add
repz
and
js
cmovle
push
pop
leavew
call
shl
sub
leave
sub
fdivr
sbb
(bad)
mov
rol
imul
sub
repnz
jns
enter
inc
fdivr
scas
mov
inc
adc
mov
ins
dec
sub
cmp
bound
cli
push
rcr
enter
add
(bad)
jge
push
mov
std
lea
leave
fist
test
and
lods
cmp
fdiv
sti
lahf
cli
push
dec
fistp
xor
push
fisub
retf
movs
arpl
fidivr
cs
fbstp
popa
cdq
(bad)
cli
or
loop
je
rcr
mov
adc
loope
les
add
stos
inc
push
adc
std
icebp
inc
rol
and
jae
mov
mov
je
mov
outs
int
pop
cmc
cs
scas
stc
cmp
sbb
vpshufhw
cld
loop
retf
int
xchg
inc
test
sbb
shl
pop
sbb
int3
in
adc
imul
in
push
sahf
sbb
cmps
ficomp
pop
rcr
loopne
sub
xor
jns
ja
iret
fstp
shl
mov
mov
pop
or
retf
shl
adc
fdiv
in
add
mov
mov
mov
repz
(bad)
popa
cmp
sub
cmc
cmp
in
cmps
mov
push
mov
cmps
gs
mov
test
fs
cmp
or
jg
movs
(bad)
sbb
pop
adc
cmp
aas
push
fldcw
into
outs
aaa
call
sub
mov
ins
imul
push
pop
nop
adc
loopne
add
inc
int3
retf
mov
lock
fimul
push
ja
or
sbb
xor
push
mov
xor
mov
es
out
jo
lods
loope
jbe
test
dec
sub
shl
sbb
popa
push
das
xchg
pop
mov
iret
push
mov
clc
push
mov
pushf
inc
cmc
sub
add
clc
test
inc
inc
mov
scas
sub
cs
movs
call
mov
mov
pop
scas
das
shl
mov
adc
out
add
mov
in
lock
xchg
lods
test
xchg
pop
inc
inc
test
jne
(bad)
jb
ja
mov
rcl
adc
inc
cmp
(bad)
lock
rol
push
jns
gs
pushf
(bad)
std
xor
outs
outs
pop
push
jle
add
inc
push
or
jae
pop
fldcw
mov
mov
and
ret
fcom
dec
pop
xchg
sbb
neg
pop
mov
dec
and
loopne
inc
jmp
loop
push
add
(bad)
cmp
push
sbb
jne
mov
inc
xlat
inc
icebp
dec
jecxz
or
pop
out
mov
push
cli
adc
dec
popa
mov
lahf
shl
sbb
sbb
inc
out
pusha
or
lahf
sbb
pop
clc
cs
cmp
lahf
inc
repz
aad
lods
xchg
bound
jl
retf
pusha
bound
inc
sti
xor
pop
jmp
popf
ds
mov
inc
mov
popa
jne
cmp
adc
call
loop
repnz
lea
mov
adc
push
dec
repnz
test
aad
(bad)
repz
jne
in
nop
ds
idiv
rcr
dec
xor
fwait
or
inc
mov
sub
clc
(bad)
jl
retf
pusha
and
add
inc
es
fwait
imul
stos
fs
xchg
sar
pop
jb
add
bound
cmp
mov
jno
imul
adc
in
sti
in
out
test
jne
and
(bad)
pop
push
pop
jne
fst
xchg
js
cmp
jb
jne
pop
jns
call
ja
fnstenv
rcl
mov
in
push
push
jp
ror
shr
mov
mov
sub
cmp
push
jno
shr
push
cs
mov
scas
xor
mov
rcr
ins
(bad)
mov
mov
xchg
mov
sahf
fidivr
mov
jge
fs
clc
sub
sbb
xor
leave
cmp
test
xor
or
out
cmps
push
and
dec
and
scas
adc
push
out
je
dec
jmp
mov
(bad)
mov
fwait
rcl
in
xchg
and
aaa
pusha
retf
and
add
jmp
dec
mov
xchg
sub
sbb
jmp
sbb
cmp
mov
int
sar
shl
test
and
jnp
es
sbb
pop
adc
xor
fnsave
leave
pop
and
xor
cdq
enter
cmp
jne
mov
cdq
into
jb
pop
iretw
pop
sub
retf
mov
mov
retf
into
sbb
outs
mov
jmp
mov
push
sti
outs
jns
mov
retf
(bad)
fwait
or
jae
or
ror
push
lahf
jbe
out
adc
ror
add
hlt
pop
or
inc
adc
mov
movs
int3
add
mov
icebp
adc
dec
jbe
pop
gs
retf
ins
out
and
retf
sub
loope
or
fistp
sbb
aas
inc
sub
adc
adc
fwait
or
push
adc
iret
repz
inc
pop
dec
pop
sub
sar
inc
jmp
cmp
ror
jne
add
retf
fcom
dec
jle
sahf
inc
and
xor
lock
cmp
ds
aaa
or
pop
xchg
jmp
mov
sub
inc
les
or
pop
sbb
mov
sar
push
ins
pop
dec
push
jae
fs
dec
fnstcw
jg
shl
stos
and
scas
pop
pop
sub
and
movs
imul
xchg
ss
xchg
retf
jmp
adc
xchg
or
xchg
je
xor
cmp
or
fs
sbb
sbb
repnz
jge
xor
shr
(bad)
test
xor
jb
popa
inc
jmp
pusha
push
in
stos
adc
dec
adc
push
(bad)
std
aad
sub
stos
xor
stos
fisubr
push
dec
sbb
imul
fdivr
iret
xchg
adc
push
ror
jecxz
sub
mov
dec
inc
sbb
mov
jp
sub
add
or
sub
cmp
les
dec
or
cmc
ficom
out
lods
push
ss
push
xchg
inc
retf
cdq
pop
fmul
mov
dec
add
cmc
mov
xlat
out
sbb
push
imul
fstp
jnp
cmp
inc
xlat
push
cmps
jo
mov
push
test
ds
jns
cli
and
das
lods
push
rol
pop
jle
adc
dec
push
dec
mov
and
cmp
fwait
in
dec
in
fild
dec
xor
mov
mov
test
jno
mov
repz
mov
cmp
inc
sbb
and
ret
push
and
fimul
std
in
int
cs
xchg
add
adc
and
cmp
sbb
jmp
xor
cmps
adc
or
jle
sub
mov
cmp
bnd
(bad)
test
aam
sbb
mov
sti
cmp
xchg
jo
cmp
push
pop
inc
out
pushf
lea
mov
popa
xor
test
rcl
add
push
or
mov
icebp
and
xchg
pop
rcl
je
mov
bound
stos
test
das
mov
pop
icebp
jge
fsub
fcom
jp
sub
test
push
push
outs
stos
sahf
sub
or
(bad)
cmp
or
sbb
sub
xor
add
retf
mov
mov
jb
cmp
mov
cmp
pushf
(bad)
out
pop
pop
xor
shl
push
mov
(bad)
jp
mov
popa
cmc
xor
mov
cmp
add
adc
dec
mov
inc
mov
xchg
push
lods
cld
mov
fcom
inc
add
call
cmps
jg
fwait
or
jmp
arpl
jecxz
jnp
mov
js
ja
jnp
loopne
mov
iret
movs
xchg
(bad)
cli
push
pop
popf
dec
aas
inc
and
or
pop
adc
mov
test
inc
dec
in
mov
dec
mov
(bad)
mov
aad
xchg
ret
icebp
in
lahf
xor
fdivr
and
imul
adc
hlt
out
cdq
xor
(bad)
jp
xchg
xor
push
mov
fsub
xchg
jg
jmp
dec
sub
jg
ficom
fwait
ret
adc
push
gs
jne
mov
in
mov
imul
jl
scas
xchg
mov
sbb
loope
rol
stc
add
jns
movs
arpl
mov
xlat
dec
test
fld
pop
in
and
jg
add
loopne
push
scas
das
add
dec
pop
xor
lds
or
mov
inc
call
sub
in
movs
ins
pop
mov
sahf
cmc
jge
in
add
out
dec
lods
pushf
dec
jecxz
inc
dec
in
lock
cmp
xor
(bad)
mov
lea
inc
sub
pusha
mov
lahf
sub
in
fwait
jmp
popf
jecxz
dec
bound
rcl
bound
jmp
mov
adc
xchg
aaa
mov
(bad)
dec
div
xchg
sbb
enter
pusha
jl
inc
test
in
mov
mov
jmp
adc
and
inc
mov
mov
push
lods
dec
sub
stc
mov
add
push
sub
dec
mov
lahf
push
cwde
xor
imul
out
push
dec
retf
mov
sahf
dec
mov
mov
xchg
js
mov
pop
stos
push
ror
adc
adc
enter
lea
pop
and
cdq
jmp
jb
xchg
sbb
mov
dec
and
adc
outs
into
pop
pop
shl
sub
in
mov
cmp
les
xchg
lea
icebp
push
jbe
pop
mov
ss
and
xchg
dec
jb
inc
push
mov
adc
shl
fcom
jl
jae
mov
mov
sub
cmp
(bad)
fistp
mov
jb
lods
jge
xor
(bad)
sbb
int
rcl
cmp
mov
xor
pop
cwde
xchg
(bad)
mov
push
test
cld
or
cmp
dec
or
jns
pop
sbb
and
cmp
sub
iret
pop
sub
push
or
mov
lods
fdiv
(bad)
xor
sbb
ret
xor
pop
aad
push
push
mov
fwait
mov
(bad)
imul
xor
sti
aaa
jne
mov
cdq
std
xchg
xchg
pushf
shr
xchg
add
inc
or
mov
mov
loopne
inc
jmp
rcl
jo
or
dec
lds
jns
call
(bad)
cmp
mov
pop
cmps
lods
and
bswap
(bad)
and
dec
cdq
mov
pop
inc
pop
mov
pusha
fnstcw
mov
out
or
inc
(bad)
data16
lock
sbb
stc
ret
ds
stc
and
xor
(bad)
fcom
sub
lods
jge
jl
sbb
int3
gs
sbb
je
and
arpl
out
pop
loope
adc
ror
push
pop
clc
test
rcr
push
xor
scas
xchg
mov
cmp
cmp
fwait
jmp
add
sub
sub
mov
jno
pop
es
clc
movs
and
dec
push
jae
cmps
jo
pop
cmp
call
mov
clc
cli
rol
add
stos
fisub
xchg
fsubp
xbegin
mov
mov
and
adc
out
sbb
push
xor
shl
mov
fnsave
in
push
scas
sub
push
dec
and
call
and
rcr
mov
in
cli
ror
pop
sbb
mov
cmc
fs
pop
pop
mov
push
add
inc
movs
(bad)
(bad)
jge
imul
mov
mov
push
stc
repnz
jmp
lds
sbb
mov
jmp
stc
cli
bound
pop
lock
std
shl
imul
push
cdq
pop
les
into
clc
pusha
out
ins
rcl
int3
test
sbb
out
add
cld
sahf
sbb
adc
sbb
jae
fbstp
push
outs
lods
lods
xchg
(bad)
sub
dec
fnstcw
sub
add
sar
icebp
or
outs
clc
mov
aaa
ss
mov
rol
mov
xor
lods
nop
cmp
in
sub
push
unpcklps
dec
ficom
les
push
iret
sub
loope
add
inc
sub
frstor
int
iret
lods
stc
out
je
retf
inc
cmp
push
push
sub
mov
ins
push
jecxz
aaa
cmp
fcomp
out
cmp
repz
gs
mov
sbb
adc
mov
cld
sbb
cmps
sbb
outs
mov
xchg
stc
mov
mov
pop
push
and
xor
push
xlat
(bad)
sti
mov
adc
clc
mov
ret
cmps
mov
sub
rol
jg
rol
cdq
bswap
inc
sub
jmp
push
inc
mov
dec
jle
inc
retf
jecxz
add
repz
imul
jmp
jp
fnsave
loop
repz
popa
sbb
inc
imul
sbb
xor
lods
push
je
ja
ficomp
add
sbb
jl
neg
jne
mov
fprem
push
sub
inc
outs
mov
pop
test
add
xchg
sahf
dec
mov
fwait
in
jbe
xchg
jmp
enter
adc
xchg
call
add
cmp
rcr
sbb
(bad)
dec
cli
dec
adc
pop
and
ror
sbb
sub
mov
stos
xchg
lods
out
in
xor
ror
xor
or
push
mov
es
pop
cwde
jle
jecxz
fld
mov
dec
mov
and
sar
xchg
shl
cli
mov
sbb
dec
les
mov
mov
pop
out
stos
loope
enter
jbe
outs
scas
movs
daa
scas
or
fsubr
mov
scas
das
adc
inc
jg
inc
mov
cmp
sbb
pusha
shr
repz
mov
rcr
push
jmp
cpuid
sub
mov
(bad)
aas
test
pop
pop
aad
sahf
mov
popf
fsubr
nop
ja
retf
cmp
pop
xor
daa
out
mov
dec
add
int3
mov
adc
out
call
fistp
pop
push
fadd
push
mov
(bad)
jmp
clc
loopne
arpl
mov
inc
cmp
sbb
bound
dec
sbb
mov
mov
fiadd
outs
dec
ins
push
stos
retf
dec
push
shl
ins
push
and
dec
scas
lds
and
imul
jecxz
arpl
out
or
(bad)
pop
aas
pop
nop
dec
aad
push
popf
xor
loopne
jmp
sbb
mov
mov
xor
adc
std
xchg
push
jbe
les
cmp
sti
cmp
mov
mov
pusha
sub
fwait
pop
mov
loopne
push
les
enter
scas
cmp
jmp
push
out
cdq
mov
push
push
mov
sti
scas
fs
mov
pop
push
xchg
mov
test
stos
loope
sub
out
aad
popa
aaa
jo
push
push
ret
xor
sbb
push
or
std
(bad)
gs
rcl
cwde
jno
das
out
mov
pop
inc
mov
cmp
(bad)
push
sbb
es
cmps
mov
mov
mov
mov
inc
xor
xchg
data16
dec
out
or
jg
in
mov
cwde
arpl
and
cmps
push
xlat
aaa
iret
mov
or
cmps
cdq
movs
das
dec
add
repz
jp
pushf
mov
add
cmp
scas
xchg
repz
mov
jecxz
mov
in
jb
mov
jne
pop
or
shl
ss
pop
jbe
ficomp
lods
mov
shr
hlt
inc
lods
(bad)
pop
add
cmp
clc
add
dec
outs
pushf
(bad)
adc
jmp
rcr
pop
mov
cmps
mov
mov
xor
ficom
pop
mov
inc
hlt
fwait
jo
out
mov
jecxz
push
cmps
pop
pop
imul
lds
mov
shl
rcr
jno
xchg
fs
inc
mov
sub
lahf
jl
push
xor
cli
lock
out
cld
xor
jl
rcl
fbstp
aas
jbe
mov
ret
iret
cmp
xor
jnp
je
xor
(bad)
jge
add
sub
adc
add
or
or
xor
dec
out
jno
dec
call
xor
lods
cmp
fisttp
iret
sahf
mov
test
push
rcl
mov
pop
xchg
and
push
je
xchg
xor
movs
jns
jnp
inc
repz
mov
shl
dec
inc
pop
pop
mov
mov
and
mov
es
sub
ret
std
or
into
inc
jo
pop
xor
into
mov
push
je
push
and
in
push
stc
inc
push
adc
das
retf
(bad)
sahf
cwde
test
das
(bad)
sub
mov
addr16
out
mov
xchg
cmp
mov
pop
or
sbb
push
adc
and
cmp
jl
xchg
push
test
leave
out
dec
jp
xor
push
bound
xchg
cmp
sub
adc
mov
dec
shl
xchg
lds
inc
outs
and
ins
jmp
jmp
jnp
fnstenv
push
lock
push
xchg
dec
fsub
das
jp
retf
push
in
push
sub
and
jns
add
or
int
ret
adc
arpl
test
pop
jns
sub
nop
push
add
iret
sub
push
push
jmp
pop
or
jle
pop
pop
jg
faddp
dec
or
push
(bad)
fiadd
xchg
repnz
inc
sbb
ds
cld
or
push
xchg
std
fisub
sti
aaa
mov
xchg
(bad)
mov
mov
shl
jb
push
scas
leave
push
test
jge
mov
scas
or
fs
imul
mov
ds
push
aaa
sbb
fistp
das
pop
mov
dec
test
mov
stos
adc
xchg
adc
retf
loopne
loope
and
ror
fisttp
in
ret
jno
jge
test
das
add
inc
xchg
xor
pop
pop
pop
repnz
add
neg
add
inc
and
js
cmp
or
leave
loope
inc
mov
cli
ja
jno
jge
into
neg
xor
idiv
gs
call
pop
jns
sar
pop
xor
ror
mov
add
imul
inc
test
mov
test
hlt
test
mov
retf
movs
inc
pop
js
fwait
cmp
jbe
fisub
ficom
sbb
push
mov
mov
mov
ret
pop
fisttp
jo
inc
hlt
xor
and
xor
addr16
adc
sbb
sub
cmps
sti
ins
push
mov
mov
push
pop
xor
add
xor
and
jge
pop
sbb
imul
js
pushf
push
jecxz
and
aam
cmps
cmps
ret
push
mov
dec
mov
push
ret
adc
xor
xchg
iret
mov
fwait
lods
enter
das
push
ja
cmp
jmp
sbb
cmp
push
mov
adc
dec
cmps
hlt
adc
test
loope
adc
ins
and
push
lea
push
lods
sub
into
xor
and
in
stos
stos
jge
mov
mov
outs
cli
retf
sbb
sub
mov
test
jnp
aaa
repz
xchg
inc
out
jno
mov
push
arpl
pop
ret
gs
or
test
cmp
scas
mov
add
mov
imul
rol
loop
retf
xor
sbb
inc
mov
pop
inc
es
push
and
and
mov
inc
inc
mov
mov
idiv
std
outs
ins
inc
(bad)
cmp
jmp
retf
ds
add
xchg
add
test
lahf
gs
enter
aas
pop
or
xchg
jg
xor
xchg
jbe
idiv
and
inc
rcr
pop
push
cmp
inc
and
cwde
mov
add
mov
outs
idiv
mov
push
sub
daa
dec
outs
pushf
xchg
add
addr16
in
mov
ins
ret
mov
int3
std
into
inc
and
jbe
popf
mov
or
jl
ss
adc
cmps
adc
add
stos
sub
mov
ficomp
push
retf
shr
pop
dec
sbb
fcom
cmc
imul
pop
dec
sbb
dec
sub
mul
sbb
push
jno
push
lds
mov
inc
mov
dec
popf
in
mov
retf
sbb
neg
dec
jmp
imul
mov
scas
cld
sub
(bad)
stc
or
jle
in
lea
and
cs
dec
movs
xchg
out
retf
fdiv
xorps
lds
or
mov
push
test
fstp
pop
aam
jmp
sub
xchg
mov
dec
int3
call
fs
mov
jbe
nop
cs
xchg
nop
pushf
aam
jp
mov
xchg
xor
bound
icebp
les
add
std
imul
mov
mov
xor
test
pop
jne
cmp
mov
test
lds
lea
in
hlt
ss
into
popf
sar
js
lds
sub
arpl
cld
push
ins
fistp
(bad)
aas
xchg
scas
cmps
in
mov
adc
mov
out
cmp
jmp
sub
retf
fisub
fmul
lea
mov
fld
add
outs
mov
xchg
lods
das
lea
call
in
push
sbb
aas
clc
not
in
ins
mov
daa
ja
test
retf
mov
xor
xchg
imul
mov
dec
mov
outs
add
(bad)
push
les
jp
mov
mov
push
jnp
jmp
adc
mov
push
and
push
dec
xchg
mov
inc
hlt
ds
cmps
retf
dec
xchg
lds
ja
fmul
sub
sbb
push
cld
lds
sub
jg
idiv
sti
popf
fisub
push
mov
or
stc
xchg
stos
pop
push
jbe
mov
mov
or
jp
ins
aam
loope
push
fbld
xor
ins
xchg
push
shr
fcmovne
and
movs
aaa
cmp
pop
enter
les
and
daa
call
fwait
mov
dec
mov
jo
adc
add
push
or
mov
fmulp
sbb
aad
mov
cs
adc
jo
jno
sbb
call
dec
lds
dec
sub
(bad)
leave
inc
repz
mov
outs
dec
aaa
inc
and
and
mov
ja
imul
les
xor
call
jmp
loope
mov
mov
lahf
cli
sub
xchg
in
stc
loopne
mov
mov
jmp
ret
mov
pusha
std
mov
mov
(bad)
push
adc
inc
mov
mov
inc
cmc
jnp
mov
es
in
xor
adc
push
sbb
sbb
mov
daa
call
nop
sub
lea
(bad)
clc
mov
mov
xchg
jle
pushf
and
add
or
loope
xor
sbb
push
add
inc
int3
jno
cmps
clc
ins
xor
stos
adc
test
not
outs
xchg
pop
aam
mov
mov
out
int
leave
ja
das
cmps
sbb
push
into
idiv
jecxz
xlat
dec
hlt
push
cmp
mov
cmp
jp
scas
and
and
leave
push
add
adc
or
or
in
ret
add
or
sub
pop
ficomp
jp
js
ret
enter
xchg
test
outs
imul
jg
cmp
movs
int
inc
pop
xchg
mov
lahf
adc
mov
(bad)
xor
xor
loop
sbb
fndisi(8087
jns
pop
sub
into
pop
ins
xor
out
dec
ins
lds
stos
push
fild
imul
sti
ficom
sbb
popf
jbe
mov
add
inc
pushf
nop
inc
mov
mov
xor
push
sbb
mov
stos
cmp
retf
ins
pop
push
adc
sti
fidivr
imul
mov
inc
cmps
xchg
jge
jmp
adc
dec
jb
sub
jns
rcl
dec
adc
icebp
ds
or
sbb
jle
pop
dec
frstor
add
xchg
push
ja
pop
and
(bad)
leave
jne
jg
adc
scas
addr16
and
loopne
add
jl
aaa
xor
mov
mov
ror
sbb
or
xchg
adc
iret
fdiv
dec
les
xor
sub
cmp
push
jmp
mov
sbb
cmp
jmp
imul
arpl
test
dec
mov
cmp
iret
xlat
test
mov
dec
rcl
or
out
repnz
ror
cmp
pop
xor
jns
xchg
inc
dec
aad
xchg
loope
imul
sbb
pop
mov
pop
popf
jne
xor
mov
push
mov
aas
js
lahf
in
xchg
or
mov
xchg
and
icebp
cdq
jo
adc
add
adc
xchg
mov
sbb
in
mov
adc
inc
mov
test
jge
and
cmc
push
sar
mov
push
mov
cmp
push
push
adc
icebp
fcom
ret
inc
or
cmp
in
enter
lds
mov
mov
mov
adc
and
sti
clc
mov
push
dec
xchg
dec
xchg
or
jl
mov
mov
sub
(bad)
xlat
pop
cmp
jmp
push
movs
mov
cs
pop
mov
dec
sub
(bad)
sti
adc
lahf
and
mov
or
std
jmp
popf
cmps
je
and
fld
(bad)
mov
in
add
pop
into
mov
dec
into
popa
mov
mov
inc
sub
cmp
adc
test
mov
dec
push
jp
test
xchg
sbb
das
iret
push
jg
add
je
in
retf
add
inc
fdivr
or
mov
aaa
ret
clts
outs
test
call
jecxz
adc
dec
mov
jecxz
adc
addr16
sbb
or
adc
sahf
mov
test
pop
push
cli
aas
cmps
popa
inc
stos
mov
add
pop
xchg
sub
retf
cmp
ja
inc
sub
push
rcr
retf
test
add
ret
nop
mov
not
push
dec
pop
popa
adc
ror
pop
(bad)
sub
adc
push
xor
jp
pop
cs
rcl
sbb
ret
push
xchg
pop
xor
dec
add
push
push
lds
inc
cwde
mov
ret
or
(bad)
cdq
sub
and
aas
mov
jne
popf
xlat
add
adc
cmps
out
fild
pop
cs
shr
dec
cmp
xor
inc
pop
hlt
fdiv
push
mov
pop
pop
pop
mov
jno
adc
pop
retf
cmp
adc
fcom
repz
ja
xor
movs
xchg
in
mov
inc
mov
sub
push
icebp
xchg
ss
mov
xchg
aas
add
ss
test
sar
inc
ja
mov
mov
lods
int
cs
mov
rcl
mov
mov
ror
pop
in
fcom
pop
jp
shl
out
inc
and
adc
inc
dec
jecxz
scas
cmps
sub
ss
sub
cmp
jge
mov
xchg
jg
sbb
aaa
xor
leave
outs
mov
adc
mov
mov
or
cmp
mov
push
pop
mov
in
push
shl
xor
mov
mov
outs
inc
push
sub
cmp
jo
mov
push
push
mov
bound
push
ins
mov
sub
stos
in
sbb
repz
ins
gs
ss
call
cmp
dec
mov
fistp
jge
adc
xor
popf
jnp
retf
fwait
mov
shl
pop
inc
mov
dec
fidivr
idiv
or
iret
jl
jbe
fld
fist
scas
pop
icebp
xor
push
test
jb
pusha
movs
loopne
fst
sar
enter
xchg
inc
jp
cmp
cli
outs
mov
(bad)
retf
imul
push
adc
adc
and
adc
pushf
xor
xchg
jl
ret
sub
icebp
mov
(bad)
outs
xchg
mov
xchg
push
cli
les
xchg
popf
je
ret
aaa
movs
jle
xor
aaa
mov
out
in
or
jae
jnp
nop
ins
daa
mul
cmps
imul
(bad)
pop
jecxz
clc
dec
leave
dec
(bad)
psraw
(bad)
hlt
mov
push
xor
mov
ds
adc
or
and
imul
fcom
adc
pop
lock
push
or
addr16
retf
bnd
(bad)
jb
xchg
push
adc
imul
and
rcl
hlt
jnp
cmp
fild
loope
dec
pusha
or
dec
or
mov
retf
xchg
lock
fcomp
jb
aad
mov
pusha
adc
mov
mov
inc
sub
int3
das
out
push
jg
adc
fisttp
leave
aad
add
or
sti
cld
push
jge
ins
sbb
mov
scas
test
push
or
ss
pop
inc
fst
mov
xor
push
mul
dec
adc
inc
or
cmc
fbld
jo
and
test
fdiv
daa
jl
push
dec
push
xchg
std
xlat
imul
in
nop
shl
dec
inc
jno
push
scas
mov
sar
pop
icebp
mov
sti
daa
push
mov
or
inc
aas
jno
movs
jp
pop
pop
add
inc
cmp
add
and
inc
test
sbb
in
sub
movs
xchg
out
or
inc
ja
jmp
dec
xchg
enter
mov
mov
aaa
inc
adc
jg
(bad)
add
jmp
fbld
fild
sub
jnp
sbb
into
pop
lahf
pushf
enter
sbb
mov
sbb
add
sti
xchg
xor
imul
mov
or
test
aad
aaa
pop
mov
mov
inc
shl
fstp
in
sub
rcr
mov
maskmovq
neg
ds
sbb
adc
sbb
mov
cmp
aad
pop
(bad)
hlt
mul
stos
mov
add
xchg
add
or
mov
mov
iret
stc
mov
cmp
test
mov
dec
xchg
push
xor
push
push
or
test
lahf
push
push
jp
fisttp
retf
pop
(bad)
sub
add
jmp
pop
dec
in
rcr
or
cmps
enter
test
test
push
das
push
repnz
jo
fs
push
sti
shl
xchg
cmp
add
into
jbe
xchg
push
sbb
pop
xchg
dec
loop
je
inc
loope
cmc
repnz
inc
je
mov
aas
mov
xor
xchg
push
mov
cmc
cwde
fnstsw
mov
rcr
xchg
adc
pop
aaa
jbe
jmp
in
arpl
jmp
out
lea
xchg
(bad)
push
cmps
outs
movs
fs
adc
jnp
jge
cmp
adc
or
loopne
xor
add
loope
(bad)
sti
stc
js
mov
xor
push
sub
mov
pop
jno
int3
addr16
adc
sub
cmps
neg
adc
mov
xchg
aas
xor
push
sub
mov
movs
cmp
leave
gs
mov
ins
ret
rcl
(bad)
cs
and
(bad)
cmc
in
cmp
xchg
cmp
aas
pop
inc
sbb
adc
hlt
cmps
sbb
lods
aaa
mov
mov
cmc
pop
sbb
mov
(bad)
and
call
fldcw
in
int3
fidiv
jo
leave
div
and
test
xlat
je
mov
cmp
push
aad
cmc
inc
add
jo
push
into
inc
xchg
stc
in
cmp
pop
adc
call
pop
jge
xchg
stos
and
retf
sub
test
jmp
ins
(bad)
in
inc
popa
sbb
cmc
mov
adc
or
push
fucomp
jge
rcr
jmp
jp
addr16
cld
cmp
fisub
inc
push
repnz
cmp
adc
jnp
adc
mov
cmp
rol
jl
hlt
es
pop
push
sahf
and
out
pop
mov
add
aam
sbb
add
pop
add
ret
mov
jmp
and
mov
adc
inc
stos
fldenv
sbb
xchg
pop
mov
sbb
call
nop
sahf
ss
and
mov
mov
arpl
popf
inc
rcl
lock
cmp
je
(bad)
xor
cld
cmp
sar
xor
mov
or
icebp
sbb
mov
ficom
and
scas
jmp
adc
push
aad
in
lods
jnp
fidiv
in
ss
adc
ds
push
adc
and
sub
adc
pop
or
xor
and
mul
sbb
rol
mov
mov
es
mov
sub
dec
inc
or
mov
das
mov
and
pop
sahf
jecxz
or
mov
or
stos
add
cwde
xor
scas
push
pop
add
repnz
je
std
test
pop
retf
sub
sub
cmpxchg
fwait
or
mov
mov
lahf
pop
out
pop
pop
mov
cmps
xchg
sub
xlat
xlat
push
lea
sbb
iret
retf
int
lods
push
sub
pop
dec
adc
mov
fstp
jp
adc
xchg
sub
mov
jne
lock
shl
push
inc
pop
rol
inc
push
jle
sbb
inc
and
pop
mov
sar
push
fs
fnstcw
sahf
push
sahf
outs
fmul
shl
jge
enter
(bad)
sbb
jns
pop
cmp
sbb
and
(bad)
mov
cmp
mov
popf
lods
aam
loop
or
imul
mov
pop
fbld
(bad)
cld
mov
lea
cmp
mov
adc
leave
jne
dec
sub
enter
push
xor
and
sbb
stos
sub
mov
cmps
ret
inc
mov
jb
push
(bad)
cmps
int3
sub
shr
aaa
xor
out
gs
je
xor
push
in
adc
iret
in
fldenv
popf
pop
or
and
sbb
jno
stc
outs
sub
ds
std
fmul
or
(bad)
or
xor
inc
mov
jl
mov
movs
mov
add
jne
cmp
aaa
lahf
retf
iret
mov
mov
test
sbb
push
test
mov
sub
les
pop
ds
mov
pop
pop
cmp
scas
mov
and
fdiv
jmp
inc
(bad)
push
adc
or
push
aaa
cmps
xchg
push
mov
pop
push
ins
dec
test
fsubrp
inc
xor
mov
xchg
sbb
ret
cmp
repz
push
das
mov
pop
in
pop
ins
pop
arpl
jbe
mov
inc
icebp
movs
push
mov
mov
vmwrite
fwait
sbb
sbb
push
mov
mov
data16
cmps
dec
cmp
jecxz
lods
(bad)
les
retf
or
pop
lock
int3
fwait
xchg
popf
out
mov
fwait
mov
xchg
rol
mov
sbb
hlt
adc
icebp
pop
sub
add
push
dec
fldcw
sbb
mov
cmps
test
mov
mov
pop
dec
sub
xchg
lods
(bad)
mov
jmp
movs
pop
push
leave
jne
movs
mov
bound
lods
das
adc
rcl
cmp
and
and
sahf
sbb
cmps
pop
in
jnp
call
and
stc
push
add
es
(bad)
push
adc
packuswb
xchg
mov
adc
pusha
pop
sar
mov
sbb
sub
sub
rcr
pushf
and
out
les
sahf
stos
inc
push
(bad)
xchg
iret
lds
fld
fs
pop
dec
(bad)
shl
pop
pop
xor
dec
jecxz
es
xchg
or
xchg
(bad)
fcmovu
jb
xchg
mov
lock
in
popf
dec
jns
out
sub
jns
pop
pop
and
test
bound
mov
inc
rol
add
adc
popa
cmp
jl
or
xchg
dec
aas
push
pop
push
pop
pop
aaa
je
js
scas
(bad)
sub
add
xlat
cld
and
fcmovb
dec
and
addr16
jmp
and
mov
jle
(bad)
ins
jmp
dec
mov
mov
cmp
leave
fstp
cmps
stos
cmps
mov
cmp
dec
enter
mov
mov
push
and
or
jmp
mov
inc
xchg
jne
(bad)
add
jl
mov
jb
adc
(bad)
xor
push
loop
movs
sbb
dec
and
fsubp
add
push
jbe
retf
push
push
jge
pop
fldcw
dec
or
pop
out
cli
jo
push
and
mov
mov
fistp
and
cwde
pmulhw
or
(bad)
ret
ja
in
push
and
mov
sar
(bad)
fisub
sub
(bad)
iret
pushf
push
add
std
outs
push
sub
and
cdq
test
daa
lods
rcr
mov
xlat
addr16
sbb
(bad)
mov
and
imul
jmp
lods
es
gs
test
les
jae
movs
pop
loop
xor
dec
adc
pop
add
rcl
fiadd
jge
test
icebp
out
inc
dec
ret
jo
popa
je
fild
mov
cs
jl
mov
stos
fwait
mov
xchg
mov
ds
dec
push
inc
inc
sbb
(bad)
add
call
push
bound
ret
out
mov
jl
out
xchg
idiv
iret
es
mov
aaa
xchg
dec
dec
xchg
mov
into
mov
std
lock
into
sbb
or
jg
jne
mov
jmp
xchg
mov
or
and
int3
dec
push
xor
sub
imul
mov
cmps
shl
aaa
inc
test
sti
or
sar
aad
cmp
ja
jns
dec
or
cld
jp
sbb
inc
mov
push
adc
pop
push
js
pop
jmp
jg
shl
mov
imul
ss
jg
pextrw
dec
mov
dec
gs
cmp
xchg
fadd
jge
or
cld
loopne
cmp
std
inc
push
sar
add
adc
sbb
into
adc
movs
jo
rcr
mov
xchg
mov
mov
or
cmp
cld
cmp
(bad)
cmp
mov
jmp
mov
(bad)
scas
sbb
loop
push
lods
dec
push
or
aaa
sub
add
add
add
inc
cdq
jbe
hlt
mov
cmps
add
call
retf
xchg
mov
(bad)
or
imul
cmp
call
rep
mov
aad
sbb
and
lock
aas
cli
rol
xchg
jmp
and
retf
jbe
or
sbb
(bad)
cmp
hlt
jbe
lock
jnp
push
xor
or
mov
and
inc
cmp
lods
sbb
mov
or
nop
mul
cmps
sub
or
mov
clc
cmps
push
xor
pop
in
xchg
or
aas
xchg
gs
in
push
sti
daa
(bad)
push
inc
sti
stc
jae
stos
in
(bad)
jbe
(bad)
ficomp
loop
jns
jmp
movs
call
xor
into
outs
(bad)
mov
loopne
mov
push
push
test
test
cmp
adc
ins
push
or
xchg
aad
or
mov
lahf
jge
jo
test
inc
mov
adc
stc
jns
das
inc
test
test
pop
aam
movs
jnp
in
lods
cmp
retf
pop
xor
cmp
mov
rcl
nop
and
test
add
xchg
rol
push
xchg
nop
fwait
dec
dec
dec
mov
pop
outs
lock
inc
dec
inc
stos
xor
rcr
adc
shl
add
sahf
les
es
clc
cmp
addr16
inc
jnp
jmp
jne
bound
inc
adc
or
rcr
jb
adc
xor
(bad)
sbb
(bad)
fwait
int3
clc
and
xchg
mov
pop
mov
mov
inc
out
lds
je
or
sub
das
fistp
cmp
dec
fidiv
xor
gs
mov
cmp
nop
scas
xor
xor
shr
ret
lds
adc
inc
sub
repz
aaa
jp
cmps
push
push
inc
call
ffree
inc
dec
lock
sub
ret
loope
ins
mov
arpl
arpl
popa
stos
or
pusha
int
pop
ret
add
leave
cs
cwde
inc
mov
pop
push
call
ret
cld
(bad)
jmp
shl
sub
push
fs
pop
xchg
mov
sbb
sbb
xchg
popa
ud0
xor
push
sbb
inc
sbb
scas
and
repnz
xlat
push
int
mov
push
xlat
fild
dec
cmp
pop
cli
jnp
mov
inc
popa
push
jns
jnp
mov
rcl
outs
out
cmp
rcl
xor
push
out
pop
loop
jp
xchg
mov
and
xchg
nop
xchg
cmp
and
add
and
or
lods
dec
push
mov
arpl
inc
push
sub
mov
outs
in
cs
les
jne
adc
enter
push
(bad)
dec
outs
jne
xor
leave
dec
adc
mov
push
dec
sub
and
out
rcl
jl
sahf
push
test
mov
and
lods
lods
xlat
add
cmps
push
and
xchg
mov
push
push
mov
in
in
outs
sbb
add
xor
data16
pop
mov
pop
shl
or
and
push
scas
sbb
cmp
fistp
xor
sub
adc
sub
xchg
(bad)
jge
scas
jl
add
stc
cmps
or
std
adc
cld
adc
xor
mov
adc
jmp
mov
movs
in
mov
fwait
dec
ret
and
or
fst
sub
xor
add
pop
repnz
push
nop
sub
es
inc
ret
loopne
ins
arpl
je
pusha
fsub
lds
or
and
cmp
test
jno
into
sbb
jno
jne
lods
cmp
dec
mov
loop
mov
inc
enter
(bad)
rep
aam
pusha
loope
pop
pop
nop
mov
in
cmp
hlt
xor
jmp
mov
mov
xchg
mov
mov
mov
push
jecxz
adc
jle
sub
push
xor
(bad)
and
mov
push
cmp
(bad)
leave
mov
loopne
shr
outs
xor
lds
dec
add
and
mov
sub
aad
xor
stos
sbb
mov
jmp
jg
xchg
loope
in
(bad)
jge
mul
or
jmp
xchg
mov
add
adc
loopne
ret
sahf
shl
pop
xor
ins
test
int
fstp
pop
mov
popa
mov
push
mov
sbb
cld
mov
int
fild
cmp
cmps
xchg
imul
cs
shr
mov
mov
mov
ja
mul
stos
adc
adc
lds
sbb
popa
lahf
or
int
mov
aam
cmp
jbe
add
cmp
sub
or
or
mov
aas
ror
lahf
loope
jmp
ret
imul
js
rcr
loop
imul
arpl
mov
scas
mov
pop
and
sahf
rol
lods
mov
aaa
mov
xchg
test
mov
dec
cdq
dec
pop
ret
jle
cmp
dec
dec
out
lahf
xor
xlat
jg
mov
(bad)
add
neg
repz
add
mov
mov
movs
or
call
scas
push
and
test
idiv
(bad)
call
push
and
(bad)
gs
mov
or
xchg
inc
stos
push
push
enter
xor
cmp
push
xor
mov
mov
ret
inc
dec
shl
mov
mov
xchg
leave
mov
es
rcl
mov
jge
ins
into
pop
xchg
fsubr
xor
ins
cli
xchg
pop
stos
sbb
mov
sub
dec
(bad)
aas
add
fldenv
adc
es
dec
fsub
mul
mov
and
out
test
mov
xor
mov
add
mov
push
loopne
sub
leave
mov
sahf
xlat
and
pop
mov
inc
(bad)
sar
sub
xchg
xchg
scas
mov
mov
push
movs
adc
xchg
push
mov
pop
add
pop
inc
mov
and
sahf
test
mov
push
push
es
lock
jmp
pop
and
jge
das
bound
into
xchg
dec
fld
push
in
add
sahf
xor
or
ret
jmp
scas
or
in
aad
scas
nop
adc
mov
xchg
adc
rcl
out
push
fist
sbb
arpl
les
imul
div
pop
and
cmp
and
mov
mul
adc
xchg
jae
push
pop
aas
stos
mov
in
(bad)
(bad)
jo
pop
outs
cmc
sbb
or
dec
pop
mov
daa
and
cmp
(bad)
mov
test
push
loope
enter
cmc
xchg
fdiv
in
jg
sub
jge
ins
movs
mov
cmps
sub
mov
fisubr
(bad)
sar
movs
pop
(bad)
loop
add
pop
sub
(bad)
and
xor
cmp
jge
aad
scas
sbb
push
lds
iret
dec
out
add
cmp
xchg
cmp
push
icebp
js
icebp
imul
imul
mov
push
cmp
out
and
jbe
or
scas
or
mov
push
icebp
sbb
pop
icebp
and
xchg
sub
es
mov
add
movs
dec
cmps
sub
repnz
mov
inc
loope
lahf
push
adc
mov
mov
lea
ffreep
dec
mov
repnz
cmc
(bad)
repz
fimul
jle
popf
call
add
fisub
fsubr
je
cwde
je
xchg
pushf
xor
loope
iret
lock
stos
add
pop
movs
fimul
sub
adc
sbb
(bad)
jp
clc
xor
(bad)
mov
jp
sub
inc
sti
ins
sti
xchg
adc
or
sbb
add
bound
popf
loop
inc
xor
jae
in
lods
pop
in
inc
mov
cwde
mov
or
leave
pusha
sbb
nop
push
add
jb
jne
cdq
das
popa
cli
xchg
or
sub
int
std
inc
push
arpl
ret
pop
outs
jmp
mov
push
pusha
push
fimul
iret
jg
sbb
jecxz
jnp
and
ds
jge
push
add
mov
stos
imul
add
aaa
out
outs
cmps
jp
adc
mov
pop
js
out
push
push
dec
in
mov
cdq
sub
rcr
sbb
popa
neg
popf
push
sub
sbb
cli
jle
ret
idiv
sbb
dec
mov
inc
cmp
in
or
mov
repz
jecxz
cmps
sub
sahf
leave
push
xor
mov
add
cmp
fimul
mov
mov
mov
xlat
or
pop
aad
cwde
jle
and
inc
enter
xor
dec
xchg
inc
(bad)
imul
int
push
xor
mov
test
mov
xor
push
pop
lods
push
inc
jge
add
repz
add
shr
push
imul
fld
stos
movsx
sub
sahf
dec
and
mov
aad
int3
sub
ins
pop
scas
or
xchg
leave
jo
or
fs
pop
inc
jns
jmp
scas
jbe
jle
out
rcr
and
pop
sub
sub
push
clc
in
(bad)
pop
pop
dec
jmp
in
inc
sti
mov
xchg
ds
add
mov
or
aas
push
jmp
cmp
imul
sub
ins
dec
xchg
and
pop
dec
mov
mov
mul
push
push
test
or
or
sbb
adc
nop
cwde
jmp
ja
or
ins
sbb
cmc
and
aad
pop
adc
mov
mov
cmp
sbb
dec
ficomp
and
rcl
test
mov
shl
push
and
loope
fldcw
or
inc
push
stos
mov
sbb
xchg
jns
mov
imul
cmps
and
or
rcr
leave
call
cmp
fwait
mov
add
fdivrp
adc
lods
push
xchg
mov
lock
push
mov
aaa
pushf
in
fld
das
(bad)
leave
mov
inc
push
pop
and
loopne
mov
fwait
inc
sub
stos
mov
repnz
inc
in
pop
add
xchg
xchg
or
repz
pop
(bad)
aas
fnstcw
or
xor
inc
imul
int3
push
int3
push
pop
cmc
popa
out
lods
das
xor
(bad)
std
inc
dec
add
shl
cmp
imul
push
loop
sbb
add
div
rol
mov
stc
nop
push
xchg
fnsave
xor
das
pushf
sub
call
jnp
scas
cs
retf
aam
addr16
jle
sbb
push
mov
xchg
xchg
sub
push
and
jmp
adc
repz
dec
into
mov
push
imul
int3
aaa
stos
xor
es
test
sbb
xchg
mov
(bad)
shl
int3
jmp
neg
(bad)
add
mov
mov
ret
push
xchg
jmp
mov
mov
mov
push
mov
add
cwde
enter
jmp
or
dec
mov
jp
shl
lea
mov
ins
jne
sbb
inc
lahf
jecxz
in
push
pop
add
popa
bound
fidiv
cmp
into
rcr
cmp
adc
scas
inc
inc
pop
repnz
out
clc
jnp
adc
mov
mov
aaa
mov
push
sbb
fdiv
jl
add
movs
hlt
inc
rcl
adc
mov
arpl
mov
fimul
daa
xchg
xchg
jmp
jp
fbstp
and
push
push
sti
cmps
or
ror
inc
pop
jnp
jmp
xchg
or
jnp
test
test
sub
xor
mov
data16
xchg
movs
js
jecxz
xchg
sub
cmps
loope
ret
ud1
and
(bad)
dec
aam
push
(bad)
in
jp
movs
retf
pop
push
pop
add
sub
(bad)
mov
test
pop
jge
dec
or
stos
and
fiadd
sar
test
or
adc
or
fst
cmp
mov
fs
(bad)
push
cmps
and
nop
call
sub
jno
or
cwde
mov
retf
sbb
rcr
inc
xor
adc
pop
cmp
(bad)
pop
sti
jnp
jg
push
push
je
(bad)
jno
out
mov
or
inc
clc
test
push
sub
loopne
and
xor
jmp
dec
pop
adc
ins
jb
vmwrite
ret
inc
push
and
pop
(bad)
in
out
mov
fcmovnu
pop
stc
jno
pop
test
rcr
das
mov
fisub
or
inc
or
adc
or
xor
aas
inc
outs
or
pop
rcr
vmaxps
scas
add
mov
adc
mov
fs
dec
idiv
sub
lea
int
cmp
sbb
ss
lods
(bad)
(bad)
cmp
cs
fiadd
jnp
add
bound
fmul
inc
sbb
xchg
pop
mov
shr
test
scas
mov
cmovg
push
leave
gs
rcr
inc
push
cld
dec
ficom
sbb
(bad)
in
pusha
imul
and
scas
scas
xor
jmp
mov
dec
pop
jb
dec
jns
fsave
mov
xchg
fcomp
cmp
and
outs
dec
frstor
lock
repnz
sub
lock
shl
fiadd
fucomp
jge
ss
daa
gs
mov
adc
aad
stos
(bad)
pop
fst
and
mov
lea
mov
lods
sub
jge
(bad)
js
jno
vphaddbq
push
iret
inc
cdq
push
(bad)
dec
les
in
xchg
cwde
mov
shr
out
loope
lea
xor
test
dec
mov
retf
jo
jl
pop
loope
mov
pop
add
jns
imul
(bad)
daa
dec
in
enter
enter
cmp
xor
xor
or
imul
ficom
or
xor
adc
cmc
(bad)
shl
jmp
aas
out
fdivr
dec
jle
rcr
sbb
or
xchg
jp
pop
xchg
jae
sbb
fcmovnb
arpl
call
xor
jno
cmp
iret
dec
inc
sbb
inc
dec
ja
stos
int3
pop
cmc
mov
mov
dec
in
mov
in
dec
xchg
sti
cli
scas
push
enter
jmp
inc
in
cmp
sub
and
jmp
cmp
out
push
(bad)
mov
popa
push
pop
pop
pop
pop
(bad)
cmp
lods
inc
leave
call
mov
inc
pop
out
pop
pop
xor
inc
movs
push
mov
fistp
sbb
daa
or
inc
cld
jmp
sti
xlat
adc
and
xchg
push
push
push
cmp
out
pop
sti
push
push
(bad)
jl
stc
and
push
stos
or
cwde
gs
cmp
fs
js
mov
mov
fisttp
ja
popf
jg
pop
and
or
clc
je
xor
inc
push
inc
adc
add
or
xchg
sahf
scas
imul
out
or
aas
inc
fadd
xor
test
sub
cs
inc
fwait
popa
leave
out
xor
ins
stos
adc
jle
xor
sub
(bad)
adc
dec
test
iret
mov
push
xchg
mov
(bad)
xchg
(bad)
loope
test
add
cmp
jmp
mov
jmp
test
push
stc
es
test
xlat
cmp
xchg
mov
dec
jmp
outs
js
xchg
and
outs
popf
mov
push
dec
(bad)
data16
cmp
in
in
and
jae
shl
xor
das
call
setge
aad
loopne
push
mov
int
leave
sahf
shl
aaa
pop
sbb
jmp
or
imul
enter
out
shl
inc
out
daa
mov
fidivr
imul
int3
jns
gs
mov
adc
jge
push
adc
cmp
and
rcl
mov
cdq
ja
or
stos
repz
mov
or
movs
div
and
rcr
cmp
sbb
in
lea
mov
jb
retf
sub
cmp
xor
(bad)
sbb
mov
cmc
fmulp
dec
js
in
aad
mov
sub
pop
call
stos
xchg
out
inc
fwait
imul
xchg
jne
rol
(bad)
sub
xor
cdq
pop
xor
pop
faddp
aas
ds
and
jmp
sbb
sahf
gs
and
fldenv
xor
push
call
inc
icebp
daa
iret
push
cs
mov
popf
aaa
xchg
add
inc
dec
(bad)
cwde
add
vphsubbw
les
push
test
pop
pop
in
sbb
push
repnz
dec
in
(bad)
mov
jmp
cli
sbb
and
jbe
pop
fsub
adc
mov
daa
mov
pop
cmps
cmp
aad
cmps
add
idiv
adc
hlt
pop
lods
(bad)
jl
mov
jb
push
pop
mov
xor
mov
int
mov
js
dec
add
sub
stc
hlt
test
jne
fistp
mov
push
cmp
cmp
lea
jbe
ror
cdq
xchg
mov
or
jecxz
mov
xor
adc
aam
arpl
mov
cdq
lock
sub
mov
outs
jnp
lods
out
test
jne
leave
enter
shl
ds
or
addr16
xlat
adc
or
mov
movs
jecxz
sbb
or
adc
call
cmps
lods
retf
jl
inc
adc
sub
shl
ins
xchg
pop
lds
xchg
mov
xlat
jle
(bad)
cmp
push
lahf
inc
mov
pushf
inc
mov
dec
aad
mov
sar
mov
dec
dec
(bad)
mov
test
push
lahf
inc
inc
ins
imul
(bad)
sbb
mov
pop
cli
and
ret
or
pop
mov
sub
dec
rcr
dec
mov
call
push
lods
pop
xchg
sbb
mov
jmp
push
shl
add
xlat
push
les
jae
cmp
aas
das
dec
push
inc
mov
xor
movs
nop
push
push
ss
xlat
dec
inc
sar
fcomi
in
inc
mov
fld
xor
pop
xchg
xchg
cmp
cmp
jnp
loop
mov
xor
cdq
addr16
push
jmp
ds
jnp
lea
xchg
mov
push
(bad)
sar
in
push
pushf
rcl
pop
add
and
adc
repnz
mov
shr
inc
add
stos
dec
xor
imul
jne
jne
rcr
stos
inc
in
mov
inc
xchg
adc
or
ins
xor
clc
gs
outs
mov
jmp
fs
sub
and
cmp
enter
and
shl
jmp
pop
sub
sar
sub
xchg
data16
fdivrp
or
push
and
mov
cmp
jae
mov
pop
inc
adc
mov
adc
je
adc
fldcw
out
dec
loopne
enter
or
cmps
sub
in
push
mov
xchg
and
or
xor
mov
mov
pop
push
scas
cmps
call
xor
sar
adc
stc
jle
cmp
pop
inc
jmp
(bad)
jns
outs
mov
movs
mov
cmp
jmp
cmps
dec
leave
cmp
push
ss
das
or
jbe
pop
inc
fdivr
enter
cmp
mov
cmp
sub
fldenv
sbb
cdq
sbb
lahf
shr
mov
sub
and
sub
jns
mov
pop
sti
sub
mov
xchg
sbb
fs
mov
lahf
add
(bad)
mov
inc
fs
jmp
xchg
popa
es
es
push
jmp
shr
push
shr
push
jno
cld
iret
clc
mov
mov
in
loopne
jb
add
inc
xchg
stc
bswap
mov
retf
mov
movs
cmp
daa
add
sahf
inc
ficomp
fwait
pop
push
jne
push
fs
test
cmps
idiv
sub
dec
and
sub
jb
pop
sbb
cmp
shl
xor
sbb
ja
mov
(bad)
fsubr
mov
aad
jl
add
mov
xchg
adc
jns
in
repz
push
add
div
stc
loopne
jmp
xlat
lock
jmp
cli
test
mov
call
int
adc
ja
mov
or
repz
or
cmp
test
scas
mov
scas
stos
outs
mov
(bad)
aad
sbb
mov
out
mov
jmp
cmp
and
daa
xchg
sub
adc
(bad)
push
shl
and
pop
sbb
leave
pushf
sar
xor
fs
fsubrp
xchg
out
xor
mov
das
dec
js
xchg
sub
xchg
inc
mov
pop
sub
push
dec
push
js
add
mov
adc
mov
in
add
inc
cmp
mov
pop
xchg
add
cmp
daa
movhps
stc
adc
inc
int3
cwde
in
sbb
push
sahf
loope
add
outs
mov
mov
mov
jo
(bad)
cwde
icebp
data16
out
sbb
push
ror
pusha
into
(bad)
or
xchg
aad
cmps
scas
mov
rol
sbb
sahf
arpl
lods
aaa
add
lahf
cmp
cmc
push
push
pop
out
ss
pop
or
js
dec
pop
inc
mov
fcomp
dec
sub
in
push
jae
outs
mov
mov
pushf
pop
aad
retf
jno
push
cmps
add
mov
adc
stos
shl
xor
sbb
cmc
pop
into
jbe
sbb
or
fisubr
jne
mov
mov
push
int
xchg
push
pop
cli
pop
cmp
stos
punpckhdq
mov
and
pop
or
daa
push
sahf
and
scas
mov
aad
dec
push
popa
(bad)
jl
(bad)
cmp
jae
push
mov
mov
shl
xchg
das
add
or
ficom
push
and
stos
xchg
jne
pusha
sbb
mov
ds
mov
loope
and
fisttp
dec
mov
pop
mov
inc
mov
pop
add
shl
les
repnz
sbb
jne
test
in
cld
imul
ret
cmp
and
jnp
sbb
ffree
rep
mov
imul
pop
mov
(bad)
mov
pop
jne
and
sub
fistp
jp
xchg
jo
rcl
sub
stos
sti
adc
addr16
cmc
xor
jnp
ret
add
push
pop
cwde
in
fucomi
cmp
push
mov
and
inc
rcl
and
jle
mov
ret
mov
or
sub
shr
sbb
stos
arpl
sbb
movs
add
call
pop
mov
cmp
adc
int3
icebp
cli
sbb
inc
jno
add
mov
out
and
mov
jmp
jne
adc
cmp
(bad)
les
cmps
pusha
jb
add
add
sub
push
test
mov
mov
xlat
popa
mov
bound
lahf
fucomi
adc
jmp
cdq
loopne
out
aas
dec
test
or
repz
js
test
inc
rol
and
fcmovu
pop
pop
jnp
in
iret
mov
add
sub
sub
pop
sbb
dec
mov
es
test
sbb
sbb
mov
stc
xchg
inc
fchs
mov
mov
sbb
cs
add
lods
test
adc
add
retf
(bad)
mov
adc
scas
ds
ds
pushw
(bad)
adc
(bad)
imul
(bad)
int3
and
into
jae
dec
fadd
sbb
test
mov
iret
dec
arpl
cmp
sub
inc
xor
es
and
ja
lea
cmc
jno
mov
mov
adc
mov
cmp
add
ret
or
jge
icebp
(bad)
rcr
mov
scas
adc
dec
test
(bad)
cmp
outs
popa
arpl
inc
add
jmp
mov
stos
push
push
sbb
pop
lea
pop
arpl
dec
mov
pop
push
dec
scas
push
inc
in
out
inc
xchg
clc
nop
rcl
sbb
addr16
retf
test
mov
xchg
xchg
xchg
loop
cmp
dec
lods
mov
pushf
fwait
dec
fwait
dec
es
cmc
aad
sbb
add
dec
aad
mov
leave
xchg
jl
mov
or
dec
pop
dec
cmps
sub
scas
repnz
fnstenv
inc
inc
mov
jne
pop
fwait
xor
jmp
mov
xchg
jb
into
movs
xchg
inc
lock
inc
dec
pop
jmp
loop
jno
ss
dec
call
fs
sub
seta
daa
jl
mov
add
ds
call
and
or
fnstenv
adc
ss
fwait
sti
push
mov
mov
retf
dec
fstp
sbb
enter
mov
je
lds
std
stc
or
gs
mov
call
fwait
mov
inc
xchg
addr16
sub
xor
test
cmp
push
inc
in
xchg
mov
mov
in
retf
ja
arpl
push
lods
sbb
and
jbe
ds
stc
mov
mov
repnz
pop
or
jmp
or
sbb
dec
mov
inc
sbb
iret
imul
xchg
lds
out
add
pop
or
mov
push
cmc
daa
dec
loopne
xor
test
out
in
sar
mov
dec
call
mov
add
pop
outs
jo
mov
(bad)
gs
test
mov
and
push
mov
pop
sbb
xor
lock
pop
xchg
shl
sbb
(bad)
sub
adc
dec
ret
inc
push
das
imul
xchg
xchg
push
push
nop
cmp
push
ja
ins
pop
mov
mov
mov
call
iret
stos
dec
xlat
add
dec
xchg
inc
mov
stos
test
outs
movs
adc
jns
stos
pop
cmp
or
sbb
fwait
lea
add
adc
or
mov
sub
scas
out
sub
push
jle
aaa
outs
pop
call
jae
retf
pop
mov
mov
pop
inc
mov
pop
cmp
pop
adc
sti
push
repnz
or
lahf
jo
jl
out
or
cmp
cs
rol
mov
sbb
push
jno
cwde
in
loope
and
in
sbb
cdq
mov
mov
movs
fldcw
movs
jge
repz
(bad)
in
adc
jno
add
inc
fbstp
inc
adc
sbb
sbb
jle
popa
or
mov
es
jge
sbb
aad
mov
cmp
fwait
mov
loop
adc
dec
fwait
mov
adc
inc
lds
data16
scas
test
push
add
lods
cwde
push
inc
in
out
cmps
sub
lock
nop
stos
cld
in
xchg
ins
sub
ds
xchg
out
mov
push
fidivr
mov
mov
mov
rcr
aad
sbb
mov
pinsrw
retf
mov
jb
arpl
push
stc
push
dec
aaa
xor
aad
adc
in
inc
pop
xor
dec
into
add
cmp
pop
and
dec
push
inc
(bad)
fdiv
dec
not
pop
mov
mov
xchg
std
(bad)
adc
jne
fldcw
push
pop
adc
ret
in
mov
vpinsrw
push
xor
jecxz
push
(bad)
xchg
cmp
lock
sub
cs
xchg
add
mov
fcompp
mov
mov
mov
sub
xor
sti
iret
fisub
mov
stc
and
in
push
mov
jecxz
jmp
pop
loopne
or
jns
fs
repnz
sbb
std
adc
adc
mov
pusha
fldln2
test
xchg
loop
sti
cmps
jmp
cmp
jl
mov
and
adc
sbb
fisttp
or
or
stos
pop
cwde
lock
int
push
daa
add
fistp
xchg
xchg
sar
mov
adc
adc
and
mov
or
mov
inc
mov
aad
push
lahf
movs
in
lods
jge
pop
cmp
mov
ss
mov
adc
neg
dec
jne
inc
push
jo
add
mov
xchg
jl
lahf
mov
jle
stos
neg
or
add
retw
jno
xchg
xchg
sbb
cdq
fild
add
sbb
cli
adc
gs
mov
mov
in
loopne
inc
lods
push
loope
popf
(bad)
call
mov
mov
pop
mov
push
(bad)
jl
cli
xchg
ret
jle
aas
scas
sub
fidivr
aas
data16
mov
xor
out
je
loope
or
loope
(bad)
jno
mov
push
(bad)
lods
in
cmps
lds
sbb
mov
jb
imul
inc
addr16
shl
mov
ds
dec
fcmovnbe
leave
repnz
xor
rol
sub
sub
out
xchg
test
jmp
push
repz
call
xchg
icebp
or
add
cwde
xchg
ror
popf
mov
sbb
add
lods
pop
out
mov
sbb
inc
add
gs
test
rcl
sub
test
(bad)
add
add
sbb
ss
xor
cmp
pop
sbb
fwait
jne
adc
or
mov
daa
mov
push
movs
jns
sbb
mov
nop
pop
jle
sub
pop
cmps
jo
sub
nop
jl
cld
xor
mov
pop
iret
retf
clc
pop
popa
call
xchg
adc
fcmovnbe
(bad)
std
and
sub
mov
mov
push
cwde
clc
daa
jno
hlt
call
adc
(bad)
ins
ds
mov
ds
add
aaa
xchg
sbb
sbb
(bad)
leave
repnz
xchg
fwait
inc
xlat
push
or
mov
pop
mov
push
sbb
ds
fyl2xp1
sub
adc
cmc
loope
sar
push
xchg
(bad)
je
fstp
pusha
in
xchg
inc
mov
into
aad
or
lock
out
xchg
not
add
sub
(bad)
arpl
lds
mov
push
xchg
pop
jmp
mov
mov
xor
scas
sti
out
push
(bad)
outs
or
jg
sub
adc
aaa
vmovntdq
pop
cmp
fld
dec
push
icebp
stos
pop
jns
call
add
shld
jp
(bad)
jmp
and
mov
or
hlt
mov
sub
xchg
xchg
push
sar
mov
xor
pop
into
stos
pop
retf
jge
push
mov
push
push
sub
mov
pop
nop
retf
adc
retf
jo
(bad)
xchg
xor
and
lea
ds
pavgb
jg
mov
repz
mov
pusha
stc
jmp
lods
or
mov
or
cwde
mov
imul
sbb
rcr
push
sub
and
cdq
dec
jbe
mov
push
jnp
inc
popa
mul
in
mov
jo
mov
mov
sti
inc
push
addr16
jae
jne
adc
out
push
inc
fadd
test
loopne
pop
in
jg
cld
push
push
mov
mov
dec
sub
cmp
mov
cmc
aaa
lds
(bad)
cld
jl
xchg
fwait
xchg
(bad)
and
jg
inc
int
xchg
xor
loop
pop
and
and
xor
(bad)
xor
gs
xchg
jmp
xchg
adc
loope
sbb
mov
inc
inc
add
popf
cdq
and
shr
xchg
cld
pop
in
sbb
push
les
cli
xchg
fwait
jns
ins
lods
ror
out
inc
cmc
adc
sub
xchg
mov
push
out
jecxz
xchg
ror
dec
pop
dec
sub
in
pop
or
xchg
pop
mov
xor
and
std
iret
ret
(bad)
mov
lahf
ds
push
in
(bad)
and
pop
sar
aas
pushf
jl
icebp
adc
xor
mov
repz
test
movs
dec
xchg
cmp
fnstenv
pushf
and
and
rcl
or
push
aam
mov
push
push
daa
add
lds
in
out
xchg
and
cmp
adc
sti
cmp
mov
dec
push
pop
jp
push
call
sub
xchg
cli
loop
lods
in
mov
mov
(bad)
loope
fisttp
aam
das
js
cli
ret
jge
and
addr16
mov
fsub
xor
test
enter
cwde
mov
dec
test
push
(bad)
loopne
sbb
stos
pop
and
push
je
test
lds
or
(bad)
dec
cmp
xchg
mov
adc
jp
shl
and
and
lods
enter
mov
cmp
xor
inc
dec
mov
fdiv
and
fs
movntq
inc
xor
test
inc
fst
shr
movs
sbb
dec
call
adc
fndisi(8087
adc
dec
or
inc
das
xchg
pop
add
sti
loopne
pop
mov
in
push
pusha
xor
xor
outs
mov
(bad)
mov
cmp
mov
add
pop
rol
in
popf
(bad)
fidivr
pop
jbe
(bad)
movs
inc
xor
(bad)
jle
in
push
sahf
hlt
shl
lods
in
or
rol
dec
mov
jge
fcomp
mov
xor
jg
add
mov
lea
ror
add
cmps
ret
jmp
pop
sbb
ja
adc
imul
or
scas
stos
push
cs
loop
push
jbe
sub
or
sbb
rol
mov
repnz
aas
mov
push
jg
pushf
xor
stos
jg
loop
mov
adc
mov
mov
shl
leave
outs
sub
idiv
inc
cmp
fs
adc
jno
mov
pop
adc
out
push
loope
xchg
ficom
adc
mov
test
inc
ss
sub
sbb
pop
shl
mov
mov
jns
ins
test
sbb
jae
add
shr
shr
and
xlat
enter
ret
icebp
sbb
xchg
popa
and
sub
stos
in
jno
shl
mov
sub
xchg
(bad)
cmp
out
mov
cmp
ror
dec
push
imul
pop
stc
add
add
ret
jo
out
cs
add
inc
pop
xchg
or
pop
fdiv
stc
repnz
pop
fisttp
and
es
cmp
xchg
ds
leave
rol
sub
fild
jle
or
sbb
push
sub
mov
enter
and
xchg
add
pushf
int3
fmul
push
push
or
mov
mov
cmp
push
aas
ret
out
jbe
bound
jmp
ins
cwde
dec
inc
ficom
cmp
sub
cmp
and
test
mov
rcl
pop
sahf
mov
cmp
movs
xchg
or
ds
cmp
ja
sub
xor
or
mov
pop
lahf
pop
mov
shl
xchg
mov
sahf
(bad)
push
dec
pop
push
pop
inc
cld
xor
mov
jmp
add
adc
sbb
pop
pop
jle
pop
arpl
push
cmps
stos
pushf
pop
mov
mov
test
and
inc
fsubr
sbb
icebp
fwait
(bad)
(bad)
retf
jle
sbb
mov
xchg
mov
fiadd
(bad)
cmps
jae
repz
jnp
sbb
test
les
adc
xor
mov
and
jl
mov
test
inc
std
and
call
(bad)
sahf
jns
push
into
shl
nop
and
nop
mov
mov
lahf
lods
out
ds
jecxz
loope
mov
sahf
push
mov
in
mov
sub
lds
clc
retf
(bad)
data16
ins
xchg
jbe
add
and
scas
cld
dec
xor
cld
gs
jb
mov
xchg
jae
std
loop
std
sub
div
mov
adc
sub
(bad)
mov
push
bound
sbb
mov
xchg
cli
movs
mov
sbb
and
jge
sbb
into
lock
mov
mov
cmp
push
lahf
mov
retf
mov
mov
jne
push
cmp
xchg
iret
(bad)
cmc
pop
push
test
lods
jl
dec
in
xor
(bad)
(bad)
cld
ins
pop
mov
add
fbstp
(bad)
dec
jbe
xor
dec
adc
jecxz
xor
add
jge
pop
mov
scas
mov
(bad)
pop
aas
iret
sbb
jge
adc
jl
cmc
(bad)
xacquire
xor
out
fwait
in
popf
push
inc
neg
cli
mov
rcr
in
popw
loop
xor
cmp
sbb
mov
sub
test
stos
(bad)
jae
pushf
fnclex
inc
pop
fnstcw
dec
mov
fdivr
adc
jmp
clc
inc
dec
sahf
mov
push
pop
mov
dec
or
fcomp
mov
pop
jmp
movs
in
jns
imul
pop
fwait
stos
mov
mov
retf
fmul
lods
mov
mov
(bad)
fmulp
bound
mov
(bad)
jl
mov
add
dec
test
inc
sbb
pop
ret
sbb
push
cmp
push
cmc
dec
inc
mov
jp
or
pop
sub
sbb
jo
mov
cld
sbb
stc
ror
cmps
fidiv
sar
(bad)
mov
or
scas
aaa
adc
mov
jg
inc
xchg
cmp
jl
mov
loopne
fiadd
add
loope
mov
add
and
sbb
mov
or
mov
(bad)
dec
adc
rol
jb
ror
in
cmps
cmp
movs
xor
fldcw
lea
mov
mov
rcr
nop
dec
jecxz
leave
jne
cmp
xor
fisub
dec
addr16
scas
pop
mov
sbb
fsubr
jecxz
fldcw
jnp
stos
adc
stos
mov
and
mov
(bad)
icebp
stos
fwait
and
(bad)
jnp
sub
pop
movs
sahf
idiv
in
xchg
mov
(bad)
xchg
dec
outs
pop
icebp
int3
add
or
mov
js
fwait
push
mov
push
or
out
sub
les
adc
lds
cmp
add
xchg
or
mov
fld
aam
xchg
ret
pop
pop
outs
xchg
jle
add
ret
adc
retf
stc
fdivr
cmc
sbb
cwde
inc
pop
sub
lock
sbb
mov
cs
xor
jns
sub
mov
test
xchg
mov
dec
mov
pushf
adc
js
xchg
or
enter
stos
and
out
mov
and
inc
in
stos
pop
jno
push
out
test
push
mov
sahf
ja
and
mov
xlat
fmul
push
rcl
lahf
pusha
ret
cmc
jp
jmp
mov
xchg
push
rcr
loop
push
cmp
aaa
mov
pop
popa
mov
cmps
sbb
sti
cmp
sub
repnz
sbb
cmps
and
inc
leave
neg
loope
shr
je
dec
pop
jne
xor
sbb
mov
sbb
mov
stos
cs
mov
daa
fdiv
clc
jg
mov
xor
and
jo
outs
inc
pop
iret
mov
jmp
ds
xchg
push
sti
out
fisttp
mov
push
stos
lock
mov
pop
mov
sub
xor
ins
add
sbb
inc
rcr
or
inc
dec
cld
mov
adc
jg
sahf
pop
jne
test
pop
jecxz
lods
mov
mov
pop
mov
(bad)
or
dec
ins
add
mov
scas
cmp
stos
mov
aaa
pop
pop
jae
mov
mov
(bad)
cmp
(bad)
(bad)
jmp
adc
mov
out
mov
popa
jp
repz
pop
adc
xor
mov
hlt
aad
dec
dec
jecxz
fild
xchg
pusha
retf
movs
dec
aaa
sbb
mov
mov
aam
add
aam
inc
jmpw
mov
aaa
cmp
cmp
mov
out
jle
cwde
and
jle
or
adc
or
int3
sbb
cld
push
lods
xchg
movs
xchg
fidivr
shl
scas
dec
mov
add
dec
pop
add
jl
xchg
sub
xor
arpl
popa
cwde
mov
les
or
fdiv
jb
(bad)
in
mov
in
mov
ss
(bad)
push
js
test
test
adc
adc
pop
or
mov
push
fisub
mov
mov
call
div
inc
push
es
repz
jmp
iret
retf
dec
or
sbb
sahf
mov
jmp
fimul
in
xchg
xchg
and
(bad)
lods
jg
jg
int3
mov
pop
fcom
sub
adc
stos
xchg
cmp
mov
sub
sbb
push
sahf
sub
pop
pop
imul
mov
aad
sub
ret
adc
sahf
and
jle
out
and
shl
adc
adc
stc
dec
fisttp
push
inc
psadbw
inc
test
dec
mov
jecxz
aam
jge
mov
loopne
inc
xchg
inc
(bad)
add
outs
ins
test
test
arpl
and
sub
outs
mov
mov
push
inc
inc
loop
cmps
rol
pop
jne
pop
cld
and
iret
std
or
fsubr
in
int
mov
jecxz
pop
jb
pop
adc
mov
xchg
inc
and
test
shr
imul
outs
ja
adc
xlat
jne
jmp
push
mov
sbb
mov
es
mov
nop
xor
cli
inc
pushf
jmp
lds
push
in
jne
ins
cli
es
sub
out
loope
loope
sbb
clc
jle
mov
retf
sbb
js
out
fwait
mov
adc
pushf
mov
out
fs
ret
ret
cmp
test
sar
add
sahf
stos
pop
ret
or
and
mov
(bad)
sahf
shr
imul
(bad)
jge
fmul
xor
scas
imul
xlat
or
sub
cmp
in
les
loop
loope
push
psubq
outs
sbb
test
hlt
test
push
fild
and
icebp
push
cmp
int3
fidiv
enter
fimul
xchg
in
mov
add
mov
dec
dec
inc
jb
mov
push
push
out
sub
repz
out
(bad)
pop
retf
not
mov
retf
gs
test
push
test
push
mov
or
jl
rol
add
add
mov
fs
das
cli
sbb
push
cmps
mov
jmp
jns
dec
js
sub
add
xor
repnz
repnz
les
push
mul
inc
xor
leave
add
(bad)
add
fwait
pop
pop
push
icebp
ins
xor
in
sbb
iret
scas
adc
xchg
xchg
and
fcmovnb
mov
xchg
mov
stos
push
out
sbb
cmps
idiv
jae
or
mov
leave
loopne
sbb
mov
es
mov
scas
fs
sbb
sbb
hlt
or
stc
cdq
call
movs
mov
push
pop
leave
pop
xchg
cli
cmp
dec
inc
ret
xchg
pop
jns
les
scas
sub
inc
pop
mov
call
popf
add
push
push
pop
arpl
xor
push
ins
rol
call
jae
lods
mov
call
dec
fild
ds
mov
js
mov
and
ss
inc
push
pusha
jns
ss
out
cmp
mov
je
bound
lahf
mov
lods
push
repnz
xchg
and
mov
or
ins
fisub
fld
je
or
les
int3
push
bound
data16
loop
inc
retf
ja
push
push
in
(bad)
pop
dec
loop
mov
test
mov
and
mov
dec
dec
in
outs
pusha
pop
push
pop
aaa
mov
mov
les
xor
retf
mov
inc
pavgw
lds
inc
cmps
stos
jae
and
cmps
sar
sbb
mov
rcr
push
push
(bad)
jmp
jecxz
sahf
sar
and
aad
ror
mov
out
dec
jge
mov
xchg
and
mov
js
mov
pop
and
or
inc
sub
scas
addr16
js
mov
sbb
sbb
sub
dec
stos
cmps
mov
mov
xchg
retf
adc
adc
dec
dec
stos
into
push
jmp
cdq
lods
rol
daa
les
sub
add
xchg
mov
xchg
data16
pop
loopne
movs
ror
cmp
cs
sbb
das
inc
call
inc
jecxz
dec
sub
fidivr
lods
dec
sub
xor
vmaxpd
xchg
adc
ins
fsubp
sbb
xchg
gs
jnp
jb
into
pop
xchg
sbb
outs
in
add
push
call
fs
bound
push
and
jmp
push
fcomp
mov
ret
adc
mov
loop
sub
out
and
dec
ins
and
mov
fcom
jle
push
pop
jp
cmp
xchg
aad
mov
dec
pop
xchg
dec
mov
mov
stos
adc
shr
jg
cmps
push
cli
lock
mov
jp
loopne
push
cmps
stos
int3
shr
and
push
mov
mov
mov
lea
int
fcmovnb
rcr
adc
pop
loop
in
adc
(bad)
jbe
and
rol
and
xor
(bad)
cwde
sbb
mov
push
inc
cmps
dec
pop
lods
iret
mov
push
xor
sbb
popa
out
jecxz
hlt
or
push
stc
xlat
inc
fwait
pop
in
jecxz
add
ret
fisubr
add
dec
push
inc
inc
dec
push
out
in
and
test
or
movs
sbb
lods
and
add
shr
(bad)
loope
sbb
in
mov
adc
and
inc
xor
das
bound
fiadd
loopne
popf
fnsave
lahf
mov
push
adc
pop
ficomp
pusha
ret
sti
pop
xor
inc
aam
or
xor
(bad)
sbb
movs
lods
leave
dec
pop
add
cdq
lahf
pop
ror
outs
xor
inc
shr
bound
push
lds
push
mov
movs
xor
out
in
fcom
into
sbb
stos
mov
daa
in
mov
or
je
retf
mov
in
adc
mov
fnstenv
push
inc
jo
std
mov
push
pop
lods
aam
xchg
cwde
das
(bad)
or
add
sbb
ds
dec
add
gs
or
inc
mov
aam
inc
sti
push
je
int
in
test
cmp
(bad)
xor
int3
loope
add
loope
data16
fmul
pop
mov
xchg
nop
call
ins
mov
jg
in
mov
adc
daa
inc
push
inc
or
pop
clc
pop
in
adc
xchg
inc
into
repnz
push
arpl
bound
sub
adc
call
hlt
ret
cmps
or
inc
pop
leave
imul
jmp
scas
or
shl
imul
pop
fwait
mov
inc
pop
scas
popa
lds
in
inc
(bad)
ret
sti
adc
(bad)
pushf
iret
pop
cmp
jmp
loopne
shl
xor
pusha
and
cmp
int
push
jg
mov
jg
out
inc
mov
ins
jmp
lahf
and
(bad)
sti
pusha
(bad)
jno
push
push
mul
rcl
xchg
mov
in
push
in
and
pop
fsubr
mov
fucomp
(bad)
icebp
cld
jmp
dec
xor
retf
cmp
cmp
jae
imul
add
arpl
push
mov
cs
push
mov
dec
fdiv
pop
xchg
dec
mov
test
jnp
or
xchg
sahf
daa
adc
mov
dec
adc
cmc
into
mov
or
nop
xchg
sbb
stos
aas
xchg
pop
iret
mov
loope
dec
adc
pop
int
fidivr
in
cmp
xor
xchg
icebp
mov
dec
ds
and
inc
aaa
cwde
sub
fcomp
dec
lahf
test
xchg
or
icebp
jp
sbb
sbb
xor
bnd
inc
imul
or
test
out
mov
int
imul
jg
movs
add
fiadd
jle
mov
daa
cmp
inc
inc
(bad)
lock
push
inc
sbb
aaa
cmp
cdq
std
jmp
ror
daa
mov
inc
mov
sbb
cmc
cmp
movs
sti
xor
sub
cli
repnz
xlat
push
mov
xor
add
daa
stc
(bad)
div
gs
aam
mov
xchg
fist
xchg
mov
inc
and
mov
mov
jecxz
pusha
fs
sub
mov
sar
sbb
sbb
cmp
and
popa
xchg
rcl
inc
xor
cmp
loop
fwait
test
jmp
sbb
add
retf
mov
mov
dec
mov
pop
aas
dec
std
xlat
int
outs
xor
int
cmp
into
mov
bsr
popa
pop
cld
fdiv
or
sub
mov
out
retf
shl
ss
and
mov
loopne
icebp
aam
ret
inc
popf
sub
and
mov
jno
jne
clc
jbe
adc
aaa
jae
pop
not
sub
shl
dec
push
lahf
dec
xchg
popa
out
jo
mov
ds
ja
fimul
dec
(bad)
sub
xchg
lds
pop
or
jo
xor
std
outs
in
jne
retf
fstp
call
imul
ret
repz
shr
mov
push
loope
loope
outs
mov
push
push
xchg
push
test
push
push
sub
inc
dec
sti
cmp
clc
in
sbb
into
daa
sbb
mov
xchg
loope
jno
fidivr
arpl
fstp
stos
xchg
call
adc
hlt
gs
mov
fs
sbb
jae
dec
je
pusha
or
and
or
mov
jecxz
mov
push
adc
fwait
mov
outs
pusha
sbb
out
mov
jmp
sbb
call
popa
fbld
jb
dec
and
sbb
lahf
test
jmp
pop
ins
xchg
xchg
adc
dec
xor
aas
add
cmp
cmp
loope
or
push
je
pop
lods
jle
fs
adc
cwde
aaa
jns
mov
or
fstp
jae
cdq
shr
pop
push
sti
scas
dec
add
push
jnp
gs
mov
and
pop
pop
outs
and
fmul
shl
sub
inc
fcomp
in
fild
and
pop
add
mov
loope
pushf
bound
adc
mov
fldcw
pop
and
and
ss
pop
xchg
aaa
mov
aad
jl
pushf
mov
lods
fnsave
imul
xor
jnp
lea
dec
rcr
dec
jecxz
mov
mov
jbe
xor
les
test
pop
fnsave
loope
pop
es
minps
jae
clc
inc
adc
xchg
xchg
aaa
fst
fs
push
and
int
fwait
jge
retf
shl
or
or
repz
jg
lgdtd
aad
jl
xchg
loop
out
fistp
inc
xor
sti
aaa
cmp
(bad)
test
cmp
mov
in
js
gs
mov
and
jmp
popa
imul
add
stos
push
bound
pop
or
adc
rol
and
iret
or
enter
icebp
sahf
and
or
pop
xchg
mov
fucomip
pop
clc
fwait
retf
mov
mov
pop
ret
ret
cs
mov
test
ds
bound
(bad)
(bad)
rcr
mov
cdq
test
or
add
add
stos
cmp
fcomp
ret
jno
jo
jno
xchg
cmp
(bad)
cli
je
xchg
popf
xlat
(bad)
leave
xor
push
mov
xor
mov
es
sub
xchg
xchg
lods
cmp
scas
push
mov
sub
out
(bad)
jno
sbb
std
out
xchg
pop
sbb
jp
jg
imul
cmps
cs
stc
xor
sub
xor
cs
(bad)
stos
imul
dec
xor
push
mov
mov
mov
loope
(bad)
loope
and
mov
cmp
dec
inc
stos
das
mov
repnz
adc
jno
repnz
stos
gs
mov
pop
daa
sti
enter
push
sbb
or
sub
xor
or
stc
outs
jge
or
jae
popf
and
cmp
jmp
xchg
or
pop
rcl
enter
(bad)
mov
xlat
mov
jmp
fbld
jmp
lds
(bad)
call
cmp
or
push
fucomi
jae
out
pop
xchg
dec
add
pop
cmp
gs
or
sar
movs
xchg
fs
shl
cmp
dec
sub
cmc
inc
std
pusha
pop
cli
arpl
inc
mov
int3
stos
rep
mov
push
mov
bound
cmp
pushf
ficomp
add
js
iret
mov
adc
sahf
cmp
test
icebp
scas
push
sub
xchg
jmp
mov
pushf
fisttp
das
call
push
mov
xchg
lea
and
pop
xor
test
and
xchg
clc
jns
lods
jge
dec
pop
push
popa
js
mov
or
dec
fnstcw
mov
xchg
cmp
inc
cmps
pop
bound
dec
jmp
test
int3
dec
inc
sti
jns
push
mov
mov
jmp
push
inc
add
jmp
out
and
jno
(bad)
mov
push
cmps
test
cmp
adc
ret
xor
cld
imul
(bad)
sbb
hlt
xlat
xchg
sti
rol
fnsave
(bad)
daa
sbb
mov
icebp
pop
add
adc
pop
and
cmp
push
data16
popa
test
push
or
adc
cmp
repz
stos
dec
aad
or
pusha
mov
nop
shl
sbb
dec
adc
sub
mov
add
fadd
jns
mov
ret
mov
shl
sub
neg
push
adc
xor
in
out
push
xchg
call
pusha
cld
mov
in
pop
inc
mov
dec
rcl
push
in
shr
gs
(bad)
xor
sub
out
sub
fldcw
jae
dec
jl
mov
dec
pop
jmp
movs
jl
adc
pop
imul
(bad)
mov
dec
and
pushf
push
sub
cmp
and
movs
cmp
pop
inc
mov
jo
sub
mov
pop
mov
fdivrp
jns
mov
cdq
scas
lea
inc
mov
jle
fwait
call
ss
xchg
mov
dec
pop
mov
fild
rcl
popf
cmp
inc
mov
lods
jmp
mov
imul
xchg
or
aam
das
jne
mov
aaa
xor
test
rcl
pop
int
or
inc
dec
call
ja
jg
lods
(bad)
mov
adc
sbb
fs
jbe
in
popa
jo
pop
sbb
sub
pop
aad
jge
jmp
pop
sahf
dec
test
lods
shr
repz
addr16
popf
fmul
xchg
or
inc
inc
lods
movs
(bad)
rcr
inc
pop
int
and
mov
push
adc
and
pusha
push
pusha
jecxz
ins
mov
lahf
mov
cld
mov
mov
add
adc
jg
cmp
inc
xor
inc
leave
adc
pop
std
adc
jmp
cmp
daa
dec
pusha
add
shr
or
test
cmp
xchg
push
cmp
outs
imul
mov
jno
jmp
imul
movs
cs
loopne
mov
cmps
adc
icebp
movs
stc
add
call
(bad)
cmps
mov
xchg
out
push
mov
or
mov
outs
scas
push
jecxz
sti
sub
(bad)
mov
jne
or
sbb
push
pop
cdq
hlt
(bad)
retf
pop
mov
std
outs
outs
inc
into
lock
sub
cmps
mov
int
es
inc
ins
mov
retf
mov
ret
jecxz
xchg
fisubr
xchg
sbb
sbb
jo
xchg
fsubr
daa
rcr
mov
hlt
fistp
ss
rcr
mov
inc
lods
call
inc
dec
loop
fdivr
hlt
adc
repnz
adc
aaa
(bad)
loop
sti
push
add
push
in
arpl
xor
push
in
mov
stos
dec
dec
hlt
sub
pop
adc
dec
pop
adc
pop
sub
test
mov
adc
jecxz
adc
std
pop
imul
xchg
and
sti
pop
sbb
mov
icebp
test
jge
pushf
fadd
mov
push
mov
adc
clc
lock
ins
int3
movs
scas
xlat
cs
jne
adc
(bad)
(bad)
retf
mov
ins
push
cmp
xchg
ins
pushf
aas
out
and
mov
mov
aad
pushf
xor
lock
jle
std
outs
jg
sub
rcr
adc
ins
nop
mov
and
xor
lahf
mov
lock
inc
mov
mov
sahf
mov
mov
int3
test
mov
dec
bound
inc
daa
hlt
rcl
add
adc
data16
inc
(bad)
inc
shr
ror
xchg
cmc
repz
in
and
sbb
jmp
in
mov
push
adc
ret
adc
ins
(bad)
shl
pop
cmc
aad
push
std
mov
or
ss
movs
and
icebp
cwde
out
adc
(bad)
add
popw
xchg
push
out
mov
cmc
mov
sbb
ss
mov
xor
xchg
ror
(bad)
pop
cmps
or
mov
cmp
(bad)
dec
dec
shr
call
leave
cmp
dec
and
div
sbb
retf
loopne
xor
dec
ins
ret
std
lock
popa
jno
pop
inc
jno
inc
aaa
je
shr
cdq
shr
mov
out
cmp
loopne
mov
add
add
dec
push
xor
pushf
lahf
adc
sti
or
ret
clc
ficomp
xchg
or
xchg
sub
mov
mov
adc
sar
inc
movs
mov
jmp
aad
aas
and
mov
and
pop
mov
popa
sahf
fimul
mov
dec
cmc
mov
push
es
push
fst
test
je
cmp
add
dec
mov
adc
rcl
mov
pop
xor
imul
ret
cmp
pop
imul
sub
loopne
mov
popa
push
cdq
mov
mov
and
jno
sub
dec
cmps
adc
dec
dec
and
add
movs
enter
jo
cmp
xchg
sbb
push
aad
ss
pop
jg
aas
in
sbb
fwait
sbb
cdq
pop
jmp
mov
xor
cmp
mov
in
test
xchg
mov
push
je
out
cdq
cmp
pop
sub
sub
test
sti
mov
inc
stos
push
push
(bad)
cs
int3
adc
jecxz
scas
or
jg
mov
xor
sub
xchg
in
and
ja
mov
dec
inc
call
dec
enter
mov
sahf
ja
adc
pop
xor
adc
push
cmp
je
mov
adc
icebp
rcr
inc
mov
push
cwde
push
ins
dec
sar
call
xlat
mov
xchg
sub
cdq
or
push
xchg
js
jno
jecxz
test
mov
push
ret
imul
jle
test
cwde
xor
scas
dec
adc
mov
xor
or
xor
int
adc
jg
retf
ficom
test
ins
les
dec
mov
cwde
movs
sbb
cwde
push
popa
stos
mov
cmps
in
lock
mov
stc
addr16
pop
int3
rol
repnz
fst
sbb
adc
cmp
call
cdq
add
mov
retf
cmp
cs
mov
pop
(bad)
rcl
xor
xor
pop
push
mov
xlat
inc
test
ins
jge
xchg
xchg
rol
and
mov
retf
mov
jns
shl
xor
cmc
or
mov
xor
nop
mov
pop
stos
xchg
push
ins
mov
inc
xchg
pop
add
pop
jne
imul
push
and
pop
xchg
and
sbb
sbb
xchg
sbb
inc
neg
jmp
imul
retf
mov
std
dec
pop
adc
adc
mov
ficom
and
pusha
pop
je
inc
pop
inc
or
call
divps
sbb
adc
sub
mov
int3
(bad)
push
mov
ror
movs
push
test
xchg
sbb
rcl
ror
hlt
fisttp
pusha
in
fidivr
sub
dec
mov
popa
push
jp
(bad)
mov
sub
inc
inc
retf
jbe
xchg
cmp
nop
xor
sbb
les
gs
xchg
js
cmc
test
sub
sbb
adc
in
ret
jmp
add
gs
fwait
xchg
mov
mov
lods
(bad)
mov
xlat
adc
cmc
pop
cmp
jno
lock
dec
test
cmp
cmp
in
scas
iret
gs
in
neg
sbb
and
inc
movs
adc
in
push
test
jo
add
cmp
loopne
push
push
sahf
push
push
ds
jns
iret
xchg
mov
push
mov
adc
xchg
adc
lock
pop
or
mov
mov
cmp
jae
pop
retf
(bad)
jmp
sbb
jo
or
inc
or
out
push
jnp
mov
sub
test
in
push
enter
or
stos
jnp
aaa
sbb
ret
in
(bad)
adc
mov
push
ss
fdiv
sbb
adc
and
add
arpl
sub
clc
inc
dec
fsin
ss
dec
enter
jge
xchg
repnz
sbb
stos
and
cdq
push
je
in
and
sbb
inc
mov
add
nop
or
xchg
in
push
add
rol
sub
xchg
push
push
sbb
scas
inc
inc
pop
sbb
push
int
lock
add
sub
cmp
sub
cmp
xchg
inc
sar
fild
dec
jl
fnstcw
in
push
rcl
in
out
loopne
xor
(bad)
push
inc
mov
call
xchg
mov
mov
cmc
inc
and
push
ret
pop
inc
mov
pop
mov
inc
push
and
repz
test
xor
xor
and
(bad)
pop
sub
dec
jl
and
pop
div
(bad)
fsubr
inc
int
xchg
in
xor
add
fisttp
lock
mov
pop
mov
(bad)
hlt
jo
int3
pop
xor
jns
sahf
ret
mov
mov
aaa
push
ss
retf
and
and
dec
sahf
jae
js
fucomp
and
arpl
pop
push
test
inc
pop
push
pop
rcr
(bad)
pop
xchg
or
inc
outs
xchg
push
imul
mov
scas
dec
add
jl
ret
inc
rol
pop
(bad)
pop
cmp
aaa
mov
or
add
or
jo
jae
fld
pusha
jnp
pop
cmp
leave
neg
inc
pop
lock
ret
add
rcl
ret
(bad)
jns
mov
mov
idiv
jge
in
retf
mov
cmp
dec
xchg
mov
dec
stos
addr16
test
sub
push
aad
mov
shl
and
stos
adc
lds
inc
pop
or
fbstp
fwait
rcl
or
inc
mov
inc
pop
cdq
xchg
lods
(bad)
(bad)
push
(bad)
sub
in
cmp
push
sub
or
push
sahf
test
sub
into
cmc
retf
sbb
call
adc
sbb
inc
and
idiv
iret
out
jno
xor
fild
cld
cmp
inc
push
out
out
or
mov
hlt
(bad)
out
and
rcr
cmp
sub
cmps
mov
sub
addr16
aad
loopne
(bad)
pop
cmp
adc
stc
bound
enter
dec
mov
in
cmc
nop
mov
call
xchg
mov
inc
mov
mov
cmps
mov
imul
jbe
push
and
out
mov
fstp
jo
fldcw
or
jecxz
rcl
js
xchg
cmps
int3
outs
push
push
hlt
cld
xor
push
push
sub
xor
retf
inc
mov
and
daa
push
push
inc
aad
ins
stc
dec
sbb
retf
mov
(bad)
das
das
inc
dec
mov
adc
call
dec
imul
xor
stc
sti
dec
or
push
sbb
daa
mov
shr
mov
fimul
sbb
push
sbb
adc
and
or
icebp
mov
adc
mov
cmc
sbb
or
xor
(bad)
sar
cs
dec
(bad)
jo
movs
adc
and
dec
xchg
xchg
fwait
mov
xor
fwait
int
xor
int3
xchg
jmp
xchg
movs
mov
icebp
aad
xor
mov
std
(bad)
popa
adc
cmps
mov
(bad)
sti
ins
sahf
push
add
xor
sbb
test
xor
ret
test
and
shl
scas
jae
dec
je
out
in
popf
sbb
add
test
leave
push
mov
mov
jnp
mov
mov
mov
xchg
jmp
and
fnstsw
icebp
mul
mov
or
(bad)
retf
inc
or
xchg
es
mov
xor
fcmovnbe
add
loop
mov
cmp
sbb
lahf
shr
cmp
xchg
mov
pop
adc
mov
stc
cmp
jae
cmps
dec
mov
push
retf
mov
push
repz
sar
jmp
addr16
outs
mov
outs
mov
out
mov
ror
mov
aas
jmp
gs
icebp
xchg
dec
stos
mov
icebp
sub
pop
sub
mov
ins
adc
fnstsw
daa
or
inc
dec
addr16
out
cs
lds
ss
add
fs
fcomp
jae
dec
rol
mov
out
mov
lods
fild
jb
add
cmp
ror
mov
call
mov
mov
pop
outs
rcl
stos
fadd
imul
sub
sbb
movs
xor
adc
adc
jg
ins
in
mov
repz
adc
lock
xchg
xchg
pop
pop
inc
paddq
repnz
lahf
mov
jne
xor
imul
gs
ret
std
test
repz
xor
out
call
push
mov
inc
jnp
mov
retf
dec
gs
push
xor
push
retf
inc
pushf
dec
pop
jns
and
ss
push
les
cli
les
movs
outs
shl
mov
and
aad
rol
ret
sub
or
mov
dec
or
loop
sub
repnz
cld
mov
jne
mov
aas
push
push
sbb
pusha
ins
(bad)
call
cmp
jecxz
popa
pop
test
test
cli
adc
shl
inc
sub
fbld
outs
dec
pop
mov
dec
or
outs
push
mov
xor
xor
cmp
int3
unpckhps
loope
xchg
bound
pop
ds
pop
loopne
movs
in
lods
or
xor
cmp
add
sub
mov
sbb
sar
js
fld
xlat
clc
mov
and
daa
fdivrp
sahf
in
fwait
arpl
out
jns
sub
and
jge
pop
aaa
xchg
xor
movs
adc
cld
movs
out
dec
or
jle
or
(bad)
sar
pop
hlt
lods
sub
inc
sar
push
push
inc
xchg
inc
xor
xor
popf
push
mov
ins
loopne
cs
(bad)
stc
cmp
test
es
jle
push
xor
and
mov
jae
xchg
shl
push
dec
sbb
adc
cmps
inc
lahf
loopne
aad
push
jne
sub
test
xchg
sub
push
cmc
xchg
xor
aad
shl
je
inc
adc
xor
sub
fist
jbe
idiv
pop
xor
xor
cdq
push
lock
or
jmp
inc
or
cdq
push
cdq
ds
push
and
mul
lds
pop
push
jmp
push
movs
push
add
xor
and
xor
mov
jno
mov
inc
jbe
and
pop
or
jo
daa
out
stc
bound
in
dec
aad
ins
xchg
sub
lods
jge
f2xm1
into
js
and
int3
lock
aaa
inc
call
test
bound
fxch
add
out
mov
mov
or
nop
sub
inc
movs
add
js
xlat
repz
test
xlat
dec
mov
xor
ja
cld
imul
add
enter
mov
fldenv
add
inc
pop
ret
fsubrp
mov
or
xor
and
(bad)
je
jmp
inc
pop
and
push
fldenv
imul
in
ss
in
fucomi
cli
cdq
sbb
or
push
lds
cwde
jge
mov
or
xchg
js
jmp
inc
mov
mov
jge
cmp
retf
sbb
jle
data16
pop
cmp
arpl
jle
dec
xor
das
or
das
lock
pop
xchg
test
xor
push
loopne
retf
bound
outs
repnz
xor
test
clc
push
add
repz
enter
mov
int
inc
int3
aas
sub
sub
das
ins
fadd
mov
ror
mov
stos
and
imul
stos
jno
test
or
enter
jecxz
fyl2x
xor
int3
dec
inc
je
add
icebp
into
xchg
xchg
int
sbb
movs
mov
cdq
cmp
jg
cli
adc
mov
popa
lds
push
pop
xchg
lahf
data16
push
push
nop
cdq
push
and
(bad)
(bad)
int
jo
into
fsqrt
fld
jmp
addr16
stos
stos
cwde
int
fiadd
cli
mov
or
(bad)
(bad)
cmp
push
or
movs
repz
lods
inc
dec
imul
or
int
sbb
or
xchg
outs
pop
cmp
push
ret
adc
xchg
fs
mov
push
sub
jnp
scas
fdivrp
into
lds
not
mov
imul
push
clc
aas
test
cmc
inc
sub
scas
aad
cmc
cmps
test
and
mov
push
jg
and
test
das
dec
mov
and
jmp
sub
movs
inc
and
push
pop
sti
xchg
mov
aas
cmp
arpl
out
xchg
mov
retf
das
mov
movs
sahf
jbe
inc
mov
lods
xor
xor
jmp
pop
push
movs
div
jmp
or
(bad)
(bad)
std
add
in
inc
movs
mov
sbb
psubd
sub
enter
lock
ror
jb
inc
neg
jmp
add
inc
jo
imul
pop
or
leave
into
push
dec
aaa
jno
sar
push
dec
fcomip
pop
pop
call
out
(bad)
aad
xor
rcl
leave
gs
mov
(bad)
inc
enter
dec
inc
dec
push
popa
addr16
xor
outs
inc
add
aam
mov
std
jl
mov
cli
jne
xor
repnz
and
jne
sub
outs
call
loop
sub
fld
mov
mov
(bad)
jecxz
jge
push
adc
outs
cmp
jp
mov
adc
fsqrt
ret
cs
inc
data16
push
mov
push
fild
ret
in
mov
sbb
inc
and
in
cmp
pop
adc
xlat
dec
test
std
xchg
xchg
pop
dec
inc
inc
out
rcl
push
(bad)
jecxz
jns
jge
mov
addr16
(bad)
js
loop
movs
mov
sub
movs
fisub
fisubr
ins
mov
movs
test
inc
popa
cmp
div
ror
mov
jae
jg
xor
lock
fs
fs
xor
adc
jg
inc
fs
pop
(bad)
repnz
(bad)
cld
cld
xor
xchg
je
arpl
jo
stc
inc
sub
cli
mov
repz
fnstcw
test
mov
sub
cwde
bound
pop
sti
sbb
pop
aam
and
mov
lods
and
lods
jns
sub
add
mov
mov
ss
sbb
dec
(bad)
ror
jmp
pop
shl
fild
hlt
sub
push
leave
cs
inc
sub
das
in
push
dec
out
adc
dec
mov
push
aam
sar
jb
arpl
(bad)
cmc
adc
jns
or
sbb
jno
xchg
adc
loopne
fdivr
in
push
sti
mov
or
icebp
outs
in
xlat
jo
inc
push
retf
jmp
ja
add
sbb
daa
adc
lea
in
jmp
jle
js
xchg
push
movs
add
repnz
jnp
sbb
adc
rcr
mov
nop
inc
pop
jg
pop
push
aaa
(bad)
inc
mov
cmp
popf
and
pop
aad
xor
xor
into
and
inc
pop
arpl
push
mov
test
data16
dec
and
adc
fild
dec
mov
gs
leave
xchg
inc
ins
xor
icebp
pop
cmp
int3
stos
cmp
sti
ror
(bad)
frstor
jno
adc
clc
jae
push
pinsrw
clc
or
dec
fimul
cmc
xor
xchg
scas
(bad)
out
ficomp
mov
push
cmp
mov
add
fsub
loopne
push
mov
fidivr
jnp
mov
sbb
mov
clc
lods
xchg
test
test
movs
adc
and
add
add
mov
out
pop
(bad)
adc
ret
mov
push
xchg
outs
lods
jae
inc
es
outs
dec
xchg
mov
fisub
xchg
push
xchg
mov
mov
(bad)
jp
aas
jl
sbb
outs
jae
add
in
ins
dec
jecxz
xchg
lods
push
inc
(bad)
cmp
popf
int
(bad)
sti
cwde
inc
mov
dec
mov
jns
or
outs
dec
or
(bad)
mov
mov
xchg
sub
add
xor
jl
repz
or
mov
mov
push
pop
push
cmp
cmp
or
fldcw
out
call
dec
lahf
iret
sti
les
xor
sub
out
adc
adc
jle
jae
sub
adc
out
mov
pushf
jnp
fld
lods
repnz
and
mov
addr16
popf
dec
retf
xchg
mov
rcl
mov
jo
inc
jle
mov
mov
add
pushf
lahf
dec
and
mov
hlt
mov
mov
sar
div
mov
or
dec
test
mov
jae
mov
mov
in
sub
jno
xchg
int
icebp
movs
pusha
pop
cmp
(bad)
jle
jo
stos
dec
xor
dec
add
push
inc
push
adc
add
adc
sbb
(bad)
out
movs
adc
or
ret
and
int3
outs
cmp
scas
and
sahf
cmc
push
(bad)
pop
test
inc
(bad)
out
nop
sub
rol
pop
mov
sbb
out
(bad)
xchg
fstp
add
fs
hlt
lods
cmp
ins
jnp
scas
div
test
movs
xor
push
lea
cdq
xchg
lods
or
mov
shl
sar
loopne
fsub
inc
adc
scas
(bad)
loopne
xchg
test
xchg
cli
push
imul
mov
lock
ret
mov
test
xor
pop
mov
lds
neg
sar
adc
push
jns
dec
clc
sbb
mov
inc
ficom
(bad)
fnstcw
jle
cmp
(bad)
stc
cli
jmp
mov
imul
xchg
aad
jmp
sbb
cmp
mov
inc
mov
push
mov
es
rcl
into
inc
pop
sbb
inc
xor
mov
inc
push
mov
fmul
cmp
aad
lock
sbb
in
mov
push
rcr
sbb
adc
xchg
mov
cli
xor
fadd
dec
pop
jnp
es
jmp
mov
xchg
rcl
mov
xor
and
cmps
inc
dec
fyl2x
jle
into
add
mov
pop
shr
mov
sub
mov
mov
mov
mov
test
test
xchg
lock
xchg
cli
mov
mov
enter
sub
ror
fcom
das
int3
sub
sub
sbb
pop
mov
adc
out
in
adc
xor
imul
sbb
out
adc
mov
das
dec
or
or
aaa
dec
out
lods
and
ds
cmc
mov
into
in
and
mov
and
lahf
or
loopne
inc
int
cld
shl
jle
mov
jmp
xor
xchg
cmp
and
mov
fimul
pop
fild
das
sbb
cmps
movs
push
cli
mov
outs
pop
cmc
fist
stos
mov
das
mov
push
retf
xor
mov
std
or
scas
mov
or
jl
test
leave
sub
inc
xor
in
shl
pushf
sub
xchg
cli
mov
mov
sbb
mov
gs
stos
add
sbb
pop
add
in
cmp
aas
mov
pop
(bad)
iret
jmp
gs
mov
call
dec
xchg
dec
push
push
xchg
jmp
push
sti
jne
mov
mov
aaa
adc
enter
adc
xor
or
out
dec
ret
xchg
sub
repnz
test
aas
call
pusha
ss
push
adc
inc
(bad)
or
mov
dec
addr16
lods
jmp
imul
jns
sbb
std
inc
movs
pop
jbe
dec
dec
cwde
cli
call
xor
adc
scas
cmp
cmp
out
ds
and
jge
(bad)
je
mov
pop
shl
fidivr
ja
xor
lock
test
and
ins
pushf
sub
(bad)
xlat
jmp
dec
adc
mov
inc
fs
sbb
jne
int
stc
aas
cli
mov
iret
adc
std
mov
mov
add
adc
test
cmp
or
dec
lds
cli
std
sub
cmc
xlat
mov
(bad)
mov
leave
inc
aas
and
xchg
in
out
scas
fld
jl
cmp
or
jns
jmp
imul
std
dec
dec
fcomip
rol
mul
sahf
out
enter
mov
jae
pop
shl
popf
data16
jle
fsub
mov
sbb
jne
xchg
je
jo
std
cmp
stos
ins
lahf
js
in
sbb
xchg
das
cmps
test
sbb
cmps
jbe
cld
out
test
loopne
add
inc
daa
rol
sub
push
mov
push
mov
xchg
loop
jns
mov
fdivr
and
not
xchg
cmp
cmp
inc
mov
inc
inc
jns
sub
mov
mov
mov
mov
mov
test
xchg
add
unpckhps
bound
xchg
in
addr16
push
adc
pop
or
mov
pop
sub
sub
mov
dec
push
(bad)
dec
mov
or
or
dec
sar
dec
iret
stc
push
xor
push
aaa
mov
ror
pushf
xchg
cmp
xchg
nop
mov
dec
les
xor
neg
mov
pop
div
ds
cdq
ins
dec
popa
mov
add
mov
repz
div
push
fwait
repz
test
mov
sar
mov
loopne
repz
sub
pop
in
push
rcl
sbb
test
out
gs
nop
call
jno
sahf
shl
cmp
out
jle
adc
xor
cmc
and
int3
or
sub
jns
cmp
sub
mov
mov
push
dec
cmp
mov
sub
mov
in
pop
test
or
outs
mov
and
stos
aam
inc
outs
add
or
retf
scas
pop
push
cmp
or
dec
outs
sti
popa
(bad)
mov
repnz
push
jmp
aas
mov
je
adc
mov
nop
les
xor
and
jecxz
sub
mov
push
iret
fcompp
xchg
dec
cmc
call
jno
pop
mov
mov
jb
out
inc
cwde
mov
mov
in
loope
or
test
adc
jge
jae
mov
mov
cmp
addr16
es
lea
mov
cmp
rcr
arpl
call
sbb
popf
dec
hlt
into
push
push
xchg
out
inc
test
cli
mov
xor
adc
and
test
dec
test
pop
(bad)
mov
cdq
out
fxch
or
sub
mov
mov
inc
dec
xchg
mov
jnp
cwde
xchg
jmp
adc
outs
jae
push
inc
mov
jle
cmp
daa
and
or
mov
mov
pusha
push
or
sub
cli
add
out
cld
jno
jp
and
jmp
sbb
test
fild
ficomp
fistp
sbb
adc
jmp
mov
loope
outs
scas
scas
add
jle
fs
mov
inc
mov
je
mov
int3
jns
repnz
or
mov
sub
ins
sbb
mov
repz
jne
test
retf
stc
mov
repnz
fstp
ret
mov
push
fild
pop
test
xchg
add
push
mov
mov
in
sub
iret
push
add
dec
inc
mov
add
leave
jp
adc
repz
iret
push
pop
repnz
test
sbb
add
scas
xchg
int3
in
sbb
ret
xchg
push
mov
imul
fwait
mov
cmps
or
ins
cld
xor
xor
mov
jbe
popa
pop
cmc
aam
xchg
mov
dec
dec
mov
mov
dec
outs
mov
lods
cmp
add
sub
fcom
xchg
mov
xchg
aaa
rcl
fbstp
mov
inc
pop
mov
or
xchg
jb
push
or
push
mov
ins
inc
cmp
call
sahf
xchg
ins
rdseed
push
stc
mov
xor
pushf
lods
out
les
inc
arpl
pop
sub
movs
cmp
fidivr
push
add
sbb
and
test
pop
or
sub
in
sbb
ins
fimul
xchg
inc
mov
sbb
dec
int
stos
fimul
sbb
test
pop
aad
mov
(bad)
xor
movs
in
in
or
cmpxchg
pop
jl
int3
enter
jno
retf
dec
mov
and
clc
je
xor
jmp
in
or
ins
ror
clc
inc
add
adc
retf
rcl
jo
xchg
aaa
aas
popf
je
push
mov
fcomp
or
push
loop
clc
mov
fsubr
sbb
cmp
ins
mov
sbb
jae
js
shl
xor
mov
and
cmp
pop
std
jmp
xor
in
sub
in
sti
add
mov
pop
mov
jmp
test
pop
and
out
mov
nop
push
retf
sbb
pop
adc
jmp
inc
outs
mov
dec
sbb
movs
mov
sar
(bad)
ja
mov
cmp
adc
ret
mov
mov
std
xchg
fstp
into
cmps
xchg
ss
jg
and
sahf
scas
mov
inc
mov
mov
sbb
shl
push
loopne
fstp
dec
xchg
inc
rcl
retf
sub
lods
neg
jg
(bad)
sub
out
add
sub
pop
pop
leave
pop
jg
pop
mov
retf
cmps
jnp
jae
pop
adc
mov
test
push
lock
loope
je
out
leave
retf
lods
inc
sub
ss
and
hlt
nop
mov
imul
retf
imul
test
loopne
mov
mov
cwde
xchg
sti
jae
pop
ins
lahf
inc
dec
movs
add
mov
pop
das
jb
mov
dec
in
mov
outs
pop
fsub
mov
cdq
lahf
mov
test
fist
shr
and
cwde
cmp
push
mov
out
pop
test
test
sub
sub
es
shl
div
cmc
fisubr
das
inc
or
adc
inc
xor
(bad)
jmp
xor
loopne
mov
xchg
in
dec
jbe
dec
popf
leave
int3
icebp
mov
inc
out
sub
sbb
int3
xor
add
xor
in
xor
mov
mov
in
push
mov
out
push
movs
mov
sbb
nop
cs
push
scas
cmp
mov
mov
cli
xor
xor
jns
fisubr
out
imul
dec
xchg
adc
or
mov
jno
cmp
rol
in
fdiv
out
sar
imul
push
fisub
jle
clc
xchg
pop
xchg
xor
out
cmp
xchg
cdq
jecxz
(bad)
outs
lds
ja
stc
and
sub
inc
mov
push
pop
movs
sbb
xor
daa
ja
pushf
cld
(bad)
sub
sub
pop
cli
mov
push
out
jns
xchg
jecxz
inc
outs
and
xchg
(bad)
fiadd
scas
ja
out
in
mov
(bad)
xor
test
push
mov
sbb
scas
call
gs
mov
leave
mov
call
sub
std
lds
hlt
rcl
sub
dec
lahf
or
xor
mov
enter
push
and
mov
lock
div
jl
dec
fisubr
cld
lea
add
sbb
and
pop
out
xor
fistp
xor
popa
nop
jb
mov
or
add
in
loope
mov
adc
fdiv
jns
and
add
xor
push
outs
jnp
inc
sbb
ret
mov
(bad)
scas
fs
sub
mov
jbe
pop
das
jmp
add
and
and
jb
dec
add
mov
jp
mov
leave
adc
out
loopne
cdq
jecxz
movs
retf
(bad)
into
pop
fimul
push
and
push
or
mov
jp
and
and
in
imul
fdivr
or
inc
(bad)
pushf
jns
push
pop
fsubr
add
les
and
outs
fist
sub
stc
pop
xchg
and
cmps
jle
mov
and
data16
mov
xchg
fimul
(bad)
cld
push
adc
stos
mov
aaa
dec
test
mov
mov
fs
push
mov
and
mov
push
fcmovnbe
or
jo
jmp
jmp
inc
push
(bad)
or
jl
push
cmp
sub
jb
xor
inc
pop
aad
cwde
hlt
push
aam
int3
popf
shl
cmps
loope
pushf
les
inc
ret
lds
cmp
pop
cmp
xor
jg
ja
mov
movs
dec
imul
jb
test
or
adc
pop
loop
sbb
jge
stos
test
add
push
xchg
sub
push
call
adc
cmc
pop
push
outs
fcmovnb
mov
enter
jbe
lock
xor
dec
jb
xchg
xor
cmc
mov
or
int
out
out
push
movs
sbb
mov
lea
(bad)
add
sbb
out
sahf
add
dec
rol
ins
out
or
adc
inc
dec
jno
xchg
fsubr
xor
inc
adc
and
xlat
ret
fnsave
cmps
mov
jmp
data16
mov
(bad)
sub
push
pop
aas
inc
addr16
int3
push
pop
xor
or
dec
shl
xor
or
lock
leave
lahf
jmpw
repz
mov
pop
cmp
sbb
cs
test
pusha
fwait
lods
push
inc
mov
cmp
imul
push
pop
mov
bswap
aaa
push
ds
mov
pop
cmp
movs
inc
mov
mov
nop
loope
lods
mov
or
bound
adc
push
jp
xor
scas
pop
jnp
shl
push
inc
rol
inc
and
or
stos
xlat
retf
or
jno
icebp
jno
shl
lock
std
xchg
pusha
cdq
cld
xchg
dec
arpl
jo
cmp
ja
sub
retf
pop
fcomp
inc
into
mov
push
add
adc
es
arpl
xchg
and
iret
jae
sbb
pushf
outs
cmc
(bad)
int3
addr16
cmp
pop
(bad)
inc
mul
jo
jns
std
sar
mov
cmp
clc
sbb
imul
sahf
pop
push
stos
and
pop
mov
dec
mov
xor
adc
or
push
addr16
es
out
sbb
add
cmp
js
ins
dec
fwait
jns
adc
les
je
dec
cmp
stc
jno
add
adc
xor
or
mov
out
xchg
push
and
cs
call
dec
in
movs
adc
push
call
fdiv
mov
xor
adc
(bad)
xor
aaa
lock
inc
out
movs
loopne
iret
jno
cmp
xor
inc
jns
pop
iret
push
pop
dec
into
ja
mov
cmp
aam
es
out
mov
fs
mov
push
aam
dec
mov
pop
mov
sbb
das
sbb
jp
cmp
cdq
mov
sub
push
imul
mov
inc
jmp
imul
cmp
rcl
lods
pushf
(bad)
cdq
or
sbb
inc
add
or
adc
xor
mov
xchg
cdq
sti
or
in
mov
and
fs
pop
dec
or
call
xchg
leave
pushf
fist
jle
das
(bad)
adc
rol
out
sub
outs
out
add
xchg
adc
xchg
sub
jmp
out
ins
xchg
cmp
jmp
inc
push
sbb
sub
xlat
fiadd
adc
fcomp
dec
inc
mov
jns
and
in
cmc
mov
cmp
inc
sub
cmp
aam
mov
sti
nop
push
je
mov
(bad)
sub
clc
cmp
clc
mul
mov
adc
pop
popf
jbe
inc
and
sub
inc
mov
sahf
xor
xor
dec
(bad)
call
or
retf
addr16
jmp
mov
leave
test
out
xor
outs
rcr
loop
mov
push
loope
sub
pop
mov
inc
sbb
rcr
test
(bad)
pop
aaa
mov
push
mov
inc
pop
jle
mov
mov
cmp
mov
pop
mov
hlt
adc
movs
enter
mov
mov
shl
daa
or
fmul
jne
add
cmps
jecxz
pushf
test
fadd
xchg
mov
push
mov
add
push
mov
or
jb
outs
pop
out
push
sahf
pop
sub
push
out
jle
mov
adc
inc
std
movs
repnz
cmp
fstp
fisub
mov
mov
(bad)
mov
shl
fs
push
loopne
into
inc
pusha
popa
pop
(bad)
dec
inc
pop
sub
sbb
dec
(bad)
xchg
pusha
push
pop
jmp
out
sub
xor
hlt
inc
neg
je
adc
(bad)
dec
popa
fnstsw
sub
imul
aad
xchg
lahf
repnz
jmp
xchg
xor
mov
mov
push
aas
sbb
push
sub
cdq
adc
stos
lods
repz
adc
add
sti
cwde
out
bound
lahf
cmp
sub
pop
repz
xchg
and
stc
ss
sbb
pop
daa
pop
lods
in
in
cwde
dec
mov
mov
jae
xor
jae
(bad)
retf
and
pop
jge
loop
push
test
mov
fdiv
adc
cdq
(bad)
sti
adc
dec
or
cmp
xor
push
xor
sysexit
jl
adc
pushf
nop
dec
fistp
ror
adc
or
mov
in
add
(bad)
fst
pop
sahf
stc
imul
out
imul
fdiv
add
pop
or
scas
repz
xchg
sti
mov
js
js
add
pop
loope
mov
call
(bad)
ins
pop
dec
mov
add
movq
pop
mov
cmc
fs
adc
movs
mov
mov
or
loope
dec
arpl
lahf
mov
add
call
(bad)
frstor
ds
mov
jo
je
mov
outs
xor
jmp
loopne
pop
sub
rcl
pop
xchg
mov
adc
pop
movs
aad
jg
pop
loop
cmp
in
lds
lea
rol
mov
adc
sbb
cmp
xor
jmp
cmp
mov
cmp
and
call
adc
clc
lods
dec
add
add
out
jmp
int
cdq
popa
not
add
xchg
pop
inc
or
jmp
xor
clc
stos
mov
scas
dec
int3
outs
and
fwait
clc
in
jnp
arpl
ja
jns
inc
cmps
sbb
adc
jp
out
aaa
jbe
enter
cwde
or
ret
ins
fimul
movs
int
mov
das
sti
pop
push
idiv
call
int
imul
jno
jno
adc
mov
adc
lahf
jp
(bad)
retf
push
xchg
add
dec
cmp
ja
xor
fild
sub
lods
or
outs
pop
sub
sub
pop
aaa
jae
sti
imul
in
pop
(bad)
push
jnp
scas
out
xor
push
or
mov
cmc
inc
sbb
ja
fadd
test
mov
lods
jmp
cmps
int
and
test
add
pop
fistp
sbb
mov
addr16
xor
cmp
mov
or
rcl
inc
fdiv
adc
movs
or
jge
lock
(bad)
mov
mov
icebp
call
xchg
pop
jo
xchg
mov
mov
adc
fldenv
rcr
mov
cli
sbb
mov
jmp
or
push
imul
xchg
bound
jne
(bad)
or
dec
shr
cdq
jbe
dec
xor
repz
sbb
fsub
clc
adc
pop
xor
xchg
xor
pushf
dec
das
mov
mov
add
jne
fcom
pushf
aam
aad
mov
jg
ins
pop
push
xor
call
adc
cmp
cdq
sub
fcmovnu
xchg
mov
movs
lds
ins
jg
fisttp
into
(bad)
ficom
xor
mov
and
push
dec
mov
pop
xlat
loop
xchg
test
inc
mov
mov
fimul
ss
xor
arpl
mov
rol
scas
mov
mov
add
xor
inc
jnp
jno
pop
shl
ret
mov
loop
in
movs
aaa
pop
dec
ret
sub
scas
inc
enter
fcmovne
repnz
mov
out
jo
out
and
cs
push
daa
pop
push
mov
jnp
add
add
lock
jae
stos
mov
dec
lods
pop
stc
xchg
pop
scas
std
pop
ficom
loopne
sub
mov
mov
xchg
and
popf
sub
(bad)
jmp
cdq
dec
lahf
sbb
cmp
xor
mov
xchg
xor
std
cmp
(bad)
sub
out
push
cmp
popa
scas
xchg
scas
popa
test
icebp
or
(bad)
(bad)
pop
push
mov
jecxz
jg
and
mov
cmp
push
and
je
push
test
sbb
hlt
xlat
mov
arpl
cld
inc
je
pop
rcl
pop
neg
and
aas
mov
xor
adc
mov
(bad)
out
jge
std
add
shl
push
ja
lods
hlt
enter
idiv
arpl
mov
test
ds
(bad)
or
jno
scas
pop
pop
js
sub
mov
out
rcr
mov
add
cmp
ret
adc
ror
pop
repnz
in
lea
cdq
hlt
push
push
out
icebp
mov
push
jmp
imul
fisub
out
std
leave
lock
fs
or
xchg
leave
push
add
cdq
shl
pushf
cmps
(bad)
jae
adc
inc
pushf
and
mov
or
mov
(bad)
jecxz
jnp
fadd
aas
(bad)
cmp
inc
dec
mov
and
mul
stc
stc
mov
xchg
jg
sbb
fwait
loopne
pop
fimul
xor
(bad)
leave
adc
lods
cs
sbb
push
nop
jnp
repz
jne
jno
push
mov
ins
sbb
pop
in
pop
sub
daa
inc
js
fild
ret
in
push
lods
mov
repz
sub
out
mov
push
push
adc
jl
push
cs
xchg
cmp
cwde
or
mov
or
xchg
sbb
cmp
fs
hlt
jecxz
cmps
mov
in
xchg
lahf
js
repnz
sbb
pop
gs
add
cli
iret
add
in
push
enter
movs
mov
xor
out
daa
repz
fs
or
inc
push
mov
jno
imul
adc
addr16
(bad)
push
iret
enter
xchg
mov
vxorps
popf
loopne
mov
cs
cmp
xor
lods
mov
pop
jae
sbb
or
xchg
inc
add
test
movs
in
xchg
test
pop
jae
inc
mov
idiv
xchg
push
and
xor
data16
test
cmps
xchg
xlat
sub
pop
pop
sub
push
dec
les
add
sub
stos
jg
in
imul
(bad)
xchg
sbb
out
sbb
ds
sbb
ins
mov
xchg
pop
jle
mov
xor
xchg
and
ins
cld
add
push
add
ret
mov
xchg
cmps
xor
jle
cmp
(bad)
push
mov
sar
lds
sbb
pop
mov
jmp
test
cmps
jecxz
ss
jmp
movs
push
xor
in
push
mov
mov
xor
mov
repnz
les
cs
mov
inc
retf
push
aas
fadd
rcr
mov
call
lods
loope
jmp
cmp
test
inc
imul
icebp
(bad)
dec
in
movs
xlat
or
and
inc
mov
out
(bad)
lods
add
bound
jae
fwait
or
pop
dec
cli
dec
mov
xchg
aas
add
out
xchg
test
jl
das
pop
cmp
cmp
lods
jbe
sub
push
or
das
push
mov
inc
xor
les
pop
or
push
int3
ss
fs
out
inc
std
push
push
popa
cmp
adc
push
mov
imul
cmc
push
(bad)
enter
repz
fst
and
add
popa
jecxz
mov
arpl
out
rcl
fcmovnbe
sbb
int
mov
inc
jp
mov
sub
xor
fld
mov
daa
in
xlat
jb
mov
xchg
push
jnp
lahf
mov
push
pop
mov
imul
popa
ret
pop
sub
mov
repnz
inc
fsub
sar
ds
jmp
xchg
xchg
and
cmps
int
pusha
push
jmp
or
mov
push
lods
dec
sub
bound
(bad)
push
jle
pushf
lahf
dec
(bad)
xchg
mov
mov
xchg
mov
or
mov
sub
or
mov
jo
mov
cmps
ins
cwde
push
pusha
or
jg
dec
mov
cmp
movs
out
xor
jmp
stc
and
stc
or
push
neg
mov
data16
push
mov
cdq
movs
adc
cmp
nop
(bad)
jp
bound
pop
xchg
and
cmc
test
ja
mov
jnp
in
mov
cmp
clc
fidiv
gs
pop
mov
dec
cwde
loope
sub
out
mov
or
arpl
mov
mov
push
mov
jmp
dec
push
dec
add
js
inc
(bad)
xchg
daa
mov
pop
mov
outs
adc
repnz
inc
dec
and
retf
pcmpgtw
pop
and
out
or
repz
(bad)
or
frstor
rcr
adc
push
enter
xchg
add
or
sub
imul
and
xor
pusha
sub
mov
adc
jno
adc
adc
nop
loope
or
cmp
jmp
xchg
scas
jns
shl
es
mov
mov
and
pop
cli
shl
movs
out
mov
jge
mov
aas
push
in
sar
inc
(bad)
xchg
test
add
push
retf
mov
adc
inc
fidiv
out
jmp
jno
xchg
xor
(bad)
jge
dec
leave
mul
cmp
fs
ss
retf
aad
fnsave
jne
repnz
leave
lods
mov
test
pop
sbb
inc
mov
scas
stc
push
js
(bad)
mov
gs
jnp
addr16
pop
out
jmp
xchg
hlt
adc
sbb
mov
push
in
hlt
inc
xchg
call
xchg
mov
in
inc
and
aas
retf
xchg
sub
add
adc
inc
aam
add
jmp
jns
mov
dec
push
mov
out
mov
mov
(bad)
retf
sbb
pop
inc
and
xor
adc
aad
jbe
cmp
sub
jmp
popa
js
xchg
mov
add
jae
ins
jmp
mov
loop
test
ss
scas
test
inc
test
mov
es
ins
js
mov
fidiv
xor
jbe
(bad)
lahf
repz
ds
(bad)
hlt
sub
sub
cmc
push
mov
jae
(bad)
int3
dec
mov
in
push
ret
pop
adc
pop
jl
mov
cmp
xor
inc
mov
inc
jg
in
or
add
cmp
(bad)
mov
adc
pop
push
jle
sbb
push
jge
fs
jo
es
clc
sbb
fistp
leave
daa
aam
add
mov
pusha
sbb
xchg
int3
cmp
nop
pop
imul
iret
mov
out
cwde
sbb
push
ret
or
int3
sub
sub
mov
test
dec
stc
ss
push
in
cmp
test
mov
test
ins
test
retf
cdq
fwait
add
cmp
ins
imul
inc
arpl
jbe
cmc
push
mov
mov
dec
jbe
pop
fimul
mov
xor
out
push
dec
mov
call
in
jno
mov
clc
out
and
les
cmps
imul
les
shl
movs
icebp
call
xor
ins
sahf
fst
mov
jg
add
pusha
dec
arpl
sbb
sub
pop
xor
scas
adc
cmp
ja
xchg
sub
mov
sahf
aam
out
mov
xor
xor
xchg
fs
sub
cs
pop
rcr
push
sbb
jge
push
mov
jcxz
sar
call
mov
out
and
arpl
xchg
dec
out
mov
add
or
push
call
sub
(bad)
push
and
jbe
mov
jno
or
xchg
sbb
test
and
ss
cmp
mov
test
sub
fcomp
sbb
inc
jmp
mov
xor
adc
push
fnstenv
ret
sub
dec
ror
imul
push
xchg
dec
out
mov
xchg
(bad)
hlt
imul
out
mov
out
cmc
imul
ret
mov
sub
mov
mov
cmp
stc
cmp
dec
movs
les
call
push
fcmovu
or
movs
push
push
retf
scas
out
popf
sbb
dec
jmp
or
mov
xor
stos
leave
push
mov
sbb
push
psubusb
mov
mov
inc
xor
call
mov
push
mov
nop
daa
test
fisub
mov
push
mov
ss
mov
hlt
repz
sub
or
(bad)
sar
and
push
jbe
add
sbb
dec
dec
out
int
sbb
xor
push
mov
bound
xchg
cmp
push
sub
or
daa
and
sub
sbb
adc
sbb
sti
or
ret
div
mov
cmp
dec
sub
jae
push
xor
movs
mov
test
pop
push
add
jbe
push
lds
test
xor
aad
shl
xchg
adc
cs
fsub
cs
loop
adc
or
dec
inc
mov
retf
sbb
jb
and
pusha
je
imul
or
dec
jb
dec
mov
push
in
imul
sub
mov
pop
xchg
xchg
pusha
rol
mov
pop
sti
adc
int3
les
jp
les
out
mov
push
jmp
sar
ror
cmp
jmp
mov
call
int3
inc
and
xlat
sub
jmp
mov
cmc
cmp
pop
or
retf
dec
int
cmp
push
movs
pop
mov
mov
aam
std
addps
lds
pop
hlt
xchg
iret
adc
jl
into
aas
jecxz
jns
outs
and
push
cmc
jl
xchg
xor
test
xchg
mov
jmp
pop
shl
jg
sub
add
and
lea
cld
mov
sub
cmp
jmp
push
mov
aas
aaa
sbb
ret
(bad)
aaa
fimul
imul
ret
sub
push
(bad)
or
(bad)
(bad)
pushf
lods
test
ja
gs
push
fsubr
lods
inc
out
lods
push
retf
nop
(bad)
jmp
(bad)
es
xlat
xchg
iret
rcl
sbb
jp
lods
into
daa
and
sub
imul
pushf
fsub
xchg
shl
outs
imul
pop
ss
add
fst
mov
sub
in
cmp
fwait
dec
ret
lods
inc
adc
imul
inc
popf
in
jge
daa
mov
xor
mov
dec
in
sub
add
fimul
push
and
dec
ret
jge
jle
leave
push
xchg
push
test
add
js
test
lods
mov
mov
pop
fisub
call
sub
mov
inc
mov
cmc
(bad)
mov
dec
dec
jmp
call
pop
mov
jp
test
mov
mov
lods
and
and
pop
pop
mov
aas
mov
cs
cmp
out
xor
rcr
nop
out
jg
lea
adc
jno
add
xchg
xor
jmp
cmp
test
and
add
movs
sub
jmp
mov
sub
or
addr16
jecxz
ret
addr16
adc
fldcw
add
fadd
aaa
loopne
mov
(bad)
cmp
or
stos
(bad)
or
push
add
fnsave
push
iret
push
ror
and
setle
fcom
pop
xchg
add
and
jge
jecxz
or
mov
(bad)
xor
inc
or
outs
jae
aam
pop
scas
idiv
jno
xor
mov
jo
cmp
pop
xor
rcr
call
jno
or
mov
xchg
mov
cs
adc
sub
cld
jnp
data16
mov
adc
jnp
in
test
(bad)
jl
cmp
add
jg
nop
mov
imul
jns
sti
add
out
sbb
out
nop
int3
les
test
out
in
repnz
jns
or
cld
xchg
xor
xor
cld
cdq
add
ins
imul
cmp
and
push
in
xchg
push
dec
mov
and
add
lods
or
in
fidiv
ins
push
jne
orpd
scas
adc
cmc
jo
bound
(bad)
inc
mul
ret
int
(bad)
sbb
cmc
jge
inc
mov
aad
aas
sub
push
mov
inc
mov
xor
ins
cmp
inc
and
cli
(bad)
retf
adc
dec
pop
xchg
xlat
sub
ins
pop
inc
cmp
shr
xchg
lds
mov
adc
sub
add
fsincos
push
popf
fwait
dec
les
mov
xor
xchg
mov
cs
lods
add
xor
push
pop
into
pop
ret
cmp
mov
ja
cwde
in
xchg
in
mov
xor
push
mov
fsub
sti
mov
or
aas
jp
retf
xchg
or
test
sub
mov
push
pop
in
(bad)
aas
pop
jle
adc
jl
pop
stc
jge
mov
mov
inc
xor
mov
jno
rol
cdq
xchg
or
dec
(bad)
adc
xlat
(bad)
dec
xchg
add
movs
fwait
push
hlt
xchg
shl
mov
xor
in
loop
jo
aam
(bad)
dec
(bad)
mov
scas
xchg
dec
sar
add
aaa
sub
or
mov
int
inc
xor
mov
pop
fdivrp
mov
xor
sub
ins
mov
add
loope
jno
call
mov
pop
inc
mov
lea
movs
shl
pop
or
adc
sub
dec
add
push
or
test
mov
jmp
inc
lds
and
or
enter
leave
je
jle
aaa
hlt
arpl
jns
inc
jg
inc
jns
sub
mov
arpl
repz
into
cwde
mov
jl
jo
mov
neg
repz
scas
sub
xchg
sbb
sahf
retf
int
pop
inc
sbb
or
pop
jne
outs
repz
cwde
xchg
mov
popa
pop
fsqrt
lods
xchg
or
les
rep
sbb
push
pop
push
rcl
cmp
popf
cmc
fcmovnbe
xor
enter
(bad)
dec
fdivrp
pop
adc
cmp
add
adc
and
cmp
xor
retf
lea
imul
inc
call
mov
jl
xor
sbb
fs
sbb
cs
xor
pop
mov
jmp
xor
push
stos
ficomp
mov
lock
mov
fwait
retf
cmc
mov
add
inc
add
dec
and
mov
out
dec
out
jae
in
call
pusha
or
movs
adc
adc
fld
inc
or
lods
stos
xchg
(bad)
jnp
add
cmp
fchs
or
push
xor
and
mov
mov
xor
(bad)
inc
xlat
pop
cmp
fwait
rcr
je
sbb
neg
mov
clc
pop
mov
jo
adc
dec
rcr
adc
aad
pop
sbb
imul
(bad)
scas
xchg
mov
xlat
addr16
jmp
mov
and
jecxz
cmp
adc
add
sahf
ins
cmp
outs
dec
fadd
ret
jecxz
in
sbb
pop
(bad)
inc
(bad)
sti
jmp
ror
xchg
stc
adc
ins
inc
pop
fcomp
popa
lock
sar
fadd
sahf
mov
mov
jge
imul
push
sub
inc
fistp
lock
shl
sar
das
cmc
ins
daa
mov
xor
adc
pop
xchg
sub
push
adc
fcmovnb
mov
das
aaa
pop
mov
or
ret
cmps
fwait
adc
fstp
mov
ds
mov
ins
pusha
adc
into
sub
mov
rol
test
retw
dec
xor
clc
jo
cmp
cmp
jle
shr
ficomp
jb
(bad)
pop
mov
imul
leave
xor
mov
xchg
adc
dec
sti
pop
mov
adc
scas
mov
and
and
das
shl
(bad)
xchg
pusha
inc
pop
sbb
ds
gs
xor
adc
mov
(bad)
sbb
push
stos
jle
adc
mov
fstp
jmp
cli
mov
ret
inc
adc
cs
mov
sti
int3
sub
(bad)
cwde
popa
nop
stos
hlt
inc
cmp
push
xor
pop
mov
lahf
cmp
pop
mov
jmp
add
dec
mov
push
cmp
xor
mov
fld
cs
scas
cmc
adc
dec
(bad)
xor
sahf
pop
jo
repnz
out
ret
aad
jne
pop
pop
shl
(bad)
or
lods
mov
popf
sti
cs
jmp
ins
int3
ror
jecxz
adc
call
sbb
cmp
inc
xchg
mov
inc
inc
bound
xchg
out
jl
das
test
push
test
inc
stc
jle
mov
dec
push
xchg
xlat
add
clc
fiadd
add
pop
mov
mov
jo
jb
add
push
jb
daa
xor
mov
cmp
fldenv
lock
and
nop
xor
jl
lea
inc
fidiv
jle
adc
daa
jl
(bad)
xlat
sbb
mov
ds
arpl
daa
mov
dec
aas
pop
dec
pop
add
in
push
fwait
jle
cmps
xchg
mov
cs
pop
jmp
daa
xchg
pusha
pop
lock
popa
mov
sub
lock
xchg
imul
les
inc
jne
clc
retf
mov
sbb
je
mov
sbb
test
ret
out
nop
sbb
dec
push
std
push
cmp
or
les
jbe
cs
xchg
cwde
(bad)
rol
mov
pusha
dec
mov
xor
ja
call
mov
push
scas
test
fsub
popf
jle
jmp
sub
and
ret
call
xchg
and
test
pusha
icebp
inc
div
rcr
iret
fsub
mov
pop
in
mov
mov
int3
loope
push
add
fs
jge
mov
mov
fs
popa
sub
and
hlt
xchg
xchg
jb
das
cmp
jg
(bad)
aaa
inc
je
and
xchg
rcr
ss
mov
push
add
jmp
gs
aaa
addr16
js
cmc
imul
out
(bad)
in
out
push
or
mov
or
mov
jo
loopne
movs
call
lds
enter
inc
pop
outs
pop
add
add
adc
mov
and
inc
inc
push
or
nop
lods
in
xchg
dec
ja
push
xchg
call
fadd
repz
sar
arpl
add
jne
sar
sub
add
inc
stc
push
scas
pop
push
in
jbe
jecxz
jle
sbb
test
xor
out
pop
jmp
push
sahf
and
fnstsw
sbb
ret
pushf
mov
mov
les
mov
jl
adc
push
pop
stos
repnz
pop
mov
pop
mov
jecxz
pop
xor
test
and
pop
mov
in
clc
rol
inc
fstp
hlt
push
stos
pop
sahf
pop
gs
sub
jnp
popa
jl
and
lods
and
pushf
push
xor
sub
shl
push
shl
adc
movs
(bad)
out
int
cmp
adc
adc
jo
cmp
pop
scas
data16
add
sub
popf
fucomip
mov
xchg
push
rol
sub
daa
xor
cmp
hlt
mov
sub
mov
mov
pop
stos
cld
mov
in
das
imul
test
pop
inc
lods
sub
shl
cwde
stos
xor
mov
mov
mov
push
cmp
mov
out
jg
cmp
mov
mov
inc
ins
or
fwait
mov
mov
xchg
out
cmp
sbb
xor
mov
xor
push
enter
mov
loopne
cmps
adc
and
dec
stc
mov
xchg
fcmovbe
pop
sub
sti
jbe
mov
fadd
call
fnsave
popf
int3
mov
scas
fnstsw
push
es
fst
mov
xchg
out
popa
push
xchg
bound
imul
pop
hlt
jg
sbb
lds
outs
push
push
push
out
div
sbb
out
jnp
dec
fcmovbe
mov
(bad)
loopne
cwde
inc
jae
sbb
jae
int3
sahf
jmp
(bad)
aad
sub
mov
mov
mov
aad
test
jge
dec
jmp
mov
push
ret
mov
pop
adc
cmp
xchg
mov
shr
fwait
adc
pop
xchg
mov
mov
repz
rcr
sbb
pop
push
daa
pushf
xlat
bound
adc
imul
jge
popf
fild
cmp
pop
into
sub
dec
fwait
mov
mov
fs
cmps
imul
push
out
mov
xor
aam
or
pop
imul
ret
mov
cmps
ins
fwait
pusha
cmp
ret
sbb
ja
adc
xor
and
ja
pop
ins
pop
lock
(bad)
pop
mov
adc
call
xor
xchg
mov
rcr
xchg
aas
lahf
ja
loopne
nop
and
call
ja
rol
and
cdq
adc
mov
int3
pop
adc
int3
xchg
mov
stos
aas
add
and
hlt
fwait
xchg
sbb
add
fimul
aas
xchg
jae
push
repz
adc
mov
adc
sahf
mov
pop
in
and
adc
mov
dec
mov
loop
xchg
ins
mov
mov
loope
iret
xchg
fwait
add
int
je
outs
retf
movs
jno
dec
call
inc
add
stos
ret
cmp
jmp
jno
stc
mov
add
repnz
es
retf
outs
sub
cld
(bad)
add
jecxz
std
sbb
jb
push
in
xchg
dec
sbb
jmp
jmp
pop
pop
mov
imul
daa
mov
mov
dec
pop
das
test
xchg
loope
inc
jne
cld
repnz
out
push
mov
add
imul
dec
les
and
ficomp
imul
jge
and
adc
movs
pop
dec
xchg
dec
(bad)
out
xchg
jbe
jb
and
jmp
icebp
loopne
jne
or
sub
sbb
cwde
xchg
sub
pop
sub
mov
dec
aad
stc
out
das
sbb
mov
mov
sbb
pop
sbb
and
xchg
out
push
jae
xor
retf
inc
xchg
pop
push
gs
push
ror
xchg
jg
into
repnz
retf
mov
pop
dec
sub
and
sbb
hlt
xchg
add
(bad)
push
and
iret
inc
jg
sbb
adc
subps
retf
ror
xor
mov
mov
dec
pop
xor
stos
dec
into
ret
and
jnp
popa
scas
outs
cmp
movs
and
mov
scas
and
add
sub
gs
adc
fist
and
cmps
sbb
gs
xchg
repz
mov
fsub
fistp
jo
lods
xor
inc
sbb
in
or
jo
jmp
mov
shl
inc
xchg
pushf
mov
pop
ds
ret
xchg
and
dec
stc
mov
cmp
(bad)
mov
mov
mov
das
loope
sbb
and
mov
inc
mov
sub
daa
clc
xchg
push
sti
lahf
ss
mov
ret
into
rol
or
sub
dec
fsub
jecxz
jb
xchg
in
add
das
add
fild
cwde
ss
jl
pushf
fiadd
sbb
jbe
cld
ss
dec
xor
mov
outs
test
imul
outs
push
mov
in
and
enter
scas
out
enter
icebp
xchg
(bad)
icebp
cwde
in
repnz
addr16
adc
or
stos
dec
fld
sbb
jbe
mov
lods
sahf
mov
add
(bad)
hlt
mov
ror
es
(bad)
ss
js
dec
push
scas
lea
fdivr
dec
neg
push
jp
je
dec
sahf
ss
test
out
add
xor
test
and
and
pop
mov
clc
or
and
sub
aam
mov
nop
mov
xchg
fstp
and
daa
push
add
and
icebp
add
fist
sbb
mov
mov
loopne
sbb
xchg
push
pop
sub
mov
in
pop
mov
xchg
jae
sbb
xchg
push
ins
or
bound
push
imul
xor
sub
mov
outs
out
mov
xchg
mov
rcl
mov
pop
(bad)
pop
movs
div
pushf
push
test
pusha
xchg
xchg
ins
push
mov
ds
dec
sub
dec
es
xlat
ror
cld
outs
and
jnp
lds
mov
sbb
jns
call
sub
adc
outs
dec
out
add
xchg
mov
(bad)
push
pusha
sub
sbb
fcomp
adc
pop
xchg
cs
dec
lods
das
push
push
adc
in
jmp
fmul
ret
aad
xchg
pop
sbb
ret
(bad)
stos
xor
xor
je
lods
push
in
ret
sbb
mov
nop
jne
mov
addr16
rol
pop
sbb
adc
pop
sti
pop
rol
mov
push
xor
jge
cmp
mov
xor
(bad)
sar
dec
dec
and
jecxz
or
xchg
push
adc
das
xchg
(bad)
mov
cmp
jg
adc
stc
stc
mul
dec
mov
xlat
retf
xchg
mov
cli
(bad)
dec
arpl
mov
mov
and
int
fs
cmp
cmc
push
push
(bad)
jnp
je
das
mov
fwait
cmp
xchg
in
out
rcl
jp
imul
jns
jne
clc
mov
test
mov
jl
jmp
push
mov
je
loope
push
inc
push
imul
sbb
fisubr
fst
add
pop
mov
push
int
push
(bad)
clc
mov
sbb
jb
adc
and
sub
mov
xchg
sbb
jmp
adc
cmc
mov
pushf
adc
mov
mov
xor
add
or
pop
fwait
jne
in
sub
lods
loopne
jb
sbb
mov
inc
sub
int3
inc
icebp
out
xor
push
pop
sub
out
enter
pop
or
mov
pop
dec
cmp
add
adc
mov
push
push
mov
mov
add
daa
mov
retf
mov
pop
pushf
pop
mov
rcr
fs
xchg
loop
xchg
pop
fimul
sub
add
adc
xchg
movs
mov
loop
sbb
std
and
xlat
pushf
dec
xchg
repnz
(bad)
adc
mov
shr
(bad)
loopne
lods
lock
pop
adc
mov
cmps
fdiv
xchg
add
cmp
pop
pop
int
fsub
xor
mov
cmp
xor
adc
ja
adc
xor
cmp
sbb
pop
mov
in
pop
or
ret
hlt
sub
stos
mov
fwait
cmp
add
cmp
xchg
outs
iret
fucom
daa
std
jecxz
stc
aaa
ret
das
frstor
dec
xor
push
or
adc
sbb
cdq
fimul
movs
mov
push
sub
sub
int3
mov
adc
scas
sbb
jp
jne
and
and
sti
xchg
mul
jne
mov
dec
data16
addr16
fs
jp
ss
and
mov
out
out
dec
jg
fidivr
mov
shr
sahf
xchg
xchg
out
xor
pop
or
imul
mov
xchg
add
out
out
test
or
aam
test
and
mov
xchg
pop
add
dec
add
push
cmp
das
mov
sub
push
or
xchg
mov
cld
out
lods
push
int3
mov
sbb
fdivr
js
and
and
mov
popf
xor
inc
mov
inc
cli
shl
xchg
gs
shr
(bad)
std
mov
(bad)
mov
and
mov
xchg
mov
pushf
hlt
adc
pushf
mov
in
mov
psllw
inc
(bad)
mov
clc
jg
and
imul
sub
rcl
inc
in
les
jge
out
and
push
loope
ins
test
fs
into
add
sahf
mov
call
cdq
mov
add
(bad)
jmp
jae
int
push
adc
pop
jl
jmp
das
bound
and
sbb
pusha
in
push
push
jo
cmp
inc
mov
xor
or
(bad)
jb
jbe
stos
xor
ds
pop
and
xor
pop
cmp
shr
ins
add
fcomip
inc
jp
dec
aas
or
sbb
sbb
add
data16
mov
mov
popa
leave
push
leave
nop
pop
pushf
fstp
shl
jno
ins
push
xor
pcmpeqd
push
mov
out
cs
xlat
int
inc
pop
inc
sbb
jae
rcl
in
inc
out
outs
rcr
sar
pop
dec
xlat
or
pushf
jno
call
in
jno
mov
icebp
(bad)
jnp
cmp
mov
scas
mov
clc
movs
or
sub
xchg
push
in
push
test
lods
mov
rol
mov
fbld
inc
pop
fstp
or
sti
pop
sub
and
cmp
cwde
sbb
out
push
cmps
outs
adc
test
inc
mov
xchg
lods
xor
push
jp
test
pop
imul
or
cmp
sbb
mov
retf
sti
nop
stc
push
cmp
or
outs
sar
aaa
(bad)
mov
sub
loop
adc
adc
adc
cmp
repnz
imul
mov
inc
push
movs
in
ret
push
mov
cmp
inc
xor
(bad)
loop
jmp
inc
dec
sbb
cmp
mul
fld
sub
and
jp
jmp
leave
cmps
cdq
out
xor
cmp
xor
pop
cs
push
out
cwde
in
cwde
push
add
or
cwde
push
sub
xor
sbb
or
out
push
enter
push
imul
stc
(bad)
int
daa
push
pop
sub
lea
fistp
cld
je
adc
cmp
xchg
ret
fadd
and
rol
jo
xchg
sub
sbb
pop
sbb
or
js
mov
sub
mov
xor
movs
cmp
or
push
fmul
inc
inc
jle
sar
jae
xlat
(bad)
mov
dec
pop
iret
push
int3
jnp
mov
outs
test
fs
sub
push
push
cmp
push
jmp
pop
or
in
sti
out
inc
inc
xchg
fild
(bad)
test
mov
push
cmp
mov
mov
jmp
pusha
pop
jb
jecxz
les
adc
test
and
aad
shr
scas
out
push
lds
les
sbb
pop
loop
stc
ror
dec
fisttp
leave
arpl
dec
push
and
outs
clc
or
cmp
aam
lea
hlt
adc
test
mov
xchg
clc
nop
repnz
pop
cmp
stc
xor
std
leave
es
aam
shr
xchg
jnp
loope
ficom
scas
in
int
sti
mov
rcl
(bad)
mov
fild
(bad)
inc
xchg
and
imul
cmp
or
fmulp
cmp
movs
je
inc
leave
cwde
sbb
jge
sti
push
pop
pusha
scas
cdq
dec
pushf
gs
adc
jns
mov
cs
(bad)
test
fsub
test
gs
clc
mov
rcr
in
inc
inc
mov
sbb
push
or
and
fwait
and
jbe
mov
movs
lahf
or
jns
popf
mov
sbb
xchg
fild
sar
dec
dec
sahf
add
pop
push
or
ins
xchg
cmps
inc
sub
mov
in
sbb
jae
inc
arpl
xor
dec
push
rol
mov
call
loopne
js
fsubr
mov
mov
dec
fsub
ss
mov
fimul
push
stos
std
push
adc
inc
push
jns
or
jmp
or
adc
jb
jg
add
jle
nop
pusha
cmp
sbb
sbb
pop
sub
inc
std
adc
xchg
pop
pushf
(bad)
push
ja
jg
call
rol
sbb
pop
bound
jecxz
scas
lds
test
xchg
stos
or
mov
push
in
mov
les
aam
aas
inc
cld
ret
cmp
cmp
sti
xlat
cld
neg
ja
test
push
movs
and
sbb
outs
pop
fistp
test
sub
in
xchg
cmps
jo
push
scas
mov
xchg
in
xor
sbb
inc
or
mov
addr16
jnp
sub
sub
cmp
jle
mov
lea
add
xor
popa
pop
push
jns
pushf
sub
lock
push
fxch
aaa
lods
sbb
adc
faddp
or
push
xchg
imul
test
in
test
sbb
(bad)
rcr
xlat
adc
sbb
repz
add
das
mov
(bad)
sub
bound
popf
hlt
and
loope
ret
add
lahf
(bad)
in
cmp
mov
sbb
pop
jl
out
xor
and
int
popa
inc
das
pop
int3
xchg
sbb
cli
call
fidiv
push
outs
jae
add
jmp
popa
mov
mov
and
dec
and
jg
push
mov
mov
shr
mov
or
int
inc
repnz
ficomp
mov
mov
(bad)
add
adc
sub
test
sbb
sar
push
(bad)
lock
inc
pop
adc
aad
cmp
dec
jg
mov
push
mov
cmps
sti
mov
cmc
loop
(bad)
popf
fdiv
scas
jecxz
out
sahf
push
adc
mov
add
push
adc
xor
jecxz
jge
shl
or
adc
adc
push
ins
aad
fst
adc
out
xchg
jno
in
shl
dec
and
cmp
data16
sbb
scas
out
jp
dec
dec
mov
retf
in
cdq
repz
arpl
sbb
call
jne
clc
mov
mov
sbb
xlat
pop
hlt
mov
mov
push
adc
push
mov
xor
(bad)
add
xor
mov
and
rol
loop
cmps
jge
sub
ss
nop
or
pop
es
aad
fld
in
iret
dec
loopne
out
push
repz
adc
test
push
pop
adc
call
cdq
mov
and
mov
rcl
push
mov
nop
hlt
lock
stos
mov
mov
fdiv
xor
inc
mov
fcmovne
iret
popa
ror
mov
scas
mov
or
adc
cs
xor
aam
idiv
jb
rcl
or
out
xchg
mov
fcomp
push
or
push
add
cmp
jp
jmp
je
add
sub
into
std
mov
fld
mov
(bad)
cmc
pop
pop
mov
push
inc
icebp
xor
push
ror
call
popa
add
or
push
in
retf
mov
and
pusha
jns
imul
push
and
jl
push
fdivp
xchg
mov
cmps
or
mov
or
test
ret
out
sbb
shl
cmp
or
jbe
int
mov
mov
inc
and
bswap
inc
out
or
aam
lods
ss
(bad)
out
mov
cmc
add
out
ret
das
push
push
jecxz
push
in
(bad)
rcl
call
xor
jmp
jl
pop
push
jg
das
or
pop
loope
mov
jg
jo
jp
sub
fisttp
ficomp
fidiv
repnz
ret
and
push
in
dec
mov
mul
cmp
lods
clc
mov
lock
mov
scas
push
cld
loope
icebp
inc
xchg
mov
shr
push
pop
das
pop
jnp
inc
lahf
and
(bad)
in
(bad)
push
rol
(bad)
jg
pop
pop
cmp
sub
jmp
es
(bad)
and
scas
mov
out
test
std
or
fucomp
rcr
push
mov
paddsb
mov
lahf
cwde
jmp
mov
mov
push
inc
shl
stc
and
dec
cmps
cdq
scas
test
or
cwde
push
push
mov
pop
pusha
inc
aam
icebp
xor
inc
add
call
rol
scas
outs
lds
lahf
adc
sbb
inc
les
dec
mov
je
push
dec
sub
leave
adc
mov
inc
sub
shl
js
pop
or
aad
add
clc
xchg
adc
aad
xor
lods
outs
xchg
pop
out
sbb
push
dec
sub
inc
stos
cli
xlat
and
bound
sbb
cli
sbb
pop
jbe
cmps
push
ror
addr16
fs
jae
hlt
ret
ds
push
stos
out
inc
inc
mul
mov
and
mov
pusha
nop
and
les
fld
xchg
cmp
leave
mov
dec
das
jmp
xor
gs
ret
mov
popa
sub
fidiv
mov
ins
mov
dec
test
jno
xchg
jbe
sbb
sti
push
imul
stc
popa
ja
or
icebp
sub
in
fidiv
lock
xchg
pop
int
sub
pop
add
imul
inc
clc
dec
jmp
cmp
mov
cdq
lahf
xchg
std
repz
sar
sub
xchg
iret
movs
or
jp
sbb
push
dec
stos
xchg
pop
add
pop
xchg
mov
add
in
mov
jg
mov
test
lods
mov
and
js
mov
push
cs
dec
sbb
mov
sbb
inc
scas
pslld
jns
fldpi
jge
xchg
or
xchg
mov
mov
test
js
mov
sub
sbb
mov
enter
inc
dec
jl
and
push
jmp
push
mov
iret
arpl
inc
aas
stos
and
xor
push
jae
and
sub
adc
mov
(bad)
sbb
test
jmp
inc
push
arpl
adc
xchg
aad
jp
cmp
add
sub
in
cwde
lea
push
dec
jle
stos
stos
or
pop
outs
cmp
add
jno
repnz
jmp
pop
mov
arpl
inc
and
aas
ucomiss
xchg
(bad)
push
inc
mov
mov
push
daa
add
xchg
mov
clc
(bad)
test
mov
outs
std
jecxz
jno
cmps
fld
jg
mov
repz
not
cmp
mov
sbb
pop
daa
sub
mov
ins
dec
cld
add
ja
cdq
es
pop
or
int
clc
(bad)
xchg
inc
xor
cmp
pop
lods
sbb
cmp
test
stos
clc
xor
pusha
ficomp
mov
je
pop
stc
jne
mov
push
dec
inc
sub
pop
pop
nop
xor
inc
mov
call
mov
ins
stos
add
mov
ins
push
mov
sbb
or
jmp
xchg
out
inc
pop
adc
bound
es
add
mov
xchg
cld
inc
sub
popf
ror
adc
leave
aas
cmps
ins
dec
pop
pop
addr16
or
xchg
mov
mov
add
out
pushf
sbb
cmc
call
sbb
(bad)
bound
push
test
pop
push
pop
lods
jae
stos
aad
xchg
and
call
push
ja
push
cmp
sbb
dec
push
xchg
push
stos
mov
icebp
push
mov
inc
jle
jmp
pop
push
or
cmc
loope
sub
or
in
ds
ret
xor
add
adc
and
or
mov
pop
cld
int3
or
std
sub
add
pop
xor
adc
dec
mov
mov
inc
xchg
in
pushf
pop
xor
loopne
mov
ror
je
pop
or
mov
dec
and
mov
out
mov
mov
ror
jge
or
or
push
fst
jp
es
sub
xchg
xor
test
cs
nop
add
jno
mov
mov
out
or
push
daa
les
cld
std
mov
mov
shl
jecxz
sub
jae
arpl
arpl
push
scas
enter
and
xchg
pusha
push
push
and
and
in
ret
and
jmp
pushf
mov
out
cld
call
std
imul
adc
push
imul
int
pop
(bad)
jge
pop
pop
out
fbstp
arpl
xor
pop
jb
xor
into
xchg
cmp
fidiv
sbb
fsubr
scas
cmp
and
cmps
cmps
pop
sbb
int3
or
iret
(bad)
pop
jae
mov
arpl
sbb
retf
inc
push
xor
jmp
and
aam
sub
sbb
fisub
iret
out
cmp
push
add
clc
scas
call
call
retf
mov
lock
and
call
(bad)
pop
(bad)
xchg
(bad)
cmp
aam
cs
bound
fs
jbe
das
push
xor
dec
jmp
fimul
cwde
fnstsw
pushf
cmps
mul
xchg
arpl
jnp
pop
lock
pop
hlt
xchg
xchg
push
clc
sub
xor
xchg
lahf
ss
outs
mul
cmps
dec
stos
adc
dec
jb
jns
xchg
and
fld
out
mov
mov
pushf
enter
shr
js
out
cmp
ret
shl
and
inc
ins
lahf
jle
repnz
xor
sub
and
jne
jmp
clc
and
push
out
adc
mov
push
mov
push
daa
xor
push
jmp
ficom
add
cmc
retf
and
lahf
mov
stc
retf
ins
cmps
push
xor
mov
fld
fs
(bad)
or
inc
xchg
inc
mov
pop
jmp
sbb
fsubr
dec
(bad)
cmp
test
jl
or
fidiv
or
outs
cmp
sub
into
outs
inc
or
aas
dec
daa
pop
push
inc
xchg
ret
not
in
test
int
push
sbb
pop
xlat
scas
xlat
adc
cmp
mov
pop
lea
sub
sbb
in
and
sbb
push
jle
jg
out
(bad)
adc
push
scas
mov
(bad)
shr
fwait
jb
in
bound
test
xchg
add
(bad)
fnstenv
and
xor
cwde
popf
ja
xchg
or
test
jns
mov
ror
shl
inc
test
and
repnz
out
imul
loop
fimul
add
aad
adc
adc
inc
aad
sub
add
arpl
pusha
inc
pop
aas
dec
push
jle
add
rcr
mov
mov
(bad)
jno
dec
fistp
fisttp
addr16
or
in
dec
pusha
or
stos
mov
mov
push
iret
xlat
adc
cmp
pop
hlt
sbb
ja
mov
std
in
adc
sub
sahf
popf
mov
jnp
pop
nop
cmp
test
movs
xor
jl
fs
in
xor
and
mov
and
mov
std
jnp
std
loopne
mov
jnp
aaa
inc
and
push
xor
inc
push
or
aas
mov
ja
jb
adc
mov
cs
fsub
xlat
mov
dec
push
popa
outs
shr
sbb
jnp
neg
jnp
xchg
mov
movs
mov
rol
push
dec
pop
cmp
push
push
mov
stos
push
nop
jl
lahf
sbb
jo
mov
fild
mov
cmp
xchg
in
jle
aam
sub
aam
das
mov
shl
fwait
movs
mov
lods
cmps
dec
sub
xor
mov
addr16
dec
push
cld
push
push
push
(bad)
daa
push
test
xchg
call
mov
(bad)
sub
or
mov
cmps
loopne
add
fnstcw
cmps
jg
jno
cmp
sub
stc
dec
dec
inc
sub
fisttp
or
(bad)
and
fcomp
sub
adc
shr
cwde
jp
call
jl
call
pop
or
sub
cmc
dec
fld
iret
jae
mov
enter
or
mov
lock
push
dec
add
(bad)
outs
xchg
jg
nop
sub
aaa
push
adc
xchg
(bad)
cdq
mov
leave
adc
popa
dec
dec
push
mov
xchg
xchg
xor
jmp
jge
cmp
and
cmp
(bad)
jl
mov
cmp
or
sbb
add
pop
test
push
cld
pop
mov
ja
sub
(bad)
rol
sub
fidivr
outs
sbb
pusha
loop
cld
cdq
mov
push
cmp
and
cmps
push
add
inc
movs
mov
pop
iret
aam
mov
jo
pop
cmp
sbb
and
frstor
dec
je
(bad)
test
sub
mov
pusha
pop
mov
xor
mov
out
pop
sub
pop
les
xchg
lods
sub
(bad)
cmp
jbe
jmp
test
jge
retf
or
not
dec
outs
dec
enter
outs
mov
imul
push
inc
mov
push
pop
pop
inc
inc
arpl
lods
in
jo
les
int
(bad)
cmp
iret
dec
lock
es
xor
sahf
jl
push
mov
sbb
lahf
cmp
inc
aad
imul
ins
mov
out
add
in
bound
outs
mov
data16
cmp
or
cmps
retf
repnz
out
cmp
mov
pop
pop
xor
add
adc
mov
mov
sahf
enter
retf
retf
retf
jbe
sub
movs
xchg
mov
dec
stc
dec
sub
xchg
je
aam
push
call
cmp
sub
imul
jb
sar
push
std
ins
inc
jmp
ins
jne
pop
inc
addr16
in
shr
sti
addr16
jb
rcr
and
or
popf
jg
nop
pushf
sbb
int3
push
mov
cmp
add
or
popf
inc
(bad)
sub
xchg
add
out
sbb
mov
in
neg
sbb
pop
stos
pop
ins
mov
in
fwait
push
jo
xchg
sbb
inc
mov
mov
inc
mov
scas
sub
pop
cmp
repz
mov
scas
arpl
lds
test
shl
pusha
scas
push
std
mov
ret
cmp
or
mov
push
xor
pop
sbb
cli
ret
mov
push
xor
jmp
ins
cli
jle
mov
rcr
jmp
pop
lock
add
pop
inc
fs
xor
gs
xchg
push
adc
xchg
outs
stos
test
fcmovnb
xchg
add
jne
nop
push
pop
inc
(bad)
add
cs
cmc
push
lds
cmp
pop
in
test
push
push
jl
inc
test
pushf
mov
mov
mov
inc
mov
add
mov
inc
pop
movs
mov
cmp
fisttp
ja
ins
sbb
adc
jp
daa
rol
xor
cmp
dec
dec
lods
out
jecxz
enter
aas
test
add
out
mov
add
sub
sub
sub
loopne
jns
pusha
xchg
aam
jp
fst
adc
push
(bad)
div
clc
mov
or
(bad)
(bad)
imul
push
cmc
mov
add
retf
cmp
push
aaa
ins
add
mov
loop
mov
xchg
and
fsubr
addr16
sub
push
add
popa
mov
and
rcr
or
aam
ffree
sbb
push
cmp
pop
and
jne
push
lods
dec
cmp
xchg
jnp
js
mov
retf
and
test
test
xor
xchg
mov
inc
mov
push
pop
ret
push
adc
out
or
jg
mov
imul
lock
mov
or
addr16
in
cmp
cmp
adc
inc
imul
dec
push
movs
hlt
inc
mov
xchg
mov
add
push
jg
mov
dec
dec
add
call
pop
addr16
add
(bad)
int
sub
repnz
xchg
jp
mov
push
and
xchg
leave
ins
cdq
push
mov
add
sub
sbb
and
dec
push
das
jnp
push
cld
dec
xor
mov
aas
sub
jp
fmul
scas
adc
add
pop
ret
popf
inc
lea
mov
jo
inc
pop
xchg
and
xor
pop
lock
jno
jae
test
add
popf
xchg
jne
retf
lods
arpl
dec
addr16
pop
and
cmp
cmps
and
retf
outs
sub
je
jl
or
add
adc
or
mov
cmp
int3
and
jbe
dec
push
setg
xor
jno
sbb
es
out
mov
jmp
mov
ret
into
push
cmp
xor
and
outs
cmp
add
icebp
push
push
in
xor
mov
or
call
jg
(bad)
aam
movs
stc
sahf
pop
pop
mov
fwait
xchg
mov
mov
sub
ins
ins
mov
xor
mov
mov
mov
jns
mov
scas
xor
int3
into
adc
repnz
clc
xor
jno
not
lods
xor
shrd
sub
jnp
scas
mov
or
jo
iret
mov
cli
scas
mov
sbb
aam
jge
add
sbb
shl
mov
or
jb
std
xchg
loope
mov
cmp
sar
cmps
(bad)
and
jns
out
adc
inc
pop
jmp
rcr
dec
(bad)
pusha
iret
dec
pop
in
push
cmps
sub
data16
push
add
shr
popa
mov
cli
jle
sahf
cmp
fwait
and
mov
xchg
lods
jnp
mov
push
sbb
mov
call
addr16
arpl
pusha
cmps
mov
data16
adc
jmp
dec
nop
popf
push
test
popf
fcomp
mov
sub
mov
sub
xchg
mov
sbb
ret
pop
lods
push
fisttp
and
pop
stc
fstp
lahf
cwde
sub
int
cs
mov
pop
jmp
push
bound
mov
add
mov
jns
ja
fisub
and
mov
test
jl
mov
lods
dec
sbb
call
push
dec
cmp
ins
dec
movs
sub
popf
inc
daa
jo
sub
nop
retf
mov
add
mov
jbe
xor
dec
and
pop
sbb
(bad)
fdivr
push
sbb
(bad)
sbb
in
jne
loopne
sbb
fiadd
jmp
mov
in
ret
and
pop
and
mov
lock
add
pop
cmps
(bad)
adc
and
xchg
repnz
mov
fimul
dec
and
pop
and
cmp
mov
into
bound
sbb
div
cwde
test
shl
dec
cmp
lahf
mov
adc
mov
lea
cs
sbb
outs
inc
mul
pop
outs
shl
mov
xchg
rol
xchg
mov
xchg
sbb
retf
test
cwde
rcr
jne
adc
rol
stc
add
mov
and
xchg
adc
std
mov
add
pop
std
cmc
dec
das
in
and
adc
xor
mov
push
outs
movs
adc
push
out
ficom
scas
dec
outs
dec
mov
jmp
outs
in
cld
mov
mov
pushf
or
stos
sbb
retf
xchg
mov
jecxz
add
adc
mov
push
shl
mov
mov
dec
pop
loopne
push
pop
ja
(bad)
aas
ja
fxch
retf
xchg
test
fld
and
fs
aad
hlt
push
cmps
and
cmps
scas
xor
in
shr
or
dec
rcl
add
dec
xor
movs
scas
popf
lea
dec
popf
mov
pushf
push
mov
inc
je
mov
cwde
(bad)
into
rol
cwde
int3
inc
xchg
mov
popf
sbb
jge
add
in
aas
xor
adc
sti
xchg
jg
fisub
dec
loopne
push
aaa
retf
or
repnz
loope
pop
(bad)
xor
sub
ins
retf
adc
mov
int3
mov
pop
fs
retf
cmp
mov
ret
js
pop
jb
out
mov
in
xor
or
lds
scas
(bad)
jecxz
movs
movs
shr
cmps
sti
xchg
xchg
mov
imul
mov
lods
mov
inc
xor
mov
jae
test
bnd
jecxz
pop
jecxz
lea
cmp
cdq
ins
xor
inc
mov
das
pop
cmc
fld
outs
push
adc
mov
shl
inc
sbb
retf
movs
ins
aam
mov
pop
mov
enter
push
push
inc
enter
mov
adc
push
sbb
mov
mov
sbb
jecxz
push
mov
pop
inc
repnz
hlt
gs
adc
lahf
dec
mov
cwde
call
mov
xlat
fiadd
out
movs
push
pop
cmc
scas
mov
sub
inc
repnz
scas
leave
pop
and
js
cmp
(bad)
cmp
push
cmp
inc
popf
mov
std
test
inc
movs
sub
sub
pop
cmp
movs
in
fisub
mov
xor
cdq
mov
in
push
sub
xor
inc
pusha
dec
mov
and
enter
lods
mov
int
out
ror
arpl
loop
pop
pop
add
hlt
sbb
scas
xchg
jmp
int3
jp
and
sub
cli
push
dec
in
sub
push
mov
add
std
int3
call
sbb
mov
mul
push
cmp
mov
adc
enter
xchg
mov
mov
push
addr16
mov
mov
jp
or
lock
jg
shr
leave
in
sbb
outs
pop
jne
imul
lea
(bad)
push
or
cmp
das
call
fnstsw
dec
in
sub
inc
int3
jb
outs
fsubr
(bad)
in
int3
daa
aaa
in
(bad)
ds
popa
mov
(bad)
fucomi
and
mov
adc
fcomp
mov
dec
push
int
pop
repnz
movs
retf
mov
stos
cs
out
sbb
push
imul
jg
jge
add
dec
leave
ds
and
and
retf
arpl
mov
ret
test
mov
push
(bad)
icebp
stos
mov
inc
inc
jge
(bad)
in
push
(bad)
cli
xor
mov
mov
rcl
add
push
or
movs
xchg
cmp
aad
fadd
jecxz
daa
mov
push
je
cld
fucomi
(bad)
data16
(bad)
cwde
fmul
sbb
into
pop
and
xlat
cs
pop
fdiv
jg
scas
sub
fisubr
pop
(bad)
clc
pop
neg
loopne
xor
scas
lods
or
mov
and
in
inc
mov
sbb
je
ins
inc
sahf
call
neg
sub
dec
mov
loop
mov
aaa
mov
jae
daa
(bad)
jg
shl
loope
clc
daa
xchg
lds
push
jl
pop
les
jp
in
lahf
sub
sbb
xchg
xchg
adc
mov
shl
adc
cwde
cmp
xor
ds
(bad)
lds
stos
or
jl
in
repz
xchg
xchg
xchg
xchg
mov
mov
fs
mov
mov
xchg
movs
adc
push
jbe
movs
mov
pop
pop
enter
div
jbe
mov
ret
call
inc
xchg
push
mov
and
imul
pop
arpl
test
out
cmp
js
popf
sbb
fidiv
dec
imul
dec
jbe
loop
inc
out
ja
mov
xor
inc
jge
enter
inc
not
cmps
xor
dec
jmp
movs
ret
xchg
out
cmc
iret
xlat
ret
mov
mov
cmp
sbb
cmps
ins
or
jle
pop
add
add
fsubr
or
xor
cmp
test
adc
sub
push
dec
movs
pop
mov
lods
bound
pop
ror
aas
cmp
push
aad
jnp
jp
and
pusha
pop
pop
cmps
shl
jne
test
stos
iret
arpl
jl
push
mov
inc
sahf
adc
pop
and
inc
outs
test
push
jl
(bad)
pop
cmp
add
push
mov
mov
and
test
and
out
arpl
inc
push
cmp
push
mov
arpl
mov
rol
add
cli
pop
enter
push
xor
xor
or
push
test
movs
mov
inc
test
lahf
jae
fnsave
inc
(bad)
xchg
xor
or
out
fistp
cmp
fs
cs
sub
hlt
rcr
add
jl
jge
jge
add
out
(bad)
jb
mov
xchg
rcr
add
es
xchg
stc
loopne
es
cdq
dec
and
cmp
repz
jnp
mov
mov
fsubrp
jns
inc
inc
fiadd
adc
(bad)
jmp
outs
mov
out
fwait
inc
mov
jl
movs
jo
repnz
push
xchg
test
daa
jae
stos
xchg
sub
jno
jo
and
mov
fisub
jbe
lock
addr16
or
mov
dec
popf
(bad)
mov
and
sbb
add
daa
outs
jbe
lahf
js
repz
pushf
out
clc
mov
push
ret
and
test
push
lea
(bad)
stc
test
pop
popf
xchg
cs
push
outs
repz
pop
mov
add
fs
scas
adc
loopne
add
cs
inc
push
or
sbb
mov
movs
popf
add
add
lods
jecxz
int3
inc
repnz
stos
mov
jbe
inc
mov
push
push
mov
idiv
test
mov
add
fcomp
pusha
movs
and
aas
xchg
dec
inc
or
xchg
push
mov
(bad)
jge
push
xlat
dec
out
mov
ret
xchg
popa
mov
cmp
in
enter
ja
gs
test
jae
loope
jnp
lea
test
or
mov
xchg
and
inc
push
sub
mov
mov
repnz
repz
sub
scas
shl
bound
arpl
push
mov
js
cdq
inc
and
jle
dec
rol
pop
aas
fsubr
xchg
outs
xchg
adc
ror
mov
test
mov
or
xor
imul
and
(bad)
(bad)
push
leave
add
cmps
pop
loope
jmp
daa
push
adc
jge
and
int3
(bad)
sti
inc
nop
movs
les
dec
dec
jge
push
push
scas
cs
jns
int
aaa
ins
ss
sti
shr
movs
imul
frndint
scas
fistp
mov
inc
jmp
movs
test
rol
mov
ds
cmc
out
jp
push
cmps
xor
mov
test
inc
shr
cmp
mov
push
outs
pop
cmp
test
mov
out
lahf
add
mov
xchg
cwde
pop
xchg
inc
jl
jbe
hlt
cmp
and
fcmovne
push
dec
int
lock
pop
or
and
xor
sbb
cmps
aad
dec
cmc
stos
add
xchg
pop
and
ret
outs
xchg
loop
pusha
pop
jp
(bad)
jp
pop
test
adc
jo
cmp
push
ins
mov
ret
fisubr
shr
hlt
clc
mov
call
mov
popf
aad
xchg
dec
repz
jge
xchg
into
ret
(bad)
mov
cmc
add
push
mov
cmp
jo
stos
popf
stos
dec
mov
movs
retf
cmp
and
adc
cmp
or
adc
sub
mov
jae
pop
call
or
push
mov
fiadd
in
ins
push
sbb
dec
shl
clc
push
dec
mov
ss
and
mov
jne
sbb
je
loop
dec
mov
jae
mov
push
push
inc
xchg
inc
paddsw
pop
mov
inc
dec
std
cld
test
push
sbb
retf
dec
(bad)
jmp
jo
mov
dec
dec
stos
repnz
aad
scas
cdq
push
shl
lds
cli
mov
push
(bad)
and
mov
mov
mov
mov
lahf
ret
sbb
(bad)
cmp
jle
cli
cdq
jo
adc
jne
movs
jge
iret
movs
sahf
sub
sub
jmp
aaa
pop
or
(bad)
(bad)
xlat
(bad)
mov
inc
rol
jge
add
rol
pop
stc
or
daa
clc
es
(bad)
mov
jg
sub
pop
outs
lock
and
aam
dec
mov
inc
push
cmp
xchg
add
enter
sahf
jns
ret
mov
movs
out
push
sub
outs
retf
dec
push
outs
cmp
jecxz
mov
aam
or
dec
inc
(bad)
(bad)
xchg
stos
in
mov
dec
movs
cmps
xchg
call
movs
add
(bad)
call
mov
inc
pop
dec
ins
jp
(bad)
pusha
(bad)
sbb
mov
pop
push
dec
iret
stos
adc
sub
jmp
fbld
repnz
fdiv
pop
mov
dec
cmps
shr
stos
or
and
neg
xchg
mov
lahf
dec
bound
or
xor
sub
aas
aas
add
dec
dec
test
add
stos
lods
mov
jb
fld
call
fdiv
cmp
ins
pop
jge
fcomi
sub
and
nop
cmp
loop
sub
push
or
or
cs
or
rcl
lds
jae
pop
outs
cmp
test
mov
imul
mov
add
(bad)
xchg
and
ds
mov
add
xlat
cmp
xchg
jnp
fnstenv
adc
daa
mov
push
sbb
mov
and
and
pop
cwde
fadd
sbb
fwait
pop
ja
imul
ficomp
dec
frstpm(287
(bad)
or
adc
dec
xchg
js
xchg
jecxz
cmp
adc
retf
sub
dec
adc
inc
ss
clc
imul
sub
xor
push
mov
jmp
mov
jmp
test
loop
and
inc
xor
lods
std
mov
fwait
inc
sub
fistp
aam
mov
push
scas
sbb
pop
ror
pop
push
pop
faddp
mov
in
mov
(bad)
jb
xchg
push
shl
(bad)
clc
inc
mov
mov
loop
fldcw
mov
retf
sar
enter
mov
mov
clc
fwait
add
sub
jno
cmp
jbe
mov
and
mov
clc
daa
sbb
fnstenv
test
loopne
sbb
data16
das
nop
dec
and
scas
in
add
push
jge
(bad)
mov
jae
(bad)
cmp
mov
(bad)
xchg
lea
popa
jo
call
mov
mov
sbb
arpl
or
pop
mov
aad
adc
mov
and
int
sbb
rol
stos
xor
rol
dec
add
(bad)
or
movs
pop
add
pop
ja
xchg
ret
shr
inc
mov
sbb
cmc
ins
imul
mov
aad
(bad)
test
sub
sub
mov
or
popf
pop
ins
sub
push
aad
sahf
xor
(bad)
sbb
xor
scas
cdq
dec
jbe
sub
xlat
cs
in
adc
nop
arpl
cli
xchg
dec
jmp
es
push
ins
adc
push
push
das
loop
ret
mov
xchg
jnp
mov
lahf
lds
dec
punpcklwd
cld
je
sbb
loope
call
xor
icebp
adc
out
adc
into
mov
jle
mov
jmp
movs
clc
dec
in
and
shr
push
bound
xlat
shr
adc
aaa
pop
dec
mov
ins
mov
inc
pop
shr
pop
imul
(bad)
into
(bad)
xor
cmps
add
cdq
push
inc
icebp
sbb
popa
sub
rol
and
push
imul
clc
shl
aad
inc
or
out
pop
jp
(bad)
(bad)
add
mov
xchg
rcl
push
cmp
(bad)
pop
inc
adc
cmps
xchg
jb
adc
xlat
rcr
popf
push
arpl
dec
push
and
adc
imul
out
push
cs
cmp
inc
jae
loopne
xor
in
adc
lock
mov
out
xlat
add
daa
ror
jo
je
push
sbb
add
or
add
xchg
xor
or
pop
div
cmps
fdivr
mov
iret
xor
aaa
jb
sbb
imul
outs
push
test
lds
jecxz
add
push
fmul
cmp
adc
dec
cmps
mov
lods
push
rol
pop
pop
mov
cli
pop
ds
add
retf
je
fbld
sbb
pusha
dec
out
inc
mov
add
adc
test
cwde
stos
pop
xor
mov
mov
test
mov
jge
jns
vandnps
xor
pushf
es
dec
dec
imul
push
scas
sti
js
icebp
dec
fcmove
or
cmp
sbb
xor
adc
leave
mov
into
mov
ret
xchg
sbb
imul
mov
cli
mov
mov
pusha
fld
js
(bad)
in
add
sub
lods
jmp
mov
bnd
mov
pop
addr16
test
loope
hlt
ss
cmps
mov
xchg
scas
mov
sub
cmp
arpl
sar
mov
stc
daa
add
inc
lea
test
ret
push
pop
push
or
into
sub
retf
inc
cmp
cs
add
jmp
mov
jmp
(bad)
fstp
jmp
jo
dec
(bad)
mov
adc
push
(bad)
jnp
out
popf
mov
xchg
dec
repz
jg
dec
icebp
push
repnz
push
stos
imul
shl
mov
test
inc
xor
sbb
jns
push
xchg
sub
loope
pop
cmp
out
in
shl
xchg
outs
je
fdivr
adc
pusha
call
stc
ds
(bad)
jo
fwait
jae
or
stc
cmp
pop
cdq
in
sbb
jb
cwde
add
jno
dec
ins
neg
(bad)
imul
and
dec
adc
out
mov
fs
and
mov
out
push
xlat
add
daa
test
call
dec
fsubp
and
pop
cdq
test
mov
ja
scas
mov
jb
sub
dec
outs
push
and
xor
push
movs
popa
fstp
sar
mov
push
sub
gs
cli
add
clc
push
pushf
popf
stc
(bad)
cmp
inc
aaa
ins
ret
cld
lea
push
cmc
lds
repnz
rcr
hlt
call
cmc
adc
cs
in
pop
mov
arpl
and
in
sbb
mov
dec
leave
sub
sar
clc
icebp
push
neg
pusha
daa
nop
icebp
hlt
dec
push
and
outs
ja
imul
mov
shl
dec
pop
dec
xchg
or
and
out
rol
aad
lahf
push
add
fisub
add
mov
loope
xchg
jo
dec
imul
adc
pop
lea
test
inc
or
out
inc
jbe
jg
sbb
fist
fldcw
pop
jmp
xlat
and
fcos
sbb
lahf
inc
dec
mov
repz
inc
adc
sbb
addr16
lea
into
shl
mov
sub
jns
addr16
dec
out
mov
push
or
sbb
mul
xchg
cmp
call
stos
sbb
std
pop
and
push
imul
pop
movs
jno
mov
cmps
(bad)
mov
sub
xchg
cmp
in
fdivr
mov
test
ror
push
retf
inc
loope
mov
out
repz
pop
adc
or
movs
xlat
fisttp
leave
mov
aaa
jp
daa
iret
pushf
inc
jmp
jne
nop
call
jl
stos
fdiv
std
les
inc
xchg
mov
ja
push
pushf
or
xor
stos
or
xor
out
add
xchg
int3
movs
aam
rcr
les
and
neg
cmp
dec
loop
(bad)
popf
xchg
aad
push
lods
std
pop
call
ja
mov
ja
add
arpl
adc
sub
stos
mov
add
and
or
inc
xor
mul
adc
and
add
push
test
push
(bad)
aam
rol
mov
xlat
(bad)
pop
mov
repnz
cld
xchg
dec
(bad)
mov
xchg
pop
pop
imul
push
cmp
pop
mov
and
fisttp
cwde
call
loop
lock
jmp
push
jne
push
out
(bad)
popa
fmul
ret
push
inc
cwde
mov
loop
push
stos
dec
(bad)
sub
fsubr
xlat
pusha
inc
or
mov
inc
add
adc
cli
cmp
or
out
das
xchg
cli
test
gs
push
cmp
sbb
push
retf
add
ja
sub
jmp
jmp
push
test
mov
push
jle
inc
xchg
neg
jmp
dec
in
out
fcom
sbb
jne
fiadd
sub
dec
outs
cmps
xchg
(bad)
mov
xor
outs
fucomip
(bad)
fs
xchg
pop
mov
aam
cmp
stos
lea
xor
cmp
arpl
adc
(bad)
cmp
inc
mov
pop
cmp
mov
sbb
xor
mov
in
dec
sbb
xchg
adc
dec
retf
sub
in
dec
xor
push
shl
pop
fnsave
arpl
stos
dec
mov
rol
pop
mov
mov
pop
sbb
pop
rcr
push
mov
ret
leave
xor
movs
iret
enter
inc
jge
fsubr
xor
cdq
das
stc
mov
jo
and
pop
cmp
mov
pop
cdq
sbb
outs
mov
mov
mov
mov
push
sahf
out
test
popf
mov
dec
xchg
call
pop
repz
xor
cmp
dec
addr16
add
jbe
imul
mov
jmp
test
dec
icebp
stos
pop
loopne
mov
mov
es
es
fsub
cmp
out
inc
sbb
mov
aam
enter
repz
jmp
or
sub
xor
mov
push
leave
iret
pop
push
jnp
(bad)
aaa
or
dec
jp
in
mov
test
adc
inc
add
pop
cmp
test
xor
xor
jle
call
ja
movs
jae
ret
push
dec
push
clc
xchg
mov
fwait
pop
and
pop
cld
cmp
or
mov
xchg
sahf
mov
ins
xor
mov
hlt
lods
inc
sub
inc
and
xchg
mov
or
mov
lods
out
outs
xor
add
cld
or
mov
mov
enter
pop
cli
rcr
retf
into
sbb
xchg
push
jb
ins
dec
(bad)
(bad)
cli
xlat
out
sbb
jmp
mov
add
ss
movs
dec
in
mov
ss
dec
adc
mov
stc
jmp
adc
add
int
out
pop
xchg
es
in
adc
and
push
retf
jp
mov
daa
jb
adc
ffreep
fisub
in
jecxz
out
mov
sbb
cli
dec
mov
test
cmc
aaa
loop
(bad)
inc
aas
jb
jecxz
leave
popa
jb
xchg
xor
mov
dec
jo
cli
pop
xchg
out
sti
pop
mov
icebp
repnz
add
add
enter
xchg
ins
or
ins
jmp
sub
cs
cmps
add
cmp
movs
stc
push
in
and
cmp
movs
ins
mov
scas
and
fidivr
pop
das
dec
xchg
mov
mov
mov
mov
sub
cld
adc
mov
btc
dec
mov
pop
mov
test
sbb
or
pop
cmp
mov
cmp
sbb
dec
pop
in
dec
fs
xor
mov
enter
inc
hlt
leave
push
popf
cmp
data16
lahf
push
xlat
retf
imul
fwait
arpl
and
lods
int3
adc
push
iret
and
out
and
lea
xchg
push
ds
sbb
aaa
int
fdivr
sbb
xchg
dec
sti
or
icebp
sub
jno
sub
pop
pushf
ret
sbb
jecxz
inc
dec
push
mov
mov
loop
sub
rcl
cmp
pop
xchg
out
xchg
test
jae
cmc
int3
lock
push
dec
dec
test
in
fist
sub
sbb
mov
xor
inc
iret
jle
ja
pop
pop
sbb
push
cmp
dec
test
sub
mov
addr16
cmc
vpsubb
idiv
push
inc
aam
dec
(bad)
enter
xchg
fld
mov
daa
push
je
sub
rol
add
icebp
call
in
cdq
inc
mov
jo
imul
rcl
es
or
ins
out
pusha
int
cmps
and
adc
adc
popa
lods
jbe
dec
ss
gs
repz
inc
mov
ins
fwait
jp
(bad)
jecxz
loopne
jmp
sbb
scas
xchg
dec
inc
aam
push
jl
clc
push
cmp
aas
cmp
sub
cmp
fstp
inc
iret
mov
mov
xor
push
sbb
inc
aam
sbb
pop
fs
ror
jno
shr
push
fsubr
aad
sub
hlt
clc
cmc
pop
fs
mov
or
call
push
das
push
mov
(bad)
stc
mov
lods
xchg
mov
mov
inc
imul
sti
data16
sbb
jp
jmp
pop
push
cli
cmp
dec
sub
nop
adc
test
pop
aaa
(bad)
xor
lods
and
push
out
jmp
cwde
pusha
mov
jmp
mov
and
push
scas
jno
cmps
loopne
into
fidiv
loop
rol
movs
cmps
cmp
stos
adc
mov
dec
add
(bad)
je
pop
adc
test
jl
mov
loope
in
stos
cmp
and
pop
stos
adc
sbb
pusha
cmp
push
stc
xchg
jle
movs
xchg
add
cmps
jae
pop
dec
inc
div
lock
test
mov
xchg
xchg
sub
mov
les
dec
das
adc
or
adc
(bad)
jnp
mov
popa
(bad)
xabort
adc
in
sbb
push
ror
ret
inc
jl
nop
push
enter
movs
pop
mov
inc
add
xchg
cwde
cli
dec
imul
mov
or
cmc
pusha
adc
movs
lods
sbb
mov
clc
sbb
pop
(bad)
sub
mov
inc
xor
jge
fstp
jb
sti
iret
out
cmp
dec
add
in
loop
dec
jmp
inc
fcomp
movs
(bad)
std
stos
add
rcr
sub
ins
in
sub
jp
push
mov
test
lea
hlt
jbe
or
in
ret
int3
sbb
add
xlat
mov
in
jg
push
push
sbb
imul
pop
nop
shr
pushf
cmp
jmp
mov
fs
dec
xchg
dec
sub
push
mov
pop
add
xchg
jp
pop
rol
add
xor
mov
sti
dec
icebp
sub
push
push
fisubr
xchg
pop
push
mov
sub
pop
test
(bad)
inc
mov
xchg
repnz
pop
add
dec
dec
inc
pusha
inc
dec
into
test
sub
xchg
movs
stc
xlat
and
mov
popf
mov
pop
dec
call
xchg
and
dec
add
add
js
es
push
adc
fisttp
mov
outs
into
mov
cdq
xchg
lds
addr16
add
xchg
ds
cmp
out
sbb
mov
lods
out
popa
and
xor
sub
xchg
pop
xor
inc
cld
popa
scas
bound
test
xor
push
sbb
adc
into
in
push
fisubr
test
adc
inc
mov
push
fwait
pop
ret
(bad)
imul
jo
leave
sbb
rcl
sbb
dec
pop
and
xor
adc
stc
ret
xor
pop
sbb
jo
xor
fiadd
mul
stos
stos
sti
or
in
inc
mov
out
xor
sub
mov
sti
jnp
lock
outs
enter
sub
xchg
and
pop
lahf
xchg
adc
mov
jnp
push
mov
cmp
and
xor
mov
fwait
inc
add
stos
cwde
dec
in
cmc
push
jmp
inc
adc
lea
repnz
add
cmp
pop
aas
sub
xchg
stc
mov
clc
and
jle
xor
stos
xchg
sub
xor
pusha
sahf
sbb
adc
jl
xor
imul
xlat
mov
pop
rcl
cdq
ja
or
in
mov
xchg
dec
lods
arpl
int3
adc
sub
add
or
inc
rcr
dec
adc
mov
(bad)
push
aaa
sbb
cdq
or
mov
dec
jmp
or
pop
ficomp
stos
shl
iret
std
pop
std
pop
push
xor
mov
mov
icebp
arpl
hlt
jp
dec
jb
cmps
dec
imul
gs
sar
inc
push
add
xor
ins
cmps
jb
pop
pop
scas
sbb
ss
cmps
fucomi
jne
fist
xchg
pop
xchg
jl
mov
push
push
inc
xor
dec
add
int3
jl
sub
out
sti
mov
stos
dec
jecxz
in
bound
sbb
pop
xchg
dec
sub
(bad)
push
mov
jmp
rcr
lods
xchg
or
mov
mov
fisubr
aas
daa
and
or
push
cld
pushf
push
sbb
cdq
lock
jmp
inc
in
lods
inc
in
inc
imul
sbb
dec
mov
addr16
adc
test
ret
clc
or
pop
into
bswap
adc
fwait
(bad)
mov
jg
gs
push
jmp
movs
jle
pop
cmp
pop
pop
das
loope
lods
jmp
mov
dec
cmps
mov
and
in
nop
lods
movs
sbb
repz
mov
pop
and
or
xchg
or
bound
pop
movs
ds
jmp
xlat
xchg
jg
std
popa
ins
cs
push
(bad)
mov
stos
ret
scas
(bad)
cli
cmps
in
bound
and
cmp
mov
cmp
ficom
sbb
retf
popf
mov
pop
mov
jne
mov
in
rol
loopne
xchg
inc
test
out
(bad)
or
mov
or
xchg
shl
xchg
lods
icebp
jnp
adc
leave
jbe
fisttp
jns
jp
sbb
push
jo
jge
mov
pop
jge
out
test
sbb
mov
lahf
popf
jno
rol
test
cli
mov
jae
mov
sub
hlt
push
test
xchg
stos
dec
test
cmp
adc
mov
jecxz
mov
retf
inc
sahf
add
jae
cmp
inc
xchg
jnp
jne
popa
cwde
ret
cli
mov
loope
(bad)
clc
in
jmp
test
dec
loopne
mov
pop
enter
(bad)
mul
mov
fisubr
mov
call
(bad)
das
jmp
adc
jg
sub
mov
shl
cmp
mov
test
mov
test
jl
aam
popa
cld
mov
in
scas
test
sbb
mov
(bad)
sub
(bad)
jmp
sub
rcl
mov
mov
lods
or
mov
out
sub
mov
pop
mov
sbb
sub
mov
or
fs
inc
stos
nop
sahf
sbb
mov
xchg
lods
or
cld
xchg
pop
xchg
adc
aaa
mov
sub
and
lea
cwde
xchg
inc
dec
sub
mov
add
(bad)
push
and
popa
sar
frstor
and
stos
pop
xlat
(bad)
pusha
fs
push
lds
in
adc
adc
arpl
ret
out
jns
pop
fstp
add
stos
fnstenv
push
and
loop
cmp
jns
(bad)
movs
xor
mov
ds
push
push
mov
das
xchg
push
xor
movs
iret
cli
ins
dec
in
addr16
ds
loop
ja
sub
bound
into
cdq
fwait
mov
retf
loopne
inc
dec
xor
iret
(bad)
outs
pop
mov
jmp
shl
(bad)
inc
xor
add
pop
dec
push
fcom
jae
adc
pop
xchg
in
mov
jl
mov
inc
sub
inc
loope
push
sub
sar
movs
out
cs
repnz
mov
adc
sub
(bad)
mov
les
mov
mov
fs
jae
inc
scas
popa
lds
jae
pop
addr16
cmc
jg
mov
xor
dec
fdiv
inc
into
mov
std
cmp
xlat
adc
cmp
repz
inc
fabs
sar
mov
ins
mov
cmps
js
jno
push
xlat
scas
mov
leave
into
(bad)
or
adc
imul
iret
dec
xchg
cmp
adc
mov
xor
dec
and
and
add
mov
inc
jb
cwde
xchg
mov
ret
adc
outs
push
jg
pusha
sbb
cs
mov
jne
aam
cmp
dec
push
lods
and
mov
inc
and
xchg
movs
test
inc
add
mul
enter
fs
bound
call
cmp
sub
sub
in
mov
in
jae
pop
pop
retf
mov
mov
fmul
mov
sbb
jae
pop
cmps
sbb
xor
xchg
inc
xchg
adc
push
jmp
xchg
shr
jecxz
pop
into
jge
cld
push
(bad)
fcomp
fild
jne
enter
mov
(bad)
fmul
and
call
pushf
adc
push
or
add
xchg
ss
jbe
sbb
loope
jmp
pop
lds
inc
pop
and
sub
and
(bad)
or
jo
aam
imul
(bad)
mov
cmps
les
out
es
sub
add
subps
sbb
add
gs
mov
xor
ds
sub
cmps
lea
lock
push
jmp
lock
clc
clc
lods
in
mov
or
nop
mov
xor
and
mov
or
retf
pop
mov
adc
nop
jmp
fsub
inc
cmp
add
je
gs
xor
fistp
cs
add
out
inc
dec
sub
clc
popa
sub
in
call
pop
ret
mov
stc
jecxz
inc
je
and
nop
call
into
popa
jg
xor
sbb
inc
frstor
imul
sbb
and
inc
sbb
jo
lods
es
je
neg
stos
sbb
sahf
or
jl
dec
pop
sub
push
mov
cmp
je
ret
mov
sbb
mov
dec
icebp
repz
inc
sbb
test
std
call
ss
push
(bad)
out
sub
lea
mov
popa
or
popa
inc
add
adc
sub
arpl
cwde
mov
and
jns
or
or
lock
push
sbb
jle
jae
jmp
in
cs
into
outs
test
cmps
aam
call
dec
xlat
sub
and
cmps
push
and
ror
aad
retf
xchg
and
cmp
mov
dec
sub
sub
adc
sbb
fs
dec
mov
popf
xchg
fsubr
cmp
adc
jmp
outs
int3
das
jmp
inc
clc
cli
xlat
jne
aam
push
sbb
add
ja
or
es
jg
ret
aaa
inc
into
in
ins
repz
les
loop
and
cmp
js
pop
js
popa
fidiv
mov
mov
cmp
or
add
das
dec
icebp
(bad)
std
pop
cmc
jb
test
jb
cdq
push
test
pop
das
adc
dec
rcr
or
mov
or
in
test
mov
ror
mov
push
(bad)
jle
dec
ins
mul
(bad)
cmp
inc
xchg
es
sar
mov
lods
or
in
xchg
aaa
inc
jbe
jecxz
mov
and
(bad)
xchg
inc
inc
outs
mov
iret
lea
mov
mov
into
mov
hlt
mov
dec
push
sbb
sahf
ja
ss
add
fnstcw
xchg
inc
shl
ja
adc
jge
and
sbb
retf
xor
mov
or
xlat
xchg
stc
lds
adc
mov
into
jb
imul
int3
sub
fld
push
push
sub
add
scas
popf
inc
cdq
mov
mov
add
push
in
inc
add
rcr
gs
pop
xchg
ds
shr
jle
fadd
add
push
adc
ret
dec
push
call
loope
jo
sub
mov
add
dec
inc
imul
jl
movs
loope
mov
jge
jl
sub
mov
fld
out
into
popf
out
rol
test
imul
pushf
(bad)
and
push
mov
sub
jl
rol
push
mov
popf
pushf
ficom
(bad)
test
cdq
xchg
and
ins
xchg
into
mov
xchg
dec
pop
cmc
iret
jmp
loop
pop
dec
pop
call
retf
push
push
jbe
push
sbb
push
in
das
mov
retf
push
mov
push
push
in
add
and
stos
cmp
xlat
cmps
ret
cmc
pop
aaa
test
repz
and
mov
push
sbb
cmp
(bad)
and
ss
sub
cmp
aaa
rcl
ret
push
pop
cli
rol
(bad)
pop
mov
dec
xchg
sub
inc
push
mov
dec
dec
(bad)
push
rol
(bad)
sub
test
cmps
pop
in
sub
push
mov
push
mov
rol
mov
cmps
sbb
outs
push
jmp
sbb
sub
jmp
cwde
mov
sub
push
mov
and
sub
mov
ins
or
add
sbb
jns
loopne
into
or
iret
lock
pop
inc
mov
out
or
mov
inc
xchg
adc
(bad)
or
hlt
(bad)
test
dec
xchg
add
mov
or
jg
lahf
pop
lods
out
daa
loopne
cld
and
jae
arpl
rcr
mov
push
pop
adc
out
hlt
or
dec
dec
js
or
add
(bad)
(bad)
iret
jle
pop
dec
xor
mov
xlat
mov
in
daa
mov
jle
xchg
inc
mov
and
jecxz
or
push
push
pusha
mov
imul
push
push
aad
lea
leave
sbb
call
push
push
idiv
adc
pop
push
in
and
cmps
inc
fcmove
or
fdivr
mov
push
in
xchg
in
hlt
(bad)
loopne
fist
scas
jmp
stos
test
out
fistp
inc
push
daa
cmps
sub
fsubr
cli
jns
out
in
imul
int
int3
pusha
cmp
loop
pop
jbe
stc
pop
pop
mov
adc
sub
cmps
clc
adc
xchg
sar
fmul
adc
dec
sub
add
test
jae
mov
cmps
mov
test
aam
pop
stos
cmc
xor
fistp
shr
add
sbb
cs
jb
shr
les
(bad)
outs
ret
xchg
mov
loop
inc
call
mov
sub
ss
push
push
(bad)
adc
mov
outs
imul
mov
push
cmp
mov
fiadd
sbb
mov
or
out
xor
cdq
inc
cmp
xchg
js
sbb
xchg
scas
inc
rol
push
lods
and
xor
imul
leave
pop
ins
mov
mov
fisttp
cli
lods
ds
add
(bad)
std
inc
fisttp
sbb
out
lods
(bad)
cmc
das
jne
std
mov
and
pop
dec
arpl
sbb
dec
mov
cmps
push
xchg
lods
pop
xchg
mov
pop
push
push
or
and
les
mov
adc
mov
cmps
xor
retf
hlt
push
push
icebp
sub
mov
jo
mov
jmp
xor
(bad)
or
sti
push
sbb
pop
stos
dec
loop
in
je
xor
adc
jmp
sbb
imul
push
je
shr
push
jecxz
sub
shl
inc
ja
mov
mov
jmp
repz
das
mov
xchg
mov
jge
xchg
das
ja
std
sbb
xchg
mov
add
pop
in
cmps
push
frstor
dec
sbb
xchg
fmul
jmp
inc
adc
cmp
xor
add
imul
or
outs
sar
inc
ds
jp
mov
push
rol
cdq
mov
xchg
mov
adc
loopne
mov
xchg
arpl
les
push
aad
mov
fmulp
ret
jg
retf
mov
or
dec
mov
lea
call
or
mov
cmp
scas
cmps
inc
cmp
sbb
ds
out
cmps
mov
xor
inc
jge
xchg
inc
int3
add
inc
push
jmp
fcom
gs
pushf
jo
popa
test
xchg
mov
mov
sub
mov
stc
cmps
outs
mov
inc
and
pop
push
add
and
fdivr
ror
and
xor
xchg
cs
xor
sbb
addr16
shl
sbb
inc
fcom
push
arpl
jge
cdq
inc
jnp
cmp
fnstenv
addr16
xor
sti
sbb
rcl
push
and
lahf
cmp
popf
push
mov
xor
inc
test
vphaddwd
out
and
mov
sub
push
jo
das
push
fst
add
call
dec
xchg
cmp
dec
xor
add
inc
jp
fdiv
rcr
jno
jo
fld
movs
(bad)
or
add
xchg
popa
fdiv
out
mov
jmp
sbb
hlt
mov
fild
lock
jecxz
aad
out
ror
sbb
mov
jo
xchg
stos
loope
les
dec
enter
jg
jp
jecxz
test
and
shl
fmul
inc
std
jb
cwde
lahf
clc
lock
mov
shl
arpl
loope
fisub
push
pminub
cmps
adc
bound
out
sbb
dec
gs
dec
or
call
jg
inc
or
mov
in
mov
cmc
cmp
in
fsubrp
xlat
leave
repz
cmc
and
out
pop
sbb
pop
push
or
cwde
mov
in
jae
pop
sub
hlt
cmp
aad
lods
cdq
sub
cmp
fwait
repnz
and
pop
ret
in
xor
xor
stos
mov
loopne
mov
mul
mov
addr16
push
mov
out
test
sub
pop
shl
jne
jmp
pop
into
int3
dec
movs
imul
dec
rcl
fnstsw
push
out
shl
shr
mov
mov
test
jmp
mov
jbe
nop
popf
adc
sub
adc
(bad)
leave
daa
dec
mov
jbe
jl
(bad)
movs
mov
mov
std
div
pop
cmp
pop
push
jge
mov
dec
fstp
adc
out
leave
enter
bound
leave
mov
pop
mov
je
ret
push
and
xchg
jne
push
sub
dec
rcr
pop
test
lods
pop
inc
scas
dec
adc
dec
dec
lds
or
ds
jge
pop
cmp
mov
repz
leave
movs
cmp
xor
mov
inc
rcr
ror
add
xor
cmp
ret
xlat
(bad)
shl
test
sbb
mov
inc
cmps
mov
outs
(bad)
dec
add
and
adc
push
and
mov
adc
cli
(bad)
cwde
fstp
leave
in
loope
lahf
xchg
ins
sub
frstor
or
shl
mov
in
inc
mov
xchg
xchg
les
lahf
jnp
xlat
ds
(bad)
icebp
loope
pop
loope
popa
adc
push
repnz
mov
idiv
mov
dec
cld
das
or
pusha
xchg
mov
sar
(bad)
mov
or
xchg
test
mov
lahf
loope
pop
shl
movs
sub
sbb
not
iret
aas
dec
jbe
and
mov
jae
imul
inc
mov
mov
int3
sbb
and
fidiv
push
push
sub
sub
pop
or
fwait
bts
fnstsw
pop
mov
inc
cmp
iret
mov
stos
pushf
aaa
inc
pop
push
push
call
ret
inc
cmp
loop
mov
arpl
xchg
sub
push
xchg
in
cwde
into
jmp
cmp
mov
iret
mov
cmps
idiv
ror
(bad)
in
jmp
lds
nop
ret
clc
ret
sbb
cmp
shr
mov
pop
daa
mov
and
pop
gs
imul
add
je
cmc
jmp
fs
(bad)
cmp
(bad)
mov
xor
enter
or
pop
push
jnp
dec
inc
(bad)
fidiv
scas
push
loope
adc
fwait
mov
cmp
lods
fs
movups
inc
imul
jle
fistp
sub
xor
jl
push
sub
rcr
mov
data16
inc
(bad)
dec
rcl
push
mov
push
fldcw
daa
jg
test
adc
adc
inc
gs
jg
mov
mov
jle
dec
inc
and
pop
cdq
add
in
xchg
mov
push
or
ja
retf
mov
cmp
(bad)
pop
add
sbb
push
xchg
ss
in
mov
mov
mov
mov
cmps
lea
arpl
ret
fild
push
xor
in
clc
in
in
outs
mov
dec
enter
xchg
call
sub
cmps
sahf
call
xor
push
pop
retf
fsub
xchg
sub
jmp
xlat
retf
cmp
mov
push
std
lods
jb
mov
in
std
(bad)
retf
mov
call
xchg
sbb
sahf
scas
xchg
add
and
cmp
jge
and
xor
or
mov
fld
pop
dec
inc
stc
push
or
jae
fs
lods
repnz
aam
cmp
sub
cmp
lds
push
shl
sub
cmp
mov
jbe
mov
clc
xchg
sbb
cmp
jno
in
sbb
and
(bad)
int3
push
jl
test
mov
sub
ds
jp
lahf
adc
ss
cmp
mov
repnz
jo
cmp
jno
mov
mov
and
leave
fdiv
cmp
into
mov
mov
(bad)
imul
jmp
das
pop
inc
push
jns
fiadd
lock
ds
les
or
inc
fst
call
or
test
leave
icebp
cdq
pop
fisub
mov
or
daa
dec
ins
mov
pop
imul
pushf
in
inc
push
jns
dec
mov
fidivr
sahf
pusha
mov
mov
fstp
shl
push
call
push
repz
bound
push
cmc
and
ins
(bad)
sti
pextrw
mov
popf
cwde
xor
fprem1
es
in
clc
jg
movs
adc
stos
mov
xchg
add
or
(bad)
mov
add
pop
jns
cld
and
outs
inc
aas
mov
pop
fild
mov
or
test
pop
out
push
xor
lds
scas
jmp
inc
das
sti
jnp
mov
mov
xchg
popa
out
into
jmp
pushf
test
or
or
sub
imul
rcl
dec
pushf
(bad)
mov
mov
gs
pop
dec
dec
push
and
jl
mov
or
and
stos
and
sub
aaa
xlat
mov
mov
jle
shl
mov
add
mov
mov
sbb
and
push
into
lods
add
sub
lods
cmp
dec
ins
in
mov
test
cmp
lea
mov
push
fdivr
leave
mov
rcr
cs
push
xor
pop
sub
jp
adc
and
inc
push
pop
ds
push
mov
inc
sti
pop
mov
mov
mov
xchg
es
adc
outs
bound
data16
mov
fimul
push
inc
int
rcl
mov
adc
inc
mov
(bad)
imul
xchg
jmp
into
mov
cmp
sub
scas
loope
xchg
into
in
cmps
lods
and
movs
mov
subps
push
cmps
hlt
inc
in
pop
or
test
in
cmps
and
ret
loop
rcr
out
jne
pop
xor
popf
xchg
data16
test
ins
pusha
xor
cli
lahf
xlat
inc
jb
xor
xor
call
pop
cdq
repnz
lea
(bad)
mov
nop
clc
sar
in
popa
sub
adc
jnp
rcr
mov
or
sub
sbb
push
movs
dec
xchg
out
aad
loopne
mov
push
jecxz
jge
(bad)
call
mov
pop
cmps
gs
shl
idiv
or
test
xor
movs
xchg
fstp
ret
or
movs
call
push
aad
das
xchg
inc
xchg
int
retf
mov
fcomi
popa
xor
test
btc
lahf
dec
in
stc
xchg
aaa
sbb
call
rcl
mov
sbb
push
or
mov
test
pop
and
test
inc
outs
mov
stc
es
push
mov
cmp
outs
je
loop
or
shl
adc
pop
cmp
mul
inc
jns
jmp
inc
pop
pusha
je
call
mov
sbb
call
mov
mov
inc
push
sbb
push
in
cmp
and
in
inc
clc
ret
xchg
inc
call
dec
cli
not
push
jno
pop
inc
push
in
mov
retf
fstp
push
das
rcr
bound
es
sbb
sbb
push
adc
jns
xlat
into
inc
push
call
pop
sbb
push
ja
inc
push
test
inc
mov
lds
mov
sahf
movs
adc
mov
pop
shl
dec
scas
fs
push
cmp
mov
daa
inc
cdq
xor
lods
outs
es
mov
ins
jle
mov
mov
dec
aaa
xor
jle
ds
adc
xchg
ret
pop
les
call
(bad)
mov
xchg
jecxz
xor
call
add
faddp
mov
and
sub
in
into
dec
mov
fwait
lods
jp
test
jns
pop
rcr
psrad
push
cmp
retf
xor
dec
xor
js
mov
lahf
ins
jle
dec
inc
sub
sub
mov
lods
or
xchg
adc
shr
outs
loope
ror
add
or
pop
or
mov
(bad)
push
mov
xor
dec
jb
or
xor
fwait
adc
out
xor
push
xchg
ret
push
dec
mov
rcl
retf
imul
add
ret
(bad)
(bad)
and
jle
xchg
sbb
jge
cmc
addr16
(bad)
xchg
das
dec
movs
call
push
mov
push
outs
scas
xchg
sub
fdiv
ret
rol
out
imul
sbb
ds
jle
popa
jmp
in
pushf
cwde
dec
dec
sbb
add
das
into
fwait
sub
jnp
sub
push
es
neg
das
ret
adc
test
mov
je
mov
jb
pop
popa
icebp
mov
and
jp
mov
aad
mov
xor
cmc
lahf
xor
mov
xor
dec
xor
push
and
fnstenv
xchg
push
and
jmp
sub
cmp
cld
test
neg
mov
ja
fist
jg
adc
fldenv
daa
retf
adc
hlt
pop
fwait
das
outs
push
inc
mov
jbe
and
mov
and
dec
into
neg
sub
pop
in
push
rcr
sahf
out
aas
jp
inc
lods
out
and
add
retf
pop
xlat
lock
ss
lods
inc
test
push
mov
std
sti
or
inc
add
or
loope
scas
add
ret
psllw
and
xor
pop
stos
mov
int
inc
and
inc
ret
icebp
popf
xchg
mov
call
xchg
outs
pop
popf
out
mov
pop
mov
(bad)
loopne
movs
jae
stos
out
mov
push
push
std
leave
or
add
imul
pop
and
iret
push
sbb
pop
xchg
je
cmp
mov
cmc
into
mov
and
sub
mov
(bad)
pop
jnp
adc
inc
lds
mov
je
movntps
bound
or
xchg
sub
sti
jg
leave
dec
jbe
dec
test
jns
mov
jmp
rcl
pop
in
sbb
xlat
mov
dec
(bad)
mov
leave
mov
inc
shl
xor
je
sub
mov
(bad)
pop
in
mov
or
cli
adc
sbb
sbb
sbb
mov
(bad)
xchg
aas
(bad)
mov
jmp
repz
and
xchg
adc
mov
cmp
dec
lods
ror
stc
lods
pop
cmp
push
fcmove
sub
mov
adc
std
sbb
or
cmp
shl
cdq
js
pop
movs
add
mov
mov
shl
das
push
test
fiadd
jle
inc
or
adc
push
dec
push
dec
idiv
dec
pop
out
inc
xrelease
jecxz
xchg
sub
outs
ror
mov
leave
sar
add
push
sbb
pop
dec
mov
push
rcr
je
lahf
jnp
jb
pop
xchg
arpl
fsubr
sahf
mov
xrelease
fild
in
popf
fcomp
push
fisubr
and
(bad)
mov
bound
arpl
push
or
push
pusha
into
icebp
xor
shr
and
push
add
mov
cmp
sub
pop
dec
mov
fisub
(bad)
xchg
dec
pop
jnp
push
and
mov
pop
sub
aaa
cdq
xchg
iret
inc
push
xor
sub
jmp
sbb
lahf
es
pusha
and
sbb
ss
lock
xchg
ins
inc
loopne
push
(bad)
ins
jnp
rcl
scas
push
and
dec
push
mov
cmp
sbb
mov
mov
je
push
popf
pop
ficomp
jo
or
int
ret
rol
outs
push
push
arpl
xchg
sti
push
xchg
(bad)
mov
sbb
or
sbb
call
sub
push
mov
adc
dec
or
jl
fcom
pop
push
fistp
stos
xchg
retf
hlt
in
mul
daa
call
mov
mov
dec
pop
push
bound
mov
scas
mov
xchg
cmp
dec
inc
sub
dec
mov
aaa
test
cmp
clc
mov
sbb
pop
jae
arpl
dec
repnz
inc
push
pop
repnz
les
push
cli
sub
jecxz
mul
mov
dec
pop
mov
fstp
cs
mov
push
mov
jg
repnz
pop
stos
(bad)
sar
mov
or
test
xchg
call
dec
nop
jp
xlat
adc
mov
or
or
jae
xchg
add
addr16
test
lahf
pop
jmp
mov
push
cld
inc
xor
add
pop
dec
jmp
or
mov
xor
shl
mov
fdiv
or
cli
cmp
inc
mov
ret
push
or
sar
ficomp
movs
mov
pop
out
daa
inc
jnp
xchg
in
mov
mov
call
cmp
cli
adc
rcr
in
or
stos
inc
fxtract
mov
mov
mov
retf
outs
inc
in
xor
movs
pop
fwait
xchg
adc
push
cdq
(bad)
jmp
sbb
inc
test
xchg
inc
ins
test
jle
mov
xlat
cmp
pop
add
sbb
sub
int3
aaa
or
call
jmp
jp
mov
popa
sbb
sub
xchg
or
sbb
xchg
daa
and
mul
cmc
pushf
mov
(bad)
(bad)
jb
sbb
retf
unpckhps
rcl
inc
sbb
push
lods
and
sar
mov
outs
or
sar
into
lods
pushf
test
lods
and
out
adc
aas
ja
imul
jb
(bad)
jg
lea
jmp
ret
jnp
push
fcompp
in
sub
jecxz
dec
jns
xchg
dec
sub
in
fisttp
mov
out
cs
add
xor
fwait
add
in
mov
cdq
jge
lods
sbb
mov
repz
sar
hlt
shr
shl
pop
mov
jl
fild
add
push
mov
mov
pop
lock
or
ror
mov
(bad)
shl
jmp
ror
test
retf
scas
xor
sbb
stos
rcr
mov
cdq
or
mov
dec
rcl
cmps
adc
jle
gs
xchg
push
fcmovb
xor
fld
mov
add
add
mov
inc
xchg
jecxz
cdq
xlat
and
push
cs
adc
loopne
mov
jl
cld
mov
add
jb
or
aas
dec
sbb
ficomp
shl
ss
push
(bad)
xor
cld
xchg
push
imul
and
mov
std
ds
add
mov
mov
add
lahf
iret
pminsw
or
call
mov
cmp
jmp
das
pop
div
es
in
fisttp
es
mov
xchg
pop
call
xchg
cmps
jmp
adc
hlt
sub
adc
xor
iret
clc
mov
jp
stos
aam
cmp
or
push
pop
cmp
imul
and
pop
jg
shl
and
or
push
cli
je
ds
sbb
and
inc
sbb
pop
shl
dec
push
sbb
mov
test
fs
call
ins
push
test
push
mov
repz
loop
ss
out
dec
addr16
hlt
mov
hlt
fidiv
gs
push
imul
or
jnp
call
add
scas
sbb
xchg
pop
sbb
mov
sti
mov
pop
mov
fwait
adc
inc
mov
mov
jo
cmps
in
add
add
shl
ss
out
adc
push
dec
push
enter
lds
scas
sub
xchg
sbb
jbe
loopne
sbb
or
lahf
ins
push
gs
sub
call
das
outs
test
pop
fiadd
dec
cmp
cmps
lock
adc
sbb
jge
nop
jb
push
add
clc
mov
gs
lahf
lock
mov
shl
outs
(bad)
rol
and
jo
add
pop
cmp
jl
mov
repnz
jle
push
iret
mov
(bad)
xchg
jns
or
fimul
mov
popa
lods
xchg
in
daa
add
fldenv
jmp
xor
or
retf
test
and
fcomp
or
inc
fistp
jp
add
mov
fadd
(bad)
sub
cwde
push
push
mov
retf
sti
jmp
call
add
jb
xchg
push
dec
clc
fadd
sahf
es
xor
data16
dec
mov
jl
jge
xor
push
int
pop
popf
pop
lahf
retf
mov
push
inc
mov
out
data16
inc
jnp
ret
or
imul
inc
daa
inc
sbb
ret
xchg
mov
jge
ss
dec
dec
mov
xor
jnp
popf
movs
mov
in
mov
or
push
mov
arpl
imul
sbb
push
test
add
pop
int3
into
xor
sti
pop
aam
inc
mov
adc
scas
ret
fadd
addr16
loopne
push
pop
cli
ins
(bad)
mov
cmps
push
cmp
xor
sub
and
sub
ins
bound
xor
pop
les
adc
add
(bad)
imul
js
push
and
pop
sbb
add
inc
in
xor
lods
or
cmp
mov
call
cld
out
icebp
pop
cmp
into
xchg
sub
ret
lahf
data16
mov
test
pop
scas
mov
(bad)
mov
fwait
sbb
jp
mov
ret
add
scas
outs
cmps
dec
scas
mov
sub
sbb
push
cli
add
adc
dec
mov
xchg
stos
and
jmp
test
xchg
stc
in
mov
mov
in
dec
das
repnz
push
push
jecxz
cmp
dec
arpl
in
cs
imul
jb
repz
push
or
cmp
jp
aaa
sub
or
cmp
idiv
mov
inc
hlt
push
shr
pop
repz
jmp
call
inc
dec
or
cwde
cmp
add
test
dec
dec
pop
pop
(bad)
pop
dec
arpl
sbb
pop
inc
dec
in
sub
sbb
es
pop
mov
jns
(bad)
enter
lds
xor
loopne
push
sbb
cmp
mov
not
xchg
mov
sbb
daa
dec
inc
icebp
hlt
sar
jae
adc
inc
add
in
shr
push
ret
rcl
fisubr
mov
and
push
stc
out
std
add
mov
inc
jbe
dec
push
xchg
(bad)
mov
adc
dec
mov
test
or
cdq
pop
mov
cmp
mov
popa
mov
inc
test
out
and
mov
xor
mov
mov
cli
push
(bad)
jae
cmps
xchg
pop
idiv
sbb
retf
mov
jecxz
out
loop
sub
or
mov
mov
js
pop
pushf
into
cs
call
jecxz
fisub
cmp
out
or
pusha
shl
sti
push
jae
mov
rcl
nop
or
push
cmps
out
and
or
mov
retf
ja
test
loope
xor
jb
mov
int
stc
sbb
xchg
inc
lods
sbb
std
stos
or
jns
ja
pop
cmps
imul
sub
push
imul
sti
cmps
or
lds
sbb
xchg
ret
outs
imul
mov
in
jbe
xor
inc
push
adc
mov
jmp
in
pop
cmp
pop
loop
mov
cli
vpsubd
push
mov
mov
dec
xchg
cmp
and
ss
mov
call
mov
retf
and
pushf
jne
or
push
scas
inc
mov
mov
mov
jnp
shl
push
mov
mov
xchg
cmp
xchg
mov
(bad)
loop
test
mov
cli
sbb
(bad)
sub
popa
push
push
stc
inc
mov
inc
sti
aas
xor
dec
inc
push
fcomp
cmc
inc
addr16
cmc
add
ficomp
push
cli
mov
pop
(bad)
jecxz
outs
aam
(bad)
sbb
into
outs
mov
xor
dec
mov
pop
sti
fisub
in
cmp
adc
xor
push
pop
mov
outs
mov
stc
add
add
xor
add
jo
in
les
add
sub
mov
mov
cmp
in
mov
push
fwait
(bad)
push
adc
lods
(bad)
cmps
add
adc
mov
mov
cmp
mov
adc
sbb
stos
movs
cmp
lods
ret
scas
push
push
adc
push
sahf
fild
sbb
add
sbb
mov
and
or
ja
push
pusha
push
gs
call
and
xchg
test
bound
xor
je
mov
in
test
sub
fwait
sbb
div
xchg
lds
test
xor
sub
into
lds
push
inc
in
sub
aad
test
xchg
push
jecxz
clc
and
(bad)
mov
or
jne
push
push
aas
adc
xor
jns
imul
add
xchg
mov
icebp
test
mov
int3
icebp
popa
cmp
xor
imul
and
pop
xchg
xor
push
inc
jae
mov
je
jbe
out
arpl
popf
jno
mov
jmp
sub
ds
ror
inc
mov
jecxz
test
outs
push
mov
inc
into
lods
adc
jnp
inc
push
adc
mov
ds
add
fimul
pop
outs
xlat
xchg
ins
mov
pop
ins
cld
mov
xchg
fnstenv
cmp
hlt
xchg
adc
push
jmp
fisub
pop
hlt
je
cli
adc
jbe
sbb
(bad)
push
popf
fcomp
in
sar
pop
movs
outs
loopne
push
or
pusha
jge
rcr
test
shl
(bad)
(bad)
jge
or
out
sub
ret
jmp
sahf
gs
jo
mov
jbe
or
inc
(bad)
rcl
stos
rcl
imul
fisubr
pop
test
fsub
jo
aas
push
in
inc
mov
mov
jecxz
in
mov
bound
sahf
pop
inc
inc
inc
xchg
and
clc
mov
clc
push
mov
inc
jp
xchg
shl
jmp
ds
cmp
out
outs
fbstp
mov
pop
mov
adc
sbb
(bad)
inc
mov
(bad)
clc
sbb
mov
shl
cmp
and
js
jle
pop
xor
cdq
inc
mov
inc
addr16
pop
out
or
in
lods
xor
rcr
repz
shl
ficom
push
mov
jnp
into
xchg
(bad)
data16
lock
stos
mov
outs
loope
mov
sbb
ins
leave
fnstenv
loopne
stos
daa
add
scas
and
mov
ret
dec
sbb
(bad)
jnp
xor
repz
jl
je
and
cmp
jle
fwait
arpl
adc
icebp
gs
mov
add
(bad)
aas
out
cmp
in
sbb
or
mov
jno
adc
push
in
movs
xchg
mov
mov
pop
lods
sbb
sar
scas
xor
sub
cmp
mov
mov
mov
jle
mov
mov
and
push
dec
jge
(bad)
sbb
cmp
mov
and
out
mov
add
mov
cli
sbb
push
xchg
aaa
pop
fwait
imul
and
fnstsw
mov
test
dec
ror
xor
push
popf
adc
jecxz
shl
sub
dec
pop
xchg
daa
jp
aas
jle
add
xchg
sub
jmp
retf
lods
push
hlt
pusha
mov
pop
mov
push
sti
fcmove
inc
jecxz
mov
push
pop
lea
es
sar
cmps
test
mov
outs
cmp
mov
fdiv
popa
adc
sub
xor
xchg
xchg
jnp
in
fwait
mov
movs
xor
sbb
mov
mov
xchg
retf
mov
fcomp
jae
clc
daa
jbe
mov
imul
test
xor
mov
jg
(bad)
in
lods
xlat
into
(bad)
cmc
mov
xor
pop
call
jp
arpl
loope
out
push
call
mov
or
cmps
add
(bad)
cmps
fidivr
inc
in
rcr
add
fild
out
das
and
das
enter
movs
dec
clc
mov
xchg
xlat
xor
xor
pop
out
ror
mov
xor
pop
xchg
xchg
push
jp
mov
push
ins
sbb
nop
loopne
fimul
les
cmp
xor
push
out
mov
fist
mov
mov
inc
jp
cmp
(bad)
mov
data16
xchg
fsubr
stos
outs
push
es
sbb
(bad)
jg
pop
push
sti
inc
sbb
or
sub
inc
ins
neg
push
leave
ins
jg
cmps
mov
adc
cld
test
movs
addr16
push
int3
scas
(bad)
lds
and
(bad)
and
xchg
loop
ss
cld
or
lea
out
or
out
adc
cmp
(bad)
push
and
inc
icebp
jmp
dec
add
popa
(bad)
clc
jmp
mov
js
mov
mov
or
xchg
and
xor
retf
test
adc
movs
call
pop
pop
cli
pop
sbb
push
jae
jno
dec
or
push
cmps
inc
sub
xor
imul
test
mov
retf
jb
sbb
outs
or
sbb
pop
in
xor
popf
inc
loop
imul
sbb
outs
iret
ret
or
movs
shl
(bad)
je
mov
inc
mov
and
pop
and
loope
adc
jle
fnstsw
fwait
ss
jge
fcom
fadd
pop
stos
dec
xchg
nop
(bad)
push
dec
jne
iret
ins
mov
xchg
pop
pop
mov
sub
push
dec
xchg
pop
loope
pop
fsub
push
pop
inc
sbb
inc
mov
xor
mov
into
xchg
xchg
loope
mov
outs
pop
hlt
pusha
pop
jmp
mov
mov
call
push
fxrstor
std
div
push
mov
mov
dec
into
or
jge
mov
or
int3
sub
test
mov
and
xor
jne
lods
int3
test
mov
xchg
or
inc
jne
pop
xor
js
sub
out
push
stos
dec
dec
js
aaa
dec
xor
call
sahf
jno
inc
stc
push
rol
loopne
fwait
fwait
mov
fdivr
loope
lods
xor
test
sbb
out
pusha
(bad)
push
cmp
aas
(bad)
jmp
loope
or
js
mov
fld
inc
jge
add
adc
cmp
dec
add
jnp
movs
dec
int3
jmp
je
ds
mov
pop
or
mov
lods
jns
dec
mov
test
lds
mov
popf
push
mov
xor
faddp
retf
out
shl
xchg
cmp
jp
xchg
(bad)
repnz
shl
mov
xchg
sub
xchg
jl
or
xchg
enter
add
dec
cmps
loop
inc
cmp
in
xor
out
out
mov
push
and
(bad)
adc
inc
jge
leave
jbe
push
nop
or
adc
sbb
in
mov
bound
push
mov
inc
popf
sub
jnp
bound
sbb
dec
div
iret
sbb
push
jle
add
ror
mov
inc
data16
inc
mov
daa
mov
dec
sbb
nop
jo
lods
into
dec
outs
xchg
fistp
xchg
fs
jns
lea
inc
cdq
lock
sysexit
mov
xchg
add
xor
push
mov
mov
cdq
mov
sub
fcomp
mov
push
mov
comiss
sub
push
or
cmp
(bad)
fimul
push
ins
mov
fs
cmp
inc
enter
cmps
sar
cmp
aad
daa
and
jae
(bad)
cwde
xlat
mov
dec
xor
cli
push
movs
jb
in
cmp
add
fld
and
inc
arpl
jnp
repz
ins
lds
out
adc
jmp
xchg
push
adc
push
cmp
imul
je
inc
add
sbb
and
rcr
push
jge
cmp
scas
mov
jp
inc
xor
mov
adc
call
pop
fsubr
cmp
imul
inc
fxam
sub
pop
mov
in
add
rcl
xchg
add
push
stos
push
int3
sub
fldenv
ins
stos
pop
movs
ins
adc
or
mov
imul
lods
push
sbb
not
shl
arpl
jmp
jl
cs
lahf
jmp
not
add
int3
dec
xlat
xchg
cwde
jns
sub
sub
fnsave
outs
bound
fcmovbe
int
std
les
adc
or
push
mov
pop
repnz
dec
cmp
hlt
jg
enter
mov
dec
lods
sar
mov
and
hlt
sbb
dec
xchg
popa
inc
imul
pop
pusha
dec
ror
(bad)
aaa
add
neg
repnz
ins
dec
or
test
and
cs
nop
adc
inc
or
je
(bad)
repz
sti
mov
xchg
and
sbb
repz
mov
add
push
xor
mov
sti
lahf
jg
pop
jns
rcr
test
dec
pop
pop
mov
ret
loope
adc
lods
ds
scas
sub
outs
pop
sub
sbb
xchg
scas
push
mov
push
pushf
sbb
aam
es
(bad)
call
and
jl
and
ins
cmp
jmp
dec
cli
out
(bad)
(bad)
bound
aas
mov
cli
and
jne
mov
push
hlt
aam
leave
xchg
add
cmc
xor
dec
mov
adc
sub
movs
out
pop
push
xchg
mov
call
jl
rol
mov
(bad)
outs
jmp
or
dec
out
xchg
ja
into
fucomp
outs
push
pop
icebp
jg
sti
and
mov
ds
pop
mov
stos
pop
adc
sti
outs
mov
mov
mov
mov
push
fild
or
ror
cmp
adc
mov
outs
or
(bad)
ror
push
ret
fnsave
mov
and
retf
rcr
sbb
adc
aaa
mov
popf
jp
add
(bad)
mov
sbb
lea
or
sbb
cmp
(bad)
ins
inc
(bad)
xchg
shl
dec
repz
cmps
and
movs
xchg
jl
js
daa
mov
loope
div
push
cdq
inc
dec
jae
jp
lods
push
mov
out
xchg
xchg
adc
clc
repz
and
push
adc
cmps
mov
ret
dec
stc
stc
xchg
adc
xor
cmp
loop
vpmaxsw
sar
jmp
inc
es
mov
cmps
mov
add
and
dec
call
lea
rol
mov
call
mov
mov
pop
aad
ficomp
(bad)
jo
test
and
cmp
ja
(bad)
jg
mov
add
shr
xchg
ret
add
pop
xor
mov
retf
jno
fwait
cmps
xor
in
mov
cmp
mov
sub
jnp
retf
test
ins
cli
int
popf
jge
out
cmps
pushf
mov
jg
mov
inc
pop
inc
pop
jg
add
add
pusha
sub
aas
outs
in
jae
push
cld
shl
js
mov
retf
inc
das
xchg
xchg
mov
movs
stc
ins
les
pusha
cs
inc
mov
pop
mov
std
es
pop
test
ins
jns
mov
xor
mov
test
cmps
aad
scas
dec
add
fcomp
retf
mov
xchg
pusha
mov
js
dec
std
adc
jecxz
and
xchg
add
loopne
ins
inc
lock
es
jae
retf
inc
scas
jp
jns
into
mov
and
pop
push
mov
xor
xor
fild
push
repz
cs
sbb
sub
hlt
inc
ja
fild
mov
mov
inc
test
(bad)
out
repz
cmp
sub
dec
cmps
imul
pop
mov
sub
pop
loop
loopne
mov
aad
mov
pop
shl
out
push
sub
pusha
jp
jge
and
or
xchg
mov
mov
sti
mov
in
push
sbb
sub
mov
xchg
std
sbb
in
and
push
push
vpmulhuw
sbb
nop
cmps
lods
pop
add
bound
ins
adc
add
stos
and
into
bound
adc
mov
xor
mov
jp
in
shr
pop
xchg
cmp
scas
pushf
sub
test
push
ret
pusha
dec
ret
gs
mov
ficomp
retf
and
add
test
data16
sub
dec
loope
mov
idiv
loopne
or
das
aad
retf
ds
push
int3
jle
dec
sub
aad
sbb
sbb
or
lds
fwait
(bad)
ds
pop
push
xchg
adc
sbb
mov
dec
in
add
mov
adc
sbb
fucomp
xor
rol
adc
fs
adc
cld
in
inc
rcr
(bad)
mov
js
xor
(bad)
mov
and
fild
mov
sbb
out
ret
rol
in
pusha
pop
jp
xchg
sub
and
dec
sub
arpl
nop
sbb
int3
jbe
lds
call
pop
(bad)
std
pop
xor
rcl
sbb
cli
mov
inc
xor
mov
repz
lock
fiadd
add
test
fs
int
jge
jb
dec
xor
prefetchw
or
adc
hlt
cmp
stos
and
sbb
cs
loopne
ds
dec
xor
aam
(bad)
ds
xor
cwde
cwde
lods
rol
xchg
pusha
ins
imul
xchg
mov
outs
pop
or
icebp
dec
sahf
into
push
push
loopne
retf
test
iret
sti
adc
mov
jl
pop
call
sbb
nop
mov
sbb
jmp
jl
inc
aas
push
(bad)
xor
cmp
aaa
in
ret
mov
mov
fidiv
dec
frstor
xor
cli
out
or
adc
cdq
popf
pop
outs
push
sub
es
xor
(bad)
adc
mov
shr
js
push
ins
jecxz
jmp
jg
loop
sbb
push
push
test
test
in
pop
sub
xchg
push
cld
or
mov
sub
sub
(bad)
jecxz
xlat
xor
outs
add
mov
imul
jp
hlt
pushf
psubq
cld
xchg
sub
int
std
sar
ret
retf
push
or
mov
sti
inc
dec
(bad)
jge
cs
cwde
hlt
mov
xor
push
lods
mov
gs
mov
mov
out
(bad)
pop
inc
cld
cmc
cmp
ss
xor
cs
ds
and
mov
adc
bound
add
sub
xchg
pop
scas
jl
jb
jl
sbb
js
fild
xor
fisub
aas
shl
lahf
mov
mov
dec
push
jg
inc
and
retf
dec
loope
push
dec
(bad)
inc
mov
test
scas
stos
add
aad
outs
sar
(bad)
leave
push
pusha
cwde
cmps
shr
loop
aas
ret
or
rol
inc
scas
data16
mov
std
ins
cmp
ins
mov
out
cdq
mov
lods
(bad)
jne
in
into
cld
adc
push
ins
or
xor
cmps
jo
add
movs
mov
adc
add
xor
mov
mov
stos
dec
fld
popa
sub
dec
test
nop
pushf
leave
enter
sar
and
mov
(bad)
(bad)
jns
adc
jl
test
jl
mov
stc
adc
push
jns
xor
xor
(bad)
sbb
fmulp
shl
xchg
jbe
mov
sbb
adc
and
mov
push
pop
in
dec
hlt
pop
adc
ss
call
pop
pusha
push
cmp
adc
gs
mov
cwde
xor
xchg
pop
cli
mov
pop
mov
retf
(bad)
cmps
mov
test
jbe
xchg
inc
dec
out
jl
add
cmp
movs
fadd
push
xor
add
out
dec
adc
gs
imul
enter
loop
ror
cld
fcom
jecxz
sbb
mov
mov
jp
ret
mov
les
sub
dec
stos
sub
mov
mov
jns
add
jg
push
dec
icebp
(bad)
cs
jmp
jge
mov
or
push
push
(bad)
loopne
cmps
push
dec
mov
imul
(bad)
pop
or
dec
jae
in
dec
sbb
ror
not
mov
je
(bad)
cmp
jns
idiv
add
out
and
inc
cmp
pop
cmps
pushf
xchg
std
rcr
xchg
cmps
dec
push
out
not
int
lea
cmp
mov
(bad)
aam
cmc
ins
mov
lods
mov
xor
sbb
sbb
fcmovnb
mov
leave
movs
mov
inc
test
std
test
icebp
ds
ss
xchg
inc
push
or
adc
push
mov
xor
gs
fild
add
push
xchg
jle
xchg
and
mov
mov
mov
outs
test
jae
xor
sub
push
add
(bad)
(bad)
sbb
inc
fs
ret
xor
lods
jo
mov
mul
push
sbb
retf
ss
cld
sti
sar
ret
mov
ins
push
retf
pop
ins
cmp
es
jne
cs
adc
inc
test
inc
xor
lea
and
mov
sub
adc
mov
dec
cdq
imul
mov
fs
scas
fwait
aaa
and
test
shl
test
sbb
out
hlt
dec
lahf
fcom
jb
push
cmp
push
adc
mov
mov
xchg
imul
jle
pop
ja
sbb
cs
fnsave
jg
mov
dec
xchg
lock
jge
cli
cmp
push
jns
test
in
inc
pusha
pop
cmps
push
inc
cdq
pop
push
jnp
and
loopne
add
out
test
cmp
inc
lds
pop
or
mov
loope
jge
push
repz
call
aad
xor
imul
ds
cli
enter
cmp
pop
pop
inc
scas
sahf
pop
xchg
xor
xor
sbb
fisttp
xor
jmp
enter
sbb
pop
mov
retf
lock
inc
jmp
mov
movs
xor
rol
inc
inc
pop
adc
fwait
arpl
xchg
and
call
push
sbb
pop
mov
mov
mov
pop
pop
and
fcomi
jb
pop
jge
mov
outs
fstp
sub
shl
jecxz
fsubr
cmp
fs
(bad)
mov
ss
sbb
sub
ror
or
retf
mov
ret
aad
xchg
pop
mov
mov
ds
dec
enter
in
retf
mov
jbe
jne
fimul
jns
mov
or
cmc
xor
dec
add
adc
pop
movs
out
mov
outs
xor
add
loopne
addr16
nop
sbb
(bad)
sti
popa
addr16
jbe
pop
(bad)
adc
jg
mov
test
mov
cmp
addr16
loope
lock
pop
test
test
mov
mov
gs
pusha
enter
ret
(bad)
(bad)
(bad)
arpl
arpl
lahf
cld
add
icebp
ja
mov
sub
aam
add
adc
int3
call
jmp
les
add
ret
push
(bad)
clc
pop
sahf
lods
cli
repnz
inc
dec
out
fidivr
ror
inc
enter
jg
call
push
movs
sbb
fs
fwait
ret
iret
and
sbb
ret
cmp
(bad)
adc
and
out
jne
and
and
cmp
adc
jns
outs
adc
push
push
movs
push
stos
mov
repz
pop
cmp
arpl
nop
adc
inc
jl
mov
sbb
xor
dec
mov
ja
xchg
scas
gs
adc
js
loope
add
xchg
sbb
or
jp
cmp
outs
ss
pusha
(bad)
out
loop
cld
pusha
in
mov
xchg
fidiv
xlat
mov
mov
sub
xlat
sbb
xor
cwde
loope
xchg
dec
pop
mov
inc
push
xchg
gs
cs
pushf
(bad)
std
or
out
hlt
jbe
inc
cwde
ja
outs
sti
jle
in
fnstcw
jmp
(bad)
dec
mov
sbb
jg
test
ror
pop
dec
lahf
hlt
mov
pushf
xchg
mov
les
ret
loope
xor
push
fs
xor
jge
pop
push
sub
jp
push
xchg
ins
inc
xor
dec
jg
fldenv
clc
fiadd
outs
ret
xchg
(bad)
enter
pushf
mov
mov
das
and
jae
call
rcr
das
pushf
jge
aaa
fild
cmps
sbb
call
sub
cmp
enter
mov
push
dec
stos
cmp
jmp
mov
loopne
xchg
dec
fistp
xchg
call
inc
jmp
aaa
mov
cmp
aas
ss
push
mov
jo
sar
push
test
iret
mul
xor
movs
(bad)
sbb
outs
stos
stc
test
fsubr
not
pop
inc
into
ret
push
out
mov
shl
fnstsw
and
je
mov
dec
cmps
dec
cs
(bad)
pop
push
inc
inc
not
sub
mov
mov
fsub
mov
adc
test
add
call
addr16
leave
jge
idiv
(bad)
dec
pop
push
stos
inc
lock
sub
int
enter
cmps
jl
adc
lods
retf
ins
xor
test
in
cmp
test
das
or
icebp
repz
mov
xlat
pop
std
xchg
jecxz
pop
mov
mov
jmp
adc
mov
add
add
cmp
xor
stc
pop
sti
test
js
dec
xor
ja
mov
sbb
xchg
fst
mov
mov
xor
dec
or
gs
mov
cdq
(bad)
retf
repnz
jno
gs
mov
mov
inc
mov
stos
and
or
(bad)
xchg
sub
or
jecxz
lahf
adc
sub
and
ds
mov
aaa
call
cmps
pop
dec
inc
sub
push
push
(bad)
adc
or
or
sub
fistp
mov
bound
adc
pop
cmp
popf
(bad)
cld
lds
loopne
jnp
pop
xor
mov
(bad)
jecxz
sub
xchg
xchg
adc
sub
mov
xor
imul
dec
call
inc
unpckhps
or
aas
test
pusha
cmp
mov
sub
inc
mov
enter
adc
cmp
ds
enter
mov
push
and
cmp
aas
sbb
cmc
inc
hlt
les
cmp
dec
jo
test
dec
iret
in
ret
into
mov
call
inc
mov
adc
lods
and
call
bound
mov
retf
scas
fst
jecxz
retf
(bad)
mov
jnp
das
or
imul
movs
cmps
mov
pop
loope
in
scas
aad
jp
test
ja
sub
in
iret
xchg
pop
aas
dec
sbb
in
push
cwde
and
xor
jno
or
fwait
adc
push
push
aaa
(bad)
mov
sbb
call
jne
(bad)
repz
call
and
or
adc
jge
ja
and
rcl
pop
cmp
ret
inc
popa
jge
adc
nop
or
sbb
cli
ins
stos
int
sub
mov
outs
sub
add
or
and
(bad)
jo
idiv
sbb
jmp
pop
dec
xchg
outs
add
pop
add
fldz
adc
retf
lds
(bad)
and
repnz
les
push
enter
jl
dec
sub
mov
pop
and
push
mov
mov
mov
mov
loop
jp
push
cdq
cs
and
cmp
xchg
xlat
popf
sbb
clc
enter
mov
mov
add
ds
pusha
mov
es
pusha
mov
in
pusha
pop
outs
fwait
adc
in
xor
push
or
pop
sub
and
cmp
inc
inc
jle
push
pop
pop
pop
or
and
jmp
in
jg
(bad)
xchg
xchg
mov
inc
outs
sbb
xor
not
push
xchg
push
xchg
pop
popa
in
dec
add
pop
jle
or
mov
retf
sbb
imul
and
aad
mov
sbb
rcr
pop
add
and
push
adc
adc
jge
and
fs
shr
inc
(bad)
pop
mov
jmp
pop
mov
mov
adc
dec
adc
out
out
sub
arpl
sub
sub
xchg
xchg
cmp
mov
dec
test
xchg
and
fwait
push
sub
sub
(bad)
out
es
out
sub
and
fidiv
jbe
xchg
pop
cli
push
ret
popf
loopne
xor
shl
cmp
inc
out
frstor
in
xchg
cmp
(bad)
xchg
mov
pop
test
dec
jnp
jg
stc
add
mov
stos
jbe
adc
pop
ret
jge
fisttp
pop
jg
bound
in
xchg
jge
sub
into
(bad)
stc
les
sar
fst
call
test
jno
dec
push
push
cmp
push
cmc
xor
lods
ss
add
test
ror
add
mov
call
mov
ficomp
or
repz
pop
repz
jo
in
mov
hlt
sbb
stos
pop
out
add
ins
sub
add
retf
cmp
aas
mov
call
in
test
mov
jge
sub
mov
adc
out
mov
les
or
test
adc
mov
dec
xchg
lock
add
mov
nop
mul
inc
xor
push
pop
js
cmps
iret
pop
xchg
pop
pop
hlt
aas
or
add
jno
cwde
add
lds
cmps
jo
ds
dec
cmps
aad
cmp
jbe
jb
add
xchg
jl
push
scas
sbb
addr16
sub
shr
add
(bad)
mov
lea
cwde
in
mov
add
mov
jo
mov
gs
mov
jl
ror
pop
mov
xchg
cs
push
dec
dec
retf
jle
jo
iret
lods
mov
mov
ds
bound
sbb
mov
shr
cmp
mov
fisubr
dec
test
js
xchg
xchg
aas
stos
push
enter
or
leave
or
inc
fwait
lods
mov
icebp
cli
add
inc
in
cmc
xchg
and
sbb
pop
ins
movs
cmp
xor
inc
out
sbb
popa
add
pushf
push
xor
dec
mov
fadd
xchg
cmp
jmp
mov
ds
jns
aaa
sub
add
out
dec
rol
sub
out
lahf
sbb
inc
pushf
cli
pusha
push
pop
shr
dec
jl
mov
mov
cmp
jg
cmp
add
or
test
data16
das
or
int3
or
mov
int
scas
fs
xor
in
mov
jecxz
or
dec
icebp
pusha
pop
iret
push
mov
lahf
push
fwait
add
lea
and
retf
add
aas
pop
addr16
adc
test
ds
movs
pushf
push
call
inc
and
outs
pop
mov
(bad)
frstor
ins
ja
mov
push
aas
sar
xlat
mov
nop
or
add
pop
mov
loopne
push
movs
push
test
jae
mov
aam
mov
jg
mov
add
shr
dec
bound
fcom
jae
cmc
mov
scas
popf
mov
pop
data16
or
or
imul
xor
int
pop
or
mov
outs
add
mov
dec
int
div
retf
jne
lds
or
leave
rcr
sbb
aaa
push
outs
(bad)
add
(bad)
or
out
add
inc
sub
mov
cmp
push
mov
in
mov
call
mov
inc
push
xchg
into
cld
ror
movs
sbb
xchg
push
xchg
mov
dec
push
xchg
mov
(bad)
and
les
mov
es
in
call
sbb
push
dec
movs
jp
lahf
mov
iret
xor
test
(bad)
jo
repz
shr
sub
sub
mov
mov
test
lods
mov
adc
or
inc
cmc
sub
sbb
int
jg
fldenv
aas
test
jmp
dec
lods
xchg
jmp
dec
dec
into
sbb
aam
outs
sahf
sub
lods
push
pop
aas
mov
and
pop
add
movs
ds
mov
mov
cmp
out
cmp
mov
push
bound
push
inc
mov
xor
push
mov
jb
(bad)
adc
pop
or
jb
(bad)
shl
ficomp
test
pushf
mov
scas
jmp
es
popa
xchg
pushf
fsubr
fnsave
cli
dec
das
sbb
cmp
dec
daa
loop
scas
ret
dec
scas
in
or
jbe
pushf
outs
inc
fwait
imul
adc
mov
inc
xchg
pop
loopne
out
push
aad
jp
xchg
loop
stc
adc
fst
scas
dec
rol
cld
cmp
loope
xchg
pop
ror
int
sbb
ficom
jne
call
lods
imul
cmp
not
cmc
pop
(bad)
mov
js
test
pusha
mov
loopne
inc
outs
sbb
loope
pusha
cmp
out
outs
sbb
cdq
cmp
ja
sub
dec
mov
movs
inc
pop
jae
or
clc
sub
in
lea
xchg
not
mov
mov
xor
adc
scas
jle
(bad)
xlat
push
addr16
or
inc
(bad)
retf
xchg
test
xchg
xor
test
ds
or
or
sbb
movs
cli
mov
shl
and
cwde
loope
sub
ret
outs
mov
(bad)
(bad)
xchg
fwait
ror
add
mov
(bad)
in
ret
test
mov
lahf
jnp
setbe
cli
imul
jge
lods
and
adc
test
jne
mov
jb
test
les
mov
cmp
jmp
cmp
mov
sub
leave
(bad)
ror
sbb
pop
dec
pushf
jb
fadd
xor
and
rcl
imul
cmp
ins
mov
or
sub
shr
popf
fsub
push
cmp
mov
ret
out
mov
enter
int
mov
inc
inc
cmps
and
pop
mov
in
aad
sub
sbb
sub
(bad)
jmp
pop
pop
mov
out
fsubr
dec
push
dec
xor
inc
cmps
data16
sbb
call
lds
jmp
ds
bnd
mov
inc
xchg
mov
mov
jnp
cmc
mov
cmc
int3
dec
out
(bad)
stc
push
sbb
rcl
jae
xlat
adc
jecxz
sbb
and
imul
das
mov
jg
jns
addr16
ds
hlt
xchg
mov
fwait
mov
or
je
mov
push
adc
dec
arpl
in
mov
push
pop
dec
sub
imul
mov
or
xor
mov
mov
ins
outs
int3
pusha
mov
pusha
clc
cmps
test
clc
inc
call
pop
in
dec
or
jp
stc
bound
call
dec
push
in
xchg
sbb
sbb
bound
xchg
dec
fist
mov
cwde
push
cs
sub
sbb
retf
ret
lahf
or
push
es
in
mov
shl
dec
popa
sti
jg
push
inc
push
cmp
hlt
or
jle
in
test
scas
jno
gs
ds
inc
imul
xor
mov
lods
xor
cmps
xchg
add
shl
xchg
xchg
iret
dec
retf
out
sub
call
in
retf
repnz
lock
or
arpl
rcr
or
cmp
xchg
mov
cdq
or
mov
iret
int3
add
xchg
jno
hlt
cld
jno
aaa
mov
jns
popa
mov
xor
mov
fistp
add
push
out
cwde
int3
into
enter
xor
xchg
xchg
jae
or
add
imul
cmp
out
lods
int3
movs
sub
sbb
sbb
mov
dec
xchg
js
mov
jmp
sub
adc
pop
add
stc
lea
add
or
push
sbb
out
cmp
pop
loop
cld
fstp
xlat
(bad)
mov
shl
das
loope
mov
out
les
sub
dec
xchg
stc
enter
xchg
mov
in
pop
push
jecxz
iret
mov
enter
sbb
adc
jns
scas
iret
or
mov
mov
mov
mov
dec
in
and
jg
mov
add
inc
sub
fs
pop
mov
movs
sub
out
pop
imul
xchg
or
call
dec
jmp
in
addr16
inc
mov
rcl
mov
popa
xchg
xchg
xchg
mov
add
push
push
cmp
mov
mov
sbb
inc
lock
dec
movs
repnz
push
ds
add
jp
aas
mov
dec
lods
lock
cld
(bad)
movs
shl
mov
add
inc
mov
shl
add
mov
retf
aam
add
loope
mov
inc
in
fstp
and
inc
xor
add
dec
(bad)
out
or
cmp
jbe
in
inc
stos
test
and
pop
mov
sbb
nop
adc
push
fbstp
adc
push
dec
cli
inc
jbe
adc
and
push
inc
ins
push
dec
fcomip
inc
ds
imul
add
jnp
xor
out
mov
or
add
outs
xor
lods
pop
aam
iret
test
xlat
sub
(bad)
fistp
and
xchg
mov
xor
outs
pushf
stos
adc
pop
es
cmp
pop
int
in
sbb
dec
jge
fld
add
inc
push
xchg
inc
rol
and
xor
lahf
mov
mov
popf
sar
sub
int
popa
outs
xor
mov
and
push
inc
lds
sub
fst
sub
in
inc
scas
xchg
jge
movs
fild
repz
adc
mov
jb
add
mov
mov
neg
hlt
int
shr
xchg
(bad)
adc
sub
(bad)
scas
daa
inc
push
imul
test
int
test
gs
sbb
sub
jle
ret
movs
pop
lods
pop
pop
xchg
arpl
xor
cmps
bound
jmp
add
leave
movs
mov
les
lods
loop
nop
adc
add
call
daa
jo
in
or
scas
cdq
enter
xor
fld
jb
dec
in
adc
in
jb
inc
(bad)
enter
js
adc
dec
(bad)
lahf
out
push
push
mov
(bad)
ss
addr16
call
mov
imul
inc
repnz
push
mov
mov
(bad)
hlt
fstp
lods
push
sbb
mov
out
sbb
icebp
mov
or
jns
mov
push
in
inc
push
mov
sbb
call
xor
mov
mov
push
sub
push
xor
inc
cmps
loope
dec
pop
push
or
cmp
sub
pop
xchg
mov
dec
clc
lock
xchg
loop
adc
repnz
mov
test
sbb
jecxz
out
rcr
pop
dec
daa
and
pop
inc
add
mul
jle
rol
rol
push
mov
adc
ss
cmp
adc
ficom
push
sbb
movs
lods
movs
dec
popa
mov
or
ss
mov
arpl
ret
aaa
loop
push
out
mov
fild
pop
retf
mov
leave
int
or
and
mov
sbb
or
mov
xchg
sbb
setno
shl
jns
imul
in
rcl
add
xchg
mov
cmp
rcr
cmps
add
jo
mov
inc
or
int3
(bad)
push
lock
lea
cwde
pop
jno
lds
outs
adc
or
jae
stos
dec
jnp
ins
aam
jecxz
xor
lds
loope
sub
out
jns
jns
mov
or
std
scas
test
and
cmps
rcr
mov
pop
add
mov
add
aam
sub
jbe
dec
push
and
adc
retf
out
arpl
mov
movs
test
pop
mov
sar
jle
and
les
mov
gs
or
dec
inc
ret
pop
xchg
addr16
jg
jge
movs
call
sbb
xlat
lahf
rcl
retf
sbb
data16
arpl
jne
jmp
xchg
adc
call
stc
push
add
loope
push
dec
retf
push
push
inc
xchg
cmp
mov
xchg
inc
in
adc
inc
bound
cmps
fild
std
push
mov
cli
sub
and
push
out
xlat
inc
sbb
je
into
dec
pop
movs
rol
xor
bound
or
mov
ins
xchg
mov
or
fwait
ds
aad
pop
sub
(bad)
out
and
inc
dec
aad
add
cmps
sub
inc
pop
cmp
adc
dec
cmp
xor
add
out
xchg
sbb
aam
jl
pushf
daa
inc
sahf
cmp
push
add
icebp
fcmovb
icebp
or
cld
out
popa
xor
mov
mov
adc
lds
int
mov
test
dec
or
nop
mov
dec
bound
jmp
jnp
xchg
push
repnz
or
popf
lahf
jo
or
jmp
mov
or
sti
sub
sahf
cdq
dec
dec
and
mov
push
lahf
imul
shl
xchg
push
fmul
xchg
lods
or
mov
lock
je
loop
push
lods
adc
or
sub
jbe
xlat
mov
jle
iret
jmp
pop
and
dec
nop
jmp
fwait
sar
int3
retf
rol
jbe
(bad)
add
cmp
push
pop
cmp
push
sti
cmps
dec
pop
mov
xor
jmp
sub
je
(bad)
jle
mov
movs
mov
jg
ret
mov
mov
pushf
sbb
or
popf
mov
(bad)
and
aad
arpl
cmp
dec
out
dec
and
cdq
cmp
shl
hlt
addr16
add
pop
inc
loop
cmp
ss
xchg
movs
aam
popa
pop
cmp
(bad)
nop
and
push
xlat
jmp
shr
adc
xchg
jns
ins
imul
sub
and
or
xchg
fwait
aad
call
aam
imul
xlat
in
cmp
xor
xchg
or
xchg
adc
inc
std
movs
push
mov
adc
sahf
cmp
dec
dec
and
outs
cmp
xor
loop
cmp
jmp
and
jge
(bad)
iret
mul
push
popa
das
cli
xor
das
add
jmp
in
or
mulps
jmp
and
hlt
out
sub
rol
xchg
inc
out
pop
mov
stos
dec
pop
cmp
outs
stos
jmp
test
push
jbe
aad
sbb
or
adc
xor
sbb
sub
aas
fsub
into
sti
loope
xor
test
mov
ss
inc
mov
lahf
call
popa
push
jns
das
arpl
arpl
rcr
loop
xchg
inc
xchg
out
gs
sbb
push
pop
and
mov
loopne
les
adc
sahf
xchg
pusha
mov
mov
popf
sti
sti
sub
sbb
inc
dec
lds
jecxz
ja
pop
out
mov
iret
and
pop
jno
xchg
and
adc
bnd
jns
dec
data16
pusha
in
loop
sub
gs
ror
movs
cwde
mov
xchg
dec
iret
adc
push
or
push
cs
iret
sub
xor
cwde
mov
daa
cmp
xor
add
aaa
mov
jecxz
sbb
aas
pop
xchg
(bad)
xchg
into
push
and
aas
jp
cmp
add
cmp
into
out
das
pop
mov
aad
push
loope
cmps
adc
pop
and
imul
lds
imul
(bad)
push
jo
mov
into
aam
jp
(bad)
xchg
popa
and
xchg
and
mov
addr16
cmp
inc
sti
push
mov
pop
icebp
mov
cmp
lods
data16
xor
and
cwde
xor
retf
lea
out
pop
pop
fstp
dec
and
nop
cdq
xlat
and
jg
or
inc
cmp
jbe
add
push
jge
inc
test
repnz
(bad)
lock
xor
jmp
scas
fisubr
inc
adc
sar
fistp
icebp
xchg
popf
mov
mov
pop
adc
sti
inc
mov
and
jp
or
cmp
dec
sbb
sub
bound
push
cmc
sti
push
cmp
sbb
pop
mov
fs
(bad)
adc
mov
xchg
std
push
mov
sub
test
xor
(bad)
mov
inc
loope
fist
jmp
(bad)
xor
add
repnz
jnp
jae
fmul
mov
imul
sub
dec
and
neg
aaa
cmp
jne
push
aas
jmp
sub
mov
add
sti
es
and
mov
in
jecxz
fisttp
jo
xchg
bound
pusha
lock
imul
mov
std
loope
inc
cwde
addr16
clc
leave
mov
fwait
movs
xchg
cmp
loopne
push
inc
inc
dec
bound
jmp
mov
xor
(bad)
cmp
rcr
pop
push
jl
fist
aaa
jne
sub
mov
xor
push
je
xchg
stc
mov
lods
mov
sub
mov
div
add
mov
sbb
aaa
jg
push
xor
sub
mov
mov
out
xor
cmp
les
loop
scas
xor
sub
push
inc
stos
std
retf
mov
cmp
jp
sar
je
dec
out
sub
(bad)
popa
out
dec
ds
int
movs
dec
lds
in
mov
cmps
hlt
sub
pop
push
xchg
xor
je
pop
nop
cmp
in
jb
minps
pop
icebp
in
lods
jg
rol
outs
add
pop
dec
or
out
fsub
leave
or
repnz
add
or
int3
fwait
in
imul
es
xlat
bound
xlat
jge
dec
cmp
stos
jae
div
or
sbb
mov
bnd
or
jb
sti
mov
sbb
das
out
enter
mov
sbb
dec
sbb
test
xchg
out
ja
mov
xor
clc
xchg
shr
xchg
cli
add
fmul
stc
jnp
js
js
adc
mov
sub
pusha
mov
lea
outs
cli
jle
mov
push
sahf
int3
sbb
aam
pop
scas
lods
movs
retf
push
add
push
xchg
jns
das
adc
cmps
(bad)
or
fcom
cmp
ror
cmp
mov
sahf
out
fldcw
shl
pusha
dec
(bad)
(bad)
push
repz
out
pop
mov
out
outs
fist
ins
call
jmp
mov
cvtpi2ps
scas
out
jg
jno
push
ret
pop
test
adc
jns
xor
pop
lods
test
adc
arpl
xchg
pop
jmp
jnp
pop
cmp
sub
mov
adc
(bad)
mov
ror
push
jp
rol
fwait
xchg
std
mov
mov
clc
iret
sbb
out
mov
mov
jecxz
fs
pop
jno
imul
cli
and
or
push
outs
adc
mov
cwde
inc
imul
sti
fs
test
out
cmps
in
shl
sub
or
fdivr
adc
stc
icebp
xchg
mov
xor
loopne
leave
push
(bad)
dec
pop
xchg
out
add
and
call
fistp
daa
mov
sbb
add
jb
lock
mov
popa
jae
mov
mov
sub
(bad)
xlat
retf
aaa
pop
(bad)
lods
sbb
jge
adc
movs
out
cmp
jne
xchg
ins
je
(bad)
add
mov
push
xor
ins
add
mov
dec
mov
xchg
push
cld
ins
xor
jnp
es
iret
scas
jo
mov
mov
adc
or
(bad)
mov
adc
adc
lea
push
jecxz
sbb
or
push
xor
aad
shr
mov
and
inc
adc
jecxz
sub
mov
push
jns
fisttp
sahf
iret
xor
xor
sub
data16
cmp
ins
cs
es
sub
fst
push
(bad)
fbld
dec
xor
data16
mov
mov
mov
pushf
(bad)
pop
sub
cmp
jb
pop
inc
and
xor
mov
imul
repz
xchg
push
jmp
enter
push
bound
imul
dec
ins
sub
jbe
aaa
vucomiss
rcr
cmp
xchg
stos
jle
push
inc
or
xor
(bad)
mov
xchg
xlat
mov
dec
pop
sub
pop
mov
jmp
pusha
sar
mov
jmp
stos
jecxz
ds
mov
mov
lea
jmp
lods
inc
add
nop
push
out
(bad)
dec
pushf
and
neg
push
xchg
mov
or
imul
sbb
dec
cmp
cmp
mov
repnz
or
mov
add
test
dec
sub
addr16
sub
push
jg
repz
lods
xor
mov
cdq
or
(bad)
xor
sub
add
bound
stos
or
fld
sbb
sub
jbe
ins
mov
rcl
push
cdq
mov
push
popa
data16
sar
and
stos
sub
iret
mov
xchg
sub
mov
ror
hlt
or
int
add
xor
jge
ins
mov
and
pop
out
fwait
ret
ret
call
sbb
ffree
nop
push
dec
adc
inc
dec
loopne
test
ins
shr
inc
(bad)
hlt
sub
lea
ja
lods
and
je
mov
ret
mov
sbb
jbe
scas
jmp
pop
repnz
mov
cmp
ss
ins
pop
inc
aam
(bad)
(bad)
jae
add
and
dec
xor
fadd
shl
add
push
cmc
imul
push
xchg
cld
push
out
cmps
xchg
aam
mov
pop
cmp
lea
and
dec
and
xor
in
inc
mov
pop
or
test
cmp
push
mov
enter
add
mov
jnp
sbb
push
inc
js
inc
add
mov
movs
jb
lods
mov
xlat
in
push
adc
in
stc
push
push
fild
lahf
test
sub
mov
lock
bound
xor
cs
pop
lds
push
push
into
xchg
shl
aas
add
bound
iret
add
xchg
jbe
loop
daa
out
and
dec
jo
movs
(bad)
cmc
jle
dec
push
jno
lea
or
ins
adc
push
jae
sbb
test
xchg
shl
jmp
xor
xchg
add
jno
adc
movs
movs
sub
js
and
pop
pop
hlt
pop
sbb
pcmpeqb
dec
data16
jno
cmc
push
test
jp
jecxz
out
loope
pop
lods
push
jmp
xor
sbb
fwait
mov
ins
mov
int3
and
inc
addr16
and
push
pop
jne
ret
fs
and
jle
outs
out
outs
dec
sub
pop
cmp
scas
jnp
fld
inc
xchg
out
fistp
mov
push
mov
sub
inc
scas
pusha
addr16
movs
pop
int
mov
or
adc
sub
xchg
sahf
sbb
xchg
jb
cmp
dec
fdivr
ds
push
mov
mov
mov
es
push
xor
call
aad
popf
cmp
mov
sbb
aas
(bad)
jge
sbb
rcr
dec
(bad)
cmp
inc
pop
mov
ss
pop
stc
sahf
test
jae
or
js
int
inc
ret
mov
mov
movs
xor
fmul
hlt
add
cs
xchg
pop
cmp
nop
cmc
sti
cmp
pop
pop
xchg
push
dec
mov
mov
in
or
pop
and
push
mov
mov
fwait
adc
aam
add
lock
pop
or
pop
dec
pop
and
cmp
sub
mov
and
shl
stos
fld
js
xchg
loop
inc
xlat
mov
dec
push
cs
adc
xchg
mov
lds
arpl
(bad)
pop
cmp
mov
xlat
or
jmp
inc
bound
adc
jmp
dec
mov
fstp
push
cdq
aam
daa
sbb
inc
xor
outs
mov
fs
dec
call
mov
or
popa
int3
pop
sti
or
xlat
icebp
fidiv
jmp
rol
mov
dec
ror
jecxz
push
or
mov
ds
jmp
pop
pop
call
mov
popa
and
dec
xchg
mov
repnz
(bad)
fsubp
ins
sub
mul
movs
xor
out
jae
stos
adc
push
ins
pop
mov
rcr
ins
fwait
daa
mov
lahf
mov
mov
leave
das
std
cs
pop
dec
imul
inc
jmp
sahf
in
cmps
xor
or
(bad)
call
hlt
push
bound
mov
mov
je
push
lds
out
mov
and
pop
mov
or
mov
pop
sbb
gs
or
shl
jno
xor
sbb
mov
repnz
dec
jmp
int3
and
xchg
mov
in
inc
sbb
fs
or
lahf
mov
lahf
loopne
(bad)
jns
dec
in
jmp
out
sahf
sub
add
cmp
sti
push
(bad)
cmp
sbb
jmp
add
xor
add
xor
pop
leave
and
adc
push
cmp
mov
mov
fidivr
jle
test
push
(bad)
push
jmp
fld
retf
jp
inc
push
int3
mov
lahf
js
pop
call
push
gs
call
lahf
mov
and
xor
mov
push
push
xchg
or
popf
lock
hlt
push
hlt
push
out
jae
mov
ret
cli
ret
xchg
cmp
sbb
ficom
das
mov
sti
mov
mov
int
clc
test
adc
jb
jl
ss
inc
dec
add
loopne
mov
push
(bad)
mulps
ret
popa
daa
loopne
ja
aaa
lahf
pop
lods
fisubr
test
dec
adc
sbb
push
pushf
mov
int
test
js
call
retf
inc
and
jno
mov
dec
ins
loope
and
outs
jle
mov
sub
call
sub
sahf
inc
fidivr
pop
adc
sbb
pop
xor
sub
cwde
jmp
sbb
pop
les
ds
jg
inc
inc
xchg
fadd
xlat
push
add
lods
scas
fidivr
sub
stos
pushf
cmp
fwait
ds
fldcw
or
pop
jo
mov
loope
js
push
in
sbb
sbb
inc
lds
pop
cmp
int3
test
enter
mov
das
pop
lds
retf
mov
push
jae
movs
into
pop
inc
sti
movs
int
nop
add
stos
pusha
(bad)
mov
icebp
add
in
and
(bad)
jecxz
repz
mov
lea
mov
jnp
std
push
shl
cwde
out
out
push
(bad)
jmp
aaa
xor
lock
mov
and
xlat
repnz
call
test
jmp
adc
cld
call
fiadd
shr
div
popf
sub
cs
or
js
pop
pusha
fistp
loope
xor
(bad)
push
sbb
iret
jg
stos
push
fcom
jnp
mov
push
hlt
rol
and
mov
mov
imul
in
lahf
add
adc
add
jne
test
xchg
dec
xor
jns
add
push
fcom
jae
jmp
xchg
sahf
repz
jp
sub
call
call
sar
daa
test
addr16
push
mov
and
ins
xchg
and
adc
es
into
sub
in
(bad)
into
push
gs
jge
ret
jmp
mov
jl
mov
imul
sbb
mov
rcr
jnp
mov
mov
fsub
dec
add
push
or
ins
sahf
(bad)
in
lods
dec
adc
jnp
jno
jp
les
in
adc
xchg
or
pop
push
jnp
ret
outs
(bad)
ficom
in
jp
jmp
in
xchg
xchg
aam
in
pop
or
and
idiv
cwde
and
jbe
sub
fsubr
sub
jp
sbb
aas
push
dec
and
pop
in
mov
jnp
outs
jg
sub
das
xchg
dec
stos
adc
mov
push
push
rcl
outs
push
mov
(bad)
pop
and
sbb
(bad)
pop
mov
test
pop
arpl
loopne
in
shl
or
sbb
neg
mov
pushf
inc
and
outs
fwait
push
cld
pop
add
cmc
xor
fidiv
add
jnp
lahf
fsub
dec
mov
inc
sbb
jecxz
test
loopne
ret
(bad)
lods
push
jb
retf
sbb
cs
enter
xlat
ins
inc
mov
push
and
inc
pushf
and
dec
mov
xchg
mov
mov
cld
retf
out
push
mov
mov
cdq
pop
(bad)
xchg
push
int3
aas
mov
cmp
mov
cmp
xor
pusha
push
outs
jmp
dec
mov
and
dec
mov
xor
mov
xchg
mov
cmc
push
push
dec
add
add
jmp
gs
jg
cs
shl
xchg
sbb
clc
xchg
enter
push
adc
inc
mov
push
lds
mov
fs
and
ja
lahf
ss
jmp
push
aam
push
mov
jecxz
jecxz
cld
(bad)
cmp
xchg
inc
fldenv
enter
outs
jl
cmp
fs
or
mov
cld
stos
das
and
adc
cli
retf
rcr
int
push
imul
aaa
and
clc
adc
bound
push
mov
push
or
cdq
adc
mov
lods
mov
mov
popa
retf
adc
adc
stos
push
test
and
nop
mov
and
(bad)
pushf
dec
add
push
test
bound
sti
mov
and
cmps
add
cmp
sbb
cmp
xor
lea
mov
lods
(bad)
sahf
sbb
or
jl
sbb
push
adc
sbb
dec
adc
inc
nop
repnz
call
int3
jae
pop
rcl
dec
sbb
and
or
or
popa
add
dec
cmc
pop
lock
push
and
jne
jno
or
dec
adc
sbb
repnz
and
pop
pop
jp
out
(bad)
aam
mov
cmc
(bad)
mov
imul
repz
jnp
jbe
stc
sub
pop
mov
dec
paddw
enter
das
and
cmp
fdiv
xlat
jmp
add
add
mov
imul
pop
lea
repz
and
and
stos
data16
mov
cmp
xchg
mov
popa
mov
mov
cli
sub
sbb
jo
movs
lahf
jecxz
mov
xor
movs
adc
dec
call
sub
dec
push
loopne
inc
nop
sub
icebp
mov
mov
push
(bad)
inc
pop
and
pusha
add
hlt
shr
jmp
or
scas
out
or
add
test
(bad)
mov
test
or
push
mov
mov
add
jg
mov
inc
pop
push
sub
and
or
or
jb
shr
inc
lea
mov
outs
pop
and
inc
xchg
lahf
es
fwait
add
ins
iret
outs
in
pop
dec
pop
jae
jge
sub
rcr
call
mov
stc
pushf
aam
adc
mov
into
or
out
in
sbb
jo
and
pop
cwde
fs
jb
fistp
push
nop
or
pop
and
mov
push
mov
daa
fcom
in
cmp
(bad)
fsqrt
xor
cmps
shl
retf
cmp
cld
in
push
pop
adc
xchg
scas
sti
jmp
xchg
xchg
mov
xlat
jmp
cs
cmp
sbb
ret
retf
cld
int3
xchg
adc
cmps
jae
mov
shr
shl
mov
and
mov
push
mov
inc
jbe
cmp
jecxz
xor
and
and
aaa
call
jae
inc
add
aas
jle
mov
test
push
xchg
rcr
daa
adc
(bad)
mov
xchg
jns
cli
cdq
jge
jo
scas
and
sub
ja
pop
push
fidiv
jne
nop
push
cwde
cs
out
xor
pop
pop
mov
push
jge
sbb
das
cmp
push
mov
and
jno
xchg
imul
cmps
pop
test
jmp
push
adc
adc
out
dec
cmp
mov
pcmpeqd
mov
sub
adc
and
stc
push
cmp
dec
out
shr
mov
jne
pop
pop
inc
call
stos
in
stos
jecxz
leave
sar
push
fdivr
push
int
or
lods
jb
sar
lea
sbb
test
arpl
mov
cmc
jmp
js
pushf
sub
cmp
test
dec
icebp
fcomp
clc
mov
stos
rep
and
mov
xor
dec
sbb
push
movs
pop
cmc
es
pop
test
les
pop
mov
cmp
sbb
and
cdq
cs
(bad)
je
ret
mov
call
xchg
sbb
mov
(bad)
pop
xor
stos
mov
ficomp
mov
add
cmc
jne
ja
inc
ror
xlat
loop
lahf
mov
ror
xor
jns
push
rcr
imul
aas
sub
mov
cmp
add
push
push
ficom
add
and
inc
in
jno
fbld
cmp
js
push
in
adc
mov
ins
cmps
mov
or
and
icebp
inc
ss
jp
or
ins
loopne
aaa
rcr
(bad)
xor
cld
xchg
adc
mov
lods
dec
leave
xor
xchg
leave
push
dec
jge
add
mov
popf
dec
xchg
lea
ror
sbb
mov
add
imul
dec
and
clc
repz
or
adc
xchg
hlt
lahf
lock
inc
sub
xrelease
ds
ins
mov
pop
cmp
and
cmp
jp
mov
push
fdivrp
inc
call
pop
push
adc
in
jbe
xor
mov
(bad)
push
sub
adc
xchg
loop
icebp
mov
cmps
pop
mov
xor
icebp
shl
aam
mov
add
push
retf
cdq
or
popa
mov
shr
fadd
inc
iret
mov
ret
cmp
jg
dec
lods
cmp
int
stc
imul
out
adc
inc
dec
cld
xchg
stc
sub
fstp
daa
cli
scas
outs
cmp
jbe
aad
mov
push
loop
out
add
xchg
add
sbb
jmp
nop
and
test
(bad)
jo
push
inc
dec
repz
adc
sbb
adc
sahf
ds
in
sub
scas
jmp
mov
and
or
add
loopne
or
xlat
dec
jmp
mov
inc
sub
bound
jno
lds
arpl
sub
inc
xor
ret
and
cmc
call
push
xchg
mov
aad
sub
and
loop
or
pop
aas
es
sahf
mov
jae
enter
xor
mov
push
scas
imul
in
retf
lea
pop
rcl
popa
les
nop
retf
and
test
test
push
xchg
imul
pop
xchg
lods
cmp
cdq
stos
and
sti
fst
inc
stos
jg
(bad)
out
stc
ins
retf
or
pop
movs
addps
lods
cmp
jecxz
add
(bad)
xchg
sub
sbb
(bad)
jnp
add
fstp
xchg
mov
adc
loope
imul
and
test
dec
xlat
adc
push
xchg
stos
push
dec
xchg
(bad)
aam
jb
mov
push
adc
rcl
cmp
xor
repz
cdq
sub
add
jb
xlat
dec
cld
shl
int
push
bound
cmp
scas
repz
xor
dec
cmp
adc
std
leave
sbb
xlat
repz
jb
int
adc
fsubr
out
inc
(bad)
retf
cmp
shl
mov
dec
lds
pop
push
aaa
jmp
aaa
adc
sbb
or
add
xchg
xor
repnz
or
xor
fnsave
ret
loop
cmps
or
call
aas
dec
sbb
jecxz
(bad)
push
jne
fld
outs
or
push
mov
lds
mov
ja
mov
stos
ret
add
fcom
add
sahf
fsubrp
test
dec
mov
dec
sbb
sbb
push
loope
cmp
repz
cmp
dec
scas
or
add
aad
jae
daa
iret
pop
loop
movs
in
mov
push
retf
dec
dec
pop
test
sub
push
and
xor
stos
daa
fs
nop
mov
scas
sub
push
dec
dec
adc
sahf
mov
adc
call
pop
jno
gs
lock
cld
xlat
sar
jecxz
add
cmps
pusha
movs
lds
jne
cmp
push
sub
retf
retf
mov
(bad)
jo
adc
mov
gs
dec
ins
pushf
jne
test
sti
pop
loop
std
jb
xchg
ficom
pop
ins
stos
test
xor
sahf
and
jmp
sbb
xchg
fs
aam
loope
je
call
es
xor
pop
cmp
push
jno
out
mov
fcomp
out
lahf
pop
dec
xchg
fwait
div
jne
sub
data16
(bad)
in
mov
pop
test
mov
movs
cmp
xchg
ffree
cmc
jns
dec
out
mov
dec
jne
jl
iret
pop
dec
test
pop
sbb
cwde
mov
cld
stos
ret
mov
cld
daa
inc
aas
ficom
pusha
cmp
mov
hlt
push
sub
add
push
dec
xor
mov
imul
sar
push
(bad)
mov
mov
je
jbe
add
aad
push
repz
cld
nop
xlat
inc
arpl
ror
ds
cmp
xlat
or
gs
(bad)
repnz
fistp
fadd
sub
and
push
cwde
in
nop
add
adc
xchg
push
xchg
mov
sbb
call
test
scas
test
dec
ins
retf
aad
inc
stos
xor
fidivr
push
jp
or
loop
pop
adc
int3
test
jle
adc
or
int
cs
push
inc
popa
xor
pop
scas
and
inc
lods
dec
je
push
mov
mov
dec
xor
clc
cmps
dec
inc
mov
test
cmp
pop
jmp
aam
fmul
xlat
stos
or
inc
cmp
or
or
int3
push
fucomp
fimul
call
ret
jb
and
cs
fnstsw
adc
and
push
in
push
pop
cmp
xchg
mov
jae
pop
dec
push
scas
pop
lds
cmp
dec
push
(bad)
out
cmp
pusha
mov
mov
sbb
scas
pop
mov
sbb
add
fdivr
hlt
mov
mov
std
test
jmp
xor
push
dec
pusha
sbb
xor
int
adc
outs
pushf
pop
push
mov
arpl
sbb
mov
cmps
cmp
mov
ins
les
pop
xchg
clc
movs
add
inc
mov
repnz
jl
inc
out
loope
(bad)
jle
mov
sbb
push
xchg
add
loopne
je
push
fld
rcr
ret
mov
aad
cmp
mov
shr
aam
aam
popf
jbe
lahf
dec
pop
or
or
and
sub
sub
fcmovne
adc
pop
pop
outs
pop
clc
pop
(bad)
leave
xchg
push
in
ss
push
push
enter
lods
cmp
push
mov
mov
xchg
jae
add
test
pop
mov
sub
sub
(bad)
mov
out
cmovg
hlt
mov
jmp
int3
enter
retf
dec
imul
repnz
jo
into
and
xchg
dec
pop
cdq
cld
hlt
dec
dec
outs
mov
sbb
pop
lock
aam
jg
fsub
mov
hlt
jecxz
push
repnz
xor
push
in
pop
and
mov
or
(bad)
sti
sti
je
pusha
push
xchg
jp
or
mov
cmp
cmps
xchg
mov
(bad)
iret
xor
mov
shl
jbe
repnz
inc
or
sub
sbb
repz
call
setbe
aam
repz
retf
fwait
xor
push
pop
pusha
aad
cli
mov
je
ret
lods
xchg
icebp
push
adc
test
or
add
xor
scas
ror
push
inc
sbb
mov
enter
ins
mov
ret
mov
mov
or
sti
repnz
shl
movs
or
dec
test
movs
inc
lahf
mov
(bad)
into
(bad)
push
and
daa
xor
stos
push
push
xchg
or
repz
inc
inc
push
ds
xchg
xchg
(bad)
pop
(bad)
mov
or
div
ficomp
and
pop
mov
jle
jmp
mov
rcr
iret
das
push
imul
cmps
call
test
mov
inc
or
pop
jno
pop
inc
cmp
mov
pop
ret
and
mov
ja
jge
add
sub
es
and
or
cld
pop
push
aas
sub
push
fisub
sub
aam
out
cwde
loope
popa
sbb
dec
test
add
clc
imul
fld
xchg
(bad)
out
mov
cmc
call
xchg
loopne
js
pop
test
inc
movs
inc
(bad)
jle
aad
push
push
push
fst
xchg
sti
pop
and
and
ins
js
jno
cld
mov
and
icebp
and
xchg
adc
imul
xlat
add
cwde
popa
inc
loop
mov
adc
shl
pop
inc
push
mov
push
sub
ins
cmps
jmp
mov
mov
jmp
xchg
stos
lds
xchg
inc
mov
ficom
pop
gs
in
(bad)
cmps
xchg
lods
push
int
cmp
repz
dec
ja
fistp
lods
sbb
(bad)
lahf
mov
out
mov
mov
out
or
sbb
inc
push
push
sti
sub
movs
outs
je
xchg
xchg
mov
inc
je
mov
js
stc
mov
stc
lods
dec
es
hlt
add
mov
out
imul
jae
jecxz
mov
cmp
ja
dec
push
cmp
ja
sub
push
or
or
add
push
push
rcr
pop
or
xor
or
xchg
cli
out
mov
xor
pop
add
cmp
pop
mov
sbb
ficom
fistp
jae
push
xchg
(bad)
cmc
mov
or
mov
data16
daa
mov
mul
mov
test
xchg
mov
stc
test
daa
test
cmp
ja
scas
pop
test
xchg
sbb
pushf
loop
cli
leave
cld
enter
add
cmps
sahf
adc
out
loope
xlat
mov
inc
add
jns
cs
mov
push
repnz
mov
cmps
dec
pop
lea
mov
mov
add
mov
(bad)
ret
mov
leave
test
push
cwde
jp
(bad)
mov
push
out
(bad)
loop
jge
mov
inc
out
mov
jne
loopne
mov
cmc
cli
test
xchg
inc
ret
jae
add
jnp
cmp
xchg
xchg
xchg
cmp
ret
test
ins
push
dec
xchg
mov
scas
rol
outs
sbb
xor
mov
call
jp
pop
arpl
icebp
retf
enter
lea
mov
aaa
retf
cmp
ss
fcomp
aas
sar
mov
xchg
add
pop
and
pushf
mov
test
mov
mov
push
std
scas
xor
xchg
rcl
in
or
cmps
mov
je
lahf
sub
mov
test
sbb
mov
cmp
loope
arpl
pop
cli
out
call
iret
sub
pop
mov
and
xor
pop
mov
mov
inc
aad
adc
add
ja
shl
sub
push
(bad)
pop
in
xor
sbb
fcmovnu
test
sbb
in
adc
pop
icebp
hlt
xchg
sub
and
retf
psraw
and
push
sti
(bad)
jmp
adc
iret
stos
push
cli
shl
rol
and
pop
dec
mov
aad
repz
ds
repnz
rcr
into
ins
pop
lods
xchg
shr
sbb
aaa
jo
adc
cmp
xchg
add
movs
daa
add
int3
stos
fld
bound
in
sahf
or
je
jb
cmp
scas
mov
dec
aaa
out
xor
ret
rcr
stc
fwait
mov
fst
jnp
mov
jp
dec
fcomp
push
sbb
and
xchg
cs
int3
scas
cmp
test
jmp
std
add
in
adc
push
mov
pop
xor
xor
add
and
push
fsubr
mov
cmps
jmp
xchg
add
jae
push
and
push
jp
imul
sbb
xchg
cmc
scas
jmp
in
pusha
xchg
test
inc
cmp
jp
pop
or
loope
aas
rcr
xor
ins
adc
sub
or
push
(bad)
sub
jae
mov
mov
xor
push
sub
je
fadd
mov
les
sub
pop
jl
dec
cmp
push
in
pop
add
mov
xor
inc
ret
sbb
aam
pop
mov
xor
push
or
cld
fld
clc
fld
hlt
inc
scas
sbb
fcom
nop
jmp
loop
stc
ret
push
sub
jle
fstp
mov
mov
cmps
nop
dec
sub
mov
fs
hlt
sub
lea
test
mov
fisttp
inc
mov
sbb
xchg
(bad)
shr
sub
addr16
pop
dec
xchg
mov
adc
stc
mov
call
cmc
and
stos
sti
xor
and
pop
and
xor
xor
jg
cdq
pop
call
pop
repz
movs
or
(bad)
movs
push
mov
ret
mov
cld
jnp
loop
cmc
pop
lea
mov
xchg
and
int
retf
push
jb
mov
cmp
sub
not
and
cmp
adc
push
repz
js
retf
push
popa
js
ins
iret
mov
xor
xchg
(bad)
sbb
sub
mov
xor
lock
mov
jmp
cld
movs
cmp
xor
mov
jl
jnp
jne
jb
popf
fnsave
mov
js
sbb
aam
cmp
sub
or
inc
sub
push
outs
add
pop
mov
lods
mov
(bad)
movs
or
test
push
mov
add
add
xchg
adc
xchg
dec
sub
jb
scas
add
lea
xor
inc
test
jo
pop
mov
outs
ss
xor
shl
push
aaa
inc
fsubr
iret
mov
mov
hlt
daa
jle
adc
mov
xchg
scas
jl
movs
cmp
(bad)
cli
daa
imul
jno
and
jmp
into
inc
test
and
sbb
sub
mov
inc
(bad)
fistp
frstor
imul
add
(bad)
je
jp
jns
pop
js
dec
lods
lods
lods
(bad)
mov
movs
inc
repnz
cmp
xchg
jne
xchg
sti
inc
mov
shl
sub
data16
in
icebp
test
cmp
fs
cmc
mov
cmp
ficomp
or
cmp
jb
int3
aas
retf
inc
mov
imul
mov
mov
bound
sbb
nop
jmp
jno
mov
fistp
inc
inc
sbb
jno
push
fild
int
call
(bad)
in
std
mov
fs
ins
call
pusha
aad
cmp
sbb
push
mov
sbb
ret
lods
inc
sbb
out
repz
pop
test
les
mov
int
xor
fisubr
push
sub
xchg
and
pop
movs
mov
and
out
stos
lods
add
add
push
(bad)
xlat
pushf
scas
out
jne
jp
ins
mov
push
cmps
adc
fld
adc
std
mov
cwde
imul
mov
cs
call
xor
sub
cld
data16
jg
int3
xor
movs
dec
or
es
out
aas
int3
test
sbb
cmp
mov
pop
inc
adc
(bad)
rcr
xchg
cmc
or
add
mov
test
ffreep
es
and
sub
mov
xchg
xor
movs
mov
mov
add
outs
enter
push
cmp
leave
in
sti
test
iret
aas
jnp
data16
jp
idiv
or
push
stos
or
dec
dec
ins
inc
sub
mov
jnp
cmp
mov
push
xchg
adc
push
out
imul
cmps
mov
cmps
jae
xor
sub
adc
hlt
lock
jb
fistp
mov
pop
xlat
pop
fld
mov
out
jg
push
jmp
jb
mov
outs
xchg
sub
push
pop
pop
hlt
mov
inc
xchg
xor
fisttp
or
shr
lods
pop
xor
dec
enter
xchg
mov
sub
and
inc
ins
pushf
ror
ret
mov
push
out
and
addr16
cmp
add
movs
adc
dec
movs
les
pop
inc
shl
neg
out
jns
add
and
adc
and
pop
xchg
ret
push
pop
pop
sbb
jo
xor
int3
mov
icebp
into
cmp
xor
mov
push
mov
mov
add
mul
repnz
addr16
icebp
xchg
cdq
mov
push
repz
repnz
add
imul
ins
iret
cmp
add
lock
shl
sub
pusha
clc
mov
mov
sub
push
mov
inc
mov
je
fsubp
xchg
cmp
cmp
mov
dec
mov
sub
push
mov
imul
or
jmp
(bad)
pop
mov
arpl
jns
test
hlt
shr
xchg
es
outs
add
pop
sbb
add
fcmovne
jbe
mov
and
cdq
mov
cmp
loope
mov
mov
les
sub
je
mov
and
jae
and
dec
and
cmps
in
call
pop
adc
(bad)
fimul
dec
(bad)
mov
mov
lock
es
mov
sub
(bad)
sub
xor
and
pushf
push
mov
lahf
cmps
in
pop
aaa
in
ins
or
(bad)
mov
mov
sbb
adc
shl
sub
das
in
scas
add
xchg
jmp
ret
in
sbb
push
push
jle
add
add
mov
or
inc
jl
idiv
pop
mov
add
xchg
push
pop
or
dec
int3
mov
es
adc
push
ja
sbb
xchg
mov
ins
sub
push
out
push
addr16
jne
mov
and
mov
push
inc
fucomp
xor
xlat
and
add
cwde
cmp
mov
sub
imul
(bad)
pusha
lods
leave
mov
lock
sbb
push
ja
sar
cmp
bnd
cmp
jmp
fisttp
dec
shl
loope
aam
inc
mov
sub
mov
int3
push
pop
jle
aas
mov
ficom
push
test
jmp
xchg
lods
pop
pop
adc
push
xchg
xor
je
imul
inc
popf
sub
shl
ins
popf
shl
es
mov
and
(bad)
xor
ins
imul
push
ss
push
sbb
xor
xchg
cmc
jo
les
outs
pop
and
sar
and
stos
mov
adc
pushf
std
cmp
fst
dec
or
daa
jbe
adc
int
sub
aas
jg
pop
retf
in
mov
(bad)
out
ins
mov
(bad)
pop
int
lds
sbb
dec
out
pusha
icebp
icebp
dec
es
push
std
mov
mov
lea
cmp
test
or
sbb
lods
or
push
leave
pop
sbb
sub
and
icebp
pop
test
pop
les
fsub
dec
mov
dec
(bad)
fist
into
into
ror
ins
xchg
xchg
cmp
popf
fld
sar
pop
stc
mov
push
cmp
and
jbe
neg
dec
cdq
lods
jns
jne
lods
scas
(bad)
sar
mov
jg
inc
push
jne
enter
jle
inc
push
mov
add
jge
repnz
adc
shr
(bad)
xchg
std
test
xor
mov
fwait
mov
or
(bad)
(bad)
in
and
sub
dec
mov
test
loope
push
mov
mov
arpl
aaa
fiadd
js
push
call
iret
pop
lea
sbb
in
dec
sub
pop
cmp
jmp
cmps
jmp
mov
sar
jno
inc
dec
push
stos
cs
xchg
jle
inc
shl
mov
movs
jg
or
fcmovnbe
dec
stos
je
repz
movs
mov
push
add
adc
ret
out
jle
mov
clc
out
cdq
sbb
in
sbb
cmp
aad
pop
dec
iret
push
mov
imul
mov
pop
jl
inc
aas
stc
stos
push
mov
repz
push
daa
or
(bad)
cmp
movs
jge
add
xchg
popf
inc
frstor
mov
pop
and
paddq
mov
ins
mov
add
(bad)
push
sti
mov
(bad)
cmp
loope
add
arpl
test
sbb
xchg
ins
xchg
jno
pop
dec
pop
adc
lods
and
cli
(bad)
not
(bad)
mov
mov
xchg
test
mov
je
inc
and
(bad)
mov
pop
imul
nop
(bad)
fdivrp
ins
ret
and
add
ds
pop
sub
push
xchg
jbe
daa
stos
out
sahf
inc
loop
sbb
xor
xchg
or
dec
xor
loopne
les
inc
adc
retf
repnz
inc
xchg
(bad)
mov
cld
cli
push
cli
dec
aam
lods
popa
add
xlat
int
dec
retf
sbb
retf
gs
push
xchg
push
xlat
mov
scas
test
(bad)
ja
retf
push
sbb
aas
jmp
lock
hlt
jb
push
and
adc
inc
into
fwait
sar
xor
sbb
pop
sbb
jb
test
jns
jl
xchg
mov
add
adc
mov
mov
xchg
mov
es
aaa
div
sub
out
xor
ret
scas
lock
int3
vmulsd
mov
shl
pop
aad
je
jg
not
clc
ds
xchg
in
icebp
push
sub
inc
retf
mov
popa
stos
stos
cmp
out
jb
inc
sar
fstp
test
repz
cmc
push
and
pop
cmps
cmps
xchg
call
xchg
xor
out
frstor
pop
aas
in
adc
xchg
jbe
push
push
in
gs
cmps
inc
je
sbb
and
stc
pushf
cmc
in
push
xchg
mov
sahf
lea
sbb
push
pusha
xchg
push
add
stc
jmp
popf
fadd
mov
out
out
push
pop
outs
popa
jb
jg
dec
and
cmc
xchg
(bad)
xchg
pop
sbb
push
jge
push
retf
mov
fwait
dec
lds
imul
jl
mov
mov
iret
xor
add
jo
cmp
pop
out
js
pushf
mov
fidivr
shl
inc
les
ror
stos
cmp
cli
jae
stc
pop
jmpw
mov
jb
or
imul
(bad)
out
mov
push
push
dec
xor
popf
movs
ins
push
int3
pop
loope
pop
retf
xor
adc
jo
sar
xor
pushf
adc
iret
clc
int
inc
jp
leave
xchg
xchg
xchg
je
(bad)
gs
sbb
dec
sub
lahf
cmp
call
sahf
jecxz
mov
cmp
retf
inc
or
add
push
dec
mov
ins
dec
or
sbb
repz
cmp
pushf
adc
mov
inc
mov
dec
in
mov
inc
imul
test
mov
out
hlt
sbb
fcom
repnz
sub
fucomip
imul
rcr
fidivr
out
cmp
adc
gs
mov
jg
sub
retf
dec
fwait
lahf
sub
or
or
push
cmp
sbb
cmp
aam
(bad)
test
push
inc
push
mov
adc
and
mov
cmp
add
sti
cmps
mov
les
addr16
stos
sbb
inc
sub
fs
out
pop
jl
leave
mov
shl
retf
xchg
imul
(bad)
out
ds
in
pop
sti
pop
or
fcomp
mov
dec
push
adc
pusha
shr
call
rcl
(bad)
aad
push
mov
fcom
test
in
inc
packsswb
inc
sub
aas
cmp
hlt
bound
maskmovq
div
sbb
push
into
cs
mov
clc
aam
ss
call
adc
push
and
mov
pop
call
sbb
mov
outs
aaa
fsubr
pop
ret
clc
jmp
(bad)
sti
pop
add
mov
xlat
aas
xor
jnp
cwde
ss
(bad)
(bad)
dec
fiadd
loop
dec
scas
cmp
push
jae
addr16
mov
add
cmps
(bad)
outs
mov
hlt
mov
mov
shr
xchg
addr16
add
inc
adc
xor
xchg
jae
add
lahf
sbb
outs
xor
pop
mov
sahf
stc
dec
not
mov
(bad)
pop
data16
int3
jmp
jecxz
dec
fst
inc
jno
pop
sbb
cmp
dec
es
sahf
ror
repz
rol
xor
jge
int
jmp
hlt
sbb
repnz
pop
fmulp
inc
pop
mov
(bad)
xchg
fcmovnu
std
(bad)
pop
mov
jno
push
and
pusha
sbb
mov
push
shrd
sub
daa
xchg
fdivp
out
push
cmp
mov
popa
adc
arpl
adc
outs
and
aad
mov
sbb
jecxz
test
out
out
mov
cdq
inc
or
push
jmp
dec
dec
out
pushf
push
cmp
int3
jnp
shl
rcr
call
cld
hlt
call
not
pop
push
and
mov
aad
add
xor
mov
pop
lock
cmps
fsub
mov
(bad)
mov
push
mul
call
mov
test
div
mov
fbld
cs
aaa
pusha
add
jle
in
mov
cmp
in
(bad)
xchg
sub
(bad)
push
mul
in
jb
scas
inc
loopne
mov
cld
push
inc
imul
adc
push
cmps
ficomp
ins
mov
cwde
iret
dec
cmp
cmp
add
ins
mov
nop
aas
jnp
mov
ins
jo
xor
pop
xchg
xlat
aam
stos
push
pop
jnp
ins
push
imul
adc
imul
jp
in
xchg
or
std
stos
retf
xor
mov
push
mov
sbb
fucomi
dec
mov
sbb
push
inc
pop
cmps
mov
or
jo
or
inc
out
cmp
cmp
outs
loop
jecxz
aaa
pop
movs
jle
pop
ss
pop
or
push
stos
push
jmp
je
push
push
xor
jl
dec
mov
cli
fldenv
cdq
ins
sbb
xor
inc
adc
pop
shr
dec
dec
fidivr
and
xor
xchg
cmp
xor
push
pop
sub
mov
xchg
cmp
(bad)
push
lahf
jae
das
lahf
scas
daa
fcmovnu
cmps
push
sub
sub
lahf
inc
out
clc
inc
loop
cmp
adc
ins
int
adc
cmp
inc
xchg
sub
pop
jno
mov
jbe
pop
and
aam
popf
out
neg
adc
pusha
(bad)
cmp
add
inc
dec
dec
popa
jl
repnz
adc
or
inc
imul
pop
sar
sbb
aam
mov
xor
rol
mov
jmp
or
icebp
push
imul
sub
pop
dec
sar
xor
mov
mov
mov
das
pop
xchg
retf
jmp
xchg
and
jge
xchg
sbb
fwait
pop
xor
test
dec
ret
xor
test
mov
sar
adc
(bad)
sbb
jge
adc
scas
mov
dec
call
gs
jge
popa
lods
xchg
jg
call
pop
in
ficomp
cwde
ficomp
nop
ss
sub
retf
popf
pusha
cs
pop
dec
sahf
test
gs
es
xchg
push
jbe
xor
sub
xchg
inc
mov
add
and
imul
jno
call
inc
inc
(bad)
or
and
scas
mov
mov
xchg
repz
sbb
adc
mov
and
daa
into
fcomi
movs
sbb
call
xchg
fdivr
adc
jns
movs
xchg
mov
(bad)
mov
jl
(bad)
sub
jp
mov
iret
out
shl
mov
mov
lods
(bad)
cld
xor
ja
cdq
mov
fisubr
and
cmps
mov
mov
ins
hlt
scas
iret
and
push
mov
lods
push
xor
sahf
mov
jns
clc
push
mov
mov
cmps
inc
push
adc
pop
adc
retf
call
sub
mov
fstp
push
pop
adc
outs
icebp
inc
ja
dec
cld
sbb
xchg
mov
lods
mov
call
loopne
outs
retf
jmp
iret
mov
shl
ins
mov
xor
aaa
ds
adc
or
jmp
xor
scas
popf
inc
out
sbb
imul
push
and
icebp
pop
pop
(bad)
in
test
test
xchg
cmp
xor
(bad)
(bad)
pop
jno
jb
mov
and
bound
inc
and
cmp
cmp
lea
push
push
adc
dec
dec
dec
dec
pop
mov
aaa
mov
popa
mov
jge
sub
cdq
into
gs
pop
adc
daa
jnp
cmp
loopne
adc
std
sahf
icebp
(bad)
repnz
jbe
mov
inc
fcomp
mov
mov
jae
push
pop
nop
pop
les
enter
mov
mov
jmp
stc
in
sbb
or
mov
jns
mov
and
outs
ds
daa
dec
ins
inc
jmp
jne
retf
loop
es
jecxz
sub
adc
out
leave
mov
outs
mov
jmp
mov
aaa
mov
leave
lods
out
aam
lods
nop
lock
cmp
push
ret
dec
mov
out
js
aaa
add
(bad)
fcomi
dec
pop
xor
retf
sahf
shl
mov
scas
jb
mov
cmc
loopne
test
inc
mov
inc
push
in
enter
daa
int3
std
sbb
xchg
mov
cmp
mov
(bad)
leave
adc
and
cmp
cmp
mov
inc
or
pop
and
outs
nop
ins
ja
dec
out
ret
jp
adc
push
pusha
test
shl
inc
or
cmp
mov
bound
int3
push
cmp
mov
loop
fsubr
ficomp
cli
add
stc
xchg
daa
cmps
cld
setns
fisttp
add
mov
mov
mov
mov
and
mov
into
call
adc
in
push
mov
leave
mov
and
pop
inc
push
xchg
ds
or
jae
ss
pop
pop
cwde
cs
sti
mov
mov
pop
pop
popf
loope
pop
and
jo
iret
push
push
ror
std
xor
cmps
in
movs
mov
leave
push
cmp
mov
clc
mov
(bad)
fcmovu
adc
lods
neg
xor
mov
std
dec
adc
push
mov
dec
xor
push
or
jge
lock
fist
adc
test
jmp
inc
fdivp
or
jae
mov
in
xchg
pusha
jg
pop
xor
dec
in
scas
pop
mov
sbb
and
rcl
stos
dec
pop
dec
xchg
mov
ja
mov
out
lea
test
in
ffree
(bad)
adc
(bad)
push
mov
push
pushf
sbb
pop
fisubr
fwait
data16
mov
pop
aam
shl
loopne
pop
fild
iret
adc
mov
pop
dec
inc
dec
fst
or
fwait
pushf
psubb
mov
dec
mov
cmc
je
dec
cmp
pop
in
pop
(bad)
mov
(bad)
jecxz
sbb
push
push
in
mov
mov
cwde
in
or
clc
js
call
cmps
cmps
mov
sbb
cdq
mov
retf
sbb
inc
lods
push
jne
mov
mov
jecxz
es
enter
xor
jo
jno
mov
xor
in
inc
dec
cs
adc
jecxz
or
pop
jae
add
dec
out
cmp
xor
cmp
not
lods
ret
out
in
or
into
ret
inc
sbb
or
aam
push
rcl
adc
push
int
loopne
jp
pop
sub
scas
jge
xor
pop
das
cwde
mov
mov
add
aam
ret
jp
dec
cmps
fmul
xor
pop
mov
mov
pop
adc
jae
pop
sbb
lods
sbb
arpl
call
jne
pushf
cmc
jge
dec
dec
mov
pop
(bad)
loopne
scas
lods
xchg
pop
xchg
ins
or
jle
lods
inc
repnz
mov
sti
adc
das
mov
push
imul
pop
scas
jnp
lock
(bad)
jae
push
repz
lods
mov
pop
mul
inc
outs
fdiv
cld
inc
jo
jl
xor
(bad)
aad
ja
inc
dec
cdq
pop
int3
xchg
sbb
(bad)
cli
dec
popf
adc
fsubp
pop
adc
daa
inc
push
sub
pop
cmc
fidiv
jge
or
lock
jnp
scas
adc
add
fsub
cmp
xchg
ret
mov
sbb
std
loope
dec
ret
add
call
pop
or
popa
arpl
adc
enter
hlt
lahf
retf
mov
push
(bad)
retf
pop
les
xchg
mov
jg
(bad)
mov
test
lahf
loopne
(bad)
call
fnstcw
arpl
xchg
movs
adc
ret
xchg
mov
icebp
les
dec
mov
jmp
mov
shl
inc
push
test
cmp
sahf
pop
mov
scas
add
push
dec
jmp
sub
mov
push
imul
push
push
push
cmp
(bad)
icebp
push
xchg
imul
xor
dec
mov
jno
or
shl
push
jb
call
fld
sti
xchg
pop
leave
ins
mov
mov
fimul
xchg
fxch
jl
push
fs
pop
ja
sbb
repnz
mov
fld
scas
stc
in
mov
jns
mov
adc
adc
stos
fwait
jne
movs
adc
popa
mov
cmps
cmp
push
cmp
and
addr16
jns
xchg
xchg
into
(bad)
xlat
in
rol
repnz
inc
imul
mov
lds
sub
push
add
cmp
movs
call
jg
mov
mov
ret
iret
call
mov
and
cmps
loopne
clc
xchg
push
scas
dec
xchg
cmp
loopne
xchg
add
push
dec
inc
xchg
push
and
lods
data16
cmps
push
xchg
rol
push
and
cs
or
fwait
pop
or
and
ins
jno
cdq
push
or
mov
mov
dec
pop
ret
out
cwde
adc
mov
loopne
jp
lods
xchg
aam
jbe
xchg
jb
mov
inc
pop
fcmovu
adc
mov
mov
cmp
xor
sbb
aam
ror
sub
sar
and
push
cwde
dec
std
xchg
mov
push
lahf
ror
push
push
push
in
cmp
mov
in
aad
outs
out
punpcklbw
or
outs
test
add
mov
cmp
jb
inc
push
in
shl
xchg
or
popa
cs
mov
ret
movs
mov
ficom
or
mov
jns
mov
mov
jl
out
push
inc
adc
repz
push
mov
inc
jmp
daa
cs
dec
mov
test
retf
mov
xchg
push
adc
cmc
out
xor
nop
in
xchg
nop
cli
jl
add
cdq
ror
dec
call
push
mov
pop
out
call
invd
ds
and
push
je
sahf
lods
xor
push
push
dec
mov
fimul
mov
rol
mov
add
cmp
ss
fxsave
xchg
out
into
add
movs
cmp
enter
cmp
jge
add
call
jg
(bad)
mov
ja
adc
adc
mov
dec
nop
or
mov
jle
out
test
fwait
ins
retf
pushf
inc
mov
stos
mov
arpl
push
add
ja
inc
xchg
pop
pop
out
inc
mov
adc
sar
and
cmps
fild
gs
xchg
push
xchg
jmp
jl
mov
xchg
imul
popa
stc
ja
sbb
sar
iret
ins
dec
adc
movs
push
ja
ret
mov
imul
retf
sbb
setb
sbb
retf
sub
test
ds
aam
mov
sbb
xchg
cmp
repz
adc
imul
pop
imul
pushf
jecxz
pxor
sub
mov
ds
sbb
mov
jmp
test
xor
mov
adc
mov
lds
dec
cmp
outs
jbe
mov
mov
mul
mov
pop
inc
push
push
inc
rcr
out
xor
rcl
pusha
dec
lea
mov
mov
cld
mov
mov
sahf
sub
cmc
rcr
es
call
inc
mov
ror
call
scas
push
and
add
adc
inc
adc
sub
aam
js
je
push
daa
jmp
(bad)
and
movs
xor
inc
add
sub
mov
in
rol
jg
sbb
xchg
call
fadd
sbb
in
or
mov
dec
sub
mov
mov
or
mov
sub
jo
cld
cmps
hlt
push
and
xchg
pop
push
cdq
add
and
mov
jae
comiss
and
push
mov
sbb
jo
punpckhdq
cli
mov
push
mov
or
loopne
pop
dec
inc
jnp
mov
nop
mov
fild
jmp
mov
loope
push
aaa
pop
jle
pusha
xchg
pop
pop
jmp
loopne
mov
shl
mov
outs
pop
leave
pop
call
and
xor
scas
inc
inc
mov
push
sub
cmps
fadd
mov
movs
retw
fidivr
push
pusha
mov
aam
aaa
sbb
jecxz
aaa
or
sbb
nop
sub
addr16
pop
hlt
mov
mov
sbb
ja
pop
push
loope
ret
adc
cld
and
std
ins
outs
scas
jnp
jg
dec
ret
pop
xchg
jge
test
xor
test
inc
call
(bad)
ret
inc
out
push
xchg
aaa
rcl
imul
pop
pop
dec
or
mov
mov
jbe
pop
pop
int3
inc
or
pop
ins
and
hlt
push
les
call
stos
sub
pop
mov
les
sub
sahf
mov
scas
and
clc
hlt
gs
cmp
popf
scas
int
data16
push
push
xor
fdivr
mov
aas
mov
jge
cmp
sub
and
mov
into
test
scas
inc
in
(bad)
loop
test
(bad)
aad
xchg
retf
(bad)
nop
sahf
leave
sbb
inc
shl
lock
add
push
retf
sbb
sub
add
repz
jae
shr
out
push
dec
lahf
sbb
pop
mov
test
mov
jmp
mov
ror
int3
adc
aas
dec
xor
loope
outs
fwait
(bad)
dec
and
add
push
data16
push
(bad)
setne
xchg
mov
mov
ret
push
sti
cli
mov
xchg
push
jp
je
sbb
shr
pop
imul
mov
seto
gs
fsub
xor
stos
outs
mov
ins
cmp
xchg
sbb
dec
retf
popf
pop
xchg
push
xchg
cmp
jg
aad
and
dec
stos
sub
(bad)
mov
jmp
std
inc
mov
(bad)
movs
repz
(bad)
xchg
ins
mov
add
ror
mov
pop
mov
push
sbb
push
jns
nop
sub
cld
xor
adc
cmps
mov
sbb
mov
adc
adc
xor
(bad)
mov
jle
scas
pop
adc
leave
mov
scas
dec
repnz
addr16
aam
das
mov
pushf
fwait
jmp
(bad)
push
add
in
pop
call
das
cmc
or
xchg
sub
outs
popa
inc
xor
fist
push
into
sbb
sub
push
hlt
mov
out
cdq
sub
(bad)
shr
daa
xchg
(bad)
(bad)
fld
stos
jmp
nop
enter
lock
cmp
repz
lods
and
mov
(bad)
aas
sub
push
inc
in
(bad)
in
sub
xchg
icebp
jno
sahf
stos
les
mov
xor
pop
mov
jno
xchg
or
aad
js
push
daa
inc
xchg
xor
sbb
pop
iret
sbb
(bad)
cmp
out
rcr
sar
pop
jmp
test
pop
push
xchg
jl
daa
or
add
ss
mov
jmp
inc
jp
repnz
aaa
js
retf
cmp
jp
jo
ins
ret
push
push
jo
mov
aad
sub
js
mov
lds
push
and
xor
outs
fcomp
test
je
cmp
aam
shl
call
std
dec
iret
sbb
data16
cmp
and
sbb
(bad)
(bad)
test
arpl
add
adc
xor
jle
xor
sbb
push
in
pop
xchg
aam
inc
mov
std
add
xchg
das
inc
pushf
mov
pop
jo
cmps
enter
loopne
(bad)
(bad)
into
mov
xor
dec
pop
outs
push
nop
inc
mov
mov
js
icebp
jmp
ins
jne
repz
mov
jmp
xchg
dec
pusha
rcr
cs
into
int3
clc
int3
cs
popf
sub
repnz
sub
iret
add
adc
stos
lods
xor
inc
cmc
adc
(bad)
cdq
outs
cmp
pop
cld
or
add
in
lods
inc
mov
(bad)
sub
stos
push
pop
leave
(bad)
sti
rcr
bound
std
popf
stos
cmps
cmps
mov
mov
add
adc
cmc
sub
add
cmc
sub
sub
adc
push
or
aas
mov
call
jge
es
xchg
xchg
sbb
xor
out
mov
mov
pop
aam
or
pusha
shl
gs
jge
scas
xor
out
push
push
popa
bound
dec
ins
movs
test
jnp
pop
adc
push
outs
sti
lods
jp
iret
jne
xchg
inc
in
pop
push
add
cmp
mov
pop
mov
or
outs
test
ffreep
push
adc
mov
cmp
in
sub
jmp
sahf
ret
cld
sbb
cmp
lea
imul
out
into
mov
lods
adc
cmp
das
and
int
jle
cmp
pop
mov
and
retf
iret
arpl
bound
add
xor
mov
jbe
pop
pusha
or
data16
jb
mov
inc
push
lods
das
xor
push
rcr
repz
clc
cmps
xchg
mov
rcr
arpl
icebp
call
data16
fstp
ret
mov
adc
stos
xchg
out
movs
xor
sbb
add
mov
dec
push
fnsave
xor
popa
xor
loopne
clc
js
aad
xchg
jp
adc
pop
and
retf
add
fcomp
jb
mov
pop
add
cld
sub
mov
pop
sbb
push
mov
pop
push
push
out
mov
loopne
jmp
inc
fucomi
idiv
ret
popf
pop
xor
sbb
sub
inc
xor
rcl
cmp
imul
pusha
loope
or
(bad)
pop
xor
xor
cmps
fstp
call
test
dec
int3
fsubr
fiadd
mov
pusha
jae
dec
inc
mov
inc
pop
mov
pop
lock
je
xchg
lds
mov
cli
int3
ret
scas
and
pop
jae
pusha
xlat
sub
out
adc
jge
cdq
mov
call
(bad)
cmp
out
fs
and
push
mov
rol
or
sub
xlat
adc
sbb
mov
stc
pop
dec
enter
leave
cmp
pushf
out
fs
fs
pop
mov
mov
test
aas
and
fs
jb
test
jne
test
push
(bad)
add
outs
cmps
push
movs
jno
push
push
sub
js
gs
adc
loope
pop
push
pop
cmps
mov
bswap
inc
pop
lock
sub
xchg
and
scas
xchg
call
jae
enter
popa
movs
pop
xchg
stos
movs
or
push
mov
xor
div
add
xchg
fist
gs
stos
popf
and
lds
mov
int3
mov
inc
jns
jns
cmp
in
sbb
je
cmp
outs
push
xlat
iret
fcomp
js
inc
ins
sub
or
(bad)
sbb
sbb
mov
sbb
sub
call
into
repz
add
jnp
and
jnp
add
fbld
stc
cwde
jecxz
adc
xchg
cmps
shl
in
jl
mov
div
mov
into
imul
pop
ror
int
cmps
xor
rcl
cmp
clc
mov
cwde
cmp
and
jmp
retf
outs
(bad)
gs
lock
into
push
aad
loop
jecxz
pop
mov
mov
mov
mov
dec
(bad)
mov
inc
jg
les
jp
pextrw
mov
mov
add
addr16
out
call
js
retf
or
cmps
add
(bad)
in
outs
xor
mov
sahf
jp
call
push
dec
test
cli
push
stc
pop
(bad)
inc
bnd
repnz
call
jle
dec
adc
mov
or
bound
push
xchg
ins
mov
fisub
jg
loope
mov
push
aam
xor
cs
and
dec
jmp
push
pop
xor
bound
push
push
aaa
out
stos
(bad)
cmp
into
add
icebp
xchg
sub
dec
pushf
movs
mov
inc
arpl
in
jo
adc
dec
jb
hlt
and
sti
out
push
sub
mov
outs
add
out
pop
retf
push
dec
fld
pop
lods
(bad)
push
dec
nop
lock
ds
jle
pop
xchg
add
push
(bad)
and
mov
test
jae
fimul
fnstcw
sbb
repnz
fsub
mov
and
pushf
or
vpunpcklwd
add
push
std
into
mov
adc
xchg
inc
push
scas
inc
dec
pop
dec
outs
cmc
adc
in
movs
hlt
cmp
pop
shr
mov
and
cmp
idiv
adc
in
daa
loopne
mov
int
test
call
fbld
ins
es
xor
out
sub
mov
inc
mov
(bad)
rcl
mov
cs
sub
repnz
fsub
arpl
int3
push
je
dec
loope
js
jne
out
in
imul
xchg
ins
je
test
lea
bound
loope
sti
in
iret
sbb
mov
scas
test
or
dec
shl
adc
popf
je
mov
or
sbb
test
jge
cmp
repz
push
repz
lock
adc
inc
(bad)
pop
mov
xchg
xor
sbb
jecxz
inc
sub
test
pop
jno
lea
mov
add
not
jne
mov
enter
xor
mov
jecxz
in
lods
jmp
pop
and
mov
pop
xchg
xor
mov
mov
and
jne
pop
cdq
ds
into
bound
sub
add
ja
inc
jmp
adc
aam
mov
adc
mov
scas
mov
or
mov
dec
cmp
mov
out
ins
fadd
mov
fbstp
adc
aas
(bad)
pop
stos
xlat
push
int
das
cmp
popa
add
mov
adc
sbb
fdivr
or
mov
arpl
adc
push
lods
jno
push
adc
push
dec
icebp
adc
out
nop
jae
push
and
loop
jmp
jl
cmp
sbb
mov
test
movs
xchg
jo
ret
or
inc
jo
test
test
aam
aam
movs
out
test
xchg
or
into
mov
push
imul
push
inc
mov
mov
loop
jecxz
mov
mov
jle
jnp
and
mov
mov
push
scas
dec
out
pusha
lea
cdq
adc
sbb
lahf
dec
ss
in
rol
adc
mov
jno
dec
icebp
xchg
jns
jbe
or
jns
adc
jbe
in
pop
stc
retf
pop
bound
retf
mov
fnsetpm(287
mov
dec
outs
mov
popa
cmp
daa
(bad)
out
and
or
xor
pop
lahf
jge
inc
xor
inc
or
pushf
jge
jo
mov
push
fdivp
fdiv
xchg
and
out
pop
retfw
js
hlt
cmp
pop
dec
imul
ins
rcr
push
sub
cmp
fs
dec
adc
test
ret
inc
es
adc
mov
mov
cmp
pop
pop
xchg
scas
ret
stc
inc
hlt
fist
in
jge
push
jne
ret
xchg
xor
jle
stc
pushf
pop
imul
gs
inc
push
mov
cld
jp
xor
stc
test
pop
pop
sbb
into
int3
pop
loop
dec
mov
jmp
xchg
jmp
mov
lahf
jg
mov
push
inc
fstp
dec
outs
jns
dec
popa
mov
test
lea
lock
mov
inc
fidiv
jo
aad
cmp
xchg
mov
nop
push
add
push
ins
sub
jg
dec
pop
cmps
int3
sar
jno
sar
enter
cld
iret
jns
mov
ja
fs
add
xchg
out
das
jo
movs
repz
push
mov
pop
sbb
pop
jl
mov
mov
or
aad
adc
pop
and
mov
push
pop
adc
push
jne
ret
mov
cwde
retf
pop
sub
xlat
jmp
mov
jne
xor
pushf
sbb
ds
or
popf
fld
mov
sub
outs
dec
mov
stc
ror
inc
xchg
push
mov
inc
sub
mov
sar
xor
mov
outs
adc
stos
xlat
das
inc
adc
mov
or
ins
push
xchg
push
aaa
sti
(bad)
(bad)
cmp
in
xchg
push
in
or
daa
xlat
fisttp
(bad)
scas
das
push
mov
mov
lods
inc
xor
call
loop
mov
cmp
pop
es
shl
repnz
dec
or
mov
xor
pop
ds
(bad)
pop
inc
dec
dec
mov
mov
pushf
inc
jnp
aaa
ja
sahf
call
cmps
inc
inc
adc
call
inc
sbb
lahf
jp
movs
jbe
xor
cdq
adc
scas
sub
mov
rcr
sbb
ins
push
ds
push
fldenv
mov
jmp
cmps
and
adc
and
adc
push
stos
mul
test
push
pop
push
pop
cmp
add
xchg
(bad)
int3
jecxz
inc
jecxz
and
sahf
push
mov
rol
mov
push
pop
(bad)
(bad)
repnz
pop
xor
add
int3
stc
inc
idiv
ins
addr16
or
imul
pop
jbe
sub
pop
xor
cs
je
xchg
inc
adc
jmp
(bad)
ds
test
aaa
push
push
and
dec
pop
pop
je
jo
sbb
xor
jmp
test
inc
mov
cwde
fld
out
fsub
mov
add
shr
mov
js
pop
jne
ret
fisub
stos
aaa
adc
lahf
xor
push
mov
data16
sbb
repnz
js
out
and
inc
mov
inc
mov
pop
in
pop
mov
out
ins
lahf
scas
data16
ret
lods
jl
jecxz
xchg
jp
cli
inc
xchg
sub
jno
xor
cmp
rol
pop
mov
dec
dec
outs
call
arpl
cmps
ds
mov
mov
imul
mov
and
(bad)
sub
(bad)
fild
out
pop
dec
cdq
dec
lock
sti
clc
addr16
out
sbb
push
repnz
test
(bad)
cli
cld
sbb
dec
pop
xchg
mov
cmp
sbb
mov
and
and
xchg
sub
cmp
add
inc
pop
cwde
pop
xor
ins
add
pop
mov
xchg
sub
pop
es
mov
jl
cwde
sbb
sbb
jne
xor
dec
jecxz
dec
cli
repnz
lahf
(bad)
es
imul
add
mov
sbb
pop
xor
sub
sbb
call
stos
lock
sar
sub
in
pop
cmp
sysenter
pop
push
push
sbb
lahf
push
mov
in
shl
xchg
dec
mov
shl
pop
dec
xchg
mov
jmp
iret
fst
sahf
fisttp
jmp
js
fdiv
adc
cdq
adc
pop
adc
mov
lods
leave
and
xchg
mov
int
mov
mov
repnz
les
ret
mov
hlt
lahf
xchg
inc
sub
cld
cld
aad
jns
movs
jbe
lds
adc
cmp
sub
jg
in
fdiv
jecxz
sub
xor
outs
fnstcw
lods
fadd
lds
sub
lds
jmp
xchg
pop
push
addr16
mov
mov
adc
and
pop
cmp
jle
sbb
xor
popa
lock
xlat
xor
xor
cmp
and
mov
shl
ins
xor
jnp
(bad)
push
das
cmps
cmp
(bad)
cmps
sbb
(bad)
pop
shr
lods
sbb
add
in
das
cmp
mov
xchg
repnz
sub
(bad)
xor
(bad)
pop
jp
add
loope
idiv
iret
inc
xchg
pop
or
jae
sbb
jne
push
scas
push
or
mov
adc
jno
add
mov
push
and
add
call
outs
or
arpl
pop
mov
in
fmul
or
xor
jmp
or
sbb
dec
test
test
add
pop
into
mov
int
lods
push
dec
stos
push
(bad)
nop
jbe
jp
cmp
in
adc
in
pop
shl
fdiv
sbb
xor
aaa
cmp
pop
dec
sub
mov
jno
cmp
cmps
lods
fstp
sbb
mov
inc
add
ds
dec
into
push
inc
inc
xchg
push
nop
pop
mov
test
call
(bad)
jns
fsubr
cmp
mov
mov
cmc
mov
and
data16
stc
cmp
xchg
jns
push
jnp
cmps
in
add
inc
popf
jo
inc
and
push
sahf
jge
(bad)
imul
push
test
cmps
jnp
pop
shl
loopne
in
movs
adc
retf
ret
sbb
pop
adc
sub
push
scas
lahf
push
push
and
cmp
(bad)
pop
les
inc
xchg
push
add
stos
push
aad
and
mov
or
das
jl
pop
js
icebp
pop
sub
add
push
(bad)
adc
mov
adc
jo
aaa
cmp
jge
shl
retf
fidivr
jl
and
loope
sub
aas
push
jo
cmps
push
adc
dec
xor
test
xchg
sbb
js
and
ds
(bad)
jb
push
cmp
pop
enter
adc
inc
repz
pop
icebp
push
mov
(bad)
cli
cmps
mov
nop
cld
jne
sub
add
movs
and
mov
imul
jnp
mov
retf
and
jmp
dec
dec
mov
mov
loope
jmp
std
rcr
add
or
fwait
cmp
call
in
(bad)
mov
and
mov
leave
sbb
cmp
test
leave
mov
or
(bad)
dec
in
in
mov
aas
sahf
outs
mov
sub
(bad)
jno
sete
jge
rcl
loop
pop
jg
(bad)
mov
stc
out
inc
mov
int3
inc
jae
test
ins
mov
sbb
xor
or
repz
pop
pop
ret
div
(bad)
out
das
ins
test
ins
sub
(bad)
jmp
movs
or
dec
or
push
mov
jnp
scas
je
stos
jo
jno
jp
stc
push
cmp
mov
leave
enter
sbb
push
in
loope
mov
dec
js
cli
(bad)
dec
pop
adc
aad
dec
inc
test
stos
pop
mov
sub
data16
fcomp
sahf
rcl
sbb
in
or
cmp
out
adc
mov
(bad)
movs
add
cmps
shr
mov
cmps
cs
(bad)
xchg
ficomp
pop
lds
fs
add
adc
push
adc
mov
ret
retf
(bad)
sbb
sub
or
add
sbb
(bad)
(bad)
popf
sub
add
mov
push
ret
fst
leave
lock
sti
out
retf
and
(bad)
iret
fdiv
mov
dec
fs
ret
push
adc
std
xchg
aad
mov
inc
xor
push
cld
(bad)
mov
repz
aas
call
jmp
push
mov
cmc
iret
in
xor
mov
fwait
test
pop
shl
out
xchg
mov
jbe
or
or
fcom
retf
xchg
pushf
inc
adc
in
or
dec
sbb
jne
push
es
mov
arpl
or
add
es
xor
adc
adc
add
retf
ret
arpl
cmps
and
(bad)
clc
popf
retf
retf
stos
cmp
pushf
shl
push
push
push
jbe
sub
jecxz
dec
dec
ficom
adc
add
int
pop
lods
lds
(bad)
movs
mov
sub
jg
dec
fidiv
(bad)
retf
stc
rol
iret
pushf
repz
or
jns
js
or
test
xchg
shl
pop
call
(bad)
cmc
mov
test
dec
jbe
int
adc
cmp
xor
clc
int
je
ss
cmp
test
(bad)
lea
pop
outs
inc
dec
loop
cld
lahf
in
mov
xor
in
pcmpgtd
dec
push
test
fcomi
push
out
mov
and
rcl
jp
add
into
jne
bound
add
pop
sbb
data16
sbb
rol
stos
sti
rol
icebp
or
mov
mov
xor
fwait
xchg
sbb
call
xchg
mov
mov
mov
loop
mov
or
sbb
and
fxch
and
das
clc
mov
adc
xchg
nop
fcomp
mov
sub
jo
pop
gs
pop
cmp
jge
test
mov
adc
xor
movs
std
cmp
psrad
push
xor
lods
push
mov
cmp
fs
rol
pop
adc
cmps
xchg
xchg
in
adc
push
cmp
push
jecxz
mov
push
gs
jnp
aas
add
cmps
add
int
mov
ficom
mov
lahf
test
mov
pop
leave
sub
xor
xchg
xchg
xor
or
xchg
dec
mov
xlat
mov
or
dec
sbb
aad
cdq
ins
adc
aas
data16
mov
aas
mov
mov
outs
xchg
xchg
sbb
cmp
pop
cdq
sub
into
add
sub
cdq
add
int
cmps
int
push
nop
pop
pusha
jbe
cmp
aad
sub
dec
pop
lods
mov
pop
or
scas
imul
jge
mov
xchg
hlt
fnstsw
ret
inc
jns
or
aas
movs
or
int
sbb
add
sbb
retf
movs
cmps
jge
sti
test
movs
or
mov
jne
cdq
test
inc
shr
xchg
outs
push
push
mov
shr
sub
mov
pop
fild
push
cli
push
xchg
add
inc
mov
fisub
in
cmp
add
scas
dec
bound
mov
add
sbb
inc
sub
jns
lock
test
jp
push
mov
(bad)
fistp
jns
push
sbb
shl
pop
mov
out
or
xor
sahf
pusha
fucomi
rol
cwde
out
adc
pop
aam
popa
add
shr
dec
cmp
xchg
pop
cmp
out
add
fucomip
sub
xor
movs
mov
jg
sbb
sbb
shl
mov
pop
push
scas
arpl
fcomp
push
cs
or
cmp
shl
or
(bad)
mov
xor
repz
pusha
int
ins
cmps
(bad)
rcr
popf
pushf
ret
sbb
pop
xchg
sub
xor
pushf
or
adc
mov
jmp
jmp
data16
adc
jg
repz
mov
jbe
test
pop
mov
sti
call
retf
arpl
je
jae
cld
movs
xor
mov
and
adc
mov
jmp
cmp
fisttp
dec
xor
fwait
dec
loope
out
fwait
mov
or
push
retf
inc
adc
jmp
lock
cdq
adc
fidivr
ret
mov
popf
jg
fs
sbb
pop
fmul
inc
ins
pop
mov
ins
fimul
in
aaa
sbb
cmp
fidivr
lds
push
mov
rsm
std
xchg
scas
xor
adc
sub
sbb
lea
add
fnsave
or
sar
clc
fucom
and
dec
popf
loopne
imul
push
jne
inc
test
lds
xchg
mov
(bad)
mov
enter
stc
pop
icebp
jge
sub
adc
pop
ret
das
adc
fdivr
stos
cwde
jle
push
adc
add
mov
(bad)
scas
add
shl
lock
test
or
jb
pop
popa
jns
mov
push
pushf
inc
jmp
jno
cwde
mov
adc
push
stos
leave
jbe
inc
mov
and
(bad)
adc
das
das
inc
mov
mov
int3
mov
or
pushf
jg
or
bnd
add
out
sub
js
push
(bad)
(bad)
adc
xchg
ins
lods
sbb
in
jmp
dec
add
out
inc
pusha
dec
fnstsw
nop
ret
lahf
rcl
push
dec
jbe
daa
push
jge
test
stos
loop
xchg
into
sub
push
popf
lods
fmul
mov
jo
jns
cmps
cmp
scas
xchg
push
adc
mov
pop
xchg
sbb
sbb
ds
jae
(bad)
rcr
test
push
mov
out
cld
jge
stc
iret
into
nop
arpl
adc
mov
sub
test
sub
add
int3
test
and
pop
imul
xchg
aad
pop
jp
jmp
es
es
or
push
int
push
imul
fnstcw
xchg
or
call
mov
(bad)
(bad)
pop
test
sbb
(bad)
cmps
push
mov
sbb
jmp
pop
sbb
fnstcw
cmps
inc
xchg
adc
cmp
outs
ja
or
or
xor
lahf
xchg
mov
sub
cmp
inc
stos
mov
cs
push
into
dec
dec
mov
push
imul
(bad)
imul
ss
push
or
inc
mov
jno
outs
in
xor
xchg
push
das
hlt
mov
in
fild
icebp
rcr
jl
cmps
dec
ja
sub
jmp
or
or
ins
sub
dec
dec
cld
test
stos
sub
in
retf
mov
aas
xlat
mov
repz
xlat
test
outs
jnp
xor
mov
outs
lods
shl
scas
mov
sub
mov
into
cwde
test
jbe
out
out
imul
cmp
sti
jmp
cdq
loop
xchg
or
out
bound
fidiv
dec
into
xchg
adc
mov
xor
or
stos
pop
rcr
adc
scas
les
and
xchg
or
sahf
dec
(bad)
xor
jno
sbb
mov
repz
stos
mov
inc
test
push
jno
mov
les
jg
leave
ret
xlat
xlat
push
fild
(bad)
aad
push
stos
xchg
inc
retf
inc
cmp
jnp
mov
mov
inc
sbb
out
arpl
push
in
sbb
jmp
adc
sahf
mov
add
xchg
sub
and
cli
test
push
aas
pop
xor
inc
jne
iret
mov
out
xor
repz
xor
cdq
dec
ins
and
sub
cdq
cli
jmp
xor
outs
mov
loope
push
test
add
mov
push
cs
clc
in
sbb
inc
imul
popf
inc
mov
fstp
outs
das
in
pushf
scas
sbb
sbb
lods
xor
or
ja
out
retf
jl
mov
jne
push
mov
or
push
sbb
scas
ds
mov
jecxz
cwde
jae
imul
sub
adc
pop
push
dec
push
dec
ja
dec
add
js
arpl
mov
enter
push
repnz
xchg
in
movs
fs
aad
scas
sbb
inc
pusha
stos
or
mov
ss
stc
dec
mov
repz
or
mov
pcmpeqb
outs
and
ret
ret
cli
add
repnz
mov
cmc
mov
jbe
xchg
push
je
adc
add
push
inc
shl
je
ret
retf
inc
cs
xor
int3
bound
cdq
pop
into
movs
stos
int
mov
movs
mov
jb
(bad)
cmps
push
test
pop
mov
mov
mov
jl
(bad)
addr16
push
jp
into
sar
retf
into
add
in
call
mov
loopne
sub
push
mov
shr
mov
adc
push
mov
jecxz
in
add
(bad)
lds
or
mov
(bad)
clc
xchg
push
in
popf
jbe
movs
inc
jae
jp
loopne
inc
jge
aaa
es
ins
cdq
imul
and
push
mov
inc
sbb
and
push
imul
jp
mov
sub
ds
test
rcl
sub
push
das
std
call
mov
lods
vxorps
xchg
sbb
je
js
rol
movs
inc
jne
jnp
addr16
pop
inc
pop
add
mov
test
pop
jg
dec
cld
jecxz
sub
or
les
add
sub
das
ins
outs
cwde
mov
pop
inc
sbb
and
and
pop
adc
xchg
or
xor
sti
push
mov
sub
scas
mov
xor
rol
cmps
pop
add
int3
and
add
movs
loopne
jle
mov
xor
or
(bad)
mov
mov
or
mov
lods
es
inc
sbb
jg
ja
sahf
cmps
push
xchg
adc
push
mov
xor
or
loop
call
mov
(bad)
cmp
push
xchg
cmc
adc
imul
sub
mov
sbb
sub
fnstcw
push
mov
fidivr
lods
into
sub
push
inc
les
fcmovnb
mov
dec
movs
jae
adc
jne
repz
loop
fsubr
pop
dec
mov
push
add
dec
cwde
(bad)
in
xor
mov
ss
push
sub
arpl
add
outs
cld
mov
mov
fnstsw
daa
not
jb
pop
or
pop
fs
outs
xchg
ror
test
xchg
mov
outs
xchg
jmp
in
imul
xlat
test
inc
sub
pop
jmp
aam
rol
or
ds
xor
dec
sub
mov
push
dec
pop
jg
add
sahf
int3
and
push
or
sbb
inc
push
jno
mov
sbb
call
jmp
out
out
adc
aas
daa
jnp
mov
scas
je
sbb
arpl
into
or
cmps
adc
out
adc
inc
push
xor
mov
pop
pop
jne
arpl
inc
dec
nop
inc
mov
nop
ror
fcomp
ror
lods
out
lahf
rcl
jmp
test
in
dec
and
ror
retf
int
mul
sub
pushf
and
int3
inc
jge
loopne
mov
pop
add
pop
pusha
movs
repnz
xchg
xor
fwait
adc
out
jbe
icebp
retf
stc
inc
pusha
pop
aad
xor
and
pusha
je
pop
int3
js
sar
loopne
mov
ja
add
in
pusha
icebp
ficom
cld
add
inc
mov
xchg
test
pop
int
lahf
cs
jl
sub
fst
push
fadd
hlt
addr16
sub
test
icebp
je
mov
addr16
push
adc
mov
lods
adc
aam
loope
dec
mov
loopne
mov
and
leave
xor
push
(bad)
mov
inc
inc
mov
jmp
in
retf
pusha
push
sbb
xchg
sub
cmp
popa
dec
lods
sbb
lahf
push
int
xchg
hlt
mov
shl
icebp
adc
cmc
push
fdiv
mov
js
jne
pop
or
xchg
mov
mov
cmp
ss
xchg
ins
jle
inc
push
dec
and
pop
mov
ja
fmul
daa
in
jmp
sbb
or
inc
cmp
mov
push
cli
xchg
(bad)
push
mov
es
push
in
outs
in
xchg
xchg
cs
jb
inc
push
test
sub
shr
sbb
cmps
or
inc
and
push
inc
xchg
and
push
rol
sti
xchg
jl
dec
aam
sub
jg
sub
jle
adc
clc
cmp
push
(bad)
cld
pushf
jne
ror
and
xchg
div
xchg
out
nop
add
mov
pusha
(bad)
mov
adc
call
pop
jp
xor
push
loop
test
out
sbb
rcr
push
nop
inc
add
inc
push
daa
(bad)
cli
or
inc
clc
or
xchg
inc
jae
mul
jae
outs
in
das
mov
mov
int3
mov
in
add
icebp
push
push
mov
cmp
enter
inc
adc
stos
push
jle
sub
sub
pand
(bad)
cmps
hlt
jae
sub
in
pop
in
addr16
mov
mov
das
mov
jno
pop
adc
mov
cmp
dec
mov
sub
scas
data16
popf
loop
adc
jge
inc
mov
pushf
adc
or
pop
jnp
js
xor
into
and
stos
or
ins
test
scas
fdiv
mov
cs
inc
pop
fnstsw
push
imul
push
repnz
sbb
mov
out
or
jge
js
add
mov
push
je
pop
adc
gs
xchg
push
(bad)
out
addr16
lods
cmps
push
or
aam
dec
mov
push
cmp
int3
ret
out
movs
(bad)
mov
cmp
cwde
and
fld
adc
pushf
pop
repz
hlt
push
scas
xor
mov
std
jmp
ja
pop
cdq
mov
xchg
gs
ret
pop
jb
fs
pop
addr16
mov
sti
add
es
or
(bad)
outs
in
lock
cli
in
add
and
movs
xchg
jl
mov
jecxz
nop
jle
dec
mov
xlat
repnz
pop
xchg
xor
test
repnz
div
push
test
aad
mov
pop
adc
jg
test
or
mov
gs
sbb
push
inc
push
or
cmp
mov
dec
jmp
push
and
xchg
lds
and
xlat
xor
aad
dec
push
xchg
adc
dec
aad
xlat
cmp
mov
mov
fdiv
lds
lods
test
push
scas
inc
cmp
test
dec
loop
lea
xor
xor
xor
mov
push
cdq
cmps
sub
push
mov
test
push
in
movs
loop
push
jecxz
imul
ja
sysexit
jl
fnsave
(bad)
test
adc
mov
fwait
sub
inc
jl
fstp
sub
mov
and
not
mov
mov
call
loop
cdq
call
mov
pop
out
aaa
cmc
das
mov
xchg
mov
push
aad
imul
ja
outs
sar
(bad)
mov
mov
std
sbb
outs
shl
and
mov
add
mov
clc
dec
in
jne
(bad)
jmp
aaa
push
sub
pop
push
mov
and
add
jge
cmp
outs
push
pop
dec
xchg
jb
sbb
mov
inc
xor
mov
je
jmp
mov
and
js
fwait
scas
(bad)
loope
inc
std
or
fwait
jo
repnz
out
into
xchg
bound
jne
loope
fst
mov
pop
inc
jle
and
mov
adc
xrelease
mov
cmc
call
lods
sbb
rcr
outs
(bad)
add
cdq
adc
movs
xchg
pop
mov
idiv
jno
ja
mov
clc
aad
dec
int
mov
cmp
jp
in
fld
and
lods
(bad)
mov
outs
mov
out
dec
dec
retf
fcomp
push
mov
mov
pop
or
pop
stos
cmps
mov
mov
push
cs
mov
push
jae
push
xchg
out
mov
test
pusha
jg
sbb
and
lock
ficomp
mov
add
xchg
das
mov
ja
aaa
inc
fwait
mov
jmp
xor
push
jl
jle
dec
cmps
pop
mul
lds
stc
jl
ss
mov
mov
jl
push
adc
push
sub
push
jge
pcmpeqd
fcmovnu
pop
loope
clc
call
ins
into
fwait
fwait
pop
das
pop
mov
call
call
adc
in
mov
(bad)
and
push
and
mov
mov
sub
pop
call
psraw
mov
cmp
pop
cmp
das
into
push
retf
xchg
into
mov
int
inc
dec
iret
scas
mov
mul
push
lahf
mov
sub
data16
call
and
pop
push
(bad)
xor
jmp
fistp
adc
cmp
push
mov
pop
out
clc
or
retf
arpl
or
dec
out
out
loope
aas
mov
and
mov
jno
rcl
adc
mov
pop
outs
enter
test
push
push
adc
jl
adc
faddp
loope
aad
iret
push
or
and
push
push
rol
pop
jb
out
loop
fucom
daa
adc
jge
aam
push
std
arpl
(bad)
lds
lahf
outs
das
not
test
lock
inc
fidiv
mov
cdq
xchg
add
(bad)
into
sti
or
cld
pop
dec
cld
sub
xchg
es
sbb
inc
movs
repz
das
add
rcl
lock
pop
stos
test
ins
pop
pop
pushf
inc
call
fild
gs
mul
daa
jnp
shr
add
sub
add
rcr
(bad)
jne
xchg
inc
ret
adc
imul
inc
sbb
mov
sbb
lock
out
mov
push
inc
aas
mov
bnd
add
shl
js
push
jmp
ds
test
mov
std
or
in
push
loope
mov
arpl
xor
clc
ret
(bad)
stos
les
xchg
mov
adc
push
mov
jmp
jp
jecxz
mov
push
cmc
and
sbb
inc
idiv
mov
es
adc
movs
xor
cmp
pop
retf
add
out
arpl
cwde
ins
pop
shl
mov
sub
movnti
pop
outs
rcl
in
in
add
xlat
inc
jo
sahf
push
mov
mov
jge
lea
fistp
jbe
inc
mov
pop
cmp
push
and
dec
sbb
cmps
imul
icebp
aaa
cmp
xchg
(bad)
in
pop
xchg
and
pop
jp
xor
fdiv
mov
push
fsubr
fcomp
xor
(bad)
dec
aad
lods
cmp
dec
jns
or
adc
pop
fs
xor
ja
lods
mov
add
fucomp
mul
push
mov
or
cdq
ffree
jecxz
outs
sub
pop
cmp
(bad)
popa
sar
sar
cld
pop
rcr
mov
add
bound
dec
inc
cmp
and
fwait
cmp
xchg
call
pop
aad
int3
pop
mov
enter
inc
xor
mov
push
test
xor
fs
xor
add
jg
cld
lds
sbb
shl
movs
fisttp
enter
sbb
jne
push
pop
outs
shl
adc
and
jmp
jl
xor
lea
sar
rcr
xchg
bnd
sbb
scas
add
jmp
stos
dec
cs
xor
outs
push
ret
dec
pop
cmps
rol
mov
test
pop
(bad)
in
test
icebp
or
fdivr
test
es
jle
addr16
ror
or
daa
xchg
or
movs
jo
mov
jl
mov
dec
xchg
lods
add
sub
mov
idiv
xchg
mov
inc
cmp
sub
sub
xchg
adc
popa
and
ins
mov
aad
jnp
(bad)
fs
mov
ss
lock
xchg
cmp
mov
imul
inc
mov
lock
out
pop
jae
jmp
jg
push
xor
sub
std
pop
sub
fwait
in
and
pop
or
push
jbe
dec
xchg
shl
add
lahf
cmp
dec
adc
cmp
das
add
aad
sub
xor
(bad)
xchg
(bad)
pop
cmps
inc
push
das
add
or
test
int3
or
mov
popa
cmc
lods
xchg
ss
icebp
sbb
pushf
mov
aas
add
fistp
mov
inc
or
mov
fdivr
call
sub
fild
sub
rol
fwait
pop
mov
sub
les
out
or
mov
cmp
rol
imul
mov
repz
cmps
clc
fdivr
inc
mov
cmp
(bad)
(bad)
sub
adc
cmp
lods
push
(bad)
jl
nop
push
aam
sub
push
cs
jo
jbe
cmps
jns
sub
fidivr
dec
mov
mov
retf
outs
mov
pushf
jnp
mov
xchg
and
add
sbb
ds
aaa
cmps
add
sub
pushf
gs
int
retf
mov
pop
pop
mov
test
jmp
jle
mov
(bad)
cmc
jmp
jge
mov
sbb
es
adc
sbb
jmp
ror
lock
movs
add
adc
and
pop
dec
outs
lods
xchg
cli
push
adc
push
gs
mov
mov
jge
add
xlat
or
into
fstp
(bad)
mov
into
mov
repz
or
bound
jmp
imul
sahf
mov
jmp
sub
outs
mov
jo
fld
sub
jno
pop
in
movs
shl
cmps
pop
inc
aam
push
dec
mov
and
std
or
(bad)
cld
pop
fisttp
jns
dec
mov
dec
and
pop
bnd
mov
pop
xlat
jp
xchg
call
xchg
lea
pop
stos
mov
jle
shr
sbb
into
fxch
(bad)
idiv
cmp
dec
mov
push
xchg
or
aaa
(bad)
(bad)
jae
cld
outs
pop
sub
jecxz
jno
int3
jp
fidiv
inc
and
rcr
dec
push
das
and
in
mov
cwde
loopne
sar
dec
and
add
aas
mov
lods
lea
fidiv
dec
fcomp
in
in
inc
iret
xchg
int
sbb
test
daa
mov
frstor
lods
pop
dec
outs
cdq
mov
fimul
(bad)
addr16
setae
cmc
sub
lods
xor
(bad)
mov
and
repnz
outs
xlat
mov
call
sbb
xchg
ja
shl
into
popf
pop
add
addr16
shl
or
dec
push
lds
adc
(bad)
clc
shl
push
hlt
xchg
xchg
sbb
mov
mov
pop
test
test
mov
cdq
(bad)
cmp
add
push
mov
shl
imul
cmp
mov
daa
adc
pop
push
xor
jmp
mov
inc
mov
inc
sub
jns
movs
popf
out
fld
cmps
mov
cmp
fdiv
xor
sub
repnz
cdq
out
mov
add
in
sub
fcom
repz
mov
pop
inc
or
fs
add
int
fwait
stc
loopne
inc
add
hlt
push
sub
inc
mov
xor
dec
mov
lock
push
pop
add
xchg
sar
and
dec
pop
add
fist
jge
inc
dec
ret
aam
inc
pushfw
xchg
sub
sub
mov
xor
mov
jnp
and
out
nop
and
cmp
mov
or
hlt
jge
pop
fisub
jnp
add
(bad)
dec
mov
add
lods
or
loope
mov
or
fwait
addr16
xor
push
add
pop
in
jg
or
xchg
jg
rol
jnp
(bad)
(bad)
or
lock
bound
daa
mov
dec
(bad)
sub
mov
lds
mov
add
xchg
cmps
aad
adc
cld
fstp
push
in
stos
and
pop
cmp
aam
sbb
imul
cli
sbb
jmp
jnp
and
data16
jns
dec
dec
iret
pushf
pop
(bad)
outs
ja
dec
loope
sti
push
call
cmp
push
dec
mov
xor
outs
pusha
pushf
push
mov
popa
shr
mov
lods
loopne
adc
mov
(bad)
out
idiv
mov
and
mov
and
hlt
repz
daa
add
push
(bad)
mov
dec
sbb
adc
mov
xor
and
jne
or
aas
lods
cmp
imul
lea
inc
sbb
dec
or
sbb
cli
push
xor
add
and
xchg
popf
pop
sbb
das
jne
gs
jns
jl
dec
jmp
lods
int
jno
leave
xchg
and
neg
adc
pop
inc
mov
popf
enter
push
sahf
mov
mov
repnz
ins
cmp
pop
jo
(bad)
jmp
cdq
mov
addr16
jae
sub
push
fild
and
lea
ret
add
cmps
cmps
cmc
lods
or
int3
fs
test
in
in
inc
sar
or
cmp
(bad)
sti
lods
mov
dec
dec
arpl
and
fcmovu
ror
jge
fild
shl
ins
lock
and
gs
dec
push
movs
out
ins
sub
ja
jl
mov
jnp
das
sub
(bad)
cmc
mov
shl
xor
mov
addr16
pop
mov
jp
adc
aad
popf
jo
iret
addr16
push
(bad)
xchg
mov
push
loope
aam
test
cwde
fild
xchg
push
cli
inc
addr16
sbb
cmp
test
jmp
push
push
fild
dec
jle
jno
leave
pushf
je
(bad)
jecxz
push
mov
jmp
jne
(bad)
add
jle
popf
movs
jle
pop
pop
outs
pop
(bad)
call
xor
dec
cdq
xchg
jle
aaa
jnp
fild
loope
jmp
jno
fisub
mov
cmp
test
pandn
cmp
fist
jecxz
sbb
pop
push
pop
jle
or
jbe
clc
cs
adc
std
movs
fisttp
or
dec
nop
add
imul
inc
push
push
mov
sbb
clc
das
jecxz
pop
add
and
adc
jg
ds
dec
jbe
(bad)
pop
sub
fstp
sbb
imul
ficom
or
ret
ret
mov
cdq
hlt
out
xchg
(bad)
or
(bad)
cmp
int3
int
mov
push
fadd
sub
cmp
pop
push
out
pushf
push
sahf
adc
cmp
push
pop
sub
jecxz
rcr
mov
adc
push
add
mov
ins
stos
cdq
jmp
clc
push
cmp
sbb
xor
dec
mov
inc
jns
push
stc
xor
fisttp
inc
movs
mov
xlat
addr16
pop
rcpps
mov
imul
dec
inc
outs
mov
adc
and
sbb
dec
pop
pushf
inc
jmp
mov
popf
sub
out
and
jg
xchg
in
rcr
adc
dec
adc
mov
ss
jno
xor
pop
in
out
sbb
sub
mov
ins
popf
lods
push
ret
xor
sbb
test
adc
xchg
sbb
mov
cmps
outs
add
push
xchg
mov
lahf
dec
shl
xor
leave
(bad)
xor
xchg
inc
lods
push
lahf
inc
ja
dec
jbe
call
mov
sbb
test
adc
jbe
jecxz
inc
and
dec
and
stc
les
jmp
in
aas
fstp
sub
fcmovbe
mov
add
fadd
fcomp
(bad)
mov
xor
jg
pop
add
xchg
xor
sti
mov
sbb
das
aam
adc
int
inc
sub
sub
stos
sbb
adc
add
cmp
and
movs
inc
pop
cld
and
rcr
out
and
and
pop
xlat
mov
sub
lahf
mov
mov
push
call
test
lds
in
cwde
xchg
cld
and
into
into
jl
xchg
mov
push
jmp
(bad)
fwait
scas
out
jnp
enter
std
in
iret
add
cmps
push
sahf
mov
enter
cmps
sahf
retf
add
addr16
test
dec
or
mov
xchg
fadd
jmp
mov
sub
pushf
lock
out
icebp
pop
push
adc
fs
outs
daa
mov
inc
rcr
cli
cmp
outs
xor
cmc
dec
frstor
stos
mov
or
jne
rcr
adc
ss
mov
popf
or
pop
inc
pop
outs
aad
jl
jge
xor
cmp
pop
pusha
mov
jno
retf
mov
pop
xchg
pop
sub
push
sbb
ins
fisub
or
and
xchg
or
adc
test
shl
add
lahf
add
adc
ja
test
outs
push
jne
add
cmp
cmps
cmp
xchg
(bad)
xchg
inc
inc
jle
lods
popa
push
xchg
push
push
int3
ins
mov
jmp
mov
jecxz
mov
xor
adc
cmp
xchg
pop
ror
sbb
pop
lock
xor
or
push
jae
mov
pop
xchg
dec
sub
leave
push
int
push
xchg
clc
test
xchg
and
or
pop
cmp
sbb
mov
lds
inc
dec
jecxz
xor
mov
sub
xor
popa
xor
inc
adc
sub
aaa
push
push
mov
xor
jnp
mov
call
inc
lock
dec
push
cld
(bad)
adc
sub
fadd
or
sub
test
xchg
mov
test
cmp
outs
fincstp
pop
ins
cmc
int3
jmp
mov
(bad)
not
movs
push
push
jmp
stos
pop
jmp
stos
xor
xor
adc
shl
fidivr
rcl
cmp
bnd
xor
inc
fs
(bad)
cdq
test
addr16
scas
ror
in
and
clc
mov
mov
jl
ins
test
mov
das
sub
push
xchg
jl
jp
movs
xchg
mov
xchg
jo
jp
fiadd
mov
arpl
push
loopne
repnz
cld
repnz
jo
push
(bad)
shl
cmps
sbb
ss
jge
dec
xchg
or
movs
xor
add
inc
sbb
mov
hlt
inc
fisubr
adc
dec
xchg
push
pop
dec
sub
mov
cli
icebp
std
out
shr
jl
mov
imul
or
pop
sti
sub
cmp
pop
popf
int3
jg
or
mov
sub
in
cmp
sbb
add
icebp
icebp
xor
lahf
and
push
retf
jns
mov
push
rcl
xchg
mov
mov
pop
popa
fdivr
mov
or
addr16
cmps
movs
adc
cli
cmps
inc
mov
stos
inc
ss
sbb
cmp
in
xchg
mov
out
and
sub
and
sbb
push
hlt
cmps
int3
pop
ret
sbb
aaa
cmps
or
push
mov
mov
add
jp
ficomp
lea
int
fucom
popf
jge
dec
mov
ja
(bad)
xchg
cmp
inc
inc
xchg
or
or
sub
data16
dec
and
(bad)
push
jns
mov
retf
movs
(bad)
(bad)
clc
into
or
dec
fsub
xchg
lods
xchg
adc
stc
cmps
or
jae
mov
sub
stos
adc
push
movs
dec
xor
js
sub
xchg
psrld
push
stos
mov
(bad)
jmp
loope
mov
cmp
movs
cmp
icebp
or
cmp
xor
cmp
add
mov
push
mov
inc
sub
mov
push
mov
pop
pop
je
lock
test
mov
push
repz
xchg
fimul
or
aam
fwait
clc
pop
out
mov
bound
sti
mov
xor
cmps
aad
fisubr
in
cs
add
dec
int
pop
and
stos
xchg
adc
xchg
(bad)
aad
pop
fdiv
xlat
test
lea
push
xor
inc
int
jp
fadd
pop
inc
pusha
inc
adc
and
mov
out
mov
jns
push
and
sahf
ss
out
clc
jge
inc
mov
pop
cmp
sahf
push
push
jns
push
je
sub
push
ja
ret
call
pop
stos
mov
stc
mov
scas
aaa
sbb
or
out
jmp
jnp
mov
shl
stos
lock
fs
or
(bad)
rcr
pop
pop
scas
xchg
arpl
in
push
sbb
enter
arpl
cwde
ss
jge
inc
and
push
popf
jmp
lods
ss
push
cli
add
std
add
mov
nop
mov
cmps
aas
cmp
call
aaa
and
pop
into
int3
xchg
adc
jge
mov
je
sti
daa
sbb
fs
dec
cli
jp
mov
int
sti
adc
sub
and
mov
in
aad
mul
inc
mov
jg
push
cmp
cmovb
cmp
cli
cmp
mov
add
mov
add
dec
push
dec
lahf
xor
mov
mov
cld
dec
jg
and
xor
retf
ret
lahf
(bad)
aad
cmp
xchg
scas
movs
xchg
jecxz
out
ror
mov
push
pop
and
inc
popa
int
pushf
mov
mov
repz
adc
dec
xchg
adc
sub
pop
add
push
jl
sbb
mov
(bad)
cli
fbld
mov
data16
data16
jo
push
inc
xchg
js
in
sbb
ret
test
push
add
(bad)
xchg
lahf
jnp
fstp
sub
adc
lea
movs
ret
ss
test
xor
jmp
jmp
(bad)
jl
push
lods
call
mov
retf
jge
pop
hlt
stc
push
repz
sub
ss
sub
test
gs
(bad)
bound
xchg
jb
cdq
ss
repz
sub
lahf
jmp
push
jo
cmp
movs
xchg
mov
movntq
sahf
push
pop
cmp
or
push
dec
fldcw
ret
not
sti
sti
mov
fbld
jmp
push
jmp
adc
jg
adc
daa
retf
call
mov
mov
test
nop
outs
rcl
dec
cwde
sbb
nop
ja
and
inc
cmc
dec
jge
je
add
hlt
xchg
add
movs
inc
mov
xchg
fs
inc
imul
dec
xchg
repnz
mov
pop
sbb
pop
xchg
ficom
mov
out
dec
in
cmp
sub
mov
cmp
mov
inc
jecxz
sbb
movs
into
fsub
lods
lahf
push
jg
xor
mov
dec
(bad)
aas
pop
int3
xchg
lea
dec
and
pop
sbb
sub
aad
shr
adc
xor
xor
xor
loop
movs
fstp
xor
sub
out
outs
js
mov
mov
imul
call
fucomip
add
xchg
sub
jmp
and
jecxz
push
adc
inc
cmp
aaa
jg
push
fldenv
std
jg
and
inc
mov
imul
xor
pop
(bad)
fnstenv
fucom
mov
or
mov
in
mov
dec
xchg
movs
ins
je
popf
adc
inc
lods
cmps
mov
movs
popa
mov
dec
in
jnp
lahf
xor
mov
stc
ins
mov
xchg
iret
pop
sar
push
adc
xchg
push
pop
and
(bad)
arpl
stc
mov
stc
clc
lods
fld
mov
add
scas
(bad)
jmp
rsm
js
popa
sub
or
frstor
pop
mov
cmp
inc
shl
mov
pop
fidivr
cmp
outs
(bad)
cdq
pop
sbb
mov
rol
cdq
inc
pop
jno
lds
xchg
fdivrp
cs
loopne
cs
inc
sbb
push
cdq
inc
or
jnp
vcvtps2dq
aam
jo
jae
sti
lods
sub
dec
jae
(bad)
pop
inc
jge
ror
out
push
lds
fist
and
xlat
and
cwde
or
pushf
out
out
loop
inc
mov
bswap
sti
pop
ds
cld
les
shl
iret
ja
fisttp
jbe
adc
pop
adc
movs
inc
push
jp
ss
lods
inc
fcom
sub
jecxz
enter
xchg
scas
sbb
xchg
push
stos
retf
out
ret
mov
pop
std
loope
adc
stc
shl
xor
dec
ret
sbb
push
inc
test
push
push
pop
call
test
inc
pushf
fwait
jl
test
push
sub
or
repnz
aaa
sub
in
(bad)
movs
jmp
jmp
je
sub
stos
jne
cmp
leave
gs
pop
add
jmp
cs
push
loopne
loope
sbb
pop
mov
sbb
dec
out
mov
int
(bad)
scas
mov
mov
mov
inc
and
data16
adc
or
xlat
dec
push
ret
jge
and
sbb
mov
pop
jmp
push
xchg
rcr
loopne
ret
mov
push
sub
add
dec
sbb
push
inc
cmc
imul
push
daa
mov
mov
test
jo
in
cmc
mov
xchg
jo
ret
dec
in
jecxz
rcr
outs
lock
lds
inc
sub
std
outs
out
add
sbb
dec
lds
inc
adc
icebp
cmps
push
rcl
icebp
push
movs
aam
mov
mov
inc
pop
cmps
push
inc
mov
sahf
dec
jle
add
xor
xchg
call
xor
outs
mov
xchg
xor
pop
cmp
xor
and
stos
aaa
pop
rol
push
dec
pop
jmp
xlat
add
out
lea
(bad)
lea
into
jno
and
push
pop
cmp
push
mov
data16
xor
loope
xor
cmp
outs
cmp
in
ret
mov
push
es
cmp
mov
leave
(bad)
ret
mov
ffree
cs
stos
pop
scas
cmps
push
nop
xor
sub
int3
cmps
mov
loope
pusha
outs
mov
sub
push
xchg
pop
push
add
sub
pop
rol
pop
sar
xchg
pop
mov
loopne
cmp
inc
in
test
mov
das
in
test
movs
imul
lds
mov
pop
mov
imul
out
loope
test
ds
mov
sub
mov
xor
js
sahf
enter
in
hlt
in
fld
bound
and
test
push
xchg
xor
adc
push
push
fidiv
neg
fdiv
dec
and
add
fstp
xchg
dec
jns
(bad)
fadd
mov
enter
pushf
inc
out
pushf
pop
sub
fsubr
or
sar
and
mov
add
jae
into
dec
fbstp
xchg
test
imul
test
cmps
in
movs
sbb
mov
repz
sub
dec
xchg
push
and
iret
push
imul
lds
icebp
mov
add
and
int3
scas
pop
and
xchg
xchg
daa
ins
add
push
(bad)
and
cs
cmp
arpl
gs
outs
scas
popa
mov
mov
fst
add
loopne
add
xor
pop
fldenv
xchg
xchg
ins
sysret
sub
add
ja
adc
nop
pop
mov
test
mov
pop
ins
repnz
jns
je
or
enter
sbb
mov
pop
and
fld
lods
and
push
test
push
dec
push
add
xchg
cli
push
push
mov
cmp
mov
pop
or
mul
mov
leave
pop
dec
add
outs
pop
xor
dec
add
(bad)
stc
sbb
mov
fwait
rcl
mov
(bad)
icebp
xchg
dec
add
jnp
jae
lds
popa
lds
mov
add
and
push
add
enter
ss
pop
lods
out
(bad)
push
sub
test
xchg
shr
leave
mov
icebp
pop
movs
pop
mov
add
adc
push
dec
ins
xor
pop
adc
jns
test
icebp
add
xchg
adc
outs
add
add
inc
jne
aaa
into
test
jb
iret
aam
aam
(bad)
xchg
dec
clc
cli
add
or
in
xchg
pop
xor
xchg
mov
int3
add
push
ja
lds
jnp
loopne
ins
inc
mov
push
adc
cdq
xor
jp
mov
(bad)
pop
cmp
je
jmpw
ret
pop
(bad)
sub
pushf
pop
loop
sti
out
or
cli
add
stos
adc
and
mov
sbb
into
sar
xchg
(bad)
pop
in
das
out
sbb
push
mov
jecxz
push
or
push
jmp
ins
jmp
mov
jp
inc
call
mov
dec
pop
repnz
mov
add
sbb
and
sbb
cmp
pop
pop
push
dec
cmps
inc
shr
add
sbb
add
gs
inc
sbb
push
pop
xor
aad
pop
add
push
and
mov
push
addr16
push
cmps
ds
jb
mov
lods
pop
push
xchg
cwde
retf
aad
xchg
push
mov
inc
lods
adc
sbb
lahf
es
(bad)
cmp
or
xor
mov
push
xchg
add
stos
jb
ins
stos
dec
popa
ja
movs
or
add
add
prefetcht2
lods
xchg
gs
ffree
movs
push
mov
mov
mov
fstp
out
neg
sbb
pusha
cmp
push
jb
and
scas
inc
mov
les
pop
sub
test
mov
xor
icebp
mov
and
rcl
in
frstor
daa
lahf
and
iret
cwde
push
adc
jmp
inc
aad
cmp
dec
test
mov
es
pop
fwait
cmp
sahf
mov
jo
mov
jbe
mov
sbb
xor
stos
adc
xor
pop
jecxz
pop
push
icebp
pop
adc
jne
loop
push
inc
mov
jbe
lods
call
mov
xor
mov
or
mov
dec
call
xor
sbb
pop
jg
call
pusha
imul
movs
and
sti
jecxz
add
fstp
mov
mov
add
sbb
add
icebp
push
push
cmp
sub
dec
ret
push
or
fidivr
mov
or
mov
push
lahf
sahf
iret
loopne
mov
xchg
test
lds
test
xchg
sbb
and
cs
cmp
mov
xor
xchg
js
xchg
dec
or
push
scas
or
lods
jmp
or
rcr
hlt
push
shr
sbb
jmp
mov
mov
ja
dec
imul
inc
nop
je
pop
pop
ja
dec
push
pop
not
(bad)
sub
std
fdiv
ins
or
mov
(bad)
ins
aaa
shl
mov
push
mov
call
dec
pop
pop
mov
dec
movs
sbb
cmp
and
inc
nop
xchg
adc
inc
pop
xor
test
jo
jo
mov
fdivr
or
jne
dec
addr16
cmp
add
test
sbb
cdq
ret
cmp
(bad)
mov
pop
jmp
cmp
aad
call
je
jns
lods
test
nop
mov
xchg
gs
fwait
jae
or
push
or
int
push
mov
pop
mov
jb
repnz
sbb
pushf
ins
add
popa
das
movs
out
sub
ins
scas
pop
mov
sti
or
jge
sub
(bad)
sbb
xor
cmc
cmp
arpl
sbb
addr16
test
pop
imul
stos
aas
pop
cmp
and
adc
dec
scas
rcr
dec
lods
push
cs
push
jae
(bad)
sti
adc
test
lods
mov
adc
movs
leave
jb
dec
xor
ret
adc
pop
jnp
sub
stos
out
jp
mov
mov
and
add
push
xor
pop
in
call
push
shl
cmps
dec
(bad)
push
adc
mov
in
imul
mov
and
or
add
(bad)
iret
sbb
pop
js
xor
fistp
push
mov
fwait
data16
or
pop
pmullw
mov
add
sar
loop
xchg
dec
jae
js
popa
popf
cmp
int3
data16
push
and
sub
jo
nop
and
mov
push
mov
call
sbb
std
shr
stc
mov
fcmovne
sar
xchg
gs
popa
test
stos
or
test
pop
adc
pusha
push
sub
jb
cwde
cs
enter
mov
push
sub
test
xor
leave
fcmovnbe
mov
mov
cmp
shr
out
fwait
icebp
add
cmp
outs
xchg
inc
cs
and
adc
mov
(bad)
in
loop
les
push
mov
repz
out
add
sub
fcmovnu
inc
push
push
js
in
mov
mov
mov
push
add
cmp
mov
iret
mov
leave
and
inc
mov
cwde
test
pop
sub
stos
sub
stos
loope
and
repz
sub
sti
out
mov
(bad)
repz
mov
loopne
cmp
sub
je
inc
xor
ds
mov
imul
rcl
push
outs
jge
dec
cmp
gs
ins
retf
mov
int
or
sub
mov
in
xlat
mov
cmp
dec
push
pop
pop
lods
in
xchg
adc
pop
cmp
add
xchg
jge
test
enter
in
pop
mov
mov
xlat
sbb
pop
es
sar
cmc
xlat
dec
fcomp
or
fucomip
or
arpl
and
outs
pop
fistp
popf
add
dec
aad
jmp
xchg
jp
ret
jg
into
push
adc
add
xchg
in
pop
hlt
cmp
cmp
scas
mov
mov
mov
inc
mov
adc
cwde
clc
xor
fistp
fild
push
nop
ds
ss
call
call
hlt
sub
aaa
shl
rcr
fimul
in
xor
imul
sub
lahf
leave
mov
inc
and
xchg
xor
(bad)
in
(bad)
xchg
mov
mov
in
mov
add
and
inc
and
push
in
fst
mov
dec
lea
leave
mov
in
sahf
js
xchg
aaa
lea
adc
cmp
add
mov
push
push
pop
or
mov
call
stos
jbe
ja
lods
push
mov
cmc
dec
xor
ror
mov
and
aas
inc
xor
addr16
mov
cmp
push
adc
sub
xchg
adc
stos
and
jge
int
repz
fisub
sahf
bound
sub
in
int3
add
cmp
pop
xchg
pop
inc
loopne
test
ins
scas
popa
daa
add
xor
cmp
dec
mov
std
inc
ret
imul
pop
sbb
leave
add
dec
in
icebp
xchg
das
pop
das
lods
cmps
movs
std
cli
mov
mov
mov
cmp
fscale
xor
cdq
pop
pop
xchg
cmp
push
sub
test
inc
mov
pop
fs
mov
jmp
test
and
rcl
outs
imul
bound
loopne
mov
push
jmp
xchg
jb
add
pop
adc
xor
in
in
enter
stos
sub
adc
fild
mov
fadd
add
outs
pop
cli
rcr
sub
push
stc
hlt
out
or
xchg
std
and
inc
test
add
clc
popf
mov
(bad)
xchg
mov
scas
out
jle
push
mov
cld
retf
mov
in
mov
jg
xlat
lock
mov
ds
aad
movs
fcom
jb
adc
int3
(bad)
xor
aaa
outs
jecxz
mov
add
pop
xor
(bad)
mov
add
(bad)
scas
fdivr
call
cld
loopne
jns
xor
test
add
xchg
dec
lahf
outs
adc
int
sub
jb
test
and
or
adc
dec
dec
mov
or
mov
inc
aam
fimul
mov
hlt
jns
mov
std
mov
cld
inc
jmp
shl
xchg
stc
rcl
idiv
adc
iret
sbb
jbe
into
aam
enter
dec
je
cdq
fwait
push
pushf
xchg
cmp
add
pop
xor
sar
ins
stos
push
stc
imul
test
cld
cmp
fidiv
sub
cmp
int
fist
pop
stos
cmps
in
mov
mov
gs
out
mov
fs
and
lods
movs
mov
iret
aas
and
or
mov
movs
ds
fmulp
ficomp
jp
mov
mov
jnp
sti
jae
dec
dec
sub
jp
pop
fldenv
nop
adc
f2xm1
imul
stos
mov
pushf
pop
dec
mov
into
mov
loop
imul
pushf
push
test
retf
aam
mov
xchg
sub
std
fwait
mov
mov
hlt
inc
idiv
lock
imul
js
or
push
movs
adc
jno
cmc
ret
fld
movs
jbe
push
fisttp
nop
cmp
dec
sahf
mov
xchg
inc
cwde
inc
loop
bound
cs
scas
jge
js
stc
cmc
out
nop
add
cmp
xchg
(bad)
dec
dec
sub
xor
jle
sti
or
das
fcomp
push
popf
push
xchg
mov
aas
pushf
lods
(bad)
nop
cli
sar
inc
cmp
data16
push
rcl
bound
call
leave
adc
dec
test
or
sbb
icebp
sub
pop
pop
xor
aaa
stc
fst
sbb
xchg
in
loope
jnp
int3
lea
(bad)
dec
mov
retf
aas
inc
outs
leave
sub
ret
pop
shl
enter
rol
push
mov
push
jle
and
push
es
repnz
mov
xchg
sti
sub
mov
push
xchg
jnp
jle
lea
sbb
mov
cs
mov
or
leave
pop
inc
cmp
jne
push
fld
mov
(bad)
aam
mov
jns
ins
mov
movs
jle
xchg
mov
outs
test
je
jmp
fcomi
jmp
(bad)
mov
sbb
leave
push
sbb
push
shr
sub
mov
jne
add
mov
jmp
ja
mov
mov
and
mov
xor
jmp
popa
push
outs
push
and
ins
or
pusha
ja
mov
std
cmp
call
xchg
jp
jae
or
sbb
js
dec
hlt
push
pop
fimul
nop
in
pop
push
inc
in
xor
repz
adc
in
and
push
int
test
das
loop
add
jp
pop
imul
sti
jae
mov
jne
adc
test
in
es
jge
into
or
cmp
sbb
pop
add
rcl
sbb
movs
popf
cmp
leave
jno
pop
add
mov
in
add
sahf
pop
pop
inc
pushf
out
out
mov
aas
sub
imul
mov
or
mov
xchg
pop
fpatan
es
pusha
sbb
or
icebp
outs
xor
push
jp
stos
mov
test
mov
cmps
cdq
mov
sahf
mov
gs
push
sub
xor
in
jbe
loop
out
ror
sub
mov
in
retf
fs
fwait
ret
cmp
push
mov
xchg
jne
mov
jns
and
jge
and
fst
f2xm1
cmp
jmp
mov
js
pop
nop
cmp
add
cmp
icebp
xor
aad
jnp
sahf
popa
in
sbb
mov
in
add
stos
xor
dec
sbb
and
enter
and
jne
mov
pop
out
sar
push
pop
mov
dec
xchg
test
sub
mul
adc
fs
out
into
and
pop
dec
repz
cld
inc
mov
and
shr
jbe
ss
jmp
sub
jnp
add
or
fnsave
ret
adc
pop
pop
rcr
jae
and
pop
pop
mov
stos
push
mov
or
outs
out
mov
sub
sbb
neg
jmp
push
(bad)
adc
std
fidiv
mov
mul
pop
clc
mov
or
sbb
repz
mov
repnz
xor
shl
fnstcw
xor
pop
jge
cmp
fwait
xor
rcl
xor
cmp
cmps
arpl
xchg
ret
and
adc
inc
test
mov
add
popf
xor
stc
xchg
push
push
jecxz
sub
xchg
scas
jge
cli
nop
dec
stos
adc
cs
mov
mov
lea
int
adc
jmp
add
cmps
jp
and
add
push
sbb
je
ficom
nop
cmp
hlt
adc
test
or
repnz
mov
pusha
mov
test
xchg
lods
mov
call
not
and
lock
mov
rcl
fnsave
xchg
sub
mov
sbb
sbb
dec
sbb
xchg
adc
and
test
pop
jbe
jecxz
xchg
xor
jle
push
fisttp
shr
cdq
loopne
test
pop
inc
pop
bound
popa
fwait
std
xchg
jmp
movs
or
cmp
lods
mov
mov
int
test
imul
lahf
or
push
ret
adc
adc
pop
(bad)
lds
(bad)
jmp
fidiv
mov
jp
pop
ret
sub
add
ja
jbe
mov
fwait
out
add
out
or
and
mov
mov
out
ds
push
xchg
(bad)
test
ret
cdq
sub
(bad)
sbb
mov
inc
pop
xchg
push
mov
lods
inc
scas
jo
push
pop
xor
fnstsw
retf
pop
stos
shr
mov
or
push
enter
retf
mov
fwait
ins
sub
in
movs
cwde
push
fs
or
adc
xor
jmp
mov
mov
add
dec
sbb
sbb
sub
mov
adc
and
js
push
sbb
xor
mov
into
xchg
adc
das
xor
(bad)
push
jbe
lds
bound
add
(bad)
ja
lahf
int
bound
cmp
repnz
out
std
jae
nop
sub
sbb
mov
call
scas
fstp
int
jmp
pushf
je
movs
pop
test
xchg
adc
push
fdiv
mov
xchg
outs
jmp
cs
xor
cmp
stos
mov
(bad)
(bad)
mov
shr
pop
(bad)
cmps
js
retf
les
cld
push
stc
cdq
(bad)
jo
add
dec
cs
inc
shr
lods
ins
rol
jbe
dec
mov
arpl
dec
sub
(bad)
lock
(bad)
cmps
leave
push
lahf
sar
mov
pop
dec
out
jnp
ins
pushf
xchg
fsub
data16
jmp
inc
(bad)
mulps
hlt
mov
aaa
dec
out
mov
out
cmp
loopne
jge
inc
stos
inc
(bad)
ja
jns
xchg
pop
xchg
cmps
sbb
aad
dec
xor
rcr
stc
add
test
cli
std
fmul
ffreep
pop
(bad)
xchg
ret
sub
xor
jno
add
dec
add
aam
xchg
inc
fwait
iret
mov
or
pop
and
mov
xchg
cmp
movs
std
icebp
add
(bad)
repz
icebp
ret
ret
add
lock
xor
push
mov
(bad)
repnz
sbb
outs
push
sbb
add
add
push
(bad)
and
cmp
fldcw
jnp
pop
out
fnsetpm(287
sbb
into
imul
xchg
pushf
add
mov
mov
inc
sub
je
jmp
ins
imul
dec
jmp
dec
mov
or
xor
sub
call
xlat
(bad)
xchg
les
push
mov
inc
pop
xchg
mov
leave
xchg
mov
iret
inc
(bad)
shr
push
and
mov
xor
lods
int
sti
add
mov
imul
inc
jmp
out
lods
xchg
cmp
jmp
pop
retf
cwde
mov
into
fs
das
jns
cmp
lock
xor
fisubr
add
test
repz
jge
das
xor
popf
mov
jmp
in
mov
call
loopne
xchg
addr16
int3
loopne
out
pusha
jp
pop
xor
cld
in
lods
addr16
cmp
push
test
popf
push
retf
movs
jecxz
daa
ss
dec
bound
retf
dec
cmc
enter
mov
stos
mov
rcr
push
inc
test
shr
aam
cwde
sbb
xor
ins
mov
(bad)
push
nop
popa
pop
jae
mov
rol
jg
and
je
sub
xor
mov
cli
push
sti
dec
inc
aaa
mov
xchg
xchg
jmp
stos
dec
mov
jp
add
scas
stos
push
mov
xor
and
mov
xor
clc
sar
cmp
jne
mov
shr
pop
xchg
adc
int3
xchg
fistp
sub
(bad)
fdivp
add
int
std
xor
shl
data16
(bad)
mov
les
inc
xlat
xchg
(bad)
out
test
or
push
jp
mov
(bad)
rol
or
xchg
aas
xchg
retf
pop
imul
lea
adc
loopne
stos
loope
xor
mov
lahf
push
(bad)
jp
mov
sub
lahf
leave
aam
mov
or
test
js
xchg
jecxz
mov
fdiv
daa
test
jbe
or
mov
imul
xor
scas
mov
fsub
cdq
mov
sbb
cmps
ja
scas
pop
xor
or
or
clc
xchg
xchg
jecxz
xor
or
cmp
sub
xor
xchg
packsswb
imul
or
mov
sbb
dec
popa
mov
pop
stos
pop
pop
fchs
push
mov
jbe
fdivr
and
and
fwait
stos
mov
sbb
lock
pushf
dec
ins
sti
aam
mov
ds
push
test
add
popf
dec
pushf
and
xor
aad
jb
(bad)
std
cld
cmp
jp
push
enter
cmp
mov
jecxz
add
cmp
cmps
(bad)
inc
sti
xor
stc
aam
in
in
or
mov
mov
cld
test
daa
aaa
aas
jmp
xchg
pop
and
lods
cwde
ins
and
stc
das
xor
cmp
and
or
rcr
jle
imul
add
inc
sub
mov
leave
call
xor
lahf
(bad)
ret
cli
mov
push
push
shr
mov
ret
lock
mov
cwde
fbld
and
xchg
jge
lds
mov
imul
cmp
push
xchg
das
add
push
ja
jge
out
repnz
or
jb
popa
pop
sub
nop
xor
pusha
icebp
iret
xor
xchg
inc
lods
in
imul
ja
xor
lock
mov
sub
fwait
lock
mov
hlt
fadd
sub
js
jb
out
daa
gs
add
jge
push
movs
push
pop
loop
and
(bad)
sbb
and
imul
enter
adc
gs
jmp
into
sbb
dec
add
dec
sub
cmp
mov
or
jb
fwait
jo
pop
or
cmps
jge
in
clc
popf
xchg
jnp
dec
bound
pop
mov
outs
push
test
mul
or
jno
retf
add
sbb
cmp
add
inc
adc
es
push
dec
push
cmp
(bad)
in
test
jle
mov
sub
mov
bound
fst
or
jbe
loopne
sti
or
and
loopne
pop
icebp
lea
jno
into
mov
mov
lods
sysenter
adc
fldenv
js
xor
adc
ds
mov
neg
(bad)
fwait
sub
rcr
iret
mov
cmp
cmps
lods
cmp
xor
clc
stc
stc
movs
or
push
and
(bad)
inc
fst
inc
pop
gs
movs
test
mov
xor
lock
mov
lods
call
add
call
call
lods
push
or
pop
sub
cmp
(bad)
in
jo
adc
adc
test
daa
stos
mov
test
leave
pop
mov
dec
daa
jp
inc
ficom
(bad)
sub
adc
adc
cmp
dec
aaa
adc
test
cmc
out
xchg
jmp
leave
in
push
xchg
push
adc
push
and
and
out
ficom
mov
adc
xchg
adc
jg
or
nop
jl
retf
mov
cmp
mov
push
add
fstp
mov
stos
pop
fisttp
icebp
arpl
inc
cli
sub
sbb
xchg
pop
fdivr
sbb
cld
imul
dec
loopne
jbe
sbb
cmp
cmp
mov
jmp
pop
xor
ja
dec
cs
repnz
int
mov
ins
ja
mov
(bad)
mov
jns
cmp
ja
adc
pop
xchg
lds
push
cmp
movs
mov
in
jne
mov
loop
and
cmp
adc
xor
mov
push
xlat
add
es
or
adc
push
hlt
pushf
jmp
(bad)
idiv
retf
push
aaa
int3
lds
adc
inc
adc
jge
dec
je
push
mov
xchg
int
adc
stos
and
maxps
sbb
lds
mov
push
mov
mov
call
xchg
push
mov
sbb
retf
sub
scas
pop
pop
push
dec
in
dec
call
inc
sbb
mov
dec
cmp
jg
or
stos
inc
(bad)
psubsb
ja
lea
inc
jae
sub
fs
cmp
adc
mov
push
jns
test
fist
add
xor
jg
and
mov
xchg
repz
cmps
sub
sub
jg
fs
mov
push
shl
sub
rcl
test
outs
jl
scas
xchg
dec
data16
fild
mov
or
cli
mov
pop
test
push
cs
xor
retf
mov
pop
add
push
(bad)
int3
aaa
ret
dec
cmp
and
fs
test
mov
outs
mov
fild
pop
adc
gs
aas
sahf
mov
xchg
out
(bad)
addr16
fwait
dec
push
dec
cwde
inc
in
push
mov
cli
or
push
aas
repnz
dec
cmp
loop
cs
sahf
ss
mov
shr
sub
in
mov
xor
sahf
push
pop
(bad)
cmp
fnstsw
shl
inc
lds
xchg
mov
push
add
imul
mov
cli
or
ds
je
outs
jbe
sti
sub
pop
pop
jb
fwait
push
inc
arpl
and
sub
scas
xchg
lods
pusha
loop
in
add
sar
int
pop
or
rol
out
movs
sti
sbb
mov
add
push
repnz
sub
mov
adc
aam
sub
cmp
mov
data16
jo
sbb
push
clc
pop
cld
cmps
call
xor
pushf
enter
jp
iret
xchg
pop
out
add
add
xor
add
shr
or
pop
repz
sub
(bad)
cmp
sbb
ror
inc
sbb
daa
bound
(bad)
(bad)
in
jns
(bad)
fild
lds
fbstp
stos
test
or
popf
inc
int3
sub
daa
jno
fs
out
and
jge
jp
shl
inc
pop
cmps
and
imul
xchg
add
aad
xchg
jg
idiv
(bad)
stos
mov
addr16
or
push
leave
or
jmp
sub
ss
iret
cmps
add
les
xchg
fucomp
sub
in
fsub
fs
add
add
push
loope
gs
or
cmp
adc
pop
cld
shrd
pop
or
lods
or
pop
mov
or
test
imul
jne
xchg
mov
ret
jae
jmp
sbb
xchg
(bad)
arpl
adc
dec
xchg
int3
ss
push
fiadd
sub
and
sti
add
lock
xchg
aam
mov
push
jbe
cwde
imul
ins
fisttp
movs
int
in
repnz
repnz
push
xchg
rcr
gs
xchg
mov
dec
xor
dec
xlat
push
mov
push
inc
jmp
pop
adc
cmp
inc
sbb
jmp
or
pop
aas
mov
sub
fwait
push
stc
or
mov
add
xor
cdq
outs
(bad)
(bad)
pop
push
inc
ja
movs
dec
and
test
iret
pop
cmc
inc
lock
repz
add
cmp
dec
enter
sbb
and
rol
mov
cwde
inc
or
mov
retf
in
aad
mov
fsub
sbb
push
pop
js
cdq
ins
lods
(bad)
xchg
xchg
cld
jb
inc
mov
mov
(bad)
pop
pop
mov
pop
out
sar
sub
fadd
and
pop
or
push
mov
adc
loope
pop
pop
dec
ins
dec
aam
fild
xchg
xor
daa
retf
stc
adc
mov
je
add
ss
sbb
mov
sub
test
setl
sar
push
dec
cmp
retf
loopne
imul
xor
sahf
jo
fyl2x
out
aas
pop
or
xchg
or
mov
mov
fxch
iret
push
inc
(bad)
pop
and
dec
out
adc
sbb
ret
inc
and
jg
out
fdivr
popa
jno
popf
mov
jge
xor
fst
gs
push
mov
inc
cld
sahf
loope
cld
stos
(bad)
movs
data16
pop
pop
out
loop
mov
ds
dec
sub
mov
mov
pop
cmovge
test
fnstsw
lahf
mov
icebp
push
sbb
mov
out
push
stos
mov
lahf
mov
(bad)
inc
dec
in
dec
push
out
mov
cdq
pop
sub
xor
not
add
shl
adc
mov
test
xor
xchg
mov
int
data16
mov
add
(bad)
out
mov
cmps
mov
add
fst
xchg
or
aas
fdivr
cdq
adc
or
rol
adc
das
xlat
pop
pushf
pop
shl
aad
pop
popa
or
bound
jge
fidiv
imul
pop
mov
push
jae
aaa
hlt
cmps
xchg
popa
pop
inc
fisub
sub
aam
mov
cmp
call
clc
ins
sahf
addr16
fcomi
(bad)
and
cmp
mov
int3
fwait
dec
pusha
and
rcr
mov
add
push
adc
add
cmp
xlat
xor
inc
sbb
adc
or
clc
xchg
and
pop
sahf
clc
jo
test
sub
retf
adc
push
xor
mov
push
aaa
mov
add
sahf
push
loopne
fldl2e
das
fnsave
pop
push
sbb
stos
dec
shr
mov
fisttp
sub
ds
jle
cmc
fprem1
test
sub
add
push
retf
icebp
sbb
sahf
sub
cs
add
xchg
mov
jmp
(bad)
(bad)
aad
ins
fnstsw
cmc
js
popa
fdiv
test
inc
clc
sbb
pop
pusha
cmp
popf
jae
addr16
gs
pop
jo
push
(bad)
xchg
ja
movs
xchg
jnp
adc
int
(bad)
(bad)
push
or
sar
lahf
aas
mov
div
test
out
or
xor
aas
jge
jae
es
mov
les
add
mov
stc
push
movs
stos
fs
pushf
(bad)
pop
pop
inc
shl
mov
sbb
test
sti
adc
loopne
jnp
in
outs
adc
xor
mov
push
jbe
aad
movs
call
lods
rol
sub
xor
clc
mov
sbb
xchg
ficomp
fnstsw
stos
outs
cmp
popa
jp
push
iret
call
dec
repnz
mov
shr
hlt
dec
stos
pop
jo
xor
push
sti
out
sub
lods
dec
xor
cmp
call
ins
pop
test
jmp
inc
adc
retf
mov
nop
dec
dec
inc
inc
cmps
scas
mov
inc
sar
js
or
and
ins
xchg
xor
xchg
scas
fsub
sahf
fimul
jmp
outs
in
shl
adc
mov
sub
mov
and
inc
(bad)
in
adc
pop
mov
sar
pop
test
js
add
daa
repz
push
cmp
xor
inc
unpckhps
dec
pop
cmp
and
std
mov
fneni(8087
fdiv
mov
repnz
dec
mov
stos
or
xor
(bad)
jl
cmp
xlat
jno
sbb
or
mov
xchg
stc
das
mov
jg
mov
pop
jmp
or
xchg
xor
popa
fs
loope
stos
rol
fcom
fistp
lods
xor
pop
inc
dec
xchg
push
mov
pop
lahf
ins
cmp
jmp
sti
ret
pop
mov
sar
push
lahf
minps
mov
mov
hlt
sub
js
mov
lock
sbb
mov
jg
int
push
dec
sbb
and
fld
out
or
jmp
aas
push
dec
sub
call
adc
cmp
rol
inc
pusha
lock
adc
mov
in
cmp
shl
and
xchg
mov
cmp
ret
sub
fisttp
addr16
push
mov
loope
add
cli
inc
fwait
xor
popf
mov
pop
inc
add
(bad)
sbb
and
dec
mov
inc
scas
push
sub
je
pop
jae
inc
adc
lock
loop
cs
rsqrtps
popf
xchg
push
pop
or
and
sub
out
shl
jnp
fdiv
mov
aad
cmp
fisttp
jbe
cmp
cmp
test
repz
sub
or
outs
icebp
outs
or
cmp
std
(bad)
pop
cmp
arpl
out
and
dec
adc
mov
imul
test
cld
pop
inc
xor
aaa
es
cli
pop
mov
mov
push
cmp
cs
jnp
mov
jae
popf
jne
pop
pop
out
pop
jmp
and
push
les
test
(bad)
test
push
js
jb
gs
cmp
inc
int
mov
mov
or
dec
sub
movs
in
push
idiv
cmps
inc
(bad)
stc
mov
sbb
popfw
nop
sbb
push
add
in
cpuid
js
pushf
sub
in
ss
inc
js
mov
in
mov
dec
stos
and
cmps
iret
adc
outs
mov
or
push
dec
push
mov
or
cmp
sbb
push
out
ss
xor
inc
adc
jecxz
in
and
pushf
and
fcmovnu
in
in
lds
push
cwde
adc
inc
mov
add
cmp
mov
mov
adc
scas
loop
sub
jecxz
(bad)
and
in
xor
mov
cmp
jbe
push
les
xor
sbb
mov
xor
ja
mov
pop
inc
outs
inc
mov
out
out
bound
ins
jae
xor
(bad)
and
cmp
in
cdq
lahf
loopne
mov
outs
mov
into
nop
ficomp
inc
cmc
jl
jmp
movs
push
lods
fistp
std
push
or
lods
add
jmp
(bad)
fwait
in
call
xchg
jge
xchg
push
js
inc
fwait
mov
imul
rol
gs
push
(bad)
loope
xlat
fst
out
call
leave
hlt
mov
inc
into
arpl
scas
xchg
xchg
dec
out
push
scas
push
test
test
jno
adc
repnz
test
xchg
inc
xchg
lods
jg
cmp
data16
loop
in
mov
cmp
sub
xor
out
cmp
mov
xchg
mov
jge
(bad)
es
ins
repnz
out
or
xchg
jge
mov
mov
jg
imul
sti
xor
xchg
retf
push
inc
test
mov
aad
dec
sbb
call
pop
cwde
mov
cli
aaa
mov
outs
lods
inc
outs
push
xchg
aaa
lahf
ins
scas
cmp
shl
xchg
sahf
loope
push
lods
imul
out
mov
retf
mov
jle
inc
or
repnz
push
jns
pop
xor
xor
mov
ins
fcomp
mov
popa
fldcw
and
mov
mov
jns
sbb
or
das
ret
inc
sahf
jle
shl
mov
adc
dec
movs
mov
int3
in
retf
add
into
int
dec
mov
jns
and
in
xor
test
sahf
dec
lds
je
ins
int3
cmc
ficomp
ds
push
or
sbb
test
mov
jge
add
jmp
mov
xor
pop
ror
in
neg
sub
add
jo
aam
sti
rol
stc
les
pushf
and
mov
sti
dec
dec
xchg
push
out
stc
fnstcw
jbe
xor
das
leave
ja
call
adc
adc
dec
pop
out
fist
imul
mov
jae
out
arpl
int3
popf
imul
cs
xchg
mov
je
cld
pop
in
fiadd
jae
fisttp
adc
ret
pusha
fistp
movs
push
js
jle
dec
inc
call
jmp
sahf
(bad)
push
ficomp
rcl
adc
inc
jmp
(bad)
sbb
pusha
inc
in
push
jb
or
xlat
mov
aaa
pop
cmc
push
mov
paddsb
in
ret
mov
imul
add
ins
push
outs
mov
sti
pop
fiadd
and
cwde
pop
pusha
sbb
push
cdq
aad
sub
ret
out
pop
pop
cdq
outs
inc
in
and
dec
(bad)
pushf
xchg
pusha
mov
push
jmp
aam
fistp
xchg
jmp
stos
lahf
(bad)
xor
jns
pushf
inc
inc
hlt
idiv
or
mov
int
xor
cli
adc
out
inc
fnstcw
clc
aas
mov
sbb
ror
test
dec
fbld
movs
inc
stos
push
add
gs
sbb
xchg
fs
aad
sbb
dec
jg
xchg
arpl
fbstp
jg
fistp
scas
pushf
xchg
int
or
cmc
inc
or
outs
or
nop
fnstsw
add
xchg
and
jmp
pop
mov
ss
sti
aam
jno
fst
pushf
icebp
data16
out
pop
adc
cdq
das
jmp
pushf
test
jge
repnz
cld
std
xor
push
inc
ficomp
jl
xchg
das
inc
out
jecxz
sahf
daa
jmp
jmp
arpl
sub
add
ret
mov
enter
sub
xchg
and
in
loopne
scas
push
push
jmp
addr16
sub
xchg
adc
outs
sub
sahf
xchg
gs
push
cmp
cmp
inc
(bad)
(bad)
loop
xor
mov
pop
rcl
lds
xchg
iret
xchg
sub
jnp
ror
(bad)
xchg
jne
nop
stos
addr16
push
int3
fnstsw
lea
push
pusha
cmp
and
jl
or
adc
or
repz
adc
fs
or
je
adc
sub
adc
jp
fiadd
or
or
push
sub
inc
sub
test
xor
jo
xchg
outs
pop
faddp
xor
data16
jecxz
push
push
jae
mov
push
dec
addr16
xor
push
xchg
mov
cmps
loop
lahf
pop
retf
jmp
sub
(bad)
push
mov
cld
pop
cdq
add
es
jbe
add
retf
or
mov
jp
push
or
loopne
ins
dec
lea
mov
pop
pop
das
lahf
call
pop
jno
add
cmp
adc
xchg
jl
jbe
mov
xchg
(bad)
retf
dec
jns
out
scas
inc
fld
ds
jmp
and
xor
sub
fnstsw
dec
outs
cmc
pop
outs
mov
jno
adc
call
xchg
fs
adc
mov
jge
mov
pop
lahf
dec
fild
push
cli
jle
dec
jecxz
or
and
jo
je
pusha
arpl
cmp
daa
pop
ror
fcom
or
dec
add
cwde
icebp
adc
fimul
shr
fist
shl
cdq
cmp
js
jnp
mov
popa
ja
es
or
in
je
or
sub
inc
aaa
jnp
mov
lahf
idiv
aad
pop
mov
aam
aam
fisubr
arpl
mov
(bad)
mov
lock
or
ds
jbe
pop
mov
or
mov
outs
push
mov
xor
sbb
push
(bad)
jns
fadd
adc
sub
pop
pop
add
ja
pusha
or
cld
(bad)
fiadd
clc
sbb
or
xor
pop
das
sub
rcr
pop
cmp
rol
add
push
jecxz
(bad)
xchg
push
add
ss
or
cmc
push
or
cmp
cmp
stos
adc
lods
dec
sahf
out
dec
and
mov
pop
ja
in
jns
in
test
mov
adc
push
icebp
shl
adc
fisub
int3
dec
(bad)
sub
pop
push
aam
dec
repnz
leave
outs
jno
xlat
enterw
jo
mov
sbb
into
popa
aas
outs
push
into
lea
jo
retf
cmp
fiadd
mov
or
xchg
or
jle
repz
and
mov
int
pop
lea
repnz
xchg
jmp
and
nop
adc
aaa
jecxz
and
cmp
pop
mov
xchg
ficomp
test
sub
call
in
cmp
js
xchg
mov
cmp
movs
xchg
push
cmc
jo
out
jge
scas
pop
jnp
inc
xchg
push
aam
adc
mov
ins
shl
aam
or
les
sub
mov
loopne
inc
pop
xchg
in
retf
push
rcl
dec
bound
xor
in
loop
loope
dec
mov
je
(bad)
in
pop
in
adc
inc
mov
lods
ins
jbe
call
je
pop
int
dec
dec
idiv
out
fistp
bound
loope
lea
inc
xbegin
xor
mov
nop
jae
push
inc
adc
xchg
iret
sub
mov
xchg
ret
pop
jg
stc
sbb
or
(bad)
jbe
push
sbb
(bad)
xchg
scas
xor
inc
lds
cmp
dec
push
call
jne
bound
imul
ss
ins
popf
nop
push
in
hlt
cld
pop
(bad)
fdivr
jnp
mov
int
cli
and
and
push
(bad)
inc
inc
loope
sbb
std
adc
xor
sbb
icebp
stc
nop
inc
push
or
sub
mov
push
push
imul
je
xchg
push
xor
pop
mov
xchg
fistp
xchg
ss
mov
enter
aam
jns
pop
js
ror
test
or
pop
scas
add
cmp
mov
cmp
xor
cmp
jmp
outs
out
dec
and
in
cs
sub
call
fnsave
enter
jo
adc
lods
push
pop
outs
inc
test
call
ss
ffree
je
pop
enter
je
mov
mov
popf
popa
sbb
mov
pop
gs
lods
call
loop
loopne
(bad)
cmc
pop
aad
inc
sub
jbe
repz
sbb
cmps
jns
mov
ror
adc
mov
ror
movs
aas
rcl
jle
shr
dec
icebp
cmp
je
pop
lea
adc
sub
xchg
cwde
mov
mov
mov
inc
jg
mov
sar
out
or
(bad)
ja
rcr
cmps
fcomp
or
mov
outs
stos
jmp
inc
inc
sbb
pop
retf
(bad)
jns
sub
xchg
mov
sbb
mov
(bad)
sbb
push
adc
jmp
mov
clc
mov
cmp
xor
(bad)
jmp
cmp
fmul
pop
sub
(bad)
sbb
pop
adc
xor
out
outs
add
sahf
push
mov
popa
hlt
jns
ja
enter
cs
outs
sub
pop
cmc
loop
pusha
pushf
cmp
dec
fld
sbb
sahf
mov
or
mov
mov
fiadd
sub
stc
mov
nop
das
sub
es
mov
shl
mov
xor
pop
bound
addr16
dec
jg
fcmovu
push
inc
xchg
jle
pop
inc
stc
mov
mov
loop
imul
loop
push
mov
mov
arpl
push
sub
pop
and
jg
mov
stos
pop
xchg
cmp
cs
aas
mov
mov
das
ins
scas
shl
xchg
fwait
scas
cmp
mov
cmp
cld
inc
in
or
ret
pop
dec
lods
mov
dec
fstp
fdivr
mov
jno
cli
mov
ds
mul
rcl
ja
in
punpckldq
jmp
sub
stc
mov
loope
add
mov
popf
out
sbb
pop
sar
pop
push
and
mov
sbb
jmp
cmps
pop
xchg
adc
jmp
push
mov
sti
xchg
mov
mov
cmps
pop
ins
sub
fstp
ins
mov
mov
out
cmp
inc
and
and
call
ret
pop
shl
or
int
add
outs
adc
stos
aad
pop
adc
jbe
mov
xchg
mov
pop
xor
imul
cmp
push
pop
iret
or
and
ss
shl
add
jo
in
and
popa
shl
out
sub
mov
add
sbb
push
mov
hlt
sbb
imul
ret
lods
or
jle
sahf
out
push
and
inc
mov
xchg
mov
lock
stc
shr
push
xchg
pop
cli
add
mov
daa
repnz
pop
mov
stos
cmps
sbb
push
shl
push
add
add
data16
in
mov
jg
mov
inc
das
jb
mov
shl
cmp
in
or
dec
cmp
nop
pop
fucomi
mov
pop
jg
leave
(bad)
enter
stos
jae
movs
and
and
imul
mov
shl
sahf
mov
mov
es
frstor
push
mov
inc
xor
pop
xor
sti
repz
jnp
je
sbb
ins
mov
add
sbb
in
and
and
jbe
pop
jecxz
push
call
pop
dec
xchg
lea
lock
cli
sbb
hlt
mov
mov
add
movs
push
sbb
xor
and
test
mov
dec
test
rcl
fmul
(bad)
cld
scas
ror
and
xor
sub
mov
stos
(bad)
out
sbb
push
adc
mov
idiv
sub
fstp
dec
xchg
adc
add
daa
mov
ins
push
or
dec
div
push
(bad)
gs
(bad)
out
scas
jbe
out
call
jg
repz
dec
retf
xchg
mov
cmp
dec
mov
call
sub
inc
push
repnz
mov
pop
pop
mov
mov
or
inc
sbb
scas
push
xchg
test
and
cmps
stos
gs
mov
enter
sahf
inc
mov
add
add
ret
out
mov
mov
sub
imul
inc
jle
out
mov
or
sbb
push
xchg
out
iret
cmp
je
fwait
adc
fmul
inc
push
cmp
inc
out
stc
mov
or
push
inc
nop
icebp
xor
int3
(bad)
sti
inc
pop
sub
xor
pop
das
cwde
xchg
pop
int3
test
test
lock
iret
pop
and
xlat
inc
jle
and
jb
aas
mov
cwde
sbb
shl
lock
adc
push
ins
xor
add
xchg
or
mov
pop
ret
pop
dec
test
mov
or
mov
imul
sar
fcomp
(bad)
mov
popa
xor
enter
test
outs
mov
xor
xchg
cs
cld
mul
xor
mov
out
sub
cmp
push
xchg
or
ins
out
dec
and
or
cmp
push
inc
les
jecxz
sbb
ins
xor
or
mov
imul
imul
imul
cmps
ins
jge
sub
push
(bad)
pop
leave
add
mov
inc
adc
imul
dec
shl
dec
pushf
fwait
rol
aad
or
jmp
into
xchg
xor
nop
xchg
sub
inc
fistp
enter
shl
dec
in
outs
pop
and
mov
sbb
xchg
push
in
and
and
jg
clc
mov
cld
push
or
(bad)
(bad)
das
push
leave
push
cmp
adc
mov
adc
data16
out
push
test
mov
xchg
into
movs
jle
dec
xchg
sbb
retf
xor
add
(bad)
aad
fild
sub
repz
cmp
add
std
add
jmp
jnp
mov
mov
or
cmp
outs
mov
push
cmp
test
fild
and
or
loopne
adc
les
in
mov
push
add
jle
ret
xor
mov
pop
rcl
inc
jno
jle
inc
dec
and
jns
sti
or
fsubr
adc
mov
std
shr
mov
jae
fcomi
scas
cmp
popf
cdq
das
xchg
outs
ds
in
sti
rcl
jb
sub
call
mov
bound
daa
xchg
shl
mov
and
push
pop
push
mov
push
loopne
cmc
mov
adc
mov
fwait
or
mov
sub
in
push
(bad)
sti
imul
outs
movs
ja
mov
popf
iret
retf
push
jnp
int
(bad)
adc
retf
shl
int
jp
dec
inc
or
sub
pop
(bad)
or
sbb
sub
(bad)
ins
hlt
shl
jns
cld
dec
add
jge
mov
out
mov
push
in
dec
ret
inc
push
aaa
fst
xchg
in
test
mov
jl
xlat
pop
cld
pop
cmp
movs
jo
fisttp
adc
cld
jb
sbb
cdq
ins
out
mov
sub
pop
xchg
pop
push
test
rcl
pop
jmp
and
pop
cli
adc
mov
leave
inc
mov
cdq
mov
sti
ins
aaa
mov
aas
mov
add
pop
mov
fidiv
xchg
jmp
dec
enter
outs
add
mov
lahf
clc
mov
pop
cdq
stc
shr
sahf
pop
mov
call
lea
add
shl
inc
or
loope
pop
push
pop
hlt
mov
shl
cmc
popa
call
ss
aad
aad
cld
jge
xchg
stos
loop
enter
cdq
adc
aaa
cmp
pusha
inc
in
sub
cmp
cmp
call
jl
popf
mov
pop
loop
and
sbb
daa
jg
test
push
(bad)
neg
add
shr
dec
dec
jb
pop
scas
sub
and
adc
cmc
jp
mov
inc
shl
test
jle
xchg
rol
or
push
mov
cmps
cmps
clc
mov
add
(bad)
(bad)
sub
daa
xchg
out
mov
xor
xlat
pcmpeqd
sbb
(bad)
in
and
aaa
jno
push
dec
retf
dec
test
and
std
jmp
pop
add
pop
movs
ror
es
inc
cld
inc
adc
pop
sub
dec
add
(bad)
loop
mov
in
imul
sbb
loope
or
in
(bad)
outs
ds
je
loop
xchg
aad
shl
jne
mov
pop
in
mov
dec
adc
sahf
mov
call
ja
inc
fucom
cdq
and
mov
push
int
into
ins
inc
and
inc
xor
int
sub
sti
test
lods
mov
loopne
jmp
fwait
xchg
dec
adc
cmp
or
pop
and
popf
mov
lods
jmp
sub
add
push
imul
dec
call
jae
faddp
mov
pop
cmc
test
shl
cmp
mov
call
or
in
sar
dec
adc
loopne
mov
push
in
pop
jne
xlat
pop
pop
xchg
mov
outs
rep
mov
adc
cli
ja
sub
sub
pop
or
or
adc
dec
mov
jns
adc
sbb
iret
mov
mov
hlt
cmp
ins
jno
xchg
mov
neg
or
pop
ds
outs
xchg
mov
jmp
out
xchg
and
sub
(bad)
mov
cmp
sbb
mov
out
std
xor
cmps
sbb
mov
clc
(bad)
pop
jmp
shl
and
cld
(bad)
fidiv
mov
out
push
rol
test
add
ret
ror
pop
mov
xchg
push
ins
mov
xchg
add
dec
jae
pop
mov
arpl
imul
mov
mov
sbb
push
nop
mov
fimul
mov
sbb
pushf
in
inc
jl
dec
syscall
je
enter
push
loope
and
inc
movs
and
idiv
pop
jp
add
xchg
(bad)
pop
scas
lea
jns
icebp
xchg
mov
mov
fs
or
test
outs
les
das
or
or
jo
ins
loopne
push
addr16
fsubr
mov
daa
aaa
adc
(bad)
pop
fdivr
fst
popa
add
in
xchg
push
dec
push
mov
adc
push
ret
enter
xchg
jns
mov
cmp
xchg
loopne
jns
js
enter
or
adc
push
or
push
push
in
retf
sbb
push
push
mov
ja
inc
mov
pop
adc
cmps
das
addr16
jmp
pop
jmp
add
mov
push
loope
mov
nop
and
or
pop
mov
test
mov
push
mov
push
jae
cmp
adc
in
test
jb
arpl
xchg
and
mov
das
lds
mov
xchg
jl
arpl
and
pop
shr
jb
or
xor
jb
es
add
imul
in
mov
cdq
fwait
scas
lods
(bad)
fisubr
mov
mov
push
and
das
enter
dec
pop
cmc
jnp
mov
sbb
sub
push
lods
xchg
call
mov
(bad)
stos
clc
mov
mov
loopne
arpl
and
dec
add
pop
retf
cmp
call
or
test
jae
dec
outs
or
mov
pop
adc
icebp
aas
push
and
sahf
ja
inc
jl
ja
jmp
mov
dec
cmp
test
cdq
push
xchg
call
scas
das
and
adc
pushf
cmp
xor
mov
adc
inc
xchg
xor
add
fidivr
rol
xor
fs
lods
dec
ret
mov
outs
inc
inc
(bad)
cwde
addr16
xchg
out
push
mov
retf
mov
xor
sub
jne
and
cli
enter
out
sub
mov
test
mov
mov
adc
dec
fldenv
push
mov
repnz
or
adc
mov
adc
imul
mov
push
lods
loop
ret
cmps
out
aam
loopne
lahf
sbb
cmp
add
pop
jns
cmps
cmp
sub
dec
push
sbb
cmp
sbb
mov
push
or
xchg
scas
les
add
xor
xor
sbb
sub
pop
sub
test
jo
xchg
mov
retf
adc
mov
xchg
mov
aaa
in
shl
fcomp
(bad)
fidiv
or
sub
loope
cmc
(bad)
outs
adc
jo
or
xchg
call
jle
and
push
xchg
leave
jmp
shr
in
mov
jbe
pop
inc
add
lods
dec
into
in
shr
jne
adc
ja
popa
cmc
das
das
dec
call
rcr
push
push
sub
mov
xlat
mov
imul
leave
sbb
or
jne
and
push
sahf
pop
inc
xchg
dec
add
xor
mov
arpl
hlt
in
add
outs
add
xor
iret
cmp
mov
out
loop
sbb
and
push
das
add
fs
add
and
loop
pop
or
aad
rol
retf
mov
call
push
mov
pop
repnz
push
lea
push
popf
fsubr
in
aas
fmul
shl
fsub
pop
and
aas
mov
mov
xor
adc
sahf
fcmovnb
or
cmps
bound
shl
or
pop
adc
mov
test
mov
add
ror
sub
test
cmp
out
jmp
push
not
idiv
dec
add
out
mov
mov
and
jns
jbe
cmp
mov
xchg
adc
mov
lahf
cmp
(bad)
in
aaa
mov
jns
lahf
repnz
jg
call
mov
and
outs
push
dec
ret
push
aad
stos
pop
jmp
xchg
and
mov
add
test
daa
pusha
jns
jmp
and
fstp
jg
popf
ja
aaa
adc
retf
or
dec
out
or
pop
std
mov
shr
jecxz
push
aad
(bad)
adc
daa
repz
leave
sub
in
loopne
mov
cwde
pop
mov
repz
xor
pop
adc
sbb
add
imul
mov
add
sbb
loop
inc
or
push
jmp
ror
add
ret
pop
lods
mov
dec
lock
push
inc
push
inc
mov
sbb
add
loopne
(bad)
mov
cdq
and
rcr
out
(bad)
xchg
in
add
inc
pop
add
cmp
mov
jmp
sbb
cli
movs
dec
les
in
inc
stc
in
cs
mov
xor
sbb
int3
retf
adc
lods
ds
pushf
xor
mov
clc
jnp
not
mov
xchg
repz
popf
jnp
retf
(bad)
ret
mov
imul
imul
int3
fwait
dec
xchg
pusha
fldcw
inc
out
retf
dec
movs
je
jp
jbe
lds
ja
test
jmp
sti
shl
xor
fs
movs
je
pop
loop
enter
mov
fwait
add
dec
gs
xor
sar
xchg
jmp
stos
add
pop
scas
add
xor
in
outs
fadd
in
xor
or
push
add
xchg
and
sub
test
pop
mov
arpl
dec
outs
loop
ror
push
sub
push
and
inc
dec
movs
shl
fistp
xor
dec
push
ins
call
sub
xchg
pop
xlat
xchg
cmp
jmp
jecxz
push
cs
mov
or
inc
jmp
sub
inc
cdq
xor
fisttp
test
dec
mov
push
into
jge
loope
sbb
jne
out
repz
loope
mov
stos
push
xor
js
sub
mov
lea
jbe
pop
jecxz
jle
lahf
rol
or
xor
inc
or
dec
cmps
loope
inc
jp
cld
sub
dec
mov
xchg
outs
hlt
adc
xor
pop
mov
idiv
dec
add
pop
cmps
sbb
pusha
jb
frstor
mov
dec
popa
sub
cmp
aad
es
mov
cdq
push
xchg
jl
addr16
cmps
add
fcomp
mov
xlat
shl
lods
ds
scas
cmp
test
or
mov
rol
add
loopne
sub
inc
jecxz
push
fwait
jle
mov
xor
dec
pop
(bad)
jnp
rcr
fimul
jmp
or
push
imul
cwde
dec
inc
mov
out
pop
outs
rcr
or
int
ror
sub
out
cmp
fdiv
out
pop
mov
dec
sti
push
shl
cmp
or
repnz
fwait
(bad)
out
mov
mov
jecxz
mov
ss
stos
adc
jmp
fidivr
mov
stc
dec
cld
stc
repnz
push
fwait
icebp
fmul
jecxz
mov
sub
loope
xor
out
mov
cmp
xchg
ins
test
mov
shr
repz
and
cmp
shl
pop
mov
jg
sbb
shl
clc
scas
xchg
pusha
mov
mov
icebp
ins
repnz
pop
adc
pop
cmp
out
popf
test
movq
mov
imul
and
sahf
inc
mov
mov
ss
add
fcmovbe
std
(bad)
cmc
mov
sub
into
sbb
imul
cmps
jne
add
and
fs
mov
mov
ja
mov
mov
sub
shl
out
inc
inc
inc
inc
pusha
lods
test
push
or
in
inc
cli
pop
fcmove
scas
call
jo
xchg
inc
xchg
sahf
push
clc
les
push
push
mov
mov
sbb
jg
mov
jae
call
pop
pusha
sub
jmp
adc
xor
mov
nop
mov
jns
sbb
int
(bad)
ror
inc
dec
add
xchg
test
mov
or
movs
xchg
or
mov
mov
dec
fdiv
les
sub
cld
and
push
push
mov
xor
and
ja
mov
outs
pop
mov
les
dec
int3
pusha
xor
ret
jg
or
cmc
test
push
sub
mov
sar
mov
jecxz
mov
jbe
(bad)
lahf
cwde
push
shl
cmp
in
cs
lock
push
push
push
stos
gs
test
(bad)
xchg
inc
cld
xor
hlt
stos
test
ja
xor
out
je
cld
imul
or
mov
pop
pop
int3
out
rcl
add
mul
dec
retf
add
ror
jmp
cli
dec
xor
cld
jge
das
nop
xchg
hlt
loop
sbb
mov
jecxz
mov
lock
pushf
mov
and
es
sbb
call
add
jecxz
dec
mov
push
mov
sub
pop
and
shl
adc
or
add
push
dec
add
mov
jmp
stc
mov
dec
xor
test
xchg
inc
(bad)
call
lock
sbb
repnz
ss
outs
dec
aaa
dec
repz
pop
iret
jno
jnp
in
fnsave
sbb
dec
sbb
push
aam
shr
cmp
mov
cli
add
aad
fidivr
mov
add
mov
adc
inc
aam
js
cmp
fisubr
sbb
into
lock
aaa
push
xor
(bad)
(bad)
mov
in
adc
dec
clc
std
cmp
mov
sbb
mov
cmp
es
bound
sub
sub
or
push
enter
(bad)
push
into
jbe
jae
scas
dec
adc
idiv
lock
shr
sti
test
push
sub
lds
mov
sbb
xor
jae
sub
sub
gs
fwait
xchg
push
ret
call
cmp
out
sub
scas
inc
loopne
(bad)
sub
ins
xchg
xor
(bad)
ins
sub
scas
idiv
cmps
inc
ficom
mov
jbe
mov
jb
xor
test
int
cld
xchg
adc
jne
in
mov
add
sub
mov
jb
cmp
fsubr
ins
jp
shr
repz
je
adc
ins
or
in
inc
and
in
push
jle
sub
mov
out
jns
into
or
adc
in
sub
outs
jo
or
ja
mov
test
dec
mov
adc
cmp
or
jmp
inc
call
fdivr
or
jge
jns
in
test
and
and
dec
bts
mov
xchg
out
push
cmps
aad
adc
hlt
or
in
adc
inc
sub
cmc
pop
and
rcl
lods
mov
popa
fld
mov
out
ds
test
pop
cmps
inc
icebp
in
push
call
sbb
cmps
out
int3
add
sub
add
sub
mov
inc
scas
adc
add
imul
mov
mov
lahf
pop
vsubsd
adc
test
push
add
or
adc
loope
jle
jl
mov
pusha
pop
push
in
jge
lahf
test
sub
add
psrld
stos
fimul
xchg
pop
movs
add
mov
mov
push
ss
xor
jbe
push
jno
in
inc
adc
pop
sahf
mov
(bad)
fmul
sbb
(bad)
repz
es
inc
and
xor
jb
aam
sbb
sbb
mov
and
and
xor
sti
test
mov
sti
add
inc
mov
js
call
push
lods
or
popf
jle
mov
add
shl
inc
mov
stc
jo
add
sti
ins
mov
sub
fdiv
mov
(bad)
rcl
dec
out
call
out
mov
neg
xchg
outs
inc
fptan
test
push
ins
adc
jmp
inc
push
ja
inc
mov
je
add
xchg
mov
lods
call
push
ret
int
xchg
mov
mov
mov
jge
mov
repz
or
in
xor
or
push
cmp
xchg
jbe
inc
ds
fwait
pop
mov
mov
int
xchg
addr16
js
in
pushf
xor
cmp
stos
push
jp
and
sbb
lock
aad
mov
jl
movs
int
(bad)
stc
loop
(bad)
push
call
adc
sbb
dec
fistp
lock
xor
(bad)
sub
sbb
stc
cwde
test
std
ss
dec
or
cmp
xor
sti
jmp
xlat
(bad)
imul
test
sbb
add
sbb
adc
and
ret
jnp
scas
inc
pop
jno
outs
das
dec
imul
push
paddw
call
jno
ret
push
test
mov
mov
dec
push
dec
inc
mov
test
sbb
mov
nop
inc
lea
cmp
sbb
scas
sahf
lock
ror
dec
cmp
push
inc
dec
push
js
out
xchg
add
mov
or
dec
mov
jo
dec
ret
push
and
sub
jbe
fcomp
push
jmp
(bad)
call
ror
lea
pop
vcvtsi2ss
test
int3
jb
aam
add
jne
pop
xchg
mov
mov
in
lods
dec
jo
dec
fadd
js
push
sbb
sbb
shr
mov
out
mov
add
fwait
pop
xchg
dec
xchg
rcl
pop
add
sub
fistp
push
dec
adc
and
fst
mov
mov
ret
retf
xor
lock
je
ret
xchg
jp
cmp
not
push
cmp
sub
and
stos
and
inc
addr16
xchg
aas
cmp
or
xor
inc
adc
jecxz
(bad)
sbb
(bad)
jle
(bad)
and
daa
call
add
mov
add
fwait
cmp
aas
xlat
mov
xchg
leave
pop
call
test
mov
outs
sbb
popa
aad
mov
sbb
pop
jnp
inc
mul
inc
push
xchg
jp
leave
in
pop
test
sti
popa
iret
xchg
lock
or
and
cmps
inc
or
clc
and
inc
ror
loop
pop
mov
xlat
jle
jno
(bad)
enter
test
mov
dec
sub
add
iret
add
jno
or
mov
movs
leave
jne
out
push
adc
call
xchg
(bad)
push
and
jecxz
cli
xlat
dec
dec
popa
fdiv
pop
xor
dec
stos
cli
out
out
fdiv
fadd
mov
xlat
rol
cli
loope
(bad)
js
add
test
cld
clc
lea
gs
inc
movs
add
pop
clc
mov
jnp
dec
mov
in
sbb
inc
call
lea
jmp
sbb
mov
cmp
arpl
mov
jno
(bad)
dec
jg
movs
pop
out
movs
or
int
data16
push
adc
xchg
adc
xor
sub
cmp
push
sbb
push
mov
sbb
sbb
jecxz
lock
popf
jge
xor
jbe
pop
lods
adc
mov
repnz
dec
push
push
jp
js
dec
lods
(bad)
push
jmp
pushf
xchg
and
add
lea
xor
mov
sub
jl
(bad)
hlt
ficom
mov
xchg
bound
sbb
popa
sar
test
in
adc
mov
jp
xor
(bad)
(bad)
xchg
out
icebp
(bad)
pop
sub
inc
mov
test
(bad)
push
mov
pusha
dec
inc
(bad)
dec
ins
lods
es
ja
stc
push
rcr
add
or
mov
and
or
jmp
das
push
stos
mov
mov
ret
or
dec
and
jp
or
retf
or
adc
(bad)
xor
loopne
clc
pop
ficomp
mov
or
xor
fld
xchg
xchg
or
dec
out
(bad)
(bad)
cld
bound
mov
xlat
push
or
sar
outs
inc
mov
inc
sbb
(bad)
into
dec
movs
mov
ss
gs
sbb
sbb
xchg
push
sub
ror
lock
xor
int
enter
jae
jp
(bad)
jmp
ss
imul
pop
xor
mov
iret
xlat
xchg
adc
jne
xchg
mov
dec
add
sub
ret
pop
(bad)
call
cli
(bad)
adc
scas
pusha
shr
adc
div
imul
sub
mov
data16
jmp
adc
js
aam
scas
pop
xchg
(bad)
dec
(bad)
aas
mov
mov
ja
out
nop
mov
cmc
push
icebp
cld
(bad)
sar
mov
mov
(bad)
dec
mov
outs
or
scas
nop
fnstenv
retf
imul
inc
add
pop
mov
push
inc
adc
xchg
mov
or
cmp
xor
sbb
sbb
pop
jl
loope
xor
daa
pop
dec
cmps
cdq
retf
push
stos
scas
stos
je
jne
sbb
(bad)
js
adc
jp
les
movs
cmp
stos
fimul
call
inc
retf
mov
adc
jmp
imul
xchg
mov
ins
jge
rol
add
nop
push
or
mov
daa
fwait
daa
add
sar
xor
push
cmp
ret
outs
(bad)
jge
stos
adc
inc
shr
loop
mov
lods
dec
sbb
outs
ror
mov
ret
enter
mov
fiadd
mov
ror
call
xchg
data16
add
pusha
cmp
lock
fiadd
loope
mov
cmp
cld
jmpw
cmp
ins
icebp
xor
jae
add
sub
pop
retf
push
cmp
inc
lods
pop
jae
dec
jnp
inc
adc
rcr
ss
sbb
cmp
aaa
mov
push
mov
out
mov
jle
nop
adc
cmp
xchg
fld
cmc
shr
test
jmp
(bad)
xchg
neg
sti
pop
mov
in
or
and
push
js
popa
mov
add
mov
clc
mov
mov
pop
mov
(bad)
arpl
cli
loope
test
pushf
dec
adc
and
pop
push
mov
stos
xor
adc
mov
sub
test
ficomp
(bad)
jmp
imul
scas
adc
sub
and
or
and
dec
mov
xor
or
pop
sub
cmovs
mov
jns
push
pop
or
inc
add
mov
outs
mov
cld
mov
cmp
or
lods
xor
adc
cdq
mov
pop
lods
push
aaa
jle
xchg
add
adc
sbb
in
dec
imul
mov
lds
out
sbb
xchg
retf
sbb
and
mov
sbb
imul
cmc
mov
pop
imul
xchg
add
mov
mov
cmp
mov
ret
aaa
push
pusha
int3
fnstsw
sar
mov
pop
sub
jmp
in
sub
aaa
push
into
cmp
adc
mov
pop
(bad)
pop
lods
xchg
mov
xchg
test
mov
fnstcw
stc
cmc
icebp
xchg
lods
and
loopne
sbb
xchg
mov
fcmovnb
mov
xlat
mov
icebp
add
jbe
mov
or
fs
push
adc
xor
sub
xchg
jo
repnz
mov
popa
xchg
call
inc
es
inc
and
mov
mov
iret
into
test
mov
ret
lods
jmp
in
sub
push
jmp
int3
test
xor
push
pop
(bad)
mov
mov
cmps
add
test
xchg
repnz
jmp
cld
call
push
rol
push
cmp
inc
push
dec
pop
xchg
inc
xor
mov
sub
pop
jp
sbb
leave
retf
xchg
imul
mov
dec
ins
popf
cmp
dec
mov
ja
aam
jno
sahf
stos
push
xchg
jl
loop
lahf
cmps
inc
push
mov
fcomp
push
in
in
sub
add
adc
aaa
cwde
popf
mov
or
in
xchg
mov
dec
sbb
(bad)
popa
mov
lods
add
or
leave
lods
gs
loop
jbe
leave
push
repnz
les
out
mov
loope
mov
sbb
pop
add
pusha
xchg
mov
inc
scas
(bad)
pop
fld
mov
inc
aam
faddp
dec
mov
or
push
jne
lahf
rcr
or
les
aam
call
mov
xlat
xchg
loope
aam
(bad)
imul
push
dec
(bad)
dec
(bad)
fwait
add
test
(bad)
dec
cmp
mov
pop
xchg
adc
cmp
cld
imul
or
xor
sbb
pop
nop
push
ret
fisubr
pop
mov
sahf
add
ror
or
sar
cwde
xchg
lock
sub
jge
lods
sahf
add
mov
mov
stos
neg
daa
xchg
repz
call
and
shr
pop
and
ja
and
or
cmc
stos
cld
(bad)
cmp
out
fcom
mov
fs
(bad)
fs
and
mov
bound
mov
push
dec
ins
in
fs
pop
call
jle
bound
push
retf
call
inc
jmp
and
stos
pusha
loopne
lds
icebp
cwde
dec
imul
mov
pminub
call
scas
(bad)
rol
dec
cwde
outs
jecxz
or
call
mov
add
mov
popa
pop
mov
cmp
dec
adc
xor
cmp
push
push
push
add
scas
out
movs
bound
mov
or
add
fwait
xor
bnd
jecxz
lods
mov
mov
daa
in
sbb
shr
and
in
scas
dec
out
pop
dec
fidivr
push
mov
pop
pop
repz
aaa
mov
mov
jo
scas
es
or
sub
cmp
xlat
aaa
jg
sub
jmp
dec
push
add
mov
jle
stos
stos
cdq
push
je
gs
push
lock
add
das
xor
sub
shl
repz
hlt
push
push
rcl
sbb
jno
ror
out
jns
sub
cmp
sbb
(bad)
cld
jns
push
mov
pop
adc
jg
and
inc
xchg
retf
push
stos
mov
pop
push
test
mov
pop
mov
and
cmp
(bad)
xor
sbb
repnz
cmp
pop
cmp
clc
js
lods
retf
sbb
cmp
repz
pop
ss
jb
pop
iret
retf
mov
sub
xor
jp
cld
in
fld
icebp
sti
xor
mov
mov
scas
or
dec
adc
jno
jle
pop
rcr
test
sub
popa
mov
xchg
stos
push
jnp
in
mov
or
mov
and
and
aam
sbb
repnz
xor
call
mov
adc
jbe
cmps
adc
xchg
aaa
jge
push
xor
test
mov
scas
and
not
and
in
and
pop
sbb
fprem1
addr16
not
fldcw
adc
std
in
outs
xor
js
xchg
cmp
jp
sbb
cmp
arpl
mov
sti
adc
adc
std
icebp
pop
cmp
aam
shr
ss
loopne
jbe
rcr
leave
test
and
cmp
mov
xchg
(bad)
sbb
mov
inc
nop
mov
retf
push
cmp
push
mov
pop
sub
xor
jg
or
push
js
or
imul
sub
sbb
daa
mul
xor
push
std
mov
outs
(bad)
pop
fiadd
mov
push
and
sub
mov
cmovae
sbb
cmp
mov
xchg
jb
popa
inc
test
addr16
jno
hlt
and
fs
inc
repz
pop
dec
rcr
and
pop
mov
sub
test
push
sbb
adc
cmps
clc
rcr
out
cmp
nop
sahf
push
and
xor
imul
sahf
xlat
add
pop
jmp
movs
ret
fistp
xchg
out
mov
mov
bsr
sub
cmp
cmps
add
leave
dec
lds
ds
or
xchg
or
cmp
sub
lods
aas
pop
push
test
dec
and
cmp
xor
cmp
mov
add
mov
jmp
out
pushf
mov
jmp
bound
ret
rol
or
dec
sbb
mov
icebp
and
fsubr
pop
push
jbe
dec
mov
addr16
jp
call
out
es
sbb
push
jns
dec
mov
int
mov
inc
loopne
dec
jle
js
retf
xchg
aad
jle
xchg
clc
cld
xchg
lods
fcomp
loopne
int
xor
pop
sbb
int
sbb
xor
mov
ins
cli
push
cmps
cs
push
das
and
mov
addr16
shl
fst
push
xchg
movs
lea
push
jmp
mov
inc
and
mov
mov
dec
push
bound
int
(bad)
mov
or
jne
(bad)
popa
sub
xchg
inc
push
leave
sbb
daa
jmp
mov
push
rcr
or
mov
sbb
aad
mov
fld
jo
lea
loop
push
xchg
lar
jle
movs
popf
adc
or
fisubr
daa
mov
iret
imul
fsubr
jns
mov
sbb
iret
adc
sti
or
div
cwde
mov
pop
in
add
fwait
mov
jmp
movs
(bad)
jae
mov
sahf
out
in
repnz
popa
jmp
fdiv
sahf
push
mov
dec
cmp
push
sbb
and
mov
cld
xor
jmp
add
adc
dec
xchg
loop
aas
out
shl
xchg
(bad)
pop
mov
and
daa
cmp
jne
aam
and
sub
mov
pop
lods
cmps
add
pop
cmps
(bad)
aam
icebp
jnp
cli
push
cmps
cmp
hlt
sub
jg
bound
fdivr
ja
pop
and
repnz
sbb
rcr
into
pusha
int
sub
in
dec
push
lods
sbb
aam
mov
nop
fst
sub
add
cli
push
mov
sub
push
cmc
pop
nop
mov
push
outs
(bad)
adc
fist
sub
pop
mov
pop
ja
outs
pop
dec
pop
xor
retf
xchg
xor
mov
pop
outs
(bad)
sub
cmps
adc
adc
cdq
and
or
call
xchg
jno
icebp
dec
movs
jne
sbb
xchg
rol
add
out
lea
popf
add
outs
dec
into
daa
lods
aaa
out
jge
mov
xchg
push
ret
imul
popa
pop
or
xchg
retf
push
dec
cmp
sub
jb
mov
gs
retf
mov
(bad)
adc
cmp
mov
mov
test
mov
inc
sbb
inc
xchg
jb
outs
dec
dec
push
adc
ins
movs
push
mov
sbb
inc
std
and
push
stos
int
bound
jno
lea
mov
imul
pop
dec
int
adc
(bad)
mov
push
lods
push
sub
adc
inc
mov
ja
not
(bad)
retf
or
xchg
(bad)
enter
pop
call
sbb
sbb
inc
sahf
mov
and
jp
mov
mov
sub
inc
repz
jle
add
cmps
push
fdiv
daa
cmp
ja
mov
jb
pop
mov
mov
and
and
jl
test
adc
lods
xchg
jne
adc
inc
and
jne
js
jge
jmp
adc
or
jecxz
push
cmp
pop
ret
ins
aaa
jnp
add
stos
pop
push
push
sub
inc
dec
data16
cli
call
mov
add
js
jnp
sub
cmp
and
push
ins
dec
dec
adc
mov
sar
mov
mov
arpl
mov
and
cmc
leave
pop
dec
mov
sub
pop
mov
pop
jmp
popa
es
xchg
xchg
sub
mov
scas
push
(bad)
enter
pop
outs
int
cmp
add
out
xchg
icebp
xor
iret
push
mov
fisttp
push
pop
and
outs
mov
fisubr
repz
pop
arpl
int3
mov
repz
ins
sbb
pop
inc
and
mov
pop
xor
cmp
stos
mov
(bad)
add
mov
dec
jl
mov
out
dec
mov
in
jo
or
inc
std
pop
call
and
pop
inc
hlt
mov
ret
test
iret
dec
mov
popf
shr
and
and
sub
push
sub
ins
pop
lods
mov
cld
cld
xor
pop
aas
push
lods
aam
inc
jecxz
ins
xchg
xlat
jne
arpl
mov
pop
xor
inc
enter
jmp
jle
sti
mov
sbb
in
inc
xor
clc
adc
mov
push
and
lahf
outs
fist
jmp
or
out
xor
out
push
and
test
inc
push
out
sbb
jmp
sub
mov
or
aas
pop
sub
imul
outs
retf
push
jl
ss
scas
scas
xor
jg
in
fld
jns
dec
fidivr
push
dec
sti
mov
sbb
sub
and
mov
mov
adc
cs
fidivr
push
inc
icebp
push
jmp
test
adc
fldenv
repz
adc
mov
test
int
sti
out
mov
jp
ds
or
jecxz
fnsave
mov
fild
sub
aaa
mov
data16
leave
push
xchg
bswap
jae
retf
push
pop
int
mov
xor
xchg
or
ja
inc
jnp
dec
cmp
xchg
and
cwde
scas
jmp
not
(bad)
jmp
fbstp
or
fild
dec
jb
sbb
test
sub
fs
cmps
xor
mov
add
push
test
xchg
mov
test
shr
stc
jns
scas
or
xchg
pop
xchg
adc
out
xor
inc
fs
cmp
fcmovbe
js
xor
inc
pop
add
das
inc
in
push
in
inc
pop
call
dec
fmul
pop
popf
mov
out
push
or
inc
test
sbb
shl
push
fwait
pop
(bad)
pop
ss
adc
pop
lds
repz
and
jns
xor
push
mov
fcomp
stos
push
or
adc
inc
push
pop
pop
out
sbb
hlt
outs
adc
dec
mov
mov
jb
test
fisubr
mov
xchg
mov
jge
pop
inc
gs
mov
shl
in
popa
mov
cmp
xchg
je
xlat
(bad)
jg
cmc
(bad)
lock
sub
and
pop
fwait
sbb
sub
pop
arpl
mov
xor
(bad)
mov
and
jnp
or
fsubr
adc
xchg
popa
arpl
cwde
add
sbb
mov
addr16
movs
mov
sbb
ja
mov
xchg
bound
rcl
stos
mov
mov
push
das
fcomp
test
sbb
or
popf
push
ins
xchg
push
mov
imul
dec
inc
dec
sbb
push
pop
add
popa
mov
and
xchg
mov
xchg
add
xchg
adc
xor
push
int
cmc
fsubr
mov
ins
mov
ror
mov
jbe
loopne
mov
sub
push
je
mov
(bad)
pop
push
xor
push
jb
mov
or
mov
push
mov
call
cmp
(bad)
lods
mov
lods
xor
cmc
mov
inc
std
jmp
adc
inc
add
lods
scas
movs
fild
test
lds
sbb
pop
test
xchg
retf
and
or
aaa
inc
mov
aam
(bad)
cli
pop
movs
mov
out
(bad)
shr
adc
jbe
jbe
lods
jge
pop
add
outs
cmp
sub
sub
or
push
cmps
push
mov
gs
rcr
push
mov
mov
cmp
lds
push
fst
push
push
cmps
push
push
stc
imul
stos
fld
adc
push
pop
adc
mov
test
idiv
scas
into
ret
aam
lods
cmp
cmps
and
daa
xchg
mov
inc
out
push
test
rol
xadd
(bad)
sbb
pop
mov
xchg
adc
push
mov
in
cmp
dec
dec
xchg
je
pop
shl
int
stc
jae
mov
data16
ret
xchg
adc
push
pop
test
and
or
jb
mov
(bad)
outs
sar
push
iret
js
loopne
dec
cdq
into
sub
xchg
mov
adc
dec
and
movs
mov
fcomp
dec
arpl
(bad)
xor
mov
add
dec
fild
stos
in
iret
xchg
arpl
cs
daa
fsub
jp
loop
jne
or
cmp
cs
mov
cmp
das
lea
xor
jp
test
test
mov
xchg
and
sar
pusha
add
lods
out
retw
addr16
mov
out
add
jle
mov
popa
test
repz
(bad)
hlt
shl
popf
enter
(bad)
jg
(bad)
push
cld
ss
pop
xchg
pop
dec
inc
mov
xadd
jmp
sub
cmp
scas
scas
pushf
int
imul
mov
lods
xchg
retf
loope
fst
out
ins
cli
jg
dec
pop
jmp
popa
xor
hlt
ss
nop
push
out
call
sbb
bound
jno
in
xlat
push
add
push
(bad)
xchg
cmc
gs
push
cwde
mov
outs
mov
arpl
sub
scas
lods
dec
mov
movs
mov
ret
inc
jmp
lea
mov
or
sub
and
je
push
mul
adc
push
sub
xchg
stc
add
add
and
cmp
jmp
aas
fcomp
retf
mov
xor
je
cmps
xor
mov
mov
push
mov
sbb
outs
into
aas
stos
lea
dec
sahf
dec
shr
pop
pop
lahf
jnp
mov
imul
retf
in
and
in
ins
std
mov
loope
call
pop
jne
ja
or
pop
mov
adc
ss
lahf
(bad)
jnp
mov
mov
xchg
leave
lods
lds
gs
jmp
jae
dec
pop
stos
adc
add
(bad)
es
cdq
fild
fsub
add
mov
xchg
mov
dec
jbe
xchg
inc
xchg
lods
cmc
mov
inc
mov
mov
cmp
mov
rcr
scas
jle
leave
gs
xchg
mov
push
jmp
pop
jns
dec
in
sbb
daa
cmp
dec
sub
cmp
jl
lock
push
cmp
and
adc
mov
fst
pop
mov
sub
gs
xchg
sub
hlt
jnp
or
mov
mov
sub
punpckhbw
out
adc
cmps
jae
mov
add
mov
(bad)
jp
jecxz
xor
lahf
jae
jbe
(bad)
cmp
gs
xor
lods
mov
movs
jmp
xchg
and
dec
fimul
mov
out
sbb
jecxz
or
shl
scas
arpl
mov
rol
pop
adc
cmps
cmps
or
(bad)
sti
fmul
mov
push
mov
cwde
adc
dec
dec
adc
pushf
int3
sbb
leave
sbb
cdq
scas
loope
push
mov
ret
xor
pop
test
jp
sbb
shl
jbe
repz
pop
adc
mov
and
cdq
retf
push
outs
jb
jp
mov
sub
lds
cmp
repz
adc
addr16
and
call
int3
mov
stc
les
mov
pop
xor
loop
jo
sbb
rcr
sub
(bad)
dec
int3
jg
nop
out
pop
inc
and
jle
imul
and
shr
mov
xchg
test
(bad)
int
jnp
es
stos
dec
inc
pusha
push
or
bound
sub
push
test
adc
int3
enter
dec
sbb
cmp
xchg
pop
ret
(bad)
dec
inc
inc
fld
cmp
xor
jno
xor
mov
enter
leave
test
imul
add
xchg
jge
add
mov
mov
pop
gs
loop
ret
cld
push
ret
mov
addps
add
in
pop
int3
mov
add
and
xchg
call
push
pop
jbe
sbb
dec
jg
aaa
aad
or
(bad)
xor
add
fild
(bad)
jmp
cmps
cli
(bad)
mov
in
sub
jo
xor
sub
dec
jmp
into
add
pop
adc
movs
cmp
adc
adc
jmp
imul
and
out
mov
jl
inc
mov
les
je
pop
loopne
or
xor
pop
inc
cmp
out
jno
pop
adc
push
cmps
adc
mov
jmp
fs
pop
cmp
or
cmp
retf
jns
dec
or
popf
mov
inc
fs
cdq
int
or
inc
push
mov
cdq
je
adc
and
push
dec
add
lods
shl
inc
and
dec
shl
jl
iret
jl
dec
stos
fwait
leave
sbb
daa
mov
leave
retf
jle
clc
xchg
xchg
rcl
test
movs
and
pop
xchg
dec
(bad)
shl
scas
repnz
(bad)
mov
fcomi
loopne
repnz
and
in
mov
xor
jp
xchg
lahf
cmp
test
adc
inc
rol
push
inc
pop
mov
fidivr
movs
(bad)
(bad)
data16
lock
scas
mov
fmul
jecxz
mov
and
or
xor
fcmovnb
mov
pop
and
shl
inc
mov
sub
sbb
daa
dec
cli
mov
jbe
mov
xchg
inc
std
and
cmps
cmc
dec
aaa
sbb
inc
repz
and
and
mov
inc
fucomip
and
stc
call
jns
not
cmp
pop
push
pop
lods
out
push
mov
jmp
out
adc
jo
das
push
push
push
xor
int
cmp
xchg
cld
aas
mov
ins
and
push
mov
mov
frstor
add
(bad)
inc
sub
xor
psubusw
push
int3
adc
xchg
sub
sahf
dec
pop
sbb
div
fdiv
add
mov
js
push
mov
mov
aas
xchg
and
inc
fisubr
outs
inc
ror
mov
mov
ss
js
jnp
pusha
or
movs
adc
push
retf
inc
pop
in
cld
enter
leave
adc
jp
imul
jmp
aaa
xor
sub
mov
fcom
stos
loopne
dec
ret
push
ja
loope
jge
pushf
push
sbb
sar
jae
and
lods
dec
fistp
add
cmp
in
ficomp
sahf
cmp
pause
lods
push
mov
pop
movs
das
dec
sbb
pop
or
sbb
dec
xchg
hlt
cli
pop
sbb
inc
pop
int
lock
cmc
(bad)
pop
ins
push
xchg
xor
mov
xchg
sub
imul
and
div
hlt
out
or
xchg
(bad)
inc
les
dec
loop
cmp
sbb
cmp
inc
jl
push
fsub
xor
es
fwait
adc
adc
xor
jle
push
pop
jmp
push
test
push
test
and
mov
fcom
sar
sub
test
inc
mov
enter
push
fwait
mov
add
and
inc
retf
lods
add
call
sbb
or
sbb
xor
sbb
rcl
mov
ficom
or
test
mov
in
jg
inc
es
lahf
or
aad
fisub
mov
mov
add
add
mov
movs
jno
lahf
(bad)
fidiv
and
dec
xchg
jne
xor
dec
jno
add
fcomip
pop
push
xor
je
aaa
mov
outs
jmp
cwde
aad
push
std
pop
xor
inc
jae
jno
je
test
into
jle
loope
popf
xchg
xchg
push
mov
cmp
pop
rol
xchg
in
pop
add
or
gs
add
push
rol
sbb
test
aam
(bad)
fist
lds
adc
or
or
ficomp
(bad)
xchg
jmp
and
cwde
sar
test
jmp
out
jl
mov
movs
mov
inc
xchg
icebp
mov
repnz
pushf
xchg
mov
(bad)
in
pop
sbb
(bad)
xchg
shl
fisubr
dec
ret
mov
xor
mov
cmp
shl
bound
ds
jl
adc
mov
ret
ds
aas
sahf
loop
inc
push
test
popf
out
push
or
push
inc
lods
push
(bad)
cmp
dec
test
call
and
lea
(bad)
mov
out
retf
mov
imul
inc
fcomp
mov
call
cmps
xor
idiv
mov
and
outs
add
and
xchg
dec
aad
scas
mov
jmp
std
das
sbb
pusha
push
or
rcl
gs
push
xor
sub
cmp
lahf
fxch
mov
jno
dec
sbb
adc
leave
jae
retf
xchg
sub
jp
push
pop
mul
dec
cmp
cmp
sbb
scas
inc
daa
aas
scas
das
call
push
xor
cmp
ds
int
cmps
dec
aas
push
lea
repz
mov
lea
aam
push
aas
jg
jb
and
mov
fs
ins
stos
pop
pop
mov
jae
ss
imul
popa
cmp
sbb
test
pop
inc
out
mov
jle
je
mov
sbb
call
fprem1
mov
fadd
inc
or
cmp
adc
stc
and
imul
ror
iret
fadd
push
mov
fs
lods
jmp
add
shl
leave
popa
cmp
push
and
mov
jnp
in
or
adc
dec
and
out
mov
xor
cmc
inc
xor
sbb
out
(bad)
xor
sbb
mov
(bad)
push
or
jo
sbb
dec
cli
imul
sub
std
jmp
or
add
pusha
jnp
scas
or
xchg
add
int
jg
std
out
data16
xchg
xor
push
pop
dec
add
fnclex
xchg
adc
out
mov
scas
ficomp
xor
jnp
cmps
fdiv
add
int
popf
sbb
mov
mov
dec
sub
push
(bad)
cli
mov
fs
sbb
pushw
pop
stos
sbb
sub
lods
dec
jbe
cld
out
(bad)
jns
sbb
(bad)
cmps
ja
pop
in
into
call
rcl
adc
pusha
pop
xor
imul
xchg
lock
add
inc
int
loopne
sbb
push
jnp
lea
into
imul
dec
fmul
pop
cli
fild
mov
mov
dec
cmp
(bad)
mov
sub
int
add
jno
xchg
sahf
lods
mov
push
sbb
xchg
add
outs
mov
mov
rol
mov
movs
sbb
pushf
mov
add
lea
xor
cmp
pusha
je
mov
mov
in
mov
cmp
push
stc
clc
bound
fld
sub
pop
mov
les
pushf
dec
sbb
jp
and
mov
and
mov
push
gs
hlt
inc
fdivp
mov
jecxz
retf
out
jle
xor
mov
jmp
data16
or
xchg
fimul
mov
or
ret
out
mov
ins
div
cdq
push
lock
pusha
adc
cmc
jl
xor
sub
pop
or
ins
scas
out
xor
or
out
into
mov
sti
sub
ds
jns
pop
add
adc
cs
out
lods
addr16
xchg
jo
in
mov
cmc
sti
daa
push
sbb
inc
stos
ret
pop
or
in
sub
adc
fmul
inc
sbb
stc
push
lods
gs
mov
xchg
push
jecxz
mov
xchg
imul
in
inc
push
adc
inc
push
sub
push
cli
inc
xchg
(bad)
jbe
push
loopne
inc
xor
sub
daa
popa
jg
or
add
leave
cli
sub
loopne
mov
push
(bad)
push
mov
call
push
shr
jle
mov
fsubrp
jne
mul
jmp
clc
push
cwde
pusha
es
mov
test
arpl
iret
sub
xor
sub
mov
lahf
test
or
adc
imul
xor
push
or
push
xor
pop
jae
(bad)
aaa
inc
enter
mov
loopne
loop
xchg
or
push
xchg
loop
pop
fwait
cmp
mov
xchg
test
cmp
jns
jb
ds
inc
rol
mov
and
xor
push
fstp
add
push
pop
call
retf
les
xor
stos
movs
fcomp
cs
push
ss
xchg
fwait
push
pop
mov
pop
aam
rcr
fld
ror
add
ficom
dec
jge
in
aad
lods
cli
push
(bad)
mov
pop
cmp
cmp
dec
movs
in
jge
shl
aas
pusha
mov
mov
adc
je
jecxz
lods
add
pop
cmps
daa
xchg
jmp
xor
stos
xchg
xchg
addr16
xchg
fnstsw
lock
or
idiv
gs
sub
add
pop
jns
push
iret
outs
push
retf
push
mov
out
cmps
adc
arpl
daa
nop
cld
test
mov
pop
mov
xchg
sbb
adc
xor
pop
(bad)
pop
jo
push
and
ja
mov
mov
lods
mov
xlat
test
dec
or
pop
sbb
pop
mov
push
hlt
jo
jne
test
addr16
push
(bad)
fist
(bad)
aam
test
push
ins
ins
sti
movs
pop
sbb
mov
xchg
arpl
cmps
fs
inc
and
jmp
and
mov
mov
fcomp
pop
inc
mov
adc
cli
adc
sti
dec
mov
push
cmp
scas
inc
and
pop
nop
adc
dec
add
or
cmps
xchg
dec
dec
cmp
sti
outs
les
jl
push
inc
scas
pop
sbb
ins
cwde
mov
lds
or
ret
mov
rcr
pop
movs
mov
xchg
mov
test
mov
or
sub
xor
sub
push
in
push
bound
test
aam
sub
xchg
(bad)
mov
push
or
dec
mov
cmp
sbb
mov
(bad)
cmps
jo
pop
inc
mov
or
es
js
out
inc
loope
or
pop
lahf
scas
dec
lods
sub
movs
push
sbb
int
retf
loope
push
push
sub
dec
mov
mov
pop
aam
mov
fwait
xlat
aad
dec
mov
or
inc
add
inc
ss
mov
lds
out
inc
or
ins
imul
pop
cli
ds
inc
outs
mov
push
stc
inc
repnz
cmp
xchg
(bad)
(bad)
jmp
mov
shl
push
and
xchg
jl
inc
enter
clc
cmp
outs
pop
lahf
pop
es
xor
mov
sub
ja
jmp
sub
and
bnd
js
ins
xor
nop
mov
addr16
cmp
add
iret
and
hlt
sub
fisub
(bad)
xchg
jle
dec
sbb
stc
mov
pop
jbe
shl
inc
jle
inc
pop
mov
pop
or
imul
or
(bad)
xchg
dec
daa
fsub
dec
popf
bound
push
adc
daa
inc
mov
mov
xchg
aam
inc
hlt
lods
test
xchg
inc
pop
xchg
hlt
lds
mov
out
scas
sub
pop
inc
cwde
dec
push
sub
sbb
push
shr
pop
scas
inc
mov
pushf
and
add
popa
inc
cmc
gs
push
mov
push
out
and
mov
in
or
int
das
pop
inc
mov
fs
jmp
pop
int3
jbe
int
stos
fisttp
sahf
mov
inc
js
lods
and
mov
mov
fcmovnbe
xor
xor
rep
jno
stos
jnp
sti
imul
xchg
push
mov
mov
or
aam
fsub
pop
push
fsub
rcl
sbb
mov
icebp
sub
sbb
add
pop
in
xchg
sub
jno
mov
repnz
push
rol
mov
popf
stos
ret
xor
or
pop
inc
push
sbb
stos
dec
mov
cdq
sar
cld
inc
mov
addr16
cld
xor
cwde
pop
lock
call
sti
mov
dec
cdq
xchg
adc
jmp
adc
clc
pop
jge
cmc
jg
aaa
test
xchg
pushf
push
(bad)
into
out
sbb
jmp
mov
add
rcl
mov
sbb
shr
daa
mov
out
add
inc
dec
pop
push
sti
rcr
(bad)
mov
ss
mov
into
or
jno
fistp
leave
cmp
outs
addr16
loop
and
or
and
mov
out
fiadd
sub
xchg
fsubp
imul
push
add
xor
imul
jne
cmps
xor
jp
xchg
in
push
jo
gs
xchg
in
(bad)
and
bts
mov
icebp
pop
popa
dec
push
sahf
aad
sbb
repz
fsubr
adc
xchg
out
out
div
mov
pop
mov
mov
add
or
jmp
push
mov
loopne
addr16
bound
repz
sahf
ret
test
jae
pusha
xchg
rcl
(bad)
movs
dec
(bad)
test
inc
inc
sbb
out
ror
adc
test
repz
mov
ret
push
popa
jb
inc
adc
sbb
sti
inc
stc
pop
mov
jo
push
(bad)
div
js
int
(bad)
cmp
int3
dec
leave
xor
bound
in
outs
jl
push
js
xchg
test
mov
lds
dec
or
push
jb
dec
sbb
stos
iret
sbb
push
in
neg
nop
pop
std
xor
bound
cwde
test
scas
call
sahf
push
mov
cmp
pusha
xor
retf
mov
mov
loop
xor
mov
shl
call
dec
loop
mov
fwait
retf
or
inc
repnz
movs
imul
std
jle
call
sbb
fwait
mov
ds
jns
xchg
adc
retf
arpl
arpl
ds
mov
add
stos
or
ret
pop
ds
rcr
es
jno
in
jo
(bad)
mov
or
je
dec
jns
add
int
mov
sar
clc
mov
xchg
fdiv
inc
scas
push
ffree
ds
push
nop
retf
(bad)
pop
fidiv
(bad)
in
mov
imul
cld
jecxz
adc
xor
loope
add
in
mov
out
pop
cs
or
into
or
rol
cmp
pop
jmp
push
daa
retf
dec
fisttp
dec
adc
inc
lea
aas
mov
bound
xlat
xchg
jecxz
mov
fwait
shr
sbb
or
aad
mov
sub
(bad)
ds
push
iret
mov
call
dec
jmp
pop
jno
dec
mov
mov
pop
in
cmc
jp
mov
neg
jp
scas
inc
(bad)
loope
xor
push
push
cs
pop
pushf
pop
int
xchg
jg
fisttp
cs
jmp
clc
sbb
movs
ja
ficom
push
inc
icebp
xchg
xchg
daa
mov
xchg
jmp
retf
out
cli
jbe
xor
fwait
pushf
add
pop
scas
popf
jp
pushf
add
rol
mov
shr
jb
add
push
pop
sar
fcomp
movs
cmp
ds
and
jmp
mov
pop
cmp
mov
xor
gs
(bad)
pop
mov
aad
popa
sbb
out
into
pop
mov
les
and
jae
add
ss
inc
mov
test
int3
push
mov
neg
in
xchg
push
das
mov
xchg
adc
inc
loop
or
stc
push
and
sbb
or
in
call
test
repz
lahf
mov
clc
dec
(bad)
cs
iret
or
jg
cdq
popa
cmp
rcr
ret
gs
iret
xlat
add
int3
jnp
bnd
jge
fdiv
sub
pop
mov
xor
inc
inc
cmps
pop
hlt
mov
iret
mov
mov
mov
dec
add
adc
add
xor
adc
xchg
rcr
and
mov
or
(bad)
mov
inc
and
lock
push
outs
fnstcw
pop
mul
cs
mov
jnp
cmp
repnz
mov
(bad)
cld
mov
cmc
inc
and
outs
enter
data16
or
sub
push
mov
cdq
add
cwde
es
adc
pusha
fldl2e
cmp
int
dec
add
xchg
(bad)
jne
pop
frstor
jae
es
lock
icebp
jmp
fs
mov
sar
test
mov
or
sub
fisubr
xor
mov
push
jmp
add
and
fdivp
inc
and
mov
or
daa
inc
mov
dec
pop
jnp
dec
lds
cmps
bound
cdq
(bad)
call
bound
repz
(bad)
push
lock
sbb
mov
scas
push
shl
(bad)
and
pop
xchg
or
pop
js
mov
iret
xchg
jnp
push
fimul
pop
jnp
dec
and
xchg
aam
inc
jl
cmp
std
ja
cmovae
dec
out
adc
in
xchg
int
(bad)
mov
or
and
sbb
aad
push
cmps
xchg
mov
cmp
test
imul
mov
sbb
push
xchg
fcom
xor
(bad)
pop
shr
mov
push
xor
nop
dec
mov
cvtps2pd
jecxz
aas
retf
pop
mov
rcr
pop
mov
dec
neg
pop
jle
jo
mov
aas
and
repz
(bad)
cmp
inc
scas
out
adc
cmp
mov
out
sti
pop
or
or
xchg
(bad)
jmp
cmp
and
mov
adc
cmp
jns
and
es
(bad)
pop
xchg
mov
jmp
cmp
cld
ret
push
or
fnstcw
sbb
repz
cmps
sahf
sahf
add
in
mov
imul
push
fld
lds
dec
jmp
mov
lods
dec
inc
and
mov
stc
or
js
jae
cli
sbb
adc
mov
adc
cmp
sahf
addr16
out
sbb
push
or
or
scas
or
je
or
pop
daa
xchg
inc
loop
imul
mov
out
mov
enter
adc
fcom
mov
rcr
pop
jmp
add
pop
jecxz
(bad)
mov
(bad)
or
neg
dec
sbb
push
cmps
push
es
push
push
bound
les
rcl
xchg
call
nop
or
pop
loope
lahf
dec
rcl
ja
and
inc
inc
out
dec
cmp
jmp
or
loop
retf
dec
cmps
sub
pop
sbb
inc
xlat
jns
mov
mov
ins
pcmpgtw
loop
mov
call
pop
add
outs
xor
enter
push
mov
into
jge
fcom
mov
(bad)
inc
fbld
mov
and
inc
out
mov
shl
test
imul
or
cld
mov
xchg
js
adc
pushf
cmc
push
add
mov
mov
pop
pop
xor
xor
xchg
mov
pop
sub
test
inc
pop
and
sar
xchg
dec
fistp
xchg
cld
inc
in
xchg
mov
pop
pop
inc
loope
dec
add
sub
sub
mov
add
paddq
sbb
arpl
dec
fdiv
loopne
pop
leave
sub
cmp
movs
pop
jne
cs
push
add
pop
mov
add
jl
pop
clc
sbb
jle
mov
or
sahf
test
inc
icebp
mov
jle
sub
cmp
cmc
outs
push
retf
in
es
sbb
pushf
retf
xchg
ret
push
lods
repz
mov
xlat
clc
mov
(bad)
shr
xchg
mov
xchg
out
sub
(bad)
repnz
call
fs
mov
nop
(bad)
jg
push
or
pop
sub
cmps
je
movs
iret
lods
pop
jae
pop
mov
test
cmp
in
pop
mov
jnp
cdq
in
xor
mov
or
pop
dec
xor
sbb
xchg
sahf
add
dec
pop
push
or
push
mov
(bad)
add
jne
mov
sahf
out
mov
dec
and
pop
xlat
repz
xchg
push
adc
jmp
mov
mov
cmps
fs
cmp
push
fincstp
xor
sbb
jp
out
(bad)
out
add
icebp
imul
or
gs
mov
push
push
out
stos
outs
daa
cmp
mov
mov
inc
inc
jns
sar
data16
add
retf
push
dec
cdq
or
movs
cmp
xchg
es
in
ins
or
bound
pop
push
fistp
push
mov
adc
sbb
shl
out
aas
stos
mov
sbb
cmp
mov
(bad)
repnz
inc
mov
sub
fmul
cdq
fimul
call
push
test
lea
xchg
mov
mov
inc
mov
inc
jecxz
push
mov
rcl
test
jge
out
mov
test
mov
xchg
mov
cmps
adc
lods
push
xor
scas
aam
inc
xor
pushf
cdq
push
push
xchg
mov
cmp
retf
and
mov
sahf
add
out
xor
mov
xor
pop
cmp
sbb
pop
fs
pushf
or
pop
in
xor
jle
cmc
dec
or
xchg
sbb
xlat
jle
stos
outs
shr
adc
xor
inc
int3
sbb
movs
scas
cmps
push
and
retf
and
fldpi
pop
in
mov
pop
repz
lds
mov
rcl
jp
je
aad
pop
hlt
std
popa
clc
mov
cs
xchg
sub
cmp
pop
mov
out
cmova
pop
add
mov
push
mov
int
test
or
jle
outs
mov
jg
mov
jmp
movs
xchg
mov
sar
pop
or
cdq
lods
sahf
push
les
cmp
ins
inc
fwait
adc
lea
aaa
test
and
pop
icebp
dec
adc
movs
push
sbb
fwait
pushf
clflush
push
in
and
std
jp
mov
push
stos
hlt
movaps
and
jl
cmp
cdq
inc
inc
xlat
jo
packsswb
scas
outs
adc
sbb
fdiv
cmp
add
and
jns
ss
cmp
pop
repz
sub
pop
ins
out
dec
dec
sbb
xor
add
div
mul
sub
mov
jno
stos
adc
sub
retf
popf
jns
dec
jbe
lds
jl
or
repz
fs
dec
xchg
ret
mov
fimul
and
pcmpeqb
test
(bad)
jbe
pusha
xchg
mov
sbb
mov
push
test
adc
dec
pusha
xchg
cmp
stos
loop
pop
mov
sar
fsub
jg
(bad)
mov
mov
in
xchg
pop
inc
lea
stc
pop
xchg
mov
(bad)
mov
rol
mov
add
mov
or
mov
mov
cdq
arpl
cdq
push
sbb
cmc
cmp
jae
(bad)
fcomp
cmps
and
movs
xchg
or
pop
inc
loop
gs
sbb
push
xor
(bad)
sbb
sub
adc
sti
retf
out
mov
lods
pop
mov
arpl
ins
shr
js
dec
xchg
(bad)
retf
push
mov
sub
add
iret
bnd
mov
sbb
dec
shr
repz
xor
dec
push
adc
(bad)
stc
xchg
cmp
push
xchg
ss
push
add
xlat
imul
mov
pop
xor
(bad)
jmp
or
popa
xor
stc
shl
fdivr
out
jp
test
push
pop
and
mov
push
sub
enter
sub
(bad)
mov
push
xchg
loop
pop
or
lea
imul
sbb
pop
cmps
adc
pop
(bad)
sar
loopne
lea
fsub
test
test
xchg
sbb
repnz
adc
scas
out
sti
test
mov
dec
je
addr16
inc
push
mov
lahf
pop
sbb
jecxz
jecxz
cmc
lock
xchg
mov
adc
test
pop
ss
popa
inc
mov
pop
mov
jae
dec
enter
cmp
ins
outs
cwde
loop
sub
cmp
mov
(bad)
adc
cmps
mov
fcomi
aam
sub
lods
adc
movs
jns
push
sub
add
xchg
call
cmp
xor
cmp
movs
test
sub
pop
cmp
cmp
int3
sbb
jmp
lods
lds
ss
add
or
popa
cmps
mov
mov
(bad)
push
pop
mov
(bad)
in
repz
ret
dec
ror
adc
jne
push
pop
sub
adc
jae
fild
jmp
push
add
cmp
rol
pusha
jno
sub
cmp
push
cwde
push
pop
fcomp
ror
mov
loopne
pop
ffree
pop
jmp
fbld
fiadd
lods
jecxz
es
mov
in
outs
ss
mov
cmps
test
daa
push
lahf
sub
fwait
inc
cs
push
add
sub
scas
outs
js
add
xchg
sbb
mov
call
int3
outs
jmp
sahf
movs
xor
cmp
outs
ins
cmps
(bad)
xchg
je
shl
(bad)
retf
xchg
mov
sbb
jecxz
lds
fcmovnbe
scas
adc
ss
ds
jnp
mov
in
nop
in
js
leave
and
and
sbb
mov
(bad)
scas
xor
out
popf
ret
adc
mov
hlt
bt
dec
and
pop
ja
call
inc
mov
dec
mov
sbb
test
in
fwait
xchg
adc
jmp
das
out
jge
shr
call
and
js
cwde
and
adc
ret
bound
(bad)
in
std
inc
mov
lods
push
mov
and
dec
mov
jecxz
cmp
out
in
stc
pop
inc
stc
adc
icebp
outs
and
push
lahf
pop
jne
dec
mov
daa
test
push
je
sbb
mov
add
mov
jbe
add
fiadd
clc
xchg
(bad)
push
mov
adc
pop
cld
pop
fisttp
popf
jge
and
into
xor
(bad)
sar
je
mov
test
lahf
lods
inc
jne
not
shr
and
jns
mov
xchg
daa
jmp
test
js
xor
mov
pop
mov
pop
in
enter
cmp
ins
inc
push
xor
push
outs
add
or
movs
dec
xchg
stos
es
mov
shl
int
mov
adc
rcr
sahf
dec
imul
push
pop
sbb
push
or
or
jno
fsubr
ror
mov
test
mov
mov
int
add
dec
int3
sbb
adc
pop
jle
push
test
inc
stos
dec
add
loope
dec
out
jne
lea
sbb
jo
inc
(bad)
loop
cmp
xor
and
outs
cli
xlat
pusha
push
inc
cmp
dec
or
cmp
call
int
and
lods
pusha
aas
xchg
push
mov
aad
xchg
(bad)
push
add
add
mov
in
js
test
(bad)
sar
aaa
xor
xlat
jmp
cmps
bound
sbb
jo
add
mov
and
sub
ror
call
js
inc
mov
or
leave
test
js
ds
stos
push
retf
fisub
pop
mov
inc
in
fistp
pop
or
cdq
ds
inc
mov
sbb
lea
or
inc
retf
out
and
jmp
sbb
and
mov
loopne
dec
mov
call
fdiv
scas
imul
adc
and
jecxz
jo
adc
addr16
nop
jne
rcr
aad
add
mov
not
sti
fwait
sbb
repnz
bound
popa
fdivr
jo
adc
cmp
jmp
mov
xchg
aaa
retf
int3
and
adc
mov
xor
(bad)
cwde
aaa
(bad)
les
xchg
jle
ja
xchg
pop
jge
xor
ja
adc
xor
frstor
pop
xchg
fcomp
add
mov
mov
push
lods
mov
ss
adc
adc
daa
mov
sbb
xchg
ds
aaa
test
lea
inc
push
mov
leave
cmps
loop
add
fnsave
js
sub
std
jmp
test
nop
sbb
out
or
pop
sti
mov
mov
jns
leave
xchg
in
cmp
push
sub
aad
mov
iret
or
cmp
jae
or
loope
ret
into
jl
and
cmp
les
add
push
test
stos
sbb
pop
dec
aam
bound
stos
ret
xchg
icebp
or
not
xlat
cmp
aaa
stc
daa
cmp
sub
sbb
jno
jmp
adc
and
test
nop
popa
xor
mov
pusha
call
adc
loop
ins
mov
mov
xchg
jle
dec
cmps
clc
fs
sub
mov
mov
lds
retf
in
mov
test
cmp
shl
in
rcr
pop
mov
mov
pop
push
cmp
cwde
in
cmp
(bad)
cld
sub
push
pop
xchg
xchg
mov
stos
xlat
pop
retf
fistp
call
xor
and
push
mov
clc
pop
scas
jmp
cwde
mov
mov
call
push
and
loopne
mov
adc
adc
xor
xchg
fwait
ja
stos
repz
and
not
or
call
mul
repz
add
popa
mov
pop
xchg
or
out
push
arpl
mov
and
adc
inc
jl
add
sbb
daa
inc
out
pop
or
dec
fs
sub
jo
enter
xchg
addr16
sar
and
mov
push
dec
stc
movs
xchg
pop
int3
inc
inc
mov
pop
jns
imul
jmp
add
repz
loop
xchg
addr16
push
pop
inc
call
push
add
jno
sbb
test
mov
ins
test
lods
inc
pop
mov
or
and
jbe
inc
stc
por
inc
dec
enter
rol
xor
leave
xor
xor
dec
fisttp
and
(bad)
fcom
xor
ret
int3
inc
sub
in
sar
sub
pop
ja
mov
xchg
dec
(bad)
sub
dec
test
retf
sbb
jae
and
add
sbb
xor
arpl
push
xchg
je
inc
mov
lea
mov
cmp
ss
push
lods
add
push
inc
push
aaa
pushf
xchg
stos
(bad)
repnz
mov
xchg
test
add
cmp
add
call
mov
lods
mov
mov
test
cmp
mov
push
push
in
push
cmps
and
ds
pop
cmp
mov
jno
inc
int
pop
push
fs
jle
fst
std
cwde
outs
sub
retf
les
es
(bad)
or
cdq
out
ss
xchg
xor
stos
leave
sti
in
push
jl
out
test
std
jle
outs
jle
pop
fwait
mov
pop
pop
xor
arpl
inc
mov
ret
mov
inc
sbb
and
sti
das
call
lods
inc
add
clc
out
mov
pop
mov
cmps
sbb
jne
push
inc
inc
jp
mov
fisttp
popf
imul
sbb
and
jmp
mov
into
mov
inc
pop
loope
cmp
push
xor
fild
mov
jnp
pop
sub
dec
and
adc
cmp
imul
and
cwde
test
jbe
dec
das
jae
leave
(bad)
jp
mov
gs
push
dec
fmul
add
rol
jp
or
inc
cli
arpl
jnp
es
or
cmp
xor
fyl2xp1
out
outs
loopne
fadd
shr
xor
scas
jg
nop
xor
push
call
xor
nop
std
icebp
jg
xor
cld
sub
jb
repz
rcr
mov
fnsave
or
cmp
xchg
pop
out
and
das
jmp
repnz
aad
out
pop
and
les
pop
add
es
aaa
jl
fsub
into
mov
imul
pushf
xor
cmp
cdq
cmp
xchg
fdivr
xchg
xor
shl
adc
inc
stos
jb
pop
inc
dec
bound
or
pusha
leave
cld
sub
sub
aaa
pop
push
xlat
ds
jbe
cmps
sbb
les
pop
and
jl
cmp
arpl
out
mov
jnp
ret
scas
jne
xchg
mov
mov
mov
pop
retf
mov
mov
daa
inc
mov
ss
inc
loopne
jp
mov
inc
inc
std
ret
and
push
ds
mov
push
pop
push
das
mov
cmc
stos
adc
inc
inc
push
mov
push
dec
out
repz
rcl
push
dec
fisub
and
adc
ins
les
jbe
jb
push
pop
rcl
dec
pop
test
mov
outs
pop
inc
add
inc
jg
cmps
sub
ins
popf
adc
into
(bad)
js
(bad)
test
push
gs
mov
leave
mov
imul
es
fdiv
sbb
add
jge
stos
mov
aaa
mov
xchg
or
das
xchg
and
iret
push
and
inc
mov
dec
mov
adc
add
imul
push
leave
iret
inc
leave
pop
jp
inc
jmp
movs
sar
push
jno
data16
loop
dec
mov
out
push
mov
add
ins
lahf
jl
arpl
sbb
icebp
fcmovnbe
xchg
loop
jge
push
sub
repnz
ss
mov
outs
out
les
push
xor
hlt
and
ins
adc
pop
pop
adc
aad
mov
fmulp
push
ss
xchg
cmp
cmc
out
lock
push
xchg
int
sub
pop
dec
ficomp
ins
pop
mov
adc
mov
lds
nop
test
adc
lods
jmp
ins
and
cmp
or
push
test
cmps
or
out
ins
dec
mov
pop
cmp
enter
sub
cmps
jle
sbb
cmp
imul
sbb
leave
data16
into
mov
test
inc
xor
or
dec
mov
loop
jge
jl
pop
into
sbb
xchg
push
mov
xor
(bad)
mov
mov
fsub
mov
lods
arpl
js
adc
repz
pop
pop
fwait
inc
jne
mov
jl
inc
jno
mov
inc
cmp
fisttp
mov
dec
jmp
outs
xor
sbb
push
jge
dec
pop
inc
xor
sub
ds
out
sub
test
fdiv
dec
jno
cs
inc
push
cmps
xchg
(bad)
adc
mov
xchg
movs
and
inc
inc
jg
mov
repz
fdivr
in
jns
cmp
aad
lods
push
jle
jb
or
push
test
xchg
gs
push
inc
sbb
std
pusha
mov
loope
dec
idiv
and
and
scas
cld
push
push
das
fdivr
ins
push
push
lods
cmps
cmp
pop
mov
sti
mov
add
push
xlat
xchg
ficom
jecxz
adc
cmps
les
lods
(bad)
pop
jne
pop
into
(bad)
and
scas
hlt
xlat
pop
fucomi
sbb
inc
dec
mov
pop
into
jge
mov
xor
rcr
mov
ftst
sahf
lahf
mov
(bad)
movs
aam
aaa
loop
out
xchg
shl
int
iret
(bad)
jl
push
jae
jg
ins
mov
sub
(bad)
or
sbb
in
mov
sub
out
xchg
sub
inc
popf
jle
mov
fwait
xor
jns
aad
sbb
js
push
out
push
jp
push
repnz
aad
aad
push
fimul
clc
sbb
pop
cdq
adc
dec
mov
sbb
pop
adc
outs
mov
sbb
jle
mov
mov
xor
push
mov
mov
xchg
(bad)
dec
loopne
inc
dec
outs
nop
push
retf
cmp
retf
dec
rcl
and
cs
loope
cmps
ret
imul
pop
(bad)
gs
add
sub
pusha
and
es
fs
lahf
gs
jmp
fadd
cmp
dec
inc
ja
adc
mov
sub
loope
adc
push
repz
and
or
or
mov
and
xor
movs
jp
push
sbb
push
adc
inc
pop
pop
mov
sbb
add
(bad)
mov
lock
push
jae
xchg
xor
jo
ror
stc
pop
popf
jp
sbb
push
ret
xor
movs
mov
cwde
mov
test
les
mov
dec
push
push
sbb
push
mov
inc
je
inc
cmc
out
out
aad
mov
push
xor
dec
std
sub
inc
bound
mov
rcl
jp
das
cmps
fmul
xor
call
dec
pop
push
daa
retf
rol
ret
icebp
or
inc
in
cmp
lods
mov
push
and
in
dec
push
(bad)
push
xchg
lock
mov
mov
and
or
xchg
je
aam
lea
inc
neg
mov
sub
cmp
aas
sub
or
mov
mov
adc
sbb
add
dec
add
mov
aam
shr
mov
mov
nop
mov
scas
repnz
push
inc
adc
rcr
mov
sbb
sub
pop
leave
and
ja
or
cbw
dec
mov
jg
cmp
dec
push
movs
push
and
mov
adc
push
lods
xlat
test
jno
or
int3
push
les
enter
mov
cmp
push
(bad)
int
mov
sbb
into
out
push
ss
neg
cs
in
inc
aas
(bad)
push
cli
sub
bound
(bad)
int3
movs
xchg
loop
lahf
jbe
(bad)
jp
xor
and
cmp
ficom
dec
or
xor
aad
in
hlt
xor
cmps
push
pop
out
(bad)
fiadd
pop
pop
jno
enter
sbb
or
shr
imul
mov
and
test
retf
jmp
xchg
mov
lahf
sbb
and
arpl
add
push
cwde
dec
jg
ds
jg
mov
repnz
rcr
mov
icebp
lahf
xor
test
js
mov
add
jbe
scas
dec
popa
push
cmp
icebp
fwait
dec
xor
stos
das
pop
(bad)
das
mov
outs
cmp
push
mov
test
shl
adc
cmc
fld
jp
ins
test
jne
mov
shl
popf
sbb
inc
mov
pop
test
sub
push
dec
and
das
mov
pop
sbb
fcom
fld
sub
rcl
jo
jmp
xchg
push
call
into
retf
jmp
pop
rdrand
ss
jo
(bad)
rcr
mov
xchg
xor
shl
mov
lock
pop
xchg
or
fld
mov
push
ror
sub
imul
push
xchg
aam
cld
xor
cli
cs
cmp
out
adc
scas
ja
retf
add
mov
lds
rcr
jne
pop
xchg
clc
mov
cmps
(bad)
cdq
mov
adc
imul
sub
jne
repnz
(bad)
imul
jl
sub
push
mov
jbe
and
pop
xchg
mov
test
mov
add
pushf
jnp
pushf
mov
shl
push
lahf
aad
push
xlat
cmp
test
add
scas
sbb
add
xor
pusha
(bad)
pop
mov
retf
xchg
and
pop
rcl
cmps
cmp
push
push
(bad)
cmp
icebp
fisub
(bad)
loopne
(bad)
sar
pop
and
mov
shr
add
mov
test
and
jnp
shr
out
icebp
lods
or
sub
sbb
xor
sahf
mov
shr
fisub
cmp
std
sbb
cmp
push
cmps
ins
pop
adc
mov
outs
jne
xor
adc
int
dec
rcl
repnz
dec
xchg
and
sbb
mov
adc
cmp
mov
xlat
inc
mov
shl
shl
sub
das
cmp
inc
or
rol
inc
cdq
and
fcomp
or
je
jae
loopne
rcl
inc
push
fnstsw
sbb
shl
pop
retf
int3
pop
outs
dec
jnp
push
icebp
adc
mov
movs
mov
sub
jo
pop
adc
adc
repz
and
cmps
out
xor
aas
adc
pop
sar
sbb
stc
movs
jmp
xor
or
mov
pop
pop
jle
daa
ins
mov
bound
cs
sbb
add
add
mov
(bad)
int
cdq
into
loope
or
push
xchg
and
in
aaa
je
call
pop
scas
dec
rcr
jg
in
mov
out
idiv
adc
fidiv
cmp
pop
icebp
add
push
dec
inc
sar
(bad)
test
in
es
test
cvtdq2ps
ja
sbb
or
cmp
cmp
pop
jl
xchg
out
lock
aam
jmp
test
sbb
pusha
push
cli
push
pop
fiadd
ret
mov
out
aas
ds
dec
jbe
sar
in
mov
popf
popf
and
leave
push
mov
fucomi
xchg
test
cwde
imul
retf
data16
shl
mov
inc
lods
add
push
xor
lods
inc
ja
push
pop
outs
out
iret
push
cli
leave
pop
outs
jp
(bad)
jmp
xor
pop
inc
fiadd
sub
aas
adc
ds
add
push
add
call
jmp
or
mov
in
out
and
sbb
xchg
test
out
jle
add
call
cmp
pop
cmp
adc
aam
test
je
jg
sahf
mov
retf
test
sbb
imul
add
mov
loope
mov
mov
sbb
pushf
pop
dec
xor
outs
dec
mov
jge
fistp
test
inc
in
adc
jbe
inc
ret
pop
push
and
mov
push
daa
loopne
and
fdivp
or
pop
neg
std
out
dec
add
scas
push
mov
sbb
test
or
xor
sbb
fild
mov
sbb
aad
xor
add
loop
jo
je
or
(bad)
inc
and
cli
sbb
jmp
jne
dec
movs
jp
movs
xchg
mov
jo
sub
test
lods
cmp
cdq
rcl
sub
dec
in
inc
cmps
xor
in
pop
or
movsx
mov
aas
jne
mov
adc
ja
and
push
add
scas
or
adc
hlt
mov
test
dec
mov
in
fsubr
jle
popa
test
fstp
lods
cmp
out
and
aas
ror
cmp
test
addr16
pop
mov
into
push
cmps
out
in
sub
push
js
mov
hlt
je
clc
ror
xor
call
dec
test
iret
mov
lahf
dec
xchg
mov
push
push
or
xor
aad
mov
jno
dec
call
push
xchg
cmc
mov
cmp
add
loop
xchg
nop
out
bound
mov
fimul
and
push
mov
test
scas
int3
sti
shl
lds
imul
inc
ds
jno
cmp
cld
addr16
js
in
push
retf
dec
scas
jnp
push
fnstcw
cmps
add
cmp
popa
xor
arpl
out
add
fwait
daa
fisttp
push
fld
scas
xchg
enter
fdivr
mov
jle
enter
adc
out
sbb
scas
push
sbb
cmp
xchg
mov
jno
xchg
sub
xchg
xor
aaa
addr16
push
jmp
inc
pop
mov
loop
mov
dec
leave
and
mov
outs
adc
push
lock
js
or
aas
adc
jp
dec
adc
dec
daa
xor
xchg
pop
pop
jge
popw
and
jmp
mov
ins
pop
mov
bswap
push
push
rcl
rcr
ins
mov
not
sbb
xchg
xor
cmp
xor
cwde
mov
push
jns
jo
enter
mov
mov
sahf
outs
jmp
jp
fiadd
jns
push
push
js
or
loope
jp
add
inc
data16
aas
in
out
aas
ss
fst
fcomp
cmovg
gs
dec
cwde
(bad)
out
fld
retf
pop
mov
xor
and
mov
jnp
and
cmp
mov
adc
jp
mov
xchg
or
fwait
lods
adc
push
(bad)
dec
rcl
mov
stos
xchg
in
rcr
ror
(bad)
repnz
fs
xchg
push
or
movs
push
jnp
cmp
bound
das
shl
fwait
inc
loopne
sbb
xor
fwait
ret
fild
xchg
shl
enter
out
and
and
cmp
inc
int
jl
jb
push
adc
and
repnz
enter
add
pusha
enter
outs
push
loopne
daa
dec
mov
pusha
inc
shr
jecxz
lock
push
and
mov
popf
stos
mov
add
dec
add
sub
lds
xor
jno
xor
jb
lods
mov
sub
imul
sub
fdiv
or
mov
pop
fidiv
push
icebp
mov
xor
dec
daa
repz
push
ja
int3
stos
xor
ror
imul
lahf
lods
mov
sar
pop
inc
leave
call
inc
sub
lahf
sbb
fsub
push
sub
jl
js
retf
push
mov
pop
dec
jae
fistp
mov
div
repz
(bad)
sbb
retf
pop
add
push
in
add
jge
ror
add
shl
mov
cmps
mov
mov
jnp
imul
add
adc
test
stos
lds
or
fdiv
daa
ret
push
cmp
mov
outs
xchg
dec
or
rcl
(bad)
scas
mov
fsubr
les
int3
aas
inc
aam
ins
aaa
push
jge
popa
adc
aas
or
inc
sbb
xlat
jmp
sbb
je
int3
pop
jns
repnz
xchg
arpl
retf
inc
adc
pop
pusha
ficomp
mov
cmps
rcr
sbb
pop
test
iret
into
and
aad
adc
push
call
xchg
dec
xchg
fistp
cmp
cdq
inc
or
pop
push
out
add
js
and
adc
sub
sub
push
add
add
mov
fwait
jae
mov
aas
ins
lds
mov
ret
push
mov
jnp
sub
fdiv
xchg
call
and
sar
out
leave
hlt
push
and
sbb
rcl
pop
pushf
scas
sbb
pop
test
outs
je
repnz
in
dec
jg
call
and
jp
add
pop
mov
xchg
jne
mov
jns
enter
mov
or
in
outs
sti
pop
ds
mov
ins
add
xchg
sbb
imul
dec
lahf
sub
(bad)
cmp
cs
sub
jo
aas
loopne
imul
inc
inc
push
xchg
xchg
mov
scas
(bad)
call
iret
xlat
or
fst
ret
dec
fst
xchg
push
jo
jp
out
sub
hlt
popa
mov
sahf
jns
sbb
btr
aas
stos
add
xchg
jp
pop
mov
sar
fwait
push
sub
ss
inc
test
imul
in
adc
gs
in
push
dec
out
int3
mov
mov
jge
mov
adc
push
pop
push
out
imul
sbb
loopne
clc
jbe
hlt
popa
shr
movs
outs
or
xchg
jno
add
push
cli
test
xchg
or
ror
cld
jmp
popf
mov
test
scas
cmp
fiadd
xor
scas
imul
sbb
sub
jb
and
adc
fdiv
cmps
adc
xor
adc
rcr
cmps
mov
pop
adc
adc
or
in
je
(bad)
jno
nop
push
lods
sbb
ja
dec
xchg
fldenv
mov
jmp
xor
xor
mov
mov
cwde
rcl
lahf
mov
xor
sbb
pushf
pushf
mov
jns
xchg
sti
test
not
mov
sub
mov
out
xlat
push
mov
mov
pop
jge
jmp
(bad)
in
lods
mov
pop
test
cmp
hlt
popw
stos
inc
xchg
inc
ret
sbb
push
push
in
movs
outs
ja
mov
cmp
retf
jmp
pushf
lods
lahf
not
or
stos
inc
mov
adc
pushf
es
iret
push
fnstcw
das
iret
mov
inc
push
jmp
xor
dec
xchg
xor
or
or
bound
mov
mov
das
sbb
xor
or
shl
mov
sub
dec
jmp
mul
scas
rol
stos
xchg
jo
and
pop
test
sub
fimul
pop
ds
pop
adc
lock
daa
dec
cmp
adc
cs
scas
int3
push
movs
fdiv
jmp
sub
je
loope
cmp
push
iret
and
sbb
lods
dec
sub
mov
xor
icebp
and
call
push
mov
ss
sub
cdq
add
or
mov
shl
clc
daa
add
ins
and
fmul
mov
push
mov
sub
fldenv
sbb
dec
cdq
mov
js
shl
popf
jae
es
xor
cmp
and
shr
popa
inc
add
ins
mov
lds
xchg
aad
add
ins
iret
cmp
inc
mov
pusha
dec
repnz
test
pop
jnp
add
fs
sbb
mov
cmp
lods
and
sub
out
lock
push
ss
ret
pushf
js
jnp
mov
ds
outs
sbb
pop
lea
add
push
xlat
sub
loopne
aad
iret
pop
ins
dec
xchg
push
xor
sbb
jg
xor
cld
xlat
xchg
hlt
mov
imul
sbb
and
test
cmps
nop
ror
xchg
out
ins
test
cld
(bad)
out
inc
dec
into
(bad)
cli
ins
pop
popa
mov
fs
in
and
in
push
or
xor
pop
aaa
or
bound
sub
lock
rol
or
mov
inc
inc
ins
cdq
fldcw
mov
adc
xchg
out
dec
and
xor
pop
cmp
out
div
pusha
pop
push
fstp
adc
cmp
enter
mov
xlat
push
out
adc
jno
sub
outs
xchg
mov
int
and
jb
or
int
movs
mov
rcl
cmps
adc
loope
nop
in
xor
popa
dec
sbb
stc
mov
mov
in
gs
jl
sbb
mov
cs
mov
dec
jl
lahf
push
imul
ins
or
mov
add
(bad)
je
jno
push
mov
cdq
les
clc
add
add
(bad)
out
mov
or
loopne
sbb
call
stc
int3
push
out
mov
xlat
dec
pop
sbb
sti
xor
push
cmp
adc
mov
lods
stos
mov
dec
add
int3
movs
xor
movs
mov
fdivr
jle
xchg
in
add
inc
(bad)
sbb
cld
pop
adc
mov
mov
cdq
out
sbb
imul
in
out
ror
enter
push
xchg
(bad)
call
fcom
xchg
stc
in
dec
(bad)
iret
xchg
(bad)
jno
ins
cmp
cmp
stos
pop
loopne
push
xchg
stc
jns
push
dec
jae
or
repnz
mov
fwait
cmp
or
push
pop
xor
pop
icebp
rcl
nop
fild
jge
xchg
pop
xor
or
in
adc
mov
movs
fisubr
dec
xor
std
retf
(bad)
(bad)
adc
mov
pop
mov
es
inc
sbb
sbb
bound
lahf
add
imul
mov
sbb
inc
jg
add
test
push
pop
fldenv
stc
sub
rol
jecxz
shr
fimul
mov
mov
mov
adc
(bad)
lahf
mov
inc
test
xor
mov
mov
mov
fld
sub
sbb
mov
mov
pushf
stos
jp
ret
icebp
test
cdq
fidivr
(bad)
gs
aam
aad
fcomi
jmp
and
sahf
loop
test
mov
mov
ja
cmp
popa
jae
clc
(bad)
int
or
or
or
push
(bad)
xchg
adc
push
bound
ficom
push
es
cmp
pop
mov
pusha
or
les
and
push
add
fiadd
xchg
or
inc
pop
cmps
(bad)
retf
popa
sahf
mov
and
outs
mov
shl
imul
nop
ja
loope
les
or
xor
stos
cs
and
xchg
xor
cmp
loopne
dec
(bad)
sbb
add
or
xchg
sbb
cmps
push
es
push
inc
(bad)
fadd
xor
push
mov
daa
adc
jecxz
in
mov
inc
sub
out
test
or
xor
cmps
jmp
int3
int3
loop
adc
pop
sbb
mov
pushf
add
dec
mov
pop
jmp
lock
and
sbb
inc
adc
sar
cmps
and
repnz
daa
or
xlat
int3
aas
xor
or
cmp
shr
pop
add
push
rcr
adc
in
cmp
test
inc
push
shl
mov
or
not
fwait
iret
nop
sub
jge
cmp
dec
pushf
sub
pop
fld
sahf
dec
mov
dec
lahf
mov
mov
push
dec
bound
out
mov
fwait
sbb
mov
stc
sub
xchg
jmp
stc
dec
int3
push
push
inc
or
shl
ret
es
cmp
push
push
lods
inc
(bad)
pop
iret
add
xchg
adc
push
hlt
inc
push
fimul
les
mov
cmp
imul
jle
rol
cmp
cmp
xchg
repz
lods
sub
sbb
jmp
dec
loope
cmp
fist
stc
loopne
test
sub
push
dec
mov
inc
retf
pushf
mov
add
clc
in
xchg
xor
cmps
and
mov
dec
and
fwait
pop
push
aam
cmp
cdq
imul
pushf
push
test
and
xchg
dec
jae
mov
rol
rcl
add
int
push
popw
adc
or
sar
sub
popf
mov
inc
jnp
mov
inc
(bad)
dec
xchg
ins
out
iret
(bad)
in
mov
adc
clc
rcl
lea
cmc
mov
std
add
pop
scas
int
test
mov
xchg
fdiv
repz
xor
mov
jmp
push
adc
push
push
jnp
in
ins
cmp
ficomp
repnz
loop
pop
add
leave
out
int3
hlt
out
imul
cdq
fimul
ds
xor
stos
arpl
push
mov
loopne
and
adc
sbb
inc
sbb
xchg
call
frstor
jmp
dec
push
jecxz
sahf
rol
cmp
outs
sti
aam
mov
(bad)
jecxz
addr16
pop
pop
mov
push
iret
shl
cmp
push
and
loop
add
xchg
dec
movs
jnp
cli
dec
stos
lods
xor
push
fs
cli
or
mov
nop
push
scas
out
fnsave
pop
movs
pop
mov
mov
icebp
aam
rol
and
jmp
loopne
adc
and
jmp
hlt
mov
and
jns
popf
imul
inc
enter
shl
add
imul
fwait
cdq
inc
sub
fwait
sub
fsubr
xlat
pop
ja
popf
repnz
or
stc
pop
adc
dec
jmp
pop
icebp
mov
mov
cmps
inc
in
retf
seto
pop
aas
pop
xchg
push
pop
fdiv
je
mov
jns
out
mov
popf
mov
inc
push
lahf
adc
outs
mov
pop
lds
fsubr
(bad)
cmps
in
test
add
fsubrp
shr
push
sbb
test
popa
retf
or
mov
inc
push
dec
je
push
cwde
mov
mov
outs
dec
mov
loope
inc
test
jne
push
fwait
mov
add
adc
sbb
cdq
stos
cmps
xor
pop
dec
mov
dec
sar
cli
out
push
mov
shl
adc
fucomip
mov
into
sub
in
or
dec
cmp
xchg
aad
in
(bad)
call
add
popf
in
dec
cmp
pushf
imul
lahf
loope
pop
cmc
repz
mov
xchg
lods
fst
adc
enter
cmps
out
xchg
fwait
xor
out
jge
iret
xor
xor
push
mov
lods
push
aas
icebp
and
rcr
inc
cmp
or
repz
int
push
pop
cmps
dec
cmps
jle
movs
test
adc
fcmovne
pop
mov
or
pop
mov
cld
push
stos
cmp
sub
sbb
xchg
jecxz
mov
and
dec
pop
push
jbe
mov
test
mov
arpl
repnz
mov
sub
je
and
jae
sti
adc
pushf
inc
xor
push
int3
mov
jmp
pushf
dec
loope
pop
loope
lahf
dec
dec
dec
sbb
movs
loop
in
xchg
js
and
inc
jno
sahf
movs
push
jmp
cmp
pop
jle
or
or
test
repz
retf
add
fidiv
inc
mov
adc
retf
into
cmp
loop
cmp
inc
call
adc
mov
cmc
xchg
inc
and
sub
rol
or
mov
js
test
inc
sbb
scas
mov
mov
lds
cmp
adc
lds
adc
lea
clc
adc
into
lock
or
repz
popf
neg
inc
int3
in
pop
stos
pop
sub
xchg
inc
call
pop
jp
or
inc
gs
jo
mov
outs
aad
neg
retf
fsub
cwde
push
iret
adc
adc
rcr
cmps
dec
cmps
fild
arpl
bound
fidivr
mov
mov
test
sahf
test
cmp
icebp
push
test
or
in
and
xor
fldenv
in
jbe
dec
(bad)
fdiv
mov
(bad)
rcl
or
mov
fcmovu
mov
test
dec
push
push
popa
nop
sub
mov
dec
sbb
or
loop
mov
push
cmps
mov
jmp
pop
imul
lahf
add
mov
call
mov
xchg
test
sub
das
ss
pop
stc
retf
inc
xchg
lea
pop
cmp
pop
cmp
(bad)
xor
fwait
(bad)
xchg
repnz
cmp
cmps
jae
adc
(bad)
test
cmps
enter
jns
jle
sar
dec
xchg
mov
add
sbb
adc
push
sub
ficom
pop
sub
inc
sbb
fadd
leave
sar
jbe
xchg
bound
push
sbb
outs
cmp
stos
repnz
mov
mov
dec
or
daa
(bad)
jge
fyl2x
test
ror
sbb
data16
mov
ja
adc
xlat
pop
div
idiv
ins
fistp
jg
mov
lock
sbb
sub
xor
mov
lahf
dec
aad
mov
push
and
mov
retf
(bad)
jecxz
dec
mov
lds
ds
pop
xchg
ret
jg
in
push
adc
fild
mov
retf
fwait
sub
je
lds
das
mov
mov
movs
xlat
das
call
jmp
inc
call
mov
push
push
sub
stos
add
movs
out
mov
es
stc
aas
adc
adc
pop
rol
cvtdq2ps
xchg
jne
data16
mov
leave
mov
or
cs
mov
xchg
xchg
xor
or
jge
sar
je
or
xchg
mov
sbb
in
ins
jge
jp
or
aad
mov
pushf
fdivr
int3
mov
and
inc
mov
test
push
loop
push
inc
jae
jle
nop
imul
rcl
jl
add
dec
inc
add
or
dec
movs
inc
push
das
mov
mov
mov
mov
ss
test
fs
mov
aad
add
rcr
mov
pop
lock
les
jle
ss
sbb
push
xlat
outs
jg
test
ret
test
mov
add
sbb
and
lods
and
fidivr
push
pop
into
sahf
push
and
rol
dec
dec
pop
sbb
push
cmp
fmul
lahf
dec
xor
rol
das
mov
movs
dec
xchg
dec
jecxz
out
xchg
(bad)
cld
sbb
test
sti
pop
mov
cmp
jb
jp
je
lahf
mov
outs
out
in
mov
loope
and
xor
jbe
repnz
fxch
push
cwde
ror
mov
mov
jge
adc
ja
dec
cld
ret
loope
xor
movd
xor
add
inc
mov
adc
fst
xchg
outs
mov
mov
jle
jmp
fisubr
pop
and
sub
out
pop
jns
cs
xchg
and
xchg
xor
xor
dec
or
shl
cdq
enter
retf
aad
shr
repnz
pop
pop
(bad)
(bad)
shr
jno
pop
aaa
inc
nop
ins
xchg
test
lahf
and
sub
cmps
outs
inc
pop
popa
mov
pop
mov
nop
xchg
dec
mov
int
dec
aad
clc
movs
or
sar
bound
inc
std
xor
icebp
xchg
out
sahf
in
imul
pop
js
adc
or
mov
aam
jge
xor
cmp
pop
mul
loope
lods
xchg
stc
arpl
sbb
call
sub
xchg
cmc
adc
cmp
loop
test
or
xor
movs
jge
cmc
jns
adc
call
mov
ins
and
scas
or
lea
or
enter
xchg
jo
ss
jb
push
jp
leave
aam
xlat
ds
inc
jecxz
xchg
popf
inc
rol
push
out
and
sbb
imul
or
push
aas
sbb
adc
pusha
bound
test
or
add
cmps
out
ss
popa
pop
mov
cmp
add
data16
add
cmps
push
adc
adc
aaa
xor
repz
test
add
mov
jle
jmp
movs
les
push
outs
xchg
int
fsubrp
(bad)
fwait
aas
xor
enter
ret
out
cdq
cmc
dec
movs
mov
mov
pop
std
pop
and
and
adc
cmp
and
in
inc
movs
adc
loopne
ret
mov
xchg
fld
add
lds
(bad)
div
retf
arpl
movs
jle
jns
jmp
mov
sub
outs
pop
pop
mov
jle
cmps
out
add
or
int3
lea
push
mov
jae
loopne
jns
les
popa
sar
sbb
xor
retf
jae
jnp
xor
xchg
jns
mov
pusha
cmps
cwde
xor
sub
xor
add
sub
ins
or
imul
sub
and
sub
mov
xchg
es
adc
mov
push
cmps
jb
sbb
rcl
xchg
aaa
pop
jmp
icebp
outs
xor
sbb
xchg
(bad)
ficom
adc
aad
or
xchg
int
mov
fmulp
cmps
pop
stos
(bad)
mov
imul
jecxz
retf
fnsave
sbb
mov
push
fnstenv
inc
aad
cdq
scas
test
xor
add
pop
movs
iret
in
retf
mov
push
rcl
dec
push
ret
jno
pop
push
adc
fild
lahf
dec
jae
aas
aad
std
or
xchg
test
nop
mov
hlt
jle
(bad)
xor
arpl
cdq
push
jns
push
adc
cmps
das
or
out
mov
mov
jns
sti
push
xchg
fnsave
int3
and
mov
sbb
not
ds
dec
dec
scas
xchg
jle
ss
cmc
ja
int3
lock
mov
xor
mov
loope
(bad)
out
aad
or
or
mov
dec
repz
or
in
pop
mov
mov
dec
in
mov
icebp
lods
lods
lock
imul
add
std
ror
xor
push
jl
cmc
push
dec
or
jmp
mov
loope
mov
sub
dec
shl
pop
xor
xchg
call
add
cmp
fcmovne
inc
pop
xlat
gs
cmps
icebp
ret
xchg
in
mov
test
aaa
xor
gs
push
into
pop
and
sbb
and
mov
jl
mov
(bad)
clc
mov
jle
sub
and
xor
into
jl
push
ins
push
mov
sub
dec
pop
adc
mov
xchg
jle
adc
neg
cli
push
les
jge
data16
dec
je
lock
hlt
mov
jno
data16
or
out
xor
dec
cmc
xchg
(bad)
push
pusha
mov
adc
jnp
aas
gs
sub
jle
stc
stos
push
inc
fiadd
xor
(bad)
mov
(bad)
mov
ss
dec
fisub
test
and
imul
test
(bad)
icebp
ss
(bad)
mov
dec
call
add
fs
call
pop
push
fsubr
or
mov
(bad)
std
sbb
jecxz
je
rcl
test
scas
ss
out
sub
adc
ret
push
lods
call
cmp
cmps
inc
or
ins
cmp
frstor
sub
(bad)
out
shl
sub
rcl
icebp
stos
xor
mov
push
ret
in
jb
sbb
jno
or
xchg
dec
xor
pop
push
dec
push
iret
dec
out
iret
imul
lock
jo
out
dec
dec
inc
cmp
mov
cmp
jmp
jnp
or
dec
hlt
in
inc
icebp
or
inc
dec
lds
mov
jns
adc
dec
lods
add
add
adc
jg
ror
cmp
aad
(bad)
sub
call
fild
jecxz
aad
cmp
sbb
sub
dec
jecxz
sbb
cmp
inc
pop
mov
bound
call
pop
iret
jo
pop
and
and
or
mov
out
dec
lea
imul
ins
lahf
mov
or
sti
and
pop
bswap
(bad)
in
pop
mov
cmp
(bad)
lods
add
mov
xlat
pop
lea
das
sub
dec
sbb
xchg
fs
push
(bad)
fistp
iret
cmps
test
cmp
sub
loop
mov
loope
adc
cli
enter
mov
xchg
dec
sub
ret
mov
add
cld
push
(bad)
add
(bad)
dec
fs
js
sub
mov
int3
hlt
adc
les
js
imul
cmp
add
leave
outs
cmp
jp
or
mov
adc
in
inc
push
inc
fcmovu
cmp
pop
push
dec
fdivr
(bad)
or
xchg
sbb
and
sub
lds
and
jns
xor
jl
scas
sti
sub
gs
ficomp
outs
push
pop
popa
enter
mov
in
pop
repz
pop
mov
inc
mov
cwde
ficom
push
inc
lea
push
xchg
jge
(bad)
or
sar
jno
mov
cmps
data16
inc
outs
push
dec
(bad)
dec
or
mov
push
cmp
aam
inc
in
dec
gs
retf
dec
(bad)
jmp
xchg
bound
xlat
push
mul
mov
push
loop
add
add
gs
retf
mov
dec
cmps
outs
cmp
sbb
push
cli
nop
cmp
inc
dec
mov
inc
or
cmps
cmp
fild
jl
in
inc
popf
pop
or
fist
cmp
pop
push
imul
sub
ins
aad
adc
rcr
mov
xor
push
push
xchg
mov
pop
fidivr
dec
ds
mov
sub
sub
and
stos
sbb
mov
ss
mov
jbe
(bad)
mov
imul
mov
gs
jp
adc
add
mov
dec
add
movs
nop
fild
sbb
mov
repnz
xor
es
xchg
pop
lods
cli
(bad)
mov
xor
ins
movs
xchg
lods
lds
push
ins
ror
mov
jmp
and
jg
jge
push
mov
aaa
fs
push
cmp
jne
jl
dec
cmp
push
lods
ret
jl
cwde
dec
ds
mov
jno
movs
add
ret
aaa
cmps
cmp
or
(bad)
repz
add
imul
pop
and
hlt
sub
lds
xchg
push
(bad)
mov
retf
adc
shr
inc
scas
call
cmp
xor
test
in
push
add
sub
add
jns
hlt
aad
rol
mov
sub
sub
icebp
les
adc
add
cmp
jl
jl
dec
scas
in
jmp
push
ds
or
mov
and
xchg
loop
jle
ret
adc
jl
cmp
loop
pop
stc
xchg
mov
mov
cli
push
adc
ins
mov
out
out
cmps
mov
push
jne
sbb
shl
pop
mov
sti
jbe
push
pop
inc
in
test
rcl
(bad)
push
das
cmp
lea
dec
ins
call
idiv
lods
xchg
xlat
dec
adc
cmp
sar
mov
mov
into
ds
btc
push
push
fmul
mov
mov
stos
fist
jns
mov
add
dec
mov
setp
hlt
out
dec
test
push
pushf
mov
(bad)
sub
arpl
xor
sbb
not
pop
push
ins
loopne
add
jnp
cld
inc
mov
jle
std
dec
sti
loope
call
test
sub
mov
xchg
scas
movaps
not
add
sub
enter
fdivr
jb
fstp
(bad)
std
pop
test
push
pop
mov
clc
dec
outs
push
xlat
cld
sub
call
ss
js
xor
add
and
out
mov
jl
mov
ss
xchg
(bad)
push
and
cwde
arpl
cmp
xor
cld
cmc
jl
pop
rep
inc
mov
adc
xor
cwde
or
aaa
push
pop
push
mov
or
(bad)
xor
xor
or
ficom
dec
pop
(bad)
repnz
call
sbb
nop
xor
inc
std
pusha
ja
ja
call
je
pop
sar
(bad)
xor
cmp
or
ret
aam
and
or
mov
fxtract
(bad)
jmp
cmp
dec
clc
add
jle
dec
lahf
repz
push
(bad)
jle
dec
fisttp
mov
sub
movs
xchg
loope
lahf
dec
cs
inc
std
sahf
int
sar
sub
imul
les
jnp
adc
gs
jmp
jecxz
int3
add
popf
movs
mov
and
cmps
push
retf
xor
mov
cmp
mov
cmp
inc
sub
sbb
or
pop
fld
inc
jns
clc
sahf
mov
mov
push
cmc
(bad)
cmps
popa
ret
and
xor
std
cmps
lods
addr16
jle
out
add
dec
cmps
and
push
jns
pop
dec
retf
sbb
mov
inc
out
cdq
xchg
(bad)
je
shl
and
and
xchg
mov
xchg
shl
lods
and
(bad)
pop
add
pushf
jo
adc
ficom
push
test
add
imul
mov
(bad)
dec
lea
mov
sahf
(bad)
and
add
jnp
js
retf
das
push
xchg
add
icebp
push
and
inc
sbb
jp
int3
sbb
hlt
add
dec
xor
fimul
jle
shr
pop
inc
push
dec
ds
pop
repnz
adc
icebp
xor
dec
xchg
push
enter
push
and
bound
cmp
push
test
into
push
mov
or
popf
int3
jecxz
fistp
fisub
jge
pop
(bad)
pop
ret
xor
in
lods
js
shr
push
sar
mov
sbb
xchg
jo
inc
mov
daa
stos
popf
dec
mov
daa
mov
popa
jne
in
jb
dec
or
rol
adc
addr16
hlt
ret
cmp
call
pop
pushf
clc
into
call
loopne
cmp
cdq
test
mov
mov
ror
(bad)
aad
push
pop
adc
ins
cmps
popa
push
xchg
js
push
jne
sbb
push
aas
inc
adc
(bad)
movs
xchg
ficomp
sbb
out
addr16
fstp
add
xchg
cmp
ins
mov
sti
push
add
pop
mov
sbb
ja
xchg
icebp
repnz
jnp
lds
inc
fisubr
mov
in
and
popa
mov
js
mov
daa
add
xlat
in
dec
add
xor
scas
das
aas
inc
shr
dec
mov
sti
ja
aam
mov
add
aaa
popf
pusha
adc
jno
or
push
mov
call
fwait
mov
xor
add
mov
add
mov
xchg
pop
xchg
lods
xchg
mov
cmp
jl
scas
pusha
ins
sub
sbb
rcr
in
sub
mov
enter
add
shl
jge
inc
pop
xor
cmp
inc
push
xor
xchg
sbb
(bad)
mov
xor
cmps
stos
jmp
bound
cmp
jo
das
mov
push
adc
iret
fisubr
cmp
mov
jno
add
pop
iret
ins
adc
nop
js
push
mov
enter
push
into
inc
adc
xchg
sbb
cwde
out
loope
push
pop
cmp
idiv
inc
cmp
mov
pop
xchg
std
movs
pop
rol
dec
ja
shr
cmc
push
fdivp
cmp
bound
cmp
sar
das
jo
jae
xor
push
sub
shl
sub
push
mov
ficomp
dec
je
mov
test
add
ins
movs
ins
jg
xchg
push
data16
ret
mov
outs
cmp
out
inc
sub
sub
mov
jp
mov
push
gs
retf
cmp
pop
jmp
cmp
cmp
and
push
xchg
loope
and
mov
lds
push
sub
out
mov
cli
adc
out
mov
adc
call
in
nop
in
push
(bad)
mov
sub
(bad)
popf
add
arpl
sub
cmp
add
and
loop
ds
out
hlt
inc
clc
test
push
adc
mov
aaa
or
shr
jp
arpl
lahf
xchg
imul
(bad)
xlat
xchg
and
xchg
leave
add
(bad)
cmp
or
mov
(bad)
arpl
out
inc
sub
push
and
je
mov
outs
retf
cmp
xchg
pusha
ror
and
push
loop
cmp
mov
push
loopne
dec
push
adc
iret
and
or
imul
push
inc
sbb
add
idiv
dec
pusha
fwait
add
cdq
mov
fsubr
sbb
lods
lea
xor
loopne
sti
or
dec
test
cmps
xchg
mov
jg
fiadd
std
loope
mov
movs
fbld
mov
popf
es
push
in
or
or
pop
je
adc
lods
inc
retf
pop
inc
jae
xchg
pop
mov
ja
mov
sub
dec
fnstsw
out
psraw
scas
stos
push
mov
and
lea
mov
stc
xor
xor
xor
sub
lds
scas
sbb
xor
xchg
movs
stos
adc
or
popf
nop
pop
sub
enter
push
cmc
call
ss
pop
add
jl
add
or
in
add
and
sbb
sahf
fld
(bad)
xchg
sbb
adc
add
inc
pop
cmp
and
aas
aas
rcl
cmp
fnstcw
add
outs
loopne
es
jns
push
leave
shl
fwait
dec
add
adc
mov
popf
enter
jg
scas
call
push
adc
lods
xlat
or
or
pop
(bad)
jmp
push
mov
fld
mov
push
retf
ret
out
imul
int3
jne
or
stc
push
xchg
mov
(bad)
sbb
adc
addr16
fcom
sbb
sti
xchg
fisubr
fmul
inc
mov
inc
mov
inc
dec
nop
(bad)
lock
aaa
pop
loopne
test
(bad)
and
push
(bad)
jmp
inc
add
(bad)
shl
jns
xchg
test
pop
push
xchg
sbb
dec
js
jno
cmp
sbb
fsubr
fisubr
repz
cmp
push
test
pop
js
sbb
mov
mov
pop
gs
sbb
jae
dec
xchg
fsubr
imul
push
js
in
pop
pop
sbb
adc
scas
cmps
inc
mov
cmp
mov
loope
and
xchg
adc
(bad)
or
daa
xor
lea
out
pop
mov
and
data16
and
adc
scas
enter
cld
out
jb
pusha
jae
xchg
and
adc
add
and
(bad)
in
in
sbb
add
lahf
adc
mov
xchg
mov
leave
or
ror
sbb
cmc
call
and
out
dec
mov
jg
cmp
adc
xchg
push
dec
mov
xor
addr16
xor
rcl
stos
(bad)
repnz
repnz
ret
(bad)
in
ins
dec
repnz
or
sbb
cld
push
push
es
scas
xor
retf
xor
pop
mov
setge
mov
arpl
scas
ja
daa
cmps
inc
mov
push
add
mov
movs
pusha
jo
loopne
test
out
cmp
mov
das
ret
mov
pop
add
es
aas
call
dec
push
cmps
mov
test
xchg
or
lods
mov
mov
mov
push
sbb
icebp
push
or
rcl
scas
dec
arpl
leave
out
in
adc
out
adc
jo
int3
lea
dec
push
ret
mov
loope
daa
outs
in
jo
out
pop
mov
loope
mov
stos
(bad)
or
(bad)
out
leave
cmovg
clc
retf
jmp
dec
adc
dec
out
out
jecxz
dec
popf
lods
test
lahf
and
ins
push
into
fmul
pushf
xchg
push
fsubr
stos
pop
inc
sub
retf
in
(bad)
xchg
retf
int
sbb
shr
xor
icebp
inc
out
cmp
arpl
pop
pusha
popa
dec
mov
xor
jno
lods
mov
loope
and
inc
mov
mov
jbe
or
push
jecxz
jmp
movs
ja
stc
(bad)
in
jbe
and
sub
jno
push
inc
cmp
and
sbb
mov
jmp
add
xacquire
mov
daa
daa
shr
in
(bad)
es
sbb
nop
sub
add
lods
mov
gs
cmps
cmp
jae
xor
add
mov
xchg
sbb
inc
ror
aad
call
pusha
lods
pop
test
aam
test
(bad)
shl
add
push
dec
aam
mov
pop
daa
mov
and
cmp
mov
rcl
loope
mov
in
popf
xor
loope
xor
sar
or
push
rcl
ins
cmp
sahf
iret
leave
stos
jmp
dec
nop
sbb
xchg
mov
leave
adc
mov
pop
xor
mov
jbe
cwde
pop
xor
xor
push
scas
mov
je
sbb
hlt
cmp
xchg
jge
pop
jmp
xchg
mov
pusha
stos
jbe
lods
xor
test
mov
jae
fwait
pusha
sub
in
stos
dec
movs
xor
or
mov
jns
cmp
iret
movs
xor
cmps
mov
mov
lea
push
or
in
or
sub
mov
shr
mov
bound
jne
arpl
dec
or
add
jecxz
sbb
add
fbstp
pop
sub
outs
pop
rcr
pop
(bad)
pop
int3
lods
add
daa
jge
and
pusha
data16
in
inc
icebp
in
fs
gs
fwait
pop
stos
or
rcl
rcl
fs
inc
fcomp
call
fs
mov
in
pop
add
lods
push
lock
jecxz
icebp
add
js
mov
data16
fcomp
sbb
mov
xor
xor
movs
cmp
or
movs
cmp
mov
(bad)
retf
in
ret
sub
test
stc
imul
cld
sub
clc
sub
mov
ja
popa
hlt
pop
sub
push
mov
jmp
jp
cmp
adc
sub
add
xchg
outs
xor
dec
repz
jecxz
sahf
push
mov
je
shr
ficomp
cmpps
xchg
and
pop
bound
adc
xchg
test
cmps
xchg
push
sub
mov
mov
dec
cld
retf
(bad)
arpl
xor
jle
cmp
fstp
test
clc
and
pushf
jp
popf
into
xor
push
(bad)
sbb
inc
push
jbe
(bad)
and
inc
in
mov
sub
adc
push
ret
(bad)
dec
mov
xor
aas
(bad)
test
dec
adc
scas
mov
jno
mov
(bad)
sbb
rcr
inc
mov
xchg
mov
inc
or
and
das
add
mov
mov
cli
sub
aam
pop
or
shr
sub
ss
aam
gs
test
ffreep
aaa
mov
dec
mov
dec
loope
cmp
sbb
test
pop
les
sub
fsub
pop
push
sbb
adc
std
(bad)
imul
jg
daa
fldenv
adc
or
push
jmp
fld
jmp
pop
cmp
mov
cmp
out
aam
in
loope
push
xchg
cmp
xchg
sbb
jb
push
jb
mov
scas
loope
sbb
push
pushw
mov
daa
pushf
inc
inc
fstp
icebp
xchg
imul
adc
sub
pushf
lods
sub
repz
dec
push
mov
adc
aas
cmc
jmp
and
test
fistp
stc
retf
sti
add
pop
icebp
mov
jge
(bad)
shr
or
pop
icebp
(bad)
adc
jmp
dec
rcr
call
fild
ror
fmul
jns
mov
ror
and
data16
fld
push
jmp
push
sbb
dec
add
mul
in
jl
cdq
add
ins
pop
ret
pop
test
(bad)
push
sub
fiadd
cmp
xchg
cmp
xor
push
or
jmp
push
sti
fs
in
out
dec
in
popa
ud0
push
mov
mov
std
add
pusha
mov
sbb
and
(bad)
repz
cld
stos
retf
mov
mov
and
test
jae
in
stc
sub
cmps
sub
mov
xchg
aam
(bad)
adc
ins
jp
add
mov
out
adc
xchg
or
dec
(bad)
xlat
push
stos
or
xchg
scas
xor
or
sub
(bad)
les
loopne
xchg
adc
sti
popf
pop
pop
test
popf
dec
ja
dec
popa
push
adc
scas
sub
jp
hlt
jnp
pop
or
sar
pop
adc
loop
sahf
fisttp
cmp
push
sub
in
jae
sub
sub
sahf
(bad)
inc
lahf
jbe
loopne
jb
rcr
or
sub
mov
adc
pop
out
xchg
or
add
clc
push
mov
loope
lea
xor
ret
jp
test
mov
lock
test
movq
mov
(bad)
aas
lahf
in
stc
mov
add
sub
ja
xchg
xchg
adc
sbb
jl
and
xchg
push
fisttp
push
mov
iret
pop
mov
(bad)
lahf
cmps
cmc
mov
scas
mov
call
add
repnz
xor
xor
pop
fwait
xchg
mov
movs
sub
add
daa
repnz
ds
cmp
sub
sahf
call
add
push
mov
ja
fimul
sbb
popa
shr
sti
jae
lods
add
pop
inc
imul
lock
and
in
adc
mov
mov
dec
xchg
pop
push
dec
jp
imul
mov
clc
mov
ins
in
mov
push
xchg
xchg
cmp
mov
cmp
ret
stos
test
jnp
daa
popa
mov
sahf
push
jae
dec
add
mov
rcr
adc
jo
mov
and
std
sbb
jmp
cmc
jbe
fs
je
stc
rol
jbe
dec
ret
inc
adc
xchg
sub
mov
or
das
(bad)
jl
xchg
lods
pop
pushf
adc
pop
mov
push
int3
in
leave
cmps
push
aad
cmp
in
xchg
jmp
retf
dec
(bad)
jle
retf
int3
pop
test
rcr
das
and
sub
fadd
and
push
out
pop
lods
mov
retf
imul
test
das
mov
lock
inc
pushf
(bad)
js
loope
cmps
test
xchg
iret
(bad)
fisttp
push
inc
and
cmp
fbld
push
dec
test
adc
setge
clc
int3
push
std
movs
cs
data16
test
adc
xor
and
add
test
or
(bad)
test
mov
cmps
xor
popf
push
mov
das
push
outs
xor
std
inc
inc
stc
adc
repnz
cmps
pop
mov
lods
xchg
cmp
(bad)
dec
add
mov
repnz
mov
and
xor
mov
addr16
dec
lds
jo
or
fistp
movs
out
int3
(bad)
mov
nop/reserved
fild
ins
sub
(bad)
jl
pop
add
sbb
push
xchg
int3
push
push
rcr
mov
or
mov
mov
xchg
dec
lock
sub
mov
xchg
test
push
push
arpl
add
into
adc
push
mov
shl
mov
out
aas
int3
cmp
jge
clc
cmp
mov
stc
sahf
jae
xor
push
mov
data16
adc
scas
inc
push
mov
jne
mov
aaa
pop
jp
dec
cld
sbb
dec
test
xor
aad
stos
(bad)
pop
adc
movs
popf
popa
jnp
inc
xor
adc
cmps
xchg
push
cmc
xchg
and
cld
leave
jne
es
dec
movs
(bad)
xor
xor
mov
sbb
cmp
jbe
cwde
mov
fcom
pop
lods
bound
push
inc
mov
aas
dec
int3
pop
sahf
xor
pop
data16
mov
pop
test
pause
mov
fsubp
cmp
cli
ret
jne
push
sub
xor
jle
cmp
pop
std
jo
add
add
out
adc
or
and
ins
mov
js
je
cmp
mov
lods
adc
movs
cwde
inc
popf
mov
and
ja
aam
les
popf
fs
mov
clc
mov
push
dec
movs
mov
iret
xor
enter
and
outs
shr
pop
(bad)
ror
cmps
stc
fwait
xchg
aas
repz
inc
cmp
ror
adc
mov
movs
jg
shl
and
xor
inc
pop
das
cmp
retf
shl
xor
mov
hlt
push
gs
(bad)
out
mov
shl
xchg
ss
fisubr
dec
bound
scas
shl
aas
cmp
inc
mov
push
(bad)
fsub
adc
jmp
or
(bad)
ror
cmp
scas
cmc
dec
jmp
ret
and
jecxz
adc
push
ror
sbb
push
jle
cmps
add
mov
fdivr
push
or
add
jns
hlt
xor
fcomp
das
nop
mov
cli
xchg
aas
arpl
sar
mov
push
mov
call
lods
pusha
lds
adc
ja
lods
daa
icebp
sbb
call
sub
sbb
sti
pop
cmp
pop
push
push
pop
pusha
xor
das
mov
leave
and
cmps
pop
dec
add
pop
push
adc
mov
lods
lock
push
not
aaa
push
xor
sub
xor
push
push
jl
mov
das
mov
bound
(bad)
jne
or
movs
adc
sub
xor
mov
pop
pop
test
pop
popf
loopne
nop
pop
jb
ja
sub
fidiv
jmp
inc
fstp
dec
mov
ror
out
pop
mov
mov
jnp
xor
adc
imul
xor
test
mov
inc
push
jbe
push
pop
fcomp
out
mov
mov
into
int3
jp
je
and
(bad)
cmps
call
adc
mov
pop
xchg
gs
mov
push
es
push
inc
into
shl
inc
inc
sbb
cmps
imul
xor
ja
pusha
cmp
jle
xchg
cmp
mov
fisttp
jnp
jl
cmp
jo
pusha
mov
adc
lds
cmp
jle
xor
mov
nop
inc
popa
cld
cmp
das
out
fsub
jecxz
dec
mov
or
fs
mov
xchg
inc
(bad)
mov
cmp
stos
aaa
les
push
imul
pop
cmp
mov
in
or
out
cmp
aam
pop
test
sub
sub
jge
or
out
mov
pushf
test
xor
adc
mov
xor
sbb
jp
inc
xchg
cmp
mov
inc
sub
mov
aam
sbb
and
and
jno
push
pop
adc
lock
fs
repnz
jno
js
pop
scas
push
leave
or
repnz
outs
out
push
push
cmp
sub
xchg
cmp
pop
add
push
xchg
sub
shr
or
sbb
cld
dec
mov
retf
mov
out
fidiv
leave
out
ror
pop
jmp
mov
and
fdivr
cmp
ins
adc
mov
jp
imul
jb
cmp
xor
mov
sub
(bad)
dec
scas
ret
and
cmps
cs
dec
mov
mov
xor
mov
imul
mov
pop
mov
daa
mov
out
pop
aas
fstp
aaa
jmp
leave
push
inc
push
in
je
or
push
push
mov
sahf
dec
jb
sbb
pop
xchg
lock
inc
sbb
xchg
test
mov
hlt
dec
cli
rol
sub
repnz
(bad)
sub
push
cdq
push
jmp
outs
jo
shl
xor
sbb
loopne
shl
in
in
or
push
cwde
in
sub
adc
and
cmc
jecxz
jns
inc
dec
pop
mov
out
jg
mov
ret
jecxz
mov
xlat
mov
movs
sbb
retf
(bad)
jb
jne
cdq
xlat
mov
mov
call
push
in
push
xor
jo
mov
dec
je
push
nop
(bad)
lea
in
xchg
lds
dec
test
mov
mov
xlat
sub
pop
adc
cmp
pop
or
pop
(bad)
xlat
mov
fldln2
mov
dec
ins
cli
jmp
clc
jle
pusha
aas
int3
pop
add
test
xor
pop
jne
lea
pop
jp
jmp
pop
fbstp
retf
mov
mov
jge
ror
push
sub
adc
fild
aad
dec
loope
or
pop
push
out
pop
cmp
cmp
(bad)
nop
pop
cld
inc
int
inc
jecxz
ror
xchg
mov
jge
sbb
push
jmp
push
adc
mov
lahf
neg
int
and
scas
xchg
jns
fwait
sbb
clc
lea
mov
(bad)
jnp
sbb
out
xchg
popf
je
push
xor
(bad)
jmp
cmc
es
sahf
inc
std
rol
retf
lods
ret
cmp
retf
mov
dec
push
xor
xchg
xchg
jo
outs
adc
(bad)
dec
jg
in
(bad)
fldcw
cmc
lea
xor
jno
mov
or
lea
outs
lock
into
push
inc
repnz
xor
ret
stos
sbb
out
jo
sbb
pop
test
in
fdiv
add
lods
je
repz
push
sub
lahf
add
shl
sbb
inc
xor
add
ja
jmp
stc
cmp
pop
sub
dec
cmc
xchg
cmp
es
cmp
xlat
and
jne
pusha
hlt
std
add
std
mov
mov
inc
mov
cmps
xchg
push
mov
xchg
pop
mul
add
xor
retfw
addr16
inc
sub
xchg
arpl
dec
aaa
retf
xchg
mov
(bad)
into
cmc
cld
mov
xchg
adc
loop
sbb
pushf
cs
cli
je
and
push
repnz
bound
xchg
arpl
cmc
inc
arpl
loop
test
scas
std
sahf
in
es
adc
push
xchg
out
cmp
mov
mov
cld
jnp
sub
xchg
(bad)
fstp
cmps
or
sub
jl
sahf
pop
imul
xor
jae
(bad)
ds
xchg
cmp
cmp
mov
mov
shl
(bad)
push
push
repz
add
stc
mov
push
sbb
aas
dec
out
sbb
jg
rol
push
imul
mov
test
jp
xchg
add
jnp
jbe
inc
aaa
dec
adc
imul
push
jmp
lea
xor
or
ret
(bad)
and
fsubr
pop
push
outs
add
sub
push
popa
push
aas
retf
and
lahf
sti
mov
sahf
mov
out
xlat
jmp
xchg
cmp
fcmovnu
mov
fiadd
and
dec
cdq
and
enter
pop
push
adc
js
mov
mov
pop
jb
ficom
adc
push
das
test
les
inc
test
xor
call
pop
int3
mov
(bad)
jge
sar
adc
jl
cmp
sbb
arpl
rol
pop
and
jb
call
bound
jnp
ins
mov
xor
adc
jp
out
mov
test
sbb
es
xor
xchg
shr
test
xor
mov
ret
mov
(bad)
aaa
sbb
jae
jnp
jnp
mov
pop
jmp
jns
mov
xor
(bad)
sub
into
and
cwde
push
es
imul
cwde
jle
ss
imul
lock
and
xchg
and
mov
mov
mul
jp
sti
mov
sub
pusha
inc
push
pop
sahf
dec
cli
or
dec
stos
mov
fwait
(bad)
popf
pop
and
sbb
int
imul
outs
out
ret
sub
mul
data16
adc
jl
or
mov
or
lods
aas
inc
add
xchg
push
dec
imul
xlat
cmps
mov
out
fmul
mov
push
cmps
pop
add
jle
mov
stos
imul
mov
jmp
lahf
push
cmp
or
mov
inc
xor
mov
adc
sbb
and
lds
add
cmps
dec
lods
jl
int3
int3
inc
test
fdivr
lock
jnp
pop
dec
repnz
pop
out
mov
leave
call
mov
jp
pop
ins
dec
cmp
js
adc
movs
sub
shl
pop
call
or
call
cmps
jg
sub
add
scas
fstp
daa
aas
adc
push
(bad)
xchg
cdq
mov
add
mov
repnz
data16
mov
out
ret
pop
stos
(bad)
sub
cmp
lock
or
es
call
mov
mov
les
bound
and
cmp
jmp
hlt
test
or
sti
pop
loopne
pop
dec
sbb
lods
jl
lods
push
push
out
jno
dec
mov
sahf
or
mov
clc
xor
es
aaa
movs
mov
sub
jno
inc
in
lods
ror
jp
lods
push
inc
out
and
ficomp
push
retf
pop
fsubrp
adc
add
push
cwde
sbb
add
ins
dec
lea
xor
es
into
stc
xlat
stos
cs
cmp
push
add
stc
push
xor
adc
(bad)
icebp
cwde
jns
fist
dec
xchg
repz
repnz
pop
(bad)
outs
or
lods
xchg
push
dec
popf
and
and
xchg
lzcnt
dec
jge
xchg
mov
or
sti
scas
scas
xor
pop
push
(bad)
jo
sub
or
xlat
push
js
dec
repz
pop
(bad)
rcr
sahf
vsubps
push
cmp
jbe
add
movs
fisttp
test
test
pop
pop
pop
lea
mov
int
stos
xchg
js
stc
das
stc
int3
loopne
sbb
ss
xor
mov
dec
movs
sub
mov
(bad)
neg
push
rcl
movs
inc
aad
mov
adc
sub
ds
sbb
cli
gs
lea
inc
ret
sbb
or
sahf
xchg
pop
cmp
pop
or
pushf
cmc
std
pusha
cld
data16
int
add
cmps
inc
xor
cdq
mov
inc
xchg
jnp
(bad)
jl
jb
or
sub
and
popf
or
xor
loopne
and
call
xor
inc
mov
bound
mov
add
test
dec
xlat
or
jno
test
sbb
or
out
and
fbld
repnz
mov
xor
add
or
push
icebp
cwde
arpl
sub
ror
in
not
cmps
sbb
adc
loope
dec
outs
hlt
loopne
push
add
neg
sub
das
push
ret
call
repz
out
ins
mov
jb
sub
fdivr
xor
and
push
and
shr
jo
sub
hlt
jne
xchg
outs
pop
mov
addr16
sbb
(bad)
dec
out
and
lds
and
gs
pop
fldenv
repnz
aaa
mov
pop
xchg
addr16
push
add
mov
test
retf
shr
pusha
imul
pop
push
inc
mov
add
and
cmp
(bad)
fcmovne
ret
push
push
mov
cdq
pop
dec
rcl
ins
xchg
add
lahf
jno
mov
mov
push
add
popa
adc
imul
pop
pop
jno
or
mov
pop
dec
jno
mov
ret
mov
movs
iret
loopne
sub
sbb
push
hlt
dec
rol
lods
ja
pop
or
cld
cmps
xlat
mov
xor
and
retf
cmovae
ds
inc
mov
add
inc
jae
mov
push
jo
inc
or
xchg
add
add
dec
jbe
xor
in
loopne
test
into
test
shl
(bad)
cmp
imul
jg
js
gs
dec
xchg
data16
imul
es
pop
xor
add
mov
shr
mov
adc
popf
adc
pop
push
inc
pop
dec
xchg
clc
pushf
push
movs
cmc
sti
in
sbb
bound
and
out
mov
loop
imul
jbe
shl
es
and
retf
stos
in
inc
aas
das
inc
xor
call
jle
and
mov
xor
into
fistp
outs
stc
loop
and
loope
mov
sub
je
push
xchg
or
mov
xor
aam
xchg
mov
call
sub
retf
mov
jne
add
in
into
bswap
add
inc
stc
jge
mov
sbb
jl
lds
rcr
(bad)
(bad)
mov
(bad)
mov
in
aas
scas
add
mov
(bad)
in
mov
and
jne
lods
dec
inc
iret
jp
fs
cli
add
sub
cmps
ss
ins
frstpm(287
mov
and
adc
stos
mov
mov
outs
fild
fcom
pop
xor
aad
lock
fsubr
mov
xchg
mov
mov
xor
rcl
or
mov
fbstp
lods
lock
out
enter
(bad)
mov
jbe
sbb
jl
rcl
stos
loopne
sub
dec
jbe
mov
into
dec
es
push
out
xchg
fistp
cmp
pop
neg
inc
lahf
stos
push
adc
cld
pop
adc
sahf
xor
pop
aad
outs
lds
mov
sbb
and
jo
inc
arpl
lock
aas
fst
ins
inc
xor
cmp
jbe
xchg
inc
lods
sbb
fist
aas
dec
and
add
(bad)
sub
mov
call
mov
mov
mov
jae
sbb
mov
(bad)
aad
sub
js
leave
pop
sub
jae
pop
jo
popf
jecxz
xchg
cli
cli
imul
push
std
pop
jge
mov
outs
dec
pop
mov
and
sbb
dec
sub
jecxz
aam
sbb
jecxz
mov
pop
sub
adc
adc
sub
inc
mov
repz
sbb
fisubr
dec
test
jmp
aas
cmp
pop
call
and
jmp
outs
les
push
sub
cmp
push
rcr
mov
adc
test
test
popf
add
std
repnz
sub
les
sub
aaa
js
pop
fild
cmps
xor
jno
xchg
xor
xor
dec
dec
fwait
add
loope
sub
adc
cli
leave
(bad)
rcr
sub
hlt
test
pop
inc
js
sbb
rcr
imul
sbb
push
fstp
xchg
pusha
dec
repnz
shl
push
sub
frstpm(287
shr
jbe
mov
dec
pop
cli
jnp
dec
xchg
dec
dec
scas
adc
popa
mov
repnz
mov
call
cmps
(bad)
pop
jp
enter
fldenv
test
add
test
sbb
outs
scas
inc
push
sbb
fisub
loop
enter
fild
fdiv
adc
cli
mov
or
sbb
mov
pushf
stc
movlhps
adc
fwait
mov
mov
es
inc
jmp
enter
icebp
lahf
call
pop
push
cmp
je
sub
inc
mov
stc
test
mov
sbb
mov
or
jb
stos
cmp
jbe
daa
mov
pop
pop
(bad)
push
dec
mov
arpl
paddw
push
xor
jae
pop
mov
push
mov
popa
call
data16
or
(bad)
sbb
mov
sub
clc
jno
mov
loopne
push
sbb
loopne
(bad)
fild
(bad)
ret
mov
add
mov
xor
data16
pop
push
je
div
inc
fdivp
cmp
rol
or
xor
movs
mov
pop
(bad)
add
pop
cdq
imul
scas
dec
out
lods
cmps
xor
xchg
and
movs
push
fwait
mov
sahf
sbb
ja
retf
or
or
xchg
scas
pop
repnz
lds
mov
in
(bad)
xchg
jle
pop
pusha
jmp
(bad)
adc
ss
gs
outs
in
push
(bad)
and
xor
add
bound
repnz
(bad)
es
xchg
xchg
jg
outs
in
cmps
je
ds
mov
cmp
adc
icebp
push
cwde
ja
xor
push
mov
pop
les
repz
mov
or
adc
mov
pop
nop
adc
mov
iret
mov
adc
dec
cmp
mov
sti
add
(bad)
add
mov
inc
nop
js
fadd
dec
ss
ins
pop
lahf
mov
cmp
sub
jge
adc
scas
(bad)
mov
jecxz
shr
mov
and
cmps
mov
mov
nop
or
jnp
js
pop
sub
adc
std
out
push
push
pop
in
out
aas
xchg
xchg
int
repz
mov
xlat
jno
cmp
adc
fwait
xchg
sbb
into
pushf
mov
cld
pop
sahf
mov
jne
aam
or
sbb
sti
stos
xchg
repz
xor
rcl
inc
into
icebp
mov
pusha
xchg
out
jmp
xor
pop
jg
sti
cmc
sbb
sbb
(bad)
popf
fwait
dec
cmp
test
xor
in
sbb
sub
movs
icebp
mov
cmp
popf
in
push
mov
adc
inc
test
fdivr
aad
out
or
dec
adc
jns
data16
mov
adc
stos
ins
ds
pop
inc
loopne
mov
push
stc
nop
push
push
and
push
mov
jmp
faddp
lea
jg
mov
bound
call
ret
jge
pop
jp
fmul
pop
mov
leave
dec
sbb
or
cmp
mov
cmp
mov
mov
mov
sub
or
das
jo
inc
adc
add
shl
pop
mov
and
test
sar
push
push
ja
cwde
(bad)
sub
lds
sbb
mov
or
add
ja
jns
test
sbb
jp
lods
sub
jb
ficom
popf
inc
cwde
jmp
pop
imul
xchg
inc
shr
fstp
mov
adc
and
js
xor
lock
pop
mov
sub
xchg
gs
mov
int
sahf
ins
out
jne
jp
outs
dec
xlat
mov
in
mov
cdq
sub
pop
xor
mov
and
fcomp
jp
popf
jns
push
mov
jle
mov
push
xchg
cli
sbb
lahf
es
pop
int3
add
mov
sbb
(bad)
cmc
sbb
xchg
bound
icebp
jae
fistp
push
in
xor
mov
fcomp
inc
ins
mov
mov
clc
xchg
cdq
adc
ins
mov
mov
enter
leave
mov
inc
sub
inc
in
mov
lahf
(bad)
mov
adc
int
in
inc
sbb
out
mov
xchg
pushf
addr16
sbb
mov
mov
push
cmp
push
xlat
mov
inc
getsec
(bad)
mov
nop
pop
xchg
sbb
shr
popf
(bad)
push
push
sti
mov
mov
(bad)
jae
sbb
xchg
cmp
mov
out
mov
jl
xor
xchg
stos
sub
mov
push
out
adc
cdq
adc
addr16
pop
sti
nop
sbb
push
hlt
jle
aas
mov
xor
push
scas
sti
lods
inc
scas
jnp
mov
mov
adc
inc
fs
test
push
sub
mov
ins
mov
scas
xor
imul
pop
inc
push
add
aaa
jmp
outs
jge
xchg
xchg
adc
sub
mov
push
add
shl
push
inc
(bad)
sbb
jmp
or
mov
retf
sbb
les
out
push
add
xor
repz
add
sbb
lock
ret
pop
and
push
cmp
shr
retf
or
and
clc
scas
xchg
popa
fisubr
jmp
add
imul
repnz
sti
add
sahf
xor
xor
adc
inc
shl
jo
mov
popf
mov
aad
push
or
adc
sbb
inc
pop
js
mov
inc
and
mov
mov
dec
inc
pop
xor
movs
mov
cmp
stos
inc
stos
push
mov
mov
ret
ret
mov
bound
dec
mov
pushf
add
push
mov
cwde
push
scas
pop
lahf
test
cmps
icebp
ins
push
sbb
cmp
cmc
xlat
(bad)
not
addr16
or
push
sub
jmp
pop
neg
push
(bad)
cld
mov
pop
imul
mov
(bad)
pop
sub
push
jne
and
xchg
pushf
sbb
sbb
ins
into
jno
or
loopne
dec
mov
(bad)
lods
rol
cmp
sub
neg
jecxz
daa
cdq
dec
push
push
loope
fldcw
sub
and
loopne
js
add
sub
mov
mov
push
outs
pusha
das
inc
ja
test
and
mov
jle
sbb
call
(bad)
pop
add
ds
xor
call
jns
jae
mov
in
jb
jns
dec
pop
lea
push
sysret
das
imul
bound
push
mov
adc
mov
and
movs
or
fsubr
aas
or
mov
and
lods
clc
stos
sbb
movs
pop
imul
in
test
lock
sub
and
xchg
sbb
bound
pop
xor
out
sub
fwait
in
leave
icebp
sub
mov
inc
mov
loope
add
int3
jl
out
pop
mov
pop
mov
mov
(bad)
sti
daa
fcom
js
and
popa
in
mov
(bad)
dec
xor
mov
pop
and
jbe
or
xor
lock
fcomp
xor
test
pop
jecxz
fld1
xchg
pusha
int3
or
inc
and
or
push
xchg
aad
dec
stos
ret
push
jne
pop
out
fnstenv
lock
dec
pop
out
retf
shl
mov
sahf
push
out
push
cmp
push
push
mov
sar
jne
xchg
fnstcw
fisub
imul
into
repz
push
test
cdq
jns
ins
(bad)
js
pusha
mov
enter
xchg
dec
out
imul
inc
(bad)
xchg
xchg
lods
retf
pusha
jle
sub
test
xor
mov
mov
cmovae
sbb
repnz
xor
inc
(bad)
in
fwait
pop
mov
inc
hlt
mov
scas
(bad)
and
pop
scas
cmp
(bad)
ret
leave
out
adc
xor
js
rcr
pop
aam
xlat
ficomp
pop
sbb
push
jmp
sbb
pop
movs
imul
fild
into
not
xor
bound
lahf
int
pop
fild
cmp
nop
push
mov
test
and
push
outs
adc
sub
nop
inc
aas
add
push
mov
lods
fdivp
jae
imul
mov
loope
fimul
jmp
mov
mov
loopne
inc
mov
or
add
push
push
sub
mov
or
jmp
inc
call
pop
sbb
les
cli
jle
xchg
vcmpps
fcom
cmp
lds
hlt
dec
and
ins
push
push
sub
add
jns
lea
sbb
and
cs
stc
ja
les
pop
mov
dec
dec
retf
jns
dec
gs
or
mov
push
lods
(bad)
mov
not
xor
test
arpl
push
retf
jl
xor
xor
sar
jnp
fbstp
std
ins
jg
push
cwde
ficom
rcr
adc
and
mov
xor
cmp
stos
pop
xor
xchg
adc
or
(bad)
ja
mov
js
sub
retf
pop
xchg
jo
(bad)
ja
repz
das
xchg
test
mov
inc
outs
jb
cmps
add
outs
cmp
sar
push
jne
pop
shr
or
daa
inc
jle
stos
jecxz
push
iret
mov
mov
and
es
sahf
das
repz
lock
outs
mov
push
dec
aad
out
test
daa
inc
jbe
cdq
mov
push
shl
es
sub
iret
push
add
pop
push
sbb
mov
lahf
pusha
pop
mov
test
retf
repnz
fdivr
push
dec
inc
sbb
cmp
cmp
movs
jl
mov
daa
mov
lods
jnp
dec
jg
movs
xor
mov
xor
mov
mov
int3
jo
into
jo
xchg
call
or
xchg
add
out
and
in
push
mov
fisub
xor
adc
cmc
mov
push
cwde
int
jno
xor
test
sahf
pushf
push
lods
ds
loope
mov
and
cmp
dec
(bad)
cmps
rol
rcr
pop
imul
scas
xlat
cdq
stc
sbb
jp
inc
test
loop
sbb
dec
inc
push
fld
int3
(bad)
adc
test
pop
outs
inc
adc
cld
jle
and
mov
test
pop
cmp
aaa
lahf
std
mov
pop
pop
jbe
fidivr
pop
mov
xchg
dec
cs
mov
jl
cwde
inc
bound
retf
mov
aam
push
xor
pop
jne
jbe
adc
push
pop
ror
shr
aam
mov
call
xchg
mov
jne
cmps
sub
popf
ins
stos
call
xchg
test
adc
loope
xor
call
push
js
adc
arpl
call
cwde
nop
and
outs
xchg
adc
add
sub
stos
sub
mov
fidivr
xchg
or
outs
call
ret
cli
daa
adc
mov
sahf
stos
jne
add
lock
test
test
xor
push
movs
mov
stos
push
shr
jge
in
or
cmp
and
movs
jns
dec
jne
jns
fnstenv
jmp
or
pushf
sub
into
mov
shr
in
jmp
retf
add
into
lahf
out
add
adc
push
retf
ficom
pop
inc
sbb
sub
aas
pop
mov
xchg
xor
and
pop
dec
mov
add
idiv
or
adc
adc
sbb
cmp
mov
imul
and
xchg
(bad)
sahf
mov
enter
ja
test
jecxz
mov
push
dec
xchg
es
sar
call
retf
xchg
shl
pusha
push
mov
push
jmp
shl
sbb
or
sahf
ss
and
jg
xor
fld
jb
jecxz
push
outs
pusha
loope
leave
jnp
test
inc
in
jmp
cmp
push
fdivp
icebp
(bad)
int
retf
lds
pop
mov
xchg
inc
dec
es
lds
cld
sub
dec
in
jb
not
mov
cmp
and
jb
sub
push
cwde
repnz
cld
or
es
jg
ss
mov
and
cdq
jle
cli
dec
jmp
imul
mov
jns
pop
mov
mov
xchg
xchg
ds
fst
push
xchg
popa
int
jnp
sub
pushf
cli
push
inc
push
cmp
cmp
dec
sbb
mov
sbb
stos
retf
sub
or
inc
jno
jb
mov
xor
(bad)
daa
pop
inc
push
add
inc
popa
inc
dec
mov
xlat
lea
dec
int
scas
jne
push
and
pop
pusha
lahf
add
xchg
mov
popf
mov
ins
and
enter
daa
in
ror
iret
lahf
in
xlat
add
pop
push
sbb
std
loopne
pop
into
rcr
cmp
out
dec
jmp
mov
cmp
movs
pop
les
push
retf
sbb
rcr
inc
xor
sbb
add
add
call
jg
loop
jne
jae
test
fcomp
jnp
fwait
cdq
pusha
and
push
xchg
or
sub
mov
adc
push
fdivp
push
movs
sbb
jg
jge
pop
push
xor
enter
cmc
cs
scas
pop
aaa
out
push
cli
mov
sub
or
adc
rcr
mov
fisub
mov
data16
pop
jle
enter
mov
ss
lds
(bad)
jmp
sub
push
nop
out
in
jecxz
or
mov
sbb
cld
fadd
jmp
jle
je
popa
xor
popf
cmps
test
shl
pop
pop
add
mov
mov
clc
mov
add
aaa
shl
(bad)
sbb
(bad)
sub
and
add
imul
out
(bad)
xlat
int3
push
mov
stos
lea
aam
cmps
push
cmove
xor
cwde
push
in
jle
loopne
shl
in
mov
or
add
(bad)
pop
xor
cmp
iret
ds
xchg
nop
add
adc
in
mov
pop
dec
mov
mov
inc
pop
jb
mov
sbb
inc
fs
mov
cli
(bad)
in
jle
mov
and
mov
cmps
dec
or
outs
mov
adc
inc
inc
mov
mov
aad
hlt
cmps
movs
dec
test
retf
aas
push
outs
mov
ds
mov
mov
mov
mov
dec
nop
push
xlat
inc
sahf
dec
push
cmp
jb
mov
cdq
pop
mov
push
hlt
mov
mov
sub
cmp
xchg
mov
push
(bad)
jbe
fst
out
mov
and
pusha
xchg
pop
and
iret
ror
lods
lea
call
(bad)
jbe
dec
push
clc
add
mov
push
jae
sti
xchg
sub
jnp
or
cld
lock
push
hlt
test
add
popf
push
mov
icebp
push
dec
push
pop
les
das
cli
cmp
mov
cmp
pop
lock
stos
push
shl
sbb
dec
aad
or
dec
lock
or
lea
xchg
push
jbe
and
adc
dec
clc
cmp
ffreep
or
push
ja
jl
sbb
adc
pop
scas
shl
rcr
sub
mov
popf
add
xchg
stos
cmp
sbb
xor
pop
sub
(bad)
int
inc
sub
lea
cmp
cwde
mov
push
ror
loope
inc
mov
jnp
addr16
xchg
cdq
push
pop
adc
sbb
fisttp
inc
push
jbe
xchg
movs
inc
fcom
lahf
pop
addr16
movs
imul
rcr
adc
sub
jle
out
xor
mov
push
cmp
jnp
sub
movs
push
ins
add
stos
dec
pop
xchg
xor
sar
scas
pmulhw
fdivr
in
or
xor
cmc
cli
addr16
(bad)
iret
nop
lods
ins
dec
mov
xor
aam
push
pop
ret
pop
and
pushf
sahf
repnz
jl
addr16
mov
out
fadd
xor
jle
out
icebp
cmps
es
test
xchg
fnstsw
fld
aas
inc
sub
pushf
push
fwait
push
test
daa
dec
int
inc
fs
pop
cmp
shr
aam
std
leave
mov
aam
xchg
addr16
or
neg
out
mov
rcr
mov
pop
into
xor
out
mov
inc
into
dec
pushf
dec
inc
adc
jbe
xor
mov
ret
std
into
iret
out
ds
xchg
add
xchg
inc
loop
stc
dec
push
push
or
sbb
js
mov
movs
or
jmp
jno
jnp
stc
sub
iret
and
ins
pop
out
into
mov
push
cld
(bad)
movs
mov
push
fwait
bound
dec
std
pop
xor
xchg
daa
pop
clc
adc
xor
lea
pop
cmp
fnstenv
imul
sub
sbb
repnz
stc
ins
cmps
test
lahf
inc
cmc
inc
loopne
fild
fisttp
and
mov
adc
fadd
(bad)
es
sbb
mov
fidiv
pop
mov
mov
gs
loopne
mov
sbb
retf
popa
inc
fwait
inc
call
loope
mov
pushf
out
ror
cs
adc
sbb
mov
out
ds
das
pop
clc
inc
mov
iret
sbb
or
je
sbb
imul
scas
fstp
fdivrp
xchg
mov
inc
xchg
mov
and
sbb
(bad)
(bad)
pop
or
sub
mov
xchg
test
sub
out
push
and
data16
xchg
mov
movs
fild
jg
pop
add
jp
imul
fidivr
mov
clc
cdq
mov
or
leave
pop
inc
mul
int3
(bad)
(bad)
cmp
fnstenv
cdq
xor
loope
lods
cmc
inc
dec
aam
sub
clc
and
enter
sar
push
mov
push
(bad)
popa
xchg
or
add
addr16
inc
add
ins
mov
je
pop
jbe
test
lahf
test
push
ds
jl
jnp
sbb
in
paddw
xchg
arpl
mov
scas
scas
xchg
std
mov
mov
add
push
shr
adc
mov
fisttp
mov
aad
ret
ja
jmp
sub
cs
retf
mov
aam
mov
cmp
push
lods
(bad)
call
or
adc
dec
lahf
sub
out
fadd
inc
loopne
(bad)
scas
int3
cmps
shl
stos
popf
mov
xor
and
sahf
sub
xchg
ss
jecxz
popa
pop
dec
add
ss
pop
mov
xchg
add
inc
test
movs
arpl
cmp
sahf
pop
or
xchg
(bad)
in
jg
inc
test
adc
sub
sbb
cmp
pop
mov
pop
mov
jp
mov
push
xchg
pop
pop
in
addr16
push
mov
fdivr
pop
lods
xor
(bad)
cmp
sbb
retf
aaa
nop
xor
mov
and
and
(bad)
mov
sub
(bad)
mov
repz
shl
push
aas
arpl
call
push
sbb
xor
ror
pop
jno
adc
push
scas
sbb
pop
div
inc
stos
ins
loopne
aad
mov
pop
cmp
push
(bad)
shl
pop
sbb
inc
loope
fnstsw
xchg
mov
push
mov
sahf
push
mov
ins
ficom
mov
xor
je
call
dec
popa
rcl
paddusb
jbe
mov
aaa
jl
pop
in
pop
mov
outs
mov
mov
imul
dec
ins
mov
xchg
rep
dec
rcl
xchg
jl
repnz
ret
sbb
retf
(bad)
pop
xchg
jmp
cmps
sbb
cwde
jp
xchg
xor
cdq
cld
js
and
pop
jl
mov
shl
jge
cmp
push
add
mov
cmp
imul
and
aad
mov
or
cmp
fxam
shr
ror
jne
stos
push
xor
jl
or
jmp
cmps
lahf
leave
data16
jmp
int3
out
imul
test
dec
or
add
or
mov
push
das
out
pop
sub
inc
test
in
mov
xor
iret
xlat
adc
jge
cmp
add
xor
std
jne
pop
cmps
sub
pushf
push
dec
adc
sub
aaa
jns
mov
neg
add
jo
push
fs
ret
xchg
push
test
pop
mov
inc
adc
jbe
in
pop
repz
aam
and
pop
cmp
sar
ins
arpl
jg
stos
push
or
repz
aas
fldln2
and
or
iret
lock
jns
fdiv
pop
cmc
mov
dec
rcr
xchg
(bad)
out
push
mov
(bad)
cmp
add
loopne
mov
lds
call
xor
and
cmp
es
cmp
mov
dec
mov
inc
cmp
stos
fcmovne
sbb
addr16
inc
mov
fistp
xchg
js
xchg
shr
pusha
test
bound
mov
outs
(bad)
cld
inc
sub
add
adc
rcl
cmp
fbld
test
rcr
outs
das
int
stos
cmp
(bad)
jns
fild
or
dec
pop
xchg
pop
mov
jle
jo
push
push
(bad)
jecxz
aam
sbb
idiv
add
dec
imul
jmp
mov
test
mov
in
or
iret
mov
aad
and
ret
retf
mov
sub
mov
sub
jp
adc
jecxz
inc
mov
pusha
jns
lock
shr
sbb
imul
cdq
dec
and
push
lahf
mov
jmp
dec
add
and
inc
lods
add
adc
mov
adc
fnstenv
or
scas
dec
out
dec
int
inc
dec
nop
cmps
cli
xchg
pushfw
xchg
fs
cli
pop
data16
daa
mov
ss
imul
int3
fidiv
xor
push
fmul
push
enter
icebp
dec
(bad)
mov
cli
stos
xlat
pop
ds
mov
or
add
pop
cdq
les
mov
pop
and
inc
xchg
shl
sbb
pusha
ja
push
jl
pusha
cmp
or
pop
add
loop
mov
mov
add
out
push
inc
cmp
pop
jae
dec
or
loope
das
test
and
(bad)
fst
pop
in
lods
repnz
jae
loope
push
push
push
out
mov
ret
int
fucomip
inc
imul
retf
xor
inc
adc
ja
inc
xchg
lahf
loop
mov
cmp
popa
cs
cli
sub
mov
pop
mov
fadd
data16
xchg
mov
mov
jbe
sbb
inc
arpl
(bad)
shr
out
mov
push
mov
push
lods
pop
nop
call
pop
test
fisttp
and
and
jge
pop
gs
in
cmp
and
inc
pop
scas
add
ins
jnp
dec
imul
(bad)
aaa
dec
dec
test
jb
jns
inc
fldcw
mov
(bad)
(bad)
mov
jl
push
scas
xor
cmp
jae
cmp
xchg
sti
ret
scas
mov
pushf
call
jmp
add
mov
pop
jl
test
xchg
mov
ins
mov
pusha
movs
pop
jns
push
ins
pop
sbb
les
out
jmp
mov
xchg
and
ja
sub
in
xchg
fcmovnbe
add
or
dec
ror
inc
out
mov
sub
aam
out
jbe
adc
mov
repz
gs
ja
xchg
dec
loope
adc
add
popa
jb
cli
jo
ds
jmp
inc
ret
aas
jge
xlat
dec
lods
retf
(bad)
in
push
loope
lods
imul
and
dec
retf
call
sub
mov
inc
out
mov
inc
inc
fwait
ins
out
int3
inc
or
pop
mov
xor
adc
and
or
(bad)
jno
popf
test
into
retf
add
inc
scas
retf
aam
mov
jge
stos
and
fwait
jl
in
add
push
hlt
inc
test
push
or
inc
pop
sub
outs
and
ja
pop
xor
xchg
popa
pop
xchg
shl
mov
adc
mov
in
outs
test
pop
popa
popa
pop
cmp
push
clc
not
jno
cmp
imul
adc
xchg
sahf
xchg
add
and
xor
shr
fisubr
mov
adc
mov
sbb
jns
pushf
xchg
inc
push
adc
sub
xor
or
mov
cmps
adc
sub
iret
je
or
imul
lahf
je
cmp
mov
mov
pop
repnz
and
jnp
pop
dec
arpl
xor
fwait
iret
mov
dec
mov
(bad)
push
inc
dec
and
sar
mov
ret
fsubr
cli
or
and
retf
fmul
pop
(bad)
mov
mov
pop
retf
fcmovnbe
xor
xchg
hlt
shl
call
add
jp
jae
(bad)
das
ret
(bad)
xor
sahf
adc
and
mov
outs
dec
add
pop
push
fwait
or
ficom
call
lahf
in
sbb
test
cmp
inc
hlt
or
iret
das
dec
add
stos
sahf
push
es
push
sub
out
pop
xor
test
pop
test
push
cld
shl
jp
call
jne
jbe
push
mov
inc
pop
push
mov
pop
(bad)
push
ret
pop
xchg
nop
pop
or
sub
sbb
sub
pop
jle
add
ret
jmp
loope
mov
mov
xchg
dec
repz
sbb
lds
ja
cmp
arpl
mov
push
outs
(bad)
sub
in
ja
sbb
popf
in
xchg
sub
retf
push
sbb
sub
lods
pop
inc
pushf
dec
push
or
adc
push
mov
xchg
imul
mov
dec
inc
arpl
mov
push
gs
out
add
test
data16
mov
inc
fisttp
add
mov
gs
and
jmp
fcom
inc
mov
mov
jne
femms
and
sub
mov
inc
cli
xor
xchg
jl
mov
pop
cmp
fcmovnbe
outs
dec
faddp
repz
mov
inc
mov
cmp
ins
(bad)
ror
test
sbb
sbb
cmp
xchg
inc
mov
popa
(bad)
pop
cmp
stos
stos
xor
push
pop
sub
pop
sbb
xor
lea
int
xchg
xchg
(bad)
int3
xchg
sbb
mov
shr
int
mov
loop
add
leave
ja
push
xor
jo
shr
mul
fucomip
push
mov
inc
mov
jmp
loope
ss
ins
mov
ins
push
mov
dec
pusha
mov
retf
add
jns
mov
cli
cmps
loopne
rcl
jle
mov
sbb
jg
sbb
(bad)
push
out
mov
pop
stos
xor
outs
js
and
mov
mov
mov
paddw
leave
mov
enter
sahf
dec
mov
adc
xor
pushf
or
mov
inc
adc
cmp
pop
ja
hlt
and
inc
pop
or
icebp
ins
popf
(bad)
pop
in
lods
jmp
retf
cwde
xchg
lock
and
pop
mov
stos
cwde
inc
outs
cmp
icebp
fsubr
sbb
add
fbstp
jno
scas
ret
mov
fcom
mov
(bad)
jg
mov
enter
movs
sub
xchg
inc
mov
in
jb
stos
daa
call
ret
aas
and
(bad)
xchg
aam
jecxz
enter
adc
adc
loope
dec
pop
(bad)
mov
push
dec
sub
inc
pop
ds
das
sub
inc
sti
adc
pop
in
mov
(bad)
stos
sbb
ret
aaa
xchg
push
xlat
and
push
stos
sub
lea
sbb
cdq
pop
fcmovnbe
in
mov
in
and
and
push
dec
xchg
jno
cdq
cmps
les
pop
(bad)
xchg
inc
mov
cmps
sub
jo
inc
pop
pop
sub
inc
(bad)
(bad)
aad
jmp
pushf
xchg
(bad)
xchg
and
rcl
cmp
jg
xchg
unpcklps
mov
xchg
aam
mov
push
pop
ss
cmp
mov
push
(bad)
(bad)
mov
cmp
enter
and
add
test
mov
pusha
pop
out
xchg
mov
adc
(bad)
lahf
sbb
fcomp
ds
aam
jns
dec
mov
stos
xchg
push
jae
mov
jp
cmp
pop
xchg
mov
sti
cs
jo
outs
adc
dec
cmps
stc
dec
and
mov
bound
ficom
rol
dec
cmp
ret
mov
lds
hlt
ja
ins
mov
test
jne
ficom
add
daa
mov
or
pop
mov
adc
cmp
pop
inc
loop
loope
sbb
mov
pushf
push
push
shl
call
push
ins
lods
sub
xchg
and
in
jg
pop
stos
aaa
aad
test
xor
mov
adc
loop
stc
pop
loopne
mov
test
je
ins
loopne
sub
ret
jns
arpl
sar
(bad)
and
mov
mov
lods
out
scas
or
sub
mov
loop
xor
imul
mov
mov
test
icebp
mov
or
mov
inc
push
mov
test
repnz
imul
loope
sbb
jb
xor
(bad)
push
frstor
sbb
hlt
add
jne
jg
xchg
out
jl
cld
fimul
aas
aam
jns
push
stos
sahf
push
dec
inc
(bad)
punpckldq
lods
in
jmp
(bad)
iret
and
adc
jbe
scas
jbe
call
cwde
add
sbb
mov
dec
mov
push
or
aam
iret
push
inc
sub
add
add
outs
mov
push
(bad)
cmp
addr16
rcl
pushf
mov
push
mov
in
repz
pop
adc
(bad)
push
gs
inc
outs
fs
jbe
nop
call
sub
jmp
sbb
pushf
les
test
nop
pushf
outs
sbb
mov
(bad)
jno
jno
sti
shr
xchg
and
xor
repnz
popa
dec
xor
mov
enter
pop
add
mov
push
and
pop
cmp
dec
cld
jo
dec
loop
jnp
mov
and
xor
mov
mov
(bad)
sub
fimul
mov
enter
fs
(bad)
and
and
cmp
faddp
clc
sti
mov
mov
and
ins
or
retf
repz
sbb
jno
pop
fnstsw
inc
bnd
xchg
stc
aaa
mov
fnstenv
inc
pushf
sbb
ss
mov
lock
in
mov
in
add
xchg
sti
call
or
ret
loopne
mov
out
sar
cmp
stos
pshufw
mov
xchg
xor
ins
bound
xor
mov
loope
(bad)
mov
icebp
(bad)
adc
push
jns
push
imul
sbb
inc
jns
fnstcw
movs
into
loope
xor
jle
clc
daa
push
adc
shl
xchg
cmp
pop
jbe
pop
or
out
push
or
imul
dec
pop
int3
sbb
fnstsw
nop
adc
push
cmp
rsm
cdq
es
icebp
outs
jmp
pop
ss
das
sub
mov
mov
mov
cwde
xchg
jns
nop
je
fwait
sub
repz
(bad)
loop
mov
mov
xor
sbb
mov
jbe
in
xchg
lods
imul
xchg
loop
scas
jbe
out
mov
or
js
or
adc
pop
int
jmp
pop
sar
mov
int
push
xchg
lock
icebp
mov
push
jae
iret
out
fldenv
mov
pop
nop
xor
add
sub
mov
sti
ins
inc
inc
pop
jp
test
push
(bad)
fwait
push
sbb
add
pop
or
aaa
lods
mov
xor
lea
cdq
pop
sti
cmp
in
dec
out
mov
pop
bound
stos
fwait
inc
outs
lods
jnp
jecxz
push
jbe
mov
sub
jnp
jmp
push
inc
dec
call
nop
jns
sub
lods
inc
inc
xlat
push
(bad)
movs
movs
fadd
clc
loop
aaa
test
mov
sub
icebp
mov
jge
pop
shl
pop
(bad)
xor
ret
mov
arpl
sbb
mov
sar
push
cli
dec
push
xor
mov
sbb
and
mov
adc
std
mov
imul
clc
adc
xchg
fnsave
adc
jns
sub
push
push
jmp
cwde
xchg
sar
test
inc
push
dec
aas
mov
aad
icebp
pop
jne
jl
outs
sbb
fs
pusha
cmp
adc
sahf
adc
popf
jmp
mov
pop
inc
jne
call
and
stc
push
adc
mov
xor
inc
and
in
(bad)
(bad)
outs
dec
not
dec
inc
arpl
repz
pop
mov
add
pop
inc
jno
mov
xor
js
sub
jg
js
pop
xor
nop
cmp
loope
(bad)
imul
jnp
icebp
test
push
(bad)
js
sub
outs
sub
pop
fmul
sahf
retf
pop
xchg
push
call
jno
add
push
sbb
pop
mov
ds
inc
jp
iret
cmp
xchg
jae
movs
add
xchg
retf
js
cmp
call
adc
mov
mov
dec
sbb
mov
mov
test
rdtsc
jbe
lea
scas
or
das
add
stc
dec
dec
call
aad
mov
idiv
mov
sbb
mov
push
lods
or
cmp
popf
jbe
cmp
ds
aas
adc
xor
cli
dec
adc
mov
out
ja
mov
daa
mov
jl
das
cmp
fmul
outs
stos
stc
push
adc
int
sub
and
test
out
jecxz
int3
adc
jmp
ss
les
sbb
outs
clc
cld
adc
mov
add
mov
adc
mov
push
mov
sar
cmp
test
popf
and
out
icebp
push
ror
adc
movs
adc
xor
ins
inc
xor
adc
fs
dec
jp
cmp
pop
int
sar
movs
dec
mov
les
cli
jb
arpl
push
sbb
sti
lds
iret
jl
adc
cmp
sub
jmp
movs
cmp
adc
(bad)
mov
shr
stos
xchg
gs
and
jecxz
lock
sub
jnp
dec
int
imul
out
scas
mov
jge
jle
dec
sar
and
rcr
push
push
cmp
mov
mov
pop
fsub
mov
lods
(bad)
mov
cmp
xchg
mov
jp
cmc
call
leave
into
jne
fcom
iret
mov
fwait
pop
jmp
out
(bad)
xor
sub
mov
pushf
into
push
out
jecxz
xor
icebp
in
leave
xlat
dec
movs
push
ror
xchg
outs
mov
lock
and
xchg
sbb
fdiv
pusha
in
loope
push
add
jbe
daa
jle
sar
ins
(bad)
in
in
pop
movs
inc
gs
into
adc
mov
adc
pop
jge
rcr
jns
sti
xchg
jo
inc
imul
lds
dec
dec
aas
adc
push
cmc
ds
push
ins
enter
dec
inc
iret
aas
loopne
pop
mov
aas
inc
lock
mov
outs
enter
xchg
inc
sbb
mov
loope
(bad)
dec
jae
pop
push
sub
rol
ds
sbb
ret
mov
fs
call
dec
fwait
ss
mov
mov
or
sub
(bad)
aam
ds
addr16
mov
popa
out
das
xor
addr16
mov
cli
js
and
xlat
add
dec
cmp
in
and
mov
xor
dec
pop
(bad)
fsubr
sahf
jl
push
fnstenv
cld
push
call
ret
sub
dec
rol
pop
jl
imul
in
xchg
hlt
dec
jb
shr
inc
pop
bswap
js
repnz
jp
dec
stos
jmp
repz
xchg
loope
adc
inc
mov
sbb
or
imul
ror
repz
iret
les
fidivr
aam
mov
scas
not
mov
cmp
sbb
popf
or
loope
cs
lods
push
mov
add
sbb
outs
pushf
call
pop
in
mov
sub
hlt
(bad)
cmp
addr16
sub
and
sbb
data16
mov
jle
jae
push
xchg
fdiv
sub
cmps
pop
sub
mov
dec
xchg
mov
cmp
push
cld
shl
xor
xor
cmp
mov
lea
leave
gs
les
mov
jbe
mov
iret
push
ficom
fmul
adc
test
or
jp
or
push
into
push
and
aas
mov
fidiv
inc
dec
loope
mov
scas
nop
leave
jg
and
dec
ror
lock
fld
popf
sub
repz
xor
aaa
jge
dec
ins
mov
pop
pop
jne
xchg
mov
cmc
into
xor
push
mov
adc
push
or
stos
jo
jne
aas
loope
or
and
mov
add
int3
test
sti
cmp
scas
jp
stc
repz
in
lods
xchg
ins
test
xchg
fimul
mov
mov
mov
push
xchg
in
dec
mov
(bad)
movs
push
add
es
xor
(bad)
fld
push
out
mov
mov
or
xor
mov
mov
imul
aad
mov
shl
and
mov
cmp
mov
or
sahf
push
jp
imul
mov
pop
dec
cmp
cmp
or
adc
sti
cmc
and
jbe
sar
ficomp
pop
inc
or
shl
in
mov
and
sub
or
shr
out
push
mov
inc
sahf
(bad)
je
add
fnstsw
dec
xchg
push
rol
stos
mov
sub
repnz
sbb
pop
je
and
into
mov
inc
pusha
mov
mov
shl
cs
pop
add
and
fnstsw
ret
jl
icebp
pop
jp
lods
xchg
outs
cmp
hlt
out
xor
inc
inc
cmp
stos
les
adc
ficom
add
pop
or
mov
stc
cmp
aaa
(bad)
adc
fist
fst
repz
jp
imul
dec
add
in
mov
inc
lods
test
xchg
enter
(bad)
call
mov
fst
std
ret
push
pop
cmc
dec
mov
in
lahf
xchg
stc
add
rol
cs
xchg
fsubrp
fnstenv
loope
inc
jmp
fistp
inc
cmp
call
xchg
loop
sbb
jmp
adc
scas
sbb
jo
mov
push
lods
xchg
jo
sbb
cli
mov
xchg
dec
imul
in
into
ret
xor
inc
jecxz
sbb
bnd
rcl
out
pop
int
mov
fcom
fild
push
mov
mov
xchg
in
nop
ja
mov
shl
pop
mov
nop
int
push
inc
pop
push
ja
(bad)
xor
fistp
xor
xlat
mov
mov
sbb
fidiv
jecxz
pop
icebp
mov
arpl
adc
in
cmc
pushf
addr16
(bad)
out
or
inc
jno
sbb
or
out
push
cli
outs
cmp
cmc
dec
out
pusha
xor
ret
lahf
sbb
fiadd
imul
rol
stc
cmp
fincstp
mov
add
ret
push
int3
sbb
call
mov
ret
cmp
jne
jmp
(bad)
out
dec
dec
popa
fcomp
popa
cmp
stc
sub
loopne
and
jns
dec
or
jns
cmp
(bad)
cld
pop
cld
(bad)
xor
cmp
sar
hlt
fwait
cmp
cmp
inc
or
lahf
jmp
jp
push
shrd
(bad)
add
or
aam
mov
and
mov
xor
fs
cmp
js
xchg
in
jmp
in
cmp
sub
nop
mov
cli
movs
add
or
aas
adc
mov
mov
jnp
movs
mov
sub
pop
push
aam
and
mov
fild
popa
test
leave
(bad)
mov
daa
inc
push
inc
and
fild
jne
inc
(bad)
dec
push
mov
pusha
and
sbb
xor
adc
sub
in
jne
cs
add
jno
nop
mov
loope
stos
dec
adc
adc
stc
or
aad
xor
in
retf
xchg
fcom
dec
movs
dec
inc
mov
into
pop
sub
mov
test
psubw
inc
lods
mov
adc
jo
stos
lea
xchg
lea
inc
sahf
push
adc
popa
sbb
leave
ret
add
ins
mov
retf
mov
iret
(bad)
(bad)
popf
inc
inc
das
iret
pop
push
add
xchg
inc
outs
int3
mov
and
shl
in
push
push
mov
push
jne
mov
mov
push
inc
dec
cli
add
push
xor
mov
lock
pop
sub
nop
pop
loopne
mov
push
xchg
pop
mov
sbb
loope
jo
xchg
rol
sub
cmp
cld
sbb
clc
and
fadd
into
mov
xchg
fst
sub
dec
cmp
sub
cmp
cwde
mov
jecxz
xchg
add
dec
loop
add
fstp
retf
sub
dec
jbe
in
mov
outs
mov
call
fisubr
cmp
cwde
cmp
jecxz
pop
fcmovb
icebp
cs
or
hlt
in
add
pop
out
xor
shl
sbb
in
adc
mov
push
fmul
fsubr
test
jno
xchg
mov
enter
ds
mov
mov
jo
sar
(bad)
call
jb
and
mov
mov
enter
jmp
dec
dec
loop
jns
js
jmp
daa
jge
je
xor
ret
cli
iret
pop
add
inc
jg
xchg
jno
adc
push
popf
lock
movs
inc
sub
and
imul
jge
in
pop
jl
es
div
xchg
jp
push
loop
pop
or
mov
sub
retf
fild
retf
cmp
and
icebp
out
cmp
dec
int3
lahf
or
inc
xlat
movs
dec
adc
aad
sbb
xor
xchg
cwde
sub
dec
mov
xchg
pushw
imul
mov
nop
stos
push
hlt
mov
aaa
in
popf
out
lea
(bad)
fldl2e
mov
push
mov
ins
pushf
in
sbb
outs
jg
mov
ret
sub
je
shr
daa
jb
stos
adc
ja
mov
in
jns
sub
mov
rcl
rcr
jmp
jmp
mov
sbb
arpl
mov
cmp
pop
jl
test
xchg
sub
mov
push
mov
rcr
shl
jo
jmp
or
mov
push
enter
into
xchg
add
mov
and
and
push
push
or
jl
inc
mov
mov
cmp
nop
shr
adc
jo
mov
cld
push
cli
jno
cmps
xchg
aam
xchg
aaa
mul
(bad)
movs
ds
inc
movs
pop
dec
cmps
frstor
outs
pop
add
push
adc
jns
and
js
pop
nop
scas
xlat
fcmovnu
dec
scas
dec
aaa
jge
xchg
sar
jmp
int
and
add
ror
pop
(bad)
inc
ret
push
imul
cmc
sub
rcl
(bad)
div
fisttp
push
add
inc
push
inc
xchg
xor
mov
pop
jp
sti
xchg
inc
cmp
lods
(bad)
xchg
sub
mov
add
call
mov
mov
sbb
sub
mov
gs
test
push
jmp
jne
out
xor
in
mov
dec
add
adc
adc
push
jmp
lods
aas
fstp
jge
popa
jnp
clc
and
cs
mov
jo
mov
aas
sbb
sub
aad
sub
push
xor
sbb
loopne
mov
push
pop
cmp
jle
mov
cli
js
int3
pop
scas
pop
retf
int3
jl
xchg
mov
mov
fnsave
mov
add
cmps
lods
jnp
or
adc
adc
xor
mov
cmp
ret
ins
inc
push
inc
mov
sbb
xor
das
jp
adc
jmp
repnz
inc
stos
stc
sbb
fld
pusha
jg
stos
cdq
jmp
sub
mov
inc
call
retf
adc
jbe
shl
sbb
inc
cld
sbb
xchg
gs
imul
cmp
dec
push
xor
fisttp
ret
fimul
outs
into
or
and
ja
pop
jle
dec
int3
sub
std
pop
push
out
mov
inc
add
jno
fmulp
stos
std
mov
mov
shl
ffree
inc
adc
dec
jmp
xchg
push
mov
jno
pop
mov
inc
add
sub
jle
and
shl
stc
repnz
push
aad
fisttp
or
cwde
imul
mov
movs
stos
repz
fidivr
sti
cmp
dec
dec
fcom
xchg
sti
outs
pmulhw
mov
pop
push
hlt
sub
out
imul
int
jecxz
mov
daa
call
sbb
test
mov
xchg
lahf
adc
(bad)
test
int3
popf
dec
xchg
xor
sub
push
xchg
xor
sbb
into
and
stos
ja
stos
fisubr
and
inc
enter
or
dec
dec
nop
mov
(bad)
xchg
dec
enter
repnz
movs
aad
push
pop
mov
int3
retf
pop
xor
xchg
ins
gs
add
ror
and
popf
ret
mov
rcr
and
nop
or
sbb
ret
jbe
fs
ins
stos
push
movs
int3
sbb
pop
cmc
add
inc
jle
add
ret
mov
adc
out
cdq
adc
sbb
pop
jmp
lds
push
pop
fist
xchg
pushf
fisubr
out
and
loopne
je
jno
inc
je
(bad)
xchg
out
mov
sti
sub
test
push
int
mov
lds
jbe
and
fdiv
inc
pop
and
retf
xchg
ror
daa
fld
inc
mov
pop
sbb
lods
loope
cmp
(bad)
pop
cld
out
imul
push
cmc
enter
jno
xor
dec
push
and
data16
mov
jbe
dec
add
and
in
in
ss
(bad)
pushf
push
nop
dec
or
add
ror
push
je
inc
xlat
jl
in
adc
fsubr
adc
fbstp
cmp
rcl
jae
out
cmp
cmp
lahf
(bad)
xor
mov
xchg
push
pop
popf
pop
dec
cmp
mov
pop
push
mov
rcr
loope
fst
retf
jle
hlt
dec
sub
bound
and
popf
iret
inc
mov
xlat
outs
stc
inc
push
ror
ret
jge
mov
ret
fs
hlt
inc
sbb
stc
mov
cmp
xchg
dec
lahf
pop
hlt
cmc
push
jecxz
mov
cmp
mov
lea
enter
mov
mov
cmp
popf
outs
or
push
jmp
fsubr
movs
in
mov
pop
shl
arpl
inc
lea
dec
push
pushf
adc
pop
daa
xchg
popf
adc
rol
sub
test
test
xchg
mov
xchg
adc
les
pop
pop
pop
jecxz
cwde
adc
pop
mov
pop
aad
lar
jecxz
imul
loope
inc
icebp
sbb
sbb
mov
jmp
xchg
test
lds
mov
dec
lods
xor
pop
fmul
dec
cld
mov
pop
call
jno
cmp
pop
inc
pop
iret
loopne
inc
inc
into
xchg
mov
scas
ja
add
iret
in
inc
jp
cmps
mov
(bad)
jge
sub
lods
aam
cmp
pop
dec
bound
sub
fisttp
sar
(bad)
std
pop
ret
xchg
inc
sub
ins
fwait
rcl
xchg
dec
fwait
retf
je
test
fwait
or
dec
cmp
js
xchg
push
call
fmul
test
repz
and
shl
into
jae
stc
aas
outs
cmp
push
or
adc
sub
jnp
popf
sub
xchg
jae
(bad)
repz
pusha
mov
(bad)
push
jne
enter
pushf
add
mov
xor
pop
xchg
aas
add
cs
inc
rcl
clc
adc
cmp
not
jno
dec
jne
jg
or
jecxz
and
or
(bad)
in
sahf
mov
dec
std
inc
fimul
inc
push
cmp
pusha
int3
push
test
sbb
test
(bad)
ja
(bad)
xor
xor
mov
mov
shl
xchg
push
imul
sbb
push
mov
sub
push
xlat
jmp
pop
inc
loop
(bad)
adc
in
and
out
pusha
push
jmp
adc
inc
mov
test
xlat
push
inc
scas
xor
lock
dec
xor
inc
(bad)
out
not
pop
xor
mov
test
mov
hlt
dec
ds
mov
jge
xor
addr16
sub
mov
add
mov
lods
aad
outs
push
mov
movs
sub
dec
mov
and
push
daa
pop
pop
push
mov
sar
inc
or
cmp
sahf
xor
cmc
mov
call
and
jno
mov
mov
mov
scas
jp
xor
dec
cli
outs
push
inc
cmp
jmp
das
clc
mov
sbb
js
jns
movs
daa
push
jmp
sbb
dec
ret
sahf
fisttp
imul
adc
jno
pop
lea
(bad)
(bad)
dec
imul
rcr
xor
and
inc
mov
mov
push
or
or
daa
add
pop
jns
loopne
pop
jecxz
adc
push
sub
shl
push
int3
add
jmp
daa
adc
pusha
dec
cmc
popf
sbb
fldenv
sbb
fdivrp
lock
gs
push
pusha
xchg
repz
nop
cmp
jnp
jle
into
sbb
jns
int3
addr16
mov
adc
add
inc
add
cmp
in
jns
stos
int
(bad)
gs
(bad)
in
in
and
fsub
mov
add
loopne
jp
mov
lods
jmp
mov
mov
and
pop
in
push
jo
imul
or
mov
ins
push
pop
jnp
inc
(bad)
xchg
mov
push
js
add
imul
mov
sub
lods
and
sbb
mov
stos
in
in
jns
cs
pop
jg
fstp
pop
xor
adc
add
and
out
pop
stc
pop
lea
and
std
push
xor
mov
add
jo
and
fiadd
jmp
retf
pmaddwd
pop
je
daa
outs
inc
cmp
dec
mov
cmc
pop
dec
je
enter
and
mov
cwde
fyl2xp1
sub
jecxz
jbe
sbb
nop
not
ja
xchg
push
cmp
xchg
add
stos
mov
jecxz
in
inc
test
push
ror
scas
cwde
fstp
jg
je
sti
popf
inc
xchg
inc
(bad)
loope
(bad)
mov
in
mov
hlt
test
jmp
stc
jne
inc
dec
fst
loope
jns
nop
shl
xlat
jo
sbb
out
adc
cmc
xchg
test
mov
(bad)
push
popa
into
out
retf
xchg
or
mov
add
dec
dec
xchg
je
scas
inc
and
cmps
fs
in
test
adc
mov
imul
stc
(bad)
pop
sub
(bad)
lea
sbb
mul
fiadd
mov
leave
fstp
pop
out
push
add
xor
push
fst
(bad)
or
cmps
int
and
(bad)
xor
xor
sub
stc
push
popa
cmp
aam
mov
and
jne
push
clc
neg
push
xchg
and
mov
pop
and
xchg
mov
out
fild
push
jl
lods
cmp
jmp
sbb
aas
adc
xchg
(bad)
xchg
xchg
mov
in
adc
cli
cld
sub
push
or
ret
push
popa
dec
imul
cld
cmc
xchg
push
or
ja
(bad)
cld
cmc
mov
dec
push
cmp
loope
jnp
jle
push
pushf
xchg
mov
lds
ss
out
movs
push
pop
fistp
stc
xchg
js
pop
jge
mov
lahf
sar
ins
jl
pop
inc
cli
gs
xchg
xor
int
lds
pop
dec
cmp
pop
aam
push
sub
xor
mov
movs
mov
fucomip
cmps
xchg
mov
loope
mov
pop
pop
sbb
add
jg
mov
aam
lock
scas
lock
sub
stos
repz
arpl
ror
push
jmp
jge
xlat
aaa
mov
retf
js
xlat
dec
push
shr
cli
adc
rol
dec
adc
sub
dec
loopne
icebp
xor
in
or
lahf
call
call
js
and
(bad)
xor
xchg
or
sub
or
(bad)
sub
stos
push
cmp
xor
jne
leave
jo
data16
push
movs
fst
std
imul
scas
pop
jns
xchg
inc
pop
jno
mov
add
add
adc
jp
sbb
xchg
in
pop
cmp
jns
aas
shl
gs
ins
imul
and
clc
mov
jmp
cmps
mov
mov
and
sub
dec
push
and
(bad)
je
fcomp
pushf
jo
or
adc
push
jnp
mov
dec
push
(bad)
lock
push
or
xor
jecxz
ret
and
cmps
hlt
mov
repz
shl
test
mov
jp
test
je
sub
or
movs
push
xchg
push
or
test
inc
mov
test
jp
lods
jmp
cmp
iret
or
jmp
pop
bound
mov
sti
mov
loop
xchg
xchg
pop
inc
fsubr
add
cmps
into
pop
inc
adc
sub
rcr
pinsrw
adc
jno
inc
pop
mov
inc
(bad)
into
inc
cmp
mov
ficomp
bound
push
jns
inc
and
fisubr
cmp
push
inc
jno
sbb
and
xchg
or
icebp
xor
xchg
call
sub
das
adc
and
mov
imul
in
ret
out
xchg
leave
push
enter
mov
mov
into
(bad)
(bad)
imul
aas
ds
je
daa
or
int3
mov
cmp
mov
dec
sub
jmp
xlat
lods
sbb
xor
adc
lea
dec
addr16
lock
cmp
es
xor
out
(bad)
loopne
int3
add
jp
push
and
cdq
(bad)
imul
pop
add
outs
sbb
jmp
mov
(bad)
or
mov
mov
leave
std
out
mov
mov
xchg
aad
jae
out
xchg
mov
dec
jnp
jp
inc
ror
ror
and
jg
bound
cdq
call
xor
sbb
cld
sbb
inc
xor
stc
fst
mov
mov
xchg
adc
adc
xchg
rol
and
cmp
jmp
xchg
inc
jb
jmp
mov
clc
xchg
jmp
mov
stos
test
in
in
xchg
or
repnz
ret
sub
ss
or
daa
stos
mov
push
jp
imul
pop
xchg
mov
aas
out
dec
cmp
and
ficom
xchg
repz
inc
outs
jecxz
int
cmp
mov
pop
adc
fisub
and
(bad)
pop
or
loope
test
into
push
xor
fild
fs
(bad)
xchg
cmps
sub
mov
push
pop
lds
out
push
ins
lea
sub
lahf
aad
movs
adc
leave
dec
jmp
(bad)
pop
mov
retf
cmp
and
jbe
sahf
loop
movs
rcr
add
out
adc
ret
adc
test
mov
(bad)
ss
outs
push
dec
mov
adc
dec
or
mov
push
(bad)
xlat
mov
mov
ret
test
int3
sub
xor
cli
test
popa
lea
fsubr
xchg
fcomp
in
hlt
pushf
and
jmp
movs
imul
retf
popa
sub
cmp
and
jbe
imul
mov
and
dec
pop
mov
out
lahf
cli
retf
dec
out
mov
rcl
sub
mov
ja
fs
stos
mov
dec
jmp
push
add
jae
mov
idiv
addr16
out
cmp
xor
sub
shr
movs
jmp
ja
in
add
inc
rol
mov
cli
fs
test
pop
mov
scas
(bad)
inc
in
out
push
jg
mov
push
inc
sahf
dec
adc
sbb
icebp
mov
adc
cdq
adc
or
add
retf
inc
dec
or
adc
inc
or
loopne
cmc
adc
mov
repnz
xchg
and
ins
xadd
scas
clc
jo
sahf
test
popa
call
push
pop
or
xchg
stc
add
xor
cli
sbb
pop
hlt
shl
cs
mov
es
sub
stc
jne
sbb
mov
sar
das
dec
mov
inc
push
cli
(bad)
loope
gs
sbb
int
rol
popf
sti
and
inc
push
adc
fcomp
icebp
imul
scas
mov
ins
clc
les
loope
outs
in
sahf
xchg
jmp
fld
push
sbb
adc
call
hlt
jmp
shr
mov
aaa
mov
into
mov
fisttp
add
pop
mov
mov
jo
mov
xor
dec
cmc
popf
dec
(bad)
fsubr
fistp
imul
jbe
imul
fidiv
mov
ss
scas
mov
jae
mov
xchg
std
lahf
xchg
sar
fwait
push
add
fxch
and
(bad)
jl
lahf
and
dec
jmp
cs
jmp
push
out
cmp
leave
cmp
xor
call
push
push
lahf
fistp
adc
sub
add
jp
sahf
jl
scas
xchg
inc
cmps
mov
mov
mov
add
popa
xchg
inc
rcr
ja
adc
jl
dec
ret
pop
pop
std
xlat
pop
fnsave
and
ja
push
pop
or
sar
lea
push
aaa
cs
test
std
sub
inc
fisttp
loope
jmp
(bad)
clc
push
pop
std
or
sahf
das
pop
sar
adc
adc
sub
enter
mov
adc
sbb
dec
pop
in
cmp
push
push
xor
retf
mov
paddd
dec
sub
fwait
xchg
rol
adc
gs
pop
into
inc
int
arpl
fadd
ror
ja
mov
test
pop
dec
xchg
cwde
xor
push
jle
lahf
call
push
loopne
rcr
aas
bound
rol
mov
lods
aas
mov
dec
fst
loope
dec
ss
cmp
cmp
int
out
es
mov
arpl
aaa
jo
mov
push
xchg
pop
mov
xor
xchg
(bad)
push
jb
jecxz
adc
and
xchg
jp
out
cld
pop
dec
cmp
pop
stc
ret
xchg
xchg
push
lahf
mov
ret
hlt
jb
dec
addr16
aad
shl
(bad)
fdivr
push
xchg
push
pop
inc
pop
(bad)
ficom
inc
push
cli
sbb
adc
sbb
push
popf
mov
mov
repnz
mov
mov
cmp
pop
adc
nop
fbstp
push
ja
das
add
(bad)
aaa
cmp
add
arpl
test
test
fcom
xchg
sub
lock
rcl
repnz
inc
or
imul
cmp
lahf
sub
test
stos
das
adc
mov
push
test
or
inc
push
imul
xor
jb
jg
sbb
rcr
dec
add
outs
adc
fcom
add
std
jp
stos
xor
xchg
push
lods
inc
inc
pop
popa
movs
test
pop
or
outs
shr
sete
int
(bad)
out
inc
push
retf
setno
and
xchg
push
out
loope
xchg
xchg
mov
in
sahf
into
pop
mov
data16
test
mov
test
stc
cmp
sbb
test
and
mov
pop
stos
jno
neg
movs
jle
sbb
call
pop
pop
push
fbstp
mov
push
xor
mul
sub
cs
sub
mov
and
jae
test
jmp
mov
dec
shl
rol
xchg
loope
add
xchg
fsub
ins
repnz
push
add
fadd
(bad)
and
inc
cmovae
mov
mov
pop
mov
pop
pop
dec
(bad)
xchg
repnz
and
jg
jno
or
pop
enter
mov
scas
push
mov
adc
in
lea
xchg
movs
jle
movs
stos
call
fwait
xchg
or
jge
cmp
adc
xor
cwde
scas
sub
xchg
cmps
test
cmps
pop
push
fnstsw
push
adc
lock
call
xor
fimul
add
je
clc
ja
cmp
adc
pop
pusha
cmp
ror
pop
jne
and
cmp
dec
in
cs
push
(bad)
int
das
cwde
pop
inc
js
loope
mov
push
dec
dec
sub
add
jl
das
or
mov
ins
fwait
data16
loopne
jb
or
repz
test
(bad)
imul
push
pop
pop
adc
add
add
(bad)
push
shl
scas
ja
adc
data16
mov
mov
adc
push
loope
mov
stos
xchg
out
bound
daa
xor
je
adc
fcomp
add
mov
and
ds
inc
aaa
push
sbb
or
adc
push
fwait
scas
jle
adc
xor
shl
daa
sub
aaa
sub
pop
mov
xor
add
(bad)
inc
lods
xchg
mov
out
sub
adc
test
repz
mov
xor
rcl
mov
call
js
punpcklwd
or
test
and
jae
(bad)
enter
pop
mov
jne
ror
and
shl
sub
aad
inc
call
mov
movs
fcom
bswap
outs
add
sub
ins
cmps
out
inc
bound
add
jg
ret
adc
cmc
(bad)
jl
cwde
aam
pop
push
inc
mov
int
sub
xchg
(bad)
in
jecxz
in
or
pop
mov
popa
lahf
cmp
gs
ficom
jge
add
sub
jge
je
jno
add
sti
call
xor
retf
repnz
pop
push
pusha
movs
and
repz
leave
addr16
test
jl
int
pop
xor
(bad)
jl
dec
inc
iret
sbb
fwait
mov
fdivr
sub
inc
(bad)
addr16
mov
imul
dec
bound
sti
leave
cmp
mov
mov
ret
pop
out
call
inc
mov
jge
jecxz
nop
hlt
jo
pop
movs
sub
pop
jmp
fdivrp
xor
cmp
mov
aaa
sub
or
jle
rol
and
jl
push
jnp
dec
push
cmps
rcl
push
fisttp
inc
inc
xor
jnp
fwait
call
mov
sub
push
xchg
and
repz
mov
add
int
pop
ficomp
dec
add
mov
(bad)
es
pusha
loop
sbb
clc
fadd
dec
adc
rol
movs
in
push
mov
fiadd
dec
ss
sahf
stc
cmps
cmps
nop
sub
push
dec
sub
cwde
mov
xor
outs
outs
outs
mov
push
jns
je
scas
call
sub
(bad)
ffree
std
out
jns
jae
bound
scas
mov
pop
(bad)
sti
jno
dec
inc
loope
outs
adc
test
mov
jnp
adc
sub
dec
(bad)
adc
mov
xchg
mov
call
mov
mov
cmp
push
dec
adc
push
or
les
lds
dec
lods
pushf
dec
xlat
arpl
bound
push
mov
(bad)
(bad)
and
pop
ins
jp
cmp
cwde
inc
inc
cwde
dec
pop
xor
inc
jb
inc
pop
jns
(bad)
push
popf
dec
add
pusha
mov
into
add
adc
xor
jp
test
cmp
inc
(bad)
adc
ret
mov
sahf
inc
movs
add
sbb
(bad)
or
xchg
inc
or
jb
lds
fwait
sahf
inc
mov
push
lods
pop
pop
push
in
cmp
in
std
sbb
mov
xchg
(bad)
mov
pop
jmp
lods
jle
popf
adc
xchg
js
push
jne
or
or
ror
xor
inc
fimul
test
repz
pop
lock
sti
sub
mov
enter
jmp
stos
ds
in
loopne
cwde
inc
movs
mov
lds
mov
test
adc
inc
sub
js
clc
xor
or
inc
cli
cwde
dec
jns
and
retf
jecxz
cmp
imul
jns
push
dec
jecxz
nop
mov
mov
or
retf
lods
(bad)
xchg
mov
xchg
aaa
fidivr
pop
dec
xchg
shl
aad
mov
iret
xchg
test
in
clc
shl
xlat
inc
aam
pusha
xchg
scas
fyl2xp1
mov
sbb
je
push
push
lahf
sbb
jns
outs
mov
cmp
cwde
mov
fcomp
jmp
cmp
(bad)
mov
shl
mov
dec
es
aas
xchg
or
fwait
adc
lea
inc
cmps
lds
cmps
mov
movs
xor
mov
ins
shr
cmp
sbb
push
xor
jp
jmp
stc
das
out
fcom
adc
mov
sbb
dec
aad
cmps
pusha
pop
iret
ins
scas
cs
mov
pop
jp
and
lods
aaa
and
cmp
into
imul
jne
or
aas
push
adc
pop
fbld
push
ret
mov
cmp
xor
push
mov
jmp
into
adc
cmp
shl
mov
loopne
inc
(bad)
ds
cmp
int
mov
fild
push
sbb
pop
mov
les
inc
sti
dec
push
ret
add
call
mov
cmp
jb
sbb
xchg
mov
repz
xchg
mov
push
xor
mov
pop
cmp
mov
pop
popa
test
fsubr
addr16
stos
ins
repnz
xchg
int
imul
popf
cmp
out
mov
inc
add
fucomip
or
mov
iret
pop
call
(bad)
outs
mov
fidivr
repz
mov
jne
mov
pop
mov
add
movs
cmp
mov
sub
dec
popf
fistp
sbb
xor
push
add
xor
add
add
pop
les
mov
stos
sbb
sub
repz
push
imul
xor
daa
sub
in
in
dec
test
lods
out
jnp
and
xchg
fwait
or
ss
cmp
sbb
jo
in
jl
test
adc
mov
nop
scas
imul
xor
loope
enter
mov
ficomp
mov
clc
add
inc
mov
adc
xchg
out
jp
rol
mov
jg
stc
lock
cmp
mov
mov
cmp
leave
mov
ja
sti
(bad)
scas
push
pop
pop
mov
test
jp
jmp
cdq
push
test
jl
xchg
and
out
inc
pop
(bad)
repnz
adc
add
loope
aas
cmps
fsubrp
sar
xchg
mov
es
cmp
(bad)
mov
lea
rcl
mov
and
lods
xor
adc
mov
inc
outs
add
dec
adc
jae
(bad)
mov
mov
sub
popa
mov
cs
cmp
sub
(bad)
and
icebp
mov
add
xlat
sbb
push
pop
stos
xor
arpl
mul
nop
ja
xor
jge
cmc
add
dec
sbb
mov
(bad)
fwait
aaa
and
mov
or
xor
leave
mov
jnp
pop
mov
pop
jo
xor
call
cmpps
call
push
movs
in
pop
mov
add
nop
nop
shl
jge
stc
xchg
lods
dec
hlt
and
dec
inc
outs
arpl
in
pop
sbb
fwait
and
js
mov
(bad)
mov
adc
into
int3
outs
ret
neg
sbb
add
sbb
jbe
adc
xchg
shl
test
cmp
mov
hlt
pop
jns
cmp
sub
pop
pop
aas
xchg
movs
mov
mov
gs
test
adc
mov
or
mov
cmp
fisub
or
xor
repz
cmps
or
cmp
cmp
arpl
loop
jmp
mov
mov
jno
mov
and
clc
(bad)
aas
sahf
repz
imul
retf
jp
push
add
mov
adc
fdivr
cmp
xchg
(bad)
pop
mov
push
xlat
sbb
movs
jg
es
shl
and
pusha
pushf
je
adc
retf
nop
sahf
mov
jle
mov
pusha
jb
(bad)
pushf
nop
aad
repnz
mov
sbb
shl
xor
scas
repnz
jns
push
test
push
lods
ins
xor
mov
fsubr
mov
fs
lds
pop
pusha
push
aad
je
push
(bad)
sbb
in
jae
push
sbb
and
fdivrp
mov
cmc
sbb
popf
popf
jb
push
or
pop
xor
xor
cmp
int3
ret
jnp
and
dec
and
xchg
inc
inc
or
clc
js
and
push
mov
and
push
jbe
jns
loop
addr16
jp
movs
jle
xchg
inc
leave
fwait
loop
addr16
inc
dec
or
shl
xor
cmps
xchg
push
retf
loopne
ins
sub
call
mov
mov
scas
scas
dec
and
ins
cld
sub
(bad)
in
in
out
add
bound
add
dec
mov
xor
jl
jecxz
push
jp
(bad)
cmps
in
fwait
clc
dec
ja
push
das
out
movs
mov
mov
inc
mov
inc
std
sti
fisubr
push
adc
adc
jns
mov
aad
pop
sub
dec
fwait
xor
fisub
inc
and
fild
cmps
in
retf
bound
push
xchg
or
fisubr
je
mov
xchg
lods
inc
nop
dec
sub
sti
lds
jae
(bad)
mov
jb
dec
sub
or
in
ror
sbb
push
shl
shl
xchg
dec
ins
stos
fcom
sbb
movs
inc
faddp
stos
inc
mov
arpl
xchg
cld
and
fistp
mov
jnp
loop
or
and
mov
(bad)
and
call
(bad)
mov
lahf
add
mov
mov
repnz
adc
push
and
xor
dec
inc
sub
push
sbb
mov
sub
add
fs
cli
stc
outs
mov
ja
sub
dec
and
xor
cmp
jnp
(bad)
fbstp
pop
pop
mov
adc
mov
repz
clc
pop
mov
out
sbb
ins
jp
pusha
(bad)
retf
gs
push
lods
add
mov
aad
dec
jns
test
in
shl
xchg
test
push
add
lea
lds
inc
ret
add
pop
(bad)
loope
pop
jae
mov
es
jl
and
jg
pop
mov
pop
jge
test
outs
pop
mov
jno
in
movs
mov
out
fstp
inc
cmps
sub
cmp
adc
fcom
adc
adc
xchg
xchg
mov
stc
iret
mov
sbb
push
pop
imul
sbb
mov
pop
push
outs
mov
stos
adc
ror
(bad)
call
pop
xor
shl
jno
(bad)
sti
add
xlat
pushf
xchg
lahf
and
(bad)
pop
add
data16
sbb
test
aad
xor
cmp
jecxz
sbb
mov
and
shr
fist
data16
dec
rcl
add
mov
aam
pop
cmp
push
jmp
(bad)
jecxz
dec
leave
dec
sub
mov
push
inc
mov
lahf
(bad)
jl
inc
or
jb
push
mov
(bad)
aam
scas
xchg
jecxz
inc
adc
adc
sbb
inc
jmp
or
jecxz
call
inc
ret
or
jmp
jg
aam
push
ins
lods
cmps
pushf
jmp
loopne
test
push
shl
lods
repnz
cmp
cmp
out
mov
mov
mov
fist
dec
or
ret
xchg
mov
xor
fst
ins
lods
aam
jne
pop
lods
add
lods
cld
ds
lock
ja
pusha
mov
jecxz
cmp
cli
mov
outs
stc
enter
ret
ss
ja
repz
inc
scas
(bad)
mov
jne
jnp
sbb
sbb
and
mov
dec
pop
loope
fmul
ss
and
lods
mov
xchg
ins
or
jmp
vmulsd
pop
mov
xor
stos
stos
bound
clc
jns
mov
jno
cmp
xchg
shl
leave
xor
inc
mov
mov
push
test
lods
ret
mov
lods
daa
mov
push
ds
inc
ffreep
int
daa
fdivrp
jo
outs
in
push
xchg
popf
cmps
add
adc
cmp
cmp
xchg
sub
sub
mov
xchg
mov
clc
out
cs
sbb
jecxz
mov
js
cmp
sbb
enter
add
mov
lods
add
jmp
sbb
aam
or
call
cmp
retf
ret
ret
jmp
cld
xor
push
sar
(bad)
out
test
fst
xchg
pop
and
jo
ret
pop
jmp
sub
pop
jmp
or
test
test
jle
test
cmp
(bad)
adc
inc
call
test
and
or
loope
add
jge
dec
jmp
push
cmp
or
pop
sahf
push
lds
fcomi
push
jg
into
je
sti
das
add
(bad)
inc
sub
js
xchg
mov
add
push
cmp
or
add
xor
mov
cmp
dec
rcl
xor
mov
jecxz
add
cdq
stc
mov
jo
fdivr
ret
in
icebp
imul
push
je
inc
mov
cmp
arpl
aam
mov
in
dec
and
out
push
sbb
(bad)
lods
lods
push
loopne
push
nop
es
test
and
loopne
sbb
sub
dec
mov
cwde
push
jmp
mov
into
sbb
xchg
jne
mov
repz
dec
fisubr
adc
sbb
push
pop
and
cld
sbb
xchg
mov
add
idiv
imul
outs
sbb
mov
mov
adc
retf
and
push
movs
jno
pop
sti
or
push
jecxz
inc
(bad)
retf
ss
out
push
gs
sbb
and
lods
iret
push
retf
imul
test
out
scas
enter
sti
fnstsw
repnz
std
popf
pusha
lock
mov
mov
data16
jp
jbe
std
popa
js
lods
test
or
mov
(bad)
and
jno
mov
stc
nop
iret
(bad)
fs
mov
movs
mov
nop
mov
push
xor
pop
in
out
pop
cs
outs
fnsave
push
jae
xchg
fwait
sbb
jl
rcl
addr16
or
push
pop
ins
outs
in
pop
call
mov
bound
sbb
push
adc
cmps
clc
pop
cmps
popa
adc
mov
jp
sbb
ror
fwait
mov
es
jmp
scas
xchg
push
call
sbb
outs
sbb
jns
shl
loopne
lods
mov
repnz
inc
pop
mov
int3
iret
mov
not
mul
or
pusha
mov
jbe
sti
sbb
sub
mov
rcr
daa
inc
fdivp
cmp
call
not
sbb
(bad)
dec
or
jmp
mov
xchg
push
je
aas
popa
sub
bound
rcr
(bad)
leave
mov
dec
in
jmp
pop
cmp
loope
push
es
xchg
add
jle
jp
jno
aas
and
ja
(bad)
sub
call
or
xchg
push
aam
into
mov
xchg
mov
or
mov
jbe
or
movs
push
out
sub
sub
je
jmp
fwait
out
jnp
jae
inc
and
cdq
cmp
lahf
stos
pop
inc
dec
lds
inc
xchg
scas
sub
clc
movs
mov
dec
es
pusha
movs
(bad)
sbb
jp
inc
mov
jne
xor
cdq
jnp
mov
xor
lds
scas
mov
jmp
enter
xchg
xchg
or
test
sbb
push
inc
push
in
adc
adc
jb
(bad)
ins
xchg
inc
adc
add
add
mov
push
and
inc
movs
leave
add
scas
push
sub
pusha
xchg
imul
(bad)
shr
pop
xlat
(bad)
jns
sub
mov
mov
push
add
jmp
inc
dec
mov
jmp
popf
and
pop
mov
xor
enter
xchg
and
addr16
aam
jecxz
pop
xlat
and
push
push
bound
fist
repz
ds
jle
jbe
lods
push
xchg
mov
mov
arpl
mov
pop
sahf
xchg
mov
shl
jl
sti
leave
ins
scas
jp
mov
dec
test
stc
retf
into
test
push
js
pop
cmp
push
xchg
mov
sub
push
and
xor
scas
adc
jae
push
jne
mov
xor
les
loop
mov
mov
out
adc
push
xor
mov
iret
cdq
adc
cmp
aam
and
xchg
hlt
imul
jmp
cmc
jno
push
(bad)
pushf
jbe
shl
lods
ss
xor
aad
int3
imul
outs
xchg
cli
pop
jge
rcl
add
shl
pushf
xchg
pop
xlat
nop
in
mov
sub
cmp
div
sbb
ud1
shl
or
ja
pop
pop
dec
mov
xor
out
aam
xor
test
pusha
ins
outs
and
into
and
xchg
mov
test
xor
(bad)
jge
xchg
fwait
cmp
mov
and
sbb
pop
aaa
cmc
jp
or
test
jo
inc
jp
dec
add
fld
(bad)
lock
jno
call
and
out
xor
(bad)
es
and
push
mov
out
test
aaa
and
xor
dec
(bad)
jmp
mov
mov
lods
shl
mov
or
pop
mov
in
addr16
cmps
imul
jno
fwait
xchg
pop
in
sbb
ins
or
fs
sbb
xchg
dec
and
sahf
cmp
daa
retf
sub
enter
adc
imul
in
cmp
frstpm(287
cmp
retf
push
loop
pop
pop
pushw
cmp
xchg
mov
mov
(bad)
dec
(bad)
pop
test
sbb
mov
xchg
jmp
jo
jg
repnz
mov
jno
call
call
mov
cmp
inc
pop
adc
jge
nop
push
loop
adc
call
shl
adc
jnp
loopne
aas
and
mov
pop
sar
dec
push
add
mov
stos
sbb
sub
adc
add
lea
popa
pop
fist
sbb
in
cmp
cmp
xchg
loopne
add
xchg
jmp
cwde
sub
mov
inc
(bad)
dec
xor
and
fisttp
push
fild
inc
mov
jbe
mov
push
mov
stc
rep
ret
aad
sar
iret
push
pop
dec
mov
aaa
sub
cld
inc
push
sbb
lock
add
jo
dec
sub
push
iret
lods
mov
inc
or
call
sti
sti
xchg
es
std
xchg
and
pusha
cmps
adc
jp
sub
jb
popf
pop
inc
ds
sub
push
(bad)
cmp
adc
fld
int
mov
xchg
ins
daa
mov
or
stos
aad
ret
mov
cld
int
xor
std
cwde
test
movs
fsub
sbb
loop
adc
jp
cmp
fistp
test
push
(bad)
rcr
shr
pop
mov
stc
sub
fadd
sbb
aad
jmp
sti
test
pop
push
ret
push
pop
sub
mov
imul
addr16
std
push
xlat
xchg
push
shl
out
mov
shl
loopne
out
inc
imul
loop
loope
adc
mov
mov
lahf
push
lods
or
in
sub
ror
jle
xor
into
out
ret
mov
lea
ins
loop
adc
mov
fist
in
test
popf
repz
dec
jg
aaa
push
aaa
pop
inc
jno
sub
out
jp
lea
jge
pop
jb
je
cs
icebp
out
les
add
sub
xchg
mov
pop
in
jb
mov
cmc
and
jbe
test
pop
loope
and
pop
dec
(bad)
sbb
cmove
in
addr16
pop
ins
cdq
(bad)
daa
dec
movs
repnz
ret
scas
cmp
pop
push
jo
or
mov
fild
rol
test
stos
and
xchg
xchg
(bad)
xchg
sub
jnp
adc
movs
xchg
lock
cmc
pop
cld
xlat
in
ss
stos
retf
xchg
or
ds
jmp
out
ins
xchg
push
dec
dec
push
gs
mov
xor
cmp
clc
mov
lods
xchg
addr16
mov
xor
fiadd
call
repz
lea
ret
jle
push
push
cs
repz
outs
sub
in
pusha
dec
inc
das
or
gs
les
fnstsw
cmp
dec
stos
xor
repz
into
fstp
scas
enter
lock
jo
sub
test
ror
(bad)
push
inc
sbb
cli
push
iret
jle
jae
mov
jbe
ds
sbb
test
(bad)
pop
in
(bad)
int
inc
xor
sbb
or
movs
mov
and
and
cmovae
sbb
and
jbe
movs
add
cmp
mov
or
push
outs
pop
in
js
(bad)
and
(bad)
rcr
adc
out
and
iret
addr16
outs
inc
sbb
or
ja
and
ret
and
lods
or
xor
push
push
inc
fsubrp
sbb
xchg
rol
stc
movs
outs
mov
lds
pop
aaa
xor
enter
push
xlat
jl
(bad)
dec
sub
inc
popa
mov
retf
push
adc
ja
or
fsubr
mov
add
adc
in
sub
ss
mov
int
cmps
inc
xor
ins
(bad)
xchg
outs
fwait
mov
rol
ins
dec
adc
cmc
aam
push
pop
cli
retf
lahf
push
pop
cmc
mov
mov
xlat
push
lods
pop
xchg
mov
icebp
ss
outs
ror
or
jno
ficomp
or
aam
adc
sbb
in
retf
adc
test
sbb
in
mov
mov
inc
not
sbb
cmc
cmp
rcl
xor
mov
sub
ror
jne
ror
mov
inc
or
inc
movs
pop
dec
nop
dec
pop
pop
sbb
mov
mov
lods
stos
sbb
mov
mov
dec
dec
or
xchg
pop
push
les
xchg
rol
inc
dec
or
shl
add
sahf
pop
jecxz
enter
dec
frstor
pop
cwde
ja
pop
cwde
mov
sar
pop
aad
shl
ror
pop
xchg
push
out
or
xchg
cmp
shl
xor
pop
data16
mov
mov
ror
scas
mov
adc
retf
xchg
inc
pusha
sub
shr
pop
dec
stc
sbb
pushf
inc
add
sub
jo
sub
xchg
dec
(bad)
int3
(bad)
pop
(bad)
inc
repnz
popa
pop
jo
jae
mov
jl
stos
cmp
ret
or
aad
loopne
or
sbb
ja
fimul
into
inc
int3
cmc
rcr
cmps
add
lahf
scas
xor
rcr
in
addr16
ins
adc
mov
outs
mov
inc
jbe
aaa
sti
adc
sbb
cmp
jge
add
and
rol
add
mov
not
push
dec
call
sbb
in
xchg
int
leave
pop
mov
xchg
dec
cmc
js
leave
and
jae
mov
(bad)
repnz
fwait
test
mov
rcr
daa
stos
cmp
or
data16
jg
cmp
fst
inc
adc
dec
imul
mov
stc
arpl
dec
xchg
pop
std
hlt
xchg
in
pop
adc
mov
in
lods
gs
popf
pop
fadd
push
push
adc
jle
add
or
xchg
imul
sbb
shr
cli
dec
mov
in
cmp
cmp
fcomi
clc
ds
stos
or
adc
push
inc
test
mov
shl
ror
inc
mov
jle
test
out
adc
dec
fidiv
pop
inc
dec
outs
in
cdq
hlt
jmp
cs
aas
lahf
cmp
pop
call
loope
sbb
mov
fxch
loope
inc
loope
lock
jmp
mov
fistp
out
loopne
loopne
stc
sahf
clc
or
pushf
pushf
adc
mov
xchg
out
not
xor
test
into
into
mov
push
jae
adc
push
je
ret
sbb
sub
push
and
ins
dec
mov
aas
inc
fcom
test
out
sbb
jae
pop
sti
aas
fdivp
add
xchg
mov
mov
mov
jle
pop
and
outs
pop
inc
xlat
mov
std
ds
rcl
cld
mov
xchg
cmps
daa
out
inc
cmps
popf
aad
bnd
mov
xor
sub
mov
xchg
adc
mov
mov
icebp
push
out
and
std
mov
test
das
jo
pop
ins
movs
shr
fsubr
stc
sbb
and
clc
aas
arpl
push
out
lock
pop
jl
pusha
mov
stc
sbb
retf
cwde
push
cmp
dec
shr
popa
pop
imul
mov
cmp
mov
push
clc
loopne
movs
dec
pop
and
aam
scas
inc
dec
fmul
imul
sub
add
(bad)
xchg
lsl
cdq
jo
test
int3
aam
test
pop
xor
mov
outs
pop
imul
ja
xchg
xchg
jns
xlat
enter
je
test
sti
push
jl
std
mov
dec
or
sbb
mov
data16
sbb
aas
(bad)
std
mov
ja
push
rcr
pop
fisub
cwde
or
or
sbb
stc
movs
aaa
xchg
mov
mov
cmp
jp
push
cli
mov
sub
or
data16
add
xchg
pop
test
add
xchg
mov
push
adc
push
stos
inc
icebp
inc
jge
test
push
push
retf
mov
or
sub
leave
int3
pop
mov
clc
xlat
push
leave
ins
lods
xor
pop
ret
add
popa
mov
mov
sub
sbb
xor
inc
mov
jp
pop
sub
aam
out
sti
push
ss
xchg
dec
retf
(bad)
mov
test
jnp
fbstp
into
jo
mov
mov
retf
or
and
xchg
jo
cs
cdq
add
jmp
push
in
xor
out
daa
mov
test
(bad)
enter
dec
mov
mov
call
loope
ja
add
cmp
test
ins
ret
cmp
push
(bad)
(bad)
jne
inc
pop
(bad)
ficomp
sub
das
pop
push
call
push
and
sysenter
stc
out
std
and
xor
in
cmp
pop
test
out
shr
dec
mov
mov
loopne
inc
cdq
pop
mov
ins
out
adc
jno
push
(bad)
jo
push
pop
xchg
lds
inc
mov
pop
inc
fcmovne
ins
jge
fnstenv
sub
jb
xor
mov
inc
dec
mov
cmp
nop
jg
ins
js
jae
mov
cmpxchg
inc
add
lods
pusha
popf
sahf
cmp
xchg
out
push
inc
sub
and
cwde
shl
sub
repnz
cmp
fptan
xlat
mov
push
(bad)
sbb
outs
sbb
mov
repz
jo
jne
xchg
and
in
pushf
movs
daa
out
sub
fsubr
sar
xchg
dec
push
clc
imul
mov
movs
fmul
dec
lds
outs
sub
cmp
inc
and
test
or
pop
rcl
out
fwait
xchg
out
retf
pop
xchg
xchg
fsub
add
mov
ins
jae
mov
fdivr
pop
xchg
and
or
jnp
repnz
push
xor
xor
and
mov
mov
inc
add
or
(bad)
sub
or
in
and
fild
dec
adc
mov
xor
jne
rcr
call
mov
in
rcl
clc
inc
mov
or
add
pop
pop
push
fistp
inc
cld
mov
pop
(bad)
pop
adc
mov
jb
cs
fs
sbb
in
in
dec
dec
jle
daa
inc
mul
retf
loope
add
jns
push
pop
pop
push
fidivr
test
test
jnp
or
scas
adc
and
cmp
shl
movs
loope
cwde
ret
outs
je
jno
push
idiv
jg
jno
js
out
and
sahf
pop
dec
jmp
daa
fidiv
push
dec
(bad)
mov
jno
inc
adc
mov
cmp
mov
mov
leave
pop
(bad)
int3
xor
jle
addr16
aas
dec
(bad)
mov
or
push
mov
stos
lock
imul
(bad)
stos
sub
sub
push
retf
test
enter
mov
mov
xchg
pop
jge
loopne
push
mov
push
aam
daa
sti
out
inc
or
shl
lahf
xchg
cmp
ror
int
cmp
push
inc
inc
jbe
sbb
gs
adc
fs
cld
xor
jecxz
pop
dec
ins
pop
jecxz
sub
xchg
cmp
cmp
xor
pop
sbb
shr
not
xor
and
push
jae
out
or
sub
fidiv
jle
in
clc
out
sub
push
sti
ds
dec
sbb
icebp
ds
pop
cmp
mov
test
scas
loope
loop
lahf
adc
add
push
jne
enter
aam
xchg
mov
and
and
jg
inc
adc
push
adc
adc
sbb
adc
or
push
(bad)
cmc
pop
addr16
or
test
pop
out
sub
mov
push
repnz
cdq
and
push
ret
int
inc
jle
sub
mov
cmc
lods
mov
pusha
adc
sbb
adc
push
mov
jge
and
dec
push
lods
out
cwde
pop
adc
es
cld
jns
fld
or
sub
neg
jmp
jg
jl
push
pop
sub
out
mov
and
or
add
dec
pop
dec
add
pop
hlt
jae
inc
dec
dec
jb
int3
dec
stos
neg
outs
in
icebp
jbe
xor
mov
je
aas
mov
test
std
sbb
cs
mov
lods
cdq
loope
cli
mov
jae
or
ss
(bad)
adc
jbe
aaa
jb
mov
movs
push
jmp
push
pop
bound
push
enter
xor
daa
ret
sbb
aaa
shl
das
inc
cmp
sbb
mov
push
jnp
xor
shl
out
xchg
push
inc
arpl
mov
ret
inc
mov
adc
fdivr
xchg
xor
inc
fbld
add
push
adc
xor
mov
push
(bad)
nop
fwait
mov
into
syscall
sbb
or
fdiv
sub
rcl
stos
xchg
dec
movs
cmp
int3
xchg
mov
call
loop
xchg
data16
fld1
bound
cmp
adc
outs
call
sub
out
pop
shl
inc
out
es
inc
adc
pop
jle
jecxz
xchg
in
push
dec
aad
scas
mov
fwait
push
sbb
or
jp
ja
adc
outs
mov
ret
jmp
adc
inc
stos
cwde
mov
daa
add
or
inc
(bad)
mov
lock
xchg
push
jmp
ja
lea
xchg
jmp
cdq
outs
jmp
or
sti
cmp
mov
xchg
ins
retf
push
(bad)
scas
mov
and
and
cmp
dec
mov
mov
dec
jecxz
dec
cli
shl
push
push
mov
lods
test
repnz
hlt
cmp
ss
cdq
arpl
icebp
mov
push
(bad)
fstp
xor
pop
sti
in
inc
or
sbb
aad
leave
push
jmp
pushf
imul
jmp
mov
xchg
add
adc
nop
test
adc
pop
dec
push
ds
jmp
xchg
movs
cmp
sub
xchg
jg
in
add
loopne
jecxz
dec
or
sahf
mov
adc
pop
test
sub
push
pop
imul
jp
mov
in
sar
push
jmp
pushf
movs
stos
loopne
popf
jb
adc
mov
xor
ret
icebp
mov
(bad)
(bad)
sbb
push
lods
cmp
and
call
jnp
clc
fs
cmps
pop
dec
ret
push
add
sahf
lds
sub
aam
and
inc
lock
fld
fild
repz
xchg
jbe
leave
out
icebp
stos
mul
pop
mov
pop
cld
adc
add
adc
idiv
out
mov
jmp
xchg
stos
jg
loop
push
data16
push
cmp
fmul
push
(bad)
nop
int
clc
xor
out
jae
hlt
xchg
daa
loope
and
add
add
pushf
call
push
push
or
mov
dec
jae
sub
dec
mov
pop
dec
movs
cwde
inc
xlat
or
pop
pop
fsubr
out
add
mov
nop
adc
nop
pop
add
lods
daa
enter
pushf
xchg
push
add
push
add
cmp
es
(bad)
bound
jae
sti
pop
xor
and
in
mov
xor
rcr
pop
pop
push
pop
jno
int3
sar
mov
sub
fmulp
fld
sub
push
outs
mov
xor
mov
mov
push
scas
sahf
rcr
loope
out
inc
pusha
loopne
sar
xor
scas
jl
scas
jmp
xor
jo
pop
shl
jbe
out
movs
mov
add
test
xchg
daa
movs
mov
add
xchg
(bad)
out
data16
addr16
fnstsw
jb
mov
out
push
push
add
mov
std
jne
pop
xchg
xchg
fdiv
jae
fist
mov
xchg
cli
adc
loope
xor
mov
pushf
jne
add
scas
scas
mov
cmc
lods
dec
fdivr
scas
data16
jo
in
mov
cmp
xchg
arpl
aad
pop
ja
inc
sbb
mov
pop
push
push
cwde
movs
jne
in
or
outs
test
into
push
or
dec
bound
xchg
lock
xor
jmp
jnp
fs
test
sahf
inc
or
mov
aas
pop
dec
fwait
lods
dec
xor
add
shl
inc
retf
icebp
cli
xchg
mov
lea
pop
hlt
xchg
pop
xor
pop
and
mov
dec
popf
pop
xor
pop
ins
lods
inc
rol
mov
mov
sbb
imul
outs
mov
adc
sub
jo
add
fnop
les
call
xchg
(bad)
jnp
mov
adc
fimul
ss
ret
dec
fld
jne
mov
dec
sub
pop
pop
outs
push
lea
jp
cli
aam
int
shl
push
sbb
cmps
or
stos
call
mov
xchg
inc
jge
into
push
rcr
pusha
aam
mov
xor
xchg
shrd
push
imul
sbb
push
das
sub
xchg
je
pop
lahf
das
dec
jae
stc
ror
cmp
dec
outs
jnp
mov
std
pop
cmc
outs
je
mov
jle
data16
or
adc
(bad)
lods
add
out
jae
arpl
mov
std
or
cmp
push
pop
xchg
push
(bad)
pop
and
jbe
pop
test
push
js
push
mov
mov
jp
and
outs
xor
loop
jnp
leave
(bad)
push
nop
jmp
inc
jae
sar
sub
js
jne
mov
push
adc
jae
add
mov
sbb
jno
shr
adc
call
mov
mov
loopne
cmp
inc
xchg
add
out
xchg
test
mov
hlt
inc
add
push
jmp
adc
enter
repz
push
movs
push
pop
push
rcr
popa
and
fs
xor
pop
adc
test
das
mov
data16
mov
xor
mov
cs
fcom
and
and
in
xchg
push
xchg
inc
pop
popa
and
xlat
xchg
inc
cmps
sahf
and
xchg
rol
cmp
sub
mov
mov
push
xor
xchg
repnz
or
pop
imul
arpl
shr
dec
pop
jae
(bad)
sar
sbb
mov
sbb
or
xchg
js
mov
mov
je
sti
aas
jo
pop
sub
cmp
out
and
les
sar
test
dec
push
mov
sub
and
(bad)
pop
dec
xlat
jns
xchg
jno
test
js
outs
aam
push
outs
loope
add
popf
mov
pop
js
icebp
frstor
loopne
es
sbb
xchg
xchg
ja
mov
mov
adc
jo
push
imul
test
or
or
add
mov
jo
scas
loope
push
cwde
cmp
add
in
mov
loope
push
push
rcr
loop
test
jo
fwait
jl
fcmovu
sahf
push
add
add
push
arpl
shl
sar
pushf
sar
imul
add
rol
outs
or
(bad)
(bad)
stos
xlat
loope
(bad)
rol
xchg
dec
xor
cld
adc
cmc
sbb
sub
sbb
inc
mov
and
pop
mov
pop
xor
(bad)
sbb
sahf
mov
into
sbb
lods
(bad)
std
mov
cmp
adc
das
jns
and
adc
fcmovnu
mov
ds
test
cmp
pushf
test
retf
daa
and
popa
jae
pop
xchg
cs
and
stc
push
int3
ins
lock
fwait
dec
or
jo
popa
jns
xor
jg
push
hlt
jmp
xor
shl
mov
xchg
mov
jecxz
adc
in
les
pop
inc
aad
add
xchg
pop
gs
stos
std
bound
pop
dec
lea
inc
nop
inc
jl
xor
inc
add
inc
jmp
fst
mov
cld
ret
jne
psubsb
rol
cmp
sub
xor
shr
push
jmp
pop
and
push
xchg
or
inc
(bad)
loop
jnp
cmp
xchg
jnp
lds
retf
add
fnstsw
dec
ja
(bad)
add
or
xchg
repz
adc
cmps
aaa
adc
inc
and
mov
push
addr16
sbb
add
fsubr
xchg
jl
icebp
lods
std
mov
jo
add
int3
add
call
sub
pop
mov
push
xchg
inc
popf
push
pop
shl
jno
arpl
int
mov
sbb
push
cmps
clc
jmp
add
dec
xchg
setne
mov
jns
rcl
aaa
loope
or
xor
sub
mov
push
int
in
fs
js
inc
ins
test
pop
jns
add
fwait
mov
add
xchg
lods
in
sub
or
xchg
clc
je
push
test
inc
cld
in
sbb
and
cmp
jo
adc
mov
and
je
stos
or
in
and
fistp
mov
dec
sub
test
(bad)
cmp
ds
mov
adc
sub
aad
jg
mov
getsec
adc
cmps
enter
rcl
scas
enter
lock
fmul
daa
fsubp
push
cmp
cmp
cdq
or
xchg
mov
frstor
addr16
stos
retf
fild
rcl
adc
xor
dec
pop
mov
xchg
and
pop
push
mov
cmp
fld
xchg
push
jg
xchg
sbb
outs
mov
adc
jg
das
repz
mov
cdq
push
clc
int
xchg
pop
add
cdq
pop
add
enter
outs
sub
push
jmp
aam
lock
dec
xor
cmp
pop
sub
clc
cli
test
xor
clc
adc
imul
mov
cmp
pop
addr16
cmps
fdivp
aas
xor
lods
inc
xor
dec
or
arpl
out
adc
test
sbb
sub
repnz
mov
sbb
inc
jle
xchg
es
aad
jb
sahf
jnp
dec
and
cmc
jp
sub
mov
scas
les
repz
push
frstor
jg
mov
aad
xchg
dec
cmp
cmp
rcr
test
out
in
sar
mov
adc
xchg
(bad)
in
cmp
or
xchg
and
xor
push
lock
out
push
imul
scas
lahf
mov
aaa
mov
xchg
jnp
adc
jns
push
jno
fucomp
sbb
retf
mov
cs
arpl
jp
cmp
clc
jns
sbb
pop
mov
jle
movs
pushf
ds
ficom
fisubr
or
cmc
data16
inc
cli
dec
pop
rcr
mov
hlt
inc
add
sub
and
shl
sbb
mov
and
cmp
pop
dec
sar
mov
lods
int
pop
push
nop
(bad)
test
xor
inc
int3
adc
jno
dec
fst
dec
mov
mov
gs
movs
mov
sub
popf
iret
cmp
mov
pop
fadd
adc
lock
add
mov
(bad)
push
mov
adc
add
jo
lock
rcr
sbb
mov
jmp
stc
fsub
sti
xchg
dec
aas
ja
aas
and
xchg
shr
jo
in
out
mov
test
mov
stos
jmp
icebp
out
xor
xor
jmp
stos
cmc
fwait
shl
loopne
pusha
jnp
repnz
sub
popa
test
ss
jae
push
push
out
mov
in
mov
pusha
lods
cmp
push
xchg
add
cmp
mov
arpl
sbb
pop
js
pop
jae
push
rol
(bad)
ror
xor
push
mov
jmp
mov
inc
or
sbb
pop
sar
cmps
xor
mov
(bad)
jl
ret
aam
mov
(bad)
nop
fsub
jg
div
movs
sub
mov
mov
imul
sbb
cmp
test
pushf
push
sub
mov
add
mov
das
outs
cmp
xor
xchg
xor
xor
icebp
inc
or
dec
adc
mov
imul
(bad)
xlat
(bad)
pop
jo
mov
xor
inc
or
push
xor
push
pop
ins
(bad)
dec
jle
out
mov
movs
xchg
push
int3
(bad)
push
xchg
into
mov
(bad)
fdivr
mov
jmp
fstp
dec
xor
out
outs
cmp
sub
sub
retf
aam
xor
push
sub
mov
cmp
imul
aam
and
(bad)
cli
xor
push
outs
test
jb
movs
das
test
jp
sar
sub
mov
sar
push
xor
cld
fcomp
pop
inc
sub
cmp
jle
jge
adc
(bad)
hlt
pop
(bad)
xor
outs
inc
inc
ss
cmp
retf
mov
jno
pop
loop
xchg
in
shl
push
xor
push
into
and
dec
ins
add
adc
aam
pop
push
cli
push
push
xchg
inc
pop
fidiv
movs
add
push
ficomp
leave
inc
sub
xor
mov
sti
sub
lahf
es
dec
mov
adc
cmp
pusha
xchg
sub
movs
jo
inc
or
ss
push
push
mov
or
cmp
sbb
adc
leave
mov
jl
fst
int3
out
adc
sbb
and
dec
dec
and
xchg
fisubr
add
sar
mov
push
add
push
loopne
popf
inc
in
das
ja
and
fwait
mov
or
mov
mov
push
sub
ret
push
shl
test
in
sahf
xor
lahf
jl
and
push
or
push
xchg
(bad)
clc
rcr
mov
lock
pop
dec
loop
dec
xchg
sub
adc
dec
int3
fidivr
dec
sti
addr16
iret
add
scas
xor
and
test
out
adc
idiv
ins
mov
sbb
gs
retf
fstp
mov
shl
mov
pusha
aad
sti
ret
test
fsubr
jmp
mov
mov
jl
mov
dec
push
(bad)
fucom
xchg
add
jmp
sbb
sahf
push
aam
inc
add
(bad)
xlat
cmp
dec
lock
adc
dec
repz
mov
outs
dec
push
out
dec
pop
pusha
lock
cmp
ret
xchg
inc
cli
jl
and
ss
pop
add
je
add
jne
and
add
add
inc
retf
mov
jnp
aam
sbb
aad
push
aas
loope
cs
add
clc
dec
inc
jb
or
jge
ret
imul
dec
xor
add
pop
cmp
inc
xchg
out
push
lods
adc
push
jbe
inc
sub
aas
repz
xchg
neg
inc
mov
sub
inc
es
mov
xor
xor
or
jge
sti
or
push
or
scas
xor
imul
cmp
adc
je
inc
mov
and
adc
cmp
cdq
rcl
jge
cdq
xor
jecxz
jo
mov
mov
bound
daa
mov
or
inc
loope
aad
push
stos
aad
cmp
not
ret
sub
sbb
lods
mov
int3
imul
jnp
and
sbb
out
lods
xor
iret
cdq
push
std
out
rol
int
shld
test
push
fcom
push
cmp
add
(bad)
mov
int
pop
sbb
sbb
sub
in
ror
inc
mov
out
aas
ins
lea
bound
test
dec
test
leave
xchg
les
push
out
stc
stc
xchg
pusha
push
sub
outs
outs
xor
xor
sbb
stc
mov
xchg
test
retf
or
out
adc
cmp
jecxz
mov
dec
sub
dec
xchg
push
fsubrp
cmps
push
repnz
rol
mov
add
pop
sub
xchg
add
xor
lods
push
dec
inc
push
aam
push
mov
mov
xor
fbstp
(bad)
sub
xor
arpl
or
(bad)
mov
repnz
in
(bad)
jl
retw
dec
scas
cmp
sub
inc
adc
push
push
aam
dec
ror
xor
adc
shl
mov
retf
inc
int
cmp
out
pop
or
and
lods
jbe
cmp
xchg
jge
and
jmp
or
jns
dec
out
xchg
lock
add
jg
xor
je
add
xor
ins
xchg
sbb
push
out
repz
pop
jp
in
loop
test
mov
sub
pop
iret
mov
mov
pop
ret
jmp
fs
stos
fs
mov
sar
ins
xchg
out
nop
in
cmp
dec
xchg
add
test
push
fisubr
in
cmp
(bad)
mov
leave
mov
ja
arpl
mov
or
pop
push
dec
cld
and
pop
pop
adc
and
(bad)
imul
cmp
inc
test
loope
cmp
popa
dec
adc
ins
loope
cmp
add
push
add
sbb
jl
out
shufps
add
add
cmp
loope
xor
out
sub
rcl
fucom
inc
js
imul
fs
jae
and
aam
mov
in
pop
popf
push
std
jmp
or
and
mov
pop
cmp
retf
jmp
mov
jl
cmp
jg
je
lods
dec
mov
push
neg
mov
cmp
out
nop
inc
mov
nop
test
call
ret
sbb
xor
or
icebp
lds
jns
xor
jmp
pop
cmp
lods
dec
inc
adc
xor
jge
mov
inc
mov
and
push
push
ins
fmulp
sbb
push
cmp
jle
lods
clc
inc
cmps
cmp
and
jbe
adc
fsubr
or
aam
mov
dec
lea
stos
pushf
inc
push
movs
sub
fdiv
mov
repz
cmp
rcr
and
xchg
in
adc
lds
rol
dec
sbb
sbb
bound
pop
lods
out
mov
pop
or
pop
adc
in
sbb
mov
loop
mov
jne
out
or
in
loopne
(bad)
cdq
fidiv
jnp
call
(bad)
xchg
xchg
std
int
aas
or
pop
ja
mov
cmp
pusha
xchg
push
adc
loopne
into
call
test
retf
fild
sahf
stos
pop
xchg
pop
xchg
pushf
cdq
dec
retf
push
or
dec
inc
mov
idiv
mov
clc
push
cmp
jbe
jo
inc
pop
cmps
clc
jmp
fcomp
cmp
pushf
in
clc
cld
push
dec
xlat
in
sbb
loopne
cmp
sbb
sub
test
xor
adc
sbb
cmp
rcr
stc
push
test
idiv
dec
mov
leave
imul
dec
iret
jo
ret
mov
ret
ror
add
js
adc
and
push
stos
and
mov
and
icebp
and
pop
jnp
xor
cmp
adc
sbb
mov
and
jb
mov
sub
(bad)
jmp
leave
jnp
mov
pop
jo
pop
adc
dec
lahf
jne
lock
dec
cmp
js
fimul
add
rol
sub
les
mov
lea
lods
xchg
bound
js
mov
sub
ret
lahf
sbb
adc
les
bnd
mov
cmp
cmp
clc
push
adc
call
out
xchg
mov
mov
aad
lea
not
rol
xor
add
push
jmp
fdivr
shr
add
adc
xchg
loop
sub
push
push
xlat
dec
mov
xchg
(bad)
loop
(bad)
pop
adc
nop
mov
dec
hlt
pop
adc
das
push
xor
inc
xlat
xchg
pop
rol
mov
add
add
pop
into
int
jnp
(bad)
lds
pop
mov
les
inc
adc
jne
jecxz
repnz
fimul
xchg
mov
jmp
fs
mov
cmp
cmp
sub
ficomp
xchg
outs
sbb
mov
sub
push
ds
jbe
or
stos
or
out
mov
clc
clc
push
fs
sub
loope
jmp
out
int
addr16
dec
cmc
loope
scas
mov
sub
add
fs
inc
pop
loope
sbb
pop
and
cli
xchg
(bad)
pop
jae
add
push
mov
cmps
test
xchg
pop
pop
sbb
mov
jmp
js
out
popa
xor
clc
rcl
pop
pusha
jl
popa
retf
xlat
mov
add
jecxz
xor
stos
fadd
jae
(bad)
cmp
inc
popf
add
cmc
int
stc
sbb
adc
lods
push
pop
in
(bad)
popf
sbb
stos
mov
repnz
sub
das
adc
pusha
xchg
sbb
xchg
aas
push
sbb
fcomip
jne
outs
test
or
xchg
dec
mov
jbe
cmp
add
fcomp
or
add
movzx
or
lods
cwde
sbb
mov
adc
mov
pop
ds
pop
sub
(bad)
jl
sub
mov
shl
out
or
sub
inc
arpl
mov
fs
sahf
js
inc
out
ins
cmps
shr
ss
pop
leave
pop
or
or
mov
and
jg
pop
pop
in
out
call
(bad)
pop
test
cmp
sbb
xlat
cmps
and
jle
sub
jae
mov
shl
and
jp
mov
fstp
mov
mov
mov
sar
shl
mov
dec
ret
inc
dec
fldcw
and
push
xlat
repz
loop
adc
or
mov
out
sbb
jns
xor
fdivr
push
loopne
sbb
mov
das
sahf
pusha
xor
out
dec
mov
aas
stos
data16
inc
loop
das
sti
inc
fisub
stos
ror
(bad)
lock
mov
ja
mov
dec
jmp
fmul
sub
dec
loop
push
stos
loope
mov
ret
xor
cmp
movs
sbb
fwait
xchg
xchg
jns
or
outs
das
jae
icebp
int3
jno
pop
pusha
je
cmp
iret
pusha
add
pop
inc
sbb
clc
pop
rcl
pop
push
mov
pop
cmps
fisttp
xchg
xor
(bad)
loopne
cwde
adc
stc
enter
bnd
xchg
loop
rcl
sbb
leave
xchg
push
adc
jg
pop
mov
sbb
fist
jge
pusha
mov
inc
repz
aas
push
stos
test
into
mov
mov
sbb
fnstcw
sbb
push
or
pop
es
dec
adc
push
in
adc
(bad)
mov
out
mov
mov
dec
jg
test
jp
adc
addr16
and
pop
xor
pusha
sub
inc
sbb
adc
xchg
bound
setne
loopne
adc
or
or
out
loop
sub
or
jp
cmp
cmp
out
lock
add
into
pop
xor
jl
mov
shl
out
arpl
sub
jo
(bad)
push
sbb
aam
add
xor
pop
movs
sub
inc
call
adc
in
enter
sbb
pop
in
mov
dec
arpl
add
sbb
pusha
sahf
je
pop
movs
jae
pusha
mov
ins
sbb
cmp
pop
test
popa
sbb
xor
ins
xlat
rcr
push
push
mov
xor
hlt
into
xchg
push
fwait
and
adc
jmp
retf
jg
and
inc
loop
pop
cmp
xor
rcl
sub
mov
sub
div
in
dec
cmp
cmp
xlat
cmps
dec
popf
scas
fcomp
xchg
xchg
and
loope
ja
data16
lahf
jg
xchg
outs
outs
sahf
aam
test
inc
dec
loope
mov
test
push
jne
jmp
jecxz
out
mov
(bad)
jl
gs
pop
ud1
pop
mov
enter
or
or
(bad)
and
push
jmp
in
jne
gs
push
inc
inc
inc
adc
xchg
scas
mov
push
stos
mov
mov
in
inc
adc
gs
leave
xchg
pop
and
or
add
fidiv
imul
xchg
xchg
inc
mov
dec
fisubr
sub
inc
jbe
fs
xchg
xchg
dec
stc
and
jnp
and
sub
pop
int
adc
mov
shl
mov
xlat
mov
lea
adc
pusha
(bad)
and
pop
loopne
iret
(bad)
sub
fnstenv
ror
sub
xor
pop
sbb
mov
js
loope
frstor
xchg
retf
sub
mov
movs
mov
aas
jmp
call
fistp
and
pop
dec
inc
sub
mov
mov
pop
jge
fs
movs
pop
and
sbb
jge
fs
dec
xchg
call
cmp
shr
or
mov
cmp
bound
cmps
lea
push
ins
enter
aam
dec
sbb
sahf
das
outs
xchg
jmp
test
in
or
mov
xchg
scas
pop
add
inc
and
aaa
push
test
sti
(bad)
mov
mov
pop
adc
push
inc
loopne
sub
fucomi
rcr
push
mov
lods
arpl
dec
sub
fsubr
imul
xchg
sub
sar
mov
cmps
jl
inc
test
dec
fsubr
(bad)
fs
loope
pusha
xor
dec
rol
adc
out
jbe
ret
jne
sub
mov
call
mov
arpl
out
or
cs
iret
call
out
sbb
jbe
and
in
out
and
mov
add
pop
leave
mov
ret
data16
push
retf
xchg
mov
inc
arpl
icebp
cld
lea
inc
pop
loope
cmp
imul
je
aas
add
cld
(bad)
cmp
into
inc
shr
stc
stos
cmp
lahf
mov
or
dec
pop
popa
stos
adc
cmps
scas
call
jae
data16
js
mov
xlat
ret
mov
push
inc
push
lods
retf
xchg
aam
push
xlat
fistp
xchg
pushf
sbb
ja
inc
cmp
sti
mov
mov
das
sbb
sahf
cmps
pop
or
xchg
sbb
in
aaa
mov
jno
mov
mov
loope
mov
daa
mov
imul
lds
pusha
push
cli
xchg
adc
enter
pop
mov
push
push
arpl
ret
adc
(bad)
ror
dec
inc
pop
mov
pop
pop
push
ds
test
mov
int3
jo
mov
mov
les
or
jl
xchg
and
int3
or
lods
sbb
add
mov
jb
xchg
mov
and
aaa
mov
mul
and
xchg
ret
imul
fcom
mov
fistp
hlt
jl
pop
mov
test
pop
ins
pop
(bad)
xchg
xor
test
push
iret
mov
rcl
dec
mov
scas
bound
test
ins
dec
daa
ins
lahf
adc
icebp
jmp
fwait
or
sti
sar
fld
fdiv
ret
out
push
cmc
or
mov
jae
scas
pop
hlt
scas
jae
enter
(bad)
mov
call
je
nop
adc
jb
push
shl
xchg
cmp
clc
adc
sub
push
es
xor
xchg
mov
ror
sub
xchg
outs
mov
sbb
mov
adc
pop
sub
or
mov
aad
out
push
dec
ret
mov
pushf
push
sub
xlat
xchg
fild
call
rcl
mov
adc
enter
adc
data16
fnsave
daa
pusha
xchg
pop
lds
mov
mov
adc
mov
cdq
shr
sbb
scas
xchg
data16
nop
push
mul
jo
fiadd
jg
leave
add
icebp
gs
fstp
fisttp
jo
sbb
xlat
push
push
adc
push
lods
pop
mov
mov
mov
mov
repz
dec
shl
sub
fs
adc
cmp
push
in
push
call
shl
mov
lea
call
mov
pop
clc
ficomp
push
pop
nop
mov
out
cmp
lods
push
in
movs
push
xchg
dec
inc
pop
mov
dec
push
data16
xchg
pushf
repnz
(bad)
dec
xor
(bad)
es
sbb
scas
pop
xchg
sbb
in
mov
fwait
andps
clc
pushf
push
fdiv
lods
adc
or
or
mov
inc
into
loopne
xchg
pop
ja
jns
jno
stos
cmps
pushf
(bad)
hlt
mov
aaa
les
addr16
aad
std
inc
mov
test
int3
imul
loopne
mov
jecxz
jo
cmc
add
add
pop
inc
inc
and
(bad)
or
cwde
ins
or
adc
(bad)
lea
jb
rcl
cmc
into
pop
push
pop
adc
test
adc
aas
mov
not
xchg
cmp
sub
xor
fcmove
mov
imul
in
or
xchg
sbb
aad
xchg
inc
icebp
sbb
push
adc
sahf
push
push
mov
adc
call
fst
lock
sub
mov
mov
push
adc
(bad)
lods
jge
retf
outs
mov
imul
cwde
cdq
ins
inc
out
jmp
cmp
cwde
inc
adc
ins
jle
sahf
lahf
pop
sub
sub
pop
data16
out
pushf
mov
jae
scas
cdq
out
push
rol
cdq
add
jge
add
cmp
cwde
popa
mov
(bad)
mov
into
mov
fist
data16
inc
mov
pop
jne
cmp
mov
loope
push
sbb
jne
scas
xor
adc
cdq
iret
cmp
out
in
jne
xchg
les
shl
mov
pop
inc
sbb
mov
call
jo
nop
test
(bad)
and
jb
sub
inc
push
(bad)
std
out
mov
jmp
fsub
leave
cld
ss
sbb
not
shl
cmp
inc
push
jge
cmps
push
pop
xchg
adc
mov
cmp
ins
test
and
fist
dec
inc
adc
imul
rcl
pop
xor
scas
sar
mov
or
pop
xchg
outs
mov
dec
jmp
movs
push
shl
adc
xchg
jbe
cld
inc
xchg
xchg
mov
sbb
ficomp
adc
ret
sub
js
mov
or
or
neg
push
cmp
int
lea
jecxz
fistp
sub
and
js
retf
nop
jg
pop
jns
loope
lods
repz
mov
imul
or
retf
mov
lea
in
cmps
leave
sub
nop
loop
out
push
out
jne
(bad)
ss
or
ins
cmc
xlat
fsub
fwait
adc
arpl
(bad)
adc
div
and
and
mov
dec
dec
dec
mov
gs
sub
mov
popa
mov
aaa
mov
ficomp
pop
mov
dec
out
inc
inc
jns
cwde
mov
clc
xchg
cmp
push
hlt
repz
mov
or
cmp
repnz
rol
fsubr
sub
movs
not
and
test
cwde
mov
in
(bad)
or
cmp
std
jns
fmul
xchg
in
aaa
mov
sbb
xor
das
push
je
mov
jno
inc
sbb
mov
jmp
cmps
ja
fild
das
jge
pop
call
pop
xchg
inc
sub
popf
jns
imul
sub
and
jnp
es
push
push
daa
stos
push
leave
and
out
movs
psubsw
push
nop
dec
movups
es
ret
jnp
mov
and
xor
fadd
rcr
in
les
lods
jmp
jmp
clc
pushf
xlat
add
rol
in
inc
mov
cs
ins
mov
mov
adc
lea
sbb
push
lahf
jne
push
jnp
movs
movs
mov
push
sub
nop
clc
(bad)
jg
shl
in
xlat
mov
popf
fidivr
(bad)
dec
repz
mov
push
add
and
scas
cs
outs
jmp
push
and
mov
xchg
cmpps
jmp
mov
std
cmp
cmc
add
(bad)
sub
(bad)
cmp
mov
xor
jnp
mov
inc
test
xchg
pop
pushf
(bad)
pop
xchg
lahf
lods
lock
pop
adc
into
dec
enter
cmp
imul
mov
or
cs
mov
fcom
loop
pop
xchg
push
cli
inc
pushf
cmp
mov
not
daa
movs
fbstp
mov
fnstenv
shr
jp
out
push
cdq
jns
mov
or
gs
jae
mov
idiv
sar
in
and
daa
cmp
pop
cwde
xchg
push
(bad)
push
lock
dec
leave
mov
push
repnz
fcom
jl
(bad)
pop
and
movs
sbb
or
pop
dec
mov
jns
out
ds
mov
shl
out
ds
dec
cwde
sbb
int
push
xchg
pop
cmp
inc
xchg
jno
retf
push
xchg
xchg
js
test
test
pushf
in
sub
popa
jmp
xchg
sar
test
push
hlt
fisttp
jmp
int3
aaa
jns
pusha
xor
fst
cmps
ja
fidiv
sbb
lock
out
(bad)
ror
sbb
cmps
cmps
mov
push
xchg
mov
add
int
sub
or
mov
pop
jg
jecxz
pop
mov
(bad)
aad
test
repz
into
dec
inc
(bad)
(bad)
pop
or
cmp
rcl
nop
mov
xchg
jne
pop
add
mov
mov
retf
sub
ret
fisubr
arpl
and
aas
in
movs
dec
xor
pop
pop
jg
add
stos
mov
pusha
xor
push
(bad)
test
rcr
mov
adc
sub
ffreep
cmp
aaa
cwde
(bad)
scas
xor
out
sub
sbb
push
xor
stc
cmp
mov
inc
sbb
jmp
ret
stos
xor
mov
int3
jmp
(bad)
fcmovne
pop
ja
xor
adc
fdecstp
push
lds
xchg
xchg
add
adc
fld
test
aas
mov
scas
inc
mov
sahf
fcmovbe
or
inc
lea
je
retf
popf
ret
xchg
repz
mov
(bad)
mov
in
fs
cmp
add
mov
(bad)
cmp
xor
fwait
inc
cmps
vcvtsi2ss
sti
xchg
add
sbb
shr
lds
ins
dec
movs
inc
mov
sbb
fidiv
ja
in
sub
rcr
data16
xor
xor
cmp
cmp
stc
addr16
(bad)
fwait
push
inc
mov
arpl
daa
xor
xchg
addr16
mov
ret
push
lahf
lea
push
pop
or
in
add
fcom
inc
and
jmp
cli
scas
ret
push
and
ficom
in
iret
test
cmps
xchg
fild
jge
mov
mov
hlt
inc
hlt
stos
sbb
xlat
add
fcomp
sub
cs
fwait
ret
lahf
xchg
bound
(bad)
lods
push
call
jb
mov
mov
in
imul
sbb
mov
push
andps
cmps
pop
jmp
push
cmp
mov
ds
mov
es
(bad)
cmps
sti
sub
stos
(bad)
call
pop
push
cmp
push
xchg
or
or
add
leave
jl
loopne
mov
fidivr
arpl
inc
xchg
sub
add
fucomi
lahf
mov
popa
dec
mov
pop
test
xchg
aad
adc
fs
inc
cwde
mov
in
pop
stc
movs
push
ret
xchg
push
cli
cmp
jge
or
or
inc
ds
rcr
xchg
sbb
enter
das
sub
fcomp
lahf
shl
fstp
mov
mov
fs
int
addr16
movs
inc
mov
mov
jae
mov
push
fbstp
js
mov
fmul
daa
repz
pop
clc
push
push
or
xor
imul
pop
jg
mov
push
enter
inc
cmp
cmp
test
jne
push
mov
in
jo
mov
sbb
test
fcomp
push
test
add
outs
inc
scas
jb
jmp
mov
pop
lock
(bad)
mov
dec
jb
std
mov
push
pop
(bad)
jecxz
sub
jge
fnsave
jbe
mov
test
add
in
mul
clc
aad
mov
in
push
or
or
lea
xlat
cwde
out
iret
jnp
xor
call
sti
stc
mov
dec
mov
ins
mov
adc
cmp
ret
in
fcomp
sbb
icebp
sahf
xor
loope
outs
lock
xchg
push
aaa
cmps
mov
outs
mov
ret
arpl
mov
mov
leave
push
cli
mov
inc
mov
xor
mov
pop
sbb
pop
push
sub
das
mov
test
and
push
fild
mov
neg
scas
or
call
xchg
cmp
pop
dec
push
cld
mov
xchg
adc
nop
mov
rol
mov
xlat
pop
push
test
add
test
pop
imul
add
add
(bad)
pop
cdq
jg
push
mov
mov
mov
push
push
call
ss
sub
sahf
jmp
or
aas
mov
repz
push
pop
jmp
jns
int
out
xchg
sub
add
popf
jne
imul
xchg
jmp
pushf
push
sbb
pusha
rol
shr
aaa
in
ficom
shr
fcomp
cli
push
aad
pusha
leave
icebp
cmps
dec
jo
cmp
loop
sahf
xchg
xor
out
movs
cmc
fbstp
adc
ins
or
js
or
jg
lds
fcmovnb
push
mov
lea
ret
mov
xor
sbb
push
and
mov
cmp
repz
ins
xor
adc
int3
push
mov
jecxz
sahf
ins
or
jl
outs
adc
es
cmps
ficomp
add
loop
stc
sub
dec
push
outs
sbb
faddp
sub
jp
clc
or
fwait
das
push
mov
jle
mov
mov
sti
aam
cmp
pop
cmp
and
outs
in
shl
fist
cmp
dec
xchg
(bad)
mov
cmc
std
cdq
cld
stos
xor
shl
stos
push
adc
loop
sbb
pop
mov
ror
pusha
ss
rcl
and
inc
lea
add
push
sbb
jmp
add
push
lock
sub
sar
add
out
jno
cmp
test
sbb
push
popa
mov
test
pop
pop
and
loope
lds
adc
in
or
and
push
cmps
dec
les
dec
leave
lods
jno
aas
dec
fidiv
and
xor
sub
xor
xchg
aas
pop
jno
loopne
in
push
hlt
mov
pop
out
sahf
call
xor
sbb
cmps
xchg
and
fcmovbe
mov
lods
fist
call
xor
das
pop
pop
add
mov
adc
cli
outs
jmp
ins
cmp
inc
mov
mov
push
loope
jno
loop
cmp
sbb
and
mov
push
xchg
inc
pop
add
mov
dec
clc
xor
in
mov
hlt
jae
adc
out
adc
mov
pop
sti
imul
cmp
jmp
pop
out
xchg
jge
sub
add
mov
cmp
add
push
clc
shr
push
jo
mov
out
push
not
or
adc
adc
jge
aas
mov
rcr
dec
add
pushf
fsin
push
sub
mov
cmps
xor
cmp
sub
sub
xchg
jne
xor
in
pop
aaa
mov
inc
fsubr
cwde
(bad)
cld
push
inc
jge
xchg
(bad)
sbb
add
jmp
xor
and
mov
pop
add
dec
sub
fwait
test
mov
into
js
cli
fwait
mov
jae
shl
fnstenv
or
cmc
es
adc
mov
sub
into
shl
pop
add
xchg
shl
stc
and
(bad)
loopne
sub
(bad)
jl
pop
xor
and
in
and
nop
cli
imul
sub
stos
mov
jmp
repz
(bad)
(bad)
repz
in
js
and
pop
and
neg
jne
push
lock
popa
in
out
pop
xchg
jg
pop
add
cli
jne
mov
in
sub
push
or
push
pop
fnstsw
imul
mul
es
xor
cmp
pusha
jae
aas
dec
and
jl
das
mov
mov
xlat
mov
int3
aas
pop
add
push
dec
push
mov
pop
mov
jnp
stos
sbb
jo
push
dec
and
sbb
aam
fidiv
neg
lahf
inc
std
and
std
mov
sbb
add
push
ds
jl
inc
sar
lods
pop
xlat
mov
repnz
js
push
les
mov
ins
hlt
adc
add
cmps
mov
in
inc
jp
sub
inc
iret
mov
(bad)
fdivrp
fdivr
jecxz
sub
ss
fs
or
push
push
(bad)
(bad)
adc
(bad)
fsub
and
(bad)
xor
sbb
movs
pop
cmp
sbb
xchg
ficom
jmp
sbb
pop
jecxz
mov
(bad)
pop
ss
mov
js
mov
adc
and
mov
cdq
loope
sub
ret
cmp
xchg
cld
mov
mov
int3
push
sub
xor
jae
sbb
jmp
out
adc
cmps
add
icebp
cld
sbb
sub
clc
sub
test
push
sub
leave
shr
mov
out
push
loop
inc
sub
jle
dec
lods
mov
retf
jb
dec
push
add
sti
dec
imul
mov
pop
js
(bad)
(bad)
xlat
cmps
out
dec
and
xchg
out
adc
sahf
xchg
and
mov
sub
imul
lds
pop
sbb
ins
or
mov
sub
jge
int3
ror
inc
push
jmp
mov
or
arpl
mov
ret
push
in
dec
and
inc
pop
mov
mov
(bad)
mov
push
inc
xor
sete
lock
out
lods
jmp
jp
in
rcl
push
lahf
cmps
sbb
adc
stos
mov
jbe
rcl
ret
adc
jmp
cmp
mov
enterw
dec
push
xchg
bound
inc
mov
aad
mov
cmp
out
ss
jnp
pop
ins
call
cs
sbb
pop
shl
jno
cmp
dec
daa
shl
mov
stc
mov
xor
mov
stos
ror
xlat
rcr
punpcklwd
mov
mov
xlat
dec
in
out
and
fs
push
stc
loopne
sar
(bad)
in
pusha
(bad)
mov
arpl
(bad)
xchg
loopne
or
inc
mov
pop
rol
push
jle
sbb
lods
mul
shl
in
leave
xor
hlt
adc
mov
inc
xor
mov
lea
test
pop
stc
or
inc
sbb
push
inc
sub
popa
sub
pop
sub
inc
stos
push
ins
mov
push
mov
or
sbb
sub
aad
mov
aaa
out
inc
fwait
daa
(bad)
out
adc
in
pop
lods
outs
mov
sbb
test
in
xchg
std
mov
bound
mov
xchg
dec
sub
and
mov
sahf
into
fisttp
or
xchg
loope
cmp
push
es
and
addr16
jecxz
scas
outs
icebp
(bad)
int
out
lods
movntq
out
mov
mov
icebp
icebp
push
out
jb
xor
mov
adc
in
out
mov
(bad)
addr16
add
out
(bad)
inc
inc
ror
rcr
retf
jecxz
out
out
xor
jg
mov
cmc
pop
mov
ins
mov
imul
(bad)
(bad)
adc
push
hlt
pop
pop
xor
and
frstor
pop
arpl
shl
xchg
loop
rcl
jecxz
jg
xchg
mov
(bad)
push
cmp
je
inc
movs
dec
iret
xor
repz
popa
jns
(bad)
ins
jmp
or
dec
sub
dec
repz
(bad)
jnp
jmp
das
push
mov
fisubr
or
sbb
adc
inc
add
push
mov
cld
push
and
sub
jne
push
sar
or
or
xchg
sbb
and
jl
int
add
push
sbb
inc
push
push
dec
and
mov
int
mov
or
add
ins
fcom
aad
jbe
ins
inc
dec
cmp
outs
sub
jmp
imul
and
and
out
cwde
fwait
jp
cmp
pop
sbb
inc
adc
xchg
push
xor
ret
mov
stc
scas
jg
rep
cmp
aaa
mov
gs
inc
rcl
stos
inc
shr
shr
outs
cmp
retf
arpl
jl
cmc
dec
xchg
dec
xor
cmp
mov
and
nop
imul
(bad)
dec
imul
mov
fst
iret
scas
dec
xchg
inc
movs
retf
nop
xchg
loop
xchg
pop
adc
jg
or
pop
enter
jb
mov
stc
pop
dec
dec
stc
call
movs
pop
test
push
push
and
fsubr
sbb
inc
cmp
mov
add
scas
or
cdq
jle
jecxz
lds
into
add
imul
test
push
xlat
xchg
xor
js
mov
mov
push
jl
xlat
fist
fsubr
jnp
pop
add
ds
jns
and
ret
and
mov
pop
clc
retf
test
out
aad
test
mov
sub
sbb
pop
xchg
and
add
xor
fucomi
popf
sbb
pop
dec
ror
mov
mov
sbb
stos
dec
int3
leave
test
or
out
xor
mov
xor
xor
mov
mov
call
inc
mov
gs
pop
cwde
adc
(bad)
push
and
addr16
push
inc
out
mov
test
enter
cmp
test
and
shr
sub
sub
imul
sub
lea
stos
add
adc
retf
sub
or
sbb
scas
cmp
xchg
cmps
push
in
ins
lods
inc
outs
inc
bound
push
jno
ret
inc
jo
mov
mov
inc
push
mov
out
jnp
popa
aad
jmp
inc
repnz
sub
(bad)
mov
and
mul
repz
loop
sbb
stc
push
xor
dec
loop
cmps
popf
jge
adc
dec
(bad)
cmps
and
ficom
repnz
repz
add
cs
mov
mov
and
jle
lea
(bad)
fist
pop
stos
in
xor
iret
or
cs
fsub
daa
(bad)
int3
adc
xor
cmp
inc
sbb
mov
fdivr
inc
mov
out
ins
mov
sbb
ja
jmp
sub
lock
fwait
loop
test
push
sub
jae
stos
xor
retf
xchg
push
test
sbb
add
leave
push
dec
or
inc
pop
sub
sbb
jno
adc
mov
mov
fst
mov
call
addr16
mov
jb
mov
in
mov
dec
adc
cmp
sbb
in
and
jecxz
int3
shl
jae
(bad)
das
scas
adc
jns
call
aad
dec
xchg
in
gs
pop
inc
cmp
pop
scas
stos
imul
aad
push
popf
dec
mov
ss
pop
clc
adc
into
jae
retf
stc
(bad)
cmp
enter
pushf
retf
push
movs
out
cmp
sbb
mov
xor
(bad)
shl
hlt
mov
mov
fisub
scas
les
scas
dec
dec
outs
out
imul
lea
cmp
addr16
fnstsw
cmps
dec
push
xor
xchg
xor
push
out
xor
and
jge
push
push
aas
xor
in
aam
out
mov
test
movs
pop
add
cwde
(bad)
iret
adc
sbb
dec
scas
xor
xchg
mov
mov
ja
dec
(bad)
push
cli
xchg
aad
adc
cwde
mov
movs
mov
jmp
jb
jge
lds
mov
outs
(bad)
pusha
outs
test
and
movs
(bad)
jmp
stos
push
dec
add
or
push
cwde
arpl
sti
es
xchg
jge
repnz
iret
daa
push
daa
jae
cmp
dec
xor
addr16
xlat
push
jmp
pop
rol
push
push
jo
push
lea
dec
sbb
nop
call
mov
repnz
aaa
mov
mov
or
enter
pop
arpl
add
fild
fdivr
lods
lahf
jo
cld
push
add
into
add
ret
pop
ret
in
sbb
lock
push
adc
lea
jl
test
pop
(bad)
jns
dec
dec
mov
rcl
and
sub
push
push
mov
daa
dec
push
sub
js
(bad)
test
mov
inc
dec
mov
xchg
fimul
push
mov
ss
pop
sbb
pusha
test
out
push
xchg
int
pop
or
cli
sahf
shr
and
lods
jno
dec
call
popf
test
dec
mov
popf
data16
or
xchg
xlat
cmps
fsub
jmp
shl
inc
dec
in
pop
scas
scas
xchg
(bad)
call
jl
call
jnp
movs
add
loopne
and
cmp
sbb
ret
inc
push
imul
ja
add
inc
dec
pop
cmovns
pushfw
aad
add
push
sbb
retf
sub
jb
jecxz
xchg
push
cvtps2pi
(bad)
push
lods
or
xchg
xor
pop
jbe
pop
jb
call
sbb
lock
ds
push
fisub
ret
gs
jae
les
into
imul
ins
popa
jno
jnp
mov
fdivr
xchg
mov
mov
jge
pop
xchg
mov
ja
jns
adc
popf
adc
adc
xchg
mov
cmps
pusha
ret
gs
aaa
ins
movs
cmp
jne
mov
enter
lds
sub
sbb
int
inc
gs
mov
mov
in
lahf
push
xor
loop
popa
or
or
stc
inc
xchg
mov
sbb
ret
call
add
leave
(bad)
sbb
xor
add
jns
stos
jg
mov
xor
mov
cmp
sar
inc
aam
push
popf
rcl
sub
in
and
jl
clc
cwde
in
sub
cmps
lds
jb
push
mov
xchg
jmp
cli
ins
pop
ins
jmp
cmp
mov
int3
pop
push
(bad)
sbb
push
mov
push
aam
xchg
cs
jmp
(bad)
mov
mov
inc
xlat
xchg
jnp
aaa
mov
call
dec
cmp
loop
jg
test
(bad)
and
inc
add
push
dec
jnp
add
adc
cdq
mov
loopne
mov
repz
jge
ds
or
pop
mov
xor
mov
in
inc
popa
(bad)
jb
pusha
dec
jecxz
or
sbb
jns
and
mov
lods
push
xchg
imul
mov
mov
inc
inc
and
inc
jmp
stc
out
int3
dec
pop
xor
movs
out
add
(bad)
adc
inc
movs
in
adc
mov
mov
mov
pop
adc
cmp
xchg
mov
fisttp
scas
das
pop
bound
aad
xor
or
in
icebp
jge
fadd
adc
pop
cmps
test
mov
add
mov
(bad)
hlt
pop
push
mov
sbb
sub
xchg
add
xchg
div
cmovns
rcl
mov
inc
fwait
xchg
cmc
or
mov
inc
loope
jge
xor
lea
mov
das
xchg
cmps
pop
cwde
mov
sub
aaa
mov
in
inc
(bad)
fisubr
pop
inc
jge
adc
rol
push
inc
push
aaa
and
scas
popf
push
ds
adc
mov
or
mov
ins
jne
sar
fwait
lahf
test
inc
sbb
mov
iret
je
pop
pop
int3
sti
xor
call
and
lods
add
push
pop
int3
sbb
jne
popa
outs
lock
retf
dec
xchg
jno
(bad)
dec
push
not
mov
pop
cmps
jg
call
xchg
add
cmps
pushf
cs
mov
cmp
xor
or
mov
push
xchg
fst
mov
in
sbb
int3
and
test
xor
push
cmp
push
cdq
dec
xlat
sub
sub
adc
lods
into
loope
add
xor
push
pop
cmp
add
push
data16
mov
jmp
mov
inc
jmp
xchg
fisub
cmp
cmp
sub
mov
sub
sub
arpl
xor
add
retf
es
adc
pop
push
adc
popf
mov
push
cli
gs
adc
cs
ret
pop
ins
leave
(bad)
xor
inc
mov
add
mov
test
out
jo
mov
mov
sar
jo
jle
xor
imul
nop
ror
iret
sub
xor
(bad)
idiv
push
bts
cmps
and
add
sbb
cmp
push
outs
fs
adc
inc
test
mov
jb
jecxz
ret
sbb
cmc
retf
cmp
fbstp
rcl
imul
test
(bad)
xchg
iret
loope
xor
pop
adc
rcr
xchg
cdq
mov
neg
cmp
inc
jmp
jge
jl
(bad)
xchg
and
jle
mov
lds
add
inc
test
arpl
std
fnsave
adc
xchg
dec
jp
dec
xor
jo
icebp
sbb
aaa
test
or
data16
jge
push
fcomi
jecxz
adc
ds
mov
inc
mov
pop
dec
adc
int3
push
dec
inc
sbb
inc
aad
iret
sub
push
sti
mov
mov
sti
jecxz
mov
call
push
add
mov
jae
test
jo
lahf
loop
idiv
and
popf
jb
repz
jecxz
xor
call
pop
adc
add
jle
movs
or
int
clc
push
fisubr
mov
xchg
test
jbe
add
iret
shl
jo
dec
xor
data16
(bad)
fcomp
aam
(bad)
(bad)
out
xor
mov
jnp
out
cli
scas
dec
inc
cmp
add
push
movs
mov
dec
sbb
dec
dec
pop
mov
fmul
xor
dec
pop
mov
stos
sbb
stos
mov
ja
push
push
rcl
push
adc
loopne
xor
hlt
or
xor
loope
(bad)
iret
mov
dec
fnstcw
into
lock
sub
xchg
mov
rep
add
add
cmc
or
jge
test
cmp
or
dec
mov
outs
or
sti
lods
je
sbb
mov
dec
mov
cdq
mov
jnp
sub
fld
mov
ins
scas
ss
out
or
inc
xor
dec
jno
popa
jae
adc
add
xchg
ins
repnz
lds
mov
xchg
hlt
mov
in
sub
push
cdq
fsubp
push
and
jo
inc
adc
mov
cmp
ja
cmp
push
lds
jl
jns
repnz
clc
push
inc
sbb
xchg
lods
nop
xchg
nop
and
sub
(bad)
or
mov
adc
pop
dec
mov
shl
mov
cmps
add
ret
lock
pop
fisub
loope
jnp
ficomp
inc
add
xchg
popa
push
dec
sbb
jbe
popf
ret
popa
mov
sub
jnp
mov
push
jecxz
icebp
lods
adc
pop
imul
mov
aaa
out
(bad)
mov
xchg
mov
jl
push
stos
sub
and
dec
pop
and
adc
xchg
and
retf
mov
jo
ficomp
dec
fwait
cmp
add
shr
xchg
jnp
xchg
push
leave
or
mov
mov
in
lods
lock
test
push
pop
leave
popa
lea
fadd
jle
inc
imul
repz
mov
lock
mov
adc
sub
jno
push
push
aaa
in
xor
cmp
push
xor
int
or
sbb
shl
pop
jmp
(bad)
pushf
jecxz
sbb
cmp
cmps
nop
gs
mov
jg
push
ins
add
popf
sbb
mov
xor
fnstsw
pop
and
in
sbb
adc
repz
ret
cs
scas
ficom
dec
xchg
outs
pop
cld
mov
mov
repnz
inc
imul
xchg
or
jo
add
in
stc
xor
lea
das
jbe
outs
jmp
pop
call
imul
aam
mov
dec
push
jae
mov
push
pop
loope
lea
pusha
jle
mov
das
shr
xor
mov
jecxz
jl
dec
pop
xor
and
mov
mov
rcl
inc
data16
mov
cwde
jmp
pop
push
outs
retf
mov
xor
and
out
mov
jmp
fcom
add
mov
sbb
out
push
dec
clc
cdq
sub
xchg
cli
push
das
test
in
adc
xchg
push
dec
and
cmp
push
(bad)
lods
push
push
cmps
shr
repz
shr
retf
jle
inc
cmp
pop
(bad)
mov
neg
imul
mov
lods
sub
jge
or
mov
add
loop
lea
imul
inc
jg
push
fcomp
js
aam
jl
fistp
bnd
jg
push
push
(bad)
mov
sahf
std
mov
mov
ds
movs
sbb
adc
fisubr
lds
sti
pop
mov
das
pop
xor
dec
dec
adc
not
mov
push
pop
(bad)
enter
mov
jo
dec
aaa
packsswb
fisttp
popf
imul
test
out
adc
inc
call
gs
loope
sbb
or
jmp
fadd
enter
cmp
outs
jmp
fimul
cmp
mov
push
jmp
xchg
xor
xchg
mov
xor
push
add
mov
mov
inc
std
jo
push
(bad)
sub
pop
ficom
adc
aam
scas
bound
sbb
rol
int
aad
ja
call
adc
sbb
jno
mov
adc
and
js
or
fisubr
dec
cmp
ins
cmps
iret
dec
in
lds
adc
dec
mov
jl
xor
sbb
scas
and
aas
add
mov
mov
rcl
icebp
and
xlat
fiadd
sahf
aam
cmp
cdq
adc
dec
cs
push
icebp
mov
pop
cmp
adc
mov
jmp
bound
push
test
sbb
ja
add
bound
or
mov
pextrw
mov
stc
inc
dec
aam
jmp
fisub
imul
mov
adc
aaa
xchg
gs
scas
repz
fwait
not
pop
xor
add
lea
or
int3
mov
call
pop
push
lods
(bad)
int3
test
xchg
inc
ja
pop
shl
sub
rol
push
movs
sbb
cmc
jmp
sti
mov
adc
clc
stos
dec
and
aad
ss
test
and
mov
retf
sbb
shl
pop
pop
jp
mov
mov
dec
ds
rol
scas
pusha
push
dec
inc
sub
idiv
enter
ret
les
mov
jbe
arpl
popa
shr
dec
or
jo
add
sub
fwait
inc
and
jle
mov
mov
xchg
lods
mov
push
mov
pop
mov
hlt
cmp
jns
scas
sbb
sbb
or
cdq
mov
imul
mov
sbb
jbe
das
and
or
std
dec
cmp
jge
cmp
rcl
ffreep
sbb
sub
test
ret
push
lods
sbb
addr16
mov
xor
scas
sbb
jl
mov
js
sahf
and
jo
mov
mov
mov
aad
lock
push
mov
inc
fsub
or
cdq
jns
sti
inc
fs
in
cmp
call
jno
inc
(bad)
xor
ficom
nop
fst
jmp
inc
lock
out
dec
push
xchg
mov
xchg
fcmovbe
jnp
pushf
xchg
sti
fcom
or
stc
xchg
xchg
in
cmps
sbb
or
popa
inc
push
cmps
loope
jbe
fisubr
mov
or
cmps
dec
cmp
xchg
std
mov
mov
enter
sti
aas
(bad)
aam
out
jge
cmp
xchg
pop
out
push
xlat
out
or
jb
and
mov
inc
lds
ja
push
jno
inc
clc
xchg
inc
or
arpl
cmp
jnp
lods
aas
xor
clc
mov
enter
ins
add
lock
dec
fstp
lods
and
std
fstp
sahf
shl
shl
adc
call
inc
cmps
cmp
add
mov
or
jp
pop
jp
mov
(bad)
movs
pop
jmp
and
mov
icebp
test
inc
cmp
fs
xor
mov
push
push
cs
lahf
push
cmps
in
xchg
ds
cmp
ret
jle
jae
ret
or
int3
inc
mov
cmps
movs
retf
push
out
xor
lock
xchg
sub
loop
xor
mov
and
test
adc
stos
pop
cmp
cmp
loop
loop
loopne
test
and
jmp
pop
adc
adc
adc
(bad)
push
into
arpl
aaa
push
pushf
cli
js
jl
mov
and
sbb
mov
jae
add
cld
cwde
jae
and
js
jne
pop
(bad)
loopne
pop
cs
jb
aaa
cs
or
mov
sbb
cmp
xchg
pop
inc
in
popf
std
push
jmp
mov
ja
mov
pop
test
sub
gs
(bad)
mov
xlat
in
in
and
in
add
fbstp
mov
sbb
in
(bad)
(bad)
enter
xchg
xor
loope
stc
das
mov
xor
sbb
retf
push
jl
pop
sub
jmp
xchg
and
add
imul
jns
aas
push
arpl
and
sub
inc
mov
dec
aad
cmp
lock
lahf
rcr
repz
movs
outs
popa
mov
in
in
aas
fucomp
out
(bad)
jge
and
out
(bad)
jbe
cmc
and
out
mov
shl
jle
jno
push
xchg
aam
push
dec
mov
es
mov
aas
cmc
test
cwde
(bad)
and
repz
cmp
ss
les
jle
jle
in
iret
shl
imul
in
sub
adc
push
sti
sbb
xlat
arpl
push
sti
aaa
or
sar
sbb
bnd
dec
jno
cli
lods
jg
dec
les
pop
mov
inc
pop
or
inc
mov
fimul
push
xchg
sbb
or
dec
and
ja
push
das
fisubr
lock
add
retf
fcomi
(bad)
fdiv
sbb
xlat
leave
push
pop
jae
push
sub
jbe
ret
xchg
dec
pop
fidiv
sar
retf
dec
adc
jle
outs
inc
mov
jle
dec
fucomip
rcr
sar
inc
leave
(bad)
mov
and
xor
mov
dec
and
in
imul
shl
dec
inc
mov
repnz
loope
xchg
int3
or
aas
add
mov
sahf
and
clc
mov
push
test
out
stos
mov
push
adc
cmps
sub
cmps
sub
push
pop
clc
lds
int3
or
and
sub
mov
cmp
mov
xchg
sbb
inc
repnz
sbb
test
xchg
inc
clc
cmc
jo
nop
popf
xchg
mov
gs
or
pop
jns
cmp
sbb
call
jae
jle
add
test
sbb
or
jmp
in
mov
(bad)
(bad)
in
dec
setns
fsub
jmp
sahf
cmp
xchg
mov
xchg
jle
imul
ins
(bad)
outs
outs
popa
jo
mov
and
mov
ins
mov
jo
xchg
adc
jns
jb
cmp
daa
shr
xchg
jecxz
ror
jbe
jl
(bad)
cmc
add
dec
int
dec
clc
jnp
xchg
repz
sub
std
dec
pop
pushf
mov
xor
xchg
clc
imul
test
xor
push
pop
inc
push
clc
xchg
mov
xchg
aad
addr16
sbb
inc
lahf
aam
and
fsub
mov
pop
cdq
(bad)
xor
ficomp
dec
lds
jp
pop
cmp
xor
fisttp
cmps
mov
stc
push
scas
aad
xor
or
mov
cmp
mov
aas
inc
int3
sar
pop
mov
iret
in
push
xchg
dec
mov
mov
ds
loopne
mov
push
adc
adc
call
push
mov
pushf
movs
adc
icebp
add
pop
out
out
jbe
dec
inc
lea
clc
(bad)
cmp
dec
out
inc
xchg
or
inc
push
jmp
jmp
lock
sbb
adc
pushf
mov
sbb
xlat
inc
push
daa
in
dec
js
shl
jmp
jne
pop
pop
add
repnz
and
xor
(bad)
out
dec
mov
cmp
lock
(bad)
push
cmp
or
mov
xchg
adc
leave
imul
xor
push
adc
in
(bad)
mov
jb
aad
mov
xchg
out
test
mov
push
adc
push
aad
in
pop
xchg
push
in
and
sub
and
pop
push
push
pusha
mov
(bad)
sbb
push
imul
xchg
dec
inc
or
jbe
imul
cld
dec
dec
cli
test
jae
xor
aad
jecxz
popw
or
(bad)
and
dec
jp
cdq
or
(bad)
out
jns
(bad)
int
pop
test
fsub
inc
sbb
cdq
inc
pusha
fldenv
ds
xchg
add
jbe
loope
(bad)
cli
cld
sub
jnp
in
sbb
mov
jmp
repz
repz
mov
or
adc
jo
push
mov
push
mov
jae
adc
xchg
dec
mov
das
jb
into
hlt
cmps
cmp
or
cdq
test
xchg
mov
clc
push
jns
rol
je
xor
mov
rcr
adc
stc
adc
mov
and
adc
push
mov
inc
nop
inc
mov
ficomp
cmps
xchg
scas
xor
add
pop
popa
fidivr
lahf
inc
sbb
sbb
jmp
xor
inc
outs
xchg
cli
out
test
pop
sub
inc
lea
cmps
jp
scas
jmp
sar
ja
jecxz
gs
fcmovnb
mov
cmp
out
scas
sahf
cmp
sub
jl
mov
xchg
pop
inc
and
add
ds
aas
add
aam
mov
xor
fwait
push
or
repz
add
and
sub
xor
xchg
cmp
and
or
pop
fldenv
test
add
mov
adc
int3
cmp
std
jecxz
pop
sbb
call
push
mov
xor
cmp
ss
fild
scas
xchg
adc
ins
mov
xlat
enter
mov
xchg
mov
sahf
xlat
retf
push
scas
sbb
adc
pop
(bad)
fadd
retf
sbb
nop
pop
loope
fimul
jmp
xchg
and
jo
in
sub
jg
xchg
mov
jmp
mov
inc
ins
xor
sar
in
daa
loope
pop
sahf
gs
outs
xchg
pop
cmp
fld
rcl
jle
pop
(bad)
push
hlt
ret
adc
jge
inc
add
cmp
mov
packuswb
dec
(bad)
sbb
mov
dec
pop
or
jmp
mov
sar
cmc
sub
sbb
mov
mov
sub
jecxz
and
(bad)
js
(bad)
loop
and
pusha
arpl
retf
out
add
xchg
inc
cdq
sbb
out
test
jl
xchg
mov
cmps
lds
adc
pop
jb
pop
mov
sbb
int
pusha
outs
cwde
popf
mov
ja
or
pop
scas
jnp
cdq
pusha
jmp
data16
push
and
fidiv
sub
in
add
mov
jmp
retf
fmul
inc
data16
lods
fucom
cmp
test
and
or
push
imul
mov
push
das
cld
imul
dec
xchg
addr16
mov
hlt
add
mov
push
push
xor
xchg
cmp
dec
and
std
jbe
dec
ret
push
cmps
in
jmp
inc
pop
sub
cli
in
popf
mov
mov
fsub
pop
inc
pop
enter
mov
push
xor
inc
inc
mov
pop
mov
or
sub
mov
push
push
scas
das
lahf
mov
out
mov
jp
in
iret
in
adc
jae
push
inc
cmp
pop
arpl
pop
lock
je
std
push
adc
ss
sbb
(bad)
dec
(bad)
cli
inc
pop
repz
in
fidivr
movs
(bad)
mov
pop
test
ret
push
cmp
hlt
out
and
pop
sub
repnz
aad
addr16
loope
(bad)
mov
sub
dec
lods
cmp
pop
xor
cmc
test
dec
add
add
pop
in
push
sub
adc
or
jo
add
xor
movs
aaa
int3
stc
test
bound
mov
out
test
or
and
aaa
clc
(bad)
jnp
push
call
std
jmp
movs
enter
icebp
add
retf
sbb
fcmove
dec
sbb
nop
and
jecxz
sar
clc
lock
test
or
cli
aad
rcl
push
and
xor
push
fistp
add
aaa
arpl
jne
push
mov
mov
popa
sbb
call
pop
test
cld
ins
scas
out
cs
ds
dec
call
pop
mov
cmp
movs
pusha
sub
push
(bad)
ins
xor
imul
and
dec
jp
xlat
mov
xchg
arpl
cmp
ret
lahf
cmp
enter
test
test
jl
cdq
mov
(bad)
rol
jge
xchg
adc
dec
out
xchg
clc
add
cmp
fcmovnu
sub
cmps
xchg
test
mov
pop
lods
inc
xlat
data16
in
retf
adc
cmp
sub
js
mov
inc
cmp
(bad)
mov
lods
sbb
jmp
and
(bad)
jo
js
scas
sub
lds
popf
loop
pop
int
stc
in
dec
outs
inc
mov
mov
dec
xor
imul
cmp
dec
push
inc
loop
(bad)
jg
ja
adc
cmp
sub
inc
mov
cmps
fmul
mov
pop
mov
ror
movs
(bad)
push
sbb
mov
inc
es
sub
pop
fstp
xchg
ds
mov
jne
dec
out
jnp
into
in
add
push
jb
mov
sbb
rcl
mov
imul
jge
rcl
sbb
cmps
aad
mov
test
mov
add
aad
ffree
idiv
mov
repnz
daa
daa
outs
mov
loopne
gs
pop
add
pop
xchg
adc
repz
mov
cmp
int3
mov
bound
fnstenv
mov
xor
mov
ins
xchg
xchg
mov
mov
sti
sub
ror
inc
enter
cmps
jmp
cs
stc
xchg
jmp
(bad)
stos
push
fiadd
hlt
jmp
fcmovu
adc
pop
shr
scas
mov
or
sbb
jmp
push
mov
es
or
lods
out
pop
push
in
lds
sbb
shl
stos
or
push
sub
pop
aas
mov
dec
push
pop
outs
mov
movs
outs
cmovbe
lock
loop
dec
icebp
mov
and
ret
jno
enter
loopne
add
iret
and
xlat
inc
scas
push
clc
dec
and
aam
pop
add
cmc
add
xchg
js
mov
sti
inc
cmp
sar
ss
cmp
xchg
dec
(bad)
retf
ins
mov
inc
mov
adc
push
enter
movs
sub
repz
sbb
xchg
pop
bound
add
jae
or
or
hlt
mov
movs
and
mov
dec
cli
xlat
adc
sbb
sti
repz
fdiv
mov
dec
enter
adc
rcr
fs
(bad)
(bad)
push
push
cwde
inc
push
(bad)
mov
or
int
hlt
jnp
dec
test
bndstx
and
inc
sti
xchg
lahf
retf
sub
inc
aam
stos
(bad)
sbb
add
pushf
add
dec
xchg
inc
je
cs
test
xchg
das
push
pop
push
out
stos
add
(bad)
(bad)
or
mov
mov
add
sbb
mov
call
xor
addr16
pop
clc
jmp
lods
push
(bad)
fist
test
cmp
dec
pop
mov
mov
adc
or
adc
loope
es
inc
dec
retf
lds
into
mov
add
mov
ins
cmp
mul
mov
scas
mov
stos
(bad)
inc
mov
mov
sub
and
mov
sbb
mov
sub
sti
sbb
and
ins
push
mov
loop
xor
sbb
leave
xor
ret
sbb
push
inc
into
stc
mul
mov
dec
int3
(bad)
clc
rep
enter
pop
fcomp
adc
outs
(bad)
push
lods
icebp
std
mov
push
adc
dec
imul
cmps
sar
je
push
and
xchg
pop
mov
xor
adc
dec
test
pop
xor
aaa
mov
fisttp
sbb
jb
sbb
inc
aam
stc
dec
sbb
out
mov
je
lds
xchg
mov
jnp
inc
pop
(bad)
jle
aad
mov
mov
xchg
push
aaa
pop
repnz
ins
dec
fs
scas
add
mov
mov
cdq
add
loop
fidivr
movs
and
jg
popa
mov
neg
adc
je
mov
pop
loope
cmp
mov
cld
jecxz
mov
hlt
mov
out
ficom
into
or
inc
mov
jnp
cmp
lods
adc
std
call
push
cld
repz
fidiv
push
mov
pop
mov
xor
ins
scas
enter
popa
sti
pop
loope
adc
inc
(bad)
cmp
movs
div
xchg
xor
mov
mov
dec
or
loope
in
jl
lods
fnstenv
popa
inc
cmp
sbb
mov
(bad)
sub
enter
inc
les
repz
push
hlt
mov
mov
mov
pusha
jmp
scas
enter
mov
(bad)
sub
nop
xor
lea
sbb
push
jae
cmp
dec
loop
push
pop
addr16
mov
clc
outs
xor
(bad)
ds
inc
shr
icebp
adc
xor
popf
mov
icebp
lea
mov
add
pop
push
pop
xor
std
js
mov
ds
(bad)
pop
jmp
jmp
in
jnp
pop
push
pop
mov
add
dec
xor
lds
pop
cmps
jge
scas
mov
imul
(bad)
ror
mov
mov
and
out
cmp
(bad)
std
jl
mov
cmc
je
sar
gs
daa
icebp
xor
icebp
xchg
xchg
mov
sbb
jl
in
ja
and
into
mov
aas
test
push
pop
sub
loope
inc
add
aaa
and
xchg
mov
lea
jbe
add
movs
mov
xor
pop
mov
mov
push
rol
in
or
jp
dec
mov
and
mov
pop
adc
jle
test
in
sub
test
sbb
loope
jns
in
xor
movs
enter
fstp
xor
and
aad
pop
dec
add
test
fsub
stos
add
inc
pop
adc
inc
fld
fist
sbb
mov
dec
rcr
in
stos
repz
cmp
and
add
pop
bound
test
pop
push
or
jmp
nop
adc
call
stos
(bad)
cld
test
imul
inc
jne
mov
ss
mov
or
lahf
mov
pop
dec
adc
sub
adc
jge
xchg
push
movs
jge
sbb
push
icebp
in
ins
push
call
aam
daa
xchg
into
jge
fnstenv
xor
stos
push
cmps
sbb
inc
pusha
(bad)
xchg
xchg
dec
xor
neg
cld
clc
fstp
jo
pop
popa
pop
push
or
push
add
push
push
hlt
std
and
and
mov
xchg
ins
push
push
push
and
cmc
cli
adc
sub
pop
rol
sub
ins
(bad)
out
add
test
stos
fcomp
mov
fwait
popa
imul
fsubr
pop
add
add
xchg
aad
sub
pop
sub
mov
adc
std
dec
cmps
sbb
outs
add
iret
daa
or
es
or
cmp
daa
cmp
push
lahf
mov
cmps
jbe
sub
enter
fcomp
xchg
push
push
fld
xor
ds
movs
pushf
mov
sbb
add
push
mov
ret
pop
dec
clc
lods
xchg
xchg
pop
jne
dec
cmp
div
and
mov
xor
in
cmc
out
mov
pop
enter
stc
in
and
cdq
ret
iret
sbb
les
scas
xchg
inc
mov
lods
and
pop
xchg
cdq
stos
add
xchg
imul
jnp
add
ins
fild
loopne
stos
hlt
mov
mov
add
dec
adc
mov
dec
cmps
bound
push
nop
icebp
inc
mov
cmp
jne
lds
ins
je
jne
dec
fidiv
add
adc
inc
icebp
test
push
movs
jmp
push
cs
dec
mov
pushf
js
sub
ds
mov
sbb
call
rcr
lock
adc
xlat
dec
add
mov
push
sub
in
outs
lock
nop
fbld
fidivr
mov
mov
mov
jbe
es
add
inc
xchg
xor
xor
jns
movs
fbstp
int
sbb
ins
das
jmp
jecxz
rcl
(bad)
and
mov
sub
add
hlt
mov
xlat
cmp
call
fs
leave
xor
cmp
inc
sahf
in
pop
loopne
stc
mov
(bad)
std
sti
retf
sub
enter
and
mov
inc
mov
in
loop
pop
adc
std
fnstenv
xchg
sub
sbb
repz
xchg
daa
or
inc
call
dec
mov
sbb
jge
and
stos
xchg
fimul
push
dec
(bad)
xor
adc
into
mov
dec
lock
adc
rcl
arpl
pop
movs
loopne
push
mov
jmp
sub
mov
and
shl
push
mov
lea
popf
std
push
xor
sbb
das
xor
push
rcl
jne
int
psrlq
xchg
inc
xchg
in
adc
sub
in
sbb
shl
imul
push
addr16
inc
dec
shr
push
dec
test
(bad)
inc
imul
into
and
pop
cld
dec
cmps
bound
(bad)
imul
jp
into
xchg
call
sbb
rol
mov
push
mov
inc
jecxz
dec
xchg
add
push
inc
gs
jb
add
js
cmp
or
pop
pop
inc
inc
xchg
outs
outs
add
and
fnstcw
or
mov
inc
sub
sbb
jno
fiadd
gs
scas
xchg
cld
fmul
pop
inc
ins
mov
bound
mov
ins
dec
scas
call
jo
cmp
mov
and
fst
or
(bad)
mov
ss
or
pusha
shl
in
outs
add
and
rcl
out
popf
movs
inc
popf
scas
push
jmp
inc
pop
adc
mov
retf
mov
jp
jnp
pop
jle
push
cwde
mov
ins
cmp
loope
scas
fdivr
pop
call
xchg
lock
sahf
jp
ja
aaa
add
fild
xchg
lock
fimul
inc
gs
sub
outs
jmp
imul
(bad)
les
or
out
mov
movs
sbb
stos
daa
adc
dec
ins
inc
fsub
call
repz
test
dec
dec
mov
and
adc
xchg
loope
stos
std
imul
cdq
imul
jle
fbld
dec
sub
jo
movs
(bad)
jb
fadd
cmp
sub
sbb
cmps
or
mov
int
pop
in
ins
cwde
mov
fcom
pop
outs
loopne
add
lea
sar
inc
into
xchg
mov
es
pop
xchg
add
daa
(bad)
outs
sbb
cwde
jecxz
xor
gs
xor
ds
or
mov
adc
aaa
pop
inc
ins
xchg
cmp
sbb
or
test
ins
pop
add
sbb
data16
lods
arpl
jmp
xchg
push
push
xchg
sbb
push
xchg
out
push
cmp
xchg
nop
mov
inc
icebp
inc
xor
iret
es
stos
adc
test
mov
jl
outs
or
retf
xchg
ret
mov
movs
pop
jo
mov
cmp
mov
(bad)
loop
mov
cmp
(bad)
stos
adc
cmc
sar
and
test
sahf
mov
cs
mov
xor
lods
test
loopne
stos
ds
sbb
sub
mov
xchg
push
(bad)
(bad)
cmps
mov
out
int
xchg
jb
fwait
jl
sbb
into
std
fadd
in
push
imul
add
mov
jmp
sti
pop
push
sub
inc
push
sub
(bad)
push
adc
mov
sbb
shr
jle
(bad)
retf
sahf
cwde
ret
cmp
int
ret
push
sbb
add
dec
inc
pop
arpl
call
mov
sub
mov
enter
loope
(bad)
adc
sti
pop
cmp
xor
lea
xlat
rcr
xor
xchg
repnz
sbb
push
or
cdq
sub
stos
mov
in
mov
repnz
pop
mov
lock
mov
sub
jbe
jl
bound
sbb
inc
ja
jno
mov
cmp
jge
mov
and
ret
cmc
sahf
(bad)
pop
sub
cld
cmp
retf
jl
daa
xchg
pop
push
and
and
inc
pusha
sbb
push
sahf
test
jno
pop
lea
lods
add
jo
imul
jge
mul
mov
jmp
or
dec
loop
cmps
xlat
pop
mov
push
sub
xlat
jge
jno
dec
fsub
xlat
and
push
ds
out
mov
push
stos
enter
mov
jge
stos
mov
jecxz
fwait
cli
inc
jns
les
jg
mov
mov
sub
aas
and
cmp
ja
jns
jmp
push
cli
inc
imul
mov
sbb
rol
les
jecxz
call
adc
xchg
iret
and
push
push
or
aam
adc
jl
adc
mov
add
add
into
pop
or
ret
jecxz
sub
aam
bound
cmp
jne
xor
dec
mov
test
frstor
pop
pop
adc
retf
mov
adc
(bad)
ins
and
cmp
xlat
or
mov
cmc
push
addr16
dec
or
test
mov
or
es
jmp
mov
mov
in
dec
push
cmp
push
dec
(bad)
movs
ins
mov
cmp
aam
mov
pop
fsubr
sbb
and
sub
xor
pop
adc
nop
mov
inc
mov
les
jge
fistp
push
or
xchg
cmc
out
ja
hlt
fisub
aam
mov
es
pop
adc
mov
ins
ret
mov
push
xchg
sub
neg
or
mov
fild
jecxz
out
mov
inc
adc
rcl
bound
ficom
fcom
add
sub
cld
retf
imul
mov
or
(bad)
sbb
xor
cmp
push
retf
adc
pop
sbb
movs
lahf
jmp
adc
imul
les
ins
pop
pop
xor
scas
(bad)
mov
sahf
sar
mov
mov
dec
retf
push
xor
adc
sub
in
pop
sbb
aam
std
xlat
lods
(bad)
dec
icebp
rcl
cmps
pop
fs
addr16
pop
jne
test
mov
xor
mov
test
ret
cdq
pop
sbb
or
gs
cmp
mov
mov
and
inc
iret
dec
ret
bound
pop
addr16
sbb
cs
fbld
xchg
dec
lock
icebp
or
sub
jle
mov
push
xchg
push
pop
cmp
add
in
jb
jmp
imul
popf
idiv
mov
popa
ss
das
jmp
jo
inc
rcl
in
inc
ins
jg
fsubr
cmc
mov
inc
cmp
jge
or
mov
cmp
pop
aad
cmc
mov
cmp
es
(bad)
nop
ret
pop
and
cmps
(bad)
mov
hlt
jae
push
push
and
push
inc
cmp
xchg
fldenv
sti
inc
cmp
xor
xor
mov
int
pavgw
je
xchg
or
vpcomd
xlat
or
test
mov
cwde
xchg
aaa
push
adc
popa
movs
xchg
sub
addr16
int
jge
addr16
retf
shl
or
xor
pop
push
jmp
rcl
push
js
jle
enter
mov
loop
lods
outs
mov
sub
(bad)
dec
dec
inc
or
(bad)
xlat
repnz
jle
mov
mov
sbb
lea
xchg
fiadd
push
jnp
sbb
and
(bad)
xor
pop
sti
mov
fdivr
push
inc
jg
sub
sub
adc
mov
sbb
jae
push
push
sub
mov
push
popf
cmp
cwde
and
mov
cwde
adc
(bad)
mov
hlt
loope
or
xchg
push
jns
or
retf
push
pop
fbstp
xlat
mov
mov
pop
add
sar
stos
sbb
call
bswap
inc
in
ins
in
pop
lahf
pop
push
jmp
in
sahf
jo
movs
push
mov
repnz
ss
pop
pop
addr16
inc
and
(bad)
jns
sar
xor
xchg
int
dec
pop
adc
and
mov
arpl
fwait
sbb
mov
scas
push
sub
fs
iret
pushf
push
cwde
inc
jge
and
cli
mov
xchg
daa
(bad)
and
(bad)
sbb
mov
xor
sub
push
pop
jno
enter
xor
fs
rol
lods
and
xchg
sub
outs
in
jns
push
cmc
add
stos
mov
mov
pusha
outs
jae
and
stos
in
js
stos
sbb
sbb
xlat
enter
popa
fdiv
ret
xor
dec
test
movs
adc
mov
pusha
add
adc
cmps
sahf
arpl
ret
pushf
loop
and
test
cmp
push
std
sbb
imul
retf
cmps
xlat
test
lods
sbb
cmp
inc
fisub
and
call
xchg
push
jo
jnp
jae
adc
sbb
push
out
imul
fild
in
das
test
and
xor
clc
mov
repnz
xchg
sbb
fstp
popf
mov
(bad)
fldenv
add
(bad)
mov
adc
xchg
xchg
inc
fstp
add
xor
aaa
push
test
inc
push
mov
fild
ficomp
hlt
push
cmp
outs
int3
shr
mov
rep
(bad)
xor
push
sbb
movs
mov
outs
pop
xchg
outs
int3
mov
add
sar
vmovhps
pop
scas
shl
daa
call
jge
mov
sar
rcl
fst
out
sbb
sti
cmp
push
jns
lahf
ret
out
jae
jg
mov
mov
shl
not
jns
imul
ficomp
out
repz
push
mov
into
jl
movs
add
jecxz
std
cwde
fwait
stc
pop
jp
out
cmp
mov
mov
xchg
jp
movs
xor
dec
adc
into
mov
push
(bad)
(bad)
pand
add
cdq
jg
stos
cdq
(bad)
sub
push
or
push
pop
and
iret
nop
sub
pop
shr
rol
cli
mov
push
fisub
test
and
arpl
mov
mov
dec
add
sbb
int3
jmp
sbb
xchg
fdivr
sbb
mov
dec
sbb
aaa
push
fisub
push
retf
adc
pop
xor
ins
ins
jge
sub
es
sbb
sub
push
pop
clc
or
sbb
jno
push
data16
pop
mov
jo
ins
popf
dec
mov
loopne
call
push
pop
bound
retf
jne
pusha
cmp
ins
mov
push
push
push
inc
(bad)
fs
pop
pop
(bad)
mov
arpl
adc
out
(bad)
(bad)
rcl
sahf
mov
test
ja
mov
and
inc
mov
inc
push
imul
add
add
jo
shr
mov
push
dec
or
push
pause
sbb
pop
repnz
wbinvd
movs
jne
pop
xor
mov
ins
xchg
or
sar
mov
xchg
jno
call
iret
pop
xchg
push
jge
jb
xchg
sar
fistp
inc
pop
adc
sbb
lea
test
rcl
ss
mov
add
push
sub
sub
sbb
xchg
scas
mov
enter
mov
mov
ins
shl
push
dec
adc
and
inc
mov
jae
les
sub
gs
xor
adc
out
dec
enter
push
jmp
aaa
out
xor
mov
pop
das
out
adc
cmp
aas
test
popf
sub
mov
mov
xchg
xchg
push
and
mov
jp
sar
sub
mov
jae
enter
loop
add
cmp
aas
inc
arpl
mov
data16
icebp
cmp
push
mov
mov
jbe
adc
mov
sub
repnz
sbb
sbb
(bad)
dec
push
jae
inc
inc
stc
push
movs
shl
mov
dec
shr
mov
mov
popa
mov
mov
in
lods
xor
mov
call
test
cmps
adc
rcl
in
xlat
xor
cmps
pop
push
es
sahf
mov
cli
imul
add
inc
mov
adc
imul
xchg
dec
mov
(bad)
scas
dec
out
inc
jae
jb
test
movs
fbld
out
aad
jmp
mov
lds
jp
xor
sub
add
pop
mov
jnp
ss
data16
inc
push
int
mov
lods
stos
movs
(bad)
pushf
sbb
outs
jg
push
pop
adc
inc
push
jmp
not
les
xchg
stos
jne
xor
adc
or
inc
push
jmp
retf
loopne
repz
add
sar
movs
outs
(bad)
mov
push
ret
movs
dec
mov
jne
add
adc
sbb
mov
inc
ins
push
mov
retf
mov
ins
xchg
test
or
lods
pop
and
pop
lock
mov
push
jmp
and
hlt
or
sub
dec
xor
imul
jmp
mov
push
(bad)
pop
les
(bad)
cmps
(bad)
pop
push
mov
out
ss
add
test
pop
or
mov
call
sub
cld
or
fisttp
aaa
xor
rol
sub
inc
sub
mov
popf
ds
mov
out
mov
call
push
push
pop
cli
or
xchg
and
rol
dec
nop
mov
aas
pusha
cwde
push
adc
je
xchg
jp
push
pop
mov
mov
mov
arpl
outs
std
movs
out
movs
dec
out
xor
dec
adc
inc
fwait
cwde
cmp
mov
cdq
fdiv
je
dec
xchg
je
fadd
fisttp
cwde
retf
xchg
jmp
rcl
sub
daa
sbb
sbb
and
push
dec
test
sub
pushf
das
cmps
inc
xchg
movs
dec
cwde
test
leave
mov
push
(bad)
clc
test
out
dec
cmp
sti
loopne
and
add
sti
push
sub
sbb
cmp
mov
ja
das
cli
mov
jae
addr16
sub
retf
cmp
sti
movs
mov
xor
or
gs
inc
call
adc
sub
jnp
xchg
popa
cmps
sub
jecxz
add
(bad)
adc
mov
pop
(bad)
mov
adc
inc
sub
sbb
mov
mov
sbb
xchg
xlat
xor
sbb
mov
daa
dec
ror
push
ds
xor
in
fild
stc
call
mov
xchg
mov
jp
pmaxub
inc
mov
rol
je
mov
ins
lock
loopne
mov
daa
mov
cld
pushf
popa
bound
pop
push
jmp
mov
xchg
rol
(bad)
mov
outs
dec
mov
xlat
js
ret
retf
dec
imul
dec
aam
sbb
or
cmp
retf
stos
cld
mov
cmp
arpl
jecxz
and
jp
out
xchg
sub
mov
xchg
and
fs
dec
jl
sub
lods
jmp
cmps
out
push
leave
out
sub
test
rcl
lds
push
cs
push
pop
call
jne
adc
mov
cdq
xor
std
cmp
sub
add
pop
icebp
cli
call
scas
and
icebp
sbb
xchg
addr16
dec
jmp
in
and
imul
cmc
add
dec
push
cdq
ret
push
xchg
xor
cmps
gs
out
add
data16
mov
js
or
cmp
ds
adc
xchg
or
push
sub
(bad)
outs
leave
nop
xchg
rcr
out
lds
cmp
mov
mov
outs
loop
dec
cwde
cld
int3
adc
and
dec
(bad)
or
mov
and
add
mov
dec
aas
cmps
test
push
sub
push
lea
and
sbb
aaa
add
xchg
mov
jmp
pop
dec
stos
jmp
mov
cmps
outs
inc
lahf
movs
cs
aaa
jae
fidivr
mov
test
daa
out
cmp
sub
ins
jne
ins
pop
dec
jnp
cdq
pop
les
jne
sub
es
sub
and
(bad)
out
jmp
add
dec
rcl
sub
dec
sub
rcr
mov
fdivr
ss
les
jp
iret
mov
inc
fs
add
mov
and
hlt
cld
pusha
inc
xor
adc
add
push
or
mov
xor
imul
push
xchg
int
inc
push
cmp
add
jbe
jmp
hlt
cwde
mov
jg
cmp
jge
inc
dec
pop
cmp
ret
repz
loopne
stc
or
inc
lods
add
pop
jge
sbb
int3
adc
lds
jl
add
push
jg
mov
fst
jmp
test
shl
neg
mov
shl
lds
ss
add
test
mov
mov
pushf
dec
mov
stos
push
(bad)
mov
ror
adc
xchg
repz
sbb
jns
sub
pop
cmp
fs
pop
fsubr
scas
(bad)
inc
mov
sub
out
loop
add
xor
sbb
sub
outs
sub
daa
addr16
test
push
pop
and
pop
lods
and
push
dec
iret
add
jb
fbstp
push
repnz
adc
xlat
mov
dec
mov
xor
sub
and
cld
and
adc
inc
adc
dec
cmp
add
mov
lods
fist
das
push
cld
neg
enter
adc
(bad)
dec
icebp
sbb
add
stos
jmp
push
mov
fwait
or
pop
out
dec
loopne
add
das
cmp
movs
push
sbb
and
cmp
push
adc
mov
(bad)
(bad)
lods
cmp
scas
stc
pushf
popa
mov
inc
jmp
jmp
push
xor
adc
cmp
cmp
shr
mov
mov
mov
push
xor
aas
les
mov
mov
or
mov
arpl
movs
pop
sub
jge
(bad)
fst
pop
jmp
push
arpl
dec
sar
add
int3
outs
cmp
pop
test
mov
ret
aaa
inc
mov
and
inc
rol
cs
xchg
sub
imul
ficomp
sbb
dec
xlat
out
iret
cmps
add
ins
into
adc
cmps
dec
push
push
in
mov
xsha256
cmps
pop
int3
scas
mov
popf
stos
mov
and
nop
ret
cli
add
inc
inc
or
cld
or
cmp
ds
mov
mov
mov
pop
leave
inc
fadd
lods
js
xchg
sbb
shr
mov
inc
leave
fisttp
ins
push
arpl
push
adc
cld
popf
fcmovu
int3
jle
call
xor
gs
sbb
lods
frstor
jge
xor
and
int
adc
cmp
lahf
xchg
shl
mov
cmp
adc
and
test
test
pushf
loop
sahf
fcomp
cmp
icebp
jae
pop
push
push
out
mov
punpcklwd
cmp
leave
push
out
dec
inc
jle
int3
ficom
sahf
test
rcl
outs
aad
and
xchg
jbe
pop
(bad)
push
cmp
outs
jae
mov
idiv
into
in
cmps
dec
dec
mov
ja
sub
jne
mov
out
sub
daa
xchg
fprem1
mov
mov
xchg
daa
sub
sar
es
idiv
pop
inc
jle
jbe
dec
dec
inc
or
pop
adc
push
cmp
aam
xor
test
mov
retf
sub
pushf
int
fwait
adc
jne
push
jae
je
mov
fchs
fst
xchg
sahf
fld
fisttp
dec
mov
push
popa
test
jbe
in
mov
scas
cmp
pusha
xor
push
arpl
(bad)
aas
push
inc
mov
movs
inc
jl
call
or
mov
sbb
push
push
aas
add
leave
lock
in
xchg
dec
sbb
jae
pop
test
fmul
fmul
mov
shl
add
lods
pop
push
test
cmp
push
loope
pop
and
movs
xchg
js
popa
aad
loope
dec
fs
lods
in
dec
and
xor
mov
sbb
test
std
mov
mov
lods
sbb
in
mov
pop
cs
ficomp
(bad)
popf
std
inc
pop
fld
mov
inc
and
push
push
fwait
mov
fcomp
mov
jle
rol
pop
neg
pop
pop
jnp
dec
pushf
dec
dec
jbe
xlat
and
ins
bound
inc
pop
ret
pop
movs
bound
shl
and
pop
add
mov
aaa
stos
inc
gs
test
scas
dec
jmp
xor
ja
movzx
push
lea
(bad)
mov
xchg
mov
and
fcomi
or
mov
sar
cdq
xor
dec
loopne
pop
loop
jmp
dec
and
jo
data16
add
mov
(bad)
push
push
fisubr
(bad)
mov
inc
dec
mov
add
mov
lock
lods
dec
(bad)
jns
push
aad
ret
mov
sub
outs
or
xchg
or
rcl
out
cmp
pop
jo
aad
adc
add
jo
sti
jae
(bad)
jle
mov
iret
jae
sbb
jnp
add
or
aas
scas
and
jecxz
push
jb
pop
or
mov
cmp
jle
int
loopne
pop
vmovupd
add
sbb
dec
(bad)
ja
icebp
adc
jmp
cwde
sub
jns
lea
and
loop
mov
ss
xor
fisttp
shl
mov
jb
jb
cmp
ja
push
cmps
jecxz
cmps
not
iret
xchg
and
xchg
mov
push
test
adc
xor
mov
aas
adc
xchg
or
call
or
in
push
and
and
fsubr
push
fldenv
mov
jg
push
(bad)
cli
xchg
mov
cmp
pop
dec
loopne
mov
pop
jecxz
(bad)
and
pop
fnsave
call
aaa
sahf
scas
iret
adc
aad
mov
mov
pop
pushf
mov
or
iret
addr16
bound
push
les
dec
sbb
push
ficomp
mov
jae
and
add
pop
push
mov
aad
mov
ins
adc
sub
mov
out
mov
jle
aad
fadd
push
adc
or
xor
mov
cmp
push
in
inc
and
and
jle
jmp
retf
mov
add
rol
in
adc
mov
inc
call
dec
adc
sar
pop
out
mov
lock
xor
sbb
sbb
mov
mov
add
dec
or
adc
pusha
(bad)
cmp
xor
mul
sti
shr
push
sbb
sub
jne
xor
div
pop
mov
mov
sbb
sahf
push
enter
lock
mov
jmp
xchg
cmp
aaa
shl
repnz
mov
test
and
rcl
push
push
pushf
xchg
pop
mov
outs
pop
xchg
and
jo
aaa
pop
xchg
imul
mov
mov
xchg
ret
adc
stos
aaa
sbb
mov
mov
sbb
xchg
jp
mov
leave
xlat
loop
mov
mov
lods
or
bound
aam
xchg
(bad)
imul
cmp
mov
sub
cpuid
outs
cdq
push
in
dec
test
cli
outs
in
loop
ror
jno
push
retf
or
jne
scas
jnp
ret
inc
xchg
ret
mov
(bad)
jmp
imul
retf
xor
iret
mov
cld
jae
pop
sub
mov
and
jbe
sub
ret
and
cmp
test
out
pop
es
xchg
std
mov
pop
cwde
cmp
pop
leave
cld
movlps
(bad)
ins
inc
cmp
imul
test
cmp
dec
lock
call
dec
ret
gs
dec
or
jo
ffree
pop
iret
cmc
je
pop
fisub
xor
mov
adc
or
mov
jecxz
pop
push
dec
or
(bad)
in
cld
ror
test
push
xchg
fdiv
jae
mov
pop
jge
jnp
xchg
shr
das
add
sbb
jne
shld
lds
retf
jo
fistp
sub
scas
xor
repnz
and
mov
xor
xchg
je
pop
fld
ins
push
retf
dec
sbb
jne
into
jecxz
sub
sub
dec
cmps
cmp
rol
call
cli
sbb
jne
pop
fnstsw
mov
jle
imul
sbb
es
test
lahf
div
repz
xchg
mov
loopne
in
fisub
cmp
dec
xor
sbb
cwde
aas
dec
int
jge
xor
sti
gs
clc
into
sbb
lds
call
add
xchg
jecxz
and
loope
inc
or
push
pop
pusha
and
(bad)
jmp
cs
adc
add
inc
(bad)
sbb
leave
scas
in
or
(bad)
shl
sbb
add
leave
fmul
ss
jmp
fs
mov
or
aas
jb
lock
push
mov
and
ret
outs
sbb
jmp
ins
lea
call
out
or
adc
mov
loopne
add
enter
cdq
test
movs
stos
cmc
inc
mov
xor
inc
int3
adc
jmp
jnp
pop
es
out
sub
(bad)
lock
inc
push
adc
mov
pop
pop
ss
jo
bound
sahf
mov
cli
loop
add
out
(bad)
jle
das
or
pop
outs
mov
outs
inc
mov
jmp
arpl
ins
push
test
mov
dec
ficomp
mov
pushf
sbb
lock
shl
mov
push
mov
int3
push
inc
adc
repz
mov
jmp
mov
pop
ret
add
movs
push
iret
mov
push
fimul
bswap
sbb
mov
xor
mov
mov
inc
jns
fnstcw
je
cwde
cmp
mov
sub
dec
sub
and
imul
cld
inc
mov
scas
inc
mov
add
imul
sub
jne
xchg
in
fldz
cmp
nop
inc
pusha
js
iret
(bad)
sub
addr16
mov
jg
adc
(bad)
pop
out
popa
(bad)
in
mov
mov
push
retf
mov
xchg
adc
pop
push
or
(bad)
pop
mov
mov
pop
mov
mov
xor
ror
mov
cmp
stos
fst
mov
cmp
xchg
mov
ret
or
or
ins
ror
call
or
pop
mov
inc
test
inc
mov
pop
mov
sbb
imul
inc
cmp
rol
(bad)
call
je
jb
jp
outs
push
addr16
rcr
mov
sti
push
push
mov
inc
ins
push
enter
cmps
outs
(bad)
outs
jb
or
mov
arpl
lock
div
add
cwde
sub
jmp
cli
xor
shl
iret
cmc
inc
and
inc
test
sub
dec
dec
inc
add
jmp
cmc
pop
xchg
dec
shr
leave
cmp
ins
test
push
nop
hlt
mov
mov
mov
sub
popa
bound
stos
or
aaa
fdiv
jns
push
imul
(bad)
test
push
jge
loope
sub
stc
call
ret
push
stos
in
xchg
add
inc
lods
dec
ret
ins
pop
add
inc
sahf
xor
mov
add
test
pop
sbb
popa
push
jecxz
test
rol
repnz
mov
imul
push
push
psrad
scas
xor
dec
push
cmp
or
jno
sub
aaa
dec
scas
imul
cdq
cli
xchg
and
leave
(bad)
jo
loope
mov
inc
jo
icebp
pop
data16
fcomp
int
lahf
push
sub
inc
retf
test
add
mov
stos
loopne
xchg
xor
clc
stc
std
test
in
mov
jnp
jo
movs
mov
aaa
test
(bad)
push
ja
cmp
cwde
xchg
add
cmp
sbb
and
shl
inc
dec
(bad)
mov
mov
mov
mov
dec
pop
jecxz
mov
sti
(bad)
lds
bound
mov
je
sub
pop
scas
ss
pop
mov
xchg
outs
add
add
int
je
adc
test
sub
push
loop
ja
lahf
sbb
lock
sbb
enter
sub
jne
and
dec
push
push
push
daa
es
stos
and
push
js
and
lds
into
(bad)
addr16
scas
mov
inc
inc
loopne
out
cmp
mov
mov
or
aas
repnz
pop
pop
clc
or
in
in
fiadd
jmp
xchg
out
imul
sbb
ins
lods
imul
sub
jmp
(bad)
xlat
(bad)
shr
xchg
pop
xchg
dec
jne
adc
loop
(bad)
sub
inc
ins
inc
xor
jno
and
hlt
ret
jno
cmp
pop
adc
in
lahf
data16
xor
add
call
push
pushf
xor
and
pushf
loop
dec
cld
mov
push
in
or
adc
jmp
(bad)
pushf
or
mov
(bad)
mov
je
nop
out
pop
aad
inc
into
(bad)
adc
int3
adc
mov
pop
push
popa
push
rcr
or
int3
sbb
add
movs
jmp
xor
nop
ror
test
and
and
retf
ja
in
pop
lods
cmp
sar
inc
mov
pop
ret
pop
mov
ins
mov
jmp
fcmovu
bound
jle
and
mov
and
inc
inc
mov
push
sbb
imul
in
adc
sbb
ja
pushf
pushf
fs
mov
(bad)
in
xchg
xor
icebp
aas
and
push
pop
stc
jge
or
mov
cmp
cmc
pop
mov
fimul
and
icebp
or
jae
aas
mov
xchg
mov
mov
shl
jbe
popf
sbb
lock
fadd
arpl
out
in
mov
adc
fst
fmul
(bad)
mov
or
cli
and
lahf
or
adc
push
and
cmp
dec
pop
mov
fsub
push
imul
gs
xor
add
xchg
mov
inc
push
dec
mov
xlat
sbb
adc
and
rcl
mov
mov
sbb
adc
sub
daa
sub
sbb
inc
jmp
push
mov
outs
push
jp
outs
aam
(bad)
movs
push
jae
(bad)
shl
jo
xchg
jo
add
movs
adc
and
les
jnp
push
xchg
mov
mov
imul
push
ror
mov
inc
int3
sbb
pop
xor
inc
rcl
lods
(bad)
adc
push
scas
cmp
sub
ins
dec
bound
jbe
arpl
inc
jmp
add
fiadd
aas
fwait
xor
jae
ret
sahf
xor
adc
mov
pop
fld
inc
mov
out
cmp
lahf
mov
jmp
jns
out
mov
not
fldcw
sbb
push
mov
pop
rcl
add
icebp
call
cdq
xchg
lock
loopne
leave
loopne
retf
shl
int3
inc
aas
fcomip
inc
lea
cmp
ins
push
aad
(bad)
stc
and
in
imul
loop
jle
call
out
push
lahf
fcom
or
lea
or
fst
push
sti
popa
cli
hlt
mov
pop
sbb
push
jbe
les
or
aaa
jmp
adc
iret
mov
pop
jbe
scas
call
mov
retf
adc
iret
aam
or
pusha
mov
call
loope
mov
int
mov
mov
nop
and
retf
xor
add
xchg
sbb
int3
iret
mov
stc
xchg
push
pop
inc
stos
(bad)
mov
lock
push
scas
ffree
adc
movs
xchg
mov
xchg
jns
inc
lahf
ins
and
xchg
xchg
ret
push
test
xchg
jmp
cmp
sti
pop
xor
mov
fwait
mov
jp
or
aas
packuswb
(bad)
dec
xchg
aam
fbld
movs
test
add
div
mov
cs
std
cmp
stc
push
and
push
test
int
repnz
pop
mov
cmp
mov
call
and
ret
cmp
outs
inc
mov
mov
jg
mov
popa
push
scas
mov
imul
call
gs
jnp
lds
mov
out
push
in
std
out
adc
mov
lock
or
test
cld
dec
jecxz
lea
dec
ins
into
sub
fnsave
mov
popa
mov
inc
outs
adc
jne
push
mov
arpl
test
retf
arpl
pusha
(bad)
dec
pusha
add
stc
push
pushf
pop
jmp
xlat
xchg
push
in
sbb
push
jmp
push
sub
mov
push
out
adc
adc
in
mov
mov
pop
jbe
mov
fwait
mov
(bad)
pushf
cmc
pop
or
ins
xlat
je
mov
stos
(bad)
mov
mov
int
fwait
adc
push
jnp
and
and
cmps
enter
sbb
in
cmp
jmp
call
xor
cmps
enter
xchg
call
xlat
add
sti
dec
movs
mov
lahf
shr
pop
std
icebp
jbe
movs
vmload
ins
test
sbb
push
aam
dec
sub
scas
mov
aad
imul
lahf
ret
mov
pop
arpl
mov
fimul
add
sar
fs
popf
out
call
movs
sbb
adc
dec
add
movs
arpl
push
fisub
or
mov
loope
push
sbb
mov
lds
xlat
jle
inc
rcr
mov
and
popf
xor
xor
sbb
aam
xchg
mov
mov
aaa
fsub
mov
inc
add
jg
je
or
cmp
jns
add
jae
gs
sub
inc
dec
sbb
aad
pop
inc
jp
(bad)
cdq
inc
cmp
add
add
out
enter
(bad)
in
pop
ins
inc
test
jae
lds
int
pop
popa
shl
retf
xchg
shl
mov
push
dec
scas
sub
dec
inc
cmp
call
push
daa
movs
popf
mov
add
mov
sub
and
call
mov
cmps
imul
inc
lahf
sub
mov
pop
test
jmp
aaa
inc
dec
jl
cmp
xchg
cmp
lods
add
mov
lods
fisubr
test
out
pop
add
mov
mov
lahf
bound
inc
push
jne
aas
cmps
daa
in
(bad)
rcr
adc
push
and
mul
mov
loop
add
adc
gs
add
jecxz
jle
cmp
jb
add
jns
or
out
or
dec
pop
(bad)
std
jbe
bndldx
sahf
fcom
or
fxch
mov
inc
pop
mov
fst
rcr
adc
scas
mov
or
push
adc
gs
inc
sbb
call
sbb
ins
into
or
arpl
jecxz
xchg
jb
gs
or
gs
out
(bad)
sti
mov
lock
xor
mov
std
mov
hlt
sbb
dec
test
pop
sbb
jns
xor
xor
or
call
or
(bad)
in
sub
inc
pop
loop
mov
mov
iret
push
cdq
call
and
ja
sub
cmp
aaa
pop
cs
fisub
lahf
ror
daa
dec
cmp
sub
sbb
cmp
test
ds
add
movs
int
sub
popf
ret
adc
test
ja
push
jp
cmp
(bad)
xchg
leave
out
xor
sub
and
enter
push
out
repnz
cmc
fstp
mov
xor
jecxz
xlat
in
push
push
and
out
(bad)
jnp
pop
imul
sbb
jecxz
out
sub
scas
cmp
or
mov
push
inc
cwde
out
fisttp
push
(bad)
out
pop
adc
sti
ret
mov
adc
(bad)
xlat
rcr
push
std
pusha
bsf
iret
cmp
adc
fcom
push
xchg
ret
pop
test
adc
mov
jmp
ins
dec
retf
icebp
xor
shr
outs
rcl
addr16
jmp
cdq
out
pop
fidivr
call
or
cmp
xlat
nop
aaa
mov
mov
in
push
es
repz
test
clc
ffreep
pop
xchg
movs
(bad)
and
mul
dec
xor
repnz
cmps
xchg
repz
aas
xchg
mov
cmp
lahf
(bad)
shl
fistp
sub
mov
lahf
mov
push
mov
jo
xchg
test
mov
mov
in
sub
and
dec
dec
push
cld
je
dec
int
xor
call
jae
mov
f2xm1
xchg
repnz
xchg
jo
push
cwde
and
(bad)
ror
mov
jnp
sub
scas
and
stc
dec
fidiv
sub
cmp
and
mov
cld
or
stos
fsub
adc
sub
push
xchg
dec
daa
push
push
sbb
jl
jno
xlat
je
addr16
les
and
imul
mov
mov
lods
add
mov
jbe
inc
or
pop
mov
dec
mov
daa
lods
sbb
pop
pushf
mov
mov
test
cli
fwait
aaa
hlt
ret
mul
pop
cmp
aaa
out
(bad)
push
fnsave
retf
jno
push
outs
scas
mov
ja
cmp
and
ins
mov
or
xor
popf
lds
aas
xor
out
adc
xor
int3
icebp
mov
mov
push
mov
stc
call
xchg
xchg
call
pop
xchg
je
jl
in
add
in
dec
xor
ret
add
mov
xchg
repnz
add
cli
pushf
sti
jmp
xchg
sub
cdq
hlt
xchg
mov
cmp
dec
xor
xchg
mov
cmp
(bad)
nop
sub
cmc
xor
(bad)
shr
add
dec
cld
addr16
aam
or
and
outs
xor
xor
test
xchg
push
xchg
push
movs
jmp
or
es
push
adc
pop
out
movs
popf
mov
lods
mov
rcl
xchg
bswap
pop
pop
sub
push
test
imul
int
fstp
push
js
out
pop
or
and
mov
stos
lods
into
mov
pop
sbb
sub
mov
inc
xchg
movs
xor
cmp
jmp
and
lds
data16
mov
cmp
lds
or
ret
retf
and
inc
popf
rcl
ret
retf
repnz
jae
jmp
jo
dec
inc
aad
ja
mov
test
popa
cmps
xchg
push
xor
clc
xchg
addr16
rcl
imul
sub
adc
jle
jmp
int
xchg
cs
push
test
out
add
adc
into
push
jp
out
imul
push
inc
cs
mov
daa
mov
outs
jnp
push
inc
mov
mov
jmp
cmp
out
mov
mov
and
and
push
outs
mov
jns
xor
into
xchg
mov
inc
add
xchg
add
leave
xrelease
inc
pop
push
mov
test
movs
adc
sub
pop
cmp
loopne
adc
test
and
leave
inc
mov
xor
(bad)
sti
add
mov
aas
push
cmp
nop
or
ds
jge
add
lds
jge
mov
(bad)
mov
test
pushf
jne
cmp
loope
ins
int3
adc
(bad)
or
fsubrp
and
and
test
test
sub
movs
pop
stos
aad
ss
test
add
icebp
pop
pop
mul
cmps
jne
jbe
ret
or
push
or
push
sub
sti
sub
hlt
add
fisttp
(bad)
or
sub
sub
repnz
cmps
or
pop
or
push
test
jp
scas
test
cdq
outs
add
add
mov
cli
mov
adc
cli
loopne
frstor
into
and
add
shl
add
mov
ins
jge
dec
xchg
inc
pusha
mov
dec
not
aad
add
or
inc
xchg
sahf
cli
add
dec
xor
int
faddp
pop
jne
xor
in
call
xor
pusha
pop
adc
inc
push
lods
bound
leave
mov
cmp
idiv
stc
push
mov
push
mov
(bad)
repz
addr16
xor
cmc
mov
je
add
ins
int3
nop
jl
fistp
jnp
push
pop
pop
scas
mov
std
pop
add
xor
xchg
jnp
sub
in
mov
(bad)
xor
mov
mov
cmp
out
gs
rcl
mov
frstor
adc
cwde
in
mov
movs
mov
test
lods
fdiv
out
stos
push
xchg
jnp
setnp
and
fild
es
(bad)
jge
hlt
lock
or
xor
in
ss
fwait
cmp
gs
test
jle
popf
pmaxsw
cld
scas
pop
cmps
pushf
rcr
leave
add
xor
mov
mov
les
add
sub
jnp
pop
jno
dec
clc
adc
xchg
icebp
cmp
movs
lea
test
int3
cwde
je
in
mov
mov
pop
xchg
xor
dec
imul
sbb
call
mov
jmp
shl
fwait
loopne
(bad)
into
rcr
add
cmp
push
add
push
cwde
retf
retf
bnd
pop
mov
mov
push
lods
fist
inc
mov
xchg
fadd
retf
xchg
in
mov
inc
mov
inc
ror
jle
mov
icebp
int3
mov
(bad)
in
xchg
and
loope
sbb
dec
mov
push
xor
sbb
out
mov
iretw
movs
mov
jbe
pop
lods
mov
iret
push
jecxz
cmp
(bad)
add
(bad)
not
pop
sub
xor
add
inc
sbb
inc
jmp
mov
loopne
dec
xchg
mov
xor
mov
cmp
jmp
or
stc
iret
imul
push
outs
sbb
int3
push
sub
pop
push
xor
clc
mov
jo
mov
cli
push
fwait
mov
xchg
cli
jl
push
push
push
or
arpl
xchg
push
dec
jnp
xor
in
scas
add
inc
mov
jecxz
add
and
cmp
test
mov
int3
and
xchg
arpl
dec
jg
sub
and
arpl
clc
push
inc
jo
mov
xchg
fistp
clc
push
or
push
xlat
repnz
(bad)
bound
sbb
pop
push
cmp
dec
ins
arpl
dec
sub
fcmovbe
sub
add
mov
sbb
jmp
or
cmp
xchg
sub
test
sub
and
xor
das
test
cmp
xor
and
xor
nop
jge
fs
test
dec
movs
(bad)
xlat
je
push
sti
push
out
daa
dec
out
inc
inc
mov
xchg
add
out
(bad)
fwait
inc
push
push
mov
fs
sub
fiadd
sub
pop
(bad)
cdq
dec
push
jns
mov
sub
dec
cmp
or
fisub
and
cmp
(bad)
outs
adc
push
outs
fwait
sub
sbb
inc
stos
add
xchg
adc
out
xlat
mov
push
adc
mov
stos
sbb
mov
imul
mov
gs
inc
(bad)
adc
retf
sbb
fwait
movs
adc
nop
inc
out
nop
test
xchg
stos
add
fdivr
out
aaa
xor
and
xchg
icebp
push
adc
mov
aam
and
cmp
xchg
ja
xchg
pop
push
push
(bad)
mov
fxtract
mov
jle
sub
je
inc
lea
out
jmp
sbb
(bad)
rcr
add
test
sbb
xchg
dec
aam
(bad)
(bad)
jg
mov
pop
clc
in
cmps
daa
dec
fbld
retf
jmp
repz
ins
push
cdq
or
push
call
xchg
loope
and
jg
push
pop
or
pop
cmp
or
dec
in
retf
movs
paddd
and
jb
sub
cmc
mov
and
xchg
adc
xchg
and
test
ror
pop
sbb
ror
push
hlt
mov
cmc
pop
pop
inc
xor
in
cmp
or
leave
jae
add
sti
pushf
jno
mov
add
xchg
mov
popf
fmulp
aas
fistp
test
loope
adc
xchg
or
inc
xchg
xor
mov
ins
stos
cmc
(bad)
pop
jo
sub
xor
dec
fld
paddd
shr
jb
pop
jge
hlt
repz
cmps
sbb
sbb
cwde
lea
mov
inc
mov
mov
xchg
sbb
jp
mov
xchg
sbb
std
push
mov
mov
(bad)
push
mov
jo
data16
daa
or
(bad)
push
or
pop
mov
jecxz
and
or
mov
scas
add
sbb
add
ret
test
vpaddsb
and
stos
or
ins
dec
xchg
mov
das
addr16
jge
sti
repz
sub
scas
dec
dec
pop
inc
cmp
fmul
push
pop
sub
and
push
shl
push
fisttp
test
add
in
pop
cli
sub
int3
in
push
call
inc
outs
es
pop
lds
mov
xor
imul
jecxz
out
repnz
rcl
imul
ds
retf
lahf
scas
test
xchg
sbb
cmp
paddw
dec
adc
popa
retf
imul
cld
lds
popa
xchg
cmps
or
xor
enter
add
xor
dec
jecxz
and
sub
prefetch
ss
icebp
inc
sub
hlt
gs
push
jo
pop
adc
sbb
icebp
mov
pop
push
adc
es
sti
je
xchg
das
mov
loop
sub
xor
bound
fcomp
iret
xchg
push
ror
loope
gs
std
add
sbb
dec
retf
mov
pop
(bad)
or
loopne
and
sub
rcl
pop
fs
jl
out
mov
pop
push
mov
ror
add
movs
cmp
and
iret
adc
inc
(bad)
or
sbb
sub
call
aaa
jmp
loop
shl
es
nop
sub
ror
push
int
xor
inc
jno
inc
adc
movs
push
jg
gs
sub
mov
or
loope
push
add
dec
mov
loope
xor
mov
push
mov
adc
or
nop
xor
fs
cmp
test
stc
and
jl
dec
jmp
sbb
data16
xchg
into
dec
push
adc
pop
add
jo
mov
mov
dec
in
imul
mov
shl
dec
(bad)
test
adc
push
inc
(bad)
gs
loopne
push
or
mov
dec
or
call
pop
push
pop
cmp
ja
sub
mov
dec
push
loope
in
push
arpl
hlt
jmp
test
inc
cwde
xchg
movs
jnp
pop
xor
jae
pop
in
xor
sub
jne
and
adc
xor
mov
adc
mov
inc
sub
cld
adc
(bad)
retf
xor
pop
push
int3
les
movs
mov
dec
mov
rcr
ror
push
loopne
xor
xor
es
add
fistp
pop
inc
test
jmp
test
and
mov
pop
std
xchg
int
lods
xchg
push
pusha
xor
pushf
hlt
lods
cdq
leave
push
lds
clc
hlt
mov
rcl
icebp
or
push
cmp
pop
sub
or
loope
pop
add
sahf
xchg
out
pop
dec
sbb
cld
pop
aas
das
jo
push
sub
mov
or
jne
jle
jns
add
scas
rcr
cmps
inc
vpshld
dec
jns
mov
or
movs
fadd
aad
repnz
inc
cld
push
jecxz
xor
in
lds
push
fild
imul
xchg
adc
std
div
pop
pop
pusha
and
jns
xor
push
pushf
mov
(bad)
push
sahf
mov
inc
adc
push
push
lods
repnz
aam
scas
pop
inc
pop
dec
(bad)
int3
inc
inc
inc
pop
pusha
add
ins
adc
outs
push
push
ret
rcl
xchg
test
sub
jo
mov
ret
fistp
cmps
daa
sbb
retf
(bad)
cmp
or
xchg
mov
adc
lea
sbb
test
mov
popa
and
mov
shl
inc
xor
fisub
pop
mov
imul
cdq
sbb
retf
fidivr
ins
cmc
mov
nop
inc
push
iret
mov
ins
push
in
jns
inc
xchg
shl
xlat
movs
sub
mov
jmp
test
push
outs
mov
add
cdq
in
dec
jl
add
into
sbb
fild
dec
cmps
(bad)
cdq
setge
lea
xchg
int
fnstenv
enter
rol
adc
dec
xor
mov
ret
push
mov
sub
pop
fs
loopne
data16
or
cmp
push
sub
cmp
pop
arpl
add
mov
popa
mov
rcr
enter
out
or
xchg
pushf
ror
in
push
sub
dec
icebp
int
sub
call
jmp
bound
outs
pop
sahf
imul
cs
jmp
pop
fimul
xchg
cmp
inc
push
lahf
dec
cmc
xchg
(bad)
jl
sub
and
fsub
aad
xor
mov
fdiv
mov
fwait
(bad)
push
test
dec
xchg
sub
xor
push
ds
jne
(bad)
pop
stc
lods
aas
in
push
aaa
fsubr
rcr
repnz
cdq
or
jle
test
sbb
mov
jge
arpl
sub
(bad)
add
sub
call
mov
sahf
rcl
es
(bad)
mov
(bad)
cmp
adc
test
inc
test
movs
push
into
dec
movs
ins
mov
pop
and
popa
nop
mov
or
xchg
cs
push
inc
jg
sbb
test
cmp
iret
mov
mov
popf
repz
mov
loopne
push
(bad)
or
or
es
mov
xor
cld
icebp
dec
stc
mov
push
cwde
cwde
lahf
in
mov
xchg
and
sar
cmp
das
outs
dec
and
sbb
xchg
jae
clc
mov
das
fcmovb
enter
test
jg
das
xor
call
adc
push
sub
(bad)
fidivr
xor
repz
fdivrp
imul
stc
push
push
pop
push
or
adc
xchg
pop
mov
push
stos
add
inc
sub
cwde
fwait
add
cmp
jge
and
mov
inc
lock
lds
mov
imul
lds
ficom
adc
std
push
lahf
rcr
pop
cmps
sbb
sub
adc
pop
mov
add
jne
les
repnz
ins
ins
mov
mov
add
add
adc
aam
mov
dec
xchg
idiv
mov
rol
cmp
adc
mov
inc
xor
and
jno
cmp
xor
push
mov
inc
or
rcl
gs
popa
mov
test
mov
sar
(bad)
push
pop
in
fwait
or
test
push
retf
jl
in
(bad)
cmp
test
xchg
pop
aas
jnp
movs
fisubr
mov
jmp
sub
pop
jmp
call
pop
pop
adc
add
sahf
scas
arpl
scas
add
cli
adc
(bad)
cmp
imul
addr16
jne
movs
push
mov
fdiv
mov
das
shl
push
sub
loop
inc
sbb
es
and
push
push
adc
ins
sub
lods
(bad)
pop
sbb
fs
mov
jbe
and
add
or
out
xchg
cmp
fxch
stc
(bad)
out
stc
push
xor
loope
in
stos
and
cli
push
inc
pop
imul
stos
xchg
je
ret
inc
(bad)
out
call
xchg
add
cmp
add
mov
pop
jbe
pop
inc
sbb
inc
mov
adc
mul
outs
sub
inc
adc
mov
xchg
add
cld
xor
dec
stc
add
lods
and
cli
mov
cmps
jb
outs
(bad)
cmp
in
pop
dec
dec
repnz
jg
out
pop
cli
or
xor
outs
adc
jg
sbb
fdiv
cmp
sub
mov
jno
jmp
into
xor
xor
inc
jne
loope
and
mov
sar
xchg
jb
jae
and
xchg
jo
and
jmp
add
outs
cmp
sti
int
xor
mov
lea
dec
pop
xor
cmp
aad
movs
rol
lds
sub
cmc
loope
int3
or
xchg
cmp
push
push
cmp
sub
ror
inc
push
cmovb
and
ja
(bad)
jb
lods
movs
repnz
hlt
pop
mov
dec
stos
jp
push
mov
stc
hlt
idiv
into
loop
enter
repz
jp
stc
je
inc
xor
add
mov
inc
(bad)
pop
cmp
push
lahf
call
inc
hlt
cmp
jmp
(bad)
call
arpl
add
sbb
sbb
or
imul
jb
ja
(bad)
fist
pop
adc
mov
mov
mov
push
xchg
push
mov
sub
int
jno
xchg
movs
sub
jecxz
aad
test
fwait
pop
sub
loope
mov
add
pop
mov
or
mov
jno
jno
movzx
mov
daa
push
out
dec
pop
mov
out
pop
mov
loop
mov
cli
and
out
es
sbb
jo
test
pop
mov
les
cmp
jmp
imul
pop
mov
icebp
adc
inc
xor
mov
je
cdq
pop
test
mov
daa
cmp
loope
sbb
sbb
fld
or
jl
lahf
adc
pop
loope
sub
(bad)
push
jmp
mov
hlt
jae
push
mov
jge
lds
cmp
xchg
lds
stos
mov
call
lods
(bad)
data16
xchg
popf
inc
(bad)
retf
fwait
sbb
xchg
mul
push
push
fldenv
repnz
hlt
(bad)
jge
sbb
mov
xor
cli
pop
cmp
and
cmp
shl
sbb
out
cmp
ds
iret
popa
mov
outs
iret
adc
sbb
clc
pop
shl
fs
jl
push
leave
mov
fwait
cs
sbb
rep
pop
lods
sub
sbb
cmps
jae
push
and
ss
iret
push
or
into
fbstp
shld
push
aaa
jnp
jg
sbb
dec
mov
imul
test
adc
mov
xor
push
mov
push
sbb
(bad)
fs
dec
xchg
xchg
xchg
cmc
outs
cmps
fmul
ins
mov
xchg
(bad)
aas
popf
in
jbe
repz
xchg
xchg
jecxz
or
mov
or
scas
out
xchg
add
push
xchg
add
stc
les
jp
sbb
stos
lods
jne
cdq
lea
neg
ds
cmps
rcr
sar
mov
mov
into
push
ret
std
fnstcw
cmp
mov
cli
dec
pop
pusha
adc
aaa
inc
inc
jmp
jmp
adc
cmp
mov
pop
cdq
sbb
sbb
mov
cmp
test
sub
ret
repz
enter
and
lods
in
and
jp
shl
mov
inc
ja
(bad)
push
push
in
xchg
in
inc
lods
(bad)
shl
jb
push
iret
in
fwait
pop
adc
iret
or
push
test
cmp
loop
scas
iret
push
test
(bad)
cmp
gs
arpl
push
bound
inc
add
xlat
push
test
arpl
pop
mov
push
int
out
lahf
out
rol
ja
es
inc
pop
sbb
loope
xchg
fisttp
div
push
jl
stos
idiv
adc
and
out
dec
mov
dec
sbb
std
xchg
sbb
loop
jg
xor
cmp
cmp
idiv
idiv
dec
pop
adc
xchg
emms
jmp
jb
push
data16
push
and
inc
jmp
into
and
jg
out
rcr
sub
clc
sub
test
pop
add
les
mov
ror
cmc
push
pushf
push
push
push
mov
cdq
mov
add
add
in
mov
ret
mov
push
mov
sbb
lock
jl
push
popf
test
mov
jns
adc
retf
cmp
push
(bad)
shr
mov
jecxz
pusha
cdq
xchg
sbb
sub
mov
inc
jnp
push
sar
push
sub
es
sahf
mov
cdq
jns
(bad)
dec
sub
push
ficomp
cld
xchg
fldenv
ffreep
out
jne
rcr
or
pop
(bad)
(bad)
mov
dec
push
xchg
jmp
xor
repnz
fild
push
jg
sbb
movs
lahf
push
out
inc
mov
(bad)
xchg
jb
dec
popa
in
test
pop
push
add
or
jge
movs
aas
(bad)
mov
sti
out
int3
push
cmp
mov
or
lds
mov
nop
jnp
lea
mov
popf
mov
shl
rol
and
push
aam
arpl
loope
mov
hlt
push
inc
fdiv
into
push
cmps
mov
inc
inc
popa
icebp
mov
adc
xor
xchg
ds
pushf
sbb
(bad)
pusha
jg
mov
xor
out
data16
int3
in
rcl
int
aaa
mov
mov
imul
xlat
add
pop
xchg
test
ins
test
cmp
mov
mov
dec
aaa
imul
sbb
(bad)
stc
cs
jb
in
enter
test
lods
test
pop
daa
movs
das
nop
pop
adc
lock
popa
shr
outs
test
add
repnz
je
gs
mov
cmc
ins
push
jno
call
repz
movs
sub
xor
jp
stc
inc
es
cs
mov
inc
mov
hlt
nop
jnp
xchg
xor
lods
dec
pop
ds
and
jmp
in
sub
mov
mov
lahf
(bad)
jecxz
inc
jo
push
or
retf
pcmpgtb
(bad)
ficom
sbb
mov
mov
shl
xor
pop
sub
pop
mov
push
mov
or
pushf
popf
outs
or
jge
push
inc
aas
adc
repz
cld
jle
aam
jmp
pusha
int3
call
daa
fiadd
jp
ror
stos
pop
rep
test
sbb
cmc
imul
aad
pop
pop
mov
sub
push
popa
push
mov
jmp
push
imul
mov
ss
imul
mov
(bad)
(bad)
icebp
je
test
scas
cmc
sbb
mov
push
xchg
call
inc
cmc
mov
imul
mov
inc
into
and
pop
jecxz
lods
sbb
xchg
iret
loop
std
xchg
sub
fdiv
sbb
rcr
sub
gs
inc
loope
add
mov
xor
shr
xor
cmp
aam
cmc
and
pop
and
sbb
xor
jo
icebp
pop
fdivr
sub
add
pop
cmc
jl
in
add
jnp
jg
or
mov
push
ret
call
jle
iret
jp
push
or
xor
stc
gs
into
test
pop
mov
push
mov
xchg
jle
mov
sahf
sbb
sar
in
pushf
dec
pop
or
cli
or
ins
jae
icebp
(bad)
or
sbb
(bad)
(bad)
dec
pop
imul
sub
sbb
pop
not
shl
mov
ins
test
hlt
dec
inc
sbb
(bad)
mov
out
cmp
(bad)
pop
or
int3
add
jecxz
cmp
xor
jae
mov
dec
mov
adc
xchg
mov
push
pop
jl
ds
jge
scas
pop
and
adc
rol
mov
movs
pop
or
daa
and
lods
(bad)
push
sub
xor
dec
cld
cwde
mov
mov
scas
pop
inc
int3
ss
sub
inc
mov
loop
dec
push
inc
mov
add
cmp
jecxz
(bad)
and
sub
(bad)
mov
(bad)
push
sbb
mov
xchg
sub
(bad)
mov
lahf
aas
and
cmps
dec
addr16
inc
test
add
gs
(bad)
mov
ret
call
mov
jo
cmp
bound
stos
in
push
ror
loop
pop
lahf
ins
gs
sbb
cdq
ins
sar
out
shr
sub
cmc
(bad)
push
xor
repnz
lock
xor
dec
sbb
ds
call
or
ficom
sahf
enter
jno
ret
and
push
cmc
std
mov
out
inc
add
popa
pusha
rep
call
arpl
repnz
cmp
mov
movs
imul
aaa
and
aas
add
mov
pushf
and
stc
xor
sbb
or
int
sub
xor
std
(bad)
xor
(bad)
fist
ins
daa
sbb
mov
pop
dec
jmp
stos
sub
mov
sti
xor
cmp
or
test
jne
cmp
inc
fadd
sbb
out
cld
xor
loop
retf
cmp
je
in
pop
push
mov
(bad)
sbb
lea
mov
push
xlat
nop
mov
repz
and
sbb
std
push
cmp
xchg
cmps
jb
mov
bound
sar
inc
pusha
adc
dec
jb
cli
or
loopne
add
xchg
loopne
adc
in
adc
js
in
jo
cmp
add
adc
popa
xor
xchg
mov
(bad)
shl
xchg
fistp
xchg
test
add
sub
inc
cmp
shl
sub
and
and
into
test
cmp
mov
dec
mov
js
in
lods
dec
call
adc
mov
sbb
xchg
dec
jge
std
sub
mov
or
mul
inc
and
popf
cmp
(bad)
sub
push
out
jle
rol
xor
and
push
popf
pop
outs
add
test
test
or
hlt
mov
bound
mov
lods
enter
lods
(bad)
int3
push
or
lahf
xchg
cli
sti
xchg
add
pop
dec
scas
sub
jno
cld
pop
sbb
xor
adc
jbe
push
rcl
push
out
mov
int3
push
push
mov
lds
push
sub
and
jne
jge
ins
jne
jmp
sub
jne
call
stos
adc
shl
cmp
lods
jo
pop
lods
or
pop
je
sti
lods
out
nop
push
sbb
xchg
mov
int
inc
retf
and
xor
xchg
mov
lock
jge
cmp
mov
imul
or
xchg
iret
and
data16
xchg
add
inc
movs
ret
icebp
shr
addr16
inc
push
and
test
mov
jmp
xchg
jno
fbld
mov
mov
popa
imul
(bad)
cmp
mov
mov
retf
mov
or
cli
shl
adc
fcomip
adc
stos
pop
push
jae
or
jmp
sbb
push
push
cmps
xor
cmp
mov
outs
das
pop
repz
nop
fsubp
cmp
dec
xchg
dec
jb
cmps
loop
ss
icebp
lods
push
ja
dec
dec
mov
leave
push
mov
sub
jbe
inc
(bad)
push
clc
popa
(bad)
repz
and
jbe
(bad)
jle
fwait
jle
rcr
(bad)
sbb
add
cmp
daa
pop
popa
xchg
dec
and
sbb
pop
fisttp
das
push
add
pop
mov
(bad)
(bad)
in
(bad)
cld
xor
leave
and
imul
and
je
movs
cmps
adc
xchg
pop
pop
xor
sbb
nop
jae
push
push
push
pop
ja
aas
pop
inc
test
cmp
xor
ss
jno
mov
mov
retf
shl
adc
ror
lods
out
or
ins
pop
and
mov
dec
mov
test
push
mov
and
adc
pop
jp
ret
fild
pop
pop
bound
rol
and
pop
out
ins
imul
fld
add
add
add
ss
repz
pop
inc
(bad)
pushf
js
push
adc
adc
jmp
push
add
sbb
or
lock
xchg
scas
push
out
and
ficomp
inc
xor
out
ret
stos
loope
inc
and
pop
mov
mov
dec
mov
mov
aam
pop
loope
xchg
out
lds
hlt
mov
iret
rcl
xchg
(bad)
dec
mov
cmp
leave
mov
addr16
inc
fdiv
je
push
(bad)
mov
sbb
inc
adc
sbb
call
in
xor
xchg
cpuid
mov
push
ficom
pop
fbld
movs
mov
out
fcomi
test
xchg
cmps
sbb
jnp
rcr
pop
pop
sbb
or
ret
aas
xor
pop
ins
cs
sub
test
xchg
out
or
(bad)
mov
inc
cmps
cs
dec
cmc
shl
in
and
(bad)
cmp
add
inc
sub
into
cld
sahf
lods
sbb
add
adc
sbb
or
and
jns
sahf
and
pusha
imul
mov
pop
and
adc
jae
adc
mov
pushf
retf
cmc
dec
es
sbb
ds
fild
mov
cmps
dec
ds
push
adc
xchg
fs
or
call
inc
out
pop
clc
(bad)
repz
enter
pop
sbb
cmp
ss
jl
clc
push
and
add
push
or
aaa
loope
push
xor
jnp
jmp
out
xor
jl
jge
ins
adc
mov
mov
leave
scas
fisubr
jmp
retf
xlat
adc
arpl
adc
inc
test
and
test
mov
fcom
or
and
repz
and
add
push
and
cld
jle
and
dec
ins
adc
xor
mov
sbb
dec
pusha
push
iret
sub
inc
push
out
jae
(bad)
icebp
(bad)
and
mov
es
sub
jmp
pop
cmp
call
div
cli
test
cmp
adc
cmp
and
sbb
idiv
daa
out
mov
lahf
adc
in
mov
and
sar
xlat
push
sbb
or
dec
or
test
jle
dec
lods
pop
inc
lods
sbb
sbb
or
cmp
pop
dec
in
ja
inc
jns
xchg
cmp
adc
fs
popa
and
sbb
add
loop
mov
loop
xlat
or
adc
inc
sub
inc
fwait
dec
out
cdq
ja
rol
mov
loope
stos
test
scas
pusha
pop
sub
cmps
retf
test
cmp
fsub
scas
xor
sub
sub
fst
jle
pushf
inc
scas
fsub
cmps
jo
mov
mov
pushf
push
pop
sbb
push
not
(bad)
inc
cmp
cmp
sub
xchg
popf
push
stc
inc
sahf
fidivr
xchg
mov
and
(bad)
push
test
lahf
mov
jo
lds
mov
out
sub
arpl
and
pop
and
xor
repz
mov
push
adc
dec
rol
jge
mov
push
jbe
(bad)
fisttp
push
mov
pushf
inc
lods
mov
fisubr
pop
jmp
push
mov
and
mov
test
in
(bad)
jmp
ror
ror
es
pop
retf
and
inc
mov
and
jae
push
lock
int3
fcom
out
jno
cmps
push
and
subps
leave
stc
adc
xchg
out
in
mov
rol
mov
ret
sub
call
push
adc
cmp
add
into
push
stos
mov
jo
push
push
fmul
retf
inc
mov
push
adc
inc
std
xor
jns
cs
cli
adc
es
inc
icebp
mul
cli
mov
push
or
cld
sti
(bad)
lock
dec
xchg
mov
mov
repnz
mov
gs
sub
fwait
mov
and
test
push
scas
push
stos
pop
jo
lea
sbb
or
sbb
out
jbe
xor
mov
pop
(bad)
jns
mov
aas
and
jle
inc
push
or
adc
repnz
push
sbb
add
out
xor
dec
xor
ja
repz
push
in
adc
jno
pop
push
(bad)
outs
outs
mov
int
and
popa
sub
xchg
rcl
jl
jmp
test
in
push
mov
dec
jne
sbb
mov
stos
mov
nop
fiadd
out
mov
push
inc
mov
sub
adc
adc
cli
jo
scas
stc
aam
icebp
and
data16
xor
sti
inc
sahf
jbe
mov
retf
xor
enter
(bad)
into
mov
xor
cwde
cmp
iret
retf
(bad)
xchg
mov
out
pcmpeqb
xor
das
ret
(bad)
leave
xchg
push
int
je
int
xlat
(bad)
or
fwait
mov
in
stos
cmp
add
stos
dec
ret
cmc
xchg
xchg
push
popf
inc
or
popf
and
sub
daa
push
or
jle
or
paddb
shl
add
xor
fnstenv
and
sbb
push
in
repz
(bad)
add
or
ins
mov
sar
adc
adc
sar
push
movd
or
pop
mov
imul
daa
cmp
jne
push
and
add
lods
mov
jno
push
jae
xor
xchg
mov
push
push
add
stc
into
je
push
sahf
cmps
or
xchg
adc
movd
xor
push
ja
loopne
xlat
add
in
push
add
sub
lods
cmp
dec
or
push
jno
(bad)
fwait
sahf
repz
pushf
mov
cvtpi2ps
push
sbb
mov
rcr
mov
iret
jbe
inc
xchg
popf
sub
dec
sahf
pop
fwait
pop
pop
push
xor
in
jbe
dec
enter
dec
in
in
fs
mov
dec
xor
scas
jo
sbb
pop
es
dec
fidiv
cdq
aam
lds
xor
inc
jp
inc
cmp
xchg
jbe
mov
dec
xchg
lahf
mov
cmp
or
jge
rol
sbb
or
and
in
fdiv
push
mov
std
cmp
pop
popf
pop
mov
inc
pop
or
dec
lock
and
call
adc
sbb
les
or
adc
mov
ror
and
cs
cmp
mov
sti
or
push
inc
jne
ja
pop
repnz
jns
push
int3
dec
jb
fsub
push
pop
mov
xor
and
fiadd
sti
pop
test
rcr
cmps
mov
mov
int3
inc
and
(bad)
and
adc
leave
dec
inc
add
out
pop
or
jo
adc
inc
call
rcr
lock
mov
jmp
out
pop
pop
icebp
loopne
(bad)
push
push
mov
pop
adc
test
fs
jle
xchg
push
pop
and
(bad)
ret
int3
xor
xchg
nop
out
fisub
jns
popf
add
dec
cdq
cdq
mov
sar
and
mov
in
sbb
cmp
addr16
popf
pop
jae
cmp
add
test
push
mov
jno
jl
add
call
je
cmp
jmp
and
mov
xor
(bad)
sbb
mov
nop
sti
mov
push
ins
adc
xchg
pop
in
inc
adc
jle
jecxz
dec
jmp
pushf
sub
push
in
mov
or
shr
das
add
bnd
leave
lock
dec
sbb
mov
mov
xor
js
test
jbe
loope
and
cld
ins
pop
test
enter
(bad)
and
push
je
mov
loop
sbb
pop
push
ficomp
in
test
fidiv
mov
dec
inc
aam
stos
or
sub
push
and
sbb
iret
icebp
jmp
xchg
ror
out
cdq
sti
push
ins
fisttp
movs
stos
cmps
mov
lods
push
pop
inc
(bad)
push
out
inc
div
mov
jmp
loop
pop
cmp
aaa
fwait
lea
outs
or
push
movs
out
aaa
(bad)
fsubr
add
pop
ret
or
xor
mov
jne
fs
outs
xchg
push
push
out
call
mov
daa
xchg
ret
daa
cmc
movs
int
cmp
ja
sahf
sbb
fsub
cwde
cmp
mov
fild
sub
push
dec
in
ds
(bad)
jb
cmp
mov
(bad)
pop
mov
and
scas
mov
jns
jg
xchg
loopne
aas
inc
mov
jne
adc
push
mov
call
push
inc
pavgw
jmp
icebp
(bad)
test
repz
std
in
inc
jne
mov
add
aam
mov
mov
repz
mov
mov
and
dec
mov
mov
inc
and
ss
loopne
sub
inc
push
cli
aam
fsubrp
movs
and
push
jb
lahf
push
(bad)
daa
push
add
add
icebp
(bad)
push
or
stos
add
mov
jnp
adc
mov
stos
or
aas
inc
ret
sbb
push
add
jo
rol
in
fcomip
(bad)
rol
adc
xchg
pop
jbe
js
xchg
sub
inc
add
mov
sbb
sahf
in
cmps
jp
adc
jecxz
retf
test
adc
or
test
loopne
xchg
in
lds
sbb
cs
ret
jg
mov
xchg
adc
cmp
mul
sub
sub
push
test
mov
aas
jno
inc
repnz
jo
adc
hlt
js
jp
mov
pop
not
hlt
cmp
or
mov
and
leave
pop
shl
jnp
leave
(bad)
push
jp
xchg
shl
stos
xor
and
mov
add
push
outs
mov
pop
rol
mov
hlt
(bad)
(bad)
xor
jp
pop
imul
mov
mov
pushw
out
push
cs
mov
dec
pop
sbb
jecxz
sub
dec
mov
idiv
push
cdq
cli
inc
sbb
stos
mov
in
mov
push
cli
fild
in
sbb
(bad)
or
mov
pop
pop
or
pop
inc
test
cld
(bad)
cs
lea
xor
adc
nop
not
xchg
(bad)
and
dec
mov
in
cwde
retf
sub
mov
xor
xchg
outs
adc
mov
dec
jl
imul
gs
(bad)
outs
sbb
aas
pop
call
aam
ds
rcr
adc
jp
call
mov
add
arpl
add
cli
out
xor
add
adc
out
(bad)
cmc
mov
fisttp
xchg
push
mov
int3
fmul
xchg
mov
aad
test
jo
pop
std
sbb
outs
pop
aaa
push
jnp
sbb
mov
sub
ins
fild
or
in
je
xchg
pop
stos
inc
pushf
pop
push
sub
in
cmp
sbb
jp
jmp
mov
sbb
push
cld
sub
sti
mov
or
aad
repz
mov
scas
ja
jo
push
in
test
cli
shl
jo
dec
mov
movs
aam
(bad)
fs
add
rcl
cdq
sbb
xlat
sub
jbe
push
pop
xor
lds
push
loop
inc
sub
aam
xchg
pop
jle
mov
fwait
xor
mov
mov
pop
lahf
fcomp
pop
ins
scas
cmp
(bad)
jmp
std
sbb
mov
sbb
sbb
and
add
imul
cmp
in
and
cld
pusha
jge
or
push
mov
clc
or
ins
sub
ins
sbb
mov
mov
jns
pushf
push
out
jg
pop
cmps
pop
js
mov
sbb
jp
shl
mov
pushf
and
aas
or
imul
in
jne
hlt
shr
leavew
iret
dec
mov
fisubr
add
mov
pop
arpl
add
cmp
inc
push
xchg
inc
add
ss
stos
jp
jb
hlt
and
and
inc
ss
in
dec
popa
and
jmp
or
(bad)
fisub
pop
mov
shl
mul
mov
xor
jno
mov
es
cmp
push
fcomp
imul
inc
and
add
mov
add
lds
mov
fs
(bad)
int
test
inc
cmp
push
sub
aad
adc
outs
jno
repz
dec
bound
or
inc
cmps
lock
xchg
cmp
fwait
or
mov
jmp
sub
xlat
adc
mov
std
ins
pop
sub
jl
fimul
cmp
test
adc
and
movs
ins
jb
jle
bnd
inc
mov
or
mov
(bad)
ret
(bad)
pusha
test
add
xchg
popf
pop
or
clc
sbb
aam
fist
cld
jmp
sbb
cli
ja
dec
lds
inc
iret
js
call
in
and
and
push
xchg
cmp
cli
cwde
xchg
dec
cdq
clc
hlt
cmp
mov
into
mov
ret
lea
in
enter
or
adc
sbb
out
add
pop
ja
pop
outs
push
jle
fs
and
jb
inc
cmp
cmps
mov
lahf
lods
aas
jg
popf
mov
push
outs
xor
les
jns
(bad)
jbe
rcr
mov
xchg
jmp
mov
retf
mov
adc
lock
neg
icebp
loopne
imul
dec
xchg
out
xchg
inc
mov
(bad)
into
cmp
dec
or
(bad)
pop
xchg
cmp
(bad)
mul
retf
pop
push
popf
daa
das
pop
mov
mov
add
inc
dec
lods
sar
xor
ret
cwde
dec
or
out
pop
dec
sahf
adc
(bad)
movs
sub
push
inc
shl
mov
cdq
fs
mov
and
sbb
jno
add
aaa
pop
mov
cwde
mov
push
sahf
std
cmp
not
pop
mov
and
pop
xchg
mov
cdq
fcomip
mov
aaa
sbb
jecxz
push
shr
(bad)
mov
mov
aaa
mov
ds
jnp
ret
sti
inc
push
outs
inc
mov
in
(bad)
in
and
movs
cmovge
or
aam
or
ret
jg
xchg
dec
sbb
inc
push
ins
dec
sub
add
lock
movs
shr
lods
stos
arpl
pop
shr
xlat
ja
cmp
cmp
add
popf
xor
(bad)
push
jb
int
cmp
stos
push
repnz
mul
aaa
dec
sub
inc
push
push
xor
xor
aas
xchg
inc
push
sub
ds
xor
inc
xchg
js
xor
mov
and
mov
mov
xor
cld
out
adc
aas
cs
shr
test
adc
mov
mov
mov
loopne
add
iret
sbb
(bad)
jo
xor
or
(bad)
int3
syscall
fidivr
out
dec
sub
sahf
ss
jge
sub
adc
or
shl
mov
ss
pushf
daa
inc
cmp
pop
inc
and
push
fnsave
rol
pop
in
inc
cmp
jae
daa
cmp
movs
test
cmp
out
push
sbb
std
add
loop
loope
sbb
dec
mov
inc
xchg
xchg
mov
mov
rcr
push
dec
pop
sbb
fs
mov
scas
fs
adc
gs
pop
push
pop
xchg
sbb
(bad)
(bad)
out
(bad)
and
and
imul
and
jp
enter
movs
mov
cwde
pop
jmp
lea
out
sbb
cmps
das
ss
push
push
add
inc
push
adc
aad
test
addr16
mov
or
loope
pop
inc
(bad)
call
mov
mov
add
out
push
ret
dec
int
scas
and
outs
cmps
ret
add
(bad)
iret
stos
cdq
movs
mov
adc
(bad)
lods
rol
cli
jmp
sbb
mov
in
jne
mov
add
movs
xor
fldcw
mov
adc
call
xor
xlat
add
jno
push
xchg
and
retf
or
ins
mov
jne
push
daa
jl
mov
jle
sbb
add
add
inc
in
dec
imul
cmp
shl
cld
fcmovnu
jmp
pop
loop
or
pusha
push
xchg
xchg
jbe
sbb
call
mov
out
out
inc
shl
popf
mov
retf
push
mov
ins
and
(bad)
fdivrp
xor
out
test
jge
adc
jb
mov
ret
jb
ds
int3
dec
pop
cmps
stos
ja
dec
scas
jmp
mov
aad
cmpxchg
xor
jmp
mov
xchg
in
or
loop
ret
jmp
cld
dec
push
fiadd
movs
and
ficom
scas
jnp
add
fs
push
mov
inc
xor
pop
in
mov
jg
sub
pop
mov
jo
mov
imul
inc
bound
retf
adc
out
stc
aad
cmovno
lock
pop
pusha
fmul
mov
inc
mov
cmp
bound
(bad)
shr
lods
test
mov
popf
mov
xchg
adc
scas
in
lock
pop
test
adc
jle
mov
mov
lds
in
push
cs
sub
mov
fsubr
std
cmp
loope
pop
in
jo
cmps
add
mov
xchg
xchg
adc
cmp
or
aaa
mov
fwait
(bad)
js
int3
fstp
pop
lea
iret
dec
mov
ret
xor
dec
bound
push
rcr
sahf
das
cmovb
mov
mov
jmp
iret
mov
push
pushf
cmp
jle
pop
push
dec
(bad)
daa
and
push
aam
xor
sti
ret
fld
fdivr
inc
adc
inc
push
pusha
xor
pop
fst
sar
scas
and
or
jb
push
jns
dec
sub
aad
push
jmp
pop
dec
imul
mov
(bad)
out
mov
mov
and
cdq
div
ins
add
out
jp
push
sbb
call
or
xor
ins
mov
cmp
mov
fs
add
sbb
cmp
ins
cmc
mov
xor
js
sbb
sub
ret
push
pop
dec
push
je
xor
arpl
popa
mov
pop
arpl
dec
mov
fimul
scas
jp
sub
nop
pop
retf
mov
repnz
mov
adc
shl
scas
mov
arpl
sub
hlt
xchg
sti
bound
neg
rol
mov
inc
in
ins
cwde
or
and
cmp
outs
repz
dec
js
test
imul
lock
fxch
mov
cld
sbb
mov
xlat
dec
cmps
mov
push
jmp
mov
popf
ror
jno
inc
imul
fld
imul
xchg
pushf
xchg
stos
aaa
mov
inc
and
jl
sbb
pop
push
pusha
gs
xacquire
js
push
(bad)
clc
push
add
test
xor
data16
push
sub
mul
and
call
mov
lods
add
mov
repz
mov
mov
pop
pop
outs
or
push
jmp
push
in
(bad)
push
xchg
lock
mov
jmp
inc
cmps
sar
sahf
pusha
cmp
xchg
sbb
mov
mov
out
adc
mov
xchg
mov
mov
mov
jb
scas
jns
scas
popf
in
ficomp
sub
jmp
jns
in
out
sbb
push
jl
push
sub
les
(bad)
inc
fist
sub
pop
retf
mov
jecxz
popa
cmp
lea
push
mov
xor
jmp
xchg
dec
loope
outs
mov
stc
pop
cmp
test
inc
mov
jmp
(bad)
cmps
dec
popf
iret
hlt
cs
jbe
mov
pop
mov
push
pop
adc
jo
and
(bad)
xchg
(bad)
xor
push
fnstenv
mov
pushf
sub
stos
inc
push
jns
cmp
mov
lods
or
xchg
xchg
dec
out
sti
cmp
lds
daa
ret
mov
ds
add
in
jmp
dec
loop
gs
jge
xchg
push
adc
fld
test
push
mov
jns
mov
ss
push
(bad)
fnsave
scas
adc
sbb
popa
xor
and
jbe
sbb
sahf
aaa
pop
ins
mov
fld
jbe
lods
add
pusha
and
popf
cli
adc
retf
adc
lds
mov
fidiv
stos
cwde
fs
mov
pop
call
stos
ds
lods
sar
mov
iret
mov
add
cmp
mov
push
jp
mov
push
(bad)
xchg
add
add
mov
xchg
jmp
lods
into
das
inc
inc
sbb
mov
lea
(bad)
out
lods
into
(bad)
shr
retf
js
xchg
cmps
cmc
xor
add
xchg
dec
je
std
std
push
lods
or
daa
adc
pop
fstp
jge
push
xor
fmulp
push
add
mov
popf
in
outs
mov
rcr
adc
outs
xor
xor
push
scas
or
rol
jns
sub
int
pop
adc
adc
div
mov
out
jg
je
(bad)
cmc
repz
xchg
jbe
popf
cwde
jge
out
sbb
inc
xor
push
dec
mov
mov
adc
or
test
mov
jbe
jl
sbb
gs
int
(bad)
int
adc
stc
push
sub
mov
dec
xor
xchg
aad
bound
fistp
int3
imul
inc
cmp
dec
jnp
inc
rcl
mov
mov
push
and
jp
mov
out
sub
data16
cmp
loopne
and
mov
loope
mov
pop
inc
mov
pop
std
cdq
inc
xchg
mov
pusha
dec
jns
push
push
shr
jmp
cdq
cmp
or
es
mov
aam
add
mov
lahf
xchg
sar
inc
daa
push
fnstsw
imul
and
adc
ret
adc
pop
adc
and
sbb
add
push
fdivr
jns
icebp
inc
das
cmp
cli
mov
and
push
nop
or
fst
sar
mov
sbb
push
pop
nop
jmp
inc
lahf
ret
mov
in
mov
ret
(bad)
mov
sub
jb
xor
mov
mov
dec
popa
xchg
sar
rcl
retf
lock
or
push
xchg
hlt
lds
jb
xchg
scas
sub
aas
mov
stos
and
inc
dec
push
int3
inc
push
add
pop
idiv
shl
mov
sub
and
jle
mov
lock
add
jo
scas
xchg
mov
enter
out
lods
jl
out
arpl
xchg
shl
out
xor
xor
hlt
pop
test
dec
in
scas
in
pop
jo
test
scas
mov
dec
xchg
mov
cwde
lahf
scas
adc
sbb
loopne
sub
push
(bad)
js
jb
dec
push
mov
lds
xor
mov
mul
dec
sbb
out
ret
mov
sub
cmp
les
sbb
sbb
xor
mov
stc
(bad)
(bad)
test
mov
add
lock
inc
add
sub
xor
cmp
and
imul
xchg
rol
adc
xchg
xlat
sub
rol
loope
enter
test
aam
mov
add
lds
out
jb
call
arpl
cdq
push
mov
dec
mul
ror
sub
mov
ds
jnp
xchg
pop
ins
or
mov
xchg
out
jne
jmp
sbb
sub
loop
sub
xor
push
cli
push
movs
mov
popf
jne
mov
imul
stos
inc
pushf
loopne
mov
jg
cld
mov
push
adc
mov
adc
xchg
test
lock
xchg
bound
inc
cmc
fnstenv
add
add
push
or
or
outs
stos
rol
push
pop
repnz
addr16
imul
jge
add
dec
or
retf
test
scas
mov
xchg
mov
xor
inc
sbb
push
xchg
jbe
jbe
and
fisubr
mov
aaa
lock
or
(bad)
outs
push
xchg
ror
retf
sub
and
fwait
cmc
mov
sbb
jmp
popa
adc
into
das
pop
inc
and
cmp
mov
inc
(bad)
dec
pop
inc
xchg
mov
push
adc
jp
add
arpl
outs
add
sub
(bad)
test
inc
mov
mov
scas
jmp
data16
stos
mov
sbb
xchg
pushf
daa
push
mov
sbb
adc
xchg
adc
lock
(bad)
retf
out
enter
jno
dec
jmp
inc
mov
and
jmp
mov
cmp
pushf
cs
movs
xor
call
ret
test
inc
leave
(bad)
xchg
cld
and
aam
fs
paddsw
xchg
out
jmp
loop
int3
aad
sbb
shr
ror
fidivr
outs
pop
cmp
mov
pusha
in
xor
(bad)
inc
xchg
in
and
sub
or
and
rcl
or
call
jg
inc
shl
dec
jmp
fidiv
pop
sub
jecxz
adc
leave
xchg
xor
sbb
test
or
clc
js
ss
mov
mov
and
cmp
xchg
inc
jns
test
xrelease
lods
push
aaa
es
stos
enter
shl
shl
fs
ror
popa
hlt
xchg
es
push
or
sub
xchg
retf
xchg
adc
movntq
and
mov
imul
dec
lea
and
xchg
data16
test
inc
push
mov
movs
sub
pop
pop
fs
inc
in
add
and
push
push
and
aam
out
pop
fild
xor
stc
mov
dec
fstp
rcr
jmp
dec
push
(bad)
cld
aam
ja
ins
lds
inc
jae
mov
rcl
pop
fdiv
adc
enter
movs
dec
xchg
stos
test
outs
rcr
ins
sub
inc
test
pop
pop
repz
sbb
sbb
nop
(bad)
lock
jmp
cdq
es
push
jge
jecxz
jg
inc
pop
push
and
push
xor
xchg
cmc
out
enter
sbb
clc
lods
out
inc
mov
push
es
inc
stos
jns
sbb
push
stos
jbe
add
inc
push
dec
clc
std
push
mov
push
in
stc
loope
inc
sub
sub
and
add
arpl
dec
mov
int
mov
shl
and
test
movs
dec
pop
ret
dec
ret
add
push
or
ror
xchg
mov
inc
cmp
or
outs
ins
hlt
inc
retf
inc
cmp
xchg
inc
shl
sbb
push
xchg
push
bound
cmps
cmp
imul
jb
test
leave
rcl
test
retf
(bad)
jbe
push
sub
or
add
mov
cmp
push
and
fldcw
push
pop
fld
leave
rcl
jno
dec
mov
jne
fild
adc
jle
gs
mov
test
xchg
aad
xchg
in
ins
sub
mov
fwait
dec
mov
pop
pop
lea
loopne
inc
cwde
xor
in
mov
mov
jmp
sbb
test
ror
adc
inc
ret
jl
inc
sub
daa
xor
out
dec
cmc
pusha
fsub
test
fcmove
in
std
or
push
test
into
inc
push
aaa
mov
lahf
shr
mov
cmp
sbb
xor
inc
hlt
pop
cmc
jmp
(bad)
xchg
mul
out
sbb
mov
mov
add
movs
lods
jnp
mov
add
fs
jp
push
pop
xchg
push
mov
repz
jmp
and
mov
pusha
imul
fst
clc
inc
shl
cmps
cmp
add
sub
test
fcom
mov
mov
xor
sti
inc
mov
jmp
jb
imul
js
dec
mov
mov
push
lods
jnp
ds
add
out
aam
mov
dec
test
ret
ror
mov
lock
movs
or
xor
ins
rcr
xchg
xchg
mov
rcl
ret
add
xor
int
and
repnz
sbb
iret
pop
fimul
push
or
dec
or
shr
sbb
rcr
jmp
cmp
dec
scas
jl
add
pop
clc
jg
les
call
std
or
in
fisubr
movs
aad
aam
js
push
mov
daa
mov
xchg
jle
in
je
stc
push
cli
sub
xor
xchg
xchg
(bad)
adc
in
loopne
cmp
ss
pop
daa
and
mov
xchg
aas
jo
xchg
ins
mov
lods
or
sub
in
xlat
mov
cdq
add
dec
jne
(bad)
inc
push
xchg
inc
cmp
sti
pop
mov
mov
jg
fwait
das
inc
dec
gs
mov
dec
out
push
or
leave
mov
jb
sbb
cmp
aas
sub
in
mov
js
mov
xchg
out
dec
lds
jns
push
cdq
cmp
pop
add
aas
leave
mov
pop
dec
jecxz
push
rcr
aaa
jne
lahf
adc
popa
mov
mov
(bad)
fiadd
fidiv
loope
sbb
add
or
xchg
mov
xor
test
add
fld
orps
jmp
inc
cmp
sub
push
jle
shr
cmp
push
mov
jae
sub
sbb
retf
ins
pop
dec
test
sub
inc
test
in
lods
aas
fsubr
mov
inc
mov
mov
sahf
les
push
stos
jle
fst
(bad)
push
mov
cli
mov
push
inc
mov
mov
stos
inc
jmp
mov
in
stos
xor
xor
ret
sub
add
inc
mov
in
loope
sbb
jle
adc
stos
jbe
hlt
(bad)
pushf
rcr
aad
aad
mov
loopne
push
in
call
and
mov
push
(bad)
aas
pop
in
loopne
shl
push
pop
xchg
xlat
jnp
sbb
or
push
add
cmp
lods
in
aad
js
sbb
retf
neg
add
shufps
pop
call
xor
out
fisttp
inc
xchg
inc
jmp
push
adc
imul
loope
mov
(bad)
dec
loope
mov
fadd
lahf
int
repnz
aad
repz
stos
push
dec
fst
imul
cmp
add
popf
sub
imul
inc
inc
xchg
(bad)
cmp
jae
cdq
sub
pop
xchg
ins
pop
stc
popa
mov
(bad)
imul
repz
jg
mov
sub
push
inc
cmp
into
ins
in
lods
or
call
and
lock
or
pop
outs
mov
cmps
cmps
dec
jle
out
mov
test
inc
pop
shl
jnp
and
adc
test
pop
pop
ss
mov
or
std
ret
cmps
adc
imul
add
aas
push
inc
push
mov
in
ficom
dec
xchg
int3
mov
and
sub
adc
fstp
shl
pusha
(bad)
int
or
sub
call
arpl
or
clc
out
test
mov
lods
stc
add
and
jmp
xchg
or
int3
(bad)
sti
rcl
sub
pusha
fcomp
ss
popa
out
and
test
pop
clc
jecxz
test
cmp
push
repz
pop
aas
clc
mov
aaa
add
ret
xchg
stos
cwde
pop
push
pop
push
jge
into
mov
arpl
adc
push
popa
retf
inc
cmp
jbe
and
dec
scas
(bad)
aaa
mov
in
into
aas
mov
fiadd
mov
and
adc
mov
shl
dec
jo
outs
cmp
mov
clc
jb
jbe
dec
cmp
or
mov
pop
jo
jl
mov
pop
test
jne
dec
loopne
outs
lods
cmps
stc
test
pop
xor
jns
jae
mov
mov
pop
std
hlt
fimul
ror
inc
push
out
push
and
arpl
ret
movs
jbe
and
push
dec
jns
in
xor
adc
ret
pop
xchg
mov
inc
jae
sbb
sti
mov
xchg
fild
push
scas
cdq
pop
and
addr16
push
fadd
lds
xchg
adc
pop
imul
repnz
fdiv
xchg
movs
bound
fisttp
std
sar
in
test
fiadd
cs
mov
movs
dec
mov
dec
mov
call
in
and
ja
sub
fimul
jmp
test
sbb
mov
fild
mov
cmp
test
imul
lds
cmps
nop
push
sub
das
mov
pop
dec
add
add
ret
stos
cmp
and
mov
xchg
jp
mov
test
xor
push
sbb
dec
popa
mov
ins
push
(bad)
mov
(bad)
and
je
sbb
jle
pop
mov
out
jecxz
pop
cs
mov
fisttp
into
add
or
enter
(bad)
pop
dec
or
in
je
sbb
fbld
lock
dec
sti
sahf
xor
sbb
idiv
sub
adc
xlat
cli
xchg
mov
daa
fidiv
xchg
mov
mov
test
in
dec
xor
scas
fnsave
popf
arpl
pop
in
push
aam
or
shr
pushf
sti
push
into
cmp
movs
add
ins
jno
in
mov
test
retf
out
adc
dec
test
(bad)
cs
xlat
push
pop
mov
jge
lahf
out
jnp
push
push
lea
push
pop
cmp
xchg
xchg
and
(bad)
mov
jmp
mov
jbe
sub
pop
retf
inc
lods
gs
push
aad
aaa
cdq
sub
repnz
movs
cli
in
sub
sar
shr
fcmovnu
jecxz
hlt
inc
cmovs
into
les
shl
mov
call
jge
xlat
sbb
add
cmps
mov
fs
jb
mov
and
add
mov
shl
jne
fadd
adc
mov
dec
jmp
sub
(bad)
stc
jne
xchg
in
call
mov
out
jbe
ret
ret
sbb
or
pop
ficomp
ror
push
push
mov
xchg
fimul
lods
and
(bad)
xchg
lods
ret
sub
icebp
jmp
fisub
and
mov
(bad)
pop
aam
pop
push
mov
push
cmp
loopne
sbb
mov
sti
xor
popf
jmp
jge
outs
jle
lods
in
in
sub
into
jns
ss
sbb
lahf
dec
pusha
ins
fwait
mov
sub
gs
add
cwde
shr
push
into
dec
xchg
sub
mov
(bad)
mov
push
das
mov
cmp
jnp
mov
xor
jp
xchg
adc
lds
sbb
push
(bad)
sahf
outs
push
ss
popa
mov
jmp
xor
inc
and
scas
(bad)
push
inc
pop
int3
movs
mov
js
aaa
or
rcr
add
sub
pop
ret
xchg
cwde
rol
call
jnp
mov
cdq
xchg
int3
add
add
repnz
fstp
fist
jbe
pop
and
fwait
mov
jae
push
jg
xor
das
jecxz
lahf
sub
inc
xlat
fst
test
iret
mov
jne
mov
ja
inc
pop
push
jmp
jl
loopne
xor
pop
lds
sub
out
add
push
ret
mov
enter
mov
(bad)
arpl
mov
jns
mov
mov
mov
add
cmp
push
in
shl
inc
(bad)
leave
push
sahf
(bad)
pushf
adc
push
xchg
ret
mov
jb
out
xchg
push
retf
pop
into
call
add
outs
(bad)
mov
push
cmp
imul
push
xchg
mov
pop
add
add
cmp
imul
cs
and
jge
lods
mov
out
das
std
dec
aaa
aas
push
inc
into
and
ret
or
ss
push
pop
xor
repz
mov
arpl
xchg
xor
and
xchg
jne
aaa
rcl
xor
jecxz
pop
sbb
mov
sbb
les
push
inc
inc
mov
and
je
dec
mov
add
or
test
cmc
xor
pop
pop
and
mov
xchg
fwait
jecxz
into
aam
cmp
dec
mov
or
mov
sub
fdiv
cmp
pop
pusha
in
mov
add
lds
inc
jae
cwde
gs
or
mov
xor
ds
and
(bad)
push
(bad)
test
cdq
jecxz
mov
xchg
cmp
jp
int
aad
arpl
not
pushf
push
sbb
pop
xchg
in
push
jne
ret
std
push
mov
cs
ret
in
xchg
std
(bad)
dec
push
ss
push
mov
mov
aas
adc
sub
sahf
push
cmc
iret
icebp
pop
and
sub
iret
rcl
ret
or
neg
cmp
ror
cmp
nop
add
add
xor
fdiv
xchg
sub
adc
data16
push
aam
mov
pop
sbb
jle
inc
call
fldcw
pop
xor
mov
mov
jl
inc
ret
into
iret
inc
cmp
sbb
or
mov
xchg
xchg
cld
mov
xor
push
add
jg
aas
fwait
adc
aam
mov
xchg
push
dec
xor
sub
or
aam
loopne
retf
and
outs
mov
xchg
sbb
cmp
movs
repnz
and
push
inc
enter
(bad)
stc
dec
xchg
xchg
push
rcl
rol
iret
or
jo
lea
jo
mov
pop
ret
jmp
inc
stos
cmp
ret
add
test
ins
mov
cli
mov
loopne
mov
(bad)
mov
punpcklwd
sub
pop
cmps
hlt
leave
and
ss
dec
mov
inc
cmp
sub
mov
xor
cmc
lahf
push
xlat
call
jmp
cmp
ficomp
push
aas
adc
sbb
mov
mul
mov
adc
push
daa
pop
cmp
hlt
mov
xor
cmp
xchg
xchg
xlat
xchg
and
dec
cdq
mov
scas
lds
jg
cmps
or
push
stos
sbb
cmp
fcom
add
scas
sbb
adc
sub
or
popf
or
ret
ror
xchg
ret
mov
lea
ja
mov
inc
jp
sbb
(bad)
xor
xlat
push
pop
inc
dec
test
mov
loope
lahf
cli
inc
sbb
mov
pop
push
rcl
mov
jl
jbe
sti
pusha
inc
into
mov
(bad)
inc
aam
enter
cld
dec
push
pop
add
mov
pop
xchg
jp
jge
mov
mov
in
cdq
pop
ds
rol
std
jo
mov
mov
add
stc
mov
mov
pop
or
fnsave
(bad)
pop
dec
mov
cmp
mov
xor
mov
jp
sar
xchg
cli
sub
bound
lock
dec
xor
mov
add
shl
movs
outs
out
mov
dec
mov
push
cmc
(bad)
xor
push
jge
out
into
adc
sbb
in
cmp
xor
inc
arpl
mov
nop
jl
repnz
push
push
xor
ins
pop
dec
(bad)
inc
inc
pop
mov
scas
xchg
add
sbb
ins
sbb
pop
repnz
(bad)
jnp
in
int3
mov
inc
mov
push
xor
sbb
aam
push
ds
jmp
test
jb
push
ins
push
cmp
repz
push
xor
test
or
mov
and
or
inc
adc
mov
mov
mov
xlat
cmp
test
sbb
neg
sbb
mov
les
jl
push
adc
in
repnz
out
bound
adc
xchg
outs
pop
in
stc
xchg
jp
xor
push
jnp
sbb
mov
xchg
in
dec
js
push
nop
inc
leave
idiv
inc
inc
pop
sbb
popa
or
add
pop
scas
movs
sahf
fcom
in
xchg
aad
hlt
(bad)
hlt
out
inc
mov
xchg
pop
scas
mov
xchg
cmc
mov
(bad)
push
imul
dec
es
jns
nop
scas
ins
and
fstp
jecxz
fwait
inc
xor
arpl
xor
test
jle
inc
bound
mov
xor
ja
push
mov
test
inc
mov
cdq
out
pop
cs
jne
sub
sub
jmp
out
xor
or
mov
inc
stos
sub
pop
aad
mov
fwait
lea
outs
xor
shr
sbb
xor
sbb
lds
jb
mov
xor
cmp
aad
popf
mov
stos
sub
or
mov
xchg
xchg
jbe
aas
dec
mov
mov
dec
popf
xor
push
dec
dec
or
inc
out
jp
xchg
out
push
sahf
cmps
cmp
jmp
pop
add
int
or
pop
xor
jg
sub
dec
fisub
or
xor
sbb
lea
inc
xchg
or
arpl
push
test
fadd
je
out
dec
pop
std
les
pop
pop
jge
push
retf
and
outs
xchg
rol
inc
arpl
test
clc
or
xchg
sub
fsubr
cmp
xchg
xor
test
mov
out
push
xchg
mov
cmp
dec
ins
or
pop
call
test
scas
(bad)
icebp
mov
rcl
jmp
cmc
scas
sar
scas
inc
mov
fmulp
gs
mov
(bad)
lds
xchg
cmp
test
stos
ins
sbb
in
clc
(bad)
inc
leave
xor
jnp
outs
xor
aaa
imul
cwde
push
movs
and
rcr
jl
push
push
dec
push
int3
out
cmp
rcl
push
xor
mov
lods
dec
sub
sub
sub
out
adc
inc
and
mov
cwde
pop
test
jle
and
test
scas
pop
int
nop
jno
addr16
bnd
dec
ret
push
test
mov
outs
sahf
dec
ret
and
and
test
adc
out
stc
stos
mov
das
lods
cs
mov
mov
adc
mov
lds
(bad)
scas
jo
sub
hlt
sub
cmp
repz
lea
mov
fld
jmp
cli
retf
jbe
(bad)
aam
fistp
repnz
adc
cmp
div
mov
or
cwde
bnd
outs
jb
xor
push
mov
int3
es
lods
lds
jmp
mov
mul
pop
ins
mov
jecxz
in
out
mov
push
jo
loopne
jle
and
lahf
aas
mov
xchg
and
fnstcw
mov
test
dec
push
out
outs
and
fsub
jns
lds
push
mov
mov
push
mov
nop
dec
imul
push
out
xlat
imul
les
rcr
stos
cmp
xchg
mov
push
fild
jbe
push
in
adc
xor
adc
(bad)
test
dec
fcmovu
fdivr
frstor
or
ja
aam
rcr
loop
(bad)
mov
xchg
fidiv
and
xchg
cmp
xchg
sbb
mov
inc
mov
daa
dec
in
fdivrp
xor
ins
inc
jmp
int
mov
jg
xlat
repnz
jl
ja
out
enter
mov
aas
repz
scas
mov
pushf
mov
xchg
adc
repz
hlt
xchg
dec
or
pop
jno
pusha
and
dec
out
out
jg
nop
adc
hlt
sub
movs
push
xor
jge
data16
mov
sub
sub
sub
push
lods
dec
sub
cmp
push
mov
jge
pusha
mov
(bad)
pop
mov
or
jno
pushf
(bad)
mov
pop
add
jne
mov
je
push
mov
inc
jmp
dec
mov
fwait
movs
xor
and
sbb
push
push
in
xor
add
in
jae
add
cwde
jbe
sub
and
scas
cmovb
push
cmp
cmp
loop
mov
push
jg
push
dec
cmp
pop
mov
es
pop
mov
mov
fbstp
rol
test
cmp
(bad)
sti
pop
mov
jp
rol
int3
neg
lahf
shl
fdivr
sub
rol
mov
mov
xor
dec
(bad)
adc
cmp
jl
adc
xchg
scas
enter
xor
add
dec
push
arpl
mov
in
jo
sbb
(bad)
mov
lock
leave
push
jbe
sub
jmp
bound
shr
mov
dec
aas
in
lahf
movs
es
out
adc
jle
mov
add
ins
sbb
ret
sti
pop
add
nop
(bad)
push
cli
leave
(bad)
mov
imul
mov
mov
test
mov
cmp
sbb
sbb
mov
popf
fs
loope
mov
js
sbb
imul
cmps
addr16
push
hlt
cmps
jl
xor
movs
shl
into
data16
mov
xchg
inc
mov
pop
cmp
jg
mov
out
lock
cli
stos
jecxz
in
push
popf
popa
fwait
xor
inc
sub
rcl
xchg
mov
loopne
test
dec
fimul
or
dec
mov
or
fidivr
jnp
xor
daa
pop
int
pop
mov
mov
mov
ins
enter
test
ja
pusha
jo
in
or
out
sahf
mov
adc
lods
shr
jb
sub
in
jnp
adc
or
icebp
(bad)
in
jg
mov
xor
or
push
adc
sar
add
fadd
push
adc
xor
push
ss
push
fnsave
addr16
pushf
fidivr
(bad)
cmp
mov
pop
mov
hlt
dec
pop
xchg
adc
push
retf
xor
dec
jbe
ficomp
adc
sub
xor
cmp
or
leave
test
retf
inc
test
movs
loop
xchg
fdivr
xchg
repz
xor
das
add
push
inc
jp
dec
sub
ror
inc
push
ret
in
pop
in
ror
dec
test
les
add
push
sbb
ja
mov
scas
not
add
ja
dec
loopne
test
neg
lods
out
adc
and
mov
shr
push
lock
xor
std
xor
into
sub
movs
not
out
xor
mov
xchg
dec
iret
cdq
jne
adc
cmp
xchg
dec
mov
test
sub
enter
xor
mov
and
retf
jo
leave
jo
mov
xor
das
push
mov
pop
in
xchg
imul
ss
and
mov
pop
or
inc
pop
or
mov
loopne
jae
es
pop
pop
or
repnz
aam
jne
xor
adc
aad
or
or
mov
sar
das
nop
jl
pop
(bad)
jmp
leave
nop
xchg
and
push
pop
out
cs
loop
pushf
jno
loopne
and
sub
adc
mov
ins
mov
in
xor
shl
imul
in
lock
xchg
les
lods
xchg
fxam
cli
clc
imul
mov
jl
push
jp
mov
xchg
enter
mov
jecxz
out
iret
inc
jne
sub
xor
xchg
jmp
(bad)
and
(bad)
pop
cmps
add
add
in
int3
in
pop
cmp
or
jne
jmp
jnp
jb
mov
aam
or
sbb
xchg
mov
ins
jno
mov
jle
retf
leave
icebp
xchg
mov
mov
ja
mov
ret
add
and
sbb
push
test
scas
out
ja
jg
or
out
xlat
retf
mov
sti
cdq
inc
mov
repnz
sbb
sbb
xor
pop
cwde
clc
cmp
fsub
mov
dec
test
icebp
jg
js
clc
fimul
in
mov
mov
and
iret
push
sub
ins
mov
mov
ficom
or
jge
dec
lods
jne
fwait
in
jnp
xor
cli
test
fsub
clc
add
add
ficomp
sbb
mov
cmp
pop
dec
mov
sahf
xlat
mov
clc
pop
daa
aas
outs
movs
add
dec
jg
mov
or
push
scas
jns
idiv
icebp
rcl
ror
push
adc
das
mov
(bad)
dec
cld
js
sub
inc
stos
loop
inc
sub
stos
mov
inc
fcmovnb
jb
mov
sub
rcr
xor
out
test
mov
mov
(bad)
in
mov
push
mov
mov
aad
dec
fadd
cwde
inc
int3
push
repz
out
mov
jae
inc
in
lock
cwde
mov
idiv
xchg
dec
cli
xlat
mov
retf
or
rcr
(bad)
sbb
jmp
xchg
test
ins
jns
xor
iret
fdiv
fidiv
mov
cmp
popf
push
ins
mov
enter
ret
and
mov
pop
std
pop
inc
pop
cmp
scas
pusha
aas
fwait
mov
test
out
in
mov
ret
bnd
jmp
mov
dec
ret
inc
cmps
sbb
dec
sub
in
jecxz
xor
clc
xchg
rcl
inc
scas
pop
adc
jmp
ficom
mov
pop
in
cli
pop
in
xchg
push
and
lds
(bad)
aam
fnsave
out
or
shl
ja
push
addr16
inc
dec
push
cmp
cmp
adc
inc
cwde
ins
popa
repz
loope
lahf
ins
sbb
popa
or
sub
jo
lods
xchg
rcr
push
adc
mov
pop
mov
jo
std
cmps
mov
test
dec
int3
stos
(bad)
or
cmp
mov
mov
shl
jno
femms
dec
adc
stc
cs
sbb
push
loopne
push
mov
(bad)
pop
dec
cdq
psubb
test
push
xor
dec
dec
sti
inc
loopne
call
data16
jae
int3
and
sub
add
mov
cmp
mov
or
sub
or
mov
add
cmp
int3
push
push
mov
push
or
sub
dec
jo
loope
mov
push
in
mov
add
jle
or
sar
test
nop
(bad)
pop
in
cmp
rcl
fisubr
icebp
cwde
add
push
fnsave
dec
fwait
inc
cmove
jp
in
js
mov
popf
imul
mov
push
pop
mov
(bad)
pop
out
jle
adc
loop
(bad)
ds
lock
add
xchg
hlt
cmp
and
xor
or
inc
fdiv
mov
das
push
push
call
xor
aaa
dec
cmp
mov
js
out
inc
outs
sub
jnp
retf
shl
test
rol
lods
mov
and
and
mov
pop
adc
dec
push
mov
loopne
loop
inc
sub
fwait
or
ror
(bad)
popa
popf
pop
fnstcw
mov
mov
mov
inc
push
push
mov
mov
(bad)
movs
pop
dec
int3
or
and
cmove
push
dec
(bad)
cvtpi2ps
and
push
mov
pop
dec
and
inc
test
ret
nop
sbb
jno
lods
inc
xchg
fstp
loopne
push
mov
or
inc
xchg
enter
cmp
arpl
jp
lahf
scas
adc
aam
aas
popf
les
push
cld
ret
rcl
in
inc
jle
dec
or
sbb
mov
arpl
push
jge
ja
pop
lods
pusha
aaa
out
cmps
adc
jp
mov
mov
pop
mov
push
jmp
bound
xor
push
sub
and
xor
imul
jmp
cmp
jb
fdiv
or
mov
pop
bound
inc
int
push
les
jb
popa
add
sbb
xchg
loope
cmp
add
scas
cmp
or
jne
out
iret
push
loopne
daa
lods
sbb
pop
movs
call
cmp
rcr
loop
fisub
mov
mov
das
sbb
push
xor
out
sbb
shl
je
in
setnp
adc
push
rol
sbb
jecxz
dec
push
pushf
in
out
adc
scas
enter
xchg
test
sub
jb
xor
cmc
mov
dec
jl
pop
pop
lahf
fsubrp
in
push
paddd
sbb
popa
jle
jns
cs
xchg
retf
shl
jno
nop
dec
mov
push
xchg
into
sub
dec
xor
out
pushf
cmp
pop
lahf
das
enter
int
imul
ja
pop
or
out
icebp
pop
idiv
mov
cmps
mov
mov
dec
adc
(bad)
test
or
fcmovnb
dec
dec
and
jnp
in
adc
jl
adc
push
jbe
push
(bad)
in
mov
and
repz
xchg
pop
lock
test
push
jmp
mov
repnz
loope
jle
daa
das
xchg
adc
mov
jmp
cmp
mov
inc
pop
les
inc
mov
pop
out
out
pop
(bad)
push
inc
shr
imul
and
xor
push
stos
popf
jmp
dec
stc
xchg
ds
xchg
cmp
and
sbb
xor
push
xor
push
inc
xor
cmp
xchg
dec
adc
lock
pop
inc
sbb
adc
jl
sub
sbb
jmp
(bad)
arpl
add
mov
pop
iret
int3
pushf
xchg
rcl
sub
iret
stc
aaa
(bad)
push
add
dec
xchg
aaa
push
sub
mov
clc
dec
sub
out
sbb
clc
and
idiv
cmps
mov
stos
sub
sub
outs
gs
add
in
jmp
inc
push
pop
ret
mov
adc
mov
aas
mov
mov
std
or
fdiv
sahf
pop
mov
ror
jne
daa
jno
jno
dec
or
adc
inc
shl
sbb
je
outs
test
xchg
ja
sbb
call
jno
clc
sub
aam
and
xor
or
in
aad
popf
loop
dec
retf
imul
cmp
jge
adc
or
shld
cwde
mov
leave
xchg
int3
jmp
test
stc
cld
mov
or
sub
sub
push
mov
arpl
push
stos
leave
push
add
retf
bound
mov
fst
int
xchg
dec
adc
add
cmp
ins
inc
cmp
in
sbb
pop
inc
or
jp
pop
sbb
dec
jle
cmps
sahf
enter
js
mov
or
nop
ret
jp
cmp
scas
add
pusha
xchg
cmp
sub
mov
xor
push
xlat
les
sti
sbb
lock
hlt
out
push
adc
adc
add
test
fs
fcomp
call
xlat
pop
mov
int3
(bad)
inc
cwde
mov
ret
lods
scas
mov
sahf
int3
inc
(bad)
(bad)
cmp
loop
jecxz
addr16
or
xor
push
xor
mov
jo
aad
lahf
mov
call
push
js
loopne
mov
std
jo
ds
jo
bound
cmp
loop
das
and
loope
mov
cs
dec
ds
sbb
jge
aad
jge
mov
test
inc
imul
pop
dec
jle
mov
adc
bnd
cs
push
std
dec
xor
lods
mov
lea
or
mov
pop
add
add
jnp
add
(bad)
out
test
out
push
(bad)
xor
aad
jns
call
popa
std
add
dec
jne
out
into
pop
mov
inc
jmp
out
in
sub
add
xchg
xchg
jmp
jle
pop
mov
icebp
xchg
imul
test
mov
xchg
in
or
out
add
inc
inc
inc
pop
xor
push
cwde
fisubr
cmps
mov
add
shl
and
jecxz
fld
(bad)
mov
xchg
mov
cmps
push
push
movs
adc
icebp
retf
nop
(bad)
sbb
test
ror
and
pop
and
pop
test
or
jb
out
mov
popf
cmc
das
inc
mov
je
(bad)
or
sbb
push
pusha
xchg
leave
loope
sti
fsub
or
cmps
cmp
out
jae
mov
xor
mov
int3
sbb
repz
out
test
xchg
push
and
xor
test
fst
popf
inc
loope
jecxz
aaa
aaa
adc
dec
push
or
aam
or
pop
push
sbb
mov
cmp
mov
scas
pop
popf
hlt
xchg
inc
lods
scas
sbb
jb
push
aaa
cmp
push
adc
xor
pop
add
push
sar
out
ror
inc
clc
fdivr
std
js
pop
(bad)
mov
mov
pop
lock
(bad)
bound
enter
cmp
or
lahf
(bad)
lods
mov
das
cmp
jae
jo
and
dec
out
test
or
mov
pop
mov
sub
pop
pop
gs
test
ins
rol
push
and
scas
pop
xchg
aaa
(bad)
movs
(bad)
cmp
cwde
test
adc
mov
mov
pop
mov
(bad)
jmp
gs
rcr
div
xor
mov
out
sbb
and
and
inc
push
retf
mov
pop
out
es
mov
adc
push
pop
and
cmp
outs
xor
xchg
jge
jmp
(bad)
out
stos
dec
fucomp
jb
aam
sbb
cdq
jmp
push
mov
push
cdq
arpl
int3
xchg
mov
xchg
add
sub
daa
jne
dec
loope
das
push
movs
stos
adc
xchg
repz
(bad)
test
xor
cmp
push
ins
fild
in
mov
jb
mov
imul
mov
jle
cli
sbb
int
scas
jmp
mov
pop
or
inc
je
gs
xchg
fdiv
xlat
xor
cdq
in
fwait
inc
fist
jmp
ja
movs
dec
pusha
dec
les
ins
shl
pop
pop
pop
ds
sbb
int3
fstp
xchg
pop
lods
adc
jecxz
push
push
fstp
shl
or
and
inc
inc
lock
jno
inc
dec
mov
pop
mov
mov
jecxz
inc
addr16
loope
outs
getsec
mov
or
xchg
adc
jecxz
and
jbe
mov
dec
add
push
pop
jnp
out
ror
retf
ret
sbb
mov
lods
scas
call
test
sbb
shl
and
and
inc
push
fimul
in
jbe
add
nop
mov
xchg
leave
mov
xchg
in
and
cmp
mov
movs
dec
dec
xchg
sbb
bound
pusha
add
loop
pushf
sub
and
fs
cmovg
push
inc
push
cmps
inc
iret
cmps
inc
pusha
xor
jl
push
call
and
iret
jecxz
in
mov
sahf
data16
clc
jo
ret
cmp
mov
cmp
mov
sbb
scas
mov
loop
out
call
add
mov
xchg
fiadd
cs
sbb
push
xor
jle
push
jnp
jle
jmp
mov
sti
(bad)
arpl
push
inc
mov
jno
fdivr
mov
cmc
xor
add
sub
mov
clc
jge
or
push
mov
mov
or
jp
vmwrite
imul
add
loope
mov
sub
dec
mov
(bad)
loopne
sti
jae
or
mov
js
je
gs
das
icebp
les
les
mov
xor
jns
push
test
scas
pop
sub
std
(bad)
pop
xchg
data16
jle
and
(bad)
inc
dec
mov
fmul
pop
dec
sub
aad
pop
push
cmps
into
pop
lahf
mov
and
in
movs
pop
out
cmp
repnz
dec
jmp
loop
pop
scas
mov
push
sbb
pushf
pop
fnstenv
sar
ins
fst
int3
sti
loopne
mov
pop
inc
xchg
pop
nop
and
dec
std
adc
imul
test
in
iretw
push
mov
jg
mov
jae
shl
ror
test
mov
cmp
out
sub
in
and
(bad)
xlat
outs
add
push
xor
aas
add
(bad)
cs
cmps
js
sub
inc
imul
in
dec
in
test
fistp
aas
popf
mov
xor
push
mov
jmp
sar
mov
ret
sti
sti
stos
(bad)
outs
stos
ds
mov
ret
adc
inc
or
fistp
push
dec
dec
mov
outs
cmp
nop
cmp
xchg
aad
push
xchg
fwait
sub
jg
aam
fstp
imul
(bad)
xlat
push
and
into
jb
and
imul
or
jecxz
test
fwait
mov
test
xor
dec
repz
jge
test
aas
in
mov
jge
mov
fidiv
shl
pushf
cmp
cmp
(bad)
hlt
loop
cmp
stos
push
pushf
stos
pop
data16
mov
jns
mov
sar
xchg
(bad)
dec
jbe
in
sub
inc
daa
stc
or
xchg
xchg
movs
dec
cmp
add
shl
xor
cwde
cld
adc
mov
iret
push
jae
sub
push
pop
outs
sbb
les
das
imul
and
push
push
pop
pop
popa
xchg
mov
stos
jp
pop
or
mov
gs
sub
lods
dec
push
sbb
pop
call
mov
imul
xchg
mov
sub
aam
add
mov
shl
and
mov
in
adc
imul
mov
scas
int3
jnp
imul
rcl
movs
mov
jnp
jne
jge
pushf
fwait
mov
jnp
movs
rcr
popf
cs
mov
jns
jo
jmp
in
data16
(bad)
sbb
std
sbb
jo
outs
xor
and
inc
jle
in
not
jle
sbb
xchg
pop
push
cmps
sbb
test
xor
sti
or
mov
inc
sub
nop
inc
out
int3
fst
sbb
xlat
add
ja
lods
in
je
fsubp
daa
lods
out
(bad)
dec
add
xchg
mov
loop
pop
ja
(bad)
sbb
std
cmp
mov
xor
inc
xchg
in
out
or
inc
lds
loop
call
pusha
outs
mov
rol
sahf
popf
adc
and
cmps
sbb
call
jge
ret
add
push
cwde
popf
xchg
(bad)
xor
pop
aam
mov
mov
dec
popa
test
mov
sbb
(bad)
sahf
xor
sub
stc
pop
repz
sbb
add
stos
imul
ret
pop
jle
xlat
hlt
hlt
clc
inc
(bad)
(bad)
xor
cwde
jmp
push
inc
push
lods
sbb
fisttp
xor
outs
test
jcxz
(bad)
and
(bad)
loopne
jecxz
mov
jne
mov
adc
(bad)
jb
jo
aam
sub
xor
arpl
xlat
leave
out
scas
shl
mov
(bad)
adc
adc
repz
and
pop
jmp
lahf
rol
cmps
or
add
mov
ret
push
adc
addr16
and
mov
ss
and
jmp
stc
push
mov
inc
add
sub
sbb
js
and
retf
into
div
mov
pusha
and
cmp
add
mov
in
rcl
mov
or
add
mov
leave
std
cld
dec
sahf
xor
inc
xchg
xchg
xor
retf
and
movs
mov
std
pushf
fwait
ret
jp
mov
pop
or
xchg
scas
leave
data16
test
hlt
test
mov
dec
sahf
mov
dec
add
icebp
cld
add
fcom
pop
fiadd
fcmovnb
ror
xlat
test
or
scas
pop
loop
mov
pop
in
xchg
ins
pop
cmp
mov
lahf
loope
out
sub
test
mov
push
call
retf
mov
fcmovnb
and
lahf
or
ins
mov
(bad)
jmp
stos
movs
xchg
shl
xchg
outs
loopne
jns
addr16
test
mov
pushf
out
es
push
adc
loope
cmp
mov
(bad)
mov
adc
iret
ret
add
cdq
inc
cmps
adc
mov
sbb
pop
jbe
imul
mov
push
xchg
push
out
jl
cdq
loop
ds
shufps
stos
push
pop
xchg
xchg
loope
cwde
push
jg
jbe
cs
jbe
pop
push
ins
jno
and
inc
jecxz
jge
mov
sti
dec
daa
in
fcomp
popf
jno
mov
pop
shl
or
and
es
loopne
cdq
jmp
and
stos
mov
push
out
and
cdq
add
adc
(bad)
jbe
xchg
adc
fidivr
cmps
and
add
mov
inc
arpl
cdq
add
or
sar
mov
out
stc
jp
inc
mov
mov
nop
push
mov
jmp
jmp
pusha
mov
dec
popa
mov
mov
cli
movs
xchg
not
dec
sbb
add
sub
dec
jge
int
movs
xchg
xor
add
stos
outs
pop
pop
jmp
mov
push
movs
mov
lods
sub
bound
dec
in
mov
dec
(bad)
sbb
mov
xchg
sbb
xchg
jl
jmp
dec
push
mov
bound
adc
aad
jp
mov
sub
push
mov
jb
jae
inc
imul
mov
test
scas
sar
jle
pop
mov
pop
popf
sbb
fmul
jb
push
cmc
pop
dec
or
dec
cmps
stos
jno
in
mov
mov
xor
cld
aaa
jbe
popf
pop
data16
cld
bound
mov
gs
das
mov
pop
int3
inc
jmp
(bad)
in
test
dec
pusha
or
outs
sub
sar
jo
loop
sub
mov
jp
xchg
cli
rcr
das
in
jl
add
pop
lods
(bad)
sar
adc
adc
retf
retf
cmps
sub
aaa
out
sbb
sub
xlat
sub
add
stc
les
das
and
jl
cmp
test
in
mov
sub
into
movs
add
xchg
(bad)
clc
xchg
sahf
hlt
(bad)
sti
stc
pop
neg
mov
enter
enter
xor
jmp
mov
pop
imul
xor
shl
inc
(bad)
cld
test
(bad)
int
retf
pop
mov
mov
movs
mov
mov
push
call
jne
push
push
cli
sar
mov
test
jo
jae
inc
push
mov
sub
sbb
add
dec
sbb
cdq
mov
add
push
xor
sbb
mov
movs
sub
jle
sbb
or
push
leave
sbb
xcrypt-ofb
cmps
sub
movs
push
(bad)
inc
imul
bound
pop
gs
ja
inc
pop
and
adc
cmp
push
(bad)
cwde
daa
sahf
xchg
sbb
push
mov
arpl
dec
jge
in
push
push
and
inc
pop
sar
inc
mov
push
cmp
mov
jae
xor
sub
jb
ret
sub
push
xor
or
jns
ror
sbb
test
or
call
fisubr
sub
(bad)
xchg
imul
aad
inc
cmp
sar
cmps
pop
push
push
repnz
test
les
jns
xor
mov
in
(bad)
leave
pusha
jmp
mov
inc
jmp
out
icebp
jle
scas
cdq
cmps
repnz
sbb
cmps
mov
popf
add
xor
dec
mov
xchg
dec
push
add
call
(bad)
mov
in
(bad)
dec
push
pop
lods
inc
xchg
jno
push
sbb
sbb
cwde
mov
fcom
imul
cmp
cdq
and
add
aas
gs
das
xchg
mov
cld
adc
inc
fld
pop
fld
mov
cmps
push
call
repnz
(bad)
jmp
xchg
sbb
sbb
stos
stc
(bad)
mov
in
ins
push
repnz
int3
call
xchg
jecxz
mov
jp
jb
inc
leave
outs
xchg
jl
xchg
aaa
clc
hlt
mov
mov
sbb
sub
push
push
cmp
jbe
mov
call
jle
pop
push
shr
lock
shl
and
fs
iret
inc
retf
xchg
leave
and
xchg
and
xchg
xor
test
data16
or
pop
xchg
dec
jmp
(bad)
in
add
ja
inc
shl
movs
push
int
sbb
vpunpckhqdq
ss
addr16
sub
or
adc
xor
and
jl
hlt
inc
mov
fs
sbb
loope
sub
and
mov
aas
cmp
mov
in
mov
ss
clc
jbe
enter
ret
push
jecxz
shl
and
cmp
test
das
xchg
popa
and
jo
or
js
jl
pop
repz
adc
int3
stos
sub
or
in
js
cmp
sub
cmp
mov
mov
and
xor
push
adc
adc
push
xor
mov
inc
bound
mov
(bad)
fimul
mov
mov
mov
ror
and
and
jecxz
and
ror
cmp
ins
stos
ds
ss
adc
inc
push
sub
jmp
xchg
call
daa
movs
dec
cdq
pop
xchg
mul
out
dec
cld
(bad)
mov
dec
jbe
int3
out
stos
clc
out
mov
push
lods
mov
mov
jecxz
xor
xor
mov
nop
mov
js
sbb
aas
mov
cmp
pop
lods
cli
adc
fisub
pop
(bad)
sub
or
arpl
push
into
jns
icebp
xchg
out
or
xor
jg
fisttp
mov
stc
add
xor
out
push
and
mov
ja
sar
iret
aad
movs
(bad)
sub
push
retf
sar
daa
out
jae
mov
nop
in
adc
ins
adc
into
ja
stc
loope
add
or
shr
xor
lods
je
outs
push
lock
ror
jmp
cdq
int3
cli
jg
push
xchg
enter
outs
jnp
inc
aad
pop
jge
ins
adc
retf
xchg
out
fmul
mov
mov
adc
call
inc
cmp
nop
inc
(bad)
jmp
jecxz
cmp
sbb
stos
mov
dec
xchg
adc
call
into
adc
push
push
ret
adc
fnstsw
jmp
pop
inc
pop
dec
xlat
mov
adc
dec
rol
and
mov
adc
mov
(bad)
int
pop
stc
jmp
and
retf
sbb
add
fsub
hlt
add
adc
ins
sub
mov
aaa
xlat
mov
dec
mov
mov
mov
je
mov
cmc
lods
jmp
and
mov
sub
ret
repnz
push
enter
xor
ds
daa
add
ficom
repnz
mov
retf
sbb
imul
push
pop
fisub
aam
ret
adc
in
aaa
pop
std
jns
push
enter
int
sub
cmc
cs
retf
ret
js
dec
cs
pop
aas
push
or
test
sahf
stos
cs
iret
xor
leave
push
imul
loopne
mov
push
(bad)
ins
cdq
fcomp
aaa
ss
xchg
pop
mov
or
mov
cmp
dec
jnp
jg
jge
aas
repz
int3
pop
dec
xchg
xor
imul
mov
fxam
mov
inc
loop
and
ins
add
out
xlat
xor
jo
(bad)
shl
sub
test
xchg
push
arpl
addr16
dec
outs
jb
mov
out
xor
jge
inc
cmp
pop
mov
cmc
es
inc
mov
inc
iret
imul
and
pop
or
or
cdq
push
add
inc
cmp
xor
adc
push
cwde
popf
adc
mov
cmp
push
pop
pop
daa
sub
mov
ds
imul
lahf
popf
test
sbb
xor
(bad)
sbb
adc
andnps
mov
sbb
test
fs
push
add
sbb
add
mov
push
shl
loop
jns
jae
dec
and
mov
fist
jl
add
pop
jle
movs
cmp
push
jp
cmps
dec
inc
leave
add
repz
and
iret
xor
add
ins
es
(bad)
out
sub
cs
mov
sub
fcom
in
inc
inc
jmp
cmp
leave
cwde
jns
push
cld
sub
or
push
fadd
dec
cmp
mov
rol
xchg
shr
(bad)
shl
out
fsubrp
pushf
add
and
mov
loope
stc
ja
fdivp
jne
nop
int
adc
lock
sub
pop
mov
(bad)
or
xor
add
sar
dec
enter
add
std
xchg
adc
std
add
pop
inc
repnz
jns
dec
js
mov
out
mov
cmp
sub
pop
mov
sti
inc
mov
mov
punpcklbw
cmp
dec
lods
lods
sub
inc
jb
(bad)
mov
outs
dec
loope
jecxz
int
xchg
and
xchg
xor
or
sub
stos
dec
jb
ret
fdivr
enter
enter
lods
mov
mov
sub
ret
sub
test
in
xchg
iret
out
mov
ja
or
in
int3
fdivr
ins
push
mov
repz
fs
cmp
adc
push
cld
clc
pop
mov
sbb
les
jae
xor
adc
loop
mov
jg
push
sbb
push
shr
sbb
xchg
inc
rcl
(bad)
mov
es
dec
dec
sbb
popa
jmp
push
jns
addr16
iret
imul
pop
cmp
lods
rcr
retf
mov
dec
inc
adc
pop
adc
ins
loop
or
mov
mov
sti
sbb
into
ds
sub
ss
das
mov
fisubr
sbb
cwde
aad
std
jle
in
fistp
push
loope
or
xor
add
or
int3
sar
mov
lahf
sbb
push
lds
repnz
mov
sub
and
out
jmp
out
xchg
imul
sbb
iret
add
mov
sub
pop
push
push
(bad)
push
push
jmp
inc
xlat
sub
in
out
ss
adc
jne
loopne
push
test
mov
push
fild
test
fistp
lahf
aad
(bad)
in
in
inc
and
addr16
adc
push
lea
cmp
mov
aam
fsub
mov
nop
push
add
test
add
jp
ds
popf
cdq
into
jns
jne
scas
pop
dec
retf
xchg
sahf
add
jmp
or
dec
push
push
xchg
pusha
mov
xor
pop
cmp
xor
mov
jp
xchg
fwait
test
add
push
jb
fnsave
jecxz
test
popa
mov
adc
add
popa
and
pop
sub
add
jge
and
or
(bad)
push
add
sbb
repnz
cmp
leave
cmp
cmp
sti
(bad)
out
push
retf
pushf
and
jecxz
fcom
addr16
in
(bad)
and
pop
les
fucomi
pop
pop
cmp
std
scas
daa
pushf
pop
jmp
jne
out
loope
mov
jecxz
mov
fscale
(bad)
cmp
nop
cmp
in
inc
inc
outs
mov
sbb
scas
sub
loopne
and
push
xchg
xchg
mov
(bad)
xor
xchg
out
repz
ret
jae
mov
ins
jb
cmp
imul
shr
mov
cmc
or
pop
add
jle
dec
and
add
lods
xor
lds
xor
lock
stc
popf
ret
mov
retf
mov
and
cmps
stos
call
push
xor
shl
jmp
xor
jae
xchg
gs
repnz
jg
cmc
bound
and
mov
pushf
dec
scas
mov
push
sub
inc
out
mov
and
and
mov
sub
bound
daa
sub
scas
mov
mov
(bad)
push
scas
cmp
mov
(bad)
mov
xchg
mov
push
add
add
pusha
data16
pop
mov
cli
pop
fsub
rol
or
push
test
ret
nop
scas
sahf
daa
jo
sbb
and
fist
test
lods
sub
movs
pop
daa
jmp
pop
adc
xchg
mov
mov
pushf
pop
mov
dec
dec
sub
and
idiv
mov
bound
mov
mov
lods
xor
xor
lods
(bad)
fimul
scas
call
mov
or
jae
(bad)
out
loop
test
push
test
dec
call
retf
retf
sub
pop
dec
adc
cdq
xor
into
adc
cmps
inc
pop
jp
ins
mov
inc
rol
test
and
cld
movs
mov
cld
xor
loopne
xchg
push
aad
sbb
retf
mov
test
mov
push
dec
mov
das
xchg
jge
pop
inc
adc
sub
lods
and
ret
movs
jg
fidiv
mov
mov
ret
mov
retf
jno
pop
gs
pop
mov
xchg
outs
cdq
ret
mov
addr16
lahf
pusha
jle
test
mul
push
jmp
bound
jb
cmp
xchg
xchg
fisttp
mov
jl
ficom
xchg
clc
aam
xchg
push
test
or
cmp
mov
xchg
cld
pop
inc
mov
aaa
loopne
les
inc
cli
cmps
leave
jno
pop
test
xchg
mov
push
cli
push
(bad)
and
cmp
ror
xchg
sbb
push
inc
pop
cmp
push
push
xchg
xor
rol
push
pop
xchg
cmp
aas
add
sti
dec
test
pop
aaa
loopne
call
and
int3
mov
adc
cmc
lods
dec
aas
dec
repz
popf
hlt
stos
imul
cmp
clc
mov
xchg
jmp
cmp
xor
sti
out
icebp
xor
rcl
pop
xchg
call
mov
stos
mov
stos
push
lock
sar
jecxz
and
rol
xor
add
dec
and
scas
pop
inc
and
sbb
inc
inc
sbb
inc
int
jge
ds
and
test
sbb
and
mov
jnp
in
cld
daa
imul
xor
scas
fmul
lods
add
sbb
adc
push
ins
hlt
pop
mov
scas
mov
call
stos
sbb
mov
sbb
dec
sbb
hlt
mov
and
add
sbb
scas
mov
int
stos
ret
out
jecxz
xchg
sbb
dec
mov
push
mov
(bad)
call
jmp
and
mov
sub
xor
push
pusha
(bad)
push
data16
(bad)
push
stc
dec
inc
or
lds
repz
pop
pop
in
ret
fstp
call
mov
clc
std
jl
in
jmp
mov
cmps
loopne
pushf
sbb
mov
pop
dec
retf
(bad)
xor
and
aaa
outs
xchg
mov
ins
inc
lods
mov
aad
mov
xchg
cs
push
cmps
pop
pop
dec
mov
xor
jbe
sbb
or
cmc
pop
mov
jnp
push
jle
xchg
jbe
sbb
jne
mov
into
jmp
nop
push
(bad)
in
fisttp
stos
xor
cmp
(bad)
fcmovnbe
ficomp
dec
cmp
jb
mov
mov
jl
add
imul
jmp
shr
jge
dec
adc
imul
jg
add
repnz
xor
out
mov
sub
push
sbb
test
imul
sti
rol
add
jb
inc
test
(bad)
in
cmp
pop
retf
xchg
loope
js
std
stos
(bad)
mov
jmp
in
mov
sub
add
ins
lds
outs
sar
sbb
or
pop
shld
pmaxub
sub
cmps
xchg
xchg
lahf
jbe
pusha
lds
rcr
dec
sub
sar
jecxz
mov
xchg
fistp
jns
dec
shl
jmp
inc
(bad)
mov
repnz
inc
pop
mov
aas
jne
pop
stc
mov
mov
xor
sbb
push
ret
or
call
sar
nop
lock
jp
jmp
mov
and
inc
test
(bad)
xchg
cmp
inc
xor
push
ins
xchg
and
aad
push
jns
sbb
rol
scas
ficomp
enter
idiv
mov
(bad)
ss
icebp
mov
fiadd
mov
pop
cdq
dec
pop
imul
das
in
mov
dec
lds
hlt
clc
jbe
dec
dec
cwde
sbb
xchg
mov
push
ror
pop
mov
ja
or
aaa
inc
shr
addr16
repnz
retf
dec
loope
dec
js
cwde
adc
cmp
aas
mov
mov
hlt
scas
dec
or
fst
and
loop
mov
popa
sub
push
test
je
sub
adc
push
mov
aad
js
ins
cmp
dec
cld
mov
int
sbb
inc
ja
sbb
and
in
push
rol
ret
es
cdq
jp
aas
xchg
shl
jnp
jmp
in
and
idiv
adc
cmp
(bad)
push
mov
or
repnz
xor
aad
out
push
jg
test
xor
rol
xor
icebp
xchg
jmp
sahf
jle
adc
dec
mov
mov
mov
mov
fmul
ins
inc
or
test
add
scas
scas
addr16
fsubrp
and
pushf
jne
repz
lock
cmp
retf
sub
mov
loope
push
jg
sub
pop
int3
add
je
out
mov
mov
and
or
inc
ror
cmp
mov
xor
dec
stc
add
(bad)
sar
fiadd
fsubr
sti
or
sbb
in
fs
aaa
adc
xchg
push
in
and
jg
call
or
dec
shl
div
add
add
repnz
ret
(bad)
push
pop
aas
fnsave
sub
xor
adc
sbb
push
sub
repz
xor
fld
cmc
or
out
or
fidivr
out
es
cmp
call
push
push
(bad)
xor
ins
xchg
test
sub
and
jbe
je
xchg
or
jle
push
ins
adc
push
les
mov
or
out
jmp
out
hlt
pop
xacquire
sbb
sbb
arpl
push
sbb
popa
and
sub
call
xor
jge
adc
sti
sbb
out
inc
xchg
dec
test
dec
push
scas
cs
(bad)
cli
mov
aad
cmp
stos
xor
mov
push
mov
inc
cmps
push
inc
push
push
jl
sbb
pusha
jecxz
or
std
data16
xor
add
adc
xlat
in
and
inc
arpl
push
stos
push
jns
loope
(bad)
dec
adc
or
js
dec
or
pop
pop
pusha
int3
mov
mov
outs
push
pusha
and
adc
sub
add
sbb
shl
jns
daa
or
sbb
call
(bad)
std
movs
mov
(bad)
sub
xor
loope
adc
mov
mov
jbe
je
jmp
out
fistp
xor
out
jmp
nop
adc
cmp
inc
push
cmp
push
add
lods
nop
ret
movs
stos
test
outs
xor
mov
test
fimul
std
and
xchg
cmp
add
aad
sub
mov
dec
and
mov
mov
sub
ret
push
pop
or
sbb
repz
inc
addr16
ja
sub
jg
add
retf
sbb
pop
sub
push
sub
xor
icebp
mov
enter
jns
mov
mov
stos
push
into
sub
jecxz
add
xchg
cwde
sub
popf
or
sbb
in
(bad)
mov
pop
cmp
xor
push
cmp
mov
mov
pop
(bad)
cmovnp
repz
mov
pop
pop
jge
popf
and
xchg
adc
aam
arpl
in
mov
movs
test
xchg
and
dec
sub
das
sbb
cmp
lods
push
mov
pushf
scas
ins
int3
popa
xchg
jle
cmps
xchg
dec
jo
and
out
jnp
mov
das
dec
mov
add
(bad)
rcl
adc
push
pop
fcmovnb
adc
mov
aas
(bad)
jno
pop
cdq
test
popa
stos
push
ret
shl
ficom
mov
gs
and
sbb
les
sar
mov
lahf
jmp
sbb
ret
xlat
jg
mov
ret
outs
ins
mov
pusha
js
rcr
mov
retf
popa
sbb
add
jb
and
sub
or
mov
dec
cmp
dec
xchg
repnz
inc
push
dec
cmc
lahf
add
(bad)
aam
xor
jbe
or
jmp
inc
cwde
mov
adc
and
out
jecxz
or
xchg
xchg
mov
and
push
into
jle
inc
jp
xchg
(bad)
dec
jnp
mov
aam
ins
jecxz
sbb
shl
enter
jmp
lock
add
pop
vpextrw
and
ret
es
add
cmp
push
jb
and
xor
xchg
dec
jbe
inc
mov
sar
scas
loopne
out
frstor
pop
fcmovne
push
imul
cli
dec
sbb
aam
or
push
mov
call
jno
leave
sbb
bound
or
cmp
push
cdq
dec
cld
not
icebp
mov
movs
and
lea
sbb
(bad)
cmp
mov
jne
mov
jne
sub
popa
je
add
(bad)
ficomp
pop
and
sbb
std
icebp
adc
dec
ja
stos
sbb
gs
popf
lods
xchg
cli
and
movs
xor
js
xor
pop
icebp
lea
adc
push
xchg
dec
inc
xor
stc
aam
imul
xor
mov
stos
inc
std
call
push
xor
int3
es
and
das
xchg
sub
rcr
ret
call
mul
jp
jo
int
inc
pop
mov
fnsave
pop
add
repnz
in
mov
pop
pop
(bad)
cmp
xor
push
or
hlt
cdq
jmp
adc
and
pop
adc
jmp
loopne
inc
cs
push
and
scas
test
stos
fs
adc
jns
adc
mov
pop
cmp
hlt
xchg
sub
icebp
cmp
mov
stos
cvtpi2ps
arpl
add
mov
repnz
push
mov
cs
xchg
pop
ja
jge
in
std
xor
out
jo
icebp
sub
jnp
mov
or
add
mov
jmp
fnstsw
adc
push
(bad)
or
jno
ja
int3
mov
cdq
pop
and
push
int3
arpl
xchg
(bad)
cmp
lods
in
idiv
sbb
push
(bad)
mov
mov
mov
mov
sbb
xchg
pop
out
mov
lds
pop
mov
outs
push
dec
dec
pop
add
xlat
jns
loop
dec
adc
pop
add
and
out
jle
cdq
dec
push
xlat
pop
or
aam
inc
cwde
pcmpgtd
scas
ins
test
jb
test
repnz
rol
push
and
mov
out
mov
sbb
mov
fwait
mov
dec
adc
std
mov
xchg
or
mov
mov
pop
out
loope
fnsave
movs
jb
ret
jae
popf
out
rcr
push
and
add
adc
aad
xchg
in
push
retf
retf
pop
jmp
cld
movs
call
xchg
cmp
sbb
andnps
mov
scas
lahf
retf
mov
sub
or
mov
mov
aad
adc
add
ror
xchg
add
xchg
xchg
rol
scas
into
imul
(bad)
jo
adc
push
push
xor
mov
adc
(bad)
sbb
mov
cli
jp
add
inc
and
sub
fwait
clc
aas
xor
xchg
dec
stc
retf
dec
(bad)
addr16
inc
rcl
adc
jle
pop
mov
pusha
outs
inc
ds
dec
(bad)
stos
jmp
pop
pop
dec
jne
cmps
and
test
fwait
add
outs
mov
dec
adc
jne
test
sub
leave
cmp
repz
sbb
pop
and
imul
inc
out
fistp
loope
mov
ins
jmp
pop
jp
fcmovb
xor
fisubr
mov
fwait
mov
pop
das
aam
movs
push
movs
aas
sub
jns
mov
cmp
sub
mov
adc
repnz
adc
xor
mov
adc
mov
enter
addr16
bound
dec
in
cmps
call
sbb
js
cmc
xor
and
scas
mov
sti
mov
push
pushf
and
pop
jl
test
mov
xchg
dec
pusha
out
push
sub
test
jmp
je
mov
mov
jno
pop
cmp
js
add
shl
mov
add
jl
addr16
adc
jl
stc
mov
arpl
repnz
jl
les
push
xchg
addr16
jge
in
cmp
nop
(bad)
xchg
mov
xor
adc
dec
popa
test
(bad)
es
xchg
mov
mov
mov
pop
add
es
stos
out
sbb
or
lods
mov
sbb
iret
cmp
or
je
loope
mov
cmp
fnstsw
xor
mov
sub
nop
outs
dec
mov
mov
stc
leave
loop
push
sub
lods
adc
jl
dec
retf
jp
jnp
sti
(bad)
loope
lea
(bad)
bound
and
sbb
iret
enter
or
idiv
inc
pop
pop
or
add
mov
and
push
sbb
stc
repnz
sahf
shl
sub
and
push
or
cld
dec
xchg
xor
xchg
push
push
popf
xchg
mov
xchg
jp
out
aam
push
adc
adc
adc
mov
test
imul
or
xor
or
or
adc
and
pop
out
pop
pop
xor
jmp
and
js
mov
xor
gs
mov
ret
and
jns
jp
inc
mov
outs
idiv
dec
mov
fsub
and
dec
rol
sub
xor
mov
xor
arpl
cdq
dec
push
jle
std
mov
pusha
mov
xchg
push
aaa
loop
sahf
cmp
sub
int
push
inc
and
xchg
sbb
iret
sbb
sub
pop
aas
mov
sar
mov
inc
sar
movs
and
hlt
mov
repz
fucomi
inc
cmp
dec
jbe
push
jmp
and
pushf
sub
pusha
xchg
scas
cmp
mov
xchg
sbb
push
mov
cmp
mov
jmp
retf
pop
neg
sub
pop
call
jbe
and
xchg
or
(bad)
dec
inc
jbe
mov
sub
xchg
sub
aaa
cmp
loopne
jmp
dec
push
out
pop
dec
in
mov
sar
and
out
cmp
popa
mov
scas
xor
out
jp
mov
adc
mov
enter
sbb
lahf
popa
adc
mov
inc
xor
pop
shl
cmp
pushf
pushf
or
pop
test
inc
test
inc
add
popf
cs
push
push
out
fmul
mov
das
push
inc
jnp
cmp
sbb
stc
aad
mov
movs
mov
js
lea
or
sub
cmp
out
sar
outs
pop
add
sahf
arpl
xchg
push
xor
cmp
neg
dec
pop
or
inc
rol
sbb
mov
sbb
mov
shr
adc
(bad)
or
mov
jns
ret
mov
ja
pop
xlat
pop
mov
ret
jg
aad
and
in
pop
cli
sbb
inc
and
test
(bad)
jle
dec
leave
xchg
fist
nop
rol
push
(bad)
shr
jl
in
and
(bad)
loop
mov
xor
lods
pushf
jne
outs
push
and
jo
inc
xor
xor
sub
pop
repz
dec
loopne
pop
xchg
aad
and
sbb
leave
sti
mov
sar
cmp
int
dec
std
ja
jmp
pop
sbb
and
mov
(bad)
int3
xchg
jge
loop
stos
idiv
shl
mov
clc
and
cmps
loopne
adc
das
mov
and
add
mul
sub
arpl
jns
push
adc
dec
and
or
outs
adc
inc
cwde
sbb
repz
or
mov
int
jne
sbb
stos
or
xor
aad
int3
xor
test
cmps
push
leave
push
scas
sub
mov
fs
push
adc
push
cmp
daa
stos
sub
stos
leave
gs
stos
lds
push
(bad)
jbe
ds
mov
inc
ret
test
cmps
or
test
jmp
les
psllq
fwait
push
inc
mov
jno
sti
jmp
push
xchg
mov
mov
add
enter
lods
pop
xchg
push
sbb
mov
ficom
inc
imul
xchg
lea
out
fisubr
mov
out
or
jns
gs
adc
fisubr
xor
ficomp
xchg
repz
push
xor
out
xor
mov
(bad)
aam
out
push
jne
push
add
popa
xor
lahf
adc
mov
inc
mov
mov
ret
mov
dec
pop
aaa
fadd
inc
mov
(bad)
in
jno
push
push
loop
sub
pop
jg
(bad)
sbb
loopne
ss
test
add
mov
cmp
pop
int3
mov
ficom
mov
adc
pmaxub
or
arpl
(bad)
fist
es
enter
jl
sbb
lahf
pop
fwait
es
aaa
cmp
push
sar
outs
test
int3
mov
dec
pop
or
mov
lea
sub
shl
pop
sub
sub
inc
jne
mov
pushf
js
mov
in
sbb
mov
cdq
aad
jne
in
daa
scas
sub
hlt
fldenv
out
idiv
mov
xchg
push
and
dec
push
pop
push
(bad)
cmps
sbb
xor
push
out
mov
loope
adc
repnz
mov
(bad)
mov
ins
add
loopne
sbb
mov
sub
fdivr
mov
iret
mov
sub
and
xchg
or
add
cdq
or
mov
inc
std
push
sub
ror
ret
mov
jbe
add
popa
aas
movs
push
mov
xor
repnz
jge
das
je
inc
pushf
ds
je
cdq
shl
dec
cdq
mov
inc
mov
pop
jecxz
mov
test
xlat
adc
leave
add
lds
pop
cmp
jmp
es
jge
xlat
add
lods
inc
rcl
loopne
mul
dec
jmp
push
ficom
fild
out
jmp
lea
mov
xor
in
fnsave
dec
je
(bad)
mov
dec
into
mov
jb
fdiv
jg
mov
loopne
out
xor
jecxz
cmps
ror
mov
outs
pop
jmp
imul
dec
xchg
cmp
pop
sahf
and
xchg
inc
sbb
pop
cmp
push
push
je
jmp
jg
nop
loopne
inc
adc
and
xchg
adc
add
fisttp
movs
and
mov
fisubr
xchg
in
xlat
out
stc
movs
inc
aas
and
mov
xchg
clc
ret
fsub
je
push
ins
cdq
rcl
outs
jp
ret
sbb
out
xlat
pop
mov
add
fdivrp
loope
mov
mov
fwait
ss
inc
out
cmp
ins
(bad)
div
loope
mov
or
movs
xchg
xor
or
out
jecxz
sub
in
push
cmp
xchg
mov
repnz
mov
add
mov
sbb
xchg
cmp
sub
xchg
xor
push
call
leave
(bad)
fs
sbb
xchg
int3
sbb
stc
push
fmul
int
ja
adc
cs
loop
jg
push
hlt
mov
xor
mov
pushf
mov
sbb
(bad)
out
je
pop
aaa
sti
(bad)
and
mov
push
pop
cmp
and
sar
popf
sbb
inc
mov
lea
and
gs
dec
mov
cmp
fst
mov
cmps
sti
xchg
int
push
ficom
pop
push
out
retf
and
adc
mov
(bad)
jl
stos
push
jmp
pop
push
mov
dec
jp
call
add
in
mov
lahf
jno
or
sbb
dec
sbb
in
cli
sub
fiadd
fadd
inc
sbb
scas
pop
test
cmp
int
dec
scas
(bad)
pop
out
sub
in
add
mov
(bad)
repz
test
sub
pop
mov
xor
inc
add
xlat
repnz
fs
xor
add
xchg
mov
mov
arpl
jl
jmp
stos
pop
xchg
test
dec
push
lea
adc
and
xor
loope
mov
adc
mov
(bad)
loope
pop
rcl
or
bound
fdiv
loope
xor
mov
mov
jo
or
jle
mov
mov
jnp
ret
fcomp
nop
into
ficom
adc
add
sbb
push
xchg
jle
xchg
ret
jp
dec
push
xor
inc
jo
jl
scas
and
popf
xor
(bad)
sti
xchg
fsubp
adc
dec
fbld
pop
adc
mov
es
push
cli
push
lods
scas
dec
push
mov
jmp
sbb
ins
(bad)
pop
inc
xchg
pop
jae
and
(bad)
mov
cs
pop
ins
fisub
and
xchg
or
sbb
(bad)
pop
mov
das
mov
pop
jns
sbb
in
and
xor
cmp
pop
xor
aaa
or
jbe
jbe
fmul
inc
or
aas
scas
std
std
shl
dec
f2xm1
gs
xchg
mov
sub
cwde
dec
sbb
lods
shl
push
lsl
call
sbb
pop
mov
mov
sbb
in
or
aad
jle
jg
jecxz
jne
sub
call
or
mov
clc
in
add
(bad)
cmps
iret
xchg
(bad)
mov
lds
vmread
or
dec
mov
inc
hlt
add
movs
pop
lea
scas
test
add
pop
je
and
dec
sbb
mov
aas
dec
inc
aad
jmp
inc
add
push
out
wbinvd
sbb
or
jmp
push
pop
push
push
or
mov
cld
xchg
out
out
dec
int3
cld
into
(bad)
jns
push
jmp
jle
dec
sub
xor
add
jnp
push
cmp
jnp
(bad)
test
mov
data16
cld
fs
inc
inc
mov
pop
les
shl
mov
xor
xor
sub
pop
cmp
cmp
push
jno
mov
out
es
retf
sbb
sub
dec
lock
xchg
leave
pop
sub
push
inc
jbe
push
adc
lea
xchg
push
cwde
mov
cmp
leave
std
pop
cmp
ret
inc
push
ins
popa
aam
ficom
cmp
dec
int
scas
push
retf
mov
xor
adc
cmp
leave
mov
cmp
xchg
(bad)
jecxz
es
mov
dec
mov
loope
xor
popa
xor
sub
movs
mov
hlt
or
aad
or
repnz
mov
mov
mov
pop
movs
mov
(bad)
push
(bad)
xchg
std
pop
xchg
outs
nop
push
mov
jo
(bad)
mov
sub
loope
in
sbb
fmul
jge
mov
dec
je
sbb
lahf
xchg
inc
fisub
sub
and
add
dec
pop
mov
ss
(bad)
(bad)
out
ja
xchg
mov
das
jb
shl
ds
out
jbe
xor
mov
(bad)
loop
iret
xchg
mul
and
inc
lods
mov
jns
test
mov
sbb
nop
mul
adc
sahf
daa
and
sbb
in
push
sar
fmul
retf
or
push
popa
movs
mov
stos
leavew
sub
fnstcw
leave
xor
stc
(bad)
xlat
jp
fnsave
aam
pop
push
mov
test
sahf
xchg
jmp
out
cmp
outs
pop
push
mov
pop
mov
adc
popf
xchg
repz
daa
xchg
mov
jl
shr
mov
fstp
leave
jns
fld
aad
push
xlat
and
mov
mov
lock
cmp
jb
fcmovbe
jns
jmp
mov
scas
jge
stc
and
lahf
fisttp
or
mov
mov
enter
add
jne
into
data16
repnz
jo
fistp
pop
bound
outs
lods
ds
push
clc
xchg
rcl
pushf
or
call
push
mov
rol
jge
jl
mov
xor
and
push
or
cs
or
loopne
xchg
cmp
dec
inc
mov
(bad)
js
mov
aam
pop
add
je
stc
dec
xsaveopt
xlat
add
clc
add
xchg
jmp
hlt
sahf
xor
addr16
ss
sbb
adc
push
xchg
fpatan
xchg
lods
test
xor
fnsave
in
inc
loope
push
mov
mov
call
aad
add
stos
mov
das
xor
push
pop
ret
(bad)
lea
enter
xlat
mov
jmp
mov
cli
sub
call
pop
ss
lds
dec
nop
push
sbb
lds
add
aaa
adc
pop
lods
mov
daa
and
mov
(bad)
in
in
push
movs
rol
pop
mov
jp
mov
adc
call
ret
mov
test
xchg
lahf
es
loop
jp
inc
inc
imul
push
adc
sub
mov
popa
dec
xor
in
jmp
call
jne
mov
stos
addr16
out
outs
and
fincstp
and
jl
lods
mov
pushf
mov
pusha
mov
sbb
push
pop
push
in
cmp
sub
jb
and
dec
cmc
jmp
cmp
popf
outs
or
outs
int
loopne
pop
sub
arpl
push
ror
leave
mov
shl
xchg
gs
inc
es
cmps
push
fnstcw
outs
leave
retf
sub
push
xlat
into
or
scas
mov
xchg
adc
not
mov
retf
xor
popf
fs
div
push
nop
mov
pop
and
dec
inc
pop
(bad)
mov
fcomp
mov
jmp
sbb
xor
xor
sbb
sbb
add
lods
add
xchg
cli
sub
scas
inc
xchg
cmp
jmp
(bad)
retf
in
push
jno
dec
push
out
lock
mov
pop
aad
icebp
sub
pusha
jge
ret
sahf
mov
in
int3
sbb
nop
arpl
(bad)
jne
retf
pop
xchg
rol
and
xchg
add
imul
jne
test
inc
lods
je
aad
xchg
jno
fist
and
addr16
xchg
mov
adc
cwde
sub
lods
mov
rcl
and
sahf
xor
jnp
fdivr
jno
aaa
cmps
mov
ficomp
stos
sub
ficomp
ja
mov
jg
out
jg
call
cmp
sahf
push
jb
sub
mov
xor
sbb
jns
sub
mov
push
dec
xor
xor
jle
sar
outs
jmp
jmp
adc
push
and
dec
shr
mov
call
ret
ret
sbb
xchg
cmp
mov
rcr
xchg
movs
pop
or
sub
sahf
cmp
jmp
js
add
push
pop
neg
dec
stc
cwde
mov
inc
outs
out
js
dec
ins
cld
test
pop
sbb
bound
les
and
xor
test
mov
jl
jmp
xchg
(bad)
mov
mov
fnstenv
jg
mov
mov
imul
cdq
ins
pop
mov
pop
fldenv
and
dec
ror
jb
loopne
sub
out
mov
mov
icebp
push
jbe
push
mov
jo
pusha
cwde
aas
and
xchg
(bad)
adc
or
es
enter
scas
adc
ja
movs
jmp
add
mov
cmps
cmp
leave
adc
dec
xchg
stos
int
arpl
and
jno
stc
fistp
mov
jg
jp
add
outs
mov
js
call
pop
adc
ret
in
xor
and
out
adc
cmp
xchg
repnz
push
jb
repnz
movs
pop
outs
and
dec
popf
pop
push
icebp
xor
dec
pop
pop
adc
nop
out
mov
or
adc
das
sub
pop
cmp
dec
cld
retf
scas
ret
pop
push
push
cmps
push
mov
sbb
(bad)
dec
sti
fild
in
retf
adc
cmps
xor
cmp
push
mov
pop
cmp
cmp
rcr
sahf
mov
lea
js
dec
mov
das
and
cmp
push
xor
ret
hlt
sub
out
in
jmp
jmp
xor
in
rol
jle
pop
adc
ret
cmp
pop
ds
lods
movs
loope
sti
jp
data16
xchg
push
jb
inc
cs
cmp
adc
mov
loopne
sahf
cmp
xchg
mov
mov
sbb
xchg
clc
(bad)
dec
cmp
push
addr16
shr
push
jns
mov
scas
sar
sti
or
push
sub
cld
mov
sbb
add
std
fwait
jo
rol
or
icebp
out
sbb
fstp
mov
mov
adc
test
(bad)
call
(bad)
idiv
xchg
jp
and
jmp
imul
add
inc
mov
jecxz
xchg
les
inc
addr16
or
in
xor
imul
lods
mov
sbb
inc
pop
inc
dec
sbb
arpl
jb
push
das
push
push
jne
pop
xor
pop
outs
neg
mov
add
dec
fs
pop
aam
xchg
dec
push
pop
(bad)
pusha
pop
in
dec
ins
lahf
jnp
call
dec
(bad)
xchg
add
or
(bad)
lds
cdq
adc
or
mov
mov
dec
and
in
mov
mov
mov
mov
pop
jg
and
inc
adc
(bad)
sub
cmp
or
mov
jmp
pusha
shl
xor
dec
popf
arpl
out
daa
mov
cmps
or
imul
jne
shr
jmp
lds
sub
ins
or
arpl
sbb
retf
gs
dec
dec
jle
and
loopne
push
sbb
aam
test
jg
pop
fdiv
sub
push
les
call
(bad)
and
(bad)
push
arpl
sub
lea
push
push
mov
or
outs
(bad)
mov
ret
and
xor
rcr
or
mov
movs
adc
mov
fimul
sub
mov
and
push
jecxz
mov
pusha
xchg
into
adc
cs
or
xor
std
in
and
popa
xor
neg
nop
or
test
pop
les
popa
movs
push
data16
test
scas
mov
and
mov
sub
xlat
adc
in
jl
and
ja
cmp
jecxz
xor
shl
(bad)
fs
out
call
mov
aam
sbb
inc
sub
mov
dec
ret
dec
das
fiadd
popa
mov
xor
mov
fdivr
lea
adc
mov
imul
mov
out
sbb
mov
mov
repnz
cld
fdiv
jno
sbb
outs
aas
sub
push
dec
ror
jmp
mov
xchg
mov
sub
test
daa
aad
add
cmp
cmp
jno
and
rcr
xor
shr
outs
std
out
xchg
div
xor
(bad)
inc
mov
out
push
jecxz
ds
and
inc
mov
dec
sub
je
fwait
aaa
pop
jle
lods
or
fcom
and
rcr
rol
sub
pop
jno
rcl
(bad)
mov
push
xor
outs
jp
add
mov
add
daa
fs
pop
add
sbb
mov
jle
icebp
mov
mov
jae
cmp
mov
repz
or
lods
xor
or
or
or
dec
lods
and
and
retf
jge
xor
das
popa
arpl
cmp
repnz
add
iret
fst
pushf
jb
arpl
pop
push
and
mov
sub
fidivr
inc
push
or
fild
inc
shl
sbb
fs
iret
sbb
inc
loope
fwait
cmp
outs
mov
dec
push
jge
popa
popa
in
adc
jle
push
call
mov
out
pop
scas
push
jle
aad
stos
and
xchg
fwait
mov
cmp
sub
(bad)
sub
std
popa
jb
movs
pop
xlat
in
shl
pop
in
arpl
mov
lods
mov
inc
add
and
cmc
inc
in
mov
aas
sub
sti
mov
add
sahf
mov
xor
ja
loopne
inc
push
test
or
inc
loopne
mov
scas
push
adc
not
mov
pop
mov
mov
ret
sti
lods
push
ror
ficom
inc
jg
sbb
test
xor
jne
inc
ds
sub
bnd
or
test
ja
iret
popa
cmc
jmp
jl
push
mov
cmp
dec
inc
imul
dec
push
test
js
pusha
or
and
adc
leave
in
(bad)
jnp
loope
xor
xchg
mov
inc
scas
int
inc
inc
cmp
jg
jge
pop
jg
shl
mov
push
or
mov
xchg
repnz
inc
or
int3
dec
sahf
ins
daa
mov
shl
mov
setnp
sbb
int3
cmp
aam
enter
xor
jge
xchg
mov
into
add
xor
test
mov
dec
adc
lock
out
push
sar
cwde
pushf
mov
shl
mov
repnz
shl
and
fisub
je
add
sbb
icebp
call
xor
sub
cld
xor
(bad)
(bad)
dec
push
imul
imul
in
or
bound
push
fild
sbb
fstp
ss
xor
push
xchg
les
stc
les
mov
fstp
les
xlat
pop
fbld
mov
pusha
xchg
add
fcmovne
mov
mov
das
pop
jne
mov
mov
outs
sahf
inc
sbb
stos
fistp
dec
add
test
ret
sbb
sbb
adc
and
pushf
jl
cwde
cmp
push
dec
outs
jle
ret
not
ja
sub
std
test
push
xchg
pop
or
stos
sub
arpl
xor
push
jo
movs
dec
je
jns
and
push
cmc
xor
dec
(bad)
jle
mov
sar
ja
aas
mov
aas
inc
(bad)
lods
add
loope
adc
lea
xchg
mov
popf
inc
push
sub
addr16
fwait
xchg
int3
faddp
jne
jbe
test
clc
ficomp
inc
cld
inc
in
pop
int
(bad)
aam
scas
jb
sti
sbb
mov
pop
mov
adc
aaa
jmp
fwait
rcr
(bad)
(bad)
fadd
pop
lahf
xchg
retf
sub
sbb
mov
xchg
in
push
cs
in
dec
nop
jmp
fisttp
cmps
mov
push
(bad)
les
je
inc
jbe
mov
addr16
out
adc
cmps
(bad)
adc
dec
mov
shl
sbb
jmp
and
int
xor
pop
dec
push
pop
add
mov
cs
pop
iret
ja
mov
iret
arpl
sbb
push
std
sub
pop
push
mov
movs
inc
ja
les
fldenv
add
jmp
xor
mov
cmp
enter
sub
inc
cdq
repz
xor
cmps
mov
mov
imul
daa
cmp
pop
out
nop
lods
mov
and
adc
fdivr
retf
dec
mov
lea
les
dec
std
in
inc
in
ret
lods
dec
and
test
cmp
sub
push
je
jns
stc
ds
mov
les
fld
call
push
push
jne
xor
ja
xor
repz
push
rcr
xchg
push
mov
mov
std
lahf
push
scas
aas
xor
into
xchg
das
pusha
lds
addr16
daa
mov
dec
or
neg
ret
mov
inc
mov
sub
jl
shl
push
jb
out
and
inc
(bad)
pop
jle
adc
fsubp
sti
mov
ins
push
aam
sbb
lock
push
ss
test
and
xchg
pop
retf
xchg
jno
fwait
sahf
sub
jle
push
push
rcr
push
wrmsr
loope
not
cdq
cmp
fist
mov
imul
fstp
fisub
xor
ss
pop
add
bound
outs
mov
scas
mov
pop
xchg
jb
fwait
xor
je
std
lock
cmp
aam
(bad)
and
loop
dec
cs
ins
imul
es
cwde
mov
xor
movs
cdq
cmps
test
data16
and
sub
jae
adc
jp
jno
lock
and
sub
cmps
sti
(bad)
movs
into
xchg
popf
mov
sub
mov
call
stos
cmp
aas
in
pcmpgtb
xchg
ins
movs
mov
dec
ret
add
sub
push
movs
mov
cmp
xchg
and
mov
fdiv
or
test
push
in
retf
dec
xor
pop
mov
into
(bad)
mov
adc
in
jmp
data16
add
jb
(bad)
out
jp
mov
mov
and
adc
out
cmp
(bad)
dec
push
test
jb
enter
arpl
adc
xchg
mov
(bad)
pushf
sub
repz
jno
jmp
xchg
and
or
sub
inc
add
jae
or
pusha
je
add
push
into
adc
cld
cmp
hlt
cmp
ss
scas
les
gs
es
fs
pop
inc
sub
cmp
fild
push
retf
js
sbb
out
push
dec
sbb
inc
add
loop
and
lahf
pop
pop
jecxz
jg
or
movs
lahf
push
iret
or
and
xchg
lea
jmp
cmps
and
jl
inc
mov
mov
or
(bad)
aam
push
jno
inc
std
push
adc
lds
das
fist
ins
inc
push
xor
push
push
add
rcl
sbb
pop
pop
push
popf
sub
xchg
sar
mov
aad
adc
inc
loopne
ss
adc
cmp
add
arpl
in
movs
mov
push
shl
push
or
cmp
dec
push
jne
and
xor
add
and
aas
jo
mov
rcl
ins
xchg
push
and
(bad)
dec
mov
xor
lods
rcl
adc
push
xor
sub
pop
ja
xchg
mov
and
sbb
int
aas
pop
xchg
push
push
sub
cmp
sbb
test
fcom
sbb
mov
js
xor
push
arpl
jne
lock
adc
fcomp
int3
daa
inc
sti
clc
mov
and
int
loopne
pop
push
shr
int
ret
lea
sbb
(bad)
fnstenv
or
(bad)
in
mov
mov
stos
push
pop
or
cmps
nop
cld
push
loopne
mov
ret
adc
bound
outs
data16
pop
mov
xor
push
jle
pop
(bad)
push
xchg
jl
sbb
mov
lods
jnp
icebp
push
fdivr
jae
mov
out
and
mov
(bad)
mov
mov
inc
sub
adc
jmp
imul
dec
retf
mov
ins
pop
and
ret
outs
fwait
aas
cmp
fnsave
xor
jl
rcr
sub
lea
jecxz
add
xchg
xchg
and
pusha
xchg
xchg
fwait
out
sub
or
xchg
les
add
scas
sbb
pushf
xchg
ror
inc
adc
push
cmp
call
inc
iret
jg
jmp
dec
push
dec
push
fsubr
test
icebp
iret
lods
cdq
movs
add
jns
sbb
fstp
sbb
jns
ds
cmp
sbb
pushf
pop
xor
fwait
add
pop
cld
in
jo
icebp
push
pushf
pushf
arpl
xchg
mov
loopne
data16
mov
punpcklbw
xor
adc
cmp
shl
imul
lock
cmp
pop
ret
xor
or
xchg
mov
call
fsubr
(bad)
ja
call
xor
xor
and
shl
(bad)
jp
loopne
push
sbb
push
jmp
push
adc
fs
xchg
sub
repnz
xor
jmp
arpl
ret
xchg
imul
push
push
and
in
sbb
adc
out
popa
mov
das
loope
popa
xchg
(bad)
(bad)
push
sub
out
jle
xchg
movs
and
mov
fcomp
mov
inc
sbb
dec
or
xor
jnp
or
cmp
mov
and
icebp
(bad)
call
xor
jb
dec
jnp
push
and
dec
mov
inc
ins
icebp
pop
mov
push
stos
test
ss
cld
inc
xchg
cmps
sar
fstp
adc
aam
ins
jnp
and
or
xchg
jno
fs
inc
jg
or
and
dec
mov
jge
adc
mov
mov
pop
xchg
fidiv
mov
int
inc
scas
sbb
dec
pop
push
lahf
sub
aaa
and
call
and
js
and
add
inc
jbe
out
mov
call
xor
xor
cli
push
in
(bad)
call
cmc
inc
imul
pop
push
and
int
and
cmp
ret
and
pop
and
mov
sbb
stos
enter
xchg
pusha
mov
cmp
adc
cld
in
clc
iret
sbb
inc
fnstcw
add
xchg
mul
jne
(bad)
adc
xchg
lds
inc
sub
mov
sbb
test
scas
mov
push
lea
outs
inc
and
in
mov
mov
or
sbb
adc
rcr
fst
test
(bad)
jecxz
es
push
xchg
mov
mov
cli
pop
push
inc
inc
inc
adc
call
jecxz
je
cmp
outs
cmp
out
sbb
hlt
push
out
sbb
xchg
push
enter
or
mov
sahf
fisubr
jb
mov
and
(bad)
stc
aas
sub
loope
add
clc
sbb
cmc
push
popa
jle
or
jns
data16
and
add
sbb
adc
outs
mov
das
pop
and
jno
scas
shl
idiv
fcom
(bad)
(bad)
jo
ins
shr
add
scas
or
jae
jl
jb
rcr
mov
add
push
push
mov
fsub
clc
add
sbb
jmp
cli
fisubr
aam
jmp
sub
lahf
call
mov
into
push
lea
pop
frstor
push
inc
jecxz
mov
push
xlat
xchg
inc
leave
xor
ds
je
shl
cmp
fcomp
adc
fidivr
inc
sub
sub
mov
repz
(bad)
call
mov
data16
arpl
retf
push
lods
pop
test
retf
xchg
clc
adc
loop
push
xchg
dec
(bad)
(bad)
cs
pop
pop
shr
ja
xchg
repz
(bad)
call
dec
add
or
sar
pop
lods
pusha
sub
(bad)
xchg
fsubr
lahf
inc
cwde
ins
mov
and
inc
or
dec
or
push
jbe
mov
jb
jns
mov
mov
cmp
or
(bad)
call
push
mov
loop
(bad)
or
pop
mov
stos
rol
pop
xchg
jp
adc
mov
mul
cmp
cmp
inc
adc
cmp
inc
xchg
push
sub
push
jmp
adc
push
sub
(bad)
in
or
or
and
push
and
stos
in
into
sub
popf
cmps
jbe
out
(bad)
ret
dec
mov
inc
jecxz
xlat
dec
mov
sub
xchg
xor
add
pusha
mov
dec
add
push
pop
enter
xchg
cmc
outs
pop
and
lahf
aad
test
sub
sub
jmp
fstp
ins
not
jno
mov
inc
in
ins
push
sahf
or
push
dec
or
dec
xor
clc
xor
mov
ret
fnstsw
mov
pop
inc
mov
xor
(bad)
jb
mov
pop
and
mov
cmps
jae
mov
sub
sbb
push
cdq
in
into
or
movs
dec
xchg
das
imul
sti
int3
xchg
fs
adc
jnp
call
je
leave
sbb
sbb
cmp
sbb
lock
push
sub
adc
(bad)
frstor
ins
iret
add
popa
jnp
xor
adc
ret
mov
pop
mov
imul
add
push
ficomp
aas
and
xchg
scas
or
xchg
xchg
les
ja
pop
mov
aad
ret
fistp
xchg
jns
mov
test
fst
jb
ins
fidiv
cmp
xchg
xchg
ret
sub
push
and
dec
xor
sub
(bad)
outs
call
cli
cmp
cmp
(bad)
stc
ret
adc
adc
xlat
scas
mov
jl
iret
jmp
mov
lods
sub
cmp
sbb
(bad)
jmp
fs
inc
push
jmp
int
retf
sti
imul
in
dec
adc
pop
pop
push
pop
xor
or
inc
jae
mov
mov
ins
and
mov
je
add
mov
pop
mov
shl
dec
arpl
push
hlt
in
mov
inc
cmps
imul
gs
in
sbb
ss
cmovp
add
inc
ror
int3
fwait
pop
fld1
sub
pop
(bad)
jnp
cld
mov
ffreep
inc
imul
dec
pusha
jnp
sub
imul
xor
xchg
(bad)
outs
or
jp
icebp
dec
xchg
mov
mov
push
movs
in
cmps
inc
test
pusha
call
cs
inc
xchg
fdivr
movs
pop
pop
gs
int
xchg
push
pushf
add
or
dec
mov
mov
xor
movs
out
(bad)
call
shr
cmp
mov
push
jo
ss
(bad)
jne
aaa
imul
adc
(bad)
hlt
data16
cmp
(bad)
xchg
mov
loope
repz
ins
sbb
shl
repz
pop
mov
mov
sub
cmp
in
pop
mov
dec
cmps
dec
adc
es
dec
add
pop
popf
mov
mov
stc
pop
push
jmp
add
pop
sbb
pop
(bad)
mov
mov
leave
aad
popf
jb
mov
inc
or
fidivr
sub
sbb
scas
pop
loop
rcr
int3
adc
int3
jle
lods
inc
enter
lods
sub
mov
sbb
std
out
or
jb
mov
dec
and
cmps
jecxz
fsub
div
into
fwait
scas
popa
pop
mov
xchg
imul
mov
mov
popf
repz
or
out
in
and
movs
fild
add
retf
shl
mov
xchg
sub
cvtps2pi
and
das
adc
dec
das
jbe
and
stos
lods
add
pop
cmp
sub
dec
xor
loopne
call
push
adc
push
fstp
cmp
sahf
adc
jge
or
outs
push
or
mov
cmps
sar
in
cmp
mov
jg
and
mov
jb
pusha
stos
jmp
jle
inc
push
nop
outs
push
pop
repnz
lods
xchg
and
mov
js
int
loope
test
dec
sbb
cld
ins
outs
mov
mov
lods
mov
push
dec
cmc
rcr
xchg
inc
fs
or
xchg
mov
mov
xor
ret
out
cmc
shr
in
sbb
pusha
ins
push
(bad)
dec
imul
ficom
scas
sub
popf
pop
xchg
(bad)
popa
xor
lahf
adc
and
mov
add
and
cdq
es
cmp
dec
fdiv
fsubr
(bad)
movs
int
jnp
test
jge
in
loopne
sar
pop
test
call
mov
test
retf
jo
int
jmp
rcr
test
pop
es
or
out
rcr
popa
nop
jmp
jmp
jecxz
pop
and
cdq
sub
lods
gs
pusha
cmp
xchg
int
adc
js
repz
mov
jg
inc
clc
lods
shl
xchg
test
mov
iret
xchg
mov
or
test
dec
dec
inc
jmp
sub
jb
loop
push
inc
xchg
icebp
sbb
mov
out
rol
rcr
stc
ret
xor
inc
fstp
or
(bad)
les
or
ret
inc
mov
pop
or
scas
jle
adc
inc
imul
outs
mov
pop
mov
xor
jnp
add
mov
xchg
into
stc
ret
add
adc
push
ss
out
adc
dec
(bad)
bound
je
add
cmps
mov
rol
lahf
aad
push
scas
cs
pusha
pop
call
mov
xor
jno
call
mov
xchg
js
ins
in
xor
mov
ss
inc
cmp
cmp
clc
dec
xchg
add
mov
adc
dec
call
imul
popf
mov
push
push
mov
jge
sbb
cmp
push
daa
mov
xor
aam
mov
add
push
sbb
cmc
mov
xchg
xchg
lods
popa
xor
shl
into
and
outs
cld
sbb
mov
in
imul
xchg
dec
loopne
mov
pusha
jl
jbe
sub
cs
pop
ds
or
pop
outs
pop
push
out
xor
mov
imul
pushf
mov
out
outs
cmp
inc
xchg
cmp
mov
aam
movs
pop
mov
repz
test
jmp
rcl
popa
bound
xchg
pop
and
je
or
ror
in
adc
cmc
mov
rol
cld
aaa
test
mov
dec
dec
pop
jl
push
mov
pop
pop
sti
push
cmp
jl
xchg
pop
cmp
out
inc
aam
ret
add
push
push
stos
jmp
inc
add
jmp
inc
jl
addr16
pop
dec
nop
push
or
retf
lahf
nop
fisttp
push
jmp
rcr
mov
cld
mov
jmp
mov
mov
mov
mov
jno
sar
xchg
movs
loop
dec
mov
push
jmp
pop
add
or
mov
rol
jae
adc
jmp
rcl
mov
test
call
xor
sbb
leave
adc
sub
jo
mov
icebp
push
repz
call
out
imul
add
pop
and
mov
sahf
mov
jl
lods
pop
fnstenv
mov
xor
xor
add
cmps
sti
lods
sub
hlt
adc
xor
add
fdiv
(bad)
lahf
mov
aam
std
jne
ror
push
add
and
mov
push
xchg
iret
lods
mov
add
fidivr
aad
inc
pop
retf
xor
push
mov
inc
push
sahf
dec
push
mov
dec
aam
mov
cld
pop
jo
hlt
lahf
or
rcr
jnp
int3
test
adc
cmp
inc
(bad)
es
mov
je
fucomp
lods
pop
outs
xlat
cmp
push
xor
inc
(bad)
push
ret
dec
and
icebp
ds
pop
xor
test
mov
jge
pop
xchg
cdq
fnstenv
and
lock
sbb
fadd
push
sub
aam
jmp
adc
and
data16
push
and
inc
outs
jle
jecxz
dec
ret
pop
cmps
mov
imul
sbb
cmp
(bad)
mul
add
daa
push
int
fstp
neg
mov
mov
pop
pop
push
jo
inc
add
push
mov
and
pop
sub
cdq
movs
push
dec
imul
gs
clc
mov
push
adc
pop
add
pop
push
pslld
cmp
les
add
inc
imul
call
and
call
test
loopne
call
sbb
mov
dec
movs
cmp
mov
jno
scas
push
jl
add
ds
test
add
adc
mov
cmp
pop
dec
dec
mul
fdiv
inc
mov
das
lahf
bound
cmp
mov
ins
mov
cwde
cmp
mov
mov
inc
mov
jl
jmp
jmp
ds
mov
inc
mov
stos
movs
nop
mov
inc
and
xchg
sbb
ss
push
pmuludq
mov
and
jmp
cdq
and
add
mov
into
sub
inc
sar
or
sbb
dec
repnz
inc
scas
sub
push
rcl
xor
push
cmp
sbb
mov
cmps
sbb
sbb
vsqrtsd
lds
jb
add
jp
mov
shl
leave
dec
call
inc
in
jge
retf
dec
test
push
and
xchg
movs
ret
xor
es
pusha
cmc
mov
jo
and
mov
fstp
or
rcl
out
xor
test
cmp
push
and
pop
mov
das
retf
mov
repnz
xchg
or
inc
mov
pop
fwait
mov
pop
outs
inc
jl
mov
dec
scas
movs
jno
out
out
inc
xor
jae
and
out
mov
adc
pop
add
jp
or
bound
mov
xchg
adc
pop
inc
lea
push
clc
(bad)
movs
pusha
lock
jmp
shr
jg
outs
test
cli
(bad)
dec
and
inc
(bad)
xor
(bad)
fndisi(8087
xor
cs
ds
push
loopne
rol
dec
and
pop
or
inc
sub
cld
lock
add
adc
mov
xchg
pop
cld
fsub
lds
into
sbb
sbb
cmp
es
xchg
and
mov
sub
jg
sbb
mov
lock
cli
cdq
or
jnp
mov
inc
int3
dec
popa
sub
xor
or
sub
cs
fldenv
sahf
mov
icebp
adc
sub
jp
ins
add
mov
in
movs
jnp
lock
out
int3
int3
lods
out
pop
sar
inc
shl
dec
pop
jecxz
addr16
fs
sbb
mov
mov
mov
aaa
mov
es
sahf
rol
es
jne
push
fst
or
mov
in
into
add
push
rol
pop
(bad)
pop
jbe
(bad)
(bad)
cmp
aam
mov
mov
hlt
cmp
(bad)
sahf
data16
icebp
sub
cli
mov
mov
call
jmp
sbb
dec
cmps
cld
cdq
lods
xor
cmp
and
ret
cmps
adc
jg
lock
mov
sub
iret
xor
out
inc
sub
cmps
movs
fs
in
(bad)
fistp
addr16
loop
test
out
jo
enter
stos
fwait
cld
mov
inc
push
inc
pop
mov
sbb
xchg
pop
(bad)
mov
mov
sbb
sar
fiadd
mov
iret
mov
cmp
movs
mov
mul
sub
mov
or
icebp
std
jmp
(bad)
sbb
sub
outs
push
iret
ret
add
dec
adc
jmp
leave
aam
rol
dec
mov
(bad)
in
sbb
lods
xchg
popa
ins
ficomp
sar
ss
out
shl
out
mov
push
mov
jp
pop
dec
inc
ror
fwait
dec
and
int3
add
ror
pop
dec
pop
movs
cmp
jb
call
pop
pop
mov
or
or
sbb
dec
outs
fwait
pop
pop
icebp
loop
cmp
fldln2
mov
icebp
fcmovnu
in
mov
xchg
pop
stc
and
pop
dec
xchg
cmc
ds
jg
push
and
shl
add
mov
dec
or
retf
add
and
mov
jnp
std
inc
inc
or
dec
mov
fs
xchg
sbb
ins
(bad)
loopne
xor
pop
add
mov
bound
leave
repz
xor
pop
and
clc
cmp
ds
mov
es
into
xor
dec
sar
lods
outs
mov
cmp
sbb
mov
je
outs
int
int
jl
mov
rcr
fdivr
mov
sbb
sti
retf
mov
mov
add
inc
popa
sub
out
dec
xchg
cdq
adc
rcl
pop
stc
xlat
sub
movs
inc
cwde
setne
stos
call
aaa
lods
repz
movs
xlat
es
mov
ror
std
mov
xchg
mov
pop
inc
mov
cmc
push
xchg
add
retf
not
jmp
sub
(bad)
ficomp
cld
(bad)
pop
sahf
(bad)
std
cmp
jmp
push
sar
sub
pop
inc
paddusw
popa
cmp
push
int3
xchg
ins
or
cdq
sub
pop
scas
leave
cs
ja
movs
jecxz
ficom
pop
pop
inc
call
(bad)
cli
(bad)
(bad)
ret
stos
sub
and
pop
mov
lock
in
lds
adc
sbb
adc
out
xor
xchg
outs
(bad)
(bad)
push
jle
inc
mov
fwait
in
mov
rol
retf
pop
cli
in
neg
lahf
jmp
fcomp
stos
jae
idiv
fild
neg
fidivr
fstp
fwait
mov
test
cmps
xchg
jmp
inc
and
ja
push
lock
or
pop
add
xchg
int3
mov
clc
ja
cmp
inc
std
std
popf
pop
mov
xor
ins
cld
retf
cmp
pusha
push
add
rol
push
mov
jno
cld
mov
gs
rcr
mov
dec
movs
ret
mov
push
inc
mov
in
imul
dec
ins
shl
repnz
rol
jp
cmp
xor
repz
fcomp
pushf
es
in
adc
push
cmp
fisub
or
daa
and
push
fild
mov
pop
jecxz
adc
xor
xor
push
jnp
xchg
les
cmps
add
inc
adc
std
addr16
ret
lds
adc
popa
imul
mov
and
imul
es
adc
pop
cmp
in
(bad)
pop
repnz
loop
gs
pop
lea
mov
(bad)
sub
adc
(bad)
push
not
repz
pop
pop
pop
(bad)
cmp
fbld
xor
fwait
sahf
sbb
sbb
adc
mov
cmp
lock
xchg
aam
push
add
sbb
adc
sub
das
pop
and
cmps
cmp
jp
or
xor
mov
xor
and
and
repnz
cmp
push
(bad)
xlat
out
xchg
movs
push
mov
add
sti
fistp
mov
sbb
cs
fld1
(bad)
(bad)
lock
out
gs
movs
and
adc
adc
mov
out
bound
lahf
xchg
add
movs
fwait
inc
imul
test
out
pop
push
iret
sbb
mov
dec
jg
mov
leave
fs
mov
dec
xor
hlt
cs
jne
movs
dec
mov
test
(bad)
pusha
in
or
je
(bad)
pop
inc
sub
popa
adc
mov
repnz
adc
loopne
mov
pop
repz
push
xchg
fdivr
add
sub
mov
cld
gs
pop
int3
out
mov
pop
jae
cmp
xchg
mov
lahf
push
lds
sbb
mov
fwait
adc
pop
mov
sub
(bad)
sbb
or
jp
mov
mov
mov
(bad)
fstp
cmp
push
shl
int3
xor
int3
int
out
fs
sub
popa
sub
jnp
daa
xor
cld
and
push
inc
in
(bad)
inc
mov
and
adc
aam
pop
daa
call
and
jns
(bad)
das
add
not
jns
add
jo
mov
mov
cmp
adc
mov
iret
mov
jg
rcl
cwde
or
sbb
cmp
mov
pop
mov
aam
pop
hlt
and
hlt
mov
jmp
scas
into
test
xchg
in
test
ret
mov
mov
mov
or
inc
(bad)
push
mov
mov
lahf
es
fiadd
push
push
mov
fsub
dec
call
jb
cmp
enter
clc
push
loop
push
rcl
xor
mov
or
gs
in
sub
test
jae
or
push
scas
fsubrp
push
fmul
imul
ins
sti
xchg
mov
pop
cli
bound
or
adc
mov
and
nop
jae
ds
mov
cmp
pop
mov
fistp
push
movs
or
jmp
xchg
movs
jb
xchg
das
and
dec
or
jno
mov
rcr
or
push
jecxz
cmp
and
push
cmps
ins
aad
and
retf
in
shl
test
ror
pop
push
sub
les
loop
mov
adc
inc
and
jnp
cmp
mov
push
pushw
cmc
cmp
shr
and
ins
leave
aas
cld
pop
pop
sub
inc
sbb
ins
popf
adc
loope
pop
in
test
mov
pop
sbb
pop
bound
sbb
ds
cli
aaa
inc
in
adc
jne
mov
xor
cmc
mov
ja
aas
mov
and
jecxz
je
stc
fistp
pop
lods
inc
xor
cmp
or
(bad)
sbb
xchg
jne
test
and
loopne
out
jp
dec
repz
and
call
mov
dec
rcr
jbe
add
daa
cmp
fld
dec
xor
daa
data16
lock
pop
mov
adc
sub
pop
cld
sbb
leave
dec
stos
mov
stos
add
adc
xchg
sar
(bad)
cmc
sti
sub
or
xchg
lods
ss
and
mov
test
ds
ror
sti
cmp
pop
cdq
or
inc
jmp
inc
fistp
imul
mov
xchg
ror
dec
pop
dec
or
dec
outs
movs
fdivr
mov
or
or
sti
xor
and
jecxz
pop
push
jns
in
(bad)
mov
pop
cld
in
pop
jg
push
test
sub
xchg
outs
jmp
in
sbb
add
scas
fwait
leave
dec
push
cmp
repz
(bad)
imul
fwait
sbb
and
cmps
inc
rol
out
retf
pop
mov
push
xor
aam
fisubr
loop
jecxz
push
aas
push
sub
or
into
xchg
and
mov
adc
std
mov
cmp
mov
fnstcw
and
cwde
pop
ficom
iret
nop
ror
std
lock
jns
call
aad
xor
(bad)
and
mov
mul
sbb
or
stc
and
mov
add
leave
mov
jmp
stos
xchg
push
sbb
mov
inc
std
adc
cmp
sbb
inc
sbb
xchg
mov
mov
mov
adc
inc
pop
shr
aas
jne
mov
xor
jl
loopne
fmul
test
and
pushf
mov
xchg
xor
jns
jp
xchg
pop
xchg
pop
int
push
retf
(bad)
and
ret
dec
mov
and
repnz
rcr
shl
dec
add
adc
jp
sub
and
sbb
mov
cld
aam
and
std
bound
rcl
xor
add
add
jnp
push
addr16
out
cli
test
out
sbb
jg
or
pop
push
aaa
movs
xor
sti
xor
addr16
xchg
frstor
mov
sub
ins
aad
or
adc
je
cmp
dec
mov
mov
pop
mov
inc
cmp
in
xchg
dec
sub
adc
stos
shl
mov
mov
loop
xchg
push
repz
sub
xchg
pusha
xchg
shr
xchg
aas
fs
mov
leave
fisttp
push
psubb
ins
test
pop
mov
push
aad
in
outs
pop
push
in
iret
jbe
aad
pusha
cmp
xor
scas
xlat
and
sub
mov
outs
retf
add
mov
repnz
int3
jecxz
dec
xor
femms
imul
sbb
in
sub
mov
push
inc
and
inc
push
(bad)
inc
cmp
adc
imul
push
and
jnp
movs
dec
inc
jne
js
inc
pop
retf
sbb
mov
push
cmp
lahf
cmp
and
out
mov
cmp
fs
fldcw
mov
ror
mov
fucomi
aaa
shl
xor
call
repnz
repnz
xor
pop
adc
sub
dec
movs
jecxz
push
mov
mov
pop
cs
jno
(bad)
mov
sbb
cmp
sub
cmp
mov
mov
adc
call
call
movs
mov
and
daa
int
inc
mov
les
shl
add
idiv
inc
sar
out
add
mov
ins
push
and
repnz
jbe
jmp
mov
mov
or
jo
cmp
aas
addr16
rcr
adc
outs
out
call
mov
stos
and
loop
push
mov
add
cwde
sbb
adc
and
dec
repnz
dec
pop
mov
push
fdivp
repnz
ffreep
sbb
mov
inc
pop
adc
iret
into
inc
dec
out
mov
push
sbb
stos
daa
test
add
(bad)
jae
mov
call
fstp
dec
sbb
fild
ret
pop
cwde
and
daa
xchg
push
pop
mov
jbe
inc
imul
mov
and
push
mov
iret
daa
daa
sub
in
sub
(bad)
hlt
test
retf
push
in
(bad)
fld
push
sub
dec
out
adc
rol
push
xor
xor
ror
pop
push
mov
or
lods
dec
push
popf
inc
jge
push
or
aas
xchg
xchg
pop
jns
push
mov
clc
xor
ins
sub
repz
inc
std
xor
xchg
fmul
xchg
xor
in
mov
mov
jns
cld
xchg
cdq
mov
dec
dec
movs
popf
fsubp
push
push
or
test
ja
cmp
cmp
call
mov
cmp
sti
hlt
aam
inc
(bad)
nop
test
and
lea
or
mov
mov
std
fadd
mov
push
lahf
jne
cmp
nop
retf
mov
mov
xor
loope
mov
xchg
push
dec
scas
lds
push
or
jge
(bad)
xchg
mov
fwait
sbb
adc
push
pushf
xchg
sahf
push
ja
push
outs
dec
(bad)
xor
das
jle
js
arpl
fild
mov
push
loop
rcr
mov
adc
mov
or
std
outs
outs
cld
dec
fcomp
lds
xchg
outs
or
inc
add
popf
sbb
xchg
movs
movs
mov
jle
lahf
je
test
das
lods
movs
imul
xrelease
xchg
clts
lock
ins
cmp
cmp
mov
push
ret
xor
xor
mov
push
iret
mov
repz
in
daa
les
xchg
pop
fcom
or
test
mov
sbb
(bad)
outs
sub
test
lahf
jmp
fisubr
sbb
add
add
test
and
sub
mov
std
adc
sar
push
cmp
jo
mov
or
mov
jp
push
add
pop
or
das
mov
add
fwait
scas
push
mov
mov
sbb
sbb
xor
repz
lds
out
mov
gs
(bad)
(bad)
loop
inc
int3
cs
outs
adc
add
and
mov
out
not
push
aad
pop
daa
cmp
mov
jnp
dec
fld
(bad)
add
mov
pop
shr
fcomp
xchg
(bad)
jmp
lock
pushf
adc
mov
test
ret
js
outs
xor
jo
sbb
int
and
int
pop
sahf
inc
gs
shr
bound
lea
jo
loopne
sbb
mov
inc
aas
sbb
in
out
pop
lock
and
sbb
adc
cmp
dec
fnstenv
ja
inc
or
loopne
add
in
jns
mov
mov
sar
and
sub
cmps
jmp
mov
mov
push
movs
in
loope
outs
mov
jbe
imul
mov
les
jmp
stos
cmp
sub
jp
into
cmc
lahf
lahf
test
xor
xchg
aaa
xchg
sub
int3
out
inc
mov
inc
jl
(bad)
cmp
lods
cdq
mov
sbb
push
stc
inc
mov
and
(bad)
lods
ret
mov
mov
lea
repz
in
push
push
adc
loop
dec
movs
mov
jnp
xchg
add
push
outs
push
sbb
mov
stc
int3
sub
daa
sub
mov
inc
inc
jmp
xor
inc
sub
ficom
iret
xor
mov
ret
repnz
jo
clc
cs
push
push
xchg
push
outs
(bad)
push
int
sub
inc
scas
jle
xchg
addr16
fs
test
je
sub
jg
(bad)
push
and
add
push
dec
jmp
mov
shr
xor
fst
mov
jno
bound
jge
xlat
sub
(bad)
rcr
mov
jle
adc
sti
xor
pop
push
push
es
call
jns
out
add
test
out
mov
xchg
mov
icebp
out
fcomp
cld
jmp
jae
xor
(bad)
(bad)
movs
cs
xchg
shl
sbb
int
pop
xchg
sub
(bad)
jo
sbb
jecxz
dec
sbb
jg
and
jne
jo
push
inc
push
mov
stos
test
sbb
push
sub
xchg
cmc
push
dec
es
add
push
es
push
mov
jp
shl
imul
jno
test
add
adc
jnp
aam
cwde
mov
or
test
and
or
data16
gs
sahf
dec
cld
jo
dec
jne
push
fwait
rol
(bad)
pop
and
mov
xchg
cmp
mov
sub
mov
mov
push
fldcw
mov
std
in
retf
mov
jbe
pop
icebp
add
push
cmc
sub
inc
(bad)
push
or
lock
xor
nop
dec
dec
mov
mov
pop
push
mov
pusha
dec
xor
lods
fldenv
cmp
mov
xor
push
loop
pop
xchg
adc
out
push
add
or
inc
retf
aas
and
lods
(bad)
mov
push
add
dec
retf
sub
test
push
add
aaa
sbb
jmp
xor
mov
ds
mov
fsub
sbb
(bad)
iret
xor
dec
test
sti
push
inc
mov
in
sti
push
(bad)
les
repnz
js
and
sbb
cs
or
mov
out
scas
lock
sub
jmp
pop
pop
repz
jge
enter
call
mov
ins
add
push
jp
xor
(bad)
lock
gs
sub
shr
push
inc
jb
cld
sub
lahf
or
jns
jbe
fild
dec
cmps
call
mov
pop
in
add
mov
cmc
cmc
sub
sub
pop
mov
mov
pushf
cmp
and
xor
sbb
scas
inc
popf
add
lds
adc
and
(bad)
repnz
inc
cmp
mov
add
out
sbb
push
dec
or
mov
dec
push
jl
cmp
inc
retf
ins
dec
pop
mov
jmp
xor
inc
fsub
or
imul
stc
pushf
fisttp
ret
cmp
inc
(bad)
xor
xchg
ret
pop
lods
and
setno
mov
outs
sub
fdiv
push
call
lea
stos
ret
dec
push
mov
stc
cli
push
add
fbld
push
pop
shl
dec
mov
mov
std
mov
loop
fxch
in
rcl
movs
adc
(bad)
icebp
add
cmp
fnstsw
pop
mov
inc
aam
in
sub
mov
(bad)
cmp
mov
cmp
mov
call
popa
sub
ins
nop
sub
loope
xchg
sbb
mov
out
out
jg
or
cmp
mov
out
sti
stos
aad
in
or
ins
js
enter
mov
stos
cmp
xor
iret
xor
push
xlat
(bad)
xor
loopne
cmp
push
nop
mov
out
add
xor
(bad)
(bad)
mov
int3
not
push
pop
add
aad
and
scas
iret
xor
lahf
neg
cmp
mov
push
(bad)
repnz
pop
push
je
mov
and
dec
jae
aaa
add
stos
sbb
push
outs
or
sub
dec
cdq
or
arpl
inc
lahf
mov
dec
loopne
clc
xchg
jb
and
lds
pop
addr16
pop
daa
ror
pop
mov
mov
mov
sahf
mov
icebp
lea
and
call
lods
mov
sbb
lods
adc
lea
or
jle
pop
ret
popa
or
inc
ret
xor
sub
cwde
push
mov
xchg
fistp
jle
inc
retf
imul
mov
(bad)
cwde
out
aam
mov
mov
ror
mov
rcr
mov
fwait
mov
ja
pusha
sub
pop
mov
and
xchg
adc
cmp
dec
pop
inc
aad
outs
fs
add
xor
inc
(bad)
in
rol
leave
jb
cmp
lds
fmul
sbb
retf
sahf
and
mov
inc
push
push
test
(bad)
jmp
xchg
push
lahf
cmp
std
or
sbb
shl
in
popf
jle
cwde
lea
scas
imul
lods
jmp
mov
adc
push
inc
xor
adc
das
(bad)
repnz
inc
mov
jle
rcr
pop
jns
jo
dec
inc
daa
push
fwait
pop
add
dec
je
add
push
(bad)
sub
je
mov
sahf
mov
dec
jmp
xlat
in
imul
leave
xchg
add
adc
or
dec
push
xor
and
je
fisubr
jle
xchg
mov
imul
mov
mov
xor
push
scas
add
push
inc
ss
jns
cwde
adc
push
mov
push
test
or
push
xchg
retf
jbe
(bad)
in
pop
add
fwait
dec
sbb
add
mov
jno
in
xcrypt-ecb
cmps
lea
xor
je
pop
pop
or
or
sbb
adc
fimul
adc
adc
xor
xor
cld
cmps
pop
lahf
fisttp
or
pop
loop
repnz
cld
idiv
cli
lods
sub
popf
fldenv
pusha
leave
(bad)
neg
aad
cmp
xchg
inc
call
xchg
sbb
jecxz
lahf
push
das
(bad)
jno
scas
nop
sbb
jmp
iret
cli
stos
xchg
cs
clc
dec
movs
sub
pop
push
cmp
fs
rcr
repz
ja
fdivp
xchg
xor
or
call
mov
inc
outs
(bad)
inc
(bad)
ret
inc
push
jb
cmp
imul
xor
outs
or
mov
inc
xor
nop
stos
and
enter
sub
add
ins
adc
cdq
test
pushf
jmp
dec
ins
xor
es
dec
push
loop
mov
imul
cmc
add
xor
cwde
xchg
mov
das
sbb
ror
repnz
cdq
fstp
pop
and
sar
lahf
add
and
stos
inc
retf
into
mov
mov
retf
sbb
push
gs
push
xchg
shl
sub
jp
scas
inc
mov
pslld
popa
ins
aaa
mov
outs
rcl
inc
push
add
(bad)
mov
push
adc
fst
cmp
jno
push
jge
(bad)
es
pop
inc
mov
pushf
popa
ins
and
retf
test
and
dec
test
xchg
stos
(bad)
mov
mov
in
cdq
inc
imul
mov
sti
and
imul
mov
sub
mov
adc
out
and
repz
adc
mov
sar
mov
sbb
adc
hlt
scas
dec
(bad)
bswap
push
push
in
xchg
sbb
fdivrp
jae
enter
fisubr
dec
pop
mov
adc
call
lods
test
add
or
call
push
xchg
nop
push
adc
retf
in
sub
pop
and
pop
or
js
sbb
push
int3
sbb
and
inc
pop
ds
pop
sbb
test
pop
fstp
inc
jb
pop
data16
rcl
mov
xchg
mov
ins
fs
mov
sub
or
retf
call
inc
jg
adc
and
mov
jg
dec
mov
aad
xor
stc
ror
outs
jle
fidiv
sub
mov
scas
mov
test
push
sbb
push
sbb
push
jle
xor
or
call
cdq
dec
xchg
mov
out
mov
(bad)
cmp
mov
mov
(bad)
mov
imul
mov
in
and
out
into
rcr
sbb
push
and
ja
loop
cld
jecxz
xor
(bad)
stos
popf
jecxz
popf
lods
loop
std
jecxz
jne
mov
int
xlat
(bad)
pop
retf
sbb
rcr
lods
pop
test
out
xor
jno
mov
movs
retf
popa
mov
sbb
mov
jg
add
sub
cdq
cdq
pop
fiadd
inc
cmp
in
sar
fisttp
mov
dec
mov
jl
pop
inc
les
pop
pop
popa
fnstenv
cmovo
cmp
push
enter
scas
test
lods
cmc
loope
jo
fmul
add
mov
pop
hlt
in
jecxz
and
sete
push
mov
and
fisubr
aas
std
call
aad
outs
cmc
call
mov
call
pop
outs
out
push
jnp
cmc
stos
retf
in
mov
aas
es
sbb
sub
fnstcw
mov
add
enter
or
stc
mov
push
jg
daa
cmp
or
xchg
fwait
or
int
pushf
loop
cdq
push
xor
fnstcw
adc
jns
adc
aad
jmp
push
adc
sbb
sahf
dec
test
lock
add
push
push
adc
adc
sbb
hlt
sub
(bad)
cmp
out
add
mov
push
sub
adc
pop
inc
pushf
push
lea
mov
mov
aaa
xchg
dec
test
mov
and
aas
xor
inc
sbb
cmp
popf
test
sbb
mov
pop
or
imul
outs
ds
(bad)
dec
aad
xchg
ins
shl
mov
imul
xchg
into
jae
lock
test
adc
cmp
jmp
xor
loope
(bad)
jnp
sub
(bad)
dec
mov
cmps
and
in
movs
loope
add
jg
xor
test
push
cmps
in
in
ret
imul
jle
lods
add
mov
call
cmp
jg
stos
sub
rcr
xor
ja
test
xor
push
ret
aaa
cmp
mov
add
pop
cwde
lods
sbb
(bad)
cld
inc
push
fcomp
push
icebp
and
and
or
fild
ss
or
xchg
pop
push
push
and
pushaw
cmp
lahf
push
lahf
dec
push
imul
inc
add
jno
push
xchg
xor
cmc
addr16
fisub
jmp
movs
gs
xor
stos
push
mov
mov
outs
retf
jmp
(bad)
out
push
data16
popa
sub
jne
out
(bad)
out
inc
outs
inc
out
test
in
fs
pop
movs
push
mov
nop
nop
pop
pop
ds
push
sbb
or
retf
int3
mov
mov
test
lea
mov
js
push
cdq
push
loope
out
cmp
add
mov
push
aas
xor
push
rcr
(bad)
push
cwde
cwde
jb
outs
gs
ja
dec
mov
enter
std
mov
jle
mov
sbb
add
loope
div
jge
cmp
and
and
fld1
(bad)
and
mov
test
add
pop
data16
int
xchg
dec
fwait
cmp
repz
xchg
out
ss
jmp
inc
add
jns
push
icebp
mov
fld
fwait
loop
pusha
cmc
xlat
sar
repz
loope
ret
jne
mov
mov
sbb
and
mov
adc
mov
or
pop
inc
jnp
shr
test
push
jo
out
(bad)
dec
or
pop
lds
je
and
and
int3
mov
mov
lea
add
or
pop
ja
call
retf
rol
fs
mov
jg
jp
sbb
mov
dec
push
scas
push
inc
ins
clc
sar
xchg
paddb
in
mov
repz
fst
inc
jae
imul
inc
lods
push
ss
xlat
sbb
lahf
pop
xor
jnp
xchg
popa
cmp
dec
mov
data16
retf
loopne
sub
jmp
adc
mov
jbe
fist
ds
jns
pop
mov
pop
rol
test
push
cmps
(bad)
rol
sbb
(bad)
pop
mov
retf
jbe
shl
mov
int
jg
sub
xor
int
xor
imul
push
fldcw
cmps
retf
sbb
je
mov
mov
dec
pop
lahf
jle
lea
add
pop
adc
call
xor
cmps
mov
sub
pushf
imul
sub
(bad)
jecxz
xlat
ret
inc
inc
(bad)
stc
repz
jmp
pop
mov
mov
cmps
cld
mov
sub
dec
(bad)
inc
dec
cmp
lock
xchg
mov
fbld
fwait
and
enter
pop
pop
inc
lahf
in
aam
add
mov
jmp
jb
sbb
repnz
jbe
mov
push
icebp
dec
movs
cli
retf
add
pop
and
int
leave
shl
dec
cs
pop
aas
xchg
fdivr
ds
into
jo
(bad)
dec
cmp
ss
xchg
addr16
aad
mov
mov
loope
xchg
pop
pop
cdq
cmp
sub
in
ins
cwde
mov
es
xchg
push
push
push
(bad)
cmp
xor
cmps
ins
xchg
je
mov
jge
or
ret
inc
sbb
jge
(bad)
sub
dec
retf
cmp
jbe
retf
mov
enter
push
cwde
setno
mov
sub
ins
jnp
cmp
jno
cld
or
dec
sbb
inc
push
mov
sbb
repnz
jmp
and
adc
pop
shl
je
dec
scas
and
pop
aaa
(bad)
stc
sahf
aad
std
push
or
mov
pop
repz
mov
(bad)
(bad)
arpl
lds
lock
ficom
in
pop
or
dec
sbb
loope
fistp
or
and
pop
and
or
xor
gs
ins
pop
adc
xchg
and
sar
and
movs
nop
imul
add
add
xchg
shl
dec
jl
rol
xor
push
aam
adc
outs
add
add
or
pop
nop
daa
xor
test
inc
(bad)
mov
mov
in
inc
pop
sub
xchg
rcl
sub
jmp
push
int3
or
aad
stc
jae
addr16
dec
fnstcw
xchg
(bad)
push
adc
scas
inc
int
lahf
pop
not
dec
sbb
shr
data16
out
arpl
nop
pushf
mov
dec
fsub
jge
lahf
jns
enter
mov
into
std
aaa
sbb
dec
sbb
idiv
jbe
aad
or
sub
sbb
mov
stc
ss
dec
dec
push
lock
stc
jae
push
mov
sub
sahf
mov
inc
(bad)
daa
jns
xchg
jge
push
outs
mov
push
sbb
iret
fisttp
and
mov
arpl
xchg
cs
aam
cmp
xor
sub
(bad)
pop
sub
inc
js
cmp
ds
cmp
xor
jge
mov
movs
add
test
dec
daa
inc
fcomp
adc
pushf
add
test
jbe
cwde
test
mov
jb
std
and
jg
xchg
into
pop
dec
sub
test
jmp
es
cmps
ret
rcr
repz
pop
pop
int3
(bad)
mov
retf
in
fldcw
cmp
add
jmp
or
sub
push
(bad)
lahf
and
push
mov
lods
or
inc
add
cmc
sbb
cmp
cmp
jae
out
or
(bad)
add
fidiv
sbb
cmp
and
sub
pop
sub
add
(bad)
cmp
mov
adc
ins
xchg
push
nop
gs
mov
mov
in
loop
jmp
aas
pop
ds
fcomp
ret
js
fcmovu
sub
cmp
jbe
adc
and
mov
iret
jle
out
jmp
xor
xchg
sub
jmp
dec
mov
lea
(bad)
xor
inc
mov
sbb
cmp
imul
mov
jmp
push
mov
xchg
(bad)
enter
mov
int3
push
jns
loope
sub
and
cmovp
je
adc
lods
push
mov
cmp
shr
std
das
inc
adc
fldenv
adc
xor
mov
int3
cdq
adc
sub
cmp
push
js
adc
ret
xor
xor
bound
and
push
out
out
mov
dec
lods
nop
fs
out
add
push
and
mov
cmp
adc
scas
fsubr
pop
bound
xchg
push
add
or
(bad)
stos
and
cmp
dec
add
xor
out
cmp
leave
scas
rcr
shl
pop
les
mov
add
in
inc
shr
jb
inc
not
mov
imul
push
shl
aas
int
push
test
js
in
mov
xor
cmp
cld
mov
call
mov
cmp
mov
mov
add
mov
outs
arpl
mov
and
fwait
add
aaa
jge
icebp
jno
push
stos
jne
dec
stc
xchg
sbb
aas
jecxz
fadd
das
mov
push
or
daa
arpl
jae
call
pusha
xchg
out
fdivp
es
fisttp
loopne
lock
das
mov
stc
retf
imul
in
and
lods
popa
adc
ficomp
cmp
push
iret
(bad)
out
push
out
sbb
pusha
adc
enter
jns
push
sub
sahf
sbb
push
jnp
ins
addr16
xchg
dec
stc
gs
jmp
popf
lods
or
sahf
push
xchg
or
faddp
adc
stos
out
fist
jle
push
cmp
mov
mov
or
lahf
les
mov
jo
adc
mov
dec
xor
out
xchg
mov
rol
xlat
or
arpl
cld
test
cmps
popf
(bad)
mov
test
lock
add
test
scas
stc
sbb
movs
movs
mov
in
rcl
scas
shl
or
(bad)
movs
pop
stos
(bad)
push
les
in
mov
adc
inc
sti
push
ins
adc
repz
push
movs
test
pop
hlt
xor
rol
cmp
imul
imul
pop
mov
adc
push
stc
inc
dec
retf
loopne
mov
mov
pop
dec
movs
mul
repz
xor
mov
data16
fwait
cmc
push
test
cmc
xchg
retf
das
mov
pop
dec
xor
xor
add
or
or
icebp
es
or
mov
mov
shl
lods
xchg
imul
fbld
leave
xchg
hlt
push
mov
(bad)
or
movs
lds
dec
out
lods
mov
jae
(bad)
push
mov
push
jle
cdq
lahf
outs
popf
inc
push
in
inc
mov
test
push
inc
jae
mov
or
push
mov
push
ret
in
movs
or
and
loope
mov
repz
dec
es
mov
dec
mov
not
jne
in
cmp
lahf
outs
pop
loop
dec
mov
gs
pushf
sbb
cmp
(bad)
mov
or
jp
inc
mov
adc
mov
jno
push
retf
in
and
inc
in
pop
(bad)
fisubr
(bad)
xor
aaa
aad
jp
or
xchg
out
ss
mov
push
adc
xor
cmp
sti
and
mov
loop
mov
lahf
mov
xchg
pusha
aaa
in
dec
repz
scas
fild
or
mov
movs
xor
xchg
jge
push
push
fldcw
(bad)
dec
sti
(bad)
sbb
xchg
push
fisub
jecxz
and
jb
inc
bound
in
and
sahf
movs
xchg
gs
push
mov
int3
retf
cmp
rol
lahf
push
jo
push
out
int3
mov
les
mov
xor
push
in
dec
daa
jmp
jecxz
sti
jbe
cs
pusha
mov
mov
mov
sbb
xor
repnz
bswap
fiadd
inc
enter
frstor
stc
shl
sbb
inc
aas
jecxz
arpl
cdq
pushf
inc
push
pop
fisttp
push
sbb
sqrtps
add
sub
loope
or
jae
sub
xor
cmps
js
dec
in
xchg
cwde
pop
pop
(bad)
cpuid
inc
sbb
imul
(bad)
add
cmp
cmps
fstp
xor
imul
push
stos
pop
ja
dec
inc
shl
mov
stc
jno
xor
shl
aas
mov
mov
mov
pusha
in
das
clc
or
sbb
sar
sub
fdiv
test
xchg
mov
daa
mov
xchg
push
imul
mov
loopne
fdivr
pop
cwde
xchg
xor
adc
jge
cmp
test
fnstsw
test
rep
out
aad
jae
repnz
gs
sbb
jno
inc
mov
enter
daa
xlat
pop
retf
lds
pop
mov
lea
pop
aaa
ret
dec
cmp
daa
ret
inc
mov
cmp
into
pop
cs
jo
out
sub
cld
mov
fcmovne
fdiv
cmp
jp
bnd
dec
push
sbb
icebp
(bad)
mov
lea
rcr
push
aam
adc
mov
sub
push
fcomp
sbb
in
loope
xor
retf
dec
(bad)
ret
jmp
xchg
jmp
push
jbe
dec
dec
add
and
or
push
and
ss
lods
and
mov
cmps
jecxz
pop
loope
mov
jmp
push
js
push
outs
adc
jbe
add
add
or
inc
out
jno
and
adc
mov
push
imul
dec
sub
xor
mov
stos
int3
pushfw
push
xchg
jne
fucomip
sbb
push
test
jl
loope
inc
ja
daa
(bad)
cmps
std
das
imul
rol
sti
xor
outs
xchg
xchg
fwait
out
mov
and
mov
push
jo
mov
pusha
pop
push
xchg
aam
dec
fidiv
adc
push
mov
mov
into
jg
adc
add
rcr
stos
xchg
loop
loopne
clc
shl
mov
addr16
call
push
push
(bad)
aaa
and
ret
xchg
fld
imul
and
movs
mov
dec
ds
mov
cmps
mov
xchg
stc
jne
or
mov
xchg
pop
mov
pop
ja
aaa
and
aad
pop
jp
mov
aas
imul
(bad)
fcom
mov
jg
data16
xchg
sahf
jnp
jns
ret
dec
movs
sub
sub
dec
div
xchg
mov
das
mov
mov
in
mov
movs
xchg
mov
sbb
mov
fild
out
retf
jp
lods
mov
mov
outs
xor
pop
int
ja
aas
adc
add
int3
sti
pop
mov
pop
pop
add
clc
mov
cmp
inc
or
pop
push
retf
loopne
pop
add
call
add
(bad)
jno
or
aam
and
les
xchg
cmps
les
pop
xor
cmp
sbb
sbb
push
cmp
out
frstor
(bad)
sbb
adc
ins
stos
popa
mov
inc
sar
add
ficom
ds
(bad)
aas
pushf
sbb
inc
jmp
in
cld
fisttp
jg
(bad)
jmp
mov
inc
cmp
sbb
out
cld
push
je
jle
mov
(bad)
in
lods
dec
outs
out
xor
jns
or
jmp
push
rcr
sbb
mov
out
inc
call
fdivr
jmp
mov
std
cmp
fucomi
or
xor
xor
or
adc
out
dec
inc
add
(bad)
sbb
xchg
out
pushf
enter
add
push
popa
jmp
cwde
fisttp
retf
pop
aaa
push
aas
xchg
or
lahf
(bad)
clc
ss
data16
sub
mov
sbb
push
mov
inc
nop
pop
jae
out
mov
xchg
aad
repz
xchg
outs
sbb
add
sahf
(bad)
adc
pushf
movs
imul
sbb
inc
pop
jg
ror
sbb
call
inc
mov
fadd
retf
loopne
and
cmp
test
push
retf
mov
inc
jp
enter
clc
ins
mov
aam
adc
cmps
mov
or
jb
or
push
inc
xor
(bad)
imul
retf
(bad)
and
jbe
jg
stos
movs
inc
pop
inc
std
imul
ret
movs
xchg
out
xchg
xor
or
xor
or
je
sahf
test
adc
out
push
mov
push
rcl
std
jl
cmps
aad
sub
or
lock
mov
add
mov
pop
inc
call
pop
cmp
push
call
es
loop
push
ss
dec
jge
push
xchg
(bad)
ds
mul
leave
stos
sti
imul
ror
aas
call
js
dec
stc
(bad)
out
fs
pop
xchg
sahf
jge
fldenv
mov
dec
xlat
das
cmps
ins
std
pop
(bad)
lock
fwait
adc
xlat
adc
xor
cmp
or
pop
dec
or
add
or
push
outs
lods
shl
or
inc
push
in
movs
clc
enter
imul
or
stos
jp
test
xchg
fild
add
das
stos
sub
cmp
mov
(bad)
daa
out
push
push
jp
ss
dec
and
xor
mov
lahf
dec
out
aas
ficomp
aad
jmp
test
xchg
push
popa
mov
test
xor
adc
pusha
push
(bad)
call
cmp
mov
repz
mov
pushf
fwait
pop
and
xor
jg
or
and
mov
add
pop
pusha
sub
sbb
pusha
dec
icebp
mov
ret
hlt
mov
pop
dec
mov
dec
sbb
ins
(bad)
sbb
lahf
sub
add
pop
cwde
scas
fld
mov
aam
adc
(bad)
repnz
cmc
mov
mov
adc
pop
inc
nop
or
pop
jbe
pop
daa
sbb
xchg
sahf
or
shr
pop
sub
or
stos
mov
push
call
mov
xor
mov
stos
pushf
and
mov
lea
aam
enter
fs
sbb
sub
inc
pusha
adc
(bad)
ja
js
push
sbb
jbe
xchg
fs
(bad)
jo
daa
mov
pop
ins
push
mov
push
cdq
(bad)
cld
pop
jp
xchg
xchg
jmp
sbb
(bad)
retf
test
or
jmp
mov
sub
lods
add
or
mov
cmc
lea
jno
xor
ja
js
nop
push
pop
cli
shl
dec
arpl
xchg
leave
ror
sbb
fs
mov
mov
or
iret
popa
(bad)
jbe
cmp
icebp
aaa
in
xor
stos
sub
call
(bad)
(bad)
sub
sub
inc
test
jmp
jns
mov
mov
sub
mov
mov
add
sti
pop
arpl
dec
sbb
scas
into
aad
retf
aad
fbstp
in
fs
mov
cmp
push
push
leave
lock
ror
cmp
fs
sub
popa
pop
dec
and
add
ss
sub
dec
jbe
icebp
(bad)
push
mov
mov
gs
push
aad
push
repz
fwait
add
cmp
enter
jae
(bad)
hlt
xchg
sbb
mov
add
push
xchg
inc
pop
cmp
or
adc
out
xor
mov
push
jne
cdq
cmps
sbb
pop
lahf
xchg
retf
fimul
fwait
xor
int
jle
les
pop
or
cmc
or
shl
jg
fsubp
push
repnz
retf
sti
je
sbb
push
popf
loope
push
(bad)
push
clc
jae
sub
addr16
add
push
repz
dec
(bad)
(bad)
mov
push
xchg
push
xor
pop
mov
cmps
adc
mov
xchg
cld
in
sbb
dec
pop
mov
loop
in
cwde
cmps
xchg
fs
lods
test
dec
clc
call
mov
jmp
xor
mov
loope
jnp
dec
adc
jns
sbb
inc
or
in
stos
sub
in
(bad)
(bad)
cmp
frstor
stos
adc
sahf
dec
sti
es
or
aas
mov
sar
jmp
push
fadd
cmps
mov
ss
int3
mov
mov
je
loopne
pusha
into
adc
pushf
pushf
movs
cmp
mov
inc
fs
daa
and
cmp
pop
ror
loope
sbb
jl
jo
ret
xor
cmp
pusha
mov
je
xchg
shl
pop
fdiv
out
sub
pop
mov
mov
clc
inc
dec
xor
mov
mov
xchg
call
cmps
out
test
pop
mov
mov
inc
iret
ret
jp
mov
repz
cmp
xchg
shr
dec
stos
fsub
cmp
(bad)
or
popf
mov
add
jge
(bad)
stos
popf
xchg
gs
lods
xlat
sbb
sbb
pop
xchg
(bad)
(bad)
jae
mov
mov
stos
jg
sbb
add
sbb
fisttp
adc
sub
pop
bound
xchg
(bad)
pop
mov
xchg
mov
mov
sub
lods
dec
pop
sub
inc
fwait
or
in
cmp
das
loop
sub
repnz
push
ins
sahf
ss
pop
aas
fnstsw
push
repnz
adc
cmps
xor
(bad)
call
pop
cmc
call
(bad)
mov
inc
cmp
inc
leave
sbb
xchg
pop
repz
xor
cld
int
wrmsr
(bad)
repnz
push
std
push
and
fadd
mov
mov
dec
add
jge
fadd
pop
ja
cdq
mov
or
ds
or
test
shl
push
hlt
ins
retf
jmp
cmp
gs
lds
aaa
jnp
pop
test
sar
ss
cwde
push
inc
push
add
ds
mov
jecxz
cmp
cmp
jno
fld
push
mov
cmp
and
xor
jge
imul
add
sub
iret
xor
inc
and
jmp
lea
or
ret
mov
cmp
jl
lock
push
mov
cmps
add
add
mov
in
mov
or
pop
cmp
pop
add
pop
pop
jle
loop
xor
cmp
or
outs
sub
push
inc
mov
xor
int
mov
push
cmp
jb
in
sti
or
aas
dec
pusha
xchg
dec
ss
lds
mov
lock
call
or
pop
rol
xchg
xor
xchg
cmp
out
cli
daa
xor
mov
pop
dec
xchg
sbb
gs
out
int3
mov
mov
retf
mov
bound
js
jmp
xlat
rcl
xchg
in
sub
or
dec
jae
loop
add
cmps
mov
mov
les
shr
cld
mov
in
adc
xor
scas
and
sbb
pop
or
and
test
stos
popa
fld
adc
fdivr
outs
mov
mov
inc
adc
add
popa
dec
mov
jns
jp
jo
sar
jl
sbb
retf
cld
dec
jbe
iret
cmp
pop
xor
outs
ret
push
jae
sbb
arpl
mov
pop
rcl
pop
push
mov
fstp
push
or
cmp
sbb
mov
mov
aas
cli
adc
rcr
push
bound
cwde
add
ja
and
mov
cmp
fiadd
add
rcl
xor
loopne
xlat
ja
movs
test
movs
out
or
cmp
pop
cwde
daa
jbe
rcl
(bad)
or
mov
ins
aas
pop
test
jmp
inc
mov
xchg
push
inc
cmp
hlt
sub
sub
stos
js
leave
and
cmps
out
mov
mov
les
push
test
enter
sub
jb
xor
shl
add
mov
hlt
icebp
test
sahf
jg
jp
push
push
inc
mov
sub
retf
inc
push
not
test
(bad)
xchg
idiv
dec
shl
aam
inc
lahf
xor
add
ds
or
xor
mov
aam
pop
mov
or
push
inc
out
call
mov
popa
shl
dec
cmc
sub
push
xchg
cld
cdq
ret
inc
adc
into
pop
sbb
sahf
dec
push
xor
loop
out
mov
dec
jnp
fidivr
push
and
push
and
fidivr
push
sar
daa
aad
ins
mov
add
ds
outs
sti
xchg
or
cld
nop
pushf
sub
pusha
and
xor
push
sub
sub
dec
out
mov
xor
mov
jnp
jge
mov
arpl
hlt
or
retf
cmp
lds
sub
mov
call
mov
mov
mov
and
aas
jp
pop
jp
push
dec
loop
je
push
in
jno
push
nop
xchg
call
out
xor
sub
in
sub
call
adc
imul
dec
xor
pop
(bad)
ins
iret
sahf
addr16
push
push
shl
retf
(bad)
loope
js
cmc
popa
inc
mov
imul
jo
add
and
setnp
std
rcr
lods
mov
pop
mov
mov
ds
in
test
mov
or
into
or
ret
daa
rol
pushf
adc
adc
icebp
ret
(bad)
(bad)
loope
enter
in
add
sbb
and
pop
out
fisub
adc
mov
mov
fsub
aaa
add
push
retf
jb
pushf
sti
xchg
rcr
cmp
std
(bad)
cmp
pop
daa
add
repnz
sbb
icebp
les
(bad)
lds
imul
pop
sub
in
pop
repz
cmps
(bad)
fdiv
push
scas
in
and
call
xor
(bad)
ror
sbb
lock
test
dec
call
shl
cmc
sar
cwde
clc
aaa
not
mov
js
ins
ja
jl
mov
mov
add
push
lock
jbe
neg
aam
jne
cmp
std
add
cwde
ins
add
rcl
cli
push
imul
sar
scas
pop
cmp
mov
and
xor
enter
cli
aaa
shr
cmps
cmps
inc
adc
sub
push
cmp
fs
add
retf
xchg
xlat
fldcw
xchg
out
xor
mov
jecxz
xchg
sar
pop
add
and
add
add
pop
pushf
sbb
aad
sbb
in
sti
lods
mov
test
mov
mov
push
mov
xchg
pop
xor
push
mov
xlat
mov
and
pushf
cld
sbb
ins
cmp
fiadd
fucomip
xor
mov
aas
or
addr16
fwait
(bad)
xchg
in
jmp
fst
movs
sbb
test
leave
aaa
retf
mov
push
inc
in
xor
cdq
inc
xor
adc
div
push
dec
sub
push
enter
mov
xchg
leave
xor
mov
add
out
adc
fbld
inc
xor
in
lods
test
shl
push
sbb
into
xchg
fcom
push
fdiv
adc
(bad)
stos
adc
inc
or
lea
popa
lods
pop
cmp
xchg
mov
int3
shl
fst
sbb
inc
cmps
adc
inc
adc
lods
sbb
jp
fdiv
mov
mov
ss
popf
push
jecxz
mov
and
pop
fisttp
xor
push
push
jne
push
add
(bad)
out
fdivr
push
cli
dec
jmp
out
retf
xchg
stos
test
cmp
loope
arpl
mov
push
sub
pop
(bad)
sub
xchg
push
add
mov
cdq
mov
(bad)
loopne
cli
hlt
test
xlat
and
dec
in
cld
sub
and
sbb
jmp
or
xchg
lods
pop
ffreep
cmp
mov
ja
aas
stc
sub
call
bound
scas
dec
dec
call
ror
scas
rcr
sbb
movs
jg
in
xchg
(bad)
in
sub
fistp
jo
cs
daa
(bad)
daa
loope
(bad)
cmp
sar
or
aaa
outs
movs
stos
lahf
push
lock
jl
dec
xor
pop
or
dec
enter
jle
mov
jne
cwde
cmc
ins
dec
cwde
dec
mov
dec
cli
aam
push
cmc
xor
or
enter
je
scas
xor
fdiv
jbe
cmp
push
pushf
adc
mov
cmp
dec
lods
dec
loop
xor
mov
push
out
jnp
pop
cmc
jns
and
add
icebp
xor
inc
movs
bound
and
mov
push
out
jb
stos
dec
in
add
xchg
mov
mov
popa
movs
cmps
push
push
inc
test
and
mov
callw
sub
loope
fimul
out
dec
test
arpl
push
loop
dec
pop
or
or
jecxz
test
and
inc
inc
pushf
clc
push
mov
ins
cmp
repnz
push
adc
int3
js
sahf
stos
scas
sbb
mov
mov
daa
push
inc
mov
shl
pop
pop
or
jns
(bad)
cmp
cmps
mov
mov
dec
sbb
ficom
mov
sbb
mov
rcr
icebp
sbb
jmp
push
outs
inc
inc
leave
lods
out
mov
int
and
push
test
xor
out
inc
lahf
into
add
jecxz
push
imul
push
out
inc
or
inc
xchg
push
push
jne
and
inc
xchg
nop
mov
add
sbb
inc
mov
sbb
add
push
sbb
pop
inc
test
pop
arpl
dec
stos
and
rcr
inc
fistp
ins
in
les
pop
inc
movs
add
imul
lods
dec
jns
and
int
icebp
aad
xchg
inc
pop
mov
rol
mov
xor
lods
in
pop
shl
mov
or
add
dec
inc
inc
pop
scas
mov
out
add
test
add
outs
pop
jp
cs
push
lea
inc
shl
sti
sub
stos
sbb
and
inc
loope
push
jb
adc
stos
xor
leave
jg
inc
lds
lahf
mov
sbb
xchg
movs
cld
aam
into
and
je
push
jae
(bad)
push
sbb
popf
scas
push
ds
pop
repz
sub
mov
ret
cld
test
(bad)
xor
loop
(bad)
popa
ss
mov
xor
int
fcomp
(bad)
mov
xchg
fnstcw
add
inc
dec
dec
outs
add
std
(bad)
(bad)
push
mov
leave
retf
icebp
(bad)
adc
dec
jle
in
jne
sub
xor
sar
sbb
inc
or
sahf
fwait
push
fsubrp
or
repnz
and
sub
hlt
shr
sbb
leave
mov
mov
inc
mov
gs
add
test
scas
inc
sbb
mov
inc
mov
repnz
lods
les
jne
(bad)
jo
add
cdq
pop
cmc
gs
mov
outs
mov
push
scas
inc
not
push
push
ds
cli
into
inc
out
cmp
(bad)
loope
mov
clc
cmc
push
aas
dec
aaa
int
imul
in
add
icebp
inc
and
sar
(bad)
imul
movs
add
retf
stc
add
repz
rol
(bad)
mov
add
cs
xchg
mov
pop
mov
add
sub
repz
imul
xor
ins
mov
jae
xor
aas
mov
fistp
sbb
add
mov
(bad)
sahf
sbb
push
(bad)
and
xor
fnstsw
jg
sub
pop
cmp
fwait
mov
fwait
xchg
jne
xor
popf
or
(bad)
ficom
leave
mov
jbe
dec
and
pop
jmp
stc
(bad)
daa
ss
dec
ins
sub
dec
xor
lahf
mov
into
mov
add
pop
test
mov
call
(bad)
aam
xchg
leave
retf
push
push
loopne
jae
mov
and
cmps
add
pop
xchg
push
vpunpcklwd
ins
sub
fisttp
pusha
test
cwd
cmp
std
aas
mov
ds
lds
push
push
cmp
mov
stc
xor
fstp
dec
mov
les
sbb
mov
fst
sub
cmp
cmp
fnsave
and
mov
xchg
sub
inc
aas
mov
cmc
sub
(bad)
fisub
and
fcomp
jmp
leave
xchg
scas
dec
and
sub
les
rol
jno
inc
fistp
bound
and
or
or
pusha
sub
jmp
cmps
xchg
hlt
popa
test
cld
inc
sti
loope
test
mov
shl
inc
cmp
sub
fst
jae
pop
push
test
out
cmp
sti
or
aad
ret
sub
js
add
idiv
cs
outs
into
mov
in
(bad)
sub
sub
sbb
sbb
or
mov
dec
add
stos
push
lds
add
sub
inc
ret
retf
pop
adc
mov
mov
jge
out
sbb
adc
jo
push
ds
inc
shr
fisttp
push
pusha
sub
inc
retf
sbb
jnp
mov
xor
(bad)
loopne
dec
dec
push
sub
mov
clc
(bad)
mov
sbb
fcomp
push
or
movs
lods
push
pop
ror
xchg
jb
lock
jns
clc
mov
push
(bad)
das
frstor
dec
mov
and
out
loop
jns
daa
sub
adc
in
daa
xchg
xor
out
stc
ins
repnz
out
mov
test
aas
mov
ror
ja
mov
sbb
(bad)
and
inc
idiv
pop
xor
imul
add
test
push
sub
cmp
mov
cld
cmps
jmp
adc
neg
fxch
pxor
mov
xchg
test
icebp
aas
sub
sub
cmp
fst
mov
jecxz
movs
ficom
jmp
mov
mov
mov
or
sub
push
or
call
shl
in
pop
lock
in
ret
dec
nop
call
lahf
push
or
mov
addr16
imul
push
dec
call
pop
pushf
mov
pop
add
jl
mov
push
add
cmp
ficomp
cmp
aam
and
push
cdq
(bad)
fisubr
ja
cmp
pop
int
aad
gs
ja
retf
jnp
jmp
cmp
push
test
mov
jbe
xor
bound
rol
sbb
je
jl
into
in
(bad)
loop
mov
mov
gs
pop
int3
stos
jge
or
add
sti
outs
jle
cmps
pop
jo
jb
jle
jg
pusha
adc
pop
(bad)
push
cmp
xchg
ds
aas
sub
cmp
js
rol
aam
add
rep
out
test
cmp
xor
pop
and
adc
cdq
inc
repz
dec
push
retf
jp
or
(bad)
lea
fsubr
and
inc
fild
dec
int3
sub
pushf
adc
lock
push
imul
les
sbb
addr16
sbb
add
xor
pop
jmp
mov
and
xchg
movs
xor
ss
jmp
adc
fist
dec
xchg
adc
aas
sub
or
mov
or
loope
lahf
popa
outs
jmp
push
(bad)
fild
je
pop
add
loope
leave
popf
in
leave
call
scas
pop
fwait
or
dec
sub
aas
mov
in
mov
retf
cdq
retf
test
xlat
adc
pop
mov
mov
inc
sub
adc
out
sbb
fcmovbe
pop
push
gs
jmp
pop
inc
ins
adc
sbb
mul
jnp
rcl
xchg
mov
mov
dec
lock
push
xor
jp
jmp
fs
into
icebp
out
push
inc
cdq
out
(bad)
mov
sub
xchg
mov
or
mov
test
push
mov
repz
jge
leave
test
push
(bad)
pusha
mov
fdivp
sahf
adc
xchg
jns
jmp
je
xchg
sbb
sub
aad
add
out
jbe
xor
adc
lock
inc
fcmove
push
cmps
sbb
retf
jmp
sub
mov
xor
mov
xchg
mov
leave
mov
push
outs
fdivr
shl
xor
lods
imul
cmp
in
popa
sbb
pop
clc
push
data16
(bad)
jae
(bad)
pop
inc
adc
or
push
adc
stc
xchg
in
jle
adc
add
mov
lahf
iret
repnz
or
xor
cmps
jnp
enter
cvttps2pi
inc
pop
in
es
adc
sbb
adc
ror
cs
frstor
mov
and
push
push
sub
adc
cdq
cmp
(bad)
mov
aas
adc
inc
add
ror
add
test
xchg
hlt
mul
fsub
jo
or
test
ja
cdq
pushf
xor
cdq
sbb
mov
sbb
fidivr
dec
sbb
jb
push
cmp
pop
cmc
jae
dec
out
sub
inc
call
adc
mov
add
sbb
pop
cmps
arpl
xchg
xlat
ret
mov
movs
xor
mov
loopne
inc
push
push
cmp
dec
(bad)
ja
and
jne
out
repnz
or
fdivr
jmp
mov
push
ins
pop
(bad)
sar
push
sub
out
and
xor
rcr
imul
push
cmp
and
call
fs
pop
push
xor
mov
sti
sbb
inc
push
imul
or
cdq
test
(bad)
outs
jns
fnstenv
sti
fimul
and
pop
data16
inc
push
inc
in
fld
xor
call
out
call
test
shr
aaa
fs
sub
inc
mov
dec
and
cwde
or
pop
in
out
call
sub
scas
cmp
push
sbb
push
repz
std
ret
subps
shl
inc
xor
push
add
scas
push
and
dec
xchg
in
dec
add
imul
sub
scas
xor
fsub
sti
mov
mov
sub
pop
and
ret
stos
push
call
and
mov
es
mov
xlat
sbb
imul
pop
fisub
mov
dec
loopne
jl
cmp
push
stc
repnz
inc
test
dec
cld
cld
xchg
cdq
and
sub
mov
mov
cdq
retf
call
and
bound
cdq
jl
mov
xchg
and
dec
dec
push
mov
sub
mov
sub
push
jmp
or
iret
mov
in
cwde
int3
sbb
ror
push
pusha
push
das
push
mov
in
call
clc
mov
hlt
cli
sbb
loope
(bad)
cmp
xchg
call
test
inc
rol
out
mov
rcl
ret
sti
(bad)
ins
cmp
pop
in
inc
fwait
xchg
jecxz
sub
pop
fwait
leave
hlt
mov
sub
mul
popf
xchg
(bad)
push
xchg
sbb
sub
ficom
ror
out
push
sbb
call
push
dec
sub
mov
dec
xor
enter
adc
xlat
cmps
dec
iret
xor
imul
push
lahf
and
repnz
sub
test
push
adc
adc
sbb
(bad)
adc
shl
int3
jmp
sti
jmp
dec
dec
xor
mov
or
fld
and
call
arpl
lea
fld
ins
jo
push
mov
call
mov
js
(bad)
sete
es
xlat
xchg
or
add
cwde
inc
out
addr16
ret
jne
jb
iret
test
mov
dec
mov
dec
dec
xchg
popa
call
addr16
test
sahf
pop
sti
jg
test
sub
test
ror
dec
fwait
push
and
push
cmp
fst
not
ss
fsub
ret
pop
out
cmp
(bad)
aas
cmp
test
push
push
mul
ss
fistp
jnp
cmps
movs
push
add
jae
nop
jnp
jo
daa
pusha
push
mov
add
out
mov
pop
add
push
cli
add
and
adc
stos
xchg
mov
adc
xchg
lock
repnz
addr16
push
sbb
pop
mov
xchg
and
shl
sahf
xlat
adc
dec
out
fwait
sub
leave
cs
inc
jge
and
mov
aam
push
sbb
xor
je
inc
adc
fild
add
xchg
retf
xchg
std
pop
and
icebp
sub
leave
dec
jae
sub
retf
sti
jg
cmp
push
clc
mov
mov
clc
and
rol
nop
xor
ss
mov
fwait
inc
iret
aas
loope
add
aad
pusha
sbb
push
repnz
inc
jecxz
ins
addr16
les
mov
repz
jo
dec
dec
in
push
sub
retf
rcl
das
scas
call
lds
inc
pushf
je
sub
mov
or
not
or
and
out
push
add
inc
push
sbb
enter
nop
iret
out
pop
adc
fiadd
(bad)
cmp
cmp
jns
jl
push
popa
push
mov
push
and
push
(bad)
sub
inc
daa
aaa
sbb
cs
mov
mov
pop
mov
cmps
(bad)
loopne
mov
popf
in
loop
stos
es
in
push
imul
ds
iret
adc
mov
or
dec
xchg
out
jmp
push
and
push
dec
cmc
test
cdq
(bad)
in
xchg
push
shl
psubb
jbe
inc
in
scas
mov
pop
xor
sub
out
push
push
inc
dec
rcl
adc
mov
repnz
cmp
push
lods
push
and
cmp
(bad)
fwait
popf
adc
fnsave
cs
in
add
ins
or
call
xchg
pop
adc
in
pop
push
mov
int3
inc
push
addr16
push
mov
mov
data16
rcl
aaa
mov
add
push
movs
cli
(bad)
clc
outs
push
in
mov
(bad)
out
cmc
cmps
das
pop
xchg
ret
sbb
xchg
iret
add
hlt
stos
cmps
rcr
std
mov
stos
push
push
jns
(bad)
imul
ja
sti
mov
and
and
cs
sub
out
dec
inc
not
push
and
dec
mov
mov
enter
cs
adc
test
jne
call
xor
movs
jecxz
out
jp
push
push
(bad)
repz
and
outs
sub
test
cmp
push
or
sub
jne
pop
test
nop
sbb
pushf
aaa
arpl
fldenv
xor
ds
or
movs
push
cs
cmp
xor
jns
pop
push
add
add
stos
(bad)
mov
cmp
mov
inc
xchg
inc
(bad)
je
popa
mov
push
mov
cwde
lds
pop
jnp
into
clc
dec
clc
ficom
iret
mov
inc
adc
inc
repz
fsub
fsubr
adc
(bad)
cli
imul
out
test
(bad)
pop
jnp
and
test
add
popa
loopne
xchg
fdivr
(bad)
push
xchg
cli
int
in
retf
pop
call
fimul
xchg
pop
mov
sub
shl
cmp
lahf
imul
inc
lds
dec
int3
mov
mov
adc
sub
jmp
jle
dec
mov
fnstcw
sub
and
push
cmp
cmp
dec
mov
pop
add
(bad)
sbb
pushf
movs
mov
mov
adc
mov
cmps
sbb
or
pop
jg
push
mov
dec
jmp
cdq
pop
gs
not
add
sbb
adc
pop
sub
jg
push
adc
pusha
or
dec
push
adc
mov
lock
push
inc
dec
(bad)
cmp
push
test
inc
outs
jp
xchg
dec
sar
imul
xchg
mov
push
enter
pop
sub
lock
into
jecxz
inc
je
icebp
lds
and
arpl
cdq
fs
mov
mov
shl
mov
pop
arpl
push
jns
adc
cmp
xor
loope
mov
pusha
cmp
push
repz
cld
les
fldenv
xchg
bound
adc
cmp
loop
push
adc
xor
in
inc
das
aam
aaa
mov
cmps
xchg
push
popf
fs
inc
jmp
add
pop
jmp
cwde
dec
mov
icebp
outs
leave
sbb
imul
movs
add
shl
push
mov
jne
daa
pop
jo
jne
cmp
(bad)
rol
mov
inc
sbb
aad
leave
mov
mov
cmps
call
push
retf
push
jbe
test
or
(bad)
mov
push
sti
aaa
scas
or
sub
ret
cmp
rcr
ja
dec
push
jne
in
push
inc
es
(bad)
retf
jmp
in
sahf
aaa
out
cmp
add
inc
add
call
dec
mov
ret
sub
mov
(bad)
gs
fld
sub
cmc
sub
inc
test
mov
jo
(bad)
adc
jb
mov
ja
jg
dec
pop
cmps
mov
out
jle
mov
hlt
xchg
jb
jo
call
call
add
cmc
stc
in
push
inc
ret
int3
rcl
push
cmp
mov
inc
or
xor
pop
lods
(bad)
mov
scas
enter
jno
xor
out
adc
and
movs
fs
rol
fsub
fidiv
popa
ja
mul
loopne
arpl
ins
iret
loop
xchg
push
mov
jg
mov
nop
(bad)
or
mov
mov
xor
fbstp
pusha
pop
jne
inc
(bad)
arpl
mov
int3
sti
lods
adc
pop
call
cmp
mov
mov
push
add
adc
sar
pushf
add
call
out
lods
mov
gs
int
mov
mov
not
fstp
stos
jne
test
push
jp
lods
xor
lods
and
pusha
out
add
sti
in
es
adc
mov
fs
cmp
out
hlt
jb
into
(bad)
fdivr
cmc
push
std
mov
sar
ins
arpl
sar
push
lea
jo
pop
clc
xchg
cmp
retf
pop
mov
aas
cli
iret
inc
jl
imul
aas
add
movs
mov
sti
es
inc
lock
xlat
test
cwde
shr
cmc
dec
cmp
data16
retf
adc
in
jmp
dec
jp
pop
in
dec
sub
mov
dec
mov
cmp
add
loope
xchg
inc
dec
jno
and
add
imul
jl
cdq
out
push
pusha
pusha
mov
lods
(bad)
aaa
and
(bad)
das
adc
cmps
int3
sbb
in
int3
(bad)
jecxz
sub
adc
daa
daa
dec
inc
dec
jl
pop
and
xor
dec
pop
icebp
in
repnz
sub
mov
repnz
jns
inc
lds
add
div
loop
push
and
inc
jg
and
bound
popf
cmps
int3
jge
pop
pop
add
std
gs
jp
nop
loopne
mov
cmp
dec
es
ficomp
cmp
ds
daa
data16
xor
cli
add
jmp
aas
bound
aad
retf
in
and
push
aam
(bad)
out
fstp
jle
div
mov
jnp
adc
push
cdq
lods
sbb
ret
sar
jb
(bad)
popa
nop
xor
mov
ret
mov
mov
mov
sbb
push
push
sahf
sub
shr
sub
xor
add
xor
lds
lods
lock
sub
cmp
das
jnp
cmp
aas
xchg
add
xchg
inc
inc
xor
test
inc
cmc
xchg
scas
jmp
shr
sub
inc
aaa
dec
lea
repz
or
jnp
test
fs
leave
add
test
hlt
mov
cmp
push
cwde
fistp
xor
mov
push
mov
popf
mov
in
xor
(bad)
pop
add
xlat
out
sub
outs
adc
add
mov
lods
imul
loope
movs
adc
cmps
ret
sbb
sub
aam
adc
pop
inc
ret
shl
pop
ror
retf
adc
adc
lds
xor
lds
loop
fimul
sbb
push
inc
cmps
rol
mov
adc
cmp
sub
ins
push
push
sbb
hlt
mov
pop
jae
retf
pop
cli
mov
or
lahf
xor
xor
xchg
jl
stos
int3
ja
ds
cmp
push
aam
mov
(bad)
fiadd
ret
out
inc
sub
out
push
sub
test
mov
(bad)
aad
add
loop
in
arpl
fwait
(bad)
shl
movs
dec
pop
push
pop
test
cmps
das
jp
mov
dec
sbb
fstp
jno
shl
mov
cmp
fisttp
int
movs
call
mov
out
pop
xor
adc
in
cmp
ins
mov
add
jae
aaa
cmp
mov
push
cld
mov
mov
rcl
adc
cmp
jae
mov
mov
push
stc
or
add
adc
pushf
jmp
arpl
lds
test
sbb
lods
push
dec
cmps
mov
dec
pushf
sub
ret
adc
xor
ds
xor
xlat
cmp
mov
inc
addr16
cwde
mov
imul
pushf
ss
fnsave
imul
rcr
ja
jno
xchg
(bad)
jmp
pop
ins
(bad)
lock
pop
fs
mov
and
mov
xor
dec
nop
jle
mov
adc
loopne
jmp
cld
mov
pusha
fmulp
retf
xchg
add
mov
push
inc
icebp
lds
jmp
enter
inc
and
mov
add
cdq
inc
push
(bad)
mov
test
push
pop
movs
clc
jp
(bad)
adc
(bad)
xor
test
or
adc
mov
ret
(bad)
pop
nop
mov
rol
out
add
dec
xor
in
icebp
loope
leave
pop
xchg
ins
and
inc
or
mov
jg
lods
or
dec
inc
bswap
jb
js
lds
aas
xchg
xor
jmp
lods
inc
inc
add
popa
(bad)
iret
cmp
xor
rcl
cli
mov
jle
sub
fsubr
add
dec
adc
jecxz
xchg
ret
inc
jp
push
mov
or
(bad)
jae
stc
iret
aam
int
push
sub
pop
mov
xor
(bad)
jle
(bad)
cmp
fsub
xchg
scas
xchg
add
loop
mov
imul
mov
xchg
add
fmul
or
lods
jle
clc
add
ss
cmp
test
or
mov
outs
in
cwde
fs
pop
or
and
mov
ins
aas
stos
ja
or
cwde
xor
sbb
jecxz
scas
mov
pusha
les
jae
and
mov
jmp
and
jbe
idiv
inc
inc
xor
loop
pop
fiadd
jae
xchg
jno
retf
sbb
stc
pop
dec
imul
sahf
ins
dec
jb
mov
pop
cli
fwait
cmps
nop
dec
push
or
or
jno
jp
in
fcom
sub
lods
mov
imul
mov
into
mov
or
jo
pop
stos
pop
(bad)
xor
dec
mov
das
push
(bad)
in
sub
(bad)
pusha
aaa
mov
std
or
dec
fimul
mov
cwde
inc
xchg
test
jno
stos
mov
sbb
inc
push
mov
add
mov
sub
xor
mov
aaa
fistp
sbb
ins
out
add
sbb
mov
mov
xchg
mov
cli
mov
add
dec
clc
popf
shr
sbb
stos
xchg
mov
bound
je
cmc
cmp
or
mov
mov
jae
(bad)
sbb
in
dec
je
mov
pop
push
js
xchg
inc
sbb
xor
jnp
adc
pop
in
pusha
es
jmp
ins
xchg
xchg
push
mov
jl
(bad)
jo
mov
(bad)
lods
jns
popa
mov
jp
jo
or
pop
sbb
movs
int
jb
fldenv
mov
je
popa
dec
cdq
scas
xchg
rcr
or
cwde
test
shr
sbb
push
mov
je
pop
aad
in
shl
xor
and
test
ret
hlt
sbb
push
and
push
mov
mov
mov
mov
icebp
rcr
ja
das
xchg
inc
gs
clc
imul
and
imul
mov
add
retf
push
cmps
jbe
(bad)
mov
ret
js
ja
fucomip
jg
movs
push
mov
rcr
arpl
call
fiadd
repz
fisubr
aam
stc
shr
(bad)
cmps
push
xchg
mov
lds
lahf
add
or
xor
test
mov
mov
sbb
std
sub
imul
add
ins
or
or
mov
jo
pop
cmps
aas
mov
imul
mov
jmp
loopne
xchg
arpl
std
cdq
mov
mov
test
jo
push
das
mov
int3
push
add
scas
add
nop
aas
addr16
dec
sub
mov
rcr
xor
push
mov
xchg
add
mov
out
fdivr
mov
leave
jg
repz
sub
dec
xlat
xlat
sbb
mov
movs
or
aam
push
pop
int
leave
xchg
pushf
in
dec
fnstsw
push
and
xchg
xor
or
jle
test
dec
sub
dec
jne
mov
shl
add
fcmovnb
data16
adc
mov
mov
mov
inc
(bad)
sbb
sti
int
into
sahf
test
pop
pop
aaa
adc
inc
add
dec
in
mov
mov
pop
pop
and
test
or
push
icebp
mov
imul
hlt
mov
and
scas
adc
xchg
inc
es
arpl
inc
(bad)
jo
push
xchg
clc
xchg
add
or
retf
xor
in
mov
pop
movs
int3
lock
cdq
nop
lods
push
and
push
push
fdivp
outs
and
or
jg
es
test
jle
mov
aaa
pop
add
cmp
std
mov
adc
jecxz
clc
or
jnp
mov
aam
jno
aad
sub
xchg
cmps
mov
sbb
or
out
xor
test
push
jp
mov
xlat
or
out
jne
ret
sbb
ss
aad
jge
cli
and
pop
gs
stos
retf
mov
cmp
sbb
stos
movs
into
outs
fdivrp
pop
jne
int
(bad)
pop
inc
movs
test
pop
mov
or
je
dec
ja
pop
test
ins
or
adc
dec
pop
aas
sbb
pop
xlat
loopne
xchg
pop
inc
fsubr
jae
ror
in
ins
push
bound
mov
in
sahf
sbb
in
xchg
xor
movs
cmp
test
enter
mov
mov
daa
push
cmp
imul
mov
scas
popf
pop
jmp
in
xor
lea
inc
pop
add
sbb
pop
sbb
nop
pop
dec
mov
movsx
or
cmp
xchg
rep
fld
addr16
pop
pusha
push
jb
enter
push
pop
(bad)
adc
push
sub
int
dec
mov
jle
or
mov
mov
les
fs
pop
shl
in
inc
fld
iret
mov
push
adc
aam
push
cmp
xchg
retf
mov
(bad)
mov
adc
mov
fsubr
add
mov
mov
outs
fimul
scas
ret
cld
or
xchg
mov
into
pop
in
or
mov
mov
or
retf
jg
out
xor
outs
xchg
jae
aam
les
loop
mov
ins
and
mov
test
cwde
mov
bound
xchg
lods
sub
das
push
sub
mov
or
jg
jp
test
(bad)
cmc
dec
lods
or
fidiv
fist
xchg
jmp
fnstenv
pop
pop
movs
jbe
test
pop
mov
nop
imul
mov
imul
xor
enter
int
icebp
xor
jns
aaa
lods
aas
sub
(bad)
clc
jmp
mov
leave
dec
push
push
mov
retf
pop
add
sub
std
dec
inc
fwait
push
cmc
fsub
mov
test
retf
mov
ret
and
adc
xchg
test
mov
mov
push
inc
fimul
inc
or
cmp
jecxz
jmp
adc
icebp
dec
or
sub
cli
inc
inc
adc
ins
jae
ins
cwde
movaps
mov
and
(bad)
pushf
mov
inc
dec
inc
push
and
aam
outs
xchg
adc
or
ss
fist
jbe
jmp
loop
add
aaa
fisubr
outs
ror
or
xor
ds
pusha
(bad)
(bad)
inc
data16
dec
and
inc
mov
and
fcomp
iret
push
dec
sbb
or
inc
mov
adc
mov
scas
cld
pusha
jns
(bad)
retf
rcl
scas
loop
test
push
popf
stos
xchg
inc
in
add
xor
mov
cs
pop
add
adc
mov
rol
add
jecxz
mov
shl
jmp
lods
cs
xchg
call
and
inc
cmc
data16
movs
dec
fcom
jns
cmp
sbb
inc
mov
movs
push
movs
ja
or
push
pop
out
xchg
ret
cmps
(bad)
mov
push
out
and
std
and
and
push
xchg
push
enter
cmp
pop
or
adc
pop
sub
or
xlat
mov
(bad)
pushf
aam
movs
push
adc
call
clc
xor
mov
dec
call
sbb
jno
and
push
cmp
mov
outs
das
add
icebp
inc
mov
lahf
dec
pop
add
rol
sbb
jno
fs
xor
inc
dec
jecxz
lds
in
iret
mov
mov
mov
scas
fst
pop
mov
add
adc
adc
out
and
mov
repnz
or
xchg
dec
push
ret
pushf
dec
outs
or
(bad)
rol
and
cmc
xchg
sub
and
loop
sbb
xchg
mov
mov
adc
mov
sub
xchg
aam
lea
xchg
push
mov
lods
jo
enter
mov
push
cmps
test
std
call
add
aad
pop
xor
add
lods
sub
les
mov
rol
xor
fiadd
pop
aaa
shr
gs
js
push
ss
or
jp
or
xor
(bad)
xlat
pop
popf
sub
stos
repz
jno
jecxz
adc
repz
inc
jmp
push
loope
sbb
test
iret
gs
movs
outs
jle
ret
in
jle
mov
hlt
xor
popa
mov
inc
and
xchg
mov
and
hlt
pop
lds
mov
movs
btc
fsubp
add
dec
(bad)
mov
adc
out
fistp
and
xor
or
das
sub
lods
push
fcom
pop
out
(bad)
out
jo
pop
rcl
clc
xor
sub
add
or
xchg
or
xor
pop
adc
ficom
ret
retf
aad
aam
mov
inc
ds
push
mov
(bad)
xor
(bad)
(bad)
pop
jmp
loope
pop
ins
inc
cmp
repnz
(bad)
in
mov
and
sub
sub
outs
call
sti
loope
dec
iret
ficomp
call
mov
jae
mov
mov
inc
and
pop
out
and
fmul
sbb
in
lods
leave
repnz
lods
add
push
adc
test
mov
out
(bad)
bound
cdq
xchg
mov
stc
push
sbb
cs
xor
ins
xchg
sub
int
jle
(bad)
inc
push
sbb
jb
jmp
jl
leave
repz
shl
mov
jne
sbb
add
xchg
scas
mov
sbb
mov
outs
push
and
test
and
inc
enter
div
ret
jp
inc
dec
lahf
fst
movs
out
rol
leave
xchg
jle
clc
mov
iret
stos
popa
push
pop
shl
mov
fist
in
mov
lahf
sub
cdq
push
fidivr
jmp
call
call
loopne
adc
mov
jmp
jge
push
(bad)
jae
mov
push
cwde
xor
loop
repnz
push
mov
adc
and
pop
sbb
jge
adc
fidiv
(bad)
cs
mov
xlat
push
mov
(bad)
adc
sub
push
mov
jle
sbb
mov
ret
not
pop
in
and
dec
and
cmp
movntq
out
fsubr
push
inc
mov
adc
add
pop
fidivr
jg
mov
jg
push
repnz
xlat
add
in
stos
push
xchg
and
pop
(bad)
mov
fprem1
sub
jae
jmp
scas
fmul
mov
out
scas
fwait
jno
lea
cmp
popa
std
popa
popa
paddw
ins
sbb
push
mov
(bad)
mov
or
sub
lds
hlt
test
aaa
out
pop
add
repz
test
dec
cld
les
and
mov
xchg
repz
hlt
adc
mov
fisubr
sub
inc
retf
mov
scas
sbb
cmp
dec
js
je
and
xchg
das
aad
int3
pop
mov
js
outs
enter
pop
jo
call
or
psubd
std
cdq
fbstp
dec
cmp
cmp
stos
mov
cmp
and
icebp
shl
cmp
in
mov
cld
fcmovne
jb
pop
clc
push
stc
aam
dec
js
jo
and
dec
int3
fwait
pop
repnz
jmp
jae
sahf
sbb
ja
loop
sbb
stc
enter
ja
aaa
inc
xor
or
out
jl
lods
(bad)
repz
iret
adc
jno
cmp
fxam
xor
adc
ins
not
and
das
cmp
in
mov
cmp
cld
lea
sar
adc
push
outs
mov
inc
fwait
aas
(bad)
rep
mov
xchg
cli
inc
sub
pop
push
pop
fstp
jl
pop
pusha
adc
dec
inc
arpl
lock
push
lea
mov
addr16
pop
pop
and
stos
mov
mov
push
xchg
pop
movs
fs
movs
pop
fadd
test
adc
xlat
dec
dec
repz
xchg
pushf
dec
outs
in
fs
jno
lods
push
repz
push
add
movs
push
dec
push
rcr
push
sbb
mov
mov
stos
inc
fisttp
mov
push
sbb
pop
sbb
cwde
loop
test
imul
jnp
or
popf
sub
and
jp
test
std
adc
xchg
inc
xor
sysenter
mov
mov
(bad)
push
mov
popf
mov
xor
es
sbb
pop
dec
data16
fyl2xp1
push
jmp
jae
arpl
mov
lahf
pop
es
mov
in
shl
cli
sti
sbb
adc
call
xchg
test
aaa
jbe
lahf
lock
adc
ds
pop
and
add
add
fdiv
mov
fadd
mov
ror
std
xor
xor
cmps
or
xchg
inc
retf
nop
add
xchg
add
jnp
and
jp
imul
in
and
push
stos
sub
shl
push
arpl
mov
inc
sti
cmp
aam
push
stos
loope
sbb
les
xchg
jb
test
aas
ret
int
push
xor
popf
cmp
xchg
mov
xchg
inc
adc
dec
ret
and
test
jo
adc
jno
mov
dec
sub
ja
sbb
scas
das
pop
mov
pop
xor
cmp
pop
or
popa
and
lods
add
call
xor
mov
leave
cdq
(bad)
jnp
add
popf
adc
sar
dec
mov
out
repz
aam
mov
das
cmp
jo
cmps
jbe
pop
or
adc
ds
adc
popf
aaa
arpl
and
xlat
jle
xor
das
xor
dec
jnp
in
xor
aaa
mov
cmp
jae
inc
in
mov
cmp
sub
imul
inc
xor
jo
push
mov
fist
add
sbb
jecxz
dec
cmp
lods
mov
push
rcl
or
pop
fsub
outs
call
ret
add
pop
addr16
cli
mov
xor
or
sub
ins
push
xchg
scas
dec
cld
retf
scas
sbb
xor
xor
shl
push
sahf
mov
fnstsw
cli
icebp
in
pop
jl
or
(bad)
push
mov
jae
dec
sub
pop
outs
xor
mov
and
int3
loop
jecxz
dec
xor
test
mov
dec
rcl
adc
push
pop
adc
loopne
jns
mov
inc
popa
bound
push
lods
xor
fs
xor
cmps
cmp
jbe
out
mov
push
inc
push
int3
(bad)
pop
dec
lahf
mov
and
mov
pop
leave
push
push
dec
fs
loopne
mov
xor
fcmove
shl
lds
mov
popa
enter
jl
int3
retf
push
push
jp
push
(bad)
pusha
(bad)
(bad)
imul
mov
xchg
pop
and
push
enter
jl
retf
js
ins
js
hlt
fild
dec
and
cmp
in
test
inc
add
fsubp
dec
adc
shr
fidivr
xchg
std
lar
and
sbb
sbb
mov
mov
dec
push
lods
dec
mov
cdq
xchg
add
popf
adc
mov
out
(bad)
cmps
cvtdq2ps
loop
inc
push
add
std
jo
cmp
pop
jecxz
lea
push
inc
fldenv
cli
in
stos
fwait
push
ds
xchg
add
mov
sub
push
mov
jmp
adc
leave
clc
clc
test
push
jmp
xchg
pop
loopne
ret
ins
mov
pop
sub
pop
sub
mov
jle
fiadd
and
or
push
(bad)
ror
sti
xchg
pop
and
les
sub
rcr
and
jbe
xchg
loop
fbstp
jmp
inc
push
jg
adc
imul
retf
ja
and
inc
sub
(bad)
mov
clc
leave
dec
(bad)
in
inc
adc
push
dec
xor
adc
daa
xlat
mov
cmp
jmp
fcmovbe
stos
jnp
sbb
cmps
fisubr
test
xchg
dec
add
gs
shl
(bad)
mov
mov
test
shr
push
mov
(bad)
jmp
movs
cmp
call
sbb
sub
imul
sti
or
add
in
mov
fbstp
in
inc
lock
pushf
fnstcw
ds
xchg
cmp
and
(bad)
push
cld
ret
jl
daa
icebp
fdiv
sbb
lds
inc
add
pop
scas
cmp
lods
pop
mov
test
ins
pop
aad
xor
jecxz
or
ds
fadd
sub
pusha
adc
loopne
xchg
mov
push
jp
movs
add
or
outs
push
adc
pusha
imul
ja
scas
sbb
pop
xchg
pushf
in
fimul
dec
xchg
push
add
aas
es
shr
ror
jl
stos
jp
inc
adc
in
cmp
xor
jo
mov
xor
ret
jne
push
add
ds
mov
cdq
das
clc
push
stos
jae
ins
push
je
(bad)
mov
test
jmp
addr16
and
jecxz
and
frstor
sbb
push
push
stos
inc
pusha
and
imul
pop
enter
cmc
dec
repnz
add
pusha
not
pop
fwait
sbb
(bad)
or
sar
push
sbb
aaa
loop
addr16
xor
jmp
out
sahf
aam
js
imul
out
aas
sbb
fimul
pop
jmp
or
push
fidivr
pop
fiadd
fcomp
xor
mov
stos
cmps
adc
cmc
push
stc
mov
fadd
push
lds
retf
xchg
sbb
pop
stc
sub
sub
mov
jo
sbb
outs
mov
call
mov
test
xchg
js
arpl
xor
in
cmp
sbb
sbb
and
inc
jmp
jbe
cli
push
xchg
mov
sbb
popa
stc
xor
jecxz
or
ins
int
jmp
dec
inc
xlat
or
repnz
aaa
(bad)
jb
xor
popf
or
add
push
imul
loop
int
imul
cmp
int3
dec
xchg
jle
fs
mov
xor
clc
ffree
arpl
sahf
mov
aas
cmp
(bad)
ss
sub
out
pop
imul
push
sbb
ret
dec
test
inc
(bad)
hlt
cmps
shr
push
mov
dec
jbe
sbb
sub
inc
lock
xchg
adc
and
mov
ror
(bad)
sub
test
add
dec
mov
outs
sti
cdq
and
mov
pop
movs
mov
jl
clc
cmp
call
aas
mov
inc
out
pop
sar
nop
or
retf
(bad)
adc
xchg
std
jmp
es
mov
aad
pop
inc
clc
xor
ret
xchg
scas
inc
lods
push
push
xchg
xor
je
sahf
mov
mov
pop
icebp
sbb
mov
cmp
popf
cmc
add
(bad)
test
and
xchg
je
push
retf
xor
mov
ins
repnz
inc
scas
fstp
aas
xchg
cmp
xchg
repz
loope
jge
jp
xchg
xchg
mov
popa
dec
cld
jo
outs
inc
loope
fstp
out
sub
inc
and
jae
sbb
ja
push
pusha
stos
inc
psrlw
cmc
mov
cdq
jnp
push
clc
add
shl
arpl
push
xchg
adc
pop
mov
add
xchg
leave
arpl
xchg
(bad)
pushf
xchg
cdq
outs
int3
arpl
pop
leave
cmp
cli
enter
bound
jmp
fucomi
repz
jnp
(bad)
mov
inc
jmp
fwait
popa
sub
xchg
xor
shl
not
xchg
pushf
enter
jp
in
je
out
mov
(bad)
movs
movs
add
mov
jne
push
dec
pop
les
push
loope
retf
and
cmps
ret
cmp
inc
or
rol
imul
sub
ss
push
jecxz
sub
stos
xchg
fsubr
(bad)
push
call
mov
or
test
into
out
aad
mov
jecxz
dec
and
xor
xor
dec
pusha
loop
mov
loope
les
das
cwde
mov
push
lods
fisub
jae
leave
adc
mov
enter
inc
repnz
add
fst
(bad)
(bad)
xor
clc
test
lock
test
(bad)
jge
dec
jg
mov
pop
xor
xchg
int3
inc
data16
sub
(bad)
iret
cmovae
fld
mov
xor
mov
jo
dec
jbe
push
es
push
ds
imul
cmp
mov
sub
mov
in
or
mov
xchg
mov
scas
add
ins
push
and
call
xor
mov
xor
aam
in
xchg
mov
sar
dec
xchg
inc
jae
int3
fiadd
pop
mov
xchg
adc
jmp
cmp
mov
cli
push
mov
ss
out
dec
mov
push
int3
xlat
out
pushf
int3
mov
sub
mov
mov
sar
push
std
cmps
cld
inc
les
outs
jb
jmp
not
mov
mov
push
jmp
lods
std
jbe
sahf
ss
(bad)
pop
jnp
pushf
pop
popa
retf
out
sub
paddusw
add
stos
add
jnp
adc
xor
inc
out
xlat
repz
jecxz
and
inc
sbb
inc
rcl
inc
cmp
je
mov
inc
push
pop
pop
or
xor
out
mov
lock
push
fwait
dec
movs
out
pop
data16
arpl
inc
mov
dec
mov
jae
mov
fimul
xchg
mov
cli
loopne
js
or
pop
mov
xor
push
jnp
push
sub
stos
push
out
addr16
mov
sbb
js
stos
or
in
mov
test
pushf
push
adc
cmc
fldcw
neg
ins
shl
jg
add
ror
inc
sbb
xchg
xchg
sub
ror
sub
inc
lods
sbb
mov
cli
mov
mov
or
in
ror
icebp
into
xchg
mov
add
cmps
ja
lods
and
mov
in
or
mov
push
xor
cmpxchg
scas
out
push
jne
lahf
icebp
cmc
int3
fisub
(bad)
out
pushf
push
out
dec
sub
jmp
dec
retf
xchg
sbb
mov
or
jbe
mov
pop
aas
in
pop
add
(bad)
push
xor
dec
sar
lods
test
popa
sbb
jge
sbb
outs
arpl
outs
iret
jo
jl
icebp
sub
stos
cmp
push
or
(bad)
not
aaa
lods
lods
clc
jmp
test
inc
cmp
pusha
gs
mov
and
jl
gs
aad
enter
add
and
lods
test
mov
repz
xchg
mov
loopne
add
jbe
cmp
mov
outs
neg
dec
mov
cmp
add
hlt
inc
sub
data16
std
push
int3
add
jmp
sbb
enter
outs
imul
dec
pop
push
sub
lahf
and
fnstenv
test
aaa
sbb
mov
rol
pop
in
cli
mov
out
sbb
and
pop
adc
mov
icebp
out
rol
pop
xor
inc
call
xchg
dec
xchg
sar
sahf
jnp
cmc
mov
mov
(bad)
loope
fcmove
dec
ja
call
or
test
mov
sub
dec
mov
sbb
push
inc
pop
push
sub
push
dec
test
test
pop
mov
call
lods
aad
cs
or
push
xchg
adc
push
or
repz
ss
mov
dec
bnd
mov
lods
sbb
dec
ror
push
and
jmp
pop
adc
push
xor
jge
test
ds
int3
lods
call
ins
xor
mov
lock
or
sub
inc
push
movs
sub
push
lahf
xchg
mov
nop
daa
(bad)
jge
ret
ror
fldenv
jmp
test
or
dec
inc
and
dec
jae
outs
add
iret
inc
push
inc
ret
dec
push
repnz
div
xor
xor
hlt
es
aad
aad
outs
or
jns
aaa
and
icebp
test
jnp
pop
(bad)
sub
scas
dec
mov
nop
idiv
mov
lea
dec
pop
mov
and
mov
movs
adc
mov
fs
mov
loope
rcl
xchg
int
je
pop
fbstp
movs
cmp
add
xor
test
cmp
cmp
outs
xor
sub
inc
mov
cwde
push
adc
push
dec
sbb
jo
mov
rol
jge
loop
call
xchg
xor
stc
xchg
cmp
fwait
fs
ds
cmps
mov
or
and
ret
mov
and
ret
enter
push
or
cmp
push
cmps
(bad)
sbb
ret
scas
jl
mov
add
push
retf
sahf
shr
leave
sahf
daa
call
imul
jmp
pop
test
aaa
out
stos
or
lock
stos
fadd
rcl
gs
call
jmp
jne
mov
std
sbb
jno
sub
mov
inc
xor
dec
add
cs
loopne
add
mov
jl
jnp
dec
aam
out
and
add
loope
scas
mov
call
jno
ins
addr16
inc
mov
pop
adc
addr16
ds
mov
xor
daa
cdq
xchg
in
adc
push
sbb
or
sub
ficom
std
retf
mov
fcomip
add
daa
pop
sbb
sbb
stc
aad
mov
add
cmp
dec
(bad)
outs
push
sahf
xchg
inc
cdq
xchg
rcl
sub
fisub
sbb
ret
or
xchg
or
push
addr16
outs
out
pop
sub
(bad)
cmps
jae
movs
rol
retf
xchg
xchg
xchg
sbb
and
inc
or
mov
ds
aaa
sub
mov
test
scas
mov
(bad)
nop
adc
popf
je
imul
bound
retf
xchg
cmps
mov
xor
jno
cmp
hlt
mov
in
pop
sar
scas
iret
add
adc
sbb
xor
and
xor
lds
push
daa
inc
mov
ss
test
fs
inc
mov
or
mov
add
xor
data16
jge
fldcw
icebp
sub
das
adc
mov
jb
xor
sub
add
jg
jne
jns
pop
push
mov
into
sub
cmp
idiv
test
add
imul
sbb
sub
in
retf
ds
add
loop
push
in
push
xchg
sahf
je
dec
xchg
daa
add
sbb
clc
sbb
adc
imul
push
pop
and
daa
jno
and
cs
and
sahf
or
pop
inc
mov
push
sub
add
xor
imul
mov
test
adc
xor
popf
or
xchg
pushf
fldl2t
repnz
add
cdq
jge
enter
mov
mov
test
mov
fwait
les
and
xchg
cdq
call
add
dec
ja
test
loopne
out
or
push
sbb
and
ja
imul
mov
cwde
sti
in
hlt
mov
les
fst
and
or
in
cmp
mov
loop
popf
xchg
fmul
jbe
mov
mov
jb
mov
mov
inc
mul
cmp
pop
add
push
add
shl
fist
js
mov
sbb
repnz
daa
fidiv
mov
adc
addr16
pushf
mov
pushf
pop
mov
adc
scas
jno
jbe
add
dec
fcom
das
clts
cmp
in
mov
mov
mov
lea
push
adc
and
mov
xor
aam
ins
xor
mov
into
inc
dec
fs
sbb
xchg
cmp
ins
loopne
sub
xor
fwait
aaa
rcl
pop
hlt
xor
test
cmps
jmp
cmp
test
cmp
lods
ds
rcl
rcl
in
xor
or
loope
jno
jae
pop
jb
inc
pop
pop
or
adc
jmp
fadd
xchg
mov
lods
shr
loop
push
jb
mov
mov
clc
mov
aam
push
repz
scas
mov
out
ret
jnp
and
outs
cld
cmc
fimul
pop
aas
inc
mov
leave
adc
sbb
mov
add
jbe
push
loope
(bad)
jmp
or
sub
cmp
fldenv
mov
and
test
xlat
cs
test
xchg
dec
jmp
pop
pop
sbb
sub
nop
loop
sbb
enter
or
out
sbb
mov
fucomi
cld
shr
test
mov
rcl
sub
push
mov
sbb
jmp
test
sub
fcom
ss
retf
out
mov
jmp
adc
and
mov
mov
mov
cmp
mov
add
imul
xor
inc
sbb
dec
mov
out
xor
cmp
and
(bad)
fnstcw
out
xchg
pop
loop
mov
call
rcl
push
mov
or
pop
jg
or
add
rcr
or
lds
jnp
sub
leave
pusha
js
je
in
icebp
dec
sub
scas
cdq
call
nop
daa
cwde
idiv
cs
jg
push
jl
ret
push
mov
not
test
mov
xor
(bad)
out
add
sbb
(bad)
ds
add
int3
push
jo
sub
add
and
or
xor
pusha
stos
jle
int3
pushf
cmps
sti
(bad)
push
xor
mov
(bad)
leave
jb
test
jge
mov
sbb
push
jmp
or
out
mov
dec
pushf
mov
push
out
mov
out
sbb
inc
dec
mov
pop
push
leave
xchg
sbb
icebp
jmp
mov
pop
pop
cld
retf
cwde
and
into
or
(bad)
mov
add
cs
cdq
icebp
scas
into
push
mov
jg
mov
sahf
arpl
xor
mov
add
test
jmp
fs
pop
sub
mov
pop
data16
shr
xchg
and
and
xor
call
jmp
addr16
dec
inc
cmps
push
dec
retf
mov
sbb
adc
xchg
(bad)
push
out
lds
mov
jge
aam
fst
mov
fwait
add
pop
adc
jo
sub
hlt
iret
pop
inc
dec
retf
rol
in
je
(bad)
mov
push
je
setge
dec
cmc
(bad)
mov
dec
ins
scas
mov
mov
gs
jl
js
str
sbb
retf
sbb
adc
call
xchg
cmp
xor
and
call
adc
js
jne
ins
xchg
cmp
nop
leave
jae
mov
dec
dec
xchg
push
push
(bad)
sahf
push
xor
pop
dec
push
sbb
cmp
push
push
mov
mov
add
(bad)
xor
pop
adc
push
xchg
push
cmp
daa
shl
ret
lods
test
or
out
mov
or
sub
in
test
jl
push
fsubr
mov
aas
adc
retf
sub
gs
dec
add
jp
ja
mov
ret
add
xor
pushf
mov
iret
ja
fs
pop
xchg
daa
in
sub
or
inc
icebp
sbb
sbb
push
xchg
dec
arpl
or
jae
cld
push
cmp
add
aad
pushf
pop
not
xor
push
mov
mov
retf
add
sbb
mov
mov
and
sbb
cmp
das
and
stos
into
or
call
pop
movs
push
fist
and
(bad)
in
cmp
test
lea
nop
jo
pop
inc
daa
out
repz
cmp
repz
inc
mov
dec
add
jg
enter
mov
or
scas
mov
jns
mov
mov
pop
out
xchg
or
pusha
fisttp
cli
mov
fnstsw
dec
cli
pop
mov
fld
test
rcl
xchg
lods
imul
(bad)
in
mov
xor
xor
inc
cld
ds
and
(bad)
dec
sbb
mov
cmc
hlt
js
stos
and
pop
sahf
stc
pushf
outs
fsub
mov
mov
sub
adc
pop
(bad)
enter
shr
loop
aad
lock
call
add
inc
fidiv
out
xchg
les
jle
fsub
dec
jbe
sbb
mov
test
jnp
xchg
lods
push
pop
inc
repz
mov
nop
jno
imul
sti
dec
inc
nop
sub
sbb
test
sub
push
mov
push
lock
and
pop
sub
cwde
movs
and
hlt
popa
test
lock
cld
xchg
lds
dec
cs
mov
ja
mov
add
test
fisttp
fisubr
add
add
or
xchg
inc
ficom
(bad)
aam
cmp
dec
mov
in
call
or
popf
xlat
cmps
or
push
xchg
xlat
mov
sbb
repnz
(bad)
lods
repz
jmp
push
cdq
into
xchg
mov
add
imul
imul
int3
jae
sub
ins
out
jmp
xchg
xchg
sbb
ret
push
mov
int3
int
sub
retf
ins
leave
aam
pop
cmp
outs
push
nop
lahf
mov
jg
ret
or
mov
popf
popa
inc
shl
add
jo
dec
mov
cmp
pop
dec
sbb
dec
xor
adc
or
leave
pop
pop
imul
out
add
lea
imul
xchg
and
fwait
jo
dec
lock
mov
es
fiadd
test
mov
rcl
daa
adc
push
sbb
in
(bad)
xchg
lods
cmp
add
fwait
leave
push
jbe
push
push
cmps
dec
ja
in
mov
xchg
sbb
sbb
fsubr
ins
mov
ret
pop
cmc
inc
scas
mov
add
cmp
sti
mov
jns
xchg
dec
xchg
cmp
out
add
ror
and
dec
lahf
fcmove
push
int
loop
pop
dec
xchg
out
pop
or
mov
jno
push
icebp
adc
mov
ins
mov
or
xchg
loopne
pop
bnd
mov
ins
mov
(bad)
rcl
pop
addr16
int
mov
shl
dec
pop
pushf
cwde
push
sbb
or
pop
loope
xor
in
mov
rol
and
xor
pop
adc
outs
mov
cwde
inc
fldenv
xchg
push
sub
and
sub
pop
sbb
ret
loope
add
les
int3
retf
and
imul
and
mov
xor
outs
pop
lea
dec
xchg
jecxz
imul
out
retf
test
jp
sub
cmps
sub
dec
in
mov
fcomp
dec
jmp
mov
iret
push
fisub
inc
int
pusha
mov
xor
inc
rcl
iret
popf
movs
pop
xchg
fcom
xchg
aad
test
inc
mov
scas
fild
pop
sub
movs
or
jb
adc
sti
in
fisub
repz
jp
push
mov
ds
xchg
ret
fs
lods
mov
mov
sbb
ins
mov
jg
mov
(bad)
imul
loop
hlt
add
xchg
mov
or
and
loopne
shl
sbb
jmp
ret
mov
and
movs
and
es
fsub
hlt
push
jne
(bad)
adc
adc
jecxz
pop
xchg
mov
ins
pushf
mov
xor
hlt
ins
pop
test
repz
outs
int
in
out
mov
stos
sti
xchg
shr
xor
ret
pop
int
or
ss
xchg
pminsw
sbb
call
lods
(bad)
(bad)
mov
lea
cmc
dec
sub
loopne
or
sar
lods
mov
add
aam
pop
bound
jno
pusha
stos
sub
push
push
(bad)
push
call
pop
popa
add
call
and
dec
ret
jmp
sub
movs
repnz
lods
js
scas
add
aas
jge
or
daa
sbb
inc
xchg
sub
fstp
fucomi
test
add
ficomp
sti
pushf
sbb
call
xchg
lock
pusha
shl
pop
xor
mov
or
cmp
pop
imul
call
out
sbb
hlt
jg
out
outs
ss
fstp
or
or
mov
retf
adc
outs
sbb
sbb
or
push
in
imul
call
shr
mov
fwait
xchg
out
push
in
xor
sbb
sub
sbb
jmp
arpl
inc
clc
sbb
inc
call
or
xchg
nop
jnp
ficomp
pop
push
dec
dec
and
add
sbb
push
cmp
add
out
jnp
ins
xchg
pop
test
cmp
ja
ds
stc
mov
arpl
xchg
xor
int3
ds
fisubr
xchg
les
push
mov
fmul
and
aas
popa
test
retf
mov
movs
inc
jns
ret
push
inc
cmp
jb
sar
neg
in
pop
push
cwde
adc
bound
and
test
xor
sub
xchg
push
fwait
cdq
jne
dec
test
loop
aas
(bad)
xchg
sub
dec
adc
sahf
fdiv
mov
push
and
jge
ficomp
xchg
outs
or
adc
loop
xchg
fsub
lods
pop
xor
or
(bad)
into
inc
neg
push
std
xchg
inc
icebp
out
rol
(bad)
and
cmps
popf
mov
mov
xor
pop
add
adc
inc
popa
retf
addr16
mov
push
int3
jbe
sub
push
loop
dec
or
jecxz
pop
xor
outs
dec
push
aam
call
icebp
addr16
add
repnz
mov
ss
test
mov
ja
sub
nop
enter
je
mov
mov
lods
out
xchg
mov
dec
das
fadd
add
sbb
fild
inc
loopne
aam
mov
and
dec
sbb
push
push
dec
mov
mov
cmp
jmp
adc
scas
push
jno
daa
pop
jg
es
lock
sbb
(bad)
adc
inc
popw
int
cli
push
js
call
imul
popa
and
lea
ret
cld
inc
adc
sub
(bad)
and
sbb
or
cmc
inc
popf
lock
dec
call
sub
mov
push
jle
out
pop
mov
ficom
pop
js
jecxz
add
adc
xchg
mov
jg
out
jns
in
fwait
hlt
push
xor
or
push
push
or
test
(bad)
push
out
dec
inc
jnp
push
pop
les
pop
pcmpgtd
add
push
leave
push
fidivr
idiv
xchg
xor
dec
pop
arpl
jns
sub
push
dec
mov
push
cmp
ret
ret
out
cmc
stos
dec
xor
xchg
test
mov
mov
adc
lea
call
cdq
mov
jmp
jmp
popa
inc
dec
mov
(bad)
and
ja
dec
pop
push
push
hlt
idiv
icebp
retf
dec
int3
pop
out
xor
fucomi
add
stc
adc
daa
imul
pop
imul
xor
aaa
cmc
mov
stos
jmp
cdq
xchg
xchg
arpl
add
and
mov
loop
lods
push
pushf
jl
repnz
jg
je
add
lahf
xchg
adc
lods
add
jmp
scas
mov
inc
loop
xlat
imul
rcl
push
cmc
test
test
mov
jg
ficom
or
loope
out
cmp
fdiv
das
or
xor
sub
push
stos
in
in
dec
xor
(bad)
out
aas
imul
enter
sub
add
loope
ret
jg
push
add
(bad)
ror
lds
test
push
or
cli
dec
sub
(bad)
pushf
mov
std
dec
mov
lock
dec
daa
mov
retf
pop
adc
xor
pushf
shr
pop
dec
add
jno
scas
cmps
sbb
adc
jmp
fnstenv
cmp
push
in
std
idiv
sub
mov
pop
aad
call
inc
stos
cdq
inc
ds
(bad)
addr16
and
sub
inc
ins
xchg
mov
rol
sbb
mov
icebp
and
out
xchg
daa
dec
xchg
jg
mov
push
dec
push
dec
jle
jmp
sub
rol
ins
in
dec
(bad)
out
or
cld
fcomp
icebp
cmp
fucomip
js
cmp
adc
mov
mov
and
ins
out
dec
fst
addr16
pop
pusha
jb
sti
add
(bad)
cmp
jge
push
push
mov
ror
movs
cmps
pop
adc
cmp
jg
pop
push
mov
adc
mov
sbb
into
rcpps
add
shl
mov
cs
jno
lods
cmp
(bad)
out
sub
dec
cmp
and
pop
call
inc
mov
lods
aad
cmp
movs
cmp
push
in
fst
push
or
push
rcl
mov
stos
cmp
jo
xchg
or
pop
cli
addr16
test
xchg
out
sub
(bad)
or
nop
push
cmc
push
shr
loope
inc
add
in
xchg
test
push
int3
sub
mov
xor
inc
sbb
mov
and
mov
mov
ret
mov
jl
outs
fs
xlat
sub
mov
and
mov
je
pop
lods
jb
mov
inc
popa
mov
push
ds
xchg
and
xchg
aas
xor
mov
stc
loop
inc
pop
sahf
lea
pop
and
adc
and
sbb
pop
std
xchg
sar
mov
mov
xlat
inc
sbb
movs
mov
mov
xlat
xchg
jns
fucompp
add
in
xchg
es
jecxz
inc
fstp
add
sbb
sbb
inc
popf
and
mov
jo
xor
call
mov
mov
cmp
fdivr
test
dec
pop
xchg
sbb
or
in
inc
xor
add
gs
push
cmp
push
xor
pop
mov
mov
retf
cmp
ss
nop
add
sbb
loopne
neg
test
xchg
cmp
sti
call
int3
shr
xor
je
hlt
out
rcr
xor
jl
movs
imul
dec
push
iret
aaa
jl
push
inc
outs
sbb
add
mov
nop
sahf
pop
popf
or
add
cmc
aad
test
in
ja
mov
sbb
call
mov
std
push
aam
jbe
inc
(bad)
out
mov
and
or
or
jb
pop
mov
or
jle
popf
sbb
out
jbe
add
push
ins
mov
push
pop
xor
push
int3
cmp
sbb
stos
mov
retf
ror
push
aad
jle
xchg
repnz
addr16
retf
xchg
mov
inc
pop
sbb
test
xchg
scas
test
fdiv
inc
pop
out
push
cs
pop
push
pop
bound
imul
movs
test
push
sbb
add
xlat
inc
sahf
cmp
mov
push
jecxz
fwait
shl
ret
sbb
sbb
icebp
je
inc
test
fiadd
ins
add
out
mov
add
dec
lods
shr
jb
pushf
adc
jns
or
int
xor
lahf
pop
add
jnp
outs
rcr
and
adc
scas
mov
call
loopne
test
pop
dec
test
dec
dec
test
pusha
push
int
bnd
ret
jo
data16
mov
pop
cwde
cmp
pushf
lods
pmaddwd
(bad)
sti
sub
mov
adc
cli
mov
push
xor
icebp
jmp
fwait
dec
mov
jle
arpl
cmp
(bad)
shl
pop
mov
or
or
xchg
repz
fidiv
adc
aam
push
mov
paddsw
mov
sbb
fsub
les
lods
out
pop
add
push
mov
data16
retf
and
(bad)
jmp
je
pop
js
jg
push
dec
jne
aam
movs
xor
iret
mov
cmp
add
hlt
xor
sbb
or
and
add
add
inc
jns
or
inc
sar
je
inc
xchg
retf
xchg
pop
jns
cmp
mov
xor
ds
dec
sub
ins
sub
adc
sbb
mov
pop
imul
jl
cmp
cmp
add
sbb
xor
push
loopne
adc
or
mov
jmp
fisub
mov
stos
in
aam
add
or
arpl
ror
ficomp
cmp
lahf
push
xchg
push
pop
ja
push
mov
rol
xor
into
(bad)
cmp
sbb
(bad)
xor
cmp
dec
out
call
call
shl
outs
lods
shl
xor
mov
lds
mov
arpl
inc
push
stc
push
lds
mov
add
pop
inc
or
sub
and
cmc
mov
daa
jno
cmp
adc
es
inc
in
inc
aaa
sub
mov
sbb
cli
mov
sti
sbb
mov
mov
fcom
pop
jp
lods
enter
dec
sbb
fstp
test
and
inc
add
push
call
inc
pop
mov
pop
sub
pop
pop
pop
js
pop
mov
in
iret
cdq
rcr
(bad)
loopne
and
cli
mov
jo
clc
aas
mov
mov
clc
add
jp
sbb
xor
add
out
inc
xchg
mov
fld
pop
les
mov
stos
cmc
cmp
je
stc
cwde
or
aad
fisub
fcomp
mov
xchg
repz
pop
test
adc
push
popa
push
sbb
mov
inc
inc
xchg
inc
pop
dec
sub
mov
lds
inc
cld
retf
(bad)
out
add
scas
and
push
and
xchg
sar
ins
lds
inc
xor
mov
in
sub
mov
cdq
add
ja
jle
and
dec
mov
arpl
hlt
or
ss
push
pop
add
iret
push
and
push
std
xor
fnstcw
pop
pop
imul
mov
ret
mov
stos
push
xchg
jne
lock
imul
jae
enter
scas
cdq
push
stos
xor
sub
or
mov
and
(bad)
mov
add
pop
inc
sub
pop
xchg
pop
lds
mov
xor
mov
mov
dec
pop
stos
jp
ja
in
cmp
imul
int3
mov
jle
(bad)
inc
mov
dec
adc
test
fisubr
les
and
imul
and
test
mov
sahf
in
and
aam
push
mov
mov
out
lahf
clts
cmp
and
gs
in
inc
out
pop
(bad)
test
xchg
out
sub
out
test
mov
mov
dec
add
ds
dec
sub
and
test
outs
in
in
ins
mov
aad
outs
jnp
out
push
and
cmp
(bad)
and
dec
dec
ret
sbb
in
hlt
ror
or
xor
popa
(bad)
mov
in
div
shr
inc
push
pusha
outs
inc
add
fstp
and
fdiv
xchg
push
cwde
(bad)
arpl
ins
and
lahf
cmps
lods
out
aad
test
popf
icebp
or
pop
push
dec
adc
jnp
push
or
lods
inc
stc
jno
pop
inc
xchg
gs
neg
jns
fld
jae
scas
sub
push
sub
int3
test
dec
(bad)
bound
mov
js
pop
dec
fadd
dec
cmps
pop
add
mov
dec
sbb
sub
push
adc
(bad)
std
ror
fstp
ror
xor
xchg
xchg
fs
xor
mov
or
out
fwait
addr16
inc
in
xchg
cwde
jge
bound
push
pusha
mov
adc
pop
pop
dec
xchg
int
cmps
cdq
lahf
(bad)
ins
pop
cmp
adc
jge
js
mov
adc
sub
add
inc
jo
sbb
xchg
in
mov
rol
(bad)
mov
(bad)
js
cmps
xlat
sbb
ret
out
add
or
add
inc
fidivr
in
in
stc
loop
push
enter
sub
imul
cmp
test
pop
or
mov
jno
mov
mov
or
sbb
imul
cmps
xor
js
in
xchg
jae
adc
cmps
call
cs
cmp
lods
inc
and
fisub
nop
outs
cmp
ret
mov
fcom
cmps
in
shl
dec
sub
leave
out
cdq
xor
lods
out
cmps
sub
dec
nop
icebp
lock
out
or
ins
shl
jno
out
dec
dec
iret
dec
jbe
movs
dec
xchg
test
jecxz
nop
xor
xor
in
push
mov
add
xchg
mov
mov
rcl
jmp
imul
cmp
inc
dec
pop
mov
sub
rcr
std
aad
mov
push
sbb
retf
les
out
sub
push
push
mov
dec
xchg
cmp
sti
sar
pushf
retf
xor
in
or
pop
adc
mov
js
aam
adc
dec
cmp
aam
call
inc
xor
fnstsw
jbe
ret
mov
dec
out
mov
adc
sbb
in
push
shl
gs
xor
mov
push
repz
sub
call
mov
add
cmp
icebp
das
and
ret
add
xor
add
adc
jae
mov
fcmovu
xchg
fadd
mov
or
rcl
call
mov
jecxz
in
cmp
xor
and
sti
lahf
bound
and
mov
aas
xor
into
sub
jl
repz
pop
into
sub
mov
rol
cld
ret
scas
not
xor
repnz
(bad)
push
out
fcom
xor
fadd
and
outs
fiadd
sbb
dec
mov
adc
pop
(bad)
in
imul
inc
push
out
scas
out
repnz
(bad)
out
or
cmp
ins
jo
int
and
add
cmps
cdq
repz
mov
mov
(bad)
(bad)
fsubr
or
mov
xor
ins
add
dec
mov
or
xchg
(bad)
fidiv
sti
cmp
adc
rol
inc
les
mov
add
or
push
and
add
daa
(bad)
and
sub
xlat
jmp
xor
fsub
js
out
push
in
stc
out
mov
or
mov
(bad)
aad
aas
xchg
outs
mov
retf
push
xor
inc
adc
test
and
mov
mov
adc
mov
lds
pop
xchg
jb
es
add
fucomi
imul
pop
mov
out
ds
in
cmp
mov
mov
mov
nop
or
or
sti
jae
mov
lods
dec
cmp
ds
cmp
dec
cmp
mov
movs
int3
mov
dec
sbb
push
jne
cmp
dec
mov
gs
mov
js
fsubr
push
jnp
xchg
pop
stc
leave
shl
les
movs
adc
pop
out
cmps
pop
or
lds
ret
aad
mov
push
aam
xchg
ss
sti
cdq
cmps
movs
xlat
mov
test
pop
pop
mov
inc
cmp
mov
loope
fisubr
js
pop
ja
loop
sub
sbb
and
shr
test
xlat
(bad)
cld
nop
pop
and
sar
rol
leave
jle
mov
add
lds
and
pop
jmp
xor
push
inc
dec
pop
mov
ret
dec
iret
or
mov
add
mov
leave
iret
add
ds
fstp
pop
je
cli
xchg
sub
xor
pop
cdq
add
dec
xchg
(bad)
cmp
jmp
sbb
sbb
imul
mov
retf
shl
daa
sar
mov
stos
popa
jp
mov
scas
pop
imul
mov
push
ror
xor
in
jmp
dec
popf
mov
inc
fwait
ror
sub
pop
sub
sub
xchg
add
call
nop
pop
pop
dec
test
ficomp
repnz
xchg
sbb
in
push
sbb
sbb
and
(bad)
out
or
rcr
dec
jno
test
push
mov
fisttp
out
sbb
mov
fisub
test
lahf
adc
lahf
ins
mov
rol
icebp
push
sub
aaa
or
mov
and
jmp
add
sti
pop
mov
in
(bad)
sub
jge
or
push
cmc
inc
cs
fst
je
call
out
popf
jp
pop
adc
and
xchg
pop
adc
(bad)
call
add
int3
loopne
daa
push
out
repnz
gs
sbb
and
xchg
mov
or
test
inc
push
mov
sub
jmp
inc
fdivr
adc
sahf
shr
test
int
stos
fwait
mov
nop
dec
and
inc
movs
mov
call
push
fdivr
fdiv
movs
adc
mov
xchg
push
xor
lea
inc
push
icebp
mov
mov
jg
leave
aad
adc
adc
pop
sbb
bound
sbb
out
mov
sub
jmp
push
pop
movs
xor
(bad)
cmp
sub
jno
mov
in
mov
sbb
dec
test
mov
sub
pop
movs
jl
xlat
imul
jp
pusha
pusha
fs
jne
add
popa
loop
and
xor
test
das
inc
lock
gs
(bad)
test
out
jno
adc
lods
push
arpl
jg
mov
in
mov
dec
cmp
xchg
adc
stos
loopne
xlat
pop
jl
(bad)
pushf
ret
inc
xor
ds
mov
push
add
cli
dec
lahf
mov
push
ds
sub
mov
addr16
cmps
stc
jle
sbb
dec
add
adc
ret
rcl
sbb
xlat
std
pop
push
adc
sti
dec
aam
in
jp
test
(bad)
clc
ror
hlt
loopne
rcr
inc
inc
sar
cdq
mov
inc
push
pop
adc
ss
or
jne
popf
ins
arpl
or
call
or
cmp
idiv
leave
mov
or
stos
xchg
out
inc
or
or
xchg
call
ret
xor
or
xchg
ret
(bad)
jmp
push
call
add
cld
shl
retf
in
inc
mov
aaa
popf
int
jmp
dec
and
aam
sub
ja
pop
cmp
sbb
ds
pop
fdiv
gs
sub
fimul
out
std
je
arpl
(bad)
pop
test
dec
pop
nop
dec
push
ds
call
xchg
inc
aas
(bad)
cmp
lea
idiv
xor
loope
add
hlt
mov
jle
sbb
cmp
mov
mov
pop
jne
ficomp
mov
inc
push
mov
test
inc
popa
out
out
cli
ds
sbb
adc
fist
pop
xor
shl
and
fwait
sub
mov
jns
fcomp
lods
mov
jb
jne
xor
mov
aas
push
mov
or
hlt
pop
or
je
cli
jg
sbb
ja
repz
arpl
push
shl
fwait
mov
in
add
or
into
xor
mov
or
add
push
mov
or
and
lods
pop
icebp
daa
addr16
or
daa
push
cmp
pop
scas
jle
fmul
ror
mov
xor
mov
dec
movs
mov
cld
mov
lahf
cs
and
scas
stos
rol
pop
scas
and
sbb
and
dec
jp
jnp
mov
scas
ss
pop
inc
mov
jle
loop
sti
or
xor
push
cs
or
push
sub
pop
push
adc
xchg
mov
fldcw
sub
push
pusha
sub
add
mov
popf
and
push
punpckldq
push
nop
cmps
mov
pmaxub
mov
mov
sar
test
dec
dec
mov
push
mov
ins
adc
in
sbb
and
mov
adc
adc
int
dec
xor
sbb
xlat
jbe
shl
popa
push
mov
iret
xor
dec
pusha
dec
jecxz
jl
mov
fimul
fcmovbe
sub
cld
xor
loop
sbb
(bad)
jmp
cdq
ror
aad
lahf
pop
out
xor
je
and
loope
inc
push
sub
cmp
loopne
inc
xchg
fwait
mov
mov
dec
loopne
or
test
and
fisubr
loop
into
loopne
push
cdq
mov
ret
xor
push
hlt
iret
arpl
cld
sub
imul
sti
add
mov
nop
sub
cmp
adc
call
xchg
xchg
fnstsw
push
jmp
sbb
cmps
dec
pop
and
retf
sub
jae
outs
mov
cdq
addr16
pop
and
retf
test
xlat
cmc
loope
mov
(bad)
cmp
repnz
in
movs
ja
(bad)
cmps
ret
and
adc
call
dec
popf
rcl
daa
iret
cmp
xchg
leave
dec
cmp
xor
nop
fwait
inc
xchg
sub
loope
cmp
dec
ja
cld
lahf
stos
sahf
bound
push
in
jge
push
(bad)
lahf
pop
int3
imul
xlat
int3
sub
lods
sub
retf
out
adc
jmp
cmp
pop
xchg
(bad)
pusha
fistp
call
cmp
or
xchg
mov
pop
xor
or
inc
jl
test
add
cmp
cmps
jns
and
dec
xchg
das
push
inc
aad
sbb
inc
rcl
fst
mov
jmp
out
outs
pop
fadd
repz
adc
sahf
stos
nop
push
rcl
push
xchg
and
ins
mov
outs
int
sub
pop
fist
stos
mov
push
icebp
jns
stc
mov
scas
and
ret
icebp
loopne
dec
loope
mov
outs
ins
add
push
loop
mov
ror
jmp
jp
es
pop
mov
mov
icebp
add
bnd
add
cmps
(bad)
popa
push
xchg
pop
loop
ror
cli
and
adc
or
scas
sub
and
daa
push
push
movs
and
adc
sbb
dec
adc
call
cmps
pop
inc
stos
out
inc
cwde
pop
adc
jge
ror
xchg
sub
xchg
sbb
pop
xlat
sub
xor
out
leave
into
jne
not
jno
mov
inc
(bad)
lock
fmul
dec
test
pushf
inc
(bad)
jle
call
xchg
(bad)
jl
int
cmps
nop
cmp
sub
les
sbb
sub
ins
sar
push
inc
out
jne
xchg
mov
inc
(bad)
fld
retf
cmp
sbb
and
pinsrw
xchg
lds
ficom
add
scas
shl
cs
push
mov
pop
fistp
int3
adc
fdivr
sub
add
pusha
aaa
jge
pop
mov
adc
sub
je
ja
xlat
jge
(bad)
cdq
and
(bad)
mov
aaa
mov
push
(bad)
js
not
sub
cdq
adc
cmp
or
inc
pusha
mov
push
mov
pop
jmp
(bad)
cmp
adc
adc
xchg
out
clc
dec
push
mov
fidiv
neg
xor
adc
push
loop
pop
sar
retf
sbb
pop
mov
push
stos
ja
repz
ret
les
xor
out
fcomp
out
bound
and
sub
fs
adc
pop
mov
mov
pop
and
adc
dec
mov
cld
cmovns
adc
nop
push
fs
xchg
xchg
mov
xchg
leave
in
xchg
adc
fnstenv
xchg
das
mov
scas
int
loopne
jbe
xchg
out
inc
outs
clc
and
cmp
(bad)
pop
sbb
shl
stc
cmp
mov
push
mov
inc
push
sbb
ja
cmp
xchg
fcomp
jg
inc
lahf
sahf
loopne
or
iret
test
cmp
mov
ret
xchg
mov
rol
inc
sub
(bad)
leave
adc
sbb
pop
mov
out
pop
and
nop
ret
pop
inc
jb
xchg
shl
cmp
dec
fstp
loope
push
or
adc
fisttp
mov
xlat
add
and
push
mov
push
(bad)
ins
gs
fld
sbb
(bad)
popa
push
jne
mov
xlat
cs
inc
push
xor
bound
hlt
jae
adc
lds
inc
movs
test
xchg
test
je
push
mov
push
or
inc
mov
lods
mov
(bad)
sbb
or
rcl
and
inc
jp
add
jg
jecxz
gs
jmp
adc
(bad)
push
inc
shl
test
fsubr
mov
mov
jg
shl
jl
mov
dec
js
pop
dec
mov
pop
outs
test
jnp
inc
mov
(bad)
push
or
jno
mov
dec
outs
pop
jmp
adc
lds
xchg
out
cmp
or
mov
or
cli
and
or
ficom
adc
stos
popa
mov
loop
jns
inc
xchg
mov
movs
(bad)
sub
pushf
out
and
retf
dec
jp
inc
out
sub
jbe
call
fist
jo
je
adc
ins
in
push
sub
xchg
xlat
call
movs
loop
enter
cmp
xor
loop
mov
inc
movs
shr
fidivr
xchg
inc
call
adc
ds
adc
push
jmp
lea
jno
leave
loopne
sbb
sub
jbe
lods
pop
xlat
cdq
(bad)
or
add
sti
mov
jmp
jmp
loopne
dec
ins
outs
cmp
pop
mov
test
inc
movs
fdivr
add
mov
iret
xchg
pushf
sti
xor
sar
jns
jae
fcmovne
pop
outs
(bad)
xor
pop
sbb
dec
int
inc
(bad)
ds
out
pop
rcr
sbb
xor
fcomp
scas
fstp
int
cmp
daa
or
daa
out
imul
(bad)
cmp
jecxz
in
icebp
fsub
out
fiadd
fwait
aaa
push
inc
fld
cmps
sti
cmps
ret
add
test
cmp
inc
repnz
loope
dec
and
scas
sub
in
fwait
cmp
ja
out
repnz
out
pop
sbb
xor
add
cmc
bound
pushf
inc
(bad)
jmp
pop
rep
scas
sub
xor
jg
(bad)
into
mov
sub
movs
push
adc
test
aas
jmp
shl
or
cli
mov
push
inc
int
test
stos
inc
sbb
jb
sub
out
and
call
(bad)
pop
push
imul
test
dec
fldenv
push
std
pop
mov
xchg
fs
test
push
fadd
dec
mov
or
sbb
push
pop
push
add
xor
push
int3
(bad)
test
cmp
mov
int3
into
dec
fisttp
mov
mov
call
in
aam
aad
and
fist
push
mov
mov
movhlps
scas
mov
in
sub
push
inc
mov
outs
repnz
stos
ror
mov
push
push
dec
add
xlat
xchg
push
in
pop
arpl
(bad)
sti
xor
jg
push
xlat
mov
daa
pusha
inc
shl
jge
pop
pusha
dec
cmp
shr
aad
movs
lock
pop
repz
lock
sbb
gs
mov
jno
hlt
aaa
jmp
jb
int3
scas
xor
aad
fwait
(bad)
mov
add
mov
loop
dec
jecxz
ins
mov
rcl
push
mov
jbe
or
inc
jnp
cmp
jp
push
mov
mov
lahf
mov
mov
jnp
ror
add
jg
(bad)
ret
retf
adc
xchg
(bad)
stc
push
enter
(bad)
(bad)
sub
mov
sub
leave
fistp
mov
mov
rcl
xor
inc
iret
push
int
daa
data16
cld
lock
(bad)
stos
mov
rcr
jg
or
cwde
test
pop
jge
pop
jmp
shl
add
mov
and
sahf
adc
ror
fld
jns
and
sbb
call
and
ret
clc
sbb
adc
pop
test
jne
test
add
(bad)
jp
iret
mov
pop
icebp
mov
jmp
dec
fst
mov
bound
sbb
icebp
mov
inc
jl
jmp
repz
push
cmp
(bad)
nop
push
mov
out
dec
cmps
(bad)
mul
add
jmp
cmps
cmp
fidivr
lods
stos
sub
dec
mov
adc
test
repnz
inc
int
mov
xor
sub
cmp
ret
in
dec
stc
add
ret
mov
sub
fimul
adc
push
repnz
or
repz
mov
retf
adc
xor
sbb
xlat
hlt
mov
lahf
stos
(bad)
fsubr
add
bound
or
int3
(bad)
pextrw
mov
repnz
icebp
jo
xchg
test
sbb
int
push
(bad)
mov
bound
rcl
ror
mov
sbb
movs
dec
sbb
mov
sbb
pop
mov
fsub
sbb
and
in
pop
mov
fcom
push
jnp
adc
dec
icebp
sbb
movs
mov
sar
xor
repz
adc
push
pop
push
stos
mov
scas
sar
lods
int
dec
test
scas
bound
test
jo
xor
les
leave
call
mov
ret
dec
xor
dec
ins
fwait
in
mov
les
sahf
cwde
gs
pop
dec
or
mov
pop
imul
xchg
addr16
(bad)
leave
test
movs
push
xor
pop
rol
lods
cmp
mov
pop
lods
sbb
sbb
cmp
pop
add
sahf
js
inc
cmp
dec
and
add
test
das
inc
iret
pop
inc
sub
mov
mov
ucomiss
inc
repz
add
mov
mov
rcr
daa
es
lods
scas
cmps
inc
cmp
xor
lds
mov
add
bound
push
jno
or
cmps
out
jl
pop
ss
mov
mov
outs
pop
jae
out
repnz
add
dec
js
lods
movs
in
fdivr
sbb
mov
aad
push
add
cmps
xchg
sar
mov
sbb
xor
jecxz
test
sbb
fs
lahf
dec
ja
push
xchg
adc
dec
leave
mov
jl
adc
pop
lods
int
(bad)
fwait
mov
retf
in
jne
rcl
sbb
pop
je
push
inc
es
ins
xchg
dec
mov
sub
pop
ret
lock
and
or
sub
and
sub
inc
or
popa
or
retf
add
sbb
sbb
add
add
pop
pop
dec
push
jl
or
or
adc
push
fdivr
pop
dec
addr16
jns
jo
mov
xchg
dec
mov
jg
jae
out
outs
cmp
xchg
or
jns
jge
adc
mov
inc
sbb
jns
mov
mov
mov
and
pop
pusha
xchg
inc
leave
pop
inc
ror
push
mov
sub
shl
cmp
sbb
mov
mov
stos
into
xor
jnp
ds
leave
repnz
mov
and
daa
scas
rol
xor
loope
add
leave
ins
mov
inc
aaa
push
popa
dec
out
ds
cmps
xchg
inc
push
adc
sahf
adc
pop
cdq
and
mov
mov
enter
arpl
loop
and
pushf
cwde
out
cmp
xchg
inc
mov
les
mov
jmp
cmps
or
sub
xlat
or
mov
adc
arpl
movs
std
sbb
fst
or
stos
jge
mov
cmps
pop
pop
dec
popw
jbe
and
push
loopne
cmc
out
and
sbb
xor
outs
in
ret
sbb
ins
add
mov
xor
inc
je
and
inc
or
es
lahf
test
and
rcr
xor
clc
nop
mov
daa
pop
cld
rcr
mov
(bad)
btr
shl
(bad)
jno
add
xchg
out
xchg
mov
inc
mov
scas
mov
in
mov
in
mov
lock
dec
leave
cmp
inc
out
jb
imul
sbb
cmp
inc
fdivr
retf
xchg
xchg
test
cmps
std
jmp
inc
(bad)
jmp
jne
xor
or
xlat
pop
mov
fld
inc
js
sub
push
push
mov
inc
(bad)
test
ja
leave
mov
repz
add
dec
cmp
cdq
hlt
repz
xor
in
loopne
sbb
mov
das
lea
inc
push
sub
jecxz
cmps
pusha
sub
mov
pop
dec
sub
pop
call
inc
div
jge
(bad)
fucomi
retf
sub
dec
lods
mov
or
push
shl
sbb
(bad)
(bad)
inc
(bad)
(bad)
inc
je
xchg
push
xchg
dec
in
repz
pusha
push
push
es
mov
ror
sar
bsr
mov
push
mov
in
jmp
adc
inc
pop
or
inc
nop
cmp
and
imul
(bad)
jns
iret
fld
mul
in
retf
std
loopne
stos
inc
lea
adc
sbb
(bad)
jge
sub
mov
ja
(bad)
cs
mov
xlat
push
fdiv
fist
mov
push
ds
aaa
jg
loopne
jmp
fsqrt
cli
pop
dec
jmp
push
and
xchg
mov
rcl
cs
aam
pop
or
sub
imul
jp
mov
mov
push
out
not
add
xchg
das
out
in
test
lock
jno
sub
mov
out
jl
sbb
add
sbb
jl
enter
call
mov
leave
aas
mov
push
leave
mov
ins
test
mov
push
push
out
inc
pop
and
mov
or
adc
add
pop
(bad)
in
sub
sub
retf
enter
mov
mov
inc
jbe
retf
xchg
mov
sbb
into
repnz
js
push
loope
xchg
mov
scas
div
pop
pop
pop
ret
jecxz
xor
mov
in
cmp
outs
ror
cmc
not
popf
sahf
mov
pop
inc
xor
in
lahf
dec
cmp
test
dec
mov
add
sub
scas
sub
cld
(bad)
(bad)
and
or
dec
les
mov
ficomp
mov
cdq
cli
outs
pusha
xor
xor
inc
test
fnstsw
xor
sbb
imul
retf
inc
and
jl
mov
(bad)
clc
push
or
jecxz
sub
cmp
push
div
(bad)
and
jae
or
stc
mov
push
shl
out
pop
cmp
xchg
test
jl
fs
xchg
aam
cmp
repnz
push
dec
cwde
sub
in
push
jmp
and
dec
mov
hlt
mov
in
es
jnp
mov
adc
repnz
fwait
sbb
mov
dec
imul
test
daa
jo
pop
shr
xchg
and
pop
movs
retf
call
(bad)
out
jle
repnz
mov
jg
cwde
scas
repnz
mov
sub
sbb
sar
mov
cld
xchg
pop
adc
xchg
sbb
ja
xchg
xchg
xchg
test
jle
lods
aaa
ins
popf
jb
add
inc
in
mov
mov
inc
iret
shl
movs
mov
add
aam
jg
scas
lock
retf
xor
ss
std
cmps
lods
ret
test
cli
cmps
xchg
inc
mov
jne
fucomip
push
jb
retf
ds
mov
push
xchg
(bad)
call
mov
in
inc
jae
jne
cmp
jle
dec
dec
test
jg
in
mov
mov
push
pop
inc
pop
inc
fdiv
in
xor
mov
(bad)
in
jbe
je
shl
lods
cmc
mov
cmovp
movs
mov
mov
in
adc
fnstenv
pop
fiadd
repz
in
movs
or
mov
mov
cdq
adc
adc
imul
cmp
xor
cmps
sbb
(bad)
fild
mov
(bad)
dec
rol
sbb
fsub
jns
add
inc
push
fnstenv
(bad)
sub
adc
push
nop
cwde
jns
xor
fwait
dec
jnp
push
mov
jle
in
addr16
and
adc
in
mov
enter
scas
mov
(bad)
pop
sub
push
outs
mov
jecxz
mov
pop
push
add
or
xor
push
popa
xor
adc
add
aas
ret
jecxz
dec
add
mov
adc
push
cs
ss
imul
xchg
popf
adc
add
dec
push
pop
mov
adc
mov
mov
movs
xchg
inc
ins
add
cmp
ins
leave
dec
arpl
fist
mov
fistp
cwde
cdq
jns
mov
push
cmc
jg
lds
or
cmp
add
js
loopne
push
pop
cmps
idiv
out
adc
push
mov
push
hlt
call
mov
nop
jecxz
dec
js
cwde
mov
jg
push
pop
inc
and
xor
lods
or
outs
gs
stos
dec
call
pusha
jno
sbb
lock
out
jns
fisubr
jmp
cli
and
jmp
enter
gs
cmc
and
push
cmp
sar
fild
frstor
push
test
xor
(bad)
scas
setb
adc
mov
es
inc
dec
test
or
enter
mov
fbld
ret
rol
call
mov
mov
adc
pop
ins
popf
inc
jmp
cs
pusha
mov
push
xchg
pop
or
nop
xor
repnz
mov
xlat
(bad)
xor
mov
xchg
sbb
mov
xchg
movs
scas
(bad)
sub
jno
mov
sti
pop
add
fimul
xor
ins
aam
mov
into
mov
(bad)
sub
fmul
(bad)
mov
retf
data16
push
add
pusha
xor
cdq
in
dec
loope
ds
xor
stos
shr
cmp
mov
fisttp
pop
push
lds
ja
sti
repnz
loope
aad
cmp
js
fstp
aaa
in
jb
sub
pop
icebp
cmp
addr16
clc
push
outs
(bad)
dec
cs
jecxz
inc
xchg
jb
or
int3
push
lahf
mov
pop
dec
fisubr
cdq
leave
pushf
dec
rcr
inc
popf
xchg
pusha
inc
ret
jo
mov
cli
push
gs
int3
repz
sub
out
out
daa
ds
push
mov
xchg
push
jmp
cmp
pusha
sub
in
mov
sbb
cmc
xor
in
fwait
popf
mov
cli
mov
lea
dec
dec
jbe
pop
js
push
ficomp
sar
push
loop
lock
lods
and
jmp
xor
dec
je
movs
mov
pop
add
popa
lods
lods
mov
mov
nop
xor
mov
iret
mov
push
push
and
add
xchg
cmps
(bad)
pop
popa
mov
pop
lahf
xchg
into
repz
push
aas
fsqrt
ins
nop
inc
mov
cli
xor
mov
cmps
push
mov
fld
jbe
sub
push
xor
test
shl
icebp
add
xlat
mov
xor
stc
cmp
repz
pop
sbb
clc
neg
das
loope
call
gs
(bad)
jne
fwait
sbb
(bad)
loop
int
mov
aaa
stc
and
push
cmp
out
mov
adc
mov
sub
inc
inc
sbb
push
sahf
in
sbb
mov
xor
add
cdq
mov
aad
ins
les
adc
ins
pop
clc
test
in
movs
jmp
or
adc
pop
clc
mov
repnz
out
mov
adc
mov
add
fld
gs
scas
pop
ret
xor
icebp
inc
into
and
mov
lods
cmp
push
lock
and
sbb
icebp
aaa
or
int3
sbb
jge
out
pop
aad
dec
lahf
xor
xchg
pop
popa
cmc
xor
add
addr16
aad
iret
scas
imul
sahf
loopne
rcr
add
fidivr
jl
xchg
test
sub
cmp
pop
ins
xlat
xchg
mov
in
es
rcr
mov
aad
xchg
xchg
mov
imul
fldenv
call
pop
mov
xchg
fs
jbe
adc
lods
xchg
mov
test
es
mov
cdq
shr
inc
cmp
xchg
outs
(bad)
das
dec
sar
aam
das
dec
addr16
pop
pop
jg
cld
out
in
jmp
jl
and
imul
add
dec
nop
adc
xor
mov
and
stc
addr16
cmc
les
nop
cmps
ja
cmp
add
dec
sbb
and
mov
aam
mov
sub
inc
je
fwait
xchg
sbb
pop
push
adc
iret
jmp
scas
sbb
add
stos
mul
call
scas
add
mov
in
cmp
mov
and
jg
dec
dec
stos
in
retf
call
adc
mov
sbb
pop
dec
ror
repz
daa
fadd
push
push
mov
clc
retf
cmp
call
ret
loope
push
inc
loope
fist
jb
sub
icebp
cmps
mov
xor
hlt
enter
sub
sbb
pop
outs
dec
xchg
xor
sub
je
pop
fisub
outs
pop
aad
dec
xchg
sbb
stc
pop
pop
pop
pop
(bad)
push
or
mov
jbe
enter
pop
pop
jmp
(bad)
push
cld
iret
xchg
mov
jmp
and
and
xchg
adc
lds
std
add
push
ins
sar
or
jle
enter
adc
lahf
shl
mov
and
and
pop
(bad)
push
xchg
lods
pop
sahf
test
outs
push
je
outs
dec
and
mov
xchg
ins
push
mov
or
ins
ins
bound
fstp
push
icebp
call
fstp
shr
stc
hlt
js
push
cmp
cmp
mov
(bad)
rcl
and
loope
ins
jae
inc
cmc
call
or
fmul
push
(bad)
or
xor
inc
xor
adc
and
repnz
out
sbb
mov
adc
cmp
cmp
js
gs
dec
add
test
push
out
cmp
ds
movs
add
bound
scas
or
rol
inc
movs
jno
cmp
and
and
ins
mov
daa
xor
cli
add
mov
pushf
or
adc
mov
push
inc
shl
lds
or
sbb
ret
mov
pop
adc
inc
push
adc
(bad)
popa
(bad)
push
mov
push
dec
pop
popa
(bad)
outs
xor
xchg
jmp
xlat
mov
stc
mov
mov
rcr
(bad)
sbb
sub
call
push
adc
mov
mov
shr
rcr
mov
mov
dec
repz
jae
sbb
fsubr
scas
jl
shr
sub
out
mov
clts
gs
in
inc
fs
mov
jns
fadd
mov
add
or
test
add
gs
icebp
(bad)
faddp
mov
add
pop
adc
cmp
mov
jbe
out
mov
stc
das
pop
cwde
mov
mov
cmp
icebp
dec
fs
fild
sub
sub
pop
mov
push
cmp
or
clc
jmp
inc
adc
mov
and
xchg
jmp
jecxz
nop
push
out
cld
inc
outs
les
retf
(bad)
ins
xchg
jbe
(bad)
and
cmp
bswap
pusha
out
cli
in
mov
dec
int
(bad)
repnz
shl
mov
mov
cmp
loope
push
daa
jg
adc
frstor
cmp
inc
jno
pop
jb
fcmovnb
and
(bad)
pusha
mov
ins
fnsave
sbb
xor
inc
push
arpl
lods
int3
jl
adc
ror
sar
mov
add
movs
movs
jg
xor
cmp
in
lock
cdq
(bad)
movs
scas
add
and
cdq
scas
xor
sbb
dec
das
or
es
xor
ret
popf
jmp
jg
les
lods
test
sub
outs
mov
and
cmp
neg
xor
adc
push
cmps
mov
push
or
or
jp
iret
gs
pmaxsw
add
mov
jnp
js
iret
jne
(bad)
jo
pop
jecxz
mov
mov
loop
jecxz
sub
ins
dec
jmp
mov
pop
scas
xchg
std
inc
loope
pushf
arpl
cmp
jg
push
ret
xchg
mov
mov
mov
sbb
adc
das
test
push
dec
frstor
cmp
out
push
jns
fisubr
cmp
shr
mov
cmp
and
lahf
cmp
cwde
jne
mov
push
sbb
scas
out
pushf
hlt
push
sub
arpl
enter
into
repz
int3
test
movs
push
das
je
jl
dec
and
cld
(bad)
dec
pop
push
retf
das
lods
add
add
xor
repz
adc
cmp
shl
jnp
fwait
fwait
and
mov
cld
sub
dec
scas
in
in
sti
sub
cmps
or
dec
in
xchg
push
pop
or
dec
cs
xchg
mov
and
(bad)
mov
test
cli
dec
xor
or
jnp
pusha
xchg
popa
inc
nop
and
push
lods
adc
mov
push
imul
dec
sub
or
lods
xor
(bad)
retf
movs
dec
(bad)
cmps
push
icebp
mov
pop
loopne
out
movs
es
pop
add
push
jmp
and
mov
mov
jge
jae
loop
fnclex
repnz
pop
mov
xor
pop
in
xor
sbb
loopne
js
(bad)
into
fwait
inc
push
sbb
inc
daa
mov
ins
cmp
mov
imul
push
stos
ffreep
fst
je
cmp
gs
mov
stos
sbb
out
ja
imul
jbe
push
push
adc
jns
mov
and
test
push
(bad)
into
xor
and
mov
mov
in
inc
retf
repz
bound
mov
repz
cmp
(bad)
jmp
xor
inc
inc
mov
retf
outs
or
add
add
xor
inc
add
mov
rcr
pop
inc
cli
clc
ror
cmp
rol
mov
shl
rol
gs
pop
test
ffree
popa
cmp
xchg
pusha
push
rol
fdiv
jns
or
adc
xor
lds
out
pushf
xchg
jae
push
aaa
call
xchg
div
dec
cmp
dec
add
stc
out
cmp
xchg
test
mov
dec
pop
jmp
dec
(bad)
neg
fst
or
call
xchg
pop
js
adc
(bad)
jl
scas
add
sbb
dec
(bad)
push
jp
pop
test
mov
aam
lahf
or
mov
test
cwde
dec
dec
sbb
push
adc
(bad)
mov
jl
inc
push
sub
ret
shl
stos
sti
mov
pmuludq
mov
mov
daa
leave
ret
daa
fs
push
and
les
jb
ret
ss
push
outs
cmps
mov
ret
ror
sahf
push
dec
or
mov
retf
push
mov
and
dec
in
movs
jg
out
sub
and
das
add
js
mov
push
push
mov
lods
mov
inc
rcl
out
ss
ja
fsubr
dec
outs
push
cmp
push
test
xor
or
inc
test
ja
int3
mov
mov
dec
arpl
mov
lods
adc
push
mov
fs
push
das
xchg
sub
icebp
out
mov
fcom
shr
fucomp
sub
and
loop
out
lahf
mov
ret
xchg
test
ficom
mov
or
jo
adc
(bad)
mov
jge
inc
imul
in
mov
jmp
mov
fsub
sbb
lods
sbb
das
cmp
ficom
mov
int
lea
xchg
inc
psubb
push
add
cmc
push
vpsubq
arpl
jb
neg
mov
jge
movs
enter
ja
sbb
fwait
add
cli
xor
lahf
outs
dec
fadd
mov
sub
push
jecxz
cmps
test
rol
loopne
ins
cmp
mov
es
cmp
push
rol
inc
jmp
add
jmp
mov
cmp
mov
xor
pop
gs
sbb
in
or
pusha
sbb
nop
pusha
cmc
out
ja
shl
push
dec
pop
or
inc
add
push
(bad)
retf
dec
cs
pop
loop
mov
sbb
and
sbb
iret
out
sub
retf
add
mov
jb
jl
in
aaa
lahf
push
lods
and
hlt
mov
sub
pop
cmp
(bad)
fcomp
xor
in
pusha
jo
cmp
les
mov
fnstenv
fsub
fsubr
popf
das
out
pop
pop
mov
sub
(bad)
sbb
outs
test
mov
je
sub
xlat
mov
enter
icebp
or
test
out
fdivr
cdq
jp
(bad)
pop
test
in
ins
pop
loop
push
(bad)
mov
xchg
das
shl
fs
xchg
jge
sar
inc
sti
sub
aam
or
loopne
inc
adc
repnz
xor
(bad)
out
pop
arpl
jg
jp
fistp
mov
push
pop
cmps
mov
mov
scas
mov
aam
in
in
mov
jmp
ja
add
and
lds
out
movs
daa
outs
cdq
mov
adc
mov
(bad)
retf
rcl
mov
lea
and
icebp
ds
call
mov
inc
mov
xor
shr
xor
gs
adc
lock
push
dec
jae
cs
jae
in
movs
jno
dec
rcl
jns
rcr
mov
pop
stc
iret
jne
sti
popa
jmp
and
jmp
fiadd
loope
sub
jnp
push
adc
cdq
jge
cmp
test
rcr
or
fsub
pop
stos
add
and
and
push
mov
stc
sub
mov
dec
inc
bound
arpl
(bad)
test
adc
inc
aam
(bad)
pop
mov
xchg
repnz
int3
push
vsqrtpd
call
dec
sahf
stos
mov
lods
mov
shl
inc
sbb
shl
movs
mov
fbstp
inc
ds
jbe
xlat
fld
inc
movs
and
jmp
jg
sub
pop
outs
arpl
imul
mov
aad
stos
and
push
jbe
push
lahf
cdq
loop
test
popf
pop
dec
daa
enter
mov
rcr
mov
ins
sbb
adc
jmp
stos
sub
gs
xor
add
shr
adc
push
gs
xor
stos
call
pop
popf
xor
or
adc
into
and
inc
pop
fdiv
fs
pop
jne
bound
enter
cmovnp
fbld
sbb
adc
push
cmp
mov
add
fisttp
mov
or
sbb
and
push
inc
mov
pusha
pushf
jp
add
or
es
push
xor
push
xchg
call
ret
xlat
popa
add
cmp
add
adc
aam
push
repz
mov
pop
inc
push
scas
jbe
adc
push
cld
inc
mov
icebp
call
test
sub
push
adc
gs
adc
mov
aaa
mov
icebp
add
stc
lea
out
call
mov
xor
inc
mov
nop
pop
lea
pop
ins
scas
adc
dec
inc
jnp
jo
popf
dec
das
shr
or
imul
imul
mov
mov
jne
jge
mov
jg
push
and
(bad)
nop
push
cmp
dec
lods
inc
and
or
rcl
out
mov
mov
loop
fidivr
ror
popa
xor
cmp
mov
sbb
daa
ret
jle
xor
mov
pop
push
inc
xor
pop
sub
ror
aas
lds
(bad)
out
jle
pop
fiadd
ret
ja
(bad)
cmps
mov
ja
stos
sbb
lahf
cmp
jl
pop
dec
adc
fs
fs
mov
sub
leave
je
in
movs
test
clc
pop
ret
ins
je
iret
cmp
ss
sbb
and
push
push
xchg
neg
pop
jae
imul
test
xor
and
es
cmp
scas
inc
inc
int3
cmp
fcomp
mov
rcl
add
nop
pop
call
out
jle
cwde
mov
or
xor
mov
mov
lods
inc
mov
sti
ins
shr
add
imul
sbb
add
mov
bound
pop
jnp
push
adc
lods
xchg
mov
pop
fsub
mov
fucomp
mov
imul
ds
call
jo
push
or
xor
sub
jbe
jnp
inc
data16
push
fs
sbb
nop
loope
pop
mov
push
xchg
(bad)
(bad)
jg
imul
mov
fild
in
int
jbe
cmp
mov
hlt
cmp
cmps
push
sub
push
jl
in
mul
bound
mov
jl
ins
mov
scas
std
(bad)
loope
cmp
mov
inc
pop
jbe
sbb
jmp
in
or
adc
test
xchg
add
mov
dec
sbb
jl
(bad)
push
dec
iret
arpl
sti
gs
rcl
frstor
sbb
in
pop
push
lock
inc
xchg
xchg
push
adc
(bad)
mov
xchg
fld
pop
mov
mov
mov
ret
push
retf
cld
icebp
shl
retf
in
sbb
cld
retf
jo
add
shl
sub
iret
or
xor
mov
test
lods
rcr
sub
push
(bad)
pop
add
test
mov
mov
sbb
idiv
ja
adc
das
iret
mov
sahf
int
dec
cs
(bad)
mov
stos
loop
xchg
inc
(bad)
pop
clc
mov
enter
test
push
dec
fwait
loope
xor
shr
pop
inc
movs
popf
call
ret
mov
and
ret
pop
adc
or
fcom
pop
jp
or
loope
jns
arpl
push
mov
stos
cmp
adc
dec
sbb
and
daa
(bad)
lds
fcmovbe
add
(bad)
sub
lahf
es
cmps
push
int
ror
and
fidiv
xor
mov
ror
mov
dec
sub
mov
call
mov
jo
stos
leave
or
fbld
nop
xchg
xor
cmp
ret
in
ror
jae
lea
mov
pushf
and
inc
in
aam
ret
xchg
(bad)
gs
sub
cmp
test
jno
sub
jno
int
cmp
jns
push
fcomp
jl
xchg
cmp
sar
push
bound
(bad)
mov
repnz
mov
aad
daa
pop
sbb
mov
push
mov
xor
out
push
mov
cmc
test
ret
and
shl
vmread
xlat
mov
std
push
ret
(bad)
loop
mov
xchg
pusha
mov
push
mov
adc
pop
sub
xor
pop
xchg
out
movs
pop
xchg
adc
sbb
repz
sub
adc
das
mov
rcl
pop
sahf
ret
ds
pavgb
pop
sbb
loopne
test
jp
push
ins
adc
inc
mov
jl
xor
dec
push
ja
xchg
xchg
cwde
nop
mov
adc
in
mov
ret
sbb
jle
imul
popa
xchg
and
pop
push
inc
bound
inc
test
sub
xchg
ds
hlt
mov
pop
jp
push
mov
sub
cmp
push
clc
int3
jg
js
cdq
repnz
or
inc
rcl
jnp
adc
push
scas
dec
add
pop
bswap
leave
bound
mov
sbb
inc
lea
xchg
mov
mov
sub
push
mov
xchg
push
mov
dec
jo
aam
lahf
aad
xchg
outs
mov
mov
fldenv
es
pop
mul
aas
dec
stos
cdq
push
fcmove
jp
sti
lea
cwde
sub
sub
leave
iret
add
cmps
stc
sbb
inc
and
mov
dec
mov
inc
jnp
scas
out
sbb
cmp
xor
sbb
loope
int3
fsub
or
pushf
aaa
mov
xchg
and
outs
jnp
inc
fisub
stos
(bad)
mov
xor
xchg
aam
loopne
pop
pushw
xor
out
jg
out
pop
adc
(bad)
(bad)
(bad)
(bad)
fstp
adc
sub
test
jg
sbb
ins
popf
fwait
out
mov
mov
jnp
test
out
xchg
cmp
imul
xchg
das
mov
scas
push
mov
add
xchg
dec
int
xor
in
mov
pop
sub
cld
adc
fadd
lods
in
(bad)
imul
adc
mov
retf
jb
out
xchg
cmp
mov
mov
iret
movs
fmul
add
xor
push
sub
push
das
stos
dec
cmp
push
je
add
fcom
inc
enter
push
pop
out
ret
imul
ror
inc
ins
(bad)
scas
iret
icebp
imul
(bad)
loop
into
pop
adc
dec
imul
push
push
shl
mov
repnz
dec
jmp
xchg
push
cmps
jbe
in
bswap
xchg
int
xor
call
add
stc
xor
sub
in
stos
imul
cmp
out
(bad)
ror
ds
shl
aaa
fist
xchg
stos
sub
pusha
cmc
mov
xor
js
adc
cmp
pop
and
or
push
or
(bad)
and
adc
mov
repz
cs
pop
add
lds
mov
jne
cmp
push
push
(bad)
aad
push
arpl
dec
sbb
psrld
jno
scas
mov
adc
inc
sbb
int
sub
adc
dec
rol
pop
push
jo
jo
and
xor
add
adc
and
pushf
push
scas
xchg
dec
or
cmps
cmp
cmp
inc
(bad)
hlt
lds
and
popf
mov
xor
popa
cld
mov
pop
loope
adc
test
aas
cmovb
in
pop
shl
std
push
inc
mov
call
enter
in
pop
(bad)
dec
pop
(bad)
test
sbb
test
push
xchg
sub
sub
(bad)
jb
jnp
mov
aas
and
cmp
add
jmp
aaa
mov
fmul
outs
push
cmp
mov
inc
inc
xchg
inc
push
dec
mov
pop
popf
mov
jmp
mov
dec
inc
ror
inc
inc
loopne
inc
mov
mov
pop
or
add
mov
xchg
ds
shr
pop
rcr
lods
ja
sub
jl
inc
add
inc
(bad)
repnz
daa
mov
in
pusha
push
mov
adc
(bad)
sar
cld
jns
scas
and
aam
push
in
lods
lds
cli
in
xchg
int
sub
or
jp
int
jae
mov
aad
push
inc
cdq
add
enter
sub
or
stos
fsubr
pop
mov
jg
fsubr
sahf
fsubp
outs
mov
fistp
jmp
test
fsub
cmovnp
push
inc
pop
in
pushf
push
shr
pop
dec
push
inc
pop
pop
mov
xchg
out
dec
inc
scas
mov
ss
movs
retf
mov
(bad)
repz
lods
fiadd
out
inc
xor
or
mov
jo
jo
inc
xor
pop
sbb
addr16
cdq
xor
mov
add
push
(bad)
enter
cdq
std
adc
jle
and
adc
jecxz
xor
sbb
pop
arpl
pushf
xor
adc
xor
mov
mov
add
pushf
add
shl
lahf
(bad)
fdivr
ficom
lahf
inc
lahf
inc
or
xor
push
push
sub
aad
adc
add
add
and
test
add
xor
in
std
ret
cmps
xor
mov
add
shr
xchg
sbb
ins
in
pop
les
sub
add
xchg
mov
(bad)
test
mov
fistp
jp
sbb
push
fist
dec
scas
call
push
enter
ins
cmps
das
aas
iret
mov
sub
jnp
pop
xchg
int
push
sti
cs
and
pop
(bad)
mov
jns
xchg
and
loop
fnsave
in
add
ficomp
push
loop
mov
(bad)
mov
xor
bound
shl
jecxz
inc
sbb
cld
lock
xor
in
xor
adc
sbb
les
adc
shl
inc
adc
sbb
aas
imul
cmps
loop
xchg
nop
jb
test
dec
imul
push
addr16
cmp
push
test
stos
push
pop
fwait
iret
inc
(bad)
add
mov
mov
or
push
mov
int3
sub
arpl
cmc
ret
cmp
mov
push
rol
ja
fs
loope
neg
dec
mov
pop
jne
shl
push
pop
xor
sbb
cmp
retf
or
imul
gs
xor
loope
jnp
(bad)
xor
xor
or
pop
inc
lock
inc
jae
xor
mov
xchg
inc
iret
mov
ret
mov
es
cli
xor
test
cmp
cdq
push
stc
cwde
and
in
ss
dec
in
es
imul
icebp
jne
aad
(bad)
push
ja
jl
xor
sti
pop
les
mov
out
inc
pop
jae
ja
lock
push
lahf
movs
push
xchg
(bad)
sub
aam
(bad)
test
mov
das
stos
xchg
pop
mov
push
xor
or
mov
cmp
movs
inc
inc
and
in
test
sbb
push
test
fisub
out
mov
cmp
mov
mov
aas
in
dec
mov
pop
mov
popa
ja
mov
sar
cdq
inc
mov
jmp
inc
pop
cmp
icebp
fimul
lahf
and
fist
jp
push
fldenv
lds
mov
imul
ins
adc
or
lods
pop
int
xlat
inc
(bad)
cdq
push
jp
push
add
loop
data16
mov
mov
leave
arpl
and
outs
mov
xchg
daa
mov
std
ds
xchg
leave
mul
popa
push
cmp
or
mov
cld
loope
or
repnz
imul
push
je
ss
xchg
xchg
and
inc
(bad)
imul
dec
jl
mov
inc
dec
mov
mov
mul
or
jp
out
inc
and
lds
iret
mov
ins
cs
ror
sub
mov
cli
dec
push
repnz
push
mov
pop
jno
mov
mov
or
cmpps
cli
call
push
inc
(bad)
fst
xchg
push
shl
and
xchg
mov
dec
sbb
mov
pop
test
int3
xchg
mov
xor
aad
arpl
and
jmp
xor
add
into
call
into
pop
fisub
fisub
inc
sub
dec
add
scas
push
movs
clc
xor
pushf
movs
sar
ror
mov
xchg
nop
dec
cmps
xor
xchg
sti
imul
int
ins
cmp
push
adc
add
mov
or
pushf
sbb
inc
mov
adc
movs
stc
rol
loop
mov
pop
dec
dec
mov
out
dec
bndstx
es
mov
and
pushf
(bad)
pop
inc
inc
movs
cli
mov
mov
push
sub
es
xchg
outs
fwait
outs
sub
xchg
lds
cdq
jno
inc
pop
shl
mov
jae
xor
and
mov
popa
sub
dec
fdiv
cmp
and
retf
pushf
int
xchg
sar
repnz
(bad)
and
dec
shl
sbb
add
cwde
xchg
mov
xor
or
dec
pushf
aas
or
repnz
push
xlat
add
lahf
stos
mov
cmp
add
jne
dec
fidiv
(bad)
daa
stos
fdivr
lods
retf
push
adc
pop
dec
xchg
or
cmp
push
inc
call
int3
cmp
add
mov
pusha
addr16
dec
lahf
pop
out
jg
push
out
or
(bad)
fld
adc
int3
mov
cmp
and
mov
lods
sbb
mov
(bad)
cli
in
push
stc
les
out
lods
pop
pop
test
fcmovnbe
imul
lahf
adc
inc
sub
dec
dec
or
loopne
dec
and
pushf
(bad)
gs
xlat
movs
(bad)
jl
pop
rcr
mov
(bad)
ja
fild
repnz
in
mov
cs
fist
aad
fdiv
add
or
cmp
jns
xchg
shl
ins
data16
retf
into
hlt
xchg
out
push
ficom
fimul
jno
pop
shr
and
jl
mov
xor
sbb
fidiv
jp
sbb
pushf
or
shl
mov
mov
or
ins
pushf
pop
test
dec
sbb
iret
sar
pop
dec
xor
int
jns
shr
dec
mov
dec
fisttp
pop
fsub
int
nop
add
xor
into
out
inc
xchg
out
add
loop
outs
and
cmp
sbb
sti
test
in
call
pop
sbb
mov
mov
push
cmc
jecxz
imul
inc
push
pushf
mov
lods
mov
retf
jmp
enter
adc
xchg
or
push
jecxz
adc
push
das
dec
sub
retf
jno
xor
and
aas
inc
or
mov
call
or
xchg
imul
mov
cmp
and
cs
icebp
fcom
hlt
cld
xchg
rol
inc
test
fist
mov
sti
or
add
push
sti
xchg
mov
(bad)
mov
xor
cmp
sub
cmp
sub
cld
mov
test
mov
sub
mov
sbb
icebp
xor
rcl
shr
and
iret
cmp
mov
into
mov
sub
add
xor
movs
push
das
and
and
aad
fs
out
add
rcr
sub
mov
test
pop
cmc
pusha
dec
mov
or
dec
mov
repnz
cmp
loop
scas
and
mov
fdivr
mov
retf
push
pop
test
mov
js
and
xchg
ss
mov
pushf
pop
loope
dec
movs
cmp
dec
and
xor
mov
ficomp
test
or
jmp
sbb
mov
or
ja
popf
sbb
pop
sub
push
push
pop
push
mov
imul
jl
xchg
movs
shl
retf
stos
jecxz
inc
lods
adc
inc
mov
outs
inc
test
or
fwait
pop
add
jl
xor
retf
inc
out
dec
jns
int3
loope
mov
jmp
pop
mul
rol
push
and
stos
mov
adc
inc
xor
sub
cwde
adc
xlat
push
or
mov
ror
repnz
aas
out
push
push
test
cmp
adc
pop
sub
or
ins
add
xor
popa
push
xor
stos
(bad)
adc
test
push
scas
dec
inc
jo
jae
daa
addr16
imul
pop
pop
or
fdiv
sub
loop
push
daa
in
les
inc
mov
in
push
stos
jl
(bad)
pop
sub
cmps
or
pusha
xchg
rcl
mov
loope
(bad)
dec
aam
xchg
push
ret
aad
js
inc
fisttp
jp
mov
add
jnp
mov
je
cmc
pusha
jbe
cmp
sub
pop
test
int3
cmp
aas
cmp
push
xchg
jns
test
in
pop
push
push
test
xchg
adc
orps
push
inc
mov
or
in
cmp
push
sbb
add
shr
jae
aam
jge
and
pop
adc
out
pushf
push
jmp
mov
dec
pop
sbb
mov
ret
pop
out
pop
dec
and
jg
sbb
sbb
ret
pop
mov
icebp
xor
push
jp
push
and
int
mov
push
pop
out
test
mov
adc
cmps
xstore-rng
cmps
inc
ja
inc
out
jns
mov
cmp
cmp
or
lldt
sbb
imul
aad
cmp
(bad)
jg
lds
movs
or
or
mov
fisttp
stc
repnz
fdiv
(bad)
jmp
jb
dec
je
icebp
add
adc
inc
dec
push
fwait
xchg
lods
sar
inc
sbb
jae
cmc
pop
jl
call
jp
jl
add
xchg
stc
sub
push
cwde
rol
sbb
pop
and
and
mov
mov
stos
mov
scas
jmp
cmp
cwde
cmp
ins
dec
mov
ss
or
mov
daa
ds
push
pop
leave
je
sbb
adc
dec
dec
push
jl
repnz
dec
cmps
(bad)
(bad)
lods
xor
xchg
sbb
push
shr
imul
xchg
mov
jb
inc
ret
mov
pop
jmp
bound
es
arpl
xor
dec
addr16
xor
sub
jne
ret
and
inc
shr
call
dec
and
cmps
mov
ss
add
cmp
ins
jne
rol
adc
ins
adc
mov
popf
not
mov
jp
outs
pop
push
fist
es
pop
jae
popf
mov
xor
sub
test
mov
inc
test
xchg
push
mov
cdq
retf
mov
jbe
(bad)
mov
mov
cmp
lds
mov
(bad)
(bad)
push
cli
or
or
add
sti
adc
sub
pop
ja
in
dec
inc
icebp
xchg
inc
xor
jnp
jo
dec
nop
pushf
mov
aaa
jne
outs
outs
les
pop
sbb
inc
xor
setno
adc
pop
mov
pop
outs
push
xchg
jns
cmp
retf
push
sub
or
mov
shl
add
retf
pushf
fcomp
lds
(bad)
mov
inc
mov
std
push
in
call
icebp
push
jg
fsubr
ja
in
int
in
call
xchg
adc
cmp
sbb
scas
leave
arpl
jecxz
fldcw
cmp
lock
jle
in
repnz
ss
cmp
test
pop
add
mov
xor
sub
xor
inc
jne
mov
dec
out
js
dec
sub
test
cmp
addr16
and
int3
and
sub
add
(bad)
inc
pop
ror
es
sub
movs
mov
push
mov
dec
ret
out
hlt
clc
dec
call
ins
addr16
mov
xchg
pop
(bad)
dec
mov
arpl
gs
push
cmp
sbb
jno
push
les
sbb
ret
mov
cld
ds
call
sbb
mov
daa
xchg
and
pop
(bad)
out
inc
gs
adc
add
enter
xor
test
int3
mov
sbb
pop
xchg
cs
pusha
cmps
test
jno
push
fild
jns
int3
pop
ds
mov
xor
adc
sbb
cmp
pop
sbb
sub
lock
add
in
and
mov
sub
xchg
setae
mov
(bad)
stc
addr16
fbld
sub
push
inc
add
push
outs
(bad)
(bad)
sbb
int
test
and
push
arpl
sahf
and
repnz
xlat
mov
sub
sbb
or
shl
rcr
push
pop
dec
inc
js
and
mov
imul
push
adc
nop
inc
stc
and
xchg
push
jns
dec
jmp
sub
or
pushf
les
(bad)
ror
pop
cmps
add
xor
or
js
data16
rcl
loopne
pop
pop
inc
outs
inc
(bad)
rcr
cld
stos
xchg
jns
push
add
pop
mov
mov
(bad)
cmc
outs
lea
cmc
loopne
fidiv
out
iret
dec
adc
cmp
pop
sbb
loop
dec
cmp
fldenv
xchg
pop
xchg
popf
dec
inc
jg
outs
clc
lods
mov
setl
test
out
ror
xchg
out
or
jb
inc
test
test
mov
pushf
and
loop
jnp
push
lea
(bad)
lock
jo
sahf
xor
xchg
mov
cld
sub
or
cmp
int
xor
xchg
dec
mov
in
daa
jbe
pop
cdq
js
fs
jmp
sub
ds
ss
shl
dec
stc
aas
imul
fild
out
dec
mov
test
mov
cld
addr16
leave
imul
sub
inc
fwait
push
xchg
mov
and
xor
push
mov
mov
(bad)
call
ror
jmp
test
xchg
iret
(bad)
mov
dec
cmps
loopne
adc
xchg
sbb
bnd
cmps
cmp
(bad)
fwait
outs
lods
mov
popf
push
jb
pop
pop
mov
arpl
xor
cmp
retf
xlat
add
ret
sbb
pop
xchg
sti
jae
shl
mov
div
and
xor
mov
popf
je
jns
pop
nop
push
push
out
inc
clc
cdq
sbb
jns
rcr
xor
sub
clc
jg
dec
aad
arpl
mov
mov
lahf
xor
popa
shl
(bad)
inc
jbe
mov
fwait
xchg
lods
and
je
xchg
(bad)
int
out
adc
mov
scas
xor
xchg
mov
xor
push
or
jmp
xor
mov
das
mov
mov
inc
jo
pop
mov
dec
add
into
sbb
xor
pop
xchg
ja
cs
inc
push
jbe
sbb
mov
push
push
cmp
inc
jl
jmp
sar
sbb
adc
inc
shl
sti
dec
out
pop
xchg
jl
sub
hlt
(bad)
popf
in
(bad)
mov
imul
mov
pusha
pop
shr
jnp
leave
sub
xchg
ds
test
cmp
retf
into
in
xchg
inc
cmps
xchg
fdivr
xchg
outs
mov
mov
mov
xor
int
jb
mov
mov
and
shl
push
or
loop
fdivr
fwait
shl
ja
jb
jge
push
xchg
mov
xor
test
icebp
gs
test
xor
outs
jb
arpl
mov
jno
jae
f2xm1
dec
mov
adc
add
mov
or
pop
jae
sar
push
in
mov
fwait
push
or
in
cmp
jmp
(bad)
out
xchg
pop
sub
cmp
bound
call
sahf
cwde
nop
aaa
sbb
or
out
in
jmp
repz
aad
into
jb
daa
cmc
mov
mov
mov
arpl
jno
fisttp
(bad)
push
or
or
xchg
js
and
neg
or
(bad)
data16
stc
xchg
xchg
adc
sbb
mov
js
jle
or
inc
pop
hlt
cdq
add
lahf
xor
js
fsubrp
nop
inc
imul
xchg
dec
sub
(bad)
jnp
jae
sar
xor
xchg
jns
popf
push
jmp
and
in
jns
nop
sub
add
les
sbb
data16
sahf
inc
or
pop
push
xchg
jmp
xor
pop
inc
int
out
ror
cmc
mov
push
push
inc
push
pushfw
adc
mov
out
xor
popa
fmul
push
fisub
or
mov
cmp
pop
(bad)
jo
cwde
mov
dec
fucomp
ja
stc
shr
xchg
fs
leave
ret
inc
pop
std
mov
and
mov
fdivrp
xchg
pushf
mov
inc
jle
push
and
pop
cmps
into
jecxz
shr
pop
sbb
imul
and
xchg
popf
loop
sub
daa
addr16
jno
test
push
jmp
pop
das
ss
and
mov
or
jbe
int3
or
jae
jb
loopne
out
(bad)
jecxz
mov
out
pusha
or
cmp
mov
mov
sbb
imul
inc
xchg
nop
inc
push
jecxz
push
and
cmp
dec
dec
pop
and
adc
js
mov
fwait
push
scas
std
mov
push
inc
mov
push
mov
adc
xchg
sub
aam
lods
clc
ss
fdivr
aam
mov
jmp
mov
xor
stc
gs
cmp
or
sub
pop
mov
in
adc
(bad)
pop
(bad)
dec
outs
xor
icebp
test
fcom
mov
inc
inc
add
les
xor
jp
cmps
shr
and
mov
fdiv
(bad)
(bad)
jmp
test
cmp
push
cmp
shr
add
xchg
jbe
arpl
xchg
test
or
es
aam
add
in
inc
xchg
xchg
into
nop
mov
xor
adc
add
pop
ds
adc
je
sub
and
xchg
mov
mov
xor
gs
jecxz
aaa
push
test
or
daa
sub
sbb
or
xor
jo
pop
sbb
lahf
ret
popa
out
mov
mov
add
icebp
cdq
mov
mov
push
outs
push
pop
fldenv
es
sub
mov
cmp
loopne
fisttp
lods
mov
enter
cmp
add
cmp
and
cmps
mov
inc
adc
cmp
inc
mov
aam
int3
(bad)
mov
rcr
loopne
aad
mov
aam
xor
(bad)
repnz
xchg
push
popa
inc
retf
mov
div
xchg
pop
adc
shr
xchg
mul
mov
or
jbe
cmp
loop
imul
mov
cmp
std
add
rcr
aad
stos
out
jns
mov
cld
xchg
das
mov
(bad)
ficomp
ds
cmps
sbb
mov
cmp
mov
push
stc
adc
push
jge
dec
call
xchg
ins
shr
push
dec
pop
xchg
inc
in
icebp
xchg
mov
and
popf
pop
sbb
icebp
cdq
xchg
cld
outs
sub
jno
fdiv
icebp
enter
cmp
xchg
mov
jecxz
xor
inc
inc
jge
xchg
or
mov
cmp
push
cmc
dec
push
and
pop
stos
call
retf
dec
adc
xor
rol
sub
xlat
fld
fcmovnb
inc
cmps
push
add
sbb
jmp
call
(bad)
hlt
inc
mov
xchg
call
lock
sti
xor
dec
push
inc
push
jb
dec
in
jecxz
mov
popa
retf
dec
xchg
lea
mov
add
jbe
aam
popf
in
adc
fsubrp
or
dec
pop
xchg
loopne
dec
int3
jg
hlt
nop
push
leave
push
adc
je
sbb
rol
push
push
dec
dec
xchg
gs
xor
test
dec
push
inc
sbb
inc
cmps
test
and
or
push
cmps
xchg
push
into
push
jle
mov
pop
lds
cmp
(bad)
and
adc
mov
add
pop
test
sub
movs
adc
add
push
lock
into
jae
popa
jns
dec
(bad)
jns
lahf
movs
jp
xchg
arpl
pop
movs
mov
jle
imul
mov
inc
jo
dec
shl
sbb
or
int
xchg
dec
pop
xchg
rcl
mov
dec
cmp
jmp
inc
xor
pop
jne
push
or
mov
rcl
fst
pop
cli
aam
and
mov
ret
inc
shl
xchg
inc
cmp
push
fist
push
sub
pushf
push
add
movs
mov
xlat
shl
xor
sbb
add
or
shrd
aas
call
lea
dec
add
push
pop
xchg
repz
inc
out
loop
nop
in
pushf
cs
fidivr
sub
mov
test
dec
adc
enter
push
sahf
pop
sbb
cmp
test
js
mov
mov
(bad)
fdivp
push
add
iret
push
cli
inc
sbb
mov
push
sub
or
fsub
pop
jmp
int
jg
mov
or
js
fcomp
gs
cmp
fld
fnstcw
mov
jns
cmp
cmps
(bad)
rcl
inc
fwait
add
add
pusha
pop
cli
inc
std
pop
or
(bad)
xchg
clc
sar
in
jno
pop
in
loop
call
mov
dec
mov
ret
jle
add
and
call
push
xchg
mov
jmp
push
loopne
adc
add
in
in
or
fsubrp
stos
dec
jnp
push
into
adc
clc
xchg
cmp
mov
or
fwait
xchg
sbb
int
popf
sub
das
cmp
jns
rol
rcr
pop
xchg
add
sbb
cwde
mov
or
stc
std
pop
jae
or
push
ret
and
mov
fwait
mul
sbb
or
mov
pop
xor
mov
nop
iret
fs
xchg
test
(bad)
in
or
ins
or
sbb
ret
adc
inc
ret
nop
mov
cmp
mov
loop
adc
sub
inc
je
sbb
xchg
mov
data16
inc
push
ss
pusha
cld
sub
inc
mov
shr
mov
fiadd
xor
add
(bad)
adc
xchg
sar
movs
fs
adc
popa
adc
xor
sbb
iret
pop
out
movs
xchg
pop
add
and
xchg
adc
inc
pop
shl
aaa
xchg
rcl
or
rol
sbb
scas
mov
movs
(bad)
stc
sbb
js
imul
dec
pop
pop
mov
sbb
rol
in
daa
or
and
arpl
mov
pop
in
mov
cmp
cwde
in
inc
cmps
xlat
iret
jae
pop
mov
jmp
xchg
jne
dec
sbb
shl
shr
add
mov
pop
call
and
out
jecxz
cld
jbe
es
mov
xchg
adc
mov
mov
xchg
addr16
and
test
cmp
add
cmp
aad
mov
fdivr
loope
mov
dec
movs
add
or
mov
cwde
icebp
xchg
cmp
int
adc
aas
and
repz
push
(bad)
into
mov
and
add
cli
and
mov
pop
pop
jo
cmps
cmp
mov
mov
add
fcomip
mov
add
sub
in
sub
pop
or
cmp
xor
pop
(bad)
or
xchg
mov
xor
add
in
dec
xchg
movd
dec
mov
and
push
pop
int
movs
xor
fucomi
ds
shl
rcr
in
and
out
test
sbb
retf
push
inc
cmp
rcr
dec
(bad)
cld
pop
leave
push
pop
xchg
cmp
fldcw
add
ds
imul
sbb
sbb
and
movs
sub
std
push
lds
in
inc
scas
sbb
mov
das
cdq
stos
dec
xlat
aas
and
mov
sbb
outs
rcr
xor
xchg
sub
xchg
lods
and
mov
sub
loop
jecxz
mov
pop
adc
inc
and
out
push
retf
mov
das
jb
ds
mov
inc
cmp
ret
scas
or
lods
dec
pop
lds
jecxz
or
ss
bound
test
push
or
js
or
les
stos
sbb
and
pop
push
pop
push
push
fild
push
or
je
retf
adc
adc
or
mov
es
aas
bound
out
mov
add
or
das
mov
mov
dec
inc
cmp
xlat
and
sbb
jg
test
into
adc
mov
sub
outs
arpl
imul
adc
out
mov
cld
hlt
arpl
mov
pop
sub
(bad)
popa
inc
sub
in
and
push
cmp
inc
rcl
xchg
adc
jecxz
repnz
dec
lds
mov
sub
test
test
inc
(bad)
outs
(bad)
fsubr
mov
mov
es
lods
ret
adc
add
ins
xor
jne
dec
and
scas
jo
inc
cmp
add
ins
sahf
pop
into
js
je
mov
dec
outs
and
into
inc
mov
lock
outs
push
sbb
sub
or
rcr
mov
in
dec
movs
jo
mov
xor
data16
mov
push
jnp
and
and
mov
movs
mov
sbb
and
inc
mov
pop
sub
jne
outs
mov
mov
push
cwde
lock
adc
out
popf
mov
inc
sbb
movs
je
push
push
ds
sbb
lock
pop
mov
lods
(bad)
call
imul
dec
or
test
add
mov
faddp
test
mov
add
scas
arpl
mov
leave
push
sub
xchg
shl
mov
add
push
inc
xchg
mov
rol
jnp
int
loop
mov
jmp
push
scas
int
out
and
cmp
sub
sub
(bad)
jno
scas
stc
dec
out
daa
adc
leave
je
pop
sbb
les
inc
cli
xor
rol
and
mov
in
sub
inc
xchg
iret
in
or
mov
push
jge
inc
mov
mov
js
leave
cmps
ja
das
jp
add
jmp
pop
bound
mov
mul
loope
iret
(bad)
iret
cmp
arpl
fsubp
out
xchg
jne
pop
push
cdq
cmp
scas
(bad)
call
mov
ins
(bad)
daa
add
mov
pop
in
hlt
and
sub
adc
mov
jmp
fadd
pusha
xor
lahf
or
cmp
and
inc
ror
jecxz
pop
push
inc
das
xchg
ret
adc
inc
dec
daa
cmp
mov
jmp
pop
popf
popf
lea
or
fcom
jne
pusha
mov
sbb
clc
cmp
dec
stc
popa
dec
mov
(bad)
sbb
adc
jns
sbb
test
mov
pushaw
in
mov
stos
and
jecxz
fnstenv
and
xor
out
imul
gs
push
mov
ret
imul
(bad)
dec
pop
inc
xchg
cmps
call
je
jo
aad
into
imul
ror
dec
push
or
shl
push
jmp
xor
pop
into
push
or
mov
sub
and
jmp
mov
pop
inc
iret
adc
xchg
jmp
daa
inc
bound
or
stos
loop
and
add
push
and
push
in
mov
push
loop
mov
mov
ss
pop
lods
out
ret
fisttp
das
mov
das
jmp
out
js
xlat
scas
jne
cli
imul
sahf
pop
pushf
loope
neg
and
icebp
jo
out
rcl
and
and
lods
aaa
sub
mov
mov
pop
add
sbb
pusha
and
inc
sbb
aaa
test
lds
adc
stc
or
scas
pop
in
push
fistp
jge
xchg
add
mov
in
jbe
dec
or
dec
jno
mov
add
(bad)
push
jno
pushf
clc
data16
push
jo
pop
push
ss
push
stos
jae
aas
or
inc
cmp
dec
or
add
std
and
(bad)
cmps
stos
shl
pop
retf
cld
fcmovb
rol
cmp
mov
mov
mov
js
xor
push
fstp
and
cmps
inc
int
xchg
jg
pop
adc
cwde
es
pop
mov
mul
pop
jmp
or
js
sub
lods
adc
mov
pop
dec
fisub
sti
push
repz
lock
adc
mov
cmp
add
nop
xchg
in
aas
pop
mov
nop
movs
xor
imul
push
mov
sub
icebp
or
retf
jecxz
pushf
jl
or
sbb
mov
dec
pop
push
(bad)
loopne
ror
es
xor
out
jne
out
xlat
push
lds
lods
fs
fs
jecxz
inc
inc
ret
sub
push
mov
repnz
xor
adc
mov
mov
mov
adc
arpl
jae
dec
aam
mov
add
push
scas
pop
mov
data16
mov
not
mov
push
aam
mov
pop
jne
pop
in
dec
pushf
xor
pop
cmp
mov
cmp
loopne
add
out
dec
cmp
stos
pop
and
fidivr
cmps
mov
jmp
jmp
fadd
dec
movhlps
fdiv
fs
nop
(bad)
(bad)
neg
lock
jp
imul
shl
xchg
mov
int
test
jno
dec
mov
inc
adc
cmp
cmps
(bad)
sub
pop
idiv
es
jno
xchg
mov
push
mov
out
mov
add
xor
push
mov
add
lods
(bad)
xchg
cmp
in
adc
sbb
sbb
and
sbb
lds
shr
or
push
cmp
mov
mov
push
scas
xor
shl
xor
(bad)
mov
imul
sbb
pop
cmp
sbb
popa
(bad)
or
mov
xlat
je
neg
(bad)
js
rol
xchg
fdivr
fdiv
in
pop
mov
in
popa
icebp
fisub
in
or
pop
retf
int
shr
push
rcl
xor
in
shl
inc
cmp
and
xchg
outs
fcomip
and
je
imul
pop
popa
out
scas
test
mov
ins
test
in
mov
dec
mov
sbb
repz
gs
and
add
push
cmps
mov
pusha
call
adc
and
imul
add
(bad)
jae
sti
push
dec
mov
dec
dec
push
xchg
add
mov
mov
retf
push
sbb
push
in
or
sub
xchg
scas
cdq
imul
ins
sub
aad
sbb
add
push
jnp
inc
mov
push
addr16
icebp
jb
lahf
xor
pop
leave
aas
xor
daa
mov
stc
aaa
addr16
sub
xor
push
mov
or
data16
mov
loop
xor
or
cdq
mov
sub
xor
into
push
and
std
sub
or
add
adc
stos
xlat
cdq
es
popa
pop
mov
fwait
stos
clc
stos
or
adc
xor
mov
call
cs
aad
adc
jg
sbb
daa
mov
mov
aam
mov
cli
add
mov
or
aas
push
and
call
cli
(bad)
sub
out
sar
fnsave
pushf
xchg
dec
iret
pop
out
cwde
sbb
push
sbb
push
lods
cmp
pop
sbb
push
enter
(bad)
sub
mov
pop
hlt
jp
jmp
pusha
mov
mov
in
dec
mov
and
enter
ficom
cmp
xor
scas
leave
frstor
sbb
neg
add
leave
retf
ret
lock
test
and
jmp
retf
xchg
jno
adc
cmps
pop
add
loope
sbb
aad
aaa
enter
cmp
enter
push
in
(bad)
mov
(bad)
mov
sub
xor
jp
pop
sub
aaa
jmp
adc
jmp
dec
or
cmps
sub
mov
push
ret
leave
ja
or
(bad)
data16
das
add
lea
and
mov
push
jbe
xchg
in
ss
je
mov
ret
xchg
pop
mov
jmp
stc
and
inc
enter
ror
ins
arpl
push
mov
pop
xchg
inc
add
or
daa
jno
sbb
lds
(bad)
fidiv
fnstcw
mov
pop
ins
sbb
cmp
push
stos
sub
pop
(bad)
fistp
cmp
add
sbb
xchg
dec
add
out
outs
pushf
pop
add
es
je
inc
das
cmps
fstp
cmps
enter
sbb
daa
(bad)
pop
sub
out
mov
mov
imul
pusha
jb
fst
push
mov
clc
mov
pusha
das
(bad)
mov
or
push
loop
xor
scas
pop
sub
push
jmp
push
gs
in
fist
add
les
es
je
or
dec
ja
lods
popa
sti
mov
gs
js
push
adc
aaa
dec
fcmovnb
dec
pop
push
sahf
(bad)
jmp
xchg
push
cs
fadd
cmps
ss
in
jmp
pop
push
push
mov
data16
out
sbb
sub
shl
stos
add
jl
in
inc
call
inc
les
lock
xchg
or
sub
in
push
sub
sub
cmc
test
mov
clc
mov
out
or
xor
addr16
jecxz
sti
lahf
mov
(bad)
mov
pop
mov
cmp
sar
cmp
xchg
int3
loope
or
xchg
add
mov
int3
popf
inc
rol
js
cmp
or
fld
test
xor
xchg
jns
sub
fwait
mov
ins
or
jp
fs
jbe
ret
push
adc
push
ss
inc
in
and
add
jmp
ficomp
mov
rcl
nop
retf
inc
mov
cmc
test
adc
dec
push
xor
adc
pusha
in
jae
or
aad
adc
fbstp
pusha
sbb
or
sbb
jae
pop
test
mov
std
inc
ret
mov
test
cmc
pop
jnp
lock
pusha
fnsave
nop
lahf
pop
adc
jg
(bad)
and
or
mov
mov
mov
es
aad
out
and
xchg
mov
daa
dec
scas
sbb
rcr
mov
aaa
xor
jg
ins
neg
jg
xchg
inc
add
(bad)
sub
push
cmp
dec
lahf
dec
cmps
stos
pop
cmp
clc
mov
jge
retf
hlt
leave
jge
jmp
inc
loop
call
sahf
push
push
arpl
mov
inc
inc
scas
fstp
je
cmp
idiv
(bad)
(bad)
xchg
push
dec
mul
movs
imul
stos
mov
outs
pop
push
in
mov
out
or
add
dec
pop
dec
int
iret
outs
fnstcw
not
into
or
cmp
xchg
xchg
inc
ins
cdq
ds
pop
or
and
(bad)
(bad)
sub
nop
in
xchg
mov
mov
xchg
jno
repz
lock
ds
push
push
mov
push
inc
pop
push
jecxz
jecxz
mov
loop
cmp
fcomp
xchg
aas
mov
mov
inc
mov
push
or
ret
xchg
shl
adc
adc
(bad)
adc
enter
call
pop
add
sti
movs
push
jg
mul
out
cmps
out
sbb
outs
mov
pop
jnp
jne
jno
fmul
push
xchg
jg
jge
fisttp
ja
mov
mov
lahf
adc
xchg
jecxz
retf
in
pop
dec
jbe
fiadd
xor
adc
adc
out
mov
imul
fst
shl
mov
fs
jns
inc
sub
sbb
sbb
or
or
sbb
or
daa
dec
aad
addr16
xchg
fisub
mov
(bad)
fsub
mov
int3
adc
ja
test
sbb
aad
mov
adc
xor
enter
jecxz
ror
or
dec
shl
fs
test
xchg
fimul
leave
jmp
push
jmp
mov
aas
jmp
neg
ja
fs
retf
sub
cmps
in
es
scas
movs
punpcklbw
inc
clc
cmp
out
xchg
fstp
inc
inc
cmp
enter
fild
push
push
pop
pop
das
std
xchg
xor
mov
xchg
and
jmp
fild
mov
pusha
xchg
sbb
retf
shl
mov
or
fwait
jle
mov
mov
xor
test
(bad)
sbb
movs
repnz
mov
call
mov
js
inc
das
cs
mov
jbe
sub
mov
es
inc
(bad)
mov
je
sbb
aaa
leave
or
repz
repz
adc
mov
div
daa
daa
mov
mov
push
das
ja
adc
imul
inc
out
mov
mov
mov
push
xchg
adc
leave
les
sub
mov
daa
mov
adc
push
cmp
mov
and
cmp
push
push
fsub
sub
mov
ins
inc
movs
fnsave
pop
lods
in
pop
xor
sbb
cwde
jmp
xchg
in
mov
mov
(bad)
sahf
adc
xchg
leave
or
xchg
mov
je
iret
or
ss
clc
mov
movs
adc
and
aas
rol
ss
mov
mov
lahf
mov
mov
jmp
sub
push
aaa
jb
add
popa
test
pop
ds
or
repnz
xchg
jg
mov
pop
call
test
mov
xor
pop
sub
aaa
adc
mov
xchg
mov
std
ret
retf
inc
push
je
in
jb
aam
cmp
jge
lds
arpl
sub
jp
mov
in
in
icebp
(bad)
aad
mov
mov
inc
adc
hlt
cmps
movs
stc
jno
neg
(bad)
inc
and
pop
jae
(bad)
sub
(bad)
pop
jbe
scas
popa
stos
push
ffree
loop
adc
cmp
sbb
jl
or
mov
jno
(bad)
call
fiadd
nop
jnp
stc
dec
mov
jle
movs
in
sub
and
xor
inc
stos
stc
push
jp
mov
stc
cs
and
mov
jge
aam
pop
mov
ret
scas
data16
jl
out
jns
xor
pusha
test
enter
mov
addr16
clc
mov
daa
loopne
mov
lock
popf
xor
cmp
into
in
mov
add
test
sti
cmc
jl
adc
cld
ret
call
sahf
mov
push
stc
outs
lahf
sti
daa
pop
xchg
jmp
cmp
gs
out
sub
push
pop
leavew
jbe
add
dec
inc
rcr
ins
or
and
bnd
add
jg
(bad)
stc
es
cmp
push
and
add
mov
loope
xchg
xchg
pop
ins
mov
fsubr
xchg
ins
jmp
(bad)
das
xlat
mov
int
test
sti
and
inc
push
mov
push
cmps
mov
iret
repnz
and
pop
cmp
iret
cld
cmps
cmp
inc
mov
test
arpl
or
pop
cwde
in
xor
shl
test
lea
xor
mov
movs
sbb
mov
jo
mov
mov
out
mov
push
test
xor
xchg
lea
push
daa
fbld
dec
and
(bad)
in
mov
xor
fs
cmps
out
seta
retf
aaa
call
call
aam
icebp
jae
add
xchg
jno
pop
fsub
enter
dec
or
inc
iret
lahf
sahf
mov
push
aas
and
or
lock
out
sub
pop
ret
addr16
lahf
in
xlat
mov
cmp
je
pop
mul
push
cmp
fs
sbb
out
jg
outs
jmp
std
mov
inc
cmp
inc
sub
out
loopne
jmp
add
lock
cdq
test
jno
push
dec
mov
pusha
imul
int
xlat
xchg
punpcklbw
pushf
mov
xor
fcomip
pop
nop
stc
push
mov
(bad)
mov
icebp
xchg
and
ss
ins
and
stos
xchg
stc
pop
inc
inc
push
inc
inc
mov
mov
sbb
daa
int
mov
ja
push
cmc
jge
mov
cmc
adc
sti
leave
sbb
fwait
lea
or
(bad)
xor
xchg
dec
pop
data16
push
lds
push
jo
aad
lock
mov
out
rcl
and
test
daa
movs
sbb
xchg
cmp
mov
popa
scas
mov
pop
sub
jmp
loope
enter
cmp
pop
dec
lods
mov
aam
je
mov
neg
int3
sub
mov
pop
pop
mov
pop
sbb
iret
aad
cmp
push
pop
or
mov
aas
les
ins
push
or
fcmovnbe
mov
mov
xor
out
pop
test
and
pop
and
ret
mov
in
jb
xchg
je
mov
pop
out
enter
lea
add
cdq
mov
xchg
inc
out
pop
cli
imul
or
jl
dec
add
or
add
std
inc
cld
stos
adc
ret
fcom
mov
sub
fisubr
in
xchg
adc
xlat
fimul
dec
sub
test
mov
lock
add
(bad)
(bad)
sar
sbb
ins
call
daa
sub
jbe
inc
xchg
test
push
push
in
cwde
cmp
std
cwde
xor
xchg
dec
or
mov
das
aas
push
push
sbb
adc
dec
jae
in
mov
and
inc
sahf
adc
mov
in
loop
bound
mov
jmp
(bad)
call
sub
mov
jp
movs
xor
retf
cld
in
mov
arpl
in
or
shl
add
aad
xor
imul
mov
icebp
push
mov
into
imul
adc
mov
pop
imul
push
fisttp
rol
adc
shl
and
mov
lahf
fcmovb
mov
add
or
or
lea
xlat
sar
sbb
push
dec
push
(bad)
lahf
jo
aad
ds
push
ins
ins
mov
add
clc
dec
movs
cmp
xchg
outs
hlt
jmp
in
loopne
pop
mov
sub
es
call
cmove
int3
aam
jmp
push
xchg
pcmpgtb
dec
and
leave
gs
lods
loop
sub
aad
(bad)
xchg
or
adc
cmp
(bad)
rcl
inc
xor
jl
movs
pop
jne
shl
or
dec
adc
push
or
mov
pop
sub
daa
mov
add
cmp
xchg
dec
out
pop
cmp
out
fsub
jmp
pop
dec
cli
sub
bound
fldcw
mov
sub
and
or
cmp
add
fidiv
es
(bad)
cmp
add
dec
jg
inc
popa
mov
add
out
mov
in
push
data16
push
mov
jecxz
jmp
scas
jecxz
loop
shr
pop
adc
sbb
test
imul
popa
je
sbb
aam
adc
addr16
cmp
sbb
push
mov
jmp
es
jns
stos
(bad)
xchg
sahf
xchg
(bad)
mov
add
pop
imul
je
mov
dec
xchg
leave
pushf
jge
xchg
xor
jnp
leave
xlat
loopne
and
mov
cmp
xchg
popa
mov
adc
and
jmp
push
xchg
mov
(bad)
sar
mov
cmc
ss
js
not
xchg
push
jns
inc
sti
push
jl
retf
mov
sbb
cmp
cwde
xchg
push
sbb
inc
push
cmp
add
test
xchg
arpl
pop
mov
inc
adc
imul
mov
sbb
mov
xor
dec
test
cmp
push
(bad)
dec
mov
xor
or
gs
ror
out
clc
ins
mov
aam
pusha
mov
rcl
nop
and
sub
mov
aaa
xchg
jnp
mov
addr16
and
fsub
pop
popa
(bad)
aad
rcl
sub
xor
int3
ja
xor
mov
jmp
fbld
repz
jns
aas
pop
xor
push
add
ret
imul
(bad)
imul
fild
and
lea
jo
loopne
sahf
or
stos
xchg
xchg
sbb
stos
xchg
cmps
cmp
cmp
add
and
cmp
push
jno
cmps
adc
jg
inc
push
or
aas
mov
fidivr
popa
out
imul
sub
pop
and
ror
mov
and
mov
cs
pop
gs
(bad)
adc
inc
lods
sbb
stos
fnsave
xchg
jmp
mov
lods
stos
test
sub
(bad)
xor
movs
dec
push
aam
cmc
add
outs
jno
sbb
or
(bad)
adc
mov
mov
loope
jnp
shl
push
pusha
ja
scas
jnp
out
movs
(bad)
sub
mov
xchg
into
push
lock
dec
loopne
inc
ins
push
inc
hlt
and
fnstcw
mov
dec
cmp
push
(bad)
and
movs
popf
mov
sub
mov
fcomp
mov
mov
adc
xor
loope
fist
dec
rcr
repz
pop
and
push
inc
pop
std
cli
push
and
gs
pushf
adc
push
mov
mov
or
cmp
push
inc
push
aaa
es
arpl
sub
mov
inc
push
push
cmps
dec
fisttp
dec
ror
xchg
shl
movs
cmp
test
or
cmp
cmps
xchg
sar
add
das
das
mov
mov
cld
pushf
sbb
cmp
add
sub
jns
cmp
mov
(bad)
loopne
or
iret
std
pushf
inc
out
inc
push
cli
sbb
sbb
inc
sbb
(bad)
adc
cmp
lahf
xor
cmp
sub
mov
pop
mov
sti
adc
cmps
add
jae
call
ins
inc
mov
pop
repnz
dec
lods
mov
outs
inc
sub
or
push
dec
pop
ror
pop
push
xor
cmps
aam
xor
push
mov
add
mov
fnsave
add
jno
test
dec
es
sbb
lock
pop
into
mov
adc
xchg
pop
mov
mov
jmp
popf
fsubr
aam
cmps
xchg
int
repnz
aam
fnstsw
in
fs
add
pop
sub
into
aam
inc
jmp
aaa
and
or
pop
movs
sar
xor
in
cwde
sub
out
movs
aam
pop
mov
ja
pop
dec
sbb
jb
push
(bad)
loopne
lock
add
loopne
mov
push
(bad)
dec
hlt
or
inc
into
es
popf
ret
xor
iret
add
xchg
mov
pop
jo
sbb
nop
clc
movs
cmp
cmp
loopne
into
jmp
stc
not
mov
stos
jp
imul
cmp
add
pop
outs
or
adc
mov
jb
or
sahf
ss
mov
sub
mov
iret
sub
ror
xchg
dec
movs
inc
sbb
sub
popa
xor
inc
mov
jns
lods
push
cwde
js
jno
pop
aas
sbb
push
(bad)
mov
mov
mov
scas
mov
ss
push
int3
ja
dec
aaa
dec
(bad)
dec
mov
pop
mov
xchg
xchg
inc
cmps
jns
ds
fwait
or
xor
fwait
rcl
push
push
cs
mov
int3
(bad)
stos
pop
and
xlat
mov
and
sub
sbb
jbe
fidivr
inc
rcr
sbb
int
in
and
xchg
loopne
fwait
pop
out
sub
fisttp
movs
enter
sub
add
cmp
jmp
out
xor
or
js
cmp
jb
shl
add
js
(bad)
fnstsw
jl
xor
inc
pushf
mov
out
cs
fdiv
inc
sub
call
repz
push
push
scas
repz
popa
jp
mov
jnp
loope
or
lahf
outs
popa
jmp
nop
xchg
addr16
lock
ins
xchg
xlat
aad
jns
stc
ret
ss
mov
pop
push
popa
pusha
sbb
jae
in
std
mov
outs
out
push
hlt
mov
sbb
jbe
lds
mov
fnsave
sub
hlt
mov
mov
mov
daa
loop
loope
retf
(bad)
fsubr
mov
push
popa
les
test
cld
sar
mov
xor
fwait
outs
jge
je
sub
repz
imul
adc
fcom
mov
pop
lods
call
sub
sub
inc
and
(bad)
mov
adc
retf
fdivr
push
pop
mov
mov
mov
popf
into
ss
gs
prefetch
or
fnclex
mov
int
test
pop
cmps
mov
std
pop
fimul
jbe
stos
pop
jmp
mov
fwait
push
sub
shl
mov
repz
xchg
loope
dec
aaa
(bad)
mov
(bad)
in
clc
fs
sahf
pop
pcmpeqw
call
movs
jp
push
movs
iret
mov
add
cmp
daa
fucom
cs
lahf
or
xchg
rcr
pop
js
lods
sub
and
repz
cmp
xor
jecxz
pop
inc
cmp
sub
push
sti
push
push
sbb
jae
or
scas
xor
mov
push
aam
add
ror
imul
push
sbb
aas
lods
in
jb
jp
sub
daa
shr
outs
fmul
pop
loope
out
jns
shl
lods
push
jg
and
bnd
fst
mov
ins
test
or
sub
jcxz
push
xchg
es
cmp
dec
fisttp
mov
add
pop
jb
mov
sub
mov
loopne
cmp
sbb
jbe
aad
sub
les
add
jp
fucomp
xor
clc
addr16
aaa
add
pop
in
cli
inc
sahf
hlt
push
(bad)
gs
xor
push
ins
lea
cmp
dec
or
in
push
retf
fisubr
mov
xor
outs
ins
jge
loop
jge
in
add
sbb
add
inc
cmp
repnz
push
sub
xor
inc
data16
and
xchg
ja
add
mov
icebp
cmp
stos
out
int3
push
pop
outs
mov
inc
push
mov
hlt
dec
mov
jmp
xor
jb
stos
adc
vsubss
push
inc
(bad)
shl
jbe
dec
fadd
outs
xchg
xor
sub
loopne
dec
and
scas
ja
dec
stc
push
or
retf
pop
iret
(bad)
retf
cld
cwde
jne
test
enter
dec
jp
sbb
push
adc
or
push
jg
inc
fst
xor
xor
and
pop
xor
cmp
add
pop
xchg
mov
stos
push
aas
xchg
push
jl
jnp
(bad)
(bad)
dec
mov
inc
out
inc
push
sar
int3
jo
mov
pop
shr
sub
retf
inc
fiadd
das
sub
dec
jo
in
or
push
imul
push
loopne
leave
pop
jae
pop
or
xor
aad
lds
push
jle
fnstcw
test
mov
ret
lds
pop
cld
cmp
iret
mov
add
jne
dec
int
pop
sub
int
push
mov
test
xor
push
mov
and
sar
jnp
pop
cmp
push
lahf
lea
adc
dec
add
xchg
test
out
xor
sub
cs
int3
pop
mov
rcr
aam
sbb
daa
adc
sti
pop
sbb
sub
icebp
sub
jmp
sbb
mov
test
xlat
dec
add
mov
loope
jb
not
push
add
sbb
push
scas
xor
pushf
push
aaa
push
pop
mov
inc
push
stos
push
xlat
adc
and
pop
fsubr
cmp
outs
stos
inc
and
sahf
pop
xchg
push
mov
jecxz
push
je
sbb
inc
fist
sbb
loopne
repnz
daa
(bad)
not
repnz
scas
mov
enter
xor
ror
shl
cmps
mov
fsub
out
ins
push
dec
(bad)
enter
iret
ret
dec
adc
pop
sub
neg
jp
xor
xor
dec
mov
ret
xchg
pusha
movs
les
iret
fiadd
jecxz
sub
fisub
ds
jge
lods
iret
std
out
mov
push
push
fwait
lahf
jae
sub
sbb
ret
inc
loop
sub
pop
add
fistp
rcl
in
loope
lahf
or
mov
pop
fst
inc
mov
loopne
fwait
xor
mov
aaa
mov
lea
repnz
fwait
pop
outs
mov
lock
adc
out
pop
pushf
pushf
mov
xchg
call
dec
push
adc
jmp
pop
sbb
push
jmp
mov
push
mov
xchg
cs
sub
jns
xchg
xchg
mov
xor
add
mov
jg
daa
push
test
out
pop
xor
xor
add
fwait
push
cmp
mov
xchg
pop
jmp
pop
mov
sbb
jg
add
mov
mov
xor
rcl
adc
(bad)
or
xor
out
cdq
xor
cmp
mov
fidiv
fmul
pop
sbb
fcomi
jne
xchg
test
and
lods
mov
fsub
int3
add
mov
shl
jns
sub
xchg
pop
jae
pop
and
sub
mov
jmp
pusha
addr16
or
dec
hlt
and
add
pop
xchg
add
(bad)
or
jl
cmps
lds
pop
shl
cmp
push
cli
test
aad
add
push
push
sbb
pusha
mov
mov
clc
fldz
lods
inc
push
aad
sbb
inc
mov
mov
pop
leave
stos
jp
test
lods
scas
push
movs
push
inc
adc
stc
mov
lds
cmp
jne
stos
fild
inc
and
pop
fwait
fs
pop
int3
not
lahf
fisub
hlt
xor
cmc
lock
fld
clc
sbb
rol
cmp
dec
add
add
mov
adc
xchg
cmps
jnp
shl
or
adc
lods
mov
and
cmp
cmp
xor
xor
pop
imul
fsub
fstp
pop
jp
jns
and
inc
(bad)
xchg
das
add
adc
fisttp
sbb
movs
xor
in
push
xor
pop
outs
mov
pop
iret
out
adc
lods
cmp
iret
xor
hlt
fiadd
push
or
scas
jecxz
fldcw
mov
mov
sub
out
lods
in
add
jl
jo
mov
stos
xlat
rol
pop
push
scas
dec
cmp
mov
jbe
mov
mov
into
adc
mov
jo
inc
into
cdq
push
add
push
adc
(bad)
bswap
inc
(bad)
scas
mov
loope
(bad)
add
lock
cmp
pop
sub
cmp
pop
jne
cld
adc
lock
cmp
int
and
or
imul
arpl
jno
sub
mov
xor
inc
add
int
loop
cmp
retf
xor
cmps
pop
addr16
ficomp
jns
mov
xchg
lods
mov
int3
cld
out
dec
and
push
sub
or
call
mov
fdivr
mov
and
lahf
daa
pop
xor
mov
and
mov
outs
out
add
mov
loope
or
(bad)
jmp
jmp
in
out
inc
cdq
arpl
aaa
repz
cld
pop
pop
sub
pop
adc
icebp
stos
push
jne
adc
and
sub
pop
and
sub
(bad)
cmc
dec
and
pop
inc
dec
sub
lods
jg
pop
(bad)
rol
push
sahf
add
jns
stos
jecxz
xchg
cmp
pop
dec
push
push
popa
mov
cmp
fst
bound
cmps
mov
in
rcr
cld
mov
loopne
jnp
sbb
ror
jmp
movs
add
mov
sub
pop
(bad)
imul
loope
bound
push
xchg
or
cmp
sbb
arpl
mov
pop
push
pop
xchg
imul
js
cmp
into
xchg
jl
stos
push
xor
mov
fnstsw
cmps
out
inc
or
dec
push
push
adc
std
mov
mov
shl
sbb
adc
(bad)
push
(bad)
pop
mov
push
dec
stos
lock
icebp
cmp
lods
sbb
aad
inc
and
les
or
das
int3
pop
and
mov
hlt
cmps
fs
sub
add
out
add
cmp
and
lds
retf
sub
fwait
(bad)
pop
mov
loope
lods
xchg
lds
pop
push
jns
push
xchg
aam
dec
inc
mov
mov
inc
ret
ret
iret
nop
je
jbe
pop
and
jae
pop
jle
push
popa
sbb
and
xor
cli
aas
(bad)
test
imul
push
cmps
int
mov
out
leave
out
sub
clc
fs
inc
push
repz
loope
ins
jbe
popa
pop
retf
shl
pop
cmp
(bad)
(bad)
ins
addr16
shl
call
xchg
jmp
call
cvtps2pi
push
scas
loopne
xchg
cmps
out
xor
mov
add
cmc
(bad)
push
retf
push
adc
jg
js
out
cmp
fdivrp
bound
ret
(bad)
in
(bad)
shl
es
sub
daa
add
bound
jp
jnp
mov
xor
add
mov
ror
cmp
lock
add
push
cmp
inc
lea
or
and
push
imul
or
es
mov
push
jecxz
inc
pop
out
push
in
fs
or
jg
jl
out
inc
pop
cmp
cli
sbb
icebp
add
popa
xor
test
mov
pop
arpl
push
inc
in
pop
ss
sbb
cmp
inc
retf
pop
or
mov
pushf
xchg
ins
mov
adc
in
xchg
out
outs
cdq
(bad)
xor
jbe
or
std
out
lods
icebp
xchg
stos
out
add
cmpxchg
mov
inc
push
push
out
mov
or
jle
movs
ror
adc
loope
pushf
test
ss
lahf
cmp
jns
cmps
pop
mov
mov
jg
and
xchg
push
outs
or
sub
sahf
add
ror
(bad)
scas
ins
std
inc
es
mov
imul
jne
ficom
iret
sub
pop
sbb
ret
add
mov
dec
cs
mov
popf
in
not
inc
movs
and
sub
sub
push
lods
mov
icebp
fcom
push
retf
repnz
cmp
cmp
add
aad
test
nop
pop
test
inc
lds
fadd
fs
mov
mov
adc
data16
mov
pop
adc
in
jp
mov
std
or
sub
push
cmc
push
out
mov
inc
stos
(bad)
mov
retf
adc
imul
aad
xlat
mov
jo
mov
cmp
ins
mov
pop
cwde
retf
jp
or
pop
sub
cwde
adc
jb
xchg
and
dec
sbb
push
fimul
xchg
sbb
nop
jo
mov
mov
sbb
sbb
mov
jns
pop
add
int3
xlat
inc
dec
and
mov
sti
push
inc
outs
lahf
push
js
xchg
mov
lea
fbstp
sub
sbb
mov
push
out
cmp
and
jnp
(bad)
jmp
imul
add
shl
xchg
adc
push
jmp
nop
test
jge
lods
test
inc
test
mov
hlt
mov
xor
xchg
scas
dec
mov
jb
adc
adc
cli
jmp
ins
imul
(bad)
adc
push
push
adc
pop
sub
mov
add
mov
imul
pop
std
push
dec
je
ins
xchg
sbb
jp
imul
retf
lods
cmp
jmp
sbb
repnz
test
jecxz
addr16
push
mov
popf
in
icebp
xchg
add
xlat
push
inc
sub
mov
or
lea
dec
xor
aaa
and
or
ins
stos
inc
fdiv
fnsave
add
pop
imul
pop
push
push
clc
xor
inc
mov
ins
retf
pop
mov
jg
stos
std
pusha
daa
jecxz
lahf
js
stos
cwde
mov
call
dec
pop
dec
sar
(bad)
sahf
call
dec
xchg
adc
dec
fnsave
and
loope
xchg
add
cmp
push
loopne
or
out
in
fsub
ss
ins
mov
add
xor
cmp
popf
or
mov
retf
cld
xchg
add
jge
cmp
icebp
popw
pop
pop
push
or
adc
adc
cmp
scas
dec
jo
fcom
inc
adc
push
inc
jge
add
sbb
push
xor
dec
mov
call
fs
inc
xor
inc
and
mov
rcl
jge
mov
xchg
lahf
inc
popf
push
xchg
push
jge
jnp
mov
popa
push
adc
hlt
add
out
pop
push
mov
jge
imul
adc
rol
sar
ds
cld
and
in
and
sbb
mov
hlt
xor
fidivr
xlat
fwait
mov
loop
sbb
ret
cmp
jae
dec
mov
test
loopne
push
retf
test
mov
mov
xchg
icebp
test
xchg
sbb
mov
mov
sbb
lahf
mov
push
push
sbb
mov
lods
mov
(bad)
sbb
les
in
xchg
rol
jge
data16
add
xchg
sub
gs
pop
sub
lods
ret
(bad)
ret
adc
daa
adc
fild
mov
icebp
data16
repnz
clc
mov
(bad)
push
setae
sub
out
and
scas
mov
mov
out
push
xor
sub
cmp
(bad)
xor
and
cmps
push
sub
scas
aad
test
retf
sub
jb
fwait
or
call
mov
mov
scas
pop
aaa
retf
jno
mov
cdq
xor
call
mov
fs
stc
push
cmp
jbe
sbb
inc
outs
or
inc
add
or
ins
(bad)
clc
jno
mov
scas
jp
jno
mov
out
and
outs
outs
mov
cdq
cmps
mov
jo
mov
lods
pop
icebp
mov
ja
mov
arpl
(bad)
xor
pusha
dec
aad
push
dec
ins
inc
xor
rcr
pop
addr16
mov
movs
mov
test
add
neg
in
outs
lock
test
sub
icebp
jle
sbb
nop
mov
sbb
ins
nop
sub
jmp
cs
(bad)
shr
in
pop
mov
aad
pusha
pop
mov
je
rol
aam
lods
pop
in
pop
cmc
or
or
neg
inc
pop
cdq
mov
test
xor
leave
mov
jmp
mov
out
fisubr
jmp
xchg
test
adc
pop
mov
fstp
cmovs
int3
xor
sub
frstor
pop
jnp
shl
sbb
rcr
mov
mov
xchg
fdivr
retf
outs
cld
mov
jno
stc
aaa
add
mov
into
inc
jno
mov
mov
mov
push
int3
call
xor
(bad)
enter
adc
and
sbb
dec
jnp
(bad)
into
inc
pop
jecxz
ins
add
pop
mov
loop
lock
sub
retf
xchg
outs
iret
sub
pop
mov
dec
xchg
mov
and
xchg
xor
lock
dec
push
xor
aas
popa
aaa
out
arpl
pop
adc
xor
pop
in
lock
js
shl
xor
mov
cli
dec
fs
sub
or
push
push
cmp
mov
imul
gs
jle
arpl
dec
jbe
ins
push
inc
push
mov
iret
xor
jne
rcr
daa
add
pop
mov
xor
cli
sbb
jne
retf
add
add
sub
sub
lds
cmp
fstp
push
xchg
inc
push
test
mov
xchg
mov
mov
lahf
cld
lock
mov
sbb
cli
pusha
call
pop
rol
sti
fld
pop
add
or
fs
pop
ss
or
adc
das
adc
inc
sbb
arpl
dec
cs
or
jnp
stos
mov
leave
sbb
int3
push
xlat
or
push
add
stc
mov
adc
or
add
imul
cmp
xchg
push
mov
out
xor
fisttp
pop
adc
push
dec
xchg
loopne
push
sub
stc
loop
mov
outs
iret
and
jne
cmc
jecxz
std
mov
add
hlt
outs
mov
or
mov
scas
mov
push
xchg
push
stc
jp
add
clc
js
pop
call
jo
cmp
sbb
jo
cmp
jmp
int3
cmps
(bad)
popf
mov
jb
aam
cmps
cmp
sub
jb
and
es
and
mov
mov
aad
loopne
cmps
mov
xchg
popa
jmp
ret
xchg
jmp
leave
(bad)
mov
in
mov
mov
jne
inc
add
cmps
mov
add
jmp
addr16
sar
cmp
(bad)
das
inc
pop
stc
fwait
(bad)
xlat
test
stos
or
add
mov
pop
out
jnp
popf
fisttp
pop
push
xlat
jle
es
push
mov
leave
push
jg
enter
hlt
(bad)
jl
mov
shl
push
out
cwde
cmps
iret
push
mov
fnstcw
pop
es
adc
adc
repnz
inc
xor
jg
or
std
mov
push
dec
jmp
jge
lock
push
dec
fldcw
jp
loope
pop
cdq
(bad)
cmp
push
xchg
push
lahf
fsubr
(bad)
xchg
or
push
mov
mov
out
mov
in
dec
push
jnp
je
xor
sahf
and
inc
push
xchg
xor
test
loopne
call
mov
fnstcw
mul
or
sbb
or
add
pushf
jge
push
mov
test
xchg
gs
adc
adc
jg
fst
imul
outs
fcom
out
scas
test
mov
outs
shl
les
ss
cmp
in
cmps
mov
mov
push
fs
lock
inc
in
stos
out
cmp
addr16
xchg
cs
popf
mov
pop
jnp
or
dec
mov
enter
sub
sub
pop
adc
std
xchg
and
in
cmps
cdq
add
in
jg
add
and
xor
pop
jb
repnz
lahf
jmp
pop
addr16
imul
cwde
jns
ficomp
mov
jno
cmps
pop
aas
aam
inc
jle
mov
or
dec
jp
jne
std
cwde
inc
ja
pop
mul
xlat
(bad)
cdq
stc
mov
sbb
ja
adc
call
sbb
cmc
rcl
repz
push
pop
fbstp
sti
add
sbb
mov
dec
cli
sub
add
inc
adc
cmp
(bad)
in
xchg
xchg
dec
pop
cmp
inc
fst
int
xor
jg
sub
daa
icebp
shr
ins
xchg
pop
fidivr
mov
add
lods
xchg
scas
push
mov
mov
stos
sbb
fwait
jo
pop
mov
out
cdq
dec
pop
fisub
mov
(bad)
cmp
es
sub
sub
lea
xchg
mov
and
fs
sar
pusha
and
xchg
and
ret
xor
stos
test
mov
push
stos
repz
push
leave
inc
mov
and
xchg
ret
dec
mov
dec
(bad)
mov
add
pop
mov
and
and
sub
(bad)
cmp
mov
sbb
fsub
inc
nop
or
jp
shl
addr16
in
adc
sbb
sub
jmp
iret
jb
adc
inc
jns
sub
in
jno
push
xchg
js
loopne
add
xor
(bad)
rol
into
push
mov
jle
sub
sub
hlt
dec
rol
je
test
fld
fwait
cmc
cmp
and
push
mov
pop
jne
clc
jno
loope
xchg
jge
dec
mov
aad
stos
inc
icebp
call
or
jb
addr16
pop
jns
adc
fistp
mov
pop
inc
iret
js
test
iret
scas
push
cdq
test
pop
adc
cmp
add
sub
jne
into
gs
outs
(bad)
leave
mov
jmp
fidivr
cs
fwait
rcr
pop
loopne
push
mov
imul
das
ins
dec
add
push
lea
pop
mov
jbe
(bad)
dec
sub
sbb
or
xchg
jnp
stos
lock
jmp
loopne
out
pop
sbb
mov
in
shl
adc
jmp
jl
dec
mov
loope
push
add
push
in
push
loopne
sub
xchg
(bad)
cmp
mov
sbb
or
mov
mov
iret
ins
es
mov
stos
cld
ret
or
jo
mov
neg
int3
pop
jb
lds
xchg
es
movs
xlat
xor
daa
jl
addr16
(bad)
(bad)
and
jg
mov
add
pop
adc
aad
in
sti
push
enter
mov
or
adc
mov
pusha
mov
mov
fmul
and
in
xchg
mov
mov
push
dec
cs
ins
mov
mov
mov
ret
ss
jp
dec
stos
sub
out
shr
push
add
and
sbb
pop
mov
xchg
jl
not
call
stos
rcl
xor
push
mov
in
repnz
xchg
out
daa
ss
or
xchg
lahf
fwait
mov
into
clc
lds
sbb
or
inc
(bad)
out
push
xor
in
es
xor
mov
lds
out
loop
adc
push
sub
jge
push
jns
pusha
not
cbw
pusha
mov
xor
fidivr
inc
imul
xor
adc
std
cs
inc
hlt
push
jnp
popf
rcr
adc
or
and
dec
sbb
push
pop
and
xchg
mul
jl
or
movs
mov
xor
loopne
add
cmps
sub
fist
test
les
xor
sbb
lea
das
pop
or
cmc
in
lods
div
rcl
mov
pop
imul
mov
dec
xchg
imul
xchg
xchg
std
sbb
aam
xchg
sub
retf
sub
mov
pop
push
fild
dec
arpl
lock
lods
fnstcw
imul
sub
pop
push
push
je
push
call
mov
push
cmp
xor
mov
popf
(bad)
and
enter
mov
(bad)
cmp
jmp
xor
les
stos
xor
(bad)
fisub
(bad)
fs
rcl
jne
dec
jb
mov
in
adc
aam
in
stc
dec
sbb
call
mov
cmp
inc
sti
adc
jb
mov
inc
int
pop
retf
jmp
sar
jne
lock
ins
cmp
sbb
push
arpl
cmp
pop
mov
arpl
cwde
push
jp
rcr
push
add
xor
xchg
out
pop
scas
lock
push
xor
aad
cmp
dec
call
cli
pushf
pop
ja
sti
cmp
arpl
loopne
dec
xchg
jmp
jl
mov
jae
push
add
(bad)
rol
inc
pop
and
daa
(bad)
and
mov
pushf
mov
mov
cmp
mov
adc
push
lar
ins
push
cmp
lahf
or
jae
pop
mov
adc
inc
sub
ins
add
cmp
or
sbb
xor
xchg
xor
inc
inc
push
out
xchg
jecxz
mov
fs
(bad)
sub
or
and
jo
xlat
and
dec
pop
sbb
outs
ret
xchg
adc
dec
mov
add
in
push
jge
jge
arpl
adc
sar
dec
(bad)
lds
xchg
(bad)
add
ret
stos
aam
out
mov
out
xor
xchg
or
in
adc
imul
push
mov
xor
mov
or
adc
lods
sbb
(bad)
push
movs
mov
mov
cmc
push
dec
mov
dec
test
mov
jmp
push
int3
jne
cmp
into
jecxz
xchg
xor
(bad)
stos
xchg
pushf
inc
or
popa
outs
aam
lea
scas
pushf
mov
pop
mov
push
adc
mov
clc
inc
shl
sbb
dec
xchg
cmp
sub
push
inc
ja
adc
test
mov
xor
cmps
mov
mov
cdq
loop
jge
lahf
addr16
aaa
loope
xor
xchg
cmps
adc
sar
pop
cdq
pop
jmp
adc
and
loopne
xlat
(bad)
and
loop
call
dec
hlt
pop
lods
fimul
jmp
rol
dec
cmp
pop
mov
mov
inc
ror
shl
push
fisttp
adc
out
fimul
(bad)
push
ret
int
mov
mov
xor
mov
adc
adc
or
push
sub
mov
std
pushf
inc
push
shl
pusha
(bad)
mov
pop
push
xchg
nop
(bad)
mov
jnp
inc
or
add
movs
in
xchg
int
mov
jne
add
adc
lods
enter
rol
mov
cdq
mov
lds
and
cmps
movs
push
inc
pusha
ficomp
mov
out
dec
pushf
push
push
dec
push
add
nop
mov
or
in
mov
into
or
movs
pop
push
int
(bad)
cmp
cmp
jmp
and
mov
in
push
(bad)
cmp
mov
out
sub
leave
fbstp
es
and
test
fsubr
lods
push
add
stc
push
cdq
mov
lods
mov
xor
mov
test
fmul
daa
fnsave
dec
ret
xor
sbb
test
sub
enter
push
cmps
add
in
pop
clc
jb
fsubr
jecxz
dec
xchg
pusha
add
stos
sti
add
dec
inc
and
pop
jae
push
mov
sub
je
in
or
adc
dec
sub
bound
mov
rol
movs
inc
lahf
call
sbb
mov
cwde
ins
jge
sub
outs
jle
cmp
cmp
imul
adc
push
lea
js
adc
sbb
stc
sbb
adc
std
inc
pop
mov
and
ins
sub
gs
es
nop
js
daa
dec
js
lds
shr
adc
and
pop
retf
mov
add
push
cmp
mov
popa
sar
sbb
sbb
nop
xor
fldenv
inc
xchg
popa
lock
out
jb
jle
gs
and
lods
mov
xor
mov
call
xchg
cmc
and
jge
call
mov
inc
xor
or
test
bound
push
dec
xor
push
int3
sti
fnstcw
cmps
adc
push
ins
sub
in
stos
xchg
mov
mov
jle
inc
sbb
inc
and
and
rcr
test
pop
pop
inc
icebp
mov
test
mov
add
mov
(bad)
mov
test
lds
sbb
push
add
test
test
mov
int3
mov
and
push
and
ins
xchg
push
push
pushf
retf
mov
sar
add
add
loopne
call
push
icebp
(bad)
add
fisubr
je
add
inc
pop
push
lahf
repz
in
inc
xchg
fldcw
sar
mov
adc
xchg
xchg
aaa
sub
push
sub
jmp
sub
loopne
push
jns
cmps
aaa
stc
fidiv
popa
sub
test
(bad)
stos
bound
leave
jmp
cmp
lods
nop
mov
loope
out
sar
dec
les
pop
mov
lods
jne
xor
shl
pop
je
mov
inc
mov
mov
rcr
ret
mov
xchg
jl
xchg
jp
test
jg
jmp
dec
cmps
xchg
sbb
cdq
cmp
lea
out
in
mov
addr16
scas
xchg
xor
and
and
push
pop
jmp
and
push
cld
pushf
lods
ja
ret
or
cmp
xor
sbb
inc
or
push
stos
enter
add
fiadd
sbb
sub
pop
sbb
sti
jbe
rcr
call
(bad)
gs
dec
test
ss
jecxz
push
not
pop
leave
popa
test
mov
adc
inc
fcom
pop
call
out
jae
pop
xor
hlt
cmc
cwde
mov
pop
add
mov
imul
int
nop
scas
or
das
xor
mov
out
push
mov
sub
mov
adc
mov
pop
push
mov
daa
mov
adc
fs
jp
pop
lahf
sbb
js
les
arpl
push
and
push
sbb
mov
xchg
ds
ret
outs
popf
add
lods
loope
mov
ret
stos
inc
jmp
or
jmp
add
jp
mov
mov
dec
pusha
leave
ins
fsub
inc
dec
es
lods
pop
pop
push
int
cmps
jmp
pop
retf
sbb
pop
xchg
mov
repz
cmp
rcl
sub
neg
xchg
sub
test
dec
mov
and
add
fs
and
pop
xchg
fld
and
mov
lods
repz
xlat
jmp
and
mov
mov
push
inc
add
cmps
js
sub
aaa
push
inc
in
pop
hlt
popa
cld
test
test
mov
sbb
cwde
ds
push
(bad)
jmp
add
fcom
mov
sub
jns
scas
adc
sub
sahf
cli
(bad)
iret
jno
lock
je
outs
loope
in
pop
xor
out
or
cmps
repz
mov
cwde
std
push
mov
pop
test
cmc
pop
adc
aas
mov
ss
mov
or
nop
movs
jle
pop
mov
(bad)
xor
push
adc
xchg
minps
loop
push
adc
mov
(bad)
fsubr
jnp
fistp
dec
aam
cmp
sti
rol
xlat
fsub
stc
add
data16
shl
out
into
ja
out
stc
hlt
push
shl
test
push
or
push
mov
shr
sti
cmps
push
lahf
div
jae
mov
xchg
out
cmp
jl
call
into
add
enter
in
clc
pop
in
ja
pop
xchg
and
in
xor
js
push
repz
xchg
test
xchg
cmp
jo
push
ins
fwait
adc
shl
retf
dec
pop
sub
cmp
push
fcom
xor
test
mov
cmp
jecxz
pop
inc
push
fidiv
aaa
nop
add
cwde
push
and
push
sbb
add
fwait
jecxz
dec
lea
dec
iret
mov
sub
jae
dec
pop
das
out
push
xchg
xor
xchg
inc
sub
sbb
mov
ins
xor
mov
and
mov
outs
mul
imul
dec
scas
xchg
pop
data16
xor
jae
add
adc
(bad)
fs
(bad)
pop
push
mov
in
sar
lods
xchg
mov
sub
test
cmc
and
add
ret
arpl
ds
adc
or
mov
int3
jb
cli
cmp
pop
adc
inc
ss
mov
add
repz
fst
pop
mov
mov
int
daa
pop
ins
in
out
pop
jecxz
rcl
inc
aaa
inc
(bad)
jg
add
push
add
sub
push
inc
push
add
movs
scas
xor
les
cmp
jmp
in
ret
pushf
sub
movs
mov
or
sbb
into
adc
lods
sub
psrld
test
pusha
or
test
or
push
sbb
in
sbb
movs
or
pop
repz
push
dec
cmp
sahf
stc
inc
mov
mov
scas
or
mov
sbb
nop
in
push
cmp
jge
mov
lods
and
movs
push
add
(bad)
outs
or
enter
mov
fcom
ds
cwde
mov
retf
pop
std
push
mov
mov
int3
ins
mov
(bad)
imul
pop
xor
push
mov
inc
sub
aad
jmp
lock
push
xchg
mov
sbb
inc
cmp
xlat
rcr
jne
dec
lds
push
fidiv
add
dec
retf
adc
inc
inc
mov
outs
mov
cmp
push
clc
jecxz
jmp
push
imul
call
cmp
loope
loop
pop
clc
sub
nop
adc
push
sbb
(bad)
push
das
mov
es
xor
shl
mov
(bad)
aad
dec
dec
add
cmp
inc
leave
and
xor
xchg
lods
and
into
cli
sub
inc
lods
loope
movs
hlt
les
push
popa
push
jmp
outs
sbb
lods
pop
inc
outs
inc
jnp
mov
cmp
lds
jne
cmp
sub
ins
daa
mov
add
adc
sti
jne
(bad)
les
xor
fwait
shl
in
imul
add
inc
mov
ficomp
adc
inc
dec
add
adc
inc
add
sbb
das
out
int
mov
test
psllq
fld
sub
std
sbb
call
xchg
xor
mov
test
inc
mov
or
out
sbb
cmp
lods
inc
popa
ds
std
cmc
inc
int3
fs
(bad)
inc
stos
xlat
icebp
sahf
mov
mov
loope
test
and
in
in
(bad)
in
or
xchg
pusha
js
lods
(bad)
iret
dec
das
(bad)
repnz
add
adc
rol
dec
nop
ins
xchg
mov
sar
inc
dec
sbb
xchg
lea
xor
sbb
push
fs
int3
leave
int
je
push
push
jge
pop
fwait
jle
fsub
jb
sti
aas
xchg
popa
mov
repnz
pop
lock
mov
sub
rcl
addr16
jne
xchg
push
das
lds
lds
sub
cli
jmp
ins
dec
ins
pop
bound
imul
adc
pop
je
cwde
(bad)
cdq
(bad)
xor
loop
pop
cmp
push
cmp
mov
dec
aad
outs
and
add
pop
sbb
and
sti
js
in
hlt
mov
fiadd
in
loope
xor
fwait
pop
mov
mov
mov
jecxz
(bad)
movs
retf
pop
jae
js
xchg
jp
std
sbb
repz
pop
enter
jge
outs
lea
shr
adc
or
sbb
jmp
(bad)
xor
(bad)
out
inc
jle
jge
rcr
cdq
sub
mov
cmp
cmp
test
(bad)
mov
xor
clc
lods
idiv
cwde
inc
nop
shl
xor
repz
dec
xchg
lahf
cld
mov
inc
cli
aaa
or
push
sbb
and
adc
scas
cdq
imul
jnp
imul
(bad)
(bad)
loop
aad
mov
or
dec
bound
fsub
or
lock
and
dec
loope
jp
call
lods
bound
div
sbb
push
xor
sbb
pusha
jmp
stos
popf
popf
(bad)
push
sbb
sub
arpl
lods
add
ret
adc
sbb
mov
out
adc
mov
fisttp
imul
mov
sbb
rcl
pop
test
add
daa
push
inc
frstor
mov
nop
inc
out
shl
pop
es
or
loopne
mov
mov
push
and
xchg
loop
jg
enter
mov
repnz
mov
xchg
cmp
rol
outs
pop
mov
pop
add
push
mov
xchg
movs
xor
lahf
dec
ret
fisttp
scas
rcl
dec
repnz
fild
sub
repz
jmp
pop
mov
into
mov
mov
xor
push
ds
pop
fmul
and
fisubr
mov
sub
rcr
add
cmp
mov
adc
xlat
popf
ret
ss
mov
and
cmp
ins
shl
das
or
imul
(bad)
mov
or
xchg
cmp
add
mov
push
mov
mov
pop
mov
cmp
fst
or
and
mov
shl
push
inc
loop
push
test
loope
lock
push
aad
pop
cdq
ja
cmp
mov
into
xor
stos
repz
inc
jp
inc
lock
xchg
jne
mov
hlt
add
data16
imul
mov
sar
inc
sti
or
xlat
ret
mov
xchg
loopne
sub
jg
adc
mov
or
dec
xchg
xor
jp
loop
popa
mov
ss
sbb
mov
in
lock
cmp
sbb
pop
pop
dec
shl
jle
es
pop
mov
fst
aad
dec
neg
shr
lahf
jne
loop
sgdtd
repz
div
lods
daa
fwait
les
cmps
mov
sar
pop
rcr
cmp
fwait
xor
or
adc
jl
mov
jne
rcl
adc
adc
jbe
popa
imul
outs
or
(bad)
pop
jp
xor
cmc
adc
test
lods
jbe
xor
es
xchg
sub
and
aam
adc
xchg
xor
ins
add
mov
and
lods
movs
dec
xor
pop
cld
loope
es
push
(bad)
nop
xchg
rcr
int3
jbe
(bad)
imul
mul
addr16
and
leave
dec
repnz
dec
lods
jo
aad
pop
cld
ret
xor
add
pop
pop
daa
shr
dec
sbb
jl
cdq
sahf
and
sub
aas
cmp
in
pop
pop
sub
lock
jmp
adc
mov
mov
inc
addr16
jno
fldenv
xor
neg
pop
pop
aas
gs
adc
push
cmp
cmp
dec
jno
mov
adc
shr
call
inc
sub
out
xchg
out
mov
(bad)
lods
xchg
(bad)
daa
inc
mov
les
xlat
rcl
repz
mov
std
(bad)
frstor
push
jl
ret
push
aam
cld
dec
imul
push
mov
cmp
xor
and
nop
or
adc
mov
inc
and
mov
scas
xor
shrd
enter
or
lods
fldcw
pop
stos
arpl
lahf
(bad)
(bad)
pop
sti
iret
adc
stc
dec
pop
add
push
sahf
cdq
loop
arpl
pop
or
stc
push
sbb
sbb
int3
dec
jns
lea
arpl
scas
(bad)
loope
js
jmp
lds
call
adc
jbe
cmp
scas
fnstenv
les
pop
pop
inc
dec
popf
and
movs
sub
adc
neg
xor
mov
scas
mov
cmp
imul
push
jge
ins
mov
dec
jmp
push
inc
inc
outs
pop
clc
sub
mov
dec
add
es
inc
and
fldpi
push
mov
xor
and
xchg
outs
idiv
retf
pop
xchg
stc
imul
and
leave
add
xor
cwde
outs
fst
cli
sub
loope
mov
out
sub
(bad)
into
leave
ja
test
jp
rep
add
cdq
lods
push
pusha
neg
test
mov
push
push
inc
aam
gs
add
inc
pop
xchg
shl
xchg
mov
dec
add
jecxz
mov
cmps
push
sbb
and
pusha
test
popa
int3
xchg
xor
addr16
push
xor
and
mov
jecxz
cs
out
dec
pop
jecxz
sub
lds
outs
out
and
jae
fidiv
jg
fucom
enter
mov
mov
in
mov
or
les
icebp
fidiv
sub
xor
ret
cli
call
dec
jo
int
pusha
cli
(bad)
stos
jecxz
repz
test
adc
mov
test
rol
xor
ret
out
je
inc
xor
aas
fnstcw
cdq
es
(bad)
jp
ins
fcmove
dec
ret
xchg
je
push
in
push
adc
leave
cmc
jne
rcl
xchg
mov
adc
addr16
add
fsub
fmul
dec
stc
xchg
cld
jno
inc
cmp
or
(bad)
in
push
inc
mov
dec
xchg
daa
sub
mov
loope
xor
clc
dec
xor
(bad)
pop
in
sbb
out
popf
sahf
(bad)
dec
js
push
pop
push
sub
mov
cmp
sbb
test
pop
cdq
jno
xor
test
int3
test
add
popf
and
xchg
and
ss
xor
cmp
jp
jo
jmp
(bad)
jo
mov
add
add
mov
pushf
lds
popf
iret
mov
int
push
dec
mov
push
test
adc
pop
rcl
lods
mov
xor
pop
or
sub
ins
clc
mov
pop
jo
repz
pop
xlat
bound
imul
lods
sub
ret
mov
cmp
add
xchg
and
mov
hlt
in
xchg
mov
pop
icebp
adc
out
mul
add
dec
pop
aad
xchg
lods
mov
inc
add
inc
rcr
jecxz
jne
test
xor
enter
mov
vmaxpd
dec
stc
adc
fnsave
cmp
(bad)
arpl
push
jae
jae
stos
pop
jnp
int3
repz
or
sbb
jmp
inc
sbb
sub
aam
push
loopne
push
xchg
into
shr
mov
mov
sbb
in
stc
dec
jne
mov
stos
pop
add
imul
out
add
adc
add
xor
aam
jns
sahf
stos
push
test
pop
mov
jae
cs
clc
jp
xchg
cld
adc
pop
jl
jo
or
sbb
jmp
pop
adc
ins
pop
arpl
in
inc
pop
addr16
cdq
daa
inc
or
pop
mov
arpl
and
push
cmc
cmp
inc
imul
push
mov
cmp
test
dec
add
in
fadd
nop
scas
jae
and
sub
hlt
scas
addr16
jge
shl
adc
(bad)
sub
inc
lahf
test
test
xchg
ficom
dec
sbb
and
mov
xor
scas
in
push
mov
data16
dec
in
and
fsubr
adc
xlat
push
out
cmp
mov
(bad)
cmc
mov
xlat
pop
shl
sub
inc
call
fcomp
cmp
sbb
outs
movs
add
dec
mov
cmp
(bad)
fbld
mov
ret
mov
(bad)
pop
fdiv
dec
div
push
pop
jno
das
in
xchg
jo
into
out
cli
div
mov
and
(bad)
jnp
add
push
mov
cmp
cdq
pop
xchg
cmp
push
mov
push
movs
popf
(bad)
mov
pop
fsub
mov
mov
shl
push
pop
int3
and
fdiv
in
call
in
shr
add
or
pop
and
mov
leave
inc
sbb
adc
pop
dec
sbb
push
pop
jecxz
cmp
sub
or
shr
cld
xchg
inc
enter
push
and
xchg
jne
in
push
jo
fcom
cmp
dec
push
test
cmp
shr
add
fcomip
sbb
or
jmp
push
sub
jne
push
xchg
lods
adc
hlt
push
xchg
in
jl
add
imul
sahf
jns
(bad)
xchg
outs
push
mov
fwait
out
adc
jae
mov
aad
pop
mov
mov
fwait
in
fs
test
imul
push
fnstcw
push
mov
push
adc
or
mov
cld
jae
jb
(bad)
sti
xchg
cmp
cmps
add
jbe
jmp
xchg
sub
ret
pushf
aaa
outs
mov
repnz
enter
push
and
push
mov
jmp
in
sub
je
loopne
sub
in
mov
lds
or
xor
fs
fist
dec
or
daa
vmovups
pop
and
ficom
lahf
and
jbe
mov
dec
pop
jo
aas
dec
iret
aam
mov
mov
jecxz
ror
sar
shl
mov
or
movs
add
repnz
sti
adc
cmp
mov
sbb
mov
xchg
or
mov
inc
repz
adc
jnp
or
cmp
shl
fisttp
or
jnp
xchg
push
cwde
adc
inc
inc
and
or
bound
pop
lods
in
js
push
dec
mov
nop
loope
lea
pop
pop
sbb
xor
xchg
loopne
scas
add
mov
xor
fadd
dec
sti
push
sbb
add
xchg
out
adc
xor
mov
jp
pop
pop
xchg
cmp
imul
movs
dec
cmp
or
movs
in
add
mov
call
push
and
inc
sar
ins
les
leave
ror
jbe
push
cmp
rcr
jp
mov
test
cmp
fwait
pop
fadd
push
xor
xlat
sub
inc
int3
adc
test
std
shr
int
inc
popa
sbb
push
iret
mov
mov
adc
pop
and
imul
lds
sahf
jp
adc
clc
and
jge
jge
mov
pop
xlat
scas
xchg
cmp
in
cmp
popa
lea
movq
ins
adc
dec
pop
int
rol
jecxz
(bad)
cmps
out
mov
lahf
sub
inc
int
std
dec
dec
jbe
mov
loopne
inc
popfw
fist
cmp
jg
cmp
push
mov
jb
mov
shl
es
je
fxch
ins
hlt
lods
sub
stc
repnz
cmp
add
inc
loopne
loop
out
sub
fild
mov
scas
and
add
adc
mov
mov
pop
sti
or
shl
cwde
pop
push
sub
adc
adc
adc
adc
pop
cmp
push
js
mov
mov
xchg
arpl
imul
jle
popa
and
test
es
push
(bad)
and
out
icebp
stos
loope
xchg
xchg
xchg
xchg
call
jb
xchg
scas
cmp
sub
sub
mov
mov
arpl
ds
jmp
clc
(bad)
repnz
out
mov
jmp
pop
add
shl
xchg
addr16
mov
call
pop
xchg
loope
xor
aam
xchg
adc
mov
ins
shl
cmps
jecxz
xlat
xchg
mov
in
daa
jo
cwde
nop
jae
mov
mov
sub
retf
dec
xor
ins
sub
sete
xchg
and
pop
cwde
aas
out
pop
sub
sub
mov
into
mov
xor
cmp
arpl
iret
stos
adc
cld
fcomip
jnp
mov
xchg
mov
adc
in
push
sbb
push
outs
pop
dec
adc
fist
dec
mov
xor
push
(bad)
retf
ins
aas
jb
push
loope
sbb
shl
cwde
xchg
dec
clc
out
out
aaa
push
sbb
(bad)
mov
pop
aas
das
addr16
xor
inc
dec
cmp
fcmovbe
inc
loop
jmp
dec
fisub
mov
mov
retf
inc
loope
call
es
adc
pusha
rcr
loopne
fwait
cld
sub
nop
lea
(bad)
stc
imul
rcl
jbe
fld
imul
pop
scas
push
repz
das
jae
bound
mov
cmp
push
jg
xchg
inc
cmp
rol
ins
mov
popa
das
xchg
jb
and
(bad)
jg
int3
ds
mov
sub
xor
or
cmp
loop
xor
in
mov
fistp
mov
and
es
ror
jns
test
hlt
dec
jb
fidivr
test
aam
repnz
outs
(bad)
sti
popa
sub
test
iret
xor
je
test
push
int3
fs
out
push
pop
sbb
fnsave
and
retf
and
sti
out
mov
jle
inc
xor
out
daa
loope
push
mov
out
aas
fwait
movs
cmp
gs
jle
daa
(bad)
lods
adc
(bad)
es
dec
repnz
rcr
je
jge
sbb
loop
out
cmp
inc
test
push
jmp
out
mov
retf
int3
rol
push
xchg
jbe
mov
cmp
mov
add
jns
xor
cmc
in
cmp
push
(bad)
shl
cmp
or
ror
jne
sub
add
gs
(bad)
mov
push
mov
push
mov
or
xor
inc
test
stc
adc
loope
outs
inc
(bad)
sbb
mov
sbb
pushf
enter
xchg
cmp
cmp
loope
enter
outs
dec
jp
aas
push
pop
jle
xchg
fwait
loop
sub
fdiv
je
jno
je
mov
pop
sub
fisub
fs
sbb
leave
sbb
mov
loopne
push
xor
cdq
dec
jmp
mov
pop
xor
push
adc
in
mov
outs
seta
mov
ins
mov
and
xchg
jge
enter
xor
mov
clc
call
push
sbb
lea
into
imul
dec
pop
pop
lds
adc
inc
aad
xor
dec
push
sub
jecxz
jge
inc
mov
adc
lock
js
fdiv
mov
sbb
test
xor
jbe
bnd
loopne
mov
imul
xchg
ss
fldenv
xchg
cs
clc
cwde
adc
push
je
jns
pusha
jae
xor
iret
sahf
(bad)
jns
out
xor
into
test
jmp
or
imul
xchg
add
push
jecxz
adc
int3
mov
add
ret
cs
in
jno
pushf
aaa
pop
sar
and
inc
fld
push
aas
ins
arpl
outs
sti
push
cmps
sub
imul
mov
sbb
sub
cmps
fucomip
or
xor
adc
nop
inc
mov
out
sub
(bad)
rcl
mov
cli
stos
stc
fucomi
mov
sahf
pop
adc
ins
and
jle
outs
and
lods
sahf
add
pusha
xchg
mov
ror
sti
mov
cdq
js
add
dec
and
in
scas
ror
and
ret
test
and
rcl
arpl
pop
and
add
mov
fs
xchg
pop
xchg
out
ss
add
pop
and
push
pop
rcr
call
out
add
xor
pop
and
cli
loop
icebp
and
leave
push
ficom
fs
pop
out
test
ret
dec
bound
fadd
xor
(bad)
mov
sbb
jbe
dec
ror
out
loopne
outs
dec
sbb
sbb
repnz
iret
cld
jb
fimul
(bad)
repnz
fbld
push
shr
sahf
cmp
pop
in
mov
cld
mov
stos
aam
imul
xor
xchg
add
sbb
pop
div
xchg
aaa
mov
retf
jb
stos
out
js
mov
xchg
fmul
out
not
push
jle
aad
aam
inc
mov
ficom
fist
mov
inc
mov
jae
mov
into
cmp
cld
lock
cmp
or
jo
mov
cmps
mul
and
push
out
sbb
adc
loope
mov
or
or
das
pop
xor
fwait
sub
mov
pop
in
jnp
les
daa
cwde
das
add
inc
addr16
in
sbb
push
(bad)
mov
sti
cmp
out
cmps
aam
fwait
retf
push
and
push
jo
pop
sbb
push
or
cdq
(bad)
ss
push
xchg
inc
jle
aaa
dec
cmp
add
jp
in
aas
cs
std
ret
and
ins
adc
popa
mov
xor
lods
fist
iret
mov
cdq
pop
mov
pop
push
cdq
(bad)
mov
fwait
mov
scas
jp
cdq
adc
xchg
cmp
jns
fsubr
clc
pop
es
out
xor
int
mov
popa
std
jno
sbb
or
ins
mov
or
or
pop
mov
mov
inc
push
mov
xchg
lds
sbb
pop
je
mov
cmp
jge
retf
push
pop
xor
fwait
mov
inc
dec
pop
inc
jnp
fwait
bound
sbb
mov
std
in
dec
stc
sub
loope
mov
dec
push
cmp
call
mov
icebp
push
fistp
loope
mov
adc
movs
xor
leave
fisubr
imul
and
stos
gs
push
xchg
fdivr
inc
pop
(bad)
mov
sbb
aaa
dec
nop
inc
jae
imul
mov
xor
dec
imul
retf
add
jmp
test
ret
ins
mov
cmps
fsub
inc
arpl
ins
mov
and
and
add
jbe
gs
and
in
mov
sub
pop
cmps
or
in
or
pusha
stc
je
std
cmps
jns
and
inc
xor
test
push
jbe
jecxz
jne
rcl
add
clc
adc
xchg
or
xlat
xchg
jecxz
test
sub
fsin
shl
lea
and
add
fild
test
jmp
test
sti
outs
sbb
add
lock
pop
imul
fisubr
cmp
arpl
pushf
loopne
enter
stos
(bad)
aad
mov
out
clc
ret
add
out
cmps
enter
or
(bad)
icebp
fcmovbe
dec
sub
loope
pop
popf
xchg
ja
pop
sbb
mov
jno
inc
into
xchg
fwait
push
fadd
jnp
shl
sar
scas
fisub
adc
sti
sub
mov
lods
mov
push
add
sti
xlat
mov
call
ins
sub
and
add
sub
lock
fsub
cld
mov
call
jo
inc
or
popf
and
rcr
add
stc
mov
xlat
retf
cli
stc
iret
cmp
mov
pop
fbstp
cli
retf
xchg
cmp
xor
dec
loopne
js
pop
mov
inc
ins
push
rcl
jno
xchg
rcl
inc
cld
mov
push
adc
pusha
jmp
int
mov
outs
aaa
neg
adc
pop
repnz
push
pop
lea
clc
mov
mov
iret
jbe
(bad)
cmp
xor
iret
mov
jb
jnp
data16
push
repz
mov
popf
push
pop
inc
add
xchg
or
inc
cld
or
fwait
mov
gs
imul
lods
adc
sbb
jle
or
xor
push
and
mov
cmps
or
inc
or
ret
mov
rol
lahf
mov
adc
call
jae
xor
sbb
jb
mov
fsubr
mov
cmp
push
xor
add
imul
pop
movs
xor
sub
fadd
xor
dec
mov
(bad)
clc
(bad)
adc
lahf
repnz
std
outs
mov
jo
mov
lods
inc
mov
xor
inc
or
mov
adc
sbb
lock
imul
ja
repz
sbb
lods
lods
js
mov
rol
int3
mov
shl
sbb
pop
mov
jge
inc
ins
inc
xchg
iret
adc
es
repz
sbb
in
push
sub
in
(bad)
lods
arpl
loop
(bad)
or
adc
jmp
in
inc
push
repnz
call
ja
cmp
aas
and
fistp
mov
adc
add
retf
push
nop
cmps
mov
xchg
sub
ror
(bad)
mov
arpl
jecxz
adc
scas
push
sar
pop
xor
retf
cli
les
inc
inc
fwait
jmp
or
(bad)
cmps
popa
cmp
xor
pushf
call
push
imul
jo
int3
inc
(bad)
cmps
in
inc
cld
cmps
xchg
mov
cmp
xchg
stos
idiv
and
inc
mov
shr
loope
mov
call
inc
cmc
rcl
sub
(bad)
fnsave
outs
mov
aam
or
pop
add
hlt
sub
mov
jno
xor
iret
call
cmp
ss
fwait
cmps
loopne
fidiv
stc
mov
scas
pop
mov
or
ja
xchg
fistp
leave
pop
inc
sub
cwde
push
call
adc
aas
sub
xor
outs
ret
adc
push
cmps
out
mov
and
ret
shr
jbe
in
imul
dec
push
jno
push
pop
ret
xor
pop
sbb
mov
(bad)
(bad)
xchg
xchg
mov
and
shl
jg
push
js
and
les
ret
das
je
or
bound
sub
lock
xor
inc
cwde
mov
xchg
cmps
repnz
xor
mov
nop
jge
es
in
xor
mov
sub
in
(bad)
push
fidivr
and
xchg
pop
sub
cdq
ror
xor
jnp
xchg
adc
jnp
mov
call
cwde
mov
add
jbe
inc
popf
bound
mov
mov
mov
mov
sbb
cwde
arpl
and
hlt
xchg
in
mov
sbb
push
fs
in
in
(bad)
in
adc
push
xchg
mov
sbb
fidiv
sbb
or
inc
or
test
mov
and
lahf
cmps
jo
cmp
dec
popf
int3
int
push
adc
shr
sahf
inc
push
pop
adc
xchg
aaa
mov
lahf
push
fild
retf
and
aas
mov
dec
inc
pushf
pushf
inc
mov
cmp
mov
or
loope
and
sbb
lock
int3
jg
jecxz
and
and
enter
add
jl
outs
push
sbb
icebp
or
not
fwait
es
cmp
mov
test
fsub
inc
push
xor
mov
mov
mov
and
mov
add
jmp
mov
mov
pop
repnz
or
inc
jecxz
outs
adc
shr
outs
add
cmps
mov
fmul
cmp
xchg
xchg
das
outs
je
cmp
movs
fistp
sub
aas
jmp
sahf
gs
push
and
pop
dec
pop
pop
lock
sahf
fnsave
xchg
not
outs
cmc
jecxz
jle
pop
xor
jne
jmp
jbe
mov
out
jno
and
and
and
sbb
and
sbb
mov
out
test
inc
pop
lds
(bad)
cs
and
or
jle
adc
icebp
or
js
cmp
or
loop
retf
inc
and
jmp
pop
gs
je
nop
pop
ret
dec
mov
adc
je
cmp
xor
call
pop
pop
push
jmp
lock
adc
sar
sub
lock
stos
fdiv
mov
push
xor
ret
stc
(bad)
lods
(bad)
dec
xor
xchg
cwde
pusha
jo
add
mov
leave
stc
lahf
xchg
(bad)
ffree
dec
sub
ficom
sbb
add
data16
lahf
sub
pop
pop
xchg
xchg
gs
cwde
pop
dec
(bad)
ins
sub
in
adc
fistp
push
outs
cmp
scas
mov
xor
jnp
pop
ins
lock
mov
sbb
add
cli
dec
pop
dec
fs
mov
or
enter
add
sar
test
mov
(bad)
inc
sbb
cmp
mov
xchg
and
and
int
push
add
and
ins
jbe
(bad)
out
add
mov
ret
push
inc
pop
mov
inc
push
test
(bad)
adc
cmp
ins
in
xchg
pop
pop
adc
in
jle
jnp
xchg
cmp
xor
test
mov
dec
push
add
test
push
aaa
add
cmps
ds
jb
inc
mov
push
pushf
jmp
lahf
or
adc
or
lea
scas
ret
imul
inc
addr16
add
push
aad
call
mov
stos
loop
bound
push
out
fisttp
sub
push
loop
(bad)
and
mov
lods
add
cld
in
add
mov
adc
jns
(bad)
jmp
inc
adc
shr
push
add
fwait
lock
mov
repz
cmp
mov
enter
mov
xchg
aas
icebp
nop
enter
shl
adc
add
popa
jbe
lock
xchg
push
xchg
inc
neg
mov
xor
xlat
add
add
std
iret
push
dec
loop
jmp
inc
xor
adc
fwait
je
nop
ja
push
sahf
loopne
add
add
dec
lahf
mov
mov
lock
in
or
sbb
pushf
inc
cmp
push
xchg
in
out
add
clc
mov
jl
js
sbb
iret
xor
shr
stos
ja
scas
cs
daa
fldcw
lahf
dec
ret
inc
pop
xor
add
cmp
stos
sbb
sar
mov
aam
mov
gs
(bad)
cmp
shl
push
in
push
xchg
adc
and
stc
inc
imul
add
and
pop
fstp
fcmovnu
xor
sbb
sbb
push
xor
jp
xor
call
cmp
cmp
loope
dec
inc
adc
inc
add
sub
dec
xchg
test
pop
ficomp
sti
sub
adc
dec
cmps
cmp
mov
pop
imul
scas
sub
fndisi(8087
inc
pusha
inc
in
movs
jmp
sub
add
(bad)
adc
xchg
sbb
dec
test
xchg
fprem1
sub
adc
js
int3
aas
adc
or
adc
repnz
shr
lock
in
test
push
inc
push
sbb
sbb
lea
xchg
push
sbb
arpl
add
lods
cdq
inc
int3
(bad)
and
ret
push
out
sbb
nop
inc
in
cmp
mov
shl
arpl
lods
xor
pop
pop
outs
mov
outs
adc
inc
ficom
popf
mov
pop
cld
pop
mov
dec
xlat
push
std
mov
into
test
pop
jbe
mov
test
adc
fistp
jl
rcl
add
jmp
mov
adc
mov
and
(bad)
sub
cmp
aaa
mov
adc
pop
pop
cmc
cwde
xor
push
mov
pusha
jnp
sbb
and
cmp
xlat
loopne
(bad)
xor
adc
in
dec
inc
fdivp
mov
lods
pop
fisub
dec
jg
fbld
and
pusha
popa
stos
leave
sbb
xchg
cmp
pop
iret
push
ror
je
push
inc
pop
cld
adc
lods
mov
push
fadd
or
xor
pop
xlat
hlt
xor
and
xchg
jp
cmp
mov
les
push
fmul
pushf
sub
add
mov
mov
mov
xor
or
dec
gs
dec
sub
(bad)
in
ja
pop
cmps
clc
sub
bound
daa
sub
and
nop
popf
sub
mov
cmp
push
adc
fbld
aam
and
retf
retf
cmp
mov
add
dec
add
icebp
mov
dec
pop
and
or
inc
jmp
fsubr
sti
or
cli
sbb
clc
mov
add
out
inc
pop
out
out
mov
shl
imul
ret
fsub
inc
jae
xlat
bound
mov
cmps
ds
das
or
clc
pusha
mov
fs
ja
and
sbb
int
xchg
gs
cli
outs
sar
in
outs
xchg
sbb
in
or
inc
iret
je
mov
ret
push
sahf
and
int
jnp
jbe
es
stc
mov
push
inc
pop
mov
adc
and
movs
xor
mov
imul
mov
inc
pop
sub
sbb
dec
and
push
jno
(bad)
jg
xor
sahf
test
add
sub
loop
pop
add
cmp
es
loopne
jecxz
repz
mov
out
cwde
mov
pop
ret
add
cmp
jae
int
push
inc
movs
fiadd
in
shr
in
int3
push
mov
jne
call
std
cmps
add
sub
std
sar
popf
ficomp
adc
or
les
mov
jmp
test
sbb
sub
cmp
mov
enter
out
mov
sbb
stos
adc
and
loop
mov
mov
push
fadd
mov
pusha
sub
inc
out
into
in
push
loope
dec
adc
xchg
test
jbe
xor
push
push
xor
cmc
xor
adc
in
mov
pop
jle
lahf
xor
dec
fisttp
dec
push
pop
or
mov
adc
mov
addr16
scas
mov
cmp
rcl
cli
test
out
sar
arpl
cld
in
aam
scas
fbstp
ret
sbb
mov
adc
into
push
fmul
hlt
fild
lahf
pop
ins
mov
xchg
and
not
jnp
sbb
out
mov
pop
or
fdiv
and
jns
mov
xchg
cmc
mov
inc
push
fisttp
nop
call
inc
pop
out
sahf
jge
popf
sub
pop
aad
pop
mov
in
mov
dec
in
inc
xor
fs
push
imul
movs
fwait
add
mov
popa
pop
cmp
cmp
lea
mov
push
jmp
loope
or
mov
clc
add
jg
mov
das
stos
xor
mov
jle
cmc
cs
jge
addr16
dec
sbb
inc
ror
ins
inc
imul
jno
dec
stos
in
call
pop
int3
pushf
int3
ds
dec
jnp
or
int
inc
into
lahf
xlat
sub
test
fcom
mov
sbb
aas
xchg
dec
jmp
xor
cmp
movs
(bad)
in
sbb
push
mov
xchg
lods
and
xor
mov
lahf
jle
push
lahf
xor
fcmovne
lods
int3
je
mov
fld1
add
cli
push
fst
jg
mov
and
scas
or
pop
sub
(bad)
daa
add
mov
mov
loop
mov
ja
and
lock
mov
dec
jo
mov
xor
stc
int
push
lock
adc
outs
mov
jbe
mov
ror
xor
js
clc
(bad)
mov
call
mov
lods
xor
jp
and
pop
stos
jae
loope
sbb
mov
xchg
ret
adc
aas
dec
out
cli
adc
mov
or
or
daa
mov
je
pop
call
mov
clc
ret
push
jbe
mov
mov
and
cli
std
(bad)
stos
jno
xlat
jne
pop
imul
pop
dec
or
fldcw
imul
daa
mov
lods
ficom
lahf
(bad)
and
mov
mov
cmc
pop
fidiv
test
dec
gs
jecxz
jge
(bad)
sti
mov
test
inc
cmp
inc
dec
in
mov
dec
aas
icebp
cmc
outs
cwde
sbb
cwde
sbb
sub
ss
dec
inc
lods
push
movs
adc
jmp
and
fsubr
call
xchg
xchg
cld
cwde
jb
out
pop
cli
retf
lods
idiv
mov
mov
and
pop
in
push
push
fs
test
out
mov
loop
mov
(bad)
stc
cmps
adc
cmp
add
ins
pop
in
sub
int
mov
fistp
adc
retf
jle
sti
test
call
mov
pop
fucomi
in
mov
cmps
adc
adc
mov
jmp
int
neg
pusha
movs
cmp
sub
push
and
cmc
int
cs
repz
mov
push
dec
jb
jl
js
scas
scas
pop
fld
mov
mov
pop
pushf
push
pop
dec
add
(bad)
lods
std
test
call
add
mov
call
push
or
push
inc
out
bound
in
jecxz
arpl
jl
adc
jle
pop
adc
sbb
data16
pop
nop
add
cmc
push
repz
pop
out
stos
arpl
ror
imul
jno
div
ss
sti
lahf
inc
cmp
test
shl
dec
inc
leave
in
inc
inc
lods
push
loopne
sbb
mov
xlat
stos
aas
outs
inc
mov
push
sbb
adc
(bad)
gs
mov
push
xchg
shl
mov
into
dec
fs
out
(bad)
leave
ss
lea
jecxz
sbb
push
dec
push
lock
sar
dec
inc
daa
push
gs
lahf
das
loope
jmp
xchg
jo
adc
push
test
pop
das
xchg
shr
cmps
and
jl
pop
jg
(bad)
imul
sub
fstp
iret
cwde
push
scas
mov
xchg
and
fsubr
jbe
pusha
iret
pop
and
fs
pcmpeqw
loopne
imul
in
daa
lea
icebp
and
adc
sub
push
add
or
push
mov
adc
or
loop
popf
nop
sar
pop
and
mov
popf
cld
mov
cmp
or
aad
das
dec
pop
into
sub
mov
mov
jecxz
add
cmps
pusha
or
cmps
inc
int3
add
mov
jmp
dec
pop
daa
movs
call
xchg
or
add
mov
loopne
mov
inc
push
jmp
xchg
mov
enter
xlat
inc
add
inc
(bad)
ins
sahf
jecxz
and
sub
pop
pop
mov
inc
pop
mov
push
jnp
fldcw
and
mov
or
lods
add
push
cmc
sbb
bound
jmp
ins
xchg
sub
dec
dec
fldpi
xor
outs
movs
and
mov
or
mov
pop
jno
or
pop
ds
out
nop
mov
and
repz
mov
(bad)
sbb
ja
je
xor
push
xor
push
out
mov
sub
sbb
sbb
imul
mov
int3
jle
dec
psubsb
cmps
push
xor
into
ret
dec
dec
retf
adc
adc
lahf
leave
push
js
pop
in
imul
frstor
cdq
jo
jns
ret
jo
jmp
fs
sub
into
mov
test
pop
push
retf
call
clc
into
fsub
outs
adc
fmul
pop
lea
sti
mov
imul
xchg
fldcw
cmp
xor
fs
call
cmp
push
jnp
and
jne
mov
(bad)
and
xlat
add
xchg
adc
sub
aad
into
jp
out
adc
cmp
cmp
in
xor
shl
pop
jae
sbb
cmp
sbb
out
pop
pop
mov
mov
pop
aad
mov
jno
pop
rcl
sub
mov
sbb
sbb
gs
pusha
mov
and
jg
fsubr
data16
loope
mov
dec
pop
ins
push
test
dec
inc
mov
add
dec
add
(bad)
out
(bad)
push
push
iret
push
mov
pop
pop
stos
sub
sub
aam
sub
pop
(bad)
mov
add
push
call
das
es
mov
mov
in
popa
test
in
sbb
lea
cmc
xor
and
xor
push
push
push
into
stc
xchg
fcomp
and
sar
mov
xor
test
add
adc
js
bound
ins
rol
sti
enter
sbb
mov
ret
shl
dec
push
movs
dec
loope
cdq
pop
jmp
test
enter
out
push
(bad)
sbb
js
push
push
add
sidtd
ret
aas
retf
inc
sub
cmc
add
in
and
mov
(bad)
js
aad
sub
mov
out
add
pop
clc
jno
sar
jmp
dec
xor
fld
test
(bad)
addr16
cs
cmp
test
jo
clc
popa
lods
test
sub
outs
dec
shl
sub
sub
fnstenv
addr16
into
push
jae
adc
add
out
shl
out
shr
jmp
gs
or
int3
sbb
sub
and
icebp
call
dec
in
mov
cmps
std
mov
jmp
jns
iret
or
cwde
xchg
pop
inc
jno
mov
mov
(bad)
inc
ret
sbb
mov
icebp
sbb
mov
aaa
out
retf
pop
jmp
mov
pop
add
aam
push
(bad)
ins
xor
dec
cmp
xor
adc
scas
cmp
ins
aas
pop
mov
test
xlat
xchg
cld
inc
hlt
xchg
mov
imul
fcomp
xor
cmps
mov
mov
inc
adc
ret
xchg
fwait
mov
pop
pop
jmp
mov
dec
add
jl
jle
(bad)
cld
test
inc
loope
shr
out
sub
jo
jne
jno
pop
clc
imul
inc
push
dec
mov
inc
cs
ficomp
mov
ja
cld
push
sub
jg
loopne
movs
jle
enter
cmp
sti
ja
aad
jns
fmul
xchg
mov
dec
sub
mov
dec
sbb
add
cs
ficom
cdq
inc
cli
sub
inc
(bad)
fucompp
and
(bad)
bound
scas
mov
lock
sbb
dec
and
(bad)
dec
push
popa
add
fsubr
sub
adc
adc
mov
inc
(bad)
xor
movs
push
out
jns
sub
popa
adc
lea
mov
(bad)
mov
cmps
mov
je
call
movs
sub
outs
xchg
inc
pop
adc
test
inc
idiv
cs
cmp
mov
add
scas
sar
mov
test
ja
arpl
repz
leave
push
adc
fdiv
stos
iret
bound
das
scas
push
sub
xor
nop
std
dec
pusha
jae
xchg
pop
aas
out
test
add
frstor
or
inc
std
push
sub
cmp
pushf
fidivr
sbb
(bad)
pusha
int
cli
xchg
push
in
sub
in
in
cdq
cmp
aas
xlat
sbb
mov
ins
mov
ret
fwait
pop
pop
inc
mov
rcl
jmp
or
test
outs
(bad)
cmp
dec
lds
mov
dec
xchg
(bad)
inc
push
mov
ret
mov
scas
push
ins
inc
cs
movs
xchg
adc
and
add
in
gs
stos
(bad)
pop
jnp
or
and
xchg
sub
lods
ins
(bad)
jo
add
aas
xchg
xchg
aas
cmps
(bad)
pop
pop
cwde
enter
(bad)
in
or
sti
movs
es
jp
sahf
cmp
cs
fild
sbb
add
add
sete
lock
cmp
pushf
sbb
pushf
in
addr16
mov
xor
push
xor
in
add
call
inc
push
sub
push
loop
(bad)
outs
xchg
mov
xchg
rol
daa
cmc
ret
pop
ss
adc
sub
sbb
jle
sbb
jb
(bad)
loop
mov
es
dec
gs
jo
mov
fidivr
scas
enter
xchg
inc
xchg
(bad)
in
popa
fisubr
xchg
mov
out
jbe
repnz
ror
in
xchg
cli
hlt
clc
pop
dec
ror
inc
mov
lods
push
nop
sbb
out
mov
cli
fnstsw
sar
lds
ins
jne
add
xchg
push
(bad)
mov
mov
aaa
cs
pop
enter
dec
lock
arpl
mov
pop
mov
mov
xor
sbb
loopne
lods
ins
cmp
cmps
rcpps
fisttp
outs
sbb
push
inc
es
push
fst
cmp
pop
stc
push
(bad)
and
add
mov
arpl
xchg
loope
cwde
xchg
pusha
in
dec
mov
fidiv
aad
dec
dec
loope
sbb
sub
shl
bound
std
mov
lock
and
out
shl
movs
pop
mov
xchg
in
cwde
retf
mov
fisttp
xor
out
fcomp
fadd
jle
pushf
popa
fisttp
mov
cmp
imul
mov
je
nop
or
shl
dec
jge
or
jmp
push
and
jns
and
ins
pop
aaa
movs
cmp
sti
push
fbld
cli
xor
call
push
pop
mov
jno
mov
sub
mov
xchg
pop
xchg
adc
mov
jbe
mov
sbb
pop
out
into
mov
xor
stc
and
sbb
je
cli
popa
push
dec
and
je
icebp
retf
push
out
xor
push
lock
ja
test
adc
pop
call
call
push
pushf
mov
dec
movq
sub
mov
xor
in
mov
scas
imul
test
add
sub
nop
les
add
jbe
dec
(bad)
push
adc
icebp
ja
(bad)
cld
xor
jne
movs
dec
jg
cmps
sbb
add
jge
push
pushf
push
and
fucomip
icebp
pop
jb
add
repnz
pop
(bad)
pop
int
dec
dec
icebp
dec
xor
outs
push
(bad)
mov
cld
call
add
out
stos
mov
shl
push
int3
dec
arpl
push
addr16
or
call
adc
cwde
js
mov
dec
clc
and
(bad)
cli
mov
pop
push
fistp
sar
dec
pop
(bad)
xchg
bound
push
or
inc
rol
ins
xchg
inc
lds
mov
cmp
push
and
jnp
sbb
imul
stc
stos
sub
mov
fsub
cwde
xor
mov
xchg
mov
sbb
mov
fcmovne
fild
ja
sub
inc
outs
push
xchg
in
xchg
les
xor
adc
or
sub
repnz
lds
xor
pop
test
pop
scas
jae
sar
inc
bound
(bad)
in
inc
jb
xchg
lods
xchg
lods
mov
adc
pop
xchg
pop
lds
cmc
inc
push
pop
mov
mov
test
in
ret
pushf
fadd
stos
mov
(bad)
ja
fld
in
les
xor
xchg
fnstsw
sub
stos
adc
jp
or
movs
call
out
lahf
aam
dec
add
push
xor
cmp
or
popa
mov
sar
dec
cmp
mov
add
mov
pop
call
aam
jecxz
and
call
xchg
call
mov
inc
pop
xor
sbb
lods
jns
mov
jg
pop
aaa
sbb
ja
dec
std
or
dec
(bad)
out
mov
call
pop
idiv
rcr
push
mov
mul
jmp
jp
sbb
add
sti
jl
xor
jl
mov
das
push
rcl
mov
std
ss
mov
sub
mov
push
adc
fwait
push
in
push
mov
or
fstp
(bad)
xor
or
cli
or
xchg
xor
movs
in
pop
push
loop
sub
cdq
sti
sahf
popa
jnp
pop
loop
pop
push
repnz
fld
scas
mov
add
push
or
dec
and
sub
(bad)
shl
mov
bound
pop
or
mov
xor
mov
sbb
mov
push
pop
jne
mov
(bad)
jl
retf
lods
inc
aas
arpl
jne
or
and
rcr
jnp
retf
mov
inc
lods
pop
pop
mov
bound
arpl
xor
shl
jbe
dec
add
push
jnp
add
sbb
cdq
adc
or
in
cld
repz
and
or
jmp
fld
jmp
mov
ficomp
mov
loope
iret
out
dec
xchg
retf
sahf
icebp
xor
shl
pop
jle
test
call
imul
clc
add
sub
adc
push
ret
aam
adc
sub
jo
sbb
jmp
push
add
ret
mov
or
imul
push
fs
fisubr
add
test
mov
push
pop
inc
and
push
cmp
shl
or
push
pop
loop
ins
out
fwait
cmps
sub
jae
push
push
cmp
or
inc
add
fsub
in
pop
jle
outs
nop
sbb
jnp
add
aad
sub
shr
imul
imul
fisttp
mov
movs
cmps
xor
jne
movs
mul
or
fisttp
pop
test
mov
xor
loop
adc
jp
shl
movs
adc
and
sub
(bad)
test
xchg
inc
mov
mov
pop
xor
mov
cmp
cmp
fwait
(bad)
push
jnp
cmc
xchg
xchg
xor
mov
retf
or
mov
test
xchg
dec
pop
hlt
retf
cmp
iret
movs
popf
int3
dec
jl
push
test
and
div
pop
mov
cmp
or
es
loopne
call
dec
ror
ret
cmp
rol
dec
cld
pop
mov
aam
add
sbb
stos
cli
scas
shl
in
xlat
dec
int3
push
dec
fistp
and
jp
cmp
push
test
cdq
jbe
mov
daa
cdq
cmp
cld
inc
pop
pop
into
pop
in
push
ins
sbb
mov
cmp
out
shl
adc
cli
daa
mov
mov
mov
mov
mov
or
jecxz
je
push
aas
inc
loopne
xchg
mov
not
add
test
sbb
(bad)
mov
inc
cmp
ds
xor
je
or
and
dec
xor
dec
imul
stos
sub
(bad)
es
jns
add
xchg
jne
mov
xor
mov
dec
mov
sti
sbb
add
dec
mov
in
jb
daa
iret
sub
mov
and
aam
test
nop
lods
push
(bad)
adc
push
inc
fmul
icebp
mov
gs
xchg
xchg
push
sbb
dec
jg
cmp
dec
dec
(bad)
repz
int3
cmp
(bad)
stc
fcom
in
and
mov
shr
pop
into
outs
mov
jl
mov
(bad)
and
popf
inc
push
fdiv
push
div
(bad)
or
cwde
(bad)
hlt
push
enter
outs
enter
leave
pop
jmp
mov
sub
xchg
out
add
ss
test
mov
jmp
push
xor
add
jmp
ja
(bad)
pop
inc
dec
and
sahf
jge
dec
pop
lock
aam
cmp
mov
mov
push
xor
loopne
pop
xchg
ficom
sbb
repz
or
jecxz
adc
lods
ja
pop
int
pusha
sub
jae
jne
sub
or
test
js
jle
pusha
push
inc
add
lods
int3
(bad)
arpl
add
retf
mul
hlt
call
jmp
fiadd
add
inc
sar
(bad)
(bad)
(bad)
jmp
mov
sti
add
(bad)
xchg
cmp
mov
mov
and
jecxz
pop
push
adc
cwde
xchg
inc
dec
dec
xchg
ins
lock
test
addr16
daa
hlt
cmps
(bad)
scas
and
cmp
lahf
mov
mov
push
les
inc
pop
cmps
stc
inc
lods
sbb
(bad)
cld
and
shl
push
jmp
cmps
cmps
adc
fdivr
inc
jns
ins
scas
lods
dec
imul
dec
imul
xor
repnz
dec
push
and
jg
je
dec
bound
cmp
sub
mov
dec
call
cs
mov
mov
mov
dec
movs
mov
fnsave
cmps
ds
mov
push
dec
test
pop
int3
in
lods
in
daa
inc
push
jb
cmp
dec
stos
(bad)
jmp
inc
sbb
xchg
dec
gs
jne
mov
sbb
je
outs
lods
add
or
ins
gs
sti
lods
hlt
stos
shl
or
dec
enter
lods
mov
sub
pop
test
jp
scas
jnp
add
push
push
in
imul
jne
outs
jge
mov
and
cld
mov
aaa
adc
mov
repz
xor
mov
mov
es
mov
dec
lahf
xchg
cmps
jge
retf
push
cmp
cwde
movs
dec
sub
push
inc
push
push
push
lea
add
shr
(bad)
retf
lods
jbe
xor
push
jae
aam
mov
jb
jns
xchg
lods
add
jbe
xchg
ins
pop
bound
xor
sbb
in
aam
shl
or
dec
out
sub
popf
ficomp
out
sahf
inc
mov
ret
mov
jl
xor
int
adc
and
inc
and
xchg
(bad)
or
jge
in
sbb
in
call
dec
fild
jno
movs
(bad)
iret
mov
das
(bad)
xlat
and
jmp
inc
or
rol
inc
test
loope
mov
int3
cmc
dec
sub
adc
in
test
retf
mov
adc
ficom
sbb
and
out
fdivrp
jbe
cmp
push
xlat
add
enter
loop
jmp
xor
cmp
xchg
dec
test
mov
pop
repz
fwait
cmp
adc
xchg
scas
ret
jno
in
cwde
push
mov
xchg
adc
ins
cmps
dec
idiv
into
mov
out
pop
es
mov
or
adc
mov
test
add
nop
mov
jns
and
sar
mov
and
dec
ja
or
hlt
mov
or
push
sbb
(bad)
ret
ds
aam
xchg
jae
stc
leave
cmps
out
jnp
xchg
outs
sbb
mov
xor
stos
mov
sahf
or
mov
movs
mov
dec
rcl
jbe
test
in
(bad)
fcomp
(bad)
sahf
or
(bad)
cmp
jge
int
icebp
sub
mov
repnz
adc
add
push
push
pop
iret
bound
push
ins
pushf
adc
mov
test
cmp
clc
nop
aaa
outs
rcl
or
retf
mov
ins
dec
ss
sub
popa
jl
mov
cdq
sbb
sub
sub
dec
outs
ror
xchg
jmp
ret
pusha
dec
in
mov
shr
out
jp
pop
xor
mov
es
out
fnstenv
push
iret
leave
adc
xchg
mov
xchg
stos
dec
xor
jae
xchg
fcomip
pop
popf
sub
sbb
cmc
in
dec
push
jp
inc
or
inc
cdq
dec
movs
mov
(bad)
je
outs
std
data16
pop
fistp
int
add
xchg
inc
xchg
or
or
push
xchg
gs
test
jne
mov
cmp
sbb
sbb
cmc
stc
pop
cmp
mov
jbe
and
test
lods
mov
and
mov
or
test
or
and
call
in
cli
mov
rol
push
fisub
sbb
sub
dec
jno
mov
mov
(bad)
push
pcmpeqb
push
(bad)
ret
lods
mov
loop
(bad)
lods
cmps
iret
call
fwait
pop
dec
addr16
syscall
dec
imul
dec
pop
lock
sub
in
out
mov
test
dec
cmps
xchg
out
pavgw
into
jnp
inc
sub
dec
retf
mov
stos
loopne
sti
xor
fsub
push
mov
sbb
xchg
ins
push
ins
xchg
icebp
bound
mov
xchg
sbb
dec
xor
ja
out
push
mov
out
mov
fsub
pop
jb
(bad)
adc
jbe
std
jle
xchg
es
(bad)
mov
adc
scas
mov
mov
jmp
xchg
mov
gs
add
cdq
out
mov
xlat
(bad)
mov
cmp
in
push
and
std
xchg
out
add
icebp
mov
cmp
jmp
lahf
pop
mov
add
repnz
les
inc
sub
pushf
ror
or
fld
sar
ins
add
sbb
(bad)
scas
addr16
cmp
sub
out
mov
jne
xchg
mov
push
sar
(bad)
in
cmp
jp
in
and
popa
xor
mov
lods
push
adc
jno
(bad)
lods
jp
pop
cmp
mov
mov
add
arpl
ins
xchg
mov
loope
call
sbb
clc
ss
in
or
sub
pop
nop
ins
inc
inc
push
xchg
xor
mov
and
dec
xor
xchg
mov
call
inc
out
inc
test
xor
arpl
pusha
out
jg
loop
sub
std
hlt
outs
sti
cmp
jne
fs
or
jl
cmp
and
ficomp
inc
jne
pushf
mov
imul
ja
jl
mov
cwde
scas
mov
and
mov
xchg
out
call
sub
icebp
rol
pop
sbb
xor
fstp
call
jp
and
jecxz
or
out
jbe
mov
mov
jmp
enter
inc
jo
inc
cmp
jnp
jge
xor
in
xchg
or
sti
xor
add
arpl
movs
sbb
sub
stc
inc
stos
and
fld
push
xchg
add
jl
outs
add
daa
popa
pop
icebp
ficomp
jno
(bad)
les
xchg
retf
push
mov
xchg
in
(bad)
sbb
fdivr
fnstenv
jp
cmc
cmps
adc
sar
jge
aad
nop
add
inc
repnz
jg
dec
int
scas
sbb
dec
(bad)
cmp
loop
xchg
sub
bound
or
mov
sub
mov
xlat
xor
rcl
lock
mov
(bad)
movs
fisubr
rcl
imul
mov
jae
leave
lds
push
scas
xor
mov
ins
mov
fcmovnb
mov
sbb
clc
outs
jecxz
jle
inc
and
push
dec
pop
mov
movs
mov
stos
jmp
push
loop
(bad)
dec
es
jp
jg
pop
mov
in
sbb
jg
in
and
mov
and
out
cmps
xlat
push
fisub
push
sub
pop
and
push
scas
ja
ror
div
pop
loop
je
sub
stos
push
ret
pop
rcr
cmps
adc
int
cmp
outs
dec
pusha
push
jmp
aad
arpl
(bad)
outs
inc
daa
(bad)
jae
hlt
sub
mov
inc
lds
movs
pushf
sar
cmp
mov
jg
sub
mov
fist
imul
pushf
fld
test
mov
push
dec
xchg
imul
lods
jg
add
pop
mov
add
in
aas
sahf
sahf
loop
dec
xchg
fimul
xor
call
push
push
retf
call
retf
clc
push
push
sub
dec
les
js
or
cld
mov
in
cmc
jmp
fisubr
pop
std
les
retf
iret
inc
mov
jecxz
xchg
test
xor
sahf
int
ins
jae
js
push
and
test
push
jno
arpl
cwde
cwde
push
js
sahf
movs
shl
mov
aas
and
lahf
adc
ins
dec
jg
add
call
jno
mov
jmp
xor
sbb
cmp
mov
ror
jno
inc
aas
xchg
fiadd
leave
sbb
fcmovnu
dec
inc
aad
sahf
fidivr
retf
cmps
cdq
push
dec
adc
enter
jno
loopne
nop
hlt
mov
xchg
dec
pop
add
inc
popa
outs
iret
pop
xor
xor
mov
xchg
inc
or
add
jge
ror
outs
xchg
adc
xchg
outs
movs
cmp
sbb
ror
jmp
aam
nop
data16
adc
lea
jp
call
jmp
mov
fucompp
vhaddpd
fs
rcl
scas
cmc
sbb
lds
(bad)
push
retf
je
movs
stos
sub
xchg
call
cmovb
cli
mov
pop
neg
pop
xor
gs
push
pop
pop
je
test
inc
shl
out
sub
aas
or
nop
ja
fistp
jb
xor
jmp
test
cmps
xor
(bad)
cmp
scas
cmps
sub
dec
mov
ret
mov
mov
call
popa
mov
stos
and
add
popa
mov
pop
iret
adc
fimul
cmp
mov
mov
outs
sti
jns
jno
adc
leave
add
adc
cmp
addr16
pop
mov
xchg
push
(bad)
jae
rcl
pop
push
fdiv
dec
jne
fadd
jl
imul
push
nop
xchg
in
xor
out
jns
and
sub
aam
push
jae
js
fstp
sbb
ds
(bad)
aaa
mov
cld
xchg
sahf
dec
daa
(bad)
adc
out
jl
dec
xchg
push
xor
mov
arpl
and
in
je
js
adc
call
fstp
push
(bad)
ror
idiv
sbb
mov
ja
lock
scas
xor
daa
call
add
cmp
pop
cmp
aam
push
loope
mov
pop
stos
outs
xor
push
xor
es
and
jo
arpl
xor
cs
lock
sub
adc
inc
mov
cmp
mov
test
adc
pop
(bad)
popa
stos
(bad)
sub
or
xchg
scas
lods
idiv
mov
call
xor
jmp
and
in
and
rcr
mov
pop
pop
ds
xchg
das
js
or
mov
pop
dec
shr
sub
fiadd
popa
popf
jbe
push
adc
stos
inc
jne
mov
jp
out
mov
ins
jo
shr
jbe
sub
out
cmovp
data16
inc
retf
or
imul
push
fwait
in
leave
stc
inc
xor
push
mov
jo
xchg
or
jae
daa
sub
jmp
or
pushf
xchg
fs
pop
sbb
mov
push
add
mov
inc
jo
push
dec
push
xor
dec
fs
xchg
jecxz
push
cmp
int3
or
nop
push
mov
sub
jnp
adc
pop
mov
test
add
aam
call
pop
jne
jno
jne
sbb
dec
cmps
aad
icebp
inc
outs
xchg
addr16
and
(bad)
or
lods
adc
gs
xlat
and
jno
call
xor
dec
jno
into
std
mov
xchg
jmp
dec
cli
push
in
ja
jle
rcr
ja
push
in
es
stos
sbb
cmp
sbb
jno
push
(bad)
push
stos
arpl
test
shr
adc
movs
xor
xchg
out
clc
or
(bad)
and
mov
call
xor
push
sahf
cmps
repnz
mov
imul
inc
js
inc
test
jecxz
or
mov
inc
xor
mov
(bad)
dec
stos
enter
cmps
mov
fist
aad
leave
fmul
xor
add
mov
rol
loop
and
pop
inc
sti
dec
out
(bad)
lea
and
pop
aam
xor
pop
push
aaa
call
sub
lock
inc
add
add
mov
mov
repnz
lock
int
inc
imul
addr16
enter
and
test
out
pushf
sahf
into
test
js
pushf
jbe
mov
mov
push
mov
push
pusha
cmp
adc
push
and
pop
xchg
cmp
jbe
ror
mov
stos
or
popa
sbb
or
pop
popa
repnz
sbb
adc
sbb
mov
fidivr
repz
cmp
int
mov
and
add
imul
(bad)
ret
out
fs
jbe
fwait
pop
dec
or
xchg
ja
outs
(bad)
mov
xor
sub
mov
mov
aad
(bad)
icebp
ror
clc
(bad)
pop
hlt
scas
fidivr
push
(bad)
push
mov
adc
sub
or
xor
xor
and
leave
fist
loopne
ror
ret
jle
addr16
pop
test
sub
ret
ins
adc
sbb
ret
mov
in
add
test
pushf
ret
(bad)
cmp
cwde
addr16
popa
and
xor
xchg
adc
daa
cdq
inc
jb
xor
add
sbb
adc
sti
jae
xor
pop
int
aad
or
adc
push
push
enter
(bad)
or
mov
xor
mov
xor
xchg
ret
out
js
dec
and
mov
out
fsin
mov
lods
xchg
aad
push
pop
fidivr
in
push
xchg
ficom
add
mov
and
adc
cmps
fs
push
pop
xchg
pop
in
push
mov
and
outs
and
mov
pop
push
je
xchg
mov
(bad)
mov
div
sbb
mov
jl
fimul
in
push
mov
aad
leave
inc
mov
lods
xchg
sbb
and
xchg
add
jg
loopne
js
ins
mov
mov
and
cmp
sub
mov
mov
xchg
mov
cmp
inc
retf
mov
pop
push
aad
pop
xchg
hlt
mov
or
clc
xchg
mov
sbb
(bad)
sub
adc
cmps
mov
in
adc
cdq
or
aad
xor
push
mov
mov
adc
icebp
inc
shr
loopne
pusha
xchg
dec
and
fcomp
stc
iret
(bad)
retf
pop
or
call
addr16
push
xor
mov
call
xchg
xchg
mov
cmps
mov
iret
pop
ja
dec
rcl
adc
ins
pop
jo
fs
xchg
adc
xor
enter
mov
icebp
popa
adc
and
scas
loop
out
add
xchg
or
jmp
pop
lahf
lods
xchg
or
sub
add
inc
shl
jns
lahf
inc
stos
adc
jecxz
dec
ret
push
outs
xor
inc
and
sbb
jb
retf
mov
xor
test
lock
neg
stos
gs
aam
inc
and
ret
or
ins
out
ins
inc
mov
mov
adc
jno
lods
bound
or
(bad)
mul
sub
aas
call
sub
push
pop
xchg
pop
call
and
nop
sbb
aad
js
adc
adc
cmp
add
mov
mov
popa
push
jmp
movs
xor
jecxz
jb
jmp
push
xor
in
mov
add
inc
in
xor
out
ja
scas
aad
pop
xor
(bad)
pop
pop
arpl
xor
mov
or
fild
cmps
repz
sub
inc
mov
sub
icebp
cvtpi2ps
and
mov
loop
xchg
pop
push
mov
leave
aaa
dec
scas
je
cmps
dec
add
cmp
daa
call
cmps
add
dec
cmps
mov
mov
push
in
jmp
pop
mov
dec
movs
and
mov
les
inc
xchg
movs
adc
(bad)
jns
xor
(bad)
out
jle
aas
dec
adc
add
(bad)
push
dec
rcr
pop
fyl2xp1
mov
adc
test
es
xor
sti
popa
mov
repnz
xchg
adc
mov
push
mov
mov
mov
fcom
jecxz
jl
lods
or
push
and
or
xor
loopne
sub
outs
cmp
push
frstor
jns
jp
push
je
pop
sar
xchg
pop
push
add
inc
cwde
cmps
loopne
mov
imul
stos
pop
lea
repnz
iret
cmp
sbb
cmp
mov
add
out
shl
xchg
cmc
sti
cmps
xchg
adc
push
and
pop
das
push
push
fnsave
(bad)
sti
dec
push
loope
dec
adc
fmul
jae
sbb
lahf
xor
cld
sbb
xor
out
fsubr
inc
mov
ror
test
out
mov
fild
cmp
nop
icebp
std
loop
sub
sahf
es
and
vcmpss
xchg
shl
jb
push
leave
mov
or
dec
(bad)
in
data16
or
mov
adc
jp
or
dec
push
fidiv
repz
cdq
or
xor
sub
imul
and
ret
xor
push
fcom
and
jne
pop
mov
add
addr16
push
mov
imul
xchg
movs
ins
psrlq
ja
call
out
xor
(bad)
outs
xchg
cdq
das
(bad)
sub
out
aad
jno
mov
xchg
ret
imul
mov
std
jg
jp
jle
add
jne
(bad)
cli
mov
daa
sub
mov
outs
push
inc
stc
and
je
ja
xchg
mov
fs
jl
imul
jno
mov
jne
shl
mov
lahf
ret
mov
fisubr
mov
js
rol
dec
mov
sti
jbe
dec
test
test
mov
jae
add
nop
aas
mov
push
nop
imul
aas
push
xor
mov
jne
(bad)
xor
push
mov
pop
arpl
rcl
add
cs
dec
xchg
mov
inc
ret
mov
fwait
push
shr
scas
mov
mov
aas
pop
ds
push
and
ffreep
rcl
add
adc
xlat
adc
bound
(bad)
sti
test
call
popa
and
repnz
jnp
mov
stos
xchg
inc
dec
test
in
hlt
sti
out
cmp
ins
adc
ret
inc
ficomp
shl
jno
xor
int
mov
in
shl
fnstsw
fwait
sbb
pop
adc
test
inc
jmp
mov
nop
dec
test
xchg
gs
push
jg
pop
popf
test
mov
mov
into
test
test
pushf
dec
ja
shl
call
adc
icebp
jo
aas
cmp
mov
jns
popa
mov
xchg
mov
jbe
and
dec
adc
mov
int3
movs
daa
jle
xchg
jae
fs
cli
gs
ins
arpl
or
push
(bad)
out
sar
jg
mov
int3
(bad)
mov
cmp
in
mov
bound
(bad)
cmp
mov
pop
les
dec
dec
dec
(bad)
aam
(bad)
mov
(bad)
mov
pop
into
jo
mov
shl
(bad)
imul
aad
push
and
js
inc
pop
adc
mov
mov
push
aas
adc
xor
fisub
jbe
dec
jmp
sbb
ret
and
inc
test
hlt
xor
dec
cmp
adc
loopne
(bad)
pushf
retf
inc
int3
add
add
mov
jge
mov
jle
sbb
scas
shr
mov
sub
push
or
push
test
push
add
push
cmp
inc
ins
rcr
lods
into
call
cmp
into
cld
mov
dec
mov
fmul
sbb
daa
cmps
pop
(bad)
addr16
lods
cmp
inc
cli
ss
inc
pop
xlat
push
addr16
add
arpl
int
pop
add
and
sbb
call
call
dec
mov
(bad)
rcr
std
stc
repnz
cmps
inc
test
xchg
xchg
nop
ds
lds
sbb
idiv
ds
adc
inc
jp
xchg
sub
ficomp
shr
ret
cmp
retf
pop
retf
push
imul
mov
stos
inc
ror
enter
into
mov
lods
clc
jb
dec
adc
shl
lea
cmp
jmp
jmp
adc
bound
cmps
fucomi
call
push
dec
mov
je
data16
or
retf
call
aad
jbe
xor
lods
mov
xchg
inc
jae
pop
div
ss
aaa
adc
cmp
adc
sub
xchg
xchg
mov
pop
mov
or
test
cmp
inc
ja
xchg
xchg
sbb
jmp
inc
inc
dec
and
cmp
sar
or
and
sbb
cmp
mov
xchg
push
jecxz
out
adc
ja
pop
push
rcr
pop
nop
js
push
cs
add
jmp
sbb
loopne
rcr
cmp
xor
in
hlt
test
adc
jmp
push
out
arpl
push
inc
pop
inc
shl
pusha
cmp
aam
and
mov
aam
xor
aas
arpl
sub
jbe
sub
cs
js
sahf
cmp
jne
jne
rcl
fiadd
xchg
loopne
push
retf
cmp
sub
jmp
dec
jno
clc
cmps
adc
(bad)
dec
enter
xor
sbb
jge
in
and
pop
push
pop
and
cmp
or
out
and
das
mov
int3
(bad)
xor
pop
cdq
popf
rol
scas
in
mov
and
aad
mov
xlat
sub
cmp
dec
push
movs
(bad)
jge
(bad)
add
inc
add
pushf
inc
(bad)
arpl
adc
push
or
xor
pop
imul
aas
xchg
push
das
enter
inc
adc
cld
test
ret
mov
loope
push
call
and
cmp
or
or
movs
add
pop
cmps
lods
xchg
dec
fstp
in
je
cmp
and
(bad)
scas
mov
mov
mov
add
push
iret
and
dec
jnp
pop
adc
or
out
shl
adc
pop
je
cmps
push
pop
adc
pop
pop
loope
aaa
add
scas
push
inc
lods
inc
cwde
cmp
fisub
and
ss
add
cmp
pop
cmp
int3
scas
cmp
mov
loope
data16
stc
repz
fisub
push
xor
or
sahf
ins
mov
call
and
pop
sub
scas
inc
dec
in
lods
imul
jmp
dec
pushf
xor
retf
retf
cmp
xor
mov
xchg
inc
mov
popa
movs
xor
sbb
sub
xor
pop
pop
push
mov
int3
mov
or
repnz
jbe
push
mov
hlt
sub
loope
adc
cdq
lods
call
dec
scas
push
stos
mov
push
popa
push
ins
sahf
or
mov
div
scas
jg
es
sbb
jbe
mov
outs
mov
in
sub
scas
(bad)
or
fs
adc
mov
popa
out
xor
xor
ret
and
cdq
push
clc
cmp
fs
out
fs
pop
int3
shl
mov
sbb
outs
std
xor
xchg
fisttp
adc
ins
ret
jno
dec
mov
cmps
call
mov
loope
xor
jne
les
inc
cld
mov
vunpcklps
mov
inc
add
sbb
imul
pop
pop
jle
push
mul
inc
pop
xchg
adc
pop
pop
cmp
xlat
sub
mov
ficomp
jge
mov
stc
icebp
push
sub
add
push
mov
jo
movs
ds
jb
call
mov
mov
int
xor
sbb
jb
lods
ins
lahf
and
and
fild
add
inc
out
cld
out
sbb
daa
add
std
dec
mov
in
xlat
fwait
or
addr16
test
dec
fbld
mov
int3
fsubrp
push
or
mov
add
cli
push
mov
mov
(bad)
popa
xor
scas
xlat
add
pop
mov
mov
aas
cwde
xor
push
ror
arpl
push
stc
add
(bad)
cmp
inc
mov
mov
ret
add
sub
dec
push
jae
mov
add
enter
add
loope
mov
or
add
(bad)
adc
pop
cmp
or
es
shr
fs
cmps
add
sub
in
push
lods
sbb
push
mov
dec
xor
inc
scas
ins
stos
ja
push
mov
loopne
pushf
popa
and
mov
retf
or
fidivr
add
js
loope
popa
fimul
dec
jle
push
inc
aaa
fisub
adc
adc
mov
push
icebp
fist
ffree
out
(bad)
(bad)
mov
test
out
xchg
push
adc
mov
dec
fnstcw
call
cdq
ja
cmp
outs
daa
xchg
push
inc
ss
(bad)
inc
adc
jp
jnp
les
pop
mov
bound
mov
sbb
scas
sbb
mov
pop
and
mov
repnz
cmc
adc
or
mov
jns
and
cmps
cmps
mov
sub
mov
cwde
adc
test
push
add
fcom
mov
sbb
cli
xor
push
cmp
xchg
pop
scas
shl
in
pushf
iret
pmaddwd
out
retf
mov
dec
clc
push
(bad)
cld
daa
push
and
adc
dec
cmp
push
test
pop
pop
mov
dec
in
stos
or
outs
push
imul
scas
mov
dec
push
mov
sub
push
pop
sub
mov
imul
int3
push
scas
sub
js
dec
add
call
js
push
pop
es
cli
cmp
int
ins
add
outs
dec
gs
mov
ret
cdq
popa
pop
push
and
push
mov
jp
dec
push
pop
mov
jae
jae
cmps
dec
or
inc
jecxz
pop
push
ja
push
sub
fcmovu
fild
das
push
out
call
iret
inc
aam
popf
jge
mov
lahf
mov
add
std
sbb
xor
push
sub
popf
inc
lods
pop
inc
push
push
sub
pop
cld
aad
lea
std
(bad)
cmc
adc
test
sbb
push
out
(bad)
cmps
into
inc
mov
sbb
dec
repnz
cs
sbb
xchg
fsub
adc
mov
add
sbb
push
enter
dec
mov
cmp
cs
cwde
pushf
out
add
pop
out
sbb
cld
pop
push
mov
jmp
push
mov
or
int3
add
sahf
pop
je
mov
rcl
adc
dec
ficomp
(bad)
ins
jp
pop
repnz
mov
cmp
fstp
inc
(bad)
jmp
mov
or
lahf
retf
jecxz
push
xchg
cmp
push
ins
cmps
ja
pusha
sub
jecxz
div
push
jae
push
adc
mov
and
lahf
and
add
push
fldenv
fwait
sub
imul
popa
iret
mov
push
mov
int
fmulp
and
mov
fcomp
ds
mov
dec
inc
dec
outs
sub
mov
push
or
mov
fiadd
nop
es
jle
or
ins
js
mov
inc
jge
add
aas
or
pop
repnz
jp
in
pop
int3
retf
add
sub
and
mov
loopne
push
nop
push
mov
lahf
mov
sub
sub
jmp
jecxz
icebp
pop
ret
sub
cwde
jmp
inc
ret
and
fmul
adc
sub
dec
loope
adc
sbb
iret
imul
or
jmp
lods
xlat
in
ret
xchg
sub
pop
ror
push
rol
iret
jge
cmc
pusha
lods
ss
mov
pop
(bad)
mov
retf
fwait
mov
xchg
mov
xchg
hlt
xchg
adc
and
push
int3
jp
imul
les
movs
ja
hlt
or
fistp
inc
dec
sub
xor
sbb
adc
call
pop
cmp
mov
jnp
xor
repz
cmp
or
xor
inc
repnz
xor
xor
lods
xchg
pop
nop
push
add
cli
ror
inc
pop
and
push
add
int
shl
out
add
and
movs
xor
jmp
jg
outs
sti
xchg
push
out
loope
dec
xchg
ret
xchg
dec
scas
jbe
jmp
outs
mov
cmp
or
push
mov
xchg
mov
push
mov
cmp
xchg
cmc
test
mov
cmc
cli
cmp
lds
dec
inc
mov
mov
dec
stos
and
in
fwait
repnz
jp
aas
inc
xlat
repz
adc
xchg
retf
hlt
(bad)
sbb
out
cmp
push
dec
cmp
std
call
or
cmps
mov
(bad)
sub
sbb
imul
js
arpl
jo
add
and
cmp
ret
add
push
pop
push
call
cdq
jl
push
push
call
push
aad
test
mov
cmp
xchg
inc
imul
int3
jl
aas
pusha
xchg
sbb
mov
(bad)
cli
fld
mov
push
neg
fcmove
xchg
js
inc
or
mov
frstor
rol
sub
loop
(bad)
pop
xor
ficom
cdq
inc
lods
retf
xchg
cmp
icebp
mov
lea
call
in
mov
jns
jmp
scas
retf
pop
fisub
inc
test
pop
ror
loop
repz
push
add
sub
inc
scas
mov
(bad)
ja
out
into
and
icebp
jg
or
frstor
and
sbb
xchg
leave
dec
jle
cmp
imul
or
(bad)
rol
push
mov
inc
clc
stos
icebp
push
call
pop
mov
shrd
aaa
push
sbb
shl
pop
add
push
mov
and
dec
xor
push
xlat
in
add
popf
retf
push
into
xor
out
in
repnz
dec
pop
fld
lock
push
iret
mov
ret
out
ins
fisttp
mov
mov
stos
pop
imul
mov
and
xor
push
mov
in
xor
pop
mov
mov
push
(bad)
adc
bound
daa
and
scas
jmp
nop
pop
in
mov
ret
xchg
pusha
cmp
pop
mov
inc
pop
or
sbb
fadd
jno
push
or
xor
(bad)
push
lods
push
xchg
mov
popf
arpl
cmp
div
dec
cs
loope
sub
add
aaa
(bad)
clc
push
push
inc
jge
mov
sahf
repnz
mov
mov
lds
popa
mov
mov
mov
jo
and
pop
cmp
gs
fwait
pop
enter
(bad)
pop
and
mov
pushf
int3
sub
inc
mov
pop
int
loopne
out
pusha
mov
stc
ins
and
sub
in
ret
mov
jo
dec
rcl
into
add
and
adc
shl
fisttp
jecxz
inc
pop
ds
sbb
gs
sbb
xor
dec
inc
adc
nop
sub
push
xchg
loopne
lea
mov
sub
dec
movs
scas
mov
mov
sbb
addr16
cli
dec
mov
xchg
jbe
add
fidiv
lds
xchg
mov
xchg
adc
ret
mov
lea
hlt
out
gs
sub
out
(bad)
sti
outs
dec
jp
jae
into
jmp
pushf
push
mov
ror
cmp
mov
push
mov
stos
rol
add
add
jno
sub
pushf
mov
sub
out
push
or
jmp
xchg
movd
repz
sbb
sub
in
mov
jp
lds
push
inc
fs
mov
jne
mov
in
stos
jae
cld
sub
out
cld
dec
jno
cmp
and
frstor
push
adc
scas
and
or
pop
stos
fst
cmc
(bad)
dec
sbb
lods
das
cmp
outs
jne
adc
sub
xchg
data16
sahf
jne
call
push
inc
mov
lods
and
or
js
pop
inc
mov
lods
cmp
pop
out
(bad)
cmp
test
aaa
adc
jb
pop
lods
int
jmp
mov
cmps
mov
pop
popf
add
push
xchg
push
jg
rol
pop
icebp
lock
test
xchg
daa
pop
mov
jb
ss
and
js
in
ret
js
cli
hlt
or
mov
or
nop
and
call
loope
mov
repz
cmc
xchg
rcr
idiv
jno
cmp
push
mov
inc
add
jo
pop
fst
out
sub
jbe
int3
mov
mov
mov
loop
push
jnp
jmp
mov
pop
aaa
xchg
inc
dec
jmp
inc
stos
xchg
jnp
in
mov
and
jbe
ss
retf
xchg
dec
in
pushf
in
fdivr
imul
jbe
inc
xchg
mov
add
pop
test
mov
cmp
push
add
xor
mov
push
jns
retf
xlat
data16
stc
sub
(bad)
jp
jecxz
mov
dec
inc
scas
pop
and
sub
adc
pop
das
sahf
push
mov
sbb
and
test
jbe
xor
mov
jns
mov
xchg
aam
and
test
jne
outs
sub
sub
test
mov
rcr
xor
push
sub
pushf
xchg
add
and
in
sbb
or
adc
sti
jb
add
add
jns
adc
mov
or
fcomp
inc
inc
test
mov
ss
ins
aaa
rol
retf
sar
mov
inc
mov
cmc
jae
dec
lock
pop
aas
je
movs
jae
int3
mov
jns
in
ins
retf
mov
int
and
push
xchg
sbb
loop
jmp
stos
jns
dec
cmps
loop
mov
div
add
xchg
cmp
iret
inc
add
retf
cwde
(bad)
jge
clc
mov
cmps
or
ins
and
mov
adc
loopne
cmc
imul
retf
and
push
cmc
vpmaxuq
jo
cmp
add
cmc
(bad)
dec
mov
or
cs
shr
movs
pop
dec
scas
cmp
push
mov
sbb
mov
sbb
fs
dec
mov
push
adc
sub
movs
xchg
add
push
fidiv
mov
or
mov
loopne
fisubr
movs
fsubr
push
push
add
jae
sti
mov
lea
ja
inc
icebp
pop
mov
(bad)
pop
mov
mov
test
jp
cwde
sahf
inc
xchg
xchg
fs
sbb
sbb
enter
pop
inc
adc
mov
jge
xor
mov
sar
outs
es
xchg
xchg
xor
jo
ins
ret
sub
lea
mov
or
xor
out
push
adc
ja
aas
jbe
mov
pop
and
repnz
fisub
mov
hlt
pop
push
inc
dec
comiss
and
jno
cmp
fdivr
push
rcl
adc
popf
or
(bad)
imul
ins
in
rcl
retf
(bad)
adc
mov
xor
popa
mov
ins
sahf
dec
cmp
inc
ret
mov
inc
fcomi
sub
daa
jecxz
ret
push
loop
aas
cmp
mov
fst
test
lods
ins
xor
inc
mov
push
fisttp
enter
pop
adc
cmp
xchg
xchg
(bad)
push
sbb
dec
xlat
xor
nop
adc
mov
cmps
loop
gs
cmp
and
shl
sbb
imul
std
outs
or
and
jne
test
dec
repz
mov
je
vmaxss
mov
inc
dec
mov
test
frstor
adc
push
mov
jmp
mov
and
imul
out
sub
pop
adc
ja
cmp
mov
and
pop
jb
cwde
inc
mov
and
pop
jae
out
jecxz
jnp
sbb
ror
fwait
xchg
dec
mov
push
mov
gs
push
mov
leave
push
push
mov
lods
cmp
(bad)
clc
(bad)
ror
sub
sub
imul
push
adc
jg
imul
push
and
daa
ins
cli
or
mov
ffree
cmpxchg
push
jg
sub
movs
mov
imul
enter
adc
dec
xchg
mov
dec
retf
dec
repnz
(bad)
imul
addr16
jg
sbb
inc
xlat
fcomp
push
inc
xor
stos
add
rol
movs
fdivr
repz
cmc
adc
mov
icebp
jmp
into
sbb
mov
xor
mul
ins
mov
fldenv
int3
or
mov
test
sub
es
push
call
nop
nop
call
mov
cmps
add
fisub
ret
mov
xlat
(bad)
dec
(bad)
jg
or
data16
aas
mov
pop
cmps
inc
inc
fnsave
jno
adc
mov
add
in
(bad)
cli
mov
daa
cld
xor
xchg
xchg
mov
dec
jns
cmp
sub
dec
icebp
mov
sbb
or
adc
mov
out
ins
push
inc
stos
xchg
mov
cmp
in
mov
xchg
test
push
mov
or
pop
fmul
pop
hlt
mov
inc
scas
call
(bad)
dec
pop
mov
enter
xor
popa
lahf
xor
data16
jns
hlt
bound
jno
movs
pop
pop
fwait
scas
repz
fld
mov
lods
loope
ficomp
shr
daa
jno
pop
ss
stos
ds
mov
mov
daa
inc
add
int3
xchg
or
pop
pop
push
(bad)
in
bound
mov
aad
lods
xor
std
rcr
outs
fdivr
or
out
cmp
xchg
jmp
mov
pop
adc
aam
cmps
fcmovbe
sbb
retf
push
cdq
sub
push
mov
or
(bad)
sar
je
push
or
adc
cmp
xlat
dec
add
jmp
inc
jecxz
cmps
mov
push
gs
ds
and
(bad)
das
popa
xlat
mov
out
jmp
lock
lea
ds
jnp
addr16
scas
cwde
sahf
ret
sbb
mov
outs
mov
cmp
aam
push
sub
fs
inc
xchg
idiv
cmc
and
mov
int3
sub
fs
add
into
jno
daa
sub
aaa
fs
mov
lods
jb
and
stc
dec
xchg
(bad)
or
sub
pop
jg
jo
pop
xchg
in
movs
enter
stos
retf
mov
iret
(bad)
scas
out
inc
adc
bound
cmps
(bad)
movs
mov
pop
cdq
inc
add
ds
popa
in
rcr
clc
and
lea
adc
aaa
icebp
push
stos
xor
add
rcr
int
aam
std
push
call
ret
cwde
mov
(bad)
and
and
dec
fld
mov
int3
aad
adc
push
hlt
sar
cmp
cmp
jb
repz
sbb
jle
inc
ret
retf
jle
jecxz
jmp
xor
icebp
(bad)
cmps
pop
call
xchg
daa
cs
xchg
cmps
or
shl
sub
sbb
cmp
and
vmwrite
loopne
ins
jb
sub
or
mov
in
xchg
out
test
movs
adc
inc
retf
(bad)
in
nop
sub
jl
mov
shld
or
sub
jmp
sar
cmc
dec
dec
mov
or
mov
fs
shl
popf
cld
mov
add
lods
dec
dec
ror
leave
jl
mov
push
jg
push
cwde
jecxz
aaa
outs
test
mov
popa
mov
inc
jg
adc
and
pop
mov
xor
and
jecxz
jge
sub
or
imul
in
push
aas
rcr
xchg
sti
jmp
cwde
jp
nop
stos
aad
adc
cmp
scas
xchg
lahf
int
xchg
mov
lods
or
fsubr
fadd
cld
add
cmp
ds
shl
mov
cmp
mov
add
pop
dec
and
cmp
dec
add
xchg
stos
int
stos
(bad)
xchg
lods
dec
pop
push
cld
ds
sbb
add
cwde
push
ret
js
outs
add
or
stos
fcom
push
ins
in
xchg
push
xchg
lods
sub
push
aas
adc
shr
push
rcl
xchg
out
(bad)
adc
fucomp
cmps
aas
push
jbe
int
adc
add
popf
sub
lahf
push
dec
js
int3
addr16
repz
lds
or
sbb
mov
or
cli
xor
pusha
cwde
enter
pop
neg
not
jns
jno
mov
lds
ret
mov
push
cmp
fwait
sub
and
(bad)
mov
add
inc
jbe
cli
add
mov
dec
push
jmp
cmp
or
addr16
ja
push
adc
mov
sbb
add
(bad)
ret
xchg
jge
addr16
xor
cdq
outs
test
sti
dec
xchg
mov
cmp
sub
push
fwait
mov
push
leave
xor
jmp
aaa
(bad)
or
sti
mov
jno
inc
sub
(bad)
arpl
loop
(bad)
out
jecxz
push
adc
out
sbb
adc
push
mov
pusha
mov
pop
aad
out
lods
adc
test
lock
cli
js
das
dec
hlt
dec
and
xchg
push
test
mov
cmp
lds
jmp
popa
addr16
int
fst
dec
sub
retf
lock
dec
push
ror
jmp
sar
jns
mov
arpl
aas
jbe
xchg
dec
add
cmps
(bad)
fld
sub
inc
add
xor
int3
out
sbb
cli
jne
shl
inc
fs
retf
sub
and
and
jo
cmp
ins
cmp
jbe
cmp
push
jo
fcomp
mov
or
adc
sbb
push
pop
data16
push
lods
pop
mov
mov
psllw
out
mov
and
daa
leave
xlat
mov
mov
sub
(bad)
xchg
sbb
dec
and
shl
cmp
xchg
xchg
pop
fdivr
rcr
jle
mov
ds
adc
adc
adc
sub
jns
imul
and
jp
jns
test
dec
cmp
mov
mov
retf
ins
bswap
arpl
daa
xchg
push
xor
xor
shrd
je
fcom
or
sbb
or
retf
enter
repz
out
xchg
bound
ss
loopne
fwait
hlt
fcmove
cmp
pop
jecxz
pusha
sub
xchg
mov
out
xor
xchg
imul
mov
jo
movs
cwde
ds
add
dec
into
leave
add
addr16
xchg
adc
mov
pop
xchg
inc
push
out
out
loopne
sbb
mov
in
pop
lds
clc
mov
mov
xchg
push
jb
(bad)
pop
lahf
xor
cs
inc
pop
(bad)
jmp
(bad)
sub
das
fwait
sbb
ss
cld
repz
sti
ins
mov
pusha
mov
rcl
xchg
or
pop
and
out
test
rcr
into
sub
push
mov
popa
inc
xlat
jl
cmps
(bad)
mov
pop
fistp
adc
pop
mul
nop
xor
gs
xchg
push
not
pop
ret
dec
xor
jge
push
adc
mov
gs
in
imul
mov
sti
rcl
mov
int3
fcom
ret
inc
pop
ret
sbb
dec
leave
sahf
xchg
(bad)
sub
into
test
mov
inc
psllw
inc
aam
dec
test
add
mov
inc
inc
out
and
fwait
test
cmp
sub
or
pop
jmp
bound
mov
loopne
(bad)
adc
cmps
dec
pop
sar
arpl
int
clc
das
fidiv
ja
jl
jbe
sub
retf
mov
sbb
push
in
repz
mov
sahf
cmc
xor
inc
push
mov
addr16
xchg
pop
adc
ret
jge
cmp
add
cmp
lods
mov
lds
rcl
xchg
cmp
inc
sub
call
enter
mov
mov
xchg
cmp
stos
mov
inc
cwde
sub
cmp
lea
in
lock
adc
push
cmps
mov
add
jno
mov
cmp
in
cmp
stos
inc
scas
pop
enter
inc
(bad)
clc
push
or
xor
push
cmp
and
(bad)
or
push
loopne
shl
(bad)
les
fcomp
xchg
iret
fild
push
sub
aam
dec
inc
adc
jbe
leave
adc
cmp
es
(bad)
hlt
pusha
add
sub
mov
dec
scas
add
dec
ficom
xchg
adc
ins
loop
popa
jae
push
daa
popa
inc
popa
bound
xchg
in
mov
int3
sub
push
inc
frstor
shl
add
(bad)
imul
adc
and
sbb
cwde
cmp
jp
jb
lods
jge
fs
xchg
in
pop
inc
ret
sbb
mov
mov
sti
mov
outs
call
sbb
mov
mov
rcr
pop
out
into
aad
cmp
push
or
jb
das
in
adc
out
pop
and
jp
leave
icebp
enter
rcl
daa
stc
jmp
fidiv
xlat
dec
xor
push
in
mov
mov
pusha
jbe
shl
mov
jmp
daa
and
cmp
iret
dec
mov
push
inc
xchg
rol
loope
push
retf
xor
xor
call
data16
fisttp
out
jl
pop
inc
test
cs
lods
mov
adc
call
and
mov
dec
and
js
(bad)
xchg
cmp
inc
sub
pop
out
sbb
rol
dec
repz
ret
sbb
retf
cli
popf
adc
mov
inc
mov
hlt
retf
imul
and
cwde
shl
ins
movs
mov
je
dec
xchg
dec
clc
jmp
rcr
in
cmps
sar
jmp
ror
sub
mov
and
sbb
loope
ins
and
fmul
add
inc
lahf
jecxz
in
push
or
adc
lock
arpl
rcl
in
out
repz
std
sbb
mov
pusha
ds
pop
xchg
cld
sub
stc
repz
stos
call
xor
push
dec
mov
or
ret
bound
mov
(bad)
jb
fnstcw
sbb
nop
jb
dec
pop
repnz
dec
sub
pusha
repnz
mov
test
jp
aaa
and
mov
cmps
mov
shl
push
adc
jp
addr16
xor
or
adc
and
jae
jecxz
popa
fs
sbb
jmp
loopne
rcl
add
int3
movs
cdq
and
daa
mov
cmp
inc
aaa
add
jmp
cmp
call
rcr
xor
sub
mov
dec
shl
dec
pop
loopne
popf
in
aas
pop
bound
sub
imul
add
sbb
adc
outs
aas
cmp
test
or
mov
adc
loop
jecxz
dec
xor
fadd
test
sub
lahf
hlt
lods
std
scas
popa
int3
lods
int3
jle
dec
repnz
cdq
adc
stos
(bad)
int3
sbb
or
xchg
jl
outs
nop
test
gs
out
mov
stc
or
inc
cmps
sbb
cmc
jns
scas
fs
pop
sbb
dec
dec
pop
inc
pop
mov
push
(bad)
cmps
dec
(bad)
fxam
cmps
cmp
enter
ss
fiadd
pop
js
pop
mov
fdivr
mov
outs
sub
add
mov
lods
inc
mov
mov
pop
or
or
aas
push
(bad)
adc
push
adc
stc
dec
dec
cwde
stc
sub
mov
ret
or
aam
mov
sub
mov
stc
sbb
fldcw
cmp
ret
pop
inc
pop
ds
aad
add
add
gs
pop
cmp
daa
or
movs
mov
xchg
loop
fiadd
lods
repnz
lock
xchg
xchg
dec
aaa
sar
xor
data16
mov
sbb
mov
mov
pop
add
scas
cmp
fdiv
mov
(bad)
mov
out
cmp
cmc
jno
jne
add
retf
adc
nop
loop
rcr
lods
mov
std
cmp
and
jnp
xchg
or
sti
ins
and
in
mov
je
add
mov
call
add
ss
jmp
fldenv
stc
ds
push
je
jbe
call
aad
shr
adc
add
mov
inc
mov
push
ror
icebp
lahf
loope
cwde
jl
in
repz
jbe
mov
xchg
sub
les
xchg
lahf
dec
mov
clc
out
aam
stos
sub
lock
mov
xor
sti
aam
mov
add
xchg
push
pop
mov
sub
push
sub
add
(bad)
jae
jmp
mov
std
mov
out
in
push
and
cmp
mov
addr16
nop
mov
cli
push
iret
xchg
ss
outs
jno
clc
imul
jl
pop
mov
xchg
sub
dec
dec
pop
sahf
int3
repnz
mov
out
sar
xor
cmps
mov
loopne
dec
cli
add
repnz
mov
pop
mov
push
fcmovnb
fisub
lds
nop
fild
xchg
test
adc
pop
fsubr
pop
and
jge
mov
push
push
dec
dec
push
and
fwait
lea
cmp
hlt
cmp
jb
jb
mov
fwait
pop
add
inc
or
jg
test
movs
rol
inc
mov
pop
lods
xor
call
sbb
jmp
sub
ret
pushf
or
(bad)
nop
push
not
push
mov
movs
aam
cmc
repz
xor
mov
(bad)
adc
sub
out
cmp
push
xor
cwde
inc
mov
sahf
cmps
xor
arpl
mov
jnp
jno
in
or
inc
dec
push
out
cdq
daa
shr
or
call
addr16
dec
adc
out
les
push
push
and
ror
jp
mov
jmp
pop
movs
ror
gs
push
inc
inc
jge
fcmovb
cli
mov
out
in
test
fwait
mov
sbb
dec
cmp
(bad)
std
in
push
or
push
jno
scas
lock
jle
mov
or
cs
pop
into
push
inc
mov
fld
stos
sub
imul
retf
aaa
cmp
sub
fs
sbb
push
lods
push
dec
jl
into
push
inc
jbe
cs
jne
jmp
cli
aam
lds
fs
cdq
popf
imul
ins
mov
or
pop
mov
mov
mov
mov
adc
push
pushf
jg
into
add
mov
std
inc
retf
arpl
and
stos
pop
and
addr16
and
call
pop
jbe
sub
mov
mov
pop
sub
pop
daa
je
and
add
loop
test
data16
push
leave
ins
repnz
test
outs
addr16
cmovbe
test
jle
cmp
sub
out
fwait
ss
cdq
jl
addr16
sub
in
out
and
xchg
aaa
mov
jns
mov
fdivr
xchg
and
sub
adc
dec
fsubrp
clc
popf
(bad)
dec
in
and
add
(bad)
icebp
dec
push
je
movs
arpl
ins
sbb
in
pop
jnp
(bad)
fisttp
iret
push
sub
jno
add
sub
cmp
(bad)
lods
cmps
xor
es
and
xchg
in
call
icebp
mov
and
push
loop
add
out
add
jge
sbb
ficomp
pop
pop
lahf
subps
or
adc
push
xchg
cmps
sub
leave
hlt
in
xchg
arpl
xor
sbb
adc
dec
sbb
jnp
mov
cwde
inc
or
jp
idiv
dec
out
es
mov
call
xor
add
(bad)
cwde
mov
lahf
mov
fbld
test
psubq
ret
jecxz
cwde
or
cmps
xchg
inc
mov
push
aam
leave
sub
dec
pop
jge
mov
mov
dec
cli
or
add
pop
ret
mov
and
or
int3
and
outs
jle
xchg
lods
fs
ins
jmp
sub
add
daa
jle
push
jg
test
inc
dec
mov
cli
mov
sub
out
test
inc
mov
push
dec
and
add
jnp
or
xchg
in
mov
int3
push
sbb
jns
dec
div
dec
pop
ins
mov
add
mov
xchg
mov
cmp
cwde
sahf
(bad)
sbb
push
pushf
jmp
add
(bad)
in
sti
div
pop
inc
lds
push
xchg
and
mov
xchg
lods
push
add
arpl
mov
je
rcr
sahf
stc
test
sti
imul
xlat
rol
inc
add
out
dec
xchg
cmp
rol
add
pop
loop
stos
and
adc
push
(bad)
leave
and
xchg
(bad)
pop
iret
push
dec
push
fwait
adc
into
lods
mov
scas
or
dec
cmp
xchg
push
iret
push
jbe
or
xchg
inc
aas
mov
mov
or
sub
mov
and
int
(bad)
cli
(bad)
mov
in
add
retf
pop
vmovapd
push
pop
jecxz
inc
adc
ror
(bad)
hlt
int3
and
(bad)
xchg
aaa
cld
movs
fild
or
push
lds
(bad)
shl
jge
push
ficomp
cwde
adc
lods
sbb
push
sub
mov
push
mov
jbe
mov
enter
pop
sub
pushf
loope
ds
fdiv
xor
stos
es
mov
mov
jns
jmp
dec
loope
jge
lods
xchg
xor
adc
dec
into
inc
sub
mov
dec
ret
jne
mov
addr16
stos
js
add
push
jle
dec
xor
xor
sub
setbe
sub
in
inc
xchg
or
pop
aad
and
(bad)
retf
rcl
mov
bound
mov
cmc
dec
iret
in
jno
imul
outs
das
push
cmc
add
fadd
jg
push
jbe
out
and
xchg
jae
fwait
jge
add
xor
or
xor
js
sbb
repz
(bad)
adc
push
les
bound
jb
les
in
and
lea
xchg
push
mov
sti
jb
jbe
(bad)
leave
(bad)
imul
pop
adc
jns
and
shl
jnp
test
xchg
sbb
aaa
push
loop
xor
inc
pop
or
hlt
std
jmp
adc
xor
push
cwde
pop
xchg
shl
sub
and
ret
jne
mov
or
mov
stc
bound
jmp
dec
jno
movs
ss
stos
mov
hlt
repz
cli
dec
cmp
dec
add
aad
jp
push
or
xor
jmp
int3
mov
test
xor
int3
jb
test
push
not
push
cmp
xchg
das
or
jp
jp
je
sti
mov
cmp
nop
movs
or
int
sub
fmul
mov
out
imul
mov
repz
cmp
je
inc
adc
xor
inc
lea
sti
mov
loopne
push
cmovno
dec
xchg
repz
sar
retf
int
add
enter
fldl2t
mov
mov
stc
into
sub
leave
jge
in
lds
das
test
xchg
je
into
popf
push
loop
aam
xchg
mul
sub
cmp
jmp
ret
pusha
mov
fadd
add
loopne
mov
shl
jno
jecxz
xchg
cmp
mov
mov
mov
aas
(bad)
fisubr
sar
cli
cmc
cld
xchg
mov
dec
inc
mov
xchg
sahf
outs
aaa
fimul
popf
xor
retf
inc
shl
cmp
cmp
repz
inc
outs
cmp
pop
jns
xchg
call
arpl
addr16
test
jmp
loop
shr
mov
call
sbb
data16
rcr
adc
pop
and
sbb
sub
jne
xor
jnp
inc
and
into
es
imul
cli
sar
jp
push
mov
jno
adc
xchg
enter
jns
enter
pop
call
outs
cld
xchg
cwde
sbb
xor
(bad)
test
cmps
dec
icebp
jge
sub
adc
push
jp
mov
mov
jecxz
xor
imul
mov
bound
mov
popf
(bad)
cmp
mov
mov
out
dec
lea
sub
and
adc
pop
fistp
jb
mov
xchg
mov
or
aam
jo
out
leave
ror
ins
and
scas
push
jecxz
cmps
cld
mov
or
sar
xchg
mov
dec
and
call
sbb
sbb
xchg
push
sub
cmps
push
je
(bad)
call
mov
fisub
ret
inc
mov
mov
dec
mov
loopne
(bad)
fcomp
icebp
jl
inc
jae
bts
mov
ins
add
and
and
leave
hlt
div
mov
clc
jge
push
mov
push
scas
push
pusha
loop
shr
ret
(bad)
mov
sbb
mov
aas
ja
lods
outs
push
fimul
cmps
(bad)
dec
fs
jg
ret
jmp
pop
dec
pop
cmc
mov
fwait
shl
mov
mov
and
movs
jle
jns
sahf
mov
mov
das
push
mov
sbb
cwde
fisttp
lock
adc
push
test
aaa
jge
sub
add
scas
adc
pop
push
xchg
hlt
mov
xchg
das
xchg
inc
sbb
xor
jl
xchg
pop
mov
loope
pop
pop
mov
addr16
mov
outs
loope
pop
out
xor
jp
dec
shl
out
mov
ficomp
cs
std
jl
call
mov
xor
add
jns
sub
loop
outs
mov
xor
loope
cmc
maskmovq
xchg
gs
push
nop
mov
mov
pop
sbb
add
lahf
ins
es
or
cs
adc
jno
jl
inc
xor
mov
sbb
pusha
sub
fidiv
or
adc
xchg
inc
out
pop
leave
inc
aam
push
jmp
fisubr
jl
data16
adc
and
xchg
cld
in
pminsw
lahf
sbb
add
xchg
loope
or
pop
push
push
addr16
lea
jmp
ror
xchg
out
je
xchg
fld
sbb
neg
imul
inc
fcom
frstpm(287
ds
out
cmp
mov
rcr
pop
data16
into
clc
dec
pop
xchg
adc
inc
lea
sar
iret
inc
mov
fdiv
stos
fmul
inc
sub
in
lods
mov
push
push
nop
jno
sub
mov
test
cwde
pop
push
push
ret
sub
dec
ja
pop
sti
fs
inc
fmul
mov
mov
add
adc
jnp
ror
call
and
pop
icebp
aaa
call
and
cmc
test
sbb
push
pop
repz
aam
xchg
loop
xchg
es
mul
or
leave
imul
xchg
lods
out
mov
ins
jmp
call
(bad)
cmc
mov
sbb
pop
bnd
pop
xchg
movs
movs
movs
outs
xor
pop
lods
jbe
dec
cmp
inc
dec
or
inc
(bad)
cli
icebp
inc
jle
pop
nop
add
sub
mov
push
call
jbe
mov
cld
int3
xor
sbb
lahf
das
sub
sbb
in
bound
push
add
sbb
shrd
and
cli
or
das
fdivr
push
jl
pop
push
lods
xchg
ret
lock
daa
dec
addr16
aam
fistp
test
add
pop
cmps
mov
push
push
enter
loope
cmp
fmul
push
clc
(bad)
and
dec
loopne
or
(bad)
jg
mov
dec
and
push
pop
jb
inc
push
retf
shr
pop
call
sbb
jb
inc
xchg
pop
jecxz
fadd
add
mov
or
xchg
push
jns
mov
mov
mov
aas
jl
test
or
cld
sbb
int
aam
outs
lods
aas
div
pushf
retf
arpl
cmp
out
loopne
push
in
vmread
jns
cmp
dec
ror
pop
sbb
push
in
sbb
scas
xor
loope
xor
push
hlt
clc
jo
ret
mov
mov
aam
(bad)
dec
xor
dec
dec
mov
inc
inc
inc
mov
jp
mov
cwde
dec
cmps
scas
and
cmp
cdq
inc
call
xchg
xor
inc
mov
push
sahf
iret
in
lock
call
jmp
sbb
push
sahf
fmul
sbb
mov
arpl
movs
pop
loopne
adc
mov
stos
pop
(bad)
xor
std
stos
fidiv
inc
mov
outs
sbb
pop
mov
mov
dec
mov
push
and
cmp
jne
and
mov
loop
sbb
sbb
in
(bad)
and
and
int3
adc
cwde
adc
sub
fisttp
sub
popa
outs
jle
call
xchg
cmp
mov
mov
push
cmps
adc
cwde
xchg
outs
jg
into
mov
lea
pop
stos
mov
ficom
imul
shl
adc
and
pop
test
adc
stc
(bad)
push
add
xchg
les
push
sub
ficomp
adc
out
adc
ss
mov
imul
jmp
fisttp
movs
or
nop
mov
cmp
push
mov
rol
div
or
imul
cmp
lea
ins
outs
leave
das
sbb
push
jge
ss
and
leave
lock
out
or
js
cmp
sbb
(bad)
mov
add
psubsb
push
pop
sti
dec
rcl
div
sbb
ret
push
sub
dec
pop
sar
in
xor
push
in
sbb
adc
push
inc
add
mov
xor
sub
push
add
std
push
in
stos
ds
imul
inc
inc
dec
xchg
rcr
jp
adc
mov
out
sbb
js
jge
mov
pop
scas
add
(bad)
jmp
in
mov
jecxz
jp
and
push
frstor
arpl
mov
retf
outs
xor
or
dec
or
rcr
fidiv
mov
xor
sub
in
scas
in
(bad)
ins
xchg
inc
aad
and
cs
dec
xchg
sbb
call
xchg
pop
cmc
test
sahf
mov
(bad)
or
jbe
xchg
push
retf
aaa
repnz
out
xor
icebp
dec
leave
and
add
cmp
call
das
outs
pop
mov
mov
mov
dec
cmc
out
sub
mov
pop
mov
mov
dec
pop
dec
movs
popa
push
sub
mov
mov
inc
iret
aam
jecxz
push
xor
cdq
std
aad
test
mov
push
xchg
adc
cmc
mov
mov
sbb
inc
stos
retf
lds
and
in
hlt
sbb
xchg
jne
out
jmp
lods
pop
mov
dec
add
lss
mov
mov
xchg
ins
ret
sbb
pop
sahf
or
mov
cmps
sar
mov
push
jae
repz
push
and
div
sub
cmps
addr16
inc
mov
dec
in
fsub
leave
or
aam
push
ins
pop
mov
div
and
outs
cmp
cwde
push
into
dec
fstp
xor
and
movs
leave
fcmovbe
scas
jnp
dec
mov
dec
sub
push
bound
bound
xor
cwde
int3
xchg
cmps
sbb
mov
add
mov
mov
inc
cmp
sub
cmps
popa
fucomi
xor
rcl
outs
xchg
and
xor
mov
pop
dec
and
dec
push
(bad)
adc
xor
inc
lds
repz
mov
and
pop
je
or
and
dec
xchg
aam
rol
fstp
sbb
aas
adc
loop
pusha
(bad)
xor
sub
or
sub
jbe
mov
pop
jle
push
bound
cs
popa
and
push
xor
out
aam
iret
fwait
aad
aaa
push
mov
fmulp
and
or
add
js
mov
in
lods
cmps
sub
lahf
mov
jmp
lahf
pop
mov
clc
pop
sub
movs
sub
mov
xchg
test
imul
jge
cmp
mov
pusha
pop
ds
aas
pop
xor
pop
leave
das
retf
inc
and
std
addr16
jge
mov
mov
in
or
ret
int3
sub
sub
push
sub
adc
sub
loop
std
mov
mov
jb
outs
pop
fistp
sbb
ja
dec
pop
(bad)
xchg
imul
lahf
test
fcmovne
test
cmp
add
xor
(bad)
dec
shl
mul
in
mov
xor
pop
mov
dec
dec
pop
add
aas
sub
xchg
and
cmp
retf
jne
dec
adc
pushf
call
neg
inc
xor
and
push
jl
adc
or
xor
jle
push
repnz
(bad)
mov
(bad)
sbb
das
stos
cmps
push
data16
mov
sahf
repz
pop
ja
fild
ret
dec
ret
ret
cmovbe
cwde
lods
adc
push
sub
std
(bad)
sbb
jmp
(bad)
push
pop
sbb
or
aad
cmp
push
dec
lds
mul
adc
xor
nop
clc
xchg
in
adc
or
adc
xchg
loope
not
xor
js
je
ins
mov
mov
outs
xchg
xchg
(bad)
jle
inc
in
jg
xor
retf
or
std
and
cmp
cmp
out
aaa
push
cmp
push
mov
hlt
push
mov
xchg
idiv
ins
sub
jp
test
jp
pop
movs
rol
cmp
mov
dec
jnp
push
adc
push
mov
mov
xchg
sbb
int3
cmp
lock
lea
mov
lock
loopne
nop
in
daa
outs
dec
in
loop
je
sbb
jbe
jl
lahf
loope
push
das
mov
mov
pop
mov
iret
ret
jmp
les
add
ficom
pop
inc
jmp
ror
xchg
imul
xchg
cs
into
sbb
ror
test
dec
stc
fldcw
daa
push
(bad)
in
leave
jecxz
sbb
inc
push
movs
inc
mov
sub
mov
mov
push
mov
(bad)
or
xor
push
popf
bound
mov
lods
in
call
fstp
jmp
adc
cmp
mov
out
sbb
lds
imul
retf
xchg
jo
imul
jmp
jp
cmp
fdivr
mov
popa
repnz
inc
sbb
cmp
cmps
lahf
idiv
jp
pop
int3
outs
jnp
test
and
mov
pop
fnstenv
das
lods
(bad)
sub
sbb
ffree
adc
push
cmps
sub
xor
cwde
and
pop
jbe
or
mov
adc
pop
dec
cmp
sub
inc
mov
sar
repnz
cmp
mov
jecxz
pop
into
idiv
rcr
add
inc
mov
js
cli
mov
jg
bound
sbb
mov
mov
cmp
int3
push
pop
(bad)
cmps
(bad)
jecxz
stos
std
cmp
div
call
mov
mov
stos
mov
cmps
mov
sahf
pop
and
popa
or
call
leave
loope
cmps
pop
jae
aaa
or
add
loope
scas
mov
jp
fmul
xor
add
pop
push
mov
call
aad
punpckhdq
mov
add
dec
mul
sub
mov
push
jmp
retf
aas
mov
cmps
and
push
jae
test
out
sub
sub
aam
jo
jle
push
retfw
or
cld
jbe
sub
dec
aad
(bad)
push
sbb
mov
mov
xor
adc
lahf
push
or
sbb
mov
adc
mov
dec
xchg
aad
repz
or
xchg
rcr
jmp
push
cmc
call
stc
inc
xlat
fnstsw
pop
aam
cmp
add
sti
pushf
xchg
adc
imul
fst
xchg
cmp
and
and
xlat
fst
not
xchg
push
popf
jecxz
push
sub
jecxz
movs
ds
loopne
int3
lock
int
sbb
sbb
xabort
in
ds
dec
rol
xchg
sub
neg
xchg
push
add
mov
call
jbe
aam
mov
inc
adc
mov
popa
inc
das
add
outs
fld
in
dec
pop
jg
stos
add
mov
retf
(bad)
mov
call
aas
jns
js
shl
jne
sbb
mov
jl
js
push
dec
mov
add
mov
lods
test
fidiv
xor
int3
cmps
and
cmp
cmp
stos
aad
lock
mov
push
push
mov
shr
xchg
es
inc
fwait
mov
sahf
loop
xchg
or
int3
in
or
inc
push
stos
pop
loopne
enter
push
push
sahf
jmp
fadd
xchg
cli
test
fsubr
pop
jne
push
sbb
pop
xor
(bad)
lods
mov
push
cwde
out
ins
dec
mov
(bad)
enter
adc
mov
aaa
call
push
cmp
push
xchg
out
mov
add
movs
test
mov
rcpps
movs
lahf
xchg
inc
push
rcr
xchg
dec
inc
lds
pop
or
pop
jle
inc
mov
(bad)
sar
jp
cmp
cmp
jp
push
dec
in
sbb
mov
inc
or
mov
add
das
or
cdq
dec
pushf
dec
or
mov
push
adc
sub
adc
gs
mov
sbb
cmps
xor
xor
adc
idiv
sub
sahf
movs
(bad)
pop
pushf
or
rcr
ret
out
test
stc
frstor
imul
popw
fbstp
xchg
call
into
arpl
xor
jle
stos
sbb
dec
enter
xor
inc
ins
mov
and
nop
mov
jno
or
and
lods
cli
jo
jl
push
(bad)
hlt
xchg
xor
push
cwde
outs
jne
(bad)
jmp
lahf
(bad)
mov
mov
pop
or
push
mov
mov
ret
jl
mov
inc
mov
or
lods
retf
test
lds
push
sub
push
ins
aam
ja
pusha
jmp
adc
push
call
mov
inc
mov
ja
fcom
test
pop
inc
sbb
fdivr
mov
cwde
repnz
jbe
mov
ins
stos
adc
into
fwait
add
aad
mov
shl
scas
js
xchg
jnp
push
or
dec
cld
mov
ss
faddp
and
fwait
dec
clc
sbb
mov
rol
dec
mov
mov
sbb
cmp
xchg
add
sti
test
cs
xor
stos
xor
push
arpl
fild
leave
js
pop
dec
adc
adc
or
push
push
jne
pop
inc
fisubr
push
out
sahf
aad
dec
aad
mov
add
imul
mov
fs
mov
sar
fstp
adc
cmp
or
loope
cmps
stos
scas
pop
add
xor
jne
or
shr
dec
sub
jl
xchg
inc
pusha
mov
and
in
mov
mov
inc
(bad)
xchg
pushf
call
mov
sbb
mov
in
imul
push
lahf
in
stc
ds
pop
or
dec
xchg
push
in
jl
mov
(bad)
and
mov
pop
add
sbb
push
jne
adc
cmp
dec
ret
pop
(bad)
in
cdq
sub
add
dec
xchg
aam
jnp
and
xchg
hlt
aaa
jle
mov
mov
in
xchg
neg
push
test
(bad)
push
dec
jg
stos
stos
or
push
fild
xlat
xor
sub
sbb
jecxz
push
(bad)
shr
push
cmp
mov
adc
lds
dec
call
jbe
inc
js
jmp
jae
push
mov
mov
imul
push
mov
ds
push
sar
or
shr
scas
xchg
add
dec
or
pop
fimul
fidivr
sub
mov
out
(bad)
or
mov
cmp
fcomip
and
mov
pop
xchg
jbe
jb
pop
test
outs
push
jge
sbb
xchg
cwde
mov
popf
in
sub
cmc
inc
fdivrp
(bad)
dec
pop
rcl
ins
mov
or
push
sub
(bad)
call
rcl
nop
mov
mov
shl
aam
push
push
ret
push
dec
cmc
enter
xchg
mov
es
xor
test
cmp
lods
pop
scas
jle
and
mov
or
mov
(bad)
sbb
and
jle
push
xlat
and
loope
xchg
lods
or
test
adc
cmps
sbb
cmps
mov
ror
mov
data16
mov
gs
cs
je
or
xor
pop
mov
ret
mov
in
adc
jmp
adc
shr
sbb
call
aas
iret
cli
loopne
out
sbb
push
mov
stc
frndint
dec
jbe
ret
mov
xchg
sub
mov
inc
mov
out
clc
push
fwait
or
jbe
fwait
pop
inc
std
cmps
and
jecxz
xor
cdq
mov
add
jle
movs
pop
stc
cmc
pop
sub
ror
inc
(bad)
or
and
push
ins
add
out
shl
cmovs
jmp
je
aas
mov
xchg
and
xchg
add
imul
xchg
arpl
addr16
adc
mov
sbb
jae
xor
aam
sbb
add
(bad)
fs
outs
(bad)
mov
jecxz
stos
movs
lds
and
inc
jnp
int3
ins
push
sub
inc
shr
scas
add
call
mov
inc
xor
jge
addr16
mov
imul
mov
sbb
jl
or
xchg
rcl
outs
mov
outs
imul
sahf
jp
xchg
pop
jecxz
mov
mov
call
xor
in
pop
lea
ds
or
push
rcl
das
and
mov
jp
mov
lods
xchg
imul
lahf
jno
je
iret
adc
xchg
dec
mov
or
mov
call
and
adc
sub
jg
test
mov
xchg
das
pop
or
sbb
nop
add
xor
loope
shl
dec
in
dec
adc
jae
xchg
push
sbb
jb
ret
(bad)
das
xchg
mul
cmp
jo
jp
mov
in
(bad)
dec
psubsb
outs
retf
fcom
mov
pop
mov
xor
ss
in
adc
arpl
add
push
call
jns
add
cmp
aas
pusha
mov
lods
and
jbe
ret
sub
test
pop
add
in
xor
aas
sbb
xchg
jae
push
xor
push
inc
shl
mov
xor
sbb
lock
mov
sbb
push
xor
or
jb
push
test
retf
scas
(bad)
test
outs
loope
mov
fwait
mov
pushf
lods
sbb
add
jbe
ss
arpl
jbe
inc
dec
sbb
add
jle
fldcw
inc
and
sub
cdq
(bad)
aaa
js
xchg
xor
repnz
dec
sub
test
xchg
adc
in
fs
femms
lock
clc
aad
mov
shr
in
xchg
or
adc
add
push
aas
push
add
push
cmp
inc
push
ds
loop
mov
push
push
add
xchg
or
es
push
nop
ss
or
cdq
pop
test
scas
rol
dec
les
jmp
push
add
ds
jge
or
popf
jp
pop
sbb
dec
cmp
sti
or
outs
add
push
push
fisubr
leave
mov
lds
or
add
ficomp
scas
push
(bad)
sub
mov
fdiv
sbb
enter
movs
mov
arpl
mov
dec
enter
cmp
jo
(bad)
mov
(bad)
fnstcw
xor
xchg
sbb
xchg
sbb
add
mov
mov
adc
in
dec
push
std
push
xchg
add
mul
cli
dec
loop
ret
mov
(bad)
mov
mov
inc
pop
data16
jnp
xor
(bad)
repz
jns
add
stos
mov
mov
bound
mov
adc
stos
rcr
mov
adc
mov
xchg
setnp
gs
rcr
into
jg
mov
lea
sahf
rcl
jl
sbb
not
inc
inc
adc
mov
pop
dec
pop
outs
add
jle
les
(bad)
jp
out
inc
jmp
mov
and
dec
movs
cwde
push
(bad)
into
jmp
dec
mov
mov
mov
dec
push
pop
lahf
iret
push
fisttp
loop
add
retf
clc
in
xor
sbb
outs
push
sbb
jae
dec
data16
das
or
stos
jle
sbb
mov
xchg
popa
jmp
lods
mov
ds
mov
dec
or
adc
enter
mov
aad
ja
scas
mov
in
inc
jmp
cmp
test
imul
gs
mov
fs
movs
and
xlat
mov
push
aam
sbb
dec
mov
adc
int3
and
hlt
cld
sub
xor
(bad)
dec
clc
test
push
and
adc
out
mov
dec
into
je
cmp
ss
add
lahf
push
clc
add
push
stos
adc
jecxz
and
mov
fs
sbb
xchg
mov
sub
jle
ja
pop
fimul
or
fistp
inc
ins
test
and
mov
mov
push
cdq
cwde
aad
jmp
out
add
mov
pop
mov
xlat
or
push
icebp
xchg
add
mov
retf
test
inc
ret
scas
pop
icebp
test
add
cmc
mov
out
add
das
xchg
test
mov
repz
lods
sar
lock
loopne
mov
pop
pop
and
add
pushf
and
adc
call
inc
mov
dec
ss
jnp
arpl
mov
push
push
pop
test
and
jnp
dec
jmp
inc
ffreep
xor
loope
jmp
int
sbb
pop
fcomp
and
xlat
rcl
mov
xchg
dec
dec
cmp
or
sbb
stos
mov
add
popf
and
ins
icebp
out
and
xchg
ins
mov
lods
push
stc
push
sbb
addr16
jbe
cld
or
push
ret
mov
fstp
adc
in
das
jbe
icebp
and
hlt
es
fild
out
jmp
cmp
bound
daa
mov
test
cmp
loopne
(bad)
cli
dec
stos
cmp
dec
jnp
out
aaa
ds
pop
rcl
sub
in
test
jg
cmps
sbb
aaa
ins
jb
adc
jl
push
popf
or
aad
jmp
jmp
cmp
or
data16
int3
sbb
imul
ror
into
inc
xlat
dec
sub
fisttp
cld
or
jae
jae
pop
ins
rcr
jge
push
xchg
jmp
xor
push
cwde
push
sbb
cld
out
mov
inc
or
mov
fcom
mov
icebp
repnz
sbb
stos
adc
xor
sub
dec
(bad)
std
je
mov
mov
movs
xor
inc
and
jl
inc
test
lahf
or
cmp
in
(bad)
fsubp
cmp
dec
and
ins
daa
mov
jecxz
dec
sbb
xor
lea
rcl
fs
pop
imul
cmp
imul
movs
adc
neg
xchg
lods
dec
xchg
test
jno
outs
jmp
aam
(bad)
hlt
stc
xchg
imul
clc
xchg
(bad)
adc
adc
pop
(bad)
jl
in
xchg
iret
add
or
jmp
cmp
ss
enter
xor
jmp
sub
jo
mov
pop
pop
int
in
xchg
add
mov
int3
mov
xchg
xor
sub
in
xchg
ret
mov
outs
inc
push
mov
cld
push
mov
adc
(bad)
int
cmc
in
dec
in
shr
mov
(bad)
xchg
xchg
sti
cwde
inc
je
arpl
jne
call
fisttp
and
dec
fcomp
sub
adc
push
retf
sar
popa
dec
add
add
(bad)
jmp
fldcw
test
stc
mov
cmp
jmp
das
int3
push
xchg
push
xor
xor
popa
ret
sar
ret
retf
xor
aam
out
in
(bad)
movs
pop
or
cmp
lods
scas
bound
pop
cmp
mov
and
repnz
xor
ss
pop
xchg
jbe
in
lock
ins
clc
pop
pop
push
(bad)
call
cmp
out
lods
sbb
sbb
in
mov
sbb
out
cmp
std
imul
rcr
in
cli
mov
in
push
lods
dec
jns
inc
(bad)
jmp
dec
loopne
pop
or
sbb
push
cmp
ins
enter
aam
(bad)
jge
inc
cmc
out
add
and
(bad)
push
jb
ret
xchg
sbb
mov
pop
jbe
aad
test
and
mov
cdq
sbb
and
(bad)
push
cmps
push
and
test
cmp
or
cmps
clc
pusha
inc
aas
mov
and
mov
dec
push
pusha
adc
jle
cmp
fadd
cmp
cmps
(bad)
add
mov
sahf
repnz
dec
shr
dec
lahf
sub
pop
mov
stc
mov
retf
sbb
push
mov
sub
xchg
push
loopne
mov
xchg
cmp
cli
cwde
push
retf
jecxz
add
pop
lahf
mov
mul
mov
push
aaa
test
dec
enter
pop
fld
cmp
mov
bound
dec
inc
inc
test
mov
faddp
sub
stos
push
fstp
(bad)
mov
add
xchg
xchg
mov
fsub
in
xor
push
in
mov
sbb
or
sub
pop
cli
sahf
mov
jmp
into
mov
outs
shl
aad
scas
or
push
adc
adc
aad
dec
test
stc
retf
add
mov
jo
movs
jbe
repz
sbb
cmp
in
test
jg
adc
push
mov
pushf
xchg
mov
dec
repnz
jg
je
pusha
sbb
retf
jb
sbb
popf
jns
add
cmp
aas
add
retf
loop
pop
jge
mov
add
sbb
(bad)
sub
xchg
adc
push
pop
jo
push
cmp
idiv
add
je
mov
in
test
es
jp
test
repnz
push
pop
mov
in
imul
out
not
not
add
cmp
mov
mov
or
gs
shl
shr
jg
lock
jge
jge
lock
pop
xor
pushf
call
imul
js
fild
dec
cmp
push
dec
adc
dec
cmp
xchg
sub
adc
shr
mov
adc
dec
pop
sbb
jecxz
leave
push
inc
nop
loop
cmp
sub
push
dec
adc
and
cs
(bad)
inc
repnz
movs
ror
fnsave
push
add
movs
pop
inc
dec
retf
fidivr
inc
sub
dec
fwait
mov
lea
xor
and
(bad)
clc
in
and
mov
out
cmp
fs
add
daa
fs
in
or
dec
sub
pop
(bad)
mov
inc
out
and
lahf
loopne
push
dec
loopne
shl
mov
pop
fidiv
daa
shl
mov
jmp
sbb
int3
pop
cmc
xchg
cld
jp
sbb
jmp
pop
add
sahf
repz
sbb
sbb
popa
mov
mov
and
or
pusha
lahf
sbb
jecxz
(bad)
pusha
rol
mov
repnz
test
jg
retf
or
addr16
sbb
adc
add
mov
pusha
xor
push
cs
pop
add
mov
dec
cs
cmp
loop
leave
mov
inc
adc
movs
mov
sub
clc
(bad)
(bad)
lods
loopne
cld
int
cmc
jecxz
repz
push
js
jo
mov
mov
sbb
jg
scas
mov
push
mov
jle
cmps
imul
jno
div
xchg
aam
pop
scas
push
iret
jl
lahf
and
or
inc
nop
inc
call
and
mov
stos
inc
inc
inc
mov
cmp
ss
mov
xor
lds
xchg
vdivss
xor
mov
loopne
dec
xor
cmc
jp
or
jl
cmp
dec
mov
stos
adc
adc
sbb
dec
int
fsubr
mov
scas
xchg
ins
pop
cwde
mov
std
lock
mov
mov
retf
das
int3
outs
cmp
test
xlat
push
lock
jno
pushf
sub
cli
mov
stc
mov
repnz
jae
daa
movs
xchg
push
pop
mov
shl
or
mov
in
and
add
fild
push
bound
lods
shl
movs
jecxz
inc
mov
fisubr
mov
and
push
imul
popa
cld
std
aam
imul
std
adc
sub
test
inc
xor
in
in
sbb
sti
std
loop
rcl
stc
cli
out
adc
retf
inc
pop
dec
xchg
xchg
dec
push
loopne
cmp
in
sti
jg
jg
cmp
push
push
imul
shl
sbb
or
cdq
(bad)
sub
cwde
push
lahf
retf
push
frstor
int
xchg
dec
adc
in
pop
and
pop
je
test
sub
retf
jge
sub
test
sbb
xor
not
xchg
mov
add
inc
(bad)
inc
cmp
cmp
cwde
cld
mov
and
(bad)
jecxz
sbb
and
dec
xor
push
test
mov
sub
xor
cmp
mov
jge
mov
or
mov
pop
(bad)
xchg
ja
add
lods
leave
loope
dec
test
fcmovb
mov
and
scas
fyl2x
mov
or
fwait
nop
mov
repnz
dec
mov
cmp
(bad)
cmp
push
out
cmp
test
icebp
push
add
add
mov
adc
and
cwde
(bad)
adc
xchg
lods
repz
pushf
xchg
and
inc
test
(bad)
fcomp
clc
inc
pop
push
xor
sti
(bad)
dec
movs
mov
popa
mov
mov
add
and
lea
jecxz
std
cmp
call
sbb
pop
or
loop
ret
and
adc
and
lds
mov
push
xor
out
lea
push
jae
ja
cmps
sbb
arpl
xlat
shr
mov
mov
jmp
push
adc
imul
mov
pusha
imul
inc
leave
xchg
pop
inc
pusha
mov
cmp
dec
jbe
xor
and
and
jnp
jmp
or
in
mov
aam
sub
mov
fild
movs
bt
add
pop
in
loopne
fs
loopne
and
xor
mov
je
addr16
loopne
mov
jp
out
sbb
jno
xchg
mov
test
sbb
arpl
sub
jb
into
mov
out
cld
js
add
ja
mov
xor
push
out
jmp
sub
add
nop
push
mov
push
mov
push
movs
or
mov
(bad)
add
jb
push
icebp
mov
aas
adc
pop
rcl
inc
repnz
bnd
jne
dec
lods
cmp
(bad)
jns
adc
iret
cdq
adc
pop
movs
aad
dec
add
js
lar
es
iret
mov
pop
(bad)
mov
stos
jmp
adc
test
jno
clc
inc
(bad)
out
scas
jmp
int
add
js
cmp
js
and
fmul
sub
pop
dec
sub
(bad)
(bad)
xchg
psraw
pop
rcl
dec
pusha
(bad)
sub
int
dec
pusha
lods
mov
out
xchg
jmp
(bad)
xor
push
mov
cdq
mov
fbstp
ret
and
cwde
ins
push
push
sar
xor
ins
xor
sub
in
(bad)
ret
sub
xchg
sbb
fcomp
or
mov
mov
xor
in
shr
pop
aam
jmp
xor
movs
lock
sbb
push
xor
popa
cmps
mov
pop
and
xchg
fdiv
xlat
call
inc
mov
(bad)
lds
sub
mov
sbb
lods
mov
jmp
rol
lock
ja
push
clc
movs
mov
das
push
adc
mov
cmp
cmp
push
data16
arpl
adc
test
(bad)
mov
(bad)
push
fmul
fcomp
or
xchg
rcr
fdiv
add
xchg
shl
dec
pop
jle
xchg
jns
xor
fucomi
fbld
sub
imul
ror
jecxz
scas
stos
and
into
lods
mov
fld
pop
std
fisttp
cmp
addr16
add
cmc
pop
pop
dec
lock
sub
dec
jo
mov
sbb
hlt
mov
imul
pop
push
fst
push
xchg
lea
dec
stos
into
lds
gs
push
add
addr16
jge
push
adc
mov
cmc
push
jae
les
mov
adc
nop
mov
into
sar
and
or
or
cmp
sub
les
test
xor
iret
mov
dec
sti
xchg
and
loop
xchg
fnstenv
cmp
pushf
and
lea
retf
cld
jae
fsubr
inc
or
jg
pop
test
mov
bound
ret
out
scas
or
icebp
in
iret
mov
sti
or
jo
and
(bad)
mov
shl
jmp
psubq
js
rol
mov
fs
mov
nop
sub
adc
(bad)
push
mov
les
mov
adc
data16
mov
jge
add
jecxz
fisubr
push
fidiv
adc
scas
xor
xchg
cli
shl
sub
ds
and
lods
js
out
jne
adc
mov
cmp
xchg
cmp
jp
add
test
(bad)
xchg
and
aam
ins
push
mov
or
pop
pop
aaa
inc
scas
popa
shl
xor
xchg
lods
xlat
test
inc
and
add
pop
sbb
and
fcomi
test
xchg
cwde
outs
cmps
test
jbe
pop
mov
lods
sbb
xchg
or
xor
cdq
mov
inc
xchg
ins
daa
popf
inc
call
xchg
sti
cmp
cmp
xchg
xor
push
fisub
adc
push
pop
lock
mov
cmc
xlat
mov
push
sahf
xor
push
jo
(bad)
cvttps2pi
je
sbb
dec
cmps
pop
popa
nop
xchg
popf
les
dec
xlat
dec
(bad)
adc
sti
pop
jmp
inc
ins
loope
xor
or
or
shl
cmps
out
jg
aas
into
add
pop
push
sbb
sti
pop
jl
adc
imul
cld
and
or
(bad)
xor
push
std
mov
vmovdqa
imul
or
lahf
push
shr
bnd
or
mov
ret
mov
int3
and
mov
mov
mov
adc
cdq
jo
test
mov
pop
sub
(bad)
adc
stos
xchg
sub
jmp
scas
movs
in
inc
add
das
scas
(bad)
and
(bad)
mov
and
js
xchg
ja
adc
sbb
push
jmp
test
or
stos
inc
mov
mov
jecxz
pop
xchg
xchg
daa
inc
jmp
inc
fld
dec
rcr
pop
lods
dec
and
not
icebp
test
xchg
sbb
mov
mov
ss
icebp
test
icebp
pop
sub
xlat
or
lds
mov
and
jmp
jne
js
xor
aaa
outs
fstp
jb
cmp
mov
add
ss
enter
inc
outs
sbb
lea
sub
test
add
out
ja
inc
add
sahf
in
sbb
xchg
scas
jmp
outs
mov
lds
ret
inc
ret
rcr
cmp
cdq
pop
sbb
and
fldz
inc
out
fimul
imul
not
and
cmp
and
fdiv
neg
es
xor
xchg
in
push
sub
test
jle
in
popa
pop
jmp
pop
and
js
sub
and
stc
int
in
fmul
mov
add
xchg
icebp
xchg
cwde
stc
es
mov
into
adc
neg
sahf
call
push
in
xchg
test
sbb
outs
call
jns
in
adc
push
into
push
adc
adc
ret
cmp
push
loope
loopne
jnp
mov
pop
arpl
or
or
mov
out
and
popa
push
xchg
sub
in
jmp
or
mov
and
cmp
dec
dec
or
inc
out
clc
push
scas
xor
iret
jne
sbb
push
hlt
cmp
(bad)
xchg
cmp
cmp
jp
ds
(bad)
push
push
aad
sub
pop
jecxz
mov
adc
clc
lock
loop
cwde
jb
dec
test
lea
int3
xchg
jp
dec
inc
push
jbe
mov
shr
and
and
je
inc
loopne
sub
ds
jge
or
or
inc
adc
and
hlt
les
adc
xchg
ficomp
das
cs
dec
bound
adc
xor
leave
push
sub
xor
stos
ds
sbb
mov
push
sbb
sti
mov
bnd
mov
stos
movs
jmp
ins
popf
dec
sbb
(bad)
mov
das
mov
xchg
sbb
jmp
arpl
outs
out
dec
jnp
jno
inc
push
cmp
fsubr
xchg
mov
inc
jmp
fidiv
dec
imul
jmp
mov
mov
mov
fist
push
push
jno
ins
imul
loope
jmp
cmp
nop
int3
cmp
int3
shr
inc
xlat
cmps
out
adc
popa
fwait
stos
xchg
scas
(bad)
and
cmps
or
iret
mov
test
iret
or
adc
jnp
fdiv
xchg
(bad)
mov
je
jmp
mov
jae
call
adc
pop
push
push
mov
mov
out
push
xchg
xor
je
dec
xor
ja
push
les
popf
mov
and
push
pop
xor
shl
mov
xchg
pop
adc
inc
and
lahf
jns
jmp
jp
cmps
clc
imul
cmp
xor
dec
mov
sub
sahf
retf
dec
xor
sub
enter
jl
pop
cmps
cmps
cmps
iret
add
aaa
jne
mov
and
jo
gs
pushf
or
inc
push
mov
stos
test
pushf
jne
stos
jne
nop
mov
sti
dec
repnz
frstor
push
hlt
test
fbld
cmps
mov
push
adc
adc
xchg
ret
jns
push
mov
inc
pop
cdq
cmp
lahf
in
retf
cwde
daa
mov
fst
xchg
ja
or
dec
test
xchg
repnz
leave
sub
inc
out
in
cmps
loop
std
aad
mov
cmp
or
adc
repnz
in
and
add
fwait
jecxz
inc
jns
mov
jle
lods
retf
fimul
mov
pop
mov
xchg
mov
shl
loop
pop
xchg
pusha
int3
mov
mov
rcr
add
add
retf
aaa
push
stos
or
sbb
cli
push
sub
les
xor
add
ret
fiadd
pop
lods
je
out
cwde
and
sub
xchg
mov
scas
inc
clc
das
sbb
int3
adc
jno
int
pop
outs
mov
out
(bad)
jg
mov
dec
call
push
push
xor
scas
stos
sbb
sbb
mov
mov
inc
mov
cmp
sbb
push
sub
ins
jno
adc
mov
retf
sub
push
inc
rcl
jne
test
es
scas
out
jo
aaa
out
adc
bound
cmp
aas
push
retf
stos
and
sahf
js
popa
and
repnz
pop
movs
adc
call
fiadd
das
mov
fbld
jle
(bad)
call
outs
icebp
iret
adc
fwait
xor
mov
jecxz
push
sub
ret
into
inc
mov
(bad)
std
adc
outs
or
push
(bad)
repz
fs
mov
adc
pop
xor
cwde
mov
mov
push
or
xchg
sub
shr
arpl
fdivr
(bad)
in
push
aam
or
push
mov
cmp
and
popf
lds
sbb
sub
jo
add
hlt
xchg
ret
movs
scas
push
or
outs
das
out
push
repz
push
add
jmp
out
xor
jge
repz
enter
jge
(bad)
adc
mov
es
fs
mov
test
nop
stos
mov
sti
or
shr
test
dec
cmp
addr16
inc
nop
jb
int
mov
movs
lods
xor
inc
test
inc
xchg
sub
dec
cmps
mov
fs
jo
lods
scas
mov
ja
rol
push
jmp
ds
and
pop
xor
sub
ror
repz
std
mov
fld
scas
mov
xchg
bound
and
mov
xchg
pop
cmp
sbb
scas
ret
sbb
or
dec
jbe
inc
dec
js
cmp
ror
enter
add
or
mov
outs
ins
mov
jns
fist
push
xlat
stos
leave
inc
or
sar
push
xchg
add
mov
ret
movs
rol
dec
in
jae
mov
cmp
lods
in
stos
mov
jo
clc
inc
popf
lahf
rcl
scas
xor
mov
mov
xor
jne
outs
mov
sti
jl
sti
push
(bad)
out
pop
add
sbb
rcl
(bad)
hlt
push
xor
sub
lods
fcomip
cmp
xchg
adc
jmp
sbb
add
clc
ins
add
test
cld
pop
dec
mov
test
push
stc
movs
dec
pushf
mov
daa
lds
xchg
xchg
adc
addr16
cdq
lods
fs
lea
mov
pushf
in
and
leavew
adc
movs
adc
mov
xchg
mov
les
jae
les
ins
fcmovnu
push
jae
cli
add
push
add
push
and
push
push
aaa
fs
loopne
outs
imul
push
or
icebp
xchg
daa
arpl
daa
sahf
cld
dec
loop
jmp
push
cli
stos
(bad)
fnstcw
addr16
(bad)
aam
sbb
push
push
ret
imul
xchg
outs
popf
gs
cmps
add
mov
push
push
cmp
xchg
adc
xchg
mov
jle
sbb
mov
sub
pop
mov
out
das
cmps
and
bound
mov
shl
in
mov
add
mov
popf
addr16
mov
call
lahf
cmp
scas
sbb
cli
loope
pop
jle
js
std
into
mov
mov
nop
sbb
(bad)
jp
and
xlat
(bad)
ss
pop
aad
arpl
push
aad
call
pop
sub
out
ss
ds
out
adc
pop
popa
leave
loopne
out
movs
mov
push
sub
fnstsw
add
xchg
and
dec
xchg
mov
lods
shr
jecxz
adc
jne
rcl
mov
adc
pusha
out
std
pusha
jns
aad
xor
dec
xor
movs
cmp
js
lds
dec
mov
stc
cld
sbb
sub
or
push
popa
mov
inc
dec
nop
int
ss
jle
es
xchg
dec
jmp
mov
es
cmp
bound
pusha
lock
lods
sbb
stc
and
xchg
pop
or
mov
lds
sub
xor
stos
data16
sub
stos
test
out
jmp
add
xor
mov
adc
outs
bound
imul
add
out
push
loop
xlat
cmp
xchg
call
push
std
cwde
repz
movs
jno
dec
xor
fmul
pop
add
push
punpckldq
jge
jge
push
loop
lds
ins
cld
dec
inc
jmp
jns
stos
push
mov
dec
repz
or
sub
mov
loopne
test
ins
jnp
cwde
xchg
jmp
std
fcom
mov
or
stc
daa
(bad)
jb
mov
inc
sbb
cdq
js
aam
in
in
push
shl
lods
cmp
ror
lods
repnz
adc
popf
cld
or
mov
(bad)
pop
cmps
test
idiv
sub
in
inc
scas
stos
mov
dec
and
add
inc
in
ins
lea
mov
daa
in
push
push
into
(bad)
das
pop
add
cmp
xchg
test
cmp
fldenv
arpl
inc
repnz
inc
stos
xor
add
lods
add
sbb
int
(bad)
cli
(bad)
and
push
cmp
and
cmc
sbb
cmp
in
mov
int3
jmp
lahf
pushf
xor
seta
jecxz
xchg
jg
adc
(bad)
sbb
jo
adc
inc
sbb
dec
fld
xor
add
push
int3
daa
int
in
lock
fsubr
lods
sbb
test
loop
xor
mov
ins
xchg
ror
out
jbe
fdiv
mov
pop
mov
jmp
push
test
in
cmp
retf
push
fsubr
adc
(bad)
adc
out
clc
add
stos
lods
sub
sbb
mov
adc
cmp
dec
retf
inc
mov
repz
loop
and
cmp
and
ins
push
push
addr16
out
adc
int
mov
xlat
in
cmp
mov
ret
jmp
aam
(bad)
push
cmp
push
sub
lods
fimul
not
pop
or
pop
pop
in
fld
jns
push
jg
push
xlat
sbb
lahf
cmp
inc
cmps
popa
test
mov
pusha
pop
xor
and
les
add
pop
dec
(bad)
loop
xor
add
ficomp
inc
mov
das
sub
dec
xchg
sub
icebp
and
xchg
xor
int
xchg
(bad)
std
mov
pop
cmp
test
enter
outs
mov
imul
enter
bound
jecxz
mov
(bad)
mov
mov
sar
shl
push
pop
and
stc
adc
push
call
in
xlat
cwde
rcl
sub
scas
ins
das
test
or
andnps
or
sbb
ss
stos
jecxz
rcr
clc
fcom
movs
(bad)
test
push
lds
dec
cli
xor
push
not
push
repz
loope
xchg
pop
jmp
dec
clc
mov
sub
pop
and
add
push
xchg
scas
xchg
ja
pop
jmp
mov
or
shl
xrelease
and
jg
mov
pop
stos
mov
adc
(bad)
sub
int3
and
je
sub
mov
add
jecxz
cmp
fistp
push
aas
dec
js
jno
popf
pop
call
stc
push
push
sub
test
xlat
pop
icebp
stos
dec
ss
mov
jle
pop
cmp
test
jbe
daa
loop
cmp
pop
adc
repnz
fdivr
xchg
add
mov
xor
stos
bound
sbb
push
out
push
test
gs
aas
xor
xchg
and
dec
cwde
add
(bad)
adc
cmp
lds
fld
add
push
call
(bad)
les
push
cmp
pop
aaa
ficom
lods
push
ins
(bad)
mov
xchg
xor
pop
lods
add
into
ja
mov
fnstcw
cwde
(bad)
movs
inc
jge
imul
cmp
xchg
retf
out
stos
xchg
out
push
xchg
pop
faddp
xor
loop
sub
(bad)
into
push
(bad)
fisub
pop
shr
std
lods
jg
inc
xor
push
pop
mov
daa
pusha
rcr
dec
cmp
in
jne
rcr
sub
call
xor
ds
out
js
call
shr
xor
xchg
inc
mov
jmp
push
test
inc
jge
les
lea
in
pop
xchg
repnz
cmp
add
xchg
stos
aaa
lahf
repz
aaa
addr16
mov
push
mov
lock
add
xor
aaa
or
fisubr
push
outs
ret
cmp
loop
hlt
test
lea
retf
(bad)
sub
mov
push
ret
xchg
int3
pshufw
adc
xchg
(bad)
fcomp
cmc
idiv
call
push
and
(bad)
mov
pop
pop
sub
movs
int
stos
(bad)
sub
xchg
mov
sbb
call
cmps
inc
jbe
mov
mov
inc
push
sub
xchg
pop
push
pop
cmp
ret
xchg
and
inc
aaa
mov
pushf
mov
pop
inc
ins
mov
es
je
pop
mov
out
scas
jbe
pop
dec
xor
jmp
rep
xor
sbb
sbb
mov
aam
push
aaa
mov
stc
jg
xchg
fs
xchg
jmp
shl
sbb
jae
push
je
clc
dec
sub
mov
xchg
jp
mov
jg
outs
movs
adc
sub
sbb
adc
dec
xor
mov
dec
inc
icebp
ficomp
xor
neg
fwait
lods
mov
xchg
int
mov
xchg
mov
inc
cmp
lds
or
mov
and
or
pop
fwait
jo
mov
(bad)
or
fs
inc
aaa
xlat
mov
mov
mov
push
fst
pusha
mov
stos
jmp
push
aam
push
jne
push
or
push
ret
loopne
adc
les
dec
lahf
xor
adc
sub
ret
mov
(bad)
mov
jp
imul
ins
jecxz
jns
aaa
out
iret
jb
dec
inc
hlt
arpl
pushf
xchg
fild
les
imul
inc
shr
lds
adc
push
sub
call
push
cmp
lods
outs
jne
push
adc
push
sub
push
sbb
fidivr
in
or
cmp
aam
cmp
mov
or
test
into
in
add
mov
or
add
loopne
cdq
ret
test
scas
push
adc
cmps
nop
xor
xor
js
push
jle
sub
inc
sbb
mov
test
stc
mov
psllw
test
fild
jge
enter
fs
retf
popf
cmp
push
add
mov
jno
xlat
lods
push
push
(bad)
sub
mov
lods
popa
mov
mov
mov
inc
ds
pop
xor
adc
arpl
inc
inc
jl
mov
outs
inc
aas
sub
jp
jle
mov
jmp
cmp
das
mov
(bad)
cdq
and
jge
pop
cmc
pop
fucomp
aaa
xchg
and
es
xor
add
loop
mul
xor
pushf
ins
int3
xchg
jp
sbb
mov
or
lahf
adc
int
popa
std
jp
fld
push
sub
inc
inc
sub
mov
enter
(bad)
das
(bad)
sar
cmp
in
enter
inc
lock
outs
cld
data16
and
jl
xchg
and
xchg
xchg
pop
push
fimul
or
jae
pop
bswap
add
into
mov
in
cmps
loope
in
pusha
sti
jmp
mov
inc
fbld
int3
pusha
shr
sar
jne
neg
gs
movs
cdq
aam
sti
mov
arpl
cmps
fist
cmp
ret
shr
mov
pop
imul
mov
aad
cmp
add
imul
test
and
fldcw
loop
retf
cmc
xor
repnz
add
das
mov
addr16
in
call
adc
into
mov
lods
or
jae
shl
adc
adc
sbb
sbb
sub
shl
push
jbe
mov
xchg
pop
pop
test
into
add
mov
cmp
loop
sub
mov
dec
(bad)
push
mov
(bad)
inc
outs
pop
loop
popf
mov
dec
lds
cmps
add
mov
mov
les
add
(bad)
leave
cmps
call
(bad)
push
push
inc
in
lods
cmp
jp
cwde
enter
xor
aad
adc
loope
jmp
repnz
(bad)
adc
inc
push
cmp
fwait
sar
fwait
sub
pop
push
pusha
inc
inc
cmp
jae
add
neg
cmp
sub
(bad)
push
test
ja
sub
mov
pop
test
cmp
lahf
and
mov
sar
out
mov
inc
mov
retf
jns
nop
jae
into
inc
adc
int3
add
and
cmp
arpl
fnsave
cmp
test
mov
jbe
(bad)
mov
push
into
jmp
into
jbe
sbb
sbb
test
or
arpl
scas
jb
mov
out
or
adc
and
dec
out
shr
shl
lea
je
sub
lahf
aad
pop
sbb
aas
pop
mov
mov
xor
or
mov
call
jge
dec
cmps
icebp
retf
mov
int3
and
bnd
stos
or
ficomp
mov
jecxz
js
lea
fucom
mov
ins
lock
mov
fmulp
push
xchg
ja
sub
scas
xor
xchg
js
imul
push
ss
jecxz
push
inc
mov
in
or
mov
and
sbb
daa
and
mov
jmp
inc
js
in
cwde
sub
mov
mov
push
jle
(bad)
repnz
in
and
add
ds
push
or
int
sub
mov
je
jb
mov
add
cld
(bad)
xor
pushf
and
ins
xchg
sbb
(bad)
push
cmps
repz
mov
out
mov
rcr
cli
adc
jmp
mov
jmp
out
pop
add
mov
arpl
push
lahf
out
add
in
loopne
jge
pop
xor
movs
scas
cmp
lahf
or
jle
or
jno
shl
fbld
inc
les
leave
add
inc
fwait
mov
repz
mov
loop
out
out
jb
ins
nop
movs
cmp
mov
sbb
arpl
(bad)
sahf
fdivr
and
inc
push
sub
pop
lea
loop
ins
dec
inc
loopne
sbb
add
loop
test
(bad)
jae
popf
pop
sub
pop
push
bound
push
mov
sti
adc
jmp
(bad)
pop
and
jno
xor
or
ss
mov
sub
loope
jmp
inc
(bad)
sub
rcr
jmp
adc
push
push
adc
push
jmp
cs
mov
jp
adc
mov
cmp
gs
xchg
fmul
xchg
pop
cwde
movs
mov
pop
mov
or
scas
dec
push
add
dec
pop
sub
mov
ins
xchg
out
in
imul
or
ror
xor
stc
pop
cdq
xchg
in
mov
cmp
cmp
jmp
xor
push
mov
(bad)
ins
add
lods
mov
mov
inc
or
push
inc
ins
fisubr
dec
ins
push
movs
ret
(bad)
std
int3
in
test
pop
arpl
jne
shr
push
loopne
fsub
les
push
ins
mov
push
pop
mov
sbb
xor
movs
xchg
stos
push
test
cmp
inc
jg
cmp
push
mov
push
add
dec
mov
arpl
xor
arpl
lock
clc
call
dec
fiadd
dec
ret
jb
cmp
rcl
dec
cmc
cld
in
mov
aaa
cdq
sub
mov
inc
mov
call
xchg
pop
xor
imul
out
frstor
std
fisttp
xor
stos
dec
call
jle
ror
ss
mov
sbb
in
jge
shr
(bad)
fcomp
dec
jg
inc
popf
mov
push
daa
cmp
cmp
stc
mov
push
xchg
pop
mov
cmp
add
ret
adc
jo
push
add
popf
inc
popa
cmc
push
fsubp
pop
ds
pop
xor
das
retf
mov
adc
add
bound
pop
mov
loope
cli
cmp
adc
cwde
adc
sub
inc
and
push
sub
leave
mov
test
push
outs
push
in
xor
jp
mov
fimul
scas
mov
rcr
ret
fsubr
lea
ds
dec
rcl
mov
push
mov
inc
bound
call
in
pop
stc
add
xchg
stos
pusha
cmp
cmc
and
addr16
push
cmc
sahf
xor
fwait
push
jle
jg
test
(bad)
mov
je
stos
push
pop
mov
ins
sbb
sbb
mov
inc
sub
sub
pop
xor
sbb
mov
in
xchg
jae
push
mov
pop
outs
into
inc
inc
pop
lods
mov
adc
test
js
cmp
adc
out
(bad)
call
fwait
pop
icebp
test
scas
push
xchg
jmp
dec
retf
outs
ret
es
stos
loop
dec
push
fcomp
imul
test
ja
pusha
nop
cs
pop
loop
pop
imul
mov
sbb
rcr
mov
lods
test
mov
ins
sub
out
sub
in
fstp
fisub
xchg
xchg
xor
fmul
fbstp
outs
pop
addr16
pop
inc
add
jmp
sub
lea
jnp
(bad)
jle
xor
sbb
fistp
mul
push
fs
push
mov
fldcw
repnz
repz
cld
lods
mov
std
cmp
stos
jne
dec
jb
shl
pusha
dec
int
xor
add
xor
loop
or
lods
adc
pop
mov
rcl
add
sbb
cli
jmp
loop
pop
jecxz
or
sub
jb
cmp
pop
xchg
aaa
hlt
ret
jmp
xchg
loop
ror
inc
test
in
xchg
cmp
test
mov
or
push
fwait
cmp
ss
xchg
jns
(bad)
xchg
sahf
xchg
xor
cmp
jae
loopne
push
aaa
pop
pushf
sub
jge
dec
aaa
retf
leave
inc
adc
pop
cwde
jg
pop
xchg
sti
out
cli
add
clc
inc
lods
cmp
push
das
dec
stc
lods
shr
sbb
mov
jno
mov
data16
aas
mov
stos
sub
adc
sub
push
lds
sar
xor
xor
aaa
inc
shr
iret
(bad)
movs
mov
xlat
shr
push
dec
pop
mov
pop
mov
dec
(bad)
mov
adc
add
lods
hlt
push
inc
jecxz
adc
xchg
jnp
cmps
mov
jp
add
sub
aas
xor
cmp
xor
sub
add
outs
pop
movs
fld
jo
dec
imul
cmp
or
mov
call
xor
xor
retf
outs
adc
and
pop
jo
adc
repnz
shr
xor
lahf
imul
enter
sbb
fwait
sub
xor
mov
pop
mov
sub
mov
lea
test
bound
xchg
rcr
dec
pushf
mov
xor
fadd
test
pusha
sbb
int
jle
pop
sbb
inc
jmp
jmp
push
push
sub
out
jo
push
or
or
pop
fidiv
fcom
jo
cwde
jg
les
fs
andps
add
addr16
in
loop
fisttp
push
mov
push
ret
sbb
bound
stos
clc
push
jo
js
mov
bound
mov
pop
adc
xchg
sub
stc
cmp
ins
ret
test
add
sub
push
mov
push
arpl
sub
fisttp
dec
fcmovne
cmp
jmp
(bad)
fstp
lock
ret
jl
xchg
repz
pop
fdiv
fldenv
inc
pop
mov
retf
pop
test
fisub
push
fbstp
push
mov
push
inc
inc
pop
adc
test
aam
cli
sub
inc
sub
jne
ja
out
xchg
pop
mov
push
mov
sub
xor
loope
mov
cvtps2pi
mov
es
das
push
es
push
cmp
lds
not
xchg
pop
xor
mov
adc
loopne
push
ret
dec
push
sbb
les
mov
jecxz
imul
dec
jg
addr16
pop
lods
add
(bad)
rcr
fisttp
dec
add
xor
adc
(bad)
sub
jmp
or
arpl
push
inc
mov
inc
repnz
push
mov
scas
pushf
popa
shl
sub
sub
jle
dec
inc
sbb
rdtsc
in
repz
retf
and
pusha
and
dec
jnp
(bad)
or
pop
into
cli
inc
repnz
ret
or
sub
aam
lock
or
and
outs
enter
mov
and
cmp
sub
pop
int
mov
xchg
retf
mov
jg
mov
inc
sbb
sbb
cmp
gs
jae
(bad)
and
mov
shl
retf
mov
shl
xor
push
sub
mov
add
mov
mov
or
into
jb
mov
dec
push
aam
sbb
shr
add
jp
mov
mov
mov
iret
fucom
ins
mov
xchg
jmp
pop
in
in
jg
hlt
push
xor
xchg
repz
aad
xorps
test
movs
xchg
sar
mov
push
fbstp
(bad)
lahf
addr16
push
outs
lods
or
(bad)
out
adc
pop
ret
jp
or
lds
mov
(bad)
pusha
not
stos
jno
cmp
xchg
push
lahf
sbb
pop
mov
dec
dec
aas
outs
gs
adc
dec
xchg
pop
addr16
inc
sti
inc
sub
je
cld
(bad)
adc
dec
ins
add
add
xchg
movs
shl
push
mov
cmc
ret
mov
inc
sub
and
dec
xor
retf
cmps
imul
push
or
adc
jb
push
gs
fwait
cmp
dec
bound
pusha
dec
mov
ret
in
loop
sub
scas
sbb
sbb
iret
add
jl
daa
or
(bad)
pop
cmp
mov
pop
ja
stos
sti
aam
sub
mov
ret
xchg
mov
sbb
hlt
daa
mov
sub
xor
cld
(bad)
mov
push
(bad)
pop
add
lahf
mov
stos
xchg
mov
icebp
cmp
add
cmp
inc
hlt
cmp
pop
or
adc
sbb
jne
mov
jmp
mov
and
xchg
push
ret
(bad)
jne
in
aas
fld
jmp
aad
cmp
sbb
out
push
cmps
je
and
inc
mov
xchg
(bad)
pop
retf
mov
add
cmc
into
push
sar
xchg
js
xchg
xor
stc
jae
lahf
sbb
cld
lock
and
into
mov
lahf
in
and
sub
push
mov
cmp
movs
mov
sbb
cli
lods
jmp
mov
lods
mov
pop
rcr
test
aaa
inc
pop
sbb
mov
mov
arpl
cmp
mov
and
add
cmc
enter
inc
adc
test
jg
add
push
inc
mov
jmp
cmps
and
mov
test
or
out
jecxz
jge
jns
push
ins
shr
retf
mov
cmp
cwde
mov
cmp
test
inc
or
push
sub
loopne
jp
retf
xchg
pop
out
int
stos
stos
mov
inc
aam
inc
les
shl
jnp
add
mov
jge
push
in
dec
mov
ret
enter
jmp
xor
jb
cmp
mov
js
hlt
fs
cmp
dec
test
push
mov
shl
xchg
push
adc
cmps
imul
adc
imul
push
mov
es
lea
mov
jmp
jp
test
jno
cli
mov
cmp
aad
jp
sbb
jle
mov
xlat
cmp
clc
jl
adc
add
sar
jbe
neg
int3
push
cmps
es
xlat
lds
inc
mov
popf
(bad)
repz
sub
test
shl
adc
jns
sub
and
and
stc
dec
lock
mov
and
lods
mov
xchg
jmp
cli
stos
and
movs
dec
cdq
xlat
pop
test
shr
push
ins
cdq
jne
adc
pop
nop
enter
aad
mov
aad
mov
pslld
push
fldenv
pushf
fsubr
pop
xchg
add
mov
stos
popa
jae
retf
jno
jae
sub
dec
pop
(bad)
std
xor
(bad)
jb
aad
push
mov
xlat
jl
sbb
dec
int3
imul
pop
dec
cmp
loopne
das
adc
xchg
push
stc
xor
stos
mov
(bad)
pop
add
fstp
xlat
jne
sub
cwde
xchg
ds
inc
mov
pop
dec
call
inc
add
jge
dec
jnp
mov
jmp
int
shl
fisub
or
add
scas
lea
or
jle
jns
adc
imul
pop
shl
inc
inc
popa
and
aaa
mov
adc
pop
push
fcomip
xchg
mov
cmp
(bad)
dec
xor
(bad)
pop
xchg
inc
ins
and
xor
cmp
stc
fcmove
push
shr
hlt
dec
mov
(bad)
(bad)
mov
jbe
retf
retf
mov
shl
scas
ins
fwait
pop
jle
and
fs
jl
mov
cmps
mov
ret
pop
lds
loope
pop
fwait
scas
iret
xor
mov
loop
inc
test
cdq
in
lahf
arpl
push
or
dec
dec
pop
aad
(bad)
pop
aam
mov
test
cmps
jnp
je
sbb
test
ins
sub
add
mov
xor
lds
mov
jecxz
stos
jecxz
pop
push
sub
sbb
cwde
pusha
(bad)
aad
in
xchg
jmp
js
mov
retf
cmp
xchg
mov
rcl
jb
sahf
stos
cmp
xchg
and
sti
mov
adc
leave
xchg
xor
pusha
scas
mov
mov
xchg
cmp
test
xchg
or
xchg
adc
adc
rol
out
sub
or
mov
fdivr
jmp
push
cmc
push
and
xor
(bad)
repz
data16
mov
and
cmp
cs
retf
mov
push
pop
mov
lahf
jae
push
ins
sbb
sub
push
shl
hlt
loopne
into
es
cmp
sub
leave
pusha
fcomp
xchg
dec
call
mov
test
adc
add
mov
int3
xor
fld
add
repnz
mov
stc
xchg
test
stc
sub
sahf
in
idiv
aaa
mov
pxor
or
ja
js
cwde
(bad)
mov
pop
sub
shl
cld
fidiv
(bad)
in
inc
into
adc
shl
inc
sti
inc
inc
into
js
sbb
jns
jae
lea
jge
sti
cmps
add
xlat
ja
mov
or
xor
stos
mov
test
push
fiadd
inc
cmc
shl
add
sub
shl
iret
jmp
fist
test
cmp
push
mov
dec
fimul
retf
lods
mov
mov
imul
sti
mov
aas
je
push
or
dec
and
ins
fidivr
into
jg
xor
enter
inc
data16
cmp
clc
test
mov
in
gs
push
jle
xchg
push
ins
jmp
add
outs
push
les
ins
lock
xchg
call
dec
jge
loop
jle
jbe
loopne
xor
dec
or
sbb
sar
movs
mov
xchg
jmp
out
sub
call
scas
dec
leave
add
and
arpl
enter
retf
(bad)
(bad)
push
xor
push
jb
fwait
xor
cmp
mov
pusha
mov
xchg
jle
xor
push
and
dec
push
es
fcom
and
scas
dec
xchg
or
ror
mov
ret
push
mov
mov
pop
(bad)
mov
dec
(bad)
xor
outs
sbb
hlt
aas
pop
scas
js
jne
jbe
je
jno
imul
jo
sub
jp
rol
jg
mov
add
or
in
or
scas
enter
pushf
and
mov
jne
sub
repz
loop
jl
test
mov
mov
sbb
mov
cmp
cmp
add
ror
lea
xchg
nop
jle
jl
jle
mov
ds
es
mov
ins
push
and
std
xor
arpl
pop
jp
jo
dec
fldcw
add
or
cld
adc
movs
xor
sub
sub
pop
out
outs
sbb
pushf
mov
adc
ret
hlt
push
mov
mov
loopne
xchg
adc
sub
fst
mov
fnstenv
out
in
fwait
jb
sub
fisttp
mov
jmp
mov
cmp
xor
lods
daa
(bad)
fldcw
inc
jge
adc
xchg
dec
jmp
arpl
jnp
cmp
dec
and
pop
mov
mov
sti
mov
rol
inc
fdivr
pusha
(bad)
loopne
js
jo
movs
and
add
push
aam
mov
or
xchg
push
in
and
push
sub
adc
cmp
inc
push
pop
outs
inc
push
xchg
movs
ss
push
jecxz
add
adc
pop
scas
dec
imul
push
push
loop
dec
imul
pop
add
call
jle
sub
stos
retf
test
test
sbb
adc
ficomp
out
pop
fmul
gs
in
sbb
scas
dec
dec
sti
or
movs
loope
movs
jp
push
jge
ror
inc
aam
and
sub
jmp
mov
pop
arpl
jns
imul
dec
pop
fild
outs
stc
mov
in
jge
inc
fstp
push
sbb
xor
jnp
cs
nop
dec
and
jnp
lahf
in
sub
loopne
stc
xchg
mov
mov
call
push
mov
or
mov
inc
fsub
inc
xchg
ret
cmp
ret
pop
sar
and
cmp
pushf
mov
ret
js
add
jle
repnz
push
je
cmps
mov
out
ja
xchg
jp
pop
jmp
es
imul
div
lahf
loopne
bound
or
scas
test
jmp
pop
or
mov
pop
and
mov
fwait
ins
mov
out
stc
and
test
bound
dec
ror
adc
pop
jmp
push
push
dec
cmp
fld
sbb
fucomp
vpunpckhqdq
(bad)
leave
in
inc
add
mov
push
xor
fisubr
outs
xlat
inc
xchg
jnp
pop
lahf
test
ins
iret
xchg
pop
cmp
gs
push
scas
jle
push
leave
sub
stc
inc
cld
hlt
xor
in
xchg
mov
dec
ds
and
inc
adc
push
sub
and
add
fwait
push
repnz
lods
mov
lock
stos
hlt
mov
xor
das
pop
sbb
fcomi
mov
sbb
or
xchg
push
xchg
es
jnp
loope
dec
or
inc
jb
imul
mov
adc
(bad)
frstor
rol
stos
pop
fsub
lock
ins
rep
fs
xlat
inc
xor
lds
dec
jnp
cmp
pop
in
xchg
jmp
mov
jo
mov
sahf
push
pop
mov
mov
xor
xchg
mov
mov
cdq
scas
push
xchg
jl
xchg
mov
inc
jo
cdq
cmp
add
cwde
jo
mov
les
int
sub
jne
retf
sub
mov
into
adc
shr
loopne
add
fxch
daa
or
ffree
or
sbb
imul
jp
or
test
test
scas
sahf
sub
and
jge
retf
lahf
mov
cmp
addr16
std
lahf
fs
test
imul
mov
xchg
int
xchg
nop
mov
add
or
int3
push
jle
mov
data16
or
je
cmps
or
add
(bad)
fild
in
stos
jae
cdq
nop
sbb
(bad)
arpl
add
retf
jecxz
jnp
push
mov
mov
cmp
aas
jle
jbe
rcl
lods
pusha
sti
fmul
add
push
scas
jbe
xchg
out
sub
lea
fadd
call
add
das
cmp
push
imul
jmp
fwait
mov
or
jmp
(bad)
in
xchg
add
dec
repnz
repz
mov
pop
jo
adc
or
shr
movs
in
jge
(bad)
jb
(bad)
push
lods
arpl
mov
adc
cmps
mov
push
push
je
mov
dec
rcr
cmp
sbb
test
repnz
mov
dec
sub
or
dec
sub
pop
dec
push
loope
pop
mov
xchg
(bad)
out
stc
stos
or
sbb
shl
pop
out
ins
and
add
xchg
movs
dec
leave
jmp
popa
mov
cmp
push
cmp
cmp
leave
or
test
adc
nop
jb
daa
stos
push
jle
pop
enter
fdiv
(bad)
sbb
in
inc
pop
sbb
jbe
jnp
mov
cmc
(bad)
cmp
jae
lea
push
(bad)
ds
dec
mov
dec
jb
jne
icebp
or
cmp
ins
fdiv
mov
in
sub
jmp
aam
test
push
xchg
mov
nop/reserved
retf
in
int3
mov
hlt
in
rol
cmp
and
pop
push
jb
and
xchg
jmp
jns
adc
stos
push
fmul
lea
rcl
pop
les
cld
lea
inc
xor
scas
pop
and
dec
sub
jp
xor
mov
sub
and
pop
daa
cdq
inc
nop
xlat
sbb
stos
add
ret
xor
dec
mov
sub
pop
lahf
push
pushf
leave
aaa
add
dec
jb
fld
push
adc
sar
cmp
mov
pop
xchg
ret
mov
jbe
xlat
jb
arpl
icebp
and
inc
jmp
adc
inc
lea
ins
mov
cmp
xchg
call
pop
sub
pop
dec
cdq
sbb
xchg
cmp
inc
out
aaa
adc
add
rol
ror
pop
addr16
mov
aad
popf
mov
mov
mov
add
dec
or
stc
test
or
or
fild
add
mov
or
outs
dec
add
(bad)
fsubr
mov
enter
add
xor
dec
push
cmp
sub
ret
js
cmp
into
inc
scas
push
in
mov
sub
iret
push
jp
sbb
mov
mov
sub
mov
cwde
fidiv
sub
movs
push
(bad)
dec
cmps
adc
in
or
pop
in
dec
jo
jp
push
ret
loope
pop
sbb
xor
sub
test
loope
fbstp
aaa
mov
popf
add
mov
adc
fldenv
mov
mov
or
mov
add
inc
adc
jp
push
stos
rcl
mov
jecxz
cld
inc
pop
ffree
lods
lock
xchg
cmp
popa
mov
call
in
or
pop
call
mov
xchg
adc
lock
(bad)
fst
jg
sub
xchg
in
test
scas
retf
ins
inc
inc
sar
jle
cmp
in
or
inc
iret
movs
mov
jge
in
fidiv
test
das
xchg
int
add
push
sub
mov
ror
inc
popa
jne
lods
nop
lods
xchg
repnz
int
cld
adc
push
and
fs
sbb
ret
fsubr
shl
mov
inc
and
add
test
mov
pop
jns
shl
sub
(bad)
rcl
hlt
(bad)
fcmovnu
dec
ret
or
or
mov
aas
inc
cmps
mov
jne
(bad)
jl
sbb
fstp
retf
(bad)
das
pushw
mov
call
mov
dec
call
lock
popa
xor
out
shr
out
mov
shl
xlat
or
mov
pop
jnp
pop
mov
dec
call
or
bound
dec
adc
sbb
lock
xlat
xchg
pop
push
sti
xchg
lock
jnp
fucomip
adc
push
push
outs
and
xchg
dec
xor
pop
movs
and
in
or
pushf
pop
les
repz
push
daa
mov
jmp
adc
je
aad
and
aam
mov
sahf
pop
and
std
enter
test
lods
pop
(bad)
dec
aaa
hlt
sbb
mov
inc
mul
stc
xor
mov
arpl
shr
xchg
or
in
jmp
push
and
push
(bad)
test
add
jb
push
mov
mov
popf
stos
imul
pusha
call
mov
adc
ficom
into
add
mov
stc
and
sub
push
dec
mov
cli
cmp
and
test
ds
and
rcr
push
not
js
mov
push
inc
cmp
or
fld
mov
(bad)
push
imul
int3
loope
call
jmp
and
fdiv
add
mov
push
ja
xor
mov
fst
(bad)
mov
mov
in
pop
retf
aaa
mov
push
movlps
sbb
lahf
ficom
lods
daa
mov
aas
iret
stos
add
addr16
aad
sbb
fimul
aad
movs
ret
mov
mov
push
imul
arpl
jle
dec
out
imul
dec
mov
out
cdq
mov
(bad)
adc
push
dec
(bad)
fst
sub
mov
mov
mov
inc
mov
cmp
dec
stos
sub
inc
xchg
(bad)
(bad)
imul
sub
push
scas
push
dec
imul
sbb
cwde
sub
aad
push
add
std
mov
loopne
icebp
fsubrp
adc
test
add
adc
xor
cmps
ret
sub
stos
hlt
pop
aas
xchg
inc
push
int
stc
sub
fld
in
xchg
lds
fdiv
je
lea
inc
inc
xchg
out
loop
(bad)
sbb
push
fdivrp
xchg
push
push
ins
out
sub
inc
cmp
ss
xchg
shl
dec
test
fsubr
cmps
push
shl
test
push
adc
xor
les
dec
(bad)
add
std
push
std
iret
add
test
popa
push
adc
push
dec
daa
jmp
xchg
jge
cmp
scas
push
xchg
das
dec
outs
xlat
jnp
(bad)
or
movs
dec
sub
mov
in
clc
aaa
pop
test
mov
int
xchg
sub
mov
cmps
pop
mov
iret
outs
push
push
call
imul
mov
fistp
shl
cmp
mov
xchg
out
std
or
jb
iret
(bad)
sar
mov
mov
in
cs
jmp
add
pop
jae
mov
call
pop
iret
jmp
sbb
in
dec
add
inc
inc
jno
or
jnp
and
test
mov
cli
outs
mov
sbb
xchg
(bad)
loope
jecxz
xchg
and
dec
(bad)
pop
fisttp
push
(bad)
lahf
push
xchg
gs
mov
aas
ficom
and
mov
retf
add
lea
mov
call
jge
jmp
outs
jbe
add
ret
cdq
dec
aam
jnp
xor
outs
outs
rcr
pusha
ss
add
ins
loope
xchg
(bad)
ficom
fiadd
mov
inc
bound
shr
adc
push
lock
arpl
loopne
mov
outs
retf
nop
lahf
cmp
sti
xlat
pop
ja
cmp
and
ds
mov
cmp
mov
xchg
or
(bad)
cmp
sub
and
repnz
lock
es
cwde
(bad)
sub
or
sub
cld
retf
pop
sub
aas
aad
jl
dec
out
push
test
pop
xchg
pop
mov
in
sub
push
loope
mov
into
loopne
push
retf
pop
repnz
div
stos
fidiv
das
lock
push
push
loope
pop
cmp
in
mov
mov
shl
mov
fld
adc
sahf
das
push
in
push
fidivr
ins
mov
push
sub
dec
dec
js
jmp
fwait
ret
rol
shl
(bad)
cmp
or
jge
inc
and
retf
or
sub
nop
imul
fisttp
fwait
retf
(bad)
sahf
retf
gs
or
dec
ror
pop
mov
adc
ret
(bad)
cmp
test
add
test
in
ficom
daa
sub
fdiv
cli
popa
ror
cmc
mov
xchg
sub
outs
sub
imul
jmp
inc
(bad)
sub
pop
pop
sbb
mov
push
xor
sub
inc
cdq
inc
cmps
jno
pop
jae
pop
pushf
fs
mov
pop
add
pop
push
adc
adc
repz
adc
mov
push
test
out
sub
jge
jle
sbb
mov
cmp
sbb
pop
mov
sbb
jb
jle
outs
cmp
dec
jle
xor
mov
adc
leave
ficomp
mov
pop
and
shl
mov
xor
jle
fs
shl
push
jo
inc
mov
jo
add
shl
mov
jl
int3
pop
(bad)
cdq
adc
add
mov
fstp
ret
sti
add
dec
xor
rol
or
mov
test
(bad)
sahf
(bad)
mov
imul
popa
ja
les
stos
scas
jmp
vpcmpgtw
xchg
push
push
jle
xor
je
and
or
call
jl
lahf
ins
ja
(bad)
cwde
fbld
xchg
int
jns
push
sub
cmps
stc
jo
and
(bad)
imul
dec
jecxz
push
ins
and
inc
(bad)
sub
and
sub
retf
nop
jl
test
fstp
lock
mov
fiadd
js
add
push
gs
scas
imul
add
les
stos
or
inc
fsub
mov
sub
push
sbb
pop
es
sbb
sub
xor
ins
jl
xor
sbb
add
jb
addr16
dec
jl
lock
inc
scas
fdiv
ja
mov
(bad)
cmps
inc
jecxz
(bad)
mov
outs
jl
in
clc
xchg
pop
gs
adc
cmp
adc
fst
movs
sub
sar
sub
arpl
sbb
dec
int3
cmp
add
out
mov
cmps
and
cmp
enter
mov
outs
push
cmp
or
pop
mov
jecxz
test
stos
arpl
xor
bswap
inc
pslld
jge
pop
mov
ss
cmp
fimul
jne
js
lods
dec
and
shr
enter
pop
jae
nop
and
cmp
lods
aam
xor
mov
dec
jne
retf
outs
xchg
outs
(bad)
pop
push
lea
addr16
cmp
aas
fwait
sahf
mov
(bad)
sub
or
dec
add
aad
jo
test
push
cmc
fisubr
dec
fdiv
cmps
loope
inc
add
stc
xchg
sub
dec
cmp
dec
mov
mov
push
cmp
xchg
dec
push
stos
jmp
out
iret
mov
popf
pop
pop
mov
pop
imul
in
shr
fmul
inc
js
and
xchg
scas
adc
das
add
and
test
push
pushf
mov
pop
and
hlt
rol
add
add
sub
pusha
mov
scas
sub
int
in
dec
jle
jle
sbb
jns
jecxz
test
cmp
dec
xchg
dec
pop
mov
in
loope
xchg
xor
sahf
or
pop
sub
and
out
add
outs
sub
mov
cmp
std
shl
cmp
sub
jo
ret
cs
xor
sti
js
lock
rcl
xor
jo
or
loop
nop
jne
mov
bound
jmp
xor
jo
and
into
fs
ja
and
pop
adc
outs
out
mov
cmp
sub
mov
inc
or
xchg
mov
nop
sub
cmp
stos
mov
jno
enter
inc
fwait
inc
iret
cmp
movs
popa
mov
xchg
cmps
in
pusha
sub
jp
sti
pushf
jnp
daa
aas
mov
bound
imul
retf
push
and
aam
or
inc
pusha
push
ins
and
enter
loop
cmps
pop
adc
test
pop
pop
ret
mov
rcr
cmp
push
lods
out
mov
dec
push
mov
leave
out
clc
lahf
aaa
ret
loope
icebp
ins
xlat
jle
pop
pushf
js
mov
mov
dec
imul
popf
leave
add
xor
movs
xor
adc
enter
mov
sbb
es
mov
mov
mov
jbe
call
push
imul
mov
mov
jp
pop
cdq
arpl
bts
in
adc
fwait
dec
or
aas
aam
repz
push
fwait
sub
aam
in
cdq
add
mov
dec
push
pop
repnz
clc
sub
es
retf
and
outs
mov
ret
int3
imul
adc
aam
(bad)
xchg
mov
mov
mov
jmp
mov
in
lea
cli
sub
ss
data16
pusha
add
and
and
or
fist
xor
add
mov
or
xor
mov
sahf
and
out
sbb
dec
movs
sbb
aad
adc
push
cld
inc
add
mov
and
and
jno
mov
xchg
jge
dec
and
sub
jle
inc
adc
cwde
push
sbb
or
xchg
sbb
sbb
rcl
push
inc
pop
movs
int3
ins
mov
aas
bound
pop
push
fstp
sti
cmps
pop
cwde
cmp
and
ret
sub
mov
jle
cdq
es
mov
fnstenv
mov
or
mov
xchg
ins
push
mov
push
inc
and
or
xchg
dec
std
jne
pop
retf
movs
jb
sub
mov
stos
jb
test
dec
clc
gs
sahf
mov
jmp
scas
(bad)
in
sub
add
(bad)
repnz
mov
mov
(bad)
push
mov
inc
pop
or
sub
inc
push
iret
cs
jno
and
sub
jae
mov
stc
push
xchg
(bad)
or
int
std
dec
hlt
(bad)
sub
pop
por
mov
jl
inc
xor
sti
or
push
pop
mov
cli
jae
xchg
inc
sub
push
dec
inc
sub
jnp
int
add
js
or
outs
mov
mov
fnstenv
mov
fiadd
dec
or
es
sub
outs
outs
adc
pop
cld
jg
mov
icebp
movs
in
cld
sub
xor
scas
jmp
inc
arpl
fs
ja
loope
mov
inc
fwait
jl
rcl
pop
jecxz
sub
sub
sub
out
xor
or
inc
xchg
sbb
or
jle
and
xor
xchg
aad
loop
outs
sub
in
pop
push
cs
add
imul
cmp
(bad)
into
pop
outs
movs
pop
xchg
mov
ret
mov
hlt
sbb
push
outs
(bad)
cmc
lds
inc
stc
mov
call
mov
rcr
loope
nop
add
movs
sbb
push
shl
add
mov
xchg
(bad)
cs
inc
mov
aas
pop
loop
pop
cmps
adc
loope
cmp
inc
sbb
pop
pop
ss
movs
sub
sahf
mov
inc
mov
mov
add
cmp
sub
cmc
mov
jp
jbe
in
push
bound
(bad)
(bad)
cmp
cli
movs
(bad)
push
xor
lahf
sub
dec
dec
lods
xchg
aam
mov
pop
sub
(bad)
sbb
test
sbb
mov
jb
xchg
push
sahf
mov
rcl
jo
fstp
mov
stos
mov
add
mov
mov
addr16
inc
mov
iret
fadd
(bad)
dec
test
or
jnp
daa
repnz
enter
rol
jge
cmp
jae
push
mov
or
inc
(bad)
mul
aas
fs
inc
cwde
pop
sub
xchg
dec
test
or
shr
ret
ror
je
out
inc
enter
aam
sbb
std
(bad)
mov
or
(bad)
in
mov
xchg
and
aaa
dec
mov
imul
xchg
dec
retf
cmp
push
cli
out
inc
lods
sar
pop
stc
mov
rcr
jecxz
add
lea
out
lea
push
xchg
jmp
jnp
fistp
call
lock
xchg
push
add
mov
popa
and
stos
adc
rcl
test
(bad)
or
jge
and
mov
xor
fild
mov
(bad)
jno
stos
mov
and
scas
inc
adc
cmp
outs
sar
sahf
int
enter
jl
les
aam
add
mov
mov
nop
bnd
push
leave
sub
push
push
mov
or
loope
arpl
cdq
ret
cmp
out
addr16
push
dec
pop
fldl2t
xchg
or
xor
addr16
jb
in
push
and
jp
or
pop
xor
sbb
lods
popa
jo
in
neg
fisubr
mov
arpl
add
hlt
cmps
loope
xchg
(bad)
push
sub
or
rcl
pop
cdq
jns
mov
inc
sub
xchg
push
in
cmc
add
push
enter
iret
ret
sub
bound
sbb
add
jbe
pop
out
mov
xor
lods
adc
mov
adc
repnz
and
js
sbb
inc
imul
shr
popa
sub
mov
sub
scas
xchg
jno
mov
pop
and
sub
push
inc
cld
mov
push
sub
pop
mov
pop
and
std
movs
ss
imul
scas
pop
mov
in
jecxz
add
int
aad
pusha
into
and
mov
cmps
sbb
mov
or
repz
in
sub
repz
sub
jnp
aas
jp
xchg
xchg
mov
adc
mov
push
push
daa
and
repz
pusha
sub
mov
sahf
cmps
mov
popa
lahf
ret
addr16
cld
ins
dec
sub
fwait
loope
dec
sahf
jg
pop
mov
mov
loop
mov
fabs
test
int3
lahf
out
pop
mov
ficom
sub
ficom
ret
cs
mov
hlt
stc
add
imul
loope
iret
(bad)
(bad)
iret
inc
xor
sub
int
aas
adc
mov
jae
arpl
inc
adc
icebp
xchg
out
iret
mov
outs
push
ja
pop
push
mov
nop
mov
pop
inc
out
pop
xor
repnz
mov
xchg
add
add
sahf
mov
push
mov
cli
bound
cmp
ja
es
in
lock
add
call
scas
cmp
add
movs
leave
in
je
daa
sub
mov
cs
leave
(bad)
xor
fild
mov
ins
jne
cmc
std
int3
(bad)
sbb
gs
push
clc
js
(bad)
sub
rcr
push
shl
mov
dec
add
mov
sub
mov
pop
jmpw
std
rcr
jb
sub
mov
ficomp
jg
push
mov
aas
xor
fwait
sbb
jbe
pop
or
jb
push
sub
test
sbb
xchg
int3
jp
fmul
jmp
and
xor
dec
jecxz
xchg
(bad)
out
mov
jo
mov
or
nop
aam
arpl
pop
js
fstp
(bad)
pop
std
ds
push
ins
test
inc
sti
or
les
mov
daa
push
hlt
pop
jl
mov
xchg
jle
sub
dec
ror
xor
nop
adc
aas
adc
inc
push
std
push
les
cmps
fs
test
imul
mov
test
pop
(bad)
(bad)
push
(bad)
mov
stc
push
dec
mov
int3
shl
stc
mov
cmps
jne
dec
mov
xor
jns
mov
out
aaa
mov
ins
js
xor
mov
and
outs
push
push
mov
(bad)
or
push
xchg
pop
inc
inc
(bad)
push
add
pop
mov
pop
adc
int3
int
jns
div
dec
pop
pop
and
cld
inc
xchg
push
pop
shl
mov
sub
sbb
and
loope
dec
xchg
pop
sub
cs
mov
out
icebp
cmp
clc
sub
jle
cmp
ret
mov
into
ficomp
pop
imul
inc
imul
loopne
pop
jnp
or
mov
xor
mov
jg
jp
clc
sbb
aam
mov
icebp
cmp
dec
je
imul
cli
leave
ss
lods
inc
rol
into
mov
leave
push
stc
scas
xchg
retf
xor
xchg
fbld
xor
mov
adc
pushf
movs
fsub
ror
jmp
call
sbb
mov
jge
pop
jp
jne
imul
aaa
hlt
push
dec
mov
(bad)
iret
ud0
adc
(bad)
pslld
jl
sahf
jmp
xchg
aam
call
ret
push
dec
int3
xchg
xchg
test
pop
sbb
xor
sub
jge
mov
or
in
sahf
mov
and
dec
mov
pop
push
push
shr
add
stc
lods
imul
mov
push
add
mov
fsubrp
dec
xor
popa
(bad)
mov
pop
dec
pop
sahf
das
call
add
xchg
and
outs
mov
or
cwde
add
clc
mov
pop
cmp
mov
test
xor
fistp
mov
fimul
inc
push
or
pop
pusha
adc
xor
fild
sbb
cmp
nop
dec
mov
(bad)
fcmovnbe
fcomp
pop
jge
cmps
fbstp
out
dec
cmc
mov
xlat
inc
mov
xchg
mov
mov
pop
push
xchg
test
lea
scas
mov
inc
les
mov
pop
test
and
idiv
cdq
test
loop
das
inc
sbb
sub
(bad)
mov
add
cli
test
push
stos
push
push
mov
lahf
adc
adc
inc
pusha
and
xchg
in
sub
lods
and
jecxz
pushf
adc
ins
jg
jnp
mov
adc
ins
jae
adc
movs
xchg
out
fdivr
jg
mov
push
xor
cs
cs
xor
shr
paddusw
sub
test
cmp
sub
jne
(bad)
jbe
sbb
adc
ret
jmp
and
mov
aad
repz
lds
adc
mov
mov
or
in
retf
das
(bad)
popf
mov
lahf
lahf
popa
xchg
in
push
in
not
pop
mov
mov
fs
push
call
push
mov
pop
out
add
nop
call
cmps
dec
mov
jle
cli
mov
cmc
scas
dec
aad
pop
popf
inc
out
jg
dec
cli
push
xchg
xchg
sub
arpl
jmp
scas
fbld
mov
xor
outs
leave
dec
fild
dec
mov
mov
jge
rol
cwde
stos
lds
mov
xor
mov
fprem1
xchg
stos
arpl
lods
inc
call
ins
and
(bad)
dec
shr
je
mov
int
(bad)
mov
mov
into
jge
(bad)
out
push
dec
aas
inc
rcr
cmp
push
add
or
dec
stc
aam
push
out
mov
outs
lahf
ins
outs
dec
pop
in
inc
daa
dec
(bad)
out
jg
pop
mov
cli
jno
pop
mov
mov
push
mov
xchg
sbb
jmp
lsl
add
mov
inc
pop
jmp
jbe
mov
cmps
repz
gs
or
in
pop
push
adc
js
pop
mov
push
dec
add
repnz
int3
pushf
or
pop
fs
data16
adc
add
adc
(bad)
sub
movs
(bad)
mov
xchg
test
push
pusha
mov
pop
jge
test
add
inc
outs
pop
js
iret
fld
cmp
xor
and
fmul
in
add
int3
add
fs
nop
out
lea
retf
mov
lahf
pop
cmps
sbb
adc
inc
and
retf
or
jb
mov
call
mov
pop
cmp
rcl
(bad)
(bad)
cmp
ret
iret
mov
retf
inc
adc
cmp
jp
in
jge
sub
push
enter
ja
mov
(bad)
lahf
lds
(bad)
jnp
aas
sbb
loopne
sbb
xor
xor
sub
in
or
jecxz
movs
add
sti
test
loop
cmp
daa
mov
scas
xchg
shr
scas
in
cmps
fisub
adc
jb
ins
aaa
cmp
das
cmps
rcr
xchg
cmp
test
data16
(bad)
cmp
call
cmp
icebp
outs
push
mov
inc
repnz
cmp
cmc
jg
sub
sbb
add
test
cld
cld
sti
xor
sahf
data16
xchg
push
sub
(bad)
fldz
jmp
dec
xor
dec
sub
jne
nop
or
imul
sbb
push
mov
add
ins
pop
push
fwait
daa
mov
and
add
jbe
repnz
mov
push
mov
arpl
xchg
mov
cwde
jge
in
gs
xor
shl
dec
jbe
pop
ficomp
push
retf
add
jb
es
push
inc
popa
fisub
pusha
xor
popf
sti
mov
jp
loopne
mov
int3
aaa
popf
push
inc
je
or
ror
inc
popa
sub
mov
mov
ret
jae
mov
xchg
jge
cmp
sub
fstp
or
int3
mov
jg
pop
add
sub
xchg
inc
push
cmc
dec
pusha
ror
out
inc
mov
dec
adc
test
out
push
dec
xchg
stos
shl
adc
push
enter
xchg
sub
add
imul
or
add
pop
jmp
pop
or
pop
loopne
cwde
mov
popa
addr16
js
imul
dec
and
repnz
jp
mov
jb
push
out
sub
jo
push
mov
mov
adc
mov
pop
xor
sbb
out
pushf
xchg
fild
mov
test
cs
add
test
mov
pop
test
movs
mov
hlt
shr
push
pop
data16
xor
or
out
cmps
mov
mov
xchg
mov
mov
scas
test
push
loop
pushf
jmp
sub
sub
push
mov
xchg
ret
jp
cmps
ret
sbb
mov
pop
push
cwde
add
cmp
mov
mov
lods
in
inc
inc
sub
test
pop
xchg
test
xchg
fstp
leave
inc
sub
xor
dec
pop
test
or
lds
pop
sbb
sbb
sbb
or
pop
cmp
enter
fsubr
sub
jb
not
inc
inc
std
repz
mov
fild
dec
popa
sbb
push
shl
mov
into
mov
add
cdq
adc
outs
lods
fild
imul
test
(bad)
sub
xchg
scas
jmp
jb
out
push
xchg
in
or
rcr
or
bound
test
dec
fwait
push
jno
sbb
inc
(bad)
xchg
retf
xchg
jle
or
cmps
sbb
adc
loope
je
push
xchg
movs
test
mov
mov
aam
int3
cs
(bad)
loopne
push
cmc
pop
push
mov
and
push
out
dec
sub
daa
pop
sub
pop
jne
inc
add
inc
mov
ins
and
shr
inc
mov
mov
ss
or
shl
je
ds
dec
les
imul
adc
fcom
dec
mov
mov
pop
popf
inc
push
sbb
push
jo
pop
xchg
dec
inc
cmp
push
push
xor
stos
ja
and
xchg
repz
adc
neg
sbb
pop
(bad)
(bad)
loop
bndldx
aad
pop
lods
pslld
(bad)
mov
pusha
out
test
push
and
out
mov
xchg
scas
inc
xchg
dec
and
das
bswap
in
cmp
int
xor
daa
jle
inc
or
or
ds
nop
sbb
sub
add
and
popf
fistp
push
xor
in
pop
sub
shl
dec
sbb
pop
adc
lods
inc
adc
imul
fiadd
sbb
stos
jg
pop
mov
jle
xchg
js
add
lea
lahf
leave
mov
out
or
das
repz
adc
test
cmp
in
xor
call
(bad)
daa
dec
or
dec
gs
sub
push
mov
xchg
pop
imul
jl
(bad)
cmp
sub
push
jnp
movs
loop
dec
and
dec
mov
scas
(bad)
sub
out
sbb
pop
retf
or
jecxz
mov
hlt
fdivr
push
pushf
pop
std
xchg
jmp
(bad)
or
arpl
pop
jecxz
sbb
jmp
popf
push
or
cdq
mul
es
stos
in
cmp
or
iret
scas
cld
out
ins
scas
ss
aad
add
cdq
and
xchg
aas
pop
into
cmp
in
mov
mov
or
clc
pop
stos
sbb
mov
xchg
popf
mov
mov
dec
mov
sbb
mov
adc
jno
mov
mov
mov
and
cmp
cmp
lods
adc
pop
scas
sub
or
sbb
pop
jmp
cmps
outs
sbb
adc
cmp
sbb
and
int
movs
into
lock
test
inc
xor
inc
cmp
sub
lds
dec
lods
jb
add
mov
stc
dec
(bad)
pusha
call
cmps
mov
ins
dec
xchg
xchg
cmp
int3
ins
add
lock
jbe
imul
neg
jmp
fsub
lahf
xchg
and
mov
mov
or
ror
cmc
stos
or
jb
or
adc
movs
es
xor
es
mov
or
fmulp
mov
mov
dec
mov
shr
jg
cwde
adc
fucom
into
mov
xchg
mov
cmp
int
popa
push
in
aaa
xchg
mov
mov
ret
inc
and
sbb
jb
sub
cmp
jbe
mov
(bad)
xchg
push
fist
or
add
test
lds
xchg
je
xchg
cmp
mov
jnp
ins
test
lahf
pop
gs
es
push
(bad)
ins
fsubr
lods
into
add
ret
jp
aas
fild
inc
dec
add
mov
inc
retf
cmp
sub
or
pushf
js
loop
fmul
sub
mov
rcl
cmc
or
adc
sub
aaa
popa
out
in
fstp
mov
sub
push
not
hlt
push
fdiv
rcl
mov
(bad)
inc
jae
movs
adc
mov
cld
jnp
aaa
pop
jmp
ret
shl
push
stos
push
mov
aas
lea
sub
lock
sub
xchg
repnz
fsub
imul
in
scas
outs
lods
rcr
inc
mov
and
repz
or
scas
adc
fdivr
cld
mov
and
(bad)
jge
lds
inc
sub
add
xchg
push
cmp
sbb
pop
sub
loope
push
lods
and
mov
inc
pop
out
imul
xor
rol
mov
scas
sbb
push
inc
ds
(bad)
imul
mov
and
mov
adc
leave
cmp
(bad)
push
xor
(bad)
ja
outs
rcr
xchg
iret
mov
lock
(bad)
cmp
inc
dec
sbb
jbe
mov
inc
cmp
or
xor
loopne
enter
lea
shl
lods
and
out
sub
cmp
inc
aam
(bad)
and
sti
dec
sbb
loop
lock
imul
movs
test
lods
imul
ins
xchg
ror
mov
rol
sbb
mov
jl
jle
cmp
ss
and
cmps
xor
add
sbb
inc
mov
sub
mov
push
mov
(bad)
out
or
sar
pop
sub
in
lock
xchg
adc
ret
pop
retf
in
mov
ins
int
and
xlat
pop
std
push
jge
cmp
mov
mov
pop
adc
and
sbb
or
mov
sub
xor
repz
popa
out
data16
hlt
jno
std
or
aad
bound
push
cli
sub
in
or
add
sub
rcr
jg
stos
js
xchg
pop
xor
fadd
add
cmp
into
(bad)
repz
int
jg
jge
mov
jecxz
rcr
jne
push
jo
idiv
leave
cmp
inc
adc
add
aaa
add
push
push
lods
sbb
xor
popa
pop
loopne
xchg
lods
xchg
call
out
fcmovnu
jl
popf
adc
aam
cs
je
cmp
stos
jmp
fadd
shl
addr16
xor
leave
fxam
xchg
mov
fwait
mov
xchg
xor
cmp
cdq
aad
pop
xchg
add
adc
outs
mov
fucomip
repnz
cmp
div
jno
lahf
imul
seto
nop
sub
cdq
jle
out
jns
dec
ins
stos
mov
ret
cmp
or
push
(bad)
in
stc
std
or
push
push
sub
test
pusha
push
gs
fidivr
ficom
leave
(bad)
out
arpl
movs
mov
adc
jns
mov
test
(bad)
mov
cli
mov
cmps
mov
mov
(bad)
jmp
rcr
sub
pop
push
sub
and
or
js
data16
sub
or
push
mov
mov
cmp
retf
mov
mov
paddusw
push
fcom
fisubr
mov
push
mov
ficom
cmps
movs
jb
addr16
shl
clc
jmp
mov
mov
jp
push
repnz
shr
mov
sbb
jcxz
ficom
add
aad
int3
sbb
ret
test
out
loope
outs
mov
sub
or
mov
outs
sub
idiv
xchg
fcmovnbe
cs
pop
mov
ss
(bad)
fld
adc
(bad)
or
sub
rcl
add
in
xor
out
push
shl
enter
dec
jb
jge
rcr
leave
xor
dec
push
or
test
and
arpl
shl
push
dec
pushf
pop
mov
mov
fisubr
lock
cs
shl
push
pushf
aaa
sub
inc
add
add
jo
push
mov
cli
imul
mov
and
imul
sbb
push
lds
adc
int3
inc
push
mov
dec
xlat
jae
call
adc
aam
sahf
and
mov
xlat
jle
jl
push
adc
pop
aas
inc
xchg
xchg
push
lahf
jecxz
leave
sbb
adc
mov
push
sub
repz
jno
add
jmp
or
in
xchg
sbb
pusha
sahf
sbb
mov
lea
out
sbb
ds
xchg
shl
stos
adc
add
sub
das
lea
xor
rol
out
ins
ja
dec
pop
imul
or
int
dec
pop
or
ins
cmp
shl
jmp
iret
or
mov
xchg
leave
jnp
xchg
mov
fbstp
int
mov
out
xor
shl
mov
sub
popa
cmc
sub
sar
fsub
mov
ins
inc
pop
mov
sbb
mov
adc
sbb
adc
fwait
aaa
jl
pop
push
popf
sub
cmp
(bad)
outs
aaa
stos
xchg
adc
rol
xchg
or
in
add
pop
int
hlt
ins
inc
sub
inc
(bad)
dec
xchg
fcom
(bad)
in
push
out
fdiv
mov
aam
stc
or
xchg
jle
out
iret
cdq
and
mov
pusha
repz
aam
imul
out
xchg
rol
push
sub
pushf
cmp
cmp
mov
mov
push
test
xchg
aas
or
jnp
mov
aas
cmp
aam
dec
mov
pmaxub
rol
enter
xor
out
push
lds
out
(bad)
std
adc
loopne
cmp
in
dec
scas
jbe
push
aad
scas
xchg
scas
addr16
fild
mov
ins
sbb
stos
bound
push
mov
aaa
add
dec
mov
or
(bad)
retf
adc
or
adc
sbb
fst
mov
mov
mov
jo
push
jg
ficom
aam
pop
xchg
sbb
ror
out
push
int
outs
icebp
jb
xchg
adc
dec
push
jb
loop
and
dec
sti
xor
aad
add
mov
lods
sub
pop
xor
push
jecxz
or
outs
dec
add
mov
push
push
pop
mov
mov
mov
mov
fisubr
add
cmps
mov
pop
out
adc
sub
and
mov
add
addr16
rcr
mov
enter
out
xchg
sub
int
mov
bswap
cs
pop
pop
mov
xchg
push
in
or
xchg
xchg
lds
loop
fstp
hlt
jmp
xchg
mov
cmps
xchg
sub
arpl
leave
sub
popa
inc
xchg
sub
sub
mov
iret
dec
xchg
sbb
stos
stos
movs
sub
sbb
in
adc
out
sub
dec
jnp
test
loope
test
clc
jp
retf
mov
jge
shl
pop
lods
cmp
and
mov
push
cmps
pop
fsubr
jne
xor
enter
xchg
lea
shl
lahf
imul
popa
xchg
adc
es
add
jecxz
dec
rol
sbb
mov
mov
fucom
xchg
inc
jmp
and
fmul
movs
jo
adc
retf
data16
cld
fistp
cwde
daa
outs
push
fs
add
push
jnp
je
inc
mov
pop
inc
push
retf
sub
scas
jge
mov
push
(bad)
push
and
or
mov
pop
inc
pop
jne
fstp
inc
inc
inc
fsub
xor
mov
jbe
add
mov
add
or
(bad)
in
push
or
out
xchg
xchg
or
daa
push
jmp
add
lods
out
popf
pop
push
(bad)
in
sbb
xor
xchg
pop
std
xor
sbb
popa
and
pop
int
pop
ror
sbb
std
lds
push
xchg
clc
or
mov
retf
mov
(bad)
in
xchg
inc
adc
xor
inc
clc
leave
jp
xchg
xchg
in
scas
leave
aaa
outs
(bad)
cmc
sahf
cmps
pop
pop
dec
mov
cli
jmp
cmps
mov
jp
dec
(bad)
(bad)
sar
shl
and
int3
dec
(bad)
std
mov
lods
push
mov
sub
add
xchg
push
fisttp
out
push
sub
cmp
jne
xchg
aas
cmp
fwait
je
pop
push
add
mov
mov
repz
pushf
in
pop
add
sbb
mov
xchg
ins
inc
pop
iret
mov
(bad)
jo
in
out
push
in
fsub
sbb
repz
iret
std
or
jg
(bad)
sti
test
add
(bad)
jmp
xchg
sbb
lds
arpl
pop
adc
jge
cmp
cwde
pusha
loop
mov
xchg
cmps
push
mov
inc
int3
and
lahf
ins
retf
(bad)
pop
xchg
rcl
xor
pushf
pop
ds
outs
xchg
lock
mov
push
push
pop
mov
fld
mov
pop
sub
and
jp
xchg
rol
or
stos
mov
loope
iret
mov
stos
mov
mov
mov
in
jo
adc
mov
test
fidiv
scas
lock
cmp
iret
or
jge
inc
lea
je
add
daa
mov
test
cwde
sbb
stc
mov
data16
adc
push
xor
mov
test
sbb
test
inc
fist
adc
sbb
sbb
mov
mov
jae
mov
stc
cmp
push
add
jo
and
cmps
out
loope
sbb
shl
jnp
mov
mov
dec
int
aam
ret
mov
mov
cmp
ja
int
add
xor
sbb
or
push
push
adc
call
cmps
mov
cmps
enter
ins
jb
cdq
cmp
xchg
mov
test
pop
jns
inc
adc
div
xchg
adc
adc
adc
cld
push
pop
cmps
ds
xor
addr16
inc
ins
je
es
ror
xor
xchg
mov
sahf
adc
lds
movs
repnz
popa
xchg
mov
cmps
jns
mov
dec
xchg
push
xchg
shl
mov
(bad)
or
inc
mov
ja
nop
jbe
push
mov
leave
repnz
inc
ins
pop
or
mov
les
fucom
jmp
fistp
js
adc
pop
sub
adc
(bad)
(bad)
ja
pop
(bad)
(bad)
inc
cmps
sbb
cmp
push
in
outs
and
ror
dec
jl
mov
out
shl
stos
jl
and
stc
outs
push
jmp
aas
dec
mov
out
les
loopne
mov
sub
and
inc
retf
jl
and
adc
adc
retf
rcl
or
sbb
or
scas
mov
stc
add
shr
cmp
and
lods
cdq
pushf
cmp
xchg
fcom
sub
(bad)
clc
rcr
cld
or
in
mov
std
sbb
cli
adc
gs
sub
pusha
pop
adc
xor
mov
ins
xchg
add
push
adc
arpl
(bad)
mov
pushf
(bad)
jmp
bound
push
sar
lods
xchg
rep
pop
sti
(bad)
sti
ins
adc
stc
mov
and
xchg
(bad)
aas
adc
dec
cmps
loop
push
test
mov
jmp
into
hlt
arpl
xor
sub
sbb
dec
sbb
xchg
push
push
hlt
sbb
retf
cmp
sub
xor
fiadd
(bad)
jnp
inc
and
gs
scas
push
sbb
test
dec
enter
clc
mov
aam
(bad)
fcom
sbb
jnp
cwde
sub
mov
jl
sub
arpl
inc
retf
int3
arpl
xor
daa
std
xchg
mov
popf
not
in
rol
aas
pop
loop
dec
aam
jp
cdq
and
dec
cmps
xchg
push
mov
dec
mov
mov
jo
mov
xor
loope
sbb
inc
mov
mov
mov
icebp
or
push
mov
cmp
or
sbb
pushf
sbb
cmps
aam
movs
call
aad
dec
or
mov
repz
dec
xchg
outs
mov
loop
jae
mov
xchg
es
and
mov
add
mov
pushf
dec
mov
je
cmp
cmp
xor
pop
push
leave
movs
pop
jle
xor
hlt
jno
dec
in
jg
fdiv
xlat
in
xchg
fistp
and
imul
and
fcmovu
mov
cmps
(bad)
pop
adc
test
aas
out
jle
loope
cmove
cmps
mov
cmc
(bad)
mov
(bad)
fmul
fimul
inc
iret
mov
push
div
jns
sbb
fimul
xchg
sti
dec
push
adc
sbb
pop
add
test
or
std
sbb
mov
sar
pushf
mov
pop
out
jle
sub
ret
jp
and
int3
cli
xchg
pop
fild
aas
fs
lock
mov
arpl
jno
mov
(bad)
and
je
push
stc
enter
mov
out
ins
ins
add
or
mov
leave
push
call
imul
adc
pop
dec
cmp
lods
in
cli
push
scas
cmp
xor
call
lahf
pop
dec
cmp
pusha
or
adc
mov
iret
xchg
fmulp
xchg
out
lods
clc
(bad)
movs
ds
dec
xchg
in
inc
test
call
sahf
mul
adc
and
pop
cmp
or
sub
add
jne
jle
clc
cmp
and
inc
mov
adc
push
mov
aam
arpl
aaa
retf
cmps
pop
clc
frstpm(287
jae
sbb
mov
jmp
jae
push
push
fistp
pop
pusha
inc
mov
jns
cmp
cmp
push
mov
dec
loopne
mov
mov
mov
fisttp
push
movs
xchg
sub
mov
ror
xor
adc
mov
sub
mov
(bad)
in
repz
out
xchg
mul
sbb
and
sbb
or
cld
stos
push
jge
mov
jnp
pop
push
pop
test
dec
ins
push
pop
xchg
xor
adc
pop
mov
and
pop
pop
das
ficom
cli
cmp
add
sub
hlt
mov
push
xor
xlat
xor
or
loopne
inc
fdiv
dec
sbb
sbb
pop
in
arpl
mov
sub
fidivr
jns
push
je
mov
test
jp
rcr
scas
add
mov
cmps
inc
test
inc
or
stos
pop
call
xor
adc
fsub
rcl
fucomip
lahf
sbb
add
sahf
jmp
mov
jns
sub
cmp
push
in
out
ja
mov
or
jne
(bad)
pop
jb
inc
aad
mov
adc
sbb
xor
repz
addr16
scas
pop
and
sti
rol
stc
push
scas
jbe
das
leave
add
dec
fstp
add
call
pop
fnstsw
xchg
mov
popf
loopne
(bad)
fisttp
loope
js
xor
loop
rcr
repz
je
jbe
gs
int
addr16
push
push
or
outs
pop
das
loop
xor
or
jge
pop
mov
push
daa
jmp
adc
jne
mov
inc
cld
push
sbb
cmps
movs
and
scas
das
ins
test
jno
dec
mov
cld
dec
iret
push
push
add
and
fistp
sbb
jmp
inc
lods
cmp
pop
jne
or
or
mov
sbb
push
dec
inc
ret
icebp
cmp
xlat
mov
sbb
scas
fadd
sbb
or
jno
mov
jmp
cwde
fwait
cmps
push
fnsave
mov
mov
xchg
sbb
mov
add
loopne
ins
cs
ret
jle
ins
mov
add
add
fcom
mov
and
loope
dec
nop
and
add
or
mov
xchg
inc
je
icebp
adc
xchg
dec
cwde
sbb
or
jbe
cmps
jbe
test
xchg
adc
int
pop
and
xlat
enter
adc
into
fisttp
ins
clc
inc
fild
movs
inc
std
sub
inc
sar
and
inc
dec
loope
ficomp
cdq
ds
sub
cmps
stos
jp
sar
popf
jns
jbe
xlat
pop
mov
adc
out
ins
mov
xchg
retf
and
imul
mov
adc
jne
jns
mov
aad
mov
mov
and
mov
xchg
fisubr
mov
mov
cmps
movs
sbb
fidiv
shl
sub
lock
lock
popf
bound
dec
mov
cmp
fisttp
out
mov
jb
sub
jg
call
adc
and
pop
imul
int3
pop
and
scas
call
add
push
and
cmc
push
into
out
xchg
dec
inc
dec
call
push
mov
mov
cdq
int
and
jne
jnp
test
mov
pop
popa
loopne
cdq
daa
call
stc
fst
gs
pop
dec
dec
fmul
pop
arpl
js
sbb
(bad)
retf
js
ret
jae
rcl
mov
mov
dec
cmp
push
jp
arpl
cmp
and
or
std
dec
xchg
xchg
xor
adc
adc
add
fsubr
(bad)
xchg
cmp
pop
rcl
jno
(bad)
mov
dec
cmps
bound
or
mov
aam
jo
jno
hlt
cmps
dec
push
inc
sbb
imul
ins
dec
bound
imul
mov
jb
loopne
icebp
fild
xchg
mov
cmp
std
mov
out
pusha
mov
pushf
push
sub
sbb
mov
popa
mov
mov
adc
inc
and
jno
jg
jle
enter
mov
ds
(bad)
fcom
xchg
push
jmp
imul
cmp
xlat
retf
inc
in
mov
inc
sar
les
outs
inc
lahf
jge
cs
in
or
or
imul
push
inc
(bad)
pop
inc
jno
xlat
movs
jb
(bad)
in
cs
xor
mov
les
cwde
js
sub
jno
add
sbb
or
ins
mov
(bad)
repz
fdivr
mul
(bad)
dec
jno
retf
test
iret
or
jbe
rcl
sub
pushf
mov
xchg
cmp
ss
dec
or
jmp
lea
or
sbb
push
sub
outs
dec
pop
into
dec
mov
in
push
mov
jmp
arpl
int3
pop
push
cmc
aad
inc
hlt
sub
seto
jae
mov
xchg
pop
movs
mov
scas
into
std
lock
cmp
dec
lock
bound
inc
add
ffree
ret
sar
mov
xchg
scas
in
pushf
dec
cdq
xor
int3
ins
pop
cmp
addr16
dec
pop
into
push
xor
ss
fs
sahf
jl
dec
sub
aad
pop
pop
fistp
cmp
mov
aad
add
sti
aad
rcr
xchg
daa
xchg
mov
mov
xchg
jge
rol
xchg
sti
add
sbb
in
xlat
fidivr
daa
mov
and
lock
inc
dec
mov
or
fcom
push
sbb
imul
sub
add
push
mov
adc
popf
push
and
pop
shr
mov
jle
das
rcl
add
pop
inc
xor
and
xor
(bad)
xor
shl
fsubrp
and
xchg
sbb
push
push
and
loopne
fisub
add
dec
hlt
outs
popa
adc
out
sub
sub
jecxz
or
cmp
push
and
in
in
mov
adc
mov
out
xchg
mov
add
lods
push
jl
push
mov
mov
outs
and
es
imul
and
or
repnz
addr16
sbb
inc
inc
mov
adc
outs
leave
mov
pop
jne
enter
sti
mov
out
xor
sub
jnp
jmp
lahf
call
adc
popa
pusha
arpl
mov
cli
push
inc
call
js
arpl
xor
in
sbb
int3
and
aad
pop
mov
mov
push
and
jae
sub
leave
dec
add
in
or
adc
cmc
js
push
movs
fcmovnbe
enter
std
movsx
scas
retf
ffreep
lods
or
fnsave
mov
cmp
inc
(bad)
mov
outs
sub
bound
inc
iret
mov
repz
inc
shl
(bad)
add
xor
mov
cmp
cmp
out
loop
fistp
push
(bad)
in
and
fidiv
hlt
mov
and
int
lods
jae
mov
ficomp
pop
jmp
add
mov
outs
bound
in
or
or
loopne
inc
pop
fld
lock
into
and
or
cmp
jo
sub
(bad)
and
data16
mov
sub
retf
ror
inc
popa
add
inc
movs
shl
sti
cmc
(bad)
es
sub
sti
jle
call
fadd
sbb
jne
pop
dec
cdq
jle
(bad)
shl
cld
(bad)
repnz
retf
jmp
sbb
xlat
sbb
(bad)
push
sub
add
cld
lods
jecxz
pushf
jecxz
movs
xchg
fcom
ret
aam
sub
jp
jae
retf
daa
or
xchg
cmp
mov
addr16
or
xor
pusha
dec
gs
add
xor
js
loope
cmc
je
mov
call
sub
fild
les
mov
outs
fcom
sbb
or
pop
in
jle
add
sbb
push
aam
das
push
or
(bad)
pop
adc
cld
push
add
ja
or
(bad)
je
pop
and
xchg
mov
out
or
mov
mov
rcl
fmulp
js
mov
sub
std
arpl
sbb
push
mov
or
les
or
mov
xor
fld
push
dec
and
mov
pop
pop
retf
pop
push
(bad)
out
cmps
stc
fist
sub
sbb
inc
and
mov
pop
lods
(bad)
xchg
punpckhwd
imul
jg
add
mov
pop
push
inc
sub
dec
dec
xor
mov
sbb
std
jns
push
(bad)
or
push
(bad)
mov
and
sti
in
xchg
jbe
dec
inc
movs
inc
push
movs
mov
cmp
std
sub
enter
push
ret
mov
pop
add
jle
push
add
lods
push
je
fwait
push
cmp
scas
pop
xchg
stos
(bad)
fild
dec
mov
xchg
loopne
int3
cwde
jbe
in
jmp
mov
jo
xor
dec
nop
jmp
and
mov
xchg
push
dec
sbb
arpl
dec
cmovb
in
fld
clc
jae
mov
adc
and
loope
hlt
lea
fiadd
jbe
mov
xchg
sub
enter
jmp
or
and
push
inc
or
add
sbb
scas
sbb
push
push
lea
jnp
jmp
and
cmc
invd
push
idiv
jbe
popa
jg
lahf
shl
repnz
jmp
add
mov
cmps
ss
pop
sub
bound
(bad)
xor
mov
fnstsw
pop
adc
add
adc
xchg
gs
lahf
cmc
int3
test
je
in
lods
cmps
fisttp
pop
jno
xor
push
pop
or
das
dec
and
dec
adc
pop
xor
cwde
mov
div
test
push
aaa
xchg
scas
xchg
dec
jmp
or
add
push
sbb
(bad)
cmp
jbe
jns
cld
les
pop
iret
pop
jge
test
pop
scas
es
arpl
into
jge
xchg
xor
dec
dec
push
mov
push
sbb
or
stos
push
ins
pavgw
icebp
bound
sbb
ja
xor
test
test
mov
cmp
sbb
mov
lods
icebp
pushf
sub
sub
mov
xchg
mov
xchg
mov
xchg
int
call
mov
js
push
push
xchg
mov
addr16
icebp
add
mov
mov
enter
xchg
pop
in
sbb
retf
and
scas
int3
rol
mov
repz
test
xchg
xchg
sbb
mov
jle
inc
sbb
adc
aad
jae
add
and
add
(bad)
pushf
pop
neg
fadd
stos
mov
rol
jno
pop
cmp
pop
jae
mov
pop
and
add
dec
outs
cmp
pusha
and
pop
mov
nop
pop
push
arpl
mov
(bad)
mov
mov
test
jg
shr
jns
cwde
imul
xchg
out
mov
sub
mov
fistp
cwde
xor
sbb
scas
or
cmps
add
aam
mov
(bad)
sub
rcl
mov
dec
mov
inc
jecxz
pop
mov
adc
mov
outs
ret
test
test
cmps
push
jle
cmp
clc
in
int
outs
shl
imul
jns
call
sti
dec
pusha
or
popa
jnp
mov
inc
jb
cmps
movs
lds
jnp
inc
inc
daa
clc
mul
cmps
pusha
mov
addr16
(bad)
dec
lods
retf
jl
mov
sub
cwde
repnz
ret
es
xchg
bound
pop
jo
aas
and
or
xor
dec
nop
cwde
adc
nop
xchg
sub
rcl
push
jecxz
adc
dec
dec
push
pop
cmps
das
lods
or
inc
dec
push
aad
js
mov
push
jns
out
sbb
cmps
scas
push
mov
jp
fist
and
mov
sub
push
dec
push
inc
adc
scas
clc
ret
add
rcl
sti
mov
outs
jle
fsub
or
lock
retf
adc
or
or
(bad)
sub
dec
bound
xchg
xor
mov
jmp
daa
movs
je
or
leave
inc
dec
ds
jb
or
in
out
dec
dec
mov
pop
xchg
add
mov
xchg
mov
je
pop
mov
lds
sbb
mov
sub
mov
imul
retf
xchg
xchg
loopne
nop
lock
je
cmps
lea
test
ret
fcomp
jp
cmp
dec
push
div
hlt
cmps
xchg
sbb
lock
shl
ret
outs
shl
ret
outs
daa
movs
mov
push
into
cmp
cmp
popa
fisubr
xchg
and
add
jg
adc
aad
xchg
in
or
out
jmp
jmp
jecxz
sbb
cmps
adc
adc
das
ins
ins
js
shl
int3
repnz
in
pop
test
sti
mov
popa
cmp
int3
dec
stc
xchg
(bad)
jmp
jmp
ds
ss
(bad)
(bad)
mov
adc
call
mov
sbb
shl
arpl
adc
adc
sub
movs
sbb
popa
dec
dec
cmc
sbb
sbb
sub
or
xchg
adc
mov
jecxz
mov
push
sub
and
repz
inc
inc
pusha
(bad)
adc
jne
and
shr
adc
(bad)
xor
inc
pop
adc
movs
scas
mov
adc
repnz
(bad)
pop
mov
jp
into
pop
mov
jecxz
inc
mov
inc
cmps
call
inc
xchg
jnp
out
in
fdivr
fmul
mov
mov
out
inc
je
cmps
in
fcmovnu
mov
cmp
mov
push
jg
push
sahf
dec
movs
call
sub
loope
adc
sar
pop
shl
push
pop
(bad)
int
inc
xor
mov
movs
inc
pop
push
outs
mov
mov
iret
or
mov
fcomp
xor
fsub
cmps
ficomp
neg
cdq
sbb
fidiv
push
imul
mov
jge
jle
cmp
test
ds
adc
pop
lea
imul
and
xchg
leave
add
or
clc
div
fist
jmp
jo
xor
push
daa
xchg
repz
jle
jg
add
retf
add
pop
repz
mov
loopne
ss
pop
mov
push
pop
push
xchg
mov
mov
xchg
pop
pop
pop
inc
repz
std
(bad)
daa
fst
aam
out
xchg
add
push
mov
add
loope
sub
repz
adc
ror
gs
dec
out
and
dec
sar
mov
dec
xchg
jmp
test
mov
rcr
or
sbb
sub
cmps
mov
shl
xchg
push
mov
xchg
mov
jns
mov
add
and
div
xchg
loop
(bad)
fadd
lods
mov
movs
and
inc
(bad)
push
fs
hlt
addr16
push
test
jecxz
cwde
jo
cmp
inc
stc
pop
pop
xchg
mov
sub
adc
mov
or
mov
mov
inc
adc
mov
pop
enter
lea
lahf
mov
int3
stos
pop
test
inc
repz
add
shl
repnz
js
mov
sbb
aam
daa
or
sub
pop
xchg
pop
test
cdq
jge
or
stc
ror
cmp
or
and
shr
mov
push
push
adc
jmp
push
mov
repnz
dec
repz
not
sbb
xchg
jecxz
mov
out
add
mov
hlt
fs
jnp
cli
mov
inc
adc
mov
xor
dec
mov
sbb
push
add
arpl
xor
sub
push
cmc
jl
sub
pop
jnp
adc
adc
adc
sti
ss
push
loope
sti
and
les
imul
add
pop
cwde
retf
add
iret
add
fimul
(bad)
push
xchg
mov
nop
call
je
in
arpl
repz
xor
pop
mov
es
test
add
or
mov
iret
cmp
retf
dec
sub
(bad)
ffree
jle
jne
cmps
les
jbe
outs
ret
retf
pushf
enter
push
sub
fdivr
das
pushf
icebp
mov
call
sub
(bad)
pusha
sbb
jl
lahf
sbb
(bad)
ret
out
outs
mov
js
sbb
jns
mov
or
sub
call
mov
adc
xor
xchg
jnp
pop
and
popa
jg
sbb
test
lahf
inc
inc
push
sbb
push
jne
sbb
add
adc
jae
mov
lea
jno
loopne
mov
scas
neg
ins
push
addr16
mov
sub
das
out
stc
mov
(bad)
retf
xor
push
push
jg
pusha
inc
xchg
out
push
aas
pop
cmps
dec
fstp
or
xchg
push
lods
cdq
sub
mov
sub
xchg
push
rcl
int3
in
sbb
cdq
push
movs
pushf
hlt
lods
in
inc
dec
push
xor
in
je
clc
sbb
xchg
cmps
out
fsub
xchg
sti
add
fisttp
sbb
pop
and
imul
and
add
adc
rcr
mov
shl
mov
mov
jae
mov
mov
mov
icebp
xchg
movs
scas
cli
retf
cmp
push
js
mov
icebp
push
pusha
jns
and
ss
fnstcw
in
or
jae
cmps
mov
cmp
adc
xor
inc
hlt
add
xor
jno
push
add
frstor
sub
dec
and
push
sti
push
stos
add
dec
pop
movs
mov
add
mov
push
xor
rol
mov
dec
js
aad
in
ss
push
into
push
and
icebp
ret
retf
jg
xchg
mov
les
scas
call
fstp
pop
mov
pushf
ja
mov
imul
cmp
mov
and
inc
pop
mov
lock
mov
jp
sub
xor
xchg
rcl
xchg
loopne
jmp
inc
hlt
xor
mov
inc
loopne
cmp
sub
mov
adc
dec
gs
fcomip
bound
mov
inc
dec
(bad)
sub
mov
jae
and
jle
push
(bad)
mov
xlat
das
cld
inc
cmc
sbb
dec
cwde
adc
sbb
loope
adc
sahf
jbe
pop
mov
push
ss
sbb
mov
jp
jge
adc
fcom
aam
daa
inc
jge
cmp
sbb
or
push
pop
imul
mov
pop
loopne
stos
jmp
xchg
xchg
mov
push
test
adc
imul
inc
add
fs
into
ffreep
call
push
mov
and
ds
bound
push
ss
aaa
test
sub
mov
add
dec
fdiv
mov
push
fld
and
sub
or
fadd
mov
lahf
push
xor
xchg
and
(bad)
in
inc
mov
xor
mov
aas
mov
inc
adc
mov
adc
mov
repnz
pop
fst
cmps
inc
fsub
fld
neg
inc
jle
jle
xor
cmp
push
in
lahf
fld
inc
mov
xchg
into
imul
aas
push
fsub
cmp
push
jbe
xchg
fcomp
cmp
loopne
and
sub
call
sub
pop
sub
jb
sub
jmp
sbb
add
test
add
xchg
mov
mov
pop
lgs
jmp
jb
sbb
arpl
and
add
push
xchg
add
pop
dec
cld
dec
jp
mov
xor
neg
fisub
mov
xor
mov
leave
pmaddwd
jmp
stc
(bad)
mov
sub
rcl
cmps
inc
fdivr
push
cmp
icebp
mov
pop
out
sub
push
sub
adc
add
jl
xchg
adc
mov
push
adc
dec
call
xor
push
adc
es
add
lahf
add
mov
jg
call
sbb
mov
lahf
mov
mov
push
inc
dec
xchg
adc
sub
movs
outs
mov
dec
inc
jge
jmp
nop
out
loopne
jl
jo
add
cwde
out
or
sub
mov
mov
in
xor
addr16
mov
popf
ja
shr
aad
mov
dec
in
push
pop
js
stos
loopne
lahf
lock
mov
sahf
(bad)
adc
xchg
shl
popa
js
xor
dec
jnp
xabort
or
pop
les
or
sub
pop
pop
and
xor
rcr
and
mov
(bad)
xchg
jno
sbb
neg
xor
inc
dec
xor
push
inc
xchg
adc
lods
inc
xlat
xor
mov
pop
cmp
xor
arpl
inc
clc
and
xchg
or
clc
mov
add
pop
cmp
mov
(bad)
out
push
lock
dec
mov
inc
es
iret
push
jno
and
sub
ret
xchg
inc
ja
push
aam
jne
mov
lods
add
loope
(bad)
(bad)
mov
add
vmread
pop
rol
or
lds
je
push
mov
mov
addr16
pop
push
jns
icebp
mov
std
push
sbb
in
and
adc
jmp
daa
cmps
jge
xchg
imul
retf
cmp
and
jns
idiv
mov
and
mov
iret
fwait
lock
adc
dec
(bad)
and
aad
or
cmp
mov
leave
mov
ins
xchg
shl
xor
cwde
fcom
sbb
dec
jo
push
aaa
jns
cmp
es
shl
or
cmp
xor
mov
adc
push
xchg
add
inc
cmps
in
stos
repz
mov
mov
pop
dec
pop
popa
aam
dec
(bad)
out
lods
std
adc
push
clc
mov
mov
int
aam
loop
aaa
mov
ins
push
call
in
fs
cmp
mov
dec
movs
arpl
ror
pushf
nop
mov
int
fist
or
cmps
arpl
jo
out
push
das
cwde
pusha
movs
mov
neg
cmp
inc
lock
cwde
lods
sub
call
xchg
sti
and
xchg
aad
or
(bad)
pop
js
ja
pusha
daa
pusha
ss
fst
std
sti
mov
cmc
mov
cld
call
push
(bad)
bound
(bad)
icebp
pop
test
jb
aas
cmps
mov
rcr
ds
movs
or
push
(bad)
iret
mov
cmp
pushf
push
jmp
xchg
jecxz
lea
push
xchg
sub
sub
push
pop
mov
lds
sti
jmp
mov
nop
push
mov
jle
fnstcw
(bad)
inc
or
dec
and
mov
test
adc
pop
xor
inc
add
call
add
xor
out
mov
scas
dec
mov
mov
in
scas
or
ret
jecxz
xchg
pop
aaa
sbb
(bad)
loop
rcl
dec
repz
cmp
in
add
daa
sbb
mov
int
or
push
inc
xchg
fwait
repz
sbb
push
dec
jns
mov
push
cwde
dec
ins
mov
addr16
cdq
popa
push
jne
pushf
adc
push
or
and
adc
fistp
jmp
push
xchg
test
pop
adc
cmc
fist
cmp
or
sbb
int3
xchg
ja
push
push
js
shl
dec
adc
shl
dec
sahf
(bad)
sbb
popa
xchg
adc
std
mov
aaa
jb
movs
push
stc
lea
and
push
mov
dec
or
leave
fstp
adc
dec
xor
hlt
dec
cmp
xor
and
js
xor
sbb
neg
bound
mov
mov
int3
or
outs
dec
push
lods
push
loope
mov
or
pop
clc
jg
cmp
or
or
add
mov
mov
push
push
int3
or
dec
xchg
scas
stos
movs
pusha
leave
jno
aam
sti
mov
(bad)
jmp
pop
sbb
jl
outs
jmp
pop
jae
push
aas
jno
bound
push
stc
cmp
mov
push
xor
mov
repnz
js
cmp
dec
sar
pop
inc
push
ins
int
sub
imul
jmp
jbe
pop
push
push
pop
fsub
dec
nop
xchg
bound
ss
jg
outs
aad
xor
fisubr
adc
jae
inc
mov
mov
(bad)
in
dec
and
add
lods
pop
movs
fwait
mov
rol
mov
repnz
pop
sub
xor
es
mov
push
mul
stos
dec
(bad)
popf
in
dec
int3
mov
std
xor
jg
fdiv
mov
and
adc
outs
push
in
mov
add
shl
loope
mov
mov
add
sub
sbb
call
mov
nop
add
hlt
pop
jl
sbb
or
or
xchg
mov
mov
inc
cs
dec
sahf
nop
sub
adc
pop
mov
mov
outs
xlat
mov
sub
ins
aam
cmps
cwde
cmps
cmp
mov
inc
ja
repz
stos
cdq
mov
xor
push
push
outs
loope
inc
cmc
and
popa
adc
push
popa
mov
cmp
in
lea
sti
fisub
jg
loop
add
dec
lock
dec
add
push
xchg
imul
xchg
add
pop
sbb
and
loope
mov
sub
push
aaa
mov
cli
out
push
mov
mov
mov
mov
cmp
mov
cmp
lods
stc
mov
cmp
and
sbb
push
jmp
sysexit
stos
pop
push
cmp
mov
data16
or
push
in
icebp
jecxz
push
xor
dec
mov
add
out
shr
out
push
fsubr
shl
es
jnp
mov
mov
pop
push
cs
adc
pop
clc
xor
out
add
or
jl
xor
jge
or
pop
pop
add
lock
(bad)
test
dec
movs
pop
pusha
mov
rol
jno
mov
stc
xchg
or
jnp
add
xchg
pusha
pushf
retf
sbb
jg
cwde
push
pop
pop
cwde
xchg
mov
ds
(bad)
rol
xor
test
add
push
jmp
scas
in
loop
fcomi
lods
loopne
jmp
pop
lea
movs
jge
dec
ins
(bad)
xor
mov
or
movs
jne
dec
push
fs
call
dec
cmc
and
in
sti
sub
xor
fisttp
loope
xor
jo
popf
test
mov
xchg
lods
xchg
lahf
aaa
add
mov
inc
adc
loope
outs
xchg
sti
loope
xchg
je
inc
aam
ds
adc
pop
out
in
adc
sub
pop
jnp
ficomp
jmp
sub
dec
psubusb
adc
shl
sbb
cmp
pop
sub
add
xor
inc
and
cmps
inc
push
call
in
(bad)
inc
fst
mov
xor
mov
sahf
aam
outs
or
adc
jb
xchg
push
sub
inc
mov
mov
pop
add
pop
jge
ret
mov
and
mov
sti
fld
add
cmp
movs
adc
div
xchg
fcomip
or
mov
inc
sub
mov
jns
pop
push
dec
ror
jp
mov
test
mov
div
push
add
shl
aad
jae
lock
cmp
bound
mov
push
arpl
cs
sbb
xchg
jecxz
cwde
retf
js
add
mov
mov
sahf
adc
in
inc
xchg
mov
fistp
push
cwde
sti
pop
repnz
xchg
cmp
aas
cld
imul
xchg
mov
inc
popf
in
cmpps
test
dec
cmp
xor
call
mov
sub
lods
iret
(bad)
lds
enter
xchg
inc
inc
leave
lahf
jb
xor
in
call
push
push
out
fcom
sub
gs
(bad)
sbb
mov
jp
mov
lock
or
mov
popf
call
jmp
mov
test
dec
sub
adc
cs
mov
pop
out
jge
dec
imul
loop
fsubr
inc
repnz
sbb
push
jl
mov
(bad)
(bad)
push
dec
test
aaa
sbb
into
add
add
sar
(bad)
dec
cs
dec
int3
jl
(bad)
into
rol
jno
add
ds
mov
test
pusha
pop
dec
inc
and
push
aad
scas
retf
pop
jo
or
or
ins
or
lds
mov
dec
mov
sub
cld
stc
mov
scas
mov
movs
adc
mov
inc
mov
(bad)
pop
imul
mov
or
xchg
push
pop
xchg
aaa
sar
lds
dec
sub
repnz
fwait
shr
std
addr16
xchg
imul
shr
mov
jnp
ret
add
xor
or
stos
inc
out
pop
jno
fcomp
mov
cmc
(bad)
ins
das
into
cmp
pop
mov
je
add
push
dec
fsub
mov
or
sub
xchg
or
push
cld
enter
aas
fmul
out
das
outs
dec
xchg
sub
jns
fld
leave
sub
mov
pop
movs
adc
aad
xor
cdq
fwait
xor
xchg
dec
xchg
(bad)
or
push
ins
stc
xor
scas
lock
fwait
stos
xor
ret
jg
add
jnp
fsubrp
(bad)
(bad)
lahf
cmc
mov
fwait
jp
sub
popf
into
imul
mov
nop
jle
aad
jg
jo
addr16
jle
stos
sub
sub
cmp
or
cmps
hlt
call
lods
pop
inc
in
test
(bad)
pop
fnstcw
or
test
pop
imul
push
cld
outs
jb
daa
or
jne
jb
jg
daa
inc
sub
cdq
imul
and
or
in
pop
call
addr16
ins
test
aad
add
add
daa
mov
sahf
aad
movd
push
in
xchg
xchg
adc
retf
inc
aam
movs
sub
gs
(bad)
push
setl
out
add
mov
sub
push
mov
loopne
data16
lds
xchg
test
pop
add
xlat
lahf
iret
mov
dec
cwde
call
jg
sbb
xchg
push
mov
mov
jge
(bad)
lods
jne
fwait
sti
stos
pushf
or
mov
dec
daa
sub
inc
inc
pop
call
cmp
jae
cmp
sbb
loop
in
mov
dec
fsubr
iret
pushf
test
ret
test
ss
cmp
mov
mov
ins
jp
lds
in
es
pop
retf
cmp
sbb
jo
cmps
cmp
lds
icebp
cmp
stc
mov
cmp
or
jle
mov
aaa
dec
mov
or
ret
mov
mov
fwait
inc
xlat
adc
jnp
shl
sbb
xor
mov
dec
cmp
(bad)
stos
enter
cmp
inc
ds
ret
mov
ins
lods
daa
sbb
cdq
jmp
push
movs
sub
lods
xor
jp
jmp
fisttp
adc
call
arpl
dec
repz
ret
mov
je
push
cmp
das
inc
push
jae
in
fstp
mov
inc
scas
loopne
call
jmp
dec
dec
xchg
dec
cdq
pop
dec
pusha
or
push
test
xor
jp
inc
ja
and
pop
jo
scas
xchg
or
push
dec
jae
jne
iret
arpl
jecxz
pop
movs
jecxz
xor
out
mov
adc
mov
jp
cmp
jne
or
call
jb
jmp
stos
xchg
mov
scas
mov
sbb
lahf
(bad)
push
mov
out
inc
cmp
out
inc
xchg
adc
adc
repz
das
pusha
mov
(bad)
movs
adc
aas
adc
xchg
in
jbe
loop
(bad)
rcr
movs
or
iret
js
sub
inc
out
cdq
out
or
das
jl
jbe
popa
call
cmps
sbb
push
retf
loope
lods
outs
cmp
inc
pop
add
sub
xchg
and
fs
cmp
xchg
mov
pop
push
push
aas
in
pop
xchg
mov
sbb
leave
ins
mov
xchg
or
and
jmp
scas
cmps
push
div
mov
imul
adc
mov
jge
ret
fiadd
out
icebp
mov
sbb
lods
and
imul
inc
sub
cmc
add
pop
mov
int3
xor
imul
arpl
cmp
jg
adc
jl
lds
in
popa
(bad)
cmp
dec
cmps
int
leave
out
sub
fisttp
xor
or
mov
pop
sub
inc
sbb
fadd
loop
dec
imul
pop
sbb
pop
mov
pushf
xor
in
daa
xchg
add
neg
jae
cdq
sub
aad
(bad)
push
jmp
inc
fild
test
or
jge
mov
outs
pop
and
fst
or
std
mov
or
sub
out
push
ss
dec
enter
jb
cmp
add
xor
std
aad
or
shr
fisttp
pop
int3
sub
mov
out
cwde
stos
cwde
jno
loop
test
inc
gs
and
cli
fist
movs
xor
fistp
pop
xor
cld
ret
and
in
or
bound
les
sub
push
cld
push
cmp
in
inc
cwde
push
mov
jb
sbb
push
cs
xchg
ds
dec
loope
daa
jb
jb
test
push
stos
movs
fstp
add
inc
(bad)
jl
xchg
ror
fisttp
jle
mul
out
cmps
or
xlat
pop
add
outs
mov
jmp
leave
cli
shr
xchg
ins
push
ja
iret
cwde
cmps
push
test
fscale
sub
mov
cmp
dec
(bad)
repz
je
push
mov
xchg
les
jg
hlt
cmp
mov
leave
sar
(bad)
push
stc
cmp
push
out
leave
dec
mov
aam
jne
lock
pop
and
sbb
or
xor
out
dec
pop
movs
dec
push
retf
cmp
jmp
jp
cmps
movs
cmps
outs
cmps
inc
or
(bad)
push
jge
or
std
mov
into
mov
int3
hlt
ds
push
fucomi
jo
mov
dec
or
sub
mov
inc
jg
lods
in
cmp
popa
adc
pop
xor
xor
test
and
mov
jae
pop
ins
bound
mov
lock
mov
add
repnz
leave
sbb
rcl
outs
lods
push
inc
leave
movs
ins
aas
adc
mov
stc
stos
cdq
adc
xchg
icebp
inc
or
mov
push
mov
fisubr
cmps
pop
ja
push
add
sub
sub
pop
fdivr
das
xchg
pushf
add
pop
cmps
in
es
jle
mov
or
dec
or
test
xchg
mov
adc
cwde
fs
xchg
push
add
jns
xor
push
and
cs
push
cwde
xchg
dec
jg
add
or
and
push
mov
inc
sbb
mov
pop
inc
mov
add
cmp
cli
out
inc
in
dec
xchg
push
push
add
hlt
ret
push
adc
inc
sbb
ret
neg
jmp
mov
scas
add
jl
int
jno
fs
nop
test
jbe
pop
aas
pusha
push
stc
lds
pop
sbb
je
jg
dec
push
mov
int3
ins
xor
push
aaa
dec
jne
adc
pop
push
jmp
fst
mov
frstor
jle
fmul
pop
mov
sub
sbb
clc
mov
mov
ss
cdq
mov
mov
mov
add
imul
mov
dec
mov
mov
xor
ror
push
pop
jg
mov
jo
(bad)
xlat
outs
fistp
xlat
mov
dec
ret
pop
ja
nop
les
fldcw
dec
sbb
sub
dec
add
xor
mov
or
cmp
out
jg
sbb
sar
shr
pop
ins
jmp
popf
inc
bswap
in
fisubr
bound
mov
dec
jb
cld
adc
mov
into
add
push
mov
stos
inc
adc
mov
mov
fs
test
push
push
xchg
xchg
pop
sub
mov
ror
mov
sub
mov
xor
xchg
mov
sahf
gs
mov
xchg
xlat
stos
jo
pop
mov
lods
ds
dec
les
cmp
mov
jb
adc
out
xor
cmps
sub
js
jbe
das
mov
push
push
sub
std
jmp
mov
test
pushf
not
adc
call
icebp
popa
sub
dec
push
sbb
adc
(bad)
lock
fadd
test
sbb
mov
mov
jl
pushf
fsubr
aad
sbb
mov
jg
jecxz
loop
jmp
jnp
mov
xchg
stc
fidiv
cmps
adc
aam
outs
xchg
dec
mov
fbstp
mov
sub
call
pop
and
dec
movs
fadd
enter
in
xchg
mov
in
mov
jg
rcr
or
mov
scas
dec
xlat
sub
ror
sub
hlt
pop
ins
jge
dec
adc
jnp
movs
push
cmp
push
popa
icebp
imul
ins
hlt
and
sub
scas
sti
mov
jmp
in
rol
fisub
cmp
enter
in
popf
es
sub
outs
push
or
adc
ins
xor
xchg
rcr
mov
rcl
in
andps
int
pop
sub
(bad)
(bad)
sbb
mov
hlt
jg
jne
std
xlat
lds
inc
pop
or
pop
int3
or
pop
adc
jne
dec
out
adc
add
repz
mov
pop
test
arpl
arpl
xchg
aam
dec
mov
das
shr
xor
jne
mov
pop
jl
xchg
push
push
repz
or
aam
jmp
inc
in
inc
out
and
xor
push
sbb
cmp
iret
jl
ffreep
imul
cli
push
lock
popa
(bad)
xchg
xchg
lods
inc
test
push
int
icebp
mov
xor
icebp
jmp
jge
adc
(bad)
mov
in
bound
sahf
and
sar
out
jecxz
xchg
adc
pop
xor
shl
or
push
fwait
movs
adc
xchg
dec
xchg
and
pop
adc
repz
bound
rcl
adc
and
mov
aam
call
aam
mov
xchg
test
push
clc
pushf
adc
repz
fwait
imul
cs
and
into
jae
in
sbb
(bad)
mov
sbb
adc
xchg
retf
pop
mov
popa
xchg
fsub
cmps
aas
jns
out
pusha
aam
or
push
js
dec
dec
bound
cs
jbe
adc
mov
jo
inc
jl
add
mov
aas
and
adc
pusha
pop
sbb
dec
adc
test
adc
les
loope
addr16
xchg
dec
into
jnp
jne
push
repz
test
mov
dec
fldenv
enter
mov
loop
mov
dec
lds
cmp
mov
push
scas
out
sbb
outs
ret
cmc
mov
mov
(bad)
cmp
or
sbb
sbb
lods
ins
mov
outs
mov
je
shr
sbb
nop
or
mov
mov
fcom
scas
cmp
into
and
mov
out
data16
ja
loop
shl
xchg
push
in
xchg
lds
add
dec
or
adc
ss
lahf
(bad)
pop
inc
pop
pushf
aad
sub
pop
and
adc
xor
push
xor
push
loop
push
xor
in
push
imul
and
pushf
repnz
into
into
or
in
(bad)
dec
je
(bad)
leave
dec
fwait
in
ret
mov
mov
mov
mov
inc
jle
pop
inc
sub
mov
fmul
repz
xchg
stc
mov
mov
test
test
xor
icebp
xlat
icebp
das
inc
xor
or
dec
repnz
mov
enter
sbb
and
fidivr
inc
and
nop
in
jmp
idiv
jmp
cmp
fucompp
mov
lods
(bad)
iret
mov
loope
xchg
inc
aas
or
xchg
adc
sbb
das
stos
fs
mov
or
pop
out
mov
or
arpl
xchg
sbb
add
mov
cwde
stc
aaa
lea
push
shr
mov
adc
or
mov
add
rcl
sbb
std
sbb
cmp
cmp
sbb
outs
dec
pop
loope
jle
nop
cmp
mov
xor
jb
jmp
or
dec
popf
adc
xchg
jo
stos
les
mov
fcom
fidivr
mov
sub
fistp
or
inc
lahf
inc
mov
(bad)
mov
shr
fistp
rol
add
sahf
daa
or
add
mov
add
(bad)
mov
inc
ds
mov
enter
xor
ficom
xchg
popf
scas
pop
adc
xchg
and
in
arpl
jmp
or
fist
test
adc
into
call
jl
inc
jb
(bad)
iret
jge
mov
mov
adc
les
jmp
and
jge
mov
mov
dec
addr16
pusha
add
aas
mov
sub
(bad)
jmp
jge
sbb
xchg
xchg
in
lock
movs
mov
sub
jmp
mov
inc
call
ins
iret
dec
inc
fs
call
loopne
xchg
popa
iret
out
sbb
shl
mov
pop
mov
add
and
(bad)
stc
dec
mov
or
sar
js
mov
adc
les
mov
(bad)
fild
popf
mov
ret
and
pop
jnp
arpl
aad
push
aas
imul
lock
push
or
pop
sub
cmps
adc
retf
xchg
push
aas
xchg
hlt
jb
pop
adc
lods
push
mov
int3
mov
scas
push
arpl
bound
(bad)
add
aas
ret
dec
and
add
rcr
cmp
repz
repnz
pop
jne
cs
push
pop
add
movs
lods
pop
stc
or
mov
fimul
out
movs
lods
jecxz
inc
loope
scas
mov
xchg
adc
mov
adc
add
aad
sbb
add
cmp
jge
adc
out
sar
js
mov
iret
pop
ja
sbb
mov
jl
(bad)
cmps
mov
hlt
pushf
sub
mov
imul
jns
aad
push
jae
adc
repnz
imul
sbb
push
fsub
xor
dec
push
sahf
retf
xor
cld
cs
mov
inc
pop
popa
sub
(bad)
std
adc
ret
and
sbb
xor
arpl
or
jecxz
push
lock
xchg
sub
aas
pop
dec
fprem
sti
or
or
mov
mov
sbb
(bad)
(bad)
in
or
aas
mov
in
daa
xchg
mov
mov
je
jecxz
xor
ret
mov
pop
mov
cmc
ds
jno
and
mov
adc
cmp
arpl
outs
adc
mov
push
xlat
sti
pop
sbb
or
(bad)
xor
pop
iret
dec
mov
mov
test
daa
jle
into
ds
movs
push
imul
les
aaa
cmp
mov
pop
or
pop
call
(bad)
add
push
mov
mov
mov
sub
add
outs
cmp
out
adc
dec
dec
mov
lods
adc
movs
and
sub
dec
dec
pop
hlt
jne
repz
sub
(bad)
iret
mov
push
popa
mov
pop
call
xor
stos
xor
xchg
or
cmp
aad
(bad)
adc
pop
adc
es
mov
inc
(bad)
pusha
paddsb
inc
(bad)
inc
sar
gs
push
jne
or
pushf
jle
(bad)
push
mov
mov
xchg
ror
stos
movs
shl
(bad)
ficom
cld
sbb
or
mov
fwait
pop
loop
mov
lods
mov
int3
repnz
push
outs
pop
xchg
in
pop
xor
(bad)
mov
jp
sub
pop
pop
add
movs
sbb
mov
cmps
pushf
cli
pop
lahf
mov
adc
adc
add
test
clc
lea
xchg
aas
loopne
jge
pusha
mov
push
cmps
fstp
es
ror
loope
mov
nop
pop
es
and
jmp
mov
dec
push
push
adc
movs
call
mov
or
inc
hlt
aad
adc
pop
adc
push
mov
pusha
imul
cmp
es
mov
xor
jb
add
(bad)
mov
pop
outs
(bad)
jmp
repz
sbb
jnp
mov
imul
xchg
xor
adc
pop
rcr
jns
mov
mov
cmc
outs
loop
adc
lds
jl
jns
int3
add
fmul
sbb
inc
fistp
cmps
xlat
lahf
imul
jmp
(bad)
xchg
mov
or
mov
mov
in
sub
and
(bad)
xor
fistp
fsubr
daa
xor
add
xor
xchg
in
lock
mov
popf
adc
inc
lock
into
imul
int
in
iret
inc
add
arpl
mov
xchg
adc
mov
sub
mov
mov
jmp
dec
mov
inc
fcmovnb
pop
adc
push
(bad)
push
cmps
dec
xchg
fwait
enter
sub
call
sub
sub
shl
fstp
dec
jbe
cmp
in
pop
push
sbb
test
xchg
test
xchg
and
mov
bound
pop
aas
xchg
pop
out
adc
fimul
push
in
ret
inc
pushf
push
cmps
cmp
dec
clc
pop
(bad)
mov
mov
push
adc
jl
and
sub
movs
scas
popa
mov
pop
and
mov
in
(bad)
jnp
cmps
cmp
dec
out
loope
or
cli
mov
dec
call
adc
or
xchg
call
mov
inc
or
outs
adc
mov
jg
jmp
cdq
cmc
test
sub
pop
mov
pop
dec
push
mov
pushf
in
adc
xor
aaa
mov
mov
mov
push
xchg
sub
adc
arpl
xchg
imul
repz
mov
jmp
jno
push
leave
ror
and
mov
mov
aad
add
lahf
mov
call
sub
push
out
daa
nop
cs
stc
mov
sahf
fnsave
mov
push
loop
adc
lea
xchg
sbb
jg
(bad)
mov
out
fdivr
repnz
push
inc
or
adc
(bad)
and
into
xchg
fdivr
imul
xchg
and
push
pop
jnp
mov
push
dec
add
jae
je
xchg
ficom
cmp
mov
in
mov
jb
in
lods
pop
data16
mov
jge
xor
push
inc
xchg
test
sahf
jne
and
rol
sbb
dec
loopne
movs
arpl
scas
(bad)
jecxz
mov
outs
jle
pop
jle
jge
sbb
out
and
jae
jnp
sbb
mov
mul
(bad)
idiv
std
pusha
test
sub
sub
scas
push
test
add
call
dec
(bad)
out
cmc
mov
nop
inc
xchg
jecxz
push
mov
ds
add
push
sbb
retf
bound
inc
pop
ja
xchg
adc
ror
sub
arpl
sub
adc
test
in
fcmovnbe
shr
ja
sbb
add
ficomp
imul
mov
ja
mov
(bad)
imul
shr
in
mov
and
lea
es
push
mov
lods
or
into
pop
mov
ret
nop
pop
test
xchg
jle
add
aaa
dec
jle
jns
ins
push
xor
mov
cmp
adc
pop
ins
test
jnp
sub
push
int
int3
sub
sub
adc
jbe
xchg
add
and
xchg
pop
inc
mov
(bad)
out
or
sub
jmp
in
xchg
jmp
loope
jp
sbb
mov
xor
and
push
sbb
mov
add
mov
addr16
jmp
mov
jo
add
dec
mov
xor
adc
test
cmp
mov
cwde
jmp
clc
lock
aas
div
sbb
or
jns
xchg
mov
jecxz
mov
pusha
and
and
rcr
mov
jne
daa
and
fs
mov
cs
inc
fimul
addr16
push
push
dec
ins
sub
enter
aam
gs
xor
dec
jb
dec
cmp
xchg
aas
xchg
retf
inc
frstor
cs
imul
ret
xor
sbb
mov
fwait
or
pop
adc
dec
cmps
arpl
imul
push
in
cmp
push
pop
retf
dec
das
mov
adc
mov
jge
dec
shl
movs
stos
pusha
mov
mov
stos
cld
fnsave
fcmovb
push
or
scas
sbb
daa
jg
or
js
push
jmp
mov
mov
pop
jae
in
pop
or
push
mov
inc
out
je
fucomip
mov
mov
dec
jb
(bad)
int3
cmps
adc
hlt
jno
(bad)
int
cmp
inc
je
ficomp
fs
add
dec
enter
jg
lock
stos
cmps
adc
xlat
dec
out
clc
cwde
lods
std
scas
pop
addr16
(bad)
jmp
pop
mov
lea
(bad)
(bad)
ror
inc
lods
loopne
cwde
mov
dec
jl
adc
aam
sbb
cmps
cld
cli
clc
pop
das
test
clc
xor
loop
addr16
or
mov
adc
xor
retf
push
stc
stos
mov
inc
pop
lea
mov
cmp
test
sub
dec
sbb
frstor
push
fisubr
dec
das
call
push
jg
in
adc
js
xchg
add
pushf
shl
scas
jle
jle
sub
sbb
adc
pop
and
mov
pop
sub
daa
cli
mov
fwait
xchg
call
push
jecxz
pushf
ins
pop
iret
mov
test
jp
fs
sub
cmc
icebp
xchg
xor
cmp
leave
inc
(bad)
rol
bound
push
jnp
mul
inc
ficomp
cmps
cmp
popa
cmp
push
dec
out
sbb
push
loope
jb
cld
pusha
sti
into
mov
cmp
jb
mov
shl
imul
pusha
loop
push
ret
mov
adc
(bad)
push
rcr
pop
fistp
add
push
std
sar
lods
sar
fld
ss
add
or
xchg
inc
in
sub
push
inc
add
retf
es
ror
test
arpl
enter
xor
pop
mov
mov
xor
aaa
xlat
jnp
test
out
cdq
mov
outs
dec
mov
pop
push
pushf
leave
jmp
cmc
mov
inc
xor
data16
lea
retf
bound
add
cmovs
cmps
xor
jmp
lea
or
inc
add
test
xor
sti
lock
jmp
retf
mov
cmp
mov
lods
cmp
gs
push
mov
std
repz
scas
movs
loop
push
popa
hlt
or
pop
add
xchg
inc
inc
sbb
imul
push
cmp
popf
jne
mov
inc
push
gs
(bad)
and
add
fs
std
adc
cs
data16
jne
cmp
inc
cmps
or
xor
lahf
push
or
push
jae
lea
retf
mov
arpl
popf
inc
popf
sub
sbb
push
aaa
jae
push
hlt
js
int3
pop
mov
xchg
lea
les
dec
(bad)
jo
push
mov
mov
sub
mov
in
retf
iret
int3
and
(bad)
sbb
mov
ret
mov
jmp
pusha
retf
mov
inc
pop
dec
sub
es
lds
outs
and
data16
or
push
xchg
loopne
mov
jle
std
js
ins
xchg
pop
mov
sbb
cmps
ins
cmp
push
jge
std
pop
pop
push
(bad)
stos
addr16
xlat
mov
in
mov
cmc
xor
jmp
pop
pop
pop
cmp
ja
push
or
mov
(bad)
jae
inc
xchg
push
jl
pop
mov
mov
das
push
xor
fadd
dec
cli
leave
inc
pop
sub
mov
jmp
mov
push
xor
jge
lods
push
sub
ret
and
repnz
dec
loop
mov
jne
xor
dec
and
shl
daa
repnz
pop
push
aas
xlat
cmps
inc
pop
ds
or
nop
sbb
mov
cmp
dec
lods
(bad)
(bad)
mov
lds
loope
sbb
dec
adc
hlt
mov
les
adc
sub
sub
sahf
add
push
mov
inc
fimul
push
(bad)
jbe
mov
add
cld
lahf
pushf
ins
scas
push
out
and
mov
or
pop
nop
hlt
rcr
or
sub
retf
push
(bad)
mov
scas
mov
pop
js
ds
mov
mov
xor
push
mov
pop
sar
lds
dec
mov
imul
ret
xchg
dec
jno
mov
sub
stos
js
sub
nop
push
int
and
ja
ja
adc
sbb
push
fisttp
rcl
add
stc
outs
cmp
xchg
or
dec
mov
(bad)
xor
cmp
sub
xchg
xor
pop
rep
jmp
sub
ret
dec
pop
and
movs
cmps
cwde
test
push
add
inc
mov
push
fs
cmp
loope
mov
mov
das
(bad)
and
push
mov
xchg
inc
cmp
aas
pop
lock
push
lock
mov
loopne
cmp
mov
das
mov
pop
dec
cmps
adc
pop
arpl
movs
adc
jno
sbb
jle
sbb
cdq
jnp
pop
test
mov
xlat
shr
(bad)
pusha
aad
aaa
jecxz
je
sbb
cmp
xchg
cli
aam
add
pop
jle
test
out
sub
jmp
sbb
ins
sbb
pop
mov
data16
push
ret
nop
bound
fmul
(bad)
dec
inc
adc
pop
sbb
push
xor
xchg
inc
cmp
mov
ds
mov
mov
sbb
enter
sub
fldenv
jns
sub
test
adc
or
mov
cmc
sub
xchg
cdq
movs
adc
dec
ss
push
inc
mov
dec
push
in
dec
xor
push
jno
sbb
mov
and
dec
loop
movs
fistp
not
(bad)
xchg
push
test
add
pusha
iret
jbe
sbb
or
jnp
xor
(bad)
sub
mov
js
sbb
pop
out
imul
mov
xor
cmp
push
jge
sub
push
xchg
outs
out
(bad)
pusha
pop
mov
xchg
inc
pop
inc
sub
inc
xchg
mov
sbb
shr
retf
sbb
add
pop
xor
stos
daa
push
es
adc
imul
hlt
popf
or
inc
push
cmp
adc
pop
adc
cmps
or
sub
mov
inc
push
dec
aaa
bound
cmps
cmp
loope
or
imul
cmp
xchg
fmul
mov
in
xchg
cli
sub
push
or
sahf
scas
gs
rcr
pop
add
pop
sbb
mov
mov
inc
scas
sbb
add
xor
pop
sub
or
ror
fsub
push
adc
je
fisub
add
sbb
rcl
aaa
jl
(bad)
pop
ins
(bad)
and
hlt
movs
add
add
inc
in
(bad)
out
ret
xchg
in
(bad)
mov
js
pop
cwde
jmp
or
sub
in
out
mov
test
sahf
jl
(bad)
test
stos
scas
jno
push
(bad)
out
fcmovnu
(bad)
movs
or
ja
shl
xchg
cmp
push
lea
xchg
pop
pop
outs
shl
push
daa
and
aad
vrcpps
cmp
sub
pop
jg
push
dec
xor
fld
sub
inc
mov
cs
or
xor
jge
bound
inc
sbb
jge
or
cld
and
pop
push
sub
and
data16
out
test
xchg
enter
mov
xor
rcr
sub
and
cld
and
xlat
push
sub
mov
test
inc
and
fs
not
lahf
inc
inc
pop
push
and
sub
push
out
sbb
das
aam
imul
jo
sub
mov
sbb
test
fstp
test
jl
and
dec
xchg
(bad)
sete
rol
sub
push
or
mov
and
rcr
add
sbb
and
pusha
lds
cli
pop
addr16
cmps
or
push
fs
mov
mov
xchg
dec
mov
push
adc
nop
sbb
and
xchg
mov
push
sub
mov
aaa
popa
mov
jmp
xchg
xor
xor
lods
out
mov
sti
sub
and
daa
fstp
jmp
leavew
ja
lahf
pop
aaa
inc
loopne
xor
push
test
dec
push
nop
push
push
ret
add
stos
mov
lds
push
sbb
pop
daa
cmps
mov
adc
and
lods
int3
xchg
shl
jge
xor
call
mov
dec
gs
xchg
sbb
dec
ins
test
mov
jno
xor
(bad)
push
adc
jbe
repz
ss
(bad)
xchg
push
gs
popa
add
jge
jno
clc
cmps
xchg
mov
dec
scas
data16
daa
test
or
cmp
sbb
(bad)
cmp
dec
jno
(bad)
data16
test
adc
add
stos
mov
add
movs
test
jg
adc
pop
xchg
in
dec
sbb
dec
pop
inc
mov
aam
fs
ror
mov
sbb
nop
add
xchg
mov
sbb
lds
push
add
and
cmp
mov
push
cmp
pusha
ror
or
xor
mov
inc
sqrtps
xchg
mov
call
inc
xor
xchg
push
call
repnz
fwait
test
cmp
sub
or
jae
test
addr16
clc
in
jne
pop
mov
or
xchg
jge
cmp
retf
imul
clc
or
cmp
add
jecxz
lea
sbb
mov
inc
xchg
sub
jge
pop
or
cmp
inc
cmp
lea
ja
adc
(bad)
test
stos
xor
adc
sbb
dec
pop
inc
push
push
sub
dec
pop
mov
in
sti
and
sbb
push
push
lahf
mov
mov
mov
lods
shl
mov
in
jp
push
pop
mov
cmps
pop
xor
out
cmp
xlat
mov
mov
sub
iret
mov
dec
aas
inc
loop
aas
jmp
jl
xchg
cmp
das
in
les
xchg
lea
cmp
lods
sub
xchg
out
pop
aaa
dec
add
jl
and
inc
(bad)
cld
cdq
lahf
push
sub
cmp
stc
repz
leave
dec
add
or
push
shr
mov
out
or
adc
dec
ret
movs
xor
and
shl
mov
fucomi
mov
icebp
mov
shl
in
dec
sti
fld
jecxz
gs
adc
ffreep
xchg
jns
test
push
stos
repz
pop
mov
mov
adc
and
fwait
xor
test
cs
fiadd
mov
mov
pop
addr16
sub
pop
jmp
aad
push
imul
pop
repnz
jecxz
imul
call
xor
jmp
or
mov
xchg
les
icebp
stc
cmc
inc
repz
and
adc
mov
pop
stos
pop
cld
inc
mov
dec
out
lea
std
ins
std
pop
out
add
mov
xor
push
cld
lock
imul
add
or
cmp
out
and
hlt
loop
outs
ins
loop
cmps
xlat
out
or
into
pop
xchg
ins
add
ins
fucom
xor
push
xor
sbb
and
inc
sub
push
sbb
lock
mov
movs
cmp
sub
mov
sar
test
xlat
xchg
push
mov
fcomp
cmp
fcomp
mov
or
popf
sub
cdq
adc
mov
xchg
adc
mov
push
xor
xchg
jnp
sbb
and
jnp
mov
retf
cmp
dec
test
or
and
xchg
inc
sahf
fcom
sahf
cmp
pusha
dec
shl
inc
add
cs
(bad)
test
ret
pop
(bad)
(bad)
dec
in
call
mov
gs
mov
mov
iret
lods
imul
dec
bnd
loope
mov
das
cli
cmp
xlat
sahf
mov
movs
cli
push
sbb
or
sti
xor
ret
adc
ja
mov
dec
scas
sub
cmp
inc
into
popa
dec
jg
jl
pop
and
xlat
add
lar
mov
(bad)
and
pop
imul
div
add
push
loop
push
stc
xchg
iret
adc
popa
mov
push
push
dec
(bad)
mov
push
scas
jecxz
fist
jp
push
jp
sbb
xchg
test
es
mov
push
ins
sbb
mov
popa
mov
fadd
in
mov
or
mov
xor
inc
lock
std
cmp
jbe
dec
pop
adc
outs
adc
dec
in
and
sub
fs
rol
dec
xchg
mov
in
ret
dec
inc
xchg
(bad)
cwde
arpl
pop
loop
aad
mov
and
scas
jbe
xchg
fmul
lods
or
enter
imul
(bad)
mov
ja
cli
(bad)
lods
ss
xor
push
std
pop
(bad)
and
push
jns
fmul
cmp
push
xchg
push
dec
in
sbb
jne
outs
mov
dec
xor
in
or
adc
rcl
sti
std
repz
dec
sub
loope
add
loop
lds
imul
imul
pxor
lds
imul
pop
(bad)
gs
cmp
adc
lea
int3
cmp
bound
mov
(bad)
pop
fs
aam
(bad)
sbb
mov
repz
cmps
jg
retf
enter
xchg
xchg
cli
push
mov
dec
push
pop
add
jae
push
lods
add
dec
push
adc
inc
or
jmp
mov
popf
inc
xchg
int
call
ja
aas
jb
dec
jmp
fs
iret
jp
inc
outs
icebp
pop
pop
popa
and
ins
scas
pop
dec
out
jo
ds
(bad)
popa
icebp
sbb
stos
imul
(bad)
sbb
sbb
push
fnstcw
mov
pop
mov
xchg
sbb
(bad)
or
enter
inc
sub
loope
jae
imul
pop
adc
icebp
sbb
sub
out
mov
js
mov
adc
shr
jmp
jg
iret
add
test
fcmovnu
sub
jnp
jl
pop
ins
xchg
mov
cdq
add
sbb
and
jb
cmp
in
jge
fadd
jae
cmp
movs
fimul
and
adc
xchg
mov
(bad)
mov
adc
(bad)
in
scas
jl
push
inc
out
ret
bound
dec
lods
sar
int3
lahf
jae
call
xchg
mov
daa
lods
push
movs
mov
int3
(bad)
cmp
jg
(bad)
and
dec
dec
(bad)
out
xchg
ror
sti
icebp
mov
je
sub
xchg
stc
xchg
mov
ror
xchg
mov
mov
int3
jno
push
jo
cmp
loope
test
cmp
inc
test
ret
sbb
adc
(bad)
jmp
fdiv
cmp
sbb
push
ins
pop
sbb
repnz
sub
dec
icebp
cld
ficomp
aam
imul
pushf
mov
xchg
sti
pop
mov
pop
sub
out
ins
je
repz
mov
sub
(bad)
sti
mov
(bad)
push
arpl
nop
fbld
sub
fwait
xlat
cdq
lods
sbb
icebp
pop
sub
or
xchg
movs
mov
push
rcr
adc
sti
cmc
push
test
cmc
mov
push
mov
push
outs
and
adc
cmp
pop
cmp
dec
jne
mov
push
cli
or
ror
hlt
cmps
sub
rcr
jecxz
mov
pop
clc
fwait
aad
in
rcl
mov
outs
mov
mov
hlt
in
adc
xchg
inc
js
inc
retf
or
(bad)
mov
es
aam
mov
and
jno
sbb
mov
faddp
add
mov
xchg
jp
call
push
sbb
pop
mov
xlat
retf
fisttp
mov
ret
std
adc
mov
dec
add
aad
jge
cmp
sub
call
push
push
call
jge
int
inc
jne
sub
je
in
inc
das
mov
sbb
pushf
xchg
dec
jno
sub
pop
outs
xor
mov
sbb
xchg
loop
xchg
or
and
xor
xor
sub
push
test
inc
test
jg
repnz
adc
fstp
jmp
fs
mov
cdq
ins
dec
movs
xor
mov
mov
cli
out
les
fbstp
std
pushf
lods
pop
int3
ficomp
mov
xor
das
cmpxchg
cmps
shr
mov
in
jnp
mov
mul
sbb
aad
or
into
stc
addr16
sub
add
xlat
and
push
cmps
test
in
jge
mov
sbb
xor
pop
retf
lods
cld
scas
loop
stc
test
inc
bound
pop
dec
test
sbb
dec
sub
mov
pusha
dec
imul
pusha
add
cs
mov
adc
sbb
fcomp
lods
loop
pop
sbb
push
push
and
loopne
(bad)
pushf
jle
and
push
in
add
and
fiadd
test
test
lea
fdivr
retf
xor
mov
loopne
(bad)
jmp
test
dec
sbb
hlt
pusha
dec
mov
push
outs
mov
push
push
movs
push
nop
ja
jbe
loope
cmp
cli
xor
lea
aas
(bad)
push
sub
outs
inc
fnstsw
push
pusha
test
repnz
imul
outs
dec
ins
add
adc
xchg
int3
or
cwde
cmp
and
lods
mov
pushf
xor
loopne
sub
(bad)
push
pop
das
jmp
mov
fdiv
dec
mov
sar
sbb
test
iret
dec
scas
out
or
cmps
push
sets
or
outs
dec
pop
pop
cmps
cmovno
mov
pop
mov
arpl
xchg
pop
dec
adc
(bad)
stos
inc
sbb
or
pop
xor
or
je
push
inc
imul
jb
hlt
outs
aad
imul
add
xchg
je
sbb
add
add
push
fadd
outs
clc
shl
js
dec
les
adc
inc
dec
xchg
or
mov
movs
sub
ret
test
je
xchg
xchg
(bad)
dec
rcl
repnz
sub
cdq
into
fdivr
int3
movs
retf
out
pusha
add
mov
sbb
ror
lahf
mov
dec
push
mov
dec
xor
popa
cmp
dec
les
inc
shr
or
pop
fild
sub
aad
sbb
inc
retf
icebp
mov
jp
pop
or
xchg
lods
aas
in
mov
cmp
sub
push
aam
sbb
xor
push
cdq
jmp
call
sub
sbb
sub
loope
and
call
xlat
ja
stos
sub
mov
es
pop
and
fdivr
and
pusha
pop
sbb
or
(bad)
std
jp
push
xor
repz
gs
jmp
fistp
sbb
mov
scas
in
ret
pusha
adc
test
and
jl
rol
dec
into
aas
jb
xor
fs
jns
dec
pushf
fwait
inc
lods
mov
shl
adc
pop
mov
or
add
popa
fwait
scas
jns
rcl
xchg
outs
fidivr
add
xor
mov
mov
jb
jg
push
lods
push
and
into
mov
push
in
cmp
push
out
add
jge
sub
lds
lahf
mov
cli
inc
daa
lods
push
mov
movs
fmul
cwde
fist
jbe
(bad)
popf
cmp
das
jns
inc
scas
(bad)
xor
push
fstp
jo
enter
inc
inc
imul
dec
push
arpl
in
mov
mov
jp
shr
in
adc
pop
sbb
sbb
jge
sbb
add
ja
pop
jmp
sub
(bad)
pop
out
push
cmp
fs
adc
repnz
inc
int
mov
mov
pop
xchg
(bad)
push
jmp
add
ins
sub
mov
or
sbb
xchg
cdq
int3
scas
dec
jno
cmp
ins
sub
inc
sub
movs
sub
pop
jle
mov
push
pop
mov
ja
mov
ret
fisttp
mov
mov
jp
or
add
mov
call
push
scas
add
pop
out
test
out
mov
adc
ret
cmp
in
lds
push
ret
xor
cs
daa
and
push
movs
mov
mov
out
ret
mov
mov
dec
pushf
cld
add
dec
outs
mov
adc
cmc
mov
adc
push
les
lds
push
daa
jns
jne
outs
add
sbb
dec
mov
push
xor
lahf
xor
int
sub
jb
ins
jg
jmp
cmp
jae
repz
sti
daa
rdpmc
and
dec
ss
jo
bnd
out
mov
mov
jno
xor
jnp
push
iret
cmp
and
inc
mov
hlt
inc
aad
(bad)
mov
dec
add
mov
sub
and
push
or
inc
pop
aaa
imul
int3
cli
(bad)
in
stc
ret
or
fwait
je
ss
lods
inc
addr16
add
cmp
and
call
mov
ds
or
lock
(bad)
xchg
ret
das
aas
mov
mov
sbb
push
xchg
pop
test
lock
jecxz
aaa
or
xchg
retf
push
ja
cmp
pop
cmp
mov
add
(bad)
adc
adc
scas
cwde
pop
aas
cmps
ror
repz
sbb
dec
add
jne
xchg
cmp
je
mov
(bad)
lods
rcr
adc
mov
mov
inc
pop
into
jae
call
or
inc
out
add
scas
mov
adc
jp
int
in
movs
(bad)
fist
sub
lods
lods
test
(bad)
ficom
sar
aad
shr
(bad)
in
rcl
add
push
push
pop
xchg
and
outs
mov
(bad)
rcr
add
popf
sbb
sbb
(bad)
sub
sar
mov
outs
xchg
xlat
and
mov
lahf
dec
jb
int
xchg
scas
push
mov
call
inc
dec
in
repz
fs
test
adc
ret
jb
lea
jecxz
dec
fistp
push
push
stos
mov
sub
mov
xor
xor
fdiv
les
pop
lea
inc
(bad)
into
xlat
xchg
and
(bad)
inc
jb
fwait
inc
and
pop
or
push
inc
mov
mov
stos
jo
gs
retf
and
dec
retf
movs
popa
dec
in
jbe
push
pushf
pop
dec
aaa
gs
mov
in
jmp
pusha
imul
push
push
ins
dec
add
jmp
dec
les
out
cmps
addr16
add
mov
xor
sub
adc
call
dec
pop
fcom
adc
mov
fs
push
jae
or
jnp
dec
or
jmp
cmp
inc
lea
jecxz
sub
jg
jbe
ins
and
lock
retf
push
pop
out
icebp
mov
call
pop
sahf
jg
push
pop
sub
jp
sub
out
mov
hlt
cmps
or
popa
fild
gs
dec
in
in
inc
jbe
je
data16
outs
iret
jmp
pop
adc
popf
lods
push
dec
xchg
pop
clc
sbb
sbb
loop
sub
push
inc
sahf
loop
mov
outs
mov
test
add
jmp
into
pop
add
fisttp
add
mov
arpl
mov
xchg
lds
fsubr
scas
mov
je
int3
rcr
out
(bad)
es
inc
pop
xchg
popf
(bad)
adc
pop
bnd
cmp
movs
xlat
dec
(bad)
jp
jecxz
stos
stc
cmps
pop
ins
scas
add
cmp
jg
add
mov
xor
sub
rcr
xchg
dec
and
int3
pop
mov
lods
jecxz
ret
ficomp
fidivr
daa
outs
sub
out
mov
mov
jbe
xchg
rol
mov
xchg
or
add
aad
outs
ror
ficom
cmp
outs
movs
shl
mov
adc
xchg
inc
mov
ror
addr16
call
cmps
(bad)
aas
push
popa
xchg
push
arpl
fst
fisub
sbb
xor
mov
mov
pop
xlat
aam
shl
icebp
sbb
pusha
movs
(bad)
mov
in
cmps
jnp
add
xchg
xor
mov
mov
pop
cmps
dec
fild
adc
inc
xchg
nop
xor
(bad)
loopne
xchg
and
lahf
dec
fdivr
loope
sub
shl
cli
or
push
sub
mov
dec
fisttp
dec
and
mov
jo
ss
mov
lods
mov
aam
shl
pop
dec
std
(bad)
in
jne
out
add
loope
stos
sub
sti
icebp
cmps
mov
pop
sbb
or
int3
mov
test
mov
inc
mov
ss
repz
mov
adc
mov
pop
pop
adc
mov
sbb
ja
addr16
jae
adc
in
xchg
add
mov
or
push
adc
into
adc
pop
sbb
pop
pop
xchg
and
call
nop
pop
adc
fisttp
cmp
push
leave
fimul
repnz
push
and
mul
scas
arpl
cmp
pop
push
ins
lock
lds
mov
retf
aad
fldcw
in
push
shr
xchg
repnz
in
mul
leave
cmc
push
inc
lar
or
dec
inc
popf
dec
fiadd
test
sub
add
dec
call
fiadd
int
xchg
mov
pop
mov
cmp
mov
xchg
fadd
repz
adc
movs
clc
out
and
jecxz
test
cmp
call
jnp
push
ins
retf
out
inc
cwde
mov
psubsw
xchg
cwde
mov
xlat
mov
fiadd
push
push
inc
int3
outs
(bad)
(bad)
mov
outs
repz
sub
mov
in
xor
mov
dec
pusha
jle
shr
(bad)
outs
test
retf
das
push
cmps
cwde
ficomp
pop
lods
xchg
mov
dec
push
push
cdq
stos
imul
fs
mov
cmp
xchg
push
cmp
ficom
cmp
shl
imul
out
cmp
std
sbb
ret
or
xchg
sbb
into
(bad)
fild
dec
lock
cs
push
fiadd
xchg
in
aad
outs
mov
out
and
xchg
adc
xchg
cmps
out
mov
mov
lahf
bts
pop
jp
mov
xor
movs
das
push
dec
cmp
repnz
adc
mov
adc
xchg
adc
movs
xchg
ret
xchg
ret
(bad)
js
mov
mov
shl
in
xchg
ret
xchg
out
dec
or
push
movs
xor
iret
xchg
outs
bound
and
pop
lea
fisttp
pop
sub
xor
lods
std
push
test
call
cmp
xchg
and
sub
jnp
jo
cmp
xor
mov
dec
xor
icebp
or
push
xchg
aad
adc
cs
mov
xchg
push
pop
xor
xor
test
enter
cmp
mov
sti
je
rcl
repnz
pop
mov
mov
mov
je
fsubr
fild
shl
in
or
xchg
(bad)
sub
adc
test
jp
sub
xor
(bad)
mov
mov
mov
fwait
cwde
sar
xchg
jns
push
ja
test
pop
out
cmp
sub
test
mov
mov
mov
daa
cs
adc
cmp
ret
lods
jge
mov
inc
sub
sub
xchg
jae
or
std
mov
addr16
mov
sar
shl
les
xchg
cmps
ds
pop
ret
icebp
(bad)
pusha
fsubrp
cmps
div
les
aam
push
push
mov
in
mov
jge
jbe
mov
inc
mov
push
out
and
dec
inc
xor
mov
outs
(bad)
and
jmp
xchg
outs
push
clc
jg
mov
test
dec
outs
out
mov
in
ins
(bad)
jl
sbb
inc
imul
in
popf
ins
push
pop
sahf
test
dec
inc
cld
dec
pusha
mov
loop
pop
jne
cdq
scas
pop
fs
add
mov
fadd
pusha
xchg
nop
pop
sub
inc
js
movs
add
and
lds
outs
dec
rcl
call
imul
mov
xchg
pop
outs
mov
sbb
xor
dec
or
xor
pop
or
into
cmp
ins
aam
jp
push
inc
test
inc
fsub
mov
mov
sub
movs
test
data16
xor
icebp
scas
fdiv
push
jne
sbb
add
sbb
xlat
cli
sbb
cmp
imul
sub
iret
(bad)
cmps
ins
je
jns
xor
add
xor
mov
aad
rcr
push
gs
sub
xchg
test
mov
movs
fdivr
(bad)
call
das
ss
mov
fsubr
cdq
adc
mov
popa
and
jmp
sbb
movs
sbb
pop
loope
into
test
sbb
(bad)
push
and
int
xor
outs
jg
div
test
repz
pop
cmp
cdq
fcom
inc
ror
inc
add
mov
outs
or
adc
xor
out
mov
loope
test
movs
pop
sbb
pop
test
(bad)
push
cmp
in
adc
jl
cmp
xchg
mov
in
hlt
call
movs
dec
lods
stc
test
inc
aad
test
fidivr
sbb
inc
fwait
add
neg
in
mov
out
mov
and
mov
enter
loopne
stos
iret
out
cdq
idiv
lea
pop
enter
xor
sar
in
loop
xchg
pop
call
sahf
fs
or
inc
inc
mov
dec
aaa
xchg
retf
sub
or
cmp
sub
(bad)
sar
xor
inc
hlt
retf
inc
add
fdivr
pop
xchg
mov
fdiv
jno
and
loopne
jl
sbb
out
push
jne
cmc
or
mov
mov
mov
mov
dec
mov
sahf
jne
pushf
imul
xchg
sbb
push
(bad)
mov
pop
imul
sub
mov
lock
int3
rcr
pop
ret
add
jmp
mov
es
pop
sub
sti
cmps
cmp
loopne
ins
sbb
gs
jmp
ret
test
jmp
pop
xchg
stc
mov
ror
mov
imul
(bad)
or
cmps
stos
jne
ror
push
jge
out
mov
jns
movs
clc
dec
pop
and
inc
push
sbb
xchg
add
repnz
cwde
mov
mov
data16
das
frstor
cmp
aam
mov
xlat
dec
iret
and
push
int
sbb
pop
outs
pop
cli
or
jmp
xchg
sbb
push
sub
pusha
cmp
xchg
popa
lods
movs
xor
cdq
shl
sbb
mov
mov
inc
xor
pop
dec
push
pusha
clc
add
inc
cmp
adc
sbb
push
rcr
shr
adc
mov
out
lods
xchg
cmp
in
push
mov
dec
js
ins
in
jae
call
adc
daa
jo
fild
xchg
cs
into
adc
mov
cmc
xchg
cs
imul
call
jecxz
xchg
pop
cli
or
fiadd
retf
movs
jbe
pop
in
mov
sub
sahf
je
or
sbb
ret
ret
sbb
and
lock
daa
xchg
and
cli
out
mov
or
adc
clc
in
xchg
cmp
jmp
or
sub
xor
arpl
mov
call
aad
push
sahf
imul
xchg
pop
mov
cmp
push
jnp
pop
dec
pop
xchg
scas
aam
mov
cmp
adc
inc
retf
mov
outs
aam
rcl
xchg
sub
adc
inc
inc
or
popa
jne
not
mov
aaa
outs
push
lahf
or
adc
fwait
ror
or
clc
jb
retf
mov
mov
cmps
icebp
test
inc
ins
xchg
mov
cmps
shl
das
xchg
test
iret
pop
iret
mov
dec
data16
inc
iret
inc
dec
inc
xlat
add
mov
mov
out
mov
adc
sahf
inc
mov
fwait
dec
lods
arpl
pop
push
sbb
mov
fstp
movs
cmp
fimul
(bad)
cmp
sub
fistp
(bad)
cmp
dec
sbb
call
push
data16
push
adc
and
xor
mov
bound
out
push
and
imul
dec
(bad)
add
sub
inc
jbe
pop
add
mov
fnstcw
imul
dec
ss
or
les
ds
and
or
je
mov
mov
push
mov
xor
stos
jmp
xchg
(bad)
xor
pop
cmp
test
mov
icebp
or
aam
xor
push
fs
mov
cmp
clc
cwde
sbb
int3
fstp
xchg
imul
sbb
sahf
pop
mov
arpl
stos
cmp
sahf
xchg
pop
dec
jnp
hlt
xchg
test
adc
pop
not
nop
iret
sti
sub
inc
mov
dec
fimul
in
adc
cmp
sti
mov
icebp
dec
xchg
adc
jbe
lea
cmp
xchg
sbb
enter
xchg
push
inc
jp
push
mov
inc
and
dec
inc
js
ins
mov
inc
in
shl
or
lahf
cmp
cwde
lahf
fstp
inc
or
inc
dec
jmp
test
jae
retf
adc
or
repz
loopne
xchg
mov
scas
jge
ins
push
sub
add
enter
fisttp
shl
xor
cwde
sbb
dec
mov
sbb
repz
inc
lods
call
jb
xor
inc
add
in
daa
xchg
ins
sub
faddp
mov
add
ds
lea
mov
add
je
mov
ja
int3
fwait
es
lods
or
cmp
bound
idiv
xchg
pop
aam
(bad)
mov
sti
inc
push
sub
xor
and
aad
imul
adc
and
sub
loop
imul
(bad)
hlt
mov
mov
(bad)
andps
repnz
mov
xor
mov
sahf
neg
pop
jg
mov
cdq
cwde
ins
mov
ins
inc
fild
push
mov
nop
sub
mov
mov
push
into
mov
aam
mov
inc
cs
mov
shr
mov
in
pop
push
dec
sub
sti
test
retf
cs
imul
sub
xchg
cmp
jbe
push
rcl
xchg
arpl
jle
ja
xchg
mov
lods
xlat
sbb
xchg
aaa
repz
idiv
xchg
(bad)
or
lds
jge
pop
(bad)
or
aad
mov
inc
imul
dec
mov
int3
xor
dec
cmp
dec
(bad)
sahf
ss
imul
cld
sbb
sub
adc
sbb
add
mov
les
push
and
mov
mov
mov
(bad)
popa
mov
icebp
jmp
outs
adc
fcompp
pop
mov
push
xchg
xor
xchg
add
xchg
icebp
pushf
test
xor
pop
frstor
mov
push
iret
gs
int
sbb
mov
xlat
add
ds
fadd
sar
arpl
mov
push
cmp
test
ins
xor
(bad)
pop
popa
shl
mov
(bad)
(bad)
push
dec
jae
adc
and
sbb
or
imul
mov
out
ss
dec
jns
and
mov
outs
stos
mov
hlt
inc
das
mov
or
jg
dec
xchg
jns
adc
fwait
xchg
stos
and
inc
out
das
inc
das
pop
mov
sub
and
mov
add
stos
pop
test
mov
int
scas
mov
ins
pop
mov
loop
jae
xor
jae
cmp
shr
push
add
cmp
cwde
inc
mov
stc
(bad)
cmp
cld
repz
xchg
mov
jmp
push
ficom
cdq
or
push
bound
pusha
fld1
rol
sub
aaa
and
xor
cmp
cdq
cwde
aaa
push
iret
jne
in
stos
jmp
popf
aaa
push
repnz
(bad)
loop
mov
mov
out
xchg
scas
mov
xor
loop
push
push
rol
pop
ja
cmp
js
push
pusha
jle
retf
clc
dec
addr16
arpl
call
je
ins
inc
test
add
inc
jp
stc
outs
mov
ja
stos
aaa
add
fdiv
iret
jne
aas
pop
cdq
(bad)
ss
mov
jmp
push
pop
ins
sbb
or
mov
cld
or
add
dec
adc
xor
neg
lea
pop
and
aaa
jge
add
mov
xchg
stos
(bad)
cwde
pop
xchg
push
mov
imul
popf
out
(bad)
push
mov
call
inc
mov
xchg
movs
repz
loopne
sub
fwait
test
cmp
push
test
jb
outs
cmp
mov
pushf
aam
jmp
outs
mov
into
cli
adc
fdivr
xchg
jo
lods
mov
and
pop
shl
and
daa
out
sahf
cmp
ror
sub
push
jecxz
repnz
xchg
pushf
sub
jge
cmp
jmp
and
in
sub
jmp
mov
lock
xor
push
pop
dec
push
fstp
js
loope
jg
pop
and
fs
push
and
mov
jne
inc
repnz
inc
sbb
aam
rcl
push
popaw
stc
pop
mov
retf
mov
ret
pop
and
jbe
pop
push
inc
nop
aas
inc
ins
cmp
std
test
ret
stos
int3
inc
(bad)
into
scas
push
cmps
push
sub
fnsave
dec
push
sbb
js
ficom
mov
jmp
les
les
sub
repz
shl
or
push
das
movs
and
repnz
adc
cmp
sahf
scas
jp
loop
push
push
xchg
mov
dec
pusha
out
mov
into
out
outs
sti
mov
or
lods
inc
enter
bound
loopne
fs
sbb
mov
xor
leave
ins
mov
sbb
imul
add
fisub
not
cwde
mov
pop
and
dec
mov
xchg
push
popf
das
ins
inc
frstor
jge
aam
cwde
mov
int
loope
dec
lds
inc
mov
(bad)
mov
push
xchg
loope
and
les
repnz
cwde
cmp
push
scas
test
dec
xchg
mov
fwait
cld
repz
inc
xchg
dec
daa
inc
aad
aam
jne
inc
adc
xchg
pop
mov
xchg
stos
mov
or
add
adc
push
jnp
pop
fwait
loop
sub
je
jnp
xchg
xlat
stos
gs
add
pusha
dec
(bad)
xchg
pop
mov
scas
add
shr
xchg
shr
or
cdq
ds
outs
mov
call
adc
xor
retf
dec
cmps
leave
inc
movs
cmp
(bad)
fdivr
popa
js
sub
inc
jge
aad
aad
jbe
inc
mov
aad
pop
int3
leave
int3
je
push
xor
les
sub
mov
sub
ficom
or
push
jp
dec
mov
imul
nop
cmp
in
adc
clc
ficom
cmp
add
loopne
cmp
jb
aam
push
gs
ja
stc
cmp
int3
je
(bad)
sub
sbb
out
mov
bound
jmp
rcr
jmp
add
jmp
out
jne
mov
mov
sbb
bound
xor
or
adc
idiv
sub
jae
adc
mov
(bad)
fdivr
jmp
clc
push
mov
lock
sbb
sub
pop
dec
ret
jo
inc
call
sub
imul
sub
shr
std
mov
and
cwde
test
mov
sbb
aad
js
cmps
sbb
jg
int
cmc
popa
push
shr
sahf
not
jnp
add
leave
pop
push
(bad)
(bad)
jp
adc
js
add
test
sbb
mov
int3
pop
cmp
sti
cmp
sbb
pushw
jns
xchg
inc
add
push
cmps
jae
and
rcl
in
mov
jmp
(bad)
xchg
mov
push
pusha
(bad)
push
sar
sbb
fsub
stc
dec
std
cwde
mov
(bad)
in
push
mov
adc
or
je
pushf
xor
cmp
and
fld
sub
mov
(bad)
aas
pop
mov
repnz
popa
sahf
inc
fptan
into
ja
sbb
and
loope
and
aam
aas
cli
ret
ret
stos
and
stc
(bad)
sbb
xor
(bad)
ins
mov
cmps
jmp
dec
stc
stos
in
mov
pop
sbb
mov
popa
(bad)
xlat
cwde
mov
stc
jnp
stos
in
sub
in
xchg
arpl
mov
addr16
mov
std
fcom
xor
xchg
sub
dec
push
xor
shl
sub
xchg
dec
or
and
in
dec
stos
mov
add
std
push
push
js
scas
sbb
(bad)
ss
(bad)
jle
and
stos
adc
mov
pusha
mov
jg
add
and
mov
std
pusha
sub
pop
add
pop
lea
outs
sbb
sbb
and
xchg
in
push
div
lahf
mov
or
cmp
sub
lock
pusha
sbb
sbb
sahf
in
pop
jbe
dec
out
inc
dec
xchg
mov
es
sub
pop
push
push
jne
hlt
dec
fistp
jns
add
or
mov
out
inc
mov
into
repnz
movs
test
ds
xchg
lods
xchg
fld
mov
jno
dec
mov
xchg
fadd
adc
jle
pop
jbe
jmp
inc
imul
loopne
mov
xor
dec
popa
je
jae
and
mov
ret
xor
into
or
pop
imul
mov
mov
imul
adc
sbb
dec
sti
imul
and
aad
xchg
std
loop
repz
inc
adc
loopne
jns
mov
es
push
retf
mov
sbb
xchg
pop
sub
retf
xchg
pop
pop
icebp
inc
(bad)
cs
arpl
add
cmps
xor
jecxz
dec
ds
stc
add
inc
sbb
sar
sbb
(bad)
leave
lock
jg
loop
add
inc
xchg
dec
ret
mov
outs
rcr
xor
sahf
or
scas
mov
data16
sbb
cld
mov
mov
cmp
fdivp
in
pop
sbb
sbb
arpl
and
lahf
lea
xor
push
jae
test
mov
xchg
(bad)
jmp
mov
inc
fisttp
ja
add
ins
xchg
or
ror
aam
push
or
jbe
or
test
adc
call
mov
jg
sar
std
mov
les
scas
movs
pop
xchg
inc
aaa
lods
sub
inc
outs
or
shl
mov
popf
adc
pop
imul
push
stos
sbb
sub
jo
call
inc
ja
movs
jno
test
jne
shr
ret
mov
idiv
fnsave
mov
sbb
sub
push
sbb
mov
pushf
mov
stos
push
lock
out
aam
adc
ret
inc
adc
ins
mov
xchg
push
sub
popf
sub
mov
cmp
inc
idiv
jo
xchg
int3
mov
push
adc
stos
mov
xor
das
shr
mov
(bad)
pop
xor
adc
xor
jns
mov
xchg
inc
(bad)
xor
jl
std
xchg
fimul
xor
cmp
ficomp
jno
adc
hlt
jbe
(bad)
jmp
ins
push
pop
(bad)
mov
adc
and
dec
(bad)
sbb
ja
retf
adc
add
push
hlt
cmp
cmp
gs
sbb
cmp
dec
shl
loop
mov
xor
repz
div
sub
push
fmul
ret
enter
push
or
xor
jnp
sti
mov
jae
stc
and
call
dec
sbb
pop
sti
inc
dec
movs
mov
jb
xor
push
cmps
ins
cdq
xchg
cmps
(bad)
dec
(bad)
push
scas
cmp
push
and
loope
mov
push
ins
jbe
clc
fcomp
xchg
or
addps
mov
ror
pop
jns
fsubp
xchg
mov
stc
xor
fdiv
cwde
cmp
lock
test
sub
mov
or
(bad)
push
xchg
cmc
jb
sti
cmp
imul
or
add
in
cmp
cmps
sbb
push
aas
aam
mov
jmp
in
jb
pop
test
mov
cmp
pop
scas
xchg
jle
inc
pushf
std
(bad)
loope
adc
or
mov
sub
adc
repz
adc
and
ins
mov
movs
adc
into
mov
je
gs
test
and
pop
or
jge
adc
bound
mov
inc
in
push
sbb
sub
and
xchg
dec
js
xchg
retf
retf
jmp
cdq
sub
pop
iret
mov
test
xchg
and
xor
test
inc
lods
pop
mov
loope
dec
cwde
scas
lods
mov
sbb
pop
adc
scas
or
xchg
xchg
js
xor
and
push
cmp
icebp
sub
repnz
adc
call
mov
jmp
fisub
adc
jl
je
add
fdiv
xor
test
test
sbb
xchg
xor
or
ins
mov
mov
adc
aaa
cmc
test
xor
xor
aad
xor
test
xor
cli
in
mov
retf
jo
sbb
lds
adc
mov
fldcw
mov
mov
inc
dec
mov
(bad)
shl
fdiv
or
fnstcw
mov
ja
pushf
push
pop
retf
and
hlt
add
or
ins
and
cmc
lods
mov
sub
sbb
pop
out
xor
cmp
loope
lock
jmp
mov
push
test
xchg
out
or
push
and
aas
xlat
sbb
add
cwde
mov
popf
popa
repnz
pop
jne
jb
sbb
movs
push
mov
cmp
ds
jg
mov
pop
hlt
jle
mov
js
das
out
ss
mov
fdiv
pushf
adc
arpl
jnp
sbb
pop
jb
jbe
call
clc
loope
ror
mov
inc
ret
cmp
sahf
aad
xchg
sti
test
scas
mov
cld
xor
shr
push
ss
lods
mov
cmp
es
push
pushf
push
aam
and
fimul
ret
sub
jo
or
ja
and
mov
xchg
lods
movs
pop
int3
aad
mov
in
cmc
jae
fmul
out
dec
adc
pop
fcom
das
inc
sub
jge
or
ffreep
aas
(bad)
adc
and
pop
sbb
sbb
jnp
(bad)
jnp
mov
arpl
test
adc
sti
sub
jl
movs
dec
cdq
mov
pop
sbb
icebp
mov
in
cld
dec
jg
and
mov
addr16
retf
stc
push
sub
pop
addr16
in
mov
pop
sahf
sub
push
mov
ret
hlt
mov
aas
ret
repz
cs
adc
mov
ret
sub
out
pop
xchg
dec
push
xor
mov
arpl
dec
fst
xchg
into
aam
cmc
add
dec
sub
mov
xor
aaa
mov
cmc
cs
aas
mov
dec
scas
movs
mov
pop
dec
imul
mov
mov
or
adc
adc
aam
movs
jns
ds
outs
jne
adc
fwait
out
ret
dec
mov
dec
lods
jmp
sti
gs
push
mov
fwait
ins
sti
popf
(bad)
frstor
daa
and
mov
jae
inc
daa
ss
fst
out
add
mov
in
push
inc
sub
test
sub
arpl
adc
js
fcomp
mov
add
in
int
pop
or
and
mov
pop
jae
test
imul
cld
pop
mov
mov
(bad)
test
jmp
out
mov
mul
pop
ins
rol
pop
fsubr
sbb
(bad)
scas
mov
cmp
or
cld
sub
pop
sub
push
adc
jbe
pop
push
mov
sub
movs
sub
mov
push
or
mov
sbb
test
cdq
add
clc
jl
retf
test
jl
aad
jne
xchg
jne
aas
test
add
retf
xchg
jl
sbb
pushw
push
call
xchg
jnp
or
je
fistp
cmps
addr16
mov
lock
xchg
dec
call
stc
imul
fnstenv
repz
ins
mov
cmc
cmp
pop
inc
lea
cmc
mov
sti
sub
js
outs
sbb
sbb
mov
rcr
les
stos
test
cmc
out
(bad)
(bad)
pop
dec
xor
(bad)
(bad)
dec
and
or
call
xor
jns
mov
adc
imul
rcl
iret
(bad)
aaa
sbb
popw
mov
xchg
jecxz
and
adc
fsub
jl
xor
aaa
pop
or
fwait
adc
mov
fprem1
cwde
pusha
ret
xchg
sbb
cld
and
ret
inc
js
call
inc
test
icebp
pop
(bad)
cld
repz
cmps
cmpxchg
inc
cld
idiv
pop
or
or
mov
stc
mov
ret
(bad)
jmp
inc
push
not
out
inc
mov
sub
jae
cmp
mov
scas
push
or
lahf
nop
cmps
jbe
add
jnp
mov
sbb
pop
sub
cld
cld
xor
mov
pop
out
test
sub
ds
in
lds
mov
sbb
ja
ins
rcr
mov
xor
out
inc
scas
ss
jmp
dec
dec
push
lds
pop
mov
mov
fstp
dec
xchg
dec
lea
mov
pop
mov
or
in
push
(bad)
push
jne
jmp
(bad)
push
xor
mov
pushf
(bad)
in
mov
add
ins
iret
scas
mov
adc
movs
or
jns
adc
and
pusha
dec
out
aam
mov
ins
int3
cli
add
ror
cwde
sub
jmp
inc
jmp
pop
ret
push
(bad)
fnstsw
or
xor
adc
or
sbb
push
xor
rcr
xchg
lock
retf
stos
scas
std
movs
mov
aad
mov
mov
mov
pop
sub
pop
and
xchg
bnd
mov
push
mov
cmps
out
add
pop
xchg
xchg
in
mov
out
inc
lea
jno
add
mov
xchg
jbe
(bad)
ret
lea
jmp
inc
adc
std
xor
jl
icebp
and
rcr
les
push
out
mov
leave
push
or
mov
loopne
add
(bad)
jp
mov
pop
cld
and
sub
mov
cmp
xor
retf
sub
mov
dec
add
imul
dec
fs
lahf
pop
mov
xor
(bad)
(bad)
cmp
icebp
fsub
mov
add
loopne
sub
pop
inc
add
push
xchg
cli
imul
add
pop
lock
or
nop
cmp
xor
leave
push
and
test
(bad)
xchg
dec
cmp
or
adc
out
push
jmp
(bad)
je
pusha
enter
xor
xchg
cmp
xor
icebp
shr
movs
xchg
push
and
mov
xchg
int3
inc
xor
dec
mov
and
cld
mov
rcr
adc
fsubr
jbe
in
inc
mov
lods
scas
imul
or
movs
(bad)
cmc
add
cmp
cdq
xchg
or
mov
or
pop
jg
jmp
push
adc
int3
cli
in
xor
out
int3
movs
mov
jb
and
cmp
cmps
add
pusha
les
add
loopne
sti
ins
inc
xor
cmp
or
inc
mov
jmp
push
shl
mov
dec
adc
push
ret
(bad)
xlat
adc
push
and
xor
pusha
data16
retf
mov
lods
mov
pushf
(bad)
ins
inc
and
sbb
outs
or
loope
dec
or
loop
push
push
pop
bts
mov
pop
xor
(bad)
mov
mov
mul
inc
sbb
cmp
jb
and
xchg
scas
jne
mov
xor
(bad)
fwait
out
xor
lahf
and
out
xor
out
shl
cdq
inc
shl
icebp
bound
cli
ja
or
pop
scas
push
aaa
mov
je
ds
dec
xor
and
sbb
sbb
jmp
dec
mov
jg
(bad)
pop
fisttp
test
in
inc
push
scas
xor
mov
sbb
fnsave
pop
inc
loopne
dec
mov
dec
scas
fldcw
pop
mov
shl
jno
inc
jae
cmps
jmp
rcr
adc
mov
push
xchg
and
sub
sub
mov
or
rol
and
shl
inc
push
(bad)
out
push
or
outs
jl
mov
int
out
not
sub
retf
cmps
dec
cld
das
es
shufps
es
cwde
rol
jecxz
jae
adc
dec
dec
jle
xchg
jo
mov
mov
repnz
sbb
xchg
fld
pop
jno
jne
push
test
pushf
push
jo
sbb
int3
sub
clc
dec
dec
push
hlt
aad
adc
rol
inc
sub
arpl
clc
add
out
jbe
xor
call
lea
aas
fwait
jae
pop
inc
(bad)
cmp
imul
ror
sbb
mov
jnp
inc
call
sbb
push
loop
and
ret
mov
dec
xchg
inc
adc
enter
mov
dec
popf
rcl
pusha
or
or
test
lds
lods
adc
xor
imul
mov
pushf
push
loopne
icebp
sub
sub
cmps
jl
sbb
push
repz
data16
outs
inc
jns
sub
jmp
sbb
test
fcomp
test
(bad)
mov
mov
or
fisubr
pop
pop
push
xor
inc
push
pushf
and
ins
outs
xor
inc
cdq
mov
inc
into
leave
sbb
add
mov
leave
mov
in
rol
aad
inc
add
xchg
pop
pcmpeqd
mov
sub
mov
iret
jecxz
xlat
cmp
scas
mov
sub
xor
lea
imul
xlat
dec
and
lahf
or
inc
leave
adc
mov
dec
imul
cmp
xchg
xor
push
mov
mov
sti
scas
jbe
js
jnp
add
sub
(bad)
and
(bad)
jl
mov
jg
xor
sub
push
push
fdiv
std
add
adc
adc
or
xor
shr
in
adc
push
jl
and
sbb
rcl
(bad)
aad
call
fild
aad
cmc
push
sub
and
jge
and
movd
push
shl
fisubr
aaa
dec
mov
inc
mov
cmp
xchg
nop
gs
add
bound
pop
xchg
inc
in
cmps
push
jne
sbb
push
les
inc
mov
mov
cmp
out
mul
inc
cld
mov
mulps
mov
jbe
clc
in
arpl
jo
retf
icebp
sbb
int
fmul
dec
jnp
(bad)
cwde
dec
or
or
(bad)
in
inc
mov
out
cmp
push
push
loop
cwde
jle
mov
call
mov
(bad)
pop
mov
push
xchg
in
push
and
and
and
rcr
push
nop
aaa
cmp
push
adc
les
sub
mov
add
cli
mov
(bad)
hlt
cs
xor
cmp
pop
push
es
repz
test
es
or
cli
push
ss
sub
pop
mov
mov
(bad)
or
jns
adc
aam
fwait
mov
leave
jmp
retf
xchg
popa
sub
sbb
(bad)
jecxz
test
cmp
pop
lock
test
sub
fwait
cmc
aas
shl
add
inc
mov
dec
adc
jp
adc
mov
xchg
call
xchg
cli
add
ds
jl
les
push
xchg
jb
das
sub
dec
std
mov
movs
rcr
xor
xor
jecxz
std
repz
sub
hlt
ret
in
fiadd
ja
jo
and
or
ror
jno
out
and
fcomi
sbb
nop
pop
dec
test
ret
(bad)
dec
or
mov
push
gs
in
jg
mov
enter
adc
mov
adc
retf
mov
add
cmc
mov
adc
pop
rcr
xchg
or
adc
pop
fstp
sub
(bad)
dec
xchg
sbb
mov
int3
sbb
xchg
sbb
arpl
add
mov
or
ins
ja
jns
cli
mov
loop
sbb
popa
sbb
cli
push
xor
ins
inc
aam
fs
retf
or
pop
lahf
jno
xchg
es
xchg
ds
and
rol
mov
cmp
or
mov
xchg
mov
fadd
shl
test
jp
jge
data16
cmp
pop
and
ror
add
cmc
cdq
iret
push
inc
lods
mov
mov
push
jnp
mov
sti
jge
pusha
sub
aam
and
neg
into
cmp
mov
lahf
in
aas
cmp
(bad)
mov
xor
rcr
add
std
scas
sub
data16
and
and
in
shr
rol
lahf
jmp
add
das
out
add
sar
rcr
cwde
imul
sbb
cdq
sbb
pop
mov
jl
rcr
mov
hlt
and
aaa
ror
add
cs
or
jge
and
mov
mov
xchg
loop
(bad)
out
adc
xor
arpl
fsubr
addr16
jnp
out
addr16
push
popa
inc
mov
stos
fcomp
aaa
pop
push
mov
inc
es
scas
mov
je
loope
jle
rcr
pushf
or
jns
stos
jl
scas
inc
nop
mov
jl
jg
sub
nop
add
push
fcomp
and
mov
or
int
xchg
jecxz
mov
cmp
xor
mov
ror
and
into
hlt
iret
add
dec
daa
dec
jb
mov
dec
out
stos
jmp
jecxz
jmp
xor
in
cmp
xchg
lahf
out
repz
push
rcl
imul
stos
div
adc
push
mov
(bad)
std
(bad)
ret
xor
push
fimul
inc
mov
xor
(bad)
xor
pop
call
pusha
xor
mov
adc
pop
mov
pop
mov
ins
rcr
loope
shl
cmp
lea
sub
pop
jge
fiadd
jle
or
rcl
mov
dec
jl
cmp
mov
jo
jb
call
test
dec
aad
dec
js
ror
dec
pop
out
xor
shr
jmp
sbb
loop
push
pop
adc
shr
ja
icebp
add
mov
cdq
pop
push
mov
mov
imul
inc
bound
ins
sub
repz
dec
pop
mov
xor
xchg
test
scas
xchg
lds
cmp
out
test
push
bndldx
nop
sbb
adc
and
ror
inc
mov
push
pop
gs
popa
rol
stos
outs
mov
and
aam
icebp
(bad)
and
dec
dec
sub
sbb
inc
and
addr16
pop
or
frstpm(287
leave
leave
ficomp
mov
ds
cmps
ds
dec
mov
iret
iret
and
and
bound
fstp
dec
ficomp
push
push
dec
rcl
cli
pop
push
push
push
icebp
xor
jne
mov
inc
dec
neg
sbb
loope
and
and
neg
aaa
pop
push
clc
call
sbb
xadd
aad
lock
mov
popa
enter
dec
inc
push
mov
aas
mov
sub
inc
and
repnz
sar
retf
arpl
dec
xlat
jp
call
xchg
mov
lock
shl
adc
movs
sti
stos
call
xchg
movs
stc
enter
pop
push
mov
leave
cmc
ja
outs
popf
mov
(bad)
std
int3
dec
cmps
mov
inc
fs
jno
dec
or
and
pinsrw
dec
(bad)
bound
outs
and
mov
push
push
loopne
int
cdq
int3
xchg
dec
sub
(bad)
nop
xlat
enter
popa
cmps
push
cs
inc
sub
jmp
cmp
inc
rol
fnstcw
mov
(bad)
jno
mov
out
push
xor
popf
cmp
mov
arpl
pop
bswap
mov
sbb
mov
loop
push
adc
inc
(bad)
in
dec
test
sub
pop
fnsave
call
clc
mov
lahf
mov
jmp
xchg
cmp
push
(bad)
mov
iret
rcr
or
and
shr
(bad)
sub
xor
cs
add
dec
popa
inc
mov
and
and
rol
xchg
inc
aas
adc
jmp
repz
push
mov
jne
cmps
push
in
add
daa
mov
pop
and
dec
cmps
add
sbb
pop
sbb
xchg
sbb
cmp
addr16
call
sub
xor
push
int3
ja
fs
cmp
(bad)
mov
lock
xchg
and
inc
fisubr
jo
lods
mov
xor
xchg
pop
sar
dec
loop
xchg
cmp
mov
or
clc
mov
jns
aas
sbb
sbb
push
or
jb
xor
nop
call
imul
dec
ja
sbb
nop
and
mov
movs
fwait
push
aam
neg
hlt
xor
mov
(bad)
js
sbb
add
jg
daa
test
loope
cmc
nop
cmc
popa
xor
es
(bad)
dec
fstp
push
shl
mov
jmp
sub
jl
mov
fwait
cmps
mov
add
stc
call
and
out
jecxz
cmp
adc
pusha
scas
aaa
push
call
push
lods
sbb
adc
mov
jl
adc
or
jo
jae
cmp
stos
jnp
movs
or
jp
lea
or
scas
inc
mov
sbb
imul
ror
sbb
mov
mov
and
xor
push
inc
retf
sub
scas
push
mov
pusha
or
sub
sbb
sbb
pop
rol
sbb
jecxz
push
xor
xor
call
dec
dec
pop
dec
xor
retf
jne
jb
pop
retf
mov
ss
cli
xchg
cwde
(bad)
adc
stos
in
mov
pop
pop
ficom
in
sub
pop
xchg
sbb
mov
pop
jne
inc
xchg
and
sub
ds
in
sub
or
cmc
add
adc
mov
ins
push
mov
mov
jp
mov
xbegin
jae
mov
mov
not
mov
in
arpl
scas
dec
test
push
es
adc
rol
dec
popf
cmp
jle
mov
mov
cmp
pop
sbb
xchg
mov
xchg
cwde
xor
push
loopne
xchg
lock
sbb
or
xchg
cdq
iret
add
mov
xchg
fwait
mov
mov
xchg
gs
inc
mov
xor
(bad)
outs
jmp
imul
jb
mov
fmul
fptan
and
cmp
stc
fmulp
int3
xor
cs
call
push
jbe
ins
push
mov
mov
call
mov
dec
clc
adc
ss
dec
mov
out
scas
jns
cli
mov
ja
fxrstor
cwde
or
lahf
jns
daa
lahf
fwait
retf
or
daa
in
pop
in
dec
outs
cdq
inc
cli
enter
mov
out
xor
cmp
pop
mov
es
lds
jb
sbb
push
mov
(bad)
jp
jnp
mov
adc
sahf
push
bound
add
xor
in
fwait
jno
cs
adc
gs
or
cmp
leave
ds
cwde
es
gs
mov
call
mov
in
mov
loop
shr
add
inc
rol
ins
ins
mov
sub
dec
inc
sbb
pop
or
movs
stos
popf
aam
and
pop
add
retf
xlat
sub
mov
jge
js
test
fcom
pop
pop
adc
mov
pop
xchg
push
mov
mov
(bad)
lds
rol
std
mov
dec
or
test
retf
pushf
pop
int
sub
xlat
cmp
cmp
xchg
xchg
test
(bad)
push
(bad)
mov
inc
inc
dec
ficomp
or
shr
pop
sub
mov
scas
mov
mov
retf
mov
je
xchg
and
cmp
loop
or
popf
push
movs
lods
mov
or
cdq
or
push
aad
adc
jnp
stos
lds
xor
mov
adc
jmp
sbb
mov
call
pop
int
scas
sar
(bad)
div
adc
pop
sub
lods
fild
ret
jg
add
data16
push
xchg
fwait
test
xchg
fs
movs
outs
fcmovnu
xor
retf
out
mov
xchg
inc
inc
dec
cmp
mov
test
push
pop
or
jno
sti
cmp
jmp
dec
cmp
aad
and
mov
push
add
aaa
or
push
rcl
jae
xchg
je
mov
dec
dec
shl
mov
(bad)
bnd
pop
xor
lds
cmps
pop
mov
fsub
pushf
mov
ds
leave
mov
(bad)
(bad)
div
rcl
xchg
lea
jns
push
xor
dec
add
push
inc
cs
push
dec
aad
mov
addr16
ror
jmp
test
adc
or
js
int
das
ins
pop
in
pop
xchg
je
sub
sbb
pusha
cdq
jnp
loop
jl
aad
inc
mov
add
pop
cmps
mov
jne
push
mov
xchg
and
call
daa
pop
cmp
bound
aam
xor
pushw
or
shl
jno
aas
ss
xor
xchg
fwait
lods
xchg
mov
fs
adc
sbb
(bad)
pushf
stos
inc
mov
fs
and
mov
leave
fiadd
or
push
mov
mov
jmp
aad
dec
in
cmp
ds
or
push
push
cmps
gs
stos
and
test
or
aad
mov
and
pop
cmp
and
imul
dec
cs
cmp
movs
idiv
dec
out
jbe
cs
sub
push
stos
int3
daa
mov
stc
sbb
mov
stc
adc
add
and
daa
fdiv
fwait
push
gs
loope
and
(bad)
repnz
xchg
jb
xchg
mov
pop
lods
pop
iret
dec
add
jnp
lds
mov
data16
fld
xor
push
inc
in
(bad)
xlat
cli
loop
jle
or
add
sbb
and
popa
(bad)
xchg
xchg
(bad)
out
jno
mov
aam
sahf
mov
outs
mov
(bad)
popa
xchg
adc
pop
add
pop
inc
pop
jecxz
adc
neg
rcr
arpl
lods
cmp
inc
mov
frstor
loope
mov
xor
neg
in
fadd
pop
push
inc
sbb
sub
xchg
sbb
ins
enter
movs
adc
mov
jno
dec
pop
mov
push
outs
clc
lds
mov
adc
cmc
sub
sub
push
mov
popa
mov
das
(bad)
xchg
in
xchg
dec
add
push
sbb
pop
xor
push
pusha
aaa
xor
push
push
data16
jg
dec
sbb
sar
movs
and
dec
and
jae
mov
cmp
iret
or
cmp
mov
inc
mov
add
mov
dec
or
mov
repz
fs
add
imul
sbb
push
xor
loope
and
ins
stc
ret
sahf
jbe
xlat
in
in
js
mul
out
sti
dec
hlt
lea
ret
arpl
popa
neg
dec
cli
push
fwait
arpl
nop
scas
shl
ret
fisubr
shr
and
pushf
jne
outs
jl
add
dec
aas
add
xchg
add
popa
sti
jecxz
mov
push
(bad)
push
cmps
add
cmp
and
mov
inc
inc
sbb
lods
push
pop
pusha
xchg
stos
pop
fnstenv
sti
sti
jmp
cdq
mov
sub
push
adc
mov
je
jb
cmp
retf
mov
enter
mov
mov
ret
dec
sbb
and
leave
cmp
xor
(bad)
daa
adc
adc
dec
jnp
aad
mov
test
jle
aaa
fidiv
inc
in
adc
pusha
push
or
stos
pop
mov
mov
call
movs
sbb
sbb
scas
sub
rcr
outs
cld
inc
gs
fidiv
push
sbb
outs
sbb
(bad)
es
jmp
cwde
and
cmp
jl
aas
inc
cmps
push
retf
xor
cdq
jns
jl
out
xchg
pop
sti
inc
jnp
or
add
push
lods
pop
lods
retf
sahf
sbb
loope
aam
aas
lea
sbb
shr
push
mov
daa
mov
shr
jg
cld
xchg
mov
xor
jmp
retf
jge
(bad)
cmc
ret
jp
inc
(bad)
push
mov
or
push
scas
stos
xor
push
jo
outs
pop
mov
hlt
call
inc
push
lods
std
jecxz
fs
pop
jmp
pop
(bad)
loop
push
sbb
adc
jns
clc
jo
mov
cmc
add
cmp
sbb
cmps
fwait
cmp
cmp
dec
sbb
adc
xchg
dec
or
movs
adc
jae
jbe
mov
sbb
stos
(bad)
out
xchg
mov
shl
mov
jle
xchg
sahf
je
shl
jecxz
aam
cli
inc
xor
add
int3
pop
dec
inc
sti
inc
xchg
and
fdivr
pop
paddd
mov
rcr
xchg
cmp
dec
and
push
mov
repz
push
pop
ficom
aam
sub
sub
es
mov
dec
adc
sub
aas
dec
sub
test
mul
test
stc
out
in
jo
lahf
or
mov
sub
rcr
shr
ret
cmp
pop
test
pop
inc
push
cmp
adc
dec
out
fadd
call
cs
or
add
std
je
ss
lds
aam
add
in
mov
lea
(bad)
fist
pop
sti
push
sub
in
xor
sub
rcl
xor
dec
mov
mov
fdivr
mov
sub
push
xor
cmp
xor
inc
jmp
icebp
pop
mov
sbb
(bad)
rol
mov
enter
scas
or
xchg
(bad)
leave
push
loope
and
and
dec
ret
lods
gs
mov
and
dec
es
jno
mov
jl
jno
sub
fisub
push
scas
inc
mov
sub
fadd
cmc
xor
leave
cmps
push
cmps
mov
mov
inc
popa
dec
pop
jo
or
stc
inc
mov
add
jecxz
sbb
cmp
push
pop
ret
sbb
sar
and
jnp
pop
xor
jb
xor
push
sub
daa
popa
or
mov
mov
xor
mov
cmps
pop
xchg
sti
jl
xor
shl
das
mov
xchg
mov
xchg
(bad)
(bad)
stc
jmp
jne
sbb
dec
add
sub
mov
mov
mov
sbb
mov
fistp
leave
jle
xchg
mov
sbb
mov
sbb
cmp
xor
push
mov
mov
adc
sub
in
pop
xor
(bad)
call
cmp
sub
pop
jmp
arpl
add
lahf
fnclex
sti
(bad)
loop
pusha
in
repnz
push
jo
mov
in
push
sub
adc
sbb
jge
mov
mov
not
dec
loope
js
xchg
and
cmp
ret
adc
cli
cmps
mov
cmp
mov
ss
clc
inc
dec
pop
or
stos
xchg
(bad)
scas
xchg
cdq
add
jbe
jnp
pop
in
push
xor
jne
jmp
adc
pop
jns
popa
sub
mov
or
pop
cdq
popf
dec
test
fwait
outs
shl
cmp
adc
dec
or
or
and
adc
push
mov
sub
mov
cwde
mov
cmp
xchg
pushf
arpl
jb
mov
xor
jmp
push
lds
hlt
sbb
and
test
lea
xchg
mov
outs
enter
js
into
cmps
xchg
fwait
clc
out
mov
test
dec
jecxz
sbb
mov
xor
cs
leave
stos
cdq
mov
call
sub
js
jae
cmp
out
mov
ds
(bad)
sub
popa
cmp
inc
call
test
jo
aas
dec
stos
mov
pop
and
pop
xchg
xchg
lock
aas
out
sbb
scas
sub
aam
push
mov
inc
adc
das
cli
sti
xchg
adc
fistp
out
xchg
mov
imul
jbe
mov
adc
int3
add
jnp
mov
popa
cli
sbb
mov
push
add
lea
xor
xor
loope
rcl
jp
ss
or
imul
sbb
adc
cmp
std
add
retf
or
outs
scas
mov
xchg
jnp
sti
sub
pop
jmp
fldcw
jno
add
jbe
xchg
pop
and
jnp
or
int3
call
cmp
arpl
test
loop
(bad)
adc
cmp
je
sbb
in
dec
test
rol
cmc
push
xchg
dec
jecxz
dec
test
fwait
in
and
pusha
ss
int
mov
fs
test
loope
xchg
or
add
ins
loopne
pop
jmp
stos
imul
cmp
fistp
sbb
(bad)
rol
test
icebp
out
aaa
mov
test
int3
push
movs
iret
ja
push
fdivp
mov
jmp
dec
push
xchg
inc
jle
test
pop
bound
sbb
add
xlat
and
dec
pop
adc
mov
cld
scas
dec
dec
push
xor
mov
mov
inc
adc
les
pop
push
(bad)
fidivr
loope
cli
lods
jl
inc
mov
loopne
mov
mov
push
popf
in
es
fcmovnbe
cmps
and
inc
cmp
xchg
sub
xchg
inc
idiv
dec
jae
rcl
mov
jae
adc
je
pop
ret
xchg
xlat
pusha
cld
sar
dec
xchg
rol
lock
xchg
or
ins
fidivr
sbb
pop
in
test
sub
push
sbb
dec
fiadd
pop
pop
cmc
push
in
add
into
xor
pop
or
test
or
test
mov
(bad)
call
inc
pop
mov
or
push
sub
fsqrt
xor
xchg
push
mov
sbb
ins
out
xchg
ret
aam
xchg
dec
sbb
adc
sub
lock
popa
jmp
xchg
jno
push
mov
in
inc
mov
push
aam
push
sub
pop
lahf
xor
inc
(bad)
mov
jmp
xor
mov
xchg
cmp
jp
pop
retf
into
shr
or
mov
jl
xor
dec
xor
cs
adc
mov
jmp
nop
jmp
inc
adc
aaa
sub
or
in
xor
in
adc
sub
and
xchg
movs
dec
jb
fwait
mov
push
fs
shr
imul
jecxz
inc
retf
std
test
sub
add
lds
and
nop
out
push
lods
bnd
imul
pusha
sub
test
sbb
rcl
inc
push
push
jmp
js
pop
mov
cmp
neg
push
pop
xor
mov
fwait
repz
int3
jns
xchg
jbe
inc
ror
shr
(bad)
aas
movs
cmp
leave
mov
fisttp
inc
pop
lock
mov
xchg
jp
loope
cdq
cmp
fistp
sub
cmp
sub
(bad)
or
out
sbb
mov
sub
mov
add
repz
popa
jg
inc
xchg
lock
fs
or
pop
mov
cmp
outs
dec
aam
mov
inc
dec
call
jo
out
sub
jg
sub
movs
test
inc
sahf
lods
sub
pop
ret
mov
or
repz
clc
xor
inc
push
xchg
push
ds
push
mov
cmps
imul
out
cli
outs
test
sbb
jge
push
sub
int
mov
jo
lds
je
retf
lods
imul
cmp
out
sbb
xchg
and
sub
mov
in
add
adc
mov
jp
call
ret
mov
in
lock
adc
int3
das
pop
cmc
add
push
dec
lds
jno
xchg
pop
les
sbb
jbe
dec
xchg
icebp
pop
or
pop
pop
mov
dec
and
hlt
sbb
xchg
mov
sub
dec
sbb
xchg
idiv
in
out
or
mov
mov
mov
ins
dec
mov
xlat
lods
call
jae
retf
movs
leave
pop
imul
mov
out
lods
mov
out
ret
fs
mov
dec
or
retf
retf
mov
sbb
mov
ins
in
pop
jl
stos
fcom
jo
in
dec
clc
fisubr
inc
hlt
fsubr
loopne
bound
xchg
int
shl
and
push
in
inc
ins
call
test
test
pop
sub
mov
shr
xor
call
jbe
adc
pop
dec
stc
mov
mov
cmp
xor
mov
push
sti
mov
ins
ins
jb
fsubr
push
and
sub
lods
sub
jge
shl
adc
cli
jnp
mov
jnp
xor
outs
fadd
fcmove
xor
mov
cmp
movs
pop
mov
push
adc
rcr
aas
jl
pop
arpl
mov
(bad)
or
sub
xchg
pop
and
or
sub
sub
enter
shr
mov
jnp
lods
sub
push
retf
(bad)
scas
xor
lea
cdq
inc
add
test
les
add
fs
xchg
pop
jg
int
fs
jg
adc
pushf
loope
test
or
jns
xchg
push
sub
lods
adc
inc
mov
push
add
movs
pushf
enter
mov
mov
out
dec
sbb
(bad)
test
out
and
dec
jmp
jl
add
movs
jmp
hlt
mov
sub
or
mov
ss
lods
rol
push
sbb
cmp
mov
stc
jb
ja
xchg
pop
jmp
jmp
fs
mov
xchg
push
cld
xor
sahf
sub
adc
xchg
scas
ret
xor
pop
rcl
stos
(bad)
pop
jno
gs
add
pop
test
dec
cmp
shl
cmp
cmp
ins
add
adc
sub
gs
retf
fsubr
push
repnz
clc
int3
xor
mov
cmps
loopne
fiadd
sub
push
xchg
mov
or
in
(bad)
icebp
or
or
outs
fcmovu
adc
mov
cs
test
popf
dec
data16
outs
mov
mov
movs
push
sub
arpl
push
mov
jge
xor
pop
mov
lahf
mov
iret
(bad)
pusha
or
mov
and
ficomp
call
sub
add
or
retf
jno
es
mov
jge
scas
xor
ins
dec
arpl
mov
sub
sbb
xor
inc
(bad)
xchg
mov
adc
mov
cmps
jg
dec
loope
and
jnp
(bad)
(bad)
pop
adc
and
mov
xchg
(bad)
stos
out
mov
in
movs
push
mov
mov
or
outs
into
xor
xchg
xor
iret
es
mov
inc
mov
pop
adc
jmp
cmps
push
cmp
mov
and
or
mov
fadd
mov
shl
push
add
push
test
shl
xchg
dec
inc
adc
adc
pop
jp
mov
cmc
mov
or
inc
jmp
mov
mov
bound
test
mov
outs
xlat
mov
and
test
test
test
mov
add
xor
fstp
ficom
mov
or
loop
sbb
ret
mov
inc
dec
mov
add
mul
cmp
fsqrt
sar
aaa
mov
pop
(bad)
(bad)
repz
aas
lahf
jo
dec
xchg
lahf
sub
aas
leave
dec
inc
mov
inc
mov
inc
cmp
rol
pop
and
sub
inc
iret
in
dec
ins
dec
in
mov
mov
into
inc
mov
sub
retf
pop
jno
fdivr
lds
fisubr
add
xor
imul
out
cmp
repz
or
fisubr
shl
scas
int
das
sbb
xchg
test
(bad)
mov
xchg
sub
push
jmp
inc
pop
pop
jno
std
pushf
cmp
imul
sub
gs
or
pop
or
cmps
or
xchg
dec
push
pop
ins
mul
add
cmc
push
outs
push
sub
nop
adc
int
adc
out
sar
dec
sub
mov
mov
repz
add
xchg
push
sahf
popf
adc
retf
jmp
inc
fcom
jge
aam
call
cmps
push
inc
iret
cmps
data16
adc
popf
cld
pop
addr16
imul
xchg
test
and
dec
mov
mov
xchg
mov
sahf
inc
mov
xor
in
int3
test
in
hlt
cmps
repz
mov
jp
inc
push
mov
aas
out
retf
or
sub
add
add
js
inc
lock
in
mov
gs
inc
add
pop
mov
push
fimul
jmp
mov
icebp
mov
cmp
enter
loopne
add
retf
mov
(bad)
dec
mov
cmc
aas
push
(bad)
mov
out
jno
nop
mov
into
dec
data16
sbb
mul
rcl
js
add
xlat
xlat
xchg
clc
retf
(bad)
pop
jno
push
xchg
int3
fdivr
and
inc
icebp
sbb
pop
retf
fdivr
test
cmp
clc
enter
dec
mov
cmc
repnz
jmp
repnz
xor
(bad)
loope
jno
scas
pop
add
dec
fild
fist
xchg
sbb
arpl
xor
adc
sahf
leave
adc
fisttp
mov
dec
std
fwait
scas
clc
mov
clc
int
pusha
cmps
pop
pusha
in
sub
sub
pop
sbb
mov
adc
dec
mov
add
cmp
scas
ss
mov
inc
push
or
jl
mov
addr16
out
icebp
mov
cdq
adc
fnstenv
stos
jmp
ffree
mov
sub
sub
dec
retf
stos
mov
cli
lock
stos
xchg
sub
xchg
pop
jb
retf
and
pop
jbe
out
icebp
loope
stos
(bad)
adc
cmp
outs
test
iret
(bad)
mov
scas
pushf
(bad)
rcr
(bad)
mov
out
int
xchg
pop
pop
cmp
mov
push
sub
push
add
repnz
mov
fild
fistp
mov
call
push
or
daa
scas
mov
push
jge
das
or
ss
xchg
cmp
es
pop
sub
retf
add
cli
jle
lea
xchg
call
les
ss
mov
repz
popf
cmc
xchg
setp
adc
es
aam
jno
jo
fcmovnbe
arpl
jge
ds
push
mov
pusha
mov
repz
iret
rcr
pop
xchg
in
push
mov
(bad)
cmp
jecxz
(bad)
mov
mov
and
xlat
popf
jne
adc
push
call
and
sbb
(bad)
and
jg
cmp
mov
add
xor
pop
loop
leave
into
loopne
pop
cld
scas
mov
dec
icebp
fist
xor
cs
cli
fcom
sti
js
adc
mov
pop
daa
push
xor
and
data16
rcl
and
fistp
ror
leave
out
xor
popa
call
xor
and
loopne
fistp
or
mov
pop
pop
xor
cmp
or
mov
shr
pushf
push
leave
in
pop
cli
cdq
jne
push
lea
fdiv
xor
call
add
push
fbstp
aaa
jl
je
pop
push
clc
or
xor
push
jmp
pop
inc
jns
in
and
(bad)
(bad)
call
test
lahf
cmp
mov
bound
test
xchg
cmps
jmp
enter
icebp
cmps
shr
mov
add
shl
in
popa
xor
cmp
add
int
mov
fimul
fstp
push
push
loop
mov
mov
in
cmp
cmp
lahf
popa
jecxz
stos
or
adc
mov
icebp
cs
mov
out
sbb
in
push
sub
outs
dec
(bad)
push
and
enter
inc
(bad)
jl
(bad)
imul
test
add
inc
xchg
pop
xlat
inc
xchg
mov
sti
or
xchg
dec
push
aaa
inc
fsubr
(bad)
leave
adc
push
pusha
jg
cmps
test
mov
mov
adc
xchg
sahf
icebp
in
xor
aam
(bad)
ins
jae
and
mov
or
sub
ret
test
daa
shl
jne
outs
pop
mov
sahf
cmp
xor
ja
add
xlat
pop
shr
fnstenv
fsub
sbb
ins
out
fdivrp
test
jo
in
or
inc
jl
sub
pusha
mov
into
mov
cmps
fsubr
jno
rol
pop
outs
fidiv
stos
mov
movs
push
inc
jg
jmp
cmp
cmps
mov
(bad)
and
aaa
in
lock
int3
cmp
ret
and
mov
movs
adc
adc
push
shl
es
jnp
push
loop
push
sbb
dec
dec
fsub
push
sub
(bad)
(bad)
sub
(bad)
ficomp
mov
pop
fcom
aam
mov
fwait
xor
xchg
call
mov
inc
push
addr16
test
mov
xchg
adc
mov
in
mov
out
mov
xchg
es
retf
inc
lea
lock
push
xor
dec
dec
xchg
mov
mov
dec
add
bound
dec
jnp
rcl
push
(bad)
cmp
mov
sub
jecxz
test
ja
pop
ret
sub
dec
cmp
sub
xlat
in
out
ret
jbe
mov
ss
pop
test
cmp
rol
cmp
adc
cmp
xchg
adc
push
cmp
in
enter
cmps
cli
adc
mov
and
stos
sbb
and
pop
outs
or
div
retf
scas
push
rol
push
movs
push
out
out
cmps
adc
push
push
inc
neg
xchg
xchg
xor
xchg
into
mov
xor
pop
js
jle
push
jno
cld
inc
push
iret
sbb
int3
jo
xchg
mov
and
js
xchg
sbb
sbb
cmp
jmp
in
inc
imul
mov
js
and
scas
in
pop
(bad)
xor
or
adc
push
sub
and
lods
or
add
popa
inc
imul
adc
aad
mov
sub
jno
cdq
std
ss
nop
dec
loopne
retf
stos
(bad)
dec
jg
pushf
jp
mov
xor
xchg
bound
xor
push
test
adc
sub
out
mov
(bad)
pop
jb
lock
dec
jns
push
es
mov
xchg
cmps
(bad)
in
aad
cmps
int
or
jle
icebp
repz
push
sbb
jmp
out
cmps
ins
pop
cmp
pop
add
das
sbb
dec
lahf
mov
ror
jne
test
jbe
aas
test
cs
dec
gs
cwde
jmp
repnz
mov
mov
arpl
neg
mov
adc
test
ja
xchg
dec
repz
add
mov
ins
and
rcr
dec
pop
sti
arpl
or
les
jns
cbw
and
push
int
or
mov
mov
das
stos
mov
outs
enter
xchg
xor
int
fwait
mov
out
stos
addr16
cli
fst
mov
cwde
add
je
fcom
inc
leave
sub
call
dec
cs
dec
pushf
jmp
mov
into
dec
div
jns
add
lock
push
repnz
dec
sbb
sbb
xchg
data16
in
pushf
ss
push
(bad)
adc
dec
and
cs
loope
sahf
repnz
jnp
je
inc
adc
jbe
add
pop
scas
or
push
sbb
mov
push
inc
jae
pop
stc
in
es
cmc
into
add
inc
push
enter
push
cwde
sub
cwde
loope
add
inc
retf
(bad)
dec
adc
vmwrite
sub
nop
sbb
mov
int3
sbb
mov
push
add
jbe
xchg
xchg
daa
ins
xchg
sbb
mov
inc
mov
shl
adc
or
call
push
add
(bad)
es
xchg
dec
jb
movups
ja
cs
sbb
retf
mov
jmp
cmp
daa
movs
push
xor
jae
jge
test
mov
hlt
imul
cmp
jmp
xor
ss
jp
or
sbb
or
fnstsw
jge
push
aaa
shr
sbb
cwde
(bad)
mov
sar
shl
gs
xchg
scas
test
call
cld
call
push
(bad)
cmp
imul
add
mov
jl
and
(bad)
test
dec
jmp
sub
lahf
out
dec
pop
dec
adc
out
mov
movs
fistp
sahf
adc
pushf
rcl
lds
push
mov
dec
cmp
push
clc
or
push
out
(bad)
jb
pop
or
pop
leave
sub
cmp
int3
movs
mov
lea
adc
lahf
mov
stos
in
mov
push
jle
mov
push
test
fwait
cmp
aas
ret
adc
or
pop
shr
arpl
dec
call
nop
hlt
inc
push
data16
into
in
xchg
xchg
dec
(bad)
cmc
inc
push
sbb
sub
xor
jge
mov
mov
popf
jmp
xchg
adc
outs
cmp
cmp
xchg
pushf
in
sbb
bound
(bad)
xchg
jno
cwde
sahf
mov
inc
inc
test
push
push
xor
rcr
fidiv
call
mov
scas
mov
scas
int3
mov
jl
xchg
push
stc
fs
inc
and
push
add
out
call
inc
push
sbb
ror
lods
lods
inc
mov
ret
aaa
jbe
lock
pusha
popa
xchg
stos
pop
mov
loop
dec
jecxz
inc
inc
cmc
add
ja
pop
into
mov
sar
add
and
mov
retf
push
movs
inc
stos
and
sar
mov
and
aad
mov
ins
mov
jno
rol
dec
ficom
addr16
inc
test
mov
inc
pop
jecxz
sbb
imul
mov
aas
adc
adc
aad
and
fsubr
sbb
push
sbb
lods
dec
or
pop
pop
xchg
call
xchg
out
mov
mov
in
jg
in
imul
jnp
cmc
adc
ror
pop
xchg
lock
jecxz
jle
shl
arpl
sahf
lea
inc
lock
push
mov
stos
mov
in
ss
jno
mov
(bad)
sbb
push
ss
xchg
sub
ret
test
push
or
scas
ret
pop
push
or
clc
or
mov
fwait
cld
ins
dec
inc
ja
jge
xor
pop
mov
jle
sbb
sbb
(bad)
nop
sbb
mov
jno
jbe
mov
imul
push
out
push
pusha
push
iret
jne
int3
lds
xchg
addr16
xchg
jmp
popa
adc
mov
outs
xchg
clc
pop
jo
repz
in
jae
inc
repnz
add
sub
sbb
(bad)
ret
push
cmp
pop
dec
test
mov
add
add
stos
shl
cmps
cmps
or
retf
jg
ret
lods
fsubr
cmp
sub
sub
pop
pop
jmp
jge
sub
imul
adc
or
add
cwde
stc
pop
dec
adc
into
jge
mov
jbe
dec
lods
pop
fldenv
in
fisub
cli
jecxz
addr16
mov
js
sub
mov
lods
and
add
leave
out
pop
xchg
pop
dec
dec
sbb
scas
inc
cmp
inc
xor
out
cmp
ja
out
adc
mov
ror
pop
mov
lea
push
cmp
std
fisubr
and
std
dec
sahf
fs
push
inc
into
pop
fist
inc
ins
mov
sub
or
data16
sub
scas
cs
mov
fmul
add
(bad)
enter
repz
pop
imul
sbb
and
cmp
popf
arpl
std
daa
xor
dec
inc
push
jns
jg
fisttp
div
std
inc
xor
push
mov
dec
ror
call
test
fimul
aaa
and
sbb
xchg
call
mov
inc
mov
dec
xchg
dec
jg
cli
sahf
mov
inc
dec
sahf
pop
je
(bad)
movs
sub
mov
adc
sti
xchg
je
pop
sahf
and
mov
aam
mov
imul
sub
aad
hlt
sub
add
dec
ret
ja
fdivr
repz
mov
xchg
pop
pushf
jo
fld
pop
lods
es
xor
inc
mov
adc
adc
and
repnz
test
sub
out
test
pop
stos
mov
fs
xor
and
sbb
imul
pinsrw
aad
stc
jae
adc
hlt
outs
jge
aas
dec
shr
cli
push
xor
add
cmp
shl
test
scas
inc
test
cmp
int3
sub
mov
jmp
inc
cmp
mov
push
push
xchg
push
xor
dec
loopne
dec
jg
shl
hlt
sbb
test
scas
mov
out
ror
push
das
inc
jae
and
scas
mov
xchg
jb
popa
push
jp
fld
mov
cmc
cmp
pop
aad
push
push
xchg
sbb
repnz
or
je
dec
in
dec
arpl
inc
mov
pop
call
sbb
mov
inc
lods
daa
imul
call
mov
dec
call
and
xchg
out
inc
pop
mov
xor
daa
pop
sbb
jb
jp
xchg
popa
clc
and
ret
and
in
push
mov
aas
jle
add
repz
stc
adc
pop
pop
(bad)
repnz
fucomip
hlt
fbld
mov
mov
adc
repnz
lea
out
nop
mov
adc
cmc
adc
xor
sbb
add
mov
mov
and
fwait
adc
(bad)
inc
xchg
add
mov
in
cdq
and
sysexit
mov
cmps
shr
hlt
stos
hlt
js
and
cli
add
pop
imul
inc
(bad)
out
inc
mov
push
arpl
adc
sub
jg
test
jg
imul
dec
les
repz
in
jno
jmp
inc
xchg
idiv
jb
xchg
pop
sbb
call
bound
mov
mov
cdq
add
arpl
pop
or
sub
aas
movs
cmp
mov
inc
icebp
xor
call
mov
sbb
jae
rol
imul
xchg
adc
rol
pop
int
call
iret
ret
sub
loopne
adc
mov
hlt
mov
out
jmp
fnstsw
test
and
cmp
data16
popa
imul
stos
xor
not
int3
adc
xchg
sbb
sahf
pusha
fmul
mov
inc
cdq
pop
sti
push
pusha
shl
inc
jl
inc
loope
jle
add
cdq
call
xlat
dec
cdq
xchg
ins
cmp
push
mov
in
ss
dec
xchg
sub
lock
enter
ds
jae
(bad)
pop
dec
jae
daa
jmp
and
xchg
ror
add
xor
inc
or
fld
lahf
push
in
loope
jp
sbb
jae
or
std
and
clc
mov
jmp
neg
pushw
movs
js
lds
mov
jmp
imul
mov
jg
inc
es
pop
pusha
pop
and
ins
cmp
mov
sbb
hlt
fmulp
daa
icebp
add
lods
test
sub
mov
aam
and
js
xor
lds
mov
cmc
mov
jae
mov
jns
test
dec
xor
das
ja
sahf
or
fwait
std
cmp
push
out
cmp
das
xchg
adc
sahf
stc
cmp
and
xor
rcl
sbb
call
adc
mov
(bad)
bound
cmp
mov
stc
mov
push
jne
sbb
out
out
add
and
push
dec
jae
xor
cmps
push
fisttp
icebp
add
sub
dec
xor
sub
mov
retf
xchg
inc
jp
add
mov
pop
mov
and
loope
mov
dec
mov
sub
ins
jge
je
dec
add
dec
sub
jo
xchg
mov
jb
dec
jo
imul
mov
xor
(bad)
mov
data16
inc
or
mov
cmp
bound
(bad)
cmps
or
dec
call
xor
ins
mov
push
push
adc
dec
imul
jle
in
jmp
loope
mov
int3
mov
fisttp
or
das
pop
cmps
jnp
call
out
das
xchg
xor
sbb
or
call
sub
loope
fnstcw
fldcw
sar
fwait
xchg
les
xlat
ja
cld
and
dec
and
inc
std
inc
push
in
inc
pop
mov
xor
xchg
sub
(bad)
pusha
xchg
out
hlt
mov
jo
icebp
cs
repz
cld
cmp
dec
js
sbb
xor
sbb
mov
aad
inc
sub
pusha
add
movs
or
retf
mov
out
test
push
fbld
ud2
loop
push
sub
cli
jbe
pop
jg
push
stos
fstp
mov
movs
popa
(bad)
nop
push
and
aam
sub
lods
mov
enter
ret
test
ret
ins
imul
or
and
inc
mov
inc
jl
xor
xor
jnp
mov
ret
jle
sbb
mov
pop
xchg
out
adc
and
cmc
push
out
and
sbb
sub
adc
jno
mov
xchg
repz
push
pushf
les
aas
xlat
aam
or
stc
lds
cmps
shl
clc
sti
imul
inc
or
movs
mov
inc
test
xchg
aam
out
addr16
ret
pop
lahf
arpl
pop
repnz
mov
fs
clc
je
mov
jg
ret
mov
arpl
sti
enter
push
jae
cmp
pop
fisttp
outs
out
bnd
cdq
pop
mov
rcl
(bad)
xor
push
imul
pop
call
mov
and
push
sbb
cwde
sub
sub
push
movs
jl
mov
rcr
clc
mov
jae
fsub
xchg
pop
movs
sub
in
xchg
pop
cmp
fistp
scas
add
mov
out
mov
xchg
loop
loop
ins
adc
or
cmp
inc
mov
inc
dec
aam
add
xchg
sbb
mov
sub
dec
sub
into
lods
push
jmp
ds
cmp
lahf
retf
loop
fstp
sbb
add
jnp
or
cld
mov
rcr
ret
mov
sar
add
scas
rcl
mov
inc
push
stos
out
or
ja
aas
dec
mov
pop
mov
xor
jno
push
mov
clc
jecxz
add
call
adc
je
dec
inc
cmc
mov
shl
jge
rol
repnz
movs
xor
inc
add
fisubr
js
mov
jmp
adc
fwait
cmp
xor
cmp
or
and
and
xlat
sub
loop
popf
ins
pop
test
xor
and
xchg
pop
cmp
adc
fadd
xchg
jecxz
adc
shr
or
iret
outs
int3
cmc
(bad)
and
and
out
mov
push
pusha
in
mov
xor
outs
out
xchg
xor
cld
and
xor
sub
repnz
jge
inc
dec
loopne
in
and
inc
shl
movs
lahf
into
out
addr16
inc
inc
lods
push
inc
add
add
into
jo
sbb
movs
ror
mov
loop
adc
dec
push
rcr
loop
mov
mov
cmps
mov
mov
das
sub
fs
mov
push
fsub
retf
lahf
fcomi
fadd
mov
pop
mov
cmp
fmulp
leave
lods
mov
movs
xor
dec
mov
xor
jecxz
inc
(bad)
loopne
pop
adc
cmps
int3
pop
cmp
adc
cmp
popf
mov
add
test
cmp
sub
int
push
outs
or
or
cmp
test
imul
les
pop
jns
inc
pmaddwd
pusha
arpl
sbb
stc
jb
push
test
push
jecxz
lods
push
sbb
call
leave
push
mov
imul
popa
and
adc
loope
push
add
popf
dec
out
test
push
adc
mov
icebp
aas
push
repnz
cld
fs
pop
jge
test
add
in
push
and
stc
mov
in
mov
(bad)
and
neg
out
mov
add
pop
inc
es
or
adc
sahf
dec
cmps
in
pop
adc
dec
or
ins
inc
mov
pop
das
jae
fsubr
sub
ficomp
and
clc
cmp
mov
aad
scas
jno
imul
fstp
mov
sub
in
jg
ja
sbb
lea
cmps
vmovntps
leave
aaa
cmp
pushf
add
frstor
cmp
sbb
fld
rol
jmp
gs
ror
in
fisubr
inc
push
mov
neg
or
jmp
cmp
xchg
sar
fwait
mov
enter
shl
dec
retf
rcr
jno
inc
pop
push
add
cdq
mov
div
cmp
fucomp
fcomp
pop
dec
loopne
push
shr
add
pop
in
into
imul
mov
gs
xchg
call
dec
cld
fs
pop
cld
test
in
dec
add
idiv
clc
jmp
ret
mul
fist
mov
mov
jae
jecxz
int
dec
call
in
addr16
mov
in
jmp
inc
pop
cmp
(bad)
dec
mov
les
movs
js
push
jge
jae
jmp
adc
adc
push
dec
or
mov
pop
jle
mov
retf
adc
repnz
add
rep
jmp
mov
cmp
xor
jge
pusha
xor
stos
sub
test
popa
nop
dec
adc
enter
test
mov
ficomp
xor
pop
fnstenv
retf
fistp
popf
jl
push
cli
popf
adc
mov
out
jae
cli
push
jno
frstor
pop
stc
jno
or
cwde
loopne
pop
add
loope
xchg
sbb
ds
jne
cmp
and
cli
outs
pop
fwait
test
adc
aam
inc
or
sub
xlat
fsub
js
hlt
cdq
add
int3
or
lock
pop
xlat
or
jmp
pop
add
mov
call
cwde
dec
loopne
in
fadd
xor
xchg
adc
jmp
xchg
push
popa
or
(bad)
imul
repnz
dec
int3
loopne
lods
push
mov
or
mov
test
fst
sub
xor
sti
imul
pop
lock
xchg
xchg
movs
jnp
iret
xchg
mov
ja
nop
int3
iret
mov
jns
xor
fwait
pop
adc
cmp
sbb
jle
in
add
xchg
inc
enter
rcl
enter
mov
mov
in
stc
lods
(bad)
das
js
push
cmp
xchg
ins
inc
xor
mul
sahf
lds
jp
cmp
ficom
in
outs
inc
outs
pop
rol
fadd
xor
scas
shr
outs
inc
xchg
push
inc
pop
pop
xchg
add
cs
lods
mov
cmps
or
xchg
in
test
(bad)
push
dec
scas
push
pop
mov
aad
add
jnp
cmp
hlt
xchg
popa
mov
jno
adc
add
or
aad
hlt
std
(bad)
jge
aad
xlat
(bad)
cmp
push
movs
int
scas
xchg
test
xchg
aaa
pop
rcr
or
adc
jne
fcomi
sub
fcomp
rcl
shl
xchg
fistp
xchg
fwait
aad
cmp
jmp
cli
jecxz
stos
nop
adc
(bad)
push
lahf
jle
sbb
clc
lock
pop
cwde
(bad)
add
call
push
inc
inc
cmp
jo
in
pop
mov
out
lahf
push
jg
add
dec
or
shr
enter
loopne
push
pop
loop
je
mov
outs
cmp
push
inc
adc
mov
cmps
fnsave
mov
call
and
pop
sar
xchg
pusha
adc
cwde
lds
scas
ret
add
or
mov
cmp
aas
not
dec
mov
cdq
ja
test
or
rol
mov
add
outs
xchg
cmp
mov
mov
cmp
mov
fdiv
das
mov
call
fwait
cmp
outs
into
sub
sar
mov
scas
sahf
fwait
imul
(bad)
mov
and
test
aaa
data16
popf
in
(bad)
popf
and
mov
cdq
repnz
dec
pop
jg
repnz
cmps
dec
mov
pop
ret
mov
cmps
jl
mov
test
fisub
push
lahf
dec
inc
vpaddw
aam
imul
inc
dec
in
pop
mov
push
ss
mov
or
ror
repz
adc
icebp
(bad)
jp
iret
stos
fistp
sub
loop
adc
cmps
loop
jp
hlt
cs
xchg
dec
xlat
mov
add
loop
sub
ja
pushf
(bad)
iret
and
in
cmp
mov
mov
mov
pop
sub
jne
sbb
rcl
sub
mov
xor
lods
jmp
sti
mov
fimul
sbb
push
dec
daa
fst
or
inc
jo
sub
fwait
jp
xor
in
inc
dec
popa
sub
jb
in
jnp
cli
push
mov
aad
xchg
and
add
or
movs
sbb
rol
or
call
fs
mov
xchg
cmc
es
sbb
cmc
xor
std
cmp
pop
push
jbe
jne
pop
xchg
and
mov
test
add
cdq
add
les
ins
es
inc
test
test
or
or
or
(bad)
(bad)
out
mov
push
pop
fcom
and
inc
fild
and
dec
push
pop
out
pop
lahf
in
cmp
jl
push
call
ret
jns
sub
mov
cmp
jl
call
jl
mov
mov
mov
push
ret
jecxz
popf
inc
xchg
inc
push
fwait
into
outs
in
retf
dec
pop
or
mov
xchg
xlat
js
fcmovne
cmp
and
aaa
sar
add
sub
xor
(bad)
rcl
cmp
js
mov
mov
xchg
jb
aaa
jnp
loop
repnz
and
inc
fcmovne
jno
add
add
push
jge
cmps
jge
mov
stos
cmps
cs
es
push
aam
movs
(bad)
dec
jbe
fsubr
push
test
pop
lea
push
pop
and
add
push
push
call
pop
push
adc
pop
cld
mov
push
ja
pop
sbb
rcl
scas
fucom
inc
inc
cmc
(bad)
out
add
or
ss
test
dec
test
push
test
rol
pop
push
retf
sub
rcl
iret
das
mov
lea
mov
mov
ins
lock
das
dec
dec
enter
inc
(bad)
mov
inc
lahf
fcom
sub
push
fs
dec
call
mov
inc
and
pusha
jle
test
sti
xlat
mov
fld
les
and
out
cmp
xchg
push
fadd
pop
sbb
sub
fst
mov
cmp
icebp
push
retf
mov
and
xor
or
arpl
mov
pop
mov
push
adc
lods
inc
xchg
or
and
call
stos
mov
xor
lahf
push
inc
mov
sub
loopne
add
adc
sti
mov
xlat
nop
outs
lock
sub
aam
pop
outs
add
call
stos
sbb
mov
retf
cmc
sub
es
jp
dec
xchg
(bad)
iret
repnz
sbb
shr
or
loop
fcom
sbb
jne
(bad)
push
jno
sub
cmp
iret
sub
mov
dec
mov
jmp
out
in
add
inc
int
xchg
jbe
test
jno
add
int
jae
sub
sbb
push
enter
mov
ins
xchg
dec
xor
sbb
outs
les
mov
repnz
dec
cs
ror
loope
mov
push
jg
cmp
sub
aam
(bad)
or
or
jb
(bad)
(bad)
das
sbb
mov
lea
dec
pop
add
and
retf
jp
mov
push
sbb
ret
clc
jp
add
pop
mov
rcr
ror
push
xchg
jge
movs
arpl
fnstenv
pshufw
sub
and
xor
and
bound
jne
jge
out
inc
and
leave
sahf
cmp
test
mov
out
mov
push
sbb
sbb
lahf
mov
in
retf
mov
fnsave
sahf
stos
jnp
pop
lds
dec
call
lahf
cdq
mov
aam
mov
inc
lds
dec
loop
lods
shr
dec
inc
leave
cdq
out
add
mov
add
jo
pop
pusha
retf
shl
test
fist
mov
call
in
out
movs
ss
fcmovu
mov
repz
mov
jmp
retf
(bad)
xor
call
stos
sub
push
mov
inc
jge
xlat
std
or
mov
in
push
ss
clc
inc
xchg
retf
add
ds
xlat
sub
js
aaa
adc
fdivrp
push
and
(bad)
imul
push
mov
or
lock
sub
xor
mov
(bad)
mov
pop
mov
ins
mov
mov
push
sar
xor
vpunpckhdq
rcl
xchg
jo
mov
jb
jle
sbb
into
rcr
movs
cwde
mov
rcl
pop
mov
icebp
push
fiadd
icebp
mov
(bad)
iret
outs
push
mov
int3
fidivr
imul
or
arpl
std
movlps
retf
lods
test
in
pop
aad
in
sahf
shl
popf
xor
mov
shl
mov
xchg
sbb
outs
pop
test
into
test
int
adc
lock
inc
mov
cmc
mov
test
push
sub
es
pop
mov
cmp
cs
mov
je
mov
and
jbe
rcl
retf
mov
repz
jge
aas
int3
push
fidivr
or
xor
and
push
mov
cmps
or
xchg
dec
lods
in
jb
mov
(bad)
push
repnz
dec
in
je
mov
mov
test
aad
pop
adc
xchg
sub
test
sub
outs
imul
mov
push
add
inc
xlat
mov
ret
arpl
cmp
mov
push
idiv
inc
fld
jmp
mov
pop
jl
cmp
bound
idiv
movs
mov
mov
stc
mov
cld
dec
popa
ret
dec
cmps
cdq
cli
sub
cdq
scas
int3
retf
or
adc
rcl
sub
mov
or
dec
dec
adc
aam
xor
or
mov
int3
lods
mov
inc
push
das
jmp
jecxz
cmp
jmp
retf
imul
and
sub
fild
mov
xchg
inc
xchg
jmp
mov
jb
dec
and
pushf
and
jo
in
dec
jge
inc
movs
fs
stc
sub
add
push
xchg
mov
addr16
std
and
jp
movs
ja
add
ja
rol
adc
loopne
aaa
sub
stos
jle
imul
add
add
ss
inc
mov
jmp
jae
es
js
add
pop
pop
(bad)
outs
mov
jns
mov
and
inc
aaa
enter
xor
mov
int3
adc
rol
push
clc
push
outs
xchg
mov
bound
sub
xor
iret
mov
push
push
ss
mov
mov
push
repnz
mov
mov
lds
jge
in
iret
xor
retf
and
sub
out
popa
add
sub
mov
pop
std
jecxz
cmp
pop
stos
cmp
aas
fnsave
add
cwde
out
popa
test
push
sti
vcomiss
arpl
xchg
test
nop
push
stos
push
std
jae
shr
push
shl
and
popf
inc
popf
or
inc
iret
cmp
mov
sahf
sbb
je
scas
jle
lods
stos
add
mov
mov
je
inc
or
dec
jp
mov
ficomp
sbb
cmp
test
mov
sub
and
lods
and
rcr
cli
pop
and
mov
dec
addr16
xor
jmp
cmp
sub
xchg
and
inc
loope
js
lds
xchg
and
pop
push
fistp
int
jb
je
xor
mov
shl
jno
ins
mov
lahf
pop
das
fld
test
adc
jns
fcomp
mov
shr
movs
mov
xor
adc
div
cdq
mov
pop
lods
add
pop
popa
dec
or
(bad)
bound
pop
pop
mov
dec
inc
into
iret
mov
mov
cmp
aam
mov
pop
icebp
mov
mov
aam
aam
mov
push
or
call
jns
mov
or
or
xlat
in
and
aaa
shl
ret
adc
sub
add
pop
je
mov
sahf
jmp
pop
out
cmp
adc
das
jg
aaa
repnz
mov
sub
add
add
xor
add
add
dec
mov
xor
mov
push
and
test
push
(bad)
inc
cmc
ja
jl
cdq
xchg
scas
push
sahf
fadd
sti
lods
jo
or
pop
mov
pop
lahf
out
inc
adc
mov
add
jg
gs
iret
push
jae
lods
xchg
scas
je
add
fcom
aaa
sbb
in
mov
sbb
cld
and
scas
jecxz
in
aaa
cmp
cmps
push
aad
pop
push
add
rcl
movs
aaa
cwde
push
xor
xchg
not
rcl
ret
js
jecxz
outs
add
mov
(bad)
pop
xchg
or
add
adc
out
cdq
ret
xor
mov
xchg
sahf
adc
mov
pop
and
push
ja
test
and
mov
rep
fsubp
mov
xor
sub
out
(bad)
in
dec
and
(bad)
(bad)
jecxz
push
add
out
lds
daa
ins
ret
sub
or
cwde
jae
cmp
dec
sar
mov
lods
jae
je
push
mov
add
dec
xchg
sub
inc
push
cs
retf
outs
xchg
repnz
cmps
stos
xchg
ret
fisttp
xchg
int3
fld
cdq
inc
popa
sti
mov
test
ds
lods
mov
push
pop
aad
mov
icebp
in
sar
push
dec
mov
sub
pop
xchg
test
push
sbb
scas
sbb
push
inc
add
idiv
clc
fmul
in
imul
shr
call
data16
aas
or
(bad)
pusha
mov
jne
into
int3
adc
(bad)
fisubr
mov
push
xchg
sub
mov
or
inc
adc
test
int
push
sbb
push
push
or
cmp
mov
in
jp
test
adc
dec
nop
jbe
shr
xchg
ds
add
aaa
and
sub
imul
inc
retf
aas
mov
push
mov
push
mov
mov
mul
inc
test
je
or
pop
inc
jmp
ins
add
push
add
cmps
xor
pushf
aam
mov
sbb
push
jnp
iret
mov
pop
jbe
xor
xlat
leave
imul
mov
in
jne
nop
add
push
mov
in
dec
jae
xlat
xor
mov
and
jno
jmp
jge
cmc
cmp
ss
sub
cwd
add
cdq
dec
pop
ficomp
aaa
mov
popf
cmps
sti
lods
mov
div
mov
iret
fidivr
jge
mov
fst
aad
dec
pop
jge
pop
add
push
xor
fsub
gs
out
cmp
not
lahf
mov
push
sbb
mov
iret
retf
xor
push
sbb
jo
popf
(bad)
mov
mov
fcom
pop
add
pop
repz
pop
lods
(bad)
jne
or
sti
xchg
jp
sti
or
mov
movs
scas
in
rcl
daa
fdivp
xor
inc
add
out
add
cs
test
xor
push
sbb
cli
into
xchg
test
jo
add
pop
inc
psrld
sub
gs
scas
fdiv
fild
popf
shl
pushf
shl
lods
arpl
mov
add
loope
loope
retf
imul
sub
retf
jecxz
mov
sub
adc
mov
mov
fdivr
pop
dec
jae
sub
outs
inc
jp
outs
add
mov
mov
dec
arpl
xor
ins
mov
xor
sbb
pop
pop
ret
or
in
stos
pop
push
pop
rcl
jnp
mov
or
loop
cs
jl
icebp
test
pop
pop
out
or
test
in
or
cmp
retf
xchg
cmp
js
mov
popa
sbb
or
scas
cmp
mov
adc
add
cmp
xchg
inc
adc
adc
mov
push
inc
popa
jae
pushf
dec
cmp
sar
mov
or
lods
sbb
mov
repnz
fstp
leave
add
ss
mov
xor
cmp
mov
pop
push
shl
ret
leave
and
nop
pop
sbb
shl
and
sub
repnz
mov
sahf
(bad)
test
and
in
loop
imul
xchg
jns
aam
in
js
repnz
pop
jp
jns
jge
ja
retf
test
repnz
sub
stos
xor
gs
outs
cmp
out
ja
sub
movs
call
adc
pop
mov
add
cmp
clc
imul
cmp
in
push
jnp
jmp
fistp
in
fist
imul
xchg
scas
pop
das
mov
dec
xor
xchg
inc
nop
cmps
pop
mov
sub
mov
mov
shr
int
in
dec
clc
cli
(bad)
fild
mov
pop
hlt
sbb
pop
scas
popa
add
and
cvtpi2ps
and
(bad)
xchg
(bad)
retf
add
inc
sbb
pop
mov
adc
cmp
inc
ret
cmps
jbe
popa
call
addr16
inc
lea
xchg
mov
mov
pop
sbb
and
mov
jl
mov
and
arpl
push
mov
xor
and
jl
xor
ja
pop
icebp
mov
jmp
xchg
fdiv
repnz
mov
hlt
cmp
jae
scas
pop
ins
ror
push
pop
clc
jb
mov
test
enter
rol
pop
mov
mov
mov
data16
jno
sbb
sti
call
arpl
adc
mov
ret
jae
out
popa
fdiv
adc
xchg
adc
rol
mov
sti
xor
mov
xchg
sbb
aas
lea
push
push
or
std
mov
or
popf
xchg
ret
adc
in
sbb
dec
and
mov
popf
loop
adc
scas
ret
ds
push
es
pop
mov
add
mov
jns
movs
dec
inc
dec
xchg
mov
pop
xchg
ret
arpl
ins
mov
xchg
or
loope
out
lods
popa
fdiv
push
xchg
shl
adc
adc
sub
dec
fdiv
sub
mov
jae
xor
dec
cmp
sbb
fmul
jne
pop
pop
adc
inc
adc
push
fmul
fucomip
lods
repz
lds
fsub
call
sahf
into
sub
into
cmc
jle
jae
push
adc
mov
gs
xchg
xchg
ret
enter
repz
jge
xor
dec
pop
aam
fwait
jmp
cwde
add
push
inc
jmp
xchg
and
adc
scas
xchg
sbb
scas
mov
xchg
mov
mov
test
mov
in
push
mov
sub
(bad)
iret
int
fcmovbe
aam
out
mul
mov
into
out
push
fimul
xchg
std
loopne
xchg
cs
jp
mov
ret
jle
adc
xor
push
xchg
sub
test
push
sub
add
fidiv
adc
sbb
mov
imul
or
add
lahf
in
xchg
or
adc
sub
lods
mov
sbb
adc
ffree
leave
cdq
loopne
sbb
lahf
cmp
ror
and
out
fdiv
jne
int
lea
adc
push
mov
push
mov
pop
das
mov
xchg
les
jge
popf
iret
xchg
sbb
add
lods
mov
rcr
mov
test
sub
jmp
add
jg
cmp
pop
jno
cwde
mov
inc
push
jg
mov
test
lea
sbb
repz
sub
add
adc
mov
lods
daa
mov
test
rol
aam
pop
inc
(bad)
rol
jp
xor
stos
adc
mov
inc
cmps
jp
ret
xchg
mov
mov
test
pop
fst
sub
icebp
icebp
rsqrtps
mov
stos
call
add
lea
cs
jb
fs
push
mov
pusha
mov
mov
hlt
jmp
out
lods
xchg
push
and
out
xchg
lods
mov
jp
popa
(bad)
sbb
pusha
sub
sbb
cs
es
dec
or
mov
test
add
lds
or
jge
aad
neg
pop
pop
inc
sbb
aaa
iret
xor
mov
push
pop
add
je
aam
popa
rcl
cmp
ins
push
dec
imul
or
jmp
jg
in
sti
cwde
mov
call
mov
enter
dec
stos
call
sahf
cmp
jp
push
hlt
(bad)
cwde
sbb
into
jno
mov
xor
push
xor
xchg
(bad)
push
mov
popa
jns
in
mul
push
(bad)
fisttp
jmp
sub
xor
or
(bad)
xor
out
push
and
ficom
fcomp
pop
sbb
inc
dec
jae
pop
pop
push
push
int
mov
xor
call
adc
ins
mov
sub
mov
mov
nop
sub
in
sbb
and
cli
jnp
enter
dec
inc
inc
ja
imul
rcr
fcomp
jne
fs
pop
jae
sbb
fidiv
inc
imul
mov
or
ins
sub
aad
sbb
popf
xor
add
cmps
mov
popa
sbb
xchg
popf
xlat
pop
rcr
push
cmp
mov
pop
dec
sbb
inc
aaa
rcr
bts
mul
aas
push
daa
push
add
xchg
pop
and
jne
mov
into
ss
lock
cmp
test
sub
mov
movs
push
adc
inc
mov
dec
rol
(bad)
imul
es
in
les
inc
das
aad
dec
cld
push
(bad)
mov
xchg
sbb
jo
rcr
mov
mov
lock
ds
lahf
sbb
popa
mov
fild
cmp
icebp
jnp
test
pushf
cld
xchg
movs
lods
and
dec
test
cmp
rcr
cmp
cmc
and
and
push
mov
rcl
jecxz
into
mov
jmp
jp
pop
shl
pop
xchg
shl
mov
add
loop
or
or
rol
movs
jo
in
call
push
dec
mov
outs
mov
mov
and
and
imul
xchg
mov
push
push
jmp
fnstsw
fdivp
clc
mov
jecxz
repnz
test
popa
sbb
pop
add
stos
(bad)
xor
xor
lahf
pushf
fimul
ins
push
mov
push
lock
arpl
sbb
jns
push
sub
int3
pop
movs
mov
or
and
popf
sub
mov
add
(bad)
sub
inc
inc
inc
into
mov
leave
dec
rol
out
into
nop
test
xchg
add
xor
(bad)
fistp
xor
enter
add
and
nop
shl
dec
out
adc
mov
jmp
aad
and
stos
outs
sbb
test
fistp
cmovb
cli
jecxz
sahf
pop
add
leave
int3
ret
daa
pushf
add
pop
stos
not
(bad)
push
test
pop
clc
dec
fdivr
cmc
mov
lds
add
jmp
aaa
sbb
adc
test
pop
out
cli
pop
mov
movs
inc
jg
pop
das
cmps
cmp
or
push
adc
cmp
jg
out
sbb
push
sub
cmps
aam
bnd
mov
loope
gs
iret
das
outs
xor
fiadd
xor
shl
addr16
mov
mov
cmp
and
mov
and
and
push
leave
sti
jle
rol
xor
gs
add
ins
cdq
mov
clc
in
xchg
xchg
cmp
ins
cmp
loopne
sar
jmp
or
adc
out
aaa
xchg
push
mov
mov
sar
pop
mov
rol
lods
clc
je
ins
xor
lods
sub
mov
fs
call
(bad)
repnz
sbb
loop
mov
and
jmp
call
xchg
sub
out
out
fstp
lods
pop
lds
sub
jp
push
or
sbb
sub
clc
fiadd
push
and
jmp
(bad)
loope
loop
sti
mov
jmp
jle
sbb
enter
push
aaa
addr16
ret
mov
mov
xchg
stc
xor
pop
mov
xchg
xchg
in
jne
dec
fimul
ret
xchg
les
jo
cli
pop
out
sbb
dec
not
dec
ret
mov
sbb
mov
stc
je
mov
xchg
fadd
inc
xchg
push
stos
inc
ss
mov
enter
add
cmp
enter
inc
cs
cmps
pop
cli
retf
add
inc
jo
or
leave
dec
dec
enter
test
add
push
adc
in
loopne
out
adc
or
mov
mov
fisttp
(bad)
mov
das
inc
xchg
push
pusha
rol
mov
into
mov
lock
cmp
sbb
aam
test
inc
(bad)
call
inc
pop
mov
dec
ins
push
pusha
pushf
sbb
push
push
sub
add
and
and
loopne
mov
xor
jle
and
or
mov
cmp
fistp
in
loope
dec
mov
cmp
push
xchg
cdq
out
jmp
dec
(bad)
mov
gs
and
fcom
sti
retf
sbb
xchg
outs
cld
pop
or
mov
cwde
jge
add
sbb
fcom
in
dec
and
scas
or
add
pop
arpl
jp
dec
ret
ins
lods
sub
popf
clc
(bad)
mov
jge
(bad)
pop
or
inc
mov
add
and
inc
retf
cwde
inc
jmp
jb
imul
fiadd
ja
dec
push
sti
ffree
mov
imul
adc
paddb
lods
(bad)
call
imul
dec
(bad)
jp
cmps
mov
aaa
cs
mov
ja
sar
(bad)
clc
cmps
or
mov
rcr
loope
inc
(bad)
push
sub
popf
xchg
mov
inc
dec
adc
cli
clc
push
bnd
pop
mov
lea
loop
jmp
setb
sub
and
sbb
inc
xchg
fld
stos
out
inc
jl
add
lock
(bad)
movs
repz
mov
and
add
ret
pop
std
sbb
div
inc
and
xchg
push
dec
mov
rcr
(bad)
mov
pop
or
jmp
into
lds
loopne
cmp
mov
mov
cld
(bad)
fld
mov
dec
and
mov
mov
lods
repnz
(bad)
repnz
and
jp
lock
lea
(bad)
shl
or
sub
dec
xchg
xlat
sti
add
int
adc
jge
stos
sub
jnp
sbb
mov
or
movs
dec
(bad)
push
pop
stos
(bad)
or
cmps
out
push
inc
popa
dec
adc
dec
mov
add
inc
push
and
adc
jbe
cmp
push
adc
test
shl
stc
out
xchg
leave
mov
aaa
or
jp
mov
mov
push
je
aas
cmp
stos
test
iret
(bad)
fs
mov
mov
and
xchg
stos
std
xchg
imul
xor
leave
aam
adc
jo
jnp
std
adc
jne
retf
test
jge
cli
outs
sbb
pop
fild
pop
outs
xchg
gs
popf
scas
fisubr
cmp
sub
jmp
jmp
stc
test
(bad)
cmc
ins
cmp
jb
push
push
add
retf
cmps
std
push
enter
call
adc
pop
aad
xor
or
or
into
pop
pushf
outs
push
stc
sahf
test
xchg
retf
repz
jnp
add
sbb
or
stc
jmp
clc
fstp
je
out
add
and
aas
mov
sbb
call
ds
push
pop
ficom
out
in
jnp
leave
lods
adc
fisubr
imul
(bad)
and
stos
mov
daa
scas
out
add
retf
mov
rcl
mov
cli
icebp
cwde
es
ret
mov
out
das
test
or
cmps
mov
lea
cmps
dec
jl
cmp
test
jne
cmp
test
into
(bad)
out
jl
mov
(bad)
aas
ret
(bad)
push
pop
jb
nop
or
movs
movs
sbb
sbb
or
xor
adc
fnsave
call
popa
jge
adc
cld
in
and
xchg
jne
and
mov
mov
xchg
cmps
inc
test
movs
lds
mov
jmp
jb
fnstenv
neg
sub
push
jg
int3
lahf
inc
xchg
dec
mov
and
mov
iret
fst
mov
into
std
dec
ins
stos
inc
adc
ror
cmp
push
mov
ror
arpl
shl
xchg
repz
popa
or
pop
mov
pop
sub
ja
mov
test
aas
mov
daa
and
push
mov
push
nop
cwde
aaa
jle
movs
cmp
push
fcom
jae
pop
mov
or
add
push
rol
dec
bound
paddusb
push
js
push
pusha
or
out
inc
or
movs
imul
mov
mov
aam
iret
or
xor
shr
outs
int
repnz
mov
sub
add
xchg
retf
movs
enter
dec
xchg
inc
sahf
mov
nop
das
or
mov
add
jl
loope
movs
aaa
(bad)
mov
cmps
xlat
repnz
ja
ja
jge
pop
jne
push
mov
mov
mov
(bad)
out
add
mov
pop
std
dec
mov
cmps
out
mov
pop
and
div
mov
aad
loop
or
out
mov
dec
out
ins
xchg
xchg
push
dec
mov
stos
daa
in
jne
shl
dec
into
aaa
loopne
mov
dec
jge
mov
cmp
ins
pop
push
nop
leave
dec
and
pop
ins
xchg
popf
test
sub
test
test
les
cmp
pop
mov
add
out
mov
dec
jecxz
scas
mov
stos
push
pop
jno
push
(bad)
mov
and
psrad
in
scas
dec
daa
scas
mov
mov
fiadd
xchg
fsub
retf
adc
xor
or
fdiv
addr16
push
cld
into
fstp
mov
mov
loope
cdq
loop
cld
xchg
or
push
pusha
pop
shl
stos
sar
dec
jl
rol
repz
push
fimul
nop
into
or
std
xchg
mov
sub
mov
or
fdivr
sub
sbb
push
shr
fnstsw
je
aas
adc
add
jnp
adc
push
scas
into
or
fisubr
adc
sahf
mov
pop
and
icebp
(bad)
aam
inc
daa
div
ja
(bad)
repz
xor
test
int3
mov
xor
push
in
mov
pop
jb
into
mov
cmc
pop
mov
movs
mov
(bad)
adc
xor
dec
jae
enter
cdq
outs
push
bound
sub
mov
mov
jl
adc
cmps
xchg
int
inc
in
icebp
pop
aam
push
imul
neg
sub
mov
test
ja
repnz
or
fist
retf
mov
ins
cmp
dec
mov
iret
and
sbb
mul
sahf
inc
clc
jmp
in
xor
adc
cdq
daa
jne
hlt
push
push
and
mov
cmp
pusha
pop
mov
in
into
icebp
sbb
call
scas
ds
test
mov
jecxz
mov
(bad)
mov
jmp
inc
sub
sbb
ins
or
sbb
std
inc
movs
stc
out
mov
sub
loop
or
pop
shr
jg
pop
mov
pop
xchg
mov
int
push
cmp
test
ror
jmp
push
and
loop
dec
popf
push
in
or
dec
in
push
std
push
cmps
lods
push
inc
or
out
inc
pop
mov
push
xor
xlat
scas
xlat
adc
test
or
or
push
call
sub
outs
pop
(bad)
test
dec
cmp
sar
or
test
pmullw
xor
movs
cmc
jnp
in
movs
gs
sbb
cmp
cmc
test
add
lea
je
sub
aaa
icebp
or
xchg
or
int
ins
ins
and
mov
sbb
push
fild
out
jle
out
lahf
xor
out
out
punpckhdq
mov
cs
rcl
fisttp
or
inc
div
arpl
pop
fabs
mul
aas
inc
mov
repnz
je
cld
retf
add
pop
loop
mov
jnp
ret
shl
imul
jnp
and
cmp
add
ds
pop
jp
jle
pop
sub
rcr
loope
loopne
sbb
xlat
(bad)
pushf
into
ins
pop
xor
xor
aam
in
fisub
sbb
or
or
pusha
inc
or
cmp
or
cmp
aad
xchg
(bad)
jns
repz
jge
xchg
fstp
dec
mov
mov
test
pop
mov
adc
in
mov
mov
xlat
xchg
call
popa
push
sub
fidiv
stos
dec
sub
jns
xor
popa
or
inc
sub
daa
mov
test
dec
int3
mov
mov
xchg
mov
jmp
jmp
arpl
ficomp
(bad)
sub
add
jns
outs
adc
ficom
add
dec
les
adc
cmp
add
xchg
mov
pop
sub
push
adc
inc
mov
add
ins
pop
daa
sbb
ds
dec
xor
dec
cli
mov
(bad)
das
inc
dec
inc
dec
loopne
les
xchg
mov
mov
adc
push
ret
mov
fst
cmp
fsubp
inc
push
add
lods
fisttp
(bad)
mov
xor
dec
ins
mov
(bad)
cs
std
lods
stos
push
mov
xchg
retf
gs
dec
push
push
mov
push
jo
inc
aaa
pop
ins
mov
mov
in
xor
sbb
xchg
(bad)
jne
sbb
ds
ja
cdq
arpl
mov
push
sbb
push
push
repz
mov
test
shl
(bad)
add
pop
jg
mov
xor
dec
dec
push
in
idiv
ss
mov
sbb
mov
fincstp
sar
dec
mov
dec
(bad)
in
pop
jge
les
int
fwait
add
cmp
fwait
aam
jmp
mov
push
lock
test
lds
mov
xor
mov
popa
or
push
bound
and
push
mov
in
jp
bound
in
idiv
dec
jae
sub
fisubr
aaa
repnz
mov
daa
popa
mov
mov
push
mov
jae
es
cmp
lds
mov
xchg
mov
add
pop
pop
cmp
ss
addr16
add
xchg
mov
pop
xchg
cli
mov
repnz
sub
popf
call
jg
jo
jmp
jno
pop
cmp
mov
idiv
sbb
lahf
loope
das
vmovaps
add
(bad)
test
(bad)
xor
push
mov
(bad)
cmp
retf
psrlw
test
mov
fisub
pop
popf
jae
pop
sti
in
dec
push
dec
xchg
fwait
int
jno
cmp
stc
xchg
cmps
ret
inc
and
imul
jns
out
jmp
push
inc
std
loopne
pushf
adc
pop
xchg
movs
mov
jo
xchg
movs
sub
arpl
std
out
push
faddp
fwait
cmp
mov
jmp
in
cmps
loope
mov
xor
and
jl
adc
clc
into
into
pop
mov
xor
inc
or
push
cmps
dec
and
mov
mov
pop
arpl
out
xor
call
ret
jns
inc
push
jae
mov
sub
xchg
into
call
shl
pop
cmp
sub
es
cmp
or
adc
adc
in
sti
sbb
adc
inc
adc
rcr
sub
jmp
test
sar
jo
outs
dec
mov
clc
adc
inc
outs
loop
rcl
pop
jmp
inc
lock
inc
call
adc
(bad)
leave
aad
adc
shr
sub
clc
cmps
pop
(bad)
data16
adc
fcmovnu
sub
or
push
test
xor
into
mov
or
call
leave
out
cwde
jne
int3
aam
add
lahf
je
cs
and
pop
mov
dec
into
and
pop
jnp
push
sub
mov
inc
mov
sbb
and
mov
jb
inc
icebp
ror
mov
call
loopne
jnp
addr16
ins
inc
outs
push
mov
in
cwde
or
push
jl
es
shl
push
xor
pop
mov
jne
bound
retf
xchg
pop
xor
out
or
(bad)
adc
jp
jp
adc
ja
push
retf
mov
imul
mov
mov
jle
push
mov
loop
fcom
and
sti
cmp
out
dec
mov
pop
fwait
push
das
mov
sbb
out
and
mov
dec
push
xchg
lock
jbe
inc
inc
ret
out
(bad)
xlat
stc
push
push
sbb
jle
sub
lds
rol
xor
sub
pop
movs
data16
jo
popf
and
in
loopne
lock
and
test
out
mov
jmp
lahf
sbb
jge
push
ds
test
push
add
js
lods
sub
gs
cmp
or
or
dec
lods
xchg
fxch
call
xchg
mov
aad
in
jmp
test
pop
repnz
cmp
clc
(bad)
push
xor
pop
cmps
mov
and
mov
dec
add
ficomp
(bad)
xchg
movs
and
or
jo
pop
cwde
inc
mov
mov
ret
pop
pop
js
adc
sub
push
inc
push
test
(bad)
dec
pop
fs
add
mov
aad
push
ds
mov
mov
pop
out
xor
mov
and
inc
inc
mov
xchg
fstp
nop
dec
adc
mov
jp
inc
idiv
cmps
loop
sahf
mov
jecxz
or
das
push
mov
jmp
sbb
data16
and
sub
aas
fsub
adc
sub
add
jge
rcl
fimul
jecxz
retf
sub
dec
imul
icebp
xchg
push
or
jp
mov
mov
pop
jbe
imul
rcl
cmp
icebp
std
dec
dec
jns
repz
std
add
cmp
mov
cs
cmp
cld
sub
jg
add
sbb
cmp
aam
enter
ret
sbb
loop
and
and
(bad)
sbb
mov
and
call
pop
movs
cwde
out
(bad)
outs
in
cwde
out
jae
or
pop
iret
and
xchg
movs
lds
xor
ret
dec
into
leave
lahf
js
dec
sti
fldpi
inc
jg
xchg
lahf
jge
mov
and
std
mov
jae
mov
mov
xor
int3
jo
inc
sahf
out
outs
jnp
jmp
xchg
and
in
(bad)
stos
rcl
dec
ds
adc
enter
mov
sbb
and
cmp
sbb
fwait
cs
sbb
ret
stos
jbe
inc
ins
add
jmp
js
jno
jbe
sbb
sbb
jbe
mov
popa
call
cmp
bound
fisub
and
aam
pushf
inc
add
lods
dec
mov
push
cmp
je
retf
add
add
mov
outs
jecxz
loopne
inc
lods
fidivr
and
mov
test
sbb
aam
xor
call
inc
push
xchg
push
sbb
mov
push
out
mov
in
mov
enter
ss
mov
fsub
cmc
cmp
add
mov
rcr
ret
jg
retf
in
js
jmp
(bad)
data16
pushf
mov
push
retf
idiv
dec
in
or
sbb
nop
outs
retf
inc
push
mov
enter
aaa
push
mov
out
xchg
adc
adc
int
jge
adc
adc
out
inc
in
pop
sub
arpl
dec
adc
mov
xlat
sub
js
aas
xor
jmp
and
fucomip
mov
xchg
mov
pushf
test
sahf
jecxz
pop
les
out
stc
mov
fcompp
call
out
xchg
cmp
or
xchg
fistp
sbb
in
xchg
int3
mov
jo
add
sbb
std
(bad)
cmp
(bad)
in
repnz
in
dec
push
mov
shl
jmp
cmc
sahf
in
sub
leave
(bad)
cmp
imul
and
inc
pop
xchg
(bad)
xor
ss
or
(bad)
ret
cmp
inc
test
ins
sbb
fcom
and
xor
sahf
movs
cmp
test
div
ret
lds
ss
push
div
inc
(bad)
mov
add
adc
jecxz
and
jns
jmp
cmp
xchg
mov
popa
loope
cwde
das
add
sub
mov
lods
test
xchg
fild
pushf
shr
xchg
xor
in
sub
cli
in
xchg
sbb
popf
xor
inc
inc
jg
ins
push
aaa
(bad)
das
pusha
inc
jnp
jbe
mov
mov
fimul
push
fsubrp
pop
adc
shl
pushf
mov
(bad)
cmp
mov
ins
ror
mov
(bad)
and
push
addr16
out
and
aam
add
daa
fstp
sbb
mov
add
(bad)
add
pop
sbb
mov
(bad)
mov
repnz
or
clc
rcl
xor
retf
into
push
push
das
push
or
rcl
enter
ins
or
iret
das
arpl
(bad)
cmp
scas
xlat
or
iret
lods
lock
out
inc
rcr
das
jnp
ja
mov
jmp
out
into
(bad)
cmp
or
and
sub
inc
sub
and
jmp
adc
ret
mov
aam
retf
jmp
cmp
mulps
push
movs
or
ja
stos
pop
(bad)
jp
pop
sar
cmp
out
add
xor
cmp
jo
cmp
fwait
mov
dec
mov
sbb
dec
ret
test
les
jmp
add
mov
xchg
push
in
aad
test
out
rcl
dec
jmp
mov
repnz
loope
inc
jbe
or
pop
inc
and
xor
xchg
inc
dec
or
mov
test
adc
mov
leave
int3
inc
mov
jl
cli
mov
jbe
or
rcl
cmp
ret
adc
jns
enter
mov
rol
or
xor
jl
xor
addr16
push
sbb
arpl
mov
lods
cdq
les
or
lahf
pushf
int
int3
popf
imul
pop
mov
inc
xchg
pop
icebp
cld
mov
dec
cdq
in
inc
add
nop
jb
icebp
and
and
out
jecxz
leave
ret
jo
movs
shl
xchg
std
std
(bad)
sub
int
xchg
test
sahf
fstp
add
imul
scas
enter
jmp
fdiv
mov
cmp
dec
jmp
out
int3
push
xor
(bad)
mov
xchg
xchg
jne
(bad)
jb
add
jle
mov
push
icebp
xchg
cmp
mov
dec
push
pop
std
push
fimul
arpl
mov
shr
xchg
stos
in
fsub
sbb
in
dec
cmp
out
(bad)
mov
pop
or
les
out
push
xchg
(bad)
mov
xchg
mov
xor
int
mov
and
ror
mov
loopne
fimul
daa
idiv
sti
ror
mov
pop
push
imul
xchg
mov
sub
and
mov
mov
jecxz
ficomp
(bad)
outs
inc
push
or
inc
xor
lds
xchg
cli
sub
clc
sub
push
ja
fmulp
adc
xchg
mov
iret
inc
rcl
inc
add
enter
sahf
loopne
fist
dec
or
inc
xchg
mov
data16
push
push
js
into
xor
adc
push
stos
cmps
pop
jg
test
add
rcr
sbb
cmp
movlps
xor
ret
pop
dec
sar
add
jmp
jle
cmp
push
test
das
fidiv
test
das
shl
daa
scas
push
mov
out
adc
jge
rol
js
inc
repz
xchg
mov
jb
not
(bad)
sub
or
cmp
or
push
pop
std
xor
push
(bad)
loop
aas
mov
fisub
das
pop
out
mov
jecxz
xchg
ins
cmp
out
jno
jo
daa
adc
cmp
leave
sub
jno
mov
jg
sub
xchg
push
jp
cmp
sbb
mul
jge
mov
xlat
pusha
enter
mov
bound
push
leave
mov
in
mov
aad
cwde
mov
adc
xor
push
fsqrt
xor
sub
clc
cmp
call
mov
out
mov
daa
sbb
or
xor
xor
jne
push
cmps
hlt
adc
mov
mov
jg
das
enter
fwait
dec
cmp
pop
int3
jb
fdiv
pop
call
xor
loope
inc
data16
jl
push
or
xchg
in
in
xchg
or
stos
adc
push
cmp
lock
loope
rcr
call
gs
fs
sbb
xchg
inc
data16
retf
pop
pop
jnp
aam
bnd
mov
xchg
mov
dec
push
mov
movs
and
mov
clc
mov
and
dec
fbstp
mov
and
fwait
loopne
jge
xchg
mov
nop
cmp
and
dec
add
xlat
inc
(bad)
sar
xor
xchg
push
cmp
sub
pushf
fmul
outs
dec
dec
pop
out
fs
mov
out
aaa
cmps
loope
xor
cmp
out
mov
cdq
imul
out
sbb
and
jl
daa
mov
jle
jb
call
push
pop
adc
jbe
fsubp
mov
cmp
jbe
stos
xchg
aas
and
mov
addr16
dec
mov
dec
dec
repnz
loop
mov
pop
or
dec
xchg
inc
jg
in
sti
jb
dec
imul
mov
into
pop
mov
scas
fnclex
sbb
(bad)
push
xor
mov
push
cvtps2pi
call
jne
mov
push
pop
mov
push
test
xor
(bad)
jno
lds
dec
and
pop
sbb
push
xchg
pop
je
(bad)
(bad)
cmp
xchg
mov
inc
pop
push
mov
cmp
cmp
mov
icebp
loopne
in
jae
ror
(bad)
mov
ins
popf
pop
push
push
and
fcom
(bad)
imul
(bad)
adc
mov
test
jge
enter
js
aad
push
ins
ret
mov
pop
dec
xor
pop
mov
push
arpl
loop
mov
pop
cmps
xor
sub
inc
and
fisttp
sub
xor
sti
hlt
xor
inc
push
stos
push
repz
mov
xchg
mov
xchg
dec
ret
int
(bad)
sbb
xchg
pop
push
mov
retf
dec
mov
(bad)
sub
mov
inc
jns
sub
xchg
pop
(bad)
mov
(bad)
test
popa
ins
dec
pop
push
cli
(bad)
call
push
aaa
ja
(bad)
jecxz
dec
test
adc
std
fadd
mov
cmp
imul
mov
stos
add
add
int3
inc
sbb
ss
or
outs
call
ins
scas
sub
mov
jmp
jecxz
rcr
sub
dec
mov
mov
outs
ins
or
mov
push
outs
push
fucomp
jle
(bad)
out
sub
dec
push
push
in
or
xor
mov
aaa
iret
add
out
aam
jge
add
sbb
sbb
adc
iret
jb
dec
jp
push
push
fs
add
sbb
addr16
jmp
and
rcl
cwde
outs
(bad)
sar
jmp
repz
in
clc
bound
jecxz
jl
icebp
jmp
shl
and
adc
push
sbb
lods
fld
xor
das
mov
in
loop
xchg
pop
pop
mov
adc
std
jns
shl
sub
push
xor
div
and
int
jg
sbb
lahf
test
mov
and
rcr
pop
bound
stos
fs
and
mov
add
fist
paddsw
pop
push
sbb
cmp
sbb
jg
fcom
test
neg
pop
xchg
inc
push
les
jb
or
inc
inc
mov
imul
ins
mov
xchg
mov
inc
xor
sub
push
inc
xor
retf
jmp
cmp
adc
(bad)
mov
mov
adc
mov
imul
mov
push
imul
mov
addr16
pop
pop
jnp
(bad)
in
jmp
(bad)
dec
dec
test
inc
movs
pop
repnz
dec
lea
sbb
xchg
out
out
and
ins
scas
hlt
mov
leave
ds
rcr
fcom
push
js
xchg
mov
outs
out
int3
data16
loop
(bad)
dec
std
jmp
cdq
sub
fadd
mov
add
(bad)
jmp
adc
adc
cmp
out
pop
xchg
push
leave
xchg
stos
jmp
fnstenv
push
cmp
mov
rcl
xchg
into
fs
cmps
xchg
scas
inc
mov
dec
int
sahf
cmp
adc
adc
shl
test
aam
leave
lods
jmp
adc
enter
xor
push
fs
scas
adc
test
sub
push
mov
(bad)
cdq
dec
(bad)
xchg
ins
fs
xchg
or
sub
jb
cmp
cmp
or
test
sti
(bad)
int
repz
adc
inc
sub
(bad)
jns
pop
sbb
jae
loope
jb
or
out
cli
inc
mov
sub
mov
cmp
dec
dec
or
stos
pop
push
fmulp
stos
mov
mov
fimul
push
imul
pop
adc
fld
add
rol
stc
cld
jno
cmc
mov
aas
sub
sub
(bad)
lods
cdq
mov
xchg
dec
xor
dec
push
xor
xor
add
jae
sbb
add
out
add
dec
xor
cmp
inc
cmps
lahf
dec
xchg
loope
icebp
add
jp
xor
xor
pop
movs
sbb
in
mov
sbb
psubusb
mov
aas
call
ins
mov
stc
stos
add
and
pop
pushf
push
loopne
xor
cs
cmc
das
lahf
pop
pop
cmp
pop
fild
ins
push
scas
or
in
adc
cdq
scas
scas
push
iret
xor
push
pop
aas
hlt
clc
mov
repnz
mov
cmps
lds
bound
mov
mov
mov
or
mov
cmp
sahf
sub
(bad)
hlt
pop
dec
addr16
ds
jp
xchg
arpl
in
fsub
nop
jecxz
cmp
pop
mov
inc
retf
mov
pop
iret
and
mov
data16
mov
push
sbb
cmp
mov
outs
pop
enter
sub
pusha
ja
or
ins
in
sbb
in
test
add
mov
mov
ret
xchg
xchg
mov
pop
ret
mov
push
(bad)
adc
cmp
imul
xchg
mov
and
mov
pop
mov
scas
adc
data16
xchg
leave
xlat
pop
jno
mov
test
xchg
jmp
pop
movs
ins
fwait
jecxz
xchg
adc
add
fiadd
inc
mov
sub
xchg
int3
adc
xor
xor
add
shl
cld
bound
repz
pop
adc
js
stc
stos
fld
jae
and
out
cmp
dec
ror
jno
mov
stc
ret
fisub
cli
cmps
aad
in
add
mov
rep
shr
(bad)
push
cwde
out
or
dec
adc
sub
or
mov
cmc
repnz
xchg
stos
fst
mov
retf
mov
je
fwait
lock
mov
dec
mov
ret
xor
ret
jmp
aam
jo
jo
movs
les
mov
sti
pop
arpl
sub
and
cmp
lds
je
int3
call
stos
push
cmc
nop
js
pop
sbb
xlat
repnz
sbb
mov
(bad)
repnz
je
or
shl
sbb
ja
mov
jmp
lods
and
fwait
addr16
iret
jecxz
mov
fmul
add
mov
mov
dec
xor
fld
jae
test
icebp
cmp
mov
nop
fmul
jae
(bad)
ja
push
sub
inc
xor
fdiv
pop
fnstenv
cmp
push
sub
lahf
repz
jl
out
push
cmp
inc
sub
ds
dec
fwait
jo
adc
lock
in
mov
std
inc
pusha
push
dec
pop
add
les
fisttp
(bad)
fwait
mov
mov
pop
aad
das
inc
add
inc
cmp
or
jb
xchg
push
adc
and
imul
xor
xchg
fdivr
pop
out
dec
ror
push
pop
stos
jecxz
xchg
mov
aad
ds
cmp
lock
iret
lock
push
imul
int3
ss
cmp
out
mov
mov
retf
hlt
mov
das
jmp
or
xchg
in
inc
and
xchg
sub
arpl
(bad)
mov
xchg
out
push
test
lock
inc
xor
sbb
setbe
call
fs
inc
pop
fistp
and
dec
jecxz
test
mov
jecxz
fstp
scas
shl
xchg
dec
std
sahf
rol
out
stos
out
mov
adc
sahf
movs
stos
cmp
mov
pop
mov
jmp
sub
jge
push
cmp
out
mov
sub
push
inc
sub
pop
pop
aad
add
enter
cwde
retf
fdiv
xchg
and
scas
je
jmp
popf
dec
and
in
movs
leave
pop
sbb
stos
mov
cs
pop
shld
adc
push
add
ss
es
jecxz
fmul
in
inc
test
mov
xor
stos
cmps
xchg
movs
inc
mov
fs
dec
adc
pop
lds
retf
sub
mov
je
sub
scas
push
push
sar
test
ja
adc
xchg
xor
loopne
adc
sbb
lahf
jg
adc
jmp
inc
and
outs
repz
mov
test
out
mov
jg
mov
neg
mov
inc
dec
nop
mov
mov
lods
lods
dec
xchg
cmp
xchg
into
push
mov
push
mov
dec
xchg
adc
ds
jb
inc
out
data16
dec
xor
xor
sbb
mov
inc
xchg
xlat
mov
daa
and
jo
(bad)
mov
pop
data16
aam
xchg
sbb
out
mov
sbb
inc
dec
jp
jl
les
movs
mov
xor
cmp
stos
les
(bad)
inc
mov
int
mul
lock
stos
scas
xchg
mov
push
hlt
mov
rol
jne
iret
retf
sub
mov
pop
idiv
xor
popf
repz
icebp
cmp
xchg
fiadd
pop
mov
mov
enter
xchg
cmps
jmp
cmp
int
jo
sahf
imul
mov
jg
push
and
inc
mov
xchg
retf
adc
or
(bad)
aam
dec
and
leave
shl
xchg
scas
push
dec
movs
stos
jle
daa
inc
in
pusha
jmp
outs
adc
push
arpl
adc
xchg
or
sub
push
push
xchg
mul
(bad)
retf
sti
mov
mov
hlt
clc
aam
popf
push
aaa
xchg
xlat
sbb
ss
call
mov
out
cmp
rcr
js
push
jb
pop
mov
jl
dec
jge
inc
icebp
ins
adc
fisubr
jmp
mov
dec
xchg
dec
(bad)
xchg
lods
mov
sub
mov
xchg
leave
aas
pop
jg
mov
mov
int
pop
cli
je
aaa
outs
jge
popa
dec
and
mov
addr16
dec
mov
(bad)
jbe
or
or
je
jp
ret
sbb
jno
lea
mov
pop
fdecstp
stos
retf
cli
push
or
jne
lahf
jno
aaa
or
pop
ins
aas
into
or
rol
push
sbb
fidiv
popf
(bad)
lods
repnz
xor
icebp
xchg
and
or
es
into
and
mov
mov
adc
test
and
xor
xor
dec
mov
or
clc
add
jo
mov
jg
sbb
dec
pop
mov
aaa
pop
inc
and
mov
dec
jmp
cmp
xchg
int
push
jo
outs
(bad)
hlt
add
out
sbb
fbstp
sbb
push
jl
sub
popa
sub
fcomp
and
inc
js
sub
(bad)
cmp
push
in
outs
int
cmp
inc
dec
test
ss
or
add
addr16
pusha
movs
inc
xchg
cmp
sahf
cmps
adc
sub
dec
(bad)
cli
movs
aad
sbb
sbb
cld
leave
dec
pop
dec
stos
test
add
fisub
daa
movs
adc
dec
and
jo
dec
inc
xchg
pop
xor
cmp
jmp
pop
stos
pop
dec
mov
addr16
shr
das
mov
mov
call
add
mov
sub
out
sub
into
mov
xchg
mov
dec
pop
xor
xchg
push
mov
stos
mov
dec
std
and
push
jge
inc
ret
test
scas
or
cld
frstor
xor
push
aas
hlt
lea
pusha
cmps
xor
push
xor
or
bound
popa
sti
mov
pop
sbb
pop
arpl
in
(bad)
adc
lahf
nop
adc
lods
cmp
(bad)
or
movs
ins
jne
push
xchg
jle
pop
pop
arpl
cmps
sub
cmc
push
sti
pop
dec
mov
movs
fcmovbe
pop
(bad)
push
jmp
add
(bad)
in
outs
push
rol
scas
xchg
sbb
fdiv
inc
jo
cwde
sbb
sub
mov
add
inc
lock
adc
adc
xor
push
and
push
rcl
fwait
stc
push
and
push
sub
lock
jns
push
call
mov
push
push
adc
aas
test
push
enter
in
ror
shl
fisttp
nop
jp
lds
mov
add
ror
sbb
fist
mov
jmp
cld
aaa
in
xor
pop
mov
pop
sbb
(bad)
data16
adc
jg
mov
sub
sub
addr16
mov
mov
dec
jl
adc
fisttp
jecxz
inc
jbe
popf
xor
jmp
ins
mov
fwait
mov
adc
mov
mov
sbb
cmp
push
push
sub
ret
test
test
lock
(bad)
mov
mov
mov
xchg
mov
test
mov
icebp
xchg
pop
in
adc
inc
loopne
sti
shl
push
ds
rcr
sub
and
push
(bad)
loopne
gs
mov
lods
into
outs
xchg
dec
mov
scas
ret
sti
sbb
inc
mov
cmp
adc
scas
pop
pop
or
push
and
mov
out
(bad)
dec
xor
fsub
ja
test
out
jnp
stos
mov
xor
je
cmc
test
mov
fstp
in
retf
cdq
xchg
lods
out
iret
ja
imul
dec
cmp
sub
pop
shl
in
popa
mov
xchg
fstp
mov
lock
pop
cmp
xchg
jmp
adc
cs
stc
jp
pop
arpl
push
mov
aam
pop
sbb
jmp
js
shr
mov
into
popa
ds
sub
xor
ins
pop
or
cmp
dec
xchg
cmp
mov
cmps
cmp
cmp
xor
jb
cmps
and
push
xchg
shl
adc
cwde
lock
cmp
sub
cmp
push
push
retf
add
and
sbb
jmp
shl
push
mov
loopne
mov
jecxz
loop
and
sahf
retf
and
mov
and
pop
jnp
inc
sub
jmp
xor
popa
retf
add
push
mov
out
scas
fadd
mov
addr16
mov
pop
jl
dec
jo
pop
sar
es
js
push
hlt
das
mov
lea
jne
je
lds
push
jp
pop
(bad)
pop
outs
xor
fld
pusha
jns
jmp
std
jns
pop
sub
or
add
xor
or
dec
out
clc
or
fidiv
cmp
xor
int
mov
repz
pop
repz
movs
(bad)
push
mov
sub
sti
stos
data16
lock
sbb
(bad)
fisub
jns
cmovs
and
xor
push
pop
arpl
jle
icebp
aaa
and
cmp
out
aam
or
jno
add
adc
jmp
es
mov
cmp
mov
adc
jmp
lds
add
pop
push
or
dec
inc
inc
daa
aaa
mov
jg
loop
(bad)
sbb
aad
mov
rol
adc
fwait
lock
cmc
mov
jp
add
pop
int3
push
mov
je
(bad)
retf
mov
pop
(bad)
clc
mov
scas
jo
inc
fdivr
test
adc
push
inc
cwde
icebp
jmp
dec
sbb
pop
or
push
jnp
gs
pop
aas
jg
xor
lock
mov
cdq
ret
push
in
ret
push
lods
dec
xor
sub
push
(bad)
not
adc
push
jg
adc
(bad)
jnp
mov
les
push
(bad)
dec
adc
dec
mov
xor
iret
movs
adc
lods
xor
adc
loope
push
leave
push
lahf
popa
sbb
aad
rol
in
(bad)
fst
fcom
xchg
mov
retf
cmps
cdq
push
aad
bound
push
or
xchg
(bad)
push
jo
stc
fidivr
int3
mov
ins
xlat
mov
fcmovnbe
retf
xchg
fsub
call
push
jp
add
xchg
jl
xchg
sbb
jmp
(bad)
sbb
push
or
push
dec
cmp
xor
pop
mov
sti
mov
pop
inc
xchg
jno
jmp
mov
xchg
test
and
pop
mov
adc
push
xchg
pop
mov
cmp
add
push
mov
lds
stc
adc
(bad)
pop
jno
xor
inc
sub
cs
sub
loopne
(bad)
call
inc
xlat
fs
sub
ds
sbb
int
mov
jle
(bad)
(bad)
jl
mov
rcl
jmp
imul
sub
(bad)
mov
js
add
mov
hlt
(bad)
in
addr16
cmp
lea
pop
aaa
pop
icebp
xchg
and
lahf
bound
push
int3
pop
push
push
add
xchg
xchg
jge
xor
ret
rcl
add
popf
ss
and
sub
add
mov
push
sbb
movs
sub
xrelease
jb
xchg
into
aam
xlat
aaa
dec
inc
popa
fld
int3
pop
int3
ret
das
daa
jg
cli
std
pop
adc
pop
daa
test
loopne
xchg
lock
pop
aas
sar
jmp
aad
movs
and
pop
movs
sbb
test
add
mov
xor
inc
cs
sbb
ss
mov
bnd
xor
push
div
ins
out
xchg
or
mov
aas
out
retf
xor
jmp
mov
push
test
stc
ret
scas
icebp
ins
xchg
ret
je
xchg
xor
mov
dec
jns
pop
fiadd
adc
cld
dec
jle
and
cwde
inc
xor
iret
inc
adc
fs
fmul
or
out
(bad)
loope
xor
ret
test
fcom
out
mov
jl
push
dec
mov
or
inc
hlt
push
jmp
std
cld
leave
mov
xor
addr16
je
inc
test
and
jb
dec
ins
mov
leave
movs
jmp
dec
out
xor
out
jb
adc
inc
sub
mov
jle
leave
adc
fwait
cmp
imul
mov
repz
xor
aaa
(bad)
std
shl
out
inc
in
stos
push
shl
popf
nop
inc
(bad)
jmp
cmp
mov
sbb
sub
jmp
popa
fidivr
cld
stos
cdq
jp
or
movs
pusha
pop
mov
or
movs
out
xor
push
and
loopne
fld
cwde
jp
in
enter
mov
push
repnz
inc
and
xor
or
dec
push
lea
ins
jnp
je
retf
xchg
movs
pop
ds
push
lahf
dec
cmc
ret
(bad)
je
cmp
mov
xchg
push
dec
repnz
fistp
test
aad
movs
dec
sbb
mov
stos
xchg
test
fistp
mov
adc
inc
js
outs
vcvtps2dq
enter
gs
adc
daa
rol
cmc
fwait
jg
cmps
aad
addr16
lods
sub
adc
xor
push
fnstsw
inc
repz
(bad)
cs
and
xor
arpl
dec
repz
(bad)
xchg
mov
sti
cmps
push
push
sub
jmp
lds
in
xchg
popa
inc
aad
jb
sub
outs
test
sub
sub
out
xchg
test
dec
fimul
inc
mov
shl
xor
dec
xchg
jb
inc
stos
fidiv
dec
pop
jo
sub
stos
mov
push
shl
cmp
and
retf
pop
repnz
inc
and
mov
sbb
call
mov
dec
cmp
test
setno
mov
inc
ss
dec
sub
movs
test
mov
es
xchg
(bad)
mov
add
mov
cmp
jb
push
dec
xor
push
adc
fwait
inc
add
jmp
inc
jns
gs
xor
cmp
cmp
je
xor
jle
adc
dec
xchg
jb
out
aam
movs
call
aam
and
fbld
lds
xor
add
cwde
xchg
ins
xor
adc
fldcw
loope
data16
or
fcomi
inc
es
aam
mov
dec
mov
jae
xor
or
fimul
adc
in
dec
cmp
dec
mov
pop
scas
and
jl
shr
fxch
xchg
mov
mov
out
add
push
pop
fs
add
or
mov
xor
sti
ficomp
jmp
mov
dec
enter
adc
add
jmp
add
cld
adc
dec
cmc
sub
inc
in
in
xchg
dec
repnz
retf
pop
sbb
jle
adc
cmp
test
pop
popf
daa
and
xchg
push
xchg
clc
mov
out
test
cmc
test
push
scas
in
icebp
loope
xor
inc
pop
inc
dec
movs
and
adc
sar
(bad)
adc
fisttp
add
push
push
and
ficomp
imul
(bad)
test
xchg
retf
jmp
xor
pusha
mov
mov
sar
cmp
out
add
outs
pop
rcr
jo
aaa
jl
in
dec
mov
push
and
fsubp
xchg
hlt
sub
test
cmps
cmp
inc
js
pop
ins
fdiv
xchg
cmc
outs
inc
data16
cmp
test
jle
call
stos
out
aas
mov
loope
int3
test
add
adc
pop
mov
das
fimul
sub
pop
jb
(bad)
loopne
aas
xlat
popa
xlat
push
pusha
out
push
inc
dec
in
mov
das
fidivr
mov
mov
test
out
fmul
out
imul
pop
push
xlat
mov
push
sar
cmps
scas
iret
pop
jecxz
pop
out
inc
ret
sub
push
adc
ins
(bad)
test
pusha
cmp
(bad)
pop
and
call
lods
sbb
rcl
adc
sbb
adc
fsub
dec
mov
daa
or
repz
test
ds
xchg
and
inc
sbb
pusha
xchg
data16
shl
into
adc
rcl
and
movs
cmp
outs
mov
push
push
or
nop
dec
sub
in
xchg
xlat
dec
push
sub
and
mul
xor
out
ja
lods
daa
fwait
jnp
jns
fimul
jle
sbb
fwait
push
push
sub
jno
dec
xchg
sub
jns
(bad)
test
mov
test
sub
fwait
pop
imul
(bad)
xor
sub
sbb
lods
dec
or
xchg
xchg
jns
cmp
call
adc
aam
push
inc
scas
lods
or
cli
test
sub
mov
add
jmp
mov
lea
cmp
sub
inc
mov
push
sub
xchg
xor
or
gs
rcl
and
sahf
inc
hlt
in
sbb
xchg
(bad)
jb
dec
ins
xlat
fild
sbb
popf
xchg
sbb
stos
adc
das
jmp
leave
cmp
cmc
jnp
shl
sub
adc
cmp
in
sub
call
je
sti
ins
sub
or
test
mov
jbe
or
dec
outs
dec
ja
and
frstor
inc
jmp
ins
fldcw
stos
xchg
shl
jo
ds
cdq
lock
mov
pop
(bad)
jle
mov
into
out
aam
in
and
pop
scas
adc
mov
jns
inc
out
outs
out
je
gs
ds
push
enter
int3
cmovs
fcomp
fld
mov
je
xchg
and
sahf
push
mov
lock
mov
mov
sahf
sbb
cmp
movs
std
xchg
pop
leave
push
xchg
mov
scas
arpl
pusha
xor
les
xchg
jnp
cmp
pop
push
cmp
sub
xchg
ret
mov
fwait
das
in
add
cmc
(bad)
mov
frstor
loopne
mov
inc
loope
jns
inc
rcl
xor
stc
das
clc
mov
nop
loope
dec
xchg
ret
dec
pusha
jp
call
dec
adc
mov
jbe
es
(bad)
ror
push
aas
cmp
mov
add
frstor
adc
dec
dec
gs
and
pop
xor
jle
add
push
mov
add
adc
and
fst
fdivr
call
loope
test
lahf
inc
ror
verw
add
mov
or
inc
jo
push
lods
hlt
test
movs
push
pop
xchg
cld
mov
imul
cmps
repnz
sbb
cmc
call
add
jbe
sbb
jecxz
add
and
ins
icebp
mov
ror
(bad)
mov
jl
or
imul
push
in
pop
inc
push
add
mov
cmp
jbe
xchg
add
push
sti
loop
popf
cmps
cmps
or
adc
loop
lods
inc
pushf
pop
mov
sbb
es
push
xor
xor
call
jno
dec
cmc
aas
mov
sbb
pop
test
or
retf
jae
sub
ja
xchg
jp
(bad)
cwde
pop
sub
jne
lods
shl
jae
in
sar
xchg
leave
adc
cdq
and
lods
es
test
mov
mov
mov
jmp
push
and
out
push
xchg
(bad)
adc
rcr
or
imul
jmp
imul
daa
lock
xchg
fwait
pop
sub
aaa
jo
popa
sub
cwde
test
jecxz
ror
lea
dec
cmp
mov
(bad)
jbe
out
sbb
adc
ins
jmp
sub
mul
movs
das
pop
fwait
mov
fisubr
(bad)
jg
dec
jle
mov
jne
dec
sahf
mov
xlat
adc
shl
aaa
mov
aad
mov
sahf
sbb
mov
icebp
pop
jae
into
jnp
jmp
mov
(bad)
mov
or
pusha
js
pop
xchg
rcr
nop
adc
mov
fisttp
pop
icebp
lock
jb
in
inc
sub
sbb
int
sbb
and
jmp
cmps
rcl
popa
inc
jnp
mov
and
dec
mov
pop
xor
push
push
adc
icebp
frstor
and
clc
shl
xor
fidivr
in
add
call
adc
leave
or
rol
inc
dec
or
push
ins
xor
enter
inc
aam
sbb
jae
mov
dec
jae
scas
xor
imul
or
movs
xor
xlat
(bad)
jmp
xchg
sahf
adc
jo
pop
adc
pop
iret
push
and
clc
sbb
call
icebp
or
mov
mov
push
stos
and
adc
dec
stc
jmp
stos
cdq
mov
pusha
daa
imul
fisttp
std
pop
jle
pop
fmul
ss
movs
not
xor
icebp
fcom
cmps
retf
test
jnp
pushf
es
and
push
lods
push
imul
pop
jne
sti
out
xor
mov
xchg
mov
imul
loope
(bad)
div
mov
lods
fld
or
sbb
adc
mov
jge
enter
clc
cmps
push
pushf
or
repnz
imul
cli
imul
cmp
jp
in
or
pop
dec
pop
sub
bound
test
xchg
lahf
jg
into
pop
das
bnd
shr
mov
inc
out
repnz
push
mov
shl
mov
jmp
inc
xchg
into
pusha
retf
jp
xchg
popf
xchg
jecxz
arpl
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jge
add
jle
add
add
scas
add
and
jb
outs
addr16
add
add
add
adc
add
and
dec
inc
add
add
daa
add
and
outs
bound
add
mov
add
lods
add
add
push
push
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
inc
add
ja
add
fld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
das
add
add
das
add
add
das
add
add
das
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
das
add
add
jb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
aaa
add
ds
inc
add
dec
add
pop
add
addr16
je
das
add
add
mov
mov
das
add
add
add
add
add
fld
in
das
add
add
add
sti
add
add
das
add
add
push
das
add
add
push
das
add
add
push
xor
push
xor
push
pop
push
push
add
pop
push
push
add
add
add
add
add
add
add
add
push
xor
push
xor
push
xor
push
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
inc
add
add
pop
inc
add
add
pop
inc
add
add
or
add
add
inc
add
add
add
das
add
add
add
add
das
add
add
das
add
add
add
add
add
or
or
add
or
or
add
or
or
add
or
or
add
add
sub
push
add
loopne
push
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
add
or
add
cmp
push
add
lahf
or
or
add
add
or
or
add
or
or
add
or
or
add
or
or
add
add
cmp
push
add
cmp
push
add
cmp
push
add
js
push
add
add
add
lods
or
push
add
add
or
or
add
or
or
add
or
or
add
or
or
add
cmp
push
add
or
or
add
or
or
add
or
or
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
add
add
add
add
or
add
add
or
or
add
or
inc
or
pop
or
jl
and
test
push
add
or
fimul
jecxz
test
push
add
or
test
push
test
push
add
push
test
push
add
test
push
add
push
das
add
add
das
add
add
das
add
add
das
add
add
xchg
push
push
add
add
add
push
xchg
push
push
add
push
xchg
push
push
add
push
pop
clts
add
movaps
push
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
add
add
add
add
add
comiss
push
add
pmulhw
push
add
psubw
push
add
adc
femms
add
adc
femms
add
adc
femms
add
stc
femms
add
stc
femms
add
stc
clts
add
in
push
add
adc
add
add
add
add
add
adc
push
add
adc
push
add
adc
push
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
das
add
add
das
add
add
adc
add
add
adc
add
add
adc
add
add
adc
or
cmp
and
or
dec
adc
or
pop
adc
or
ins
adc
adc
adc
add
add
add
add
add
add
add
add
add
adc
(bad)
adc
adc
add
adc
add
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
(bad)
adc
ltr
add
add
add
adc
adc
sbb
add
adc
xchg
adc
adc
add
adc
add
add
xor
add
add
adc
adc
add
adc
add
add
add
add
add
adc
adc
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
jbe
push
add
add
add
add
pop
add
add
add
adc
adc
add
adc
adc
add
add
add
(bad)
adc
add
adc
adc
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
cmps
add
mov
(bad)
adc
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
mov
mov
add
adc
mov
retf
add
adc
mov
int3
add
adc
mov
rol
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
push
add
icebp
add
add
add
xor
add
add
push
add
icebp
add
add
add
add
add
(bad)
adc
add
push
add
icebp
add
add
add
push
add
icebp
add
add
add
add
add
push
xlat
push
xor
add
push
add
icebp
add
add
add
add
add
pop
xlat
push
push
add
add
add
adc
adc
xlat
push
xor
add
add
add
pop
xlat
push
or
ret
add
add
add
add
pop
xlat
push
push
add
add
add
xlat
push
xor
add
pop
xlat
push
xor
add
add
add
(bad)
adc
add
add
add
xlat
push
adc
int
inc
add
add
add
add
add
add
xlat
push
xor
add
add
add
pop
xlat
push
and
add
add
add
pop
xlat
push
and
add
add
add
pop
xlat
push
xor
add
add
add
pop
add
or
loope
add
add
add
xlat
push
sbb
add
add
add
sbb
push
sbb
add
add
add
xlat
push
or
out
add
add
xlat
push
xor
add
add
add
xlat
push
or
test
add
jp
(bad)
adc
add
add
add
or
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
sbb
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
(bad)
adc
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
add
sbb
add
add
add
add
add
sbb
adc
add
add
add
sbb
adc
cmp
ins
add
add
add
add
add
add
add
or
cmp
add
add
add
xchg
add
adc
mov
add
xchg
add
sbb
add
add
scas
add
sbb
add
add
scas
add
sbb
add
add
add
add
sbb
adc
add
sbb
adc
add
add
add
(bad)
adc
add
mov
add
add
mov
add
add
or
or
sbb
add
add
add
add
sbb
add
add
add
sbb
xchg
add
add
add
add
sbb
cwde
add
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
add
add
add
sbb
mov
add
add
add
sbb
mov
add
add
push
(bad)
adc
add
add
add
add
add
add
adc
inc
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
adc
scas
push
add
xor
add
add
add
push
add
xor
add
add
add
push
add
xor
add
add
add
add
add
add
adc
aaa
pop
add
xor
add
add
add
(bad)
adc
add
add
add
add
xor
add
add
add
add
add
add
adc
mov
add
add
xor
call
add
and
add
sub
inc
add
dec
and
add
jo
inc
add
push
dec
and
push
adc
add
jns
js
push
sbb
mov
add
and
add
add
nop
add
and
nop
add
add
add
add
ja
add
add
and
and
and
add
add
inc
add
add
mov
and
add
add
add
and
add
add
and
add
add
and
xor
push
and
jne
mov
and
mov
add
and
std
and
pop
es
es
add
inc
add
add
add
add
es
add
es
add
add
add
daa
mov
daa
add
add
inc
add
add
add
add
daa
add
add
daa
inc
add
add
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
adc
sub
add
mov
sub
add
add
add
add
sub
sub
add
add
sub
adc
cmp
add
mov
sub
add
add
add
sub
sub
sub
add
add
sub
adc
dec
sub
sub
sub
add
add
add
sub
sub
sub
add
add
sub
add
add
add
add
add
add
add
sub
add
add
sub
add
push
dec
and
push
sub
shr
in
add
repz
in
add
adc
xor
in
add
pop
xor
add
jnp
in
add
popf
xor
add
mov
and
in
add
add
in
add
and
add
add
imul
mov
in
add
lods
xor
add
add
xor
xor
icebp
xor
add
add
xor
add
push
dec
and
push
and
add
mov
ins
add
stos
xor
push
or
ins
add
out
xor
add
mov
add
xor
add
add
xor
add
add
xor
inc
add
jne
xor
xor
add
add
add
inc
add
add
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
sub
add
add
add
add
add
jne
xor
xchg
cmp
add
mov
add
xlat
cmp
add
stc
cmp
cmp
add
cmp
add
add
lds
adc
mov
add
add
aas
jne
xor
cmc
aas
jne
xor
pop
inc
add
add
lock
add
add
inc
jne
xor
jecxz
repz
add
add
clc
add
scas
inc
add
rol
add
repz
adc
add
push
inc
add
jns
ins
add
add
push
add
add
push
add
add
add
add
inc
inc
add
add
dec
inc
add
add
dec
mov
dec
add
add
add
dec
repz
add
repz
add
add
add
dec
repz
push
dec
and
push
add
movs
dec
and
push
add
and
push
sub
and
push
or
and
push
sub
loope
imul
nop
add
add
add
add
dec
push
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
xor
dec
cmp
add
add
inc
add
add
inc
add
inc
add
jne
add
xlat
push
add
dec
add
dec
add
push
add
push
add
jo
add
in
add
add
push
lahf
add
movs
add
cmps
add
lock
add
add
push
movs
add
mov
add
andnps
push
jne
add
push
push
mov
and
push
xor
mov
push
adc
mov
push
cmp
mov
push
sbb
add
mov
push
sbb
rcr
push
and
mov
push
add
add
mov
push
or
add
mov
push
sub
add
jne
push
and
test
xor
mov
add
pop
jne
add
(bad)
pop
and
add
and
push
push
dec
and
push
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
jne
push
cmp
push
add
mov
pop
mov
and
push
and
dec
pop
mov
or
add
pop
mov
dec
mov
and
push
add
ret
push
push
sbb
xor
gs
enter
xor
add
add
mov
pop
rol
add
test
add
pop
ret
push
add
in
pop
movs
add
jne
add
retf
push
movs
add
mov
push
fild
push
push
dec
and
push
add
push
push
adc
push
push
cmp
ror
fild
push
add
fild
push
sub
fild
push
or
push
and
iret
bound
add
add
bound
and
adc
add
add
add
mov
push
jbe
add
ins
fs
adc
mov
push
add
add
ins
add
add
ins
movs
add
movs
add
movs
add
add
add
outs
add
add
outs
add
add
jo
add
add
add
add
add
add
dec
and
push
cmp
or
sbb
dec
and
push
cmp
je
or
add
(bad)
push
and
(bad)
push
add
push
and
or
or
stos
jne
or
or
(bad)
xor
out
jne
add
push
dec
and
push
or
or
jmp
jp
or
or
push
jp
or
or
xchg
jp
or
or
fdivr
or
or
cli
jp
or
or
ds
or
jne
push
and
or
jg
push
and
jnp
or
jg
push
or
jg
push
sub
or
jg
push
xor
or
jg
push
xor
jl
or
jg
push
sbb
jg
push
add
pop
jge
or
test
test
test
test
test
add
stc
cmp
jg
add
add
add
add
add
(bad)
jg
add
add
jg
add
add
cmp
xor
sub
add
add
add
add
jne
xor
xchg
xor
add
out
mov
add
add
mov
add
add
mov
add
push
mov
add
jbe
jne
add
cwde
mov
add
add
add
mov
add
dec
and
mov
add
add
add
add
add
add
mov
add
in
mov
add
push
lea
add
xor
push
lea
lea
(bad)
repz
add
add
(bad)
repz
add
(bad)
repz
push
dec
and
push
sbb
mov
push
add
push
push
push
dec
and
push
and
push
push
add
mov
mov
mov
(bad)
xchg
push
xor
or
add
add
(bad)
add
add
add
add
add
xchg
(bad)
add
mov
add
stc
cmp
cmp
add
cmp
add
(bad)
nop
add
add
nop
add
add
xchg
xchg
push
add
sub
mov
xchg
mov
xchg
sahf
push
add
xchg
xchg
cmps
push
adc
rol
xchg
mov
xchg
jne
adc
les
out
jne
and
or
sub
dec
xchg
mov
xchg
fmul
adc
nop
xchg
fisttp
adc
mov
loop
xor
and
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
cdq
add
add
lods
add
adc
push
add
add
cdq
and
push
add
call
lock
add
add
call
jne
push
add
inc
add
add
add
add
fwait
jne
adc
adc
add
pushf
add
add
add
fwait
jne
push
add
add
fwait
jne
push
and
add
add
sbb
pop
cmp
add
pusha
and
add
add
add
add
add
add
add
add
and
add
shl
add
add
add
and
add
in
and
add
add
add
add
and
add
add
add
je
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
xchg
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
mov
and
or
int3
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
adc
jl
add
add
add
and
adc
aam
add
add
add
and
adc
sbb
add
add
sbb
and
adc
sub
add
add
mov
and
adc
dec
daa
add
add
xchg
xchg
and
daa
add
add
xchg
sbb
pop
cmp
adc
movs
daa
add
add
xchg
add
sub
je
add
add
xchg
add
sub
fsubr
add
add
xchg
add
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
cs
add
add
dec
add
add
xchg
add
cmp
sbb
aam
add
add
xchg
add
iret
add
add
xchg
add
iret
add
pop
dec
add
add
xchg
add
add
dec
add
add
xchg
add
cs
sbb
add
add
add
add
xchg
add
add
add
add
add
add
push
add
add
xchg
add
jecxz
and
in
add
add
xchg
add
aad
and
or
add
add
xchg
add
add
push
add
add
xchg
sbb
pop
cmp
add
add
add
xchg
add
add
add
add
xchg
add
aaa
add
add
pop
add
add
xchg
add
add
add
pop
add
add
xchg
add
inc
add
js
add
add
xchg
add
add
add
add
add
add
pop
add
add
xchg
add
xor
xor
adc
add
add
xchg
add
xor
add
add
add
xchg
add
xor
cmp
in
add
add
xchg
add
push
add
add
add
add
add
xchg
add
xor
add
add
popa
add
add
xchg
add
xor
add
add
add
add
xchg
add
xchg
add
add
bound
add
add
add
add
arpl
add
add
add
add
arpl
add
add
add
add
add
add
xchg
inc
xor
sub
add
add
test
imul
add
xchg
(bad)
xor
je
add
add
or
aas
add
add
add
pushf
add
add
or
inc
add
add
add
les
add
or
inc
add
add
add
xchg
and
jl
inc
add
add
add
xchg
sbb
pop
cmp
inc
add
add
add
xchg
xchg
and
add
add
xchg
add
add
add
add
xchg
add
add
data16
add
xchg
add
pop
inc
add
add
add
xchg
add
ss
add
inc
data16
add
xchg
add
aaa
cdq
add
adc
add
add
xchg
xchg
and
add
add
xchg
sbb
pop
cmp
dec
add
add
add
xchg
add
cmps
add
test
add
add
add
lock
xchg
sub
lock
sbb
pop
cmp
dec
add
add
add
add
jo
add
add
xchg
add
mov
imul
add
xchg
sbb
pop
cmp
dec
add
imul
add
xchg
xchg
and
imul
add
xchg
add
aaa
mov
imul
add
xchg
add
aaa
mov
imul
add
xchg
add
cmp
dec
add
xchg
add
jno
dec
add
ins
add
add
xchg
add
jno
dec
add
add
add
xchg
add
add
add
add
add
jae
add
add
add
jae
add
add
add
je
add
add
add
je
add
add
add
je
add
add
add
jne
add
add
add
jne
add
add
add
jne
add
add
add
jne
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
ja
add
add
add
js
add
add
add
jp
add
add
add
jp
add
add
add
jp
add
add
add
cld
jl
add
add
dec
add
xchg
ret
ds
dec
add
jg
add
add
add
xor
add
add
test
pop
aas
push
add
push
add
add
xchg
sub
cmps
add
sub
add
add
xchg
dec
aas
cmps
add
mov
xchg
add
fild
dec
add
xchg
add
add
mov
add
add
add
sub
xchg
add
inc
loopne
push
add
add
add
xchg
add
out
push
add
xchg
sbb
pop
cmp
push
add
xchg
add
add
xchg
xchg
and
xchg
add
add
xchg
add
and
add
add
xchg
add
inc
sti
add
or
add
add
xchg
add
add
push
add
add
add
add
test
xchg
add
add
sbb
and
pushf
add
add
add
cmp
dec
pushf
add
add
add
inc
cmps
add
pop
pushf
add
add
add
inc
cmps
add
sbb
pop
inc
int
pop
add
add
inc
dec
add
aam
add
add
test
popf
inc
cmps
add
popf
add
add
test
mov
add
add
inc
push
add
mov
add
add
int3
popf
add
add
add
inc
rol
pop
add
sahf
add
add
les
inc
inc
pop
add
test
add
add
les
imul
lahf
add
add
test
mov
add
cwde
mov
test
lods
inc
add
inc
mov
xchg
iret
inc
cmps
add
lods
mov
add
inc
int
arpl
mov
test
adc
arpl
mov
add
add
test
xor
add
add
add
sbb
and
mov
add
inc
inc
add
pushf
mov
add
inc
int
imul
add
xchg
xchg
and
movs
add
add
xchg
add
inc
jno
imul
add
xchg
add
inc
jno
imul
add
xchg
add
add
xchg
add
inc
jno
imul
add
xchg
add
cmp
imul
add
xchg
xchg
and
add
add
inc
push
add
add
add
add
and
inc
pop
add
add
add
add
and
inc
pop
add
add
add
add
and
inc
data16
add
add
add
and
push
outs
add
add
add
inc
outs
add
add
add
add
and
add
add
add
inc
jle
jae
add
add
add
and
inc
xchg
jne
add
add
add
and
inc
mov
ja
add
add
add
and
inc
xchg
add
movs
cmps
add
add
xchg
add
sahf
add
add
add
add
and
movs
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
ja
cmps
add
add
xchg
xchg
and
lods
add
add
xchg
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
adc
add
add
xchg
das
dec
aad
mov
cmp
test
push
dec
fild
mov
pusha
scas
add
add
xchg
jae
loop
mov
sbb
add
add
xchg
xchg
dec
dec
add
add
add
add
add
add
add
add
xchg
sti
dec
int
lea
ins
mov
add
add
add
add
add
add
add
add
add
dec
cld
add
add
add
add
pop
add
add
mov
dec
pop
add
add
add
add
add
add
add
dec
and
lahf
add
add
add
add
add
das
add
add
mov
dec
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
pop
add
add
add
add
bound
mov
pop
mov
add
add
mov
jo
add
add
mov
dec
outs
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
nop
mov
xchg
test
cmps
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
add
add
add
add
test
mov
add
add
add
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
mov
add
add
add
add
stos
add
add
add
add
add
add
mov
mov
add
xchg
xchg
and
add
add
add
add
add
add
dec
mov
add
add
add
add
lds
int
add
add
add
mov
dec
bound
rol
sbb
xchg
xchg
and
rol
xor
add
add
xchg
push
dec
push
add
add
add
add
xchg
add
rol
rol
enter
add
mov
dec
aad
aam
in
add
add
xchg
jg
fiadd
aad
or
add
loope
(bad)
add
add
add
mov
dec
push
add
add
add
add
and
fadd
xchg
mov
xchg
or
add
xchg
or
add
add
add
add
add
add
add
add
add
add
dec
jmp
fiadd
add
add
add
mov
dec
repz
add
add
add
add
add
bound
in
sar
sbb
add
mov
xchg
xchg
and
add
add
mov
xchg
xchg
and
add
add
xchg
xchg
and
add
add
add
add
add
xchg
push
dec
push
add
add
mov
mov
and
jmp
add
add
add
add
add
add
add
xchg
xchg
and
mov
xchg
xchg
and
add
add
mov
xchg
xor
sub
add
add
add
xchg
inc
dec
xor
add
add
add
add
mov
xchg
add
and
rol
add
xchg
add
add
add
add
add
add
add
add
rol
add
xchg
add
and
repnz
rol
add
xchg
add
and
add
add
add
xchg
add
and
rol
add
xchg
add
and
cmc
add
add
add
xchg
add
and
test
rol
add
xchg
add
and
test
add
xchg
add
and
clc
add
xchg
add
and
stc
add
rol
add
xchg
add
and
add
rol
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
add
enter
add
xchg
add
and
ret
add
xchg
add
and
add
add
xchg
add
dec
test
les
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
push
enter
pushf
lds
add
add
add
add
lds
add
add
add
add
add
add
adc
jo
add
add
mov
push
out
adc
mov
add
add
mov
push
out
add
add
add
add
add
add
push
add
mov
add
xchg
sbb
pop
cmp
pop
add
mov
sbb
add
mov
add
add
add
add
xchg
add
push
adc
add
add
xchg
add
push
pop
add
add
add
xchg
add
push
sub
add
add
xchg
add
add
xchg
add
cmp
add
add
xchg
xchg
and
int3
add
add
xchg
sbb
pop
cmp
and
add
add
add
add
add
add
push
cmps
add
add
int
add
add
add
add
add
sub
mov
add
add
add
sub
fcom
add
add
add
sub
or
add
add
add
sub
rol
add
add
sub
js
add
add
xchg
dec
push
jne
sub
(bad)
rol
add
add
add
add
add
les
sub
add
add
add
add
add
les
xchg
push
xchg
add
add
add
loope
pushf
push
cwde
add
add
add
loope
mov
add
aam
add
add
add
add
add
add
xchg
xchg
and
xor
dec
aam
add
add
add
add
add
add
add
add
add
add
xchg
xchg
and
add
add
add
xchg
jne
retf
add
add
add
xchg
adc
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
(bad)
add
add
add
add
add
aaa
add
fadd
add
add
add
add
fld
add
add
add
add
add
add
aaa
add
add
add
add
add
add
xchg
fist
add
add
add
cmp
in
add
add
add
cmp
mov
add
add
add
fld
add
add
add
add
add
add
cmp
pushf
fiadd
add
add
add
add
add
add
add
add
add
add
cmp
enter
add
add
cmp
add
add
push
cmp
add
add
add
add
out
add
add
add
add
out
add
add
add
add
add
add
aas
add
call
add
aas
add
add
add
add
inc
add
add
add
add
shr
add
add
push
inc
add
add
add
add
inc
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
inc
add
loope
stos
pop
cmps
add
aam
add
add
add
inc
add
in
add
add
xchg
out
pop
cmps
add
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
inc
add
xchg
xchg
and
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
inc
add
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
out
add
add
xchg
inc
pop
xor
dec
add
add
add
xchg
pop
pop
cmp
dec
add
add
push
dec
add
out
add
add
xchg
test
dec
add
out
add
add
xchg
test
dec
add
lock
add
add
dec
add
add
dec
add
add
add
add
repnz
add
add
push
add
repz
add
add
push
add
add
add
add
push
add
add
push
add
add
add
add
add
add
pop
add
add
add
xchg
mov
jl
pop
add
add
add
add
add
test
add
pop
out
bound
call
add
push
add
add
push
add
add
add
add
add
add
push
ins
add
cld
add
add
add
outs
add
std
add
add
add
jo
enter
add
xchg
xchg
and
push
jb
xchg
inc
add
add
add
test
or
pusha
jmp
jae
rol
or
repz
jae
fs
add
add
xchg
mov
push
jae
js
add
add
xchg
xchg
pusha
inc
jae
mov
add
add
xchg
cmps
pusha
push
add
push
add
add
xchg
mov
or
add
push
add
add
xchg
jne
retf
add
add
add
xchg
(bad)
pusha
call
pop
add
add
xchg
aam
retf
add
add
add
xchg
jecxz
call
pop
add
add
xchg
repnz
int
ja
mov
add
add
xchg
add
add
mov
add
add
add
add
add
jns
cmp
add
add
add
jns
pop
or
add
add
add
je
add
add
xchg
out
pop
cmps
add
xchg
or
add
add
add
fmul
add
add
xchg
and
add
or
add
add
add
cmp
add
add
xchg
inc
popa
cmps
add
pop
or
add
add
add
loopne
add
add
xchg
fs
cmps
add
cld
or
add
add
add
add
add
add
jnp
test
add
add
add
jnp
in
add
add
add
jl
cmp
add
add
add
jge
inc
or
add
jle
lock
add
jle
pushf
sgdtd
add
add
jg
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
pop
test
mov
add
pop
test
enter
add
xchg
mov
pop
xchg
lock
add
add
pop
xchg
sbb
add
add
xchg
mov
pop
mov
inc
adc
add
add
add
add
add
pop
mov
nop
adc
add
add
pop
mov
mov
add
add
add
add
xchg
mov
pop
lea
or
add
add
xchg
mov
pop
mov
xor
add
add
xchg
mov
pop
pop
pop
adc
add
add
pop
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
and
xchg
add
add
push
xchg
add
adc
add
add
pop
xchg
add
adc
add
add
add
add
xchg
lahf
arpl
pushf
add
add
add
xchg
lds
add
add
xchg
jmp
int
pushf
add
add
add
add
add
xchg
xchg
and
adc
add
add
add
fs
adc
add
add
pop
popf
add
xchg
xchg
and
adc
xchg
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
push
cmps
add
add
add
add
add
add
add
and
mov
add
add
pop
mov
add
add
pop
mov
add
add
pop
movs
add
add
add
xchg
add
add
xchg
add
movs
pop
cmps
add
xchg
add
rol
add
add
add
pop
lods
add
sbb
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
xchg
or
add
add
or
add
add
add
xchg
add
data16
or
add
pop
add
add
xchg
add
ret
add
add
add
or
add
xchg
add
(bad)
or
add
add
add
or
add
and
add
add
or
add
add
add
xchg
add
lock
add
add
or
add
xchg
add
or
rol
lods
and
xchg
add
push
fsub
xchg
add
push
pop
add
add
xchg
xchg
and
add
add
xchg
add
sbb
fld
push
daa
add
add
xchg
add
and
fiadd
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
cmps
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
fild
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
es
add
add
add
add
add
pop
add
add
add
add
add
add
sub
in
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
xor
out
add
add
add
mov
dec
cmp
call
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
dec
dec
or
add
add
add
add
add
push
or
add
add
add
add
add
arpl
hlt
add
add
add
add
add
add
add
add
add
add
dec
imul
add
add
add
add
add
jbe
cli
add
add
add
add
add
test
inc
xchg
daa
add
add
xchg
add
lea
add
hlt
daa
add
add
xchg
add
add
add
add
xchg
add
push
int3
sub
add
add
or
add
add
add
add
add
add
xchg
add
imul
add
or
add
add
add
or
add
xchg
add
add
sub
add
add
or
add
add
add
or
mov
add
add
xchg
add
imul
sub
add
add
or
add
xchg
add
push
or
add
xchg
add
push
or
add
sub
add
add
or
inc
add
add
xchg
add
jmp
add
add
or
add
das
add
add
xchg
add
push
pop
sbb
and
add
add
xchg
add
push
or
add
xor
add
add
or
adc
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
imul
and
mov
add
add
xchg
add
and
and
add
add
or
add
add
add
xchg
add
add
xor
add
add
or
add
add
add
xchg
add
imul
sub
ins
xor
xchg
add
imul
sub
add
add
or
add
xor
xchg
add
imul
add
xor
xchg
add
add
add
add
xchg
add
ins
ins
or
js
add
add
xchg
add
je
xor
add
add
or
add
xchg
add
add
aaa
add
add
xchg
add
add
add
add
xchg
add
fild
inc
add
add
add
inc
cmp
add
add
or
cmp
add
add
or
push
add
add
mov
add
or
aam
add
add
xchg
add
ins
retf
or
and
add
add
xchg
add
outs
fimul
dec
add
add
add
xchg
add
outs
loopne
dec
add
cmp
add
add
or
inc
cmp
add
add
add
mov
add
add
call
add
or
fs
xchg
add
add
add
add
or
mov
add
or
add
add
xchg
add
outs
fimul
pop
add
add
or
je
add
add
xchg
add
outs
add
aas
add
add
xchg
add
or
add
add
add
add
aas
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
dec
push
or
add
add
add
mov
dec
or
add
add
add
add
pop
jo
rol
add
xchg
add
jo
add
sbb
add
add
add
fs
add
add
xchg
add
or
mov
add
or
loopne
add
add
xchg
add
jo
or
sub
add
add
or
inc
add
add
xchg
add
jo
or
xchg
inc
add
add
xchg
add
add
inc
add
add
xchg
add
jo
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
sbb
and
inc
add
add
mov
and
call
add
add
add
jno
or
add
jno
add
add
jno
or
add
and
xchg
or
add
inc
movs
or
add
jb
or
add
jb
or
add
jb
or
add
jb
or
add
inc
aad
mov
movs
inc
add
add
xchg
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
xchg
add
clc
dec
add
add
xchg
add
jae
add
add
add
or
add
add
or
add
dec
add
add
xchg
add
mov
dec
add
add
xchg
add
test
add
add
xchg
xchg
and
dec
add
add
xchg
sbb
pop
cmp
lds
add
add
add
and
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
ja
or
add
add
add
ja
or
add
add
add
xchg
add
or
add
dec
add
add
xchg
add
add
push
add
add
xchg
add
add
add
add
xchg
add
ja
or
add
add
or
add
add
add
xchg
add
ja
or
add
add
add
or
add
xchg
add
js
or
add
add
or
add
push
add
add
xchg
add
js
or
add
add
add
xchg
add
add
add
add
xchg
add
or
push
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
add
add
add
or
add
add
xchg
add
add
add
add
or
add
add
xchg
add
js
or
add
add
xchg
add
jns
or
add
add
xchg
add
jns
or
add
add
xchg
add
xor
add
add
xchg
add
cmp
add
add
xchg
add
inc
or
add
add
xchg
add
dec
or
add
add
xchg
add
pop
pusha
add
add
xchg
add
add
add
add
xchg
sbb
pop
cmp
bound
hlt
popa
add
add
xchg
xchg
and
bound
add
add
add
inc
bound
add
add
add
push
bound
add
add
or
add
add
xchg
add
add
bound
add
add
add
or
add
add
xchg
add
add
add
add
xchg
add
jle
add
fsub
add
add
or
add
add
xchg
xchg
and
add
add
xchg
add
mov
add
add
xchg
sbb
pop
cmp
ins
add
add
add
add
add
add
and
sub
add
add
and
xor
add
or
add
add
and
push
jae
add
add
add
and
add
add
add
lock
xchg
add
and
or
add
add
xchg
add
cmp
imul
add
xchg
add
or
ins
add
add
xchg
add
or
jbe
cmp
add
add
or
add
add
xchg
add
or
add
add
xchg
add
xchg
add
dec
ja
add
add
or
add
add
xchg
add
add
jns
add
add
or
add
add
xchg
add
xor
jge
test
add
add
xchg
add
or
add
add
add
xchg
add
cmp
add
add
xchg
add
add
add
add
add
add
add
push
add
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
or
add
add
add
add
xchg
add
test
xchg
add
mov
add
add
add
add
xchg
add
iret
or
add
add
xchg
add
or
add
add
xchg
add
add
mov
add
add
or
add
add
xchg
add
test
xchg
add
add
add
xchg
add
test
xchg
add
mov
add
add
add
add
add
add
add
add
or
add
add
xchg
add
push
xchg
add
add
push
cwde
add
xchg
add
add
xchg
add
test
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
add
enter
add
xchg
add
mov
add
add
add
add
add
xchg
add
mov
pushf
add
add
xchg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
mov
push
mov
add
mov
movs
add
add
add
mov
stos
add
add
add
mov
or
add
mov
mov
add
add
add
and
add
add
add
mov
mov
adc
xchg
xchg
and
rol
mov
xchg
sbb
pop
cmp
ret
mov
xchg
lds
add
add
mov
xchg
add
(bad)
iret
or
add
add
xchg
xchg
cmp
nop
mov
xchg
mov
mov
ret
mov
xchg
aad
int
ret
mov
test
cli
(bad)
cmps
add
add
xchg
out
push
add
add
movs
add
add
xchg
sbb
push
add
add
add
add
xchg
or
pop
movs
add
add
xchg
ds
int
ret
movs
add
add
xchg
pusha
nop
cmps
add
add
xchg
adc
cmps
add
add
xchg
sub
cmps
add
add
cmps
add
add
xchg
sbb
pop
cmp
ret
cmps
add
add
xchg
xchg
and
cmps
add
add
add
xchg
cmps
add
add
add
add
add
add
add
xchg
cmps
add
add
add
add
add
ret
lods
add
add
add
ret
mov
add
ret
add
add
ret
add
mov
xchg
sbb
pop
cmp
ret
add
add
add
add
add
add
add
and
les
or
add
add
xchg
xchg
and
mov
les
push
add
les
jbe
cmps
add
add
add
add
les
or
les
sar
les
pushf
dec
cmps
add
add
mov
les
lods
dec
cmps
add
add
add
add
sbb
and
mov
xchg
or
xchg
out
les
test
add
add
xchg
or
xchg
in
push
les
mov
add
push
les
sar
xchg
or
xchg
cli
push
lds
add
add
add
xchg
or
xchg
cli
push
lds
xor
add
add
xchg
or
iret
or
add
add
xchg
xchg
and
rol
add
xchg
sbb
pop
cmp
lds
xchg
ret
add
xchg
or
add
ret
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
add
add
add
or
add
add
xchg
or
iret
or
add
add
xchg
or
iret
or
add
add
xchg
or
add
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
add
xchg
or
iret
or
add
add
xchg
or
add
add
or
add
add
xchg
add
xchg
jno
lds
loopne
add
add
xchg
add
xchg
jno
lds
movs
leave
add
add
xchg
add
cwde
dec
lds
xor
add
add
xchg
add
cwde
jno
mov
iret
add
add
xchg
add
jno
mov
rol
add
add
add
add
add
add
xchg
add
fild
mov
rol
add
add
add
add
add
add
xchg
add
or
enter
add
add
xchg
add
add
add
add
add
add
xlat
add
add
xchg
add
cwde
cmp
retf
fadd
add
add
add
add
xchg
xchg
and
fadd
add
add
add
add
fadd
add
add
add
add
fadd
add
add
bswap
add
add
add
add
xchg
cmp
(bad)
fld
add
add
add
add
fld
add
add
add
add
fld
add
add
add
add
fiadd
add
add
or
add
add
add
xchg
xchg
and
fiadd
add
add
or
add
add
add
add
xchg
imul
fild
add
add
add
add
add
add
xchg
xchg
and
fild
add
add
add
add
xchg
xchg
and
fild
add
add
add
add
fild
add
add
add
add
add
add
xchg
xchg
and
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
dec
add
add
add
add
and
add
add
aaa
dec
add
add
add
add
dec
add
add
or
add
add
and
add
add
aaa
dec
add
add
add
add
add
pop
add
dec
add
add
push
dec
add
add
jl
add
add
jmp
add
dec
add
add
dec
add
add
add
add
dec
dec
add
add
aaa
dec
add
add
add
add
dec
add
add
or
add
add
dec
dec
add
add
aaa
dec
add
add
add
add
add
pop
add
dec
add
add
dec
dec
add
add
push
dec
add
add
jl
add
add
add
adc
add
add
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
mov
add
add
add
pop
dec
add
add
jmp
add
dec
add
add
mov
add
add
mov
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
pop
dec
add
add
adc
add
add
dec
add
add
adc
add
add
add
add
jmp
add
dec
add
add
jl
add
add
jmp
add
dec
add
add
and
add
add
dec
add
add
and
add
add
dec
add
add
imul
dec
add
add
jl
add
add
dec
dec
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
mov
add
dec
add
add
mov
add
dec
add
add
imul
dec
add
add
jl
add
add
enter
add
ror
add
add
add
add
dec
add
add
dec
add
add
and
add
add
dec
add
add
cmp
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
mov
add
add
dec
add
add
mov
add
dec
add
add
or
add
add
add
add
add
add
add
push
add
add
mov
add
add
push
add
add
xor
add
add
mov
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
jge
add
add
xchg
add
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
xchg
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
pop
add
add
mov
add
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jo
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jne
add
add
jo
add
add
jne
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jne
add
add
jp
add
add
jo
add
add
jne
add
add
jp
add
add
imul
dec
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
ret
pop
add
add
stos
outs
add
add
ret
pop
add
add
stos
outs
add
add
imul
dec
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
cmp
loope
xchg
and
and
pushf
cwde
add
int
jno
sbb
cmps
add
xchg
and
imul
xchg
add
add
add
test
add
add
loope
xchg
and
leave
add
and
mov
xchg
and
fld
and
mov
add
add
and
stc
add
icebp
add
imul
add
add
lahf
push
adc
(bad)
and
inc
add
lahf
int
inc
add
add
and
pop
xchg
and
lahf
je
cmp
sti
lahf
jnp
dec
add
mov
adc
push
and
sub
xchg
and
dec
add
add
cmps
add
add
mov
xchg
and
add
add
adc
add
cmps
adc
adc
adc
add
leave
push
mov
cdq
mov
mov
mov
push
add
push
shl
mov
shl
fldenv
sbb
add
push
shl
repnz
or
shl
pop
mov
mov
mov
mov
cmp
add
lahf
jnp
pop
add
mov
sub
inc
mov
sbb
add
push
dec
mov
push
mov
sti
lahf
jnp
ins
add
mov
pop
mov
sub
mov
pop
mov
ins
mov
mov
mov
add
add
leave
or
cmp
jno
xchg
and
adc
adc
lea
xchg
mov
pushf
mov
test
jno
jno
mov
mov
inc
pop
ret
mov
shl
leave
mov
mov
iret
mov
xchg
and
adc
(bad)
mov
out
jmp
mov
add
xchg
and
adc
adc
and
add
mov
inc
dec
jl
leave
push
shl
mov
cmp
inc
mov
dec
mov
pop
mov
push
add
mov
xchg
xchg
mov
out
pop
cmps
add
push
popf
mov
hlt
lahf
pop
adc
push
cmps
mov
shl
mov
sti
lahf
jnp
jl
or
sub
mov
(bad)
add
adc
push
test
movs
adc
int3
mov
aam
mov
imul
imul
jns
out
mov
xchg
and
lahf
jnp
mov
or
jecxz
push
adc
mov
add
add
push
clc
mov
add
push
add
adc
add
mov
sbb
mov
xor
dec
mov
push
mov
jg
aad
mov
adc
add
adc
add
jb
test
add
jo
push
add
add
add
push
scas
dec
addr16
add
add
add
mov
xchg
and
mov
in
dec
add
add
mov
push
movs
mov
and
movs
mov
loope
inc
dec
int
loope
daa
movs
cmps
add
add
movs
push
add
adc
add
leave
add
add
adc
push
xchg
and
movs
icebp
adc
add
and
adc
push
jg
jbe
mov
ja
dec
adc
push
add
push
and
imul
add
add
add
add
add
add
add
add
add
movs
(bad)
adc
xchg
adc
lahf
adc
stos
adc
stos
adc
add
mov
xchg
mov
fsub
mov
xchg
mov
xchg
mov
xchg
and
and
and
adc
add
pop
xor
out
movs
rol
mov
out
pop
cmps
add
add
movs
rol
xor
xchg
and
add
add
add
push
cmp
stc
movs
adc
cmp
add
pop
movs
push
push
popa
add
xchg
and
push
push
push
add
add
xor
and
or
add
movs
sbb
add
jno
dec
movs
push
add
popa
movs
push
add
jne
bound
jno
test
xchg
and
and
xchg
and
and
add
xchg
and
add
add
add
mov
nop
push
and
mov
add
movs
mov
movs
int
fld
std
movs
lahf
adc
or
push
cmps
mov
inc
add
iret
or
leave
add
add
add
push
popa
add
pop
cmps
add
add
cmps
push
add
inc
cmps
fild
mov
push
leave
push
pop
cmps
loopne
sub
xchg
and
add
pop
cmps
push
add
add
add
jno
cdq
add
add
add
add
push
add
add
add
add
add
add
add
lahf
push
adc
xchg
cmps
mov
sbb
lea
cmp
add
mov
xchg
and
leave
push
shl
sti
lahf
jnp
lods
add
mov
sub
xchg
and
lahf
push
adc
add
add
cmps
daa
sbb
add
cmps
push
add
add
add
xchg
and
add
xchg
and
sbb
inc
dec
cmps
add
shl
cmps
cmps
add
and
mov
jecxz
push
adc
xchg
dec
push
add
xchg
and
and
or
xchg
and
add
add
add
add
pop
hlt
lahf
push
adc
push
mov
xchg
and
mov
pushf
mov
xchg
and
and
cmps
sbb
jecxz
cmps
sbb
adc
adc
push
shl
fsub
xchg
and
mov
(bad)
and
inc
add
cmps
in
push
mov
(bad)
and
sbb
sbb
sbb
sbb
sbb
sbb
push
(bad)
and
sbb
add
and
sbb
sbb
(bad)
and
sbb
sbb
(bad)
and
sbb
std
cmps
ficomp
imul
add
add
add
lahf
push
adc
adc
xchg
and
jno
push
dec
push
add
xchg
and
les
xchg
and
and
sbb
add
add
cmps
cmp
cmps
inc
sbb
add
cmps
jbe
fld
push
cmps
jge
add
nop
sbb
sbb
xchg
cmps
aad
jns
mov
push
add
add
mov
cmps
mov
sbb
sbb
push
add
adc
cmp
mov
int3
add
lahf
call
aam
or
pop
test
add
int
cmp
and
sub
ds
add
add
adc
pop
add
and
adc
add
int
jns
xchg
test
add
mov
add
and
xchg
and
test
sbb
add
jno
retf
test
sbb
sbb
(bad)
test
sbb
add
and
cdq
add
adc
and
cdq
add
adc
cdq
add
add
mov
test
sbb
sbb
popa
test
pop
test
sbb
sbb
sbb
mov
xchg
and
rol
mov
call
mov
stos
test
mov
cmps
add
pop
les
test
dec
dec
sbb
pop
or
iret
test
xchg
and
add
pop
fsubr
sbb
sbb
pop
in
je
fld
xchg
and
and
lahf
push
adc
add
push
add
add
test
lea
fist
add
add
add
add
add
add
jecxz
push
adc
push
sub
mov
or
lea
aam
mov
mov
in
rcr
mov
out
pop
cmps
add
add
add
add
add
stos
or
stos
clc
add
add
stos
push
sbb
add
sbb
stos
xor
pop
mov
xchg
and
add
in
add
add
add
add
lahf
jnp
cld
add
mov
test
ja
cld
add
mov
dec
mov
lea
jecxz
enter
or
xchg
and
add
add
add
add
push
add
shl
stos
clc
add
add
lahf
call
adc
or
cmp
add
push
add
add
stos
icebp
sbb
add
add
lahf
or
outs
add
add
add
add
add
add
and
in
mov
add
popa
cmps
add
add
add
add
iret
or
push
sbb
cmps
add
cmp
add
lahf
push
adc
add
stos
push
and
and
xchg
and
sub
push
mov
out
stos
or
and
xchg
and
stos
mov
rol
add
mov
xor
lea
jecxz
push
adc
xchg
and
lahf
call
dec
add
mov
test
cmps
mov
pop
add
add
lahf
cmps
sbb
lahf
push
adc
lahf
call
ins
add
mov
jecxz
push
adc
sti
lahf
jnp
je
or
dec
mov
sub
xchg
and
and
and
xchg
add
add
add
push
add
test
push
mov
jecxz
push
adc
movs
add
mov
lods
add
add
cdq
and
lods
add
call
or
and
xchg
and
add
add
pop
and
ret
adc
int
cdq
add
pop
adc
sbb
les
push
mov
lea
test
movs
xor
adc
mov
cmp
stc
pop
and
inc
pop
jmp
pop
mov
test
and
add
dec
stos
int
jns
pop
stos
jg
popa
add
push
add
jae
int
jns
sub
stos
int
jns
scas
stos
xchg
pop
jns
mov
pop
iret
stos
aad
jns
call
add
jns
pop
lods
jo
jns
adc
pop
and
lods
aad
mov
aas
lods
aad
inc
add
jns
lods
loope
mov
ret
pop
and
xchg
and
and
and
add
add
add
add
pop
xchg
lods
and
pop
add
jns
mov
xor
rol
dec
push
add
shr
pop
adc
pop
and
push
pop
cmps
outs
and
push
fsubr
lods
int
test
add
add
dec
push
adc
add
add
add
add
push
add
xchg
and
add
add
lahf
call
hlt
add
mov
add
xchg
and
and
pop
xchg
and
add
pop
and
adc
xchg
and
and
add
add
mov
and
loope
sbb
sub
sti
lahf
sub
stc
add
lods
push
add
add
lods
int
loope
dec
lods
cmps
add
add
int
mov
and
and
add
lods
push
add
add
jns
jmp
add
add
add
movs
cdq
and
add
test
pop
cmps
mov
xchg
and
mov
and
and
add
and
and
and
add
add
mov
(bad)
lods
or
jmp
and
inc
mov
xor
cmp
leave
push
shl
and
leave
push
shr
fild
out
lods
jne
mov
cld
lods
dec
add
add
pop
xchg
and
pop
xchg
add
inc
adc
adc
add
scas
fsub
jmp
adc
add
cmps
add
add
scas
loope
mov
sbb
and
out
and
ss
push
add
and
add
add
rol
dec
scas
push
and
add
add
mov
and
xchg
and
mov
pop
scas
push
add
jecxz
push
adc
test
jecxz
push
adc
adc
ja
jge
add
xchg
and
lahf
cmps
sbb
mov
push
shl
outs
scas
les
rol
mov
shr
xchg
and
scas
push
add
xchg
cmps
mov
or
jecxz
cmps
sbb
add
add
inc
and
push
mov
(bad)
scas
popf
pop
sbb
xchg
scas
lahf
add
add
add
add
scas
mov
scas
mov
scas
int
sub
push
scas
je
loope
sbb
or
lahf
add
and
push
sub
xor
add
mov
inc
scas
std
and
add
scas
add
push
add
add
scas
push
and
sbb
mov
and
fld
fwait
movs
xchg
adc
add
movs
pusha
and
dec
add
and
int
adc
xchg
push
or
push
mov
scas
scas
mov
sbb
sti
lahf
ret
add
mov
lea
mov
cdq
and
sub
xchg
and
and
add
xchg
and
and
push
add
mov
add
add
add
add
add
lahf
ret
add
mov
sub
ret
scas
cmps
add
int
push
rol
rol
rol
add
lea
jg
fisub
rol
sub
jecxz
add
dec
add
cdq
and
dec
add
call
push
daa
leave
push
out
pop
adc
pop
out
scas
sbb
add
lea
xchg
push
push
add
add
jl
or
and
add
xchg
or
sub
mov
adc
push
add
add
add
add
add
add
add
mov
or
add
add
add
add
lock
add
add
add
cli
add
add
add
add
add
mov
push
add
add
nop
add
add
add
cwde
add
add
add
mov
xchg
or
mov
add
jl
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
mov
add
test
inc
or
lods
add
or
mov
or
or
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
push
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
mov
or
sub
add
add
add
add
add
mov
or
cmp
add
add
add
jl
or
inc
add
add
add
add
add
mov
or
test
add
add
add
nop
add
add
add
cwde
add
add
add
mov
add
add
or
add
add
or
add
or
or
inc
or
adc
adc
adc
or
sbb
sbb
push
or
add
add
and
sub
add
add
xor
xchg
or
cmp
cmp
inc
or
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
pusha
add
push
add
add
add
xchg
or
je
add
jl
or
jl
jl
or
add
add
mov
mov
nop
add
xchg
add
cwde
add
pushf
add
pop
push
mov
or
pop
push
xchg
or
fs
mov
or
push
add
add
add
inc
or
je
add
push
adc
add
ror
scas
add
add
or
or
or
icebp
or
cmc
or
adc
mov
add
adc
add
add
push
scas
add
add
scas
add
add
add
xor
add
xor
add
xor
add
adc
add
xor
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
ret
push
xor
pop
pavgb
or
mov
add
or
mov
and
or
mov
inc
or
add
add
add
add
add
mov
or
mov
arpl
or
or
ret
or
jecxz
or
mov
add
or
mov
and
or
mov
and
or
mov
inc
push
or
mov
inc
push
or
mov
popa
push
or
mov
arpl
or
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
or
dec
pop
mov
or
addr16
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
adc
ins
adc
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
stc
adc
sub
adc
push
movs
push
scas
push
mov
push
in
push
call
or
adc
sub
inc
pop
pop
pop
jbe
jnp
nop
pop
test
pop
repnz
and
sub
sbb
arpl
scas
sbb
or
sbb
pop
sbb
into
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
sbb
arpl
ret
push
es
inc
push
jb
cdq
push
lahf
push
mov
push
call
pop
bound
jae
mov
cmps
pop
mov
mov
ret
pop
aam
ficomp
cmc
pop
pop
and
and
xchg
xchg
and
and
and
and
and
and
imul
xchg
and
and
and
and
and
push
and
data16
jne
xchg
pushf
and
and
and
and
and
push
and
test
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
and
jns
jg
popf
and
add
inc
es
es
jnp
test
mov
es
es
es
add
add
mov
add
add
add
sub
push
add
pop
add
add
add
add
add
push
add
adc
imul
and
xor
inc
lahf
inc
sldt
lods
add
pop
lahf
dec
sldt
push
add
push
sldt
push
add
pop
inc
sldt
js
js
add
sbb
lahf
or
add
adc
sbb
xchg
sldt
pushf
sbb
sbb
lahf
movs
sldt
js
js
add
test
add
loop
test
add
mov
add
lahf
les
add
retf
lahf
les
add
ficomp
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
adc
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
cmps
add
add
jbe
add
add
add
add
add
add
add
add
dec
adc
test
jle
test
mov
adc
adc
adc
jmp
sbb
sbb
sbb
sbb
jp
xor
sbb
sbb
sbb
sbb
sbb
sbb
mov
sbb
push
push
sbb
pop
push
cmp
push
push
pop
push
addr16
sbb
push
test
push
icebp
push
and
sub
push
and
and
and
and
and
loope
xor
cmp
push
add
popf
pushf
add
add
dec
add
add
mov
add
add
push
add
pushf
add
inc
add
(bad)
pushf
add
add
push
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
popa
add
pushf
add
push
add
icebp
pushf
push
add
add
add
popf
add
add
jecxz
xor
in
aas
popf
add
inc
add
add
popf
add
add
jmp
add
add
add
popf
add
add
in
add
popf
add
add
out
add
popf
add
add
icebp
add
popf
add
add
repz
pushf
add
add
adc
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
add
and
inc
add
add
add
and
add
add
cmp
push
add
add
inc
add
pop
sahf
add
inc
add
addr16
add
push
add
jns
add
inc
add
add
add
push
mov
or
xchg
sahf
add
push
cmps
sahf
add
push
mov
add
push
iret
sahf
pop
add
adc
out
add
inc
add
push
sti
sahf
add
inc
add
add
add
add
add
and
les
add
add
add
add
add
add
sbb
add
add
add
add
or
and
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
or
sbb
add
add
add
and
sbb
and
sbb
and
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
adc
ins
add
ins
add
outs
add
outs
add
jo
push
add
push
add
pop
add
pop
add
push
jbe
push
ja
push
add
add
xchg
add
lahf
add
add
cwde
add
lahf
add
add
cwde
add
lahf
add
add
call
add
add
add
add
add
add
pushf
add
lahf
add
add
pushf
add
lahf
add
add
pushf
add
lahf
add
add
fiadd
fistp
addr16
lahf
add
add
imul
add
aad
fistp
fld
fistp
fild
fistp
fld
fistp
fild
fistp
loope
fistp
loope
fistp
jecxz
fistp
in
fistp
out
fistp
jmp
add
add
add
lahf
add
add
in
add
lahf
add
add
out
add
lahf
add
add
icebp
add
lahf
add
add
repz
lahf
add
add
cmc
add
lahf
add
add
test
add
stc
add
lahf
add
add
cmp
lahf
add
add
pop
add
lahf
add
add
jae
fistp
ja
fistp
jns
fistp
jnp
fistp
rol
add
add
ret
add
lahf
add
sbb
rol
lahf
fadd
hlt
sbb
cli
sbb
add
sbb
jno
fadd
cli
sbb
cli
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
jbe
xchg
fadd
stos
pop
repnz
pop
js
cli
sbb
cli
sbb
add
and
add
ret
sbb
add
daa
and
and
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
cs
ins
add
arpl
ins
imul
gs
cs
bound
push
jns
je
ins
add
jae
gs
cs
popa
je
add
jae
gs
cs
popa
outs
popa
gs
outs
je
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jb
gs
xor
cs
ins
add
fs
ins
cs
ins
add
popa
jo
cs
ins
add
jbe
jo
xor
cs
ins
add
jbe
jo
xor
cs
ins
add
gs
xor
fs
ins
add
gs
outs
jbe
fs
ins
add
xor
xor
xor
xor
add
je
outs
outs
pusha
xor
inc
arpl
popa
je
jb
inc
jo
inc
outs
ins
popa
imul
ins
outs
je
js
gs
imul
jne
outs
je
jne
ins
inc
js
gs
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
jns
inc
jae
outs
arpl
ins
ins
bound
imul
je
jb
bound
add
je
imul
jb
gs
add
je
imul
popa
addr16
je
jb
bound
add
fs
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
jb
popa
jns
imul
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
imul
jb
inc
outs
je
jns
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
gs
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
inc
jno
popa
ins
imul
jb
jb
xor
dec
inc
outs
ins
ins
arpl
outs
pusha
xor
dec
inc
imul
jb
pusha
xor
dec
inc
outs
jne
gs
bound
xor
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
dec
imul
imul
inc
outs
ins
ins
arpl
outs
add
imul
jb
add
imul
jb
inc
outs
jne
gs
je
jb
dec
inc
outs
jne
gs
je
jb
dec
dec
imul
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jns
fs
outs
ins
ins
arpl
outs
pusha
xor
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
arpl
jo
imul
imul
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
gs
outs
outs
jbe
jb
gs
push
jns
gs
gs
jb
jo
outs
jb
inc
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
inc
outs
outs
imul
je
outs
outs
push
gs
imul
outs
jbe
jb
add
ins
push
je
imul
je
ins
cs
popa
je
cs
jno
push
jns
gs
inc
popa
je
push
imul
imul
ins
gs
je
add
jne
addr16
push
jns
je
ins
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
gs
gs
imul
add
outs
arpl
jae
push
jb
arpl
jae
outs
fs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
push
add
outs
arpl
jae
push
inc
outs
ins
ins
arpl
outs
add
bound
inc
outs
jne
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
jbe
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
inc
jne
add
jae
outs
arpl
jae
ins
je
dec
inc
outs
ins
jo
jb
bound
xor
dec
inc
outs
outs
jbe
jb
imul
imul
ins
add
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
jbe
ins
imul
imul
jo
imul
popa
jb
push
gs
fs
push
jns
je
ins
cs
dec
add
outs
popa
jb
push
jb
je
jb
inc
outs
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
inc
imul
jns
outs
outs
add
ins
add
ins
gs
arpl
jae
add
ins
gs
outs
outs
add
ins
gs
outs
fs
ins
gs
push
inc
imul
ins
add
ins
gs
jns
je
ins
inc
jbe
outs
je
jb
jae
inc
imul
ins
inc
jbe
outs
je
popa
outs
fs
gs
inc
imul
ins
dec
outs
outs
add
ins
gs
jns
je
ins
push
popa
je
push
dec
inc
js
gs
imul
outs
jb
push
je
gs
ins
add
je
data16
imul
popa
je
add
outs
popa
ins
gs
jbe
outs
je
jb
jae
push
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
push
gs
imul
popa
ins
add
jb
popa
ins
push
gs
fs
push
je
gs
ins
push
jb
je
jb
push
je
imul
gs
push
je
imul
gs
push
gs
push
gs
fs
push
gs
push
jb
je
jb
dec
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
bound
arpl
gs
add
jb
push
push
gs
bound
arpl
popa
je
add
fs
gs
popa
outs
fs
add
ins
je
arpl
je
gs
gs
je
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
jae
gs
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
jne
jae
inc
popa
arpl
push
outs
ins
imul
jo
je
je
jae
outs
fs
jae
gs
cs
gs
dec
je
jo
bound
jno
gs
add
je
push
bound
jae
outs
outs
jae
add
inc
outs
fs
outs
imul
ins
outs
bound
push
jb
jo
jb
imul
je
ins
cs
gs
dec
gs
outs
jb
dec
outs
outs
jb
popa
je
outs
outs
add
inc
outs
outs
outs
arpl
outs
dec
outs
outs
jb
popa
je
outs
outs
add
bound
arpl
je
outs
outs
add
bound
popa
fs
outs
ins
ins
arpl
outs
add
bound
jno
gs
add
bound
jae
outs
outs
jae
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
push
jne
jo
jb
gs
js
gs
imul
ins
popa
bound
xor
dec
bound
arpl
bound
arpl
jae
outs
jae
fs
js
gs
imul
jb
je
outs
addr16
jns
je
ins
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
popa
je
outs
jb
dec
inc
add
gs
add
outs
outs
ins
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
imul
imul
ins
popa
addr16
inc
outs
outs
jae
jb
arpl
dec
outs
outs
add
popa
ins
imul
outs
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
imul
add
inc
outs
fs
inc
outs
fs
dec
jo
jb
outs
fs
jns
add
outs
popa
je
jb
dec
gs
jo
jb
inc
jbe
outs
je
outs
outs
add
arpl
je
outs
outs
dec
popa
outs
fs
imul
jae
dec
jo
imul
gs
fs
outs
outs
add
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
outs
arpl
push
popa
jb
popa
bound
outs
outs
add
ins
bound
inc
imul
ins
bound
dec
outs
outs
add
ins
bound
push
jns
gs
dec
gs
outs
fs
popa
jae
add
je
outs
fs
outs
fs
dec
gs
outs
fs
outs
outs
add
fs
add
jb
ins
gs
jb
outs
outs
add
jb
ins
gs
jb
outs
imul
jb
jo
jb
jns
outs
outs
add
addr16
popa
jb
ins
gs
jb
outs
jne
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
dec
ins
jo
jb
inc
je
jb
bound
add
dec
inc
push
dec
dec
inc
add
outs
jne
dec
imul
jae
popa
ins
add
jb
push
inc
je
jb
bound
add
je
je
jb
bound
add
jb
arpl
jns
jne
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
outs
je
ins
gs
imul
fs
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jns
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
popa
jae
inc
ins
outs
jb
je
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
inc
xor
popa
gs
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
je
je
push
gs
outs
arpl
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
inc
arpl
jne
je
push
arpl
imul
imul
outs
imul
arpl
jae
dec
gs
ins
jae
push
outs
imul
ins
jo
jb
outs
outs
popa
je
outs
outs
dec
gs
ins
add
outs
outs
ja
dec
fs
je
je
add
outs
ins
add
jb
outs
add
jb
outs
addr16
outs
ins
jo
jb
jae
outs
add
jb
outs
addr16
jo
imul
jae
push
jns
je
ins
inc
js
gs
imul
outs
imul
je
ins
cs
gs
add
jo
jne
add
jae
gs
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
outs
jne
add
outs
jne
inc
outs
ins
ins
arpl
outs
add
je
push
arpl
jbe
ins
jne
je
jb
push
gs
push
gs
jo
imul
jb
outs
addr16
jne
ins
fs
dec
outs
je
jb
outs
arpl
add
jae
gs
cs
push
imul
imul
gs
add
gs
fs
bound
je
js
gs
imul
gs
fs
outs
je
jb
jne
je
fs
js
gs
imul
gs
fs
je
jb
add
gs
push
imul
ins
bound
imul
imul
add
add
gs
outs
fs
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
dec
outs
je
je
add
imul
gs
jns
add
jb
imul
add
je
inc
outs
outs
je
js
add
je
push
gs
outs
outs
jae
add
je
push
outs
push
gs
js
gs
imul
je
dec
popa
outs
fs
gs
inc
ins
imul
imul
addr16
push
jns
je
ins
cs
bound
push
dec
add
outs
je
outs
ins
add
add
dec
outs
fs
gs
fs
xor
arpl
bound
popa
cmp
xor
bound
xor
xor
ss
data16
add
xor
xor
xor
xor
cs
add
jae
ins
bound
outs
outs
inc
je
jb
bound
add
bound
fs
arpl
fs
xor
cmp
data16
cmp
data16
arpl
aaa
arpl
gs
aaa
data16
xor
xor
ss
xor
add
xor
popa
cmp
xor
xor
xor
xor
xor
xor
arpl
xor
popa
popa
xor
aaa
aaa
xor
data16
aaa
aaa
arpl
fs
xor
xor
arpl
cmp
xor
arpl
aaa
aaa
xor
popa
xor
xor
xor
bound
popa
popa
add
cmp
data16
bound
xor
data16
arpl
xor
cmp
xor
arpl
add
cmp
data16
xor
popa
bound
xor
popa
aaa
xor
xor
xor
cmp
arpl
arpl
xor
xor
xor
xor
xor
ss
xor
cmp
xor
xor
xor
cmp
popa
ss
bound
xor
xor
arpl
xor
arpl
xor
xor
xor
bound
gs
xor
popa
aaa
xor
cmp
cmp
arpl
data16
bound
xor
xor
arpl
xor
xor
xor
cmp
data16
xor
xor
xor
bound
xor
ss
popa
xor
xor
cmp
xor
cmp
add
xor
xor
xor
xor
xor
aaa
xor
gs
ss
xor
cmp
arpl
xor
gs
xor
cmp
xor
cmp
xor
xor
cmp
xor
arpl
xor
aaa
xor
cmp
xor
xor
xor
bound
popa
xor
xor
arpl
bound
data16
xor
popa
xor
xor
xor
xor
xor
arpl
bound
add
xor
popa
data16
cmp
bound
aaa
xor
arpl
cmp
xor
data16
arpl
xor
popa
cmp
xor
xor
cmp
arpl
cmp
xor
xor
add
xor
cmp
xor
fs
xor
cmp
xor
popa
xor
arpl
cmp
xor
data16
xor
xor
cmp
aaa
xor
add
xor
bound
xor
xor
gs
popa
cmp
xor
xor
arpl
arpl
xor
xor
xor
ss
xor
xor
xor
xor
arpl
cmp
xor
xor
cmp
bound
arpl
popa
arpl
xor
xor
arpl
add
popa
arpl
cmp
aaa
gs
bound
data16
xor
xor
data16
add
cmp
xor
arpl
xor
arpl
aaa
xor
cmp
xor
add
xor
bound
xor
popa
bound
bound
data16
xor
cmp
cmp
arpl
gs
bound
cmp
xor
xor
cmp
bound
data16
arpl
aaa
cmp
xor
bound
xor
aaa
xor
cmp
arpl
data16
xor
arpl
arpl
cmp
cmp
gs
arpl
xor
bound
xor
aaa
xor
xor
ss
cmp
xor
xor
xor
data16
ss
arpl
aaa
xor
cmp
arpl
cmp
bound
xor
cmp
bound
xor
xor
xor
aaa
bound
data16
arpl
bound
bound
bound
xor
cmp
fs
xor
add
fs
bound
inc
gs
je
jo
inc
outs
ins
ins
outs
outs
add
xor
xor
cmp
cmp
aaa
xor
xor
popa
xor
arpl
xor
xor
xor
arpl
arpl
ss
fs
xor
aaa
xor
bound
popa
aaa
popa
cmp
xor
bound
xor
add
cmp
popa
xor
bound
fs
arpl
xor
xor
data16
xor
aaa
xor
add
xor
xor
xor
popa
bound
xor
xor
xor
xor
xor
data16
data16
xor
popa
xor
dec
fs
je
imul
gs
outs
outs
jae
data16
dec
jae
outs
add
bound
cmp
ss
cmp
xor
cmp
cmp
xor
arpl
popa
cmp
dec
inc
jb
popa
jns
dec
popa
jbe
push
arpl
jo
inc
outs
outs
jae
jb
arpl
add
jbe
push
arpl
jo
push
popa
jb
ins
gs
jb
add
bound
arpl
jae
outs
inc
outs
outs
jbe
jb
add
outs
outs
inc
outs
outs
jbe
jb
gs
arpl
xor
bound
bound
cmp
fs
xor
xor
data16
jae
outs
inc
outs
outs
jbe
jb
gs
outs
ins
ins
arpl
outs
add
cmp
bound
arpl
xor
popa
xor
xor
xor
data16
add
outs
outs
dec
popa
outs
fs
gs
dec
jae
outs
dec
outs
outs
jb
inc
je
jb
bound
add
outs
outs
push
jb
jo
jb
jns
je
jb
bound
add
outs
outs
push
gs
fs
arpl
gs
xor
xor
xor
bound
aaa
bound
cmp
cmp
xor
xor
add
outs
outs
push
gs
fs
js
gs
imul
outs
push
gs
popa
ins
imul
inc
js
gs
imul
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
outs
push
gs
popa
ins
imul
outs
outs
push
outs
imul
arpl
aaa
xor
arpl
xor
cmp
xor
aaa
xor
bound
arpl
add
imul
add
jb
popa
je
imul
outs
push
jb
je
jb
arpl
bound
cmp
cmp
xor
xor
xor
xor
xor
xor
bound
add
outs
outs
push
jb
je
jb
js
gs
imul
cmp
xor
popa
xor
xor
arpl
xor
cmp
cmp
gs
add
arpl
xor
cmp
arpl
aaa
arpl
xor
ss
xor
bound
cmp
xor
xor
arpl
xor
xor
cmp
xor
arpl
popa
xor
xor
cmp
data16
bound
arpl
popa
xor
xor
cmp
xor
arpl
ss
xor
xor
gs
cmp
xor
xor
xor
aaa
bound
cmp
popa
cmp
xor
xor
xor
arpl
arpl
bound
xor
xor
xor
data16
xor
xor
data16
data16
arpl
xor
xor
bound
xor
bound
xor
cmp
xor
cmp
add
cmp
xor
fs
xor
bound
xor
aaa
xor
popa
bound
gs
xor
arpl
xor
xor
cmp
arpl
xor
xor
aaa
data16
bound
aaa
fs
xor
bound
add
arpl
xor
xor
arpl
arpl
xor
xor
data16
data16
popa
pusha
xor
arpl
popaw
gs
bound
xor
aaa
xor
xor
popaw
bound
cmp
cmp
add
cmp
bound
aaa
xor
xor
xor
xor
aaa
ss
cmp
arpl
xor
popa
xor
gs
aaa
fs
popa
xor
aaa
cmp
arpl
xor
xor
xor
xor
xor
xor
cmp
data16
xor
xor
arpl
popa
xor
data16
xor
xor
ss
bound
xor
cmp
xor
arpl
cmp
fs
xor
xor
bound
aaa
cmp
xor
xor
cmp
xor
xor
arpl
ss
xor
cmp
aaa
xor
xor
arpl
xor
aaa
arpl
add
cmp
arpl
xor
xor
cmp
xor
gs
bound
aaa
xor
arpl
aaa
add
fs
cmp
bound
bound
xor
xor
xor
xor
aaa
cmp
cmp
cmp
xor
arpl
bound
xor
popa
aaa
xor
data16
cmp
popa
xor
xor
arpl
xor
xor
xor
xor
popa
arpl
arpl
cmp
xor
aaa
xor
xor
xor
arpl
xor
data16
xor
cmp
xor
cmp
arpl
popa
add
xor
xor
cmp
cmp
xor
cmp
xor
popa
popa
xor
xor
add
data16
xor
aaa
cmp
xor
xor
ss
popa
xor
cmp
aaa
aaa
arpl
add
xor
xor
popa
xor
xor
arpl
xor
xor
popa
xor
xor
xor
xor
xor
arpl
popa
cmp
xor
cmp
cmp
popa
bound
aaa
fs
cmp
xor
add
xor
arpl
fs
xor
cmp
aaa
data16
xor
xor
xor
bound
xor
arpl
add
xor
arpl
arpl
xor
cmp
popa
xor
bound
xor
xor
cmp
add
gs
gs
xor
popa
aaa
aaa
xor
gs
cmp
popa
xor
xor
xor
add
xor
xor
gs
popa
popa
xor
popa
xor
arpl
xor
aaa
popa
bound
popa
popa
arpl
add
xor
xor
bound
xor
xor
xor
cmp
cmp
xor
add
popa
xor
aaa
data16
cmp
xor
arpl
xor
xor
bound
xor
xor
xor
xor
cmp
xor
bound
aaa
cmp
ss
add
xor
bound
fs
xor
xor
xor
xor
popa
cmp
xor
xor
cmp
data16
bound
gs
xor
xor
xor
cmp
fs
xor
xor
xor
xor
ss
xor
xor
ss
aaa
cmp
xor
ss
arpl
xor
arpl
cmp
data16
ins
jne
imul
je
jo
inc
jb
ja
gs
fs
jo
gs
arpl
cmp
cmp
aaa
xor
xor
xor
cmp
cmp
xor
ss
arpl
popa
xor
popa
xor
xor
cmp
popa
add
arpl
xor
xor
fs
xor
xor
xor
aaa
xor
xor
arpl
xor
xor
aaa
xor
arpl
cmp
aaa
cmp
xor
arpl
xor
xor
xor
cmp
xor
bound
bound
arpl
popa
xor
arpl
cmp
xor
xor
xor
xor
xor
bound
xor
arpl
data16
bound
gs
cmp
bound
xor
cmp
xor
cmp
xor
xor
cmp
arpl
xor
xor
aaa
aaa
arpl
xor
gs
cmp
aaa
xor
xor
aaa
add
xor
gs
bound
aaa
cmp
xor
cmp
arpl
popaw
arpl
xor
cmp
xor
xor
arpl
xor
xor
xor
aaa
xor
popa
gs
xor
xor
xor
xor
xor
arpl
cmp
cmp
xor
xor
ss
xor
bound
xor
cmp
fs
xor
xor
xor
arpl
cmp
data16
xor
xor
aaa
cmp
add
ss
cmp
data16
gs
data16
xor
xor
cmp
xor
xor
arpl
xor
cmp
xor
xor
bound
aaa
xor
gs
xor
gs
arpl
add
data16
cmp
xor
xor
fs
xor
ss
xor
cmp
arpl
outs
jb
arpl
data16
popa
arpl
aaa
bound
cmp
cmp
xor
aaa
xor
cmp
xor
arpl
xor
xor
arpl
xor
xor
cmp
xor
cmp
xor
arpl
add
xor
xor
cmp
cmp
data16
xor
xor
xor
gs
add
aaa
xor
fs
cmp
bound
xor
xor
aaa
popa
fs
xor
popa
xor
bound
arpl
cmp
xor
xor
xor
xor
cmp
fs
xor
popa
xor
arpl
add
cmp
xor
xor
xor
data16
cmp
xor
data16
xor
add
cmp
xor
xor
data16
data16
bound
cmp
data16
cmp
data16
cmp
xor
xor
xor
xor
bound
cmp
xor
xor
cmp
xor
add
je
imul
aaa
popa
cmp
gs
xor
xor
xor
fs
xor
cmp
aaa
add
xor
xor
data16
xor
data16
bound
xor
gs
popa
xor
je
add
ins
jne
pop
pop
add
data16
popa
xor
popa
popa
xor
xor
gs
arpl
data16
aaa
xor
popa
xor
add
cmp
xor
fs
xor
xor
xor
xor
aaa
gs
xor
cmp
bound
data16
aaa
popa
gs
cmp
xor
cmp
xor
xor
xor
add
arpl
xor
ss
bound
xor
fs
xor
popa
ss
xor
fs
arpl
popa
aaa
popa
aaa
xor
ss
data16
xor
xor
bound
arpl
arpl
xor
arpl
bound
aaa
xor
xor
cmp
popa
bound
xor
xor
aaa
xor
cmp
arpl
xor
xor
arpl
popa
aaa
xor
data16
xor
xor
xor
add
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
xor
data16
xor
xor
bound
ss
arpl
xor
gs
data16
cmp
xor
xor
xor
xor
bound
aaa
xor
aaa
xor
xor
cmp
data16
xor
add
cmp
popa
bound
cmp
gs
cmp
xor
popaw
popa
ss
xor
aaa
popaw
xor
arpl
xor
aaa
bound
xor
xor
xor
xor
cmp
cmp
popa
cmp
arpl
xor
xor
bound
xor
xor
popa
cmp
ss
xor
xor
add
aaa
bound
xor
xor
xor
cmp
aaa
aaa
xor
xor
ss
xor
add
ss
aaa
gs
data16
bound
cmp
xor
bound
xor
xor
add
xor
xor
fs
xor
cmp
arpl
xor
arpl
cmp
xor
add
xor
arpl
arpl
arpl
cmp
cmp
xor
arpl
aaa
bound
xor
xor
arpl
cmp
xor
cmp
cmp
xor
xor
data16
xor
xor
add
bound
arpl
data16
xor
bound
xor
xor
cmp
gs
data16
popa
aaa
bound
cmp
aaa
cmp
xor
aaa
popa
cmp
xor
xor
aaa
xor
add
popa
xor
bound
popa
xor
arpl
xor
arpl
arpl
xor
gs
bound
arpl
gs
cmp
xor
xor
popa
bound
bound
ss
xor
popa
add
bound
fs
popa
xor
xor
gs
aaa
xor
xor
popa
ss
data16
aaa
popa
popa
xor
ss
fs
popa
arpl
bound
bound
xor
arpl
cmp
xor
xor
arpl
xor
xor
aaa
xor
popa
fs
fs
bound
xor
xor
aaa
add
xor
cmp
aaa
xor
arpl
xor
aaa
xor
xor
popa
xor
xor
add
popa
bound
popa
aaa
bound
xor
xor
data16
xor
xor
xor
xor
add
bound
xor
xor
gs
fs
aaa
arpl
popa
popa
xor
cmp
xor
xor
xor
arpl
xor
cmp
xor
xor
cmp
arpl
cmp
popa
xor
bound
xor
add
bound
bound
cmp
xor
fs
arpl
aaa
xor
arpl
xor
aaa
arpl
xor
add
popa
gs
popa
xor
arpl
xor
aaa
arpl
ss
xor
cmp
xor
arpl
cmp
xor
xor
xor
bound
cmp
xor
xor
cmp
arpl
data16
data16
aaa
xor
fs
fs
arpl
xor
add
ss
arpl
arpl
gs
xor
fs
xor
bound
gs
arpl
fs
xor
ss
cmp
cmp
popa
cmp
bound
aaa
xor
arpl
xor
bound
cmp
arpl
arpl
aaa
popa
gs
xor
cmp
gs
xor
xor
xor
arpl
bound
bound
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
data16
cmp
cmp
xor
data16
popa
cmp
xor
xor
xor
popa
cmp
arpl
cmp
popa
bound
bound
xor
ss
bound
cmp
xor
data16
add
arpl
arpl
data16
xor
arpl
xor
xor
xor
arpl
xor
cmp
xor
xor
xor
xor
xor
bound
cmp
ss
cmp
cmp
xor
arpl
cmp
aaa
xor
xor
cmp
bound
cmp
bound
arpl
xor
bound
gs
xor
add
cmp
xor
xor
popa
xor
xor
bound
gs
popa
arpl
aaa
cmp
xor
xor
xor
xor
data16
xor
arpl
cmp
xor
gs
cmp
aaa
xor
ss
xor
bound
ss
xor
arpl
xor
aaa
add
ss
gs
popa
ss
xor
popa
ss
arpl
add
arpl
cmp
cmp
xor
xor
xor
arpl
bound
cmp
ss
xor
cmp
arpl
ss
data16
fs
ss
xor
xor
popa
add
popa
xor
xor
xor
xor
xor
popa
xor
data16
bound
fs
add
cmp
fs
xor
xor
gs
bound
bound
xor
xor
add
xor
arpl
xor
fs
aaa
bound
cmp
xor
popa
arpl
xor
bound
arpl
arpl
bound
bound
cmp
aaa
xor
bound
popa
bound
arpl
xor
bound
arpl
xor
xor
popa
popa
xor
xor
cmp
cmp
xor
aaa
xor
xor
arpl
xor
arpl
xor
arpl
data16
cmp
xor
xor
cmp
gs
popaw
add
ss
xor
bound
bound
xor
cmp
xor
xor
cmp
arpl
cmp
xor
gs
cmp
cmp
xor
xor
xor
xor
arpl
arpl
xor
xor
xor
xor
cmp
xor
aaa
xor
cmp
bound
popa
add
arpl
xor
bound
xor
bound
xor
bound
cmp
xor
xor
arpl
popa
xor
arpl
xor
xor
xor
cmp
cmp
xor
xor
cmp
cmp
add
arpl
xor
cmp
xor
cmp
cmp
data16
cmp
xor
add
xor
xor
gs
xor
xor
arpl
cmp
aaa
xor
arpl
add
xor
ss
ss
xor
xor
ss
bound
add
popa
cmp
popa
cmp
cmp
popa
aaa
cmp
data16
xor
xor
arpl
xor
aaa
xor
xor
arpl
arpl
aaa
cmp
cmp
cmp
xor
add
xor
cmp
ss
xor
xor
xor
xor
xor
aaa
gs
popa
aaa
add
xor
xor
xor
arpl
xor
xor
arpl
xor
popa
cmp
xor
data16
arpl
fs
cmp
xor
gs
xor
xor
xor
cmp
bound
arpl
xor
fs
cmp
cmp
popa
xor
aaa
xor
aaa
cmp
xor
add
gs
cmp
xor
arpl
xor
arpl
xor
add
xor
bound
fs
xor
xor
aaa
xor
aaa
xor
xor
xor
xor
add
xor
popaw
popa
xor
arpl
xor
xor
xor
xor
data16
arpl
popa
xor
arpl
popa
xor
cmp
xor
cmp
data16
xor
cmp
bound
xor
cmp
arpl
xor
bound
xor
bound
xor
bound
bound
xor
xor
xor
xor
add
xor
cmp
xor
cmp
aaa
data16
cmp
aaa
arpl
xor
add
xor
xor
arpl
popa
fs
arpl
bound
xor
ss
xor
bound
add
popa
xor
aaa
xor
cmp
aaa
xor
xor
bound
xor
popa
xor
data16
add
popa
xor
xor
arpl
xor
popa
xor
xor
popa
xor
xor
ss
fs
add
ss
bound
bound
gs
fs
data16
xor
data16
cmp
xor
add
fs
fs
xor
arpl
cmp
arpl
bound
xor
fs
xor
data16
popa
bound
xor
bound
xor
cmp
xor
cmp
ss
xor
popa
cmp
xor
xor
xor
popa
bound
fs
fs
cmp
arpl
xor
xor
bound
aaa
fs
xor
aaa
cmp
xor
aaa
bound
xor
arpl
xor
popa
bound
arpl
xor
cmp
arpl
xor
xor
xor
add
popa
arpl
xor
xor
cmp
popa
cmp
popa
popa
xor
xor
aaa
bound
data16
xor
popa
data16
xor
xor
bound
xor
xor
xor
popa
add
xor
bound
popa
xor
xor
xor
cmp
cmp
popa
xor
popa
xor
xor
arpl
gs
xor
xor
popa
ss
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
gs
popa
xor
xor
arpl
xor
xor
add
popa
cmp
data16
xor
xor
xor
data16
xor
cmp
bound
xor
arpl
xor
xor
arpl
aaa
xor
xor
data16
arpl
xor
popa
popa
xor
arpl
bound
xor
cmp
cmp
fs
xor
cmp
cmp
xor
add
cmp
xor
fs
arpl
xor
ss
aaa
xor
aaa
cmp
xor
bound
popa
gs
add
popa
xor
arpl
cmp
xor
bound
xor
xor
xor
arpl
popa
fs
cmp
arpl
xor
xor
cmp
bound
xor
cmp
cmp
cmp
fs
data16
add
arpl
popa
bound
xor
data16
bound
cmp
xor
xor
bound
xor
arpl
arpl
popaw
popa
fs
xor
arpl
bound
xor
bound
data16
data16
add
arpl
fs
arpl
xor
xor
xor
popa
xor
xor
popa
xor
data16
arpl
arpl
cmp
bound
xor
xor
xor
xor
arpl
xor
xor
cmp
cmp
xor
xor
ss
xor
xor
data16
xor
bound
cmp
xor
cmp
cmp
bound
popa
aaa
xor
arpl
bound
xor
ss
xor
popa
bound
arpl
xor
xor
xor
add
aaa
xor
xor
bound
xor
cmp
bound
xor
aaa
aaa
popa
popa
xor
cmp
bound
arpl
gs
xor
arpl
gs
xor
ss
xor
add
xor
xor
bound
xor
popa
ss
xor
xor
xor
xor
aaa
xor
arpl
cmp
popa
bound
cmp
xor
cmp
xor
gs
arpl
xor
arpl
cmp
arpl
arpl
arpl
bound
cmp
aaa
cmp
bound
arpl
xor
data16
xor
xor
fs
xor
bound
xor
xor
xor
popa
xor
xor
aaa
data16
bound
xor
xor
xor
aaa
cmp
xor
xor
xor
add
xor
popa
cmp
xor
fs
xor
xor
xor
xor
add
popa
aaa
cmp
xor
xor
xor
fs
xor
aaa
cmp
xor
xor
add
xor
xor
gs
cmp
xor
aaa
cmp
cmp
popa
xor
add
xor
bound
xor
data16
popa
xor
bound
xor
xor
xor
xor
cmp
popa
xor
xor
fs
popa
ss
xor
cmp
aaa
xor
arpl
xor
popa
bound
xor
bound
xor
xor
popa
xor
ss
bound
xor
aaa
cmp
arpl
xor
data16
xor
bound
ss
ss
ss
xor
cmp
data16
xor
popa
xor
xor
xor
xor
popa
arpl
xor
ss
xor
bound
xor
arpl
xor
ss
xor
arpl
gs
arpl
fs
fs
bound
cmp
add
xor
aaa
xor
bound
ss
xor
bound
xor
data16
bound
xor
popaw
add
aaa
aaa
cmp
ss
xor
arpl
cmp
bound
arpl
xor
popa
popa
xor
xor
add
arpl
bound
cmp
cmp
bound
xor
popa
xor
arpl
xor
popa
add
cmp
xor
xor
aaa
bound
cmp
arpl
xor
xor
xor
xor
add
bound
arpl
xor
xor
cmp
popa
ss
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
arpl
popa
aaa
gs
xor
add
ss
cmp
aaa
gs
xor
xor
xor
arpl
xor
arpl
aaa
xor
xor
xor
bound
bound
gs
xor
popa
cmp
xor
arpl
cmp
xor
arpl
popaw
arpl
xor
data16
popa
xor
gs
xor
arpl
aaa
xor
xor
cmp
data16
cmp
xor
cmp
xor
xor
cmp
xor
bound
xor
xor
bound
aaa
xor
popa
xor
aaa
xor
xor
xor
xor
xor
arpl
popa
cmp
popa
xor
xor
ss
xor
aaa
cmp
xor
fs
add
xor
gs
popa
xor
xor
xor
data16
aaa
xor
data16
xor
add
arpl
xor
popa
xor
bound
cmp
xor
arpl
gs
bound
xor
arpl
arpl
cmp
bound
xor
bound
xor
bound
cmp
xor
arpl
arpl
ss
xor
gs
xor
arpl
arpl
cmp
arpl
arpl
xor
xor
fs
bound
bound
fs
xor
cmp
xor
fs
popa
xor
xor
popa
xor
xor
data16
aaa
data16
xor
xor
cmp
arpl
arpl
gs
xor
xor
bound
cmp
xor
xor
ss
arpl
xor
add
xor
popa
xor
ss
xor
xor
xor
ss
xor
xor
add
xor
bound
gs
bound
bound
xor
arpl
xor
xor
fs
add
aaa
xor
xor
popa
xor
xor
xor
xor
popa
xor
bound
data16
xor
cmp
xor
cmp
popa
xor
aaa
xor
xor
xor
xor
arpl
xor
xor
cmp
xor
xor
ss
xor
xor
cmp
popa
popa
arpl
popa
arpl
xor
data16
xor
xor
popa
xor
xor
xor
arpl
cmp
cmp
cmp
xor
bound
xor
bound
cmp
xor
xor
arpl
gs
cmp
cmp
data16
bound
xor
xor
bound
fs
xor
arpl
arpl
xor
arpl
cmp
popa
xor
cmp
xor
popaw
xor
xor
arpl
gs
bound
cmp
xor
cmp
data16
gs
xor
ss
add
fs
aaa
xor
arpl
xor
xor
xor
cmp
bound
cmp
arpl
cmp
bound
xor
cmp
cmp
arpl
cmp
xor
data16
arpl
xor
xor
popa
bound
ss
cmp
ss
xor
xor
cmp
xor
aaa
xor
cmp
cmp
xor
cmp
xor
xor
xor
arpl
add
je
arpl
data16
xor
xor
data16
cmp
xor
xor
cmp
xor
jae
je
arpl
data16
xor
xor
data16
cmp
xor
xor
cmp
xor
addr16
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
je
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
ins
jne
add
je
push
outs
popa
ins
imul
popa
je
push
popa
je
add
je
push
outs
popa
ins
imul
popa
je
push
popa
je
add
je
push
imul
outs
je
imul
add
je
push
imul
outs
je
imul
add
data16
arpl
xor
popa
cmp
bound
bound
xor
data16
xor
bound
data16
cmp
bound
xor
popa
xor
cmp
bound
add
xor
popa
ss
xor
fs
aaa
arpl
data16
gs
arpl
cmp
arpl
xor
aaa
xor
xor
xor
bound
aaa
xor
aaa
xor
xor
xor
ss
aaa
xor
xor
arpl
xor
xor
ss
arpl
xor
cmp
bound
xor
xor
bound
xor
popa
aaa
xor
xor
xor
popa
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
cmp
aaa
arpl
add
data16
popa
aaa
cmp
bound
cmp
xor
xor
xor
aaa
aaa
add
arpl
cmp
data16
bound
bound
bound
xor
xor
xor
arpl
xor
arpl
gs
xor
cmp
xor
cmp
xor
xor
data16
xor
cmp
aaa
xor
xor
arpl
xor
xor
xor
cmp
data16
add
xor
gs
popa
cmp
xor
popa
cmp
xor
xor
xor
xor
arpl
fs
xor
xor
data16
cmp
cmp
xor
xor
xor
add
xor
popa
xor
popa
xor
bound
cmp
xor
cmp
xor
cmp
xor
xor
add
popa
aaa
xor
xor
aaa
data16
xor
xor
popa
xor
xor
add
xor
xor
aaa
cmp
xor
xor
xor
cmp
arpl
xor
arpl
cmp
arpl
xor
xor
xor
xor
aaa
fs
popa
add
xor
xor
popa
cmp
fs
cmp
arpl
cmp
xor
arpl
xor
arpl
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
bound
gs
arpl
data16
cmp
xor
bound
cmp
arpl
cmp
xor
cmp
bound
popa
xor
arpl
popa
xor
xor
arpl
xor
aaa
xor
arpl
gs
cmp
xor
aaa
add
aaa
bound
ss
xor
popa
xor
xor
xor
xor
data16
xor
fs
xor
xor
fs
xor
cmp
gs
cmp
xor
ss
cmp
add
popa
bound
xor
cmp
xor
arpl
bound
xor
data16
xor
cmp
fs
xor
add
cmp
cmp
arpl
bound
cmp
xor
bound
xor
popa
cmp
cmp
xor
add
cmp
xor
xor
popa
xor
cmp
xor
xor
xor
cmp
add
cmp
xor
bound
cmp
cmp
cmp
xor
xor
aaa
xor
xor
xor
arpl
add
aaa
arpl
arpl
xor
arpl
fs
xor
arpl
gs
xor
cmp
data16
arpl
xor
cmp
xor
cmp
data16
data16
xor
xor
xor
xor
cmp
cmp
arpl
bound
aaa
xor
arpl
aaa
xor
popa
cmp
arpl
xor
arpl
xor
xor
arpl
popa
arpl
cmp
xor
cmp
cmp
arpl
popa
xor
xor
aaa
cmp
xor
xor
xor
arpl
bound
xor
aaa
xor
xor
add
xor
xor
xor
xor
gs
aaa
xor
xor
xor
popa
add
bound
arpl
aaa
xor
xor
xor
xor
xor
data16
xor
arpl
popa
xor
xor
xor
aaa
xor
xor
fs
popa
gs
cmp
arpl
add
ss
xor
gs
xor
xor
bound
xor
xor
xor
xor
arpl
xor
bound
gs
bound
xor
cmp
xor
xor
xor
cmp
arpl
xor
cmp
xor
fs
data16
cmp
xor
xor
xor
aaa
add
xor
xor
arpl
bound
xor
xor
aaa
popa
xor
xor
xor
arpl
arpl
popa
popa
xor
xor
arpl
cmp
arpl
bound
xor
xor
cmp
arpl
arpl
add
xor
aaa
xor
cmp
popa
arpl
arpl
xor
xor
xor
bound
xor
gs
bound
xor
fs
cmp
xor
aaa
xor
aaa
data16
xor
xor
cmp
arpl
xor
xor
xor
gs
xor
xor
arpl
gs
xor
arpl
xor
xor
xor
xor
cmp
cmp
xor
popa
xor
xor
arpl
xor
aaa
cmp
cmp
xor
gs
fs
add
xor
xor
xor
gs
xor
xor
cmp
arpl
xor
arpl
cmp
bound
cmp
cmp
xor
xor
popa
xor
cmp
xor
ss
add
bound
xor
popa
data16
popa
data16
xor
aaa
arpl
bound
xor
popa
add
aaa
xor
aaa
xor
popa
cmp
bound
xor
xor
xor
popa
aaa
xor
xor
cmp
xor
popa
xor
xor
arpl
aaa
bound
xor
cmp
arpl
arpl
arpl
cmp
xor
arpl
xor
bound
xor
popa
aaa
arpl
xor
arpl
xor
cmp
data16
fs
xor
fs
popa
cmp
bound
xor
xor
add
cmp
aaa
xor
aaa
cmp
popa
popa
bound
xor
gs
arpl
popa
arpl
add
xor
bound
aaa
xor
xor
bound
xor
xor
xor
arpl
cmp
bound
aaa
xor
xor
arpl
popa
xor
xor
cmp
arpl
xor
arpl
bound
cmp
xor
ss
arpl
cmp
xor
bound
bound
xor
data16
xor
xor
fs
aaa
cmp
xor
xor
aaa
arpl
popa
xor
gs
add
xor
xor
arpl
xor
cmp
xor
data16
cmp
xor
arpl
add
fs
data16
cmp
xor
xor
xor
xor
cmp
xor
add
cmp
arpl
xor
fs
xor
fs
arpl
cmp
bound
xor
cmp
cmp
xor
arpl
xor
cmp
arpl
xor
bound
add
arpl
xor
xor
xor
xor
bound
cmp
xor
xor
add
xor
fs
bound
gs
xor
popa
xor
data16
xor
arpl
xor
fs
fs
xor
popa
xor
arpl
fs
xor
xor
arpl
xor
arpl
bound
bound
xor
xor
bound
bound
add
arpl
xor
xor
xor
ss
cmp
xor
popa
data16
xor
add
arpl
xor
xor
arpl
xor
xor
xor
popa
aaa
bound
cmp
add
bound
arpl
cmp
cmp
xor
xor
arpl
xor
xor
xor
arpl
xor
data16
bound
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
popa
xor
xor
xor
xor
popaw
popa
fs
cmp
arpl
popa
xor
aaa
xor
xor
fs
arpl
add
ss
fs
cmp
xor
xor
xor
popa
xor
xor
cmp
xor
arpl
xor
bound
cmp
popa
xor
xor
xor
xor
xor
data16
xor
add
bound
cmp
popa
xor
aaa
arpl
gs
bound
xor
xor
cmp
arpl
arpl
arpl
xor
xor
bound
xor
xor
cmp
xor
xor
arpl
arpl
xor
cmp
xor
xor
xor
fs
xor
gs
cmp
xor
xor
arpl
aaa
aaa
xor
ss
cmp
xor
cmp
data16
xor
aaa
popa
add
data16
xor
ss
xor
xor
data16
xor
cmp
arpl
arpl
ss
aaa
arpl
data16
fs
aaa
cmp
aaa
cmp
cmp
xor
cmp
add
xor
arpl
xor
xor
aaa
popa
aaa
bound
xor
popa
xor
bound
xor
xor
xor
xor
xor
bound
xor
arpl
xor
arpl
xor
cmp
xor
popa
arpl
xor
xor
gs
popa
bound
xor
ss
cmp
xor
xor
popa
xor
cmp
cmp
gs
popa
bound
xor
arpl
fs
bound
data16
cmp
cmp
popa
xor
xor
gs
ss
arpl
data16
xor
xor
bound
xor
aaa
xor
xor
bound
bound
arpl
cmp
xor
xor
xor
ss
popa
xor
cmp
cmp
ss
arpl
aaa
xor
xor
arpl
arpl
xor
xor
xor
data16
bound
cmp
add
xor
cmp
aaa
aaa
arpl
xor
cmp
xor
xor
cmp
cmp
add
xor
cmp
ss
ss
popa
xor
cmp
arpl
xor
xor
gs
arpl
cmp
aaa
xor
xor
bound
xor
xor
ss
xor
arpl
data16
arpl
data16
arpl
xor
bound
xor
arpl
xor
xor
xor
xor
arpl
gs
xor
xor
popa
xor
arpl
popa
xor
arpl
arpl
xor
xor
xor
bound
xor
xor
aaa
xor
arpl
aaa
gs
popa
xor
arpl
arpl
popa
xor
cmp
xor
add
xor
cmp
popa
cmp
aaa
xor
arpl
xor
cmp
cmp
aaa
arpl
arpl
cmp
data16
arpl
arpl
xor
xor
cmp
xor
xor
xor
add
xor
xor
bound
fs
bound
popa
xor
bound
ss
xor
add
cmp
xor
xor
bound
gs
xor
arpl
xor
xor
add
xor
xor
arpl
cmp
arpl
xor
xor
xor
arpl
aaa
xor
arpl
xor
cmp
xor
popa
xor
xor
aaa
xor
xor
popa
ss
xor
xor
bound
cmp
xor
arpl
xor
xor
xor
cmp
xor
add
bound
xor
ss
cmp
xor
cmp
xor
fs
xor
xor
arpl
xor
bound
bound
fs
arpl
xor
cmp
arpl
fs
xor
data16
arpl
ss
data16
xor
popa
cmp
arpl
xor
arpl
arpl
gs
bound
xor
xor
xor
gs
data16
xor
arpl
xor
data16
arpl
bound
arpl
xor
xor
cmp
cmp
fs
arpl
xor
xor
xor
popa
xor
xor
cmp
xor
ss
arpl
arpl
xor
bound
xor
gs
xor
cmp
xor
popa
bound
data16
popa
bound
arpl
cmp
popa
xor
arpl
bound
xor
xor
xor
xor
arpl
xor
cmp
arpl
cmp
xor
popa
bound
xor
xor
xor
aaa
data16
cmp
xor
fs
arpl
popa
cmp
popa
arpl
arpl
xor
xor
xor
xor
add
gs
xor
aaa
data16
xor
bound
xor
xor
xor
arpl
arpl
data16
fs
popa
xor
xor
bound
add
xor
gs
xor
xor
xor
bound
gs
xor
add
xor
ss
xor
xor
arpl
arpl
xor
cmp
cmp
arpl
arpl
xor
xor
xor
bound
cmp
xor
fs
aaa
data16
xor
add
xor
xor
arpl
bound
xor
popa
xor
arpl
cmp
xor
cmp
arpl
popa
bound
popa
bound
cmp
bound
cmp
xor
xor
fs
data16
xor
cmp
arpl
xor
xor
aaa
xor
arpl
xor
cmp
bound
data16
xor
xor
xor
arpl
bound
bound
xor
xor
aaa
xor
cmp
xor
arpl
cmp
add
fs
cmp
xor
aaa
xor
arpl
xor
xor
xor
add
cmp
bound
xor
xor
cmp
xor
xor
fs
arpl
arpl
xor
cmp
arpl
aaa
cmp
xor
cmp
gs
cmp
arpl
xor
bound
xor
xor
arpl
cmp
xor
ss
fs
aaa
cmp
xor
cmp
data16
xor
arpl
xor
cmp
data16
popa
xor
cmp
aaa
aaa
xor
add
xor
xor
bound
cmp
xor
gs
arpl
xor
xor
xor
popa
cmp
xor
xor
xor
popa
xor
xor
arpl
arpl
xor
xor
add
xor
xor
bound
xor
gs
xor
cmp
data16
xor
aaa
xor
xor
xor
gs
xor
xor
cmp
xor
xor
xor
gs
xor
aaa
add
xor
bound
cmp
ss
xor
xor
xor
bound
xor
ss
add
xor
popa
popa
bound
arpl
xor
arpl
xor
xor
aaa
bound
xor
arpl
cmp
xor
xor
aaa
popa
xor
xor
popa
bound
xor
cmp
xor
popa
xor
arpl
xor
cmp
xor
xor
data16
aaa
arpl
ss
xor
arpl
xor
gs
xor
xor
popa
aaa
ss
xor
arpl
bound
xor
add
xor
xor
xor
xor
arpl
xor
xor
xor
data16
cmp
xor
xor
arpl
xor
ss
ss
popa
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
ss
xor
xor
xor
aaa
xor
arpl
cmp
addr16
inc
jne
add
je
inc
jne
add
je
inc
jne
fs
jb
popa
je
add
je
inc
jne
fs
jb
popa
je
add
xor
ss
cmp
xor
arpl
xor
data16
arpl
popa
xor
arpl
add
popa
arpl
popa
xor
xor
xor
ss
xor
xor
xor
add
xor
aaa
xor
popa
xor
xor
xor
xor
xor
add
xor
popa
arpl
xor
aaa
aaa
popa
cmp
arpl
xor
xor
xor
xor
xor
arpl
xor
gs
bound
xor
xor
arpl
xor
bound
cmp
gs
arpl
arpl
aaa
xor
fs
bound
xor
xor
xor
aaa
arpl
aaa
cmp
arpl
arpl
ss
xor
bound
cmp
xor
xor
ss
bound
xor
add
bound
ss
popa
arpl
cmp
aaa
fs
xor
cmp
popa
xor
bound
cmp
xor
xor
bound
aaa
cmp
xor
cmp
xor
arpl
cmp
xor
aaa
xor
bound
gs
bound
cmp
arpl
xor
aaa
bound
cmp
add
xor
xor
cmp
bound
cmp
aaa
cmp
xor
arpl
xor
xor
xor
aaa
ss
xor
xor
xor
xor
popa
bound
bound
popa
xor
aaa
xor
aaa
cmp
add
cmp
xor
cmp
xor
xor
xor
xor
bound
cmp
xor
xor
arpl
arpl
xor
arpl
fs
ss
cmp
xor
add
xor
bound
cmp
cmp
xor
xor
xor
xor
aaa
xor
popa
add
data16
gs
popa
xor
arpl
xor
popa
cmp
aaa
arpl
xor
popa
xor
arpl
cmp
arpl
xor
arpl
xor
xor
xor
fs
arpl
xor
arpl
cmp
cmp
xor
xor
xor
xor
bound
xor
outs
bound
arpl
gs
outs
add
jbe
imul
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
imul
add
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
arpl
xor
arpl
bound
aaa
cmp
arpl
cmp
cmp
gs
aaa
add
fs
arpl
bound
data16
xor
xor
xor
ss
bound
xor
add
bound
data16
xor
xor
xor
cmp
ss
xor
xor
xor
xor
arpl
data16
cmp
xor
xor
xor
cmp
xor
xor
data16
xor
popa
xor
bound
arpl
gs
xor
cmp
cmp
xor
xor
arpl
bound
cmp
xor
xor
cmp
xor
arpl
arpl
xor
gs
data16
jne
push
outs
jb
add
cmp
xor
aaa
xor
xor
aaa
xor
xor
popa
popa
data16
xor
arpl
arpl
xor
cmp
aaa
xor
xor
bound
popa
bound
gs
xor
cmp
xor
xor
xor
arpl
cmp
popa
fs
aaa
gs
popa
xor
xor
xor
aaa
cmp
add
cmp
xor
arpl
xor
xor
bound
xor
fs
xor
xor
xor
add
push
ins
jne
imul
add
push
gs
imul
je
popa
ins
imul
je
ins
gs
gs
imul
pop
arpl
aaa
xor
xor
xor
xor
xor
bound
xor
xor
aaa
add
je
gs
imul
jb
add
imul
gs
imul
imul
outs
outs
add
je
ins
jne
imul
inc
outs
push
je
jb
add
outs
jo
inc
outs
push
je
jo
dec
outs
jae
popa
ins
ins
add
imul
add
outs
imul
add
jo
inc
outs
inc
jne
jo
ins
jo
jne
jo
je
je
imul
gs
bound
popa
xor
xor
data16
cmp
xor
ss
cmp
xor
arpl
xor
xor
xor
cmp
ss
popa
xor
bound
xor
bound
push
gs
add
inc
bound
addr16
jb
jae
outs
je
ja
add
jb
ins
add
gs
xor
fs
xor
cmp
cmp
xor
data16
outs
popa
ins
add
je
dec
popa
ins
add
arpl
xor
xor
xor
xor
aaa
cmp
bound
popa
xor
cmp
xor
arpl
xor
inc
jno
popa
ins
jae
outs
bound
data16
arpl
outs
add
bound
inc
gs
popa
jae
inc
outs
fs
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
jne
inc
jne
arpl
arpl
ins
arpl
outs
add
jo
arpl
jns
arpl
xor
ss
xor
xor
popa
xor
xor
popa
xor
aaa
xor
xor
xor
jo
jb
ins
gs
jb
add
je
push
popa
jb
ins
gs
jb
add
jo
jns
ins
imul
popa
push
arpl
jo
dec
bound
arpl
gs
imul
jbe
ins
add
je
push
jb
add
ins
jae
add
ins
ins
add
fs
arpl
xor
xor
bound
ss
arpl
ss
popa
data16
aaa
arpl
cmp
bound
add
xor
fs
xor
xor
xor
xor
xor
cmp
bound
add
xor
xor
data16
ss
xor
xor
xor
arpl
xor
arpl
gs
arpl
data16
ss
bound
xor
bound
data16
xor
add
imul
gs
popa
ins
imul
arpl
outs
fs
je
add
outs
jbe
jb
gs
add
gs
popa
ins
imul
arpl
jns
add
imul
ja
imul
fs
jae
outs
add
popa
fs
outs
bound
arpl
jo
add
outs
inc
outs
outs
jbe
jb
add
xor
popa
xor
bound
xor
fs
cmp
arpl
xor
add
data16
xor
xor
bound
bound
bound
cmp
gs
bound
data16
cmp
arpl
xor
cmp
xor
popa
xor
aaa
cmp
gs
xor
popa
bound
popa
add
xor
cmp
cmp
xor
popa
xor
xor
ss
xor
aaa
arpl
add
cmp
xor
xor
xor
xor
arpl
popa
xor
cmp
bound
fs
arpl
cmp
xor
xor
xor
xor
xor
xor
bound
gs
xor
aaa
add
xor
xor
xor
xor
cmp
cmp
bound
xor
xor
arpl
data16
arpl
cmp
xor
ss
xor
xor
xor
cmp
xor
arpl
arpl
bound
bound
xor
aaa
arpl
popa
xor
xor
data16
data16
arpl
xor
xor
bound
aaa
data16
xor
arpl
xor
xor
xor
cmp
ss
xor
cmp
xor
xor
cmp
xor
arpl
bound
data16
xor
xor
popa
arpl
bound
cmp
xor
xor
aaa
fs
arpl
xor
fs
bound
bound
xor
bound
xor
gs
arpl
xor
bound
xor
arpl
xor
bound
popa
xor
xor
xor
data16
arpl
xor
arpl
arpl
xor
xor
xor
xor
xor
aaa
ss
bound
add
xor
cmp
cmp
xor
cmp
xor
popa
gs
xor
cmp
xor
bound
add
cmp
arpl
xor
xor
xor
bound
aaa
xor
xor
bound
aaa
gs
arpl
xor
xor
cmp
xor
cmp
cmp
xor
gs
xor
add
cmp
bound
xor
data16
bound
xor
aaa
popa
gs
fs
add
xor
arpl
xor
cmp
data16
xor
xor
aaa
xor
arpl
bound
xor
add
xor
xor
bound
xor
bound
xor
xor
bound
arpl
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
fs
inc
jb
outs
jb
jb
ins
outs
jbe
pop
inc
jb
outs
jb
push
jb
je
push
gs
ins
je
dec
jae
outs
push
gs
outs
outs
jae
add
jae
outs
outs
jae
add
imul
outs
add
inc
jb
outs
jb
add
popa
bound
bound
xor
xor
xor
cmp
arpl
arpl
add
je
arpl
xor
ss
arpl
bound
arpl
data16
xor
fs
bound
add
jb
jo
jb
jns
popa
ins
add
outs
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
data16
cmp
xor
cmp
xor
bound
xor
add
xor
xor
fs
bound
fs
cmp
arpl
xor
xor
ss
xor
cmp
xor
bound
xor
xor
aaa
xor
data16
cmp
xor
cmp
cmp
xor
aaa
add
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
popa
xor
arpl
xor
xor
arpl
popa
fs
xor
aaa
aaa
fs
arpl
cmp
xor
aaa
add
aaa
gs
xor
bound
cmp
cmp
xor
xor
xor
xor
arpl
popa
add
popa
cmp
cmp
xor
bound
aaa
xor
xor
xor
xor
xor
bound
gs
ss
bound
aaa
cmp
xor
xor
data16
addr16
push
jne
je
inc
push
gs
push
outs
imul
jns
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
push
jns
add
arpl
arpl
cmp
cmp
arpl
xor
fs
arpl
bound
arpl
bound
xor
aaa
xor
add
xor
arpl
cmp
aaa
xor
gs
xor
cmp
aaa
bound
add
xor
bound
cmp
xor
aaa
popa
xor
xor
arpl
data16
data16
arpl
aaa
xor
cmp
xor
xor
cmp
xor
xor
arpl
xor
xor
xor
ss
arpl
cmp
cmp
popa
aaa
xor
xor
xor
cmp
xor
cmp
add
xor
xor
arpl
arpl
aaa
xor
ss
xor
cmp
bound
add
cmp
bound
xor
xor
ss
aaa
arpl
xor
xor
xor
add
xor
xor
xor
arpl
bound
xor
ss
xor
arpl
cmp
cmp
xor
bound
xor
arpl
bound
ss
xor
push
gs
add
cmp
xor
xor
xor
xor
popaw
gs
xor
arpl
add
cmp
xor
bound
bound
cmp
cmp
xor
xor
data16
xor
cmp
popa
cmp
arpl
fs
xor
xor
cmp
arpl
gs
xor
arpl
gs
xor
xor
fs
popa
xor
gs
fs
xor
bound
xor
xor
xor
xor
xor
bound
popa
popa
xor
add
aaa
xor
xor
xor
xor
fs
xor
aaa
arpl
xor
cmp
xor
xor
xor
arpl
arpl
aaa
xor
xor
popa
cmp
xor
gs
xor
xor
arpl
xor
arpl
arpl
ss
xor
aaa
cmp
popa
arpl
xor
xor
xor
cmp
arpl
bound
data16
arpl
gs
xor
gs
xor
xor
xor
bound
xor
popa
xor
arpl
add
gs
xor
cmp
xor
xor
bound
xor
gs
cmp
bound
add
xor
cmp
arpl
xor
xor
xor
xor
ss
cmp
arpl
add
xor
xor
xor
xor
xor
gs
cmp
xor
bound
aaa
cmp
xor
xor
xor
xor
xor
xor
xor
data16
data16
aaa
ss
xor
aaa
cmp
data16
cmp
cmp
bound
cmp
fs
add
cmp
xor
xor
xor
aaa
xor
cmp
cmp
xor
xor
bound
xor
xor
arpl
aaa
cmp
xor
popa
cmp
aaa
data16
xor
xor
popa
bound
xor
gs
add
popa
xor
xor
xor
xor
xor
popa
xor
ss
xor
add
arpl
aaa
data16
xor
xor
xor
cmp
xor
ss
xor
xor
arpl
bound
cmp
gs
xor
gs
aaa
arpl
cmp
popa
xor
xor
add
cmp
xor
cmp
xor
xor
aaa
aaa
bound
xor
cmp
popa
xor
add
xor
xor
bound
arpl
xor
data16
arpl
gs
xor
xor
cmp
add
xor
bound
xor
data16
xor
xor
xor
cmp
xor
fs
xor
xor
xor
arpl
cmp
xor
data16
xor
cmp
arpl
popa
arpl
ss
xor
inc
ins
outs
jae
add
popa
arpl
xor
xor
xor
data16
bound
cmp
xor
add
cmp
bound
aaa
xor
ss
xor
bound
xor
xor
gs
aaa
bound
add
arpl
bound
cmp
xor
popa
xor
arpl
xor
xor
bound
data16
bound
xor
xor
xor
cmp
bound
xor
xor
arpl
xor
arpl
aaa
popa
xor
aaa
arpl
xor
cmp
aaa
ss
xor
arpl
cmp
arpl
xor
xor
cmp
xor
aaa
arpl
bound
data16
arpl
cmp
xor
popa
xor
arpl
xor
cmp
xor
bound
popa
xor
cmp
xor
aaa
popa
cmp
add
bound
bound
data16
xor
ss
popa
bound
popaw
ss
aaa
xor
add
xor
xor
bound
popa
xor
xor
fs
xor
bound
popa
xor
arpl
arpl
xor
cmp
xor
gs
bound
arpl
bound
gs
xor
arpl
arpl
cmp
popa
arpl
cmp
xor
xor
aaa
bound
aaa
xor
cmp
data16
xor
xor
xor
xor
arpl
aaa
aaa
xor
popa
xor
arpl
ins
gs
popa
add
outs
gs
js
gs
imul
outs
jb
dec
outs
outs
jb
add
jb
popa
ins
imul
aaa
aaa
ss
bound
xor
popa
xor
xor
aaa
xor
cmp
add
xor
xor
aaa
aaa
cmp
popa
aaa
xor
xor
xor
xor
arpl
arpl
popa
arpl
xor
arpl
aaa
bound
fs
cmp
xor
xor
arpl
cmp
ss
xor
data16
bound
xor
xor
addr16
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
inc
outs
outs
jbe
jb
gs
add
gs
popa
ins
imul
ss
xor
xor
popaw
fs
fs
aaa
arpl
xor
xor
cmp
xor
arpl
xor
cmp
popa
data16
xor
arpl
cmp
bound
xor
cmp
xor
add
bound
cmp
aaa
cmp
xor
xor
xor
cmp
xor
cmp
xor
add
xor
fs
xor
popa
bound
xor
gs
xor
bound
data16
xor
fs
xor
xor
xor
fs
xor
popa
aaa
bound
ss
aaa
data16
data16
xor
popa
xor
aaa
xor
bound
cmp
xor
data16
xor
cmp
arpl
xor
fs
bound
xor
xor
xor
fs
data16
aaa
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
cmp
popa
add
xor
xor
xor
aaa
fs
fs
arpl
aaa
cmp
xor
data16
je
js
push
jb
je
jb
push
outs
outs
push
jb
je
jb
arpl
xor
aaa
xor
xor
arpl
bound
xor
xor
gs
popa
xor
aaa
add
xor
arpl
cmp
xor
cmp
bound
xor
xor
cmp
xor
cmp
add
xor
bound
bound
fs
data16
arpl
xor
aaa
xor
xor
xor
xor
xor
bound
arpl
xor
xor
xor
aaa
xor
xor
arpl
cmp
xor
popa
xor
aaa
xor
xor
xor
xor
xor
arpl
gs
cmp
xor
data16
xor
xor
aaa
fs
xor
aaa
xor
data16
add
bound
cmp
fs
arpl
xor
cmp
xor
xor
cmp
popa
arpl
cmp
add
outs
add
popa
jb
dec
bound
arpl
je
jb
inc
jb
popa
jns
push
jb
jo
jb
jns
popa
ins
add
ins
ins
outs
je
dec
outs
je
addr16
inc
ins
outs
popa
je
inc
outs
fs
bound
arpl
outs
fs
jb
popa
jns
inc
outs
outs
jae
jb
arpl
add
add
xor
xor
bound
xor
xor
xor
fs
bound
popa
bound
add
outs
jae
add
outs
jo
jb
jns
dec
outs
fs
je
add
popa
bound
bound
xor
xor
xor
aaa
xor
xor
xor
cmp
add
xor
bound
xor
data16
xor
xor
xor
bound
xor
arpl
data16
bound
xor
xor
xor
cmp
cmp
xor
aaa
bound
add
popa
bound
xor
xor
gs
xor
xor
cmp
bound
xor
xor
arpl
fs
xor
popa
popa
aaa
cmp
cmp
arpl
data16
data16
xor
arpl
ss
ss
bound
xor
cmp
arpl
xor
bound
cmp
xor
arpl
gs
popa
gs
fs
gs
xor
aaa
aaa
xor
xor
cmp
ss
xor
addr16
arpl
aaa
arpl
xor
xor
arpl
xor
cmp
xor
gs
aaa
xor
xor
add
je
push
jb
je
push
je
je
add
je
inc
outs
jb
popa
je
imul
pop
inc
outs
jb
popa
je
imul
pop
dec
outs
fs
je
je
outs
outs
add
je
dec
outs
fs
je
je
outs
outs
add
je
push
jne
je
inc
push
gs
dec
outs
fs
je
push
gs
dec
outs
fs
je
push
gs
push
jne
je
dec
popa
ins
add
je
push
jne
je
dec
popa
ins
add
jne
push
je
push
je
jb
dec
bound
arpl
jb
je
inc
outs
fs
bound
arpl
jb
je
push
je
jb
inc
jb
popa
jns
push
jb
je
inc
outs
fs
jb
popa
jns
push
jb
je
push
jb
jo
jb
jns
popa
ins
add
imul
bound
popa
cmp
xor
cmp
xor
aaa
cmp
gs
arpl
aaa
popa
xor
xor
arpl
cmp
gs
xor
xor
xor
gs
popa
xor
bound
fs
cmp
xor
bound
ss
xor
xor
arpl
xor
arpl
bound
cmp
fs
data16
xor
bound
bound
aaa
bound
arpl
xor
aaa
xor
cmp
cmp
xor
xor
arpl
bound
popa
xor
xor
xor
xor
add
data16
xor
xor
aaa
xor
fs
cmp
fs
xor
add
bound
ss
aaa
aaa
xor
xor
cmp
xor
xor
popa
aaa
bound
xor
ss
xor
push
jb
je
dec
jne
ins
add
imul
imul
imul
popa
jbe
push
arpl
jo
add
imul
add
imul
outs
je
je
js
add
imul
jae
popa
arpl
ja
add
push
arpl
popa
jb
add
jb
jns
je
jb
add
cmp
xor
arpl
arpl
bound
aaa
cmp
arpl
cmp
xor
aaa
xor
xor
arpl
add
xor
xor
cmp
xor
cmp
xor
aaa
xor
xor
xor
arpl
bound
arpl
data16
popa
xor
aaa
popa
bound
xor
arpl
xor
add
xor
fs
fs
cmp
xor
xor
bound
ss
add
xor
xor
arpl
popaw
xor
bound
bound
aaa
xor
xor
data16
add
je
arpl
xor
data16
arpl
fs
cmp
xor
xor
xor
xor
add
je
arpl
xor
cmp
xor
aaa
xor
bound
xor
cmp
xor
xor
xor
bound
arpl
popa
add
je
arpl
xor
xor
xor
xor
data16
bound
xor
xor
bound
data16
je
arpl
fs
arpl
arpl
fs
xor
data16
arpl
xor
cmp
arpl
addr16
arpl
xor
data16
xor
cmp
xor
xor
bound
cmp
add
je
gs
outs
jb
je
ins
add
gs
add
xor
xor
xor
xor
cmp
cmp
xor
xor
fs
cmp
arpl
arpl
xor
xor
xor
xor
gs
xor
aaa
xor
arpl
xor
aaa
cmp
xor
bound
cmp
data16
gs
cmp
addr16
arpl
gs
popaw
bound
arpl
ss
aaa
cmp
gs
arpl
aaa
data16
add
je
arpl
gs
popaw
bound
arpl
ss
aaa
cmp
gs
arpl
aaa
data16
add
xor
xor
data16
arpl
xor
xor
gs
xor
xor
add
cmp
ss
xor
xor
xor
xor
cmp
bound
xor
xor
add
xor
xor
ss
cmp
ss
bound
popa
arpl
ss
xor
xor
xor
xor
cmp
xor
xor
cmp
cmp
gs
xor
ss
arpl
data16
popa
xor
aaa
xor
ss
cmp
cmp
aaa
cmp
xor
arpl
bound
aaa
cmp
xor
arpl
gs
cmp
xor
xor
arpl
xor
aaa
cmp
xor
xor
arpl
cmp
xor
xor
xor
xor
fs
aaa
xor
cmp
gs
cmp
bound
arpl
add
ss
popa
ss
arpl
xor
popa
popa
xor
xor
xor
xor
cmp
add
xor
arpl
xor
gs
cmp
xor
arpl
xor
xor
cmp
add
cmp
xor
xor
xor
gs
popa
popa
gs
cmp
xor
add
cmp
xor
xor
aaa
xor
data16
xor
xor
cmp
ss
cmp
add
xor
xor
cmp
xor
xor
aaa
bound
cmp
arpl
data16
xor
arpl
fs
xor
popa
xor
aaa
xor
xor
xor
xor
xor
xor
xor
aaa
bound
arpl
xor
arpl
arpl
xor
popa
bound
bound
xor
xor
xor
arpl
aaa
add
arpl
cmp
xor
xor
cmp
bound
xor
popa
xor
xor
ss
add
xor
xor
ss
xor
xor
bound
xor
popa
data16
cmp
aaa
arpl
arpl
cmp
data16
xor
xor
aaa
xor
arpl
xor
fs
aaa
arpl
add
xor
cmp
popa
xor
bound
popa
bound
xor
cmp
bound
popaw
popa
xor
add
xor
xor
aaa
popa
xor
xor
popa
xor
arpl
cmp
aaa
cmp
xor
add
arpl
xor
aaa
arpl
xor
arpl
popa
xor
cmp
xor
xor
arpl
xor
xor
xor
cmp
cmp
xor
xor
xor
fs
add
xor
bound
cmp
bound
cmp
cmp
xor
cmp
cmp
gs
xor
xor
xor
xor
xor
xor
xor
popa
xor
xor
xor
xor
arpl
bound
popaw
ss
xor
aaa
fs
aaa
arpl
add
xor
cmp
arpl
xor
ss
cmp
xor
cmp
xor
xor
xor
popa
jb
xor
popa
jb
xor
arpl
xor
xor
popa
xor
xor
xor
cmp
cmp
cmp
xor
arpl
xor
xor
popa
ss
xor
xor
xor
ss
bound
gs
arpl
popa
xor
add
bound
xor
xor
data16
xor
gs
xor
xor
gs
add
aaa
bound
xor
gs
xor
data16
xor
xor
popa
add
cmp
xor
xor
xor
ss
xor
aaa
arpl
popa
xor
popa
xor
arpl
bound
cmp
xor
cmp
xor
xor
aaa
data16
xor
arpl
cmp
aaa
cmp
fs
data16
cmp
bound
xor
xor
xor
arpl
arpl
arpl
arpl
ss
xor
xor
xor
xor
ss
popa
ss
xor
cmp
arpl
xor
cmp
xor
xor
gs
xor
fs
data16
xor
xor
cmp
cmp
cmp
fs
xor
arpl
arpl
add
xor
xor
cmp
data16
popa
xor
gs
popa
xor
xor
gs
add
arpl
xor
popa
xor
arpl
xor
xor
cmp
cmp
xor
add
xor
aaa
arpl
data16
xor
cmp
xor
xor
xor
xor
add
arpl
gs
fs
xor
bound
xor
gs
cmp
xor
xor
popa
aaa
xor
xor
cmp
xor
aaa
arpl
xor
xor
xor
xor
gs
popa
xor
popa
xor
data16
xor
xor
xor
bound
xor
xor
add
xor
fs
xor
arpl
cmp
cmp
data16
xor
popa
cmp
cmp
add
xor
data16
xor
cmp
cmp
xor
bound
xor
arpl
xor
bound
xor
cmp
xor
gs
popa
aaa
ss
cmp
xor
add
xor
aaa
cmp
xor
cmp
aaa
xor
xor
xor
xor
bound
xor
cmp
xor
xor
xor
xor
cmp
aaa
xor
ss
aaa
data16
aaa
xor
cmp
arpl
arpl
xor
xor
xor
bound
fs
xor
ss
xor
xor
add
gs
cmp
xor
xor
xor
arpl
xor
xor
ss
fs
cmp
arpl
xor
arpl
xor
cmp
aaa
xor
aaa
xor
xor
xor
xor
add
xor
popa
arpl
aaa
xor
xor
xor
fs
bound
popa
arpl
popa
cmp
arpl
cmp
cmp
xor
xor
aaa
arpl
cmp
fs
xor
xor
bound
xor
add
xor
xor
xor
cmp
xor
xor
xor
xor
bound
popa
data16
xor
xor
xor
xor
cmp
xor
cmp
fs
xor
data16
xor
cmp
xor
xor
xor
add
xor
xor
aaa
data16
xor
xor
xor
xor
xor
xor
xor
cmp
add
data16
cmp
cmp
gs
xor
xor
cmp
xor
data16
xor
popa
add
xor
cmp
xor
bound
popa
xor
xor
xor
xor
popa
aaa
xor
arpl
xor
aaa
xor
cmp
arpl
xor
xor
cmp
cmp
bound
xor
popa
xor
bound
data16
gs
arpl
xor
popa
xor
data16
arpl
fs
xor
ss
cmp
aaa
cmp
fs
xor
fs
xor
xor
arpl
arpl
xor
xor
ss
fs
popa
xor
xor
xor
popa
xor
add
popa
xor
xor
xor
xor
cmp
arpl
ss
aaa
fs
bound
add
arpl
data16
aaa
bound
xor
aaa
bound
cmp
aaa
xor
data16
xor
add
bound
popa
ss
cmp
xor
xor
xor
data16
bound
xor
add
xor
bound
aaa
gs
xor
cmp
xor
xor
popa
xor
bound
cmp
bound
xor
xor
xor
xor
bound
xor
xor
xor
xor
xor
bound
bound
xor
popa
cmp
bound
add
cmp
xor
xor
xor
popa
xor
popa
bound
aaa
ss
xor
arpl
xor
xor
gs
cmp
xor
popa
cmp
xor
popa
xor
xor
popa
add
cmp
ss
ss
bound
xor
xor
arpl
gs
xor
xor
add
xor
xor
fs
xor
xor
aaa
data16
bound
ss
xor
arpl
xor
arpl
aaa
xor
gs
bound
bound
xor
xor
xor
data16
xor
xor
xor
arpl
aaa
xor
xor
xor
bound
bound
arpl
aaa
xor
ss
xor
popa
xor
data16
aaa
popa
cmp
xor
ss
arpl
aaa
aaa
arpl
cmp
arpl
xor
xor
popa
bound
cmp
xor
xor
add
gs
arpl
xor
xor
xor
xor
bound
add
bound
xor
xor
cmp
arpl
xor
xor
xor
xor
xor
arpl
bound
cmp
aaa
popaw
xor
arpl
popa
popa
cmp
aaa
ss
xor
aaa
xor
arpl
xor
gs
bound
fs
gs
xor
cmp
xor
xor
xor
add
arpl
popa
cmp
xor
xor
aaa
bound
xor
cmp
xor
data16
add
add
xor
xor
bound
bound
xor
xor
ss
xor
cmp
gs
add
aaa
xor
xor
xor
xor
xor
xor
xor
bound
add
cmp
xor
xor
xor
arpl
arpl
bound
xor
xor
xor
bound
data16
xor
popa
xor
cmp
xor
xor
xor
gs
popa
add
aaa
xor
popa
popa
popa
cmp
xor
xor
xor
xor
xor
bound
cmp
add
xor
xor
xor
cmp
gs
aaa
gs
cmp
aaa
add
arpl
xor
cmp
xor
ss
xor
xor
aaa
xor
data16
xor
xor
arpl
cmp
xor
xor
gs
arpl
popa
xor
xor
xor
xor
xor
xor
arpl
xor
xor
xor
popa
fs
aaa
xor
cmp
xor
bound
add
arpl
arpl
bound
ss
fs
xor
xor
aaa
bound
xor
aaa
xor
xor
cmp
arpl
xor
popa
cmp
popa
bound
arpl
arpl
add
xor
fs
xor
xor
arpl
aaa
arpl
aaa
cmp
xor
cmp
cmp
xor
arpl
xor
xor
xor
gs
data16
cmp
data16
popa
cmp
add
xor
aaa
xor
bound
xor
xor
xor
arpl
xor
popa
cmp
xor
bound
xor
xor
xor
xor
popa
arpl
xor
xor
popa
xor
aaa
cmp
fs
cmp
arpl
fs
xor
xor
xor
xor
bound
xor
aaa
cmp
cmp
popa
bound
arpl
aaa
xor
cmp
gs
popa
xor
bound
arpl
xor
bound
popa
aaa
bound
popa
add
xor
xor
gs
xor
xor
xor
popa
xor
cmp
aaa
xor
add
arpl
popa
aaa
arpl
cmp
cmp
xor
xor
xor
xor
xor
cmp
add
cmp
popa
xor
xor
cmp
arpl
popa
arpl
xor
xor
cmp
cmp
cmp
xor
arpl
xor
xor
cmp
arpl
data16
xor
popa
cmp
arpl
cmp
add
arpl
gs
xor
ss
gs
bound
xor
xor
popa
aaa
add
aaa
xor
xor
cmp
xor
aaa
xor
xor
gs
data16
xor
add
xor
data16
aaa
popa
xor
ss
xor
arpl
bound
cmp
arpl
xor
data16
xor
fs
xor
cmp
cmp
xor
xor
xor
arpl
xor
data16
xor
xor
bound
xor
xor
popa
popa
fs
xor
add
xor
cmp
arpl
xor
aaa
xor
bound
cmp
ss
popa
fs
xor
xor
arpl
cmp
xor
arpl
xor
aaa
xor
cmp
cmp
xor
aaa
arpl
aaa
add
cmp
gs
xor
xor
popaw
xor
popa
xor
aaa
cmp
gs
aaa
cmp
add
cmp
bound
bound
xor
xor
xor
bound
xor
xor
popa
data16
arpl
arpl
data16
cmp
xor
arpl
gs
data16
bound
data16
xor
arpl
xor
bound
xor
xor
xor
cmp
xor
arpl
data16
add
xor
fs
bound
xor
xor
bound
cmp
xor
cmp
cmp
arpl
data16
gs
xor
cmp
bound
data16
data16
data16
aaa
popa
cmp
xor
cmp
bound
cmp
xor
ss
xor
cmp
fs
xor
xor
xor
xor
xor
gs
arpl
xor
xor
add
xor
fs
xor
bound
aaa
xor
bound
bound
xor
cmp
xor
arpl
xor
xor
xor
xor
xor
cmp
cmp
xor
xor
cmp
xor
xor
arpl
arpl
arpl
ss
ss
ss
xor
add
xor
aaa
arpl
arpl
xor
cmp
aaa
xor
aaa
arpl
fs
data16
xor
xor
xor
bound
xor
bound
popa
cmp
arpl
cmp
fs
data16
xor
xor
cmp
xor
arpl
fs
xor
data16
xor
xor
xor
arpl
arpl
arpl
cmp
cmp
xor
gs
xor
fs
xor
arpl
cmp
arpl
cmp
cmp
xor
xor
cmp
popa
xor
aaa
aaa
xor
xor
xor
cmp
xor
xor
xor
aaa
arpl
cmp
xor
xor
aaa
add
xor
xor
xor
cmp
xor
xor
xor
ss
popaw
xor
arpl
xor
xor
cmp
bound
xor
xor
xor
xor
bound
xor
popa
xor
arpl
xor
cmp
data16
xor
cmp
cmp
xor
gs
arpl
add
xor
cmp
cmp
arpl
ss
data16
xor
aaa
cmp
xor
xor
add
xor
xor
xor
gs
xor
xor
bound
xor
add
bound
xor
xor
xor
data16
xor
xor
cmp
arpl
bound
xor
xor
arpl
xor
xor
cmp
popa
xor
cmp
xor
arpl
xor
xor
bound
cmp
arpl
arpl
arpl
ss
cmp
xor
ss
popa
aaa
cmp
bound
add
cmp
gs
bound
bound
cmp
gs
cmp
aaa
xor
xor
cmp
arpl
add
xor
arpl
xor
bound
xor
cmp
popa
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
data16
cmp
arpl
arpl
aaa
arpl
xor
xor
arpl
aaa
xor
cmp
cmp
xor
xor
arpl
xor
cmp
ss
xor
xor
xor
xor
data16
arpl
xor
xor
xor
popa
xor
popa
xor
ss
xor
arpl
xor
aaa
bound
xor
arpl
xor
xor
arpl
aaa
aaa
bound
data16
cmp
add
xor
arpl
arpl
xor
aaa
bound
xor
gs
cmp
xor
bound
arpl
xor
xor
xor
xor
cmp
bound
xor
ss
xor
add
xor
bound
bound
popa
popa
xor
fs
popa
xor
xor
xor
xor
xor
add
arpl
popa
bound
xor
gs
arpl
cmp
xor
xor
xor
xor
xor
add
popa
xor
xor
arpl
xor
cmp
aaa
xor
ss
xor
xor
popa
popa
popa
aaa
add
popa
bound
gs
aaa
xor
xor
aaa
xor
ss
xor
aaa
fs
data16
fs
aaa
xor
xor
xor
xor
xor
xor
ss
popa
cmp
arpl
xor
xor
popa
xor
cmp
cmp
cmp
xor
arpl
add
xor
cmp
xor
cmp
xor
cmp
bound
xor
xor
bound
xor
xor
xor
xor
gs
cmp
arpl
cmp
bound
arpl
arpl
ss
add
xor
xor
cmp
cmp
popa
bound
xor
xor
aaa
fs
aaa
xor
xor
arpl
gs
gs
popa
popa
xor
arpl
xor
xor
aaa
cmp
cmp
cmp
arpl
arpl
gs
xor
cmp
xor
gs
ss
cmp
ss
arpl
xor
xor
xor
aaa
bound
cmp
cmp
xor
xor
popa
add
arpl
xor
data16
xor
cmp
xor
arpl
fs
xor
arpl
xor
xor
xor
arpl
xor
cmp
xor
fs
arpl
xor
arpl
ss
cmp
xor
bound
data16
cmp
xor
arpl
xor
xor
bound
xor
xor
xor
popa
bound
xor
ss
arpl
xor
add
cmp
cmp
xor
cmp
bound
xor
cmp
xor
xor
xor
add
aaa
xor
arpl
cmp
data16
xor
arpl
xor
cmp
gs
arpl
xor
xor
xor
cmp
cmp
xor
xor
xor
xor
add
xor
xor
popa
xor
xor
xor
xor
aaa
cmp
xor
cmp
xor
xor
xor
data16
arpl
cmp
aaa
xor
xor
popa
cmp
xor
xor
aaa
xor
gs
bound
xor
xor
cmp
xor
arpl
arpl
xor
xor
cmp
bound
ss
cmp
arpl
cmp
aaa
xor
bound
arpl
aaa
xor
xor
cmp
cmp
xor
cmp
xor
bound
xor
arpl
arpl
xor
aaa
xor
cmp
xor
gs
xor
cmp
cmp
popa
popa
xor
add
aaa
xor
popa
arpl
cmp
cmp
xor
xor
arpl
cmp
cmp
aaa
xor
add
xor
xor
cmp
cmp
arpl
cmp
fs
xor
aaa
add
xor
bound
popa
xor
cmp
xor
xor
xor
cmp
xor
add
xor
popa
xor
cmp
gs
arpl
cmp
xor
data16
bound
data16
xor
cmp
gs
xor
data16
xor
bound
aaa
cmp
xor
data16
cmp
xor
xor
xor
cmp
gs
xor
xor
arpl
arpl
fs
xor
cmp
data16
xor
xor
arpl
cmp
xor
xor
arpl
xor
bound
xor
xor
xor
xor
popa
fs
gs
cmp
xor
aaa
xor
xor
bound
xor
cmp
xor
data16
bound
xor
popa
xor
xor
popa
xor
cmp
xor
xor
xor
xor
arpl
xor
xor
data16
xor
aaa
cmp
xor
cmp
xor
xor
fs
add
bound
cmp
popa
gs
data16
xor
xor
arpl
popa
xor
add
bound
xor
bound
xor
xor
xor
xor
fs
fs
arpl
ss
bound
ss
cmp
fs
xor
data16
bound
arpl
popa
xor
xor
aaa
xor
xor
aaa
cmp
xor
popa
fs
xor
xor
xor
cmp
data16
xor
xor
arpl
arpl
xor
cmp
arpl
xor
xor
arpl
ss
gs
ss
cmp
xor
popa
xor
xor
add
xor
xor
arpl
gs
xor
cmp
xor
xor
xor
cmp
arpl
bound
arpl
arpl
cmp
aaa
cmp
xor
cmp
ss
cmp
arpl
xor
cmp
bound
ss
xor
xor
fs
xor
xor
gs
cmp
arpl
xor
aaa
xor
xor
xor
cmp
cmp
xor
ss
cmp
xor
arpl
xor
arpl
gs
cmp
xor
xor
xor
fs
xor
xor
gs
xor
ss
xor
xor
aaa
cmp
ss
xor
xor
bound
addr16
arpl
arpl
bound
xor
xor
xor
xor
bound
bound
xor
xor
bound
xor
xor
cmp
bound
gs
add
fs
arpl
aaa
cmp
xor
cmp
aaa
gs
xor
cmp
data16
arpl
xor
xor
xor
xor
xor
cmp
bound
cmp
xor
add
cmp
xor
xor
bound
cmp
xor
xor
bound
xor
ss
cmp
arpl
xor
xor
cmp
aaa
bound
xor
bound
xor
data16
xor
xor
popa
cmp
xor
xor
arpl
xor
ss
cmp
ss
xor
aaa
xor
add
gs
xor
xor
cmp
xor
bound
cmp
data16
cmp
arpl
aaa
xor
cmp
fs
xor
xor
data16
xor
xor
add
xor
xor
bound
cmp
aaa
xor
cmp
xor
gs
popa
aaa
add
xor
aaa
popa
bound
xor
xor
xor
bound
xor
bound
bound
add
popa
gs
xor
cmp
arpl
arpl
xor
data16
xor
add
arpl
xor
arpl
gs
popa
xor
xor
cmp
arpl
bound
cmp
arpl
ss
xor
cmp
ss
aaa
xor
xor
cmp
bound
arpl
arpl
add
gs
gs
xor
ss
xor
cmp
xor
xor
xor
bound
aaa
add
cmp
xor
popa
bound
fs
xor
popa
xor
cmp
xor
xor
arpl
cmp
aaa
xor
cmp
popa
xor
data16
xor
ss
cmp
bound
add
xor
arpl
xor
popa
cmp
xor
aaa
xor
ss
aaa
cmp
bound
ss
add
xor
xor
aaa
aaa
xor
aaa
popa
popa
aaa
popa
xor
arpl
xor
xor
add
cmp
bound
bound
xor
xor
fs
fs
cmp
xor
gs
xor
arpl
xor
xor
xor
xor
xor
data16
bound
arpl
bound
arpl
xor
cmp
data16
xor
cmp
xor
cmp
xor
xor
add
xor
xor
arpl
xor
gs
xor
xor
aaa
bound
add
popa
bound
cmp
fs
bound
gs
bound
cmp
xor
xor
cmp
arpl
cmp
xor
bound
xor
cmp
fs
cmp
xor
popa
aaa
add
xor
popa
ss
xor
bound
cmp
data16
arpl
popa
arpl
arpl
popa
gs
arpl
aaa
xor
fs
bound
data16
bound
xor
popa
cmp
cmp
xor
xor
cmp
arpl
xor
xor
arpl
xor
xor
data16
bound
xor
data16
arpl
bound
xor
xor
popa
xor
arpl
xor
xor
xor
data16
ss
xor
xor
xor
xor
cmp
cmp
xor
cmp
arpl
aaa
bound
arpl
bound
cmp
cmp
aaa
bound
popa
xor
xor
aaa
xor
arpl
xor
cmp
xor
fs
popa
bound
cmp
fs
add
aaa
bound
bound
xor
popa
cmp
cmp
xor
xor
aaa
cmp
aaa
add
popa
popa
xor
fs
xor
bound
popa
fs
popa
cmp
xor
arpl
bound
arpl
cmp
cmp
xor
bound
bound
xor
data16
arpl
bound
data16
xor
xor
data16
xor
xor
aaa
xor
fs
xor
xor
arpl
arpl
popa
cmp
xor
cmp
xor
xor
xor
bound
xor
cmp
popa
xor
cmp
add
xor
xor
arpl
popa
xor
cmp
xor
xor
cmp
xor
add
xor
popa
xor
xor
xor
bound
fs
xor
fs
popa
add
xor
aaa
arpl
xor
cmp
ss
aaa
xor
xor
xor
xor
xor
xor
xor
bound
cmp
gs
xor
xor
bound
arpl
add
xor
xor
gs
popa
cmp
cmp
xor
cmp
arpl
xor
xor
add
xor
popaw
bound
xor
xor
aaa
bound
xor
xor
xor
add
bound
cmp
popa
aaa
xor
arpl
xor
gs
bound
popa
xor
data16
arpl
xor
xor
xor
aaa
arpl
data16
xor
arpl
arpl
cmp
cmp
arpl
aaa
data16
xor
ss
cmp
xor
cmp
add
popaw
xor
fs
xor
cmp
xor
bound
fs
xor
arpl
xor
arpl
popa
popaw
xor
fs
aaa
cmp
xor
arpl
xor
xor
popa
popaw
xor
cmp
data16
popa
xor
cmp
cmp
arpl
xor
xor
arpl
xor
aaa
bound
cmp
arpl
arpl
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
fs
add
cmp
xor
xor
arpl
xor
xor
xor
xor
cmp
add
cmp
data16
popa
aaa
xor
aaa
cmp
popa
popa
aaa
arpl
aaa
xor
xor
xor
cmp
cmp
fs
xor
xor
bound
popa
popa
xor
xor
xor
xor
xor
arpl
xor
xor
gs
xor
xor
xor
bound
xor
xor
cmp
add
aaa
popa
data16
ss
gs
arpl
bound
gs
arpl
arpl
cmp
bound
cmp
arpl
popa
data16
xor
arpl
fs
cmp
arpl
cmp
xor
cmp
cmp
arpl
popa
cmp
xor
cmp
data16
bound
arpl
xor
aaa
cmp
xor
aaa
xor
xor
ss
xor
xor
xor
arpl
xor
arpl
xor
xor
xor
popa
xor
bound
cmp
ss
xor
xor
bound
xor
add
xor
arpl
xor
arpl
cmp
xor
arpl
bound
xor
xor
arpl
xor
arpl
arpl
xor
xor
xor
cmp
xor
popa
bound
cmp
bound
aaa
xor
arpl
arpl
bound
aaa
xor
xor
xor
xor
xor
xor
arpl
xor
arpl
arpl
xor
xor
cmp
cmp
fs
fs
xor
xor
xor
ss
xor
xor
xor
fs
xor
xor
cmp
arpl
xor
cmp
cmp
bound
data16
aaa
xor
ss
xor
xor
aaa
cmp
cmp
add
cmp
xor
xor
gs
xor
fs
fs
xor
cmp
add
xor
cmp
arpl
cmp
cmp
xor
aaa
fs
cmp
aaa
add
bound
arpl
xor
aaa
xor
cmp
bound
xor
popa
aaa
popa
add
bound
cmp
aaa
xor
ss
fs
xor
arpl
cmp
xor
xor
xor
arpl
cmp
xor
cmp
xor
cmp
popa
arpl
xor
bound
xor
popa
add
xor
cmp
popa
fs
xor
xor
arpl
arpl
cmp
arpl
gs
ss
xor
aaa
cmp
cmp
fs
ss
xor
cmp
xor
popa
add
xor
cmp
bound
xor
cmp
xor
xor
xor
cmp
cmp
cmp
ss
cmp
arpl
ss
bound
xor
xor
arpl
arpl
xor
xor
bound
arpl
arpl
aaa
cmp
cmp
xor
aaa
xor
xor
cmp
add
cmp
aaa
bound
ss
xor
cmp
fs
data16
arpl
xor
arpl
xor
xor
cmp
ss
xor
xor
fs
fs
xor
aaa
xor
arpl
ss
popa
xor
popa
xor
cmp
arpl
add
xor
xor
fs
cmp
xor
xor
aaa
cmp
bound
arpl
xor
arpl
arpl
xor
xor
xor
xor
gs
popa
xor
fs
arpl
aaa
fs
popa
aaa
add
xor
xor
gs
cmp
arpl
gs
arpl
add
xor
data16
xor
popa
aaa
xor
arpl
xor
xor
popaw
add
arpl
bound
arpl
popa
xor
cmp
cmp
cmp
arpl
gs
xor
xor
xor
cmp
xor
bound
data16
bound
xor
arpl
xor
arpl
cmp
arpl
arpl
bound
bound
xor
xor
gs
xor
popaw
xor
xor
arpl
arpl
xor
gs
arpl
popa
ss
bound
cmp
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
bound
bound
xor
xor
arpl
gs
fs
ss
xor
aaa
xor
cmp
ss
xor
data16
cmp
xor
xor
popa
xor
cmp
ss
xor
arpl
cmp
xor
xor
cmp
arpl
xor
cmp
cmp
cmp
xor
xor
cmp
xor
xor
cmp
arpl
gs
cmp
xor
xor
aaa
popa
xor
xor
xor
cmp
popa
add
xor
bound
cmp
xor
cmp
xor
aaa
bound
add
xor
fs
xor
xor
popa
xor
xor
xor
xor
arpl
xor
add
xor
xor
xor
xor
data16
xor
bound
xor
aaa
xor
add
aaa
ss
popa
cmp
xor
gs
xor
xor
aaa
data16
xor
aaa
gs
xor
cmp
arpl
xor
popa
ss
xor
cmp
cmp
xor
arpl
xor
xor
gs
xor
xor
aaa
aaa
xor
xor
xor
xor
cmp
gs
add
cmp
data16
xor
bound
cmp
data16
xor
xor
popaw
data16
xor
cmp
xor
fs
xor
cmp
xor
fs
xor
arpl
aaa
xor
popa
fs
xor
xor
cmp
fs
xor
add
xor
bound
xor
xor
cmp
bound
xor
xor
popa
bound
xor
add
cmp
bound
cmp
xor
data16
xor
xor
xor
popa
xor
ss
cmp
arpl
bound
xor
arpl
cmp
bound
cmp
arpl
bound
ss
xor
add
bound
aaa
xor
aaa
xor
aaa
ss
cmp
cmp
cmp
cmp
xor
arpl
xor
fs
xor
xor
cmp
popa
arpl
xor
xor
arpl
cmp
xor
gs
cmp
xor
bound
cmp
popa
arpl
add
bound
xor
xor
xor
arpl
cmp
arpl
cmp
arpl
popa
cmp
xor
arpl
xor
xor
gs
xor
xor
aaa
bound
fs
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
aaa
bound
cmp
arpl
aaa
popa
bound
aaa
cmp
aaa
xor
xor
aaa
aaa
popa
data16
cmp
xor
xor
add
xor
cmp
xor
xor
xor
xor
xor
xor
data16
bound
bound
cmp
arpl
xor
arpl
aaa
xor
xor
bound
aaa
xor
xor
arpl
xor
xor
xor
arpl
bound
xor
xor
xor
xor
xor
arpl
aaa
cmp
add
arpl
cmp
cmp
xor
cmp
arpl
bound
cmp
cmp
xor
cmp
aaa
ss
xor
xor
xor
xor
bound
xor
xor
bound
arpl
arpl
data16
xor
xor
bound
xor
cmp
gs
bound
bound
add
xor
gs
xor
cmp
ss
xor
xor
data16
xor
xor
xor
arpl
gs
arpl
popa
xor
aaa
aaa
xor
cmp
aaa
cmp
xor
xor
arpl
xor
cmp
xor
data16
popa
aaa
xor
popa
cmp
cmp
bound
arpl
popa
bound
bound
xor
xor
xor
ss
cmp
xor
xor
xor
fs
arpl
ss
bound
xor
xor
xor
bound
data16
arpl
bound
xor
add
arpl
cmp
xor
arpl
xor
cmp
fs
xor
ss
add
popa
ss
cmp
xor
xor
xor
xor
xor
xor
xor
xor
bound
xor
arpl
arpl
xor
xor
cmp
xor
cmp
xor
data16
xor
add
xor
fs
xor
cmp
popa
aaa
xor
arpl
xor
cmp
xor
cmp
xor
add
xor
xor
arpl
arpl
gs
cmp
arpl
gs
gs
popa
xor
xor
cmp
cmp
fs
bound
xor
arpl
fs
xor
xor
cmp
xor
xor
ss
aaa
xor
aaa
xor
xor
cmp
arpl
xor
popa
aaa
arpl
bound
bound
xor
xor
arpl
xor
ss
ss
cmp
xor
cmp
xor
cmp
xor
xor
bound
add
xor
cmp
popa
arpl
xor
cmp
xor
xor
popa
xor
popa
fs
arpl
ss
xor
cmp
fs
xor
cmp
gs
popa
xor
cmp
add
cmp
bound
xor
xor
xor
arpl
cmp
cmp
ss
xor
popa
xor
bound
popa
add
xor
xor
aaa
arpl
arpl
xor
bound
aaa
gs
xor
cmp
add
xor
arpl
xor
xor
fs
xor
cmp
arpl
xor
arpl
xor
xor
aaa
xor
xor
xor
cmp
xor
arpl
xor
xor
gs
xor
arpl
xor
bound
fs
xor
arpl
xor
xor
data16
xor
ss
xor
cmp
arpl
xor
data16
xor
popa
cmp
xor
xor
xor
xor
aaa
cmp
ss
add
popa
xor
bound
xor
cmp
bound
cmp
arpl
xor
add
xor
arpl
xor
xor
ss
aaa
cmp
popa
xor
xor
xor
arpl
xor
xor
fs
xor
popa
xor
xor
fs
add
xor
xor
xor
bound
bound
xor
xor
aaa
xor
xor
cmp
add
cmp
popaw
arpl
popa
bound
ss
gs
xor
cmp
xor
xor
xor
bound
bound
bound
xor
xor
cmp
xor
popa
xor
aaa
data16
add
ss
xor
xor
aaa
xor
xor
data16
cmp
arpl
xor
xor
cmp
arpl
xor
xor
gs
arpl
bound
xor
popa
xor
xor
add
xor
cmp
xor
xor
cmp
popa
aaa
xor
bound
cmp
fs
arpl
aaa
xor
cmp
aaa
xor
cmp
aaa
bound
xor
xor
bound
cmp
xor
arpl
bound
ss
cmp
xor
cmp
xor
bound
xor
add
xor
xor
xor
data16
xor
aaa
xor
gs
cmp
xor
xor
xor
arpl
xor
gs
data16
xor
xor
gs
aaa
xor
arpl
arpl
bound
arpl
cmp
xor
popa
cmp
bound
xor
cmp
cmp
bound
cmp
xor
add
arpl
data16
xor
popa
xor
cmp
xor
bound
data16
add
cmp
ss
popa
data16
xor
fs
bound
xor
aaa
popa
xor
xor
ss
bound
xor
cmp
ss
xor
xor
xor
arpl
add
cmp
cmp
xor
xor
bound
xor
xor
data16
xor
xor
arpl
xor
xor
popa
aaa
ss
xor
xor
xor
popa
xor
xor
arpl
xor
popa
arpl
xor
xor
xor
xor
xor
xor
arpl
bound
arpl
cmp
bound
cmp
xor
fs
cmp
xor
arpl
arpl
add
arpl
cmp
aaa
xor
cmp
bound
cmp
arpl
xor
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
pop
aaa
jp
add
je
inc
jb
ja
gs
fs
jo
gs
addr16
gs
popa
add
aaa
popa
arpl
ss
popaw
xor
cmp
bound
xor
bound
xor
xor
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
xor
ss
bound
cmp
add
cmp
xor
xor
bound
xor
ss
popa
cmp
arpl
xor
xor
add
bound
ss
xor
xor
fs
xor
xor
xor
xor
arpl
cmp
gs
aaa
cmp
xor
xor
fs
popaw
arpl
xor
add
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
ss
add
xor
xor
aaa
xor
xor
fs
ss
aaa
cmp
xor
arpl
popa
bound
aaa
bound
cmp
xor
xor
xor
popa
xor
xor
xor
arpl
arpl
bound
bound
xor
aaa
aaa
xor
cmp
aaa
cmp
add
bound
xor
xor
gs
fs
cmp
xor
gs
gs
arpl
cmp
xor
xor
gs
xor
cmp
ss
xor
bound
xor
xor
addr16
arpl
aaa
xor
xor
popa
popa
popa
xor
xor
xor
aaa
popa
ss
cmp
xor
cmp
add
je
arpl
cmp
fs
xor
xor
fs
xor
fs
xor
arpl
bound
add
je
arpl
xor
xor
cmp
cmp
bound
xor
xor
xor
xor
cmp
cmp
addr16
arpl
xor
bound
cmp
popa
aaa
xor
cmp
ss
xor
ss
bound
xor
addr16
arpl
xor
bound
xor
aaa
bound
cmp
arpl
xor
xor
arpl
xor
gs
arpl
cmp
aaa
bound
xor
arpl
popa
xor
xor
cmp
xor
xor
aaa
xor
xor
addr16
arpl
xor
xor
arpl
aaa
cmp
xor
fs
xor
cmp
cmp
add
je
arpl
xor
aaa
xor
fs
xor
xor
arpl
xor
popa
popa
xor
xor
xor
add
je
arpl
popa
xor
xor
xor
xor
popa
xor
arpl
xor
xor
arpl
xor
add
je
arpl
xor
bound
gs
xor
xor
xor
xor
ss
xor
addr16
arpl
cmp
aaa
xor
xor
xor
xor
cmp
xor
xor
fs
popa
add
je
arpl
xor
xor
xor
cmp
xor
cmp
bound
xor
xor
xor
add
je
arpl
xor
cmp
xor
cmp
xor
aaa
xor
xor
xor
data16
popa
xor
xor
add
je
arpl
fs
data16
xor
arpl
cmp
xor
bound
xor
xor
cmp
addr16
arpl
xor
aaa
xor
xor
popa
ss
xor
xor
cmp
xor
xor
xor
cmp
add
bound
xor
aaa
xor
xor
xor
arpl
arpl
ss
bound
arpl
add
popa
bound
xor
popa
cmp
xor
cmp
xor
xor
xor
arpl
xor
add
xor
popa
arpl
cmp
arpl
cmp
cmp
xor
aaa
gs
xor
add
cmp
bound
xor
xor
ss
cmp
bound
xor
xor
aaa
xor
xor
arpl
bound
xor
fs
cmp
xor
arpl
xor
arpl
gs
cmp
xor
arpl
xor
fs
data16
xor
xor
xor
bound
xor
add
data16
xor
gs
xor
popa
ss
cmp
cmp
aaa
cmp
cmp
cmp
cmp
arpl
cmp
xor
xor
xor
gs
cmp
gs
arpl
aaa
xor
add
xor
xor
cmp
cmp
xor
xor
bound
aaa
xor
xor
bound
aaa
xor
xor
xor
popa
popa
arpl
cmp
aaa
fs
popa
xor
arpl
bound
aaa
bound
xor
add
bound
xor
xor
xor
cmp
xor
arpl
xor
popa
bound
cmp
cmp
xor
arpl
xor
xor
arpl
xor
xor
cmp
xor
bound
cmp
xor
arpl
cmp
popa
xor
xor
bound
popa
fs
xor
arpl
gs
bound
xor
fs
xor
xor
xor
xor
fs
arpl
add
aaa
xor
popa
xor
cmp
xor
xor
xor
aaa
ss
arpl
xor
xor
cmp
xor
popa
cmp
aaa
bound
bound
aaa
xor
xor
cmp
xor
arpl
add
xor
aaa
cmp
gs
xor
xor
cmp
cmp
xor
xor
xor
arpl
arpl
xor
xor
cmp
xor
xor
arpl
xor
popa
cmp
xor
add
xor
xor
ss
bound
cmp
xor
popa
xor
data16
xor
xor
arpl
xor
xor
gs
xor
bound
xor
xor
xor
xor
xor
arpl
xor
arpl
data16
popa
xor
cmp
xor
xor
aaa
cmp
aaa
arpl
aaa
bound
add
bound
xor
cmp
xor
xor
cmp
xor
popa
bound
data16
bound
cmp
add
popa
xor
arpl
cmp
xor
ss
cmp
bound
xor
xor
xor
arpl
xor
bound
xor
xor
xor
xor
aaa
xor
add
popa
cmp
popa
xor
popa
xor
cmp
bound
xor
xor
fs
xor
arpl
xor
xor
arpl
ss
cmp
xor
xor
xor
popa
xor
xor
bound
xor
xor
popa
bound
arpl
arpl
xor
aaa
arpl
xor
gs
xor
popa
data16
ss
xor
aaa
xor
xor
xor
xor
arpl
xor
xor
bound
xor
xor
arpl
ss
data16
gs
xor
xor
aaa
bound
xor
gs
add
arpl
xor
cmp
xor
xor
cmp
xor
xor
bound
add
xor
cmp
cmp
xor
xor
xor
xor
arpl
xor
xor
aaa
xor
arpl
xor
xor
fs
xor
xor
xor
xor
cmp
arpl
xor
arpl
popa
popa
xor
xor
gs
ss
bound
xor
cmp
ss
arpl
xor
xor
data16
xor
popa
arpl
cmp
gs
xor
xor
add
xor
arpl
fs
xor
popa
data16
arpl
bound
add
ss
ss
bound
xor
fs
xor
xor
gs
popa
jae
inc
jb
outs
jb
inc
ins
outs
jae
dec
popa
outs
fs
add
outs
push
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
fs
imul
inc
gs
jb
arpl
fs
jae
add
je
ins
popa
jae
dec
popa
ins
add
outs
arpl
jae
gs
gs
add
je
dec
jae
gs
popa
bound
inc
imul
push
jne
jo
outs
fs
push
add
jae
ins
gs
push
add
outs
push
push
add
push
jne
jo
outs
fs
jb
arpl
jae
inc
gs
outs
fs
gs
imul
js
inc
gs
jb
arpl
jae
ins
popa
addr16
imul
push
jne
jb
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
add
gs
inc
outs
jae
gs
arpl
push
gs
jo
outs
dec
gs
js
push
gs
jb
popa
je
dec
gs
js
push
gs
gs
popa
ins
jne
inc
js
push
gs
ins
outs
jae
dec
gs
push
gs
jne
jb
push
popa
ins
jne
inc
js
push
gs
gs
gs
dec
gs
push
gs
gs
gs
push
popa
ins
jne
add
addr16
outs
jne
dec
gs
js
push
gs
outs
jne
push
popa
ins
jne
add
addr16
jne
jb
dec
outs
outs
dec
gs
inc
gs
jns
je
ins
dec
gs
imul
gs
imul
push
outs
ja
xor
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
gs
outs
fs
gs
popa
outs
fs
add
je
popa
jae
inc
jb
outs
jb
dec
jo
outs
push
jb
arpl
jae
outs
imul
inc
jne
ins
imul
imul
js
inc
jb
popa
je
inc
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
inc
gs
jb
jns
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
push
popa
imul
ins
gs
bound
arpl
gs
js
je
outs
fs
jb
arpl
jae
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
popa
ins
imul
popa
je
push
popa
je
add
imul
outs
je
imul
add
imul
add
ins
add
jb
ins
gs
jb
add
outs
je
inc
push
outs
imul
jns
add
ins
jne
add
outs
jbe
jb
gs
add
fs
je
je
outs
outs
add
fs
je
push
jne
je
dec
popa
ins
add
ins
je
jb
add
jp
add
outs
ja
gs
fs
jo
gs
gs
popa
add
push
add
add
je
dec
popa
jae
popa
ins
jne
add
jo
outs
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
jae
jne
ins
dec
jb
ins
jo
jns
push
gs
popa
arpl
dec
outs
jbe
dec
gs
add
gs
jb
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
outs
arpl
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
gs
outs
ins
fs
popa
je
add
je
gs
imul
add
je
inc
imul
outs
outs
add
jb
popa
je
push
gs
outs
jbe
add
outs
ja
jb
inc
outs
outs
je
imul
pop
inc
outs
jne
je
inc
gs
gs
add
imul
ins
bound
add
ja
jne
add
je
inc
jo
push
gs
imul
je
dec
je
ins
add
jb
add
je
inc
gs
jne
je
inc
gs
je
imul
pop
push
outs
je
ins
push
arpl
fs
push
ins
gs
push
jo
imul
add
je
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
push
je
je
jae
outs
fs
je
gs
outs
outs
jae
push
je
gs
ins
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
popa
fs
jns
gs
addr16
dec
gs
fs
add
je
push
push
inc
cmp
inc
gs
jns
gs
jae
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
push
imul
inc
gs
gs
gs
push
je
gs
ins
add
imul
inc
push
addr16
dec
outs
addr16
add
fs
imul
inc
popa
jae
ss
je
imul
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
push
imul
outs
inc
outs
jne
ins
add
outs
arpl
outs
jo
add
je
push
outs
imul
outs
je
jb
add
je
dec
push
push
gs
imul
pop
push
ins
popa
je
outs
jb
add
je
push
gs
imul
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
je
dec
popa
push
jb
addr16
dec
imul
outs
add
imul
gs
fs
outs
je
xor
inc
gs
imul
jns
popa
ins
add
je
imul
inc
imul
imul
je
outs
jae
outs
outs
add
je
imul
imul
popa
je
inc
imul
jns
addr16
inc
popa
jae
inc
imul
jns
jae
je
inc
imul
jae
je
inc
jb
jne
outs
je
add
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
je
jb
dec
outs
outs
add
imul
je
push
gs
fs
ins
ins
push
gs
add
popa
jae
ss
je
imul
je
inc
ins
ins
push
gs
add
dec
outs
ja
jb
push
outs
push
jo
gs
inc
outs
ins
jo
je
dec
popa
jae
add
push
popa
jb
add
outs
ja
jb
outs
jbe
jb
popa
outs
je
addr16
inc
push
inc
dec
dec
add
popa
fs
ins
ins
dec
imul
outs
fs
outs
fs
dec
outs
jae
jb
add
je
dec
je
ins
add
jb
popa
jns
push
jb
je
inc
ins
ins
dec
imul
je
push
outs
jae
je
outs
outs
add
js
inc
jns
gs
inc
gs
jne
data16
push
gs
jb
add
je
jb
inc
js
je
push
gs
fs
jns
add
je
dec
push
add
je
dec
gs
jae
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
popa
fs
inc
push
add
fs
inc
gs
gs
add
fs
push
outs
popa
ins
gs
je
dec
outs
je
data16
imul
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
outs
popa
bound
popa
imul
outs
je
add
popa
fs
ins
ins
inc
jns
gs
inc
gs
imul
push
jb
je
inc
ins
ins
inc
jns
gs
inc
gs
gs
jo
imul
dec
outs
jbe
add
je
inc
jne
ins
push
popa
je
add
jae
js
outs
jae
outs
outs
add
ins
jo
jb
push
outs
add
ins
jo
jb
add
je
inc
popa
jo
arpl
jns
addr16
dec
jae
je
popa
arpl
add
jb
add
je
inc
js
jae
jae
inc
outs
outs
je
imul
inc
gs
popa
ins
add
je
inc
outs
fs
popa
jae
add
je
dec
outs
arpl
push
popa
je
add
je
dec
jae
ins
imul
jb
add
je
push
imul
pop
dec
gs
push
push
gs
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
je
jns
gs
outs
fs
je
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
imul
gs
gs
outs
fs
outs
fs
addr16
inc
arpl
imul
add
je
push
gs
jb
push
jns
add
inc
gs
popa
ins
jne
add
je
jns
popa
ins
imul
outs
add
gs
je
inc
gs
gs
je
add
je
popa
ins
jne
add
je
outs
fs
je
outs
arpl
push
popa
jb
imul
jb
addr16
dec
outs
arpl
push
popa
jb
popa
bound
add
je
dec
outs
arpl
push
jns
add
je
dec
jae
imul
fs
jb
jne
outs
je
inc
gs
imul
add
je
outs
arpl
push
imul
add
je
outs
imul
outs
jb
push
gs
js
gs
imul
je
popa
jb
ins
gs
jb
add
je
dec
jae
je
je
arpl
addr16
dec
jae
popa
ins
jne
push
jns
add
imul
push
gs
jns
add
je
push
popa
jb
ins
gs
jb
jns
add
je
popa
ins
jne
add
je
dec
outs
fs
add
je
outs
gs
arpl
addr16
outs
je
add
jo
addr16
dec
jo
jb
outs
fs
jns
add
jae
ins
jbe
push
je
imul
pop
push
imul
outs
ins
jbe
push
imul
add
jae
ins
jbe
dec
gs
outs
add
je
dec
gs
outs
fs
popa
outs
fs
add
je
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
inc
imul
je
inc
imul
fs
add
jae
ins
jbe
push
jns
add
jae
ins
jbe
dec
gs
bound
add
je
dec
gs
bound
push
jns
add
ins
jo
jb
inc
js
push
add
gs
jb
gs
fs
add
gs
jb
outs
outs
je
outs
je
addr16
dec
jne
jo
je
addr16
push
gs
outs
outs
jae
add
fs
jb
outs
jb
addr16
inc
jb
outs
jb
push
gs
outs
jbe
inc
je
push
gs
jae
push
jo
arpl
dec
jae
gs
gs
jb
imul
dec
jne
bound
add
dec
gs
gs
inc
outs
ins
jo
jb
dec
jb
imul
je
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
jae
imul
inc
jb
ins
add
outs
jbe
jb
inc
jb
ins
add
inc
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
popa
outs
inc
outs
outs
jbe
jb
push
outs
add
jo
push
outs
add
je
dec
gs
addr16
dec
gs
imul
jns
inc
gs
popa
ins
jne
dec
jb
gs
jne
je
dec
popa
js
dec
imul
dec
jae
jb
popa
jns
inc
gs
outs
outs
jae
jb
arpl
jae
addr16
inc
ins
imul
imul
inc
popa
ins
ins
bound
imul
outs
je
gs
outs
arpl
addr16
dec
jae
outs
jne
add
je
imul
je
inc
gs
jb
jo
imul
pop
dec
jae
bound
jb
arpl
gs
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
outs
gs
arpl
gs
imul
outs
outs
add
je
outs
outs
jae
jb
arpl
add
je
dec
jae
outs
gs
arpl
add
je
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
ins
popa
jae
add
je
outs
fs
popa
jb
ins
gs
jb
add
je
outs
je
jb
popa
arpl
add
je
inc
popa
jae
push
jns
add
je
ins
gs
outs
je
jns
add
je
inc
imul
add
je
push
jb
jo
jb
jns
jns
add
je
inc
jbe
outs
je
popa
outs
fs
gs
jns
add
je
gs
bound
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
jb
je
add
fs
popa
outs
add
je
jb
jo
jb
imul
inc
jne
je
ins
inc
je
jb
bound
gs
addr16
inc
jae
gs
bound
inc
imul
gs
add
imul
outs
gs
arpl
add
ins
inc
outs
add
je
dec
jae
jne
ins
add
imul
push
gs
fs
imul
jo
gs
outs
jbe
jb
popa
outs
je
push
jb
ins
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
push
push
jae
addr16
dec
add
outs
jae
dec
popa
imul
ja
dec
imul
dec
popa
jae
js
je
add
je
jne
jb
outs
je
addr16
push
jae
jb
addr16
dec
popa
imul
add
je
inc
imul
addr16
dec
popa
outs
fs
add
je
jb
arpl
jae
jae
inc
gs
outs
imul
jbe
jae
dec
outs
jbe
imul
je
outs
add
push
jb
jns
dec
popa
jae
dec
outs
fs
data16
imul
push
imul
outs
ja
popa
je
push
imul
ins
inc
imul
dec
gs
add
jo
outs
fs
gs
add
je
push
je
dec
outs
ja
addr16
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
jb
add
ja
push
jb
outs
arpl
add
gs
popa
jo
inc
popa
je
push
je
imul
inc
jae
gs
bound
popa
ins
add
je
push
jb
arpl
jae
popa
ins
add
jp
dec
data16
je
popa
jae
push
imul
outs
jb
addr16
push
je
jb
dec
outs
outs
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
jne
jo
je
addr16
inc
outs
fs
push
je
gs
ins
add
jo
outs
fs
imul
pop
push
je
outs
fs
jb
inc
jb
outs
jb
push
jb
ins
push
je
jb
add
je
jb
arpl
jae
jns
add
je
push
inc
ins
outs
bound
push
jb
jo
jb
imul
inc
arpl
gs
fs
imul
jae
addr16
push
outs
jb
add
je
arpl
gs
arpl
outs
outs
outs
arpl
outs
jae
addr16
push
gs
outs
je
inc
outs
fs
outs
imul
outs
jae
popa
je
add
je
dec
gs
add
imul
add
je
jb
jne
je
push
gs
outs
arpl
jno
popa
ins
jae
inc
gs
bound
arpl
popa
fs
gs
addr16
inc
jb
jne
jae
add
aad
(bad)
loopne
mov
dec
lods
jmp
add
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
sbb
adc
sbb
adc
sbb
adc
adc
sbb
add
add
add
push
add
adc
adc
push
add
add
push
add
add
add
add
sbb
and
add
adc
adc
add
adc
push
or
push
adc
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
sbb
push
adc
add
add
adc
loope
add
push
adc
add
cmp
add
add
push
add
and
sub
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
adc
push
adc
push
add
push
push
adc
pop
add
sbb
or
add
adc
add
add
push
or
add
push
adc
add
add
adc
push
add
push
add
adc
add
add
push
and
add
push
push
add
add
push
add
sbb
or
add
add
or
add
add
add
add
sbb
add
cmp
add
adc
inc
add
add
fld
add
or
add
adc
pop
push
adc
push
add
add
add
add
add
add
add
push
push
add
add
adc
or
add
push
adc
adc
adc
pop
add
sbb
pop
add
sbb
or
add
mov
push
adc
add
add
add
and
add
sbb
add
and
push
and
add
adc
add
fld
push
or
add
or
add
sbb
add
sbb
or
add
add
add
add
push
push
add
adc
push
pop
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
sbb
add
or
adc
add
sbb
sub
and
add
sub
add
add
adc
ins
pop
and
add
cmp
jl
and
adc
add
cmp
mov
adc
or
add
sbb
sbb
and
je
adc
mov
adc
je
adc
adc
sbb
and
or
or
sub
sbb
adc
or
or
and
adc
or
adc
adc
sbb
and
or
or
or
sub
or
or
add
sub
sub
sbb
and
add
sbb
and
add
sbb
sbb
adc
and
adc
sbb
and
add
sub
cmp
add
or
and
or
adc
or
add
sub
add
adc
adc
or
sbb
and
sub
add
add
add
sbb
and
add
and
movs
adc
or
and
sub
and
add
add
add
or
adc
add
adc
adc
add
add
sbb
and
sbb
add
or
adc
push
adc
or
sbb
add
adc
add
add
add
add
add
push
adc
push
push
add
add
pop
add
add
or
add
or
add
or
add
or
add
push
or
add
add
add
push
adc
push
adc
push
push
add
add
sbb
add
push
sbb
add
or
add
sbb
sbb
add
sbb
pop
add
sbb
adc
add
add
or
add
push
add
sbb
add
sbb
adc
rol
add
adc
add
sbb
cmp
cmp
add
or
adc
add
or
or
add
adc
adc
or
add
adc
or
add
adc
adc
add
or
sbb
add
push
sbb
push
adc
or
push
sbb
and
add
add
add
and
add
or
add
adc
add
sbb
adc
add
sub
adc
push
and
add
adc
push
adc
add
adc
cmp
add
adc
adc
adc
add
add
add
hlt
add
mov
adc
adc
add
add
add
add
and
add
xor
and
add
xor
add
add
add
and
adc
add
add
and
add
adc
sub
push
adc
adc
adc
add
in
push
and
add
sub
and
adc
sbb
sbb
and
adc
or
add
cmp
add
adc
adc
or
add
adc
mov
add
or
add
cmp
and
adc
mov
add
add
add
adc
or
add
adc
add
adc
cmp
push
adc
adc
add
push
push
adc
add
adc
or
adc
adc
add
cld
add
add
and
add
add
xor
cmp
and
add
adc
add
add
add
or
add
or
add
or
and
add
push
add
add
pop
add
add
add
add
and
add
sbb
and
add
sbb
push
adc
add
adc
add
mov
adc
add
adc
or
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
or
or
adc
add
adc
push
add
add
or
or
or
adc
add
add
add
add
push
add
add
adc
add
adc
add
add
adc
add
add
add
add
adc
adc
push
add
push
add
adc
add
adc
adc
push
add
adc
push
add
adc
push
add
add
adc
add
add
adc
add
add
adc
add
push
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
add
add
adc
adc
push
add
add
add
add
sbb
ins
add
add
add
sbb
cmp
cmp
xchg
adc
add
adc
cmp
cmp
add
push
adc
push
or
add
adc
add
adc
push
add
push
push
add
add
add
add
add
or
add
add
and
adc
adc
adc
adc
or
add
sub
adc
adc
adc
adc
adc
or
add
sub
and
adc
adc
adc
adc
adc
adc
push
and
add
add
add
and
and
adc
adc
add
adc
push
add
push
add
add
add
push
or
add
adc
adc
add
sbb
add
add
sbb
add
add
cmp
add
adc
adc
cmp
cmp
mov
or
add
cmp
add
cmp
add
adc
adc
push
adc
adc
push
adc
pop
add
sbb
cmp
adc
adc
add
cmp
add
cmp
or
add
sub
add
sub
sbb
lods
add
add
push
adc
adc
cmp
mov
xor
cmp
cmp
cmp
sldt
sbb
cmp
cmp
push
push
push
push
add
add
adc
add
add
adc
push
add
add
adc
adc
add
or
add
push
push
or
or
add
adc
adc
push
push
adc
push
add
push
push
or
push
add
adc
add
or
pop
add
add
or
add
or
adc
push
adc
sbb
add
add
cmp
add
add
or
add
add
add
push
pop
add
add
add
adc
add
add
add
push
push
add
add
push
push
pop
adc
add
push
add
pop
add
add
adc
add
push
push
pop
and
add
adc
push
add
add
sbb
add
sbb
sbb
adc
add
sbb
adc
add
sbb
adc
sbb
adc
add
or
adc
add
sbb
add
add
or
push
add
add
push
add
or
add
push
or
push
adc
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
push
or
or
or
or
or
add
or
push
or
sbb
add
or
push
or
push
or
or
add
or
push
str
or
or
adc
adc
push
add
or
or
adc
sbb
add
or
adc
sbb
adc
sbb
sbb
adc
add
push
push
push
add
add
or
or
push
add
push
push
sbb
add
add
sbb
push
push
pop
add
sbb
push
add
add
push
add
adc
push
sbb
push
add
add
push
sbb
push
or
add
adc
push
push
add
add
adc
or
push
push
or
add
sub
or
add
sub
add
add
push
push
pop
add
sbb
push
add
push
push
add
add
push
add
add
sbb
add
sbb
or
add
adc
add
adc
adc
or
push
add
push
sbb
add
add
adc
add
add
add
add
add
add
add
add
adc
add
or
or
add
add
adc
add
sub
adc
adc
add
push
adc
add
adc
add
add
add
add
push
add
sub
add
push
push
add
add
push
add
add
adc
push
push
add
adc
add
adc
or
add
or
adc
js
jo
ins
add
jb
add
pop
add
push
push
add
pop
add
or
push
add
add
add
push
add
xor
or
push
push
add
add
add
add
sbb
add
add
adc
add
add
adc
test
sbb
mov
sbb
add
add
sbb
add
or
add
add
adc
sbb
or
sbb
push
adc
add
adc
add
push
add
adc
adc
pop
push
adc
push
add
adc
jo
add
je
add
pop
add
jb
outs
add
jae
add
inc
add
add
je
add
add
adc
sub
push
adc
adc
adc
add
and
add
adc
push
or
add
or
adc
sbb
and
add
adc
add
add
and
push
adc
or
push
add
or
adc
push
add
sub
sub
add
mov
add
add
add
add
inc
ins
ins
outs
ja
jne
je
jo
add
sub
sub
add
hlt
add
add
mov
sub
sub
adc
adc
adc
or
jmp
add
add
add
and
add
cmp
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
or
add
add
pop
adc
push
add
push
add
add
pop
add
adc
xor
adc
adc
adc
and
adc
add
adc
push
adc
push
add
push
add
add
adc
pop
add
push
pop
add
adc
add
adc
adc
adc
adc
add
adc
xor
push
pop
add
adc
pop
add
or
add
add
or
sbb
pop
add
adc
add
add
push
push
push
push
push
add
push
adc
push
adc
push
push
adc
adc
and
push
adc
push
push
push
adc
add
cmp
cmp
adc
sbb
push
adc
sbb
push
adc
sbb
push
adc
sbb
add
add
push
sbb
and
add
adc
jge
adc
pop
adc
adc
or
pop
push
push
push
push
push
push
adc
adc
ins
adc
jge
push
push
push
adc
add
add
jge
adc
adc
or
add
sbb
add
adc
add
add
push
adc
add
add
cmp
cmp
adc
adc
add
add
sub
sub
adc
adc
adc
adc
or
add
adc
push
pop
add
adc
adc
pop
add
sub
add
push
push
sbb
add
or
add
test
adc
push
adc
push
adc
adc
push
or
add
push
add
jne
and
push
sbb
sbb
add
push
or
sbb
add
add
adc
push
push
push
push
push
or
add
push
sbb
sbb
sub
add
push
sbb
pop
pop
or
adc
adc
push
or
sbb
and
push
and
add
xor
adc
adc
adc
adc
add
xor
add
adc
or
add
add
or
pop
push
push
adc
push
or
adc
push
adc
push
sbb
adc
adc
add
add
sbb
pop
add
or
or
add
or
and
adc
add
push
adc
or
add
or
pop
add
inc
adc
adc
push
adc
inc
pop
adc
adc
pop
add
sbb
add
push
pop
and
push
sbb
add
or
add
sbb
add
add
add
adc
or
inc
adc
cmp
adc
adc
adc
adc
adc
js
adc
pop
adc
cmp
add
cmp
sbb
adc
or
add
fld
and
or
or
add
cmp
add
add
adc
adc
push
add
add
add
add
add
add
sbb
and
add
sbb
pop
add
add
add
or
sub
sbb
sbb
or
add
sbb
add
sbb
or
push
adc
push
adc
add
add
adc
add
adc
push
sbb
push
adc
sbb
pop
add
push
adc
pop
or
push
push
sbb
add
sbb
and
sbb
add
push
sbb
pop
sub
push
push
push
push
push
or
sbb
push
push
add
or
or
adc
push
sbb
adc
push
adc
or
adc
push
or
push
or
add
add
adc
or
add
jne
and
add
add
adc
push
or
add
adc
adc
or
add
or
adc
push
and
add
adc
add
or
add
add
add
sbb
or
add
push
adc
or
add
adc
or
add
sub
adc
or
adc
sbb
or
push
or
add
adc
add
or
or
or
or
add
add
push
or
or
add
or
adc
sbb
add
adc
add
add
pop
add
adc
or
adc
add
cmp
sbb
or
or
sbb
add
or
and
adc
or
add
sbb
or
and
add
xor
mov
sub
and
add
sub
pop
add
sbb
add
sbb
push
pop
add
or
add
sbb
adc
add
and
adc
adc
or
add
sbb
sbb
adc
or
sbb
pop
add
ins
adc
add
pop
sbb
sbb
add
xchg
adc
or
adc
sbb
add
sbb
pop
push
push
adc
imul
sub
adc
adc
ins
adc
cmp
cmp
ins
adc
adc
push
pop
or
adc
imul
sbb
adc
add
cmp
mov
and
add
add
add
cmp
add
add
add
sbb
adc
or
pop
add
or
xor
or
sbb
pop
add
cmp
sbb
adc
or
add
adc
or
add
or
jge
adc
add
cmp
adc
cmp
cmp
or
adc
add
add
push
add
imul
add
sub
jge
adc
adc
sbb
push
adc
sbb
add
sbb
add
and
or
and
adc
add
adc
add
add
adc
add
push
or
add
adc
add
and
add
add
add
add
and
add
add
add
fld
pop
add
push
add
push
sbb
sbb
add
add
sbb
sbb
and
push
push
adc
adc
add
ror
adc
or
add
cmp
add
add
push
add
add
adc
or
mov
sbb
sbb
pop
add
xor
pop
or
sbb
adc
or
adc
or
and
add
add
and
adc
adc
sbb
sub
lea
add
adc
mov
sub
sub
or
and
adc
add
and
add
and
add
add
lds
and
mov
adc
add
adc
adc
add
mov
and
adc
add
sbb
pop
add
or
push
and
add
add
sbb
jno
adc
adc
adc
xor
jno
adc
pop
adc
xor
adc
add
cmp
sbb
adc
or
and
add
adc
sbb
sbb
or
and
sbb
pop
add
adc
or
add
add
add
add
int
and
sbb
pop
or
or
sub
mov
add
sub
push
adc
adc
or
adc
cmp
and
adc
adc
or
and
add
sub
sbb
and
adc
or
and
and
adc
cmp
and
adc
cmp
and
adc
adc
adc
adc
adc
adc
add
add
push
add
add
add
add
and
adc
add
pop
and
add
adc
add
and
and
adc
add
sbb
adc
jge
adc
adc
add
add
loopne
pop
add
add
hlt
add
add
add
pop
add
sysret
add
add
adc
add
push
add
add
sbb
pop
add
push
sbb
xor
add
or
adc
or
or
add
cmp
cmp
pop
add
sub
add
cmp
or
add
add
xor
pop
add
cmp
add
adc
push
add
adc
add
sbb
and
sbb
cmp
pop
add
adc
adc
and
or
cmp
mov
add
add
adc
add
cmp
adc
add
or
adc
add
cmp
adc
adc
adc
adc
pop
pop
add
adc
adc
adc
or
add
pop
add
sub
and
or
add
mov
adc
jno
adc
sbb
adc
adc
sbb
and
add
sbb
sbb
or
add
push
adc
add
lea
pop
add
or
add
adc
or
add
and
add
or
or
or
or
or
xor
cmp
xor
cmp
pop
add
or
pop
add
adc
pop
and
adc
pop
add
adc
add
add
add
sbb
and
add
adc
add
adc
add
pop
add
or
or
add
or
or
or
or
or
or
or
adc
add
pop
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
push
add
add
adc
add
pop
add
add
add
adc
add
adc
add
pop
add
add
add
push
add
adc
push
add
pop
add
adc
push
add
push
add
adc
adc
push
add
adc
push
add
adc
adc
push
add
pop
add
adc
push
add
adc
add
or
adc
push
add
adc
adc
push
add
add
pop
add
add
push
adc
add
and
add
add
add
pop
add
push
add
adc
push
add
adc
push
add
add
add
pop
add
add
add
add
pop
add
add
sbb
or
adc
cmp
add
adc
adc
test
sbb
sbb
adc
adc
adc
adc
and
adc
add
sbb
cmp
adc
push
adc
push
add
add
add
xor
or
mov
sub
push
add
add
or
add
sub
mov
and
adc
add
xor
or
and
add
jge
adc
aad
pop
add
rol
mov
cmp
or
pop
push
adc
sbb
add
mov
sbb
pop
add
and
sbb
adc
add
mov
sbb
adc
sbb
sbb
add
push
adc
add
sbb
adc
cmp
sbb
add
adc
add
adc
add
cmp
add
adc
adc
sbb
or
adc
adc
mov
adc
or
or
or
adc
push
sbb
add
add
cmp
add
add
pop
add
cmp
add
cmp
push
adc
adc
add
push
add
push
add
push
pop
and
add
adc
push
push
adc
adc
push
and
add
adc
ror
pop
add
add
add
and
add
sbb
sbb
or
xor
cmp
sbb
adc
pop
add
sbb
add
add
xchg
sysret
add
icebp
adc
icebp
or
pop
add
push
adc
or
sbb
xor
push
push
sbb
pop
pop
add
pop
pop
add
pop
pop
add
add
cmc
push
pop
add
adc
sbb
add
add
push
pop
add
and
add
adc
push
adc
sbb
xor
sbb
push
add
sbb
pop
or
adc
push
push
sbb
adc
or
adc
adc
push
push
adc
add
and
adc
sbb
or
and
sbb
sbb
push
sbb
sbb
sbb
add
sbb
add
add
pop
or
or
sbb
jge
push
push
or
adc
add
sbb
add
add
or
or
or
or
sbb
adc
pop
add
or
or
pop
pop
or
add
push
push
or
add
or
adc
or
adc
pop
or
or
or
add
xchg
or
or
add
adc
or
adc
adc
add
adc
or
adc
push
push
sbb
or
or
xor
add
add
or
add
adc
add
sbb
add
adc
add
sbb
or
add
or
add
or
sub
sbb
sbb
sbb
pop
pop
adc
cmp
adc
adc
push
push
adc
adc
or
add
adc
adc
or
or
adc
adc
adc
sbb
push
push
or
add
or
add
sbb
add
adc
es
or
push
adc
sbb
adc
add
push
adc
sbb
adc
push
add
push
or
add
sbb
sub
sbb
sub
pop
push
push
sbb
or
sbb
push
or
xor
sbb
push
adc
or
pop
push
sbb
xor
adc
adc
xor
or
sbb
adc
adc
pop
pop
add
xor
xor
adc
add
cmp
xor
sbb
cmp
add
push
sbb
sbb
pop
or
adc
adc
adc
or
adc
push
or
add
adc
xor
or
or
or
pop
add
xor
adc
adc
adc
sbb
pop
add
push
adc
push
adc
push
add
sbb
pop
pop
add
sbb
add
add
add
pop
pop
push
adc
adc
sbb
or
or
adc
and
sbb
pop
add
adc
or
and
sbb
and
adc
adc
cmp
cmp
adc
adc
push
pop
or
push
sbb
or
pop
add
push
adc
pop
push
sbb
add
push
adc
push
add
add
sbb
adc
or
add
or
mov
cmp
sbb
adc
add
add
sbb
xor
add
pop
pop
add
or
adc
adc
add
or
and
adc
add
add
and
adc
add
add
adc
or
adc
or
pusha
push
adc
add
pop
add
sbb
xor
add
or
das
pop
push
push
sbb
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
push
or
or
push
push
adc
push
push
adc
push
or
add
sub
sbb
sub
add
add
pop
and
add
adc
sbb
adc
pop
and
push
push
adc
add
sbb
add
or
adc
adc
adc
adc
pop
add
push
adc
or
pop
add
adc
xor
adc
push
push
sbb
xor
sbb
adc
push
sbb
xor
add
or
add
push
push
adc
push
sbb
xor
add
pop
pop
add
push
pop
add
xor
and
or
adc
adc
add
add
add
or
add
jge
add
add
pop
adc
and
xor
inc
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
add
dec
add
inc
add
dec
add
inc
add
dec
add
add
dec
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
dec
add
push
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
inc
add
dec
add
inc
add
dec
add
add
dec
add
outs
add
add
pop
pop
add
outs
add
jb
jns
jo
je
add
add
pop
add
outs
add
ins
add
arpl
and
ins
add
je
push
add
add
add
jae
and
outs
add
je
and
jae
jne
jo
jo
outs
add
je
and
data16
jne
ins
add
add
ins
add
jne
jae
add
das
jne
outs
add
js
jo
add
je
add
add
jo
add
popa
add
add
add
add
add
add
add
xchg
add
adc
add
add
dec
xchg
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
