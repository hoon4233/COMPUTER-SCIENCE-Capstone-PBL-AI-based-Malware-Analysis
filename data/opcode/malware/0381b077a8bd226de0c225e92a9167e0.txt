(bad)
popa
add
mov
add
add
and
add
in
sub
add
movs
in
(bad)
inc
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadd
jns
call
and
xor
xor
or
outs
push
call
jo
push
push
add
xor
test
mov
jle
fist
xor
push
lea
push
push
dec
xor
adc
test
outs
jl
outs
add
(bad)
mov
push
je
mov
jecxz
push
call
les
dec
push
aam
and
dec
ficom
jmp
cs
push
dec
movs
push
push
or
in
mov
pop
mov
daa
movs
mov
aad
sbb
inc
jp
pusha
pop
pop
push
pop
pop
pop
leave
ret
sub
push
push
shl
mov
pop
cld
push
int3
xor
jo
jmp
jo
ins
cmp
xchg
jne
jae
cs
pusha
xor
jo
repnz
mov
call
repz
(bad)
or
test
ror
push
push
shl
sahf
ret
les
push
xchg
lds
je
dec
enter
popf
cmp
popa
retf
int3
inc
cmp
xchg
outs
into
arpl
outs
shl
cmp
jo
shl
jae
mov
mov
cmp
pop
mov
cmp
je
movs
movs
movs
iret
repz
cmps
cmps
test
stos
cmp
repz
lods
lods
scas
scas
mov
cmp
repz
mov
mov
jle
iret
mov
mov
loope
imul
adc
or
push
pusha
pop
shr
lea
push
cld
push
call
into
add
mov
mov
push
mov
daa
out
mov
cmp
jbe
lea
push
push
sbb
imul
add
je
inc
add
cmp
jmp
mov
lods
add
add
fsub
mov
rol
pop
inc
or
inc
test
pop
sub
enter
mov
inc
lds
lods
add
sahf
sbb
jns
out
gs
xor
cmp
mov
sub
retf
mul
push
loope
push
xchg
loope
imul
push
loope
cmp
imul
outs
jmp
je
pushf
test
mov
or
xor
dec
pop
adc
or
jne
push
push
mov
push
mov
push
es
xchg
inc
ret
mov
xor
(bad)
push
inc
sahf
in
pop
add
push
mov
sbb
add
aaa
mov
push
out
adc
repz
jne
sub
add
or
js
cmp
fs
(bad)
fs
sub
jnp
jo
push
int
es
clc
aam
or
mov
adc
bound
mov
push
das
mov
sahf
mov
shr
xor
outs
dec
aam
addr16
loope
aad
(bad)
imul
fsubr
fidiv
cs
jno
fsub
(bad)
or
jo
adc
test
mov
jb
jae
(bad)
jns
(bad)
je
jne
jbe
(bad)
jns
gs
js
mov
cwde
pop
jns
inc
jnp
ficom
sti
jl
ins
rol
lock
jg
xchg
inc
add
sub
cmp
ins
test
inc
xchg
push
in
or
mov
push
jmp
cmp
push
cmp
adc
mov
sbb
push
xchg
nop
push
xchg
popa
xchg
jbe
gs
loope
cmp
xchg
addr16
cmp
xchg
inc
pushf
imul
sbb
add
mov
jns
(bad)
(bad)
enter
cmp
jne
jae
push
int3
je
popa
adc
xchg
into
jb
je
jne
jo
push
ja
shr
je
iret
mov
js
mov
jo
mov
cmps
cmp
xor
jae
(bad)
cmp
jno
adc
xor
fbld
lea
imul
cwde
adc
inc
push
push
scas
lds
sub
push
iret
push
data16
imul
adc
mov
repz
addr16
cmp
pusha
push
mov
fs
mov
(bad)
cwde
dec
add
and
pop
push
test
adc
mov
or
test
inc
mov
idiv
jmp
xor
and
in
cmp
daa
jb
mov
jo
test
imul
je
jb
dec
lods
mov
cmp
xor
in
loopne
je
jnp
push
jp
out
ja
repz
cmp
sub
movs
xchg
enter
or
push
xlat
add
add
mov
push
cdq
sbb
frstor
test
mov
add
dec
stos
adc
dec
fcom
call
and
fadd
mov
sar
cdq
xchg
int3
mov
cs
mov
sbb
mov
rcr
dec
stos
enter
ret
enter
xchg
leave
lock
into
int3
(bad)
sub
jo
int
into
and
xor
je
popa
xor
mov
mov
xor
mov
mov
fwait
nop
mov
add
push
ret
loope
in
hlt
(bad)
cmc
inc
mul
sbb
adc
mov
stc
or
sbb
(bad)
(bad)
cmp
cmp
cmp
(bad)
fisttp
or
fadd
dec
push
add
jl
aam
mov
dec
(bad)
and
test
loope
add
push
fldcw
mov
(bad)
mov
pushf
clc
mov
cmps
in
mov
test
mov
adc
icebp
mov
retf
repz
inc
call
add
movs
(bad)
mov
ins
ret
xor
adc
add
mov
mov
push
xor
idiv
(bad)
je
push
dec
sbb
rol
js
sub
mov
push
push
xchg
mov
push
jg
repz
inc
lea
ret
mov
mov
adc
clc
mov
dec
push
push
clc
xlat
nop
fnsave
jmp
xor
or
inc
mov
inc
push
xor
nop
jnp
scas
xor
sbb
push
add
das
push
push
les
push
push
pop
(bad)
popa
pop
(bad)
mov
lds
add
movs
jecxz
sar
pop
loopne
pmuludq
addr16
loop
jecxz
in
(bad)
mov
inc
loope
inc
dec
aad
add
or
and
and
pop
pop
addr16
cmp
mov
xchg
ins
sub
mov
in
outs
cli
outs
inc
dec
cmp
data16
imul
jns
inc
jb
repz
popa
dec
popa
ins
(bad)
xchg
sti
push
hlt
es
sub
ja
push
pop
cmp
push
push
cmp
add
cmp
and
test
or
popa
jmp
jo
push
shl
icebp
pusha
je
nop
(bad)
xor
push
stos
dec
ret
mov
xchg
js
sbb
mov
mov
jae
ror
and
jae
popa
arpl
pop
dec
outs
outs
cmp
gs
ins
outs
sahf
out
sahf
arpl
jne
dec
fs
jnp
mov
pop
or
inc
mov
imul
pusha
or
mov
lds
repz
and
add
mov
adc
inc
mov
xor
test
xor
loop
loop
mov
jo
mov
inc
mov
sbb
xchg
outs
shl
loope
push
ret
jb
outs
lds
loope
cmp
jae
jae
dec
retf
mov
mov
pop
xchg
and
dec
cmc
jo
gs
sbb
imul
push
stc
cli
outs
sti
arpl
adc
jae
repz
xor
idiv
repz
outs
jmp
outs
in
arpl
sub
in
gs
pop
aas
sub
mov
sbb
sub
cmps
xor
je
scas
mov
xor
outs
aad
add
xlat
fsubr
xor
lods
push
arpl
cmp
fisub
jae
(bad)
sbb
push
jae
arpl
xlat
push
sub
add
pushf
add
arpl
pop
mov
and
lods
xchg
lods
add
inc
out
adc
push
xchg
mov
in
xor
fxch
and
je
mov
js
adc
push
pop
loop
movs
mov
dec
repnz
cmp
movs
add
push
mov
stos
add
mov
dec
repnz
cmp
push
mov
bnd
aas
cmp
and
fadd
sbb
jl
mov
jbe
xchg
setne
pop
push
retf
pop
(bad)
out
clc
push
daa
sahf
popf
cdq
popa
pusha
push
shl
pop
mov
shl
test
inc
pop
push
sahf
add
test
push
cmp
cmp
push
pop
sahf
jmp
jecxz
into
push
ds
cmp
sbb
fnstcw
pop
push
and
jbe
cmp
ret
jns
das
cmps
inc
dec
push
mov
outs
dec
fs
out
sahf
pop
gs
ins
outs
or
jmp
jb
jb
cs
gs
push
repz
repz
imul
iret
jo
idiv
jg
jae
fsubp
jns
call
jo
sbb
mov
js
cmp
xchg
movs
xor
xor
repz
stos
cmp
and
xor
and
jae
les
and
int
out
and
sub
daa
sub
sub
jns
int
sub
pushf
inc
sub
sbb
das
xor
push
sbb
and
sbb
nop
xchg
jbe
inc
loope
repz
push
xor
jno
repnz
icebp
ds
push
pop
out
xchg
xor
or
push
or
push
out
or
ins
mov
smsw
jno
adc
cmp
jmp
cmc
lea
push
pop
cwde
cdq
cmp
push
add
test
out
in
arpl
xchg
xor
jnp
pop
mov
xor
cmp
push
mov
sbb
cmps
cmp
ret
loope
cmp
gs
jae
jae
sbb
xchg
dec
call
pushf
popf
fcomp
and
test
(bad)
(bad)
out
dec
push
in
nop
gs
fcmovu
call
xor
dec
push
sbb
bound
(bad)
arpl
icebp
icebp
packsswb
addr16
imul
js
mov
jecxz
outs
cld
sbb
(bad)
fcom
jae
cmp
fistp
loope
fs
loope
loop
cdq
adc
cmp
ror
or
ret
outs
sbb
mov
les
(bad)
outs
xchg
jo
(bad)
arpl
gs
jae
lahf
out
in
in
lea
sbb
imul
ins
clc
in
jecxz
push
jne
jns
mov
clc
inc
js
(bad)
out
jmp
dec
jl
pushf
out
push
dec
mov
lods
dec
dec
dec
(bad)
sub
push
das
into
arpl
arpl
imul
push
pop
icebp
cmp
mov
pop
jecxz
loop
pop
pop
pop
aam
jno
(bad)
pop
inc
(bad)
lock
ss
cmp
je
or
xor
aaa
data16
dec
repnz
or
cdq
or
adc
add
xor
adc
add
mov
pop
hlt
push
xlat
pop
ret
shl
clc
jne
pusha
push
cdq
(bad)
fnop
stos
cmp
fst
aaa
retf
jne
(bad)
push
leave
sbb
aaa
in
mov
add
jne
push
rol
rol
mov
jno
xor
mov
mov
jmp
add
mov
sar
push
iret
out
popa
push
mov
hlt
or
push
add
outs
test
sub
sti
sbb
or
adc
mov
and
mov
or
jl
xchg
push
push
call
in
xchg
sbb
fwait
xor
nop
scas
sub
inc
sub
push
mov
sub
in
cmp
mov
not
pop
jne
sti
mov
sti
push
cmps
inc
cmp
mov
(bad)
adc
inc
inc
push
xchg
nop
dec
shl
test
add
stc
les
(bad)
shr
xor
mov
adc
hlt
popa
ja
mov
imul
mov
jne
aam
push
dec
cmps
add
fadd
movs
push
mov
sub
mov
in
out
in
sub
shl
out
push
out
out
mov
adc
clc
cmp
add
pop
je
cmp
jb
dec
dec
in
pop
out
dec
(bad)
xor
cwde
jg
pop
jne
push
pusha
or
retf
in
lds
and
cwde
push
jp
ret
cmp
inc
inc
cmp
pop
mov
and
push
cmp
sbb
push
out
pop
mov
es
clc
je
into
fistp
mov
push
and
shl
xchg
pop
inc
cwde
test
fsin
call
and
shl
sbb
fdivp
gs
xor
cmp
jecxz
xor
cs
push
cwde
enter
inc
inc
repnz
gs
outs
jns
(bad)
cli
gs
data16
out
push
and
outs
ds
xchg
call
cld
add
add
int3
mov
ret
aam
shl
sub
(bad)
add
clc
jno
jmp
out
int3
xor
popa
or
push
fidivr
pop
lods
jmp
je
jns
sahf
xor
mov
call
adc
jb
aad
push
in
xchg
sar
jno
hlt
cs
sub
inc
adc
inc
cmp
shr
popa
ret
inc
adc
call
stc
xchg
scas
inc
push
jmp
mov
mov
sbb
xor
loope
xchg
and
std
dec
mov
mov
clc
std
sahf
mov
cmp
sti
lock
mov
sub
and
adc
mov
sbb
xchg
fnstenv
or
cld
fadd
cmp
mov
sbb
sub
push
mov
les
movs
jo
adc
(bad)
aam
jle
cmp
fnstenv
jnp
pusha
inc
sbb
push
and
mov
xchg
sbb
jno
xchg
mov
je
cmp
out
out
call
outs
mov
in
push
cwde
xchg
(bad)
int
jne
ret
jae
inc
or
mov
js
int3
mov
push
jne
mov
shl
xchg
mov
pop
lods
xchg
cmp
cwde
pop
dec
jl
loopne
pop
repnz
xchg
push
ss
lds
xchg
into
dec
clc
rcr
sub
dec
push
cli
sti
push
and
xchg
cld
sbb
pop
xchg
dec
lock
dec
and
jne
call
popa
or
jmp
pop
sub
test
mov
pushf
ret
pop
add
sahf
fadd
loopne
and
xchg
pop
fmul
shr
(bad)
adc
dec
push
test
inc
xor
cmp
repz
dec
outs
je
jb
je
rep
gs
push
imul
ins
cmp
imul
jo
jo
inc
retf
push
gs
icebp
in
addr16
jmp
in
mov
inc
call
jns
outs
fs
iret
repz
jno
gs
(bad)
repz
inc
js
ins
inc
iret
jecxz
icebp
adc
sahf
jo
outs
neg
clc
stc
cli
hlt
xchg
out
sti
cld
std
(bad)
call
loope
dec
leave
outs
retf
dec
fwait
jb
in
adc
repz
and
shl
js
xlat
shr
aad
(bad)
dec
sbb
add
mov
into
ret
sbb
pusha
lock
ins
cmp
mov
pop
cmp
jbe
jl
aas
lds
push
call
mov
cmp
popa
mov
imul
jecxz
fsub
adc
xchg
mov
mov
pop
in
jns
cmps
es
and
and
pop
lea
stos
or
xor
push
hlt
adc
mov
neg
fist
or
addr16
inc
mov
int3
cmps
and
xchg
pop
inc
pop
in
mov
push
cdq
pop
jmp
pop
mov
or
addr16
jmp
lea
pop
push
mov
les
(bad)
jae
je
mov
xor
cdq
mov
idiv
or
das
clc
loopne
mov
or
and
jl
mov
in
inc
cmc
add
inc
cmp
jl
mov
inc
jns
sub
dec
and
lock
nop
cmps
push
jae
and
adc
(bad)
je
jne
mov
daa
adc
fst
in
mov
or
push
clc
cwde
sub
ins
push
mov
repnz
pusha
add
and
add
fadd
clc
and
or
xchg
or
add
push
(bad)
es
call
adc
sub
jo
sbb
sub
sbb
in
xor
mov
adc
inc
test
adc
pushf
add
rcpps
mov
stc
xchg
loope
inc
cli
inc
sti
jb
popa
std
ins
sbb
xchg
or
movs
dec
ret
loope
cmp
imul
stos
push
lods
dec
lods
push
scas
imul
outs
mov
mov
mov
sbb
icebp
sub
or
nop
cmp
sahf
addr16
sbb
lods
pop
mov
jb
ins
mul
(bad)
jmp
popa
js
push
outs
outs
fcomp
mov
loope
inc
fidiv
push
cmps
mov
fimul
lea
pop
(bad)
pop
nop
pop
xchg
push
sbb
xchg
xchg
push
xchg
inc
xchg
jb
popa
imul
cmp
push
cdq
jo
push
inc
call
sahf
xor
adc
loope
xor
(bad)
mov
mov
mov
mov
xchg
mov
adc
loope
je
inc
shr
repz
mov
outs
jne
idiv
outs
fs
and
cmp
retf
int3
int
or
jl
ins
inc
mov
fild
cmp
clc
sub
(bad)
int3
push
fcmove
pop
mov
jmp
sbb
mov
xlat
mov
ret
stos
gs
dec
jno
cmp
loopne
(bad)
jno
cmp
ror
push
push
shl
(bad)
pop
scas
pop
adc
add
jl
jo
mov
add
mov
sub
cmp
mov
fld
push
xchg
push
test
repnz
nop
iret
mov
push
and
cmp
popa
arpl
or
cmp
pop
pushf
je
jo
lahf
jae
jo
sbb
mov
and
push
movs
push
cld
or
xchg
mov
mov
mov
or
(bad)
sub
inc
jns
call
mov
test
dec
test
pop
adc
inc
clc
popa
dec
cmp
or
sbb
inc
jne
jb
call
out
jle
arpl
dec
icebp
xor
mov
test
dec
mov
ret
loope
jo
gs
out
push
push
jb
arpl
popa
hlt
jnp
aad
movs
ds
loope
mov
imul
ret
(bad)
popa
xlat
je
fst
int3
jae
outs
arpl
mov
xchg
xor
repz
inc
jne
gs
repz
je
jb
arpl
ret
xchg
dec
sbb
inc
gs
jae
test
sbb
adc
repz
ins
test
pop
dec
mov
mov
mov
adc
and
sbb
mov
dec
in
test
add
or
add
add
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jg
lods
mov
pop
ret
retf
shl
add
lea
push
cli
dec
xor
mov
(bad)
push
or
inc
mov
cmp
add
xor
hlt
inc
test
jns
cmp
cmp
mov
repz
mov
jae
mov
and
popa
arpl
jns
out
outs
cmp
fs
ins
(bad)
es
and
iret
es
bound
add
push
ficom
sub
outs
dec
mov
in
xlat
inc
adc
int3
mov
fsubr
ds
in
or
sub
sbb
push
adc
add
adc
or
push
inc
or
push
add
mov
fidiv
shl
jl
or
cmp
push
push
push
js
ret
adc
add
cmp
test
mov
mov
or
ret
sbb
mov
mov
add
cmp
sbb
push
call
cmp
call
adc
jbe
push
fild
or
and
pop
add
mov
test
mov
scas
into
scas
imul
dec
add
ror
push
cld
js
pushf
push
sbb
aas
jns
out
xor
jns
out
xor
cmc
mov
xor
sahf
(bad)
icebp
mov
into
cmp
out
iret
rcl
sar
rcl
jo
iret
repz
xlat
fdiv
fnstenv
outs
mov
loope
cmp
mov
jns
(bad)
loopne
loope
cmp
inc
cmc
es
iret
repz
cmp
clc
cmp
out
lock
loope
icebp
repnz
xor
cmp
sbb
div
es
fs
xor
xor
ret
loope
cmp
scas
adc
mov
not
push
lods
std
xchg
sub
movs
lods
jmp
cmps
loope
add
adc
push
fnstsw
(bad)
adc
pop
ds
retf
daa
dec
ror
jecxz
sub
dec
pop
cmp
dec
and
cmp
sti
push
mov
enter
fnstsw
lahf
pop
outs
gs
mov
jge
push
ja
(bad)
jmp
ins
and
xor
or
(bad)
dec
rcl
call
mov
and
je
iret
leave
dec
ds
mov
cmp
mov
push
pushf
sbb
inc
and
jae
in
or
fdivr
xchg
pop
mov
sub
je
cmc
dec
pop
jl
jne
sti
jnp
pop
sbb
sub
je
cli
jb
imul
(bad)
mov
out
pop
xchg
test
xchg
cmp
mov
pop
and
pop
pop
in
pop
jmp
ins
ins
icebp
aas
ret
push
lds
mov
mov
int3
mov
xor
push
adc
mov
pop
pop
mov
stc
xor
adc
jne
and
aas
stos
js
and
iret
arpl
outs
adc
out
push
fbstp
outs
arpl
mov
mov
cmp
and
mov
adc
mov
sub
cmp
jecxz
mov
mov
(bad)
lea
iret
repz
mov
push
sbb
jns
jns
rol
ret
les
(bad)
jmp
outs
retf
push
(bad)
adc
int3
int
into
outs
xor
shl
shl
lock
sti
(bad)
sbb
fdiv
inc
outs
sbb
sub
ins
nop
fwait
data16
out
test
je
cmove
jo
pushf
push
cmp
xor
jl
mov
imul
or
(bad)
jo
or
dec
sbb
jecxz
xor
cmps
mov
out
mov
movs
push
inc
repz
xchg
dec
inc
xor
sub
and
repnz
mov
mov
jo
mov
shl
addr16
ja
xchg
loope
inc
imul
jb
gs
cmp
cs
fs
ins
std
dec
push
out
dec
(bad)
lods
lods
dec
outs
shl
inc
push
lods
out
mov
gs
jne
ret
icebp
mov
mov
push
push
adc
mov
mov
arpl
cmp
arpl
push
cmp
enter
mov
push
push
popa
test
xchg
mov
ins
aas
ret
lods
pop
push
clc
jl
and
cmps
jns
xor
push
xchg
mov
jle
test
hlt
imul
rcr
fidiv
test
add
sbb
xor
add
into
cmp
mov
and
mov
cwde
aaa
or
loopne
loope
cmp
loopne
loope
loop
jecxz
sbb
xchg
in
in
out
out
out
lock
loopne
sbb
lock
call
int3
aas
and
(bad)
push
jmp
mov
mov
inc
icebp
pop
(bad)
cld
sbb
pop
and
fs
fcom
test
les
hlt
test
jp
enter
clc
setno
enter
wbinvd
iret
into
rol
mov
jmp
add
imul
sbb
aam
stc
pop
push
xor
adc
push
aad
(bad)
cmp
inc
dec
add
mov
(bad)
js
enter
je
mov
mov
mov
aaa
mov
test
cmp
and
pop
push
xadd
mov
(bad)
cmp
shl
sbb
push
les
sbb
inc
(bad)
int3
push
rol
out
jns
pop
mov
jp
push
fcom
add
mov
loopne
pop
stos
xor
xchg
fidiv
xor
data16
sub
jl
xchg
cmp
ss
mov
jno
test
ret
jne
enter
add
nop
movs
and
retf
jmp
ret
jg
push
push
mov
xor
and
out
xchg
inc
mov
cmp
mov
mov
pop
push
out
in
inc
adc
mov
inc
popf
jge
sar
rol
and
pop
jmp
adc
test
in
ja
and
push
or
pop
mov
arpl
add
imul
and
fcomp
je
mov
imul
inc
mov
and
mov
sub
ret
out
mov
cmp
out
add
or
mov
call
xchg
mov
mov
sub
pop
inc
or
test
adc
mov
(bad)
clc
or
jge
je
add
cmp
push
cld
push
arpl
jecxz
in
push
call
fs
mov
call
mov
icebp
cmp
icebp
mov
xlat
pop
xchg
jns
push
popa
mov
enter
fst
xchg
mov
or
clc
cwde
pop
push
adc
jmp
mov
std
inc
push
add
push
data16
or
add
cmp
je
add
icebp
xor
sub
adc
pop
movs
lock
push
pop
xor
add
mov
pop
inc
adc
add
clc
jl
lea
mov
mov
push
sar
sbb
clc
lahf
or
mov
rep
jecxz
mov
js
cmp
stc
pop
dec
fsub
enter
movs
retf
mov
inc
scas
dec
sub
mov
hlt
div
push
shl
inc
add
ret
cmp
dec
call
jne
mov
daa
ror
add
adc
repz
jo
ins
jno
icebp
movaps
add
cmp
jne
add
in
xor
sbb
jmp
jno
and
dec
push
push
fs
jecxz
push
xor
dec
cmps
inc
in
mov
inc
bound
int3
int
test
out
jns
ins
push
jb
xchg
sahf
arpl
aad
push
push
cs
cmp
loopne
add
jl
addr16
mov
pop
in
mov
daa
xor
outs
and
mov
hlt
(bad)
dec
lock
ret
pop
sub
pusha
popa
push
adc
rcl
mov
dec
sub
mov
mov
mov
jl
enter
aas
mov
lea
xor
inc
pop
xor
dec
push
inc
(bad)
mov
add
add
in
jmp
add
mov
and
push
sub
inc
add
and
jle
push
push
mov
sbb
sbb
xchg
cld
fmul
ret
test
nop
inc
shl
jnp
push
sub
jmp
or
push
pop
xchg
jno
ret
jne
push
xchg
add
int3
in
mov
jl
cmp
adc
mul
lea
cmp
push
shl
cmp
sub
or
xor
test
retf
sahf
clc
push
xchg
jbe
lds
sahf
hlt
sbb
mov
(bad)
fucomp
test
mul
gs
xchg
push
push
mov
xchg
(bad)
mov
sbb
inc
stos
or
push
inc
ins
int
shl
push
mov
popa
add
je
or
mov
dec
mov
in
pop
adc
push
push
adc
cmc
je
not
sbb
js
or
or
push
mov
ins
in
and
inc
inc
shl
adc
dec
add
xor
push
bound
jns
das
dec
ins
cmp
jmp
pop
push
adc
jmp
push
xchg
ror
mov
icebp
adc
sbb
xchg
push
add
push
gs
stos
fwait
fs
cmp
gs
in
inc
sub
jb
xchg
pop
inc
sub
or
aam
cmps
dec
das
in
mov
mov
pop
outs
mov
aas
inc
mov
lods
cmp
mov
sub
mov
push
int
jmp
lea
jmp
push
shl
add
call
push
sub
dec
mov
into
nop
(bad)
je
imul
jno
cmp
imul
rol
aaa
pop
dec
push
sbb
clc
push
adc
and
push
push
je
mov
or
or
je
mov
and
rol
pop
push
pop
ret
test
add
sbb
hlt
fsubr
std
adc
push
jns
and
xchg
out
push
retf
outs
lahf
out
cmp
ret
add
shl
shl
jecxz
adc
cmc
cmp
jae
outs
iret
sub
dec
outs
jns
dec
sub
jae
push
sahf
out
xor
(bad)
rep
in
jae
je
and
jo
sbb
outs
repz
gs
jae
iret
arpl
xor
rcr
retf
je
mov
adc
pop
adc
ret
lock
fist
xchg
pop
je
xor
popa
push
pop
add
inc
shr
add
dec
dec
sub
(bad)
sub
popa
dec
sub
dec
js
xchg
and
ficomp
pop
cdq
mov
add
xchg
add
mov
outs
mov
fcmovb
in
push
imul
popa
jo
xor
repz
xor
fs
ins
(bad)
pop
leave
add
cmp
fsubr
adc
fisub
outs
cmp
repz
push
outs
imul
add
cwde
jns
das
xor
dec
outs
imul
out
jo
out
push
imul
(bad)
jnp
mov
icebp
aas
stos
jo
ret
sbb
xchg
fs
loope
cmp
jae
je
push
cmp
xchg
mov
in
push
movs
jb
jmp
mov
stos
jmp
bound
lods
adc
cld
nop
mov
lea
jmp
jae
mov
enter
outs
pop
inc
in
jne
cmp
repz
outs
je
jb
(bad)
sbb
mov
jae
fld
xchg
push
push
test
mov
xchg
or
push
xchg
adc
dec
dec
int3
pop
mov
pop
aam
xchg
adc
fcomp
rcl
add
pop
dec
mov
push
push
inc
xor
fs
test
push
ret
mov
cmp
aad
cwd
or
mov
or
add
shl
ret
cmp
jne
mov
add
cmp
cmp
inc
jmp
icebp
jl
adc
cmp
imul
outs
rol
shl
je
mov
cmp
je
sub
add
cmp
ja
mov
in
jecxz
mov
dec
add
mov
mov
cmp
inc
jmp
add
add
cmp
jb
sbb
cmp
add
je
dec
inc
jmp
mov
and
jmp
push
xor
jmp
movlps
adc
fs
mov
pop
adc
add
jns
jne
mov
add
or
enter
shl
shl
adc
and
cmp
cmp
pop
es
shr
ret
cwde
adc
mov
test
sub
out
sub
es
dec
push
(bad)
push
clc
push
jg
push
das
movs
pusha
xor
or
ret
shl
ficom
push
add
je
or
inc
dec
pop
push
(bad)
mov
push
mov
cmp
jle
cmp
and
sub
mov
jns
nop
xor
or
aam
je
ret
sub
(bad)
push
hlt
push
xor
push
jecxz
mov
iret
clc
push
(bad)
addr16
cs
ins
xchg
dec
pusha
sbb
(bad)
mov
xor
in
gs
ficom
out
sar
pop
dec
jo
scas
xor
icebp
dec
sahf
idiv
cmp
je
cmp
dec
mov
cmp
ins
sbb
rcl
dec
jae
xor
je
jecxz
test
jne
lahf
sar
outs
add
adc
outs
jns
out
gs
gs
out
sahf
out
popa
fs
imul
sub
add
cwde
dec
pop
movs
je
cmp
repz
gs
ins
outs
loope
(bad)
jae
dec
cmps
popa
rol
ret
cmps
outs
test
movs
xor
ss
repnz
push
clc
shl
mov
jbe
cdq
mov
shl
inc
cwde
(bad)
inc
mov
jo
rcl
xor
add
movs
jle
inc
mov
mov
pop
sub
stc
sub
ret
in
add
dec
push
test
xchg
jns
inc
in
jmp
aaa
xchg
pop
xor
in
call
jae
sbb
(bad)
adc
mov
int
cli
test
and
fmul
xchg
or
xor
cmp
in
je
sbb
push
sub
lds
je
add
sub
sbb
inc
stos
xchg
movs
cmp
or
jo
xor
hlt
push
sbb
lds
popa
dec
push
aam
or
cmp
hlt
lock
adc
jne
call
lock
mov
sub
sbb
jmp
dec
add
jb
movsx
cmp
mov
jmp
icebp
push
rcl
or
add
mov
mov
test
je
mov
inc
inc
jmp
and
cmp
(bad)
push
fwait
xor
pusha
inc
test
je
test
cld
aaa
pusha
sahf
mov
mov
(bad)
adc
jp
pop
push
inc
cmp
mov
in
jo
fs
nop
sbb
ror
mov
ss
jns
mov
or
ficom
inc
clc
cmp
mov
and
gs
cdq
scas
jbe
inc
add
sti
sub
mov
cmp
fld
cdq
dec
inc
fld
cmp
jmp
add
mov
outs
xchg
adc
rol
sbb
adc
jmp
push
mov
mov
cmp
test
jne
pop
ret
sbb
mov
cmp
add
inc
jg
mov
je
mov
add
xor
cmp
mov
jne
mov
sub
add
cmp
mov
inc
cmp
je
andps
(bad)
mov
arpl
nop
ins
pop
add
ss
push
fwait
ss
adc
xor
dec
or
repnz
push
pop
xor
test
inc
in
out
out
and
imul
je
imul
lea
hlt
inc
sbb
je
das
sub
push
mov
push
fmul
mov
add
cmp
ins
jne
add
adc
ror
stos
popa
loopne
pop
pop
adc
and
loop
push
push
jae
and
jns
aad
scas
hlt
ins
inc
adc
mov
cmp
or
jmp
inc
imul
sbb
adc
or
dec
fidiv
or
sbb
sbb
xchg
xor
sub
shl
add
mov
mov
nop
pop
xchg
cmp
or
sbb
dec
dec
pop
add
push
adc
sar
ret
mov
jb
inc
add
or
and
iret
cmp
jbe
ins
dec
out
inc
mov
iret
add
sar
push
or
pop
test
leave
push
add
inc
sbb
or
fwait
add
sbb
dec
movzx
or
mov
add
imul
test
add
cmp
jae
cmp
jb
or
rol
addr16
add
or
cs
mov
into
repnz
(bad)
inc
sbb
sub
mov
stos
sbb
push
xchg
xor
outs
sub
and
mov
popa
mov
xchg
add
rol
inc
xor
mov
ret
fcom
push
inc
dec
xor
cld
mov
retf
idiv
retf
jbe
stc
idiv
aaa
jp
inc
fcomp
xchg
lea
movs
or
push
shl
pop
fimul
adc
imul
and
or
mov
push
or
and
jp
test
sbb
inc
xor
rcl
cld
sub
xor
mov
leave
and
jmp
mov
ret
clc
gs
int
dec
add
xchg
ss
add
dec
fldenv
sub
call
dec
mov
loop
dec
inc
inc
jb
ds
sbb
or
mov
stos
cmp
add
inc
push
add
clc
push
fld
in
mov
mov
pop
and
push
leave
aaa
dec
or
(bad)
aas
inc
hlt
(bad)
pushf
sbb
add
scas
dec
test
mov
inc
push
(bad)
in
lock
shr
dec
or
cmp
jbe
or
sbb
lock
xor
or
lock
push
aad
pop
pop
aaa
cmp
pop
xor
and
adc
ins
sub
(bad)
push
bound
repnz
and
jo
dec
inc
mov
pop
neg
mov
jno
stc
clc
pop
fst
jmp
fmul
add
retf
add
sti
mov
xchg
das
mov
in
mov
inc
int
inc
jns
ja
bound
cmp
es
imul
ins
addr16
repz
xor
(bad)
or
sub
cmc
inc
jle
loop
pop
jae
call
not
cwde
aam
nop
arpl
loop
bound
sub
jmp
cmp
popa
inc
push
ret
or
xor
int3
mov
jmp
push
dec
std
mov
and
lock
ret
mov
outs
mov
mov
mov
push
mov
out
push
stos
outs
ja
xor
sahf
inc
imul
and
jnp
jns
xor
ins
add
stc
cmovbe
stc
data16
cdq
fwait
pop
lods
popf
cwde
(bad)
shl
mov
xchg
std
xchg
std
iret
rcr
inc
ins
xor
repz
inc
popa
arpl
mov
mov
jmp
popa
je
add
test
leave
cmps
jle
nop
cld
xor
cmp
dec
(bad)
sbb
popf
stos
stos
push
xor
cs
int3
loopne
js
sub
cmps
push
cdq
pop
idiv
add
cwde
add
push
cmp
add
cwde
in
sbb
cwde
cmp
mov
inc
into
inc
out
retf
imul
out
neg
add
mov
(bad)
mov
lea
sti
jb
cmp
mov
add
sub
pop
into
jae
or
xchg
jne
xor
pop
inc
push
dec
outs
push
and
fs
out
jns
inc
xor
xor
imul
sbb
aam
sahf
pop
scas
inc
jbe
nop
cmp
repz
fdiv
js
js
fcomip
cmp
lods
aam
mov
inc
fs
outs
frstor
out
je
pop
dec
xchg
mov
jecxz
gs
mov
and
arpl
cmp
imul
pop
leave
pop
dec
stc
call
push
and
mov
mov
call
and
cmps
pop
test
ins
push
(bad)
cmp
test
fimul
push
(bad)
loop
push
jp
daa
lods
fnstenv
es
cmp
or
dec
and
mul
addr16
div
fisttp
inc
fist
xor
jmp
gs
jo
cmp
xchg
sbb
fmul
dec
pop
push
test
jecxz
jno
or
jle
gs
jle
mov
pop
jb
je
(bad)
icebp
into
imul
sahf
out
fcomp
mov
jae
push
xchg
and
jae
jae
jae
cmp
jb
add
jne
jne
jne
xchg
loope
jne
jne
jne
jne
jno
sbb
jne
jne
jne
xor
loope
sahf
es
je
je
je
cmps
or
pushf
je
cmp
movs
je
je
je
je
je
xchg
loope
je
je
je
je
jo
sbb
je
je
je
je
je
sbb
(bad)
or
jae
jae
jae
xchg
loope
jae
jae
jae
jae
jae
cmp
cmps
jae
jae
jae
jae
jbe
lock
jbe
jbe
jbe
push
xchg
pop
jbe
jbe
jbe
jbe
js
addr16
add
retf
loop
inc
gs
gs
inc
inc
(bad)
dec
bound
and
je
dec
aaa
pop
js
push
add
add
inc
jb
popa
fst
mov
imul
popa
jo
imul
sub
jb
dec
retf
add
add
dec
xor
cs
ins
add
add
ins
jae
mov
jae
jb
outs
je
add
je
outs
or
add
inc
pop
inc
pop
push
inc
pop
in
add
add
jae
ins
setbe
cmp
xor
retf
data16
enter
sar
xor
imul
xor
pop
push
outs
jo
dec
pop
adc
bound
es
or
imul
in
jo
outs
arpl
jecxz
and
in
push
mov
jl
and
gs
pop
stc
cs
out
or
les
loop
imul
popa
outs
fs
in
ret
retf
int
clc
aaa
jo
pop
push
jb
ret
sbb
push
cld
cmp
pop
in
jbe
sti
fwait
jge
mov
sbb
loope
imul
push
sub
or
add
add
ror
add
dec
outs
popa
fs
sub
ins
xchg
push
cmp
in
push
jbe
add
imul
movs
lds
inc
inc
je
pop
or
bound
push
jle
push
pusha
dec
shl
imul
outs
dec
jne
inc
jns
adc
or
jne
ret
imul
and
push
inc
add
push
pushf
and
jo
push
xor
sbb
rol
dec
outs
fs
inc
call
mov
fst
add
loope
in
icebp
adc
inc
jo
outs
mov
mov
push
xchg
fwait
loope
push
outs
test
jne
dec
enter
jo
call
stos
lds
xchg
mov
dec
out
loop
shl
xor
ins
imul
ins
dec
inc
push
dec
inc
dec
mov
lea
or
mov
(bad)
mov
loop
push
push
fdiv
ret
push
mov
cwde
cdq
ja
mov
and
ror
inc
js
mov
and
jae
jne
add
push
add
cmp
int3
add
dec
inc
dec
retf
lock
fisttp
add
sub
cli
jmp
and
push
ja
pop
jge
xor
fiadd
xor
lds
and
push
xor
push
add
retf
cmp
inc
add
or
and
sub
push
dec
dec
inc
(bad)
sub
pop
and
sub
jo
jae
cdq
loope
aaa
(bad)
sub
fs
mov
sbb
outs
pop
push
xor
push
ficomp
lock
lods
jo
xor
shr
jae
imul
mov
icebp
push
or
dec
jmp
xchg
enter
and
inc
or
xor
cmps
add
add
or
daa
add
fstp
add
xor
pushf
imul
sbb
add
or
push
add
mov
call
and
arpl
into
or
das
push
fnstsw
int3
jl
or
gs
xchg
xchg
cmp
dec
add
stc
dec
or
or
jno
or
neg
sbb
inc
sahf
shl
or
pop
outs
adc
jle
imul
add
adc
pop
inc
pop
xor
shr
je
mov
loop
loop
xchg
pop
mov
add
pop
fs
xchg
stc
ins
pusha
lea
pop
mov
or
aaa
add
mov
add
(bad)
adc
or
add
add
pop
add
inc
iret
leave
jge
adc
or
retf
add
cmps
enter
xchg
xor
adc
xchg
fld
sub
jnp
sbb
cmp
in
fisttp
test
out
add
movs
add
sub
add
dec
xchg
xlat
and
pusha
fwait
pop
int3
mov
jns
mov
push
adc
cmp
ss
push
xlat
bound
push
rol
loop
add
sbb
and
sbb
sbb
fidivr
cmc
add
and
sub
sbb
mov
pusha
cmps
gs
cmp
fdivr
sub
mov
adc
push
pop
adc
push
arpl
ret
push
js
retf
ja
or
fnstcw
pop
adc
xor
xchg
sub
xchg
in
loope
jge
cmp
mov
add
js
imul
dec
push
das
jmp
stc
and
sub
xor
mov
retf
adc
retf
pop
cmp
inc
popa
or
inc
iret
push
jl
shl
test
stos
cmc
fwait
loop
gs
pop
stc
sub
iret
push
push
es
leave
fisub
cmp
and
dec
pop
sub
out
imul
ror
add
sbb
xchg
stc
les
jae
sub
in
add
into
or
or
mov
inc
pop
sub
sbb
call
add
adc
retf
or
ret
sbb
adc
bound
xlat
cmps
loop
and
