mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
imul
test
or
dec
ins
imul
add
(bad)
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outs
jb
add
(bad)
stc
scas
call
mov
jae
out
jnp
add
ss
mov
xchg
out
outs
add
int3
mov
or
popa
jmp
mov
outs
dec
push
push
je
mov
add
push
or
push
imul
aas
or
push
out
imul
add
outs
xchg
and
scas
jns
aas
add
sub
cmp
cmp
jg
out
xor
aaa
test
pop
push
dec
bound
arpl
pop
sbb
inc
jns
cld
call
(bad)
dec
cdq
jb
leave
ins
mov
popa
arpl
add
pop
inc
(bad)
ffree
add
or
imul
mov
mov
add
add
add
jmp
clc
jmp
adc
adc
int3
add
mov
adc
cwde
mov
pushf
sbb
push
push
push
pop
mov
aas
or
xor
and
sbb
popa
int3
popa
and
adc
mov
mov
add
push
inc
popa
xor
nop
jmp
xchg
xchg
xchg
cs
xor
sub
xchg
xchg
xchg
sub
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
adc
add
leave
enter
xor
hlt
daa
mov
leave
lock
dec
in
aas
call
daa
pop
pop
andps
in
mov
ins
das
push
fucomi
fdivr
aam
ror
mov
les
les
outs
push
push
loop
dec
imul
je
movzx
mov
ss
pop
ret
in
cmp
sar
mov
in
in
lods
test
rep
pop
hlt
mov
cmp
jne
push
neg
in
out
sbb
sub
xor
mov
jmp
mov
std
out
out
mov
pop
mov
add
mov
inc
mov
add
push
sub
jns
in
inc
mov
pushf
sub
js
punpcklbw
in
mov
mov
add
scas
sti
not
mov
mov
call
inc
shl
add
cmp
inc
add
mov
fstp
or
mov
pop
add
(bad)
ja
push
fcmovnbe
mov
pop
pop
pop
(bad)
mov
ja
xor
adc
dec
cmp
add
or
add
call
out
popw
push
push
outs
(bad)
xor
mov
jbe
push
pop
push
push
repz
and
mov
add
cmp
jne
xor
add
pop
or
add
push
add
jo
outs
or
shl
cmp
aaa
xor
mov
mov
out
in
shl
dec
mov
sub
pop
pop
jo
(bad)
into
call
aam
push
mov
fimul
add
pop
sub
add
pop
sbb
enter
push
and
push
add
movhps
mov
xchg
pop
push
cmp
push
push
add
xchg
jne
push
jmp
mov
add
fistp
pop
mov
add
sub
mov
mov
cld
dec
or
addr16
pop
jmp
sub
or
es
inc
cmp
test
xor
ins
js
mov
cmp
test
jmp
add
inc
in
(bad)
js
jae
push
push
add
mov
mov
test
ins
fsub
je
xor
in
es
dec
cmp
or
and
sub
(bad)
push
pop
sub
stc
shr
fild
lahf
push
pop
icebp
fmul
mov
push
push
dec
pushf
sbb
ret
mov
xchg
arpl
sub
repz
mov
ret
lock
add
adc
mov
clc
xor
sbb
sbb
jb
call
jo
ja
and
jae
or
pop
imul
or
push
es
outs
cwde
loopne
std
std
test
or
add
jo
hlt
mov
lock
cmp
jne
inc
pop
xchg
out
bound
je
jno
inc
sub
pusha
rol
cmps
inc
mov
(bad)
fucomip
imul
lea
(bad)
out
xchg
test
add
push
dec
mov
cmp
loop
mov
adc
cmps
adc
pop
mov
xor
jmp
or
add
idiv
cmp
or
jmp
mov
ja
or
sbb
pop
imul
push
push
es
sub
aad
cmp
mov
pop
jne
cmp
lds
xchg
pop
punpcklwd
xchg
inc
push
mov
loopne
mov
sbb
aaa
add
outs
lods
xor
push
sbb
cmp
and
div
inc
jae
mov
ds
aas
shl
pop
pop
adc
inc
cmp
jg
mov
jle
hlt
jge
mov
ror
push
pop
mov
add
pand
inc
daa
ja
ja
jmp
icebp
shr
jne
push
call
jno
lea
and
dec
je
xlat
mov
push
add
sub
pushf
out
dec
dec
xchg
mov
add
cli
or
pop
(bad)
jge
mov
sbb
xor
adc
cmp
or
(bad)
call
mov
sub
fwait
rol
jnp
add
repnz
and
cmp
add
fimul
aas
mov
push
outs
or
and
add
xor
mov
sbb
outs
or
test
push
add
push
xchg
clc
loopne
push
jmp
stc
cmp
jne
pop
jg
adc
int3
sbb
jl
in
dec
ret
pop
fidivr
scas
cs
inc
lock
jbe
or
pop
cmps
pop
jle
ror
lea
sub
rcr
lahf
dec
cmp
pop
rcr
pop
jo
loopne
test
mov
cmp
(bad)
jne
cmp
pushf
inc
movs
xor
aam
adc
ja
jmp
mov
push
mov
push
add
inc
das
dec
push
push
push
mov
push
data16
cmp
jle
and
mov
sub
push
xchg
lea
or
outs
add
adc
inc
cmp
sbb
or
mov
push
cld
shr
lods
js
adc
mov
les
ins
das
xor
bound
pop
fs
xor
push
das
dec
ret
push
das
xor
in
pop
pop
pop
into
push
sbb
(bad)
scas
test
retf
adc
xchg
xor
jo
or
add
dec
mov
lea
or
or
jmp
or
cmp
pop
cmp
(bad)
popf
push
cld
cmp
and
mov
add
in
sbb
fcomip
aaa
push
(bad)
jbe
or
push
fistp
mov
cmp
adc
inc
adc
cmp
xchg
ja
jne
test
jns
ret
cli
add
jg
(bad)
dec
sub
sbb
mov
mov
aaa
loop
fist
or
fsubr
sbb
mov
aaa
loop
jo
adc
adc
out
add
or
sbb
inc
cmp
jecxz
adc
jnp
add
add
sub
lea
mov
sbb
call
adc
mov
or
or
push
loope
dec
cs
pcmpeqd
add
in
sbb
sub
add
jmp
jmp
sbb
fucomip
push
push
push
or
ins
rol
dec
ins
call
ret
inc
push
push
push
xchg
dec
sub
or
jnp
(bad)
std
fiadd
enter
ret
aas
sub
dec
or
add
je
mov
lahf
icebp
jb
sub
xor
jo
xchg
lea
cmp
faddp
sahf
fstp
xor
mov
test
rol
add
and
ret
jne
sub
inc
xor
and
mov
pop
cmps
hlt
pop
imul
pop
mov
out
dec
(bad)
in
js
(bad)
mov
xchg
scas
ror
xor
mov
sub
push
mov
dec
(bad)
cmovge
or
dec
adc
xor
inc
add
mov
xchg
cmp
aad
sahf
loope
fisttp
adc
ja
sbb
add
shl
lea
rol
mov
test
mov
ret
rcr
mov
mov
mov
add
or
movs
sti
imul
jbe
test
jo
clc
add
fdivr
retf
and
test
adc
inc
add
stos
dec
mov
cmc
or
ins
ficom
cmp
or
dec
dec
mov
mov
sub
scas
lock
cmp
repnz
retf
aas
pop
es
sub
enter
fisttp
jae
sbb
ror
movs
mov
rol
lock
adc
jmp
fdiv
xor
cwde
sub
add
add
repz
mov
push
fs
jae
adc
sub
xor
shr
mov
add
aaa
ds
add
xor
push
pop
and
pop
push
jo
inc
pop
or
and
mov
xchg
ffree
adc
mov
inc
mov
pusha
mov
repnz
or
push
push
cwde
or
cmp
(bad)
test
cmp
or
out
add
int
fsub
mov
push
in
jno
popf
jle
mov
and
or
bound
push
cmp
pop
test
mov
jbe
pop
je
cwde
jbe
fstp
mov
cmp
cmp
pusha
sbb
fmul
jmp
adc
pop
ins
fstp
pop
dec
mov
or
pxor
js
inc
push
and
addr16
mov
clc
dec
or
repnz
mov
sub
mov
jmp
imul
push
cli
mov
pusha
aaa
pop
or
cmp
xchg
push
cmovle
imul
pop
lahf
pusha
xchg
dec
or
jne
cmp
ficomp
aad
sub
push
cmove
(bad)
or
add
xor
jle
cwde
cmp
addr16
cld
push
pop
or
clc
dec
push
cmp
cld
cmp
add
arpl
jg
add
stos
mov
pop
adc
push
sub
(bad)
ins
int
loop
dec
push
adc
push
jne
sar
xchg
sbb
ror
pop
inc
ins
push
pop
push
sub
pop
push
xor
loop
add
add
add
mov
jg
sub
movs
or
cs
push
lds
cmp
test
sbb
es
fsubr
pop
mov
pop
lock
add
gs
jne
dec
mov
or
ins
sbb
xor
mov
sbb
sub
adc
mov
mov
jne
cdq
or
ret
fstp
and
push
add
jl
lock
ret
bound
test
inc
outs
jge
call
rcr
cmp
cmps
(bad)
std
lock
mov
ret
pop
mov
int
sub
pop
pop
pop
jl
add
sub
lea
out
xor
sbb
test
je
addr16
add
call
cmp
or
jmp
push
repnz
outs
movs
lahf
lock
adc
or
or
sbb
into
push
sub
cmp
mov
inc
push
cmp
jge
clc
das
sbb
loope
xor
push
dec
xchg
(bad)
retf
cmp
or
test
cmp
nop
out
sub
mov
aaa
in
lds
adc
mov
lea
add
sub
aad
push
mov
add
adc
shr
aad
pop
mov
and
outs
int
push
sub
xchg
cdq
shr
fbld
jno
cmp
fisubr
sti
jg
sub
add
daa
(bad)
cmp
(bad)
mov
das
in
mov
or
and
pusha
ret
lds
cld
adc
mov
push
cmp
add
fld
mov
lds
std
push
movs
pop
mov
test
test
xor
add
pop
mov
cmp
sub
sub
sub
or
adc
push
adc
loope
cmp
push
(bad)
sbb
sbb
loopne
jl
adc
jmp
add
sbb
(bad)
ret
sbb
add
mov
jmp
fist
mov
push
mov
ins
jge
cmp
je
fmul
xchg
shr
mov
push
sbb
fwait
adc
(bad)
aaa
push
stos
xchg
test
jle
nop
call
lock
push
fidiv
in
nop
jmp
stos
scas
out
out
dec
sub
inc
jno
or
out
inc
xor
ret
mov
xor
mov
xchg
div
imul
mov
ret
push
jmp
xor
add
adc
inc
out
xchg
(bad)
mov
cwde
je
sbb
sub
inc
sub
jg
dec
in
bound
cdq
dec
and
add
movs
into
push
or
adc
adc
ret
repz
cmp
xchg
movs
nop
jle
test
jne
(bad)
std
(bad)
aas
rcr
sti
sbb
mov
mov
fadd
jae
loopne
out
inc
ret
push
push
inc
sbb
add
jne
pop
jne
xor
retf
(bad)
(bad)
imul
mov
or
mov
mov
push
cld
aaa
mov
sub
jg
sub
inc
add
adc
call
cld
inc
jg
add
mov
inc
rep
jmp
mov
leave
jmp
mov
jmp
mov
mov
pop
mov
xchg
fadd
repnz
sbb
jg
mov
bound
div
je
sar
js
rep
xchg
jbe
xor
lea
xor
std
xor
xlat
add
ds
inc
iret
mov
out
call
xlat
test
sbb
mov
and
sbb
jge
cld
fstp
push
add
fbstp
in
push
jmp
std
(bad)
dec
fwait
cmp
jmp
pop
pop
mov
sub
add
push
mov
pop
fbld
and
dec
and
jae
or
cmp
mov
jno
xor
adc
jmp
add
and
xchg
fidiv
clc
push
add
out
aaa
pop
mov
inc
inc
daa
jb
and
pop
movs
bound
xor
(bad)
or
nop
dec
aaa
ins
adc
add
push
test
jne
push
jnp
out
test
mov
loop
inc
push
std
ss
jmp
daa
and
rol
sti
add
jo
or
stos
xor
imul
mov
outs
jge
push
add
and
or
stos
or
or
daa
in
fucomip
jg
sbb
popa
jb
cmp
ja
sub
data16
lods
stos
rcr
sub
mov
ja
inc
repnz
add
fstp
add
add
fisttp
frndint
fldcw
add
jmp
xchg
test
pop
xchg
aad
inc
mov
inc
sbb
jbe
dec
sub
adc
mov
das
hlt
xor
dec
add
jmp
or
dec
sub
jae
pop
push
fsubr
sbb
outs
pop
jo
pop
cmp
pop
cmp
and
ret
add
add
pop
pop
sbb
movs
add
pop
mov
sbb
clc
scas
push
inc
cmp
mov
ja
and
sub
push
jne
call
and
(bad)
sub
je
les
push
ror
or
mov
aaa
mov
cmp
jbe
mov
mov
inc
inc
and
jbe
fld
push
fnsave
in
ror
fmul
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
not
ficomp
sbb
sbb
loop
push
adc
in
call
loop
je
mov
cmp
jne
push
adc
add
mov
cmps
imul
add
jmp
pop
cmp
cmp
add
jmp
jne
shr
adc
add
das
ja
mov
shr
push
sbb
inc
dec
in
dec
repz
pop
cmp
stc
mov
int3
rcl
and
mov
cmp
jne
dec
sar
out
dec
and
cmp
jecxz
fwait
or
add
mov
shl
data16
pop
xlat
or
stos
adc
stos
pop
pop
ret
cmp
imul
jo
nop
loopne
mov
push
pop
push
pusha
ins
mov
mov
int3
add
push
inc
fidiv
add
imul
js
pop
pop
je
scas
sub
fnsave
jne
dec
and
and
sbb
mov
add
sub
or
cmp
ja
lea
push
add
lock
sub
out
out
int
or
jge
jmp
inc
scas
jle
pop
hlt
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
xchg
std
push
je
add
and
jle
push
adc
or
shl
sbb
push
cwde
pop
xor
mov
sti
loopne
cmps
iret
mov
not
stc
sbb
jbe
sub
mov
dec
jne
pop
jae
cmp
mov
jle
xchg
repz
repz
mov
inc
or
inc
dec
jne
inc
movs
pop
sbb
and
jl
dec
je
hlt
cmp
or
adc
fld
cmp
add
je
loope
mov
das
or
and
mov
push
jb
jge
mov
stc
sbb
adc
mov
fcomp
stos
leave
push
mov
jg
aas
cmp
xchg
dec
mov
cli
or
xchg
dec
ds
pushf
or
ret
mov
adc
xchg
(bad)
jl
xchg
cwde
push
and
sbb
cld
mov
out
and
inc
mov
mov
sti
xchg
outs
das
or
sub
test
out
sub
mov
jecxz
add
leave
sbb
mov
repz
inc
jbe
imul
cmp
mov
(bad)
mov
bound
jmp
lods
inc
cmp
xlat
fadd
outs
xor
xchg
jmp
fbstp
test
into
sbb
ror
mov
push
pop
jmp
inc
enter
mov
inc
mov
retf
into
pop
inc
test
xchg
clc
(bad)
(bad)
(bad)
(bad)
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
and
sti
(bad)
jmp
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
stos
(bad)
(bad)
(bad)
push
mov
or
mov
pop
out
sub
imul
(bad)
div
jmp
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
(bad)
(bad)
(bad)
cld
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
(bad)
inc
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
inc
xchg
push
cmps
scas
mov
pop
or
add
cmp
xor
in
jmp
call
lds
mov
mov
mov
popa
hlt
mov
and
(bad)
(bad)
(bad)
(bad)
repz
mov
sub
and
and
outs
bound
xor
mov
and
fld
pusha
mov
cmp
jne
push
pop
and
add
cwde
(bad)
jp
mov
jecxz
out
movzx
aad
lea
ss
adc
push
jl
call
lods
ss
hlt
pushf
pop
hlt
push
data16
dec
or
xchg
xchg
scas
or
test
out
mov
jmp
jmp
or
test
inc
push
(bad)
(bad)
(bad)
call
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
push
scas
jo
loop
ins
jne
fninit
fwait
or
(bad)
mov
lods
push
jmp
dec
xlat
mov
xor
mov
and
mov
add
fild
or
dec
cld
jne
dec
mov
xor
ror
out
jp
fbstp
retf
mov
ds
fcom
les
enter
dec
imul
mov
sbb
out
add
inc
push
rcr
out
xchg
test
sub
clts
cmp
ja
pop
fs
mov
ins
jg
push
outs
loopne
dec
mov
or
push
cld
into
mov
jl
pop
(bad)
jg
mov
xor
push
shr
dec
rep
pop
inc
mov
mov
adc
mov
fsub
mov
jmp
cmp
je
pop
mov
add
jae
cs
or
adc
xor
push
sbb
cmp
aas
imul
xlat
lods
(bad)
mov
mov
mov
shl
clc
inc
mov
fsubr
cmp
out
jae
paddd
pmaxub
and
jmp
or
or
loopne
add
add
adc
inc
lahf
ja
mov
xchg
(bad)
lock
adc
sbb
mov
cwde
mov
movs
jo
mov
(bad)
mov
adc
in
fiadd
mov
pop
sbb
sbb
ret
arpl
mov
out
inc
ror
xchg
je
retf
sbb
cmp
sub
ficom
jl
push
inc
mov
sub
mov
mov
cmp
int3
jb
push
jo
hlt
push
or
jne
or
movzx
je
inc
pop
fsubr
lds
ins
push
sub
xor
add
sbb
mov
xchg
push
mov
mov
cmp
cli
push
movs
ror
dec
jle
jne
mov
and
ficom
rcl
shl
jmp
add
repnz
je
pop
add
jg
ret
pop
add
sub
mov
pop
push
mov
inc
ja
movs
pop
pop
add
out
mov
fsubr
cld
(bad)
(bad)
push
xchg
(bad)
xor
das
mov
add
jb
addr16
es
fadd
rol
les
push
mov
push
add
or
int
pop
data16
shr
pop
icebp
test
xchg
js
pop
loopne
adc
lock
dec
jle
fistp
mov
mov
dec
push
cmp
sbb
add
dec
jne
dec
(bad)
out
or
fucomi
sbb
add
sbb
jecxz
and
ss
dec
cmp
pop
lahf
push
ror
in
popf
enter
ds
dec
stos
or
call
xor
call
lahf
in
push
pop
add
mov
dec
arpl
hlt
xor
loopne
mov
mov
mov
or
inc
add
cmp
mov
push
or
cmps
jne
(bad)
pop
cmp
mov
out
jmp
push
ficomp
or
cs
out
mov
mov
inc
jp
movs
in
sahf
jg
test
jmp
in
and
pop
out
cmp
adc
jg
push
or
cli
in
push
call
cwde
or
rcl
push
pusha
push
push
cmp
cmps
mov
pop
iret
cs
mov
xchg
loopne
scas
or
(bad)
ss
jae
sub
push
push
add
mov
cmp
je
or
jne
movsx
inc
inc
xor
mov
rol
nop
fldcw
jecxz
inc
inc
popw
add
ins
and
fdivr
adc
inc
aaa
pop
(bad)
mov
fisttp
adc
dec
adc
lods
sbb
je
cld
or
adc
callw
test
mov
not
out
daa
bound
xor
cmp
je
xchg
jb
jbe
test
cmps
lock
out
es
sar
cs
clc
add
stos
mov
enter
in
or
xor
adc
rcl
jns
leave
cmp
add
push
xchg
das
cmp
in
push
sbb
push
sub
cmp
sbb
sub
push
outs
push
clc
pop
mov
add
push
add
(bad)
jle
jmp
jmp
jmp
mov
mov
cmovno
xor
int3
mov
nop
pop
dec
or
xor
push
add
mov
mov
or
and
lea
mov
add
inc
mov
sub
add
or
cmp
jne
mov
fucomi
add
inc
inc
mov
jg
push
loope
je
xchg
rcr
cs
adc
sbb
inc
jmp
xchg
out
daa
mov
xor
push
daa
lahf
adc
push
mov
or
das
push
pmulhuw
pop
add
and
adc
add
clc
sbb
add
aas
sbb
popf
pop
(bad)
cmps
mov
push
sub
lds
inc
jg
and
sbb
pop
push
push
push
push
push
mov
dec
ds
and
stc
es
mov
sahf
sub
or
pusha
add
imul
fmul
jl
push
fcom
dec
xor
adc
push
ins
fcmovbe
cmc
lea
pop
es
add
ret
cdq
clc
push
ins
inc
jmp
ret
xor
test
fcmovb
jecxz
xor
xchg
ret
ja
mov
lahf
mov
add
je
into
ja
in
adc
push
sub
ja
cmp
pusha
add
sub
jb
je
jmp
cmp
jmp
adc
sub
adc
jmp
sub
push
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
pusha
call
push
push
xchg
pop
xchg
mov
jge
fdiv
outs
jp
sbb
rcl
and
test
mov
mov
sbb
(bad)
dec
sbb
out
push
inc
sti
sub
mov
jo
cmps
push
sub
mov
sar
xor
call
repnz
or
or
movs
fmul
aam
out
and
add
push
aas
mov
adc
enter
idiv
cmp
je
cmp
jne
and
cmp
add
not
inc
or
mov
add
adc
sbb
sahf
sbb
ss
fdivr
mov
lods
sub
in
xor
sbb
xor
call
adc
fisub
xchg
mov
loope
mov
jbe
cmp
jle
fld
(bad)
rcr
rol
fdiv
xor
ffreep
add
test
shl
add
inc
js
dec
mov
jmp
add
fst
xor
ret
ds
xchg
sbb
xchg
fadd
fisubr
push
or
dec
jne
pop
pop
pop
inc
or
add
es
add
pusha
dec
add
sbb
or
jo
mov
mov
pop
sbb
mov
add
dec
sti
outs
xchg
mov
mov
es
push
jmp
mov
mov
nop
adc
mov
push
push
out
cmp
pop
out
jb
add
cmps
neg
sbb
inc
call
test
ja
cmp
mov
add
mov
mov
leave
inc
cmc
lods
push
xor
out
icebp
push
cmp
clc
adc
cmp
or
mov
cmp
jmp
push
push
mov
jmp
pusha
repnz
mov
mov
fadd
loopne
push
cmp
xor
popa
sub
and
mov
cmp
or
ds
push
mov
mov
fnsave
sub
sbb
mov
dec
or
js
out
fsub
push
jne
ds
adc
adc
inc
or
xor
sbb
adc
fiadd
push
push
test
imul
adc
jne
shl
sahf
push
cmp
cmp
mov
add
adc
movs
add
sbb
dec
sbb
push
pop
mov
adc
ds
call
dec
xor
clc
iret
jge
lea
ret
nop
pop
es
mov
ret
add
cmp
and
bound
push
pop
(bad)
stc
push
xor
push
jb
outs
push
adc
adc
pop
mov
pop
into
and
or
add
push
add
(bad)
daa
loope
inc
in
mov
fiadd
mov
mov
push
add
jle
shl
add
push
or
push
mov
sbb
mov
push
push
test
pop
xchg
inc
movs
pop
mov
call
mov
dec
jl
lock
and
mov
pop
push
stc
jne
adc
mov
push
test
dec
jne
ss
mov
inc
push
inc
inc
jg
rol
imul
ret
dec
sbb
sub
ins
xchg
adc
push
test
mov
icebp
pop
(bad)
ja
jle
push
add
and
push
adc
add
sbb
xchg
sbb
pop
and
(bad)
or
jb
inc
clc
add
loopne
cdq
mov
mov
das
stc
mov
xor
pop
rol
ds
cmp
and
mov
out
(bad)
cs
test
sub
adc
mov
xchg
sbb
mov
jl
add
je
cmp
jp
cs
fdiv
or
(bad)
jmp
lea
cmp
pop
js
sub
mov
call
sbb
jl
out
pop
add
aas
(bad)
mov
inc
sub
fld
fistp
mov
and
or
jge
xor
adc
mov
mov
sbb
scas
in
and
or
outs
es
lock
add
std
jbe
pusha
adc
jmp
inc
add
jmp
pop
daa
pop
sub
and
fnstsw
or
or
in
lahf
mov
jae
jbe
pop
mov
push
xchg
fimul
inc
xchg
mov
scas
add
repnz
adc
add
pop
pop
xor
scas
push
jl
add
js
xchg
jle
mov
push
cmp
jl
(bad)
mov
aas
inc
js
mov
inc
cld
ret
push
aas
or
je
mov
push
pop
icebp
and
cld
add
cmp
pop
and
mov
sbb
loope
adc
mov
sub
fdivr
out
popa
cmp
inc
sbb
je
cmp
mov
call
cmp
scas
ror
add
mov
mov
mov
mov
lds
jbe
pusha
mov
sbb
dec
clc
cmp
retf
or
icebp
data16
xor
mov
jo
cmp
jmp
aaa
ret
mul
sub
add
cmp
fs
dec
jne
add
add
mov
cld
jge
jmp
add
dec
jmp
and
inc
pushf
sbb
loopne
ret
mov
ss
add
pop
dec
jne
dec
pop
aad
mov
int3
add
or
pop
or
xchg
jmp
jmp
cmp
rol
loopne
out
sub
(bad)
imul
push
nop
dec
cmps
pop
dec
and
and
sbb
fisttp
and
xlat
or
jmp
aam
sub
or
cmps
aaa
xchg
retf
clc
inc
das
lods
fild
ret
add
adc
sbb
lahf
cmp
jmp
mov
adc
cdq
retf
xchg
pop
adc
dec
inc
mov
pop
mov
out
cmp
rcl
fmul
movzx
xchg
mov
cmp
jge
sub
xchg
sbb
in
popa
jg
push
jne
adc
rol
inc
jmp
and
jno
pushf
(bad)
cmp
pop
hlt
jae
xor
sub
jge
mov
jbe
mov
mov
add
stc
add
lea
inc
dec
push
pop
or
cli
mov
pop
or
lahf
cdq
mov
push
mov
dec
jge
cmp
adc
imul
add
gs
cmp
mov
mov
lea
lock
sub
sbb
add
mov
sub
xor
pop
inc
pushf
xor
mov
push
ins
dec
js
mov
or
adc
adc
scas
sub
ss
push
cmp
mov
add
or
cmp
cmp
jne
sub
push
inc
(bad)
cs
pusha
pop
popa
xor
and
mov
push
arpl
cli
pop
cmp
or
jg
pushf
inc
cmp
test
fs
pop
xor
in
(bad)
or
int
(bad)
ret
lods
fild
inc
pop
arpl
xchg
fild
inc
push
das
pop
add
pop
push
push
sub
test
cmp
and
rcr
mov
add
mov
cmp
rcr
cmp
cmp
hlt
jmp
mov
mov
inc
into
sbb
push
cmp
add
call
dec
das
int3
sub
ret
pop
xchg
pop
push
mov
and
add
pop
add
jle
cmp
add
push
fidivr
outs
add
jne
out
je
out
push
add
and
xor
jae
test
fst
sbb
or
mov
cmps
jg
pop
ret
ds
shl
loope
add
pop
dec
cmp
nop
fmul
jmp
add
loope
xor
dec
or
std
pop
jmp
ror
sub
xor
inc
cmp
pusha
adc
fadd
push
in
(bad)
xchg
js
fst
push
clc
mov
(bad)
sbb
dec
pop
dec
and
pop
sub
aas
push
mov
and
loopne
lea
mov
mov
dec
pmuludq
mov
mov
arpl
mov
xchg
outs
cmp
pop
push
add
cmp
je
cmp
je
add
cmp
je
cmp
je
cmp
push
cmp
je
mov
add
loop
xor
call
adc
or
adc
jmp
xor
mov
pop
add
in
adc
push
adc
cmp
pop
jmp
cmp
retf
sub
retf
jmp
in
aam
outs
cmp
out
pop
fimul
aad
push
out
stc
es
out
or
jo
jns
push
pop
jbe
test
add
fimul
mov
inc
scas
test
int3
jg
fptan
fnstsw
and
and
push
imul
pop
outs
ja
cmp
push
inc
outs
js
sbb
repnz
nop
mov
inc
inc
xor
xchg
mov
sub
out
lods
sbb
cmp
dec
int3
icebp
jmp
daa
xchg
sbb
adc
or
adc
nop
xchg
repnz
pop
pop
out
adc
jnp
sub
sahf
inc
pop
outs
jp
add
add
adc
aas
cwde
nop
retf
sub
cld
push
test
dec
dec
xor
sbb
push
mov
sar
xor
test
inc
add
(bad)
fsubr
int3
dec
clc
push
push
add
sar
scas
mov
add
sub
mov
cmp
xor
in
cmp
add
dec
or
push
or
mov
icebp
mov
or
adc
xor
cmc
jb
push
pop
or
xor
daa
inc
push
(bad)
jge
cmp
stos
sub
aam
adc
mov
push
add
or
test
inc
inc
or
(bad)
(bad)
fsubrp
cmp
add
sar
xor
mov
cwde
popf
or
adc
and
mov
jbe
dec
jne
adc
sbb
pop
enter
daa
mov
ins
and
mov
in
inc
push
enter
popa
jge
pushf
sub
pop
dec
shr
add
out
or
dec
jne
sub
repz
jp
std
es
loop
rcl
les
cmp
cmp
lock
or
ja
sti
add
add
inc
jmp
mov
icebp
mov
xor
call
push
cmp
cwde
retf
push
int3
lock
sub
popa
xor
pop
cmp
push
pop
movs
pop
loope
ins
push
fiadd
std
cmp
popf
adc
pop
adc
xchg
xchg
add
pop
mov
add
cwde
add
inc
xchg
into
ret
inc
and
pushf
les
stc
sub
cmp
adc
mov
aaa
add
es
mul
mov
adc
ja
ins
fs
add
dec
adc
pop
pop
ret
test
jl
or
add
ins
in
ror
ret
shrd
shr
ret
(bad)
pop
mov
pop
xor
xchg
aaa
les
push
push
or
adc
push
inc
cmp
push
sub
jl
(bad)
fcmovb
hlt
add
(bad)
out
sub
inc
jmp
cmp
jne
mov
inc
and
sub
inc
not
test
sbb
xor
aam
add
sub
sti
mov
dec
adc
or
add
sub
jb
add
adc
or
mov
and
or
in
xor
sbb
aaa
movs
sbb
sbb
nop
xchg
pusha
not
out
out
push
jb
jmp
jl
and
lock
jbe
jmp
jg
mov
cdq
jae
sub
adc
movs
xchg
cmp
mov
adc
or
or
mov
xor
fiadd
cmp
es
xor
mov
rol
neg
push
sub
rcl
jae
movzx
or
pusha
jne
adc
int3
and
jg
sbb
call
jl
pop
invd
add
and
mov
shl
add
out
or
shr
setl
cmp
je
dec
out
or
loope
cs
js
sbb
mov
mov
cmc
shl
ss
in
idiv
and
push
in
sti
jge
iret
out
xor
sahf
sar
jbe
(bad)
aad
and
popf
call
sbb
mov
lods
aaa
dec
adc
mov
ficom
jge
js
sub
in
sub
cmp
clc
scas
inc
add
and
jo
mov
mov
lock
add
pop
shl
fucomp
(bad)
xchg
inc
cmp
je
and
mov
movs
imul
push
push
in
sti
jle
cs
sbb
jl
scas
(bad)
add
mov
sub
pop
popa
ss
fidivr
mov
jmp
push
call
mov
nop
jge
cmp
jge
mov
cdq
sub
mov
sbb
mov
mov
cmp
ror
inc
hlt
stos
dec
loopne
not
xor
push
inc
aas
sbb
jge
dec
and
dec
and
mov
jg
shr
xlat
mov
or
add
mov
push
mov
sub
or
(bad)
dec
in
xor
jmp
add
shl
and
push
(bad)
adc
dec
jne
aad
mov
mov
pop
push
sub
inc
aas
push
cmovae
dec
add
jecxz
jne
out
push
adc
mov
push
dec
mov
lods
cmp
inc
loope
adc
jg
aam
dec
push
inc
das
cmc
movs
psubusw
out
pop
sti
add
push
and
dec
adc
call
jne
imul
dec
bound
je
mov
cmp
clc
aad
xchg
push
out
fisubr
and
data16
cmps
push
and
jle
repnz
add
cdq
push
xor
inc
test
push
movs
xchg
scas
jbe
pop
pop
retf
test
cmp
adc
add
and
stos
das
leave
jns
dec
or
ins
mov
dec
nop
push
jne
mov
jbe
add
xchg
lea
xor
push
sbb
or
fild
movs
mov
daa
mov
out
mov
fwait
inc
push
hlt
add
inc
mov
mov
jp
mov
inc
xchg
mov
or
cmp
inc
vmread
pop
jne
ja
sbb
add
scas
loope
lods
or
mov
adc
addr16
mov
inc
add
jmp
fwait
(bad)
cmp
in
sub
lahf
mov
push
inc
cmp
inc
inc
retf
ins
mov
jne
stos
cwde
rcl
mov
adc
and
dec
in
or
(bad)
(bad)
je
push
add
mov
(bad)
jg
mov
ret
dec
push
push
mov
inc
mov
xchg
dec
shr
test
adc
and
imul
gs
xor
cs
ins
daa
inc
gs
test
dec
addr16
popa
je
dec
popa
ins
gs
daa
scas
fmul
push
ret
mov
fistp
mov
mov
and
push
xor
xor
fs
xchg
sbb
and
adc
sub
cmp
push
std
pushf
or
pop
push
dec
sub
push
sub
int
add
fst
aas
iret
test
add
inc
ins
push
mov
repnz
sysret
imul
pop
inc
mov
mov
jno
aas
sar
add
pop
xlat
add
push
and
mov
js
stc
cli
jge
inc
or
push
ret
popf
jmp
mov
lods
xor
jmp
ret
mov
fwait
in
je
inc
cmp
jne
adc
sub
in
ja
(bad)
sub
inc
ret
and
add
pop
fdiv
or
je
das
ja
push
xor
jae
pop
(bad)
dec
data16
popa
jb
out
int
and
arpl
gs
aaa
clc
(bad)
in
nop
pop
inc
ret
dec
xchg
stos
add
cmovg
mov
cmps
sbb
mov
mov
cmp
lock
mov
add
jmp
sbb
in
or
fldpi
inc
adc
push
stos
mov
inc
xlat
or
call
je
mov
push
add
rcr
retf
ret
mov
fisttp
mov
sbb
pusha
test
ret
lock
or
call
xchg
(bad)
out
in
add
daa
das
(bad)
enter
and
hlt
or
push
cmp
sub
cs
test
cmp
(bad)
jmp
fwait
jge
jl
dec
and
cmp
and
shr
jmp
and
loopne
fdivr
scas
sub
add
xchg
sub
lock
pop
mov
(bad)
mov
push
mov
push
inc
(bad)
mov
add
sub
mov
push
mov
adc
rol
jne
adc
mov
outs
pop
(bad)
loop
push
mov
cmp
dec
sbb
cs
sbb
inc
fld
mov
ja
fs
ret
outs
add
out
daa
enter
adc
stos
xchg
pop
data16
pop
mov
dec
fsubr
push
add
mov
scas
test
xchg
(bad)
idiv
inc
fbld
shl
and
mov
mov
sub
es
mov
push
jmp
jl
shl
(bad)
or
mov
push
shr
push
clc
and
fcomip
xor
inc
daa
sbb
movzx
inc
cmp
inc
sar
push
mov
inc
jmp
cmp
pop
add
pop
cld
ja
mov
shr
or
mov
adc
sbb
sti
pop
xor
and
retf
add
jmp
fisubr
and
rol
fwait
cmp
cmp
jae
cmp
jb
or
mov
or
dec
mov
and
sbb
jb
dec
jbe
pop
add
cmp
loopne
loopne
lea
ret
mov
mov
out
cmp
cmp
shl
push
pop
(bad)
push
cmp
rcl
cld
test
dec
push
icebp
scas
cli
mov
add
inc
test
pop
or
jae
push
clc
loope
and
je
cmp
adc
xor
or
rol
cmp
mov
and
or
mov
pop
outs
cld
ja
lea
dec
dec
cld
mov
cmp
pop
pusha
mov
inc
call
scas
sbb
or
mov
and
inc
inc
mov
ret
mov
sbb
sbb
fmul
jnp
xor
sbb
or
jb
inc
and
push
daa
fldl2e
cdq
adc
sbb
mov
(bad)
sar
lods
in
adc
lea
mov
shl
ins
add
cmp
mov
fimul
jmp
adc
enter
add
stos
mov
mov
fist
cmp
cmp
rol
push
ins
and
pop
inc
and
outs
leave
pop
xchg
xor
enter
inc
lods
inc
cmp
jae
cmp
enter
out
push
nop
xchg
(bad)
sahf
push
ins
or
test
mov
or
cmp
(bad)
sbb
ins
push
mov
xchg
fcmovbe
dec
mov
fs
aam
add
or
loope
aaa
hlt
xchg
imul
cmp
push
into
pop
sbb
jmp
lea
push
push
jp
xor
and
cmp
xchg
fadd
and
rep
xchg
popa
push
fdivr
aad
jge
fabs
push
sub
daa
inc
ffreep
stos
test
pop
dec
fmulp
ret
adc
call
test
cmp
add
stos
mov
(bad)
or
pop
pop
add
dec
adc
and
js
ret
data16
add
cmp
adc
jl
and
in
adc
xchg
mov
cmp
hlt
mov
pop
dec
inc
popf
(bad)
sub
mov
data16
inc
pop
loop
cdq
jmp
push
mov
mov
aam
(bad)
mov
and
xchg
fstp
je
push
add
clc
xor
cmps
push
xchg
call
inc
cmp
mov
mov
out
and
cmps
adc
jmp
push
mov
fwait
jb
xor
jecxz
push
and
mov
daa
movs
jge
xor
cmp
ret
mov
adc
and
ret
mov
imul
popf
jnp
imul
mov
fdiv
imul
dec
neg
cwde
xchg
pop
xor
leave
jecxz
ins
jle
cmp
add
(bad)
sub
xor
inc
cmps
push
mov
or
xor
or
cli
ins
std
jbe
add
pop
push
aad
push
(bad)
mov
add
xchg
inc
test
add
cmp
jle
iret
cmps
ins
jbe
add
or
jge
or
cli
test
pop
les
repz
push
push
xor
mov
sub
ret
mov
in
adc
or
push
call
cmps
push
add
add
inc
jo
in
add
add
sub
addr16
pop
lock
enter
push
or
and
je
push
enter
lods
add
out
pop
mov
xor
in
dec
and
outs
push
add
outs
fs
gs
jbe
or
jb
jns
inc
add
es
popa
bound
mov
push
outs
arpl
inc
gs
mov
ins
je
dec
outs
je
imul
mov
gs
jge
std
dec
outs
inc
arpl
or
or
jg
ins
int
jle
inc
xor
xor
(bad)
outs
ins
bound
sar
inc
outs
js
imul
ja
nop
add
push
andps
outs
mov
inc
xor
je
add
dec
ds
cmpxchg
movs
mov
pushf
cwde
xchg
nop
inc
sahf
pushf
pushf
mov
dec
dec
dec
sub
movs
das
rcl
add
rol
sub
pop
pushf
jb
imul
jb
jb
or
add
sbb
add
xor
hlt
cmp
cmp
lock
call
cmp
(bad)
aam
cmp
cmp
int3
enter
cmp
sar
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
xor
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
sahf
pushf
rol
cmp
daa
and
xor
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
xor
xchg
xchg
xchg
xchg
hlt
lock
call
in
(bad)
xchg
xchg
xchg
xchg
aam
int3
enter
xchg
(bad)
sar
mov
test
xchg
xchg
xchg
movs
mov
xchg
xchg
xchg
nop
mov
test
xchg
xchg
je
ins
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
leave
leave
leave
enter
sbb
leave
leave
leave
or
adc
leave
leave
leave
and
cld
aaa
in
in
clc
hlt
lock
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movs
mov
in
xchg
nop
mov
in
in
test
in
je
ins
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
ss
jb
clc
hlt
lock
jb
jb
call
outs
adc
ss
aam
ror
int3
test
leave
leave
leave
leave
mov
leave
leave
leave
lods
test
mov
pushf
cwde
xchg
nop
leave
leave
leave
leave
mov
leave
leave
jl
je
leave
leave
leave
leave
ins
push
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
xor
in
in
call
in
(bad)
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwde
xchg
nop
mov
movzx
shl
or
ret
shr
mov
pop
sub
popf
ret
nop
add
nop
ss
or
push
push
or
xor
in
je
retf
call
mov
cmp
ror
adc
scas
movsx
add
inc
and
mov
push
jmpw
(bad)
mov
pop
and
inc
add
sub
pop
add
mov
fs
lahf
mov
and
add
cld
test
test
fcomp
or
adc
sbb
and
dec
push
daa
movs
add
addr16
pop
jo
mov
mov
mov
push
cmps
icebp
stos
in
data16
and
push
imul
or
imul
gs
ret
jle
xor
push
push
xor
pop
adc
xor
(bad)
pop
push
das
inc
mov
push
shl
aas
inc
pop
mov
or
inc
fild
xchg
mov
mov
gs
xor
dec
push
push
dec
inc
inc
dec
add
outs
mov
pop
xchg
pop
push
and
dec
push
inc
fidivr
pop
and
call
sub
ins
mov
dec
pop
dec
dec
dec
inc
push
das
cmps
nop
xchg
sbb
add
jb
aaa
mov
shl
add
dec
idiv
loopne
fimul
icebp
repnz
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
(bad)
(bad)
leave
leave
leave
(bad)
enter
leave
leave
leave
retf
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmps
test
stos
leave
fwait
into
leave
stos
lods
aas
pop
jl
xchg
add
and
adc
ja
or
push
inc
imul
jmp
gs
jb
push
out
(bad)
mov
in
add
or
dec
sbb
loopne
out
arpl
xor
adc
inc
js
gs
stos
or
je
outs
outs
push
jge
(bad)
cmps
xchg
fistp
iret
mov
bound
je
test
mov
shl
int3
add
jo
nop
add
xchg
cld
shl
sbb
inc
dec
jne
dec
dec
gs
push
push
pusha
push
add
outs
idiv
aad
xchg
inc
dec
outs
mov
pop
sbb
shl
ret
popa
ds
jg
nop
test
ins
jle
in
dec
ret
xlat
jo
jo
ret
loope
or
sbb
xchg
mov
shr
push
or
imul
nop
and
sub
scas
jle
popa
outs
add
gs
js
push
jbe
or
dec
jbe
ins
test
out
mov
xchg
and
adc
pop
gs
sub
scas
ds
adc
stc
(bad)
mov
add
xor
dec
jo
scas
test
pop
add
ins
jle
fsubr
pop
(bad)
rcl
and
dec
and
cmpxchg
jnp
outs
fs
mov
add
movsx
(bad)
retf
imul
enter
call
fmul
inc
popa
jae
fiadd
cmps
pusha
xchg
ds
inc
inc
dec
push
ins
test
shr
or
xchg
adc
rol
shl
push
adc
leave
adc
xor
mov
mov
jb
ins
add
pop
scas
pop
and
or
add
mov
mov
leave
xchg
ins
inc
(bad)
or
adc
adc
(bad)
lods
inc
fisubr
push
mov
nop
mov
fsub
mov
sub
out
jb
pushf
add
out
and
sub
push
push
leave
in
je
data16
add
jo
ds
or
add
stos
push
fsub
les
popa
dec
dec
mov
add
aaa
xor
xor
add
mov
imul
inc
ins
jae
adc
inc
cmp
mov
mov
sub
aas
inc
icebp
outs
cmps
mov
je
dec
adc
jb
popa
fs
xchg
pop
das
les
int3
add
cmp
sbb
aam
das
fs
jo
push
adc
repz
int3
sar
push
aad
repz
mov
mov
(bad)
jg
mov
jnp
sbb
push
loopne
sbb
mov
mov
mov
sub
xchg
push
adc
pop
and
push
and
dec
sahf
imul
and
mov
pusha
test
ret
arpl
cmp
fwait
movs
inc
sbb
(bad)
mov
div
inc
mov
add
jmp
mov
mov
mov
das
ins
pop
ret
shl
fiadd
sub
push
lods
add
dec
js
lock
push
(bad)
addr16
dec
or
mov
push
sbb
loopne
out
adc
mov
icebp
pop
or
pop
pop
fist
adc
dec
inc
dec
push
push
ins
enter
lahf
mov
fsub
mov
lock
xchg
and
fdiv
pop
or
cld
pop
push
xchg
and
mov
dec
mov
jmp
(bad)
ds
and
sbb
sahf
inc
pop
add
aas
(bad)
xlat
sub
dec
jmp
cmp
jbe
cmp
repz
je
movzx
js
fild
push
push
inc
mov
add
add
inc
cli
inc
and
repz
jne
push
add
add
mov
sub
sar
sub
push
(bad)
(bad)
out
and
sti
je
loopne
inc
scas
mov
add
in
out
sbb
jmp
cld
adc
dec
loope
or
jp
xor
sub
mov
adc
data16
test
ret
or
add
hlt
ins
aaa
mov
push
retf
in
mov
dec
js
popa
cmp
add
jmp
mov
mov
cmp
or
mov
push
push
imul
dec
add
shl
(bad)
and
mov
adc
jl
cmp
jbe
adc
or
or
sub
clc
push
sub
inc
cmp
cld
inc
inc
jno
sbb
test
cdq
ret
push
retf
pop
inc
pop
push
mov
pop
test
ins
daa
pusha
lock
int
mov
mov
shl
iret
pusha
jmp
or
and
add
popf
add
push
cmp
jne
ja
dec
push
rol
loope
leave
mov
addr16
mov
adc
inc
das
dec
aad
sbb
in
or
mov
clc
add
mov
xor
add
test
xabort
mov
cwde
shr
xlat
push
sub
jbe
mov
mov
outs
xor
xor
mov
sub
add
cdq
cmp
inc
dec
mov
(bad)
jg
push
inc
stos
rol
add
call
sbb
clc
lea
cmp
movups
mov
xlat
dec
hlt
pusha
jnp
ins
pop
rol
cmp
popa
pusha
cli
jg
inc
sub
je
sub
je
jmp
not
inc
(bad)
cmp
inc
adc
repz
push
jmp
sub
and
dec
add
add
sbb
add
jecxz
jae
(bad)
je
add
jb
xor
jno
iret
lods
aaa
not
stc
sub
cmps
or
sbb
outs
mov
jg
dec
and
sti
fwait
add
lock
adc
sbb
add
dec
push
pusha
xor
(bad)
jbe
inc
sahf
inc
mov
xor
idiv
jmp
add
jmp
pop
sub
jge
or
lea
sub
xchg
pop
adc
scas
and
sub
sub
push
add
mov
(bad)
mov
sub
je
(bad)
jae
cmp
cli
cdq
cli
jl
inc
mov
int
imul
stc
pop
or
mov
jae
dec
jne
or
dec
leave
jne
or
jns
idiv
sub
jg
jg
mov
inc
dec
mov
ret
mov
shl
icebp
dec
mov
pop
pusha
push
cmp
jb
push
pop
mov
(bad)
(bad)
out
sub
mov
icebp
sub
jbe
add
mov
sub
jmp
mov
dec
jne
lds
sti
jg
push
mov
sub
xor
push
outs
cdq
enter
sub
add
mov
leave
jp
pop
(bad)
xor
xchg
sbb
inc
xor
enter
cs
cdq
adc
aaa
daa
sub
jmp
sub
mov
adc
pop
push
sub
jmp
data16
jge
daa
jg
das
jnp
fs
push
and
(bad)
cmp
outs
pop
fadd
faddp
add
ins
sub
outs
push
data16
(bad)
fdivr
mov
xor
fisttp
push
scas
add
push
sub
rcr
loope
(bad)
in
sub
pop
add
ret
ffree
ffree
ffree
pop
aad
add
inc
int3
aam
aad
jle
push
daa
jns
gs
xor
lods
add
xchg
cmp
add
xchg
ins
aaa
xchg
test
jle
shl
bound
push
mov
mov
adc
clc
out
mov
jecxz
retf
lock
sbb
sub
or
mov
js
scas
push
mov
outs
loopne
inc
cmp
daa
jnp
or
cmp
movs
rol
lea
or
mov
or
test
inc
in
dec
inc
loop
mov
adc
jmp
sbb
or
lods
mov
fstp
push
mov
dec
fcom
adc
shl
mov
les
ins
nop
inc
sub
aam
js
pop
(bad)
stc
lock
sub
pop
add
(bad)
xor
xchg
repnz
jl
inc
inc
pop
dec
in
xor
adc
mov
push
cmp
jmp
xchg
jecxz
push
mov
pusha
or
scas
lock
mov
(bad)
aad
(bad)
ja
int3
mov
or
fld
fcomp
jg
adc
setne
jmp
or
div
xor
in
dec
pop
sbb
addr16
and
nop
add
mov
lahf
add
sbb
cmp
mov
xchg
bound
loop
mov
adc
adc
jo
aaa
jmp
and
push
(bad)
not
mov
sbb
sub
or
pop
sub
dec
add
mov
and
inc
out
cli
inc
ja
pop
mov
sbb
shr
jbe
shr
gs
or
push
mov
mov
(bad)
or
pop
xchg
inc
fnstenv
add
add
dec
lods
dec
test
icebp
stc
popa
add
push
pop
hlt
pop
(bad)
out
ret
add
push
adc
or
xor
mov
jp
adc
jne
xor
sub
xor
mov
ror
xor
mov
das
mov
sub
mov
lea
sbb
and
out
ja
je
adc
jne
imul
enter
push
(bad)
cmp
add
sub
out
xor
xor
scas
mov
iret
lods
add
outs
add
mov
nop
adc
mov
and
int3
inc
mov
sub
adc
test
mov
inc
push
push
inc
sub
push
adc
outs
or
fwait
adc
pop
test
repz
into
push
push
inc
mov
add
jmp
lds
(bad)
lahf
clc
not
or
mov
jecxz
sysenter
shl
lea
adc
xchg
jo
or
mov
je
jae
pop
pop
ds
cmp
or
dec
daa
push
mov
inc
sbb
out
adc
les
add
adc
pop
(bad)
push
call
add
(bad)
outs
addr16
mov
retf
inc
adc
mov
push
lock
cmp
sbb
mov
mov
dec
dec
push
jg
rcr
jb
scas
pushf
sar
or
sub
jne
data16
inc
ja
cmp
push
jbe
(bad)
push
(bad)
mov
jle
adc
xor
pop
jne
mov
dec
cmp
xor
sbb
xchg
sbb
cmps
psubb
or
pop
in
adc
add
cwde
enter
lds
ins
cs
sub
movs
dec
nop
outs
inc
sub
mov
nop
jns
call
mov
xor
xchg
inc
lea
xor
sbb
or
cmp
pop
xchg
lock
(bad)
xchg
pushf
xchg
cld
imul
aam
in
ins
pusha
inc
call
leave
add
add
sbb
dec
call
xor
mov
(bad)
in
aas
ret
imul
int
xor
jge
(bad)
(bad)
adc
enter
das
lea
sbb
dec
shl
pop
and
pushf
jo
cmc
arpl
ror
clc
scas
or
rep
pop
movs
mov
sbb
pop
pop
ret
inc
xor
dec
jnp
fmul
dec
push
movs
inc
sub
pop
retf
xchg
pop
fstp
xor
sbb
jne
xchg
push
sbb
pusha
movs
xor
jo
jbe
mov
bound
aas
repnz
pop
xor
xor
repz
sbb
hlt
mov
mov
push
div
add
cli
dec
mov
scas
sub
jmp
push
(bad)
jp
(bad)
das
and
adc
loope
xor
or
sbb
jbe
sub
or
rol
mov
shl
push
out
push
popa
sub
test
mov
rol
cs
mov
pop
(bad)
mov
sti
sub
jbe
sbb
pop
jl
lods
in
adc
or
mov
outs
mov
push
lods
or
mov
cmp
jb
cs
mov
in
xchg
pop
loope
adc
in
or
popa
cvtdq2ps
mov
sub
jo
cmp
pop
and
cmps
add
inc
(bad)
arpl
mov
dec
cs
pop
lods
mov
sbb
jl
adc
pop
mov
sti
clc
push
pop
add
inc
loopne
add
xor
cmp
inc
(bad)
retf
xchg
adc
jg
mov
les
test
pop
mov
and
and
cmp
xchg
mov
mov
sbb
rcr
add
call
lahf
xchg
push
(bad)
jp
pop
repnz
out
push
adc
sahf
add
add
push
lods
xor
out
lods
cmp
je
stos
dec
jne
and
mov
stos
sub
bnd
sub
pusha
mov
jg
mov
fsubr
jne
cs
and
lods
jmp
xchg
addr16
ins
adc
mov
inc
mov
fmul
push
pop
mov
outs
scas
call
cmp
or
retf
shl
movs
xchg
pop
mov
rep
sbb
add
lock
push
push
fld
ins
mov
pop
mov
sub
add
pop
mov
cmp
imul
mov
add
adc
push
and
in
dec
bound
or
dec
cld
or
jl
pop
and
adc
or
ret
and
mov
in
cmp
pop
pop
jne
lea
mov
call
lahf
xlat
stos
test
push
inc
push
lahf
cmps
mov
push
iret
das
pop
mov
fstp
or
(bad)
push
fdiv
(bad)
in
xchg
fiadd
loopne
lods
mov
fadd
pop
xchg
inc
arpl
sub
je
es
and
jp
imul
xchg
cmp
push
sub
mov
repnz
call
cmps
icebp
xchg
nop
add
lods
xor
push
jne
add
pop
jbe
in
aaa
and
lock
xor
inc
loopne
call
jmp
mov
dec
movs
jmp
mov
cld
aas
and
jle
popf
je
cld
call
pop
js
mov
sub
or
lock
jmp
dec
fdiv
scas
xchg
jb
or
scas
jmp
js
jecxz
dec
mov
sbb
push
add
jmp
(bad)
dec
and
enter
mov
jl
bound
je
mov
or
je
mov
lahf
div
fild
adc
dec
jl
mov
ja
aas
fdivr
ret
mov
(bad)
adc
adc
fdivr
pop
mov
dec
or
xchg
mov
inc
iret
dec
add
add
xchg
pop
or
xchg
ret
xor
jne
jp
and
mov
sbb
inc
aas
and
bound
mov
dec
or
aad
(bad)
aam
add
(bad)
into
mov
mov
add
add
or
test
bound
ja
xor
and
xchg
pop
ins
dec
jbe
nop
dec
lds
not
daa
rol
outs
cmp
xchg
jge
sbb
mov
dec
cld
lea
xor
dec
cmp
sti
xor
clc
jl
jmp
add
movs
gs
std
mov
add
push
xchg
jne
(bad)
cmp
outs
call
lea
cwde
sub
movs
add
or
push
xor
stos
or
cli
pop
or
or
(bad)
push
or
add
jmp
push
mov
sahf
mov
movs
jg
fisubr
movs
mov
inc
dec
cwde
in
or
jg
dec
mov
adc
add
pop
pop
out
shl
xor
mov
dec
cli
mov
mov
mov
icebp
repnz
adc
adc
add
xchg
jge
cld
cmp
xrelease
pop
jmp
add
inc
sti
mov
sub
jge
movzx
sub
adc
int3
cs
push
lea
dec
mov
sub
push
sub
adc
fcmovu
mov
or
mov
add
lea
jne
pop
sbb
call
mov
leave
jnp
adc
and
clc
add
cld
out
mov
inc
dec
mov
add
(bad)
jge
loopne
mov
or
mov
aam
adc
ret
mov
cmp
jl
pop
sbb
scas
mov
jbe
cmp
sbb
stos
jmp
cmp
ret
pop
stos
loop
movlps
adc
pop
inc
clc
dec
les
shr
ja
jmp
mov
dec
mov
clc
dec
add
sub
(bad)
add
mov
das
clc
leave
mov
mov
mov
adc
or
mov
adc
mov
jl
es
je
addr16
cmc
or
repz
inc
test
jne
or
sbb
je
stos
xor
call
adc
sti
add
je
inc
jne
bswap
push
loope
hlt
test
mov
or
repnz
out
pop
ins
pushf
mov
push
lea
fidiv
aam
js
cmp
je
inc
cmp
add
add
sbb
sbb
setle
clc
inc
loop
inc
rol
push
mov
test
add
ret
sub
sub
and
adc
in
outs
iret
sub
sub
sub
xor
jnp
mov
sbb
and
sub
scas
sub
or
add
repz
sub
xor
sbb
jmp
cmps
loopne
repz
je
xchg
jnp
add
xchg
pop
data16
scas
shr
ret
movs
cmp
test
rcl
les
cmp
add
mov
xchg
pop
fld
je
ficom
aas
imul
adc
cs
inc
out
fabs
push
mov
and
frndint
rcr
scas
ins
or
fstp
in
jge
fwait
mov
test
je
fidiv
jne
(bad)
cld
out
clc
idiv
mov
inc
sub
nop
shr
and
add
jle
movs
jo
cmp
jge
jns
mov
sbb
call
or
in
push
cmp
jb
mov
js
dec
and
jo
lock
data16
pusha
xor
jmp
mov
loopne
sbb
je
not
adc
or
mov
fimul
xchg
out
add
js
jb
outs
push
adc
sbb
push
ins
mov
ror
test
jb
push
into
push
fiadd
mov
or
(bad)
fisttp
das
pop
mov
mov
cmps
sub
mov
or
sbb
inc
loopne
push
in
mov
fcmovu
ins
or
frstor
or
fidiv
fwait
inc
sbb
mov
push
sub
call
and
jne
dec
sub
cmp
xchg
cwde
jl
and
inc
jmp
dec
adc
sub
mov
cmp
imul
cmp
jbe
pop
jmp
mov
mov
iret
inc
arpl
shl
sbb
jns
fwait
jmp
fldz
mov
call
outs
mov
jne
inc
mov
daa
sbb
mov
jne
inc
sbb
dec
and
fidivr
inc
jne
inc
push
sub
pop
add
jg
jne
xchg
push
ror
(bad)
and
loopne
adc
aas
jmp
fstp
sub
out
add
or
add
pushf
or
add
mov
int
cmp
mov
test
or
fimul
pop
(bad)
fiadd
jmp
aaa
mov
div
lahf
inc
imul
imul
add
add
cli
hlt
nop
jb
aaa
add
jecxz
sbb
xchg
test
test
dec
jb
(bad)
shr
push
shl
rcl
mov
add
cmp
pop
pop
mov
test
pop
(bad)
sbb
inc
dec
push
aam
fld
fstp
cdq
cmp
fwait
scas
push
fldcw
sub
pop
ins
and
fld
inc
add
jo
adc
daa
div
push
adc
sub
push
mov
pop
pop
(bad)
loopne
out
xchg
call
dec
or
cmp
inc
stc
inc
sbb
jae
ja
out
jb
data16
add
imul
sub
ret
cmp
retf
gs
fadd
adc
fwait
inc
mov
sub
cmc
xor
dec
(bad)
data16
pop
sahf
mov
jl
loope
mov
lea
ret
js
fnstsw
sub
sti
push
inc
mov
jne
add
inc
xlat
sub
jl
dec
(bad)
data16
cmp
pusha
xor
out
jnp
cmp
mov
(bad)
and
shl
mov
and
enter
jp
and
(bad)
and
fldenv
mov
mov
test
jne
sbb
nop
add
mov
add
mov
das
cmp
mov
movs
aas
mov
add
add
loopne
outs
js
aaa
scas
inc
jb
mov
ja
jge
rcr
push
sti
jno
(bad)
sub
pop
inc
(bad)
ja
sbb
adc
ja
jg
add
inc
dec
jne
xor
dec
mov
sub
dec
cdq
idiv
imul
cmp
sub
ds
ds
add
pop
ret
or
hlt
movs
rcr
adc
out
push
jl
sub
leave
push
cmp
call
pop
inc
push
aam
in
sub
test
jg
dec
pop
push
xchg
sbb
or
mov
pushf
mov
pop
inc
ds
mov
or
cmp
jl
add
mov
jb
add
test
push
movs
pop
push
sahf
lods
mov
inc
fld
sub
cmp
data16
ret
push
sub
repnz
pop
sbb
pop
xchg
shl
cmp
xchg
repnz
jno
mov
shr
ret
push
sbb
enter
jmp
lods
dec
dec
jmp
pop
jne
outs
jb
adc
sub
fsubr
or
sbb
add
and
hlt
add
adc
add
push
sbb
jle
inc
sbb
enter
aad
shr
pop
xchg
pop
cmp
clc
cmc
cld
mov
and
pop
enter
fstp
and
or
sub
loop
pop
and
sbb
push
jo
ss
leave
adc
adc
fstp
test
mov
movs
or
mov
and
addps
adc
cdq
cld
sub
jl
rol
fiadd
out
rol
xchg
and
push
jne
inc
and
or
cwde
xor
push
mov
jmp
pushf
in
add
sbb
push
push
shr
jle
ins
in
call
inc
in
cmp
add
dec
(bad)
push
xchg
xchg
pop
test
dec
ins
mov
dec
adc
xchg
add
mov
inc
add
je
sbb
inc
test
fbld
inc
hlt
pop
pop
cmp
jne
jle
xchg
xor
mov
or
or
lea
fstp
in
or
lahf
repnz
adc
inc
in
add
or
outs
jecxz
push
in
xchg
iret
in
jge
call
ret
cmp
push
sbb
scas
nop
mov
adc
push
xchg
sub
add
sbb
inc
js
sahf
cdq
jbe
lock
pop
mov
push
xchg
pop
call
sahf
mov
mov
and
loopne
cli
arpl
shr
push
mov
test
mov
je
or
lods
jmp
add
sbb
out
pop
dec
pop
add
sub
inc
std
push
lds
les
inc
jb
loope
leave
add
sub
jo
test
call
(bad)
sbb
mov
test
cwde
(bad)
aam
ss
mov
adc
dec
fsub
push
xlat
in
retf
fs
and
mov
sbb
aad
mov
nop
sbb
lods
mov
cmp
or
je
jmp
xchg
jo
jne
dec
cmp
jne
push
mov
cmp
dec
retf
xor
icebp
lock
jns
pop
add
add
xchg
xor
add
in
gs
or
sub
call
pop
aam
shl
ins
mov
pop
data16
retf
and
and
pusha
push
dec
loope
sahf
jecxz
clc
test
int3
cmps
mov
xor
daa
jmp
ror
mov
jp
pop
aad
mov
outs
fwait
jge
mov
add
out
or
and
mov
(bad)
dec
jne
jge
dec
rol
mov
repnz
mov
mov
ja
mov
cmp
and
aam
push
jns
or
or
sbb
xor
push
fild
or
or
imul
or
push
arpl
mov
mov
mov
stc
cmp
inc
jns
and
sahf
cmps
(bad)
push
popf
xchg
pop
mov
les
pop
and
jl
(bad)
jmp
xchg
loopne
mov
inc
mov
mov
dec
idiv
and
inc
sahf
and
lahf
test
push
cmp
ror
sbb
xor
mov
add
movs
sub
test
mov
jp
je
add
jmp
out
push
jo
mov
es
sbb
or
adc
dec
and
nop
xor
xor
dec
inc
ror
loopne
inc
add
add
and
mov
and
inc
movzx
jmp
pop
js
outs
(bad)
outs
and
data16
push
jmp
or
je
cmp
pop
je
jmp
nop
mov
fsubr
scas
xor
fwait
mov
mov
sahf
nop
add
mov
cli
jmp
jmp
in
xor
mov
push
add
cmp
ror
retf
mov
sar
mov
push
mov
jmp
xchg
shr
or
or
or
jle
lods
mov
adc
adc
pop
ins
xor
pop
inc
call
or
mov
dec
scas
movs
test
push
movs
test
and
pop
retf
in
pop
jl
cld
out
pop
jmp
jne
adc
or
and
sub
inc
aas
pop
fmul
add
xchg
cmp
test
add
shr
lea
jge
adc
xchg
pushf
xchg
mov
rcl
jl
scas
cdq
pop
stos
imul
or
inc
dec
add
sti
out
or
lds
add
sbb
call
or
in
ror
pop
sbb
popf
jo
and
and
push
imul
cwde
je
inc
cwde
jmp
dec
loop
gs
jmp
sbb
inc
or
or
out
jl
ror
mov
sub
inc
xchg
sbb
adc
adc
cmp
test
inc
test
xchg
cmp
add
daa
and
enter
inc
dec
das
push
dec
xor
dec
adc
(bad)
adc
mov
or
test
cmp
sub
jno
aas
jmp
push
mov
xchg
imul
mov
sub
push
(bad)
mov
adc
(bad)
shl
xchg
and
xchg
xor
cmp
jg
add
sub
pop
fcomip
mov
clc
into
mul
fdiv
and
inc
popa
adc
sbb
neg
mov
ror
or
sub
jmp
add
sar
or
jb
ja
loope
mov
adc
ret
mov
dec
push
mov
and
inc
test
std
and
fwait
jl
pop
mov
push
scas
(bad)
nop
inc
aam
mov
push
sub
mov
test
fild
push
mov
adc
dec
enter
xchg
mov
push
mov
adc
push
xor
pushf
pop
in
(bad)
cmp
es
lods
sub
bound
mov
inc
notrack
sub
je
dec
je
sub
mov
or
pusha
adc
push
push
js
out
popa
aaa
jbe
push
inc
mov
jle
fcomp
jb
dec
mov
add
dec
jo
sbb
les
add
add
jl
pop
ret
mov
mov
std
cli
mov
mov
mov
ret
sub
ret
addr16
pop
jo
sbb
adc
adc
pop
cwde
jne
inc
pop
inc
sub
lods
cmp
pop
adc
cmp
jg
cmc
rcl
fist
xor
sub
add
aas
hlt
pop
gs
fwait
stc
imul
add
cmp
cli
idiv
add
adc
pop
cld
jmp
cmp
ret
imul
fadd
mov
in
mov
mov
and
inc
out
fmul
(bad)
sbb
test
or
imul
jp
dec
loopne
push
and
out
out
cmp
xor
stos
in
fsubr
or
mov
and
adc
stos
xor
jmp
push
js
mov
out
mov
mov
fdivp
in
push
mov
test
xor
and
or
sbb
and
repnz
dec
in
add
lock
mov
sub
jb
and
cmp
push
push
add
and
in
call
push
hlt
xchg
push
mov
xchg
xor
hlt
sbb
push
sub
shr
lock
fadd
push
push
or
mov
call
xchg
mov
(bad)
push
fstp
mov
dec
cmp
mov
cmp
jle
and
fs
jne
mov
add
ins
or
sbb
ds
xor
cmp
dec
inc
scas
aaa
sub
(bad)
fwait
push
jl
adc
mov
and
jmp
out
into
jne
cmp
outs
and
sar
add
mov
fild
cmps
std
mov
(bad)
das
fbstp
fadd
push
nop
mov
mov
ret
mov
shr
cmp
push
out
dec
cdq
retf
push
and
and
push
jno
les
ret
out
xchg
cs
add
test
or
push
dec
fnstsw
mov
and
pushf
inc
fisttp
(bad)
jmp
push
mov
sbb
mov
setnp
(bad)
sub
shl
and
push
ja
inc
and
cmp
or
add
dec
cmps
cwde
retf
cmp
je
or
add
sbb
inc
or
sbb
enter
sbb
xor
test
in
and
add
retw
je
das
sbb
cld
(bad)
ja
jne
add
jo
jnp
or
out
je
add
push
or
xor
mov
cmc
cs
mov
inc
dec
out
xchg
xor
dec
out
icebp
add
xchg
into
stc
mov
jnp
stos
in
or
xchg
cmp
cmp
add
scas
sub
call
sti
clc
inc
ret
adc
lock
aaa
dec
(bad)
sbb
adc
jne
mov
push
and
pop
mov
fcomp
fistp
fsubr
or
fs
and
adc
inc
out
les
jne
popf
fisubr
andps
push
call
pop
add
push
mov
sub
jb
or
dec
cmp
retf
xchg
ret
jno
fs
out
imul
mov
aam
adc
xchg
and
fist
push
(bad)
dec
or
neg
add
cdq
retf
call
mov
movs
mov
push
and
cmp
ja
or
lahf
jo
sbb
push
add
mov
repz
adc
loop
or
jg
(bad)
mov
lea
mov
dec
retf
rcr
loope
inc
call
or
inc
pushf
std
or
jp
sti
or
pop
mov
push
add
and
push
in
in
xor
or
outs
dec
call
ret
add
aas
sub
in
push
fdiv
rcl
push
xor
jnp
mov
pop
je
xchg
cmp
ins
jne
sbb
add
sbb
add
movs
inc
and
aad
mov
push
push
sub
inc
(bad)
pop
ins
(bad)
pop
inc
add
les
outs
and
daa
shl
imul
in
jg
inc
push
push
add
pop
cmps
mov
and
mov
(bad)
push
ss
jbe
add
push
push
xchg
jno
add
push
push
shl
hlt
mov
outs
enter
jmp
jo
sbb
and
xchg
cmp
mov
xor
repz
icebp
adc
pop
sbb
mov
js
or
daa
dec
xor
test
add
ss
pop
or
repz
dec
(bad)
mov
jmp
mov
or
inc
sbb
je
scas
ret
sbb
sbb
les
or
or
jle
mov
sbb
push
push
sbb
test
cmc
(bad)
mov
or
jg
lods
add
sbb
mov
outs
sti
movs
setns
cmovp
test
jmp
mov
adc
pop
jns
add
jmp
mov
xor
mov
jmp
push
cs
in
mov
xor
dec
jle
mov
dec
add
cmps
pop
add
pop
mov
mov
add
sub
or
push
daa
and
xlat
cmp
dec
push
mov
inc
mov
add
sti
cmp
sub
cmc
xor
int3
in
out
sbb
push
sbb
fcomp
pop
jne
xor
jae
loope
mov
ror
pushf
add
neg
test
or
outs
hlt
jmp
sub
gs
ficom
xchg
rol
out
add
fsubr
xor
mov
pop
sub
(bad)
push
add
adc
clc
cmp
fs
add
adc
inc
mov
adc
add
cs
mov
enter
cld
or
js
pop
inc
add
push
jb
adc
mov
lahf
jne
daa
clc
sbb
test
add
into
in
cmp
ins
lock
pop
hlt
push
mov
add
rol
sar
(bad)
enter
cmp
pop
movs
rol
sub
(bad)
aaa
jp
mov
ret
cs
sub
pop
dec
mov
clc
mov
fcomp
lock
jle
icebp
inc
jmp
inc
inc
dec
mov
push
retf
or
add
div
dec
pop
add
data16
pop
je
retf
jmp
and
push
ret
mov
push
or
cmp
repnz
(bad)
mov
bound
inc
popa
popf
pop
mov
iret
gs
ins
pop
outs
dec
test
mov
xlat
inc
add
adc
fistp
sub
cmp
dec
pusha
jb
or
nop
cmp
les
pop
stos
rcl
icebp
sti
lea
add
leave
ja
push
add
ja
and
(bad)
loopne
mov
test
dec
sahf
cmc
mov
inc
mov
add
sub
adc
test
cmp
xchg
dec
adc
add
out
push
or
xchg
add
dec
and
jno
xor
fild
sub
sbb
jg
into
ja
lock
sbb
push
mov
xchg
bound
call
(bad)
push
mov
or
sbb
cmp
or
cmps
or
test
pushf
dec
push
jns
lock
sar
retf
push
adc
jmp
mov
sub
pushf
push
sub
mov
push
out
inc
popa
or
enter
adc
aam
mov
dec
loope
(bad)
cmp
mov
test
out
test
mov
lds
rcr
bound
mov
or
jge
clc
scas
push
stos
push
in
push
loopne
push
push
dec
loopne
adc
pop
xor
test
scas
(bad)
jl
cld
xor
int3
add
scas
and
ins
add
and
adc
loop
add
sbb
icebp
mov
jl
or
fild
imul
cld
retf
in
pop
push
push
cmp
je
jmp
in
repnz
aaa
jmp
xor
jb
jmp
and
add
mov
add
cmps
imul
imul
sbb
mov
pushf
push
adc
mov
jb
outs
hlt
adc
mov
lods
pop
xchg
str
cmp
ficomp
cmp
(bad)
mov
adc
adc
int
adc
xor
push
or
dec
cld
test
jge
rol
mov
xlat
div
xchg
ret
lock
fs
lahf
rol
lea
sbb
xchg
pop
mov
addr16
imul
add
pop
(bad)
fistp
pop
enter
and
mov
ror
fadd
mov
in
mov
mov
jecxz
lea
js
cmp
out
shr
xor
sbb
movs
nop
jb
dec
jae
mov
or
inc
aaa
pop
fidiv
jl
enter
mov
inc
adc
aad
push
push
dec
pusha
call
xchg
in
and
or
std
add
sub
(bad)
sbb
and
loop
add
dec
jmp
hlt
cmp
in
add
mov
les
in
xchg
ins
jle
loope
pusha
jo
sub
ror
sbb
mov
mov
mov
das
inc
sub
shl
mov
mov
loop
xor
mov
mov
mov
adc
xor
mul
mov
mov
dec
adc
mov
sbb
add
mov
adc
sbb
adc
xchg
push
inc
push
xchg
add
pop
outs
adc
adc
retf
adc
daa
pusha
scas
and
dec
push
sbb
test
lahf
add
inc
mov
mov
out
mov
jne
push
push
mov
mov
cs
push
adc
adc
sbb
fisttp
int3
mov
adc
jge
jl
pcmpeqw
cmp
push
icebp
das
(bad)
push
imul
std
jo
pusha
inc
fmul
mov
ss
xor
mov
dec
out
add
jae
add
push
mov
dec
and
pop
test
hlt
fnstsw
rcr
xchg
ret
adc
push
dec
xor
fdiv
fld
sub
(bad)
mov
imul
cmp
call
dec
jle
hlt
das
sbb
dec
mov
dec
jmp
dec
and
mov
and
aas
or
sar
and
jns
dec
or
inc
cmp
mov
add
adc
sbb
mov
ret
out
jbe
jae
addps
lea
fadd
enter
idiv
daa
add
aaa
jmp
ja
lock
adc
sub
les
or
xchg
inc
inc
mov
dec
sbb
jbe
mov
sub
sti
jl
test
mov
adc
push
dec
jge
push
or
cmp
inc
jnp
dec
fiadd
pop
(bad)
int
add
mov
aad
jbe
sar
or
push
sub
push
jo
stos
addr16
fadd
jne
dec
jecxz
xor
rol
fst
addr16
imul
jg
inc
(bad)
lods
or
jg
or
push
and
imul
or
call
dec
mov
es
in
jbe
mov
mov
dec
or
dec
sub
sub
ret
imul
out
jg
xchg
ja
mov
and
push
mov
xchg
sbb
cdq
sub
jae
push
mov
int3
sub
jae
push
ja
dec
push
add
pop
adc
bound
scas
sbb
and
jb
add
and
and
bswap
and
setne
enter
ret
icebp
out
out
rol
jecxz
add
out
add
mov
nop
push
imul
pop
cmp
int
and
test
adc
mov
and
test
inc
cwde
lahf
pop
ins
out
dec
ret
fisttp
scas
test
jl
fst
pop
in
shl
mov
mov
inc
inc
jmp
sbb
mov
xchg
push
jmp
fnstsw
and
inc
sahf
jge
les
jnp
adc
clc
sbb
mov
pop
cmc
leave
and
sub
jne
loopne
ficomp
in
jne
xchg
jmp
and
mov
inc
push
mov
popf
or
les
add
push
jbe
pop
movzx
clc
xor
popf
cmp
xor
add
sbb
or
or
vmovaps
push
sar
bnd
movs
loopne
xchg
call
adc
add
xchg
cmp
pushf
inc
xchg
sahf
loope
push
fisubr
pop
mov
push
and
and
movs
jg
rcr
pop
sub
add
or
fnstenv
sbb
dec
sahf
xor
pop
jne
sbb
add
adc
(bad)
js
and
stc
pop
aam
ins
loopne
loop
xlat
jl
cmp
push
adc
sbb
mov
jge
inc
stos
and
push
mov
fwait
jmp
aaa
push
mov
sub
jb
jbe
mov
mov
stos
(bad)
sbb
scas
xor
retf
jne
inc
cmp
jge
pop
or
jo
fld
pop
jne
and
or
clc
pop
ja
jmp
pop
push
mul
fs
add
mov
add
add
shr
pop
mov
enter
mov
mov
fdivp
shr
mov
mov
std
and
fistp
jne
popf
xchg
retf
adc
add
out
jle
mov
int3
or
mov
aad
mov
out
mov
pop
and
popa
mov
push
jg
ror
pop
jne
lea
or
adc
push
in
test
cmp
inc
cmp
test
not
ss
pop
jg
adc
jmp
repnz
mov
and
pop
outs
jae
pop
rol
popa
out
xor
dec
mov
stc
push
sbb
mov
or
in
push
and
movs
push
add
push
lds
xchg
push
push
lock
xor
mov
inc
push
add
mov
enter
call
pushf
mov
mov
mov
cs
sbb
mov
mov
in
fsub
fdivr
imul
loopne
nop
add
xchg
aam
xor
aam
and
xchg
mov
mov
mov
dec
sub
ins
xchg
pop
sar
sub
jns
int3
mov
adc
jno
es
dec
ret
xchg
fbstp
and
jb
jl
and
pop
push
dec
fidivr
inc
rol
ror
repnz
mov
jne
cld
push
mov
loop
cmp
push
jb
test
lock
pop
mov
or
jmp
in
(bad)
pusha
test
mov
lock
lods
add
scas
ins
add
fs
mov
pop
adc
pop
lods
xlat
mov
inc
push
or
adc
mov
adc
int3
pop
jbe
jp
push
cmp
out
in
fimul
jne
and
shl
test
jle
cmp
or
jp
lea
shl
adc
adc
sub
adc
daa
lods
sub
stos
out
(bad)
mov
mov
aas
xor
ss
pop
push
mov
dec
push
das
cmp
in
jno
pop
mov
sub
mov
push
sysret
lahf
rol
shr
pop
dec
add
aaa
call
xchg
loopne
add
dec
xchg
add
sbb
pop
push
jl
pop
(bad)
xlat
aaa
jmp
jle
mov
adc
cld
add
test
mov
xchg
outs
inc
pushf
adc
add
cmp
mov
ret
repnz
xchg
in
cmps
pop
mov
xchg
pop
hlt
mov
jo
and
or
xchg
jbe
test
test
test
jbe
adc
mov
mov
xchg
add
add
adc
jns
stos
loopne
retf
shl
(bad)
push
in
jnp
or
mov
jb
sub
cld
mov
daa
sub
adc
test
jb
gs
jo
mov
inc
and
cli
lock
inc
sbb
pop
dec
ret
xchg
dec
jecxz
xor
call
lea
loope
mov
dec
inc
lahf
mov
js
outs
inc
push
imul
xchg
rcl
cdq
push
fcomp
add
adc
mov
loop
test
mov
sub
dec
xchg
pop
mov
mov
inc
jmp
sahf
ret
or
mov
enter
rcr
es
pop
add
mov
es
xchg
adc
leave
dec
jmp
out
push
icebp
dec
movs
jbe
cmp
jne
fiadd
jmp
cld
rcr
js
mov
aaa
repz
mov
mov
into
dec
cmps
hlt
mov
and
sar
xor
push
sbb
enter
daa
sbb
(bad)
fdivr
jmp
adc
jo
loope
add
pop
outs
mov
cmps
push
jmp
sbb
sti
sbb
push
lea
push
pop
pushf
jmp
in
add
mov
outs
or
inc
add
xchg
daa
pushf
mov
mov
ffree
cmc
mov
adc
sbb
rcr
retf
mov
cmp
jne
(bad)
sub
xchg
test
aam
cmc
sub
imul
enter
jnp
loope
adc
xchg
ret
mov
in
outs
inc
push
pop
or
sub
and
xchg
ins
pop
adc
xor
(bad)
xlat
call
add
(bad)
mov
test
sbb
dec
lods
call
or
lock
seta
les
aad
mov
jmp
adc
(bad)
xor
ss
mov
xor
test
lds
out
push
mov
sub
in
xchg
ret
inc
fdivr
cmp
push
and
fadd
sbb
dec
cld
jnp
xchg
jmp
(bad)
push
sbb
inc
stc
ret
mov
or
mov
xor
loopne
mov
mov
in
inc
inc
mov
aas
and
inc
and
inc
into
cmp
or
xchg
aam
and
(bad)
ror
xchg
(bad)
ficomp
ins
jg
shl
push
dec
push
add
push
mov
int
jg
dec
or
inc
xor
dec
in
inc
xor
hlt
or
ror
cmp
loope
inc
xor
mov
dec
addr16
pop
xor
ficom
outs
es
loope
imul
mov
adc
push
lds
pop
lock
cmp
xor
sbb
ret
xchg
in
out
cmp
rcr
jne
cmp
ins
leave
ins
jbe
fwait
rol
xchg
inc
mov
mov
pop
lods
push
add
and
add
(bad)
nop
push
psubusw
pop
in
inc
cmp
pop
mov
out
jmp
in
push
cmp
fld
ret
arpl
dec
les
or
push
xor
push
inc
xchg
into
clc
add
mov
fstp
push
sahf
div
loopne
or
or
ins
out
cmp
pushf
shl
mov
jns
or
push
mov
les
iret
jnp
pop
mov
push
sub
js
push
jns
repz
jle
mov
push
ror
mov
pop
out
or
pop
mov
repz
cmp
pop
xor
sub
stc
mov
sbb
lock
sbb
mov
or
and
repnz
or
or
mov
popf
aaa
add
aam
out
pop
cld
out
dec
call
hlt
leave
cmp
int3
xlat
lock
mov
inc
shl
outs
iret
call
cld
loopne
jl
iret
enter
test
pop
loopne
xchg
ja
mov
in
cs
out
in
mov
cs
cmp
sar
sub
fistp
pop
mov
cdq
cmp
leave
inc
lods
loopne
test
daa
out
in
movs
jbe
mov
jl
pushf
cmp
cwde
pop
popf
cmp
out
xchg
mov
sahf
xchg
out
in
dec
push
jl
mov
push
pop
in
test
scas
je
fiadd
mov
(bad)
ror
rol
pop
bound
pusha
call
out
xchg
retf
pop
sbb
adc
xchg
add
adc
or
rol
inc
nop
fist
int3
mov
or
push
and
add
push
or
adc
inc
and
movs
adc
enter
not
les
enter
mul
retf
sbb
int3
sub
jae
mov
add
adc
jmp
mov
(bad)
gs
pop
sbb
jle
mov
inc
push
stc
sub
push
ret
in
xor
int
rol
xor
xchg
xchg
lea
push
push
push
std
pop
fisttp
adc
pop
mov
mov
data16
adc
ins
fld
daa
std
fdiv
xor
lea
ins
lock
loop
ror
or
and
cmp
xor
inc
cli
sbb
sbb
div
xchg
mov
cld
pop
rcr
jns
pop
xlat
push
out
cwde
adc
add
xchg
and
repnz
and
mov
xor
mov
sub
pop
inc
imul
es
xor
clc
dec
dec
clc
lea
add
rcl
mov
std
call
xor
xchg
or
or
xchg
push
adc
cmp
hlt
jb
mov
add
pop
xor
fild
add
les
enter
icebp
test
cs
pop
push
push
test
dec
ret
xor
adc
icebp
stos
jb
dec
xlat
nop
cmps
dec
inc
xlat
inc
or
jb
cmp
shl
jns
stos
push
loopne
pop
inc
dec
dec
cli
mov
adc
mov
cmp
pop
and
push
imul
push
bound
add
mov
pop
mov
add
retf
dec
shr
mov
mov
fs
dec
fdivr
es
es
lock
clc
and
pushf
fs
dec
in
leave
or
dec
adc
dec
in
aam
sbb
repz
les
fdiv
out
dec
in
leave
cmp
pushf
dec
xor
repz
or
pop
call
je
in
hlt
leave
repz
lock
dec
in
hlt
aam
clc
jp
enter
jne
dec
fs
mov
sub
addr16
push
adc
fsub
jl
bnd
add
outs
je
fs
jne
and
ja
cmps
mov
dec
adc
outs
fs
repnz
enter
(bad)
pop
outs
jb
inc
ins
jo
repnz
xor
jb
ins
push
je
pop
push
cmp
sub
and
bound
pushf
sbb
jae
pop
dec
add
or
or
xchg
pop
ror
pop
jb
hlt
cld
lds
mov
ret
iret
(bad)
outs
out
and
and
pop
add
adc
and
hlt
mov
add
shr
mov
cmp
or
adc
les
shl
cmp
sti
pop
call
push
push
js
mov
movs
iret
repz
cs
mov
push
loopne
inc
fsub
sar
push
push
adc
dec
dec
inc
push
stos
mov
test
shr
add
sub
sbb
pop
addr16
test
xchg
call
inc
push
inc
mov
sbb
add
mov
add
adc
sub
pop
es
(bad)
ds
sub
or
and
out
mov
pop
push
inc
jb
retf
loopne
jne
nop
pop
loopne
popa
fisub
idiv
inc
clc
ds
pop
lds
xchg
fs
enter
test
test
and
sbb
lock
test
xor
and
outs
adc
ds
push
js
push
inc
jb
sbb
js
js
sbb
ins
jo
inc
cs
and
push
xor
push
iret
inc
cli
inc
adc
(bad)
iret
retf
push
outs
div
int
sbb
inc
mov
jle
mov
xor
sti
xchg
js
dec
fsub
and
(bad)
push
dec
sbb
sti
mov
iret
in
fcmovu
push
in
add
in
mov
rol
adc
mov
call
in
sub
in
jo
cs
sti
sahf
mov
mov
nop
and
cli
aam
adc
adc
in
leave
mov
sbb
fs
dec
jmp
sbb
icebp
adc
ja
cmp
and
cmp
jg
jmp
inc
inc
aaa
add
mov
sub
fnstcw
out
mov
aas
dec
je
sbb
or
mov
es
jbe
add
sar
adc
or
das
and
xchg
test
xchg
retf
clc
pop
jns
jns
stos
hlt
mov
jae
imul
lock
scas
in
clc
in
mov
(bad)
scas
in
stc
call
cmps
cmp
xchg
dec
in
icebp
inc
push
cs
jae
pop
enter
or
mov
in
clc
enter
mov
test
or
jp
les
imul
jno
mov
jb
mov
push
shl
scas
sbb
loopne
or
clc
faddp
es
in
lock
add
addr16
jmp
int
jns
pop
push
je
fstp
sub
ret
adc
and
mov
test
adc
cli
push
jo
inc
mov
adc
dec
nop
or
jmp
inc
clc
add
mov
leave
(bad)
je
inc
mov
push
add
enter
pop
pop
cli
pop
sub
(bad)
mov
sub
cs
rol
mov
nop
dec
adc
dec
cmp
clc
setg
dec
inc
xor
mov
jge
(bad)
repnz
ds
inc
jnp
mov
add
xchg
and
(bad)
fidiv
loopne
mov
mov
add
test
add
and
push
add
pop
inc
sub
pop
add
paddd
dec
lds
adc
(bad)
pop
les
adc
add
clc
jmp
and
mov
adc
popf
or
(bad)
push
cld
imul
lea
or
lea
push
jno
cmp
clc
dec
loope
and
fs
mov
inc
sub
inc
pop
imul
and
fcomp
inc
mov
sub
cli
in
repz
imul
lock
sub
in
outs
xor
ja
pop
in
fs
fst
mov
inc
push
bound
call
inc
mov
jae
loope
jecxz
push
aas
jmp
call
inc
inc
test
aas
rcr
mov
adc
shl
(bad)
push
retf
scas
repnz
inc
and
xor
inc
adc
mov
jmp
mov
mov
push
fwait
ret
lods
aas
js
xor
cmps
add
cmp
jne
cmp
cmp
sbb
pushf
shl
adc
or
fidiv
or
xlat
loopne
and
sub
or
hlt
(bad)
cmp
xchg
je
sub
mov
pop
xchg
pushw
push
jmp
sub
adc
dec
sbb
cmps
mov
sbb
in
push
cmps
out
shr
sub
jmp
sub
pop
aam
test
inc
push
retf
pop
xor
inc
ret
cwde
dec
add
inc
fisttp
jecxz
repz
xor
cli
mov
xor
loop
sub
fnsave
pop
enter
hlt
inc
fmul
push
aas
popf
lea
popf
add
jle
sub
es
(bad)
jmp
sub
inc
cs
nop
or
xchg
call
jmp
fmul
fisubr
xchg
cmp
mov
fisub
or
adc
jb
push
hlt
adc
add
push
in
and
push
xchg
hlt
loopne
pop
cld
push
cs
dec
call
jb
nop
push
(bad)
jmp
push
or
lock
adc
dec
aad
add
ss
dec
gs
das
inc
ds
cmps
dec
push
inc
lock
rcl
pop
add
rol
lock
jnp
pop
cmp
mov
imul
fs
(bad)
popf
dec
xor
adc
hlt
mov
movs
jb
leave
push
daa
test
push
pop
sub
add
xchg
sub
or
daa
or
sub
cmp
je
pop
jne
push
push
(bad)
or
cs
test
push
test
inc
and
push
loopne
adc
jle
movs
push
push
sbb
jo
test
daa
repnz
jno
lock
or
push
daa
or
aas
and
iret
mov
imul
pop
and
add
fsubr
push
sbb
mov
rol
dec
cmp
and
adc
lock
pop
test
mov
sbb
xchg
mov
mov
or
enter
xor
inc
push
jb
cmp
sub
enter
or
sub
inc
push
inc
or
icebp
inc
or
add
loopne
mov
(bad)
push
(bad)
sbb
mov
lds
push
xchg
into
and
in
xor
pop
push
push
and
pop
pop
call
sub
std
enter
cmp
inc
ret
inc
sbb
xlat
rcr
mov
push
aaa
sbb
jmp
mov
mov
pop
neg
mov
cmp
jne
test
clc
cmp
pop
adc
shr
js
push
add
dec
cld
pusha
shl
mov
jns
repz
xlat
mov
push
clc
add
sbb
out
cmp
dec
bound
or
(bad)
sub
or
and
daa
mov
into
push
loopne
add
outs
cmp
or
pop
jmp
adc
shl
dec
or
rcr
hlt
pop
lock
in
dec
lock
pushf
arpl
ss
sub
std
hlt
sub
xor
jp
cmps
int
add
pop
mov
xchg
inc
ss
fstp
and
pushf
in
fistp
aaa
or
adc
mov
mov
in
pop
adc
inc
ss
enter
imul
xchg
pop
stc
adc
add
in
fldenv
or
jmp
jmp
xchg
sub
push
icebp
fwait
and
hlt
or
iret
ret
stc
les
add
sbb
mov
clc
inc
pop
(bad)
push
xlat
shl
sbb
test
push
sti
(bad)
std
jg
adc
jne
jmp
push
sbb
adc
and
adc
mov
add
sbb
add
push
mov
pop
stc
add
jno
(bad)
clc
pop
and
push
call
or
rcl
mov
or
adc
push
fisubr
pop
lock
adc
(bad)
sbb
xchg
movs
jmp
jp
or
in
and
add
scas
adc
cmps
push
movs
aaa
inc
push
in
pop
adc
push
push
outs
js
pop
test
mov
adc
test
or
inc
xor
push
sbb
ja
adc
push
jmp
adc
int
push
cmps
mov
arpl
sub
jg
sahf
out
push
mov
cmp
repz
das
push
in
push
repz
sahf
pusha
rol
outs
jle
jecxz
iret
lea
test
or
data16
rol
sub
mov
mov
pusha
(bad)
sar
pop
lods
push
sar
cmp
pop
pop
cld
mov
or
xor
sub
cld
pop
ins
cwde
nop
or
mov
inc
sub
ret
adc
inc
int3
xor
mov
rcr
adc
sbb
pop
cwde
je
dec
je
jmp
outs
jno
xchg
fsub
nop
je
out
push
push
push
and
loope
inc
clc
inc
mov
adc
jnp
repz
out
xor
fst
inc
pushw
fadd
ja
iret
repz
xchg
movs
mov
mov
pop
in
sub
fldcw
(bad)
sub
xchg
push
adc
push
fwait
test
retf
and
lods
and
mov
fist
add
push
push
mov
push
jmp
or
daa
add
jmp
outs
pop
mov
inc
imul
stos
scas
and
pop
and
retf
sub
out
test
xchg
or
scas
fldcw
mov
sbb
out
addr16
out
sub
jb
mov
or
push
add
test
jmp
ss
adc
jb
xor
sbb
xor
pop
or
pop
bt
dec
mov
imul
xchg
mov
xor
fadd
and
sbb
sbb
sbb
fld
adc
pop
push
jb
xchg
pushf
je
pop
push
mov
jb
dec
jnp
jb
adc
push
dec
adc
xor
add
hlt
and
adc
mov
jno
in
fmul
add
mov
mov
cmp
hlt
xor
push
adc
push
push
push
daa
xor
in
in
sbb
mov
jp
in
inc
jo
mov
push
jns
pop
adc
cmp
in
mov
adc
cmp
add
(bad)
aas
add
orps
adc
out
adc
and
fmulp
or
jb
stc
add
push
adc
loop
jmp
push
adc
cmps
jg
adc
pop
mov
and
dec
adc
or
lahf
nop
divps
mov
adc
push
or
in
int
out
adc
add
mov
inc
scas
(bad)
adc
mov
(bad)
pusha
push
adc
or
and
stos
jl
and
js
lea
fdiv
mov
push
push
or
cli
jns
push
sbb
sbb
add
or
ror
aaa
xchg
adc
sbb
test
and
dec
sbb
inc
aam
push
push
out
nop
or
movs
sbb
mov
push
repnz
hlt
add
(bad)
ror
stc
in
shl
or
sub
cmp
mov
(bad)
hlt
test
adc
dec
mov
cdq
leave
push
repnz
(bad)
popa
dec
call
xor
in
shl
push
xor
int3
push
xor
pop
push
mov
xchg
stc
pop
in
mov
mov
addr16
pop
xchg
xchg
call
add
mov
sub
bound
adc
mov
ror
sbb
xchg
pop
sub
loope
mov
cmps
test
inc
sbb
xchg
enter
cs
retf
out
cmp
push
push
out
sahf
out
xchg
movs
mov
lahf
in
add
mov
repz
pop
pop
sub
dec
arpl
loope
jbe
lock
dec
jb
sub
or
adc
jecxz
daa
push
cmp
ins
fdiv
and
add
mov
fstp
or
(bad)
cld
push
arpl
add
add
and
bound
xor
and
jmp
push
or
nop
dec
pop
repnz
push
push
push
inc
pop
les
jl
mov
pop
dec
xchg
and
xchg
sbb
jns
mov
sbb
addr16
jl
nop
test
pop
jnp
rcr
inc
or
jle
out
sahf
imul
dec
adc
xchg
mov
xchg
das
fstp
mov
push
imul
adc
xor
push
sub
or
mov
push
adc
sub
adc
out
sub
pushf
jmp
stc
inc
ins
and
lds
cmp
nop
daa
sub
outs
and
sbb
movs
(bad)
outs
cmc
dec
push
das
push
mov
enter
dec
not
or
dec
mov
sahf
div
mov
cmp
dec
cmps
xor
pop
jg
xchg
or
add
or
in
and
xor
or
test
mov
jno
jmp
out
pop
push
ret
and
xor
into
adc
pusha
das
add
or
pusha
nop
mul
or
shl
and
popf
sbb
jg
movs
add
sar
es
jns
out
push
das
dec
pop
imul
test
and
fsub
(bad)
push
and
fsubr
push
rol
adc
(bad)
jp
nop
dec
push
mov
repnz
pop
jnp
xchg
sbb
add
neg
sbb
inc
push
in
dec
loope
and
sub
or
fadd
fild
mov
mov
sub
sti
push
inc
sbb
test
sub
cmp
ret
aad
push
pusha
in
gs
mov
push
das
sbb
imul
xchg
fcmovbe
and
call
push
clc
push
pop
push
push
push
xor
xchg
mov
mov
sar
lea
push
mov
push
add
mov
fld
adc
cmp
adc
dec
jmp
jnp
mov
adc
sbb
inc
sar
fs
and
mov
and
and
dec
adc
enter
es
cmp
xor
sbb
mov
clc
push
add
cs
jmp
dec
call
ja
or
ins
call
ror
add
add
(bad)
xor
xlat
add
loopne
add
dec
push
dec
cdq
or
add
adc
pop
sbb
and
xchg
sbb
adc
nop
add
add
add
in
adc
fdivr
xor
bound
sahf
out
jp
cwde
stos
mov
pop
and
and
jae
test
push
and
cmp
in
dec
sti
arpl
pop
sub
inc
fbld
mov
push
data16
pusha
in
dec
imul
cmp
loopne
neg
inc
sub
mov
pop
or
push
sub
sbb
push
loopne
pop
in
cld
mov
int
sbb
ins
adc
inc
dec
fbstp
and
and
push
adc
mov
and
add
movs
add
push
mov
adc
daa
pop
or
idiv
aaa
dec
pop
jae
inc
sbb
mov
call
jo
(bad)
out
scas
loope
and
cmp
sbb
pop
pop
push
push
nop
into
sub
daa
punpckhbw
inc
shl
push
ret
in
icebp
sub
jmp
gs
mov
mov
jno
dec
push
(bad)
mov
loopne
ds
adc
mov
imul
imul
jo
xor
cmp
adc
in
mov
push
fwait
dec
es
push
mov
sahf
out
push
mov
sub
scas
or
arpl
iret
inc
pop
jno
gs
cdq
pop
rcr
mov
sub
xchg
fild
fcomi
push
push
adc
or
inc
sub
or
and
aaa
daa
sub
add
sub
fild
out
dec
xchg
in
dec
inc
pop
inc
rcr
in
sub
aaa
mov
add
sub
add
cmp
pop
adc
dec
sub
in
jo
pop
(bad)
mov
ss
and
xor
shl
call
mov
xor
and
pop
pop
(bad)
dec
fsub
push
cmps
out
add
in
dec
add
mov
data16
adc
nop
bound
push
cvtps2pi
loope
inc
push
adc
outs
pusha
mov
outs
(bad)
xor
and
scas
cmps
push
enter
pop
push
enter
sub
dec
es
pop
and
xchg
xor
test
xchg
mov
sahf
dec
sahf
ret
lock
jo
mov
clc
cmp
jae
sub
outs
sub
dec
push
dec
cmps
push
push
pop
movs
fild
inc
cmps
pop
fild
adc
ret
les
sbb
ret
push
sub
addr16
mov
or
or
fst
sbb
sbb
adc
sbb
sti
jo
in
xor
pop
outs
(bad)
xchg
imul
inc
lahf
push
daa
iret
jnp
sub
loope
cmp
ds
and
cmp
xor
aaa
dec
pop
leave
ins
sub
xchg
sbb
gs
and
inc
pop
ret
cmp
adc
les
pop
pusha
mov
and
das
in
push
scas
inc
inc
dec
das
mov
lock
pushf
add
mov
test
push
push
pop
das
add
nop
lock
lea
push
push
or
push
add
add
sub
add
lods
fistp
pusha
and
iret
sub
bound
dec
cmps
pusha
iret
push
mov
cwde
(bad)
in
push
cli
push
xor
jl
out
inc
push
fs
xor
es
dec
test
sub
daa
lahf
push
jl
idiv
xor
pop
leave
and
and
push
inc
add
fmul
not
dec
mov
jl
mov
sbb
adc
pop
mov
xor
cmp
mov
mov
test
aas
inc
sbb
sbb
repz
add
sub
pop
enter
rol
jle
pusha
adc
iret
dec
sti
popw
icebp
push
add
cmp
dec
xor
push
push
daa
lock
xor
push
mov
in
xor
dec
or
add
pop
mov
push
add
xor
and
mov
bound
cmp
loopne
mov
loop
scas
mov
pop
(bad)
jmp
mov
lock
imul
jo
adc
(bad)
aas
outs
in
or
inc
xor
pop
add
dec
aas
sbb
fsub
ss
xor
or
adc
push
or
je
and
retf
pop
les
enter
sahf
ficomp
inc
lock
imul
mov
fs
xor
xchg
or
ss
lds
add
or
and
dec
mov
mov
cld
xchg
ds
ror
add
or
push
xchg
sbb
loope
and
cmp
sub
cdq
cmp
pop
inc
xor
mov
rol
add
(bad)
or
(bad)
or
push
dec
loopne
mov
repnz
adc
fwait
push
enter
cmp
fs
pusha
xor
aaa
push
rol
push
or
shl
adc
cmp
adc
aaa
mov
repnz
adc
jbe
and
jmp
std
pop
cmp
pop
in
mov
mov
call
imul
mov
push
jo
mov
jecxz
push
sbb
xor
push
push
push
and
xchg
sub
sub
retf
sti
push
adc
sub
ret
(bad)
push
sbb
adc
shr
xor
adc
aas
bound
fucomi
push
xchg
ins
in
in
xchg
imul
lock
dec
mov
push
add
cmps
jb
je
test
call
jl
xchg
sub
pusha
sub
jg
out
jl
in
push
loopne
jg
xor
pop
jo
test
mov
fmul
mov
test
mov
fadd
mov
mov
outs
add
add
loopne
call
out
enter
cmp
jno
jno
test
(bad)
inc
les
inc
inc
stos
or
out
(bad)
gs
push
cmp
and
cmps
fstp
pop
adc
je
out
dec
ins
mov
lods
fst
test
outs
add
and
cmp
xchg
pop
enter
xchg
pushf
je
mov
cmp
sbb
mov
jo
pop
shl
and
test
shl
out
popf
test
aad
and
test
mov
dec
enter
pushf
cmp
sbb
xor
stos
cwde
jno
dec
rcl
aaa
xchg
je
cmp
dec
mov
fsubr
sub
push
imul
adc
mov
fs
mov
adc
ja
sbb
fwait
add
fnsave
cmps
fucomip
cmp
cmp
loope
or
cmp
shr
push
test
ds
cli
cmp
or
push
leave
stos
or
inc
jb
dec
cmp
rcl
add
pop
inc
dec
ret
and
jne
push
adc
xor
loopne
loopne
ins
xor
sub
add
inc
jo
loope
loopne
cmp
cwde
aas
cmp
cs
sub
adc
cmp
repz
inc
mov
out
ret
lods
ficomp
add
out
daa
cmc
adc
inc
test
jo
fnstcw
sbb
cmp
ds
dec
cmp
ret
mov
fisttp
or
inc
cmp
fld
cmp
adc
pop
in
es
adc
in
pop
and
(bad)
fsub
ss
cwde
fcomp
aaa
fsub
fdiv
and
aam
(bad)
sub
sub
int3
adc
push
sub
and
inc
inc
call
sbb
pop
fdivp
cmp
push
jbe
xchg
mov
idiv
push
fstp
ror
daa
aam
pop
inc
test
repz
jle
mov
repnz
les
es
aaa
and
bound
pop
mov
dec
pop
xor
arpl
mov
ret
shl
mov
pushf
adc
and
lods
and
push
lods
popf
test
cmp
adc
aad
mov
or
cmp
xor
push
cmp
pushf
popa
dec
cwde
fdiv
and
cmp
mov
and
ret
and
es
push
nop
jmp
inc
test
add
cwde
mov
(bad)
cmp
xchg
add
enter
adc
jno
inc
or
inc
jmp
sub
fisttp
cmp
sqrtps
inc
sub
xchg
or
cmp
test
fwait
pusha
or
cmps
push
aas
xchg
inc
jmp
sub
or
jl
mov
ss
ins
push
sub
xchg
imul
cmp
pop
ja
data16
pop
hlt
sbb
cmp
(bad)
dec
add
or
and
data16
or
out
dec
retf
sub
and
loope
movs
xchg
push
xor
lea
sub
outs
inc
xchg
sub
push
adc
inc
pop
test
pmulhuw
add
push
ror
test
pushf
push
cmps
(bad)
mov
je
rol
mov
and
bound
add
ja
push
adc
fidivr
add
ja
jg
xchg
pop
ds
adc
mov
inc
arpl
jg
cmp
adc
add
inc
sub
loope
mov
vmovaps
mov
jmp
dec
or
push
xchg
movs
xchg
push
and
push
push
pop
xchg
mov
sub
xor
in
dec
dec
push
and
popf
push
fstp
fwait
cmps
daa
mov
sub
pop
sbb
js
in
add
(bad)
xchg
mov
sub
test
mov
pop
cdq
add
loopne
aas
outs
cli
bound
mov
push
(bad)
or
mov
xchg
dec
inc
xchg
push
dec
cdq
(bad)
or
or
daa
nop
pop
or
pop
sub
fld
movs
inc
and
sub
dec
xchg
mov
pop
add
cmp
cmp
icebp
cmp
push
das
mov
fs
and
lock
push
test
mov
dec
ja
test
fisttp
xchg
sub
jle
mov
or
adc
add
dec
popf
or
add
xchg
and
les
sti
push
xor
jl
jno
jne
int
sbb
jmp
into
jb
cmp
addr16
cmp
lock
sub
and
mov
aaa
mov
and
(bad)
(bad)
pop
fiadd
sbb
outs
jmp
out
jb
mov
lods
lock
or
dec
clc
fwait
pop
inc
ins
jo
jns
add
add
dec
jne
pop
mov
xor
stc
adc
sbb
jle
dec
ds
add
inc
outs
jne
sbb
jb
outs
arpl
jne
and
inc
add
ins
mov
addr16
mov
or
pop
sub
pop
pavgw
mov
(bad)
push
outs
imul
inc
arpl
dec
rol
aaa
and
inc
iret
push
mov
mov
xor
popf
or
xchg
or
inc
mov
dec
inc
inc
iret
clc
shl
cmp
dec
test
out
int3
add
ja
enter
jbe
aad
dec
aad
test
dec
sub
mov
push
sbb
pop
jns
jmp
test
mov
mov
cld
sbb
mov
scas
aaa
loop
outs
mov
pop
jg
mov
pusha
jmp
lea
jl
dec
into
mov
adc
push
adc
or
(bad)
and
cmp
xchg
push
or
jl
inc
sub
sub
das
in
outs
pop
jecxz
std
lahf
xchg
and
test
xchg
jns
adc
lods
movs
and
setl
xchg
pop
int
test
(bad)
mov
or
and
cmp
or
sbb
sti
pop
pusha
fld
sub
sbb
inc
cmp
lock
setne
adc
aam
pop
movs
or
jmp
adc
or
add
retf
jb
hlt
outs
dec
inc
adc
cmp
jg
mov
cmp
and
sar
outs
or
xchg
and
jg
push
jg
or
mov
mov
mov
or
xor
dec
pop
mov
call
clc
nop
cmp
mov
push
popa
jnp
into
scas
adc
retf
cmc
and
cwde
inc
cdq
je
add
inc
dec
call
sub
jae
test
or
jl
test
mov
outs
sub
xchg
cmp
and
sub
push
adc
jl
add
or
xor
push
or
aam
das
fadd
adc
push
out
(bad)
stos
push
xor
pop
ret
lods
ret
xor
pop
icebp
adc
adc
jge
or
out
nop
ja
mov
inc
adc
or
out
adc
cmp
fist
sub
jne
outs
jne
cdq
cmp
jmp
ins
(bad)
leave
sub
mov
leave
adc
push
int3
adc
mov
ss
and
fstp
jmp
jb
or
jne
sub
sti
jbe
push
lea
mov
pop
bound
push
and
cmp
xor
add
mov
cmc
inc
frstor
pushf
cwde
shl
and
in
hlt
(bad)
or
push
rcl
sbb
cmp
xchg
pop
xchg
add
mov
cmp
clc
cmp
jne
and
xchg
jo
loopne
loope
mov
leave
xor
push
mov
call
sub
inc
lods
sbb
mov
dec
js
jge
mov
jnp
je
sbb
mov
xchg
sub
or
stos
xchg
ds
lock
int3
test
lock
lea
add
jle
mov
add
mov
jbe
sub
push
or
ror
mov
add
ret
xchg
add
inc
dec
xor
sti
add
add
jne
sub
fsubr
ins
popa
adc
(bad)
jns
push
mov
push
ins
add
mov
xor
mov
pop
jbe
call
inc
ficom
or
rcl
fmul
out
xchg
pop
xchg
sbb
in
pushf
cmp
dec
mov
adc
ficomp
jmp
jo
adc
aas
sub
adc
adc
or
pop
jbe
add
xor
push
xchg
adc
or
mov
mov
mov
ret
jno
sub
push
jg
mov
and
add
test
push
imul
dec
retf
inc
dec
cmp
push
and
adc
cld
xchg
sub
xor
inc
sbb
jmp
or
dec
ror
sbb
test
fs
xlat
jmp
popa
mov
mov
repnz
xor
xchg
mov
mov
cmp
int3
std
cmp
nop
pop
pop
jg
push
adc
clc
push
inc
adc
leave
and
cli
loopne
mov
and
mov
out
push
sub
sbb
xchg
cmp
div
les
out
aad
sub
sbb
js
mov
or
mov
inc
adc
push
ficomp
int
cli
mov
xor
add
xchg
push
mov
in
pop
push
pop
jbe
cmp
xor
(bad)
mov
pop
push
ds
test
(bad)
mov
lods
scas
imul
cmp
cmp
cmp
cmp
cmp
cwde
cdq
call
popf
sahf
lahf
cmp
cmp
add
cmp
cmp
mov
cmp
mov
jns
ja
push
inc
loopne
jo
(bad)
and
lahf
mov
add
cmp
xor
pop
add
mov
lahf
sub
mov
(bad)
adc
adc
dec
movs
pop
xor
cs
add
xchg
fs
aam
dec
jecxz
jne
pop
or
adc
ret
or
add
mov
mov
xor
test
jne
cld
(bad)
push
mov
push
cs
dec
xor
cmp
jle
es
add
int3
xlat
(bad)
shl
pop
push
or
xor
and
cmp
jmp
cmp
inc
pop
scas
xlat
sub
mov
stos
cmps
mov
xor
sbb
mov
(bad)
shr
mov
nop
fistp
add
ficomp
sbb
mov
or
push
or
adc
adc
mov
in
outs
cmp
retf
je
mov
dec
and
sbb
inc
add
and
jmp
jle
in
je
jmp
jp
pop
fdivr
mov
ins
sbb
test
out
jne
or
jne
pop
add
fcomp
add
adc
adc
sahf
add
cmp
ins
xchg
sbb
cmp
mov
in
in
mov
dec
mov
cwde
out
das
js
and
rep
mov
push
sti
xchg
adc
jl
or
jg
sbb
call
sbb
jbe
test
inc
push
mov
lds
push
mov
mov
mov
cmp
je
fld
or
pop
lar
inc
(bad)
dec
ja
jecxz
jmp
call
jmp
xchg
lock
push
jmp
add
adc
push
add
(bad)
and
or
add
mov
xchg
retf
pop
(bad)
push
xor
jle
add
dec
jo
adc
add
ds
jmp
in
push
push
adc
mov
lock
mov
cmp
ja
jb
add
add
call
(bad)
mov
stc
repnz
mov
mov
or
lds
dec
(bad)
mov
push
lea
cmps
sbb
adc
add
call
je
pop
xchg
dec
repnz
or
xchg
(bad)
inc
and
or
lods
cmp
push
push
fistp
rol
inc
adc
xor
mov
inc
cmp
jnp
add
or
cmps
and
push
daa
aaa
clc
sbb
or
mov
jb
jp
iret
sub
xlat
enter
dec
rol
dec
pusha
jecxz
and
das
pop
shl
sbb
add
jbe
or
adc
push
outs
jmp
pushf
fsubr
aaa
movs
ud2
scas
hlt
(bad)
es
push
or
sbb
jp
and
aaa
fsubr
adc
cmp
mov
inc
sahf
lds
aam
cli
fsub
lods
and
rcl
cmp
dec
push
xchg
add
pop
dec
lahf
and
cld
sbb
cmp
gs
in
sub
xor
iret
lods
pop
call
inc
xor
hlt
or
xor
dec
std
repnz
and
mov
cmc
rcr
xlat
or
pusha
bound
ja
sti
cmc
cmp
inc
loop
int
ins
or
sbb
dec
push
adc
add
add
sbb
add
adc
or
cmp
test
(bad)
pop
fmul
pop
mov
retf
add
sbb
test
pop
pop
jge
jecxz
inc
pusha
sbb
aaa
or
mov
push
inc
pop
jo
imul
fisub
jnp
out
sub
ror
push
push
inc
jnp
cmp
outs
xor
sub
ret
push
bnd
aad
cli
or
jmp
add
jmp
sbb
sub
adc
adc
push
or
iret
ret
fdivp
mov
sub
mov
or
pop
js
jno
push
sub
hlt
or
call
js
jp
push
adc
add
or
or
jae
pop
mov
pop
adc
smsw
enter
jbe
add
sbb
sbb
jbe
daa
lahf
in
mov
mov
pop
add
retf
mov
jo
xchg
sbb
nop
or
inc
fwait
or
push
test
pushf
sbb
pop
mov
inc
pop
ror
les
add
inc
dec
aaa
jb
inc
cli
jmp
push
or
dec
push
dec
push
dec
pop
push
dec
or
rcl
and
mov
std
jg
invd
dec
push
gs
imul
call
pop
inc
mov
inc
jb
sbb
pop
push
add
bound
xchg
call
out
into
push
pusha
push
or
pop
inc
inc
push
fcmovb
push
sbb
dec
and
stc
xchg
cmps
jb
cld
invd
add
push
push
or
loopne
xchg
mov
cmp
iret
movs
mov
or
fild
adc
mov
pop
dec
outs
push
ins
shr
test
mov
or
add
jle
scas
sbb
push
outs
or
add
aas
pop
mov
sbb
mov
clc
add
retf
pushf
adc
sub
imul
pop
dec
sbb
scas
scas
shr
in
sub
(bad)
adc
fdiv
jbe
xchg
adc
fdiv
je
inc
push
ja
outs
addr16
(bad)
icebp
stos
shr
inc
cmp
in
icebp
nop
aas
mov
(bad)
adc
dec
imul
or
addr16
out
xor
stos
pop
push
mov
inc
add
nop
mov
mov
daa
daa
daa
test
daa
daa
je
ins
push
fs
mov
daa
cwde
test
inc
(bad)
xlat
mov
mov
cs
bound
arpl
clc
out
pop
or
imul
jl
movs
imul
xor
dec
gs
(bad)
ficomp
or
imul
push
sbb
inc
pusha
les
inc
push
jae
adc
push
xchg
gs
push
ret
xchg
add
jl
retf
dec
or
inc
imul
push
sahf
add
fs
outs
sbb
sar
nop
adc
dec
outs
pushf
add
(bad)
mov
dec
outs
ins
jns
(bad)
in
scas
repnz
inc
ss
push
call
ss
push
mov
inc
outs
fistp
mov
cmps
or
dec
imul
adc
xlat
or
cmp
or
call
cs
and
retf
js
add
rcr
fs
aaa
test
cs
ins
cmp
lock
gs
sub
jae
fst
xor
lods
cmps
outs
aad
jne
xor
ins
pop
(bad)
(bad)
or
ins
popa
adc
or
push
gs
or
cdq
cmovbe
jmp
or
add
(bad)
dec
and
and
fstp
je
call
es
cmp
hlt
push
int
mov
test
xor
out
data16
mov
push
ror
lods
outs
mov
scas
xor
or
adc
out
jb
add
out
sub
pop
pop
data16
lods
push
and
in
nop
pop
scas
pop
sti
mov
pop
mov
adc
inc
jbe
jmp
nop
or
mov
inc
mov
cmps
mov
xor
mov
push
nop
push
or
mov
add
scas
sbb
add
add
xchg
(bad)
mov
scas
jbe
cdq
dec
(bad)
push
mov
in
nop
sahf
mov
sets
push
cmps
pusha
mov
ds
adc
retf
pop
xchg
adc
jle
mov
jp
pop
or
and
js
les
xor
sub
push
nop
in
push
add
hlt
pop
mov
xchg
aas
and
mov
mov
iret
mov
imul
mov
xor
lds
int3
pop
lods
push
mov
push
add
in
hlt
xchg
push
out
(bad)
cmp
adc
cwde
in
xchg
adc
mov
test
adc
jmp
pop
and
pop
fld
adc
pusha
or
jle
inc
std
mov
adc
int3
int3
icebp
jbe
push
aaa
rol
ins
inc
adc
or
out
sbb
push
adc
push
int3
pop
add
in
ins
push
imul
inc
cdq
xchg
add
or
sbb
sub
out
xor
cmp
fiadd
inc
ins
inc
mov
fs
jb
push
pop
jo
addr16
mov
call
pushf
fistp
mov
push
xor
andps
dec
push
repnz
and
inc
jmp
add
pop
sub
inc
imul
cmp
ss
dec
and
pusha
outs
pop
ss
daa
jns
lock
pushf
add
repz
jnp
mov
adc
or
and
mov
fs
(bad)
sti
loopne
fidivr
stos
and
sub
xor
or
rcr
lea
pop
and
cmps
push
pop
rol
dec
pop
lock
sbb
add
xchg
pop
dec
xor
mov
std
sar
inc
xor
pop
outs
jns
inc
(bad)
inc
jle
(bad)
cmovns
inc
fs
jo
mov
xor
pushf
jae
push
rcl
sahf
cmps
test
cmp
jns
imul
(bad)
mov
push
add
adc
pop
push
(bad)
mov
and
dec
les
cdq
movs
cmps
ss
lods
lods
push
push
dec
scas
jnp
ins
fist
mov
pop
mov
jbe
push
add
out
ds
addr16
movs
xor
test
out
jnp
stos
aaa
int3
push
cld
push
push
stos
push
push
xchg
lods
cmps
add
cmps
in
movs
scas
aas
inc
outs
imul
fdiv
push
and
push
inc
or
and
mov
pushf
jno
xchg
jl
mov
pop
js
jns
or
lock
mov
int3
shl
ror
lock
pop
dec
mov
movs
js
enter
pop
push
sub
mov
sbb
fcomip
push
xor
mov
ficom
aaa
ins
push
jl
pop
mov
mov
and
loopne
lock
mov
and
jbe
pusha
jo
or
jg
loopne
sub
xlat
clc
push
mov
les
fdivr
pop
jl
mov
cmp
out
xor
pop
sbb
(bad)
jecxz
sub
ins
xor
shl
mov
push
shl
daa
nop
push
sbb
or
dec
mov
or
jae
xor
dec
sbb
push
jb
mov
out
sub
inc
lock
mov
out
adc
push
and
int3
push
call
rcl
test
mov
je
and
xor
nop
daa
fstp
not
div
xlat
repz
test
add
sub
or
jge
in
lods
ret
fsubr
sbb
push
ret
jmp
addr16
sub
or
lods
call
cld
les
fwait
jno
xor
xor
andps
out
(bad)
in
or
cmp
adc
cmp
add
nop
and
add
push
push
add
push
sbb
in
in
sar
repz
and
push
out
les
repz
repz
push
arpl
in
ds
lea
popa
xchg
lock
inc
in
(bad)
aam
jbe
push
add
dec
jne
jp
sbb
or
ds
imul
sub
or
jecxz
dec
push
or
call
call
adc
ja
aas
or
fadd
dec
jne
loopne
outs
push
leave
jae
mov
sub
(bad)
mov
cmps
not
js
sbb
fisubr
dec
(bad)
push
int3
fwait
in
jnp
mov
call
fmul
add
dec
fcomip
xor
aam
push
cmp
iret
cmc
test
or
movs
push
xor
sbb
ds
ds
sbb
jg
inc
test
pop
int3
cmp
pushf
cli
div
sbb
push
sti
(bad)
mov
cmp
sub
dec
cld
xchg
in
js
adc
add
mov
cli
fist
fistp
pop
call
rcl
stos
mov
adc
lods
dec
mov
mov
inc
(bad)
fsubr
cmc
lods
(bad)
fdiv
sub
aam
mov
adc
jns
out
push
push
inc
and
(bad)
jmp
jns
add
xchg
pop
inc
(bad)
int
dec
add
xor
push
in
outs
jns
or
mov
shr
adc
mov
das
pushf
mov
push
xchg
push
mov
push
xor
imul
std
inc
rcr
lock
clc
mov
repz
jbe
push
or
mov
dec
pop
aam
mov
aas
ja
(bad)
mov
(bad)
clc
push
push
push
push
push
push
data16
push
cmp
repz
movs
scas
lods
push
mov
cld
int3
out
cmp
in
(bad)
movs
push
shl
div
mov
mov
push
mov
push
nop
mov
adc
mov
pop
xor
(bad)
dec
add
push
sbb
add
dec
jmp
add
stos
xchg
dec
push
mov
out
imul
nop
iret
repz
out
xchg
mov
dec
pushf
adc
jno
push
inc
push
arpl
dec
repnz
jns
hlt
pop
jl
cmp
inc
outs
xchg
mov
enter
test
mov
cmp
jnp
or
inc
mov
push
je
xchg
add
mov
js
or
add
or
aaa
pop
sub
inc
and
dec
push
inc
xchg
cs
dec
dec
fs
mov
ss
add
dec
and
xchg
xchg
data16
mov
push
inc
and
in
dec
sahf
push
or
sbb
lea
pop
lea
cmp
xor
pop
fmul
push
push
push
sar
inc
popf
and
xor
mov
imul
outs
jne
(bad)
shr
ds
sub
jae
or
rcl
dec
and
pushf
ja
ret
mov
push
mov
out
data16
xlat
bound
or
adc
add
in
push
aad
and
jmp
cmp
push
and
int3
xor
pop
or
cmp
ins
in
sbb
add
je
sub
ins
iret
in
inc
cld
sub
(bad)
jne
fcomp
aaa
aaa
mov
jmp
sbb
adc
mov
and
push
fwait
pop
inc
(bad)
push
jle
mov
(bad)
rcr
adc
mov
push
inc
stc
test
test
and
sbb
xchg
mov
xlat
pop
jl
or
dec
cmp
ret
std
lahf
dec
aaa
adc
or
rcr
mov
add
out
pop
xchg
inc
cmp
jge
inc
push
pop
mov
push
xor
sub
cmc
xor
and
pop
sbb
imul
pop
pop
mov
add
add
int3
fdivrp
and
push
pop
rcl
or
push
mov
pop
add
movs
xchg
xlat
hlt
jnp
mov
cmp
in
or
cld
es
xor
xchg
(bad)
lea
adc
es
dec
and
pop
mov
test
sbb
sbb
bound
jmp
sbb
fisub
push
loopne
popf
shl
pop
rol
dec
cmp
fadd
xchg
icebp
rcl
inc
cmp
and
mov
aaa
adc
repnz
mov
sub
in
(bad)
inc
push
nop
add
lods
push
sahf
fsubr
sub
imul
dec
inc
pop
dec
mov
sbb
(bad)
xor
fsubrp
jo
adc
imul
xchg
sbb
call
pop
icebp
ror
sub
mov
rcl
test
(bad)
sub
mov
call
clc
push
js
pop
cmp
stos
outs
mov
clc
mov
fcmovbe
cmp
inc
adc
xor
push
out
mov
stos
pop
aam
push
push
inc
(bad)
sub
lea
out
inc
dec
jne
imul
(bad)
mov
shr
imul
cmp
mov
mov
je
push
or
inc
ss
sub
rcr
or
xlat
xchg
mov
icebp
cmp
dec
popf
leave
lods
push
rcr
xchg
cmp
mov
dec
mov
adc
dec
ret
and
xchg
jmp
push
add
cmps
mov
mov
or
outs
sub
retf
xor
and
(bad)
call
adc
rol
jb
sbb
inc
sbb
inc
hlt
jne
push
sbb
cmp
xchg
and
fadd
gs
inc
or
add
add
mov
cmp
inc
pop
push
loopne
sub
imul
mov
es
cmp
push
fidiv
xor
cmps
(bad)
jecxz
dec
dec
jne
mov
pusha
pop
jle
sbb
dec
sub
sbb
enter
aaa
jo
retf
out
int
sbb
jge
jnp
adc
es
jge
or
shl
mov
and
(bad)
sbb
inc
lock
jo
sbb
or
jmp
pop
cmp
les
add
dec
stos
xor
xlat
mov
sub
stos
ins
jne
mov
inc
bound
cli
pusha
mov
xchg
je
cmp
xlat
or
or
shl
int3
pop
mov
xor
xlat
bound
(bad)
and
loopne
(bad)
enter
pop
pushf
bound
pop
rol
aaa
test
add
and
xor
jno
push
dec
jae
dec
dec
aam
outs
pop
test
sub
mov
aaa
xchg
pop
je
repz
loopne
bound
pop
adc
and
imul
push
push
pop
xchg
jb
mov
lods
add
pop
xchg
jmp
push
fisub
fadd
popf
adc
dec
test
cmp
ret
sti
cld
xchg
pop
or
mov
pop
mov
jbe
add
push
adc
cmp
outs
arpl
mov
add
mov
aaa
mov
mul
sbb
jp
in
and
in
jmp
jmp
je
cmp
pop
jo
imul
push
sbb
inc
and
jbe
lds
mov
add
jne
cdq
xor
dec
push
jp
cld
adc
popf
retf
sbb
fisub
mov
adc
adc
repnz
lahf
es
and
jno
scas
sub
pop
cmp
ds
out
pusha
add
jae
call
add
stos
imul
push
sti
nop
inc
sub
xor
outs
jp
pop
cmp
hlt
pop
xchg
sbb
cld
cmp
fmulp
pop
mov
popa
and
mov
cmp
lea
cwde
mov
cmp
add
js
test
addr16
test
xchg
ret
jbe
and
pop
data16
add
add
mov
pop
dec
cld
mov
add
and
jmp
loope
in
inc
xor
mov
xchg
adc
jle
add
sbb
sbb
es
jns
push
cs
sub
ss
daa
test
in
scas
add
fcom
daa
mov
in
and
jecxz
pop
mov
mov
dec
cmp
adc
cmp
add
add
cmp
and
sub
sub
adc
imul
scas
iret
jmp
push
mov
dec
pop
add
push
rcr
jecxz
sub
adc
dec
mov
pop
mov
je
and
push
sbb
mov
xor
cmp
int3
inc
add
or
outs
push
dec
shr
adc
mov
add
xlat
fdivr
mov
cmp
push
sahf
mov
aam
add
xlat
arpl
pop
mov
loopne
pop
ins
mov
out
push
xchg
pop
(bad)
call
push
data16
or
loope
loopne
leave
mov
or
dec
adc
mov
jne
mov
xchg
or
xchg
cld
ror
ss
pop
pop
stos
mov
(bad)
(bad)
cld
aam
xor
cmp
je
pop
out
adc
jle
lds
push
add
loope
pop
dec
or
int3
cld
ja
test
add
in
test
xchg
ins
jno
(bad)
mov
push
fnsave
nop
xchg
js
mov
arpl
cmp
mov
xchg
add
imul
std
adc
jl
test
ins
xor
mov
aas
sbb
xor
sbb
idiv
call
push
or
sbb
mov
loop
inc
adc
cmp
inc
or
leave
push
mov
scas
in
add
xchg
or
ret
scas
xor
adc
cmps
push
cwde
or
ds
iret
rcl
rol
dec
out
test
shl
loop
adc
or
lods
inc
and
add
ret
and
icebp
push
jp
retf
xchg
dec
push
mov
push
pop
(bad)
xor
loop
push
pop
aam
pop
pop
jb
pop
xchg
xchg
rcl
ss
dec
cmp
nop
(bad)
outs
xchg
ret
mov
pop
int
sbb
sbb
add
and
mov
call
jnp
push
mov
and
push
sub
js
arpl
pop
add
mov
aad
cld
adc
add
dec
or
mov
mov
cmp
jne
sbb
leave
xchg
imul
pop
stc
std
jle
mov
jae
push
mov
sub
adc
hlt
jecxz
and
cmp
je
frstor
inc
sbb
xlat
call
jle
adc
and
ins
shr
xor
cli
sub
movs
cmp
mov
pop
and
sub
mov
jo
loopne
mov
shr
retf
push
pop
push
xchg
std
js
daa
jmp
inc
imul
pop
jge
add
add
sbb
test
enter
fwait
nop
xlat
jns
or
lods
imul
sbb
push
sub
add
test
or
inc
retf
mov
sub
jg
movs
inc
add
add
dec
inc
jmp
pop
mov
mov
xor
les
movs
cmovbe
and
xchg
ror
aam
pop
cdq
test
push
xchg
inc
add
aaa
out
dec
outs
jbe
ja
pop
not
shr
enter
fisttp
jo
test
mov
fucomp
fimul
mov
dec
add
add
and
or
xor
xchg
adc
push
sbb
mov
add
aaa
pop
xchg
and
mov
push
add
lds
xchg
push
xchg
sbb
pop
cmps
push
mov
sub
mov
daa
sbb
mul
mov
in
call
mov
(bad)
shl
add
pop
sub
test
add
cmp
dec
icebp
pop
sar
mov
inc
std
sbb
call
out
je
xchg
movs
pop
sbb
and
pop
mov
adc
mov
mov
cmps
push
loope
sub
mov
jo
xchg
or
fwait
sub
stc
add
mov
movs
stos
jae
cli
or
je
lock
inc
stos
adc
btr
cmp
jl
(bad)
push
push
push
inc
adc
ins
clc
mov
jae
mov
add
fdivr
and
push
loop
inc
sub
cld
jo
dec
je
loopne
cmp
je
sbb
push
add
or
adc
movs
loop
xlat
jb
cmps
add
cmps
ret
ret
and
jmp
jmp
inc
cmp
jne
inc
dec
jne
les
pop
inc
mov
arpl
movs
xchg
inc
and
adc
ret
dec
xchg
div
dec
cmp
pop
in
ficom
cmp
mov
dec
xor
and
mov
fsub
sbb
xor
call
adc
cmp
push
sbb
dec
loope
bound
imul
xor
push
mov
adc
pop
cmp
test
mov
xor
(bad)
into
sub
sbb
rcl
mov
push
xor
mov
cmp
(bad)
pusha
pop
aaa
jne
cwde
pusha
xchg
jb
pop
cmps
fsubr
cmp
pop
mov
adc
and
push
jp
lods
add
inc
adc
or
test
add
xor
cmp
or
push
sbb
popf
scas
lods
xor
push
push
or
inc
dec
fs
or
aad
pop
or
mov
inc
test
clc
neg
je
gs
push
std
fdiv
push
adc
daa
mov
and
sbb
(bad)
and
jmp
inc
pop
call
fwait
or
sbb
or
aad
pusha
call
jo
or
mov
sub
adc
fild
in
nop
popa
fild
xchg
push
xchg
jle
mov
sbb
cmp
pop
js
cmp
or
inc
rcr
jne
fist
out
ins
dec
test
sbb
xchg
xlat
gs
push
sub
loope
mov
neg
xchg
dec
addr16
in
leave
fwait
cmps
pop
ret
add
or
sbb
or
adc
mov
cmps
cmc
pmuludq
das
sbb
jmp
dec
dec
push
movs
jmp
jns
fwait
in
xor
scas
int3
and
pop
push
outs
fbld
mov
pop
cmp
xchg
nop
mov
pop
ins
sbb
repz
pusha
shl
int3
pop
push
dec
sbb
ins
pop
loop
pop
mov
into
jne
loope
sahf
mov
pop
das
cmp
icebp
push
(bad)
mov
test
sahf
jp
mov
out
sub
xor
cmp
scas
test
and
rcr
or
repnz
test
movs
ds
ins
cli
ret
(bad)
(bad)
xchg
mov
ret
xchg
push
push
xchg
cld
test
push
popf
cmp
pop
xlat
and
call
pop
ror
out
in
(bad)
jno
mov
pop
js
xor
or
mov
ret
jbe
push
jnp
pop
pusha
ret
mov
loopne
dec
inc
or
xor
or
xchg
xchg
repnz
sahf
xchg
xor
xlat
add
(bad)
out
je
dec
cmps
pmuludq
xchg
lahf
mov
xor
jns
sub
shl
clc
fild
dec
sahf
in
in
lahf
clc
mov
inc
daa
push
rcl
sti
add
ja
pop
add
(bad)
push
clc
pop
sub
add
sub
clts
dec
ss
test
cmp
sub
cmp
xor
inc
std
or
je
movs
xor
xchg
inc
jl
cmp
mov
test
or
imul
dec
inc
pop
fcomp
xchg
jo
data16
inc
mov
or
cmp
jne
sbb
fs
dec
xor
idiv
cmp
adc
push
sbb
inc
dec
jne
inc
pusha
jecxz
cmp
bound
and
jmp
ror
or
(bad)
jne
lods
pop
sbb
test
jg
pop
inc
jmp
or
xchg
std
mov
aaa
sbb
call
or
xchg
pop
push
fldenv
jmp
mov
pop
push
mov
adc
push
icebp
push
pop
arpl
jmp
fabs
mov
sub
addr16
mov
push
add
dec
je
dec
popa
mov
iret
pop
ret
adc
adc
cmc
sbb
fcom
add
mov
pop
sbb
fstp
data16
mov
ins
xlat
dec
jge
sub
sar
int
out
rcr
dec
dec
(bad)
jo
fmul
cmp
push
cwde
mov
pop
and
and
(bad)
adc
icebp
lock
enter
sub
push
sub
or
mov
fcmovne
mov
cmp
jecxz
push
call
je
cmp
inc
mov
pop
sub
add
lods
loopne
jo
arpl
(bad)
pop
cmp
arpl
push
jbe
inc
add
dec
jae
adc
pop
push
push
add
add
push
adc
(bad)
xlat
fisub
jmp
mov
mov
dec
add
inc
div
sub
sbb
push
div
(bad)
dec
clc
shl
loopne
and
cmc
jmp
and
bound
cmp
sbb
push
add
test
fidiv
fs
adc
rcl
push
or
outs
fistp
movaps
mov
fld
in
mov
in
test
mov
mov
xor
cmp
jne
fdivr
mov
cmp
add
push
in
dec
cmp
shr
sbb
xor
cmp
mov
out
inc
int3
add
hlt
xlat
and
(bad)
iret
popa
xchg
int3
adc
or
movs
(bad)
aam
dec
sub
lock
aaa
or
cmp
push
sub
mov
jp
xchg
enter
fnstenv
loope
in
pop
mov
sbb
clc
inc
push
aad
and
sbb
mov
outs
dec
cmp
sbb
push
retf
(bad)
mov
outs
pop
aaa
in
adc
sbb
dec
and
xor
je
int
cmps
hlt
or
jl
pop
aas
cmp
xor
dec
sbb
imul
inc
cdq
xchg
inc
test
nop
nop
out
cmps
clc
in
push
sub
inc
jne
fwait
and
rcr
sbb
int
or
cmp
movs
push
jns
cmps
in
(bad)
loopne
lds
test
adc
outs
add
push
fstp
test
mov
out
mov
sbb
and
into
cs
mov
loope
popf
adc
call
add
add
call
retf
mov
inc
push
loope
cdq
in
jmp
fwait
pop
call
bound
dec
mov
and
pop
sbb
dec
xor
sub
xchg
test
mov
add
mov
sbb
push
adc
add
fs
test
sbb
mov
in
mov
fiadd
mov
pop
icebp
and
mov
movs
in
mov
pop
sub
adc
imul
clc
call
pop
sbb
sbb
or
sub
jmp
mov
adc
sub
add
jbe
(bad)
ja
and
inc
push
xchg
pop
shr
and
or
inc
in
in
dec
mov
cmp
xor
xchg
xor
add
in
and
test
movs
ror
pushf
fcmovnb
mov
popf
les
jecxz
xchg
test
inc
push
test
push
adc
inc
clc
add
sbb
or
inc
test
retf
xor
and
mov
pop
scas
sbb
outs
cmp
xor
mov
mov
cmp
inc
stos
test
jge
inc
dec
stos
mov
add
add
clc
shr
stos
loope
nop
jbe
sub
lock
push
(bad)
jmp
sub
push
push
add
loopne
jg
mov
xchg
stos
hlt
stos
lahf
adc
dec
push
adc
popf
lods
inc
pop
adc
shl
cmp
clc
bound
dec
push
nop
inc
jo
shl
lods
inc
and
dec
inc
sub
mov
adc
xor
sti
sbb
and
mov
mov
jno
lods
lea
int
or
lods
push
lock
cmp
pop
push
fld
sbb
movs
and
movs
in
lds
int
xor
mov
inc
xor
cs
push
and
lods
js
lods
adc
add
sub
cmp
dec
shl
sbb
jae
mov
sub
je
and
nop
and
aad
in
jo
jno
sub
dec
(bad)
in
mov
lea
shr
mov
and
or
out
loopne
push
loopne
hlt
out
sub
mov
inc
in
push
inc
jb
scas
and
or
inc
jmp
fcom
and
call
inc
cmp
add
jmp
enter
pop
call
jne
or
add
repnz
adc
sbb
sahf
push
adc
and
sub
pop
mov
push
popa
ret
sbb
and
cmps
or
add
hlt
xor
mov
mov
xor
xor
cmp
mov
fnstenv
pop
mov
xchg
leave
hlt
mov
fidiv
xlat
adc
int
les
adc
add
imul
mov
xor
add
dec
aaa
mov
popf
mov
add
loope
or
push
sub
pop
and
in
mov
mov
fdiv
pop
mov
lea
mov
jmp
mov
jnp
xlat
adc
enter
ins
push
mov
fmul
sub
out
cmc
imul
mov
cmp
jne
mov
push
or
mov
shl
add
or
rol
push
xchg
and
ds
test
push
push
call
test
jl
(bad)
das
add
std
ret
dec
mov
pop
add
xlat
pop
sti
outs
pop
or
sbb
aaa
push
add
test
pop
add
enter
jne
sub
and
add
push
sbb
xor
add
movaps
xchg
mov
adc
(bad)
ss
push
adc
xchg
mov
test
call
ja
ret
cdq
sub
add
fcom
cs
inc
imul
and
je
sbb
sbb
push
add
add
push
mov
pop
dec
mov
add
xchg
mov
enter
out
inc
sti
imul
enter
mov
(bad)
and
sub
in
inc
ins
sub
adc
xor
ins
xchg
fucomi
xchg
test
cwde
or
sub
dec
mov
mov
adc
pusha
or
lock
inc
stos
xchg
mov
lock
fimul
rcl
(bad)
and
leave
and
pop
test
or
iret
xchg
jbe
dec
iret
add
add
pop
cld
ror
mov
mov
mov
dec
pop
popa
mov
mov
out
xor
pop
and
into
cmp
aas
mov
pusha
outs
or
(bad)
jmp
mov
data16
add
push
add
dec
clc
jge
lea
mov
dec
je
les
out
add
pushf
add
add
jle
mov
mov
loope
mov
out
jmp
(bad)
mov
xchg
cmp
ret
pop
ret
bound
aam
add
and
add
repnz
push
cs
das
mov
add
(bad)
mov
loop
(bad)
or
sbb
cmps
push
scas
cdq
xor
sbb
mov
inc
test
add
sub
pop
int
mov
cli
sub
test
push
inc
and
add
add
jg
push
shl
lea
push
sqrtps
ret
jns
es
xlat
dec
push
ficom
push
(bad)
(bad)
jl
rep
imul
dec
inc
pop
ror
dec
jno
dec
in
jl
add
std
adc
inc
(bad)
xchg
add
shr
in
xchg
adc
push
cwde
mov
push
adc
dec
(bad)
xor
dec
or
(bad)
jl
and
sub
jne
mov
or
or
sbb
dec
inc
jge
sbb
jle
cld
in
int3
jb
ficomp
loopne
pusha
hlt
jl
sub
imul
xchg
add
lock
out
sbb
adc
add
test
jmp
shl
lods
pop
rcr
enter
adc
js
xchg
inc
enter
push
jge
or
jle
add
dec
out
push
mov
cmp
bound
pop
sti
dec
ret
(bad)
lods
xchg
jo
adc
clc
adc
ret
pop
mov
(bad)
sbb
enter
add
sub
leave
mov
jmp
add
pop
push
pop
sub
xchg
fcom
call
adc
leave
xchg
movs
cmp
pop
sbb
jge
adc
in
mov
sbb
pop
mov
jnp
inc
aam
mov
mov
add
jecxz
cmps
mov
mov
add
and
sets
pop
in
fs
loopne
adc
sbb
out
lea
add
and
mov
rcl
sub
das
push
sub
or
cmp
fnsave
sbb
stos
sub
jge
iret
inc
xor
jne
cmp
add
cwde
or
mov
arpl
out
aaa
movs
push
xor
jecxz
es
adc
adc
test
adc
rol
inc
cmp
pop
mov
cmp
mov
push
mov
pop
bnd
sub
or
addr16
loope
inc
pop
jbe
test
loop
repz
sub
cmps
test
inc
pop
adc
and
mov
adc
nop
jbe
push
or
or
daa
push
and
test
cli
mov
fistp
add
push
jae
jbe
add
in
in
mov
push
out
mul
stos
ins
adc
xchg
mov
push
dec
loopne
push
mov
jnp
mov
push
and
pop
add
pop
cmps
movs
sbb
icebp
ror
mov
mov
aam
mov
push
mov
mov
sahf
hlt
or
bound
inc
sbb
lods
fwait
mov
mov
adc
mov
add
pop
lods
bound
cmp
loopne
fcomp
xchg
out
mov
lods
push
mov
mov
jg
inc
or
out
mov
sbb
rol
addr16
popa
xor
cmp
mov
test
cmps
sbb
daa
ror
sbb
sahf
mov
gs
or
jl
outs
mov
nop
div
xor
lea
sbb
adc
push
call
imul
add
arpl
dec
jnp
mov
dec
enter
adc
(bad)
add
dec
jp
pop
ins
add
cmp
push
stos
adc
add
jbe
adc
add
dec
or
aam
or
push
loope
and
test
pop
jae
sub
call
pop
cmp
aam
add
add
push
jae
es
das
adc
out
or
dec
or
adc
or
add
add
sbb
scas
sub
test
push
call
ret
pop
pop
iret
xchg
lea
mov
sub
mov
push
xchg
rcr
dec
mov
mov
sbb
test
mov
pop
add
ss
or
pop
jp
mov
add
push
add
and
repnz
fdivr
in
arpl
lods
pop
loope
shr
lods
dec
or
rcl
or
adc
ja
mov
movs
mov
idiv
popw
scas
pushf
add
mov
daa
mov
mov
rol
add
inc
and
add
sbb
jl
sbb
sti
je
push
jne
addr16
add
mov
cmps
dec
xor
xchg
xor
mov
and
push
inc
mov
push
mov
ror
jmp
ins
cmp
mov
add
mov
fwait
or
sub
jnp
jle
or
sub
call
adc
cmp
mov
pop
sbb
add
add
xchg
or
daa
stc
add
rol
sbb
sub
push
sbb
sbb
(bad)
out
aad
and
adc
scas
fdiv
inc
(bad)
popa
data16
cmp
jno
adc
jae
or
add
stos
or
jmp
dec
jmp
sbb
(bad)
push
sbb
adc
xor
xchg
mov
jge
nop
lock
inc
jecxz
jno
xor
cli
and
add
or
adc
sbb
enter
push
outs
and
xchg
int3
mov
jb
xlat
push
stc
in
xor
sub
push
pop
enter
or
mov
add
mov
aam
scas
mov
push
mov
mov
and
sbb
retf
pop
fdiv
pop
mov
mov
les
dec
lahf
ficomp
add
adc
mov
pop
jmp
pop
cmps
mov
stos
pop
ret
pop
(bad)
or
js
inc
sbb
or
or
mov
test
rcr
mov
ret
or
pop
adc
xchg
(bad)
xor
sbb
popf
cmp
(bad)
xchg
add
adc
cmps
call
jo
push
call
mov
ins
mov
xlat
out
mov
dec
mov
lds
mov
into
ret
nop
sbb
xor
mov
pushf
inc
pop
or
dec
rcr
adc
or
inc
mov
imul
fiadd
jl
jne
sub
ret
out
mov
mov
aas
dec
inc
sbb
seto
rcr
es
push
inc
adc
or
movs
xchg
xor
sbb
lods
add
je
test
(bad)
jmp
dec
sub
pusha
ins
inc
sbb
mov
hlt
and
xchg
ret
retf
mov
adc
sbb
ja
jb
in
adc
and
addr16
jmp
add
jmp
or
repnz
xor
shl
add
scas
and
mov
mov
je
and
test
inc
jmp
push
xchg
pop
and
mov
adc
movs
xlat
push
jl
inc
jg
mov
or
add
retf
xchg
jnp
jge
adc
clc
pop
popf
inc
cmp
sbb
xchg
retf
ins
clc
xor
cmp
sbb
pop
out
in
dec
enter
outs
cmp
push
dec
inc
sbb
or
movaps
inc
or
jge
xor
fdiv
shl
mov
shl
push
dec
mov
mov
jmp
aaa
enter
ja
jl
sub
nop
inc
icebp
and
dec
jbe
dec
loope
add
aas
jno
push
xchg
(bad)
out
and
and
cmp
retf
ror
xchg
retf
sub
mov
fbstp
loope
(bad)
stos
cmp
dec
xchg
push
retf
xor
add
inc
enter
es
or
fmul
pop
int3
push
adc
adc
inc
js
dec
adc
push
sar
pop
ret
out
dec
cmp
inc
fild
inc
mov
punpckhbw
call
mov
outs
enter
call
cmps
mov
dec
or
or
mov
dec
and
pusha
push
adc
pop
add
xchg
mov
sub
mov
push
adc
data16
loope
adc
inc
mov
lea
and
mov
out
dec
loope
in
fs
xchg
dec
adc
fdivr
(bad)
inc
mov
push
jo
popa
add
pop
sbb
jge
add
adc
push
stos
jo
jmp
dec
jnp
sub
mov
jnp
cmps
ds
pop
inc
xor
sbb
dec
clc
cmp
inc
mov
add
xchg
mov
jae
jbe
push
dec
test
shr
mov
push
push
enter
dec
hlt
aaa
test
push
jno
mov
and
mov
add
and
xchg
retf
mov
cld
pop
loop
shr
inc
retf
call
pop
imul
inc
(bad)
pop
adc
or
mov
(bad)
inc
xchg
or
push
sub
loope
mov
les
rcr
rol
popa
popa
imul
test
add
and
fstp
es
mov
rcl
into
sub
cmp
push
push
or
jne
add
mov
stos
adc
enter
nop
lahf
push
scas
rol
jmp
push
out
sbb
clc
int3
sub
enter
xor
inc
div
pop
add
inc
mov
aam
and
push
mov
or
arpl
mov
xor
mov
sbb
jbe
pushf
movs
rol
(bad)
out
in
xor
xor
xor
xor
clc
add
dec
test
addr16
rcr
cmp
iret
clc
cmp
shr
and
sbb
inc
loopne
sti
pop
inc
fsub
pop
add
jne
pushf
(bad)
sub
xlat
es
dec
jne
and
ja
jecxz
or
clc
ja
mov
aas
xchg
call
fcom
div
mov
bound
js
xchg
addr16
(bad)
mov
push
xchg
pop
ret
sbb
dec
jne
jp
das
push
nop
pop
cmp
popf
mov
jne
and
popf
out
outs
push
jmp
mov
js
mov
out
inc
cmps
add
jle
push
cmp
iret
xchg
cli
xchg
jge
push
jecxz
pop
and
mov
cmp
mov
dec
jbe
ja
mov
dec
adc
cmp
sahf
fxch
fs
push
sub
mov
xor
pusha
push
rcr
mov
mov
mov
(bad)
pop
aas
lods
push
pusha
cmp
xchg
jno
cmc
inc
test
loopne
xor
adc
cmp
xchg
adc
sbb
mov
(bad)
fcom
pop
mov
jle
push
mov
pop
and
ins
js
inc
outs
popf
cmp
int
lds
cld
jne
sub
inc
sub
add
or
xchg
lods
add
int3
je
mov
add
retf
int
cmp
into
nop
mov
call
sbb
xchg
sar
dec
or
les
and
sbb
pop
ins
in
xchg
nop
int
les
mov
inc
xor
addr16
adc
xor
sbb
out
adc
xchg
nop
jp
(bad)
test
inc
mov
gs
mov
inc
pop
popf
imul
push
pop
fs
retf
push
cmps
bound
ss
mov
mov
and
cmp
inc
loope
pop
test
mov
or
pop
pusha
in
pushf
adc
xor
not
and
sbb
ret
or
test
movs
push
imul
cmps
add
fs
xchg
add
adc
lea
pop
jmp
or
sbb
inc
retf
pop
push
popf
sbb
in
add
cld
sub
xchg
rcr
imul
xor
sbb
clc
rol
jle
mov
(bad)
lock
int
xchg
jo
pop
dec
push
imul
adc
mov
xchg
push
mov
jno
push
hlt
pop
lds
daa
addr16
push
pop
mov
sbb
dec
sbb
adc
inc
jmp
pop
dec
pop
dec
sub
retf
or
sub
pop
xor
sub
and
mov
mov
je
xor
sub
or
or
adc
adc
push
sub
mov
scas
mov
add
add
dec
aam
js
jmp
pop
pop
in
or
adc
or
inc
dec
and
enter
push
sub
adc
adc
mov
pop
sahf
xchg
sbb
daa
movs
and
xor
inc
daa
ins
cmp
test
sub
cs
add
dec
inc
mov
and
dec
loop
lock
adc
xlat
cmp
adc
dec
ds
int
fdivr
rcr
(bad)
cmovnp
(bad)
push
div
je
sbb
cmp
das
jmp
ss
cmp
shl
leave
das
loopne
fcom
ret
fucom
(bad)
cmp
pop
push
mov
mov
shl
mov
cwde
cmp
xchg
or
add
push
rcr
xchg
adc
fwait
add
mov
mov
adc
pusha
sbb
push
je
mov
mov
(bad)
push
stc
adc
or
sub
xor
mov
xor
jb
and
sbb
cmp
jmp
(bad)
ret
test
movs
aaa
out
jp
jl
adc
sub
fcomp
adc
add
xor
pop
repnz
adc
fst
jmp
mov
pop
xor
xor
test
cmp
mov
movsx
push
mov
mov
pop
xlat
out
test
ja
out
or
paddsb
inc
push
daa
loope
mov
iret
sub
push
xchg
cmps
ret
call
sub
imul
js
and
jge
popa
sub
adc
out
fsubr
sbb
clc
xchg
or
sub
aaa
push
add
jbe
jne
sbb
mov
cmp
mov
(bad)
loopne
mov
rol
fstp
enter
(bad)
add
frndint
cmp
add
sbb
add
pop
jb
lock
and
movs
adc
pop
xchg
inc
push
xor
retf
and
adc
inc
sbb
loope
sub
test
xchg
cmp
or
xchg
mov
add
fsub
lds
clc
dec
fidivr
push
push
push
adc
and
add
add
add
jnp
pop
shr
cmp
jns
jns
pop
das
sbb
dec
or
push
adc
inc
and
mov
outs
imul
mov
inc
xchg
test
and
fidiv
inc
push
lahf
rcl
dec
sub
and
add
mov
sub
dec
cmps
daa
cmp
jno
fs
cmpxchg
add
popf
out
movs
mov
add
mov
push
jp
push
mov
jne
mov
sub
push
mov
pop
sbb
sub
mov
cmc
leave
vxorps
pop
xchg
pop
lea
outs
dec
lahf
mov
dec
cmc
pop
inc
push
adc
jl
and
arpl
out
lahf
retf
out
fsub
mov
mov
jo
in
sub
mov
inc
inc
jg
std
xchg
movs
fdiv
mov
sbb
movs
stos
jo
inc
pop
or
inc
(bad)
(bad)
mov
jo
lods
dec
(bad)
cmp
jb
stc
fs
lods
xor
arpl
add
add
into
inc
xor
fistp
loopne
div
or
(bad)
loope
mov
out
or
cmp
xor
inc
mov
movs
xchg
inc
xchg
mov
rcl
cwde
scas
call
in
push
dec
xor
xchg
std
hlt
sub
lods
shl
pop
cmp
or
dec
iret
sub
movs
pop
fwait
into
je
sub
sbb
imul
and
iret
jmp
adc
xor
jle
pusha
scas
mov
add
fwait
cdq
xor
sbb
shl
jl
mov
int
movs
lods
or
add
jge
ret
out
js
push
(bad)
jno
test
test
out
sbb
ja
in
imul
(bad)
call
ror
pop
in
in
or
add
cmp
push
ins
call
hlt
or
cmp
jb
fmul
fld
in
push
pop
loop
arpl
jns
xor
lock
repz
add
and
or
or
mov
aad
fimul
mov
call
clc
jge
je
enter
xor
(bad)
adc
sub
adc
jno
or
lea
sbb
xchg
jns
in
mov
inc
daa
add
sub
clc
jnp
(bad)
dec
imul
adc
pop
mov
cwde
or
pop
les
inc
loop
ja
fdivr
in
in
push
xor
push
dec
sti
cmp
repz
into
jmp
fbld
mov
mov
rol
mov
add
mov
jns
call
sbb
mov
enterw
lock
daa
loopne
imul
test
pop
sbb
enter
imul
cmp
(bad)
sbb
mov
inc
dec
xor
jae
test
sub
and
pop
adc
sbb
cmp
adc
xor
mov
lock
or
inc
push
sbb
mov
dec
fdivr
cmps
jo
sbb
ret
and
jmp
mov
adc
and
cmp
cld
psrad
jnp
and
(bad)
pop
shl
xchg
mov
push
push
aas
mov
jmp
sbb
sub
pop
repnz
mov
pop
(bad)
movs
mov
inc
not
not
jmp
inc
push
jge
adc
js
add
add
jl
adc
test
stc
and
xlat
rcl
hlt
nop
call
pop
inc
pop
xchg
fwait
call
test
sbb
lea
lods
xchg
or
test
out
jecxz
test
lods
cld
shr
sub
add
jnp
out
call
lods
add
sbb
pop
mov
fdiv
mov
or
sub
mov
rol
out
out
aad
aam
add
sbb
ror
dec
push
jbe
test
je
mov
out
sbb
sub
lea
(bad)
push
popa
mov
adc
mov
sbb
mov
xlat
jecxz
adc
and
mov
xor
in
lds
cmps
dec
jp
mov
sbb
mov
xchg
(bad)
and
sbb
bound
sub
jbe
(bad)
dec
jl
push
or
push
or
mov
mov
mov
push
fistp
dec
je
cmp
pop
or
mov
or
daa
test
mov
(bad)
cdq
add
fnstsw
add
sbb
call
sar
mov
jmp
in
sub
lea
or
or
add
inc
nop
mov
fimul
cmps
push
cmp
aad
pop
into
loopne
stos
ret
jmp
lds
js
pop
out
sbb
or
stc
cmps
imul
lock
adc
add
clc
xchg
or
ror
fwait
xchg
pop
jmp
jmp
je
add
loop
fsubr
mov
call
fisub
and
adc
mov
push
sbb
cld
fst
hlt
js
jb
cmovae
jns
jl
cmp
push
xchg
jae
jmp
and
movs
cmp
int3
add
xchg
pop
pop
jecxz
jae
sbb
mov
sub
aas
mov
clc
inc
leave
dec
cmp
push
dec
xchg
dec
pop
lock
mov
sbb
arpl
xchg
inc
mov
inc
rol
xchg
xchg
addr16
ret
sub
lock
push
nop
scas
add
cmc
sbb
add
xchg
mov
je
call
shr
pushf
mov
scas
shl
or
cmp
sbb
pusha
repz
dec
cmps
and
or
xor
out
call
mov
in
dec
scas
in
inc
icebp
in
push
or
repnz
cmp
icebp
repz
sahf
ja
push
jp
xchg
push
fwait
into
repz
stos
mov
outs
ja
pop
fucomp
push
jecxz
pop
pop
dec
sbb
mov
dec
mov
add
ret
inc
fbstp
pop
(bad)
mov
data16
jbe
xchg
jmp
das
pop
push
adc
sbb
fmul
(bad)
push
(bad)
mov
xchg
mov
sub
add
ins
or
popa
push
out
mov
das
push
out
and
xchg
or
adc
pop
out
ja
enter
hlt
mov
push
imul
mov
outs
ja
mov
add
(bad)
mov
and
into
aam
out
jmp
cmp
push
mov
push
or
sti
out
jg
imul
or
push
push
and
retf
aad
jae
jb
js
retf
(bad)
es
inc
add
push
jne
sti
into
xchg
inc
inc
push
call
cmp
inc
add
jge
push
icebp
mov
cmp
mov
movs
lea
and
dec
sbb
mov
ror
mov
sbb
clc
push
add
fmul
cmp
inc
call
pop
into
adc
jmp
mov
push
sbb
pop
dec
call
push
push
leave
or
push
inc
xor
and
sbb
(bad)
enter
cli
sub
shr
mov
adc
mov
mov
pop
add
and
and
lods
lock
add
cs
cmp
pop
push
cmps
jbe
push
sub
add
cmps
fsub
ins
mov
outs
call
adc
(bad)
jp
or
movs
cmp
cmp
adc
push
test
inc
bound
daa
loope
dec
movs
test
push
mov
mov
sbb
dec
cld
fcomi
mov
sbb
rcl
in
push
leave
mov
out
(bad)
enter
clc
mov
lock
push
icebp
fmulp
sbb
inc
or
aam
mov
jno
cs
push
ss
jl
add
sbb
add
mov
sbb
cmp
cmp
stc
dec
call
shr
jmp
mov
sub
inc
call
mov
or
in
mov
ret
repz
cmp
pop
xor
dec
push
push
jbe
in
(bad)
repz
adc
pop
cs
adc
mov
out
hlt
hlt
sar
jne
je
mov
icebp
and
movsx
sbb
xor
nop
mov
scas
fs
daa
xor
retf
enter
retf
xor
test
(bad)
jmp
jbe
sub
adc
addr16
test
lock
daa
pop
sub
push
cli
add
mov
dec
imul
sub
adc
pop
mov
sahf
ret
lods
cmp
add
rol
mov
add
cmp
dec
adc
rcr
or
mov
sub
lods
inc
or
inc
adc
cmp
mov
scas
test
stos
pusha
mov
xchg
std
pop
jp
mov
jl
ret
mov
movd
and
and
jg
sbb
ja
idiv
adc
push
or
ds
mov
and
call
sbb
add
mov
xchg
div
movq
or
or
and
adc
push
test
fstp
fisttp
push
shl
and
pusha
getsec
or
(bad)
scas
sbb
dec
mul
popa
test
mov
jno
or
mov
je
push
loopne
sub
dec
pop
rol
dec
jbe
adc
push
neg
xor
and
jge
push
mov
aam
jno
dec
dec
fist
sbb
mov
pop
ins
test
test
xchg
pop
and
cdq
jle
inc
push
ja
or
adc
sbb
cmp
je
sbb
fsubr
add
pop
repnz
mov
test
jmp
outs
dec
add
in
xchg
stos
clc
cmp
lds
dec
sub
cmp
adc
add
jg
or
scas
hlt
xchg
fs
mov
xchg
sbb
int
mov
push
sbb
push
push
inc
stc
pop
xchg
(bad)
cmc
pop
test
mov
stc
pop
pusha
xchg
push
jo
cmps
mov
enter
leave
imul
mov
xchg
clc
out
nop
fsub
xor
aaa
cmps
xor
push
stc
or
enter
add
add
fwait
nop
cmp
dec
pop
punpckhdq
jbe
jo
jg
pop
adc
lods
sub
sbb
(bad)
or
xchg
(bad)
(bad)
sbb
push
enterw
(bad)
mov
jno
push
cli
mov
ret
lock
push
add
push
push
dec
mov
ins
cwde
ds
shl
xor
push
xor
mov
lock
rcr
xor
push
adc
mov
ret
add
xor
push
(bad)
icebp
adc
mov
jle
ficomp
push
in
lock
data16
sbb
clc
test
rol
dec
xchg
push
pop
xor
xlat
int3
or
push
inc
iret
adc
push
gs
pop
jl
jmp
push
sti
inc
and
push
xchg
pop
or
add
pop
jmp
nop
fild
sbb
sub
push
int
call
mov
inc
sbb
sub
or
mov
nop
lea
inc
mov
add
repz
mov
cld
gs
push
cmp
pop
daa
xchg
(bad)
or
mov
sbb
shr
xchg
adc
jo
pop
add
lock
adc
add
test
mov
push
cld
and
mov
outs
pop
lods
sbb
out
popf
lea
sahf
inc
shr
add
iret
mov
adc
cmp
xor
or
mov
push
movs
lods
jmp
(bad)
inc
cmp
mov
dec
adc
setge
jmp
add
inc
push
cmps
jl
pop
sub
fsub
mov
pop
stos
cmp
test
inc
xor
cmp
xlat
sbb
mov
out
ret
fs
inc
push
call
mov
push
fistp
setne
(bad)
sbb
push
pop
xor
push
mov
or
add
fwait
loope
xchg
push
adc
mov
inc
imul
pop
test
mov
and
and
out
push
jmp
push
add
mov
lock
xor
out
push
or
and
xchg
std
rcl
cmps
mov
push
push
mov
lods
(bad)
jg
lea
dec
outs
ret
sub
lock
in
sub
fbstp
xchg
mov
xor
fst
inc
or
dec
aaa
jnp
cmp
je
sbb
adc
or
test
sbb
sbb
mov
out
ins
or
xchg
adc
gs
shl
daa
popa
adc
xchg
sub
stos
jp
rcl
xchg
or
adc
sbb
shl
or
adc
mov
xchg
adc
xor
arpl
jmp
sub
jmp
add
hlt
je
inc
xchg
or
and
pop
retf
cmp
dec
xchg
add
jmp
adc
push
or
lock
aam
xor
mov
mov
sbb
mov
js
mov
movs
mov
jno
lods
jmp
sub
sbb
pop
adc
push
(bad)
mov
scas
or
sub
sar
push
mov
inc
or
xchg
adc
bswap
sbb
add
jnp
mov
sbb
adc
sbb
test
and
push
inc
adc
add
es
jp
inc
xlat
adc
fcmovb
fadd
jl
adc
xchg
ret
push
inc
and
sbb
mov
int3
loopne
pushf
in
jo
push
or
test
cwde
pcmpgtb
ins
add
fdivr
inc
(bad)
and
xchg
dec
add
pushf
int
dec
loop
xchg
mov
add
inc
dec
add
out
inc
into
pop
addr16
fild
jbe
pop
pop
push
ss
mov
in
mov
arpl
dec
xor
cmp
leave
sbb
fist
sub
mov
inc
or
cmp
jne
daa
push
pop
clc
popa
clc
cs
jne
pushf
or
pop
mov
aad
imul
adc
push
push
sahf
xchg
jmp
cmp
outs
adc
data16
pop
dec
dec
lea
pop
aad
push
push
jnp
cmp
sub
push
mul
inc
xor
sbb
pop
jmp
arpl
inc
dec
jne
mov
or
out
xor
or
call
jle
add
xor
push
shr
or
mov
(bad)
jmp
nop
stos
addr16
adc
into
popa
repz
xor
das
inc
lods
pop
pop
daa
adc
adc
add
sahf
loopne
addr16
retf
sti
xlat
xchg
leave
aas
mov
xor
and
in
fst
(bad)
jg
push
dec
out
sbb
xlat
inc
ins
push
sbb
jmp
retf
(bad)
imul
clc
pop
mov
call
test
call
mov
inc
icebp
and
pusha
cmp
xor
clc
xchg
inc
inc
or
data16
xor
pop
mov
sub
or
add
cmp
pop
add
lods
addr16
pop
cmovb
cmp
and
das
push
and
movs
inc
and
add
outs
add
cmp
mov
xchg
jne
ss
jne
int
jo
pop
mov
adc
or
inc
and
mov
in
es
repz
ins
outs
add
sar
sahf
test
aas
or
xchg
rcl
pop
rol
test
cmps
adc
add
xor
cli
loop
out
sub
icebp
and
(bad)
out
rcr
ss
jmp
push
clc
push
daa
xor
or
ins
popa
sbb
mov
add
add
or
bnd
in
dec
cmp
sub
cwde
(bad)
call
clc
adc
(bad)
loop
mov
sbb
jl
dec
mov
sbb
push
arpl
inc
pop
out
inc
push
ins
adc
iret
sub
mov
mov
cmp
arpl
fistp
push
pushf
mov
mov
xchg
sub
mov
les
cmp
outs
dec
ret
loopne
push
inc
je
dec
push
int
cdq
cdq
out
adc
ret
adc
out
popf
xchg
cmc
inc
push
and
sbb
or
fmul
xlat
cld
jnp
push
retf
cmp
jne
push
mov
and
mov
push
lods
mov
xor
pop
bound
xor
mov
mov
sbb
movs
inc
mov
cdq
mov
ror
push
adc
ficom
push
leave
push
push
xor
sub
cmp
btc
add
pop
ret
loope
or
in
dec
dec
adc
add
test
sahf
add
or
mov
movs
int
dec
pop
add
iret
adc
xor
cmp
daa
test
adc
add
inc
jl
enter
rcl
add
retf
or
(bad)
mov
lea
or
adc
test
inc
loopne
jmp
repnz
xlat
pop
sti
mov
add
sub
jg
push
retf
adc
cmp
or
dec
add
daa
in
or
pop
push
mov
mov
add
or
mov
test
ror
sub
xchg
pop
push
daa
jmp
popf
retf
ret
fs
sbb
adc
add
jne
mov
fsubr
movs
cld
sub
or
mov
adc
mov
ja
jle
mov
cld
fild
jecxz
jo
or
fwait
test
(bad)
ins
adc
sti
jo
test
scas
mov
push
in
xchg
lods
xor
fcomp
lea
add
imul
cmp
pop
loopne
jne
test
femms
and
add
mov
mov
sub
sbb
ins
sbb
sbb
push
(bad)
push
outs
ret
pop
xor
popf
(bad)
cld
ja
mov
lahf
mov
dec
sbb
or
in
call
sub
shl
(bad)
ret
les
lahf
and
ret
pop
cmps
inc
pusha
aas
mov
push
inc
pop
daa
mov
push
ret
aam
sub
sub
ror
mov
mov
test
sub
or
sbb
push
mov
aad
pop
lods
xor
(bad)
daa
sub
mov
or
retf
jbe
dec
aam
daa
imul
das
jmp
cmp
pop
adc
cmps
cmp
lds
out
lock
sbb
outs
pop
or
pop
ds
call
out
add
call
test
test
add
adc
aaa
test
push
out
mov
ins
(bad)
jp
retf
or
push
test
mov
jno
and
out
dec
and
push
jl
and
push
(bad)
and
inc
inc
pop
or
add
clc
in
fbstp
fldenv
or
or
lock
fisttp
aaa
sbb
pop
or
xor
push
or
jge
add
mov
cwde
pop
push
rcl
jbe
jge
cmp
sub
xor
movs
fsubrp
test
adc
stos
clc
adc
mov
ins
outs
pusha
ins
jbe
pop
outs
inc
pop
mov
cmp
or
call
jbe
mov
push
mov
cmps
mov
addr16
call
xchg
inc
imul
sub
cld
mov
repnz
ss
xchg
sar
int3
cmp
imul
xor
pop
mov
adc
jge
outs
pushf
(bad)
vmulsd
nop
(bad)
jb
xchg
adc
dec
out
scas
outs
fmul
fcom
mov
pop
mov
add
div
mov
fs
or
cmc
inc
ds
adc
mov
retf
add
cdq
or
dec
mov
pop
cmp
cmps
jo
sub
jmp
test
mov
and
mov
fdivr
daa
popf
mov
jae
daa
daa
daa
je
jbe
daa
daa
daa
daa
js
jp
daa
daa
daa
daa
jl
jle
daa
daa
daa
daa
pusha
popa
bound
daa
daa
daa
fs
daa
daa
daa
push
daa
daa
daa
ins
ins
outs
outs
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
xor
xor
daa
daa
daa
daa
xor
ss
daa
daa
daa
daa
cmp
cmp
daa
daa
daa
daa
cmp
ds
daa
daa
daa
daa
and
and
daa
daa
daa
daa
and
es
daa
daa
daa
daa
sub
sub
cmp
daa
daa
sub
cs
and
ja
adc
dec
xor
pusha
xor
xor
add
add
mov
xchg
int
xor
jbe
add
cmps
add
or
dec
pusha
jb
pop
ins
add
cld
mov
dec
bound
push
sbb
xchg
(bad)
fild
je
imul
data16
push
mov
pop
(bad)
es
cmp
fwait
jae
pusha
xchg
or
adc
jo
add
add
je
jbe
xchg
jl
ins
clc
cmp
and
inc
rcr
enterw
je
arpl
adc
adc
gs
dec
dec
loop
jbe
gs
out
mov
bound
ins
or
jbe
imul
iret
es
outs
int
push
cs
jo
outs
sbb
push
and
sti
jge
popa
jae
add
sbb
or
adc
inc
jl
or
inc
pop
jae
repnz
pop
push
into
or
sub
adc
ins
inc
div
push
push
push
je
into
ins
dec
outs
jo
xor
ss
je
push
inc
jns
sbb
mov
in
addr16
and
in
cs
add
sbb
imul
sbb
xor
aas
lds
loopne
or
mov
ja
pop
add
jo
jb
fimul
adc
imul
repnz
add
dec
jl
pop
lds
jp
or
push
fidiv
(bad)
mov
adc
inc
inc
xor
pop
inc
cmp
out
sub
jae
es
xor
fadd
add
pop
mov
ss
mov
xchg
fwait
or
pop
test
jmp
sub
sbb
sub
les
scas
dec
dec
xor
sbb
push
xchg
adc
movs
jae
imul
cmps
inc
xchg
mov
xchg
mov
mov
add
pop
into
(bad)
inc
sar
and
in
cmps
push
adc
xacquire
xor
hlt
or
fwait
sub
and
retf
add
icebp
iret
pop
adc
push
mov
xor
xchg
push
adc
push
inc
push
add
jmp
push
xor
pop
xor
jno
bound
push
push
dec
gs
fidivr
pop
les
cmp
and
sbb
push
and
hlt
jbe
xlat
ficom
add
push
loop
fsub
repz
cmp
push
sbb
xchg
jo
outs
sbb
inc
pop
cmp
pop
mov
push
add
leave
ret
jnp
mov
les
sbb
rcr
ss
add
shr
lds
xchg
add
lock
mov
shl
adc
aas
pusha
ds
pop
add
push
inc
js
sub
mov
cmp
fisub
or
aam
cld
push
push
ret
fstp
pop
sbb
add
shl
leave
add
mov
loope
xchg
cmp
cwde
nop
add
les
add
sub
pop
in
scas
or
push
cmp
lahf
xlat
je
sahf
inc
aam
or
push
lods
imul
popa
sbb
pop
sbb
lds
inc
sub
mov
imul
pop
and
pop
aas
push
int3
push
or
mov
push
mov
or
cmps
ins
gs
add
pop
inc
sbb
sub
inc
sar
mov
inc
add
jb
jae
mov
mov
jle
sar
mov
or
or
jnp
add
jl
jne
outs
adc
inc
dec
fwait
add
outs
adc
stc
add
in
mov
or
arpl
sbb
add
or
sub
in
push
gs
dec
outs
ja
xchg
lock
jmp
add
push
xchg
add
xor
fucomp
bound
fadd
inc
ins
mov
dec
leave
inc
rcr
retf
mov
push
hlt
push
xchg
ret
sbb
nop
dec
adc
fmul
cmp
adc
int3
cmps
call
sbb
call
jp
aam
sbb
jecxz
pop
fisub
(bad)
cs
mov
scas
fst
add
push
pop
push
call
jbe
ins
outs
nop
cmovo
push
inc
ins
push
clc
mov
pop
sysret
jo
xlat
fld
addps
mov
sahf
fstp
ins
xor
js
add
or
int3
or
(bad)
loopne
gs
and
test
mov
mov
push
add
sbb
sbb
mov
push
adc
push
icebp
push
cmps
jnp
lock
sub
scas
fwait
mov
add
push
sar
mov
cmps
inc
pusha
push
push
bound
icebp
loope
gs
xor
cmp
sbb
add
ret
loope
in
or
xor
pop
and
fwait
mov
and
cmp
fs
movs
jmp
push
fwait
jbe
data16
pop
sub
mov
sub
in
xchg
mov
ss
add
ds
add
shl
or
push
pop
push
stos
push
mov
dec
ins
mov
and
rcr
(bad)
mov
mov
mul
ret
nop
lods
mov
inc
rol
xor
repnz
imul
in
in
push
pushf
imul
dec
ins
mov
aam
mov
mov
push
shl
je
sbb
jo
cmp
add
jle
ja
push
imul
mov
and
stos
loope
nop
ds
sub
popa
dec
xor
push
or
ins
mov
aas
in
mov
xchg
mov
sbb
xchg
xchg
mov
ins
mov
fwait
mov
mov
call
fdivr
pushf
mov
mov
dec
add
push
in
dec
shl
push
enter
cwde
xchg
pop
xchg
and
mov
(bad)
into
aam
fdivr
mov
(bad)
pop
mov
dec
fadd
pop
xor
pop
repnz
call
clc
mov
sub
hlt
call
(bad)
or
enter
pop
movs
push
test
(bad)
movs
mov
dec
movs
cs
cld
add
ja
dec
pop
sbb
out
add
test
sbb
pop
daa
mov
dec
or
mov
or
dec
pop
es
add
mov
adc
call
mov
xor
rol
xor
inc
dec
jne
aaa
adc
aas
mov
lods
inc
sub
movs
iret
pop
int3
inc
cwde
inc
pop
test
adc
pop
ja
mov
xchg
add
add
mov
adc
xchg
es
sub
(bad)
mov
adc
je
sbb
jne
(bad)
xor
xchg
ror
test
into
jp
cld
sar
inc
cmp
xor
push
ret
or
add
adc
mov
aam
into
xchg
sub
push
jb
dec
lods
cmp
add
loope
loopne
dec
mov
ret
lods
pop
dec
dec
mov
out
pop
push
jb
jg
or
lds
dec
repnz
in
dec
in
or
int3
repz
mov
cmp
add
push
les
jmp
into
scas
and
cmp
repz
mov
inc
cmp
pop
cmp
adc
sti
add
stc
inc
pop
ret
and
sbb
xlat
cmp
or
je
sahf
std
leave
adc
sub
shl
icebp
out
adc
push
sbb
inc
add
leave
mov
jecxz
sub
jae
push
and
xor
fbstp
rcl
daa
mov
or
jge
push
sbb
and
jge
xchg
sbb
cs
fcomi
mov
pop
mul
cwde
mov
popa
sub
push
daa
add
dec
pop
mov
jle
cmps
push
cs
adc
test
fdivr
das
sbb
jg
mov
inc
mov
les
mov
je
push
cmps
rol
dec
xor
inc
jno
out
shr
jmp
arpl
pop
or
mov
(bad)
jb
shl
pop
adc
outs
pop
fbld
icebp
dec
ins
lock
push
xchg
add
jbe
add
jo
xchg
in
mov
push
gs
ins
pop
jle
mov
shl
ins
cmps
jb
add
xchg
xchg
pusha
es
pop
gs
mov
iret
lahf
jne
or
jne
push
jno
popa
mov
inc
or
dec
shl
xchg
add
jns
ja
das
and
data16
add
xor
dec
in
sahf
das
bswap
pop
add
inc
popa
das
pop
sbb
push
jo
push
pop
imul
das
inc
push
addr16
sti
inc
jo
das
inc
je
inc
push
xchg
dec
hlt
ins
cld
das
and
adc
mov
jg
js
jg
inc
mov
pusha
sub
push
cmp
sbb
daa
pop
xchg
imul
lahf
sbb
and
push
push
jae
lods
loopne
cdq
pop
or
push
pop
inc
mov
pop
mov
push
sar
jg
xor
repz
adc
adc
inc
pop
or
outs
inc
push
daa
or
pop
mov
jne
pop
xchg
rcl
or
push
dec
cs
jecxz
mov
push
arpl
add
inc
xor
shr
mov
das
cmp
sub
mov
out
das
or
xor
inc
loop
jecxz
fsub
ret
push
mov
cmps
and
push
pop
push
dec
inc
dec
pop
mov
imul
icebp
cmps
pop
(bad)
aas
int3
or
dec
pop
inc
dec
inc
push
push
inc
push
add
jle
ja
inc
inc
inc
shr
mov
xor
inc
dec
dec
arpl
dec
inc
inc
push
adc
pop
cmp
inc
push
dec
dec
push
mov
push
xchg
mov
push
inc
inc
dec
dec
and
out
in
dec
enter
xor
xor
adc
sar
add
adc
dec
inc
xor
cld
inc
push
inc
inc
dec
not
dec
sub
mov
mov
(bad)
cmp
inc
mov
xor
test
das
mov
xchg
push
es
dec
pop
xchg
jg
adc
push
push
push
dec
push
inc
scas
cmp
nop
cmps
dec
inc
dec
push
mov
add
ficomp
push
icebp
(bad)
ss
mov
mov
test
mov
inc
adc
cmp
mov
add
jg
cs
mov
dec
or
sbb
add
addr16
adc
fnstcw
test
adc
inc
or
push
sbb
push
sbb
and
div
and
mov
sbb
movs
dec
sbb
mov
or
push
test
or
or
or
jmp
add
test
shl
mov
bound
ins
or
mov
pusha
mov
sbb
or
adc
xchg
dec
pushf
or
and
push
and
movs
test
mov
adc
inc
pop
fwait
pop
rcr
xchg
pop
ins
loopne
lock
xor
dec
jb
ret
das
ror
dec
xchg
mov
pop
aam
sub
je
sub
pop
std
jne
lock
and
cmp
xchg
push
sub
add
nop
out
ror
adc
or
mov
xchg
das
cmp
jo
(bad)
fcom
cli
das
cwde
add
xor
add
mov
jae
xchg
dec
mov
ins
fcom
cmp
loope
push
sbb
loope
pop
xchg
mov
sbb
nop
ret
lods
fcom
cmp
push
or
(bad)
fiadd
(bad)
cdq
sbb
in
xor
dec
movs
pop
mov
inc
or
enter
dec
test
inc
sbb
je
rcl
in
fiadd
jmp
adc
gs
scas
inc
aam
add
push
sbb
or
mov
adc
add
push
sbb
add
and
or
mov
xchg
mov
aas
push
jmp
mov
mov
mov
imul
fiadd
cmp
imul
and
sti
retf
jmp
sub
dec
or
add
cdq
add
or
sar
xchg
hlt
fwait
or
and
pop
in
sbb
and
es
mov
add
ret
test
icebp
add
aam
(bad)
sbb
sti
mov
in
inc
and
sub
dec
js
scas
mov
pop
pop
cwde
lods
push
inc
add
pop
xchg
ss
xchg
adc
fbld
lock
cmps
aam
pop
aaa
and
lea
push
mov
test
jb
sub
adc
jecxz
sub
fnsave
mov
push
push
mov
dec
mov
xchg
ins
jp
xor
push
das
fdivp
ficom
pop
pop
lock
ret
iret
or
xchg
out
cmp
mov
cli
or
popa
aam
outs
inc
sbb
cmp
xchg
pop
sbb
pop
and
xchg
push
jl
push
mov
or
ins
jge
inc
sbb
add
movs
add
in
jb
test
shl
daa
nop
ss
in
add
mov
ss
movs
lock
push
jo
rcr
adc
dec
aaa
in
adc
and
pop
aam
das
sbb
es
ficom
mov
jne
fbld
or
jne
mov
call
add
movs
shl
add
in
xchg
mov
cmc
adc
ror
pop
adc
in
mov
fs
push
cmp
fs
inc
das
sbb
shl
mov
cs
adc
leave
shl
pop
or
in
xchg
mov
mov
call
pcmpeqb
mov
sub
test
and
cmp
outs
push
push
loope
movs
nop
js
aas
sbb
add
add
in
lock
mov
jmp
mov
sub
mov
adc
(bad)
nop
mov
repnz
xor
inc
inc
inc
dec
lods
popf
cmp
sub
jnp
mov
jbe
fild
shl
scas
ss
pop
push
fld
dec
mov
jmp
xchg
sub
jmp
je
and
movs
sub
add
hlt
dec
jmp
add
hlt
lock
out
lods
pop
mov
bound
push
aas
stos
loope
shl
mov
xor
je
popa
inc
or
xchg
nop
inc
and
adc
cmp
add
cwde
mov
mov
aam
es
cmp
sbb
and
xchg
xchg
add
sub
js
inc
mov
outs
arpl
xor
nop
xchg
and
lahf
(bad)
outs
shl
add
or
push
inc
rcl
cmp
test
bound
loope
push
mov
or
loopne
sub
call
out
idiv
sub
and
push
or
push
add
or
pop
or
add
adc
pusha
ja
or
push
push
or
in
lds
popa
add
or
rcr
mov
add
cmps
push
or
mov
adc
ss
fdiv
lds
xor
shl
mov
lea
sub
xchg
and
cmp
adc
fiadd
adc
icebp
adc
les
or
adc
xchg
out
fild
or
sbb
ins
push
push
in
mov
(bad)
test
sbb
inc
fs
mov
push
ins
popa
and
outs
cs
hlt
and
push
ret
mov
xor
imul
mov
add
sbb
xchg
dec
shl
sbb
iret
jne
fisubr
sbb
adc
xchg
xchg
mov
cmp
mov
fwait
ins
int3
xchg
mov
call
mov
lahf
push
pop
cmc
adc
and
inc
adc
pop
xor
movs
mov
add
ins
popf
pop
aaa
push
ins
les
xor
jo
lods
mov
inc
jnp
loopne
mov
mov
ins
jnp
jb
xor
adc
stc
jecxz
rcl
and
jnp
nop
adc
xchg
push
hlt
inc
inc
or
arpl
je
daa
std
adc
mov
dec
test
ror
mov
dec
inc
das
mov
int3
push
jno
xchg
scas
dec
mov
(bad)
push
inc
mov
mov
push
add
les
aas
dec
das
inc
jae
dec
mov
aaa
scas
not
and
mov
cmp
je
mov
mov
mov
test
add
mov
or
pusha
pop
vpmacsswd
push
loope
xchg
xor
xor
sbb
(bad)
mov
or
pusha
lea
push
hlt
scas
jecxz
cli
sti
mov
not
and
mov
je
aam
inc
jl
and
cmp
xchg
push
sahf
call
xchg
imul
dec
pop
clc
push
add
and
push
mov
xchg
mov
mov
ds
xor
push
xor
cmp
(bad)
or
push
and
sub
in
jns
add
les
mov
ror
sbb
and
dec
pop
and
ret
dec
jo
push
movs
xchg
inc
dec
scas
sub
or
loope
or
or
xchg
dec
mov
xor
sti
(bad)
ds
sbb
add
jno
or
cwde
aas
xor
test
pop
mov
or
mov
adc
gs
or
in
retf
not
gs
add
lods
iret
add
in
mov
adc
js
inc
push
mov
sar
mov
imul
jb
adc
lea
push
fist
dec
add
aaa
inc
push
mov
jg
or
jmp
in
popa
add
add
int3
ds
fisub
enter
mov
xchg
pop
loop
ror
add
jo
popa
or
inc
mov
arpl
sar
mov
mov
bound
xchg
sub
imul
les
stos
add
cs
movs
gs
push
imul
call
cmps
cmp
push
mov
mov
out
pop
in
(bad)
pop
pop
adc
fimul
push
fbstp
arpl
pop
pusha
shl
xchg
pop
cmp
pop
or
je
or
add
icebp
in
xchg
mov
loopne
dec
div
shl
and
dec
adc
xor
pop
ror
or
push
sub
js
add
mov
call
adc
inc
xchg
add
xor
xchg
adc
lock
sub
sti
inc
mov
stos
jo
mov
test
ss
pop
mov
sbb
sbb
dec
adc
push
es
cmp
cmp
inc
xchg
mov
daa
mov
test
pusha
jl
sbb
and
(bad)
or
sub
dec
jmp
fcomp
jbe
jns
pop
inc
xor
shl
add
sbb
lock
jo
mov
das
inc
sub
push
dec
push
lea
sbb
loopne
mov
mov
lods
mov
gs
or
rcl
loopne
push
or
call
add
xor
mov
rcl
pusha
loopne
add
ret
jle
add
or
or
lea
lea
js
cld
int
or
mov
mov
add
mov
mov
push
push
add
popa
and
mov
dec
loopne
sbb
xchg
mov
dec
mov
mov
adc
adc
mov
xor
pop
pop
pop
jl
inc
dec
jne
jbe
loopne
cmp
or
mov
mov
ins
dec
add
pusha
add
mov
sar
ficom
aam
lea
frstor
js
and
das
test
pop
and
and
or
and
jns
jmp
cwde
and
(bad)
mov
push
out
fild
adc
jecxz
mov
mov
jmp
rol
mov
add
cli
adc
add
dec
pop
cld
push
mov
and
or
push
add
pop
aaa
mov
cdq
add
or
xchg
push
test
rol
or
add
ds
ds
mul
icebp
cwde
call
std
lea
fwait
(bad)
push
pop
push
cmp
cmp
daa
jmp
fdiv
and
out
or
cmp
cld
(bad)
icebp
push
sbb
lods
loope
das
(bad)
shl
hlt
push
add
cmp
fdiv
jns
dec
adc
push
pop
adc
adc
icebp
jo
cli
scas
dec
das
les
and
and
or
ins
sub
repz
mov
pop
mov
jmp
cmp
dec
add
cdq
push
pop
push
push
addr16
or
ss
pop
test
fbld
cmp
adc
dec
or
add
mov
cld
cmc
popa
jmp
mov
xchg
(bad)
movups
mov
in
xchg
rcr
and
mov
pop
sub
cld
es
sub
jecxz
ja
clc
xor
pop
je
push
push
push
aad
mov
and
mov
or
je
inc
push
addr16
dec
les
xor
mov
push
retf
pushf
jnp
push
pinsrw
jg
sbb
lock
aaa
mov
enter
mov
cs
test
cmp
jle
pusha
sub
sub
dec
rcr
(bad)
in
or
jne
push
bound
sub
in
jge
dec
mov
mov
data16
cmp
sub
jl
rcl
and
and
pop
adc
or
cmps
shl
fistp
adc
cmp
sub
enter
xor
pop
cld
push
mov
or
add
ret
mov
test
dec
cmp
or
mov
pop
add
mov
sbb
cmps
fwait
cmp
mov
test
loope
or
pop
or
pop
add
adc
mov
sbb
or
rol
imul
adc
fs
jle
cmp
jl
mov
int3
scas
aaa
enter
jg
and
cld
or
cmp
jle
sub
sbb
dec
mov
jne
and
jge
movs
jns
js
lock
mov
xor
dec
jnp
loope
pop
and
sbb
adc
stos
test
push
pop
cmp
jp
adc
push
sbb
enter
fadd
mov
push
sbb
xchg
clc
mov
sbb
sub
ds
inc
clc
or
sbb
inc
or
or
sub
sub
mov
imul
out
aas
cmp
cld
mov
or
inc
ret
push
retf
inc
(bad)
push
jg
or
jl
push
cmp
loope
adc
mov
in
jp
push
mov
retf
inc
pop
inc
dec
jne
cmp
xchg
adc
mov
icebp
push
xor
push
aaa
sub
(bad)
mov
sub
add
sub
cwde
sub
add
pop
mov
es
es
push
and
and
sbb
mov
movs
int3
xor
ficom
cwde
mov
fcomp
jne
sbb
mov
movs
jb
cmps
push
fwait
sub
xchg
sub
push
inc
xor
fs
mov
xor
mov
adc
xor
(bad)
mov
mov
mov
jmp
or
icebp
ins
loop
sbb
sahf
adc
(bad)
jae
push
xor
xchg
adc
test
shl
jbe
test
fwait
dec
loopne
(bad)
pop
xchg
jmp
enter
mov
inc
ret
jno
add
adc
push
sub
mov
dec
inc
inc
pop
lods
jb
push
and
push
push
rcl
mov
jmp
pop
js
cs
inc
jl
mov
iret
inc
mov
mov
mov
jmp
inc
in
loop
push
icebp
add
gs
stc
(bad)
mov
je
dec
or
jle
lock
jmp
call
push
sbb
and
jmp
mov
jmp
adc
sub
ins
and
cld
js
imul
xor
inc
and
push
push
jb
add
fmul
cmp
int3
mov
rcr
pop
inc
and
adc
hlt
es
addr16
fadd
mov
inc
inc
shr
adc
mov
xor
pop
add
add
xor
adc
adc
and
add
dec
ret
loopne
fld
cmps
hlt
ret
adc
cmp
pop
add
lock
add
pop
repnz
and
sbb
or
sbb
or
sub
pop
sub
sbb
mov
push
sbb
or
pop
repnz
dec
(bad)
and
out
push
jg
mov
inc
ret
fbld
inc
and
pop
jo
fild
and
mov
sbb
outs
imul
mov
push
push
stc
sub
and
add
sysret
push
aas
mov
pop
push
push
in
pop
xchg
call
add
loopne
cmp
dec
fimul
test
call
adc
imul
test
inc
stos
dec
test
sub
push
mov
int3
adc
pop
lea
shr
push
lock
nop
dec
or
pop
iret
sub
add
add
or
add
(bad)
mov
or
add
push
lods
or
lods
data16
jbe
push
rcl
push
scas
test
mov
stos
sbb
jp
mov
mov
add
push
adc
sub
fsubr
ret
cmp
and
lock
cmc
cmp
add
add
jle
daa
int
xlat
sbb
adc
and
in
sub
mov
jl
xchg
add
imul
popa
or
adc
sar
and
xlat
xchg
(bad)
es
stc
aaa
pop
mov
adc
and
and
cmps
jne
ja
fist
or
xor
mov
xor
nop
das
mov
jle
pushf
xor
inc
push
jb
jae
xor
inc
and
inc
or
rcl
push
xchg
adc
ficom
aas
xchg
adc
ins
test
adc
and
popa
push
outs
push
or
in
je
sub
cmp
mov
sub
bound
sar
push
stos
clc
xchg
inc
dec
ja
push
es
inc
hlt
ror
cmc
add
adc
xchg
xchg
mov
or
cmp
cmp
and
sbb
jle
adc
dec
outs
mov
shr
mov
xor
xchg
and
not
pop
rol
rcl
arpl
(bad)
idiv
mov
and
push
push
push
pop
cmp
mov
add
out
push
aaa
mov
repnz
mov
pop
push
pop
cli
add
and
add
sub
mov
sar
out
pop
jl
push
fild
aas
xchg
inc
outs
jb
retf
or
cmps
in
add
mov
jbe
(bad)
push
add
jge
xchg
xchg
or
dec
pop
inc
adc
jae
add
ror
add
mov
inc
dec
xor
push
popf
sub
xchg
hlt
sbb
fadd
dec
nop
clc
mov
sub
stc
repnz
in
hlt
mov
mov
and
mov
in
mov
movs
push
push
add
push
dec
xchg
arpl
pop
ja
popw
gs
arpl
ins
jo
pop
add
pop
and
mov
and
jge
js
cmp
inc
adc
jne
jg
scas
and
imul
int3
shl
loopne
stc
add
pop
popf
mov
inc
cld
mov
push
js
bound
adc
dec
ss
ret
or
add
add
loop
sbb
push
mov
loope
push
mov
sub
cmps
jno
inc
imul
push
dec
(bad)
sbb
clc
clc
jb
fdivr
repz
jne
pop
sub
and
sbb
(bad)
lahf
push
pop
retf
mov
cdq
pop
out
sub
push
loopne
rcl
sub
pop
xchg
pop
sub
inc
xor
cwde
xchg
xchg
call
(bad)
ds
call
fiadd
jo
outs
lods
or
xor
fistp
pop
or
popa
pop
movs
dec
adc
push
or
retf
cwde
mov
push
add
sbb
pop
xor
(bad)
daa
lea
pop
jo
es
adc
mov
ss
mov
sub
icebp
fcomp
daa
mov
jge
mov
test
or
add
jle
xchg
cmp
push
outs
add
fidiv
pushf
aam
or
ds
mul
test
mov
or
aas
lahf
mov
and
call
gs
pop
or
pop
push
dec
and
xor
or
mov
sbb
xor
popa
xchg
fstp
inc
(bad)
xlat
pop
jne
mov
movs
inc
and
dec
cdq
mov
and
adc
ss
in
mov
xchg
out
and
bound
and
lock
adc
pusha
lock
movs
xor
inc
sbb
das
lea
add
dec
jecxz
add
jg
or
pop
adc
pop
in
mov
push
adc
sbb
sbb
leave
mov
popa
adc
ins
fistp
cmps
je
push
or
xor
inc
or
mov
(bad)
xor
mov
das
xlat
jae
icebp
xchg
or
dec
(bad)
mov
pop
pop
push
cld
xchg
mov
cmp
and
xchg
das
loop
(bad)
sti
aaa
or
sbb
push
inc
js
clc
dec
lods
pop
fld
adc
cmp
mov
jp
rol
sbb
iret
sub
jns
aas
loop
pushf
popa
(bad)
jnp
js
sub
imul
and
inc
jbe
loopne
inc
pushf
lods
(bad)
mov
or
fwait
clc
aam
mov
outs
sbb
dec
mov
gs
retf
push
inc
sbb
lea
jae
hlt
nop
pop
cmp
fadd
test
sbb
pop
xor
and
(bad)
push
adc
xchg
mov
mov
popa
push
rol
pop
je
or
or
sbb
adc
les
push
push
add
pop
jo
pusha
gs
jno
jno
pusha
jo
pop
test
fcom
xor
sbb
loope
push
or
dec
daa
fisubr
cmp
in
push
sbb
adc
or
and
dec
inc
fst
mov
clc
push
sub
dec
and
inc
ds
loopne
or
or
add
adc
sbb
sahf
das
and
(bad)
sub
or
add
mov
pusha
inc
inc
div
dec
mov
pop
les
stos
add
sbb
push
bsr
pop
sbb
rcl
mov
pop
push
jp
add
pop
mov
dec
mov
pop
outs
fadd
sbb
aaa
xchg
iret
cmp
fmul
inc
test
push
shl
(bad)
mov
jne
repz
ins
inc
xlat
or
pop
push
sub
sbb
add
(bad)
jle
or
push
bound
jnp
sbb
(bad)
in
pop
dec
jecxz
inc
sbb
fild
adc
adc
push
or
push
push
dec
es
push
jo
imul
push
rcpps
shr
add
adc
ret
fist
mov
or
inc
popf
inc
pop
cmp
mov
push
add
xor
es
pop
gs
jnp
(bad)
pusha
dec
jae
xor
pusha
sbb
out
nop
movs
mov
mov
or
add
add
mov
inc
xor
inc
outs
adc
movs
sbb
jmp
dec
aaa
sub
adc
adc
ins
inc
inc
xor
inc
sub
push
and
and
mov
sub
or
inc
and
mov
mov
les
movs
inc
sub
(bad)
jg
dec
adc
mov
mov
mov
jmp
popa
in
mov
add
pop
(bad)
es
pusha
cmp
cmp
mov
dec
push
or
xor
xor
test
and
jnp
pop
je
sub
data16
cld
or
push
push
jecxz
call
sbb
retf
call
stos
dec
test
push
adc
add
ret
adc
push
sbb
fwait
inc
test
daa
dec
dec
je
cdq
ret
fist
xor
jo
xor
mov
fcmovu
neg
sub
mov
push
repnz
push
xor
jge
inc
cwde
dec
leave
movs
addr16
dec
dec
iret
dec
sbb
add
mov
pop
movs
xor
add
sub
xchg
mov
dec
shl
test
adc
mov
data16
xor
dec
sbb
and
neg
dec
xor
xor
sti
lods
imul
int3
push
xchg
fcom
mov
nop
ret
adc
in
push
mov
mov
test
addr16
das
cmp
ror
xchg
dec
imul
push
cs
popa
push
imul
aas
dec
cmp
sbb
adc
scas
jo
mov
movs
pop
dec
adc
ss
and
dec
in
push
or
mov
or
jb
cmp
push
dec
or
cmp
push
push
das
add
lods
shr
movs
sbb
sbb
sbb
test
aaa
in
call
in
and
iret
aam
retf
push
lea
popa
aad
pop
push
add
mov
add
add
or
daa
cmp
push
aam
cvtpi2ps
and
movs
imul
push
cwde
xor
cwde
and
cmp
je
js
jl
das
stos
xor
push
sub
push
lock
xchg
ja
dec
enter
mov
arpl
add
and
lods
lods
push
or
(bad)
jne
loop
rol
clc
xchg
xor
adc
adc
cmps
aam
pop
mov
mov
punpckldq
adc
lods
ficomp
test
out
lock
xlat
int
call
call
int3
repnz
sub
ror
loopne
dec
clc
hlt
pop
jo
xlat
and
mov
outs
adc
ror
les
in
mov
je
loope
mov
add
pusha
int3
mov
call
adc
dec
repnz
mov
pop
mov
push
mov
out
cmp
or
fimul
cs
push
das
rcr
or
mov
pop
mov
rol
or
pop
shl
add
xor
pop
xor
pop
adc
inc
xchg
xchg
jo
popw
jno
inc
cmp
inc
sti
mov
sub
jno
test
jb
mov
std
ins
pop
je
add
dec
cld
ret
or
cld
mov
sti
mov
push
ret
aad
test
imul
sbb
cs
cmp
inc
push
movs
fldcw
xor
xchg
scas
adc
jno
test
xor
sar
mov
inc
scas
sti
adc
jo
nop
out
dec
test
add
sub
shl
call
dec
xchg
pusha
rcr
add
or
or
xor
stos
pop
sub
mov
fisub
jmp
pop
push
adc
pop
fs
mov
push
sbb
das
mov
ins
mov
in
loope
push
aas
or
or
adc
sbb
nop
or
or
es
add
sbb
push
enter
mov
leave
fiadd
or
push
mov
dec
movs
jo
ret
pop
out
xchg
rol
jecxz
pushf
mov
add
pop
js
pop
movs
add
mov
(bad)
xor
or
jb
loopne
jle
dec
sbb
or
pop
loope
xchg
jae
or
in
or
or
xchg
jbe
add
sbb
sbb
call
popf
clc
les
ins
pop
push
daa
loop
adc
imul
mov
nop
add
rcl
mov
cmp
sub
(bad)
mov
inc
and
pop
cdq
test
hlt
ret
xchg
mov
movs
pushf
xchg
pop
pop
repnz
adc
dec
ins
pop
push
sub
mov
jne
ret
xchg
jp
and
test
dec
out
pop
mov
and
inc
add
dec
js
jmp
push
mov
les
sbb
push
imul
or
repnz
outs
jbe
cmp
push
fadd
xor
dec
pop
leave
fcmovbe
mov
gs
es
test
jae
sbb
popa
push
push
jbe
jae
mov
mov
mov
jo
xchg
bound
shr
jnp
sub
sbb
inc
imul
push
xchg
ss
inc
push
pop
xor
repnz
and
add
int3
loopne
push
int
les
call
add
fs
add
xor
dec
(bad)
pushf
ja
in
pusha
add
enter
push
lock
push
jns
push
jnp
sbb
push
or
xor
pop
add
outs
std
or
scas
mov
xor
inc
mov
ins
cmp
lock
jp
pop
shl
xor
ins
bound
mov
imul
dec
into
mov
and
dec
xchg
mov
inc
or
pop
and
shl
loop
xor
sbb
jns
test
jge
pop
rcl
jle
mov
clc
xchg
dec
cli
fisub
and
push
sub
sbb
inc
mov
cli
mov
or
out
iret
mov
xchg
frstor
push
xchg
call
mov
jp
inc
adc
pop
les
fisttp
call
punpckhdq
pop
or
xor
xchg
shufps
mov
xchg
ror
or
out
retf
repnz
call
iret
pop
sar
jp
sub
add
push
adc
jg
scas
dec
jo
push
sbb
mov
push
iret
fcmovb
push
(bad)
and
rcr
and
pop
int3
push
jl
pusha
les
not
inc
pop
pusha
adc
aad
add
add
mul
mov
dec
add
ret
dec
jne
lahf
and
push
dec
addr16
out
loopne
ret
mov
xor
js
sub
loope
or
inc
ret
jne
mov
cmps
cmp
inc
jbe
adc
push
mov
mov
fstp
pusha
arpl
or
in
adc
lock
mov
cmp
jo
or
(bad)
gs
mov
adc
mov
les
ror
pop
sbb
lock
aaa
test
test
in
lock
and
loop
mov
daa
not
add
sbb
fiadd
jne
outs
es
mov
pop
mov
imul
pop
mov
cmp
jne
loop
sub
add
or
or
mov
jns
xlat
mov
sub
and
call
adc
and
jl
and
inc
jne
ins
clc
push
jns
add
sbb
add
pop
and
nop
dec
sub
rcl
adc
jge
enter
pusha
mov
stos
pop
xchg
jecxz
jae
sub
and
add
pop
shl
inc
adc
scas
sub
or
sbb
xchg
mov
mov
jo
aas
ffreep
inc
rcr
sub
inc
fadd
inc
pusha
pop
mov
sbb
inc
imul
add
sub
fisttp
and
lahf
xchg
push
out
xchg
ret
xchg
dec
mov
out
push
fs
push
fmul
xor
pusha
or
inc
push
and
add
ss
fistp
int3
sub
push
or
int
pop
sub
aam
add
mov
adc
cs
das
sbb
lea
cmps
hlt
cmp
dec
je
cld
pusha
stos
aad
repnz
movs
push
in
nop
add
je
scas
mov
jge
add
cmp
and
or
dec
sbb
lahf
sbb
pop
mov
rcl
adc
adc
sub
mov
adc
imul
or
mov
inc
icebp
or
in
jne
ret
adc
(bad)
xor
test
in
xor
add
cmp
jne
mov
xor
retf
mov
mov
sbb
cmp
xchg
cmp
jl
sub
lock
test
test
daa
lahf
fild
pop
popa
add
fld
outs
dec
aaa
in
mov
xor
inc
imul
or
dec
fwait
(bad)
mov
(bad)
pop
sbb
add
ins
or
icebp
sub
mov
dec
mov
inc
xor
xor
mov
pusha
pop
int3
inc
bound
xchg
(bad)
lock
in
cmp
and
fsub
push
or
inc
xlat
cdq
call
loopne
pop
repnz
mov
loopne
in
push
push
popa
stos
fnstenv
jl
adc
mov
loopne
rcl
xor
(bad)
pushf
call
push
stc
push
inc
cmp
test
xchg
scas
cmp
sahf
sub
push
jecxz
movs
(bad)
mov
shl
sbb
inc
popa
in
sbb
cmps
dec
adc
gs
adc
add
jg
call
add
into
mov
mov
sbb
ret
jmp
xor
xor
cmp
add
outs
push
add
add
dec
test
or
dec
and
aam
lea
test
ss
shr
and
cwde
pushf
or
test
adc
test
inc
(bad)
(bad)
inc
aas
ds
sub
in
ds
mov
pop
xchg
addr16
inc
sub
xor
pop
leave
hlt
mov
test
faddp
inc
out
add
add
inc
test
or
ins
fmul
ret
push
or
add
push
sub
push
sub
je
(bad)
rcr
aaa
push
cs
push
xor
rcl
cmps
lock
es
stos
or
cmp
out
test
pop
test
(bad)
shl
js
in
popa
cmps
inc
or
retf
mov
aaa
fmul
inc
movs
add
in
pop
shl
inc
and
pushf
fdivr
cmp
mov
jle
mov
mov
or
sub
and
jmp
sub
mov
cdq
cs
shr
pop
movs
adc
sti
(bad)
int
sub
xchg
mov
lock
sub
rcr
cli
mov
push
and
xor
adc
pusha
outs
push
sub
pusha
sbb
sbb
aaa
enter
sub
mov
sbb
(bad)
movs
jnp
and
sub
or
(bad)
cmp
push
movs
or
mov
pop
jmp
push
push
mov
jnp
(bad)
cmp
xchg
outs
mov
cmp
ret
or
pop
cwde
sbb
test
xchg
mov
cmp
jmp
clc
xor
shl
inc
sar
cld
sbb
(bad)
sub
dec
rcr
adc
jp
pop
push
or
(bad)
xor
jge
xor
(bad)
add
push
xor
push
cmp
icebp
adc
cmp
or
cmps
push
sbb
loopne
add
xor
ror
retf
push
or
movs
fadd
xor
push
adc
pop
cmovge
rol
inc
call
and
sbb
mov
mov
add
cs
mov
push
jg
push
sub
dec
sub
scas
shl
jo
bnd
add
cmp
shr
fs
ret
int3
cmp
push
dec
cs
clc
pusha
pushf
jmp
popa
jl
call
loope
loope
inc
in
ficom
sbb
or
gs
add
outs
jecxz
fild
ins
movs
xor
sbb
xchg
sbb
call
add
inc
test
mov
inc
leave
out
add
ficomp
pop
and
lea
xchg
mov
and
sbb
inc
lahf
or
push
(bad)
and
ret
shr
adc
ror
xlat
mov
jmp
adc
push
xchg
cmp
out
and
aad
pop
mov
dec
scas
xchg
adc
call
cmp
mov
jno
inc
aas
push
sbb
movs
rol
push
arpl
or
pusha
loope
push
and
js
jl
int
xchg
ret
cmp
test
and
scas
pop
jnp
add
clc
inc
fmul
push
ja
mov
stc
add
imul
sbb
(bad)
or
inc
xor
jmp
ror
adc
fbstp
push
ffree
xor
lock
adc
pop
sbb
cmp
fsubr
loopne
mov
sub
mov
dec
aas
jmp
mov
add
pop
scas
add
pop
adc
add
addr16
call
add
lea
inc
pop
(bad)
add
sbb
adc
lea
xor
dec
ss
and
and
or
sub
in
sbb
or
cmp
test
xor
sub
(bad)
rcl
push
pop
sub
cmc
jmp
mov
sar
adc
add
or
cwde
(bad)
imul
movs
dec
sbb
mov
pop
cdq
or
or
clc
add
jge
jmp
inc
mov
push
pop
jle
sub
dec
mov
aas
xor
or
(bad)
sub
adc
out
add
lea
xor
lahf
xor
push
jne
cmp
jae
push
cmps
push
dec
and
rcr
xor
add
rcr
pop
push
pop
lea
stos
icebp
clc
dec
pop
mov
test
adc
cmp
push
pop
dec
(bad)
mov
mov
ja
xchg
dec
or
data16
inc
ins
scas
pop
dec
dec
adc
push
ja
jae
fisubr
mov
jo
sar
or
scas
sub
lods
lea
mov
pop
cs
hlt
pop
cmps
jne
imul
or
adc
out
pop
xchg
sub
cmp
dec
mov
ss
dec
repnz
add
mov
sub
test
jmp
pop
push
mov
pop
add
xor
loopne
dec
ss
xor
cwde
xchg
jae
pop
mov
outs
push
aad
lock
adc
movs
in
out
or
mov
add
xor
pop
arpl
aaa
pop
mov
xchg
mov
adc
adc
mov
mov
adc
fmul
adc
ficom
into
stos
mov
mov
sub
xchg
je
jne
push
push
mov
add
pusha
push
test
pushf
inc
push
fsubrp
push
sub
jmp
test
mov
mov
fcom
push
or
inc
in
call
add
mov
add
sbb
unpckhps
mov
mov
inc
scas
pop
and
pop
les
jle
pop
jle
inc
jo
(bad)
shl
loope
rcl
adc
xlat
das
leave
(bad)
fnsetpm(287
ret
lea
cmps
out
push
push
gs
xchg
mov
stos
and
test
icebp
sbb
rol
pop
add
pop
xchg
pop
xor
pushf
adc
jae
push
and
retf
inc
inc
adc
dec
loope
fdivr
test
mov
jo
jl
and
div
mov
mov
daa
ins
sbb
clc
cmovbe
repz
mov
test
and
xor
cmp
test
mov
sbb
movs
mov
iret
or
mov
sbb
add
or
sbb
and
xchg
push
pop
pop
push
in
loopne
(bad)
fistp
adc
sbb
mov
fsubr
or
add
jecxz
jmp
(bad)
movs
or
add
dec
mov
mov
push
or
mov
scas
dec
jmp
mov
jp
mov
push
or
xchg
cmp
push
sub
test
mov
push
call
xchg
xor
mov
dec
pop
xor
cmp
jmp
js
in
enter
inc
add
sbb
clc
push
data16
and
or
pusha
test
dec
add
pop
pop
push
nop
(bad)
push
or
inc
pop
pop
and
xchg
or
daa
(bad)
pop
out
mov
add
aam
fimul
inc
adc
je
ror
dec
or
rcl
stos
mov
call
in
or
cmp
sub
fimul
fidivr
mov
push
in
inc
adc
ds
in
icebp
test
and
xor
mov
mov
mov
or
pusha
movs
or
mov
push
imul
add
adc
lock
xchg
and
jbe
dec
cmp
cmp
push
cmp
xchg
movups
dec
cmp
pop
inc
jne
jns
mov
(bad)
test
pop
out
in
into
and
lods
mov
mov
les
add
jmp
jbe
mov
sbb
je
scas
shr
hlt
in
inc
int3
mov
je
std
mov
mov
push
push
mov
mov
inc
mov
out
jns
mov
cmps
inc
xchg
int3
sub
inc
and
xor
dec
sub
inc
jb
xchg
inc
lods
pavgb
gs
movs
rol
mov
add
pusha
inc
in
or
dec
xchg
leave
sbb
xchg
fadd
and
sub
jle
or
push
jbe
push
ins
rcl
rcl
pop
dec
and
push
test
mov
add
mov
call
and
mov
or
cmp
enter
in
push
gs
pop
mov
in
mov
fisubr
or
pop
cmp
or
mov
sub
in
pusha
lds
mov
push
or
cs
jo
dec
ror
(bad)
das
xchg
mov
sbb
sub
jle
popf
stc
pop
mov
sbb
or
xchg
test
add
add
push
jmp
sbb
test
pushf
or
jl
inc
jne
xchg
add
push
stos
add
push
fwait
mov
test
popa
or
add
add
cmp
mov
lods
add
pop
and
rcl
xor
sbb
mov
loopne
out
mov
(bad)
push
lds
lock
jo
mov
inc
xor
das
and
fadd
or
jecxz
in
xchg
loop
push
mov
jo
adc
adc
push
sbb
push
jo
xchg
int
movs
xor
mov
lea
fimul
cmp
ja
or
adc
je
nop
lea
push
push
sbb
pop
sbb
in
jmp
loop
ficomp
jbe
inc
adc
add
(bad)
sbb
dec
inc
mov
lods
push
sbb
(bad)
clc
cmps
dec
icebp
push
pop
push
icebp
and
jecxz
test
add
sbb
and
dec
aam
or
adc
pop
cmps
icebp
shl
inc
xor
or
add
cmp
(bad)
sbb
pusha
shl
sar
and
es
fs
movs
adc
inc
xlat
adc
(bad)
inc
js
mov
and
pop
out
adc
rol
jge
and
outs
and
dec
add
call
mov
push
mov
icebp
iret
out
or
inc
push
rol
dec
sbb
xchg
cmp
push
xlat
jle
mov
xchg
(bad)
push
rcl
push
(bad)
jl
inc
mov
loopne
inc
push
push
sub
clc
(bad)
pop
lahf
enter
ins
test
add
shl
add
pop
fsub
mov
(bad)
out
mov
inc
mov
mov
call
movs
ret
movzx
nop
icebp
push
leave
not
adc
or
adc
xor
dec
je
rcl
clc
jmp
xchg
fcom
lock
or
or
push
fild
mov
fs
cmp
inc
jmp
fstp
push
xchg
fs
or
jo
fwait
adc
scas
repz
adc
xor
cli
inc
push
mov
les
lahf
pop
cmp
je
cmp
cmp
sti
push
xor
add
inc
inc
mov
lods
add
rcr
mov
sbb
sbb
push
mov
lea
outs
aam
add
jno
adc
push
or
hlt
hlt
lds
adc
je
inc
push
push
add
dec
pop
ins
mov
(bad)
test
lods
add
mov
jae
jmp
outs
sub
or
dec
rol
sbb
adc
push
push
pop
sbb
dec
mov
aam
icebp
cmp
lock
ins
ds
cmp
cld
add
rcr
imul
mov
sub
lods
adc
pop
or
sub
add
cmps
inc
pop
test
imul
mov
mov
sar
jne
daa
jge
or
inc
je
(bad)
pop
ret
cmps
sub
addr16
or
adc
xor
push
mov
mov
add
cmps
adc
rol
lock
sub
in
daa
xchg
push
retf
je
cmps
dec
loopne
ficomp
and
pop
mov
add
push
push
aad
repnz
jae
or
add
mov
push
sub
into
scas
icebp
cmps
sbb
cmp
dec
sti
rol
xor
div
inc
add
pop
jns
mov
cmp
jo
mov
sbb
sbb
push
dec
inc
mov
cmp
xchg
retf
add
mul
sbb
sbb
inc
retf
iret
mul
or
das
addr16
mov
adc
mov
inc
mov
movs
and
pop
push
fdiv
sbb
pop
popf
push
mov
push
push
or
or
pusha
cmp
inc
out
and
xchg
out
mov
or
sub
inc
mov
sbb
popf
xor
pop
push
cmp
icebp
retf
test
das
sbb
xchg
aad
and
loopne
and
nop
das
push
rol
fs
push
sbb
and
or
xor
pusha
arpl
sub
arpl
push
jmp
imul
sub
xchg
cld
jmp
sbb
les
(bad)
adc
loopne
in
push
mov
fdivr
maskmovq
test
jge
movs
or
sub
js
shr
sbb
inc
adc
fwait
adc
xor
adc
jge
iret
nop
pop
cmp
mov
or
test
(bad)
sub
add
jmp
loop
ror
jmp
mov
inc
loopne
jle
les
mov
lods
pop
add
imul
sub
dec
dec
mov
test
fwait
enter
movs
(bad)
loopne
and
push
cmp
sub
div
push
ins
jae
xor
ins
cmp
pop
jmp
mov
iret
mov
scas
aas
adc
push
loope
aaa
pop
sub
aaa
add
lahf
dec
mov
jo
add
retf
and
sbb
pop
ds
hlt
mov
sbb
mov
not
lock
movs
add
cmp
sbb
jo
pop
mov
and
add
les
xor
mov
dec
aaa
push
dec
add
adc
mov
sub
mov
xor
push
aas
daa
push
mov
add
pop
not
add
into
add
jo
push
sbb
int3
mov
ficomp
enter
shl
test
(bad)
or
daa
inc
push
mov
hlt
add
pop
and
pop
cmps
jno
add
cmp
fild
mov
mov
mov
xor
sub
jne
mov
test
add
stos
ja
mov
lahf
or
and
pop
frstor
dec
dec
cmps
out
and
nop
dec
adc
mov
mov
mov
pushf
adc
jg
sub
stos
push
sub
and
sub
mov
sub
call
test
popa
push
cmp
sets
push
and
sub
retfw
aad
fucomp
push
jmp
push
sti
ins
cmp
cwde
test
pop
sub
rcl
cs
les
test
outs
push
pop
or
push
std
pop
add
fdivr
addr16
sub
loope
mov
sbb
gs
mov
clc
addr16
push
adc
sub
cmp
xchg
dec
cmc
xchg
in
shr
fadd
inc
inc
xor
ins
pusha
jmp
or
enter
sbb
dec
or
inc
cmp
xchg
add
or
das
mov
inc
cmp
ret
inc
push
sar
push
icebp
test
or
and
(bad)
adc
sar
aad
fild
jns
mov
fsubr
hlt
sbb
gs
nop
dec
cmp
or
and
lock
loop
mov
adc
cpuid
jmp
cmp
pop
mov
(bad)
in
jmp
and
stos
cwde
test
push
(bad)
jne
add
in
addr16
(bad)
mov
in
pop
loopne
in
lock
fbld
and
push
mov
daa
inc
fnstsw
sub
or
lds
pusha
and
(bad)
retf
pop
retf
(bad)
in
loope
rcr
loopne
sbb
movs
adc
pop
aam
mov
push
pop
movs
or
stc
push
mov
sbb
add
shl
dec
xor
adc
adc
xchg
iret
and
xchg
xchg
loop
mov
mov
bound
inc
mov
ror
mov
push
xor
mov
das
sbb
leave
ins
adc
jmp
clc
cli
pop
mov
sbb
push
hlt
dec
add
mov
mov
cmp
jg
sub
dec
fisubr
jl
in
inc
test
xchg
hlt
mov
lods
cmp
add
ds
nop
out
xchg
xchg
xchg
scas
inc
ror
popa
or
mov
lods
rol
sbb
pop
push
enter
mov
gs
mov
scas
iret
dec
loope
stos
cld
push
iret
push
push
dec
push
pop
sbb
push
pop
xchg
xor
push
mov
and
ret
(bad)
es
ins
aas
cmps
rol
dec
xchg
hlt
jp
retf
xor
cwde
mov
push
push
fwait
aas
adc
aas
nop
test
inc
jmp
dec
jmp
pusha
dec
or
pusha
jo
sub
data16
xchg
sbb
jne
add
outs
leave
add
xor
xchg
mov
or
scas
cmp
jecxz
gs
push
add
pop
enter
sub
mov
and
je
push
cmp
ins
inc
hlt
iret
mov
outs
ins
xor
ret
scas
mov
sbb
push
jae
in
dec
push
xchg
xchg
xchg
sti
movs
in
add
push
call
adc
neg
sbb
dec
ficom
add
add
cmp
cs
daa
daa
hlt
lock
push
je
and
mov
call
in
loopne
fdivr
cmp
cmp
ror
enter
cmp
sar
mov
test
xchg
mov
cld
sub
cmp
mov
add
cmp
daa
fdivr
lods
add
push
lahf
mov
dec
ret
xchg
mov
fistp
cmp
pop
sub
sbb
in
fsub
ret
pop
mov
sub
add
jbe
adc
lods
je
mov
out
mov
aam
sahf
mov
cmps
(bad)
dec
xor
dec
push
adc
loope
jb
inc
sub
xor
mov
mov
pop
pop
or
jmp
loopne
add
sub
jb
ins
lods
scas
call
dec
adc
adc
jmp
pushf
movs
inc
jl
or
sbb
ss
push
sub
pop
adc
std
adc
push
cmp
add
jge
sbb
xchg
dec
in
ja
mov
int3
sbb
pop
push
sbb
cmp
mov
xchg
add
fadd
dec
jnp
int3
jle
or
push
popa
mov
mov
cmp
jle
push
pop
xchg
jle
mov
mov
push
sub
add
sub
and
pop
sahf
add
and
and
xchg
mov
add
dec
inc
mov
outs
sbb
popa
loopne
pusha
shr
sub
fs
fst
arpl
jmp
push
lock
mov
nop
mov
enter
dec
(bad)
xor
shl
dec
in
cld
and
fs
xor
sub
es
xchg
and
lock
movs
cmp
inc
or
mov
das
adc
push
imul
jne
sub
hlt
in
int3
mov
dec
fsubr
or
sbb
call
jne
push
pusha
cmp
jb
sub
data16
adc
or
sbb
(bad)
pop
call
lea
lea
mov
dec
dec
jb
push
sub
jp
inc
or
rcr
push
out
dec
push
in
push
lock
dec
inc
pop
cmps
xor
xchg
dec
sbb
sbb
stos
inc
jb
mov
iret
sahf
dec
adc
sbb
and
and
and
and
jge
cmps
aaa
mov
cs
pop
push
push
fwait
sub
push
pop
mov
nop
or
xchg
mov
or
jne
jecxz
fld
inc
sbb
dec
gs
pop
ins
loopne
(bad)
push
push
inc
sar
or
fdivr
pop
sbb
stos
das
neg
test
ss
sub
cwde
call
xor
fs
adc
sub
ja
nop
ret
mov
(bad)
xchg
inc
outs
jne
scas
ins
popa
jns
cs
sbb
sbb
aad
pop
sbb
(bad)
mov
stc
loopne
adc
js
in
jl
sbb
mov
in
sbb
mov
mov
icebp
push
push
inc
push
xor
(bad)
call
mov
(bad)
sahf
push
mov
add
mov
das
lea
xchg
jle
mov
prefetchw
push
fidiv
icebp
lea
pop
xchg
cld
mov
pop
rcl
mov
and
jns
cmp
inc
outs
sub
jl
fsubr
fist
xchg
or
push
inc
jmp
sbb
adc
cdq
jge
shl
push
imul
test
in
dec
ja
dec
dec
jmp
icebp
js
fs
sahf
xor
xor
call
adc
popa
fwait
dec
cmps
lods
fidivr
add
in
inc
in
or
sti
add
inc
sbb
bound
mov
inc
inc
dec
adc
aad
xor
ror
adc
add
mov
les
test
pusha
(bad)
mov
pop
push
adc
sti
add
cmp
aaa
jns
fcom
push
add
leave
xchg
mov
aam
and
mov
mov
dec
loope
enter
lods
jns
daa
call
std
sar
rcr
loope
mov
iret
dec
pop
movhps
daa
adc
or
(bad)
jmp
push
cs
aaa
pop
sti
in
outs
sub
sbb
sbb
into
add
add
es
push
sbb
cld
mov
mov
sbb
push
fst
sahf
das
adc
adc
movs
jae
fisttp
and
mov
es
or
inc
in
sub
sub
mov
mov
mov
inc
push
inc
inc
mov
fsub
nop
(bad)
movs
or
movs
fcom
test
sti
outs
adc
psrlw
mov
sbb
mov
or
lea
cmps
and
dec
mov
adc
xor
and
push
cmps
jnp
mov
dec
mov
pop
xchg
iret
es
mov
dec
outs
cmp
test
test
sahf
add
mov
sbb
mov
not
mov
rcl
xlat
pop
pop
dec
xor
hlt
hlt
pusha
xchg
dec
and
jmp
rcl
push
ss
sub
stc
test
ffree
lds
sub
push
lds
xchg
adc
xchg
sbb
push
push
inc
jle
cmp
jg
pop
and
prefetcht0
and
mov
(bad)
xchg
sub
inc
pop
inc
jmp
shl
pop
adc
mul
outs
(bad)
add
xor
add
or
sbb
fcom
xor
mov
or
mov
stc
pusha
rcl
lods
lods
shr
jbe
dec
pop
and
sub
loopne
je
push
sbb
jno
into
jmp
cmp
hlt
jne
jnp
pop
gs
jle
adc
hlt
add
and
sbb
mov
enter
cdq
cmp
dec
push
cld
shr
loope
je
and
xchg
pop
loopne
outs
outs
sbb
loop
inc
sub
pop
pop
xchg
add
add
or
fild
and
(bad)
rcl
dec
les
mov
jne
mov
sbb
pop
(bad)
mov
inc
repz
inc
push
xor
xchg
pop
add
and
test
jge
push
push
or
lock
aam
inc
hlt
push
sbb
daa
sbb
(bad)
(bad)
das
fld
add
rol
mov
(bad)
lock
jne
les
dec
dec
lock
fst
mov
or
js
sbb
mov
clc
mov
mov
cmp
push
jp
add
inc
pop
fmul
push
inc
pushf
sub
call
inc
mov
xor
test
sub
sbb
push
mov
add
in
pop
push
sub
mov
loopne
sub
push
and
aam
jno
mov
(bad)
das
fadd
sar
mov
leave
cmp
sbb
scas
xor
les
xchg
hlt
lea
lea
jp
sbb
leave
sbb
outs
lock
cmp
push
inc
(bad)
mov
jae
jmp
mov
add
cs
fistp
sub
movs
mov
xor
nop
add
sbb
add
lock
das
lds
adc
dec
mov
test
jecxz
or
sbb
mov
sbb
jmp
inc
inc
test
xchg
lock
lock
imul
inc
call
call
ret
jmp
cld
loopne
in
ss
or
dec
lock
call
xor
push
outs
sub
xor
shl
inc
xchg
and
mov
pop
jns
scas
xor
(bad)
fcmovb
pop
sub
xor
sbb
in
lock
add
and
nop
cmp
out
inc
pop
pop
clc
movs
les
pusha
test
or
inc
sti
jmp
xchg
and
out
add
aad
out
cmps
add
push
clc
movs
inc
mov
cld
inc
in
jle
dec
sub
enter
push
mov
es
sbb
xchg
jae
bsr
sbb
arpl
push
inc
pop
leave
mov
mov
dec
(bad)
adc
pop
dec
cmps
inc
ins
loope
mov
ret
mov
pop
lods
imul
out
mov
pop
adc
xor
cmp
jne
sbb
(bad)
loope
adc
enter
adc
sbb
mov
dec
sbb
inc
pop
cld
scas
or
jle
inc
arpl
adc
dec
inc
sub
(bad)
iret
int3
fcomp
xchg
inc
jne
in
sub
js
or
sub
scas
sbb
sbb
adc
and
fisttp
pop
enter
enter
mov
out
out
mov
and
inc
push
jb
outs
ins
sub
dec
pop
iret
shr
rcl
stos
int
pop
bound
sbb
shl
cmp
fimul
push
and
inc
adc
retf
adc
add
dec
sub
data16
pop
jae
sub
mov
mov
sub
icebp
cmp
loopne
dec
pop
(bad)
pushf
xor
dec
out
xchg
xor
or
loope
mov
add
shr
in
mov
mov
xor
lods
and
mov
pop
push
add
daa
stos
out
add
add
add
or
and
pop
inc
gs
arpl
out
mov
hlt
adc
outs
push
sub
push
inc
stc
not
icebp
(bad)
retf
inc
shl
inc
or
push
outs
xor
imul
adc
clc
or
inc
push
add
aaa
adc
add
push
pop
push
sbb
int3
mov
lock
push
mov
or
pop
leave
adc
add
adc
or
dec
jl
add
pcmpgtw
into
pop
fstp
int
or
shr
es
cmp
add
scas
dec
jmp
pop
aaa
scas
or
fild
inc
das
and
cmc
ja
cli
mov
sub
(bad)
sti
inc
mov
cmp
cdq
cwde
sub
xchg
inc
mov
les
rcl
mov
ror
jne
aas
jae
cmp
je
inc
and
and
sbb
and
js
and
mov
idiv
jle
repz
sbb
or
enter
les
lahf
sub
add
push
pop
cmc
pushf
xchg
xor
aad
xor
mov
mov
xchg
iret
icebp
mov
out
adc
sbb
retf
xchg
dec
js
test
dec
sub
or
jmp
aas
scas
movs
add
push
in
mov
sti
and
das
cmp
jle
or
lock
and
mov
mov
outs
scas
or
push
push
pop
fwait
sub
test
and
and
or
sbb
xchg
aam
adc
push
jl
hlt
pop
push
mov
sbb
lods
pop
or
and
xor
add
aas
push
mov
lods
add
sar
mov
xor
jmp
ror
in
enter
iret
fild
js
lahf
retf
cmps
push
and
das
pusha
fcom
xchg
mov
or
js
push
test
sub
add
adc
and
jo
gs
js
push
sub
pop
pusha
test
xchg
push
add
adc
lahf
fstp
lock
aaa
pop
inc
cmp
or
cmp
add
nop
addr16
inc
mov
xor
addr16
mov
inc
push
test
(bad)
xor
push
mov
sahf
add
and
cmp
sub
imul
dec
cmp
ror
lods
aam
jecxz
jne
sbb
xor
ja
mov
add
pop
loope
cmps
push
sub
mov
mov
enter
and
xchg
adc
and
sub
pushf
cmp
xchg
mov
push
test
daa
push
xchg
ds
lock
aad
sbb
mov
xchg
shl
mov
inc
sbb
or
jnp
dec
loopne
jne
loopne
jne
mov
test
mov
inc
cmp
xchg
mov
xchg
sub
mov
lea
shr
fnstsw
test
push
int3
push
inc
dec
mov
cmp
into
xchg
cdq
jmp
lock
and
fmul
out
or
jle
outs
sbb
add
xor
pop
pushf
push
inc
jle
xchg
cmovge
fnstcw
push
push
push
pop
or
pop
xor
pop
test
cmps
and
push
loope
cmp
cmp
(bad)
jmp
inc
add
cwde
mov
inc
retf
ins
and
mov
rcl
mov
mov
or
xchg
aaa
xor
mov
loope
cmove
lds
ret
inc
out
rcl
inc
sbb
cmc
ds
and
out
outs
mov
pop
adc
xchg
lods
sub
mov
add
or
add
or
fnstcw
icebp
or
movzx
push
mov
cmc
movs
shl
sar
pop
xchg
sub
xchg
iret
int3
rol
mov
mov
(bad)
fwait
mov
in
movs
jne
dec
pop
ret
mov
push
je
cmps
mov
js
cmp
inc
and
mov
add
pop
adc
xlat
mov
mov
outs
jo
add
call
fwait
imul
retf
cmps
xchg
shl
and
mov
adc
adc
movs
movs
leave
and
out
aam
test
mov
retf
shl
loop
xchg
adc
dec
xor
js
push
xlat
addr16
inc
jb
and
or
daa
mov
adc
je
mov
jns
sub
push
mov
aad
pusha
and
dec
pop
aaa
(bad)
xchg
ret
xchg
adc
or
in
(bad)
and
and
jp
jne
add
and
clc
jp
sub
jnp
and
sahf
into
jo
pop
adc
fcom
cdq
rcl
out
inc
cmps
out
mov
jbe
sub
pop
push
clc
jmp
push
push
push
test
xor
lock
sbb
sub
adc
or
stos
imul
das
sub
enter
dec
pop
mov
jbe
mov
push
(bad)
imul
iret
fadd
outs
fs
push
push
test
jmp
iret
nop
xchg
(bad)
rol
lea
push
icebp
das
fist
pop
pop
rcl
add
lods
add
cmp
sbb
(bad)
adc
in
inc
in
lea
inc
mov
not
pavgw
js
cmp
pop
pop
loop
push
mov
out
ret
daa
xchg
fmul
push
fdivr
out
pushf
fsubr
sub
push
push
(bad)
int3
js
xchg
inc
das
sbb
test
fwait
mov
adc
out
sub
jl
dec
jl
xchg
ror
push
lods
mov
or
cmps
push
dec
sub
mov
je
js
or
push
cmc
mul
mov
xchg
mov
add
push
or
add
nop
retf
pop
xor
test
jo
xor
nop
add
pusha
cmp
cmp
fs
add
cmp
rcr
retf
stos
iret
fsubr
inc
adc
inc
scas
push
inc
daa
and
cdq
push
sub
pop
pop
jb
icebp
aam
das
nop
fwait
jnp
push
das
push
inc
outs
or
or
and
mov
cmp
pop
push
xor
fld
push
rol
mov
movs
xor
jg
pop
or
push
fistp
and
jo
sbb
adc
out
pop
push
pusha
mov
out
ja
add
xchg
push
cwde
push
push
push
xchg
xchg
ficom
cmp
(bad)
mov
nop
js
sbb
out
and
xchg
enter
or
push
sbb
sbb
adc
imul
jmp
addr16
sbb
mov
lock
aam
adc
dec
and
shl
pop
pushf
pop
xchg
push
sub
fist
frstor
pusha
fld
test
and
sbb
fisttp
xor
rcr
dec
mov
aaa
mov
pop
mov
lahf
xor
nop
sbb
sbb
xchg
cwde
pushf
inc
inc
inc
inc
mov
inc
inc
inc
mov
mov
inc
rol
int3
inc
inc
inc
inc
rcl
fcomp
inc
inc
inc
inc
loopne
call
inc
lock
clc
cld
inc
inc
cs
add
add
or
inc
inc
inc
adc
sbb
inc
inc
inc
and
sub
inc
inc
inc
xor
cmp
jno
inc
inc
sbb
sub
ins
mov
push
sub
jg
out
(bad)
jo
and
arpl
jo
adc
lock
cmp
mov
cld
call
push
je
or
mov
inc
sub
xor
inc
cwde
sub
push
cmp
gs
movs
mov
pushf
lods
mov
mov
mov
sbb
mov
add
shr
nop
retf
enter
sub
int3
pop
rol
test
js
xor
xchg
fmul
push
loopne
in
push
sbb
dec
gs
sub
lock
sub
in
sbb
dec
gs
cld
xor
inc
fimul
and
pop
xchg
add
js
movs
xor
adc
pushf
sbb
mov
gs
and
sub
xchg
lods
add
sub
test
xor
xor
xchg
add
fs
fwait
push
movs
add
inc
jmp
bound
inc
cld
inc
fcom
ss
je
gs
gs
push
push
sbb
inc
ins
outs
jae
and
sbb
dec
daa
and
xor
adc
das
ret
mov
cli
aas
and
sbb
cmc
and
fiadd
daa
test
aam
sbb
jbe
mov
addr16
xchg
gs
js
mov
scas
bound
rcr
dec
arpl
jae
xlat
popa
inc
lods
jle
daa
mul
or
jns
jp
adc
jo
inc
outs
sub
pop
pop
pop
nop
jbe
and
pop
adc
xchg
adc
pop
scas
mov
or
pusha
in
test
addr16
pop
mov
or
jae
xchg
xor
outs
adc
dec
outs
add
pop
sbb
cmp
mov
popa
and
stos
in
jbe
cwde
and
das
fstp
jbe
jbe
in
pop
xchg
pop
or
(bad)
and
ja
lahf
sbb
ds
mov
jns
jae
mov
jne
ins
outs
das
aaa
(bad)
sub
fs
inc
imul
enter
and
and
ins
mov
popa
jo
jno
xchg
adc
inc
pop
push
xchg
pop
inc
cmp
and
repz
cmp
adc
or
cmp
push
and
add
out
lahf
add
cmc
inc
jne
cmc
(bad)
jmp
xchg
push
add
jg
add
fisub
aad
out
mov
adc
sub
push
mov
int3
cwde
mov
mov
xchg
fwait
shr
dec
push
in
mov
(bad)
sub
(bad)
push
in
fistp
mov
dec
pop
outs
or
fs
adc
pusha
or
and
xchg
or
xchg
fs
and
and
mov
mov
ins
in
jo
jb
add
jo
and
fs
jmp
jbe
xor
fnstcw
aaa
rcr
data16
pop
(bad)
fs
add
enter
aaa
adc
nop
inc
jmp
mov
sbb
pop
or
jae
loop
add
sbb
call
ss
add
push
add
jge
dec
add
les
or
xchg
ss
sub
sahf
inc
fld
or
mov
pop
mov
in
sub
add
fs
cmp
cmp
js
sub
or
iret
fwait
or
ror
sar
loope
cmp
push
and
lods
push
inc
aas
inc
sub
inc
xor
push
mov
and
mov
pop
pop
adc
inc
hlt
jbe
pop
sub
les
inc
mov
push
adc
adc
pop
mov
cmp
adc
das
adc
ret
loope
mov
ret
cmp
ins
dec
cmp
xor
mov
clc
adc
add
xor
or
add
stos
sub
stos
jmp
inc
dec
inc
sbb
daa
inc
dec
loope
stos
push
fwait
cld
pop
and
or
or
or
add
lods
xor
pop
imul
aas
xor
bound
add
push
ins
ins
and
dec
call
inc
lock
jnp
push
ins
add
lods
dec
mov
mov
push
call
cwde
or
loope
leave
inc
gs
adc
(bad)
fdivr
pop
add
shl
adc
add
out
dec
sbb
adc
(bad)
loopne
sbb
inc
ror
scas
or
imul
and
xor
pop
int3
call
dec
inc
mov
inc
inc
cmp
movs
push
push
xor
sbb
popa
adc
xchg
(bad)
mov
mov
pop
add
xor
dec
dec
or
xchg
sub
cdq
fdivr
pop
lock
inc
and
mov
xor
pop
push
cld
in
push
xor
add
cmp
adc
fwait
out
fwait
scas
push
push
push
pop
cmp
in
or
mov
mov
pop
sub
dec
xchg
push
fnstenv
sahf
inc
test
push
les
pop
popf
mov
push
mov
push
pushf
xchg
inc
sub
push
lods
mov
push
pusha
stos
push
and
cmps
into
push
xor
cdq
div
mov
push
aam
xor
push
ss
inc
ss
push
scas
push
push
cmps
cmp
add
and
fs
adc
int
fisub
pusha
xchg
out
push
xor
mov
int
fldcw
cmp
mov
jns
shr
xor
je
pop
int3
dec
test
sub
or
jae
sar
lods
push
ds
sub
mov
or
mov
pop
xor
mov
lods
out
das
rol
and
inc
push
mov
loope
sbb
push
or
fmul
sub
inc
push
add
sbb
xchg
jmp
push
scas
add
daa
scas
mov
adc
icebp
pop
mov
inc
fdiv
retf
fdivr
xchg
iret
out
loopne
ins
bound
inc
bound
cmp
mov
int3
cmp
add
lock
adc
retf
push
xchg
or
loopne
or
and
stos
lock
imul
clc
mov
pop
mov
adc
popf
mov
add
out
mov
pushf
sbb
sub
aaa
scas
dec
xchg
add
je
hlt
add
fistp
popa
je
rcl
cmp
xchg
adc
add
adc
jg
mov
add
in
sbb
cmp
enter
xor
fsubr
addr16
cmp
shr
loopne
das
or
mov
pop
or
push
inc
cmp
xchg
pop
push
add
sub
adc
(bad)
std
mov
daa
out
call
push
or
movs
mov
test
inc
sub
scas
movs
loopne
fsub
cmp
push
cld
push
iret
in
ja
rcr
add
fs
fcomp
fs
es
pushf
jl
data16
or
or
push
adc
shl
xor
fcomp
mov
mov
rol
enter
shl
mov
es
fsubr
dec
or
xchg
xlat
mov
ret
das
shl
in
xchg
or
mov
sbb
fs
sub
push
(bad)
outs
loope
mov
add
test
add
pop
mov
(bad)
dec
outs
add
dec
dec
inc
mov
and
pop
or
fcmovb
push
xor
push
pop
dec
outs
inc
gs
popf
push
rol
inc
push
mov
mov
pop
or
and
out
mov
pop
dec
rol
not
pushf
push
or
xchg
test
sbb
push
sbb
stc
or
ror
mov
in
fidiv
mov
(bad)
(bad)
cmps
adc
push
call
xor
out
test
fistp
sub
mov
add
mov
adc
add
adc
push
pop
cs
xchg
mov
lock
pop
in
xor
or
push
sbb
dec
fdiv
xor
(bad)
fstp
test
pop
cmp
dec
clc
aam
xlat
inc
stc
jae
cmp
inc
mov
and
mov
xchg
adc
ret
push
cld
test
popf
pushf
dec
mov
jg
ss
imul
adc
shl
jle
or
jbe
and
rcr
sti
or
leave
pop
jo
or
aam
sbb
ds
adc
jl
ja
je
clc
cmovb
inc
rcl
pop
push
push
movs
dec
push
adc
and
clc
or
add
sti
mov
jbe
jne
shr
add
and
add
mov
or
shl
xchg
pusha
stos
xchg
cmp
loop
in
ror
add
mov
xor
pop
fadd
dec
imul
add
xchg
jo
add
pushf
inc
push
lock
jo
das
dec
imul
int3
add
add
cs
mov
jo
retf
push
jns
sar
sub
xchg
cmp
dec
pop
push
mov
je
push
pushf
daa
jo
fild
ret
dec
call
inc
xchg
add
xchg
pop
stc
or
pop
xchg
dec
cld
(bad)
xchg
loope
les
dec
mov
fiadd
mov
adc
call
sub
push
and
or
pop
call
cmp
xchg
xlat
mov
out
jo
cmc
add
sbb
mov
mov
adc
push
pop
rcl
inc
js
mov
mov
pop
push
jo
cmps
inc
xlat
mov
mov
push
mov
js
ja
add
pop
int3
cmp
sub
push
push
mov
push
pop
lods
push
aaa
push
sub
pop
sbb
xor
adc
ret
add
adc
add
add
mov
pop
add
ret
jp
mov
ret
sbb
jmp
cli
or
xchg
sub
cmps
mov
adc
mov
adc
nop
clc
sbb
mov
mov
cmp
ret
jne
pushf
cmp
pusha
movs
jmp
cli
adc
in
aam
lods
or
add
mov
push
xor
inc
je
jns
mov
xor
and
pushf
mov
adc
sub
das
jle
enter
nop
mov
add
adc
dec
add
mov
dec
adc
lods
jecxz
push
or
push
retf
(bad)
test
push
xchg
adc
or
std
sbb
xor
mov
mov
cwde
add
cli
cmc
aam
mov
push
add
mov
cmc
cmp
mov
test
sbb
pop
cmp
fstp
ds
add
aas
fmul
pushf
or
mov
xlat
sub
mov
sbb
pop
dec
leave
inc
ret
sahf
cmp
ficom
movs
data16
ret
mov
pop
push
cmps
inc
jo
jle
int3
xor
sbb
add
add
(bad)
sub
mov
sub
retf
mov
loopne
cmp
(bad)
xchg
rcr
fbld
push
mov
cmps
js
test
ins
fs
addr16
push
push
int3
ror
push
push
std
or
sub
push
adc
arpl
jb
cmp
jp
rol
enter
add
sub
jns
les
mov
mov
in
in
mov
ja
pop
mov
or
lods
mov
test
inc
ds
in
movs
xlat
jae
addps
mov
pop
push
push
mov
lahf
xchg
enter
push
mov
js
adc
cmp
push
aas
mov
mov
sbb
inc
shl
xchg
jp
push
jl
jae
mov
rcl
mov
arpl
adc
pushf
adc
aam
popw
sub
ror
inc
std
pop
and
xor
nop
xchg
jp
outs
inc
pop
loopne
inc
movs
inc
stos
js
cmovae
retf
push
mov
imul
or
aas
cwde
push
pop
push
mov
(bad)
adc
sbb
inc
mov
je
jle
loopne
inc
mov
adc
lods
inc
int
fiadd
dec
mov
push
adc
mov
call
xlat
inc
jmp
add
push
xor
adc
push
push
aaa
imul
or
cwde
jo
sub
movs
mov
jl
in
jae
rcl
loopne
inc
mov
add
outs
cld
pop
ds
and
mov
jo
sub
inc
int3
mov
xchg
lock
add
push
test
or
push
fst
repz
jns
ins
ss
add
rol
cmp
je
iret
adc
or
ins
xor
push
jp
test
hlt
push
or
add
call
push
pop
pusha
fwait
pop
lahf
cmp
adc
rcr
or
push
adc
or
push
cmp
push
or
(bad)
cmps
xor
adc
fnstsw
pop
or
ss
iret
adc
dec
xor
scas
retf
inc
cmc
retf
ins
pop
pop
call
xchg
dec
outs
jge
pushw
xchg
or
or
pop
out
push
test
inc
jbe
adc
inc
aas
and
jle
lahf
inc
add
stos
pop
add
push
outs
repz
jecxz
jne
scas
fidivr
push
pop
enter
pop
adc
int3
dec
or
pop
scas
cdq
xchg
sbb
in
sbb
je
xor
pop
xchg
js
nop
add
sbb
cmp
adc
inc
lods
stos
add
test
je
jo
jp
aam
in
sahf
dec
pop
jo
push
push
inc
imul
push
pop
or
xor
or
out
cmp
repz
mov
push
adc
sub
sub
or
(bad)
shr
fwait
dec
pop
push
and
dec
mov
push
retf
and
xchg
les
lock
pop
repnz
fnstsw
hlt
hlt
xchg
or
pop
add
dec
pop
push
nop
cmps
mov
fiadd
sbb
test
fcom
shr
mov
ret
and
inc
fldcw
in
aaa
xchg
ja
fmul
fsub
or
xchg
loopne
(bad)
aas
ja
dec
fisttp
jo
sbb
xchg
and
jo
mov
adc
dec
cmp
push
(bad)
nop
cmps
ins
pusha
cmp
or
and
sub
or
outs
add
sub
mov
push
push
inc
or
adc
daa
(bad)
mov
push
xchg
sub
cmp
or
fdivr
das
pop
shl
mov
fdiv
hlt
adc
jns
xchg
inc
xor
adc
dec
adc
int
sbb
jo
cmp
cmp
cld
imul
daa
cmp
ret
div
and
loopne
jo
add
sub
inc
out
inc
out
and
in
test
mov
add
out
xchg
sbb
xor
aaa
and
push
out
add
adc
in
inc
out
add
enter
loopne
fucomi
add
push
push
in
jecxz
out
js
xor
mov
mov
shr
shr
adc
in
sbb
fwait
dec
out
add
mov
mov
mov
mov
mov
call
ins
cmp
mov
mov
add
or
push
sar
jbe
gs
into
xchg
sub
adc
jno
or
mov
test
add
sahf
je
mul
ds
sub
imul
xor
inc
push
sbb
add
cld
and
ror
xchg
ins
push
jo
les
cdq
(bad)
push
xor
retf
xlat
jo
shl
or
movs
or
jbe
push
outs
out
mov
sbb
mov
imul
lods
cmovno
pop
adc
js
call
in
inc
lock
dec
ja
nop
out
popaw
je
sbb
sti
add
mov
and
repnz
add
sbb
in
mul
inc
int3
stos
push
inc
xchg
cld
enter
inc
loope
inc
bound
push
push
cwde
ins
mov
jge
push
les
adc
pop
mov
push
fs
dec
sbb
repz
push
cmps
push
inc
push
(bad)
lock
add
push
arpl
int
xor
jo
movs
inc
ret
dec
(bad)
ror
push
jb
popf
sbb
push
and
cmp
bound
or
mov
xchg
push
pop
cmp
push
adc
popa
cmp
loop
dec
call
jmp
inc
loopne
imul
mov
pop
jmp
and
push
dec
retf
pusha
repnz
cmp
lahf
dec
push
and
adc
push
mov
sub
pop
pop
adc
(bad)
clc
mov
shl
push
std
jno
push
mov
jo
and
and
pop
xchg
clc
stos
and
fs
retf
cdq
mov
in
inc
inc
pop
sub
cmp
cmp
mov
mov
jns
adc
int3
je
outs
or
mov
enter
sub
bound
into
adc
pop
xchg
xchg
jp
sbb
cs
mov
enter
and
lock
aad
xor
inc
push
lahf
test
xor
push
mov
mov
adc
iret
cmp
dec
mov
(bad)
or
pop
and
xor
ss
pop
enter
rol
jns
and
repz
fiadd
enter
or
cld
inc
js
add
pop
enter
inc
sar
add
pop
sub
add
lea
cmp
add
cmp
mov
in
jno
fdivrp
ds
sbb
out
(bad)
repz
add
xchg
lock
mov
dec
mov
adc
mov
rcr
cli
jns
aad
das
push
add
inc
or
fwait
aam
mov
daa
pop
mov
inc
js
scas
fcom
imul
pop
ss
sub
addr16
jnp
outs
add
loopne
or
ds
cmp
fcom
call
and
int
ret
das
mov
sub
jne
push
mov
or
sahf
jle
dec
push
sub
sbb
ret
mov
cmp
out
inc
inc
or
std
cmps
retf
mov
ja
je
or
call
pop
sti
push
lods
sub
mov
data16
dec
add
inc
adc
outs
adc
leave
test
mov
and
xchg
test
test
mov
cmp
cmc
mov
mov
and
mov
test
dec
and
test
shr
cmp
and
or
mov
inc
and
fcomp
sbb
inc
and
mov
adc
gs
imul
jge
mov
xor
jg
cmp
mov
inc
xchg
lods
jp
jbe
fld
inc
jb
adc
jp
inc
stos
adc
pop
adc
adc
stc
(bad)
fwait
rcr
push
sub
je
ret
(bad)
dec
sub
inc
mov
push
add
imul
lock
sub
jle
xchg
or
(bad)
jmp
and
cmp
rep
or
add
stc
add
sbb
sbb
nop
sbb
pop
jp
cmp
out
icebp
push
pusha
or
xchg
(bad)
ret
add
xor
adc
clc
push
jmp
into
out
xor
das
sbb
cmp
and
push
mov
xchg
in
clc
pop
adc
daa
nop
jge
dec
add
js
xor
fucomip
mov
mov
sub
je
mov
pop
xlat
jecxz
shl
sbb
mov
clc
cmps
(bad)
push
jns
inc
sbb
dec
xor
out
jle
cmp
imul
(bad)
aam
fadd
or
mov
lods
adc
add
and
cmp
push
and
jl
cmp
jmp
out
and
dec
jecxz
fdiv
pop
mov
push
adc
sub
sbb
(bad)
pop
mov
std
test
mov
cmps
ja
push
push
push
sbb
cdq
mov
jo
daa
rcr
std
sub
mov
mov
push
cmp
and
rol
pop
xchg
cmp
ins
mov
js
or
imul
xor
xchg
jge
test
and
cmp
push
lods
ret
jbe
sbb
in
sub
push
xor
or
pop
xchg
ret
mov
xor
and
dec
adc
dec
jne
loop
dec
jbe
in
or
rol
sar
xor
inc
sub
cmp
ins
loopne
es
jg
push
mov
dec
jl
adc
jl
mov
cmps
add
or
jmp
cwde
scas
mov
sbb
les
jae
sbb
push
pop
push
not
jl
pop
jmp
cli
rcl
div
inc
mov
aaa
ins
xlat
mov
pop
ds
std
out
mov
out
add
sub
jae
push
mov
xor
push
pop
lock
adc
daa
(bad)
movs
test
inc
add
push
push
mov
call
jle
nop
xchg
test
arpl
call
aaa
dec
idiv
xor
aas
add
xor
jne
popa
ret
xor
sbb
dec
push
in
cmp
js
movs
inc
sbb
pop
xchg
dec
fmul
out
loopne
fidiv
outs
jae
push
inc
dec
hlt
push
inc
pop
mov
jo
jge
shl
fs
inc
gs
js
and
shr
and
cmp
or
or
and
pop
mov
push
mov
inc
push
xor
push
iret
dec
sub
sqrtps
les
clc
push
and
mov
(bad)
xchg
or
je
scas
inc
jo
mov
and
cmp
and
mov
mov
sub
das
(bad)
mov
add
pop
out
mov
test
jle
adc
sbb
jle
push
nop
jnp
rcl
or
add
loopne
test
fiadd
xchg
in
or
mov
ror
pop
and
movs
pop
adc
push
rol
(bad)
in
test
jg
or
cld
add
jge
jg
stc
pushf
(bad)
mov
iret
cmp
adc
pop
arpl
fs
fcom
ins
and
mov
aad
pop
in
outs
loope
inc
(bad)
test
adc
push
mov
loope
into
or
out
xor
mov
sbb
xor
(bad)
rcl
aas
dec
inc
sbb
dec
fist
cmp
and
loop
pushw
fisubr
(bad)
cmp
mov
loopne
int
push
adc
push
nop
dec
xor
cld
hlt
xlat
and
mov
push
cwde
mov
push
push
aas
and
cdq
jne
sbb
or
adc
adc
inc
clc
jne
sbb
sub
xor
adc
jb
cld
or
and
pop
xchg
(bad)
mov
sbb
dec
(bad)
je
mov
sbb
in
jo
rcl
sub
xchg
sbb
xor
jbe
mov
push
or
sub
aas
dec
adc
push
or
cmp
pop
mov
push
into
daa
fcom
daa
mov
test
mov
int
inc
add
ror
imul
and
push
add
call
add
mov
cmp
sub
bound
loop
adc
add
push
push
sbb
retf
mov
xchg
out
ds
jecxz
mov
daa
inc
int3
test
scas
nop
(bad)
nop
adc
cmp
pushf
mov
cld
jmp
sbb
bound
xor
neg
and
fidivr
call
pop
sbb
pop
xchg
mov
and
push
jecxz
push
cmp
mov
adc
inc
jns
dec
xchg
inc
out
lea
lea
movs
or
jno
adc
iret
rep
repnz
push
jne
and
add
lods
test
retf
dec
add
test
aaa
lock
jmp
or
mov
xor
(bad)
dec
inc
sbb
fild
xor
xchg
test
dec
arpl
cmps
xor
test
xor
in
scas
cmp
and
xchg
mov
or
sub
xchg
push
push
mov
pop
ret
sub
pusha
aam
dec
repz
int
aas
out
popa
mov
xchg
mov
cmc
jne
rol
mov
pop
ins
mov
nop
retf
sbb
inc
push
or
push
out
or
pop
push
loop
jp
rol
out
cmp
dec
adc
cmp
cmp
push
pop
sbb
cmp
cmp
sbb
sbb
cmp
cmp
push
pop
add
cmp
cmp
add
add
cmp
cmp
push
pop
or
cmp
cmp
or
or
mov
cmp
(bad)
(bad)
icebp
pushf
pushf
pushf
pushf
repnz
cmc
pushf
pushf
pushf
pushf
div
clc
stc
pushf
pushf
pushf
pushf
cli
sti
cld
std
pushf
pushf
pushf
pushf
(bad)
jmp
loope
data16
das
scas
or
inc
cmp
repz
pop
push
repz
dec
pop
inc
push
iret
repz
cmp
xor
sub
cmp
repz
xor
adc
cmp
repz
add
out
sahf
out
sbb
iret
repz
clc
leave
in
fsubr
aam
iret
repz
int3
fadd
shl
cmp
repz
iret
repz
mov
xchg
cmp
repz
mov
iret
repz
je
ins
iret
repz
js
jo
push
cmp
dec
pop
inc
push
repz
repz
xor
sub
repz
cmp
sbb
adc
iret
repz
or
add
jns
loope
cld
and
or
mov
mov
call
pop
push
clc
push
fbld
mov
fcom
xor
add
dec
jp
cmps
pop
loop
pmulhuw
out
pushf
pushf
pushf
pushf
jmp
cs
adc
in
jno
push
cmps
mov
outs
mov
sbb
rcl
xchg
jbe
push
xchg
hlt
add
mov
adc
dec
mov
jbe
push
js
in
iret
pop
cs
and
addr16
push
lods
rol
cmps
add
enter
add
inc
cld
mov
sbb
inc
hlt
adc
or
pop
inc
mov
ret
pop
xchg
jb
xor
push
add
lahf
xor
and
cmp
les
mov
jne
je
dec
popa
jns
inc
dec
or
inc
ins
mov
push
cmp
or
aam
inc
push
mov
lods
push
fmul
ins
pop
xchg
jae
shl
inc
mov
movs
xor
jae
nop
sbb
dec
mov
imul
gs
push
out
neg
dec
jne
lds
test
pop
aaa
or
mov
jmp
ret
mov
bound
fsubr
jecxz
add
dec
dec
sbb
push
adc
ins
gs
into
imul
mov
sahf
push
pushf
xchg
jno
or
sti
fs
sbb
jmp
call
mov
imul
fiadd
xor
push
add
add
or
mov
sub
jl
aam
je
mov
je
xor
xchg
push
call
aaa
jmp
out
mov
mov
add
sub
mov
and
out
call
(bad)
jmp
cmp
push
cmp
push
mov
cmp
mov
jp
mov
mov
sbb
imul
sbb
push
jl
sar
xchg
popa
dec
add
or
push
jg
test
outs
inc
inc
sub
in
or
xchg
mov
pop
clc
dec
adc
push
inc
push
movs
add
in
cvttps2pi
cmovae
and
adc
sbb
dec
rcl
mov
popa
movs
and
cvtps2pd
adc
sub
popf
sahf
call
and
xor
mov
and
inc
cmp
xor
cmp
sbb
sub
pop
xor
sar
inc
cmp
mov
cwde
popa
jnp
mov
call
push
xor
xor
enter
sbb
pusha
enter
sbb
jo
sbb
xor
aas
push
cmps
rcl
jae
(bad)
pusha
and
aaa
or
sub
or
or
repz
stos
sbb
pop
xor
xchg
daa
sub
dec
dec
outs
mov
inc
inc
dec
inc
inc
dec
pop
dec
adc
pop
inc
push
pop
sub
test
dec
loop
iret
mov
push
push
push
push
inc
push
push
pop
dec
inc
inc
push
pop
mov
inc
dec
mov
sub
add
push
jg
cmp
int3
mov
jne
push
clc
inc
rcr
sub
adc
test
mov
dec
cld
test
movs
dec
rcr
mov
mov
dec
push
and
std
jae
sbb
pop
mov
mov
adc
sub
adc
aam
ins
(bad)
inc
hlt
add
sub
cld
nop
mov
mov
(bad)
nop
pop
pop
and
add
les
pop
push
add
test
or
xchg
outs
shr
call
scas
ds
add
jmp
outs
adc
das
pusha
je
(bad)
daa
stos
or
imul
iret
add
data16
push
jg
sub
loopne
or
xchg
js
cmp
repnz
popf
sar
outs
pusha
ret
js
push
add
cmp
and
movs
out
es
fsubr
sbb
mov
sar
add
das
mov
xor
and
mov
not
pop
push
mov
mov
cmp
or
xor
xor
add
or
cdq
fld
dec
add
cwde
test
sar
sub
rcr
loopne
mov
dec
jl
arpl
sub
and
arpl
and
addr16
and
xlat
inc
push
movs
add
add
cs
inc
sbb
lock
sbb
sahf
mov
pusha
mov
mov
fiadd
add
or
jnp
or
shr
sbb
mov
and
adc
or
and
test
xchg
(bad)
sbb
(bad)
sbb
lods
out
inc
arpl
dec
mov
mov
mov
adc
cmp
inc
xchg
test
aam
(bad)
push
or
cwde
mov
mov
(bad)
jg
adc
cmps
cmp
jne
rcl
cmp
or
mov
pusha
jg
sbb
or
pop
cmps
push
dec
adc
dec
cmp
mov
add
cmp
mov
xor
ret
pop
sti
retf
push
movs
out
cmp
je
or
xor
push
sbb
nop
cmp
adc
enter
iret
or
dec
adc
add
rcl
je
sbb
mov
or
xchg
xchg
shl
sti
rcr
and
lock
mov
js
mov
jno
cmp
pop
or
popa
cmp
test
dec
(bad)
sub
fld
inc
cmp
fidivr
xlat
(bad)
fldcw
xor
push
mov
xlat
retf
xor
fist
cwde
add
xadd
dec
xor
fcomp
pop
test
jge
add
cmp
jl
cld
add
ds
enter
imul
ret
daa
dec
imul
scas
stos
dec
xor
mov
jg
sub
jae
test
lods
fst
xor
xlat
dec
pop
adc
cmp
adc
scas
or
pop
dec
sbb
lds
push
pop
add
or
and
mov
and
inc
movs
and
mov
popa
dec
inc
ins
in
sbb
mov
aas
cmp
ins
pop
add
xchg
mov
and
mov
popa
xor
ja
repz
cmp
outs
xchg
push
adc
jnp
mov
mov
xchg
lds
call
movs
adc
push
fmul
pusha
aam
xchg
push
and
add
loop
loopne
mov
inc
pop
pushf
scas
and
add
inc
dec
mov
sbb
and
push
gs
in
adc
push
aaa
enter
ficom
push
lds
ins
bound
inc
lds
jmp
add
lods
and
mov
mov
mov
imul
out
mov
add
add
scas
adc
in
push
and
xor
inc
dec
clc
stos
add
ror
in
xchg
daa
je
sub
pop
add
bound
pop
mov
das
push
jno
xor
pop
or
dec
and
mov
test
or
xchg
and
imul
push
xchg
push
or
int3
and
sub
or
xchg
add
jo
jbe
leave
add
jbe
(bad)
in
xor
fdiv
call
add
dec
mov
mov
xor
add
mov
mov
adc
arpl
test
lea
ins
adc
movs
dec
mov
adc
mov
(bad)
rol
jne
mov
std
pop
or
mov
push
or
iret
inc
test
cmp
mov
aad
jns
and
adc
rcl
jge
xchg
outs
inc
pusha
lahf
rol
xchg
sub
add
dec
lods
xchg
inc
inc
push
dec
popf
cdq
ret
inc
lods
or
push
aaa
aaa
mov
dec
pop
test
or
adc
or
push
jge
and
xor
sub
adc
ja
push
mov
sub
aam
cdq
or
push
sbb
adc
mov
outs
adc
jb
push
inc
inc
mov
add
sub
pushf
gs
sub
push
dec
data16
stos
jo
pop
imul
and
fst
pop
rol
test
ds
pop
popa
jo
push
push
imul
les
movs
xlat
push
retf
dec
(bad)
fsubr
sub
aam
dec
and
sbb
pop
push
or
push
in
xchg
mov
sub
loope
hlt
jmp
inc
call
mov
inc
fdiv
fwait
mov
imul
ret
xor
xchg
dec
push
mov
aam
and
cdq
loopne
je
jne
imul
mov
sar
sar
inc
sbb
adc
aam
sbb
aam
push
xchg
adc
mov
or
adc
cmp
mov
add
adc
jp
sub
fsub
adc
fidivr
and
sti
adc
adc
aam
push
imul
jbe
inc
sub
add
jmp
addr16
add
imul
out
cmp
sbb
sub
adc
shl
sahf
sub
dec
inc
add
in
mov
dec
in
in
dec
test
xor
add
add
jbe
xor
adc
add
test
outs
inc
mov
push
push
add
push
(bad)
jmp
sub
sbb
aas
pop
and
push
and
ss
jo
push
mov
add
and
hlt
add
xor
add
call
push
push
adc
es
fsub
fsub
dec
das
push
iret
push
or
les
lahf
loope
xchg
inc
jle
enter
lods
test
sub
inc
sub
pop
daa
or
dec
fdiv
test
xchg
loope
dec
sub
movs
mov
jp
dec
cmps
(bad)
mov
jp
rol
xchg
add
add
je
clc
inc
pop
es
cmp
dec
clc
or
jp
shl
add
cs
jle
ret
es
ror
adc
xchg
daa
imul
in
xchg
call
cwde
pusha
loope
fadd
mov
mov
rol
nop
sub
js
push
xchg
wrmsr
mov
outs
mov
(bad)
sub
push
jne
mov
or
adc
jmp
and
or
stos
inc
jp
mov
mov
push
rol
rcr
icebp
add
dec
dec
mov
cmp
pop
xchg
and
push
push
sub
das
mov
cmps
or
inc
loopne
xor
aaa
gs
pusha
iret
cs
inc
das
mov
out
inc
ins
sbb
inc
adc
sub
test
mov
dec
les
aaa
and
adc
sub
test
add
es
push
add
mov
test
sbb
ror
fwait
or
(bad)
rcl
and
inc
(bad)
out
das
int
cmp
dec
sbb
or
out
push
iret
fsub
mov
int3
or
xchg
sub
or
aam
in
xor
(bad)
sbb
lock
mov
enter
or
mov
cmps
mov
adc
out
mov
mov
sbb
data16
adc
and
aas
or
jnp
aas
pushw
xor
jno
pop
and
and
aaa
jge
adc
or
jl
loope
mov
dec
clc
xchg
jno
imul
sbb
pop
out
aam
sbb
and
cs
into
in
loopne
sti
xor
fwait
xchg
xchg
cld
inc
add
mov
add
jmp
cmp
cld
shl
sub
sbb
xchg
sub
xor
and
ds
adc
jns
test
mov
or
mov
push
aaa
call
add
pop
sbb
mov
ins
(bad)
jo
mov
dec
inc
shl
push
sbb
and
clc
mov
mov
or
leave
arpl
(bad)
movs
scas
add
push
sbb
mov
imul
cmp
push
cmp
mov
dec
xor
sub
pushf
or
movs
mov
or
aam
sbb
sbb
nop
inc
cmp
shr
add
adc
cwde
lock
adc
sub
fld
lahf
dec
sbb
adc
(bad)
sub
or
adc
mov
mov
adc
add
pop
clc
fild
test
das
add
cwde
dec
mov
loopne
xchg
jne
xor
xchg
add
jle
jl
and
adc
dec
xchg
fisttp
xchg
sub
or
movs
scas
add
bound
mov
adc
cs
clc
pop
jne
fsub
sub
cmc
sahf
outs
mov
sub
cmp
or
fwait
push
cmps
mov
or
jmp
adc
loop
xor
clc
inc
add
xchg
ret
ja
cmp
and
sbb
mov
and
sbb
dec
and
test
mov
loopne
test
pop
cmp
jbe
add
cmp
je
mov
xchg
and
mov
push
pop
test
sub
cmp
jl
sub
add
je
fmul
fistp
lods
jmp
and
or
ltr
inc
leave
adc
cli
pop
sub
pop
sahf
pop
and
xchg
mov
add
mov
add
jne
(bad)
adc
rcl
cmc
outs
loop
mov
jecxz
jmp
inc
and
add
loopne
or
xor
jl
and
jb
add
add
lods
cmp
jle
js
int3
mov
xor
pop
mov
push
dec
adc
or
ins
mov
fs
repnz
hlt
imul
ins
test
and
add
daa
jp
jne
lock
dec
lahf
ja
or
jb
cmp
je
add
fdivr
and
cmps
push
mov
in
jl
int3
loopne
enter
retf
les
shr
out
in
stc
inc
fmul
or
pop
inc
dec
inc
ins
mov
adc
sahf
enter
pushf
dec
jne
test
fild
add
mov
mov
push
add
rcl
inc
sbb
xor
inc
and
mov
or
out
pop
and
sahf
xchg
adc
sbb
cld
iret
retf
cmp
dec
adc
fwait
inc
jg
iret
cmps
cs
hlt
xor
ds
adc
inc
loope
pop
jns
pop
(bad)
aaa
push
inc
mov
test
data16
ret
repnz
adc
push
jecxz
test
inc
shl
jmp
and
xor
push
xchg
cmp
repz
adc
adc
sbb
fist
mov
add
push
bound
add
mov
adc
add
popa
pushf
out
jmp
add
add
xchg
sbb
ja
loopne
aas
dec
adc
fadd
inc
or
lds
das
shr
ins
xchg
ja
fist
inc
sbb
out
and
add
ja
ins
mov
inc
mov
mov
xchg
out
mov
rol
shl
cmps
loopne
push
mov
jae
add
sub
shr
cmp
loop
dec
sub
or
push
xor
mov
pusha
ins
sbb
or
call
mov
dec
dec
inc
ss
fadd
aaa
cwde
push
jne
or
ss
test
int
les
dec
inc
dec
fadd
fidiv
in
shl
jg
sbb
jbe
into
popa
pop
push
pop
add
test
(bad)
xor
pop
fs
add
je
push
rol
push
or
inc
jbe
jae
ja
push
imul
daa
pop
dec
in
test
or
inc
mov
sbb
dec
mov
push
or
sbb
adc
xchg
push
ja
add
outs
adc
test
test
cmps
inc
nop
test
ins
cmp
add
add
or
add
inc
rol
hlt
popa
adc
mov
sub
inc
mov
xchg
add
(bad)
fadd
jne
jl
js
fcomp
dec
xchg
sbb
add
rol
jo
lods
sbb
jp
(bad)
ss
and
inc
adc
push
or
xchg
dec
aam
xchg
inc
add
cmps
(bad)
push
dec
cdq
in
xchg
loopne
jb
sub
cmp
inc
mov
les
adc
or
sub
push
fsubr
shr
nop
adc
push
pusha
push
add
xlat
es
(bad)
mov
dec
repnz
inc
xchg
sub
adc
in
sub
movs
pop
jmp
mov
jle
lock
mov
xchg
push
mov
pop
test
dec
adc
cld
or
pop
sbb
cmp
xor
mov
ins
fmul
or
iret
mov
cld
push
jle
add
add
adc
rol
pop
pop
fidiv
adc
sub
xor
cmp
add
mov
(bad)
loope
jne
daa
addr16
mov
nop
fldenv
push
add
rcr
jbe
lods
enter
loop
mov
pop
inc
sub
and
pop
mov
and
dec
add
and
(bad)
jns
xchg
or
jg
sahf
adc
jmp
out
lods
and
dec
xlat
daa
sub
nop
retf
sbb
dec
cmc
adc
and
test
mov
push
scas
dec
xchg
mov
pop
sbb
adc
icebp
bound
mov
ja
dec
xchg
fstp
scas
in
scas
mov
in
sbb
scas
adc
or
leave
adc
push
rol
or
nop
cmp
pop
sub
adc
adc
mov
push
adc
jge
cli
push
movs
mov
dec
gs
adc
fwait
xor
ja
jmp
sbb
push
jmp
mov
jecxz
xor
pusha
or
ret
daa
push
adc
or
or
and
inc
jmp
inc
test
push
enter
cs
or
and
dec
sbb
push
cmp
sbb
push
and
lahf
add
pop
mov
adc
xor
add
dec
bound
lock
fnstenv
loope
adc
ss
push
lock
ja
out
push
mov
in
add
adc
sub
cmps
push
xchg
sbb
out
push
push
jnp
daa
test
pop
(bad)
and
pop
push
cld
xchg
sbb
push
push
arpl
wrmsr
xchg
popa
pushf
sub
ds
mov
or
sbb
jns
out
push
add
inc
lods
pop
pop
mov
jg
rol
int3
cmp
pop
push
mov
mov
mov
mov
inc
stos
loope
sub
sbb
inc
mov
mov
in
jecxz
cmp
cmp
sbb
jnp
jnp
call
test
mov
aaa
fild
sub
sub
and
shl
sahf
arpl
jg
pop
cwde
mov
js
push
test
clc
cwde
xchg
inc
push
sbb
pop
in
xor
xorps
and
jo
adc
add
mov
mov
sahf
add
xor
dec
aad
mov
push
xor
push
cwde
push
rcl
pusha
cmp
jl
pop
sbb
movs
iret
daa
and
ret
cli
dec
jge
ins
mov
nop
and
add
nop
or
and
ror
div
dec
cmp
mov
pop
mov
ret
adc
sub
hlt
sub
inc
push
and
cmp
sbb
int3
cld
lods
imul
add
cmp
add
add
adc
mov
retf
jns
ret
pop
adc
in
mov
sub
sysret
adc
fs
sub
call
inc
pusha
adc
push
jmp
fistp
jg
sub
push
sbb
add
outs
push
push
sbb
retf
cwde
dec
scas
sbb
test
pop
mov
push
push
inc
and
cmps
sbb
(bad)
sub
add
add
sub
and
jo
inc
divps
mov
and
cs
scas
sar
hlt
pop
test
loopne
jl
adc
push
pop
push
and
in
cwde
mov
sub
lahf
inc
pushf
cdq
ja
cmp
pushf
cmps
movs
mov
add
mov
mov
mov
mov
add
mov
(bad)
xchg
std
(bad)
mov
jle
inc
adc
push
push
sar
ins
mov
push
movs
mov
xchg
in
pusha
fwait
push
jl
mov
adc
sti
push
xor
dec
lock
adc
push
xor
enter
cmp
add
dec
cwde
or
sub
sbb
imul
jb
jnp
loopne
push
and
xchg
stos
in
adc
in
adc
test
mov
pushaw
mov
(bad)
push
sbb
int3
arpl
imul
xlat
add
xor
lock
mov
jae
or
inc
xchg
sbb
mov
sub
dec
sbb
sbb
cmp
les
or
add
enter
sub
loopne
pop
sbb
pop
dec
jo
or
inc
pop
imul
xchg
cmp
ds
inc
and
pop
add
xor
test
add
adc
xchg
and
inc
inc
cs
and
rcl
mov
cdq
inc
mov
arpl
hlt
nop
adc
cmp
and
dec
mov
dec
mov
sub
cmp
pop
daa
add
jmp
and
add
sub
xchg
pop
and
leave
add
cmps
loopne
push
ret
stc
add
movs
jae
test
pop
xor
sbb
or
xor
fdivr
cmp
pop
cwde
mov
add
aas
in
add
mov
add
cmp
cmp
inc
mov
cmp
sbb
cmp
push
bound
adc
push
retf
jne
mov
ror
or
mov
or
or
add
es
xchg
jg
bnd
sub
inc
xor
or
sub
or
ficom
mov
(bad)
adc
inc
adc
not
push
sbb
add
add
add
or
xor
or
jne
rol
nop
test
push
cmp
out
add
movs
add
and
fwait
jl
mov
adc
stc
add
dec
mov
push
in
jmp
and
repz
fs
add
(bad)
sbb
cmps
xlat
or
xchg
add
xor
arpl
mov
and
push
in
adc
pop
or
aaa
lock
push
out
nop
xor
add
add
sub
lds
sub
loope
mov
dec
or
inc
sub
push
push
add
std
adc
inc
popa
bound
(bad)
addr16
pop
pop
add
mov
push
cmps
sahf
addr16
and
pop
cmc
and
aam
daa
sbb
adc
and
xchg
cmp
pop
mov
push
adc
cmp
xchg
test
ds
into
mov
(bad)
mov
cmp
or
xchg
jo
pop
adc
es
push
out
push
out
jns
and
push
je
mov
iret
jnp
and
inc
mov
inc
shr
push
sub
(bad)
loop
xor
pop
aad
mov
nop
fs
je
cmps
pand
or
push
adc
loopne
inc
push
movs
mov
push
bound
mov
pop
loopne
adc
sbb
push
nop
xor
sbb
inc
mov
(bad)
aas
pop
and
xor
jne
push
arpl
pop
add
(bad)
iret
pop
or
cdq
dec
call
jb
add
adc
add
adc
add
push
jb
mov
inc
leave
adc
inc
je
inc
inc
adc
xchg
cmp
push
retf
ds
add
inc
xor
sbb
push
scas
add
sbb
mov
test
mov
add
sbb
test
imul
jge
mov
dec
clc
je
fs
mov
(bad)
sbb
push
inc
jb
jo
adc
inc
and
lahf
es
jo
inc
add
push
adc
xchg
or
and
lods
cmp
pop
xor
xor
and
fadd
push
jnp
sub
sub
aad
sub
mov
pop
add
cmp
and
and
das
cmps
ins
shl
rcl
aam
add
pusha
xchg
xor
inc
leave
add
push
add
and
subps
inc
pop
xor
pop
cmp
sub
add
cmps
call
sub
push
add
aas
inc
je
test
jle
mov
scas
pop
adc
jbe
sub
enter
ror
pop
in
and
pop
ror
or
xchg
stos
iret
ins
mov
add
std
scas
pop
sub
ja
pusha
les
adc
adc
push
imul
dec
pop
test
sub
fwait
xchg
push
inc
push
xchg
rol
add
jne
mov
inc
and
push
mov
xchg
xor
adc
bound
shr
out
inc
ins
dec
jo
popa
ins
or
pushf
aam
out
or
adc
dec
or
into
jb
or
fdivr
nop
jno
add
sbb
jl
sbb
mov
div
or
jle
adc
dec
jl
mov
or
adc
daa
sbb
fs
jecxz
imul
mov
add
repnz
and
(bad)
int3
sub
inc
repnz
cmp
repnz
ins
mov
int
loopne
push
es
push
(bad)
int
in
into
inc
sahf
div
cmp
not
push
sub
test
ror
rcr
cmp
jnp
jle
push
pop
ds
jl
popa
pop
inc
outs
xchg
push
add
add
mov
or
sub
out
jge
movs
(bad)
(bad)
iret
fimul
push
aad
rcl
in
jnp
add
push
mov
pop
xlat
xchg
ficom
add
fadd
test
jg
add
int3
push
jg
sbb
idiv
and
pusha
push
dec
jmp
xchg
pop
push
add
mov
push
xlat
push
dec
push
add
shr
xor
or
cmp
push
xchg
pop
jae
push
arpl
in
popa
imul
leave
fs
pop
out
xchg
adc
jp
rcl
cmp
retf
inc
push
push
adc
adc
dec
push
xchg
mov
and
inc
imul
pop
inc
call
sub
or
leave
push
jb
lds
sbb
and
lods
nop
sbb
push
sub
cmc
push
je
ja
cmp
pop
enter
xor
add
dec
cdq
xchg
imul
mov
dec
ins
gs
js
xor
push
pop
pop
xchg
aad
add
in
pusha
jo
inc
pop
adc
and
add
test
or
sbb
and
repnz
add
js
outs
addr16
or
add
sub
push
cmps
jne
pop
add
ret
push
or
add
push
mov
mov
pop
test
mov
add
sub
add
and
and
or
xchg
xor
cs
cmps
imul
stos
xor
mov
and
jo
inc
daa
dec
lea
pop
(bad)
mov
add
dec
outs
dec
es
mov
xor
les
sbb
jb
mov
scas
sub
aaa
cmp
cmp
xchg
int3
fcom
cs
cmp
arpl
es
mov
dec
cmp
out
push
cmps
cmp
arpl
pop
xchg
call
retf
dec
cli
add
jno
add
bound
push
fistp
int
mov
adc
jns
adc
dec
inc
inc
dec
out
cwde
mov
push
dec
dec
pop
pusha
ins
and
push
push
hlt
push
and
inc
aaa
fisubr
push
inc
jmp
jo
popf
add
inc
(bad)
and
(bad)
je
push
jo
push
and
jo
sbb
adc
dec
jp
jne
xchg
dec
sub
add
dec
xchg
cmp
push
or
je
and
dec
or
movs
fs
and
inc
sbb
rcr
fwait
dec
addr16
adc
xchg
rol
mov
jmp
mov
or
jne
cwde
(bad)
or
mov
test
imul
leave
cmps
sub
mov
dec
rcr
not
and
jmp
or
push
cmp
dec
int3
clc
sar
jg
pop
xchg
xchg
bound
fcomp
sbb
push
test
dec
int3
lods
add
inc
inc
repnz
inc
or
jl
and
dec
xchg
test
or
and
pop
and
pop
rcl
iret
push
sbb
or
inc
dec
add
xchg
ror
or
int
push
call
adc
add
dec
add
test
add
or
adc
pslld
or
outs
xor
mov
fsubr
sub
nop
cmp
sbb
arpl
bound
(bad)
aam
loopne
push
or
int
or
cmp
add
or
scas
xor
cmp
add
and
outs
loopne
xor
ret
(bad)
stos
inc
push
(bad)
ja
mov
or
out
mov
fmul
ror
aad
xor
mov
aad
cmp
mov
les
xchg
pop
inc
shl
lock
sbb
fadd
mov
je
lds
stc
mov
mov
cmps
imul
xor
pop
cld
jge
xchg
mov
dec
add
adc
test
sub
je
push
add
dec
sbb
push
shl
sar
mov
add
sbb
push
mov
repz
inc
cs
lds
loopne
pop
adc
adc
cmp
fs
inc
pushf
add
and
xor
shl
test
call
test
adc
push
pop
jge
in
and
push
pop
jle
mov
pop
dec
xor
nop
push
push
jbe
mov
mov
(bad)
push
rol
loopne
clc
inc
and
and
shl
and
es
add
mov
cld
lahf
pop
add
xchg
mov
hlt
test
jnp
mov
dec
std
imul
pop
inc
push
xlat
push
mov
or
sub
xchg
add
sub
clc
pop
xchg
xchg
(bad)
push
adc
sbb
lea
imul
int
inc
xor
push
add
xor
mov
or
mov
ret
adc
scas
cmp
push
or
cmp
dec
pop
dec
dec
adc
add
xor
mov
addr16
outs
mov
or
dec
xor
aaa
sbb
jl
mov
popa
adc
add
xor
(bad)
das
mov
push
nop
push
or
(bad)
je
and
dec
sbb
shr
cmp
mov
push
sbb
jns
jl
add
add
pop
sbb
pop
or
cmp
nop
mov
dec
gs
or
jne
inc
and
sub
inc
and
cld
data16
ss
and
rcl
xor
cmp
(bad)
je
shl
pop
scas
imul
mov
or
adc
lods
jl
add
rcr
(bad)
hlt
jl
xor
sub
loopne
loope
add
inc
aam
adc
adc
das
sub
pop
sbb
add
retf
adc
(bad)
sbb
pop
enter
xchg
sbb
or
pop
(bad)
(bad)
daa
mov
movs
addr16
shl
int
es
test
ins
add
out
mov
fldenv
mov
jbe
(bad)
or
btc
ret
rol
movs
add
out
push
cmp
(bad)
cwde
ins
cmp
(bad)
(bad)
jns
adc
pop
add
aam
gs
inc
add
popa
push
loop
xor
cdq
je
xor
jne
movs
and
daa
gs
add
pop
xor
repnz
jge
xchg
mov
cmp
mov
cmp
mov
mov
cs
pop
mov
sbb
mov
call
sbb
jns
pop
push
aam
dec
sub
push
sbb
adc
sbb
(bad)
mov
add
stc
test
imul
out
push
jb
add
dec
sbb
call
or
sub
enter
lock
pop
jne
add
nop
(bad)
xor
mov
cmp
xchg
mov
aas
stc
or
and
cmp
push
xor
test
jge
push
sub
dec
pop
mov
pop
or
data16
push
mov
and
push
cmps
imul
add
(bad)
jmp
shl
pop
push
mov
and
ja
mov
jne
or
pop
(bad)
cli
add
(bad)
push
or
add
(bad)
out
mov
outs
(bad)
push
mov
sub
pop
cmps
sbb
test
js
(bad)
mov
add
mov
mov
sbb
xor
gs
sbb
sub
and
fadd
push
dec
lds
xor
scas
inc
fs
sbb
xor
sub
mov
mov
push
adc
fadd
sbb
push
or
jmp
dec
daa
sbb
inc
(bad)
or
arpl
fistp
jecxz
(bad)
push
aaa
(bad)
xor
dec
cld
hlt
dec
jecxz
loop
cdq
pop
sub
popf
pop
xor
imul
movs
pop
fadd
xlat
or
in
test
leave
adc
xchg
add
les
jecxz
mov
add
inc
or
inc
repz
sub
ret
jge
aaa
movs
or
push
push
sbb
and
push
xor
sbb
push
nop
push
nop
push
sub
lock
rcr
shl
adc
dec
sbb
or
lods
add
sbb
cdq
or
loopne
jmp
or
sub
(bad)
arpl
lock
inc
fnsave
or
dec
cs
xlat
leave
jp
jl
xchg
push
(bad)
arpl
sub
ins
js
cmp
pop
pop
sbb
xchg
ins
mov
push
push
and
loope
clc
dec
or
sbb
mov
or
xor
arpl
ret
dec
addr16
mov
mov
hlt
xlat
adc
adc
and
add
dec
inc
pushf
cli
pop
cli
jle
jo
out
mov
push
arpl
std
adc
sbb
or
jno
push
mov
jne
mov
xchg
and
mov
movs
cmp
and
rol
dec
mov
test
pop
xchg
xchg
test
mov
hlt
or
in
push
clc
(bad)
enter
push
stc
add
mov
add
sub
xor
popf
adc
xchg
lock
or
push
pusha
sub
lock
aaa
pop
es
mov
xchg
(bad)
or
adc
push
push
adc
add
push
inc
add
dec
hlt
mov
sahf
movs
pop
mov
test
adc
xor
or
pushf
(bad)
mov
outs
lea
lea
jp
cmp
adc
adc
ss
lock
fcomp
outs
push
sar
cdq
call
and
push
sbb
add
and
mov
add
jge
cmp
xor
je
lods
in
and
popf
sbb
sbb
and
jb
and
push
cmp
or
add
or
dec
and
sub
cmp
icebp
add
xor
jo
aaa
and
cmp
sub
inc
pop
je
inc
mov
fnsave
mov
mov
or
movs
mov
imul
cmp
arpl
xchg
movs
cmp
scas
inc
(bad)
fcomp
or
lock
out
adc
or
mov
jmp
jle
or
sbb
add
jo
pop
sub
and
mov
push
xor
(bad)
cld
mov
outs
data16
js
dec
dec
adc
cmp
mov
jl
inc
arpl
push
call
inc
test
add
push
push
cdq
ins
scas
popa
xchg
shl
outs
adc
push
test
inc
dec
mov
and
in
or
cmp
push
xchg
sbb
cmp
inc
scas
mov
add
adc
mov
fdivr
(bad)
notrack
cmp
push
or
add
mov
jbe
lock
add
ror
mov
dec
dec
cmp
jne
rol
dec
shr
cmps
cmp
xchg
outs
dec
mov
test
shr
push
xor
fistp
mov
add
jo
jne
call
mov
imul
aam
dec
imul
sbb
ins
repnz
cwde
sbb
into
or
imul
leave
(bad)
pop
or
retf
call
jge
dec
lods
add
ret
fiadd
push
fdiv
retf
inc
lock
push
ret
test
shl
sub
addr16
sub
(bad)
movs
clc
cs
inc
or
or
(bad)
and
cmps
mov
je
xchg
(bad)
out
mov
or
cmp
int3
mov
cmp
sub
jne
mov
sbb
xchg
rcl
arpl
add
lds
sub
adc
xor
add
xor
pop
lods
out
cmp
xchg
dec
(bad)
jp
or
pop
pop
shr
(bad)
lock
scas
adc
or
mov
xchg
push
push
inc
inc
lods
neg
xchg
je
mov
add
xor
add
and
ret
cmp
dec
adc
or
fdivr
stos
ins
xchg
pop
adc
mov
dec
pop
stc
push
cmp
sbb
into
mov
jbe
mov
pop
mov
cmp
cmps
push
fmul
and
std
in
cmp
xlat
and
sbb
sub
repnz
xor
mov
adc
aad
jecxz
pop
nop
test
push
faddp
fisttp
pushf
mov
nop
inc
sbb
mov
sbb
loope
or
cmp
or
add
fisttp
sub
add
sbb
mov
adc
and
jo
mov
xor
sbb
push
jne
fdiv
lea
pop
pusha
xchg
sub
loop
arpl
inc
sbb
xor
xchg
add
cs
and
push
sub
sub
push
ins
je
sbb
mov
popf
adc
xor
jae
cmc
mov
and
nop
cmp
loope
inc
fldcw
sub
adc
int3
or
and
xchg
cmp
ins
inc
jg
mov
scas
mov
dec
clc
push
cmp
jne
mov
fist
and
mov
mov
adc
mov
fmul
mov
dec
imul
sbb
fs
xor
fs
loope
dec
mov
dec
sub
xor
mov
xor
bound
inc
fnstcw
jl
xchg
add
dec
or
lock
out
xlat
sub
icebp
adc
sti
ja
dec
shr
inc
xor
cmp
outs
lods
push
sub
jl
push
xchg
pop
fcomp
mov
(bad)
xchg
in
rol
sub
xor
jne
pop
aas
loop
mov
cmp
mov
ja
ret
pop
(bad)
sahf
or
sbb
cli
repz
xchg
sahf
push
outs
imul
adc
ins
jmp
mov
ret
lods
or
or
stos
int
mov
call
int
xor
push
jo
je
mov
cmp
jne
or
ds
push
push
call
mov
dec
push
push
inc
and
icebp
out
daa
add
xchg
xchg
out
sub
lahf
and
je
das
adc
jle
shl
fisubr
pop
jl
mov
mov
je
js
mov
bndldx
lahf
inc
mov
shr
call
jmp
sbb
cwde
pop
xchg
mov
mov
imul
popa
mov
lahf
js
pop
and
sub
pop
pop
inc
test
pop
(bad)
sbb
(bad)
xchg
shl
push
push
and
pop
jb
ja
push
sbb
mov
loope
mov
es
pop
adc
and
sub
cdq
adc
xchg
and
scas
and
jne
mov
adc
in
push
mov
xlat
or
mov
fiadd
scas
cmps
xchg
dec
(bad)
mov
pop
lahf
jg
inc
test
jge
sar
or
push
adc
push
aas
hlt
stos
jge
push
pop
mov
add
rcl
or
rol
stos
shl
pop
test
xlat
shl
and
sbb
lock
jge
stos
imul
pop
mov
call
in
add
fwait
shl
retf
loopne
les
adc
push
cmp
cmp
movs
ret
std
jbe
dec
inc
sbb
int3
push
jp
pop
mov
xor
inc
push
mov
jb
enter
sub
adc
nop
dec
imul
ret
ins
or
or
cmc
push
(bad)
push
cmps
movs
push
push
ins
(bad)
ds
ror
mov
add
mov
push
and
clc
sub
call
jmp
inc
jnp
les
push
lock
ja
clc
dec
das
(bad)
pop
or
inc
sub
or
test
push
dec
jo
push
call
jne
cmp
or
jmp
xor
sub
loopne
outs
adc
(bad)
or
mov
les
push
test
shl
xchg
in
and
pop
mov
mov
imul
call
aas
mov
adc
bound
adc
icebp
imul
add
lock
jne
mov
cmp
xchg
adc
call
lods
and
mov
push
movs
lds
push
sbb
mov
pop
push
test
adc
(bad)
xchg
int3
les
jne
mov
fisubr
test
cmps
enter
dec
jno
jle
test
test
jmp
ret
pop
mov
outs
dec
jl
cmp
(bad)
pop
xor
cdq
mov
jge
inc
outs
sub
or
xchg
sbb
ret
call
push
pop
or
sti
dec
sbb
add
pop
add
mov
into
test
enter
aas
add
bound
add
push
aaa
movs
dec
sti
daa
xchg
sub
adc
adc
xchg
cld
adc
inc
or
push
push
je
mov
mov
jg
push
push
ficom
push
xor
ss
add
pop
ficom
aas
push
test
popa
mov
fwait
inc
add
cmp
adc
loopne
push
add
into
enter
cmp
ins
adc
push
imul
adc
or
mov
dec
push
or
js
fdivr
mov
push
imul
sbb
xor
mov
stc
data16
lea
mov
mov
adc
or
push
lock
aaa
fidivr
shl
test
pop
(bad)
xor
or
inc
and
xor
adc
xchg
nop
dec
je
loopne
fld
xchg
cmp
das
pop
rcr
push
gs
jae
fild
dec
add
mov
push
push
mov
adc
add
push
push
pusha
add
xchg
cmp
or
adc
jns
hlt
push
pop
inc
test
clc
adc
add
xchg
ret
xchg
or
push
jge
dec
daa
xor
or
jp
pop
sbb
jl
adc
out
push
daa
retf
pop
stos
mov
ins
mov
dec
sbb
and
in
inc
cmp
es
cs
imul
jae
or
xchg
daa
bound
jl
ret
xchg
pop
mov
cmp
mov
pop
mov
outs
ret
ins
sub
adc
and
mul
ins
add
sti
or
mov
or
mov
sub
loopne
pop
jo
or
nop
lahf
pop
jo
sbb
mov
adc
sub
xlat
adc
push
shr
xchg
rcl
je
mov
inc
sbb
sub
mov
and
xlat
lods
add
jo
jg
add
test
rol
xor
push
jne
jp
das
push
cmp
and
push
stc
push
sbb
xchg
fisttp
pop
add
pop
sub
shr
xor
call
shr
iret
xchg
and
push
adc
mov
jle
fwait
push
sbb
(bad)
cmp
(bad)
shl
or
test
sub
inc
ficom
jle
rol
mov
inc
mov
add
pop
sub
imul
jmp
jmp
in
dec
inc
icebp
mov
ud0
cld
fild
test
jbe
pop
and
fwait
add
xor
aam
xchg
or
test
jb
and
cli
mov
fldcw
mov
out
jl
or
dec
pop
or
xchg
callw
popa
les
rol
sti
shl
jnp
(bad)
das
shr
(bad)
dec
mov
and
icebp
push
arpl
ds
movs
sti
pusha
imul
dec
jle
(bad)
cwde
loopne
imul
retf
mov
mov
push
sbb
jecxz
mov
lea
sbb
sub
push
dec
(bad)
rol
test
and
dec
sub
mov
aaa
push
cmps
enter
fdivr
int3
scas
jge
fidiv
(bad)
cmp
outs
sbb
push
rcr
ins
adc
push
jle
cmp
inc
sbb
fsubr
xchg
mov
lock
add
push
and
sbb
mov
sub
dec
add
sub
mov
cs
lahf
inc
jmp
sub
jmp
or
adc
fst
xchg
test
iret
mov
xor
push
adc
ins
iret
ins
xor
retf
mov
(bad)
jmp
les
sbb
xor
arpl
inc
mov
pop
mov
aaa
push
add
ins
and
add
and
adc
push
push
or
xor
sbb
xchg
xchg
and
addr16
cmp
adc
sub
ret
jo
cmp
or
mov
push
rol
and
pop
push
inc
pop
add
jmp
add
ins
nop
sub
popf
inc
enter
inc
xlat
rcl
push
repz
mov
inc
dec
fld
outs
sbb
lock
sub
movs
(bad)
cmp
mov
loop
or
push
add
or
push
fidivr
fistp
xchg
fs
xchg
std
sbb
mov
dec
pop
or
and
or
and
mov
rcl
sub
cmp
sub
loopne
stc
fisttp
sbb
out
stc
mov
push
pushf
and
xchg
adc
pop
mov
cwde
cmp
xor
sahf
rcl
or
aaa
mov
dec
jne
push
ret
(bad)
xchg
mov
pop
or
inc
mov
(bad)
cmp
je
mov
xchg
dec
dec
dec
test
sub
inc
iret
jnp
jo
test
mov
lea
and
addr16
mov
ds
jecxz
or
gs
inc
xchg
pushf
ins
xchg
jne
jne
dec
push
jl
test
lock
mov
movs
pop
js
mov
hlt
mov
aaa
cli
pop
pop
cli
in
mov
cmc
aaa
jl
(bad)
or
or
imul
cwde
xchg
push
(bad)
shl
test
rsqrtps
or
cwde
lock
outs
push
pushf
mov
inc
ret
xchg
ror
test
and
xchg
test
jmp
push
mov
cmps
popa
lea
inc
dec
call
into
pop
loope
mov
push
and
sbb
js
jl
lahf
push
adc
pcmpgtd
pop
das
sbb
add
xchg
xchg
sahf
cmp
es
xor
mov
mov
loope
push
sbb
sahf
enter
imul
inc
mov
xor
cmp
test
jmp
lock
into
cwde
cmp
loope
push
fs
pop
movs
mov
loope
or
sbb
mov
aam
xchg
xor
push
mov
add
aaa
in
cmp
lahf
sub
xlat
iret
movs
pusha
push
xchg
xor
outs
or
retf
shr
lods
enter
fbld
mov
scas
mov
push
push
mov
in
jl
adc
xor
adc
outs
cwde
adc
inc
sub
inc
fs
sti
xchg
repnz
jmp
mov
pop
sub
(bad)
push
jne
out
mov
push
or
or
mov
or
in
je
shr
sub
aad
push
jecxz
mov
scas
retf
rcl
aas
shl
lods
add
push
rcl
sbb
fidivr
fsubr
inc
mov
sbb
mov
dec
test
jle
mov
mov
mov
push
add
dec
call
adc
xor
or
out
sahf
rol
je
pop
or
inc
and
mov
fs
iret
enter
add
add
or
imul
mov
inc
ds
sahf
(bad)
fistp
test
lea
repz
or
call
sbb
xchg
ds
pop
xor
jmp
adc
mov
push
mov
lahf
sbb
dec
push
push
or
lods
imul
or
push
or
nop
mov
movaps
lock
mov
sbb
sbb
mov
bound
cmps
pop
lods
mov
fs
enter
inc
mov
sub
mov
ret
popaw
lock
cld
aas
fs
sbb
mov
or
inc
push
(bad)
popf
cmp
idiv
and
pusha
dec
clc
scas
clc
test
cmp
lds
aas
loopne
adc
and
shl
sbb
and
or
add
movs
jmp
lahf
xchg
and
cmp
cmp
or
xor
ins
jmp
lds
icebp
test
cdq
enter
mov
test
test
in
shl
test
adc
(bad)
jb
adc
fcomp
push
push
pusha
push
loopne
cmp
scas
(bad)
fsub
push
sub
movs
xlat
inc
push
data16
fcom
xor
mov
or
ret
aad
aam
add
adc
xchg
sbb
imul
mov
ja
jge
pop
ret
dec
pop
inc
mov
mov
scas
shr
mul
and
xor
daa
sbb
fwait
and
pusha
fst
adc
std
and
or
cmc
pop
pusha
sub
mov
push
xor
inc
add
dec
enter
add
and
ret
xchg
push
in
jne
adc
sbb
mov
push
fcom
in
aam
mov
les
daa
and
jle
sbb
or
scas
and
mov
pop
loopne
fisttp
add
lods
and
fsubr
popa
lea
fnstenv
cmp
nop
mov
pop
adc
(bad)
sbb
cmps
push
lods
in
call
cmp
xor
imul
pop
adc
rol
and
xor
mov
adc
sub
rcr
jle
aaa
aad
ja
outs
sub
cmp
in
or
outs
nop
or
outs
sbb
push
ins
les
xchg
aam
ins
push
pop
daa
ret
ja
mov
dec
leave
clc
mov
jmp
enterw
xchg
imul
push
lahf
pop
xor
jne
sbb
xchg
pop
movs
push
xor
scas
mov
imul
xor
and
push
inc
daa
inc
xchg
xlat
jp
mov
rcr
xchg
xchg
add
push
test
xchg
mov
loope
iret
jne
add
je
loope
add
jb
dec
push
push
dec
fisub
ror
dec
mov
pop
inc
mov
adc
lods
inc
mov
pop
adc
les
cmc
neg
cmp
jne
or
or
and
and
pop
rcl
inc
mov
je
inc
test
add
cmp
cmp
inc
je
jle
adc
jnp
add
les
add
ret
push
add
push
test
shl
imul
push
cmp
hlt
or
mov
ficom
cwde
into
mov
cmp
je
movs
mov
push
dec
hlt
fld
rcl
movs
push
xor
push
ret
loopne
je
xchg
cmp
(bad)
push
dec
add
test
and
push
fdiv
ret
(bad)
fcom
and
add
shl
push
outs
jmp
push
in
arpl
out
push
shl
jne
and
hlt
rol
cli
inc
adc
jg
mov
cwde
movs
test
sbb
dec
clc
cdq
lods
push
adc
dec
cmp
pop
sbb
loope
add
or
jmp
cmp
fiadd
(bad)
push
xor
xchg
jns
cmp
mov
js
lds
sahf
arpl
repnz
push
adc
adc
pop
(bad)
mov
cld
jne
and
mov
cmp
mov
fistp
repnz
stos
lods
sbb
jmp
or
jmp
stos
es
(bad)
lea
lock
call
sub
xor
cmp
lods
daa
jno
sar
nop
cmp
inc
jmp
cmc
add
adc
add
push
(bad)
leave
inc
pop
add
aaa
lock
mov
fild
xchg
adc
jl
add
add
mov
daa
adc
add
adc
lock
dec
pop
fmul
cmp
hlt
mov
pusha
xor
push
(bad)
cmp
inc
push
loopne
pushf
or
fs
or
sbb
xor
popa
loopne
dec
loopne
add
xchg
adc
fst
pop
mov
pusha
pop
loopne
jb
sbb
loopne
enter
and
sbb
imul
jge
(bad)
cmp
add
ja
and
sbb
add
jne
dec
sub
call
aad
or
stos
add
dec
add
jp
adc
cmc
dec
clc
imul
jmp
sub
cmp
cmp
dec
loopne
in
dec
loopne
frstor
xor
add
dec
push
nop
cmp
ds
shl
ret
fiadd
sbb
enter
rol
leave
push
or
pop
pushf
lds
or
in
enter
leave
inc
inc
daa
and
leave
icebp
loopne
das
mov
lea
jnp
and
sub
rol
arpl
xchg
or
std
push
add
add
shl
inc
jae
div
in
inc
aaa
adc
push
mov
pop
xor
and
sbb
sub
call
sbb
dec
xor
inc
mov
pop
jb
enter
and
adc
ret
aas
mov
or
and
dec
retf
popf
nop
lea
retf
sub
sbb
inc
in
es
int3
loopne
mov
xchg
xor
mov
or
daa
cdq
push
sub
daa
jmp
adc
push
leave
push
xchg
xor
push
in
add
and
pop
mov
jmp
loop
or
pop
ret
jge
pop
sub
fcmovu
inc
mov
out
and
add
xor
mov
cmp
add
pop
mov
xor
adc
cmp
and
lock
daa
inc
xlat
and
mov
nop
inc
(bad)
jmp
cmp
(bad)
loopne
inc
sbb
aaa
mov
adc
mov
mov
retf
xor
cs
dec
push
int3
jbe
clc
dec
inc
dec
inc
inc
retf
add
add
adc
dec
push
pop
out
jne
ret
in
sbb
push
fisttp
inc
adc
push
lahf
dec
mov
gs
jns
add
sbb
icebp
inc
dec
cmp
(bad)
sti
inc
inc
cmp
push
jns
ret
add
cli
stos
add
sbb
cmp
pop
clc
sahf
push
or
inc
ret
or
(bad)
mov
out
xchg
into
nop
push
imul
test
nop
jbe
jne
mov
ins
mov
inc
gs
xor
cmps
dec
aad
(bad)
xor
sbb
push
loopne
pusha
and
sbb
out
adc
mov
movs
iret
js
pop
popa
ins
sub
movs
fwait
in
add
stos
iret
xchg
pop
clc
nop
xor
mov
ret
cmp
rcl
add
mov
clc
sbb
dec
(bad)
mov
pop
pop
int3
xor
fs
xchg
loopne
les
stos
mov
jnp
fidiv
mov
dec
mov
push
iret
add
or
leave
xor
dec
add
sbb
mov
dec
ins
sbb
ss
jecxz
push
jp
jmp
sub
or
popa
daa
shr
cmovns
and
into
push
sub
xor
ret
dec
adc
or
jbe
sub
push
(bad)
mov
int
icebp
mov
xchg
(bad)
fs
fisttp
dec
arpl
sar
push
fimul
retf
jmp
mov
mov
dec
fst
or
mov
and
jnp
pop
pusha
ds
xchg
inc
lahf
mov
add
sbb
test
out
ins
imul
inc
fistp
xor
scas
mov
mov
pop
mov
push
push
scas
mov
push
rcr
lds
xor
movs
test
je
xor
jo
(bad)
and
bnd
pop
mov
pop
fimul
xor
lea
cmps
dec
sub
push
push
leave
cwde
push
mov
pushf
and
xor
enter
sbb
popa
inc
inc
test
in
idiv
or
enter
pop
and
mov
add
pop
and
pusha
fs
add
addr16
les
aas
je
shl
adc
fsub
imul
dec
cmps
imul
and
inc
mov
test
add
fadd
ror
int3
push
xlat
pop
mov
mov
call
xor
mov
hlt
push
adc
call
int
pusha
js
sub
mov
mov
pop
sar
jle
outs
mov
push
add
jne
xor
inc
xchg
push
in
mov
mov
mov
push
dec
icebp
push
loope
mov
cwde
fmul
jne
mov
outs
and
dec
inc
inc
daa
lock
push
fs
push
adc
jp
clc
inc
cmp
pushf
push
out
cmp
add
stc
inc
mov
(bad)
pusha
jbe
jo
mov
leave
mov
fdivp
inc
addr16
cmp
clc
fwait
jno
mov
stos
lods
jns
imul
dec
pop
mov
xchg
dec
je
add
fidiv
outs
pop
pushf
mov
push
jp
xchg
nop
popa
pop
ins
jmp
xor
fsubr
push
jp
pop
mov
nop
xor
or
push
pusha
je
or
push
jmp
je
xor
lea
pop
lock
enter
ss
sub
adc
sbb
call
dec
and
jl
sbb
add
mov
jb
sbb
imul
jo
in
add
sub
xchg
ins
push
sbb
jmp
das
lahf
adc
popf
inc
mov
xor
xor
dec
add
sub
jg
xor
adc
ins
cmc
(bad)
out
mov
sbb
xchg
cmp
out
sbb
and
test
xchg
adc
test
push
inc
mov
movs
sbb
scas
int
or
mov
jo
cmp
push
nop
push
mov
ss
push
ins
gs
jmp
push
mov
xchg
and
inc
and
xor
xor
xor
mov
es
dec
imul
sbb
add
outs
pop
neg
imul
add
imul
ins
inc
outs
pop
jnp
(bad)
js
bound
pop
es
cdq
mov
jb
jb
popa
or
out
mov
dec
es
ins
bound
jbe
fdivp
fcmovbe
es
gs
pop
jo
fnstsw
jbe
jb
addr16
add
mov
arpl
ins
daa
jl
sub
into
sub
idiv
je
cmps
sbb
shl
xchg
pop
fs
daa
(bad)
out
loope
cmp
pop
je
jo
ins
leave
sti
pop
jb
arpl
jns
or
dec
pushw
das
add
and
jge
or
outs
pop
inc
clc
push
mov
push
(bad)
ret
mov
mov
push
and
sub
add
mov
dec
ret
push
cmp
clc
jbe
mov
mov
ja
mov
add
je
adc
jl
add
adc
or
sbb
es
mov
mov
inc
xlat
dec
mov
test
xor
or
xchg
movs
xchg
mov
test
adc
ins
call
iret
test
inc
stos
ret
les
outs
mov
mov
enter
nop
jp
cmp
adc
out
push
in
mov
add
out
and
mov
push
xor
jl
movs
rol
push
add
repnz
call
in
add
xchg
xchg
dec
push
in
or
adc
xchg
push
or
sub
aad
pop
xchg
cmp
imul
mov
sub
mov
out
imul
dec
xor
in
mov
xor
test
pop
pop
adc
adc
or
mov
and
fs
adc
adc
or
ret
jge
add
mov
jb
or
jb
jmp
sbb
lea
mov
jb
nop
xor
adc
inc
mov
mov
aas
sbb
sub
add
and
sbb
lea
pop
push
push
or
rcr
mov
cmps
and
mov
adc
sbb
adc
or
push
leave
enter
fsub
pop
sti
cli
push
jmp
jg
add
add
xor
movntps
xchg
fnstsw
fild
xor
xchg
dec
add
add
push
pop
or
or
pop
cmp
repz
mov
mov
js
lods
arpl
iret
repz
push
sbb
ja
imul
pop
push
out
dec
push
adc
pop
and
dec
gs
push
sub
or
ins
inc
sbb
pop
push
xor
mov
daa
pop
fisubr
push
pop
or
or
or
or
out
movups
adc
out
sahf
out
adc
out
sahf
sbb
sbb
and
and
repz
and
loope
xor
cmp
repz
mov
iret
repz
fucomp
call
loop
jns
cmps
and
inc
push
gs
out
sahf
jbe
cwde
test
out
fsubr
dec
sbb
lahf
out
sahf
sub
inc
push
pusha
outs
jecxz
inc
push
adc
and
xchg
retf
add
push
mov
push
adc
pop
pop
adc
push
xchg
dec
sub
in
retf
sbb
mov
or
pop
push
and
sub
dec
sub
xchg
retf
adc
cmp
adc
mov
sub
sbb
and
sbb
in
pop
sbb
sbb
pop
pusha
push
popa
pop
and
arpl
nop
retf
and
sbb
ror
or
push
das
mov
jmp
aaa
jne
test
bound
xor
je
fmul
icebp
inc
xchg
es
clc
jmp
push
fdivr
pop
mov
fimul
add
test
and
fiadd
outs
pop
push
stc
clc
push
push
nop
adc
add
dec
fbld
xchg
push
ins
jmp
mov
addr16
js
sub
aaa
ins
(bad)
int3
mov
push
pop
xchg
or
or
js
adc
loopne
push
and
mov
dec
pop
dec
lea
outs
cmp
and
pop
outs
es
add
in
sbb
add
inc
sub
mov
sbb
inc
dec
push
in
adc
jl
mov
adc
sub
in
sub
sub
lods
out
jl
mov
not
xchg
push
adc
add
dec
mov
inc
iret
mov
adc
sub
xchg
mov
jl
add
push
pop
jnp
inc
pop
add
mov
sar
or
or
addr16
sub
mov
push
je
mov
and
daa
sub
mov
xor
fldz
fs
push
imul
daa
ret
inc
xchg
xor
dec
sub
test
xchg
or
push
gs
ds
and
dec
scas
adc
adc
jb
pop
jne
adc
push
xor
add
arpl
mov
mov
mov
push
leave
add
sbb
push
pop
leave
push
jb
and
mov
sbb
inc
xchg
push
inc
adc
leave
add
xchg
test
mov
push
jno
sub
cs
and
adc
mov
add
add
icebp
xchg
or
xor
out
sbb
cmps
movd
push
rol
mov
or
ins
ins
stos
pop
cs
fcom
daa
popa
ror
in
push
nop
cwde
dec
add
sub
rcl
jnp
pop
push
mov
jne
sbb
outs
pop
cmp
cmp
pop
xor
mov
bound
push
dec
nop
add
pop
sbb
inc
xor
sbb
push
xchg
and
mov
push
mov
sbb
inc
jmp
fnstcw
iret
imul
push
pusha
cld
and
push
xor
ret
inc
cmps
test
nop
in
ret
cdq
push
bound
pop
sub
and
pop
cwde
jo
nop
bound
aas
lock
push
nop
xchg
add
push
push
stc
pop
sub
out
push
xor
push
adc
or
and
test
mov
mov
dec
not
adc
or
mov
xor
inc
test
out
jl
xor
daa
out
inc
inc
pop
or
or
es
dec
dec
add
ret
push
push
add
or
or
inc
or
push
dec
rol
pop
xchg
fs
cmp
mov
popa
inc
and
pop
enter
outs
lock
ins
mov
test
aam
adc
and
adc
es
leave
push
jb
sub
xor
inc
push
mov
popa
inc
push
sub
push
cwde
sub
in
and
das
mov
gs
jbe
add
add
xor
bswap
fcmovb
sub
mov
cs
add
movs
(bad)
xor
push
clc
sbb
or
dec
and
mov
jo
inc
push
ins
lods
rcr
lods
mov
out
test
movs
mul
xlat
ss
push
and
imul
jmp
add
adc
mov
push
call
punpckldq
cld
das
in
sub
mov
outs
sub
sub
pop
push
jo
mov
mov
add
adc
pop
jns
jl
adc
push
hlt
add
mov
cld
xor
ror
call
mov
and
test
cwde
loope
icebp
sub
nop
add
clc
mov
stc
pop
pusha
stc
ja
mov
ja
push
pop
mov
pop
xchg
sbb
popf
xchg
add
pop
pop
xchg
pusha
mov
repnz
adc
sahf
lar
add
dec
sbb
adc
add
xchg
pop
adc
aam
inc
leave
adc
sbb
repnz
jb
sbb
xchg
add
adc
repnz
cdq
adc
pop
adc
add
mov
and
xor
and
inc
pushf
and
cs
inc
dec
or
sbb
jg
inc
or
cmp
sbb
ds
inc
xchg
sub
push
jb
sub
sub
enter
cmp
sub
(bad)
mov
jb
sub
mov
inc
scas
das
cmp
nop
mov
adc
xchg
pop
and
leave
push
xor
aaa
cmp
xchg
pop
and
cmp
leave
push
cmp
add
xor
mov
push
sub
jbe
add
ret
rcl
stos
ja
cmp
push
push
jne
ret
or
cmovbe
push
push
pop
shr
add
cmps
sbb
fidiv
pop
adc
ss
add
pop
je
fdiv
int
add
pop
test
mov
inc
inc
jg
xchg
xor
out
frstor
retf
sbb
push
fadd
and
push
inc
(bad)
cmps
(bad)
jo
lods
pop
and
js
add
add
add
ds
hlt
push
inc
cld
push
jno
data16
xor
push
xor
push
adc
sbb
inc
cmp
push
sub
shr
cmp
fwait
(bad)
(bad)
fadd
cld
push
add
jnp
lea
jbe
push
js
adc
in
fdivp
fdivp
push
ins
lods
push
cwde
es
push
mov
push
sub
push
adc
pusha
pop
adc
mov
add
fidiv
adc
or
xchg
jmp
mov
push
gs
js
inc
movs
cmp
mov
out
and
push
out
mov
pop
push
push
xchg
pop
xchg
outs
pop
sub
mov
cmp
jl
popf
push
pushf
add
xchg
es
mov
add
cmp
hlt
adc
les
test
cmp
xchg
add
add
xor
jmp
pushf
push
and
push
sbb
out
push
adc
cmp
pop
icebp
sahf
jo
jne
cmp
sbb
adc
es
push
or
and
push
nop
add
push
push
rol
or
test
adc
add
add
adc
rol
sub
stos
mov
ret
push
jb
jb
sbb
lock
adc
sbb
pop
add
mov
xchg
and
and
and
dec
and
inc
sub
imul
enter
sub
add
add
push
das
div
mov
or
push
push
sahf
pop
mov
inc
dec
cs
mov
cmp
arpl
imul
dec
out
push
inc
adc
aad
and
ss
repnz
mov
adc
and
xor
aas
test
in
inc
mov
ror
clc
push
test
mov
test
into
push
ss
call
cmp
add
mov
ret
mov
mov
(bad)
cwde
jo
lods
pop
sub
inc
add
pop
push
inc
das
sahf
mov
sbb
or
nop
inc
and
xor
or
pop
and
loop
inc
jne
adc
and
shr
mov
ror
loop
rcl
inc
lods
or
cmp
loope
xchg
mov
inc
and
push
adc
adc
enter
loop
int3
cmp
dec
pop
jne
push
pop
stc
mov
loop
fst
popa
adc
xchg
stos
in
cmc
push
pop
mov
mov
inc
cld
sbb
xor
les
lds
add
add
lea
and
xchg
fs
das
cmp
and
inc
and
or
es
and
bound
jno
mov
cs
stos
sub
xor
inc
xchg
xor
cdq
dec
push
xor
adc
sbb
out
nop
pop
lods
push
adc
push
or
inc
jnp
repnz
inc
push
push
lahf
adc
add
retf
inc
pop
es
repz
mov
cmp
push
pop
xchg
js
fist
or
xor
push
add
inc
inc
ins
add
pusha
inc
test
pop
xchg
push
inc
and
loop
imul
adc
in
mov
leave
enter
adc
push
or
add
adc
push
push
and
sub
or
sub
cs
xor
or
xor
xor
xor
ret
cld
sbb
nop
sbb
es
mov
xor
xor
dec
pop
enter
adc
out
(bad)
fcomp
js
ja
or
pop
push
dec
jle
add
loop
cmps
or
pusha
or
xchg
pop
sub
push
add
fucomi
sub
dec
jmp
out
dec
fwait
mov
lahf
xor
pop
jb
rol
adc
dec
pop
push
push
retf
mov
mov
xchg
call
shr
mov
imul
xor
stos
pop
fbld
ret
leave
xchg
jae
sbb
push
sbb
or
add
sbb
dec
sub
aaa
test
fidivr
cmp
lods
lods
lods
inc
sahf
cmp
cmc
push
xor
test
call
and
jne
push
or
mov
(bad)
dec
movs
sahf
or
sub
push
sub
xchg
push
bnd
fcmovnu
mov
xlat
push
(bad)
push
push
cmp
sahf
cmps
push
fcmovnbe
shl
dec
pop
push
hlt
xchg
movs
push
dec
cmps
mov
add
sbb
mov
push
repz
les
or
(bad)
outs
cmp
das
xchg
add
ins
push
movs
movs
sub
xchg
xchg
jle
pushf
sub
push
out
aam
mov
fist
int3
jle
int
jmp
xor
fcmovnu
push
mov
jge
dec
push
rcl
mov
dec
dec
add
lahf
test
inc
dec
call
mov
sbb
sub
jmp
mov
push
xor
and
imul
and
dec
movs
inc
nop
jge
jmp
das
mov
test
movs
and
test
outs
jmp
imul
mov
push
into
and
bnd
test
clc
add
jl
sub
sbb
mov
nop
push
fs
xchg
inc
sub
or
push
lea
test
adc
or
cmp
sbb
jmp
sub
adc
daa
or
sbb
gs
cwde
cld
mov
or
sub
push
push
xchg
adc
sbb
mov
mov
mov
sub
push
add
push
add
adc
pop
mov
jo
inc
lods
mov
xchg
and
aaa
adc
mov
ins
push
or
movs
jnp
inc
fldenv
or
nop
mov
dec
push
add
sub
mov
and
popf
(bad)
scas
(bad)
and
or
push
or
xchg
call
jno
inc
inc
lahf
es
sbb
xchg
adc
jmp
xor
rol
xor
or
stos
add
cld
rol
add
inc
cmp
mov
pop
push
sahf
add
scas
gs
mov
mov
dec
sbb
pop
dec
pop
xor
and
push
cmps
add
test
and
rcl
sub
adc
xor
xchg
cdq
shl
pop
std
out
add
fiadd
cmp
fwait
out
fmul
outs
mov
int3
dec
imul
inc
daa
ins
or
js
clc
movzx
ins
outs
pop
push
pop
das
dec
cmp
loope
cmps
addr16
mov
or
mov
add
jmp
adc
cmps
sbb
sub
add
retf
out
add
int3
movs
(bad)
xchg
scas
outs
or
push
add
(bad)
rsqrtps
add
mov
xor
mov
rol
add
add
cmp
lock
xor
add
sub
mov
jno
dec
cmp
sti
cs
mov
js
pusha
xor
pop
inc
clc
pop
mov
repz
pop
or
add
or
push
or
dec
or
dec
movs
pop
pop
mov
ja
xchg
ins
or
fidiv
mov
mov
lock
xchg
mov
adc
test
adc
xor
cmp
adc
gs
scas
movs
test
arpl
xchg
inc
and
dec
xlat
idiv
jae
mov
stc
mov
outs
outs
out
inc
or
movs
cmp
sbb
sbb
dec
xchg
mov
popa
lock
mov
xchg
or
sbb
imul
push
nop
cmp
in
dec
in
sub
xor
inc
retf
dec
pop
inc
push
mov
mov
add
adc
les
push
push
(bad)
sub
clc
cmp
daa
mov
data16
push
adc
adc
sahf
mov
dec
adc
inc
mov
xchg
dec
jl
sub
test
mov
dec
jle
or
scas
jns
fcom
nop
sbb
mov
and
mov
or
or
and
and
mov
pop
add
pop
leave
lds
fmul
(bad)
and
je
mov
jo
(bad)
xor
daa
adc
out
fst
(bad)
cmp
and
sbb
and
sti
sbb
pop
adc
adc
movs
mov
mov
adc
xchg
aad
in
sub
int3
addr16
push
push
fimul
pop
mov
xchg
mov
popf
stos
xchg
adc
iret
or
cmp
jae
mov
leave
test
and
adc
pop
movs
(bad)
imul
inc
sar
sahf
push
out
sub
rcr
popa
imul
and
lahf
dec
sub
test
push
dec
(bad)
sbb
mov
mov
iret
lods
add
jno
or
in
inc
push
mov
sub
sar
add
inc
xor
in
push
xor
fsubr
or
adc
cmp
push
inc
jne
(bad)
xor
add
imul
push
aad
dec
cmp
jg
dec
mov
and
(bad)
add
imul
nop
and
mov
add
sbb
(bad)
cmp
sbb
and
dec
xchg
cld
push
cs
les
mov
mov
lock
push
mov
fsubr
arpl
xchg
dec
mov
inc
add
cmp
or
adc
sbb
ret
xor
leave
enter
sbb
adc
leave
enter
pop
mov
or
sub
mov
inc
inc
pop
pop
sbb
fcomp
add
jl
mov
inc
add
cld
mov
xchg
test
gs
adc
mov
and
sar
pop
inc
xor
or
ror
adc
adc
or
dec
mov
xchg
das
scas
mov
and
xor
and
xchg
cmp
cdq
adc
pop
dec
xor
push
cmp
add
push
pop
xchg
push
jge
ds
mov
push
pusha
jg
divps
ret
push
sbb
mov
sbb
cmp
push
cmc
daa
leave
clc
add
test
ja
dec
add
hlt
and
push
fldenv
cmp
push
daa
aad
mov
mov
inc
lods
or
lock
fadd
jmp
je
add
jmp
add
clc
mov
faddp
add
sti
add
ret
or
popa
cmp
push
inc
add
ret
cmp
jns
sub
mov
aam
add
xor
retf
outs
xchg
call
in
pop
adc
pusha
dec
out
enter
or
mov
mov
cmps
xchg
sub
pop
and
sub
xchg
xchg
add
imul
ja
dec
popf
mov
hlt
adc
iret
test
adc
(bad)
add
push
or
inc
shl
add
cmp
pop
adc
arpl
mov
sub
lahf
loop
in
imul
js
xchg
pop
pushf
and
idiv
and
out
cmp
icebp
mov
and
or
xchg
add
or
cmps
adc
fst
pop
jmp
mov
dec
lods
inc
xchg
push
push
push
scas
sbb
ret
sub
sub
push
movs
cmp
(bad)
rol
xchg
mov
fs
adc
aaa
addr16
pusha
adc
add
mov
mov
inc
mov
clc
xor
ret
aam
bound
cmp
jmp
pop
dec
pop
pop
mov
aaa
dec
inc
add
xchg
ds
test
fwait
xchg
push
pop
and
ret
inc
ret
or
jno
dec
add
cli
push
addr16
mov
test
cmp
jge
mov
push
test
pop
sub
mov
mov
xchg
mov
retf
les
adc
mov
sub
loope
fimul
pop
imul
dec
popf
call
jg
adc
rol
jge
inc
bound
pop
push
and
adc
add
xor
adc
mov
jl
das
jbe
or
and
sbb
mov
mov
leave
and
sbb
mov
jmp
or
pavgb
lds
and
inc
pop
rcr
push
add
cld
mov
inc
and
and
adc
push
jmp
sub
pushf
jmp
leave
daa
add
lea
fistp
sub
in
mov
sbb
mov
sbb
ret
rol
add
bound
inc
and
adc
and
inc
mov
adc
gs
mov
sahf
out
adc
adc
add
pop
pop
xor
mov
jg
mov
adc
push
in
cs
adc
dec
das
(bad)
out
mov
sbb
pop
xchg
sub
sbb
lea
retf
ror
push
add
sbb
fwait
pop
add
push
xchg
push
mov
jmp
popa
icebp
mov
outs
add
and
movs
dec
inc
and
pop
and
es
aam
add
mov
std
in
dec
or
and
and
jge
popf
adc
jb
dec
mov
mov
test
ds
cmps
in
cli
add
push
add
sar
adc
pop
xchg
rcr
pop
add
cmp
xchg
(bad)
or
or
test
pusha
push
mov
and
int
mov
mov
or
scas
cmp
loope
rcr
test
mov
arpl
sub
out
sbb
adc
and
xchg
test
xchg
cmp
push
int3
cmps
push
add
(bad)
adc
popa
mov
and
jb
les
xsaves
xor
sbb
pop
sub
adc
add
rcr
(bad)
int
mov
inc
adc
and
and
jp
sub
push
mov
ss
ror
jne
fst
and
adc
or
and
and
xlat
js
loop
inc
lea
out
cmp
adc
loopne
sub
xchg
or
dec
inc
es
or
adc
addr16
sub
dec
clc
rcl
pop
mov
mov
sbb
or
add
sahf
loope
xchg
mov
sbb
mov
xchg
popa
inc
mov
es
xor
imul
cmp
je
push
ds
mov
cmps
test
dec
adc
test
dec
pop
es
jo
and
clc
cmp
push
sub
iret
inc
push
push
int
mov
push
dec
dec
xlat
adc
or
test
or
sbb
jmp
loope
mov
loop
mov
inc
adc
sbb
jg
adc
and
mov
push
mov
cwde
inc
sbb
ffree
add
add
cmp
jno
or
or
mov
mov
mov
loope
dec
or
pop
jmp
jge
push
cmp
dec
js
clc
jecxz
aad
jg
cmps
xor
ja
sub
adc
inc
mov
rol
mov
nop
stos
add
add
pop
(bad)
mov
xchg
and
sub
clc
dec
lds
mov
push
xor
jmp
adc
pop
nop
(bad)
aas
ret
and
scas
inc
dec
(bad)
(bad)
adc
and
inc
mov
push
add
push
sbb
fld
mov
adc
inc
or
inc
mov
inc
or
push
or
push
pushf
in
xchg
xchg
jle
adc
and
cli
xchg
addr16
aaa
ja
ret
cmp
jmp
xor
pop
pop
test
cmp
push
lods
shr
cmc
or
and
test
cdq
ins
add
nop
es
xor
xchg
add
jne
mov
inc
mov
add
mov
or
rcr
adc
clc
sbb
add
jle
and
out
cmp
jmp
dec
sbb
fs
dec
inc
xchg
cmp
fisttp
(bad)
adc
dec
push
sub
in
mov
fld
daa
fisttp
jne
fwait
adc
push
xchg
out
cmp
xchg
outs
adc
icebp
mov
gs
sub
aas
and
xor
cwde
adc
adc
cmc
push
lods
push
arpl
jns
push
jnp
add
inc
shl
add
inc
adc
sbb
xchg
xor
adc
fimul
(bad)
mov
daa
add
push
int
or
sbb
mov
dec
xchg
addr16
mov
add
xor
outs
push
inc
mov
inc
into
lds
and
inc
cmp
mov
xchg
push
test
push
loop
loop
fild
mov
cmp
or
inc
ss
mov
cwde
imul
push
pusha
pushf
jbe
push
rcl
ss
pop
and
push
lahf
and
outs
jae
dec
cwde
ret
mov
je
mov
outs
push
adc
add
pusha
sub
inc
pusha
scas
inc
fldenv
iret
ins
inc
xor
in
jb
inc
cmp
pop
in
or
mov
mov
loopne
aas
hlt
pcmpeqd
jb
cmp
aas
fs
jb
jb
and
cmp
div
cmp
and
sub
sub
inc
and
or
adc
adc
stc
pop
add
or
mov
mov
sahf
out
sahf
fabs
jmp
mov
mov
js
mov
sbb
push
enter
dec
push
pop
les
pop
fcomp
pop
add
es
dec
jne
iret
mov
inc
sub
adc
add
mov
mov
or
dec
add
sub
adc
adc
jns
lea
mov
dec
pop
inc
sbb
xor
push
cmp
dec
adc
mov
call
clc
into
push
xchg
xchg
and
cld
or
adc
sub
lods
pop
nop
mov
sub
in
add
adc
push
add
push
add
dec
cld
cmp
(bad)
scas
pop
test
mov
or
loopne
loop
sub
mov
mov
xchg
dec
leave
xchg
mov
xchg
or
nop
sub
pop
mov
cmp
pop
or
jns
inc
cmp
ret
or
movs
xchg
jo
dec
and
cmp
aas
dec
push
mov
(bad)
pusha
jmp
adc
adc
and
add
add
sbb
push
(bad)
fs
dec
arpl
sbb
scas
add
mov
jno
js
push
test
jb
xor
jno
xchg
in
lock
cmps
int
dec
sub
and
inc
pop
jmp
mov
jp
sahf
in
push
in
loope
cmp
pop
mov
inc
lock
pop
fs
push
out
sbb
aaa
sbb
xchg
jo
sub
adc
cmps
movs
add
xchg
and
add
mov
cmp
inc
fucomip
stc
bound
or
jecxz
sti
(bad)
mov
sub
sub
and
sub
push
push
mov
fistp
cmp
sub
sub
and
xor
(bad)
push
mov
sub
das
stos
ins
mov
and
push
inc
dec
in
adc
push
xchg
push
xcrypt-ecb
cmps
pop
je
push
mov
dec
mov
test
(bad)
xlat
adc
imul
aas
push
cs
lock
(bad)
dec
jmp
mov
adc
push
inc
mov
addr16
ins
mov
mov
ret
fldcw
push
mov
out
lds
inc
mov
or
(bad)
adc
push
stc
fnstsw
mov
ins
jo
inc
call
mov
cmps
mov
dec
or
mov
xchg
mov
adc
and
sbb
call
fldln2
xlat
mov
sbb
imul
and
and
les
out
dec
fstp
mov
lea
or
jge
cmp
push
addr16
sbb
and
push
je
sbb
add
int
and
mov
out
xchg
or
or
or
dec
sbb
xor
add
mov
outs
mov
shl
ds
adc
add
or
rol
pop
inc
lock
fisub
dec
inc
imul
scas
adc
mov
rol
pminsw
sub
jb
in
sub
inc
pop
jg
add
xchg
lock
and
mov
push
mov
sbb
pop
mov
add
mov
mov
mov
int3
nop
aam
dec
out
ins
push
push
enter
mov
add
imul
pop
xchg
call
push
add
push
clc
rcl
loopne
test
loop
sbb
std
ds
mov
dec
test
and
add
fcomp
or
pop
adc
sub
jb
adc
enter
ins
jp
je
out
xchg
inc
sbb
stos
adc
mov
xor
rol
mov
add
nop
xor
call
xor
popa
imul
pusha
cmp
push
and
add
sbb
dec
xchg
xchg
push
in
sbb
xor
sbb
jnp
mov
mov
into
dec
dec
mov
lock
or
(bad)
mov
adc
sbb
ret
cmp
loop
jmp
enter
cmc
or
inc
loope
xchg
pop
push
push
mov
inc
mov
mov
loopne
mov
pop
pusha
cmp
add
inc
or
test
enter
jne
mov
add
je
adc
mov
and
pop
(bad)
sbb
and
jo
test
inc
push
jns
and
test
out
fild
lods
pusha
mov
sub
data16
inc
mov
shr
shl
push
xor
retf
add
and
xchg
xchg
rcl
push
xchg
popa
mov
add
xchg
sub
sbb
cs
jb
outs
adc
xchg
aad
movs
or
je
sub
push
and
sbb
mov
sbb
push
aas
movs
cmc
mov
xor
xor
scas
hlt
jns
cmp
push
push
push
pop
or
mov
mov
adc
test
fiadd
ds
jl
nop
inc
add
add
ficom
add
sbb
sub
cmp
push
lods
rol
push
cmps
test
in
inc
sahf
out
adc
aam
inc
ss
js
nop
sbb
jg
push
and
or
pushf
cwde
push
sub
ret
loope
or
inc
js
call
pop
cmp
jo
cmp
pop
pop
inc
add
je
fdivp
mov
sbb
jns
(bad)
adc
jnp
in
cmp
pop
sub
inc
je
pop
xor
xchg
in
add
push
rol
adc
pusha
pop
shl
test
rcr
js
in
sub
add
mov
sbb
pop
lods
sti
sbb
push
pop
dec
movhps
add
rcr
jb
mov
adc
dec
outs
inc
mov
inc
add
mov
push
adc
mov
and
imul
cld
inc
add
push
ins
bound
xor
push
or
push
ja
inc
nop
cmp
jg
fimul
or
or
adc
cmc
or
jne
mov
sbb
in
arpl
pop
jbe
jbe
xchg
mov
or
data16
mov
pusha
idiv
adc
or
fcom
inc
lock
pop
movaps
pop
cs
imul
imul
or
add
aam
cmp
push
inc
mov
or
xchg
out
mov
inc
inc
mov
pop
add
test
imul
dec
aad
mov
jae
jns
adc
add
fucomi
push
jp
add
lds
jbe
add
add
inc
outs
sub
arpl
push
cs
outs
push
mov
nop
out
std
dec
mov
pusha
adc
cmp
pop
lods
jo
add
out
inc
ror
inc
jnp
xchg
or
push
or
and
adc
pop
xor
into
add
lea
out
cmps
jo
invd
inc
lea
and
or
add
popa
sub
dec
(bad)
or
mov
aam
pop
push
add
aas
lods
call
add
sub
push
movs
(bad)
test
lds
mov
pop
hlt
fisttp
add
add
ss
test
mov
stos
(bad)
xchg
mov
add
mov
and
jnp
sub
ja
inc
xor
ja
push
sbb
sub
xchg
pop
popf
shl
or
lods
push
dec
ret
shr
or
cmp
cmp
sbb
test
retf
mov
icebp
dec
mov
sbb
pusha
or
or
fidivr
xor
(bad)
and
or
in
mov
int3
and
loope
sub
pusha
pop
pop
pop
xor
loopne
push
pop
leave
dec
pusha
push
adc
iret
out
mov
stos
jae
sbb
test
xchg
movs
dec
mov
sbb
mov
int
popa
imul
loopne
loope
addr16
push
(bad)
lods
arpl
lods
sbb
and
push
aas
inc
loopne
adc
or
xor
mov
adc
inc
rcl
xlat
jecxz
adc
jmp
xor
xchg
loopne
imul
add
bound
lea
jb
loope
or
jbe
xchg
(bad)
sub
push
xchg
shl
xchg
arpl
push
loopne
and
add
(bad)
push
scas
out
and
adc
and
rcl
add
push
int
ret
mov
popa
inc
add
push
inc
cwde
sub
cmovno
lea
test
cmp
jp
push
push
jo
push
mov
sbb
repz
lahf
jo
jmp
out
xchg
loopne
sub
fadd
mov
shl
gs
test
test
pop
(bad)
call
push
adc
adc
inc
push
adc
int3
fwait
das
mov
nop
add
push
outs
pop
xor
mov
xchg
and
jb
pop
(bad)
dec
ins
cmps
call
sub
inc
add
add
or
xchg
pop
xor
mov
mov
inc
sar
cmps
sbb
cmp
inc
mov
popa
mov
(bad)
in
fsubrp
(bad)
(bad)
(bad)
jmp
cwde
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fmul
push
lock
(bad)
fiadd
push
xor
call
call
call
call
call
call
dec
or
cld
aad
into
dec
dec
dec
xchg
repnz
leave
div
pop
(bad)
push
rol
ret
push
dec
repz
cld
int
imul
fs
mov
pushf
(bad)
int3
movs
repz
push
sbb
lock
push
adc
fdivp
mov
sub
inc
push
aam
push
inc
ins
ss
inc
mov
pop
mov
cmps
or
data16
fnstcw
push
mov
iret
iret
shr
fsub
lock
sahf
cmps
jge
cmp
mov
cmp
ror
test
pusha
popf
ret
fisub
push
hlt
cld
dec
cwde
fcomp
out
jo
mov
test
fidivr
mov
cs
mov
push
sub
sbb
pop
sbb
fwait
call
or
test
push
push
push
push
push
ins
sub
imul
adc
add
cs
or
inc
arpl
popa
test
xor
pop
or
or
push
add
dec
cmp
leave
jo
outs
push
nop
pop
scas
enter
xor
or
inc
imul
lods
and
mov
rcl
add
movs
inc
jle
cs
out
addr16
(bad)
stos
and
fsubr
add
xchg
and
neg
or
repz
mov
adc
push
or
sahf
sub
or
xchg
inc
test
push
inc
cmp
stos
mov
dec
jb
push
dec
popa
je
adc
cmps
or
test
xor
rcl
jne
sub
adc
jg
rcl
cmps
cmp
add
nop
xchg
push
aaa
std
cmps
mov
xchg
inc
leave
lods
sub
or
adc
out
pop
adc
leave
dec
push
addr16
sbb
pop
jmp
jae
in
xchg
fsub
or
xchg
in
and
or
dec
jnp
es
and
or
pop
loopne
jle
imul
xor
dec
imul
ins
aam
sub
or
pop
ret
adc
daa
jl
add
xor
add
jo
rol
bound
jns
sbb
test
jo
fwait
or
adc
cmps
fcom
sub
pop
and
jns
add
in
push
or
add
rol
stos
and
sub
mov
push
mov
fs
lldt
add
inc
pop
inc
jbe
add
inc
adc
sub
sub
ss
out
mov
xor
add
mov
mov
add
das
in
dec
add
repnz
test
pop
cmp
cli
adc
sbb
sbb
adc
jnp
aaa
mov
mov
adc
test
cmp
inc
mov
mov
dec
push
mov
std
(bad)
push
das
mov
mov
add
push
mov
xor
mov
mov
cmp
sbb
repnz
jmp
wbinvd
mov
inc
inc
inc
inc
push
mov
into
push
mov
(bad)
adc
stc
ret
mov
jns
adc
push
push
fdivr
repz
repz
imul
aam
jl
iret
clc
sbb
movs
fs
mov
addr16
iret
call
dec
push
ins
add
add
push
test
out
imul
push
and
push
ins
push
pop
sahf
mov
mov
push
call
sub
int
repz
cmp
cli
adc
and
sahf
out
sti
add
inc
dec
push
xor
out
pop
mov
and
mov
pusha
loopne
or
mov
repz
mov
pusha
cs
push
jo
and
mov
es
fdiv
jmp
not
(bad)
add
add
inc
mov
and
push
push
(bad)
adc
aam
xor
push
push
into
jnp
int
cld
test
je
push
add
lahf
cmps
mov
adc
push
movs
sbb
test
mov
int
data16
add
nop
push
inc
in
ss
adc
cmp
jl
adc
pop
(bad)
adc
push
stos
push
enter
cmp
sub
or
rol
xchg
fcomp
pop
adc
push
or
add
mov
mov
dec
es
pop
test
mov
adc
and
adc
into
push
or
add
and
scas
dec
enter
pop
fcom
in
add
adc
iret
add
xor
adc
sbb
cmps
push
lock
xor
inc
dec
in
xor
push
push
jb
xchg
ret
jmp
xlat
ins
jb
js
js
xchg
jae
push
pushw
sbb
nop
daa
mov
pusha
shl
(bad)
int3
sub
in
js
pusha
mov
dec
jl
je
fdivr
adc
fiadd
pusha
inc
push
sub
and
sbb
and
adc
and
ins
test
jmp
enter
sub
jl
nop
fmul
js
inc
xor
cmp
add
pop
das
out
aam
bound
mov
mov
or
(bad)
mov
lea
das
or
ds
add
xchg
or
push
sub
add
pop
cmp
or
or
add
or
call
push
addr16
inc
inc
mov
int3
fcmovnb
scas
call
inc
imul
or
test
pop
pop
call
arpl
aam
inc
xchg
call
imul
sub
stc
xchg
xor
jno
jp
push
sub
sub
mov
adc
add
call
add
xor
icebp
push
inc
rcr
shl
pop
mov
or
repnz
inc
out
loopne
add
fnstenv
xor
push
pop
enter
aam
dec
(bad)
or
xor
xor
cmps
je
je
fdivr
outs
pop
mov
and
sub
mov
jno
or
or
or
adc
or
sbb
sbb
mov
call
dec
mov
sahf
add
jo
jbe
cmp
cmp
adc
and
cmp
jg
loope
fcomp
jl
je
and
movs
jo
mov
(bad)
cmp
fs
cmp
clc
push
mov
cmp
cmp
inc
mov
mov
dec
cs
dec
mov
adc
cmp
mov
ss
inc
out
push
in
movs
inc
popa
xor
add
dec
fcomp
adc
clc
or
push
jmp
mov
sbb
pop
cld
mov
push
dec
mov
sbb
movs
mov
xchg
nop
std
push
adc
mov
push
push
and
dec
adc
sbb
js
push
add
ss
sub
adc
jns
or
xor
sti
inc
mov
ret
aas
push
or
in
sub
or
adc
adc
xor
jge
lea
pop
test
lods
xchg
shl
or
jne
(bad)
imul
sbb
lock
jne
sub
inc
dec
add
jmp
mov
sbb
pop
ror
adc
not
and
xchg
fstp
add
and
jb
sub
ja
xlat
mov
lock
mov
inc
or
stos
cmps
test
div
dec
cwde
sbb
xchg
inc
push
inc
pop
outs
pop
das
daa
push
jo
daa
or
pop
pop
or
clts
xor
and
outs
pop
bound
dec
push
jo
inc
daa
adc
scas
dec
shl
mov
popa
and
dec
not
add
sub
add
sbb
das
dec
mov
adc
mov
push
add
sub
push
aam
outs
daa
test
mov
mov
cdq
push
cwde
and
mov
sbb
inc
fimul
add
retf
dec
test
outs
xlat
and
xchg
lea
mov
fcomip
xchg
jl
test
sbb
add
imul
mov
pop
mov
test
out
sub
or
imul
fmul
push
mov
bound
sub
push
popf
mov
scas
fdiv
push
aaa
add
and
push
push
nop
xchg
js
or
bound
xchg
outs
and
xor
push
outs
adc
or
clc
imul
add
cmp
jl
out
push
cmp
cmp
lock
inc
or
retf
test
cmps
inc
xchg
sub
inc
xchg
ficomp
xchg
add
pop
rol
js
fs
xlat
lock
mov
dec
xor
pushf
or
add
xchg
mov
inc
adc
sub
adc
mov
xchg
icebp
pop
pop
dec
dec
jne
dec
push
cmp
jmp
mov
es
imul
sbb
push
or
push
dec
push
mov
pop
adc
or
adc
mov
cmps
lods
shr
or
adc
cmps
imul
cmps
imul
push
scas
jl
ror
inc
lea
adc
push
pop
pushf
ret
test
arpl
mov
pop
sub
or
fidivr
add
fisub
mov
(bad)
jg
cmp
xchg
jg
sub
scas
xchg
sbb
add
inc
add
sub
ja
xchg
mov
adc
mov
dec
sbb
ins
or
fsubr
pop
int
jp
sub
in
adc
pop
addr16
mov
sub
test
push
adc
adc
jmp
cmp
pop
inc
movs
xchg
stos
inc
mov
push
pop
pop
cmp
fs
imul
mov
sub
or
jmp
out
mov
ss
dec
add
sbb
enter
or
push
iret
scas
adc
cmp
arpl
xor
lods
inc
pop
cmp
push
adc
inc
inc
fild
cmp
adc
or
mov
push
cmp
xor
rcr
inc
mov
mov
mov
dec
out
out
fs
imul
call
daa
ror
out
imul
dec
lea
push
jp
and
aam
mov
pop
sbb
sbb
push
xlat
add
fs
push
sbb
dec
xchg
jo
sbb
sbb
cmp
mov
cmc
aam
sbb
inc
inc
js
inc
inc
iret
push
pop
lds
call
mov
aaa
and
pusha
push
pop
mov
ds
cmps
push
ins
ins
push
cs
movs
imul
pop
dec
cld
and
test
pushf
repz
addr16
in
test
(bad)
test
ror
cdq
mov
push
cs
mov
jecxz
mov
xchg
nop
lock
adc
pop
scas
jne
dec
push
sub
fcom
cmps
icebp
leave
in
aaa
add
jno
ins
and
rcl
adc
cmovle
ficom
pop
add
inc
mov
(bad)
jae
sbb
fisubr
or
out
cmps
repz
mov
xchg
sub
arpl
add
inc
fiadd
inc
inc
and
push
add
or
mov
add
jb
stos
add
scas
cli
mov
jmp
cmp
sub
or
fwait
mov
and
jmp
les
pusha
loope
add
(bad)
enter
add
mov
push
adc
mov
and
in
sti
adc
or
cmp
xchg
push
or
jecxz
push
dec
and
cmp
or
not
push
push
call
inc
imul
and
mov
pop
jne
jnp
movs
in
sub
and
test
sub
add
add
adc
mov
or
not
aam
jae
mov
sub
dec
adc
mov
jge
ret
adc
dec
and
xchg
sar
adc
daa
xchg
mov
mov
xchg
je
or
fiadd
push
js
xchg
add
xor
cs
js
gs
push
dec
jl
and
js
cwde
and
stos
ret
xchg
lock
and
push
out
mov
pusha
aad
mov
add
scas
iret
xor
out
adc
mov
and
inc
mov
xor
and
ret
clc
mov
push
cmp
push
xchg
jp
jno
xor
(bad)
cmp
push
cmp
lock
bound
gs
xor
loop
xor
out
hlt
dec
jle
inc
jo
inc
or
sub
sbb
add
push
fisub
dec
fmul
add
and
test
and
lods
and
outs
xor
test
adc
movs
jno
or
mov
and
jg
adc
rcl
dec
popf
sub
jl
push
(bad)
cmp
or
and
xchg
cmp
rcl
lds
dec
cmp
sub
mov
sbb
mov
movs
sbb
or
call
mov
mov
dec
xchg
add
dec
add
push
push
push
jne
sub
push
pop
inc
inc
pop
fild
jp
xchg
jle
mov
inc
test
pop
pop
add
imul
bound
sbb
jmp
scas
dec
inc
pop
call
jge
loope
pop
inc
and
jl
fild
mov
push
shl
jne
add
out
gs
sbb
lods
or
pop
fimul
xor
dec
sbb
push
xchg
push
pop
or
mov
shl
cdq
sub
jae
cmp
adc
mov
mov
fistp
ds
pusha
pop
pop
adc
jp
scas
adc
cmp
pop
fdiv
test
xchg
inc
push
les
xchg
mov
xchg
je
add
ret
mov
lea
bound
cmp
sbb
sti
shr
(bad)
test
(bad)
jge
mov
sub
mov
sub
fs
push
fwait
ret
aaa
sub
xor
sub
cmps
nop
in
es
rol
out
inc
pop
xchg
daa
les
pop
ja
or
pop
and
cwde
lea
add
in
add
adc
sbb
cwde
inc
mov
jns
in
out
add
int3
ja
mov
push
dec
mov
cmp
adc
cwde
and
xchg
popf
mov
inc
pop
nop
mov
in
mov
xor
adc
scas
fst
adc
xor
(bad)
fs
mov
mov
rcl
xor
add
sbb
or
or
and
push
and
(bad)
std
mov
les
fcom
xor
jo
dec
cmovno
xor
and
or
pop
pop
jl
adc
inc
xor
cdq
test
xchg
mov
aas
sbb
push
xor
lock
cmp
ror
(bad)
add
fisub
mov
mov
sbb
pop
dec
nop
pop
outs
sbb
scas
fucomp
je
sbb
mov
into
stos
sub
or
stos
jno
in
xor
xor
js
or
sub
das
iret
jge
dec
fbstp
xor
cmp
push
pop
bound
fsubr
push
fidiv
movs
mov
or
out
aam
je
cmp
nop
test
pop
mov
sub
test
jp
adc
add
mov
icebp
dec
adc
or
mov
out
and
imul
sbb
jns
sub
imul
sub
cmp
or
out
sub
imul
imul
dec
xor
sbb
or
(bad)
popa
jnp
pop
sub
mov
push
adc
pop
jne
jo
inc
cmovb
xchg
loope
(bad)
bound
and
es
in
in
ins
ror
sbb
mov
and
sub
nop
inc
xchg
fdivr
dec
add
sar
xchg
and
neg
dec
mov
cmps
xchg
pop
jle
xchg
jecxz
sbb
call
cmp
lea
xchg
mov
sub
pop
imul
xor
imul
retf
dec
jo
xor
pop
adc
sub
test
sti
pop
mov
call
fisttp
outs
push
dec
sub
add
inc
inc
add
mov
jno
dec
push
sbb
out
dec
imul
jl
push
adc
inc
jo
or
pop
shr
sub
scas
inc
into
push
push
jne
ss
push
jle
push
ret
add
imul
inc
sub
cwde
or
lahf
jbe
aas
push
xor
xor
mov
(bad)
ds
daa
pop
(bad)
(bad)
add
mov
add
add
test
repnz
jmp
xchg
mov
add
inc
xor
adc
push
adc
je
outs
sbb
adc
xchg
imul
pop
ret
add
ins
cmc
sub
and
inc
xlat
cmp
adc
je
or
cli
jmp
jno
mov
and
fsub
je
cwde
fsub
repnz
dec
movs
mov
mov
mov
mov
xor
je
pop
scas
mov
test
adc
push
cmp
popa
sbb
jl
jno
iret
add
inc
sub
pusha
test
or
ds
add
adc
mov
or
pop
cwde
pop
mov
sbb
push
mov
or
add
loopne
xchg
or
and
push
data16
or
sub
adc
cmp
add
lea
cmp
mov
mov
xchg
add
xchg
and
sbb
and
and
not
outs
adc
dec
fsubp
fdiv
push
inc
imul
movs
ror
xor
loopne
jmp
daa
dec
ret
sbb
jecxz
fwait
(bad)
push
mov
rcl
adc
sbb
dec
imul
setae
call
ss
cmc
push
enter
ss
xor
add
dec
mov
out
xchg
adc
(bad)
stos
mov
sbb
jge
add
aas
push
jp
jmp
hlt
ins
inc
sub
push
(bad)
sub
sub
add
ret
sbb
jmp
sub
xchg
pop
xor
lock
ins
add
xchg
leave
clc
pop
mov
mov
pop
sbb
fnstenv
rcr
or
xor
mov
pop
jmp
mov
dec
inc
inc
mov
cmp
push
lahf
dec
out
cmp
mov
leave
hlt
xchg
xchg
inc
push
scas
pop
lds
push
hlt
imul
xor
inc
jo
setns
or
mov
lahf
pop
mov
daa
add
outs
push
dec
inc
repz
pop
dec
imul
or
sbb
les
add
push
test
fdiv
or
jge
xchg
push
test
and
push
adc
mov
push
add
inc
ja
hlt
aas
daa
or
shr
push
inc
call
fsub
cmp
and
inc
pop
cmp
movs
jns
rcl
dec
xor
fimul
jg
or
push
jg
pop
les
push
pop
pop
outs
or
outs
xlat
add
pusha
xor
loop
and
push
adc
or
pop
or
mov
hlt
jo
or
sub
fild
mov
add
jmp
cmp
test
test
jno
or
adc
ins
data16
xchg
or
cmp
push
or
dec
sub
adc
pop
je
out
(bad)
xchg
mov
sar
pop
je
cmp
and
xor
sbb
jg
call
adc
dec
mul
retf
dec
ins
mov
or
cmp
stc
cwde
rol
jbe
aaa
or
repz
(bad)
push
jl
(bad)
cmc
sbb
cmp
stos
sub
(bad)
fstp
xchg
cs
push
in
mov
jle
xchg
test
mov
fwait
push
outs
cdq
std
fadd
fs
adc
in
inc
ret
(bad)
and
sub
retf
add
pop
jb
cdq
add
push
pop
pop
ret
sbb
and
fs
ja
popa
add
mov
(bad)
rcr
rcr
jbe
shl
push
addr16
and
jl
and
pushf
sbb
addr16
nop
sbb
and
fist
loopne
inc
push
scas
addr16
mov
and
push
adc
inc
inc
mov
pop
aaa
inc
ja
xchg
ror
clc
adc
lods
scas
sbb
iret
mov
mov
jg
(bad)
nop
xor
add
mov
dec
nop
mov
out
xchg
adc
leave
add
addr16
pusha
add
jne
pop
in
jnp
inc
je
sbb
xchg
jne
cmp
mov
push
add
call
cmp
add
daa
xor
ret
adc
xor
aas
xor
cmp
fimul
xchg
cmp
sub
enter
sub
or
enter
push
push
aam
dec
and
cli
add
inc
mov
retf
mov
jmp
jmp
mov
mov
add
pop
inc
add
repz
pop
adc
(bad)
idiv
pusha
push
pop
add
jp
jmp
mov
imul
mov
lods
mov
es
psubb
sbb
mov
push
jl
cmp
aas
int
or
and
sub
rcr
movs
mov
adc
int3
std
cmps
sbb
(bad)
cmps
mov
adc
adc
je
add
ins
push
push
xchg
add
test
sub
pop
jmp
ficom
and
(bad)
xor
and
test
daa
mov
mov
xchg
addr16
mov
call
inc
xor
sub
lea
lock
outs
mov
mov
pop
dec
or
pop
call
cmps
inc
inc
addr16
xchg
pop
ins
xor
xor
xlat
adc
mov
cmp
or
arpl
push
sbb
sbb
cli
outs
adc
ret
repnz
aam
mov
cs
push
fldcw
adc
push
mov
es
or
ret
cmp
hlt
ret
leave
out
shl
out
ins
rcl
xchg
int3
ds
push
test
and
enter
test
sbb
call
pop
push
daa
dec
dec
push
or
in
clc
xlat
aaa
xlat
push
mov
cld
push
arpl
xor
sar
push
or
or
xor
cmp
dec
cmps
repz
out
mov
jne
jle
cmp
popa
call
jne
add
fisubr
mov
push
imul
push
das
push
sub
jb
std
nop
jno
mov
jne
jbe
mov
jg
pop
mov
push
je
movs
or
jge
shr
xchg
mov
fild
nop
ret
jmp
adc
and
test
je
push
add
push
dec
xor
adc
push
inc
jmp
inc
(bad)
or
rcl
retf
push
mov
cld
test
jb
jae
jbe
jnp
mov
add
adc
dec
jne
push
or
dec
rcl
and
push
push
push
out
xchg
lock
adc
inc
inc
mov
mov
dec
mov
retf
inc
ret
ret
or
inc
add
dec
dec
pop
cmp
or
inc
pusha
add
addr16
and
scas
adc
mov
and
ret
jmp
rcl
inc
ins
(bad)
loop
cs
ins
sbb
les
into
mov
dec
cs
popf
mov
pop
push
adc
adc
dec
or
or
dec
mov
push
rcr
dec
sub
add
push
test
jecxz
add
mov
and
inc
mov
mov
dec
xchg
daa
adc
push
xchg
jne
out
sbb
inc
dec
das
pop
dec
xor
rcl
(bad)
inc
loopne
mov
or
ffreep
inc
retf
inc
dec
add
aad
mov
dec
push
xchg
dec
add
xor
add
push
inc
or
lods
xchg
pop
xchg
in
in
outs
inc
xchg
pop
and
cmp
mov
sub
(bad)
push
and
cmp
ss
pushf
inc
mov
or
ds
outs
sbb
je
(bad)
adc
retf
mov
xchg
cmps
cld
aam
pop
fnstsw
ins
loope
fdivr
clc
dec
and
mov
out
sub
pop
or
push
leave
or
(bad)
cli
cmp
mov
sti
shl
adc
ffree
adc
pop
adc
add
dec
ins
push
or
xchg
adc
and
xchg
mov
dec
xchg
shl
xchg
jo
mul
rol
pop
or
cmp
xlat
mov
push
mov
cmp
mov
or
sub
dec
add
add
sbb
dec
fdivr
pop
fs
ret
cmp
inc
mov
adc
pop
mov
inc
stos
movs
jge
inc
xchg
arpl
sub
(bad)
imul
jmp
pop
push
xor
adc
pop
test
dec
movs
retf
aad
inc
mov
add
out
xchg
add
test
lock
inc
add
cs
(bad)
mov
push
inc
fild
push
aaa
inc
fldcw
pop
mov
mov
add
push
sub
jb
dec
and
shl
xchg
(bad)
nop
adc
sub
sub
pushf
jg
cmp
jecxz
mov
int3
inc
mov
sub
data16
mov
mov
adc
data16
push
mov
and
sbb
jae
das
inc
imul
inc
pusha
mov
sbb
or
mov
dec
enter
cmp
add
std
pop
aad
and
jg
push
mov
mov
dec
cdq
fs
adc
sub
outs
inc
xor
push
and
pop
jo
pop
sbb
loopne
movs
push
(bad)
adc
xor
cmc
xchg
add
call
xor
daa
xchg
std
into
adc
add
dec
fidiv
inc
call
sahf
daa
cmp
mov
ror
adc
cmps
xlat
dec
sbb
xchg
movd
idiv
and
mov
cmp
movs
jnp
add
cwde
movs
fst
jle
add
mov
loop
add
imul
rcr
mov
cli
popf
jno
mov
inc
adc
xor
pop
je
mov
push
push
add
test
mov
push
rol
dec
test
ret
test
add
or
inc
push
mov
sbb
jmp
and
push
dec
add
gs
repnz
add
push
cli
adc
(bad)
test
push
popf
ret
test
adc
push
adc
add
pop
ret
inc
sbb
cmp
leave
daa
inc
xchg
or
mov
rcr
icebp
and
push
add
cmp
je
jp
pop
ds
int
push
xor
test
or
aas
popf
jge
dec
mov
or
jle
xor
or
pop
push
add
pop
jge
push
mov
lods
mov
inc
outs
add
cmps
xor
dec
pop
les
pop
pop
mov
jo
add
push
xchg
aad
ins
jbe
je
loop
mov
imul
cmps
mov
add
addr16
pop
cmp
loopne
sub
push
stos
sub
push
popf
in
sbb
mov
pop
stos
bsf
clc
or
inc
pusha
add
cmp
pusha
clc
pop
dec
pop
add
push
add
sbb
imul
jno
repnz
jecxz
rcl
sub
adc
inc
mov
fnsave
aas
mov
daa
adc
sti
pop
je
mov
cmps
and
mov
aas
or
imul
cmp
shufps
mov
inc
sub
nop
mov
idiv
push
sbb
xor
or
pop
or
cs
pop
pop
push
pop
xchg
and
inc
pusha
pusha
mov
leave
xchg
cmp
inc
inc
push
mov
fidivr
pmaxsw
mov
jo
fcomp
cs
push
push
pop
pushf
lock
sar
cmp
sbb
es
rcl
pop
test
pop
sbb
cmps
stc
push
sbb
aad
pushf
xor
icebp
daa
fstp
and
xchg
jno
gs
xchg
js
add
xor
js
ins
les
mov
popa
test
lock
je
clc
jnp
dec
and
dec
and
idiv
popf
cmp
adc
pop
sub
les
jbe
and
pop
sbb
(bad)
xchg
lock
sbb
inc
mov
mov
retf
fcomp
dec
dec
in
loop
outs
and
jge
pop
les
mov
push
cmp
loop
add
mov
inc
js
xor
(bad)
mov
inc
or
aaa
jmp
das
mov
push
cmp
inc
shr
ret
movs
mov
bound
xor
clc
inc
dec
xor
dec
jmp
inc
add
ja
cmp
shl
jle
xor
push
adc
loopne
outs
lods
dec
add
and
mov
aas
pop
jne
add
stc
and
test
mov
shr
pop
outs
or
movs
loope
pop
ret
fwait
shl
pop
adc
fidiv
cmp
aaa
dec
test
add
inc
lock
pop
pop
fild
jo
or
pop
popa
mov
retf
rol
jne
jge
mov
inc
pop
jne
loope
rdmsr
mov
mov
cmps
xchg
retf
iret
xchg
scas
pusha
popa
pushf
in
mov
cmp
ins
add
inc
push
pop
cld
mov
div
add
push
popa
inc
mov
sbb
inc
test
aam
cmp
ror
imul
xchg
sbb
(bad)
mov
inc
add
xchg
sbb
xchg
(bad)
pop
or
and
or
mov
dec
xchg
inc
cmp
mov
or
push
lods
mov
cmp
and
in
pop
mov
push
pop
aas
mov
pop
inc
ret
adc
jne
sbb
js
inc
jns
sti
xor
xchg
adc
cmp
sub
add
cmp
add
fidivr
js
dec
or
lock
sbb
lahf
add
push
xchg
call
xacquire
mov
pop
sbb
push
clc
mov
sbb
dec
retf
cs
repnz
jmp
or
scas
xor
gs
and
in
call
push
add
adc
xchg
and
(bad)
dec
leave
outs
xchg
sbb
sbb
sbb
xchg
adc
pop
dec
push
ficom
adc
mov
pusha
ins
or
adc
mov
test
dec
fild
fsubp
sahf
mov
add
or
(bad)
mov
rcl
mov
in
adc
or
daa
push
mov
outs
fcomp
add
jmp
lea
movs
and
dec
add
mov
push
ins
push
mov
and
test
xlat
mul
inc
mov
and
cmps
in
add
or
inc
adc
add
pavgw
push
fisttp
and
(bad)
sbb
fwait
leave
jmp
push
add
shl
rol
cmp
mov
add
ja
mov
sbb
test
or
ds
neg
pop
lea
jmp
imul
ret
cmp
pop
mov
cmp
jge
mov
aas
mov
hlt
cmp
add
sub
dec
add
inc
push
push
or
push
sar
add
jl
adc
add
cs
dec
dec
mov
mov
mov
fldenv
add
lods
cmp
int
and
add
daa
movs
jo
lahf
mov
add
dec
pop
js
xchg
push
or
(bad)
js
mov
sub
cmp
push
test
dec
sub
pop
mov
cmp
(bad)
aaa
call
sub
(bad)
in
or
inc
in
push
ror
imul
movs
sti
sub
push
push
xor
inc
leave
repnz
inc
fsubr
pop
es
push
cmp
in
adc
mov
outs
or
and
outs
loopne
sbb
aaa
cwde
push
addr16
sbb
add
add
movs
inc
push
jb
je
movs
test
jb
dec
iret
retf
ret
ss
mov
adc
or
ss
and
pop
lods
jbe
inc
ficomp
out
sbb
mov
in
in
sbb
pusha
xor
int3
test
mov
xchg
rol
sbb
test
add
cmp
xor
push
test
icebp
adc
add
adc
mov
jmp
push
sbb
dec
scas
fsubr
xchg
dec
shl
cmp
pop
dec
lods
pusha
idiv
xor
movs
push
imul
cmps
xor
inc
xchg
out
xor
jp
lea
adc
js
xchg
shr
call
mov
mov
add
push
fs
sub
bound
jp
sub
pop
shl
xchg
mov
jo
retf
mov
or
adc
push
jne
and
or
push
ins
leave
lock
push
adc
cmc
jmp
add
push
lea
in
mov
add
sbb
and
inc
cmp
les
outs
je
pop
sar
fnstsw
sbb
pop
adc
clc
mov
cmp
iret
dec
sbb
adc
push
or
jp
mov
dec
inc
imul
inc
dec
movs
inc
clc
adc
dec
mov
fisub
loope
movs
mov
ja
add
jae
leave
fwait
pop
ret
les
inc
add
nop
push
retf
sub
cmp
ret
mov
or
push
fmul
xor
push
pop
movs
inc
dec
push
adc
or
es
add
scas
hlt
mov
sub
push
ret
bound
jo
popa
pop
popa
(bad)
in
add
cdq
xor
jmp
and
stos
test
icebp
or
sbb
dec
sbb
sar
push
sbb
xor
and
inc
outs
inc
jmp
cmp
imul
add
push
or
dec
or
mov
lock
je
or
pop
dec
shl
ins
dec
call
or
adc
pushf
jl
or
sub
xor
mov
popa
or
lock
fstp
cmc
jle
pop
push
cmp
and
or
or
imul
push
push
or
scas
pop
sahf
pop
or
pop
jmp
sub
and
loope
push
add
push
or
stos
iret
(bad)
lock
int
cmps
adc
push
sbb
mov
add
lods
adc
retf
xor
cdq
not
dec
loopne
lods
push
inc
cmp
push
mov
cli
pop
sbb
imul
mov
jmp
or
cmovae
jl
mov
dec
jmp
and
dec
xchg
and
cmps
push
add
nop
ret
dec
or
dec
(bad)
push
mov
adc
pop
xchg
or
inc
pop
inc
call
adc
mov
sbb
jmp
mov
cs
or
xchg
or
jne
bound
retf
jb
adc
test
dec
mov
push
cmp
sub
or
add
aaa
in
(bad)
popa
or
sbb
cmp
push
outs
jae
(bad)
cmps
les
push
adc
in
icebp
in
fwait
mov
push
add
jle
push
(bad)
jmp
ja
adc
adc
stc
popa
les
xchg
mov
cmp
jne
stos
int3
rol
fimul
and
aam
into
or
mov
test
inc
mov
cmp
add
or
je
sub
into
push
scas
in
jl
test
or
adc
jmp
cmp
dec
add
neg
dec
rol
cli
inc
dec
xchg
push
mov
(bad)
xor
outs
cs
mov
push
sbb
xchg
and
outs
out
xchg
and
loopne
mov
push
sbb
inc
jg
lds
inc
pop
xor
pop
jne
scas
lock
call
out
mov
ins
adc
ret
nop
repz
and
jno
or
sub
or
push
cs
mov
add
test
sbb
push
(bad)
out
or
(bad)
dec
dec
inc
jmp
test
in
outs
or
mov
adc
or
sub
cmps
push
scas
cmps
and
cmp
xchg
inc
add
adc
das
test
push
arpl
push
or
sub
sub
inc
shl
cmp
sbb
into
push
dec
jp
xor
jge
outs
dec
cmp
sub
add
test
jle
das
xor
jg
(bad)
jg
adc
pop
mov
das
and
push
inc
data16
or
xchg
mov
fcom
aad
push
mov
dec
mov
iret
shl
cmp
popa
mov
add
popf
add
xchg
(bad)
aas
fiadd
mov
mov
adc
enter
inc
push
and
xchg
or
xlat
mov
neg
adc
xlat
inc
mov
pusha
movs
and
jl
addr16
dec
pop
jbe
retf
(bad)
cmps
xchg
and
mov
push
adc
cmp
jne
jl
cmp
or
mov
mov
call
test
xchg
mov
cs
nop
pop
adc
leave
rcl
sbb
dec
clc
leave
in
xchg
pop
inc
and
lahf
add
dec
lahf
outs
sub
xchg
and
fimul
enter
mov
scas
xor
inc
sub
pop
cmp
sub
bound
ret
(bad)
daa
ret
fild
push
pop
aam
push
rcr
dec
or
stc
mov
inc
in
rol
xor
shl
call
ror
dec
sbb
in
push
sbb
mov
push
mov
push
push
adc
and
adc
fstp
mov
ss
outs
add
inc
xchg
or
pop
xchg
jne
push
rol
popa
xor
dec
mov
push
ins
mov
add
jo
and
or
dec
aas
ret
call
mov
and
mov
shl
ret
mov
ret
mov
outs
mov
xor
addr16
(bad)
jle
mov
das
jno
mov
or
cs
cdq
and
push
imul
xchg
xchg
dec
push
dec
or
dec
aaa
loop
jecxz
(bad)
je
mov
xor
cli
adc
sbb
inc
pushf
adc
cmp
cmp
sbb
and
out
add
add
pushf
push
aam
jo
sbb
push
mov
test
arpl
ins
and
mov
jb
jmp
retf
fcomp
dec
data16
mov
or
and
sub
or
push
pminsw
push
mov
icebp
push
mov
mov
popa
or
pop
xchg
mov
push
mov
or
pop
enter
les
xor
or
fwait
inc
test
mov
push
push
sbb
es
xchg
jae
dec
push
jl
out
pop
fwait
mov
push
push
test
jp
mov
fsubr
aas
adc
push
ins
int3
ror
mov
sbb
sbb
dec
test
add
mov
(bad)
sti
clc
inc
pop
cmp
adc
sub
dec
daa
inc
and
or
in
add
aas
push
adc
fsubr
sbb
jmp
sbb
shl
cld
mov
inc
sbb
push
inc
or
test
sub
out
adc
xor
stc
or
mov
test
push
sub
or
and
loopne
ja
(bad)
test
dec
push
mov
sub
mov
pop
or
out
dec
pusha
and
sub
push
pop
adc
adc
or
mov
dec
cmp
xchg
add
dec
jmp
test
inc
ret
adc
fimul
(bad)
mov
xor
sub
push
mov
je
or
push
test
push
or
or
inc
push
sub
mov
inc
stos
fcomi
xchg
mov
mov
adc
addr16
xor
jl
xor
cmp
adc
loopne
mov
pop
pop
data16
test
mov
adc
mov
adc
and
test
pop
xchg
retf
dec
(bad)
pop
adc
add
shr
ror
(bad)
and
sub
leave
inc
jb
xor
pop
and
dec
mov
mov
shl
out
movs
sbb
inc
bound
push
rol
nop
cmp
or
push
mov
in
cs
sbb
pop
cwde
inc
in
popa
jl
lea
adc
gs
mov
mov
gs
push
aaa
test
add
mov
cmp
mov
std
or
add
sbb
fdiv
fiadd
arpl
and
mov
sbb
enter
dec
dec
outs
adc
dec
add
mov
push
pusha
xchg
add
mov
mov
push
add
push
sub
out
ins
cmp
push
add
xchg
push
mov
fisttp
xlat
and
fwait
hlt
sub
iret
mov
nop
xor
xor
clc
cmp
jl
xor
and
mov
fwait
add
push
fld
js
dec
je
add
jmp
bnd
in
aam
mov
mov
int3
push
cmp
ror
add
mov
xchg
clc
lds
stos
and
push
and
call
dec
aam
xor
fcom
out
inc
bound
fcomp
call
std
jmp
mov
pop
je
add
add
cmp
sbb
adc
out
es
pop
out
leave
ret
lods
out
push
push
sbb
jne
mov
repnz
cmp
js
inc
jp
ror
movs
loopne
pop
push
mov
hlt
aad
test
or
inc
mov
(bad)
ffreep
cli
add
mov
or
or
cmp
mov
add
icebp
popf
jl
jnp
xchg
or
ret
mov
and
sub
ror
dec
adc
jne
xor
add
popa
jbe
fadd
push
popf
mov
inc
push
xchg
ficomp
mov
loop
and
ds
mov
and
call
adc
sub
adc
add
imul
xor
xor
and
inc
pop
mov
pop
fisttp
movs
lea
and
xor
push
mov
(bad)
or
xor
in
push
or
and
or
add
add
aad
mov
push
or
xor
or
xchg
pushf
aaa
jne
push
imul
mov
mov
sar
pop
inc
sub
dec
imul
lds
mov
mov
adc
jo
dec
and
iret
or
inc
mov
dec
xor
xchg
in
rol
enter
add
ret
retf
cmp
pop
sub
xchg
aad
or
sub
(bad)
loop
add
add
ss
dec
add
test
sbb
xor
add
jbe
mov
jbe
push
bound
and
retf
sbb
aaa
push
cmp
pop
xor
aas
pminub
xchg
sar
push
push
jb
mov
adc
lock
ja
lea
mov
sti
outs
test
xchg
dec
into
mov
mov
add
or
icebp
ss
xchg
xor
mov
rcr
sti
jne
jecxz
push
jne
shl
or
adc
and
pop
mov
xor
ret
mov
pop
pushf
lods
sub
inc
mov
push
arpl
pop
cwde
hlt
push
lods
shl
sbb
sub
lea
loopne
ret
aad
dec
jbe
leave
pop
sub
dec
bound
jmp
rol
outs
add
jge
enter
and
or
sbb
jae
stc
in
add
add
sub
mov
xchg
out
stc
sub
int3
pop
cld
fs
inc
inc
add
add
add
bound
pop
ret
icebp
dec
daa
loop
arpl
xor
pushf
test
pop
and
push
mov
jle
fidiv
jmp
outs
jp
fucomp
jns
cwde
daa
stos
not
cmp
mov
shr
inc
add
push
push
dec
cmps
shl
and
cmp
bound
dec
adc
sbb
dec
cmp
fisub
ror
add
scas
mov
or
inc
inc
add
hlt
cs
and
aam
(bad)
mov
jmp
and
neg
mov
arpl
lock
(bad)
movs
mov
mov
push
adc
shl
ret
and
adc
ins
hlt
popa
mov
loopne
pop
adc
js
nop
dec
xchg
cld
mov
cmp
adc
adc
sub
or
jg
in
jmp
aaa
hlt
jmp
xor
xchg
or
pusha
mov
and
ret
or
sbb
xchg
mov
ret
xchg
test
add
in
add
popa
leave
call
dec
(bad)
nop
lea
(bad)
or
sub
push
push
jne
or
add
(bad)
sbb
add
das
add
jb
sub
xchg
mov
jnp
xchg
cmc
inc
add
pusha
or
pop
xchg
(bad)
loope
add
push
mov
(bad)
lock
scas
push
jnp
out
or
pop
xlat
add
jbe
test
ret
jbe
iret
sahf
stos
daa
lds
(bad)
jne
inc
add
jle
sub
xchg
xor
ins
in
outs
xor
add
jmp
sbb
test
adc
cmp
call
sub
outs
lds
js
enter
and
inc
pop
inc
fmul
mov
popa
lods
mov
mov
movs
js
add
shr
add
cli
push
xchg
nop
cmp
retf
jnp
shl
sub
jno
inc
push
daa
pusha
or
push
ins
cmp
lock
inc
dec
inc
cmp
sbb
add
dec
cmps
xchg
jg
inc
fld
cmp
aas
add
sbb
add
and
lods
and
pop
sbb
lea
movs
mov
mul
sbb
cmp
jne
fld
jmp
mov
mov
out
clc
sub
inc
mov
sbb
in
out
cmp
mov
(bad)
sbb
sub
je
mov
cmp
dec
push
cmp
mov
pop
outs
add
ss
and
jnp
push
sbb
fmul
inc
les
sar
sbb
icebp
test
adc
or
inc
ror
add
add
mov
int
dec
popf
sar
ror
sbb
cmps
jne
mov
sub
loopne
dec
jns
sub
jmp
popf
and
cmp
fcomp
add
sub
sbb
adc
cmp
jne
(bad)
xlat
pop
call
cmp
xor
xchg
xchg
push
lock
mov
jo
inc
add
(bad)
call
push
cmp
cli
push
push
adc
jo
mov
retf
xchg
mov
pop
cmps
fist
shr
iret
leave
add
add
xor
and
or
ins
mov
pop
(bad)
xor
fndisi(8087
jge
jne
jne
imul
in
sar
jbe
dec
adc
dec
aaa
ins
gs
pusha
imul
dec
mov
push
jnp
fadd
in
pop
pusha
and
lock
pop
pop
(bad)
pusha
push
out
lods
(bad)
std
rcr
ffreep
push
popa
add
mov
jne
and
stos
imul
dec
push
(bad)
or
push
xchg
push
fld
mov
push
xchg
dec
dec
xchg
inc
int3
test
mov
xchg
cmps
inc
inc
sub
xor
inc
push
mov
mov
sub
add
push
pop
mov
shl
push
add
ds
mov
sub
pop
pop
ffree
cmp
cmp
sub
dec
and
add
les
fisubr
retf
outs
pop
mov
cdq
sub
and
repnz
mov
pop
push
mov
ror
rcl
(bad)
sub
sahf
pop
xor
jmp
mov
adc
fcom
call
inc
pop
adc
fucomi
fsubrp
imul
xor
mov
xor
mov
into
jg
adc
add
push
sub
ins
xor
ror
pop
or
dec
cli
mov
cmps
and
inc
pcmpeqb
push
dec
xchg
mov
dec
xchg
jmp
sbb
mov
stos
lods
pop
out
(bad)
jne
es
test
adc
ret
push
repz
sub
shr
sub
bound
lahf
jne
lea
sbb
(bad)
mov
jne
adc
imul
push
dec
ss
rcr
mul
mov
mov
aas
(bad)
jmp
pop
pushf
jmp
lds
or
in
inc
or
daa
ficomp
add
sub
lods
scas
dec
(bad)
arpl
sub
(bad)
sbb
fst
add
xor
lds
js
sub
aas
sub
jns
xchg
mov
imul
add
push
or
pushf
ret
xlat
mov
and
mov
add
dec
jmp
cmp
push
cmp
mov
push
les
cmp
sbb
mov
and
or
lock
jbe
adc
mov
enter
dec
add
add
ret
mov
xchg
daa
push
pop
and
cmp
dec
push
out
fwait
push
push
and
inc
call
enter
ret
cmp
pop
push
or
int3
and
jge
in
xchg
cmp
call
push
sub
pop
fisubr
xchg
(bad)
jmp
(bad)
and
adc
mov
add
inc
clc
dec
fadd
lea
shr
push
jmp
adc
or
mov
adc
iret
push
inc
adc
not
stos
pop
dec
retf
or
imul
push
cld
jle
enter
or
and
xchg
in
ins
adc
mov
test
mov
bound
inc
xor
mov
dec
push
push
dec
xchg
ficomp
mov
out
add
bound
xlat
inc
call
adc
hlt
(bad)
or
cwde
mov
test
add
add
push
sbb
mov
inc
dec
dec
js
adc
(bad)
(bad)
pop
jmp
or
outs
mov
sub
push
call
or
dec
or
ins
or
cmp
je
and
cld
fiadd
mov
(bad)
aas
push
sub
cwde
xchg
cld
cld
popa
or
xor
push
jns
mov
jge
add
dec
xchg
and
add
jnp
sub
push
adc
fwait
push
xchg
mov
icebp
lock
pusha
sub
es
iret
xchg
(bad)
(bad)
dec
out
ins
dec
cs
push
cmp
popf
in
pusha
bound
push
fwait
push
xor
push
or
and
add
dec
add
jnp
mov
dec
int
or
xchg
cli
popf
sbb
adc
aas
and
jb
movs
adc
out
cmc
test
ins
pop
push
imul
cld
addr16
rcr
inc
adc
test
fadd
push
fucomip
jnp
cvtpi2ps
and
sbb
out
sbb
stos
mov
inc
popa
jns
das
loop
sub
pop
aaa
loop
mov
ds
sub
cmp
sbb
clc
cmp
mov
ret
sbb
inc
popa
jne
loopne
lea
or
jo
push
jecxz
jg
mov
(bad)
nop
in
in
and
mov
pop
push
adc
mov
add
pop
sti
inc
add
lock
mov
mov
jmp
pop
and
pop
lock
mov
dec
sbb
imul
test
outs
pop
xor
lods
(bad)
adc
retf
mov
and
shl
pop
sbb
call
std
icebp
outs
adc
loop
push
xchg
mov
add
fadd
sub
xchg
sbb
out
jmp
push
shl
fdiv
loopne
cmp
and
aaa
in
lahf
(bad)
es
shl
mov
or
push
mov
inc
sbb
jge
test
push
ret
adc
push
call
ja
sbb
or
loopne
outs
mov
out
and
test
je
mov
lds
mov
movs
push
xor
sub
scas
cmps
sbb
js
and
jo
jne
int3
ret
je
test
and
inc
push
adc
mov
xor
push
jo
xor
lds
sbb
or
adc
push
aam
dec
xor
je
jmp
cmp
je
sub
dec
jmp
mov
cmps
xor
data16
inc
ja
loope
pop
test
fsubrp
or
sub
pop
nop
or
test
inc
inc
sub
ret
xchg
js
mov
je
aad
arpl
cmp
cmp
xchg
pop
fimul
jl
ror
dec
xor
jns
jle
rol
and
daa
add
in
mov
mov
and
mov
sbb
iret
ror
dec
dec
fsubr
sbb
dec
xchg
sbb
clc
mov
xor
xchg
add
xor
sub
clc
popa
sbb
add
add
push
inc
and
fadd
rcr
scas
push
aad
dec
clc
add
arpl
push
adc
sub
pop
push
sub
pop
dec
adc
inc
xor
in
call
or
lock
adc
and
dec
es
retf
sbb
xor
inc
or
(bad)
sahf
mov
retf
add
cmp
add
sbb
shl
add
into
bound
fadd
bound
cwde
pop
pop
fs
scas
sub
mov
jo
inc
ret
adc
test
dec
inc
dec
in
adc
push
and
mov
or
xor
dec
dec
xchg
fdiv
call
int
sbb
or
jp
test
dec
mov
call
push
cmp
xchg
pop
icebp
shr
adc
je
push
adc
push
(bad)
cmc
push
fild
add
mov
or
adc
or
or
ins
sub
adc
idiv
ss
jmp
adc
pop
dec
xchg
and
test
jno
push
cmp
and
adc
and
dec
add
loop
test
iret
ret
ffree
jo
sbb
aad
jae
push
repz
pop
mov
imul
dec
jo
and
sbb
push
inc
sub
sbb
mov
jecxz
cmp
jne
mov
les
xor
sub
mov
test
ss
push
mov
ror
jb
mov
jmp
imul
mov
inc
mov
mul
cmps
dec
mov
imul
ss
or
mov
ins
jge
mov
add
cmp
sbb
retf
mov
or
jecxz
inc
je
cmp
outs
push
push
mov
sbb
stos
mov
popf
xchg
add
fsubr
pop
pop
add
push
sbb
cmp
adc
push
mov
inc
loopne
cwde
mov
add
add
jns
xchg
iret
xor
push
sbb
icebp
jo
dec
imul
mov
xor
lock
(bad)
jne
or
mov
or
inc
test
or
call
addr16
xor
inc
push
lods
inc
mov
inc
xor
adc
dec
and
mov
or
inc
ret
mov
xchg
push
mov
add
out
jno
ret
fstp
xlat
xchg
(bad)
cwde
mov
push
sbb
adc
jmp
nop
shl
movs
mov
and
push
add
aad
and
or
mov
and
xor
fld
and
das
shr
ds
or
and
sbb
and
sbb
add
and
inc
pushf
and
jecxz
xchg
les
inc
pusha
xchg
push
push
xor
ror
fs
lods
pop
cli
test
lods
pop
icebp
inc
or
mov
sub
lock
mov
dec
mov
ins
sbb
or
stos
inc
fldlg2
and
stos
shl
sub
lock
fld
mov
mov
cmps
jp
inc
adc
mov
sbb
loope
dec
or
unpcklps
mov
jbe
pop
jns
mov
les
(bad)
inc
test
cmp
dec
sbb
les
add
pop
iret
lea
push
xchg
outs
xor
movs
ja
inc
loop
and
push
test
dec
rdmsr
mov
dec
sub
mov
pinsrw
jg
adc
xor
or
lods
mov
call
push
neg
clc
add
inc
cli
and
jg
loopne
das
sbb
mov
mov
xchg
inc
add
lock
mov
repz
loopne
inc
sbb
add
lock
sub
lock
push
pop
cmps
xchg
mov
or
add
xchg
add
lea
fs
js
lods
add
stos
ja
mov
(bad)
loopne
sbb
push
nop
neg
movs
mov
sbb
push
push
push
pop
push
sbb
add
cmps
lds
push
cmp
sbb
inc
mov
pushf
or
pop
pop
mov
and
test
jp
test
add
inc
xchg
mov
pushf
fnstcw
push
xchg
add
jmp
mov
cld
push
cld
inc
dec
sbb
sbb
ret
push
sub
test
(bad)
lock
mov
pop
fild
mov
inc
popf
test
sbb
scas
and
pusha
pusha
and
push
push
mov
and
nop
es
pop
daa
rcr
lods
addr16
add
push
test
nop
inc
hlt
or
mov
scas
daa
adc
and
test
jno
adc
outs
call
ss
cwde
(bad)
pop
mov
inc
or
scas
sbb
xchg
sbb
add
inc
sbb
(bad)
adc
xchg
pop
sub
psrad
mov
stos
lods
(bad)
addr16
(bad)
movs
addr16
fs
stc
sahf
ss
xchg
jb
add
add
or
mov
dec
mov
inc
or
scas
add
push
stos
sbb
mov
push
sbb
adc
cld
loopne
(bad)
mov
jbe
dec
mov
cmp
adc
inc
adc
in
rol
push
or
jne
and
mov
ret
adc
adc
xchg
add
and
es
aas
cmp
xor
xchg
cli
mov
adc
pop
lahf
adc
repnz
push
inc
cmp
inc
sbb
retf
hlt
and
stos
jno
test
pop
stos
cmps
mov
adc
(bad)
js
sub
pop
sbb
movsx
sub
and
cld
inc
cmp
sub
mov
xchg
sub
in
imul
(bad)
hlt
push
xor
push
push
inc
loope
scas
psllw
mov
daa
in
xor
xchg
leave
shl
lahf
les
and
xchg
mov
sub
sbb
or
jns
mov
add
mov
ds
fisub
js
imul
jo
rol
xchg
test
ja
adc
loope
pop
push
lahf
adc
xchg
clc
fmul
mov
and
and
rol
cmp
and
adc
xchg
ret
adc
popf
dec
pop
jo
inc
cmp
and
or
leave
popf
adc
sub
xor
adc
push
xchg
ret
mov
retf
mov
enter
scas
dec
fnstsw
into
mov
and
push
out
inc
movs
inc
pop
sub
jb
pop
adc
in
or
cdq
cmp
(bad)
stc
mov
pusha
loope
out
add
dec
jmp
xor
aaa
ret
pop
pshufw
add
sbb
xchg
push
pop
repz
push
hlt
lock
cmp
and
cmp
xor
mov
dec
add
add
pop
pop
cmp
test
mov
xor
mov
ror
gs
mov
dec
popf
clc
fisub
mov
fsubr
add
add
pop
push
test
sbb
xchg
pop
cmp
scas
aam
sub
push
stos
lds
pusha
inc
push
fild
rcl
sbb
inc
dec
popf
inc
sub
dec
(bad)
xchg
cmps
push
retf
sbb
aam
push
leave
daa
adc
loope
jb
int3
and
mov
loope
sbb
inc
xchg
jne
inc
add
mov
mov
inc
and
sub
call
ja
repnz
dec
add
in
je
mov
xor
aas
mov
jne
jle
mov
and
or
sub
sbb
js
pop
mov
mov
dec
add
cmp
imul
xor
in
sub
aam
xor
cmp
push
mov
daa
cmp
and
inc
pop
rol
add
cmp
mov
push
sub
jl
in
iret
xor
push
pop
push
and
pop
add
cmp
or
xor
dec
inc
add
adc
iret
add
jno
xchg
add
xor
cwde
sti
pop
cmc
push
pushw
mov
mov
fild
xor
add
retf
add
inc
in
and
xlat
fiadd
loop
mov
or
sahf
jecxz
jmp
dec
pop
add
loopne
ja
out
mov
add
pop
dec
add
xchg
pop
or
xchg
add
or
push
ds
lea
cmp
push
add
enter
sbb
gs
cmc
inc
xchg
mov
add
sbb
and
or
pop
(bad)
pop
push
or
and
cmp
test
js
popa
add
cmps
in
inc
iret
jmp
repz
mov
mov
pop
dec
xchg
cmps
aas
retf
pop
ds
iret
sub
enter
lods
pop
jns
cmp
and
adc
mov
and
adc
pop
fidiv
mov
arpl
push
pop
mov
xor
jp
pusha
xchg
pop
mov
push
rol
and
ins
xor
dec
adc
mov
xlat
add
popa
mov
push
cmp
pop
fwait
test
dec
iret
aam
or
lea
push
lock
mov
pop
mov
or
je
adc
bound
loop
add
dec
add
pusha
cmp
shl
mov
mov
push
pop
jne
xor
shr
inc
ins
pop
jae
js
call
inc
pop
mov
sbb
push
pop
mov
cmp
pop
cmp
nop
pop
ret
xchg
cmp
loop
xor
xchg
addr16
jb
mov
mov
inc
add
xchg
iret
jmp
mov
xchg
or
mov
sbb
sar
std
and
js
mov
or
inc
push
mov
xchg
jo
shr
add
cmova
or
sub
stos
cmovnp
mov
or
test
imul
adc
(bad)
and
pop
push
test
rcl
sar
inc
data16
mov
jmp
dec
mov
xchg
out
pop
cmp
dec
adc
ret
rcr
es
xchg
fld
mov
push
pop
shl
add
jge
icebp
jg
push
push
xor
popf
rcpps
dec
fcomi
push
cs
into
mov
xor
aaa
mov
cmp
mov
push
test
xor
loop
inc
(bad)
jmp
inc
xchg
gs
scas
inc
xchg
data16
add
test
popf
sub
sub
inc
test
hlt
mov
outs
xor
mov
and
or
ficom
adc
jae
js
mov
dec
dec
fsubr
ja
add
jmp
pop
xchg
mul
push
xor
jmp
cmp
pushf
ror
xchg
clc
lock
je
dec
and
or
cld
adc
pusha
and
sbb
test
cmp
cmp
xor
fist
shr
adc
adc
jg
(bad)
add
test
xadd
test
jb
pop
add
jg
hlt
dec
cvtdq2ps
adc
ret
pop
aaa
xor
push
mov
add
jg
or
adc
inc
loopne
imul
mov
ret
int3
je
push
and
push
xor
push
das
cdq
add
popa
mov
xchg
mov
scas
inc
adc
cmp
adc
or
jmp
loopne
or
sbb
sbb
rcl
clc
pop
dec
(bad)
push
sub
js
fld
and
add
jae
or
mov
push
xor
fist
movs
lods
fsubr
hlt
dec
add
cs
jle
sub
outs
push
mov
je
mov
sub
push
je
pop
ss
mov
jmp
add
adc
pusha
jmp
gs
(bad)
or
fwait
loop
rol
lahf
push
mov
cwde
mov
adc
xor
sahf
lock
add
gs
push
addr16
adc
pop
xor
pop
(bad)
dec
push
iret
leave
xchg
dec
sbb
jmp
add
adc
adc
mov
cmp
dec
leave
test
push
pop
iret
(bad)
mov
add
add
jne
sti
cmp
dec
xor
and
and
and
(bad)
repz
enter
adc
adc
pusha
and
sub
ins
loop
jne
push
xor
xlat
nop
jge
pop
jle
pusha
xor
aam
shl
arpl
(bad)
stc
xor
or
jne
xchg
inc
shl
mov
div
jmp
push
pop
popa
cmp
icebp
and
mov
and
xchg
dec
inc
fwait
sbb
jecxz
cmp
(bad)
das
icebp
xor
xor
cdq
into
das
dec
(bad)
dec
arpl
inc
push
out
inc
adc
xchg
or
add
mov
xor
push
xchg
sbb
jns
mov
ror
mov
xor
hlt
movs
add
das
cwde
jp
xor
and
add
or
cmc
push
push
je
mov
mov
ss
pop
or
sub
jmp
ds
or
jmp
retf
jne
cmp
and
dec
xor
out
inc
test
mov
icebp
jmp
mov
test
(bad)
mov
sbb
or
fild
xchg
(bad)
test
cmp
pop
sar
add
sub
inc
xchg
lock
jg
les
dec
ret
sbb
add
and
(bad)
fsubr
dec
dec
popa
xor
push
test
jge
jl
dec
clc
xor
jmp
sub
enter
and
mov
aad
gs
mov
pop
push
sub
mov
retf
push
jo
mov
and
cmc
pop
retf
add
inc
add
xchg
dec
add
add
mov
cld
add
test
dec
or
adc
(bad)
js
dec
push
sbb
or
or
jnp
ficomp
mov
(bad)
jp
jecxz
xlat
fdiv
inc
test
test
jo
lock
nop
daa
adc
mov
xor
xor
xchg
inc
jp
nop
(bad)
fsub
lods
addr16
adc
jb
inc
xchg
and
adc
pop
mov
add
push
lea
push
dec
rcl
sbb
jo
fucomip
pop
or
push
sar
inc
aaa
pop
or
stc
outs
and
add
arpl
dec
push
push
loopne
push
daa
push
mov
add
and
ror
movs
sbb
push
inc
cs
dec
cmp
daa
fdivr
mov
je
mov
rol
xor
(bad)
sbb
push
ins
(bad)
xchg
inc
mov
mov
push
ss
or
mov
mov
or
and
or
adc
clc
call
and
or
shl
mov
dec
inc
pop
jp
adc
sar
popaw
mov
xchg
or
std
push
or
adc
stos
mov
es
lahf
or
mov
inc
and
mov
sete
push
sbb
outs
sub
and
sub
iret
cdq
cli
push
add
(bad)
jp
sbb
adc
psllq
sbb
mov
pushf
icebp
cmp
inc
shufps
dec
adc
cmp
mov
and
mov
sub
xor
and
cmps
and
stc
add
pop
add
ds
arpl
add
enter
or
sar
std
adc
jo
rol
rcl
scas
pop
retf
jno
cmc
es
arpl
pop
test
fstp
adc
ret
mov
pop
sahf
movs
xchg
dec
mov
push
dec
jecxz
cmp
cmp
test
ins
sbb
or
int3
add
test
out
xor
push
sub
clc
fdivr
push
or
adc
cmps
push
add
or
adc
lea
adc
xor
xor
hlt
push
je
and
adc
out
jmp
mov
jmp
push
xor
dec
push
pusha
pop
dec
and
clc
sub
in
fs
(bad)
gs
or
push
mov
fs
(bad)
sub
dec
mov
and
cmp
ror
cmp
push
ins
mov
inc
out
xor
inc
iret
loope
and
mov
je
aam
in
mov
pusha
dec
jne
xor
in
aas
sti
dec
xor
xchg
les
jns
jne
xrelease
and
mov
xchg
(bad)
sbb
sbb
les
jne
mov
sub
mov
pop
lock
outs
or
ud2
sbb
into
call
mov
push
and
psubsb
cmp
jg
mov
sub
or
mov
pushf
dec
imul
hlt
out
push
aam
add
cdq
xchg
rol
and
movs
les
dec
shl
loope
pop
das
mov
ins
or
bound
dec
and
loope
out
xor
push
add
inc
add
lods
inc
xor
cmp
inc
inc
mov
ret
pop
mov
mov
push
stos
dec
pop
(bad)
adc
inc
lea
add
push
and
pop
add
pop
inc
pop
adc
or
daa
adc
dec
ror
adc
jne
sbb
add
xor
dec
pop
dec
ja
outs
cmp
sbb
adc
int
mov
inc
inc
or
adc
mov
pushf
add
test
out
add
sbb
mov
in
inc
adc
dec
scas
lds
jb
inc
jge
ins
add
stos
sub
push
stos
xchg
hlt
aaa
ror
sub
sub
stos
in
cli
add
push
adc
jle
movs
std
push
mov
clc
clc
test
or
in
or
cmps
cmp
call
xchg
dec
movs
push
jmp
enter
xchg
aam
popf
adc
mov
jmp
pusha
and
or
cmp
repnz
inc
push
shr
add
xor
push
lock
retf
aas
call
mov
lock
jno
add
cmp
add
or
fadd
shr
adc
nop
fadd
inc
je
xchg
ins
movs
imul
add
sub
sub
cs
or
clc
imul
in
or
rcl
add
(bad)
jle
jb
fisttp
into
dec
mov
inc
nop
nop
ss
(bad)
mov
dec
cmp
mov
pop
add
shl
mov
jmp
aaa
mov
jae
push
mov
jmp
inc
and
xchg
mov
inc
sbb
jge
adc
pop
inc
dec
dec
or
loopne
adc
in
inc
loopne
das
cs
fidivr
dec
xor
push
mov
adc
neg
dec
add
add
dec
sub
out
xchg
(bad)
push
out
into
adc
fmul
adc
ja
or
pop
mov
and
into
adc
lds
into
inc
dec
add
add
(bad)
mov
sub
xor
loopne
mov
rcl
jle
sbb
fsub
dec
jnp
jb
(bad)
fmul
or
scas
(bad)
sbb
xchg
cmp
pop
mov
xchg
or
popf
aam
les
sbb
xchg
dec
jno
push
inc
cs
add
data16
push
add
mov
add
inc
movs
jmp
adc
stos
sbb
inc
push
stos
add
add
clc
mov
dec
fisttp
mul
ror
mov
test
jge
dec
dec
xchg
mov
add
mov
add
or
ret
dec
cdq
sub
ins
sbb
mov
adc
fldcw
ja
stos
inc
call
lea
ret
or
push
push
pusha
and
mov
mov
dec
pusha
sub
call
lock
add
push
popf
(bad)
jmp
dec
sub
inc
sub
cwde
add
retf
mov
scas
inc
inc
dec
push
push
ret
sbb
aaa
mov
fadd
dec
mov
dec
or
mov
cmps
add
sub
xchg
inc
push
movs
jmp
sub
test
fsubr
xchg
cmps
cmp
hlt
add
pop
add
test
mov
and
cmp
push
movs
test
fs
lods
int
cmps
nop
outs
test
pop
pop
pop
pop
dec
jbe
test
gs
mov
iret
cmp
dec
punpckhbw
xor
sbb
xchg
adc
fisub
pop
int3
sahf
push
test
mov
mov
inc
call
add
cmp
div
imul
adc
pop
into
int3
mov
pop
or
ins
add
test
in
jne
loope
repnz
mov
dec
fld
scas
cmps
imul
jp
fadd
xchg
mov
jge
sbb
cdq
xchg
lea
lea
(bad)
push
rcl
ror
pusha
cmp
aam
ret
sti
inc
les
ffree
inc
sub
add
and
and
inc
fidivr
dec
gs
pop
mov
cld
xchg
add
test
dec
xchg
je
add
sbb
ror
loopne
jge
mov
adc
mov
xchg
add
jge
lods
retf
mov
or
enter
mov
and
pushf
(bad)
jg
mov
jmp
fsub
es
pusha
or
(bad)
sub
aam
ins
dec
dec
aaa
sub
pop
shl
aad
sbb
or
daa
pop
push
sbb
xor
xor
sub
adc
or
push
push
push
inc
inc
xor
out
adc
loope
adc
adc
repz
add
mov
cmp
and
sub
xor
sub
mov
cmp
add
or
es
fs
les
jp
add
sbb
cmp
inc
lahf
jmp
rcl
mov
xchg
dec
xor
std
inc
daa
or
or
sbb
add
and
sub
push
dec
in
add
or
sub
mov
cmp
push
inc
sub
(bad)
mov
aam
outs
sbb
test
mov
pop
adc
inc
jno
cmp
xchg
push
pop
dec
mov
jbe
dec
adc
rol
sbb
imul
mov
fadd
or
mov
xchg
mov
add
push
movs
xchg
test
inc
mov
movsx
push
pop
jb
or
add
add
dec
add
sub
dec
inc
imul
sub
add
inc
cmp
push
push
xor
push
push
cmp
dec
loope
enter
inc
add
xor
mov
xor
lds
inc
aam
movs
jne
inc
lods
xchg
inc
ds
jne
les
jns
sub
or
call
adc
xor
add
or
or
xchg
xor
adc
add
push
jno
or
(bad)
rcr
fisub
ins
popa
jne
(bad)
repnz
jns
loopne
cmps
inc
add
pop
sbb
shl
mov
push
add
cmp
sub
adc
ja
mov
jbe
push
or
imul
sub
xlat
nop
sbb
cmp
dec
sbb
in
(bad)
mov
call
push
mov
inc
xor
xor
aam
add
or
pop
dec
mov
popa
shl
and
fnstcw
xor
sub
rol
or
call
push
cld
sbb
clc
imul
cmp
jge
dec
dec
add
les
inc
movs
dec
call
cs
call
or
inc
nop
out
sub
sbb
mov
and
dec
fsubr
imul
ret
cli
dec
pushf
sub
inc
sub
and
aaa
hlt
cmp
ror
movs
rcl
adc
adc
cmp
dec
dec
pop
das
sbb
sbb
int
adc
adc
push
pop
add
pop
popa
dec
inc
inc
les
dec
cmp
out
add
push
imul
pop
xchg
sbb
push
inc
rcl
mov
and
xor
mov
sahf
xor
ret
iret
pop
jge
xchg
lock
adc
xor
push
shl
cmps
inc
adc
ret
(bad)
push
sbb
lds
ins
add
or
push
or
or
inc
dec
adc
xchg
dec
dec
mov
jne
push
dec
loopne
push
icebp
xlat
add
add
jmp
cmp
or
(bad)
sar
(bad)
adc
xor
sbb
mov
lahf
test
jae
dec
mov
pop
adc
jo
xchg
popa
jae
cmps
xor
inc
call
cmp
icebp
adc
pop
adc
push
in
in
dec
and
addr16
dec
push
push
fcomp
rol
fld
outs
lock
adc
ret
pop
add
push
outs
lahf
test
int
mov
jnp
fs
adc
sub
shr
sbb
es
ins
test
add
xchg
xchg
(bad)
and
in
out
lahf
loopne
jno
xor
(bad)
cmps
adc
mov
mov
mov
lock
xor
cmp
les
gs
push
scas
pop
and
and
or
or
inc
cld
add
sub
push
cmp
dec
push
mov
push
and
xchg
add
jle
jbe
jle
inc
aam
push
js
push
xchg
or
sbb
pop
pop
sbb
shl
hlt
nop
jo
add
add
in
or
clc
ret
cmp
cs
inc
mov
pop
call
test
ret
retf
jo
bound
popa
shr
pop
es
and
addr16
lods
pop
dec
popa
pop
xchg
adc
sub
push
dec
pop
and
rcl
jmp
sub
aaa
or
jmp
sbb
aam
dec
je
push
adc
int3
and
cdq
das
rcr
pusha
fs
sbb
fldenv
fsubr
js
imul
jo
and
adc
and
or
push
mov
pop
mov
mov
add
mov
fistp
(bad)
dec
je
inc
jns
xor
sbb
int
dec
sbb
push
cmp
and
enter
(bad)
and
push
mov
pop
ins
in
add
or
sub
add
arpl
fucomip
cmp
push
sbb
inc
fs
js
movs
mov
aaa
sbb
and
and
push
inc
adc
and
sub
push
mov
fsubr
lods
sub
adc
xor
add
and
ds
lahf
dec
inc
add
mov
jbe
clc
out
dec
cmp
pop
pushf
outs
mov
cmp
(bad)
xor
mov
and
inc
mov
gs
ret
jmp
xor
jnp
adc
aam
test
or
cmc
arpl
sbb
mov
enter
adc
or
add
dec
or
sub
push
jno
lods
sbb
sbb
(bad)
sbb
ret
mov
jmp
in
in
(bad)
std
stc
into
fnop
out
in
test
cwde
pop
fs
push
mov
xchg
ss
mov
in
xchg
cwde
dec
jne
into
inc
inc
ret
inc
inc
jno
loope
pop
jmp
aas
jmp
rol
mov
sub
push
adc
call
sub
shr
aam
jmp
adc
fs
sub
aas
mov
mov
inc
adc
adc
mov
(bad)
mov
sahf
xchg
hlt
sub
fiadd
test
outs
in
mov
add
test
mov
xchg
mov
or
inc
cmp
mov
aaa
pop
add
add
mov
in
mov
es
dec
adc
xor
cmps
pop
rol
dec
rcr
ror
or
dec
(bad)
push
test
js
mov
pop
mov
xor
pop
out
mov
clc
std
mov
mov
jno
and
cmc
xor
xchg
jecxz
fidivr
enter
rcr
xor
xor
loop
cmps
fcmovne
sbb
mov
adc
fidivr
rol
pop
xchg
pop
adc
fs
xchg
dec
push
pushf
test
add
addr16
cmp
test
ja
mov
in
push
adc
loope
lds
fdivr
lock
pop
fbld
and
std
lods
pop
pop
sbb
pop
clc
(bad)
(bad)
cwde
adc
outs
push
jnp
cmp
pushw
and
imul
add
inc
adc
in
repnz
push
nop
jp
cmp
loope
fs
add
xchg
xor
sub
cmovns
mov
mov
add
sbb
mov
and
mov
mov
cmp
fisubr
(bad)
(bad)
mov
adc
cmp
addr16
or
add
mov
adc
or
and
jle
xor
jmp
loopne
ins
xchg
dec
and
ins
lahf
shl
adc
fbstp
es
(bad)
or
sahf
push
inc
js
sub
and
out
movs
sbb
mov
out
xchg
and
pop
sbb
sbb
mov
adc
sub
pop
lds
out
xchg
pop
jle
jge
jo
cmp
or
lods
mov
pushf
cmp
outs
nop
fmul
leave
xor
inc
sbb
cmp
jmp
adc
stos
or
dec
dec
xor
mov
ret
enter
cmp
cmp
dec
xchg
jo
(bad)
icebp
xor
mov
adc
cmp
fs
movs
movs
push
mov
mov
xchg
imul
fisttp
xor
test
cmp
cmp
ss
pop
call
fild
mov
pop
sbb
inc
mov
mov
jno
xchg
or
dec
sbb
cld
add
mov
cmps
push
cmps
push
rol
add
add
inc
aaa
dec
ins
mov
or
inc
ins
push
dec
ins
xchg
dec
js
les
in
push
sbb
inc
or
loopne
test
mov
mov
push
pushf
test
pusha
cmp
fimul
and
imul
outs
add
mov
clc
fs
or
xchg
(bad)
rcl
mov
push
aam
dec
popa
mov
mov
adc
and
lods
jne
adc
ret
push
popa
movs
xor
icebp
sar
push
ficom
adc
jmp
ja
daa
mov
in
jne
and
mov
inc
scas
shl
shl
test
mov
inc
popa
and
rol
jae
pop
fadd
mov
ret
or
jmp
leave
mov
mov
in
push
inc
adc
inc
jge
sub
xor
add
push
mov
and
jno
jo
scas
ins
adc
pop
and
shr
mov
cmp
pop
or
adc
push
xor
inc
inc
cmp
sub
push
movlhps
sub
jne
xchg
sbb
mov
cmp
pop
sub
sbb
adc
cmp
xor
fidivr
dec
jne
ss
imul
jnp
xor
fimul
loope
sahf
or
sub
add
sub
mov
aas
dec
xor
jmp
push
add
pop
xor
inc
xchg
sub
inc
jnp
push
into
push
in
sbb
mov
cmp
sbb
jo
fcomp
fisubr
das
lds
mov
xchg
not
cs
adc
mov
mov
jl
(bad)
or
test
xor
loopne
mov
test
jp
sbb
xchg
inc
daa
and
mov
or
inc
dec
and
adc
xor
sub
or
pusha
sti
sub
pop
fs
or
add
push
jns
jmp
or
sbb
mov
ror
mov
inc
add
inc
js
pop
stc
cld
adc
adc
or
stc
ja
push
call
pop
or
sbb
into
xor
or
or
dec
adc
sbb
lock
aas
pop
adc
push
mov
addr16
dec
adc
sub
pop
mov
daa
cmp
or
addr16
nop
bound
xchg
dec
sbb
adc
pop
adc
add
jne
sbb
push
pop
add
cmp
inc
mov
jno
sub
sbb
sub
sbb
fimul
or
dec
adc
out
adc
push
loop
pop
enter
sub
dec
pusha
sbb
add
retf
and
sub
xor
pop
add
mov
pop
pop
mov
dec
xor
cdq
add
inc
in
cmp
xchg
or
xor
aaa
pop
imul
inc
movs
hlt
jns
sbb
mov
hlt
xor
push
inc
out
add
cmp
xor
push
stos
rol
cmp
jle
or
fadd
clc
aaa
mov
pusha
xlat
sub
aas
adc
ja
xchg
adc
ret
cmp
jns
jg
mov
(bad)
(bad)
jg
fsubr
shl
jg
cmp
sbb
idiv
(bad)
loop
cmp
psubsb
sti
jmp
cmc
mov
xor
push
sbb
or
sub
dec
lods
lods
and
and
pop
loope
(bad)
fcom
xlat
push
hlt
xor
dec
jl
adc
xor
add
sbb
or
add
or
add
pop
add
push
cwde
push
mov
sbb
nop
lock
pop
loope
jle
push
sbb
pop
pop
sbb
bound
mov
jo
xchg
add
push
sbb
cmp
mov
jo
and
push
and
sub
push
daa
inc
sub
jne
ja
ins
and
adc
xor
xchg
adc
mov
adc
and
aaa
(bad)
loope
lahf
pop
cmps
sar
mov
or
xchg
pop
add
inc
test
push
inc
mov
or
int3
rcr
jge
add
pop
jno
jmp
mov
jo
sbb
xor
pop
pusha
movaps
ror
das
cmp
test
cwde
sbb
lea
fbld
sbb
test
push
mov
add
imul
adc
jae
push
and
jne
fs
ins
pop
add
popf
mov
pop
and
xor
mov
add
mov
jmp
les
xor
and
inc
sub
adc
xor
push
xor
stos
and
sti
in
mov
adc
sub
test
icebp
push
mov
movs
sbb
enter
clc
cmp
out
lock
or
faddp
add
mov
sub
add
dec
ret
aam
mov
ds
mov
or
mov
inc
sbb
dec
or
leave
adc
enter
sbb
mov
in
mul
adc
jbe
sub
and
add
dec
fld
push
push
rol
aas
push
cmp
xor
std
jno
ss
sub
sbb
mov
pop
adc
add
js
ss
push
std
adc
push
cdq
sub
inc
lods
xor
fld
sbb
cmp
cdq
and
mov
ss
or
adc
or
add
stos
fwait
inc
sub
xchg
push
mov
push
fadd
or
mov
or
mov
ins
stc
mov
(bad)
adc
add
arpl
push
cmp
jne
icebp
mov
sbb
or
int
in
call
push
adc
inc
jecxz
mov
xor
or
fdiv
cmp
add
inc
add
ret
(bad)
(bad)
pusha
mov
dec
loope
outs
ficomp
outs
les
cmp
xor
loope
cwde
ror
sbb
push
test
rcr
add
lods
and
or
enter
inc
outs
add
sub
sbb
outs
mov
and
aad
mov
sbb
adc
sub
dec
das
add
cwde
ret
or
add
lods
movs
push
fmul
add
cmp
stos
fidiv
dec
xor
dec
adc
cmp
push
or
scas
and
clc
sar
jns
adc
je
cmp
inc
pop
or
frstor
sub
pop
push
jne
add
repnz
jge
test
ficom
lods
clc
std
iret
adc
or
out
js
mov
pop
push
pop
pop
test
jno
inc
lahf
push
dec
mov
pop
movs
pop
ins
dec
and
fst
fcom
dec
push
popa
aad
fild
push
dec
icebp
or
jbe
xchg
or
and
xchg
leave
sbb
mov
aam
jnp
fs
iret
or
pop
pop
or
inc
xchg
and
loop
push
mov
adc
dec
push
or
fdivr
xor
dec
or
int
dec
or
push
and
rcl
pushf
add
(bad)
push
(bad)
mov
lock
and
sbb
not
and
mov
inc
outs
add
mov
aad
jmp
inc
lds
js
shr
push
xor
xlat
aam
or
call
push
das
retf
bndldx
adc
mov
cmp
push
mov
pusha
loope
cmp
jb
fs
je
test
ficomp
push
nop
enter
aaa
cmp
daa
adc
jnp
or
jge
loope
pop
out
sbb
rol
int3
sbb
gs
fwait
jmp
pop
sub
shl
(bad)
fstp
or
je
jmp
sahf
enter
push
shr
inc
push
add
das
push
in
popa
cmp
mov
xchg
mov
inc
pop
mov
sbb
add
(bad)
jg
(bad)
dec
scas
movs
sbb
popa
pop
push
push
adc
add
fimul
jo
lds
mov
test
xchg
push
push
push
sbb
std
mov
inc
push
movs
cmp
inc
xor
pushf
add
leave
jle
pop
jmp
push
ins
enter
retf
(bad)
iret
add
sub
sbb
add
inc
dec
ficomp
mulps
jmp
rol
sub
cld
and
mov
add
xor
mov
cli
stos
jle
and
test
icebp
sub
lods
sbb
or
and
(bad)
nop
into
xchg
jne
jecxz
adc
test
adc
and
dec
and
imul
(bad)
daa
cmp
ds
into
push
pop
inc
sub
xor
adc
daa
ja
lea
inc
jmp
nop
pop
in
in
sub
pop
push
lea
adc
pop
adc
fcom
test
inc
scas
out
add
sub
adc
lea
xchg
xor
pusha
les
(bad)
add
xchg
sbb
push
in
js
and
je
push
push
inc
push
hlt
and
and
push
jecxz
sbb
sbb
and
adc
(bad)
pusha
outs
sahf
inc
loope
pusha
and
pop
lds
shl
pop
jne
mov
mov
test
jae
or
adc
cs
test
sbb
fiadd
xchg
mov
test
cmp
pop
adc
push
pop
ret
inc
push
retf
imul
mov
ret
test
fcmovbe
loope
add
or
push
pop
adc
add
xor
test
inc
icebp
mov
push
adc
and
cmp
or
push
adc
push
ja
or
cmp
ret
push
push
mov
pop
dec
rol
mov
in
dec
outs
xchg
cmp
push
add
pusha
push
adc
jb
jp
cmp
cmp
cdq
add
and
pop
mov
push
arpl
inc
push
and
test
adc
lods
add
pop
fadd
minps
push
push
ror
dec
jne
bound
ret
jno
mov
mov
inc
or
push
xor
pop
or
cld
(bad)
jne
pusha
(bad)
pop
add
in
push
lahf
and
push
inc
jbe
push
mov
out
(bad)
cdq
xor
push
adc
pop
(bad)
loope
mov
adc
pop
and
mov
add
push
adc
dec
sbb
cmp
cs
inc
daa
aaa
pop
xor
pop
cmp
in
push
test
inc
mov
loope
inc
arpl
aad
push
pop
inc
or
jno
cmp
leave
ror
mov
mov
inc
xor
iret
clc
xor
sub
add
iret
(bad)
jae
fistp
rcr
jecxz
stos
add
push
xor
or
adc
out
jle
or
adc
or
push
or
jg
xchg
shl
jle
jl
out
fisubr
xor
lock
ss
lods
xor
jge
add
es
lahf
repnz
jae
adc
mov
mov
cmp
and
loope
xchg
cmps
inc
and
(bad)
dec
mov
jnp
cwde
jmp
mov
nop
retf
lds
outs
jle
pop
inc
inc
mov
lods
pop
(bad)
sub
aad
jae
sahf
shl
jo
mov
mov
aas
aad
inc
or
adc
hlt
add
cs
and
and
ins
mov
jbe
cmp
test
int3
push
mov
mov
adc
sub
sub
cmp
ja
push
mov
mov
pop
aam
bound
pop
inc
(bad)
loopne
dec
inc
sbb
ins
adc
inc
pop
das
add
sbb
or
push
adc
mov
ja
add
inc
xor
pop
jmp
inc
jmp
push
xor
mov
lock
mov
mov
test
loopne
shl
xchg
push
test
sub
cmp
pop
cdq
test
nop
and
or
pop
ss
es
and
sub
cmp
jl
enter
or
dec
push
pop
xor
xor
out
in
cmp
xor
add
rol
push
xor
(bad)
mov
xor
inc
dec
mov
and
mov
xchg
out
call
sub
xchg
(bad)
dec
dec
(bad)
sti
arpl
aas
mov
sub
movs
push
ss
test
adc
test
rcr
cmp
sbb
out
pop
and
inc
jns
pop
add
mov
xor
add
aad
and
xchg
call
ss
push
jae
pop
push
test
push
pop
fcom
cmp
xchg
mov
push
lock
sub
add
inc
add
sbb
icebp
popf
hlt
xchg
sbb
outs
mov
jne
cmp
lahf
xchg
out
inc
xor
dec
and
or
les
aam
add
shr
jecxz
dec
ja
and
popa
mov
sbb
scas
arpl
jmp
push
pop
sbb
cmp
jno
jo
js
cmp
lods
out
or
and
rol
std
push
arpl
(bad)
sbb
nop
inc
mov
mov
rcl
sub
mov
sbb
(bad)
inc
add
fwait
inc
dec
call
pop
xchg
add
sub
jecxz
ja
add
pusha
fcom
movs
inc
and
push
das
and
inc
xor
push
xor
loope
add
inc
pop
ss
add
sub
add
out
cmp
sub
push
out
xor
or
sub
sub
push
(bad)
loopne
loopne
inc
loopne
jmp
(bad)
pop
data16
ins
int3
(bad)
imul
add
jae
add
push
inc
js
lea
sbb
retf
lea
pop
cld
xchg
js
ja
aas
pop
dec
bound
pop
mov
add
cmps
xor
pop
adc
push
movs
sahf
rol
or
jge
test
daa
jg
adc
mov
dec
movs
or
or
(bad)
jmp
nop
imul
test
les
xor
fs
push
push
popa
adc
push
cmp
mov
addr16
push
cmp
inc
push
les
icebp
inc
sbb
pop
or
sbb
ins
aad
adc
push
and
xchg
movs
sub
addr16
data16
and
and
ja
xchg
mov
or
mov
inc
push
dec
fisttp
pop
or
and
push
popa
sbb
retf
sar
clc
sbb
cmp
xlat
or
sub
mov
cmp
mov
or
adc
pop
jae
rcl
xchg
sbb
add
fld
xlat
xchg
es
inc
jno
xor
xchg
sbb
xchg
es
or
mov
xor
dec
in
test
rol
fidiv
out
add
jb
aaa
call
mov
sub
push
movs
jb
fsubr
mov
pusha
mov
xchg
or
movs
jb
push
shr
test
js
sub
jne
pop
lea
add
xchg
enter
add
mov
mov
popf
cli
pusha
fisttp
imul
sbb
inc
gs
pop
push
gs
adc
inc
inc
nop
mov
ins
icebp
add
test
dec
cmp
ins
jo
rcl
arpl
imul
das
ss
sub
inc
xchg
dec
jae
pop
mov
adc
pop
pop
jp
fidiv
fdiv
sbb
push
push
popf
add
and
iret
push
xchg
add
adc
pop
add
mov
adc
push
int
test
sahf
jecxz
sbb
push
imul
jne
or
mov
push
sub
push
cmp
ret
or
add
adc
xor
dec
lods
push
fs
arpl
shr
jecxz
ret
mov
inc
(bad)
sti
push
add
ror
xlat
cmp
iret
push
sub
inc
sbb
cmp
sub
(bad)
iret
pop
sub
or
push
mov
pushf
and
pop
adc
call
cld
pop
adc
inc
nop
pop
or
pop
test
sar
and
stos
pushf
inc
rcl
and
in
push
test
jb
pop
add
mov
add
ret
mov
xor
dec
mov
imul
sbb
mov
mov
or
or
cmp
popa
gs
add
js
inc
pop
bound
jecxz
inc
rcl
push
jae
pusha
dec
push
inc
push
call
cwde
pop
test
adc
xor
mov
mov
movs
mov
mov
inc
or
shr
pop
mov
sbb
sub
sub
ret
sub
or
nop
and
jg
outs
dec
mov
jno
mul
das
aaa
ja
outs
outs
xchg
adc
in
xchg
aaa
inc
fs
push
imul
and
nop
mov
and
call
aaa
pop
push
push
sbb
iret
sub
pop
and
inc
setae
jno
les
sbb
(bad)
movs
sbb
dec
mov
add
repnz
add
sbb
fst
je
out
not
mov
jl
ins
and
test
aam
inc
movs
xchg
test
mov
and
pop
xchg
and
mov
xchg
movs
cmp
clc
(bad)
out
dec
xchg
fidivr
adc
inc
push
and
xor
adc
dec
push
in
cmp
push
ins
and
xchg
xor
pop
adc
sbb
and
add
rcl
pop
inc
cmp
in
push
xchg
movs
mov
fidivr
push
mov
stos
xchg
mov
ins
inc
rol
lock
add
fiadd
stc
mov
lock
outs
inc
push
ret
mov
inc
push
push
lods
aas
pop
sub
movs
leave
add
adc
addr16
pop
les
test
push
or
mov
test
sub
pop
mov
shl
dec
push
pushf
push
loopne
mov
xchg
push
call
or
jo
outs
pop
xchg
vmread
mov
outs
xor
push
(bad)
jne
adc
or
ror
pop
sub
mov
sbb
sahf
push
add
push
mov
leave
jl
or
xchg
test
or
sub
ja
cmp
jmp
push
mov
dec
repz
add
or
cmp
repz
sbb
shl
movs
lahf
sub
or
mov
das
sbb
mov
in
enter
add
call
pop
daa
xor
push
enter
aaa
pop
xchg
push
pusha
xor
int3
call
sbb
xor
and
jg
sub
popa
ss
add
adc
out
add
repnz
add
pop
mov
lods
mov
xor
push
rol
push
cmps
jb
clc
mov
push
lea
out
inc
cmp
pop
jno
adc
sub
pop
add
xchg
sbb
inc
xor
les
sbb
xchg
(bad)
(bad)
imul
add
xchg
or
push
scas
ins
and
inc
inc
sbb
shl
rcl
sar
mov
push
scas
lock
nop
aas
loopne
mov
add
inc
or
add
je
push
add
daa
mov
add
(bad)
jne
mov
jmp
xchg
lea
(bad)
add
lock
cmp
lods
add
push
and
ret
ins
adc
jecxz
or
mul
das
pop
pop
and
xchg
pop
mov
xlat
leave
(bad)
sbb
push
ret
ror
cmps
cmp
xor
and
add
ss
jne
jle
in
adc
sub
jle
sub
adc
cmp
mov
inc
sub
enter
ret
(bad)
cmp
clc
mov
xlat
inc
inc
xchg
sub
inc
or
adc
sbb
jo
ret
pop
jnp
scas
mov
mov
fiadd
mov
push
mov
loopne
xchg
cmps
lods
jnp
xor
in
adc
icebp
retf
xchg
inc
call
jne
pop
fwait
stc
movs
lock
addr16
and
sbb
add
pop
pushf
repz
cmp
daa
jo
bound
popf
data16
aad
and
in
or
jmp
or
xor
add
mov
sub
out
fsubr
mov
dec
call
sbb
fs
fs
add
ins
fiadd
pop
and
movs
inc
add
sbb
fbstp
fldcw
mov
xor
sti
repnz
test
test
movs
mov
lea
mov
dec
test
dec
daa
int
cdq
cwde
cmp
add
fsubr
inc
mov
jl
ret
sbb
xchg
sbb
data16
mov
sbb
inc
add
cmp
inc
dec
or
xor
push
imul
or
add
ss
dec
arpl
mov
xchg
push
ds
fmul
push
dec
scas
fmul
shl
pop
mov
and
xlat
and
push
bnd
js
add
fdiv
push
cmp
add
or
sbb
inc
mov
cmp
xchg
adc
jne
sti
and
jns
mov
inc
jle
out
iret
sub
imul
cmps
pusha
popa
retf
sub
rdtsc
pop
cmp
cmps
xor
jge
cld
je
lds
mov
sbb
ja
adc
ret
rcl
or
sub
mov
mov
jg
push
mov
inc
push
pop
loop
or
imul
dec
inc
mov
inc
add
mov
adc
jmp
and
xor
inc
xchg
ins
test
leave
pusha
add
into
js
int
(bad)
or
(bad)
cmp
xor
je
test
adc
enter
push
push
outs
or
inc
pop
nop
or
ins
jns
xor
shl
dec
ret
in
mov
mov
sub
mov
mov
vmovdqu
pop
push
cmp
sbb
repz
je
shl
ror
pop
pop
sub
cmp
or
ret
mov
adc
push
fcom
pop
push
inc
sbb
dec
(bad)
movs
or
adc
add
mov
or
mov
dec
mov
mov
lods
jge
inc
xor
jg
sbb
or
je
adc
mov
and
pop
or
jg
cmp
clc
or
ret
jne
pop
or
popf
shl
rcl
push
sahf
or
aaa
inc
dec
jns
mov
dec
rcl
cmp
sbb
inc
nop
call
les
push
sbb
call
push
sbb
dec
jmp
mov
cmp
inc
int3
jg
xor
push
cmps
lahf
int3
int
pop
sub
xor
or
add
enter
rcl
push
xchg
(bad)
mov
(bad)
fdivr
dec
dec
or
mov
aam
pop
fs
imul
or
adc
mov
adc
or
xlat
dec
aad
nop
ins
sub
cmps
sub
cmps
inc
repnz
pop
imul
ins
imul
mov
xor
inc
sub
dec
cmp
sub
or
cmp
push
adc
sbb
add
pushf
jp
xlat
loope
lock
aam
push
jo
pop
imul
xor
fstp
cmp
les
pusha
push
imul
cmps
daa
std
push
push
jmp
xchg
mov
mov
xor
out
mov
push
aas
and
imul
sub
push
mov
and
push
jg
cmps
(bad)
pop
es
mov
xor
cdq
xchg
or
mov
adc
push
hlt
lock
push
fistp
and
mov
ins
mov
xchg
dec
movs
dec
sbb
or
xchg
dec
jnp
and
adc
xor
popf
pusha
fdiv
jl
cmp
inc
mov
popf
ror
das
shr
sub
inc
cmp
xchg
mov
ins
sar
in
adc
ds
inc
sbb
jo
movs
dec
mov
call
adc
es
and
mov
xchg
imul
pop
or
or
dec
jmp
call
dec
add
call
or
lock
mov
aas
or
int
fadd
mov
xchg
je
adc
sub
out
jmp
add
mov
xchg
fwait
dec
ret
jns
push
cmp
cmp
sub
out
test
xor
xchg
pushf
mov
jae
inc
fs
retf
xchg
xchg
xor
and
not
adc
(bad)
dec
lods
les
adc
movs
movs
pop
adc
mov
jge
ins
mov
mov
mov
jmp
(bad)
inc
push
xchg
es
xor
enter
xchg
or
mov
ror
hlt
push
pop
dec
add
pop
push
jle
pop
cli
cmp
mov
popf
push
inc
add
into
(bad)
sub
xlat
outs
out
dec
enter
neg
or
ss
mov
nop
mov
es
lock
xchg
and
je
push
cmps
adc
cmp
xchg
xchg
in
inc
idiv
jmp
xor
dec
sbb
mov
std
jle
ja
and
sbb
mov
movs
data16
iret
pop
adc
call
add
sbb
jmp
or
inc
(bad)
push
cwde
mov
adc
hlt
jmp
push
hlt
cmc
adc
loopne
leave
sbb
xchg
aaa
(bad)
out
sti
adc
pop
inc
push
inc
push
xchg
jo
scas
push
ss
in
ret
mov
clc
add
xchg
sbb
or
or
lahf
or
xchg
movs
cmp
xchg
jo
push
cmps
push
pop
inc
(bad)
es
fwait
sbb
xchg
idiv
dec
lea
xchg
jmp
scas
dec
fadd
push
xchg
mov
pop
inc
push
rcl
jl
add
mov
ins
popa
sbb
popf
(bad)
in
jmp
or
xchg
add
int3
mov
sbb
adc
sar
dec
pusha
mov
mov
push
inc
leave
and
popa
inc
mov
push
enter
data16
hlt
les
ja
test
mov
jno
stos
xor
repnz
add
sub
das
jl
or
lock
jmp
jae
push
add
pop
xor
add
or
inc
add
jmp
dec
adc
enter
bound
test
jle
add
retf
push
pop
mov
(bad)
lock
mov
ins
ss
xor
fadd
bound
shr
dec
icebp
add
pop
or
enter
jo
inc
ret
(bad)
stos
cld
push
loope
les
push
sub
lock
xor
in
push
cs
push
aaa
ret
push
and
adc
outs
push
or
sbb
xor
adc
movs
mov
pop
mov
sbb
add
adc
add
fcom
mov
adc
mov
scas
inc
inc
arpl
mov
das
or
fcmovnbe
push
mov
mov
ret
push
clc
rcl
inc
jmp
dec
pop
pushf
fwait
adc
pop
sub
mov
pop
jno
adc
popf
les
add
(bad)
mov
cs
xchg
and
je
leave
adc
or
adc
adc
pusha
sbb
xchg
dec
mov
sbb
repnz
jp
xchg
in
mov
xchg
xchg
shl
gs
jl
je
sbb
add
sbb
in
mov
fild
add
call
jns
call
xor
aaa
inc
imul
outs
or
or
sahf
xchg
nop
hlt
fmul
add
je
test
cli
scas
aas
add
leave
imul
popa
aas
jne
das
es
push
xchg
dec
jo
js
rcr
mov
mov
or
mov
mov
inc
inc
ret
cdq
jno
enter
ja
lods
push
jmp
sub
repz
adc
or
and
movs
push
adc
ja
in
mov
push
add
and
aaa
sub
fcom
sbb
rol
and
adc
daa
push
out
mov
and
inc
jl
pop
sub
test
add
xchg
jecxz
pop
adc
pop
push
push
push
push
cdq
inc
or
and
xor
(bad)
fcom
inc
jg
and
sbb
push
shr
add
adc
jmp
jle
and
mov
sbb
cs
ror
inc
out
es
dec
shl
jo
add
imul
jnp
inc
dec
xor
dec
sbb
or
dec
(bad)
call
lds
pop
or
sub
push
cdq
sbb
dec
jecxz
xchg
push
xor
ret
das
cmp
fmul
mov
scas
mov
fdiv
cwde
jnp
out
mov
ins
cmp
adc
adc
test
pop
adc
push
pusha
mov
add
cli
cmc
in
xchg
mov
clc
add
imul
or
adc
mov
lods
outs
ror
pop
clc
and
(bad)
adc
add
lahf
ror
lea
adc
pushf
inc
out
in
cmp
call
push
lea
add
cdq
push
inc
sar
jmp
ins
add
sbb
imul
dec
dec
pop
xor
lock
stos
add
xor
dec
dec
pop
(bad)
push
jno
arpl
mov
daa
inc
dec
ins
push
in
inc
jo
xor
in
sbb
sub
shr
mov
shr
imul
xor
adc
test
call
loopne
in
(bad)
mov
sub
ja
cdq
xchg
stc
mov
push
or
retf
movs
add
(bad)
jp
scas
xlat
das
adc
or
lods
in
inc
clc
sbb
mov
jb
mov
mov
and
(bad)
retf
mov
add
imul
mov
inc
push
shr
mov
ja
mov
xchg
push
xor
popf
inc
push
adc
push
(bad)
sub
xchg
xchg
divps
clc
lods
dec
jbe
sbb
xchg
xchg
ja
test
sub
ret
test
call
mov
dec
cli
and
inc
mov
inc
retf
or
mov
sub
pop
sub
call
sub
gs
dec
jne
xchg
fs
cmps
xchg
fimul
out
test
mov
or
xchg
inc
nop
icebp
and
dec
arpl
or
lock
nop
jecxz
sbb
imul
adc
inc
add
rcl
and
mov
test
pop
mov
mov
sbb
sbb
and
sub
nop
mov
mov
xchg
cld
and
test
fiadd
push
and
and
int
xor
jl
xchg
sub
cmp
cs
sub
ret
push
icebp
sbb
push
sbb
fmul
(bad)
inc
(bad)
cmc
push
adc
mov
sub
cmp
sub
adc
lock
test
or
jmp
outs
xchg
mov
pop
adc
imul
sub
push
add
dec
cmp
iret
sub
inc
pop
ret
push
inc
cli
pop
adc
jle
dec
cmp
inc
adc
pop
sbb
add
pop
xor
add
xchg
sar
xchg
cmp
mov
or
and
dec
jmp
and
lods
inc
and
lock
int3
xor
ins
out
mov
cmps
imul
popa
jge
in
jb
add
pop
ffreep
mov
or
cdq
jp
enter
or
jmp
pusha
add
push
bound
ins
imul
xchg
into
adc
push
adc
popa
popa
mov
inc
mov
and
adc
(bad)
or
pop
cmp
sbb
sbb
aam
sbb
js
arpl
dec
movs
push
daa
pusha
mov
in
lock
push
dec
xchg
adc
and
gs
add
gs
dec
push
xchg
cmp
push
popa
(bad)
loop
mov
sub
dec
lea
dec
out
mov
jo
mov
or
adc
adc
and
in
add
mov
xchg
dec
pop
shr
lock
outs
out
cmp
ror
inc
enter
enter
ds
adc
test
sti
pusha
jl
test
push
sbb
jns
imul
push
test
call
repnz
inc
push
push
idiv
test
lock
xchg
scas
xchg
push
xor
jae
push
int3
test
scas
fiadd
lods
jecxz
popf
sub
jo
dec
cmp
push
xor
mul
jo
div
pop
mov
fwait
int
leave
mov
iret
inc
jmp
xor
xchg
clc
jne
jnp
pop
fcom
(bad)
int3
cmps
jnp
mov
test
loopne
push
xor
retf
nop
jbe
push
cmp
xchg
sbb
in
sbb
cmps
ins
enter
inc
shr
adc
mov
xor
push
xchg
loopne
pop
pop
push
fs
cmp
fld
popa
ror
jns
fnstsw
dec
cmp
fiadd
(bad)
inc
and
fs
adc
mov
cmp
sub
or
lods
jge
lock
retf
inc
faddp
add
dec
add
xchg
inc
cdq
or
inc
mov
or
or
rcl
sbb
add
or
pop
js
fnstsw
sbb
test
add
or
int
xor
cmp
or
pop
sbb
push
add
or
xchg
test
and
pusha
pop
retf
pop
pop
xor
add
gs
mov
icebp
pop
jl
push
jecxz
js
mul
mov
js
adc
push
and
imul
imul
setns
fwait
pop
push
test
adc
fcomp
mov
adc
sar
lea
inc
sub
out
adc
outs
mov
pop
sbb
dec
adc
push
sub
lods
nop
pop
pop
movs
mov
push
repnz
rcl
ret
jbe
dec
and
adc
pop
jmp
dec
add
jo
ficomp
push
fcomp
mov
rcr
call
add
jno
out
jnp
sub
cmp
mov
cmc
je
call
and
sub
in
rol
scas
push
pop
pop
adc
ins
inc
retf
sbb
fild
fadd
pushf
fbstp
cmp
outs
and
out
add
out
mov
push
and
outs
mov
pop
adc
lods
pop
and
cld
or
push
xchg
jo
in
or
nop
or
add
dec
sbb
sub
add
mov
sub
loopne
push
add
xor
retf
test
dec
in
stos
cmp
or
fldenv
lea
sbb
inc
into
fs
adc
ret
inc
into
pop
aaa
add
ss
test
inc
inc
jmp
popa
lods
ret
out
andps
mov
clc
cmp
jo
fwait
xor
aad
nop
sbb
dec
pop
clc
into
fnstcw
jle
push
adc
dec
or
xor
mov
int
je
imul
xor
jl
push
cmps
cmp
ret
fdiv
add
sub
(bad)
or
or
pusha
pop
mov
sbb
cmps
mov
popa
sbb
mov
in
pop
and
push
sbb
int
inc
outs
inc
mov
add
fwait
nop
lahf
pushf
pop
mov
test
adc
mov
dec
enter
jle
test
sbb
push
nop
pop
pop
and
repnz
inc
pusha
test
and
sbb
or
and
popa
pop
or
enter
pop
and
mov
pop
adc
push
dec
jb
ins
nop
in
or
xchg
dec
push
pop
nop
imul
sbb
push
leave
or
mov
jmp
push
imul
sub
jo
jo
js
loope
in
xchg
xor
(bad)
and
inc
das
add
verr
mov
sbb
out
mov
mov
add
pop
lods
and
pushf
cmp
cmc
(bad)
fist
push
ja
and
xor
xor
xor
mov
inc
test
dec
dec
dec
dec
dec
dec
dec
dec
push
push
sbb
call
push
push
push
push
push
pop
pop
pop
xchg
daa
sub
dec
mov
adc
dec
daa
dec
retf
sub
xchg
dec
sbb
sbb
sub
cmp
addr16
stos
fist
xor
mov
dec
cmp
pop
push
adc
scas
data16
cs
cli
and
add
add
scas
mov
jns
add
dec
cdq
sbb
xchg
shl
out
dec
pop
das
mov
push
fnstenv
add
in
(bad)
sbb
test
in
movs
mov
leave
jbe
add
sub
clc
ins
push
out
je
push
and
push
xor
sub
mov
push
inc
jge
shr
xchg
lahf
sar
mov
and
mov
cli
fcom
cmps
push
sbb
mov
or
xchg
das
dec
or
cmps
stc
fsub
xor
ret
add
lods
int
fild
mov
cld
fisttp
add
es
in
push
mov
inc
dec
pusha
(bad)
jmp
call
outs
pop
jecxz
mov
rol
xchg
or
clc
leave
mov
aaa
and
xor
mov
ja
sub
sbb
sbb
ins
cmp
add
adc
pop
xchg
and
jo
add
add
cmp
inc
iret
outs
add
cdq
lar
mov
cmp
xchg
rol
into
or
rcl
(bad)
addr16
mov
in
and
imul
gs
cmps
push
outs
movs
mov
lahf
adc
or
pcmpeqd
jmp
xor
jmp
popa
dec
cs
cmp
mov
scas
cmp
js
jmp
xlat
sub
mov
add
xchg
test
sbb
(bad)
pop
mov
jmp
inc
(bad)
sti
push
add
cwde
add
retf
pop
add
pop
xchg
mov
mov
jg
inc
shl
loope
sub
psubb
lea
push
sbb
addr16
dec
call
in
push
mov
out
or
push
sbb
xor
and
je
mov
add
or
cmp
jg
mov
ret
and
das
call
pop
loope
imul
(bad)
popa
(bad)
ins
mov
inc
(bad)
pop
data16
cwde
inc
adc
mov
pop
jmp
push
jle
or
in
es
sub
int3
mov
add
rcl
lock
ja
jo
in
idiv
sub
xchg
cld
pop
xor
jmp
ss
sub
ja
xor
xor
add
pop
leave
pop
nop
outs
dec
mov
aaa
in
xlat
adc
in
(bad)
out
pop
or
(bad)
pop
in
dec
adc
adc
add
scas
jmp
clc
xchg
mov
xchg
sbb
mov
iret
xor
xchg
xor
aam
pop
ins
and
xchg
aad
imul
pop
push
nop
retf
add
test
adc
jle
inc
gs
push
add
inc
fwait
dec
loop
imul
xor
int3
(bad)
fnstenv
ins
shr
mov
aas
cmp
fbld
add
jge
aam
add
push
inc
sbb
imul
imul
(bad)
and
xchg
leave
xchg
leave
mov
add
imul
aas
mov
sbb
aaa
xor
mov
add
or
mov
cmps
cmp
xor
inc
and
sar
aas
inc
sbb
cmp
pop
jp
(bad)
xor
aam
adc
sbb
add
cmp
add
push
aas
fsub
mov
mov
js
es
inc
(bad)
inc
pop
movs
icebp
mov
(bad)
mov
dec
and
push
pop
dec
mov
ja
mov
and
cmp
mov
xor
cmp
shl
nop
ffree
ficomp
call
sub
enter
xchg
mov
dec
pop
add
add
and
push
and
ss
and
shr
sbb
scas
cmp
xchg
lock
add
sub
adc
mov
pop
pusha
sub
js
jae
mov
jp
sbb
jne
cmp
push
js
mov
pusha
dec
ror
dec
inc
punpcklbw
les
(bad)
movs
sub
retf
aas
jno
clc
call
jle
and
or
dec
pop
dec
adc
xor
ror
clc
xor
loopne
adc
mov
into
push
cmp
mov
mov
or
mov
jl
dec
dec
push
not
repnz
lea
and
mov
cmp
xchg
call
xlat
or
fisttp
stc
jmp
nop
sbb
adc
dec
or
ins
lahf
pop
jge
test
adc
sti
cmp
inc
xor
jl
lock
(bad)
outs
call
rcl
sti
push
or
push
in
jmp
inc
push
add
lods
push
xor
dec
add
or
push
shr
je
jne
sub
cld
and
sti
int
gs
and
and
pop
jo
outs
jecxz
sbb
cdq
je
fsub
or
enter
cwde
pop
or
xchg
ror
add
and
or
mov
xchg
pop
mov
outs
jle
inc
pop
inc
xchg
jmp
or
inc
(bad)
xchg
and
gs
aas
mov
enter
mov
shl
aas
hlt
ins
mov
and
or
les
jnp
(bad)
inc
jg
les
adc
jg
xor
xor
fidivr
inc
in
jne
mov
add
mov
pop
ins
out
pop
and
pop
mov
call
adc
clc
or
push
popa
dec
inc
cmp
pop
paddsb
xor
push
js
add
push
inc
xchg
mov
mov
mov
pusha
iret
pop
ds
adc
shl
outs
pop
inc
lahf
dec
cmp
lds
loop
les
das
inc
jl
pop
inc
cmp
dec
mov
adc
cmp
mov
daa
mov
or
cmp
pusha
xor
sbb
push
pop
test
adc
inc
shl
mov
cld
sahf
or
cmp
push
test
or
or
test
cs
or
loopne
pushw
clc
clc
mov
push
push
mov
mov
jno
ret
jmp
dec
ltr
daa
pop
in
dec
ror
mov
add
movs
in
clc
fnstenv
push
call
xor
(bad)
jecxz
push
inc
sbb
(bad)
jmp
fwait
push
ror
and
add
and
inc
mov
data16
daa
jge
hlt
ds
pop
rol
fisubr
sbb
push
inc
enter
add
je
(bad)
adc
dec
push
adc
add
shl
inc
pop
cmp
mov
sti
mov
popa
or
les
inc
ins
inc
cmp
leave
mov
lock
jne
repnz
xor
or
mov
ja
cmp
mov
rcl
lods
mov
add
mov
sbb
xchg
call
or
push
mov
mov
adc
or
or
and
out
lock
adc
add
mov
push
nop
or
inc
sbb
jge
mov
mov
test
imul
(bad)
adc
dec
repz
cmp
fdivr
or
jmp
sub
and
ins
leave
xor
xlat
push
(bad)
adc
adc
pop
xor
push
icebp
inc
adc
hlt
enter
inc
iret
mov
ror
fld
sub
idiv
inc
adc
sti
inc
pop
pop
das
loopne
lock
gs
hlt
enter
mov
cmps
das
std
lds
xchg
clc
pop
lock
cld
cs
mov
add
shl
pop
inc
lods
jle
sbb
into
dec
jl
shl
sub
adc
dec
sub
cmp
jo
jl
pusha
jno
shl
pop
cli
lock
test
mov
addr16
cmp
push
mov
and
add
sub
add
test
mov
add
neg
xchg
inc
mov
jmp
push
or
dec
xchg
mov
or
jno
scas
dec
lods
sbb
push
inc
sbb
addr16
sub
or
mov
mov
mov
adc
adc
shl
test
das
jns
lock
inc
in
inc
pop
pop
jecxz
adc
add
hlt
inc
mov
imul
xchg
dec
jge
pop
push
push
(bad)
mov
inc
adc
cmp
dec
icebp
push
xor
jecxz
fsubr
les
stos
mov
cmp
jle
xor
mov
mov
ret
push
adc
inc
xor
das
cdq
add
mov
aaa
lea
hlt
or
gs
clc
adc
(bad)
push
mov
add
inc
push
sub
popa
test
lock
rol
pop
add
adc
movs
xor
movs
imul
dec
jecxz
inc
cmp
or
movs
pop
test
loope
cmc
sub
jle
cmp
rcr
ins
gs
sbb
mov
lods
sub
hlt
enter
cmp
hlt
add
ss
pop
into
hlt
sub
xchg
das
push
or
push
repz
cmps
mov
imul
jns
aad
sbb
add
xor
jmp
jb
mov
cmp
rcl
push
lock
dec
add
inc
push
stc
cmp
(bad)
pop
fbstp
enter
push
push
cmp
(bad)
in
add
sub
add
add
sbb
clc
and
mov
adc
repz
or
outs
ja
outs
aaa
fistp
fs
push
outs
add
loopne
cs
and
popf
mov
adc
xchg
or
or
xor
ret
jg
jl
push
dec
iret
push
inc
fsub
enter
dec
push
rcl
or
pusha
imul
cmp
mov
cmps
hlt
inc
xchg
popa
dec
loopne
and
xor
(bad)
fisttp
dec
push
adc
xlat
xchg
pushf
or
or
iret
xor
fcomp
ffreep
adc
test
in
adc
sbb
stos
pusha
repz
and
sbb
cmp
or
and
ss
xchg
call
call
call
inc
out
daa
mov
pushf
in
sbb
sub
or
gs
sbb
dec
addr16
pop
aad
push
adc
inc
mov
dec
clc
movs
in
add
(bad)
xor
mov
jmp
inc
je
test
jno
xor
and
xchg
mov
add
inc
and
xchg
inc
push
dec
lock
inc
dec
clc
or
stos
ret
xchg
mov
push
cmp
imul
sbb
rcl
push
pop
mov
clc
lock
(bad)
lock
call
test
add
(bad)
movs
inc
and
and
test
and
jno
adc
xor
sub
inc
ror
mov
xor
add
(bad)
outs
(bad)
cwde
ret
(bad)
icebp
data16
xchg
push
sbb
arpl
mov
push
xor
pop
jmp
mov
cmp
add
cmp
jge
imul
push
pop
shr
lods
or
pop
adc
call
sbb
push
test
test
sbb
call
pop
pop
inc
push
sbb
and
adc
adc
movs
adc
push
(bad)
dec
dec
push
fs
pop
pusha
xor
jl
adc
mov
jmp
ins
cmp
pop
dec
je
(bad)
push
retf
test
mov
sbb
nop
xchg
inc
sub
push
movs
stc
adc
sbb
dec
lds
(bad)
das
inc
jnp
shl
cmps
clc
mov
shl
jnp
push
retf
(bad)
push
test
adc
rcl
les
add
push
das
xor
mov
mov
xor
cmp
cld
xchg
jo
(bad)
inc
pop
or
push
call
push
or
push
pop
xor
pop
sahf
aaa
and
sbb
dec
into
es
mov
sbb
xchg
pop
push
push
or
stc
cmps
ds
or
int
adc
add
(bad)
ss
mov
add
inc
adc
je
sbb
mov
in
add
xor
or
stc
rol
cmp
mov
push
and
push
add
dec
pop
int
xchg
sbb
mov
add
cmp
inc
add
xlat
mov
mov
adc
pusha
das
in
xchg
xchg
cmps
xchg
xchg
out
sub
push
(bad)
add
or
push
dec
sub
dec
das
mov
xor
ss
inc
ret
inc
fsub
loopne
xlat
add
xchg
lock
cmp
cli
sub
mov
push
or
and
repnz
(bad)
mov
cmp
pop
push
add
sub
fnstenv
cmp
mov
pop
fadd
xchg
or
daa
nop
dec
inc
add
xchg
add
les
ins
xchg
popa
and
xchg
xchg
cmps
or
pop
push
outs
retf
cs
cmp
das
mov
xchg
xor
loopne
dec
aam
ret
add
test
and
and
jl
cwde
and
pop
out
iret
or
xor
fcom
rol
mov
sub
push
ror
outs
inc
mov
or
push
ja
mov
or
xor
dec
pop
sub
or
xor
outs
test
mov
mov
sub
ds
inc
push
push
inc
add
inc
inc
cmp
loopne
or
(bad)
adc
cs
xor
lea
cmp
adc
ins
ja
sbb
pushf
push
sti
mov
lods
aas
outs
mov
(bad)
in
std
sbb
push
cmps
push
fucomi
push
push
bound
add
in
jg
adc
lahf
pop
cmp
cmp
pop
call
or
adc
aaa
cs
pushf
push
adc
pop
mov
inc
cmp
fimul
mov
cmp
ret
mul
je
sbb
test
xchg
pop
pop
mov
add
fisubr
pop
push
pop
adc
aas
jbe
and
inc
or
mov
pusha
dec
ins
jmp
add
mov
xor
dec
shl
fdiv
movs
aad
xchg
jo
jne
adc
add
aaa
mov
ss
inc
ret
or
pop
jg
scas
jns
inc
fs
or
out
pop
fisubr
jmp
sub
cmp
sahf
gs
stos
adc
pop
push
mov
sbb
adc
xor
je
cmp
mov
cwde
pop
and
cld
add
fwait
mov
shr
jmp
fwait
inc
les
inc
inc
popf
push
arpl
daa
mov
mov
mov
and
xor
add
mov
xor
add
ins
sbb
pop
or
les
mov
fwait
mov
retf
add
mov
js
popa
jb
push
or
mov
push
dec
sub
and
adc
mov
sub
jmp
push
test
mov
adc
sar
test
dec
iret
cmps
out
ret
dec
or
int3
inc
push
ss
xor
jmp
mov
iret
test
inc
inc
inc
pop
lea
cmps
inc
cmp
xor
inc
dec
push
sub
loopne
xor
mov
pop
fsub
jb
pop
mov
xor
out
loopne
pop
lock
loop
ret
iret
div
ret
adc
pop
xchg
enter
adc
or
cmp
pop
jmp
sbb
adc
pop
stos
pop
pcmpgtb
fistp
push
cmp
hlt
or
cmp
jnp
sub
ins
retf
pop
and
adc
or
xchg
mov
mov
jle
jb
shl
mov
mov
ins
movs
xor
push
add
arpl
dec
ja
mov
mov
push
xor
movs
pop
addr16
cmp
mov
jge
inc
inc
xchg
jne
mov
leave
fnstcw
push
push
data16
sti
ds
xchg
ror
movs
je
sti
dec
cdq
nop
rcl
inc
push
push
pop
cmp
ror
movs
mov
xor
pop
and
dec
scas
and
mov
and
cs
xor
xchg
mov
and
jmp
sub
(bad)
lahf
push
lea
jl
dec
imul
add
movs
inc
sar
sub
mov
cmp
inc
cmp
pusha
jmp
pop
sbb
add
push
push
dec
pusha
inc
pop
(bad)
jl
pop
push
mov
fs
je
(bad)
imul
adc
mov
into
inc
repnz
js
xor
ja
mov
inc
xchg
mov
xchg
dec
adc
adc
add
xchg
shr
dec
or
es
mov
sbb
or
pop
xor
daa
sbb
adc
pushf
xor
mov
repz
pop
mov
mov
sbb
std
mov
(bad)
fsub
push
pushf
and
xor
inc
xchg
sub
push
dec
adc
lods
inc
or
cmp
test
loope
repz
cmp
jne
mov
inc
sbb
stc
sub
les
inc
push
sbb
push
xlat
or
push
mov
and
lock
or
sbb
push
repnz
sti
popf
fwait
jmp
push
dec
inc
add
adc
dec
mov
and
and
add
lock
add
cmp
sub
mov
and
imul
int3
add
lahf
jl
mov
pop
aas
ffree
inc
out
ins
xor
push
adc
ins
xor
cdq
into
sbb
test
sub
pop
mov
xlat
loopne
mov
add
scas
bound
and
hlt
sbb
es
leave
shr
add
add
ds
arpl
fisttp
movs
inc
les
mov
mov
xchg
test
sub
les
sbb
dec
cmp
mov
pop
dec
xor
loopne
fs
sbb
aam
stos
fidiv
std
je
push
sbb
pop
es
repz
out
push
jmp
retf
xor
inc
mov
and
into
(bad)
ret
aad
sar
movs
adc
sbb
in
ds
int3
push
pop
lods
jp
cmps
lds
out
push
mov
adc
(bad)
popf
dec
ret
mov
sub
dec
scas
and
aas
push
movs
loopne
and
inc
jmp
je
test
dec
pop
xchg
fdiv
dec
and
and
(bad)
cmps
lahf
imul
dec
add
push
mov
pop
rcl
in
xor
mov
sub
pop
fst
inc
fisttp
test
cmp
push
(bad)
or
stc
(bad)
mov
add
or
inc
pop
cmp
adc
sbb
repnz
or
push
dec
sub
scas
int3
iret
add
dec
adc
sub
sar
mov
popa
ret
clc
ss
popa
and
add
jne
mov
sub
aas
mov
pusha
cmp
lock
sbb
inc
inc
push
sub
test
aaa
cmp
mov
sbb
mov
ret
fld
ret
sub
fsubr
add
int3
mov
call
adc
cmp
push
cmp
rcl
cwde
adc
fs
aaa
sbb
retf
dec
(bad)
(bad)
xchg
iret
sbb
inc
pop
mov
xchg
stos
cmp
jmp
push
sti
jl
inc
test
loop
mov
out
adc
inc
rcr
xchg
jno
je
mov
ret
inc
sbb
(bad)
sub
cmp
mov
and
je
add
daa
push
sub
pop
jne
outs
loope
or
es
xchg
jg
dec
and
(bad)
in
adc
mov
xchg
xchg
mov
idiv
scas
and
and
pop
cmp
push
mov
sub
gs
pushf
div
adc
pop
push
cmp
add
test
push
xor
add
nop
rol
xchg
gs
push
cmp
mov
mov
sub
inc
push
xor
mov
mov
inc
pop
popa
push
pusha
jl
cmp
test
sub
(bad)
cdq
push
add
xor
inc
inc
inc
xor
(bad)
inc
out
movs
fwait
inc
xor
mov
and
lods
cmps
aaa
cmp
es
inc
stc
daa
pop
ins
mov
push
mov
fbld
pop
push
push
lahf
push
test
je
or
enter
sub
cld
sub
pop
nop
daa
sbb
or
jo
mov
sub
add
es
aaa
mov
mov
cwde
imul
jmp
(bad)
fbstp
nop
sbb
hlt
cli
mov
hlt
mov
mov
jmp
mov
mov
sub
adc
push
mov
call
out
in
clc
jmp
aam
sbb
shl
jmp
int3
call
js
int3
js
dec
bound
mov
fld
test
add
in
shl
sub
jp
fisub
jp
pop
sbb
addr16
(bad)
aam
pop
enter
add
cwde
or
(bad)
jnp
inc
add
inc
mov
das
inc
cmp
add
pop
dec
shl
cwde
xor
mov
outs
dec
(bad)
adc
and
rcr
or
rol
call
jp
dec
lea
inc
cs
hlt
nop
xchg
inc
fwait
das
dec
(bad)
fdiv
arpl
inc
imul
inc
retf
pop
add
jnp
jmp
jmp
dec
inc
add
xchg
jbe
xor
mov
mov
or
cli
or
or
jg
push
cli
in
mov
lods
hlt
add
push
stos
imul
popf
sub
aam
jge
jecxz
pop
ss
sub
cdq
push
xor
push
and
dec
add
inc
pop
or
enter
loop
inc
int
add
sbb
mov
cld
push
pop
mov
add
popa
lds
cdq
je
inc
sbb
test
(bad)
mov
and
bound
xchg
dec
push
cli
data16
cli
and
mov
movs
mov
and
and
and
pop
sbb
in
mov
add
jo
imul
pop
fcmovu
add
shl
push
push
cmp
push
dec
nop
lods
push
or
cdq
sbb
addr16
sub
aaa
sbb
jmp
add
xor
test
popa
pop
int
loope
ror
pop
xor
and
ret
adc
call
add
scas
push
mov
imul
push
sub
enter
inc
ss
pop
mov
dec
inc
pop
pop
and
cli
inc
pop
popa
sti
cmp
je
xor
push
shr
or
inc
call
enter
ret
mov
imul
(bad)
leave
or
retf
lock
mov
arpl
sbb
add
cli
mov
sbb
imul
aam
fld
js
ins
hlt
sub
add
nop
ins
retf
mov
push
add
int3
fcmovnu
xchg
pop
xchg
dec
or
cmp
popa
add
loopne
add
xchg
xchg
xlat
pop
mov
add
inc
daa
fucom
add
pop
cmp
cs
jl
adc
test
out
jge
sub
mov
or
jle
pop
cmp
ret
adc
sub
(bad)
or
cmp
pop
or
fwait
add
lea
add
push
sar
mov
xor
mov
sub
pop
fcomp
lods
or
arpl
add
xchg
lds
jmp
mov
imul
xor
out
dec
cmp
lea
test
or
pop
ret
outs
pop
aam
sub
out
mov
inc
imul
ss
dec
dec
ror
cmp
adc
in
les
jecxz
shr
jmp
xlat
jo
data16
sar
loopne
and
or
cli
adc
pop
jl
fld
nop
adc
or
out
pop
movs
lods
dec
and
ja
rcl
push
dec
lahf
pop
nop
xchg
inc
cs
das
dec
inc
dec
inc
arpl
das
imul
ja
or
mov
mov
out
xor
jg
and
xor
test
or
and
jle
cmp
mov
xchg
shl
jmp
fst
and
cmp
cmp
call
cs
sbb
sub
inc
push
fiadd
jmp
(bad)
out
push
mov
jmp
and
xor
js
or
push
leave
pop
inc
xor
dec
xor
add
add
cmps
sbb
sub
hlt
pop
call
ror
loop
xor
shl
and
pop
jmp
xor
lods
iret
pop
call
js
mov
lock
fimul
fstp
cs
fld
movlps
ins
push
aas
rol
push
mov
or
pop
mov
inc
jo
test
jge
les
mov
mov
or
push
out
sub
adc
sbb
cmp
ss
add
nop
call
mov
shl
pop
jl
(bad)
fcmovnbe
mov
jno
inc
sub
js
or
stos
or
xchg
mov
inc
pop
jne
or
les
neg
les
or
test
in
aaa
lods
push
rol
in
sub
xlat
push
nop
ret
shl
movs
(bad)
xor
leave
push
dec
js
arpl
pushf
or
inc
mov
inc
mov
push
jo
add
inc
push
pop
fadd
mov
sbb
dec
clc
push
test
jb
fs
inc
fbld
fs
aaa
cmp
xor
inc
push
add
shl
add
add
cmp
sbb
pop
sub
sub
push
sbb
cmp
ss
retf
jp
mov
jl
aas
in
and
adc
int
dec
jl
repnz
stos
shl
push
ret
aas
cmp
jbe
jmp
ret
cmp
adc
sub
cwde
data16
push
mov
not
inc
mov
jmp
loopne
in
in
arpl
dec
add
mov
inc
dec
add
push
sub
sbb
push
push
pop
cli
inc
sbb
mov
mov
adc
mov
dec
pusha
dec
push
or
cmovg
push
ret
cmp
adc
jno
aaa
sbb
sahf
aam
mov
cvtps2pd
jo
xlat
adc
es
inc
aas
cmp
sbb
adc
dec
cmp
add
cmp
repz
pop
jl
jae
and
aad
inc
jae
ret
inc
fdivr
inc
cmp
nop
hlt
jl
inc
pop
dec
sbb
not
fs
loopne
sbb
lahf
rol
inc
push
cmp
or
sub
loopne
and
push
push
ror
aaa
cmp
scas
test
mov
rol
jg
lock
xor
dec
or
sti
xlat
xor
sub
js
sbb
dec
jmp
add
aaa
adc
pusha
sub
je
vcvtsd2ss
mov
dec
test
xor
arpl
test
loop
jnp
aas
test
inc
push
aam
adc
test
push
pop
jecxz
call
and
pop
jp
icebp
in
adc
push
je
mov
pop
jbe
das
pop
jmp
repz
pop
rol
pop
and
push
jle
ins
ficomp
in
mov
mov
sub
mov
sbb
inc
dec
pop
and
shl
push
loopne
inc
or
sub
js
jmp
and
xchg
inc
nop
xor
cmps
inc
cs
inc
or
daa
test
jge
pusha
mov
test
mov
push
ds
out
sbb
push
sub
mov
scas
cmps
pop
or
clc
mov
sbb
sbb
lock
test
and
xor
adc
fdivr
mov
add
jo
cmp
ret
xchg
ins
je
test
cmp
cmp
imul
sti
jge
sub
test
xor
push
push
push
mov
out
mov
idiv
fisubr
fimul
out
xor
hlt
mov
adc
je
or
fdivr
jo
lea
jns
mov
ins
fcmovnb
repz
mov
sbb
dec
xor
test
push
in
push
movs
jmp
or
pop
adc
mov
jns
shl
cmp
cmps
repz
sub
retf
push
sub
pushf
gs
call
test
xor
imul
mov
add
jnp
ficom
sbb
push
dec
push
push
outs
push
lds
jecxz
movs
adc
or
and
adc
movs
cs
sub
mov
cs
push
dec
xor
rol
(bad)
jnp
jb
or
loope
(bad)
adc
daa
add
pop
and
pop
dec
mov
loope
cmp
aam
mov
cmp
popa
add
das
pop
in
fsub
pop
add
jmp
or
in
pop
xor
cmovbe
pop
je
pop
xor
int3
mov
mov
test
dec
xor
push
or
(bad)
out
mov
mov
adc
inc
shl
or
nop
fcmovbe
xor
sub
xchg
or
sbb
or
or
push
mov
xor
cli
call
sbb
icebp
int3
pop
or
pop
xor
dec
lods
pop
std
in
repz
xchg
pop
retf
inc
aaa
adc
(bad)
jae
xor
sub
cmp
mov
es
es
pusha
movs
icebp
adc
or
or
iret
in
pop
imul
loopne
or
enter
fstp
cli
xchg
jne
sbb
test
push
out
mov
jne
test
mov
cmp
ficomp
pop
inc
xchg
jo
mov
pop
test
sbb
call
repnz
mov
popf
mov
xor
sbb
fisubr
or
and
mov
or
push
sbb
jnp
cli
daa
jmp
jle
xor
add
and
sbb
pop
cdq
mov
add
(bad)
sti
out
lds
ror
out
call
add
xchg
sub
sbb
jmp
sbb
inc
jmp
or
xor
dec
mov
adc
sub
imul
add
sbb
sbb
mov
ins
cld
add
jne
push
mov
cmps
fucomip
push
sbb
cs
inc
push
stos
inc
ins
jg
test
xlat
inc
add
lds
pop
pop
sub
push
sub
test
jg
push
and
out
lds
adc
jl
inc
sbb
and
aas
dec
pop
mov
inc
js
ret
(bad)
mov
leave
sub
sbb
pop
inc
js
adc
sbb
lea
push
mov
adc
fnstenv
push
mov
and
add
into
push
out
mov
and
pop
xor
pusha
or
push
jnp
repz
clc
dec
push
hlt
dec
sahf
les
out
iret
test
sub
(bad)
sahf
idiv
xor
fdiv
jg
dec
add
mov
cmp
push
and
in
xchg
and
adc
dec
add
mov
loopne
dec
aas
pushf
and
push
cmps
aas
scas
xchg
jmp
mov
mov
pop
adc
sub
popf
movs
pop
mov
push
add
popa
xchg
fwait
xor
xchg
lahf
rcl
aas
and
rcl
sahf
push
mov
stos
(bad)
xor
or
mov
add
ss
and
in
cmovnp
cmp
loopne
addr16
adc
jne
ss
jae
or
out
adc
fld
loop
js
pop
adc
pop
sub
test
cld
inc
aam
sbb
add
xor
inc
mov
xor
lods
pop
xor
dec
loopne
and
add
loope
xor
popa
imul
sub
mov
frstor
or
pop
js
aas
or
mov
aaa
or
dec
mov
sbb
sbb
add
add
enter
leave
enter
cmps
inc
inc
pop
or
adc
add
xlat
jl
inc
adc
daa
inc
push
inc
add
push
dec
pop
adc
out
sahf
pop
pop
pop
push
ins
outs
xor
lahf
scas
fs
or
xor
call
or
outs
adc
cmp
fdivr
or
push
cmp
bound
inc
mov
call
push
cmp
or
or
std
xchg
and
sub
jmp
xor
ja
ins
or
das
or
dec
inc
imul
fs
popa
js
pop
enter
adc
lahf
jmp
ss
push
sbb
ss
push
hlt
sub
pop
add
pusha
add
out
repnz
xor
push
aam
popa
call
add
add
mov
mov
mov
fs
fdiv
pop
repz
sbb
pusha
push
rcr
jo
push
mov
sub
xchg
pop
xor
mov
sbb
loopne
xchg
and
cmp
mov
or
inc
jp
dec
or
cwde
or
or
fbstp
test
push
mov
iret
arpl
mov
test
cdq
or
jecxz
add
xor
xchg
sub
outs
mov
ss
inc
gs
mov
dec
dec
adc
sbb
or
ss
xchg
test
sbb
out
mov
and
inc
std
das
mov
popa
aaa
push
addr16
sub
mov
mov
fidivr
pop
or
(bad)
cwde
pop
or
leave
push
inc
or
xor
in
movs
and
adc
fucomp
and
jmp
cli
adc
jo
mov
movs
shr
or
mov
in
mov
jne
sbb
or
push
adc
(bad)
sub
cmp
sahf
push
or
mov
xchg
nop
push
add
add
or
pop
adc
and
outs
in
adc
cbw
into
(bad)
in
dec
adc
inc
and
or
jl
gs
(bad)
cs
lea
mov
or
sbb
and
popa
and
imul
in
ja
cmp
fs
mov
jbe
mov
clc
jns
adc
or
repz
add
and
fwait
es
cmp
push
adc
sub
sbb
lea
pop
neg
test
xchg
mov
or
outs
inc
or
inc
push
or
sub
or
iret
ror
xchg
or
push
rcr
jns
ja
rol
jne
and
jo
xchg
jle
mov
js
cmps
pop
mov
sub
push
inc
dec
pop
push
push
dec
push
mov
xchg
jnp
add
ja
fst
xor
outs
add
pop
clc
add
fcom
xchg
add
popa
xor
adc
or
popa
into
dec
pop
xchg
mov
inc
and
cmp
and
add
pop
push
pop
add
clc
inc
add
cmp
inc
lods
pop
cmp
iret
mov
push
push
fs
jbe
and
les
shl
adc
(bad)
frstor
sahf
adc
adc
sbb
(bad)
and
sub
adc
push
pop
or
stos
sbb
mov
mov
add
loopne
adc
jp
pop
push
mov
adc
mov
icebp
sub
push
mov
mov
add
add
cmp
jmp
jmp
shl
fwait
inc
mov
jl
sar
scas
ins
sahf
pop
bound
cld
push
xchg
movs
arpl
fcom
jl
out
fs
dec
fucom
imul
push
fsub
mov
dec
repz
push
push
push
in
mov
xchg
jnp
add
sahf
neg
dec
push
and
push
cmp
cmp
jnp
mov
jb
jl
in
stc
fdivp
aam
pop
fsub
dec
jae
push
mov
div
pop
sbb
mov
fs
out
movs
dec
ds
jge
fsub
jns
shr
es
dec
push
inc
inc
mov
xlat
push
cmp
add
rcr
lods
or
cmp
mov
add
pop
xor
or
add
or
add
sbb
xchg
pop
retf
push
push
test
or
mov
lahf
mov
inc
cmp
mov
dec
or
push
cmp
(bad)
push
out
add
loopne
call
add
fimul
jae
jns
sub
cld
and
mov
dec
pop
xor
pop
jmp
xchg
sub
ret
xor
adc
cs
mov
push
loope
mov
mov
dec
ds
push
dec
pop
pop
ret
repz
mov
cld
or
rcl
repz
ins
pop
push
adc
cmp
aas
add
inc
xchg
or
xchg
clc
and
ret
int3
movs
cmp
sbb
dec
pop
and
xor
push
sbb
mov
sub
inc
pop
enter
xchg
in
push
adc
add
rcl
dec
mov
pop
pop
dec
push
dec
inc
and
mov
pop
call
xchg
xor
mov
push
and
xchg
xor
ret
bound
and
ss
into
sub
inc
es
es
pop
jb
lods
daa
xor
sub
mov
aad
int3
jl
mov
adc
cmps
jmp
or
mov
or
(bad)
mov
or
xor
into
jmp
daa
shl
dec
sub
int
pop
fwait
sub
or
or
jbe
nop
dec
mov
(bad)
dec
les
xchg
mov
cdq
xor
clc
les
or
push
dec
ins
fs
das
xchg
in
dec
jecxz
xchg
mov
out
inc
sahf
pusha
js
push
ret
nop
mov
and
pop
fdiv
cmp
dec
call
ins
mov
jae
data16
repz
test
push
adc
loop
xor
dec
xor
(bad)
xor
out
add
and
ins
mov
iret
cld
xchg
dec
xor
cmp
int
add
mov
enter
push
sbb
in
sbb
scas
aaa
iret
and
in
or
mov
std
cmp
gs
sbb
sub
retf
fisttp
pusha
bound
shr
inc
ds
push
sub
push
push
test
aad
cdq
loopne
sahf
pop
pushf
cmp
cmp
or
adc
inc
sbb
xchg
jno
pop
xchg
mov
dec
cmp
adc
test
nop
fcom
aas
pop
adc
inc
cwde
dec
lods
test
stos
inc
adc
loope
ins
push
or
and
inc
inc
inc
ficom
pop
sar
shl
in
loopne
stos
mov
fld
cmps
pop
movs
and
pop
mov
fmul
in
mov
inc
mov
sub
in
shl
stos
dec
loope
pusha
mov
stos
mov
push
dec
iret
add
nop
in
in
shl
and
dec
or
mov
out
jl
adc
dec
inc
inc
and
jmp
or
mov
mov
push
sbb
or
dec
push
sub
and
mov
adc
push
mov
nop
sbb
push
add
push
imul
in
pop
jnp
loop
add
fcomp
int
pop
in
cmp
int
jbe
shr
cs
in
adc
enter
add
mov
jb
or
fcom
jmp
rcl
add
and
call
jge
add
ja
or
inc
repz
and
pop
dec
dec
enter
sbb
push
mov
or
sub
sub
pop
ror
mov
pop
pushf
nop
or
or
mov
push
inc
(bad)
lods
mov
pop
cmp
pop
pop
add
arpl
adc
push
movs
test
add
xchg
dec
cmp
inc
imul
push
int3
mov
inc
(bad)
and
das
test
nop
in
mov
add
sbb
add
inc
dec
pusha
xchg
push
call
dec
or
mov
or
mov
jmp
in
rcr
adc
adc
dec
rol
xchg
hlt
xchg
mov
jp
push
push
add
fsubr
(bad)
jmp
push
dec
addr16
cmc
je
and
gs
pop
ret
das
and
fistp
adc
ror
sahf
fstp
es
sub
push
xor
mov
adc
in
jp
adc
ss
push
push
and
push
ret
das
inc
(bad)
into
fsub
and
adc
dec
bound
mov
mov
adc
outs
jae
hlt
mov
popf
in
push
adc
sbb
sbb
push
dec
test
pop
sbb
es
add
mov
xor
and
ret
cmp
mov
dec
fcomi
outs
or
fucomip
mov
(bad)
rol
ds
push
xchg
adc
mov
mov
jo
and
xchg
push
push
jo
push
push
xor
arpl
popa
bound
adc
cmps
dec
arpl
dec
jmp
movs
loop
ss
push
test
jbe
fisttp
cmp
mov
jo
shl
sbb
adc
pop
pop
ss
sbb
cmp
ins
and
mov
dec
nop
pop
mov
add
mov
pop
cld
ret
aam
enter
retf
ror
adc
pop
jmp
mov
jae
add
push
xchg
push
mov
psubsb
sbb
data16
sub
loopne
pop
mov
push
add
jp
xchg
ret
mov
jp
sbb
cmp
and
addr16
add
add
loopne
icebp
add
imul
sbb
mov
add
adc
add
pop
sahf
retf
add
add
adc
push
push
rol
adc
pop
inc
xchg
loopne
mov
mov
and
nop
(bad)
or
mov
movs
sbb
adc
add
dec
jae
add
or
test
and
stos
push
sbb
cmp
mov
pop
pop
push
aam
test
or
lock
sbb
adc
mov
pop
pop
dec
add
mov
shl
cmp
inc
inc
pop
aam
or
hlt
or
bound
icebp
and
mov
mov
or
mov
add
push
inc
or
or
push
cdq
jae
and
or
ins
dec
loope
cmps
ds
push
inc
add
inc
pop
xchg
mov
cmp
das
test
daa
sub
jno
fdivp
push
pop
dec
adc
adc
and
and
sub
outs
add
adc
add
in
dec
and
or
int
(bad)
pop
das
arpl
add
push
pop
outs
not
sbb
inc
sub
add
je
loope
ins
pop
scas
and
mov
pop
sub
or
push
inc
add
test
dec
lea
jmp
xor
push
hlt
pop
dec
test
dec
add
in
sub
sahf
retf
add
ror
fadd
movs
leave
adc
or
rol
jle
popa
sbb
movs
adc
mov
cmps
or
push
inc
push
and
and
aaa
sti
lock
lea
lahf
cmp
push
cmp
popa
jp
mov
mov
xchg
jmp
sub
jge
mov
fiadd
push
mov
fadd
rcl
lea
mov
adc
dec
mov
add
fdiv
mov
adc
sbb
add
(bad)
lock
add
shl
test
mov
sbb
cld
outs
sbb
icebp
outs
push
inc
add
fsubr
xor
(bad)
xlat
adc
sti
pusha
adc
mov
mov
mov
fcmovb
adc
sbb
lea
(bad)
jmp
sub
neg
jmp
arpl
je
dec
inc
imul
ja
sbb
add
push
push
test
nop
jle
xchg
(bad)
loope
mov
mov
loope
mov
pop
stos
ins
cs
add
push
xlat
inc
and
repnz
int3
iret
or
aaa
mov
cmp
pushf
sar
push
or
sbb
and
dec
jge
adc
dec
add
rcl
cmp
imul
in
sbb
mov
mov
pop
in
ret
out
cmps
adc
adc
pop
or
xor
xor
and
inc
fs
fcmovb
dec
ret
jge
adc
andps
jmp
inc
mov
or
ror
jne
mov
adc
dec
push
hlt
or
js
mov
je
push
jg
div
sub
cmp
and
test
sub
xor
adc
sar
xor
push
mov
pop
xchg
sub
mov
inc
sub
ret
cdq
fisub
and
adc
cmp
push
leave
push
and
imul
pop
test
je
ss
jmp
fcomp
lock
sub
in
inc
push
jp
jmp
sahf
out
loopne
and
bound
jle
mov
fmul
(bad)
xchg
and
adc
std
inc
sbb
mov
es
and
fdiv
movs
inc
xor
mov
adc
jle
push
push
or
out
fs
les
in
push
push
and
sbb
shl
mov
(bad)
dec
not
gs
adc
icebp
jmp
mov
and
lahf
or
dec
(bad)
jne
mov
add
sbb
xchg
lea
scas
push
rol
dec
rol
push
ss
das
popf
sbb
push
fld
sub
or
fld
mov
inc
sbb
jle
iret
sub
mov
jmp
cs
leave
or
pushf
mov
js
push
cdq
jecxz
les
lods
dec
adc
jle
add
adc
add
add
mov
pop
das
scas
jns
fnstenv
(bad)
enter
ins
pop
mov
adc
mov
cmc
push
ret
or
int
dec
sbb
jp
push
pop
mov
imul
cmovg
nop
jl
xor
jo
sub
sar
xor
or
sbb
or
adc
xor
mov
fsub
mov
test
jge
aad
cmp
lea
ret
mov
push
add
daa
rol
pop
adc
in
ss
mov
(bad)
xchg
xlat
nop
mov
call
sbb
add
xor
xchg
and
and
sub
inc
or
sub
and
pusha
popa
cmp
sbb
in
cmp
add
inc
push
xor
pop
mov
push
sub
pop
pusha
adc
enter
mov
and
jmp
jo
cmp
mov
xor
cmp
lock
push
out
mov
push
sub
mov
clc
in
test
jae
ds
push
loop
and
cwde
rcl
out
neg
adc
in
xchg
movs
jmp
inc
jb
aas
or
test
pop
mov
(bad)
mov
pop
adc
or
retw
xchg
fiadd
or
inc
mov
loopne
add
stos
add
dec
into
sbb
test
je
xchg
jg
or
popa
movs
aaa
jg
pop
and
xor
xor
dec
mov
sub
cmp
xchg
aas
or
push
ret
je
or
(bad)
popf
xchg
push
add
adc
xor
inc
fistp
dec
clts
sbb
test
xor
lahf
mov
dec
lods
xchg
ret
jp
push
push
out
lock
push
inc
inc
lods
push
pop
pop
inc
fisttp
stos
inc
pop
or
or
cdq
push
mov
rcl
mov
ret
xchg
inc
mov
inc
or
ss
dec
add
or
mov
shl
push
inc
push
sbb
mov
ins
push
pop
and
dec
cmp
cmp
adc
out
dec
test
ja
push
je
mov
ins
test
test
inc
nop
out
mov
outs
push
dec
test
xchg
or
dec
outs
push
fs
test
mov
inc
inc
sub
mov
in
xchg
(bad)
mov
repnz
sub
pusha
inc
mov
sbb
imul
pop
dec
outs
or
pop
cmp
inc
xor
xchg
dec
pusha
push
adc
prefetch
add
or
add
loopne
xchg
ss
sar
out
and
cmps
add
xchg
ror
sti
gs
or
sbb
xor
push
(bad)
lea
add
sub
inc
(bad)
mov
push
lea
push
mov
ficomp
aaa
push
adc
or
dec
xor
jg
jns
inc
outs
or
lds
sbb
out
sbb
mov
cmp
jno
push
jle
enter
mov
dec
ja
mov
fcmovnbe
mov
or
sbb
mov
add
xchg
mov
lds
jns
inc
xchg
dec
rcr
mov
inc
mov
xchg
jle
sbb
shl
sar
inc
and
mov
xchg
popa
lds
ds
mov
pusha
enter
mov
movs
jg
inc
sbb
(bad)
push
mov
cmp
inc
pop
xchg
das
inc
mov
jmp
jmp
dec
je
cwde
adc
xor
add
shr
mov
adc
xor
scas
and
sub
cmps
fbstp
sbb
(bad)
add
pop
mov
mov
inc
cmc
ds
adc
dec
ret
inc
loop
sbb
push
pop
xor
std
dec
push
adc
mov
dec
mov
data16
cmp
sub
mov
pop
sbb
shl
xor
xchg
sub
or
sub
push
xor
add
test
and
xor
xchg
(bad)
cmps
xchg
pop
xor
cs
jb
sbb
cdq
enter
mov
adc
pop
mov
cmp
inc
jle
mov
xor
jl
sub
ins
xchg
xchg
test
pop
add
sahf
jns
add
and
test
or
psubsw
(bad)
jle
ds
add
xor
add
movs
xor
add
cld
call
and
pop
cmp
jl
aam
push
push
mov
pop
imul
nop
push
popa
popf
sub
pop
jp
loopne
xor
dec
movs
dec
fdivr
and
(bad)
push
sbb
xchg
in
xor
inc
test
inc
xchg
pusha
adc
mov
add
loop
sub
xchg
mov
xor
xor
dec
das
xor
xchg
pop
and
pusha
ins
adc
push
cmp
push
jno
mov
fisubr
jmp
sub
or
sbb
or
movs
jns
inc
pop
ret
add
pop
push
xor
push
mov
fmul
loope
sub
fld
sub
pushf
mov
and
sub
lods
loope
test
mov
or
pmaxub
add
aam
push
jl
movs
pop
mov
out
mov
dec
dec
mov
lock
pop
adc
push
push
add
fmul
adc
jmp
push
mov
or
push
ss
out
xchg
or
fwait
mov
mov
lods
(bad)
scas
arpl
push
sub
lods
mov
inc
scas
adc
push
es
(bad)
lock
and
add
add
pop
sti
shl
rol
jne
test
dec
pop
or
mov
xor
or
xor
ins
rcl
outs
add
shl
xchg
aam
xchg
div
xchg
retf
fiadd
fadd
cmp
dec
sbb
add
and
imul
retf
inc
sub
pop
sub
test
test
mov
cmp
sub
aas
outs
mov
xchg
jnp
inc
movs
cdq
dec
inc
cld
sub
add
jp
jle
jne
push
fs
mov
stc
push
cmp
pop
mov
div
vpor
cmp
ins
das
jo
pop
cwde
das
and
add
(bad)
adc
mov
add
sub
push
sub
sub
cmps
les
jbe
fstp
push
mov
in
jo
fild
pop
sub
cmp
xor
xchg
pop
test
mov
repnz
xchg
dec
sub
mov
je
ror
sahf
cmp
jge
cmp
popa
fsubr
daa
push
jg
inc
add
jmp
aas
mov
dec
out
push
dec
mov
xchg
dec
in
sahf
adc
sub
movs
mov
add
lock
add
jo
(bad)
mov
aaa
add
and
push
adc
aas
not
sbb
fs
ins
ins
bound
jns
je
mov
inc
iret
xor
jne
mov
lds
xchg
sub
adc
cwde
mov
and
ret
bound
sub
sub
cmp
es
mov
add
out
and
push
dec
pop
xor
mov
adc
mov
pop
test
das
mov
ja
sub
adc
xor
enter
xchg
adc
inc
daa
and
and
aaa
movs
inc
jo
mov
sub
mov
xor
mov
add
rol
shl
aas
xchg
xor
mov
sub
xchg
mov
mov
hlt
mov
and
sbb
xor
sub
push
scas
pushf
mov
mov
mov
push
hlt
pop
sbb
mov
std
adc
mov
xchg
push
add
jo
aam
jae
nop
pop
sbb
add
xlat
sub
rcl
out
sbb
and
add
xor
inc
pop
push
jne
add
cmp
mov
xchg
push
cmp
xchg
jl
push
mov
mov
push
mov
pop
aas
aas
int3
adc
cwde
pop
enter
add
xor
movs
pusha
and
mov
outs
into
or
cmp
imul
cmps
cmp
or
fidivr
sub
sbb
adc
adc
sub
mov
add
std
and
ss
fwait
mov
xor
rcl
pop
xchg
lods
mov
adc
add
mov
nop
jne
(bad)
ret
mov
xlat
and
loopne
and
aam
adc
stos
or
lds
jmp
add
mov
jmp
js
dec
push
call
adc
push
cmp
add
dec
shl
add
add
add
xlat
xchg
add
inc
ins
mov
mov
and
add
adc
aam
mov
mov
sbb
inc
out
add
movs
or
ins
mov
add
sbb
iret
or
or
test
xor
sar
adc
pop
test
aam
cmp
test
inc
or
iret
dec
xchg
or
inc
pushf
icebp
movs
mov
push
jne
sbb
movs
sbb
sub
test
stos
xchg
fistp
pop
imul
loopne
mov
xchg
xchg
jne
lods
lods
pop
scas
push
push
test
jno
repnz
adc
das
sub
push
adc
and
and
lods
and
add
sub
sub
les
dec
or
test
imul
push
mov
call
jmp
sub
dec
cmp
jne
cmps
dec
shr
loopne
test
jne
aas
cmp
fcom
and
pop
adc
or
pop
sbb
inc
or
test
pop
xor
(bad)
pop
xchg
push
je
xor
leave
pop
gs
out
mov
push
movs
mov
and
es
nop
mov
jbe
push
loop
inc
push
pop
or
js
ins
push
retf
adc
movsx
(bad)
adc
aam
pop
in
sbb
inc
nop
(bad)
push
xor
push
dec
imul
enter
add
inc
rcl
dec
adc
mov
fbld
in
inc
add
mov
lds
pop
add
hlt
popf
ror
enter
clc
cmp
cmp
sbb
hlt
in
jne
inc
sbb
jecxz
ror
xor
xor
test
fwait
cmp
mov
xor
ds
nop
add
or
arpl
in
or
pusha
in
push
sub
or
mov
xchg
push
lock
test
and
lea
mov
ret
dec
or
pop
mov
call
aam
stos
inc
or
fsub
sbb
dec
sar
and
or
push
add
inc
and
mov
xchg
scas
lds
sub
inc
outs
adc
adc
mov
jnp
and
or
scas
pop
add
add
sti
jno
sub
mov
mov
xor
add
(bad)
xor
mov
xor
inc
pop
pop
or
pop
pop
push
clc
xchg
aam
adc
in
sbb
aaa
ror
xchg
cmp
pop
je
mov
cmps
sub
and
dec
movs
mov
push
xchg
test
mov
repz
dec
mov
test
mov
sti
ret
loope
or
push
ret
sbb
sub
sub
add
das
enter
inc
pop
inc
xchg
loope
arpl
lea
sbb
out
inc
or
call
(bad)
ja
(bad)
mov
push
loopne
sbb
lea
retf
add
leave
adc
sub
sbb
sti
in
popa
add
xchg
add
add
sub
jle
sub
push
adc
mov
push
push
push
sub
sbb
aas
pop
cmps
jo
fisub
push
popa
or
mov
pop
inc
lea
arpl
or
pop
dec
fistp
out
xor
sbb
add
gs
xor
xor
jmp
push
das
xor
xchg
(bad)
xor
out
fwait
xchg
cmp
jno
pop
add
pusha
mov
in
dec
cmp
jp
test
xchg
jne
sbb
jo
or
pop
pusha
or
adc
test
inc
xor
nop
addr16
mov
adc
in
xchg
in
mov
ins
aaa
cmp
stos
mov
mov
lock
sbb
das
add
es
adc
inc
aas
icebp
jnp
xchg
adc
sub
mov
xchg
int3
in
pop
adc
pop
mov
xchg
call
ret
ror
and
or
sbb
jmp
(bad)
xor
mov
fsub
outs
movs
and
pop
sbb
sub
(bad)
xor
ja
aaa
cmp
sbb
xchg
xor
sbb
xor
pop
dec
stos
jmp
xchg
and
or
mov
cmp
add
xor
add
data16
pop
adc
mov
pop
xor
push
inc
aaa
xchg
jne
inc
mov
pop
jg
shr
sub
adc
and
test
push
int
sbb
jbe
fcomp
les
jne
inc
sub
mov
jo
pop
into
adc
pop
pusha
bound
fld
stc
pop
mov
sub
inc
fadd
push
pop
jmp
adc
jp
pop
shl
adc
jb
por
xor
dec
jmp
add
cvtps2pd
(bad)
pop
rcl
jo
inc
movsx
cmp
ret
int3
popa
pop
lods
adc
or
cmc
je
sub
cmp
ror
icebp
aas
fcomp
xchg
ins
test
add
iret
mov
arpl
push
pop
out
ror
jecxz
arpl
fidivr
and
clc
inc
inc
cmp
adc
mov
pop
mov
ror
lods
stos
mov
and
xor
lds
rcl
add
out
inc
test
push
hlt
out
ins
mov
xchg
data16
sbb
or
ret
mov
xchg
pop
sbb
scas
loope
dec
cmp
jo
cld
popa
shr
data16
pop
or
cmp
je
add
or
mov
lods
and
je
shl
inc
sbb
xor
movs
jmp
xlat
in
cmps
xor
lea
or
adc
push
ss
sar
cmps
push
xor
sub
(bad)
iret
and
mov
sbb
inc
test
int
add
mov
in
mov
clc
je
cmp
test
test
pusha
jmp
int
cs
iret
mov
xor
jmp
aaa
(bad)
cs
scas
cmc
lahf
popf
xchg
es
pop
add
or
inc
je
sbb
add
test
mov
int
call
and
and
adc
ja
pop
loope
mov
mov
mov
mov
daa
inc
add
pop
lahf
aas
clc
xchg
mov
jo
adc
cmp
inc
sbb
scas
aas
shl
adc
dec
cmp
sahf
push
jo
cmp
add
jg
cmp
push
add
shr
jp
stc
fdiv
push
movntps
jo
daa
fsubr
and
mov
lea
mov
or
loopne
push
inc
loop
xchg
jno
in
cs
sub
jp
and
maxps
inc
add
nop
cwde
or
imul
shl
retf
ret
div
jp
add
shr
xor
or
push
nop
add
cmp
pop
adc
ja
and
sbb
out
push
lock
push
cmp
cwde
xor
in
and
mov
jo
popa
movs
mov
adc
jae
adc
cmp
jmp
push
outs
sbb
mov
pop
inc
sub
in
adc
test
xor
mov
jp
fcomp
movs
mov
push
fisttp
adc
mov
and
jge
popf
pop
add
push
cmp
dec
and
add
lds
inc
xchg
pop
pop
aad
test
push
push
sti
sub
mov
or
in
lds
sub
push
xor
int3
and
sbb
inc
sub
push
sub
dec
in
pop
dec
inc
jmp
push
adc
inc
mov
or
push
mov
popa
jecxz
mov
sub
loop
add
movd
add
xor
push
adc
adc
aad
mov
jg
rcr
test
sub
outs
xor
retf
pop
add
cmp
push
adc
mov
fsubp
cld
mov
add
or
add
fs
jmp
cmp
mov
push
ficom
push
or
lahf
sub
lods
sbb
clc
mov
pusha
jno
stos
cmps
mov
add
mov
add
sar
push
iret
jno
push
lahf
pop
adc
add
rcr
jns
jne
neg
mul
sub
int
add
jne
adc
jmp
daa
jmp
sbb
mov
or
lods
lea
mov
pop
add
sbb
ja
adc
mov
fsub
inc
sbb
cld
outs
jnp
out
add
xchg
movs
push
inc
xor
add
mov
cmp
loopne
pop
sub
add
or
sbb
and
rcl
and
adc
adc
daa
out
or
add
mov
or
add
sbb
mov
or
sub
daa
loopne
or
fisttp
or
lock
sub
fcom
push
adc
ins
pushf
das
jl
pop
push
pop
test
add
repz
mov
aad
(bad)
xlat
fsubr
add
sahf
mov
push
mov
adc
and
adc
xchg
and
loopne
add
data16
mov
shl
sbb
sbb
js
push
pop
or
mov
retf
xor
pusha
xchg
(bad)
xor
bound
adc
fisttp
sub
lahf
inc
dec
dec
inc
dec
push
scas
stc
adc
enter
push
adc
xor
sub
adc
jecxz
push
sbb
dec
test
sbb
jnp
push
mov
mov
pandn
loopne
dec
sti
and
or
adc
shl
adc
sbb
inc
dec
pop
inc
add
gs
inc
data16
add
ja
add
dec
or
mov
push
cli
jnp
pop
jmp
dec
cld
js
movs
inc
adc
loopne
or
sbb
mov
push
pop
or
and
(bad)
push
cmovno
out
mov
mov
cmp
pop
adc
shl
das
mov
add
cmp
inc
xchg
inc
mov
loope
pushf
or
je
stos
cmp
lea
inc
cmp
je
pop
mov
nop
sbb
pop
mov
daa
jne
xor
adc
mov
(bad)
mul
mov
std
sub
lock
sbb
pusha
jnp
test
addr16
loop
and
sbb
mov
rcl
xchg
xor
ror
enter
inc
lahf
sahf
cs
test
pop
add
bound
xchg
fcom
pop
dec
pop
add
popf
adc
push
mov
imul
aad
mov
sub
inc
cld
sbb
pop
push
sbb
sar
mov
dec
mov
jmp
and
xor
inc
pusha
hlt
mov
or
jne
push
sbb
leave
fs
cdq
js
(bad)
jb
(bad)
call
push
pop
mov
jno
dec
arpl
(bad)
jo
jne
js
dec
add
push
push
pop
pushf
cmp
fwait
sub
inc
xchg
jmp
and
movs
mov
adc
sbb
mov
inc
mov
stos
ret
mov
xchg
push
inc
and
cmp
mov
inc
add
mov
add
jne
cvtps2pi
dec
je
enter
add
mov
ja
add
ror
sub
push
bound
imul
adc
xor
shl
push
push
pop
mov
inc
inc
sub
dec
sbb
add
or
or
inc
xchg
or
test
cmp
adc
icebp
lock
nop
cmp
loopne
cdq
scas
aaa
mov
xchg
dec
xlat
sub
call
fistp
add
add
mov
movs
add
ret
jmp
mov
push
push
(bad)
jnp
push
and
shl
sbb
push
xor
lea
push
daa
sbb
jmp
test
dec
movs
inc
pushf
or
jle
std
mov
cmp
inc
inc
je
xchg
push
xor
pushf
dec
cmp
shl
dec
repz
jne
jmp
jns
jo
stos
test
ret
dec
and
pop
fnsave
cmp
call
sbb
fidiv
dec
sbb
out
pop
mov
sti
sub
std
inc
movs
pop
or
test
rol
sub
popa
enter
pop
jb
mov
mov
mov
movs
mov
dec
mov
adc
inc
or
xchg
enter
clc
xchg
cmp
pusha
inc
cmp
cmp
fldcw
sub
sbb
inc
add
fisttp
je
ja
test
ja
mov
and
mov
push
lock
or
pusha
mov
dec
mov
enter
add
inc
dec
or
push
xchg
out
xor
add
jno
add
inc
int3
pop
mov
add
dec
in
(bad)
sti
out
sub
inc
int3
or
arpl
cmp
add
mov
mov
sbb
dec
shl
clc
push
jne
mov
inc
push
aaa
cs
out
push
xchg
jl
jmp
push
xor
push
jns
or
imul
dec
popa
hlt
inc
bound
inc
sub
adc
popa
aaa
lahf
inc
adc
add
imul
pusha
pop
xchg
jg
mov
or
sbb
mov
mov
and
psrlw
inc
pop
loop
fbld
data16
int3
outs
ins
dec
pop
test
adc
pushf
mov
aam
icebp
das
or
fild
pop
sbb
rcr
and
xor
sub
fwait
jmp
dec
push
push
mov
sbb
nop
retf
shl
xor
pop
adc
pop
fisttp
nop
lahf
adc
ja
movs
push
inc
mov
push
push
xor
sbb
jne
fwait
add
call
rcr
stos
leave
xchg
adc
pop
push
adc
or
repnz
movs
hlt
mov
xor
mov
pop
outs
mov
sub
add
add
shr
adc
sbb
sbb
adc
push
cmp
pop
rcl
pop
xor
or
ficomp
rol
inc
in
add
add
inc
fucomi
fisub
or
leave
adc
clc
add
dec
out
mov
js
xor
repnz
call
cmp
inc
xchg
sub
or
inc
sub
rol
sub
inc
or
popa
jne
adc
lea
jecxz
ret
inc
scas
push
sub
and
mov
jb
xchg
in
gs
test
and
ja
mov
jmp
push
loope
push
cli
push
mov
ins
cdq
and
push
mov
xor
pop
test
xor
rcr
or
mov
shld
ret
sbb
adc
loop
aad
jp
jl
or
fsub
add
mov
xor
ja
mov
aaa
inc
lea
add
fmul
fild
xor
arpl
test
adc
fs
sbb
add
int
jnp
jno
cld
cmps
call
jb
popw
adc
xchg
cmp
pop
mov
mov
ja
into
mov
jmp
inc
loopne
mov
js
test
and
imul
or
movs
add
add
add
stc
and
into
xchg
and
inc
aaa
xor
and
and
jno
xor
xchg
hlt
sbb
jl
(bad)
jg
add
stc
add
leave
neg
(bad)
xor
scas
adc
inc
inc
out
cmp
add
and
adc
mov
xor
xchg
add
add
retf
cdq
adc
retf
pop
fcmovb
jo
sub
xor
add
jne
call
mov
scas
cmp
les
adc
lods
out
cld
scas
sub
cdq
push
adc
push
xor
mov
int3
dec
adc
or
into
daa
xchg
fsubr
add
rcr
sar
and
cmp
sbb
dec
and
sbb
test
rol
jmp
ins
or
push
fbld
add
or
cmp
sbb
or
xor
dec
stos
cmps
jne
in
shl
pop
push
int
mov
sbb
sub
dec
sbb
or
inc
cmp
add
lock
sbb
loopne
pushf
sbb
sbb
ret
push
jp
and
mov
dec
push
enter
dec
hlt
adc
mul
mov
adc
add
or
jnp
inc
or
push
push
and
xchg
retf
push
mov
or
sar
dec
adc
jne
add
adc
sub
add
icebp
mov
lds
add
and
and
adc
nop
xchg
cmp
test
dec
out
xchg
imul
and
scas
mul
cmp
dec
cmp
loopne
nop
movs
imul
adc
and
xchg
mov
dec
add
or
and
and
pop
(bad)
or
(bad)
sub
push
inc
loop
mov
add
mov
jo
cs
pushf
or
sub
mov
mov
ret
sbb
or
add
dec
adc
mov
sub
dec
sar
in
xchg
imul
fsub
sbb
cmp
inc
dec
jb
inc
push
cmp
cmp
lsl
sbb
inc
and
test
in
xchg
or
xor
jl
sbb
icebp
pushf
ins
add
sbb
das
push
dec
xchg
xor
pop
lock
add
ss
cmp
aam
mov
aas
cmp
xlat
push
mov
pop
dec
scas
aaa
xchg
int
mov
adc
xor
jmp
xor
push
inc
add
bound
jecxz
shl
in
mov
aam
add
lock
adc
xchg
sub
mov
pusha
sbb
in
inc
mov
sbb
loopne
fadd
shl
cmc
adc
pop
jne
pop
sbb
stc
inc
lock
inc
cmps
pop
dec
sub
hlt
add
cmp
add
push
add
add
xchg
jb
sub
mov
cdq
add
(bad)
push
sub
and
lods
les
por
sub
dec
in
cmp
add
jl
mov
mov
rcl
fs
push
out
cmp
jmp
ins
cmc
inc
in
bound
jno
add
hlt
lods
sbb
ins
hlt
or
mov
daa
jge
test
pop
loope
pop
push
and
push
inc
por
icebp
pop
push
dec
cdq
lgs
or
repz
mov
or
jb
movs
(bad)
stc
icebp
cmp
sub
sti
and
mov
movs
add
adc
or
aam
je
sub
mov
pop
xchg
add
pop
icebp
cmp
xchg
lods
inc
lds
sbb
outs
ss
ja
cmp
xor
xchg
inc
push
pop
inc
inc
jae
inc
cmp
cmp
push
repnz
xlat
adc
cmp
pusha
stos
or
dec
mov
push
dec
push
adc
mov
mov
nop
or
or
ins
jb
adc
das
ja
sub
outs
xchg
shr
or
cmps
sub
aam
mov
xchg
mov
int
or
adc
ror
dec
retf
jno
sbb
cmp
or
dec
inc
dec
movs
lods
imul
into
movs
rol
xchg
fild
cmps
xor
into
call
or
das
and
xchg
mov
xchg
push
cmc
cwde
or
inc
(bad)
stc
call
add
adc
push
mov
mov
fild
por
sub
arpl
movs
sbb
xchg
inc
mov
inc
pop
inc
jg
sbb
ret
mov
addr16
jbe
pop
fwait
add
cdq
jno
test
or
add
mov
mov
cmps
xchg
js
add
mov
fiadd
aas
je
sub
push
and
mov
mov
loopne
or
lods
je
mov
mov
or
in
jno
test
ja
mov
add
shr
wbinvd
inc
lock
js
fs
push
daa
pop
add
(bad)
div
callw
bound
xchg
and
adc
cmps
mov
mov
aaa
les
out
push
cld
adc
sbb
mov
popf
add
push
push
retf
inc
(bad)
cdq
pop
adc
push
pop
lock
pop
aam
cmp
xchg
cmp
adc
bswap
jnp
add
mov
pusha
and
add
sub
fcom
adc
pop
xchg
cmp
pop
mov
adc
std
push
or
hlt
xor
dec
jnp
ds
fld
stos
and
jl
dec
cmp
(bad)
sub
aaa
lock
mov
(bad)
and
pop
cmp
and
outs
cmps
mov
lock
push
add
div
pop
(bad)
les
or
aam
fwait
imul
stos
xchg
ret
fbstp
je
xchg
add
and
inc
pop
test
adc
out
js
clc
dec
movs
inc
cmps
push
push
adc
ins
sar
pop
push
test
ins
retf
push
cwde
push
push
imul
mov
ins
inc
shl
fld
push
or
jmp
je
lock
sar
adc
mov
daa
out
cmc
or
sub
xchg
pop
sbb
scas
mov
or
repz
add
inc
inc
(bad)
pop
xor
and
push
sbb
or
imul
dec
call
mov
loop
(bad)
xchg
ds
mov
sbb
sbb
popa
dec
adc
test
and
jmp
push
dec
xchg
or
push
nop
or
push
push
and
outs
lock
fisubr
xchg
cmp
cmp
mov
jb
je
cmp
push
test
aas
mov
push
test
mov
push
cs
loop
mov
mov
imul
cwde
xor
test
push
pop
inc
inc
sbb
push
inc
arpl
mov
jmp
push
sub
xor
and
shl
push
xchg
cmc
sub
mov
out
push
add
pop
and
dec
adc
cmps
xor
mov
(bad)
lahf
lods
pop
xor
jo
cli
or
pop
in
(bad)
adc
push
sub
(bad)
mov
sbb
adc
into
mov
xor
adc
fstp
xchg
push
or
nop
or
data16
push
mov
sbb
pop
pop
xchg
push
mov
das
test
adc
icebp
jmp
and
mov
add
pop
nop
loopne
add
mov
std
ret
es
repnz
loope
nop
in
mov
test
daa
ror
call
arpl
aas
je
call
pusha
push
mov
or
adc
call
inc
add
cmc
pop
sbb
fild
rcl
mov
adc
jl
(bad)
xor
mov
js
mov
imul
mov
mov
jmp
ss
enter
sub
push
popa
ins
push
dec
aaa
stos
daa
or
ret
mov
or
dec
xchg
pusha
cli
scas
jge
add
(bad)
fiadd
call
in
int3
mov
(bad)
(bad)
mov
xchg
sbb
add
jg
pusha
xchg
lea
fmul
out
(bad)
ins
pop
push
pusha
sbb
loopne
ret
add
cmp
push
sbb
stos
cli
mov
pop
xor
jg
mov
cmp
fcom
sub
fsubr
sbb
xchg
xchg
(bad)
sub
push
imul
aam
xor
pop
mov
aaa
cmp
cmps
daa
pop
push
cmp
jge
je
pop
adc
ret
jle
cmp
pop
stos
xchg
je
adc
add
aam
push
push
adc
cmps
lock
(bad)
addr16
fadd
(bad)
out
adc
mov
adc
pop
sbb
adc
fwait
add
dec
sar
mov
adc
adc
in
sti
push
movs
or
aam
inc
test
push
cld
mov
cld
dec
sub
xchg
and
cld
inc
xor
nop
cld
cld
add
push
push
inc
pusha
fcom
push
inc
out
mov
xchg
mul
mov
mov
pop
aad
add
aas
pop
sbb
or
call
imul
dec
std
push
jb
mov
in
jb
or
cmp
in
adc
das
or
lahf
push
ss
and
cmp
dec
(bad)
outs
test
sub
sti
inc
sub
sbb
jle
mov
fs
pop
adc
and
add
sbb
or
add
xchg
loopne
imul
sbb
pop
ja
lods
int3
cmps
test
bound
sbb
push
push
pop
mov
(bad)
xor
rol
stc
inc
pop
mov
xchg
mov
addr16
xor
imul
mov
or
imul
xchg
mov
imul
leave
leave
leave
in
inc
push
(bad)
dec
xor
leave
leave
xor
pop
sub
xlat
mov
pop
and
pusha
or
add
pop
xchg
outs
ret
(bad)
push
inc
imul
rcl
dec
dec
dec
aam
xchg
pop
dec
pop
xchg
jl
push
pop
pop
dec
imul
push
push
daa
cdq
jbe
dec
pop
dec
inc
dec
fiadd
inc
push
aaa
mov
push
in
call
sbb
ins
adc
jo
xchg
in
jo
cmp
iret
jg
add
cs
xor
arpl
fild
dec
adc
xor
sbb
lock
xchg
adc
imul
xchg
xor
pop
jp
mov
pop
xchg
aam
xor
aas
out
or
inc
pusha
mov
sahf
in
fistp
out
jl
or
jle
rcl
enter
nop
rcr
mov
pop
xchg
jmp
addr16
(bad)
lods
or
das
xor
ss
outs
gs
out
push
stos
or
bound
stc
push
sbb
popa
mov
mov
or
jno
clc
sbb
xor
mov
add
arpl
dec
add
cmp
pop
push
jo
pop
(bad)
and
sub
mov
adc
scas
mov
pop
test
cmp
or
mov
icebp
mov
add
pop
sbb
mov
add
daa
push
jl
sbb
test
fs
jns
push
fdiv
sbb
ud2
mov
lods
inc
mov
clc
push
imul
aaa
xchg
shl
pop
loopne
mov
clc
inc
jnp
ins
sub
sbb
outs
add
lea
lods
jno
lods
or
(bad)
nop
in
cmp
cmp
push
and
mov
xchg
(bad)
mov
fcom
rol
jbe
sahf
sbb
mov
inc
sbb
add
xor
cmp
ret
xlat
jne
push
mov
pop
daa
add
neg
adc
ret
sub
and
dec
std
add
jae
dec
js
adc
xlat
outs
ins
sbb
mov
mov
xchg
inc
push
pop
cmps
cmp
dec
vpaddw
nop/reserved
mov
jne
cmp
cs
imul
(bad)
lahf
fist
cdq
push
and
add
push
dec
dec
or
jae
movs
fisttp
mov
adc
mov
jne
sub
mov
nop
dec
xor
pop
loopne
mov
jae
or
xchg
into
sahf
mov
div
rcl
cmovo
or
sub
adc
mov
lsl
jne
movs
test
push
ds
test
std
xor
fisub
and
(bad)
cmp
icebp
pop
sub
inc
dec
cmp
ins
lahf
shl
sbb
push
push
int
pop
inc
inc
leave
mov
pusha
sbb
imul
push
ret
cmp
pop
test
bound
inc
sbb
test
cs
fiadd
jmp
cmc
lds
ds
sub
test
and
xor
es
ror
jne
iret
and
pop
mov
sub
popa
out
dec
ins
mov
sbb
imul
push
pop
jecxz
push
or
jp
fnclex
cmc
add
ret
(bad)
dec
sub
adc
mul
mov
stos
add
shl
adc
add
iret
xor
push
adc
and
pop
das
pushf
and
and
or
fidivr
in
mov
(bad)
std
test
mov
mov
out
xor
mov
aaa
xor
scas
add
mov
push
fld
rcr
jl
dec
inc
pushf
or
sbb
inc
popa
or
repz
mov
cmc
add
ret
clc
hlt
push
lods
call
fmul
mov
pop
ins
dec
sbb
cs
or
xor
lock
rol
cmp
out
icebp
in
repz
jmp
sbb
xor
mov
pop
sub
inc
into
push
inc
inc
pop
mov
lea
push
or
jne
mov
gs
call
mov
sub
(bad)
je
das
mov
add
mov
cmp
repz
mov
retf
lods
sbb
mov
adc
pop
add
es
add
sub
pop
vmovshdup
inc
jmp
sbb
loop
test
add
jns
mov
cmps
cdq
inc
inc
leave
cmp
mov
enter
je
mov
out
cmp
pusha
test
mov
sub
lock
(bad)
xor
push
inc
scas
test
jne
daa
and
inc
mov
inc
pop
mov
dec
mov
ret
pop
hlt
je
stos
xchg
cmp
ret
pop
loope
add
mov
push
outs
iret
jl
cmp
mov
push
test
adc
sub
push
or
and
sub
pop
ins
cmp
jo
fucomip
div
sub
test
mov
sbb
sahf
pop
lea
add
ins
ins
gs
imul
mov
mov
lock
pop
push
sbb
rol
add
clc
or
std
push
jle
pop
adc
add
pop
xchg
inc
add
sub
pop
mov
push
xchg
xlat
out
scas
outs
add
fucomip
pop
sbb
nop
push
sbb
push
xchg
jmp
xchg
mov
cwde
add
mov
mov
adc
or
les
mov
int3
fbld
lahf
mov
cmc
or
xor
mov
cmp
imul
xchg
movntps
enter
cdq
dec
sbb
pop
mov
push
loopne
add
adc
pop
cmp
xor
push
sbb
or
scas
and
xlat
xlat
pop
fbld
mov
cld
adc
sub
jo
js
add
xor
inc
push
inc
pop
lods
mov
inc
sbb
mov
cdq
mov
ret
add
xchg
jno
adc
xor
shr
push
mov
call
and
fadd
push
movs
(bad)
das
push
fcompp
bound
adc
push
jbe
mov
scas
ror
add
add
dec
or
and
add
mov
je
inc
int3
mov
cmp
je
pop
shr
data16
add
dec
sub
add
adc
mov
inc
jecxz
inc
add
sbb
sbb
or
leave
or
ret
add
push
cmps
cmp
es
cmp
mov
push
cs
jno
int3
jmp
out
in
add
sbb
push
push
fcom
mul
stos
xchg
cmps
fld
add
xor
fmul
mov
movs
data16
sub
add
xor
int
lods
mov
and
jns
test
sbb
and
inc
pop
sbb
daa
mov
ss
mov
ja
xchg
aaa
and
les
dec
or
mov
xchg
out
mov
add
aam
add
fs
jo
add
add
movs
aas
mov
(bad)
arpl
or
scas
mov
bound
push
xchg
jb
xor
cmp
mov
pop
sbb
nop
(bad)
iret
adc
dec
or
jmp
nop
pop
outs
test
pop
into
shl
aaa
mov
lods
cmps
xor
aas
adc
dec
inc
and
and
or
mov
xchg
call
fild
push
and
pop
sbb
xchg
push
xchg
inc
or
(bad)
pop
pop
aad
inc
sbb
sbb
jo
fld
(bad)
push
mov
mov
mov
rcl
fwait
inc
inc
push
pop
test
cdq
and
das
sbb
cmp
lea
retf
sub
fnop
add
mov
dec
lea
bound
nop
mov
or
lahf
adc
sub
fwait
sbb
add
and
pop
cld
pushf
mov
inc
pop
mov
inc
mov
pop
add
push
loopne
loope
nop
ja
sbb
mov
xchg
bound
and
add
jmp
pusha
xor
test
inc
call
and
sbb
cmp
sbb
ret
movs
loope
mov
nop
sub
inc
das
push
shl
repnz
ins
adc
mov
aam
ja
sub
add
mov
outs
aam
mov
push
push
shr
dec
pop
dec
cmp
xchg
sbb
adc
or
ins
nop
js
je
or
push
and
daa
sub
repnz
call
arpl
sub
jl
(bad)
sbb
js
and
es
add
or
adc
or
aad
dec
mov
int
xchg
adc
pop
jmp
xchg
xchg
push
out
xchg
mov
xchg
test
xor
adc
cmp
(bad)
fld
je
scas
or
dec
lock
pop
mov
movs
loopne
dec
push
pop
retf
mov
or
inc
loop
inc
sub
add
jp
xchg
cdq
test
push
inc
in
sahf
cmp
xor
call
lock
(bad)
xchg
jmp
cwde
in
mov
xor
loop
cmps
or
arpl
push
mov
sub
dec
add
call
pop
mov
ret
pop
sbb
cld
ucomiss
pusha
pop
mov
jle
mov
jne
add
adc
mov
mov
fsubr
or
cmps
xor
sbb
xor
pop
adc
add
cli
inc
or
leave
psrlq
cmp
int3
xor
pop
mov
xor
or
jne
sbb
push
adc
mov
arpl
push
inc
cmp
cs
cmp
sub
and
and
and
add
sub
xor
inc
cmp
shld
retf
ror
jbe
test
rcr
hlt
push
bound
mov
inc
sbb
pop
rol
dec
cdq
push
stos
xor
sbb
pop
(bad)
shl
movs
pop
lods
pop
jmp
ret
sar
mov
sub
jg
jmp
push
mov
xchg
lea
or
mov
inc
ficomp
lahf
pop
neg
aas
push
push
das
inc
push
xchg
mov
outs
(bad)
sbb
call
cmps
adc
scas
jle
ins
faddp
mov
sbb
stos
sub
jg
sub
add
cmp
xor
idiv
sub
or
ja
bound
jb
and
cmp
add
test
stos
in
add
jae
sahf
dec
pop
push
add
dec
out
add
mov
xor
retf
xor
sbb
adc
or
fdivr
dec
movs
sbb
mov
jo
xor
mov
mov
push
inc
dec
or
lods
pop
jg
ins
and
mov
mov
pop
cld
js
add
ret
mov
addr16
pop
es
sub
and
dec
(bad)
int
pushf
mov
xchg
adc
mov
jl
add
inc
add
mov
jb
cdq
xor
les
add
jmp
inc
adc
nop
pop
xlat
lods
add
gs
mov
pop
cmp
mov
push
mul
das
cdq
add
lock
push
popf
inc
xor
sub
cmp
sub
jbe
push
inc
push
fimul
test
add
(bad)
enter
push
loopne
test
pop
inc
imul
fsubrp
xor
mov
xor
fld
cmp
inc
icebp
xor
adc
push
dec
push
jl
(bad)
pop
je
movs
(bad)
clc
loope
ror
jle
call
sbb
neg
xchg
dec
xor
sbb
dec
or
(bad)
shr
fcmovnu
xor
xlat
xor
int3
push
jmp
rcr
es
and
popf
jmp
retf
rcr
daa
lods
lock
jge
add
loopne
inc
gs
test
push
xor
fist
jae
xor
rcr
addr16
xchg
xchg
imul
jno
ret
fadd
pop
pop
sbb
push
cld
and
cdq
add
sbb
lods
cmps
cmp
add
sbb
jo
cmps
sahf
int3
mov
or
int
inc
pop
fidiv
jl
fdiv
push
daa
add
or
fldcw
(bad)
ja
in
mov
bound
mov
jmp
jmp
add
jmp
test
jmp
push
nop
pop
and
imul
push
push
ins
loope
jg
arpl
xor
add
pop
jmp
in
mov
gs
cmp
aaa
cmp
sub
lds
test
push
jecxz
or
aam
pop
call
and
mov
adc
ret
std
je
push
ret
sti
jle
or
dec
xchg
jle
sub
inc
scas
and
je
ret
lock
sbb
pusha
mov
mov
cdq
nop
mov
sub
pop
icebp
or
call
and
mov
or
mov
cmp
inc
pop
mov
mov
or
dec
inc
or
add
sub
lock
rcl
xor
push
xchg
mov
cli
(bad)
dec
test
sub
out
out
je
loopne
lods
jno
mov
in
pop
xchg
sub
or
xchg
mov
and
shl
ins
into
jb
xchg
add
sbb
mov
inc
cdq
in
outs
fadd
int3
xor
jmp
pop
fldenv
sbb
mov
or
xchg
ss
clc
inc
fld
ror
cmp
add
sbb
and
mov
(bad)
push
or
mov
mov
data16
loopne
add
aaa
pop
sub
ror
xor
or
xchg
and
jne
mov
mov
xchg
mov
fsub
ss
push
fs
push
jmp
bswap
jnp
popa
loop
add
jmp
movs
xor
aas
add
call
scas
hlt
mov
cli
jnp
cmp
rol
ror
test
mov
and
mov
mov
add
nop
xlat
jmp
scas
popa
add
xor
jnp
and
cdq
outs
call
add
ins
pop
inc
adc
jo
jmp
shl
aam
jne
dec
pusha
sub
jne
add
jle
ja
xchg
fdivr
and
rcl
ficomp
daa
cmp
xchg
add
sbb
out
jns
and
sub
popa
add
inc
add
push
ds
outs
pop
jg
xor
and
je
out
ins
or
mov
cmps
cmp
movs
dec
test
or
or
inc
push
sub
fwait
mov
dec
mov
or
xchg
mov
push
rol
xchg
mov
mov
xor
push
sbb
dec
std
jecxz
test
push
std
aaa
dec
aam
scas
daa
xchg
or
push
bound
mov
ins
stc
arpl
sub
push
cmp
or
mov
or
and
lock
rol
xchg
sbb
mov
mov
rcl
movs
mov
cmp
inc
loop
popf
jecxz
sti
or
sti
icebp
fmul
pop
mul
mov
lods
adc
stos
mov
add
or
mov
mov
add
adc
pop
pusha
xchg
add
(bad)
out
jno
or
mov
loop
js
dec
jbe
movs
stos
fld
je
sub
sbb
outs
or
jne
adc
xchg
sub
pop
mov
daa
lock
in
add
add
aad
daa
or
inc
ss
out
rcl
cmp
test
fiadd
and
sti
popf
mov
and
push
sub
dec
out
cmps
sub
lods
add
hlt
fisub
mov
in
add
in
adc
call
adc
(bad)
(bad)
xchg
retf
inc
xchg
inc
dec
sar
dec
add
sub
inc
(bad)
or
stc
stos
inc
stos
or
push
ss
test
and
add
and
enter
adc
shl
jmp
cli
test
xor
in
inc
clc
xor
lods
leave
xor
fsubr
dec
jno
and
mov
lods
mov
adc
jb
hlt
in
ins
add
push
sbb
mov
nop
pop
das
clc
adc
ret
sbb
inc
mov
add
jne
sahf
sub
test
shr
mov
mov
add
cmp
push
std
out
or
sbb
pop
inc
pushf
mov
jl
clc
lds
js
cs
or
push
pop
hlt
pop
out
xor
jecxz
pusha
push
sub
jecxz
or
arpl
arpl
sgdtd
cmps
jb
mov
es
mov
movs
sbb
adc
cmp
xchg
xchg
out
add
data16
fs
xchg
xor
inc
enter
mov
ins
fiadd
sub
mov
add
imul
and
fmul
adc
push
aam
pop
(bad)
dec
add
inc
dec
scas
fs
js
mov
outs
xor
and
cmp
dec
push
jns
not
and
(bad)
in
movzx
inc
cs
push
adc
pandn
fld
add
mov
cmp
lock
cmp
push
mov
push
gs
sbb
lods
scas
mov
cmp
push
xor
ret
and
stc
leave
mov
xchg
sbb
test
jge
sahf
mov
pop
sahf
mov
or
(bad)
es
sbb
mov
scas
mov
shl
add
adc
inc
xchg
lea
cmps
rol
or
add
adc
dec
pop
xchg
lods
mov
mov
pop
push
and
dec
push
sub
aas
popf
shl
add
mov
addr16
mov
xchg
pop
mov
pop
pop
jb
jbe
dec
jmp
mov
mul
sbb
sub
inc
adc
fcom
pusha
mov
xchg
add
dec
rcl
push
xchg
lock
adc
clc
dec
fldcw
dec
call
dec
or
out
sub
push
cmp
jne
lahf
inc
or
dec
dec
xchg
adc
js
sbb
inc
ret
xor
outs
inc
or
inc
mov
or
mov
cs
adc
mov
retf
sbb
les
and
or
jp
or
mov
mov
jmp
adc
and
xchg
cld
ret
sbb
sub
fldcw
hlt
xchg
push
(bad)
jno
add
retf
ret
(bad)
or
data16
xlat
mov
push
das
loopne
popa
add
sub
ja
movs
dec
cmps
mov
(bad)
outs
sub
(bad)
and
mov
adc
xor
mov
jbe
pop
ds
in
cmp
or
jmp
sbb
clc
movs
inc
or
push
xchg
or
dec
inc
mov
push
imul
movs
dec
or
pusha
hlt
fisttp
fcomp
test
cmp
cmp
cwde
push
mov
je
fisubr
ins
stos
cmp
pusha
lds
aaa
push
mov
inc
arpl
ins
jns
pop
adc
stos
cmp
and
mov
daa
mov
jne
xchg
movs
dec
pop
jmp
inc
imul
jecxz
push
xchg
sbb
push
scas
adc
and
adc
mov
lahf
inc
sbb
push
int3
add
adc
ror
les
xchg
or
xor
cmps
(bad)
mov
xor
inc
xor
data16
sub
in
and
dec
outs
loopne
test
test
imul
in
ror
(bad)
lods
jbe
add
loopne
into
fs
lds
stos
xchg
dec
jne
cmps
retf
cmp
jne
xchg
loopne
mov
(bad)
stc
rol
jns
jg
inc
pop
mov
cmp
ret
aaa
lds
mov
mov
mov
dec
pop
pop
daa
mov
add
and
clc
push
add
cmp
jmp
mov
movs
sub
repnz
ret
pop
loope
mov
out
mov
lds
add
and
outs
push
sub
sub
xor
sub
movs
pop
jae
imul
bound
aas
mov
sub
shl
mov
(bad)
jmp
int3
pop
repz
mov
mov
xor
pop
jp
dec
adc
or
jge
in
and
repnz
fdivr
sub
and
inc
mov
push
aad
mov
push
ss
inc
pushf
fld
inc
adc
jg
add
(bad)
jg
jl
imul
add
and
test
xlat
aam
fdivp
mov
test
(bad)
popf
xor
loopne
out
and
xchg
shl
in
cmp
adc
push
ret
push
test
sbb
loopne
xor
mov
ds
movs
sub
fstp
inc
inc
call
repz
pop
ficom
add
sar
jp
shl
aad
fisttp
push
mov
cli
dec
fdiv
cmp
stc
cdq
js
inc
and
mov
mov
or
retf
lea
push
std
mov
loopne
ins
leave
push
call
adc
mov
je
mov
add
aad
sub
repz
or
pop
push
xchg
mov
mov
jmp
retf
xor
add
jns
aas
out
or
or
xchg
mov
sahf
inc
pushf
cdq
inc
sahf
inc
jo
or
jp
add
add
aas
mov
enter
add
mov
mov
loop
push
fild
or
add
push
movs
add
gs
ss
push
push
(bad)
inc
jb
retf
imul
lods
jno
add
daa
imul
sub
and
cwde
rol
leave
sub
arpl
ret
fs
dec
loope
pop
dec
arpl
jmp
cs
cmps
adc
xchg
scas
movs
add
push
rcl
or
ret
rcl
repnz
or
popf
sahf
cmp
ret
lea
push
int
(bad)
fadd
jne
jl
out
adc
ret
lea
pop
xor
mul
mov
add
arpl
rcr
aam
push
movs
and
ja
sub
and
add
loopne
mov
jge
jecxz
aaa
or
fistp
pop
pop
inc
rol
xor
mov
jl
xchg
xor
push
movs
lds
inc
pop
xchg
pop
aad
xchg
sti
pop
dec
test
adc
push
clc
push
call
mov
shl
push
inc
lods
jo
push
sub
loopne
test
in
loope
aam
test
pop
dec
out
call
(bad)
fs
aas
stos
dec
pop
cld
sub
popa
push
btc
push
adc
or
ins
jo
sbb
test
mov
retf
shr
nop
popa
push
push
cmp
or
sbb
push
add
or
ins
mov
push
aam
sbb
pop
dec
lods
mov
cmps
popf
push
(bad)
shl
push
push
sbb
xor
sub
out
push
mov
sub
adc
jmp
push
push
pop
in
rcl
das
sbb
js
test
sbb
push
pop
cwde
aaa
dec
inc
outs
inc
jbe
cmps
std
cmp
je
test
aaa
lds
add
push
adc
push
fist
mov
sub
mov
and
pop
add
das
add
sub
retf
aaa
add
in
inc
aad
add
lock
aad
xchg
sub
jae
jb
add
jae
loop
adc
adc
mov
gs
sub
bound
inc
jo
and
adc
mov
mov
xchg
ret
mov
or
jb
lea
push
adc
hlt
sub
jecxz
cmp
add
or
jl
lea
nop
movs
jl
btc
xchg
add
add
aas
push
scas
mov
mov
adc
in
adc
or
movs
sub
fs
adc
pxor
xchg
inc
lock
sar
(bad)
cmp
aam
shl
xor
jbe
add
cmp
add
scas
push
rol
int3
jmp
in
lock
aas
adc
dec
pop
nop
jb
scas
or
pop
dec
jnp
mov
dec
ret
es
repnz
xchg
data16
lods
ja
jmp
xor
fst
out
xchg
inc
je
or
sbb
mov
pop
inc
jmp
sbb
dec
gs
jb
nop
add
test
add
and
sub
adc
cmp
sar
dec
cmp
mov
sub
jb
stos
cmps
test
push
rol
add
pop
clc
stc
add
scas
ret
xchg
and
clc
test
test
add
adc
push
sbb
pop
mov
inc
cli
push
jg
dec
in
mov
dec
pushf
or
sub
and
sti
mov
inc
fst
jnp
xor
mov
ror
sti
mov
mov
mov
or
ret
mov
mov
adc
fst
adc
aas
push
mov
cmp
(bad)
repz
gs
retf
sahf
outs
inc
(bad)
xchg
push
mov
mov
call
push
aaa
sub
push
cmp
das
and
inc
jl
inc
loopne
(bad)
call
add
out
lea
fst
sub
(bad)
xchg
(bad)
dec
or
mov
push
pop
sub
pop
dec
int
mov
mov
aaa
mov
cld
test
in
aam
and
or
rol
or
adc
enter
mov
ss
push
sbb
arpl
pop
je
push
loope
push
adc
xchg
sbb
cs
scas
mov
sub
fld
xchg
mov
cmps
sub
mov
cli
or
xlat
xor
mov
call
mov
push
or
cmps
scas
xor
std
push
inc
sub
and
mov
lock
inc
pusha
push
test
push
mov
int3
dec
sub
pop
sbb
pop
(bad)
mov
imul
jmp
into
ja
aad
fdiv
push
jmp
retf
je
(bad)
push
cmps
call
cmp
sbb
dec
sub
ror
mov
sbb
lods
adc
add
stos
inc
adc
add
dec
cld
mov
pusha
mov
dec
cld
pusha
add
or
mov
arpl
cmp
out
sbb
pop
push
push
mov
sbb
dec
and
imul
dec
gs
retf
sub
lds
xor
pop
sub
lea
fwait
aam
push
inc
outs
ins
jb
dec
adc
js
jno
and
pop
inc
fs
adc
loopne
xlat
add
pop
push
ja
mov
dec
adc
add
or
(bad)
fdiv
push
jne
jo
lds
imul
rol
xchg
cmp
in
ins
scas
inc
cmp
mov
mov
pop
inc
call
add
imul
sbb
push
ficom
sub
sbb
pop
nop
xor
lock
inc
add
pop
mov
ret
mov
int
enter
(bad)
popa
pop
(bad)
or
and
sbb
or
stc
jo
ret
fcom
jo
adc
int
lock
xchg
pmulhuw
cmp
and
rol
test
add
push
ret
pop
ss
or
(bad)
cld
mov
(bad)
fild
inc
push
mov
sub
loopne
loop
pop
mov
(bad)
and
xor
mov
or
and
fist
inc
or
xchg
outs
outs
mov
je
lea
shl
int
jge
jno
inc
js
mov
addr16
mov
xchg
or
xchg
add
call
daa
xor
add
pop
push
jg
xlat
repz
jne
jns
cmp
fcom
iret
ror
adc
jbe
not
adc
test
adc
or
cdq
sub
or
pop
fdiv
loopne
sbb
sti
outs
jae
jae
push
adc
adc
add
mov
movs
or
jmp
adc
push
add
jl
or
jg
jbe
and
jecxz
out
test
and
and
adc
retf
mov
add
add
sbb
push
rol
cld
sub
dec
aam
sub
mov
cmp
ins
(bad)
mov
push
push
in
aam
push
fnstenv
test
rcl
lods
ins
loopne
mov
loop
fmul
rcl
sub
rcr
xchg
enter
js
xchg
xchg
adc
dec
js
mov
sbb
dec
push
ret
sub
xor
jo
test
mov
adc
or
out
(bad)
pop
(bad)
adc
pop
cmc
jmp
enter
pop
and
or
outs
cmp
push
add
ins
rcl
push
push
add
gs
shl
ficomp
or
dec
add
fadd
sbb
or
js
cwde
dec
push
pop
call
cmp
jae
jmp
xchg
sub
inc
or
mov
pop
add
mov
or
icebp
adc
mov
cmp
je
in
add
push
cmp
rol
sub
jb
pusha
stc
xchg
jb
xor
stos
dec
in
or
scas
add
xchg
pusha
push
loopne
pusha
mov
aaa
or
inc
jbe
arpl
pop
inc
push
cmp
dec
inc
xor
sub
sbb
jle
xchg
test
and
mov
adc
lock
add
sbb
jp
lea
xchg
aas
repnz
sbb
pop
scas
lea
ja
mov
inc
loopne
pop
test
dec
push
stos
ins
sar
adc
and
std
add
add
or
or
ret
inc
adc
or
mov
fs
je
imul
stos
inc
pop
aam
push
jp
and
retf
xchg
mov
xchg
aad
xor
or
jmp
cmp
loopne
aaa
adc
test
or
dec
jae
shl
mov
add
cmp
ret
call
ins
sbb
test
sub
je
cmp
jb
cmp
inc
or
ja
push
ss
push
add
fsubr
js
or
or
push
fimul
and
ja
test
push
inc
push
jne
mov
clc
push
movs
lock
cld
cwde
inc
and
xchg
stc
sub
stc
out
sbb
xor
add
je
or
push
jg
hlt
push
and
leave
test
or
pusha
jge
sbb
lock
add
movs
sbb
inc
cdq
push
cld
bound
xor
cld
addr16
cdq
gs
add
jbe
adc
push
lea
retf
mov
cmp
sbb
and
rcr
jnp
test
lsl
pop
inc
sub
sub
outs
fchs
out
daa
fcomp
or
ins
dec
mov
adc
push
outs
into
mov
jmp
daa
xchg
daa
daa
mov
lods
or
dec
xchg
fimul
inc
or
pop
dec
mov
mov
push
sbb
or
sbb
mov
dec
adc
jnp
ins
pop
cs
mov
pop
shr
outs
mov
or
retf
out
push
test
adc
add
ret
xchg
jp
cmp
ja
mov
adc
mov
or
or
in
or
pop
and
jg
pop
mov
mov
add
cmp
add
(bad)
fmul
cld
in
out
pop
jl
xchg
mov
scas
mov
iret
mov
pop
push
mov
mov
pop
inc
out
fidiv
pop
fs
mov
int
and
shl
retf
sub
xor
add
sbb
push
cmps
mov
push
loopne
scas
ins
sub
iret
xchg
or
and
inc
add
mov
fistp
retf
mov
adc
cmp
push
add
add
repz
sub
mov
add
mov
sti
fwait
icebp
out
sbb
test
dec
xchg
adc
sbb
sbb
mov
aas
adc
pop
lock
and
rol
iret
xchg
shl
mov
jnp
iret
test
ror
dec
add
and
adc
loopne
nop
(bad)
cmp
cmp
repz
xor
inc
movs
retf
push
push
rcl
mov
add
pop
add
fwait
ss
mov
nop
xor
sbb
shl
js
pop
loopne
cmovl
and
inc
fmul
addr16
test
inc
jo
nop
and
je
pop
out
sahf
ja
addr16
jno
push
xchg
loope
sahf
xchg
fwait
jnp
or
dec
pop
jns
inc
cmps
sbb
inc
mov
and
xlat
ds
(bad)
call
pop
loope
fidiv
mov
sar
fsubr
push
sub
push
ins
push
(bad)
push
stos
or
sti
pop
mov
push
cdq
push
ror
push
sub
iret
repz
shl
out
lods
enter
in
imul
push
pop
pop
push
xchg
cmps
out
inc
cwde
xlat
fcom
clc
mov
adc
push
xor
push
mov
jmp
mov
or
inc
add
dec
fidivr
and
xchg
dec
pop
inc
js
mov
daa
push
neg
mov
ret
xor
add
pop
jge
inc
add
ins
dec
loope
cmp
dec
fcomp
inc
sub
dec
call
pop
in
add
jns
pop
add
fs
and
push
ror
scas
inc
lahf
sbb
xlat
sar
test
mov
leave
mov
jae
or
retf
enter
out
inc
shr
pop
ror
stc
pop
push
sub
mov
mov
adc
jb
fstp
dec
pop
add
sub
fmul
fcmove
xchg
popw
into
int3
int3
aam
adc
enter
lods
aaa
or
sar
inc
sub
add
inc
ret
jns
fcmovne
xor
push
cmp
outs
jl
and
adc
mov
adc
pusha
push
mov
add
adc
push
test
adc
out
mov
dec
adc
in
test
icebp
outs
(bad)
pop
xchg
add
add
push
test
out
daa
dec
jle
add
fist
fisttp
pop
and
inc
mov
mov
outs
pop
pop
pop
add
xor
ja
mov
scas
test
push
fdivr
call
dec
mov
fsub
test
lods
xor
mov
fmul
add
out
sbb
sbb
push
gs
sbb
in
add
enter
add
or
and
or
xchg
inc
cmp
clc
mov
add
xor
mov
test
mov
ja
lea
adc
dec
fild
push
pop
shl
xor
cmp
das
and
push
loop
dec
rcr
adc
push
sbb
icebp
loop
jo
pop
add
jmp
arpl
pop
fcomp
pop
inc
ret
fild
loopne
sbb
lock
mov
dec
(bad)
add
sbb
fbstp
dec
inc
push
cmp
pop
and
cmp
ret
fist
mov
mov
loopne
out
iret
ds
xchg
retf
inc
pop
and
inc
adc
add
or
mov
and
and
ret
push
mov
inc
xor
sub
xor
inc
xor
cmp
pop
shl
test
ret
nop
inc
jno
push
fs
adc
cmp
aaa
xchg
inc
add
mov
inc
dec
mov
pop
aas
xchg
shl
fucom
f2xm1
or
ja
int
mov
ret
fst
cld
mov
pop
ss
jg
xor
rcl
in
xchg
fistp
fwait
push
loopne
js
ret
cs
mov
nop
pop
mov
imul
add
in
inc
lock
pop
popf
dec
push
xchg
loopne
push
loope
mov
in
retf
call
rol
mov
xchg
mov
mov
or
mov
loopne
add
add
loopne
jmp
data16
mov
push
push
test
jmp
ins
push
jne
jmp
cmp
loop
es
push
and
and
pop
dec
aam
aad
pusha
and
jno
sub
add
lea
scas
dec
lar
cmp
inc
loopne
test
adc
cmp
jo
or
cmp
sbb
adc
add
pop
jmp
jmp
jge
inc
add
adc
nop
sbb
xchg
push
sub
leave
xchg
push
arpl
inc
jns
clc
inc
into
dec
jp
sbb
sbb
or
adc
in
ret
mov
pop
movs
pop
lock
pop
pop
adc
stc
jecxz
mov
and
sub
xchg
or
cmps
add
sub
sar
xchg
push
fsubr
int
ins
inc
sub
add
xor
pop
outs
add
mov
enter
lock
cmp
cmp
nop
iret
js
sbb
mov
push
movs
aam
push
sub
adc
fld
xor
sbb
inc
inc
xchg
adc
ret
fnstsw
je
sub
in
push
add
and
xor
daa
dec
ror
jmp
sub
pop
ret
ret
test
push
test
clc
mul
xchg
jbe
aam
jno
dec
pop
pop
jb
adc
or
data16
in
add
pop
daa
or
jo
rol
mov
xchg
loopne
mov
jo
inc
jp
adc
sub
sub
nop
hlt
and
push
push
xchg
nop
add
and
add
or
push
inc
adc
mov
push
push
xchg
inc
lock
je
push
push
pop
dec
push
mov
test
sbb
cld
xlat
jo
sub
(bad)
aas
xchg
test
inc
imul
mov
pop
pop
popf
add
add
inc
pop
mov
mov
xchg
or
fmul
mov
inc
aad
cmp
pusha
movs
cmp
dec
or
push
fsub
sbb
adc
in
push
bnd
aaa
adc
adc
ror
aas
xchg
pop
add
inc
mov
push
loope
xor
adc
dec
repnz
mov
jp
out
fmul
mov
xor
sub
adc
cmp
jno
mov
dec
orps
cdq
sub
iret
rcl
mov
jno
mov
pop
sbb
nop
mov
pop
inc
or
pop
sar
jne
test
xchg
scas
pop
mov
test
push
bound
daa
jb
sub
pop
mov
stos
repz
call
outs
in
push
or
pop
adc
call
cli
call
xchg
xchg
aas
jmp
inc
jmp
dec
int
mov
jmp
imul
sbb
mov
xchg
stc
adc
clc
sub
adc
cmp
sub
add
test
xchg
outs
inc
inc
test
popa
push
mov
lods
mov
mov
pusha
pop
xchg
fisubr
arpl
mov
aaa
dec
outs
popa
xor
jo
cmp
push
cs
adc
pop
lea
ds
enter
test
inc
pop
jmp
adc
dec
js
outs
pushf
dec
mov
jmp
sbb
sti
call
sahf
mov
add
nop
pop
inc
push
pop
ds
jmp
mov
out
cs
sub
sbb
popa
or
cmp
dec
nop
or
cmps
out
xchg
adc
sbb
or
push
mov
(bad)
fadd
or
rcl
pmullw
loopne
pushf
(bad)
xlat
out
xchg
sbb
shr
enter
sbb
inc
push
cmp
push
in
adc
in
cmp
nop
lock
sar
push
adc
push
fild
jmp
repz
pop
sbb
sar
jnp
in
aaa
rcl
push
add
and
ds
add
adc
push
dec
les
int3
cmp
mov
adc
sub
cmp
cmp
push
push
mov
and
daa
loopne
or
sub
mov
or
lods
sbb
mov
lods
mov
inc
lods
test
or
clc
or
fadd
jo
xor
add
ins
sbb
pop
xor
add
sub
test
sbb
ins
inc
movs
outs
cwde
sbb
or
mov
add
and
in
inc
push
in
or
jmp
ins
lea
sbb
fs
mov
ins
js
cmp
pusha
or
dec
mov
fild
or
ins
js
sbb
enter
ins
icebp
pushf
sbb
(bad)
int3
jmp
cld
push
or
rcl
fidivr
repz
ds
push
pop
push
sub
scas
mov
jns
iret
nop
fs
jne
dec
sahf
out
sahf
push
push
and
cmp
test
or
sub
push
cmp
adc
(bad)
iret
repz
cs
push
test
repz
cmp
test
repz
iret
push
arpl
mov
movs
sub
cmp
jnp
jnp
push
jmp
adc
sbb
or
out
sbb
xchg
dec
push
add
test
dec
sbb
ss
mov
jle
push
push
and
daa
outs
call
(bad)
leave
pop
mov
adc
jl
jb
outs
pusha
sbb
ss
add
fwait
xchg
xlat
mov
repnz
sahf
outs
fstp
push
repz
add
pop
mov
das
mov
ins
jmp
popa
xor
push
enter
add
or
pop
inc
je
ficomp
cmp
test
or
adc
dec
xchg
pop
inc
or
(bad)
and
jecxz
not
sbb
push
ss
inc
pop
or
push
mov
push
cld
into
push
push
push
ins
and
icebp
ror
scas
call
(bad)
push
cwde
popa
sbb
pop
xchg
lock
push
aam
cmp
sub
in
pop
xor
mov
retf
ja
push
xchg
add
out
jl
dec
adc
mov
ss
enter
ror
int
(bad)
rcl
ret
bound
pop
mov
and
adc
ffreep
dec
loopne
jg
shr
mov
in
inc
out
push
leave
sub
adc
out
cmp
hlt
jno
dec
pop
out
rcl
push
mov
loope
fnstcw
enter
hlt
mov
mov
xchg
mov
outs
xchg
(bad)
or
mov
dec
add
and
push
and
sbb
cs
xchg
mov
xchg
push
mov
fadd
pop
mov
xchg
inc
or
xchg
xchg
call
leave
mov
push
or
ret
sbb
sbb
jno
(bad)
mov
push
sbb
push
jg
dec
rol
inc
dec
xchg
push
sbb
jmp
and
cmp
out
xor
adc
cmp
mov
xchg
inc
mov
push
ds
adc
les
sub
retf
(bad)
push
pop
out
mov
sub
and
enter
mov
push
and
jne
loope
cmp
es
xchg
inc
cmp
cmp
mov
inc
sbb
mov
in
retf
inc
clc
retf
in
out
in
push
adc
lods
leave
sbb
call
pop
jmp
sbb
iret
mov
pop
inc
imul
sub
loopne
jecxz
pusha
pop
jnp
xchg
in
push
jnp
push
sbb
scas
mov
add
fldcw
jp
jno
inc
cdq
call
outs
mov
mov
imul
dec
jecxz
adc
es
fld
js
add
test
mov
call
rol
pop
dec
(bad)
call
push
rol
dec
mov
push
clc
sub
cmp
jecxz
xchg
ins
or
jle
lock
and
xor
or
sbb
(bad)
push
imul
fld
test
dec
dec
adc
int
push
or
lea
(bad)
push
or
int3
sar
sar
dec
push
or
leave
sub
sar
aad
imul
inc
lock
mov
xchg
adc
jmp
pop
or
fdiv
and
jge
fldenv
adc
push
dec
add
lock
ja
jmp
adc
xor
xchg
pushf
ins
bound
pop
push
pop
adc
cwde
mov
add
and
cmp
dec
xor
sub
mov
dec
fmulp
add
mov
cdq
mov
mov
loope
cmp
push
(bad)
pop
repz
add
jbe
lea
add
adc
cmp
dec
and
jle
lock
sahf
sub
jmp
jmp
sub
mov
add
sub
paddb
mov
push
or
and
push
xor
daa
mov
mov
add
jne
xor
cmps
ins
arpl
jl
dec
or
dec
dec
dec
pop
in
daa
fs
mov
inc
pusha
clc
fisttp
sub
cwde
fdivr
or
xchg
es
jp
push
pop
sbb
push
inc
inc
loopne
test
sbb
pop
in
add
fimul
test
add
std
add
push
pop
jmp
jl
mov
inc
outs
and
cmp
sub
add
add
and
sub
ror
add
xchg
mov
(bad)
jno
add
push
xchg
adc
pop
mov
xor
ja
xchg
push
push
inc
cmp
add
hlt
jae
outs
or
inc
cmp
mov
test
loope
jg
test
lock
adc
(bad)
cmp
loopne
clc
movs
fs
or
push
addr16
sub
sbb
ret
in
or
add
rol
les
shr
dec
xor
jge
mov
add
retf
jae
add
adc
sub
sub
movs
jl
les
sbb
aaa
add
les
test
sub
add
mov
adc
push
(bad)
push
fild
and
push
xchg
test
pop
fstp
xor
fst
ret
and
(bad)
cs
ret
mov
ret
imul
mov
or
mov
test
adc
push
pop
mov
pop
pop
adc
sub
adc
or
nop
push
idiv
add
xor
daa
dec
dec
leave
es
dec
adc
movs
test
cwde
jp
xor
mov
ss
test
and
jae
fld
imul
mov
push
cmp
push
mov
pop
jno
xor
cmp
je
inc
cmp
jne
pop
hlt
(bad)
arpl
jns
xchg
jb
pop
inc
push
fidivr
ret
jmp
pop
pop
or
ret
pop
mov
mov
pop
cmps
aam
and
in
sub
inc
int3
xchg
repz
out
adc
ret
xor
(bad)
mov
adc
jo
mov
(bad)
jmp
lahf
or
pop
sbb
jb
xor
(bad)
leavew
mov
fld
mov
sub
std
push
loope
mov
fnstsw
xor
add
push
fistp
(bad)
push
lock
pop
test
test
mov
xchg
pusha
test
ret
jbe
push
cld
push
push
xchg
mov
pop
xchg
loopne
ja
inc
jno
(bad)
jmp
push
adc
or
jg
ret
cdq
sub
(bad)
mov
push
sub
mov
lahf
xlat
xor
dec
cmp
ret
popa
fdiv
mov
adc
dec
jne
xchg
test
or
add
push
repnz
and
enter
xor
mov
aas
fld
pop
cmp
or
push
enter
rol
mov
inc
xlat
push
mov
cmps
in
xchg
add
hlt
inc
jae
mov
cmp
ja
enter
xor
call
xchg
popf
add
dec
ret
inc
fcom
call
mov
pop
test
fs
nop
and
mov
inc
jo
xchg
fadd
test
imul
stos
ds
in
mov
ins
mov
dec
cli
mov
fmul
ret
ins
push
jg
ror
imul
sub
test
or
(bad)
stos
sbb
aad
and
dec
test
push
not
das
or
sub
dec
jle
jmp
sub
sub
mov
mov
inc
dec
pop
adc
lods
adc
and
add
out
push
ds
adc
or
lahf
dec
and
push
hlt
nop
jne
fisub
je
sbb
inc
push
jmp
cmp
jo
ss
sbb
cmc
xor
cmps
adc
hlt
push
dec
lea
adc
push
push
pop
or
push
dec
add
loop
pop
stos
or
adc
je
pushf
mov
pop
data16
inc
sbb
rol
sub
daa
inc
pop
iret
imul
pop
js
mov
bound
mov
or
cld
rcl
mov
inc
mov
mov
outs
lea
ss
shl
sahf
push
cmp
sbb
xchg
ja
daa
rcl
mov
inc
test
xor
push
pop
rcl
or
pop
(bad)
adc
add
dec
jne
xchg
push
clc
mov
clc
pop
or
add
test
je
and
and
and
pusha
sbb
add
mov
mov
gs
pop
and
div
mov
pop
les
(bad)
dec
imul
inc
es
dec
or
rcr
pop
(bad)
or
xchg
fwait
push
adc
and
sti
in
pop
into
dec
shr
sti
aad
or
movs
repnz
pop
lock
and
jl
adc
(bad)
jmp
test
xor
mov
push
mov
adc
and
nop
adc
cmc
push
aaa
xchg
jle
or
or
pop
test
es
lods
dec
call
lods
hlt
xchg
bound
sub
sbb
cld
add
pop
or
mov
pop
add
movs
fldcw
adc
addr16
jge
ret
xchg
sub
cmp
cmp
add
cmps
adc
mov
ret
or
add
cwde
mov
add
inc
xchg
adc
lods
adc
jmp
sub
xor
test
cli
inc
add
or
dec
mov
fcomp
fnstenv
sbb
push
adc
std
mov
push
pop
mov
add
mov
fs
cmp
mov
das
push
inc
inc
push
xor
fmul
test
aas
adc
cs
jb
add
aas
lods
shl
mov
cmp
jmp
mov
mov
retf
add
mov
push
mov
push
dec
add
sti
fistp
cmp
stos
jg
ret
and
xchg
add
xor
and
or
pop
iret
in
push
leave
in
mov
stc
in
in
mov
or
or
jecxz
or
dec
sub
mov
shr
jg
sbb
cmps
or
pusha
adc
ins
mov
xor
cld
or
or
dec
cli
xor
dec
scas
cli
xchg
xor
push
jno
xchg
xor
or
(bad)
pop
retf
fdivp
xor
add
dec
ror
inc
sub
loopne
xchg
out
jo
adc
mov
mov
sbb
lds
rol
mov
ja
inc
adc
mov
mov
sub
les
dec
rcl
lock
cmp
cli
cld
mov
push
daa
xlat
xchg
push
rol
(bad)
xor
dec
xchg
cmp
cmp
push
call
mov
addr16
sbb
psubusw
mov
nop
ffree
dec
arpl
adc
int
imul
cmovbe
xor
das
jmp
add
leave
jmp
mov
add
(bad)
hlt
mov
cmps
clc
sub
push
je
sub
and
adc
jecxz
(bad)
fs
repnz
mov
in
mov
pop
adc
ds
jmp
mov
je
(bad)
mov
mov
in
jbe
mov
shl
jae
pusha
lahf
add
shr
xor
sbb
and
lods
or
je
cmps
cli
adc
mov
fs
push
jp
loopne
repz
retf
dec
je
pop
in
lods
test
push
push
mov
out
retf
imul
add
shr
adc
out
inc
lea
out
stos
sub
mov
or
pop
add
dec
clc
jae
pop
and
test
out
inc
sub
jmp
sti
push
mov
adc
icebp
loope
adc
es
inc
retf
mov
add
push
loope
jecxz
data16
test
(bad)
xor
fmul
stc
es
inc
push
jns
cmps
mov
sbb
push
or
fsub
clc
out
nop
lea
adc
fist
sbb
or
rcr
pop
pusha
cmp
sbb
leave
inc
adc
inc
out
test
mov
mov
cmp
sub
add
loope
les
inc
or
jmp
cmpxchg
or
add
xor
ret
adc
inc
inc
pop
ins
test
stos
mov
sbb
jno
push
shl
enter
inc
sub
pop
cmc
mov
aam
pop
push
sbb
outs
mov
sbb
jno
lods
add
fadd
pop
or
bound
push
mov
dec
xchg
push
sahf
mov
je
dec
mov
inc
loopne
dec
jo
fwait
mov
cmc
cmp
add
pop
loopne
add
mov
push
pop
dec
pop
push
dec
cmps
test
shl
adc
shr
mov
ret
(bad)
push
pop
inc
das
mov
fbstp
dec
aas
push
and
lea
mov
or
mov
loopne
ss
dec
xor
sbb
mov
adc
in
les
in
mov
mov
ins
ja
mov
mov
cmp
in
or
push
dec
mov
push
pop
jmp
jecxz
mov
jp
sar
ins
data16
hlt
ds
sbb
ss
aaa
sub
add
sbb
js
inc
mov
and
sbb
imul
not
sbb
push
or
xor
shr
pusha
outs
inc
push
shr
push
cwde
mov
xor
mov
mov
sahf
dec
(bad)
or
rcl
fwait
sbb
and
mov
rol
mov
inc
(bad)
or
pop
or
test
sub
pop
call
shl
mov
pusha
xchg
xchg
shl
fmul
shl
mov
fisubr
daa
into
add
xor
clc
clc
gs
sub
add
cmp
inc
push
jno
mov
or
pop
dec
mov
inc
rol
jl
movs
cwde
sub
ss
pop
inc
and
or
inc
mov
mov
inc
inc
add
pop
add
jmp
and
ret
(bad)
fld
fmul
fcmovnu
stc
sub
inc
add
xchg
shl
rcr
push
inc
lahf
or
sub
iret
inc
push
lods
int
push
call
cs
add
pusha
mul
enter
push
lods
jns
ret
jne
inc
ror
add
push
nop
rcl
adc
pop
mov
xor
push
pushf
push
fwait
jg
sbb
and
adc
adc
jmp
cmp
(bad)
xor
dec
and
lock
js
jns
sub
mov
xor
or
lods
popa
(bad)
aam
ja
or
daa
cmp
dec
push
sbb
pop
popa
or
xchg
add
ss
xchg
push
sbb
leave
pop
jmp
xchg
call
pop
int
mov
ffree
mov
sub
or
dec
ret
xchg
rcr
xchg
fbld
(bad)
sbb
push
inc
cmp
xchg
add
add
or
pusha
lock
fidivr
outs
jnp
int
(bad)
iret
pop
inc
xlat
faddp
loopne
mov
and
rol
adc
cmp
push
fiadd
xor
mov
push
dec
ins
inc
imul
jmp
sbb
mov
dec
inc
ja
sub
lods
add
and
xchg
test
sbb
cmp
sar
or
push
ja
jns
repz
pop
push
push
adc
out
(bad)
sahf
idiv
mov
addr16
adc
jns
cmp
xchg
movs
jne
jo
pop
push
sbb
push
adc
iret
pop
mov
ins
fwait
xor
or
push
dec
shr
pop
xor
sbb
sub
loope
pop
mov
sbb
jmp
jge
imul
adc
mov
pop
adc
xchg
int3
ins
enter
repnz
es
cmp
adc
pop
push
jmp
adc
enter
sub
out
push
and
cmc
or
inc
daa
mov
aaa
push
stos
test
pop
ds
mov
and
sbb
sub
shl
dec
ss
mov
sti
gs
test
xchg
sbb
sub
push
rcr
and
and
call
xchg
das
mov
or
sbb
pop
inc
mov
push
mov
sbb
adc
cdq
fisub
jne
sahf
cwde
mov
pop
push
clc
inc
sub
adc
call
jo
dec
sbb
les
push
rcr
mov
adc
mov
xlat
inc
nop
mov
push
jmp
adc
mov
pop
and
push
and
inc
cmps
shl
pop
aam
cmp
mov
pop
rcr
dec
dec
pushf
cmp
sub
repnz
cdq
add
aam
adc
push
ja
jecxz
jbe
and
adc
jmp
adc
sbb
repz
add
or
rcr
adc
xchg
test
outs
outs
outs
push
loope
or
adc
out
add
push
arpl
dec
cmp
xchg
mov
or
ja
(bad)
adc
and
fs
or
je
adc
inc
pop
fld
and
outs
mov
add
(bad)
sti
xor
adc
enter
ins
adc
xor
(bad)
push
cld
cmp
icebp
repz
neg
and
leave
rol
fucomp
stos
or
jmp
dec
or
dec
push
inc
jmp
pop
mov
mov
push
add
sub
xor
out
or
ror
adc
cmc
sti
(bad)
(bad)
xor
mov
out
mov
das
sbb
ror
fistp
jmp
daa
add
and
mov
aaa
mov
push
aam
add
push
push
add
push
aaa
mov
adc
pop
(bad)
idiv
and
ja
push
call
pop
push
out
fiadd
(bad)
pop
and
jle
sti
sub
dec
stc
pop
retf
add
je
das
add
sbb
dec
pop
push
push
aam
jle
mov
xchg
rol
mov
dec
nop
cwde
mov
add
addr16
xor
sub
push
fs
leave
lock
inc
sub
adc
std
enter
or
scas
jbe
jmp
or
aas
lods
jmp
xor
dec
or
rcl
pop
dec
and
sbb
out
mov
pavgb
and
ins
sub
dec
dec
push
leave
inc
and
cmps
jle
push
rcr
add
sub
lock
inc
mov
add
dec
lea
cdq
pop
inc
push
sub
mov
fld
loope
fsubr
das
aam
inc
mov
es
popa
(bad)
adc
fdiv
mov
sbb
bound
cmp
inc
cdq
je
lea
loope
sbb
dec
cmp
adc
iret
push
mov
add
nop
arpl
jnp
adc
mov
xor
pop
push
mov
sar
push
cmp
sub
popa
aas
add
mov
int3
dec
jmp
add
or
mov
ins
sub
pop
inc
rcl
inc
cmp
cmps
test
inc
adc
aam
loopne
or
rol
or
(bad)
rcr
push
push
lock
ror
dec
xchg
lods
adc
cmp
dec
pop
ret
pop
mov
movs
mov
fiadd
ret
inc
sub
sub
jo
pop
ja
jb
retf
xchg
push
inc
cmp
cmp
(bad)
jl
(bad)
and
mov
sbb
aaa
outs
sub
lods
jecxz
lock
mov
mov
outs
out
addr16
call
mov
cdq
sub
mov
inc
sub
xchg
fwait
in
sub
rol
jg
inc
ja
pop
add
fwait
cmp
push
inc
or
fisub
not
sbb
xchg
lods
ret
jno
cmp
loopne
in
fist
or
inc
repnz
dec
fdiv
pop
dec
ret
cs
cmp
push
popf
add
cmp
ss
ret
sbb
(bad)
fdivr
pop
dec
nop
es
jmp
in
xor
sbb
adc
pop
fwait
add
das
adc
aas
sbb
sub
push
bound
gs
add
sub
adc
out
mov
or
push
dec
push
push
ja
adc
xchg
mov
addr16
add
or
or
add
test
jl
fstp
xchg
or
inc
imul
shr
jo
gs
outs
imul
rol
lahf
data16
push
add
int3
mov
dec
push
add
add
(bad)
push
cld
xchg
xchg
mov
sbb
shl
mov
add
mov
imul
retf
adc
push
aam
arpl
adc
pop
xlat
pop
dec
stos
rol
xchg
test
xor
cmp
(bad)
leave
int
int3
(bad)
sub
sti
xchg
push
push
imul
adc
daa
outs
xor
jp
iret
add
rcr
cmps
sbb
data16
jo
and
add
cmp
or
cld
adc
dec
sbb
adc
mov
jnp
pop
mov
inc
mov
mov
add
dec
gs
out
add
(bad)
rol
push
jbe
leave
sbb
inc
sub
sbb
inc
lock
icebp
mov
cmps
or
jo
je
dec
mov
enter
sbb
mov
pop
jnp
stos
mov
push
or
mov
push
mov
mov
mov
dec
outs
lods
mov
push
xchg
movs
xor
mov
mov
push
inc
push
fist
push
in
and
and
fist
xor
and
pop
ins
ins
or
xchg
nop
pop
jmp
test
lock
aam
lea
sbb
push
adc
jb
mov
cmp
aas
or
neg
aaa
mov
mov
add
inc
xor
xchg
or
mov
inc
add
loope
jb
jb
xor
out
jg
push
dec
jno
add
sub
push
test
(bad)
mov
xchg
addr16
sbb
and
movups
nop
mov
pop
xor
sbb
add
xor
mov
retf
sbb
mov
inc
call
dec
xchg
inc
xchg
sbb
daa
and
add
push
xchg
sbb
sbb
push
nop
cmp
adc
jnp
leave
rcl
xchg
sbb
daa
push
xchg
push
inc
cmps
ret
imul
inc
sbb
inc
daa
dec
push
push
daa
and
xchg
sub
and
test
daa
inc
fist
adc
loope
sub
mov
inc
jo
mov
sub
push
ret
or
mov
dec
and
mov
push
ss
mov
je
push
xchg
adc
in
into
push
sub
sub
call
jmp
or
leave
in
sub
dec
dec
sub
inc
xor
inc
pop
outs
xor
lods
mov
popa
sub
fadd
or
mov
adc
sub
adc
(bad)
in
sahf
cwde
cwde
sub
or
jmp
loopne
loop
dec
mov
sbb
inc
fs
mov
cmp
jne
cmp
movs
outs
push
xchg
retf
enter
add
mov
mov
xor
push
in
stos
xor
mov
jne
call
xor
mov
mov
shl
jb
iret
mov
fdiv
dec
jnp
cmp
inc
loopne
ficomp
in
pop
mov
sub
inc
push
push
enter
dec
lock
aaa
iret
(bad)
shl
nop
lods
and
inc
pop
ror
adc
es
jo
inc
xchg
or
jecxz
or
sbb
mov
jns
stos
call
inc
push
loop
adc
mov
add
or
add
jo
(bad)
push
fisub
es
(bad)
(bad)
ins
inc
out
dec
jmp
add
cmp
outs
sbb
push
push
cli
outs
mov
popf
sub
sub
push
cmp
and
das
cmp
push
(bad)
leave
cmp
cmp
(bad)
outs
and
es
and
(bad)
adc
fs
jb
sbb
fs
jnp
in
add
test
loopne
add
fiadd
push
cdq
fidivr
rol
dec
xchg
pop
ins
push
cmp
push
ja
hlt
push
add
cmp
loopne
pop
and
pop
pusha
cmp
xor
push
push
and
inc
ret
pop
pop
adc
adc
cdq
adc
nop
jo
imul
test
loopne
pop
jnp
add
stos
pop
enter
leave
inc
enter
add
inc
outs
mov
iret
mov
popa
inc
in
ja
adc
ins
push
xor
test
and
xor
ret
dec
mov
mov
out
push
fiadd
jge
(bad)
iret
cdq
cmp
ins
add
dec
and
jl
lahf
add
loopne
je
out
push
mov
adc
loopne
test
or
sub
pop
cmp
(bad)
jb
adc
das
aam
or
inc
cld
or
pop
sub
lea
inc
loope
imul
mov
add
mov
sbb
push
mov
out
(bad)
jb
(bad)
xor
xor
xor
sub
xor
shl
sbb
push
add
and
pop
in
push
pop
bound
cmp
loop
mov
(bad)
popf
je
push
xor
retf
inc
pop
and
cs
cmp
push
push
inc
or
inc
and
shr
jne
sub
mov
ret
enter
bnd
push
mov
sub
call
rcl
nop
cmp
outs
inc
or
xchg
pop
sbb
or
call
xor
test
loope
les
adc
mov
out
push
pop
push
cs
pop
dec
xchg
add
ja
fidiv
xor
dec
dec
shr
ins
dec
push
inc
add
pop
push
adc
mov
js
sbb
popf
dec
cmp
sahf
jne
stc
add
jo
aam
imul
(bad)
push
scas
inc
sbb
cli
jmp
or
mov
inc
stos
lea
sbb
pop
mov
mov
cmp
dec
mov
cli
push
bound
mov
inc
cld
jne
out
sbb
jp
inc
cld
push
or
push
mov
push
mov
or
cli
mov
neg
push
adc
jl
or
jg
(bad)
mov
and
or
movq
lods
pop
pop
dec
push
adc
cmp
adc
or
jle
xor
lods
mov
push
jg
sbb
jo
movs
mov
or
out
ds
sbb
push
scas
or
mov
lods
imul
and
shl
mov
push
pop
add
push
dec
push
es
ret
dec
imul
add
ja
add
inc
inc
sbb
icebp
sbb
xor
dec
dec
sbb
bound
or
nop
dec
sub
ds
ss
add
jo
push
and
mov
nop
and
fbld
dec
sub
scas
or
mov
jns
pusha
push
icebp
sub
mov
pushf
xor
xchg
mov
iret
sub
fld
jmp
jmp
mov
lock
mov
ret
outs
push
lea
or
mov
xchg
clc
mov
inc
mov
add
bound
aam
adc
pop
rol
mov
sub
ja
ja
call
sbb
mov
mov
sbb
(bad)
arpl
or
inc
(bad)
or
js
add
je
imul
dec
xor
pop
dec
sbb
or
xchg
fiadd
movs
aam
sbb
mov
cmp
xor
add
ret
mov
push
inc
push
sub
jae
xchg
adc
and
add
xor
push
sbb
add
add
push
mov
lock
jo
loopne
ficomp
push
fimul
dec
addr16
push
cmp
mov
daa
dec
dec
sub
mov
frstor
mov
das
xor
and
push
inc
jp
fnstsw
jmp
pop
outs
dec
jg
mov
inc
cmps
cmp
mov
adc
dec
mov
inc
inc
cmp
sbb
inc
add
sbb
lock
and
adc
push
iret
mov
or
dec
scas
inc
xor
cmp
mov
les
not
je
mov
cmp
mov
adc
es
retf
loop
pop
inc
or
jo
ins
shl
test
mov
ret
or
inc
ret
xor
push
sbb
int
or
add
repz
xor
xchg
sbb
mov
jge
cmp
push
cs
test
push
mov
add
mov
outs
das
fsubr
push
push
sbb
dec
rcl
jne
sbb
sub
call
test
dec
add
cdq
sbb
xor
mov
outs
mov
adc
scas
mov
sbb
pop
or
mov
inc
lea
mov
cmp
leave
sub
adc
or
mov
cld
call
sbb
js
push
add
out
xor
test
data16
jo
jbe
mov
mov
lea
sub
enter
jle
je
fsubr
push
outs
ret
icebp
mov
jp
(bad)
push
movs
(bad)
sbb
adc
inc
adc
ja
xchg
mov
jmp
std
pusha
(bad)
ja
xor
loop
jno
add
lock
adc
(bad)
repnz
repnz
pop
loope
push
jae
xchg
adc
add
cmps
jecxz
dec
push
inc
inc
test
stos
mov
or
jle
cmc
frstor
add
dec
scas
add
dec
lock
cmc
inc
sub
adc
dec
sbb
fisttp
ret
adc
ja
sub
and
or
push
repz
neg
mov
pop
add
mov
out
pop
loope
add
(bad)
jecxz
jg
push
jge
cmp
push
cmp
cmp
inc
jp
and
adc
cmp
dec
test
sbb
add
xchg
cmp
pop
pusha
and
inc
sti
ror
mov
mov
dec
adc
cmp
bound
test
paddw
and
push
cmp
push
pop
(bad)
adc
into
(bad)
adc
jbe
addr16
dec
push
or
pop
xor
push
push
mov
pop
(bad)
mov
in
sub
add
add
sbb
out
imul
jns
out
out
ret
daa
jecxz
xor
jmp
pop
or
and
movs
cmp
fwait
sbb
and
jl
add
xchg
divps
sbb
or
cmp
bound
sbb
outs
or
sbb
or
sti
test
inc
fwait
jne
cmp
loop
jbe
lock
shl
or
shr
bound
test
or
pop
push
loopne
xor
inc
iret
xor
add
pop
or
add
or
push
mov
and
inc
les
mov
cmps
pop
ss
sub
dec
add
loope
jp
dec
cmp
fdiv
cmp
mov
stos
add
or
js
pop
xor
loop
sbb
sbb
enter
pop
mov
mov
loopne
inc
out
pop
and
ret
stos
rol
jns
xchg
cmc
ret
sub
jnp
cmps
jnp
inc
inc
js
push
add
xchg
pop
mov
pop
inc
xor
xchg
dec
enter
dec
add
add
mov
dec
cmp
rol
popf
cmp
jg
push
mov
push
mov
in
ror
icebp
imul
jmp
shl
dec
push
pop
adc
sub
rep
pop
lahf
lock
push
dec
dec
lds
or
add
inc
mov
xchg
lock
lods
sub
sbb
cmp
inc
mov
mov
xchg
inc
mov
push
aas
mov
push
cmove
add
pop
fidiv
dec
jne
adc
lds
add
mov
sbb
ja
inc
push
inc
inc
jl
das
cwde
clc
mov
cmp
jne
adc
test
adc
rol
jb
jbe
mov
mov
ss
xchg
iret
dec
jle
jbe
xchg
mov
outs
ins
and
cmp
pop
xor
inc
cmp
pop
dec
jle
dec
adc
in
sti
xor
cmp
sbb
sbb
lahf
ret
aas
jo
retf
inc
pop
jecxz
push
sbb
sub
fcomp
jecxz
and
pop
jae
daa
ins
sbb
fisub
sub
or
jb
add
aad
sub
adc
push
sub
sbb
or
dec
xor
adc
cmp
loop
push
inc
jle
add
dec
test
or
sbb
int
add
data16
mov
int
adc
add
jne
loop
push
add
sub
pop
add
and
imul
inc
add
sub
aaa
jmp
in
inc
mov
push
xor
pop
and
xchg
jne
sub
enter
push
cmp
and
pop
add
mov
ins
clc
pusha
add
sahf
sub
cmc
cmp
push
sbb
stos
pop
dec
pushf
retf
cmp
fcom
daa
aaa
pop
or
adc
jg
inc
dec
sub
mov
movs
push
jg
and
call
sbb
jl
add
and
add
jmp
inc
pop
xor
and
addr16
mov
adc
inc
sub
cs
cmp
or
add
pop
adc
paddsb
rcl
or
repz
mov
call
test
add
mov
icebp
dec
stos
xor
lahf
pop
repnz
or
sub
xchg
sub
pop
(bad)
(bad)
ds
adc
jl
push
mov
inc
lods
out
mov
adc
or
ror
sub
mov
femms
xchg
mov
xor
mov
jp
add
cwde
rol
in
sub
push
cwde
push
push
dec
leave
pop
push
or
pop
cmp
outs
xchg
rol
dec
loop
and
pushf
stos
pop
dec
add
push
bound
dec
add
ins
in
cmp
sar
add
aad
add
leave
push
movzx
adc
jl
sbb
inc
or
xor
out
inc
sbb
mov
jmp
jae
sub
adc
stos
mov
xchg
(bad)
jmp
push
sub
aas
cwde
shl
or
fnstcw
cmp
popa
mov
pop
push
imul
mov
into
dec
jbe
ret
lds
push
xor
mov
sbb
ret
sub
inc
pop
enter
xor
imul
jbe
inc
adc
sar
push
push
dec
nop
test
adc
mov
mov
cmp
or
iret
jns
lss
add
and
mov
adc
adc
mov
or
jecxz
add
mov
nop
or
or
popa
stos
mov
pop
out
sub
push
mov
and
xor
outs
outs
xor
adc
or
imul
rcr
sub
jmp
popa
or
cmc
jmp
out
and
jno
dec
lahf
ss
adc
mul
mov
movs
jecxz
xor
or
or
jp
ror
add
cmp
pop
add
cld
popa
push
out
push
inc
xchg
je
xor
push
jne
aaa
add
sub
pop
outs
inc
ds
xor
popw
cmp
xor
mov
jl
jmp
call
shl
add
or
and
je
sub
add
dec
cs
or
push
mov
push
popa
push
imul
lods
add
cmp
dec
dec
ret
push
push
loope
add
ret
inc
ret
dec
rcl
jge
mov
test
inc
ds
ret
or
push
jmp
loopne
sahf
std
test
xlat
test
mov
sub
bound
jge
adc
bts
xchg
xor
jecxz
in
dec
mov
dec
add
push
push
bound
leave
mov
repz
test
ins
sbb
dec
cli
pop
ror
pushf
dec
lea
shl
fisubr
mov
push
add
fisttp
cmp
sub
ror
cmp
pusha
leave
repz
xchg
mov
dec
push
and
add
inc
xor
dec
leave
dec
test
push
push
int
xor
hlt
sub
cdq
or
scas
mov
push
ja
mov
dec
inc
pop
or
jb
xor
ja
dec
pop
adc
push
test
shr
sub
xchg
xchg
mov
add
sbb
inc
imul
ror
mov
pop
mov
add
lock
cmovl
jmp
sbb
jb
add
mov
nop
or
pop
add
test
sub
pop
push
pusha
clc
mov
rol
stos
scas
test
mov
cmp
push
adc
push
sbb
je
fs
pop
xlat
sub
cmps
pop
aaa
add
add
and
lea
and
retf
mov
inc
sbb
imul
out
cmp
mov
or
mov
xor
add
xchg
scas
aam
add
or
jl
mov
sub
loopne
sub
aas
cmp
sbb
fmul
adc
in
cmp
cmp
and
fs
xor
sar
adc
sub
aas
clc
sub
or
push
xchg
retf
adc
out
mov
std
mov
add
adc
stc
mov
rcr
mov
shl
jge
adc
xor
loop
jl
loop
and
and
cmp
jb
aas
push
inc
cmp
or
xor
xor
sar
loope
jb
(bad)
sub
add
jl
jle
add
div
jno
fld
mov
jle
or
dec
outs
sbb
(bad)
out
inc
ror
add
jmp
in
(bad)
jb
loope
and
mov
cmp
dec
pop
pop
push
or
mov
push
imul
jnp
xchg
out
pop
push
cmp
cmp
pop
push
inc
fneni(8087
sbb
in
ins
push
mov
cmp
push
out
and
add
inc
add
sbb
call
and
mov
ret
test
dec
mov
fadd
xchg
retf
ds
adc
pop
je
jp
repnz
addr16
push
push
xor
pop
in
movs
and
inc
or
(bad)
push
push
sub
cmps
cmps
or
or
in
ja
movs
sbb
cli
repnz
add
push
scas
jl
ror
sub
xchg
or
pop
jl
jne
cmp
mov
push
imul
adc
push
fcmove
dec
add
jmp
fwait
push
mov
mov
and
pop
xor
adc
push
adc
or
jnp
push
rol
pop
ja
adc
ss
cli
movs
ins
add
mov
sbb
push
fcom
in
cmp
cli
dec
jge
sahf
cmp
push
sbb
cmp
jb
xor
jb
dec
adc
mov
std
faddp
fisttp
pop
test
dec
adc
dec
jle
jnp
cmp
push
sub
add
inc
loop
xchg
stos
adc
outs
mov
jp
pop
xor
cmp
add
mov
add
rcr
or
mov
pop
fs
dec
sbb
xchg
cmp
out
jge
shl
push
mov
mov
loop
jo
test
ja
inc
sub
into
es
mov
add
adc
adc
or
sbb
mov
or
retf
xchg
sti
aam
or
inc
sahf
cmp
sub
cmp
loope
cmps
sub
nop
inc
adc
fucomp
mov
add
cmp
pop
imul
bound
cmp
mov
mov
or
xlat
movs
dec
nop
add
adc
inc
lea
dec
mov
jle
sbb
ret
rcr
cmp
pop
jne
inc
(bad)
sub
sub
jg
adc
xor
lds
ja
popa
sub
adc
and
cmp
sub
xor
add
push
retf
xor
and
jle
imul
add
lea
je
adc
add
ss
pop
mov
cmp
and
std
dec
and
push
shl
mov
or
add
and
push
sbb
sbb
ror
jmp
mov
pop
lods
repz
(bad)
xchg
ror
retf
sub
(bad)
fnsave
mov
test
sbb
pop
out
pop
inc
cmp
jnp
loope
cwde
cmp
fstp
repnz
inc
ret
fcmovbe
xchg
sub
movs
push
mov
pop
jo
lds
lds
outs
js
sub
cld
js
scas
js
pop
push
sub
push
jg
sub
xor
and
je
ja
and
data16
push
inc
ret
or
pop
shl
jle
adc
and
jne
sub
dec
(bad)
pop
add
es
jl
hlt
xchg
test
xor
and
ret
and
rcr
aas
jecxz
add
ret
add
dec
inc
(bad)
retf
or
adc
ficomp
ror
adc
add
lahf
add
inc
push
jg
cmp
and
je
dec
jle
or
outs
inc
clc
fbld
(bad)
adc
add
mov
aam
sbb
mov
mov
add
sub
cmp
ret
repz
push
pop
sbb
shl
mov
pusha
sub
push
sti
mov
(bad)
inc
mov
mov
pop
pop
lock
push
mov
inc
and
(bad)
gs
sub
jl
jmp
mov
jge
pusha
imul
retf
(bad)
xchg
cmp
mov
and
cmp
and
mov
out
xchg
movs
cmps
push
mov
xchg
and
sub
mov
sub
pop
inc
adc
fmul
and
xor
xchg
and
ficom
jnp
xor
jnp
ret
mov
daa
and
adc
aas
int
jbe
sbb
or
icebp
sbb
pop
adc
mov
(bad)
or
push
cmp
add
out
or
test
sbb
cld
test
call
lods
mov
cmp
aaa
mov
lock
mov
or
fdiv
jns
sbb
lea
leave
in
sbb
push
mov
xor
and
dec
sub
push
dec
xchg
daa
scas
push
sub
sahf
cs
aam
adc
fs
retf
and
shr
sti
mov
dec
pop
dec
xor
xchg
jne
jmp
jo
or
rcl
inc
loopne
add
movs
ror
mov
push
hlt
outs
stc
dec
pop
mov
sbb
test
pop
jge
jge
add
add
mov
sub
and
data16
push
mov
sbb
and
mov
into
jbe
sbb
xor
aad
fs
push
jmp
jnp
aaa
push
jae
sbb
adc
or
sub
sub
and
nop
or
xchg
mov
or
icebp
fsubr
pop
dec
or
push
xchg
addr16
push
lods
jo
jno
mov
mov
rcl
pushf
ror
jo
mov
imul
dec
dec
rcl
sbb
push
and
pop
pop
sub
sar
dec
sbb
js
or
sbb
sub
addr16
cmp
cmp
add
sub
mov
pop
cld
mov
jge
push
jp
das
sub
adc
add
lods
div
mov
jge
mov
pslld
add
add
xor
jg
cmp
jmp
jne
pusha
mov
not
pusha
xlat
ja
test
add
je
loopne
sub
xor
adc
push
movs
add
icebp
xor
cmps
push
in
cmp
sub
xor
dec
adc
cmp
sub
stos
inc
xchg
cmps
loope
push
adc
movs
rol
sub
scas
nop
mov
dec
xor
adc
cmps
std
cmp
pop
movs
add
neg
sub
scas
in
cmp
lock
nop
inc
cmp
ja
scas
add
dec
hlt
jmp
hlt
add
lahf
mov
movs
repnz
inc
inc
inc
sub
aad
or
sbb
add
sbb
test
xchg
out
mov
jecxz
(bad)
mov
dec
rol
xchg
inc
dec
fld
mov
int
nop
mov
dec
fisttp
cs
bound
or
mov
cdq
add
rol
sub
dec
adc
dec
scas
nop
dec
dec
mov
cmp
and
add
adc
push
push
push
dec
scas
nop
sub
adc
push
push
lds
pop
pop
mov
mov
pop
dec
push
xchg
sub
xor
nop
pop
pusha
test
cmc
fs
or
inc
cmps
loop
sub
cmc
inc
sub
sbb
pop
adc
outs
jmp
adc
push
xchg
mov
into
ins
hlt
mov
and
pop
sub
jge
pop
mov
mov
or
outs
mov
xor
xor
into
ficom
scas
xor
and
add
jnp
lods
and
push
repnz
or
cmp
cmps
adc
fist
xchg
adc
fiadd
mov
sub
adc
mov
fxam
push
add
mov
cld
sbb
call
sar
icebp
sub
call
adc
adc
ja
sub
mov
lea
cld
sti
adc
ss
sti
addr16
xor
push
adc
dec
dec
add
cmp
and
popa
dec
inc
or
ret
and
cmova
aas
xchg
jns
dec
jg
out
add
cmp
adc
push
cmp
in
mov
cmps
nop
loopne
hlt
sbb
or
jmp
fadd
xor
sbb
adc
fcomp
or
and
pusha
mov
push
jno
lock
mov
pop
mov
cmp
mov
pop
mov
pusha
mov
sbb
push
adc
mov
lods
fld
jmp
cmp
or
pop
and
pop
mov
inc
rol
xchg
dec
xor
aam
inc
cmp
nop
jo
movs
loope
pop
xor
xchg
aam
mov
adc
ins
das
sbb
ss
dec
mov
dec
(bad)
ins
pop
push
sub
shr
stos
mov
lock
xchg
or
in
sbb
outs
xchg
call
lea
xor
icebp
sub
rcl
fld
inc
xor
scas
pop
xor
dec
pop
pop
dec
sar
add
and
daa
aaa
jns
mov
add
add
adc
loope
sub
mov
mov
push
xor
test
cmp
mov
ror
or
mov
outs
pop
repnz
push
adc
adc
retf
or
ror
sub
mov
or
retf
sbb
sbb
mov
dec
mov
cmps
inc
ror
scas
dec
jecxz
sbb
mov
dec
fsubr
adc
cdq
lods
cmp
data16
mov
aas
jge
jmp
mov
or
out
adc
xchg
sbb
push
mov
pop
and
sbb
js
dec
sbb
sub
and
jmp
dec
push
jg
call
test
jle
xchg
cmp
out
(bad)
or
pushf
xor
ret
and
push
inc
and
push
bound
mov
xchg
or
sar
jnp
and
test
dec
jmp
mov
jle
and
push
xor
push
ror
inc
jae
cmp
xchg
xchg
mov
popa
add
push
call
or
daa
pushf
ins
test
in
add
pop
mov
xor
inc
push
push
push
loopne
and
out
sbb
daa
cmp
mov
in
sub
xchg
jle
xor
lods
rol
loop
ret
das
add
xor
sub
aas
mov
inc
mov
mov
pushf
loope
lea
rcl
in
jl
push
mov
dec
js
xor
xchg
cmp
xor
pop
call
fsub
sbb
call
fs
cmps
loopne
push
push
add
(bad)
jne
xor
or
pop
ret
mov
or
adc
aaa
popa
shr
mov
js
pop
test
or
pop
mov
outs
lock
mov
add
cli
cmp
jmp
rcl
push
push
(bad)
ret
mov
xor
hlt
arpl
mov
mov
clc
mov
push
and
pop
les
mov
into
rol
mov
jo
mov
pushf
test
push
pop
sbb
test
add
movs
sbb
test
sbb
jl
test
sbb
lods
or
gs
jmp
jbe
adc
call
pop
jbe
sbb
mov
pop
fild
rol
and
out
mov
adc
xlat
retf
mov
std
and
jmp
jo
or
addps
nop
adc
(bad)
or
or
pop
enter
and
shr
mov
xor
and
add
jbe
aas
push
or
jae
inc
mov
lods
jg
mov
repz
sbb
nop
push
add
sub
xchg
sub
pop
es
add
or
gs
and
ins
aam
or
pop
adc
les
pusha
sbb
les
test
sub
xchg
or
jo
inc
xor
xchg
jg
xor
mov
adc
mov
mov
pushf
push
call
nop
pop
inc
xchg
add
or
add
push
test
adc
sbb
(bad)
rcr
push
add
jns
and
push
dec
test
push
loope
in
pop
and
push
rcr
jno
push
fcom
inc
dec
add
rol
leave
cmps
inc
data16
mov
dec
mov
lahf
and
dec
mov
dec
add
and
rcl
lock
cs
jge
aad
call
nop
xchg
sub
push
ins
and
dec
cmps
ja
popa
jmp
adc
adc
cmp
(bad)
dec
and
add
fld
jl
test
adc
add
ret
dec
movs
std
jge
xchg
add
ins
adc
cmp
test
mov
(bad)
jb
adc
push
shr
ins
loope
cmp
scas
lock
out
shr
jbe
add
dec
pop
and
dec
sbb
adc
out
mov
and
and
shr
lods
dec
arpl
shr
push
das
nop
push
outs
aaa
cmp
and
aaa
(bad)
sbb
enter
adc
ret
adc
or
adc
jle
test
or
dec
dec
bound
ds
add
sbb
and
cwde
adc
inc
and
es
dec
shl
or
sub
add
hlt
bnd
mov
rcl
shr
out
data16
adc
not
retf
sbb
fnstcw
sub
mov
xor
push
idiv
(bad)
jmp
(bad)
mov
jmp
xchg
mov
not
dec
jl
or
jl
and
xchg
and
mov
jmp
mov
in
fs
jno
sbb
outs
cmps
adc
pop
or
inc
enter
sub
add
add
push
pop
or
or
or
add
add
or
xor
adc
enter
shr
mov
pop
or
fwait
push
aad
inc
fcom
(bad)
addr16
hlt
loop
icebp
jmp
(bad)
add
mov
push
mov
sbb
xchg
sbb
std
mov
ins
mov
sub
outs
and
pushf
in
lea
cmp
and
outs
cmp
dec
mov
pop
lea
adc
mov
mov
sbb
hlt
inc
fild
sbb
mov
mov
push
mov
clc
add
pop
ret
and
sub
sbb
add
or
jle
dec
add
push
lar
add
mov
push
add
adc
add
add
dec
in
add
or
mov
add
sbb
push
pop
inc
push
xor
sbb
and
jmp
mov
loopne
push
adc
cmp
mov
shr
cdq
int3
inc
sbb
pusha
ins
xchg
(bad)
iret
add
mov
imul
dec
pop
push
enter
add
frstor
push
pusha
add
inc
ins
pop
fisttp
inc
inc
bound
(bad)
inc
pop
push
mov
push
aaa
and
adc
sbb
ficomp
int3
mov
push
fsub
in
lock
call
dec
add
imul
test
jb
jo
xor
fwait
shl
(bad)
(bad)
mov
mov
cmp
sub
sbb
aaa
pop
and
daa
call
add
jo
add
dec
jmp
adc
push
movs
(bad)
mov
sub
retf
inc
ror
push
add
bound
xchg
add
or
fild
cwde
add
or
adc
jle
test
dec
or
data16
pop
in
cs
jb
xchg
pop
shr
add
les
xor
inc
adc
pop
adc
div
push
clc
call
out
(bad)
pushf
es
inc
prefetch
xor
outs
das
pop
and
test
jecxz
sub
and
add
mov
mov
scas
outs
retf
cmp
and
add
jge
jle
push
mov
(bad)
pop
inc
sub
jo
js
push
pop
pop
(bad)
and
xor
add
sti
mov
inc
mov
dec
add
mov
xor
and
dec
fcomi
sub
inc
mov
(bad)
mov
out
mov
out
call
mov
add
or
adc
pop
mov
call
into
mov
in
add
(bad)
cld
pop
adc
scas
(bad)
cmc
lods
sub
sub
add
fs
pop
adc
sbb
adc
test
jg
cld
and
and
fcomp
or
pop
cld
sub
pop
sub
mov
(bad)
push
add
scas
nop
jg
xor
and
nop
imul
inc
(bad)
adc
std
cmp
mov
cmps
mov
enter
and
mov
ffree
sbb
bnd
bound
pop
add
bnd
mov
mov
xor
int
(bad)
push
pop
pop
es
add
in
(bad)
or
mov
cdq
fiadd
ret
mov
adc
(bad)
pop
aam
mov
js
adc
add
int3
and
lods
or
in
sti
rol
loope
pop
paddusb
mov
js
int
and
aam
pop
aaa
ret
adc
or
in
xchg
loopne
sub
in
adc
inc
pop
mov
js
fadd
pop
lods
or
hlt
clc
mov
fld
outs
loopne
sub
dec
sub
pop
cmp
inc
cmp
cmps
add
sub
add
div
push
or
xchg
and
ins
mov
and
or
jnp
adc
jmp
adc
idiv
inc
in
add
div
xor
aaa
mov
mov
jle
sub
xor
sbb
idiv
test
out
aam
add
(bad)
mov
repnz
aam
test
cdq
(bad)
div
clc
fdivr
inc
in
jl
pop
mul
push
lods
(bad)
imul
pop
mov
or
mov
comiss
mov
ret
mov
xchg
or
das
xchg
jmp
inc
mov
jmp
xchg
stos
mov
das
inc
(bad)
test
cmp
and
pop
pop
and
mov
rcl
or
mov
pop
inc
sub
test
ret
mov
jle
outs
pop
shl
out
dec
pop
mov
pop
int3
adc
add
lods
enter
dec
pop
ror
jle
test
js
repnz
xlat
sub
fcom
sub
add
ret
push
add
sahf
adc
clc
iret
stos
inc
add
or
in
mov
ror
fsubr
and
stos
rcl
and
pop
dec
inc
xor
(bad)
in
pop
test
call
jo
mov
mov
mov
aam
or
mov
(bad)
pop
shl
std
or
adc
not
popa
bound
sbb
addr16
(bad)
jmp
ins
outs
outs
jo
jb
je
jbe
js
jp
or
cmp
mov
addr16
mov
fdivr
xor
mov
ret
ja
dec
jmp
cmp
xor
stos
jno
inc
mov
mov
mov
dec
sbb
mov
jo
add
mov
dec
jbe
adc
xchg
shr
add
push
loopne
cmp
add
add
push
push
sbb
jge
div
mov
add
ja
sub
dec
(bad)
push
cmp
mov
daa
imul
sub
pop
mov
(bad)
fs
inc
dec
mov
add
push
sub
xchg
movs
iret
pushf
jno
aam
and
je
mov
fs
jno
xchg
bnd
or
js
pusha
xchg
add
lea
inc
cmp
pop
jno
xor
mov
push
mov
fdiv
sub
pop
xor
test
and
mov
jg
jns
sahf
jo
push
cmp
fdiv
dec
cs
fs
dec
ins
ins
adc
inc
push
inc
sahf
push
jo
or
jno
jg
js
or
xor
out
xor
cs
imul
adc
cmp
push
or
loop
pop
call
nop
sti
out
inc
xor
bound
mov
or
aaa
cmp
mov
mov
sbb
pop
push
push
gs
lock
adc
retf
popa
movs
add
test
ror
je
adc
(bad)
shl
arpl
shl
dec
pop
add
push
xchg
js
mov
cmc
scas
push
rol
mov
fsubr
and
add
mov
mov
lods
mov
mov
ret
mov
outs
jmp
sbb
mov
hlt
outs
inc
inc
sub
mov
or
pop
fs
sbb
nop
cmp
xchg
add
and
xor
mov
pop
lock
add
or
jl
push
mov
dec
ss
sub
shl
div
in
int3
pop
jne
mov
or
outs
fucomip
(bad)
pop
add
loop
mov
and
repz
push
mov
jmp
call
fcom
cwde
add
shl
mov
mov
mov
ret
imul
ret
adc
rcl
js
nop
fiadd
dec
inc
call
enter
ins
xchg
fmul
dec
fidivr
sub
stos
inc
jp
rcr
pop
mov
mov
fcom
pop
rcr
adc
sar
push
inc
inc
cmp
push
xor
in
rol
movs
addr16
je
fidivr
out
int
test
sbb
rcl
sub
push
leave
and
ss
push
sub
mov
jno
test
fbstp
mov
dec
inc
inc
cmp
xchg
fcom
or
in
fwait
outs
mov
in
nop
icebp
nop
and
nop
xchg
clc
xchg
cmp
xchg
sbb
movs
cwde
xor
dec
xchg
or
mov
jg
jo
fisttp
pushf
addr16
add
movs
jnp
mov
lock
in
and
call
cmp
sub
lods
adc
or
gs
mov
xor
xchg
add
push
movs
pop
shr
nop
retf
enter
sub
int3
cwde
rol
test
mov
fmul
(bad)
ret
adc
in
cmp
mov
add
imul
pop
pop
test
ins
inc
jbe
sub
outs
je
dec
cmp
aaa
dec
xor
add
mov
jl
dec
sub
pop
aaa
das
fwait
add
dec
sub
aas
dec
add
int
add
ins
pop
jne
mov
push
mov
jb
jge
jo
sbb
jge
add
shr
enter
aas
pop
aas
xor
lods
and
sysret
xchg
js
push
cmps
loope
adc
pop
sub
pop
leave
inc
jb
fcomp
xchg
mov
cmps
mov
les
xchg
mov
inc
enter
push
hlt
add
ror
jo
push
pop
xor
xor
nop
and
rcr
push
call
jg
sub
mov
shr
js
shl
or
mov
inc
shr
jp
cwde
dec
pusha
push
test
inc
adc
push
ret
add
push
dec
and
add
mov
fdivr
or
in
cmc
enter
fsub
mov
into
ret
sbb
inc
push
cmps
test
push
adc
mov
mov
mov
nop
dec
fcmovu
inc
adc
or
enter
sbb
lds
and
xor
stos
mov
mov
scas
gs
test
mov
mov
sbb
pop
test
sbb
adc
push
jb
sbb
es
adc
sbb
test
outs
adc
test
into
fmul
ss
sub
adc
fnstenv
test
adc
push
adc
popa
or
adc
add
mov
push
stos
dec
jnp
cmps
sub
pushf
int3
add
and
push
repnz
jmp
adc
mov
test
add
adc
dec
(bad)
daa
inc
mov
sub
popf
add
push
add
fimul
push
cmps
cmp
push
inc
aad
popf
add
inc
cmp
cmps
jbe
xchg
inc
sub
dec
mov
aad
in
daa
inc
adc
push
xchg
mov
push
push
cmps
ss
aad
and
and
add
aad
clc
mov
lock
or
aad
push
pop
sbb
das
jne
push
or
add
adc
mov
in
xor
aad
mov
mov
aad
and
sub
aad
lea
in
jle
mov
add
fimul
push
(bad)
aad
in
and
aad
xchg
mov
and
mov
add
aad
inc
cdq
fimul
xor
dec
adc
and
add
push
inc
cmps
lea
aad
inc
or
push
xor
adc
sub
loopne
push
pop
sbb
outs
adc
xor
rcr
xor
aad
jnp
retf
aad
pop
in
add
loopne
push
jb
pop
mov
rcr
adc
sub
push
jnp
(bad)
aad
mov
aad
xor
mov
rcr
scas
aad
add
push
jnp
aad
add
in
pushf
aad
push
push
xchg
aad
dec
or
cdq
stos
pop
test
pop
jnp
jbe
xor
cmc
in
add
push
cmp
aad
test
sub
inc
cdq
fiadd
push
inc
aad
in
cmovo
aad
xchg
mov
pop
push
mov
add
aad
inc
cdq
fiadd
adc
push
add
push
push
aad
add
add
mov
aad
or
(bad)
aad
aam
ds
jb
add
movhps
adc
or
push
int3
adc
pop
adc
add
out
mov
repnz
inc
or
push
or
cmp
popa
or
mov
push
in
es
xor
add
xor
add
cmp
sbb
fwait
outs
inc
adc
jmp
fmul
push
(bad)
fbstp
lea
xor
ss
clc
std
dec
mov
sbb
inc
cmps
cmc
or
aas
cmp
ja
mov
addr16
sub
lea
xor
outs
dec
aam
sub
mov
adc
jp
inc
mov
sbb
mov
test
or
inc
daa
add
adc
mov
(bad)
sbb
add
or
(bad)
xchg
ret
mov
dec
dec
pop
pop
jns
loop
cmc
cmp
cli
push
movs
je
shl
dec
int3
data16
xor
leave
ror
inc
rcr
sub
imul
shr
enter
aad
test
and
jg
adc
ret
xor
aaa
push
jb
popf
or
outs
inc
dec
lods
adc
push
out
in
ret
push
(bad)
xor
mov
mov
or
inc
inc
xchg
pop
in
push
enter
inc
mov
and
cmp
dec
mov
mov
push
lahf
fs
xor
ret
fbld
push
mov
inc
jns
pop
push
add
mov
pop
push
arpl
xlat
xlat
sbb
in
inc
je
sub
ins
mov
lahf
inc
xchg
pop
int3
adc
xor
prefetch
mov
sub
pop
adc
jae
out
popa
pop
inc
mov
xchg
and
ror
rcr
bound
inc
or
adc
cmp
inc
iret
rol
xor
xchg
into
in
jnp
sub
outs
jb
adc
pop
push
sub
ss
or
and
sbb
arpl
loop
leave
push
mov
push
movs
cmp
neg
mov
dec
mov
pop
pop
push
or
push
popf
jge
dec
mov
pop
mov
dec
pop
mov
jl
pop
(bad)
add
pop
or
mov
test
cld
push
ss
cld
jmp
test
or
lock
jg
shr
dec
add
not
outs
rol
movs
test
aaa
fst
add
or
xchg
and
add
inc
pushf
ret
adc
or
ret
mov
mov
jo
iret
cmp
movs
pop
fs
mov
in
adc
and
mov
inc
push
jle
mov
cmp
mov
es
sbb
add
xchg
push
and
cmp
imul
and
aas
das
or
adc
cmp
jl
mov
out
inc
cmp
loopne
and
out
aad
push
xor
mov
mov
movs
cmp
inc
in
into
mov
in
cmp
mov
fld
(bad)
pop
retf
and
inc
and
sub
es
vpmacssww
adc
mov
clc
pop
adc
cmp
cmp
pop
sbb
pop
or
sbb
pop
xor
pop
jo
out
push
aaa
inc
push
in
in
mov
in
loop
xchg
lock
lock
sbb
add
cmps
or
inc
adc
(bad)
jg
loopne
fisub
inc
mov
sub
and
sub
inc
outs
imul
int
xor
(bad)
outs
xor
mov
sbb
js
dec
popa
xor
xchg
jb
(bad)
cmps
push
push
xchg
test
(bad)
cmps
imul
aam
xchg
push
repz
aaa
inc
js
cmps
fs
call
ret
mov
cmps
or
or
loope
and
popa
sbb
xchg
inc
mov
sub
sbb
adc
jbe
cmp
add
movs
mov
mov
sub
cmp
adc
sbb
fdivrp
into
fwait
sub
xchg
dec
ror
mov
dec
(bad)
mov
mov
ror
les
or
xor
(bad)
push
and
jo
mov
mov
adc
or
stos
mov
cld
mov
push
pop
push
bound
rcl
aas
dec
jl
inc
inc
shr
adc
add
js
je
or
jne
nop
in
loop
cld
clc
shl
lock
cmp
mov
push
cmc
rcr
inc
add
mov
mov
add
or
imul
imul
leave
adc
fs
inc
mov
arpl
js
mov
push
xor
jno
push
ins
or
inc
push
fs
jnp
push
jns
add
sbb
jo
jg
push
inc
inc
scas
cmps
inc
push
push
inc
clc
fadd
das
sub
sub
push
inc
push
and
vmwrite
ja
nop
mov
jns
pushf
mov
and
add
adc
rcl
aam
mov
rol
imul
sub
or
inc
cmp
(bad)
and
or
int3
mov
and
int3
sbb
sbb
and
jns
rcl
nop
les
call
push
fimul
test
stos
fiadd
and
jmp
ror
cmp
rcr
in
jb
mov
leave
add
inc
and
movs
mov
jp
icebp
sbb
gs
xor
adc
sbb
adc
dec
stos
or
push
or
dec
sub
movs
sbb
call
mov
add
jne
scas
sbb
fist
jns
shl
ds
clc
hlt
and
das
in
int
nop
rol
ror
mov
or
iret
leave
clc
and
sub
in
loopne
enter
rcr
sbb
add
push
pop
loopne
out
aas
sar
inc
dec
jb
(bad)
push
push
gs
fmul
and
subps
cli
sub
outs
mov
pop
push
xor
call
add
push
ins
bound
xchg
adc
jg
cmp
shr
mov
(bad)
and
mov
or
mov
sar
xor
pop
pop
push
ja
lahf
cmp
sbb
xchg
(bad)
push
data16
inc
ret
in
add
and
mov
sub
xor
add
outs
in
add
js
dec
test
add
jg
or
inc
inc
or
inc
ret
cs
sbb
mov
adc
pop
and
imul
xchg
push
push
adc
adc
retf
dec
sub
into
push
jo
aam
xor
daa
adc
es
scas
or
cwde
push
lock
sub
push
cmp
inc
lods
lock
inc
sub
cld
(bad)
sub
rcl
lahf
nop
rcr
pop
and
in
add
jo
mov
mov
scas
add
pop
or
cmc
mov
adc
in
fild
inc
(bad)
aaa
adc
add
ficom
aaa
loop
sbb
or
mov
xchg
(bad)
inc
push
adc
add
and
shl
sub
lds
inc
adc
xor
sub
add
test
sub
push
mov
out
adc
dec
inc
dec
outs
sbb
or
mov
daa
test
xchg
ret
sbb
xor
sar
push
mov
mov
or
xor
sar
add
add
cmp
cmp
push
nop
sub
cmp
outs
fisttp
xor
push
lods
jns
or
sub
fwait
imul
in
sub
push
sbb
pop
clc
add
jg
mov
push
jmp
(bad)
lds
dec
sub
and
ficomp
jg
mov
pusha
push
(bad)
push
pop
sub
add
adc
pop
push
sbb
add
je
add
aas
inc
sbb
in
cmp
sub
jmp
out
and
enter
jl
daa
pop
push
and
sahf
(bad)
sub
popf
or
or
scas
dec
iret
and
sbb
jnp
push
jmp
(bad)
jge
and
fild
add
fdivrp
data16
outs
retf
in
rcr
or
mov
add
cmp
adc
cmp
mov
retf
inc
sub
adc
jle
ret
popf
shl
shr
arpl
xchg
add
fimul
push
jecxz
fadd
xlat
sbb
pop
inc
lea
fisttp
add
sbb
or
pop
jecxz
and
add
or
fdivr
mov
cmp
push
add
loop
jge
mov
sahf
xchg
es
mov
retf
mov
(bad)
scas
je
cwde
sub
cmp
xchg
rcr
mov
jo
inc
shr
inc
outs
push
retf
mov
or
mov
dec
retf
add
mov
lods
out
adc
les
or
popa
ins
and
add
push
sbb
sbb
fild
sbb
popf
inc
ds
jbe
push
adc
and
es
das
adc
imul
add
mov
adc
sbb
int3
fsub
fnsave
sub
and
and
inc
adc
sub
add
push
dec
and
pop
mov
movs
sbb
idiv
xor
fmul
xor
arpl
pushf
cmps
out
fisttp
inc
in
mov
sub
adc
outs
xor
inc
jmp
xchg
inc
rcr
sbb
fs
bound
daa
pop
or
sbb
dec
and
ds
lea
inc
mov
mov
or
mov
into
sbb
ins
xchg
cmps
lods
(bad)
mov
xchg
enter
in
lahf
sub
adc
push
outs
dec
sbb
fcomp
mov
inc
jb
sahf
ror
jne
daa
test
adc
adc
movs
cmc
cmp
rcr
sqrtps
call
jnp
mov
cmp
fisub
push
mov
in
fimul
and
mov
sub
adc
jl
add
int
sbb
iret
or
push
mov
and
sub
and
inc
mov
(bad)
mov
sbb
and
inc
test
xor
jl
adc
test
sub
push
(bad)
adc
in
ret
nop
lds
rol
mov
ret
pop
push
xchg
ins
cmc
mov
adc
or
iret
outs
rcr
loope
sub
mov
sbb
or
jae
and
or
or
rol
or
sbb
xchg
(bad)
adc
fnstenv
fld
sti
loop
sbb
or
jns
pusha
out
aas
mov
leave
mov
push
dec
enter
mov
sub
test
inc
into
call
aaa
popa
push
ja
enter
jl
(bad)
lock
push
daa
xor
sbb
leave
jp
mov
jp
cmps
rol
sbb
and
ins
inc
sub
ret
fsubr
adc
ja
stos
adc
and
inc
dec
add
xor
pop
lock
lods
add
movzx
inc
add
xor
or
xchg
xchg
cwde
or
mov
in
mov
add
mov
sub
inc
pop
cmp
inc
or
add
add
mov
(bad)
retf
mov
popa
jo
xchg
js
pop
add
sbb
ins
pop
stos
jnp
xchg
enter
adc
mov
or
sbb
test
sar
dec
push
sub
mov
sub
dec
add
push
lea
add
call
out
dec
xchg
sbb
pop
sub
into
dec
inc
mov
test
push
js
xchg
lea
mov
ds
not
(bad)
sbb
test
jp
jno
adc
add
retf
in
scas
pop
(bad)
mov
inc
jmp
sbb
push
cmp
mov
sub
cmp
aam
stos
shl
dec
jo
js
inc
sub
add
inc
mov
mov
sbb
jecxz
push
(bad)
mov
cwde
mov
inc
aaa
xchg
nop
xor
movs
gs
daa
rcl
sub
cmp
div
(bad)
fiadd
cmp
popf
sbb
loope
enter
add
add
movs
test
sahf
loopne
mov
jecxz
mov
mov
sbb
cmp
mov
shr
or
xchg
add
ins
xchg
mov
(bad)
orps
jmp
add
jge
or
loop
sbb
lods
mov
mov
adc
scas
jmp
(bad)
and
adc
pusha
(bad)
pop
test
cmp
jl
or
or
xor
mov
sub
xor
dec
and
out
or
leave
mov
jg
shl
adc
xor
and
adc
(bad)
jge
and
mov
dec
cmp
or
add
sar
dec
sub
push
jg
and
and
sub
rol
cmp
xchg
and
and
add
adc
or
fimul
inc
cmp
inc
popf
add
cmp
pusha
xor
push
mov
ja
sub
push
push
sbb
push
adc
out
enter
cmp
jg
sbb
shr
inc
cmp
adc
in
xchg
pushf
call
inc
inc
lahf
mov
jmp
xchg
pop
pop
xor
push
sub
ror
and
adc
stos
daa
sar
imul
pop
imul
add
ja
pop
shl
imul
scas
pop
popa
nop
mov
or
mov
cmc
inc
cli
push
fiadd
xchg
jp
adc
ins
pop
inc
pop
mov
int3
xchg
dec
mov
movs
std
aaa
les
ins
adc
add
add
xor
or
inc
push
xor
fldcw
cmp
pop
je
mov
inc
lea
push
call
sub
test
push
dec
push
or
sub
cmps
dec
sti
or
inc
adc
les
lods
add
add
outs
lea
fimul
cmp
loopne
leave
nop
(bad)
popf
mov
cmp
div
lock
sbb
imul
sub
cs
add
into
or
aam
rol
xchg
pop
xchg
shl
pop
pop
inc
dec
cmp
add
and
scas
xor
lock
pop
jmp
aas
fwait
dec
cmp
inc
lock
outs
cmps
in
enter
fdiv
and
or
or
ins
mov
(bad)
push
cmp
push
jle
sbb
push
and
cdq
xchg
call
lock
cs
and
push
dec
sbb
add
lods
int3
pusha
mov
and
fist
fimul
inc
or
icebp
not
xchg
jb
or
or
pop
in
je
(bad)
push
inc
adc
movs
inc
jo
jnp
push
xchg
lock
(bad)
cs
fcomp
test
xchg
xchg
movs
add
call
inc
mov
fnstcw
jnp
add
repz
sub
jmp
nop
xor
aad
jle
(bad)
popf
fistp
mov
pop
inc
fld
jecxz
jo
mov
adc
clc
jp
dec
imul
dec
test
(bad)
retf
adc
xchg
add
mov
and
mul
add
retf
inc
add
dec
mov
nop
test
pop
enter
inc
ret
arpl
pop
sbb
xchg
add
and
fadd
mov
adc
adc
xchg
movs
or
inc
cs
sub
xchg
dec
inc
inc
in
push
xchg
mov
xor
mov
js
(bad)
jb
and
sub
xlat
sbb
ins
xchg
dec
test
mov
aaa
adc
ins
fisttp
jno
jg
imul
pop
pop
pop
sbb
add
inc
cmp
movs
cmps
ins
sbb
aas
inc
inc
inc
call
dec
push
push
pop
arpl
cmp
add
fs
push
sub
mov
cmp
adc
(bad)
cs
adc
push
ret
mov
push
add
ror
jmp
dec
add
or
fwait
stos
mov
mov
cli
xor
push
cwde
ret
leave
scas
sub
addr16
add
ja
jmp
fadd
and
scas
loopne
inc
mov
jns
pushf
out
push
jb
aaa
or
mov
push
dec
sub
or
pop
xor
jo
out
or
cmp
cmp
or
shr
dec
and
(bad)
xor
pop
(bad)
pop
push
sub
fcomp
cli
jl
cmp
adc
int
mov
addr16
ja
adc
into
je
and
ss
add
cs
mov
lock
jae
or
inc
mov
or
sbb
jmp
push
addr16
test
xor
push
enter
sbb
pop
loop
(bad)
push
pop
loop
sbb
sub
xchg
ds
fadd
cmp
add
(bad)
push
xor
inc
cmps
push
or
hlt
leave
call
ins
add
or
pop
and
mov
or
mov
and
mov
rol
fcom
in
adc
xchg
pop
pop
call
retf
aam
cs
clc
mov
neg
adc
add
test
add
xor
fdiv
in
fmul
xor
shr
(bad)
sub
and
nop
and
leave
in
xor
mov
and
jmp
adc
add
add
retf
shr
or
add
ds
fild
jne
jno
mov
and
inc
pop
mov
cmp
jo
sahf
ret
arpl
push
cmp
push
add
push
xchg
xor
sub
(bad)
sar
call
fistp
add
add
add
mov
retf
xchg
jmp
sbb
pop
test
sub
or
test
or
mov
scas
mov
jg
daa
adc
inc
add
sbb
dec
add
add
enter
fs
fsub
xchg
mov
xchg
and
jge
call
call
inc
add
int
mov
jbe
dec
jns
push
add
sar
ins
and
shl
jne
retf
or
inc
mov
lea
inc
adc
out
jbe
mov
dec
lods
jo
push
ja
cmp
stos
mov
inc
add
add
ss
pop
push
mov
add
pop
mov
inc
add
xor
mov
mov
push
jecxz
leavew
jmp
mov
enter
lea
je
push
add
js
mov
cmp
ret
sbb
adc
adc
add
pop
push
mov
add
and
dec
inc
xor
mov
xchg
retf
adc
jne
add
bound
jecxz
pop
inc
pand
mov
sbb
and
sub
pop
dec
hlt
dec
enter
push
dec
and
or
add
push
dec
sub
mov
add
(bad)
push
adc
clc
push
outs
add
sub
je
push
sahf
fnstcw
dec
jl
mov
xchg
rcr
js
jg
lods
sub
pop
ret
mov
or
jbe
outs
push
pop
adc
adc
and
imul
fbstp
(bad)
(bad)
cmp
push
xor
out
idiv
adc
test
adc
test
adc
pop
lock
js
dec
mov
enter
outs
jecxz
and
mov
shl
popa
xlat
inc
xchg
aaa
aas
pop
mov
or
cmp
and
ja
jp
add
(bad)
pushf
cmp
adc
fimul
jmp
sbb
imul
sbb
retf
jl
adc
sbb
ret
mov
add
mov
push
inc
adc
invd
xor
sbb
push
or
push
out
ins
jae
xor
sub
fs
jae
aam
in
push
push
cmp
(bad)
pop
and
push
daa
xchg
ins
pusha
inc
or
add
jnp
ja
mov
add
push
es
push
and
cli
ja
add
push
loop
jbe
adc
dec
adc
xor
dec
or
sub
out
mov
mov
xor
mov
pop
call
xchg
mov
sbb
(bad)
jae
jae
xor
add
and
sbb
jne
fidiv
inc
add
repnz
push
inc
mov
(bad)
jbe
fidivr
mov
hlt
retf
and
jmp
push
js
loopne
jp
add
icebp
(bad)
test
add
add
aam
cs
cmc
xchg
nop
pop
aam
pop
adc
sub
lea
pop
lods
add
ret
pop
adc
jl
mov
pop
mov
push
jo
adc
dec
mov
sbb
pop
xchg
in
mov
ins
std
pop
retf
jle
in
push
sar
push
inc
dec
dec
dec
and
mov
dec
mov
xchg
cmp
pop
and
push
call
rol
pusha
add
adc
dec
sub
iret
popf
push
loop
(bad)
mov
ins
xchg
xor
jne
inc
cmps
nop
xor
mov
jo
out
mov
das
pop
xlat
mov
daa
dec
mov
mov
(bad)
mov
ficomp
xchg
push
es
xchg
add
xchg
sbb
xchg
lock
xchg
loop
or
fsub
retf
push
out
pop
xchg
add
fisttp
mov
mov
or
loopne
pop
loope
jb
retf
sbb
loop
sbb
and
test
mov
mov
xor
jb
lea
leave
dec
mov
and
xor
add
pop
(bad)
mov
jge
pop
inc
push
dec
xor
fild
aam
ret
pmulhuw
shl
cwde
jp
mov
jns
adc
add
outs
and
fcom
xchg
outs
jmp
jle
sub
adc
jl
mov
fwait
xchg
and
jecxz
add
or
cmp
bound
cmp
in
test
add
xor
cmp
lock
imul
xor
jg
dec
shl
jle
adc
mov
dec
pop
sahf
jb
sub
add
push
or
mov
dec
or
adc
cmp
sahf
mov
jl
idiv
outs
inc
out
ds
lds
js
cld
jb
ins
imul
leave
repz
sbb
das
and
fnsave
outs
or
sub
xchg
dec
jno
arpl
sub
rcr
or
jl
xor
xchg
dec
dec
or
gs
outs
fdivr
inc
add
into
cmc
mov
jmp
jg
das
ds
pop
(bad)
push
pop
jno
daa
mov
and
dec
push
sbb
pop
inc
sbb
and
xlat
mov
xor
cmp
push
or
pop
adc
inc
loop
jmp
ret
rol
ss
nop
push
pop
(bad)
frstor
cmps
jo
icebp
jle
out
xchg
das
cmc
add
cs
adc
aaa
pop
pusha
mov
add
in
adc
out
pop
xor
call
inc
mov
fimul
sbb
imul
shr
(bad)
adc
pop
jns
mul
dec
movs
pop
test
sub
dec
jo
ss
push
push
jb
xchg
cmp
inc
jle
iret
or
cld
cmp
mov
repz
(bad)
inc
jg
inc
sub
mov
add
aad
sub
add
inc
clc
jns
mov
jge
imul
dec
popa
jle
enter
add
or
push
xor
stos
xchg
test
add
push
add
bound
or
imul
mov
xchg
jecxz
dec
mov
or
sbb
push
outs
mov
or
adc
bsr
push
xor
push
jle
or
push
out
push
(bad)
fidiv
cmp
pop
(bad)
fdivrp
outs
mov
sbb
xor
test
sbb
repz
ds
sbb
jmp
cmps
jne
sub
(bad)
in
xchg
xchg
or
ds
loopne
call
xor
push
and
sahf
popa
cmp
adc
adc
cmp
mov
push
mov
mov
push
xchg
push
xchg
inc
push
cs
adc
adc
push
mov
jmp
mov
out
mov
sahf
pop
push
mov
call
neg
adc
or
or
or
mov
jmp
cdq
jo
adc
jne
sbb
cmps
add
xor
xchg
lods
ja
push
sbb
ins
fcom
les
je
ror
and
jno
(bad)
out
push
mov
fscale
mov
adc
sahf
xor
dec
jg
push
xor
retf
test
mov
mov
(bad)
sbb
jmp
sub
iret
fisttp
fdivr
add
sub
lods
cmp
jmp
mov
pop
add
sbb
mov
and
push
fisub
fld
test
jl
mov
nop
or
pusha
lea
sub
xor
jecxz
ds
lea
retf
into
mov
pop
jmp
push
retf
lods
mov
adc
retf
mul
shr
push
or
dec
pop
retf
jo
sbb
and
push
pop
lea
sub
adc
je
dec
jne
and
push
and
mov
mov
mov
or
mov
lea
outs
jne
loopne
mov
dec
push
inc
loope
(bad)
pop
pop
adc
or
mov
jmp
dec
sbb
fwait
and
jnp
push
xor
mov
loopne
cmovle
enter
sbb
mov
jb
mov
loope
rcl
inc
jo
(bad)
dec
inc
sbb
inc
call
int
mov
je
sar
sbb
aaa
mov
in
cmc
dec
add
pop
aas
jnp
rol
xchg
cmp
push
inc
sub
and
dec
dec
push
sub
add
mov
pop
dec
push
shl
mov
pop
push
cmp
dec
push
jmp
inc
xor
push
cld
stc
or
scas
mov
cmc
jbe
test
adc
sub
mov
jmp
add
sbb
push
sbb
lea
rcr
mov
add
push
out
sbb
or
xchg
mov
ret
pop
lds
adc
and
movs
or
rcl
dec
loope
shl
push
jge
movs
mov
jns
or
or
(bad)
push
dec
dec
lea
aaa
adc
cmp
js
enter
push
push
call
aaa
sub
mov
ss
or
add
cmp
cmps
adc
punpcklbw
rcl
aad
ret
and
dec
js
dec
(bad)
mov
ins
mov
out
out
add
or
loopne
pop
xor
das
push
pushf
fdivr
ret
inc
jo
and
or
add
mov
add
int3
mov
ins
add
imul
add
test
jecxz
dec
xor
dec
jo
cs
cmp
jmp
add
test
add
or
inc
fdivr
jb
add
pop
jp
sar
sbb
in
xor
jle
sbb
adc
loope
lods
cmp
(bad)
cld
pushaw
imul
imul
loope
jae
mov
or
cmp
aaa
test
sub
je
dec
sbb
jb
or
sbb
xchg
xlat
sbb
sbb
add
add
cmp
push
mov
push
add
movs
or
dec
js
shl
push
jl
pop
in
imul
push
push
or
pushf
push
cmovno
movs
adc
or
(bad)
jmp
bound
adc
adc
lea
add
(bad)
(bad)
adc
jo
sbb
pusha
stos
jnp
mov
mov
cmp
hlt
push
pop
aaa
mov
mov
pop
xlat
lds
mov
fcmovnb
push
stos
push
call
mov
adc
loopne
cmps
out
call
inc
push
ins
pop
mov
or
and
adc
and
inc
push
stc
jl
push
js
dec
ins
add
xchg
sbb
push
das
out
cmp
cs
out
add
aaa
inc
or
xchg
cmps
jno
scas
xrstors
push
xchg
dec
xchg
mov
repnz
pop
sbb
fs
mov
rcl
adc
cmp
imul
cmp
push
ss
sub
(bad)
std
push
lea
cmp
or
adc
or
sti
ins
out
push
ins
adc
or
leave
addr16
add
cld
sub
pop
clc
cmp
gs
add
jmp
daa
dec
sub
push
rol
inc
push
or
inc
jns
lods
add
add
jp
or
mov
dec
in
push
push
add
cli
inc
lods
add
imul
adc
adc
iret
add
std
jbe
inc
mov
pop
sub
push
mov
retf
aad
int3
adc
mov
test
jmp
inc
ins
jne
pop
sbb
or
shl
scas
call
jns
pusha
loop
and
je
(bad)
enter
jmp
cs
pop
jb
rcl
push
fisub
pop
imul
inc
enter
push
pusha
lsl
inc
sbb
test
mov
push
mov
out
sahf
add
mov
push
push
adc
push
mov
enter
jne
stos
add
fcmovu
or
(bad)
js
sbb
adc
cmp
movs
scas
pop
loopne
inc
or
in
and
cmp
lea
test
dec
sahf
mov
or
pop
or
sbb
retf
cs
daa
mov
nop
add
in
jmp
call
add
cli
mov
es
xchg
push
pop
out
sub
push
mov
cmp
mov
retf
test
adc
xchg
lock
cmp
cmp
addr16
cli
inc
or
rcr
dec
xchg
ret
in
ret
push
dec
push
pushf
add
or
xchg
sbb
xor
stos
jo
xor
mov
and
jo
pushf
and
add
mov
xor
icebp
pusha
cmp
inc
cwde
mov
je
shl
push
pop
push
dec
mov
pop
sbb
add
nop
cmps
jo
push
push
or
retf
mov
adc
scas
dec
shl
loop
lods
or
jno
mov
cmp
jle
ins
mov
xor
cmp
mov
mov
dec
inc
or
inc
nop
fisub
cld
adc
add
popa
sbb
add
inc
jmp
adc
stos
adc
pop
and
mov
lea
push
out
in
sbb
or
adc
pusha
sub
js
push
mov
mov
adc
inc
xchg
(bad)
gs
xchg
imul
push
aaa
loopne
popf
inc
dec
sub
and
in
jo
pop
div
and
lea
shl
mov
test
or
xchg
int
adc
pushf
inc
std
out
loopne
ss
ror
mov
xchg
sub
adc
test
test
xchg
pushf
ret
cmp
jge
sub
sub
sahf
(bad)
push
es
lahf
pop
lock
add
out
(bad)
xlat
imul
mov
dec
idiv
add
ins
add
jo
imul
inc
(bad)
cld
sub
mov
aad
mov
sbb
xor
ficomp
sbb
add
loop
leave
inc
push
leave
inc
xchg
sub
adc
push
ror
out
jge
sbb
or
add
push
cld
loopne
pop
or
push
sub
xor
and
cmp
and
mov
xchg
sub
sbb
inc
inc
jnp
adc
bound
int
mov
mov
add
xor
or
rcl
icebp
cmp
fsubr
sub
(bad)
sub
xor
in
pusha
xchg
inc
push
cmp
rep
iret
sub
push
dec
and
mov
movs
lock
(bad)
popf
fcom
mov
shr
sbb
aas
add
mov
sbb
jbe
inc
loop
mov
fmul
sbb
test
xchg
xlat
xchg
fs
jg
pop
mov
mov
loope
xchg
xor
push
pusha
push
jb
pusha
cmp
jns
imul
cmp
pop
les
mov
xor
int3
jmp
adc
add
inc
xchg
(bad)
out
or
ret
aad
sub
jecxz
cmp
or
mov
adc
xchg
sub
ja
adc
repnz
arpl
inc
cli
(bad)
loope
or
pop
(bad)
lock
inc
cmp
dec
or
cmp
and
jo
sti
icebp
gs
cmp
pop
or
rcr
jg
dec
pop
mov
vcmpsd
mov
fisub
out
cmp
js
mov
add
mov
ret
sar
outs
clc
(bad)
jge
jo
mov
test
pop
jno
je
push
shl
sti
xchg
sub
test
into
or
cmc
sar
mov
imul
in
xchg
cld
(bad)
mov
jg
out
inc
fsub
inc
shl
popf
cmp
push
push
psubsb
mov
jmp
sub
push
lock
mov
cmp
jle
push
adc
inc
jo
in
ja
lds
dec
sub
hlt
stos
dec
ins
jno
adc
jmp
iret
call
stos
inc
out
mov
js
sbb
cmp
and
or
and
inc
fst
xchg
rcl
das
push
loopne
cmp
fwait
mov
add
ret
xchg
cmp
(bad)
fcomp
xchg
adc
xchg
je
clc
scas
dec
inc
icebp
mov
xchg
push
jge
push
xchg
and
xchg
or
sbb
int
mov
sar
test
push
jmp
or
inc
(bad)
cmp
pop
fcomp
add
jl
mov
into
mov
push
pusha
adc
sbb
cdq
push
push
stos
scas
das
inc
adc
cmp
or
stos
or
sbb
and
loopne
test
cmp
gs
xor
jns
clc
sub
pop
xchg
cmps
test
xor
jo
sbb
mov
bswap
or
and
enter
int
clc
sub
sub
mov
aas
xor
or
dec
fs
and
add
cmp
imul
pop
scas
push
cmps
cmp
inc
mov
and
lods
addr16
fstp
daa
(bad)
sub
cmp
mov
dec
ror
shl
icebp
stos
std
popa
push
dec
cmps
jno
aad
push
jbe
sbb
and
fcom
ja
push
lock
pop
adc
push
pop
or
push
icebp
fucomip
pop
or
jmp
cmp
and
fs
xor
sbb
mov
mov
push
movs
rol
jmp
call
nop
dec
loopne
sbb
push
nop
sub
sbb
pusha
dec
mov
add
adc
mov
and
and
ins
push
sar
push
inc
add
pop
ficomp
or
add
pop
push
loop
pushf
retf
sub
xchg
mov
add
jl
das
sbb
adc
icebp
push
lods
inc
popa
xor
test
outs
xchg
pop
mov
jae
add
mov
xchg
pop
enter
mov
dec
jno
(bad)
xor
jl
imul
jb
in
xor
jo
lock
enter
sbb
shr
inc
fucomp
jle
xchg
dec
jle
cwde
sbb
cld
mov
rcl
sahf
xor
pop
cmp
pop
outs
cmp
dec
mov
sbb
aaa
inc
xchg
pusha
mov
ret
or
cmp
dec
and
loope
addr16
dec
cdq
xchg
pop
mov
push
jmp
jl
or
sbb
mov
loope
inc
fsubr
out
inc
(bad)
mov
sbb
aas
(bad)
xor
fwait
les
adc
mov
enter
cli
or
jmp
adc
lds
sbb
sbb
sub
sub
pop
popa
cld
sbb
push
mov
lahf
and
test
adc
add
dec
(bad)
xlat
loop
outs
xor
push
mov
dec
xchg
jmp
retf
mov
adc
or
dec
add
pushf
jecxz
ret
adc
sbb
setg
sub
jmp
sbb
push
sub
dec
mov
(bad)
xchg
pop
add
movs
jb
leave
rol
inc
je
aad
pop
cwde
xchg
dec
push
and
xlat
enter
cdq
ror
lods
push
(bad)
cmps
pusha
add
add
retf
xbegin
sar
mov
sar
inc
std
push
push
mov
test
push
and
xor
cmp
nop
sub
ret
xor
jmp
mov
pop
cmps
jno
sbb
xchg
(bad)
aad
push
dec
and
cli
jl
push
or
jmp
mov
int3
push
push
cwde
and
push
mov
jl
jne
inc
inc
mov
sti
xchg
jle
mov
in
mov
inc
pushf
lock
xchg
inc
lea
push
fimul
mov
or
icebp
je
mov
mov
jg
setle
push
icebp
sbb
fild
cmp
into
jp
ds
dec
jmp
loop
add
outs
sub
or
and
lock
cmp
sub
dec
mov
inc
mov
and
inc
stos
mov
jp
add
cmp
push
adc
add
inc
shl
cmps
add
inc
cmp
cmc
or
push
push
push
pop
fiadd
adc
ror
sbb
inc
loop
dec
ds
movnti
cmp
push
inc
test
aaa
outs
retf
mov
xchg
gs
ins
pop
aam
ss
ror
fistp
xor
dec
mov
mov
inc
inc
jg
xchg
cmp
ins
call
add
out
xor
inc
push
loopne
mov
mov
sbb
xor
ss
in
xor
and
inc
pusha
clc
movd
(bad)
adc
int
(bad)
cwde
in
es
pop
jl
fcomip
add
es
fwait
imul
xchg
jns
sbb
push
clc
sbb
(bad)
loope
pop
adc
add
hlt
fiadd
push
xchg
and
fcomp
mov
jnp
lea
lea
pop
movs
mov
movs
mov
xchg
mov
ret
cmps
or
sbb
popa
and
loope
or
push
push
or
jge
lock
sbb
sbb
pusha
jle
add
fistp
daa
inc
xor
sbb
push
inc
das
lock
sbb
ret
adc
gs
and
or
jp
jb
adc
out
lahf
es
dec
or
sbb
or
sub
cmovle
or
dec
dec
popf
mov
cmp
mov
sahf
sbb
je
lahf
lea
in
inc
add
in
xor
mov
pop
or
test
clc
pop
nop
jne
push
or
inc
push
out
sbb
out
xor
cmp
cmp
int3
clc
and
or
push
adc
add
jge
cli
xchg
mov
push
loopne
adc
xor
adc
xchg
adc
sbb
sub
cwde
and
and
add
pop
sbb
and
sbb
les
shl
iret
lods
cmp
xor
mov
xchg
es
rcr
and
xchg
mov
and
dec
frstor
jmp
sahf
and
and
add
(bad)
xor
cmp
adc
retf
mov
mov
(bad)
adc
mov
mov
sub
adc
test
dec
xchg
(bad)
jge
push
and
sbb
retf
repnz
cmp
mov
(bad)
add
repnz
mov
add
je
inc
mov
or
push
mov
nop
push
pop
push
push
sub
push
or
cmp
xchg
sub
adc
pop
xor
xchg
stos
push
(bad)
mov
pop
clc
push
xor
mov
out
push
fs
push
dec
dec
jns
add
aaa
xchg
sub
bound
jmp
scas
push
cli
xchg
retf
add
dec
sbb
fisttp
add
push
sbb
es
dec
sbb
and
mov
cmp
sub
jne
fisttp
mov
lods
stos
mov
(bad)
nop
xchg
mov
xlat
call
xchg
lods
inc
dec
addr16
js
arpl
std
xchg
add
dec
xlat
push
dec
test
push
jg
push
mov
mov
dec
cwde
(bad)
pop
push
jecxz
cmp
lock
dec
ret
lock
test
sahf
les
sbb
mov
lea
loop
xchg
sub
fsub
adc
cmps
or
std
mov
sbb
jmp
add
stc
inc
fnstenv
or
sub
out
ret
cs
xor
pop
out
sbb
inc
or
inc
js
inc
lds
push
xor
mov
mov
or
and
add
ret
cwde
pop
jmp
cwde
cli
push
rol
imul
xchg
inc
inc
cmp
adc
or
adc
pop
jmp
adc
mov
add
inc
mov
sbb
test
or
add
adc
imul
sbb
lods
or
lock
push
fiadd
xor
jae
jge
jb
push
dec
inc
add
pop
and
dec
or
jg
dec
mov
jmp
in
shl
ret
call
push
xchg
inc
ja
sar
fadd
sub
leave
adc
xchg
push
push
fs
jne
mov
or
cmps
jne
and
or
mov
sub
adc
xchg
ins
adc
call
dec
jo
adc
jmp
sub
movs
ins
and
dec
cmp
push
mov
jne
xchg
fisttp
xchg
push
out
add
or
sar
fiadd
or
in
loopne
fdivp
jg
clc
lea
mov
mov
adc
mov
mov
sbb
jecxz
add
inc
xchg
je
cwde
sar
inc
jo
je
adc
dec
ror
inc
sub
add
sar
adc
pop
das
cwde
add
(bad)
les
mov
cmc
rcr
test
adc
mov
dec
int3
cli
enter
cmp
les
xor
je
imul
in
jl
loopne
and
mov
ja
jl
pushf
push
adc
and
xchg
mov
push
sar
jmp
push
(bad)
or
fdiv
fcom
in
imul
ins
mov
int3
adc
dec
jbe
repnz
pop
mov
lea
sub
mov
lea
bound
test
adc
inc
int3
or
jbe
and
call
mov
pop
or
retf
nop
lea
mov
inc
push
and
(bad)
push
inc
xchg
dec
dec
push
daa
adc
or
push
mov
test
lods
inc
(bad)
sbb
add
adc
add
sbb
fsubr
xor
pop
out
mov
aaa
pusha
xlat
xor
shr
jecxz
xrelease
call
push
jo
scas
push
sub
or
jp
cmp
mov
add
cmp
mov
loop
sbb
pop
js
sub
pop
dec
mov
inc
rcr
jbe
ss
or
sub
or
add
enter
and
or
and
adc
xchg
sbb
xchg
or
adc
leave
dec
and
inc
popa
dec
int3
(bad)
cld
hlt
and
(bad)
les
imul
mov
out
or
xor
clc
mov
aaa
xor
in
add
lock
jmp
ret
sbb
push
cmp
mov
jae
scas
dec
xchg
cmps
mov
mov
in
xor
push
and
jle
pop
xor
sub
add
sar
jmp
inc
add
cmp
xchg
test
fild
nop
mov
jns
dec
test
or
xor
mov
sbb
dec
cs
mov
sbb
adc
add
cmp
xor
(bad)
mov
mov
mov
inc
push
jmp
repz
dec
mov
loopne
add
jl
inc
repz
mov
add
lock
jmp
dec
aaa
add
pusha
paddb
sub
mov
loope
mov
cmp
stos
femms
add
fadd
popf
push
sar
jb
ror
mov
add
mov
xchg
retf
loopne
fcom
or
xchg
scas
in
dec
or
dec
dec
mov
dec
jne
clc
inc
cmp
xchg
loop
jae
inc
sbb
icebp
enter
inc
loopne
push
add
sub
pop
push
and
aam
cld
fcom
out
aas
inc
fcom
in
inc
adc
mov
push
pushf
les
mov
les
jle
je
sbb
mov
inc
out
rol
ror
sbb
clc
push
or
xchg
push
push
pop
inc
sub
mov
jno
adc
or
jmp
sbb
je
adc
inc
sub
je
dec
jle
sbb
je
pop
mov
outs
adc
jnp
ja
lods
adc
sub
mov
jge
add
sub
clc
mov
pop
xchg
adc
and
add
icebp
imul
rol
mov
rcr
ss
popa
sbb
pop
and
cmps
cdq
ss
adc
sbb
mov
jle
or
xor
jne
sar
ret
adc
call
popf
sbb
arpl
add
jne
rcr
js
inc
xor
add
es
cmp
icebp
dec
sub
sub
push
imul
or
jl
inc
mov
mov
setle
call
mov
jns
icebp
dec
jo
push
cmp
adc
mov
fiadd
or
sar
adc
cmp
add
out
rcl
retf
enter
aad
mov
(bad)
inc
repnz
pop
mov
dec
ret
and
outs
push
js
or
push
push
sbb
and
mov
jbe
dec
popf
push
xor
inc
cwde
ret
jo
aas
fwait
mov
lock
cmp
mov
mov
xchg
js
imul
mov
push
sbb
es
mov
fisubr
dec
ret
pop
sqrtps
dec
dec
push
dec
inc
mov
fild
es
jmp
inc
imul
jne
mov
cs
scas
and
sbb
lock
enter
add
and
hlt
and
inc
sub
mov
pop
xlat
sub
inc
mov
bound
clc
and
and
not
xor
pop
or
out
and
add
push
xchg
sub
and
pushf
push
inc
adc
xchg
lock
lock
adc
clc
push
es
inc
cld
adc
push
inc
sbb
in
(bad)
adc
scas
push
jo
jl
pop
rol
outs
es
push
cmp
mov
add
add
inc
dec
sbb
sbb
pop
add
add
push
dec
xor
or
fidivr
jl
inc
and
and
mov
adc
push
adc
(bad)
dec
loope
dec
add
leave
fwait
xchg
loope
mov
dec
xchg
test
loopne
lea
mov
pop
sahf
adc
ja
mov
mov
ret
xchg
mov
mov
add
sbb
or
sbb
jmp
xchg
mov
fild
mov
add
dec
cmp
test
push
in
add
or
ja
lock
lods
inc
shl
add
mov
(bad)
leave
xor
mov
jge
push
adc
mov
dec
xchg
lea
push
test
inc
cs
pop
dec
aaa
add
adc
loop
fadd
mov
in
cmp
mov
mov
mov
mov
inc
jns
inc
test
cmp
jl
pop
pop
fld
cs
je
pop
lods
sar
cmps
xchg
cld
jmp
in
add
add
rol
das
rcr
shr
fcomi
(bad)
lock
popf
fsubr
sar
pusha
inc
loop
mov
neg
or
scas
push
xor
rcl
pop
add
ins
and
mov
popa
or
sub
jns
clc
sub
sub
clc
ds
or
fidivr
cmp
xchg
add
and
push
jns
pusha
inc
pop
mov
mov
mov
mov
js
mov
aas
mov
clc
lea
inc
js
dec
jb
xchg
loope
push
or
add
mov
adc
mov
sbb
or
mov
push
cli
inc
jl
cmp
mov
pop
add
sub
sbb
dec
jns
add
loop
imul
adc
add
in
aaa
push
push
push
sar
lahf
addr16
in
xchg
and
imul
xchg
xor
data16
imul
lock
lock
call
pop
or
xchg
adc
mov
dec
cmp
mov
add
adc
inc
cmp
(bad)
(bad)
adc
inc
pop
ja
test
and
sub
ret
lods
or
or
aaa
int3
jno
and
and
pop
loopne
int3
push
ret
adc
into
or
adc
loopne
xor
pop
add
xor
fisubr
sbb
inc
retf
jo
add
push
or
xor
daa
push
in
jge
add
fistp
adc
or
mov
ret
mov
adc
shl
loop
cld
hlt
das
pop
cmp
call
mov
dec
lea
pop
add
fs
pop
mov
loopne
(bad)
xor
ret
xor
fdiv
ins
or
rol
in
jl
cwde
les
daa
mov
unpckhps
xchg
rol
in
xor
int3
fcomp
or
xor
jno
call
push
sub
cmp
sub
(bad)
aam
adc
lock
jecxz
(bad)
ficom
int3
sbb
mov
xchg
dec
mov
xor
mov
in
das
dec
cmp
call
rcl
mov
in
mov
lea
push
mov
xchg
loopne
sbb
mov
pop
daa
test
xor
ins
xchg
jb
xchg
(bad)
mov
inc
jmp
ja
jmp
cmp
inc
fdivr
xchg
xchg
mov
dec
adc
call
shl
imul
cwde
nop
and
(bad)
mov
mov
push
mov
stos
mov
sbb
jecxz
fmul
add
inc
adc
mov
fsubr
and
xor
lods
imul
add
rcl
popa
adc
cmp
js
add
dec
xor
imul
in
or
in
adc
sbb
pop
jmp
ins
clc
jno
shr
mov
adc
sbb
les
gs
add
or
add
cwde
std
ins
sbb
movs
shl
icebp
fstp
dec
add
dec
add
or
or
sbb
pop
rcr
xor
jno
jle
(bad)
outs
add
out
push
retf
xchg
cmp
mov
and
add
dec
repnz
cmovae
sbb
add
sahf
cmps
imul
std
enter
ja
push
mov
repz
jo
xchg
xor
or
inc
test
test
xchg
cmp
add
or
nop
ds
jl
sbb
(bad)
mov
inc
adc
pop
cmp
test
or
sub
es
je
mov
fcomp
clc
sbb
dec
fsub
sbb
cmp
pop
arpl
call
es
inc
inc
int
(bad)
fcmovbe
pop
or
adc
sbb
stc
jle
push
adc
jmp
dec
pushf
sub
imul
mov
jo
add
sbb
mov
push
rol
aad
(bad)
out
jmp
and
stos
xor
ret
add
xchg
xlat
cs
and
pop
int3
cwde
sub
test
je
movs
je
dec
push
xor
add
jp
shl
aaa
fwait
cmp
cmp
and
pusha
xchg
adc
jnp
add
mov
jmp
sbb
add
cmp
dec
push
retf
popa
shr
jbe
or
add
sar
shl
ret
jbe
add
sub
inc
add
adc
inc
lods
add
pop
push
iret
xchg
dec
mov
jmp
mov
push
inc
push
pop
mov
adc
jo
cmp
jge
sub
nop
mov
inc
jbe
pop
or
sar
(bad)
push
adc
sbb
or
xor
dec
cmp
push
dec
movs
mov
je
adc
mov
jno
or
int
jle
push
mov
add
fs
loop
mov
cmp
jo
inc
(bad)
jg
dec
xchg
adc
jae
push
addps
and
dec
mov
add
mov
jo
or
out
out
movs
push
out
xchg
jge
inc
jge
rol
repz
mov
inc
outs
icebp
jle
ror
loope
cmp
pusha
sti
sub
repnz
sub
or
xor
sbb
add
adc
xor
ror
mov
mov
sar
popa
adc
xor
add
or
xor
in
mov
jmp
inc
push
mov
daa
xchg
pop
or
dec
sar
sbb
fs
dec
fisttp
repnz
xchg
cmp
cli
or
mov
retf
mov
or
or
sbb
ret
lahf
mov
stos
xor
sbb
push
and
inc
inc
movs
loope
mov
(bad)
ffree
cmp
cmp
cmps
fsubr
or
and
(bad)
fst
sbb
out
movs
cmp
rcr
test
movs
in
and
mov
retf
or
cmp
and
fwait
and
leave
add
sbb
std
ret
mov
add
mov
jb
jl
loop
mov
jno
inc
push
std
inc
sti
and
loop
sub
imul
jle
or
out
inc
mov
test
stos
pop
jbe
cmp
add
push
js
pop
cmp
test
std
push
xchg
cmp
or
(bad)
mov
inc
mov
add
cwde
mov
dec
dec
dec
or
adc
popa
xor
sub
or
sbb
test
adc
inc
jmp
dec
mov
dec
sub
adc
jbe
sub
stos
push
js
pop
aas
inc
xor
leave
pop
pop
je
dec
aas
and
jmp
xchg
add
inc
les
adc
cmp
imul
sub
adc
adc
xor
in
xor
or
and
test
or
mov
jmp
sub
inc
sub
pop
stos
clc
adc
adc
or
adc
and
inc
jecxz
adc
mov
jg
jp
pushf
inc
and
retf
adc
pop
cmp
cs
mov
fadd
std
push
cli
jae
jl
inc
mov
sbb
dec
js
add
jmp
lods
sar
hlt
dec
sbb
sbb
mov
imul
jmp
xchg
cdq
inc
popa
jg
lock
cmc
jne
movs
sar
mov
add
mov
mov
call
in
add
cmp
xor
ins
adc
sub
and
lods
shr
adc
das
mov
ror
cs
mov
add
inc
(bad)
adc
cmp
and
dec
push
(bad)
push
or
xor
push
mov
imul
dec
push
mov
(bad)
cdq
add
or
mov
or
test
sub
(bad)
mov
fadd
jg
mov
add
pusha
mov
push
or
adc
sti
arpl
push
add
cmp
push
pop
rcr
stc
xchg
imul
shr
dec
or
cmps
adc
or
fcomp
sbb
fmul
jg
and
aaa
fmul
xchg
dec
enter
inc
mov
rcl
imul
fcomp
loopne
add
xor
pop
lea
sub
push
adc
enter
dec
out
jmp
xor
jle
mov
xchg
in
pop
aaa
adc
fwait
or
sub
clc
sub
xor
add
in
leave
pop
movs
lea
xor
retf
data16
in
jle
clc
adc
xchg
cmp
test
pop
daa
or
mov
push
ror
into
call
inc
mov
dec
push
or
fdivr
outs
pop
push
les
jge
add
sbb
loope
pop
push
fwait
ror
idiv
lea
sti
or
push
aam
pop
mov
jae
mov
or
ss
sar
sub
add
mov
push
call
xor
add
dec
shl
inc
mov
dec
sbb
jge
xor
push
fist
fsub
test
and
les
arpl
xchg
sub
xor
(bad)
push
bound
ret
jo
enter
data16
mov
or
cmp
(bad)
jge
lods
jo
inc
push
add
push
or
adc
retf
mov
xchg
add
mov
inc
or
nop
fdiv
enter
dec
sbb
pop
jo
push
xor
sbb
nop
and
in
pop
jne
lods
mov
cmp
jge
mov
push
jge
mov
add
jno
xchg
fs
sti
inc
loopne
test
pop
add
fistp
or
inc
pop
xchg
push
xor
and
aam
cmps
aam
push
sub
das
pop
or
test
ret
fdivrp
cmps
adc
pop
xor
jne
pop
cmp
in
sub
xchg
jge
retf
aam
mov
push
push
push
or
sbb
enter
out
shl
hlt
xor
mov
pop
cs
rcl
sbb
mov
sbb
cmps
pop
ret
std
mov
and
data16
gs
fcomp
adc
adc
jb
xlat
imul
inc
rol
(bad)
or
cld
xor
mov
cwde
add
push
add
inc
outs
jl
enter
xchg
push
mov
sbb
lods
(bad)
or
in
dec
data16
pop
adc
out
retf
sbb
movs
sbb
or
cdq
mov
into
in
jbe
into
mov
fdiv
adc
cli
add
(bad)
dec
ret
push
xor
jae
push
lock
pop
icebp
repnz
or
out
dec
push
xchg
prefetcht1
push
cmp
jo
xchg
lock
ins
mov
push
xchg
int3
loopne
iret
jp
lahf
ja
jge
add
dec
xchg
test
in
cmp
adc
lods
pop
sub
popa
clc
xchg
shl
mov
inc
lods
in
push
movs
mov
add
movs
lods
and
and
add
mov
xchg
dec
pushf
jb
nop
js
loop
call
jns
inc
mov
push
pop
nop
dec
jnp
adc
enter
dec
fwait
mov
and
pop
mov
test
fld
enter
mov
cmp
cli
sub
jmp
rol
pop
lods
mov
ds
and
push
dec
neg
pop
push
ja
sub
add
sub
and
add
movs
jmp
xor
or
loopne
mov
jbe
(bad)
adc
add
push
push
inc
add
repnz
mov
pop
add
ficomp
sar
or
add
xlat
cmps
cmp
push
(bad)
adc
sti
cmp
sbb
sbb
mov
rcl
mov
jnp
xlat
lods
mov
test
add
cmp
adc
push
adc
cmp
outs
and
ss
loope
popa
hlt
xor
push
jne
mov
cmps
mov
les
sbb
adc
test
mov
inc
in
add
pop
mov
add
movs
lods
js
lahf
mov
rcl
sub
mov
stos
ins
push
jge
fsub
cwde
clc
push
xor
pop
mov
pop
adc
lods
jne
adc
sub
cmp
imul
dec
(bad)
push
push
mov
hlt
push
pop
mov
adc
cwde
push
pushf
dec
jae
clc
pop
push
aam
fcom
fsubr
loopne
adc
dec
pusha
call
or
adc
push
sbb
sar
sar
pop
pop
ja
data16
mov
dec
xchg
adc
shl
nop
jmp
mov
inc
jge
pop
mov
cmp
jo
pop
push
inc
test
xchg
mov
sbb
adc
cli
neg
mov
neg
inc
adc
sbb
push
sar
and
adc
inc
aam
adc
jmp
dec
fistp
popa
mov
ja
sbb
cli
aam
aam
call
popa
add
push
adc
sbb
mov
fld
(bad)
push
sahf
inc
sbb
push
jmp
push
pop
or
and
jmp
or
loope
sub
retf
cmp
mov
push
cmp
mov
inc
xor
mov
(bad)
out
and
cmp
push
lea
push
imul
dec
or
push
mov
test
ins
or
xor
lahf
lods
imul
cmp
and
fwait
call
mov
(bad)
into
mov
adc
rol
pop
js
sbb
adc
cmps
adc
out
jmp
jbe
mov
in
sar
call
cmps
or
xchg
cmp
jge
push
sub
movs
das
jnp
js
ret
inc
sbb
sub
push
push
and
loopne
mov
adc
ficom
pop
mov
or
sub
and
dec
test
out
cdq
push
jbe
jle
ficom
jmp
rol
push
sbb
and
pop
push
or
and
adc
xor
or
sbb
jmp
test
fcom
cmp
dec
and
xchg
adc
push
and
jo
adc
pusha
rcr
mov
retf
mov
jl
aam
mov
dec
inc
cmc
mov
push
mov
cmp
test
or
push
mov
push
add
add
push
cmp
mov
mov
pop
adc
push
dec
rol
(bad)
dec
push
add
inc
sub
cmp
jl
or
mov
and
cwde
pusha
cmps
dec
xor
scas
cmps
sub
mov
lock
adc
xor
loope
xchg
xor
nop
add
ins
out
inc
cld
inc
cmp
sub
xchg
pop
or
jp
cmps
shr
cdq
in
(bad)
bnd
inc
imul
jmp
in
jmp
mov
mov
adc
or
cmp
adc
cmp
imul
jl
jp
cli
dec
adc
stc
add
add
fdivr
cmp
imul
retf
push
adc
mov
inc
ss
rol
in
push
or
sbb
mov
sbb
jmp
pusha
js
out
js
jl
pop
lds
push
call
js
or
or
jne
(bad)
cmp
or
ss
or
jle
mov
mov
mov
lods
mov
lock
mov
dec
and
inc
rol
cmps
imul
xchg
retf
add
add
pop
(bad)
call
arpl
and
jg
dec
enter
pop
out
aam
loopne
jno
push
stc
add
add
call
jg
adc
int3
retf
femms
lea
ds
inc
inc
inc
ror
sar
sbb
adc
push
test
call
lea
sub
add
fidiv
sbb
add
cwde
jno
add
jmp
push
add
mov
sbb
add
hlt
js
fmul
add
out
jo
adc
cdq
iret
fimul
xor
xor
and
inc
add
add
sub
out
mov
dec
scas
sahf
out
or
lods
mov
xor
xchg
arpl
mov
xchg
mov
push
push
push
push
(bad)
sar
push
pop
sbb
ret
mov
nop
sub
or
cmps
clc
test
pop
(bad)
aam
icebp
dec
xchg
cmp
sub
imul
xor
rol
(bad)
pop
add
test
xchg
xchg
pop
pop
push
xchg
mov
sbb
daa
push
and
pop
jecxz
inc
and
pop
or
jb
mov
cmps
push
dec
cmp
movs
fidiv
and
inc
(bad)
push
loopne
sub
push
popa
fisubr
(bad)
jb
cmps
dec
add
dec
addr16
jae
retf
xor
(bad)
pop
(bad)
shl
xchg
(bad)
or
fadd
fiadd
jmp
pop
xchg
call
mov
loope
btc
xchg
and
push
cmps
cdq
mov
ds
cmp
stos
sbb
das
adc
mov
jnp
add
dec
pminsw
xchg
movs
mov
je
or
imul
push
sub
add
adc
and
and
cmps
add
ret
sbb
or
and
mov
imul
clc
sub
mov
pop
sub
inc
arpl
xor
cmps
xchg
inc
xor
and
and
sbb
inc
push
inc
jnp
out
hlt
mov
inc
dec
stc
dec
adc
and
or
ret
cwde
pop
aam
retf
pop
call
mov
push
add
cmp
fcomp
cmp
or
dec
adc
(bad)
pushf
outs
les
xchg
sub
stc
lods
or
adc
sbb
test
movs
cmp
cmp
or
xchg
cld
out
and
mov
fs
push
push
rol
mov
xor
add
pop
pop
ret
popa
push
push
sub
sbb
frstor
jmp
es
mov
cmp
xor
pop
dec
out
nop
cmp
mov
rcl
dec
mov
xor
(bad)
call
add
adc
mov
jg
stos
push
pop
addr16
pop
stc
fwait
pusha
int3
inc
jg
cmp
mov
inc
mov
mov
xchg
or
ins
enter
fild
mov
push
push
mov
in
in
mov
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
ror
add
adc
in
add
into
add
xchg
dec
dec
add
inc
sbb
sbb
lock
movs
jbe
ret
xor
cmp
(bad)
push
cmp
pop
jle
cmp
adc
fadd
not
fs
imul
or
mov
xchg
sbb
xor
add
imul
addr16
dec
fist
push
jp
sub
div
loopne
test
add
iret
push
icebp
bound
scas
push
and
cwde
mov
mov
popa
xchg
cmp
jg
mov
js
cmp
dec
out
mov
push
frstor
fs
inc
jge
xor
lock
stos
push
push
xor
sub
cmps
mov
fdivr
push
jge
or
out
pop
mov
mov
pop
sbb
cwde
inc
or
mov
add
mov
dec
xor
jmp
mov
leave
jge
lds
pop
(bad)
mov
jae
sub
cs
addr16
cmp
sub
dec
test
dec
inc
(bad)
sub
mov
pusha
cmc
(bad)
dec
and
adc
jns
jno
adc
adc
jns
mov
adc
les
iret
aam
rcr
or
xlat
sub
je
mov
sar
pushf
sar
(bad)
cmps
div
or
jne
ret
and
les
dec
stos
cdq
stos
mov
sbb
inc
mov
fdiv
je
sti
cmc
xchg
jg
jns
mov
jne
retf
xchg
cmp
enter
(bad)
sbb
mov
data16
test
(bad)
cli
jae
test
retf
mov
scas
inc
or
(bad)
or
cmps
add
add
mov
mov
or
icebp
shr
jmp
or
dec
or
push
or
add
xor
fdiv
rcl
stos
push
and
push
xchg
out
cmp
and
neg
sbb
(bad)
inc
dec
pop
mov
test
or
or
fcomp
mov
addr16
jmp
mov
lods
loope
xchg
fidiv
sbb
add
mov
sub
loopne
sub
cmp
pop
retf
jae
add
or
mov
shl
and
add
imul
jmp
sahf
push
adc
add
rol
cs
or
pop
cmp
clc
ds
inc
mov
leave
std
inc
mov
mov
cmps
adc
sub
sar
inc
fadd
add
or
xor
sub
dec
imul
call
and
lock
xor
movs
add
sbb
and
cdq
xchg
adc
dec
lahf
cmp
shl
imul
lds
xlat
adc
pop
ret
inc
dec
sbb
inc
call
clc
ret
add
retf
stos
push
(bad)
or
sti
jmp
in
jae
cmp
sbb
jle
sbb
xchg
dec
jmp
cmp
or
xchg
xor
and
sub
pop
or
sti
ds
add
popf
shr
jmp
mov
push
dec
sti
loopne
test
mov
ins
dec
pop
jmp
movs
in
sbb
xchg
cmp
sub
sub
push
mov
pop
push
dec
mov
xor
cs
mov
shr
or
sahf
in
dec
push
out
jge
imul
pop
inc
mov
jmp
inc
inc
mov
arpl
repnz
push
dec
pusha
mov
and
mov
lds
push
push
adc
js
scas
retf
and
push
das
sysenter
add
add
and
dec
push
cmc
ret
or
mov
cmp
xor
push
dec
dec
cld
dec
xor
sbb
xchg
loope
jbe
push
(bad)
xchg
xchg
xchg
mov
out
jns
movsx
test
dec
(bad)
mov
xchg
mov
mov
daa
sub
mov
xor
es
xchg
jmp
in
xor
adc
ret
fstp
pop
push
cmc
ret
dec
lock
pop
loop
sub
jp
jecxz
js
sbb
mov
test
fs
cli
ss
xchg
add
call
into
sub
sub
or
test
jl
mov
push
pop
pop
push
rol
dec
daa
fs
pop
or
ds
nop
mov
mov
in
dec
push
or
fsub
call
test
rol
iret
or
xchg
imul
dec
sbb
sbb
adc
dec
test
aaa
sbb
test
or
sar
shr
ret
shl
jns
ins
ins
arpl
and
xor
pushf
stos
lea
inc
in
imul
xor
push
mov
xchg
or
adc
add
inc
stos
shr
je
adc
inc
and
dec
pushf
cmp
push
imul
lea
and
adc
dec
push
push
xchg
pop
mov
or
and
mov
mov
xor
xor
and
jne
or
cmp
adc
movs
cmp
dec
add
push
push
pop
push
mov
and
nop
cmps
push
mov
inc
sbb
(bad)
das
stc
sub
sbb
sub
add
test
push
add
sub
(bad)
arpl
sub
mov
je
add
bound
push
cmp
leave
inc
icebp
sti
lock
inc
jo
frstor
jp
addr16
xor
arpl
sub
or
push
mov
jns
xor
into
and
push
dec
push
and
mov
inc
shl
cwde
cmp
xor
add
ja
and
(bad)
adc
sbb
fwait
mov
vpmovuswb
push
push
pop
test
mov
or
call
loopne
cmp
pusha
in
and
jl
or
lea
rcr
fidiv
or
inc
fdivr
cmp
jne
ss
mov
sub
dec
add
or
sbb
pop
jo
aam
adc
push
sbb
pop
mov
call
add
jno
add
mov
mov
mov
or
add
push
mov
sbb
or
xchg
inc
pop
ret
stos
xchg
cmp
lods
jbe
push
jb
sub
push
lea
popf
pop
lahf
test
bound
add
push
sub
or
sub
pusha
jb
lea
nop
movs
mov
lds
or
sub
pop
shl
inc
retf
adc
push
out
mov
sbb
push
adc
adc
stos
mov
push
pop
xchg
loope
xchg
jbe
sub
mov
xor
sub
fs
add
adc
sbb
xchg
fwait
aas
sbb
add
and
sahf
shl
(bad)
movs
cmc
xchg
test
repnz
jae
ror
mov
je
rcr
mov
pop
sti
push
shl
es
daa
cmp
repnz
inc
push
dec
rcr
rcr
and
cmp
inc
jae
jle
add
cmc
movs
popf
and
cld
jns
jnp
pop
cmc
test
sub
inc
xchg
aaa
je
pushf
and
cmp
adc
sbb
jne
adc
js
pop
hlt
cmp
or
cs
xchg
das
in
push
popf
test
xchg
loop
dec
xchg
xchg
arpl
xor
shr
xchg
sar
pop
call
sub
(bad)
inc
dec
pop
jno
xchg
push
dec
pop
imul
in
and
je
xor
or
lods
jbe
aaa
mov
dec
je
add
jmp
cmp
(bad)
ss
inc
and
add
push
jne
dec
sbb
jmp
pop
pop
sbb
xor
(bad)
mov
shl
js
jp
daa
mov
ror
sub
mov
push
int
sbb
shr
stos
inc
shr
push
cld
fadd
mov
fwait
sbb
dec
jl
add
dec
imul
dec
popf
cmp
xchg
push
movsx
inc
fiadd
adc
and
sti
sbb
outs
and
mov
jp
lods
std
shl
xlat
jmp
cmp
ret
std
or
lea
mov
cmp
inc
shr
mov
sub
retf
fmul
add
test
or
sbb
fistp
addr16
jl
xchg
sub
mov
mov
and
lods
xchg
mov
cmp
nop
dec
sub
push
repz
hlt
and
lea
outs
push
mov
dec
retf
mov
loopne
(bad)
pop
cmc
pop
xor
dec
jmp
sbb
xor
loope
sub
mov
mov
mov
lock
rcl
jl
pop
xchg
dec
jae
mov
pop
cmps
inc
add
jbe
push
icebp
push
mov
mov
mov
or
in
test
cmp
cmp
push
xchg
loop
cld
mov
inc
or
push
mov
rol
hlt
xor
sbb
mov
fidiv
add
retf
sbb
jmp
(bad)
jae
pop
pop
sub
adc
push
or
jbe
sbb
in
xlat
enter
adc
push
xchg
lea
(bad)
fxch
sbb
sub
mov
jmp
mov
cmps
or
aam
outs
pop
arpl
push
inc
aaa
call
aam
or
inc
clc
adc
or
(bad)
out
sbb
mov
(bad)
jne
test
stos
inc
in
pop
inc
ret
lea
pop
and
mov
or
jp
inc
clc
jbe
mov
fild
add
inc
dec
and
sub
cmp
add
mov
je
push
jae
nop
movs
fs
cmp
mov
add
push
arpl
mov
mov
adc
(bad)
sub
pop
xor
jne
mov
jno
cmp
inc
pusha
mov
and
repz
cli
cmp
jbe
mov
inc
add
lods
cmps
sbb
mov
add
enter
and
or
mov
sahf
mov
rcr
inc
rol
mov
add
or
inc
jo
jb
or
mov
fcom
inc
mov
mov
lods
xchg
test
dec
(bad)
rol
push
hlt
lock
hlt
aam
or
hlt
jg
or
cmps
dec
ja
or
inc
pop
fidivr
add
retf
and
sub
xor
shr
out
jno
fcmovnu
jg
sub
jbe
dec
cmp
mov
push
add
imul
gs
(bad)
mov
jns
inc
xor
jnp
xchg
imul
loop
aas
aam
inc
lods
mov
fadd
cmp
sub
mov
aam
xchg
ds
cmp
inc
and
(bad)
jmp
sbb
fisttp
adc
jmp
fcom
scas
mov
cwde
lea
adc
fldenv
push
sub
cmp
(bad)
xor
mov
in
jbe
(bad)
mov
mov
inc
sbb
into
call
cmps
call
inc
lea
(bad)
sub
xchg
jbe
jo
ja
pop
in
jp
ds
push
inc
fmul
jnp
lods
outs
ja
push
dec
jecxz
cld
leave
mov
jge
shl
and
sub
dec
and
mov
(bad)
cmp
call
adc
mov
dec
cli
(bad)
xchg
cdq
mov
ret
xor
adc
or
pop
or
xchg
hlt
es
lea
sar
inc
add
add
std
mov
adc
(bad)
std
lea
mov
mov
or
repnz
and
jmp
or
inc
adc
xchg
add
adc
call
enter
push
adc
inc
shr
dec
mov
clc
add
push
jmp
jp
sbb
cmp
mov
sub
aad
push
inc
sub
in
aaa
movs
and
add
pop
and
xchg
out
cdq
pop
push
push
xor
mov
xchg
idiv
push
inc
push
jo
add
ds
sbb
aam
jae
jge
inc
outs
push
jle
jmp
out
add
mov
adc
jbe
sahf
stc
and
js
rcr
cmp
jmp
or
cdq
adc
test
add
sbb
sub
pop
jecxz
movs
pop
ret
dec
pusha
loopne
xchg
test
movs
mov
ret
(bad)
push
mov
or
lods
mov
lahf
mov
div
xor
push
clc
daa
xor
add
push
push
cmp
fild
popf
jne
or
jae
sar
push
pop
mov
cmp
pusha
push
mov
rcl
xchg
outs
ja
data16
or
dec
and
inc
pusha
xor
out
mov
adc
or
fadd
push
push
mov
cdq
sahf
cwde
xchg
cld
fild
fmul
adc
inc
fcom
push
hlt
pusha
shl
imul
clc
dec
imul
and
lock
lock
pushf
dec
xor
aam
adc
call
aam
adc
aam
adc
and
in
xor
sbb
pop
push
in
cmps
sbb
in
(bad)
mov
rcl
mov
loopne
mov
shl
mov
inc
or
mov
ins
imul
js
fld
gs
sbb
in
jo
xor
enter
int3
add
aam
in
in
call
out
in
cld
sbb
inc
jae
ret
rcr
adc
call
inc
adc
jo
fs
lods
pop
sub
push
add
cmp
pusha
push
jp
jo
adc
inc
add
xchg
sub
(bad)
js
mov
es
pop
or
rcr
pop
sbb
test
fadd
adc
arpl
rcr
adc
adc
enter
adc
arpl
inc
stos
xchg
xchg
mov
fs
sub
lods
and
cs
pop
mov
or
mov
mov
sbb
in
add
sub
adc
aaa
cmp
sub
mov
mov
mov
and
inc
add
ror
jmp
call
inc
repz
aas
pop
sub
aam
mov
jne
daa
rol
aad
pop
sbb
sbb
jne
dec
push
add
add
in
sahf
out
pop
gs
pop
xor
imul
dec
rcl
cmp
scas
lods
mov
scas
or
rol
pusha
mov
scas
sub
imul
mov
outs
pop
push
repnz
sahf
stos
sbb
sbb
inc
and
rcr
call
hlt
xchg
retf
cmps
mov
sahf
add
sub
ss
imul
aam
imul
add
stos
in
push
ret
sbb
xor
sbb
dec
jmp
mov
fwait
popf
cmps
sbb
xor
mov
movs
out
and
data16
lahf
jns
fdiv
sub
jl
jbe
loopne
jle
loopne
jge
repnz
ror
push
es
fimul
lods
or
arpl
sti
shl
sub
or
(bad)
xchg
call
sti
rol
xchg
mov
out
fcmovu
fadd
add
xor
add
sub
iret
fisttp
pop
sbb
mov
mov
push
sub
or
pop
imul
fisub
add
and
push
sub
ja
inc
loopne
mov
sub
sti
dec
and
(bad)
(bad)
push
lock
adc
les
jl
ficom
add
lods
and
aaa
push
scas
dec
mov
out
inc
inc
stos
xor
and
push
pop
js
xlat
rol
mov
and
call
dec
add
add
push
pop
clc
lock
xchg
pop
fwait
sbb
call
add
xchg
sbb
adc
jns
gs
dec
inc
fldenv
dec
add
dec
sbb
test
in
add
je
adc
inc
mov
dec
and
sbb
cs
sbb
movs
mov
pop
in
fisubr
add
enter
sub
push
outs
sub
add
xchg
ss
mov
movs
jmp
sub
out
fdiv
xlat
loop
jmp
pop
jmp
ret
pop
fchs
les
or
cmp
cmp
fdiv
fmul
mov
jmp
and
xor
xor
xor
pusha
and
xor
mov
mov
fidiv
and
dec
nop
std
push
aaa
(bad)
cmp
push
push
into
inc
and
stos
pop
or
mov
in
icebp
shl
out
dec
cmp
add
push
lea
add
xchg
fidivr
xor
shl
neg
imul
sub
pusha
cmp
push
jo
sahf
out
add
mov
lock
sbb
adc
mov
inc
and
test
dec
add
add
add
in
jns
cmp
inc
call
cmp
cmp
jb
neg
mov
jmp
and
jne
ret
dec
push
in
int
xor
mov
xor
cdq
add
push
ja
cld
add
repnz
aam
lock
or
xor
sub
sti
dec
pop
jo
clc
add
add
and
dec
and
inc
add
in
mov
imul
inc
xchg
push
in
jbe
jb
in
xor
inc
aas
shl
repnz
dec
test
fsubp
dec
sti
ja
fimul
mov
add
add
jmp
mov
arpl
retf
retf
retf
add
add
cwde
sti
neg
fild
(bad)
fucomip
push
movs
mov
and
mov
push
ss
aam
push
or
sub
add
cmps
cmp
je
add
out
pop
fldcw
das
pop
and
pop
push
mov
stos
sub
retf
pop
sti
adc
sub
das
mov
mov
sbb
mov
push
test
push
xor
aaa
icebp
dec
scas
inc
push
dec
add
loop
push
ja
cmp
dec
add
bound
pop
adc
imul
mov
or
xchg
sub
push
or
push
push
das
lods
popa
jmp
jp
xor
dec
cli
push
cli
push
xor
add
mov
mov
jns
pop
adc
sub
or
sbb
pop
push
sbb
mov
inc
hlt
push
push
sbb
fist
xlat
pop
pushf
pusha
sub
inc
sbb
jo
scas
xor
mov
repz
call
inc
sub
and
mov
repz
mov
pop
pusha
and
xlat
inc
and
adc
inc
add
cmp
cmp
add
add
sub
push
sub
push
and
jb
clc
push
cmps
adc
xlat
mov
dec
and
in
xchg
dec
xchg
mov
mov
mov
sbb
xor
lods
loope
(bad)
outs
mov
add
sbb
pop
add
sbb
lock
imul
shl
inc
sbb
or
pop
add
(bad)
or
shl
adc
xchg
cli
or
inc
adc
dec
jnp
jl
test
push
mov
or
mov
bound
and
or
xchg
cmp
jb
mov
push
or
or
add
sbb
or
or
add
push
mov
add
dec
js
or
and
xor
mov
in
add
in
xchg
sub
xchg
jp
nop
pop
xchg
sbb
popa
ror
jo
out
mov
sbb
fidiv
std
data16
sbb
dec
jb
xchg
cmc
rol
sbb
or
sbb
jle
mov
xchg
fcom
or
test
mov
gs
mov
cs
inc
js
pop
nop
inc
add
add
adc
push
push
imul
popa
mov
add
pushf
mov
mov
mov
cdq
sbb
in
(bad)
arpl
ins
xchg
mov
mov
sub
inc
repnz
or
sbb
xor
cmp
mov
cwde
movs
jbe
or
enter
push
jg
and
cmp
jmp
(bad)
nop
or
push
inc
sub
data16
push
mov
call
aaa
xchg
(bad)
retf
dec
inc
adc
cmp
cmp
mov
movs
jnp
pop
push
cli
in
int3
les
jne
pop
mov
pop
pop
jp
push
ret
jmp
mov
mov
or
adc
push
lea
dec
adc
leave
mov
in
ror
jg
clc
or
icebp
call
xor
mov
outs
pop
cmp
test
add
pop
add
imul
aaa
into
inc
pop
jl
stos
adc
push
add
add
pop
add
pop
inc
rcl
mov
movs
push
scas
pop
xor
or
push
mov
or
or
xor
sti
or
xor
cmp
(bad)
adc
fmul
add
add
add
xor
and
push
je
inc
push
adc
cmp
adc
leave
add
xchg
dec
sbb
pusha
test
popa
sub
inc
and
and
(bad)
nop
nop
dec
in
ret
xchg
adc
nop
test
add
test
mov
mov
adc
pop
sbb
add
and
dec
into
mov
mov
cli
and
rol
mov
dec
nop
ret
jae
and
or
dec
pop
imul
adc
cmp
push
add
mov
ret
fsubr
inc
ja
shl
pushf
in
sbb
(bad)
call
ins
das
test
push
stc
dec
es
pop
pop
mov
pop
cmp
clc
popa
dec
fdivr
ja
push
inc
sub
xor
jae
cmps
adc
pop
push
sar
and
pusha
inc
jns
pop
fisttp
push
sbb
lds
ds
inc
mov
mov
push
cmp
bound
jle
bound
lock
mov
cmp
sbb
pop
call
sbb
sbb
inc
push
and
sbb
(bad)
push
sbb
push
pop
and
mov
rol
in
and
and
fs
inc
and
inc
push
sub
jg
push
pop
clc
mov
mov
lock
adc
fs
xor
jge
jno
call
mov
mov
inc
inc
push
(bad)
dec
xchg
shr
jne
leave
xor
or
or
jl
in
out
add
pop
xlat
and
xlat
jl
iret
push
mov
or
sub
loope
add
jle
ret
dec
add
inc
pop
inc
sbb
loope
jmp
ret
(bad)
(bad)
out
add
cmovno
loop
jo
hlt
inc
or
cmp
call
jno
pop
js
adc
jo
popa
outs
into
push
scas
fisubr
popf
pusha
popa
dec
push
xor
inc
data16
call
(bad)
add
push
inc
xor
push
cmp
push
xor
mov
pushf
cmps
lds
sti
jmp
cmp
in
popf
and
push
push
in
loopne
test
cmp
push
icebp
or
loopne
add
jo
ror
dec
dec
push
inc
mov
les
and
cmps
pusha
outs
fadd
sub
push
adc
xor
or
pop
xchg
adc
push
ja
call
push
push
pop
pop
imul
adc
mov
dec
add
or
adc
sbb
cmps
jne
ror
aaa
or
adc
jp
add
ret
xor
pop
std
vpmuludq
xchg
jl
test
push
dec
ss
outs
add
inc
cmp
and
adc
mov
or
xchg
xor
loope
(bad)
iret
ins
push
add
adc
sar
xor
push
xor
and
adc
rol
mov
bound
arpl
bound
add
inc
mov
push
add
mov
mov
mov
sbb
popa
xchg
ja
add
or
jge
add
or
jb
test
jnp
iret
movs
mov
add
dec
add
ds
sub
shl
mov
bnd
cli
push
push
mov
dec
pop
mov
jle
cmp
or
data16
and
out
cmps
enter
or
loope
enter
adc
jmp
pusha
movs
push
add
ja
xchg
sub
push
sbb
aam
mov
call
inc
xchg
fcom
scas
inc
out
iret
in
ret
loopne
fidivr
xchg
cs
jo
push
fwait
xchg
jb
pop
push
or
inc
or
aas
and
or
dec
fs
inc
mov
imul
sub
inc
cmp
add
jle
dec
mov
pop
arpl
and
sub
push
loop
push
stos
add
fbld
mov
add
data16
xor
mov
je
cmp
adc
cmps
dec
dec
jnp
rcl
ins
jmp
xor
xor
test
test
push
pop
xlat
leave
in
fld
pop
cmp
sbb
ss
xor
imul
dec
cmp
ror
test
cmp
jp
adc
add
add
add
fdivr
pop
(bad)
jne
mov
mov
fwait
(bad)
cdq
cmp
ficom
or
or
dec
loope
or
push
jns
xchg
cld
clc
hlt
enter
mov
dec
aam
xchg
cmc
mov
sbb
push
sub
dec
push
sbb
pop
shr
jecxz
dec
xchg
js
inc
jne
jp
pop
je
mov
mov
mov
fdiv
inc
loopne
mov
dec
xor
or
leave
xchg
mov
mov
push
ror
inc
lock
jae
pop
adc
js
jle
mov
mov
shr
xchg
sahf
lods
mov
sub
xor
je
jmp
inc
push
lea
add
pop
adc
rcl
das
(bad)
adc
jmp
cs
inc
add
adc
aaa
fcomp
dec
movs
add
mov
enter
in
cmp
test
movs
pop
mov
inc
loopne
outs
push
xchg
das
xchg
mov
xor
inc
xor
pop
idiv
ja
dec
bound
dec
(bad)
add
push
gs
jbe
and
rol
mov
jne
pop
mov
cmp
pusha
inc
clc
cmc
and
nop
and
ins
cmp
inc
or
inc
std
or
dec
add
aad
adc
test
(bad)
or
mov
jns
(bad)
cs
retf
cmp
je
adc
pop
sbb
aas
nop
cmc
xchg
add
test
lods
mov
sub
int3
in
jmp
arpl
aas
pop
xor
mov
adc
out
pop
ficomp
popf
mov
adc
pop
add
mov
gs
fldpi
or
fild
mov
inc
fwait
data16
adc
inc
scas
mov
test
dec
cmp
xchg
xchg
or
cmp
bound
int
test
js
add
rcr
stos
(bad)
clc
or
push
mov
or
ret
or
sub
add
int3
jmp
mov
add
leave
inc
jno
mov
arpl
les
mov
pop
(bad)
push
adc
inc
xor
sbb
popa
push
dec
not
inc
xchg
and
adc
inc
adc
mov
sub
sub
sub
cs
pop
in
dec
inc
push
ret
sub
push
and
xor
popa
xchg
pop
test
xchg
test
add
dec
adc
sbb
mov
jp
sub
sub
cmp
sti
cli
test
inc
or
add
jne
dec
je
jge
cmp
dec
pop
lds
pop
xchg
and
pop
sub
loop
inc
je
ins
cmps
(bad)
cmc
push
jo
push
call
jnp
test
mov
ror
dec
xor
push
(bad)
sbb
sub
ds
or
retf
mov
pop
loop
ret
xchg
repz
arpl
jno
or
(bad)
imul
repz
jge
dec
jge
sbb
jns
addr16
int3
sar
adc
mov
cmps
xchg
add
jb
jg
(bad)
stos
test
je
mov
push
add
inc
push
cmp
inc
or
in
jl
sub
push
(bad)
mov
das
push
cmp
fiadd
add
inc
faddp
(bad)
imul
mov
push
push
jno
xchg
jbe
icebp
in
fist
xor
pop
fiadd
out
mov
jne
pop
mov
sahf
int3
lods
push
fsub
lock
inc
jnp
adc
pop
or
xchg
add
xchg
add
ja
xchg
lahf
es
xchg
push
jle
push
das
bound
mov
xlat
sahf
lds
sub
imul
mov
mov
cmp
cmp
mov
cmp
retf
clc
add
andnps
(bad)
jle
dec
mov
jo
xor
push
mov
adc
sti
je
in
fadd
je
and
xor
out
mov
sbb
sbb
nop
sub
retf
pop
or
sub
sbb
xor
xor
or
mov
jg
xadd
sbb
in
push
dec
jle
adc
mov
mov
ins
stc
mov
ss
test
sub
imul
ss
adc
adc
pop
or
and
mov
outs
ror
cmp
inc
sahf
mov
jmp
jns
jp
or
xor
pop
or
push
and
mov
sub
jle
mov
outs
fidivr
push
int
addr16
fidiv
sub
clc
adc
and
lds
inc
sbb
and
mov
je
add
cs
adc
retf
das
shr
(bad)
mov
adc
js
cdq
mov
add
seto
jo
xor
or
ins
cmp
sbb
cmps
inc
add
jg
psrlq
adc
mov
pop
or
inc
and
push
outs
or
ror
pop
inc
sub
push
outs
ja
fist
jl
dec
and
pop
inc
icebp
bswap
or
dec
cwde
cmp
jbe
sub
cmp
outs
or
mov
into
xor
or
sub
push
jo
pop
imul
pop
mov
div
fisttp
and
pop
je
inc
loop
jno
add
or
push
push
inc
dec
jl
clc
cld
test
dec
out
adc
xchg
mov
jno
jo
mov
xchg
lea
xor
adc
dec
in
mov
mov
shl
call
mov
(bad)
fild
test
jmp
push
call
pusha
or
inc
cld
mov
add
adc
icebp
add
mov
aam
push
idiv
jle
xlat
xchg
sar
dec
js
test
pop
movs
ret
js
jecxz
xchg
test
pusha
fdivr
mov
sbb
inc
pop
adc
xor
ins
daa
mov
test
mov
icebp
xchg
xor
adc
add
xor
and
jl
add
loop
int
jle
mov
test
mov
out
retf
cs
call
mov
dec
data16
dec
cmp
xor
movs
pop
adc
cmp
movs
mov
and
and
or
call
pop
sbb
pop
fnstcw
es
add
fwait
adc
mov
pop
sbb
add
inc
arpl
pop
sbb
xchg
mov
inc
ret
aas
mov
xchg
inc
or
adc
push
dec
add
xchg
adc
jnp
mov
add
or
popf
adc
mov
cmp
pop
jo
lea
jb
js
pop
add
mov
mov
ficomp
ins
cmp
and
xor
xor
nop
jbe
cmp
add
or
fisttp
add
push
stos
inc
mov
clc
out
stc
inc
ret
loop
ret
jl
mov
adc
push
mov
test
dec
and
add
mov
aad
lods
pusha
inc
shl
inc
movs
fs
inc
jmp
dec
fs
mov
xchg
leave
mov
jo
mov
adc
mov
rcr
push
inc
test
dec
adc
push
xor
and
xor
push
popa
dec
mov
inc
mov
add
jo
repz
cmp
adc
sti
adc
addr16
inc
pop
push
sbb
or
push
xchg
test
mov
ins
jmp
(bad)
ror
call
inc
sbb
push
sbb
shl
loop
(bad)
lds
sbb
pop
cmps
fcom
add
pop
cmp
and
jg
dec
add
ds
out
or
mov
or
arpl
adc
leave
pop
inc
test
leave
rcr
xchg
and
das
mov
push
mov
jae
pop
add
aas
xchg
mov
xor
add
mov
ds
xor
fimul
rol
setbe
paddq
sub
dec
(bad)
cmp
out
ins
mov
push
arpl
out
sahf
outs
jns
(bad)
sti
add
gs
adc
add
mov
add
or
pop
xor
push
ja
jmp
adc
xchg
sub
or
and
add
ficom
hlt
in
cwde
mov
shr
xchg
inc
aam
xchg
es
fist
pushf
loopne
imul
mov
pop
or
jmp
dec
or
or
(bad)
in
iret
jae
ins
jb
push
cwde
xchg
push
dec
loopne
nop
je
scas
jb
mov
dec
cmp
cmps
inc
and
pop
sbb
push
mov
add
adc
in
pusha
ret
sbb
and
and
sbb
dec
add
add
pusha
inc
std
dec
mov
dec
dec
movs
pop
xchg
pushf
dec
and
addr16
add
and
push
popa
pusha
jge
or
xor
call
xor
adc
sub
add
jbe
sub
add
into
mov
in
mov
or
inc
cmp
inc
sub
pop
les
jno
xchg
fadd
adc
and
xchg
jo
and
mov
fld
cmp
jle
addr16
pop
add
inc
xchg
jge
inc
ins
jge
add
movs
bound
jg
mov
(bad)
jbe
jg
mov
loope
lea
or
push
jo
icebp
jmp
dec
sbb
add
lods
add
push
aam
mov
je
mov
inc
mov
jle
jle
aam
test
xchg
push
mov
add
inc
fneni(8087
xchg
cmp
sbb
cmp
add
loopne
pop
in
or
mov
mov
sbb
inc
mov
or
mov
xchg
push
cmp
or
add
addr16
scas
mov
inc
test
mov
sahf
or
cmp
cmp
jmp
movs
add
cwde
inc
leave
out
gs
mov
rcl
movs
enter
lods
push
dec
sub
daa
sub
or
aas
add
and
add
jae
mov
adc
fbstp
lock
mov
push
xor
rcr
shr
push
sub
mov
mov
dec
mov
mov
pop
sbb
jnp
sub
and
dec
fsub
push
xor
xchg
jecxz
sub
mov
push
push
jl
and
adc
xchg
pop
sbb
stc
fsub
jb
pushf
or
mov
fsub
inc
mul
xchg
pop
cmp
mov
data16
push
mov
lods
xlat
das
or
and
push
and
and
inc
mov
cmp
fdivr
dec
mov
cli
add
es
pop
ins
adc
mov
mov
mov
out
pop
jmp
add
mov
cmp
je
pop
dec
sub
adc
xor
xchg
xchg
inc
add
push
xchg
adc
sub
or
xchg
inc
mov
xchg
cli
lods
movs
cmc
mov
xchg
adc
xor
fisttp
xor
or
fidiv
xor
shr
jecxz
data16
movs
xor
clc
jecxz
push
xchg
or
jns
addr16
xor
pop
and
sub
icebp
imul
cmp
adc
loop
mov
scas
jge
adc
add
inc
cmp
popa
jb
cmc
mov
mov
or
(bad)
jne
mov
fdiv
int
adc
pop
or
sbb
pop
and
fnstsw
into
sub
push
dec
adc
jmp
xchg
and
inc
adc
inc
or
in
pop
xor
push
loope
inc
add
add
add
mov
dec
or
xor
or
xor
add
mov
mov
out
jne
pop
mov
or
adc
enter
dec
xor
and
jbe
inc
or
sbb
push
xor
or
xchg
add
les
leave
mov
movs
cld
pop
test
outs
push
cli
call
call
ins
lock
mov
push
sbb
mov
or
mov
jae
or
cmp
fs
dec
sbb
cmps
hlt
add
xchg
mov
outs
ins
xchg
mov
mov
push
cmp
ja
jmp
mov
rol
pop
inc
xor
inc
sbb
mov
sub
retf
leave
mov
sar
sub
xchg
sbb
or
add
cmp
cmp
aam
in
push
sahf
imul
pop
jmp
sbb
push
add
dec
test
sbb
dec
pusha
jns
sbb
(bad)
cmp
imul
adc
or
pop
enter
adc
push
les
in
mov
rol
enter
fsubr
push
pop
cld
lea
(bad)
mov
push
xchg
inc
ss
cli
add
push
inc
jae
mov
adc
pop
dec
or
jo
jg
jg
mov
sbb
cld
and
shl
pop
push
xchg
les
popa
data16
mov
pop
push
jle
or
jne
xor
jb
fs
jmp
fidiv
pop
adc
out
push
and
mov
cmp
into
jae
xchg
fcomp
jbe
pop
js
jmp
pop
adc
or
cmp
dec
push
inc
ja
fimul
and
retf
and
out
icebp
fcmovnbe
in
lea
aaa
inc
push
stos
arpl
retf
sbb
in
sbb
adc
jp
inc
lods
jecxz
xchg
jne
push
aam
enter
movs
inc
pop
dec
mov
(bad)
jl
or
pop
nop
mov
sbb
test
xchg
push
dec
pop
das
loopne
mov
push
jnp
inc
pop
dec
das
mov
into
jbe
adc
or
mov
imul
and
out
push
dec
scas
pop
jb
fs
outs
ficomp
xchg
bound
repz
inc
mov
mov
pusha
adc
and
mov
adc
inc
pop
mov
or
jns
sahf
pusha
leave
or
or
ret
jg
push
dec
mov
push
pop
fbstp
cmp
ret
int3
mov
xchg
mov
push
fcom
ficom
ins
xlat
dec
and
xchg
dec
(bad)
enter
stos
jmp
lods
in
add
inc
imul
jle
sbb
jl
sbb
jle
jge
fimul
in
and
lds
jl
sbb
popa
clc
push
mov
jmp
aad
ret
mov
ror
nop
jo
movs
sbb
push
push
loope
xor
cmps
addr16
or
ins
loope
int
dec
ret
mov
je
ret
pop
mov
daa
adc
push
mov
aaa
rcl
push
imul
pop
add
and
sar
push
adc
adc
and
or
mov
push
jae
clc
mov
rol
ja
cwde
test
retf
pop
push
push
cmp
adc
add
mov
test
dec
push
or
es
push
sbb
test
bound
jne
out
mov
and
and
cmps
mov
in
mov
and
out
not
aaa
sbb
push
sbb
or
pop
daa
pusha
pushf
adc
inc
sbb
mov
sbb
and
icebp
dec
aam
and
in
jo
inc
dec
(bad)
sub
(bad)
add
and
retf
dec
xchg
and
and
ret
in
xchg
jno
and
and
or
xor
pop
xor
pop
or
mov
or
push
arpl
dec
(bad)
mov
cmp
mov
mov
pop
cmc
pop
or
xchg
jg
imul
adc
(bad)
xor
xor
mov
in
retf
or
aas
adc
aas
call
xchg
cmps
mov
pop
or
mov
adc
push
or
jmp
add
sbb
aam
rol
mov
les
adc
out
sbb
mov
dec
or
mov
dec
je
lahf
jns
pop
xchg
movs
pop
or
push
mov
div
xor
dec
stc
cmps
fwait
gs
and
xor
(bad)
cmp
loopne
mov
ins
ret
cmp
jg
cmc
pusha
rol
cs
and
lods
aaa
adc
mov
scas
push
xchg
ror
in
enter
aaa
dec
mov
or
jl
xchg
aad
push
and
pop
sbb
sar
fistp
sbb
dec
es
pop
adc
pop
or
sub
inc
mov
rcr
test
add
push
adc
ins
sbb
(bad)
sbb
xlat
mov
dec
add
fild
sbb
jge
(bad)
lea
push
jg
push
sbb
and
cmp
sti
add
loopne
cli
loop
je
adc
mov
mov
jle
jno
loope
les
push
ret
sbb
nop
sbb
adc
jne
mov
inc
stos
loopne
repz
cmp
xchg
int
pushf
and
or
inc
xor
xor
enter
push
and
fild
adc
sub
inc
mov
stc
cmp
shr
pop
mov
or
and
cmp
inc
(bad)
fdiv
arpl
into
loopne
push
xor
pop
xchg
test
retf
js
ins
lods
lea
hlt
jns
and
lods
mov
loop
sbb
inc
adc
out
(bad)
fnstsw
dec
jp
jl
add
shl
add
mov
add
pop
enter
jl
dec
push
xor
lock
out
jecxz
call
sbb
movs
add
ret
or
jmp
cmp
ins
stos
lods
outs
dec
and
adc
or
lea
xor
inc
dec
movs
pop
clc
push
xchg
cmp
addr16
add
in
and
int3
sbb
push
icebp
test
fistp
cmps
add
mov
test
add
mov
test
inc
cs
mov
add
sbb
aas
push
jae
adc
lods
add
jmp
xchg
pop
sbb
push
cmp
mov
add
cwde
adc
(bad)
out
adc
or
adc
es
and
or
push
sbb
or
push
push
push
add
enter
mov
sub
mov
or
cmp
xchg
xor
inc
mov
adc
dec
jbe
pop
push
mov
jno
mov
(bad)
push
push
stc
test
pusha
ret
add
jmp
fs
jl
jo
into
push
mov
push
dec
dec
pop
and
mov
in
xchg
mov
hlt
adc
adc
mov
lahf
or
in
in
sbb
test
mov
popf
pop
test
outs
sbb
inc
adc
ror
add
sbb
stc
add
or
dec
and
stc
dec
sbb
dec
sbb
sahf
xlat
sbb
sub
cmp
(bad)
push
ret
pop
clc
ror
mov
sub
jl
push
cmp
and
inc
sub
sub
aam
cmp
sbb
mov
sbb
and
mov
lahf
and
add
mov
or
cmp
cwde
mov
mov
aaa
(bad)
mov
pop
pop
fwait
mov
clc
test
(bad)
xor
adc
xor
sbb
sub
add
and
push
pop
add
iret
xor
cwde
push
sbb
je
movs
call
neg
iret
mov
add
mov
je
mov
or
or
bound
or
add
inc
add
mov
pop
stos
xor
aas
xchg
jmp
popa
xchg
sub
jae
add
sahf
call
or
hlt
or
push
add
add
in
pop
repnz
jne
inc
inc
add
push
push
call
xor
add
pop
sahf
or
sbb
cmp
jmp
es
rcl
sbb
adc
push
add
jmp
(bad)
sbb
mov
push
cs
dec
loope
dec
inc
fcmovnbe
mov
shr
addr16
or
ret
inc
mov
mov
add
mov
adc
fst
sbb
push
push
xor
xchg
pop
cmp
and
inc
xchg
mov
in
call
xor
cmp
dec
sub
mov
fucomip
inc
inc
(bad)
xlat
lea
push
clc
pop
add
into
fld
jl
xchg
or
stos
mov
mov
xor
xor
and
sbb
inc
gs
mov
and
add
add
inc
fmul
in
push
lea
mov
push
mov
mov
jge
add
dec
add
push
push
data16
outs
cmp
inc
pop
cmp
aam
xor
lods
gs
and
pop
cli
outs
lods
add
mov
inc
sbb
mov
jl
daa
or
pop
jne
push
imul
hlt
pusha
mov
push
push
in
out
or
adc
or
loop
adc
jmp
rcl
ret
or
inc
sbb
sar
pushf
lea
mov
adc
push
add
jmp
call
adc
push
daa
or
or
and
mov
cwde
stos
mov
int3
sub
ror
or
jle
gs
add
pushf
je
xchg
dec
lock
lock
sti
add
add
loope
adc
mov
stos
and
inc
imul
fcmovnbe
in
cmp
(bad)
mov
pop
neg
push
fcmovnb
lahf
add
aad
push
inc
enter
cmp
jle
inc
mov
shr
push
cmp
or
cmp
mov
xor
inc
xchg
add
jbe
xor
adc
in
retf
out
and
mov
lods
test
mov
pop
ret
mov
loopne
test
imul
jmp
jae
mov
lahf
mov
cmp
adc
fisubr
ss
dec
sbb
daa
cmp
pop
push
and
jb
ficom
xor
jo
pop
aas
adc
mov
adc
xor
push
xchg
or
jmp
mov
les
leave
pop
xor
je
and
mov
jmp
xchg
pop
sbb
in
adc
icebp
imul
and
cmp
jbe
jle
ret
xor
push
push
dec
test
mov
call
cmp
and
cmp
mov
push
cwde
jle
daa
push
mov
mov
sbb
jo
mov
lock
or
js
mov
sahf
adc
or
lds
mov
and
popa
adc
bound
loop
push
test
pop
test
pop
mov
repz
clc
inc
pop
or
test
sub
loope
cmp
add
retf
mov
jg
mov
dec
cmp
jbe
and
jecxz
mov
add
adc
test
js
adc
xchg
and
adc
lods
pop
inc
xor
fcomp
pop
js
je
dec
adc
or
xchg
and
mov
nop
ja
mov
cmp
push
add
lsl
sbb
dec
and
pop
gs
sbb
inc
push
adc
lea
xchg
jne
loopne
pusha
add
xchg
out
xor
push
sbb
add
gs
inc
inc
inc
push
movs
xor
inc
adc
jmp
ins
mov
jns
test
xor
jb
cmp
fisttp
jge
arpl
add
sub
sbb
ror
add
pushw
or
mov
inc
fcomp
and
mov
add
dec
xchg
push
shr
inc
adc
inc
jmp
mov
xchg
adc
dec
mov
mov
cmp
or
jmp
out
inc
test
jne
pop
mov
adc
cmp
enter
fcmovbe
push
jo
call
pop
mov
jnp
add
adc
call
cmc
mov
idiv
push
xchg
and
inc
push
lahf
push
push
loop
retf
inc
adc
and
mov
cmp
popf
xor
mov
xchg
(bad)
sub
mov
and
cli
cmp
call
lock
jge
and
mov
icebp
or
mov
je
sbb
sbb
inc
adc
fimul
cmp
data16
sbb
or
loopne
or
addr16
shl
dec
cmp
add
sub
outs
jae
imul
test
sbb
push
sbb
mov
or
inc
out
sbb
add
repz
sbb
and
cwde
mov
push
cmp
push
int
cmp
and
and
iret
mov
addr16
push
ds
xchg
mov
shl
or
cmps
sahf
inc
mov
add
xchg
sbb
arpl
dec
adc
push
mov
ret
icebp
sub
mov
and
inc
loopne
adc
sub
inc
cmp
aas
repz
js
pusha
xor
sub
outs
mov
jmp
and
shl
adc
out
sbb
test
popa
pop
dec
push
push
sar
mov
pusha
push
inc
mov
xchg
or
sub
and
daa
test
das
jns
add
push
sub
or
dec
add
mov
push
lods
mov
out
out
lock
and
pop
adc
push
pop
adc
push
aas
iret
cmp
ror
xlat
add
inc
inc
js
and
mov
mov
mov
or
and
dec
xchg
inc
sbb
leave
aad
loope
sbb
xor
enter
add
jb
add
(bad)
jmp
inc
xchg
cmp
xlat
clc
mov
or
shl
pushf
mov
shl
sbb
fcmovne
pop
inc
and
add
movs
sub
mov
pusha
mov
mov
cmp
ss
or
outs
xor
adc
sbb
add
sti
aas
push
mov
jle
add
xor
(bad)
mov
imul
mov
push
inc
xchg
mov
das
sbb
add
and
int
repnz
push
cli
push
or
stos
int
into
(bad)
adc
minps
ins
push
(bad)
jg
cmp
xchg
sbb
test
cmp
mov
es
push
push
add
pop
inc
jb
stos
in
jb
fstp
ret
mov
sub
cld
inc
loope
cmp
lods
adc
mov
sbb
lea
mov
pusha
jge
sbb
dec
sar
loopne
sbb
addr16
in
xchg
pusha
mov
fsub
and
fcomi
rol
inc
hlt
or
and
enter
fisttp
leave
loopne
dec
xor
call
pushf
xchg
xchg
retf
iret
aas
adc
outs
mov
sbb
dec
adc
add
xchg
sbb
sar
adc
loopne
in
cmp
jmp
fldenv
pop
xor
call
ds
xor
or
(bad)
mov
mov
or
adc
add
sbb
dec
xchg
push
mov
add
mov
add
jle
sar
and
pop
fsub
or
jl
cmp
in
sub
fcom
adc
in
inc
mov
je
push
scas
mov
add
push
std
pop
sub
cmp
push
in
mov
and
add
sti
xor
sti
mov
nop
test
mov
xchg
add
fdiv
xor
and
fsub
mov
cmp
test
dec
inc
nop
add
fadd
pop
push
jo
(bad)
xchg
push
mov
inc
mov
sbb
push
repnz
dec
mov
(bad)
test
lock
or
nop
pop
add
in
call
xor
push
leave
rol
les
and
inc
mov
and
push
mov
cld
or
imul
aam
scas
pop
mul
pop
cld
mov
or
pop
leave
or
jl
pop
test
lea
(bad)
and
push
mov
dec
pushf
cs
or
adc
fistp
rol
div
inc
dec
adc
nop
vpcmpestrm
dec
or
sbb
jno
xor
inc
dec
xor
and
nop
mov
nop
imul
dec
sub
in
add
xchg
mov
into
inc
and
adc
pcmpeqw
mov
hlt
lods
mov
adc
mov
dec
cld
cld
sbb
mov
sub
push
inc
inc
lahf
or
inc
sbb
inc
cmp
jl
ret
shr
inc
sub
xchg
xchg
or
push
daa
xor
and
sbb
add
push
ret
call
mov
test
aaa
sbb
(bad)
call
or
jl
or
adc
enter
cwde
inc
sbb
ror
sub
addr16
jae
adc
cli
cmp
or
rol
and
or
cld
dec
adc
or
daa
imul
dec
add
ss
sub
loopne
aam
push
adc
sbb
loope
add
mov
push
xor
jns
dec
cmp
and
movs
pop
mov
fsubr
aam
push
in
add
cli
out
jge
ins
pop
pop
sbb
call
jg
sbb
movzx
add
inc
inc
push
jl
in
ret
test
ins
rcr
jge
mov
aam
in
(bad)
and
add
aam
scas
cmp
(bad)
push
loop
dec
hlt
jns
inc
test
mov
lods
js
fwait
dec
mov
xlat
xchg
rol
nop
les
jo
add
lods
xchg
mov
loopne
pusha
inc
aas
xor
add
or
sbb
dec
mov
int3
gs
xchg
out
gs
dec
nop
outs
cs
push
pop
inc
cmp
into
or
fdivr
inc
mov
outs
mov
dec
ret
mov
hlt
js
fild
and
(bad)
call
xor
rol
push
jecxz
ret
clc
jg
scas
or
loope
and
call
push
xchg
inc
adc
in
pop
adc
add
adc
add
and
inc
hlt
jae
inc
inc
sbb
ins
mov
or
test
popf
lea
out
popa
jb
inc
or
ins
xchg
xchg
mov
dec
icebp
je
icebp
call
lock
push
mov
push
adc
into
jnp
push
sbb
and
clc
shl
adc
sbb
jb
mov
aam
lock
or
xor
ds
jnp
adc
or
cs
add
(bad)
es
cmp
(bad)
push
and
adc
cmp
mov
pop
xor
imul
or
or
or
ret
jo
or
adc
and
fs
outs
test
call
mov
and
inc
lock
scas
jge
push
pop
loopne
and
xchg
neg
push
sub
push
mov
or
and
push
adc
push
jp
push
pop
adc
loopne
call
call
pusha
sub
dec
dec
xchg
jmp
xor
fsub
sbb
in
imul
add
or
(bad)
cs
dec
dec
or
imul
push
cwde
push
inc
inc
push
addr16
add
ret
cwde
mov
push
push
aam
out
inc
fmul
out
add
mov
outs
adc
icebp
sbb
dec
add
or
mov
(bad)
int3
or
rcl
stos
mov
es
cs
cld
cmp
xor
cdq
data16
mov
aas
push
mov
inc
clc
add
cmp
and
(bad)
out
fcmovbe
push
xor
xor
repz
push
outs
cwde
push
dec
(bad)
mov
jns
sar
ret
mov
stc
clc
clc
jb
mov
(bad)
jge
add
jns
jbe
and
enter
mov
bound
xor
hlt
mov
inc
xchg
repnz
ja
cmps
sub
je
push
and
or
push
sahf
ret
and
and
frstor
inc
adc
and
in
inc
push
les
repnz
loope
popf
movs
jae
fiadd
sub
ret
cmp
cmp
dec
sbb
je
sub
adc
fnstsw
xor
xor
dec
imul
push
sbb
cmps
pop
add
dec
xor
rcl
and
int3
int
loope
add
inc
and
push
rol
and
jns
mov
and
loopne
retf
rcl
and
cs
sbb
or
cmp
lods
sub
jle
add
sbb
pusha
cmp
cmps
adc
push
int
cmp
cwde
inc
push
retf
imul
sub
popa
pop
xchg
cdq
inc
push
aam
mov
or
pushf
(bad)
in
ret
ja
jle
sbb
stos
mov
sti
jmp
adc
cmp
inc
call
dec
pop
push
add
dec
or
pushf
mov
aam
fild
add
sar
in
sub
and
cmp
jl
ret
add
and
movs
(bad)
retf
dec
inc
mov
pop
imul
mov
loopne
stos
mov
add
cmp
(bad)
push
sbb
mov
or
or
sub
fstp
inc
and
push
sbb
inc
or
or
adc
pop
and
in
mov
sbb
mov
add
pushf
cmps
stos
sti
or
adc
sub
loope
push
xlat
pop
aam
dec
stc
and
and
sbb
loope
xchg
dec
push
out
sub
push
loope
cmp
loopne
loopne
and
jge
enter
dec
cld
push
add
inc
dec
xor
add
rol
je
ins
inc
movs
add
xchg
pop
ins
cld
and
jmp
es
or
mov
or
enter
xchg
inc
call
adc
sbb
inc
(bad)
shr
sub
pop
fist
push
sub
adc
xor
loope
dec
jo
addr16
jno
add
shl
stos
fwait
or
dec
and
push
pop
sbb
xor
enter
xchg
or
test
add
xchg
in
imul
cs
xor
and
(bad)
xor
and
fcom
aam
and
inc
rcl
int3
sbb
xor
dec
das
test
dec
sub
jo
push
sub
sahf
outs
push
movs
ret
popf
int
dec
sub
add
pop
in
fadd
add
xchg
push
shl
jno
(bad)
movs
mov
call
inc
inc
call
cwde
push
sbb
(bad)
push
repz
sahf
pop
mov
rol
xchg
xchg
push
push
or
jo
aad
jecxz
sub
dec
pop
push
adc
int3
in
cwde
fmul
mov
out
loope
jae
out
adc
xchg
xchg
(bad)
sub
pop
xor
and
adc
push
les
lock
xlat
and
loopne
fbstp
cmp
stc
call
xor
rol
out
and
les
xchg
jle
add
repz
loop
add
pop
adc
rcpps
sbb
xor
push
ror
leave
(bad)
fwait
adc
add
out
sub
loope
xor
sub
inc
pop
cmp
jmp
cmp
fstp
std
test
push
add
and
sbb
inc
xor
mov
adc
sub
sub
(bad)
push
mov
xchg
cld
js
test
test
adc
pop
loop
enter
push
fld
mov
cmp
xchg
je
xchg
les
inc
and
das
push
je
jne
mov
aam
mov
jno
push
push
inc
xor
test
rcr
(bad)
imul
adc
ja
add
mov
int
out
jae
stos
dec
cmp
jl
inc
push
enter
mov
pop
inc
adc
es
mov
mov
dec
adc
adc
inc
das
retf
scas
adc
dec
inc
adc
inc
inc
inc
and
add
jge
fidiv
xlat
ss
and
push
inc
adc
outs
or
rcr
mov
or
sbb
movsx
xchg
bound
rol
and
dec
retf
and
bnd
mov
inc
adc
dec
xchg
shl
loop
(bad)
ja
xchg
jbe
push
sar
jne
inc
ret
mov
test
aaa
test
add
or
or
cld
js
dec
adc
mov
sub
sub
test
or
movs
and
sub
mul
pop
and
xor
popa
fadd
mov
psadbw
ret
adc
push
and
xchg
sbb
arpl
jne
test
in
lahf
stos
movs
dec
sbb
mov
adc
xor
test
push
scas
or
pop
rcl
inc
mov
sub
and
push
dec
adc
xchg
jae
leave
test
mov
push
ja
stc
adc
add
movsx
sar
or
sub
imul
loop
or
div
fdivr
es
xor
inc
or
cmp
jle
movs
sbb
push
adc
cmp
fcmovne
arpl
pusha
fmul
lock
cmp
(bad)
mov
pushf
movs
or
cmp
mov
inc
dec
pop
dec
adc
es
adc
jo
cwde
push
js
xor
add
adc
adc
mov
adc
mov
dec
cmp
cmp
sbb
add
cmp
fcomp
adc
add
add
fnsave
lds
retf
into
lods
adc
neg
pop
pop
retf
fiadd
pop
pop
and
or
shr
out
lods
push
add
ins
jb
pop
or
dec
jle
mov
es
and
cmps
shr
add
lea
push
inc
shr
xor
cmps
dec
mov
sub
sbb
ja
ret
add
jns
int
sbb
add
add
inc
pop
sbb
cmp
cmp
jl
add
rcl
mov
dec
adc
retf
enter
jnp
inc
arpl
add
xor
ja
inc
jb
mov
cli
sahf
mov
or
in
fdivr
int
push
mov
das
push
fcmovbe
cli
addr16
inc
sar
mov
push
adc
mov
mov
call
adc
(bad)
xor
dec
sbb
cmps
movs
dec
add
pop
xor
xchg
or
mov
lea
jg
xor
cld
aaa
sbb
or
outs
daa
jge
neg
test
into
rcr
inc
ret
dec
inc
xchg
mov
mov
mov
(bad)
imul
cmp
push
or
dec
sbb
xchg
and
or
or
aam
movs
mov
pop
pop
fdiv
das
inc
inc
ror
aas
push
out
mov
or
rol
mov
pop
jle
ins
jmp
or
mov
push
fxch
jne
sub
outs
inc
fwait
cmps
or
clc
dec
neg
push
pop
and
or
mov
fsub
sbb
fist
sub
jge
and
inc
pop
out
das
adc
out
in
je
(bad)
cmp
adc
xchg
and
popa
lods
xor
aaa
mov
ins
cld
fwait
inc
outs
push
cmp
rol
in
in
sbb
dec
iret
xlat
and
dec
xchg
sub
pusha
cwde
or
adc
inc
in
scas
lea
adc
mov
inc
ficom
mov
cs
sbb
lock
inc
jmp
pop
stc
push
lea
jmp
or
popa
or
imul
pop
outs
call
jecxz
xchg
clc
adc
loope
mov
add
aaa
inc
es
ins
enter
jno
lahf
mov
dec
bound
xor
sbb
dec
(bad)
cmps
inc
cmps
add
inc
outs
ror
bound
repnz
repz
push
dec
cdq
dec
cmp
dec
add
lock
jo
mov
jmp
or
adc
push
cli
add
ret
fcmovnb
adc
push
sub
ds
stc
cmp
lea
or
adc
push
pop
pop
mov
xchg
add
or
ins
lea
sub
dec
int3
xchg
cmp
add
pop
sbb
(bad)
jmp
push
jge
and
jae
mov
add
sar
adc
push
aam
aas
sbb
nop
add
lea
pop
sbb
fistp
add
sti
mov
pop
or
pop
cmp
cmps
jne
test
(bad)
xchg
adc
cmp
idiv
not
and
add
(bad)
cmp
xor
push
xchg
jp
mov
arpl
nop
or
in
push
nop
mov
in
retf
pop
pusha
add
sbb
inc
sbb
inc
mov
cmp
movs
jb
and
loope
int3
loopne
jns
into
adc
xor
arpl
rcr
fld
fadd
fstp
push
(bad)
retf
rcr
inc
add
sbb
add
scas
imul
test
es
adc
mov
cmp
clc
adc
neg
fs
sbb
push
mov
cs
and
sub
and
sbb
aas
out
repz
sub
sub
or
out
jmp
dec
xor
sbb
or
in
adc
adc
rcr
lods
fcmovnu
sbb
sbb
lods
sub
mov
adc
dec
icebp
inc
and
cmp
fmulp
sub
and
cmp
cs
idiv
push
inc
fs
cs
sahf
push
stc
mov
pop
adc
fs
inc
cmp
add
rcl
fs
les
jle
sbb
loope
in
or
(bad)
ds
rcr
xor
dec
mov
sbb
cdq
xor
xor
sbb
sbb
loop
and
loope
mov
nop
dec
mov
cmp
pusha
and
movs
ret
jmp
aaa
dec
adc
dec
(bad)
out
aas
adc
out
ret
ds
or
bound
call
hlt
push
push
mov
movs
pop
pop
jp
lock
adc
add
jmp
popa
sub
push
add
dec
pop
shl
jnp
jmp
inc
js
enter
adc
outs
xor
(bad)
ss
xor
ss
fst
jnp
xchg
pop
scas
dec
sub
sbb
lahf
mov
sti
mov
outs
push
xchg
out
jmp
lea
rcl
jl
mov
test
dec
mov
cmp
rcr
sub
call
mov
imul
loope
dec
popf
sub
xchg
loope
and
pop
and
add
xor
mov
push
or
pop
mov
and
adc
ins
mov
dec
sub
lock
mov
je
lea
add
inc
(bad)
cdq
stc
loop
jp
lea
mov
sub
push
call
pop
xor
enter
inc
mov
or
push
movsx
call
test
jmp
lea
cwde
test
xor
(bad)
adc
call
or
and
(bad)
fstp
(bad)
stos
jne
test
mov
icebp
sub
test
lods
add
or
mov
sub
add
or
shl
push
add
cmp
loopne
sub
jge
clc
aaa
adc
jne
jg
shl
add
xor
add
lock
inc
out
lahf
mov
pop
add
sbb
mov
mov
sbb
pushf
or
xlat
add
or
push
inc
aam
add
cmp
mov
or
mov
dec
mov
inc
fmul
and
push
jnp
ins
sbb
ret
push
sbb
enter
and
in
dec
shr
or
inc
add
dec
test
clc
push
cmp
hlt
sahf
fcompp
inc
mov
sbb
les
adc
inc
sahf
dec
sbb
int3
pop
push
pusha
mov
imul
fsubr
mov
or
xor
inc
fldenv
fisubr
das
or
ins
jne
jnp
sub
xor
loop
inc
dec
(bad)
movs
imul
jle
or
mov
mov
icebp
xchg
shl
test
or
jg
(bad)
xor
mov
add
and
test
sbb
and
jb
ret
mov
or
call
sub
outs
push
mov
cs
and
stos
arpl
ficom
imul
scas
fisttp
pop
sub
and
pop
mov
or
lods
aad
stos
adc
or
dec
imul
dec
or
lock
jb
push
jne
jb
cwde
fidivr
adc
popa
sbb
or
sub
inc
pop
lods
retf
adc
mov
pop
call
jno
mov
lea
push
mov
cmp
fwait
aad
push
rcl
outs
mov
test
mov
mov
popa
sbb
outs
or
mov
push
movs
or
add
jge
xchg
lea
jae
jge
and
adc
or
pop
test
and
mov
cmp
inc
and
xchg
pop
xor
xor
ret
cmps
es
popa
mov
add
sbb
lods
xchg
mov
(bad)
lds
shl
sub
add
push
mov
push
sbb
jge
add
mov
pop
mov
scas
inc
add
sub
inc
(bad)
inc
mov
stos
nop
jno
sub
jmp
mov
add
mov
adc
ins
cmp
retf
jp
mov
or
repz
mov
jl
movs
inc
push
xor
dec
pop
lahf
jg
loop
daa
call
popf
cmc
push
aam
(bad)
movs
and
push
push
sub
inc
rol
xchg
(bad)
call
aaa
lock
lahf
push
inc
test
call
mov
xchg
and
dec
sbb
adc
and
sbb
out
sahf
push
inc
inc
dec
push
fwait
pop
cmp
jne
mov
push
pop
add
and
push
aaa
cs
rcl
test
adc
es
or
mov
lods
daa
fadd
jmp
push
sti
add
push
cli
repz
or
enter
xor
cmp
cld
inc
push
cmp
jl
adc
ret
(bad)
in
out
adc
dec
fidiv
inc
and
int
cmp
jl
ret
je
mov
shl
push
(bad)
loop
push
dec
cdq
test
push
pushf
js
dec
imul
mov
mov
in
test
cmp
jnp
fimul
loop
out
mov
cdq
retf
jbe
cmp
adc
fcmove
test
lock
cmp
jle
and
daa
ins
push
inc
xchg
aam
or
sar
nop
cmp
jmp
mov
xor
add
dec
dec
idiv
(bad)
mov
inc
add
dec
push
sbb
cmp
dec
dec
in
cld
xor
rcr
dec
cmp
and
add
sub
scas
jns
and
(bad)
enter
or
dec
mov
inc
inc
and
cmp
pop
rol
add
sub
add
loopne
pop
aam
or
adc
dec
das
and
push
pop
adc
iret
imul
out
push
dec
movs
into
push
mov
mov
dec
jge
mov
fdivr
push
and
stos
fs
fst
popa
pop
mov
jne
(bad)
mov
dec
add
shl
adc
sbb
(bad)
sub
call
mov
or
adc
scas
movs
into
inc
sahf
(bad)
iret
cmc
dec
and
ret
dec
imul
(bad)
push
(bad)
xor
jmp
xchg
and
jnp
dec
and
add
pop
mov
mov
clc
mov
xor
addr16
inc
mov
push
cmps
dec
add
and
mov
cmp
mov
add
push
aaa
sub
adc
dec
dec
mov
sbb
dec
dec
sbb
and
add
sub
or
or
push
add
xchg
adc
pop
or
addr16
sbb
pop
pusha
aad
mov
sub
push
pop
pop
cmps
aas
pop
jl
rcl
jp
clc
mov
dec
add
mov
add
lea
cmp
cmps
add
dec
and
adc
mov
sar
jne
in
or
mov
and
or
dec
xor
xor
dec
jne
stos
and
ds
and
add
or
jno
hlt
maskmovq
neg
inc
adc
call
inc
aam
lea
xor
movs
dec
and
pusha
push
jne
and
sub
(bad)
sub
dec
jae
sbb
ins
popf
adc
rol
cld
fld
inc
mov
or
add
dec
or
mov
mov
aas
aaa
bound
jmp
out
aaa
sub
push
not
inc
add
push
leave
sbb
mov
hlt
pop
push
inc
ret
sub
rcr
mov
adc
jp
push
pop
add
stc
iret
push
imul
xchg
xchg
sub
out
ror
ret
out
(bad)
and
aaa
fs
or
mov
inc
(bad)
aas
add
rcr
and
mov
cwde
leave
xchg
std
je
jo
inc
sti
out
xchg
aam
retf
add
xchg
push
hlt
xor
loope
xchg
or
cmc
lods
in
push
and
popf
sub
pop
aam
mov
mov
add
pop
sbb
aaa
mov
and
popf
pop
enter
in
pushf
or
add
sbb
out
adc
dec
dec
or
cmps
push
fmulp
push
ffreep
inc
aas
or
xor
aaa
adc
or
out
nop
add
mov
ret
or
push
pop
(bad)
push
dec
sub
std
dec
sub
add
outs
pop
out
test
ret
sbb
cmp
add
and
test
push
mov
jge
mov
lahf
cmps
xor
movaps
data16
pusha
cmp
rol
push
push
push
xchg
pop
mov
mov
ss
outs
sbb
and
movs
push
mov
fdecstp
inc
jmp
pushf
cwde
(bad)
psrlq
hlt
push
adc
movs
aaa
mov
push
or
push
aaa
lds
clc
in
repz
mov
xchg
cmps
mov
pop
push
or
sub
daa
dec
xchg
shl
jg
push
in
stc
push
lds
or
adc
rol
(bad)
arpl
mov
iret
xchg
inc
ins
ins
daa
adc
add
pop
pop
xchg
ins
pusha
xlat
push
sbb
pop
ror
aad
cmp
clc
fdivrp
das
inc
or
call
xchg
or
sub
pusha
int3
pop
mov
pop
sbb
in
ror
pusha
loopne
and
push
push
aam
in
cdq
(bad)
dec
cdq
mov
adc
icebp
or
mov
or
and
or
or
pop
adc
cmp
xchg
leave
test
inc
fsubr
lea
ins
in
mov
or
inc
or
or
in
movs
mov
jecxz
pop
add
ret
mov
imul
dec
push
arpl
cmp
data16
(bad)
mov
lock
sbb
outs
jb
sub
cwde
iret
jge
lods
push
adc
sti
sahf
push
adc
jne
mov
xor
push
mov
(bad)
jmp
cli
push
jo
dec
arpl
stc
dec
cmpxchg
mov
add
loopne
test
mov
push
mov
or
leave
adc
int3
push
nop
sbb
rcl
cmp
sbb
mov
ror
leave
enter
dec
sub
inc
mov
add
imul
adc
inc
(bad)
loopne
hlt
sar
imul
pop
dec
loop
enter
sbb
xor
add
std
pop
push
stos
dec
sub
inc
stc
sahf
push
dec
xor
jg
cmp
inc
sbb
dec
hlt
jl
fld
or
ins
sub
dec
sub
mov
add
push
push
mov
adc
iret
aad
pop
mov
or
cmp
sbb
or
lock
das
sbb
xchg
sub
shr
ja
xchg
or
inc
nop
sbb
or
mov
sub
sub
jg
push
pop
dec
clc
pop
jb
and
(bad)
and
test
dec
push
in
loope
mov
ret
inc
cmp
les
popa
repz
frstor
push
mov
inc
add
sub
test
test
push
int
popf
mov
bnd
hlt
out
pop
cs
cmp
(bad)
xchg
ja
and
hlt
or
mov
pop
pop
shr
imul
pop
cmc
add
adc
adc
cmc
clc
jmp
cmp
add
rol
inc
fs
sbb
dec
and
cmp
lea
sbb
sbb
loopne
std
jo
mov
sub
push
or
sbb
loop
mov
pop
adc
cld
lods
loopne
shr
mov
mov
adc
xor
cwde
es
js
cmp
cmps
outs
and
mov
mov
lea
and
xchg
jne
cs
jle
push
push
jmp
or
shr
into
fcomp
js
sbb
(bad)
sbb
fmul
aam
fistp
sbb
add
sbb
dec
icebp
adc
and
mov
test
hlt
pop
xlat
pop
ja
push
lds
or
xchg
in
and
or
push
int3
or
je
call
dec
xor
fcomp
lods
cld
inc
(bad)
dec
in
dec
jae
lea
jge
or
add
(bad)
push
dec
jge
fild
hlt
jmp
inc
mov
mov
lods
sbb
xor
mov
lock
jne
fdiv
mov
adc
fdiv
outs
shl
(bad)
retf
cmps
pop
ror
gs
and
pause
lea
outs
call
popf
xor
mov
pop
cmp
jb
push
mov
mov
push
mov
xchg
pop
push
cmp
cmp
pop
jl
pop
test
dec
pop
aas
ffree
xchg
lods
xlat
ja
push
push
leave
push
and
fst
cmc
jbe
xor
sbb
sub
inc
and
sbb
movs
test
fst
ror
or
xlat
sub
cmp
call
inc
call
ins
adc
jns
mov
outs
sbb
push
shr
pushf
ins
add
mov
xchg
sbb
mov
(bad)
dec
pop
add
and
popf
inc
push
or
shl
inc
or
or
add
les
pop
cli
mov
ror
pop
or
push
dec
nop
sbb
add
test
push
sbb
or
sub
loopne
mov
lods
sub
lock
xchg
hlt
aas
pop
lock
test
or
mov
lea
and
in
jmp
xchg
mov
loope
mov
jno
cld
mov
loopne
(bad)
mov
loope
or
or
dec
inc
xchg
(bad)
or
add
ja
in
dec
sub
loope
out
jae
and
pop
pop
ds
dec
inc
inc
inc
call
in
push
sub
pop
pop
aaa
fldenv
add
icebp
sub
sbb
add
or
jae
add
xor
mov
stc
cmp
push
addr16
pop
mov
adc
loope
and
mov
fmul
leave
hlt
inc
xchg
aam
add
lea
jae
sbb
push
mov
jb
test
sar
push
adc
test
add
or
push
lahf
push
sbb
stc
or
mov
dec
push
jne
ret
fwait
shl
ja
xor
cmp
and
out
dec
retf
shl
xchg
nop
mov
imul
mov
adc
and
idiv
or
jmp
aam
and
clc
add
addr16
adc
jle
arpl
dec
pop
mov
call
andnps
aaa
mov
ds
bound
stc
hlt
test
mov
test
fistp
cli
enter
leave
loope
dec
sbb
dec
adc
mov
jno
adc
out
inc
push
mov
fld
cmp
clc
sbb
repnz
ret
nop
psubb
jo
nop
and
imul
out
cld
clc
xchg
xchg
not
inc
mov
cmp
mov
ins
jo
movs
pusha
mov
outs
out
ins
shl
jo
cdq
mov
jne
mov
xor
sbb
or
popf
add
inc
ret
ins
ror
jne
and
cmp
cmps
cmp
adc
rcl
and
adc
imul
(bad)
mov
xor
pop
push
dec
inc
push
dec
dec
inc
push
dec
inc
and
xchg
lds
lods
inc
add
cmp
pop
pop
addr16
xchg
cld
jno
cs
je
pop
pop
push
mov
loopne
jae
pop
add
sub
sbb
jle
out
and
add
or
sub
adc
cmps
add
sub
sub
popa
retf
pusha
or
and
jbe
lds
cmp
les
and
cmps
pop
cmp
lea
push
and
inc
push
jns
add
lock
and
fs
adc
mov
pop
or
cwde
jmp
out
loopne
ss
retf
xchg
jle
mov
out
or
or
mov
xchg
sub
fidiv
dec
mov
pushf
adc
mov
outs
cmp
pop
or
es
lods
jmp
test
dec
xor
mov
dec
xor
xchg
mov
fist
fistp
and
cwde
fcomp
sti
test
pop
mov
gs
xor
dec
(bad)
imul
stos
adc
jns
and
add
leave
inc
fcom
sbb
jbe
ins
sbb
int3
outs
outs
jmp
jbe
add
push
jae
xchg
xor
add
mov
jae
sub
cmps
cmps
pop
cmps
mov
push
and
ja
out
js
test
inc
pushf
dec
shr
mov
adc
mov
push
mov
push
inc
pop
bound
add
je
shl
in
and
sbb
fs
inc
retf
xchg
or
mov
loopne
sub
sbb
adc
xor
pushf
cmp
adc
shl
je
push
mov
aad
inc
mov
push
sahf
jnp
imul
test
cmp
imul
add
xchg
test
inc
cs
xor
mov
cwde
fs
retf
test
sub
xchg
ins
dec
add
or
and
mov
mov
jmp
mov
sbb
loop
push
fadd
loopne
stos
sub
mov
ret
mov
add
cmps
ins
mov
rcr
sbb
mov
mov
nop
cmp
aad
sub
xchg
pop
fimul
aaa
test
inc
rol
nop
mov
fwait
cmps
xchg
cmps
test
xchg
inc
call
das
cs
push
mov
in
cmp
dec
xchg
(bad)
scas
and
lea
idiv
fs
jnp
xor
and
aas
or
pop
ins
sub
xchg
adc
(bad)
and
mov
adc
and
mov
popa
push
push
lods
(bad)
push
or
mov
cld
pop
pop
and
xchg
dec
jb
pushf
add
push
mov
loop
mov
jl
sar
mov
dec
shl
test
rcl
je
scas
jo
xchg
std
and
sub
ins
in
icebp
cmps
das
push
leave
int
cdq
fs
aaa
fs
cdq
in
pusha
cs
mov
cdq
pusha
add
pop
pop
inc
es
add
inc
inc
outs
and
aad
nop
push
or
dec
fiadd
add
or
sub
mov
push
dec
xor
xor
and
add
out
push
fnsave
in
str
pop
cmps
popa
imul
cmp
add
test
sahf
jle
push
js
inc
push
jns
dec
out
movs
sbb
push
fcmovnb
sub
pop
inc
xadd
sbb
test
lock
or
mov
mov
enter
mov
cli
mov
pop
adc
push
jo
fnsetpm(287
push
cmovs
(bad)
jecxz
jo
ds
and
xlat
mov
popf
popa
xchg
push
inc
inc
cmovs
dec
dec
dec
push
push
xchg
sub
daa
add
mov
and
sahf
arpl
test
clc
add
sbb
dec
sub
and
add
xchg
push
and
sbb
pushf
mov
inc
addr16
sbb
sbb
sub
adc
or
mov
test
jge
sbb
mov
or
or
adc
fcom
pushf
(bad)
hlt
cmp
hlt
dec
lock
leave
movs
cmp
cs
in
inc
call
mov
add
clc
cs
sbb
cwde
sbb
inc
cmc
nop
mov
ret
imul
sub
mov
push
xchg
jmp
sbb
push
pop
xchg
and
cmp
popf
pop
sti
jb
or
(bad)
xchg
xchg
and
push
sub
or
or
mov
sbb
loopne
xor
inc
mov
inc
lock
mov
arpl
mov
xchg
inc
push
push
dec
push
fisttp
mov
pusha
sbb
and
sbb
in
pushf
das
push
jmp
inc
push
push
sub
inc
in
clc
fdiv
fadd
push
or
sub
add
xor
sub
add
pushf
adc
pop
dec
fs
and
das
les
les
mov
inc
mov
inc
xor
leave
ja
not
mov
push
pop
repnz
mov
enter
jns
push
adc
mov
loope
add
inc
ins
(bad)
jns
fs
pop
mov
adc
or
push
pop
je
mov
rol
mov
add
push
push
jb
dec
and
test
mov
pop
mov
loope
mov
imul
inc
rcl
nop
or
xlat
xlat
sbb
addr16
adc
addr16
je
xor
addr16
cld
sub
mov
add
in
nop
xchg
sub
fcom
and
lahf
push
fld
aad
inc
and
pop
adc
sbb
add
mov
mov
test
rol
dec
or
mov
in
mov
pusha
mov
mov
and
(bad)
enter
stc
mov
add
adc
imul
ins
and
iret
sbb
pop
mov
add
int
xchg
iret
xchg
adc
mov
or
inc
and
xchg
clc
pop
icebp
xlat
mov
mov
rcl
jo
jmp
xchg
pop
int
dec
add
dec
gs
outs
leave
(bad)
in
in
mov
add
fs
fimul
jmp
mov
inc
scas
inc
sbb
add
pop
in
stos
lahf
clc
xlat
clc
inc
xor
push
and
xor
cli
arpl
cwde
and
sub
(bad)
sahf
nop
sub
dec
outs
jae
push
and
in
nop
fcomp
fsub
xor
and
push
xchg
add
dec
sub
or
ds
sti
pop
dec
push
push
dec
inc
js
imul
sahf
mov
or
adc
stos
jg
sub
adc
xor
and
iret
mov
and
adc
pop
mov
out
aam
nop
push
in
sub
adc
(bad)
mov
sar
rol
not
add
inc
add
dec
mov
dec
add
sub
xor
xor
shr
fstp
pmulhuw
in
ffreep
rol
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
in
in
iret
mov
mov
in
in
mov
mov
in
in
mov
in
mov
in
in
mov
in
mov
in
in
test
stos
in
in
stos
lods
lods
scas
in
in
scas
nop
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
xchg
cwde
cdq
call
popf
sahf
in
in
lahf
add
add
xchg
in
mov
in
jo
jb
in
in
je
jbe
in
in
js
jp
in
in
jl
jle
and
in
pusha
inc
imul
sbb
xor
add
jae
sub
add
inc
jg
adc
push
xor
jne
pop
pop
sub
pop
add
sbb
fs
mov
inc
test
jae
retf
ss
out
or
jle
mov
push
push
push
jo
push
aad
(bad)
xor
ret
push
sbb
inc
jp
dec
cmp
and
ins
pusha
or
mov
rcr
cs
mov
xchg
mov
add
add
cmp
pop
jb
add
nop
or
or
or
mov
or
or
adc
adc
mov
adc
or
sbb
sbb
mov
sbb
or
and
and
mov
and
or
sub
sub
mov
sub
or
xor
xor
mov
xor
or
cmp
cmp
mov
cmp
or
inc
nop
or
mov
inc
inc
or
nop
or
mov
dec
dec
or
nop
or
mov
push
push
or
nop
or
mov
pop
pop
or
nop
or
mov
or
nop
or
mov
ins
outs
sbb
push
inc
inc
pop
imul
jne
sub
arpl
push
rcl
push
bound
arpl
jae
push
mov
add
je
daa
addr16
jo
out
push
xchg
out
push
push
sub
fsubr
pop
outs
xchg
push
cmps
shl
jae
cmp
stos
pop
adc
inc
sbb
popa
push
ins
(bad)
mov
push
call
jbe
pcmpgtd
pop
sar
jae
push
dec
cmc
xlat
into
fimul
pop
push
out
jae
jne
fs
nop
loopne
xchg
aas
pop
das
pop
imul
fisub
call
imul
add
pop
xchg
movs
jns
inc
jo
pop
add
into
and
dec
add
sbb
mov
jae
xor
pop
inc
dec
jae
enter
fdivr
push
outs
add
ret
imul
push
add
mov
mov
lea
push
inc
jae
popf
adc
rcl
jns
mov
pusha
sub
scas
das
mov
cwde
adc
das
mov
(bad)
inc
iret
aaa
scas
(bad)
dec
rol
das
inc
iret
push
cmp
mov
rcr
loope
pop
pop
and
es
or
fisub
xchg
(bad)
iret
pop
and
pop
fnstsw
push
inc
jne
xchg
jle
sub
inc
daa
mov
jp
ja
out
sbb
imul
es
jnp
(bad)
jae
daa
push
imul
mov
popa
jo
sbb
pushf
shr
jp
xchg
sub
sub
pushf
mov
dec
lods
data16
sub
xor
pushf
cmp
loope
pushf
cmps
aaa
inc
gs
cmp
pushf
scas
ja
jne
outs
sbb
mov
daa
push
outs
pop
imul
mov
xchg
imul
cmc
bound
das
ret
xchg
sbb
jg
xchg
fisubr
sub
jbe
adc
dec
inc
xor
dec
dec
clc
mov
jns
inc
push
push
das
add
push
xchg
sbb
pop
push
pop
das
push
popf
inc
and
inc
inc
cmp
sub
adc
mov
das
inc
sbb
mov
sub
add
aam
inc
or
pop
or
lock
shl
push
iret
fcmove
sbb
dec
lock
jp
mov
dec
mov
inc
pop
loope
mov
iret
in
push
imul
sub
push
(bad)
jl
add
and
add
or
imul
add
mov
xchg
cmp
jl
ins
daa
and
mov
sar
hlt
add
(bad)
push
(bad)
adc
push
ret
int
clc
or
in
das
dec
or
cwde
movs
xchg
aaa
sahf
cdq
push
lss
cmc
fadd
cmp
ds
pop
or
mov
jo
inc
jl
movs
(bad)
mov
nop
adc
icebp
sbb
mov
retw
cwde
leave
aas
(bad)
mov
adc
outs
call
test
movs
into
mov
mov
add
(bad)
or
(bad)
mov
fs
icebp
fsub
mov
cld
push
not
nop
loop
sar
and
imul
sar
rol
jg
sbb
mov
ins
xor
pop
daa
js
sub
xchg
xchg
sub
and
xchg
loope
add
pop
inc
sbb
loopne
adc
jne
pushf
and
add
sahf
jnp
ja
mov
mov
mov
add
mov
mov
cmp
daa
adc
sub
and
pop
ret
not
enter
sbb
jg
inc
or
pop
cmp
xor
add
mov
push
inc
push
aas
mov
js
pop
or
(bad)
xor
pushf
xlat
and
adc
(bad)
in
cmp
dec
iret
hlt
inc
pop
pop
test
inc
cwde
inc
mov
(bad)
loopne
fild
shl
(bad)
and
rcl
pop
mov
mov
stos
mul
mov
push
leave
xchg
in
inc
sbb
xchg
adc
inc
cmps
(bad)
inc
xlat
nop
sub
sub
gs
pop
sbb
test
or
push
sbb
dec
lahf
inc
and
pop
xor
cs
mov
push
inc
jne
inc
loope
add
es
adc
mov
mov
cmp
mov
adc
or
or
in
and
js
ret
hlt
add
mov
adc
add
mov
pop
add
xchg
jl
cmp
dec
mov
gs
sub
push
out
lea
sub
les
dec
es
mov
cmps
inc
inc
iret
push
push
jecxz
and
push
iret
mov
daa
mov
in
mov
adc
shr
or
and
rcl
rol
push
dec
jg
sub
inc
inc
dec
dec
dec
jne
ins
movs
push
pop
daa
xor
aaa
xor
pop
add
or
sub
repnz
jns
xchg
dec
mov
dec
cld
xchg
cmp
xchg
test
and
sbb
aam
push
cmp
daa
inc
ins
stc
neg
pop
inc
pop
sbb
add
outs
aas
sub
push
dec
repz
repz
pop
ins
jle
mov
mov
shl
cmc
push
sahf
out
call
jns
out
ins
jge
lahf
mov
jns
out
int3
(bad)
test
adc
cs
call
cmp
and
inc
pop
enter
or
mov
sub
fsub
retf
push
test
inc
xor
lds
or
aam
pop
dec
push
sub
inc
mov
mov
clc
movs
or
call
mov
rol
pmulhuw
jmp
sbb
or
cmp
or
stc
sbb
pop
or
push
push
jmp
push
loopne
jns
mov
jl
ret
and
jmp
pop
rol
and
mov
cmp
add
inc
inc
dec
add
pop
cdq
pop
adc
inc
adc
jo
dec
mov
(bad)
jle
xchg
fs
add
ror
sub
mov
pop
dec
push
dec
add
stos
mov
lahf
mov
pop
pop
adc
add
shl
or
sub
jbe
add
push
add
test
leave
mov
das
ret
pop
xchg
xchg
jmp
test
dec
dec
pusha
pop
dec
cmp
punpcklwd
aas
dec
or
or
sar
dec
push
push
mov
mov
gs
add
xchg
loopne
jb
and
aam
xchg
or
or
es
aam
xchg
mov
sub
call
data16
inc
adc
je
ins
sahf
sbb
or
mov
push
fdiv
jnp
cmp
mov
pushf
add
in
push
adc
pop
shr
jmp
aam
xor
aam
clc
add
loopne
mov
ficom
ja
adc
in
test
(bad)
shl
ret
xor
out
(bad)
jmp
(bad)
fild
push
mov
fld
(bad)
dec
cmp
fsub
mov
jg
xor
jb
sub
jb
sub
jb
sub
jb
sar
push
mov
fs
push
stos
add
cmp
xchg
add
stc
not
cs
mov
sbb
sbb
adc
cs
out
fst
adc
mov
test
repnz
mov
popf
fdivp
fisttp
nop
mov
mov
xchg
adc
ins
dec
cmpps
jp
outs
adc
xor
push
or
add
mov
add
xor
cmp
cmp
clc
adc
rcl
out
inc
and
and
enter
cwde
xor
jp
retf
nop
xchg
ret
or
hlt
leave
call
inc
pop
jb
add
and
outs
mov
ins
ds
mov
xchg
inc
out
jl
inc
pusha
nop
jnp
adc
in
pop
push
mov
fcom
shl
mov
sbb
addr16
inc
out
ss
sub
pop
push
sbb
rcl
outs
xor
cmps
sub
push
nop
cld
or
xor
dec
sti
xor
aam
cmp
sbb
mov
push
dec
jle
push
js
xchg
push
mov
push
xchg
sub
add
pop
out
jl
jnp
push
hlt
mov
push
pop
push
push
push
ins
sar
add
cmovae
or
push
and
ins
adc
add
cmp
jl
dec
stos
push
jecxz
and
test
add
jg
pop
clc
inc
icebp
cs
out
cld
xchg
mov
inc
out
and
mov
fwait
or
loop
adc
dec
ins
add
pusha
push
lahf
fisttp
and
sbb
mov
fwait
adc
mov
addr16
pop
cld
push
inc
mov
sub
clc
xchg
dec
mov
bnd
lock
or
and
sub
pop
outs
(bad)
iret
in
icebp
sbb
ds
pop
xchg
inc
mov
les
xor
or
push
xchg
rcr
and
dec
sbb
jmp
push
xor
jns
push
adc
mov
push
arpl
out
test
sub
push
pusha
cld
loop
shl
or
xor
mov
or
out
push
pop
push
mov
add
punpckldq
or
call
hlt
gs
push
out
xchg
mov
and
mov
mov
ret
jbe
or
loope
add
nop
iret
xor
jmp
add
push
jbe
mov
mov
ficom
inc
add
xchg
out
adc
das
sub
iret
out
pop
xchg
or
pusha
push
adc
imul
lods
sub
add
xchg
xor
fwait
push
add
xor
cmp
and
sbb
mov
cmp
int
mov
inc
lahf
ja
loopne
nop
and
add
adc
mov
sub
das
daa
add
enter
enter
fstp
fmul
nop
add
push
or
push
mov
in
xchg
lahf
push
xor
call
adc
pop
test
dec
xor
fimul
sub
pushf
pop
push
rol
lock
add
stos
pop
enter
dec
inc
jle
cmp
xchg
inc
add
add
pusha
push
test
ins
(bad)
in
test
mov
shr
iret
cmp
hlt
push
imul
jo
push
mov
or
ret
push
dec
cmp
in
cld
pop
or
adc
jbe
add
sahf
add
std
and
xchg
fadd
push
ja
dec
inc
push
test
sbb
sbb
jbe
adc
push
add
or
pop
ret
imul
mov
fdiv
cmp
pop
and
sub
sbb
jmp
sub
cmp
or
add
add
jno
aad
mov
push
(bad)
and
mov
iret
mov
paddusb
cmovg
inc
or
inc
ret
paddusw
or
ss
cmc
xchg
adc
mov
lahf
add
sbb
mov
ss
inc
call
lods
rol
add
pop
stos
and
adc
sub
inc
push
mov
mov
or
stos
shl
movs
push
jge
or
inc
inc
fstp
in
mov
dec
cmp
or
in
jns
xor
shl
cli
call
or
adc
mov
adc
cs
mov
lea
push
lods
sub
stc
or
sub
pop
sub
daa
jmp
sub
popf
mov
pushf
mov
push
fistp
fs
mov
sub
mov
adc
test
scas
imul
dec
or
push
mov
pop
in
inc
ror
ret
loopne
pop
push
mov
and
adc
or
mov
in
adc
mov
mov
popa
push
lahf
push
cmp
mov
retf
lds
jmp
ds
dec
sbb
adc
and
addr16
dec
pop
pop
jge
and
or
sbb
jmp
or
mov
jl
lock
cmc
je
cmp
loop
shl
adc
or
pop
adc
jge
loopne
or
hlt
and
and
test
sub
or
mov
nop
mov
xor
fstp
and
shr
cs
icebp
push
add
dec
movs
fistp
push
jge
ficomp
ja
js
ret
mov
cmc
sub
and
es
cdq
pop
pop
lahf
neg
add
push
aas
cmp
ins
dec
xchg
pusha
fcom
cmp
or
lock
or
repnz
lds
push
cwde
pop
adc
mov
iret
enter
xor
pop
push
pop
mov
in
inc
pushf
imul
dec
cwde
jbe
into
cmps
pop
xchg
add
je
inc
call
out
dec
pop
or
in
call
nop
or
adc
mov
mov
xchg
push
inc
sub
jl
mov
cld
arpl
add
ds
mov
inc
add
sub
and
adc
mov
and
push
push
dec
or
xchg
bound
movs
ja
ja
add
xor
out
leave
cmp
mov
push
push
push
(bad)
push
mov
add
push
loopne
inc
sub
dec
dec
pushf
lods
adc
jg
clc
adc
dec
pop
mov
stc
sub
push
sar
hlt
jmp
xor
xor
in
or
push
inc
inc
and
xor
das
add
sbb
cdq
hlt
adc
xchg
test
push
dec
out
or
lea
aaa
and
(bad)
fld
mov
pop
mov
cmp
test
lock
or
daa
loop
popf
adc
out
dec
pusha
or
fadd
or
mov
push
push
sbb
dec
(bad)
into
cmp
rol
add
pop
or
pop
sbb
xchg
or
cmp
or
cmp
ficom
enter
xor
adc
inc
movsx
adc
inc
dec
das
inc
jmp
aam
jmp
push
bound
add
test
dec
mov
xchg
dec
adc
inc
cmp
pushf
mov
sbb
pushf
pushf
pushf
pushf
adc
and
jl
pushf
sub
pop
aad
loope
inc
ss
sbb
or
and
fnsave
mov
push
dec
add
xor
shr
sahf
push
fldcw
mov
mov
(bad)
cdq
cld
sar
jl
sbb
out
les
rcr
inc
sbb
pinsrw
lock
(bad)
out
nop
addr16
addr16
sub
push
(bad)
int3
and
cvtps2pi
jae
pop
mov
lock
push
fs
add
adc
mov
shl
mov
jae
dec
lock
xchg
xchg
xor
add
push
ret
sub
mov
pop
jbe
sbb
popa
rcr
es
das
sti
and
in
sbb
out
bound
adc
push
ror
adc
and
xchg
sbb
popa
sub
sub
mov
repz
mov
push
nop
sub
jne
pop
pop
jb
xchg
test
jg
mov
fiadd
pop
cmp
inc
cmps
inc
gs
adc
cmp
ins
mov
into
xor
mov
inc
jmp
(bad)
popa
das
cld
clc
(bad)
mov
outs
leave
sbb
cmps
jo
xor
enter
loopne
aas
ja
imul
fcmovnb
retf
add
fild
jb
je
xchg
shr
cmp
ins
cmps
rcr
xchg
dec
in
test
movs
shl
sbb
cmps
push
ror
in
jecxz
cmps
xchg
and
inc
add
add
add
sub
dec
fistp
enter
mov
mov
pop
lods
dec
scas
xchg
sbb
or
pop
adc
jno
pop
imul
jle
test
cmp
sub
test
sbb
jo
sbb
push
aas
sbb
sub
sbb
pushf
mov
sbb
mov
enter
and
dec
inc
sub
add
pop
mov
add
sbb
add
push
add
add
cmp
(bad)
adc
sub
push
add
cmp
iret
push
sub
dec
outs
push
jne
das
push
gs
jb
fs
add
popa
je
popa
inc
bound
popa
jb
inc
jo
jns
in
mov
sbb
ins
pop
jne
xlat
in
push
cmp
out
dec
arpl
jbe
(bad)
arpl
adc
add
pop
mov
call
ss
or
movs
sbb
push
or
fistp
or
ins
outs
bound
cwde
imul
adc
and
push
pop
pop
push
dec
jle
fadd
jl
and
push
ds
adc
pop
cmp
mov
and
into
xchg
dec
jge
cmp
cmp
adc
mov
inc
add
xor
dec
mov
mov
inc
or
js
or
retf
or
or
ja
inc
mov
mov
mov
inc
movq
add
pop
push
addr16
cmp
hlt
xchg
test
sbb
or
dec
ds
outs
sub
sub
or
lds
lock
add
icebp
mov
inc
xchg
rol
bound
ror
pop
aaa
(bad)
xchg
ss
push
data16
xchg
dec
aam
add
outs
push
lock
cwde
outs
or
xchg
sbb
sar
and
mov
movs
mov
mov
int3
(bad)
pushf
dec
cmps
or
jae
test
mov
push
jae
mov
outs
dec
jle
pop
fcomp
dec
push
lods
push
loopne
mov
movs
or
sbb
out
add
clc
jnp
fdiv
mov
pop
add
pop
js
jmp
adc
ja
fwait
pop
xor
or
mov
add
mov
sti
and
add
sub
push
das
sub
aas
mov
xor
out
rol
jmp
sbb
push
dec
popa
sub
(bad)
or
clc
mov
stos
mov
(bad)
jle
mov
loopne
shr
test
xor
inc
mov
cmp
mov
xor
scas
out
ret
add
or
inc
cdq
mov
inc
sub
sub
add
add
adc
dec
mov
push
imul
sub
push
bound
sub
cmps
push
add
js
mov
cmp
or
fs
sub
and
cli
cwde
ret
or
push
sub
mov
mov
in
mov
(bad)
adc
out
push
mov
pop
push
movs
mov
outs
fist
mov
xchg
test
cmc
out
mov
dec
xchg
sub
inc
fmul
cmp
test
enter
dec
or
std
dec
and
and
or
(bad)
adc
push
push
ds
and
test
xor
fwait
add
sub
nop
cld
mov
dec
les
fnstenv
dec
add
push
lock
or
aam
pop
dec
add
jno
or
in
lock
loopne
xchg
enter
adc
stos
mov
mov
sbb
ret
xchg
inc
ret
popf
aad
ficomp
rcl
bound
pop
mov
adc
and
add
mov
add
mov
enter
rol
adc
or
inc
out
call
enter
push
sub
and
lea
push
cmc
or
adc
pop
add
fwait
outs
sbb
popf
adc
inc
mov
mov
psubsw
or
mov
xchg
sbb
out
mov
cmove
sub
retf
in
add
push
scas
pop
inc
mov
push
or
outs
je
adc
repz
add
call
fiadd
test
jmp
mov
(bad)
dec
pop
inc
push
dec
push
push
enter
jl
mov
add
adc
inc
sbb
nop
inc
adc
adc
sub
adc
cmp
daa
and
pop
outs
pop
das
push
cmps
test
lock
clc
sbb
jbe
(bad)
jmp
sub
sbb
pushf
push
dec
jne
and
xchg
mov
dec
lock
int
adc
push
mov
inc
repnz
ret
inc
jmp
daa
cs
gs
rcl
rol
pop
repz
lods
cmp
dec
icebp
pop
pop
dec
or
push
push
das
pop
pop
loope
add
inc
sahf
hlt
and
jne
hlt
adc
rol
mov
ja
sbb
sub
or
test
sub
imul
dec
xor
jb
inc
iret
sub
nop
xor
adc
call
mov
(bad)
jp
add
sub
pop
jmp
push
adc
int3
js
mov
dec
push
jns
mov
add
in
(bad)
and
and
mov
jbe
hlt
or
ss
xor
ficomp
inc
sbb
sbb
mov
mov
or
xlat
or
cmp
mov
scas
or
fmulp
in
out
scas
dec
sub
jne
fwait
adc
js
and
cs
movs
mov
pop
test
(bad)
enter
ins
mov
jl
in
mov
mov
lock
das
hlt
mov
add
xor
pop
jo
inc
int3
push
bound
out
repnz
popf
mov
push
dec
dec
dec
jns
inc
push
push
inc
inc
inc
dec
push
pusha
loop
rsqrtps
push
inc
enter
fbstp
or
or
mov
paddq
fadd
pushf
loope
enter
js
js
js
enter
js
jns
jns
repnz
int3
mov
mov
cmp
inc
inc
inc
das
dec
inc
push
sbb
and
pop
cmps
dec
repnz
andnps
enter
push
inc
push
dec
push
add
inc
pop
call
shr
mov
cs
inc
xlat
mov
add
mov
les
test
pop
(bad)
ss
push
pop
jle
sahf
sbb
adc
push
imul
mov
push
add
jae
nop
add
mov
cmp
xor
add
mov
mov
popf
lock
aad
pusha
add
cs
pushf
or
inc
stos
nop
and
pusha
jecxz
sbb
mov
sub
dec
ja
scas
mov
mov
push
or
stos
xor
mov
call
dec
mov
in
add
mov
lock
cmp
jne
dec
lock
and
xor
jecxz
jecxz
clc
add
idiv
xchg
mov
pushf
js
sub
dec
jnp
and
test
sub
shl
push
push
sbb
or
jp
jge
cmp
imul
jnp
cmp
outs
push
sbb
loope
cmp
ficomp
call
dec
leave
arpl
inc
pop
add
xor
cmp
or
cmps
or
div
push
push
loopne
or
add
mov
xor
call
jge
mov
sbb
jae
cwde
aam
jo
mov
dec
cli
push
fwait
dec
cmc
sub
push
ret
adc
push
mov
sbb
std
lods
or
ins
push
sub
inc
jmp
jmp
(bad)
sti
shl
in
xor
mov
ja
add
adc
or
test
inc
ror
pop
and
lock
dec
jge
(bad)
test
mov
arpl
clc
and
into
int
cmps
add
icebp
je
rcr
and
and
cwde
jge
lock
sbb
cmp
je
add
cmp
cli
or
pop
test
outs
mov
and
push
mov
shl
cmps
ret
pop
imul
inc
cmp
cmps
push
inc
test
xchg
mov
pop
mov
dec
jecxz
iret
dec
push
nop
or
push
imul
movs
adc
xor
in
mov
aaa
out
cmovno
xchg
outs
leave
cmp
es
pop
outs
test
not
ficomp
pop
pop
mov
sbb
mov
les
xlat
sar
jo
sbb
mov
hlt
cmp
mov
out
adc
sbb
jne
xlat
and
xchg
dec
mov
daa
cmp
and
loope
xor
adc
imul
outs
jo
push
adc
or
cs
(bad)
push
test
loopne
leave
fdivr
div
mov
(bad)
fild
jmp
sub
lss
sub
xor
stos
shl
xchg
shr
sbb
int3
dec
xor
loope
idiv
clc
mov
imul
out
enter
fs
push
or
test
or
jecxz
enter
xor
mov
fdiv
scas
rcl
adc
call
mov
or
aaa
sbb
mov
imul
pop
dec
pop
inc
and
stc
into
inc
ins
xor
sbb
xor
push
js
pop
call
cmp
push
mov
imul
shr
or
mov
xchg
arpl
mov
and
js
add
add
add
mov
or
push
sub
or
push
jnp
test
test
mov
inc
inc
add
mov
jb
movs
nop
xchg
or
ret
mov
push
mov
call
push
inc
loopne
sbb
pop
call
and
or
cwde
jns
push
pop
xor
push
adc
xor
pop
jb
mov
imul
cmp
pop
xor
or
mov
test
rol
sbb
xchg
dec
adc
inc
test
loopne
dec
push
jp
lods
xor
lods
xor
dec
add
adc
push
adc
rcl
xor
cmps
retf
xor
dec
or
in
mov
mov
test
retf
pop
pop
movs
and
mov
dec
jne
lods
cmp
dec
push
mov
ds
push
pop
adc
xchg
sub
or
mov
call
adc
sar
push
mov
dec
test
xor
xor
sbb
add
adc
test
add
inc
inc
sbb
arpl
mov
or
bound
out
sub
mov
or
jne
movs
adc
sub
adc
or
xchg
or
jg
or
(bad)
push
enter
lea
loope
dec
dec
movs
xchg
lds
pop
xor
rcl
mov
pop
xor
push
inc
ins
jbe
or
adc
xor
dec
fnstenv
movhps
in
push
pop
cmp
in
std
sbb
or
jo
xor
push
or
enter
out
jns
adc
(bad)
xchg
or
outs
movs
and
inc
mov
and
imul
jmp
sar
das
lods
or
push
(bad)
xor
pushf
xchg
push
add
sbb
(bad)
cwde
and
sbb
cs
ja
xor
or
sbb
nop
aam
or
pusha
add
aam
imul
mov
js
push
fiadd
or
add
sti
mov
mov
add
and
or
inc
nop
aaa
sbb
sbb
das
out
and
push
dec
mov
mov
push
int3
cld
or
dec
shl
sysret
sub
push
or
sub
jns
(bad)
shl
push
push
mov
or
mov
addr16
add
aam
xor
dec
arpl
out
mov
in
fcomp
sbb
sub
shr
test
outs
sub
mov
call
out
jb
pcmpeqd
sub
mov
xor
mov
xor
das
sbb
sub
ret
inc
lea
jp
ret
adc
or
ja
rcl
or
dec
sub
or
mov
mov
push
cmp
cld
popa
inc
hlt
xchg
sub
add
xor
dec
je
sbb
push
lock
and
mov
inc
(bad)
fimul
cwde
pop
sub
scas
mov
push
push
push
mov
and
je
push
adc
mov
movs
pop
(bad)
out
or
pop
data16
ss
dec
mov
push
xor
dec
xchg
and
movs
out
jge
and
cmps
sar
jns
and
dec
cs
ss
hlt
leave
leave
lods
sub
call
push
add
and
xor
cmp
push
pop
mov
enter
dec
adc
pushf
push
je
mov
or
add
add
sub
cmp
and
adc
push
jbe
or
add
xchg
pop
iret
lds
enter
mov
and
jle
push
mov
dec
inc
mov
adc
xlat
mov
push
add
scas
dec
pop
sub
xchg
shl
out
into
mov
and
dec
sbb
nop
or
xchg
daa
inc
in
sub
je
outs
jle
jp
nop
sbb
dec
pop
jl
adc
mov
pusha
rol
inc
dec
add
or
cmp
jo
mov
adc
xor
adc
xor
and
scas
fcomp
test
cwde
nop
pop
xchg
fsubr
mov
jae
popa
sub
fwait
mov
(bad)
jl
(bad)
mov
jmp
pop
enter
(bad)
loopne
dec
cmp
push
bound
sbb
ins
and
mov
pop
stc
imul
shl
pop
and
add
aam
push
and
mov
push
dec
aad
icebp
adc
call
and
aam
jmp
xor
add
cmps
push
inc
je
addr16
or
mov
adc
or
iret
js
pop
cmp
jmp
sub
or
jle
pop
add
sbb
pop
adc
out
mov
inc
push
ins
fs
dec
imul
fcmovbe
mov
jmp
mov
and
pop
jl
push
push
paddb
daa
inc
aaa
or
mov
add
test
xor
inc
je
or
sti
movs
mov
(bad)
adc
xchg
retf
in
in
fcompp
or
or
mov
inc
add
icebp
or
mov
mov
mov
jl
xchg
out
int
xor
push
or
sbb
les
xor
push
sbb
xchg
daa
jmp
and
test
shl
sub
nop
mov
(bad)
inc
add
mov
xchg
sbb
fsubr
push
inc
dec
sbb
sub
add
test
retf
addr16
test
pop
mov
call
pop
ficom
jo
add
pop
add
jle
jmp
jl
sahf
clc
enter
pop
jmp
jns
in
in
xor
xor
loopne
or
loopne
daa
mov
xchg
dec
fsub
pop
popa
xor
nop
add
sub
pop
lahf
or
push
xor
sub
lea
imul
cdq
cmp
sbb
das
out
nop
push
adc
adc
mov
sbb
add
xor
and
hlt
add
fadd
pop
push
pop
test
out
add
inc
add
(bad)
cmp
ins
(bad)
mov
data16
lods
inc
push
mov
cmp
cmp
and
jo
mov
sub
add
std
clc
test
and
ret
es
inc
outs
fadd
pop
push
adc
xor
sub
jo
cmp
mov
xchg
or
ret
fs
into
lahf
test
xchg
mov
in
(bad)
nop
or
cmp
setb
shl
int3
xor
mov
repz
mov
mov
jmp
test
bound
movs
pop
adc
icebp
ds
fcom
mov
mov
inc
adc
fist
or
fsub
sbb
pop
fdiv
mov
xchg
in
and
dec
retf
cwde
push
dec
push
jns
movs
rol
sub
jnp
sub
into
fdiv
jb
enter
push
aam
mov
or
aam
daa
xor
dec
in
int3
shr
pusha
or
cmp
enter
add
mov
shl
or
in
xor
and
mov
enter
sub
mov
jae
inc
jb
sbb
add
cmps
add
push
daa
rcl
retf
mov
shr
pop
repnz
es
stos
cmc
and
pop
jecxz
mov
adc
jns
pavgb
pop
jl
xlat
ror
bound
add
or
movs
pop
jns
and
int
pop
aam
inc
mov
aas
pop
add
pop
add
sub
cmps
call
cmp
cmps
iret
les
out
adc
es
inc
push
xor
aas
add
aad
daa
lsl
add
push
pusha
adc
sub
or
xor
les
mov
and
les
mov
cmp
sub
cs
add
inc
inc
test
sbb
sbb
push
mov
mov
adc
and
inc
rol
sbb
(bad)
aas
imul
push
inc
fwait
sub
mov
scas
inc
inc
fbstp
dec
mov
push
push
pushf
(bad)
mov
test
pushf
rol
dec
outs
pop
in
ror
mov
push
and
test
or
daa
or
jne
push
sbb
mov
sbb
sbb
xchg
adc
(bad)
push
fistp
and
push
mov
push
or
fs
sbb
mov
addr16
mov
pop
push
jno
xor
js
enter
pop
mov
(bad)
(bad)
repz
xor
dec
push
test
mov
test
pop
dec
ror
pop
pop
ins
mov
iret
mov
sbb
push
push
arpl
dec
inc
arpl
arpl
and
addr16
iret
adc
movs
test
xor
and
js
imul
adc
mov
mov
xchg
sub
push
out
jle
push
lea
and
lahf
daa
add
sub
adc
jmp
std
fadd
cdq
sbb
call
inc
es
sub
and
imul
loop
fwait
jg
add
inc
or
cmps
inc
and
test
sub
lea
and
mov
(bad)
adc
sbb
clc
add
sub
or
sbb
pop
ins
dec
fnstenv
rcl
cmp
push
mov
dec
pop
retf
xchg
sub
inc
adc
ss
and
adc
push
sub
mov
dec
jno
push
test
inc
mov
add
sbb
dec
enter
fdiv
cdq
pop
ins
jmp
rcpps
outs
and
mov
pop
pop
push
dec
pop
stos
xchg
outs
ins
push
ret
mov
sub
mov
push
test
fsub
xor
mov
jmp
or
mov
adc
imul
aam
push
mov
test
xor
nop
push
sub
fdivr
adc
mov
dec
jne
inc
pop
xor
sub
out
pop
jmp
icebp
icebp
rol
jmp
cmp
mov
push
inc
sbb
sbb
and
pop
jg
push
push
(bad)
push
push
xchg
mov
sbb
adc
ret
outs
add
shl
inc
sbb
add
inc
jb
ror
ds
or
gs
sbb
cmps
add
or
cmp
cli
shr
xchg
lds
jp
mov
inc
lods
retf
pop
pop
rol
lea
sub
add
sub
jg
dec
mov
arpl
nop
icebp
cmp
jne
fwait
and
xor
in
mov
add
ficomp
mov
aam
add
push
sbb
push
(bad)
(bad)
adc
dec
pusha
movs
dec
pusha
(bad)
and
jno
movs
scas
add
rcl
sbb
mov
test
(bad)
jne
hlt
or
sbb
in
cmps
cmp
mov
adc
in
cld
(bad)
fs
jo
dec
inc
cmps
cmp
and
in
inc
jno
cmp
pop
cmp
sub
jmp
(bad)
sti
xchg
or
inc
std
add
xchg
test
enter
jecxz
pop
dec
jmp
mov
inc
and
inc
mov
dec
pusha
add
and
stos
(bad)
fisub
lea
adc
cdq
cdq
adc
xor
xchg
dec
jnp
adc
xchg
mov
call
in
or
push
clc
xchg
pop
push
rcl
and
sub
movs
or
mov
xchg
ret
push
add
and
inc
pop
and
rol
sub
test
dec
nop
push
push
add
ins
cld
stos
fcomp
fmul
jecxz
adc
shl
aam
(bad)
or
jnp
sbb
sar
sub
inc
int
inc
rol
dec
fisttp
test
inc
sbb
adc
mov
or
cmp
pop
cmp
pushf
aaa
cmps
pop
jle
adc
adc
inc
jl
icebp
mov
mov
and
sub
sbb
or
rcl
sbb
sbb
jmp
leave
adc
sub
ja
mov
add
addr16
push
mov
les
pop
add
in
repnz
inc
sub
repnz
cmc
pop
xchg
or
(bad)
jo
mov
and
xchg
or
adc
inc
add
dec
arpl
cmp
lahf
xchg
mov
pop
loop
adc
add
or
push
inc
or
loop
inc
test
bound
dec
fist
or
lods
lods
cmps
shr
jmp
(bad)
jmp
fs
dec
iret
stc
ficom
repnz
dec
cmp
cld
push
adc
xor
push
hlt
stos
push
je
in
jns
jo
iret
nop
call
or
lahf
adc
or
xchg
jbe
mov
mov
add
or
pop
mov
or
and
adc
pop
xchg
inc
mov
shl
pop
add
push
xor
ret
(bad)
dec
add
pop
dec
xchg
sub
xchg
cmp
mov
mov
or
xor
pop
or
jnp
push
dec
push
add
add
pop
xor
cmp
js
mov
push
cmps
into
add
mov
int
dec
jae
pop
dec
pop
pop
pop
add
cmp
add
cmp
or
jle
pushf
shl
xor
and
fs
test
lea
xor
les
dec
daa
cdq
in
retf
dec
xchg
push
je
push
in
ins
lods
in
add
ins
fnsave
in
push
in
cmp
ret
mov
pop
cwde
and
push
sahf
and
or
es
cmp
imul
pop
mov
ss
lock
js
test
xor
xor
nop
inc
adc
push
pop
xor
mov
pop
adc
mov
(bad)
enter
push
popa
or
add
xchg
dec
jne
jmp
ins
jbe
scas
iret
mov
inc
adc
xchg
dec
test
mov
ja
jecxz
mov
add
lahf
or
inc
jae
adc
je
inc
jmp
and
mov
es
adc
outs
ror
dec
mov
or
loope
(bad)
(bad)
push
lock
cmp
aaa
in
out
mov
ror
dec
inc
jo
inc
sbb
hlt
add
enter
pop
js
aas
mov
dec
ret
jns
jge
cmp
ret
inc
add
mov
xor
push
das
stos
imul
mul
ret
and
mov
fld
mov
pop
test
pop
das
or
xchg
xor
scas
push
sbb
sbb
cmps
mov
jmp
inc
add
add
pop
and
lock
mov
inc
add
test
clc
daa
sbb
ss
and
push
cmp
mov
in
dec
popf
push
ret
mov
inc
inc
adc
inc
jl
mov
sub
in
add
jmp
sbb
das
jge
mov
sub
mov
popa
jle
adc
or
jmp
cmp
jo
fidiv
and
or
inc
mov
or
inc
jne
mov
cmp
(bad)
jle
dec
pop
outs
(bad)
jp
sbb
pop
mul
inc
stos
iret
push
or
push
je
ss
sti
mov
sbb
rcl
(bad)
mov
cmp
push
push
mov
sahf
mov
pop
jmp
and
paddq
addr16
jmp
push
mov
push
jae
movs
sbb
std
or
mov
push
inc
test
adc
pop
dec
xchg
xchg
repnz
leave
add
inc
pusha
adc
ret
push
mov
cs
mov
cdq
nop
push
jo
sahf
cmps
int3
dec
and
pop
rol
xchg
push
cmps
nop
adc
xchg
mov
or
push
in
sar
add
sbb
call
xor
add
sub
pop
(bad)
or
pop
leave
mov
mov
or
sbb
jmp
mov
inc
dec
cld
push
addr16
push
pop
sub
arpl
sub
pop
in
nop
lods
sub
or
push
clc
mov
test
jb
je
mov
iret
(bad)
push
xchg
mov
das
bound
shr
or
iret
ret
pop
movs
or
gs
scas
es
rol
push
jo
mov
call
punpckhbw
cmps
cmp
mov
dec
dec
dec
pop
rcr
mov
push
jmp
sbb
add
mov
and
or
shl
sub
movups
mov
sbb
or
in
leave
inc
add
adc
jmp
adc
sbb
adc
xchg
and
popf
je
mov
inc
test
cmp
sub
or
ja
stos
adc
mov
lock
and
mov
mov
test
imul
mov
mov
fsub
lock
xchg
dec
mov
dec
loope
mov
add
adc
sti
or
jnp
and
mov
out
push
adc
lds
rol
nop
inc
and
add
(bad)
(bad)
push
mov
push
mov
ss
test
pop
fistp
mov
cmps
fnstcw
jl
data16
loopne
into
add
inc
inc
sub
push
pushf
iret
iret
shl
cmps
mov
scas
mov
sbb
mov
fimul
add
or
mov
push
cmp
test
dec
dec
jp
shl
mov
push
sbb
push
mov
and
push
jl
push
add
xor
mov
add
mov
or
lods
loopne
cwde
test
inc
lahf
pushf
mov
jmp
adc
pushf
inc
jmp
or
(bad)
adc
dec
pop
bnd
fs
test
or
rcr
xor
mov
push
int3
sub
lods
dec
jbe
push
inc
je
cdq
nop
and
shl
pop
sbb
or
mov
jmp
mov
and
xlat
arpl
pop
or
ins
sub
adc
(bad)
in
loopne
aas
push
sar
push
(bad)
or
push
inc
addr16
xor
pop
mov
mov
add
mov
cmps
rcl
out
dec
mov
cdq
adc
in
cmc
icebp
test
test
sbb
add
mov
adc
pop
outs
push
fist
push
ds
imul
stos
mov
mov
push
inc
push
push
das
push
mov
jge
or
sub
push
push
push
fcomp
cmc
sbb
push
dec
pushf
cmp
mov
or
or
stos
rcl
push
mov
sbb
std
xor
xchg
jne
je
xchg
and
dec
adc
sbb
adc
test
dec
gs
data16
fcom
pop
cmp
add
pusha
iret
vmwrite
sbb
ins
pop
cld
xor
inc
adc
push
cli
and
pop
mov
mov
enter
cmps
cmp
cmc
add
cmp
or
fbstp
pop
cli
and
jnp
call
sahf
clc
clc
in
sub
adc
(bad)
fcomp
inc
dec
popf
xchg
pusha
sbb
pop
(bad)
outs
inc
inc
xchg
mov
jle
inc
rcr
jge
in
mov
and
pop
stc
sub
xchg
dec
mov
test
push
dec
push
mov
fs
mov
cmp
add
pop
into
scas
or
pop
xor
cmp
pushf
adc
sbb
je
scas
dec
in
(bad)
(bad)
mov
xchg
mov
pop
or
push
add
fmul
mov
ins
adc
int3
adc
sub
jno
dec
push
push
mov
mov
push
enter
jo
xor
es
inc
xor
adc
(bad)
retf
push
(bad)
clc
xchg
lods
adc
xchg
xor
push
aaa
push
sbb
or
into
inc
and
jo
push
pusha
loop
dec
pop
jge
dec
xor
repz
push
dec
adc
and
push
lea
inc
mov
mov
in
inc
fs
or
xchg
inc
or
movs
test
xor
stc
test
jle
fadd
rcl
sub
xor
mov
adc
(bad)
jmp
jnp
addr16
jmp
xchg
cmp
fistp
mov
das
or
jmp
or
mov
xor
sbb
xor
int
or
gs
add
mov
aam
xchg
mov
xor
lea
ss
dec
adc
icebp
fisttp
pop
inc
fild
dec
imul
ds
stos
xor
add
add
dec
lahf
into
sub
jne
jl
sub
gs
jmp
mov
sub
fwait
push
shl
xchg
lea
fcmovne
ret
sub
cmp
dec
or
dec
inc
fs
(bad)
lock
dec
(bad)
mov
lods
adc
mov
enter
sub
add
mov
iret
and
pop
mov
aaa
and
imul
dec
and
sub
pop
or
or
fisttp
lds
pop
push
data16
js
xchg
xor
enter
shl
sbb
sbb
jp
xor
push
clc
jecxz
jbe
cmp
pop
lock
fisubr
push
je
and
xchg
or
or
aad
fcomp
sub
jg
pop
enter
lea
pop
mov
inc
dec
jne
daa
dec
ret
bound
mul
lds
xor
pop
jno
or
dec
dec
unpcklps
aad
pusha
add
push
js
inc
hlt
outs
data16
sar
cmp
in
push
dec
push
cmp
cmp
pop
sbb
jmp
aas
stos
add
(bad)
leave
push
adc
push
or
dec
outs
pushf
test
fiadd
dec
dec
cmp
xor
(bad)
xchg
dec
cmp
jo
dec
ins
pop
test
add
mov
ret
mov
xchg
sub
pop
test
mov
inc
cdq
fcom
ins
lahf
stos
imul
(bad)
mov
or
arpl
mov
inc
adc
mov
cmps
mov
nop
or
mov
stos
mov
pop
adc
xor
sub
test
add
imul
ret
dec
ss
out
inc
nop
ror
pmulhuw
sub
and
cmp
adc
add
rol
lea
xor
pop
mov
fwait
mov
and
pushf
ret
mov
adc
mov
mov
stos
cmp
hlt
dec
das
pop
mov
push
out
or
lods
fisub
ins
inc
pop
cmp
push
mov
stos
mov
or
jnp
xchg
rol
sar
sbb
pop
test
jmp
xor
or
mov
push
mov
cmp
mov
sub
pop
inc
imul
inc
sbb
stos
sahf
(bad)
or
inc
jne
lock
in
mov
les
add
pop
jg
sub
cmp
jl
test
add
movs
mov
(bad)
mov
xor
pop
adc
mov
xor
sar
xlat
mov
cwde
add
jmp
les
push
mov
push
dec
pusha
adc
pop
clc
sbb
and
adc
sub
out
or
pop
sbb
push
adc
adc
add
ret
adc
add
stos
retf
adc
adc
dec
push
(bad)
fisttp
adc
into
les
sub
cld
cmp
loopne
sbb
push
add
sub
inc
stos
icebp
adc
out
sbb
add
and
aam
retf
ins
fs
dec
fsubr
jmp
adc
sbb
mov
lods
jns
mov
das
clc
call
call
dec
push
stc
pop
adc
pop
(bad)
retf
jge
hlt
je
fsub
ins
jg
ja
call
sub
sbb
mov
in
mov
jne
lock
loopne
ror
ds
mov
movs
sub
in
movs
adc
imul
cld
jno
jo
and
lea
mov
sub
retf
rol
pusha
(bad)
cmc
(bad)
lock
or
loop
ror
pop
shl
(bad)
sub
lods
sbb
cmp
adc
pop
fs
mov
jl
or
xlat
add
imul
es
dec
lock
mov
ss
pop
dec
movs
xor
pop
aaa
add
push
fsub
imul
adc
mov
cmp
sbb
popa
mov
iret
jmp
adc
(bad)
(bad)
ror
fwait
shr
les
jmp
sti
mov
test
jl
xor
xor
inc
add
test
xchg
fisttp
cmp
inc
js
jl
or
jp
xchg
xchg
cmp
nop
dec
xchg
leave
xchg
pop
rol
and
ins
stos
cmp
xchg
cmps
stos
xchg
jnp
add
or
call
sub
in
and
lock
jp
cmps
and
fsubrp
adc
add
xchg
cmp
add
inc
stos
or
test
cwde
test
or
shr
popa
iret
dec
rol
mov
pop
sbb
or
xor
mov
lock
rcl
repnz
xor
test
imul
adc
pusha
ds
fst
and
jecxz
hlt
and
jns
xchg
sbb
xor
dec
jl
nop
iret
or
es
sub
inc
fst
adc
xor
xlat
pop
movs
shl
ret
ins
jmp
mov
mov
sub
mov
in
inc
aam
stos
jno
cs
stc
push
and
add
popa
or
xor
imul
fimul
loopne
jge
ja
icebp
stos
mov
xor
hlt
mov
xor
sub
ret
pushf
jmp
jb
xor
loopne
shr
loopne
sbb
arpl
or
push
mov
sub
xchg
test
dec
dec
sbb
mov
sar
sbb
inc
mov
out
fwait
mov
inc
sub
cmp
add
loope
add
xchg
call
rcr
push
leave
pop
stc
adc
sbb
popa
ret
or
sbb
sbb
pop
ja
sar
inc
lea
xor
lock
mov
mov
(bad)
xchg
xor
and
sub
test
xor
js
sbb
and
inc
sbb
dec
ror
mov
mov
stos
imul
nop
ret
rcl
mov
pop
(bad)
xor
jle
jl
in
or
icebp
push
add
dec
add
jmp
mov
fild
inc
add
es
icebp
sbb
mov
movs
or
test
ror
pop
sbb
sub
lods
and
pop
adc
imul
sub
adc
or
leave
std
rcl
jno
mov
lds
inc
mov
outs
in
loope
jb
and
nop
retf
sbb
add
shl
add
cmp
cmp
rcl
inc
inc
(bad)
shr
inc
cmp
imul
add
loop
cmp
loope
je
inc
add
mov
inc
pop
pop
test
mov
pop
xlat
ret
scas
sub
cmp
bound
loopne
push
and
pusha
adc
mov
pop
jle
mov
dec
xchg
dec
les
ss
test
cmp
daa
push
and
(bad)
js
rol
mov
mov
dec
mov
mov
packsswb
or
inc
pop
test
pop
inc
sbb
pop
push
mov
adc
push
xlat
es
mov
mov
daa
fstp
inc
rcl
les
sbb
add
or
daa
adc
das
and
(bad)
mov
pop
sub
adc
xor
pop
into
cmp
xlat
lea
in
and
xlat
cmps
outs
sub
je
pop
sbb
outs
fsqrt
and
enter
add
enter
xchg
test
sub
or
daa
xor
pop
test
popa
add
test
xor
fisub
dec
jne
or
mov
(bad)
nop
add
test
mov
xchg
xor
jnp
mov
mov
and
sbb
sub
loope
dec
adc
sub
mov
push
sbb
mov
sbb
cwde
in
add
or
and
mov
test
fmul
imul
inc
shr
mov
stos
xlat
pop
sbb
scas
repnz
sbb
mov
enter
inc
mov
push
(bad)
int3
sbb
rcr
or
cmps
jmp
and
or
dec
sub
push
and
es
mov
push
sub
sub
cmovae
jecxz
push
bound
mov
movs
fld
mov
cdq
or
js
xchg
inc
or
and
jp
aaa
xchg
and
mov
sbb
cs
stos
fldcw
pop
jp
movs
adc
ss
and
xlat
sub
lods
shr
(bad)
daa
xchg
neg
jb
add
xchg
jb
js
add
(bad)
mov
push
out
push
add
push
push
and
test
data16
mov
ficom
and
inc
clc
ffree
clc
cmp
sbb
cwde
pusha
adc
rol
add
cdq
cdq
mov
call
lock
jmp
adc
sub
xlat
mov
sub
and
int3
das
jmp
jmp
aam
loope
das
fdiv
mov
and
into
test
loopne
in
loope
jns
in
mov
cmps
adc
mov
das
std
fiadd
fstp
xchg
les
jno
movs
sbb
loopne
or
clc
cmp
jmp
or
dec
pop
loop
sbb
loopne
mov
cmp
sub
pop
xor
inc
jo
inc
mov
arpl
push
clc
push
mov
dec
mov
in
fld
sahf
cwde
or
xchg
push
adc
pop
in
inc
aam
push
adc
xor
inc
pop
out
jmp
fwait
jmp
sbb
stc
mov
leave
mov
add
add
inc
or
mov
dec
pushf
(bad)
clc
or
xchg
push
or
sub
arpl
test
icebp
out
adc
inc
scas
pop
mov
int3
pop
sbb
push
pop
scas
(bad)
push
movs
cmp
or
push
retf
dec
adc
push
loop
dec
out
mov
jecxz
ds
mov
fidivr
xchg
sbb
add
add
push
sbb
or
push
cmp
sub
pop
xor
mov
iret
out
add
mov
ins
sbb
mov
pop
and
or
sub
fs
xchg
add
mov
lods
shr
push
inc
mov
mov
or
push
push
shl
dec
dec
mov
xchg
jbe
mov
call
or
xor
push
pop
adc
push
inc
fld
out
sbb
jmp
sbb
cmp
pusha
add
jecxz
(bad)
and
fwait
xor
lods
enter
push
dec
call
neg
ret
and
or
and
popf
std
ss
cmp
jne
push
jmp
xor
mov
ins
dec
data16
jnp
mov
imul
add
cmp
movs
sub
aaa
mov
pusha
fadd
xor
sub
jecxz
inc
cmp
mov
imul
cmp
shl
jg
(bad)
movs
rcl
pop
adc
pop
loop
xchg
je
and
sbb
jb
dec
fld
fld
xor
or
xor
mov
mov
cmps
and
loop
sar
xchg
call
adc
shl
mov
xor
clc
mov
xor
pusha
cmp
sbb
mov
dec
pop
mov
loope
jecxz
outs
push
ret
adc
dec
sub
(bad)
adc
clc
fcomp
clc
cmp
je
es
hlt
or
dec
fdiv
jno
call
adc
inc
or
add
mov
in
cwde
add
aas
fwait
cmp
and
mov
sub
(bad)
xchg
pop
xchg
mov
mov
sbb
shl
jae
inc
mov
in
push
pusha
adc
std
mov
xor
ins
dec
mov
xor
fwait
(bad)
imul
dec
sbb
pop
xlat
shl
loopne
jae
jo
in
in
pusha
jg
das
adc
sub
(bad)
add
jecxz
movs
add
dec
inc
cmp
scas
aam
gs
adc
stos
cmp
cmps
jmp
and
or
or
mov
icebp
sar
sub
adc
out
xchg
faddp
add
inc
arpl
iret
xor
clc
frstpm(287
aad
or
nop
dec
add
adc
or
mov
push
and
xor
js
cmp
rol
adc
push
cmp
movs
push
dec
pop
and
xchg
int
mov
push
cmc
in
sbb
mov
xor
and
fadd
push
xor
inc
pop
or
mov
out
jl
fincstp
fmul
lea
and
cmps
xchg
jo
enter
add
cmps
inc
nop
lock
mov
push
xor
inc
fwait
je
jb
pop
push
add
ret
icebp
sub
jne
sub
enter
daa
data16
pop
movs
test
clc
and
fimul
imul
sti
out
xor
out
sub
inc
mov
aaa
jnp
jmp
xchg
daa
add
shl
repz
mov
add
(bad)
xchg
mov
push
sub
jo
adc
adc
sahf
nop
xchg
sub
and
fbld
rcr
push
push
mov
sub
aam
jmp
test
out
xlat
sbb
hlt
sbb
lods
or
sub
add
mov
jb
cwde
jmp
xchg
inc
in
test
xor
push
bound
pop
and
inc
xchg
hlt
push
xor
add
scas
push
loop
aaa
scas
or
arpl
nop
das
dec
mov
test
outs
or
and
pushf
nop
mov
inc
loopne
sar
test
cwde
ss
add
cmp
jb
imul
rol
(bad)
std
sbb
loop
jo
jmp
(bad)
xor
outs
jmp
add
ret
ret
inc
in
daa
(bad)
mov
adc
iret
popa
or
adc
ret
dec
fidiv
jae
mov
sbb
mov
jmp
imul
ror
push
test
dec
loope
dec
cmps
push
cmp
sbb
(bad)
outs
enter
sub
dec
pop
push
xchg
push
shl
outs
xor
daa
jo
pusha
mov
sub
shl
push
sub
mov
ja
fidiv
sbb
fisubr
jl
push
pop
dec
daa
or
pop
mov
pushf
out
call
pushf
mov
push
jmp
jne
or
xor
fadd
add
cmps
scas
scas
add
jmp
mov
mov
inc
xor
pop
lock
add
sbb
mov
push
mov
in
dec
pop
mov
adc
shr
out
ja
mov
add
xchg
sbb
sbb
pop
in
bound
and
sti
sete
jge
adc
and
aad
inc
sbb
lods
mov
mov
xor
inc
sub
out
xchg
pusha
dec
jmp
xchg
xor
push
cmc
iret
mov
xchg
mul
inc
out
sbb
lods
cmp
mov
shr
dec
fcomp
cmp
jb
cmp
popa
loope
movs
pop
push
sub
pop
dec
jne
pop
sbb
es
adc
pop
mov
sbb
cmp
mov
or
dec
stos
add
mov
push
adc
shl
jmp
std
sbb
or
rcr
cmp
inc
jb
pop
mov
sar
mov
or
std
mov
jbe
inc
mov
and
or
bound
mov
movs
popa
arpl
retf
ret
das
loop
adc
ret
loope
pop
cmp
jo
cdq
sub
cmp
mov
pop
and
inc
inc
stc
pop
dec
je
pop
add
xor
xchg
adc
(bad)
adc
jp
jecxz
repz
push
nop
jbe
and
ds
mov
pop
sbb
sbb
sbb
or
or
(bad)
jmp
movs
pop
test
repnz
or
xchg
cs
mov
outs
out
or
or
push
xor
push
xchg
push
or
xor
add
xor
sub
push
push
test
call
and
push
adc
nop
inc
add
aam
lods
and
ja
shr
int3
inc
pop
dec
dec
(bad)
retf
dec
lea
loopne
ret
fnstenv
lock
cmps
shl
xor
hlt
sub
(bad)
out
not
pushf
add
inc
hlt
(bad)
xchg
adc
xor
push
cmp
js
inc
or
scas
xchg
mov
cmp
adc
sub
and
cmp
push
push
lock
rol
add
enter
adc
(bad)
retf
and
fdiv
addr16
outs
cmp
cs
sbb
cmp
and
arpl
fcomp
cli
imul
gs
test
and
sub
and
inc
xchg
dec
inc
jg
push
sub
popa
bound
enter
and
aas
or
int
outs
data16
or
in
cmps
jnp
and
and
pop
dec
shl
in
jns
in
rol
xor
aaa
pop
xor
pop
add
adc
cmp
lods
loopne
jle
repnz
pop
and
mov
inc
xchg
dec
js
inc
(bad)
(bad)
nop
inc
stos
mov
add
push
or
inc
inc
adc
cmps
sub
add
and
pop
adc
rol
jno
sbb
shr
fwait
cmps
sub
aaa
dec
adc
and
and
push
add
dec
cmp
cdq
sbb
pop
push
cs
push
mov
mov
ss
add
stc
adc
add
sub
push
aas
mov
mov
xlat
dec
outs
nop
inc
sub
mov
ins
inc
movs
in
pop
sub
fcmovnbe
ret
dec
sbb
mov
and
cmp
mov
pop
add
xchg
add
dec
popa
cmp
fisttp
rcr
out
mov
adc
xor
push
push
add
mov
ins
ss
sbb
xchg
(bad)
mov
idiv
pop
pop
inc
adc
push
xor
inc
stos
lods
add
repz
cld
push
push
mov
ss
xor
pop
dec
xor
inc
shl
pop
xor
or
adc
adc
jp
add
xabort
add
int3
cs
xor
std
mov
out
dec
loopne
inc
push
sbb
call
cmps
push
xchg
loopne
or
inc
mov
pop
cmp
popf
aaa
and
mov
push
retf
les
rol
(bad)
out
out
xor
and
ja
xchg
push
leave
xchg
or
xor
lea
test
nop
imul
xchg
and
add
nop
add
fisub
lfs
dec
(bad)
jmp
xor
and
mov
aam
jne
test
ins
pusha
jnp
rcl
xchg
push
sub
or
jmp
dec
stc
test
ins
mov
icebp
or
ins
clc
xor
push
xchg
lea
inc
or
in
loopne
xor
lods
pop
adc
inc
psubsw
jne
push
sbb
jo
adc
and
lods
in
cli
clc
jp
push
movs
adc
pop
cwde
dec
xor
mov
dec
aaa
adc
dec
or
jns
(bad)
ror
outs
lahf
jmp
lahf
fist
dec
test
inc
xchg
push
xchg
pop
push
cld
jae
lahf
and
bound
inc
sbb
retf
lock
mov
mov
xlat
dec
jne
lods
addr16
test
outs
push
ret
xor
cmps
bound
and
inc
xor
arpl
ds
jo
(bad)
into
mov
jmp
add
add
out
aad
push
mov
push
mov
scas
jne
mov
lods
push
fmul
lahf
push
inc
shl
xchg
mov
jmp
(bad)
repnz
inc
ds
sub
dec
in
pop
in
cmp
sbb
cmp
pop
xchg
mov
cwde
mov
mov
sbb
cmps
std
mov
je
inc
or
ss
xchg
out
shr
pushf
outs
and
jmp
xchg
hlt
push
sub
mov
sub
pop
or
adc
stc
inc
in
aas
adc
and
dec
xor
sub
mov
popa
mov
out
icebp
add
je
sar
popa
cmp
push
sub
push
scas
or
in
(bad)
pop
add
adc
add
fs
aas
xchg
daa
jmp
dec
lods
push
add
sar
xchg
int
add
jnp
nop
test
out
out
push
sub
gs
popf
and
pop
sub
cmps
jbe
sbb
repnz
ins
mov
xor
and
sub
xchg
ror
mov
mov
nop
call
xchg
push
mov
add
adc
add
ficomp
nop
aaa
bound
(bad)
inc
jecxz
push
xchg
sub
das
scas
mov
in
pop
jmp
mov
inc
iret
lds
jl
pusha
adc
loope
add
add
fiadd
div
ds
inc
out
push
or
out
cmp
or
pop
jp
(bad)
or
add
ret
icebp
sub
sbb
sub
xchg
lock
xor
mov
inc
loopne
icebp
push
push
mov
xor
dec
aad
inc
clc
and
aam
js
push
cwde
push
fmul
inc
fadd
int3
retf
push
inc
icebp
inc
sub
sbb
aaa
sbb
arpl
mov
fnsave
loopne
mov
xchg
in
mov
aaa
cwde
xchg
inc
add
pop
fadd
outs
jmp
mov
or
jo
imul
sbb
sub
and
sub
cwde
(bad)
dec
cwde
push
inc
cmp
xlat
aaa
shl
addr16
cmp
pop
xor
aas
sbb
dec
out
imul
or
les
push
adc
pusha
retf
call
adc
sbb
jno
call
add
bound
mov
push
mov
nop
int3
iret
neg
outs
xchg
add
push
les
add
push
cmps
adc
neg
or
adc
push
adc
dec
fld
mov
xor
xor
nop
inc
adc
aas
pop
sub
loop
shl
popa
push
scas
xor
shl
inc
inc
enter
(bad)
adc
fs
pusha
adc
or
dec
call
lods
ror
pop
sub
mov
add
cmp
xchg
push
js
ss
pusha
and
and
add
pop
dec
frstor
sbb
or
push
rol
imul
adc
add
inc
sub
outs
mov
xor
and
clc
hlt
jecxz
nop
or
pop
inc
jp
jle
inc
pop
inc
inc
mov
hlt
lods
scas
fld
jmp
xchg
(bad)
aaa
or
loope
outs
and
ja
stc
inc
cmp
fsub
ja
jg
inc
add
inc
rcl
or
xchg
add
inc
aam
add
add
sbb
test
call
push
fucomp
fmul
dec
test
pop
xor
cmp
repnz
dec
es
rcr
xor
outs
push
imul
and
mov
(bad)
cmp
retf
out
inc
fstp
cmp
inc
add
scas
dec
ret
mov
jmp
and
xchg
jns
gs
(bad)
imul
je
mov
xchg
inc
sub
mov
sbb
les
ret
mov
imul
into
jbe
mov
bound
inc
ins
pusha
es
test
xchg
rcr
fiadd
lock
stos
sub
pop
call
aas
arpl
jae
add
or
jbe
imul
fstp
add
fcom
and
or
jbe
push
push
cmp
out
sbb
sar
jns
fs
add
add
mov
xchg
or
sbb
sub
(bad)
push
and
cmp
mov
push
icebp
mov
out
nop
mov
push
and
sub
mov
push
dec
repnz
jne
sbb
cmp
cdq
in
fwait
jle
adc
push
or
push
mov
mov
(bad)
nop
movs
lea
in
sbb
popa
add
fs
mov
jae
arpl
push
inc
dec
inc
pop
inc
or
or
pop
sbb
add
dec
sub
push
sar
(bad)
adc
test
in
inc
or
xchg
adc
rcr
arpl
ror
cmp
in
push
add
icebp
and
pop
loopne
xor
movs
mov
fisubr
mov
jo
retf
dec
or
popa
pop
push
inc
push
dec
jp
aas
and
push
dec
push
inc
push
inc
dec
ds
push
inc
inc
push
(bad)
push
fs
sqrtps
xor
seto
and
mov
in
mov
ja
or
xchg
pusha
ins
sub
jge
lods
nop
mov
sub
lock
mov
mov
push
adc
push
addr16
jg
stc
jl
push
ret
cmp
pop
loopne
jmp
dec
xchg
dec
in
sbb
(bad)
push
mov
das
pop
loopne
arpl
push
and
dec
aam
movs
ins
leave
mov
dec
ficom
daa
cmp
adc
dec
or
je
sbb
mov
dec
les
dec
(bad)
enter
pop
out
lahf
ds
pop
mov
inc
jae
mov
add
inc
pop
sbb
jmp
scas
jmp
cmp
dec
mov
cmp
scas
pop
hlt
xchg
out
add
push
or
adc
add
sub
dec
ror
and
jmp
les
or
aad
and
add
ins
int3
clc
cmp
daa
js
fcom
and
add
push
xor
and
pop
ins
xchg
cli
sar
add
jno
test
into
jl
inc
mov
cmc
(bad)
fbstp
out
adc
and
inc
mov
jnp
stos
inc
fimul
cmp
aaa
hlt
adc
xor
pusha
sub
ds
jae
std
add
mov
cld
cmp
stc
in
imul
or
xchg
pushf
sub
xchg
adc
sbb
ins
popa
js
jl
inc
add
daa
pop
xor
xor
push
add
outs
xor
adc
enter
adc
xor
cwde
add
push
sbb
inc
inc
xor
add
or
push
adc
punpckhdq
fiadd
push
jb
ror
sub
(bad)
mov
mov
and
mov
jecxz
add
fstp
jge
or
ins
(bad)
shr
mov
pop
rol
fadd
push
call
inc
pop
sub
inc
(bad)
and
push
dec
dec
dec
inc
dec
dec
dec
cwde
cmp
xor
(bad)
mov
(bad)
cld
mov
sub
add
aaa
push
mov
adc
cmp
add
mov
mov
mov
pop
adc
inc
dec
aad
mov
xchg
mov
jl
pop
jle
test
aaa
mov
and
ret
adc
mov
adc
add
mov
dec
push
cmp
mov
js
fwait
add
jo
cmc
cmp
dec
sub
jl
cmp
xchg
fmul
xchg
fisttp
inc
add
push
cmps
mov
sbb
(bad)
adc
inc
inc
sahf
xchg
xchg
inc
loop
sub
push
inc
inc
push
inc
and
mov
rol
fild
mov
inc
in
dec
mov
mov
rol
sbb
adc
in
cmps
pop
retf
aas
cdq
inc
mov
push
mov
call
adc
inc
xchg
cdq
and
inc
cmps
lock
inc
loop
cs
sub
daa
mov
jb
xchg
inc
test
adc
scas
xchg
add
add
adc
ds
dec
sbb
sub
dec
adc
(bad)
call
mov
mov
sbb
lea
inc
and
cmps
add
imul
cmp
je
jecxz
stos
mov
push
dec
inc
or
cmp
iret
adc
sub
mov
sbb
push
hlt
nop
xchg
popa
mov
cmp
lock
pop
movs
lock
imul
das
push
and
aad
mov
dec
inc
and
push
lods
(bad)
jmp
mov
xchg
inc
out
push
cmps
out
cmp
inc
jle
ins
pop
pop
mov
nop
pop
sub
iret
lods
xor
add
jmp
push
adc
imul
jmp
adc
les
ss
inc
mov
mov
inc
aaa
inc
sbb
in
pop
ret
adc
cwde
out
push
repnz
sbb
push
in
xchg
push
and
xor
sub
sbb
(bad)
ret
or
push
or
xor
jno
inc
jbe
dec
int
inc
popa
add
or
or
aas
push
retf
or
bsr
adc
push
xor
adc
xor
aad
test
sahf
add
adc
dec
aas
aaa
adc
push
loopne
dec
nop
pop
dec
ret
jns
enter
test
mov
jbe
pop
xor
sbb
arpl
add
pushf
dec
ret
push
add
jmp
mov
sub
stos
push
lds
ins
sbb
jb
into
jl
push
fmul
sbb
add
adc
or
hlt
imul
xor
jle
and
jo
out
sar
jecxz
retf
add
call
leave
arpl
xor
push
lds
dec
cmp
pop
in
add
xchg
xchg
in
in
add
xor
ret
cs
out
pop
or
(bad)
jnp
dec
outs
or
ret
xor
loopne
mov
push
fdiv
mov
jno
xor
cmc
mov
jp
cmps
pop
test
push
xor
sbb
shr
ror
push
loopne
pop
fwait
pop
adc
(bad)
sub
xor
shr
push
leave
mov
jnp
cmp
dec
jne
xor
and
and
dec
(bad)
rcl
je
aas
into
and
mov
fucomp
inc
xor
aaa
xchg
sbb
add
dec
popf
sub
inc
outs
aam
xchg
movs
das
jge
dec
adc
ins
lock
xchg
push
ss
lods
push
fadd
out
sbb
xor
and
xchg
in
(bad)
xchg
call
ja
cmp
cdq
cmp
pusha
adc
inc
sub
fcmovne
pop
xchg
dec
stos
inc
rcl
lock
push
add
dec
adc
movs
dec
or
in
mov
pop
popf
ret
and
lahf
es
adc
repz
icebp
or
xor
sar
adc
std
mov
cmp
jg
dec
fwait
mov
adc
lds
xlat
in
add
outs
loope
idiv
push
cdq
daa
cmp
or
cs
loope
xchg
push
in
retf
push
ins
test
and
pushf
leave
adc
and
mov
ja
xchg
xor
not
adc
lahf
xor
xor
fst
adc
nop
das
cmp
add
pusha
dec
and
xchg
and
in
and
fidivr
lock
pop
fsubr
pop
add
jmp
fadd
pop
pop
xchg
add
add
jge
push
cmc
jno
xchg
imul
xchg
enter
pop
inc
inc
in
add
adc
sub
clc
cmp
mov
or
pop
imul
xchg
inc
data16
mov
mov
in
adc
imul
inc
mov
inc
sub
inc
aad
ss
rol
in
and
push
mov
push
sar
mov
inc
and
add
mul
ret
and
sbb
pop
aaa
and
in
mov
mov
cmp
shl
push
cmp
mov
push
mov
cs
ins
pop
mov
aaa
sub
mov
in
nop
test
mov
nop
rcl
or
sbb
cwde
cmp
inc
sub
nop
retf
movs
pushf
test
fs
in
in
ror
movs
jb
sbb
push
cmp
push
push
les
xchg
inc
int3
rcl
dec
in
aam
call
xchg
dec
in
xor
push
test
push
push
push
lock
xchg
inc
clc
fdivr
sbb
pause
clc
add
adc
add
test
dec
or
sub
nop
retf
adc
sbb
in
cld
add
cmp
xor
adc
sbb
inc
sub
in
retf
aam
push
pop
stc
dec
clc
adc
inc
adc
inc
inc
sub
cmp
mov
out
sbb
push
lods
pop
rcr
or
sbb
out
fs
adc
push
movs
jb
pop
jo
push
push
test
mov
test
mov
sbb
retf
add
inc
sbb
sbb
xor
xchg
push
pushf
js
and
int3
and
(bad)
fisubr
xor
mov
mov
je
ins
jo
addr16
sbb
xchg
adc
push
xchg
in
rcl
test
gs
ins
nop
inc
and
inc
sbb
mov
jb
push
mov
retf
enter
test
mov
mov
enter
xor
mov
test
gs
fmul
xchg
and
in
enter
xchg
xor
inc
cs
dec
sbb
inc
hlt
xor
mov
cld
sbb
iret
imul
push
mov
add
xor
mov
retf
enter
mov
xchg
xchg
and
mov
sub
xor
xor
jno
cmp
cmp
inc
inc
and
and
mov
push
or
push
cmp
cld
add
enter
loop
aad
and
mov
inc
scas
mov
sbb
adc
adc
lods
jae
fucomip
ins
retf
adc
mov
adc
imul
ss
mov
and
sbb
xor
out
jl
or
mov
jnp
pop
bound
jns
or
jno
jae
ins
pop
sub
sub
inc
sbb
inc
call
pop
arpl
pop
cmp
pop
aam
or
and
ja
or
jbe
je
aaa
or
(bad)
data16
lods
int
sbb
pop
or
cmc
push
sbb
sbb
xor
xchg
add
movs
sbb
in
pop
pop
dec
cmp
dec
mov
(bad)
scas
pop
and
cmp
aam
fld
das
call
je
cs
aas
sbb
add
sub
pop
call
jns
jmp
(bad)
jg
pop
mov
cmp
push
push
inc
scas
inc
pop
in
sbb
fcom
pop
sbb
mov
bound
sbb
and
xor
mov
sbb
or
sub
mov
adc
fsub
push
and
mov
or
add
ins
ja
ja
ret
push
(bad)
daa
mov
leave
adc
or
push
mov
mov
hlt
jbe
pop
ins
push
scas
adc
mov
shl
cmp
lods
arpl
test
xor
push
or
sub
les
stc
sub
push
dec
push
jbe
xor
out
pop
adc
dec
sub
pop
pop
mov
cmp
aas
adc
pop
inc
stc
push
mov
mov
jae
jle
fwait
mov
push
popa
pop
outs
jb
jb
xor
pop
dec
ret
mov
pop
outs
imul
fs
mov
push
pop
xor
dec
mov
push
inc
or
cmps
pop
push
push
not
(bad)
cmp
imul
and
inc
fild
iret
outs
loopne
xcrypt-ofb
cmps
outs
jo
inc
adc
push
inc
dec
ins
cmp
inc
outs
pop
cli
aaa
push
popa
xor
cld
das
adc
call
jne
iret
fadd
mov
addr16
push
cmp
or
or
ret
inc
dec
scas
push
mov
xchg
sbb
xchg
mov
ret
jg
aas
inc
or
sub
mov
gs
jae
or
pop
cs
dec
and
mov
add
dec
inc
rcr
sub
adc
inc
jae
fs
add
inc
(bad)
push
aaa
rcr
fistp
daa
shrd
sbb
mov
nop
sbb
addr16
das
adc
cmp
mov
aas
mov
int3
xlat
and
inc
lods
dec
test
jae
mov
inc
pop
xchg
push
test
mov
xchg
dec
push
dec
inc
push
movs
push
imul
and
(bad)
jg
seta
loop
lods
imul
(bad)
stos
sbb
inc
push
pop
push
ret
ins
ror
mov
aaa
scas
fcom
fcom
fidiv
test
aam
jle
daa
repnz
or
dec
add
rol
add
js
mov
ss
adc
xchg
xor
push
xchg
or
mov
mov
cmp
ret
aaa
js
dec
add
in
and
or
arpl
ds
xchg
and
dec
xchg
pusha
add
add
and
rol
int
and
lock
and
sub
mov
xor
mov
mov
jne
jno
jne
nop
sub
sub
dec
push
jb
mov
aaa
sub
sbb
fs
pop
cmp
xor
aaa
and
mov
mov
das
imul
fs
push
xchg
or
nop
daa
pop
xchg
test
push
ja
dec
mov
xor
aaa
ds
in
and
fs
cmp
pop
cmp
fcmovb
xor
cmps
mov
push
in
push
nop
cmp
and
nop
dec
inc
enter
nop
inc
stc
inc
cmp
inc
jb
cmp
mov
dec
cmp
mov
mov
dec
sub
adc
out
shl
mov
or
xor
adc
jbe
push
scas
or
and
mov
fsubr
repz
mov
add
and
mov
jb
mov
or
hlt
mov
cmp
adc
call
cmp
jb
push
push
adc
outs
retf
je
inc
mov
pop
pop
rcl
adc
add
mov
out
popa
dec
or
or
add
mov
retf
fmul
dec
jo
push
test
and
cmp
cmp
dec
pop
pop
or
ret
imul
dec
mov
mov
or
loopne
cs
jp
add
push
and
mov
jp
lock
dec
lahf
dec
push
xor
syscall
mov
add
or
jno
sub
inc
bound
ret
push
xchg
dec
add
or
(bad)
js
xor
dec
jo
loopne
adc
mov
cmps
or
push
or
dec
mov
pop
sub
sub
inc
mov
pop
dec
inc
rcr
addr16
and
dec
adc
arpl
nop
mov
cwde
mov
jmp
push
dec
push
mov
inc
test
sbb
cmps
cmp
pop
inc
imul
inc
jae
or
push
jno
cdq
dec
cwde
cmp
(bad)
pop
daa
retf
mov
dec
not
and
adc
pop
inc
loope
ds
cdq
sbb
add
mov
sbb
das
xor
aas
pop
clc
ds
lock
and
imul
jns
dec
dec
sbb
push
add
push
jo
repz
test
cmp
push
cmp
push
push
push
mov
js
pop
adc
clc
push
adc
sbb
xchg
pop
cmp
lods
lods
dec
ja
sahf
mov
push
test
mov
or
jbe
pop
push
call
fmul
stos
add
sub
out
out
sub
jge
popf
lds
mov
aaa
cwde
pop
adc
nop
dec
push
push
sub
add
add
push
movs
dec
push
xor
loop
call
sbb
popa
jg
pop
cmp
shl
popf
in
mov
jno
call
push
pop
test
adc
push
dec
popa
and
mov
push
mov
pop
or
mov
daa
pop
rcr
rcl
sbb
mov
xor
inc
inc
dec
pop
mov
sar
inc
frstor
ds
or
mov
add
mov
call
jb
mov
and
mov
pop
and
sbb
adc
and
mov
ins
or
xchg
adc
mov
add
aam
outs
inc
mov
ds
test
push
and
js
adc
or
das
shl
iret
ds
jno
pop
or
jmp
or
inc
cmps
pusha
iret
pop
(bad)
sub
retf
sbb
mov
adc
idiv
test
mov
dec
js
ret
pop
out
sahf
and
pop
dec
(bad)
retf
pop
sbb
loope
cwde
stc
push
cmp
mov
call
mov
daa
aas
xchg
(bad)
fbld
xor
mov
pop
out
das
adc
mov
sbb
div
xor
cmc
cmp
enter
fs
aas
dec
rol
xor
mov
out
fmul
nop
cmp
nop
cdq
dec
add
xor
clc
lds
ror
sub
ror
cmp
retf
sub
jne
daa
retf
sbb
pop
push
pop
das
xor
es
cld
adc
or
js
popa
and
fldenv
xor
xor
mov
mov
imul
mov
sbb
cmp
inc
enter
push
push
cmp
adc
xchg
jnp
add
pushf
mov
pusha
sub
sbb
adc
and
jno
xchg
mul
jle
ins
pusha
sub
out
jmp
mov
(bad)
add
push
sahf
jl
scas
xlat
lock
and
mov
sbb
enter
loopne
xor
call
bndstx
aas
test
dec
mov
aam
or
push
jg
or
enter
in
aad
xchg
or
cwde
adc
push
loope
pop
jae
mov
sub
cmp
outs
(bad)
push
sbb
or
(bad)
loopne
push
pop
movs
loope
cmps
daa
push
mov
mov
mov
fist
test
addr16
fadd
lds
dec
arpl
imul
enter
pusha
(bad)
inc
cmps
or
jg
mov
in
mov
enter
add
and
pusha
add
xchg
cmps
add
fcomp
dec
dec
xor
and
jbe
imul
adc
sbb
lock
lock
mov
shl
pusha
and
cwde
unpckhps
jmp
xor
mov
movs
test
cmp
xchg
fmul
adc
pop
xlat
cmps
jnp
sbb
call
add
mov
jo
jbe
inc
dec
out
sub
cmps
jle
jo
jle
aam
nop
loope
iret
and
jne
in
punpckhwd
iret
mov
imul
in
pop
(bad)
or
or
dec
push
mov
mov
adc
or
xor
les
dec
push
pop
(bad)
adc
or
adc
popa
inc
xchg
jbe
mov
pop
sbb
and
rcl
(bad)
push
ins
mov
cmp
sub
adc
sub
or
cmp
dec
adc
adc
xchg
mov
stc
sbb
mov
sub
adc
adc
out
adc
mov
pop
dec
cs
inc
sbb
sbb
ja
push
mov
lods
lods
sub
int
bnd
jp
sub
add
aad
adc
add
xsha1
cmps
or
pop
add
and
clc
xchg
jne
and
sbb
fincstp
or
les
ja
gs
inc
xchg
mov
dec
push
(bad)
(bad)
nop
aam
lds
cmp
clc
dec
inc
pop
jae
xchg
adc
fmul
dec
daa
add
cmp
add
rol
or
xor
nop
pop
sub
sbb
fistp
faddp
call
push
js
enter
or
or
sbb
or
mov
xchg
shl
sub
cmp
xchg
xchg
xor
bound
dec
and
mul
or
mov
jne
mov
adc
inc
movs
test
lods
adc
xchg
call
inc
les
cmp
pop
rcl
adc
daa
cld
dec
rol
mov
jne
xchg
sbb
ss
mov
and
retf
ja
mov
leave
add
mov
xchg
xor
pop
js
mov
gs
pop
dec
inc
add
jo
cs
(bad)
int
push
jecxz
mov
outs
jne
or
xor
clc
ja
fmul
adc
pop
add
cmc
inc
dec
loop
push
mov
push
test
pop
pop
ret
push
xor
jle
push
jle
sbb
js
ins
dec
xchg
test
mov
and
les
add
inc
test
jno
das
jo
add
mov
xor
fisttp
cmp
inc
add
mov
inc
jns
push
xor
add
add
add
xchg
shl
stos
imul
fdiv
jno
gs
and
mov
packsswb
push
inc
fisubr
sub
inc
popa
call
shr
xchg
pop
call
mov
enter
adc
out
jnp
paddb
nop
shl
mov
mov
sbb
sbb
xlat
mov
inc
retf
or
mov
push
and
xchg
sbb
xchg
(bad)
mov
xor
dec
shr
inc
fwait
gs
sub
xor
fisubr
leave
xchg
and
push
mov
add
add
sbb
and
adc
push
outs
nop
aas
jno
int
push
(bad)
mov
cmp
in
xlat
into
sbb
or
aaa
dec
pusha
pop
dec
mov
mov
test
cmp
jno
fs
test
nop
iret
lock
push
and
xchg
jl
ret
and
mov
inc
or
mov
or
or
in
xchg
and
cmp
adc
sbb
and
call
out
(bad)
in
inc
or
inc
imul
sub
sahf
dec
adc
pop
cwde
shl
sbb
in
ss
and
fcmovnbe
inc
push
pop
push
or
and
int3
push
inc
lods
sub
add
jo
les
mov
cld
or
mov
mov
xchg
inc
cld
ins
mov
push
jge
scas
inc
sub
adc
sbb
int3
or
aaa
inc
or
aam
nop
fldenv
imul
outs
pop
in
cmp
dec
mov
and
dec
cmp
xor
push
push
inc
cmp
dec
add
stc
fisttp
sbb
dec
inc
inc
dec
push
dec
dec
dec
push
or
retf
or
xlat
dec
xor
clc
xchg
je
outs
push
push
nop
sahf
data16
cmp
sub
sub
and
les
mov
xchg
or
test
aas
lods
add
nop
outs
or
inc
jg
cmp
add
pop
je
dec
dec
ja
dec
sub
(bad)
lods
fs
cmp
dec
sub
out
push
and
xor
jmp
inc
dec
and
pop
enter
add
lods
or
and
or
cs
jl
mov
xor
push
jbe
xchg
jmp
sbb
sbb
jmp
or
ds
mov
jle
das
xchg
bound
add
mov
test
inc
mov
nop
pop
punpckhdq
xor
jno
sbb
(bad)
cmp
sbb
xchg
in
xchg
xor
fild
xchg
xor
push
fdiv
sahf
mov
adc
movs
out
dec
adc
dec
jno
nop
ret
add
pop
(bad)
mov
push
lds
ss
adc
pop
lods
inc
out
sbb
setae
sbb
dec
je
adc
ror
mov
mov
mov
cli
push
ja
ds
rcl
mov
pop
push
and
or
into
repz
sbb
into
pop
fidiv
push
sbb
popa
mov
mov
add
mov
pop
adc
xchg
jp
mov
les
and
out
push
inc
push
enter
inc
add
test
loope
xchg
add
jne
rcr
pushf
cmp
mov
jne
test
pushf
sbb
rol
nop
push
test
push
push
or
fild
in
sub
in
aaa
call
push
(bad)
call
fwait
xchg
or
mov
dec
xor
inc
pusha
rcr
dec
dec
loopne
cmp
xor
pop
adc
add
sbb
and
or
scas
push
cmp
push
fdivr
jecxz
dec
mov
and
sub
sub
or
inc
out
je
and
cmps
pop
push
sub
and
add
push
jmp
jo
jo
lock
aam
inc
and
sub
pop
repz
call
mov
inc
or
lods
add
or
imul
adc
xchg
dec
push
lods
pop
out
rol
dec
jne
cmp
push
add
adc
cmp
mov
fmul
or
movs
xchg
xor
sub
push
mov
or
cmps
in
inc
movs
pusha
jp
pusha
add
ret
or
xlat
and
lods
inc
jg
mov
mov
mov
mov
sub
pop
movs
nop
add
xchg
xor
mov
pop
pushf
cmc
imul
ss
call
movs
mov
and
leave
mov
inc
jl
and
addr16
in
stos
push
mov
push
sbb
pop
inc
ins
aaa
xchg
dec
scas
cmp
xor
in
dec
push
push
cmp
ret
bound
add
sbb
mov
cmp
xchg
pop
add
push
mov
stos
pop
pop
ins
jbe
dec
inc
ins
(bad)
pop
cwde
ins
push
jl
jle
hlt
inc
cdq
pop
shr
pop
pop
add
int
dec
out
adc
push
inc
or
or
lahf
repnz
add
pop
pop
xor
pop
jb
adc
dec
push
push
push
xor
mov
rcl
dec
mov
push
adc
or
dec
or
stos
cmp
mov
xor
pop
or
inc
add
sbb
test
dec
ret
fmul
fisttp
arpl
push
sbb
and
add
adc
and
les
dec
shl
push
ret
sbb
sub
dec
inc
popa
push
inc
adc
pop
jb
cmp
cwde
int3
or
arpl
outs
xor
adc
xor
aad
mov
imul
(bad)
ins
adc
adc
jecxz
xor
ret
inc
sar
push
push
jb
ins
popa
xor
lods
mov
jl
add
mov
stos
cmps
sbb
pushf
jae
jae
cs
or
mov
cmc
push
push
sar
mov
popa
pop
pop
pop
cmp
pop
aad
stos
and
add
mov
or
pop
or
mov
out
inc
(bad)
sub
data16
adc
mov
inc
pop
adc
xchg
lahf
add
inc
(bad)
enter
mov
in
push
add
fsubr
loopne
out
and
jge
js
jne
jns
pop
add
(bad)
daa
mov
pop
subps
or
inc
daa
push
mov
vmread
mov
dec
fcomp
cwde
nop
scas
pop
xor
mov
or
cmp
test
loope
mov
test
pop
cmovno
(bad)
fs
mov
pop
add
dec
mov
pop
push
pop
adc
xor
add
sbb
pop
adc
adc
xor
in
fs
add
icebp
pop
pop
xchg
push
adc
sbb
adc
mov
call
and
dec
repz
in
je
xchg
hlt
mov
add
(bad)
movs
push
pop
jnp
xchg
rcl
pop
add
push
fs
test
mov
xchg
or
call
mov
dec
bound
add
or
pop
pop
xor
adc
dec
ret
adc
cmc
fisttp
dec
or
pop
push
test
mov
adc
adc
gs
push
adc
fnstenv
push
icebp
cdq
pop
mov
adc
push
add
or
adc
or
ror
call
mov
mov
xchg
inc
test
iret
jns
nop
inc
add
or
repz
test
leave
setb
push
adc
sub
or
dec
and
ret
xchg
daa
int
ror
and
sub
imul
cmps
imul
and
jmp
xor
fst
nop
mov
pop
movs
xor
or
push
xor
inc
and
jle
add
or
mov
push
fist
jo
add
and
pushf
add
mov
xor
jb
or
lock
xor
lahf
in
mov
xor
bnd
in
or
xchg
out
jo
and
mov
mov
jbe
cmp
inc
adc
inc
jb
ins
push
inc
dec
(bad)
fdivr
pop
pop
mov
xor
add
jae
aam
sar
in
popa
mov
int3
int3
xor
push
mov
shl
arpl
or
jae
ret
sbb
shl
data16
imul
or
pop
jo
les
fwait
jmp
faddp
rol
add
mov
pusha
mov
inc
in
xchg
or
jmp
bound
scas
sub
and
mov
ficom
fidiv
xchg
jbe
xchg
pop
aaa
or
das
test
sbb
inc
adc
or
prefetch
or
xchg
pop
push
inc
adc
mov
sub
xor
xor
pop
jb
int3
or
mov
jl
test
jb
fmul
enter
test
adc
xchg
or
mov
mov
and
push
xor
mov
dec
fs
mov
xchg
or
add
add
fld
fcomp
push
or
xchg
xor
pusha
or
cmp
cmp
lods
dec
push
push
out
pop
inc
sbb
add
pop
shr
dec
dec
ja
sbb
mov
sub
lahf
test
test
movs
adc
cmp
imul
jb
or
add
sahf
mov
mov
sub
rcl
jae
xchg
lods
sub
(bad)
xor
push
and
clc
pop
fs
add
es
mov
push
in
aas
and
and
in
jbe
rol
push
or
sub
sbb
movs
lea
push
xor
or
mov
not
ret
daa
mov
cmps
mov
mov
jmp
cmp
je
pop
mov
push
and
sti
in
fsubr
add
inc
dec
je
sbb
xor
mov
test
sbb
xchg
mov
mov
pop
sub
or
add
push
mov
and
mov
add
or
pop
or
inc
(bad)
ss
stos
retf
(bad)
cwde
and
or
xor
dec
ja
or
call
push
jb
mov
push
sbb
inc
push
jo
pop
mov
cmp
sbb
js
xor
fs
cmp
loopne
es
xchg
push
push
shr
fs
in
(bad)
and
hlt
cmp
ins
sbb
xor
sub
inc
movs
and
scas
aam
pushf
je
clc
inc
ror
(bad)
inc
shl
mov
xchg
nop
cli
outs
aam
mov
mov
je
daa
aas
add
sub
(bad)
das
(bad)
sub
add
push
sbb
mov
pop
or
or
add
adc
jb
adc
idiv
addr16
and
push
out
imul
pop
imul
fs
movs
cmp
jae
je
out
div
je
and
dec
je
jl
pop
nop
or
dec
push
mov
push
pop
mov
dec
hlt
jns
push
popa
push
mov
jbe
xchg
xor
daa
dec
std
push
shr
je
ins
sub
sub
sub
dec
outs
jp
popa
das
xor
xor
or
adc
cmc
movs
ins
add
and
and
adc
and
sub
jl
imul
jl
xor
aad
ins
xor
test
pop
mov
push
in
push
pop
pop
mov
or
js
and
adc
js
les
adc
test
aas
sbb
in
jl
add
psrad
dec
popf
cmp
popf
mov
mov
ja
push
mov
pop
xor
dec
jge
adc
in
jge
pop
sbb
jnp
fstp
add
test
xchg
inc
(bad)
retf
xor
push
call
call
inc
ret
jmp
xchg
loopne
push
mov
loopne
push
in
mov
(bad)
imul
(bad)
jo
and
jnp
iret
pop
sbb
push
lods
or
enter
dec
push
inc
shl
push
add
pop
or
inc
sub
das
mov
out
lods
sbb
pop
lods
inc
pop
adc
in
stos
neg
adc
or
mov
xlat
dec
lods
aaa
iret
dec
data16
ret
cmp
sbb
hlt
jae
pop
pop
xor
addr16
repz
or
sbb
mul
cdq
(bad)
fcmovnu
test
dec
or
or
lock
enter
jg
pop
or
jmp
ret
cmp
adc
jb
xchg
dec
adc
mov
aad
xchg
dec
js
jb
in
pushf
lods
les
xor
fadd
push
dec
dec
push
xor
test
jl
mov
xchg
retf
sbb
or
out
ret
(bad)
sahf
push
ins
mov
addr16
and
jmp
js
sub
ins
fcom
sbb
lea
shl
pop
jae
rcr
xchg
lods
ja
jbe
data16
aad
push
call
cmp
jle
mov
fsubr
xor
fs
xchg
nop
and
ins
add
js
ja
ret
mov
pop
jp
inc
out
fwait
or
inc
and
add
jl
sub
out
and
add
das
adc
push
push
addr16
loopne
test
push
pop
mov
and
xor
push
dec
inc
and
sub
fstp
and
xchg
and
and
dec
sbb
in
mov
adc
push
and
add
xor
pop
jle
xor
adc
add
pop
dec
mov
movs
inc
add
outs
outs
dec
and
push
out
inc
push
and
stos
outs
or
and
add
cmp
dec
dec
in
retf
movs
mov
dec
mov
enter
test
sub
pusha
pushf
retf
dec
mov
ror
jns
xchg
call
test
in
inc
repnz
mov
in
mov
test
jae
pop
push
dec
push
inc
or
arpl
leave
inc
call
dec
lods
mov
and
jno
mov
push
(bad)
cdq
push
and
outs
xor
dec
xchg
or
je
jo
dec
outs
push
or
cs
ins
fiadd
cs
das
push
das
inc
lea
imul
je
(bad)
and
pop
pop
dec
and
mov
xor
xor
or
leave
nop
xchg
int
mov
push
outs
add
scas
and
daa
rol
jg
arpl
sub
pop
mov
push
dec
add
(bad)
fs
and
jb
scas
add
ss
push
es
mov
mov
xor
jp
test
adc
call
adc
std
push
mov
cmp
inc
push
add
xchg
scas
xchg
test
pusha
pop
mov
or
pusha
xchg
pushf
nop
pop
push
lods
xchg
xchg
add
fadd
xchg
push
mov
push
popa
(bad)
xchg
push
in
sbb
and
sub
imul
dec
in
jmp
rol
fisub
imul
sub
pop
mov
dec
stc
mov
dec
or
std
addr16
stc
out
fcmovnb
outs
and
xor
lahf
adc
xor
or
out
das
mov
inc
call
pushf
jle
and
cmp
push
mov
mov
ds
jmp
arpl
pop
lds
pusha
sbb
push
(bad)
sub
rol
sub
mov
push
dec
jbe
inc
pop
jb
adc
inc
fs
sub
mov
loope
and
push
push
or
bound
retf
in
fmul
or
pop
adc
lock
push
adc
or
test
push
sub
iret
fidiv
pop
pop
jnp
mov
ja
dec
jmp
pop
adc
test
movlps
add
cmp
jp
rcl
mov
ds
push
jae
mov
push
mov
push
fwait
or
jmp
sub
or
jo
mov
or
mov
jbe
dec
test
movs
add
(bad)
lds
jmp
add
popa
dec
adc
push
test
or
push
in
or
lock
or
(bad)
and
fcomp
sbb
jns
sbb
pop
add
adc
aaa
lahf
das
sar
push
sbb
pop
test
sub
add
ret
mov
push
adc
or
dec
add
sub
sbb
mov
mov
pop
add
adc
and
(bad)
pop
push
cmps
outs
retf
ret
dec
wbinvd
or
daa
xchg
push
or
test
inc
sub
mov
jb
outs
call
adc
dec
push
(bad)
jl
jl
outs
or
sbb
ret
outs
xchg
sub
inc
sub
enter
sbb
sbb
bound
sbb
ins
js
fdiv
(bad)
pop
aas
or
dec
stc
dec
push
push
pop
movs
xchg
and
or
xchg
loopne
dec
lock
les
inc
je
jo
outs
pushw
fbld
push
in
mov
fwait
out
stos
aas
fs
xor
in
in
push
in
in
jl
test
in
mov
adc
iret
pop
lds
les
cmc
mov
pop
ins
in
icebp
xor
aas
sub
or
aas
pop
dec
js
ret
pop
sbb
or
and
and
inc
xchg
rol
xchg
add
jecxz
pop
add
pushf
push
fadd
fadd
adc
dec
clc
sbb
push
das
dec
pop
rol
sbb
cmp
sbb
xor
inc
mov
leave
adc
pop
push
cdq
in
inc
dec
lahf
push
sbb
popa
out
prefetcht2
in
jne
js
cmps
sub
or
and
je
mov
clc
mov
dec
jnp
push
pusha
pop
test
mov
jae
sbb
inc
adc
dec
cmp
or
add
adc
xlat
pop
test
jo
repz
sahf
pop
inc
test
je
push
add
pop
or
in
or
inc
dec
outs
adc
sub
inc
xor
mov
loope
sbb
cmp
scas
shl
lods
push
inc
push
xchg
arpl
and
or
xchg
inc
or
or
out
push
mov
adc
dec
inc
push
(bad)
outs
fisub
inc
inc
ins
add
imul
xor
dec
cmp
clc
test
dec
pop
push
add
or
aaa
or
adc
clc
fld
int
mov
pop
push
(bad)
push
mov
add
movs
jns
ret
push
add
aam
add
xchg
add
and
inc
scas
popf
mov
inc
mov
sbb
(bad)
lods
imul
out
lods
push
push
iret
es
outs
test
sub
jle
fs
or
(bad)
ret
jb
cmp
mov
movs
rol
jle
lahf
adc
add
mov
les
add
pop
dec
push
mov
xchg
push
xchg
xchg
and
es
add
fsub
into
xor
sbb
or
dec
lock
nop
ret
mov
cmp
mov
fwait
add
adc
push
or
cdq
jmp
jecxz
mov
pop
pop
xchg
adc
xchg
aad
dec
popa
push
sbb
(bad)
out
xchg
hlt
cmp
cmp
push
movs
cmp
inc
cmp
xchg
inc
shl
and
xor
xchg
or
je
nop
push
jo
mov
push
xchg
xchg
adc
gs
xchg
inc
xchg
movs
mov
jmp
cmp
dec
cmp
cdq
or
push
mov
sub
xchg
mov
(bad)
push
retf
(bad)
xchg
jbe
lds
xor
ret
leave
sub
add
ret
sar
lahf
xchg
xchg
icebp
xchg
xor
xchg
xchg
mov
mov
test
cmp
and
cmp
cmp
sti
jle
mov
mov
rol
sbb
int3
sub
fmul
fwait
mov
inc
xor
or
cld
push
mov
adc
jne
mov
xor
adc
inc
ja
popa
cmp
popa
inc
popa
xlat
sbb
push
add
jo
sub
test
mov
ffreep
ins
inc
inc
cwde
jmp
mov
xchg
mov
dec
sbb
dec
shr
aas
nop
xchg
pop
cmp
inc
es
xchg
or
aaa
fst
inc
mov
cs
fnstcw
enter
xor
or
dec
das
daa
or
cmc
push
popf
call
rol
mov
test
sbb
inc
or
(bad)
fnclex
out
movs
in
call
inc
dec
hlt
imul
movs
rcr
push
ja
je
push
or
or
fnstsw
and
test
retf
sar
sub
lea
and
mov
and
fistp
call
cld
add
adc
xchg
mul
fwait
cmp
and
mov
add
les
mov
pop
aaa
or
adc
jmp
int3
call
std
cmp
shl
inc
jmp
push
pop
scas
pushf
mov
ret
fcmovbe
ret
inc
jl
test
xchg
mov
or
jmp
cmp
push
and
sbb
or
daa
dec
fld
mov
or
ror
sub
adc
inc
sahf
clc
shl
arpl
mov
add
pop
(bad)
adc
adc
pushf
xor
inc
lahf
inc
hlt
adc
and
adc
ret
mov
pop
add
pop
or
mov
loope
xchg
out
adc
and
std
out
stc
lea
xchg
push
push
mov
ins
mov
or
aas
pop
mov
jle
les
xor
mov
enter
push
cld
mov
pop
jb
mov
mov
inc
jl
mov
mov
sub
push
jne
jb
jo
sbb
sbb
leave
or
add
xchg
lock
adc
in
jne
xor
push
mov
dec
xor
jl
das
and
xor
xchg
push
lock
(bad)
setge
sub
je
xchg
or
pop
adc
ins
add
or
jp
jecxz
jp
add
div
xor
push
jle
jle
mov
xor
test
rdtsc
movs
adc
fbld
add
retf
or
pop
cdq
cdq
lock
push
mov
out
or
push
or
clc
es
or
and
mov
nop
js
jae
pause
jne
loop
hlt
jmp
inc
mov
shl
sbb
pop
aas
inc
lock
dec
fld
xchg
(bad)
mov
popa
xor
add
adc
xor
in
imul
lods
push
pusha
cmps
pop
(bad)
nop
or
add
push
test
xor
js
adc
dec
call
ins
outs
pop
jo
jg
inc
in
aas
ret
mov
frstor
add
cs
jp
jecxz
test
xor
push
cmc
jo
stos
xor
pop
sub
sbb
(bad)
xor
rol
movs
(bad)
mov
pop
and
add
push
cdq
lods
cmps
sbb
jge
pusha
fist
add
push
je
and
lea
jne
sub
frstor
enter
jbe
mov
imul
add
enter
mov
and
sbb
cmp
mov
xchg
sub
xor
dec
loop
dec
mov
cmp
cmp
mov
jno
inc
xor
and
push
xchg
pop
xchg
imul
ds
gs
add
sbb
adc
cli
ins
sbb
test
icebp
add
or
ins
add
xor
mov
in
xlat
dec
dec
mov
jle
pop
sbb
mov
shr
lock
mov
lock
aam
mov
imul
adc
sub
(bad)
sub
pop
mov
sbb
push
lea
mov
xchg
mov
adc
mov
pop
je
mov
popa
loopne
push
jecxz
adc
jno
adc
loope
fsubr
or
ret
ss
in
iret
inc
cmps
bound
mov
popf
adc
jbe
push
fs
jl
pop
cmp
xchg
outs
push
mov
mov
movs
in
pushf
mov
gs
(bad)
inc
loop
fmul
sub
daa
mov
aaa
add
inc
outs
push
sub
or
jb
and
and
jae
jo
les
outs
and
push
les
outs
add
jmp
das
xor
xor
or
shl
xchg
and
movs
push
push
add
shl
les
adc
push
in
jg
cmps
xor
add
xchg
lea
xor
sub
mov
sbb
fcom
dec
and
adc
repnz
adc
or
push
fld
sub
or
test
int3
jnp
in
add
retf
js
inc
(bad)
mov
sbb
loopne
clc
mov
inc
cmp
call
add
jb
dec
bound
adc
pop
mov
mov
and
das
jmp
mov
(bad)
jne
dec
out
dec
dec
dec
adc
sbb
or
sub
and
test
sub
outs
jae
inc
ja
pop
dec
mov
push
loope
rol
mov
mov
js
and
push
xor
dec
dec
(bad)
ror
cwde
movs
imul
inc
lock
sub
adc
aas
imul
mov
rol
and
add
retf
push
frstor
test
mov
adc
mov
or
mov
or
pop
out
fistp
mov
sub
mov
jbe
mov
mov
mov
mov
adc
popf
ins
popa
adc
imul
mov
daa
mov
or
xor
and
push
icebp
lods
repnz
js
sub
rcr
nop
xchg
sub
xor
call
push
in
xor
in
fld
div
data16
ror
mov
imul
in
outs
popa
inc
jecxz
xchg
mov
or
add
xor
comiss
jl
adc
dec
dec
outs
push
xor
mov
bound
sub
and
cmp
xchg
pop
sub
mov
add
popa
stos
inc
sbb
xlat
sub
or
add
dec
imul
movs
les
in
add
and
sbb
ret
jb
addr16
mov
pop
ss
enter
dec
mov
lods
jno
mov
push
mov
inc
mov
(bad)
mov
inc
cmp
je
ja
xchg
ins
popa
sbb
out
xlat
and
cli
stos
fidivr
push
mov
xor
mov
jns
movs
mov
push
xchg
enter
fwait
aaa
fst
std
sbb
mov
mov
ins
mov
jmp
mov
cmp
inc
cmp
cmp
ret
fild
lds
mov
mov
or
and
jne
and
jmp
or
inc
nop
adc
pop
outs
jmp
enter
clc
jecxz
dec
shl
(bad)
or
sbb
mov
dec
mov
test
movs
ret
nop
push
ret
mov
add
adc
clc
mov
(bad)
loope
pop
jb
xchg
int
jne
test
sbb
or
js
bswap
jbe
add
xchg
pushf
pop
scas
in
clc
in
leave
loope
in
cmp
scas
rol
jecxz
sar
xchg
icebp
scas
jecxz
cmps
cmp
mov
or
add
cmp
cmp
add
pop
push
adc
cdq
or
lds
sbb
jo
inc
add
fsub
xchg
ss
pop
jbe
test
and
mov
sub
cli
fsub
leave
jae
pop
mov
add
dec
pop
sub
cmp
test
fstp
shl
adc
mov
jne
and
jne
pop
ds
in
nop
lods
repnz
xchg
movs
cmp
or
mov
ror
xchg
cmp
mov
cmps
ja
pusha
ins
adc
ins
test
adc
dec
add
icebp
pusha
and
das
dec
je
inc
fisubr
xchg
adc
lock
push
in
ja
dec
loopne
lods
lahf
nop
jmp
xchg
push
mov
sub
adc
and
test
jmp
add
mov
fcmovnu
mov
sbb
xchg
push
jae
lock
dec
mov
je
movs
xchg
fs
cmp
sbb
mov
and
or
add
shl
or
mov
cmp
addr16
repnz
pop
lea
add
sub
js
test
pop
sbb
(bad)
outs
inc
jp
fwait
pop
inc
jbe
adc
stos
lahf
mov
enter
loopne
mov
xor
lods
and
inc
sti
fisubr
jp
clc
jne
sti
xor
cmp
cmp
movs
gs
and
mov
lods
arpl
and
mov
pop
std
add
cmp
and
add
(bad)
and
arpl
and
clc
loopne
adc
sub
and
and
or
mov
and
push
mov
mov
stos
mov
push
xchg
mov
dec
add
push
jne
inc
shr
pop
ins
or
std
adc
pop
or
mov
dec
xor
dec
ds
add
or
xchg
adc
cmp
push
pop
xlat
or
sub
pop
or
sub
loopne
add
xchg
pop
pusha
mov
lock
sub
scas
cmp
pushf
test
imul
adc
push
sti
leave
lock
ret
xchg
nop
xor
or
(bad)
xchg
and
les
and
into
jl
ret
shr
imul
das
mov
ins
xchg
cmp
enter
out
mov
sbb
inc
inc
pop
repnz
or
inc
or
mov
adc
and
ficom
dec
ror
jo
push
sub
mov
rol
dec
sbb
iret
or
dec
mov
fnstenv
mov
sub
jne
mov
pop
dec
sbb
daa
pop
je
lods
lock
fnstenv
push
nop
pop
pop
mov
into
or
sub
mov
(bad)
xlat
pop
cmp
pop
nop
add
lock
and
jmp
je
dec
xchg
in
in
mov
xchg
and
call
ss
jb
push
mov
jnp
mov
inc
or
adc
mov
rcl
idiv
pop
dec
inc
inc
push
sub
sub
add
xor
xor
xchg
push
(bad)
xchg
mov
cmp
mov
adc
cmp
sub
inc
scas
adc
fisubr
pop
leave
loope
mov
loop
push
lahf
out
and
pop
push
mov
loope
cmp
mov
add
mov
push
mov
js
add
sub
and
mov
xor
daa
or
or
xlat
mov
rcr
adc
jl
sub
xchg
mov
and
sub
jmp
cmp
fdiv
jmp
adc
push
cld
pop
std
mov
push
xchg
dec
outs
popa
mov
and
test
or
sub
jnp
aas
rol
adc
in
daa
jmp
mov
jecxz
stc
cmp
jbe
mov
arpl
push
dec
adc
cmp
cmps
mov
sub
sbb
cwde
pop
push
or
shr
lods
pop
pushf
dec
sbb
adc
movs
test
cwde
shl
ror
push
fsub
test
push
mov
add
mul
scas
test
call
push
in
js
mov
and
adc
loopne
add
test
enter
jnp
pop
daa
add
xchg
fcomp
jmp
and
je
push
dec
and
shl
int3
enter
xchg
jle
in
ror
xor
inc
popf
pop
inc
and
dec
(bad)
rcl
aaa
(bad)
xlat
les
xchg
push
ror
pop
mov
sar
ret
and
dec
push
sbb
xor
mov
push
cmps
mov
cmp
pop
sub
imul
pusha
lods
cmp
and
shl
cmp
mov
inc
and
test
mov
pushf
pop
or
sub
mov
mov
or
dec
sbb
rcr
iret
xchg
sub
or
js
push
ds
dec
xchg
push
mov
sbb
mov
cmp
rcl
jl
loopne
ret
imul
pop
sub
xchg
xor
push
sbb
nop
mov
jle
imul
addr16
dec
pop
mov
ret
xor
push
sbb
pop
mov
mov
and
adc
add
inc
jb
test
mov
pop
cmp
test
pop
sub
cdq
js
inc
clc
or
rol
push
mov
dec
adc
sti
xchg
movs
cmp
inc
push
xchg
ror
adc
je
inc
icebp
push
and
adc
retf
sbb
scas
nop
pop
jns
sbb
lds
daa
jns
or
xor
ret
adc
pusha
mov
xchg
inc
mov
pop
inc
inc
inc
call
jl
mov
add
div
push
and
or
hlt
pop
out
dec
push
push
dec
iret
mov
fs
addr16
mov
push
fsub
cmps
addr16
pusha
dec
sbb
(bad)
fiadd
daa
pop
pop
cmp
or
mov
aaa
mov
xchg
mov
mov
mov
or
mov
aam
inc
push
push
add
xchg
fild
int3
ret
ret
inc
(bad)
sub
cmp
icebp
out
add
inc
movs
jmp
or
or
push
loop
inc
mov
or
ret
(bad)
push
dec
lock
jecxz
dec
frstor
mov
pop
shr
and
clc
mov
pop
mov
fiadd
clc
cs
sbb
pushf
xor
pop
shl
dec
sub
sbb
mov
xor
or
and
les
clc
push
mov
les
mov
push
or
jnp
dec
push
int3
jmp
daa
fld
mov
mov
adc
dec
inc
jno
add
call
ret
daa
lock
rol
mov
inc
mov
xchg
dec
lods
popa
clc
cwde
adc
xor
push
sbb
push
sbb
push
jnp
das
add
xchg
call
cmp
das
loop
retf
nop
cmp
adc
rcl
jle
inc
dec
out
sub
add
push
xchg
fst
and
adc
inc
dec
lea
vcvttps2dq
xchg
jmp
mov
rcr
mov
jne
jns
call
nop
inc
or
add
mov
xchg
scas
and
cwde
and
cmps
mov
pop
mov
movs
ret
in
ret
sbb
jmp
je
sbb
fs
mov
xchg
jg
in
loope
xchg
sub
cmps
loop
xchg
sub
out
xchg
push
je
repz
or
push
cmps
cmp
shl
cmp
xor
(bad)
or
sbb
xor
cmc
test
aad
mov
or
push
test
mov
imul
jecxz
or
pop
ret
sbb
pop
add
push
mov
push
pop
scas
(bad)
sbb
jmp
cmp
push
dec
xor
mov
lea
and
pop
xor
sub
enter
adc
ja
dec
jo
repnz
push
adc
pop
test
inc
ins
add
xor
scas
mov
sub
pop
push
dec
push
push
pop
leave
dec
jno
inc
adc
pop
adc
outs
dec
pop
or
mov
cmp
sub
outs
sbb
sub
sbb
imul
loopne
stos
add
pop
imul
cwde
mov
and
int
sub
and
cdq
sub
ror
fdivr
out
and
push
pusha
retf
cmp
fisubr
iret
pop
cmp
sbb
and
add
movs
xor
gs
dec
jne
sar
lds
sbb
pop
adc
sbb
xchg
push
adc
pop
pop
data16
sub
dec
and
xchg
cs
cmp
fbld
es
(bad)
mov
mov
mov
mov
test
int3
xor
mulps
retf
mov
and
popa
or
or
mov
jcxz
mov
lock
rol
add
mov
mov
jl
push
xchg
mov
arpl
mov
push
inc
add
mov
in
push
push
in
jo
fcmovnb
adc
mov
loopne
je
mov
mov
ret
addr16
cmps
inc
add
lods
dec
les
ror
les
ins
jne
gs
ins
je
int3
push
loop
shr
popa
jae
(bad)
mov
mov
js
inc
mov
fst
ins
xchg
cmp
enter
int3
js
int
fadd
pop
pop
pop
inc
add
mov
inc
dec
jmp
xor
sub
pop
sub
in
(bad)
dec
test
or
or
adc
mov
mov
and
xor
add
pop
or
pop
jo
aaa
in
das
cmp
idiv
fcomp
and
or
es
aad
sub
retf
inc
lods
xor
sbb
ss
and
movs
ret
rol
jo
xchg
push
addr16
outs
mov
call
mov
sbb
sbb
outs
aas
sub
mov
adc
hlt
fwait
sbb
call
push
je
in
ret
adc
popf
and
adc
or
rcl
lahf
dec
mov
je
mov
(bad)
fs
lods
inc
jno
dec
enter
mov
int3
je
push
idiv
shr
adc
inc
inc
lahf
in
pop
dec
loopne
mov
imul
cmp
mov
and
mov
jo
mov
jne
not
xchg
cmp
add
fdiv
jnp
fsubr
pop
es
or
adc
jb
sub
fnstenv
push
or
in
fmul
loopne
push
xor
or
cmps
adc
push
push
pushf
xor
mov
mov
in
lock
lds
sub
(bad)
sub
cmp
fs
ret
lock
imul
data16
sbb
push
lock
adc
lds
leave
mov
inc
push
dec
or
or
sub
mov
add
push
inc
pop
push
xor
pop
pop
fwait
jl
dec
loope
ret
je
sbb
mov
jbe
cdq
clc
cld
cs
pop
jmp
xor
cmp
inc
cmp
or
add
lods
jge
pushf
dec
in
lods
ret
inc
in
rcr
pop
je
mov
es
add
clc
xlat
sub
sbb
loopne
xor
xor
cmp
xchg
cmp
pop
xor
je
fcom
jle
inc
ficomp
inc
repz
sar
push
pusha
mov
mov
sbb
stos
dec
mov
mov
or
mov
or
mov
(bad)
push
sbb
mov
aam
aad
movs
jecxz
aas
xor
push
in
push
push
das
in
ror
and
jmp
cld
clc
inc
xor
call
push
sub
push
sti
mov
cmp
and
ja
or
mov
sbb
call
mov
leave
fadd
in
sar
jno
cdq
aam
adc
ins
idiv
dec
fsubr
or
sbb
in
loop
fmul
pop
rcr
push
rcl
jge
fcomp
adc
xor
aam
cmp
xchg
add
outs
jmp
fcomp
or
fdiv
add
aas
jo
jno
sub
(bad)
xor
inc
pop
mov
adc
ret
adc
mov
xlat
(bad)
dec
ret
inc
add
mov
imul
xchg
inc
xlat
cmp
push
or
ins
out
mov
cmp
leave
in
and
cld
inc
fld
dec
in
xchg
je
daa
jae
sbb
cmovg
sub
ret
mov
sub
je
lahf
aaa
imul
imul
or
xor
(bad)
fisttp
pop
add
call
aad
jmp
sub
xchg
cmps
loopne
in
clc
ss
cld
push
(bad)
jno
leave
or
in
jne
sub
aam
push
sub
es
js
xchg
add
cmp
push
(bad)
imul
inc
ins
pop
in
inc
or
push
mov
ficom
jo
inc
jge
lock
cmp
hlt
hlt
ret
test
push
hlt
outs
add
jne
pop
lea
in
sub
push
rcr
and
ins
dec
and
dec
push
cdq
pop
sub
cs
inc
inc
push
jbe
dec
mov
xchg
out
hlt
movs
push
fdiv
stos
adc
clc
sar
rol
jbe
sub
mov
in
mov
cmps
fild
or
and
xchg
or
adc
or
nop
inc
inc
adc
daa
mov
scas
out
in
add
xor
cmp
push
enter
and
leave
ret
inc
dec
pop
loop
jge
sbb
or
lods
ror
inc
inc
push
lock
xor
mov
cmp
in
adc
call
shl
(bad)
jb
jns
pop
inc
and
shl
in
inc
mov
pop
jne
sub
and
call
lods
mov
adc
leave
or
add
bound
push
xchg
cmp
push
dec
lock
int
jmp
xor
dec
mov
shr
dec
jnp
loope
fsubr
xchg
cmp
or
es
adc
int3
push
loopne
push
push
shl
js
sub
jecxz
ja
movs
dec
xor
mov
mov
push
and
or
loop
out
rol
mov
ror
mov
mov
cbw
fiadd
jle
xor
or
leave
xor
add
loop
movs
sbb
add
in
push
mov
add
cli
call
nop
stc
jmp
in
movzx
loopne
movs
jns
sahf
ret
or
or
jae
cs
call
call
mov
sub
mov
imul
dec
aas
mov
outs
outs
push
ror
jae
fild
mov
or
and
xchg
test
stc
add
and
lods
sub
in
mov
pop
mov
adc
mov
outs
out
mov
jge
jb
adc
or
cmp
push
adc
in
popf
xor
ja
xchg
gs
call
pop
fs
inc
fidivr
xchg
es
and
lahf
sbb
loopne
fsubr
daa
daa
fcom
int3
arpl
test
mov
sub
or
or
mov
f2xm1
mov
mov
cmc
fcomp
pop
loope
lods
iret
mov
cmp
jl
or
mov
faddp
fdivr
fistp
pusha
fsubr
sbb
lds
fcomp
push
fcom
xor
mov
push
jmp
mov
ret
int3
inc
jecxz
arpl
push
push
inc
in
mov
in
in
add
xlat
in
jb
loopne
add
aam
jb
daa
xchg
aam
aam
sbb
shl
mov
push
aam
and
movzx
(bad)
in
xchg
sub
mov
nop
mov
jmp
xor
mov
test
sbb
aam
and
fdiv
push
dec
arpl
pushf
jo
push
and
pop
push
adc
sar
lock
stc
xchg
clc
mov
pop
int3
shl
retf
add
je
pop
rol
adc
into
je
inc
jo
or
sbb
in
in
or
(bad)
(bad)
dec
or
movs
dec
movs
push
and
retf
hlt
jmp
xchg
dec
adc
push
dec
imul
cmps
or
in
popa
fwait
sahf
dec
push
repnz
popa
pop
sub
add
dec
(bad)
cmp
call
ja
dec
sbb
in
sti
xchg
arpl
(bad)
call
mov
pop
outs
das
mov
inc
lock
cmc
jmp
push
sub
loopne
fnsave
psrld
test
and
es
bound
daa
pushf
cmc
rcl
call
dec
mov
fdiv
sbb
enter
ror
or
sbb
std
ja
mov
jge
jg
pop
add
mov
push
iret
fcos
adc
xchg
mov
sub
and
pop
sahf
jno
push
adc
xchg
dec
stos
dec
and
lods
push
dec
adc
jmp
in
push
out
sub
inc
in
(bad)
mov
and
add
add
bound
imul
mov
jnp
out
jno
mov
sub
pop
mov
pop
in
repz
xor
dec
and
icebp
sub
in
loop
jne
movs
cmp
in
idiv
ss
adc
sahf
inc
fcmovne
rol
test
nop/reserved
lock
xchg
inc
pop
test
retf
mov
ret
out
jnp
ins
inc
pop
rol
jp
mov
jmp
or
sub
and
add
sar
push
aad
dec
mov
out
addr16
cdq
pusha
and
leave
leave
cld
xor
cmp
ret
sbb
clc
sbb
jge
xor
dec
mov
les
push
movs
fmul
add
mov
add
mov
jl
std
int
ret
jno
pusha
lock
and
sub
test
sub
or
mov
gs
arpl
jmp
mov
dec
mov
jle
mov
out
pop
jecxz
int3
(bad)
nop
xchg
cmp
dec
jne
pop
in
sub
cmp
dec
adc
mov
mov
and
outs
loope
jns
out
dec
dec
dec
xlat
scas
loop
dec
add
push
mov
and
and
test
stos
test
not
(bad)
cmps
sbb
jnp
jmp
rcl
cmp
fisubr
jge
add
dec
test
cmp
jle
and
js
or
repnz
and
add
ficomp
push
(bad)
call
repnz
jb
fwait
nop
mov
jg
cld
add
cld
imul
mov
xchg
pop
dec
or
push
inc
dec
mov
sbb
adc
mov
jb
pusha
dec
add
xor
icebp
xor
sbb
add
hlt
and
inc
jb
fisub
bound
clc
mov
mov
shr
scas
mov
mov
cmp
stos
out
call
daa
out
adc
or
add
cmp
dec
sbb
ud2
adc
mov
inc
sbb
idiv
fcmovbe
pusha
inc
dec
push
adc
jecxz
lods
imul
sti
lods
or
cmp
test
adc
mov
add
lds
add
sub
mov
mov
fnstcw
lods
jne
add
inc
pop
and
inc
adc
and
imul
dec
pop
hlt
add
inc
or
adc
or
dec
add
loopne
add
adc
jne
vmread
or
in
mov
ss
mov
pop
mov
cwde
jmp
inc
inc
bound
mov
bound
call
test
fisttp
fmul
jg
add
jo
add
jmp
test
jmp
jo
jo
jbe
add
xor
fmul
adc
ds
fcom
mov
call
push
in
xor
inc
dec
pop
sbb
inc
xchg
int3
add
call
movs
push
sbb
pop
inc
mov
shl
dec
xor
call
pop
(bad)
mov
das
inc
outs
cmc
sbb
cs
stos
sub
push
fldcw
jne
adc
mov
add
in
sbb
popf
mov
sbb
fucomp
out
or
inc
inc
or
or
adc
xchg
cwde
mov
and
xor
(bad)
clc
cmp
icebp
dec
test
sbb
push
adc
mov
adc
add
out
pushf
mov
test
mov
das
aas
or
test
int
cmp
or
add
(bad)
jmp
and
pop
(bad)
xchg
and
mov
sub
retf
sub
out
out
sub
add
cmp
dec
(bad)
nop
mov
and
add
cmp
cmps
call
xchg
adc
add
icebp
imul
aam
ss
retf
jns
mov
jno
loopne
add
pop
int3
push
add
(bad)
add
or
add
in
pop
xor
inc
mov
adc
data16
imul
add
sub
add
addr16
mov
inc
icebp
into
lock
xchg
rcr
pushf
enter
jb
dec
in
add
clc
xor
push
mov
jb
add
mov
xchg
add
mov
mov
outs
jg
aad
out
and
imul
adc
dec
xchg
or
daa
add
and
inc
movs
xor
(bad)
fiadd
popa
lahf
dec
out
pushaw
xchg
or
iret
mov
mov
inc
sbb
xchg
xor
xor
pop
and
cmp
mov
add
push
inc
dec
sbb
add
push
ret
add
and
dec
xor
add
pop
into
pop
or
cmp
repnz
xor
xchg
loope
daa
cmps
jecxz
mov
jge
add
jecxz
shl
add
add
xor
add
pop
add
or
push
inc
popa
xlat
dec
add
(bad)
fmul
add
or
add
xchg
daa
or
add
add
dec
or
add
(bad)
das
adc
cmp
out
clc
xchg
mov
pop
mov
dec
or
add
ficom
not
mov
add
out
add
and
inc
add
pop
cwde
popa
mov
sbb
(bad)
push
xor
fstp
sub
push
or
fst
sbb
dec
ja
mov
or
imul
scas
push
or
sbb
mov
clc
repz
inc
or
xchg
xchg
dec
hlt
hlt
push
sbb
pushf
or
sbb
inc
adc
js
rol
sub
xor
aam
jmp
sbb
push
xor
mov
pop
xor
mov
adc
add
sub
add
sbb
rol
(bad)
pop
xor
xor
cmp
pusha
sub
mov
dec
cmp
pop
dec
test
add
jmp
pop
push
mov
sti
mov
mov
sbb
fs
cmc
xchg
pop
inc
fiadd
lods
jp
call
sub
sbb
adc
sbb
add
push
outs
xchg
enter
aad
sub
add
sbb
cmp
sub
xor
inc
xor
or
das
cmp
add
or
lea
cmp
rcl
xlat
inc
inc
inc
xor
aad
and
or
add
push
add
das
xor
shl
jmp
cmp
mov
or
mov
xchg
outs
and
test
and
push
xor
adc
lea
in
pop
adc
push
add
shl
cmp
xchg
pushf
or
xlat
pop
or
add
nop
add
or
add
adc
xlat
sbb
sub
and
mov
add
xor
xlat
pushf
or
add
aad
or
jo
aad
cmp
and
or
add
lods
or
mov
mov
or
xlat
or
and
lea
xor
mov
or
sbb
cmc
sbb
push
mov
repz
or
push
xor
jge
push
popa
imul
leave
enter
xchg
movs
ins
lods
(bad)
jnp
adc
cmc
loopne
inc
xchg
cmps
pop
add
add
inc
xor
xchg
test
test
and
and
idiv
mov
xor
neg
cmp
xor
add
dec
test
xchg
jo
mov
or
mov
add
fcomp
or
call
test
or
call
jno
(bad)
sti
dec
inc
rcl
or
rol
fs
pop
out
(bad)
(bad)
imul
(bad)
imul
(bad)
fcmovnb
repz
adc
sub
sbb
add
mov
ret
outs
push
fs
cmp
fptan
add
xor
out
push
mov
and
pop
mov
cdq
adc
fwait
add
push
pushf
inc
or
gs
xchg
loopne
pop
int3
cmp
fadd
and
pop
shl
sub
lods
add
js
inc
xchg
or
push
fsubr
sbb
and
jmp
push
mov
out
and
or
in
dec
ret
stos
in
sub
in
jp
adc
dec
and
mov
scas
lds
enter
dec
or
inc
xchg
movs
adc
js
pop
adc
adc
mov
cmovno
inc
or
jecxz
sub
shl
inc
xchg
popa
sub
enter
or
sahf
(bad)
es
push
clc
or
push
add
push
xchg
cmp
fs
lock
sbb
sub
and
outs
cmp
dec
bound
add
movnti
jge
inc
jb
outs
mov
test
in
inc
es
gs
shl
sbb
movs
push
push
mov
push
and
inc
ror
(bad)
mov
jg
arpl
ret
lods
cmp
push
mov
sub
ret
inc
push
mov
aad
push
lods
dec
(bad)
(bad)
das
sbb
std
test
mov
cmp
inc
pop
je
inc
inc
das
push
adc
test
and
push
or
test
inc
test
cmc
jnp
test
fst
add
push
or
aad
push
lahf
mov
repnz
sbb
xchg
adc
dec
sbb
mov
xchg
(bad)
stos
sub
sbb
xor
push
jnp
pop
or
(bad)
retf
fwait
call
aad
dec
rol
in
adc
sbb
cmp
inc
retf
sahf
dec
mov
xor
iret
mov
xor
icebp
pavgw
sub
add
in
jne
xchg
(bad)
sbb
call
dec
jne
retf
push
sub
neg
jmp
mov
or
push
(bad)
ss
fmul
jmp
ret
xchg
and
retf
jg
clc
or
fdiv
sub
iret
dec
sbb
cmp
inc
out
jae
xor
xor
and
pop
push
jns
popf
adc
and
ret
out
dec
ins
mov
pushf
icebp
adc
xor
or
jmp
or
loopne
mov
pop
es
mov
ins
add
clc
xor
pop
push
mov
xor
dec
test
js
int3
jg
push
inc
xor
das
bound
push
sets
and
cmc
adc
inc
in
mov
outs
or
cmp
test
fimul
sub
mov
sbb
add
dec
loopne
cdq
and
push
adc
cmp
mov
addr16
mov
call
or
inc
inc
inc
jbe
push
in
add
dec
xor
push
in
and
add
in
xchg
out
add
add
xchg
cmp
fs
lock
push
and
inc
jb
icebp
pop
(bad)
sbb
xchg
stos
cmp
es
xchg
test
das
mov
imul
or
push
in
dec
jmp
test
mov
inc
jmp
mov
rcr
mov
and
add
inc
adc
cdq
in
rcl
fld
outs
popf
enter
add
add
out
enter
add
sbb
daa
adc
add
add
add
add
add
enter
add
pushf
repnz
call
pop
jp
jmp
or
lahf
test
xchg
push
test
add
adc
xlat
lods
dec
xor
push
icebp
mov
adc
sti
adc
mov
mov
xlat
add
add
add
hlt
cs
sbb
test
in
push
cmps
aad
leave
inc
lea
sub
js
cmp
in
call
scas
jmp
dec
add
sbb
add
xor
sub
mov
dec
mov
mov
cld
adc
das
dec
jmp
dec
ja
mov
jmp
xor
mov
jmp
mov
mov
pminub
ficom
cmp
repz
mov
enter
fst
dec
nop
sbb
rcr
xor
nop
dec
push
or
xor
fsubrp
in
aam
add
das
pop
dec
test
jo
sub
mov
mov
call
cs
scas
push
inc
imul
std
dec
sahf
adc
add
add
inc
repz
xor
outs
pop
lods
inc
jne
and
mov
inc
push
stc
fdivr
(bad)
retf
push
pop
popf
ffree
fmulp
inc
pop
jae
push
add
add
fadd
lock
adc
xor
jb
dec
push
inc
jns
inc
mov
in
inc
adc
loopne
dec
repnz
xchg
xchg
add
dec
sub
push
aam
inc
shl
inc
enter
loope
ret
pop
jmp
jg
movs
lds
lock
adc
lock
cmp
stos
lea
shl
mov
shl
push
mov
push
add
jl
repnz
add
add
add
inc
cmp
xor
sbb
sbb
out
jno
jmp
inc
aas
scas
sbb
mov
aas
push
das
jl
or
aaa
mov
mov
loopne
or
(bad)
test
sti
adc
retf
into
in
or
xor
cmp
les
push
hlt
mov
test
lea
or
jne
mov
adc
mov
pusha
or
mov
scas
fs
in
pushf
(bad)
mov
push
jno
aam
jns
and
loop
push
enter
or
xor
enter
push
adc
adc
je
add
ret
pop
in
call
add
mov
out
shl
jbe
lock
lock
mov
das
add
imul
mov
ret
call
pop
sti
dec
mov
jo
jecxz
js
(bad)
aaa
jle
inc
inc
sbb
movs
xchg
ja
or
pop
stos
clc
dec
jge
movs
clc
pop
popf
outs
add
jmp
shr
jbe
jg
add
ud2
or
imul
push
or
sub
mov
das
mov
inc
add
nop
and
call
sbb
and
sub
pop
in
(bad)
dec
jne
fsub
mov
lock
pusha
jmp
mov
ins
push
jmp
mov
mov
pushf
and
pop
inc
ud1
jg
and
push
js
inc
jg
fs
or
cdq
and
fs
or
add
adc
and
sbb
xchg
xchg
dec
sbb
hlt
mov
dec
or
xchg
adc
mov
cmp
add
or
(bad)
mov
or
and
arpl
int
push
loopne
and
adc
jg
jle
cs
cmp
xchg
xchg
sub
ret
jle
push
mov
mov
dec
pop
cmp
dec
inc
sub
mov
lock
lahf
adc
inc
jne
adc
mov
xchg
nop
sub
test
fisubr
in
mov
push
cmp
dec
clc
nop
or
lock
mov
add
sub
push
sub
lods
jb
dec
mov
adc
popa
aaa
das
dec
js
inc
pop
dec
xchg
cs
or
shl
push
mov
enter
dec
mov
loopne
jmp
pop
sbb
cli
pop
and
cmp
add
dec
pop
(bad)
push
pop
repnz
and
(bad)
and
mov
mov
push
or
pop
push
pop
adc
jp
xchg
fistp
sbb
sub
inc
in
sbb
push
sub
pop
adc
retf
in
out
(bad)
aam
aaa
mov
sub
cmc
add
xor
imul
ins
mov
dec
mov
push
sahf
fdivp
mov
xchg
cmps
push
mov
sub
pop
add
sbb
clc
jns
lea
pop
sbb
xchg
(bad)
inc
in
inc
cmp
jb
push
mov
mov
das
jle
mov
mov
pop
enter
mov
inc
cs
fcom
shl
arpl
xchg
add
pop
scas
cdq
pop
add
or
mov
mov
sub
js
xchg
outs
or
jmp
adc
or
jo
leave
int
in
push
popa
nop
outs
stc
and
add
add
push
out
pop
sbb
push
popa
pop
push
jmp
mov
adc
and
mov
cmp
inc
mov
push
push
inc
pop
adc
rcl
mov
or
inc
std
mov
jmp
pop
add
imul
or
lea
fdivr
sbb
ins
or
pop
adc
cli
call
jecxz
(bad)
cmp
jae
push
cmp
adc
cli
mov
mov
in
adc
cmps
lea
pusha
push
cs
adc
sbb
or
rcr
jne
or
test
or
lahf
movs
xchg
xor
in
nop
add
push
add
and
int3
mov
add
push
rol
loope
add
(bad)
out
cs
add
dec
cmp
psrld
cmps
push
mov
xchg
sbb
push
out
fcom
inc
inc
enter
sub
push
add
sbb
xor
push
inc
and
xor
xchg
aaa
in
dec
mov
mov
out
or
jp
add
dec
(bad)
dec
daa
data16
cli
jl
rcl
xchg
jnp
xor
call
shl
bound
addr16
push
pusha
inc
fcomp
scas
data16
or
mov
int3
jne
js
add
or
adc
inc
clc
or
mov
push
sbb
imul
jl
xlat
lods
pop
cmc
push
inc
stos
hlt
sbb
add
pop
bound
sub
enter
out
outs
(bad)
and
xchg
dec
mov
xor
pop
xor
pop
adc
sbb
pop
adc
pop
adc
pusha
aaa
xor
cwde
inc
add
or
stos
add
add
ins
movs
es
ss
or
mov
or
or
stos
lods
fs
pop
push
pop
jb
aad
daa
pop
adc
pop
adc
pusha
inc
add
xchg
add
add
inc
sub
(bad)
scas
mov
mov
lea
out
add
and
lods
dec
dec
cmps
in
test
xor
pop
inc
scas
xchg
dec
pop
mov
loope
cld
mov
outs
es
inc
push
sar
xchg
iret
and
adc
sbb
xchg
sahf
or
out
mov
movs
stos
movs
in
out
lock
jb
push
jb
in
jmp
hlt
adc
xchg
or
xchg
xor
xor
or
mov
lock
add
hlt
mov
xchg
daa
lock
xor
fsubr
pop
push
and
dec
popf
mov
sbb
mov
popf
call
xchg
in
ficomp
mov
in
pop
xor
fcomp
pop
dec
jmp
call
mov
loopne
lods
out
push
jb
das
lahf
fcomp
add
adc
imul
shl
in
jae
push
in
call
in
adc
test
cmps
fiadd
jns
ds
aad
and
daa
and
xchg
jge
sbb
pop
push
dec
adc
arpl
gs
push
add
mov
rol
mov
add
dec
mov
arpl
gs
inc
mov
nop
(bad)
clc
nop
(bad)
pop
and
or
pushf
adc
and
int
sub
in
cmps
mov
sahf
mov
jae
mov
pop
add
and
cmc
mov
and
xor
and
xchg
add
adc
popf
mov
inc
imul
in
mov
add
add
clc
xor
mov
sbb
mov
adc
inc
sbb
(bad)
cld
nop
xchg
rcl
push
es
sbb
fld
test
xor
add
pusha
add
jae
arpl
lock
and
mov
and
and
mov
fild
loop
pop
xlat
in
inc
leave
mov
adc
pop
sub
mov
loopne
or
rcr
mov
adc
or
cmps
xchg
je
or
add
add
push
mov
in
mov
fist
fprem
iret
rol
adc
cmp
push
xchg
or
mov
lock
cli
rol
push
imul
inc
pop
or
sbb
mov
sub
inc
imul
xor
push
cld
sub
fdivp
repnz
daa
push
fdiv
jl
shl
sbb
div
xchg
fcmovu
sbb
sub
retf
cld
fisub
sub
cli
fcomp
in
add
mov
push
test
jbe
shl
neg
and
pop
sti
ret
imul
add
cmc
jne
xchg
cmp
in
jmp
xor
jle
mov
cmp
cmp
sbb
jo
aam
xchg
or
push
mov
scas
sbb
sbb
imul
mov
mov
push
js
mov
fnsave
ins
and
mov
das
xchg
jmp
and
addr16
pusha
in
out
xor
adc
adc
lock
imul
inc
dec
adc
add
mov
inc
mov
dec
add
adc
adc
sub
outs
jl
and
mov
mov
add
fcomp
hlt
add
out
lea
inc
cmp
fwait
jbe
adc
push
fs
bound
pusha
addr16
jle
sub
in
and
push
cld
ins
push
scas
inc
call
push
add
xchg
push
push
gs
in
fadd
mov
dec
dec
push
or
add
outs
sub
imul
xchg
pop
outs
or
push
mov
mov
hlt
add
repnz
hlt
add
cmp
mov
push
rol
cmp
adc
daa
scas
and
mov
(bad)
and
xor
sahf
pusha
fsub
xor
and
add
adc
call
jns
and
mov
xchg
stc
out
add
adc
iret
std
adc
push
lods
jg
(bad)
sbb
push
in
cmp
fidiv
or
in
out
cdq
test
ds
js
xor
lock
and
mov
xor
inc
shl
push
pop
retf
add
xor
sub
cmps
and
mov
cmp
sbb
add
in
nop
sub
adc
and
daa
shl
dec
push
mov
lds
loope
jle
xor
hlt
in
add
xor
push
test
inc
inc
sbb
fsub
stos
loop
stos
cmp
mov
adc
cmc
shl
(bad)
or
pushf
mov
pop
repnz
lds
lahf
test
cwde
js
jmp
dec
jno
nop
cmp
xor
mov
popf
cmp
sub
or
mov
hlt
cmp
pop
mov
jne
outs
lds
cmps
sbb
std
cld
push
fimul
mov
(bad)
push
pop
nop
mov
jge
pop
dec
lods
and
mov
cmp
cmp
xor
lods
adc
sub
adc
sub
xor
or
dec
neg
push
or
dec
jecxz
arpl
add
(bad)
cmp
mov
xchg
popf
das
adc
xor
ss
adc
jb
lea
push
das
xor
hlt
add
sbb
sar
scas
mov
enter
jle
dec
mov
sbb
(bad)
lods
add
into
data16
ins
pop
out
pop
push
inc
(bad)
movs
test
and
mul
mov
inc
mov
outs
adc
xor
mov
jg
xchg
sbb
inc
cli
push
lahf
add
mov
ficom
sub
jne
cmc
pop
or
mov
out
and
ja
ficomp
and
mov
and
in
ja
and
mov
adc
fs
(bad)
ss
lea
xor
and
sub
jmp
inc
out
popf
mov
xchg
clc
push
add
push
pusha
cmp
inc
inc
pop
add
pusha
pop
loop
pop
sbb
scas
jno
push
aaa
or
pop
add
loopne
lods
mov
cld
or
or
daa
or
cld
mov
shr
add
inc
js
and
mov
popa
addr16
inc
test
push
lock
adc
mov
inc
add
ss
arpl
in
into
enter
out
push
das
sar
sbb
sub
jns
gs
out
call
mov
fs
sub
out
lock
add
push
inc
bnd
je
or
jne
popa
imul
add
adc
inc
pop
test
sub
push
pop
sub
pop
mov
cmps
mov
hlt
mov
xor
push
cmp
movs
lock
push
jo
and
or
call
or
loop
sub
imul
bound
fs
inc
mov
in
jg
push
icebp
adc
call
cmp
(bad)
in
push
ret
mov
leave
ret
or
and
stos
add
jmp
sub
cs
add
(bad)
xchg
adc
nop
adc
sbb
mov
std
test
jns
imul
lds
jp
cmp
lea
inc
or
cmp
xor
xor
scas
(bad)
je
sahf
mov
in
mov
sub
mov
jno
(bad)
fimul
(bad)
loope
outs
xor
pop
xchg
(bad)
in
stos
(bad)
xor
or
sbb
jmp
or
les
jecxz
rcl
stos
pop
mov
retf
and
push
pop
and
in
sub
adc
xchg
lods
ret
loopne
and
mov
jo
ret
(bad)
mov
mov
in
(bad)
cdq
push
mov
xor
nop
in
push
mov
jecxz
into
mov
mov
dec
adc
out
xchg
movs
pop
xor
or
xchg
sbb
adc
sbb
mov
rdpmc
or
mov
js
cmp
das
aam
push
or
add
push
add
popf
adc
cmp
sub
push
fidivr
dec
cmps
mov
ins
fisttp
test
mov
iret
push
xchg
inc
push
ret
adc
mov
scas
mov
mov
jo
cmp
fcomp
lods
sbb
adc
sbb
xchg
or
fs
sbb
in
or
iret
cmp
inc
cwde
or
mov
fcomp
movs
add
(bad)
neg
rcr
nop
cdq
repnz
sub
cmp
pop
add
cwde
push
sub
(bad)
or
cmp
cdq
or
or
adc
cmp
xlat
sbb
and
or
mov
inc
cmp
dec
pop
sbb
adc
xchg
sbb
or
adc
fild
add
and
xlat
or
in
ds
xlat
add
in
sbb
nop
xchg
mov
or
or
fmul
or
or
sbb
inc
iret
test
add
inc
jecxz
repnz
dec
test
add
in
sub
test
add
cmps
dec
loop
push
mov
inc
inc
push
dec
xor
mov
add
push
and
bound
push
xchg
adc
shl
adc
dec
xchg
mov
mov
iret
sub
push
sbb
and
pop
mov
add
lahf
das
cmp
adc
or
repnz
push
jo
pop
cld
outs
jecxz
push
enter
cld
mov
sub
out
mov
xchg
lock
mov
and
jp
ficom
add
popa
ins
pusha
mov
add
mov
or
(bad)
jne
movs
jne
and
imul
mul
mov
jp
call
clc
xchg
aaa
test
or
add
(bad)
outs
inc
fmul
mov
aam
xchg
mov
adc
mov
enter
jge
out
popa
loope
mov
sar
loopne
out
jnp
clc
cwde
inc
sbb
dec
add
jnp
or
adc
nop
add
sbb
lods
mov
or
cmp
xor
inc
adc
xor
add
cmps
adc
sar
jne
lock
js
dec
cdq
loop
cli
cwde
leave
or
lods
mov
fsub
pushf
push
dec
dec
popa
jb
xchg
in
xor
adc
shr
and
xor
cmps
inc
and
and
xor
add
cmp
jle
dec
sti
mov
inc
add
xor
add
jg
fist
dec
lods
aas
pop
fcomp
lods
test
or
sub
or
dec
jp
xchg
ins
bound
cmps
mov
sub
cli
sbb
mov
and
and
in
or
push
jnp
fimul
sub
fidivr
sbb
mov
jne
or
xchg
(bad)
adc
clc
mov
cmps
ja
push
pop
sbb
push
ror
pushf
pop
push
or
pop
(bad)
or
das
mov
jge
add
nop
sbb
shl
call
pop
mov
cmp
aam
popf
jmp
add
xchg
ror
addr16
pop
lock
adc
pop
rol
sbb
push
pop
add
add
adc
and
je
outs
and
out
test
cmps
das
or
out
cdq
push
fcmove
add
icebp
(bad)
sti
ror
in
xor
shr
or
and
in
icebp
rol
repz
xor
mov
inc
(bad)
pop
push
pop
repnz
push
push
or
popa
sbb
cmp
or
test
fdivr
dec
mov
call
out
sbb
shr
in
gs
repnz
es
jo
dec
loopne
mov
mov
lea
aaa
int3
xor
mov
loopne
ins
aaa
aas
lock
xchg
ss
bnd
repnz
or
mov
mov
mov
mov
xor
ja
daa
stc
data16
loope
sbb
mov
ret
push
pop
in
sbb
pop
push
loopne
sub
shr
push
jg
add
cmp
popa
aas
mov
push
fdiv
daa
inc
mov
aam
icebp
adc
dec
mov
cmp
push
pop
inc
inc
shr
ins
mov
dec
(bad)
dec
rcl
xor
pop
sub
out
in
rol
fcomi
sbb
cmp
inc
retf
add
or
adc
sahf
jle
cmc
fdiv
jle
mov
sar
mov
sbb
push
jge
jae
sbb
push
fisttp
jle
call
xchg
pop
jne
fistp
cdq
sbb
stos
xor
jge
(bad)
add
call
sub
cmp
inc
adc
nop
fild
retf
jg
shl
aad
cmp
(bad)
mul
adc
cmp
mov
pop
push
cmc
clc
or
add
cld
mov
or
adc
sub
mov
mov
mov
dec
sub
or
mov
add
adc
pop
mov
(bad)
pop
pop
inc
sub
jbe
ds
xlat
push
push
nop
xchg
adc
cdq
pop
in
fcmovb
addr16
test
nop
out
mov
es
sub
mov
push
add
dec
xchg
fbstp
cli
nop
add
push
mov
ds
int
push
mov
arpl
dec
pop
adc
shl
mov
mov
or
jbe
add
push
add
pop
ret
into
pop
out
and
and
sbb
sbb
sub
or
add
daa
and
call
dec
adc
mov
mov
pop
mov
mov
fwait
or
push
xchg
mov
pop
push
pop
dec
jnp
push
mov
pushf
add
dec
iret
jns
and
and
add
or
push
sub
inc
dec
clc
dec
sbb
ret
adc
dec
rol
and
inc
lods
mov
sbb
sub
or
sub
or
inc
jle
adc
sub
mov
mov
add
movs
adc
or
inc
dec
and
add
lds
or
adc
aaa
rol
loopne
dec
xchg
movs
mov
adc
(bad)
dec
cwde
imul
and
(bad)
jno
mov
lea
xchg
mov
push
add
ins
mov
fiadd
sbb
add
adc
or
or
cmp
mov
dec
pusha
xchg
popa
les
loop
dec
cmps
sbb
sbb
jo
xor
js
push
imul
jg
xchg
push
or
push
jmp
add
sbb
clc
adc
jl
popa
cs
adc
clc
add
sub
mov
aad
ss
add
scas
nop
mov
call
and
jl
test
or
adc
add
pop
(bad)
and
test
pop
mov
bound
cmp
and
cmps
cmp
dec
fimul
mov
popa
inc
sub
cmp
(bad)
call
imul
push
in
cmps
and
adc
push
push
xchg
xor
out
idiv
mov
lds
or
mov
or
lods
jo
and
xor
je
pusha
xor
jmp
and
sbb
arpl
and
inc
sbb
int
rol
cmp
xor
xchg
or
push
jge
adc
mov
xor
pop
or
cmc
into
es
and
out
sub
fcom
shr
push
dec
xor
sbb
out
in
push
add
adc
mov
inc
pop
das
inc
mov
push
cmp
adc
imul
push
pop
cld
inc
(bad)
cwde
mov
ss
arpl
pop
and
and
lss
into
aam
adc
dec
push
(bad)
fsubrp
push
enter
push
mov
dec
shl
cmp
aad
aam
shl
pushf
ror
ja
lock
or
add
aas
pop
sbb
push
bound
sbb
or
pop
mov
jp
adc
jb
push
mov
ins
cmps
mov
add
sbb
mov
push
cmp
out
inc
(bad)
es
add
and
and
sbb
adc
dec
cmp
js
test
push
inc
mov
jle
push
lock
sub
sub
dec
mov
jo
ins
jp
rol
les
adc
test
jo
sub
call
add
adc
sbb
add
add
popa
nop
mov
sbb
cmp
pop
call
sbb
cmp
mov
and
sbb
int
outs
mov
test
pop
add
pop
cmp
pop
fadd
add
push
adc
jmp
sub
fstp
shl
inc
inc
outs
lock
add
rol
push
add
pop
push
inc
dec
test
push
fimul
mov
pop
and
pusha
push
sbb
sbb
add
jb
push
lock
nop
pop
rol
dec
mov
in
test
ja
and
push
add
imul
xchg
lock
push
ret
repnz
lock
inc
push
cwde
dec
jl
push
jg
dec
shl
pushf
pop
popa
mov
ret
mov
mov
call
jmp
call
clc
push
je
test
add
sbb
mov
int
inc
inc
and
jnp
xchg
dec
cmp
push
ror
pop
jmp
pop
sub
std
aaa
and
push
nop
lahf
add
cmp
inc
jle
mov
adc
popa
and
shl
inc
sahf
add
add
add
push
rcr
or
mov
xchg
(bad)
pop
loopne
or
inc
sub
or
dec
push
fistp
and
sbb
mov
imul
inc
push
adc
push
outs
sbb
mov
or
inc
das
adc
lea
xchg
cmps
mov
repnz
push
mov
adc
inc
cs
and
in
sbb
test
nop
xchg
retf
add
sbb
or
inc
xchg
cs
fild
jne
mov
jl
mov
or
pop
test
adc
add
je
cmps
test
pop
cmps
or
lods
in
imul
xor
mov
mov
dec
int3
test
push
int3
dec
arpl
cmp
aad
mov
inc
movs
add
mov
xchg
add
leave
lds
int3
imul
std
shl
add
rcr
pop
push
add
sahf
push
push
imul
ror
sbb
fild
(bad)
add
jg
cmp
iret
les
sub
fild
jo
pop
sub
ds
sbb
mov
aaa
icebp
je
ins
enter
pop
aam
jb
push
jmp
inc
and
aad
pop
pop
mov
lahf
in
pop
cmp
and
push
dec
add
mov
mov
push
(bad)
(bad)
pop
rcl
jmp
pop
addr16
sub
cmps
nop
xchg
or
adc
(bad)
in
jle
(bad)
dec
mov
and
addr16
inc
jne
xlat
jle
inc
(bad)
sti
mov
enter
shl
das
inc
sub
or
or
or
adc
daa
xor
mov
outs
inc
les
pop
jmp
lea
pop
xchg
or
les
xchg
add
mov
inc
or
sub
dec
or
outs
ins
mov
outs
mov
sbb
push
movs
sub
mov
or
test
out
test
aaa
lahf
dec
push
dec
(bad)
pop
outs
outs
adc
cwde
sub
dec
add
adc
dec
int
pop
push
sbb
test
push
dec
adc
mov
inc
adc
rol
outs
imul
jge
adc
enter
sub
or
test
dec
movs
je
mov
outs
das
and
lods
pop
add
add
(bad)
sub
rol
leave
loope
push
dec
jbe
xchg
push
pop
daa
xor
add
and
and
inc
js
fistp
out
out
xor
inc
ret
aas
jg
gs
add
mov
sahf
sbb
adc
mov
mov
js
mov
leave
xchg
cmp
pop
or
mov
jnp
mov
mov
adc
pop
popa
leave
push
xchg
cmp
(bad)
jo
adc
hlt
add
clc
icebp
enter
push
(bad)
frstor
push
push
jno
test
add
fadd
hlt
mov
and
inc
in
dec
add
push
nop
daa
fdiv
dec
sti
mov
pushf
pop
sbb
push
xor
je
dec
pop
pusha
and
push
ins
mov
test
push
jb
sbb
adc
aas
pop
or
pusha
sar
mov
adc
cmp
clc
es
mov
pop
loopne
sar
(bad)
and
or
test
xor
dec
or
data16
jnp
shl
and
xlat
adc
adc
cmp
or
xlat
cmp
nop
ds
pop
and
jle
sbb
push
pop
pop
sbb
dec
or
sbb
and
sbb
inc
loop
lahf
rcr
ficomp
mov
push
test
inc
imul
inc
int3
sbb
sub
fidiv
imul
sbb
les
in
sub
imul
adc
adc
lock
inc
jo
mov
in
add
mov
(bad)
add
fwait
out
xor
jl
mov
mov
push
cmps
lods
sbb
push
xchg
inc
inc
ror
pusha
mov
xor
push
(bad)
ja
in
(bad)
ror
xor
jno
xchg
ret
imul
adc
mov
fidiv
jecxz
xchg
add
bound
jmp
adc
sbb
cmp
out
cmp
nop
adc
adc
pop
or
add
lods
ror
dec
dec
add
iret
or
call
dec
je
adc
pop
and
mov
shr
imul
and
or
or
je
adc
inc
sar
popa
sub
push
inc
stc
adc
push
mov
push
mov
adc
xchg
ja
popf
mov
lods
mov
and
or
cmp
or
test
jbe
call
lahf
mov
xlat
je
repnz
lods
shl
and
aaa
aas
call
icebp
pop
push
push
mov
js
mov
imul
sbb
cs
adc
jae
add
pop
xor
or
add
xchg
int
jno
xor
sub
ret
push
addr16
cmp
mov
(bad)
je
out
mov
push
adc
inc
fimul
hlt
add
mov
fwait
mov
and
test
pop
fs
or
dec
in
adc
imul
sbb
sbb
push
mov
mov
(bad)
jbe
xor
jmp
inc
push
add
popf
jg
inc
dec
adc
in
arpl
cs
pop
inc
sub
adc
ins
xor
xor
pop
inc
hlt
clc
add
push
inc
xor
mov
fnstsw
jmp
sbb
xchg
or
cmp
inc
mov
out
cmp
aaa
cmps
outs
or
inc
add
ins
xchg
mov
xchg
mov
arpl
cmp
aaa
push
stos
out
mov
out
and
sub
pop
xor
push
and
ja
cmp
idiv
ins
in
pop
sbb
xchg
enter
gs
ret
movs
fnstsw
jle
xchg
jge
inc
js
popa
out
adc
fisttp
jge
jnp
test
dec
and
mov
push
mov
cwde
dec
add
out
dec
js
cmp
or
mov
add
jbe
adc
sub
inc
pop
add
not
and
sbb
add
inc
mov
ss
imul
sbb
cdq
xchg
mov
idiv
pusha
dec
ret
ins
jb
call
arpl
pusha
lahf
lea
loopne
inc
cmp
push
mov
mov
or
repnz
xor
test
dec
jne
pop
mov
int
pop
scas
pop
mov
push
test
push
ret
push
adc
ret
sbb
add
mov
call
rol
jg
xchg
adc
xlat
out
jno
lea
jmp
or
leave
adc
addr16
jg
inc
in
repnz
clc
adc
push
push
mov
js
jb
(bad)
adc
movs
push
or
ins
imul
or
mov
add
push
ins
xor
xchg
mov
aaa
mov
mov
jnp
hlt
and
xor
daa
xchg
leave
int3
adc
int3
ins
je
pop
jbe
add
cmps
push
add
jle
shl
inc
xchg
push
add
inc
push
aaa
fiadd
jbe
fist
test
pop
mov
add
adc
aaa
adc
push
gs
and
mov
xchg
pop
mov
push
adc
inc
sbb
pusha
sbb
cmp
or
nop
in
or
pop
pop
in
jg
and
mov
retf
jbe
ins
outs
jo
nop
pop
push
add
ds
in
mov
adc
jae
pop
jnp
mov
push
mov
add
xchg
xor
(bad)
loop
xchg
out
xlat
jnp
push
dec
xor
mov
sub
add
mov
ror
jb
xchg
mov
pop
dec
popa
add
outs
mov
das
pop
mov
pusha
adc
inc
mov
icebp
add
nop
push
cmp
push
hlt
cmp
jl
(bad)
xchg
rcl
mov
mov
ds
rcr
mov
dec
mov
sahf
and
adc
pop
repz
mov
ss
int
and
jo
rcl
(bad)
or
sub
ret
jge
pop
mov
and
stc
cld
and
pop
sbb
mov
and
cmps
mov
lods
inc
jg
adc
adc
sbb
rcl
and
movs
or
fadd
push
or
adc
add
xchg
and
adc
adc
inc
add
out
in
test
push
out
mov
mov
les
add
ins
mov
sbb
push
int3
lock
push
mov
test
or
push
shl
daa
cdq
xchg
push
test
jno
add
xchg
cmp
mov
rol
dec
push
leave
les
ficom
popf
test
jl
xor
in
jo
sbb
call
add
int
mov
fild
jne
push
leave
xchg
sbb
mov
add
or
add
pop
add
add
mov
pop
lods
mov
add
jecxz
mov
cmp
or
mov
je
mov
adc
arpl
sbb
and
sub
out
jne
sbb
push
je
adc
gs
dec
rcl
inc
(bad)
out
inc
fcom
xor
in
jne
adc
or
lock
pop
and
mov
sbb
cmp
xchg
or
push
sbb
xor
add
jbe
rol
xchg
or
inc
cwde
fs
add
dec
leave
in
dec
pop
push
ins
add
fs
dec
sub
add
adc
mov
adc
add
adc
(bad)
jmp
fst
movs
jecxz
lahf
xor
clc
addr16
add
jmp
pop
sbb
push
(bad)
call
mov
ror
mov
je
and
(bad)
mul
and
inc
jp
adc
dec
or
inc
adc
pop
or
pusha
cmp
xchg
out
cmp
and
into
lds
and
fimul
jecxz
add
cmp
lea
movs
inc
xlat
ss
mov
call
mov
pusha
stos
sbb
test
leave
in
shl
push
pushf
push
inc
js
xor
lods
js
ja
cmp
jl
lock
ret
aaa
adc
lea
push
sbb
call
test
sub
scas
or
push
mov
fnop
rcr
(bad)
nop
mov
add
jl
mov
cmps
not
mov
jle
mov
adc
sub
mov
hlt
inc
in
gs
xor
push
add
add
xor
mov
fsub
jle
leave
xchg
or
and
and
mov
jmp
in
dec
inc
stos
add
jmp
stos
ss
push
movs
out
mov
adc
and
mov
ja
push
adc
sub
cmps
stos
int3
ss
icebp
add
pop
jge
imul
aam
add
mov
in
push
and
sbb
push
fisttp
scas
jmp
cmp
mov
add
in
and
sbb
dec
rol
pusha
movs
and
pop
xlat
fwait
lods
popa
sbb
push
push
mov
xor
repnz
add
dec
or
adc
sbb
xor
pusha
pop
pusha
push
jg
sbb
adc
pusha
mov
shl
in
mov
mov
push
dec
sub
add
cmp
jg
aas
das
in
push
sar
ret
pop
sti
add
ja
mov
xchg
jge
test
xor
les
jne
pop
mov
aam
pop
dec
rol
add
or
pop
dec
pop
sbb
mov
das
add
or
adc
test
push
in
call
xchg
dec
push
cmp
pusha
add
mov
lods
les
rcl
hlt
in
lods
or
adc
pop
adc
popa
movq
xor
adc
aaa
cmp
pop
jmp
sub
push
or
inc
arpl
call
sbb
adc
fwait
iret
add
imul
shr
or
lahf
test
xchg
dec
jb
mov
nop
or
call
imul
lods
xor
sub
imul
or
mov
retf
into
pop
and
lock
mov
cmps
fsub
enter
jmp
or
retf
mov
xor
sbb
xchg
shl
dec
adc
ret
stos
pushf
sub
lock
popa
or
xor
sub
pop
xor
ss
mov
xor
fdiv
hlt
push
in
daa
xchg
call
sbb
mov
mov
sub
in
cmc
xor
xor
sbb
pop
adc
iret
mov
push
xor
and
and
sbb
in
in
fsubr
in
das
or
mov
popa
je
cwde
add
xor
jle
aam
inc
xor
fdiv
add
inc
pop
fcom
imul
sbb
ins
pop
fnstcw
jmp
cmps
mov
pop
ficomp
inc
sbb
sbb
pop
rol
sbb
(bad)
pop
in
ffree
xor
and
mov
addr16
or
jne
or
fs
dec
push
cmps
arpl
cmp
fmul
(bad)
push
aad
in
or
mov
stos
xchg
cmps
add
mov
stos
jle
add
add
cbw
pop
jb
mov
inc
rcl
push
je
rcl
rcl
or
dec
dec
cmps
ins
imul
jb
test
mov
xor
add
sub
push
xchg
sub
mov
or
lods
retf
ds
dec
adc
dec
adc
loop
push
adc
lods
mov
add
cwde
fcom
aaa
jnp
sub
js
jmp
and
add
jl
sbb
inc
and
mov
pop
mov
ins
lahf
xlat
adc
inc
ja
loopne
push
mov
mov
stos
enter
in
adc
push
mov
(bad)
jmp
mov
sub
lods
les
pop
dec
and
arpl
add
xor
in
dec
xchg
add
and
es
inc
push
pusha
push
jg
mov
and
jne
mov
add
ret
xchg
cmp
or
dec
mov
lods
add
jne
dec
add
je
int3
es
push
outs
xor
test
jb
imul
mov
add
call
and
outs
hlt
hlt
push
in
ja
sub
dec
loopne
sbb
outs
loopne
in
inc
hlt
cmp
add
inc
test
pop
push
pop
push
test
xchg
push
sbb
sti
xor
xor
sub
(bad)
jne
xor
or
inc
lods
jg
loopne
mov
mov
hlt
cwde
jne
adc
loopne
adc
or
cmp
imul
xchg
lea
xor
loopne
(bad)
addr16
inc
mov
(bad)
dec
jg
inc
sbb
and
sbb
mov
les
pop
in
jmp
push
sub
ror
in
and
sub
and
andps
pop
sahf
and
and
adc
jmp
or
das
mov
jbe
lock
and
dec
lock
les
mov
jl
fdiv
movs
pop
inc
cmp
mov
dec
test
dec
cwde
cmp
or
or
aas
fild
add
in
mov
imul
inc
ins
cld
jmp
leave
push
or
sbb
add
repz
ret
xchg
push
xchg
je
adc
fsub
das
dec
lods
in
push
or
inc
adc
aas
fsub
shld
int3
fsubr
movs
mov
sbb
and
adc
xlat
in
push
or
movs
fwait
xor
in
in
mov
xor
and
in
push
aaa
push
or
adc
ins
sub
fadd
repz
dec
idiv
fnstcw
outs
or
push
jecxz
mov
add
add
or
iret
pop
xor
push
mov
inc
cmps
jb
xchg
arpl
mov
(bad)
imul
(bad)
mov
fsubr
cwde
pusha
repz
call
cmp
jno
mov
mov
addr16
push
std
adc
and
scas
nop
pop
dec
popa
xor
sub
add
les
adc
ret
add
inc
or
and
add
in
mov
mov
mov
or
cmps
mov
(bad)
out
sar
aad
push
bndstx
sbb
(bad)
fwait
adc
inc
adc
les
jle
dec
fistp
lock
movs
dec
and
nop
push
and
and
ins
test
or
(bad)
pop
jb
xchg
in
stos
and
test
inc
call
jno
push
lods
loope
and
sbb
xor
sub
jle
xchg
cmp
test
leave
(bad)
pushf
rcr
xchg
inc
add
cmp
call
push
ds
in
xchg
push
pop
imul
inc
out
call
adc
stos
add
sub
in
es
sbb
jl
shl
add
push
fiadd
imul
mov
mov
jecxz
jecxz
and
and
add
rol
es
sbb
add
and
loopne
adc
enter
lods
or
pop
or
sbb
arpl
pop
(bad)
cmp
hlt
and
adc
sbb
and
ins
mov
and
and
and
mov
mov
pusha
mov
mov
popa
stos
stos
and
fdiv
adc
inc
mov
sbb
test
push
adc
fwait
dec
fsub
mov
dec
je
pop
pop
dec
add
leave
or
das
mov
mov
or
sbb
jo
clc
and
mov
pop
or
push
or
or
rcr
int3
push
add
or
call
adc
sbb
jp
mov
push
clc
inc
add
ins
or
out
jns
sbb
into
dec
jb
cwde
or
out
push
push
add
adc
jmp
ins
push
imul
cdq
and
mov
imul
add
mov
nop
add
pop
or
xchg
inc
mov
and
dec
and
shl
adc
and
dec
pop
scas
mov
hlt
(bad)
leave
lds
and
or
hlt
inc
test
adc
lahf
xor
lea
mov
push
sar
mov
adc
nop
(bad)
sbb
pop
mov
int
mov
mov
push
inc
iret
mov
mov
jb
sbb
mov
push
jg
mov
mov
or
clc
les
pop
lods
jge
jmp
jo
jae
fld
fwait
(bad)
lods
inc
inc
xchg
rol
pushf
mov
and
das
dec
movs
bound
sub
or
push
fild
movs
and
aaa
and
adc
adc
dec
jb
nop
adc
jb
loopne
mov
sub
add
adc
out
pop
int3
mov
aaa
sbb
loopne
cld
cld
xchg
sbb
and
inc
ret
inc
jb
lods
inc
mov
cld
into
dec
mov
pop
push
sbb
mov
lock
cmp
shl
xor
sbb
hlt
movs
inc
xchg
popa
adc
jo
in
(bad)
adc
xchg
je
or
push
adc
ss
inc
ret
ins
mov
(bad)
jl
cmps
inc
enter
sub
call
mov
adc
inc
adc
pop
(bad)
cld
call
jbe
pop
push
aas
inc
lods
jns
lods
add
jnp
add
cmps
push
jle
push
mov
xchg
jmp
dec
pop
pop
sub
inc
push
hlt
or
xchg
test
movs
test
push
lock
add
test
pop
sti
cld
mov
pop
mov
xchg
push
icebp
push
fld
push
xchg
xor
add
sub
adc
push
movs
cmp
pusha
sar
fmul
push
dec
jmp
mov
cmp
and
cmps
cli
fnstsw
xor
div
clc
loopne
pop
and
jae
push
mov
mov
add
mov
add
mov
push
push
sub
pop
xor
call
(bad)
fdiv
adc
or
pop
adc
push
adc
dec
in
or
shl
push
shl
ror
add
daa
(bad)
test
mul
push
xchg
pushw
out
cmps
movs
int3
shl
xor
iret
or
int
test
dec
push
sbb
adc
js
jmp
je
mov
bound
movs
dec
adc
cs
mov
xor
add
jne
xor
push
not
xor
sbb
imul
jmp
sub
add
push
ins
add
cmp
add
adc
repz
outs
bound
add
mov
in
sti
pop
ret
mov
add
rol
outs
push
add
or
aaa
inc
pushf
inc
push
popa
cli
jae
push
mov
inc
dec
jo
add
call
(bad)
fcomp
pop
xchg
dec
sbb
pop
mov
adc
pop
push
add
in
popa
ins
loopne
add
lea
or
sub
leave
dec
loopne
mov
adc
imul
add
jg
add
inc
into
xor
nop
jmp
and
xor
and
es
dec
cmp
enter
outs
push
inc
adc
sub
or
xlat
cmc
rcl
or
retf
movs
mov
not
mov
dec
cmp
pusha
mov
jno
cdq
loope
or
dec
add
call
sbb
fild
push
les
sbb
pusha
gs
and
push
xor
fnsave
push
sbb
retf
imul
pop
jle
out
dec
mov
fdivr
aam
ret
imul
jns
cmp
add
mov
dec
fmul
sub
in
enter
inc
(bad)
mov
sub
inc
jne
jg
sub
std
imul
test
sbb
shl
fdivr
add
enter
mov
adc
mov
and
test
or
sbb
xor
mov
shl
inc
rcr
iret
cmp
rcr
mov
or
mov
pop
jo
rcr
test
mov
ins
jo
cmp
imul
xchg
sub
sbb
test
fs
or
push
in
je
mov
fs
ss
frstor
mov
and
mov
mov
push
out
jmp
ficom
mov
mov
sbb
cmc
hlt
lock
dec
push
hlt
mov
movs
mov
mov
int3
inc
adc
das
add
and
or
adc
enter
jecxz
add
fld
cmp
push
push
imul
fimul
mov
inc
out
aam
cmp
sbb
and
adc
and
xchg
daa
aas
es
sbb
retf
fcomp
pop
mov
xchg
or
je
mov
inc
adc
adc
or
sbb
mov
inc
jecxz
aaa
shl
add
sbb
mov
push
dec
sub
cmp
ret
push
mov
dec
mov
cmps
sar
int
jl
stos
jle
repnz
pcmpgtb
mov
and
inc
pop
pop
mov
cs
ror
nop
and
mov
push
push
or
je
xlat
xor
xor
push
mov
jo
lods
popf
clc
push
xor
imul
imul
nop
dec
test
mov
shr
inc
or
or
cmps
out
add
jno
push
push
shr
test
icebp
adc
xor
add
and
movups
adc
pop
sbb
lahf
or
push
das
jae
adc
or
pop
jno
xchg
stos
int
push
and
mov
xchg
sbb
pop
mov
sub
push
pusha
add
push
inc
xor
stc
sbb
and
mov
in
cmp
xchg
or
mov
add
jne
popa
add
jl
pop
loopne
imul
ret
jmp
(bad)
lea
shl
movs
ins
cmp
cmp
das
ss
or
int3
in
pop
jmp
shl
pushf
mov
add
out
loopne
or
add
shl
cmp
fiadd
and
xor
fcomp
inc
rcl
mov
rcr
push
lds
mov
in
mov
adc
shl
and
iret
fisubr
je
shr
xor
add
test
rcr
mov
mov
push
bound
push
jmp
inc
inc
jmp
rcl
xor
outs
dec
jns
or
iret
add
jne
adc
lds
movs
dec
retf
lea
jmp
or
out
(bad)
mov
jae
rcl
in
pop
pop
hlt
or
aas
or
jno
dec
mov
stos
imul
inc
in
add
sub
mov
sbb
pusha
mov
fsub
aam
sbb
pop
lds
add
dec
ror
bound
mov
xor
fcmovnb
mov
(bad)
ins
gs
loope
sar
ja
and
add
add
cmc
mov
aaa
or
pop
push
xlat
movs
sbb
xor
(bad)
mov
push
dec
lds
cmc
ja
pop
cs
pop
jg
out
shl
(bad)
jl
les
fimul
enter
test
pushf
mov
and
jle
add
in
push
mov
pop
addr16
sub
sub
(bad)
sbb
out
sub
inc
sub
adc
ret
push
inc
in
cdq
or
(bad)
stos
pop
push
add
lea
inc
das
fdiv
aam
in
fcom
call
nop
sub
add
mov
shl
mov
xchg
push
lods
repnz
fsub
rcr
inc
pop
aam
ja
or
push
cld
jo
fld
dec
cmp
adc
mov
xor
mov
push
jno
inc
dec
push
ficom
sbb
add
xlat
int3
and
xchg
repnz
push
cmp
mov
std
sub
push
gs
xchg
fldenv
mov
jbe
add
cmp
sub
rol
cmp
leave
and
jle
imul
rol
imul
aad
inc
shl
push
inc
cli
sbb
xchg
cmp
pop
scas
sub
adc
and
popa
inc
cmp
stc
test
mov
or
push
add
dec
call
adc
add
icebp
sub
test
add
add
cmp
pop
sbb
lds
push
push
pop
add
fwait
pop
fisttp
test
movs
es
dec
pop
sbb
mov
test
jb
ret
adc
imul
inc
iret
xor
cmp
adc
in
(bad)
and
adc
mov
popf
adc
(bad)
mov
popf
fisttp
inc
cs
inc
pop
test
push
les
ds
cmps
pop
sub
add
xchg
jnp
dec
xchg
mov
imul
mov
jne
sub
and
outs
call
jp
xchg
adc
cmp
pop
and
adc
inc
ror
xchg
les
adc
adc
add
cwde
or
les
out
into
rol
ins
aaa
test
dec
jnp
or
or
vpsubw
jbe
sar
shl
lock
lock
lock
nop
add
in
push
pop
cmp
inc
popa
in
sub
adc
adc
and
in
mov
push
hlt
dec
sbb
not
jno
hlt
ss
dec
dec
sbb
push
cdq
cmp
in
fcom
adc
mov
pop
push
imul
mov
mov
cmp
fnstsw
and
push
mov
movs
or
pop
xor
and
pop
adc
add
and
ins
pusha
sbb
stc
movs
les
dec
push
mov
enter
cwde
sbb
sbb
arpl
add
mov
or
fidivr
cwde
jmp
loopne
in
jo
(bad)
lock
(bad)
out
bound
sbb
aaa
sub
(bad)
shl
mov
inc
dec
xchg
jbe
lods
jmp
ror
lock
mov
test
ret
adc
aaa
pop
inc
ret
and
or
adc
outs
xchg
dec
std
jle
out
add
adc
xchg
pop
mov
jne
lfs
lods
fisttp
rol
pop
fsub
xor
aad
sub
out
lods
add
cmps
pop
arpl
ret
and
add
cld
into
xor
mov
fisttp
lea
clc
movs
add
sbb
dec
mov
pop
fadd
retf
xor
(bad)
das
(bad)
fisubr
fisttp
and
vxorps
loopne
sub
sub
loope
sub
push
cld
shl
ss
cdq
jl
ret
in
push
cmp
inc
ss
mov
or
push
adc
ss
test
or
xchg
into
xchg
in
sub
loope
in
mov
nop
pop
mov
inc
jb
jl
fdiv
(bad)
mov
cmp
push
repnz
movs
lea
test
enter
mov
call
or
and
sbb
jmp
popa
push
cs
adc
jo
mov
test
je
adc
mov
and
lods
es
out
xor
mov
or
jecxz
jmp
inc
daa
imul
inc
sbb
push
daa
or
jmp
and
sub
outs
sbb
cmp
jno
lods
add
pop
xchg
push
push
pop
fsub
ror
out
or
sbb
fisttp
dec
pop
enter
adc
into
lods
pop
jp
int3
mov
mov
movs
dec
les
fsub
call
ret
push
adc
or
jmp
mov
cmps
sbb
jmp
mov
fadd
and
sub
mov
push
nop
fucomip
shr
sub
sbb
cmp
test
daa
inc
imul
push
into
and
loopne
les
loope
xor
dec
xchg
mov
or
sti
cmps
inc
sbb
repnz
sub
movs
adc
arpl
pop
sbb
push
test
mov
test
mov
push
jp
mov
mov
lods
dec
push
sbb
test
mov
xor
dec
mov
mov
aam
enter
shr
int3
mov
aaa
mov
aam
shr
jb
addr16
js
push
movs
das
mov
in
pop
sti
mov
pop
push
shl
adc
push
lods
jne
out
cmp
mov
push
je
fdiv
or
shl
or
and
inc
test
jg
or
mov
adc
jl
test
mov
jne
lock
fs
(bad)
jge
jl
dec
and
out
call
loopne
sbb
in
adc
sub
jmp
sbb
and
sub
xchg
pop
xor
js
or
sub
sbb
xchg
cmp
push
movs
les
add
call
in
in
outs
xchg
mov
loopne
add
ror
or
sub
or
enter
push
dec
xor
adc
push
xor
mov
cmovbe
pushf
imul
jnp
add
lea
jge
add
mov
pop
push
cmps
push
xchg
fcom
mov
jp
aam
sub
inc
or
jnp
retf
mov
mov
in
or
outs
sbb
mov
shr
add
or
icebp
loop
lea
stos
add
xchg
pop
sbb
(bad)
js
test
add
aaa
pop
or
ret
sub
inc
aas
and
add
jo
retf
pop
mov
mov
jmp
sub
sbb
(bad)
lods
inc
pop
leave
sub
jmp
mov
fist
add
and
loope
mov
add
jge
loop
mov
inc
inc
sbb
stos
xchg
jecxz
mov
movs
cmp
fs
mov
fs
movs
movs
push
repnz
movs
push
stos
cmps
mov
push
sub
cmp
inc
call
add
nop
mov
sub
in
ss
dec
pop
dec
mov
xchg
or
sbb
add
xlat
ret
mov
fs
sbb
loope
cmp
shl
loope
pop
sahf
cmp
dec
push
xor
popf
fsub
mov
int3
fcom
push
movs
inc
lods
or
lods
add
pop
jb
pop
test
test
stc
icebp
inc
dec
or
rcpps
pop
mov
mov
pusha
mov
inc
stc
(bad)
push
push
or
lock
out
in
jmp
and
aam
add
fld
sbb
or
fwait
jmp
das
hlt
bound
rcl
adc
and
mov
jno
or
aam
imul
lods
jg
mov
popa
(bad)
mov
movs
pop
adc
aam
sbb
push
sub
neg
ins
iret
sahf
jne
xor
fs
nop
adc
push
or
sub
sahf
inc
xor
pop
push
sbb
push
mov
xchg
lds
sbb
add
add
enter
xchg
lock
js
sub
dec
retf
call
xor
mov
aam
mov
sbb
mov
stc
cmp
xchg
mov
xchg
mov
and
sar
cmp
inc
lods
jecxz
mov
adc
in
dec
or
fisttp
mov
adc
mov
push
test
push
push
aas
mov
xchg
mov
or
add
pop
and
mov
iret
or
and
sbb
test
out
gs
mov
stos
and
inc
push
enter
out
scas
rcl
adc
adc
in
inc
int3
aam
aam
xchg
arpl
mov
pop
rcl
add
pop
pusha
es
or
cmp
mov
dec
lods
xchg
imul
test
mov
xor
pushf
cwde
int
xor
cwde
xchg
xchg
movs
adc
xor
movs
lods
or
xchg
lods
call
ret
ror
shl
cmp
mov
mov
jo
inc
stos
in
push
stos
cs
mov
fldl2e
mov
sub
fst
ja
jecxz
mov
xor
in
mov
dec
jb
shl
in
dec
retf
leave
rcl
mov
mov
popa
jmp
movs
nop
sub
mov
mov
mov
inc
rcl
add
fcomp
fadd
idiv
popf
fcom
ins
adc
push
add
jno
fsubr
pop
add
enter
sub
daa
movs
mov
retf
daa
adc
aas
outs
xor
mov
aas
fsubr
or
mov
rol
xor
xor
jo
shl
add
dec
push
or
dec
fsubr
movs
and
addr16
nop
xlat
movs
ins
push
or
jo
aaa
sbb
adc
cmp
and
shr
fistp
sbb
push
adc
pusha
push
push
imul
pop
push
mov
xchg
xor
sar
aam
xor
fdiv
and
pop
(bad)
fdiv
add
stos
add
add
rcr
rol
dec
or
out
shl
(bad)
cld
jo
sbb
sub
add
sbb
or
mov
cli
ja
sbb
dec
adc
imul
adc
dec
mov
sbb
loope
mov
xchg
dec
sbb
rol
adc
and
rcr
inc
cld
and
in
sub
or
adc
gs
shr
fcom
jmp
inc
mov
push
push
jmp
out
hlt
lds
mov
xchg
pop
dec
ja
imul
and
inc
add
sub
es
adc
mov
lds
ss
loope
xchg
outs
sbb
loopne
mov
daa
and
xor
nop
clc
dec
adc
adc
sub
pop
jnp
inc
aad
xor
ret
mov
in
dec
mov
lock
iret
and
das
adc
mov
cld
dec
push
bound
int3
cmp
cmp
sub
mov
adc
dec
cmp
sbb
iret
lock
bound
xchg
ret
sbb
movs
mov
lds
pushf
or
(bad)
stc
cmp
add
add
cwde
mov
cmc
adc
inc
cmps
jne
ret
push
lock
push
adc
test
ror
sbb
add
rcl
or
adc
fcom
fcomp
loopne
xchg
sub
jae
fmul
inc
fsub
inc
push
ror
and
add
pop
test
lock
gs
in
dec
xor
sbb
ins
cmp
inc
xor
add
in
loopne
sbb
dec
dec
loopne
fmul
xchg
xor
(bad)
fmul
enter
fadd
aam
pusha
les
pop
or
fld
pop
mov
les
movs
or
pusha
dec
or
jno
or
add
adc
fs
jge
or
call
and
call
add
lods
jne
jg
dec
cs
adc
fiadd
cmp
push
jecxz
mov
rol
add
jbe
sbb
ret
add
or
les
add
je
arpl
jb
fwait
inc
in
in
mov
push
jnp
mov
xor
call
sbb
enter
sbb
xor
sbb
icebp
les
sub
and
sbb
scas
jno
shr
sub
test
xchg
adc
iret
das
and
aas
sub
inc
sub
mov
cmps
mov
or
ds
fcmovbe
test
gs
or
push
add
and
adc
pop
sub
pop
shrd
mov
push
cmp
movs
dec
pop
adc
mov
popf
inc
dec
push
shr
push
cld
sub
mov
adc
leave
and
dec
inc
and
bound
outs
xchg
fadd
jge
(bad)
aam
in
push
add
(bad)
cmp
cmp
cmp
sbb
in
cmp
sbb
or
ret
aam
or
xor
xor
or
pop
leave
outs
(bad)
ss
enter
and
call
sbb
cli
mov
dec
in
ret
push
inc
pushf
cli
lea
in
gs
cs
sbb
dec
dec
cld
retf
jne
adc
xor
in
adc
or
adc
shl
ret
sbb
pop
dec
rcr
or
xor
iret
dec
fimul
or
mov
adc
mov
cmp
add
xchg
jbe
inc
adc
or
jb
and
or
arpl
xchg
pop
inc
jl
in
jl
mov
out
or
leave
in
lds
pop
adc
sbb
nop
xchg
retf
sbb
sbb
or
and
cdq
inc
and
sub
in
sub
mov
or
mov
aaa
mov
push
sar
xchg
or
xor
xchg
adc
xor
sbb
enter
sbb
jae
and
cmp
xor
jecxz
ss
in
cld
sub
xchg
clc
icebp
(bad)
std
movs
mov
icebp
and
(bad)
imul
jg
xor
jg
add
xor
xchg
pop
mov
repz
lock
pop
mov
xor
xor
or
cmp
pop
iret
retf
add
inc
adc
mov
in
and
pop
in
push
test
xchg
int
inc
rcl
iret
inc
inc
and
rcl
add
or
cmp
imul
push
mov
nop
xchg
and
sub
sbb
cdq
dec
xor
jnp
inc
add
jae
imul
sbb
sbb
pushf
out
aam
adc
add
mov
loopne
pop
lea
scas
icebp
mov
sbb
xchg
in
mov
test
in
or
movs
imul
enter
loopne
nop
dec
xor
enter
add
loopne
xchg
data16
enter
aam
int
and
fcomp
add
(bad)
enter
nop
int3
ror
adc
enter
and
rol
add
int3
sbb
nop
rol
enter
add
(bad)
or
(bad)
enter
xor
sub
pop
add
xor
jb
and
jb
and
cmp
add
pop
add
add
dec
pop
add
push
push
add
and
add
pop
pop
pusha
add
pop
add
add
ins
pop
add
jo
add
and
add
pop
jl
mov
retf
add
mov
push
or
add
adc
xchg
test
xchg
mov
or
loopne
shl
nop
adc
push
nop
or
add
inc
cmc
cmc
or
jb
and
int3
rol
sub
and
scas
and
enter
les
or
test
push
nop
and
(bad)
enter
inc
int3
lods
loope
dec
mov
call
or
add
dec
sbb
add
adc
outs
sbb
enter
movs
add
adc
sbb
mov
sbb
or
add
mov
rcr
inc
add
rol
add
enter
add
shl
and
fadd
inc
add
enter
loopne
in
or
add
add
sbb
jb
add
jb
mov
adc
ss
pop
je
jbe
repz
jb
enter
stc
leave
and
stc
inc
mov
adc
aam
or
fmul
enter
adc
and
loopne
inc
mov
loope
fadd
xor
mov
loope
add
add
ror
enter
and
adc
xor
mov
enter
mov
mov
xchg
or
adc
add
les
inc
jo
pop
push
xor
je
add
popf
cmp
jo
inc
jl
inc
pusha
shl
xchg
inc
mov
sub
inc
push
xlat
inc
ins
jg
push
or
mov
add
nop
or
add
or
mov
mov
add
nop
or
and
nop
or
sub
adc
add
add
and
std
pop
inc
and
std
add
inc
mov
(bad)
sar
inc
add
cmp
or
enter
or
int3
or
enter
add
mov
and
call
in
add
add
nop
and
fadd
nop
and
rcl
or
cmp
int3
scas
inc
cmps
add
cmps
add
mov
mov
movs
test
and
add
add
push
adc
adc
inc
scas
pop
xchg
push
xor
lock
pop
cmp
and
movs
add
jne
pop
or
(bad)
aaa
xchg
test
inc
dec
retf
xchg
popa
push
in
or
stc
outs
xchg
cld
push
clc
mov
push
xor
bound
sbb
dec
cmp
imul
(bad)
and
dec
arpl
bound
rol
push
add
and
dec
mov
test
rol
sub
ficom
dec
mov
pop
cmps
sbb
jnp
jp
enter
mov
xor
mov
xor
leave
enter
enter
(bad)
nop
out
mov
fmul
sub
xor
cmp
rol
add
xchg
or
xor
push
add
inc
call
adc
aam
push
and
cmp
mov
loope
jmp
movs
das
and
outs
cmp
sbb
dec
lea
gs
stos
mov
jge
add
or
mov
xchg
test
dec
cmps
fs
mov
aad
fisttp
fcomip
pop
clc
cmps
arpl
jo
rcl
js
push
jb
jno
test
cs
jb
and
int3
int3
bound
push
ret
or
and
inc
cld
and
int3
test
(bad)
pop
push
push
pushf
call
aas
pop
push
daa
lock
repnz
adc
imul
jo
addr16
loopne
jmp
xor
in
fidiv
fcomp
cmp
sbb
add
or
aas
push
and
push
sbb
aas
xchg
push
fsubr
aas
pusha
aas
sub
inc
xor
adc
cmp
ds
aas
xor
push
test
mov
jae
cmps
add
sbb
sbb
dec
dec
jb
aas
outs
xor
xor
sub
xchg
xchg
add
or
adc
aas
add
push
sub
aas
adc
aas
jno
test
mov
sbb
xor
push
or
scas
outs
fmul
fadd
mov
(bad)
mov
loopne
cs
pop
push
inc
js
dec
sub
retf
inc
sbb
xor
add
hlt
cmp
pop
add
sub
and
outs
les
mov
sbb
xor
jl
inc
clts
out
push
retf
ret
loop
sar
push
inc
dec
dec
xor
add
xchg
mov
seto
xchg
seta
add
push
xor
add
inc
xchg
or
dec
mov
inc
mov
xchg
xor
mov
sbb
cmp
pop
sub
outs
sub
jo
adc
nop
adc
ja
push
fs
and
pop
add
popa
nop
pop
jne
cli
jns
lds
fsubr
push
clc
dec
fisttp
push
dec
iret
ret
or
adc
add
mov
xchg
mov
fadd
dec
enter
xchg
push
jmp
enter
jmp
push
pusha
push
mov
rcr
push
push
sbb
pop
add
imul
inc
inc
or
cmp
repnz
das
pop
or
pusha
push
(bad)
or
fcom
adc
cdq
jmp
push
repnz
push
cwde
fsubr
and
mov
cwde
and
cmp
add
stos
es
adc
jbe
(bad)
int3
pop
mov
ja
das
add
push
cmp
cwde
fadd
jl
enter
cmp
cmp
pop
cs
pusha
xor
mov
inc
inc
or
out
ins
mov
and
mov
push
out
mov
aas
mov
test
and
les
adc
rcr
xchg
inc
sub
scas
cmp
ins
mov
pop
mov
shl
jne
adc
fwait
wrmsr
add
(bad)
frstor
out
pop
and
adc
sahf
fcomp
and
sbb
xor
sbb
xor
sub
outs
ins
(bad)
and
sub
jmp
(bad)
pop
inc
pop
fadd
adc
mov
adc
mov
xchg
cmps
fadd
add
dec
sbb
sub
aaa
push
jmp
push
mov
or
sbb
mov
jne
outs
ins
push
pushf
pop
add
rcr
pusha
pusha
and
jg
outs
dec
clc
mov
mov
nop
or
pop
sub
mov
dec
pop
nop
adc
mov
fsubp
jns
fwait
js
mov
mov
or
out
inc
or
sbb
jns
outs
add
in
dec
enter
lods
push
aam
add
inc
js
loope
sbb
sub
aaa
adc
das
out
inc
and
or
pop
in
rcr
sbb
fcmovbe
test
push
cmp
cmp
popf
add
adc
out
pop
dec
push
cmp
(bad)
fs
popa
add
push
loope
sub
call
sahf
mov
push
add
test
cmp
daa
xchg
(bad)
dec
les
add
add
push
xor
mov
out
inc
adc
add
das
jbe
pop
lods
nop
pop
hlt
xor
mov
not
xor
(bad)
mov
or
lods
pop
dec
push
xchg
xchg
pop
nop
pop
ja
inc
shr
les
or
lahf
mov
xchg
pop
push
shl
dec
push
lahf
adc
cmp
sbb
lahf
and
jb
jl
pushf
mov
and
xor
mov
push
add
aas
mov
mov
pop
hlt
pop
int3
xchg
pop
inc
mov
cmp
repz
mov
push
dec
sub
test
dec
fs
js
jns
loope
test
mov
das
xchg
xchg
lods
inc
cmp
xchg
out
aaa
xchg
loope
and
mov
out
inc
sbb
pop
ja
fild
xor
push
sub
lock
xchg
out
inc
icebp
jne
jns
test
cwde
push
int3
adc
es
sbb
add
inc
pop
sbb
jle
pusha
leave
mov
sbb
ja
xchg
sbb
outs
sbb
cli
add
aaa
xor
push
adc
mov
xlat
cmp
popa
and
aas
cmp
in
or
add
lods
rcl
ds
add
sbb
pushf
mov
rcl
dec
mov
mov
xor
call
add
dec
sub
xor
mov
cmp
mov
das
push
pusha
dec
jo
movs
adc
add
or
call
adc
stos
inc
pusha
mov
cmps
pop
xor
push
call
pop
pop
push
inc
jno
pop
inc
mov
jns
xchg
(bad)
pop
cwde
push
pop
mov
cli
pop
sbb
(bad)
adc
movhps
or
mov
and
dec
int
out
adc
adc
fisubr
jns
in
push
add
inc
mov
fiadd
mov
push
test
mov
js
adc
std
adc
xor
xor
mov
add
or
enter
push
adc
cs
mov
sbb
xor
mov
mov
repnz
sub
jl
xor
xor
enter
cmp
and
xchg
ds
mov
lods
in
mov
imul
test
push
mov
cs
stos
push
pop
mov
xor
mov
pop
mov
mov
adc
in
push
test
mov
jo
cwde
pop
cs
mov
mov
and
test
mov
add
adc
sbb
out
out
lods
xchg
sbb
pop
dec
add
aaa
jns
sub
in
adc
enter
xor
jo
and
pop
je
jmp
mov
(bad)
test
retf
sub
push
ret
dec
lods
mov
sbb
mov
adc
inc
and
xchg
aaa
inc
sbb
inc
push
jmp
or
adc
adc
cmp
nop
das
jno
not
xor
arpl
imul
aas
sbb
inc
jb
sbb
sub
or
out
out
cwde
dec
loopne
test
stos
in
outs
mov
pop
fdiv
or
cmp
fwait
xor
sub
das
or
fdiv
xor
inc
add
sbb
mov
fdiv
ds
push
xor
xchg
pusha
mov
test
fs
fmul
inc
push
push
inc
inc
sub
cmp
jg
and
out
shl
mov
dec
loop
sahf
and
movs
xchg
cmc
mov
pop
imul
mov
imul
daa
dec
sub
xor
push
jl
gs
out
pop
clc
jo
je
push
or
nop
(bad)
ins
adc
mov
(bad)
and
sti
mov
call
imul
sbb
dec
rol
or
xchg
dec
adc
mov
mov
sbb
loopne
ja
scas
lods
setg
xchg
push
mov
mov
ret
cmps
stc
stos
dec
repz
scas
aam
repz
jnp
add
jge
aad
mov
jns
jecxz
inc
fiadd
pop
movs
out
mov
call
push
sub
scas
xor
call
(bad)
das
mov
in
inc
push
sbb
in
inc
iret
cmp
(bad)
jne
dec
stos
add
outs
pop
mov
push
sahf
jo
ret
pop
inc
dec
xor
mov
gs
bound
or
add
pop
rol
adc
fld
push
mov
jbe
cdq
adc
mov
push
adc
inc
test
and
imul
pop
sub
test
xor
imul
sbb
and
adc
sbb
push
xchg
adc
es
or
xchg
mov
mov
in
adc
es
add
jb
jmp
adc
enter
lahf
xor
inc
jb
add
mov
add
inc
adc
repnz
sbb
push
mov
popf
adc
inc
and
sbb
xor
call
(bad)
mov
dec
jl
hlt
ret
or
add
mov
dec
sub
mov
mov
rol
jbe
dec
hlt
daa
fmul
add
pop
ret
enter
inc
push
inc
adc
pusha
mov
imul
scas
pop
fld
fwait
ret
push
aam
and
push
or
and
enter
enter
add
sbb
and
xor
fcomp
xchg
add
mov
ins
dec
scas
in
ins
ins
add
add
sbb
adc
std
int3
add
lds
repz
xor
sbb
mov
and
jge
ins
es
cmp
and
push
and
or
loopne
popa
mov
or
sub
jp
pop
and
sub
fs
in
sub
push
call
gs
ins
call
gs
dec
leave
leave
mov
mov
or
inc
or
add
popa
(bad)
xchg
or
leave
in
dec
rcl
or
add
mov
push
jmp
dec
inc
xor
dec
and
or
xor
sub
adc
jne
cmp
push
addr16
in
jb
push
jmp
aaa
add
and
sbb
jne
je
or
inc
mov
xchg
mov
es
add
leave
test
in
adc
jae
pop
and
xchg
pop
arpl
mov
or
cmp
adc
rol
push
das
and
pop
push
mov
cmp
sub
(bad)
adc
push
add
fwait
push
sub
jge
test
and
sbb
sbb
mov
bound
sbb
enter
mov
xor
leave
mov
push
icebp
mov
fs
popf
add
sub
sti
dec
sbb
xchg
ror
into
or
rol
push
or
dec
sbb
xor
inc
jae
push
aad
pop
mov
pusha
xchg
pusha
inc
or
pop
push
cmp
and
pusha
scas
dec
push
mov
and
imul
rol
lods
loope
outs
or
dec
jge
fs
inc
mov
fild
and
mov
xchg
or
or
and
and
push
mov
dec
dec
test
in
out
jmp
mov
sar
adc
adc
cmc
push
xor
cmp
cmp
or
clc
mov
cmp
movs
je
add
sbb
add
in
cmps
nop
adc
adc
cmps
nop
or
or
nop
or
and
adc
inc
or
dec
cmps
adc
in
cmps
nop
push
sbb
nop
or
cmps
nop
or
fs
nop
or
dec
je
or
dec
cmps
cmp
sub
xor
nop
or
lods
mov
and
test
sbb
mov
fiadd
sub
stos
int3
pop
arpl
es
(bad)
adc
aad
addr16
retf
jmp
mov
jmp
sub
xor
sysenter
por
es
fbstp
xor
fadd
in
test
mov
add
cmp
add
sahf
mov
pop
adc
pop
and
pop
sbb
pop
and
pop
jg
pusha
mov
add
rol
add
add
jo
adc
ins
dec
cmp
add
pop
sbb
and
push
sar
jb
rol
and
and
inc
push
fmulp
xor
add
test
push
push
pop
or
mov
mov
mov
(bad)
pop
or
std
xor
or
nop
sbb
sub
call
outs
hlt
and
daa
and
push
inc
mov
add
pop
cmp
jle
add
cmc
adc
push
mov
and
or
adc
push
jl
pushf
sbb
jb
adc
sbb
loopne
movs
ret
loope
imul
or
inc
test
iret
clc
or
sbb
ds
push
xor
cmp
pop
sbb
push
and
adc
ds
jge
and
mov
lods
gs
arpl
sbb
jns
xchg
adc
pop
sub
inc
push
nop
push
add
or
test
pop
and
aaa
mov
sbb
mov
ret
test
mov
dec
cmp
test
scas
pop
loop
gs
adc
pop
dec
jmp
pop
cmp
test
cmp
push
inc
jl
cwde
xor
loope
mov
xchg
iret
cld
shl
aam
cs
(bad)
idiv
add
sub
sar
mov
or
xchg
xor
push
pop
and
push
jo
add
cmp
js
sbb
xchg
in
dec
sbb
xor
out
enter
sar
and
ins
out
add
adc
dec
or
adc
js
icebp
(bad)
push
mov
and
mov
out
dec
test
ins
pop
jmp
(bad)
pop
in
popa
pop
sbb
mov
dec
mov
xchg
in
fwait
add
sub
inc
jmp
mov
fld
out
imul
jmp
adc
call
dec
pop
leave
ret
xlat
sub
jno
push
mov
shr
dec
lahf
mov
jb
mov
bound
adc
imul
lods
je
ins
jecxz
sbb
fcmovb
(bad)
push
jge
inc
test
loopne
outs
inc
jo
repnz
retf
sub
pop
add
ins
outs
jb
loopne
arpl
cmps
or
sbb
cs
or
int
xor
xor
inc
aam
inc
mov
addr16
rcl
xor
das
sbb
test
push
or
and
or
ror
arpl
mov
shl
test
inc
sub
add
mov
enter
mov
lds
clc
mov
stos
and
nop
test
inc
pop
xchg
sbb
rol
pop
js
xchg
or
gs
or
or
push
or
(bad)
inc
cmp
dec
dec
dec
dec
int3
enter
push
adc
(bad)
xor
fldcw
add
cmp
retf
ficom
fbstp
or
push
push
cmp
les
cmp
sbb
(bad)
call
in
in
add
mov
or
enter
pop
rcr
mov
test
add
fadd
mov
xor
pop
mov
and
aam
lods
and
lods
or
int3
mov
call
rcl
int3
repz
jb
rcl
push
in
enter
jb
rol
mov
cmps
lods
mov
fbld
mov
les
ss
and
loop
xchg
mov
in
clc
push
or
loopne
jmp
retf
mov
fiadd
adc
fsub
loopne
push
add
mov
mov
pop
ret
adc
fst
mov
xor
in
and
add
cmp
test
pop
sub
add
inc
rcl
cdq
add
les
inc
and
add
mov
sbb
xor
out
test
mov
adc
shl
call
add
sbb
fmul
loopne
push
lods
in
icebp
mov
sbb
cld
push
pop
popf
sub
pop
pop
mov
je
xchg
packsswb
daa
outs
adc
ret
dec
lods
icebp
and
or
inc
shl
adc
in
xor
mov
adc
add
mov
lahf
or
sub
push
cdq
jae
mov
add
pop
fbstp
fcom
int3
cdq
aam
movs
and
enter
xor
lods
movs
sbb
and
xor
pop
jg
mov
call
call
adc
mov
and
adc
sub
add
(bad)
or
cmp
mov
adc
imul
add
idiv
ret
(bad)
aam
test
pop
and
mov
adc
xor
or
adc
inc
mov
mov
and
les
mov
arpl
dec
fstp
inc
inc
call
je
test
(bad)
cli
imul
fimul
aam
push
inc
fwait
call
add
js
push
fst
bswap
and
and
add
and
mov
dec
xor
cmp
int3
or
adc
int3
xchg
out
mov
les
xchg
or
mov
rol
(bad)
cmp
sahf
xchg
xchg
mov
or
in
loopne
test
fdivr
dec
hlt
data16
ja
add
mov
sar
push
mov
sub
cmp
sub
pop
aad
dec
pop
xor
mov
pop
jle
and
cmps
or
ret
das
cmp
or
jbe
adc
and
fisttp
cmp
xchg
out
popa
retf
cmp
das
enter
retf
jmp
xor
cmp
lea
or
nop
and
(bad)
xor
or
rcl
rol
or
stc
add
dec
mov
add
(bad)
push
out
cmps
xor
aad
test
ins
add
test
out
adc
rol
into
jae
leave
(bad)
adc
xchg
leave
pop
cmp
push
dec
ror
dec
or
inc
xchg
shl
cmp
pop
pop
jmp
aas
movs
xor
push
ss
xchg
mov
addr16
pop
in
xor
and
mov
cmp
in
jmp
adc
xchg
ret
cld
rcl
rcl
push
xor
aas
sbb
mov
dec
inc
sbb
jo
test
sub
fadd
lock
or
jmp
jmp
sub
(bad)
sbb
mov
push
stos
shl
and
adc
aam
xor
rcl
nop
stos
std
and
nop
mov
xchg
or
repnz
jmp
mov
dec
mov
push
dec
sub
and
and
add
cmp
sbb
add
sbb
jno
dec
mov
jne
fiadd
add
pop
xchg
sbb
imul
add
cmp
je
cmp
mov
add
outs
mov
outs
test
fld
adc
ss
push
out
loope
es
iret
inc
imul
push
jno
stc
mov
fnstsw
clc
mov
inc
repz
ret
mov
inc
fadd
xor
mov
cmps
add
ss
sar
or
leave
sar
stos
pushf
sbb
xor
pop
adc
and
ror
mov
pop
in
sub
hlt
inc
aad
(bad)
mov
sbb
cmps
dec
mov
or
(bad)
loopne
and
bound
inc
adc
mov
and
or
mov
rol
jmp
mov
add
xchg
push
adc
adc
pop
mov
out
or
aad
mov
xor
scas
xchg
cmps
shl
jbe
xchg
add
xor
mov
pop
mov
aaa
retf
ins
mov
jne
adc
ins
hlt
nop
(bad)
es
dec
xor
int
(bad)
xlat
push
adc
or
imul
push
rcl
aaa
adc
mov
add
ins
mov
add
ins
add
ins
ror
mov
xchg
and
xor
inc
fdiv
fwait
mov
imul
lds
in
add
pop
enter
ret
hlt
jp
xor
push
gs
pop
sbb
aaa
xlat
mov
add
xchg
mov
jne
mov
add
imul
ss
xchg
lock
mov
stos
pop
in
lahf
test
test
dec
test
pop
imul
xor
outs
(bad)
fcomi
aaa
xchg
pop
out
and
and
add
mov
cmc
push
out
jmp
or
nop
dec
dec
push
sbb
pop
add
nop
add
nop
add
nop
push
add
je
data16
push
xchg
xor
xchg
or
mov
push
add
pop
int3
and
js
aaa
and
xchg
nop
fiadd
ds
push
loop
xchg
and
dec
mov
nop
addr16
or
adc
(bad)
rcr
sbb
and
mov
xchg
iret
in
xor
les
ds
xchg
(bad)
rol
retf
addr16
mov
and
fs
jp
inc
fnsave
fcom
jp
mov
inc
mov
dec
inc
xor
fld
sbb
add
and
sbb
and
add
and
sbb
cmp
popf
sub
cmp
adc
sbb
aam
add
sub
loope
or
and
dec
adc
and
dec
xor
and
dec
xor
sub
xor
or
cmp
xchg
sbb
dec
enter
dec
xchg
jb
adc
inc
inc
stos
outs
imul
xchg
add
scas
jns
mov
mov
sub
test
ffree
jmp
fnsave
jb
xchg
inc
pop
add
pop
inc
pop
dec
cmps
xchg
xchg
sbb
test
leave
les
pop
adc
mul
inc
jb
jg
adc
inc
test
sbb
add
jae
adc
jmp
mov
and
(bad)
(bad)
xlat
jns
inc
push
lock
ins
add
and
and
dec
lods
std
aam
inc
adc
das
sbb
aad
aaa
pop
jmp
sbb
xchg
adc
mov
adc
sbb
nop
sub
ja
sbb
sbb
mov
pop
pop
sub
mov
mov
loopne
push
and
cmp
cmps
jbe
repnz
loope
xchg
dec
push
xchg
cmp
stos
repnz
fs
add
pop
push
inc
push
leave
and
outs
loop
loope
lods
xchg
jmp
xor
nop
add
inc
jmp
push
ja
inc
sahf
movs
add
test
mov
add
xor
test
hlt
lods
frndint
in
add
scas
out
cwde
dec
enter
and
inc
push
aaa
adc
dec
push
jb
adc
add
xor
adc
dec
enter
adc
push
test
adc
or
push
xchg
cdq
sbb
xchg
fwait
push
cmovg
test
(bad)
(bad)
retf
es
(bad)
and
pop
int
jno
push
sbb
das
dec
mov
mov
nop
mov
pop
(bad)
(bad)
push
pop
loop
inc
jg
jae
inc
into
add
ror
lahf
loopne
mov
xchg
pop
inc
mov
mov
xchg
cmps
and
jb
push
cmp
inc
call
add
iret
sub
and
les
or
(bad)
push
ret
mov
jmp
out
pop
push
ins
sub
adc
adc
jb
and
adc
test
add
and
dec
test
jmp
jmp
in
arpl
dec
paddsb
and
inc
dec
inc
test
xchg
push
push
call
xchg
fstp
(bad)
out
cmp
xchg
repnz
xchg
imul
xor
push
or
enter
sub
leave
cmp
or
pop
sub
add
loopne
add
or
dec
leave
shl
cmp
inc
dec
daa
add
or
nop
test
dec
es
lods
addr16
add
enter
push
xchg
adc
and
leave
and
adc
sbb
in
xchg
adc
or
adc
adc
mov
pop
xchg
and
and
fs
cmps
nop
psllq
and
hlt
hlt
push
inc
nop
sbb
mov
iret
or
inc
push
cmps
push
inc
repnz
hlt
stos
hlt
inc
sub
dec
push
ret
pop
cmp
cmp
xchg
lahf
adc
add
xchg
jnp
xchg
cmps
fs
aam
and
mov
cs
push
dec
test
(bad)
mul
adc
xor
(bad)
and
sub
das
imul
fs
jae
push
sbb
scas
pop
sbb
test
push
mov
call
pop
das
cmp
mov
sbb
or
or
cmp
jmp
sbb
adc
loopne
loopne
pop
stos
sbb
pop
call
add
data16
xchg
test
xor
pop
fcomp
xchg
dec
mov
dec
push
cmp
leave
retf
cmp
ror
and
jb
shl
leave
and
int3
pop
or
fnsetpm(287
mov
les
pop
in
out
sbb
popa
out
cli
or
mov
or
out
imul
jo
and
loope
sar
pop
repz
xor
and
cmp
pop
add
or
mov
mov
lods
inc
sub
test
mov
sbb
sub
fcom
add
and
add
adc
and
clc
jae
mov
or
add
and
push
aam
pop
push
out
mov
xchg
inc
shr
adc
ins
mov
mov
icebp
in
in
xchg
and
mov
jge
ds
add
and
test
mov
or
ret
jle
mov
or
pmulhuw
jne
inc
mov
bsf
fwait
lahf
ds
adc
adc
mov
fsubr
adc
sub
(bad)
loopne
or
cmp
xlat
jmp
popf
cmc
jbe
mov
jmp
pop
popa
pop
dec
fucomp
xor
arpl
stc
xchg
inc
dec
dec
xchg
push
adc
jl
dec
repnz
sbb
out
scas
imul
push
movs
push
jnp
pop
sti
xor
rol
ss
push
xchg
add
dec
mov
test
push
imul
leave
ficom
popf
and
xchg
scas
add
xchg
pop
(bad)
push
cvtps2pi
push
(bad)
sbb
fdiv
cmp
mov
sbb
rol
lods
cs
lods
push
inc
pop
js
add
lds
movs
mov
xchg
add
xchg
jo
jecxz
not
add
repnz
mov
enter
lock
xor
and
mov
call
in
(bad)
adc
mov
in
popf
cld
dec
adc
cmp
dec
sbb
adc
fst
call
aam
cmp
xor
sub
out
(bad)
and
sbb
push
je
pop
je
adc
xor
or
popa
push
add
inc
xor
in
push
jne
enter
iret
imul
mov
(bad)
ret
mov
mov
and
das
mov
and
mov
cmps
add
add
push
push
pop
add
jnp
mov
in
in
(bad)
mov
dec
dec
jmp
and
push
imul
mov
stos
push
sbb
imul
dec
cs
add
inc
ficom
xor
dec
icebp
or
add
ss
add
xor
sub
repnz
cmp
cmc
pop
and
adc
and
aad
retf
cmp
aam
and
sub
add
lea
div
and
cmp
sete
sub
cmp
leave
cmp
adc
cmp
adc
leave
and
cmp
adc
cmp
jb
and
adc
add
push
add
inc
lock
pop
bound
jl
inc
add
movs
add
sbb
std
cmps
loope
sbb
dec
xchg
cmp
out
mov
in
aam
mov
dec
push
add
out
popa
leave
push
clc
or
add
mov
fwait
sub
push
scas
dec
push
inc
cmp
test
nop
add
cmp
fstp
fwait
mov
cmp
sub
inc
xor
xchg
sbb
repnz
ds
push
mov
pop
dec
jo
jg
fld
iret
pop
in
inc
mov
xlat
nop
or
inc
mov
push
fistp
in
xchg
pop
dec
jp
arpl
scas
push
xor
sar
push
push
push
mov
or
push
xor
ds
test
cmc
or
cld
jbe
push
jecxz
leave
dec
mov
imul
xlat
movs
fs
push
pop
cs
lock
mov
push
call
sbb
or
pop
sbb
ror
and
sbb
shr
test
mov
movs
add
pop
ins
mov
test
repnz
pop
push
jne
pop
xchg
xchg
fs
ret
repz
pop
test
add
push
or
adc
leave
or
test
pushaw
cmp
sbb
push
dec
push
and
or
or
add
out
mov
adc
loope
pop
rol
mov
jmp
aam
xor
scas
inc
dec
sub
scas
mov
adc
in
aas
or
xchg
sahf
in
adc
mov
push
jge
in
dec
xor
or
arpl
ror
mov
loopne
imul
arpl
or
add
std
ja
or
sbb
lock
in
pop
pop
push
daa
add
xor
stos
and
repnz
outs
push
add
ficom
add
pop
(bad)
sar
js
stc
or
dec
add
pop
sbb
or
or
hlt
pop
pop
cmp
sbb
pushf
add
outs
cmps
or
jmp
std
ins
fimul
pop
xchg
cmp
or
mov
jmp
pop
jbe
cs
adc
mov
cwde
sub
inc
pushf
add
sub
(bad)
fisttp
sub
dec
add
sub
bound
add
ja
outs
adc
adc
int3
add
fsubr
mov
(bad)
inc
es
push
ins
dec
sar
and
ret
or
fisubr
sub
inc
add
push
jae
push
add
cdq
adc
sub
inc
adc
push
mov
and
push
mov
es
ret
pop
inc
cmps
fs
adc
cdq
xchg
inc
push
adc
loopne
push
cmp
adc
xchg
add
unpcklps
jb
or
adc
or
cmp
test
daa
add
pop
add
sbb
add
add
push
xchg
adc
lods
in
mov
add
sub
cs
pop
or
inc
push
fcomip
loopne
xlat
nop
pushf
push
mov
movs
aad
inc
jae
fisttp
ds
fadd
xlat
out
xchg
or
sbb
inc
add
adc
push
mov
sbb
in
push
mov
sar
push
xor
pop
xchg
push
dec
pop
mov
jae
adc
stos
push
cdq
jo
cmps
jge
pop
sbb
sti
and
add
sbb
sbb
out
sbb
add
cmp
jns
or
je
enter
loop
mov
fdiv
push
or
adc
enter
jg
or
dec
add
inc
add
icebp
mov
nop
or
dec
inc
xor
neg
sbb
pop
add
ss
add
dec
movs
imul
loopne
jb
lock
call
inc
imul
jge
xchg
or
pusha
push
lods
add
pop
adc
add
or
push
sbb
push
ins
xchg
jb
push
sbb
push
jb
mov
push
or
pop
enter
clc
xchg
mov
push
jne
xor
dec
push
or
sahf
sbb
lock
and
mov
mov
test
out
out
mov
and
or
cmps
jge
cmps
push
xor
xor
cs
cdq
popf
mov
or
in
and
inc
add
sbb
fadd
inc
or
cdq
sub
mov
mov
xor
or
dec
call
in
add
push
fstp
add
fadd
push
jo
jl
or
jnp
xchg
hlt
inc
and
ror
mov
sar
add
mov
scas
fwait
xor
pop
aaa
sbb
or
push
xlat
popa
push
adc
(bad)
test
jecxz
dec
or
jmp
jmp
pop
or
mov
arpl
mov
pop
sbb
mov
mov
jg
or
mov
or
or
and
bound
cld
pusha
dec
je
pusha
mov
add
jns
pop
es
sbb
adc
dec
adc
sahf
pop
es
mov
cmps
pusha
fst
movs
adc
mul
(bad)
stos
or
jmp
mov
fs
push
test
cmp
jae
xchg
add
sbb
imul
inc
shl
push
inc
jb
adc
outs
sub
in
mov
femms
shr
cmp
mov
popa
jmp
xlat
push
xchg
mov
clc
add
mov
fld
mov
jno
das
pop
push
xor
inc
fadd
and
cmp
fmul
or
sbb
aas
dec
add
mov
mov
dec
pop
leave
imul
xchg
cld
leave
push
repnz
jo
lods
add
repnz
push
dec
mov
clc
repnz
push
and
add
mov
push
les
or
nop
or
pop
leave
and
in
cvtpi2ps
repz
push
jb
jmp
dec
mov
pop
leave
dec
fs
test
and
test
jl
adc
mov
mov
sbb
mov
inc
jae
xor
es
ret
bound
mov
rol
nop
and
leave
leave
sti
pusha
adc
jg
or
scas
stc
std
call
je
jp
jne
jb
push
jb
jmp
sub
sbb
pop
std
sbb
or
xor
test
inc
sbb
or
add
add
add
jns
and
lock
cdq
ret
outs
cmp
adc
pop
push
ss
imul
push
xor
(bad)
inc
xchg
pop
ja
dec
and
mov
nop
aaa
or
retf
adc
inc
push
in
or
movs
fisub
jne
add
dec
aaa
adc
jp
xor
add
adc
test
cmp
adc
sub
sbb
add
or
pop
dec
gs
retf
retf
push
pop
xchg
retf
inc
pop
or
or
push
pop
sti
and
dec
mov
daa
mov
test
jbe
sub
mov
dec
test
scas
push
jmp
adc
stc
jo
cmps
push
aaa
pop
rcl
inc
xchg
(bad)
pop
das
sbb
ins
leave
adc
add
push
loope
sbb
lods
cmp
and
jne
ffree
or
pop
stos
mov
pop
xlat
pusha
dec
dec
pop
imul
dec
ret
fmul
nop
ret
inc
push
daa
nop
aas
mov
sub
xor
adc
xor
or
cld
test
in
xchg
and
xor
test
jle
adc
movs
mov
test
arpl
in
or
xor
xor
xlat
mov
xor
inc
call
leave
and
lock
adc
pop
cmc
imul
fucomi
aas
mov
arpl
or
or
inc
dec
pop
sbb
loop
sub
inc
sub
and
mov
cmp
fidivr
push
inc
and
xlat
ja
or
push
test
bound
sbb
pop
dec
add
test
jnp
cmps
hlt
cmps
dec
ja
lahf
xchg
dec
or
movs
add
mov
inc
pop
fsubr
pusha
in
cmps
adc
int
jbe
add
ja
adc
out
mov
sub
mov
or
std
jecxz
sbb
cmps
push
sbb
mov
nop
adc
sbb
ss
sub
sbb
xor
add
inc
and
push
rcl
ja
rcr
sar
test
sbb
push
fsub
in
jb
and
sbb
fstp
sub
popa
pop
xor
adc
ficom
push
push
mov
adc
gs
xor
stos
and
gs
(bad)
pop
popf
(bad)
sbb
dec
sbb
sbb
sub
adc
adc
push
add
lea
and
inc
into
push
sub
jo
dec
mov
pop
cwde
xchg
xor
jge
push
inc
in
mov
pusha
inc
loopne
xor
mov
sub
add
ins
mov
jo
or
and
xchg
dec
and
and
sbb
inc
xor
xor
das
xor
xchg
xchg
and
dec
xor
ins
ss
add
dec
sbb
sbb
inc
cmp
cmp
xor
and
leave
in
xor
inc
xor
xor
inc
xor
mov
mov
cwde
iret
dec
xor
xor
push
pop
pop
daa
shr
pop
or
dec
aaa
je
adc
fcom
dec
sahf
xor
jnp
(bad)
lock
xor
lods
push
call
call
push
pop
and
sbb
aam
dec
outs
mov
pop
fmul
loopne
cld
xlat
jnp
dec
cli
pop
mov
jnp
mov
push
push
out
call
ins
sahf
out
sahf
mov
fdiv
out
enter
das
jle
iret
repz
inc
enter
mov
cmp
clc
out
idiv
sbb
scas
push
inc
(bad)
lock
sahf
fs
andps
inc
daa
pop
sub
jno
test
fwait
or
inc
mov
inc
(bad)
xchg
stos
in
enter
pop
leave
in
sub
sub
aaa
js
add
fisub
fadd
mov
retf
push
add
dec
adc
fcom
or
mov
xchg
and
or
js
js
xor
sahf
ja
sti
sbb
test
adc
cld
pop
sub
inc
sahf
mov
and
nop
push
add
std
or
hlt
push
xchg
not
jmp
movs
and
add
imul
je
xor
inc
and
into
(bad)
mov
xor
xchg
xchg
xchg
xchg
fs
xchg
xchg
xchg
push
xchg
xchg
xchg
ins
ins
outs
outs
mov
push
ja
add
sar
push
mov
cmp
dec
xchg
test
sub
call
aaa
ss
jne
mov
xlat
and
add
ficom
adc
xchg
out
pusha
add
nop
push
push
sub
cmp
arpl
xchg
adc
and
dec
mov
mov
and
xchg
test
in
shr
mov
aaa
mov
add
push
push
inc
adc
adc
cmp
popa
and
fwait
les
enter
mov
pushf
jmp
pop
pop
sbb
pusha
mov
sub
mov
dec
jg
pop
aad
gs
adc
lahf
mov
scas
add
sbb
popa
sbb
adc
lea
ss
add
add
push
sub
mov
push
shl
and
inc
xor
ins
fstp
je
or
cmp
or
fistp
mov
or
push
jl
hlt
mov
add
pop
xor
sar
adc
test
test
call
nop
sbb
and
cmps
(bad)
iret
inc
cwde
popf
loopne
lahf
add
inc
jl
inc
inc
push
xor
imul
sbb
push
add
inc
mov
and
ins
mov
inc
cmp
int
push
jmp
mov
lock
ja
jmp
adc
shl
and
add
add
xor
gs
outs
rcl
mov
mov
and
and
fs
adc
ja
(bad)
xor
push
sub
(bad)
sbb
and
mov
repnz
pop
push
inc
ss
or
add
mul
mov
add
xor
pop
cld
and
cmp
mov
mov
and
jge
pop
adc
sbb
xor
or
mov
aas
sbb
push
push
or
mov
jbe
sbb
adc
adc
xor
aad
push
jo
rol
xchg
pusha
hlt
inc
ficomp
push
mov
mov
push
mov
test
aaa
push
jo
sub
jbe
push
xchg
push
add
or
mov
mov
mov
loope
cmp
and
push
es
dec
xchg
(bad)
jge
nop
add
pop
pop
add
push
repnz
add
pop
add
cmp
mov
add
push
stc
pop
and
add
mov
repnz
loope
rol
bound
mov
mov
push
or
iret
ja
mov
mov
xchg
loopne
mov
mov
fld
fcom
cmp
cmp
mov
adc
popa
push
ja
add
mov
mov
sub
ss
adc
add
pop
loopne
sbb
add
ret
cmp
sbb
cmp
add
pushf
push
sub
data16
push
cmp
add
out
pop
add
fld
sbb
fdiv
add
cmp
pop
sbb
sbb
fcomi
pop
sbb
sbb
mov
push
sbb
push
push
fcomp
pop
pop
fnsetpm(287
push
dec
adc
adc
(bad)
xor
retf
popa
adc
test
or
jg
jle
cmp
inc
js
fnstcw
dec
rcl
push
push
xor
mov
pusha
ret
daa
cmp
xchg
adc
adc
and
pusha
out
pop
sub
mov
fisttp
pop
adc
jmp
xchg
or
inc
stos
popf
jle
dec
mov
xor
xor
lock
mov
sbb
ja
dec
inc
dec
jecxz
loope
neg
add
add
jns
push
mov
jo
jbe
fild
cli
add
adc
sahf
add
cli
push
add
sbb
add
add
scas
daa
sbb
inc
push
fbstp
ds
add
nop
jae
and
add
and
mov
fld
mov
fcmovnbe
xchg
add
loop
xor
nop
lods
jmp
call
sub
xchg
push
popa
fsubr
push
mov
and
xor
and
aaa
enter
sub
lds
xor
or
aad
add
adc
call
cdq
cwde
jmp
clc
idiv
adc
inc
aaa
ss
push
and
aas
inc
cmp
dec
xor
push
cld
add
js
inc
lods
lods
add
das
(bad)
dec
pop
jo
add
inc
add
ror
fiadd
push
add
in
sbb
xchg
pop
(bad)
lock
enter
add
cwde
xor
and
pop
pop
out
fs
dec
ret
sbb
sahf
xchg
ins
loopne
cmp
test
fadd
push
mov
add
mov
xchg
clc
or
fadd
ret
pop
ret
hlt
iret
and
mov
mov
pop
fwait
jnp
adc
sbb
addr16
add
mov
and
fiadd
lock
add
lock
sub
xor
add
and
jb
leave
lock
lock
xor
xchg
movs
lock
add
add
lea
dec
ror
nop
addr16
in
out
out
aaa
dec
nop
retf
out
cmp
ins
(bad)
out
in
sahf
and
out
test
push
and
out
test
imul
movs
scas
pop
xor
inc
aaa
in
jo
dec
iret
in
mov
add
dec
cwde
jge
ret
pushf
dec
push
add
in
jb
adc
(bad)
std
and
add
jge
pop
and
and
jb
call
xor
in
in
inc
leave
test
or
pusha
or
jb
pop
adc
enter
sbb
pushf
rcl
dec
pop
jge
mov
push
mov
sub
jp
test
mov
dec
inc
add
sbb
add
add
sbb
nop
jmp
sub
dec
jne
arpl
add
push
and
aam
fadd
mov
add
mov
xor
dec
dec
and
push
in
imul
add
or
dec
and
fistp
test
add
push
ror
pusha
push
loope
and
sub
or
sti
add
dec
add
(bad)
mov
add
dec
call
sbb
sbb
movs
rol
outs
sub
cmc
mov
lods
xchg
cwde
jmp
aad
xchg
call
push
dec
sti
xlat
scas
inc
push
imul
mov
fwait
(bad)
(bad)
add
mov
call
ja
ss
in
add
adc
fsub
xchg
mov
and
pusha
into
mov
dec
sbb
push
ret
aas
mov
not
sub
mov
mov
mov
pop
cmp
xchg
cwde
xchg
ret
adc
iret
jo
fcomp
(bad)
cdq
or
ror
fld
push
inc
jb
inc
add
dec
shl
repz
mov
fs
loopne
in
jb
push
popf
push
inc
cmp
mov
mov
add
and
arpl
test
rcl
pop
aad
adc
dec
or
pop
stos
fidivr
ds
jne
lods
add
ja
push
bound
lahf
cmps
cmp
push
mov
les
inc
xchg
push
shl
inc
add
movs
add
dec
test
sbb
cs
dec
add
jmp
mov
add
or
ror
ss
sub
bound
lods
or
adc
push
sbb
sbb
leave
xchg
ins
or
je
mov
int
pop
jns
push
push
imul
adc
ret
mov
cdq
jne
mov
xchg
ret
aas
mov
mov
inc
aas
push
ins
out
sub
daa
xchg
jne
cmp
mov
sub
ret
mov
or
fstp
inc
test
clc
pop
ror
xlat
lahf
jg
cmp
mov
xchg
or
sub
and
sbb
add
cmp
and
mov
sbb
ins
or
stos
inc
ins
fwait
xor
(bad)
dec
sbb
fist
or
lock
into
and
(bad)
mov
add
lock
dec
dec
imul
sbb
xchg
adc
adc
adc
loopne
inc
mov
addr16
add
add
fs
ret
(bad)
mov
xchg
cmp
and
popa
mov
pop
clc
or
clc
outs
or
test
pop
scas
(bad)
or
or
xlat
gs
or
mov
adc
sbb
daa
sbb
mov
jo
call
xchg
les
or
jo
sub
adc
and
popa
adc
mov
mov
sbb
bound
cmp
sbb
or
fadd
pusha
aam
sbb
jbe
sbb
jl
aam
in
add
pop
icebp
cmp
add
jmp
in
dec
mov
add
push
ret
push
xor
(bad)
and
mov
xor
clc
ret
movs
xor
(bad)
and
fadd
sub
clc
mov
rcl
cmp
sub
sub
mov
lock
cmc
or
sub
xor
or
mov
xlat
push
dec
test
push
sub
test
icebp
sbb
adc
pop
mov
or
fldcw
xchg
in
push
in
or
sbb
pop
and
xchg
add
add
add
add
mov
adc
(bad)
dec
jecxz
or
adc
xchg
pop
add
enter
pop
dec
lds
(bad)
mov
enter
push
adc
pop
adc
adc
gs
adc
xchg
sbb
or
add
mov
mov
out
cmc
or
mov
sbb
inc
shl
test
pop
inc
mov
aaa
scas
and
lock
fcomp
or
xchg
or
push
scas
cmps
movs
jmp
aaa
aam
outs
xor
(bad)
or
es
xor
and
and
and
or
or
stos
ror
adc
pop
inc
ret
add
mov
xchg
imul
das
add
add
scas
adc
xor
mov
xor
outs
jo
inc
call
dec
call
dec
xor
add
test
out
adc
es
daa
add
add
pminsw
loope
call
and
pop
(bad)
jmp
in
inc
add
mov
test
push
clc
push
ret
jle
loop
dec
pop
mov
or
sub
rol
or
xor
dec
leave
enter
mov
add
int3
aaa
add
js
add
inc
rol
movs
mov
pop
xchg
and
out
ret
out
ret
xchg
add
add
adc
mov
(bad)
cmp
data16
lahf
mov
and
inc
push
scas
in
adc
adc
mov
inc
and
jmp
xchg
adc
call
dec
daa
loopne
pop
das
cmp
(bad)
int3
adc
sbb
out
dec
and
pavgb
mov
mov
out
loopne
test
adc
cmps
les
mov
outs
pop
test
push
push
fld
bound
nop
add
xchg
sbb
es
mov
adc
cmp
cli
cld
mov
mov
cmp
test
and
mov
inc
sbb
inc
ror
sbb
add
and
outs
fcmovne
ret
jno
sbb
pop
ror
dec
int
add
rol
ret
imul
retf
adc
fcom
dec
or
ror
fnstenv
xor
imul
adc
in
sbb
xchg
fwait
adc
inc
lods
sbb
mov
loopne
std
xchg
test
jmp
inc
ins
shl
es
shl
adc
mov
or
add
mov
push
adc
mov
int
mov
mov
out
add
into
lock
(bad)
pop
aaa
enter
imul
push
inc
pop
shr
daa
mov
sbb
ds
cmps
or
add
and
cmp
nop
or
rol
or
dec
out
and
and
or
fldcw
call
pop
les
dec
rcr
push
imul
pop
pavgb
cwde
ret
push
cdq
add
and
adc
inc
mov
sbb
xor
sbb
xor
ror
iret
ror
sbb
xor
sar
xchg
inc
ins
outs
push
pop
pop
cwde
mov
outs
js
leave
mov
xor
and
mov
dec
ss
shl
mov
jecxz
or
fmul
shl
fwait
xor
frstor
jge
hlt
or
imul
mov
jmp
adc
push
dec
stc
and
ins
rcl
arpl
and
imul
sub
adc
adc
jnp
pushf
je
out
arpl
(bad)
xchg
cmp
pop
clc
inc
or
and
lds
aaa
xor
or
leave
mov
mov
mov
inc
xlat
fdiv
addr16
add
jmp
mov
or
mov
add
mov
xchg
or
int3
in
je
mov
or
jno
push
dec
jnp
sahf
in
sti
pop
dec
mov
es
dec
mov
or
ret
dec
call
nop
inc
inc
sti
push
sub
and
push
sti
pop
mov
inc
pop
sti
movs
and
fmul
cmp
jns
cmp
push
mov
sub
call
cmp
and
push
mov
ins
push
or
dec
mov
add
bound
(bad)
and
clc
inc
adc
pop
fs
test
adc
popa
xchg
out
lea
enter
enter
xor
cmp
xor
inc
dec
or
sbb
dec
adc
fcmovb
push
and
push
(bad)
es
push
ins
push
push
pop
imul
inc
jo
imul
jb
push
(bad)
adc
daa
leave
int
fisttp
mov
and
jo
inc
sbb
push
ins
xor
add
mov
cmp
test
in
(bad)
fcom
aam
pushf
nop
dec
es
push
repnz
ror
int3
enter
enter
and
jmp
rcr
ror
pop
pop
pop
jmp
mov
dec
cli
(bad)
enter
rol
movs
and
adc
add
call
scas
mov
xchg
xchg
dec
(bad)
lahf
add
cmp
clc
sahf
sbb
or
mov
scas
pusha
or
push
mov
pop
pop
shl
mov
mov
mov
rol
push
adc
mov
mov
xchg
inc
fisubr
pop
or
or
mov
and
in
fbld
aad
dec
je
pop
add
xchg
inc
mov
xor
or
popa
popa
nop
jo
xlat
jns
test
inc
sub
cs
or
sbb
pushf
movs
jb
not
neg
sub
inc
sbb
mov
jne
in
pop
shl
mov
adc
cmp
test
dec
cs
add
sbb
xor
xor
dec
fwait
ret
xchg
sub
(bad)
sbb
jmp
in
iret
add
loopne
test
adc
sar
add
sbb
call
adc
add
sbb
std
sub
xor
xchg
rol
sbb
stos
dec
cs
lock
pop
scas
fsubr
adc
fild
das
adc
add
sbb
in
adc
jne
sahf
inc
and
mov
pop
outs
in
imul
push
fs
pop
xor
pop
mov
mov
loopne
shr
adc
mov
cmps
pusha
xor
dec
sbb
jp
mov
xchg
mov
add
push
or
add
jno
sub
add
lods
lds
adc
popa
inc
push
or
add
aad
xchg
mov
push
xor
xor
jbe
shl
push
shr
sub
and
cmps
add
aaa
adc
call
repnz
pushf
cmp
add
dec
pop
ret
add
and
je
dec
dec
push
in
inc
pop
dec
dec
add
adc
call
bound
shl
dec
sbb
pusha
jne
inc
adc
jl
push
imul
add
mov
push
jbe
test
mov
mov
sahf
icebp
or
push
and
xchg
xor
add
dec
jb
mov
in
nop
pop
loope
dec
in
call
cmps
xor
xor
sbb
or
fmul
popf
push
inc
pop
xchg
jno
fdivr
push
aas
pop
xchg
cmc
jg
pop
popf
lds
fdiv
push
or
repnz
popf
out
push
jne
popa
or
test
shr
cmp
xor
jmp
inc
sbb
xchg
push
repnz
and
jmp
gs
in
cld
cmp
jmp
inc
or
cli
adc
and
mov
push
fnstenv
sbb
inc
mov
lods
pop
std
xchg
bound
test
imul
iret
out
loopne
mov
fwait
shl
mov
push
test
mov
mov
push
je
mov
jne
inc
pop
pusha
mov
cld
sar
sbb
rcl
repz
ss
imul
adc
dec
dec
sahf
test
mov
mov
div
fsubr
mov
xchg
xor
in
loopne
fadd
inc
mov
imul
lock
imul
(bad)
xlat
sbb
and
sub
jecxz
adc
jne
sub
or
mov
fsubr
pop
leave
sbb
mov
jno
or
or
add
fild
ins
loope
mov
lea
sub
cmp
add
fsubr
in
cmp
push
lods
add
lods
and
jp
in
or
add
lahf
les
sbb
xchg
or
push
movs
test
test
icebp
or
sbb
pop
sub
packsswb
pop
sbb
mov
pop
mov
push
adc
loop
sub
lea
sub
icebp
xor
pop
adc
jb
and
dec
shl
push
gs
cmp
cmp
or
test
jnp
add
and
xor
dec
(bad)
loopne
mov
push
ror
mov
cwde
jmp
jno
and
fdiv
mov
cwde
add
fiadd
add
bound
lods
and
dec
xchg
movs
sbb
mov
mov
(bad)
mov
mov
mov
inc
add
(bad)
adc
push
gs
les
dec
xchg
adc
or
mov
inc
dec
mov
daa
int3
mov
ret
fsubr
in
and
imul
adc
outs
out
add
dec
ja
xchg
daa
in
cmp
jne
sub
lock
and
pop
cli
movs
add
or
pop
sbb
dec
or
pushaw
(bad)
fs
daa
add
inc
call
cwde
jb
or
xor
fs
push
or
xchg
arpl
pop
int3
add
hlt
lds
jmp
push
sbb
jmp
xor
leave
add
in
or
rcl
out
add
and
enter
out
sub
jecxz
xor
pop
rcr
seta
mov
push
pop
push
and
xchg
inc
dec
test
push
out
sub
das
jl
nop
int
test
add
sub
aam
push
xchg
or
ret
xchg
rcl
mov
jg
hlt
push
xchg
loope
mov
mov
push
or
fldcw
nop
xchg
call
sbb
mov
xor
cmp
add
outs
or
push
add
xchg
push
mov
psrlq
cmp
push
dec
call
and
jg
imul
jmp
add
adc
and
ret
inc
sub
sub
rcl
mov
and
lods
ja
cmps
ficom
inc
add
xchg
sub
imul
jae
xchg
xor
aam
adc
loopne
xor
and
mov
jmp
cmc
xor
jno
jmp
or
xor
lea
sbb
push
add
sti
xor
rcl
pop
or
icebp
dec
xchg
pusha
stc
nop
(bad)
pop
add
je
or
or
dec
jmp
lea
dec
mov
pop
pop
pop
fistp
mov
int3
sbb
and
pusha
sbb
xchg
pop
mov
fst
sbb
jg
inc
mov
mov
add
ds
enter
fadd
xor
xor
rcr
(bad)
loopne
jae
mov
fsub
mov
and
push
and
add
or
das
fsubr
xchg
inc
push
aam
mov
mov
dec
jmp
xchg
add
test
xor
iret
rol
mov
fsub
js
mov
fbld
or
mov
lock
or
and
aam
shl
pop
es
ror
pop
adc
arpl
lock
lock
or
and
pop
jp
mov
and
add
adc
jnp
popa
sbb
or
jg
and
mov
push
loopne
rcl
outs
and
and
shl
int
test
mov
in
imul
push
push
add
ins
and
rcl
cmp
dec
xchg
and
mov
cmp
sbb
stc
push
loope
scas
call
inc
int
daa
in
jns
dec
cmp
sub
add
in
or
adc
cmp
mov
jno
cmp
mov
pop
dec
xchg
rol
pop
dec
popa
jno
xlat
pop
pop
push
mov
lods
and
push
push
xchg
jnp
repz
enter
popa
jecxz
pop
(bad)
stos
inc
das
cmc
mov
rcr
dec
cdq
cmp
xor
and
repz
repnz
repz
icebp
fwait
inc
call
push
add
mov
or
pushf
mov
in
cmp
mov
push
and
add
add
add
cli
push
ror
jmp
jno
xchg
or
iret
push
imul
pop
xor
jns
mov
inc
xor
inc
adc
add
add
inc
jno
xchg
int
cmp
adc
in
mov
and
add
in
loop
push
add
test
rcr
mov
or
jne
and
add
ror
sti
cmp
jne
sub
add
add
and
fcomp
je
dec
or
xchg
clc
jmp
ret
or
fsubr
aaa
xor
js
mov
fsubr
adc
adc
pop
or
mov
cmp
inc
dec
in
adc
and
dec
jo
sub
jns
mov
scas
inc
push
add
shl
daa
loope
mov
add
push
sub
data16
dec
in
push
cmp
pop
fld
loopne
pop
fbld
mov
and
or
nop
and
arpl
pop
call
jmp
inc
imul
mov
or
adc
daa
jmp
ins
or
inc
dec
add
add
push
xlat
dec
ja
inc
bswap
sbb
data16
add
es
in
cmp
xor
hlt
or
adc
loop
adc
test
std
jle
mov
call
call
adc
call
cs
lea
pop
add
enter
nop
lar
(bad)
out
sub
xor
mov
(bad)
xchg
ja
dec
bswap
sbb
xchg
or
mov
sub
sti
or
or
or
idiv
lea
xor
sub
xchg
jbe
imul
xchg
ss
shr
fbstp
sub
rol
test
loopne
xchg
or
mov
mov
fadd
add
or
sbb
or
push
lods
adc
inc
adc
hlt
dec
sub
sbb
(bad)
loope
pop
pop
test
xlat
jno
xor
jae
lods
or
xchg
push
xchg
and
jb
fadd
(bad)
scas
nop
and
(bad)
enter
jae
mov
xor
xchg
push
es
call
xor
enter
mov
ret
out
call
adc
ins
fwait
sbb
cld
xchg
mov
int
int3
xor
mov
jmp
ja
retf
fldenv
and
pop
lea
xchg
out
aam
aam
xchg
pusha
inc
push
sbb
fdivr
pop
aad
sbb
(bad)
and
mov
adc
movs
and
sbb
call
mov
shl
(bad)
ds
or
lock
into
pop
add
inc
sbb
(bad)
mov
adc
inc
adc
mov
retf
aam
pusha
shl
add
xor
inc
push
out
pop
and
in
inc
dec
(bad)
in
shl
sub
loop
inc
inc
sub
ret
add
lods
cdq
mov
sub
es
cdq
push
or
add
fs
mov
sbb
popa
xor
pop
pavgb
imul
adc
adc
adc
daa
rcl
or
int3
fist
or
popf
in
xor
movs
pop
push
aaa
fcmove
push
test
enter
add
adc
dec
add
leave
dec
pop
js
cmps
loopne
sub
xchg
into
ret
jbe
adc
cmp
sbb
xchg
add
repnz
mov
add
sbb
adc
mov
cmp
mov
call
(bad)
push
fs
push
enter
push
or
cli
stc
nop
xchg
add
inc
es
cmc
hlt
nop
inc
inc
push
adc
repnz
adc
inc
push
sbb
out
in
fs
es
sbb
cdq
nop
or
jmp
sbb
out
fs
es
and
loop
sbb
nop
or
and
es
push
(bad)
fdivr
fs
sub
fiadd
cdq
nop
or
fsub
in
xchg
sub
(bad)
aad
push
fs
aam
xlat
aad
fld
dec
mov
adc
add
popa
cdq
nop
pop
and
je
ss
retf
add
mov
call
inc
leave
sbb
fdivr
hlt
das
popa
loop
inc
mov
add
daa
jae
add
lds
xlat
ins
sub
sub
mov
push
or
pop
leave
push
or
mov
add
jne
in
out
out
add
lsl
add
sbb
push
imul
data16
add
xchg
iret
dec
xchg
lds
imul
cmp
jecxz
adc
test
push
fwait
js
jmp
cmps
xchg
dec
test
sbb
xchg
hlt
add
adc
add
xor
and
push
movs
jae
mov
pop
mov
jne
inc
add
add
out
repz
call
add
addr16
fsubr
adc
and
xor
mov
mov
or
push
stos
mov
xlat
sub
mov
jmp
and
or
or
xchg
jmp
ins
sub
iret
loop
pop
xchg
int3
sbb
pop
sub
test
or
ffreep
das
and
mov
cmp
cmp
add
loopne
sbb
retf
mov
add
pop
fmul
mov
(bad)
ins
pop
and
nop
sub
pushw
and
rcl
cmp
jp
xlat
imul
sbb
lds
ds
mov
jno
jo
sub
dec
loop
push
mov
mov
jl
jmp
pop
inc
inc
xchg
xchg
jge
dec
outs
jns
sbb
popf
jae
xor
pop
and
jmp
pop
pop
xor
repnz
cmp
jmp
lea
xor
pop
lds
in
sub
cmp
cmp
pop
mov
sub
jbe
and
or
adc
les
jo
jmp
clc
cmp
das
jle
cmp
pop
imul
inc
xor
push
rcl
sbb
ss
mov
xchg
shl
loop
xchg
mov
enter
sub
adc
fmul
add
add
inc
fwait
mov
or
fsubr
inc
adc
mov
loope
(bad)
mov
jge
fisttp
dec
sbb
pop
pop
inc
bound
mov
sbb
mov
cmp
std
push
mov
mov
inc
push
add
and
arpl
mov
mov
push
in
repnz
push
xchg
mov
(bad)
push
mov
push
sub
push
push
scas
sub
xor
xor
test
push
in
or
shr
pop
jge
and
js
mov
fwait
xlat
je
dec
imul
lahf
jo
add
dec
(bad)
jmp
inc
sub
data16
jmp
popa
sbb
pusha
sbb
ins
je
or
mov
iret
sti
sahf
movs
dec
add
push
call
jns
out
sbb
cmp
mov
jne
mov
dec
push
test
xchg
lea
or
(bad)
in
push
jmp
sbb
add
sub
pop
sub
dec
cmp
sub
cmp
sub
or
repnz
push
das
push
xor
mov
not
and
test
sbb
inc
xor
ret
adc
cli
or
mov
sub
scas
and
sub
je
lods
mov
xchg
adc
push
and
xchg
adc
js
imul
pop
or
popa
hlt
inc
loopne
mov
mov
dec
mov
xchg
dec
and
mov
aad
push
add
adc
and
imul
push
jmp
xor
dec
cmp
jge
cwde
shr
shl
inc
es
mov
mov
and
rol
dec
inc
cwde
cwde
or
jp
rcr
sbb
push
xchg
lods
xor
add
push
or
fsub
ins
in
sub
add
rol
cwde
sbb
or
cmp
je
or
or
xor
lods
or
test
push
adc
lea
test
in
add
add
push
adc
shl
dec
push
popa
je
call
popa
add
mul
in
into
ret
lahf
push
push
cwde
in
cdq
cmp
mov
call
jmp
in
and
test
sub
stos
rol
test
push
mov
jno
call
cmp
mov
sbb
je
xor
jl
adc
test
popa
call
ret
pop
mov
push
mov
nop
lock
neg
adc
mov
push
ret
inc
lods
leave
add
mov
and
bound
and
xchg
inc
or
or
sbb
and
pop
add
lock
popa
and
fwait
stc
mov
jp
sbb
sbb
xchg
pop
mov
and
ret
push
cmp
push
ins
sbb
aam
mov
and
sub
imul
sub
test
inc
dec
in
call
or
inc
cli
jge
and
lock
and
loopne
push
stos
adc
ss
stos
add
loopne
test
out
adc
lock
ins
leave
out
adc
sbb
pop
idiv
inc
push
fcom
div
and
aaa
xchg
sub
pushf
into
lock
js
in
adc
loope
(bad)
dec
aad
cmp
inc
fld
sar
fistp
call
and
push
(bad)
jmp
add
jge
data16
mov
sbb
daa
and
pop
shr
leave
lock
inc
or
movs
popf
jo
mov
or
ficomp
sub
adc
xor
or
add
or
jecxz
shl
add
add
sbb
fwait
inc
mov
mov
pop
sbb
call
mov
xor
stos
jg
xchg
push
(bad)
cmp
nop
inc
shl
fistp
cmp
fadd
ins
mov
sub
nop
and
ret
sbb
mov
dec
sub
inc
les
add
test
or
inc
inc
lea
sbb
push
dec
pop
push
shl
mov
pop
fild
or
fldcw
xor
(bad)
addr16
fiadd
jge
xor
push
call
dec
push
sub
aaa
mov
in
and
pusha
pusha
and
adc
push
mov
shr
mulps
scas
movs
and
cdq
rol
pop
imul
add
es
repnz
or
sub
pop
ret
push
test
sbb
ret
(bad)
(bad)
jmp
adc
sbb
pop
mov
xchg
cs
mov
or
and
stos
mov
push
xlat
xchg
ds
jns
or
mov
in
cmp
or
pop
hlt
jmp
jns
nop
cs
jmp
xchg
cmp
hlt
cmp
and
push
lods
dec
call
push
xchg
imul
(bad)
push
pop
in
(bad)
xlat
fdivr
jmp
es
mov
fwait
sbb
js
mov
je
fisttp
test
mov
mov
mov
and
cmc
or
ret
xor
test
in
les
inc
pop
sbb
mov
push
outs
fld
sub
sbb
mov
xchg
sub
lea
xchg
sub
mov
scas
inc
mov
es
mov
adc
fcom
inc
mov
or
cmps
cmp
(bad)
push
inc
add
inc
add
mov
add
xchg
gs
inc
or
or
cmp
sub
or
add
call
dec
mov
xchg
rol
jne
outs
add
add
or
dec
lods
sbb
stos
in
bound
mov
lods
mov
icebp
push
ret
movs
shl
xor
fiadd
lods
xor
into
or
shr
mov
and
pop
pop
lds
lahf
pop
nop
and
or
cmp
cwde
and
inc
cs
add
and
mov
fwait
call
push
inc
ss
or
fadd
shr
out
test
and
inc
rcr
mov
in
cs
pop
and
mov
sbb
push
mov
pop
and
inc
and
cmp
js
mov
dec
and
nop
shl
les
mov
dec
mov
fsub
cdq
in
movs
adc
aad
xor
in
data16
dec
and
mov
adc
lea
int3
cld
or
dec
mov
and
jo
pusha
sub
ror
shl
or
pop
sbb
rol
jl
and
test
clc
lods
adc
mov
jne
cmps
inc
ja
jo
shl
adc
and
dec
xchg
test
push
icebp
out
cs
enter
in
lods
(bad)
loopne
sbb
cmc
out
push
ret
test
push
or
push
int3
or
or
invd
lods
movs
and
push
rcl
(bad)
fisubr
stos
ins
xlat
or
add
inc
push
xchg
add
test
out
inc
push
mov
test
in
pop
push
lods
xor
or
sbb
mov
mov
cmp
mov
rol
lar
mov
int
jne
push
aam
push
add
sahf
adc
mov
cmp
popa
enter
jne
pusha
mov
or
and
xchg
add
enter
sti
jmp
mov
pop
and
out
mov
mov
push
sbb
dec
sub
aas
sbb
push
mov
cmp
pop
lds
popa
leave
hlt
mov
inc
sub
dec
and
pop
lock
and
out
cmp
pop
xor
je
fwait
sti
(bad)
jmp
outs
fcomp
sbb
sub
and
add
or
sub
sub
push
xchg
mov
cwde
xor
or
inc
add
(bad)
sbb
or
add
push
fsubr
imul
adc
scas
mov
addr16
sub
xor
sbb
dec
loopne
aaa
iret
stc
ret
cmp
add
inc
or
test
mov
xchg
mov
mov
nop
adc
or
stos
into
lock
(bad)
jge
(bad)
sbb
sti
rcl
hlt
in
jmp
sub
and
jne
rcl
sub
inc
xchg
popa
add
xlat
adc
mov
jne
sbb
or
bound
(bad)
nop
push
loopne
mov
iret
add
adc
adc
shl
test
mov
xor
sub
dec
xchg
xor
lods
pop
or
pop
sti
xor
dec
dec
shr
dec
std
pop
cmp
aaa
in
mov
call
dec
jle
stos
sub
inc
and
loopne
fimul
jmp
dec
inc
pop
enter
sub
(bad)
sub
xor
iret
or
add
or
neg
cmp
out
jbe
pop
jae
add
or
js
(bad)
adc
sbb
or
push
jo
fadd
sbb
(bad)
dec
int
push
pop
xchg
imul
dec
(bad)
dec
sub
xchg
loopne
jae
cmp
sti
leave
push
fnstcw
mov
mov
and
repz
pusha
sub
jne
mov
jmp
aaa
jecxz
cwde
dec
leave
or
sub
mov
xchg
mov
push
add
push
sub
stos
sub
lods
loope
cmp
stc
push
ret
mov
dec
adc
movs
ror
inc
test
shl
hlt
aaa
pop
les
mov
dec
dec
or
inc
adc
das
jne
mov
dec
or
jne
push
jp
dec
add
mov
cwde
fisubr
fbld
or
mov
mov
dec
push
sbb
cli
add
sub
jne
add
push
mov
in
pop
(bad)
aam
add
jmp
dec
and
xchg
or
int3
push
retf
rcr
dec
inc
adc
pusha
jnp
(bad)
mov
fcom
fldenv
or
ficomp
add
add
in
fst
les
xchg
fimul
aam
jbe
jb
in
adc
cmp
push
push
inc
retf
sub
fs
push
das
adc
push
sti
inc
push
jb
push
sbb
push
dec
ror
add
pop
lahf
hlt
fisub
or
imul
xor
xchg
jecxz
push
push
xor
mov
add
hlt
pop
mov
or
(bad)
sbb
or
push
sub
xor
test
scas
add
js
mov
fs
jl
cmp
lock
pop
and
or
adc
push
mov
pop
xchg
(bad)
mov
jl
sub
repnz
add
add
arpl
dec
adc
xor
inc
adc
mov
scas
xor
ret
and
sub
ret
mov
dec
mov
jg
pop
fst
inc
shl
jmp
(bad)
pusha
cmp
sbb
leave
sbb
test
cmp
ret
jne
adc
add
and
popf
retf
push
push
pop
sbb
inc
mov
mov
ins
or
adc
mov
dec
pop
aas
mov
or
gs
push
mov
adc
pop
rcl
sbb
rcl
mov
fcom
invd
or
mov
outs
cmp
or
sub
cmp
jno
(bad)
call
std
sbb
jno
mov
and
daa
mov
xchg
mov
fwait
(bad)
in
clc
pop
add
cmp
jne
push
or
fld
pop
inc
scas
or
dec
mov
jne
adc
int3
cmp
or
or
or
mov
mov
mov
cmp
and
lods
aas
and
dec
adc
repnz
mov
imul
lock
in
lock
push
cdq
lock
pop
lock
in
add
repnz
leave
add
inc
mov
and
aam
or
xor
sbb
inc
adc
xlat
push
ds
call
sub
cmps
xor
mov
push
push
mov
pushf
push
pop
mov
test
push
nop
ins
ss
xlat
jl
inc
ror
push
inc
mov
xchg
cmp
outs
push
sbb
fcom
imul
mov
push
push
aam
sub
sar
pop
test
sar
dec
sub
rcr
sar
leave
in
or
shl
arpl
js
xchg
inc
or
push
mov
push
mov
jmp
mov
add
fs
cmp
xor
cmp
xor
xchg
jb
adc
or
dec
enter
cmc
hlt
jb
enter
repnz
xor
adc
lock
and
out
in
mov
test
adc
adc
and
xor
sbb
out
dec
enter
adc
enter
loope
pop
xor
loopne
fild
xchg
fisub
adc
and
fadd
(bad)
enter
aad
sub
adc
rcl
ror
sub
fcomp
sub
ror
imul
sub
push
sub
cmc
pop
fsubr
clc
xor
clc
xchg
xor
xor
sub
mov
clc
fld
retf
pop
sub
sub
push
pop
iret
sar
retf
imul
add
pop
ficom
push
or
lock
imul
aas
dec
mov
in
sbb
aas
call
test
inc
xor
test
add
das
add
int3
call
add
push
push
iret
shl
daa
add
cli
call
or
or
rol
add
mov
xor
xor
push
call
je
int
mov
push
inc
dec
push
fsub
cmc
pop
pop
sbb
add
cmp
jmp
lea
les
or
jp
call
and
stc
add
xchg
retf
sub
test
mov
loope
(bad)
in
adc
pop
or
loop
sub
into
pop
xchg
ror
sbb
sub
mov
sbb
iret
pop
arpl
mov
loope
in
xor
stc
and
test
xor
in
sar
cmp
jecxz
aad
xchg
pop
pop
jmp
cmps
sbb
aad
ret
aas
lock
mov
sub
lods
jmp
pop
mov
inc
fcmovnb
daa
dec
mov
dec
fcmovnbe
sub
out
fwait
sub
pop
xchg
or
mov
adc
aad
mov
cmp
pop
or
mov
rol
pop
outs
fmul
sub
test
xor
push
nop
into
or
adc
cmp
repnz
or
(bad)
pop
popf
icebp
inc
test
mov
ins
arpl
push
cmps
pop
or
popa
inc
aam
xchg
xchg
mov
pop
add
mov
xor
mov
push
cmps
sbb
fld
jb
and
sub
imul
inc
mov
lock
add
push
pushfw
(bad)
xor
sbb
movs
mov
fild
lock
shl
in
fadd
(bad)
pop
sbb
mov
jge
sub
mov
out
cs
adc
rcl
xor
mov
sbb
push
xchg
mov
push
push
mov
xlat
xchg
sub
sub
dec
push
add
push
sub
and
mov
aam
pop
clc
jno
adc
xor
inc
(bad)
inc
lock
jle
sub
test
mov
inc
pop
dec
cmp
fsubr
pop
sub
pop
xor
add
in
mov
in
dec
arpl
sbb
fcom
inc
add
xor
sbb
add
mov
push
test
not
inc
jne
arpl
jne
add
popa
out
push
fmul
aam
xor
cs
push
es
cwde
or
jns
add
xor
mov
pop
test
adc
(bad)
jae
adc
mov
dec
xlat
pop
fdiv
in
or
clc
xchg
in
xor
adc
js
sbb
xchg
sub
xchg
cmp
pop
jb
add
xor
add
mov
adc
adc
or
jmp
xchg
lds
push
push
add
push
or
int
mov
(bad)
and
sahf
out
xor
add
fstp
jmp
jno
jmp
add
movs
adc
enter
imul
cmp
in
cdq
in
add
sub
out
sbb
cmp
dec
and
xor
push
push
mov
mov
jae
fnstsw
cld
(bad)
ffreep
leave
and
and
sub
sbb
in
sub
lds
call
or
mul
mov
pop
xchg
sbb
push
dec
jg
das
pop
cmps
adc
repnz
inc
sbb
inc
add
sbb
sbb
add
mov
addr16
ins
dec
sbb
addr16
sbb
rcr
fs
add
imul
or
inc
lods
sub
pop
xchg
sub
mov
mov
xchg
and
call
adc
mov
inc
xchg
push
pop
or
jae
inc
inc
dec
adc
cld
movs
sbb
mov
sub
push
aas
sahf
aas
or
inc
jb
lock
cmp
test
sbb
dec
dec
call
push
add
cdq
nop
hlt
hlt
hlt
xchg
or
pushf
xor
or
inc
aas
leave
adc
lock
hlt
push
and
dec
inc
aas
hlt
hlt
mov
les
jns
jb
aas
adc
in
push
and
or
sbb
nop
add
pop
cmc
or
or
aas
xor
xchg
mov
aaa
xchg
sbb
cmc
je
fild
scas
add
inc
aam
jae
mov
fmul
(bad)
mov
jg
pusha
rcr
ror
cdq
dec
sub
lock
sbb
mov
div
rol
xchg
mov
xor
or
pop
test
sbb
mov
out
or
or
mov
inc
pop
xor
cmp
paddw
lock
and
cmp
pop
pop
sbb
loope
cmc
mov
cmp
call
and
pop
pop
mov
aam
cdq
add
pop
or
sbb
cmc
fld
push
inc
inc
popf
nop
add
dec
or
jmp
push
push
push
pop
ret
push
mov
or
into
push
pop
mov
enter
pop
jno
mov
leave
xlat
sub
stc
test
sbb
adc
inc
cmp
mov
into
pop
(bad)
imul
jmp
sbb
or
ret
add
adc
in
sahf
scas
aas
cmp
outs
into
retf
loopne
cdq
xor
inc
adc
mov
aaa
pop
sbb
mov
push
cmp
fidivr
adc
lock
mov
sub
hlt
sbb
mov
pop
test
inc
sbb
mov
mov
repnz
sbb
xchg
adc
test
hlt
sub
jae
cmp
and
mov
and
dec
clc
mov
mov
jno
adc
pop
add
cmc
inc
inc
ja
jo
test
lds
xor
leave
mov
and
mov
sbb
in
shl
xor
or
sti
aad
retf
test
arpl
xor
or
sar
ja
ins
leave
and
sub
inc
dec
inc
leave
adc
enter
and
adc
pop
(bad)
xchg
gs
add
les
popa
add
enter
or
bound
xchg
add
pop
fld1
jl
movs
xchg
out
push
push
imul
bnd
call
or
lds
mov
movs
mov
add
mulps
push
jb
or
jno
inc
sbb
ror
sub
test
xor
pop
push
inc
mov
inc
or
fwait
inc
inc
xor
dec
test
push
loope
fistp
push
enter
mov
cmc
xor
dec
cmps
ficom
mov
pop
cwde
dec
repnz
xlat
push
dec
adc
add
push
icebp
inc
dec
ror
sub
outs
int
and
pop
int3
rol
push
int3
dec
pushf
movs
and
add
mov
int
lods
fadd
cdq
sbb
cmp
lds
inc
sahf
or
xchg
push
jne
mov
mov
or
mov
jmp
aaa
push
(bad)
fst
retf
sub
pop
outs
inc
lods
ja
mov
mov
ds
inc
xor
sub
pusha
push
call
sbb
ins
popa
in
sbb
sbb
xchg
sub
sar
add
out
jo
daa
mov
adc
das
push
or
and
imul
aaa
inc
and
test
and
xor
adc
xchg
fcom
inc
jne
and
sbb
or
sub
add
mov
rol
inc
imul
outs
jmp
and
add
rol
sbb
movs
pop
nop
or
mov
test
push
jecxz
add
imul
add
add
(bad)
jp
mov
lea
or
and
add
add
mov
outs
inc
hlt
ja
push
xchg
xor
lods
stos
fisubr
xor
(bad)
sar
nop
dec
mov
or
push
(bad)
xchg
adc
pop
fnstenv
(bad)
movs
stc
jo
out
addr16
mov
enter
outs
ins
fadd
cli
jns
add
adc
imul
jno
dec
cmp
jns
mov
icebp
imul
jno
or
call
mov
mov
test
push
mov
rol
inc
and
call
or
pop
dec
xor
and
sub
les
add
xor
pop
mov
dec
add
imul
add
sbb
and
adc
inc
in
rol
mov
push
cmp
adc
popf
ds
fdiv
mov
movs
pop
xor
adc
(bad)
icebp
add
fisubr
sahf
xor
push
fmul
ret
or
nop
add
add
enter
adc
push
test
aas
inc
push
jo
ins
sub
ret
adc
enter
sub
dec
adc
test
mov
inc
and
inc
call
fwait
dec
mov
xchg
pop
dec
xchg
pop
dec
mov
push
xor
or
sbb
or
xchg
aaa
xchg
or
ins
out
pop
test
leave
mov
pop
push
inc
rcr
cmps
xor
mov
dec
lock
push
add
es
movs
mov
ror
(bad)
fcomp
pop
mov
lock
pop
add
aam
and
test
mov
jmp
mov
push
pop
adc
push
mov
and
shl
dec
or
ret
mov
lods
or
call
inc
mov
or
adc
lock
or
adc
je
inc
test
out
jmp
repz
jmp
outs
in
adc
jmp
adc
xor
push
adc
push
or
cmp
or
push
or
arpl
jge
push
or
adc
or
jecxz
shl
movs
cli
rol
lock
mov
xor
xor
jne
out
or
adc
adc
(bad)
xchg
mov
cmps
pop
jo
adc
cmovb
xlat
scas
add
cmp
rcr
mov
or
add
adc
dec
add
or
adc
rol
shr
adc
iret
or
fistp
dec
xchg
stc
mov
dec
sub
sub
retf
inc
lahf
sub
sub
inc
cmp
mov
les
sbb
inc
mov
add
rcr
dec
sub
xor
and
cmps
push
push
dec
lock
sahf
shl
jmp
push
dec
mov
hlt
jmp
or
and
cmps
lock
adc
xchg
sub
inc
shl
and
into
fcom
sbb
out
push
and
sub
and
push
shr
iret
sbb
add
push
dec
aam
in
shl
and
(bad)
test
dec
mov
pop
aad
adc
adc
pop
cmps
sti
enter
cmps
and
and
push
(bad)
mov
sub
sar
cmps
and
out
push
push
pop
repz
sets
imul
adc
sub
dec
pop
jo
xchg
jns
out
cmps
mov
cmp
out
add
adc
xor
adc
and
or
push
push
xchg
and
xchg
sub
sub
xchg
and
sub
cs
push
adc
xchg
xor
push
jb
pop
jb
xor
jb
pop
inc
inc
push
add
jb
pop
fs
pop
push
shl
add
daa
pushfw
and
fisttp
sbb
aad
pop
xor
cmp
test
(bad)
xchg
movs
mov
and
mov
lods
mov
mov
add
pop
adc
pop
add
sub
pusha
sub
inc
popa
cmp
bound
xchg
cmp
mov
ja
push
bound
daa
in
clc
push
shl
cdq
add
mov
ins
push
xchg
into
movs
pop
aad
mov
push
aam
stc
xor
cmp
sbb
pusha
(bad)
jo
sbb
imul
adc
test
daa
or
xchg
test
sbb
imul
fisttp
fiadd
popf
mov
or
fisttp
dec
je
movs
dec
or
mov
xchg
das
enter
xchg
adc
sbb
and
lahf
jmp
daa
inc
jmp
imul
push
mov
dec
xchg
or
push
inc
mov
aaa
sub
movhps
loope
push
mov
fcomp
rol
rol
add
xlat
in
loope
xchg
(bad)
retf
retf
adc
jbe
fsub
gs
test
push
or
in
mov
cmp
nop
sti
sbb
push
fcom
pusha
xor
ror
jne
lds
sar
adc
or
movs
in
dec
and
outs
push
sub
ins
or
cmc
imul
sub
adc
ret
xchg
xor
jae
popa
rol
and
inc
out
jne
and
cmps
pop
cwde
mov
imul
sub
dec
pop
mov
jno
test
jge
mov
and
mov
inc
xchg
jmp
mov
push
cmp
xor
cmp
adc
pop
add
jmp
add
(bad)
xor
pop
jmp
mov
xor
mov
adc
out
sbb
pop
xchg
(bad)
cmp
aam
ds
stos
push
enter
cdq
sub
inc
mov
pop
ret
sbb
adc
sub
clc
or
enter
xchg
xchg
dec
fwait
movs
add
xor
push
jne
out
add
push
adc
iret
inc
push
mov
mov
ja
jae
push
in
or
or
mov
test
mov
add
or
mov
test
pop
add
dec
push
aad
pop
daa
js
inc
xor
imul
or
movs
xor
jo
push
push
add
jno
and
leave
push
push
push
xchg
dec
add
sub
push
js
daa
sbb
push
or
xchg
cld
add
xchg
xchg
sbb
xor
cmp
jne
call
pusha
inc
add
and
test
movs
cmps
movs
sub
sbb
sub
dec
mov
jecxz
mov
leave
scas
shr
sub
mov
dec
jmp
sub
es
push
xchg
adc
sbb
pop
or
pusha
xor
pop
sub
pop
dec
cmp
mov
test
push
xor
mov
shr
mov
ins
call
les
xchg
mov
add
aam
xchg
test
stc
or
dec
inc
cdq
out
mov
retf
sbb
xor
sbb
cmp
ins
sti
and
push
mov
cld
add
mov
push
sub
add
push
dec
daa
add
xor
and
aaa
and
call
movs
push
pushf
pop
mov
sub
and
push
jmp
mov
or
inc
pusha
push
push
xchg
stc
push
sub
and
pop
cmp
rcl
fmul
hlt
inc
aas
or
add
mov
and
push
or
cli
xchg
dec
je
jb
ror
out
and
push
ror
sbb
(bad)
es
adc
enter
aam
cs
ror
pop
or
inc
pop
mov
push
xor
imul
inc
sbb
inc
ss
or
pop
jmp
fist
sbb
aaa
inc
imul
setb
xor
mov
das
dec
pop
adc
mov
scas
iret
and
(bad)
arpl
adc
and
nop
(bad)
or
or
adc
dec
ss
mov
mov
daa
ss
add
xchg
xor
mov
paddusw
in
data16
xchg
in
ins
dec
sub
mov
test
test
jmp
xchg
or
inc
aam
sbb
je
mov
or
push
ss
mov
iret
mov
cs
out
fs
mov
sar
movs
or
push
fidiv
or
xchg
cmps
or
inc
sbb
adc
mov
push
mov
mov
pop
clc
cmovnp
fmul
sub
scas
mov
clc
lock
mov
enter
or
out
pop
imul
adc
adc
mov
ins
dec
sbb
(bad)
or
pushw
mov
pop
add
push
mov
shl
push
or
or
lock
lods
sti
jg
mov
in
adc
push
sub
jnp
addr16
mov
sbb
mov
mov
iret
sbb
lea
mov
les
mov
xchg
push
sub
into
dec
or
popa
pop
and
jp
jl
push
pop
adc
or
call
mov
test
iret
push
adc
nop
mov
mov
xchg
outs
test
xor
and
push
jb
mov
pop
push
and
push
or
aam
adc
push
ret
mov
jmp
lock
ins
pop
jnp
sbb
aam
sub
(bad)
xor
fbld
mov
sbb
jmp
ins
scas
mov
mov
sbb
pop
jg
loope
mov
jmp
cmp
add
push
mov
lds
(bad)
cmps
or
es
dec
lods
or
sbb
cld
icebp
pusha
mov
cmp
sti
fmul
mov
shl
gs
dec
fadd
mov
cs
xor
mov
outs
jno
imul
mov
loop
dec
outs
push
mov
das
mov
jl
push
ins
dec
mov
cmps
sub
or
push
(bad)
pop
aas
mov
adc
and
jl
push
pop
mov
fist
mov
pop
dec
sub
or
loop
retf
inc
adc
int3
jmp
iret
pop
aaa
sbb
mov
fisttp
xor
sub
and
hlt
js
sbb
mov
fst
or
cmp
mov
in
mov
inc
pop
mov
or
jge
mov
or
adc
daa
cli
adc
push
push
test
not
mov
(bad)
fnstsw
sbb
jmp
xor
nop
out
pop
push
popa
cmps
fisub
or
push
push
inc
out
push
imul
ins
mov
cmp
sbb
mov
adc
nop
daa
je
cs
add
popa
inc
ins
nop
add
outs
add
push
push
lahf
data16
push
pusha
ficomp
mov
push
inc
xlat
sub
inc
hlt
cmp
inc
outs
jns
out
movs
test
shl
lock
inc
push
and
daa
hlt
dec
in
add
in
(bad)
jbe
pop
stos
lds
inc
mov
sbb
inc
shl
xchg
xor
bound
outs
cmps
add
nop
shl
xchg
add
pop
adc
sbb
(bad)
xchg
push
mov
inc
mov
mov
mov
adc
dec
call
pop
pop
mov
pop
adc
shr
dec
sbb
or
or
gs
outs
ss
stc
add
push
jmp
sbb
pop
sar
inc
add
mov
out
inc
mov
inc
sbb
nop
pop
lea
inc
imul
adc
bound
pop
inc
ret
enter
leave
inc
jmp
iret
int3
mov
popf
sub
push
rcr
mov
call
cmp
pop
in
xlat
push
cmp
dec
and
adc
xlat
adc
jmp
mov
in
sbb
rcl
lahf
sbb
mov
mov
cli
cmp
lock
or
imul
cs
(bad)
lea
sbb
add
and
mov
ins
inc
shl
add
push
xor
nop
mov
inc
sbb
mov
inc
lock
add
adc
repnz
ret
scas
(bad)
sub
xchg
and
ja
lahf
lea
pop
hlt
or
add
cmc
add
push
test
out
or
test
xor
jecxz
mov
sub
inc
loop
adc
sbb
mov
inc
adc
and
enter
xchg
inc
movs
jae
xchg
xor
in
mov
loopne
cmp
shr
in
fdiv
fcomp
fmul
sub
(bad)
sbb
bound
inc
mov
mov
sub
gs
dec
fmul
jno
add
xor
inc
push
cmp
cs
xor
mov
sub
mov
dec
in
sub
jmp
arpl
mov
dec
cli
sbb
push
ss
add
inc
push
int3
sub
movs
outs
mov
mov
retf
fisttp
daa
pop
lock
popa
dec
sbb
sub
xchg
mov
jl
test
inc
mov
test
pop
(bad)
cmp
mov
adc
or
dec
pop
lahf
invd
adc
or
mov
add
div
ins
out
test
enter
inc
cmp
xchg
call
stos
mov
or
add
cs
and
call
sbb
gs
push
jo
sbb
cs
or
push
add
mov
mov
inc
or
push
xchg
push
daa
mov
adc
inc
cmps
mov
cmps
test
xor
popa
or
mov
(bad)
pop
es
mov
movs
xchg
adc
stc
sub
inc
int3
add
mov
outs
or
dec
inc
push
outs
mov
in
mov
cmp
inc
inc
das
or
push
adc
jb
imul
std
and
push
test
adc
add
mov
ret
xor
or
cmp
fist
cmp
dec
clc
xchg
sub
push
jne
popa
and
rol
push
pushf
and
or
and
cmp
or
mov
inc
aaa
add
adc
pushf
xor
mov
std
or
add
add
pop
movs
or
ss
push
push
sbb
inc
push
stc
rol
not
and
add
push
std
mov
and
shr
and
add
adc
mov
js
inc
rcr
cmp
inc
pop
jg
inc
cmp
jns
loop
and
mov
or
loop
xchg
xchg
test
inc
das
shl
adc
out
cmp
data16
les
leave
leave
nop
dec
enter
sbb
popa
shl
and
mov
xchg
jle
popa
mov
dec
lods
lods
jo
popa
leave
leave
nop
dec
mov
movs
or
leave
int
test
dec
test
mov
mov
sub
ror
inc
jne
sbb
sbb
adc
mov
push
sar
ja
push
jo
push
jb
push
dec
cmovs
push
mov
jbe
rcr
push
cmps
mov
lods
mov
and
mov
and
pushf
cwde
jmp
pop
outs
xchg
cwde
popf
hlt
add
mov
and
sub
mov
or
pop
xor
lahf
dec
loope
inc
xchg
les
psraw
or
sub
movs
sub
mov
mov
pop
cmp
fs
sub
mov
and
test
push
adc
aaa
jle
out
les
cmp
in
xor
loope
and
gs
cmp
push
mov
mov
mov
sub
and
mov
add
mov
ins
xor
xor
int3
cmpxchg
lock
rcl
mov
or
jle
jmp
dec
inc
fisttp
jmp
add
inc
push
and
popa
cmp
cmps
cwde
mov
pop
xlat
loope
or
pop
jb
xlat
js
nop
outs
sbb
repz
xchg
mov
sub
inc
jmp
sti
mov
adc
jns
(bad)
mov
stc
push
xor
xor
movs
rcr
je
out
pusha
les
sbb
fsubr
jecxz
or
xchg
addr16
outs
test
sub
jne
sub
and
syscall
sbb
inc
and
xlat
and
jge
ins
jo
jg
and
add
data16
mov
das
sub
xor
outs
dec
sete
nop
movs
pop
or
jbe
inc
das
and
daa
push
cmp
popa
dec
adc
push
push
dec
sar
adc
xor
and
and
(bad)
lock
pop
out
dec
inc
push
push
push
inc
push
inc
cmp
aaa
es
adc
ficom
out
daa
test
rcr
push
je
jo
shl
push
outs
xlat
xchg
mov
push
(bad)
bound
and
(bad)
out
fsub
xor
jae
push
push
sub
xor
sahf
mov
xchg
jne
mov
sub
loope
pop
inc
mov
inc
not
dec
ret
mov
push
mov
pop
mov
cmp
jmp
fld
dec
sub
js
and
inc
sbb
shl
push
dec
jmp
push
cld
push
mov
push
hlt
jnp
add
push
inc
xchg
sub
lock
and
push
and
leave
inc
cmp
xor
or
scas
jb
das
js
and
cs
add
rol
xor
dec
or
pop
dec
(bad)
mov
xchg
inc
shl
add
xor
test
mov
pusha
sub
std
aaa
dec
adc
adc
les
or
hlt
adc
call
push
fld
daa
fwait
mov
sbb
clc
cmps
cmp
mov
hlt
cmp
add
inc
jge
jmp
cs
ret
jmp
push
out
xor
pop
adc
add
or
fucomp
jo
test
or
mov
je
sub
sbb
js
out
jns
cmp
arpl
push
aam
call
or
sub
sub
fnsave
adc
not
xor
(bad)
cdq
mov
fbstp
ret
or
or
dec
jno
sub
jns
adc
sub
out
pushf
jnp
mov
enter
push
sub
ret
mov
mov
cmp
sbb
dec
or
js
adc
mov
ret
mov
mov
dec
dec
scas
ret
xchg
shl
jge
(bad)
or
mov
xchg
or
sub
or
or
leave
inc
xchg
(bad)
je
gs
into
out
call
aaa
inc
jl
adc
sub
imul
adc
adc
jbe
jnp
lahf
dec
fisub
and
sbb
sbb
aaa
inc
jo
and
ds
cs
xchg
mov
arpl
test
pusha
jmp
xchg
pop
mov
or
dec
fild
test
call
js
iret
mov
mov
inc
pop
retf
sbb
call
sub
cmp
dec
(bad)
clc
dec
shl
rcl
cmp
push
cmp
or
mov
add
dec
pop
push
js
push
fsub
sub
test
inc
and
idiv
imul
cmps
pop
and
in
jp
add
sbb
mov
push
or
mov
adc
adc
gs
fst
push
iret
add
xchg
call
in
nop
or
pop
enter
jae
dec
in
mov
fimul
jmp
push
repnz
inc
pusha
shl
adc
and
pop
sbb
cmp
push
or
cmp
shl
enter
or
stos
push
jb
cmp
push
cmps
rcl
pushf
loop
or
push
add
lahf
inc
mov
or
add
or
pop
dec
out
sub
dec
pop
dec
and
lahf
push
and
and
adc
loopne
sbb
sbb
inc
sub
les
jae
pop
or
xchg
fwait
in
push
outs
adc
adc
cs
movs
inc
dec
push
ret
adc
adc
mov
add
and
add
dec
xchg
mov
fadd
scas
inc
inc
inc
adc
and
mov
mov
jecxz
imul
mov
gs
inc
nop
jp
aaa
pop
and
xor
pusha
sbb
xor
popa
jge
scas
outs
stos
pop
enter
push
test
sbb
mov
push
cmp
mov
or
sbb
push
cmps
retf
dec
push
add
mov
adc
add
adc
cmp
pop
lds
lods
inc
push
pop
das
in
mov
nop
or
aas
adc
push
mov
cmps
inc
movntq
sbb
cs
dec
push
test
and
fadd
inc
xchg
pop
mov
and
add
enter
push
add
outs
dec
loop
adc
inc
lea
jecxz
call
push
ret
ret
xor
sub
adc
sub
dec
jo
mov
sub
jbe
push
dec
mov
mov
leave
mov
cmp
cmp
ds
(bad)
out
sti
sub
add
jle
add
or
repz
leave
cmp
dec
cmp
jmp
cmp
sbb
cwde
pusha
add
das
adc
test
sub
xor
xor
adc
rol
test
fisub
add
dec
sbb
push
test
imul
out
and
jae
aam
inc
mov
shl
jnp
dec
jo
clc
xchg
(bad)
fist
scas
cmp
icebp
sub
push
cld
or
inc
rcr
sub
loope
add
pop
fs
shl
sub
fadd
dec
add
inc
repnz
mov
mov
mov
push
or
add
add
mov
mov
lock
mov
pop
sub
test
(bad)
jne
cmp
dec
fsubr
xor
mov
or
jmp
pushf
add
sbb
xor
add
add
add
add
aas
lods
aad
add
xchg
inc
or
push
inc
gs
push
out
dec
je
push
dec
pop
popa
push
inc
mov
push
jbe
adc
fcomp
sbb
dec
int3
adc
dec
dec
xchg
sub
out
mov
test
shr
push
add
and
jmp
ficom
je
les
lods
add
dec
stos
pushf
xor
xchg
inc
lods
test
push
inc
sar
sub
mov
xchg
retf
in
jmp
cmp
or
or
dec
sub
jp
fs
push
mov
cwde
adc
outs
add
mov
jne
sub
sbb
pop
or
xchg
or
sub
cmp
inc
mov
enter
xor
ja
sub
cmc
dec
sub
cmp
test
cmp
ins
or
sbb
adc
loopne
mov
bound
push
pop
push
inc
mov
xchg
fcom
(bad)
mov
lods
dec
cmp
rcl
push
inc
pop
inc
pop
xchg
dec
ins
addr16
adc
xlat
fcomp
fadd
add
jne
xchg
sbb
cmp
jg
fild
sbb
adc
jl
push
jl
mov
fld
xchg
mov
jle
in
add
inc
sbb
push
ja
std
inc
add
lods
mov
and
inc
xor
xor
xor
mov
xchg
xchg
xor
imul
clc
out
popf
xor
adc
(bad)
and
in
sbb
ret
ins
add
adc
push
inc
push
push
adc
loop
jne
iret
ret
test
sub
or
test
les
push
in
xchg
inc
pushf
inc
enter
cmps
and
pop
adc
das
mov
sbb
fstp
inc
mov
ins
pop
mov
push
cld
push
inc
or
pop
popa
inc
and
sub
mov
cmp
dec
loope
outs
call
mov
enter
stc
sbb
int3
sub
enter
dec
pop
and
call
push
add
xor
add
inc
push
add
mov
jp
or
rol
aam
scas
adc
push
(bad)
movs
push
mov
or
fnstcw
push
mov
stc
shr
popa
adc
mov
dec
xor
sub
cmp
jl
dec
shl
sbb
sbb
fldenv
movs
cmp
xor
sub
mov
loopne
mov
jne
xchg
or
xchg
cmps
push
test
mov
add
cmp
xchg
dec
or
adc
inc
inc
das
clc
and
aas
in
cmc
lods
adc
inc
je
sub
je
cmp
test
cmp
(bad)
js
inc
adc
or
inc
push
pusha
sbb
mov
sbb
cdq
push
jg
mov
pop
add
cwde
mov
and
js
and
mov
add
cmp
add
mov
inc
cmp
pop
mov
out
ins
push
add
cld
sub
mov
clc
stos
(bad)
lock
sub
hlt
and
jne
add
mov
psrld
cld
and
cmp
icebp
fisubr
sbb
xchg
fstp
inc
add
and
js
jle
sub
mov
adc
call
ror
sub
sub
fldcw
cdq
adc
sbb
add
in
mov
pop
add
sbb
cli
sbb
inc
or
add
aaa
adc
cs
mov
gs
pop
sub
jmp
jg
cmp
and
ins
jg
jne
retf
movs
ds
inc
add
pop
jmp
pop
and
adc
fdivr
test
cmp
mov
test
mov
and
sbb
add
iret
add
nop
(bad)
aad
inc
pop
(bad)
or
sub
ret
lock
and
mov
and
inc
popa
push
jl
adc
add
imul
(bad)
adc
sbb
repnz
sbb
pusha
test
xchg
cmp
jbe
int
outs
xor
sbb
add
mov
xchg
aad
push
scas
pop
push
or
in
and
loope
mov
mov
repnz
jbe
mov
inc
jg
dec
or
sub
test
enter
add
dec
ins
call
and
dec
das
add
js
mov
sub
sub
ror
mov
add
adc
cwde
std
add
(bad)
sub
or
add
pop
xor
pop
or
out
pop
sub
dec
or
in
add
jne
pop
loopne
or
ret
mov
movs
shl
push
sbb
imul
dec
sub
js
je
ret
or
inc
mov
add
daa
xor
push
adc
fnstcw
xor
xchg
inc
(bad)
dec
add
lea
cmp
inc
or
iret
jns
movs
adc
adc
aam
mov
or
mov
xchg
movs
or
out
(bad)
fisub
pop
cmp
sub
cmps
clc
or
xor
ror
jmp
inc
adc
cwde
or
jg
push
xor
pop
and
push
add
or
and
and
mov
push
sub
loopne
pusha
mov
loope
ds
or
pusha
sub
loope
into
js
or
nop
movs
pop
popf
add
daa
pop
inc
pop
xchg
aam
mov
xor
sbb
mov
add
inc
jge
test
int
jb
pop
jp
js
or
pop
cmps
jb
cmps
add
rol
(bad)
inc
dec
(bad)
ja
jne
xchg
xchg
sub
sub
imul
and
pop
mov
inc
add
dec
loopne
outs
fsubp
pop
loop
xchg
xchg
and
add
lods
arpl
adc
into
lock
data16
jle
adc
dec
add
xlat
test
popa
cmp
inc
dec
or
aam
aaa
jno
aad
test
out
(bad)
ins
mov
scas
dec
and
xchg
cwde
aas
mov
mov
sub
inc
push
xor
aas
mov
fnsave
add
vmread
fsubr
dec
sub
test
sbb
cld
inc
or
test
add
(bad)
pop
cmc
jnp
imul
pop
xor
lock
aam
in
sbb
ret
mov
push
jns
push
daa
test
data16
push
dec
or
nop
mov
aam
shl
cmp
repz
lods
push
push
jns
fwait
lods
repz
repz
mov
xor
push
and
and
jb
inc
pop
inc
xor
jo
mov
mov
out
jmp
sbb
ins
out
add
or
and
jmp
ds
dec
sbb
and
and
xor
inc
stc
ins
fsub
and
jns
dec
cld
dec
pop
rcl
mov
fstp
adc
lods
test
pop
mov
imul
xor
adc
nop
pop
cmp
sub
stc
mov
add
pop
jb
ja
mov
fwait
jne
stos
jae
outs
(bad)
adc
dec
outs
ins
inc
cmp
out
imul
imul
das
(bad)
cmp
dec
and
(bad)
or
fcmovu
adc
xor
add
out
inc
push
mov
inc
dec
adc
retf
push
pop
ins
add
lea
mov
sbb
xor
in
sub
sub
xlat
daa
or
cmc
je
adc
sub
data16
mov
xchg
mov
or
pop
sbb
mov
and
cmp
mov
out
cmp
push
rcr
mov
and
shl
add
add
xor
mov
pop
sbb
jae
xchg
hlt
loopne
mov
call
loope
nop
jo
scas
cmp
and
dec
(bad)
std
add
push
push
xor
(bad)
fnstenv
and
hlt
mov
add
sbb
ret
sub
leave
sbb
in
pause
pop
add
pop
les
push
dec
ins
push
gs
push
nop
pop
mov
add
xor
jae
movs
ret
lea
call
add
xor
xchg
or
pusha
xor
mov
push
xor
rcr
push
shr
pop
ins
sbb
add
mov
arpl
arpl
or
cdq
fst
and
sbb
push
sub
xor
inc
cmp
lock
rol
cmp
cmp
cmp
pop
push
sar
(bad)
clc
inc
and
orps
push
cmp
and
rol
sbb
mov
mov
xor
fwait
mov
cmp
dec
ret
pop
(bad)
js
ss
mov
movs
jl
in
nop
lods
test
in
xchg
js
js
pop
sbb
or
je
sub
xchg
retf
jo
ins
cmp
xor
in
adc
push
test
sbb
sbb
pusha
mov
and
xor
in
pushf
pop
and
or
mov
push
sbb
push
sub
and
xor
mov
icebp
lea
mov
sbb
cmp
and
and
add
shl
dec
adc
jp
and
mov
pop
test
adc
and
aad
ror
outs
jne
or
shl
xchg
mov
xchg
push
rcr
aad
sbb
aas
pop
push
jp
adc
test
fcom
aaa
dec
sub
mov
in
int
das
ds
pop
dec
sub
mov
scas
movs
test
mov
and
nop
neg
pop
ret
daa
or
or
shl
in
adc
inc
into
add
gs
repnz
xor
xchg
add
nop
cbw
rol
cmc
add
add
xor
sti
nop
adc
mov
add
sbb
shr
cmp
xor
push
mov
arpl
out
fiadd
clc
adc
std
pop
ins
popa
cmp
adc
mov
mov
and
shr
mov
(bad)
pop
xchg
or
call
mov
xor
add
or
xor
xor
shr
xchg
xor
inc
jne
ss
xor
cwde
movd
(bad)
les
or
ins
js
inc
sbb
dec
repz
data16
adc
and
sbb
(bad)
out
and
dec
push
cmp
inc
mov
adc
mov
dec
imul
add
push
add
jecxz
add
push
dec
jne
mov
jo
cmp
lods
pop
sbb
adc
jge
pushf
sbb
mov
rol
or
imul
and
push
inc
inc
sbb
sub
fild
outs
or
mov
je
add
imul
xor
and
jg
test
adc
inc
inc
and
add
add
pushf
in
pop
jmp
cld
sbb
add
xor
repz
xchg
xor
xor
pushf
not
add
adc
push
ss
add
xor
cwde
jbe
sbb
and
xor
jo
ret
sub
imul
inc
dec
rcr
ins
jmp
and
popa
(bad)
xor
clc
sub
inc
(bad)
(bad)
ret
popa
inc
push
daa
pop
aaa
pop
rol
or
pop
mov
jns
push
dec
inc
pop
movups
mov
stos
push
push
sub
arpl
adc
rcl
in
adc
sbb
pusha
cwde
mov
fs
sti
or
outs
jmp
movs
daa
push
cmp
xor
movs
cmp
mov
loopne
jmp
mov
xchg
(bad)
shl
mov
inc
fs
and
push
add
test
pusha
gs
sti
fadd
fadd
jbe
sti
gs
inc
in
inc
aam
dec
clc
sub
mov
cmp
sub
mov
addr16
sbb
les
push
rcl
int3
xor
or
(bad)
leave
cs
idiv
nop
rol
jl
jmp
je
mov
dec
jae
lods
mov
mov
mov
xor
int
adc
or
lods
aaa
lods
and
fcom
aas
test
test
or
xor
and
call
ret
mov
sbb
dec
pushf
cs
xor
xchg
pop
int3
add
and
adc
cwde
pop
xchg
cmps
xchg
ficomp
nop
nop
and
mov
or
mov
inc
adc
lds
jge
push
push
fdivr
adc
cmp
push
ins
mov
pushf
arpl
stos
and
jo
and
ret
loopne
nop
shl
xor
sub
mov
aam
mov
(bad)
push
dec
inc
lea
mov
(bad)
(bad)
inc
jmp
in
jmp
mov
rol
mov
test
ffreep
mov
(bad)
int
(bad)
mov
mov
mov
int
fs
das
das
pop
xor
push
adc
add
add
pop
pop
push
mov
jb
test
cmp
cs
or
mov
or
adc
xor
push
or
hlt
dec
or
add
xor
or
sub
fs
fwait
pop
sub
bound
xchg
add
mov
(bad)
mov
xor
jno
xlat
lea
mov
pop
inc
add
(bad)
jb
sub
adc
ret
ins
lods
push
dec
jae
rol
pop
mov
jg
jb
xchg
inc
push
push
inc
cmp
jno
inc
ins
mov
loop
jge
mov
pop
xor
lea
inc
or
ins
jb
(bad)
sub
addr16
inc
nop
pop
(bad)
cmc
push
add
sub
jno
pop
imul
mov
aas
fimul
fcomp
ins
pop
outs
inc
pop
arpl
jns
sub
jae
sbb
or
mov
loopne
bound
sub
inc
xor
outs
xchg
lock
cmp
(bad)
js
lods
sbb
and
xor
clc
cmps
add
test
dec
fld
jne
xchg
push
dec
inc
pop
jnp
call
inc
inc
xor
sub
or
add
jge
inc
cli
mov
movs
sbb
cmps
hlt
xor
add
push
les
and
jne
mov
cmp
inc
push
test
dec
push
data16
dec
test
mov
adc
add
cmp
adc
jo
mov
dec
cmp
movs
push
sbb
je
test
xor
shl
sbb
push
movs
pop
mov
iret
sar
cmp
and
movs
je
mov
fidivr
mov
push
mov
mov
int
(bad)
mov
inc
and
xor
nop
add
add
xchg
mov
push
inc
pop
xchg
in
push
sub
sub
stos
xchg
sbb
and
jbe
pop
lods
jne
nop
xchg
sub
add
or
in
repz
mov
inc
sbb
stos
mov
pop
dec
call
jmp
pop
push
test
jne
es
push
inc
or
test
adc
fmul
or
sbb
or
mov
(bad)
out
push
ins
sub
pop
push
mov
mov
(bad)
lock
fwait
(bad)
cli
mov
iret
mov
mov
inc
dec
dec
inc
mov
sar
mov
mov
(bad)
jmp
fcom
ret
xlat
mov
repnz
leave
std
mov
ret
fdivrp
in
rol
imul
mov
mov
aam
retf
cmp
imul
adc
and
cmp
pop
jl
inc
xor
imul
ja
call
repnz
sub
repz
mov
das
mov
sub
in
js
aad
jb
add
inc
add
aaa
pop
or
adc
inc
and
inc
and
sbb
inc
jp
push
inc
mov
pop
and
push
sub
popf
sub
fwait
xchg
arpl
mov
add
and
pop
add
xchg
cmp
dec
or
sub
loope
push
shl
mov
hlt
nop
add
mov
and
dec
dec
cmp
sbb
jno
adc
aad
pop
mov
jecxz
xor
pusha
jp
sbb
mov
jmp
xor
aaa
call
add
dec
in
jg
icebp
or
sub
mov
push
dec
cmp
or
pop
ins
int
jnp
push
mov
mov
adc
inc
push
scas
dec
test
sahf
adc
dec
mov
shl
fdivr
fimul
fld
xchg
pop
mov
push
mov
test
cli
sbb
call
test
repnz
pop
sbb
pop
dec
jae
pop
inc
inc
or
retf
adc
add
inc
pop
xchg
add
and
jl
pop
xchg
aam
xchg
push
or
or
shr
push
out
push
dec
jmp
mov
push
sar
lock
dec
shl
mov
and
mov
mov
sub
push
xchg
sub
lahf
push
outs
inc
dec
jne
cld
into
mov
popf
inc
cmc
mov
nop
dec
sub
aam
sub
test
ins
jmp
add
push
or
mov
and
xor
push
sbb
adc
add
adc
shl
and
pop
pop
ret
(bad)
mov
mov
test
add
inc
(bad)
mov
pop
pop
ss
mov
sbb
inc
pop
sub
popf
dec
mov
dec
call
int3
mov
xchg
fimul
mov
xlat
mov
inc
popa
cmp
mov
sub
add
movs
cmp
xchg
cmp
loope
ret
inc
add
cli
dec
sbb
nop
jle
or
push
adc
xor
add
adc
test
(bad)
fisttp
loope
jle
loopne
or
xor
inc
das
jo
scas
mov
nop
add
out
std
fcom
push
bsr
push
cmp
pop
adc
dec
jbe
nop
inc
inc
fs
adc
pop
push
cmp
pop
mov
dec
mov
xchg
inc
adc
adc
enter
jg
inc
cs
or
jo
cwde
shl
popa
test
hlt
and
push
call
xor
test
nop
dec
adc
push
xor
xchg
xchg
ss
popa
outs
sbb
gs
sbb
or
xchg
ss
xor
cmp
fidiv
sbb
cwde
push
shl
xor
add
outs
add
mov
loope
test
sbb
mov
mov
imul
mov
movs
shl
inc
sub
and
pop
mov
mov
and
xor
(bad)
adc
inc
pop
icebp
cmp
shl
enter
imul
(bad)
jle
dec
xor
mov
pop
fs
pop
ja
dec
sub
or
push
sbb
xor
pop
adc
jae
pusha
adc
xor
pop
sub
leave
xor
inc
rol
add
aaa
ins
xor
cwde
es
lea
or
add
je
pop
dec
inc
sub
scas
js
nop
dec
mov
(bad)
ret
xor
or
xor
in
mov
daa
xor
mov
xchg
pop
das
xor
sub
stc
push
(bad)
sbb
je
pop
jmp
pushf
and
xor
and
ret
mov
movs
inc
pusha
mov
sbb
(bad)
test
adc
lods
adc
jl
popa
fimul
xor
sub
mov
jne
sbb
mov
adc
xor
inc
bound
cwde
pop
jle
clc
pop
inc
sti
dec
icebp
sbb
in
and
int
xchg
in
push
inc
cs
xlat
imul
push
fst
ja
sub
test
or
add
add
pop
scas
clc
in
or
and
gs
daa
dec
loopne
repnz
outs
int3
or
and
sahf
stc
inc
sub
pop
mov
xchg
xor
out
xor
dec
mov
sahf
jns
sbb
adc
xor
sbb
cld
adc
push
adc
jmp
(bad)
mov
xchg
sub
rol
out
scas
arpl
inc
scas
mov
adc
and
mov
jbe
aaa
mov
mov
les
adc
adc
stos
jb
sar
daa
push
adc
add
adc
mov
sub
mov
movs
cmp
js
or
xor
add
int
dec
dec
scas
imul
cli
or
add
movs
and
mov
pop
add
add
(bad)
retf
and
jbe
and
aam
add
fstp
adc
push
test
xor
js
xor
dec
cld
inc
repz
and
(bad)
int3
push
mov
inc
push
push
push
ins
das
ins
push
clc
xchg
add
push
outs
xchg
pushf
dec
mov
dec
out
or
xchg
add
dec
xor
pop
add
mov
dec
stos
or
xchg
test
jmp
pop
add
rol
pop
add
add
mov
shl
dec
imul
pop
adc
fimul
test
and
ins
test
enter
jecxz
pop
mov
mov
fdivr
and
cli
pop
ds
dec
push
push
popa
adc
fdiv
sbb
les
pop
fld
aam
xchg
push
inc
inc
jmp
sti
add
or
push
pop
dec
(bad)
lock
cmp
and
pop
lea
push
fstp
add
and
sbb
je
retf
add
cld
je
or
or
xor
aas
aaa
push
xor
pop
adc
jno
xor
aas
mov
inc
or
clc
out
jne
mov
je
dec
lods
aam
push
and
cli
xchg
xchg
cmps
jbe
and
hlt
dec
leave
and
hlt
test
call
xor
in
in
call
sub
stos
movs
fdivr
nop
div
(bad)
mov
push
je
mov
mov
and
adc
add
ins
aam
cmp
aam
fcomp
imul
int3
rcl
es
loopne
adc
dec
inc
mov
(bad)
mov
adc
cmp
or
lea
xor
movs
movs
inc
popa
inc
dec
push
ret
push
xor
das
in
add
adc
xchg
xchg
xlat
inc
pop
adc
mov
ret
ret
mov
add
aaa
ret
fadd
jmp
fimul
cdq
push
shr
(bad)
movs
xor
pop
fisttp
test
aad
enter
int3
lods
jae
pop
dec
ja
ss
mov
sub
adc
xchg
imul
mov
sahf
mov
adc
aam
enter
xor
test
aaa
je
enter
mov
mov
aas
test
aad
add
dec
mov
jg
cmc
fimul
and
jo
jle
loopne
outs
pop
rol
sbb
lock
cmps
xor
shl
jbe
outs
xor
mov
mov
add
sbb
ins
dec
popa
aaa
sbb
sub
xor
dec
sbb
mov
movs
or
or
sub
and
rep
dec
inc
or
addr16
jl
xchg
jno
jne
pop
in
and
jns
or
aaa
mov
out
popa
dec
fistp
and
jns
sub
sub
test
nop
xchg
cmp
pusha
or
jl
push
jl
adc
shr
lods
or
call
mov
xchg
mov
cdq
call
test
dec
mov
pop
dec
ds
pop
lods
or
add
(bad)
mov
sar
mov
dec
add
jb
push
or
int3
inc
stos
sub
cmp
mov
cmc
in
jl
ds
fdiv
xor
stos
push
mov
pop
mov
and
das
mov
shr
adc
ucomiss
pop
imul
mov
ins
jae
pop
xor
add
jnp
ja
add
sub
jg
ret
test
mov
retf
scas
adc
data16
imul
leave
int3
push
mov
in
or
dec
add
inc
jne
dec
into
test
js
jb
cmps
sbb
cdq
dec
test
dec
mov
mov
clc
sbb
bound
cmp
test
add
ja
cmp
sub
movs
jbe
mov
enter
loopne
mov
xor
retf
and
cmp
jb
in
inc
inc
inc
mov
dec
ins
dec
xchg
push
cwde
push
retf
and
jb
in
pop
fsub
push
test
fwait
push
pop
ins
sub
nop
retf
and
in
enter
je
scas
cmp
mov
dec
adc
cmp
test
aas
and
test
lods
jp
sub
mov
adc
outs
dec
sahf
sub
cmps
pop
js
lock
stc
xor
in
cmc
add
data16
sbb
jo
mov
int3
adc
and
and
sbb
xor
das
les
push
(bad)
push
inc
pusha
mov
je
cmp
dec
adc
js
es
inc
or
std
and
pop
pop
xchg
or
xchg
movs
test
xchg
dec
in
mov
adc
dec
in
nop
stos
mov
nop
or
dec
and
and
aas
xor
or
jae
add
je
or
and
jmp
loope
loope
mov
xchg
add
mov
sbb
aam
icebp
test
and
call
dec
xchg
sbb
add
jne
xchg
pop
or
inc
dec
mov
mov
and
(bad)
daa
outs
mov
mov
adc
outs
xor
push
dec
rcl
mov
add
test
push
adc
cmp
jmp
jo
(bad)
retf
(bad)
jle
fimul
sbb
sbb
in
cwde
out
pop
cmp
lock
into
push
cmp
push
sbb
sbb
fmul
stc
cmp
cmovo
pop
mov
inc
popf
cs
and
ins
test
xchg
dec
xchg
popa
cmp
clc
in
and
jb
cmp
dec
xchg
push
inc
cmps
ds
sub
pop
cld
xor
jno
iret
cmp
jb
cdq
in
or
sub
jb
in
adc
or
and
into
sub
jae
or
adc
fsub
pop
adc
in
shl
mov
pop
jb
mov
clc
pop
arpl
lods
inc
mov
loope
push
xor
or
daa
mov
mov
mov
cmp
pop
cmp
and
retf
mov
daa
jg
xlat
retf
cmps
imul
lahf
daa
enter
addr16
and
(bad)
fcom
ret
pop
fdivr
ss
int3
shl
repz
sti
push
add
shl
int
jg
mov
leave
call
ins
daa
mov
scas
daa
xlat
cmps
lods
test
mov
add
out
mov
rcl
mov
(bad)
xlat
mov
daa
addr16
(bad)
xor
fdiv
fs
loopne
mov
xlat
shl
xor
aad
pop
lahf
pop
or
daa
dec
daa
push
and
and
stos
dec
call
dec
jmp
dec
lds
pop
ja
pop
es
lods
ret
ss
adc
arpl
xchg
cmp
int3
inc
rcr
nop
movs
(bad)
sbb
sub
scas
data16
call
cli
shr
in
imul
and
sub
cmp
mov
mov
pop
jecxz
and
call
or
mov
je
popf
mov
pop
mov
jno
adc
ja
mov
bound
lds
enter
and
or
push
inc
test
or
xchg
cmp
imul
jno
cwde
and
inc
mov
add
pop
pop
adc
in
stc
pop
pop
into
popf
(bad)
cwde
mov
xor
cwde
adc
leave
adc
mov
rol
mov
push
fs
mov
xchg
dec
cmp
cmp
mov
mov
and
int
lea
(bad)
dec
inc
repnz
cmps
jl
mov
jl
mov
sub
das
mov
sbb
mov
pop
in
push
pop
test
in
pop
jne
das
mov
xor
mov
push
enter
(bad)
mov
dec
mov
neg
sbb
mov
xor
data16
sbb
push
das
sbb
mov
fsubr
fcomp
aaa
es
add
cli
cmps
test
xchg
loopne
outs
loope
add
inc
call
xor
test
xchg
pop
xor
popf
or
xor
or
sub
push
xchg
or
cmp
lods
push
dec
rcl
pop
popa
dec
nop
xchg
sub
and
je
leave
and
shl
cmp
movs
sbb
push
cs
je
ins
scas
fs
sub
icebp
adc
xor
jmp
mov
sub
fnstcw
test
icebp
adc
push
push
int3
mov
xchg
xchg
addr16
pop
add
stos
cmp
add
pop
scas
add
add
add
and
nop
cmp
cmp
jl
inc
aas
adc
adc
sbb
pop
mov
jmp
gs
push
out
dec
sbb
int3
fsubr
fisub
mov
add
jo
ins
sbb
test
xchg
mov
inc
add
daa
lea
sub
pusha
test
lea
mov
mov
lods
jmp
cmps
push
xor
xor
rol
sub
xor
sbb
mov
xor
push
mov
mov
test
cmp
test
ds
sbb
sbb
mov
lods
and
and
sub
jnp
ja
jg
repnz
js
add
dec
ds
test
in
loope
fsub
push
arpl
loopne
xlat
call
nop
xchg
or
pop
shl
cmp
dec
add
inc
push
push
cmp
imul
xchg
dec
sbb
and
xchg
pop
inc
adc
sysenter
add
cmp
lock
xchg
xor
fwait
rol
and
in
adc
sti
add
inc
fst
dec
push
les
add
dec
cdq
mov
bound
jnp
rol
cmp
stos
adc
xor
adc
mov
jg
inc
popa
pusha
pusha
jbe
push
sbb
and
xor
aam
mov
enter
sar
mov
mov
mov
icebp
(bad)
call
mov
loope
mov
mov
shl
mov
cwde
add
and
dec
push
pop
ins
fsub
loopne
aas
and
sbb
jbe
daa
mov
pop
daa
inc
je
and
clc
ret
into
repz
xlat
pop
push
add
jo
mov
jecxz
jecxz
iret
(bad)
dec
out
mov
lock
ret
add
fistp
aaa
add
pop
add
daa
std
into
std
dec
and
mov
in
fwait
mov
cli
jecxz
mov
mov
or
dec
loope
andnps
cmp
dec
push
cmp
mov
fstp
mov
outs
fs
mov
out
cdq
dec
popa
gs
outs
push
shr
pop
lahf
dec
inc
dec
enter
das
lahf
outs
and
or
or
adc
and
inc
aaa
inc
cmp
ficomp
js
xor
imul
das
inc
inc
mov
fmul
pop
dec
mov
das
dec
inc
test
push
adc
imul
and
push
gs
sub
sar
cmp
mov
movs
test
rcl
dec
sbb
aas
test
xchg
or
mov
sbb
fnop
jae
push
or
mov
add
aas
fimul
lods
sti
sub
lods
ret
or
pop
pop
adc
adc
adc
adc
popa
sbb
js
ins
lods
xchg
int3
jg
cmp
fsubp
das
and
ja
imul
das
inc
lea
add
sbb
mov
rol
(bad)
xchg
(bad)
loope
jo
out
cmp
or
(bad)
aaa
in
mov
cmp
loopne
inc
stos
nop
push
and
or
inc
and
nop
or
lods
loopne
xchg
push
and
enter
xchg
lods
lods
lods
enter
ror
push
add
adc
lods
pop
mov
cmp
ja
inc
lods
jo
add
pop
and
ins
out
mov
je
inc
or
adc
(bad)
jne
movs
push
enter
xchg
inc
xchg
push
inc
inc
nop
cwde
in
pop
ret
or
pop
movs
outs
sbb
sti
call
xor
or
rcr
sub
das
sub
push
stc
add
fisub
scas
cld
lods
sti
pusha
xchg
cmc
cld
mov
ins
xor
cmps
sub
stc
(bad)
and
dec
clc
mov
pop
fsubr
or
xchg
push
push
test
movs
jg
add
push
add
test
jae
out
and
mov
imul
or
inc
movlps
in
nop
test
repnz
or
pop
cmp
int3
add
dec
popa
dec
push
jecxz
aas
jns
repz
push
iret
mov
dec
inc
mov
push
mov
(bad)
cmc
xor
nop
js
popa
push
xchg
push
pushfw
daa
ret
inc
scas
jge
pop
or
pop
imul
add
test
stc
imul
pop
mov
cmp
pop
mov
test
fs
mov
add
sub
inc
pop
mov
popa
out
rcr
outs
jl
imul
ror
xor
sub
adc
es
inc
fstp
sub
inc
push
pop
loopne
loop
or
mov
jle
or
push
push
sbb
push
pop
(bad)
ret
ret
in
mov
add
es
bound
pop
mov
mov
in
out
mov
clc
push
push
int3
aam
mov
dec
xor
xchg
test
xchg
jb
outs
and
iret
push
push
cmp
adc
add
cmp
push
sub
popa
xchg
lods
add
out
or
push
or
mov
aaa
loope
sbb
leave
adc
xor
into
inc
push
sbb
inc
mov
aad
xchg
iret
pop
xor
leave
mov
push
inc
loope
mov
inc
aas
inc
movs
or
test
cmp
push
cmp
test
add
repnz
pop
xchg
xor
dec
inc
mov
adc
dec
hlt
test
lock
mov
aaa
adc
add
sub
or
jmp
bound
mov
and
inc
ret
pop
dec
jb
movs
mov
in
shr
dec
ss
test
and
and
pop
in
mov
dec
inc
ja
sub
add
dec
jns
loopne
dec
sbb
inc
loopne
popa
jmp
sbb
xor
push
cmps
mov
cmps
bound
test
rcr
adc
ins
xor
adc
addr16
enter
outs
xchg
arpl
lods
fisubr
or
xor
cmps
fldcw
inc
push
adc
loopne
fcom
div
sbb
cld
(bad)
out
(bad)
jae
push
push
in
mov
call
xor
ss
mov
push
push
pop
push
ins
js
inc
add
(bad)
int
fld
or
out
push
push
pop
mov
outs
ss
out
adc
adc
inc
stos
ins
xchg
inc
fistp
or
cwde
inc
push
push
or
jns
fldcw
out
call
out
out
call
rcr
add
xor
push
scas
inc
out
mov
push
call
fsub
push
jns
enter
or
pop
lods
sahf
rcr
sahf
sti
and
pop
pop
xchg
pusha
div
sub
xor
cmps
jge
imul
test
or
inc
and
push
xor
clc
xchg
out
push
mov
pop
push
push
clc
test
rol
fmul
ds
push
xlat
push
pop
in
inc
cli
out
stc
dec
mov
ins
push
push
fs
inc
cmp
push
inc
neg
push
out
cld
cld
test
inc
add
inc
inc
push
mov
pop
hlt
rcr
and
lock
out
ins
push
mov
je
mov
sbb
dec
jle
push
mov
fldcw
sbb
in
and
idiv
pushw
fsubr
sahf
int
pop
cwde
add
fiadd
pushw
ror
mov
lea
call
(bad)
out
ss
cmp
cmps
push
js
mov
xor
add
push
and
fsubp
push
call
fnstenv
push
pop
cmp
push
xchg
fs
jnp
mov
adc
add
aam
int3
push
stc
fidivr
pushf
je
inc
push
test
dec
push
enter
loopne
nop
or
dec
mov
pop
js
in
sar
jl
jmp
fidiv
shr
mov
repz
in
or
or
or
imul
and
inc
mov
adc
dec
push
xor
add
neg
in
mov
mov
imul
push
pop
push
je
lock
cmp
into
jg
imul
jl
in
pop
cmps
stc
int3
in
cmp
push
jl
dec
dec
repz
or
cld
mov
idiv
je
inc
push
xchg
sub
js
lock
jle
ins
ds
push
clc
jmp
sbb
call
fldcw
sbb
mov
mov
push
mov
lahf
out
jl
je
inc
lock
or
inc
pop
repz
push
fcom
push
test
(bad)
jl
inc
rcl
rcl
push
jmp
jl
mov
jmp
nop
imul
push
les
out
dec
push
inc
lea
or
fmul
xchg
push
mov
cmp
cmp
frstor
xchg
xchg
jle
cld
sahf
nop
sbb
sti
ficom
pushw
inc
push
adc
dec
mov
push
or
sbb
adc
in
dec
mov
repz
add
push
sahf
int
mov
dec
pop
xor
(bad)
lock
call
and
push
push
add
ja
js
bound
stc
inc
mov
les
in
xor
xchg
out
mov
push
stos
mov
nop
pop
sbb
add
sub
es
fs
xchg
jne
push
(bad)
movs
mov
dec
xor
inc
popf
call
mov
or
je
in
push
es
mov
sti
daa
mov
sbb
out
(bad)
ret
(bad)
adc
addr16
sbb
dec
inc
push
mov
pop
(bad)
mov
retf
retf
shl
mov
sub
inc
add
push
arpl
inc
mov
add
out
sub
adc
ds
dec
(bad)
jg
fcmovnb
and
ins
es
sub
int3
enter
enter
fcomp
mov
(bad)
(bad)
loopne
jecxz
in
xlat
adc
sbb
xchg
outs
pop
gs
lods
aaa
dec
pop
and
fs
je
aad
das
cmp
imul
sub
xor
sbb
movs
push
push
adc
mov
cmp
mul
mov
pop
adc
dec
adc
(bad)
iret
sub
cmps
les
jp
push
jns
mov
enter
aas
(bad)
sbb
add
or
repz
sahf
push
sbb
sub
cmp
repz
inc
dec
push
pop
repz
repz
push
repz
mov
cmp
repz
ror
fdivr
cmp
repz
lock
add
sahf
cmps
or
sbb
sub
aaa
add
add
inc
daa
daa
add
mov
push
xor
fs
cmp
test
jns
fdiv
call
pop
pushf
pop
or
push
adc
xchg
sbb
pop
icebp
rcr
and
pop
add
add
dec
scas
jge
pop
add
add
xchg
out
adc
inc
or
or
lods
mov
pop
ins
in
pop
add
pop
mov
cmp
fisttp
push
jg
xchg
jl
and
jmp
out
outs
test
lock
cmp
repz
xor
push
push
js
cwde
test
out
repz
(bad)
fsubr
clc
or
xchg
inc
in
ins
jo
push
adc
xor
sbb
push
push
inc
xor
scas
push
jno
inc
xor
adc
adc
push
adc
add
into
xor
or
push
mov
pushf
pop
push
lods
pop
and
add
aas
push
loopne
push
lock
jnp
xor
adc
adc
out
mov
pop
and
add
imul
aas
push
jl
jle
mov
add
cmps
retf
das
sti
push
mov
aad
movs
inc
push
cmp
push
add
or
sub
and
sahf
out
(bad)
adc
adc
jns
out
adc
fdiv
mov
sbb
lock
adc
push
or
iret
repz
inc
or
cmp
add
mov
lods
cmp
repz
rol
clc
cmp
repz
clc
pop
adc
fistp
and
and
adc
jns
pusha
add
sahf
out
or
iret
repz
add
dec
dec
fs
repz
js
xchg
xor
iret
rep
xchg
mov
cmps
stc
cmp
mov
mov
out
sahf
sub
jns
out
jo
mov
mov
(bad)
mov
or
add
add
nop
dec
sub
or
inc
push
push
punpckldq
mov
pop
mov
add
adc
sbb
nop
pop
jns
adc
(bad)
js
sbb
not
or
in
xchg
in
sbb
ss
lods
pop
into
repz
(bad)
int3
addr16
add
xchg
cmp
add
repz
sahf
cmps
ss
xor
push
pusha
sahf
out
sahf
jo
mov
test
repz
or
sbb
hlt
cs
add
test
cmps
mov
inc
xchg
add
fidiv
push
add
adc
pop
xor
cmovg
add
jmp
xchg
mov
mov
xor
sti
scas
dec
das
sti
cmovg
jb
rcr
lar
jb
jb
unpcklps
adc
xor
dec
fimul
or
dec
dec
dec
adc
pop
add
cmp
pop
call
in
in
adc
jns
scas
loope
push
inc
sub
push
pop
out
sahf
out
push
inc
ja
mov
pop
jns
out
dec
push
fs
mov
pushf
out
test
out
jne
jecxz
aas
add
add
imul
dec
fisttp
jno
cmp
(bad)
xchg
xor
(bad)
movzx
add
arpl
imul
icebp
add
mov
mov
mov
setns
push
add
out
sahf
cmps
adc
xor
pop
sahf
out
sahf
push
mov
sahf
out
enter
add
repz
rcr
sub
dec
pop
mov
mov
add
or
hlt
push
adc
jmp
add
fwait
pop
mov
aam
inc
cmovge
fwait
jnp
(bad)
fstp
(bad)
fistp
imul
push
pop
js
add
or
nop
pop
repz
(bad)
sbb
pop
iret
repz
cld
ins
cli
jl
nop
cmp
repz
movs
idiv
repz
cmc
loopne
hlt
out
call
icebp
sahf
out
sahf
sub
inc
out
push
out
jns
out
push
cmp
out
pushf
jmp
rcl
jecxz
aaa
gs
fcom
xor
addr16
pop
fldenv
fiadd
xchg
jno
jg
sub
jle
or
or
add
mov
pop
iret
mov
inc
adc
nop
neg
dec
mul
add
xlat
mov
and
add
mov
mov
adc
add
das
adc
add
fwait
push
dec
adc
mov
and
scas
jmp
xchg
pop
mov
add
jns
cmps
push
stc
mov
jns
sti
cld
std
(bad)
inc
jns
out
add
add
xchg
push
add
cmc
push
xor
push
xchg
inc
iret
mov
add
jl
mov
cmp
push
nop
push
mov
jmp
add
adc
jmp
dec
xchg
data16
imul
ss
cli
mov
cld
adc
outs
(bad)
jmp
dec
add
add
stc
push
mov
xor
adc
xlat
add
std
mov
gs
xchg
dec
sbb
(bad)
lods
dec
adc
hlt
sbb
xchg
cwde
retf
xchg
jle
dec
and
and
push
ret
sbb
jb
cmp
xor
dec
pusha
xchg
mov
ds
cmps
add
or
ins
jns
mov
or
add
and
push
jge
dec
pop
aam
pop
push
push
and
mov
adc
cmp
das
pop
scas
(bad)
in
test
pop
and
add
retf
lock
add
adc
adc
test
pop
inc
pop
inc
jb
xchg
mov
push
jb
pop
add
push
mov
add
leave
in
push
pop
pop
or
retf
leave
or
or
pop
mov
add
aaa
test
adc
pop
or
or
or
ror
ror
push
add
jb
jmp
cld
dec
rcr
fsubr
jge
adc
call
xor
add
cmp
dec
mov
(bad)
push
sub
jg
ret
cld
rcl
popa
xchg
in
jge
dec
ins
retf
cmp
or
mov
xor
inc
pop
inc
jo
imul
xchg
call
sar
pusha
outs
jno
inc
pop
jp
arpl
outs
ins
sub
das
add
pop
jl
jmp
jnp
sub
and
sub
(bad)
out
add
push
push
pop
push
dec
dec
push
jnp
push
inc
push
shl
pushf
xor
call
pop
pop
inc
push
inc
dec
dec
cmp
aas
cmps
jno
push
lds
sbb
cmp
lods
outs
pop
out
sahf
xlat
push
ins
push
adc
shl
clc
or
cmp
pop
je
movs
stos
push
pop
hlt
pop
pop
call
push
sar
fs
mov
in
mov
scas
nop
sub
push
cmp
aam
dec
std
push
stc
in
sahf
out
loope
add
(bad)
cld
clc
lock
jg
int
cmp
xor
or
(bad)
(bad)
(bad)
(bad)
cmp
add
xor
bswap
aas
inc
dec
mov
jae
dec
mov
shr
(bad)
(bad)
(bad)
call
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
(bad)
cmp
push
or
cmp
pop
(bad)
aaa
test
mov
ja
(bad)
(bad)
(bad)
(bad)
call
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
add
(bad)
(bad)
inc
xor
push
into
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
jge
(bad)
(bad)
(bad)
jmp
adc
cs
push
fisub
loope
shr
bound
pop
mov
ins
popf
pop
or
(bad)
(bad)
dec
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
dec
mov
jne
(bad)
(bad)
(bad)
(bad)
jmp
sub
sbb
and
push
pop
cmps
xchg
push
test
gs
push
test
lds
push
inc
mov
dec
xor
and
jae
push
xor
cdq
std
mul
sbb
push
bound
mov
inc
sub
mov
pop
push
and
mov
or
fldcw
push
ss
and
sbb
or
cdq
mov
mov
cmps
mov
jae
cdq
push
ss
push
lock
out
popa
dec
mov
xor
push
outs
dec
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
jmp
aas
mov
push
loope
pop
stos
jb
push
test
add
or
or
add
sbb
or
je
or
adc
and
xor
shl
sub
sbb
out
ror
and
out
sub
cmp
xor
jns
out
and
push
setle
jns
pop
push
and
sahf
out
cmp
sahf
out
cs
jns
ss
aaa
ds
mov
pop
or
ret
dec
fsubr
xor
das
push
dec
lds
pop
cmp
aaa
das
or
fidivr
ds
cmp
pop
sbb
scas
push
xchg
aaa
and
ja
cmps
ins
addr16
and
mov
sahf
push
pop
xor
mov
dec
scas
outs
jns
js
jns
out
dec
pop
bound
mov
cmp
adc
das
daa
pop
scas
jbe
mov
adc
jnp
xchg
fdiv
cmp
outs
pop
mov
push
add
add
or
add
pop
or
or
call
ret
add
add
add
add
jmp
add
(bad)
(bad)
mov
and
inc
push
adc
pop
and
xor
inc
mov
adc
xor
test
(bad)
jo
pop
sbb
sbb
sub
cmp
(bad)
push
ret
xor
sbb
test
xchg
xchg
xchg
xchg
xchg
xchg
cwde
(bad)
(bad)
(bad)
call
movs
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
sar
call
(bad)
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
gs
pop
gs
dec
add
lahf
adc
push
pop
popa
jno
and
pop
or
adc
push
push
lock
shl
xor
and
or
and
imul
gs
push
or
es
add
repz
ret
push
push
cmp
cmp
rol
cmp
repz
dec
stos
repz
shl
int3
lock
out
push
push
fcom
push
in
jns
out
pop
lock
jns
clc
inc
pusha
clc
outs
push
fs
out
or
push
sahf
out
and
jns
nop
je
mov
out
mov
inc
rol
rol
sahf
mov
push
sahf
ja
push
je
xchg
jl
out
sahf
and
jns
out
inc
mov
jns
out
pusha
test
jo
out
sahf
lods
fadd
sahf
out
mov
mov
jns
ja
push
mov
out
sahf
xor
les
enter
jns
lock
js
xor
push
nop
adc
test
jns
out
fadd
xor
fsub
jns
out
loopne
push
in
repz
or
pusha
call
iret
repz
xor
nop
repz
repz
dec
mov
cmp
mov
rol
sahf
out
sahf
js
or
jns
lock
rcl
sbb
adc
cmp
repz
and
xor
sahf
cmps
stc
add
inc
sub
push
out
sahf
out
sbb
xor
sahf
out
sahf
jo
xor
cmp
sahf
out
nop
cmp
mov
out
mov
push
sahf
dec
je
dec
test
jns
out
push
mov
push
mov
add
iret
repz
mov
push
rol
in
push
sahf
ja
repz
push
push
js
jns
out
jo
sub
out
nop
mov
out
sahf
nop
ins
mov
test
jns
out
pushf
pushf
shl
out
movs
enter
sahf
ja
loopne
ss
clc
adc
cmp
iret
repz
rol
push
repz
cmp
aam
fdiv
cmp
jo
mov
fwait
jecxz
push
nop
add
dec
mov
out
xchg
push
outs
rcl
aas
aaa
mov
and
push
mov
lock
add
test
inc
lock
mov
jg
ja
add
dec
iret
repz
push
push
in
pusha
call
cmp
in
jle
daa
popa
xor
(bad)
jecxz
push
adc
sahf
out
ficomp
ins
js
sahf
out
test
jns
out
int3
fsub
lock
addr16
cld
or
and
push
push
cmp
repz
dec
push
pusha
ins
js
cmp
repz
pushf
test
shl
iret
repz
fsub
lock
jnp
add
outs
repz
jno
push
push
sbb
repz
xor
push
pusha
ins
cmp
repz
test
iret
repz
int3
fadd
or
mov
pop
cmps
stc
int3
les
mov
bnd
sahf
out
sahf
and
inc
push
push
jns
test
fdiv
(bad)
(bad)
(bad)
jmp
cs
leave
mov
ss
mov
bound
jae
cwde
xchg
sub
mov
inc
cmp
aam
push
addr16
outs
sbb
dec
(bad)
(bad)
ficomp
cmc
mov
(bad)
out
jp
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
idiv
(bad)
(bad)
call
mov
movs
mov
xlat
pop
xchg
sub
cmp
xchg
movs
jge
jbe
imul
je
(bad)
(bad)
inc
inc
popf
jo
fs
and
sub
and
neg
(bad)
mov
jle
push
inc
mov
cmp
pop
stc
into
mov
(bad)
jmp
sub
inc
or
ins
shr
or
(bad)
(bad)
(bad)
push
mov
arpl
ins
jmp
add
push
pop
shl
cmps
ja
clc
jmp
(bad)
(bad)
(bad)
dec
xor
(bad)
in
pop
sbb
cdq
lea
lahf
adc
and
adc
add
xor
and
adc
(bad)
(bad)
dec
add
xor
and
adc
add
sub
aas
aaa
das
daa
pop
pop
sysret
ds
push
push
push
cmp
jmp
add
push
adc
sbb
add
adc
sbb
adc
clc
(bad)
(bad)
call
adc
add
xor
and
xor
daa
cmp
xor
sbb
mov
ficom
cmps
int
add
test
idiv
or
or
movups
adc
cmp
sub
popf
adc
push
push
add
daa
mov
neg
shl
sub
cmp
lock
cmp
xchg
ja
and
push
xor
fistp
addr16
add
in
xchg
mov
mov
scas
add
out
mov
retf
pop
fild
mov
fadd
adc
push
fsub
adc
pop
mov
cs
push
add
(bad)
fiadd
add
sub
pcmpeqd
ja
push
aaa
push
mov
ins
arpl
mov
(bad)
mov
mov
lahf
mov
lahf
iret
pop
pop
or
push
das
cmps
cmp
inc
div
dec
push
push
push
pop
movs
mov
and
das
add
out
cmp
aaa
xchg
aaa
aas
pop
outs
daa
pop
outs
jnp
repnz
or
test
jo
nop
daa
retf
pop
sub
ja
mov
inc
cwde
mov
aas
fcom
add
cmp
add
pop
jno
jnp
lods
loop
leave
inc
aas
and
push
pop
xchg
add
shl
xchg
(bad)
mov
out
outs
(bad)
pop
mov
inc
fsub
outs
(bad)
or
fcom
aas
btc
pop
test
push
cdq
jnp
fild
daa
or
inc
into
pop
ins
ja
push
inc
inc
inc
pop
test
mov
inc
addr16
lods
add
or
mov
fucomi
daa
fcomi
ret
daa
ja
push
in
enter
pop
pop
mov
sbb
push
pop
aaa
dec
sti
lock
adc
inc
push
jbe
test
xor
(bad)
sbb
push
add
je
frstor
cs
daa
adc
mov
xchg
(bad)
lahf
aaa
mov
mov
addr16
arpl
mov
out
mov
dec
fild
daa
ins
imul
xchg
fistp
aaa
aas
sub
out
daa
clc
push
add
test
sbb
push
push
ja
into
fnstenv
ucomiss
adc
mov
push
pop
out
mov
outs
daa
pop
cmps
mov
stos
ja
das
jge
punpcklwd
ins
(bad)
out
mov
out
cs
sub
pop
ds
xchg
daa
fisttp
jns
mov
seta
and
mov
fiadd
lds
add
and
push
add
adc
push
push
inc
iret
cmp
addr16
sub
ja
xchg
cs
popf
inc
fidiv
rcl
scas
outs
inc
jbe
cmps
ja
aaa
pop
outs
jnp
and
dec
dec
das
or
ficomp
jg
and
pop
aad
fnstcw
(bad)
(bad)
(bad)
(bad)
call
fnsave
jns
mov
aaa
sub
push
mov
mov
mov
jmp
or
xchg
ins
lea
pop
xchg
dec
lock
and
pop
imul
(bad)
gs
into
pusha
mov
jae
rcl
icebp
fcom
jne
pop
cmp
call
inc
cmp
mov
outs
mov
pop
push
daa
repnz
add
adc
not
(bad)
jmp
push
ret
aad
enter
or
jmp
stos
jb
xor
sbb
jno
adc
push
rcr
sbb
sqrtps
int3
and
scas
(bad)
(bad)
call
jo
cdq
jl
test
mov
ss
and
pop
cli
cwde
jecxz
xchg
(bad)
(bad)
(bad)
jmp
ins
mov
iret
loope
test
arpl
add
pop
loop
test
stos
xor
test
(bad)
push
mov
repz
movs
pushf
ja
cmps
and
jg
lods
inc
int
sub
dec
clc
add
ss
fdivr
out
push
stos
dec
call
mov
sahf
out
sahf
push
mov
cli
out
(bad)
jg
jns
xchg
arpl
clc
jl
test
ja
cdq
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
fisubr
mov
vandpd
xor
add
add
addr16
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
sbb
stos
stos
out
jbe
call
sbb
jge
xchg
(bad)
(bad)
(bad)
out
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
mov
scas
jmp
pushf
mov
in
jb
fwait
rol
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
(bad)
(bad)
jmp
pop
jle
aas
inc
cmc
div
add
xor
pop
push
movs
movs
hlt
shl
in
stc
icebp
icebp
or
(bad)
(bad)
jmp
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
mov
gs
ret
ret
pop
(bad)
(bad)
(bad)
push
sbb
sub
xchg
xchg
mov
das
call
and
adc
sbb
loop
(bad)
(bad)
(bad)
dec
jmp
es
daa
daa
imul
jne
adc
or
sbb
sub
je
sbb
cs
(bad)
jmp
sbb
mov
pop
out
pop
mov
push
div
cmp
(bad)
(bad)
popa
jge
sar
(bad)
push
jnp
jecxz
ds
das
das
jno
test
mov
(bad)
inc
mov
mov
cld
pop
jns
mov
mov
pop
in
aam
(bad)
(bad)
(bad)
jmp
(bad)
retf
retf
inc
addr16
cmp
dec
dec
ficomp
pop
pop
call
mov
call
imul
out
sub
stos
in
sti
sti
push
xchg
lds
xor
push
adc
cwde
mov
iret
jmp
add
(bad)
(bad)
(bad)
fistp
and
lahf
lahf
mov
mov
mov
inc
(bad)
(bad)
(bad)
inc
add
xchg
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
scas
fcmovu
mov
inc
and
arpl
adc
xor
push
std
repz
mov
call
ins
or
or
adc
xor
mov
xchg
xchg
mov
jg
int3
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
(bad)
(bad)
(bad)
call
sbb
out
jae
shl
sbb
dec
shl
and
push
sub
jle
(bad)
(bad)
(bad)
call
mov
(bad)
out
out
sub
mov
cmp
(bad)
jns
pop
pop
loop
(bad)
(bad)
(bad)
dec
or
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
fisttp
push
or
(bad)
(bad)
jmp
ins
mov
ret
mov
lods
lods
out
les
cmps
cmp
xchg
movs
shl
inc
bnd
mov
out
mov
enter
aaa
pop
fisubr
mov
(bad)
(bad)
fist
aad
pushf
dec
dec
ror
test
mov
push
push
cli
repz
hlt
pop
iret
jmp
retf
scas
hlt
jp
cmp
scas
jmp
outs
mov
(bad)
(bad)
jg
mov
and
jb
sbb
and
cmps
cmps
icebp
jae
mov
xchg
mov
(bad)
jmp
fnstsw
je
ds
pop
and
mov
mov
xchg
mov
nop
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadd
add
(bad)
(bad)
inc
add
sbb
push
adc
popa
popa
mov
scas
push
push
stc
imul
(bad)
jmp
cli
rcr
sbb
fabs
loope
jmp
clc
adc
cwde
cwde
mov
adc
xor
(bad)
(bad)
(bad)
jmp
mov
pop
mov
cmps
sub
push
push
and
jmp
(bad)
(bad)
dec
into
dec
stos
push
push
call
sub
(bad)
jp
mov
or
or
(bad)
(bad)
mov
out
test
(bad)
shr
mov
sub
sub
adc
pop
(bad)
push
push
cld
ins
mov
push
cmp
jl
popf
cmp
repz
imul
iret
repz
add
(bad)
xlat
leave
repz
jbe
retf
daa
iret
repz
inc
lods
mov
push
scas
pushf
movs
jb
out
sahf
out
std
xchg
es
out
sahf
aas
test
sahf
out
icebp
jno
xor
add
and
sbb
add
jns
out
loop
daa
mov
out
sahf
out
sub
sahf
out
sahf
outs
pop
mov
sahf
out
mov
jecxz
test
int3
test
push
sar
push
ds
mov
push
shl
dec
pop
xor
shl
shr
stos
sti
shl
test
shl
cmp
mov
inc
imul
imul
imul
or
xor
shl
cmps
jle
fs
push
pusha
jle
out
sahf
out
fsub
sub
mov
mov
out
pop
or
loopne
out
sahf
out
or
and
out
sahf
pop
ret
bound
xchg
in
out
out
sahf
out
ins
(bad)
aad
sahf
out
sahf
test
gs
out
jp
or
out
cs
mov
out
sahf
(bad)
call
jns
out
mov
out
sahf
out
dec
add
sahf
out
sahf
push
popa
xor
sahf
out
rcr
sahf
out
adc
mov
fwait
push
xchg
into
jns
out
push
sub
mov
mov
out
sahf
push
mov
xchg
out
push
mov
jle
gs
sbb
(bad)
(bad)
(bad)
jmp
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
jbe
cmc
add
in
cld
lds
retf
xlat
es
mov
dec
and
jmp
pop
inc
loope
das
jne
or
imul
mov
pop
out
xchg
pushf
xchg
mov
(bad)
jp
xchg
push
pop
fcmovbe
mov
and
dec
loopne
sub
ret
hlt
mov
cdq
pop
(bad)
(bad)
(bad)
(bad)
imul
jno
mov
mov
data16
cmp
sbb
adc
xor
push
jg
mov
ja
mov
and
sbb
sbb
clc
mov
jae
and
add
jecxz
(bad)
push
data16
(bad)
(bad)
call
sub
mov
add
aaa
or
and
push
in
(bad)
(bad)
(bad)
call
sbb
sub
pop
repnz
imul
int
add
bound
(bad)
(bad)
(bad)
(bad)
jmp
push
popf
mov
mov
xor
in
cmp
out
stos
pop
jno
push
mov
outs
adc
and
cmp
dec
out
inc
xchg
push
lea
add
aam
pusha
(bad)
(bad)
(bad)
call
call
cwde
sti
and
mov
inc
int3
fstp
call
mov
jns
mov
(bad)
inc
psubsw
test
leave
xchg
add
push
(bad)
(bad)
(bad)
call
jo
ins
pop
jb
std
push
(bad)
sti
jne
aad
ss
fldenv
cmps
and
pop
push
shl
cmp
addr16
push
out
mov
xchg
rcr
fwait
xchg
sahf
add
dec
popa
fsub
mov
push
imul
mov
in
and
inc
adc
pop
sbb
repnz
lods
sub
mov
mov
push
icebp
sbb
out
cdq
fnstsw
test
cmc
mov
cli
cmp
pop
sti
add
sub
and
fdiv
in
cld
push
xlat
xor
retf
test
adc
adc
test
jge
mov
(bad)
(bad)
(bad)
stc
xor
(bad)
sub
dec
fdiv
push
in
ja
jecxz
sub
mov
(bad)
call
and
lock
sbb
sub
and
nop
out
xchg
(bad)
fnstcw
rol
mov
(bad)
(bad)
dec
mov
cmps
cmc
or
fidiv
mov
in
js
or
call
fwait
push
jle
(bad)
test
(bad)
(bad)
(bad)
(bad)
cmp
pop
add
cmc
lahf
pop
cmp
aad
test
enter
adc
jge
call
pushf
arpl
cmp
or
sbb
in
call
out
outs
gs
jmp
jle
(bad)
(bad)
(bad)
(bad)
mov
call
(bad)
ss
jmp
(bad)
xor
xor
jg
sub
movs
xchg
xor
aaa
cld
or
loopne
(bad)
(bad)
call
fcom
inc
in
(bad)
jg
push
push
pop
xchg
imul
jbe
(bad)
lea
mov
int3
(bad)
(bad)
(bad)
jmp
add
sahf
shl
sbb
sub
mov
popf
pop
jmp
(bad)
(bad)
(bad)
inc
inc
cs
sbb
push
jmp
(bad)
inc
adc
mov
(bad)
(bad)
(bad)
clc
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
sbb
(bad)
(bad)
call
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
mov
outs
push
(bad)
jmp
sub
mov
ret
jb
loop
or
mov
or
inc
test
jno
or
(bad)
mov
pushf
fs
rcl
xor
mov
mov
or
loope
jns
xor
movs
cmp
dec
shl
sahf
xor
sar
jl
cmp
das
inc
xor
inc
inc
(bad)
fsubrp
retf
xor
shl
jnp
xor
ret
out
dec
dec
shl
ret
dec
xor
shl
mov
dec
rcr
and
jbe
dec
shl
shl
jb
mul
xor
shr
push
aam
dec
shl
mov
xor
shl
jo
push
std
imul
imul
dec
call
cmps
imul
cmps
imul
shr
(bad)
cmps
imul
cmps
adc
cmps
mov
cmps
imul
cmps
imul
imul
imul
cmps
imul
aaa
call
cmps
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
imul
dec
and
sbb
cmps
out
shl
leave
pushf
xor
shl
mov
xor
shr
dec
shl
push
cdq
xor
shl
pop
sub
shl
es
shl
and
outs
xchg
dec
xchg
push
pop
add
cmps
nop
add
add
out
sahf
cmps
out
push
push
(bad)
adc
and
adc
push
mov
pop
or
xor
shl
or
push
movups
lahf
sub
adc
add
popf
pusha
nop
adc
pop
stc
add
cmp
sbb
push
add
xor
add
or
fcmovnu
add
pop
and
sub
push
sub
pop
and
daa
adc
es
xor
sub
adc
adc
sbb
loopne
sbb
sbb
push
adc
pushf
ss
lea
or
add
add
loopne
outs
add
add
js
into
push
adc
aaa
xchg
lea
jl
sbb
outs
add
mov
pop
fcom
sub
adc
pop
xor
adc
xchg
mov
pop
add
jmp
fild
pop
sbb
bound
fadd
add
pop
pop
mov
push
test
clc
sbb
aas
scas
mov
sbb
sub
add
and
adc
cmp
je
das
xor
call
in
call
cmp
add
pop
xor
sub
dec
cmp
mov
add
pop
out
jmp
jo
call
test
test
out
jmp
pop
in
and
out
pop
sub
push
sar
add
aas
mov
mov
iret
outs
push
mov
mov
cmp
repz
push
add
adc
and
xor
add
push
adc
mov
sahf
inc
mov
xchg
cmc
push
out
push
mov
loopne
(bad)
movs
add
adc
and
dec
xlat
(bad)
lods
sub
(bad)
(bad)
sub
sub
cmc
ss
out
mov
mov
push
sub
test
ret
stos
ss
and
push
and
cmp
sub
push
pop
xchg
cmp
pop
push
scas
add
ror
inc
pop
dec
neg
jnp
mov
xchg
xor
mov
push
pushf
mov
sbb
(bad)
nop
test
cdq
jp
inc
or
mov
fmul
cmp
cs
add
cld
inc
les
sbb
mov
xchg
push
push
push
cmp
dec
mov
push
int3
ds
movs
jo
mov
and
pop
xchg
fdiv
mov
nop
sahf
les
jmp
push
mov
ds
loopne
out
adc
mov
mov
movs
jle
(bad)
sbb
js
pmaxub
or
ins
push
ins
fimul
cmps
loop
fwait
sub
cld
sub
mov
test
pop
cs
js
es
ja
sahf
ss
into
dec
adc
loopne
es
movs
jbe
daa
icebp
and
sub
loop
jl
dec
es
jo
mov
push
out
mov
push
jbe
ret
mov
aam
push
fadd
cs
jl
gs
sbb
mov
jnp
into
jbe
push
fs
push
push
fadd
loop
xor
in
jnp
loopne
sub
outs
fs
xlat
dec
cli
fiadd
cs
ret
mov
test
pushf
ds
loope
or
ss
cs
iret
jecxz
clc
cmps
int3
mov
es
daa
inc
je
jnp
fidivr
sbb
sbb
pop
cmps
cmc
icebp
fidiv
push
and
int3
cmps
loopne
cmp
repz
mov
js
jnp
cmp
data16
lods
(bad)
hlt
fdivp
fisubr
or
ds
js
ja
je
push
in
ret
jnp
xchg
sub
dec
dec
in
push
mov
fs
pop
push
cmp
push
xchg
or
jbe
jnp
sbb
adc
push
rcl
aam
mov
jbe
push
dec
addr16
jnp
test
sub
outs
xchg
je
mov
mov
jle
pop
test
enter
test
cwde
jp
sbb
es
lahf
push
je
jp
js
inc
pop
push
mov
mov
xchg
push
inc
ds
fadd
ja
popf
scas
data16
jl
xor
cmp
jle
xchg
xchg
clc
lock
pop
jle
inc
dec
cs
les
ds
cmps
in
(bad)
daa
mul
mov
ss
lahf
aaa
cmp
(bad)
mul
jbe
xchg
out
xchg
push
cwde
inc
data16
test
adc
test
hlt
(bad)
sub
xor
mov
xchg
mov
lea
cs
push
adc
jo
fs
int3
ror
add
push
lock
addr16
addr16
jo
(bad)
cwde
sar
ja
sub
fdivr
push
mov
data16
mov
pop
xlat
shl
xchg
push
jae
jns
push
and
or
and
pop
lock
iret
jo
es
inc
mov
sbb
mov
cmp
pop
jg
sahf
mov
hlt
dec
sub
into
fcom
mov
outs
in
sbb
xor
rcr
push
mov
and
xor
inc
es
(bad)
je
loop
lock
push
test
idiv
adc
jnp
int3
(bad)
call
idiv
scas
ss
sahf
adc
es
data16
sbb
out
push
sub
nop
fmul
enter
cmp
mov
xor
fnstsw
xlat
sahf
sub
mov
rcr
xchg
cld
xchg
fisttp
icebp
adc
sbb
aaa
outs
push
push
movs
(bad)
pusha
mov
ss
mov
shld
clc
pop
data16
into
lock
sbb
xchg
aam
push
cwde
scas
mov
push
neg
sub
xchg
mov
cmp
outs
data16
scas
mov
lods
mov
outs
and
push
ins
push
loopne
inc
or
dec
je
les
mov
into
pop
adc
outs
hlt
imul
mov
jbe
mov
fidivr
mov
aas
push
idiv
xor
lock
into
cwde
xor
push
mov
pusha
icebp
mov
fidivr
jnp
out
es
mov
es
push
inc
xchg
ss
xchg
jo
fmul
je
rcl
or
sar
outs
inc
pop
mov
lock
dec
shl
push
in
sub
ficom
(bad)
in
dec
mov
ss
scas
pop
push
jmp
(bad)
fdiv
push
mov
fadd
es
out
xchg
loop
dec
xchg
into
dec
dec
lock
ja
(bad)
(bad)
dec
inc
push
jo
xor
(bad)
adc
js
out
sub
jl
xchg
clc
js
loop
push
xor
inc
into
dec
data16
out
push
scas
es
xchg
sub
xor
push
inc
leave
mov
test
inc
push
add
xor
push
add
jg
and
or
inc
add
sbb
inc
add
inc
push
add
add
mov
add
push
adc
add
dec
fiadd
pop
inc
sbb
mov
and
dec
pop
push
and
pop
mov
aaa
push
pop
dec
add
sub
sbb
push
dec
xchg
push
jne
(bad)
loop
push
inc
mov
jbe
neg
mov
push
xchg
dec
xor
or
inc
push
push
loopne
fidivr
push
inc
push
cs
out
xlat
loopne
or
inc
sbb
inc
fdivr
fidivr
dec
push
rsqrtps
sbb
mov
dec
pop
push
push
inc
inc
jno
ror
add
sub
and
leave
add
or
sbb
call
add
out
pop
rol
sbb
xchg
nop
test
sbb
sar
fadd
das
pop
mov
clc
aas
push
pop
call
dec
sahf
loopne
(bad)
cld
add
pop
fs
jns
or
push
aas
(bad)
jg
pop
xor
add
inc
into
push
xchg
jl
add
test
or
fnop
push
mov
shr
add
psubb
mov
dec
outs
add
push
out
lahf
cmps
fldcw
neg
out
(bad)
cmp
cmp
or
loopne
lock
and
clc
pop
push
(bad)
aas
(bad)
aas
pop
xchg
addr16
lock
push
push
pop
std
fiadd
gs
push
fnstsw
add
pop
add
ins
jl
pushw
mov
jl
jbe
jg
sbb
in
clc
inc
add
jo
iret
fs
das
rol
mov
lock
(bad)
xchg
test
jl
push
or
push
cdq
pop
xstore-rng
cmps
inc
movs
(bad)
jg
add
(bad)
cmp
(bad)
dec
inc
jl
adc
iret
add
add
mov
adc
and
out
lods
fld
add
das
aas
dec
pop
add
daa
shl
fwait
iret
xor
clc
lock
aas
push
pop
clc
dec
add
ins
fstp
ficom
pop
outs
clc
(bad)
sbb
pusha
addr16
jmp
loopne
pop
out
data16
lods
sub
add
in
out
mov
ds
jle
lds
add
fwait
add
pop
in
les
test
jnp
bound
aas
nop
jmp
push
les
mov
addr16
cld
mov
push
cmp
fadd
push
inc
mov
aaa
pop
push
data16
lock
inc
sbb
inc
cs
mov
and
jge
cmp
ins
ss
int
or
push
sub
inc
add
(bad)
shl
xor
sbb
push
push
sbb
cmp
sbb
aas
jne
data16
(bad)
push
xor
div
fwait
ins
(bad)
adc
fcomp
jl
sbb
push
sbb
or
popa
fld
pop
ss
and
adc
and
adc
xor
and
add
sub
dec
jnp
or
add
rol
movs
mov
add
ja
out
or
add
mov
cmp
sub
mov
mov
sbb
cmp
(bad)
and
daa
neg
in
scas
and
xor
sahf
jnp
pop
and
ja
cmp
sahf
mov
push
dec
push
mov
jnp
xor
push
daa
retf
xor
outs
enter
xchg
push
(bad)
sbb
mov
lahf
dec
daa
dec
add
daa
mov
(bad)
mov
adc
clc
push
(bad)
xor
cmp
cmc
sbb
mov
popa
cmp
mov
xor
jl
cmp
xchg
inc
cmp
xor
xor
and
daa
inc
xlat
fiadd
push
movs
daa
dec
sub
in
mov
xor
mov
sbb
jns
pop
aas
jns
xlat
sahf
ret
imul
pop
push
es
and
ja
push
int3
push
and
and
mov
and
mov
data16
cmp
push
mov
fs
xlat
push
retf
outs
jnp
daa
push
and
push
mov
mov
push
or
mov
daa
dec
daa
push
cmp
push
xbegin
inc
inc
push
addr16
adc
inc
pop
(bad)
xchg
sti
out
add
test
jg
inc
inc
or
mov
out
cmc
int3
jle
dec
push
pop
es
(bad)
daa
addr16
inc
aad
push
push
dec
dec
cs
mov
out
in
add
sub
(bad)
fild
aas
add
clc
fwait
and
jecxz
add
mov
lds
mov
daa
or
pop
(bad)
dec
pushf
es
sbb
(bad)
pop
add
arpl
daa
ds
in
popa
jecxz
daa
xor
arpl
enter
rol
and
(bad)
lahf
cmp
mov
push
push
add
jbe
cmp
push
retf
int3
adc
jnp
dec
retf
jmp
inc
inc
es
daa
dec
into
fld1
cmp
daa
xor
or
push
clc
in
repz
pop
mov
adc
or
nop
shr
sbb
inc
xchg
sbb
or
(bad)
mov
es
repz
daa
xor
arpl
cmp
push
cmps
arpl
out
jne
aas
das
es
bound
mov
addr16
push
inc
sub
push
sbb
mov
and
and
and
push
sub
dec
in
cmps
outs
data16
inc
push
shl
mov
out
push
inc
mov
and
inc
pop
loope
pop
aas
call
stos
sub
pop
lock
or
jmp
dec
push
fimul
mov
pop
xor
dec
xchg
daa
mov
sub
adc
scas
add
pop
jne
(bad)
jmp
and
data16
sub
and
ret
cld
jle
adc
cdq
xchg
mov
xchg
sbb
loopne
les
daa
jl
daa
(bad)
xchg
fstp
into
jmp
and
in
sahf
mov
sbb
xchg
fdivr
(bad)
daa
dec
xor
dec
xor
gs
dec
daa
dec
daa
dec
daa
iret
cmp
out
clc
dec
je
dec
sar
jmp
inc
jnp
jl
pop
dec
ror
mov
aas
sbb
(bad)
cmp
xor
mov
loope
xor
cdq
cdq
sbb
xchg
xchg
push
mov
xchg
in
out
push
mov
and
daa
repz
xor
xor
daa
or
pushf
sahf
adc
jb
cwde
inc
sub
push
(bad)
sbb
outs
inc
push
(bad)
push
in
ja
inc
daa
shl
cmp
and
push
and
popa
mov
jb
pop
push
inc
out
dec
cmps
push
pusha
and
cmp
pop
es
xor
add
jl
(bad)
(bad)
jmp
je
sbb
sub
mov
gs
ret
fcmovnbe
(bad)
aaa
into
aaa
daa
dec
or
dec
and
add
xchg
mov
sub
aaa
sub
ins
xor
dec
sub
das
push
and
loop
ja
das
mov
mov
cmp
fnsave
push
and
pop
dec
jmp
xchg
or
mov
out
and
stos
stos
inc
push
nop
push
sbb
ss
jmp
test
addr16
cmc
jp
sub
setns
(bad)
jnp
pushf
cld
retf
xor
pop
mov
ins
retf
in
lock
out
xchg
sahf
xchg
mov
add
leave
sbb
add
mov
movs
movs
add
mov
and
nop
push
add
add
leave
dec
and
add
div
and
mov
sahf
inc
outs
jae
frstor
adc
push
push
add
fidiv
adc
dec
data16
ins
pop
imul
scas
mov
xchg
sub
mov
add
outs
sbb
outs
push
addr16
popf
js
pop
inc
popa
or
pop
(bad)
(bad)
add
pushw
arpl
mov
scas
jbe
sti
imul
jns
mov
dec
es
sbb
inc
mov
and
neg
adc
and
cs
add
imul
out
arpl
mov
push
jnp
sbb
imul
fld
imul
or
mov
jg
sti
adc
movs
pop
in
loopne
push
addr16
mov
daa
aaa
mov
cmp
imul
loop
or
dec
push
inc
ds
fmul
daa
sbb
out
sub
fs
sbb
(bad)
ror
jo
sub
lds
and
adc
scas
lahf
pop
shl
fs
adc
or
dec
ja
fsub
pop
je
mov
pop
scas
outs
jae
outs
jbe
(bad)
jnp
cmp
inc
push
arpl
jns
mov
cmps
push
cwde
es
add
push
ret
xor
add
mov
adc
outs
and
loopne
rol
daa
and
arpl
outs
mov
rcr
addr16
inc
sub
(bad)
fisubr
push
ins
xchg
sbb
inc
in
call
es
ret
or
sbb
sbb
not
xchg
out
or
je
and
mov
sti
mov
fisubr
sbb
and
sub
push
inc
imul
shl
shl
sbb
ret
push
jmp
cmps
outs
arpl
bound
pop
cmovae
outs
xchg
cli
xor
sub
fst
jae
bound
pop
xor
pop
inc
(bad)
out
je
imul
sbb
jae
mov
and
bsr
jnp
jbe
out
pop
mov
cmp
push
push
push
call
ins
mov
or
mov
adc
jb
out
and
add
imul
xor
movhps
cmp
outs
jecxz
fld
jnp
jno
fwait
xor
dec
pop
mov
pop
outs
push
xor
outs
adc
or
(bad)
gs
dec
ja
stos
jo
js
pop
arpl
adc
(bad)
push
adc
shr
gs
mov
and
xor
enter
cmps
mov
xchg
out
pusha
fadd
push
(bad)
jne
sub
adc
ror
sbb
(bad)
push
mov
xlat
(bad)
pop
xor
add
pop
and
lods
test
ja
rol
jbe
sbb
dec
dec
(bad)
ror
inc
pop
shl
arpl
jae
loopne
add
(bad)
mov
div
adc
dec
jmp
hlt
lock
add
mov
test
iret
jbe
adc
push
jo
idiv
dec
adc
lea
pop
pop
mov
(bad)
pop
inc
adc
push
neg
clc
cli
jmp
jo
add
push
pop
fs
and
cs
mov
pop
shl
out
lods
push
cmps
inc
jmp
and
pop
out
push
dec
pop
hlt
cmps
add
mov
xchg
out
and
not
adc
xor
jb
and
jge
popa
xor
add
pop
(bad)
sbb
jbe
sub
or
aad
or
push
jecxz
lock
jo
gs
jbe
push
push
mov
fistp
stos
jl
pop
jns
fwait
bound
mov
pusha
mov
fbstp
cmps
mov
sub
push
mov
mov
rcl
push
(bad)
xlat
arpl
adc
mov
and
add
test
mov
pshufw
not
xlat
push
sbb
retw
and
ins
pop
ins
(bad)
pop
or
xchg
adc
inc
push
jns
ret
(bad)
outs
jecxz
push
cmp
fild
into
jp
ret
fild
in
out
mov
stos
stos
sub
mov
xchg
pop
jp
push
fwait
push
aas
ret
xor
add
sti
dec
das
inc
mov
pusha
lahf
mov
mov
sbb
pop
xor
adc
push
imul
pop
(bad)
jl
push
mov
sub
jg
xor
or
pop
xchg
and
mov
mov
lea
xchg
(bad)
mov
push
sbb
or
push
test
pop
pop
rol
sbb
sbb
add
sti
stos
cmp
inc
sbb
inc
test
jns
xor
pusha
add
dec
or
les
pop
mov
icebp
mov
add
push
jbe
mov
mov
push
(bad)
xor
sub
fadd
pop
inc
or
aam
xor
push
cmps
jae
mov
cmp
scas
pop
or
in
adc
sub
pop
imul
dec
mov
push
imul
jmp
out
xor
clc
rol
test
sbb
mov
mov
inc
mov
jg
sti
cs
scas
inc
and
ret
adc
je
dec
(bad)
test
stos
jb
mov
mov
ins
and
cmp
jg
adc
add
shl
bound
sti
inc
daa
and
mov
and
jg
adc
pop
xlat
cmp
arpl
and
push
xchg
and
mov
(bad)
fs
imul
ror
sti
outs
rcl
adc
pop
movs
mov
push
cmp
hlt
sbb
jne
push
fidiv
outs
out
lds
mov
stos
imul
xchg
es
push
test
mov
fild
dec
pop
movs
les
bswap
or
xor
outs
ja
call
dec
xor
sbb
mov
xchg
mov
ss
cmps
inc
sbb
sahf
mov
(bad)
dec
imul
lea
dec
add
imul
imul
fisttp
outs
jne
cmp
and
divps
or
sbb
or
stos
scas
pop
outs
sub
cs
aas
push
jae
leave
mov
scas
push
rcr
pop
sbb
cs
jae
sub
jg
xchg
(bad)
jno
pop
dec
gs
sub
mov
stos
cs
shl
cmps
or
out
jmp
es
add
lods
(bad)
push
mov
stos
aam
sub
push
arpl
pop
rol
dec
pop
aad
(bad)
add
pop
shl
movs
es
push
bound
rol
and
inc
into
cs
(bad)
loopne
xor
mov
out
out
mov
jb
add
call
adc
mov
imul
xchg
ja
inc
dec
into
add
popa
pop
jbe
or
sub
out
xchg
mov
sub
dec
aad
jb
and
cmp
(bad)
jmp
das
imul
rcl
push
sbb
rcl
(bad)
xchg
je
xlat
xchg
sahf
push
push
adc
imul
ss
popa
sub
ret
push
popa
(bad)
icebp
je
sti
and
out
loope
aad
jmp
push
mov
mov
stos
inc
arpl
iret
cmp
mov
ret
in
(bad)
or
out
pop
sbb
pop
cmp
inc
dec
jb
inc
ja
arpl
xor
pop
and
packuswb
push
pop
jp
fistp
inc
mov
add
shl
sub
fld
cmp
inc
mov
pop
pop
inc
arpl
jns
sbb
outs
inc
or
les
aas
mov
pop
popa
arpl
inc
scas
inc
stos
lods
outs
cmp
test
jae
jae
add
nop
sti
and
enter
mov
pusha
mov
adc
inc
inc
add
mov
out
(bad)
add
jle
or
shl
dec
mov
push
fild
sub
outs
adc
cmp
mov
(bad)
jns
jmp
mov
jo
out
xlat
in
xchg
jb
push
scas
push
cmp
add
js
(bad)
cmovae
jo
scas
adc
pusha
xor
push
mov
or
pop
rcl
inc
sbb
inc
stos
daa
dec
adc
arpl
inc
mov
adc
sub
sbb
add
mov
pop
mov
mov
push
mov
cdq
mov
dec
jne
inc
mov
or
xor
or
dec
dec
xchg
mov
daa
daa
add
dec
mov
adc
jno
loop
jne
or
jecxz
fistp
and
jne
adc
inc
ins
push
jo
jno
and
stos
pop
test
mov
jge
js
jae
adc
mov
aam
mov
adc
fld
push
mov
push
mov
fadd
addr16
jcxz
std
mov
or
sbb
ins
add
mov
test
jl
xchg
dec
cmp
add
adc
push
aaa
mov
movntq
ret
adc
ficomp
dec
inc
pop
adc
jo
pop
push
dec
ja
rcr
or
daa
inc
xchg
mov
imul
cmp
or
dec
and
scas
mov
push
inc
retf
inc
xor
and
test
and
sub
je
fwait
mov
mov
or
push
cmp
out
jg
(bad)
call
cmp
push
pop
rol
sub
pop
stos
fwait
fwait
xchg
fist
and
xchg
mov
ret
bound
mov
sbb
xchg
add
sbb
push
iret
(bad)
loopne
jne
outs
ja
dec
loopne
loopne
xor
cmps
jns
push
ja
or
(bad)
das
pop
mov
sub
rep
call
add
fs
out
push
out
jge
ds
or
add
mov
(bad)
jnp
pop
rcl
addr16
jae
cmp
xchg
out
and
jge
nop
out
sub
lock
pop
(bad)
bound
mov
push
fisttp
cs
das
mov
shl
mov
lock
or
push
sbb
cmp
mov
jb
es
arpl
adc
xor
add
popa
add
mov
inc
or
pop
push
push
sub
je
imul
inc
stos
push
popa
dec
xor
pop
add
add
push
jb
mov
(bad)
(bad)
lahf
adc
fs
and
push
iret
jmp
sub
push
ins
sbb
add
or
lods
cmp
mov
fild
mov
xchg
xlat
push
push
push
pop
xchg
aad
test
or
imul
neg
es
sub
ret
jae
jmp
xlat
imul
add
shr
inc
jae
jp
push
pop
xchg
push
push
daa
div
xlat
rcl
push
push
adc
bound
sti
dec
sbb
push
add
and
jmp
shl
mov
popa
mov
dec
xor
adc
nop
xchg
arpl
dec
xchg
mov
add
push
cmps
iret
ins
jmp
push
pop
les
adc
fild
jnp
xchg
mov
add
ror
add
sub
pop
pop
scas
arpl
add
fwait
test
push
dec
jne
push
inc
jns
adc
push
lods
pop
push
repz
push
scas
mov
adc
mov
sub
imul
sti
ins
add
xchg
inc
jae
add
loopne
lahf
mov
pop
cmp
das
xlat
xchg
cs
xor
push
pop
(bad)
push
pop
outs
dec
xor
adc
sbb
movs
scas
lds
inc
(bad)
sbb
push
add
push
jae
daa
daa
stos
arpl
iret
xor
pop
or
sbb
emms
add
scas
inc
mov
test
adc
js
scas
mov
xchg
or
pop
in
sub
in
retf
stos
pop
mov
dec
dec
pop
test
mov
jl
push
stos
mov
out
ror
fidivr
aaa
imul
scas
retf
mov
adc
sub
xchg
push
aaa
lods
outs
loopne
mov
arpl
xchg
adc
dec
inc
(bad)
sbb
cmps
inc
xor
test
dec
mov
sbb
outs
outs
mov
mov
fisttp
xor
ret
ins
outs
imul
pusha
shr
xor
sbb
pop
push
(bad)
mov
ss
pop
push
ins
popf
ficom
pop
adc
jmp
arpl
cmp
inc
das
nop
mov
jg
sub
pop
ret
jo
xchg
test
push
push
test
scas
pop
xor
jbe
mov
xor
add
jbe
stos
aad
repz
ret
mov
test
ret
sar
pop
cmps
inc
and
pusha
pop
adc
lds
mov
jns
js
pop
mov
jo
dec
and
pop
and
fcomip
and
inc
ror
mov
gs
push
imul
lods
pusha
push
sub
and
ffreep
mov
mov
pop
imul
adc
jmp
adc
sub
add
inc
imul
push
inc
inc
outs
mov
jmp
les
stos
sbb
scas
and
pop
or
test
bound
pusha
sub
push
ja
add
sub
bound
mov
or
sub
sbb
sbb
jbe
sbb
imul
pop
mov
and
adc
addr16
adc
push
dec
add
push
repnz
sub
loopne
sbb
imul
outs
call
adc
lods
mov
dec
jae
arpl
imul
push
cmp
lahf
fidivr
pop
adc
cwde
stos
adc
outs
ins
inc
sbb
adc
popa
lahf
adc
ret
addr16
sbb
and
xchg
adc
repz
les
mov
aad
in
stos
daa
jg
push
inc
inc
dec
movs
xchg
pop
shl
add
dec
stos
arpl
dec
stos
add
sub
(bad)
(bad)
stos
mov
xor
data16
arpl
mov
jp
or
cmps
sub
sub
pop
mov
push
ret
jg
xlat
pop
mov
bound
mov
pop
xchg
shr
pop
shr
aas
fcmovnb
rcl
mov
cmp
sub
xor
js
repz
stos
or
or
ins
inc
and
sub
repz
push
xchg
imul
mov
lods
or
cmp
xor
daa
mov
test
cmps
push
jmp
xor
les
push
mov
lods
add
xchg
push
call
inc
movs
add
stos
jns
ret
div
push
imul
push
aas
push
fcmovb
sbb
push
inc
fisttp
push
enter
arpl
mov
daa
jnp
pop
xchg
mov
xchg
outs
daa
or
ret
aas
iret
inc
mov
(bad)
lahf
lods
xchg
push
jno
sti
sbb
(bad)
mov
xlat
popa
add
xor
push
inc
test
outs
dec
inc
ret
pop
inc
pop
jecxz
mov
push
cmp
cmp
out
inc
add
inc
les
push
add
cmp
fadd
bound
add
test
fcomp
shl
ins
xchg
inc
xchg
popa
test
pop
or
(bad)
push
out
pop
pop
cwde
mov
jbe
pop
or
inc
or
and
out
rcl
pop
dec
push
adc
fst
inc
sbb
mov
ret
pop
inc
in
rol
ret
adc
ds
add
push
xor
xor
bound
cmp
idiv
ret
ins
dec
pop
fwait
and
adc
pop
jbe
add
jmp
inc
or
mov
and
add
ins
xor
sbb
lahf
mov
sub
test
inc
jmp
fninit
mov
stos
add
add
mov
mov
fwait
mov
fsubr
in
mov
mov
jb
mov
cmps
pop
mov
loope
mov
retf
dec
mov
push
jbe
js
jbe
mov
mov
pop
scas
push
push
mov
lea
push
test
sub
(bad)
or
addr16
fiadd
sbb
popa
pop
lds
sbb
mov
mov
push
pop
les
cwde
sub
mov
push
xchg
por
cmp
inc
cmps
data16
inc
mov
push
lds
xor
adc
cmp
pop
lea
sub
movs
mov
ins
add
dec
xchg
xchg
loopne
jne
lahf
jnp
jo
pop
fld
cmp
(bad)
adc
popf
ret
scas
das
arpl
mov
inc
cmp
arpl
fild
ins
imul
rcr
cmps
cs
pop
jg
sbb
push
pop
sbb
mov
test
arpl
mov
mov
pop
sbb
arpl
sbb
imul
inc
das
adc
pop
mov
cli
mov
mov
add
sub
test
out
ret
jecxz
or
(bad)
repnz
test
aaa
cli
jae
cmp
add
mov
mov
pop
xchg
jo
pop
adc
sti
xor
xchg
fwait
mov
jb
add
cmps
dec
pushf
les
cmp
cwde
popw
and
or
les
daa
jae
mov
add
add
push
adc
inc
retf
addr16
pop
cmps
push
sbb
xchg
push
mov
shl
jg
sbb
and
ss
ds
xor
push
dec
mov
pusha
push
arpl
push
add
mov
add
pop
add
and
jns
shl
loopne
sbb
or
daa
jp
cwde
cmp
push
fadd
adc
aam
lea
popa
adc
cmps
scas
jne
pop
and
inc
jg
test
(bad)
fisttp
ret
mov
pop
fwait
cmp
imul
repz
pop
movs
sbb
sub
inc
outs
mov
imul
test
mov
and
ja
adc
push
adc
sbb
loop
rol
push
imul
lods
push
jne
mov
add
or
adc
dec
sbb
sbb
div
inc
jp
pop
loope
xor
and
dec
cmps
push
and
retf
mov
adc
cmp
aas
push
adc
es
xchg
cmps
lea
rcl
dec
adc
or
jno
or
outs
push
jo
adc
xor
inc
inc
(bad)
sbb
fild
push
and
adc
add
jb
sub
fcmovbe
xor
sbb
push
cld
inc
push
dec
sub
pop
xchg
loope
and
mov
xor
(bad)
adc
mov
movs
pushw
test
jb
mov
cs
fisub
popf
ja
fwait
sti
dec
xchg
popf
push
pusha
lahf
sub
inc
ins
and
adc
jge
cmps
cld
sub
mov
sahf
in
add
dec
aas
push
gs
push
loop
call
jno
ret
push
inc
ret
adc
add
les
stos
mov
ds
push
js
adc
xchg
(bad)
out
xchg
pushf
inc
fisttp
sub
cmp
jecxz
and
add
test
push
sub
imul
pop
mov
pusha
retf
inc
or
js
mov
outs
adc
push
push
inc
dec
adc
mov
xchg
adc
add
pop
or
jne
nop
rcl
adc
sbb
jl
push
xchg
sbb
sub
ret
xchg
adc
sub
add
cmp
xor
inc
push
test
lds
rol
out
sbb
push
jbe
aam
cld
addr16
dec
(bad)
(bad)
pop
inc
bound
cmp
xor
adc
adc
das
push
aad
int3
xchg
cmp
loopne
retf
sub
hlt
dec
lahf
pop
inc
push
and
inc
ja
int3
inc
mov
adc
in
dec
pop
sbb
add
adc
gs
sub
aad
in
mov
adc
mov
push
in
ins
and
(bad)
ficom
arpl
ins
xor
inc
push
add
lods
and
les
dec
sbb
mov
ins
cmp
iret
xchg
mov
scas
and
add
dec
dec
dec
dec
movs
sub
sub
or
sub
dec
push
pop
sbb
stc
imul
mov
xchg
ret
jmp
jmp
jp
xlat
mov
push
rcl
sbb
xchg
sub
add
xchg
xor
and
bound
xor
lea
dec
cdq
dec
jae
into
inc
xchg
adc
sub
mov
and
adc
int
dec
dec
cli
adc
cmp
mov
and
rcl
js
cwde
xchg
inc
sub
icebp
ins
sbb
aaa
fdiv
sub
mov
inc
dec
cmps
jns
add
push
sbb
inc
push
cmc
dec
dec
inc
inc
adc
(bad)
cmp
push
retf
xor
push
xor
push
xchg
cli
call
sbb
jo
sub
pop
dec
or
out
push
push
pop
(bad)
and
call
or
test
add
push
mov
sbb
pusha
call
fiadd
sbb
xor
rcl
inc
dec
push
and
sbb
mov
nop
add
push
clc
loope
test
adc
ret
inc
or
sbb
mov
es
loope
mov
push
add
cwde
inc
scas
mov
pop
adc
mov
les
jb
add
mov
js
dec
jae
pushf
cmps
mov
inc
shl
push
sahf
out
ins
or
or
data16
scas
int
adc
sahf
lds
or
add
add
and
rol
add
or
es
fsub
xor
push
addr16
outs
xchg
mov
fwait
enter
sbb
icebp
add
cmps
add
iret
mov
add
or
(bad)
sar
or
cmp
inc
daa
movs
or
comiss
cmp
pop
mov
xor
fidiv
sbb
or
jg
ins
loop
arpl
(bad)
mov
pop
adc
ins
bound
pop
xor
mov
xor
les
cmps
mov
call
or
mov
add
jno
xchg
fisttp
add
mov
inc
ss
pop
mov
lahf
loope
ins
dec
pop
xchg
ins
sbb
pop
fmul
pusha
lds
inc
dec
sbb
jb
mov
loope
or
or
add
fist
iret
or
pusha
push
sbb
mov
enter
cmp
cmp
push
mov
add
sub
jl
cdq
cwde
jg
push
adc
mov
lea
push
(bad)
sub
jno
and
adc
pusha
shl
fwait
mov
add
cmp
xor
and
adc
xor
les
out
add
adc
das
and
and
add
add
scas
and
add
mov
or
or
shl
add
mov
add
mov
test
push
neg
jmp
pusha
aas
xor
add
adc
enter
dec
fmul
popf
pop
call
mov
jb
cdq
add
je
xor
sbb
xchg
mov
push
xchg
pop
hlt
(bad)
cmp
dec
dec
shl
test
mov
or
and
mov
push
or
daa
xor
jecxz
cmp
cmps
stos
add
and
cmp
cmp
movs
mov
jo
cmp
jmp
inc
fild
add
pop
mov
adc
dec
stos
nop
es
pop
sbb
or
inc
pop
xchg
(bad)
loopne
xchg
pop
sub
inc
aad
sub
or
pop
ja
xchg
dec
ret
xchg
inc
pop
xor
xor
and
dec
loopne
mov
loope
mov
call
adc
xor
add
jecxz
nop
adc
add
xor
lahf
es
xchg
mov
mov
daa
cmp
arpl
push
nop
and
sbb
jmp
imul
inc
imul
or
push
int
and
or
xchg
xchg
arpl
cmps
mov
fisttp
outs
xor
frstor
loop
mov
inc
in
mov
jae
pop
leave
jne
adc
pop
bound
push
sbb
and
mov
xor
jg
and
dec
sbb
sbb
jno
or
push
lahf
mov
cmp
cmp
shl
inc
mov
pop
loop
mov
or
inc
sbb
add
and
arpl
add
jmp
add
add
imul
push
shld
gs
push
outs
fst
mov
out
mov
or
mov
dec
ss
xchg
pop
cmp
xor
sbb
adc
xor
adc
jae
out
dec
xchg
lds
dec
and
sub
sub
daa
or
xchg
add
mov
imul
push
lea
xor
cmp
aas
(bad)
push
mov
in
pusha
add
fld
jne
pop
mov
fstp
shl
push
in
add
les
es
adc
fimul
sbb
cmc
aam
xchg
pop
(bad)
mov
loopne
pop
popa
xchg
pop
pop
call
shr
and
movs
sub
push
ror
mov
push
(bad)
in
(bad)
ffree
or
aad
jmp
cmps
mov
add
xor
wrmsr
adc
xor
adc
xor
and
xor
push
and
lea
js
call
cmp
xchg
stos
imul
sub
addr16
sbb
sbb
inc
xor
and
and
and
and
and
add
sbb
nop
mov
ins
imul
pop
jg
cmps
mov
icebp
inc
arpl
test
or
or
xor
movs
push
add
jbe
adc
in
std
rol
in
fistp
push
mov
mov
fild
xchg
pop
clc
lea
repnz
pop
cdq
mov
add
pusha
or
pop
and
sub
xor
and
rol
adc
xor
test
int3
mov
popa
sub
aaa
dec
mov
inc
aaa
cmp
dec
and
xor
rol
(bad)
cmp
xor
add
pop
xchg
pop
and
xor
add
and
mov
inc
or
movs
pop
inc
icebp
push
cmp
or
arpl
push
cmp
das
mov
xor
lea
mov
push
xor
xor
sub
xchg
cmp
popa
imul
ins
mov
add
jle
loope
and
mov
ja
mov
sub
std
add
xchg
xor
sbb
scas
test
and
inc
and
test
push
ror
cpuid
push
test
inc
(bad)
stc
add
mov
(bad)
popa
mov
(bad)
xor
movs
add
push
push
sub
in
or
add
or
jno
add
cmps
nop
daa
pop
xchg
adc
test
lods
ss
ror
xchg
add
shl
(bad)
push
aas
and
cmp
add
or
add
adc
popa
imul
pop
pushf
and
mov
mov
push
push
jae
mov
dec
pop
add
inc
loop
loopne
push
add
iret
adc
rcl
dec
add
les
xchg
sbb
pop
adc
add
in
outs
xor
in
push
ret
pop
or
sbb
test
sbb
pusha
retf
add
push
pop
sbb
call
push
cmc
adc
and
sub
bound
(bad)
sub
add
imul
jnp
push
pop
push
fistp
push
in
(bad)
pop
sbb
sub
adc
cmp
mov
sti
fld
pop
add
in
fisttp
mov
lea
pop
push
push
push
sub
lea
jp
pop
das
add
pusha
xor
push
mov
sti
or
pop
push
in
sbb
mov
inc
and
or
cmps
jmp
dec
(bad)
std
push
xor
pop
adc
test
addr16
ins
mov
lock
push
dec
dec
push
fisttp
out
fisttp
dec
mov
bound
push
sub
inc
test
cmps
(bad)
or
stos
(bad)
in
int
out
jg
push
mov
jae
mul
push
or
aaa
addr16
nop
pop
push
bound
sbb
fcmovnu
inc
cli
pop
scas
mov
jns
push
push
push
inc
xor
push
fbld
or
sbb
jge
bound
push
jne
mov
fnstsw
jne
push
inc
push
daa
das
push
xor
sub
popf
je
jge
ins
jmp
loopne
cmp
(bad)
in
dec
retf
movs
xlat
in
mov
(bad)
xchg
or
test
test
outs
pusha
mov
push
outs
jo
mov
inc
jge
(bad)
pop
jge
or
iret
push
rcl
fdiv
push
int3
jno
fwait
or
je
es
xor
jnp
push
cmp
sbb
(bad)
in
add
push
cmp
test
and
clc
jbe
pop
and
mov
(bad)
and
push
add
cmp
fs
jno
int
mov
(bad)
jg
nop
jmp
add
push
xchg
mov
jns
(bad)
pop
mov
mov
or
pop
mov
inc
add
in
cmp
mov
movs
add
inc
inc
dec
add
or
and
lods
add
add
ret
sbb
add
cdq
es
or
push
jae
add
and
cmp
mov
adc
inc
adc
add
push
mov
or
inc
leave
rcl
xchg
leave
inc
pusha
cmps
or
xor
add
cs
xor
pop
das
or
sbb
mov
ja
fwait
adc
push
or
ret
push
push
cmp
or
and
and
cmp
push
mov
push
push
push
add
push
or
push
scas
inc
int
pop
push
cs
and
adc
push
inc
push
pop
or
jo
dec
add
lahf
in
jle
inc
adc
inc
dec
ss
inc
xchg
loope
sub
inc
enter
and
xor
adc
add
ror
xor
inc
add
xor
pop
add
out
dec
sub
xchg
mov
and
sysret
or
fiadd
mov
das
pop
test
xor
test
inc
sbb
push
pop
out
leave
sbb
pop
inc
push
out
scas
and
adc
dec
add
pop
adc
xlat
add
add
test
mov
test
xor
mov
mov
setns
jg
es
shl
pop
shl
adc
sbb
and
xor
pop
xchg
inc
push
stc
sahf
mov
push
add
addr16
sbb
push
adc
or
xchg
adc
push
dec
ja
or
pushf
jg
mov
vpandn
pop
ss
mov
adc
mov
pop
mov
xchg
je
or
and
(bad)
fisubr
(bad)
xchg
xchg
or
xor
or
inc
pop
xor
or
pop
imul
mov
jmp
adc
inc
jge
imul
xor
test
(bad)
inc
add
(bad)
pop
outs
sub
ret
add
xor
add
ss
push
pop
pop
movs
push
aam
pop
cs
push
inc
ds
jne
dec
add
add
sub
cmp
pop
pop
jb
comiss
aas
mov
dec
inc
(bad)
clc
ficom
iret
pmulhuw
enter
fsub
ins
nop
or
mov
(bad)
paddsb
xor
(bad)
icebp
pop
push
repnz
add
pop
fisub
(bad)
das
cld
pop
push
cld
aas
es
pop
mov
ins
sar
(bad)
icebp
scas
lock
wbinvd
test
ret
and
jmp
mov
xor
pop
xchg
mov
popa
dec
test
add
rcl
push
ins
pusha
add
or
or
fs
or
nop
push
test
shr
shr
add
push
outs
pop
repz
push
xor
or
test
data16
pop
or
movups
push
add
and
inc
fcomip
dec
mov
push
sub
clc
dec
pusha
fisttp
cdq
or
dec
inc
inc
adc
add
test
rol
(bad)
(bad)
jmp
mov
fdiv
call
lds
outs
add
push
rcl
xor
add
push
mov
mov
adc
lods
mov
push
mov
les
ret
ins
jbe
ret
or
pop
rcl
pop
add
test
popa
xor
adc
mov
adc
or
and
test
xor
lods
pop
sub
dec
dec
or
pop
or
mov
pop
ret
pop
pop
push
mov
rcr
pop
dec
inc
or
mov
imul
jo
loop
pop
jb
mov
add
pop
ficomp
retf
add
add
jb
adc
sbb
arpl
or
outs
rol
mov
int3
and
sbb
xchg
adc
sbb
mov
add
add
push
jo
or
and
inc
xor
(bad)
dec
movs
out
pop
clc
jg
cld
bndldx
pop
in
ja
lock
psllw
add
dec
xlat
push
(bad)
loope
mov
int
mov
push
cmp
cmp
cld
jo
pop
xor
fwait
pop
clc
loopne
push
jl
jbe
xor
xchg
jl
add
add
pinsrw
or
in
mov
cwde
ret
xchg
scas
clc
mov
mov
cmp
test
mov
adc
cmp
or
mov
add
dec
mov
lahf
loope
jp
(bad)
(bad)
out
push
enter
mov
push
xchg
(bad)
aam
push
ret
mov
push
leave
mov
inc
into
mov
fwait
add
mov
fdivr
xchg
push
mov
push
rol
add
ret
movs
shl
rol
stos
push
(bad)
mov
mov
loop
add
popf
mov
adc
add
mov
pop
sbb
adc
dec
mov
cmp
add
cmp
stos
inc
or
aas
ins
rol
add
adc
adc
jnp
nop
outs
ins
cmp
push
push
sbb
or
test
js
cmp
aas
mov
ror
aas
push
inc
or
or
mov
pop
xor
add
mov
add
add
mov
dec
ins
aas
in
xor
adc
add
sbb
in
xchg
xcrypt-ecb
cmps
or
and
cmps
mov
add
pop
xor
ins
or
rol
jecxz
inc
std
push
push
or
(bad)
pusha
push
aas
cld
rol
stc
add
fldcw
(bad)
out
arpl
xor
sbb
ins
sub
(bad)
cmp
sti
iret
push
jecxz
bound
stos
fcomp
sti
(bad)
mov
test
dec
adc
add
ds
mov
mov
jmp
int3
mov
cdq
ffreep
or
leave
ret
movs
push
ret
cmps
add
fcmovnu
test
out
aad
scas
add
shr
add
out
sbb
mov
push
or
or
push
adc
pop
lods
ins
add
sbb
adc
sbb
and
and
scas
sub
ss
jo
inc
add
or
add
nop
or
fistp
xchg
add
sub
clc
sbb
xchg
loope
pop
fild
mov
add
repz
mov
or
fcom
shl
mov
outs
(bad)
icebp
lods
inc
jo
jge
add
gs
and
cld
push
call
and
add
inc
pusha
stos
in
inc
xchg
and
push
ja
xor
outs
xchg
or
mov
add
inc
out
cli
out
push
and
test
mov
add
jb
inc
jbe
in
inc
xchg
test
xchg
sub
adc
xchg
int
inc
add
push
and
add
cld
aad
sub
test
emms
inc
mov
add
ja
and
inc
xchg
and
ja
adc
inc
or
ss
pop
inc
jmp
sbb
xchg
mov
inc
dec
fiadd
jg
pop
adc
aaa
jno
fst
aas
daa
add
or
jg
js
or
adc
inc
rcl
mov
inc
xchg
mov
dec
push
adc
mov
adc
adc
or
retf
and
jg
sbb
or
test
sub
mov
add
test
push
xor
mov
xlat
jg
test
test
sub
dec
test
arpl
das
xor
xor
shr
push
sub
test
add
push
cli
add
add
push
call
or
inc
xchg
inc
xchg
mov
add
mov
push
jg
and
ja
sub
add
mov
mov
(bad)
pop
clc
aas
mov
xchg
xchg
cld
pusha
push
loopne
add
shr
call
pusha
dec
lea
push
xor
sbb
outs
clc
xchg
adc
and
nop
cdq
cdq
fldenv
jl
add
push
pop
pop
sbb
dec
loope
xchg
sbb
nop
push
push
outs
out
add
push
adc
mov
movs
je
les
shl
lods
pushf
movs
jae
push
idiv
cmps
or
movs
jbe
mov
outs
push
xchg
cmp
movs
jne
push
retf
cli
ret
cmp
ret
mov
ds
lds
cmps
jno
inc
retf
stos
sar
shl
jno
out
fwait
ret
push
jne
push
test
cmp
stos
push
stos
sub
fisubr
dec
test
cmp
loope
pop
cli
jle
jae
mul
cld
ret
not
pusha
shl
mov
ror
seta
jmp
lds
mov
cmp
stos
push
icebp
test
dec
stos
push
mov
adc
pop
stc
push
stos
out
fwait
jo
xchg
cmp
rcl
fisub
dec
stos
xchg
pop
xor
xchg
cmpps
mov
sahf
sbb
clc
aaa
mov
call
inc
test
cmp
pop
push
dec
fild
xchg
fild
dec
push
push
sbb
xchg
les
icebp
movs
pop
ret
mov
cdq
sub
push
out
idiv
lods
mov
out
pop
push
cmovl
outs
mov
leave
jmp
fdivrp
mov
cmps
jae
push
test
adc
cmps
jae
add
(bad)
dec
adc
push
pop
sub
mov
cmp
sub
cmps
mov
dec
jmp
ja
pop
mov
test
repnz
sub
push
cmp
jo
in
lods
push
jge
imul
mov
(bad)
fstp
or
xchg
cmp
js
imul
push
and
inc
or
jmp
enter
cmps
imul
and
push
jno
adc
add
push
mov
call
in
or
(bad)
push
dec
sbb
adc
jmp
or
xor
push
pop
inc
leave
pop
jmp
stos
push
inc
cmps
adc
or
or
sub
add
pop
sub
pop
daa
jle
cmp
ds
or
mov
and
push
sbb
out
icebp
push
jle
lods
push
(bad)
and
and
aaa
xchg
mov
mov
call
popf
jno
xor
les
lods
pop
pop
call
cs
mov
jle
xchg
lea
push
imul
pop
cmp
dec
pop
xchg
and
mov
std
mov
jns
gs
cmp
(bad)
inc
cld
scas
mov
(bad)
call
mov
scas
push
loop
sbb
(bad)
jg
(bad)
xchg
cmp
movs
cmps
ja
loop
mov
movs
and
lahf
add
jmp
pop
xchg
jbe
mov
jp
jns
ja
in
add
push
sar
out
into
pop
jbe
ss
jns
movs
push
(bad)
sbb
add
jno
cmps
jbe
mov
push
and
outs
and
sbb
cmps
jl
mov
jle
aaa
adc
mov
je
das
jmp
loopne
cmps
rcr
cld
push
aas
lock
mov
lods
pop
enter
outs
add
mov
xchg
xlat
sub
fiadd
(bad)
jg
sbb
inc
add
pop
hlt
(bad)
aaa
sahf
test
lods
movs
js
lods
push
(bad)
mov
pop
fwait
jnp
sahf
pop
call
cmps
arpl
inc
test
test
cmp
mov
dec
jnp
(bad)
outs
ds
fnsave
test
push
test
mov
ss
xchg
push
test
sbb
xchg
pusha
xchg
fist
or
mov
push
test
ja
pop
daa
sbb
add
mov
fist
mov
das
jo
jl
das
pop
test
js
mul
stos
movs
inc
stos
pop
push
jg
lods
pop
mov
data16
stos
aaa
stos
pop
les
jg
(bad)
mov
(bad)
(bad)
cmp
push
lock
stos
pop
jg
lods
push
mov
leave
jg
lods
inc
push
mov
data16
cs
xchg
popa
inc
test
lock
jg
movs
jns
cmps
bound
push
loope
cs
xor
push
jno
mov
pop
lahf
pop
test
scas
adc
mov
cmps
test
cdq
pushw
push
cmp
push
lods
ror
neg
pop
push
mov
cmp
inc
pop
push
rol
sbb
jo
clc
movs
mov
mov
push
sub
jae
ss
test
jp
adc
mov
sbb
out
add
mov
and
add
jne
mov
lock
add
and
loop
mov
add
push
add
adc
test
xchg
mov
mov
(bad)
add
movs
mov
xor
test
mov
add
sar
push
mov
ret
push
retf
pop
push
push
xlat
add
nop
pop
in
je
and
or
mov
adc
pop
dec
lods
rol
mov
sbb
mov
sbb
pop
jmp
(bad)
loope
jg
xor
sub
out
lea
inc
dec
and
jb
push
push
jg
fbld
cmps
xchg
nop
xor
frstor
push
nop
and
sbb
xchg
(bad)
gs
jae
lock
retf
and
or
dec
dec
cs
add
sub
or
xor
inc
stos
lods
add
shl
lahf
inc
shr
inc
push
push
inc
outs
xor
(bad)
leave
xor
std
test
push
pusha
mov
inc
adc
outs
js
pop
add
or
jg
pop
xor
add
or
dec
xchg
cmp
(bad)
or
(bad)
push
mov
add
pop
xor
push
xchg
add
outs
push
mov
mov
jno
mov
pop
imul
push
cmp
push
jb
add
and
pop
push
mov
cwde
mov
pop
pop
sbb
sub
push
push
cs
imul
jo
shl
inc
loopne
pop
mul
jns
adc
gs
sub
adc
and
shr
gs
jns
push
outs
sbb
cmp
retf
add
outs
inc
movs
adc
cmc
push
gs
sub
jecxz
sti
cs
jb
jg
or
daa
fadd
cmp
mov
sbb
and
or
sbb
jno
sbb
push
and
gs
add
mov
je
mov
gs
push
outs
add
js
mov
or
sbb
add
dec
inc
pop
sub
mov
jbe
xchg
xor
sbb
pop
rcl
mov
xor
arpl
imul
mov
dec
mov
dec
inc
jo
cwde
sti
push
adc
and
fs
gs
jbe
inc
inc
icebp
sbb
mov
jecxz
inc
dec
jmp
sub
and
mov
inc
adc
sbb
mov
loope
and
and
fld
fimul
add
and
loope
cmc
sbb
push
dec
inc
mov
mov
xchg
cdq
pop
mov
xchg
jo
sub
adc
mov
xchg
pop
ret
mov
xchg
data16
mov
(bad)
ja
outs
adc
mov
inc
mov
inc
in
cmps
imul
inc
fld
sar
inc
imul
sub
and
mov
push
adc
mov
int
push
push
stc
fwait
and
pop
pop
gs
or
push
sub
rcl
(bad)
adc
push
mov
adc
push
popf
sbb
sbb
mov
xchg
cmp
sbb
sbb
pop
lds
push
ror
pop
and
sbb
(bad)
ror
call
inc
sub
test
adc
dec
outs
imul
sbb
dec
fldenv
and
inc
and
js
jo
dec
jnp
xor
dec
mov
inc
test
push
jmp
jae
sub
xor
sbb
jmp
add
stos
loope
movs
and
lea
dec
(bad)
sbb
inc
popf
aas
or
aas
xor
pop
push
sub
in
not
clc
mov
push
xchg
cld
sub
add
daa
test
and
popf
loopne
adc
add
and
pop
cwde
lock
mov
adc
or
sub
test
add
stc
cmp
and
shl
sbb
xchg
and
sbb
clc
mov
outs
push
shl
push
(bad)
pop
adc
adc
stos
rcr
inc
imul
mov
fcmovb
cmp
mov
xor
nop
pop
mov
mov
mov
push
inc
inc
pop
jae
lea
out
push
sbb
(bad)
adc
inc
mov
inc
sbb
adc
push
sub
stos
mov
shl
mov
push
je
dec
jo
arpl
lds
inc
sub
out
cld
ins
push
sub
inc
sub
push
xchg
daa
dec
(bad)
scas
das
adc
sub
ret
push
sub
push
test
sub
inc
aad
inc
mov
pusha
cmp
dec
sub
cmps
xlat
xor
and
sub
mov
shl
nop
fiadd
or
pop
pusha
into
mov
sub
loopne
fist
sub
mov
in
retf
push
bound
fsubr
(bad)
dec
mov
nop
add
out
sub
popf
adc
fisub
mov
imul
mov
lahf
mov
mov
packuswb
sahf
cmp
scas
sar
gs
inc
ins
pop
add
push
sub
mov
and
and
and
ins
pop
pop
ficom
in
sbb
mov
ss
or
xor
dec
dec
out
jge
xchg
jbe
shr
(bad)
out
jecxz
add
push
out
retf
mov
dec
inc
movs
enter
dec
inc
aaa
jmp
aad
adc
sub
or
arpl
ficomp
ins
ins
sbb
pop
outs
cld
mov
inc
retf
je
sub
mov
ds
xor
or
not
loope
jns
outs
adc
jns
xchg
rol
xlat
pop
push
and
sub
jae
loop
or
inc
mov
inc
es
in
int3
inc
and
add
sub
(bad)
mov
xor
loope
movs
add
ret
mov
jge
arpl
pop
dec
ror
push
cmp
fidiv
sub
jbe
jmp
inc
push
sbb
inc
(bad)
pop
and
pop
dec
arpl
jge
pop
(bad)
(bad)
inc
outs
pop
mov
les
inc
daa
js
pop
cmps
add
push
push
adc
adc
add
mov
mov
dec
or
push
jbe
lods
and
aad
call
xor
and
es
inc
ins
add
(bad)
(bad)
(bad)
popa
adc
xor
and
ins
mov
xchg
jle
xchg
push
or
adc
xor
ret
sbb
dec
add
cmp
pop
fs
popf
and
add
mov
mov
test
call
pop
add
cmp
dec
adc
adc
out
push
add
xor
push
and
lahf
sbb
dec
pusha
adc
xchg
ror
in
sbb
fisub
xor
pop
ins
(bad)
(bad)
pop
ins
(bad)
loopne
push
dec
and
or
xor
pop
mov
inc
push
pushf
mov
fst
imul
push
push
loop
add
jne
ins
scas
mov
and
sub
bound
(bad)
daa
dec
and
ror
xchg
and
and
xor
xor
sbb
cwde
sub
dec
pop
aas
aaa
mov
mov
bound
imul
in
cmp
sbb
fs
sub
sub
and
dec
mov
fs
div
in
xchg
scas
aam
out
dec
sbb
outs
ror
js
das
adc
add
xor
push
and
rol
aad
jne
lahf
or
jae
adc
int
in
ret
lea
push
fisub
in
les
popa
adc
arpl
push
cmp
sub
adc
sbb
mov
or
rcr
mov
or
push
pop
adc
or
add
pop
sbb
daa
cmp
jnp
out
arpl
mov
adc
test
mov
sbb
sub
pop
jo
inc
leave
or
aam
mov
out
lahf
(bad)
movs
and
mov
or
out
xor
sub
adc
adc
movs
push
jnp
mov
cmp
mov
mov
lea
pop
mov
adc
cmp
shr
pop
bound
xchg
xchg
cmp
xor
sub
(bad)
push
jne
and
shl
je
sbb
aaa
div
aad
xor
int3
mov
(bad)
dec
nop
les
clc
mov
dec
dec
jae
mov
stos
inc
sbb
pop
adc
imul
retf
mov
jle
sbb
aad
pusha
rol
mov
mov
outs
adc
mov
ins
pop
mov
rcr
adc
and
fs
inc
adc
enter
or
loope
arpl
rcl
add
push
das
cdq
push
fsub
jbe
sub
jb
jae
sbb
test
mov
push
pop
sbb
jecxz
push
jmp
stc
stos
push
mov
lods
aaa
pop
jno
xor
pop
enter
sbb
jbe
jnp
mov
inc
das
lods
imul
sbb
push
and
jne
push
in
ficom
inc
inc
dec
mov
inc
inc
sbb
adc
call
jbe
push
pop
retf
ins
pop
(bad)
(bad)
mov
mov
jno
ins
sbb
inc
sbb
pop
add
or
cmp
fsubr
and
mov
fwait
or
push
(bad)
iret
or
inc
adc
sbb
pop
popa
lds
mov
mov
xchg
sbb
xor
pop
in
xor
sbb
nop
and
xor
leave
jmp
shl
mov
sbb
bound
out
sbb
sub
inc
ins
inc
repnz
xchg
inc
sbb
and
jmp
fcomp
adc
aad
add
push
mov
dec
push
adc
mov
sbb
mov
adc
(bad)
mov
outs
xchg
fldcw
imul
lea
dec
fs
jb
pop
dec
data16
mov
mov
mov
mov
and
gs
and
jmp
jmp
rdmsr
(bad)
push
xchg
xchg
(bad)
inc
repnz
and
xlat
sbb
inc
js
inc
adc
adc
sub
aaa
mov
adc
cld
loope
mov
mov
and
inc
sbb
dec
mov
mov
shl
cmps
push
scas
inc
add
jle
nop
push
loope
mov
or
call
or
or
sbb
fcom
push
shl
adc
adc
xchg
xor
sub
dec
mov
test
stos
add
outs
adc
push
dec
mov
sbb
sub
loopne
pop
or
add
add
push
jno
loope
sahf
ror
pop
xor
pop
int3
mov
sbb
jnp
mov
adc
mov
adc
repz
nop
dec
popa
fwait
or
loope
sub
shl
dec
inc
inc
scas
push
scas
xlat
ror
cmp
push
inc
ror
push
push
mov
mov
xor
push
pop
jge
shl
sub
add
out
shl
cs
out
dec
sub
(bad)
cs
xchg
sub
xor
sub
sbb
add
mov
xchg
xchg
or
out
add
xor
dec
pop
popa
(bad)
imul
daa
sbb
dec
imul
inc
xor
dec
xchg
inc
add
add
add
inc
xchg
fidivr
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lock
add
push
add
