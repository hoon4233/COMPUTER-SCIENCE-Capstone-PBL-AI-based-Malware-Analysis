mov
add
add
add
add
add
add
push
add
jae
add
or
add
adc
add
jne
add
add
add
and
add
add
and
add
add
add
sub
add
cli
add
add
and
add
add
add
xor
add
and
add
and
nop
jb
pop
popa
and
add
add
push
add
add
add
add
(bad)
(bad)
jmp
adc
sbb
add
push
and
and
sub
sub
add
push
sub
add
adc
pop
add
add
adc
dec
add
mov
sub
ror
add
add
add
add
or
loope
and
push
push
pop
inc
or
add
retf
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
xor
add
pop
je
add
add
push
add
add
pop
lea
add
add
add
add
add
add
push
ror
add
add
add
adc
sub
add
push
or
push
and
neg
ins
adc
inc
popa
sub
add
adc
and
cdq
repz
pop
and
out
retf
push
(bad)
call
push
add
add
jae
add
or
or
add
or
test
dec
(bad)
(bad)
dec
je
add
add
jae
and
call
adc
and
popa
cmp
(bad)
(bad)
dec
jne
add
add
sub
add
or
add
adc
or
push
and
js
mov
and
adc
fisub
(bad)
(bad)
(bad)
jmp
cmps
mov
sti
sub
add
sub
je
add
add
lea
add
add
add
add
sbb
push
jne
add
add
sbb
add
add
sub
add
push
mov
add
sbb
or
add
sub
add
push
sub
jl
and
pop
bound
adc
and
lods
cmps
inc
pop
popa
cmp
add
add
xor
add
add
add
add
add
add
add
push
je
add
add
ds
sbb
push
jl
and
inc
or
add
in
add
add
add
add
add
add
add
rol
add
xchg
add
add
add
add
add
add
add
mov
add
add
adc
jne
add
add
push
add
push
sub
aaa
sub
xchg
icebp
jns
sub
push
sub
stos
push
and
cmp
and
call
sbb
add
and
mov
xor
jno
(bad)
call
push
add
add
jae
add
or
push
add
push
or
and
mov
mov
cmp
(bad)
inc
je
add
add
adc
add
sub
add
push
pop
and
mov
or
mov
(bad)
(bad)
jmp
adc
add
sub
and
ds
sub
and
es
and
cmp
pop
popa
cmp
(bad)
(bad)
call
pop
add
push
pop
and
in
(bad)
leave
pop
and
cmp
(bad)
(bad)
jmp
hlt
add
add
adc
add
pop
and
adc
dec
pop
and
adc
(bad)
call
adc
je
sbb
cmp
(bad)
(bad)
inc
je
add
add
sub
add
push
pop
and
enter
and
cmp
add
(bad)
inc
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
adc
add
add
add
add
add
add
xor
adc
add
add
add
add
and
add
and
add
add
push
add
sub
add
adc
add
add
add
adc
add
fld
add
and
pop
add
sub
add
xor
adc
add
add
add
add
and
add
add
sbb
add
sub
add
sub
add
adc
add
adc
add
add
add
add
mov
add
and
add
sub
add
add
xor
add
add
add
add
adc
jae
add
or
add
xor
adc
add
add
add
add
and
add
add
add
add
or
add
sub
add
xor
adc
add
add
add
add
and
add
and
add
add
or
add
sub
add
xor
add
add
add
add
adc
jae
add
or
add
xor
adc
add
add
add
add
and
rol
add
sub
add
sub
add
adc
add
adc
add
add
add
and
mov
jl
add
sub
xor
adc
add
add
add
add
and
add
add
adc
add
sub
add
sub
add
adc
add
adc
add
add
add
add
add
add
pusha
add
add
push
add
sub
add
adc
add
adc
add
add
add
and
add
and
add
sub
add
sub
xor
add
add
add
add
adc
dec
pop
cmp
jo
add
sub
add
xor
add
add
add
add
adc
and
add
add
aam
add
sub
add
sub
add
add
xor
add
add
add
add
adc
and
add
add
out
add
add
or
add
sub
add
adc
add
adc
add
add
add
add
mov
xchg
add
add
or
add
sub
add
adc
add
adc
add
add
add
add
enter
and
push
add
sub
add
adc
push
add
add
add
add
add
add
or
jae
add
push
or
(bad)
and
adc
pop
or
add
cmp
add
push
add
add
add
stos
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
jne
add
sbb
add
push
adc
and
aaa
aaa
imul
mov
xchg
adc
je
add
sbb
jae
add
or
pop
push
je
add
add
call
mov
add
sub
or
adc
and
and
mov
(bad)
(bad)
call
lea
add
add
or
sbb
retf
jbe
sub
popa
cmp
(bad)
(bad)
inc
je
add
add
je
add
add
pop
jne
add
add
or
outs
xor
add
adc
and
mov
mov
push
popa
cmp
(bad)
(bad)
call
or
mov
and
cmp
(bad)
(bad)
inc
jne
add
add
je
add
sbb
sbb
popa
add
add
pusha
add
add
push
add
sub
adc
and
and
adc
popa
cmp
(bad)
(bad)
dec
adc
add
pop
aas
pop
bound
adc
pop
adc
or
ja
add
xor
call
push
je
add
add
mov
mov
add
sub
add
sub
add
into
cmp
add
xor
and
hlt
xor
les
cmp
(bad)
dec
imul
and
jmp
pushf
repnz
dec
(bad)
(bad)
call
push
push
adc
or
cmp
and
into
sub
cmp
push
jne
add
sbb
add
add
xor
add
and
pop
and
and
add
add
add
or
adc
or
jo
fiadd
push
adc
fwait
es
cmp
ins
push
xor
and
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
mov
(bad)
(bad)
inc
add
add
add
add
add
mov
add
mov
add
add
add
sub
add
push
add
add
add
into
add
add
add
add
add
add
add
add
add
retf
add
pop
je
add
sbb
or
or
jge
pop
(bad)
(bad)
call
or
(bad)
cmc
jbe
pop
and
cmp
(bad)
call
pop
je
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
jne
add
sbb
or
pop
jne
add
sbb
or
add
pop
or
jne
add
sbb
or
pop
jne
add
sbb
or
add
pop
or
je
add
sbb
or
pop
jne
add
sbb
or
add
pop
or
and
(bad)
repnz
and
cmp
or
sbb
jno
and
arpl
(bad)
call
or
add
sbb
push
and
adc
pop
adc
adc
jne
add
sbb
push
and
adc
pop
sbb
adc
or
and
inc
xchg
popa
cmp
(bad)
call
add
or
hlt
mov
and
inc
push
push
and
(bad)
call
pop
je
add
sbb
or
je
add
sbb
add
sahf
and
dec
addr16
xor
(bad)
call
pop
je
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
and
ds
sbb
ds
cmp
cmp
(bad)
call
or
adc
or
xor
retf
sub
and
dec
adc
es
std
(bad)
call
pop
jne
add
sbb
movups
je
add
sbb
setne
je
add
sbb
setne
push
adc
adc
ins
loopne
dec
pop
and
cmp
add
add
cmps
push
jle
and
inc
or
pushf
std
(bad)
call
pop
je
add
sbb
or
pop
je
add
sbb
or
or
add
pop
or
popa
sahf
adc
je
add
sbb
or
add
sbb
or
add
sbb
or
pop
jne
add
sbb
push
adc
je
add
sbb
push
xchg
or
add
pop
push
xchg
popa
sahf
adc
xchg
jp
fcomip
popa
cmp
std
(bad)
call
adc
and
aaa
sbb
and
(bad)
call
or
adc
or
fwait
xchg
sar
sub
and
cmc
pop
(bad)
cmp
std
(bad)
call
add
adc
or
stc
cli
rol
and
push
and
(bad)
call
pop
jne
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
je
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
cld
jp
mov
sbb
(bad)
(bad)
call
pop
jne
add
sbb
pop
je
add
sbb
add
sbb
popa
sahf
adc
or
pop
fstp
push
in
popa
cmp
(bad)
call
pop
jne
add
sbb
adc
jne
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
sub
pop
and
shl
dec
cld
(bad)
dec
or
or
popa
or
bound
and
xor
(bad)
call
or
add
sbb
push
and
adc
rcr
add
adc
and
adc
push
rcr
dec
in
and
cmp
sti
(bad)
dec
or
sbb
or
add
adc
sahf
adc
pop
adc
or
xor
rcr
cmc
sub
popa
cmp
sti
(bad)
call
adc
pop
adc
adc
push
sbb
lea
add
add
or
or
mov
jnp
pop
and
js
popa
cmp
jne
add
sbb
adc
jne
add
sbb
xchg
or
add
sbb
and
and
test
gs
cmp
(bad)
call
or
pop
adc
adc
cld
sub
out
xchg
fisub
pop
sti
(bad)
dec
je
add
sbb
or
and
add
or
adc
add
adc
pop
pop
adc
adc
aaa
lds
pop
and
cmp
sti
(bad)
call
pop
jne
add
sbb
adc
jne
add
sbb
xchg
or
add
sbb
and
fwait
push
pop
and
mov
(bad)
call
pop
je
add
sbb
add
sbb
add
sbb
or
xchg
lods
jl
pop
and
pop
cmp
cli
(bad)
call
or
mov
and
je
popa
cmp
adc
out
push
pop
and
aad
mov
movs
cli
(bad)
call
or
add
sub
add
push
add
add
add
adc
pop
add
add
push
add
adc
and
mov
fwait
pop
and
dec
add
and
cwde
int3
and
and
pop
inc
adc
add
in
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
call
pop
push
or
pop
and
and
dec
inc
dec
mov
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
or
pop
and
adc
and
adc
(bad)
(bad)
dec
je
add
sbb
mov
or
pop
and
mov
and
jne
dec
shl
sbb
(bad)
call
push
add
sbb
add
add
and
add
and
add
sub
add
sub
add
add
lahf
add
add
adc
add
adc
jle
add
add
adc
jne
add
add
adc
pop
and
pusha
add
add
adc
add
adc
jne
add
add
or
pop
and
in
xchg
pop
and
hlt
sbb
(bad)
inc
outs
push
push
or
cmps
in
(bad)
dec
mov
xchg
(bad)
(bad)
inc
and
(bad)
(bad)
aas
pop
dec
add
adc
and
std
sbb
and
jne
(bad)
jmp
inc
add
add
add
add
sub
add
jle
add
add
or
cld
add
add
mov
add
adc
add
and
add
and
add
add
adc
add
movs
push
add
sbb
adc
and
aam
mov
and
mov
popa
cmp
(bad)
(bad)
call
add
adc
adc
and
std
sub
pop
and
shr
inc
sbb
or
add
outs
sbb
or
dec
xor
sub
mov
inc
and
dec
inc
xchg
lods
pop
popa
cmp
std
(bad)
call
lea
add
sbb
add
or
add
push
(bad)
sbb
add
sbb
push
add
add
and
add
sub
add
sub
pop
and
and
dec
test
cmp
outs
sbb
or
mov
sub
and
cmp
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
cmp
in
jmp
call
pop
and
pop
xchg
gs
and
pop
fstp
(bad)
call
pop
and
ret
and
data16
xor
(bad)
inc
sub
add
xor
add
add
add
adc
and
and
inc
test
add
and
xlat
cmp
push
popa
and
pop
inc
adc
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
add
push
or
pop
and
or
push
pop
and
pop
adc
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
or
mov
loopne
add
sub
add
jle
add
add
or
cmc
add
add
iret
add
add
adc
add
and
add
add
scas
add
add
adc
add
movs
push
add
sbb
adc
and
and
dec
xlat
add
add
(bad)
inc
sbb
or
add
pop
and
and
pop
mov
(bad)
inc
outs
sbb
or
and
int3
fwait
and
jmp
(bad)
(bad)
call
push
jne
add
add
or
pop
and
pop
pop
push
pop
and
imul
add
add
adc
je
add
add
adc
pop
and
add
add
inc
add
add
adc
add
adc
and
pop
sbb
and
cmp
(bad)
inc
outs
sbb
or
pushf
xor
and
lock
and
ficom
cmp
(bad)
inc
outs
pop
push
or
mov
add
and
mov
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
sub
xor
xlat
popa
jl
popa
cmp
and
(bad)
(bad)
aas
pop
dec
add
adc
and
sbb
add
js
(bad)
call
lea
add
sbb
add
or
add
push
(bad)
sbb
add
sbb
cmp
dec
add
add
adc
add
or
add
push
mov
or
pop
and
out
or
pop
and
mov
std
(bad)
call
add
adc
adc
and
sti
mov
pop
and
cmp
add
sbb
add
add
and
add
add
scas
add
add
adc
add
adc
or
push
adc
and
and
loope
popa
cmp
cld
(bad)
call
pop
and
pop
add
and
dec
outs
repnz
cmp
cld
(bad)
inc
sub
xor
add
add
adc
and
leave
and
and
push
pusha
sub
or
add
pop
push
or
add
adc
and
pushf
loop
pop
popa
and
pop
inc
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
cmp
and
(bad)
(bad)
aas
pop
dec
add
add
(bad)
dec
add
push
outs
pop
push
or
dec
rol
inc
and
dec
or
adc
and
sub
cmp
(bad)
call
lea
add
sbb
cld
add
pop
and
cmp
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
pop
and
xor
pop
and
mov
(bad)
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
les
pop
and
cmp
je
add
sbb
mov
or
pop
and
mov
cmp
popa
cmp
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
or
jg
add
and
imul
push
jle
add
add
or
or
add
and
add
add
adc
add
and
add
add
mov
adc
add
movs
push
add
sbb
adc
and
ret
pop
and
push
cmp
std
(bad)
call
push
add
sbb
add
add
and
add
and
add
add
adc
add
adc
add
cmps
add
add
adc
add
adc
jle
add
add
adc
jne
add
add
adc
pop
pop
adc
sub
add
sub
pop
and
or
pop
jle
imul
jle
add
add
or
add
push
(bad)
sbb
add
sbb
jo
add
and
adc
add
adc
and
mov
pop
and
cmp
(bad)
call
pop
and
xor
pop
(bad)
popa
cmp
inc
outs
sbb
or
nop
xchg
std
imul
cmp
std
(bad)
inc
outs
push
push
or
adc
and
test
cmp
std
(bad)
call
push
jne
add
add
or
pop
and
or
sbb
popa
cmp
std
(bad)
inc
sub
add
adc
pop
add
add
or
add
add
jmp
pcmpeqw
xchg
leave
dec
icebp
popa
dec
add
add
push
or
add
adc
mov
adc
pop
adc
adc
add
inc
add
add
add
add
add
stos
(bad)
(bad)
jmp
add
add
add
add
add
popa
add
add
add
add
add
jns
add
dec
add
add
add
add
add
add
loopne
add
jle
add
add
adc
je
add
add
adc
pop
and
add
add
mov
adc
add
adc
jne
add
add
or
pop
and
and
cmc
or
cmp
(bad)
dec
jne
add
sbb
mov
or
pop
and
mov
dec
jge
xchg
dec
(bad)
(bad)
call
pop
and
and
xor
pop
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
sbb
add
add
and
add
add
pop
add
add
adc
add
adc
add
sub
add
sub
add
sub
push
adc
and
push
pop
and
cmp
(bad)
inc
and
(bad)
(bad)
aas
pop
dec
add
adc
and
test
ficom
(bad)
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
or
pop
and
mov
imul
sub
mov
(bad)
inc
outs
pop
push
or
pop
lods
enter
push
and
les
xor
int
and
pop
popa
cmp
std
(bad)
call
lea
add
sbb
fdivr
jnp
and
idiv
inc
popa
cmp
bound
and
imul
push
jle
add
add
or
pop
add
add
add
add
adc
add
and
add
add
adc
add
movs
push
add
sbb
adc
and
and
int
popa
cmp
(bad)
inc
outs
push
push
or
jg
push
arpl
ds
daa
and
(bad)
inc
outs
sbb
or
retf
pop
and
fnstenv
xor
(bad)
call
add
adc
adc
and
inc
in
pop
and
ret
fwait
xchg
popa
cmp
std
(bad)
(bad)
jle
add
add
or
add
sbb
(bad)
sbb
add
sbb
test
add
and
add
add
adc
add
adc
and
div
int3
pop
and
cmp
cld
(bad)
inc
sbb
or
add
pop
and
cmp
pop
and
xchg
cmp
cld
(bad)
inc
sub
adc
pop
add
add
or
add
add
dec
mov
mov
and
add
retf
popa
dec
add
and
and
and
lea
and
pop
inc
adc
add
fild
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
(bad)
(bad)
inc
add
add
out
add
add
sbb
or
add
pop
and
dec
mov
int
jo
sub
sub
add
jle
add
add
or
fiadd
add
and
add
add
adc
add
and
add
add
adc
add
movs
push
add
sbb
adc
and
addr16
add
loopne
in
popa
cmp
(bad)
dec
je
add
sbb
mov
or
pop
and
or
push
add
sub
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
pop
and
dec
retf
fmul
popa
cmp
(bad)
(bad)
call
push
add
sbb
add
add
pop
dec
pop
xor
adc
add
adc
add
out
add
sub
add
sub
push
adc
and
and
clc
frstor
xchg
(bad)
(bad)
(bad)
jle
add
add
or
add
push
(bad)
sbb
add
sbb
xor
add
and
add
sub
add
sub
pop
and
out
stos
pop
and
jp
mov
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
or
pop
and
and
popf
popf
popa
cmp
(bad)
(bad)
inc
outs
pop
push
or
sbb
and
mov
cmp
std
(bad)
(bad)
jle
add
add
adc
jne
add
add
adc
pop
and
add
add
adc
add
adc
je
add
add
or
pop
and
test
and
test
(bad)
call
lea
add
sbb
(bad)
daa
imul
popa
cmp
pop
push
or
add
adc
adc
and
cmp
pop
and
cmp
(bad)
inc
outs
sbb
or
(bad)
addr16
and
outs
popa
fisub
and
hlt
push
pop
popa
cmp
(bad)
inc
outs
push
push
or
adc
and
mov
and
(bad)
(bad)
jle
add
add
and
add
loopne
jle
add
add
and
add
loopne
push
bound
add
add
and
add
loopne
pop
adc
jle
add
add
and
add
loopne
pop
sbb
adc
cmc
mov
pop
and
leave
adc
(bad)
inc
and
(bad)
(bad)
aas
pop
dec
add
adc
and
xchg
or
imul
inc
sub
add
adc
add
add
jo
pop
jo
adc
add
and
add
add
add
or
mov
std
repz
cmp
adc
and
add
inc
add
add
add
cmp
add
loopne
add
int3
add
add
add
add
add
sub
add
cld
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
ins
add
add
add
add
add
into
add
add
add
add
(bad)
(bad)
cmp
add
or
pop
or
cmp
inc
(bad)
(bad)
call
pop
je
add
sbb
or
je
add
sbb
add
sahf
and
fcmovnb
inc
cmp
or
inc
addr16
and
adc
(bad)
call
or
add
sbb
sbb
add
and
add
add
inc
add
add
jge
add
add
add
or
ins
inc
mov
add
popa
cmp
(bad)
(bad)
call
adc
or
xor
push
adc
or
js
cmps
fcomp
and
call
(bad)
(bad)
call
pop
jne
add
sbb
or
pop
je
add
sbb
or
or
add
sbb
or
popa
sahf
adc
imul
jne
and
cmp
(bad)
(bad)
call
adc
adc
adc
and
loopne
and
cmp
(bad)
call
or
add
sbb
push
and
adc
pop
sbb
or
add
sbb
or
and
add
or
adc
add
adc
repz
push
arpl
mov
cmp
(bad)
(bad)
call
pop
jne
add
sbb
or
pop
je
add
sbb
or
add
pop
or
and
and
push
(bad)
(bad)
call
pop
je
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
arpl
sbb
inc
popa
cmp
std
(bad)
call
pop
je
add
sbb
or
jne
add
sbb
push
and
adc
rcr
add
adc
and
adc
push
rcr
add
adc
and
adc
pop
adc
and
jnp
(bad)
call
pop
je
add
sbb
adc
jne
add
sbb
xchg
or
add
push
xchg
popa
sahf
adc
mov
out
(bad)
inc
popa
cmp
(bad)
call
or
jmp
and
outs
popa
cmp
std
(bad)
call
or
adc
or
cs
sub
sub
and
inc
add
and
(bad)
dec
or
sbb
or
fs
or
add
adc
sahf
adc
pop
adc
or
sbb
push
inc
pop
and
cmp
cld
(bad)
call
pop
jne
add
sbb
or
pop
jne
add
sbb
or
add
pop
or
and
push
sub
pop
and
push
rcl
cmp
pop
jne
add
sbb
or
pop
je
add
sbb
or
add
pop
or
and
sbb
add
push
dec
nop
mov
(bad)
cld
(bad)
call
pop
jne
add
sbb
add
sbb
add
sbb
or
in
push
sbb
test
popa
cmp
(bad)
call
add
adc
or
jmp
sub
and
cmp
(bad)
call
adc
outs
ret
and
cmp
cld
(bad)
call
or
adc
or
or
hlt
add
sub
and
and
and
(bad)
call
or
pop
adc
adc
or
mov
cmp
cmp
sti
(bad)
call
pop
je
add
sbb
or
add
sbb
or
add
sbb
or
pop
jne
add
sbb
push
adc
je
add
sbb
push
xchg
or
add
pop
push
xchg
popa
sahf
adc
jne
add
sbb
movups
jne
add
sbb
setne
je
add
sbb
setne
adc
push
and
cmp
or
dec
ss
add
mov
jl
(bad)
inc
sbb
lea
add
add
or
or
loopne
ret
arpl
pop
shr
sti
(bad)
call
pop
jne
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
jne
add
sbb
pop
je
add
sbb
add
sbb
popa
sahf
adc
push
fnsave
jbe
or
adc
adc
and
fbstp
(bad)
call
or
pop
adc
adc
cld
and
mov
and
xchg
xlat
popa
cmp
cli
(bad)
call
adc
adc
imul
dec
test
inc
popa
cmp
cli
(bad)
call
pop
jne
add
sbb
adc
jne
add
sbb
xchg
or
add
pop
xchg
popa
sahf
adc
jne
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
and
and
dec
mul
nop
cli
(bad)
call
pop
je
add
sbb
adc
je
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
dec
xor
pop
and
mov
sahf
popa
cmp
(bad)
call
add
or
add
inc
jnp
sub
and
leave
xchg
jbe
cmp
(bad)
call
pop
je
add
sbb
adc
jne
add
sbb
xchg
or
add
sbb
xchg
popa
sahf
adc
imul
ja
test
popa
cmp
cli
(bad)
call
add
add
(bad)
aad
pop
and
je
sbb
(bad)
stc
(bad)
call
adc
adc
or
movs
pop
and
fidiv
stc
(bad)
jmp
pop
add
add
dec
add
add
jns
add
adc
push
and
add
jae
add
or
add
or
add
xor
outs
add
add
add
adc
add
add
add
add
pop
add
add
adc
and
add
add
xchg
add
add
push
add
sub
fld
add
and
add
add
pop
add
sub
and
add
xor
and
add
add
loopne
(bad)
inc
add
add
add
add
adc
add
push
and
and
int3
adc
into
adc
add
adc
add
or
add
add
add
add
add
add
add
add
adc
add
add
add
adc
jnp
add
add
or
add
or
and
bound
popf
aaa
mov
popa
and
inc
or
add
pusha
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
mov
and
add
add
add
add
add
add
sbb
add
jnp
add
add
add
add
xor
and
pop
add
sub
and
jl
js
es
and
push
jl
popa
cmp
(bad)
inc
add
add
add
bound
jnp
add
add
ret
add
add
leave
add
add
sldt
sub
pusha
jge
add
add
and
jmp
arpl
cmp
enter
inc
(bad)
(bad)
inc
jnp
add
add
add
add
aaa
or
retf
in
and
adc
and
pop
shl
pop
popa
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
mov
push
outs
cmp
(bad)
(bad)
inc
jnp
add
add
aaa
or
push
cmp
ins
and
mov
pop
and
pushf
dec
cmc
pop
popa
cmp
(bad)
(bad)
inc
push
jge
add
add
and
fistp
(bad)
jge
and
add
add
bound
add
add
and
daa
jb
and
cmp
sub
dec
push
stos
or
xchg
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
add
jnp
add
add
fs
jge
add
add
and
les
pop
and
pop
push
popa
popa
cmp
(bad)
inc
add
add
add
bound
jnp
add
add
js
add
and
add
sub
add
sub
pusha
jge
add
add
and
add
bound
add
add
and
and
data16
shl
sbb
(bad)
call
sub
add
adc
add
sbb
add
add
add
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
imul
add
pop
or
inc
and
cmps
aam
and
cmps
jo
and
add
add
fdivr
(bad)
call
add
add
add
add
add
sub
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
das
xchg
cs
ret
pop
add
add
add
pop
pop
bound
or
shl
and
and
add
add
xor
mov
add
or
add
pop
or
jnp
add
add
and
sub
and
jne
call
add
(bad)
(bad)
call
add
add
add
add
add
xor
add
sub
and
sahf
jmp
popa
sub
push
pop
bound
jnp
add
add
loopne
add
add
add
and
add
pop
or
pop
pop
or
mov
test
and
jge
and
and
cmps
and
pop
add
add
add
pop
pop
bound
adc
add
aad
add
or
add
pop
or
or
ret
mov
cmps
repnz
push
pop
inc
or
add
retf
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
xchg
add
add
or
add
jno
leave
mov
xchg
sbb
sub
push
or
adc
lods
xor
call
popa
sub
sub
push
pop
and
inc
fimul
add
add
add
or
aam
xchg
and
fiadd
and
(bad)
inc
or
pop
pop
pop
bound
or
pop
or
add
push
das
inc
dec
pop
and
push
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
and
add
or
(bad)
cmp
(bad)
(bad)
inc
sub
add
adc
add
in
add
or
add
pop
or
pop
pop
dec
ins
and
and
pop
inc
or
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
mov
add
pop
loopne
add
add
add
and
add
or
and
scas
adc
cmp
jmp
je
sub
and
pop
pop
and
call
pop
or
pop
pop
pop
bound
adc
stos
lea
pop
and
loopne
jp
cmp
(bad)
inc
pop
bound
push
or
adc
cmp
sub
(bad)
popa
cmp
(bad)
call
or
or
add
xor
xlat
and
cmp
(bad)
dec
pop
pop
or
add
or
and
cmp
(bad)
inc
sub
add
adc
add
add
add
add
add
dec
mov
xchg
movs
popa
and
or
add
int3
(bad)
(bad)
dec
add
add
add
jbe
add
inc
add
add
add
add
popf
add
add
add
add
add
bound
jnp
add
add
pop
add
add
push
add
add
sldt
sub
pusha
jge
add
add
pop
pop
or
or
mov
movs
xor
pop
and
mov
popa
popa
sub
add
add
and
addr16
pop
pop
and
adc
shl
(bad)
(bad)
inc
adc
add
and
and
mov
xchg
pop
(bad)
(bad)
call
or
and
not
and
xor
(bad)
(bad)
inc
sbb
or
cmp
lea
int
or
and
(bad)
jmp
add
adc
add
or
add
add
add
add
sub
xor
add
add
adc
sub
xor
mov
and
inc
and
pop
inc
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
push
jnp
add
add
add
add
xor
and
(bad)
mov
and
jecxz
add
and
add
bound
add
add
and
stos
in
pop
and
sub
mov
add
add
bound
jnp
add
add
cmps
add
add
lods
add
add
sldt
sub
pusha
jge
add
add
call
(bad)
jmp
add
xor
imul
add
add
adc
jnp
add
add
add
add
add
and
adc
inc
and
push
ss
popa
and
pop
inc
or
add
adc
add
add
add
add
add
xor
add
mov
add
in
add
xchg
add
add
add
mov
add
add
add
add
adc
add
pop
push
adc
pop
pop
pop
or
add
jmp
mov
popa
sub
and
retf
and
pop
stc
sbb
pop
pop
or
adc
jle
(bad)
dec
pop
bound
adc
pusha
or
and
add
add
and
dec
out
and
shl
and
retf
xchg
pop
popa
cmp
(bad)
inc
pop
jge
add
add
add
xor
or
inc
pop
or
iret
adc
dec
cmp
(bad)
(bad)
inc
push
pop
pop
pop
adc
add
or
or
or
push
bound
jnp
add
add
dec
add
add
inc
add
add
sldt
sub
pusha
or
push
bound
adc
jns
and
fdiv
ss
cmp
(bad)
(bad)
call
or
or
and
(bad)
pop
and
and
cmp
(bad)
(bad)
inc
push
jge
add
add
add
jle
and
stos
push
popa
cmp
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
and
add
add
lea
add
add
add
add
and
add
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
pop
jb
lea
add
add
add
add
sbb
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
sbb
add
push
jge
add
add
sub
add
or
adc
add
or
sbb
jnp
add
add
pop
add
add
and
add
add
pop
pop
or
push
push
fild
add
xor
add
add
adc
jnp
add
add
cmp
sub
sbb
and
mov
sbb
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
add
and
add
add
dec
add
add
push
add
add
add
outs
inc
add
push
pop
and
arpl
cmp
push
stos
jle
popa
sub
add
add
and
add
add
jo
add
sub
add
jge
add
add
and
pop
std
pop
and
cmp
inc
add
add
add
and
or
pop
and
pop
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
jnp
add
add
add
cmp
add
sub
add
xor
add
add
or
add
pop
add
pop
pop
bound
and
mov
xchg
and
and
test
pop
inc
add
add
fdivr
(bad)
(bad)
cmp
add
add
add
sbb
add
add
add
outs
add
push
pop
and
and
sub
add
add
add
outs
add
push
pop
and
push
cmp
iret
push
cmps
lea
test
jge
add
add
add
add
xor
add
add
sldt
adc
jnp
add
add
outs
sub
add
and
push
xlat
call
or
sbb
add
dec
add
add
add
add
add
add
add
add
add
imul
add
xchg
(bad)
jmp
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
add
aaa
add
push
add
add
add
aaa
add
push
or
aam
sub
and
in
inc
popa
cmp
(bad)
inc
sbb
or
xor
repnz
pop
adc
das
and
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
mov
and
mov
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
or
pop
sub
(bad)
call
or
sub
add
repz
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
nop
mov
and
cmp
(bad)
(bad)
inc
add
add
add
or
ret
adc
call
(bad)
(bad)
inc
jnp
add
add
add
add
add
inc
add
push
push
or
and
rcpps
pop
and
cmp
adc
add
loopne
add
add
sub
add
push
push
pop
pop
or
and
rcr
jbe
ds
popa
cmp
call
or
and
push
dec
pop
and
or
mul
push
(bad)
(bad)
dec
and
inc
pop
outs
jp
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
push
jns
cmp
(bad)
(bad)
inc
sbb
pop
or
rcl
sub
adc
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
outs
inc
ins
sbb
nop
repnz
fwait
mov
pusha
stc
stos
jns
cmp
std
(bad)
inc
pop
pop
or
and
xchg
xchg
mov
and
aas
sub
cmp
std
(bad)
inc
pop
jb
or
sub
iret
adc
dec
pop
addr16
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
clc
mov
sbb
and
cmp
jnp
add
add
loopne
add
add
sub
pop
pop
or
sbb
ja
imul
pop
or
and
pusha
cs
and
stos
popa
cmp
(bad)
inc
jnp
add
add
cmp
add
or
in
jp
popf
pop
and
scas
es
cmp
std
(bad)
inc
pop
or
or
aam
jmp
and
adc
cmp
or
and
xchg
dec
mov
or
and
popa
cmp
std
(bad)
inc
jl
add
add
and
adc
push
add
add
adc
add
xor
add
and
loope
jecxz
shl
cmp
nop
pop
inc
aas
add
add
add
push
pop
add
sbb
add
add
add
add
add
xchg
add
add
add
add
scas
add
add
test
add
fadd
add
push
add
in
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
pushf
add
add
add
(bad)
dec
add
out
add
lds
add
push
add
enter
pop
push
add
sub
add
jnp
add
sub
add
inc
add
add
add
inc
add
mov
add
or
add
xor
add
jmp
add
ins
add
add
add
add
add
dec
add
add
add
add
add
add
push
add
mov
add
rol
add
and
add
pop
add
xchg
add
add
add
add
add
add
push
add
cmp
jnp
add
add
sub
add
adc
and
xchg
(bad)
mov
and
je
ss
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
and
add
sub
and
sub
and
mov
les
xchg
cmc
ins
cdq
pop
popa
cmp
adc
mov
pusha
push
pop
and
dec
lods
pop
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
push
outs
cmp
pop
add
add
add
pop
outs
dec
add
push
adc
and
and
push
adc
cmp
(bad)
inc
adc
cmp
and
and
fbld
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
and
add
adc
sub
add
adc
and
jmp
jle
and
inc
adc
lock
(bad)
call
add
dec
add
push
adc
and
imul
or
(bad)
std
(bad)
inc
or
cld
pop
movs
sar
retf
inc
jnp
add
add
jnp
add
add
add
cmp
or
push
cmp
adc
fsub
push
and
pop
and
mov
popa
cmp
add
add
add
adc
and
fwait
xchg
test
jo
(bad)
call
add
or
adc
or
pop
add
add
add
or
mov
sub
and
(bad)
and
ja
dec
cmc
pop
popa
cmp
adc
outs
pop
adc
(bad)
int
pop
and
imul
call
add
add
inc
ins
mov
inc
mov
(bad)
call
mov
and
jns
and
repnz
cld
(bad)
inc
or
mov
cmp
pop
pop
and
shr
cld
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
and
add
sub
and
adc
aam
sub
and
retf
cmp
add
add
add
jnp
add
add
or
add
push
pop
adc
adc
and
test
pop
mov
(bad)
inc
jnp
add
add
jnp
add
add
outs
dec
add
push
outs
dec
add
push
adc
and
and
icebp
cmp
popa
cmp
(bad)
dec
adc
mov
inc
mov
pop
and
mov
addr16
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
and
add
sub
and
push
and
mov
pushf
and
(bad)
call
mov
lods
stc
call
popa
cmp
sti
(bad)
call
mov
mov
jp
pop
(bad)
popa
cmp
sti
(bad)
call
add
push
add
push
sub
movlps
cli
mov
mov
lods
les
sti
(bad)
call
add
add
jno
mov
add
ds
popa
cmp
jnp
add
add
outs
dec
add
push
adc
adc
and
(bad)
jmp
and
fldenv
sti
(bad)
dec
adc
mov
pop
sbb
sbb
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
and
add
sub
and
or
push
and
(bad)
and
cmp
les
pop
popa
cmp
sti
(bad)
call
mov
nop
adc
cmp
call
or
adc
and
js
pop
and
rol
popa
cmp
sti
(bad)
inc
jnp
add
add
inc
add
push
add
add
add
inc
add
push
and
cli
(bad)
call
add
push
add
push
adc
and
and
sub
cli
(bad)
call
or
mov
cmp
cli
(bad)
inc
jnp
add
add
or
add
push
and
fwait
mov
inc
outs
adc
inc
ins
mov
ins
dec
mov
and
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
and
add
pop
or
sbb
pop
retf
and
xor
pop
cli
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
push
pop
or
mov
imul
das
xchg
popa
cmp
cli
(bad)
call
or
or
(bad)
xlat
inc
pop
and
pop
cli
(bad)
dec
adc
or
cli
cmp
cli
(bad)
call
mov
ss
pop
and
cmp
stc
(bad)
call
or
adc
sbb
or
push
pop
pop
pop
bound
adc
and
out
aad
and
loope
es
aad
xor
popa
cmp
jnp
add
add
jnp
add
add
add
jnp
add
add
outs
dec
add
push
outs
add
push
adc
adc
and
mov
fsubr
popa
cmp
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
and
add
sub
rcr
sub
and
adc
and
(bad)
pop
popa
cmp
inc
jnp
add
add
jnp
add
add
or
add
push
sbb
or
add
dec
add
push
and
sbb
(bad)
inc
add
add
jnp
add
add
daa
add
push
pop
or
mov
dec
jecxz
pop
and
fdiv
popa
cmp
clc
(bad)
call
mov
and
adc
loop
(bad)
call
add
dec
add
push
push
or
mov
jge
fistp
push
sub
cmp
clc
(bad)
call
add
dec
add
push
adc
and
fs
fistp
pop
jb
clc
popa
cmp
and
cld
jne
pop
and
cdq
clc
(bad)
call
add
add
sbb
pop
pop
and
cmp
(bad)
dec
adc
mov
jnp
sbb
inc
pushf
popa
cmp
(bad)
inc
add
add
add
push
sbb
sub
add
sbb
or
and
jnp
cmp
(bad)
dec
or
mov
inc
jnp
add
add
or
xor
pop
add
add
jnp
add
add
add
push
adc
push
cmp
pop
and
push
or
popa
cmp
(bad)
dec
add
push
adc
and
sub
and
and
and
test
fdivrp
pop
popa
cmp
idiv
call
add
and
sbb
cmp
retf
idiv
call
push
add
mov
and
mov
(bad)
call
mov
imul
adc
jle
cmp
add
adc
adc
and
cld
mov
pop
inc
call
idiv
inc
jnp
add
add
adc
outs
dec
add
push
and
idiv
jmp
adc
add
dec
add
add
add
adc
push
xchg
pop
or
and
popf
jle
sub
adc
pop
or
inc
or
add
pusha
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
adc
xchg
(bad)
and
cmps
push
adc
push
and
cmps
je
pop
and
push
mov
popa
sub
sbb
adc
and
cmovp
(bad)
(bad)
inc
or
xor
add
adc
and
ret
pop
and
fistp
cmp
(bad)
call
push
and
fucomi
inc
pop
and
daa
adc
call
add
adc
and
and
cmp
(bad)
(bad)
call
add
stc
xor
push
sub
and
cmp
(bad)
(bad)
inc
push
xchg
pop
or
adc
and
mov
cmp
(bad)
(bad)
call
add
pop
adc
push
pop
pop
pop
pop
bound
add
cmp
(bad)
inc
adc
das
add
push
add
push
sub
add
push
adc
and
test
pop
and
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
add
pop
dec
add
and
xor
pop
inc
or
or
pop
inc
add
add
fdivr
(bad)
push
add
add
add
add
add
add
add
aaa
or
lods
push
daa
stos
and
inc
ret
mov
into
cld
clc
fstp
sub
add
push
and
scas
in
and
push
mov
sbb
add
add
xor
add
add
add
add
add
and
mov
push
push
ja
and
push
add
add
add
push
add
add
add
add
(bad)
(bad)
inc
jnp
add
add
jge
add
add
and
push
call
sub
add
loopne
add
add
sbb
add
push
add
jnp
add
add
loopne
add
add
sbb
add
push
add
pop
pop
or
jne
inc
push
sub
jl
pop
and
jno
(bad)
inc
add
or
leave
mov
push
and
adc
cmp
(bad)
jmp
adc
add
jmp
add
or
add
add
add
and
add
push
or
arpl
sbb
and
mov
repnz
and
or
add
add
add
add
add
pop
add
add
add
add
(bad)
(bad)
inc
cdq
add
add
jl
add
add
and
add
pop
and
push
sub
and
mov
pop
or
and
and
sbb
add
sub
add
loopne
add
add
sub
pop
push
daa
out
xchg
jnp
add
add
loopne
add
add
sub
and
push
add
pop
and
cmp
(bad)
inc
and
pop
in
mov
mov
cmp
(bad)
inc
add
add
add
or
inc
xchg
std
mov
xor
(bad)
inc
jl
add
add
and
add
xor
add
add
add
add
adc
jl
add
add
sub
add
push
cmp
loopne
inc
and
lods
ss
and
inc
or
add
jg
add
xchg
add
add
(bad)
(bad)
jmp
add
mov
add
dec
add
add
add
add
ret
add
jl
add
add
sub
add
push
sub
and
dec
pop
and
pop
loopne
and
mov
int3
pop
popa
sub
add
add
sub
add
push
pop
or
and
and
cmp
(bad)
inc
jnp
add
add
loopne
add
add
add
add
push
sub
and
pop
sub
and
cmp
(bad)
call
or
bound
(bad)
inc
and
loopne
pop
and
idiv
(bad)
(bad)
inc
add
add
add
loopne
add
add
add
add
push
pop
or
and
and
jmp
and
adc
(bad)
inc
push
pop
or
je
xlat
inc
cmp
sub
adc
add
inc
add
add
add
adc
pop
adc
lea
add
add
add
add
pop
adc
lea
add
add
add
add
jl
add
add
adc
add
add
adc
add
jae
add
push
jge
add
add
sub
add
or
add
xor
jb
add
adc
add
add
add
add
pop
and
fild
and
popa
xlat
dec
jl
and
inc
or
add
clc
add
add
add
add
add
fadd
add
mov
add
add
add
sub
add
sbb
add
add
add
pop
add
add
push
xor
and
push
inc
cmp
das
ds
es
add
add
add
in
les
cwde
add
add
pop
pop
bound
pop
jge
add
add
and
jecxz
pop
and
lods
jmp
(bad)
inc
push
loopne
or
add
jge
add
add
and
popf
sub
pop
and
cmp
(bad)
(bad)
inc
jnp
add
add
xor
and
(bad)
inc
and
add
gs
(bad)
ins
aam
popa
cmp
(bad)
jmp
or
push
mov
dec
test
and
(bad)
call
or
and
mov
aaa
pop
loopne
popa
cmp
jnp
add
add
xor
and
sub
and
mov
or
add
pop
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
or
add
sub
add
pop
pop
pop
or
sub
(bad)
(bad)
inc
add
and
add
add
add
jnp
add
add
pop
pop
pop
bound
or
mov
pop
and
cmp
add
xor
add
add
adc
add
add
add
jnp
add
add
pop
pop
pop
bound
and
mov
cdq
add
or
pop
inc
pop
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
sub
add
dec
add
add
fs
or
and
test
mov
fwait
gs
sub
add
add
add
loopne
or
add
sub
add
and
in
ins
sub
or
pop
add
pop
and
cmp
xchg
or
add
(bad)
push
pop
and
adc
xchg
push
xor
and
and
in
push
(bad)
(bad)
jmp
add
adc
add
and
add
add
add
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
sbb
add
add
add
add
add
add
add
sub
add
loopne
or
add
add
inc
add
push
sub
adc
add
sbb
add
adc
jnp
add
add
add
sub
add
loopne
or
add
add
add
inc
add
push
sub
add
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
and
add
add
jge
add
add
add
add
xor
add
add
push
or
dec
inc
fwait
shl
jmp
and
push
add
add
add
and
add
add
add
push
add
add
(bad)
(bad)
call
add
add
push
pop
and
add
and
xor
enter
or
and
bndstx
and
ds
sub
add
pop
add
add
and
add
and
or
jecxz
popf
push
and
add
add
or
xchg
nop
and
xchg
xor
and
adc
add
pop
add
add
add
adc
or
inc
adc
cmp
and
add
add
loopne
(bad)
push
add
add
add
add
xor
pop
bound
jnp
add
add
loopne
add
add
add
and
add
pusha
or
and
add
add
or
mov
xor
and
adc
mov
shr
adc
add
inc
add
add
add
adc
or
fucomi
jp
and
lock
or
or
add
xor
add
mov
add
add
add
retf
add
add
add
add
add
add
cmp
add
add
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
and
add
or
pop
bound
pusha
or
and
and
pop
and
sbb
popa
sub
jnp
add
add
loopne
add
add
add
and
add
pusha
or
sbb
(bad)
(bad)
inc
and
add
add
and
sub
and
jne
and
(bad)
dec
and
and
pop
fwait
popa
cmp
(bad)
inc
(bad)
add
and
xor
std
pop
and
outs
inc
das
popa
cmp
(bad)
(bad)
inc
and
add
add
or
pop
ret
gs
jmp
(bad)
(bad)
inc
and
or
(bad)
(bad)
inc
or
or
jne
aas
adc
test
and
add
pop
popa
cmp
(bad)
(bad)
dec
and
mov
sub
shl
enter
push
shr
add
adc
add
jnp
add
add
add
add
add
add
cs
and
outs
push
inc
and
jecxz
push
popa
and
add
add
add
add
add
add
fdivr
(bad)
call
add
add
inc
add
loopne
add
add
jge
add
add
and
and
mov
add
add
(bad)
or
mov
push
jge
add
add
and
and
mov
pop
popa
sub
add
add
add
xor
add
add
add
add
add
inc
add
push
and
frstor
cmc
and
cwde
cli
popa
and
add
add
fdivr
(bad)
inc
add
and
add
add
inc
add
jge
add
add
sub
(bad)
test
pop
cs
and
cld
jecxz
pop
popa
sub
add
push
jge
add
add
and
aas
push
pop
and
jecxz
cwde
popa
sub
adc
pop
add
add
add
add
add
inc
add
push
add
and
stos
and
and
jbe
aam
and
add
add
loopne
(bad)
inc
add
add
cmp
jnp
add
add
imul
add
add
add
add
add
imul
and
adc
add
push
and
bound
sub
popa
sub
push
add
add
add
add
adc
jnp
add
add
jnp
add
add
or
sub
cmc
shl
pop
push
shl
or
inc
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jge
add
sub
and
xor
(bad)
pop
and
sub
add
jge
add
add
and
sub
and
pop
pop
mov
add
add
add
sub
add
inc
lock
ret
sub
add
jnp
add
add
jnp
add
add
and
add
add
add
sbb
add
add
add
add
jnp
add
add
or
sub
ja
and
dec
or
push
(bad)
(bad)
jmp
adc
push
add
add
adc
add
add
add
add
pop
pop
pop
or
pop
mov
and
popa
and
inc
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
and
and
scas
add
or
adc
scas
loope
sub
and
sub
sbb
sub
ja
popa
sub
or
add
dec
pop
fcmove
cmp
(bad)
inc
add
add
add
or
int3
push
mov
and
mov
sbb
sub
pop
pop
popa
cmp
inc
sub
add
or
cmp
enter
dec
sub
cmp
(bad)
inc
add
add
add
or
jae
or
and
pop
int
and
(bad)
inc
add
add
add
or
and
je
retf
shl
or
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
add
add
add
jnp
add
add
or
bound
push
and
nop
jne
and
(bad)
jmp
add
add
xor
pusha
add
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
loopne
pushf
add
add
add
jnp
add
add
aaa
and
gs
and
xchg
or
or
pop
inc
add
add
pop
add
add
add
add
(bad)
(bad)
jmp
adc
add
pop
and
fnsave
dec
mov
adc
add
jne
add
or
add
add
add
add
pop
pop
pop
or
push
aad
push
and
int3
mov
sbb
add
add
fdivr
(bad)
(bad)
cmp
add
and
add
add
add
sub
push
add
add
add
or
je
cmp
sub
pop
and
mov
and
popa
sub
add
add
or
and
div
push
and
fistp
add
add
add
loopne
sub
add
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
push
jge
add
add
adc
add
rol
add
add
adc
jnp
add
add
xor
and
fs
addr16
popa
and
pop
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
jns
add
cmp
add
push
and
ret
push
and
sub
add
add
add
or
or
pop
out
bound
jp
mov
and
and
add
pop
jge
add
add
and
and
or
popa
sub
sub
shl
popa
cmp
(bad)
inc
push
jge
add
add
and
mov
push
pop
hlt
popa
cmp
inc
and
add
pop
jge
add
add
add
add
xor
add
add
adc
add
add
add
aaa
add
or
add
add
add
add
xor
add
add
adc
add
add
add
aaa
add
or
add
jge
add
add
add
add
xor
add
add
add
add
adc
add
add
add
aaa
add
or
add
or
add
add
add
adc
add
or
add
add
add
add
add
add
inc
xor
add
add
add
add
adc
adc
add
and
add
push
add
push
sub
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
add
add
add
sub
xor
add
add
adc
add
adc
adc
adc
sub
add
sub
and
aam
and
lods
xchg
popa
and
inc
add
add
(bad)
(bad)
jmp
add
add
add
adc
add
sub
or
adc
enter
pop
and
shl
popa
sub
pop
sub
add
push
adc
pop
add
push
or
jmp
aad
sub
add
push
sub
pop
or
lea
add
add
pop
add
push
je
add
sbb
add
xor
add
add
add
add
adc
sub
push
sub
add
sub
add
and
mov
add
sub
pop
add
push
push
add
jle
add
and
jnp
and
and
or
add
sub
add
add
add
int3
(bad)
(bad)
inc
add
add
xchg
add
add
lea
add
add
and
retf
jl
and
mov
mov
sub
and
inc
and
mov
movs
add
or
adc
loope
and
cmp
push
and
inc
or
add
push
and
mov
add
sub
pop
add
push
push
and
test
push
cmp
(bad)
inc
lea
add
add
adc
push
and
and
cmp
cmps
or
ret
dec
(bad)
(bad)
call
sub
and
mov
push
xor
popa
cmp
(bad)
(bad)
inc
lea
add
add
sub
add
adc
add
push
add
add
add
adc
add
add
lea
add
add
add
pusha
add
push
sub
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
and
add
pop
add
add
sbb
add
sub
add
adc
add
adc
add
add
add
add
and
add
add
repnz
add
sbb
add
sub
add
xor
add
add
adc
add
sub
add
and
add
sub
add
sub
add
xor
add
add
add
add
adc
sbb
inc
add
add
jns
add
sub
xor
adc
add
add
add
add
and
add
and
add
add
sbb
add
sub
add
xor
or
add
add
add
add
pop
and
popa
sub
add
sub
xor
adc
add
add
add
add
and
add
add
dec
add
add
sbb
add
adc
add
or
add
add
add
add
sub
add
or
adc
add
std
add
add
add
jle
add
add
add
add
push
sub
inc
or
add
scas
add
add
add
add
add
mov
add
and
add
adc
add
add
add
add
add
mov
add
shl
add
adc
add
add
mov
or
add
add
add
pop
inc
pop
push
popa
inc
add
add
sldt
add
push
and
add
add
add
xchg
or
clc
adc
adc
add
je
(bad)
inc
mov
add
sbb
add
or
adc
pop
push
xchg
sbb
add
pop
(bad)
(bad)
inc
pop
pop
or
pop
or
push
and
add
add
(bad)
(bad)
dec
sbb
or
adc
xor
(bad)
call
push
and
and
add
add
jmp
add
sub
adc
adc
(bad)
inc
add
adc
add
fiadd
add
adc
das
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
mov
add
push
add
add
bound
add
es
add
adc
and
add
add
add
popa
pop
or
popa
inc
add
add
add
adc
stc
pop
or
or
add
push
add
sbb
add
or
pop
or
add
inc
pop
pop
or
adc
add
cmp
add
or
sbb
pop
adc
call
pop
and
sub
adc
pop
sbb
(bad)
(bad)
inc
sub
adc
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
adc
add
add
add
das
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
arpl
add
sbb
add
mov
add
mov
add
push
popa
inc
add
add
or
add
adc
add
popf
sbb
stc
adc
adc
pop
pop
xchg
pop
or
add
mov
mov
add
sbb
outs
or
sbb
add
ja
(bad)
inc
pop
pop
or
pop
or
or
add
(bad)
(bad)
(bad)
dec
sbb
or
adc
push
(bad)
(bad)
call
add
add
in
pop
je
add
add
push
adc
cmp
(bad)
inc
adc
add
loop
add
pop
add
adc
add
add
add
das
add
add
add
or
add
or
add
add
add
test
add
add
add
pop
add
add
add
inc
add
add
add
add
add
popa
add
add
add
push
es
or
adc
or
sub
pop
jle
push
popa
inc
add
add
or
add
adc
add
add
add
lock
sbb
push
add
sbb
mov
add
sbb
push
add
or
sbb
inc
pop
pop
or
sbb
push
adc
add
(bad)
call
add
cmp
push
pop
sub
adc
std
add
add
(bad)
inc
sub
or
inc
add
xor
add
add
add
add
adc
add
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
inc
add
add
add
push
adc
and
and
add
pop
adc
popa
pop
inc
pop
push
popa
inc
add
add
or
add
adc
pop
daa
xchg
adc
pop
pop
xchg
sub
rol
add
add
add
add
or
adc
inc
mov
add
sbb
mov
add
sbb
add
or
push
adc
inc
pop
pop
or
xchg
add
add
and
add
dec
or
or
pop
sub
cmp
sub
pop
je
add
add
pop
adc
inc
add
xor
add
add
add
add
adc
add
add
add
das
add
add
add
or
add
pop
add
add
add
add
add
add
add
inc
add
add
add
bound
add
add
add
movs
add
add
data16
push
adc
iret
add
add
add
sub
and
add
add
add
pop
jge
push
popa
inc
add
add
or
add
adc
add
sub
rcl
add
add
add
add
or
add
add
add
add
cmp
(bad)
inc
mov
add
sbb
add
or
adc
xor
add
cmp
(bad)
inc
pop
pop
or
pop
sub
pop
or
call
sub
sbb
(bad)
inc
je
add
add
adc
jmp
or
inc
add
adc
add
add
add
sbb
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
push
es
push
or
push
and
adc
push
add
pop
cmp
popa
inc
add
add
push
add
add
pop
and
sbb
(bad)
adc
and
add
add
add
in
adc
sbb
add
inc
mov
add
sbb
add
outs
adc
add
or
adc
inc
pop
pop
or
aaa
push
add
or
and
and
add
xchg
and
add
add
add
dec
or
or
pop
sub
sbb
(bad)
(bad)
call
test
or
add
sub
push
and
adc
inc
adc
add
ret
add
add
adc
add
add
add
inc
or
add
jne
add
aaa
add
add
add
add
add
add
add
add
add
add
add
bound
add
jne
add
aaa
add
add
add
jae
add
shr
add
adc
add
push
or
adc
mov
add
pop
dec
pop
push
popa
inc
add
add
push
add
add
or
add
cdq
adc
cmc
add
sbb
add
mov
add
adc
add
or
add
jnp
(bad)
inc
pop
pop
or
or
sbb
(bad)
(bad)
dec
sbb
or
or
add
pop
(bad)
(bad)
call
sub
pop
sub
add
adc
inc
(bad)
(bad)
inc
add
xor
repz
add
add
jle
add
add
add
add
push
push
adc
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
or
add
add
add
add
mov
popa
pop
ss
push
popa
inc
add
add
add
adc
movs
adc
pop
and
sub
sbb
add
add
outs
adc
add
push
pop
pop
or
add
add
or
mov
add
or
cmp
add
pop
or
pop
pop
xor
pop
adc
addr16
(bad)
call
push
and
add
add
and
adc
add
dec
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
imul
cmp
(bad)
inc
adc
add
scas
add
add
das
add
add
pop
or
inc
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
pop
pop
push
popa
inc
add
add
add
add
pop
or
mov
pop
inc
xchg
pop
push
or
stos
add
adc
add
push
pop
pop
or
and
pop
sub
push
or
xchg
or
rol
add
xchg
pop
pop
pop
sub
sbb
sbb
add
add
add
add
add
push
add
sub
pop
add
xor
out
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
shr
add
adc
and
adc
push
adc
popa
pop
inc
pop
push
popa
inc
add
add
add
adc
sub
adc
adc
and
add
xchg
and
add
add
add
jmp
adc
push
adc
inc
pop
pop
or
and
add
or
add
or
pop
or
xor
sbb
add
call
push
and
rol
add
pop
sub
adc
pop
xor
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
xor
inc
add
sbb
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
add
add
arpl
add
cmp
add
mov
add
xchg
add
add
add
or
add
test
ins
add
push
es
adc
adc
and
aad
add
pop
adc
popa
pop
and
popa
inc
add
add
add
adc
stc
adc
adc
and
and
add
add
add
inc
mov
add
sbb
add
or
sbb
add
inc
pop
pop
or
add
add
or
add
aam
add
or
sbb
xor
push
adc
call
push
and
add
xchg
pop
sub
adc
and
pop
sbb
add
inc
je
add
add
sbb
add
inc
adc
add
in
add
adc
add
jle
add
add
add
add
push
sub
add
or
add
pusha
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
push
adc
add
mov
and
add
add
add
popa
pop
push
pop
push
popa
inc
add
add
add
adc
xchg
adc
add
pop
or
add
test
mov
add
sbb
mov
add
sbb
add
or
pop
or
add
imul
pop
or
or
sbb
add
push
(bad)
(bad)
dec
sbb
adc
add
add
add
ds
(bad)
call
sub
pop
je
add
add
sbb
add
sub
(bad)
call
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
outs
add
push
es
adc
mov
and
add
add
add
lods
push
add
popa
pop
jne
push
popa
inc
add
add
add
adc
xchg
sbb
stc
adc
push
adc
mov
mov
add
sbb
mov
add
sbb
sbb
add
or
push
pop
or
add
push
(bad)
inc
pop
pop
or
cli
push
add
or
and
pop
sub
sbb
add
dec
(bad)
(bad)
call
or
cmc
push
adc
inc
(bad)
(bad)
inc
je
add
add
adc
and
add
add
add
sub
(bad)
inc
add
xor
add
add
add
add
adc
add
add
add
xor
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
or
add
add
or
add
push
pop
pop
pop
or
popa
pop
xor
add
add
or
add
adc
nop
add
add
add
pop
sub
sbb
mov
add
sbb
sbb
add
push
pop
pop
or
and
pop
or
or
inc
sbb
pop
push
or
call
sub
sub
adc
adc
inc
add
add
add
add
add
outs
add
push
sub
jle
(bad)
inc
add
adc
add
pop
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
and
add
add
add
lods
add
add
add
mov
add
lods
add
add
add
push
add
add
add
add
add
adc
add
shl
add
adc
and
adc
adc
and
add
add
add
popa
pop
outs
pop
push
popa
inc
add
add
adc
add
adc
pop
and
inc
pop
adc
call
repz
or
or
add
jmp
sbb
add
or
or
add
jmp
sbb
add
or
push
and
adc
and
add
add
cmp
pop
pop
or
inc
or
add
push
or
pop
or
xor
sbb
add
call
sub
pop
adc
inc
sub
pop
and
and
adc
inc
adc
push
add
add
add
add
adc
add
add
add
das
add
add
add
or
add
add
add
cdq
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
jno
add
adc
sub
add
xchg
adc
xchg
pop
or
sbb
sub
xor
popa
inc
add
add
add
or
and
add
add
pop
or
push
add
sbb
add
or
adc
push
xchg
push
pop
or
inc
pop
jle
add
add
ja
xor
add
ja
add
aad
add
pop
pushf
pop
or
pop
sub
adc
add
(bad)
call
sub
sbb
cmp
(bad)
(bad)
inc
sub
call
xor
add
add
add
add
adc
add
add
push
sub
add
add
add
or
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
xor
add
push
add
add
jb
add
es
adc
sbb
add
popa
pop
fs
push
popa
inc
add
add
or
add
adc
and
adc
stc
and
add
add
add
add
pop
or
add
push
add
sbb
add
or
pop
or
add
inc
pop
pop
or
out
add
add
and
add
dec
or
or
pop
sub
cmp
(bad)
call
sbb
(bad)
(bad)
inc
adc
add
daa
add
add
add
adc
jne
add
sub
add
sub
add
sub
add
sub
add
adc
lea
add
add
js
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
inc
add
and
jns
add
sub
xor
adc
add
add
add
add
and
add
and
add
sub
add
sub
add
adc
add
adc
add
add
add
add
xor
add
and
add
sub
add
sub
add
add
xor
add
add
adc
add
hlt
add
add
mov
add
sub
add
sub
add
xor
add
add
add
add
jle
add
add
add
add
push
sub
inc
or
add
adc
add
add
add
add
add
add
add
add
popf
add
add
add
jg
add
inc
add
add
jns
add
adc
add
adc
mov
or
adc
lods
add
popa
pop
pop
pop
push
popa
inc
add
add
adc
add
add
add
add
xchg
sub
adc
sbb
add
jp
(bad)
jmp
pop
add
or
adc
add
(bad)
(bad)
inc
pop
pop
or
and
pop
or
add
push
pop
adc
dec
(bad)
(bad)
dec
sbb
movups
add
(bad)
(bad)
call
push
and
sub
pop
jne
add
add
pop
adc
sbb
adc
add
in
add
push
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
mov
add
adc
add
mov
add
dec
add
add
add
cmp
add
sub
add
or
add
add
add
or
add
xchg
add
add
jp
add
es
or
add
sbb
add
popa
pop
push
push
popa
inc
add
add
add
adc
stc
adc
adc
and
add
add
add
and
add
or
adc
inc
pop
pop
or
ins
or
add
pop
or
add
or
pop
pop
xor
sbb
add
call
pop
and
add
add
add
jmp
add
add
(bad)
(bad)
inc
je
add
add
sbb
add
call
xor
add
add
add
add
adc
add
add
add
das
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
or
add
push
popa
inc
add
add
add
add
sbb
sub
adc
xchg
and
or
or
add
add
and
add
push
pop
pop
or
pop
or
or
pop
sub
jns
(bad)
call
add
sahf
add
add
in
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
jnp
add
sub
jne
(bad)
inc
adc
add
clc
add
add
xor
add
add
add
push
sub
inc
or
add
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
js
add
outs
add
add
jl
add
adc
add
add
mov
or
push
and
add
add
sub
pop
push
popa
inc
add
add
add
adc
mov
adc
and
add
add
cmp
(bad)
jmp
and
add
or
add
add
data16
(bad)
inc
pop
pop
or
and
pop
or
or
add
push
(bad)
(bad)
dec
sbb
adc
add
add
xchg
pop
adc
aaa
(bad)
(bad)
call
add
pop
sub
pop
je
add
add
adc
add
(bad)
(bad)
call
xor
fiadd
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
sub
add
jle
add
adc
add
inc
add
add
add
add
add
test
add
or
add
inc
add
add
add
add
add
sar
add
es
adc
sbb
add
popa
pop
push
pop
push
popa
inc
add
add
add
adc
sub
adc
sbb
add
and
add
or
push
and
add
add
push
pop
pop
or
pop
or
add
cmc
add
add
or
or
xor
push
adc
call
pop
and
add
add
pop
and
adc
inc
je
add
add
adc
pop
or
add
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
cmp
add
je
add
or
add
adc
add
inc
add
add
add
add
add
add
add
add
add
jle
add
sbb
add
mov
add
mov
add
pop
cmp
push
popa
inc
add
add
add
adc
mov
add
add
add
in
pop
or
push
and
add
add
add
mov
add
sbb
and
add
or
add
add
add
add
pop
(bad)
(bad)
inc
pop
pop
or
pop
or
add
pop
adc
aas
(bad)
(bad)
dec
sbb
or
adc
xor
(bad)
call
add
repnz
sub
adc
and
(bad)
inc
adc
add
leave
add
add
add
adc
add
add
add
xor
add
add
or
add
add
add
jno
add
cmp
add
jnp
add
jns
add
cmp
add
dec
add
add
add
add
add
adc
add
or
add
sub
add
sar
add
es
or
pop
or
popa
pop
pop
pop
push
popa
inc
add
add
add
or
cli
adc
adc
nop
add
add
mov
add
sbb
sub
sbb
cmp
(bad)
inc
pop
pop
or
sbb
push
adc
add
(bad)
call
add
add
or
inc
sub
or
inc
add
adc
add
add
add
adc
adc
add
or
add
daa
add
add
add
add
add
cmp
add
inc
add
add
add
pop
add
add
add
add
add
push
or
add
into
push
add
jne
push
popa
inc
add
add
add
adc
mov
sub
sbb
add
scas
add
add
push
add
sbb
add
or
pop
pop
or
jl
add
or
aas
add
add
aam
add
pop
sbb
pop
xor
pop
adc
jne
(bad)
call
imul
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
sub
jns
(bad)
call
xor
add
add
add
add
adc
add
add
add
xor
add
add
or
add
adc
add
xor
add
jne
add
cmp
add
test
add
jge
add
jge
add
add
add
push
add
add
add
add
add
add
add
add
add
cdq
add
add
sub
or
popa
pop
pop
pop
push
popa
inc
add
add
add
add
pop
or
cli
adc
pop
or
push
add
sbb
mov
add
sbb
daa
add
or
pop
or
inc
pop
pop
or
sbb
adc
add
add
cmp
(bad)
call
sub
pop
or
inc
je
add
add
pop
or
inc
add
xor
add
add
add
add
adc
add
add
add
das
add
add
add
or
add
and
add
inc
add
add
add
add
add
adc
add
js
add
add
add
adc
add
pusha
add
add
add
add
add
rol
adc
jmp
or
adc
in
add
xchg
pop
popa
pop
or
popa
pop
adc
push
popa
inc
add
add
add
add
sbb
cli
push
or
or
push
add
sbb
mov
add
sbb
add
or
adc
pop
pop
or
inc
pop
pop
or
pop
sub
sbb
call
or
not
or
inc
sub
add
add
cmp
(bad)
(bad)
call
xor
add
add
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
pop
add
add
add
add
add
inc
add
add
add
add
add
xor
add
inc
add
add
add
pop
add
add
or
pop
push
pop
pop
pop
or
mov
push
popa
inc
add
add
or
add
or
nop
add
add
add
pop
xchg
sbb
hlt
sbb
mov
add
sbb
outs
sub
add
push
pop
pop
or
pop
sub
pop
or
jge
(bad)
call
sub
push
or
jae
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
push
sub
test
xor
clc
add
add
das
add
add
push
jle
add
add
pop
sub
inc
or
add
push
add
add
add
add
add
add
add
cmps
add
add
add
xchg
add
add
add
test
add
add
add
adc
test
add
adc
and
pop
pop
pop
adc
adc
and
add
add
push
add
add
popa
inc
add
add
push
add
add
or
add
and
dec
pop
sub
sbb
add
inc
mov
add
sbb
add
outs
sub
add
or
or
add
inc
pop
pop
or
fwait
add
add
add
loop
add
or
sbb
pop
xor
sbb
add
call
sub
adc
and
adc
pop
cmp
and
(bad)
inc
sub
adc
call
xor
add
add
add
add
adc
add
add
push
sub
add
add
add
add
add
add
add
jo
add
aaa
add
add
add
add
add
add
add
add
add
ja
add
xor
add
rol
adc
pop
pop
xchg
adc
sbb
add
pop
push
popa
inc
add
add
push
add
add
or
add
stc
adc
sbb
add
push
add
sbb
sub
add
or
sbb
add
pop
or
pushf
add
add
loop
add
or
add
sbb
pop
xor
sbb
add
call
add
add
sub
push
and
sbb
inc
(bad)
(bad)
call
xor
add
add
push
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
push
add
add
add
add
add
mov
add
inc
add
add
add
add
add
or
add
rol
pop
or
add
pop
or
add
popa
pop
inc
pop
push
popa
inc
add
add
adc
push
and
add
add
add
add
xchg
adc
pop
pop
xchg
sbb
sub
adc
adc
pop
sbb
(bad)
(bad)
inc
mov
add
sbb
sub
add
or
pop
pop
inc
xchg
adc
and
pop
adc
inc
pop
pop
or
iret
or
add
or
add
sbb
pop
jle
add
add
std
add
add
add
add
std
add
add
pop
pushf
xor
sbb
add
call
or
cmc
pop
je
add
add
pop
or
add
call
xor
cli
add
add
add
jle
add
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
movs
add
add
add
xchg
add
es
or
add
adc
and
add
add
add
add
popa
pop
ja
push
popa
inc
add
add
add
adc
stc
adc
adc
push
xchg
adc
and
add
add
jp
(bad)
inc
mov
add
sbb
add
or
pop
or
add
inc
pop
pop
or
fs
add
hlt
push
add
or
sbb
pop
xor
adc
and
add
add
(bad)
(bad)
call
sub
adc
pop
daa
xchg
pop
outs
pop
adc
inc
je
add
add
adc
and
add
add
add
add
inc
add
xor
add
add
add
add
adc
sub
add
or
add
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
loopne
xchg
xchg
pop
retf
rol
in
rol
in
aam
in
aad
in
(bad)
xchg
pop
xlat
xchg
pop
fadd
in
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
add
add
add
add
add
xor
add
add
xor
xor
bound
add
add
add
add
xor
add
add
xor
xor
bound
add
add
sub
add
add
add
add
xor
xor
bound
add
add
add
push
add
adc
add
add
add
xor
xor
bound
add
add
popa
add
adc
add
add
add
xor
xor
bound
add
add
mov
add
xor
add
add
xor
xor
bound
add
shl
add
add
add
xor
xor
bound
add
add
xor
add
add
xor
xor
bound
add
add
or
add
xor
add
add
xor
xor
bound
add
add
xor
add
xor
add
add
xor
xor
bound
add
add
pop
add
adc
add
add
add
xor
xor
bound
add
add
xchg
add
add
add
add
add
add
add
into
mov
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
inc
and
popf
pop
xchg
ins
fwait
xchg
ins
(bad)
(bad)
lods
leave
(bad)
jg
loope
jg
or
dec
ror
inc
jge
jbe
ret
int
call
shl
(bad)
mov
and
jo
rcl
pop
mov
mov
mov
call
xchg
jge
sbb
movs
xchg
dec
and
mov
sub
xor
ins
in
cmp
js
or
xchg
and
push
sub
mov
dec
shl
in
fsubp
mov
or
fisttp
xor
jnp
jle
jno
gs
sub
retf
inc
inc
shl
stc
ret
mov
es
das
inc
sbb
mov
fwait
jg
jnp
jmp
retf
fs
xchg
loopne
imul
pop
sub
adc
daa
mov
enter
js
mov
add
push
ret
lock
clc
imul
pop
mov
cld
ret
xor
cli
cmp
out
movs
fsubrp
mov
pop
and
(bad)
addr16
cmp
sub
mov
jne
stc
iret
push
repz
stc
adc
mov
cmc
mov
pop
je
loope
shr
inc
movs
ins
adc
and
enter
xchg
aaa
dec
loopne
push
mov
xor
into
pop
fsubr
pop
push
jns
aam
sub
ins
mov
lea
je
mul
aam
mov
add
rcl
cs
pop
mov
sub
jecxz
cld
mov
ins
pop
aam
xlat
push
cmp
mov
shl
inc
(bad)
add
add
pop
cmp
add
jle
pop
sahf
dec
adc
loop
faddp
fcomp
mov
mov
ds
stos
aad
ret
daa
or
xor
out
adc
test
adc
aad
mov
ret
jmp
mov
mov
mov
adc
imul
in
bnd
aam
enter
xchg
jg
loopne
inc
mov
xor
test
int
mov
sbb
mov
xor
in
es
lds
outs
out
add
jmp
pushf
dec
xchg
and
add
push
inc
adc
push
xchg
popf
scas
lock
std
fidiv
jb
mov
mov
es
jecxz
fstp
sbb
cwde
retf
adc
sti
jne
bound
inc
ss
ja
sbb
fwait
sti
xor
lds
cmps
scas
jo
out
cdq
push
stos
push
shl
xor
pop
cdq
adc
or
xlat
clc
ds
inc
jge
mov
jmp
sar
pushf
sbb
sub
outs
xchg
push
ins
dec
xchg
(bad)
jge
mov
mov
std
and
imul
mov
pop
int
hlt
xor
stos
enter
js
stc
fs
sbb
pop
sbb
jns
push
aas
test
mov
push
rcr
mov
jno
fistp
jne
mov
(bad)
mov
jecxz
repnz
inc
(bad)
mov
ret
imul
into
cmp
push
clc
repz
jbe
push
jmp
dec
sar
fs
inc
mov
ret
mov
add
loop
dec
pop
xchg
cli
push
lea
push
mov
xlat
mov
mov
cmp
pop
sub
out
shl
mov
cmp
pop
jge
xchg
xchg
dec
cwde
fist
iret
inc
fwait
das
pop
call
jbe
or
mov
mov
mov
dec
sub
imul
pop
mov
mov
cmc
lock
mov
jecxz
jecxz
sahf
sbb
lock
fwait
pop
xchg
pushf
push
mov
stos
clc
mov
mov
push
push
aam
jecxz
cmp
je
ins
aas
mov
inc
push
cmp
pop
dec
add
push
jl
hlt
stos
xor
cli
lea
inc
loope
jp
dec
mov
pop
jbe
push
nop
lock
scas
retf
loop
cmp
aad
mov
xchg
and
cli
cdq
xchg
dec
push
iret
inc
mov
bnd
cmp
outs
sub
jae
inc
mov
stos
jecxz
das
pop
jecxz
(bad)
(bad)
in
hlt
add
inc
cdq
push
and
dec
adc
add
mov
outs
(bad)
movs
jno
mov
lds
sti
or
mov
xchg
jb
add
mov
in
push
les
mov
mov
clc
mov
cld
xchg
mov
mov
repnz
iret
(bad)
mov
dec
mov
into
dec
addr16
fisubr
xor
jg
stc
gs
mov
jmp
in
in
inc
cwde
mov
xor
je
jmp
mov
rcl
inc
data16
and
popa
(bad)
or
(bad)
dec
cwde
hlt
data16
(bad)
pop
out
popa
sub
inc
(bad)
or
sub
jge
jno
jae
sbb
inc
scas
retf
mov
dec
mov
cmc
arpl
mov
mov
jb
adc
jae
loope
cwde
ss
jmp
in
cdq
call
stos
movs
ret
jmp
lea
fwait
sti
add
je
fiadd
pushf
int
in
lds
dec
and
xchg
je
mov
push
scas
repz
cld
imul
jge
sbb
push
lahf
mov
jb
fsubp
aam
and
jno
push
lods
and
jne
mov
sub
adc
dec
push
int3
cmp
mov
adc
inc
sub
js
ins
or
ja
sub
dec
jmp
dec
lods
pushf
lods
sbb
push
add
lods
mov
int3
adc
xchg
mov
hlt
xchg
es
daa
adc
xchg
in
cmp
jmp
sbb
pop
fnstcw
cmp
and
inc
cmp
add
jne
or
push
inc
clc
inc
outs
xor
test
pop
int
pushf
jbe
adc
xchg
jle
sub
lds
pop
jae
mov
jl
mov
pop
and
sbb
and
pop
cmp
cdq
jbe
and
retf
dec
repz
mov
imul
inc
je
push
rcr
movs
xor
outs
test
sub
inc
adc
bnd
cmp
loop
pusha
mov
mov
jo
push
xlat
inc
dec
inc
pop
sub
ret
(bad)
imul
(bad)
cmps
ins
fcmovb
jns
scas
add
cmc
lds
daa
and
call
adc
push
push
push
mov
popa
enter
jnp
xchg
mov
sbb
xor
adc
ins
jo
push
pushf
nop
repnz
popa
sar
dec
or
es
nop
xchg
xchg
add
pop
ror
sub
inc
movs
sbb
mov
pop
push
inc
add
and
test
pushf
pop
cmps
ja
add
push
mov
(bad)
outs
xchg
enter
cli
jae
and
push
movs
add
xor
push
push
pop
or
cli
call
aad
sar
shr
or
ret
xchg
test
push
scas
scas
daa
(bad)
sbb
pop
sbb
aad
xchg
cmp
aad
gs
adc
lock
mov
xor
jmp
mov
pop
(bad)
pop
pop
dec
je
push
aam
adc
or
fwait
dec
xor
lods
add
fwait
pop
push
mov
xor
sub
daa
aad
adc
pushf
jmp
call
(bad)
int3
dec
lods
test
frstor
push
daa
scas
(bad)
into
mov
sbb
sbb
push
hlt
aas
adc
fucomp
adc
mov
xor
push
mov
push
jne
sahf
jae
and
sbb
in
push
dec
clc
dec
cmp
test
lock
mov
inc
rep
dec
xchg
imul
jp
mov
neg
jge
adc
sar
dec
or
ret
push
mov
aas
out
or
mov
xor
dec
gs
jg
ret
stc
xor
cmp
or
or
not
popf
ror
(bad)
in
jns
stos
inc
inc
adc
ins
in
test
or
popf
icebp
clc
daa
cmp
dec
jp
xchg
mov
pop
xchg
out
sub
ja
push
(bad)
(bad)
push
cmp
out
jo
xor
mov
sub
xchg
dec
xchg
sbb
mov
add
hlt
jmp
sti
mov
movs
mov
sbb
push
jnp
xor
adc
aam
mov
frstor
and
mov
add
in
xor
mov
pusha
div
les
test
gs
in
xchg
jmp
adc
mov
jmp
or
mov
cmp
bnd
movs
pop
xor
out
mov
and
adc
pop
push
sahf
inc
push
popf
pop
fsubr
sbb
jecxz
jp
pop
shl
nop
dec
fwait
imul
xchg
xor
in
bndstx
cmp
gs
jae
xor
fisttp
add
mov
jns
dec
jnp
mul
test
iret
cmp
nop
mov
lock
cld
inc
mov
inc
push
out
mov
test
cwde
in
pop
cmps
ret
cmp
cmp
ret
dec
inc
jnp
xchg
fiadd
xlat
retf
xchg
jmp
mov
and
jb
shr
ret
repnz
(bad)
and
ds
addr16
mov
cmp
pop
and
pop
test
dec
add
frstor
push
aam
or
push
sub
int
dec
jb
lods
xor
imul
xchg
out
movs
fld
pop
sahf
xchg
movs
outs
jp
sub
xor
xchg
mov
pushf
loop
bound
gs
cmc
cmp
xor
sbb
adc
ss
push
sub
js
jl
(bad)
loopne
sbb
cmp
xchg
test
fwait
mov
mov
rol
jo
or
movs
fdivrp
loope
inc
xlat
ja
leave
add
sbb
icebp
nop
jmp
jns
adc
or
ins
inc
iret
pop
sbb
dec
dec
js
(bad)
out
xlat
ins
movs
fst
pop
mov
jecxz
add
add
scas
or
mov
ja
lods
outs
sti
hlt
mov
cmp
fild
arpl
pop
sub
adc
icebp
mov
xchg
rol
xchg
xchg
cld
ss
in
and
mov
int
push
jnp
inc
rcl
or
dec
clc
aad
mov
and
jnp
cmps
xor
in
je
inc
cmps
mov
pop
xor
fwait
test
in
and
cmc
dec
xchg
test
outs
fst
mov
bound
add
test
mov
shr
sub
mov
ror
sbb
ja
mov
inc
stos
mov
push
ficomp
jg
jne
ret
fnstsw
stos
xchg
fnstsw
push
(bad)
cwde
cmps
fidiv
out
sbb
stos
add
enter
movs
xor
sahf
jo
idiv
repz
push
js
in
add
les
xchg
mov
xchg
push
cmps
pusha
into
repz
test
mov
pop
ins
jecxz
aaa
mov
kunpckbw
pop
mov
and
jbe
out
jns
fld
or
lahf
and
push
dec
mov
jns
aas
adc
inc
push
pop
jb
in
les
pop
aaa
push
xchg
add
cmps
sbb
and
movs
cmp
(bad)
xchg
xor
fcomp
retf
sbb
mov
or
dec
cld
dec
push
jmp
pop
add
sti
xor
loopne
pushf
rcr
fistp
xor
loop
adc
repnz
pop
icebp
add
mov
and
aas
aad
push
or
data16
mov
lock
adc
pop
in
mov
mov
cmp
jg
scas
inc
jno
jae
pop
inc
mov
xsaves
vlddqu
inc
adc
xchg
or
imul
and
or
scas
cwde
stc
fild
repnz
and
daa
lods
call
pop
xchg
mov
fs
jbe
out
jae
and
mov
clc
loop
loopne
jnp
ins
(bad)
fild
lock
and
addr16
stc
fdivr
inc
dec
add
js
not
and
push
sub
add
(bad)
hlt
inc
jmp
xchg
pop
sub
fcmovu
fld
jb
outs
mov
dec
jbe
imul
mov
xor
test
adc
pop
mov
and
fisub
test
dec
aad
mov
pop
lds
icebp
ror
xlat
cmovne
cmp
sbb
jno
xchg
dec
ror
add
gs
mov
test
mov
inc
and
fild
out
and
xchg
pop
xor
dec
pop
cmp
test
pop
test
loope
sbb
jmp
add
jmp
or
ret
test
mov
inc
add
and
loope
sbb
mov
mov
sub
ret
idiv
sbb
mov
add
addr16
movs
and
stos
int
sbb
pop
push
jb
mov
sub
add
retf
lods
(bad)
iret
xchg
or
loopne
mul
adc
or
js
mov
in
ss
stc
(bad)
lahf
stos
jbe
loopne
jne
push
cmp
xchg
fisubr
pop
aam
(bad)
fistp
mov
pop
xchg
stc
mov
(bad)
into
cmp
test
mov
sub
and
xchg
leave
rcr
dec
cmps
pop
js
or
shr
cmc
xor
and
pop
and
pop
xor
mov
popa
sbb
dec
adc
inc
add
out
xchg
jge
cdq
in
iret
sar
mov
movs
test
jae
in
loopne
xchg
bound
pop
arpl
fcom
jae
fcmovne
scas
outs
or
inc
pop
inc
inc
xchg
inc
fisttp
cmps
fistp
adc
add
lahf
mov
xchg
std
ret
mov
dec
sti
cs
fs
(bad)
cmps
jecxz
inc
in
add
pop
icebp
test
hlt
mov
cwde
mov
iret
xchg
sbb
xchg
jb
jo
xchg
adc
stos
dec
rcl
popf
aas
pop
add
add
stc
lods
pop
mov
cmp
dec
xchg
mov
inc
outs
out
xor
ss
bnd
cmp
pop
fsubr
out
fchs
rcr
sti
in
ds
sbb
fcomp
out
inc
ins
dec
inc
retf
jmp
(bad)
cmp
inc
lea
push
xchg
sub
inc
jb
(bad)
xchg
sub
pop
cmps
mov
pop
xor
into
(bad)
lock
ins
lods
arpl
inc
xchg
pop
ja
mov
sbb
sub
lods
addr16
pusha
addr16
xchg
sub
push
cmp
test
fild
pop
lods
jae
xor
cmp
fcomp
sbb
lea
stos
stc
dec
pop
lea
mov
jmp
push
stos
loopne
ja
pop
rcr
loope
xchg
mov
push
mov
xor
out
cmp
xor
gs
and
adc
icebp
adc
push
es
fs
push
xor
push
mov
mov
adc
push
and
je
daa
lods
push
cmp
out
sbb
out
mov
and
retfw
sub
les
(bad)
(bad)
aam
(bad)
mov
pop
adc
loopne
(bad)
cmp
or
push
dec
mov
inc
cli
jle
add
xor
out
add
or
bound
(bad)
adc
sbb
cmp
add
retf
mov
sub
or
iret
rcl
xor
das
jae
fild
arpl
mov
lock
adc
sub
inc
push
inc
jg
in
pop
xchg
scas
add
(bad)
test
stos
or
cmp
inc
mov
loope
or
rol
and
rcr
mov
test
cmps
hlt
retf
loope
jecxz
lods
inc
jae
mov
cmps
sbb
or
rol
xchg
gs
in
sar
xchg
cld
sub
or
(bad)
jns
push
inc
mov
out
push
jb
daa
(bad)
pop
jp
fdivr
jns
call
mov
jns
xor
xchg
push
imul
ret
dec
mov
addr16
sub
sbb
jb
inc
repz
and
scas
(bad)
push
jns
push
test
nop
out
cmp
aam
leave
dec
retf
sar
pop
and
mov
dec
xor
ret
dec
movs
xchg
and
imul
loopne
adc
push
aaa
push
je
mov
cmp
fsubp
inc
mov
retf
in
gs
rol
dec
stos
scas
sar
push
in
lock
jnp
fwait
xor
dec
idiv
jp
dec
icebp
in
call
ja
inc
or
imul
jae
push
pop
xchg
fdivp
ins
sub
cmp
push
or
das
xchg
arpl
pop
cwde
xor
jg
cmp
adc
jb
add
xchg
mov
fiadd
sub
bound
(bad)
cmps
test
dec
mov
add
lea
push
shl
jmp
out
jge
mov
test
pop
mov
inc
(bad)
pop
sahf
or
push
sub
dec
adc
adc
fstp
movs
mov
add
fadd
cvtps2pd
push
int
jecxz
jp
mov
pop
jbe
sub
mov
ds
lea
out
inc
xchg
loope
ror
ror
fdivr
lea
mov
adc
shr
ror
js
and
into
imul
pop
sar
sbb
aas
repnz
test
addr16
imul
lahf
push
dec
mov
inc
adc
popf
xor
pop
outs
imul
and
test
fs
pushf
mov
mov
stos
out
add
xchg
sub
out
stc
adc
mov
dec
add
dec
or
not
ja
sti
shl
jle
aaa
les
fisubr
pop
(bad)
xchg
and
mov
inc
cmc
inc
cmp
sbb
sbb
xchg
pop
or
(bad)
shl
dec
jp
icebp
les
movs
(bad)
add
iret
sbb
fstp
sbb
jne
and
not
je
aas
dec
xor
out
jno
sbb
sbb
and
ja
xor
push
mov
not
sub
loopne
ds
movs
adc
dec
adc
aaa
outs
cmc
clc
dec
dec
retf
rol
cmp
cli
jge
fnstcw
sbb
xchg
inc
jne
cmc
sti
in
imul
and
cdq
jo
ins
imul
xor
mov
jmp
out
xchg
xchg
sahf
ins
daa
retf
mov
and
dec
sub
jecxz
and
and
and
add
jl
in
icebp
lods
jge
ins
xor
shl
pop
js
xor
clc
pop
push
leave
daa
int
add
mov
xchg
xlat
lods
out
xlat
movs
rcr
movs
xlat
jle
(bad)
jge
sahf
and
add
cs
in
xchg
adc
fldcw
jno
add
jge
paddsw
clc
sub
add
adc
sub
cmp
out
fild
ins
pop
repz
inc
push
out
ficomp
addr16
push
mov
cmp
xchg
idiv
jae
sub
xchg
fdivr
sti
popa
push
popa
pop
mov
lods
and
je
jmp
test
cdq
pop
cmp
ds
cmp
push
add
mov
aam
xchg
push
pop
cli
test
and
mov
out
xchg
cmc
xchg
into
scas
ja
sub
mov
das
push
rol
push
test
pop
stos
dec
sbb
sbb
sti
(bad)
fiadd
jne
add
hlt
leave
pop
and
les
add
neg
lock
test
fadd
aam
daa
loope
xor
in
push
std
cbw
adc
mov
jmp
ret
pop
cmp
mov
xor
retf
mov
vlddqu
(bad)
leave
call
movs
int
add
add
pop
mov
mov
push
je
outs
iret
and
ins
adc
inc
cmp
jge
or
sbb
mov
(bad)
jecxz
test
ja
gs
or
pushf
movs
cs
pop
mov
push
mov
imul
ds
mov
or
shr
push
imul
jnp
mov
cmc
jb
xlat
mov
pushf
and
into
xor
push
adc
sub
cmp
adc
fdiv
mov
hlt
(bad)
push
in
ss
ins
aaa
pop
bound
add
add
dec
rcl
adc
ficom
adc
jp
and
add
xor
push
dec
sahf
pop
shl
ret
fiadd
add
(bad)
jo
lds
inc
inc
push
pop
stos
xchg
pop
aam
sbb
(bad)
fimul
jmp
imul
adc
jne
sbb
dec
adc
and
imul
jmp
and
jbe
xor
fstp
cli
aaa
ins
mov
les
std
(bad)
mov
mov
test
pop
stos
xchg
adc
in
bound
cs
pop
data16
push
push
add
jae
lods
mov
sbb
push
ret
scas
xchg
test
cmp
xor
leave
fcmovbe
cmp
and
aad
jb
cmp
xor
pop
sbb
and
sub
stos
dec
jno
(bad)
mov
das
jne
out
pop
cdq
push
fstp
xchg
jg
jns
mov
push
rol
shl
ror
jle
jmp
push
in
push
mov
cmp
lods
js
cmp
cmc
rol
les
jmp
leave
push
ss
fbld
jbe
fidiv
ds
clc
mov
mov
jg
loope
loope
inc
shr
xchg
jbe
icebp
mov
retf
daa
das
imul
mov
mov
mov
xchg
(bad)
hlt
xchg
out
adc
adc
mov
(bad)
popa
inc
push
in
scas
inc
sar
ret
xchg
sub
enter
xor
sbb
sub
jae
stos
lods
shl
and
scas
pop
retf
pop
pop
movs
xchg
xor
lock
add
pop
jle
inc
pop
ja
xchg
dec
loope
mov
and
mov
jno
(bad)
outs
ret
xor
inc
add
and
adc
xor
dec
loop
imul
vcvtpd2dq
xor
pop
mov
test
pop
push
dec
imul
and
jb
push
dec
shr
push
sub
popf
dec
push
fdiv
mov
ss
outs
push
mov
sbb
mov
mov
or
int
data16
pop
loope
mov
xlat
mov
ins
adc
push
jmp
jl
and
inc
stc
aam
mov
sbb
dec
adc
test
nop
dec
inc
loop
scas
pop
sbb
mov
push
int
xor
xor
dec
pop
xor
ss
sbb
xor
or
stos
bound
in
in
cli
test
inc
sbb
inc
mov
loopne
cmp
aam
js
jmp
loopne
imul
sti
pop
(bad)
dec
fist
aas
xor
imul
(bad)
pop
cmp
addr16
dec
test
lds
mov
mov
push
test
push
(bad)
ins
cmp
dec
js
or
xchg
jp
iret
stos
das
add
cmps
add
mov
xor
pop
enter
or
cmp
pop
rcl
mov
in
cmps
mov
jmp
sbb
jnp
mov
aas
dec
test
jmp
and
out
sub
rcr
cli
mov
call
ins
push
jmp
fnsetpm(287
out
mov
push
inc
or
dec
int
shr
shl
das
das
popf
test
repz
and
add
or
scas
cmp
(bad)
sahf
out
fcom
dec
ret
es
cmp
adc
add
movs
cs
clc
inc
mov
in
adc
xchg
loope
mov
cmp
ffree
test
push
xor
mov
ds
fucomip
mov
lods
aas
nop
jge
add
sub
cs
stos
cwde
sbb
pop
cmp
xchg
push
pusha
dec
jecxz
jnp
or
jae
ja
push
mov
daa
arpl
dec
jb
xchg
in
cmc
push
dec
push
pop
mov
mov
pop
and
inc
loop
fs
dec
clc
cmp
sub
ss
loop
jge
lock
mov
push
mov
shl
(bad)
repnz
aas
mov
push
pop
sub
xchg
and
pushf
jo
xchg
sbb
sbb
bound
scas
call
movs
dec
cdq
and
push
outs
jmp
sub
hlt
mov
call
mov
(bad)
aam
sub
cwde
push
sar
loope
push
fist
push
rol
add
or
es
xor
cmp
jl
dec
pushf
(bad)
cli
add
pop
sahf
sahf
test
pop
fisub
fwait
not
xlat
fisttp
inc
mov
xlat
jl
mov
test
inc
(bad)
popa
lods
stos
fld
je
push
sub
outs
(bad)
or
cli
inc
mov
into
pop
push
jle
sar
cmc
jno
arpl
and
jbe
adc
int3
lea
ja
push
callw
rcr
mov
add
push
jge
stos
(bad)
adc
add
cld
aas
add
out
pop
sbb
adc
push
fisttp
inc
gs
(bad)
jge
sbb
sbb
or
mov
(bad)
push
jae
mov
call
fadd
xlat
lods
pop
mov
add
repz
add
nop
lea
(bad)
ret
shl
scas
sub
add
pop
add
(bad)
pusha
lea
scas
frstor
or
int
and
pop
mov
inc
jno
and
(bad)
push
and
xor
or
xor
pop
xor
lea
sar
test
stos
aad
int3
dec
(bad)
scas
cli
lahf
dec
mov
sbb
xor
adc
mov
lahf
jo
or
sbb
retf
js
inc
retf
sub
inc
xor
rcr
and
push
dec
shr
mov
dec
aaa
loopne
in
mov
sub
and
mov
popa
cmp
sahf
mov
(bad)
push
cs
cmps
aad
jge
adc
push
mov
inc
push
push
and
or
in
cmps
mov
pushf
test
cmp
fst
outs
mul
(bad)
xor
imul
dec
shl
stos
sbb
cmp
sar
jl
ja
xor
cmp
daa
xchg
dec
mov
in
imul
push
dec
inc
sbb
mov
in
pop
cmps
sbb
xlat
and
mov
jns
sbb
mov
dec
or
pop
daa
mov
sahf
xor
fisttp
mov
bound
daa
inc
les
or
loope
in
push
ins
and
lods
jl
lea
mov
jae
or
movs
ret
xlat
cwde
dec
push
mov
cmp
daa
mov
ins
ror
dec
dec
scas
gs
sbb
fistp
adc
jge
add
gs
adc
xchg
fsubr
jmp
out
xor
cmps
loopne
xchg
adc
sbb
jle
out
mov
imul
cmp
push
sbb
mov
sub
enter
sti
call
push
sbb
xor
pop
cmp
call
ss
jp
xlat
gs
mov
xchg
add
(bad)
and
shr
add
pop
scas
add
inc
mov
push
and
out
out
bound
imul
hlt
dec
xchg
and
outs
lods
outs
iret
push
fadd
xchg
pop
xchg
push
jb
lods
es
in
adc
in
stos
pop
aas
push
jge
add
and
cmp
and
mov
icebp
jnp
inc
loope
cmp
cmp
cmps
bound
int3
in
sahf
cmp
into
jne
popa
sbb
cmp
fld
jne
into
jno
movs
mov
outs
gs
fimul
pop
retf
icebp
iret
xlat
ins
cdq
cs
mov
imul
sbb
sbb
shl
lods
out
xchg
call
mov
or
dec
cmp
mov
jle
gs
dec
sti
pop
das
adc
mov
dec
repnz
mov
mov
icebp
(bad)
mov
push
jno
in
js
mov
pop
in
retf
sub
(bad)
out
shr
cmp
mov
sbb
cli
repz
into
mov
sub
in
out
popf
fnstenv
push
cdq
call
xchg
push
enter
adc
retf
xor
xchg
inc
jg
cs
in
push
pop
xchg
mov
mov
push
mov
repz
js
mov
js
es
test
xchg
dec
push
fidivr
stos
inc
jp
and
mov
sub
ds
jmp
das
dec
mov
ret
mov
jmp
or
sub
mov
daa
mov
pop
mov
popf
mov
push
ror
std
or
mov
jge
jl
add
jmp
push
call
xchg
push
iret
(bad)
push
inc
cwde
call
pop
cmp
outs
adc
push
daa
or
test
add
ret
sub
(bad)
shl
dec
xchg
or
mov
cmc
add
cdq
ss
mov
imul
mov
sub
and
cwde
sbb
jb
mov
mov
xor
push
enter
out
rol
mov
and
or
sub
jnp
stos
scas
add
mov
in
xchg
cs
test
int3
sbb
std
js
and
inc
sbb
out
jb
test
shl
inc
shl
inc
lea
sbb
push
xor
jb
call
push
sbb
xor
stos
shr
(bad)
xchg
push
das
adc
test
icebp
or
sar
or
iret
push
dec
inc
push
sbb
cmps
icebp
pop
jp
adc
int
mov
call
sbb
lods
push
outs
add
sbb
push
lds
adc
push
in
lahf
imul
add
sbb
mov
add
stos
adc
das
cmp
inc
in
xchg
pop
mov
jecxz
das
fcomp
push
std
jge
mov
xor
push
sahf
sub
cmp
pushf
adc
inc
ret
jo
pushf
jno
jmp
push
cmp
rol
inc
add
mov
ins
add
rcl
iret
jg
dec
jno
fdivr
add
test
inc
es
dec
xchg
xor
mov
mov
scas
scas
call
mov
cmp
or
jmp
or
pop
call
hlt
test
fwait
daa
neg
sahf
adc
add
std
inc
xchg
hlt
mov
pop
or
jns
push
jg
pop
push
aas
push
in
(bad)
std
fs
(bad)
add
ret
mov
mov
imul
push
inc
push
sbb
ret
(bad)
sub
or
std
popa
outs
test
stc
lods
mov
sbb
repz
jg
pop
sub
cmps
je
cmp
jle
in
outs
test
mov
dec
inc
sbb
sub
fbld
mov
sbb
dec
jno
mov
jge
mov
xchg
daa
enter
fild
or
push
mov
sub
outs
test
sbb
sub
inc
mov
pop
ins
ja
xchg
pop
(bad)
mov
ret
sub
cmps
mov
nop
aaa
cmp
push
ret
mov
retf
dec
loopne
mov
mov
ss
fwait
jmp
sub
retf
push
inc
xlat
sub
sub
out
jns
mov
repz
xor
inc
adc
push
std
jae
scas
outs
and
shr
cmps
xchg
(bad)
iret
cmp
cwde
jbe
dec
adc
push
ret
xchg
sub
jge
js
sti
xchg
add
inc
xchg
mov
and
mov
push
rcr
dec
mov
shl
dec
xlat
ins
lods
sub
aaa
mov
push
and
inc
mov
lods
inc
(bad)
movs
icebp
mov
add
rcr
or
mov
mov
jle
xor
and
mov
push
and
sub
(bad)
cli
sbb
arpl
mov
int
data16
cwde
test
test
ja
rcr
push
jmp
lds
push
je
pop
pop
jae
sbb
clc
in
loop
lahf
nop
sub
int
mov
dec
inc
aaa
mov
mov
aam
sbb
shr
jle
ins
push
es
stos
ss
popf
pushf
inc
mov
imul
repz
xchg
xchg
xor
sahf
clc
scas
sub
dec
push
push
mov
mov
dec
xchg
mov
mov
mov
mov
addr16
jae
scas
ret
movs
jae
push
enter
or
dec
mov
fldcw
jne
daa
int
mov
fdivr
in
sti
pushf
and
push
lahf
bndstx
mov
jns
mov
(bad)
lds
mov
jne
jno
jbe
mov
lds
push
or
xchg
jp
jmp
into
sbb
ins
jmp
(bad)
lods
clc
lock
cmp
fwait
dec
pop
and
cli
je
push
sti
int3
sub
das
jb
(bad)
shl
ret
mov
xor
sahf
xor
mov
bound
dec
popf
dec
adc
mov
xchg
push
sbb
(bad)
fistp
je
fstp
jbe
xchg
in
or
mov
xchg
push
sub
add
push
add
iret
sub
(bad)
mov
call
cmp
daa
cmp
cmps
and
popa
fwait
sub
test
sbb
and
sbb
mov
iret
adc
pop
sti
push
push
ficomp
mov
sbb
push
test
aam
mov
out
dec
sbb
test
mov
in
adc
inc
xchg
sub
jmp
mov
or
adc
jo
inc
pop
cmp
outs
into
dec
lods
andps
enter
xor
and
call
das
dec
xor
adc
xor
xor
mov
or
dec
repnz
int3
shl
cmp
fsub
mov
adc
sub
(bad)
inc
stos
(bad)
cmp
inc
mul
cdq
pop
into
std
add
push
(bad)
xchg
in
das
xor
cmp
shr
push
(bad)
movs
std
cld
xor
push
(bad)
(bad)
adc
xor
arpl
sar
mov
and
xor
xor
int3
push
cmp
cmps
clc
mov
aas
leave
cmc
jb
sub
dec
xlat
retf
push
retf
enter
xchg
icebp
push
ret
add
xchg
add
push
repz
cmps
mov
inc
stos
jb
aam
jne
stos
cmp
xor
push
xchg
dec
pop
enter
inc
cmp
mov
ss
mov
js
jns
in
jle
rcl
stos
jno
int3
or
xchg
jle
jno
imul
cmp
fld
jmp
mov
(bad)
scas
ret
(bad)
ret
pop
je
or
gs
push
enter
cmps
inc
push
pop
sub
add
xchg
enter
data16
mov
je
fsubp
adc
jno
fld
inc
and
or
inc
fsub
cmp
mov
add
popa
hlt
jno
pop
dec
call
jp
loopne
sbb
scas
imul
std
(bad)
mov
push
sti
in
nop
stos
leave
jae
test
cmp
jnp
hlt
mov
xchg
mov
into
pushf
sub
(bad)
jmp
(bad)
jge
push
xor
into
push
repnz
test
scas
and
dec
ficom
movs
mov
xchg
stc
je
jbe
xchg
stos
jae
add
push
shl
loop
or
add
shr
retf
clc
std
pop
cmps
push
je
add
jp
ret
or
add
int3
push
jp
add
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
add
jmp
xchg
hlt
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
inc
sbb
fwait
mov
mov
lods
jnp
ins
xlat
mov
(bad)
mov
pop
(bad)
sti
sbb
out
iret
cmp
add
sbb
inc
jmp
mov
pop
and
mov
shl
out
aas
loope
sti
in
inc
cmp
dec
xor
lock
dec
mov
pop
pop
pop
repnz
push
out
cmp
lods
scas
pop
pop
xchg
mov
leave
or
icebp
cmc
and
sub
pop
and
adc
and
dec
sub
bound
shl
out
cmp
mov
hlt
(bad)
sbb
call
imul
iret
and
and
dec
and
jg
adc
fdiv
fs
and
int
retf
nop
inc
jmp
mov
scas
sbb
mov
lods
je
push
xchg
push
xchg
pop
(bad)
std
xchg
std
inc
push
or
xchg
rol
outs
shl
cvtps2pi
cs
adc
add
mov
xor
sbb
imul
(bad)
loope
sbb
pop
sub
xchg
pop
ja
or
enter
shr
test
stos
sub
in
jp
cmp
aam
add
arpl
cmp
aad
fstp
into
inc
(bad)
arpl
mov
inc
mov
loope
push
add
jnp
ret
not
movs
shr
mov
adc
inc
sub
and
daa
daa
ins
cld
clc
or
icebp
fld
add
movs
sub
inc
cs
xchg
mov
inc
sbb
and
and
or
inc
nop
mov
das
adc
push
cmps
xchg
(bad)
dec
sub
and
push
dec
rcr
mov
int
mov
sub
push
ret
pop
les
mov
retf
gs
rol
jnp
mov
xchg
in
jecxz
leave
pop
sbb
mov
stos
enter
fist
imul
inc
retf
inc
repz
or
hlt
out
dec
loopne
xor
addr16
mov
dec
mov
out
mov
jns
rcl
cwde
shl
xchg
jns
xor
outs
sub
sbb
xor
xchg
out
sbb
mov
or
jne
pop
in
and
div
push
cs
xor
arpl
mov
(bad)
jmp
lds
sbb
leave
ja
ret
fild
call
out
out
inc
xchg
sub
pop
sub
xor
bound
xor
cmc
imul
jl
mov
aad
call
mov
mov
mov
sub
movs
add
into
iret
sbb
cli
aas
or
aas
scas
ss
iret
das
and
js
aam
xchg
mov
sar
pop
and
xor
add
test
mov
jbe
or
ins
je
ins
stc
ds
pop
stos
xchg
mov
xlat
in
sub
mov
movs
push
pop
adc
cdq
jbe
add
addr16
addr16
sub
cmp
inc
and
xchg
je
ret
or
inc
mov
xor
adc
or
xchg
xchg
pop
in
movs
push
or
icebp
sti
add
int
inc
push
sub
rcr
aad
cmc
stc
pop
into
cmp
cmp
cmps
or
cmp
push
pop
sbb
cmps
aam
ins
call
jo
pop
cli
or
dec
mov
sbb
sbb
jne
lea
xor
lods
into
and
out
(bad)
push
mov
out
or
minps
rol
call
jmp
enter
fsub
ins
neg
jmp
push
sbb
fst
popa
movs
rcr
sar
out
sbb
mov
cld
mov
xchg
push
mov
outs
call
int
pop
and
mov
or
add
mov
jge
pop
js
and
jno
add
aam
push
stc
or
mov
fcmovb
mov
fild
inc
xchg
dec
pop
js
pop
pusha
dec
loop
mov
test
mov
out
jmp
xchg
js
stos
mov
push
adc
and
out
cmp
and
fsub
es
or
jle
bound
sbb
mov
and
mov
cli
fcmovnu
dec
add
retf
mov
and
mov
add
inc
test
lea
jmp
push
mov
into
push
mov
rcr
retf
jnp
cmp
js
cmp
in
pop
adc
inc
movs
fmul
out
shr
push
or
cmp
les
mov
mov
or
inc
dec
cmp
push
mov
cmp
inc
push
jbe
mov
cmp
mov
(bad)
dec
icebp
cmps
add
das
leave
test
out
cmps
push
addr16
test
push
mov
adc
mov
inc
add
in
xor
push
push
push
fiadd
retf
mov
pop
pushf
rcl
movs
mov
add
inc
test
addr16
dec
push
push
in
daa
xchg
jo
outs
jp
add
cld
ja
test
jmp
es
aam
into
or
xchg
inc
xchg
push
xor
(bad)
add
sahf
ins
fs
mov
sbb
repz
shrd
mov
push
pop
xor
test
lods
and
mov
cpuid
pusha
int3
or
cmc
dec
jge
fisttp
cmps
pop
in
jge
push
jbe
jp
sbb
xor
inc
test
imul
or
cmp
xchg
xor
cld
loop
and
outs
js
dec
mov
pop
xchg
div
jl
ficom
je
enter
popa
mov
mul
pop
push
pop
je
mov
xlat
inc
mov
push
push
imul
movs
dec
mov
lahf
stos
push
inc
fild
mov
jne
int3
out
xchg
sar
jecxz
fimul
icebp
js
jle
mov
out
mov
popa
pop
push
iret
lea
dec
daa
cmp
arpl
retf
sbb
push
xchg
ret
scas
fld
mov
inc
cmp
sub
aas
adc
shr
cmps
rcl
push
pop
lods
(bad)
mov
loop
or
ds
dec
leave
fistp
jo
call
adc
in
shl
dec
int3
ja
enter
(bad)
test
add
shl
cwde
(bad)
fnsave
jne
movs
or
cwde
xor
add
lock
arpl
dec
mov
jmp
(bad)
(bad)
fdivr
in
sub
inc
push
xchg
cmc
push
pop
and
loope
popf
test
call
push
ss
gs
fwait
popa
xchg
shr
adc
sbb
jne
mov
fcmovnu
jo
pop
mov
add
jne
jns
xor
jno
push
dec
mov
pop
adc
dec
imul
inc
dec
add
ror
xchg
out
and
mov
add
jb
(bad)
pop
xchg
lahf
rol
pop
xchg
xor
add
scas
inc
out
je
(bad)
mov
mov
je
pop
lods
mov
mov
jmp
or
cmps
xchg
dec
js
es
jb
(bad)
test
retf
je
ins
or
push
cli
mov
cmp
dec
jg
sbb
stos
xor
or
mov
ds
push
shl
xchg
xchg
stos
push
sbb
stos
pop
repz
push
cmp
mov
aas
fmul
sub
mov
pusha
gs
cmp
push
mov
and
stos
cwde
mov
stos
pusha
mov
xor
cmp
or
sub
inc
jl
jbe
mov
cwde
je
mov
adc
mov
xor
addr16
xchg
fwait
mov
sub
pusha
std
jmp
lods
std
push
outs
push
ror
repnz
xchg
jmp
jne
and
jl
scas
fist
dec
mov
mov
ret
lea
daa
pop
sub
mov
test
ror
addr16
pushf
jle
mov
dec
pop
cld
retf
add
out
scas
lea
sti
dec
inc
jo
imul
sbb
es
in
mov
sbb
xor
push
rcl
pcmpgtd
retf
add
xchg
cmc
mov
(bad)
jg
fild
repz
xor
repz
jecxz
(bad)
jmp
mov
pusha
mov
daa
lea
xchg
adc
xor
movs
sbb
xchg
mov
sbb
test
popf
icebp
push
pop
and
dec
mov
xchg
dec
xor
neg
mov
push
test
xchg
jmp
repnz
mov
xor
fild
shr
push
adc
imul
nop
mov
mov
imul
mov
mov
and
mov
daa
fsub
loop
sti
jmp
inc
out
call
or
dec
pop
push
sbb
push
push
mov
test
inc
loope
cmp
sbb
xor
ja
mov
jnp
mov
mul
xchg
mov
jg
fcomi
cmps
sub
dec
cmp
and
push
mov
shl
sub
gs
jns
pop
aam
xchg
or
adc
cmc
mov
xor
stos
dec
sbb
iret
aaa
push
sbb
jb
push
pop
lods
in
jb
call
xchg
add
(bad)
lods
mov
push
mov
xchg
jno
dec
jmp
push
xchg
mov
scas
ja
adc
mov
lea
xchg
shl
fcomp
into
(bad)
fucom
xchg
inc
mov
cmp
test
fisttp
adc
loope
vhsubps
xchg
(bad)
xor
popa
por
sahf
inc
or
add
dec
sub
push
out
mov
ins
dec
(bad)
fsub
pusha
ret
rcl
sbb
repnz
jl
cmp
and
push
or
(bad)
mov
int
scas
ret
popf
mov
aaa
xchg
xchg
add
push
dec
push
inc
retf
inc
jmp
pop
mov
and
ret
ds
mov
imul
bound
outs
out
add
xor
jg
loopne
xchg
cmps
lods
mov
jle
cmp
cmp
mov
pop
jecxz
adc
pop
icebp
push
add
push
jbe
in
retf
mov
loopne
dec
aad
ins
sub
in
out
add
ftst
inc
cmp
not
out
stos
push
add
cdq
retf
frstor
mov
cmp
mov
mov
mov
and
and
mov
pop
xor
pop
and
mov
ret
sbb
enter
add
cdq
sbb
xchg
repz
popa
js
(bad)
mov
enter
out
cmp
test
jb
sub
cmp
lahf
push
shl
push
retf
rcr
sub
imul
push
loopne
or
aam
jo
xor
fld
in
es
adc
test
mov
rol
xchg
pop
(bad)
int
je
in
mov
ret
xchg
and
cmp
shr
xlat
dec
fucom
fcom
or
xor
mov
in
sar
and
mov
sub
lods
xor
out
mov
in
jae
cmp
lods
shr
stos
scas
daa
movs
add
inc
adc
icebp
jp
mov
dec
adc
pop
mov
add
lods
xchg
test
jge
mov
add
inc
inc
popa
mov
mov
std
sbb
fldcw
inc
loope
mov
mov
icebp
not
lea
jno
clc
xlat
aad
or
pop
(bad)
pushf
pop
lea
jmp
push
mov
cmp
xchg
push
call
(bad)
test
sbb
out
loopne
cld
and
cmp
sbb
movs
aaa
into
mov
loop
stos
(bad)
cmp
iret
loopne
sbb
in
in
jl
sub
test
lods
je
xor
pop
sar
mov
and
mov
mov
cwde
dec
adc
dec
test
sbb
add
push
dec
pusha
xchg
(bad)
hlt
sbb
and
sbb
sub
test
call
cmp
data16
add
jmp
sub
pop
jg
mov
push
mov
or
mov
fidivr
xchg
es
hlt
xchg
(bad)
loop
inc
fmul
sti
outs
mov
inc
cmp
inc
lods
sub
jnp
adc
retf
mov
test
jge
dec
jb
cmp
pop
fcomp
xchg
test
inc
pop
jnp
pop
xor
mov
(bad)
cmc
fnstenv
mov
scas
cdq
jg
aam
xor
hlt
fcmove
leave
jno
call
(bad)
fcmovb
test
out
mov
leave
push
pop
add
pop
mov
and
and
cmps
push
lea
cmp
add
ds
and
jecxz
pusha
ficom
test
jb
sub
es
out
fsub
clc
sub
mov
and
fwait
imul
adc
adc
test
add
mov
and
scas
sub
dec
mov
mov
shr
mov
aam
adc
rol
or
lods
or
stc
add
mov
push
sti
ds
push
icebp
aam
sub
test
inc
jnp
mov
inc
popa
mov
push
adc
popf
pop
fsubr
push
(bad)
cmp
pop
push
xchg
push
mov
je
jbe
scas
mov
enter
call
int
callw
inc
push
or
adc
inc
ret
loop
(bad)
mov
lods
std
push
mov
cli
mov
adc
arpl
dec
inc
jb
ds
xor
mov
mov
into
add
popa
sub
pop
inc
inc
pop
inc
retf
dec
retf
enter
leave
fisub
push
fwait
jl
cmps
test
adc
push
les
sub
adc
gs
bound
bound
int
pop
aad
mov
add
shr
retf
div
nop
cli
xor
call
lahf
sbb
fldenv
mov
dec
pop
in
push
popf
push
bound
dec
lods
mov
(bad)
leave
cmp
out
dec
or
mov
call
add
in
hlt
mov
ins
pop
daa
sbb
fdivp
sbb
repz
mov
not
cmp
scas
ret
mov
cmp
cmp
push
inc
adc
cld
xchg
xor
aad
daa
mov
lea
mov
ret
add
dec
mov
movs
or
inc
add
out
sbb
pusha
and
out
push
mov
jmp
shl
sbb
stos
gs
imul
hlt
jecxz
sahf
mov
xchg
cmp
pop
out
pop
cmp
je
movs
sub
es
sbb
pop
xlat
sbb
inc
lock
into
cli
dec
mov
aam
jp
sub
dec
pop
pop
push
icebp
dec
scas
in
pop
or
mov
fisttp
icebp
retf
sub
mov
mov
dec
test
fisttp
and
mov
cwde
(bad)
bound
jmp
stos
jmp
test
pop
xchg
jge
add
sti
cmp
lods
pop
daa
pop
jne
ss
adc
pop
mov
(bad)
aad
inc
fscale
in
ins
sbb
cmp
lods
(bad)
lea
das
and
or
mov
sbb
dec
push
rcl
loope
(bad)
mov
mov
or
mov
dec
int
mov
and
mov
mov
xchg
cmc
call
cmp
repz
fincstp
(bad)
cmp
aas
ss
and
(bad)
sbb
je
ins
fwait
rol
jo
mov
push
ss
mov
loope
dec
stos
mov
or
idiv
mov
pop
or
stc
mov
int3
xchg
mov
lods
jmp
mov
shr
sub
cdq
repz
xchg
faddp
dec
(bad)
(bad)
lea
push
in
iret
or
aaa
enter
in
cmp
icebp
xor
lea
xor
sub
xor
cmp
dec
add
or
dec
repz
jge
icebp
pusha
ss
jl
jecxz
xchg
mov
dec
jb
bound
lds
(bad)
jb
push
stc
aaa
js
pushf
jg
xchg
push
push
rcr
mov
jp
sbb
out
int
jno
and
add
dec
hlt
inc
fld
mov
push
xor
mov
jmp
das
pusha
adc
push
lds
es
fild
dec
fdiv
enter
add
xor
cmc
xchg
bound
xor
sub
dec
cmps
gs
sbb
imul
jmp
or
dec
fisub
test
dec
outs
mov
cs
sti
or
out
push
dec
ret
das
and
push
dec
dec
cld
lahf
and
mov
lea
xchg
mov
jo
out
push
dec
jge
test
jmp
xchg
dec
jmp
icebp
jg
stos
fimul
jg
fwait
call
mov
lock
push
push
or
imul
inc
xchg
cld
and
and
not
cmp
or
pop
sbb
sar
push
dec
out
dec
mov
inc
inc
js
mov
jbe
and
add
scas
lds
jecxz
(bad)
xchg
add
pop
mov
retf
push
mov
jmp
pop
adc
pop
push
adc
mov
pop
rcl
xchg
xor
aam
push
pop
les
clc
push
out
mov
cmps
daa
sbb
call
push
jge
movs
jb
lahf
arpl
xchg
test
imul
xlat
ret
das
xlat
add
push
iret
adc
and
in
jbe
aad
ss
sub
aas
stc
repz
add
cli
xchg
inc
push
add
mov
sub
(bad)
es
mov
int
addr16
test
jge
sub
mov
cmc
fwait
out
and
cmps
and
mov
cli
pop
je
jle
dec
mov
mov
fstp
adc
inc
or
iret
or
sub
inc
data16
mov
iret
inc
sti
sbb
in
xor
mov
call
jecxz
sub
add
mov
movs
push
into
pop
mov
add
mov
pop
lods
out
xor
test
add
inc
sti
pop
mov
dec
add
imul
sar
fnstcw
pop
int
push
xor
push
cld
stc
push
pop
add
dec
and
out
nop
clc
mov
pop
or
cdq
or
cli
scas
out
sub
mov
jnp
mov
xchg
out
sbb
push
dec
les
iret
inc
ret
(bad)
out
xor
jae
mov
adc
cmc
in
mov
xchg
xchg
pop
aad
enter
pop
test
loopne
repz
stos
dec
dec
cli
mov
(bad)
imul
lock
in
cmp
xchg
sbb
sti
fisttp
xor
push
lods
xor
neg
fcmovb
or
ror
(bad)
jbe
cli
xchg
mov
(bad)
sub
mov
out
push
mov
in
push
push
sti
shr
mov
jmp
xchg
dec
inc
xor
push
cmps
test
retf
jnp
pop
outs
daa
xor
fidiv
mov
xor
mov
push
sub
je
pop
stos
mov
lods
push
rol
mov
repz
out
mov
pop
xor
xor
ja
add
movs
push
les
mov
or
push
push
push
or
jbe
sub
nop
mov
fmul
xchg
das
retf
mov
fmul
or
test
sub
popa
pushf
push
fs
jae
push
dec
push
push
inc
fnstcw
popf
xor
or
add
inc
movs
cmp
push
gs
push
cmp
cmps
adc
inc
dec
xor
pop
in
test
pop
repz
cmp
popf
mov
jne
adc
cdq
mov
jmp
and
fimul
paddusb
into
lods
mov
movs
jmp
push
fsub
bound
fadd
fild
lahf
(bad)
bound
fs
test
mov
mov
outs
xchg
rcl
cmp
lea
pop
mov
arpl
mov
mov
ror
jbe
mov
call
xor
repnz
dec
aas
ja
add
addr16
in
fwait
and
fs
push
jg
test
pop
pop
dec
std
inc
js
cmps
dec
int
jecxz
dec
fdiv
cwde
add
mov
push
adc
mov
movs
loop
movs
pop
data16
repnz
mov
in
or
stos
pop
cld
dec
sar
movs
or
mov
nop
pop
je
xchg
fsub
mov
jmp
mov
sbb
call
cmp
and
dec
daa
clc
stos
or
jp
nop
sbb
stos
mov
ss
jg
(bad)
not
dec
jae
push
test
(bad)
pop
test
add
(bad)
(bad)
sbb
xor
lahf
aad
ins
dec
cwde
jns
xor
jge
pop
stos
xor
ret
sti
mov
jmp
in
in
js
push
shr
xlat
mov
movs
repnz
adc
jae
xor
sti
push
cmps
xchg
jae
cmp
pop
jns
mov
stos
pop
xchg
addr16
add
mov
jo
dec
sub
cmps
pop
fsubr
jne
sbb
sbb
jmp
in
inc
inc
(bad)
in
cmp
loopne
dec
xor
sahf
dec
in
inc
stos
mov
push
into
lea
loop
in
mov
push
add
push
sub
jmp
dec
and
mov
or
cli
jb
cmps
loopne
jae
fdiv
ss
push
dec
aam
pop
cld
in
ja
mov
jo
push
retf
(bad)
sub
int3
add
cmp
popa
add
inc
xlat
ins
jae
idiv
sub
popf
sub
jg
xchg
psrlq
sbb
frstor
mov
arpl
adc
add
cmp
in
bound
jp
(bad)
cmp
mov
xor
lods
jno
cmc
cmps
(bad)
mov
jmp
push
xor
sub
add
add
adc
inc
push
fst
mov
pop
popf
fiadd
fs
rcr
or
pop
test
iret
lods
mov
mov
fidivr
inc
stos
cmp
xor
call
ret
fsub
sbb
or
lock
pop
pop
inc
(bad)
in
mov
inc
leave
out
je
je
imul
ins
push
call
dec
or
inc
test
outs
scas
pop
ja
fistp
jno
pop
pop
add
mov
mov
iret
in
ins
(bad)
xlat
ror
out
out
(bad)
mov
mov
movs
repz
pop
shl
sbb
push
add
in
inc
imul
jne
outs
stos
out
mov
cmps
xchg
lock
add
fist
mov
push
mov
xchg
or
cs
arpl
iret
call
pushf
xchg
int3
mov
loopne
fisub
adc
pop
and
test
adc
add
push
xor
shr
shl
hlt
push
addr16
xchg
xchg
gs
jns
ins
pusha
jno
es
or
bts
enter
fcom
in
cmp
xor
jp
in
loopne
adc
xor
loope
push
add
jecxz
ds
popa
or
pop
pusha
mov
push
push
lock
adc
ss
cmp
add
je
or
pushw
int
jo
push
mov
inc
icebp
xchg
sar
xchg
inc
imul
mov
sbb
jmp
movs
xor
hlt
xchg
stos
xchg
sti
out
cmps
into
cmp
and
dec
adc
or
jnp
or
adc
xor
xchg
and
inc
je
(bad)
fldcw
jl
cmp
out
add
jnp
in
bound
jnp
call
cli
sub
iret
lds
in
and
loop
mov
aad
inc
mov
enter
int3
inc
mov
cmp
sub
add
mov
adc
pop
inc
inc
js
push
ins
push
push
adc
call
cmp
add
ret
test
push
sub
mov
mov
jbe
push
neg
loope
mov
arpl
movs
sbb
call
sbb
add
xchg
inc
xor
test
je
das
inc
out
xchg
sub
ret
int3
add
sbb
lea
xchg
or
or
sbb
gs
popf
mov
push
jae
(bad)
fnsave
scas
and
jge
jnp
scas
daa
sti
in
mov
xor
jb
imul
jae
into
pop
push
inc
outs
sbb
bnd
loopne
pushf
mov
fldenv
xor
cld
fdiv
in
push
sbb
xor
jp
pop
mov
js
pcmpeqb
inc
push
retf
pop
ins
dec
inc
sub
out
pop
inc
add
xchg
mov
mov
imul
in
mov
pop
cmp
adc
and
mov
sahf
sub
mov
nop
test
outs
imul
test
lods
jbe
push
cli
stos
or
cmp
rcr
xchg
inc
data16
scas
mov
mov
cmc
xchg
data16
in
aaa
mov
ss
inc
sbb
cmp
fst
(bad)
jmp
and
xchg
in
mov
adc
push
es
adc
cld
mov
mov
leave
lods
retf
daa
lds
(bad)
xchg
dec
jecxz
sbb
in
movs
adc
retf
pop
sbb
dec
adc
mov
add
pop
sub
mov
mov
jbe
pop
jmp
in
std
movs
cmps
retf
pop
adc
or
shl
cmp
popf
(bad)
xchg
and
jp
fistp
movs
js
mov
ret
sti
sar
popa
sub
into
rol
and
mov
mov
mov
dec
xor
lds
icebp
clc
retf
cmp
jecxz
xchg
pop
(bad)
inc
retf
pushf
add
call
and
dec
mov
ja
test
pop
lods
add
jb
aas
stos
mov
fimul
cmp
(bad)
dec
push
pop
outs
(bad)
fmul
lods
jmp
lea
out
popa
jle
ja
aaa
fwait
sub
mov
or
shl
dec
jnp
retf
cmc
leave
dec
scas
jne
sbb
jno
nop
mov
pop
xor
cmps
pop
mov
movs
dec
fcomp
sbb
nop
jmp
ja
dec
mov
cmp
push
aas
cli
pop
sqrtps
aam
fcomp
push
mov
in
addr16
pop
in
xchg
adc
sub
in
push
jb
mov
lock
into
push
movs
ds
(bad)
(bad)
aad
int3
repz
xor
not
xor
cmc
pop
xor
or
shl
mov
mov
fild
sub
xchg
call
pop
xchg
xor
sub
xor
sub
xchg
jo
test
mov
inc
ret
inc
repnz
(bad)
dec
outs
push
xchg
sbb
in
mov
adc
mov
mov
push
mov
bound
fsub
mov
repnz
dec
lds
sub
ret
imul
mov
dec
push
lock
jl
cld
movs
in
cmp
jb
(bad)
jmp
jge
stos
dec
adc
push
test
je
out
push
into
mov
add
push
xchg
add
push
cmp
rcr
push
mov
bound
push
out
sub
cmc
jl
leave
(bad)
mov
mov
cmc
shr
xor
jno
(bad)
addr16
sbb
inc
inc
sub
cdq
inc
enter
jns
cmp
push
xor
mov
jnp
loop
push
jmp
xchg
dec
xchg
and
popa
add
pop
jmp
retf
and
lea
mov
adc
cmps
pop
(bad)
fistp
mov
jge
ficomp
test
mov
sub
mov
mov
fidiv
nop
sbb
das
or
clc
sub
cs
leave
sub
retf
mov
jne
or
ds
frstor
pop
call
mov
jl
sub
or
adc
aas
std
pop
movs
inc
mov
inc
add
xchg
out
jo
dec
loop
push
cmps
cli
lods
lea
mov
sbb
mov
xchg
sub
xlat
bound
test
loop
jmp
mov
outs
or
bound
push
push
in
mov
leave
jbe
inc
add
mov
push
cdq
mov
pop
cmp
cmps
ret
xchg
stos
ins
das
adc
xchg
in
cmp
inc
push
and
xor
inc
mov
test
call
mov
rcl
mov
shl
cmp
fnstcw
leave
in
ret
xlat
aaa
loop
inc
jmp
xor
sahf
adc
pop
(bad)
pop
mov
(bad)
jle
fucomp
dec
xchg
or
xchg
call
out
sbb
lds
pop
lods
pusha
daa
cdq
mov
push
jae
add
push
repz
fcom
fiadd
mov
mov
sbb
mov
jmp
jmp
dec
push
test
ror
xor
(bad)
lea
dec
cli
push
add
arpl
cli
push
aam
(bad)
into
mov
add
(bad)
jmp
repz
fs
mov
dec
adc
push
inc
sub
mov
int3
sahf
cmp
and
xchg
scas
leave
push
and
lds
sub
adc
xor
jmp
leave
fldl2e
add
fsubr
xchg
repz
sahf
push
das
test
jmp
mov
dec
add
xor
in
rol
mov
dec
dec
xor
cmp
adc
sahf
dec
mov
cli
das
mov
loop
adc
push
popf
gs
adc
rol
(bad)
iret
frstor
mov
dec
add
fimul
imul
push
test
and
jle
mov
jnp
aam
add
cld
adc
cmc
sbb
jns
push
pop
push
xor
rcr
mov
push
and
cmp
repz
outs
jmp
pop
and
repz
outs
xchg
ss
dec
mov
inc
xor
inc
(bad)
(bad)
pop
in
inc
or
mov
outs
push
xor
stos
xor
xlat
cmp
daa
gs
adc
ja
test
shl
push
ror
jno
xor
sub
jbe
xchg
daa
and
bound
jmp
inc
mov
inc
(bad)
dec
fcom
scas
sbb
sub
xlat
xchg
dec
call
xor
mov
sub
cdq
or
xchg
cmp
or
nop
ss
push
push
mov
fild
add
(bad)
adc
sub
sbb
std
pop
and
inc
(bad)
das
xchg
mov
add
les
xchg
sub
imul
enter
int3
mov
test
outs
xor
or
pop
pop
dec
add
mov
cdq
cmp
xor
inc
add
push
jmp
into
mov
jge
fstp
int3
enter
pop
sub
hlt
dec
movntps
cs
cld
jnp
mov
mov
add
imul
adc
(bad)
aam
mov
inc
scas
add
mov
dec
push
inc
add
mov
sbb
add
mov
cmp
pop
shl
pop
inc
mov
inc
imul
lods
fst
xor
fnstsw
xchg
jle
rcl
cmp
sub
ret
dec
loop
adc
push
mov
jbe
cmp
pop
popf
ds
xor
mov
in
pop
in
fdivr
cmps
xlat
add
(bad)
pop
test
and
bound
mov
out
fwait
out
pop
mov
pop
in
mov
add
stos
sbb
add
call
cmp
adc
and
push
ss
addr16
fild
jmp
pop
xchg
(bad)
adc
inc
retf
jae
or
dec
pop
mov
pusha
jne
repnz
rcr
ror
int3
je
mov
or
xchg
mov
push
idiv
shl
retf
inc
jmp
or
push
jno
(bad)
fld
mov
idiv
dec
cmp
mov
popa
scas
sahf
dec
cmp
lods
push
pusha
push
lods
xchg
clc
and
dec
lods
push
imul
neg
outs
call
dec
aam
jg
adc
lahf
fsub
mov
xchg
xor
cmp
xchg
and
xchg
and
dec
mov
fld
iret
call
cmp
adc
dec
movs
repz
pop
inc
test
ror
movs
push
dec
fisub
ret
call
test
pop
in
mov
fld
bound
imul
pop
clc
data16
inc
(bad)
(bad)
sbb
xlat
mov
lahf
ds
add
and
jmp
and
adc
ror
or
imul
fistp
les
jae
fist
add
or
div
iret
stc
mov
xchg
pop
imul
pop
pop
or
(bad)
xor
stc
std
jle
js
fimul
dec
cmp
inc
adc
or
test
push
and
loop
aad
jmp
pushf
push
rcl
lods
sbb
popa
add
xchg
aam
adc
les
(bad)
and
sub
mov
imul
addr16
(bad)
daa
test
add
mov
dec
mov
aas
adc
cmp
push
adc
and
add
mov
xor
adc
clc
xor
popf
cmp
out
push
(bad)
dec
popf
out
sub
imul
inc
cdq
pop
pop
xchg
es
cld
jnp
popa
push
pop
and
add
jo
test
mov
sub
aaa
cmps
ss
push
mov
icebp
clc
push
rol
xchg
pop
cmp
das
aaa
ret
fisub
popf
xor
out
addr16
or
pop
call
out
xor
int
repnz
not
xor
ret
fnstcw
imul
fstp
cmc
loopne
xlat
ret
rcr
leave
ror
rcr
jmp
fidiv
jmp
cmps
outs
aad
lods
pop
sbb
outs
out
int3
les
fiadd
enter
mov
popa
iret
sar
mov
shr
jmp
cmps
clc
xor
ja
sahf
scas
xchg
push
xchg
jbe
pop
clc
sub
je
push
dec
sahf
das
movs
mov
int3
adc
out
(bad)
jnp
sbb
inc
mov
cmp
jns
gs
jmp
and
xchg
mov
push
shr
dec
aad
push
jle
(bad)
cld
xchg
(bad)
pusha
scas
(bad)
jp
repz
ins
sub
lock
jb
xlat
mov
enter
stos
lahf
pop
in
inc
jmp
push
stc
xchg
lahf
out
jecxz
dec
ja
addr16
inc
ins
mov
fs
xchg
jl
enter
sub
inc
scas
cmp
dec
inc
push
push
out
bound
sbb
repnz
cs
(bad)
and
mov
arpl
out
popf
jl
xlat
rol
mov
push
mov
inc
not
pop
jno
push
push
or
imul
ja
(bad)
stc
out
sbb
scas
add
daa
cs
cwde
lahf
and
iret
dec
push
xchg
adc
adc
es
ja
sti
mov
adc
adc
pop
sbb
push
mov
js
std
and
shl
mov
in
jle
mov
stc
cmps
dec
or
inc
and
out
ret
add
fisub
and
fimul
push
or
xchg
push
mov
cs
xor
dec
test
retf
mov
cmp
cmp
mov
push
pop
data16
fidiv
push
inc
call
mov
jnp
mov
and
cmps
call
(bad)
push
jl
test
test
xchg
fstp
cmp
nop
push
neg
jmp
shr
mov
sbb
icebp
pop
ret
ins
mov
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
das
add
inc
pop
dec
and
sti
inc
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
aaa
or
push
dec
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
or
dec
inc
inc
push
push
and
cdq
addr16
out
xchg
mov
pop
jb
ja
mov
fldcw
into
cmp
addr16
dec
and
mov
enter
pop
fldenv
cmp
cmp
pop
popf
xchg
push
fdivrp
loope
stc
stc
jl
sbb
add
adc
test
cld
jmp
adc
cmp
jmp
sub
arpl
aad
pop
push
jecxz
sub
xor
or
push
inc
jle
lods
outs
mov
cdq
inc
sub
xchg
iret
or
pop
xchg
and
mov
sub
outs
(bad)
in
sti
adc
xchg
mov
outs
xchg
popa
imul
ds
xor
imul
outs
rcr
stos
mov
shl
fnstcw
fwait
clc
jle
ja
mov
ds
pop
mov
sti
jmp
in
(bad)
into
popa
sti
and
jmp
fisttp
sti
and
sbb
imul
adc
ret
loop
mov
call
sti
adc
test
and
sub
push
das
je
jmp
(bad)
jp
add
mov
mov
rcr
test
xor
cmp
outs
jns
sbb
push
sbb
ss
and
(bad)
or
and
adc
xor
sub
push
cwde
test
mov
jne
push
les
xchg
hlt
dec
jl
retf
(bad)
sti
out
test
sub
(bad)
jnp
gs
xchg
push
icebp
or
or
jg
in
sub
mov
lock
inc
out
mov
(bad)
add
into
test
sbb
cmps
and
xchg
ins
les
test
cmp
adc
dec
fdiv
xor
mov
mov
sbb
pop
dec
push
xor
add
add
mov
add
in
mov
xchg
outs
vpmulhuw
xor
sub
sub
mov
xchg
in
punpckldq
fldcw
int3
and
xchg
inc
mov
scas
outs
inc
ret
loope
test
push
push
(bad)
mov
fwait
loopne
add
push
inc
out
rcl
inc
mov
into
movs
imul
mov
push
sub
fidivr
xchg
or
das
iret
adc
(bad)
shl
xor
out
leave
mov
add
js
call
xor
push
xchg
stc
cmps
sub
je
mov
or
cmp
je
fwait
sbb
stos
test
push
fnstcw
xor
iret
in
mov
mov
cmp
jmp
fidiv
cmp
xor
mov
ja
adc
or
loop
js
or
fnsave
loope
mov
push
sub
cmps
xchg
aad
adc
jo
rsqrtps
loopne
mov
mov
sub
push
imul
movs
xchg
cdq
fcmovnbe
test
leave
repz
jge
jg
out
jecxz
pushf
(bad)
pop
mov
mov
mov
outs
rcl
dec
mov
repz
mov
adc
jae
je
pop
xchg
sbb
cmp
leave
sub
imul
push
cmp
pop
fistp
inc
push
(bad)
cld
shl
pop
pop
enter
cmp
push
push
pushf
fcomp
dec
sbb
sub
repz
xchg
test
out
(bad)
setle
shl
in
and
jno
cmp
ss
les
xchg
(bad)
pop
cmp
mov
mov
jge
fs
out
rol
nop
lock
hlt
clc
inc
pop
test
cs
popf
loopne
lods
pop
push
std
aam
jae
xor
sbb
pop
retf
or
pop
lods
and
outs
(bad)
loopne
icebp
mov
shufps
mov
loop
aas
js
js
enter
mul
or
call
mov
ss
je
pop
xchg
dec
scas
pushf
pop
push
les
movs
test
cld
fcmovne
cmp
push
icebp
xchg
shl
popf
(bad)
movs
cmc
pop
je
dec
daa
fild
cmps
lock
xchg
cmc
cmp
xchg
lds
sar
repnz
out
mov
iret
add
adc
or
mov
mov
es
pop
mov
push
icebp
cmp
push
fwait
lahf
mov
xchg
out
jbe
rcl
test
bound
cmp
shl
nop
(bad)
jbe
int3
adc
ins
in
ins
jbe
fiadd
pop
test
dec
nop
xchg
les
or
ins
pop
iret
xchg
mul
mov
mov
jge
in
jmp
popf
xor
aas
imul
fst
cmc
inc
cmp
xchg
mov
retf
mov
jg
in
xchg
push
push
int
lods
hlt
aaa
repnz
mov
and
adc
lods
mov
mov
and
xchg
jmp
jg
inc
retf
(bad)
clc
lods
in
cli
cmp
push
popa
jge
in
in
pop
pop
fnsave
ja
cmps
inc
dec
repz
jo
or
popf
movs
hlt
retf
pop
push
shl
pop
xchg
call
mov
das
cld
repz
imul
arpl
lea
xchg
sub
je
inc
sub
mov
and
scas
call
out
xor
movs
mov
push
cdq
(bad)
or
jae
mov
xor
jns
mov
ja
jle
int3
loop
sahf
pop
pop
cmps
aam
(bad)
leave
inc
ret
and
cmp
les
and
pop
or
lds
inc
pop
cdq
pop
push
mov
daa
cmp
cmp
int
dec
imul
sbb
cmp
pop
imul
enter
shr
andps
push
dec
and
(bad)
cmp
pop
std
pop
xchg
std
pop
fsub
rol
retf
sub
mov
or
cmp
iret
std
div
fwait
mov
inc
sbb
pop
pusha
(bad)
push
xchg
fcmovnu
outs
in
les
clc
imul
dec
add
xor
xchg
test
xchg
enter
cdq
cmp
(bad)
rol
into
call
xchg
stos
sub
fmul
fs
inc
addr16
(bad)
(bad)
icebp
gs
retf
and
mov
iret
lahf
mov
xlat
arpl
cmc
cdq
jne
fstp
inc
retf
cmps
sub
test
push
call
icebp
jno
out
test
out
and
fwait
jns
dec
sub
push
mov
(bad)
jmp
xchg
and
adc
add
gs
das
jge
mov
retf
jo
icebp
jnp
imul
xor
fnsave
cdq
fiadd
data16
aaa
js
pop
in
pusha
sbb
xlat
push
xor
fucomip
test
push
sub
aad
cwde
xlat
sbb
sbb
cmp
xchg
sub
push
hlt
ins
jb
push
jle
mov
dec
test
loope
jp
mov
xchg
sbb
movs
mov
add
xchg
jle
es
sub
(bad)
pop
sbb
or
xor
std
retf
pop
imul
mov
pop
in
cmp
sub
loop
out
cmovbe
ss
cmp
popf
and
test
loop
xlat
in
cmp
sub
push
clc
retf
imul
add
into
push
out
inc
mov
popa
out
push
fcmovnbe
jmp
push
xor
clc
out
in
(bad)
lock
in
mov
pop
gs
(bad)
mov
fs
cmps
pmuludq
inc
out
retf
(bad)
sbb
push
call
push
cwde
inc
sbb
ja
and
inc
cs
sbb
mov
push
sub
xor
mov
xchg
ror
(bad)
mov
dec
lods
jmp
test
fwait
jnp
into
xchg
inc
sub
jbe
jns
adc
cmp
dec
push
xchg
jb
cmp
or
mov
dec
mov
xor
or
jo
jno
test
lock
add
add
mov
lea
mov
pushf
mov
gs
ret
add
mov
mov
mov
stc
xchg
cmc
lock
push
cmp
mov
retf
lods
sahf
ds
ins
ja
out
push
xchg
out
inc
jp
push
sub
or
lods
xchg
nop
or
dec
push
cwde
call
ficom
xor
fadd
mov
lds
out
inc
cmps
stc
shr
and
mov
mov
jg
mov
loop
loopne
adc
retf
jmp
jns
cld
rcl
bound
aas
call
retf
adc
std
rcl
pop
push
stos
sbb
scas
jmp
push
repz
into
sbb
shl
bound
nop
dec
sub
sub
mov
scas
stos
pop
cli
test
ss
add
into
cmp
mov
cmps
add
(bad)
fdivr
or
jnp
lahf
je
es
xor
jle
popf
fwait
jno
inc
mov
cs
lds
pop
inc
jne
adc
fnsave
call
out
or
popa
cmp
lahf
scas
loopne
push
in
jb
xor
adc
cmps
push
pop
mov
mov
test
inc
dec
cdq
mov
pop
stos
inc
push
je
and
jne
mov
sbb
sub
pop
in
adc
push
aaa
adc
cmp
push
outs
stos
cmps
arpl
sub
push
test
push
inc
cmp
aaa
bound
push
call
jae
cmc
add
cli
mov
and
push
mov
out
arpl
jmp
add
cli
bound
xor
cdq
push
stc
add
icebp
mov
or
out
(bad)
imul
dec
cmp
pop
int3
mov
pop
sahf
sbb
mov
je
adc
cmp
int
out
dec
sti
aam
retf
dec
mov
js
movs
out
ja
int3
xchg
sbb
xor
sbb
sbb
xchg
xchg
adc
repnz
dec
cs
rcr
out
xchg
adc
jns
xor
das
xchg
cmp
div
call
out
ja
cwde
leave
(bad)
test
mov
stos
add
je
inc
fidiv
repnz
stos
cmc
adc
mov
cdq
aam
not
adc
xchg
(bad)
jmp
xchg
or
xor
xchg
adc
mov
iret
push
adc
xor
sub
mov
mov
inc
test
dec
cmp
fs
and
iret
retf
mov
dec
sub
sbb
mov
jmp
(bad)
dec
test
(bad)
push
lahf
les
sar
push
js
push
imul
fcom
js
scas
mov
mov
mov
ins
push
pusha
and
mov
fs
xchg
cwde
popa
ret
ret
push
stos
xchg
in
data16
call
cmp
xchg
arpl
jne
xchg
mov
and
jno
rol
jmp
iret
xchg
cmp
mov
dec
add
push
adc
and
sbb
pushf
mov
adc
je
xchg
inc
loop
jecxz
js
push
dec
dec
iret
sbb
fnstsw
mov
loope
mov
sub
ss
jl
in
ins
and
sub
loop
call
mov
(bad)
sub
sbb
fisttp
dec
sar
push
cmp
frstor
adc
add
add
add
add
add
add
mov
or
or
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
bound
adc
mov
(bad)
(bad)
(bad)
sbb
aaa
in
sti
popf
add
sub
sbb
out
call
cs
fdiv
xchg
mov
adc
test
xchg
(bad)
lahf
mov
lods
dec
xchg
daa
xchg
push
out
jp
pop
and
call
inc
int
lods
add
inc
and
cld
std
jmp
and
shl
sub
sahf
aaa
jne
xor
not
out
in
or
iret
jne
cmp
dec
cmps
xchg
test
push
dec
scas
mul
pop
jecxz
mov
cmp
pop
cli
lahf
push
ins
cmp
arpl
out
fistp
sub
mov
adc
lds
cdq
jg
in
loop
iret
jmp
or
push
add
int
fwait
sbb
pop
push
fsub
inc
in
clc
cmp
add
inc
cs
fwait
push
mov
test
movs
jge
mov
daa
int3
push
fcomp
int3
or
repz
mov
dec
or
jae
ret
mov
and
pop
mov
pop
mov
fiadd
xchg
pop
dec
scas
sub
(bad)
stc
and
scas
je
inc
jnp
clc
aad
stos
stos
or
cmps
mov
(bad)
shl
inc
xor
jmp
pop
mov
outs
repnz
or
retf
dec
outs
scas
fbld
inc
xor
mov
jp
xchg
sbb
sbb
ins
test
pop
add
imul
mov
rcl
pop
icebp
hlt
push
test
inc
mov
mov
jg
push
hlt
data16
pop
mul
dec
out
add
push
xchg
call
retf
and
cdq
xchg
adc
jg
stos
fistp
js
pushw
ret
sbb
ss
retf
outs
das
fadd
fisttp
push
push
enter
lahf
ds
cwde
dec
cdq
pop
stos
jno
mov
dec
mov
test
pop
lds
ficom
adc
arpl
es
pop
mov
jo
imul
or
cmp
jae
xchg
add
add
jno
fs
jns
mov
in
add
lods
into
sub
and
sbb
std
mov
add
and
inc
xor
push
jne
out
cmp
imul
mov
mul
mov
mov
pop
push
sti
ins
bound
jno
add
xchg
pop
dec
and
dec
xor
mov
mov
sbb
ja
sub
mov
aad
out
jecxz
xchg
pop
jbe
out
sub
fwait
add
and
inc
sbb
xchg
sub
stos
(bad)
stc
fisttp
push
adc
das
out
mov
inc
and
and
inc
loop
aad
vphaddbq
imul
outs
lahf
aaa
xchg
cdq
add
(bad)
int3
sub
adc
sub
cmc
fldenv
pusha
xchg
outs
aam
loope
stc
push
inc
or
mov
ds
mov
mov
fcom
mov
xor
je
adc
push
dec
fiadd
push
fucomi
inc
dec
fisub
xor
xchg
dec
daa
ss
bound
idiv
mov
fsubr
fdiv
jb
sbb
dec
dec
retf
cdq
and
mov
sub
pop
inc
ds
arpl
(bad)
jo
call
into
or
add
ins
retf
dec
cmp
test
adc
xor
xlat
mov
aas
les
jge
out
fucomip
pop
mov
into
in
daa
in
mov
jg
mov
nop
gs
fnstcw
cwde
jmp
shl
jge
jmp
into
inc
xchg
movs
out
cmp
(bad)
mov
lock
mov
popf
test
rcr
ror
aad
cmps
repz
xor
push
push
push
jp
inc
mov
les
test
inc
(bad)
mov
ss
shl
movs
push
shl
dec
lea
and
mov
pushf
neg
xlat
(bad)
mov
int
cmps
mov
pop
sub
cli
sti
xchg
stos
sub
test
loopne
or
sar
inc
mov
add
ror
fwait
and
pop
jmp
pop
test
sub
cmps
imul
add
sbb
mov
dec
mov
imul
jmp
mov
mov
and
or
pop
(bad)
pop
sbb
pushf
jnp
cmp
add
sbb
or
add
in
mov
push
adc
mov
lods
icebp
movs
inc
and
add
fs
pop
imul
fisubr
neg
mov
cmp
and
pop
adc
pop
ret
adc
mov
out
push
jl
inc
mov
ds
int3
in
(bad)
lods
fstp
rol
and
gs
adc
mov
out
lods
call
pop
out
or
cmps
rol
(bad)
call
add
pop
mov
mov
dec
sub
sbb
das
xchg
ror
xchg
push
sbb
jg
or
add
and
adc
inc
and
or
pop
hlt
icebp
mov
rcl
mov
jnp
and
movs
(bad)
adc
adc
xchg
loop
outs
cmp
dec
shl
sbb
fst
clc
dec
or
out
xchg
sbb
out
cld
sahf
std
xchg
pop
add
fwait
in
(bad)
jp
lea
dec
dec
gs
(bad)
and
dec
or
nop
jle
in
push
dec
mov
mov
mov
fsubr
adc
sahf
ins
fld
stos
iret
div
popf
mov
fwait
jl
lods
inc
sbb
cmp
loopne
lods
shl
pop
out
sbb
dec
jp
loop
sub
mov
sub
mov
fmul
sbb
jmp
int
mov
pop
inc
push
xlat
jmp
xor
loop
cmp
retf
add
push
push
dec
push
mov
push
movs
fstp
loopne
xlat
fs
aam
movs
fisttp
aaa
mov
mov
add
repz
daa
push
clc
aad
xor
popa
xor
mov
sub
sbb
sub
jbe
in
aaa
aaa
cs
add
add
icebp
cdq
outs
jg
push
inc
shl
icebp
lock
mov
pop
inc
push
jle
mov
push
mov
inc
pop
out
cmp
popf
xchg
retf
clc
lods
mov
test
mov
aad
xchg
loopne
fldcw
xchg
jno
and
adc
xchg
mov
into
jmp
pop
popf
xor
sbb
inc
pop
lahf
dec
add
jl
icebp
clc
sub
push
daa
mov
dec
dec
jne
fwait
lods
inc
push
fcomp
adc
push
mov
imul
lods
je
cmp
shl
mov
and
add
sub
cmp
cmp
std
mov
jno
fadd
ror
cmps
dec
or
test
dec
ret
and
ret
push
mov
and
jnp
inc
push
ret
hlt
adc
jmp
xchg
fldenv
dec
ret
std
loopne
and
dec
mov
push
inc
sub
or
pop
or
sbb
mov
sti
sub
add
pop
add
mov
pop
out
iret
inc
repz
retf
mov
mov
outs
out
xor
pop
inc
frstor
(bad)
pop
mov
pushf
sub
aam
add
push
push
jge
add
cld
(bad)
fcmovne
pop
pop
pop
push
adc
jnp
cwde
lahf
mov
or
retf
das
push
imul
or
push
call
jno
(bad)
mov
sub
xchg
jecxz
js
or
push
xchg
jecxz
xor
pop
mov
cli
dec
ss
mov
lds
inc
mov
outs
mov
addr16
push
sub
mov
pop
dec
mov
test
push
xchg
call
jmp
xor
fcomp
sbb
lods
pop
inc
jnp
pop
mov
pop
and
stc
test
xchg
out
mov
xchg
sahf
js
sbb
and
jecxz
xchg
mov
loope
ins
jo
jg
mov
inc
outs
movs
add
retf
ja
ss
mov
mov
adc
sub
daa
mov
retf
sub
xor
cmps
mov
add
fld
mov
pop
mov
sbb
in
in
jnp
pop
jmp
adc
test
cmps
mov
outs
mov
sub
les
in
jge
mov
std
mov
sar
adc
sub
cli
iret
pusha
mov
enter
push
(bad)
cmp
jnp
sbb
or
xor
xor
jecxz
retf
push
pusha
jnp
lea
clc
sub
scas
xchg
addr16
data16
push
dec
mov
stos
int3
fcom
jne
(bad)
lock
gs
dec
push
ja
mov
add
cmc
aas
and
out
mov
pop
inc
sbb
popf
inc
xlat
pusha
outs
push
(bad)
mov
mov
jg
mov
cmps
cmc
jp
out
and
stos
sbb
idiv
jmp
lea
mov
xchg
jmp
cmp
xchg
imul
loop
push
cmps
shl
xor
enter
cmp
fsub
daa
movs
fidiv
sbb
test
fwait
out
(bad)
rcl
or
xchg
ret
hlt
dec
(bad)
xchg
fisub
arpl
push
pop
sbb
imul
xchg
jl
lock
mov
jo
jbe
es
out
or
mov
(bad)
or
std
and
iret
add
dec
out
mov
dec
push
pop
xchg
inc
fwait
adc
test
jae
test
mov
cld
cmc
stc
pushf
je
jl
mov
xor
mov
mov
jmp
xor
mov
out
nop
pop
sub
xchg
push
mov
fstp
adc
xlat
cmp
out
or
mov
xchg
retf
xor
in
aad
or
call
jmp
xor
ret
aaa
xchg
in
jl
and
arpl
mov
sar
shl
movs
dec
ja
out
jo
pop
or
add
je
jmp
or
es
test
lds
jge
dec
push
mov
mov
call
das
dec
stos
add
into
push
push
xchg
lods
aad
cli
jb
hlt
(bad)
jp
jg
pusha
sbb
ds
mov
push
adc
clc
jo
ror
add
jns
xchg
stc
in
repz
mov
jg
and
rcr
ins
sbb
push
sbb
mov
test
mov
retf
jnp
xor
mov
xchg
adc
mov
inc
pop
js
xor
stos
sbb
or
pop
or
jnp
int3
push
lds
jecxz
(bad)
icebp
cld
pop
cmp
inc
push
fwait
rol
js
jl
lock
xchg
inc
sub
xchg
push
pushf
and
add
mov
xor
stos
mov
cdq
mov
cmp
push
ret
push
daa
jb
sbb
add
mov
(bad)
sar
lahf
cli
ret
(bad)
leave
push
add
pusha
jle
mov
dec
ss
xor
out
push
sahf
pushf
cmps
repz
int
retf
data16
cs
sahf
sbb
sbb
inc
fidiv
mov
and
sbb
xchg
push
pop
xor
adc
test
push
out
adc
les
push
push
std
adc
scas
inc
adc
jns
loop
enter
(bad)
not
es
lock
and
cmp
mov
dec
add
cmps
push
dec
mov
xchg
jb
push
test
mov
xchg
add
jbe
add
add
int3
mov
xor
inc
aas
ret
cdq
jbe
gs
dec
dec
xor
mov
ins
(bad)
clc
ds
cmp
in
cdq
push
mov
icebp
mov
das
outs
in
jae
ja
call
sbb
ins
sbb
ror
add
mov
inc
adc
xor
cs
inc
hlt
xchg
aad
jb
test
fwait
lahf
stos
jmp
cmc
dec
xor
fwait
out
push
loopne
dec
mov
out
sub
loope
rcl
jo
outs
inc
movs
jle
mov
rol
push
pushf
scas
xor
imul
xor
aas
pop
out
inc
cli
clc
rcl
cld
xchg
or
mov
xor
loope
clc
in
das
mov
(bad)
cmp
mov
xchg
xchg
dec
inc
fiadd
xchg
int
popf
stos
and
rcr
stos
xor
pslld
in
or
dec
retf
or
cwde
bound
mov
retf
retf
cmp
mov
push
cwde
sbb
mov
es
inc
das
inc
sbb
mov
sub
and
xchg
dec
rcr
in
pusha
jecxz
shr
nop
xchg
popf
daa
in
mov
pop
cmp
add
pop
call
sbb
das
and
sbb
outs
push
ret
mov
jg
adc
dec
sbb
loop
mov
mov
call
loopne
mov
in
mov
xchg
fistp
loope
jno
cmp
lahf
pop
and
mov
xor
sahf
shr
xor
dec
or
stos
xor
or
or
sbb
pop
mov
and
mov
in
enter
push
jbe
cmps
in
pusha
lock
loopne
fimul
push
add
aas
inc
or
cwde
sahf
add
mov
rol
push
jne
stos
mov
or
sbb
sar
lahf
jg
addr16
(bad)
pop
jge
jp
xchg
cmp
lods
movs
mov
jg
adc
push
jle
sub
sahf
pmulhw
and
cs
mov
dec
pop
enter
cmps
and
data16
pop
and
addr16
pop
idiv
ds
inc
pop
push
lock
or
mov
pop
ret
push
push
arpl
or
pop
mov
pop
imul
loope
das
jno
inc
aas
sub
test
(bad)
mov
test
lahf
mov
pop
sbb
outs
ret
sbb
sub
lahf
into
push
lock
cmps
jo
in
mov
jae
mov
(bad)
mov
mov
xchg
xor
jmp
jb
dec
and
mov
adc
dec
je
push
int
mov
out
ss
jmp
es
push
dec
shl
fcomi
inc
rol
movs
retf
sub
or
les
mov
addr16
test
iret
push
xor
lock
xlat
jmp
nop
mov
or
xor
pop
xchg
push
(bad)
call
mov
lahf
shr
repnz
cmp
dec
cwde
fistp
adc
push
fadd
pop
test
clc
fsub
test
sahf
out
jmp
cmp
aad
js
dec
repnz
scas
mov
and
cld
test
sub
or
pop
pop
xchg
push
or
mov
sub
jmp
add
inc
xchg
adc
xchg
mov
xchg
adc
adc
dec
(bad)
lock
mov
dec
mov
pop
into
push
and
cs
mov
jp
inc
jne
ss
mov
xor
push
int
or
adc
ret
sub
pop
mov
adc
pop
xchg
jmp
xchg
mov
arpl
(bad)
jb
imul
repz
inc
mov
mov
pop
fbstp
call
ins
jns
and
sbb
push
push
jg
ins
call
mov
xchg
cwde
mov
neg
push
mov
int3
sub
dec
or
sub
push
push
jmp
xchg
sub
xchg
js
cmp
mov
sub
mov
test
fdiv
pop
out
xchg
jmp
push
xchg
xor
fnstcw
xor
jae
xchg
cmc
and
add
ja
or
outs
enter
cmc
(bad)
pop
jbe
std
inc
cld
xor
aam
cmp
in
arpl
cmp
mul
push
ror
xchg
adc
xlat
mov
aad
pop
lds
mov
psubd
jns
dec
dec
in
cld
sub
pop
out
cmp
xor
fisubr
or
inc
repz
(bad)
and
pop
sbb
sub
jmp
xor
std
inc
stos
xor
xchg
lock
xchg
jns
stos
jno
lods
lock
in
(bad)
cmp
jno
retf
sub
mov
cmp
mov
stos
inc
push
sti
and
xchg
outs
gs
mov
retf
sbb
out
(bad)
cmp
scas
lods
daa
stos
dec
mov
jnp
push
ja
push
ss
push
call
xchg
inc
and
pop
pop
jbe
pop
push
popf
sar
push
xor
mov
leave
repz
pop
(bad)
in
and
xchg
xchg
inc
clc
mov
outs
xchg
xchg
cmp
loope
push
invlpg
adc
pop
scas
mov
or
xchg
mov
jecxz
cmp
(bad)
push
dec
add
add
ins
ins
pop
push
pop
push
mov
xor
daa
mov
outs
add
rcl
mov
dec
les
or
fild
int3
hlt
mov
pop
add
inc
sbb
aad
shl
pop
mov
inc
icebp
mov
cdq
cmp
jp
jmp
mov
stos
aaa
pop
add
movs
dec
retf
std
mov
push
push
shr
retf
out
mov
std
mov
nop
imul
mov
rcl
movs
add
addr16
in
clc
mov
stos
aam
adc
ins
xor
fs
pusha
pmullw
mov
mov
xchg
cwde
imul
mov
xchg
mov
jb
cmps
mov
daa
inc
(bad)
mov
dec
jecxz
xor
jno
sub
push
ror
out
cmps
inc
push
repz
sub
hlt
mov
mov
sbb
add
sub
mov
rcr
pop
test
enter
lea
xchg
or
es
mov
cmps
test
xchg
adc
std
iret
repz
or
in
pop
add
lahf
shl
rcr
xor
int
in
inc
jne
inc
dec
adc
pop
dec
xchg
xor
aaa
push
mov
xchg
sub
lods
repnz
cmc
int3
addr16
jmp
loopne
(bad)
xchg
cmp
and
dec
in
or
and
stc
inc
cmp
sub
adc
adc
aam
or
xchg
aad
mov
jg
inc
jno
inc
jg
pop
and
mov
jnp
outs
and
lods
ja
test
sbb
push
clc
repnz
jle
mov
rcr
mov
sbb
sub
ins
adc
pop
xor
mov
cdq
ret
sbb
(bad)
imul
(bad)
int3
in
adc
dec
and
add
mov
and
dec
pop
mov
or
mov
(bad)
sbb
add
mov
data16
dec
mov
jl
movs
fldenv
loopne
imul
(bad)
dec
adc
pop
jo
loope
dec
xchg
adc
jmp
sbb
scas
mov
sub
cwde
jl
jmp
cmc
cmps
pop
push
outs
idiv
mov
ja
stos
repnz
call
jae
clc
or
(bad)
lds
jecxz
aad
in
int3
add
jp
adc
and
movs
adc
movs
dec
or
aad
mov
lea
sbb
and
adc
sub
sub
dec
pop
cmp
inc
xchg
push
mov
sar
test
lahf
mov
mov
(bad)
jmp
jb
dec
ret
pop
cmp
inc
pop
sub
out
dec
(bad)
loope
bound
xchg
test
cmc
jo
jecxz
adc
movs
adc
mov
xchg
(bad)
inc
rol
xchg
rcr
cvttps2pi
jmp
scas
sub
pop
mov
(bad)
pop
addr16
in
mov
mov
sub
aas
test
stos
aaa
pop
inc
lahf
(bad)
mov
and
mov
aas
jo
ret
fild
test
mov
add
pushf
adc
out
or
xchg
or
cwde
loopne
dec
pop
bound
nop
loop
and
push
in
outs
sahf
nop
pop
xchg
retf
aas
push
sub
aaa
fwait
or
inc
leave
push
ins
sbb
(bad)
pusha
or
ins
in
out
push
xchg
cmp
popa
in
daa
je
xchg
pop
pop
inc
data16
sub
pusha
dec
dec
repnz
and
int3
push
xchg
add
xor
and
mov
popf
addr16
sbb
dec
sahf
push
inc
int3
xor
jecxz
je
dec
sbb
sbb
mov
iret
sbb
movs
pop
les
mov
in
ficom
add
or
outs
xchg
sbb
shr
xor
rcr
and
inc
mov
daa
(bad)
adc
push
ds
stos
loop
dec
jmp
clc
pushf
inc
xor
push
into
jo
(bad)
xchg
mov
sub
xor
imul
cmp
or
test
sbb
push
loopne
test
imul
aam
shr
imul
fld
xor
aad
stos
or
aam
xchg
cmp
mov
ins
mov
repz
aam
add
mov
or
mov
outs
das
rol
mov
sub
sub
imul
popf
test
pop
xor
pop
push
cld
fisub
iret
pop
and
or
add
(bad)
cmp
add
int
mov
loop
pop
sbb
cmp
push
fiadd
or
cwde
inc
(bad)
sub
mov
or
test
pop
popf
mov
mov
sub
ds
inc
mov
xchg
movs
dec
ds
out
shl
xor
sub
jle
sub
out
xor
test
pop
dec
inc
mov
push
pusha
dec
xor
jp
out
daa
push
mov
(bad)
bound
and
sub
sbb
test
loop
mov
test
or
push
inc
mov
test
addr16
in
test
into
cmp
out
imul
ret
mov
dec
mov
push
retf
out
in
pop
aaa
pushf
int
or
pusha
(bad)
mov
xchg
push
xor
pop
mov
ror
leave
loop
mov
jecxz
push
mov
cmp
mov
aam
retf
sub
pop
ror
push
pusha
jb
xchg
ror
pop
popf
(bad)
cmp
pop
in
mov
lock
inc
ja
scas
sbb
js
inc
mov
cmps
aaa
and
mov
test
xchg
les
test
(bad)
jl
dec
jbe
pop
pop
cli
popf
fptan
cmp
cmp
lods
jnp
inc
and
sbb
xor
jg
std
mov
les
(bad)
dec
inc
sti
jo
or
lahf
int
scas
fsubr
dec
(bad)
stos
test
aad
push
inc
test
cmp
iret
jmp
cmp
arpl
add
sub
add
pop
mov
or
daa
dec
stos
jmp
imul
pusha
out
test
sub
mov
xor
jmp
xabort
cld
pcmpgtb
sub
dec
push
bound
push
mov
cmp
jnp
add
shr
sbb
ds
pop
imul
mov
sbb
mov
sbb
ss
in
jp
mov
repnz
movq
out
or
mov
(bad)
jnp
pop
pusha
int3
cmc
and
call
les
inc
cld
and
pop
retf
test
mov
push
(bad)
fdiv
mov
out
adc
and
pusha
pop
fsub
sti
xchg
mov
popf
sbb
mov
jne
pop
jmp
cmp
sbb
mov
sub
(bad)
mov
sub
lods
aaa
xor
push
cmps
push
pop
mov
call
pop
sub
dec
xor
jns
mov
adc
fimul
mov
sub
cwde
sbb
addr16
sub
push
mov
sub
in
push
inc
out
dec
test
out
mov
test
mov
aas
adc
lahf
push
jae
jg
stos
outs
into
sub
fsub
adc
push
inc
mov
hlt
cwde
aam
mov
pop
cld
imul
fs
bound
mov
es
push
inc
int
jmp
and
or
nop
push
cmp
pop
xor
sti
xchg
fwait
xor
and
mov
inc
fnstsw
popf
pusha
mov
or
mov
retf
or
retf
pushf
mov
push
daa
mov
fnstsw
pop
xchg
xchg
fwait
call
retf
lea
add
inc
adc
sbb
sbb
mov
jle
(bad)
sbb
xchg
outs
dec
pop
aaa
ficom
sub
movs
xor
mov
xor
adc
adc
ret
inc
ss
mov
fidiv
adc
sub
call
fld
mov
jb
mov
call
cwde
clc
dec
idiv
inc
dec
jns
icebp
(bad)
sub
outs
out
les
adc
ja
add
lods
int3
arpl
mov
mov
xchg
xor
sbb
pop
out
inc
mov
push
arpl
out
mov
vrcpps
cmps
sbb
mov
jmp
mov
out
icebp
(bad)
(bad)
stc
icebp
rol
sar
nop
mov
clc
xor
gs
add
sbb
sub
or
ret
mov
fwait
clc
ret
and
push
inc
arpl
cs
or
pop
adc
jmp
xchg
pop
sahf
sub
scas
rcl
outs
sbb
sub
popa
sub
mov
shl
rol
iret
xchg
push
pop
jb
lock
xchg
mov
fwait
outs
push
mov
sbb
inc
push
adc
ins
scas
mov
pop
adc
adc
push
scas
xchg
and
outs
outs
and
es
push
mov
adc
ss
inc
mov
inc
pmaddwd
sbb
or
gs
adc
jle
sub
adc
dec
dec
(bad)
ins
push
adc
pop
sbb
jne
loop
loope
movs
push
mov
pop
retf
dec
jmp
enter
ret
repnz
call
xlat
dec
inc
pop
je
jne
add
mov
sbb
cmp
xchg
and
sahf
(bad)
mov
lods
stc
lds
mov
sbb
fsubr
dec
retf
cmc
imul
xor
dec
jmp
push
pop
mov
cmp
fild
lock
mov
loopne
(bad)
xor
pop
mov
jmp
stos
jp
or
jg
test
jb
sub
repnz
add
scas
sbb
adc
sbb
inc
jns
cli
lock
retf
dec
das
dec
xchg
sub
test
ins
pop
test
retf
sub
js
inc
clc
xor
and
pop
call
rcl
pop
lock
mov
jmp
test
push
mov
inc
fistp
test
ret
pop
adc
loope
inc
fwait
pop
shr
(bad)
aaa
ret
mov
sbb
inc
in
xor
adc
daa
xchg
pop
(bad)
mov
push
cmp
dec
movs
jb
call
jbe
(bad)
mov
sbb
push
shl
sti
fadd
sar
arpl
iret
and
iret
(bad)
push
in
call
(bad)
fcmovnb
shr
loope
or
jge
std
pusha
inc
pop
fs
xchg
sub
cwde
jl
and
mov
mov
pop
sbb
sub
iret
pop
mov
or
jno
push
stos
push
dec
cmp
ret
cmp
test
sub
aas
xchg
out
push
int
aas
dec
and
ds
ret
scas
mov
adc
sbb
call
push
aaa
leave
out
sar
test
jg
aaa
ss
mov
pop
pop
aad
adc
outs
xchg
mov
mov
scas
cmps
(bad)
mov
(bad)
mov
inc
mov
cmp
mov
adc
int
cs
mov
call
clc
jl
test
adc
out
ffree
(bad)
test
mov
ret
pop
jns
push
pop
or
dec
jnp
xor
icebp
int
jge
sub
out
in
call
lahf
es
push
push
stos
popf
push
mov
adc
lock
rcr
icebp
enter
imul
(bad)
int
pop
jmp
add
pop
ins
jbe
leave
mov
ds
test
inc
leave
jb
popa
dec
outs
cmp
repnz
fs
ja
aaa
fcomp
xchg
dec
enter
mov
jmp
dec
ja
out
imul
cmp
popf
dec
adc
and
mov
lea
mov
inc
pop
sbb
sbb
pop
outs
mov
sub
out
stos
push
inc
mov
adc
aam
xor
jecxz
xchg
adc
jg
add
rol
imul
test
(bad)
sbb
jmp
loopne
mov
movs
pop
adc
add
xchg
out
das
int
retf
add
xor
cmp
push
mov
outs
outs
aaa
sub
(bad)
mov
sahf
mov
mov
pop
in
sbb
in
pop
cs
dec
pop
sahf
push
mov
aad
dec
adc
enter
sbb
call
test
adc
out
sbb
mov
cmp
sbb
mov
cld
cmp
aam
or
push
nop
and
lock
std
sbb
sbb
dec
imul
add
test
loop
fbstp
hlt
xchg
lods
pop
jmp
or
adc
rol
fstp
cmp
in
stos
pop
xchg
cs
pop
cmp
cmp
retf
xchg
sub
sub
xchg
inc
cmps
in
cmps
inc
xchg
sbb
mov
sub
push
movs
in
int
vpcmpgtd
ja
cwde
xchg
fs
(bad)
xchg
pusha
xchg
outs
shl
xchg
(bad)
cli
clc
outs
inc
aad
inc
fnstcw
lds
movd
mov
and
mov
call
aam
cmps
mov
imul
shr
call
sub
lods
mov
int3
mov
adc
xchg
ins
sahf
repz
mov
scas
jne
pop
aad
or
jecxz
sbb
jl
test
sub
shr
or
scas
neg
(bad)
pop
jae
lods
sbb
out
shl
push
icebp
sub
adc
sbb
fstp
test
jg
pusha
jne
cli
and
fild
and
popa
sar
sub
mov
mov
sub
sti
pusha
add
fst
ror
add
jmp
aas
push
mov
js
movs
ins
jecxz
or
jl
arpl
pop
std
ror
cmp
push
dec
cmovle
pop
into
in
sar
jmp
dec
retf
repz
popf
cmp
aaa
xchg
cmp
adc
cmps
jge
hlt
int3
and
rcl
xchg
js
pop
out
mov
rol
pop
or
(bad)
and
cmps
xchg
(bad)
pop
imul
push
enter
push
sbb
pop
cmp
in
mov
pop
cs
sub
jle
imul
out
cmp
or
loopne
ja
adc
and
inc
xchg
and
mov
(bad)
mov
or
sub
loope
sbb
dec
jge
jmp
ins
jns
leave
xchg
call
scas
jne
cwde
stc
mov
rol
cmp
(bad)
test
adc
aaa
mov
aam
dec
enter
mov
int
pop
and
jl
cli
repz
jle
mov
js
test
mov
dec
jmp
mov
jecxz
(bad)
fstp
test
std
cmp
cmps
adc
jle
sub
inc
inc
and
jmp
add
mov
std
dec
push
stos
push
jmp
cwde
inc
xor
mov
adc
and
imul
fist
retf
and
xchg
adc
or
lea
pop
test
xlat
xchg
cmp
add
sub
rcr
sub
ss
fcmovbe
inc
push
push
dec
(bad)
cwde
fmul
mov
cmp
mov
movs
pop
js
inc
ja
xchg
jnp
shl
mov
popa
ror
(bad)
ss
inc
fdivr
(bad)
sub
daa
push
xor
in
clc
sub
dec
mov
loopne
and
xchg
push
les
add
cli
cdq
pusha
inc
cwde
lock
imul
mov
mov
inc
rol
jg
or
cmp
repnz
add
mov
ins
ss
or
dec
leave
mov
cwde
cmps
mov
loope
adc
bound
in
fbstp
out
xor
add
rol
and
nop
fiadd
push
(bad)
push
fsub
iret
inc
stc
add
and
or
mov
jae
test
(bad)
cs
scas
and
out
xchg
int
sub
mov
daa
cmp
int3
call
mov
int3
mov
push
es
(bad)
mov
jle
(bad)
push
aam
out
dec
daa
test
loop
mov
outs
push
mov
movs
add
aas
push
(bad)
pop
pop
call
xchg
add
or
lea
sbb
(bad)
das
inc
xor
scas
(bad)
fsqrt
xor
cmps
xor
mov
outs
jmp
out
and
pushf
pop
adc
xchg
rcl
nop
repnz
dec
add
push
test
jg
mov
movs
xor
cmp
or
clc
test
or
aad
popf
nop
cmp
in
stos
push
dec
movs
popf
adc
std
xor
mov
adc
das
or
or
iret
test
mov
(bad)
mov
push
outs
(bad)
mov
add
je
(bad)
dec
fcom
jge
in
je
push
pushf
xchg
es
sbb
cwde
xor
retf
adc
pop
lods
inc
(bad)
sub
sub
das
inc
fwait
int
pop
les
pop
jmp
std
lahf
std
push
add
pop
fbld
lods
aad
jg
ror
repnz
adc
mov
cmp
sbb
jmp
fadd
cmp
jne
lock
into
aam
xchg
ret
mov
cmp
pop
mov
(bad)
rcl
cmp
jp
xchg
cmps
fwait
push
sahf
lods
or
or
push
xchg
mov
lods
xor
mov
fld
sbb
and
mov
mov
in
push
movs
shr
xchg
mov
loopne
sbb
xor
sbb
aad
out
cmps
push
add
repz
dec
cmc
sbb
inc
adc
push
fs
fwait
daa
or
sbb
dec
and
xchg
retf
xchg
inc
loop
or
ficomp
ret
mov
ret
xchg
ds
je
imul
imul
jp
pop
adc
fstp
mov
or
xor
push
in
push
adc
dec
xchg
dec
push
push
ja
mov
pop
and
in
out
mov
or
mov
push
ret
inc
outs
mov
call
ss
mov
dec
cmp
sbb
les
sahf
push
sub
clc
adc
fiadd
mov
mov
lods
xchg
stos
sbb
les
fs
pop
clc
sbb
pop
jo
inc
ret
ror
repnz
call
xchg
cmovle
xchg
out
call
dec
sahf
adc
xchg
cmc
imul
jae
sub
fxch
lea
pop
sub
jp
fst
or
push
adc
mov
sbb
add
jle
imul
outs
rcl
dec
mov
sub
xchg
adc
ins
dec
mov
push
cmp
test
xchg
add
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
and
sub
cwde
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
pop
sbb
adc
popf
mov
mov
(bad)
in
scas
(bad)
test
(bad)
mov
pop
add
clc
pusha
or
sahf
pop
xor
test
jb
movs
jmp
cli
xlat
lock
stc
or
in
xchg
aam
jp
mul
cld
iret
pop
sub
test
add
adc
out
scas
(bad)
pop
adc
aam
ret
sub
pop
bound
sub
movs
xlat
pop
add
mov
out
jnp
sub
in
outs
sub
or
sub
pop
mov
jnp
cmp
or
lods
js
push
or
mov
in
and
push
cmp
sub
(bad)
xchg
jl
and
dec
pop
lods
inc
repz
pop
test
push
fdiv
shl
ins
cmp
xor
fadd
sahf
sbb
jp
pop
mov
(bad)
pop
mov
jno
jo
inc
xor
adc
ss
(bad)
mov
jae
mov
and
cld
jnp
sub
jbe
sbb
mov
call
mov
fwait
mov
push
enter
or
mov
les
jo
inc
test
cmc
mov
popa
mov
enter
aam
sti
gs
es
pop
mov
ss
ficom
mov
dec
ds
data16
cdq
xor
rcl
mov
fs
sub
dec
dec
out
shl
imul
int3
sahf
repnz
outs
cwde
out
xor
sbb
frstor
enter
cmp
and
(bad)
test
pop
push
leave
mov
jle
ins
lahf
dec
in
dec
jl
sahf
sub
les
int3
outs
jg
adc
pop
ss
mov
pusha
mov
mov
cmp
jmp
iret
clc
(bad)
std
push
mov
movs
call
in
pop
popa
mov
adc
es
pop
mov
xor
lahf
mov
xchg
aad
sbb
sub
adc
std
icebp
and
movaps
aas
mov
in
cld
xchg
pop
adc
xchg
imul
cmp
push
enter
(bad)
xchg
in
cmp
pop
ror
outs
mov
xlat
jno
jbe
jns
xchg
inc
mov
lods
push
and
sbb
out
(bad)
inc
add
retf
push
rol
inc
add
or
movs
out
arpl
mov
idiv
dec
lods
and
sti
outs
xor
mul
ins
pop
push
inc
pop
out
xchg
pop
fcmovbe
sahf
push
mov
sar
adc
jg
ins
mov
vsqrtps
pop
push
sbb
std
inc
add
push
js
fsubr
ins
out
cmp
add
imul
clc
jbe
and
in
in
fmulp
pop
les
cmp
add
sub
(bad)
xlat
xchg
dec
inc
or
call
test
and
push
cmc
cwde
xor
dec
(bad)
sti
push
pop
jp
add
push
test
(bad)
jnp
ret
pop
fisttp
sub
in
lods
adc
repz
stos
call
or
std
sub
movs
mov
pop
or
add
jae
adc
dec
dec
sub
cmp
imul
lods
xchg
cli
fnstsw
and
mov
mov
sub
rcr
mov
aad
mov
adc
(bad)
pop
aas
and
push
jmp
mov
cli
das
fcmovne
sbb
inc
gs
call
lahf
push
jmp
icebp
ins
inc
test
gs
mov
and
pop
out
hlt
ins
pop
inc
adc
fwait
test
push
int
inc
add
fwait
in
sbb
add
addr16
je
dec
lds
das
jb
inc
cld
sbb
outs
popa
pop
jmp
mov
(bad)
xchg
pop
pop
xchg
lods
shl
add
aam
es
ins
and
aas
lahf
xchg
nop
xchg
dec
lock
mov
jbe
call
adc
sbb
pop
daa
in
mov
stos
mov
adc
add
out
outs
pop
sub
repz
and
push
ror
int
xchg
push
fstp
cmp
dec
(bad)
loop
inc
jbe
push
mov
loop
push
xor
xchg
jb
jne
or
(bad)
std
data16
test
jo
jecxz
cmovae
cld
ror
call
mov
outs
sub
fsub
mov
xor
jne
(bad)
imul
repnz
movs
mov
sub
mov
jecxz
aas
mov
mov
inc
cs
sub
jle
xor
dec
jp
fwait
push
push
(bad)
adc
pop
push
pop
mov
in
(bad)
cli
loope
adc
mov
jae
adc
sbb
push
cmp
dec
in
jo
es
adc
dec
int3
fist
xor
xchg
or
mov
test
jbe
xor
int3
arpl
and
mov
(bad)
fs
push
mov
fiadd
jge
ja
out
pop
xchg
jae
sub
dec
cdq
mov
and
push
das
sbb
inc
jmp
and
fstp
dec
sbb
movs
push
sbb
push
leave
push
jmp
je
(bad)
imul
stos
dec
inc
clc
fstp
lahf
std
xchg
push
adc
(bad)
jo
repnz
xor
xchg
pop
jp
add
retf
push
popf
mov
and
arpl
addr16
adc
out
mov
jl
loop
sbb
js
aaa
shr
ja
and
jbe
(bad)
pop
push
data16
popf
iret
jmp
fdiv
add
aam
int3
lock
shr
xor
jg
neg
aas
dec
adc
add
in
jge
aas
xchg
adc
xor
pop
jo
aam
mov
pop
dec
add
jmp
clc
imul
jg
pop
cs
xor
adc
outs
cmp
icebp
add
mov
and
dec
pop
sbb
xchg
pop
pusha
sub
loop
mov
fmul
push
lahf
adc
cmps
dec
sub
cmp
loopne
xchg
shl
fs
test
add
jno
push
dec
cli
mov
inc
sbb
rol
pop
in
daa
inc
out
push
adc
inc
and
daa
pop
or
lahf
dec
pop
mov
jmp
pusha
pop
cmp
movs
les
call
into
pop
mov
jnp
add
mov
and
sar
inc
shl
push
test
cmp
push
mov
sbb
xchg
jp
rcr
xor
out
jp
push
dec
inc
movs
cmp
inc
mov
pop
aam
dec
ins
mov
call
mov
call
mov
sub
xchg
xchg
loopne
retf
push
adc
pop
mov
xchg
mov
mov
cmp
cwde
xor
loop
pushf
adc
sub
clc
retf
push
pushf
sbb
adc
ficomp
jno
add
inc
fwait
mov
sbb
int3
mov
mov
dec
test
loope
push
hlt
and
in
sub
fild
fcomp
sbb
cmp
(bad)
lea
ret
inc
add
scas
ds
call
cmps
sar
ret
test
dec
pop
jle
mov
sub
fisubr
cmp
jl
test
sbb
jmp
pushf
xchg
sbb
sbb
inc
cld
adc
mov
aas
dec
xor
lahf
ins
cmp
and
cmp
pop
pop
scas
cmp
mov
and
add
call
mov
stos
aaa
ret
pop
icebp
ffreep
sbb
in
push
test
sbb
push
sbb
inc
cmp
lods
cmps
jmp
fist
shr
std
jg
dec
dec
fimul
fwait
xor
mov
fisub
jb
leave
test
mov
cmps
mov
mov
fstp
and
inc
mov
repz
call
ret
lea
int
push
mov
lea
sbb
je
out
fimul
(bad)
xchg
cmp
xor
or
jmp
aas
ins
mov
stos
push
movs
in
cwde
aas
mov
push
leave
lds
loop
cmps
or
inc
daa
call
(bad)
inc
cld
push
lods
das
in
xor
scas
ja
(bad)
dec
xchg
mov
sbb
ja
mov
mov
pop
sbb
imul
es
add
cmc
test
cmp
sbb
sbb
pop
int
cmps
adc
or
ds
movs
jbe
dec
stos
sbb
push
xor
shl
push
sbb
sub
xchg
sub
lock
sub
rcr
dec
mov
sti
clc
movs
les
add
mov
xchg
mov
icebp
mov
movs
test
pop
adc
mov
mov
lea
sub
pusha
call
mov
stos
call
xor
mov
inc
ins
cwde
cld
addr16
in
sbb
pop
push
popf
(bad)
movs
adc
xor
ins
call
ret
jne
mov
and
out
lock
sbb
ror
pop
mov
pop
jns
mov
(bad)
mov
mov
inc
sbb
call
popa
out
add
add
int3
cmp
jg
sti
popa
arpl
dec
adc
adc
push
int3
cli
and
scas
adc
ret
xchg
inc
in
addr16
jle
repnz
cmps
push
xchg
push
mov
inc
cmp
pop
mov
mov
and
sub
inc
sbb
xor
out
loope
vmread
xor
cmps
jae
cwde
push
mov
(bad)
sub
fsubr
push
imul
inc
pusha
dec
jmp
add
pop
jle
cmps
inc
rcr
das
outs
push
jl
inc
imul
call
and
pop
dec
je
push
dec
cwde
call
xor
test
iret
ds
xchg
cmp
pop
repnz
sbb
imul
xchg
fs
mov
push
(bad)
cmp
cmp
rol
iret
xchg
inc
mov
test
cmps
jbe
or
sbb
sbb
jo
test
jb
out
add
(bad)
repnz
xchg
outs
ds
icebp
adc
and
fwait
cmp
push
stc
movs
mov
jge
xor
div
outs
stos
push
mov
mov
test
and
movs
push
or
add
shl
xchg
scas
retf
fisub
cwde
jb
push
add
cmp
imul
mov
mov
pop
movs
fnstcw
pop
pop
xor
jae
cmps
mov
fcmove
adc
mov
mov
add
outs
ins
pop
(bad)
sbb
add
dec
stos
mov
sti
jecxz
imul
cwde
stos
test
mov
stos
(bad)
rcr
rol
outs
adc
push
jbe
jge
fst
fistp
mov
mov
mov
cmps
jecxz
(bad)
iret
ja
xchg
call
out
loopne
mov
ret
mov
sub
data16
add
aaa
or
xchg
mov
mov
pusha
aaa
sub
hlt
mov
ins
lds
jns
mov
dec
sub
sub
mov
in
ins
mov
inc
arpl
stos
mov
sub
or
outs
xchg
stc
ret
xchg
xchg
bound
stos
xchg
test
push
mov
cmp
arpl
jge
imul
iret
into
xchg
das
xchg
pop
sbb
jmp
out
push
in
lods
sub
pop
rol
addr16
cmc
(bad)
sub
fs
cmps
out
inc
das
push
mov
in
dec
pop
ret
je
jecxz
fisubr
pop
repnz
mov
dec
jnp
test
sar
(bad)
les
and
cmps
test
xor
inc
ins
lods
mov
add
pushf
shl
xchg
xor
mov
nop
pop
pop
jns
inc
ret
in
jmp
clc
adc
push
imul
mov
fild
mov
cli
jnp
xchg
aad
shr
mov
mov
sub
aaa
out
cmc
in
bound
add
mov
fisub
enter
das
xor
cmp
pop
sbb
addr16
pop
jecxz
mov
in
lea
add
mov
push
push
mov
inc
or
loopne
out
movs
scas
mov
push
(bad)
sub
adc
sbb
inc
xchg
movs
xor
scas
in
das
inc
clc
mov
ret
cmp
bound
ins
pop
pusha
adc
pop
cmps
enter
addr16
scas
and
out
jmp
ret
sub
(bad)
sti
mov
jb
jne
pop
mov
arpl
xchg
test
jae
jecxz
cmp
scas
xor
xor
movs
inc
or
mov
push
and
mov
out
mov
int3
sbb
mov
mov
jmp
mov
jbe
push
imul
mov
and
add
leave
fsubr
ins
mov
mov
sbb
jmp
jmp
out
stos
cmp
ror
lea
jno
ins
pop
sbb
movs
je
movs
icebp
ja
ret
std
pusha
popa
xchg
xchg
sbb
inc
fbstp
mov
jp
inc
(bad)
inc
sahf
push
div
push
mov
test
enter
iret
adc
cwde
dec
gs
adc
push
push
jb
mov
mov
(bad)
xchg
adc
movs
mov
or
push
cmp
cmp
cld
test
aad
test
ret
retf
sub
aaa
xor
cwde
add
(bad)
retf
push
(bad)
out
push
add
or
(bad)
call
(bad)
lods
gs
xchg
jge
jae
(bad)
bound
sbb
xor
and
add
jbe
adc
cmp
mov
cmps
fcom
(bad)
mov
je
push
repnz
xor
sbb
fidiv
rcl
dec
out
dec
outs
cmp
ret
les
jle
das
xor
add
lahf
jo
popa
loop
ins
(bad)
outs
lahf
(bad)
push
je
jno
stos
xchg
(bad)
in
lock
shr
ds
mov
imul
dec
nop
xor
or
xor
icebp
ret
lea
add
push
shr
mov
cmp
aaa
sbb
xchg
cmp
movs
mov
sbb
adc
pop
movzx
mov
aaa
clc
add
cdq
neg
ret
loop
cmp
jp
inc
add
das
outs
mov
or
mov
daa
or
xchg
data16
inc
test
test
in
mov
adc
out
sbb
mov
dec
xchg
xchg
repnz
sbb
push
stos
sbb
sbb
ror
xchg
xchg
bound
int
pop
in
sub
inc
loope
dec
fcmovnb
movs
dec
or
fcomp
popa
scas
ja
mov
pop
and
mov
test
ret
pop
pop
pop
mov
int
test
add
cmp
pop
push
sub
out
sbb
lahf
jnp
sub
fisttp
ss
mov
mov
cld
push
gs
data16
out
sub
push
sahf
clc
jg
jecxz
xchg
lds
sub
shl
les
add
and
aam
popa
add
cmps
mov
aad
lods
data16
sbb
mov
mov
popa
stc
mov
loop
ror
mov
ret
fild
cs
dec
and
xchg
dec
enter
pop
sbb
mul
jne
rcr
push
and
sbb
jb
pop
and
mov
cmc
add
mov
les
outs
(bad)
mov
add
mov
add
repz
idiv
jmp
xchg
arpl
jecxz
call
jp
mov
rcl
push
sub
sbb
out
out
movs
dec
mov
aas
sub
or
mov
push
jae
and
xchg
push
mov
ss
in
mov
aad
ss
les
xchg
xchg
lock
push
sbb
in
arpl
nop
mov
jae
loope
iret
xchg
out
sbb
add
out
pusha
cmp
push
shl
ret
mov
lahf
les
mov
push
mov
sub
(bad)
jmp
mov
pop
test
aas
mov
push
push
mov
popf
call
in
scas
jg
aaa
into
aas
cdq
mov
aad
hlt
scas
rcl
mov
lds
rcl
mov
or
mov
mov
cs
push
imul
lods
leave
pushf
inc
movs
sbb
pop
or
int3
mov
lea
and
pop
xor
call
cmp
xor
cmp
fwait
mov
fnstenv
in
inc
cmp
xor
stc
mov
jmp
push
test
mov
mov
arpl
pushf
ja
pop
inc
fldcw
pusha
dec
adc
addr16
popa
dec
mov
inc
pop
shl
popf
adc
mov
sbb
mov
cmp
in
movs
adc
out
fstp
push
xchg
pop
xchg
add
jo
mov
test
enter
enter
test
(bad)
mov
test
mov
test
xchg
jl
cli
fwait
xchg
shl
jnp
adc
dec
mov
sub
int3
ffreep
pop
in
add
xor
dec
jns
dec
je
jge
dec
scas
repnz
jmp
jp
push
dec
adc
clc
loopne
imul
xor
repnz
or
cs
std
jl
push
lahf
iret
and
fmul
iret
xor
push
mov
pop
adc
enter
inc
ins
test
push
cdq
xchg
pop
(bad)
sbb
cmps
sbb
icebp
ins
pop
dec
xchg
rol
in
dec
(bad)
xchg
jns
ins
mov
daa
sbb
cmp
xchg
and
mov
rcl
sub
icebp
in
sbb
push
sub
int
mov
out
test
(bad)
das
sbb
sar
fimul
fst
arpl
pushf
mov
icebp
cmp
pop
imul
std
inc
ss
dec
fild
jge
ret
nop
cmp
jmp
je
xchg
out
inc
sti
pop
pop
cmp
push
std
jmp
sub
push
mov
data16
test
in
hlt
push
cmp
outs
fidivr
in
xchg
test
jb
addr16
ja
das
hlt
or
pop
aaa
pop
add
aas
mov
mov
xchg
mov
dec
ins
xchg
loop
pusha
dec
call
cmp
pushf
test
test
in
out
or
loope
mov
pushf
mov
push
add
dec
and
test
ficom
xchg
inc
test
dec
push
mov
mov
adc
aad
jmp
push
in
push
js
xchg
mov
ins
and
stos
test
mov
xlat
outs
push
and
xor
and
test
xchg
pusha
and
add
xchg
jmp
mov
lods
cmc
shr
out
(bad)
add
fld
dec
jbe
add
inc
in
bound
js
jno
stos
ds
sub
dec
or
lock
nop
push
test
mov
icebp
movs
pop
push
loopne
rcr
(bad)
int
pop
mov
adc
bound
cmp
dec
adc
int3
or
xchg
rol
sub
fwait
out
ds
adc
pop
push
jno
aaa
ins
jg
and
jmp
leave
fistp
(bad)
and
enter
and
scas
sbb
aam
cs
dec
push
pop
inc
inc
lahf
or
pop
inc
push
or
jp
sub
mov
push
and
mov
xor
test
jp
gs
mov
sbb
sbb
cmp
push
sub
dec
iret
lods
push
xor
adc
push
add
mov
(bad)
rcl
jg
sti
into
enter
jecxz
loop
xor
cmp
bound
pop
outs
inc
pop
pop
fwait
lock
pushf
div
pushf
iret
out
cs
in
sti
pop
(bad)
rol
jge
mov
cmps
mov
imul
retf
mov
sbb
fild
mov
daa
call
or
sub
cwde
xchg
int3
and
jb
lods
popf
retf
push
dec
jbe
xchg
(bad)
xchg
jne
adc
cmp
es
in
test
xchg
or
ds
das
jmp
dec
(bad)
and
in
or
add
add
lea
(bad)
nop
hlt
mov
cmpxchg
inc
mov
mov
imul
mov
iret
movs
add
mov
sub
mov
jmp
mov
push
or
jno
(bad)
nop
(bad)
in
lods
cmp
dec
shl
outs
xchg
sbb
adc
or
fwait
xor
movs
and
(bad)
push
cmp
pop
aam
and
and
mov
dec
or
clc
scas
sbb
ret
xchg
push
dec
into
out
mov
ficom
pop
jb
push
adc
dec
ret
xor
or
scas
xchg
sub
inc
loope
dec
xor
arpl
and
sbb
stos
inc
aam
inc
(bad)
and
mov
inc
movlps
aam
sahf
sar
movs
dec
cmp
jmp
adc
pop
mov
pop
data16
nop
fwait
push
push
xchg
and
je
hlt
mov
mov
adc
jp
sub
jmp
loope
jns
mov
xchg
and
jmp
dec
jmp
dec
jae
pop
ror
cmps
and
mov
mov
xchg
inc
dec
(bad)
jo
pop
sahf
pushf
mov
sar
mov
jns
or
int3
sar
sbb
in
sbb
mov
cs
and
loop
mov
mov
xor
(bad)
sub
rcl
pop
jne
mov
jecxz
pop
adc
imul
sub
imul
mov
push
inc
enter
adc
sub
stos
shl
je
pop
outs
(bad)
adc
fldenv
sti
in
fsubr
pushf
xchg
xchg
xor
sbb
ins
lock
scas
cdq
xor
(bad)
movs
aaa
cmp
into
popa
pop
into
mov
hlt
cmp
cdq
nop
xor
and
repnz
out
dec
cdq
sar
shl
sbb
out
cs
and
cdq
fidiv
jle
xchg
inc
out
mov
xchg
inc
mov
ret
btr
sub
mov
aas
xor
das
jbe
dec
jns
outs
aad
mov
ret
mov
mov
fcmovnbe
enter
nop
pop
pusha
or
xor
adc
mov
jl
enter
xor
clc
adc
adc
and
call
mov
data16
sub
mov
arpl
xor
dec
jnp
in
xchg
(bad)
cld
add
jecxz
ror
(bad)
addr16
mov
stos
fmul
out
jmp
jmp
hlt
adc
cmps
add
nop
inc
stc
push
repnz
xchg
pop
mov
cli
(bad)
mov
movs
or
icebp
xor
inc
(bad)
mov
lods
sub
and
cdq
test
pop
add
pop
sahf
dec
dec
add
add
hlt
push
sbb
mov
stc
inc
cmp
stos
in
pop
push
fcomp
stos
mov
iret
out
xor
sbb
ret
movs
mov
lods
test
and
out
mov
adc
jmp
adc
mov
arpl
cmp
sbb
xchg
mov
stos
xchg
or
lock
xchg
cmp
loop
fwait
jl
adc
jnp
les
out
pusha
scas
les
lods
adc
push
movs
mov
iret
repz
jmp
(bad)
and
arpl
mov
ds
push
seta
in
int
cmps
pop
add
call
cmp
sub
adc
scas
ins
sub
jo
dec
fwait
inc
dec
mov
idiv
mov
test
ja
test
push
jp
fcmovne
add
cwde
dec
jb
addr16
xchg
bound
js
inc
mov
(bad)
push
cwde
sahf
arpl
ss
test
je
cwde
(bad)
xchg
js
jae
aad
or
jge
push
inc
or
mov
addr16
add
or
(bad)
jns
jg
push
sar
shl
add
cmp
xchg
push
pop
add
xchg
jae
cmp
pop
mov
arpl
or
adc
xchg
aaa
cs
ins
dec
xchg
out
retf
ins
and
leave
add
(bad)
inc
push
dec
cld
push
push
pop
pop
or
jmp
dec
test
xchg
jmp
scas
cmps
arpl
jnp
fs
mov
xchg
leave
(bad)
scas
cmp
and
adc
adc
jge
ds
pop
sbb
call
cmc
(bad)
mov
mov
jne
or
mov
in
(bad)
leave
movs
cdq
or
jo
fld
pop
inc
push
cmp
xor
push
aad
jno
jmp
inc
pop
push
sti
and
mov
sar
sub
and
dec
sbb
hlt
or
lahf
push
adc
push
mov
jne
pop
jo
retf
stos
movnti
(bad)
mov
(bad)
adc
es
jae
xchg
adc
mov
(bad)
push
mov
cmps
mov
(bad)
sub
mov
sar
cmp
xchg
xor
and
stos
jae
pop
movs
movs
and
enter
dec
sbb
mov
int
cmps
push
add
xor
adc
(bad)
add
pop
stos
jle
sbb
inc
scas
xchg
inc
inc
jb
loop
lods
jno
add
push
mov
outs
adc
inc
retf
and
add
jmp
jne
inc
popf
loopne
ins
xor
cdq
dec
in
sub
xchg
mov
adc
aad
gs
adc
cmp
jbe
ds
dec
(bad)
int3
daa
xchg
lods
pop
(bad)
jl
mov
ss
lahf
pushf
adc
mov
call
int
mov
imul
push
and
lods
dec
jmpw
fild
mov
(bad)
jl
movs
lds
jge
pop
stos
sub
adc
sbb
adc
push
or
dec
loop
jle
jnp
lock
jnp
scas
jle
repnz
mov
push
push
movs
sar
sub
(bad)
pop
stos
(bad)
cs
mov
or
pop
xor
shr
add
jecxz
and
pop
pop
jle
jo
and
mov
into
push
mov
add
push
ret
push
xchg
js
inc
dec
cmp
(bad)
cmp
inc
push
mov
loopne
test
or
push
out
jmp
ror
cmps
pusha
pop
pop
scas
sbb
xchg
and
or
cmp
ins
dec
xchg
call
pop
aaa
gs
ins
jmp
dec
stos
inc
jnp
mov
std
lock
sti
jmp
dec
cmp
iret
(bad)
outs
cmps
inc
and
into
out
cld
adc
pop
push
cmp
dec
je
xor
xor
mov
lahf
jle
jl
aaa
push
mov
sbb
popf
je
mov
(bad)
popa
add
push
int3
sbb
push
stos
jecxz
ss
not
(bad)
xchg
mov
out
ret
(bad)
pop
or
ret
xlat
jne
cmc
ret
mov
mov
adc
sub
inc
add
stos
rcr
jne
mov
mov
mov
sbb
repnz
jae
inc
xor
xor
call
mov
and
or
xlat
sub
mov
(bad)
aas
ja
mov
sbb
dec
or
push
leave
pop
ds
inc
jg
sbb
out
sub
or
out
adc
(bad)
pop
fistp
pop
inc
pop
das
outs
sbb
repz
jg
push
lahf
sbb
jno
lods
scas
cmc
cli
mov
sbb
inc
mov
inc
pop
and
xchg
or
das
shl
fisttp
xchg
inc
je
test
cmp
xor
or
inc
push
pop
fwait
lea
pushf
ss
fisttp
or
dec
or
sar
adc
pushf
xor
cmp
add
inc
push
dec
pop
xor
mov
xor
mov
into
sub
jno
mov
les
fs
aas
scas
push
dec
cmp
int3
cmp
pop
xor
lea
iret
sbb
jo
fwait
mov
push
loope
mov
xchg
fxch
or
mov
jp
ret
push
pop
dec
nop
data16
mov
push
neg
sbb
in
cmp
sbb
cmps
fld
cld
(bad)
nop
add
(bad)
aaa
lahf
mov
cmp
and
imul
cmp
or
cmp
cmp
mov
shl
arpl
push
scas
hlt
fwait
pop
xchg
repz
jns
pop
fsubr
aas
xchg
loopne
ins
imul
clc
or
aas
dec
stos
mov
in
pop
cmps
dec
dec
rol
cmps
cmp
and
mov
int3
jmp
iret
sbb
sub
mov
retf
bound
movs
in
retf
inc
cli
mov
sbb
mov
xor
pop
clc
in
jmp
xor
dec
add
test
mov
(bad)
scas
in
in
or
pop
int3
scas
cmp
mov
mov
mov
lahf
or
retf
ret
dec
lods
repnz
arpl
xchg
and
repz
push
in
pop
sub
jns
push
js
and
xor
jecxz
std
jl
rcl
push
inc
scas
scas
in
add
test
and
fldcw
jmp
mov
(bad)
sub
jmp
pop
adc
in
adc
xor
xor
xchg
aas
cmp
cs
sahf
call
xchg
inc
loope
jno
sahf
icebp
ds
inc
mov
unpckhps
mov
movhps
sbb
push
ss
jmp
mov
arpl
or
push
aas
pop
adc
sbb
in
ret
xchg
das
jns
push
pop
jle
xchg
cmps
fmul
xlat
jb
(bad)
bound
aad
jmp
push
or
jmp
fistp
into
dec
or
and
(bad)
mov
sahf
ret
shl
jp
(bad)
lds
ret
cmp
cmp
test
ins
xor
and
sar
push
push
pop
adc
lds
or
call
mov
mov
js
push
sub
jl
ss
addr16
push
fst
js
inc
inc
add
stc
(bad)
mov
sbb
mov
out
push
jne
sti
sub
sar
mov
jns
pop
test
push
add
sbb
xor
into
sub
add
pop
xchg
and
cmps
out
retf
test
les
jge
aam
dec
js
add
cmp
mov
pusha
repnz
push
dec
arpl
push
sar
(bad)
cli
cmp
push
pop
jg
out
xor
mov
inc
sbb
ins
retfw
std
ja
scas
ss
add
(bad)
pop
inc
faddp
xchg
scas
gs
popf
loopne
xor
jno
sub
mov
ror
sub
mov
lds
and
push
mov
fcom
cmp
or
pop
fiadd
aas
xchg
pop
dec
pop
inc
fs
mov
out
and
inc
jge
mov
jno
pop
ja
in
mov
adc
push
test
dec
jno
mov
dec
cwde
mov
push
dec
jecxz
inc
lods
fist
test
sbb
or
imul
stos
or
lds
cs
cmp
jp
inc
sub
loop
scas
repnz
ret
shl
out
pushf
aaa
xchg
lods
rol
jb
cld
mov
add
je
or
shl
movs
fidiv
popf
in
in
popf
mov
aas
xchg
jbe
in
jo
inc
or
jbe
mov
or
add
fidivr
or
(bad)
mul
xor
jbe
test
push
in
popa
cld
jns
nop
mov
mov
xchg
or
dec
inc
loope
adc
movs
mov
jno
push
rcr
jo
or
movs
rol
test
add
cmc
repnz
fs
out
ror
jge
cmps
outs
mov
or
std
xor
repnz
sbb
push
loope
outs
pop
sar
movs
(bad)
sbb
pop
xchg
cld
cmp
push
add
imul
sub
retf
mul
push
inc
lods
pop
fisub
jmp
outs
into
push
push
mov
scas
inc
and
xchg
(bad)
popf
(bad)
sub
sbb
push
loope
sub
and
aaa
mov
add
jg
mov
adc
jmp
imul
pushf
sbb
jmp
xchg
fistp
call
test
push
rcl
mov
push
cld
add
cmp
aam
add
repnz
jae
fistp
mov
or
les
les
and
shl
call
sbb
push
aam
pop
(bad)
bound
and
je
sbb
out
(bad)
mov
push
push
sti
sub
xor
dec
and
inc
xchg
stc
xor
call
retf
fldcw
ds
jno
test
lods
cmp
aas
mov
(bad)
sar
sub
sti
inc
jl
mov
xchg
mov
out
pop
mov
imul
mov
xor
cmps
xchg
cli
xchg
adc
loop
and
push
out
jmp
inc
push
sub
daa
into
add
lods
and
add
les
xchg
mov
leave
dec
shl
mov
sbb
push
ror
push
inc
push
je
in
dec
popa
jg
adc
add
ds
push
loopne
cmp
bound
imul
mov
in
and
pusha
fcmovnu
into
push
add
rol
(bad)
push
sbb
pop
push
mov
or
test
mov
adc
xchg
setg
dec
icebp
in
dec
and
and
jl
int
das
cmp
inc
pop
fst
(bad)
jbe
mov
mov
stos
push
hlt
pop
outs
sti
in
jmp
fcmovbe
push
leave
mov
xchg
in
dec
pop
std
cs
pop
addr16
jge
scas
mov
ss
cmc
out
cmps
out
test
mov
popf
and
inc
sar
cld
call
add
pop
adc
or
pop
rcr
inc
(bad)
fadd
int3
mov
shl
inc
jne
cmp
aam
mov
(bad)
push
push
lods
int3
cmp
mov
sbb
sub
and
imul
add
add
push
mov
push
fsubr
and
and
gs
ret
mov
retf
and
jl
lea
sar
int3
enter
cmp
mov
clc
les
add
xchg
arpl
clc
(bad)
shl
jnp
cmp
and
nop
cmp
and
in
in
pop
mov
pusha
not
sbb
add
clc
or
dec
mov
xchg
jl
inc
mov
mov
lods
movs
dec
and
cmp
fild
xor
dec
mov
stos
mov
pop
xchg
(bad)
mov
push
cmp
movs
loopne
mov
push
scas
or
fwait
mov
sub
inc
adc
jno
(bad)
xor
scas
mov
push
pushf
jmp
out
repnz
or
jg
cmp
dec
dec
fsubr
fcomp
loop
stc
sbb
adc
pop
adc
xchg
sub
imul
dec
inc
(bad)
in
pushf
ret
aad
mov
fild
das
inc
sub
push
popa
jmp
xlat
xor
push
jns
aas
mov
xchg
cwde
mov
hlt
xchg
pop
sub
jbe
mov
lds
clc
cmp
mov
cdq
xor
daa
shr
mov
sbb
enter
(bad)
push
in
or
jnp
sbb
(bad)
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
add
pusha
js
int3
aaa
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
inc
and
sbb
(bad)
mov
(bad)
imul
ds
mov
add
nop
mov
xor
ret
adc
(bad)
fst
scas
mov
dec
(bad)
jg
ss
mov
fstp
mov
call
adc
lds
dec
jl
cmp
stos
mov
jp
push
cli
pop
mov
mov
and
mov
hlt
sub
loope
in
ds
pop
pop
mov
dec
sbb
pop
adc
test
mov
push
inc
out
je
ss
push
cmps
and
jbe
sti
dec
sub
dec
jle
jp
ins
jno
scas
mov
inc
pop
inc
outs
dec
pushf
cwde
cmps
ins
add
and
mov
in
push
je
xchg
sbb
scas
(bad)
call
outs
or
shl
movs
or
pushf
or
outs
mov
xchg
jmp
cmp
out
iret
(bad)
push
pop
mov
adc
fcmovb
dec
dec
inc
(bad)
ins
pushf
sbb
dec
fistp
jne
test
imul
and
push
jp
int3
xchg
(bad)
clc
adc
mov
add
enter
mov
ds
or
adc
mov
ds
loope
push
push
stos
or
sar
xlat
fnstsw
push
mov
popf
jb
repz
push
jecxz
push
inc
inc
sub
scas
popf
js
sub
xor
xor
add
pop
push
jb
daa
mov
loopne
jmp
pop
jge
fs
mov
out
jmp
xchg
in
pushf
pushf
or
or
push
cwde
dec
cmps
cli
pop
out
ror
rcl
icebp
xchg
shl
add
mov
mov
xor
adc
arpl
stos
(bad)
push
jle
(bad)
fiadd
(bad)
cmps
xor
ins
dec
out
xchg
mov
int3
out
push
lods
mov
dec
xor
dec
cld
push
cs
(bad)
inc
(bad)
pop
xchg
addr16
aas
adc
inc
cmc
movs
push
jno
add
loopne
mov
retf
repnz
mov
xlat
adc
add
les
sti
push
stos
cmp
lods
mov
mov
inc
cmc
rcr
sti
ret
(bad)
leave
dec
mov
dec
data16
xor
movs
fisttp
or
movs
ss
xchg
push
retf
xchg
outs
hlt
sub
addr16
aaa
adc
lods
inc
mov
sbb
cmps
lds
mov
jbe
fcmovnu
stc
push
jp
out
add
arpl
pop
inc
test
mov
and
xchg
adc
das
mov
adc
fsubr
pop
dec
shld
test
mov
push
or
dec
or
sbb
ja
pop
call
dec
daa
scas
pop
and
repz
fs
in
cli
test
popf
cmp
mov
popa
xlat
xor
dec
out
or
adc
xchg
inc
popf
js
mov
mov
int3
shrd
aas
cmp
jns
loope
push
mov
test
in
push
cmc
mov
push
pop
push
fild
dec
add
jno
imul
inc
mov
sar
xor
xchg
mov
push
mov
sub
cld
mov
cmp
ds
jmp
pop
fadd
or
sub
ins
test
ins
xor
inc
hlt
ss
pop
call
outs
jp
aam
bound
movs
mov
dec
mov
dec
mov
sbb
xchg
stc
cmp
xor
mov
sbb
inc
cdq
stos
pmullw
aam
cli
jmp
inc
mov
iret
jp
and
cld
icebp
xchg
out
xchg
xchg
out
(bad)
and
test
sub
push
sub
fiadd
fiadd
jns
sbb
sbb
int
out
cmps
jne
push
add
das
jecxz
sub
stos
jge
sbb
bound
xchg
ja
mov
sbb
out
out
inc
mov
xchg
pop
jb
addr16
fmul
ret
jbe
or
xor
sub
in
dec
adc
sub
mov
pop
sbb
(bad)
push
mov
push
xchg
std
ja
xchg
mov
invd
rcr
cwde
neg
test
out
call
sbb
fidivr
inc
or
or
mov
jne
jnp
sbb
push
dec
repnz
fsubr
icebp
fbld
or
inc
mov
xchg
cdq
icebp
retf
(bad)
imul
rep
push
(bad)
inc
dec
outs
jnp
(bad)
enter
xor
and
cmp
(bad)
cmp
(bad)
xchg
(bad)
rol
dec
lods
jp
call
mov
or
or
aaa
shr
jmp
das
push
sbb
inc
movs
adc
mov
mov
aam
fcomp
dec
jo
dec
cmp
add
in
stos
dec
ds
popa
enter
push
pop
pop
ret
lods
loopne
lds
les
bnd
cmp
mov
mov
rcr
jne
add
(bad)
pop
cmp
bound
inc
(bad)
xchg
pop
out
leave
enter
sub
xor
mov
inc
arpl
jb
call
mov
(bad)
or
push
out
repz
loope
loop
jb
fcmovne
xlat
sbb
jmp
xor
mov
inc
clc
mov
int3
inc
scas
(bad)
mov
push
es
loope
push
aam
pusha
(bad)
icebp
movs
lods
or
test
xor
fbstp
xchg
lds
js
shr
mov
data16
xchg
test
sub
adc
or
std
sti
dec
fs
pop
loopne
(bad)
sbb
ror
add
sub
mov
xor
pop
cmc
mov
in
add
mov
xor
mov
cmps
mov
movs
xor
push
cmp
adc
xor
hlt
pop
push
(bad)
cli
idiv
and
push
ja
dec
mov
dec
inc
dec
jmp
bound
dec
shl
loopne
(bad)
out
out
inc
popa
sub
es
and
in
mov
xor
push
pop
fisub
ret
sub
adc
dec
adc
call
xchg
mov
(bad)
or
aas
mov
out
mov
ja
ret
push
movs
adc
lock
dec
sbb
retf
pusha
arpl
or
cmp
ds
sbb
pop
and
mov
and
(bad)
daa
mov
dec
and
mov
sti
mov
mov
ss
sar
jo
(bad)
xor
cmps
sbb
sbb
and
loope
jbe
inc
mov
lods
div
add
retf
mov
loop
mov
mov
test
jne
jo
mov
fisttp
repz
add
cdq
inc
out
stos
or
sub
add
outs
or
xor
outs
dec
repnz
mov
xchg
popa
sbb
loopne
push
mov
(bad)
and
or
sub
cmp
xchg
scas
adc
inc
lahf
xchg
sbb
sub
jo
push
cmp
pop
push
sti
mov
mov
ss
fmul
in
mov
and
movs
mov
out
es
inc
add
inc
pop
mov
imul
jmp
idiv
cs
xchg
mov
xchg
mov
push
pop
adc
jno
(bad)
jle
stc
rcr
movs
outs
loopne
rcr
in
mov
lods
shr
inc
icebp
fidiv
xchg
cmp
sub
ficomp
sti
sub
mov
out
and
out
xlat
add
xchg
sbb
call
sbb
pop
dec
out
pop
retf
cmps
mov
leave
mov
(bad)
xchg
cwde
xor
xor
push
mov
ss
xor
adc
or
and
neg
add
or
add
jne
call
dec
leave
lock
pusha
push
push
jmp
outs
lahf
jo
mov
fdiv
jo
push
arpl
jae
lock
nop
(bad)
loopne
arpl
pop
out
adc
push
jmp
ret
cs
outs
pushf
sbb
icebp
jp
(bad)
xchg
cdq
jmp
fstp
mov
sub
cdq
push
mov
arpl
push
mov
bound
xchg
cmp
cmp
fistp
adc
jns
dec
pop
das
cmps
pusha
mov
call
inc
jmp
mov
xchg
outs
gs
loopne
loope
add
and
xchg
lahf
int
mov
adc
mov
stos
cld
out
pusha
add
or
fucomi
adc
test
mov
fnstsw
xor
push
mov
scas
(bad)
les
cld
add
adc
cmps
mov
adc
js
inc
arpl
fidiv
and
adc
in
rcl
dec
sub
mov
outs
add
or
pop
mov
cli
or
xchg
adc
and
pop
lds
aam
and
inc
popf
mov
fsubr
xchg
dec
inc
inc
push
and
inc
ret
mov
outs
ins
aas
adc
push
jmp
fisub
out
lea
std
icebp
jmp
clc
stos
push
mov
pop
add
call
mov
add
mov
cs
sahf
add
scas
pop
mov
dec
out
add
push
fld
ret
mov
push
cmp
xor
mov
jns
sub
xor
mov
mov
sar
mov
jb
test
mov
das
hlt
js
rol
or
cmc
adc
(bad)
xchg
sub
adc
push
scas
icebp
cmp
shl
inc
fwait
outs
int
or
jmp
add
ins
dec
jp
push
pop
xor
inc
scas
scas
mov
lods
(bad)
mov
leave
shr
xor
fsubr
in
inc
jmp
sbb
jns
jmp
mov
fadd
leave
pop
push
dec
cs
jecxz
dec
dec
push
pop
ret
add
jmp
rcr
outs
js
cmp
into
jg
jb
mov
xor
push
pop
adc
sbb
inc
xchg
cmp
pop
adc
push
enter
scas
fs
mov
outs
scas
mov
mov
sbb
dec
jmp
jecxz
adc
out
push
adc
out
(bad)
out
jns
adc
fdiv
sbb
push
sahf
les
pusha
ja
sub
add
gs
stos
mov
xchg
cld
push
or
mov
frstor
out
aaa
and
inc
fs
repz
jo
push
je
sbb
mov
add
jae
sub
inc
add
push
movzx
push
aad
dec
ins
push
inc
ret
clc
push
xlat
sub
(bad)
cmc
enter
pop
addr16
out
mov
cmps
dec
shr
ja
or
rcl
loope
outs
scas
lods
sub
xor
push
int3
pop
imul
add
push
js
mov
jae
mov
jmp
or
push
fisub
inc
xlat
xchg
inc
pop
ret
aaa
push
mov
imul
xchg
inc
(bad)
fistp
popa
jb
mov
push
or
sahf
stc
imul
lea
push
neg
es
jg
cmp
std
(bad)
xlat
dec
push
fwait
imul
daa
sub
fs
and
pop
jae
retf
or
pop
ret
jle
xchg
test
(bad)
fdivrp
cmp
ret
(bad)
enter
into
xor
leave
mov
dec
jo
mov
ret
jno
cmp
cmp
cdq
sar
push
ds
in
(bad)
gs
out
mov
mov
div
sub
pop
or
jo
add
mov
sbb
leave
mul
dec
sahf
in
iret
xlat
shl
sub
push
stos
scas
mov
push
push
jno
js
or
or
xchg
mov
retf
and
push
and
pop
daa
jo
fcmovnu
or
pop
test
aad
sub
sbb
dec
mov
loopne
sbb
jmp
sbb
xor
and
inc
pop
and
ins
mov
ror
rcl
das
pop
sbb
sbb
les
dec
aad
jle
leave
mov
sub
mov
pop
push
pop
mov
int
mul
push
mov
test
jg
push
inc
mov
jge
mov
popa
ret
inc
mov
call
test
fcomp
aam
mov
adc
adc
(bad)
fst
pop
fmul
jg
ins
pushf
bound
iret
test
jno
scas
cld
ret
xchg
sbb
sbb
retf
or
arpl
test
or
into
loop
cli
lds
jb
jbe
addr16
adc
push
inc
daa
pop
mov
or
das
cmp
sub
(bad)
out
gs
dec
adc
push
mov
adc
mov
rol
data16
cwde
jmp
movs
xor
pop
rcl
or
retf
int3
or
mov
mov
cmp
add
inc
mov
cmp
test
xchg
mov
dec
cdq
call
xor
stc
sub
push
leave
cmovo
xor
or
icebp
rcl
and
jg
or
and
sbb
mov
cmp
pop
fisttp
cmp
jno
mov
rol
fisubr
mov
lahf
sub
inc
push
pop
mov
cmp
xchg
mov
jecxz
or
xchg
cmps
call
jnp
outs
inc
adc
das
mov
sbb
sub
and
(bad)
shl
jmp
sub
mov
icebp
movs
clc
xchg
xlat
mov
sahf
push
sbb
xor
and
dec
xor
dec
mov
push
mov
xchg
jl
hlt
in
sbb
mov
xor
clc
mov
push
adc
daa
push
mov
xchg
push
inc
stos
push
in
push
fwait
push
data16
mov
ret
mov
push
ret
mov
xor
aam
push
sbb
out
or
lahf
bound
adc
(bad)
adc
xchg
jne
add
jb
mul
int3
push
or
sbb
out
sub
rcr
jno
jo
lahf
ss
mov
pop
cmp
into
or
jbe
cmp
cs
(bad)
jmp
mov
mov
lea
jbe
sub
mov
(bad)
test
nop
or
outs
mov
mov
pop
xchg
pop
pop
aaa
lods
xor
jecxz
pop
out
gs
call
push
jge
mov
sti
sbb
jns
sub
cmp
int
sub
jbe
iret
pop
sbb
push
shl
icebp
sbb
mov
xchg
jle
(bad)
jmp
mov
fmul
inc
ins
out
and
stc
mov
(bad)
push
lods
mov
lea
int
ret
or
movs
xchg
call
rcl
mov
sbb
mov
daa
cdq
call
loopne
mov
push
mov
push
mov
jae
fcom
and
lods
and
fsubr
popa
jg
dec
mov
(bad)
push
(bad)
aas
dec
adc
dec
dec
sub
pusha
js
ja
out
aaa
cmp
pop
mov
inc
jecxz
jo
out
dec
sub
and
push
xchg
or
call
adc
test
out
test
daa
mov
mov
nop
call
dec
outs
data16
call
xchg
cmp
push
jecxz
mul
jl
and
push
daa
xor
mov
std
mov
sbb
test
mov
push
jg
jl
mov
xor
sub
mov
in
scas
cmp
mov
add
add
push
imul
add
ins
dec
mov
mov
ret
pushf
out
sub
jle
xchg
mov
dec
xchg
cmps
pop
pop
ret
ja
add
enter
into
ins
ror
or
sbb
add
(bad)
xchg
sub
mov
add
shr
(bad)
xchg
mov
adc
hlt
dec
jne
test
inc
mov
dec
iret
jp
push
jbe
jg
sub
sub
adc
scas
add
pop
push
pop
mov
je
and
xor
xor
pop
mov
push
mov
add
mov
cmp
add
inc
repnz
(bad)
lods
lahf
adc
push
cld
sbb
dec
in
(bad)
fcomp
aam
push
rcr
out
mov
xor
fldcw
mov
mov
push
mov
mov
mov
les
les
inc
mov
ret
and
sub
sbb
adc
sub
jne
iret
pop
ret
shl
out
add
div
add
mov
adc
adc
call
shl
mul
dec
sub
xor
cdq
mov
mov
mov
mov
call
pop
in
lods
mov
cs
sub
and
rcl
iret
sbb
adc
pop
out
adc
sbb
lds
mov
xchg
cli
das
mov
clc
adc
mov
pusha
adc
add
mov
(bad)
loopne
hlt
mov
mov
out
ins
popf
push
sub
mov
push
push
imul
repnz
test
popf
ret
cs
mov
imul
cmp
mov
mul
scas
cmps
fucomp
cdq
fwait
and
jge
dec
and
pop
lahf
lock
push
mov
popw
cmp
ror
push
ficomp
call
sbb
(bad)
sbb
push
dec
sti
ja
ss
repz
jp
xchg
and
push
jnp
mov
sub
pop
or
sbb
sub
bound
mov
clc
ja
pop
sbb
loop
jge
out
aam
test
push
test
xor
push
inc
iret
xchg
imul
jecxz
dec
into
jne
inc
ret
dec
or
jp
mov
mov
dec
and
xchg
sbb
outs
mov
lods
movs
movs
sar
or
mov
and
mov
pop
mov
std
mov
fwait
loopne
sub
pushf
mov
push
loop
das
bound
fcmovnbe
xor
pushf
pop
out
inc
mov
mov
sahf
push
sub
add
ins
push
jno
xchg
cmp
call
xor
adc
pop
mov
retf
cmp
cmp
mov
stc
mov
push
xor
test
(bad)
push
ins
xchg
inc
dec
or
ins
inc
aam
ret
ret
dec
out
pop
xchg
push
lods
lods
push
(bad)
sbb
pop
pop
fwait
mov
xor
inc
fidiv
out
(bad)
in
mov
mov
mov
jb
mov
into
sti
dec
ror
mov
test
fimul
lahf
or
inc
inc
not
xor
cmp
mov
pop
ja
lock
nop
into
sub
sahf
cmps
fsubr
(bad)
cmp
popa
rcl
loop
mov
es
pop
xor
jmp
sbb
and
add
inc
xchg
xchg
jnp
retf
fdivr
ja
pop
pop
nop
jg
int3
loopne
cmp
(bad)
repnz
mov
call
sbb
ds
push
pop
retf
inc
into
add
lods
pop
(bad)
dec
jmp
psubsb
push
sbb
sub
mov
call
inc
or
mov
cmp
cmps
stos
mov
inc
push
pop
pop
ficom
inc
sar
test
push
push
js
add
nop
push
scas
mov
retf
cmp
out
es
jmp
loope
sbb
in
cmp
pop
cmp
mov
movs
sbb
and
dec
cdq
fnstenv
mov
mov
add
ret
jecxz
push
lea
shl
jecxz
int3
mov
repz
movs
or
pop
cmps
sub
aam
pop
xchg
adc
jne
push
xor
sbb
or
fnstsw
imul
dec
mov
dec
mov
mov
arpl
pop
lods
lock
cmps
push
icebp
xor
pusha
adc
sbb
sbb
cmp
or
test
enter
and
stos
jl
js
das
mov
inc
je
or
leave
fbld
xchg
es
xor
(bad)
das
mov
jle
push
dec
inc
nop
frstor
mov
dec
xor
adc
or
pop
cmp
inc
and
repnz
or
clc
stos
mov
dec
xchg
inc
lock
push
call
retf
add
jge
sti
jno
mov
and
xrelease
fmul
shr
add
sbb
xor
imul
jmp
retf
ror
das
mov
sbb
bound
ret
lods
cmps
mov
push
and
mov
mov
pop
pop
adc
adc
dec
push
mov
lahf
sbb
addr16
adc
mov
aam
je
fnstcw
fcom
jns
mov
outs
jbe
(bad)
rcr
mov
mov
adc
dec
out
add
fdivr
adc
xor
in
fadd
add
cs
stc
lea
sbb
xchg
jb
movs
sahf
(bad)
mov
addr16
shl
popf
daa
call
mov
scas
mov
sbb
test
or
mov
pop
mov
movs
dec
inc
dec
imul
pop
fwait
mov
mov
mov
adc
inc
xor
aas
push
rcl
data16
iret
je
push
fdivr
jle
and
fstp
dec
(bad)
fs
out
pop
cmp
inc
or
shl
or
dec
stos
call
push
pop
push
pop
icebp
dec
call
xchg
jg
outs
sbb
pop
and
cmps
in
ss
cmps
dec
or
data16
sbb
(bad)
repnz
mov
das
inc
mov
inc
push
aam
loopne
ror
retf
scas
cs
xchg
xor
jp
loope
(bad)
cwde
push
sbb
jecxz
push
jmp
mov
ret
adc
neg
outs
call
mov
jb
mov
lea
mov
(bad)
(bad)
mov
imul
icebp
std
add
adc
clc
fnstenv
cmp
sbb
dec
stos
inc
pop
repnz
jle
in
mov
pop
sub
pminsw
(bad)
or
jne
ret
cmp
shl
ja
movs
int3
sar
iret
scas
cmps
dec
icebp
mov
jne
lahf
push
scas
ror
ins
adc
xor
rcl
out
push
mov
inc
cld
imul
mov
jno
idiv
xchg
lds
push
lock
xor
(bad)
int
push
shl
jcxz
pop
jle
movs
pop
pop
aaa
and
jmp
add
add
push
jb
mov
xchg
sub
gs
aam
cld
ret
pop
cmp
jno
mov
fnstcw
loopne
(bad)
adc
ins
ds
mov
adc
pop
lds
in
xchg
mov
aam
iret
add
daa
adc
retf
mov
xchg
mov
cmp
scas
mov
lds
cs
repnz
push
push
lea
add
adc
loope
adc
push
(bad)
dec
xor
jl
fimul
mov
cmp
hlt
jae
sub
cli
mov
cmp
jmp
int3
pop
add
xchg
int3
retf
inc
mov
xor
cli
mov
mov
outs
inc
adc
bound
xlat
mov
xchg
mov
jbe
daa
bound
in
add
dec
(bad)
mov
sti
enter
or
push
mov
dec
rcr
mov
sub
aad
aam
in
shl
mov
sbb
cdq
out
xor
or
int
fs
retf
mov
(bad)
sub
lock
outs
mov
jmp
loopne
dec
xchg
and
int3
fild
push
std
retf
stos
ret
(bad)
sti
sub
sub
lods
(bad)
je
lods
xor
add
pop
jmp
jo
bound
push
cmp
pop
hlt
test
dec
je
in
aad
xchg
call
and
std
test
bound
dec
pop
cli
mov
mov
sub
nop
fild
or
mov
jecxz
mov
dec
test
sbb
dec
out
data16
sbb
test
aam
fs
mov
imul
nop
sub
retf
out
pop
inc
in
add
(bad)
aas
mul
xor
and
jns
pop
in
xchg
retf
movs
sti
out
sub
add
(bad)
stc
xchg
scas
xchg
jg
push
add
push
pop
or
test
pop
add
mov
mov
push
xchg
es
aam
icebp
pop
xor
jnp
repz
inc
push
pop
pop
xor
adc
adc
cmp
xchg
loop
ret
xor
mov
sub
pop
movs
retf
mov
das
inc
stos
mov
cmp
dec
mov
aaa
push
mov
mov
or
adc
pop
sub
out
pop
or
or
daa
inc
mov
inc
fld
mov
jmp
sbb
sbb
pusha
pop
jg
pop
xchg
and
adc
sbb
inc
and
jne
(bad)
push
cmp
outs
mov
mov
jno
inc
test
fs
dec
aad
(bad)
lock
retf
shl
fcom
mov
cmps
(bad)
in
mov
sub
inc
outs
das
ins
add
(bad)
fcom
cmp
push
sbb
adc
fist
cmp
ret
sahf
hlt
add
jle
add
ja
cdq
(bad)
cmp
imul
lea
in
xchg
out
clc
bound
jmp
imul
push
jmp
shl
scas
lds
daa
out
je
add
lea
add
xchg
mov
std
mov
in
mov
sbb
xchg
(bad)
cmp
sahf
jp
and
sub
pop
sbb
cdq
cmp
enter
xchg
aad
xchg
mov
push
mov
cmp
enter
les
mov
ficom
imul
mov
cwde
mov
retf
aam
xchg
sbb
and
pop
hlt
in
les
mov
jg
pop
pop
test
scas
retf
popf
mov
sub
lock
adc
push
sbb
mov
dec
jnp
mov
xchg
mov
lds
sbb
js
stos
jae
in
outs
or
fs
leave
(bad)
push
hlt
fnstsw
sub
imul
jae
rcl
(bad)
cs
in
lahf
mov
aam
ja
lahf
adc
xchg
mov
lods
push
mov
jbe
mov
sub
pop
ds
fwait
(bad)
aam
and
mov
and
daa
mov
mov
add
call
jnp
mov
addr16
sahf
jecxz
adc
mov
test
in
xor
mov
xchg
sbb
cwde
xor
add
jp
mov
ret
in
inc
sahf
leave
(bad)
sbb
mov
xor
out
jg
out
jle
pop
pop
out
repz
loop
scas
adc
(bad)
lock
cld
stc
fwait
cmp
or
push
mov
dec
hlt
fwait
scas
add
pop
or
nop
xor
rcr
mov
out
mov
(bad)
jnp
dec
pop
and
mov
adc
add
in
mov
push
and
les
pop
push
cmp
push
ss
pusha
pop
imul
mov
mov
(bad)
and
(bad)
scas
mov
sbb
mov
pop
xor
call
(bad)
ja
aaa
dec
test
mov
mov
dec
mov
mov
hlt
rcl
mov
fst
std
sub
xor
pop
inc
xor
push
sub
mov
push
inc
bnd
dec
jns
repz
pushf
call
push
fwait
add
mov
test
test
sub
add
xchg
mov
cdq
and
ds
add
add
xor
jmp
xchg
scas
inc
fiadd
iret
scas
or
or
bound
sub
ret
jmp
wbinvd
aad
stos
(bad)
retf
jbe
xlat
pop
adc
mov
ss
test
sahf
je
pusha
das
sub
(bad)
cmp
call
and
or
dec
ret
sti
mov
hlt
mov
jge
loop
lods
int
pop
jmp
repz
inc
(bad)
sub
fwait
sub
pusha
cld
pushf
add
jge
sbb
(bad)
push
js
test
das
out
push
movs
sbb
pop
test
sub
pop
pop
add
not
sub
lock
cmc
and
leave
aam
xchg
and
xor
aam
pop
jbe
xchg
sub
stc
sbb
or
push
leave
out
xchg
mov
jl
mov
sbb
xchg
sub
xchg
add
repz
adc
xchg
nop
cmp
add
mov
jb
pop
dec
pushf
cdq
cmp
jmp
repnz
lock
hlt
push
cli
pop
cmp
jae
dec
(bad)
(bad)
stc
div
xchg
mov
sbb
out
cwde
(bad)
mov
loope
dec
xlat
(bad)
loope
lea
sahf
gs
imul
imul
dec
add
push
outs
fld
iret
int3
imul
add
or
sbb
dec
sub
xchg
lds
repz
adc
retf
pop
or
pop
push
jle
(bad)
adc
add
xchg
dec
jg
cs
xor
pop
xor
pop
mov
(bad)
pop
push
iret
pop
jno
(bad)
mov
sbb
xor
test
adc
js
int
push
div
mov
sub
mov
dec
pop
mov
icebp
cmps
jbe
std
or
xchg
adc
cmps
test
pop
push
sub
jmp
jbe
loopne
pop
sar
push
jge
sub
enter
call
mov
xchg
dec
cdq
pop
push
xor
sbb
scas
jg
inc
imul
mov
lahf
or
popa
inc
std
data16
inc
fcomp
adc
fwait
add
mov
lock
pop
xchg
cli
retf
int3
in
fld
loope
test
test
mov
pop
dec
test
scas
lds
xor
xchg
(bad)
fild
inc
inc
fisubr
xor
mov
jo
inc
lods
or
sub
lar
popa
push
test
mov
push
jmp
rcr
push
(bad)
loope
mov
and
mov
fdiv
lods
pop
mov
adc
scas
xor
push
add
jno
cmp
xor
retf
xor
test
push
repnz
(bad)
sub
ss
cmc
add
jge
xchg
dec
lods
fisttp
setbe
repnz
and
shl
inc
hlt
imul
out
inc
je
cmp
clts
bound
loopne
sbb
sahf
sti
clc
ficomp
xchg
ror
ret
shl
frstor
addr16
inc
dec
pop
adc
push
fdiv
xor
cmc
gs
fwait
fs
jbe
add
mov
mov
adc
add
mov
jl
jmp
sbb
jecxz
jno
test
test
push
shl
xchg
dec
inc
push
add
int3
cmc
fstp
push
and
cwde
gs
test
loope
fsub
call
and
adc
inc
test
test
inc
add
dec
shl
cmps
(bad)
out
mov
and
push
pop
mov
pusha
fdiv
cmp
add
lock
mov
mov
adc
dec
out
in
dec
sti
sahf
or
and
pop
cmc
test
xor
mov
popf
mov
sub
xchg
or
pop
repz
adc
add
add
mov
sub
int3
jmp
ins
test
loop
adc
sub
movs
gs
mov
retf
pop
sbb
ja
or
in
and
fwait
(bad)
fs
xor
jno
clc
in
jb
cmp
or
mov
cwde
and
test
(bad)
cld
adc
js
mov
lds
loop
das
je
fidiv
adc
out
into
stos
aam
aam
cmps
and
xchg
sub
push
jle
push
arpl
dec
jl
mov
test
fld
movs
inc
xor
and
cmp
dec
xchg
fidiv
dec
push
fs
aas
repz
push
es
call
mov
retf
jb
push
mov
icebp
fs
retf
in
aaa
test
mov
aaa
pop
lahf
or
add
pop
or
sub
ret
adc
jbe
out
inc
(bad)
out
jb
frstor
mov
stos
jb
cmp
inc
jb
mov
adc
mov
ins
shr
sub
push
cwde
pop
in
cmc
les
add
in
add
adc
mov
pusha
dec
pop
add
mov
inc
xchg
inc
jae
mov
mov
inc
inc
out
sub
lods
xor
mov
mov
clc
mov
enter
and
hlt
sbb
jae
or
(bad)
shl
daa
int3
xor
dec
(bad)
cs
xchg
leave
adc
lods
dec
jmp
aam
xchg
(bad)
jge
dec
rcr
aas
mov
and
test
sbb
repz
mov
sahf
inc
fwait
jp
das
xor
data16
adc
sahf
ror
fmul
lods
pop
sub
leave
jbe
fld
das
or
clc
fnstcw
cli
popf
mov
(bad)
mov
fiadd
ins
mov
or
or
and
cmp
sbb
and
test
pop
jnp
xor
mov
mul
xor
or
push
xor
cmp
mov
jmp
xchg
xchg
je
movs
mov
xor
mov
std
cmc
scas
mov
stc
int3
shl
adc
cmps
fwait
shl
cmc
jg
and
xor
pop
xor
fwait
push
cmc
out
and
leave
ja
retf
adc
sub
xchg
fs
push
imul
xlat
call
shl
cmp
cs
outs
mov
push
mov
mov
dec
ds
push
mov
loop
cmps
cmp
cld
in
push
shl
push
stos
cld
or
mov
(bad)
jns
push
sahf
pop
fsin
lods
shl
mul
stos
jne
cmp
sub
out
stos
call
and
sti
out
stos
cmp
retf
push
adc
out
cmps
mov
sub
push
(bad)
pop
outs
lds
or
cmp
mov
call
enter
xor
or
xor
inc
in
mov
pop
hlt
push
std
xchg
aad
lds
jnp
(bad)
(bad)
pop
in
pop
mov
xchg
dec
xchg
(bad)
pop
or
(bad)
push
cmps
ficom
mov
push
cdq
jp
mov
adc
lods
jbe
push
bound
enter
lea
sar
pop
stos
mov
fs
and
ds
fld
xchg
xor
fcmovnb
pushf
(bad)
mov
ds
mov
add
stos
sub
xor
add
in
imul
fdivr
lea
jl
mov
push
fisttp
in
lahf
scas
pop
iret
mov
rol
icebp
add
dec
mov
hlt
ja
retf
inc
adc
push
sub
stos
ficom
out
jle
add
mov
adc
bound
mov
push
pop
repz
int
call
sbb
(bad)
test
mov
pop
xchg
mov
fild
inc
mov
popa
imul
mov
pop
inc
jge
jns
push
jg
leave
or
in
mov
out
adc
cmp
or
stos
mov
dec
imul
loopne
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
pop
add
pop
js
xchg
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
bound
adc
fdiv
ss
(bad)
(bad)
push
cmp
jnp
ret
daa
add
sbb
mov
sub
mov
ja
and
adc
dec
shl
rcr
jmp
fmul
xchg
aas
pop
adc
fs
mov
das
or
adc
push
adc
mov
push
cmp
pop
xchg
mov
aad
and
jns
inc
dec
pop
adc
movs
xchg
and
xchg
inc
daa
nop
jmp
jnp
cdq
sahf
test
jne
sub
push
movs
xchg
jnp
das
(bad)
shl
jecxz
mov
jbe
test
mov
jle
movs
jmp
jl
iret
in
mov
mov
ins
or
outs
pushf
mov
and
pop
cmp
cld
(bad)
xchg
aam
int3
icebp
clc
aaa
and
(bad)
in
fbstp
js
mov
cmp
cmp
leave
pop
fild
outs
xor
rcr
pop
stos
ja
test
xchg
jp
stc
ficomp
sub
xchg
gs
sbb
fsubrp
push
inc
ret
movs
cmp
adc
or
sub
push
imul
push
add
call
out
mov
ja
scas
xor
sub
inc
popf
stos
mov
xlat
out
dec
or
pop
movs
sub
cmp
out
ss
mov
psubb
out
ficom
sbb
test
push
sub
push
idiv
ret
addr16
mov
fistp
xchg
push
imul
dec
movs
imul
sbb
cmps
pop
mov
mov
jnp
movhps
repz
test
cmps
das
adc
shl
mov
pop
outs
and
repnz
arpl
ja
or
cmp
mov
shl
loop
push
jo
or
jp
xchg
dec
mov
pop
xlat
xor
movs
or
jb
inc
push
hlt
hlt
imul
inc
clc
xchg
in
cli
ficom
les
xor
std
fcomp
(bad)
out
pmulhuw
pop
cmp
aas
cmp
pop
mov
adc
clc
xchg
cmp
(bad)
hlt
adc
pusha
imul
adc
fld
push
cmp
je
(bad)
or
dec
xchg
int3
cmps
push
or
xlat
sqrtps
mov
xor
mov
and
call
sub
xor
jmp
mov
arpl
shr
mov
mul
leave
out
mov
aaa
xchg
or
adc
add
inc
rcr
enter
inc
in
dec
adc
out
(bad)
pop
fs
add
iret
out
inc
neg
fnstenv
mov
mov
fucomp
xchg
cs
cmp
and
in
mov
hlt
pop
pop
rcr
lods
sub
inc
lahf
test
ss
dec
cmp
fstp
daa
xor
das
sub
loop
int
mov
cwde
fst
sbb
call
leave
(bad)
(bad)
mov
js
or
cmps
outs
test
loopne
push
ja
jle
movs
xor
inc
stos
cmp
inc
fs
and
dec
inc
pop
clc
dec
mov
in
dec
xor
ror
outs
cmp
or
mov
stos
mov
jge
adc
inc
call
mov
call
sbb
lea
movs
xlat
mov
fist
dec
outs
sbb
push
cmp
xor
movs
test
retf
jno
bound
ss
outs
icebp
or
shr
in
shl
xchg
pop
jns
push
mov
ins
lds
ret
and
mov
sbb
dec
mul
pop
cmp
shl
in
jae
dec
loop
pop
mov
addr16
pop
loopne
mov
xchg
mov
fidiv
xchg
mov
push
fisub
mov
pop
add
in
in
add
mov
cld
add
shl
mov
inc
mov
jne
les
xlat
inc
into
xor
(bad)
sbb
jnp
cld
retf
push
pop
sbb
xchg
aam
outs
scas
push
push
push
fs
xlat
mov
mov
push
retf
jnp
adc
push
int3
mov
push
enter
or
dec
xlat
loop
mov
cmps
stos
push
push
sub
ins
int
push
add
sbb
bound
xchg
out
or
out
and
psubq
cwde
fwait
scas
mov
or
pop
pop
out
dec
push
xchg
clc
xchg
stc
ins
jle
cwde
mov
mov
add
mov
fisubr
xchg
mov
sub
cmps
and
fsubr
push
scas
xchg
push
inc
mov
push
xchg
jge
fisttp
cmp
dec
sahf
sub
loopne
popf
sub
jg
adc
jmp
xor
ins
mov
mov
(bad)
mov
sbb
ins
mov
in
gs
pop
add
imul
mov
inc
outs
sbb
sub
dec
(bad)
fs
or
std
outs
sub
iret
add
and
mov
xchg
xchg
sbb
inc
xchg
xchg
shl
movs
shl
loope
cmp
test
shl
lods
inc
dec
scas
push
jmp
outs
and
adc
arpl
adc
mov
leave
adc
mov
jns
and
mov
add
push
iret
xor
xor
or
xlat
sar
(bad)
jnp
cld
jb
add
dec
(bad)
sub
xchg
hlt
mov
pop
pop
out
loopne
pop
popf
in
push
adc
ss
les
cmps
out
imul
adc
out
xor
cli
rol
adc
xchg
xchg
nop
addr16
test
mov
lock
dec
fld
push
ins
pop
sub
call
ret
shl
xor
out
pop
adc
sub
dec
ret
imul
mov
xlat
mov
xor
dec
mov
dec
and
arpl
mov
fwait
daa
xchg
jo
shl
push
sahf
shl
mov
push
outs
shr
jmp
or
sub
jmp
and
fimul
inc
inc
and
cmp
lea
(bad)
scas
mov
jmp
in
add
in
dec
std
fcomp
ror
cld
sti
sar
push
jb
clc
mov
(bad)
cld
push
out
stos
lods
sar
dec
push
xor
dec
iret
icebp
dec
nop
push
jl
int
mov
ins
icebp
or
jle
push
scas
cmp
add
pop
push
fcom
mov
dec
jmp
jnp
in
rcr
jp
jl
inc
test
cwde
jns
add
or
push
call
jmp
repz
xor
mov
test
loope
sti
into
call
jmp
or
jmp
gs
icebp
movs
aad
fsub
jae
(bad)
loop
arpl
jae
mov
adc
dec
push
addr16
arpl
out
mov
pop
outs
push
jae
push
pop
mov
and
test
xlat
inc
lds
and
cld
lahf
mov
dec
cmc
cmc
lods
or
inc
(bad)
retf
inc
in
int
xchg
xchg
cmp
dec
fild
int3
push
repz
mov
outs
mov
aam
mov
je
push
push
mov
mov
std
sub
xor
test
jle
pop
mov
sub
icebp
inc
test
imul
(bad)
pop
mov
and
push
or
mov
xchg
dec
inc
dec
test
add
popf
add
dec
mov
mov
daa
cmps
cs
fiadd
sbb
xlat
add
sbb
inc
push
cmp
(bad)
jb
rol
mov
out
fsubr
mov
and
cmps
outs
sub
pop
adc
xchg
pop
fdivr
dec
pop
and
xchg
mov
out
std
and
nop
mov
sub
jb
jbe
mov
push
ror
test
aas
sub
adc
and
je
mov
mov
cmp
pop
mov
lock
and
outs
mov
mov
stc
cmp
aas
xor
repz
and
mov
scas
fistp
stos
jo
dec
add
xchg
xor
(bad)
aam
inc
mov
bound
int
cs
call
dec
mov
hlt
dec
sbb
adc
hlt
hlt
push
xor
push
xor
stos
jmp
lea
jecxz
icebp
or
pop
mov
ja
loopne
xor
data16
jmp
call
push
sbb
jmp
inc
out
push
cmp
int
lods
out
adc
dec
mov
mov
sbb
add
scas
sub
xchg
lods
jns
jmp
jbe
(bad)
jmp
dec
mov
push
ja
dec
xchg
cmp
sbb
mov
push
mov
jb
imul
or
aaa
cmps
or
and
mov
fidivr
test
mov
xchg
out
out
mov
jg
ret
mov
loopne
sbb
into
adc
in
mov
pop
inc
nop
ins
outs
fwait
inc
cmc
jl
or
pop
ds
sub
xchg
repnz
cmp
push
rol
pop
jb
xchg
cmp
aad
and
mov
cmp
imul
retf
sub
jo
sub
cdq
nop
call
mov
pop
and
xor
ret
sub
ds
rcr
into
sahf
fild
popf
xchg
dec
clc
lds
inc
jne
adc
or
or
sub
xchg
leave
cmp
aad
test
aad
mov
xor
pop
cmp
cmp
ret
pop
xchg
push
ds
push
cs
(bad)
sbb
dec
cmps
push
xchg
test
pop
stos
push
add
ror
(bad)
int
cwde
sbb
dec
and
jo
ins
mov
mov
(bad)
aam
rcl
mov
(bad)
xchg
aas
mov
push
mov
ds
jg
lahf
rol
and
mov
mov
adc
ins
stos
outs
test
adc
in
jne
mov
xchg
inc
and
leave
repz
inc
cmp
mov
mov
mov
push
into
in
sub
hlt
js
in
test
ja
mov
push
rol
sub
or
(bad)
test
push
and
test
add
sub
sbb
vpsadbw
add
(bad)
xchg
lea
inc
test
mov
stc
xor
scas
adc
xchg
sub
leave
add
(bad)
popf
fwait
mov
aas
fcmovne
xor
into
pop
xchg
pop
fiadd
push
je
xor
push
ret
xchg
sub
out
in
push
mov
cs
fmul
out
push
cmp
int
xchg
mov
ror
mov
jae
dec
inc
mov
in
sbb
xchg
push
iret
adc
arpl
hlt
(bad)
inc
rcl
fcmovbe
dec
imul
test
push
push
push
stos
mov
jmp
jb
inc
ret
stc
dec
mov
adc
scas
mov
ret
pop
ja
adc
pop
inc
push
add
movs
inc
ret
not
mov
es
jge
(bad)
out
call
fldz
ds
test
mov
mov
lods
mov
dec
and
loopne
jae
scas
imul
fsubp
je
push
push
lahf
dec
jp
push
out
cmp
pop
cld
pushf
mov
test
pop
pop
imul
lds
xor
(bad)
sbb
je
mov
fwait
xchg
xor
xchg
je
jnp
or
scas
inc
sub
push
pop
hlt
jno
(bad)
xor
cld
std
sti
mov
mov
cdq
inc
(bad)
stc
inc
mov
out
jno
mov
in
xchg
sub
jns
push
push
push
push
mov
ss
pushf
inc
add
jg
arpl
dec
and
call
sub
push
cs
clc
fmul
mov
jg
mov
div
sbb
movs
xor
push
je
fwait
je
movs
outs
loopne
jecxz
sub
lods
mov
inc
ins
or
dec
repz
cmps
pop
and
popa
xor
cli
push
ret
cmc
(bad)
call
add
popa
mov
repnz
in
push
jle
aam
sbb
mov
jmp
push
scas
repz
(bad)
setnp
int
inc
aaa
je
mov
stos
mov
push
push
loop
call
jmp
jl
push
std
mov
out
mov
icebp
ds
imul
out
in
cmps
jmp
(bad)
adc
push
cmps
movs
sbb
out
js
mov
mov
or
in
inc
popf
adc
push
and
sahf
scas
cmp
std
pusha
loop
stc
cmp
imul
xchg
fwait
mov
dec
stos
xor
ss
fwait
mov
mov
outs
pushf
loope
push
mov
xchg
pop
loopne
mov
xor
in
fidiv
or
std
xor
jl
jmp
ja
popf
mov
scas
adc
mov
or
ret
imul
cs
scas
std
inc
inc
daa
sub
stos
ret
dec
imul
lahf
mov
call
jg
leave
or
lds
xchg
cld
stc
xlat
mul
or
test
imul
pop
xchg
adc
adc
pop
aaa
lods
sahf
pop
mov
xchg
push
sbb
and
in
dec
mov
(bad)
stos
leave
cmp
or
add
(bad)
jge
cmp
push
cdq
cdq
cwde
clc
sbb
push
sbb
and
xchg
in
push
stos
adc
and
push
lahf
iret
jbe
cmps
mov
sahf
cmps
adc
data16
mov
loop
pop
int
leave
mov
mov
push
jno
mov
sbb
in
mov
xor
movs
sti
pop
mov
fcmove
mov
jg
jo
ins
xlat
clc
add
(bad)
not
imul
mov
out
and
mov
cs
jbe
(bad)
mov
push
xchg
es
cmc
lods
mov
cmp
sbb
sbb
push
adc
adc
out
xchg
cmp
xlat
add
xor
jnp
arpl
call
sub
test
addr16
test
hlt
xchg
mov
int3
stc
mov
or
sub
das
ret
out
dec
test
sbb
jle
mov
sub
pop
sub
inc
mov
cdq
sub
cmp
sub
pop
sub
adc
or
inc
pop
xor
jl
scas
cmp
nop
shl
rcl
xchg
int
xlat
aam
test
xchg
push
lods
add
int
inc
and
repnz
push
stos
mov
int3
dec
outs
xchg
rol
dec
ret
sub
ja
sbb
nop
dec
jb
in
cmps
sahf
xor
dec
gs
rcr
out
pop
fs
adc
dec
and
dec
punpcklbw
popf
jg
lock
sbb
in
add
test
or
mov
inc
ins
dec
(bad)
and
mov
or
dec
call
push
repnz
fs
ja
fmul
inc
inc
sbb
call
xor
pop
inc
mov
xor
jno
adc
or
push
pop
dec
enter
pusha
push
jle
(bad)
cmc
inc
fiadd
jmp
cmps
cld
xchg
sub
inc
imul
mov
in
ins
shl
in
and
xchg
sti
icebp
lock
adc
pop
sbb
into
inc
movs
shr
inc
fcomp
ins
jno
cli
xchg
fisubr
loop
pop
jnp
int3
jmp
shl
jno
out
and
sbb
es
mov
retf
popa
or
sub
ret
or
in
shl
daa
call
add
adc
push
hlt
mov
hlt
lock
jecxz
ror
pushf
adc
stos
lods
loope
inc
fnstenv
xor
pop
ror
xor
pop
mov
pop
xor
ins
ja
sbb
push
inc
pop
pusha
mov
inc
dec
mov
and
data16
jle
dec
xor
not
sub
aad
shl
jnp
dec
(bad)
and
sub
dec
not
xchg
cs
dec
cmp
push
sbb
cmp
cmp
and
in
inc
xor
sub
(bad)
dec
pop
repz
xor
mov
push
jae
sti
and
inc
scas
pop
out
sub
add
jmp
fwait
mov
ss
cmps
popa
lods
dec
jb
mov
lahf
dec
loop
mov
inc
test
inc
lods
ret
sahf
xlat
retf
push
mov
cmp
adc
jp
sar
cmp
dec
fist
pop
cmp
sbb
cmp
jns
div
rol
popf
es
mov
mov
and
and
ret
adc
enter
daa
adc
pusha
in
sub
jp
div
sub
rcr
push
std
sub
push
sub
test
xor
pusha
jmp
sbb
inc
lock
ja
and
cmp
xlat
mov
push
aas
test
clc
xlat
mov
(bad)
xor
mov
call
pusha
sti
dec
enter
cmp
imul
fsub
mov
test
cmp
mov
push
(bad)
mov
sahf
pop
int3
cdq
mov
std
fcmovne
jl
fstp
adc
pusha
pop
inc
mov
shl
fsub
inc
cmp
fmul
jae
push
cmp
sub
sub
pop
mov
movs
add
call
shl
out
push
mov
inc
fxch
jmp
add
popf
mov
and
push
xchg
int
pop
mov
push
xchg
pop
jl
xchg
int
(bad)
xor
cmc
xor
lea
ja
movs
popa
or
mov
sbb
jecxz
lahf
ins
jmp
add
popa
fwait
bound
fdivr
sahf
les
push
mov
mov
xchg
ds
mov
jne
dec
in
loopne
adc
shr
mov
pop
mov
in
lods
jbe
shr
xchg
jns
shl
ins
(bad)
pop
rol
lock
out
inc
addr16
push
sub
js
aam
mov
fwait
xchg
xor
adc
sbb
repnz
adc
in
fsincos
adc
or
rcr
ret
jns
enter
mov
ins
jmp
or
jge
and
inc
mov
out
ror
push
pslld
cmp
mov
inc
xor
push
push
adc
lods
pop
fist
fsubr
jo
hlt
test
gs
or
cli
pop
repz
cmps
jae
jne
inc
cmp
lea
pop
push
sbb
inc
mov
daa
outs
popf
mov
in
sbb
aas
out
std
loope
fnstenv
sub
lea
mov
and
pop
push
xchg
aaa
icebp
test
cld
mov
inc
popf
mov
shl
xor
lock
dec
out
mov
push
cmp
fidivr
dec
into
cwde
pop
mov
popf
stos
xchg
push
inc
inc
add
or
cwde
add
fwait
lds
stos
push
loope
retf
sbb
xor
dec
cmp
inc
adc
js
sbb
or
cdq
dec
jp
sbb
mov
adc
aam
je
aam
sbb
cmp
cmps
shr
or
pop
add
add
jl
pop
xor
push
xchg
jo
hlt
and
pop
xchg
adc
dec
and
cmp
dec
and
or
adc
sub
fdivrp
add
mov
das
cmp
mov
ss
retf
loope
nop
dec
sub
test
(bad)
pop
xor
sbb
xchg
mov
je
(bad)
pop
adc
ins
jle
sbb
sbb
out
fidivr
in
stc
shl
mov
jp
inc
xlat
mov
push
cmp
xlat
stos
arpl
ret
rcr
jnp
dec
(bad)
icebp
dec
cld
sbb
fiadd
push
push
sahf
xchg
div
(bad)
nop
mov
fs
adc
jp
repz
jno
cdq
adc
jb
cmp
cmp
adc
mov
push
in
add
xchg
leave
add
mov
arpl
ja
dec
aam
push
fld
inc
add
mov
push
xor
call
imul
(bad)
push
clc
idiv
enter
jno
or
fdiv
imul
gs
in
(bad)
sbb
push
(bad)
enter
movs
jmp
call
mov
cdq
cld
pop
mov
adc
mov
fisttp
ret
scas
adc
pop
int3
(bad)
cmps
jmp
pop
(bad)
or
adc
adc
es
int
jg
fs
fld
jg
mov
shl
jecxz
scas
xor
push
pop
test
dec
dec
pop
ss
or
push
add
mov
int
aad
inc
inc
std
icebp
aaa
push
or
xlat
and
add
adc
mov
lock
fnsave
xchg
dec
pop
push
in
dec
outs
lods
sub
adc
inc
rol
xchg
bound
dec
cdq
fadd
pop
inc
mov
int3
(bad)
jmp
stos
fwait
dec
and
mov
mov
dec
out
dec
inc
jle
jnp
mov
mov
addr16
mov
cmp
xchg
ds
mov
lock
adc
jmp
shl
pop
pop
(bad)
popa
or
inc
pop
sub
xchg
jecxz
out
fidivr
stos
mov
ja
mul
adc
mov
pusha
rcr
mov
xchg
jne
stos
lods
xchg
inc
std
mov
stos
dec
push
xor
test
cmp
cmps
into
clc
push
ins
dec
push
lea
hlt
mov
and
and
shl
(bad)
cmps
icebp
inc
adc
aad
cmps
pop
loop
push
cmps
(bad)
in
in
int
fstp
or
lods
pop
dec
pop
cld
mov
js
in
mov
int
call
sbb
mov
xchg
xchg
int
fsub
call
push
retf
jns
adc
dec
mov
lahf
jecxz
(bad)
mov
fdivr
mov
lock
inc
mov
sbb
xchg
out
xchg
push
out
mov
std
(bad)
out
hlt
stos
pop
mov
stos
mov
sti
sub
cmp
pop
dec
sub
test
ss
retf
shl
ins
jae
rcl
iret
cdq
inc
icebp
inc
sub
movs
imul
dec
neg
inc
and
adc
fdiv
xchg
cmp
sbb
mov
es
add
jecxz
mul
jb
cmps
in
imul
icebp
push
adc
fist
rcl
(bad)
jne
call
push
out
dec
push
aad
mul
push
pusha
push
popf
adc
retf
adc
std
int
arpl
mov
fs
lahf
cmp
xor
xor
inc
mov
xor
inc
dec
mov
out
dec
int3
inc
out
push
fnsave
jge
(bad)
sti
jbe
pop
shr
rdmsr
ret
inc
mov
sti
add
fwait
and
mov
lea
sahf
lea
data16
popf
int3
dec
sub
mov
and
push
in
test
sub
mov
das
add
inc
push
data16
pop
test
sar
sub
cmp
stc
pop
(bad)
cmps
mov
adc
xchg
rcr
cmp
lahf
mov
cmp
mov
in
mov
jle
xor
add
jns
xor
push
in
pop
push
repnz
xchg
shl
jmp
jmp
and
ja
shr
movs
pushf
loop
xchg
mov
arpl
ror
retf
into
jbe
xchg
popf
aas
sub
call
cmp
ret
in
inc
mov
xor
sahf
mov
rcl
jg
sub
sub
fsubr
mov
push
pop
and
inc
pop
retf
xor
inc
out
xchg
dec
adc
pop
add
fdivr
mov
jbe
stc
cmp
mov
mov
xor
out
mov
enter
dec
dec
out
(bad)
shl
std
xor
pusha
and
add
xchg
cmp
call
je
icebp
and
int
cmp
in
dec
cmps
cwde
inc
fwait
and
repz
cmp
mov
cwde
cdq
sub
sub
xchg
xchg
dec
adc
mov
out
sahf
jo
jb
fcom
ficomp
(bad)
mov
jge
pushf
iret
lock
add
test
stos
arpl
movs
sbb
xchg
jg
or
lods
adc
ret
mov
push
ins
call
out
hlt
jne
push
or
or
pop
push
dec
iret
pusha
lds
cdq
pop
mov
cwde
adc
mov
xor
sbb
movs
cli
mov
cmp
fisttp
sbb
scas
adc
shl
(bad)
aad
mov
(bad)
lea
cli
sbb
in
pop
pop
sub
push
sbb
fs
push
outs
inc
mov
jg
and
ss
mov
ds
sar
rcr
nop
out
inc
out
or
(bad)
jge
cwde
cmp
jg
push
or
xchg
fbstp
xchg
inc
into
jbe
xchg
cld
cwde
push
sbb
push
outs
leave
div
pop
add
push
pop
or
cwde
call
arpl
xor
mov
mov
sbb
mov
ds
sub
sbb
mov
scas
test
pop
sbb
pop
xor
cmp
inc
cmp
movs
push
xchg
mov
push
sbb
xor
outs
ins
jne
stos
mov
ja
adc
xchg
popf
mov
loopne
std
sbb
mov
ins
sub
sub
dec
mov
add
jo
sub
adc
dec
pop
jno
mov
push
retf
cld
adc
and
(bad)
fs
mov
cli
hlt
stos
mov
es
pusha
hlt
or
push
xor
pop
jne
mov
scas
enter
xor
cmp
adc
add
jle
fwait
mov
xor
sub
retf
shl
xchg
mul
repnz
popf
and
mov
xor
icebp
push
push
sbb
ss
pop
xchg
fistp
mov
add
pop
mov
icebp
std
shl
lods
or
(bad)
add
lock
ret
xchg
js
jg
mov
es
in
dec
retf
sub
add
sub
stos
scas
imul
push
movs
jb
aaa
xchg
shl
int3
jge
loop
fwait
out
dec
sar
inc
scas
popa
stc
test
popf
mov
(bad)
stos
das
rcr
ins
(bad)
test
iret
and
(bad)
push
in
adc
cmp
mov
out
cmp
test
jl
ret
mov
push
sbb
adc
fiadd
push
jb
imul
push
es
xchg
mov
xchg
ds
mov
(bad)
or
and
mov
loopne
lock
ja
jmp
mov
mov
xchg
jbe
rcl
fidiv
push
adc
jae
daa
test
es
mov
ss
adc
ficomp
inc
pop
adc
mov
sbb
cli
test
iret
sbb
mov
loopne
aaa
cmp
lea
pop
add
push
push
mov
test
outs
inc
or
mov
add
(bad)
jg
test
les
test
test
cmps
sbb
nop
cmp
shr
popf
fidiv
xlat
sub
int
cld
dec
and
sahf
sub
cli
jno
lock
ret
jle
in
xchg
mov
stc
pushw
inc
pushf
je
imul
in
das
fimul
ins
push
mov
rcr
mov
test
into
pop
add
cmp
sti
imul
push
call
jno
pop
adc
call
jmp
in
ret
jns
lea
mov
pop
adc
in
sub
cmp
movs
shl
xchg
sti
sbb
outs
push
xlat
test
sbb
push
stos
stos
mov
ret
js
push
push
movs
dec
push
pop
es
ins
in
cmp
jle
div
jae
inc
mov
mov
lock
xor
clc
dec
stc
mov
adc
clc
(bad)
or
adc
push
jns
jp
stos
ds
aad
jno
jge
adc
xor
(bad)
std
pop
cs
dec
std
out
push
stc
pop
mov
pop
ret
outs
movs
not
jmp
enter
dec
pop
imul
scas
scas
test
arpl
mov
pop
rol
xchg
std
adc
push
dec
ficom
scas
sub
jmp
jp
shl
mov
adc
nop
rcr
retf
push
in
adc
push
cld
push
jecxz
xor
pop
fsub
cmp
xor
sbb
pusha
and
cmc
push
or
xchg
jmp
retf
ret
sahf
xor
push
cmp
xchg
fisub
inc
call
mov
cmps
ror
cld
jl
sub
fst
inc
sub
ret
push
jns
repnz
push
aas
sbb
jno
rcr
bound
sbb
xlat
lock
stos
mov
mov
jmp
js
add
ins
xchg
in
xor
fdivr
adc
and
xchg
cli
push
sbb
push
test
fimul
adc
sbb
fucom
pop
nop
jb
add
pop
mov
out
leave
hlt
xor
in
xchg
or
mov
pop
inc
retf
loop
mov
sub
hlt
test
call
shl
ficomp
pushf
in
iret
push
icebp
(bad)
lods
inc
pushf
or
fild
mov
jnp
mov
inc
and
jbe
loopne
sbb
pop
xor
pop
outs
aam
cs
pop
nop
(bad)
adc
mov
xchg
push
(bad)
mov
outs
ins
jg
adc
cmps
nop
xor
mov
cs
xor
mov
or
fist
pop
inc
lock
scas
jl
mov
cld
adc
popf
fsubr
rcr
mov
pop
xchg
cmp
sbb
fwait
push
push
cs
mov
(bad)
cld
or
push
das
jmp
pop
out
jmp
push
xchg
test
adc
sbb
lea
ror
daa
add
test
cmp
add
adc
inc
shr
xor
imul
adc
sbb
pop
(bad)
pusha
pop
jle
ficomp
mov
iret
mov
jl
ud0
out
mov
sahf
inc
pmullw
popa
cmp
iret
loop
add
js
into
mov
fsubr
add
dec
or
and
sub
aas
push
add
ror
mov
cmp
test
lods
pop
aas
pop
pop
das
arpl
push
pusha
xchg
outs
idiv
enter
movd
nop
add
mov
rcr
xor
xor
sub
sub
or
je
sub
in
pop
add
add
cmp
gs
cmps
sub
out
xor
imul
rcr
push
mov
or
es
int3
cmp
call
cmps
out
out
mov
push
push
ins
dec
lea
pushf
ret
in
shl
sahf
fidiv
nop
pop
push
sub
mov
out
rcr
cwde
enter
push
fisttp
xchg
arpl
movs
xor
push
fldcw
push
sbb
and
mov
push
jbe
pop
xchg
xor
xchg
and
mov
ds
loopne
jl
jecxz
aas
out
sbb
xchg
cld
jg
popf
fnstsw
push
sahf
clc
xchg
add
std
push
and
fnstsw
xchg
imul
cmp
or
hlt
or
les
fwait
xchg
repnz
cs
cmp
lods
ss
push
inc
mov
sbb
cmp
pop
sahf
jl
xchg
stos
jge
int3
out
or
push
xchg
call
mov
jg
stc
test
jmp
test
out
mov
or
mov
ins
mov
or
jae
and
dec
jp
div
out
pop
jl
ds
adc
mov
nop
pop
push
lods
pop
adc
and
mov
jmp
enter
cli
ins
cmc
or
dec
inc
in
xchg
mov
pop
ror
mov
hlt
pop
ins
lds
nop
and
sub
jp
or
sbb
mov
push
fistp
fidiv
repz
into
jb
dec
int
push
push
cwde
cld
lods
retf
(bad)
jno
adc
sti
into
xchg
ins
adc
add
or
push
xor
xchg
imul
and
fcmovnu
enter
xchg
pop
scas
mov
mov
std
jbe
pop
dec
dec
fistp
jo
cmps
bound
bound
dec
lock
xor
repnz
cmps
adc
call
and
imul
adc
loop
mov
dec
stos
sbb
das
cmp
out
or
push
and
push
and
sbb
mov
jbe
xchg
(bad)
mov
add
xor
sbb
mov
ret
nop
mov
pop
mov
adc
and
(bad)
test
inc
nop
lahf
jnp
fadd
das
(bad)
mov
jl
mov
inc
inc
jo
jmp
xchg
push
mov
in
mov
add
adc
aas
jg
cmps
int3
sar
call
repnz
jb
sub
pop
addr16
or
lea
lds
xor
test
push
mov
cmp
test
pop
div
shl
dec
test
(bad)
fstp
jl
and
cmp
fsubrp
xchg
(bad)
popf
adc
inc
or
sub
inc
enter
or
and
dec
jmp
movs
xor
daa
sbb
cmp
add
cmp
push
add
mov
fadd
sub
add
xchg
xchg
pusha
mov
int
lods
lods
xchg
inc
sar
or
cmc
jne
dec
mov
std
retf
(bad)
fs
pop
pop
mov
jbe
arpl
icebp
(bad)
stos
mov
daa
jno
sub
dec
sub
test
leave
ficom
xchg
test
(bad)
push
pop
scas
adc
jno
or
icebp
xchg
push
call
pusha
dec
outs
mov
dec
mov
push
shr
add
in
adc
inc
enter
add
pusha
mov
mov
mov
xor
jg
xchg
ins
push
push
bnd
sbb
and
xchg
xor
mov
mov
cmp
scas
sti
xor
icebp
adc
mov
xchg
mov
cmp
ins
imul
inc
inc
aaa
fidivr
mov
mov
call
jae
les
mov
dec
cmp
mov
stc
ins
sub
ja
jns
and
mov
mov
adc
loop
enter
cmp
pop
or
ror
pop
out
add
mov
imul
and
not
xor
sub
sbb
outs
jb
sbb
stos
mov
fisub
fstp
xor
push
push
mov
call
lods
push
out
fucomip
loopne
out
pop
add
push
push
adc
adc
popf
test
xchg
add
push
loopne
movs
call
jbe
mov
sti
mov
fs
out
loope
add
dec
xchg
test
push
inc
xchg
adc
mov
das
dec
retf
mov
mov
pop
jae
jle
and
(bad)
aam
mov
cmps
push
sbb
idiv
ins
dec
outs
cmc
sub
fadd
jecxz
xchg
mov
xchg
ds
adc
pop
inc
ja
es
and
pop
add
and
(bad)
mov
cdq
xchg
dec
loopne
fcomip
and
jno
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
dec
add
jg
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pusha
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
jp
mov
add
rcr
mov
(bad)
imul
(bad)
(bad)
out
inc
mov
add
repnz
inc
lds
imul
sub
lea
or
xchg
in
jne
out
and
cld
fcmovne
xchg
int3
xchg
stos
adc
mov
or
xchg
out
pop
loopne
rcl
retf
cmc
cmp
loope
(bad)
xchg
pop
cmp
out
cmp
jmp
arpl
lods
or
jmp
mov
or
pop
add
or
add
adc
dec
addr16
test
ins
cld
mov
push
or
xor
fidiv
shl
(bad)
imul
sub
xor
mov
in
daa
aad
sbb
jmp
jmp
out
into
dec
popf
call
and
mov
push
loop
in
fidivr
bound
mov
cmps
cdq
cdq
cmps
lahf
push
inc
gs
stos
or
jnp
shl
test
sub
imul
inc
sbb
out
mov
out
mov
fld
cli
cmp
xchg
dec
(bad)
push
stc
dec
push
mov
in
retf
test
add
sub
dec
cmp
mov
jne
push
mov
stos
std
jne
outs
pop
sub
cwde
mov
push
fbld
mul
movs
xor
ja
mov
cli
push
sbb
ficomp
repz
das
push
xchg
hlt
and
cmp
xchg
mov
lds
mul
retf
push
mov
inc
sbb
sbb
addr16
popf
call
rcr
pusha
stos
pop
leave
mov
mov
push
jb
stos
(bad)
mov
pop
mov
dec
sub
popf
and
fstp
(bad)
neg
arpl
sbb
lock
daa
sbb
fnstcw
in
mov
dec
pop
xchg
(bad)
aam
stc
ins
repz
popf
xor
ds
jns
cmp
cmp
mov
lds
inc
or
cmp
xor
dec
mov
mov
push
jmp
cmc
stos
sbb
or
scas
cmps
xchg
je
stc
popf
(bad)
out
xchg
mov
je
cwde
sub
or
shl
and
pushf
movs
mov
movd
mov
cmp
inc
mov
cwde
movs
mov
stc
cmps
mov
int3
and
std
add
stc
jge
pop
test
stos
mov
jno
ins
iret
push
fcom
xor
stos
sbb
addr16
popf
and
mov
mov
dec
(bad)
jmp
and
(bad)
into
call
test
aam
lods
std
and
or
ins
in
(bad)
dec
cmp
cs
cmp
cwde
pop
cmp
add
call
xor
adc
push
aaa
inc
mov
cmps
add
iret
fstp
cdq
inc
and
dec
cmp
dec
fdiv
inc
add
jbe
scas
jle
loop
jle
mov
sbb
inc
cmc
lods
test
fist
xchg
jp
leave
pushw
ins
(bad)
pop
lods
ror
(bad)
retf
pusha
sbb
mov
add
imul
repnz
in
je
lahf
push
pusha
out
pop
push
and
out
cmp
mov
cmp
test
xchg
fdivr
xor
adc
test
lods
stc
push
mov
aas
lea
inc
push
lock
shl
pop
movs
pusha
xor
sbb
sbb
aad
xchg
pop
lock
cwde
outs
lock
xor
and
mov
jmp
jne
mov
push
movs
sbb
dec
inc
std
(bad)
or
mov
jbe
push
cmp
pop
sti
ror
sbb
sub
or
in
addr16
jno
loop
or
sbb
mov
inc
push
cli
adc
out
fwait
or
out
rcl
add
jno
cld
ret
ins
sbb
or
or
(bad)
cmp
sub
push
cmc
add
bnd
mov
bound
out
ins
mov
mov
pop
jle
(bad)
xchg
stc
test
and
call
sub
jns
sbb
test
cwde
or
inc
in
out
in
mov
lods
cld
call
adc
push
xchg
repnz
shl
fwait
pop
cmp
lahf
push
jbe
(bad)
rcl
int
and
inc
or
ret
inc
push
jno
loop
sti
push
push
in
adc
pop
push
je
clc
lods
and
movs
mov
jl
mov
(bad)
das
test
inc
cmc
shl
cmp
loop
test
dec
in
add
je
ret
dec
jge
sub
test
out
push
inc
inc
cmp
mov
push
in
mov
out
and
inc
stos
gs
ror
mov
clc
dec
sbb
inc
pop
imul
and
popa
retf
cmp
jmp
jns
fisubr
fnstsw
in
mov
mov
les
pop
cwde
pop
pop
sub
add
xchg
push
mov
sahf
mov
jbe
ret
sbb
xor
fcom
popf
or
dec
popf
xchg
hlt
nop
xor
pop
and
(bad)
cdq
mov
iret
stos
in
inc
push
dec
mov
add
gs
movs
daa
cmp
test
mov
movs
mov
iret
sub
out
mov
daa
jg
dec
jge
mov
pop
jg
xchg
xchg
les
mov
jl
dec
js
cmp
js
jno
dec
cmps
jb
pop
sub
ret
test
jmp
mov
lods
sbb
add
push
loop
inc
cmp
gs
cmc
push
fwait
jno
fisubr
(bad)
xlat
cmps
or
mov
mov
shl
fisub
push
shl
loope
lahf
jbe
inc
xor
out
add
add
cmp
cmp
data16
adc
xor
jns
in
xor
mov
fld
push
jg
adc
jbe
retf
jg
mov
and
sbb
sbb
mov
aas
les
xor
fwait
dec
dec
sub
adc
xor
mov
inc
sbb
lods
push
or
daa
data16
adc
mov
push
push
out
aad
inc
in
sub
mov
dec
cli
das
push
sub
in
add
push
xor
jne
mov
in
add
shl
sub
sub
pop
loope
push
add
dec
push
sub
mov
adc
jbe
adc
mov
fsubp
ror
inc
push
mov
push
jmp
aaa
fisttp
and
test
sahf
jmp
xchg
stos
mov
hlt
adc
mov
lods
xchg
cmp
std
std
xchg
or
and
ret
mov
pop
gs
inc
dec
push
imul
mov
out
mov
dec
xchg
xchg
push
sub
arpl
ret
icebp
nop
add
adc
pop
sub
daa
imul
test
and
xlat
outs
aaa
movs
test
jmp
xor
sbb
adc
lods
popa
out
fcom
mov
test
stc
adc
inc
xchg
inc
cmp
stos
aad
cmp
mov
stc
sbb
ja
jb
add
xor
les
loop
rcr
les
cdq
call
push
or
sahf
retf
add
ins
jg
mov
loop
jo
ins
fbstp
and
lock
mov
xchg
sbb
iret
add
loop
sub
xor
dec
enter
scas
add
sub
sub
aas
bound
(bad)
enter
imul
aad
fwait
loope
mov
pop
in
aas
ins
sub
or
jns
push
jp
sbb
shl
sub
or
add
in
add
cmp
sub
dec
scas
or
in
xor
jge
aam
sbb
addr16
dec
sub
daa
(bad)
inc
test
ret
(bad)
xchg
jmp
mov
inc
ss
push
mov
push
repz
sbb
mov
mov
mov
sti
mov
sbb
add
jmp
sar
sbb
mov
cmc
mov
in
adc
inc
pop
inc
test
inc
mov
test
daa
and
sti
mov
lock
pusha
test
mov
cmp
adc
movs
fnsave
inc
cld
pusha
into
jmp
pusha
frstor
lahf
sbb
cmp
cmp
sbb
push
aam
fldenv
mov
nop
test
mov
lahf
retf
outs
leave
hlt
jnp
pop
dec
lds
jecxz
adc
fisub
xlat
cmp
xor
aad
popa
cmp
mov
sbb
cmp
outs
gs
cmc
mov
scas
add
cmp
mov
ret
mov
mov
out
push
shl
lock
scas
push
fimul
mov
out
mov
test
dec
loope
cmc
lds
std
cmp
xchg
fild
icebp
add
icebp
sub
stc
adc
jne
hlt
fst
sbb
popf
je
test
in
das
or
iret
je
hlt
mov
retf
xor
and
clc
dec
jle
lock
pusha
sbb
mov
(bad)
iret
(bad)
out
pop
xor
test
mov
pop
test
xlat
shl
fiadd
jecxz
ret
outs
cld
out
(bad)
rcr
stos
(bad)
mov
lock
stos
mov
mov
sub
xchg
pusha
or
lods
or
arpl
jae
cmp
aam
cmp
add
std
and
adc
cmc
lods
sub
loope
xor
fnstcw
mov
mov
mov
ror
jle
cwde
xor
pushf
fiadd
mov
mov
rcl
popf
push
mov
pushf
mov
dec
xchg
inc
(bad)
mov
(bad)
fisubr
pop
and
jmp
loope
popf
push
inc
or
lds
cs
sahf
call
xor
xor
shr
shr
sbb
cmp
leave
xchg
cmps
or
cmps
mov
and
fld
ja
loopne
fld
and
mov
out
mov
shl
ret
pusha
mov
adc
adc
inc
cdq
sbb
jnp
frstor
call
and
push
cmp
imul
push
push
lods
sbb
and
inc
mov
ss
fwait
mov
xchg
inc
pop
jno
add
call
inc
nop
push
jb
xchg
cmp
lea
in
push
movs
inc
cmp
call
inc
movs
sbb
retf
pop
mov
xor
xchg
hlt
add
xchg
xchg
adc
and
mov
in
mov
pop
je
out
inc
sti
mov
sbb
inc
fadd
mov
xchg
mov
pop
or
imul
je
dec
mov
mov
repnz
cs
xor
loope
pop
lds
inc
fdivp
xchg
dec
js
push
xchg
mov
xor
mov
ja
dec
push
cmc
add
fcomp
cmp
enter
xchg
push
rcl
and
out
(bad)
push
push
cld
jg
push
sbb
push
aas
movs
add
add
call
jp
push
imul
stos
cmc
push
push
addr16
pop
(bad)
xorps
lods
test
bound
dec
in
leave
push
sbb
ins
inc
xor
xchg
or
jb
pop
jecxz
movs
lock
test
or
mov
mov
shr
scas
mov
mov
leave
xlat
sub
jp
adc
fwait
es
bound
loopne
es
popf
sub
mov
or
shl
inc
inc
scas
xchg
clc
mov
es
cld
jl
scas
cmp
(bad)
push
dec
outs
lods
sub
xor
xchg
fist
xor
adc
or
cmc
ret
jl
cmp
test
cwde
scas
call
or
xor
and
data16
jp
add
cs
push
xchg
or
in
icebp
cmp
ret
scas
pop
xor
sub
inc
or
jns
outs
inc
jb
scas
jge
xchg
je
or
pop
jle
pop
adc
jne
sbb
sbb
adc
pop
into
jg
ror
mov
xchg
std
add
fdivr
or
pop
sbb
adc
add
pop
xchg
or
cmc
xchg
pop
call
fucomip
cli
and
std
sub
call
leave
jp
imul
rol
jns
push
fs
lahf
ror
leave
test
mov
fld
sub
push
mov
mov
inc
hlt
cmc
mov
lds
iret
or
sub
out
ins
cld
add
repnz
jg
adc
lods
mov
pop
retf
(bad)
mov
ss
xchg
leave
inc
adc
cmps
aaa
mov
push
jns
cmp
not
std
mov
jl
inc
dec
test
ins
gs
data16
movs
(bad)
clc
out
rcr
imul
sbb
sub
arpl
sub
push
cs
pop
push
adc
inc
push
mov
add
mov
cmp
out
adc
xchg
add
push
daa
dec
xchg
and
mov
or
icebp
jle
loop
lock
lods
loopne
mov
jmp
add
int
sbb
lds
add
cmp
xchg
jp
adc
retf
pop
or
and
adc
cmps
add
mov
jp
cmps
dec
jp
ins
icebp
loopne
cli
mov
sub
pop
dec
push
and
test
ja
icebp
mov
rol
pusha
shr
stos
inc
push
fistp
mov
mov
test
sbb
mov
mov
je
push
cs
hlt
push
jl
ret
cmp
jb
cmp
enter
popa
or
jbe
mov
mov
mov
push
fld
push
lea
pushf
int3
je
push
jo
push
cmp
xchg
(bad)
cmp
pop
sub
or
inc
scas
dec
xchg
cld
jl
and
mov
jmp
inc
sub
out
push
add
xor
sbb
inc
outs
adc
addr16
jae
arpl
aas
jl
in
fdivr
aas
push
cmp
test
pop
pop
dec
ret
xchg
aas
or
loop
test
mov
lahf
jnp
jge
fist
test
fmul
ror
hlt
fwait
xchg
mov
fs
ror
ins
(bad)
aad
inc
jae
push
aad
xor
out
or
arpl
jbe
aam
inc
pop
into
pop
cmps
xor
sub
arpl
repz
iret
push
ret
cmp
out
dec
jno
stc
ins
(bad)
stos
dec
xor
inc
cld
dec
sahf
(bad)
adc
sbb
xor
and
fnstsw
ret
or
dec
ficomp
shl
jl
lock
add
sub
in
xlat
cmp
outs
sbb
mov
fbstp
xchg
movs
sbb
ss
mov
les
fsubrp
inc
xor
xlat
stc
pop
xchg
inc
xchg
or
sub
rcl
inc
or
ror
loop
pop
les
mov
adc
jmp
cdq
xchg
or
lds
dec
jge
sbb
inc
mov
adc
test
jecxz
cwde
out
fst
arpl
ins
test
imul
cli
and
call
xchg
movs
(bad)
xchg
stc
push
sub
cwde
out
sbb
pusha
add
call
lds
mov
jbe
mov
cmp
cmp
mov
jle
in
repz
push
inc
jl
imul
sub
ds
out
add
push
xchg
xrelease
sub
outs
mov
lods
ret
rcr
or
es
xor
push
mov
sbb
pusha
fwait
into
xor
sbb
dec
ja
or
popfw
cli
adc
mov
sbb
add
enter
jmp
cmps
xchg
mov
mov
cmp
icebp
mov
movs
cs
sbb
dec
xchg
cmc
aas
rcr
xchg
pop
mov
(bad)
fsubrp
lods
adc
xor
(bad)
daa
jecxz
jae
jl
ret
pop
xchg
dec
jg
xor
out
aad
outs
ror
xor
retf
outs
ins
or
xchg
mov
lock
dec
push
adc
repz
mov
push
icebp
in
into
pop
xchg
rcr
jo
fsub
out
aam
pop
nop
es
call
lock
xchg
mov
push
(bad)
dec
and
adc
or
mov
sbb
cmp
lods
sub
xchg
sbb
sbb
arpl
in
call
add
or
out
fsubr
je
pop
addr16
test
out
pop
je
xchg
sahf
sub
(bad)
add
sub
fcomp
fcomp
pop
fidiv
pop
fwait
in
sbb
lock
jno
cmp
(bad)
sub
sub
jo
mov
mov
stos
inc
inc
or
xlat
mov
or
xchg
mov
sub
out
out
xor
mov
sub
scas
sub
mov
(bad)
push
dec
inc
jg
rcl
xchg
and
push
dec
sub
xor
enter
sub
jle
push
jmp
xchg
pushf
cmc
jle
push
outs
adc
jo
sub
jno
in
dec
dec
bound
jecxz
pop
(bad)
movs
cli
cmp
(bad)
cld
dec
mov
or
fs
cmps
xor
js
lods
lods
cli
hlt
sbb
cmps
adc
rol
xor
clc
ins
add
repz
adc
jns
push
mov
cmp
mov
or
pop
icebp
mov
mov
or
outs
mov
rcr
out
cmp
xlat
mov
fimul
xchg
(bad)
test
pop
movs
mov
dec
shl
sub
cmp
aam
mov
xchg
jbe
mov
ret
fsub
mov
into
ds
neg
arpl
mov
pop
sub
out
fldl2t
test
inc
xchg
dec
cld
push
mov
dec
xchg
jne
or
pop
fucomi
and
test
mov
push
cmp
mov
addr16
cmp
fist
(bad)
mov
mov
xchg
xchg
pop
stos
lahf
mov
jmp
push
out
xchg
cmps
sti
pop
xor
xor
retf
gs
in
(bad)
sbb
push
or
or
mov
(bad)
jb
mov
dec
push
inc
outs
cmp
outs
cmp
xor
xor
int3
sar
xor
loop
movs
push
scas
cmp
mov
adc
mov
push
scas
xor
add
push
push
adc
div
inc
mov
mov
mov
cmp
je
mov
dec
ror
pop
xchg
mov
test
hlt
test
popf
repnz
scas
cmp
int3
push
jge
pop
call
int
(bad)
loop
xor
mov
loop
push
mov
std
adc
clc
test
test
mov
fwait
xchg
inc
dec
add
add
inc
loop
nop
mov
pop
inc
cmp
pop
mov
xchg
mov
ret
dec
jo
xor
lahf
jo
cmp
jnp
sti
test
daa
cmp
cld
lock
dec
jle
jo
cmps
cmc
sub
mov
fcomp
cld
jecxz
retf
(bad)
jno
xor
repnz
xchg
rcl
mov
add
icebp
jmp
leavew
sbb
(bad)
addr16
(bad)
jne
rcr
sbb
fsub
mov
in
jae
test
je
lods
xchg
rep
jecxz
(bad)
shl
fmul
jne
push
adc
lock
xchg
mov
and
out
pop
jb
std
gs
add
dec
test
dec
mov
mul
xchg
in
jp
rcr
or
jo
mov
mov
dec
mov
sub
mov
or
popf
or
rcl
ins
mov
inc
mov
test
test
adc
(bad)
mov
and
xchg
mov
and
call
add
xor
stos
clc
xchg
pop
mov
call
les
and
aaa
jnp
xchg
cmp
lods
lods
rol
pop
push
and
lods
inc
push
outs
and
rcl
mov
mov
icebp
pushf
cmps
inc
and
sub
shl
cli
rcr
movs
popf
lahf
jcxz
xor
xchg
pop
fsub
fdiv
cmp
mov
jnp
jb
mov
out
imul
cmps
stos
push
fnsave
hlt
arpl
out
pop
subps
fwait
(bad)
movs
mov
adc
(bad)
loop
loopne
ret
or
aad
cmp
mov
mov
inc
mov
lods
xlat
xor
call
dec
xchg
jne
movs
mov
rol
leave
aad
test
push
ins
xchg
fidiv
(bad)
in
es
fst
rol
out
cmp
mov
outs
or
push
or
sub
daa
fsubr
add
sub
mov
aaa
aam
aaa
xchg
rcr
jge
call
or
es
test
cmp
mov
jno
mov
pushf
outs
dec
repnz
or
push
jmp
push
call
fsubrp
and
int
ret
call
pop
mov
test
jbe
mov
xor
mov
shr
test
ror
push
jae
dec
jo
clc
dec
jno
sub
push
adc
or
ja
popf
stos
xchg
sbb
mov
fldl2t
iret
test
jo
cmp
(bad)
push
pop
rcr
mov
cld
fdiv
out
ins
dec
int
rol
sbb
test
mov
adc
fwait
aam
jne
mul
cmps
jmp
fs
push
les
jns
add
mov
adc
mov
cmp
pop
push
gs
and
mov
push
int3
in
das
fcmovnbe
addr16
shl
test
arpl
sbb
retf
fwait
shr
imul
adc
mov
jo
jp
cdq
mov
or
jnp
jo
clc
mov
mov
not
pushf
out
mov
xor
outs
and
out
mov
push
ret
inc
nop
rol
jp
inc
imul
push
aas
out
pusha
jbe
jle
loopne
add
push
cmps
ja
dec
sbb
dec
ret
xchg
xchg
call
pop
popa
ret
mov
or
cmp
cwde
xor
mov
(bad)
(bad)
into
test
outs
shl
aas
jecxz
loop
push
add
loop
add
sub
jae
movs
repz
(bad)
pop
cmp
push
jno
std
adc
cli
pushf
sbb
add
fst
pop
test
js
jle
ror
mov
jmp
mov
jp
mov
push
lahf
xchg
pop
out
popa
ret
stos
sub
cmps
ins
and
jmp
xchg
fidivr
xchg
xchg
cld
push
push
call
xor
dec
adc
nop
mov
retf
jl
outs
fwait
arpl
idiv
xchg
ins
loope
jbe
in
add
jno
sbb
(bad)
(bad)
pop
in
sub
pop
fwait
loopne
ficomp
and
inc
cwde
mov
ins
cmp
test
pop
mov
mov
and
jno
push
or
adc
aaa
xlat
pop
mov
jb
lahf
add
retf
mov
xor
addr16
in
mov
push
xchg
jne
mov
inc
pop
fwait
mov
xor
sbb
das
cmp
pop
fcom
inc
add
mov
xlat
mov
shr
out
xor
stos
sub
or
cmps
fidivr
add
or
stos
cmc
mov
imul
nop
out
jge
mov
stos
inc
es
imul
dec
into
(bad)
test
push
jp
mov
stos
movs
(bad)
and
loope
sub
test
push
add
out
dec
pop
test
inc
mov
lods
or
pusha
inc
movs
out
xor
xlat
ss
inc
push
mov
mov
dec
hlt
in
mov
adc
test
retf
ss
inc
push
push
and
daa
push
stos
test
repnz
and
mov
scas
jp
or
(bad)
out
out
daa
inc
out
sti
jecxz
ins
aad
push
test
fnsave
adc
or
int3
xchg
mov
arpl
xchg
adc
xchg
and
dec
sub
call
sahf
les
out
pop
mov
dec
shr
idiv
xchg
lds
cmps
popa
sub
add
dec
popf
ffreep
test
sahf
jle
fild
outs
js
lahf
xchg
dec
mov
xchg
dec
push
fild
fdiv
pop
sub
stc
push
cld
push
fs
push
out
or
push
rcr
into
int3
test
push
dec
(bad)
stc
jge
fistp
mov
cmp
push
movs
jl
popf
cwde
cmp
pop
push
(bad)
xor
pop
in
std
int
mov
aas
xchg
mov
or
shl
push
pop
mov
movs
xchg
sub
cld
or
or
cmc
xchg
psrlq
inc
and
outs
xchg
lea
push
scas
inc
cmps
mov
movs
or
xchg
mov
mov
mov
imul
inc
ret
sbb
pop
xchg
xchg
out
stos
add
pop
test
sbb
sbb
add
into
push
icebp
pmaxsw
enter
ins
dec
adc
jmp
into
mov
out
aad
cmp
les
mov
test
mov
scas
fistp
sub
dec
fisttp
sub
das
push
push
imul
push
into
aaa
inc
jmp
pop
push
cmp
fwait
cmps
cld
cwde
inc
jns
jo
or
sbb
es
and
mov
mov
add
fidivr
loope
mov
int3
pop
cmp
(bad)
(bad)
push
fiadd
xor
mul
xchg
cld
sub
call
loop
mov
clc
xchg
aas
adc
das
fldcw
mov
cwde
retf
pop
retf
jge
ret
xor
movs
lea
lock
push
loop
pop
or
test
inc
pop
lahf
call
jmp
xchg
in
sub
cmps
sub
jle
pop
icebp
xchg
pop
push
test
cwde
mov
pushf
retf
inc
or
stos
add
lods
sub
daa
xor
pop
test
mov
mov
push
in
xchg
sub
and
(bad)
sbb
fcom
xchg
imul
mov
mov
int
outs
gs
xor
mov
jmp
stos
lock
outs
test
sbb
mov
mov
jbe
in
test
(bad)
repnz
std
imul
cs
shr
movs
or
imul
jecxz
push
cmp
xchg
(bad)
aad
inc
push
fistp
xchg
popa
or
inc
xchg
sbb
fld
fild
cmc
inc
shl
fistp
or
retf
sub
jno
rcl
shr
shl
daa
scas
loopne
push
sti
arpl
mov
(bad)
lock
pop
mov
jo
inc
push
ins
ret
das
(bad)
fiadd
ficom
shr
jae
sub
stos
dec
or
mov
aas
push
xchg
outs
mov
push
pop
sub
in
pop
popa
inc
ret
add
cmps
fs
pop
cmp
fs
fs
es
in
sbb
stos
pushf
adc
mov
(bad)
mov
adc
sbb
sub
and
push
or
and
out
xor
repz
inc
cmc
lds
pop
ins
xchg
mov
popa
add
fnop
jnp
and
xor
xchg
neg
nop
nop
daa
xor
xchg
daa
push
aad
ret
mov
push
push
out
ffree
sub
inc
adc
(bad)
adc
xchg
cmp
in
and
pop
push
mov
cmp
dec
add
dec
mov
push
jmp
jle
push
mov
int3
inc
jecxz
mov
arpl
hlt
mov
sbb
and
xor
xor
cmp
ins
arpl
push
push
iret
outs
push
mov
ret
rcr
add
xor
pop
stos
mov
loopne
test
push
jbe
std
jne
adc
push
and
leave
mov
mov
xchg
in
mov
jb
(bad)
ret
pop
and
shr
rol
mov
into
mov
sub
inc
xchg
es
std
inc
sub
mov
push
into
out
ins
nop
mov
mov
cmp
push
push
mov
inc
or
mov
mov
aam
rcr
clc
fwait
mov
mov
add
pop
test
in
add
in
dec
dec
int3
inc
pushf
or
in
(bad)
jecxz
mov
jge
mov
es
jge
xor
sbb
add
in
inc
sub
fmul
movs
sub
pop
div
pusha
ret
pop
pop
xchg
sbb
inc
jno
add
add
popa
not
xor
sahf
mov
dec
icebp
data16
add
lahf
loopne
not
into
jmp
lods
jb
inc
jne
add
aad
mov
or
test
xor
pop
or
cmp
jne
les
mov
fbld
aas
fldenv
lods
pop
jno
pop
add
icebp
neg
xor
fcom
mov
push
(bad)
(bad)
jge
jle
out
inc
mov
xor
popf
xchg
in
mov
jne
and
inc
fsubr
call
push
scas
stos
dec
das
sub
shl
fsubr
fisubr
imul
jbe
mov
ins
inc
push
jbe
retf
dec
js
scas
in
fs
or
mov
dec
enter
add
cs
lahf
retf
mov
pop
push
fwait
jo
leave
aaa
test
jbe
sub
test
inc
and
push
sub
or
jle
test
imul
add
leave
cmp
repz
inc
sahf
dec
repnz
jae
cmc
dec
xor
lods
mov
dec
xor
mov
in
sbb
fiadd
ror
cli
outs
fistp
out
jmp
repnz
nop
xchg
ficom
movs
xor
jae
cwde
and
call
mov
xor
inc
fs
lea
mov
into
jle
jp
jmp
sub
loop
push
jmp
mov
ret
or
or
mov
(bad)
and
call
inc
inc
retf
and
or
fimul
mov
test
aam
cmps
cld
mov
iret
cmp
ja
dec
das
add
add
in
retf
pop
sub
jmp
scas
cdq
inc
(bad)
in
lods
outs
cdq
sbb
mov
xor
or
out
xchg
mov
adc
xor
or
retf
sub
jne
jge
xchg
aad
push
test
inc
fsubr
mov
stc
push
fstp
inc
loope
push
lock
in
in
lahf
out
je
jle
pop
and
lods
test
scas
jo
mov
adc
fidivr
jnp
sti
lock
push
cli
cmp
dec
nop
mov
test
fsubp
jb
mov
push
xchg
clc
mov
fnsave
ficomp
sbb
jnp
out
into
aaa
ins
sbb
pop
data16
adc
dec
push
ret
aad
repnz
scas
fcom
cmp
outs
mov
pushf
pop
js
bound
jb
pop
shl
xchg
sahf
frstor
(bad)
clc
jb
dec
inc
(bad)
xlat
mov
test
push
jnp
add
sti
adc
cli
jae
mov
nop
lss
xchg
div
xor
mov
(bad)
cli
sbb
inc
inc
ret
jno
test
and
and
fnstenv
dec
lods
dec
jg
xchg
and
pop
pop
or
pop
sub
and
jl
xchg
mov
add
or
outs
mov
cmp
enter
std
loopne
inc
inc
out
cmps
aad
adc
xchg
jne
pop
pop
sbb
inc
bound
jb
std
jbe
or
into
sbb
jmp
or
inc
mov
pop
add
adc
sbb
aad
xor
arpl
vmwrite
jnp
sbb
bound
mov
jl
shr
mov
push
pushf
sbb
fisubr
inc
adc
inc
or
loop
jb
mov
hlt
enter
(bad)
cli
lea
fwait
and
sub
adc
push
(bad)
repnz
pop
xor
or
dec
inc
lea
or
push
movs
call
jne
xor
ror
not
js
xchg
test
(bad)
sbb
jmp
(bad)
idiv
mov
mov
dec
mov
adc
dec
cmp
xor
xchg
mov
int3
xor
(bad)
sub
cmps
push
pop
mov
cmps
test
mov
mov
add
pop
outs
jo
pop
sbb
jl
add
fdiv
out
dec
sbb
push
addr16
repz
adc
test
mov
mov
mul
cmp
push
leave
shl
lahf
mov
lods
sbb
lds
sar
outs
pop
xchg
call
(bad)
sub
lock
add
xor
cmp
jnp
dec
adc
jp
mov
and
xchg
cmp
cmps
arpl
das
out
in
xor
jecxz
pop
retf
pop
cmp
push
mov
retf
cmc
push
sub
xchg
sbb
sbb
test
xor
movs
jg
popf
add
(bad)
or
inc
pushf
shl
and
add
xor
out
movs
sbb
adc
out
mov
mov
hlt
cmp
hlt
test
pop
pusha
or
cmp
outs
sub
jecxz
pop
mov
mov
push
xchg
scas
cmp
scas
rol
cmc
xchg
inc
or
inc
(bad)
sahf
lea
inc
xor
push
pop
add
scas
xor
jno
and
std
retf
nop
mov
iret
into
adc
lea
les
and
int3
ss
sub
enter
or
inc
sahf
daa
or
mul
sub
rol
push
shr
inc
clc
call
ins
xchg
imul
repz
(bad)
pushf
std
or
ins
imul
push
nop
outs
dec
pop
(bad)
cmp
mov
push
push
xchg
push
mov
test
ret
loop
adc
adc
xchg
popa
(bad)
mov
repnz
clc
push
adc
call
adc
jno
idiv
cmp
(bad)
and
fst
mov
loope
scas
adc
xchg
out
leave
xchg
pop
clc
push
push
test
(bad)
shl
push
test
popa
mov
sbb
(bad)
xor
jge
imul
inc
add
out
test
pop
add
in
arpl
cmp
gs
lock
sahf
lds
cmp
sbb
mov
pop
aam
xlat
inc
arpl
adc
(bad)
(bad)
add
cmps
lock
xchg
sbb
and
int
add
mov
xlat
lahf
int
and
std
aaa
fsubrp
stos
add
dec
div
adc
xchg
mov
retf
aad
out
xor
das
xchg
push
fld
push
dec
ss
xor
jno
clc
jmp
pusha
in
xchg
or
pop
fs
imul
sbb
and
(bad)
mov
pop
call
mov
pop
ds
cdq
icebp
shl
inc
or
pop
repz
jo
xor
fild
pop
inc
call
jl
loop
and
hlt
lds
jmp
int
mov
mov
lea
sub
cld
xor
pop
push
add
cdq
sub
test
(bad)
push
cmp
shl
icebp
ds
adc
mov
hlt
sub
or
test
push
cmp
out
jg
stc
out
jg
stc
out
jg
stc
out
jg
stc
out
dec
add
aas
sar
fsub
shl
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
inc
es
inc
loope
(bad)
(bad)
jbe
mov
fcmovnb
(bad)
outs
popa
lahf
jg
cmp
push
sub
or
cwde
push
(bad)
cs
popf
aas
cmps
rol
lds
(bad)
fadd
push
test
add
outs
add
xor
xor
inc
pop
std
adc
mov
(bad)
xchg
repnz
xchg
cmc
sub
in
jae
push
aaa
rcr
mov
mov
mov
dec
dec
mov
fdivr
shl
lods
pushf
push
and
add
sub
jmp
jo
movs
pushf
mov
adc
xchg
rcl
lods
jle
and
push
pop
add
call
cld
pop
sub
gs
fwait
mov
inc
pop
push
pop
shl
in
push
mov
cmp
cmps
loope
inc
sub
(bad)
ins
sbb
add
cmps
cmp
enter
in
mul
push
sub
fcmove
out
mov
int
pop
inc
mov
cmp
push
and
pop
inc
and
hlt
cmp
xchg
lahf
gs
es
mov
stos
outs
push
icebp
scas
push
fs
(bad)
(bad)
xchg
gs
mov
mov
inc
nop
neg
mov
or
in
fld
inc
pusha
sub
mov
sbb
pop
stos
stc
xor
cmps
add
fisub
(bad)
pop
push
ja
cmp
ins
pop
cmc
adc
hlt
jo
and
loop
add
mov
retf
ficomp
adc
sbb
sub
lods
sbb
fs
loope
xor
push
mov
mov
test
sar
jne
mov
dec
mov
pop
sub
or
sbb
outs
std
push
or
dec
pop
mov
add
scas
push
inc
cld
xor
int
jae
pushf
inc
repz
mov
adc
mov
dec
push
xchg
or
push
outs
gs
call
cld
push
repz
gs
xchg
cmp
pusha
mov
jl
addr16
jmp
cmp
in
(bad)
mov
cmps
in
xor
jo
outs
lods
sub
pop
push
pop
test
imul
in
mov
fcom
and
(bad)
push
movs
xor
adc
sub
inc
call
sar
mov
es
pop
cmps
out
stos
cmps
adc
mov
mov
pop
outs
or
clc
xchg
mov
adc
push
cmp
loopne
jecxz
pop
adc
sub
xchg
ja
or
dec
jp
mov
xor
js
push
jg
ret
xchg
(bad)
mov
fs
xchg
out
xor
inc
dec
jmp
mov
xchg
pmullw
daa
test
jl
mov
or
leave
loope
dec
lahf
hlt
add
aas
push
stc
fisttp
inc
dec
mov
mov
aam
adc
mov
or
lods
rol
mov
(bad)
push
push
add
imul
push
out
ins
repz
jb
loope
loop
push
mov
(bad)
dec
push
push
mov
outs
dec
hlt
inc
mov
pop
cmp
jmp
enter
add
les
jg
outs
test
xor
outs
add
cmp
mov
hlt
fnstenv
cli
in
dec
push
dec
dec
jnp
lds
mov
push
adc
mov
push
div
mov
push
retf
xchg
and
fstp
jmp
out
imul
mov
jns
(bad)
aad
outs
arpl
gs
out
loopne
in
stc
lea
add
and
inc
mov
lods
aaa
out
movs
(bad)
dec
jnp
dec
dec
xchg
test
mov
mov
icebp
xlat
mov
jns
je
cmp
xchg
ds
cmc
mov
jecxz
mov
add
lds
stc
sub
jp
cmp
stos
movs
scas
adc
pop
lock
inc
mov
jne
cmp
cli
sub
xor
adc
mov
jnp
test
sub
mov
xchg
stos
clc
std
js
and
ret
imul
mov
mov
mov
xor
push
sub
mov
mov
repz
je
sti
mov
into
in
cmp
inc
inc
push
hlt
fst
mov
jae
jmp
enter
xchg
pushf
and
jmp
add
retf
xor
(bad)
mov
aaa
std
cli
jb
stos
inc
or
jg
(bad)
sub
sbb
or
mov
iret
fwait
push
jns
cmp
inc
das
imul
dec
xchg
fwait
pop
aaa
dec
push
ss
addr16
jnp
shr
leave
aas
adc
mov
add
adc
jmp
mov
mov
push
retf
aad
add
and
jp
fmulp
scas
and
movs
mov
push
lea
pop
mov
cmp
mov
jg
xchg
pop
mov
mov
sahf
push
stos
xchg
sub
(bad)
xor
dec
dec
pop
push
adc
es
adc
cmp
js
xchg
shl
pop
ins
push
outs
das
jge
rol
add
pop
sbb
das
xchg
out
mov
scas
iret
in
inc
mov
jns
ds
add
int3
xor
nop
cmp
int3
dec
inc
dec
sub
fcmovb
adc
or
inc
push
lods
pop
addr16
arpl
xor
jae
out
or
push
adc
out
jno
add
mov
pop
push
pop
ret
and
ja
sub
(bad)
cmp
push
push
loop
mov
jmp
out
ret
les
mov
shl
cmc
push
fsub
test
pop
jb
sub
dec
cmc
adc
jmp
mov
fisttp
fstp
ret
add
mov
fild
mov
or
jecxz
call
idiv
retf
rcl
xchg
mov
sti
scas
cld
fld
or
stos
push
jns
jmp
jnp
jb
push
fidivr
or
sbb
into
xlat
mov
mov
pop
dec
pop
adc
dec
ror
not
push
pushf
sbb
sbb
add
fcmovne
xor
pop
es
mov
(bad)
rcr
gs
ss
add
test
gs
das
stos
mov
dec
jmp
stc
mov
das
push
lahf
mov
(bad)
aad
cmp
fidiv
cmp
dec
sub
popa
xchg
ds
push
push
or
clc
pop
push
in
push
jle
sbb
dec
xor
std
mov
push
into
inc
mov
pop
add
add
sub
test
in
add
enter
out
mov
xor
cli
fs
sub
cmp
pop
rcr
push
push
fmul
mov
cmp
test
sar
pushf
push
xor
jo
out
movs
jb
or
imul
(bad)
aad
dec
cmp
cmp
aas
stc
movs
jp
cwde
add
cmp
mov
cmp
in
and
loop
adc
scas
jne
cwde
dec
test
js
enter
xor
cmps
stos
mov
inc
sub
cld
cmp
cmp
jb
stc
sbb
jmp
inc
fisttp
mov
fucomip
add
repnz
push
sahf
fcom
std
sub
mov
pop
outs
int3
or
inc
sub
daa
retf
rol
fs
push
add
repz
retf
cmp
sub
hlt
mov
fs
out
xchg
adc
loopne
or
cmps
les
sub
lds
js
pop
xor
ret
dec
icebp
call
lds
push
lea
data16
add
scas
xchg
cmps
pushf
adc
pop
xchg
cmp
aad
or
xchg
sub
fidiv
sar
pop
add
dec
mov
es
adc
inc
repnz
daa
cmp
and
add
pop
sbb
hlt
sbb
cmp
sbb
dec
scas
pop
std
jae
jb
test
mov
shr
xor
ret
cmp
call
sub
int3
cmp
cmp
mov
xor
mov
pop
sbb
jno
pop
mov
test
mov
mov
out
dec
mov
ins
ficom
fneni(8087
div
pop
mov
mov
push
push
mov
neg
fld
and
mov
shr
lea
mov
lods
mov
test
stc
pop
lea
mov
out
ins
inc
mov
aad
sub
call
mov
mov
mov
sub
push
pop
or
ins
cld
mov
cli
es
cmp
es
std
adc
pop
daa
cmp
push
inc
mov
lahf
push
cmp
lahf
(bad)
iret
cmc
lods
test
aas
cmp
or
lock
(bad)
jnp
sbb
push
or
cs
mov
pop
mov
adc
das
mov
scas
jl
inc
mov
xchg
daa
inc
repz
xor
mov
mov
loopne
sub
into
pusha
fsubr
adc
or
loope
lahf
sbb
mov
in
jne
cs
mov
push
inc
push
cmps
add
retf
(bad)
push
fbstp
or
push
pop
rcr
xor
jb
(bad)
xlat
mov
gs
je
jbe
in
jg
xchg
and
inc
cmps
push
push
jle
pop
push
fwait
ret
xlat
jmp
fs
xchg
movs
mov
adc
ds
ror
mov
cli
pop
mov
cmp
xor
or
push
push
cld
and
pop
movs
pop
dec
shr
stos
push
(bad)
sub
(bad)
out
call
jmp
mov
fwait
and
inc
mov
nop
cmps
ret
add
add
stc
adc
mov
sbb
jg
(bad)
rcr
add
test
adc
dec
mov
pop
push
cld
push
(bad)
int3
add
ja
mov
xchg
mov
scas
test
jns
cmp
pop
or
stos
mov
dec
rcl
jmp
inc
or
mov
je
xor
loope
sar
outs
outs
add
mov
test
(bad)
add
xor
aaa
imul
and
or
sub
adc
(bad)
leave
jne
lock
adc
jge
mov
int
push
je
add
iret
popa
jp
sar
or
dec
push
sub
xchg
cmps
jb
in
or
pop
cmps
xlat
inc
dec
mov
xor
sub
lds
xor
jne
mov
mul
and
pop
das
mov
outs
aam
(bad)
jae
xor
sbb
pop
sub
shl
popf
cmps
stos
xchg
fimul
and
sti
sub
inc
mov
mov
pop
jmp
xchg
les
dec
or
stc
imul
ds
mov
scas
jne
xor
mov
jp
pushf
test
stc
xor
imul
data16
and
cli
pop
dec
shl
call
sub
mov
pop
dec
movs
jno
(bad)
jb
cmp
mov
pop
and
mov
out
call
sbb
pop
dec
jne
mov
mov
add
and
cmp
sub
push
push
adc
pop
pop
add
test
or
xchg
mov
xor
ins
pop
mov
mov
sub
addr16
stos
or
push
mov
mov
xchg
jno
inc
sti
popa
push
fs
push
and
dec
dec
leave
cmp
and
mov
fmul
dec
add
int
test
rcl
push
mov
inc
lods
adc
ins
test
js
push
add
xor
cmp
fsubr
jbe
xchg
cdq
ret
mov
pop
aaa
lahf
mov
or
clc
mov
and
cmp
fs
stos
iret
shr
pop
inc
push
cld
or
push
push
jmp
mov
cwde
repnz
cmove
sahf
aas
mov
test
leave
adc
jno
out
pop
add
pop
adc
dec
imul
test
pop
jns
adc
dec
es
sar
dec
push
fs
sub
aaa
xchg
repnz
add
jp
je
pop
js
bound
test
xor
mov
sub
out
adc
push
mov
inc
pushf
and
sub
ja
(bad)
out
std
ds
sbb
inc
repnz
adc
out
push
push
sbb
mov
and
xor
inc
(bad)
lods
push
fsubr
or
xchg
dec
xchg
mov
pusha
mov
shr
movmskps
adc
(bad)
in
ror
in
xchg
mov
cmp
data16
and
mov
aam
and
daa
or
fcomp
xor
mov
pop
es
cmp
nop
adc
pop
clc
std
aas
jae
mov
sbb
inc
outs
jne
pop
(bad)
jmp
fcom
dec
test
adc
adc
xchg
div
sti
outs
jb
sbb
cmps
imul
mov
and
out
repnz
and
mov
ja
shl
cmp
add
xchg
xchg
std
push
fst
or
sar
mov
mov
fwait
xchg
adc
shr
test
sbb
daa
inc
mov
xchg
xchg
sub
retf
xor
ds
leave
push
scas
sub
imul
(bad)
jmp
dec
out
add
jmp
jecxz
sbb
movs
push
inc
jbe
inc
sub
mov
mov
cwde
pop
xor
icebp
mov
and
mov
dec
stos
les
xchg
ror
inc
sbb
xchg
int
xchg
fist
outs
add
jp
dec
push
sub
push
retf
cmp
mov
fbstp
pushf
push
ins
pop
push
pop
add
xor
and
add
popf
xchg
sub
jle
les
data16
xchg
dec
push
pop
add
ja
lods
adc
sar
pop
adc
xor
jmp
jg
add
test
popf
mov
adc
movs
ret
push
or
pop
fwait
pop
ror
push
mov
xor
(bad)
cmp
jmp
pop
mov
(bad)
daa
sub
push
and
mov
lahf
xlat
mov
adc
inc
ds
mov
ror
ja
adc
mov
bound
or
xor
pop
sub
(bad)
ins
jecxz
push
std
jo
adc
adc
in
mov
ins
adc
adc
(bad)
(bad)
sahf
and
movs
and
add
or
inc
lds
dec
mov
mov
pop
and
pop
add
or
cmp
jl
sub
mov
pop
dec
adc
es
leave
cmp
aaa
rcl
aas
or
imul
iret
lea
pop
sub
pop
cmp
mov
fs
add
jo
lods
add
aas
add
aad
add
data16
sar
psrad
call
stos
enter
adc
mov
and
pushf
cmps
mov
push
cmp
sub
xor
iret
ins
and
sub
mov
fwait
test
sti
sub
sbb
in
cli
sbb
hlt
push
(bad)
out
jmp
dec
cmc
int3
fadd
sbb
sub
ds
in
sub
cmp
mov
jae
dec
push
cmp
in
dec
movs
sub
call
dec
daa
cmp
clc
fist
enter
(bad)
fistp
int
into
call
outs
dec
xchg
pop
fiadd
jns
mov
aaa
(bad)
in
aas
int3
mov
jbe
outs
mov
cdq
xlat
fsub
dec
fisub
push
jne
div
stc
mov
mov
xor
sub
repz
add
add
add
bound
loopne
push
inc
sbb
push
enter
test
cmp
cmp
mov
stc
sub
dec
dec
aam
test
fwait
aaa
leave
pop
psllw
sar
inc
xor
cmp
gs
call
aam
xor
fs
xchg
in
aaa
fidivr
cmp
in
addr16
mov
xor
mov
xchg
icebp
pop
cmps
push
or
out
cmc
cmp
xlat
jne
sbb
ss
mov
mov
test
imul
(bad)
ror
cmp
enter
dec
outs
loope
jno
int3
repnz
and
or
lock
xor
mov
ds
mov
push
aaa
in
mov
xchg
das
pop
mov
cli
fisubr
in
pop
lea
or
add
(bad)
ds
retf
fs
push
push
adc
scas
add
xchg
mov
mov
addr16
call
inc
jg
cmp
int3
movs
push
cmp
jno
mov
jne
jns
jmp
jg
out
adc
mov
adc
test
stc
ret
dec
out
jo
push
nop
add
mov
jo
aam
jmp
out
fmul
mov
or
les
mov
pop
and
jle
fnstcw
fnstenv
xchg
rol
cmc
and
arpl
jns
mov
popa
mov
fs
fwait
repnz
mov
sbb
sbb
jecxz
cmps
sbb
inc
sbb
push
gs
sbb
pop
iret
jl
stc
pusha
jb
or
loopne
or
ds
push
test
jl
aaa
dec
idiv
retf
dec
ins
sbb
pop
imul
mov
pop
mov
sub
das
std
daa
popa
cs
test
pusha
mov
cmp
daa
jb
jno
xor
std
jns
sbb
jns
or
shl
dec
inc
call
pop
mov
inc
mov
sub
add
imul
scas
int
dec
fs
out
inc
in
sub
frstor
inc
and
clc
inc
xchg
or
jecxz
stos
jno
stos
sahf
test
test
sub
inc
and
(bad)
pop
imul
fldcw
clc
xor
push
and
mov
clc
stc
(bad)
push
les
mov
outs
lahf
cmps
call
call
cld
or
fidiv
in
pop
jge
mov
mov
pop
jnp
icebp
mov
bound
pop
jl
fidiv
and
jae
pop
xchg
shr
ins
jmp
add
xchg
pop
and
leave
ror
not
and
lds
shl
xchg
les
mov
icebp
bound
mov
dec
push
mov
into
mov
cwde
dec
cwde
ja
or
push
sub
mov
dec
stos
outs
(bad)
stc
std
outs
stos
push
push
adc
inc
jge
jnp
mov
cmp
push
and
loope
retf
push
jbe
imul
push
cmp
mov
std
adc
cmps
(bad)
outs
or
add
jp
fadd
aaa
test
push
gs
jge
int3
pop
inc
cld
into
sbb
(bad)
jecxz
xchg
jle
pusha
mov
push
inc
imul
test
sub
ds
fst
ins
hlt
dec
pop
dec
mov
stos
cmp
gs
and
popa
adc
out
sub
add
push
loope
jne
movs
movs
aad
sahf
shr
call
mov
(bad)
xchg
dec
mov
into
and
jmp
std
ret
int
sub
pop
(bad)
(bad)
out
sbb
sbb
jne
dec
cmp
push
retf
jno
xor
sub
and
in
add
push
inc
mov
gs
xchg
mov
cmp
xchg
fidivr
pop
dec
mov
fwait
inc
sbb
div
adc
imul
mov
in
mov
pop
(bad)
std
xchg
inc
loope
cwde
jbe
dec
mov
sbb
xchg
arpl
ins
or
cmp
int3
hlt
push
mov
ins
arpl
stos
xchg
fadd
cmps
pusha
repz
pop
call
mov
daa
xor
inc
sahf
loopne
mov
add
mov
or
je
ss
dec
mov
je
sbb
push
stos
mov
mov
std
jmp
adc
in
or
fwait
lahf
repnz
mov
or
push
xchg
test
aad
lods
mov
or
popa
and
aam
xchg
(bad)
int
mov
sub
imul
pop
arpl
cld
lds
pushf
into
dec
sub
aaa
add
call
jg
pusha
adc
mov
mov
xchg
popa
or
retf
push
rcr
scas
cmp
retf
push
adc
sar
test
ds
test
mov
gs
aam
jns
add
les
mov
icebp
into
lea
mov
push
or
push
fld
lods
ins
fist
mov
aaa
cmps
outs
xor
(bad)
fcomp
jo
clc
xchg
adc
popf
mov
cmp
out
push
xchg
xchg
jae
inc
pop
xor
repz
jbe
jne
sbb
add
clc
in
xor
mov
xor
pop
in
and
push
sub
mov
(bad)
scas
enter
jmp
(bad)
mov
xchg
shl
in
pop
xchg
rol
inc
adc
shl
xor
cld
or
mov
lods
mov
adc
mov
xor
outs
jnp
cmps
jb
jo
sub
mov
enter
adc
mov
and
cmp
ret
fimul
xor
add
add
out
ins
icebp
aad
mov
imul
loopne
mov
cmp
xlat
pop
loopne
add
mov
out
cmps
jg
mov
cmp
lahf
repnz
test
mov
and
cmp
fdivr
or
and
(bad)
ficomp
mov
retf
xchg
leave
ins
push
sbb
lods
leave
call
sub
out
sbb
xor
mov
inc
dec
cmps
or
mov
div
push
pop
shl
loop
into
daa
cvtps2pd
and
push
aaa
xchg
mov
cmp
cwde
mov
cmp
pop
addr16
mov
inc
ror
or
mov
push
jnp
push
jg
das
pop
das
loopne
sbb
sbb
in
sub
cmp
adc
in
nop
in
cwde
ja
mov
mov
fadd
or
jl
js
arpl
inc
cmps
sub
pop
std
stos
jns
fstp
xlat
inc
aam
mov
aad
mov
jmp
push
dec
inc
and
bnd
outs
hlt
lock
imul
cdq
aad
pop
stos
call
out
(bad)
mov
dec
fcmovne
or
jmp
mov
ret
leave
jg
cdq
test
xchg
in
fcomp
fdiv
(bad)
or
jl
jmp
adc
inc
xor
dec
addr16
dec
mov
add
sub
in
mov
pop
cmp
mov
push
cmp
jne
inc
daa
ins
cld
xchg
mov
jg
cwde
cmp
mov
icebp
rcl
xchg
sub
dec
mov
add
out
jae
rcr
ret
ins
imul
and
cmp
ficom
mov
cmp
gs
push
ins
dec
in
int
jb
mov
sub
add
out
(bad)
in
ret
or
popa
cmp
and
mov
scas
mov
retf
jmp
pop
imul
inc
cmp
sbb
ret
stos
jl
mov
mov
pop
push
add
bswap
and
mov
dec
xor
lods
sahf
xchg
ror
or
fcmovnbe
(bad)
mov
ins
adc
popf
pop
repnz
push
xchg
cmp
mov
rol
lahf
ins
lahf
push
inc
aaa
adc
push
adc
adc
pop
jo
lods
mov
push
imul
push
cdq
popf
cmps
pusha
mov
sbb
fwait
nop
mov
ins
xor
cmp
sbb
psubusb
mov
int
cmp
mov
stos
sahf
cli
push
sbb
and
or
icebp
mov
imul
in
xchg
push
call
and
xor
mov
pop
xor
loop
add
daa
rol
xchg
pop
add
std
add
dec
adc
xor
push
cmp
popa
mov
inc
out
inc
loope
mov
pushf
push
loopne
xor
adc
mov
call
aas
test
sbb
sbb
lahf
mov
leave
dec
and
scas
inc
psllq
sar
ins
and
dec
lods
enter
das
mov
adc
nop
sti
pop
mov
data16
outs
cmps
inc
jle
iret
ret
es
adc
(bad)
xchg
sbb
mov
lods
dec
push
cdq
sbb
imul
and
hlt
movs
out
hlt
stos
rcl
(bad)
stc
or
movs
xor
fmul
rcl
push
xor
pop
xlat
sub
add
adc
adc
js
or
sbb
cdq
add
and
adc
cmc
in
cld
loope
cli
cmp
push
push
test
or
fcom
sbb
xor
sbb
cmp
mov
xor
in
int
sub
xor
xchg
cwde
xchg
adc
shl
inc
push
int
and
(bad)
pop
popf
jmp
pushf
enter
sbb
daa
(bad)
adc
mov
in
and
and
push
lods
nop
pusha
fcmovu
adc
in
add
jecxz
mov
dec
and
inc
pop
xor
test
sbb
and
(bad)
retf
add
and
sub
in
mov
das
xchg
jmp
jge
lods
leave
push
cdq
inc
inc
rol
in
inc
or
ins
rcr
rcl
test
iret
icebp
sub
mov
fild
mov
inc
cdq
(bad)
shl
or
ds
into
cmp
xor
repnz
stc
push
std
ja
cmc
add
bound
jg
mov
jmp
pop
lds
jnp
neg
sub
xchg
mov
push
and
dec
push
mov
xchg
sub
push
inc
cmp
imul
icebp
mov
pusha
push
test
loop
sub
pop
adc
out
fwait
ret
push
leave
rcl
repz
push
int3
xchg
or
push
adc
dec
inc
scas
push
xor
mov
or
inc
nop
mov
rcr
es
cmp
xor
lea
pop
sahf
sbb
mov
pop
aas
in
mov
pushf
popa
mov
sbb
jnp
pop
xor
jmp
xchg
sbb
out
sub
mov
xor
out
lods
inc
push
lahf
mov
out
mov
rcl
push
mov
(bad)
xor
cmp
sbb
pop
stc
xor
xchg
fcom
lods
es
mov
outs
dec
push
inc
into
je
mov
jbe
lods
test
ja
sbb
pop
loope
out
dec
dec
out
into
in
pop
fs
jae
cmp
ss
add
xlat
mov
sub
sub
fcmovbe
clc
clc
test
sbb
xor
sbb
mov
int3
jle
lods
cdq
aas
loope
push
add
or
test
sahf
scas
adc
aad
daa
mov
addr16
sub
fwait
rcr
sub
fs
test
pop
scas
fstp
arpl
nop
retf
dec
xor
push
adc
pop
jno
(bad)
cmp
loope
shl
loopne
lock
sbb
dec
mov
out
jne
xchg
sbb
test
pop
sti
adc
shr
ja
in
dec
add
neg
unpcklps
test
pop
pop
call
clc
(bad)
jnp
and
push
and
jecxz
inc
ret
push
inc
ret
jmp
ss
movs
mov
adc
ins
jmp
daa
cmps
movs
pop
jecxz
and
jl
inc
cmp
call
inc
(bad)
ja
ins
imul
cwde
and
rcr
mov
sub
sub
in
sbb
add
fist
cmp
mov
mov
add
or
mov
adc
std
movs
imul
(bad)
test
sbb
mov
sbb
rcl
and
mov
cmp
ins
jl
pop
inc
cmp
enter
pop
ficomp
call
or
sbb
into
nop
cmp
das
or
popa
pushf
xchg
push
add
push
and
fcmovnb
nop
test
mov
mov
push
add
mov
xlat
js
cmc
rcl
ret
cmps
test
sub
and
push
inc
and
inc
bound
pop
xor
inc
test
inc
iret
mov
adc
mov
scas
sbb
sahf
pusha
out
popa
jp
xor
dec
mov
adc
mov
aaa
mov
les
jno
push
xor
dec
add
enter
push
jb
xor
xchg
dec
sti
mov
rcr
mov
call
loop
cmp
mov
icebp
je
mov
xchg
outs
mov
push
ret
ins
cwde
push
pop
push
imul
pop
iret
popf
int3
xor
imul
daa
sub
push
es
inc
das
jl
jp
ins
cmp
mov
test
add
push
movs
mov
fdiv
sub
sti
pop
jo
jge
xchg
fs
retf
push
cld
sar
xchg
sub
fld
push
sbb
sub
pop
add
shl
imul
sti
cmp
pop
cmp
repnz
and
or
sub
mov
and
xchg
adc
or
sbb
pop
hlt
xchg
mov
xchg
xchg
xor
mov
xor
and
jns
daa
adc
xchg
gs
cld
(bad)
jmp
add
(bad)
ror
jecxz
es
jno
and
dec
scas
xor
(bad)
das
clc
mov
dec
sbb
or
inc
retf
icebp
xchg
jbe
jmp
inc
int
push
xchg
ss
cmps
sbb
jae
and
cmp
cs
call
lahf
xchg
adc
popf
cmp
jp
leave
vmovntps
jmp
std
(bad)
jmp
xchg
mov
iret
jmp
shl
push
in
sub
pushf
sbb
pop
lea
or
cdq
lahf
in
test
mov
sub
xchg
(bad)
jecxz
mov
repz
test
sub
xor
mov
std
sar
pop
popf
dec
cs
mov
bound
out
xchg
loop
push
ds
mov
leave
mov
loope
mov
cmp
pop
sub
or
ins
mov
sub
jne
sbb
leave
js
jbe
inc
sub
mov
mov
stos
bound
mov
outs
repnz
rcl
call
jno
dec
or
ins
dec
popf
mov
pushf
ror
mov
inc
div
imul
sbb
sub
jmp
ficomp
mov
repz
retf
add
adc
and
sbb
xor
inc
sub
pop
pop
mov
out
xor
xchg
jb
xchg
in
xchg
pop
fisubr
test
xchg
xor
pop
mov
sbb
jns
jp
jecxz
jne
mov
sub
shr
test
enter
pop
es
cmp
pop
pusha
dec
push
mov
sbb
ins
cld
or
pushf
pusha
in
mov
lds
or
push
movs
push
inc
xor
dec
dec
xor
sti
push
in
mov
cld
pop
inc
sub
cs
pusha
pop
shl
or
sbb
aam
imul
inc
mov
sbb
add
pop
imul
imul
sti
movs
cmp
xchg
fist
retf
mov
lods
inc
adc
push
dec
fwait
xlat
js
sub
xchg
lea
nop
rol
outs
test
sub
jo
inc
repz
jmp
or
nop
xchg
mov
loope
xchg
(bad)
outs
mov
outs
cmp
fiadd
dec
adc
dec
sub
call
pushf
xor
pop
je
sub
inc
jecxz
test
les
fwait
test
mov
psubsb
pop
dec
xchg
call
and
call
cmc
mov
mov
mov
mov
add
icebp
inc
lea
xor
test
pop
mov
ror
mov
xchg
push
mov
int3
loope
rol
fiadd
mov
aam
add
arpl
mov
imul
test
lods
dec
movs
test
xchg
mov
jns
not
popa
pop
scas
xor
jne
mov
cmc
xchg
test
push
xor
push
test
cmp
push
add
imul
gs
adc
inc
cmp
(bad)
call
or
and
inc
sub
arpl
jno
ja
fld
sub
jno
mul
push
arpl
push
sbb
pop
sbb
(bad)
and
mov
fisttp
outs
outs
pop
cmp
aam
outs
out
sahf
xchg
push
les
outs
fidiv
pop
jl
inc
mov
sbb
push
mov
pop
dec
aam
add
jmp
jnp
or
push
shr
(bad)
xlat
xor
dec
test
add
mov
mov
lock
xor
shl
(bad)
sub
mov
sahf
dec
sahf
mov
xchg
dec
push
aad
sbb
rcl
test
idiv
sbb
xchg
xor
sahf
leave
mov
mov
sbb
jl
add
mov
daa
in
out
out
mov
add
and
sbb
mov
enter
loop
fidiv
pop
arpl
inc
push
mov
push
sbb
outs
inc
inc
mov
cmps
fcomip
mov
xchg
xor
pusha
aad
xchg
call
mov
mov
mov
sbb
fidivr
xchg
pop
or
clc
ror
(bad)
leave
fwait
add
and
bound
xor
mov
rol
jmp
push
in
inc
cld
cmp
repnz
out
jo
sub
fsub
stc
std
pop
pop
nop
mov
sub
jns
fucomi
adc
lea
loop
push
inc
loope
mov
mov
jmp
in
cmps
in
jecxz
daa
xchg
int
jae
pop
in
mov
ror
dec
jecxz
cmp
mov
outs
outs
mov
add
or
out
xchg
mov
loop
mov
or
push
jmp
data16
inc
dec
movs
pushf
adc
imul
push
je
ds
ins
pop
jns
xchg
push
jae
sbb
xor
sar
(bad)
jecxz
sar
int3
or
xor
mov
xchg
bound
pop
inc
pop
add
mov
loope
loopne
ins
dec
cwde
jns
push
imul
mov
stos
jbe
push
loop
inc
push
loopne
xchg
mov
loopne
mul
cmp
adc
std
jb
inc
shl
into
call
cmp
inc
mov
and
jae
inc
pop
imul
pop
xor
push
dec
test
sbb
es
leave
in
xchg
sub
(bad)
stos
nop
ja
add
sbb
mov
test
out
fs
out
lods
mov
or
scas
std
repnz
jns
out
aaa
nop
daa
cmp
dec
or
test
(bad)
idiv
xchg
stos
xor
in
pop
sbb
sahf
sbb
or
push
jmp
(bad)
xlat
or
inc
fadd
sahf
loop
dec
aam
xor
icebp
cmc
inc
movs
push
ds
call
jae
pop
rcl
(bad)
loope
inc
or
je
fsub
into
jle
out
hlt
mov
xor
retf
cld
push
dec
gs
dec
sbb
mov
and
mov
fidivr
sbb
add
pop
fmul
not
mov
pop
mov
jge
xor
and
cli
inc
mov
(bad)
jp
add
dec
push
call
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
pop
add
jmp
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
bound
adc
mov
je
je
(bad)
mov
(bad)
fstp
stc
mov
sub
int
add
pushf
int3
cmps
jp
mov
ror
inc
(bad)
push
jle
push
out
int3
stc
out
fstp
jmp
dec
(bad)
or
aas
enter
sbb
jne
mov
iret
mov
data16
dec
int3
mov
sti
out
sahf
fnstenv
sub
hlt
pop
dec
pushf
mov
punpckhwd
pop
adc
outs
sbb
pop
xchg
inc
arpl
or
test
repz
int3
push
fisubr
(bad)
popa
cmps
mov
push
mov
or
and
adc
(bad)
pop
cs
cmps
push
fimul
cmc
xchg
push
mov
loope
imul
cmps
loopne
ins
mov
pop
mov
fistp
push
and
sbb
pop
int
adc
repnz
inc
sub
jp
push
jne
xor
adc
ins
jo
sbb
sub
(bad)
mov
stos
stos
retf
(bad)
in
add
jb
sbb
pop
arpl
dec
fcom
adc
jno
movs
repz
out
push
push
xchg
sbb
pusha
pusha
and
add
push
dec
vaddsubpd
fnstsw
xor
xor
(bad)
xor
cdq
push
push
xchg
stc
clc
pop
pop
xor
popa
pushf
sbb
jo
movs
and
imul
mov
xchg
ret
test
sbb
cwde
data16
sbb
pop
inc
sar
loopne
adc
jmp
stos
dec
sub
xchg
push
ja
or
xchg
inc
sub
stos
mov
fcmovb
mov
cmps
sahf
mov
mov
in
ret
push
push
jge
mov
jmp
mov
shl
sbb
scas
lods
scas
std
cmp
repnz
mov
mov
mov
retf
and
push
add
int3
addr16
inc
mov
cmp
clc
mov
repz
add
es
fsubr
je
sbb
fldcw
add
in
xchg
add
div
enter
std
aam
mov
or
dec
adc
leave
sub
js
xchg
and
inc
inc
lods
push
(bad)
ror
dec
push
jecxz
and
push
jecxz
out
(bad)
iret
push
cmp
cli
(bad)
lods
xor
push
pop
idiv
(bad)
cmc
sahf
xor
add
int
pop
stc
rcr
sbb
xchg
or
cmp
cmp
nop
movs
mov
xchg
out
scas
pop
out
repnz
inc
iret
jmp
nop
fcom
and
out
push
and
inc
mov
cmp
test
repnz
test
sub
mov
pop
sbb
jno
or
cmps
dec
stc
fiadd
mov
jnp
sub
push
ins
loope
rcr
movs
and
pop
adc
outs
sub
pop
mov
in
cli
stc
adc
icebp
ins
stc
mov
dec
jo
ret
inc
imul
retf
add
add
movs
(bad)
dec
das
inc
scas
(bad)
std
aas
adc
and
push
push
mov
xor
cmp
and
adc
inc
mov
fwait
inc
aas
xor
mov
inc
lahf
arpl
sub
add
dec
push
std
and
gs
cmp
pop
in
push
ja
jle
scas
std
(bad)
xor
pushf
xor
mov
inc
pop
jle
and
dec
test
dec
stos
rol
sub
mov
ds
mov
jne
std
sbb
cdq
lods
(bad)
rol
cmp
(bad)
loope
sbb
fiadd
pop
ja
or
das
repnz
inc
xor
sbb
adc
(bad)
fiadd
js
sub
or
sub
cmp
pop
jmp
out
jmp
out
sub
push
loope
add
xor
shl
lea
stos
or
adc
out
mov
aaa
cmps
neg
stos
push
test
cmp
ins
popf
enter
movs
mov
sub
ss
cmps
pop
es
mov
icebp
xchg
ja
lods
pop
(bad)
push
pop
jge
scas
mov
xor
sbb
cmp
mov
sbb
(bad)
(bad)
pop
and
xchg
js
repnz
iret
iret
imul
das
(bad)
sbb
out
cli
mov
jmp
or
mov
std
fadd
inc
lea
aad
or
sar
shr
jmp
dec
data16
jne
sub
cmp
add
mov
cmp
imul
sbb
pop
xchg
lea
and
xchg
xchg
push
addr16
pop
add
sbb
pop
mov
pop
and
aaa
sub
je
mov
jnp
out
mul
out
or
add
pop
xor
push
and
mov
rcr
sbb
pop
xor
cwde
sar
cmps
adc
idiv
cmp
cdq
dec
fist
inc
into
mov
jns
inc
aam
mov
cld
xor
dec
(bad)
dec
(bad)
add
sub
mov
(bad)
retf
out
mov
aaa
outs
inc
or
fisub
test
jmp
inc
push
xchg
sbb
mov
rcr
jmp
sbb
pop
sbb
sbb
jmp
fsubp
out
jl
(bad)
(bad)
ins
dec
jecxz
inc
scas
stc
popa
xor
xchg
cdq
xchg
add
and
inc
scas
shr
neg
pop
aas
pop
cli
and
sahf
adc
xchg
(bad)
in
and
test
shl
mov
jmp
xor
sti
add
out
xchg
shl
add
cld
rcr
and
data16
shl
inc
add
dec
push
mov
mov
into
repnz
fild
xor
jl
rol
jnp
test
xchg
push
aam
mov
xchg
pop
jge
mov
dec
dec
add
xlat
dec
mov
in
test
inc
aas
js
sbb
inc
addr16
pusha
inc
xlat
mov
mov
jbe
push
add
cwde
pushf
mov
lahf
jbe
inc
je
sbb
test
ja
jp
out
mov
xor
fisttp
mov
cmps
call
push
and
xlat
mov
push
cmp
add
pop
pop
mov
pop
mov
imul
lock
dec
std
arpl
xchg
mov
sbb
push
mov
shl
loope
fidivr
pushf
mov
iret
leave
pop
lods
xchg
cmp
hlt
jns
popf
jno
clc
push
cmps
shl
(bad)
icebp
neg
jne
stos
mov
sub
call
sbb
push
jne
loope
jmp
adc
inc
mov
retf
out
iret
jmp
cli
add
retf
and
pop
retf
test
and
inc
xchg
loope
fsubr
xchg
imul
jmp
fld
cld
adc
imul
jg
mov
inc
adc
or
mov
sub
and
sbb
adc
movs
inc
and
fwait
inc
lock
jecxz
ret
jno
je
pusha
sahf
cmc
xor
ja
lods
lds
daa
inc
fbld
push
call
enter
adc
mov
xchg
fld
mov
xchg
sub
push
jno
ins
repnz
xor
aam
sahf
out
jmp
push
sub
or
rcl
add
cld
sub
pop
repnz
scas
add
inc
test
enter
pusha
pop
aaa
ja
cli
loop
jns
push
xchg
cdq
sti
push
pop
push
push
mov
inc
pusha
stos
mov
cmc
or
mov
vmread
sbb
imul
xor
movs
shl
in
ret
in
cli
dec
test
cli
in
popa
lods
cmp
adc
or
pop
retf
add
jp
sbb
out
call
out
pop
push
cmp
mov
in
retf
sbb
aad
adc
sti
cmp
jne
cli
add
or
data16
jecxz
mov
jnp
dec
or
or
lock
mov
mov
xor
mov
addr16
add
cli
outs
sbb
out
jl
dec
mov
jle
fs
push
shr
xchg
loopne
xchg
cmp
and
fbld
cmp
jbe
shl
(bad)
sub
fwait
out
lods
add
sar
dec
inc
jle
mov
push
aas
add
lahf
or
add
mov
cli
push
std
dec
neg
push
cmp
pop
std
daa
sub
or
jae
mov
jmp
and
pusha
pop
jmp
push
sbb
mov
or
ja
pusha
ins
push
pmulhuw
(bad)
pushf
mov
add
scas
int3
mov
jmp
mov
out
push
add
mov
adc
or
push
lods
ja
adc
jmp
xchg
xchg
pop
or
ret
xchg
cmp
shr
fadd
xor
outs
into
(bad)
pop
mov
mov
pushf
mov
or
pop
stc
sub
mov
les
les
pop
cmp
or
sbb
leave
aaa
inc
mov
mov
retf
or
cmp
pop
in
lods
push
mov
pusha
pop
and
sub
push
inc
imul
leave
cli
test
out
mul
jne
pop
clc
xor
stc
mov
push
clc
or
xlat
push
loopne
jbe
mov
add
aas
scas
push
(bad)
or
movs
xchg
repnz
popf
add
jne
retf
repz
push
scas
jae
into
inc
cli
shl
ins
or
outs
jne
lods
lds
push
cmp
mov
sub
aas
cli
ret
push
mov
pop
push
test
test
xor
pop
jge
cmp
imul
popf
unpckhps
hlt
dec
mov
inc
or
in
mov
mul
dec
cli
iret
xor
(bad)
mov
inc
jns
movs
std
xor
add
sub
inc
(bad)
mov
sub
neg
xchg
cmps
adc
cmps
push
jnp
test
ldmxcsr
jns
imul
imul
dec
lods
arpl
mov
mov
xchg
jno
cmp
xor
mov
lods
mov
jl
lahf
clc
sbb
jo
adc
xor
xor
ins
add
mov
and
xor
or
xchg
lds
in
mov
jle
cmp
cld
das
into
xor
lahf
data16
push
sbb
mov
(bad)
bound
xor
and
dec
xchg
xchg
add
ja
inc
sbb
fisttp
and
inc
inc
xor
mov
cmps
sbb
mov
dec
ret
mov
inc
movs
(bad)
jno
or
push
cmp
inc
dec
nop
aas
jbe
dec
xchg
jecxz
imul
(bad)
call
sub
jns
cmp
icebp
adc
sub
or
xchg
mov
inc
push
cmp
imul
sub
and
dec
imul
jno
add
movs
push
lds
movs
add
xor
dec
adc
xchg
adc
push
dec
add
mov
sbb
loop
pop
cmp
aam
(bad)
or
out
fild
scas
sub
cmps
xlat
cwde
fiadd
inc
data16
stos
ret
adc
jle
fisttp
mov
lea
arpl
fistp
scas
inc
jg
scas
jl
in
xchg
fs
jbe
loop
fisttp
xchg
add
push
ins
int3
mov
outs
sub
lds
jmp
sbb
icebp
sub
iret
in
cmp
push
mov
outs
fdiv
mov
ins
sahf
jb
mov
jp
mov
dec
aaa
mov
movs
and
xor
mov
xor
std
int
push
adc
adc
pusha
xchg
div
and
add
test
cli
dec
fsub
stos
and
lods
adc
stos
sub
cmps
gs
mov
stos
pop
sahf
pop
stos
(bad)
cdq
and
sbb
(bad)
xor
add
cmps
sar
adc
adc
xchg
sub
(bad)
xor
fdivr
or
cmp
mov
test
jge
in
shl
mov
ins
sub
stos
add
mov
xchg
jp
iret
jbe
xor
add
in
cmc
fsubr
cdq
test
jmp
add
sbb
into
push
ret
adc
and
loop
repnz
lock
inc
xlat
(bad)
xchg
(bad)
div
xchg
stos
(bad)
jnp
call
ror
shl
adc
inc
push
out
push
repnz
cs
cli
ins
jmp
cmp
enter
xchg
pushf
jo
dec
iret
stc
dec
or
pop
mov
(bad)
or
inc
xchg
imul
pushf
inc
inc
fld1
retf
dec
push
bound
dec
mov
xor
(bad)
das
int3
cmps
mov
mov
call
adc
pushf
icebp
jne
sbb
sbb
sahf
into
in
xor
in
sbb
neg
xchg
gs
push
fucomi
jbe
xchg
fcmovu
mov
sub
repz
clc
repz
jo
call
lock
out
retf
in
push
jnp
mov
loope
jmp
dec
pop
pop
jle
fbld
or
loop
test
inc
aad
repnz
pop
pop
dec
mov
stc
xor
pop
push
pop
loop
xor
add
clc
xor
push
cmp
mov
ins
jmp
mov
fld
in
push
xchg
mov
ja
(bad)
pushf
iret
and
and
iret
xor
cmp
sub
push
dec
sub
adc
xchg
adc
ins
push
cld
outs
jmp
lods
fcmovbe
movs
fwait
and
aas
jge
lahf
jb
sahf
ja
or
cmp
mov
xor
pop
lods
(bad)
sub
pop
jbe
cld
mov
cmp
add
add
dec
aad
(bad)
jb
push
adc
ror
sub
cs
adc
or
mov
xchg
shl
movs
call
pop
inc
pop
adc
inc
xchg
xor
mov
shl
or
pushf
add
mov
mov
sar
mov
mov
sbb
imul
add
frstor
cmp
mov
sbb
mov
mov
cmp
mov
je
xchg
or
dec
and
or
add
cmps
or
pop
imul
push
xchg
add
(bad)
(bad)
(bad)
in
imul
jmp
mov
pop
fcomp
pop
fst
cmp
test
scas
in
in
lahf
or
popa
out
(bad)
fs
(bad)
jne
aas
rol
out
enter
gs
loop
adc
mov
push
mov
push
cmp
das
scas
xchg
in
pop
es
jecxz
cmp
mov
jle
or
sub
dec
ja
adc
sbb
sbb
in
mov
loope
shl
stos
not
scas
jno
or
jne
rol
dec
inc
out
repnz
cli
jb
xchg
(bad)
(bad)
and
loopne
outs
sbb
add
stc
inc
sbb
arpl
push
test
mov
pop
call
mov
sbb
cmp
sub
lahf
push
xchg
pushf
adc
pop
loope
addr16
sbb
cli
shl
cmps
inc
and
(bad)
sbb
sahf
iret
xor
ins
fsub
imul
sub
pushf
or
jne
mov
inc
and
mov
gs
enter
into
imul
jbe
xchg
outs
(bad)
cmp
cmp
stc
mov
out
push
sub
dec
test
(bad)
adc
inc
jl
xchg
mov
ja
adc
mov
pop
pop
call
pop
jp
imul
dec
mov
add
adc
shr
cmps
push
mov
adc
sbb
hlt
add
sbb
xchg
jl
das
push
popa
jnp
bound
xchg
jle
fist
clc
movq
inc
out
(bad)
fist
jg
imul
sbb
stos
out
sbb
mov
cmp
cmp
inc
cmp
jl
ret
out
ins
xor
std
cmp
xchg
dec
ss
scas
call
bound
mov
push
mov
mov
repnz
push
xor
dec
inc
mov
jmp
std
pusha
stos
adc
pop
push
push
mov
imul
push
out
sub
fwait
ret
push
or
pop
add
add
xchg
jmp
sbb
or
or
fsub
fstp
sub
jge
push
outs
adc
jno
popa
push
gs
xchg
and
push
dec
push
mov
push
mov
inc
out
jb
sbb
push
and
or
pop
push
or
out
and
aam
or
push
in
aam
xchg
mov
test
or
xlat
mov
stc
ds
pop
jmp
hlt
popf
push
dec
mov
lock
aaa
sbb
add
sub
and
popa
in
mov
in
sbb
add
xor
popf
imul
clc
test
out
cmc
mov
(bad)
cmp
les
mov
cmp
or
jmp
cmp
call
out
xchg
int3
call
rcr
push
dec
or
adc
and
push
ja
pusha
mov
mov
mov
retf
mov
pop
and
ins
data16
push
ins
add
mov
mov
stc
pop
jmp
mov
jb
pop
dec
stos
pop
ins
lea
test
adc
sbb
je
pushf
and
repnz
push
jae
or
xchg
fsave
nop
sub
or
mov
jmp
cmp
pop
jo
movs
mov
add
cmp
les
ins
mov
call
dec
sar
xchg
fstp
test
ret
push
lock
mov
and
add
sub
(bad)
hlt
call
dec
xor
jl
clc
jp
mov
and
pop
jmp
fild
fwait
xor
pop
retf
adc
shr
pop
jae
dec
int3
shl
or
movs
jo
pop
fdiv
sbb
mov
xchg
cmp
adc
xor
cmp
iret
push
aad
in
sbb
mov
leave
(bad)
sbb
add
xchg
enter
lock
push
test
mov
push
sar
pop
ins
add
fst
stc
or
fstp
sub
sbb
cmp
pop
cmp
dec
in
popa
lock
adc
mov
call
fbld
mov
ret
or
jge
jae
int
mov
jmp
imul
pop
xlat
adc
les
ins
and
xor
jecxz
xchg
mov
pushw
add
les
call
mov
ins
fdivr
rcl
in
iret
rcr
loopne
mov
mov
mov
cmp
mov
hlt
sub
test
retf
adc
retf
test
aas
adc
xor
and
xlat
mov
cwde
or
lahf
mov
in
inc
(bad)
mov
sbb
add
stos
mov
(bad)
test
mov
into
cmps
xlat
fcmovnu
cmp
cli
mov
gs
and
inc
mov
pop
ret
mov
push
ret
fld
pop
pop
repnz
sub
test
in
rcl
push
push
xchg
(bad)
sub
je
mov
repnz
les
out
adc
ret
jbe
pop
dec
xchg
mov
clc
test
inc
test
aam
je
xchg
mov
rcl
(bad)
push
sub
movs
retf
or
and
xchg
mul
mov
dec
xchg
xchg
add
mov
ins
mov
(bad)
mov
out
in
push
xchg
adc
adc
clc
jnp
pop
(bad)
out
or
jbe
nop
(bad)
and
jne
test
push
pop
test
xchg
outs
shr
pop
jp
fwait
pop
sti
adc
mov
(bad)
cs
cmc
ficom
mov
sub
int
jmp
sbb
sbb
mov
jb
xchg
pusha
shr
cmp
test
inc
cli
pop
hlt
dec
scas
sbb
cmp
aaa
mov
imul
jg
push
or
jge
ins
sub
lahf
mov
adc
inc
mov
add
push
ret
leave
in
cmp
dec
mov
xor
movs
iret
lea
fwait
mov
jns
outs
imul
pusha
jno
jbe
(bad)
stc
xor
(bad)
jns
fistp
xlat
gs
movs
adc
icebp
push
jge
pop
div
hlt
sub
mov
xlat
and
mov
mov
sub
ret
pop
inc
ret
das
and
jae
frstor
ret
or
(bad)
pop
iret
mov
xor
jnp
call
dec
in
pop
mov
cmp
inc
(bad)
and
popa
aad
dec
push
sub
or
dec
es
add
jae
int
mov
or
repnz
jae
std
(bad)
push
ret
dec
sahf
imul
xchg
mov
(bad)
je
sar
mov
mov
fld
jmp
lds
pop
pop
test
shr
pusha
lds
xor
ds
adc
cmps
xor
and
bound
out
in
ficom
in
icebp
scas
mov
test
add
in
pop
push
mov
mov
fisubr
and
dec
mov
cmp
mov
mul
bound
xor
add
add
fst
push
stc
or
jne
fsubp
call
cmc
sub
lods
int3
mov
arpl
dec
fdivr
repnz
ret
pop
or
cwde
adc
jo
xor
test
daa
dec
(bad)
mov
repnz
stc
and
mov
mov
imul
and
mov
lods
stos
fsubp
in
ins
jl
mov
adc
cs
test
imul
sbb
aaa
mov
dec
fld
mov
dec
rcl
imul
jge
adc
adc
pop
xor
lea
pop
test
xlat
xor
xlat
lahf
in
int3
loopne
aaa
jne
mov
mov
xchg
repz
mov
pop
(bad)
pushf
mov
adc
test
or
(bad)
popf
push
pop
movs
jmp
mov
xchg
xchg
lock
icebp
pop
push
pop
int
nop
rcl
xchg
or
xchg
mov
das
scas
mov
mov
loope
sahf
pop
call
pop
retf
jmp
jne
jns
jmp
pop
xchg
icebp
push
sub
aad
inc
sub
pop
rcr
gs
xlat
xor
retf
sub
shl
sbb
jae
sbb
loop
mov
inc
cmp
dec
xchg
stos
jb
or
push
shl
jnp
stc
sub
inc
push
mov
add
mov
call
xchg
mov
jns
dec
gs
aas
mov
mov
jl
push
cwde
add
mov
pusha
out
in
lds
popf
dec
dec
adc
xlat
add
loopne
or
ins
mov
rcl
jg
pop
push
cmp
repz
call
sbb
cmp
dec
or
mov
in
pushf
retf
in
and
dec
jb
cmp
sub
adc
lock
aas
xchg
inc
xchg
jae
shld
xor
cwde
push
ja
(bad)
rcr
out
push
pop
fs
jne
clc
push
cmp
jns
add
inc
xchg
add
pop
sbb
ret
cli
sub
(bad)
ret
xchg
test
jno
add
xchg
cmp
xlat
mov
dec
call
sub
gs
das
push
cwde
test
pop
ret
scas
inc
mov
mov
dec
cwde
out
push
(bad)
ret
add
or
jmp
add
mov
pushf
(bad)
or
pop
iret
stc
push
inc
add
mov
fild
hlt
push
sub
xlat
mov
(bad)
or
das
add
enter
and
(bad)
xlat
sub
aam
mov
dec
mov
(bad)
sahf
imul
adc
cs
sbb
dec
out
das
mov
dec
loop
aam
scas
push
adc
clc
dec
xlat
dec
and
mov
fnstsw
dec
test
mov
das
push
loopne
test
xor
aas
pushf
jmp
xchg
aaa
cmps
out
(bad)
jmp
outs
cli
xchg
enter
(bad)
mov
cmp
int
pop
jmp
add
data16
lock
stos
cmps
in
mov
cdq
jmp
mov
adc
cli
push
push
adc
mov
scas
cmps
sub
add
mov
call
fs
sbb
je
(bad)
sub
mov
es
nop
inc
and
call
and
push
shl
out
xor
outs
out
inc
lahf
sbb
and
mov
addr16
xor
mov
ja
aas
sbb
jmp
adc
stc
repnz
(bad)
jge
xchg
mov
add
jo
in
popf
aaa
dec
js
add
mov
xchg
cdq
(bad)
fcmovbe
aam
pop
les
repnz
xlat
cmc
add
and
cmp
inc
call
cmc
push
stos
inc
in
jbe
mov
retf
mov
fsubr
pop
mov
mov
jmp
movs
sub
xor
les
adc
mov
xor
popf
dec
(bad)
mov
mov
adc
cmp
mov
gs
inc
shl
and
mul
repnz
mov
out
pop
jmp
mov
mov
loopne
jecxz
cs
idiv
loope
sub
fisub
jno
dec
mov
enter
pop
cmp
lahf
dec
fxch
and
sub
push
adc
cmps
retf
imul
test
dec
test
scas
sahf
shl
xchg
mov
aam
ins
jecxz
retf
add
arpl
jae
test
mov
pop
repz
mov
and
pop
xchg
mov
jbe
mov
fcomp
sahf
dec
sbb
inc
hlt
aad
inc
push
loope
leave
cmps
and
mov
jnp
out
mov
enter
or
sbb
xchg
adc
add
mov
push
jmp
imul
adc
mov
movs
call
mov
jbe
dec
loope
push
inc
sub
cmp
pop
sbb
(bad)
in
xchg
mov
sbb
xchg
pop
outs
and
loope
pop
fisubr
pop
outs
and
dec
pop
sub
(bad)
ss
pop
mov
xor
ins
push
pushf
dec
ret
in
pop
mov
rcr
cmc
fcomip
xchg
mov
iret
jmp
add
sub
add
stos
int
std
xchg
sbb
xchg
sub
push
iret
push
enter
loope
rol
pushf
outs
adc
outs
ins
xchg
mov
retf
sub
call
loop
js
fwait
imul
mov
loope
jo
ret
xor
loope
mov
xor
int
dec
scas
les
mov
in
adc
fwait
fs
pop
lods
loope
cmp
push
pop
lods
dec
std
or
pop
cdq
dec
fprem
push
(bad)
das
bound
out
ja
ficomp
outs
cmc
ror
aas
xor
gs
cmp
iret
add
les
addr16
adc
mov
aas
in
das
outs
js
mov
jecxz
sbb
inc
ins
xchg
jnp
mov
dec
sbb
inc
add
sub
push
or
push
lahf
les
ins
(bad)
nop
jnp
push
mov
mov
add
loopne
mov
mov
call
ins
mov
xchg
xor
test
cmc
adc
jmp
les
push
out
inc
jecxz
sbb
call
cdq
push
cs
jle
outs
stos
push
out
aam
push
jp
inc
add
out
iret
test
stos
imul
clc
retf
movzx
sahf
out
cld
mov
nop
out
push
inc
outs
pop
cmp
lock
pop
scas
push
and
ss
inc
jb
pop
mov
mov
push
xchg
sbb
push
ret
and
sar
inc
jl
pop
cs
inc
add
sysret
clc
jb
jp
mov
jnp
(bad)
xor
ror
pop
in
pop
cmp
sar
lahf
sbb
cdq
loopne
cwde
call
sbb
ins
int3
stc
jno
bound
push
ja
mov
ss
adc
mov
retf
mov
adc
lahf
loop
or
cmps
add
pop
add
fisub
stc
and
jae
add
or
ja
(bad)
in
dec
push
inc
xor
dec
ss
inc
addr16
mov
movs
test
and
ds
jp
jo
sahf
test
jb
test
sar
jns
mov
fistp
adc
cmps
fnsave
push
les
mov
dec
hlt
xchg
push
and
cmps
setbe
inc
pandn
mov
outs
xchg
mov
xchg
stos
mov
inc
(bad)
pusha
xchg
mov
call
xchg
mov
in
xchg
dec
mov
rep
ja
xor
sbb
ja
sub
addr16
adc
jge
jb
xchg
mov
test
sbb
fsub
jle
sbb
inc
call
mov
out
loop
mov
xchg
(bad)
cli
fdiv
ins
sub
repnz
aas
inc
nop
inc
jno
sub
push
jno
push
test
jo
push
std
stc
adc
in
mov
push
push
clc
pusha
icebp
mov
push
or
out
shl
xor
or
in
outs
sbb
jl
jg
imul
sti
mov
imul
pop
xor
test
mov
loop
pop
fidivr
scas
rcr
sahf
fwait
pop
mov
dec
fiadd
and
mov
dec
xor
imul
daa
stos
dec
ds
mov
mov
cmc
dec
out
mov
bound
push
jg
dec
inc
adc
mov
jnp
dec
pop
test
mov
bound
fs
sbb
ins
push
lods
mov
add
and
inc
lock
pusha
pop
pop
mov
adc
fisubr
sbb
fcomp
test
jo
js
dec
fdiv
mov
int
or
mov
xchg
xor
xlat
pop
in
cmp
fld
loope
not
xor
test
lods
mov
aad
mov
mov
mov
bound
aaa
cmp
xchg
inc
push
or
fcmovne
sub
mov
xchg
inc
lea
cmp
sub
call
rcl
ins
fdivrp
scas
inc
cmp
push
push
xchg
shl
jno
and
mov
inc
jo
push
jb
lock
jl
fmul
(bad)
fidivr
dec
btr
fcomi
mov
sti
add
and
adc
dec
add
je
pop
sub
popa
std
and
fcom
test
in
xor
in
and
pusha
pop
cmp
dec
pushf
push
ins
xchg
dec
into
push
xchg
sub
mov
dec
xor
sbb
retf
and
jle
xlat
dec
pop
fsubr
mov
gs
pop
jl
push
mov
rol
fcmovb
into
add
add
jg
test
sbb
xor
pop
int
bswap
arpl
pop
push
cdq
jo
(bad)
in
(bad)
in
popf
in
pop
sbb
pop
movs
iret
(bad)
fisubr
inc
xchg
mov
sbb
mov
jnp
mov
mov
cdq
mov
cmp
and
xchg
push
cmp
mov
xor
nop
xor
push
mov
mov
arpl
adc
mov
inc
std
imul
jmp
dec
outs
les
test
sub
js
add
rol
fisttp
es
stc
scas
fnstsw
mov
std
and
iret
retf
xchg
dec
xchg
lds
push
add
or
mov
(bad)
jnp
(bad)
fist
dec
push
outs
repnz
sbb
push
dec
mov
mov
sub
sub
adc
mov
jmp
xchg
sub
mov
and
jg
daa
fmul
in
push
jnp
pop
cdq
popf
ret
jnp
jne
sbb
push
enter
jmp
sub
repz
sub
inc
pop
gs
sbb
in
xor
rol
movs
push
jno
push
call
cmps
and
mov
call
shl
das
sub
mov
pop
jge
neg
mov
jge
movs
bound
inc
push
stos
push
cs
cli
mov
sub
movs
mov
jne
ficomp
fistp
mov
or
jmp
movs
and
push
push
inc
cs
sub
and
aas
mov
cvttps2pi
xchg
in
aad
in
xchg
add
stc
and
jb
sbb
adc
xchg
sub
jmp
jnp
retf
push
jmp
dec
into
inc
retf
(bad)
jmp
sub
out
sbb
mov
shl
cmp
into
popf
fsub
sub
mov
fimul
jns
jbe
mov
test
mov
xor
ret
shl
adc
nop
pop
mov
adc
pop
pop
dec
nop
mov
arpl
mov
or
mov
(bad)
bound
dec
js
jbe
jmp
push
xor
adc
sub
inc
(bad)
mov
xor
rcl
stc
test
sbb
sbb
jecxz
xchg
mov
pop
pop
out
(bad)
sub
xchg
inc
test
push
xchg
shl
std
dec
dec
and
dec
pusha
pop
aad
stc
add
test
xor
sub
push
cmp
ficom
sbb
sysret
loope
neg
test
sbb
inc
jmp
rcr
cs
call
sahf
mov
inc
movs
mov
xchg
fstp
sahf
xchg
xchg
lods
loopne
stos
ja
(bad)
lock
jg
sub
pop
loope
das
scas
fbld
sbb
stos
cmp
cmps
jo
outs
inc
mov
push
adc
inc
mov
call
test
std
jb
jp
(bad)
out
fs
retf
push
clc
dec
inc
in
adc
xchg
jo
inc
stos
mov
div
adc
ss
in
test
sbb
sti
retf
cli
cmp
and
std
dec
ja
inc
add
pop
fcom
inc
outs
out
test
shr
pop
(bad)
cmp
aam
inc
es
fbstp
idiv
inc
add
outs
xor
mov
lods
mov
adc
lock
nop
adc
and
movs
in
call
or
fdivr
push
out
push
xor
xor
jle
push
sti
nop
shr
mov
je
outs
inc
adc
mov
icebp
stc
jle
rcr
and
xor
loop
lock
mov
mov
ror
jp
pop
add
das
inc
loopne
call
fwait
pop
loope
(bad)
lds
cmp
mov
outs
into
add
retf
jge
stc
jmp
je
and
push
lods
outs
(bad)
loop
lods
pcmpeqb
jne
and
sbb
mov
xor
popa
loopne
pushf
hlt
lods
dec
movs
adc
out
inc
pop
fdivr
jne
add
xchg
add
sub
mov
push
mov
push
cmp
xor
jle
popf
push
and
les
push
leave
jnp
push
dec
out
xchg
xor
sbb
pusha
pop
cmp
dec
nop
cmp
lahf
cs
mov
outs
bound
jle
call
and
cs
in
jle
fwait
in
push
xchg
mov
push
mov
call
ss
pop
call
mov
clc
pop
test
inc
retw
cmp
fiadd
mov
dec
pusha
call
jbe
mov
xor
dec
cmovne
ss
or
es
mov
call
xor
xchg
jno
xchg
cmp
sbb
or
js
push
ins
out
cmp
xor
jo
jge
xor
stos
push
sbb
push
imul
shl
jmp
sahf
adc
ret
sub
push
xchg
cmp
pop
xchg
push
into
sbb
leave
lock
aam
xchg
xlat
int
fldcw
sti
retf
je
dec
(bad)
jmp
lahf
out
out
add
dec
(bad)
std
jno
cld
mov
push
popa
ss
push
add
pop
hlt
mov
rcr
and
nop
cmp
xor
lock
sub
add
movs
mov
add
bound
jle
jmp
dec
jp
jb
ss
es
or
mov
or
push
cmc
dec
lods
cmp
outs
push
adc
cdq
xor
loopne
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
pop
add
pop
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
popa
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
dec
inc
inc
push
push
jbe
or
mov
(bad)
outs
ins
(bad)
shl
mov
mov
(bad)
mov
jmp
mov
(bad)
out
out
fidiv
(bad)
cwde
add
mov
inc
or
xchg
movs
ds
mov
fsubr
add
fcom
into
(bad)
rol
push
xor
aad
sub
mov
sub
sbb
jg
ja
and
push
in
icebp
and
xor
jb
nop
mov
xor
lods
sti
sub
js
test
and
addr16
cmc
hlt
call
sbb
data16
xchg
jmp
mov
movs
adc
(bad)
aad
cdq
int3
jge
nop
mov
movs
sub
dec
fwait
es
inc
out
scas
es
sbb
xchg
data16
and
or
sub
bound
mov
push
mov
or
add
cmp
add
pushw
popf
aam
cmps
fsubr
ins
nop
push
jae
and
mov
mov
sub
cwde
lock
push
fwait
lea
xor
loopne
mov
std
xor
mov
sbb
cmp
push
jle
mov
and
cmc
cli
nop
pop
adc
test
push
arpl
or
fs
mov
loope
inc
std
stos
fldcw
aaa
sub
mov
pusha
sbb
out
mov
ins
mov
or
(bad)
cmp
mov
rcr
lds
sub
stc
push
not
sub
pushf
mov
out
sahf
ss
(bad)
sti
lods
mov
icebp
xchg
loope
jo
jg
inc
aaa
cmp
pop
stc
pop
sub
jmp
popf
sub
hlt
fcmovnbe
jne
fnstsw
je
xlat
sub
cmp
inc
add
pop
adc
mov
or
xchg
or
mov
lds
push
push
jnp
sahf
add
xor
push
adc
push
dec
push
cmps
adc
xchg
je
xchg
mov
outs
ins
cmc
dec
mov
test
inc
test
pop
(bad)
jg
jbe
mov
rcr
push
adc
int3
jmp
nop
in
jmp
stc
xlat
or
imul
(bad)
mov
mov
mov
hlt
mov
xchg
and
add
jb
les
inc
pusha
jnp
es
clc
mov
out
and
scas
dec
repz
data16
lock
push
js
enter
xchg
ds
mov
jle
movs
sbb
sahf
mov
and
jg
mov
test
mov
scas
cmp
shr
jns
or
pop
sub
outs
stos
push
test
or
addr16
imul
cmp
mov
jne
pop
xor
movs
cvtdq2ps
xchg
or
fiadd
sub
(bad)
enter
or
mov
cmp
das
xlat
cdq
jbe
ror
(bad)
cmp
xchg
inc
adc
aad
push
and
pop
out
dec
test
mov
test
cmp
fwait
push
stc
inc
mov
jo
(bad)
out
jno
(bad)
outs
mov
lea
lahf
enter
xchg
enter
ins
push
lock
xchg
mov
sub
sbb
lds
mov
xor
xor
gs
retf
jo
jmp
std
ds
push
rcl
mov
mov
xor
iret
je
mov
gs
lock
add
fdivr
sub
jle
sub
jno
and
mov
jmp
add
pop
dec
xor
push
bnd
mov
mov
xor
lahf
dec
xchg
cmp
sub
cmp
mov
xchg
push
push
pop
push
ins
imul
dec
jl
push
cmp
fist
mov
dec
push
movs
(bad)
push
mov
addr16
pushf
fcom
jecxz
add
or
in
lods
nop
clc
out
dec
sbb
xor
jecxz
push
inc
cmp
inc
packssdw
je
mov
div
mov
mov
cmps
xlat
lock
jg
out
fisubr
leave
daa
(bad)
imul
hlt
mov
loopne
pop
retf
jge
adc
add
into
inc
arpl
clc
jp
mov
pop
pusha
inc
fwait
dec
imul
fidivr
or
fsub
xor
fst
lahf
or
dec
fimul
mov
cmp
mov
shr
mov
adc
or
pop
(bad)
sub
xchg
popa
test
ds
cwde
and
(bad)
sub
xchg
div
call
cmp
xor
xlat
fsub
mov
adc
and
jae
push
out
push
pop
mov
mov
aas
push
inc
(bad)
hlt
sbb
cmc
shl
lds
mov
lock
ins
xor
add
or
(bad)
xchg
cmp
mov
sub
cmp
push
in
cs
mov
and
mov
popa
sar
shl
cmp
rol
scas
sub
in
sti
bnd
rcr
test
add
aam
(bad)
jno
mov
daa
cli
(bad)
or
and
push
mov
or
push
retf
outs
bound
push
and
adc
adc
into
(bad)
sbb
jle
hlt
push
xchg
push
jmp
inc
inc
pushf
mov
xchg
out
pop
outs
iretw
cmp
stos
clc
nop
mov
mov
and
inc
sub
retf
addr16
xor
add
inc
repz
in
cmps
add
inc
pusha
stos
cmp
mov
scas
mov
add
mov
outs
sahf
test
data16
xchg
retf
dec
adc
shr
(bad)
inc
cmp
xchg
push
pop
ror
xlat
sub
ins
push
imul
sahf
leave
nop
ret
or
test
xchg
inc
out
bound
push
and
pop
push
pop
jp
icebp
out
(bad)
nop
mov
xchg
out
pop
push
fsub
popa
cmps
arpl
dec
sti
mul
xchg
inc
pushf
xchg
add
jg
repz
stos
pop
pop
sbb
repz
and
out
pop
hlt
or
mov
inc
into
fldcw
pop
out
pop
(bad)
imul
cmps
mov
xor
mov
addr16
cmp
xchg
call
dec
les
shl
mov
xchg
loopne
jmp
jle
pop
and
mov
mov
pop
sub
movs
add
sahf
loopne
data16
mov
daa
fstp
(bad)
sbb
xor
jp
and
outs
inc
pop
(bad)
(bad)
or
pop
popa
lock
mov
hlt
retf
sbb
cdq
push
popf
and
and
mov
push
stc
sub
cdq
dec
inc
ret
rcr
icebp
adc
or
cmp
xchg
jns
or
sbb
sbb
cmp
js
and
inc
push
xor
sub
xor
push
adc
out
jne
jmp
in
or
movs
fld
aaa
sub
pop
xor
test
lahf
add
xor
xchg
or
test
mov
(bad)
push
(bad)
xchg
loop
hlt
test
xchg
add
xchg
(bad)
out
stos
and
nop
cmps
aaa
loop
cmp
jle
into
mov
call
aaa
cmc
aaa
inc
mov
inc
and
pop
sub
(bad)
jecxz
and
popa
push
shr
xchg
hlt
test
in
pushf
rcl
loopne
aas
adc
mov
enter
loopne
adc
pop
sar
neg
enter
or
jbe
out
pop
mov
adc
sub
adc
adc
jmp
mov
mov
iret
lods
movs
push
in
leave
(bad)
mov
dec
mov
jg
mov
push
inc
mov
aam
or
adc
mov
xchg
adc
call
jne
pop
mov
xor
cmp
stos
xchg
push
das
mov
dec
push
test
add
(bad)
sub
cmps
jmp
cmp
rcr
jno
mov
dec
retf
pop
arpl
aas
(bad)
sub
movs
repz
ret
ficomp
sti
jge
call
aas
fild
data16
cld
and
repz
mov
xchg
sbb
dec
leave
test
cmp
cmp
repz
pop
lds
enter
xchg
jns
(bad)
adc
xchg
nop
int3
mov
jp
pop
sbb
inc
imul
ret
les
aaa
sahf
pop
mov
(bad)
mov
iret
adc
adc
cmp
mov
cmp
add
daa
mov
cmp
popf
lahf
cmc
mov
mov
inc
mov
dec
mov
and
pop
add
fiadd
push
mov
push
mov
mov
add
pop
retf
out
add
inc
jno
xchg
xchg
adc
addr16
pop
sub
pop
or
stos
mov
mov
adc
xchg
sbb
int
mov
fs
(bad)
jmp
xor
push
out
mov
xchg
add
aaa
lahf
jg
xor
aas
lahf
mov
lds
inc
add
or
jbe
out
mul
(bad)
int3
adc
push
push
add
imul
or
add
xchg
mov
push
into
and
aad
jnp
in
and
push
(bad)
out
int3
sbb
or
pop
shl
es
fst
sbb
mov
pop
adc
mov
cmp
fisubr
repz
mov
pop
push
test
add
ret
sahf
loope
(bad)
fld
jns
or
mov
clc
pop
adc
stc
mov
xchg
push
lahf
dec
or
hlt
lods
jb
sub
xor
mov
push
(bad)
repz
fmul
popa
pop
sbb
mov
loope
xchg
push
(bad)
cld
xchg
cmp
mov
addr16
es
mov
push
mov
fmul
mov
mov
in
call
mov
aas
pushf
leave
sbb
pusha
std
sbb
push
hlt
pop
push
sub
xor
xor
fs
imul
mov
xchg
ds
mov
push
pop
stc
repz
ret
add
lock
arpl
mov
sbb
jge
dec
jno
dec
adc
push
test
mov
call
cmp
jp
dec
test
enter
outs
xor
xchg
sub
jle
or
stos
aaa
hlt
pop
leave
or
in
inc
call
test
cmp
and
jle
mov
sbb
fmulp
stos
mov
in
jb
and
inc
out
out
int
mov
out
rcpps
popf
jle
sub
add
movs
mov
pop
test
jnp
pop
sbb
dec
cli
jp
mov
xchg
jmp
imul
mov
dec
test
adc
sbb
lock
adc
pextrw
push
sub
xchg
mov
inc
shl
sbb
inc
mov
fldenv
dec
dec
pop
outs
xchg
mov
cmp
adc
ret
in
jl
cmp
retf
mov
xchg
aas
leave
popf
test
mov
mov
inc
pop
(bad)
jo
push
stos
push
jno
mov
and
or
push
fwait
pop
ja
lds
pop
ret
mov
mov
popf
hlt
arpl
xchg
mov
(bad)
aam
in
cmp
xlat
mov
shl
in
push
push
int
es
outs
out
xlat
xchg
test
jnp
mov
outs
xor
in
mov
cld
fcmovnu
push
pop
pop
imul
sbb
xchg
inc
push
out
(bad)
jmp
xchg
jbe
test
dec
lods
cmps
lock
xchg
aad
sbb
out
dec
mov
(bad)
fisttp
bound
in
or
jl
pop
mov
adc
xlat
jbe
lods
mov
pop
sub
mov
mov
lea
mov
shl
mov
pop
dec
sbb
cmp
ins
jecxz
mov
xchg
push
add
and
ins
xchg
scas
je
mov
dec
inc
lds
or
dec
mov
inc
aad
shr
xor
mov
mov
mov
ins
addr16
add
in
xchg
push
mov
idiv
lods
inc
or
inc
mov
mov
push
xchg
test
in
jg
dec
push
call
outs
push
mov
(bad)
push
shr
hlt
cmp
add
jge
inc
cli
sub
mov
jbe
out
test
fdivr
das
int
fwait
int3
pop
mov
cmp
sar
xchg
sub
jae
mov
ins
pop
sbb
adc
xor
cmp
ins
loope
mov
out
enter
pop
pop
(bad)
popa
(bad)
mov
arpl
mov
sub
cli
imul
lods
xor
outs
sbb
mov
mul
xor
cmp
stc
es
ror
sbb
jb
and
rol
and
inc
cmp
pop
fist
mov
pop
cmp
jbe
(bad)
cli
fimul
mov
add
jne
jae
jecxz
xchg
fs
pop
rcr
jae
jo
movs
sar
jo
push
stos
daa
pop
push
push
sub
cmp
ret
aas
bound
sbb
mov
xor
pop
dec
(bad)
shufps
test
xor
ret
enter
stos
mov
sub
xor
in
shl
(bad)
aam
push
lods
(bad)
jo
sbb
dec
adc
test
inc
mov
loope
in
icebp
aad
and
or
rcr
push
mov
es
jns
arpl
pop
sbb
or
jmp
sub
xchg
pusha
into
fwait
mov
ja
xor
xor
push
out
pusha
arpl
clc
jno
mov
push
inc
iret
outs
mov
cmps
out
jnp
jecxz
inc
inc
xchg
or
aas
test
iret
fsub
mul
mov
(bad)
jecxz
in
pop
sbb
xchg
daa
and
mov
mov
dec
stos
in
fbld
mov
fcom
xchg
cmp
cmp
pop
dec
jne
lods
cmc
clc
sub
pop
int
sbb
into
push
(bad)
int
push
xchg
sub
fstp
inc
(bad)
outs
dec
adc
js
retf
push
div
or
test
bound
shl
jmp
mov
scas
mov
sub
stos
inc
mov
mov
adc
cdq
dec
adc
pop
inc
push
mov
movs
mov
and
in
mov
xor
jmp
sbb
mov
ja
or
mov
idiv
push
jl
(bad)
jg
pop
gs
popf
in
or
jle
retf
or
nop
aam
mov
mov
push
adc
cmp
sub
ficomp
jnp
jmp
and
daa
fdivr
sbb
push
add
aaa
jae
je
aas
mov
mov
dec
pushf
ret
dec
or
mov
dec
call
bound
jno
(bad)
fistp
fucom
data16
out
sbb
xchg
shl
push
cmps
scas
nop
fnsave
in
test
mov
jmp
mov
xchg
sbb
fild
je
test
mov
ja
dec
push
cmps
sbb
les
mov
sub
xchg
sub
mov
pop
inc
call
mov
push
in
jg
fmul
out
adc
aad
xchg
sub
sub
push
idiv
jbe
push
ins
arpl
out
movs
sbb
and
in
dec
rol
sub
jae
stos
call
jne
sub
or
test
push
nop
jg
mov
out
dec
sbb
or
lods
xor
xor
xor
xor
cli
jmp
xor
or
fstp
pop
xor
daa
cmp
add
lahf
leave
xor
dec
ret
and
(bad)
cmp
dec
adc
mov
sbb
lds
idiv
(bad)
jg
mov
int
jl
add
jne
rcl
(bad)
mov
sti
cs
out
mov
(bad)
not
(bad)
nop
psrlw
jecxz
sahf
push
mov
ds
loop
stos
mov
sbb
dec
push
ret
fs
push
jnp
xor
xor
jmp
cmp
xor
call
ins
jmp
jp
out
or
xchg
jl
outs
popf
xor
or
push
fisttp
fwait
sbb
xor
pop
cmp
imul
xchg
add
adc
and
rcr
test
fild
loope
cld
jle
xchg
int
int
aas
and
sbb
loop
xchg
mov
ins
xchg
out
fmulp
mov
aaa
imul
dec
pusha
jmp
(bad)
jmp
mov
ins
out
mov
test
jp
arpl
je
and
push
ins
cmp
mov
pop
aas
or
pop
in
inc
mov
xor
into
sbb
cmps
cmps
clc
xor
(bad)
test
cs
pop
test
in
adc
repz
mov
retf
mov
ins
xor
sar
mov
jbe
dec
or
pop
imul
fxtract
(bad)
adc
jmp
ret
adc
bound
outs
js
stos
sub
cmps
in
or
mov
xchg
or
mov
push
mov
fsub
dec
add
dec
xchg
out
js
cmp
outs
or
mov
je
dec
xchg
jle
mov
dec
add
(bad)
push
push
xchg
mov
and
inc
sbb
stc
xchg
push
loop
xchg
mov
std
or
neg
movs
test
rcr
jne
lods
mov
lods
(bad)
aam
in
(bad)
ret
ficom
inc
test
or
add
js
rcr
mov
stos
mov
dec
int
outs
stos
lods
dec
hlt
xchg
int3
loop
cmp
pop
or
mov
xor
sub
fstp
add
call
jne
dec
imul
retf
cdq
or
inc
jmp
and
mov
je
xor
cmp
ds
imul
sub
mov
std
enter
imul
cmp
int3
out
mov
cmp
sub
push
jbe
sahf
rep
jl
jo
pop
push
mov
aad
out
inc
xor
vmulps
movs
mov
mov
xchg
retf
imul
stos
cmc
out
js
(bad)
movs
xchg
push
popa
fmul
jp
loope
push
adc
hlt
jns
dec
jno
repnz
jno
sbb
pushf
movq
jge
mov
sbb
stc
je
loopne
push
shl
add
shl
lea
xor
sti
sbb
in
movs
out
(bad)
cld
fadd
fcomi
stos
mov
fld
test
mov
fwait
mov
jge
push
aad
pop
add
sbb
or
repnz
cdq
in
add
dec
xlat
jl
fadd
adc
sub
xchg
push
out
add
loope
rol
dec
jne
mov
pop
push
lea
loope
push
shr
ja
and
out
cmp
repnz
(bad)
call
or
fsubr
jnp
inc
pop
popf
ins
inc
popf
cmp
add
sbb
aad
fisubr
jo
sub
in
js
(bad)
ret
mov
mov
daa
aas
pop
rcl
sti
dec
aam
cmp
call
aas
pop
scas
mov
jno
fs
imul
inc
adc
xor
mov
jge
add
out
fst
fld
jns
push
push
fmulp
fld
int3
dec
pushf
push
fist
xor
mov
cmp
fs
xchg
ins
cmps
cli
xchg
jp
sti
cdq
push
xor
stos
lods
call
outs
fidiv
add
das
push
lea
enter
iret
ins
cmp
adc
rol
ds
enter
mov
stc
loop
jno
or
(bad)
push
sub
bnd
dec
test
mov
pop
cld
jae
ffree
cli
mov
or
push
xor
lds
cs
cld
xchg
mov
jno
out
mov
call
addr16
mov
mov
hlt
mov
repnz
aas
fld
xor
stc
js
popa
test
pop
retf
outs
add
push
xchg
int
dec
and
in
ror
pop
cmp
mov
movs
ret
pushf
mov
in
loop
dec
jae
aam
cwde
inc
aam
lock
push
sub
push
fldenv
and
sub
jp
(bad)
jmp
pop
cmovae
pop
nop
fisttp
pop
pop
push
enter
ror
in
push
mov
dec
cmp
jl
call
mov
iret
jge
imul
in
nop
sbb
int
push
imul
out
sbb
sbb
call
lock
xor
adc
cmc
push
test
add
push
adc
mov
jmp
in
cmp
js
(bad)
int
je
sahf
cmp
mov
scas
ins
push
shl
fnsetpm(287
mov
js
mov
inc
mov
push
in
out
pop
(bad)
pushf
dec
or
ret
bound
and
je
add
sahf
or
je
pop
scas
push
fsubr
icebp
cwde
mov
(bad)
test
or
cmp
int
adc
and
sti
pop
adc
and
retf
mov
sahf
ss
movs
in
inc
dec
rcl
ret
and
adc
leave
and
mov
popa
jmp
test
xchg
inc
test
and
push
popa
jae
adc
inc
xlat
sub
mov
and
mov
scas
pushf
fs
mov
dec
xchg
inc
cmp
fwait
cmp
in
cmp
mov
jb
mov
pop
shl
aas
adc
int3
pop
and
fiadd
jnp
cmp
in
push
xchg
mov
jmp
(bad)
iret
into
stc
sbb
or
fnstcw
xchg
lea
pop
je
or
jle
fwait
mov
mov
add
int3
lea
dec
mov
mov
add
adc
xor
jnp
xchg
cdq
nop
and
loopne
retf
mov
mov
inc
ror
mov
xchg
or
shr
xchg
inc
adc
jge
ds
out
stc
clc
popa
push
xor
cmp
gs
jecxz
adc
int3
mov
out
and
or
xor
(bad)
enter
mov
rcl
jmp
test
add
jae
loope
out
inc
mov
mov
xchg
inc
lods
cmp
scas
daa
xor
stc
dec
sar
call
cmp
fisttp
popf
and
inc
cs
push
push
fcmovnb
popf
push
mov
cmp
sub
pop
dec
retf
mov
adc
xchg
aam
jmp
in
test
sar
ret
inc
xchg
ins
xor
fcmovb
inc
mov
or
stos
(bad)
jne
jnp
cmc
jne
add
add
xor
sahf
(bad)
iret
into
jo
push
adc
push
out
push
call
dec
or
icebp
or
adc
and
push
(bad)
jbe
adc
add
js
aam
sbb
sbb
data16
stc
pop
cmp
daa
and
jmp
mov
imul
pop
and
dec
mov
dec
xor
pop
push
push
or
and
idiv
out
xor
ret
movs
cmp
mov
add
inc
inc
jecxz
adc
xor
push
sub
push
scas
dec
test
dec
inc
add
xchg
pushf
fnstcw
mov
loop
rcl
sar
mov
xor
jmp
ficom
fwait
pop
popf
jns
mov
retf
(bad)
push
pop
lods
and
inc
push
xchg
xchg
jp
add
ins
stc
cwde
xchg
mov
xor
cwde
int3
adc
pop
jge
and
lods
jmp
mov
sbb
icebp
aaa
pop
or
add
and
scas
jp
sbb
dec
outs
add
jp
sar
jmp
xor
cs
jle
(bad)
scas
and
aaa
add
not
out
cmp
push
xor
addr16
pop
push
xor
push
icebp
mov
push
sbb
mov
ja
cmps
dec
mov
jbe
xor
push
out
cmp
dec
call
stc
addr16
data16
outs
mov
(bad)
mul
inc
sbb
fcmove
mov
add
int3
adc
mov
inc
sbb
jb
sbb
fisub
call
out
mov
mov
cs
inc
push
das
sbb
mov
fld
adc
mov
cwde
or
ins
(bad)
retf
popa
loopne
div
and
fiadd
aas
(bad)
dec
adc
jae
inc
repnz
jmp
test
outs
(bad)
daa
scas
mov
int
pop
pop
cmp
aad
xchg
or
out
jecxz
push
inc
pop
mov
and
xlat
retf
ins
int
mov
scas
xor
cmps
cmps
out
in
mov
jns
or
xor
mov
add
adc
jle
in
imul
mov
ficom
stos
cmps
dec
sahf
add
scas
movs
cli
rcr
sub
stos
in
enter
int
rcl
cs
lods
mov
daa
or
cwde
aaa
and
xchg
mov
loop
test
inc
shl
cmc
push
push
add
popa
mov
fild
or
adc
sub
inc
in
(bad)
push
push
imul
mov
lock
xchg
aam
ss
repz
dec
pop
loop
psubd
inc
mov
mov
(bad)
repnz
mov
sub
dec
and
nop
call
ret
test
push
pop
sub
sub
mov
ins
mov
xchg
sbb
mov
jle
and
popf
scas
clc
sbb
adc
data16
stc
add
or
out
adc
pop
mov
push
lds
jle
xlat
iret
pop
rcr
xlat
test
push
out
(bad)
pop
shl
out
mov
test
fwait
jl
popa
mov
and
pop
mul
in
or
cli
dec
inc
mov
stc
jbe
loope
xlat
dec
jnp
pusha
sub
push
ret
push
mov
ins
clc
gs
jge
jp
jp
hlt
mov
cmp
aas
arpl
xchg
push
test
push
push
lds
push
mov
push
push
imul
inc
mov
add
mov
shl
popa
loop
lods
scas
pushf
pushf
jbe
xlat
push
cmc
js
mov
push
and
sub
add
rol
dec
ss
(bad)
hlt
cmps
jnp
shl
test
push
adc
out
or
sbb
sub
fs
test
daa
cli
mov
loope
shr
hlt
fwait
xor
mov
mov
scas
iret
sub
rcr
pxor
add
cmp
and
mov
pusha
jb
adc
adc
and
lods
aas
xchg
(bad)
jnp
pusha
push
cld
loope
push
sbb
(bad)
adc
mov
sbb
add
int
jmp
outs
fcmovnbe
out
nop
inc
stos
ret
sub
push
mov
bound
into
ja
mov
pop
push
add
sub
dec
add
in
xor
lock
xor
and
jge
fwait
mov
inc
cmp
sbb
xchg
(bad)
add
call
fst
xchg
mov
retf
jno
rcl
jge
retf
inc
icebp
xchg
or
cli
xor
and
mov
push
xchg
imul
jns
cmp
sbb
lahf
jg
pop
ret
ja
and
jns
aas
test
jae
out
icebp
and
xchg
cwde
add
mov
aas
jno
not
mov
cmp
les
retf
lahf
ds
outs
mov
fwait
xor
jg
xchg
push
mov
cli
in
push
ror
xchg
movs
aam
xlat
adc
aam
lea
adc
out
hlt
pop
mov
mov
adc
jb
bnd
fs
inc
retf
shl
sbb
pop
pop
daa
enter
test
jno
adc
jb
mov
in
pop
mov
sbb
clc
scas
xchg
pushf
dec
loop
mov
xchg
add
add
outs
arpl
pushf
jno
les
retf
pop
add
xchg
jp
cmp
ins
push
mov
(bad)
sbb
in
pop
mov
jge
test
mov
sti
dec
jecxz
mov
cmp
das
dec
jge
dec
xor
sub
fs
sub
iret
ret
scas
adc
out
and
inc
(bad)
hlt
sub
mov
lock
mov
test
push
xchg
mov
mov
fmul
pushf
sub
jae
adc
sub
sbb
pop
repz
dec
adc
pop
sbb
cmps
psraw
(bad)
dec
xchg
cmc
test
mov
push
ds
push
mov
ins
mov
push
retf
xchg
pop
(bad)
movs
aad
mov
ins
rcl
xor
mov
nop
sub
das
fld
cmp
sbb
pusha
sub
shl
aas
jmp
mov
mov
dec
cmp
add
sbb
ds
adc
fisubr
xchg
clc
(bad)
adc
(bad)
les
inc
mov
int3
pmulhw
je
dec
push
pop
repnz
retf
dec
ret
shl
pop
pop
mov
xor
stos
xor
es
sub
lods
mov
outs
jmp
jmp
neg
jmp
sub
dec
sub
scas
outs
daa
dec
jecxz
fbld
aam
frstpm(287
sbb
aas
pop
test
cmc
add
dec
enter
mov
loopne
xor
cmp
push
jno
xor
out
xchg
jae
cmps
adc
adc
dec
mul
cmp
lock
jg
les
iret
call
inc
inc
bnd
and
cmps
mov
mov
jl
outs
push
jnp
or
rcr
xor
pop
add
(bad)
jmp
or
inc
inc
retf
mov
int
inc
pop
cld
inc
inc
cmps
jnp
fwait
aam
push
mov
sahf
fwait
pop
xlat
cmc
cmp
jno
btc
leave
cmc
inc
rol
loop
push
or
cmp
lods
mov
je
or
stc
mov
push
aad
or
popa
fsubr
inc
pop
inc
stos
int3
into
frstor
imul
test
sbb
fimul
fmul
pop
xor
out
xor
lds
pop
gs
ss
pusha
aaa
or
adc
adc
pop
jns
clc
lods
add
loope
iret
xor
and
test
in
in
adc
xor
xor
sti
arpl
jmp
sbb
test
jl
dec
mov
jmp
sub
ins
enter
loopne
jle
jge
sub
push
clc
fsubrp
cld
dec
(bad)
mov
movs
pop
outs
xor
and
shl
es
ins
jmp
aas
add
pop
jg
(bad)
mov
add
inc
xchg
sbb
cmp
cmp
ins
iret
adc
div
jmp
jmp
loop
xchg
cld
mov
in
sub
dec
sbb
push
repz
(bad)
cmp
retf
cmp
das
jp
lds
imul
sbb
pop
inc
ret
xor
loop
xchg
(bad)
mov
data16
rcr
(bad)
loopne
pop
test
jo
xchg
adc
pop
fld
cwde
in
mov
push
mov
je
into
mov
stos
ror
test
scas
call
jae
sti
ds
inc
xchg
mov
outs
mov
popa
jmp
call
mov
leave
(bad)
xlat
fwait
dec
(bad)
in
stc
ds
(bad)
es
inc
arpl
xchg
ins
jmp
div
add
ss
pop
das
jp
and
sti
pushf
ins
xor
sar
retf
or
or
push
stos
sbb
repnz
pop
cmc
mov
cs
jno
int
push
cwde
das
jg
jbe
pop
add
ja
(bad)
mov
lds
inc
xchg
sub
and
scas
shl
pop
movs
pop
mov
jge
pop
or
add
fimul
pop
mov
sti
jns
push
hlt
call
movs
ds
sbb
xlat
mov
bound
add
lahf
loope
jne
loopne
ds
test
sub
push
xor
add
imul
add
inc
or
xor
push
adc
jg
and
jns
cdq
loope
loope
fsub
loopne
outs
sub
lock
jl
cdq
cmp
in
aaa
in
mov
push
xchg
sub
dec
adc
dec
sbb
xor
arpl
sti
ss
call
push
retfw
xor
bound
or
rcl
movs
mov
mov
mov
cmp
scas
pop
sbb
movs
pusha
jmp
mov
sub
fcom
pop
aaa
adc
mov
push
bound
xor
imul
mov
int3
inc
loope
rcl
pop
fistp
mov
mov
jbe
or
adc
pop
retf
in
push
inc
mov
jno
jb
mov
mov
push
push
sbb
test
push
jnp
xchg
lahf
pop
movs
movs
sbb
inc
mov
push
cmp
inc
dec
pop
movs
in
ror
daa
fisubr
push
fcom
cld
fwait
or
xchg
add
pop
ins
mov
(bad)
fwait
push
jae
outs
and
mov
lds
mov
in
xor
enter
xor
pop
stos
sbb
fsub
sub
fs
jg
jp
mov
lahf
jmp
ss
pop
mov
jmp
mov
dec
xor
leave
cmc
rcl
dec
in
fsubr
fwait
retf
pop
xor
pop
xor
test
and
cmp
ret
mov
jbe
xor
out
into
int3
stc
aam
mov
aaa
and
cmps
cmp
int
aas
inc
or
outs
bound
push
adc
lods
pop
aad
mov
and
xor
inc
xor
jmp
inc
fadd
or
sbb
gs
push
stc
(bad)
mov
adc
jp
add
jb
sbb
dec
outs
aaa
pusha
test
aaa
ja
jge
test
es
sbb
iret
sbb
jb
xchg
jmp
push
lea
dec
lds
or
mov
ss
repnz
mov
lds
(bad)
mov
jg
cmp
loop
dec
retf
sbb
pop
dec
jl
xchg
fild
pop
jo
aas
and
pop
cli
dec
ins
not
mov
sbb
xlat
shr
jne
sar
adc
lahf
out
add
int3
jnp
jecxz
jmp
and
jne
cli
es
mov
xor
std
ja
mov
adc
in
(bad)
mov
fcomp
in
retf
ja
pusha
adc
repz
jno
(bad)
sbb
and
sbb
cmp
imul
in
xchg
dec
pop
jns
xchg
test
add
(bad)
adc
enter
dec
push
(bad)
mov
mov
sbb
dec
inc
dec
push
loopne
mov
jmp
(bad)
cli
retf
mov
out
sbb
movs
xchg
inc
xchg
fmul
jle
shl
sbb
adc
test
loop
adc
je
xchg
ja
imul
lock
daa
dec
lds
je
aad
xchg
scas
push
outs
gs
aaa
jge
cmc
neg
ror
cmps
xchg
fs
int
cli
xchg
mov
xor
aaa
and
imul
fiadd
and
jmp
cwde
mov
inc
mov
inc
pop
dec
sbb
cmps
sub
xchg
and
and
or
pop
push
call
xchg
daa
adc
add
mov
inc
inc
sub
leave
jmp
movsx
jno
in
push
les
popa
pop
sub
seto
imul
inc
test
xchg
std
mov
fdiv
cmc
adc
(bad)
pop
mov
cmp
and
(bad)
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
add
jmp
push
jb
add
add
dec
inc
scas
inc
pusha
or
or
add
add
mov
movs
ds
fndisi(8087
fwait
xchg
aam
imul
push
mov
and
gs
nop
mov
aaa
cld
mov
test
loop
int
fiadd
mov
lea
shl
jp
cmp
dec
and
sub
and
sbb
jae
xchg
movlps
out
aaa
cld
mov
test
loop
int
fiadd
mov
lea
shl
jp
adc
cmc
and
and
adc
sahf
add
cwde
xchg
mov
xchg
(bad)
jo
shl
fisub
in
test
fcomi
stos
fxch
ja
cmps
jbe
pop
pop
mov
push
retf
push
and
add
or
retf
sbb
out
xchg
(bad)
mov
cmc
mov
mov
add
fsubrp
mov
and
or
pop
dec
mov
in
mov
ret
out
cld
(bad)
rcl
loopne
inc
inc
(bad)
rol
inc
fistp
das
popf
push
out
or
hlt
out
mov
sub
xlat
clc
lea
ror
in
mov
rcr
jle
xor
dec
sub
das
ins
retf
mov
dec
mov
cmp
xchg
pop
mov
test
ror
mov
dec
pop
fsubrp
sbb
mov
sub
test
jae
call
or
rcl
outs
sub
lods
mov
std
sar
and
(bad)
mov
enter
and
and
mov
sti
dec
mov
retf
cmp
ror
loope
out
inc
push
mov
push
inc
and
pushf
or
cmp
pop
and
add
and
nop
repnz
movntq
inc
movs
ret
rcr
xor
call
je
fs
data16
arpl
les
das
enter
inc
and
pushf
or
cmp
pop
and
add
and
nop
repnz
movntq
inc
movs
ret
rcr
mov
add
sub
jae
dec
and
aas
or
and
sub
ss
into
mov
adc
cmc
ins
lahf
inc
cmp
repnz
test
dec
test
test
cmp
dec
mov
outs
mov
mov
ja
ins
sub
cmps
es
(bad)
cmp
adc
mov
xchg
aas
jae
aad
shl
pop
dec
out
lods
adc
(bad)
push
jmp
dec
xchg
fnstsw
xchg
xor
xchg
ret
adc
mov
and
mov
popa
stc
jno
push
sahf
loope
pop
leave
pop
pop
cdq
movs
or
ins
add
xchg
xchg
lea
mov
je
repz
out
dec
jl
add
inc
ins
adc
inc
popf
loopne
retf
call
(bad)
cmps
int3
mov
sbb
sbb
pop
push
and
jbe
xchg
fild
cmc
jg
dec
add
(bad)
loope
and
sahf
adc
ret
adc
pop
add
out
adc
xor
ja
movs
repnz
retf
xlat
jle
sbb
fadd
mov
mov
jge
pop
mov
outs
and
xchg
clc
push
inc
pop
call
retf
push
les
cmc
pop
ret
repnz
xchg
arpl
add
push
dec
mov
jb
fcomp
push
jns
pop
or
lea
pop
cmp
xchg
sub
push
pop
xor
inc
les
jle
je
jns
aaa
pop
retf
pop
test
aad
sbb
mov
xlat
jmp
add
and
mov
lahf
and
cmp
pop
js
and
mov
popa
mov
and
pop
rcr
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
add
imul
add
add
add
add
add
add
add
adc
add
or
add
add
add
xor
add
and
add
inc
add
add
inc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
adc
add
and
add
adc
add
add
add
add
pusha
cs
jb
add
add
add
add
add
add
add
inc
add
inc
cs
ins
outs
arpl
add
add
add
add
add
add
sbb
add
add
add
add
xor
add
add
add
add
add
add
add
add
or
add
sbb
add
jo
add
loop
sub
add
or
sub
add
push
add
sub
add
add
sub
and
jmp
push
add
or
pop
add
or
mov
add
or
pop
adc
and
add
sbb
add
add
add
sbb
add
add
add
add
adc
add
add
add
or
add
add
add
pop
outs
sbb
add
add
sbb
add
or
or
sub
pop
outs
sbb
push
sub
add
adc
add
add
add
and
or
add
add
add
pop
jae
add
or
add
sbb
add
sub
add
add
add
jle
add
add
add
add
add
add
pop
add
or
pop
add
push
add
push
or
or
sub
pop
outs
sbb
push
sub
add
add
add
adc
or
add
add
xor
add
add
add
add
adc
pop
jae
add
or
add
pop
sub
add
push
or
or
sub
pop
outs
sbb
push
sub
add
add
add
or
or
add
add
add
jp
sub
add
add
add
or
jnp
add
add
sbb
add
and
add
sub
adc
add
dec
add
add
add
add
sub
add
or
and
add
inc
and
add
jae
add
or
and
add
add
sub
pop
js
jae
add
or
daa
add
or
jb
add
jo
sub
add
add
add
jo
sub
add
add
sub
add
or
xor
add
add
add
sub
add
sub
add
sub
add
push
jb
add
jo
add
add
sub
add
outs
sub
add
or
jle
add
add
sbb
add
add
push
add
sub
jle
add
add
push
add
das
add
or
push
jae
add
push
sub
add
or
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
sbb
add
rol
add
and
jb
outs
addr16
add
add
or
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
push
add
add
push
add
dec
add
sbb
add
push
add
xchg
add
add
add
add
add
add
add
add
add
add
cs
xchg
add
add
add
add
cdq
push
push
add
add
add
add
add
push
push
add
add
add
push
pop
add
add
add
add
add
add
add
add
dec
add
ins
add
add
xchg
add
add
add
add
add
add
ins
add
add
pop
add
add
stos
add
add
add
pop
add
add
push
dec
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
in
adc
xchg
add
add
add
add
pop
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
jne
cmp
add
add
add
add
add
add
add
or
add
adc
fadd
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
or
adc
add
xchg
push
rol
push
add
rol
add
and
aad
adc
dec
add
add
add
fld
adc
ret
add
add
add
add
add
add
xchg
inc
add
add
add
add
add
xchg
add
add
clc
and
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
or
push
add
add
add
add
xchg
or
sbb
or
push
and
add
add
add
add
add
add
xchg
inc
add
add
add
add
xchg
sbb
add
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
pop
add
add
xchg
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
adc
push
add
add
add
add
pusha
add
add
add
add
add
add
cmp
xor
test
dec
add
add
add
add
add
add
add
add
add
mov
adc
push
push
add
inc
add
cli
add
rol
lea
imul
jns
lea
xchg
add
cmp
adc
dec
add
add
addr16
adc
add
add
add
push
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
jo
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
lds
add
adc
add
pop
add
bound
jb
add
add
add
add
add
add
add
sub
add
aaa
push
xor
add
or
add
add
or
add
add
add
add
xor
add
add
add
add
jne
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
inc
outs
jb
xor
cmp
inc
inc
inc
inc
inc
aaa
xor
xor
cmp
ss
xor
inc
cmp
cmp
xor
inc
inc
inc
inc
inc
inc
inc
xor
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
dec
outs
fs
gs
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
add
inc
add
jp
inc
add
jae
gs
cs
dec
add
jns
add
popa
add
arpl
ins
imul
fs
gs
dec
popa
outs
popa
gs
outs
arpl
outs
outs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
jns
je
push
je
gs
ins
dec
outs
fs
imul
ins
add
outs
je
ins
gs
imul
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
dec
popa
ins
add
ins
jne
push
jns
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
jo
imul
push
gs
imul
add
jo
jae
add
imul
jae
bound
je
je
add
imul
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
popa
inc
jns
add
ins
jne
add
inc
cs
add
je
inc
ins
imul
add
add
jae
outs
jae
outs
add
jae
gs
cs
jb
ja
outs
add
jne
push
ins
inc
ins
outs
arpl
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
imul
je
outs
ins
add
jns
je
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
outs
addr16
ins
add
jae
gs
add
ins
ins
gs
imul
imul
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
jne
arpl
popa
outs
add
imul
dec
outs
arpl
imul
je
ins
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jae
gs
cs
gs
arpl
outs
add
ins
je
jb
dec
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
inc
outs
outs
je
imul
je
jb
arpl
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
push
jns
je
ins
cs
imul
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
inc
cs
outs
jb
xor
jb
jae
jne
arpl
add
inc
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
inc
arpl
push
jb
jo
jb
imul
gs
push
gs
imul
jae
gs
cs
imul
inc
outs
jb
jae
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
jne
je
ins
gs
gs
jo
jb
add
ins
jo
outs
outs
je
add
push
arpl
gs
inc
gs
jne
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
push
outs
imul
jo
outs
fs
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
je
push
gs
add
imul
inc
jb
popa
jns
push
outs
inc
jb
popa
jns
dec
gs
push
jns
je
ins
cs
arpl
imul
je
addr16
jo
jns
addr16
inc
jae
gs
bound
jae
je
dec
jo
arpl
jns
add
or
outs
add
ins
add
add
xor
add
inc
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
add
xlat
arpl
inc
mov
cld
es
add
add
or
and
add
adc
add
push
add
add
add
push
add
jno
and
add
or
push
and
add
add
adc
add
and
add
and
sbb
add
sbb
push
pop
add
and
adc
add
add
and
add
add
or
push
and
add
sub
xor
xor
mov
and
adc
add
adc
adc
or
xor
mov
mov
pop
jg
aad
cmp
push
adc
push
sbb
inc
add
adc
push
adc
push
adc
push
adc
add
add
add
sbb
add
add
push
adc
dec
push
add
sbb
add
sbb
add
imul
add
add
ins
add
add
adc
or
adc
or
adc
or
adc
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
add
or
add
arpl
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
xor
cmp
xor
sub
sub
sub
cmp
bound
arpl
add
or
add
xor
xor
xor
xor
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
xor
add
and
add
xor
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
or
xchg
jno
lods
(bad)
call
add
add
add
add
add
sbb
add
push
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
nop
inc
add
cld
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
pop
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
ins
add
add
je
jae
add
add
add
and
add
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
xor
add
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
arpl
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
add
inc
add
add
js
add
add
add
adc
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
inc
add
arpl
inc
add
add
js
add
add
add
add
add
outs
add
add
je
dec
add
ins
add
add
add
inc
add
arpl
inc
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
out
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
popa
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
add
add
add
or
add
loopne
add
sub
mov
xchg
adc
push
stos
sbb
cmp
or
and
jp
pop
fst
add
loop
stc
mov
pop
jns
dec
adc
in
dec
jmp
or
loopne
push
loopne
fcom
fucomp
cmp
mov
mov
pop
push
in
sbb
les
mov
dec
lods
xor
add
xchg
cmp
ror
mov
mov
retf
jb
jbe
sbb
aam
and
dec
fldenv
(bad)
mov
pop
and
jbe
imul
es
cmp
mov
lock
cwde
mov
inc
shl
inc
cdq
or
xlat
xchg
jl
jmp
leave
dec
mov
jg
xchg
aad
mov
mov
imul
fs
xchg
sub
arpl
xor
dec
push
cmp
out
out
aas
pop
aas
lods
(bad)
push
lods
ds
sbb
div
add
jge
nop
push
out
xchg
sub
test
test
enter
mov
jmp
icebp
pop
outs
fld
mov
jmp
(bad)
popf
jp
imul
jb
xor
jg
push
pusha
jle
cdq
jo
mov
jmp
pop
sti
inc
ret
test
push
inc
in
xchg
dec
sub
inc
test
sub
out
and
jb
lds
adc
outs
(bad)
mov
mov
bnd
push
pusha
cmps
rcr
inc
add
(bad)
jnp
mov
xlat
jmp
cwde
out
outs
call
or
fdiv
dec
or
adc
aam
and
inc
mov
jecxz
mov
(bad)
gs
mov
rcl
outs
pushf
fimul
mov
cmp
xchg
xor
xor
rcl
mov
sbb
shr
xchg
sub
je
mov
shr
cmps
imul
popa
fwait
punpcklwd
sub
cmp
inc
xor
and
xor
sti
jmp
push
add
ins
lea
sbb
xchg
cmp
mov
mov
fisub
add
mov
dec
popa
(bad)
jne
xlat
leave
mov
add
jae
add
adc
iret
mov
loope
sub
sub
ins
loop
mov
push
or
mov
pop
mov
mov
fld
in
xchg
loop
xor
mov
cwde
dec
add
push
cmps
adc
sub
nop
mov
pop
in
xor
mov
cmp
fmulp
cmp
data16
mov
sub
pusha
sub
in
pop
dec
inc
lock
mov
in
je
in
les
cmp
fcmovb
verw
leave
add
popf
push
cmp
sbb
gs
outs
mov
mov
out
cmp
scas
imul
pushf
inc
pop
(bad)
js
or
retf
fwait
xchg
lods
pop
dec
sbb
jmp
imul
rcl
pop
mov
dec
push
push
jne
shl
mov
jecxz
jle
out
inc
push
push
add
imul
dec
jmp
out
or
out
repnz
mov
inc
sbb
mov
jne
and
ja
mov
xchg
xor
cmp
pop
jmp
pop
mul
loop
add
(bad)
aaa
sbb
jbe
fisubr
push
xchg
mov
fwait
fwait
xor
iret
xor
mov
sbb
pusha
aas
sbb
pusha
mov
mov
mov
cli
retf
ja
outs
das
in
pop
xor
retf
das
pop
out
dec
lahf
adc
scas
inc
push
push
and
dec
sub
out
cmp
pop
cld
push
sar
bound
out
test
add
mov
mov
les
bound
adc
inc
sub
cmp
jecxz
(bad)
pop
xor
movs
push
mov
scas
daa
fist
or
rcl
cmps
lods
mov
and
int3
mov
in
cmovno
mov
cs
xor
int
adc
cmp
call
jge
(bad)
adc
bound
stos
cmp
mov
std
aad
loope
push
dec
pusha
retf
inc
xor
div
mov
xchg
cwde
ret
je
stos
or
aaa
mov
repnz
ret
ja
jge
mov
cmp
push
lods
xor
cmp
mov
es
pop
add
adc
dec
js
popa
push
enter
icebp
pushf
ins
es
in
ss
push
sbb
adc
push
in
inc
data16
xchg
outs
cmp
jns
neg
shl
xor
push
je
mov
repnz
in
test
scas
cld
dec
push
add
mov
push
retf
mov
xor
ins
jo
xor
ja
in
popa
jp
pop
mov
mov
ins
sub
inc
or
pop
push
inc
push
adc
push
aam
pop
in
jb
mov
les
push
push
dec
mov
cld
mov
pop
pop
jmp
(bad)
mov
cld
mov
test
ret
xor
ret
pop
aaa
loopne
pop
pop
(bad)
(bad)
js
out
jb
or
retf
out
loopne
fs
scas
adc
xchg
popa
mul
jle
xchg
add
inc
mov
cmp
out
lea
sbb
imul
(bad)
push
test
push
lock
in
xchg
sub
or
sahf
and
int
repnz
xchg
jmp
mov
bound
and
cmps
lds
sbb
dec
mov
mov
jge
jo
xchg
add
scas
neg
repz
call
out
inc
xor
cmp
add
scas
adc
mov
push
scas
jno
sub
in
rcl
xor
je
mov
and
jg
or
ror
push
xchg
cmp
cmps
adc
mov
pop
sbb
inc
xchg
sub
sbb
pusha
pop
(bad)
and
mov
jnp
clc
inc
imul
mov
dec
jne
mov
jl
or
mov
dec
test
lock
sbb
pop
sbb
cmp
fimul
and
push
xor
out
fld
cdq
cmp
int3
mov
adc
rcr
loope
pushf
jb
push
aaa
das
cwde
pop
aam
sbb
mov
jb
mov
xchg
dec
adc
lds
push
push
pop
rol
mov
sbb
inc
neg
ins
and
mov
dec
push
mov
jne
add
lea
lahf
std
mov
jae
pop
mov
push
repz
mov
fisub
add
leave
fnstenv
and
cld
sub
in
rcl
dec
sbb
fcom
(bad)
cmp
xchg
xchg
dec
push
je
jmp
pop
stos
scas
lods
mov
in
inc
sbb
xor
not
mov
push
inc
in
inc
sub
push
jmp
mov
lods
test
popf
pop
mov
fmul
int
jmp
sub
adc
pop
dec
xchg
ds
jmp
adc
loop
mov
inc
fistp
pop
add
out
ja
mov
jp
rcl
xchg
push
mov
enter
and
pop
and
ret
mov
cmps
fst
out
mov
and
mov
inc
jge
ror
push
mov
jmp
mov
int
(bad)
lock
add
aaa
sbb
push
xor
cmps
pop
addr16
gs
cmps
xchg
jl
xchg
ja
cs
mov
leave
jg
push
push
movs
shl
dec
jb
cmp
jl
pop
loop
call
mov
adc
push
(bad)
call
(bad)
pop
lds
fld
sub
jmp
adc
add
push
or
sub
dec
movs
fcomp
jmp
push
or
push
aam
cmps
xchg
mov
sbb
sti
scas
or
ins
xchg
les
popa
cld
stos
retf
dec
mov
push
sbb
arpl
stos
adc
mov
frndint
mov
int3
inc
neg
mov
push
dec
push
sbb
mov
es
jnp
pop
or
cmp
sbb
mov
sub
in
mov
mov
adc
lock
xlat
cmp
or
popa
push
ret
adc
add
sub
test
out
nop
jg
xor
push
inc
pop
xor
mov
arpl
adc
jp
call
aam
ret
mov
movs
sub
loop
sub
es
cmp
cmp
retf
lods
ds
out
jl
mov
add
retf
gs
sar
xchg
mov
pop
cli
mov
push
out
in
fadd
call
outs
cmp
add
jbe
aas
mov
xchg
mov
pop
sahf
mov
ins
dec
repnz
mov
std
sti
or
cdq
sbb
dec
cdq
add
ds
mov
jne
loopne
and
jg
(bad)
inc
jle
inc
scas
movs
lds
and
cdq
adc
cmps
stc
rcl
and
sbb
sub
pop
push
fwait
mov
shl
xor
adc
sbb
(bad)
in
mov
mov
adc
gs
not
(bad)
adc
xchg
dec
mov
repnz
xchg
xor
adc
scas
sbb
cmp
xchg
pop
push
stc
pop
add
xchg
jnp
call
je
mov
(bad)
fdivr
jae
cmc
jmp
push
outs
xor
jb
fimul
mov
daa
int3
loop
xchg
inc
lods
sbb
pop
xchg
cdq
mov
jno
bnd
mov
jbe
dec
imul
or
cmp
xor
mov
pop
xchg
mov
shl
inc
pusha
neg
cld
cmp
outs
mov
jle
dec
call
les
in
dec
or
movs
pop
ss
stos
adc
in
jle
(bad)
bound
clc
das
inc
test
cmp
pop
cmp
icebp
mov
mov
pop
push
and
push
cmps
push
shl
inc
clc
cmp
sub
lods
jno
mov
dec
fisttp
rcl
mov
aad
jnp
lods
mov
jae
out
xchg
outs
mov
aas
outs
jbe
arpl
add
test
in
xlat
mov
adc
mov
cli
cmp
rol
cmp
push
nop
lea
imul
imul
out
mov
xchg
leave
adc
sar
sub
fdiv
add
and
xor
sbb
mov
popf
pop
sub
xlat
and
xor
sub
pop
mov
add
cmps
stos
mov
test
in
xchg
fwait
int
fnstsw
aas
ins
pop
or
das
lock
jo
(bad)
jbe
mov
fldcw
cmp
sub
retf
xchg
dec
loop
inc
repnz
inc
aas
push
ret
popa
(bad)
outs
and
arpl
outs
(bad)
sub
fs
in
repnz
in
stos
setge
ror
jmp
cli
xor
sbb
or
pop
pop
mov
inc
outs
lods
mov
shl
addr16
in
nop
clc
pushf
(bad)
push
jle
jl
(bad)
(bad)
gs
test
in
rsqrtps
sub
jecxz
sub
add
and
aaa
rcl
add
mov
outs
push
inc
call
or
mov
inc
retf
jmp
cmps
pop
mov
and
xchg
pop
dec
adc
fs
repz
mov
iret
repz
mov
inc
not
adc
pop
mov
lahf
mov
or
repz
lods
bound
mov
sbb
sar
xchg
test
push
hlt
add
cmp
sub
cmp
sahf
(bad)
std
cmovg
fmul
xor
int3
shr
jl
out
leave
jb
cdq
test
mov
scas
inc
push
mov
xor
xchg
fwait
test
adc
inc
and
or
fild
iret
es
xchg
inc
mov
in
int
shl
inc
add
cmp
inc
jle
dec
(bad)
mov
add
and
je
mov
fisttp
fldcw
movs
xor
ret
jae
or
jb
sbb
mov
rcr
stos
xchg
ds
pop
fndisi(8087
dec
inc
push
sbb
mov
adc
mov
ins
mov
les
mov
cmps
sbb
dec
mov
inc
push
inc
ret
sar
dec
jno
es
mov
adc
fsub
cmp
cmp
cmp
ds
(bad)
and
clc
mov
scas
les
(bad)
aas
mov
push
scas
aas
add
cld
adc
in
push
mov
sbb
push
xchg
scas
mov
ret
and
cli
shl
dec
add
pop
cli
jnp
out
sbb
push
push
pusha
inc
add
cld
add
dec
xor
jle
mov
out
data16
cs
mov
stos
ret
ja
(bad)
xchg
ins
rcl
lds
icebp
inc
stos
into
sbb
mov
push
cmps
(bad)
jb
pop
(bad)
mov
add
push
xchg
mov
fst
std
sub
enter
mov
shld
jo
aas
push
mov
stc
mov
mov
mov
mov
inc
mov
nop
call
or
sub
push
cmp
bound
adc
out
sub
adc
and
jp
jne
js
out
sub
cmp
fidiv
and
push
push
inc
cmp
push
xor
scas
or
sub
les
sub
sub
loop
popf
mov
sbb
mov
adc
dec
adc
add
xchg
xor
les
cld
lods
dec
in
xor
test
fs
push
lods
push
pop
inc
sbb
sub
xchg
inc
fistp
xor
mov
int
not
repnz
(bad)
test
ins
lods
scas
xor
pop
adc
xchg
ins
ss
push
bound
ss
mov
fdiv
push
push
test
aas
enter
pop
adc
cmp
pop
jge
mov
stos
call
or
mov
cld
inc
add
xchg
pop
and
sbb
mov
loop
push
loopne
stc
xchg
xchg
into
(bad)
adc
jmp
in
push
mov
xchg
adc
xor
imul
or
inc
cwde
dec
or
ja
add
cwde
mov
push
sub
ja
js
inc
jle
out
inc
aad
aaa
lods
popf
dec
sub
dec
xchg
movs
jo
pop
js
repnz
imul
cmp
cmp
add
ins
push
or
inc
jmp
mov
in
jno
ds
sub
fs
sbb
cmp
aam
(bad)
stos
xor
push
imul
mov
sub
jnp
out
inc
int3
call
mov
xchg
test
inc
stc
add
mov
ret
mov
pop
jp
cli
movs
sbb
sbb
or
add
dec
push
sub
loop
data16
mov
and
sub
les
inc
mov
adc
rol
add
int
add
mov
sti
(bad)
ficomp
push
rcr
ficom
mov
push
inc
and
call
in
adc
and
mov
cld
pop
mov
jnp
mov
xor
add
pop
test
adc
sub
cmp
jmp
call
aad
mov
adc
jle
mov
ja
xchg
pop
cmps
inc
jg
xchg
lock
mov
fidivr
into
cmps
stos
or
jns
cmp
adc
into
adc
sbb
mov
jb
mov
stos
nop
cmp
mov
mov
cmp
sub
xchg
in
jmp
(bad)
sbb
repnz
adc
push
dec
leave
in
mov
cli
rol
arpl
cmc
push
mov
add
scas
imul
mov
dec
adc
jns
daa
fwait
retf
or
stos
inc
pop
push
arpl
and
xor
aad
popf
(bad)
pop
mov
cmp
jl
jl
push
out
std
pop
repz
popa
scas
or
stos
dec
(bad)
lock
mov
pop
xchg
call
fcomi
push
inc
add
movzx
jge
ficomp
cld
outs
xchg
enter
pop
pop
xchg
daa
lahf
dec
push
push
frstor
mov
inc
out
stos
sbb
jle
and
out
nop
cmps
ds
mov
mov
arpl
iret
pop
sbb
mov
data16
neg
dec
nop
mov
fisubr
pushf
and
cmp
sbb
jmp
jno
sbb
sbb
dec
jle
add
sub
in
xor
inc
jbe
push
jmp
mov
div
mov
stos
xchg
mov
loopne
imul
int
sbb
repnz
mov
mov
lock
xor
pop
mov
ror
sub
leave
in
gs
pop
adc
push
nop
dec
nop
mov
rcr
jno
cmp
jne
xchg
jae
push
add
jo
and
lahf
(bad)
inc
in
dec
or
pushf
call
js
nop
daa
cmp
dec
adc
inc
fsubrp
je
out
mov
(bad)
test
mov
test
push
cmp
mov
repz
mov
add
pop
into
rol
(bad)
xor
cmc
es
je
imul
scas
cmp
icebp
test
inc
idiv
dec
test
pushf
push
call
ins
inc
or
add
xor
pop
fwait
cmp
aad
or
pop
mov
xor
fist
jmp
xchg
inc
ja
iret
and
lods
ins
(bad)
icebp
call
stos
jg
movs
cmps
push
ficom
(bad)
dec
jmp
sahf
push
jae
mov
jg
pop
stos
je
and
xchg
int3
mov
push
and
mov
dec
push
cmp
iret
inc
mov
cli
test
js
cmp
bound
adc
mov
push
xchg
xor
in
mov
mov
push
xchg
cmp
cmp
inc
and
mov
push
cmps
fmul
pop
int3
inc
mov
fbstp
cmp
push
xor
jp
jmp
adc
outs
and
pop
push
pushf
movs
mov
jmp
xchg
sbb
mov
sahf
not
xlat
sub
in
shr
xor
(bad)
mov
pop
add
inc
int3
cmps
imul
adc
push
sbb
jmp
ret
aaa
cld
hlt
add
jp
xlat
or
add
imul
int3
(bad)
add
dec
enter
mov
(bad)
push
inc
pop
ins
mov
sti
and
mov
xchg
scas
xor
xchg
mov
xchg
cld
cmp
mul
lea
push
adc
mov
ins
ins
mov
mov
adc
jno
mov
enter
cmp
xchg
mov
or
cmp
fidiv
push
cmp
in
xor
xchg
mov
out
mov
mov
dec
enter
repnz
xor
enter
add
pop
add
jns
or
cmp
add
lds
cdq
ja
dec
adc
inc
pop
in
mov
(bad)
sbb
or
shr
loopne
push
retf
mov
loopne
and
outs
add
in
fimul
adc
mov
mov
es
rcr
mov
nop
lds
lods
fs
test
jne
sub
std
movs
jno
push
mov
jle
xchg
pop
jno
jmp
jl
mov
add
popf
fs
mov
push
repnz
in
mov
or
xlat
in
les
(bad)
test
adc
and
pop
fwait
push
loopne
adc
inc
(bad)
shr
dec
mov
cdq
pop
movs
es
iret
mov
scas
outs
push
cmc
sbb
cmps
jns
mov
mov
adc
pop
mov
sahf
and
pop
mov
cmp
sbb
pop
cs
in
jne
jo
cwde
mov
sti
inc
jo
cmp
div
push
jae
adc
mov
and
jp
cmp
outs
jecxz
test
or
jno
adc
mov
and
mov
pop
mov
mov
fdivr
dec
data16
mov
sub
adc
jecxz
sub
mov
loop
jp
out
div
xor
les
and
jb
fcomp
pop
das
push
inc
xchg
cmps
ins
neg
sub
jl
into
dec
int
jmp
(bad)
jmp
mov
sbb
out
ins
push
jg
pop
xchg
or
adc
(bad)
add
mov
enter
mov
push
ss
nop
gs
cmp
pusha
cwde
mov
ret
retf
(bad)
sbb
retf
jp
cwde
mov
and
jl
stc
jle
dec
push
xchg
add
push
xor
lea
sbb
(bad)
fcmovnbe
call
arpl
jmp
dec
or
std
sub
cmp
jl
out
xchg
xchg
rcr
je
sbb
add
mov
jb
sub
outs
inc
mov
es
add
cs
add
pop
jp
pop
ret
cmp
mov
mov
(bad)
frndint
mov
enter
sub
xlat
movs
adc
out
xor
push
inc
es
mov
es
and
and
mov
movs
scas
es
mov
mov
pop
adc
mov
sbb
fldenv
pusha
das
repnz
xchg
repz
xor
fisubr
ret
jmp
jge
cmps
pushaw
xor
out
popa
and
repnz
cmp
cli
fidivr
fdivp
popa
add
lahf
dec
inc
mov
jl
fcom
cmp
pushf
ret
adc
or
das
outs
outs
lods
dec
push
fs
mov
cmp
jbe
inc
sub
clc
xchg
stos
or
call
mov
dec
in
fst
out
cli
jae
ins
rol
and
jno
into
push
cmp
adc
(bad)
in
sbb
retf
and
or
outs
sbb
stc
jmp
xchg
nop
das
jmp
sub
mov
push
fldenv
pop
cmps
dec
fstp
xchg
jo
xchg
cs
jne
mov
mov
dec
jb
sbb
gs
pop
cmp
push
mov
inc
adc
ret
push
cmp
nop
and
(bad)
sbb
shl
and
cli
sub
(bad)
pop
inc
dec
sbb
mov
pop
in
xlat
enter
mov
iret
loope
mov
push
xchg
aaa
xchg
sbb
push
sbb
stc
mov
test
aad
or
inc
stos
xchg
sub
or
int
out
jmp
and
push
outs
pop
sub
pop
rol
mov
sub
out
sti
xor
add
vpminsw
jl
test
in
add
jp
outs
out
cmp
dec
mov
mov
mov
mov
dec
fsub
xchg
xor
and
dec
movs
scas
mov
jg
and
mov
imul
(bad)
cli
and
mov
daa
dec
pop
push
leave
mov
mov
mov
les
test
and
test
sbb
and
cvtdq2ps
push
aas
xor
shl
adc
inc
rcl
jb
cmp
stos
add
fcomp
inc
aad
jae
sahf
mov
add
dec
adc
adc
popf
out
xor
and
cmp
ins
push
xchg
jne
scas
sub
pop
adc
test
test
mov
icebp
imul
call
mov
push
fisub
mov
jge
das
jmp
jno
mov
mov
movs
dec
inc
push
and
push
mov
mov
inc
nop
out
sub
inc
call
pushf
mov
xor
retf
loopne
mov
cmp
ja
inc
pop
adc
repnz
inc
cmp
ja
dec
cmp
jae
mov
outs
sbb
sub
arpl
xchg
jle
pop
xlat
fnstcw
hlt
scas
xchg
pushf
(bad)
lahf
and
shl
dec
inc
or
xchg
lods
dec
cmc
and
int3
mov
push
daa
xor
scas
(bad)
fs
aad
out
push
shl
add
push
inc
mov
xchg
xchg
les
xor
ins
sub
cs
add
retf
(bad)
jge
sub
loope
cmp
dec
repz
cmp
cmp
rcl
je
mov
enter
cmp
dec
mov
shl
mov
mov
mov
mov
jmp
sbb
add
outs
mov
jg
cwde
in
outs
sbb
icebp
aad
les
push
ret
in
outs
rcl
jmp
cmc
scas
cs
scas
adc
jg
dec
pop
cmps
sub
xchg
pop
sub
and
sti
xor
or
std
leave
(bad)
in
sub
fsin
test
push
aas
xchg
or
in
pop
push
out
sbb
retf
test
je
(bad)
adc
das
ret
jmp
test
jl
out
(bad)
mov
xchg
frstor
int3
inc
mov
sub
retf
sti
inc
stc
lea
mov
dec
lds
nop
pop
mov
jae
or
mov
lahf
xor
mov
jmp
faddp
loopne
sbb
mov
and
xchg
adc
cli
and
mov
inc
rcl
scas
data16
ss
outs
inc
jge
sub
mov
inc
out
or
dec
pushf
jge
enter
sbb
test
push
(bad)
xor
push
fcomp
icebp
lock
add
nop
test
dec
loopne
pop
push
mov
or
fild
push
jb
lods
outs
hlt
cmc
pop
add
out
or
daa
test
pop
in
jb
xchg
(bad)
mov
sti
fnop
sbb
(bad)
outs
push
daa
adc
in
leave
or
pop
cmp
inc
mov
add
jmp
mov
scas
mov
sub
aaa
lds
or
js
mov
xchg
mov
fcompp
lods
cld
mov
stc
hlt
adc
out
push
std
inc
mov
jb
mov
enter
cmp
or
jle
jno
ds
mov
icebp
cmp
xchg
ror
mov
call
cwde
enter
xor
jne
or
mov
pop
pop
mov
pop
sbb
and
xor
jne
jb
or
outs
sti
and
mov
inc
in
or
ins
or
cmc
jmp
jns
movs
and
out
cmp
scas
gs
jae
inc
adc
inc
mov
retf
push
mov
repz
rcr
mov
pushf
mov
js
inc
mul
pop
mov
xlat
inc
sbb
popf
fistp
aaa
icebp
push
lds
aas
sbb
sbb
xor
cmp
(bad)
(bad)
sahf
pop
or
(bad)
push
(bad)
inc
push
push
xor
test
sbb
mov
jecxz
ins
cwde
xor
mov
lods
mov
xor
push
mov
pop
add
test
ror
fwait
mov
gs
or
jge
fadd
aaa
clc
test
cli
stc
sbb
push
mov
test
inc
or
cmp
push
and
mov
(bad)
inc
cli
dec
lods
in
push
xchg
sbb
sti
enter
call
sti
sub
into
gs
rcr
gs
es
sti
cmp
and
push
ins
repnz
dec
or
cld
push
cmps
and
retf
iret
adc
jge
adc
call
inc
pop
mov
jns
xlat
stos
pop
data16
sbb
xor
xchg
dec
stos
cld
jno
xlat
xchg
add
xchg
fild
cmps
loope
xor
mov
cmp
scas
jg
pop
or
or
dec
jle
stos
jns
cli
push
jb
imul
mov
stos
or
fwait
sbb
jmp
(bad)
div
adc
cs
cmp
jecxz
pop
xchg
sti
xchg
stc
mov
mov
cmp
repnz
pop
(bad)
push
or
cmp
retf
repnz
cmps
or
stc
in
lods
inc
jns
inc
mov
add
pop
sbb
or
add
xlat
aas
mov
jge
push
ror
jmp
jle
or
cmp
pop
test
icebp
les
fld
xchg
sbb
jmp
sbb
jmp
pop
retf
inc
pusha
clc
xlat
sahf
mov
imul
cmp
mov
jns
or
cmp
xchg
out
add
add
loopne
jecxz
or
push
cdq
xlat
mov
sbb
mov
fcomp
inc
mov
aas
pop
pushf
mov
bound
mov
test
add
adc
hlt
fmul
mov
enter
jecxz
ss
fcmovbe
xchg
or
xor
fcomp
xor
mov
cmp
retf
sub
xchg
push
stos
pop
sbb
jne
test
lods
imul
fs
outs
arpl
in
sbb
mov
cmp
dec
cmp
mov
int3
sub
or
and
mov
mov
sub
inc
push
pusha
bound
cmc
shl
cdq
iret
in
out
test
push
aad
add
xchg
adc
jae
sbb
sub
mov
mov
(bad)
xchg
pop
mov
pop
push
(bad)
xor
sbb
xlat
jge
scas
jmp
pushf
jp
ss
add
mov
test
ret
jne
inc
inc
clc
jmp
xor
push
popf
jle
icebp
mov
xchg
add
xor
sub
pop
fs
sahf
adc
out
push
xor
(bad)
push
mov
je
cld
ins
mov
sub
push
scas
int3
pcmpeqw
rcl
or
(bad)
cmp
imul
ds
mov
inc
pushf
push
bound
xor
jp
ror
jmp
enter
pusha
xor
inc
pop
and
and
jno
sbb
pushf
cmp
test
jecxz
ins
mov
stos
xchg
pop
je
fwait
push
aam
nop
mov
mov
aad
nop
add
into
xor
out
mov
retf
xchg
(bad)
mov
lahf
inc
push
push
call
setae
test
rcl
lahf
outs
sub
xor
test
lahf
push
cld
or
lds
xchg
test
xchg
stc
data16
movs
mov
clc
xchg
add
and
mov
xchg
nop
repz
mov
dec
jl
sbb
mov
rol
mov
jno
mov
jmp
jg
imul
adc
sbb
pop
into
movs
rol
repnz
push
fild
(bad)
movs
pop
aad
sub
(bad)
sbb
in
jg
jle
clc
jns
iret
(bad)
mov
jmp
(bad)
or
rol
sbb
jnp
fisub
(bad)
imul
xchg
pop
ror
add
les
int3
int
(bad)
aam
ins
fcom
popa
push
lds
int
mov
out
retf
sahf
std
test
inc
inc
inc
inc
pop
xchg
adc
push
sbb
mov
cwde
jmp
cdq
cmp
adc
(bad)
pop
call
adc
sbb
scas
ss
gs
adc
xor
dec
iret
jp
iret
push
mov
jg
inc
sbb
cli
sbb
aad
mov
addr16
sti
and
sbb
loopne
mov
mov
sub
(bad)
jae
test
test
mov
dec
test
cdq
loope
mov
mov
movs
loope
sub
pop
and
outs
inc
and
jg
dec
loopne
sub
test
cmps
mov
pusha
(bad)
mov
pusha
cmp
sbb
dec
add
into
loopne
sbb
inc
inc
imul
xor
jl
cmp
out
mov
cmp
mov
mov
stos
scas
into
xchg
jae
mov
nop
out
movs
xchg
and
cmps
neg
in
leave
icebp
xchg
xor
rcl
jb
aaa
push
cld
xchg
loop
ret
(bad)
xor
cwde
mov
mov
test
xor
cmp
es
rol
add
movs
popa
fs
mov
adc
adc
lahf
sbb
ret
mov
sub
das
push
mov
cs
mov
mov
mov
adc
shl
add
cmp
and
mov
sbb
ja
ret
add
push
and
retf
and
inc
sbb
ret
dec
adc
jmp
adc
int
adc
fcom
mov
dec
push
xchg
mov
or
pop
pusha
pop
sahf
sbb
das
ja
mov
push
fadd
loope
test
mov
popf
div
div
retf
lock
push
out
call
xor
sbb
or
ret
mov
lahf
jne
aam
push
and
cs
cmps
fs
test
mov
(bad)
sahf
scas
sbb
pusha
sbb
pushf
retf
jns
out
aaa
pusha
jae
mov
ret
fnsave
mov
cmp
xor
enter
cwde
call
push
outs
ficom
stos
push
sar
cmp
movs
adc
inc
jo
lock
mov
mov
rcl
rol
pop
out
(bad)
icebp
xchg
gs
(bad)
mov
in
mov
lods
inc
popf
std
add
push
inc
push
loop
cdq
mov
cli
xchg
std
sbb
mov
cwde
xchg
fld
fld
call
jnp
(bad)
lods
mov
sbb
ret
movs
and
sub
sbb
in
fidivr
jno
or
out
and
push
xor
sub
cli
push
fimul
add
push
xchg
xchg
je
pop
pop
lea
xchg
pop
adc
mov
addr16
addr16
arpl
out
pusha
test
cmp
inc
stos
aaa
xchg
pop
dec
pop
popa
outs
adc
popf
inc
js
mov
jge
sub
ret
jbe
jo
sbb
inc
ret
inc
fsubr
mov
sub
push
fsub
(bad)
xchg
jecxz
dec
mov
ins
iret
retf
jae
or
in
js
push
lea
cmp
xchg
fmul
fsub
fdiv
jns
lods
test
mov
cwde
xchg
sbb
xchg
adc
dec
repnz
inc
lods
test
adc
dec
inc
xchg
das
mov
or
push
out
repz
pop
outs
fdivr
fwait
outs
mov
outs
push
add
sub
pop
retf
mov
xchg
mov
inc
push
addr16
inc
lea
xor
cwde
sub
out
adc
jo
cs
xor
jbe
add
pop
in
fimul
(bad)
jecxz
mov
xchg
mov
lods
movs
movs
test
xchg
push
fisttp
jmp
out
enter
outs
mov
cmc
fld
pop
lahf
pop
adc
push
test
fldl2t
into
stos
lds
mov
xchg
cmp
in
lods
outs
cwde
jmp
cli
mov
mov
xor
adc
sub
adc
xor
aam
clc
in
aas
cdq
jmp
retf
mov
inc
popa
in
outs
cmp
jns
jl
int3
pop
ins
mov
xor
popf
mov
sub
jle
test
xor
cwde
repnz
cli
fbld
outs
mov
or
mov
sbb
sub
addr16
les
les
cmps
in
cs
adc
fcomp
or
sbb
add
push
mov
sub
int
call
ss
neg
mov
add
lods
push
test
lods
neg
js
ss
dec
mov
sbb
cwde
shr
fs
push
sbb
mov
daa
mov
call
sbb
inc
movs
cmp
dec
sar
ins
mov
sub
jae
int3
fiadd
mov
mov
mov
dec
mov
fisttp
cmc
xchg
jl
cmp
or
movdqa
mov
dec
jmp
pusha
jmp
and
test
inc
sbb
nop
inc
and
movs
cmp
inc
jno
mov
(bad)
fild
shl
push
xor
sbb
outs
or
fisttp
or
aam
mov
arpl
pop
mov
mul
int
jne
mov
sti
sub
sar
sub
mov
scas
pushf
inc
sub
push
mov
fidiv
adc
sub
mov
loope
dec
xor
sub
movs
mov
sbb
cmp
mov
test
jno
lahf
(bad)
enter
xchg
push
pop
xchg
popa
icebp
push
xchg
call
mov
fild
mov
mov
in
ret
or
lock
(bad)
rcr
mov
cmps
and
std
clc
(bad)
push
pop
dec
xchg
mov
cmp
mov
push
rcr
ficomp
mov
push
dec
lds
xor
add
not
sar
and
pop
inc
scas
pop
loopne
ss
and
and
mov
push
sub
into
sbb
add
je
in
std
cmp
dec
push
fst
pmaxsw
iret
daa
dec
ds
jmp
stos
test
cmc
in
add
stos
aam
les
push
ins
pop
cld
out
jmp
pop
jle
fisttp
inc
and
nop
icebp
bound
(bad)
jbe
stc
push
pop
fyl2x
dec
sbb
mov
fwait
cs
cmp
arpl
jo
cld
addr16
mov
out
dec
cli
jle
cli
dec
pop
jno
(bad)
pop
or
jecxz
pop
fimul
(bad)
loop
mov
lock
mov
(bad)
call
mov
cmc
stc
ss
jecxz
and
out
js
aad
pushf
xchg
sbb
xchg
and
add
lahf
or
fstp
scas
adc
mov
out
jge
jno
dec
(bad)
sub
pop
mov
jne
out
and
outs
mov
xchg
imul
test
sahf
inc
push
adc
jmp
sub
movs
pop
and
add
imul
mov
mov
jmp
out
inc
adc
xor
inc
dec
aad
loop
push
pushf
push
cmps
sbb
into
movs
test
sub
bound
jmp
jecxz
xor
lahf
je
pop
jne
mov
sub
call
sbb
gs
jp
imul
dec
in
call
mov
icebp
pop
pop
repz
out
adc
or
sub
add
adc
cmps
loop
fild
int3
cld
sahf
push
dec
stc
lea
jecxz
repnz
dec
sar
sbb
mov
add
pop
(bad)
jmp
jnp
loope
rcr
fs
cld
mov
shl
push
xchg
mov
inc
cmps
scas
xchg
xchg
push
mov
sbb
mov
call
sub
or
ret
push
xor
les
xchg
sahf
out
xor
ins
add
mov
adc
dec
int
clc
pop
rcl
mov
inc
mov
neg
pop
mov
ret
push
adc
push
pop
cmp
jcxz
add
add
das
sar
jmp
repnz
(bad)
xor
mov
jge
cmp
mov
lods
dec
jecxz
xor
int3
push
cmc
ret
(bad)
adc
mov
or
into
inc
(bad)
addr16
cs
(bad)
xor
arpl
lahf
sub
es
fs
push
cli
(bad)
std
sub
shl
push
push
(bad)
mov
movs
bound
int
sahf
outs
jnp
inc
mov
daa
jmp
pop
push
out
lods
dec
lahf
in
sub
mov
psubd
jnp
adc
sub
int
(bad)
push
jns
movs
mov
out
jno
cli
add
dec
or
das
dec
into
adc
leave
pop
xchg
in
inc
or
inc
mov
push
xchg
and
cmps
add
push
inc
xchg
jne
das
xchg
mov
inc
in
adc
(bad)
sub
xor
mov
and
test
out
movs
sbb
sti
xor
mov
jl
fs
cmp
pop
and
add
test
adc
fcmovb
lods
inc
ror
loopne
stc
jb
fist
je
pop
ins
or
dec
cmc
cs
mov
or
xor
pop
cmp
into
popf
adc
sub
int3
loop
xor
xchg
xor
call
pop
and
clc
test
push
fcmovu
sub
outs
pop
adc
dec
popa
fdivp
int3
sub
jo
sbb
sub
mov
adc
movs
icebp
cmp
imul
jecxz
cli
and
pop
pop
ss
cmp
sbb
or
cld
bound
je
cld
in
iret
test
jle
mov
repz
das
mov
lds
add
cmps
push
ds
push
(bad)
xor
ja
lea
xchg
shr
and
(bad)
ficomp
mov
outs
xor
nop
mov
lahf
push
ret
jge
imul
jp
adc
fisub
dec
inc
sahf
adc
and
outs
out
icebp
mov
ins
and
xchg
frstor
pop
xor
ins
std
and
call
idiv
mov
popf
and
mov
cs
jmp
jp
in
call
and
les
bnd
gs
sahf
add
into
push
test
mov
mov
push
test
rol
push
adc
add
and
dec
pop
sub
test
test
add
dec
jle
bswap
fidivr
retf
inc
repnz
inc
push
push
push
punpckldq
test
pop
push
test
push
(bad)
stc
enter
das
ds
test
cmp
popf
mov
call
inc
xchg
and
rol
out
mov
in
pop
pop
enter
neg
or
push
cmp
loopne
ja
cmps
xor
not
cmp
sub
mov
jle
dec
jmp
mov
pop
sbb
cld
xlat
add
clc
xchg
mov
pop
div
xor
scas
imul
or
mov
push
or
outs
fistp
enter
out
jmp
cdq
cmps
enter
push
or
(bad)
pop
add
cli
pop
mov
sti
ins
and
lods
out
ja
imul
adc
stos
repnz
mov
cld
mov
ret
xchg
pop
xchg
mov
cmp
sahf
or
js
shl
js
shl
pop
scas
fild
pusha
pop
push
enter
adc
jmp
jbe
pop
test
rcr
push
inc
xor
jne
adc
(bad)
xor
icebp
mov
inc
sub
xchg
or
add
inc
sbb
xchg
jl
dec
dec
test
jle
inc
call
fistp
in
pop
mov
adc
(bad)
fadd
jp
mov
push
(bad)
fdivp
mov
xchg
adc
mov
repnz
jb
mov
int
ret
xchg
into
jb
inc
dec
mov
jle
loope
js
ja
jne
add
jge
jno
sbb
xlat
pop
xchg
arpl
ror
ja
aam
lds
in
lods
out
mov
or
dec
jae
aas
sub
and
or
stos
mov
arpl
jl
dec
scas
pop
add
xchg
xchg
pop
(bad)
arpl
cmp
and
stc
jno
mov
ret
adc
cmps
push
push
sbb
mov
dec
push
fmul
inc
pop
(bad)
cmp
cmp
or
xchg
push
test
pop
push
sbb
mov
div
mov
call
test
adc
inc
ret
mov
dec
fist
out
inc
adc
test
push
push
shl
fcom
mov
faddp
rol
pushf
cmps
ror
inc
jbe
xchg
push
ins
outs
add
loopne
jl
mov
mov
neg
sub
lods
jmp
pop
or
sub
and
aaa
cdq
xchg
pop
out
mov
aaa
and
mov
xor
wrmsr
jge
jae
and
fld
push
push
jns
lea
cmc
(bad)
and
inc
xchg
int
mov
je
mov
jg
mov
pop
imul
ret
lahf
int3
js
outs
out
(bad)
imul
push
out
sbb
mov
out
call
lea
xchg
loope
sub
sar
int
push
into
sar
arpl
loope
clc
test
outs
rcl
push
mov
repnz
mov
xchg
jl
aas
adc
fst
pusha
dec
pop
jo
mov
es
jl
and
fsub
add
clc
add
je
adc
xor
shl
pop
call
popa
in
(bad)
jecxz
cmp
push
ja
jns
cmp
mov
sbb
and
mov
scas
and
and
mov
movs
xor
mov
jp
out
adc
mov
add
jge
push
and
pop
sub
ds
mov
sub
cmp
std
aaa
sbb
xchg
les
sbb
xchg
mov
or
or
ins
add
nop
mov
inc
push
sbb
xchg
pop
aaa
js
jno
xchg
mov
jp
movs
jb
push
xor
cwde
and
retf
fsubp
cmp
and
out
not
jmp
aad
or
mov
je
mov
push
and
add
movs
add
out
imul
sbb
(bad)
loopne
outs
inc
adc
in
into
jns
push
stos
adc
and
hlt
mov
sbb
push
sub
xchg
fldcw
mov
pop
push
sbb
retf
and
push
mov
ss
pop
aam
jno
sbb
in
lea
inc
push
popa
imul
xchg
arpl
and
(bad)
rcr
dec
ret
pop
push
retf
sbb
and
fcmovb
retf
sbb
mov
inc
dec
pusha
push
test
inc
push
pop
loop
aaa
ss
in
sub
fcom
rcl
addr16
(bad)
out
not
pop
push
xchg
push
mov
fmulp
leave
test
(bad)
movntq
test
ret
sub
jl
pop
dec
sti
rcl
lea
xchg
imul
xchg
jo
or
popf
xchg
in
pop
cmp
pushf
xchg
repnz
lea
cmps
mov
ret
sub
into
call
ss
or
(bad)
push
mov
popf
in
inc
popf
mov
jb
mov
hlt
push
mov
xchg
xchg
jns
jmp
xchg
and
aam
iret
jno
movs
and
(bad)
push
cmps
sub
sbb
add
xchg
fild
mov
mov
cmp
cdq
das
dec
into
jge
xor
test
and
(bad)
not
inc
mov
sub
add
and
inc
or
movs
lahf
jns
lods
lds
push
(bad)
fisub
out
cmc
xchg
mov
mov
adc
ss
test
enter
pop
stos
cs
mov
shl
push
jg
inc
xchg
mov
mov
sahf
shr
inc
rol
jle
scas
cs
(bad)
mov
inc
(bad)
sub
add
repz
mov
or
push
xchg
cs
jno
fisub
sbb
(bad)
(bad)
dec
jl
inc
jae
mov
pop
add
test
jmp
xor
clc
sbb
xchg
cmps
daa
jo
lds
icebp
ret
push
mov
or
cmps
int
cs
out
and
inc
rol
mov
gs
lods
pop
xchg
into
cmp
pusha
dec
fimul
bts
xor
pop
lods
jge
push
out
dec
sahf
and
aas
xchg
push
add
adc
xor
jns
jb
popf
cmp
ins
ror
jae
fisttp
gs
xchg
pop
icebp
xchg
adc
inc
pop
sbb
rcl
aad
cli
cld
out
dec
aad
arpl
sub
mov
adc
jnp
mov
(bad)
xchg
int3
jno
fiadd
ret
pop
rcr
push
rol
mov
inc
scas
arpl
pop
pop
ja
push
imul
mov
sub
outs
ins
daa
jmp
adc
cmps
pop
(bad)
adc
les
fs
pop
addr16
mov
div
call
xchg
mov
call
mov
out
popa
bound
adc
into
xchg
adc
mov
inc
xchg
push
fistp
cmps
add
stc
xor
sub
xor
jp
mov
jns
push
mov
cmc
sbb
xor
fwait
pop
in
mov
scas
int3
pop
pop
aaa
stos
mov
add
and
or
je
mov
or
push
push
xchg
adc
ret
or
jge
mov
jns
in
dec
pop
jle
mov
nop
dec
and
jge
or
mov
shl
pop
adc
mov
inc
loope
sub
call
sub
adc
call
push
pop
sbb
inc
sahf
sbb
into
ja
cdq
fmul
enter
daa
adc
or
dec
stos
rol
neg
gs
xor
(bad)
xor
(bad)
out
ins
pop
add
push
pop
adc
and
and
adc
xlat
push
sbb
ret
out
ret
sub
(bad)
outs
push
arpl
mov
inc
ficom
add
call
add
dec
sbb
cmp
sbb
fcom
jl
adc
sbb
and
nop
(bad)
in
daa
adc
mov
pop
icebp
mov
push
xchg
in
pop
pop
(bad)
movs
sub
push
add
inc
aas
mov
mov
out
loopne
cmp
mov
sti
retf
jmp
sbb
cmp
sub
es
std
inc
sbb
push
ret
clc
imul
loopne
loope
cwde
xchg
arpl
jnp
dec
lock
push
aam
mov
icebp
cmps
add
push
xor
rol
dec
mov
push
test
push
inc
dec
outs
cmc
cli
sub
mov
add
lfs
pop
mov
jp
sub
das
scas
ins
repz
sub
push
(bad)
popa
ja
call
into
xor
fdivr
sbb
mov
or
maxps
ficomp
pop
push
adc
outs
mov
out
dec
add
imul
(bad)
aad
loop
test
fild
scas
mov
cmp
jle
inc
rcl
jns
in
inc
je
lds
jmp
ret
int3
lods
imul
icebp
mov
pop
jge
scas
das
dec
popf
iret
xchg
cwde
xchg
sti
inc
clc
movs
inc
pushf
dec
sub
out
icebp
mov
mov
in
dec
mov
scas
ja
or
or
add
cmps
pop
icebp
test
ins
dec
nop
in
add
push
inc
movs
in
or
lods
mov
lahf
scas
cld
push
les
or
inc
dec
xor
jg
push
aaa
jge
call
cmps
bound
es
mov
adc
jmp
sub
ror
push
mov
scas
div
iret
mov
cmp
mov
mov
add
sub
arpl
out
mov
adc
aad
sahf
mov
xchg
push
mov
xchg
inc
or
icebp
or
jo
lahf
jne
push
lock
in
or
icebp
cmps
bound
jne
bound
test
sub
das
cmp
invd
in
shl
push
outs
sub
jae
movs
fisubr
adc
lahf
add
adc
jo
lods
pop
xchg
xchg
aam
arpl
xchg
daa
int
inc
and
stc
sti
adc
inc
aad
arpl
je
stc
add
or
imul
add
xlat
out
inc
push
(bad)
adc
mov
jge
sbb
and
in
ins
push
push
jns
inc
push
xchg
gs
mov
cld
push
dec
sar
out
inc
loop
jle
adc
rcl
imul
daa
sub
mov
add
ds
xchg
and
sbb
gs
repz
push
lahf
push
sub
xor
push
loop
retf
or
leave
add
jle
mov
cdq
push
pop
inc
ret
outs
mov
loopne
adc
ins
push
(bad)
mov
lods
call
mov
push
shl
clc
mov
sub
ror
pop
shr
sub
mov
scas
xchg
mov
(bad)
fcmovu
xchg
mov
xor
fbstp
ficomp
and
xchg
test
dec
fnstcw
xchg
repnz
push
cmp
mov
xor
div
inc
fistp
push
cld
cmp
sar
inc
fwait
pop
rol
jmp
mov
mov
mov
gs
test
ins
xor
int
iret
xor
jp
push
sbb
lds
pop
push
movs
xchg
inc
gs
mov
inc
sub
cmp
cwde
mov
test
and
and
mov
sbb
xor
and
cmc
ret
popa
ret
fisub
jmp
push
add
lods
pop
(bad)
aad
jmp
je
out
push
push
dec
jo
adc
mov
add
or
inc
(bad)
pop
cmp
sub
rcl
xchg
repz
push
lds
inc
mov
(bad)
push
out
cmp
mov
pop
jp
jns
fyl2xp1
jnp
or
dec
xchg
sub
(bad)
xor
retf
(bad)
push
(bad)
jns
mov
pop
fisubr
(bad)
jmp
or
retf
popa
sub
cdq
and
fisttp
add
imul
adc
stc
icebp
xchg
iret
rcr
xor
in
out
sti
pop
adc
and
xor
movs
sub
mov
test
xchg
sti
add
mov
push
add
(bad)
maxps
pop
inc
pop
jle
ror
das
xchg
repnz
movs
jmp
jb
fnsave
push
mul
aad
test
push
xor
mov
fbld
(bad)
add
xor
jle
fsub
dec
rcl
add
sub
shl
or
lea
mov
(bad)
(bad)
mov
jmp
sub
xor
sbb
dec
mov
mov
mov
jbe
int3
std
(bad)
clc
xchg
test
pop
dec
in
cdq
pop
mov
adc
add
dec
(bad)
(bad)
push
cld
cmps
push
scas
jecxz
sbb
retf
retf
retf
jp
xchg
xor
in
jnp
arpl
pop
imul
mov
fnstcw
push
les
xor
jns
mov
mov
movs
hlt
add
xchg
sbb
ja
adc
mov
sahf
dec
fwait
push
retf
lea
adc
int3
xor
mov
sub
push
cli
mov
push
jno
mov
mov
jae
adc
dec
das
ss
icebp
push
(bad)
sbb
or
test
fcomp
dec
jbe
mov
jae
mov
mov
lods
dec
xchg
jne
repz
push
xchg
jmp
leave
retf
jge
shl
add
and
or
or
adc
jmp
mov
jbe
xor
nop
jb
xchg
bound
add
shl
pop
pop
push
adc
stos
jno
jge
stos
jecxz
or
ret
push
call
mov
into
inc
scas
test
loopne
loop
adc
cmps
xor
sub
sub
(bad)
sub
cwde
(bad)
call
test
push
and
ss
test
int
sti
ins
mov
lea
xchg
or
cwde
mov
or
mov
mov
ss
dec
adc
aam
or
or
xlat
cmp
aam
js
in
dec
addr16
or
mov
mov
cld
xor
mov
(bad)
xchg
jae
ins
stos
mov
pushf
mov
into
into
jle
push
(bad)
sti
cmp
icebp
out
dec
icebp
mov
push
ror
icebp
ins
push
fiadd
repnz
(bad)
shl
sub
xlat
pop
or
addr16
jne
mov
cld
les
mov
and
aaa
or
in
test
add
fsubr
inc
(bad)
sbb
or
dec
sbb
cwde
adc
lea
rcr
out
and
cmp
mov
sbb
add
sar
sti
mov
adc
in
mov
xor
imul
outs
adc
ret
jg
pop
iret
scas
jmp
cmp
dec
aam
sbb
add
pop
movs
mov
mov
sbb
int
and
adc
fisub
dec
jne
bound
sub
in
lock
xchg
push
push
or
outs
or
stos
jnp
(bad)
mov
xor
xchg
pop
xlat
jbe
mov
push
sub
imul
dec
xchg
cmps
jmp
adc
mov
or
in
aaa
rcr
mov
scas
jno
punpcklwd
pop
rol
push
in
aaa
mov
call
loope
in
dec
dec
pushf
jmp
in
xchg
fwait
cmp
ret
inc
daa
cld
mov
fneni(8087
bound
pop
mov
scas
sub
inc
mov
jp
leave
int
sbb
cmps
inc
lods
xor
fs
retf
inc
outs
and
dec
mov
xor
ficom
and
and
and
inc
test
jnp
add
pusha
mov
jae
and
shr
adc
jmp
jo
out
cs
jecxz
call
aad
(bad)
jecxz
xchg
mov
sar
(bad)
fadd
lods
sti
cmp
dec
and
into
inc
pop
pop
push
addr16
mov
out
sbb
sar
jge
lea
xor
in
sub
fcmovbe
xchg
stc
pusha
mov
mov
or
cmp
test
rol
mov
add
push
cmp
dec
ds
adc
and
mov
adc
jno
jp
stc
in
push
sbb
ret
gs
mov
test
xlat
jp
pop
pop
sbb
or
mov
aad
cmp
add
dec
pop
(bad)
mov
test
or
add
js
jle
jge
out
xchg
std
mov
pop
loop
ja
cwde
out
stos
dec
movs
ror
rcr
xor
xor
inc
pop
retf
xchg
xchg
adc
nop
repz
les
das
aas
add
aas
jmp
je
and
jmp
shr
xor
inc
movs
mov
aam
sub
jne
fbstp
(bad)
es
jo
outs
fdiv
push
jmp
push
neg
mov
enter
xchg
mov
pop
sub
in
jb
shl
(bad)
shl
jp
mov
adc
enter
and
inc
fdiv
in
mov
lahf
xchg
or
jne
repnz
jle
push
scas
ror
dec
add
mov
fwait
inc
mov
cmp
es
adc
or
test
pop
test
mov
fistp
or
sbb
shl
(bad)
push
mov
cmps
mov
inc
sti
pop
fstp
xlat
mov
int
or
fmul
sti
pop
hlt
jmp
xchg
mov
pop
pop
xchg
sub
mov
ret
ins
(bad)
mov
jmp
and
add
repz
and
jecxz
dec
call
cmps
mov
or
sbb
mov
push
lahf
ins
dec
dec
mov
repz
inc
inc
xchg
cs
xchg
rol
or
int3
(bad)
jmp
ins
sbb
mov
aaa
out
jns
mov
stos
div
adc
xlat
in
inc
sub
and
lock
sti
mov
shl
inc
cld
fsubr
inc
pop
jbe
(bad)
in
adc
(bad)
ja
xchg
leave
adc
je
cmp
lahf
cmp
dec
push
stos
lds
and
int3
mov
xchg
out
lods
mov
leave
iret
and
mov
pop
sbb
lock
rcl
test
lock
xor
push
inc
sahf
ror
mov
add
and
ds
xchg
xchg
mov
xor
out
fcom
pop
fs
bound
xor
mov
sub
sar
sub
push
jecxz
ja
pause
stos
mov
inc
cli
stos
(bad)
adc
test
(bad)
mov
mov
out
sahf
inc
push
dec
mov
adc
cmp
xchg
fwait
jbe
lea
das
add
jle
pop
shr
mov
jmp
dec
mov
or
das
cmp
lds
add
lods
dec
shl
jmp
pop
int3
jl
inc
out
fdiv
fimul
xchg
(bad)
shl
jg
push
cmp
mov
jne
ins
inc
(bad)
imul
dec
ret
in
add
sub
push
call
push
sbb
nop
repz
cld
mov
push
pop
cmc
mov
push
xchg
sbb
sub
dec
in
mov
sub
and
cli
mov
jmp
pop
cmp
test
fnstsw
shl
std
out
call
inc
push
gs
pop
add
add
lea
add
pop
mov
aaa
sub
into
bound
les
dec
push
pop
adc
(bad)
rcl
inc
jp
xor
dec
leave
sar
dec
in
aas
nop
push
loope
movs
pop
outs
ffreep
push
mov
aaa
hlt
repz
xchg
push
(bad)
neg
lock
iret
cmp
xor
fdivp
fild
loope
xchg
ret
(bad)
sar
sbb
mov
add
cmp
rol
add
jne
fstp
aam
addr16
and
lods
(bad)
mov
or
inc
xor
js
add
pop
in
movs
movs
test
out
inc
push
jne
push
cmps
call
and
mov
inc
(bad)
int3
and
adc
pop
pushf
gs
mov
aaa
clc
adc
dec
loopne
mov
jecxz
gs
sti
imul
lock
sub
repnz
xchg
inc
adc
(bad)
fstp
cld
mov
sar
pop
dec
shl
adc
adc
mov
adc
adc
lock
sub
je
lods
cmps
or
add
sub
sti
mov
sub
call
sbb
std
mul
push
mov
sahf
jmp
gs
dec
ficom
rcr
push
ret
into
mov
add
in
int3
jmp
inc
mov
fstp
adc
jne
(bad)
and
clc
(bad)
int
inc
mov
icebp
mov
(bad)
test
xlat
xchg
dec
inc
mov
inc
mov
mov
jbe
int
mov
mov
test
enter
xor
imul
pop
sahf
sbb
jae
pushf
dec
(bad)
xor
imul
cmp
and
adc
sti
rol
stos
loope
jl
adc
clc
out
stos
xchg
xor
jle
mov
pop
dec
pop
dec
retf
xchg
(bad)
mov
mov
mov
imul
xchg
lea
arpl
adc
mov
repnz
sub
sub
sbb
jg
xor
mov
stos
adc
inc
push
jmp
mov
(bad)
xchg
jbe
inc
rep
out
xchg
data16
nop
add
(bad)
mov
mov
or
loope
ret
in
call
into
or
fdivr
xlat
xorps
sub
hlt
das
bound
jg
sbb
mov
pop
or
jg
ret
not
les
cwd
xchg
sbb
enter
enter
mov
pop
test
cmc
leave
popf
out
or
out
cdq
xlat
bound
fwait
xchg
sar
mov
iret
xor
ret
pop
fs
mov
idiv
pushf
mov
int3
enter
mov
cmc
mov
jle
shl
jns
mov
inc
push
aaa
in
mov
pop
mov
es
dec
aas
(bad)
mov
mov
outs
sbb
arpl
push
jne
cld
xor
stos
leave
xchg
cmps
xor
pop
cmp
push
or
adc
aad
pop
xor
xchg
mov
mul
in
pop
mov
mov
popa
sub
push
mov
lds
inc
retf
pop
adc
mov
add
out
cmc
out
mov
enter
push
ds
mov
lahf
in
cmp
jle
inc
pop
call
pop
sti
and
pop
test
in
mov
in
sub
aam
xchg
dec
pusha
inc
cmps
jmp
ins
push
mov
in
arpl
test
das
cmp
mov
(bad)
jb
cli
pop
cmps
enter
inc
fdivr
(bad)
addr16
dec
lods
jae
call
pop
push
repz
add
out
inc
push
les
out
in
test
daa
cmp
lahf
arpl
xchg
pop
shl
aad
stc
inc
mov
daa
test
push
and
mov
xchg
ficomp
cmps
nop
xor
rcl
mov
xor
data16
stos
mov
(bad)
cmp
add
fiadd
in
stos
call
push
movs
ins
jge
mov
xchg
movs
pop
push
arpl
in
out
icebp
jp
cmp
jb
mov
pop
dec
js
iret
pop
inc
cmp
arpl
jge
(bad)
fadd
xor
ret
or
sub
pop
sub
in
(bad)
mov
mov
addr16
push
outs
xchg
push
test
scas
(bad)
jo
push
inc
in
pop
or
shl
out
sar
adc
and
sub
sub
aad
fisub
inc
retf
and
aad
add
aas
and
sub
mov
(bad)
aaa
inc
mov
xchg
cwde
(bad)
movs
cmp
ret
loope
inc
shl
sbb
rcl
jmp
xor
lods
out
jns
cmp
dec
jecxz
jns
xchg
loopne
div
push
mov
mov
mov
xchg
or
pop
jae
mov
xchg
ins
add
daa
mov
cwde
push
call
div
cmps
ror
push
call
fistp
fistp
xor
pop
dec
or
cli
nop
(bad)
scas
(bad)
into
and
loop
jl
xchg
and
sub
pop
and
xchg
pushf
rcl
inc
gs
push
or
and
in
push
inc
push
add
test
inc
lea
ret
cwde
inc
inc
jae
and
jae
mov
jecxz
cs
or
fs
mov
cmp
mov
bound
imul
jns
and
sbb
lahf
inc
popa
mov
into
mov
ds
mov
pop
fidiv
mov
fcmovnb
sti
jecxz
data16
dec
inc
xchg
adc
fdivr
xor
cmp
in
je
dec
and
repz
pop
test
sbb
ja
dec
cli
stc
adc
dec
iret
xor
adc
aas
and
test
mov
aam
imul
pop
pop
(bad)
adc
pop
div
mov
les
scas
cld
pusha
sub
sbb
pop
or
les
mov
mov
push
xchg
test
loope
je
pop
hlt
jbe
or
xor
adc
mov
nop
mov
adc
hlt
xchg
aam
mov
adc
in
push
fucom
ins
sbb
ja
test
loope
ret
test
or
xor
outs
push
ret
pop
sbb
fistp
imul
out
push
nop
loopne
add
dec
repz
aaa
(bad)
jmp
cwde
cmp
mov
sub
push
mov
cmp
pop
xor
nop
out
add
jecxz
and
xor
cmp
fnstenv
xchg
jbe
push
sbb
scas
adc
inc
les
(bad)
and
jnp
mov
sbb
and
cmp
mov
call
(bad)
(bad)
fwait
mov
(bad)
lock
(bad)
into
inc
jge
jl
es
xchg
js
fmul
stos
iret
jo
adc
cmp
pop
aaa
aam
and
in
mov
into
loopne
(bad)
iret
call
xor
call
sub
jb
xchg
daa
dec
sbb
add
mov
push
add
sbb
retf
jge
in
or
jae
or
jle
jl
jo
fisttp
cmp
sub
loop
(bad)
xlat
addr16
fnstsw
lock
sub
mov
mov
jae
shl
sbb
jno
pop
mov
and
mov
xor
jmp
stc
clc
sbb
shr
add
rcr
pop
ja
push
mov
into
jle
fisub
jp
xor
loop
mov
movaps
fld
gs
inc
and
pop
push
xchg
pop
rcr
mov
push
cmp
dec
repnz
adc
sub
jle
jo
(bad)
fld
popf
(bad)
movs
repnz
scas
xchg
xchg
xor
mov
gs
(bad)
xchg
inc
dec
sti
push
fsubr
outs
(bad)
cdq
dec
jg
and
shr
dec
les
mov
mov
hlt
adc
and
dec
mul
inc
xchg
inc
cmp
arpl
shr
mov
call
mov
inc
adc
jle
out
jo
call
fadd
mov
sqrtps
mov
int
cmps
imul
sub
inc
(bad)
std
xchg
jmp
ret
xchg
mov
push
inc
sub
and
mov
in
cmps
xchg
and
stos
adc
ins
mov
stos
add
out
xchg
outs
pop
mov
aad
shr
cld
add
movs
popa
adc
jmp
pop
inc
outs
rol
pop
jl
xor
xchg
push
ins
stos
mov
sub
jl
mov
push
fucomi
pop
mov
in
test
iret
cwde
lock
jo
or
in
jbe
std
jge
call
ret
sub
stos
push
push
sbb
inc
dec
fstp
inc
and
ins
in
fisttp
sahf
daa
mov
iret
jno
cdq
mov
lods
push
xchg
and
mov
test
dec
fwait
xchg
mov
aam
jecxz
test
mov
pop
loope
cmps
add
fucomp
sbb
push
adc
cmp
das
xchg
aas
mov
mov
call
fucom
pop
sub
fnstcw
loop
int
mov
in
ins
(bad)
out
cmp
xor
dec
movs
test
fcmovu
popf
cld
mov
lods
movs
xchg
cmp
cmp
outs
jmp
fild
push
sbb
or
pushf
inc
inc
test
imul
inc
push
movs
ds
inc
mov
enter
mov
pop
ins
dec
mov
fimul
lods
push
in
jg
movs
mov
lahf
pop
test
xchg
inc
mov
mov
mov
pop
push
popa
cld
popa
mov
test
mov
movs
inc
mov
fmul
call
sub
jo
ror
ret
lahf
sti
into
or
repz
mov
daa
mov
add
arpl
xor
in
mov
adc
jp
cmp
setne
gs
(bad)
sahf
xchg
ss
cmps
popf
int3
push
(bad)
sub
rol
inc
mov
std
and
lock
inc
shl
pop
cmp
dec
nop
dec
pop
fild
sub
push
lock
sbb
les
cmps
repnz
ja
and
jl
push
dec
xlat
jns
pushf
sahf
push
push
jae
retf
jp
cmp
cmps
in
cmp
xchg
inc
mov
xor
cmp
xchg
shl
outs
ret
cwde
inc
adc
push
cmp
aas
mov
nop
adc
dec
loope
fwait
std
sbb
mov
and
jnp
jp
aas
imul
lahf
or
dec
popf
retfw
inc
jmp
or
pop
jmp
sti
fadd
or
fiadd
and
arpl
pusha
das
test
dec
add
loop
test
int
or
sub
clc
add
xchg
sub
retf
pop
dec
in
cmps
cs
or
dec
shl
(bad)
jp
fsub
and
push
dec
mov
lahf
aas
icebp
out
mov
arpl
lods
dec
sub
(bad)
neg
mov
in
or
adc
add
push
cwde
arpl
jmp
hlt
data16
sbb
sbb
je
in
movs
ins
xchg
adc
cmp
or
not
xchg
xchg
stos
idiv
dec
(bad)
daa
sub
cli
inc
aaa
sbb
pusha
push
sub
xlat
or
push
add
sbb
iret
mov
mov
movs
iret
popa
mov
mov
(bad)
xchg
inc
shl
out
ins
pop
or
sbb
stos
mov
jo
nop
js
xlat
sub
(bad)
shl
ins
pop
and
jmp
and
arpl
xor
stos
cmp
mov
jmp
arpl
jecxz
call
movs
data16
cmps
push
push
pusha
push
mov
pop
loopne
js
repz
retf
mov
movs
in
les
jae
mov
xchg
and
adc
pop
dec
or
ficomp
fist
push
test
iret
xchg
xchg
mov
sbb
(bad)
xor
test
xchg
push
push
call
ret
movs
shr
mov
mov
push
or
sub
xor
arpl
loopne
mov
out
arpl
mov
sbb
aas
push
xchg
xchg
loopne
cmps
outs
daa
gs
push
and
cmp
cmps
push
and
jl
icebp
fs
sbb
xor
outs
cs
imul
and
out
adc
js
in
adc
sbb
js
test
scas
and
fsubp
lahf
test
xor
push
cmp
clc
sub
pop
adc
cmps
jp
fbld
int
mov
jae
ins
and
stos
icebp
nop
leave
pop
cmp
outs
xchg
jo
ret
cmp
icebp
cmp
stos
ja
ins
ds
ret
sbb
aad
pop
sbb
repz
gs
daa
jb
ja
push
nop
daa
xchg
fs
jmp
push
jae
sar
out
mov
(bad)
jo
push
stos
cdq
or
into
dec
mov
neg
or
sbb
jge
xor
pop
sbb
loopne
movs
lahf
pop
mov
or
scas
add
mov
in
in
in
adc
adc
(bad)
lds
in
repz
loopne
daa
push
mov
mov
out
clc
push
inc
pop
pushf
or
inc
mov
pop
stos
lds
push
repnz
icebp
arpl
ss
add
xchg
pop
mov
cmps
cmc
call
sar
sub
sub
stos
sbb
pop
adc
add
mov
imul
imul
jo
mov
pop
or
jns
ins
call
push
out
ror
fmul
mov
stc
cmps
addr16
ret
inc
dec
gs
(bad)
inc
repnz
mov
sbb
push
inc
cmps
arpl
xor
fcom
cmp
outs
mov
js
daa
fdivrp
mov
mov
cmps
cli
jmp
shr
ret
pop
jmp
cmp
movs
dec
jge
dec
add
(bad)
sbb
sahf
mov
js
retf
mov
inc
sbb
out
test
xchg
fimul
lahf
shl
sbb
sbb
repz
arpl
push
and
hlt
pop
and
test
clc
cmp
mov
pop
fild
daa
or
cwde
jge
mov
jge
jne
loopne
mov
mov
rcr
into
sbb
xor
sbb
(bad)
xchg
std
dec
push
adc
test
mov
cmp
xor
mov
xchg
addr16
jl
aad
mov
adc
dec
push
in
aad
fild
push
or
js
fild
xor
aam
inc
cmp
jl
in
and
push
push
scas
fimul
adc
pop
xchg
sbb
movs
shr
jg
in
cmp
cmp
repz
inc
outs
xor
mov
jg
pop
sbb
jle
and
xlat
pop
push
jmp
lods
ss
or
jp
push
sub
mov
test
inc
xchg
and
xchg
cmps
es
jmp
or
mov
std
call
push
push
fcmovnb
push
dec
jae
jecxz
dec
arpl
stc
mov
dec
push
icebp
js
push
pmullw
je
dec
sahf
cmp
adc
mov
cmp
or
imul
push
js
inc
mov
icebp
jbe
pmulhuw
xor
xchg
pop
int
inc
cmp
pop
mov
adc
or
mov
mov
push
pop
addr16
jmp
mov
and
jmp
aam
leave
fs
jno
mov
cmps
jl
fdivr
mov
enter
test
rcr
popa
sub
call
ins
inc
fs
mov
lods
pop
sbb
mov
and
outs
(bad)
rcl
cmc
(bad)
and
mov
add
sub
and
sub
lods
push
jne
push
les
popa
aad
sar
dec
mov
xchg
call
sub
int3
inc
mov
scas
sbb
es
mov
fs
and
add
(bad)
and
and
pop
mov
sbb
mov
sub
push
mov
lea
scas
xchg
ins
push
mov
retf
mov
fistp
daa
or
adc
arpl
mov
inc
xor
movs
clc
sti
cmc
(bad)
outs
inc
ror
ins
call
adc
push
(bad)
cmp
and
aaa
push
jbe
cmp
add
loop
arpl
xchg
jae
cmc
push
out
sbb
xchg
std
adc
cmp
addr16
push
inc
cmp
mov
movs
pusha
push
jl
shr
outs
jo
cmps
das
add
pop
(bad)
movs
xchg
rcr
jmp
and
out
sbb
out
popa
arpl
sar
inc
fwait
inc
pop
es
int
adc
xor
mov
retf
or
xchg
mov
je
xor
jae
push
neg
pop
neg
stc
inc
cmp
mov
loope
je
cs
or
jle
call
or
cmp
xchg
aad
push
push
mov
stos
scas
imul
retf
out
in
(bad)
sahf
mov
stc
mov
xchg
or
test
(bad)
arpl
push
fisub
lods
rol
jl
(bad)
push
in
cdq
icebp
loop
or
xor
cmps
sar
lods
fwait
imul
aam
cmp
cmps
bound
outs
push
dec
add
movs
lahf
rol
push
mov
or
fbstp
pusha
mov
mov
dec
in
xor
inc
adc
pop
retf
mov
dec
or
or
fcmovnb
push
xchg
ret
or
xchg
popf
out
pop
(bad)
scas
mov
jbe
fcmovb
iret
retf
xor
stc
cmp
les
mov
lea
sub
pop
dec
loope
mov
iret
push
(bad)
sahf
mov
int
adc
je
xchg
mov
sub
rol
ret
lods
inc
add
lock
mov
add
clc
sahf
xchg
push
popa
push
or
ins
lds
lods
or
and
in
xor
fwait
imul
pop
mov
sub
in
or
leave
jp
in
sbb
push
jge
pop
outs
out
aas
shl
(bad)
jb
mov
xor
gs
lahf
stc
adc
popa
dec
fisttp
into
xchg
iret
adc
inc
stc
es
imul
pop
push
pushf
popa
out
mul
pop
cmp
add
(bad)
mov
in
pop
mov
in
mov
add
fbld
mov
(bad)
dec
nop
shr
sbb
inc
jnp
sub
and
jmp
das
mov
sub
push
mov
push
add
jmp
jmp
add
pop
inc
aam
or
mov
scas
ds
mov
shl
adc
int3
mov
sub
fst
mov
jne
push
and
xchg
repnz
out
or
push
mov
pop
repnz
jecxz
adc
jl
test
outs
mov
fucomp
dec
rol
(bad)
loopne
xor
mov
mov
sbb
out
push
fimul
fnstenv
mov
add
idiv
pop
lahf
pop
xor
inc
pop
xchg
push
pop
lods
xchg
enter
pushf
lods
ds
cmp
sub
sub
retf
f2xm1
(bad)
sub
enter
pop
mov
dec
cs
jecxz
fld
(bad)
clc
das
(bad)
mov
aad
vpunpcklbw
cmp
je
pushf
pop
mov
xchg
mov
ret
loopne
out
fisub
pop
xchg
(bad)
sub
mov
shl
add
retf
imul
and
scas
push
hlt
test
sbb
jae
out
jmp
imul
xchg
out
rcr
sbb
push
or
lea
popf
cwde
jecxz
enter
jle
mov
xor
adc
in
leave
push
addr16
mov
dec
fldcw
sti
mov
adc
and
push
call
mov
and
sub
cmp
scas
dec
jg
stc
(bad)
push
jbe
inc
stos
or
das
jb
xlat
push
cmp
scas
cmp
xchg
ins
add
nop
xor
(bad)
cmp
inc
rcr
repz
mov
pop
push
dec
inc
or
sub
divps
jb
lods
xor
xchg
adc
out
and
enter
sbb
scas
je
fwait
sub
add
call
inc
xchg
xor
rol
lea
lds
push
adc
out
cmps
sub
xor
xchg
gs
jl
dec
imul
imul
cmp
repnz
push
jl
pop
out
cld
out
loop
in
push
or
(bad)
and
mov
out
or
cmp
xlat
dec
add
data16
jg
ror
mov
aaa
test
pop
xlat
xchg
mov
retf
rcr
ss
dec
sbb
dec
fstp
jae
jo
test
push
push
mov
xor
lahf
popf
movs
dec
daa
rcl
dec
and
cli
scas
mov
xchg
jl
jbe
out
aas
xlat
pop
add
test
pop
sub
rol
xchg
cs
add
es
out
in
xor
clc
mov
shl
mov
add
add
ret
jae
cdq
and
pop
pop
xchg
and
bound
sti
out
or
xor
dec
inc
retf
cmp
fbstp
adc
hlt
sub
sub
xor
call
fld
(bad)
cld
repz
ins
mov
or
xchg
in
mov
cmp
dec
movs
mov
xchg
dec
cmps
jbe
sub
ret
and
push
repnz
mov
xor
mov
sub
test
and
call
mov
sbb
shl
sbb
adc
xchg
inc
ret
lahf
adc
fnstenv
fisub
ins
sbb
push
test
sti
clc
lds
xchg
or
rcl
adc
inc
mov
fidivr
push
rcl
mov
(bad)
pusha
sub
js
into
push
or
js
int3
adc
jno
push
jns
sub
nop
pop
call
or
dec
(bad)
mov
pop
mov
dec
(bad)
mov
repnz
jl
adc
jne
in
int3
xor
fcmovnu
mov
sbb
sti
cs
pushf
xchg
imul
cmp
mov
inc
bswap
jp
lods
lea
scas
out
retf
mov
cmc
jne
imul
add
mov
push
jnp
nop
pop
pop
dec
mov
repnz
cld
ja
or
test
mov
xchg
sar
mov
outs
xchg
imul
jno
(bad)
dec
cmp
icebp
mov
push
lds
(bad)
adc
or
mov
mov
sub
jno
frstor
adc
fcomp
jno
inc
dec
test
(bad)
jns
bound
mov
aaa
adc
fiadd
mov
push
call
xchg
cmp
pusha
sub
sar
mov
mov
into
mov
mov
and
(bad)
movs
leave
adc
ret
sahf
test
lods
xor
mov
jmp
call
into
jno
aam
rcl
xor
or
dec
das
in
fsubr
and
mov
(bad)
aam
pusha
push
sahf
sub
sahf
xor
(bad)
lods
add
jbe
sub
aaa
(bad)
mov
jo
jmp
cld
cmp
retf
push
xchg
xchg
cdq
sbb
pop
lds
aaa
lods
jne
test
mov
lods
out
iret
jmp
jl
or
xor
nop
mov
sbb
mov
mov
dec
mov
add
cli
sbb
xor
lock
mov
mov
or
bound
sub
out
mov
or
sbb
(bad)
bswap
pop
push
jmp
mov
lock
dec
movs
push
or
lods
scas
(bad)
fstp
cmp
jb
jmp
sub
adc
xor
push
test
xchg
lds
ret
pop
inc
rol
or
add
test
xchg
std
(bad)
ss
addr16
mov
ins
jae
stos
into
div
inc
jns
mov
xchg
popf
test
adc
adc
call
repz
arpl
(bad)
xchg
and
retf
push
fcmovnbe
or
sbb
xchg
arpl
sub
push
imul
add
loopne
push
add
inc
cmp
xchg
stc
add
lods
dec
stc
adc
shl
bound
cmp
mov
jnp
movs
sub
adc
and
xchg
sub
enter
lods
test
(bad)
xchg
imul
and
jmp
cmp
add
mov
call
push
xchg
sti
icebp
ins
(bad)
movs
call
pop
sub
repz
lea
push
std
in
in
add
repnz
rcr
movs
vphadddq
ja
fadd
mov
pop
xchg
add
test
adc
leave
call
xchg
es
popf
clc
jge
xor
xchg
mov
sub
retf
fwait
cmp
retf
inc
adc
mov
xchg
push
cld
out
mov
mov
inc
or
push
sahf
sahf
movs
es
sbb
sub
push
push
jp
mov
imul
rcr
pop
dec
push
xchg
sub
push
iret
movd
(bad)
cmc
push
dec
clc
test
test
lods
out
xchg
pusha
out
sbb
sub
or
fld
iret
ins
mov
add
mov
mov
pop
cli
xor
or
shl
cmp
pop
loope
push
push
mov
cmps
push
sbb
pop
inc
test
cs
sbb
mov
xchg
mov
mov
(bad)
test
push
adc
dec
pop
not
mov
jbe
fcomip
adc
cmp
push
cmp
out
or
jle
test
cmp
mov
scas
es
add
stc
push
mov
(bad)
xor
xor
pop
bound
mov
aas
mov
repnz
jmp
ja
inc
sar
(bad)
push
sub
push
test
mov
fistp
jnp
xchg
or
xlat
mov
pusha
(bad)
lods
ds
icebp
loop
mov
fcom
jns
loopne
mov
cmp
xchg
repz
es
in
pop
push
jbe
sti
and
inc
pop
mov
add
arpl
cmps
movs
in
xlat
test
stos
mov
jnp
mov
popf
arpl
repz
push
into
not
jmp
int
ins
js
mov
mov
dec
mov
sub
(bad)
and
xchg
outs
jnp
xor
data16
in
rcr
xor
test
or
rcr
outs
fucomi
jl
das
adc
add
push
retf
leave
add
sti
add
mov
in
mov
or
and
or
daa
adc
nop
jmp
add
les
jg
ret
je
add
xchg
pop
std
push
imul
test
das
aad
jge
mov
cmp
(bad)
cwde
mov
out
and
push
retf
and
add
frstor
sbb
cmc
cdq
int
jecxz
scas
jge
lahf
or
jmp
(bad)
and
outs
inc
mov
adc
ja
rol
jae
push
mov
mov
mov
stc
imul
out
push
jg
inc
mov
jo
xor
mov
call
sbb
pop
out
int3
pop
imul
imul
retf
lods
dec
dec
jmp
adc
sub
loopne
stc
popa
jne
cs
jecxz
test
xor
retf
sub
fwait
xchg
and
push
adc
mov
(bad)
mov
mov
js
mov
mov
sub
pop
add
repz
jne
xor
loop
in
mov
mov
js
ins
adc
vpsraw
sar
call
push
jno
sar
cdq
out
xor
rcr
sbb
fisttp
mov
stc
jno
mov
(bad)
jmp
inc
pushf
mov
cmps
mov
mov
repz
mov
shl
scas
(bad)
xchg
and
push
arpl
out
dec
arpl
cmps
jecxz
add
fnstsw
xchg
dec
ins
cdq
push
inc
fstp
xchg
mov
and
repz
outs
fld
(bad)
fwait
repz
ret
imul
or
or
cmp
pop
sahf
jg
adc
lea
test
sti
sbb
inc
mov
das
fs
aam
sbb
sub
in
jnp
fs
mov
xchg
dec
in
push
pushf
adc
dec
push
cmp
mov
jl
ins
adc
dec
int
(bad)
push
(bad)
push
adc
pop
push
xor
inc
mov
test
daa
test
inc
rcl
stos
jp
xchg
cmp
adc
mov
scas
imul
pusha
or
jmp
sub
xlat
sub
fdivr
outs
mov
popf
popf
xchg
adc
cmc
push
dec
pusha
in
icebp
mov
dec
jmp
ds
fadd
mov
in
test
dec
adc
and
xor
add
jl
ds
inc
ret
or
and
mov
push
cmp
(bad)
xchg
xchg
test
mov
pop
test
inc
call
dec
jbe
or
inc
scas
inc
or
pushf
sti
repnz
adc
or
aas
mov
aas
cmp
cmp
imul
dec
scas
sub
jb
mov
or
xchg
stos
jmp
sub
iret
js
lock
in
pop
rol
mov
ins
mul
add
sbb
ins
stos
stos
or
add
movs
mov
and
xor
xor
int3
pop
ins
in
xchg
mov
btc
enter
add
and
sub
add
push
in
test
inc
sub
inc
or
adc
or
outs
sub
mov
inc
dec
xor
and
(bad)
loope
in
ins
sahf
xchg
(bad)
or
mov
push
cmp
add
jae
mov
in
xchg
shl
jns
dec
or
pop
sbb
movs
(bad)
(bad)
cmp
pop
sahf
mov
or
or
push
sub
or
imul
fidiv
mov
lahf
mov
aaa
cdq
adc
ror
adc
mov
add
aaa
mov
push
mov
jp
rcl
push
push
fcomp
loopne
into
(bad)
mov
mov
push
repz
call
fstp
das
nop
ja
add
call
adc
pusha
mov
add
dec
adc
shl
sti
retf
sbb
pushf
ja
pop
leave
dec
stos
jns
out
add
mov
data16
aaa
and
mov
add
pop
sub
jecxz
fxch
test
mov
std
shl
jbe
mov
push
sbb
(bad)
lahf
pop
aas
pop
stc
add
mov
mov
stos
jle
dec
pop
repz
cmp
loopne
stc
mov
arpl
push
(bad)
cmp
mov
pop
xor
in
lock
stos
fcom
or
fs
push
fadd
and
xor
bound
sar
jmp
adc
icebp
or
lods
in
in
cmps
pop
int3
mov
lds
fwait
jnp
enter
sub
fsubr
push
sub
ja
stc
mov
push
shl
fdivr
xor
mov
jle
add
fst
xor
inc
outs
out
rcr
jmp
(bad)
mov
lahf
or
hlt
lds
ja
retf
mov
and
push
nop
and
clc
and
cmc
cmp
jns
mov
imul
into
rol
and
xchg
lahf
(bad)
pop
(bad)
mov
cmp
jle
imul
(bad)
data16
jge
push
push
std
pavgb
adc
lahf
pop
add
out
pop
(bad)
(bad)
push
adc
and
push
add
cdq
call
das
sub
(bad)
push
jecxz
(bad)
in
cmp
(bad)
or
adc
mov
pushf
test
mov
ss
jmp
nop
je
mov
lods
std
jg
jne
(bad)
xchg
sub
in
out
out
aaa
outs
pop
jge
pop
ud1
ds
xchg
pop
repz
inc
dec
mov
or
sub
ret
cmp
and
push
xchg
pusha
ja
ret
mov
inc
mov
cmp
out
push
pop
(bad)
mov
je
mov
pop
cmps
int
test
jbe
add
adc
enter
stos
cdq
and
cmp
pop
push
clc
fsub
fld
retf
push
jns
mov
cmovno
xor
cmp
sahf
lods
xchg
pop
sar
mov
cdq
pop
gs
fucomi
jne
out
mov
pop
sub
or
pop
fcom
retf
xor
in
in
mov
add
pop
loope
aas
add
push
(bad)
int3
xor
stos
xor
call
mov
or
in
shl
pop
scas
fld
and
jmp
test
cmc
fwait
mov
into
fsubr
lahf
inc
push
les
retf
xlat
fxch
ins
mov
cld
push
es
xor
out
and
push
outs
mov
nop
add
inc
(bad)
dec
jmp
inc
cmps
jl
dec
dec
sbb
mov
mov
and
cmc
movs
xor
xor
mov
sbb
aad
mov
jg
mov
rcr
loope
mov
dec
dec
call
ins
sbb
loope
mov
out
pop
popf
retf
mov
adc
cmp
scas
pop
cmc
cmp
fwait
push
pop
jns
xchg
pop
adc
xchg
aad
jmp
mov
retf
mov
or
fisubr
cmp
dec
mov
xor
ja
pushf
jb
leave
push
ret
ins
jmp
aas
retf
adc
dec
jecxz
push
add
inc
das
push
mov
test
add
inc
(bad)
xor
sub
xchg
bswap
push
sub
pop
pusha
add
ret
enter
xchg
inc
mov
adc
jg
cdq
mov
fdivr
aad
jae
(bad)
sahf
mov
cld
adc
ds
jno
in
jbe
dec
loopne
mov
hlt
popa
mov
sub
fstp
sti
xlat
add
or
push
int
test
lahf
imul
push
add
(bad)
hlt
out
out
mov
push
popa
test
xchg
inc
sub
push
stc
(bad)
sar
sbb
aas
add
das
fs
jl
cdq
sub
fadd
pushf
inc
dec
in
cmps
ficom
cli
loope
or
shl
in
adc
js
jae
pop
push
test
retf
pop
mov
inc
pop
les
aas
inc
int3
je
ds
cs
sub
test
xchg
pop
or
mov
pop
mov
xor
cli
mov
mov
push
push
sahf
mov
les
mov
jnp
into
loopne
pop
aaa
mov
sub
xor
(bad)
(bad)
adc
dec
and
jns
test
mov
mov
xor
sahf
je
addr16
and
or
dec
inc
call
cmps
and
dec
pop
push
jb
std
add
mov
xchg
sub
repnz
sub
sub
ret
inc
pop
daa
jle
pop
in
push
fbld
addr16
and
retf
lahf
xchg
inc
push
into
sbb
add
ins
stos
call
xchg
add
adc
jge
loopne
not
int
nop
scas
mov
mov
dec
mov
add
inc
outs
call
jg
lahf
lods
jne
and
xor
mov
mov
or
xchg
cmp
jmp
rcl
test
push
mov
jne
jo
xchg
dec
outs
(bad)
pop
scas
mov
inc
out
ss
test
push
or
scas
fisubr
cmp
jns
jb
cli
jp
xor
push
movs
ror
jl
jmp
jo
(bad)
push
test
es
xchg
pop
sub
jge
sahf
out
mov
push
lods
fadd
test
dec
jl
fucom
dec
bound
sahf
sub
stos
scas
mov
retf
mov
jge
jecxz
jnp
enter
das
sub
dec
xchg
push
adc
arpl
mov
pusha
out
lods
mov
mov
xchg
lahf
call
cwde
push
push
je
sbb
xchg
push
fdiv
(bad)
int3
push
fsubr
inc
dec
sbb
leave
add
pop
sub
push
fwait
retf
test
and
jmp
pop
lods
pop
addr16
sbb
pop
and
push
mov
xor
shr
retf
in
pop
aaa
mov
mov
adc
out
add
jg
popf
lds
idiv
xchg
pop
push
in
lods
dec
sub
mov
sub
sub
mov
inc
sar
push
or
jbe
jmp
dec
dec
repz
dec
jb
jo
aad
pop
pop
mov
fst
mov
lea
inc
dec
adc
xor
jno
or
jae
cmp
dec
push
sub
add
ficom
or
jl
sub
xchg
push
jnp
sub
iret
gs
loop
inc
add
xchg
aaa
arpl
jns
lods
inc
outs
stos
xchg
add
(bad)
mov
imul
popf
xor
mov
xchg
fsub
dec
js
aam
cli
ins
scas
mov
push
mov
arpl
arpl
scas
fbld
pop
add
cdq
shl
add
add
adc
xor
cwde
pop
repz
pop
addr16
lods
mov
and
push
stos
pop
cmps
xor
pop
in
fstp
iret
fdiv
repnz
xor
leave
push
lea
inc
cmp
jmp
fwait
xchg
ins
imul
jecxz
jmp
sar
inc
addr16
and
fmul
xor
xchg
imul
jae
mov
xchg
cmc
sub
lock
and
aad
int3
or
(bad)
jns
or
fbld
out
leave
aad
das
or
movs
jecxz
pop
sbb
outs
xchg
xor
xor
outs
shl
rcr
mov
add
icebp
or
daa
bound
ins
ds
test
sbb
les
or
std
cs
pop
out
mov
add
mov
(bad)
sar
mov
neg
fidivr
lahf
inc
iret
fdivr
(bad)
mov
addr16
in
sar
in
jg
cmc
test
mov
inc
enter
mov
enter
loop
imul
sbb
imul
mov
inc
mov
or
lea
inc
xchg
dec
shl
push
sahf
pop
mov
jmp
in
loop
bound
mov
adc
adc
aad
xor
adc
popf
mov
mov
lods
or
sub
mov
leave
ins
jmp
cmp
and
rcr
icebp
pusha
dec
cmc
hlt
dec
push
stc
sbb
add
shl
call
mov
in
push
js
sbb
sbb
pusha
xor
add
cmps
and
nop
icebp
push
push
dec
cmp
ror
ins
jg
cli
sbb
sub
je
fcmove
push
dec
cdq
sub
mov
in
mov
fstp
or
sub
adc
call
dec
cmp
lods
jmp
mov
fs
(bad)
fisttp
sar
add
xchg
xchg
add
xchg
mov
lods
push
sub
dec
jns
out
gs
cwde
sub
inc
pop
test
or
lods
xor
mov
sub
les
fwait
sbb
pop
sbb
cmc
rol
sub
call
stos
(bad)
cmp
lahf
jae
out
repnz
mov
outs
je
push
aaa
je
rcr
out
push
out
adc
icebp
std
adc
in
mov
or
hlt
aaa
xor
xchg
int
arpl
sub
or
xchg
(bad)
loopne
ds
sub
popf
test
inc
mov
ret
xchg
frstor
mul
ins
stc
xchg
push
lods
push
add
push
add
cmps
sar
or
jo
mov
mov
fisttp
jmp
es
sub
xor
push
lahf
es
xchg
loop
mov
cwde
fistp
add
mov
dec
mov
push
pop
(bad)
add
in
adc
jb
outs
sub
jg
imul
mov
and
mov
les
das
loop
cli
aaa
hlt
dec
test
scas
sar
int3
rcl
(bad)
shl
xor
xor
(bad)
test
mov
cmp
jnp
ret
sbb
fwait
or
lock
sar
pusha
rcr
or
inc
lahf
test
cld
mov
movs
pop
leave
dec
mov
jns
movs
das
or
in
and
and
pop
push
loop
cmp
sbb
fisubr
mov
add
icebp
js
xlat
call
fcom
imul
or
call
sahf
jno
inc
add
rcl
cli
scas
add
arpl
and
retf
hlt
xor
mov
mov
cmp
mov
in
mov
xor
(bad)
adc
sub
xor
bound
inc
out
cmp
icebp
cmps
pop
sbb
dec
(bad)
xlat
pop
add
ja
inc
push
fisttp
mov
lods
jg
or
or
or
shl
adc
ret
fs
outs
mov
lds
xchg
fbstp
mov
xor
inc
mov
imul
mov
imul
clc
dec
fistp
sbb
add
sar
daa
xlat
push
out
jne
add
fldenv
jne
adc
aam
out
mov
push
push
lock
loop
pop
ret
jecxz
adc
xor
test
fst
loop
movs
or
mov
sub
cmp
cwde
lds
sti
in
test
pop
add
sar
push
cmp
je
dec
in
pushf
pop
add
or
mov
inc
sbb
and
stos
xchg
cmp
xchg
mov
cmps
arpl
push
fdiv
call
adc
movs
stos
cmp
or
lock
and
popa
push
and
gs
ret
dec
outs
popa
jb
jns
jbe
aad
cld
xor
lods
gs
sar
out
or
mov
shl
fcom
push
push
jg
cmp
adc
out
js
cmp
outs
addr16
lods
pushw
scas
jecxz
stos
xchg
xor
or
out
sub
cmp
mov
add
ret
mov
ss
loopne
lods
(bad)
xor
fild
mov
(bad)
fmul
add
cmp
repz
sub
jle
icebp
jnp
je
mov
rcr
sub
movs
call
das
cld
cmp
jmp
ret
int3
cld
test
into
inc
fwait
cmc
sub
mov
test
hlt
ss
mov
pop
pushf
loopne
xchg
(bad)
test
ss
test
adc
adc
cmp
cmp
xchg
rcr
popf
(bad)
or
retf
outs
in
div
mov
adc
add
xchg
arpl
sbb
mov
cmp
sub
add
xlat
lods
sahf
or
mov
fsub
inc
mov
jbe
es
sbb
jle
adc
inc
dec
pusha
shl
int
cmp
icebp
add
and
pop
call
push
pop
call
inc
leave
pop
mov
pop
add
cli
jmp
and
jmp
fdivr
push
leave
xchg
pop
scas
add
xchg
popa
mov
repz
xchg
test
outs
pop
pop
out
ja
fcomp
cmp
cmp
inc
loop
pop
(bad)
inc
jp
ja
pop
pop
and
mov
call
sbb
inc
jne
mov
dec
nop
lahf
call
dec
sub
leave
or
lods
cmp
xchg
test
cmp
xchg
push
lods
push
pop
mov
cmp
or
fmul
mov
xor
push
mov
xchg
add
cmp
in
movs
adc
or
cmp
div
mov
push
fwait
in
or
popf
aaa
and
jo
cmc
push
jmp
push
jb
jns
mov
or
mov
xor
enter
mov
push
aaa
xor
sub
dec
xchg
in
imul
xor
stos
sub
test
dec
push
xor
arpl
mov
imul
dec
aad
add
ret
adc
bound
(bad)
ror
and
fs
(bad)
mov
jge
cmp
test
call
stos
xor
push
adc
pop
jecxz
sbb
ret
jns
(bad)
mov
jns
ret
shl
dec
push
lods
aad
or
out
cwde
jle
mov
dec
jecxz
in
mov
(bad)
dec
lea
loop
cmps
loope
js
add
push
jge
sub
xor
dec
xchg
jmp
popa
adc
fiadd
out
push
inc
daa
popa
add
jb
sub
dec
push
add
pop
lock
add
mov
push
adc
stc
mov
stos
add
imul
mov
loop
out
movs
(bad)
xor
lods
adc
xor
push
sahf
dec
rcr
mov
push
ret
cmps
outs
fnstsw
(bad)
mov
outs
sti
pop
pop
push
cmps
call
lahf
ret
mov
loope
int3
in
sub
cmp
js
es
jmp
jne
enter
stos
add
dec
push
cmp
mov
push
inc
shl
in
pop
push
aam
add
pop
pop
test
lahf
pop
dec
jmp
cmp
cmps
mov
sbb
call
xchg
pop
add
adc
cmp
stc
aam
xor
out
lods
data16
in
in
cdq
pop
lods
sti
push
push
push
ins
jne
sub
imul
int3
shr
jle
repnz
mov
pop
pop
dec
stos
movs
lds
push
jb
call
and
cmp
jmp
ret
dec
daa
shr
push
lods
add
arpl
lea
inc
and
jl
(bad)
int3
dec
xchg
in
inc
xchg
scas
add
xor
sar
jbe
sbb
xchg
add
adc
mov
lea
out
dec
or
push
inc
es
dec
mov
mov
or
sub
push
pop
jne
cmp
add
mov
cmp
push
adc
jp
(bad)
mov
scas
sbb
in
cld
enter
and
stos
movs
sub
stos
inc
dec
fimul
in
sbb
(bad)
cmps
xchg
xchg
mov
jbe
mov
sub
pop
iret
mov
sbb
imul
aas
aam
or
dec
(bad)
jns
inc
mov
aas
pop
in
cdq
stos
jae
pop
fcmovnu
cli
popa
cmp
push
sbb
fld
xchg
ficom
idiv
jmp
out
pop
fsubr
jmp
jge
push
jns
shl
push
leave
sub
jmp
hlt
es
movs
jecxz
(bad)
sub
or
cwde
push
inc
dec
stc
stos
cmp
or
jp
popf
rol
popf
jmp
push
mov
mov
mov
and
and
mov
mov
pop
add
mov
mov
(bad)
and
mov
pop
jle
xchg
or
mov
ins
dec
xor
je
push
sub
fnstcw
out
dec
fneni(8087
push
sub
test
xchg
add
lock
push
push
jp
add
add
mov
mov
sub
jle
mov
nop
je
mov
addr16
cmp
mov
inc
nop
sti
mov
jle
push
(bad)
jns
and
mov
arpl
pop
add
stos
lods
mov
or
std
xor
push
fiadd
sbb
sbb
jbe
mov
out
or
in
nop
cmps
xor
sub
mov
leave
daa
jbe
mov
dec
push
mov
pop
fsubr
fcom
jo
into
dec
movs
data16
mov
add
and
fstp
mov
or
adc
call
cmp
ins
hlt
pop
jg
data16
mov
mov
fild
mov
movzx
or
push
push
fdivr
xchg
(bad)
outs
cmps
and
inc
pop
sub
push
adc
sti
pop
xor
xor
inc
jecxz
in
mov
xchg
or
jne
pushf
hlt
push
gs
test
pop
neg
mov
inc
inc
jp
xor
cmp
xor
jb
shl
or
mov
test
loopne
xor
popf
xchg
div
cmp
push
or
pop
fst
imul
push
hlt
mov
repnz
std
pop
push
mov
mov
in
mov
mov
(bad)
aam
push
loop
rol
inc
mov
add
xchg
ja
push
or
xor
mov
mov
and
stc
mov
mov
nop
movs
retf
std
xor
(bad)
loopne
xor
(bad)
mov
ins
jp
sbb
test
stos
es
fucomp
dec
jmp
mov
cmps
into
jecxz
xor
jp
push
inc
(bad)
jmp
inc
adc
in
push
xor
daa
out
arpl
(bad)
aam
or
cmps
loop
mov
ret
test
inc
mov
add
ss
push
cmp
push
(bad)
cmp
nop
stos
retf
cwde
pop
and
cmc
push
pusha
sub
shl
mov
cmp
test
pop
jge
bswap
inc
xor
lea
ret
loop
mov
push
leave
cmp
stos
scas
adc
(bad)
cmp
sub
popa
mov
mov
and
pop
cmp
push
std
stc
push
fiadd
and
cmp
loope
retf
or
mov
(bad)
out
fwait
mov
or
stos
inc
mov
mov
hlt
jne
jmp
(bad)
push
jle
jns
or
lods
lahf
push
mov
mov
inc
shl
jo
pop
mov
es
int3
or
ror
movs
test
mov
or
jns
(bad)
(bad)
dec
arpl
fimul
mov
ins
enter
or
neg
push
cmc
sub
cmps
jp
fidiv
(bad)
movs
mov
adc
shl
lods
and
jb
mov
pop
call
push
sahf
mov
inc
call
movs
adc
sbb
sub
int3
mov
mov
and
fnstenv
pop
mov
rcr
xchg
enter
cwde
fisttp
mov
mov
imul
dec
cld
in
push
add
mov
or
xor
pop
pop
inc
and
call
retf
stc
pop
(bad)
sub
adc
pop
test
pop
mov
or
cs
aam
pop
jge
mov
retf
(bad)
into
call
ror
sbb
lds
cmp
iret
repnz
jno
adc
adc
outs
jl
arpl
sbb
rol
xor
lock
scas
xchg
in
jae
jno
xchg
cmp
mov
add
mov
pop
mov
sub
xlat
or
movs
sbb
shr
jge
data16
mov
ret
inc
enter
pop
sti
push
or
adc
jo
mov
xor
xor
ror
cmp
push
cmp
int
lods
dec
ds
adc
xor
xchg
xchg
sar
das
push
jne
cmps
pushf
dec
out
sub
xacquire
add
pop
fistp
aad
retf
mov
inc
movs
xor
in
mov
enter
int
push
sahf
js
fcmovnb
dec
loop
mov
call
dec
or
hlt
stos
ss
call
jecxz
cmps
jecxz
imul
xchg
xor
xor
pushf
cmp
sub
test
hlt
ret
imul
ror
mov
lods
inc
sub
sbb
shl
icebp
pusha
movs
das
fbstp
jmp
mov
fucomp
or
stc
out
add
jp
add
pop
das
jbe
movs
mov
int3
mov
push
sub
cmps
xor
mov
push
mov
mov
mov
or
mov
lea
movlhps
jl
pop
jnp
cmp
inc
ror
xchg
adc
loope
out
adc
in
dec
(bad)
aad
data16
add
into
xor
jo
cmp
push
ror
(bad)
sbb
mov
xor
xchg
jae
les
push
add
mov
and
lea
cmp
jl
aas
pop
sub
leave
movs
jle
mov
fistp
add
leave
pop
ja
push
jne
outs
dec
std
loope
pushf
add
pop
bound
retf
mov
mov
sbb
dec
xor
jno
ror
mov
or
sub
loope
mov
xchg
mov
or
test
jo
dec
retf
mov
sahf
jnp
shl
jb
out
nop
aad
ins
mov
fld
nop
push
jo
mov
js
inc
les
xchg
mov
mov
dec
add
fmul
outs
aaa
aad
sar
cmp
ins
xchg
fwait
adc
fiadd
xor
(bad)
cmps
mov
movs
lods
jo
or
dec
ss
pop
test
sub
cmps
jmp
test
mov
jbe
(bad)
icebp
mov
sbb
out
rol
pop
loope
dec
mov
inc
xor
sbb
sbb
cmp
std
hlt
jge
inc
das
test
and
fist
xchg
inc
pop
(bad)
mov
push
popf
add
and
nop
jle
cwde
stc
cmp
pop
popa
pop
adc
sbb
(bad)
mov
sub
jbe
sbb
shl
push
cmp
lods
aaa
stos
cli
dec
adc
mov
xchg
in
and
cmp
mov
jmp
jbe
movzx
inc
mov
jg
mov
repnz
jl
pop
dec
sub
and
adc
std
or
sub
xor
mov
lds
sub
loopne
mov
and
shl
lods
or
jge
add
pop
rcl
inc
and
lock
dec
mov
pop
pop
mov
push
push
dec
sbb
jmp
int
cmp
add
and
test
das
sbb
arpl
mov
inc
test
and
jp
add
mov
aam
sbb
push
outs
and
(bad)
or
iret
int
dec
xor
test
scas
mov
sbb
pop
mov
sbb
cmp
adc
(bad)
out
or
or
push
int3
aam
mov
cs
mov
ins
pop
sbb
xchg
mov
add
cmp
(bad)
xor
add
sub
mov
cmp
bound
add
out
push
and
rol
mov
sub
pop
sbb
enter
and
add
jge
mov
and
mov
cmp
popf
pop
xchg
sbb
ins
pop
lock
push
xchg
mov
fcom
inc
jg
pop
cmc
inc
push
sub
xlat
fnsave
push
sub
mov
mov
repz
je
xor
cmps
in
add
arpl
or
cmp
enter
test
iret
add
dec
or
sbb
push
push
out
dec
push
lds
imul
jge
out
or
out
test
mov
cmp
push
test
adc
pop
or
cmc
pop
clc
push
cwde
mov
test
inc
mov
popa
popa
stos
push
idiv
inc
pop
sbb
cld
mov
or
pop
xor
mov
cmp
shl
sbb
leave
fist
cmp
cmp
cmps
stos
es
stc
movs
jns
(bad)
popa
leave
cwde
add
adc
push
int3
mov
xlat
mov
mov
xchg
mov
dec
xor
cmp
ret
test
loope
popf
mov
adc
mov
push
adc
jle
in
mov
jmp
(bad)
scas
sahf
in
adc
out
dec
sbb
fcomp
test
sub
pop
mov
aam
push
jb
push
lods
or
(bad)
lods
inc
add
rcl
mov
push
sbb
push
call
loopne
stc
pop
cmp
cmp
push
sar
mov
sbb
and
mov
xchg
sbb
test
int3
js
das
shr
pusha
push
sbb
pop
(bad)
adc
lock
gs
or
repnz
in
or
or
ins
jae
jb
xchg
mov
dec
xor
pushf
clc
xor
inc
mov
scas
mov
xor
int3
sub
repz
fwait
rol
xor
mov
xchg
shl
jne
mov
fidiv
adc
sbb
shr
data16
mov
repz
loopne
icebp
ds
pop
test
jnp
cmp
jne
cmp
lods
or
outs
ins
mov
rcr
jbe
(bad)
xchg
sub
jmp
clc
pop
(bad)
and
cmp
aam
ss
inc
add
in
in
pushf
adc
mov
gs
xchg
movs
push
data16
shr
fnstsw
(bad)
cmc
test
pop
xlat
mov
push
cmp
lea
pop
inc
jmp
mov
mov
adc
enter
add
pop
or
add
mov
jmp
xchg
lahf
dec
mov
fbstp
lods
dec
sbb
cdq
(bad)
out
loope
push
mov
ins
fistp
aaa
jp
in
adc
stos
ret
xor
out
(bad)
mov
xor
or
cmp
push
xor
adc
int3
jnp
mov
mov
sbb
adc
jo
pop
push
mov
dec
(bad)
add
xchg
outs
mov
cmp
jb
mov
lock
dec
or
mov
mov
lahf
pop
call
mov
test
(bad)
pop
xor
popa
add
xor
xchg
fnstcw
std
test
add
cmp
inc
enter
out
mov
in
mov
lods
in
jge
mov
(bad)
pop
push
sti
push
inc
jge
(bad)
fyl2xp1
pushf
mov
xor
xchg
inc
mov
out
leave
mov
and
fdiv
push
sub
lods
sbb
shr
cli
arpl
or
mov
add
jle
ficomp
pop
lods
outs
adc
or
cmp
fistp
mov
fcom
adc
ss
pop
sbb
cmp
das
mov
mov
xchg
sar
pushf
add
xchg
in
inc
inc
inc
jo
aam
out
jne
(bad)
mov
shl
mov
cmps
push
daa
stos
mov
jle
or
out
mov
lods
xchg
call
mov
push
ss
mov
jne
mov
and
push
nop
aas
mov
mov
push
cmp
(bad)
xor
fcom
int3
pusha
scas
cmp
pop
mov
mov
inc
xchg
imul
psubsb
imul
ins
or
adc
inc
imul
out
and
lds
in
xor
pop
inc
push
das
cmp
mov
jae
push
add
lods
es
xlat
idiv
add
sbb
jmp
pop
add
dec
push
cli
pop
sbb
mov
jno
repz
dec
aaa
push
mov
and
pop
(bad)
adc
dec
push
push
push
dec
jmp
sbb
dec
outs
inc
jbe
xchg
sbb
stc
ror
test
push
es
stos
mov
jecxz
adc
loop
lahf
mov
add
cli
movs
retf
test
and
dec
sub
mov
adc
dec
iret
test
pop
sub
pusha
stos
(bad)
fadd
stc
sbb
inc
mov
cmp
loope
not
fs
mov
sub
dec
sub
mov
enter
loop
dec
daa
shr
mov
ss
and
mov
add
xor
ss
out
sbb
out
fwait
dec
fbld
in
rcr
push
push
(bad)
data16
lea
fdiv
movs
adc
inc
push
sbb
xor
mov
in
add
gs
mov
cmc
jmp
jmp
dec
jg
or
xlat
ret
xlat
sub
loopne
xchg
push
movs
icebp
shl
int
bound
fdiv
shl
mov
aam
loop
lahf
mov
ins
cmps
imul
xor
test
fidiv
add
into
test
jne
outs
or
loop
call
xchg
pop
enter
add
and
in
into
mov
lods
push
jge
leave
inc
int
ret
je
mov
and
mov
pop
cmps
jne
jle
or
stos
popa
aaa
icebp
add
push
sub
aas
stc
ins
(bad)
adc
adc
inc
stos
sbb
jb
inc
nop
jle
aam
mov
and
mov
loopne
pop
push
xor
es
loopne
mov
rcl
int
fsubr
cmp
add
daa
adc
mov
fld
or
and
xor
jle
sub
adc
aas
push
retf
pop
fisub
xor
and
and
pop
cwde
jle
addr16
popa
lods
leave
aad
pop
sub
pop
jle
mov
inc
loope
lea
loop
inc
test
mov
mov
pop
std
cmps
xchg
inc
jne
fdivp
mov
cmp
movs
mov
loopne
test
repnz
cwde
mov
mov
or
and
or
xchg
scas
dec
mov
stos
adc
addr16
mov
xchg
xor
retf
or
dec
xor
shl
mov
cwde
sub
(bad)
cmp
ja
push
call
(bad)
mov
xor
jne
and
push
fistp
clc
dec
das
pop
(bad)
(bad)
dec
out
or
mov
icebp
das
pop
jecxz
jne
dec
push
cdq
xchg
dec
push
mov
loopne
je
xchg
xrelease
adc
jl
push
sti
push
sbb
mov
pusha
xchg
adc
xor
out
sbb
and
add
into
pop
or
loop
mov
ror
xchg
cmc
sbb
movs
repnz
jge
adc
xchg
push
popf
lock
xchg
(bad)
movs
clc
retf
(bad)
retf
test
(bad)
out
mov
add
jmp
outs
pop
lahf
dec
sti
cmc
dec
loope
cli
cmp
jae
lods
sub
clc
mov
mov
lock
mov
sti
fst
adc
push
and
and
jg
call
xchg
ror
mov
mul
and
jnp
adc
fisub
pop
dec
scas
repnz
mov
dec
mov
sbb
pop
pop
pusha
test
and
inc
es
dec
(bad)
push
xor
jle
sub
and
lods
lock
cld
icebp
cmps
(bad)
cmp
aam
adc
test
pop
int
test
sub
loopne
add
xchg
out
mov
shl
push
(bad)
test
fisubr
into
sbb
scas
aam
inc
xchg
cli
xchg
imul
inc
(bad)
hlt
xchg
int
mov
nop
mov
cmps
test
jo
rcl
jp
(bad)
push
inc
xchg
(bad)
mov
fs
mov
in
adc
jns
repnz
fwait
in
mov
test
ds
push
cdq
push
jl
jg
shl
pushf
mov
cmp
rcr
xor
jb
push
xchg
fdiv
retf
fdiv
pop
jne
push
nop
sub
popa
cmc
nop
mov
push
pop
xor
mov
ds
jmp
loop
inc
xor
std
add
in
xchg
lea
out
stos
mov
mov
cmp
mov
inc
(bad)
popa
outs
enter
jmp
mov
inc
dec
xor
mul
dec
lsl
or
pop
sbb
cmp
push
sub
sahf
jg
adc
cmp
lods
push
mov
add
pop
pop
add
adc
push
inc
aam
aam
or
fbstp
call
pop
sti
pop
mov
lahf
jbe
jge
jg
fsubrp
xlat
adc
push
mov
push
loopne
es
pop
push
inc
lods
jmp
(bad)
fidiv
ror
adc
ret
jg
mov
or
inc
xchg
bnd
xor
mov
jae
add
mov
mov
sbb
hlt
imul
and
jns
cld
jns
mov
push
call
dec
aas
inc
sub
nop
outs
ins
sti
fstp
xor
jp
int3
sub
adc
adc
lock
das
add
nop
sbb
add
push
test
(bad)
call
fwait
jp
cmp
sbb
fisubr
hlt
sbb
loope
pop
mov
adc
je
xor
adc
mov
loop
and
cmp
inc
dec
in
dec
or
(bad)
clc
stos
(bad)
(bad)
call
pusha
dec
jbe
and
retf
fidiv
(bad)
mov
and
xlat
jecxz
pop
add
ret
jmp
loope
gs
rol
inc
popa
test
mov
popf
xchg
std
ror
xchg
mov
push
add
test
leave
pusha
pop
add
in
int3
shl
std
das
xchg
clc
push
xor
and
in
inc
shl
or
shl
dec
sahf
in
cmp
mov
jne
add
dec
mov
xor
add
pop
jb
rol
cmp
xchg
dec
xchg
loopne
sbb
xor
outs
iret
mov
xor
mov
aad
xor
pop
rol
scas
pop
aaa
je
into
pushf
loop
in
loop
add
call
out
cmp
add
xor
add
add
inc
sbb
int
adc
sti
cli
mov
rol
or
push
(bad)
imul
sbb
cld
adc
push
mov
mov
(bad)
call
test
shr
mov
es
dec
mov
cmps
std
psadbw
mov
jmp
xor
jbe
add
sbb
ret
aas
pop
dec
inc
std
test
jno
lock
jmp
das
and
shr
dec
dec
mov
push
fild
ret
push
pop
mov
leave
add
xlat
or
mov
push
aad
mov
fs
cmp
pop
mov
inc
push
or
ret
push
xchg
mov
ss
dec
dec
xchg
cld
in
(bad)
faddp
test
es
push
fwait
mov
push
mov
shl
in
jbe
mov
ins
inc
call
lea
test
inc
mov
adc
jno
mov
mov
mov
jb
sub
push
mov
inc
or
(bad)
cmp
lea
xchg
test
cli
sbb
mov
fs
cdq
xchg
xchg
jno
daa
aas
(bad)
mov
or
stc
jle
sbb
add
(bad)
fsin
push
jge
sub
dec
cmp
in
test
(bad)
(bad)
test
and
fisubr
into
fcom
jl
test
(bad)
cli
rcr
(bad)
dec
mov
sub
cmc
add
cmp
pop
inc
mov
pusha
cmp
jo
adc
push
sti
sbb
mov
mov
retf
data16
push
xor
mov
imul
gs
enter
out
stos
add
pushf
cmp
ret
fcomip
pop
and
fdiv
sbb
push
sbb
jb
mov
pop
and
ss
sbb
xor
cmps
cmc
(bad)
sub
mov
pop
jge
in
fs
stos
loop
cld
inc
popf
rol
inc
jmp
ja
pop
sub
xor
neg
jle
call
mov
xchg
sbb
test
and
loopne
dec
loop
rcr
pusha
sbb
jle
mov
mov
mov
scas
adc
jmp
loopne
movs
sar
inc
push
or
push
and
cli
std
mov
adc
cmps
mov
fwait
inc
jmp
jae
xchg
xchg
inc
fsubr
mov
jmp
mov
daa
in
(bad)
test
ss
enter
adc
out
div
xchg
cdq
mov
and
jmp
ss
push
cmp
pop
sbb
loope
mov
pop
mov
gs
pop
sbb
(bad)
fld
int
xor
push
jg
mov
(bad)
adc
sbb
leave
jmp
xor
data16
pop
leave
mov
xchg
sub
gs
or
fisttp
xor
fs
(bad)
add
pop
stc
inc
jno
pop
adc
out
adc
test
aam
push
pop
inc
dec
add
cmc
cmp
mov
inc
rcl
cmp
adc
lds
xor
mov
repz
pusha
cmps
mov
sbb
mov
cld
imul
push
pop
lock
enter
push
loopne
mov
mov
jl
lds
mov
xchg
ret
mov
mov
dec
and
into
int
sub
mov
adc
pop
pop
es
mov
leave
imul
jmp
stos
cdq
sub
das
test
pop
mov
pop
pusha
loop
or
in
pop
xor
xchg
repz
sbb
in
ins
adc
ret
inc
outs
popf
mov
(bad)
call
mov
push
enter
sbb
sub
cwde
push
repz
ror
je
push
mov
xor
mov
mov
sti
test
mov
cmc
push
std
cli
mov
adc
dec
stc
stc
and
dec
les
mov
hlt
mov
push
rcl
mov
mov
push
mov
mov
daa
in
add
and
inc
repz
inc
adc
sbb
aas
add
fld
pusha
outs
mov
into
sbb
out
sub
add
mov
sbb
std
or
aad
adc
outs
out
mov
movs
cmp
sbb
nop
mov
pop
arpl
fcmovnbe
xchg
sbb
pop
or
lock
mov
loopne
add
cmp
xchg
mov
mov
and
into
pop
sbb
jo
pop
and
fadd
scas
pop
pop
pushf
shl
cmp
popf
scas
rcr
sub
mov
inc
es
mov
cld
ret
xor
(bad)
add
in
mov
test
fcomi
fstp
sub
add
inc
or
jp
iret
xchg
neg
xlat
ret
leave
sbb
inc
dec
dec
push
mov
fbld
(bad)
das
sub
mov
stos
jne
jp
sub
movs
inc
ret
daa
jmp
movs
fild
cmp
cmp
pop
sub
pop
sub
mov
outs
cmp
dec
movs
movs
sbb
dec
push
mov
mov
push
push
xlat
bound
push
and
jg
xor
mov
ds
sub
test
and
outs
add
add
jle
adc
jae
mov
jne
imul
ficomp
cld
jb
loope
std
jmp
push
sub
mov
fild
outs
pushf
ficom
dec
xchg
int3
push
dec
and
stos
xchg
pop
sub
xchg
mov
jb
retf
push
jmp
mov
test
fistp
xor
jmp
cmp
bnd
pop
inc
in
mov
adc
gs
mov
xor
dec
(bad)
out
inc
pop
sub
xor
jnp
outs
adc
push
push
xchg
xchg
(bad)
pop
stos
sub
push
or
in
ja
fisub
xor
jle
test
(bad)
pop
hlt
and
adc
push
shl
inc
clc
test
cmp
data16
sbb
ja
imul
jp
movs
daa
and
xchg
int
mov
jno
jo
lahf
mov
mov
and
pop
xchg
not
pop
jg
das
mov
stos
adc
xor
sub
xchg
mov
ja
clc
mov
sbb
dec
add
les
sbb
pop
inc
sbb
in
out
jmp
adc
mov
dec
jb
in
jbe
and
push
popa
(bad)
inc
mov
and
nop
cmps
pop
jle
lea
outs
jmp
mov
mov
out
out
test
push
mov
inc
push
fdiv
fwait
pop
out
mov
aaa
cmp
cwde
lods
jmp
or
or
mov
and
jmp
out
or
lahf
sbb
jp
(bad)
loope
jns
cmp
cmp
imul
es
xchg
sahf
cmps
test
mov
mov
and
jbe
pop
in
bound
sub
sub
jo
sahf
sbb
xchg
sub
call
jp
inc
rcl
sub
scas
in
lahf
sbb
inc
inc
sub
mov
stc
lods
jo
sub
les
es
mov
sub
icebp
mov
scas
hlt
or
retf
jecxz
popf
mov
jg
xlat
pop
xor
mov
xchg
add
cmp
movlps
not
jp
inc
push
jns
(bad)
inc
test
outs
push
std
sar
mov
(bad)
fdivp
add
call
mov
sub
ins
out
(bad)
adc
(bad)
lods
loope
mov
mov
mov
dec
cmps
test
lods
jnp
lods
push
adc
out
hlt
(bad)
shl
pop
rcl
rcr
out
ins
cmp
bound
sar
inc
(bad)
cmp
out
adc
push
cmps
fild
inc
push
xchg
stos
and
rcl
data16
pop
dec
dec
jo
imul
retf
pop
dec
xchg
push
das
test
fadd
lods
mov
cmp
test
dec
add
mov
loop
push
cli
xor
lds
add
out
pop
pop
fs
or
xchg
sbb
push
inc
pop
(bad)
and
movs
int
lods
ins
int3
add
(bad)
jo
enter
cmp
ins
dec
js
and
imul
retf
push
cmp
sub
push
outs
jmp
ret
std
mov
inc
(bad)
xlat
pop
scas
into
pop
mov
or
leave
and
cmp
into
dec
sub
mov
out
jne
jns
mul
push
dec
lahf
push
retf
pop
lods
mov
lock
and
sbb
js
jle
stos
jae
out
sbb
mov
jmp
cdq
jl
aaa
ss
lea
lock
cli
push
outs
fisttp
xchg
push
dec
xor
in
xchg
(bad)
cli
and
scas
cmp
dec
popf
nop
aaa
popf
sub
jl
jae
stos
aam
sbb
idiv
aaa
cmp
mov
shl
(bad)
pop
jecxz
ja
pushf
cmps
jb
(bad)
mov
das
xchg
dec
inc
or
mov
dec
and
sbb
mov
jb
stc
mov
lock
push
aas
mov
cmp
inc
ja
jecxz
or
xchg
imul
push
inc
mov
sub
or
scas
lods
lods
in
pop
push
nop
pop
xchg
sbb
test
out
into
jmp
inc
test
ss
mov
jg
inc
sbb
aam
jecxz
movs
inc
lahf
adc
ret
xchg
dec
xlat
test
jmp
add
mov
ds
pop
hlt
inc
rcr
stos
lea
out
or
mov
adc
rcr
adc
and
fstp
sbb
clc
inc
bound
daa
sahf
dec
fld
ret
sub
mov
mov
repnz
push
loopne
ret
xchg
loop
shl
scas
jmp
daa
out
xor
pop
std
add
jno
push
imul
(bad)
shl
shl
pop
stc
(bad)
rcl
adc
lock
fiadd
out
push
mov
mov
lahf
mov
popa
cli
cmc
(bad)
jno
adc
mov
mov
add
adc
add
out
inc
push
clc
popf
sbb
sbb
jmp
fwait
out
xchg
pop
jnp
cli
repz
pop
addr16
not
fistp
test
push
(bad)
enter
dec
idiv
jmp
mov
mov
js
push
xchg
imul
cmp
stos
mov
sbb
push
jmp
adc
adc
arpl
push
sub
xchg
aad
dec
xor
nop
mov
or
mov
lods
std
sub
xor
mov
daa
loop
jne
inc
and
mov
iret
mov
neg
bound
push
jbe
adc
les
fld
loopne
mov
lds
lods
sub
push
hlt
lock
jge
sub
out
adc
lahf
arpl
loope
and
push
dec
scas
push
(bad)
clc
into
(bad)
push
test
mov
in
mov
cmc
or
mov
mov
jbe
test
add
rcr
loope
sar
cmp
xchg
test
mov
mov
mov
lock
jae
ins
das
adc
int
and
sti
jns
cmp
pop
call
leave
movs
and
jmp
and
arpl
cmp
sbb
mov
mov
lods
in
cld
dec
(bad)
sahf
push
getsec
repnz
int
lods
push
es
push
stc
retf
out
or
js
adc
push
pop
test
push
repz
cs
pop
and
push
and
jb
add
les
pop
xchg
sti
sbb
es
jp
aas
ds
test
adc
shr
pop
jge
push
adc
sbb
lods
and
fwait
ds
test
outs
cwde
jmp
pushf
test
xor
test
mov
mov
movs
pop
push
fisttp
adc
mov
imul
push
je
icebp
fwait
jbe
mov
aas
inc
jmp
pusha
leave
test
rol
cmp
push
mov
or
int3
loopne
test
(bad)
sub
cmp
xchg
jl
fimul
stos
movs
jge
ja
test
nop
inc
jg
dec
pcmpgtb
or
lea
push
in
adc
pop
ror
inc
jecxz
movs
adc
push
mov
push
jg
pop
repz
iret
jne
retf
sub
mov
xor
std
test
fisttp
pushf
mov
mov
repz
sbb
pop
(bad)
stc
test
es
inc
jmp
add
and
gs
add
or
mov
fnsave
loopne
fistp
sub
int3
and
rol
pop
pop
iret
xchg
loopne
jmp
enter
jno
mov
cmps
cld
mov
inc
mov
xor
jne
sbb
stos
sub
jmp
xchg
push
(bad)
scas
mov
push
sbb
pushf
fwait
sbb
mov
cli
enter
jl
xchg
test
adc
in
in
xchg
push
sbb
mov
pop
pop
(bad)
clc
daa
stos
imul
stos
(bad)
scas
xchg
ins
push
shl
imul
mov
pop
lea
popa
outs
pop
ret
bound
icebp
out
sti
sub
scas
test
inc
loopne
sti
jne
sub
push
pop
cs
cdq
in
or
popf
inc
jmp
(bad)
test
out
repz
sub
cmps
pop
and
les
adc
xchg
aaa
push
es
(bad)
loopne
movs
icebp
cmp
or
xchg
(bad)
cld
out
les
ins
ins
mov
push
cmps
sahf
inc
sahf
jmp
shl
adc
mov
adc
int
mov
(bad)
cmp
mov
cwde
and
and
dec
out
in
movs
shl
enter
add
pop
test
mov
push
cmp
mov
cmp
mov
call
or
int3
fdivr
loopne
popa
cmp
test
call
mov
mov
and
push
cmps
retf
ret
rcr
adc
mov
in
adc
adc
pop
mov
sub
dec
ins
popa
inc
jle
cld
or
cmp
or
les
adc
(bad)
xlat
mov
and
in
sbb
fs
movs
call
xchg
inc
cmp
xor
inc
dec
inc
outs
sbb
fisttp
push
mov
dec
adc
into
ret
jae
adc
and
fwait
sub
and
in
shl
lahf
xlat
mov
or
inc
cmp
ins
aam
cld
push
mov
je
mov
and
shl
fidivr
lods
mov
in
cld
cdq
test
(bad)
mov
adc
jbe
add
pop
nop
daa
xchg
push
(bad)
mov
ret
or
xor
mov
jne
push
inc
cli
push
popf
cmp
pushf
frstor
cmp
(bad)
stc
and
hlt
xchg
jo
es
bnd
sti
push
sahf
cli
or
test
mov
addr16
fild
(bad)
out
ja
mov
and
jg
es
inc
mov
pop
push
nop
sahf
push
enter
add
hlt
pop
cld
sahf
xchg
pop
sbb
adc
pop
xchg
or
push
in
gs
jle
outs
rcl
jo
es
sbb
ins
sbb
movs
pop
mov
sbb
ret
mov
mov
loop
sub
sub
jmp
mov
lock
jmp
in
fimul
test
mov
pop
in
mov
inc
shl
dec
add
add
mov
mov
js
and
fsubrp
and
fcomp
sbb
(bad)
sub
xchg
adc
(bad)
cld
test
in
cmc
mov
fucomp
jge
and
add
sbb
adc
in
retf
test
adc
and
aaa
lea
rcl
add
aad
iret
mov
sbb
sub
xor
ins
fimul
pop
fstp
dec
ja
jns
cmp
dec
(bad)
cdq
mov
mov
fmul
ins
test
fcomi
or
mov
adc
pop
cmp
ins
pop
addr16
test
stos
test
stc
outs
cmps
sbb
pop
loopne
cld
push
neg
pop
mov
cmps
sub
ins
push
and
movs
dec
addr16
(bad)
pop
push
xchg
or
add
fs
sub
aas
iret
jo
out
or
xor
int3
clc
dec
ret
repz
test
lahf
aam
popf
adc
sbb
push
push
gs
out
loope
mov
mov
inc
jmp
sub
jne
rol
not
mov
fwait
mov
mov
add
sub
inc
loopne
or
loope
pop
mov
xchg
sbb
je
mov
jecxz
pop
or
cld
aas
repz
stos
cmp
aaa
sbb
push
stos
mov
dec
fstp
add
xlat
mov
jne
mov
js
cmp
inc
inc
and
push
fsubr
jae
sub
adc
jl
or
sti
xor
jnp
sub
mov
jle
pop
push
pusha
pushw
retf
dec
cli
cmps
mov
xor
test
sahf
scas
jnp
fist
popa
iret
retf
repz
icebp
lea
retf
jbe
push
push
aas
jle
ret
push
repnz
xchg
popf
aam
pop
sbb
push
inc
or
mov
and
xor
popa
les
dec
dec
scas
imul
stos
jmp
cmp
out
cmp
mov
cmps
sbb
aam
mov
xchg
or
pop
xor
call
cmps
jae
xchg
xchg
mov
xchg
xchg
dec
mov
leave
push
adc
dec
jo
mov
lds
hlt
xchg
cli
leave
icebp
inc
lods
mov
dec
dec
xchg
sbb
mov
mov
jne
xor
dec
mov
imul
ins
jge
repz
adc
and
dec
scas
ja
ja
test
pop
cs
push
fwait
mov
adc
in
mov
mov
clc
cmps
retf
inc
xchg
movs
xchg
mov
or
arpl
inc
aad
adc
dec
cld
or
mov
cmp
inc
push
lods
dec
pushf
mov
inc
out
push
fistp
ss
dec
popf
scas
ret
adc
mov
push
xchg
pop
add
and
dec
inc
and
stos
arpl
loopne
jmp
rol
(bad)
xchg
pop
sub
ds
int
outs
xor
out
push
adc
mov
xor
xchg
mov
fisttp
jge
jbe
sahf
bound
pop
cmps
cmp
inc
xchg
(bad)
ja
jmp
cmps
es
xor
retf
pop
outs
test
pop
bswap
nop
add
and
xor
mov
or
shl
adc
pop
ins
cld
inc
cmp
sbb
push
faddp
jecxz
js
push
fidiv
dec
xor
(bad)
arpl
in
mov
stos
addr16
in
jge
sti
loopne
xor
imul
repz
cmp
ds
sti
shl
adc
mov
call
(bad)
std
aas
inc
mov
ja
clc
pop
scas
rol
mov
inc
icebp
xchg
int
xchg
cli
pop
adc
cmc
mov
pop
outs
clc
mov
mov
sahf
outs
mov
ins
adc
fsub
xor
repz
out
fisttp
cmp
sbb
mov
jb
sub
sbb
jno
outs
and
jbe
fidivr
jo
pop
add
xor
inc
pop
ins
in
call
xchg
imul
mov
in
fs
shl
ins
loope
in
out
push
(bad)
jmp
aam
dec
jmp
mov
cmp
(bad)
movq
mov
add
dec
das
aad
repz
fcmovnb
pop
pop
xchg
cmp
push
rcr
mov
out
dec
mov
xor
sbb
xchg
fbld
sar
and
cmps
enter
lods
mov
pop
test
inc
movs
dec
lock
iret
fwait
cmps
and
xor
sub
push
jno
cmp
sbb
sub
pop
sbb
stos
stos
mov
clc
jns
shl
rol
jnp
pop
data16
(bad)
xlat
jle
dec
repnz
and
jl
dec
cmc
jne
dec
sub
dec
xchg
scas
xchg
mov
adc
cdq
and
and
aas
lahf
mov
mov
enter
fimul
call
mov
in
pusha
add
rol
pop
jecxz
out
cmp
and
lds
pop
ret
mov
mov
jmp
dec
push
inc
push
mov
std
ins
jmp
cmp
jb
pop
xor
lock
stc
adc
lods
data16
cwde
lahf
or
dec
lock
jbe
(bad)
sbb
iret
dec
fist
dec
and
ja
mov
out
push
icebp
cmpxchg
pop
mov
xor
pop
xor
mov
adc
(bad)
retf
cmps
cli
sub
nop
inc
movs
mov
aam
ins
mov
addr16
xchg
repz
sub
sbb
jmp
div
pop
imul
pop
retf
push
mov
jl
push
out
push
jecxz
rol
and
std
pop
rcl
std
frstor
inc
lods
xchg
xor
cmp
(bad)
cld
mov
sub
mov
mov
iret
pop
xor
inc
scas
inc
rcl
scas
fdivp
aam
(bad)
icebp
ins
xchg
inc
and
ds
int
sbb
jno
mov
fmulp
lods
lahf
int
mov
adc
out
adc
adc
add
jl
cmps
mov
xor
add
scas
es
adc
pop
imul
mov
sar
addr16
inc
or
sbb
pop
lea
test
mov
sbb
sbb
into
adc
xchg
jmp
and
hlt
ss
push
clc
cmp
(bad)
add
arpl
imul
cmp
leave
push
pop
std
call
mov
sub
sub
shr
imul
outs
dec
ja
xor
fchs
ds
jmp
leave
or
pop
and
ds
jge
jns
in
mov
loopne
fs
aad
push
and
lock
lods
loop
in
push
add
and
mov
inc
rcl
mov
sar
scas
add
ds
xchg
movs
js
lahf
das
add
xchg
sub
mov
shl
push
cmc
sbb
icebp
jmp
inc
out
sbb
test
shr
dec
ret
pop
lods
les
mov
fidivr
call
pop
add
leave
sbb
popf
mov
xchg
es
mov
push
ins
neg
dec
mov
retf
adc
hlt
or
pusha
aad
cld
sub
aaa
pusha
mov
(bad)
xchg
or
push
div
or
push
call
cs
imul
inc
popa
sub
in
mov
in
(bad)
push
sti
pop
(bad)
push
shr
xlat
cli
aad
(bad)
sub
int3
cmp
dec
inc
xchg
pop
inc
jnp
xchg
push
mov
imul
loopne
inc
in
pushf
push
sahf
mov
vmread
inc
inc
lods
mov
cmp
aas
(bad)
mov
cs
hlt
out
sbb
enter
loop
lea
sub
dec
and
xchg
adc
sub
jp
xchg
sbb
hlt
dec
add
cmps
nop
or
clc
sub
adc
das
fbld
pushw
movs
lds
sub
adc
(bad)
leave
cmp
cld
mov
inc
mov
pop
retf
iret
or
mov
sti
imul
cld
mov
sbb
xchg
and
xor
ss
lods
call
pop
pusha
outs
cmc
dec
cmp
xchg
xor
pop
jae
and
arpl
sbb
aam
cmps
pop
in
fidiv
lahf
cmp
aaa
cli
repnz
dec
xor
or
or
(bad)
jbe
sbb
sbb
icebp
jbe
and
and
cmp
sbb
enter
dec
(bad)
out
xor
push
inc
test
pusha
push
and
adc
call
mov
inc
adc
jns
dec
cmp
ja
inc
or
xchg
adc
pop
fild
imul
xchg
or
push
cld
shl
inc
mov
fistp
in
adc
dec
pop
mov
(bad)
mov
pop
loope
cs
mov
mov
dec
lds
sub
add
movs
or
push
sub
adc
sbb
jecxz
popf
adc
jp
push
xchg
sub
adc
shl
into
sbb
lahf
mov
add
shr
retf
or
adc
lds
mov
popf
movs
xchg
test
jge
inc
pop
push
inc
das
fist
jge
ja
fisub
sbb
sbb
shr
cmp
and
sar
lock
stos
xor
sub
bound
in
sbb
adc
hlt
pusha
jmp
cmc
add
xor
sub
les
sar
loope
jecxz
in
popf
mov
cmp
clc
ficom
cs
cmp
scas
sbb
shl
jecxz
pop
mov
in
outs
out
adc
add
int
(bad)
mov
pop
adc
mov
dec
jns
aaa
call
sbb
cmp
or
div
sub
pop
pop
(bad)
lds
clc
cmp
add
fidiv
sbb
mov
hlt
sub
jmp
jo
mov
dec
cmp
push
sub
sbb
aam
cmp
aam
addr16
mov
or
sub
push
nop
mov
or
retf
imul
cmc
cmp
(bad)
mov
jg
ins
popa
xor
popf
add
pop
ss
dec
push
mov
dec
or
dec
int
xor
add
(bad)
movs
sti
rol
into
out
jno
scas
push
ficom
cmc
mov
ja
shr
push
ins
out
lock
jg
scas
pop
add
push
push
sbb
in
xor
or
mov
mov
retf
loope
mov
mov
mov
and
imul
jp
sbb
mov
inc
int3
stc
stos
out
(bad)
loop
lahf
sub
inc
in
jb
loopne
call
mov
cmc
jecxz
adc
les
jbe
in
ins
in
aad
push
lds
and
nop
xchg
cmps
jge
mov
adc
sub
sbb
mov
xchg
xor
jnp
xor
add
dec
(bad)
shl
pop
retf
xor
or
cmp
sbb
in
or
fwait
lods
mov
ret
aam
pop
inc
mov
inc
jnp
mov
arpl
xchg
mov
aas
add
mov
dec
sub
xchg
ins
(bad)
(bad)
and
inc
mov
call
push
repnz
lahf
add
sub
ins
das
cli
sbb
repz
sub
xchg
repnz
lds
sub
adc
stos
and
mov
inc
mov
out
mov
shl
cdq
mov
mov
sbb
ds
test
shl
adc
jnp
xchg
push
push
jmp
icebp
ja
loop
jno
xor
and
mov
xor
cli
push
out
add
cvtdq2ps
mov
aas
daa
jnp
movs
inc
or
test
ror
addr16
jbe
sbb
test
pop
mov
mov
loopne
cmps
fistp
jge
cmp
mov
sub
div
stc
xor
ficomp
mov
mov
out
xor
int3
ror
mov
test
push
mov
xor
pop
and
cli
shr
loope
shr
imul
mov
sbb
mov
test
pop
scas
int3
int3
fidiv
push
add
or
mov
sbb
movs
cdq
retf
imul
mov
push
or
jecxz
movs
ret
dec
mov
out
push
sbb
popa
xchg
xor
or
das
cmp
retf
mov
or
nop
ret
and
sbb
lods
out
sub
sbb
and
and
retf
mov
add
fldenv
test
ja
cmps
mov
in
push
psubw
xlat
jmp
xor
push
cmp
addr16
push
sbb
mov
movs
or
lahf
mov
sbb
ret
dec
xor
inc
das
add
jns
fdiv
aam
test
xchg
sar
and
push
and
inc
xor
call
fs
add
mov
clc
dec
retf
or
in
cmp
shr
adc
out
jo
cmps
mov
jne
mov
mov
rcr
or
es
mov
jl
add
push
inc
rol
(bad)
or
add
enter
outs
lock
popf
bound
jp
pop
movs
stos
movs
icebp
pop
pusha
dec
test
(bad)
in
shl
nop
xchg
cmp
push
cmps
and
xor
clc
mov
loope
sub
sbb
xchg
inc
stos
sub
fadd
xchg
or
xchg
or
outs
or
mov
stc
call
mov
jae
pop
and
xlat
pop
lock
pop
fwait
jmp
mov
repnz
into
fdivr
sti
or
call
iret
mov
adc
leave
mov
(bad)
mov
push
ds
fisubr
push
cmp
adc
fnstsw
jns
pop
hlt
xlat
adc
dec
add
dec
lods
mov
(bad)
push
(bad)
mov
das
and
sbb
fdivr
jbe
aam
mov
ror
leave
(bad)
push
xchg
and
mov
inc
stos
mov
imul
mov
test
es
test
aam
cmc
mov
or
fistp
mov
fiadd
shl
push
int
stos
out
rcl
mov
mov
in
sub
lods
push
in
pusha
into
pop
jnp
mov
mov
and
call
add
jbe
test
mov
fcmovnbe
daa
sbb
les
add
and
(bad)
jge
xchg
xchg
sbb
jmp
leave
inc
mov
xchg
xchg
mov
arpl
adc
inc
or
mov
xor
mov
push
cdq
xchg
pushf
lods
pop
mov
cdq
push
or
cwde
inc
stc
and
fsubr
inc
lods
mov
aam
and
fadd
ins
test
sub
push
adc
push
ins
push
(bad)
jae
inc
push
loopne
mov
test
aad
dec
lods
mov
add
nop
mov
adc
iret
shl
add
lods
lock
jae
shl
ror
jp
jnp
jg
sahf
lahf
out
rcl
das
repnz
aaa
push
sbb
jl
leave
ins
add
sub
in
adc
and
and
cs
pusha
sbb
enter
mov
lea
pop
gs
(bad)
popa
adc
xchg
and
popf
out
stos
cmp
test
sbb
inc
inc
je
mov
sub
xchg
cdq
out
inc
push
mov
sub
lods
aad
fisttp
jmp
pop
sub
rcr
stc
scas
sar
fisub
push
fisub
sti
push
fcmovb
iret
mov
fs
int3
inc
and
enter
mov
xchg
movs
or
popa
popf
add
sbb
adc
adc
sbb
ret
shr
adc
mov
xchg
std
sar
mov
pop
pop
js
popa
fsub
sub
xchg
pushf
cmp
(bad)
adc
cli
inc
pop
stos
(bad)
xchg
mov
scas
in
cmp
mov
popa
xchg
stos
adc
jo
push
push
pop
call
push
int
repz
lahf
pop
adc
shr
add
sbb
jbe
inc
rcr
call
rol
cmp
pop
fsubr
sbb
sti
dec
pop
adc
lds
mov
mov
dec
sti
xlat
fcmovb
scas
aam
fnstsw
inc
in
pop
xchg
hlt
pop
xchg
and
adc
js
inc
push
cdq
jb
sub
xor
pop
cwde
mov
loope
jmp
cmp
dec
cmps
repnz
dec
cwde
jle
movs
push
mov
add
rcl
jg
inc
sahf
in
jmp
xchg
cwde
pop
not
inc
cmps
and
js
pop
retf
(bad)
les
and
inc
sub
lods
iret
out
sbb
dec
pop
mov
push
mov
jne
pop
pushf
pop
jo
aaa
and
sete
(bad)
fidiv
push
loope
mov
out
cmc
out
inc
out
cs
dec
cmp
fcomp
jmp
nop
test
sbb
xor
fdivr
ror
adc
mov
jno
mov
lea
dec
and
mov
xchg
mov
nop
sub
cmp
add
shr
jge
loopne
pushf
sbb
push
push
and
fwait
repnz
push
loop
adc
jmp
fld
sbb
adc
sbb
mov
mov
inc
call
jmp
and
fnstcw
in
dec
cmps
cli
nop
psrlw
push
aaa
or
inc
jno
mov
mov
cmp
(bad)
repnz
jns
and
cmp
cdq
fiadd
adc
jecxz
cmp
sbb
and
int3
stos
and
stc
and
adc
call
inc
sub
mov
push
fadd
or
fwait
into
mov
adc
pop
xchg
push
dec
or
xchg
sti
jmp
xor
push
es
push
stos
cmc
lods
cmps
sub
hlt
pushf
cmp
int3
cmps
dec
sahf
mov
test
dec
jbe
add
mov
sub
mov
ret
call
daa
xchg
adc
aaa
(bad)
mov
sahf
or
out
inc
fwait
mov
stc
pop
fwait
xchg
cli
mov
cwde
ins
sub
fcomp
push
call
jns
jmp
add
fs
or
bsr
pop
test
or
lock
dec
mov
xchg
jne
rcr
fwait
sub
dec
(bad)
int
ins
sbb
xchg
mov
inc
push
lock
sti
repz
push
add
popa
fnstcw
adc
cmp
arpl
enter
ja
daa
xchg
jl
xchg
sub
xor
fnstsw
cmp
mov
pop
sbb
repnz
fs
test
in
xchg
xchg
and
rol
cmp
mov
and
xchg
jle
call
mov
arpl
sbb
(bad)
jge
mov
fldcw
je
test
cmp
jp
sbb
xchg
lahf
sub
sub
jb
push
bound
inc
clc
call
xor
push
iret
sbb
adc
adc
push
cs
cmps
ja
arpl
xchg
cld
mov
sbb
in
outs
pop
bound
call
nop
dec
imul
xchg
xchg
adc
or
fwait
mov
inc
hlt
leave
push
stos
out
ds
xor
pop
or
or
ret
push
jle
stos
xlat
dec
popa
pop
mov
or
iret
scas
test
in
push
sti
or
xchg
jns
dec
push
fcomp
pop
sbb
cs
jbe
dec
in
xlat
or
out
cs
xchg
(bad)
jge
out
test
shl
loopne
iret
(bad)
bnd
mov
cmps
mov
xchg
sbb
adc
inc
shl
pop
inc
lods
movs
movs
adc
mov
fistp
jge
add
cmp
int
(bad)
xchg
sub
pop
xchg
and
mov
mov
inc
cli
pop
push
push
fs
xchg
fistp
xor
and
mov
test
psubsb
ffreep
cmp
dec
xchg
fstp
inc
sub
hlt
mov
and
dec
pop
pop
(bad)
jg
pop
adc
xchg
je
and
adc
shl
inc
movs
pop
pop
xor
scas
mov
imul
push
nop
fstp
loope
ror
adc
push
bound
mov
add
push
cmc
aad
sbb
mov
mov
cmps
adc
push
in
stc
es
cs
mov
inc
xor
mov
jns
pop
cdq
fs
sub
repnz
popa
stc
jge
enter
cli
xchg
cs
std
cmp
test
mov
out
jecxz
cmp
xor
and
fistp
mov
add
lahf
pop
out
mov
gs
cli
mov
inc
outs
out
sahf
popf
call
ins
fwait
lods
mov
or
in
dec
jno
and
pop
shr
mov
ss
gs
jge
pop
push
(bad)
sub
cmp
shl
fdivp
cmc
cmc
xchg
xchg
jmp
ss
repz
retf
mov
ss
mov
add
adc
pop
mov
mov
test
xchg
xor
(bad)
mov
jb
cmp
ficomp
test
in
add
sbb
stc
das
cmp
xor
and
pop
(bad)
xchg
cdq
jp
pop
test
xor
stos
and
(bad)
clc
fist
and
in
cmp
hlt
addr16
stos
cmp
scas
stc
out
stos
and
fld
fwait
pushf
mov
int3
mov
mov
data16
je
push
mov
mov
xor
shr
int
jo
add
push
sbb
push
fcmovu
ins
dec
imul
jp
(bad)
test
pop
in
and
add
sub
jae
push
ror
push
and
dec
dec
adc
sub
repnz
ret
lea
and
xchg
dec
mov
fs
mov
int
or
adc
inc
inc
pushf
test
mov
cmps
dec
dec
adc
cmp
addr16
scas
les
mov
pop
and
xor
mov
push
mov
and
xchg
xchg
jg
scas
fistp
shr
cld
xor
jl
ss
repz
dec
lahf
adc
fisttp
inc
push
retf
jo
out
jecxz
outs
inc
call
outs
cli
mov
mov
mov
pop
pop
xor
xor
add
mov
mov
fdivr
push
sub
push
idiv
retf
add
jg
sti
adc
sub
scas
leave
lea
mov
push
xchg
test
add
ins
cmp
xor
fsub
sbb
ret
mov
mov
sub
mov
test
daa
add
ins
dec
and
inc
adc
jge
adc
cld
out
pop
pop
(bad)
(bad)
sbb
sbb
sub
jne
adc
mov
xlat
cmp
stc
push
retf
fwait
addr16
movs
sti
jae
sar
sahf
mov
cmp
mov
mov
pop
out
and
xchg
cli
ret
adc
push
sbb
mov
ds
xor
stc
mov
xor
cli
xchg
mov
test
das
adc
add
out
ret
ficomp
test
icebp
(bad)
mov
pop
push
cmp
mov
inc
jge
sbb
adc
stc
mov
(bad)
call
xor
out
xor
push
out
movs
cmc
and
das
test
mov
ds
inc
stos
stc
dec
movs
add
xchg
addr16
stc
dec
push
stc
cmp
xor
test
fimul
pop
cmps
cmp
shl
and
int
mov
xchg
sbb
(bad)
enter
mov
adc
(bad)
mul
lahf
in
pop
ds
mov
stc
sub
call
sbb
mov
sbb
adc
xchg
mov
mov
mov
test
add
mov
mov
iret
sub
xchg
mov
sahf
push
ins
cmps
daa
add
inc
xor
out
jmp
(bad)
adc
dec
pop
js
cmp
fstp
add
(bad)
mov
outs
cs
jle
call
imul
cmp
xor
aaa
cmp
movs
test
push
xor
mov
stos
xlat
mov
mov
pop
xchg
cwde
xchg
cmp
ins
push
jnp
add
cmp
nop
mov
ror
mov
or
push
xlat
ffreep
ds
stos
jae
xor
sub
or
shr
loop
and
fdivr
add
rep
test
mov
jle
test
stos
int
mov
jl
popa
sbb
(bad)
neg
mov
jne
adc
aad
or
call
aad
inc
lahf
adc
mov
jmp
push
lods
rol
dec
mov
jb
mov
and
arpl
push
out
out
pop
daa
inc
mov
retf
js
push
or
push
lea
xlat
out
and
mov
jo
push
jne
es
mov
mov
(bad)
mov
lock
aaa
or
cmp
(bad)
adc
jne
lock
xor
nop
mov
mov
(bad)
jle
das
xbegin
fwait
and
inc
in
cli
dec
jbe
mov
movs
sbb
mov
rol
mov
aam
sahf
movq
ins
retf
cmp
mov
inc
mov
mov
sub
pop
aaa
cmps
pop
bound
ins
pop
fld
dec
inc
lds
and
cdq
mov
imul
dec
and
outs
mov
inc
lods
imul
stos
mov
daa
push
mov
sti
popf
pop
movs
fcmovnbe
out
pop
inc
cdq
aaa
sbb
in
(bad)
jg
pop
(bad)
je
xchg
pop
mov
aaa
sub
jge
in
popa
mov
jle
out
adc
xchg
xor
adc
nop
pop
cli
gs
pop
into
cwde
mov
xlat
mov
adc
pop
ds
add
mov
lea
out
sbb
inc
xor
mov
unpckhps
xlat
dec
aam
movs
inc
pop
clc
inc
add
sub
repz
xchg
arpl
loopne
lock
inc
iret
xchg
fnsave
mov
pmullw
jne
inc
push
or
mov
scas
mov
sahf
leave
pop
in
cs
mov
dec
add
cmp
sub
ss
leave
mov
mov
and
aam
and
mov
test
sub
jae
mov
xor
lea
lock
adc
dec
jl
cmp
pop
add
out
sbb
imul
or
call
xor
pop
xchg
or
push
and
mov
stc
push
fisttp
ret
dec
cmp
xchg
mov
popa
fild
jecxz
enter
pop
mov
ja
movs
not
sub
sbb
sub
pop
or
mov
push
je
push
or
jmp
xchg
mov
sub
xor
pop
adc
push
adc
xor
fcom
pop
jmp
call
shl
push
sub
pusha
mov
pushf
scas
daa
scas
int3
gs
loopne
ucomiss
xchg
mov
jle
mov
cli
ins
mov
pop
std
mov
cmp
mov
inc
jnp
xor
inc
xor
in
pop
pushf
sub
stos
call
jmp
stc
adc
rol
mov
rcr
dec
repz
repnz
xor
sbb
push
loop
out
pop
fiadd
xor
push
push
cwde
fs
(bad)
mov
pop
add
dec
jl
inc
in
mov
add
in
and
xchg
iret
fnstsw
test
(bad)
pusha
stos
xor
or
out
ss
movs
es
popf
mov
add
into
sar
mov
jns
add
mov
fnsave
dec
inc
loope
shl
xchg
sbb
push
stos
ins
or
ins
out
push
retf
push
sub
inc
sbb
jl
jb
scas
ret
mov
sahf
cmc
ja
fs
add
in
stos
and
sti
faddp
push
lods
sub
mov
pop
frstor
mov
mov
ins
add
xor
push
test
repnz
ja
push
ins
outs
fsub
inc
mov
fadd
test
xchg
mov
sbb
ins
add
pop
hlt
add
jg
cmp
popa
test
add
loop
in
mov
imul
and
ret
mov
add
jbe
xor
mov
mov
ror
cwde
std
pop
xchg
iret
call
movs
shl
das
lea
add
mov
xlat
cli
mov
pop
adc
adc
lods
dec
push
and
or
neg
inc
dec
fisub
and
push
pop
cmp
pop
xor
pop
jae
call
mov
pop
mov
adc
fcomp
push
enter
pop
fadd
adc
mov
in
dec
add
rcl
sbb
scas
mov
scas
xchg
xchg
call
test
lahf
imul
sub
pop
adc
fstp
and
cmp
sbb
popa
mov
fldcw
or
push
fistp
pop
sahf
jg
in
jnp
stc
icebp
mov
mov
not
and
icebp
ja
push
add
xchg
xchg
dec
sub
icebp
adc
in
cmc
ins
push
leave
movs
jo
nop
ret
jl
push
and
adc
cmp
mov
fs
ins
nop
mov
and
fs
xor
es
xchg
pop
aad
outs
xchg
or
jns
mov
int3
sub
not
inc
cli
lahf
js
call
cwde
sbb
iret
ins
sbb
mov
adc
cmps
out
jae
adc
int
jae
inc
int3
or
das
pop
js
pushf
xlat
or
pop
inc
int3
test
and
jae
mov
jmp
pop
inc
std
push
sub
cmps
cmp
and
xchg
shl
push
outs
mov
gs
xchg
sqrtps
imul
mov
mov
adc
and
or
js
aad
xor
sbb
jl
in
jnp
scas
scas
xchg
gs
pop
pop
and
mov
rcl
mov
xchg
mov
push
retf
jle
pop
mov
movs
and
mov
fisttp
cmp
adc
call
sub
mov
sahf
cs
call
or
(bad)
aad
xor
hlt
dec
pop
rol
popf
arpl
stos
push
adc
mov
in
xor
jmp
ds
adc
push
out
into
popa
hlt
pop
jle
enter
pop
loop
retf
rcl
cdq
scas
adc
lock
arpl
adc
je
xor
dec
outs
dec
fisub
aaa
and
mov
aam
lods
jmp
es
mov
popaw
xchg
adc
xchg
add
jb
pop
dec
loopne
das
scas
sub
and
inc
add
nop
cmp
cmps
jp
fs
jns
push
sbb
cmp
push
and
out
sbb
loopne
das
repnz
cmp
popa
mov
xchg
mov
mov
out
mov
push
call
les
movs
push
and
jp
daa
mov
push
outs
rcr
xor
and
mov
(bad)
aad
shr
stos
and
push
dec
or
pop
xchg
sub
adc
mov
dec
add
rcl
mov
(bad)
mov
cmp
add
repnz
(bad)
hlt
push
xor
add
jmp
jb
push
pop
pop
dec
xor
test
adc
mov
scas
das
and
mov
add
into
in
test
aad
mov
mov
pop
mov
or
jno
lock
sub
inc
fnstsw
xor
xchg
sub
jbe
push
rcr
hlt
(bad)
std
mov
dec
mov
ja
pushf
pusha
dec
popf
test
mov
aas
je
dec
lods
adc
arpl
add
push
mov
jo
mov
sbb
xchg
pop
movs
jb
fiadd
lea
pushf
sti
das
mov
retf
dec
xor
rcr
stos
add
xlat
push
xchg
mov
push
mov
out
mov
inc
data16
push
arpl
data16
and
(bad)
fcmovnbe
stc
arpl
and
(bad)
pop
push
pop
mov
aam
xchg
icebp
cmc
clc
inc
pop
in
dec
ins
repz
sti
retf
aas
xchg
cwde
mov
lock
jle
mov
mov
sar
aaa
sbb
xchg
mov
out
fistp
xchg
mov
cmc
(bad)
jo
into
aas
fwait
pop
push
xor
sub
movs
fistp
pop
outs
pop
cmp
fdiv
mov
mov
xchg
ins
xchg
and
clc
fnsave
sbb
xor
dec
shl
cwde
psrad
pop
mov
sub
imul
cwde
xchg
jb
iret
ror
dec
shl
cdq
sbb
jne
jmp
cmp
sbb
(bad)
jmp
jnp
xor
nop
clc
xchg
(bad)
and
data16
stos
jmp
xchg
pop
lods
out
outs
add
daa
leave
adc
cmp
enter
jb
xchg
popa
adc
mov
sahf
adc
push
call
xor
mov
sbb
add
adc
in
lock
and
out
popf
(bad)
in
jno
ret
cmps
addr16
not
add
cmp
leave
jmp
scas
jbe
jecxz
(bad)
lods
repz
cmp
(bad)
mov
ins
sbb
add
hlt
sbb
in
(bad)
jns
sub
push
lea
push
dec
test
mov
out
inc
dec
movs
neg
fdivr
lods
or
pop
inc
call
cmp
es
loope
pushf
sbb
mov
mov
cmp
jb
cwde
out
pop
pop
adc
mov
dec
(bad)
xchg
gs
shl
stos
xchg
(bad)
pushf
xor
das
(bad)
dec
repz
cmp
shl
(bad)
pop
pop
js
mov
xchg
and
inc
js
jne
xor
and
test
sbb
jg
lock
push
nop
push
mov
lock
jge
daa
jae
or
sub
jl
outs
inc
es
fsubr
retf
sub
scas
dec
inc
xchg
adc
cmp
dec
mov
fsubr
psubusw
adc
mov
sub
mov
push
mov
les
pop
ds
xchg
inc
adc
cdq
fld
mov
xlat
pop
dec
sub
inc
outs
movs
ror
stos
xchg
and
daa
and
loop
retf
aaa
shl
pusha
jecxz
pop
sub
clc
pop
shr
je
mov
push
jmp
lock
je
xor
dec
adc
in
aas
cmps
outs
mov
or
xor
gs
mov
movzx
mov
daa
xor
call
(bad)
sbb
pop
push
cmp
ins
lahf
mov
mov
std
ret
xchg
cmp
push
icebp
adc
mov
out
adc
hlt
rcl
jno
test
add
push
fwait
ret
mov
or
movs
mov
dec
jl
loopne
jne
and
sbb
sub
cs
xchg
fcom
pop
arpl
aam
in
sbb
push
test
mov
cwde
ficom
sub
and
call
xor
add
movs
loope
and
mov
push
push
add
sub
xor
push
jno
push
call
loope
add
and
je
or
mov
lods
xchg
mov
push
add
cmp
je
push
out
stos
add
scas
fsubr
pop
outs
jb
push
pop
out
sub
hlt
dec
fld
(bad)
jne
or
adc
inc
stc
jg
je
dec
sbb
cmc
xchg
jecxz
ds
inc
cld
test
xchg
sub
ror
mov
les
adc
mov
push
mov
push
and
lods
dec
jno
push
(bad)
jns
ss
shl
(bad)
retf
das
ins
jb
retf
fld
mov
shr
jns
dec
cmps
arpl
jecxz
add
adc
add
bound
(bad)
or
or
sub
mov
pmaxsw
dec
mov
arpl
jo
cmps
adc
iret
jns
cmp
jbe
inc
das
cli
and
xchg
mov
int
xor
add
es
push
dec
mov
inc
mov
push
xor
mov
pop
dec
aaa
add
sub
icebp
je
lea
cmps
les
xor
sbb
cli
cmp
scas
and
adc
and
mov
sub
cmc
jns
fs
aaa
xor
mov
repz
xchg
popf
pop
mov
cwde
(bad)
es
xor
dec
in
pop
push
outs
dec
out
adc
or
mov
pop
lea
pop
mov
fbstp
jg
dec
push
and
adc
push
cmp
jmp
(bad)
xchg
dec
and
into
adc
pop
repz
adc
out
cs
add
cmp
fsubr
fwait
cmp
inc
mov
or
xchg
push
pop
(bad)
imul
std
adc
cdq
jmp
scas
jae
xor
mov
shr
xlat
xor
jp
lahf
pop
xchg
add
rcl
cmp
dec
sub
xchg
jo
push
jp
mov
sbb
(bad)
jecxz
mov
or
imul
pop
loope
scas
fist
mov
cmps
retf
jae
jecxz
jmp
inc
(bad)
sbb
push
push
jb
aas
dec
or
mov
stos
jl
data16
xor
add
xlat
lods
lds
(bad)
jb
ins
call
dec
ss
bound
jecxz
das
bound
cmp
push
sub
push
mov
add
jp
aas
out
dec
std
mov
mov
jmp
jle
icebp
or
mov
sub
lods
test
enter
mov
push
adc
push
ret
ret
inc
pushf
mov
mov
xor
nop
sub
sub
push
not
push
out
sahf
xor
stos
hlt
push
test
inc
xlat
add
je
jg
push
push
leave
xor
scas
cmp
iret
push
out
xchg
mov
out
ds
call
dec
or
in
push
es
inc
jecxz
imul
and
push
jge
xor
das
dec
out
in
and
jb
arpl
mov
ror
sub
inc
mov
or
mov
inc
push
out
adc
mov
mov
shl
mov
inc
mov
sub
(bad)
dec
adc
sub
xchg
(bad)
mov
(bad)
xchg
push
(bad)
push
mov
popf
je
fxam
cmc
pushf
ds
leave
cmp
fst
lods
pop
mov
fisubr
adc
fwait
cdq
imul
mov
adc
mul
inc
xchg
loope
or
jne
lahf
scas
mov
xchg
inc
or
adc
call
out
dec
or
(bad)
popf
pop
xchg
mov
call
fwait
addr16
test
ret
xlat
js
sub
shl
icebp
leave
lahf
cwde
jle
sbb
sbb
retf
aas
out
shl
pop
xchg
ret
ins
call
icebp
aaa
or
jmp
enter
fcom
outs
out
in
jno
vmread
fmul
lods
add
test
jge
cld
aaa
mov
in
mov
xor
sar
pop
push
lods
pop
xor
nop
mov
sub
jmp
sub
sub
call
add
addr16
push
ret
xlat
in
rol
div
push
arpl
icebp
cmp
and
xchg
sahf
sbb
stos
nop
jnp
cmp
mov
mov
sub
addr16
mov
mov
mov
fcom
jle
cmp
fbstp
adc
imul
mov
sti
lods
xchg
jle
xchg
push
jg
mov
loope
neg
movs
push
cmp
out
ins
xor
push
or
mov
jge
inc
fld
add
cmp
shl
sar
sbb
out
xlat
or
jnp
movs
(bad)
jmp
jmp
pop
xchg
cmp
mov
gs
ret
jbe
ins
rcr
sub
repz
lods
enter
loop
call
xor
pop
ins
dec
jp
stos
dec
inc
mov
jb
sbb
mov
retf
imul
push
push
push
pop
or
push
popf
(bad)
(bad)
clc
popf
jae
jo
loop
cmp
jmp
in
mov
jbe
or
fild
push
aam
arpl
cwde
mov
jno
lods
int3
imul
ins
xchg
adc
les
popa
idiv
cld
imul
inc
std
mov
xchg
dec
mov
or
imul
sub
int3
cmp
iret
mov
xchg
imul
mov
mov
call
movs
jg
push
cmp
xlat
es
mov
mov
cli
and
push
cmps
(bad)
xor
jmp
movs
push
fcom
add
loop
dec
mov
push
xor
mov
sub
ror
in
mov
int3
outs
fadd
mov
test
pop
loope
mov
push
lea
fiadd
movs
mov
in
cmp
add
mov
outs
das
lea
(bad)
push
dec
pop
dec
sub
mov
and
mov
mov
xchg
xchg
push
arpl
addr16
jle
add
fisttp
push
or
gs
dec
into
xchg
arpl
mov
test
cli
mov
shr
sub
repz
cld
xchg
loop
cmp
leave
sahf
ss
pop
adc
mov
ins
sub
cmp
call
xor
test
xor
das
mov
pusha
mov
adc
sbb
js
pop
movs
cmps
push
pop
adc
fs
mov
inc
fidivr
sub
fistp
shl
mov
sar
(bad)
dec
lds
(bad)
ficom
cmp
sbb
mov
lds
in
push
aad
retf
xor
xchg
jnp
mov
test
stc
aam
cli
xchg
imul
test
je
xchg
data16
ret
mov
mov
aas
mov
cmp
mov
hlt
sar
call
pusha
cmp
pop
out
xor
push
out
imul
mov
jb
add
bound
mov
or
sub
push
jb
ss
mov
data16
mov
scas
pop
jo
adc
retf
mov
sbb
mov
mov
jmp
add
jnp
mov
xor
mov
jge
addr16
fstp
mov
popf
mov
mov
sti
shr
rol
addr16
sub
xor
imul
test
loope
cmp
cli
push
xchg
(bad)
(bad)
ins
popa
out
inc
pop
dec
cld
jl
push
ss
cwde
xor
sub
loop
ds
cmp
sub
add
cld
adc
scas
mov
inc
inc
dec
push
sub
(bad)
cmp
mov
test
fstp
loope
xchg
xor
imul
nop
cmp
dec
sar
pop
hlt
(bad)
pop
fsubr
mov
jmp
xor
or
(bad)
call
sbb
out
cmps
pushf
fdivr
xchg
mov
jge
xlat
sbb
loope
adc
pop
and
or
out
jno
fdivr
rcl
mov
je
ins
dec
out
xor
fld
imul
int3
iret
add
add
mov
dec
fadd
xchg
xchg
add
iret
and
aaa
(bad)
mov
adc
xor
test
ins
imul
jle
aaa
dec
aas
and
lock
aas
sbb
push
ins
pop
out
mov
ja
mov
ins
sub
pop
arpl
cmp
fild
inc
push
jmp
pop
(bad)
stc
mov
cmc
cmc
adc
add
sbb
test
xchg
rcr
pushf
in
inc
movs
ins
xchg
les
nop
adc
adc
mov
adc
aaa
mov
aaa
movs
hlt
mov
test
(bad)
sub
push
mov
sbb
add
jae
(bad)
cmp
retf
cmp
and
icebp
lods
addr16
xlat
inc
or
and
mov
mov
xor
pop
push
xchg
mov
push
fisubr
sbb
sbb
sub
retf
xchg
je
adc
cmp
and
in
pop
fwait
cmp
jp
xchg
push
cmc
cmp
cmp
push
sub
dec
bound
mov
cld
or
and
inc
call
js
addr16
loope
retf
mov
jb
dec
push
mov
or
add
cdq
jne
out
xrelease
(bad)
clc
scas
nop
add
das
div
xor
stc
push
in
mov
imul
cdq
nop
(bad)
aam
sbb
ficom
push
leave
mov
cmps
and
xor
lods
jle
add
scas
fisub
add
test
dec
call
sub
jmp
or
jbe
sub
mov
sub
push
cmc
call
int
push
fldcw
dec
cmp
int
and
loopne
or
in
pop
jmp
sbb
or
push
lahf
imul
outs
xchg
sbb
test
and
push
scas
or
pop
jns
xor
test
fstp
ss
cmc
in
fadd
jecxz
xor
sbb
mov
mov
rcr
jmp
mov
jb
push
cmp
push
xchg
(bad)
test
in
cmps
cmp
mov
push
cld
arpl
xchg
movs
pop
jbe
rcr
xlat
inc
xor
jae
out
cmp
movs
push
cs
cmps
hlt
(bad)
sti
pusha
sbb
mov
dec
arpl
scas
idiv
loopne
jle
stos
push
or
fidivr
xor
fst
inc
lods
adc
fldcw
or
gs
and
or
push
int
pop
popa
sbb
xchg
ins
mov
push
and
mov
xor
pop
push
adc
adc
and
or
sti
xchg
sbb
into
fist
jae
ror
and
jo
jno
inc
push
xchg
inc
aam
add
shr
pushf
fcomp
imul
dec
std
mov
dec
xchg
xchg
pop
xchg
inc
xchg
jnp
dec
inc
mov
adc
xchg
jns
leave
jb
fdiv
push
or
inc
(bad)
daa
jle
call
and
sti
jge
inc
das
xchg
xchg
pushf
mov
psubq
inc
inc
push
push
pop
out
popa
icebp
inc
or
aaa
(bad)
(bad)
popa
adc
jge
inc
adc
inc
scas
xchg
iret
outs
push
jge
(bad)
sbb
sar
rcr
jmp
or
or
aas
call
jmp
push
lods
retf
dec
in
(bad)
cmps
inc
repnz
stos
nop
ds
xchg
and
jg
xchg
(bad)
loope
mov
ins
sbb
dec
pop
push
xor
int
sub
push
inc
data16
sahf
out
xchg
sbb
repnz
inc
lea
das
pop
(bad)
mov
sbb
loopne
ja
ret
mov
jp
xor
ins
mov
push
push
fist
fnsave
mov
push
cmp
cmps
mov
inc
add
push
scas
ficom
cmp
bound
jl
xor
adc
add
imul
jmp
dec
lods
mov
inc
clc
sbb
repz
xlat
sbb
(bad)
mov
sbb
lock
stos
sbb
push
mov
or
push
into
push
cmp
add
inc
or
and
xor
jle
imul
mov
dec
and
dec
and
fstp
jp
lds
ja
ss
push
adc
add
and
out
push
aad
push
fadd
jae
jg
test
push
xchg
in
jle
movs
sub
adc
add
mov
bound
retf
dec
das
add
ret
xchg
jg
aaa
adc
je
ja
xchg
jl
adc
lods
call
sub
daa
inc
xlat
call
jp
sbb
sub
rcr
jmp
js
cmp
pop
jmp
imul
and
loopne
push
lea
loopne
add
cmp
aad
je
and
cdq
inc
ret
add
in
mov
test
mov
push
xchg
mov
adc
ss
push
push
int
adc
daa
pop
test
xor
mov
sub
test
cmp
xor
cdq
add
jne
out
sbb
stc
xor
into
fwait
sbb
sbb
mov
dec
inc
sub
inc
sub
loop
std
repnz
ret
aad
fbld
sub
xchg
xchg
jl
sbb
jmp
rcl
jp
pop
or
add
repnz
mov
sahf
cmps
add
and
lock
jne
ins
or
movs
mov
out
dec
loop
add
fwait
ret
mov
mov
sbb
retf
shl
push
es
sub
jb
cmps
adc
pop
icebp
jge
rcl
dec
pop
(bad)
and
arpl
push
ss
xchg
aaa
mov
stc
inc
mov
mov
rol
add
jp
dec
mov
xchg
jp
push
test
pop
inc
dec
pop
jl
mov
adc
mov
mov
fsubr
std
inc
ss
sub
jge
xor
add
sub
dec
mov
jb
and
out
sbb
pushf
xchg
pop
in
add
ss
vpcmpestri
pop
dec
clc
inc
lahf
pop
sbb
fbld
xchg
iret
cmp
sub
jo
outs
std
xchg
push
mov
aam
jl
cli
fdivr
out
push
and
lahf
pop
jg
add
jl
sub
sbb
push
cmp
call
popf
push
add
cld
pop
xchg
inc
lahf
aas
retf
ret
movs
dec
mov
adc
rcl
or
mov
or
sbb
shl
xor
jg
push
xor
inc
add
repnz
adc
push
scas
jo
adc
scas
repz
adc
jecxz
jmp
add
fwait
cmc
jle
cmp
jge
loopne
push
jg
nop
mov
jl
ret
mov
(bad)
sub
ins
push
nop
cwde
xchg
inc
or
add
push
pop
mov
cld
push
out
xlat
sbb
push
dec
push
(bad)
(bad)
cs
movs
stos
clc
pop
xor
add
dec
xchg
adc
mov
and
mov
xchg
gs
cmp
into
ror
jne
mov
nop
add
jne
les
mov
or
fsub
or
aaa
cmp
xor
xchg
add
outs
adc
pop
mov
or
push
imul
add
in
sti
mov
jmp
(bad)
cmc
cmp
fbstp
stos
cmp
outs
sbb
or
push
jns
enter
into
ret
mov
cmps
stc
jmp
pop
scas
iret
in
rcl
push
retf
(bad)
xor
ja
add
pop
mov
xor
dec
ror
aas
ja
jge
out
fld
dec
jb
mov
jo
(bad)
pop
pop
(bad)
xlat
out
sbb
mov
call
test
mov
add
(bad)
call
pop
lea
lods
imul
mov
mov
cs
cmp
adc
add
ins
push
fwait
dec
sub
aad
push
leave
mov
clc
enter
into
xor
adc
ja
(bad)
neg
add
iret
jns
mov
rcl
cld
inc
jp
inc
rcl
xor
sbb
sbb
add
cmps
sbb
lahf
inc
fs
mov
jmp
(bad)
xchg
jl
inc
push
ror
mov
dec
adc
int
push
inc
scas
(bad)
cmps
xor
xor
loop
cmp
jns
inc
xor
test
adc
leave
pop
jbe
jo
pushf
fdivr
les
mov
(bad)
dec
and
pop
jmp
or
rol
mov
cld
sti
dec
(bad)
test
ss
js
loope
sub
xchg
mov
inc
jmp
lds
loope
ss
pop
arpl
jle
leave
xor
aam
aad
adc
test
sub
not
adc
(bad)
xchg
mov
fisttp
jmp
test
inc
sub
lds
sub
mov
mov
pop
loopne
and
in
cmp
test
hlt
mov
adc
mov
jl
push
adc
or
dec
or
cmp
fs
mov
pop
jne
mov
cmp
sbb
repnz
rcl
jne
mov
or
mov
imul
jg
sub
in
dec
push
(bad)
fsubp
inc
pop
lods
in
loop
lods
test
pop
shl
in
ror
mov
out
pop
dec
pop
jns
inc
push
or
cmp
adc
call
cmp
mov
push
fwait
cmp
mov
mov
lods
(bad)
stc
aaa
cmp
push
xchg
fstp
imul
enter
movs
push
popa
adc
jne
push
ds
sbb
in
cmp
std
sub
(bad)
push
pushf
cld
loopne
pop
leave
imul
shr
push
adc
xchg
pusha
cmp
fnsave
or
jne
leave
push
mov
jnp
or
dec
call
cmc
inc
sub
inc
push
in
movs
ins
(bad)
sub
mov
and
add
mov
mov
add
fldenv
loope
cs
xchg
hlt
jmp
ja
dec
nop
scas
scas
nop
loope
fld
push
or
sbb
sbb
int
xchg
lock
and
cmp
inc
cs
lea
in
sbb
test
outs
test
jno
mov
shl
or
adc
sbb
ds
xchg
sti
rol
dec
dec
jmp
sbb
scas
repnz
mov
jmp
out
dec
fs
scas
sbb
jmp
das
push
adc
lock
push
popa
cdq
call
and
popf
fwait
sti
inc
xor
adc
(bad)
clc
sbb
ins
popa
in
jge
pop
sub
in
push
test
dec
mov
push
mov
in
or
cmp
and
adc
(bad)
or
(bad)
iret
push
popa
push
dec
cmps
adc
fmul
test
out
ja
lods
fidivr
retf
or
int
and
pusha
je
cmp
jnp
push
adc
sub
xor
add
nop
inc
dec
push
fnstcw
and
aad
in
push
mov
push
mov
or
adc
xchg
xor
adc
push
mov
shl
shl
sahf
aaa
dec
call
out
lahf
in
mov
xlat
jle
jge
std
popf
loop
or
pop
add
cwde
fwait
dec
mov
xchg
mov
push
movs
fiadd
(bad)
sti
mov
jl
dec
es
sar
jbe
push
(bad)
call
pop
rcr
add
mov
xor
push
out
movs
dec
and
lods
jl
xchg
push
rcl
sub
popa
and
xor
in
cmps
push
fdiv
dec
shl
xlat
add
sub
(bad)
adc
mov
arpl
nop
mov
cmp
push
scas
mov
push
xchg
sbb
into
sbb
icebp
push
pop
inc
mov
test
jle
or
int
xchg
push
fdiv
jge
out
imul
icebp
ds
jns
mov
jecxz
in
loope
sub
repz
frstor
jb
or
sub
es
int3
retf
stos
sahf
enter
(bad)
fimul
sahf
push
or
and
icebp
inc
arpl
rol
xor
clc
jnp
or
sbb
sbb
jns
ret
xchg
fbstp
adc
jnp
rcr
aam
cmps
mov
jbe
cmps
ds
or
fdivr
adc
movs
xor
addr16
out
jae
push
jp
(bad)
popf
mov
and
push
inc
adc
je
repz
or
jb
push
mov
hlt
call
mov
shl
push
stos
loop
shr
xchg
or
dec
fwait
in
cli
sbb
popa
pusha
call
mov
stos
add
jae
or
inc
js
cmp
loopne
dec
out
lods
xchg
cmp
xchg
stos
pop
cmp
xor
mov
and
aas
popf
loop
ins
sar
xchg
dec
xor
aad
arpl
dec
ret
lahf
push
mov
cmps
mov
repnz
pop
mov
adc
lds
cmp
std
test
lods
lods
cmc
push
pop
jbe
adc
pop
pop
bound
add
sbb
in
pop
aad
xchg
inc
mov
adc
out
enter
adc
pop
sahf
popf
jl
inc
scas
inc
leave
pop
mov
pop
cld
push
xchg
dec
mov
data16
cmps
cs
leave
aaa
push
and
in
mov
fs
inc
xor
xchg
test
adc
out
jecxz
popf
dec
not
mov
push
js
xchg
sahf
push
call
cmp
and
ja
add
mov
dec
retf
std
mov
dec
outs
adc
es
into
pop
mov
cmp
es
pop
or
pop
mov
xchg
mov
mov
and
mov
pop
adc
and
jl
test
push
add
loope
ins
sti
pop
add
lea
push
mov
daa
out
adc
mov
push
mov
push
sub
leave
lods
ficomp
das
mov
cmp
outs
or
adc
jg
add
xlat
xrelease
sbb
or
aam
pushf
lds
test
mov
inc
(bad)
xchg
sti
pop
in
pop
icebp
dec
jge
xor
xor
test
sbb
(bad)
mov
xchg
add
push
jbe
cs
xor
rol
jno
push
je
(bad)
mov
pop
lds
mov
lahf
inc
mov
jmp
xchg
pusha
inc
shl
add
scas
push
cmps
stos
lods
hlt
push
rcl
loopne
scas
stc
std
outs
scas
loopne
jp
jbe
clc
inc
dec
es
mov
shr
jo
push
out
jbe
mov
dec
movs
outs
aas
pushf
cmp
rcr
xchg
xor
pusha
or
add
(bad)
stos
sahf
xor
add
mov
mov
test
aaa
(bad)
fisub
aaa
dec
dec
leave
mov
add
bound
rcl
stos
sbb
data16
movs
shl
jl
jmp
or
cmp
xor
fmul
scas
xor
out
aad
addr16
mov
cmp
add
add
xchg
sahf
dec
cmp
cli
sub
ret
cmp
dec
loope
(bad)
sahf
xor
push
push
scas
and
(bad)
retf
add
out
(bad)
push
fild
mov
iret
aas
ror
and
lock
sbb
or
movs
mov
rcr
das
dec
cwde
push
dec
push
xlat
fimul
jbe
mov
xor
pop
inc
xchg
(bad)
jnp
ins
adc
fcomp
cli
push
les
sahf
cli
rol
or
into
loop
sbb
imul
cwde
pop
enter
hlt
clc
jmp
lahf
fimul
outs
stos
aas
(bad)
and
cmps
adc
iret
cmp
mov
mov
cli
leave
pop
lea
sub
inc
call
cmps
jg
ror
hlt
mov
lods
jge
sbb
jmp
and
inc
shl
les
sbb
add
(bad)
mov
(bad)
sbb
push
jg
push
ror
add
ret
xor
adc
push
data16
aad
jb
cmp
pop
xchg
nop
cli
adc
idiv
pop
or
int3
in
popa
jne
pop
pop
add
je
call
sub
mov
fs
cmp
movs
and
inc
push
call
and
call
call
dec
scas
lods
xor
ret
imul
inc
mov
xchg
jne
in
jmp
xchg
xchg
xchg
xor
aad
and
ret
inc
cmps
jne
dec
and
lods
xchg
int
shl
cmp
push
fcmovnu
adc
into
clc
pop
scas
push
mov
xchg
lds
add
pop
fld
jne
div
jne
repz
jge
mov
rol
out
xchg
fdivp
mov
stos
sub
repnz
stos
mov
(bad)
jmp
sar
mov
mov
fnsave
pop
sub
out
sub
lods
dec
xor
call
fs
dec
fstp
xchg
int
mov
jo
btc
mov
clc
push
in
js
popf
and
daa
xchg
ins
fmul
sbb
outs
retf
jb
out
call
xor
ret
mov
xchg
xor
cld
xchg
aad
movs
(bad)
sbb
and
cmps
popf
sub
sbb
inc
in
xchg
leave
fcomp
pop
cdq
aas
adc
cmp
jp
sbb
jle
pusha
call
or
dec
(bad)
jl
sub
push
jo
xor
mov
jb
rcl
jmp
nop
test
jg
ret
adc
xor
dec
clc
stc
das
sub
cmp
(bad)
stos
pop
jne
push
jp
(bad)
ja
sar
loope
dec
sar
repnz
mov
sbb
cli
adc
inc
push
arpl
mov
mov
fmul
leave
test
mov
sbb
popa
adc
(bad)
inc
mov
sti
inc
outs
or
mov
outs
arpl
xchg
pop
inc
popa
cmps
jge
push
sti
or
cld
nop
cmc
jb
scas
(bad)
jge
jmp
std
call
jo
push
out
(bad)
neg
(bad)
cmp
pop
add
dec
dec
cmp
loopne
imul
fistp
sahf
or
jb
outs
sub
xchg
dec
mov
scas
ins
sbb
std
xlat
cwde
pop
jl
jg
call
adc
ret
iret
push
push
xchg
xlat
xchg
aad
push
(bad)
jno
lods
lahf
cwde
cmp
sub
push
or
ss
clc
and
pop
cmp
sub
daa
xor
push
or
add
or
loop
ins
and
(bad)
popf
or
jl
sbb
lds
(bad)
mov
std
aas
repz
mov
dec
js
cli
mov
cli
fnstsw
pushf
leave
(bad)
movs
(bad)
dec
in
or
mov
pusha
cmp
fs
(bad)
movs
push
test
or
fcom
jne
adc
cmp
cld
scas
ss
sub
push
fs
xor
retf
sbb
outs
aas
xchg
inc
cs
adc
cdq
xor
aam
inc
jg
stc
mov
js
ins
or
es
stc
push
daa
cmp
les
sub
and
jl
mov
mov
popf
or
pop
test
adc
out
mov
push
fdivp
std
(bad)
aam
imul
lahf
pusha
addr16
out
cmp
cli
and
pop
push
add
mov
fs
push
and
add
cmp
stc
ds
sub
mov
hlt
sbb
and
add
dec
xchg
icebp
jmp
mov
in
jns
pop
pop
push
addr16
dec
aaa
mov
je
push
adc
lea
sbb
mov
mov
xor
out
cmps
push
mul
out
rcl
push
sub
push
jb
(bad)
lock
repz
dec
enter
inc
div
mov
fwait
pushf
sub
inc
or
arpl
iret
imul
sub
pop
scas
fs
div
or
mov
or
sbb
pop
imul
mov
add
and
in
daa
lods
xchg
cmp
inc
inc
inc
push
fcom
jle
and
inc
sbb
imul
push
test
cmp
xchg
imul
(bad)
(bad)
repz
dec
or
xor
neg
inc
ins
aaa
les
push
rcl
(bad)
outs
js
sub
or
pop
idiv
aad
sbb
sbb
pop
fcom
lahf
leave
mov
aam
sbb
pop
jo
test
push
sub
mov
in
in
rep
ss
stos
(bad)
xlat
sub
cmps
sti
call
cmps
shr
push
and
jo
in
retf
ja
mov
pop
mov
jmp
pop
aas
ret
xor
mov
fwait
sbb
fadd
mov
cmp
int
jne
or
or
mov
sub
dec
int3
cmp
jnp
ja
jmp
and
xchg
dec
(bad)
and
fst
inc
inc
and
mov
or
xchg
and
cmp
and
ja
sahf
or
out
xor
scas
xor
pop
add
mov
movs
(bad)
in
dec
inc
xor
ss
push
inc
sbb
jmp
add
ins
shl
hlt
aam
mov
outs
cwde
cdq
lea
or
xor
jae
addr16
inc
ins
cmp
jmp
sbb
mov
imul
or
aad
loope
and
and
fs
add
cdq
xor
cld
aam
sub
push
in
int
xor
loopne
inc
cmp
ret
mov
mov
push
loopne
jge
or
jns
in
push
popa
test
scas
sbb
ds
(bad)
jae
gs
mov
push
jp
cld
xchg
dec
ds
or
dec
pop
mov
pop
dec
fsub
jbe
jle
pop
and
(bad)
cwde
jmp
ror
pop
sub
or
xor
add
retf
in
xchg
inc
cmp
sbb
jbe
xchg
sub
mov
in
xor
push
leave
out
cmp
test
adc
and
adc
adc
xor
cmp
push
in
(bad)
xor
(bad)
cli
push
fcmovnb
lods
shl
aad
add
mov
hlt
inc
shl
xor
retf
mov
sbb
fst
pop
pinsrw
pusha
xor
xchg
lea
fild
loopne
ja
mov
arpl
call
dec
or
leave
das
sbb
call
loop
scas
mov
in
sar
outs
mov
movs
dec
retf
pusha
call
add
inc
and
pusha
mov
mov
mov
lods
cwde
repz
loop
les
add
xchg
xchg
sbb
inc
lock
fdivr
sti
xchg
cmp
into
dec
int
xlat
pop
ret
sub
outs
xchg
mov
mov
jo
jmp
mov
sbb
jmp
repz
ins
pop
jno
sbb
cmp
cdq
adc
sbb
icebp
fprem1
pop
addr16
js
lods
dec
sub
push
repnz
cmc
nop
jno
pushf
mov
(bad)
cmp
aaa
das
mov
fldcw
cdq
jno
jnp
idiv
(bad)
ror
das
addr16
add
retf
mov
push
xor
shr
jmp
xchg
xchg
inc
enter
sub
jo
scas
xor
jle
dec
in
mov
pop
popa
lahf
mov
pop
cmp
adc
daa
xor
dec
sub
cmp
dec
dec
cli
dec
rcl
xlat
iret
outs
mov
test
in
leave
and
jmp
movs
mov
popf
xchg
cmp
mov
xchg
dec
jle
cmp
fdiv
push
mov
pushf
xchg
int
mov
cs
sahf
shl
mov
pop
es
adc
(bad)
lahf
mov
shr
stos
cmc
pop
push
push
sbb
jmp
(bad)
aas
or
xor
add
or
cmps
xchg
pop
fistp
and
cmp
cwde
push
call
out
out
pusha
fistp
sbb
jbe
adc
dec
es
in
repz
cld
es
mov
xchg
leave
mov
push
mov
test
ins
mov
mov
sub
cmc
add
pop
dec
aam
xor
cwde
sti
ss
dec
push
push
jbe
xor
add
(bad)
adc
loopne
dec
and
fistp
add
lods
jmp
sbb
es
xchg
sti
cld
int
cdq
test
pop
or
sub
in
movd
pop
inc
outs
dec
data16
sti
dec
xlat
adc
and
repz
(bad)
int3
jle
stos
sbb
cmps
jae
ret
mov
ins
out
(bad)
sahf
call
or
add
jl
jnp
mov
popa
movs
fldcw
repz
hlt
ds
sbb
sbb
sar
loopne
scas
and
add
inc
mov
sbb
repnz
movs
cmps
movs
ret
mov
daa
xor
es
sub
mov
es
dec
or
sbb
pushf
xchg
test
mov
int3
ja
loope
inc
inc
dec
jae
cmp
jo
add
call
inc
mov
out
call
pop
and
and
mov
cdq
mov
lods
jnp
jmp
pop
jbe
jge
push
pop
dec
fmul
sbb
xor
ret
mov
or
add
cdq
xchg
imul
xchg
test
cmp
jmp
push
and
xchg
mov
es
cld
addr16
cmp
loope
ss
mov
in
xchg
cmp
loope
xchg
daa
movs
mov
mov
cmp
sti
lahf
les
out
lods
pop
sti
mov
pop
inc
xor
push
or
pop
icebp
in
inc
inc
jne
movs
fisttp
imul
in
inc
(bad)
mov
push
xchg
ror
mov
xor
fisub
retf
dec
inc
jb
mov
arpl
call
pop
dec
dec
(bad)
xchg
je
in
(bad)
(bad)
repnz
pop
shl
daa
pop
call
test
popa
xchg
sub
imul
jbe
adc
aas
xor
pop
mov
mov
out
ja
lds
push
rol
dec
cwde
(bad)
lods
xor
add
xchg
dec
sbb
push
xor
not
loope
mov
jo
add
xor
xchg
mov
mov
xor
sbb
iret
xchg
fwait
sub
mov
jns
pop
add
cld
dec
int3
jae
out
and
(bad)
pop
dec
jge
mov
loop
popa
test
int3
jnp
fwait
shr
xchg
addr16
inc
push
sbb
(bad)
xor
(bad)
stos
sahf
imul
jp
bound
adc
imul
jo
shr
adc
out
add
push
sub
mov
xor
fild
mov
pop
xor
mov
iret
sbb
mov
popa
in
shr
mov
sub
and
fist
xor
fcmove
and
imul
and
movs
stos
push
pop
test
push
mov
addr16
shl
cmp
dec
in
mov
clc
pop
mov
adc
cmp
pop
rol
jnp
rol
jge
xchg
dec
mov
add
mov
xchg
ror
adc
jnp
in
jge
shl
mov
mov
(bad)
jae
ss
xchg
in
cmp
retf
sahf
and
jmp
dec
xchg
and
loope
pop
(bad)
and
pop
xchg
mov
clc
mov
inc
idiv
int
add
clc
mov
pop
mov
sbb
scas
popa
and
pop
adc
push
pop
std
cmp
inc
outs
cmps
ret
ret
mov
jmp
push
pop
in
(bad)
popf
inc
pop
test
sar
hlt
ret
lds
popa
enter
(bad)
mov
nop
shr
outs
lock
push
adc
pop
add
xlat
js
inc
dec
mov
in
stos
jg
and
int
in
lea
retf
in
jge
xchg
imul
jns
fmul
retf
fisubr
fiadd
mov
jno
xor
cmp
lods
call
cmps
icebp
xchg
add
xchg
cli
jb
retf
xor
jg
push
stos
adc
or
sbb
xor
jle
jp
(bad)
adc
ja
mov
fidivr
adc
in
fiadd
pop
ss
and
xchg
inc
xchg
(bad)
fst
xor
ja
mov
div
inc
loop
push
sahf
scas
popf
and
mov
cmp
jae
lds
call
mov
lahf
fs
or
movs
and
cmc
out
mov
or
ficom
push
aaa
repz
repz
xchg
and
push
sbb
push
and
add
repz
(bad)
out
into
xchg
es
pop
mov
inc
inc
and
dec
je
or
iret
cli
outs
jno
gs
mov
jb
stos
xlat
xchg
mov
cdq
xor
mov
mov
and
mov
add
jle
xchg
repnz
push
outs
mov
pushf
aam
inc
pop
mov
dec
jae
pop
sbb
cld
and
dec
add
into
pop
and
or
adc
push
in
pop
out
xor
adc
aam
pusha
(bad)
clc
push
jg
and
out
iretw
into
bnd
mov
enter
cmp
sar
add
inc
iret
adc
adc
ds
push
test
jecxz
outs
sbb
jg
push
dec
call
jno
xchg
or
mov
cmp
and
int3
loopne
leave
mov
and
or
lods
arpl
loopne
push
pop
jne
mov
mov
mov
movs
out
out
add
rol
in
push
and
push
push
scas
sbb
out
pcmpgtw
adc
xor
sbb
pusha
xchg
mov
out
(bad)
jae
jecxz
popa
iret
mov
ret
rcl
adc
out
and
imul
dec
xchg
dec
and
adc
jne
jmp
xchg
dec
cwde
jle
xor
and
int3
sub
repz
pusha
in
dec
ret
pop
test
ret
and
sub
repnz
repnz
cmp
sub
movs
inc
lds
inc
call
jbe
or
inc
pop
cdq
idiv
sub
mov
jns
repnz
sbb
adc
or
in
and
jge
sub
pop
std
or
mov
xchg
pop
cmc
stos
(bad)
jge
ret
mov
push
sti
jnp
cld
les
ins
push
pop
sar
in
mov
call
stos
push
(bad)
and
es
or
xchg
ins
jg
clc
inc
retf
jmp
mov
stc
pop
(bad)
iret
mov
ins
ret
les
js
stos
ins
mov
dec
ja
ret
or
mov
mov
repnz
test
pop
lahf
xlat
lahf
shr
jl
sbb
(bad)
outs
dec
xor
call
mov
fbld
mov
retf
std
push
sbb
lea
add
sbb
retf
es
retf
ret
aaa
lods
fst
aad
(bad)
retf
mov
xlat
pop
and
adc
mov
(bad)
mov
xchg
inc
(bad)
or
mov
(bad)
test
cmps
sbb
add
sbb
sbb
leave
retf
sub
mov
das
cmp
jp
lahf
or
ss
addr16
test
call
push
mov
xchg
cmp
pop
push
popa
jne
ret
fs
jl
sbb
or
pop
aam
jb
loop
push
ja
sub
jno
int3
dec
jo
in
adc
mov
mov
push
pop
cmp
ret
rol
fisubr
aas
sub
(bad)
adc
push
hlt
cwde
fcomp
cmp
mov
cmp
es
jbe
pop
dec
sbb
sub
xor
cmp
gs
dec
xchg
int
inc
jecxz
mov
pusha
mov
push
adc
cmp
xor
sbb
push
and
and
(bad)
icebp
scas
pusha
jle
jb
sahf
mov
mov
sahf
adc
or
add
lds
addr16
or
jbe
fist
and
jp
or
sbb
pop
add
lods
xchg
pop
xchg
mov
movs
jnp
xor
and
or
cmp
imul
pop
(bad)
repnz
add
cld
cmp
sub
adc
xchg
dec
xchg
aad
dec
div
jnp
nop
into
in
fwait
out
xchg
daa
enter
mov
push
cmp
mov
sbb
outs
and
mov
bound
fwait
mov
mov
xchg
int3
cmp
cmp
jne
test
adc
sbb
push
push
fidiv
adc
ficom
or
push
cmp
nop
fisttp
loope
pop
call
int
shl
int3
jmp
and
add
mov
lds
jnp
pop
cmp
cmps
push
cmps
push
cmp
aam
push
adc
mov
icebp
aaa
xchg
in
sbb
and
pushf
inc
lods
xor
push
sar
cmp
pop
cmps
inc
fadd
(bad)
dec
out
sbb
in
push
inc
mov
sub
xchg
dec
ins
jae
mov
add
mov
cmp
add
push
cwde
dec
and
cdq
mov
mov
loop
retf
sub
push
aaa
inc
out
xlat
add
pop
sbb
xor
int3
in
icebp
xchg
xchg
icebp
mov
inc
test
enter
icebp
mov
nop
fimul
xchg
pop
xchg
dec
xchg
stos
enter
mov
popa
dec
or
and
stc
push
js
repz
test
es
pusha
test
sbb
and
aaa
sub
sti
push
rol
repz
sub
sbb
adc
dec
mov
jg
push
nop
pop
or
out
test
cmp
aad
push
fbstp
mov
push
mov
cdq
and
imul
sar
lods
ds
cmp
mov
rcl
mov
sbb
sbb
dec
into
into
(bad)
sub
add
or
xor
inc
popa
rol
aaa
test
dec
xchg
xchg
icebp
jg
jmp
jecxz
adc
add
aas
shl
ror
mov
cmps
cwde
rcl
retf
mov
(bad)
call
mov
xchg
pushf
mov
and
mov
bound
pop
(bad)
adc
les
xchg
jbe
sub
stos
fisub
jl
jge
cli
dec
fidivr
movs
push
mov
jno
xor
mov
xor
nop
sbb
fidivr
rcl
mov
pop
dec
jns
and
mov
dec
add
sbb
test
xchg
and
xchg
add
retf
jl
cdq
ins
sub
cmp
cmp
mov
test
sub
sub
jmp
jnp
adc
inc
test
push
int
int3
sbb
add
inc
mov
in
jae
lock
jb
inc
(bad)
lock
push
fs
(bad)
mov
lods
js
adc
popf
imul
int
imul
scas
pop
adc
cmp
fistp
cmp
push
in
retf
jo
stos
and
mov
cmps
fisttp
sbb
loopne
out
or
jge
ret
sbb
fisttp
repz
cmp
mov
mov
fs
rcr
sbb
xor
nop
jno
out
lahf
dec
jmp
xchg
jnp
cwde
scas
dec
lea
fsub
arpl
jns
jae
stc
loopne
data16
cmp
inc
push
jne
cmp
inc
fisttp
cmp
mov
mov
jnp
push
cli
in
fisttp
inc
xor
es
rol
ds
mov
and
sbb
mov
cmps
out
push
or
fistp
test
pop
push
and
mov
daa
loopne
or
fsub
repz
mov
stos
jecxz
popf
fwait
dec
mov
jg
pop
cmps
leave
aaa
inc
xor
sub
cmp
test
cdq
push
fwait
enter
adc
inc
stc
dec
push
fnstsw
sahf
fistp
bound
sti
test
inc
mov
cmps
jp
push
inc
dec
rol
leave
sbb
adc
inc
sti
loop
frstor
mov
jge
rcl
jo
push
mov
cmp
in
shr
stc
dec
mov
dec
pop
arpl
xor
push
jg
pop
retf
dec
pop
je
fidivr
fadd
shl
rol
mov
sub
dec
xchg
push
inc
dec
push
push
daa
into
into
mul
fadd
aad
sub
mov
ror
daa
jg
sbb
stos
sub
mov
jno
jbe
xchg
lds
inc
outs
jecxz
mov
das
fadd
test
cmp
fwait
(bad)
ss
aam
in
xchg
pop
adc
test
repnz
mov
sub
xor
les
jmp
ja
add
pop
mov
icebp
aas
xor
lods
jmp
es
shl
js
mov
mov
dec
lds
clc
push
mov
pop
pushf
loop
adc
stos
cs
push
add
jmp
mov
(bad)
pop
movs
add
lahf
fld
cmp
jb
jmp
call
mov
cmp
push
ins
gs
repz
push
cs
(bad)
pushf
lods
jmp
stos
loop
mov
mov
cwde
cmps
loope
mov
sar
sub
into
out
jo
jge
ins
jmp
jg
mov
pop
movs
(bad)
bound
add
iret
pop
push
or
inc
cmc
cmps
or
pop
push
xor
push
stc
stos
je
shr
adc
inc
(bad)
enter
or
retf
sub
jne
in
add
jmp
stc
movs
repnz
test
mov
in
dec
jl
xor
mov
aad
aas
dec
rcl
xor
std
mov
ins
test
je
add
and
das
(bad)
(bad)
(bad)
pusha
xchg
jns
lods
jmp
pop
aam
xchg
rcl
xchg
int3
mov
stc
int
daa
and
mov
adc
mov
or
cmps
out
and
or
(bad)
mov
je
in
test
rol
in
pop
pusha
xchg
mov
out
pop
inc
into
fist
inc
cmp
push
test
and
in
jle
scas
icebp
mov
or
pop
(bad)
ds
sbb
mov
adc
inc
addr16
outs
retf
sbb
out
aas
mov
push
imul
fs
mov
push
jne
lea
lahf
lods
mov
jae
je
fadd
cmc
sub
inc
sahf
mov
sti
jne
mov
aaa
out
push
call
dec
add
sahf
cmp
shr
sub
cwde
push
fdivr
mov
and
outs
call
dec
repnz
add
and
movs
stc
dec
test
cmp
test
and
fist
mov
push
inc
mov
push
test
in
mov
icebp
dec
out
js
ror
int3
add
mov
mov
jmp
loopne
and
fdiv
push
out
das
cld
repz
xchg
sar
sub
(bad)
std
shl
cmp
fs
stos
or
(bad)
lods
jno
push
and
stos
ret
xor
data16
mov
xchg
cs
dec
ror
ret
clc
sbb
mov
sbb
inc
or
sub
test
bound
jmp
mov
cs
mov
and
jmp
cmp
xchg
mov
js
ret
lahf
dec
push
cmp
mov
test
outs
add
pop
jge
xchg
arpl
mov
cwde
xchg
inc
out
cmp
mov
dec
cwde
mov
lock
loope
dec
jnp
sahf
pop
lds
out
out
test
mov
mov
push
xchg
mov
add
jg
xor
je
xchg
fsub
dec
pushf
test
and
xlat
fidiv
test
icebp
pop
sub
repz
or
movs
leave
shl
fstp
nop
ret
dec
jecxz
mov
loopne
test
imul
ins
pop
xlat
mov
dec
xchg
sub
sahf
stos
mov
push
ret
ja
mov
mov
imul
xchg
xchg
push
cld
push
xor
xchg
rcr
mov
shl
pushf
lea
fdivr
outs
hlt
cmps
test
repz
movs
xchg
push
arpl
inc
xchg
inc
std
pop
(bad)
mov
cs
mov
call
lods
rcl
cmp
call
jo
mov
fmul
cmc
cli
jbe
jne
xor
cmc
mov
shl
inc
stos
cmp
mov
lds
adc
cli
add
ror
pusha
dec
leave
fwait
xchg
inc
add
xor
cmp
loope
lods
sbb
xor
adc
or
leave
cwde
pop
loopne
inc
xchg
mov
leave
rsqrtps
mov
test
jmp
sbb
sub
mov
xor
push
add
pop
add
jo
push
sbb
pop
gs
sub
jge
imul
mov
loope
in
jnp
mov
mov
dec
test
push
and
pop
xor
test
or
scas
dec
mov
loop
cwde
pop
push
dec
jb
out
xchg
mov
dec
imul
and
in
rcl
js
pop
or
mov
cmp
adc
movs
mov
sub
in
sub
pop
aam
(bad)
xor
test
adc
bound
xchg
jmp
lock
adc
repnz
stos
(bad)
cmp
lods
shl
xor
pop
sbb
in
jo
or
pop
and
push
data16
push
or
push
dec
ror
daa
mov
rol
adc
lahf
aas
jp
xchg
call
mov
mov
mov
ret
sub
sub
mov
es
inc
push
outs
push
push
or
mov
enter
or
inc
retf
jp
adc
jb
jne
daa
std
movs
inc
mov
dec
jb
cmps
and
mov
pop
cmp
xor
xchg
adc
mov
ins
push
mov
fucomip
pop
adc
retf
push
xor
jle
fst
pusha
adc
and
xchg
sbb
add
push
bound
inc
pop
sub
movs
dec
jmp
push
mov
addr16
(bad)
jns
fldenv
cmp
cwde
or
test
xchg
std
xabort
push
mov
ss
mov
sub
retf
sub
mov
aam
retf
sbb
inc
push
fstp
cmp
pushw
add
pushf
or
dec
pop
jno
xchg
cdq
cmp
nop
inc
aas
pop
jecxz
addr16
mov
shl
cli
nop
mov
test
mov
out
adc
into
cwde
stc
jb
xor
fadd
or
popf
fsubr
sub
push
adc
push
push
xchg
sub
outs
mov
and
mov
retf
rcr
jmp
xchg
mov
cmc
in
in
sub
pop
jmp
mov
jo
ss
(bad)
test
lods
mov
dec
push
pop
test
mov
push
mov
out
sub
inc
xor
push
lods
mov
cmp
push
in
mov
xor
xor
xor
and
(bad)
lods
cwde
ror
in
es
cld
loopne
repnz
rcl
fadd
sti
out
push
or
add
push
push
cmps
imul
mov
jmp
bound
dec
and
sub
loope
push
mov
xor
push
adc
data16
addr16
arpl
jbe
repnz
adc
mov
and
(bad)
scas
test
jmp
cdq
pop
lea
sbb
loopne
lea
jmp
dec
imul
fst
dec
push
sub
cmp
in
push
daa
inc
ins
sub
xor
enter
mov
imul
rcl
cmp
cmps
psrlq
add
push
fdivr
out
loop
dec
stos
add
inc
sahf
jns
js
jge
pop
dec
push
inc
mov
leave
mov
bound
xchg
xchg
add
adc
push
mov
push
retf
adc
sbb
aas
add
lods
inc
pop
dec
push
shl
test
adc
mov
inc
inc
sub
ins
and
je
(bad)
(bad)
ds
mov
call
pop
lods
dec
xchg
push
xor
inc
jno
jnp
sub
ins
sub
and
push
iret
xchg
fld
mov
stos
xor
mov
hlt
push
mov
and
xchg
outs
mov
inc
push
pushf
ins
sti
add
xchg
call
in
lods
pop
dec
xchg
mov
and
pop
xor
int
xchg
xchg
jle
jl
inc
lea
and
mov
cmp
rcr
scas
in
inc
ds
mov
mov
dec
and
in
fxam
mov
movs
dec
or
js
adc
(bad)
addr16
xor
sbb
mov
sbb
jl
jb
or
arpl
cmp
imul
nop
xchg
lods
shr
pop
adc
out
pop
push
in
and
fst
ins
(bad)
lods
xchg
inc
xchg
dec
push
and
cld
int
mov
cwde
fist
jb
and
fwait
inc
mov
pop
ficom
scas
pusha
push
cmp
mov
push
sahf
dec
ror
test
out
inc
daa
add
ret
jge
inc
adc
rcl
repnz
mov
dec
jo
enter
adc
push
scas
mov
stos
dec
xchg
add
mov
loopne
push
or
icebp
popa
lods
ror
xor
cmp
mov
inc
inc
jb
lahf
mov
stc
pop
mov
pop
enter
add
cmps
cmp
mov
arpl
retf
push
and
push
mov
cmp
fst
std
mov
push
cmp
dec
ror
mov
jecxz
ins
sbb
mov
push
dec
add
push
and
xchg
(bad)
jle
adc
jmp
xor
jg
inc
and
sbb
mov
stos
loopne
sbb
in
in
fisttp
pop
shl
(bad)
in
shr
xor
pop
mov
xchg
xor
popa
stos
mov
cmps
inc
idiv
push
dec
js
mov
iret
pop
test
test
adc
adc
mov
stos
adc
mov
and
cmp
mov
or
add
adc
mov
stos
jmp
mov
in
mov
(bad)
jp
push
mov
push
cmp
pop
adc
mov
push
mov
lods
test
or
scas
test
and
push
adc
xchg
aaa
ss
mov
(bad)
xor
jmp
jl
or
or
lods
nop
jge
call
stos
ins
sub
ret
pop
pop
sub
into
push
in
fbld
dec
mov
push
sti
(bad)
aad
imul
sbb
and
sbb
scas
or
ret
fadd
fisttp
inc
adc
jmp
test
jl
outs
outs
call
sbb
jl
and
es
loopne
inc
inc
ins
js
repnz
dec
addr16
wbinvd
in
movs
popf
xchg
dec
popa
mov
add
jb
sbb
sub
test
fnstcw
xchg
pop
ret
pop
xchg
mov
ss
jp
adc
inc
je
or
es
sub
imul
cmp
mov
push
cmc
add
lea
mov
mov
inc
push
inc
rcr
mov
pop
jle
xlat
inc
adc
icebp
cld
aam
xchg
hlt
dec
add
xchg
sbb
or
mov
sbb
ins
dec
js
lods
shl
ins
push
pusha
repnz
lock
cmc
xchg
shl
sti
xor
stos
cld
fldenv
dec
lea
or
shr
ja
fistp
ror
jae
repnz
popf
mov
pop
and
xchg
jge
cdq
mov
pushf
push
int
leave
pop
fs
out
push
(bad)
add
jns
jg
pop
pop
xor
mov
out
popf
fld
inc
outs
hlt
cmp
pop
fsub
shr
sti
jg
adc
lds
push
push
out
sbb
sub
push
pop
sbb
mov
xor
(bad)
int
mov
or
and
mov
ret
in
enter
clc
cmps
aas
push
std
bound
cmps
xchg
mov
test
and
push
jp
cdq
leave
and
neg
pop
push
inc
mov
mov
icebp
imul
rcr
adc
out
mov
es
xchg
dec
cwde
(bad)
arpl
icebp
popa
loope
mov
jnp
pop
add
movs
rcl
leave
or
jo
daa
or
or
out
mov
repnz
mov
xor
jno
dec
xor
mov
inc
imul
cmp
test
hlt
add
mov
cld
out
jl
cmp
lahf
test
(bad)
jmp
repnz
jo
inc
mov
inc
or
daa
xchg
ins
rcl
mov
fabs
cmp
pop
std
push
mov
movs
loopne
adc
mov
xor
xchg
out
out
dec
pop
and
imul
movs
retf
xor
jmp
lds
inc
push
std
xor
lods
cmps
mov
push
mov
push
aas
test
in
addr16
inc
sub
in
cmc
jmp
enter
das
xchg
ret
jle
and
pop
sbb
mov
cmp
cli
xchg
cmc
sub
xchg
jg
push
loopne
dec
mov
mov
mov
out
cld
mov
cwde
movs
ltr
cmp
mov
jp
sbb
mov
cmp
aad
pop
repz
sbb
add
dec
lahf
in
ficom
or
xor
ror
push
ret
mul
enter
je
inc
call
mov
xlat
bound
dec
push
and
mov
icebp
ss
push
gs
adc
outs
push
mov
xor
or
or
sar
jp
out
dec
sti
or
cmc
or
push
sbb
sub
cmp
repnz
(bad)
inc
pop
stos
xchg
push
ret
pop
lods
fisttp
mov
pop
inc
xchg
repz
inc
add
addr16
add
shl
test
arpl
ds
je
dec
pop
fimul
xchg
jge
mov
out
out
dec
clc
mov
fdiv
shl
retf
in
push
(bad)
out
out
es
mov
sbb
stc
mov
dec
and
lods
(bad)
cmp
stc
sub
cmp
cli
gs
adc
sub
xlat
shl
call
mov
test
or
ds
xchg
sbb
(bad)
fs
push
mov
and
jno
mov
sti
or
movs
mov
xor
out
sub
daa
xor
cmp
test
popa
scas
test
in
jmp
pop
(bad)
(bad)
xchg
dec
jg
mov
fdivr
mov
imul
inc
mov
pop
add
sti
jle
push
add
mov
sub
imul
pop
push
repnz
sbb
pop
jns
add
pop
mov
adc
or
pop
ret
cmps
sub
cmps
sub
dec
jbe
pop
push
push
repnz
rcl
jmp
jmp
sahf
loop
repnz
and
inc
out
pop
cmps
jae
ror
in
lods
dec
pop
jle
jg
jle
lea
jmp
xor
addr16
ins
ret
dec
cmp
mov
mov
cmps
pop
adc
and
sbb
or
xchg
push
jl
cmp
or
sahf
mov
(bad)
in
jmp
cmps
push
push
daa
jge
inc
test
movs
mov
inc
dec
js
dec
aas
add
or
cmps
push
or
jp
out
ds
loop
mov
cmp
mov
pop
sub
push
mov
out
xor
or
aaa
sub
cmp
jb
lahf
dec
jns
into
retf
loop
sub
pop
fstp
sar
mov
stos
movs
sub
int3
mov
jge
sub
sbb
(bad)
inc
jp
mov
mov
mov
and
dec
mov
repz
outs
in
cmc
pusha
int
push
push
call
push
inc
or
cmps
faddp
mov
icebp
loope
mov
aam
pop
cli
(bad)
in
neg
arpl
and
popa
repnz
and
xchg
xchg
fbld
xor
and
and
popa
jns
movs
data16
and
xchg
retf
cmps
cld
mov
mov
(bad)
cmc
or
and
rol
lods
add
cs
loopne
sete
(bad)
div
nop
lock
aam
sub
mov
pop
mov
add
xchg
jns
cmp
xchg
inc
retf
cmp
dec
imul
push
cmp
mov
in
mov
mov
cmp
(bad)
(bad)
scas
jge
shr
sub
retf
add
and
pop
inc
mov
cmp
jbe
(bad)
sbb
xor
sbb
inc
popf
pop
fist
(bad)
rol
dec
jae
jo
into
mov
jmp
mov
xchg
jno
mov
clc
(bad)
pop
and
add
mov
rol
call
or
sti
cmps
cli
mov
mov
sbb
mov
repz
and
sub
or
pop
push
(bad)
adc
inc
cmp
xchg
jnp
pop
call
or
jmp
stos
xchg
test
shl
retf
push
adc
fdivr
or
lods
dec
ins
fidivr
es
inc
aaa
add
adc
sub
cs
movs
cmp
lock
add
xchg
add
inc
xchg
cld
mov
je
movs
cmp
fisttp
leave
(bad)
cmp
pop
into
cmp
fnsave
xor
jecxz
repnz
out
jns
jge
mov
push
dec
xchg
in
cmps
dec
movs
adc
imul
adc
mov
or
mov
nop
pop
xchg
iret
mov
stos
imul
call
into
sbb
mov
rol
repnz
mov
xor
xor
xchg
dec
loope
adc
cmp
or
xor
cmp
dec
imul
dec
xor
sbb
retf
movs
jmp
push
mov
inc
jp
je
jecxz
mov
and
arpl
pop
xor
xor
push
mov
pop
jb
mov
or
xor
(bad)
lahf
and
retf
out
test
gs
and
cwde
not
cmp
retf
sbb
mov
and
sbb
cli
mov
outs
xchg
lods
dec
(bad)
bound
mov
pop
add
(bad)
or
sbb
xor
pop
or
inc
sbb
pop
pushf
adc
dec
mov
outs
out
ret
inc
or
dec
ins
je
dec
pusha
adc
mov
sub
stos
adc
int
shl
call
loop
push
push
mov
or
xchg
mov
fimul
push
push
outs
hlt
jnp
int
xchg
cs
test
jle
mov
lahf
outs
push
int3
retf
or
jmp
jmp
mov
enter
fidivr
call
xor
pop
stc
inc
pop
cmp
sbb
jg
jg
(bad)
idiv
mov
mov
cmps
push
pusha
mov
inc
add
mov
sub
jmp
cmp
cdq
mov
stos
adc
inc
inc
es
push
jg
sahf
sub
dec
cli
dec
add
jp
pop
jnp
add
sub
mov
mov
gs
sub
adc
arpl
mov
adc
loop
pop
test
dec
test
mov
repnz
aad
jne
ins
jmp
xor
aad
push
in
inc
int
out
jle
mov
adc
push
fs
xchg
jo
xor
sub
pmaddwd
out
cmc
inc
lea
out
or
add
loop
test
shl
loop
lds
pop
test
adc
lock
jnp
xchg
jmp
iret
arpl
add
sar
scas
cdq
mov
push
sahf
and
call
and
sbb
adc
push
inc
lods
pusha
les
mov
jmp
pop
cs
dec
pop
push
cmp
push
cmp
inc
call
test
jle
fisubr
jne
(bad)
in
mov
enter
retf
adc
adc
adc
jle
jo
aam
stc
imul
inc
push
adc
mov
call
std
dec
(bad)
xchg
jmp
xchg
dec
add
mov
daa
dec
pop
pop
in
loopne
outs
ror
mov
sahf
mov
mov
(bad)
push
dec
mov
fisttp
pop
mov
pop
mov
xor
out
sub
test
add
xchg
iret
xchg
jns
jmp
sbb
hlt
ret
sahf
js
sahf
xor
push
lea
jo
mov
mov
(bad)
scas
sub
stos
mov
hlt
sar
inc
xchg
loopne
xchg
icebp
aas
into
cld
mov
ja
cmps
sbb
neg
call
bound
retf
pop
cmp
movs
das
jecxz
mov
rcl
arpl
repz
(bad)
retf
les
mov
ss
mov
inc
repnz
mov
xor
scas
call
(bad)
mov
inc
jnp
inc
xchg
aam
stc
movs
dec
fs
mov
stos
retf
dec
xchg
sar
fsub
fdivr
fcmovbe
adc
dec
stc
mov
sub
or
imul
(bad)
daa
dec
ja
(bad)
jl
jne
add
pop
in
into
cmps
inc
mov
adc
adc
nop
pop
mov
and
mov
push
xchg
xlat
xor
push
jae
sub
push
jnp
mov
rcr
shl
pop
add
xchg
add
pop
test
jmp
js
push
cmps
or
pusha
push
sbb
jle
xor
push
mov
xor
scas
imul
pop
mov
mov
je
and
mov
inc
div
add
mov
sub
xlat
and
icebp
fst
je
outs
in
cwde
lds
sahf
pop
test
jae
sbb
mov
xchg
and
enter
jge
fwait
ins
std
jbe
fs
and
mov
push
into
stc
in
cmc
(bad)
leave
test
fiadd
aam
push
xchg
pushf
fisub
mov
cmp
jo
mul
adc
addr16
ja
out
cmc
mov
dec
arpl
data16
je
sbb
nop
ror
aam
jo
popf
add
inc
push
mov
pop
rol
cmps
push
(bad)
pop
inc
test
in
bound
xor
mov
lds
out
outs
retf
fcom
cmps
push
add
in
sbb
stos
mov
fimul
leave
dec
pop
fild
lods
cmp
loope
push
and
into
push
in
loope
sbb
sub
test
inc
adc
push
dec
shr
sbb
les
sub
cmps
cmp
or
add
pop
(bad)
jle
bound
inc
call
jmp
mov
cmps
call
rol
test
xor
jecxz
movs
add
sub
test
outs
ds
sub
stos
cli
push
push
dec
retf
inc
push
add
add
push
(bad)
sub
enter
jae
in
sub
inc
ret
pop
add
and
leave
push
(bad)
sub
rcl
aam
mov
pusha
out
pop
xor
lea
imul
or
mov
sbb
pop
sar
js
jle
cmp
pop
mov
jge
xchg
or
(bad)
cmp
mov
in
int3
push
(bad)
sbb
dec
cmp
std
(bad)
sub
mov
movs
or
jns
cmc
stos
mov
jbe
inc
in
inc
adc
lock
cld
aam
pusha
(bad)
outs
neg
xor
pop
repz
xchg
out
mov
stos
inc
sti
sub
add
dec
sub
daa
imul
ss
(bad)
lods
ss
fs
icebp
test
in
inc
repz
xchg
jo
jmp
inc
outs
out
inc
cmps
sbb
bound
pop
inc
adc
pop
outs
cli
pop
pop
aam
and
cmp
and
imul
sti
xchg
cwde
or
ja
dec
fld
(bad)
(bad)
xchg
jp
jg
rcl
lahf
jecxz
pop
xchg
push
xchg
loopne
imul
jecxz
test
scas
add
lahf
lods
mov
fbstp
sti
jmp
popa
in
cld
cmps
(bad)
fwait
sar
(bad)
inc
mov
addr16
imul
and
xlat
push
sbb
in
pop
mov
jle
int3
jae
or
(bad)
mov
inc
xchg
pop
sbb
lods
mov
xchg
aam
inc
loope
popa
lahf
or
out
and
lock
jmp
cmp
aaa
gs
dec
push
mov
ins
sub
mov
jmp
(bad)
mov
adc
inc
stos
xor
imul
loop
shr
bound
icebp
xor
test
cmp
hlt
pop
mov
sbb
sahf
mov
outs
aaa
imul
sbb
cmp
inc
daa
adc
fs
jb
loope
and
cvtdq2ps
ds
or
xchg
xor
shl
xchg
into
push
pop
push
mov
mov
shl
mov
jecxz
out
test
(bad)
cmc
dec
jno
pop
icebp
mov
(bad)
xor
loopne
jle
cs
mov
test
gs
ins
or
dec
fdivr
pop
ins
inc
sub
push
leave
mov
aaa
pop
retf
xchg
cld
cdq
push
stc
aad
mov
mov
mov
shl
(bad)
leave
(bad)
leave
jle
cmp
mov
cmp
jp
sbb
fsqrt
cmp
call
aas
fsub
dec
jnp
loope
ds
and
inc
lods
sub
call
cmp
lahf
sub
mov
shl
cmp
clc
mov
in
mov
inc
rcr
or
in
test
mov
cmp
mov
ss
ror
mov
sub
pop
adc
dec
pop
sub
int
or
dec
pushf
mov
test
inc
cdq
idiv
movs
jg
pop
ret
test
sub
jp
scas
dec
data16
ret
xor
xchg
fimul
imul
adc
fsubp
ss
lock
fisub
sahf
aam
cwde
or
xchg
xor
mov
push
mov
mov
(bad)
test
(bad)
shr
xor
iret
and
push
leave
int3
imul
leave
outs
inc
cmp
mov
out
stos
js
xchg
push
sbb
sub
cld
dec
pop
rcr
sbb
into
pop
lods
jmp
mov
lock
push
push
cmp
xchg
mov
in
in
call
outs
lods
bound
sbb
xlat
mov
mov
dec
add
cmp
ss
add
clc
or
pop
xor
xchg
rcr
inc
fcomp
mov
cmp
ud0
dec
dec
int3
jl
xchg
cmp
neg
or
js
jo
sbb
mov
loope
sbb
imul
popa
fwait
aam
adc
into
ror
(bad)
push
fld
ja
mov
jmp
enter
mov
dec
xchg
xchg
ss
movs
aad
sahf
js
xchg
lods
daa
cmp
mov
aam
shl
cmp
sub
adc
test
mov
shl
jns
dec
jp
xchg
cmp
es
repnz
and
cmp
cli
je
mov
or
xor
not
xor
pop
dec
xchg
mov
cmp
fnstsw
(bad)
das
pop
adc
sbb
cmp
jmp
add
xor
jns
retf
push
push
dec
jbe
loope
pop
fist
xchg
inc
ja
inc
js
mov
pop
push
stos
pop
push
repz
adc
cmp
adc
xchg
gs
packssdw
push
dec
pop
clc
clc
fnsave
jo
and
jns
ss
lock
stc
movs
mov
sbb
add
clc
int
es
dec
pop
fdivr
sbb
rcr
jb
cmps
pushf
popa
dec
aaa
cmp
xlat
std
xor
inc
loope
push
mov
xor
mov
outs
and
dec
rcr
lea
adc
inc
or
gs
loope
mov
in
icebp
mov
hlt
pushf
aam
inc
(bad)
push
and
push
addr16
imul
pop
ins
xlat
xchg
mov
xchg
mov
hlt
aad
mov
loopne
ds
imul
and
mov
jo
arpl
sub
and
aas
addr16
add
push
data16
stos
movs
movs
sbb
mov
push
scas
aad
push
inc
mov
pushf
and
outs
and
push
inc
mov
shr
test
jo
push
test
scas
jbe
imul
jne
push
out
adc
or
cld
mov
xchg
inc
jbe
popf
jbe
push
(bad)
and
xchg
sbb
test
mov
in
cmp
dec
push
es
pop
(bad)
lock
mov
cld
add
cld
add
fisubr
fs
cmp
sub
faddp
and
adc
pop
out
sti
jle
mov
or
sbb
rcr
sub
pop
xchg
cmps
adc
(bad)
adc
imul
push
or
imul
inc
mov
sti
lods
dec
add
mov
movs
std
sbb
dec
mov
cdq
mov
(bad)
push
imul
in
retf
int3
movs
and
sub
shr
add
iret
sub
inc
out
inc
jmp
test
mov
lea
ds
add
sahf
out
rcl
mov
sbb
pop
mov
es
leave
inc
or
xchg
(bad)
fsubr
xor
jmp
push
pop
and
sub
ds
icebp
sbb
push
add
lods
popf
retf
das
cmps
xchg
pop
xor
movs
xor
sar
call
rol
sbb
retf
cdq
or
add
inc
ret
cld
call
cmp
js
add
cmp
stos
js
loopne
pop
or
fwait
or
mov
cwde
mov
or
mov
sbb
pop
inc
jmp
sbb
dec
mov
call
jne
xlat
inc
imul
js
push
in
in
xor
sub
jl
bound
xor
test
push
sbb
and
fisub
ret
jbe
inc
nop
push
scas
fsub
pop
in
mov
xor
in
jmp
and
dec
jmp
xlat
out
push
jecxz
sub
cmc
fstp
int3
mov
pop
push
mov
mov
cs
aaa
push
push
push
pop
xchg
cdq
dec
or
stos
lock
xchg
or
cli
push
js
sbb
(bad)
cs
dec
jmp
sahf
vmaxss
rcl
and
xor
aam
movs
sub
cdq
enter
scas
cs
(bad)
loope
in
cli
dec
mov
lods
repnz
pop
xchg
and
add
pop
aaa
cmp
in
sub
cmps
mov
jnp
test
cmp
fiadd
sbb
jle
jbe
nop
dec
out
and
xchg
xchg
mov
dec
test
xchg
add
xchg
xor
pusha
ins
and
cmp
jno
(bad)
mov
cli
inc
ret
test
jo
mov
bound
add
movs
sub
repnz
xor
dec
and
xchg
ds
mov
jge
sub
in
ja
mov
cmp
lock
fxch
mov
mov
cmp
movs
and
xor
cmp
mov
cwde
cs
scas
and
lock
out
push
inc
std
mov
dec
test
dec
repz
and
cld
jnp
mov
fcmovnb
nop
jnp
jb
dec
mov
xor
retf
pop
xor
adc
jnp
or
jmp
rcr
adc
mov
les
stos
mov
mov
outs
out
retf
outs
lods
mov
or
jb
add
mov
cmp
imul
xchg
xchg
sti
dec
je
xchg
push
dec
add
push
fs
call
fwait
sbb
mov
xor
int3
cmp
bound
sar
lahf
push
push
or
xchg
cmp
(bad)
cmp
dec
push
xchg
push
pop
retf
and
lods
xor
dec
inc
or
mov
int
aaa
dec
xchg
dec
shr
es
pop
cs
mov
or
sar
(bad)
enter
jp
sub
data16
fdiv
jmp
add
fcomp
outs
mul
shr
dec
jmp
pop
mov
cmp
pop
nop
daa
xor
std
imul
dec
jnp
and
xchg
mov
ret
orps
imul
adc
js
sbb
cmp
mov
lods
test
jge
ins
packssdw
lea
mov
push
mov
sti
inc
xlat
dec
aas
mov
cmc
retf
mov
or
sbb
mov
fcomp
dec
shr
cmp
in
(bad)
jmp
sub
jmp
js
push
dec
repz
rcl
stos
jns
xchg
xchg
es
mov
dec
test
ret
movs
scas
lods
jmp
mov
xchg
push
(bad)
loop
jle
or
xor
cmp
shl
jecxz
sbb
bnd
pop
cdq
jmp
pop
add
jb
jae
stos
imul
je
pop
ins
cmp
repnz
ds
xor
(bad)
push
daa
imul
(bad)
ret
add
xchg
popf
mov
xchg
dec
imul
movs
xrelease
pop
je
jo
inc
jle
lds
ins
cmp
inc
xchg
and
stos
outs
(bad)
cmps
inc
sub
(bad)
in
cmp
loopne
jbe
xor
xor
les
mov
xchg
or
sub
fstp
addr16
cmps
mov
in
fisttp
jbe
jle
mov
and
mov
cmp
push
and
push
sub
sub
xchg
sub
pop
push
popa
leave
cmp
lock
jne
mov
mov
mov
sub
dec
mov
mov
sub
inc
sbb
shl
jp
ds
jno
mov
jb
jnp
lahf
clc
inc
xor
je
sbb
and
mov
add
jmp
idiv
sub
stc
push
and
cwde
mov
xor
pop
pop
pop
inc
or
xor
lods
(bad)
sub
push
aad
cld
pop
cmps
mov
fisub
fst
scas
pop
jb
repnz
in
adc
add
ret
mov
dec
inc
aaa
jne
addr16
rcl
sub
popa
ficomp
mov
lods
pusha
sub
xor
jl
add
repz
into
jmp
mov
sbb
add
pop
jmp
xlat
inc
faddp
or
leave
sub
inc
int
mov
push
scas
inc
mov
daa
clc
loopne
lods
mov
push
fs
mov
and
fcom
xchg
f2xm1
xor
pop
jmp
in
in
mov
or
push
mov
mov
dec
je
and
dec
and
aaa
and
pushf
mov
jae
jo
add
pushf
in
pop
hlt
mov
icebp
fs
das
iret
pop
mov
test
xchg
cdq
idiv
jb
stc
loopne
cmp
mov
nop
cwde
retf
scas
ins
xchg
dec
push
pop
sub
inc
hlt
pop
rcl
push
nop
sub
ffree
push
mov
ror
and
add
ret
dec
inc
aaa
outs
rol
xor
iret
sub
jecxz
xchg
ror
add
cdq
mov
(bad)
mov
bound
aaa
sbb
mov
xchg
mov
or
dec
and
mov
push
repz
xor
je
jbe
and
sbb
mov
stos
xor
xchg
ret
jo
scas
cmps
lds
adc
push
ins
inc
(bad)
fucomi
ds
int3
sub
scas
xor
or
fisttp
cwde
aam
push
test
xor
push
add
adc
shl
cmp
sub
push
(bad)
jmp
ins
pop
shr
call
movs
pop
mov
xor
icebp
push
out
in
jge
icebp
jo
mov
push
jg
sbb
push
icebp
sub
and
adc
nop
or
(bad)
test
sub
xchg
pop
fcmovnbe
push
(bad)
daa
sahf
ins
(bad)
jmp
cmc
(bad)
and
inc
les
mov
out
fstp
sbb
out
sti
jb
pop
jne
mov
mov
jnp
pop
std
or
push
jge
out
scas
outs
ja
mov
outs
lods
add
in
dec
(bad)
push
pop
pop
stos
jae
cmc
test
sbb
rol
iret
xchg
ins
adc
lea
jbe
mul
xor
mov
xchg
xchg
xchg
inc
ficomp
mov
(bad)
cmp
sub
pop
(bad)
cmp
and
js
pop
xor
data16
cmp
ss
mov
mov
add
push
push
xchg
mov
stc
addr16
adc
mov
inc
push
fisttp
add
xor
fstp
(bad)
imul
(bad)
icebp
and
cmps
mov
stc
in
add
mov
outs
sub
fistp
push
not
shl
mov
mov
adc
xor
fstp
mov
aam
outs
mov
add
jbe
xchg
jmp
jmp
outs
xchg
adc
call
mov
xor
cdq
push
int
cmps
sti
lea
jns
scas
rol
adc
pop
pop
push
(bad)
bound
mov
inc
addr16
mov
mov
nop
sub
cli
xchg
fdivr
loop
ja
push
popa
push
fmul
sub
jno
dec
fnsave
jl
mov
cmc
cmp
mov
and
mov
inc
jg
xor
xchg
shl
popf
test
into
inc
jmp
pushf
jno
inc
js
and
addps
dec
push
push
rcl
and
shr
sbb
je
push
mov
sti
jmp
cmps
enter
mov
fisttp
(bad)
sub
inc
sbb
das
stos
mov
into
jg
sbb
adc
int
pop
pushf
inc
xchg
sbb
mov
shld
xor
out
cmps
or
dec
mov
aam
std
stc
in
stos
cdq
mov
inc
test
out
js
mov
sub
je
ret
cmp
mov
ds
das
jecxz
sahf
in
jg
jb
and
mov
dec
add
dec
aad
xor
aas
xlat
or
in
test
pop
dec
(bad)
les
retf
call
(bad)
sub
xor
out
loope
nop
aam
popa
jmp
frstor
pop
xchg
(bad)
pop
jnp
jmp
dec
ja
sahf
pop
dec
mov
mov
or
xchg
ja
mov
cmp
mov
inc
aas
xor
fwait
mov
mov
or
sbb
dec
das
xchg
xor
lods
rcl
add
sub
mov
dec
inc
scas
stos
enter
lock
sar
arpl
lea
cmp
add
cmp
lock
outs
mov
pusha
xor
dec
sub
stos
and
cwde
mov
mov
in
and
sub
call
jmp
out
lahf
dec
push
in
jno
popf
sar
movs
fmul
or
sbb
(bad)
mov
and
stc
mov
sbb
loop
fisubr
push
cmp
cmps
out
and
or
mov
jl
pushf
mov
mov
test
mov
mov
push
pop
cmps
jmp
dec
aas
out
fwait
in
pop
(bad)
xchg
pop
push
das
mov
gs
cmp
(bad)
mov
popf
and
das
add
repz
cmp
or
mov
mov
inc
dec
movs
hlt
jnp
sub
adc
sti
jno
movs
adc
stc
loop
rcl
and
pop
xchg
mov
outs
mov
pop
or
stc
push
ja
loope
adc
mov
inc
shr
cmp
mov
mov
loope
sub
mov
mov
jnp
pop
adc
mov
jle
rol
add
call
(bad)
int3
repnz
adc
sti
gs
pop
inc
mov
inc
inc
movs
mov
arpl
stc
psubsb
pop
sbb
mov
ret
jno
in
popa
sbb
inc
push
loop
push
pushf
fs
cwde
and
mov
adc
and
addr16
jo
dec
cmp
sub
sub
and
(bad)
jmp
lock
mov
lea
repnz
xor
enter
add
add
adc
xor
les
xchg
mov
stc
retf
enter
xchg
push
pop
call
ror
cmps
jecxz
mov
add
or
cmp
add
jnp
cld
push
das
or
add
cmp
mov
jmp
sub
(bad)
les
or
jge
lock
test
pop
cmp
addr16
xor
aad
mov
mov
sbb
(bad)
icebp
add
xchg
cmp
adc
ja
fld
(bad)
fbld
jmp
push
push
fldln2
or
pop
fbstp
movs
or
movs
leave
cmps
mov
sub
and
adc
sbb
jns
ins
mov
jp
scas
repnz
mul
pop
into
and
sbb
jl
fwait
push
stos
ins
xchg
aad
pop
mov
adc
stc
inc
add
inc
sbb
sbb
in
out
pop
movs
lea
rcl
mov
xor
dec
movs
push
adc
sub
pop
in
add
(bad)
fcom
mov
cmps
cwde
mov
push
cmps
pusha
mov
or
stc
adc
jns
push
and
add
fidiv
das
pusha
mov
loop
in
push
sub
cmps
inc
(bad)
jecxz
dec
ds
pusha
cdq
scas
mov
test
hlt
mov
rol
mov
test
ret
cmps
jecxz
ds
and
inc
and
sbb
dec
fist
ds
bound
push
mov
out
fwait
jge
push
cmp
jmp
mov
jge
dec
iret
cmp
dec
sar
out
fsub
cli
dec
cmc
stc
add
cli
sub
cbw
xchg
xchg
std
cmps
hlt
pushf
mov
popa
out
in
pop
dec
mov
stc
sti
sbb
add
mov
test
sti
add
sub
push
in
or
ror
inc
nop
cwde
es
movs
adc
mov
jg
mov
xchg
mov
dec
fstp
mov
mov
mov
push
fld
out
sar
sub
xlat
xor
scas
test
jge
jb
mov
inc
xchg
and
dec
mov
dec
cmc
jge
hlt
and
jo
lds
inc
cmp
mov
(bad)
mov
jl
sbb
dec
popa
pop
scas
mov
icebp
js
aam
fldenv
mov
pop
push
adc
and
fidiv
in
inc
mov
enter
mov
fimul
push
(bad)
loopne
lds
inc
loopne
and
jp
test
jo
stc
test
cmps
ds
test
pop
out
jns
or
scas
adc
jnp
vmovntps
cli
adc
xor
xchg
out
fwait
inc
push
push
push
into
int3
call
(bad)
push
movs
aas
add
mov
clc
sub
or
jno
icebp
mov
lods
push
cwde
and
add
sub
jne
les
pop
div
dec
scas
out
js
pop
dec
cwde
xor
dec
add
rcl
fsubrp
or
dec
xchg
setbe
or
dec
rcr
mov
scas
rol
sbb
mov
repz
mov
sub
fidivr
cmp
data16
cmc
pusha
push
std
jae
dec
cmp
pusha
mov
jnp
stos
push
aaa
ret
mov
push
mov
jp
cmp
add
push
mov
push
mov
xbegin
sub
xchg
push
cmovb
imul
push
movs
and
pop
movs
outs
pop
retf
jmp
dec
je
sti
xchg
jle
popa
jle
aam
cmp
mov
inc
and
inc
xchg
mov
fld
enter
adc
or
jo
rol
stc
mov
ja
fdivp
idiv
imul
sbb
bound
mov
stos
out
test
aam
dec
dec
sub
dec
cmp
pop
xchg
and
mov
jmp
out
jne
hlt
pop
xlat
in
mov
ja
fisttp
aam
jmp
or
inc
lock
movs
js
inc
mov
lahf
fsub
stos
mov
in
aad
inc
jg
retf
pop
dec
out
or
das
hlt
daa
stos
pop
mov
js
es
xlat
sub
ja
scas
or
pusha
aam
push
sub
adc
inc
ficom
xor
mov
movs
lahf
adc
stc
push
push
dec
adc
cmc
out
imul
and
xchg
in
sar
lock
call
cmc
mov
ds
dec
(bad)
cdq
(bad)
push
retf
mov
dec
push
out
out
mov
cmps
jg
cmp
pop
add
push
push
xor
cmp
icebp
xchg
loop
sbb
fstp
or
scas
ds
movs
adc
sbb
movs
icebp
jg
adc
jns
jne
scas
stos
ins
daa
or
not
jge
imul
push
adc
(bad)
pop
mov
stos
mov
mov
push
stc
inc
rol
mov
push
xor
ror
jnp
pop
sub
mov
cmp
jo
nop
lea
outs
div
or
stos
cmp
xchg
cli
and
or
mov
imul
loop
test
cmps
jnp
cmp
sub
mov
adc
fidiv
(bad)
div
sbb
aam
lds
rcr
je
call
(bad)
iret
es
loopne
out
addr16
(bad)
push
mov
std
lock
dec
inc
cmp
retf
sbb
mov
push
clc
call
push
icebp
outs
clc
and
imul
call
add
in
ins
dec
cmc
xor
jle
les
mov
add
or
daa
and
fst
mov
push
inc
call
mov
xchg
push
test
adc
mov
push
fist
and
clc
mov
popa
scas
call
stos
push
push
daa
scas
pop
pop
xor
scas
inc
std
test
mov
scas
adc
sub
sti
xchg
add
(bad)
int3
je
xor
iret
sub
sbb
mov
sbb
push
dec
sbb
shl
xchg
mov
fiadd
mov
mov
ja
into
sbb
dec
mov
(bad)
adc
pop
push
mul
push
in
add
aam
ins
or
ins
inc
retf
xor
idiv
xor
mov
cld
pushf
in
ins
in
cmc
mov
sub
gs
dec
sbb
add
aaa
adc
fs
stos
hlt
xor
lods
mov
sub
push
xchg
sti
xchg
(bad)
push
out
sbb
das
call
xchg
repz
mov
sub
std
shl
push
(bad)
fcomp
and
xchg
push
fdivr
xchg
dec
cmp
xchg
inc
outs
lahf
push
adc
ret
pop
cmc
lahf
push
dec
fidivr
push
adc
sub
sbb
daa
cmp
jbe
dec
pop
or
pop
jl
add
mov
and
out
cmp
outs
dec
jns
sar
mov
jmp
mov
fldcw
mov
imul
pop
sbb
dec
jmp
sbb
ja
imul
mov
add
inc
add
test
xchg
arpl
dec
pop
les
cdq
dec
pop
pop
xor
icebp
test
xor
mov
xlat
pop
xchg
fist
icebp
and
movs
push
es
jl
ds
jo
xchg
inc
mov
add
es
lods
jnp
loop
xor
aam
jp
add
cmps
push
dec
add
jecxz
pop
pxor
ficom
fdiv
ss
pop
popa
dec
je
cmp
pop
ret
loope
pop
daa
mov
mov
iret
mov
dec
pusha
dec
fwait
inc
loopne
add
in
ins
mov
call
bswap
push
mov
enter
mov
inc
and
je
sbb
lock
add
dec
call
mov
(bad)
in
push
in
loope
arpl
xchg
add
push
sbb
sub
idiv
cdq
jp
cdq
nop
inc
push
stos
es
mov
push
pop
int3
xchg
xchg
nop
mov
ss
stos
mov
test
fiadd
and
retf
rcl
dec
sub
out
retf
push
xor
jge
call
and
arpl
aad
imul
outs
sbb
cmc
test
stos
ret
in
mov
stos
xor
mov
and
scas
(bad)
hlt
dec
add
mov
stos
int
iret
mov
inc
xor
push
ins
jnp
push
in
int
pop
test
(bad)
rcl
ins
ins
jne
pop
stos
arpl
push
pop
inc
(bad)
std
ins
adc
rcr
xchg
push
and
cli
iret
movs
sub
sub
cmp
sbb
gs
mov
pushf
call
std
sbb
pop
loop
xchg
jl
and
push
add
mov
pop
int3
add
inc
(bad)
pushf
fucomp
dec
mov
lahf
dec
(bad)
out
gs
or
js
mov
clc
cli
mov
or
in
call
inc
xchg
add
fild
outs
mov
pop
movs
pop
dec
pop
or
mov
mov
adc
cld
push
out
scas
mov
enter
pop
xchg
sbb
cmc
jle
aaa
adc
inc
xchg
popf
mov
xchg
dec
xchg
movs
or
mov
pushf
push
xchg
and
push
adc
loope
ins
add
aam
jb
inc
fucomp
outs
mov
nop
jbe
xor
cli
xor
lock
ror
ins
pop
aam
push
dec
sub
(bad)
jbe
repnz
shr
jo
mov
shr
mov
ins
mov
mov
push
xor
push
add
jno
inc
pop
popa
in
cmp
mov
jmp
or
mov
push
xor
sahf
aam
xor
add
add
aad
cwde
add
xchg
mov
es
jle
ds
lock
test
(bad)
inc
mov
jmp
mov
add
call
xor
test
mov
mov
mov
mov
int
pop
mov
aam
pop
pop
ds
mov
dec
cmp
stos
out
and
shl
xlat
cmp
icebp
mov
and
shr
sub
sbb
fisubr
push
sub
inc
mov
sub
and
and
sbb
das
pop
mov
jnp
jne
lahf
xchg
mov
icebp
jo
sub
(bad)
mov
push
jmp
test
or
mov
push
int3
jl
call
das
inc
cmp
mov
and
or
adc
mov
add
mov
adc
popf
cmps
sbb
add
and
aas
mov
adc
ror
fmul
adc
sub
js
in
sbb
in
or
icebp
das
scas
mov
fild
bsf
movs
jle
cwde
(bad)
ins
ss
push
jnp
fist
xchg
call
cmp
(bad)
loope
pause
ret
mov
xchg
push
jmp
add
aaa
pop
stos
in
popf
sahf
mov
aaa
cdq
call
pop
scas
int
push
mov
popa
pop
and
xor
mov
sbb
pop
mov
retf
gs
leave
jecxz
jmp
cmp
jmp
es
fs
outs
movs
mov
jne
rol
je
pop
ret
mov
sbb
jbe
fwait
push
mov
cmp
inc
cmp
inc
add
xchg
or
in
lods
cmp
dec
out
jle
cmp
push
loopne
and
mov
inc
out
std
ss
xor
rcl
sub
inc
daa
mov
push
je
enter
test
sbb
imul
sbb
std
push
lock
in
inc
stos
and
in
push
sar
mov
pop
dec
sub
lahf
push
stos
(bad)
and
outs
push
or
mov
rcr
stc
sbb
sbb
cld
push
in
movs
imul
les
pop
js
je
mov
es
push
xor
push
in
add
or
test
cmps
fsub
in
xor
mov
lods
and
pop
iret
imul
jbe
leave
mov
outs
pushf
xlat
xchg
(bad)
mov
add
jecxz
dec
cmp
neg
push
dec
pop
push
es
sahf
adc
sub
je
js
push
ret
push
inc
dec
pop
jns
mov
mov
lock
mov
stos
push
clc
or
or
inc
data16
inc
push
inc
cli
mov
mov
cwde
add
mov
mov
sub
ror
lods
ss
fsub
sub
test
inc
(bad)
and
push
shl
iret
cld
cmp
push
(bad)
mov
in
pop
aad
jne
inc
in
mov
fs
and
pop
push
mov
mov
xchg
dec
mov
jmp
adc
mov
dec
ins
fstp
mov
mov
(bad)
popa
jns
mov
mov
cmovo
lock
cli
ss
addr16
in
adc
dec
inc
movs
mov
adc
int3
dec
jbe
cmp
imul
mov
inc
jg
xor
ds
mov
push
mov
daa
paddusb
stos
test
cmp
pop
sub
dec
stos
mov
aas
shl
or
cmp
xchg
jb
lods
inc
fwait
mov
jo
push
sar
xor
(bad)
hlt
call
inc
in
in
adc
pop
add
icebp
mov
xchg
je
outs
movs
mov
pop
xchg
iret
cmc
jmp
stos
and
or
data16
pop
mov
sub
or
push
mov
clc
cdq
jo
test
xchg
daa
xor
shl
in
inc
or
jno
mov
pop
sub
and
xchg
push
and
cdq
popa
cmp
jg
aas
push
or
sub
cld
mov
jmp
adc
add
ins
into
int
sbb
and
jmp
fadd
out
xchg
mov
push
dec
pop
mov
push
fidivr
adc
or
mov
cmc
inc
loopne
mov
es
pushf
mov
sub
cmp
mov
ds
mov
cs
cld
mov
cmp
sub
mov
add
mov
sbb
dec
in
mov
repz
sbb
add
ret
add
sub
dec
lods
loope
cs
cld
mov
lock
mov
mov
inc
sub
or
dec
cmp
ss
mov
scas
sbb
stc
imul
into
(bad)
sub
xchg
or
popf
pop
popa
(bad)
fs
and
push
jno
xor
add
inc
stc
jmp
cmp
mov
or
inc
xchg
dec
pop
xor
xchg
es
je
dec
ds
fild
mov
and
xchg
dec
push
(bad)
aad
adc
cmps
xor
inc
mov
sub
out
jge
lods
test
iret
mov
fadd
or
aas
fwait
mov
repz
fild
dec
ror
or
xlat
push
cwde
dec
cmp
cmp
xor
dec
clc
sbb
test
in
or
call
movs
push
retf
inc
inc
add
nop
inc
jecxz
pop
inc
cli
cmp
push
repz
mov
std
mov
dec
loopne
cmps
jl
pop
mov
std
jne
or
nop
mov
int3
arpl
test
push
les
scas
ret
aad
xlat
xchg
mov
ins
jne
mov
jno
loope
inc
push
fsub
or
icebp
lock
aam
sub
add
push
xchg
icebp
dec
addr16
iret
sbb
movs
xor
dec
es
push
push
push
ja
ins
aad
enter
inc
ret
js
pop
pop
sbb
movs
pop
loop
mov
jno
mov
pop
or
call
btc
ror
in
and
cmp
mov
sahf
mov
dec
retf
loopne
xchg
mov
cmc
loope
jl
test
or
scas
add
mov
jnp
jecxz
push
sbb
jl
sbb
add
adc
pop
pop
lds
jnp
pop
jae
mov
inc
aam
(bad)
jg
lods
daa
or
cli
das
xchg
sbb
add
ja
jl
pusha
xor
pop
daa
mov
daa
ds
jbe
xor
out
iret
div
aaa
adc
in
ret
push
pusha
jns
pushf
out
repnz
adc
pop
rcr
mov
dec
inc
mov
rol
push
cli
ds
stos
mov
jmp
jns
psllw
push
push
pop
push
inc
fadd
mov
and
push
out
adc
or
xor
push
clc
pushw
pop
das
inc
jnp
adc
test
idiv
int
cli
mov
into
jbe
std
fbld
push
push
cmp
addr16
mov
arpl
cmp
out
pusha
hlt
ja
mov
outs
ins
xchg
and
sub
jmp
fsub
aas
stos
jno
fcomp
sahf
lea
adc
retf
cmp
mov
pop
xor
icebp
mov
int3
add
enter
mov
loope
pop
cmps
xchg
movs
mov
icebp
jns
lods
outs
fisub
push
scas
mov
loope
pop
stos
int3
dec
push
cld
popa
mov
mov
push
fwait
and
pop
das
pop
out
addr16
loopne
mov
mov
fs
(bad)
aas
jo
push
pop
int3
movs
ficomp
jo
inc
inc
fs
test
or
push
sahf
pop
sahf
sub
test
mov
cmp
adc
pop
mov
mov
pop
jo
add
pop
popf
leave
or
jge
dec
das
hlt
lahf
sub
sub
icebp
cdq
lahf
sbb
jne
out
inc
push
sub
pop
pop
mov
iret
inc
mov
(bad)
mov
clc
shl
sbb
cmp
sbb
jge
pop
sbb
add
or
call
mov
rcr
mov
ins
test
cs
mov
scas
pushf
mov
mov
out
adc
inc
out
cmp
cli
dec
cdq
push
xchg
xor
mov
jecxz
icebp
loope
dec
inc
mov
lock
(bad)
inc
inc
ud2
mov
(bad)
or
addr16
inc
inc
xor
jl
(bad)
cmp
repz
xor
sar
ja
arpl
jl
inc
mov
(bad)
cmc
(bad)
push
movs
aam
xchg
jle
inc
ror
rol
jl
pop
inc
retf
retf
adc
test
(bad)
fwait
push
inc
out
loop
adc
pop
adc
cmp
dec
mov
fistp
pop
aas
popa
push
scas
cmp
js
dec
and
ficom
lods
pop
icebp
loop
mov
fstp
rol
sbb
cld
ds
sbb
dec
mov
xchg
sub
(bad)
in
mov
xor
or
outs
and
in
push
adc
out
in
mov
push
sub
test
xchg
fsub
mov
jmp
or
jecxz
movs
push
mov
fdivr
lods
mov
into
or
mov
sahf
ins
mov
ds
les
ds
gs
sbb
cmp
cli
(bad)
jmp
xor
fs
xchg
mul
in
aaa
test
ret
iret
push
cli
gs
ds
inc
cmp
push
cmp
cmp
pop
call
fs
pop
in
and
cmps
into
out
mov
mov
arpl
lds
ficom
into
iret
mov
mov
jge
push
cs
outs
ret
push
pop
cmp
mov
or
ret
pop
and
inc
div
inc
loopne
sbb
push
push
loop
xchg
ret
imul
imul
gs
ja
mov
xchg
stos
stos
mov
es
cdq
mov
std
push
cdq
je
sub
dec
xor
sub
loope
mov
mov
inc
rol
mov
in
push
sub
and
sub
out
stos
add
cmp
push
push
push
jmp
add
xor
mov
xchg
push
stc
ror
inc
mov
nop
mov
bound
enter
vcvttsd2si
or
icebp
and
pop
mov
mov
sbb
mov
cmps
cmp
cmp
shr
test
jb
(bad)
and
adc
int3
(bad)
mov
loop
xor
inc
aas
sub
popf
(bad)
push
test
in
cs
jp
xlat
add
idiv
push
scas
lds
test
sub
cmc
retf
lahf
int3
in
fcmovne
add
inc
jb
xchg
mov
inc
jns
add
inc
bound
xchg
mov
xor
jb
or
dec
out
call
push
int
jbe
dec
dec
dec
test
mov
int
jb
mov
jecxz
push
or
push
and
(bad)
push
dec
mov
add
inc
xchg
out
xchg
adc
(bad)
inc
cwde
clc
xor
rcl
inc
sbb
int3
inc
shr
test
and
pop
dec
adc
push
jmp
mov
es
push
(bad)
repnz
fisttp
scas
inc
retf
and
je
mov
sbb
sbb
xchg
mov
jbe
jmp
mov
mov
stos
addr16
imul
fdiv
ss
addr16
push
jbe
bound
push
jle
outs
lea
cmp
or
xchg
fs
jp
add
sbb
pop
jmp
(bad)
stos
es
shl
retf
push
in
enter
bound
pop
jmp
cmp
pop
test
sub
mov
out
mov
xor
mov
pop
pop
cld
mov
sub
sbb
ret
aam
retf
mov
and
mov
sub
mov
jle
fninit
mov
sbb
mov
mov
aam
dec
bnd
pop
icebp
idiv
pop
or
mov
out
fsubr
or
rcr
xchg
fcom
jae
int
sbb
mov
movs
mov
mov
pushf
icebp
pop
xor
iret
cmp
cld
test
(bad)
gs
out
aad
sbb
js
xchg
xor
xchg
sbb
jns
and
ret
or
test
fsubr
aam
and
in
stos
cmps
mov
lds
push
pop
dec
into
add
add
and
lea
fst
cmp
push
push
and
bound
lods
jg
stos
(bad)
push
fisttp
pop
jae
xchg
and
mov
or
push
sub
(bad)
ret
dec
andnps
and
lods
jmp
push
nop
and
mov
push
mov
dec
inc
mov
es
push
jge
mov
xchg
lea
xchg
push
and
mov
cmps
xchg
clc
(bad)
push
fwait
xchg
clc
int
shl
out
ret
loope
out
mov
mov
or
inc
xor
ja
sub
test
sbb
mov
cwde
xchg
xchg
in
inc
cmp
jo
popa
pop
je
jle
cmp
sbb
add
shr
xor
push
shr
pop
sbb
jle
mov
pop
or
jg
stos
fwait
loop
mov
and
daa
test
nop
add
js
dec
or
or
jmp
pusha
add
call
repz
sub
stos
or
cwde
in
jp
inc
add
popf
lods
xchg
es
fst
das
jnp
mov
add
stos
or
mov
dec
adc
and
or
inc
fs
push
fld
and
mov
xor
fistp
stos
fisubr
loope
test
repz
clc
jno
cmps
popf
sbb
repz
jo
jecxz
data16
or
call
fxch
mov
fucomi
mov
mov
pop
ret
aam
jmp
(bad)
out
fidivr
adc
and
push
sub
mov
out
sar
aas
mov
sbb
stos
sub
xor
jbe
mov
mov
add
xchg
ffreep
pop
ret
daa
or
add
ss
jne
(bad)
inc
push
pop
jae
fisubr
mov
leave
mov
xor
sbb
or
jae
ins
inc
test
mov
into
mov
mov
fs
loope
jecxz
sbb
data16
adc
pop
inc
imul
and
and
cmp
cmc
mov
aam
inc
mov
shr
fsub
mov
mov
das
cmp
test
out
push
and
or
inc
test
push
jae
add
mov
enter
cmp
mov
sbb
adc
push
aam
in
sbb
sbb
push
adc
cmps
inc
sub
add
and
out
jbe
cld
nop
push
aaa
scas
dec
add
lods
shrd
mul
jg
pop
sub
inc
in
mov
ins
mov
pop
mov
ds
xor
jo
and
lock
mov
imul
inc
jns
mov
ss
into
cli
dec
and
sahf
jp
and
jnp
lods
outs
and
repz
(bad)
and
or
clc
mov
test
mov
cli
inc
mov
or
pop
add
lahf
push
lds
sti
sub
loop
lock
and
cmp
mov
push
jmp
loop
and
inc
jne
sahf
fwait
pop
xor
or
pop
and
cmp
ret
mov
add
std
mov
mov
outs
pop
mov
jle
jmp
xor
pop
xchg
adc
cmp
js
out
or
ss
aad
sbb
sub
or
pop
pop
pop
inc
les
dec
(bad)
sbb
je
int3
and
stos
pusha
ficom
sub
add
data16
retf
cmp
jbe
pop
test
rol
dec
pop
pop
enter
rol
iret
lock
and
test
daa
xor
into
call
xchg
out
addr16
out
jnp
and
jge
sub
jae
mov
dec
adc
dec
jg
pusha
mov
push
push
retf
icebp
fdivr
scas
stos
add
xchg
dec
cmc
add
mov
cmps
mov
and
sbb
mov
ds
push
test
push
psrlw
enter
inc
stos
popa
mov
(bad)
repz
sbb
cmp
jmp
xor
push
mov
dec
data16
jmp
int3
or
outs
sub
pop
xor
dec
(bad)
xchg
rcr
cmp
dec
push
sar
push
hlt
std
cmp
retf
cmp
sub
or
sbb
inc
jae
sbb
add
sbb
data16
mov
dec
cmc
sub
jecxz
call
push
jmp
jmp
icebp
push
sbb
aam
jmp
mov
rcl
push
mov
popa
addr16
fcmovb
rol
leave
xor
mov
aam
mov
jmp
aaa
test
push
in
jno
jbe
aad
adc
push
call
das
adc
mov
push
adc
cmps
push
(bad)
jmp
clc
add
arpl
lea
mov
les
bound
dec
xchg
mov
and
sbb
xchg
loope
aam
push
enter
test
fidivr
sbb
or
into
cs
sub
mov
mov
imul
push
sbb
out
mov
inc
cli
fld
retf
pop
add
fwait
dec
lods
shl
add
out
push
lds
adc
xchg
ins
push
aad
sbb
imul
popf
pop
and
or
jo
mov
pusha
dec
ja
lock
push
shl
adc
xchg
outs
dec
cmp
shl
ror
fstp
dec
jg
jg
cli
pop
xchg
jmp
js
cmps
stos
aad
enter
add
push
push
ret
ins
movs
(bad)
cli
adc
and
dec
sub
and
(bad)
loope
lods
xor
add
popa
mov
push
adc
cld
jae
cmc
mov
or
push
or
sbb
std
std
cli
mov
cmp
sbb
in
sub
(bad)
xor
xlat
or
xor
and
mov
cmp
pop
in
mov
loopne
xchg
aad
and
cdq
mov
pusha
mov
adc
adc
xor
adc
dec
inc
test
(bad)
xor
sub
sub
adc
cmp
mov
or
or
pop
sbb
cs
and
mul
call
mov
ja
jo
cli
mov
cmp
inc
les
push
call
out
lods
push
mov
dec
mov
ret
leave
(bad)
pushf
and
fucomi
je
xchg
push
cmp
mov
ins
adc
xchg
jbe
gs
push
sbb
inc
and
add
cmp
xchg
shl
mov
out
cmp
(bad)
repnz
imul
mov
shr
or
mov
in
in
leave
sbb
js
push
xchg
int3
pop
mov
ror
inc
dec
nop
cld
mov
or
(bad)
dec
and
jae
aad
jns
mov
adc
sahf
cmp
cmp
loop
dec
sbb
movs
call
es
jge
cmps
push
sar
sbb
xchg
outs
mov
jo
iret
xor
(bad)
cmp
and
xor
add
pop
cmp
mov
ins
mov
or
stc
and
xchg
leave
push
inc
outs
cmps
movs
pop
jl
pop
jae
lock
lock
addr16
mov
and
xchg
in
repnz
fdiv
jns
xchg
adc
addr16
ret
jae
xchg
popf
call
jb
cmps
cdq
pause
jg
(bad)
aad
jmp
xor
mov
jle
sbb
xchg
mov
xor
or
lods
(bad)
and
add
outs
(bad)
xor
mov
cld
inc
lods
mov
dec
test
cmp
std
js
xchg
outs
mov
mov
push
add
adc
stos
jae
sbb
push
push
mov
ins
jp
(bad)
push
pop
test
lods
lods
sub
cmps
retf
or
cli
and
in
sub
(bad)
cmp
inc
fs
xor
sub
mov
cmc
rcl
mov
arpl
mov
mov
xor
les
fmul
jecxz
retf
add
out
lods
dec
fwait
jb
outs
mov
mov
sahf
test
popf
clc
sbb
js
pop
mov
pop
cdq
(bad)
cmp
and
push
inc
mov
cmps
fisubr
xchg
fsub
mov
jp
jle
out
dec
(bad)
jns
icebp
sub
cli
iret
dec
hlt
clc
(bad)
and
xchg
dec
mov
ret
xor
fimul
inc
retf
inc
add
jae
xchg
push
fs
or
jns
xor
les
and
clc
aad
mov
fs
in
repz
cmp
xor
xchg
mov
das
mov
ret
mov
data16
cmc
mov
je
sub
ror
adc
push
sbb
(bad)
dec
cmp
pop
inc
add
js
mov
push
jne
push
arpl
and
lods
add
jmp
addr16
inc
fcom
psllw
ja
inc
movs
imul
outs
sub
int
movs
out
fistp
fst
fwait
and
out
dec
rcr
bound
push
sbb
je
aad
mov
xor
pop
outs
xor
lods
or
add
pusha
and
imul
stc
out
sub
data16
or
imul
ret
icebp
or
mov
jbe
aas
in
(bad)
dec
pop
lahf
adc
fstp
add
and
fwait
push
add
or
jg
cmps
inc
stos
mov
add
mov
ss
jns
xor
mov
jmp
cmc
and
jbe
outs
out
or
repnz
scas
mov
(bad)
out
jae
cs
inc
ror
add
jmp
push
cwde
bound
fnstsw
and
pop
dec
push
scas
repnz
mov
mov
rcl
or
cmp
jle
je
adc
xchg
ficomp
mov
cmps
pop
and
gs
and
shl
jl
jmp
retf
sbb
je
or
addr16
cmc
cmp
les
cmp
test
ret
sahf
pop
fld
popa
dec
jmp
in
int3
cdq
add
xchg
cli
imul
pop
xchg
clc
mov
test
in
adc
test
mov
xor
cs
inc
xor
sbb
mov
sbb
or
dec
fstp
ret
sbb
jg
push
sar
inc
jmp
pop
add
std
jnp
sub
ret
xchg
inc
and
ins
shr
pop
mov
test
and
ror
enter
add
jle
mov
push
sbb
and
and
xchg
ins
and
mov
shr
imul
sti
xchg
ins
jge
cs
repz
shl
or
dec
jae
retf
mov
push
pop
cmp
arpl
cmp
sar
push
xor
test
(bad)
fwait
into
and
mov
jp
scas
mov
cmp
mov
(bad)
xor
mov
xlat
retf
fxch
push
enter
fld
mov
aam
mov
lods
lahf
mov
xchg
(bad)
repz
mov
jmp
lods
mov
xor
jl
lock
jle
jmp
aad
retf
inc
dec
cmps
aad
sti
les
xchg
push
stos
fcom
xchg
loop
loop
jmp
out
cli
push
mov
dec
jo
mov
sub
(bad)
aam
mov
fwait
add
push
imul
es
fcomp
aaa
pushf
push
adc
jnp
aam
sti
dec
inc
pushf
pop
sar
loope
adc
dec
push
(bad)
sub
in
mov
into
push
enter
cmp
sub
mov
mov
fistp
xchg
or
inc
and
je
and
scas
enter
push
jle
ja
xor
and
or
clc
mov
(bad)
cdq
mov
push
clc
cmp
hlt
pop
pusha
xchg
pop
jne
icebp
inc
mov
cmp
sub
mov
fnstsw
shr
add
daa
retf
and
mov
aaa
xor
rol
cmp
sahf
mov
pop
push
aas
mov
movs
xchg
mov
or
idiv
test
mov
stos
es
mov
xchg
mov
daa
fstp
xchg
mov
adc
into
dec
fwait
stc
(bad)
xchg
xor
sub
das
inc
stos
mov
pushf
xor
mov
xor
xchg
xor
in
scas
addr16
sbb
pop
jp
xor
lods
jge
pusha
jne
push
push
cmp
repnz
push
setae
push
imul
les
dec
jmp
add
cmps
(bad)
jl
cmc
push
jnp
out
shr
popa
aas
pop
scas
sar
stos
sbb
in
hlt
clc
movs
mov
(bad)
xlat
outs
cmp
mov
xchg
pop
ds
fiadd
inc
xchg
js
test
leave
ins
or
ins
xchg
lahf
loope
jne
popf
mov
jb
sbb
test
fucompp
inc
fiadd
in
cmps
cmps
inc
xlat
fdivr
dec
sbb
mov
imul
(bad)
adc
shl
fisttp
mov
mul
or
pop
(bad)
xor
push
rcl
cmp
xor
add
outs
fisub
cli
or
test
iret
pop
in
add
call
xchg
mov
sbb
adc
daa
jp
adc
cmp
int
adc
jg
mov
xchg
cmp
cmp
xor
pop
int3
and
out
sub
movs
fisubr
push
push
xchg
cli
pop
ret
pop
cli
adc
out
push
daa
outs
fcmove
lods
fsub
fadd
cdq
pop
mov
into
(bad)
imul
adc
inc
inc
addr16
push
dec
out
push
jmp
dec
mov
rcr
inc
add
xchg
and
xor
mov
xchg
retf
push
dec
pop
sub
xchg
mov
cli
inc
fadd
mov
push
in
inc
repz
imul
cmc
scas
mov
pop
stos
cs
out
or
or
adc
std
sahf
mov
push
retf
ret
es
xor
mov
add
ret
leave
rcl
cld
aas
xor
movs
push
or
icebp
fnstsw
lods
lock
inc
loope
sbb
push
sbb
dec
push
adc
mov
xor
jnp
ins
out
(bad)
stos
jmp
ficom
jbe
je
cdq
ret
(bad)
in
jnp
mov
ins
jnp
out
stos
rcr
test
dec
daa
or
movs
or
mov
mov
push
pop
dec
addr16
mov
out
movs
dec
and
rcl
adc
outs
stos
pminsw
(bad)
stos
out
and
jne
cmps
pushf
sub
jns
jmp
inc
mov
push
mov
icebp
mov
int
retf
mov
mov
inc
or
mov
jmp
outs
sub
js
adc
outs
push
repz
adc
enter
hlt
mov
shr
fisttp
enter
push
xchg
jecxz
pop
jae
cmps
inc
loop
jge
jne
or
or
jge
xor
dec
jmp
pop
xchg
add
mov
fisubr
das
sar
or
sahf
ja
cld
in
ja
and
xchg
inc
out
fsub
add
mov
sahf
dec
pop
in
outs
and
dec
(bad)
popa
jmp
movs
out
xchg
cli
dec
sar
call
mov
mov
les
sub
rol
(bad)
sbb
into
fisttp
fwait
cli
les
push
xchg
mov
jbe
adc
jnp
sub
jg
daa
inc
or
aas
out
inc
gs
lahf
inc
cmps
setnp
fmul
fisubr
ror
in
or
xchg
jnp
(bad)
(bad)
dec
enter
lock
inc
cmp
das
sahf
int
rol
nop
xchg
mov
nop
pusha
or
fcos
inc
into
jbe
xlat
add
(bad)
jns
ds
call
mov
xor
inc
mov
das
sbb
xor
fild
jecxz
(bad)
lea
pushf
sub
cmps
add
and
sub
push
mov
inc
sbb
in
test
mov
in
in
in
clc
add
mov
lahf
mov
rol
add
shl
sbb
and
cs
push
lock
aaa
add
adc
jae
leave
and
inc
xchg
scas
xor
ret
(bad)
sbb
sbb
jns
jns
push
mov
leave
jb
mov
cwde
bound
dec
pushf
jle
sbb
push
ffree
jge
adc
sbb
hlt
fmul
inc
mov
stc
cmp
mov
xchg
lods
movs
xor
cmc
push
pop
jo
fwait
and
and
adc
into
movs
xchg
mov
jmp
retf
xor
adc
add
and
mov
popf
rcl
add
cmp
and
cmps
add
(bad)
jg
iret
cmp
add
pop
jl
lods
and
ins
mov
sbb
sbb
push
stc
xchg
pop
and
push
pop
icebp
lds
jl
scas
fiadd
pop
inc
or
xor
dec
out
jns
outs
fbld
das
rcr
imul
(bad)
cmps
mov
(bad)
or
xchg
lea
std
mov
mov
into
dec
pop
nop
pop
nop
ret
fsub
and
ins
aas
jnp
inc
push
addr16
ins
stos
outs
(bad)
lds
sbb
clc
fcomp
stos
jbe
adc
push
mov
pop
rol
cmps
ss
adc
mov
mov
adc
cmp
pop
add
pop
shr
cwde
or
inc
inc
in
ss
cmp
cld
mov
fcmovnbe
xor
retf
aam
and
jg
(bad)
test
rcl
mov
les
movs
cmp
in
jmp
call
call
call
maskmovq
mul
aam
hlt
xchg
sbb
inc
(bad)
xchg
inc
(bad)
in
mov
scas
and
cmp
sub
jmp
iret
call
(bad)
cld
cmp
pusha
(bad)
sahf
inc
hlt
mov
push
push
or
jg
outs
push
inc
or
inc
fadd
pop
repnz
push
inc
imul
fwait
cmp
cld
mov
xor
mov
cwde
mov
out
dec
ja
outs
pushf
push
pop
pop
into
loopne
or
add
repnz
jge
push
(bad)
stc
inc
bound
fsub
fdiv
sahf
xchg
(bad)
adc
adc
pop
pop
mov
dec
lods
adc
hlt
stos
xchg
pop
mov
inc
leave
cmp
test
adc
(bad)
sub
add
cmp
xlat
inc
xchg
add
test
pusha
mov
push
retf
out
jo
ret
mov
pop
in
xchg
mov
mov
push
mov
xor
fwait
ins
enter
loopne
ror
dec
xchg
arpl
dec
mov
mov
mov
sub
inc
push
pop
dec
add
into
mov
pop
scas
mov
cmp
push
inc
call
inc
icebp
lods
push
pushf
xchg
cwde
mov
in
stc
fwait
mov
movs
(bad)
stos
(bad)
pop
out
hlt
and
xchg
pop
cmps
or
xchg
aad
mov
mov
adc
mov
or
ret
dec
aad
addr16
fidivr
lock
inc
and
mov
dec
iret
fs
lahf
xor
pop
clc
inc
shr
pop
adc
nop
sahf
sbb
stc
mov
cmp
hlt
xor
stos
dec
dec
add
adc
pop
jne
ss
inc
dec
ins
fwait
pop
gs
ror
retw
xor
ds
mov
in
cmc
dec
je
or
repz
sahf
xchg
retf
push
mov
in
popa
int
or
push
leave
or
ins
scas
jae
pusha
mov
pop
into
jo
scas
mov
xchg
mov
mov
aas
daa
(bad)
cs
call
dec
sub
hlt
popf
add
xchg
imul
dec
cmp
(bad)
nop
inc
push
inc
dec
aad
aas
adc
xchg
mov
adc
pcmpeqd
pop
pop
jae
retf
cdq
imul
pusha
in
nop
push
xor
add
xchg
das
mov
or
or
les
lods
sbb
fdivr
push
aad
xor
mov
and
das
pop
imul
popa
adc
dec
jmp
sbb
cmp
iret
adc
mov
xchg
jle
in
fadd
call
sar
scas
mov
out
out
xor
xor
jbe
test
xchg
inc
or
test
sahf
rcl
add
bound
retf
dec
gs
and
ins
repz
inc
xlat
push
cmp
adc
stos
repz
xchg
jnp
ins
xor
inc
in
mov
xchg
enter
pushf
or
test
ja
scas
enter
imul
dec
call
bound
mov
fistp
sbb
inc
jl
adc
scas
ds
inc
pop
jns
mov
lahf
aad
pop
jbe
mov
xor
mov
(bad)
aas
dec
push
out
push
adc
push
push
les
pop
fdivrp
xlat
(bad)
lea
or
(bad)
pop
push
scas
mov
cmp
or
cmp
sbb
ds
pop
hlt
jmp
in
aas
clc
mov
xor
nop
icebp
cs
mov
pop
scas
mov
sahf
jge
sub
mov
or
lock
out
push
push
(bad)
adc
and
dec
push
or
push
aad
lds
mov
and
repz
test
ret
xchg
loope
cmp
(bad)
shr
jae
cmp
int
xchg
jno
sar
xor
adc
clc
(bad)
cmps
div
popa
imul
mov
and
xchg
add
das
jecxz
and
in
mov
mov
jno
xor
fisubr
cli
js
add
xchg
mov
int
push
mov
in
xlat
inc
shl
pop
pop
repz
add
jp
call
lea
test
cli
ret
pop
pusha
ret
xchg
imul
dec
leave
das
repz
fcom
sti
push
sub
mov
sahf
xor
(bad)
dec
mov
inc
add
out
int
add
inc
bound
in
xchg
add
dec
push
outs
clc
idiv
jbe
cmc
xor
outs
pushf
push
scas
out
or
adc
add
loope
shl
pop
xchg
aas
xchg
xor
cmc
push
dec
mov
and
rcl
inc
and
xchg
sbb
fs
and
mov
repz
fdiv
aas
dec
out
xor
clc
(bad)
out
jne
mov
dec
sub
xor
retf
or
add
cld
lahf
icebp
dec
jbe
stos
push
adc
cmp
inc
xchg
dec
jp
xchg
lods
dec
mov
in
xchg
push
lea
adc
xchg
push
jb
mov
(bad)
test
pop
clc
rol
enter
into
imul
jno
imul
ret
ins
push
push
fst
add
xchg
jg
aas
movs
adc
das
jmp
cmp
cmp
ss
ds
inc
dec
push
dec
jecxz
mov
int3
cmp
loop
push
push
ds
clc
cmp
xchg
mov
imul
cmp
iret
lea
mov
loop
test
pop
div
jnp
lds
test
aam
mov
jmp
retf
add
push
mul
mov
js
shl
repz
out
repz
add
ds
mov
inc
fbstp
xor
mov
ins
pop
repnz
pop
retf
fisttp
data16
scas
cmps
cmp
mov
out
(bad)
jl
pop
push
cmc
sbb
retf
iret
enter
adc
push
sbb
movs
mov
pop
jae
dec
and
add
mov
push
mov
mov
ja
add
aas
fucomp
in
or
xor
push
(bad)
inc
inc
jbe
mov
and
sbb
cmc
inc
scas
leave
daa
stos
push
and
cmp
imul
cmc
rcr
aaa
xchg
jb
gs
mov
mov
xchg
jp
loop
cmp
push
pop
in
aaa
fisttp
dec
jle
jge
test
mov
stos
stos
xor
fs
mov
dec
sbb
xchg
jb
cmp
add
xor
cs
push
in
inc
ins
lock
stos
cmp
mov
jle
xor
jmp
push
jns
rcr
int3
mov
sbb
xchg
div
fdivr
mov
jmp
pop
cli
not
sub
(bad)
arpl
popa
out
addr16
mov
xor
orps
or
hlt
push
mov
mov
(bad)
std
jmp
xor
xchg
test
mov
push
addr16
jle
mov
adc
ret
inc
jbe
dec
push
push
(bad)
fwait
mov
mov
push
pop
push
or
xor
or
fdivr
lods
adc
or
in
imul
stc
(bad)
std
lea
je
jp
aaa
fwait
cli
call
fs
scas
outs
std
xchg
outs
adc
inc
fwait
arpl
clc
jl
shl
jg
daa
test
inc
cmp
xchg
rol
inc
jmp
lahf
jns
push
mov
mov
cwde
imul
fucomip
out
(bad)
mov
scas
mov
frstor
fcom
jl
les
dec
fistp
cmp
mov
mov
in
arpl
mov
fst
add
xchg
or
adc
jmp
push
mov
out
je
jb
in
push
popa
sbb
mov
xchg
or
push
rol
dec
cwde
je
adc
xor
lea
add
jno
leave
imul
add
test
in
gs
call
cwde
add
cmps
add
into
mov
out
loop
inc
push
inc
push
push
in
mov
iret
not
push
cld
mov
dec
cmc
sbb
push
and
jb
out
and
je
sub
outs
add
or
icebp
dec
popf
test
not
addr16
pop
mov
jmp
imul
sub
bnd
nop
fsub
rdmsr
imul
dec
jae
push
test
inc
imul
rcl
adc
lods
into
call
mov
rol
bound
retf
ret
daa
jo
jb
xor
inc
sti
aam
retf
(bad)
or
test
xor
xor
out
je
fisttp
es
jnp
push
sar
sbb
dec
call
frstor
cmp
mov
mov
push
loop
imul
lods
cs
push
cmp
fisubr
outs
dec
out
push
adc
cwde
sub
pop
push
jmp
add
test
xor
cli
dec
push
pop
ins
inc
pop
into
push
mov
cmp
or
xor
and
cmps
call
ins
scas
loop
pop
push
xchg
inc
adc
xlat
nop
xchg
mov
(bad)
mul
into
popa
or
mov
call
or
adc
add
and
nop
or
mov
mov
leave
pop
call
xchg
mov
xchg
push
and
lock
pop
push
push
aas
bound
push
retf
add
sub
adc
sbb
jl
mov
xchg
outs
and
sub
push
sbb
mov
cld
popa
mov
add
or
mov
es
inc
std
pop
fld
mov
inc
cmp
sti
push
scas
call
hlt
mov
or
jecxz
add
mov
sbb
adc
xor
test
mov
ins
jo
fidiv
pop
dec
mov
mov
shl
aad
shl
cli
xchg
ins
inc
imul
push
icebp
out
pushf
nop
std
not
gs
inc
jmp
hlt
add
fs
scas
cmp
retf
cmp
(bad)
div
outs
pop
fwait
pop
dec
and
sbb
lods
pop
mov
xchg
fsubr
aad
push
push
popf
fsub
push
lahf
jp
sahf
(bad)
outs
add
or
rcl
enter
(bad)
in
mov
test
fadd
jg
lods
lock
lea
pop
loope
je
addr16
sbb
int3
push
xlat
stos
ins
xchg
mov
push
xor
push
push
cmp
nop
inc
(bad)
(bad)
cmp
fcomp
inc
shl
cmp
aaa
cld
pop
mov
lahf
sbb
call
xor
(bad)
xor
mov
push
int3
mov
mov
jbe
(bad)
jns
push
in
and
mov
fadd
(bad)
sub
ret
or
mov
inc
cmp
dec
jl
push
xchg
test
aas
(bad)
popa
jecxz
pop
or
sahf
xchg
and
mov
std
jnp
xor
or
outs
aad
int3
mov
dec
div
adc
push
pop
in
(bad)
mov
jp
sti
jle
repz
ins
out
ret
sbb
add
xchg
rcr
mov
pop
into
mov
daa
(bad)
scas
outs
adc
pop
xor
movs
sahf
int
sbb
bound
gs
inc
and
inc
xor
push
aam
jbe
ins
adc
jo
popf
mov
mov
mov
mov
jns
fstp
scas
leave
xchg
call
or
mov
(bad)
(bad)
aam
mul
adc
cwde
(bad)
loop
sahf
into
lea
rcr
(bad)
cmp
repnz
push
dec
push
leave
arpl
xor
xchg
jg
fs
lods
pop
sti
lds
and
pop
aam
cmp
pop
adc
loop
jne
dec
popf
mov
pop
inc
movs
loope
or
aam
lahf
out
add
mov
mov
ret
or
out
arpl
iret
fwait
push
xchg
mov
fist
test
(bad)
out
push
in
scas
adc
stos
push
movs
div
xor
daa
xchg
repnz
sbb
lods
mov
rcr
outs
jmp
pop
or
mov
push
cli
sbb
into
cmp
xchg
mov
xchg
xchg
movs
xor
in
push
stos
push
mov
inc
in
cs
(bad)
mov
cmp
cmps
repnz
add
cmp
mov
cmps
xchg
jbe
jmp
rcr
cmp
add
inc
inc
bound
mov
cmp
dec
in
adc
fld
xchg
sub
fild
adc
lea
shr
sbb
jne
imul
out
cli
push
xor
pusha
inc
jne
inc
or
inc
push
nop
loop
xor
adc
and
and
fisttp
cld
inc
inc
mov
in
sbb
dec
jne
es
lahf
inc
mov
jecxz
ins
fdivr
sahf
sub
jmp
sub
test
xchg
nop
push
cmp
sahf
scas
test
xor
or
dec
push
data16
or
cmps
and
or
into
add
mov
mov
jge
movs
in
push
in
fsubr
inc
cwde
std
mov
fwait
pop
into
(bad)
sbb
test
(bad)
call
in
push
(bad)
outs
pusha
add
and
sub
movs
xchg
inc
idiv
or
xchg
dec
jne
or
pop
jns
add
dec
pusha
fimul
mov
push
test
ficom
push
lahf
test
sub
(bad)
xchg
mov
and
int
xchg
out
and
imul
sbb
fstp
inc
sbb
ja
in
fsubr
leave
inc
cmp
sbb
test
mov
mov
or
imul
jge
sub
xlat
mov
std
leave
or
pop
push
adc
leave
fisubr
jmp
xor
or
add
outs
fidiv
fisttp
cmovl
nop
fdivr
mov
inc
in
call
push
fistp
push
adc
xchg
hlt
mov
fisttp
in
jl
stos
add
xchg
cmp
sahf
jle
stc
rcr
pop
xchg
(bad)
cmp
ret
cmp
arpl
leave
loope
cmp
pop
cmpxchg
push
sub
hlt
adc
mov
push
add
push
mov
stos
push
sub
jno
ret
mov
inc
stos
cmp
inc
call
push
lahf
enter
and
pop
push
imul
les
fcmovnu
lahf
mov
pop
retfw
scas
adc
add
aad
push
shl
push
and
test
sub
aam
es
scas
jo
xor
cs
xor
popa
pop
les
ss
es
enter
xchg
sub
ins
dec
(bad)
sub
jne
addr16
mov
movs
stos
pop
jmp
inc
ds
sub
or
clc
cmp
in
sbb
popa
sbb
lods
cmc
inc
(bad)
stos
jmp
test
ret
int3
and
push
mov
xor
call
pop
call
pop
loop
imul
mov
loope
out
inc
in
fadd
dec
and
mov
dec
xor
lock
loope
jns
fmul
jmp
inc
pusha
lds
pop
call
enter
ins
add
repnz
loope
les
cmps
add
adc
std
(bad)
call
mov
pop
bound
int
jno
lds
cmp
ret
out
sbb
and
cmps
sar
movs
scas
dec
fsubr
cmp
aaa
mov
clc
retf
xor
jo
xor
xlat
movs
inc
icebp
cmp
dec
sub
add
push
inc
push
ret
xchg
mov
inc
inc
xchg
mov
gs
cmc
loop
stos
inc
fwait
xchg
dec
push
retf
dec
add
ins
cmps
xlat
retf
retf
sub
stc
out
add
push
xchg
out
fcmovnu
jmp
fcomp
stos
inc
cmp
jne
daa
pop
inc
addr16
pop
dec
call
rcl
xor
cmp
jmp
xor
add
leave
mov
xchg
push
shr
(bad)
sbb
int
cmc
inc
sub
and
cmp
mov
(bad)
les
sbb
mov
pop
arpl
jle
fdiv
pop
pushf
aam
mov
xor
cmp
and
inc
dec
lods
ja
dec
dec
outs
mov
arpl
dec
rol
jmp
pop
adc
outs
ret
and
add
pop
cmp
retf
daa
fwait
mov
fsub
xchg
pushf
mov
lods
test
hlt
into
or
sbb
mov
jnp
sub
jo
mov
call
movs
xlat
ins
pop
jmp
fmul
mov
lock
repnz
mov
rcl
js
outs
rol
xchg
sbb
xchg
rol
cdq
mov
pop
dec
(bad)
repz
ret
jmp
enter
adc
pusha
or
call
sbb
test
inc
mov
jl
fsub
test
push
jecxz
adc
(bad)
aad
shl
aam
ja
ror
or
and
fwait
cmp
ret
popf
ins
push
jg
sbb
xor
ja
dec
cmp
lods
pop
lds
mov
pop
cmp
loope
lea
xchg
or
xchg
add
mov
in
std
cmp
mov
inc
in
sbb
call
cdq
cmp
add
cmp
or
mov
cmp
mov
pop
dec
mov
sbb
scas
dec
cld
mov
jnp
mov
mov
mov
pop
ret
dec
and
add
pop
mov
ja
mov
xor
jb
xchg
popa
dec
push
test
dec
dec
test
jae
push
jmp
seta
popa
xchg
fdivrp
and
jp
jg
fmul
mov
pop
and
xlat
aas
hlt
lods
imul
and
sbb
clc
or
jnp
bound
sub
in
fbld
in
cwde
popa
or
in
cmp
sbb
fimul
cld
(bad)
sbb
popf
mov
das
pushf
push
mov
jmp
pop
xchg
xor
repz
mov
or
nop
stc
movs
loope
mov
xchg
add
jle
je
movs
jno
add
xchg
sahf
pop
nop
push
inc
data16
not
data16
(bad)
test
pusha
mov
mov
and
lahf
adc
dec
and
mov
xchg
push
add
jmp
xchg
cmp
inc
call
adc
jb
jp
fidivr
out
cmp
clc
and
and
or
fsubr
clc
adc
mov
arpl
(bad)
mov
ins
idiv
mov
ror
inc
push
adc
(bad)
mov
jge
imul
sbb
adc
arpl
aad
in
or
xchg
sbb
into
fs
mov
cmp
into
pop
pop
clc
push
test
jne
pop
aad
or
enter
pop
push
xchg
lds
adc
in
jle
movs
lods
mov
pop
lock
stos
push
sbb
sbb
aaa
sub
or
mov
je
adc
pop
loope
movs
mov
pop
add
outs
mov
mov
retf
cmp
test
fcmovnb
sbb
inc
push
movs
cmps
ret
xor
out
ror
sar
dec
xor
rcr
cmps
jns
fnstcw
sub
inc
test
test
mov
sbb
div
sbb
ror
retf
jmp
loope
(bad)
mov
retf
mov
or
(bad)
xor
push
inc
test
pop
inc
(bad)
(bad)
in
pusha
test
imul
stos
mov
cmp
jne
mov
adc
aaa
sbb
retf
mov
pushf
mov
movs
sub
add
sbb
inc
sbb
cdq
lahf
mov
movs
pop
inc
mov
add
mov
imul
dec
jl
arpl
lods
aaa
out
hlt
and
les
sbb
ja
ret
lea
popa
jmp
bnd
out
scas
xor
sub
add
add
stos
int
mov
fisubr
std
jne
out
cmp
fs
loope
sub
jle
pop
cmc
aam
adc
mov
push
call
outs
mov
add
mov
sbb
sahf
mov
pop
das
and
ss
fs
mov
mov
outs
jb
outs
push
mov
push
add
lods
pushf
jne
in
into
sahf
sbb
je
xchg
ret
or
mov
in
nop
mov
icebp
clc
adc
shl
dec
pop
sbb
test
add
scas
cli
jbe
not
jl
ins
xchg
xlat
or
dec
jns
jmp
add
jl
shr
fs
cwde
xchg
add
jecxz
paddb
mov
cmp
adc
arpl
adc
call
test
rcr
aaa
inc
aas
and
cmp
cmp
mul
mov
push
ds
mov
push
fs
mov
or
loope
and
enter
ret
mov
enter
cmp
out
and
xchg
dec
inc
hlt
inc
test
xor
mov
jg
add
pop
jmp
inc
enter
sub
pop
jbe
mul
jbe
or
push
adc
repz
cwde
aas
and
lods
ja
out
xor
icebp
jmp
loope
stos
(bad)
mov
push
push
test
(bad)
and
icebp
stc
cmp
repz
xchg
sbb
xchg
mov
jns
test
inc
push
pop
scas
mov
and
stos
sub
xor
(bad)
arpl
pop
mov
xor
mov
dec
xor
push
sbb
stos
iret
xor
stos
movs
mov
enter
mov
stos
mov
mov
adc
in
lock
jns
jp
jae
loop
and
cmps
xor
mov
(bad)
jmp
inc
cmc
mov
or
sub
xchg
xchg
jp
xor
adc
mov
mov
pop
and
rcr
ret
bound
cmp
pusha
mov
ins
fiadd
and
cmp
pushf
imul
add
push
push
sub
hlt
lahf
and
dec
jl
sti
mov
push
or
stos
inc
dec
or
mov
xor
cdq
fcmovbe
loope
icebp
cmp
imul
fwait
loopne
push
fld
(bad)
push
push
adc
outs
aad
rol
jmp
xor
mov
hlt
inc
outs
jmp
jo
xchg
iret
fs
sbb
xor
pop
push
inc
xchg
xor
fdiv
inc
or
mov
push
mov
cmp
mov
jl
les
mov
jmp
adc
fnstcw
mov
adc
push
fistp
jno
shr
loopne
adc
add
cmp
and
fwait
(bad)
pusha
scas
enter
push
xor
adc
leave
jp
fdiv
add
xchg
dec
pushf
icebp
aad
cli
xor
sub
dec
aaa
dec
ror
cmp
aas
cwde
mov
sbb
fstp
mov
aam
call
sbb
mov
add
and
movs
mov
call
jecxz
cmps
xor
mov
jp
mov
bound
cmps
int
inc
and
int
xchg
daa
imul
mov
sar
adc
call
jne
pop
sub
add
fldenv
xor
inc
sbb
mov
push
daa
sub
(bad)
out
sbb
pop
push
sar
(bad)
out
sbb
jne
ficom
dec
out
pop
(bad)
adc
popa
ret
sub
inc
or
mov
ins
js
sub
stos
daa
and
ins
loope
cli
inc
aam
pushf
sub
push
cmp
add
inc
inc
adc
(bad)
xor
clc
shr
sar
jle
cmp
jl
sub
stos
jns
push
(bad)
mov
cmp
push
nop
popa
rol
push
add
dec
popa
push
repz
dec
add
pop
cmp
sbb
(bad)
cmp
or
pop
cmps
inc
ficomp
loopne
push
push
jmp
sub
push
push
dec
add
jl
jae
xchg
jne
ds
stc
in
je
mov
mov
outs
and
scas
cmps
fdivr
mov
mov
jns
push
sbb
pushf
cld
out
aaa
lahf
cs
mov
and
sti
pushf
pop
mov
retf
lods
ja
xor
dec
sub
xlat
cmp
and
sbb
push
iret
(bad)
hlt
popf
outs
push
pop
sub
retf
mov
mov
nop
sbb
push
loope
dec
sahf
jmp
(bad)
and
adc
pop
mov
loopne
mov
stc
gs
jno
test
shl
push
cmp
inc
inc
cmp
inc
loop
lahf
lahf
(bad)
mov
ins
mov
ss
in
js
lea
dec
bound
call
push
pop
scas
ret
das
rcr
call
into
push
inc
dec
fdivp
push
sub
test
ins
mov
sbb
jmp
popf
mov
xor
gs
and
lds
sbb
xlat
jp
mov
jns
push
popa
mov
aam
mov
test
xlat
repnz
xchg
adc
out
mov
and
pop
cmp
rcr
es
lahf
neg
lahf
sbb
cmp
or
xor
shl
or
add
mov
sar
mov
inc
push
icebp
cmp
push
and
test
fbld
jnp
movs
retf
mov
test
pop
mov
cmovge
cmp
lds
je
lods
retf
addr16
sar
rcl
movs
movs
aam
inc
pop
aam
push
loopne
out
aad
push
sbb
iret
or
dec
test
ins
inc
add
pop
sbb
or
mov
push
xbegin
retf
test
jo
push
les
sub
sar
(bad)
xchg
mov
cmc
ror
add
lods
out
cmps
inc
aas
or
shl
sub
pop
jnp
xor
add
pushf
cmp
sti
je
jmp
or
pop
fld
test
push
push
in
xchg
cmp
add
loope
(bad)
dec
mov
loopne
pop
push
pop
cli
imul
(bad)
jmp
inc
lods
dec
movs
cdq
aam
dec
push
push
ds
jg
push
mov
adc
mov
mov
out
adc
adc
xor
sbb
dec
vxorpd
jbe
cmp
xor
mov
or
adc
into
jbe
push
pop
stos
xlat
cmps
sbb
or
cli
jne
inc
dec
jb
cmp
pop
cmps
fmul
lods
leave
cld
and
outs
mov
mov
cmp
ins
xchg
jle
push
mov
lods
push
pop
retf
bound
and
scas
nop
(bad)
enter
mov
inc
xor
lea
movs
loopne
sbb
lea
adc
aam
mov
in
jmp
jbe
dec
mov
test
inc
and
imul
xchg
es
pop
xchg
dec
mov
inc
xor
sbb
push
jne
jno
adc
mov
int3
jbe
sbb
shl
and
xchg
sahf
push
imul
fisubr
movs
mov
or
or
or
jle
fist
loop
jo
cli
add
pop
imul
xchg
in
fsubr
or
test
(bad)
jb
(bad)
mov
dec
fistp
inc
jb
sbb
bnd
ret
dec
lods
and
jno
push
push
pop
mov
dec
mov
or
out
push
aas
jg
and
pop
push
je
test
mov
stos
frstor
sub
lock
fdivr
push
jl
xchg
mov
cmc
xor
xchg
pop
xchg
jo
ret
aad
xor
xchg
inc
adc
jo
push
ss
pop
sub
mov
jb
or
add
push
cmp
xchg
fnstsw
mov
inc
cwde
add
jo
js
push
pop
dec
(bad)
fcom
pop
xchg
xchg
push
gs
or
mov
sbb
fstp
cmps
iret
jno
hlt
ja
add
inc
push
dec
lea
loopne
pop
push
jp
test
dec
mov
add
push
iret
lds
inc
mov
cmp
test
push
movs
bound
rcl
push
(bad)
jmp
inc
mov
and
rol
imul
(bad)
mov
das
loopne
retf
pop
leave
test
pusha
(bad)
(bad)
or
pop
lock
jecxz
aas
test
scas
xor
nop
cli
or
lods
add
mov
sub
pop
outs
test
mov
in
in
pop
jb
cwde
in
jl
mov
repnz
imul
dec
xchg
(bad)
sar
(bad)
out
es
xchg
jns
jecxz
fdivr
cmp
sbb
jmp
sub
jl
sahf
out
mov
rcl
fwait
mov
data16
mov
call
bound
adc
out
imul
adc
aas
inc
outs
adc
or
out
add
movs
sbb
mov
cmp
scas
inc
mov
pop
push
mov
nop
push
and
xlat
push
mov
mov
shr
jmp
retf
sbb
and
imul
dec
imul
sub
fld
push
int3
inc
ror
inc
push
mov
les
mov
ss
inc
(bad)
mov
dec
and
adc
jns
add
add
sahf
xchg
jl
mov
inc
pop
imul
and
dec
aam
(bad)
scas
aad
sar
outs
(bad)
loope
inc
xchg
cmp
sub
mov
mov
(bad)
repz
dec
in
std
rol
mov
jnp
outs
and
fwait
xchg
aaa
dec
pop
loope
xchg
into
sub
mov
fdivr
xchg
rol
in
loope
mov
es
dec
aas
pop
sub
fcom
push
xor
popa
stc
es
inc
sub
dec
mov
pop
imul
lea
fs
dec
push
and
mov
sti
push
daa
jno
push
std
les
cmps
pop
dec
cmps
iret
xor
je
test
jle
icebp
aas
sbb
adc
jns
jmp
shr
pop
or
jo
shr
xchg
and
cmps
adc
mov
es
in
popf
ja
repnz
jne
lods
sub
mov
mov
sbb
xchg
add
xlat
mov
and
or
fwait
test
inc
imul
frstor
popa
(bad)
(bad)
lahf
scas
or
pop
loopne
pop
(bad)
push
movs
mov
sbb
inc
jbe
fs
mov
cld
jno
mov
add
into
and
adc
clc
mov
sti
test
gs
retf
ror
pushf
ret
jb
xor
mov
outs
sub
add
movs
or
push
call
add
inc
adc
mov
out
dec
les
mov
cmp
jnp
cwde
popf
xchg
loop
jb
lock
inc
popf
xchg
or
and
jbe
xchg
les
or
es
jl
cmp
popa
fbstp
adc
xor
shr
mov
stos
pop
sbb
add
adc
repz
aas
mov
test
mov
mov
daa
(bad)
xlat
xchg
pop
pop
(bad)
stc
scas
jg
mov
xor
and
jmp
xor
sbb
sahf
std
mov
lock
adc
inc
pusha
ror
and
sbb
mov
xchg
aam
stos
mov
mov
or
ss
(bad)
jl
xchg
not
xor
rol
mov
fild
xchg
fwait
dec
out
sti
(bad)
jg
add
jecxz
add
ins
pop
push
xor
inc
mov
stos
or
mul
or
arpl
mov
mov
popa
and
fcom
loopne
cmc
ret
inc
aad
push
retf
mov
mov
sbb
iret
mov
ja
sbb
mov
dec
cwde
movs
ds
aas
cwde
bound
pop
in
repz
jg
jmp
imul
xor
push
cmp
sti
retf
push
mov
sub
test
jns
mov
xchg
cmc
pop
jbe
leave
add
push
(bad)
in
push
std
push
mov
call
jg
xchg
shr
inc
cld
xchg
jecxz
pop
(bad)
out
add
repz
jbe
cwde
push
pop
cmp
rcl
adc
push
out
and
pop
xor
imul
mov
jge
or
jmp
ret
sbb
mov
jns
pop
shr
dec
mov
mov
ja
push
adc
(bad)
jae
int
pop
cmp
(bad)
push
mov
lods
mov
cmp
and
scas
push
push
adc
imul
sbb
clc
lds
or
in
push
retf
dec
push
nop
pop
dec
rol
rcl
fs
dec
(bad)
xor
fcomp
movs
int
adc
mov
into
adc
mov
jle
dec
int
loopne
fcomp
or
and
or
lods
iret
mov
mov
loope
jge
int
mov
xor
mov
lds
xchg
outs
clc
pop
or
cmp
stos
xchg
jnp
xchg
adc
adc
and
in
xchg
mov
add
xchg
ret
adc
jne
sbb
cmps
ds
dec
mov
imul
push
(bad)
sahf
addr16
dec
jae
stos
(bad)
in
mov
ins
or
std
adc
rcl
gs
dec
ja
mov
sbb
inc
jne
mov
pop
popa
arpl
jp
cmp
ror
vmovlps
daa
dec
test
nop
jp
and
(bad)
into
add
jo
je
add
xchg
xchg
enter
add
adc
and
outs
push
cwde
mov
movs
push
inc
(bad)
aas
cmp
jnp
shl
mov
(bad)
sti
mov
push
adc
push
jmp
loope
fwait
int
ss
sahf
js
ja
jne
xchg
in
clc
pop
adc
inc
call
xchg
mov
xchg
push
sbb
push
mov
jmp
ds
repz
sbb
mov
push
mov
push
mov
enter
fdiv
cmps
sbb
out
pop
icebp
movs
ret
cli
sbb
mov
mov
mov
and
xchg
arpl
cmp
dec
sbb
push
leave
sbb
fadd
nop
adc
aad
test
addr16
fcom
lds
mov
sub
cmp
push
add
pop
cmp
cmps
gs
xor
add
adc
xchg
xor
add
fcom
or
dec
fist
mov
cmps
and
jne
dec
mov
cdq
dec
jno
cmps
push
or
sahf
add
pop
push
jo
sub
outs
imul
jmp
arpl
cmp
repz
mov
lds
test
fwait
cdq
cmp
cmp
cmps
in
cmp
arpl
or
push
and
out
sbb
lds
stc
sbb
in
xor
sbb
jecxz
(bad)
xor
dec
cmp
mov
div
jnp
xchg
push
shl
jae
xchg
or
outs
mov
push
aas
(bad)
sub
sbb
cmp
sbb
(bad)
stc
(bad)
sar
pop
clc
loopne
pop
ins
adc
pushf
into
dec
xor
or
xchg
in
dec
xchg
mov
in
call
addr16
mov
retf
cmp
repnz
ret
or
push
xchg
out
jmp
cmp
nop
and
mov
scas
fdivr
shr
outs
jns
popf
adc
mov
or
xor
dec
movs
test
(bad)
fsubr
aaa
jmp
enter
cmp
cli
test
nop
loopne
jge
fwait
push
ins
sbb
and
mov
inc
mov
dec
rcr
jb
jnp
adc
ror
mov
(bad)
mov
out
stos
mov
xchg
scas
aas
mov
in
jp
xchg
push
mov
sbb
or
add
xor
mov
sbb
mov
pop
sbb
scas
popf
mov
bound
push
(bad)
adc
adc
mov
pop
test
add
adc
call
mov
cmp
and
mov
or
adc
dec
xchg
mov
loope
jnp
cwde
out
add
jmp
fwait
or
iret
mov
jns
jnp
retf
pop
jge
lock
or
cmp
mov
stos
scas
add
jmp
cmp
push
pushf
jbe
and
into
loope
or
pop
jmp
daa
or
push
mov
xchg
ds
xchg
lock
aam
lock
loopne
shl
and
xchg
or
icebp
and
pop
lahf
fidiv
mov
lea
inc
pop
clc
movs
xchg
push
xchg
loopne
inc
push
jns
add
jne
add
popf
or
ds
push
or
dec
mov
in
(bad)
sbb
and
or
push
add
jmp
jno
xchg
(bad)
sti
cmp
test
outs
dec
stc
jp
push
mov
xor
imul
aad
mov
test
push
push
retf
test
jnp
cmc
sub
adc
sahf
or
push
mov
loope
add
jmp
mov
mov
and
inc
push
ins
pop
jne
pop
dec
push
and
repz
fnsave
into
shl
dec
daa
out
loopne
pop
xor
and
pop
int3
or
mov
stos
ret
cmps
sti
mov
fs
push
(bad)
xor
in
pop
cmp
mov
(bad)
psllq
cmp
out
dec
jmp
jle
mov
cdq
jecxz
imul
mov
mov
jl
ret
sub
cmp
add
xor
xchg
cmp
mov
fisubr
nop
sti
push
ins
jae
leave
fadd
mov
retf
mov
mov
or
xlat
inc
sbb
lock
mov
mov
(bad)
ror
xchg
adc
sub
clc
push
adc
pop
pop
cwde
hlt
stc
ss
mov
lahf
(bad)
xchg
fimul
and
stos
add
mov
out
data16
add
dec
sub
repz
add
mov
out
xlat
mov
inc
out
or
or
adc
adc
mov
lock
add
xor
out
scas
outs
inc
popf
imul
(bad)
out
pop
xchg
mov
fs
ret
aam
shl
xchg
fsubr
ja
aam
mov
(bad)
sar
push
je
xor
out
gs
lods
shr
mov
mov
inc
mov
or
fmul
cmp
arpl
push
(bad)
xor
jl
retf
scas
jb
enter
pop
call
jmp
in
rcr
push
ins
mov
(bad)
jo
dec
mov
pop
xchg
cmp
inc
adc
mov
sbb
mov
int
jae
iret
aam
sub
movs
fsub
mov
cmp
push
cld
je
mov
stc
fisubr
sbb
fdivr
push
nop
and
clc
test
cld
or
into
(bad)
push
retf
push
jge
mov
jbe
push
nop
test
call
push
xchg
inc
in
(bad)
adc
and
xchg
in
push
xchg
push
(bad)
out
movs
test
outs
inc
mov
xchg
xor
ja
call
inc
push
cmp
jge
repz
pusha
add
inc
inc
jge
mov
jmp
ja
push
imul
js
jnp
cwde
call
jg
pushf
das
dec
outs
or
in
adc
push
and
aad
push
mov
mov
lods
adc
ins
lock
ret
lods
pop
or
xor
leave
lods
and
scas
iret
dec
(bad)
aam
arpl
or
stos
jne
push
jbe
mov
sbb
mov
sar
pop
in
stc
call
mov
adc
dec
mov
and
idiv
xchg
push
in
jo
stc
outs
call
add
and
jno
mov
ds
ret
xchg
fsubr
xor
xor
push
mov
enter
loop
jne
lods
dec
lahf
(bad)
sti
push
jne
dec
fstp
int3
sbb
xchg
cs
jmp
cmps
cmp
xchg
shl
aam
xor
add
dec
call
sub
cmp
test
scas
fwait
push
fcmovu
data16
push
fbld
call
push
jmp
sub
jecxz
jl
cmp
pop
dec
mov
sub
dec
lock
(bad)
pushf
mov
pop
mov
(bad)
or
dec
mov
or
test
sub
xchg
inc
dec
iret
dec
or
(bad)
xchg
sbb
mov
xchg
dec
and
scas
test
shr
sbb
mov
sub
aas
sub
test
icebp
aas
rol
xchg
push
cs
adc
ja
mov
mov
cwde
rol
mov
pusha
push
cdq
cmps
xchg
call
mov
test
jns
ins
popa
fisubr
pop
je
stc
mov
icebp
xor
stos
mov
test
(bad)
xchg
sti
(bad)
(bad)
xchg
or
sbb
pop
jecxz
int3
repz
fnstcw
fs
inc
and
repnz
jg
xchg
jp
stc
retf
mov
add
or
(bad)
mov
mov
xor
pop
push
test
cmp
pop
(bad)
lahf
mov
in
(bad)
dec
jno
xchg
cmc
sub
cld
nop
daa
mov
or
idiv
loop
cmp
idiv
push
xchg
pop
sbb
fld
jle
mov
add
sahf
stos
or
ret
ins
dec
jmp
mov
ds
or
sub
xor
out
xchg
pop
fisub
enter
(bad)
data16
lea
pop
les
push
outs
in
or
or
mov
or
scas
aas
xchg
xchg
mov
push
loopne
pop
and
cmp
xchg
sbb
sub
mov
push
sbb
je
mul
pop
or
test
jmp
fwait
sbb
cs
mov
dec
ins
aas
or
jmp
callw
inc
xor
aad
add
pop
fld
xchg
pop
sbb
test
sbb
fwait
ins
dec
test
fisttp
cmps
push
movs
sub
cdq
mov
cmp
fcom
stos
sub
cs
xchg
int3
cmps
xor
and
pop
mov
retf
ja
sub
push
fs
push
test
hlt
jge
bnd
mov
pop
mov
stos
inc
mov
pop
(bad)
inc
inc
frstor
test
test
pop
dec
xchg
cmp
lahf
cmp
mov
mov
outs
mov
test
(bad)
movs
mov
jle
or
dec
jne
sbb
dec
mul
add
sub
xchg
fsub
xchg
mov
mov
test
scas
xchg
mov
adc
pop
shl
xchg
push
fcmove
mov
sub
out
sar
loopne
vmwrite
mov
pop
xchg
pop
dec
push
cli
dec
pop
dec
call
or
inc
push
test
into
sub
mov
aaa
and
jecxz
test
in
test
imul
in
xlat
sbb
scas
and
mov
xchg
push
out
pop
pushf
dec
imul
xchg
addr16
je
sbb
pop
mov
ins
cmp
fucomi
mov
push
cmc
shl
xchg
add
ror
pushf
fs
arpl
out
jne
shl
xchg
mov
nop
xchg
pop
pusha
push
retf
push
pop
imul
mov
adc
es
js
jno
out
sbb
dec
pop
sbb
mov
dec
jmp
push
sbb
cmc
mov
push
mov
adc
into
jns
jge
add
mov
inc
loope
out
ss
enter
push
nop
sub
mov
sbb
bound
push
sub
pop
jmp
call
(bad)
shl
imul
xor
jl
test
pop
mov
fxch
add
aas
adc
and
scas
retf
mov
add
clc
pop
mov
xchg
mov
xor
add
mov
push
punpckhwd
js
push
lods
push
sbb
lahf
sbb
inc
dec
inc
sub
cmp
sub
arpl
js
call
push
dec
push
je
inc
push
jb
cmp
jmp
jmp
cdq
pop
push
pop
outs
jl
test
bound
cmp
add
lock
and
push
xchg
outs
mov
add
pop
pop
xor
lahf
shr
retf
jecxz
pop
fmul
sbb
into
sbb
jns
jb
dec
mov
shl
and
repnz
adc
xor
mov
lods
mov
push
pop
add
push
inc
cmps
push
loopne
icebp
repz
adc
cmp
inc
xor
push
cs
mov
mov
push
mov
dec
push
(bad)
(bad)
jae
pop
iret
cmp
and
in
les
inc
push
jle
pop
mov
pusha
sub
maxps
std
fwait
mov
fwait
enter
cdq
stc
add
and
dec
push
xor
test
cld
stos
sub
cli
leave
int3
fadd
fcmove
cmp
ds
out
int3
mov
(bad)
ja
mov
or
cmps
xor
mov
or
push
fsubr
sar
mov
jle
dec
xchg
jno
and
jecxz
outs
push
push
call
scas
mov
pop
sbb
jo
ja
outs
addr16
test
test
es
movs
cs
mov
repz
(bad)
lock
popa
test
aaa
repz
pop
pusha
pop
xor
pop
std
out
das
mov
scas
pop
cs
ins
push
add
and
call
push
inc
xlat
cmps
pop
xchg
lds
inc
mov
mov
call
popa
imul
outs
outs
inc
mov
popa
(bad)
in
and
std
lods
and
sbb
cmps
adc
jmp
mov
cli
add
xor
test
in
jl
aas
or
mov
test
outs
cmc
or
jmp
sub
mov
rcr
dec
sbb
adc
push
xchg
outs
(bad)
fmul
pop
inc
test
push
ss
sub
sar
inc
push
sbb
cld
fstp
dec
not
sbb
sub
xchg
inc
jbe
fisttp
scas
test
sbb
gs
clc
xor
and
jnp
or
fs
mov
xchg
neg
mov
inc
xchg
mov
xchg
cmp
scas
push
bound
in
push
mov
ficom
xor
js
dec
adc
mov
loope
or
lods
lods
pop
lods
and
pop
shr
sub
sbb
les
inc
jae
dec
outs
and
es
jmp
lock
and
cmp
fbld
inc
ja
mov
sub
xchg
and
lds
test
push
xor
jle
dec
fisttp
dec
int
cwde
pop
fwait
fwait
jnp
addr16
daa
or
pop
dec
mov
mov
xchg
stos
fnstenv
(bad)
mov
mov
mov
inc
stos
cmps
push
add
rcl
js
jnp
icebp
inc
xor
movs
push
scas
inc
pop
jecxz
lods
shl
cmps
or
adc
mov
cmp
sub
dec
xor
cmp
mov
mul
pushf
sub
inc
(bad)
stos
scas
fcom
xchg
xor
lahf
xchg
mov
not
cmp
aad
retf
loop
xor
aas
into
aam
xchg
popf
pop
dec
mov
pop
ror
cmp
dec
inc
jae
xchg
ret
xor
dec
sbb
jae
int
mov
cwde
je
ret
mov
mov
data16
xor
add
xchg
test
lods
inc
jb
push
xchg
(bad)
or
hlt
mov
daa
sti
(bad)
sub
dec
ret
pop
loopne
xlat
sbb
outs
push
mov
jns
int
xchg
fbld
sub
les
xchg
call
inc
adc
sub
push
jl
pusha
sbb
in
in
pop
ret
inc
imul
mov
mov
pop
jecxz
inc
ds
les
stos
ins
mov
fild
cwde
ret
sub
cmp
mov
or
sbb
adc
cli
test
(bad)
int3
es
ins
push
mov
int
mov
iret
dec
xchg
icebp
xchg
imul
dec
cmps
push
fbstp
and
mov
jmp
std
ins
dec
shl
pop
xlat
(bad)
jmp
in
cdq
test
lds
repz
sbb
mov
dec
frndint
ds
inc
sahf
xchg
addr16
cwde
popa
outs
jmp
cdq
push
push
test
shr
xor
pop
and
jmp
xchg
(bad)
and
loop
mov
rcl
popf
fld
pop
arpl
dec
pop
cmp
dec
mov
call
mov
cmp
xor
jmp
out
cwde
popf
dec
in
btr
mov
outs
dec
inc
jle
rcl
inc
sbb
dec
fsub
jmp
cli
sub
movs
mov
push
sti
hlt
lea
mov
xchg
rol
xlat
sub
inc
retf
cli
and
aaa
xor
dec
or
test
cmp
xchg
ret
mov
bound
adc
ja
mov
shl
stos
fucomip
popa
jecxz
int3
fistp
fwait
pop
cmp
add
add
xchg
cmp
mov
clc
jge
cmp
inc
sahf
div
and
loopne
jno
push
jb
arpl
test
enter
push
out
lods
push
pop
sub
adc
test
pop
ja
loopne
push
push
inc
arpl
pop
clts
fnstsw
leave
ret
mov
sbb
sub
pop
cmp
mov
xor
inc
gs
pop
mov
jae
sbb
adc
lods
cmp
dec
or
xor
mov
les
repnz
sub
loopne
dec
sub
out
adc
jne
shl
call
cdq
int3
adc
add
jge
or
add
data16
(bad)
mov
popa
outs
push
(bad)
ret
iret
mov
les
mov
jns
pop
xchg
test
or
loope
mov
jae
dec
mov
mov
jp
retf
dec
adc
imul
test
fwait
popf
shr
xor
in
imul
inc
loope
xor
arpl
je
mov
jmp
aas
int3
or
and
int3
in
dec
gs
daa
xchg
sbb
inc
scas
fcmovb
stc
inc
pop
and
inc
mov
test
inc
cmps
mov
add
sbb
(bad)
or
stos
add
pusha
(bad)
outs
mov
pop
mov
pop
jl
xor
dec
pop
adc
add
fldenv
mov
pop
sub
scas
movs
cmp
dec
aad
sub
daa
cmp
sub
jo
add
add
mov
int
popf
sbb
out
sub
jno
out
mov
cld
sahf
rcr
aad
cmp
leave
not
pushf
xchg
and
jge
test
je
sbb
clc
jno
mov
outs
das
mov
dec
std
std
lahf
add
mov
pop
call
addr16
pop
in
sbb
xchg
out
sbb
and
mov
inc
repnz
pop
test
or
int3
iret
ja
shld
imul
retf
or
add
jo
inc
in
nop
bound
fdivr
sbb
mov
adc
add
pop
inc
xchg
inc
pop
or
pop
rol
xlat
mov
pop
test
js
test
mul
into
ret
fwait
movs
aam
xor
movs
or
adc
loopne
popa
repz
mov
add
ins
sahf
jo
shr
mov
and
mov
jg
test
dec
pop
xchg
inc
mov
or
xchg
rcl
inc
mov
jmp
data16
xchg
push
ret
shl
sbb
retf
pop
test
sub
adc
and
xor
in
nop
dec
ja
jb
pop
sub
add
inc
sub
jb
test
push
or
test
imul
adc
cmp
push
repz
out
(bad)
mov
daa
mov
cwde
rcl
push
and
cmc
(bad)
out
xor
push
in
repz
cli
jae
ret
js
std
push
xor
pop
inc
aaa
xchg
sub
inc
(bad)
ja
push
add
and
adc
(bad)
lock
pushf
mov
stc
push
xchg
mov
fwait
mov
push
not
jle
imul
pop
pop
xchg
movs
adc
push
pop
or
sbb
push
push
dec
out
mov
cmp
dec
hlt
push
adc
test
push
xor
cmp
mov
call
cdq
xchg
add
push
push
sub
xchg
cmp
or
mov
adc
fadd
push
outs
(bad)
push
aad
mov
fs
jecxz
mov
sbb
sub
sbb
xlat
mov
inc
and
push
xchg
loopne
and
movs
outs
mov
stos
mov
vmovdqu
jns
mov
lock
mov
mov
cmc
jb
dec
fwait
push
or
int
jge
mov
popa
lock
rcr
stc
sbb
xor
push
shr
xor
imul
movnti
sub
fld
inc
push
sbb
fisubr
inc
adc
adc
sub
retf
push
in
push
pop
repz
push
sub
jl
fnsave
adc
mov
xor
lods
int3
out
jo
push
(bad)
xchg
xor
sahf
dec
cmp
std
ret
or
mov
(bad)
and
jae
inc
sbb
aam
push
dec
rcr
(bad)
outs
pop
sub
mov
push
xchg
push
fisttp
setg
push
xchg
dec
jbe
mov
jmp
popa
or
lea
call
scas
sub
mov
sbb
sbb
loop
stos
mov
fsub
mov
sbb
outs
push
push
push
scas
lods
xor
cmp
retf
sti
adc
mov
(bad)
adc
outs
call
mov
lock
pop
jne
cmps
popa
adc
aas
mov
sbb
icebp
in
and
dec
popa
pop
add
mov
ins
sub
xchg
fcomp
pop
out
pop
cs
ret
or
sbb
inc
retf
mov
sub
cdq
rol
fisttp
rcr
adc
xchg
jmp
pop
fstp
jne
lods
mov
cmp
mov
jne
pushf
cmp
clc
ret
cmp
lods
pop
(bad)
lahf
(bad)
cmp
adc
mov
leave
movs
or
fnstcw
fidivr
sbb
mov
jl
mov
sbb
dec
push
aas
retf
(bad)
into
jo
lock
sbb
sub
icebp
iretw
adc
pop
sub
adc
imul
fmul
inc
ss
movs
sub
adc
scas
mov
and
jle
aam
xchg
jecxz
or
(bad)
cwde
fwait
push
mov
sahf
mov
mov
out
stc
imul
shl
jne
mov
mov
jbe
xchg
fimul
call
ins
push
lahf
pop
xor
pop
int3
loopne
leave
jmp
pop
das
sbb
inc
int
or
xchg
dec
mov
push
push
(bad)
jne
sbb
sub
push
ins
adc
mov
cs
sahf
sbb
test
inc
mov
xchg
test
adc
frstor
xchg
jge
adc
and
test
sbb
(bad)
mov
push
push
xchg
adc
inc
sbb
pop
repz
lahf
add
inc
push
mov
dec
out
cdq
sbb
push
jecxz
jns
dec
xchg
jo
cdq
dec
lods
mov
les
inc
cdq
mov
sbb
adc
xchg
xchg
mov
xor
mov
mov
int3
pushf
cdq
clc
xchg
xor
dec
cmp
inc
outs
sbb
rcr
das
dec
xor
push
mov
jo
push
fst
push
lahf
test
pop
cwde
int
inc
test
jp
rcl
xchg
sub
push
and
mov
fcomp
jno
addr16
in
jge
dec
cmps
popa
and
sti
push
(bad)
(bad)
sub
fwait
test
jbe
imul
or
pop
stos
pop
inc
sbb
push
push
cmc
mov
lds
leave
in
sub
fwait
repnz
test
jns
push
jo
in
nop
ja
and
inc
mov
inc
dec
pop
fidiv
push
fcom
jp
imul
enter
sub
pop
stos
cmps
lds
jne
dec
mov
das
sbb
hlt
push
not
(bad)
cmp
in
sub
cdq
arpl
jg
iret
je
sbb
ret
mov
xor
lods
mov
push
sahf
add
lock
loop
mov
adc
dec
jb
jno
ins
lock
fstp
jg
lea
pop
rcr
mov
(bad)
inc
cmp
jnp
repz
mov
and
fsubr
adc
aam
mov
cdq
in
int3
mov
cmp
dec
cmp
ror
add
into
in
rcl
mov
mov
repnz
retf
test
sar
cmps
hlt
test
pop
push
dec
push
jae
mov
push
call
cmp
cmps
rcl
mov
stos
adc
mov
ja
bound
ds
xchg
(bad)
loop
(bad)
mov
mov
das
mov
add
add
addps
cwde
mov
sub
aaa
inc
mov
jmp
or
ins
xchg
mov
or
pushf
mov
lods
sub
sbb
xchg
sub
xchg
jns
aam
or
cs
sub
push
outs
dec
add
ja
fistp
gs
cmp
sbb
push
idiv
and
rcr
push
add
or
push
mov
push
ja
pop
call
pop
test
cdq
popa
mov
mov
mov
data16
bsr
xchg
sub
fist
data16
movs
lods
or
inc
push
pop
rcl
fwait
cli
mov
in
loop
call
test
nop
jge
or
mov
xchg
mov
or
loopne
scas
adc
in
dec
and
pop
test
leave
fisubr
ins
cli
add
jl
mov
mov
out
sbb
xor
icebp
lock
push
imul
cs
pop
outs
xor
cli
into
fidivr
test
scas
inc
mov
scas
in
fxtract
nop
out
mov
xlat
cmc
or
addr16
fld
mov
sti
iret
xor
scas
and
mov
xor
adc
movs
outs
add
ds
cwde
test
xor
fwait
or
jmp
sub
pop
out
cmc
pop
push
mov
sbb
ins
fs
nop
rcl
(bad)
cmp
add
and
sub
sbb
rcr
cdq
retfw
mov
nop
in
mov
jp
out
jnp
sbb
outs
xchg
dec
inc
and
loopne
fmul
sub
int3
ja
test
sub
dec
jbe
sbb
inc
push
adc
mov
lahf
lahf
adc
fisubr
into
movs
cmp
mov
icebp
bound
repnz
xor
and
je
xor
pop
push
ja
imul
inc
mov
mov
push
fisubr
fs
add
aam
jl
pop
xor
and
mov
adc
cld
cld
into
inc
loope
mov
dec
es
mov
leave
jbe
shl
xchg
lahf
es
ss
sbb
mov
sub
xor
jne
dec
cmp
lahf
jecxz
sub
test
pushf
inc
lea
cmp
or
and
push
mov
inc
xor
and
aaa
jns
imul
xchg
ds
and
push
shl
out
js
daa
rol
je
push
fmul
sub
xor
or
mov
adc
int
jne
(bad)
fwait
sub
jne
fidivr
ins
stc
aas
mov
clc
mov
xor
movs
inc
jp
mov
push
and
arpl
lods
shr
add
xchg
mov
pop
jge
sti
fisubr
xor
aam
pop
out
or
test
sbb
ss
addr16
in
push
sub
mov
scas
outs
sub
popa
rcr
push
das
jle
inc
jg
sub
movs
cmp
imul
out
mov
stc
cmp
fwait
cmps
into
pop
aam
pop
(bad)
or
stos
loop
sti
push
mov
sbb
int3
push
cmp
dec
cld
bndldx
sub
adc
imul
outs
jns
mov
xchg
scas
and
jl
daa
retf
call
dec
(bad)
pop
test
jge
movs
push
aaa
lods
dec
sti
jo
jge
push
test
jmp
or
fldenv
sub
loopne
shl
gs
pop
push
sub
and
or
repnz
aaa
adc
sbb
imul
inc
pop
mov
out
leave
xor
push
clc
mov
clc
inc
pusha
inc
mov
xchg
and
sbb
lods
outs
and
cld
scas
mov
int
jl
into
mov
mov
sub
xchg
push
scas
(bad)
outs
(bad)
(bad)
pop
mov
mov
cmp
lar
or
call
out
cmp
rcr
push
push
cld
idiv
mov
mov
sub
les
inc
inc
mov
arpl
sbb
leave
push
and
ins
jp
sbb
es
iret
and
arpl
and
sbb
cmp
mov
stos
inc
test
ror
bound
jnp
test
movs
xor
dec
add
or
and
idiv
xchg
and
and
sar
pop
jmp
fs
cmp
into
pop
sti
ja
fsubrp
mov
mov
les
mov
pop
fmul
jl
ficomp
and
cmc
sub
xchg
jno
inc
push
inc
xchg
lods
(bad)
add
(bad)
ds
cmps
push
sbb
inc
jb
or
jmp
mov
inc
int3
stos
push
and
push
stos
mov
xor
sub
rcl
(bad)
arpl
fisttp
lds
mov
repz
mov
inc
inc
loope
imul
movs
pop
add
in
mov
stos
jge
xchg
xchg
aam
in
hlt
and
dec
dec
dec
sbb
jle
xchg
(bad)
push
xor
mov
adc
test
(bad)
sbb
dec
stos
rcr
shl
mov
add
add
dec
stc
movs
je
neg
push
mov
and
(bad)
nop
mov
dec
in
dec
cmp
dec
imul
jns
add
shr
or
fs
fcom
pop
lahf
mov
ds
xchg
push
stos
loop
test
in
jb
cmp
fmul
imul
sahf
cmp
adc
aam
jo
int
int3
sbb
xchg
pop
push
(bad)
pop
cmp
jmp
int
adc
jge
xchg
ret
pop
fdivr
mov
pop
bound
sbb
imul
je
cmp
push
into
push
cmps
mov
mov
xor
pop
sbb
inc
shr
xor
call
(bad)
inc
push
sub
cmp
mov
add
sbb
data16
sti
xor
sub
mov
sbb
mov
mov
leave
scas
mov
fstp
(bad)
jl
cmps
retf
push
in
push
in
inc
mov
outs
or
jns
mov
add
dec
push
jb
jecxz
adc
jmp
ss
pushf
ins
mov
push
dec
sub
push
(bad)
fdivr
sti
inc
loop
sbb
retf
mov
sar
mov
xchg
cmps
loope
jg
or
stos
jne
xchg
aam
and
repnz
nop
or
leave
cmps
pop
push
cmp
jmp
inc
cwde
adc
scas
les
aas
and
push
mov
call
inc
inc
ins
jg
mov
mov
xor
jle
xchg
push
jnp
dec
xor
push
arpl
cmp
xchg
(bad)
arpl
arpl
call
and
sti
pushf
aaa
jae
inc
leave
daa
push
dec
pop
inc
cmp
cli
or
out
add
jmp
scas
std
imul
imul
jecxz
imul
pop
lods
mov
xlat
in
push
imul
push
pushf
and
repnz
addr16
cmp
rcr
(bad)
(bad)
cmp
into
jno
jbe
fldenv
mov
sub
pop
das
popf
mov
jmp
bound
cwde
shl
add
jle
mov
out
jl
imul
sti
idiv
push
xor
imul
je
mov
jmp
cld
and
outs
dec
mov
(bad)
ins
mov
sub
fwait
aam
or
(bad)
add
scas
mov
xor
sbb
cdq
in
cwde
rol
dec
das
pop
jbe
out
jbe
cmovb
push
xchg
or
outs
inc
xchg
pop
pop
or
enter
das
mov
mov
rcr
call
mov
fstp
mov
sub
mov
mov
jecxz
pusha
add
mov
inc
outs
mov
jmp
add
stos
mov
pushf
push
adc
fucomip
pusha
pop
mov
fmulp
pop
rcr
imul
lock
add
movnti
ficomp
xlat
shl
ret
add
out
cld
dec
pop
ins
outs
dec
(bad)
jp
sbb
mov
push
popa
hlt
call
jp
fsubr
icebp
xor
(bad)
aad
gs
pop
and
(bad)
cmc
mov
rcl
mul
sbb
int
xchg
ins
pusha
je
stos
rol
sub
adc
shl
add
sbb
adc
(bad)
pushf
inc
pop
sahf
daa
retf
sub
mov
not
stc
rcl
daa
push
scas
adc
fnstsw
(bad)
mov
pop
iret
movs
xor
push
out
push
idiv
add
out
mov
sub
enter
loopne
nop
mov
cmp
or
pop
or
mov
push
gs
dec
ret
inc
dec
and
cmps
add
jmp
gs
add
rol
movs
pop
adc
stos
(bad)
mov
fnsave
and
xlat
das
mov
pop
pop
bound
ja
and
mov
or
out
jp
mov
jl
out
leave
(bad)
fild
sub
ret
nop
push
mov
int3
loope
cmp
xor
xchg
inc
imul
lahf
jmp
rcl
inc
pop
in
push
add
mov
dec
add
xchg
push
or
inc
push
and
stos
xchg
loope
cmp
sub
pop
add
xchg
xchg
mov
aam
sbb
fcom
inc
mov
mov
lahf
sbb
xor
mov
and
xor
cmp
add
sbb
addr16
pop
fs
pushf
sub
or
test
in
mov
add
test
mov
sbb
test
scas
(bad)
sbb
adc
fld
icebp
popf
adc
xor
sbb
daa
cmp
xor
xor
sbb
push
inc
(bad)
stc
sub
adc
sub
and
xor
cmps
hlt
or
pop
and
mov
arpl
fwait
int
sar
jl
test
aad
and
mov
ror
sub
dec
lahf
mov
sti
xor
or
neg
hlt
and
push
in
ret
(bad)
push
fsubrp
xchg
push
pusha
pop
or
dec
pop
mov
out
aaa
les
adc
push
into
(bad)
mov
sbb
sub
add
pop
fisub
push
sub
(bad)
inc
xor
in
repz
aaa
pop
mov
mov
cwde
outs
push
cmp
jbe
imul
in
cmp
add
(bad)
div
loopne
ds
fld
inc
add
xor
arpl
push
clc
test
lock
fldlg2
shl
gs
inc
test
sub
aaa
cmps
mov
dec
sub
xchg
mov
out
dec
sub
mov
mov
movs
jmp
out
pop
pop
in
mov
aas
mov
mov
pop
xor
(bad)
push
leave
cld
fcomp
sbb
sysexit
mov
jae
adc
pop
xchg
adc
jbe
sbb
(bad)
xchg
pop
loopne
sbb
sub
or
imul
rcr
sbb
imul
loope
std
sub
xor
cmp
sbb
loope
add
adc
ss
adc
push
test
mov
mov
in
repz
inc
fild
or
push
add
and
fldcw
fsubr
jl
cdq
shl
xor
std
lods
mov
adc
mov
jl
mov
cdq
hlt
mov
dec
add
sbb
and
push
push
mov
popf
dec
ret
xchg
sub
test
mov
outs
mov
sbb
mov
out
loop
cmp
fisttp
jge
inc
xchg
lea
xor
mov
(bad)
mov
mov
xchg
sbb
dec
test
xor
mov
in
retf
cmps
sub
stos
mov
push
sar
push
add
hlt
mov
sub
stos
mov
xor
mov
push
sub
add
dec
icebp
neg
mov
or
data16
(bad)
jb
xor
pop
sub
push
gs
loopne
addr16
inc
sti
stc
ja
mov
lea
inc
shr
push
cwde
into
sub
in
adc
add
fisubr
jp
mov
add
inc
mov
pop
hlt
je
mov
out
inc
mov
or
fild
push
ja
lods
cmp
dec
ds
out
outs
mov
xor
cmp
push
inc
out
fdiv
cmp
inc
adc
imul
leave
dec
dec
inc
sbb
xchg
mov
inc
outs
mov
sbb
push
mov
iret
outs
mov
xchg
inc
sbb
stos
pop
sbb
sbb
sbb
push
mov
inc
neg
neg
ja
mov
out
clc
loop
cmp
div
or
cmps
call
in
lahf
into
xchg
fwait
jae
or
xchg
popa
popa
jo
mov
aaa
add
fsubr
mov
xor
pop
sbb
add
cli
mov
jmp
stos
pop
(bad)
icebp
scas
mov
mov
pusha
aas
cmp
ja
fsub
aas
movs
push
retf
mov
cld
mul
xchg
mov
jmp
jnp
and
std
loope
or
add
enter
sti
ret
sti
add
ret
or
(bad)
fstp
(bad)
leave
inc
adc
mov
adc
or
iret
push
add
sub
lods
xor
jge
dec
neg
retf
movs
and
mov
out
fwait
cwde
movs
ins
jge
fidivr
stos
repnz
or
xchg
jo
lods
int3
(bad)
je
ror
dec
push
les
or
dec
aad
and
jne
push
pop
outs
cli
dec
inc
mov
jl
rol
sbb
mov
push
adc
stos
stos
add
mov
outs
stc
dec
loopne
jbe
pop
test
cmp
nop
mov
out
movs
nop
mov
hlt
(bad)
cmp
nop
imul
push
sub
add
mov
call
call
lods
jb
enter
pop
sub
or
das
rcl
jl
shr
js
test
lock
push
push
mov
es
sbb
inc
mov
mov
xor
and
add
add
push
mov
and
sbb
ds
(bad)
pop
jmp
fucom
aas
xchg
xchg
xor
lods
xchg
pop
push
out
sbb
frstor
pop
mul
in
cmp
sbb
aaa
test
fs
aam
dec
xchg
mov
cmp
mov
fsub
daa
jbe
daa
aaa
ins
test
and
ror
xchg
sub
loopne
movs
mov
mov
test
enter
adc
popa
cmps
pop
xor
imul
sahf
push
adc
push
mov
sub
xchg
dec
sub
cdq
and
ja
mov
cmp
push
inc
js
mov
fstp
dec
cdq
in
pop
pop
xchg
pop
es
xor
ret
outs
or
or
mov
inc
movs
stc
xchg
inc
cmp
call
fwait
and
outs
retf
add
movs
retf
sbb
mov
add
push
inc
cli
fwait
add
sbb
dec
and
cmc
pop
test
adc
aad
test
cmp
or
in
enter
fdivr
out
push
pop
cld
fwait
sbb
dec
jne
add
push
dec
ret
jp
inc
xchg
sbb
(bad)
adc
cs
les
or
fisubr
adc
ins
fadd
imul
test
cmps
ret
add
loope
(bad)
lahf
fdiv
jb
add
inc
fstp
jg
lods
xchg
mov
mov
mov
add
ins
cld
jb
pop
lahf
div
cmp
int3
shl
loope
xor
dec
adc
sub
pop
xchg
div
popa
push
or
add
push
lea
push
fadd
or
jb
lahf
and
ds
mov
mov
or
xor
(bad)
sbb
inc
jno
sub
and
scas
ret
aaa
and
das
push
cmc
sub
adc
push
pop
in
retf
das
cmp
xlat
in
push
push
je
(bad)
lods
popf
and
ror
icebp
sahf
sub
jno
test
pop
jp
imul
adc
xchg
push
(bad)
pop
pop
and
arpl
jbe
fdivr
mov
mov
call
xor
in
jle
sbb
mov
div
daa
push
data16
hlt
add
push
jno
sub
pop
jecxz
mov
jg
sbb
pop
retf
mov
out
mov
sub
inc
xor
mov
ss
mov
cmp
pop
repnz
daa
mov
fs
pop
adc
in
std
neg
push
and
je
and
test
shl
call
repnz
jecxz
out
loopne
fwait
rcl
pop
inc
jmp
lds
pop
rcl
retf
loopne
jl
add
sbb
cmp
dec
adc
call
pop
sbb
aad
in
pop
enter
and
cli
test
mov
pop
fwait
and
xchg
sbb
push
xor
outs
cmp
xor
mov
xchg
mov
ins
pcmpeqb
dec
dec
popa
shl
cmps
movs
fidivr
mov
xor
(bad)
jmp
adc
loopne
ficomp
jmp
mov
mov
xchg
sub
hlt
push
xor
or
ins
mov
dec
push
sub
(bad)
lea
lods
xchg
icebp
loop
xor
ja
sub
xor
repnz
call
test
cwde
push
add
nop
daa
outs
clc
xor
bound
push
stc
shl
in
into
inc
push
jp
mov
adc
gs
stos
push
(bad)
sbb
jp
dec
and
pop
jl
xchg
dec
mov
mov
push
inc
cmp
nop
imul
cld
cld
adc
and
jnp
ins
push
jg
add
add
jae
sub
mov
jmp
shr
and
fnstsw
test
stos
fimul
mov
in
fist
lock
imul
cmp
jg
cmp
cmps
sub
call
jnp
xchg
or
jg
ficom
ja
mov
je
cmp
jnp
hlt
push
pop
and
stos
mov
jne
sub
mov
(bad)
retf
cmps
mov
xchg
sub
je
ins
loope
mov
test
inc
or
mov
dec
(bad)
sahf
outs
xor
xor
cmp
or
ds
adc
mov
into
les
xor
inc
mov
aas
mov
dec
pop
jbe
ret
repz
sbb
cmp
lock
add
ins
fwait
loope
xor
or
pop
mov
nop
jmp
loopne
stc
jb
outs
shr
jecxz
sbb
(bad)
jecxz
mov
sub
stos
inc
icebp
sbb
push
mov
mov
das
jns
add
xor
ret
(bad)
inc
xor
sub
loop
aad
test
or
inc
inc
xor
addr16
fild
push
enter
test
je
push
fisubr
mov
stos
cmc
xchg
je
xchg
xchg
cld
mov
sbb
sahf
daa
jae
hlt
dec
cs
fisub
and
sbb
xor
push
mov
stc
or
jns
xor
repnz
jle
mov
ins
xchg
xor
push
adc
and
mov
xor
push
xor
or
add
ss
xor
sahf
push
jmp
scas
daa
and
scas
adc
mov
mov
in
and
rcl
imul
cmp
fcmovnb
fsub
movs
dec
cmp
add
mov
jmp
sub
outs
in
stos
push
ds
xchg
pop
pop
rcr
out
test
sbb
in
retf
cmp
out
cmovb
push
dec
xchg
xor
outs
xchg
iret
mov
add
stc
bound
and
jge
inc
xor
stos
dec
sub
shl
(bad)
sbb
imul
mov
sub
xor
dec
xchg
dec
shr
mov
inc
ffreep
mov
add
scas
cmc
cmps
jae
mov
push
lds
mov
add
cmp
add
sbb
xchg
jmp
repnz
ss
ins
add
cmps
push
stos
inc
sub
adc
cmp
iret
clc
jo
fs
out
xchg
adc
or
mov
dec
adc
cmp
jbe
pop
stos
daa
jbe
bound
shl
xchg
push
(bad)
mov
daa
neg
dec
cdq
add
out
push
mov
pop
in
mov
sbb
and
jne
movs
(bad)
and
sub
xchg
es
xchg
sub
lods
inc
fdivr
inc
mov
mov
xor
scas
push
(bad)
mov
xchg
mov
in
cmp
push
xchg
aas
imul
mov
outs
mov
mov
jne
fist
dec
jmp
ss
mov
mov
xchg
clc
mov
jne
daa
je
dec
mov
hlt
pop
(bad)
repz
mov
mov
dec
jle
xor
xchg
out
bound
stc
daa
fdivr
and
lock
cmp
or
xor
mov
jb
mov
push
sub
and
fwait
out
and
std
xchg
lods
mov
and
stos
stos
mov
in
daa
mov
push
lods
mov
mov
movs
or
mov
mov
pop
inc
xchg
mov
ins
outs
inc
or
(bad)
or
aaa
out
loope
lods
cwde
jl
dec
outs
int
das
inc
jnp
scas
stos
or
pop
push
ror
jb
ret
mov
or
push
pop
dec
dec
les
(bad)
xor
add
sbb
and
nop
mov
fiadd
push
icebp
pop
fwait
inc
push
inc
xor
(bad)
fisttp
ret
leave
(bad)
div
sbb
stos
or
push
jg
cli
dec
push
stos
test
(bad)
mov
mov
adc
adc
sbb
loope
imul
push
dec
idiv
jg
stos
cld
push
rol
push
add
xchg
sub
test
(bad)
popf
mov
mov
dec
rcr
hlt
dec
dec
push
xor
cld
sub
lods
int
(bad)
in
and
imul
aad
mov
fstp
mov
div
push
fs
xchg
mov
imul
push
mov
and
aas
cmp
loopne
jecxz
adc
mov
dec
int3
and
or
imul
loop
sbb
out
or
inc
(bad)
fcmove
and
test
push
pop
inc
ins
fwait
pop
cmp
out
mov
data16
inc
sub
sbb
lods
les
xchg
enter
js
xlat
mov
pop
test
push
adc
xchg
jns
popa
call
xchg
aaa
fcom
hlt
lods
or
jg
push
loopne
and
lock
mov
cmp
outs
fadd
pop
jmp
clc
and
sti
add
retf
jg
jecxz
ins
mov
in
outs
dec
cs
push
loope
fprem1
int3
add
xchg
retf
into
cmp
lea
std
or
pop
inc
jo
scas
ins
(bad)
ror
dec
mov
sbb
push
test
push
pop
imul
jbe
ret
add
call
mov
ret
in
xor
ret
mov
jl
aad
adc
imul
retf
mov
es
inc
and
aas
out
push
(bad)
cld
or
xor
push
stc
sbb
call
int3
jno
push
mov
leave
icebp
repnz
imul
out
pop
nop
loop
(bad)
cmp
cmp
pop
dec
arpl
dec
into
xchg
sbb
int3
hlt
cs
ins
jmp
inc
dec
nop
jmp
(bad)
xor
sub
mov
cli
rol
out
pop
out
mov
cmp
xchg
pop
inc
dec
jbe
call
jg
test
xor
mov
popf
push
dec
test
ret
mov
mov
sub
imul
mov
mov
in
mov
outs
(bad)
and
lds
push
pop
add
adc
imul
jmp
daa
pop
cmp
cdq
pandn
dec
or
(bad)
enter
outs
mov
in
inc
fcom
std
out
int3
or
pop
dec
push
add
test
fsub
pop
add
fmul
sub
cmp
fcom
xor
and
or
jecxz
mov
inc
push
lahf
daa
repz
addr16
in
push
pop
lock
call
push
pop
sahf
cld
out
jnp
ret
xchg
cli
cmp
ds
mov
pop
xchg
in
adc
inc
push
push
loop
push
out
xor
sub
jb
ret
outs
sub
mov
cdq
in
fimul
push
adc
cmp
gs
stos
sbb
inc
xchg
cmc
push
xor
(bad)
fld
add
gs
adc
aam
or
imul
sbb
jle
repnz
js
scas
jmp
jg
cdq
aas
dec
pushf
in
xlat
mov
lahf
xchg
cwde
hlt
xchg
xchg
daa
repnz
cld
std
push
out
lahf
pop
fldcw
adc
cmps
add
int
dec
mov
cmp
cmp
loop
jno
data16
jg
mov
ror
out
cmps
push
cmp
inc
pop
inc
sbb
out
retf
mov
dec
test
dec
ins
mov
dec
mov
scas
fist
push
dec
stos
or
mov
jae
or
push
and
gs
movs
pop
add
les
cmp
pop
loope
in
and
fwait
bound
call
ds
sub
cld
cld
inc
push
jmp
mov
(bad)
mov
ret
add
or
push
xchg
outs
jnp
(bad)
mul
xlat
mov
fwait
mov
fdiv
aaa
xor
cmps
cmp
jmp
jmp
arpl
repnz
jo
outs
and
movs
ret
not
xor
sub
ret
mul
ins
mov
or
xor
aad
cmps
lods
(bad)
mov
sub
xor
sub
enter
push
int3
dec
mov
cmp
fadd
aam
retf
add
pop
sbb
fstp
int
jg
dec
and
loopne
cmp
adc
ret
or
into
and
push
icebp
and
mov
aad
call
aas
push
jmp
fnsave
bound
daa
out
stos
lods
sub
lock
pop
jno
inc
sbb
push
adc
sub
sahf
test
out
mov
(bad)
pushf
pop
clc
rol
movs
ja
retf
enter
xchg
or
out
adc
add
ja
scas
into
push
xor
out
jbe
(bad)
leave
pop
cwde
shl
clc
stc
mov
mov
pop
xchg
pop
jo
sbb
mov
cmp
pusha
jg
mov
aas
scas
(bad)
dec
inc
xlat
aaa
mov
bound
mov
movs
inc
(bad)
aas
pop
sbb
sbb
sub
out
leave
pop
xchg
movs
mov
or
and
pusha
or
aad
mov
popa
push
cmp
fcmovnb
pop
out
icebp
push
jno
test
pop
imul
mov
sub
test
ret
retf
(bad)
fwait
fwait
or
nop
pop
call
imul
pop
and
sti
dec
push
in
mov
aaa
push
loop
xchg
pushf
xor
ror
in
fbstp
shr
push
mov
stos
xlat
mov
pusha
and
jae
dec
movs
scas
hlt
and
lds
jecxz
xchg
and
ins
mov
loope
ret
std
rcr
jmp
lds
ins
xor
dec
shl
or
lea
and
movs
cs
out
cmc
out
retf
popa
cmc
xlat
popa
lahf
std
jns
jb
mov
in
sub
imul
fsub
dec
jp
scas
lods
int
or
test
pop
sub
jae
dec
cmps
into
add
push
es
shl
out
push
scas
ret
nop
imul
sbb
jnp
scas
addr16
push
mov
jge
push
adc
jmp
lahf
mov
xor
jge
dec
imul
into
cdq
adc
sbb
inc
xor
xor
xchg
aas
push
arpl
or
mov
adc
mov
sbb
outs
jns
and
hlt
fsubr
mov
sub
jge
test
add
lock
or
movs
jne
mov
sub
dec
movlps
in
iret
lods
lea
bnd
sti
mov
mov
xchg
sti
or
sti
addr16
gs
ret
(bad)
int3
jmp
xchg
adc
mov
inc
movs
mov
add
hlt
ja
retf
sahf
mov
sbb
jmp
stos
fsub
ret
pop
sub
cmp
push
addr16
out
stos
jge
ss
pop
dec
pushf
inc
arpl
nop
stos
aaa
push
or
lea
xchg
sub
dec
mov
xor
mov
sbb
int
mov
ja
loope
dec
(bad)
out
push
lea
ds
setl
ficom
jl
lods
test
mov
in
push
icebp
and
add
sbb
lea
test
mov
push
(bad)
pop
loope
mov
cmp
mov
popf
addr16
rol
ss
mov
mov
xchg
scas
icebp
in
xchg
mov
out
mov
xlat
ret
pop
shl
jne
fwait
mov
adc
mov
aam
mov
jecxz
mov
or
mov
mov
(bad)
idiv
fidiv
push
clc
or
icebp
cmps
add
pushf
adc
xchg
ins
mov
popf
adc
setge
xor
mov
jb
push
mov
sbb
xchg
cmp
adc
jae
idiv
cld
bound
push
lods
ret
add
call
test
mov
les
pop
rol
popa
mov
je
test
aaa
fisttp
mov
cdq
sub
cmp
imul
jmp
mov
iret
and
xchg
pop
(bad)
cmps
pop
mov
xchg
ds
sub
aaa
jmp
fidivr
cmp
push
scas
ret
(bad)
mov
(bad)
fwait
mov
mov
outs
add
popf
and
js
mov
fdivr
mov
jne
pusha
fild
xlat
into
(bad)
jbe
cmp
out
push
ss
call
mov
hlt
push
or
stos
or
addr16
mov
lahf
cmp
push
out
mov
mov
pop
fimul
add
push
outs
pop
jl
inc
push
or
popf
imul
add
jno
push
mov
ds
repz
lods
pop
shl
je
jb
fbld
cdq
xchg
fs
icebp
repz
jmp
imul
lods
inc
inc
mov
dec
fisub
and
xchg
jecxz
in
(bad)
ins
mov
adc
sub
in
sbb
pop
pop
call
cmp
pop
ins
inc
push
xchg
mov
sti
sbb
cmp
xchg
es
std
xlat
sbb
lods
and
ins
add
cmp
mov
out
test
stos
loope
lahf
mov
xchg
sub
mov
(bad)
pop
xchg
mov
int3
out
lods
aas
daa
clc
add
(bad)
movs
popa
or
cld
pop
mov
jne
repz
xor
ins
jnp
mov
test
jp
pop
jmp
mov
in
jmp
mov
dec
mov
pop
sbb
lods
fsubp
inc
jle
cmp
hlt
call
enter
popa
aaa
(bad)
retf
test
je
add
jnp
in
jg
push
mov
jp
into
adc
jecxz
enter
adc
push
and
js
mov
cmp
push
mov
loop
xchg
push
ror
in
jmp
test
shl
fisubr
add
imul
imul
sub
ins
ds
mov
xor
cmp
inc
dec
jecxz
jno
popa
dec
dec
rcl
mov
mov
fistp
ds
(bad)
jb
jp
jg
inc
int3
mov
jbe
mov
test
arpl
inc
cmps
adc
inc
and
jb
ins
fdivr
ret
push
cmc
jns
inc
xchg
outs
or
test
pop
adc
lods
sub
ins
inc
sbb
cmc
push
ja
aaa
nop
add
aam
add
mov
mov
sti
jl
imul
mov
dec
mov
pop
inc
movs
jnp
daa
ds
movs
sub
or
ret
in
sub
pop
add
mov
lea
addr16
in
or
pop
inc
movs
loop
call
sti
aam
sub
jbe
movs
dec
test
sahf
push
lods
inc
cmp
ss
jae
retf
movs
pop
mov
(bad)
mov
mov
jg
inc
xor
pop
out
lds
call
loopne
mov
call
dec
movs
adc
mov
ret
sbb
inc
and
cmp
xchg
push
loopne
in
repz
pusha
(bad)
icebp
rcl
nop
test
in
int3
or
mov
mov
popa
pop
dec
push
lods
dec
sub
adc
sbb
(bad)
cmp
add
(bad)
lods
call
loop
(bad)
outs
fcom
in
lahf
mov
xor
jns
or
bound
xor
push
push
adc
into
add
daa
mov
cmp
add
mov
mov
inc
push
imul
out
pop
(bad)
fwait
sbb
mov
dec
sti
mov
mov
mov
jmp
dec
outs
xor
fdiv
dec
aas
imul
mov
add
mov
mul
shr
out
cmovns
fcomp
mov
daa
adc
adc
xor
cmp
shl
push
addr16
fstp
loope
imul
adc
and
push
mov
pusha
inc
add
fst
retf
cmp
add
add
arpl
pop
hlt
iret
xor
fcomp
ins
lahf
jno
mov
fldenv
stos
fisub
hlt
jno
sbb
idiv
retf
push
mov
ja
out
mov
ins
outs
cwde
mov
sbb
xchg
int
out
imul
jne
arpl
out
push
movs
mov
cdq
cmp
mov
sbb
mov
or
jbe
test
jp
add
idiv
into
push
in
icebp
aad
xchg
cmp
loopne
push
dec
xchg
adc
adc
jns
shr
mov
inc
popf
adc
add
add
sahf
mov
mov
sub
icebp
loope
add
and
jg
cmps
ins
push
icebp
(bad)
jns
outs
sbb
repz
jae
outs
mov
cwde
sbb
lods
xchg
(bad)
hlt
nop
clc
mov
adc
sbb
in
gs
icebp
int
push
jge
fs
xchg
(bad)
mov
or
popa
imul
into
xor
cmp
mov
adc
mov
adc
into
mov
jg
aaa
aas
leave
xchg
jns
mov
fwait
aas
fnstcw
inc
dec
es
adc
lds
mov
inc
gs
jl
add
in
lods
adc
or
scas
add
rcl
retf
push
push
lock
or
xor
jae
fucomip
popf
out
gs
lds
xlat
imul
retf
add
movs
pop
dec
mov
rcr
sbb
sub
jp
and
rcr
aad
inc
js
sub
repz
mov
or
out
jno
sbb
scas
cwde
int3
push
sar
dec
retf
cwde
xor
jmp
mov
or
dec
retf
movs
or
(bad)
fistp
add
inc
pop
ins
imul
jl
and
mov
scas
add
lea
xchg
cmp
xchg
or
scas
xchg
retf
dec
inc
out
pop
mov
fstp
dec
or
fild
inc
xchg
cdq
icebp
jo
test
fwait
inc
fisub
fst
mov
pop
push
dec
sub
mov
daa
mov
push
cmps
retf
pop
ds
push
nop
push
push
cdq
fs
ins
sbb
xor
inc
les
pop
test
fdivp
pop
or
rcr
cld
dec
sbb
dec
test
adc
lahf
or
mov
ja
sub
mov
fs
push
push
adc
pushf
inc
test
mov
push
clc
mov
push
out
test
adc
imul
in
inc
adc
scas
push
jge
mov
push
aad
repz
jns
cs
pusha
loopne
int3
arpl
aas
adc
sbb
je
in
icebp
cs
int3
idiv
sub
addr16
das
mov
inc
or
push
test
popf
movs
push
cmps
lea
mul
(bad)
cli
inc
jno
mov
cmps
enter
retf
jb
aaa
xchg
sbb
ffreep
mov
add
(bad)
hlt
int3
imul
aas
add
jp
cmp
fist
push
loopne
mov
(bad)
fdivr
sbb
and
lods
push
and
xor
mov
cld
ds
sar
cmps
xchg
pop
retf
dec
sub
or
(bad)
pop
jns
xlat
shl
push
cs
cmp
mov
xchg
cmc
dec
sbb
jns
or
add
sbb
mov
cmc
xchg
mov
(bad)
ja
int
movs
sub
sti
push
cs
daa
mov
inc
dec
mov
push
loop
movs
loope
mov
or
stos
jb
pop
sbb
inc
iret
mov
and
cmp
mov
fcomp
dec
pop
aam
cmp
loope
jp
pop
jno
fisttp
outs
and
sbb
add
mov
iret
fisub
inc
jl
mov
mov
mov
out
data16
adc
into
loopne
jp
cmc
psubq
mov
rcl
lock
cmp
mov
mov
aam
out
adc
mov
xor
loope
xchg
cli
add
push
sub
mov
fild
push
xor
mov
dec
jl
(bad)
fsub
cmp
or
cmp
jg
fisub
jmp
push
jecxz
lock
inc
jns
adc
shr
addr16
out
or
pop
add
je
jne
mov
cld
push
mov
(bad)
mov
clc
out
mov
sbb
mov
out
pushf
out
leave
ret
mov
dec
mov
xchg
and
(bad)
cmp
inc
test
jg
mov
xchg
xchg
mov
ret
sbb
cli
or
outs
push
mov
sub
push
xchg
ins
out
movs
pop
imul
mov
pop
cmps
movs
leave
out
clc
add
inc
and
sbb
add
cmp
sub
cmp
inc
jmp
sub
push
sbb
push
pop
stos
mov
xchg
aam
das
inc
jmp
in
idiv
sub
push
repnz
push
dec
pop
mov
jp
stos
sub
mov
add
xlat
and
cmp
sbb
pushf
pop
out
sub
(bad)
xor
dec
gs
xor
pushf
mov
test
xor
js
sub
nop
mov
inc
push
xor
pusha
repnz
mov
nop
add
int3
cmp
fs
hlt
dec
pop
mov
pop
fs
mov
mov
push
jne
xchg
xchg
outs
mov
lods
aaa
std
out
push
fwait
push
xor
loop
lock
iret
retf
dec
cmc
test
cld
fs
cdq
adc
cmp
into
and
call
movs
dec
sbb
outs
fisttp
loopne
inc
sub
mov
es
movs
xor
jecxz
cmc
dec
mov
push
call
cdq
inc
add
xchg
mov
mov
xor
xchg
push
mov
fnstsw
mov
pop
push
sbb
cdq
and
syscall
xchg
cmp
mov
dec
in
bswap
mov
fidiv
jmp
cmps
mov
push
ins
sbb
sbb
dec
int3
imul
push
pop
rcl
add
aad
lock
out
xchg
xchg
into
xlat
inc
pop
xchg
mov
xor
rcr
imul
jb
or
call
ins
bound
in
sbb
add
mov
or
pop
shr
ror
cmp
shl
scas
jo
mov
mov
and
xor
popf
sub
push
sub
add
cdq
xor
shl
fs
sbb
das
xor
jnp
mov
das
jg
xor
scas
add
xor
sti
fs
imul
outs
jg
mov
pusha
mov
nop
in
xchg
stc
(bad)
or
mov
out
stos
xchg
mov
cwde
jp
sahf
lods
xchg
mov
dec
sbb
or
sub
outs
push
es
dec
dec
add
sbb
adc
pop
outs
in
push
retf
shr
xlat
push
test
inc
mov
ins
pop
push
repz
sub
mov
test
inc
cmps
cli
adc
or
jo
stos
stos
int
xor
push
mov
add
cdq
fcmovnb
sbb
inc
shl
mov
int3
xor
ss
push
shr
ror
test
es
fimul
jbe
xchg
xor
xchg
(bad)
out
or
and
inc
imul
push
iret
dec
fadd
inc
or
jmp
lods
xchg
add
push
jns
retf
push
movs
sub
push
xchg
xchg
push
je
mov
push
jne
loop
add
daa
xchg
lds
fxch
aad
jno
call
mov
into
xor
lahf
mov
fwait
into
or
xor
and
div
out
in
sbb
loopne
enter
add
dec
sbb
fldenv
stos
mov
(bad)
lods
cdq
rcl
xor
(bad)
loopne
in
clc
adc
cmp
and
and
xchg
mov
mov
mov
push
pop
fild
outs
jle
xor
and
or
push
js
mov
jge
sbb
retf
loop
add
aad
or
adc
push
mov
push
lods
mov
fidiv
mov
leave
push
inc
in
scas
pushf
add
in
sahf
jo
mov
xchg
sub
stos
xchg
test
aas
mov
(bad)
inc
pop
es
ror
jno
cmp
push
mov
push
jg
cmps
pop
in
cli
and
inc
retf
imul
sub
dec
stc
cdq
dec
jmp
push
fwait
sar
xchg
mov
adc
fwait
cmc
test
sbb
push
push
fcmovu
rol
add
movs
sub
out
push
and
(bad)
xchg
aaa
std
test
paddd
std
ret
(bad)
cwde
stc
add
add
inc
(bad)
xchg
(bad)
rol
sub
mov
pop
lods
cmp
mov
mov
push
movs
int3
push
jl
(bad)
cmp
cmp
bound
ss
dec
sbb
dec
shl
aam
pop
std
cld
popf
cmp
retf
pop
test
mov
fild
lahf
sbb
xchg
dec
cmps
loop
sbb
jp
and
add
in
or
sar
ds
cs
xor
loop
dec
ds
jno
fmul
cmp
test
cwde
push
das
add
mov
test
ja
jmp
repz
in
sbb
xchg
lock
sub
stc
inc
push
dec
lods
jb
test
push
jp
bound
rcr
push
and
addr16
int3
imul
xchg
mov
cmc
mov
jp
push
loopne
int
pop
and
call
sbb
ins
es
ficomp
fwait
xchg
mov
sti
sub
imul
fld
add
mov
repnz
jl
lods
xlat
test
aam
adc
inc
ror
adc
stc
retf
xor
out
out
nop
ss
jne
imul
and
inc
ins
mov
xchg
mov
pushf
rol
jmp
shl
xchg
es
rcr
cmps
pusha
or
mov
stos
nop
pop
pusha
mov
mov
outs
sbb
mov
push
push
sbb
adc
adc
xchg
mov
mov
jo
xchg
xchg
daa
stos
test
adc
rol
jmp
shr
rcl
xor
dec
sbb
mov
and
sbb
dec
stos
cmp
adc
inc
fild
out
sbb
arpl
dec
dec
sub
loope
cmc
lods
lods
ins
cmp
mov
shr
lock
fld
pushf
xor
jne
pusha
jbe
mov
loope
push
sub
fmul
lea
sub
out
dec
pop
mov
lods
mov
cli
(bad)
(bad)
jmp
pushf
sub
add
inc
dec
inc
outs
xchg
repz
add
mov
nop
cmc
mov
push
mov
retf
inc
aas
jns
push
mov
and
test
icebp
xlat
call
add
in
cmp
mov
stos
enter
outs
push
in
loope
std
pop
cmp
nop
pop
(bad)
jns
and
or
sbb
or
inc
sbb
ss
out
pop
lahf
ins
cmovnp
outs
mov
mov
push
sbb
cmp
enter
sub
stos
pop
out
xor
out
cmp
xlat
mov
add
pop
inc
cmp
inc
jmp
push
loop
jne
mov
pop
lods
(bad)
sti
cmps
test
sti
or
jg
in
ror
(bad)
iret
psllq
ins
test
inc
std
sub
retf
icebp
fimul
or
push
ds
adc
retf
sbb
jmp
cmp
cmp
xchg
xchg
lods
mov
mov
std
jl
loope
stc
inc
scas
mov
xor
mov
or
jmp
xchg
lock
cld
push
jg
jb
js
push
sbb
pop
mov
add
add
mov
inc
add
call
imul
mov
out
xor
and
jnp
cmps
push
pop
cmp
mov
adc
sar
and
mov
or
ins
jo
addr16
jecxz
push
mov
fs
mov
in
les
cmp
pop
scas
jo
mov
pushf
int
push
xor
cmp
push
mov
sub
in
xor
inc
int3
dec
cdq
pop
push
mov
fcomp
pop
and
xlat
inc
push
jl
sub
mov
ror
push
mov
aas
inc
lahf
enter
push
pop
iret
or
rcl
rcr
xchg
(bad)
test
ss
cmp
or
xor
cmp
stc
push
xchg
sbb
and
fidiv
shl
icebp
mov
xchg
jmp
pop
cmp
ds
or
and
call
inc
and
xchg
test
cmp
shl
dec
mov
jecxz
fisttp
call
or
xchg
jns
xchg
pushf
jno
add
adc
or
cmp
cmp
cmp
cdq
and
mov
iret
pop
setl
dec
pushf
sub
mov
cmc
or
jge
aaa
jp
nop
or
cdq
cmps
stos
(bad)
cmp
out
xchg
adc
dec
sub
inc
adc
dec
dec
adc
(bad)
in
cwde
cmp
xor
xchg
iret
mov
movs
mov
lds
xchg
pop
push
cmc
jmp
or
and
jae
sbb
lea
mov
mov
stc
mov
add
xor
(bad)
mov
rcl
or
scas
loop
and
mov
stos
loope
jae
(bad)
popa
and
pop
xchg
inc
or
and
adc
or
adc
jle
inc
dec
test
jo
sbb
mov
xor
pop
inc
pushf
int3
cmp
movlps
mov
hlt
pop
outs
xlat
ds
outs
pop
fsubr
nop
int3
push
jmp
not
cld
jle
cmp
mov
lahf
xor
mov
sub
loopne
mov
add
cmps
fcom
sbb
adc
ds
inc
das
mul
xor
jae
jo
outs
lds
in
adc
mov
mov
out
inc
xor
dec
arpl
popf
imul
ja
stc
sbb
pop
cli
jmp
adc
in
ja
out
lahf
data16
add
dec
xchg
(bad)
mov
xchg
push
mov
mov
mov
push
dec
lods
or
jns
call
add
enter
bound
push
sub
outs
imul
outs
xor
mov
xor
pop
jp
nop
es
cmp
rcr
xchg
inc
lods
push
xchg
fcom
mov
in
xchg
or
into
xchg
rcl
ret
leave
nop
popa
mov
mov
xchg
push
adc
stos
out
and
mov
dec
dec
xor
js
sbb
ja
and
xchg
sbb
jnp
xchg
jo
and
cs
mov
mul
xchg
inc
out
je
test
cmp
fmul
sar
sar
push
test
fcomi
rcl
nop
mov
scas
ins
into
mov
aaa
in
mov
inc
mov
mov
sub
xchg
xlat
and
mov
fwait
ret
in
(bad)
pop
out
nop
jns
clc
outs
push
cld
test
loop
sbb
jecxz
sbb
imul
fidiv
and
ja
or
ins
push
(bad)
push
pop
inc
das
mov
and
and
xchg
xor
xchg
push
stos
sbb
jl
and
push
and
in
or
hlt
cli
push
movs
inc
pop
enter
les
dec
xlat
xchg
cmp
stc
mov
in
xchg
lock
sbb
in
arpl
mov
sar
jmp
ror
test
data16
iret
inc
dec
mov
jbe
jg
movs
push
and
jmp
or
cmp
lds
add
dec
inc
(bad)
mov
pushf
adc
stos
dec
nop
mov
and
mul
xlat
mov
add
cmp
les
shl
mov
push
inc
adc
xor
or
push
ss
pop
jo
loopne
mov
mov
dec
out
jecxz
mov
cmps
stc
out
or
scas
idiv
sar
sub
outs
xor
iret
dec
adc
fbstp
int3
or
lock
or
icebp
xlat
scas
cmp
test
add
gs
jl
call
mov
fucomi
and
bound
pop
fld
xchg
add
adc
arpl
std
xchg
or
sub
xchg
pop
jl
adc
mov
jns
sub
and
inc
add
sar
pop
sub
fimul
cmc
mov
adc
ror
mov
outs
outs
fcomi
sub
cli
jmp
fwait
jg
mov
mov
ins
jle
int
dec
xchg
pop
mov
and
and
call
cmps
scas
mov
aad
inc
xchg
ffreep
mov
loop
das
jp
jns
mov
adc
push
leave
cmp
mov
ins
aaa
enter
in
xor
outs
ins
mov
data16
pop
xchg
dec
xchg
jp
jne
sub
mov
mov
clc
lea
dec
adc
pop
ins
sub
push
daa
retf
das
sub
es
(bad)
and
pop
jmp
out
sbb
push
push
daa
clc
aaa
xchg
mov
fst
mov
mov
outs
cmps
xor
xor
in
pop
sbb
hlt
xchg
imul
stos
and
inc
rcr
cld
jae
in
outs
ret
movs
sbb
xor
(bad)
mov
mov
pop
jae
outs
stc
mov
ins
mov
jle
xor
push
call
outs
cs
lods
data16
(bad)
ja
je
ds
or
(bad)
mov
inc
jo
add
fisubr
pop
pop
xchg
sbb
(bad)
fisttp
cwde
mov
or
retf
jle
sub
das
scas
xchg
hlt
in
cdq
ret
dec
daa
mov
adc
ss
retf
ret
or
xor
push
stos
or
xor
aad
stc
daa
pop
mov
xor
sbb
push
test
out
or
push
sub
jle
and
pop
xchg
or
mov
fld
je
cmp
cmp
ja
mov
jo
cli
jbe
aam
popa
mov
nop
je
mov
in
mov
pop
mov
jmp
popf
(bad)
pop
mov
sar
hlt
sub
dec
pop
movs
popa
addr16
sti
loop
mov
sbb
jmp
sar
xchg
cmp
adc
repz
daa
jae
daa
test
xchg
popf
adc
jle
imul
xchg
push
lods
dec
jge
adc
mov
call
vrsqrtss
movs
add
mov
cdq
iret
xchg
scas
into
popa
xchg
jg
psllq
test
div
retf
pop
cdq
sti
push
push
jns
or
pop
rcr
jg
popf
sbb
and
xor
jne
mov
jno
or
xor
push
jp
cmps
test
pop
sub
dec
test
lods
xchg
sub
jmp
movs
cmc
inc
pop
xchg
mov
mov
mov
in
cmp
movs
js
jnp
xor
test
sub
dec
adc
mov
dec
arpl
jl
cs
daa
mov
mov
ror
movs
add
pusha
sti
shl
mov
xchg
ror
inc
iret
jns
pop
jns
mov
sub
jb
fwait
cli
sub
or
stc
lahf
dec
ret
loope
dec
or
sub
outs
arpl
xchg
enter
cmp
call
ffree
ror
and
ins
lea
dec
(bad)
push
ss
jb
stos
xchg
pop
mov
fsubr
adc
jl
add
cmp
mov
(bad)
sub
or
mov
aam
xchg
ret
xor
(bad)
inc
cmc
ins
mov
pushf
call
mov
push
into
pop
jns
arpl
icebp
enter
test
add
mov
mov
fwait
(bad)
cmp
xor
cwde
ffreep
rol
sbb
mov
jne
arpl
sub
mov
movs
fldcw
(bad)
pushf
(bad)
xchg
js
(bad)
fdiv
adc
sbb
sbb
cmp
adc
movs
mul
(bad)
(bad)
sub
xor
cmp
or
aad
jo
inc
push
int
push
jmp
pop
pop
inc
and
jp
in
mov
pop
cmp
cmp
jg
cmc
lea
sbb
push
ss
cmps
jmp
lock
fadd
mov
cmp
stc
inc
shr
ret
jmp
inc
xor
cld
mov
adc
cld
pop
jne
push
mov
sbb
imul
add
jo
xlat
movs
call
dec
inc
stos
fdiv
js
mov
push
fstp
ds
cmp
or
push
jmp
xor
pop
mov
fcmove
sub
lods
adc
pop
adc
fimul
sbb
jno
add
gs
adc
mov
xchg
(bad)
mov
jnp
sti
loop
adc
or
adc
xchg
cmps
les
dec
sar
mov
push
pop
shr
cwde
inc
fstp
nop
cmp
rol
cmc
in
dec
dec
adc
mov
in
push
loope
into
scas
push
retf
mov
xchg
js
int3
xor
neg
sahf
mov
retf
or
cmp
in
mov
loop
sub
jp
jmp
lock
outs
push
jl
rcr
push
adc
ins
dec
(bad)
xor
rol
push
cs
xchg
lods
test
out
adc
fnsave
retf
mov
(bad)
inc
mov
cmps
mov
cmp
stos
mov
mov
xchg
fidiv
daa
jg
xchg
mov
popa
pop
(bad)
cmp
xchg
out
push
test
iret
mov
sbb
jns
or
fucomip
and
fld
mov
rol
cmc
inc
and
xchg
pop
jbe
or
retf
and
fistp
and
mov
mov
mov
push
sub
adc
adc
repz
inc
adc
popf
cdq
cdq
jp
ret
(bad)
cli
push
and
lods
inc
push
into
cs
adc
cmp
jns
and
dec
mov
daa
and
ins
jne
and
pop
sbb
(bad)
inc
lahf
fst
jne
push
data16
int3
xor
iret
repnz
jmp
stos
outs
xchg
imul
shl
into
mov
xor
push
sub
popa
jle
dec
dec
jno
rcr
xor
sbb
cmp
scas
and
shr
push
mov
std
cwde
cmc
and
jno
out
and
dec
les
mov
cs
xchg
cdq
add
es
xor
fistp
lahf
push
cmp
stos
cmp
ficomp
dec
icebp
addr16
lahf
loope
pop
mov
(bad)
bnd
ins
push
les
pop
test
mov
shl
clc
cmp
xchg
fild
xlat
sub
pop
inc
sar
mov
call
imul
inc
push
mov
popf
mov
xor
add
in
movs
jno
loopne
sti
mov
mov
pushf
adc
fcmovbe
ret
mov
cmps
popa
in
fstp
sub
cmps
(bad)
outs
movs
sub
sub
mov
pop
xchg
pushf
iret
mov
and
mov
lahf
aaa
nop
icebp
fmul
xchg
test
dec
and
jg
cmc
loop
fist
ja
xchg
lea
retf
sahf
jo
pop
xchg
ins
sbb
and
imul
mov
(bad)
jnp
ret
jmp
push
push
cmps
(bad)
in
pop
aad
jg
jmp
retf
addr16
loop
mov
test
sti
packsswb
fwait
ds
pop
mov
(bad)
aad
cmp
es
pop
in
fcomp
sbb
dec
jnp
fcom
out
xchg
mov
rcl
repnz
ins
in
leave
push
lahf
sub
jmp
retf
add
inc
lods
(bad)
mov
std
jg
jge
fnstcw
dec
mov
lock
pop
hlt
stos
push
icebp
push
sbb
sbb
cmps
cmp
int
stos
(bad)
cmp
dec
aad
loop
mov
rcr
xor
jb
loop
add
int
outs
xchg
push
jb
adc
inc
(bad)
pushf
dec
xor
mov
lahf
jmp
sub
add
call
fsub
inc
hlt
xchg
xor
add
sbb
and
ins
mov
and
fadd
and
pop
xlat
mov
test
or
dec
fs
mov
dec
dec
jno
or
mov
cdq
inc
cli
imul
inc
rcr
movs
popa
(bad)
mov
popa
mov
dec
sub
lods
lea
mov
loop
jns
stos
fcom
sbb
lock
(bad)
xchg
or
outs
cmp
(bad)
in
pop
lock
dec
dec
pop
or
mov
es
mov
aam
jne
xchg
ds
sahf
jbe
nop
test
push
mov
cwde
push
sbb
jo
aam
xor
xor
jo
xor
dec
xchg
jb
test
daa
cmp
pusha
mov
pop
lds
push
mov
xchg
or
cmps
or
mov
push
jmp
imul
pop
stos
imul
jns
(bad)
int
inc
mov
dec
not
fcom
fwait
pop
sub
push
push
add
cmps
cmp
cld
dec
and
repz
pop
cmp
jp
daa
push
pop
call
fisub
xchg
dec
or
add
xchg
les
iret
out
setl
mov
pop
ret
cmp
scas
(bad)
out
(bad)
mov
sbb
test
xchg
jg
sbb
icebp
and
cmp
pop
aam
neg
inc
inc
sub
jecxz
in
cmp
jl
jbe
jbe
lock
inc
imul
std
dec
nop
add
repnz
dec
push
into
js
inc
mov
jne
sti
dec
outs
popf
aad
jbe
pusha
lahf
mov
pop
out
mov
jmp
adc
mov
mov
pushf
fcomp
push
cmc
jg
push
or
mov
push
dec
retf
into
cmp
sub
(bad)
daa
cmp
out
cmp
test
mov
xchg
lahf
pushfw
dec
(bad)
add
ror
mov
sbb
test
popa
jne
imul
mov
fwait
pop
push
jmp
fisttp
aaa
nop
xchg
and
ja
xor
call
pop
push
lods
in
enter
sub
imul
aaa
jp
mov
rcl
dec
hlt
pop
std
nop
leave
push
movs
fadd
xchg
das
add
data16
repnz
sub
push
out
add
dec
dec
mov
sbb
push
sub
imul
adc
aad
dec
test
aam
fnstenv
pop
xchg
ds
pop
fist
cmps
popa
aad
aas
daa
fs
pushf
mov
mov
sbb
dec
test
idiv
mov
mov
xchg
mov
mov
loopne
outs
dec
add
jle
arpl
test
loope
into
and
cmp
and
adc
popf
loope
out
lods
pop
push
adc
sub
sbb
imul
movaps
rol
aaa
lock
leave
xchg
fwait
xchg
test
popf
loope
ret
or
add
imul
push
add
sbb
mov
dec
fsubrp
(bad)
call
dec
in
mov
pusha
in
xor
cli
and
dec
inc
cld
jbe
and
arpl
stc
lods
repz
jmp
add
sbb
xchg
jae
sub
imul
ins
mov
lock
and
test
(bad)
ins
imul
aad
pop
xchg
cwde
lds
mov
xchg
push
mov
scas
nop
mov
push
adc
cmps
inc
inc
sub
or
shl
(bad)
and
(bad)
cli
inc
dec
shr
xchg
pop
sbb
ret
test
mov
or
adc
fs
mov
out
int3
sar
outs
in
jne
sbb
and
push
inc
aaa
movs
inc
cmps
out
test
ss
lods
ins
and
cmp
inc
mov
dec
xchg
mov
stos
sub
dec
sbb
mov
mov
mov
imul
inc
bound
out
ret
mov
aad
jl
xor
or
fsubr
cmc
mov
fwait
jmp
pop
ins
cld
push
xchg
push
xchg
test
out
or
xor
in
and
mov
mov
scas
shr
fdivrp
pop
sbb
loope
(bad)
push
pop
pop
inc
fcom
test
xor
inc
fldenv
xchg
jecxz
dec
int3
lock
in
mov
dec
lahf
stos
scas
cmp
mov
(bad)
loopne
mov
dec
jno
fisttp
or
mov
sub
and
repnz
shl
inc
mov
push
jp
mov
mov
out
pop
sub
cmp
sub
sub
push
push
pushf
and
ins
lods
sbb
(bad)
mov
pop
arpl
pop
mov
out
mov
sub
sub
aam
mov
xor
pop
retf
and
mov
test
sbb
mov
dec
jl
xchg
mov
mov
and
shl
sti
mov
jle
arpl
popf
xchg
repnz
jmp
sbb
ins
mov
xor
daa
dec
hlt
pop
test
sahf
lea
shl
lods
test
ret
inc
sbb
dec
sbb
dec
pop
xchg
in
xchg
or
xchg
add
gs
fmul
xchg
int3
jecxz
mov
inc
cmp
push
je
pusha
ret
rol
xor
jg
mov
cmps
jo
sbb
imul
cmp
arpl
cmps
mov
mov
ror
inc
(bad)
into
aas
sbb
add
hlt
movs
fnstenv
and
pop
push
inc
or
test
adc
and
or
std
mov
cmps
fsub
jno
mov
push
enter
add
mov
cwde
aas
icebp
pushf
ins
loope
shr
das
inc
add
loope
push
and
mov
sbb
sub
lock
inc
addr16
pop
idiv
addr16
jp
jecxz
les
jecxz
mov
mov
inc
push
lahf
sahf
cmps
mov
push
(bad)
neg
out
cmp
dec
mov
data16
unpckhps
xchg
ds
(bad)
jae
pop
or
push
ins
ds
inc
or
iret
jns
jns
add
icebp
mov
mov
sub
call
into
out
daa
xchg
or
inc
retf
leave
dec
cmps
mov
push
pop
mov
and
jo
sbb
cwde
dec
xchg
bnd
cmps
or
push
mov
ret
cmp
and
stc
hlt
mov
adc
jbe
je
ss
mov
push
mov
scas
test
dec
in
cmp
mov
jns
mov
mov
in
popf
push
mov
inc
mov
repz
ret
push
push
xor
or
test
and
cmp
aam
aas
out
xlat
jecxz
outs
bound
ror
lock
rol
adc
mov
push
xchg
push
mov
sbb
xor
retf
jp
mov
add
data16
std
mov
xor
neg
and
inc
std
add
gs
clc
jecxz
dec
mov
mov
fs
fbld
xor
retf
or
cld
add
loope
xor
test
test
jno
dec
ja
and
sub
lods
or
jge
pop
popa
cmps
bound
and
or
adc
cmp
adc
retf
adc
test
fisttp
push
test
adc
nop
pop
nop
movs
jmp
cmp
mov
push
xchg
sbb
pop
call
inc
outs
cmp
mov
pusha
dec
pop
cdq
fist
xchg
jns
in
fcomp
sbb
popa
sub
clc
add
push
lds
fs
test
and
inc
add
gs
outs
dec
add
ja
aas
cmp
or
or
icebp
push
mov
lock
jnp
fcomp
es
aam
call
inc
mov
mov
in
daa
ins
daa
enter
enter
out
rcr
sar
js
xchg
(bad)
jb
hlt
xchg
mov
iret
and
sub
mov
jae
and
xchg
loope
cs
dec
div
mov
les
cmp
and
xchg
movs
dec
out
push
adc
rol
fnstcw
push
or
inc
les
mov
adc
loope
push
push
xchg
pop
fdiv
xor
sbb
push
cwde
and
inc
sbb
mov
(bad)
pusha
jne
fadd
shr
sbb
aaa
cli
shr
stos
xlat
and
addr16
add
adc
bound
mov
dec
je
mov
lock
mov
xor
(bad)
ror
mov
popa
xlat
sub
loopne
leave
aad
fldcw
dec
(bad)
call
mov
jbe
in
push
imul
mov
repnz
pushf
jno
pushf
pop
fsub
xlat
cdq
pop
push
ret
shl
les
aam
outs
xor
jmp
jl
pop
sbb
sbb
lods
inc
lods
(bad)
cdq
add
movs
push
movs
or
pushf
sbb
lods
cmps
sbb
sub
cdq
mov
cmc
pop
cmc
xor
jl
mov
push
fild
lahf
adc
inc
cmp
mov
sub
test
push
push
mov
mov
mov
push
out
nop
sub
int3
pop
add
imul
pushf
and
mov
jno
out
out
es
lahf
or
scas
cmp
or
xor
cmp
outs
or
jmp
xchg
stos
inc
cmp
mov
cmp
push
pusha
mov
enter
adc
sbb
in
outs
mov
xchg
or
(bad)
les
pushf
aam
adc
sbb
dec
call
(bad)
scas
dec
clc
cli
stos
xchg
mov
lock
pusha
adc
and
aam
jmp
add
(bad)
pop
add
es
lods
dec
outs
xchg
xor
add
sub
stos
ins
xchg
mov
jp
pop
retf
xchg
push
cmp
mov
mov
jo
or
(bad)
scas
ins
xor
inc
stos
or
mov
test
push
imul
mov
leave
imul
(bad)
and
movs
rol
dec
rcr
gs
dec
hlt
icebp
jbe
out
mov
movs
push
sbb
xchg
data16
xor
inc
add
sbb
pop
pop
cmps
adc
or
jnp
and
mov
dec
xchg
call
jnp
pop
bsf
(bad)
and
fidiv
(bad)
xor
push
call
xor
mov
icebp
push
stc
lahf
bound
add
repnz
sub
xlat
int
mov
mov
fiadd
icebp
pusha
loop
jae
out
lods
inc
ds
jecxz
and
jne
lahf
pop
jp
sbb
cmps
inc
(bad)
mov
retf
pop
jle
pop
out
imul
test
mov
je
jg
dec
(bad)
cmp
add
je
mov
je
retf
leave
xchg
stc
movs
stc
fisub
shl
out
push
jo
ss
cli
in
pop
xor
cmps
bound
out
lahf
fisubr
pusha
push
push
mov
mov
push
xchg
scas
arpl
xor
cwde
jbe
imul
hlt
sbb
cmp
push
cmp
pop
ror
xchg
xor
fistp
push
jbe
mov
jg
aaa
das
ja
sub
leave
jl
nop
out
(bad)
push
jmp
sub
cmp
not
xor
adc
push
pop
mov
pop
fmul
out
push
repnz
mov
xor
push
xchg
rol
call
fnstsw
and
push
xor
or
out
lea
adc
(bad)
xchg
cmp
in
bound
jl
call
ins
pop
lea
aaa
aas
mov
mov
push
mov
dec
mov
(bad)
icebp
push
rcr
and
mov
imul
cmp
ficomp
arpl
dec
jmp
adc
xchg
(bad)
aam
aam
inc
pop
jmp
out
arpl
aad
and
neg
shl
leave
xlat
repz
sbb
mov
pop
xor
stc
jbe
xchg
mov
fs
dec
push
int
(bad)
mov
test
div
cmps
or
ret
jnp
cs
jae
jnp
dec
jmp
dec
aaa
or
pop
xchg
mov
sbb
test
mov
jnp
mov
imul
scas
or
sar
jns
imul
add
push
sbb
mov
std
clc
icebp
cs
sar
adc
add
adc
cmp
sbb
js
dec
mov
cdq
popf
push
add
mov
and
sahf
sbb
shl
jle
xchg
sti
dec
jmp
push
out
fmul
mov
mov
pushf
cld
xchg
popf
rol
mov
jg
adc
(bad)
jbe
add
xchg
add
jge
cmp
adc
push
adc
sub
dec
xchg
and
mov
scas
pop
push
pop
mov
sar
rcl
imul
push
ins
push
lods
mov
mov
int
aam
lods
into
mov
jp
aad
inc
sub
test
sbb
sub
in
adc
popf
push
sar
ret
dec
sub
cmp
mov
mov
es
mov
mov
call
bound
add
js
shr
lock
mov
int3
jns
xchg
dec
pop
rcl
pop
push
pop
in
jbe
ins
mov
sbb
aaa
push
jp
pop
cmp
xor
adc
aas
pop
mov
in
sbb
xor
mov
mov
aaa
sti
add
std
shl
pop
sbb
jnp
xchg
das
scas
jle
push
sahf
stos
dec
les
xor
std
adc
xchg
sahf
or
sbb
jmp
xchg
movs
inc
jge
xor
bound
movq
test
lods
ja
sub
icebp
lods
or
pop
clc
add
daa
mov
cmp
ins
shl
mov
jo
jle
js
jle
stos
sar
xchg
movs
dec
arpl
mov
dec
hlt
ror
push
lock
jge
stos
xchg
cmp
das
xchg
js
aaa
or
jge
ja
shr
ss
jle
fwait
ret
pop
inc
in
sti
push
push
cs
xlat
pop
or
shl
mov
arpl
jb
adc
inc
and
and
ror
lea
fsub
push
mov
test
retf
jbe
pop
mov
test
mov
fcomp
mov
pop
test
xor
inc
popa
pop
jmp
mov
fs
pop
or
inc
or
jl
std
cmp
jl
test
aad
pop
sub
(bad)
das
mov
dec
(bad)
imul
dec
cmp
idiv
rol
jnp
fadd
scas
movs
inc
repz
push
dec
inc
ret
sub
mov
mov
aad
in
add
out
daa
cld
in
cmp
and
out
push
mov
cmp
cmps
cmc
and
pop
mov
inc
shl
add
xchg
cmp
xor
cwde
adc
cld
scas
jmp
outs
rol
mov
loope
or
push
stc
dec
sub
xchg
stos
mov
cwde
push
and
repz
fisttp
push
cwde
jno
or
and
test
cwde
adc
pop
jmp
stos
not
cmps
xchg
stos
leave
sub
test
mov
jge
xor
push
sahf
sbb
mov
jno
adc
add
sub
aaa
xor
and
stc
imul
shl
and
repnz
cmps
xchg
pop
test
sub
and
adc
rcl
call
mov
lahf
retf
(bad)
mov
jns
mov
fisttp
inc
mov
(bad)
mov
cmp
sbb
cmp
jl
(bad)
xchg
inc
fadd
pop
mov
cmp
mov
xchg
iret
and
call
pmaddwd
push
sbb
xchg
sbb
mov
movs
push
adc
daa
jge
jns
ds
cmp
inc
mov
or
jo
fcomp
shr
and
(bad)
ds
sub
jl
aam
dec
xor
jmp
je
jmp
out
or
les
sbb
rol
out
lds
cs
push
out
retf
cmp
fcom
or
mov
xchg
mov
adc
xor
hlt
ret
aam
imul
aas
push
xor
sub
mov
mov
test
pop
aas
sub
and
adc
sbb
jecxz
add
ins
xor
div
xchg
add
adc
mov
sub
pop
push
loope
jo
push
mov
push
aad
pop
fimul
std
or
rcr
shl
xchg
jmp
inc
sub
mov
int3
into
icebp
lea
mov
dec
data16
aam
add
adc
dec
fisttp
rdmsr
jmp
push
mov
test
in
sbb
dec
cdq
popa
adc
gs
fsub
cmp
pop
adc
inc
dec
jae
mov
push
mov
ds
add
xlat
mov
mov
jb
sub
sub
inc
adc
ins
retf
add
cmp
xchg
xchg
push
test
retf
sbb
xor
(bad)
dec
cmps
loop
rcr
mov
enter
mov
pop
mov
and
out
nop
sti
push
dec
cmp
arpl
or
test
imul
sti
scas
sub
push
std
inc
cmp
(bad)
mov
mov
(bad)
fisttp
push
and
xchg
(bad)
lods
dec
out
daa
add
mov
rcl
sub
es
jle
mov
and
js
adc
frstor
fcom
pop
add
sbb
inc
shl
push
pushf
and
pop
unpckhps
aad
mov
fistp
ret
cmc
(bad)
jmp
ja
pop
and
arpl
jp
lods
add
pop
mov
(bad)
dec
outs
movs
(bad)
and
dec
dec
jmp
movs
fdiv
in
xchg
sbb
test
std
mov
lock
xor
and
push
in
and
movs
xor
cmp
add
push
hlt
dec
(bad)
xor
jb
inc
js
push
and
and
adc
(bad)
rcr
adc
fistp
mov
test
push
mov
daa
jg
pop
adc
dec
out
xor
xor
push
mov
mov
sbb
out
retf
fimul
out
enter
repnz
lds
mov
mov
out
mov
push
xchg
pusha
pop
push
repnz
lods
jg
jo
mov
mov
sbb
shl
mov
fdivr
and
mov
test
and
shl
fild
aam
stos
or
popa
sbb
adc
sbb
(bad)
sbb
mov
mov
div
cmps
adc
jae
popf
add
mov
inc
mov
mov
jg
pop
shl
mov
xchg
adc
cmp
dec
cdq
inc
popf
popf
push
mov
dec
xor
add
setbe
in
das
(bad)
fst
sub
ja
inc
jecxz
xchg
dec
mov
xchg
stc
mov
sub
outs
jmp
shl
mov
nop
fidiv
and
mov
pusha
sbb
adc
popa
lods
pop
jmp
or
inc
mov
cmp
jmp
dec
mov
lahf
cmc
push
cmps
out
pop
lods
sbb
pop
pusha
jl
pop
loope
mov
jno
jecxz
xchg
dec
inc
call
cmp
and
xchg
sbb
ja
push
mov
int
icebp
add
and
pushf
nop
pop
pop
xor
push
call
push
ds
add
push
jnp
in
hlt
in
push
cmp
pushf
jns
mov
idiv
cmp
je
es
xchg
cwde
ins
sti
dec
cwde
mov
test
mov
nop
(bad)
retf
rcr
nop
(bad)
stc
sahf
bound
push
mov
scas
mov
cmps
in
movs
push
push
js
fadd
test
stos
outs
sahf
adc
out
jns
xchg
daa
jns
sbb
ret
xor
pop
sbb
xchg
out
xchg
les
dec
fxam
dec
cwde
scas
out
cmp
daa
adc
dec
adc
mov
sub
loopne
dec
push
pop
push
lahf
clc
mov
jp
cdq
aas
call
cwde
into
or
(bad)
sub
or
fist
clc
out
jl
es
mov
mov
rcl
mov
cdq
enter
sti
loope
cmp
xchg
sbb
imul
faddp
xchg
xchg
sub
jno
mov
pop
bound
mov
or
xchg
dec
shr
inc
shl
inc
add
dec
jo
clc
mov
and
jg
mov
pop
jle
inc
and
test
xchg
jno
jecxz
fs
es
(bad)
pushf
jle
popf
repnz
int
pop
dec
push
out
(bad)
cmp
mov
cld
sub
sbb
cld
xlat
push
gs
mov
cmp
push
push
aaa
mov
int3
ds
jae
mov
mov
push
or
aas
sub
out
xchg
aam
(bad)
mov
mov
js
jecxz
sub
push
loop
fild
aad
fadd
(bad)
cmp
rol
adc
xchg
and
mov
mov
push
call
mov
fdiv
popa
fist
and
int
dec
inc
movs
mov
daa
outs
mov
dec
sti
fist
ins
popf
jo
(bad)
lods
or
aas
sbb
cmp
fs
mov
popf
xor
pusha
scas
lds
adc
xchg
test
mov
imul
mov
inc
into
dec
add
inc
push
in
loope
fiadd
adc
rol
or
xor
popa
sbb
ja
add
mov
je
iret
mov
cmp
sbb
movs
je
(bad)
sti
outs
push
mov
xchg
ins
adc
jmp
(bad)
lds
dec
and
sub
popf
stos
xor
xchg
dec
push
lods
loope
xchg
loope
data16
popf
xor
aas
push
sbb
aaa
adc
push
cwde
inc
inc
stc
js
stos
xchg
enter
cmps
xor
adc
bound
imul
out
dec
aam
icebp
addr16
mov
jg
repz
dec
daa
xchg
(bad)
(bad)
jae
enter
idiv
push
js
retf
push
mov
push
mov
ds
sub
retf
popf
daa
ja
dec
cmps
shl
pop
mov
ret
scas
mov
enter
add
sub
ret
jno
lods
fucom
mov
js
fucomp
push
add
pusha
stos
pop
retf
sub
mov
mov
(bad)
jg
jno
adc
leave
(bad)
jle
pop
ja
pop
cmp
cld
sub
out
(bad)
add
add
ret
sahf
movs
call
(bad)
std
out
inc
dec
imul
add
add
mov
enter
repnz
iret
adc
inc
lea
push
mov
xor
jg
cmps
pop
rol
cld
clc
push
dec
mov
mov
outs
cmp
or
clc
add
jmp
xor
xor
jno
dec
push
pop
dec
push
in
outs
pop
xchg
push
in
and
ins
ins
clc
adc
loop
add
vmovshdup
push
and
mov
mov
add
fs
jnp
xchg
adc
add
ficom
xchg
cdq
jae
add
ret
imul
(bad)
fmul
xor
sub
jge
pop
mov
int3
sbb
push
mov
mov
cld
push
sbb
(bad)
pop
aam
lds
rcr
fisub
jne
jns
and
in
pop
in
sbb
mov
sub
cmps
dec
call
(bad)
dec
outs
add
cmp
sbb
push
and
rcr
jo
(bad)
in
xor
leave
lahf
sbb
nop
ret
jb
mov
xor
dec
ret
pop
in
mov
pusha
sub
xchg
dec
scas
push
xchg
lock
add
jle
inc
xchg
xchg
out
add
mov
mov
icebp
ins
sbb
stos
mov
jge
lds
stos
cmc
sub
xchg
mov
nop
mov
and
adc
dec
outs
dec
mov
pop
fwait
addr16
sub
in
daa
jmp
into
popf
sub
fidiv
sbb
sub
into
inc
or
or
dec
mov
ret
adc
add
pusha
fdiv
pop
mov
clc
or
xlat
add
mov
sbb
mov
mov
aas
mov
jp
fild
mov
jnp
cmp
(bad)
jecxz
push
push
mov
add
push
add
mov
ins
sub
(bad)
jg
lahf
dec
ds
(bad)
cld
jne
xchg
and
(bad)
pop
cmp
pop
outs
mov
(bad)
mov
jge
inc
mov
enter
or
adc
popf
es
out
(bad)
hlt
sub
(bad)
adc
test
pop
outs
repnz
cmc
dec
xchg
(bad)
sbb
adc
outs
repnz
dec
mov
ins
nop
mov
sbb
ret
fild
jnp
and
pop
not
dec
ds
xor
push
aas
pusha
mov
push
or
jge
sub
mov
xchg
jbe
xor
dec
aas
cld
add
in
mov
mov
push
sbb
add
loope
mov
dec
imul
push
jge
jle
imul
daa
imul
lahf
or
sub
pop
lock
add
jmp
add
xlat
push
xchg
pop
mov
push
iret
popa
jp
sub
lods
push
idiv
mov
mov
outs
push
push
xchg
jmp
out
push
jne
dec
cld
mov
adc
out
xor
jge
iret
neg
dec
mov
out
cmc
mov
dec
loopne
fimul
mov
adc
mov
lahf
out
ja
or
mov
mov
inc
jp
dec
jbe
scas
xor
(bad)
push
or
sbb
inc
mov
lea
mov
add
imul
loop
push
sahf
out
pop
fsubr
scas
xchg
lea
pop
out
ja
and
inc
fucom
mov
jge
inc
mov
jne
and
mov
adc
adc
pop
fwait
push
mov
repnz
(bad)
or
cmps
into
jle
xchg
outs
xchg
add
fistp
adc
sub
sub
test
cmp
add
cmp
aam
push
add
fwait
(bad)
sub
ins
push
or
or
sbb
retf
sar
sub
mov
push
cs
or
mov
add
movs
jmp
sbb
or
cmp
inc
cmp
sahf
out
dec
or
pop
mov
std
retf
sbb
icebp
ins
repz
dec
fisttp
in
lods
xchg
xlat
les
add
jae
pop
pop
test
ss
mov
shr
push
out
in
imul
mov
packuswb
test
loopne
mov
dec
jnp
mov
rcl
xor
sti
loop
gs
ins
inc
loop
cs
into
cli
mov
fidivr
push
jmp
mov
dec
adc
pushf
sbb
jg
mov
cmp
test
mov
mov
fcomi
nop
movs
retf
sub
hlt
pusha
imul
lods
test
jl
pop
ret
dec
sar
push
push
std
retf
or
jg
fmul
ds
idiv
movs
jmp
fwait
loope
test
pop
xchg
and
inc
aas
pop
sbb
pop
sar
imul
add
call
dec
push
mov
cli
xchg
sahf
stos
(bad)
loop
loop
dec
ins
push
imul
xor
mov
ds
lods
push
std
inc
adc
inc
xchg
pop
inc
push
stc
mov
inc
sub
and
iret
push
out
sub
loopne
(bad)
push
adc
dec
push
out
jne
shl
(bad)
lock
pcmpeqb
jg
mov
inc
ds
mov
cli
inc
fsubr
sbb
jg
xor
xchg
shl
cdq
inc
aaa
push
ud1
mov
adc
std
bswap
adc
out
cdq
inc
adc
lds
or
(bad)
mov
hlt
fucom
ror
test
xchg
sub
and
and
fisub
pop
js
cdq
sbb
mov
inc
fisttp
push
jecxz
lahf
mov
push
adc
mov
loop
cli
xor
daa
mov
imul
jmp
lock
sbb
lods
pop
pop
xchg
jo
shl
and
or
sahf
iretw
mov
sub
sahf
mov
int3
or
push
ficomp
ret
ins
sbb
adc
inc
mov
mov
imul
into
inc
cwde
imul
(bad)
inc
pop
bound
inc
dec
out
bound
xchg
(bad)
mov
push
(bad)
stos
out
iret
pop
lea
mov
push
mov
inc
sbb
mov
pusha
mov
xor
aad
iret
and
out
test
addr16
mov
lds
loopne
jle
add
fdivr
xlat
xchg
pop
sub
mov
cmp
jb
fimul
(bad)
fcomp
les
cmps
ins
out
stos
push
call
stos
pop
test
add
pop
cmp
or
pushf
movs
sbb
fcmovnu
gs
push
mov
leave
mov
popf
ret
adc
aam
mov
cmps
or
gs
imul
repz
in
jbe
mov
popa
mov
in
xchg
(bad)
fisttp
add
mov
jg
mov
and
sub
hlt
pushw
std
ins
lds
mov
add
jecxz
stos
push
or
nop
mov
xor
pop
int3
cs
mov
out
fimul
mov
mov
enter
sub
lods
daa
aam
(bad)
and
(bad)
lahf
push
pusha
stos
or
push
sbb
(bad)
mov
mov
sub
stos
adc
fld
inc
mov
push
loop
adc
sbb
push
call
out
mov
lods
pop
std
inc
jbe
pop
sbb
out
sbb
sbb
add
and
cmp
or
jle
dec
test
jbe
popf
sub
inc
push
dec
dec
pusha
xor
jp
fist
movs
test
xchg
or
out
pop
movs
repz
cld
mov
sbb
add
add
xchg
xchg
mov
fld
imul
or
fs
cmp
push
adc
iret
sub
(bad)
or
lods
push
mov
and
ret
in
(bad)
cld
cdq
nop
cs
icebp
and
fs
mov
push
dec
div
sbb
out
loop
xor
call
pop
mov
xor
inc
movs
inc
or
lods
lds
or
pusha
ror
scas
mov
mov
fwait
inc
aaa
js
mov
icebp
sub
inc
jno
fs
dec
iret
add
push
fcomp
aam
push
mov
fcomp
pop
or
movs
push
fild
dec
int3
jmp
lea
(bad)
dec
in
ins
cmps
jmp
cld
adc
jp
add
xchg
xchg
push
jecxz
lds
stos
fst
rcr
test
loop
rol
scas
pop
leave
mov
sub
repz
fcom
dec
fistp
push
push
lahf
pop
dec
fwait
pop
cwde
mov
push
lds
dec
xchg
pop
push
sub
ret
and
mov
div
pop
push
sbb
lods
fld
sbb
fcomp
jb
mov
cmps
mov
nop
jmp
bound
scas
sub
xchg
push
inc
sar
jmp
mov
movs
ja
fcom
das
xlat
sub
mov
movs
leave
mov
mov
sbb
aaa
adc
and
xchg
daa
pusha
sbb
and
(bad)
mov
xor
lds
add
mov
jmp
push
test
mov
fdivr
inc
mov
stos
mov
js
push
pop
fstp
vpmacssww
cmp
jae
or
xor
jp
aam
jg
fldcw
call
into
add
cld
mov
popa
and
inc
jmp
into
dec
dec
push
push
or
fcom
mov
pop
inc
daa
xor
cdq
stc
pop
mov
(bad)
xlat
outs
pop
lahf
and
jge
mov
les
sbb
std
(bad)
sub
aas
sahf
es
jl
retf
sbb
adc
mov
cmp
and
push
inc
ret
adc
adc
int
mov
sahf
call
jg
dec
add
fwait
adc
lods
jp
xchg
ss
ror
xchg
call
cli
xlat
lock
xchg
pop
jecxz
push
ins
sub
(bad)
and
pop
mov
mov
jecxz
xchg
daa
pop
fs
xchg
add
(bad)
cmp
rcr
out
mov
cmp
mov
push
mov
retf
dec
jo
out
xlat
mov
in
inc
je
xchg
inc
cmp
inc
or
mov
mov
out
dec
out
mov
adc
add
and
adc
or
jmp
xor
dec
ret
inc
adc
dec
ret
push
fild
je
xchg
nop
cmps
mov
imul
sbb
popf
xchg
xor
push
cmp
aaa
scas
rcr
sahf
inc
jne
pop
out
pop
aas
jge
hlt
stos
xchg
mov
lock
adc
lock
cmp
test
gs
pop
mov
mov
addr16
in
jnp
pop
(bad)
adc
out
out
mov
div
inc
dec
and
xchg
adc
xchg
fwait
xor
inc
je
std
jp
jnp
pop
sbb
hlt
movs
ret
nop
stos
dec
or
mov
mov
fnstenv
(bad)
sti
add
jno
js
jbe
and
sbb
dec
es
rcl
push
push
xor
add
sub
and
jno
lock
fs
sbb
popf
popa
and
mov
in
xchg
test
data16
jmp
movs
aad
mov
push
lods
and
push
dec
js
pop
cmp
je
aas
js
push
sbb
pop
aad
movlps
gs
out
dec
aaa
and
stos
dec
add
push
push
inc
(bad)
sub
jns
jno
mov
int
add
lods
push
loope
sbb
pop
inc
lock
jl
or
dec
lods
mov
jecxz
mov
dec
jl
mov
mov
(bad)
les
or
(bad)
stos
mov
dec
pop
sub
xor
jae
fistp
push
fiadd
mov
xor
push
sbb
inc
and
mov
rcl
mov
adc
das
(bad)
jmp
test
daa
add
jp
call
xchg
xlat
xlat
push
adc
rcl
fidivr
fcomp
shl
bound
adc
clc
int
fld
or
pushw
cli
iret
mov
iret
lock
mov
aam
sub
call
mov
push
push
call
repz
cld
cmps
mov
dec
jmp
fwait
pusha
jmp
ins
in
dec
jecxz
cwde
adc
lock
rcr
lods
mov
mul
mov
mov
add
sub
out
out
cmc
jp
cmp
and
and
pop
in
pop
shr
movsx
pop
xchg
sahf
test
inc
push
xchg
leave
xor
mov
push
outs
xor
pop
js
mov
add
(bad)
sahf
sbb
stos
ds
mov
lahf
fnsave
cld
cmp
xor
pop
xlat
pop
adc
ds
bound
(bad)
fst
sub
loop
push
out
pop
mov
xchg
and
pop
out
aad
jb
(bad)
popa
sub
repz
mov
jg
lds
or
inc
cmps
sbb
jg
cdq
add
sbb
outs
xchg
mov
jmp
ret
jne
test
shr
push
push
dec
push
fst
pop
sub
icebp
movs
sub
ds
in
and
push
sub
xchg
pop
std
js
push
adc
sbb
shl
and
mov
fadd
sbb
shr
pop
or
nop
ss
mov
shr
enter
sbb
mov
stos
mov
jo
jae
popa
retf
xchg
xlat
push
jge
cmp
in
sbb
sub
push
ret
scas
sub
into
mov
ds
test
jns
jae
push
loop
sbb
test
jmp
into
adc
call
adc
adc
pop
aad
rol
ret
repnz
sbb
xchg
push
stos
dec
gs
idiv
iret
mov
xor
sub
and
int3
adc
jo
cmp
pop
in
stos
(bad)
leave
dec
pop
out
sahf
int3
cmps
mov
jno
jp
gs
movs
and
lods
cmp
icebp
shr
imul
aad
jno
fdivr
pop
aas
or
jo
sbb
push
mov
sub
das
fistp
xchg
jbe
jg
fwait
lock
mov
(bad)
sbb
pop
int3
mov
mov
and
sti
jmp
inc
ds
push
pushf
xor
test
out
xchg
in
or
lahf
pop
and
clc
lods
fisubr
imul
xchg
add
mov
mov
leave
das
jp
dec
fwait
addr16
cdq
mov
cmp
loope
pop
adc
in
lods
inc
data16
jb
pop
cdq
inc
jo
jle
ds
test
add
icebp
loop
out
and
popf
xchg
retf
int3
inc
mov
ror
std
or
jmp
(bad)
push
test
or
fldcw
or
push
bound
jae
lds
push
movs
xor
hlt
int
repnz
sbb
push
jecxz
jge
mov
add
in
imul
xchg
sub
(bad)
and
push
stos
addr16
cmp
sbb
dec
ds
aad
sub
outs
or
push
jmp
mov
lahf
fbstp
in
jle
out
mov
(bad)
sbb
adc
adc
inc
mov
sub
fisttp
jmp
std
iret
xlat
cmp
(bad)
mov
mov
outs
aaa
lods
test
imul
inc
inc
imul
push
pushf
push
cmps
pop
sbb
ja
jmp
sub
xchg
xchg
(bad)
mov
repz
les
pop
mov
or
push
xor
jb
rcr
fistp
in
dec
adc
jmp
dec
je
clc
rcr
mov
ret
push
icebp
sbb
pop
aam
shl
in
dec
enter
fcom
jo
pop
(bad)
add
mov
repz
imul
and
or
adc
jl
and
clc
lds
sti
cmc
cld
retf
push
(bad)
in
or
rcl
cli
mov
call
loope
test
in
xor
imul
std
cmp
mov
push
stc
cmp
push
mov
inc
hlt
cmps
sahf
sahf
jp
push
xor
(bad)
and
and
xor
out
or
sub
(bad)
mov
push
jecxz
stos
pop
aaa
xchg
cmps
mov
aad
jle
popf
pusha
push
pushf
mov
xchg
(bad)
into
push
or
or
jmp
dec
repz
data16
sti
(bad)
ror
popa
sub
dec
psubsw
cmc
in
cmps
movs
arpl
(bad)
out
sbb
mov
scas
scas
(bad)
jbe
pop
rol
pop
push
shl
inc
xor
aaa
push
fcom
and
jle
fadd
push
mov
pusha
arpl
data16
pop
lds
and
test
in
push
push
xor
jmp
lock
into
or
jo
aam
clc
cwde
scas
(bad)
ins
xchg
inc
aaa
jno
pop
into
lock
inc
add
jg
xchg
cmp
mov
mov
add
adc
adc
push
mov
shr
outs
mov
mov
loop
push
mov
mov
ficomp
pop
xor
xchg
cld
test
pop
or
mov
jae
or
push
pushf
cmp
xchg
add
jae
popf
and
cmps
push
push
ret
sub
sub
mov
jmp
rcr
xchg
shr
(bad)
(bad)
jmp
ret
jge
xor
mov
mov
hlt
cld
test
xlat
mov
pop
pop
(bad)
(bad)
cmp
out
mov
adc
iret
add
mov
or
xor
idiv
in
fadd
mov
bound
shl
add
retf
rol
fld
inc
loop
pop
mov
inc
xchg
dec
sbb
cmp
sub
cdq
jg
icebp
jns
xchg
sub
mov
and
jns
add
mov
pop
jge
arpl
xlat
mov
aaa
dec
cs
sbb
pop
inc
loope
repz
enter
xor
repnz
pusha
pop
mov
push
lds
retf
cwde
(bad)
jae
or
fld
xor
repnz
jp
mov
mov
(bad)
out
pushf
movs
rcr
jno
sbb
repnz
sub
les
jg
cmp
inc
dec
xor
test
adc
adc
cmp
cs
lds
and
pop
add
jns
and
jne
jns
pop
inc
sbb
in
sti
or
inc
pop
les
dec
adc
loope
rcr
and
ffreep
fwait
imul
jne
mov
mov
iret
popf
std
movs
shl
cwde
jmp
out
jle
sbb
and
test
cmc
push
jg
pusha
ret
les
jl
in
xchg
sbb
xchg
scas
dec
and
fadd
dec
test
push
imul
cmp
sbb
nop
cs
lods
(bad)
aam
dec
xor
(bad)
popa
fsub
push
cmp
pusha
stos
pop
xor
cs
mov
setp
and
push
fs
call
sahf
mov
inc
mov
mov
out
rol
aam
sbb
sbb
pop
popa
push
test
push
sub
jno
mov
es
mov
add
dec
push
(bad)
aaa
nop
push
or
xchg
add
out
(bad)
jp
and
nop
sar
out
inc
cmc
(bad)
and
jp
imul
ja
es
(bad)
pop
xchg
jge
jnp
dec
jmp
push
push
jne
shl
add
jae
cld
cmp
xchg
sar
imul
adc
pop
jmp
pop
les
das
nop
fisttp
sub
(bad)
scas
gs
dec
inc
xchg
jbe
push
sub
pop
pop
jmp
ss
add
(bad)
sbb
inc
pop
sub
or
cdq
add
cmps
rcl
fsubr
pushf
movs
call
xchg
std
mov
pop
mov
popa
push
sahf
shl
add
mov
push
into
xor
mov
and
inc
(bad)
xor
inc
mov
pop
fcom
mov
mov
inc
fidivr
and
in
dec
test
push
cli
jmp
and
popf
sar
cmps
lahf
repnz
cdq
jecxz
mov
data16
enter
jge
mov
push
sub
pop
pop
test
or
inc
scas
ja
outs
cmc
pop
outs
(bad)
push
mov
std
xchg
fdiv
mov
movs
nop
sub
inc
sbb
mov
cmp
ins
sbb
loop
(bad)
jae
mov
bnd
pop
stos
or
or
repnz
sub
or
fs
fnstsw
mov
les
into
call
scas
sbb
pop
push
clc
mov
cld
jnp
dec
popa
movs
mov
cwde
addr16
lock
popa
pop
xchg
cmps
mov
jg
adc
sub
jmp
cli
inc
cli
jnp
data16
scas
fild
lods
retf
test
xchg
pop
dec
ins
xchg
fwait
les
lahf
repz
into
cmps
sbb
jo
movs
jle
es
stos
jno
xlat
fucom
push
lahf
push
and
mov
sub
jns
mov
mov
in
ficomp
outs
ret
jbe
int3
shl
xor
cmps
jg
lahf
adc
retf
jnp
inc
xchg
sbb
stc
stos
pop
pop
add
jge
pushf
add
jne
mov
xchg
mov
push
ins
scas
shl
push
dec
clc
ror
je
cdq
adc
push
and
jge
test
add
jne
dec
out
int3
xchg
push
das
retf
push
inc
call
loopne
lods
mov
or
and
call
mov
(bad)
(bad)
into
cmp
push
fld
loopne
jmp
(bad)
cmp
(bad)
cld
cmp
push
xchg
or
xchg
mov
or
sahf
adc
or
ficomp
mov
lock
and
iret
push
add
jae
xchg
aam
les
and
xchg
jp
inc
ficomp
movs
sub
xchg
mov
fsubr
push
mov
push
pop
jmp
nop
outs
leave
nop
dec
stc
inc
ficom
aad
ficomp
ins
enter
aam
rcr
push
fst
hlt
xchg
adc
loope
mov
dec
jg
or
out
jle
xor
push
adc
add
das
call
cdq
mov
fs
fcmovnbe
cmps
shl
xor
mov
jne
(bad)
xor
push
push
ja
sub
aas
pop
aam
mov
popf
sub
sti
and
adc
pusha
xchg
dec
sub
push
stos
popf
jno
xchg
ins
cmp
inc
sti
or
adc
push
adc
rcl
aas
ret
xchg
and
mov
pop
stos
sub
cs
js
stc
imul
fidivr
pop
rcr
movs
imul
popf
cmp
idiv
ja
jecxz
push
pop
cmp
stc
pop
jo
icebp
dec
scas
shr
or
push
lods
xor
mov
fild
mov
fcomp
sbb
pusha
dec
mov
out
out
aam
jb
fstp
inc
outs
mov
sub
inc
out
into
ins
js
jo
lock
dec
inc
(bad)
iret
inc
sub
fld
mov
in
sbb
lods
shr
aam
popf
aam
mov
js
fisttp
lock
ret
sbb
sbb
push
cld
and
push
dec
mov
jno
aas
mov
jb
fs
out
int3
arpl
inc
leave
(bad)
cmc
jl
out
add
in
imul
frstor
pop
sub
push
sub
imul
test
stos
pop
ds
sbb
repz
xlat
retf
fcomp
(bad)
aad
sub
cwde
push
stc
daa
jbe
jle
xor
pushf
cmp
pop
icebp
movs
jmp
adc
xor
ds
mov
imul
out
cmp
pop
sbb
xor
pop
dec
mov
stc
pop
lock
pop
dec
mov
xchg
mov
popf
push
dec
out
test
xor
push
nop/reserved
add
aaa
ror
inc
push
retf
sar
fidivr
mov
std
int3
fimul
push
fmulp
sar
jecxz
push
test
stos
hlt
lea
pop
sub
and
mov
es
sub
(bad)
cmp
lods
lahf
xor
fidiv
inc
inc
mov
jle
xlat
cdq
and
adc
adc
sub
cwde
or
shl
push
cmc
xchg
pop
jp
les
xchg
jp
ror
inc
add
jbe
xchg
xor
call
and
icebp
add
push
fidivr
push
sub
inc
sbb
ror
adc
lods
xchg
add
fmul
push
cmpxchg
and
loopne
sbb
mov
dec
push
retf
js
outs
cmp
add
adc
lods
pop
dec
(bad)
shr
aas
mov
cdq
jge
jns
ror
clc
xchg
pop
xor
or
stos
ins
pop
or
xor
sbb
pushf
pop
jb
inc
inc
pop
cmp
mov
loope
xchg
loopne
jae
ror
inc
sub
pop
mov
xor
std
js
push
neg
push
into
mov
dec
dec
test
gs
(bad)
inc
jb
data16
fisubr
ret
pusha
movs
jb
sbb
out
sub
aaa
jl
cmc
xchg
push
movs
test
mov
ret
fidiv
mov
imul
jecxz
retf
ins
mov
ins
mov
sub
int3
outs
hlt
or
das
popf
(bad)
jns
mov
mov
or
and
pop
shr
inc
mov
add
imul
add
sub
jl
js
stc
movs
loop
add
jge
test
add
add
pop
inc
cli
cwde
je
push
repnz
movs
fdivr
mov
stc
arpl
aas
stos
call
aas
rcl
dec
add
(bad)
(bad)
into
mov
xor
movs
jne
mov
mov
cmp
in
in
(bad)
or
add
mov
aad
xchg
push
cs
jmp
mov
lock
sub
xor
mov
adc
xchg
hlt
inc
arpl
(bad)
rcl
jo
loop
sub
(bad)
mov
jl
call
and
xor
jg
mov
sahf
xlat
add
pop
add
stos
mov
icebp
push
lods
or
adc
mov
mov
xchg
sub
xchg
aad
and
fiadd
fstp
add
sub
movs
pop
cmp
daa
inc
js
cmp
dec
inc
mov
mov
pop
mov
cmp
add
sbb
dec
sub
dec
pop
or
(bad)
mov
inc
mov
mov
cld
lods
int3
scas
mov
in
aas
sar
mov
das
mov
ja
daa
loope
hlt
iret
push
mov
xor
ja
aam
test
sar
out
dec
sub
dec
adc
shr
rcr
pop
mov
pop
(bad)
cld
mov
sub
fs
ret
shl
dec
psubd
inc
test
dec
cdq
sbb
jg
add
jl
mov
pop
mov
cld
out
push
dec
jmp
push
cmp
inc
adc
(bad)
push
fidivr
add
or
xchg
iret
cli
stos
mov
mov
ror
jno
pop
or
ds
daa
inc
or
and
jmp
or
mov
cwde
int
hlt
cmp
cld
xchg
mov
xchg
push
aaa
in
mov
pop
in
xchg
dec
daa
outs
and
js
xor
sahf
inc
mov
mov
mov
inc
repz
xor
jo
and
jmp
mov
mov
xor
and
push
cmp
(bad)
popf
enter
hlt
retf
pop
les
sub
mov
retf
push
out
sbb
inc
call
aas
outs
lods
or
or
lods
xor
pop
mov
stos
sub
das
add
aad
jns
add
adc
rcl
leave
sub
out
sbb
push
repz
add
xchg
lods
repnz
call
pop
xchg
bnd
fcomp
adc
dec
pop
cmp
mov
imul
stos
xlat
dec
sbb
cli
cmp
push
dec
ins
jecxz
(bad)
icebp
scas
loope
sbb
hlt
outs
jbe
cmp
aam
loope
ds
adc
gs
ins
mov
fs
inc
push
adc
mov
ins
fnstsw
push
pop
pop
xchg
push
push
cmps
sbb
mov
leave
mov
or
repnz
adc
or
fldenv
dec
cmp
imul
stos
push
not
dec
test
dec
adc
adc
sbb
arpl
mov
daa
ds
mov
adc
sbb
push
(bad)
sub
pop
out
cmps
xchg
mov
(bad)
pop
sub
jle
cmp
ja
sti
das
inc
inc
mov
mov
(bad)
leave
daa
mov
push
jb
ret
push
push
retf
inc
pop
push
sub
dec
pop
cmp
leave
pop
scas
mov
call
mov
icebp
lahf
ret
(bad)
xchg
loop
and
or
scas
hlt
or
leave
je
push
sub
mov
mov
cwde
mov
xor
in
fsubr
jecxz
or
lods
fst
ds
test
sub
jmp
pop
mul
les
inc
jl
jb
hlt
lea
cmps
retf
push
or
jp
ret
xlat
push
mov
pushf
jecxz
cmp
sub
test
repnz
es
(bad)
jmp
call
ror
push
loope
aaa
push
gs
xor
loope
jno
call
into
jge
scas
adc
movs
jmp
push
lods
mov
stos
dec
xor
bound
aam
mov
mov
shr
or
(bad)
movs
cmp
scas
sti
jl
or
mov
pusha
jg
dec
push
fwait
inc
cmp
inc
movs
cmp
xor
shl
call
(bad)
out
dec
add
xchg
inc
inc
sub
mov
xor
stc
int
or
stc
out
push
cmp
int
sar
xor
hlt
cmp
outs
and
sub
shr
das
xchg
xor
outs
push
popa
int3
inc
ficom
das
arpl
cmp
fistp
mov
mov
and
cwde
pop
push
xor
push
mov
addr16
dec
ins
leave
gs
jns
xor
mov
mov
inc
mov
inc
test
(bad)
xor
jae
add
and
mov
sub
or
xor
ds
and
shr
jnp
add
retf
xchg
or
movs
addr16
jae
shl
sahf
sbb
(bad)
nop/reserved
pusha
adc
mov
call
mov
int3
mov
iret
push
pop
xor
in
daa
push
in
les
sub
aaa
loopne
fxtract
cmp
loop
imul
xchg
cmp
push
cmp
sbb
mov
call
cmp
bnd
inc
outs
test
mov
in
jns
pushf
adc
push
push
repnz
dec
cmp
cmp
lods
inc
lock
adc
movs
inc
pop
push
jge
xchg
pusha
retf
push
mov
inc
mov
push
rcl
stc
xor
iret
or
xor
div
mov
xor
test
ins
push
test
ss
mov
xor
nop
adc
seto
cmp
lahf
imul
inc
jne
in
xor
aad
call
mov
xchg
sbb
imul
sbb
aaa
mov
and
jne
aas
push
stc
push
mul
jle
bound
adc
xchg
(bad)
inc
aad
stos
aam
repnz
loop
mov
sbb
pop
shl
nop
fs
je
dec
gs
push
jbe
push
mov
leave
ret
adc
sub
push
rol
jmp
cmc
fiadd
stos
hlt
aas
pop
jmp
mov
sbb
mov
and
iret
je
cdq
(bad)
and
adc
xor
mov
adc
mov
sub
adc
jp
gs
out
dec
sbb
test
jbe
into
xlat
add
inc
cli
push
dec
ret
sbb
push
adc
test
and
add
out
loope
mov
ss
jg
mov
push
fsubr
(bad)
mov
rcr
test
adc
push
outs
or
jnp
movs
inc
jbe
lar
push
xor
jns
rcr
movs
mov
add
xor
pop
mov
outs
pop
inc
jg
and
jae
xchg
ja
lock
fs
(bad)
sub
lahf
lods
inc
pop
mov
inc
(bad)
push
inc
scas
mov
jmp
lock
cmp
jg
mov
fcmovnu
test
dec
cmp
push
lahf
ja
mov
mov
cld
push
dec
xlat
mov
cmp
retf
push
scas
mov
push
adc
mov
cwde
push
mov
test
iret
enter
push
mov
scas
fisubr
push
cs
push
xchg
sub
cmp
push
fst
dec
or
adc
jae
mov
adc
mov
push
push
out
or
mov
mov
into
xchg
loop
inc
xor
fs
jbe
cdq
sbb
pop
jbe
out
imul
jns
imul
fdiv
ins
dec
pusha
pop
jmp
adc
js
mov
adc
push
test
lods
retf
and
mov
pushf
sbb
inc
cmps
or
sbb
repnz
shl
cmp
movs
test
jmp
inc
mov
xor
(bad)
xor
retf
je
daa
bound
fistp
inc
retf
and
cmp
dec
mov
jmp
daa
sbb
fcomp
push
daa
push
(bad)
ror
jmp
cmp
push
shl
push
sub
pop
aam
(bad)
cli
daa
xchg
jno
bound
cs
addps
int3
mov
fldcw
fwait
or
dec
std
xor
xlat
rol
adc
xor
cwde
cmps
in
outs
fxch
xchg
sub
call
scas
out
stos
enter
dec
pop
ja
cmps
mov
push
or
jne
fild
loop
out
cs
test
mov
xor
mov
sbb
cmc
mov
ins
dec
cmp
adc
shl
cmp
adc
in
mov
pop
mov
and
lea
pop
es
push
rcr
or
iret
jns
cmp
adc
out
cmc
mov
retf
and
hlt
mov
jno
xchg
cmp
cmp
mov
hlt
in
repz
in
jg
and
imul
pop
or
pop
mov
mov
push
(bad)
fcomip
pop
mov
mov
sti
leave
sahf
out
sbb
xchg
push
sbb
fldcw
in
inc
imul
sbb
pusha
jmp
inc
sti
xchg
add
mov
xlat
xchg
dec
mov
sti
cmp
push
push
adc
movs
push
aad
dec
and
iret
shr
sub
mov
pushf
push
adc
fistp
push
fcmovnu
stc
jnp
rcl
mov
jbe
test
sbb
movs
add
scas
ror
dec
xchg
mov
out
mov
jp
out
hlt
iret
(bad)
push
cmp
pop
cli
inc
push
dec
pushf
je
es
push
mov
mov
jb
sbb
xor
jnp
push
ds
lock
imul
in
dec
mov
sbb
adc
mov
ds
retf
call
clc
dec
dec
push
cld
jmp
lock
cmp
pop
mov
pop
dec
xchg
cmp
lods
push
scas
cmps
out
(bad)
jge
cmp
adc
ins
lds
lds
cmp
stos
pop
call
fiadd
fistp
jo
inc
iret
dec
jmp
inc
jle
mov
xchg
mov
push
jmp
arpl
test
or
sub
xchg
out
pop
or
dec
and
lahf
and
test
les
jle
xchg
test
test
(bad)
jno
jecxz
inc
inc
jp
retfw
push
sub
ret
adc
cmp
nop
aaa
push
test
test
and
pop
rol
mov
shl
dec
in
movs
pop
daa
lock
fidiv
xor
sub
xchg
stc
dec
fst
lods
div
aam
fisubr
or
cdq
nop
test
add
lea
xchg
jecxz
mov
mov
movs
scas
sbb
push
daa
ds
mov
call
xchg
and
mov
aam
out
cmps
pop
jb
cmc
arpl
popa
adc
mov
and
nop
es
pop
int
in
sbb
(bad)
(bad)
es
out
adc
clc
mov
cmp
push
outs
jb
mov
sub
push
pop
fwait
(bad)
in
frstpm(287
nop
bound
cmp
lea
fldenv
mov
inc
ins
push
jnp
sahf
mov
xor
or
dec
psubb
inc
mov
push
out
and
xor
mov
cli
call
adc
fcomip
popf
xchg
sbb
cmp
inc
dec
add
and
aaa
fsub
adc
pop
call
leave
jmp
add
leave
cdq
dec
nop
fld
add
test
push
ret
cwde
ja
fst
fnstsw
mov
outs
sbb
dec
stos
sub
jns
mov
dec
mov
sbb
outs
(bad)
sbb
push
xchg
and
xchg
or
movs
dec
test
and
call
shl
jbe
sbb
call
pop
cmps
or
out
sbb
fst
fiadd
sar
out
mov
xrelease
push
jmp
jno
jle
and
adc
sahf
xor
jmp
mov
push
(bad)
add
pop
fidiv
xchg
push
pop
into
call
jmp
adc
sti
jb
std
and
movs
rcr
ins
out
jns
icebp
daa
out
imul
mov
(bad)
clc
shl
stos
sbb
jb
and
jp
mov
fdivr
inc
sub
cmps
mov
lods
adc
clc
movs
and
sub
or
pop
pop
jp
in
fimul
jns
dec
arpl
outs
mov
mov
dec
push
xor
test
mov
mov
aas
lods
movs
call
call
add
dec
shr
cwde
lds
mul
dec
call
add
ins
cmp
lea
sbb
cwde
sub
inc
cs
adc
cmp
adc
sar
hlt
call
pop
sub
shl
sub
test
add
pop
retf
xchg
enter
inc
mov
dec
mov
xchg
xor
mov
lods
fimul
pusha
(bad)
aas
push
scas
int3
mov
or
inc
jo
mov
mov
fdiv
xchg
loop
fs
pop
jnp
jmp
dec
xlat
fidivr
movs
add
sub
outs
sub
ss
cmps
push
lods
jge
pop
jmp
fdivr
daa
imul
outs
xor
fucomip
jge
sub
repz
adc
inc
xchg
lahf
test
ins
pop
pusha
div
adc
sbb
xchg
inc
push
call
jmp
jecxz
inc
movs
or
scas
(bad)
idiv
fimul
cmp
sbb
out
mov
push
push
sub
push
mov
loopne
das
pop
imul
jmp
nop
push
out
out
sti
and
imul
xor
inc
idiv
into
xchg
fidiv
retf
pop
xchg
adc
pusha
xchg
retf
aaa
adc
and
adc
xchg
mov
stos
sbb
fnstsw
jno
(bad)
out
pushf
mov
loop
bound
sub
shl
aaa
xchg
ds
push
out
or
aad
imul
ins
neg
in
in
ins
xor
aad
xor
out
sub
push
repnz
daa
inc
adc
(bad)
mov
fild
lahf
sti
xchg
fisttp
enter
xor
retf
cmps
int
jns
imul
jae
lea
mov
fwait
mov
fs
mov
sub
inc
mov
lods
lods
cmc
xor
pop
rcr
jmp
adc
jp
mov
test
aas
(bad)
popa
push
loopne
retf
add
sub
ret
add
aaa
mov
repnz
jl
rol
aad
imul
mov
imul
jg
push
imul
bound
add
sub
mov
mov
cld
cmp
mov
dec
mov
inc
add
dec
clc
xor
and
xchg
imul
popf
jbe
jg
rcl
scas
(bad)
repz
pusha
ror
int
cs
cld
mov
xchg
ss
mov
xlat
push
inc
dec
lea
call
pop
dec
pop
mov
dec
mov
bound
jno
cwde
or
xchg
iret
jp
dec
aas
les
jnp
mov
fsub
push
adc
outs
test
retf
mov
push
cmp
dec
mov
adc
mov
adc
imul
pop
jg
mov
(bad)
jbe
arpl
jne
cmps
mov
add
stc
or
sbb
xchg
dec
push
retf
or
adc
inc
imul
int3
and
and
xchg
cmp
ins
or
mov
adc
mov
add
ins
and
dec
push
sub
daa
repnz
inc
ret
push
cmp
xor
dec
add
in
push
pop
es
inc
jmp
jge
sub
(bad)
pop
hlt
lahf
arpl
jmp
(bad)
sub
push
xchg
sub
push
xor
dec
movs
add
ins
and
push
add
cdq
push
jbe
jecxz
sar
push
pop
pop
dec
dec
push
fdiv
sbb
in
mov
imul
popa
jne
test
les
jae
test
xor
mov
inc
out
mov
pop
mov
push
cmps
xor
jmp
push
jns
mov
push
das
aaa
adc
dec
pusha
lds
pusha
scas
sub
mov
pop
iret
add
or
std
xor
lock
push
cmp
jge
sbb
in
fisub
es
push
fld
icebp
repnz
lea
jne
cmp
fldenv
dec
mov
and
adc
sbb
bound
xchg
mov
stos
pop
enter
out
push
push
xor
pop
mov
popa
in
pop
ja
or
jno
ins
jno
mov
js
cmp
mov
dec
cmp
in
mov
xchg
test
sbb
popa
xchg
out
jns
adc
mov
mov
lock
retf
rcr
dec
adc
mov
arpl
in
xchg
retf
jo
popf
xlat
push
mov
es
cmp
bound
in
clc
sahf
inc
mov
and
aam
cmp
jle
call
xor
lds
mov
jmp
loope
jnp
sub
push
js
imul
into
les
lods
pop
add
shl
push
jle
jl
push
daa
cmp
arpl
mov
mov
outs
mov
dec
jle
jne
shr
jo
mov
hlt
ins
fsub
scas
repz
hlt
xor
mov
icebp
(bad)
or
sbb
lock
iret
pop
mov
xchg
imul
xchg
add
(bad)
les
fsubr
push
lods
das
cli
add
pop
retf
test
shl
fwait
cmp
adc
imul
pop
dec
adc
push
dec
jge
sbb
and
jl
fadd
nop
push
pop
sbb
mov
ja
add
mov
xor
sbb
cmps
loope
jns
xchg
test
sub
mov
pop
outs
sub
shr
outs
mov
push
mov
xchg
out
mov
adc
stos
jle
mov
or
adc
outs
mov
shl
push
pop
jp
jl
sbb
loop
or
adc
(bad)
fldenv
lock
pop
loope
push
fstp
loope
ins
out
inc
push
loope
xor
and
mov
xchg
jnp
add
out
jb
stos
xchg
jnp
ret
add
mov
dec
stos
cmp
inc
ins
mov
mov
cmp
jae
pop
test
mov
enter
enter
call
rcr
in
jge
adc
inc
push
addr16
inc
push
hlt
icebp
inc
pop
cmp
xor
push
mul
jmp
push
mov
adc
xlat
xchg
cdq
cvtps2pi
in
push
adc
movs
pop
add
fwait
stos
pusha
mov
pop
ds
call
dec
(bad)
outs
shl
iret
push
mov
mov
outs
(bad)
xor
and
data16
fmul
fisubr
xor
sahf
push
mov
idiv
cld
dec
pop
es
test
mov
adc
jmp
outs
xor
in
outs
mov
cmp
mov
int3
xchg
psllw
push
mov
(bad)
xchg
loop
push
push
stos
xchg
pop
pop
push
je
jbe
or
sub
add
mov
ins
(bad)
dec
xchg
mov
mov
pop
dec
push
fwait
cmp
retf
dec
push
pop
mul
fisub
mov
xchg
mov
cli
jl
mov
mov
out
add
dec
mov
lods
pop
sub
mov
adc
ins
cmps
inc
pop
outs
and
mov
sbb
xor
adc
cmc
lods
mov
repz
pop
movs
fisubr
cld
mov
retf
mov
push
or
retf
addr16
jb
and
and
mov
jmp
mov
adc
or
shr
pop
imul
jo
push
sti
sub
(bad)
(bad)
sbb
fistp
dec
ds
adc
fidivr
dec
nop
pop
leave
jb
aad
(bad)
pushf
(bad)
cdq
cmp
iret
and
(bad)
jecxz
fcomp
fisub
sahf
retf
pop
and
pop
jecxz
jns
push
rcr
or
inc
sbb
adc
mov
popf
inc
mov
pop
xlat
imul
arpl
jb
and
pusha
mov
add
and
scas
cmp
xchg
mov
addr16
sub
loope
movs
sub
fild
push
(bad)
jmp
xchg
and
and
fwait
add
enter
shr
sbb
and
jmp
mov
or
adc
pusha
pop
push
push
pusha
pop
sti
sbb
xchg
push
push
xor
adc
jmp
or
imul
sbb
lahf
clc
fdivr
aaa
leave
outs
sub
mov
mov
or
add
sahf
fild
push
or
test
loop
ins
ins
adc
sbb
adc
xchg
data16
inc
xor
cmp
call
xlat
xchg
bound
add
sub
ja
add
pop
mov
push
mov
add
push
retf
mov
mov
push
fisub
movs
push
mov
icebp
test
int3
push
(bad)
cld
dec
js
cmps
sbb
and
test
das
movs
fild
xchg
pusha
dec
adc
movs
sbb
ja
and
sbb
loop
adc
inc
in
in
cmp
add
sbb
jmp
loope
mov
pop
mov
loop
(bad)
movs
mov
cmp
mov
out
push
mov
arpl
sahf
inc
icebp
loopne
pop
dec
jg
retf
lods
dec
in
cmp
es
fnsave
setp
jl
arpl
movs
fs
mov
dec
iret
je
pop
bound
pop
fs
cmp
lahf
movs
test
(bad)
iret
jne
push
xor
inc
add
jb
jmp
push
mov
cmp
xchg
dec
test
les
xchg
cmp
loop
xchg
sti
add
test
push
inc
js
daa
call
push
ret
pop
xor
xchg
cmp
hlt
inc
addr16
dec
dec
shr
stos
xchg
scas
mov
in
sar
push
xchg
pushw
lods
or
xchg
inc
mov
adc
fs
popf
jbe
ret
mov
mov
pusha
inc
bound
out
cmps
(bad)
and
fdiv
les
das
test
inc
(bad)
jmp
add
pop
xchg
inc
repnz
lea
in
rcl
push
push
pop
arpl
fwait
mov
enter
jmp
fs
aas
mov
jecxz
cs
ror
movs
(bad)
lock
jmp
inc
and
xor
mov
fisttp
fst
das
sub
jmp
mov
push
jp
leave
retf
scas
inc
add
inc
xor
popf
fucom
es
not
inc
rol
mov
imul
sbb
stos
xchg
in
inc
mov
pop
push
pushf
mov
add
imul
in
mov
mov
sahf
test
push
adc
ret
into
pop
mov
mov
pop
mov
sbb
cmp
ret
pop
pop
pop
sbb
mov
jbe
mov
sar
aad
and
mov
mov
mov
aad
push
fnop
shr
test
js
push
or
pop
(bad)
call
jle
lea
rcr
push
in
daa
mov
(bad)
std
ficomp
repnz
push
xchg
xchg
test
(bad)
int3
mov
mov
into
inc
imul
ja
rcr
xlat
push
inc
xor
bound
or
mov
ficomp
hlt
jg
cmp
adc
sti
loope
jge
xchg
loope
jp
addr16
fwait
out
pop
ja
add
call
sub
adc
dec
jle
scas
lock
js
pop
push
push
into
inc
mov
mov
push
aad
rol
mov
dec
lea
not
cmp
xchg
jnp
xlat
fadd
xor
fwait
dec
pop
leave
and
mov
push
cld
cmp
bound
and
repz
movs
add
push
push
xor
std
mov
inc
scas
pushf
xlat
pop
xchg
xchg
dec
jp
add
inc
cwde
xchg
cwde
iret
dec
shr
or
pop
rol
and
test
or
pop
out
pushf
cdq
outs
popf
test
mov
imul
outs
int3
popa
mov
sbb
aas
call
pop
in
mov
(bad)
mov
shl
jmp
jge
pushf
addr16
jns
sbb
mov
dec
fild
imul
mov
push
inc
movs
das
cli
ffree
mov
out
pop
sbb
repz
std
fnsave
lahf
icebp
and
es
hlt
xchg
cmps
add
add
jmp
mov
xchg
scas
xchg
(bad)
xor
imul
cmps
test
emms
fisttp
in
imul
sub
in
sub
add
lods
pop
add
test
mov
call
pop
fs
pop
inc
jae
xchg
cmc
cmps
out
in
xchg
sub
out
cmp
sbb
xchg
inc
test
int3
ret
outs
mov
mov
pop
(bad)
mov
pop
daa
adc
popa
mov
js
xchg
ret
inc
out
in
mov
add
and
push
jae
mov
xor
adc
test
adc
xor
aam
rcl
xchg
cdq
mov
jl
sbb
or
loope
popa
ja
rol
ins
xor
xchg
(bad)
lock
cmp
mov
or
rol
aad
mov
add
(bad)
mov
pop
jp
iret
js
add
adc
and
jle
push
popf
adc
lldt
mov
and
xlat
out
(bad)
fistp
pop
(bad)
repnz
and
jmp
hlt
std
mov
loope
inc
jle
in
aas
mov
scas
icebp
(bad)
loopne
repnz
es
jnp
fwait
push
(bad)
jmp
das
(bad)
push
imul
ret
pushf
(bad)
ret
xor
fiadd
loope
sbb
mov
xchg
sbb
pop
std
in
push
push
mov
movs
cmp
adc
sub
ret
ins
inc
mov
hlt
adc
sbb
pop
dec
push
dec
and
sbb
std
je
in
mov
hlt
inc
int3
mov
inc
cmc
inc
fwait
sub
out
mov
add
ror
mov
pop
lahf
mov
in
jnp
fidivr
scas
test
pop
sbb
sub
xlat
js
pop
sbb
jge
sbb
sbb
sbb
loope
out
popa
sbb
mov
pop
aad
out
loopne
pop
test
ds
gs
mov
jle
push
sub
or
or
dec
in
imul
xor
push
or
out
ficom
mov
pop
jg
inc
push
repz
push
push
cmps
fucomi
sahf
push
mov
pop
outs
cs
xchg
int
in
mov
push
call
cli
iret
add
cld
cmp
test
sbb
push
not
mov
mov
mov
cmp
jl
cld
loop
into
mov
cdq
jge
xor
mov
adc
les
and
sbb
fstp
push
std
fild
out
in
popf
mov
mov
mov
mov
je
loope
inc
out
pop
(bad)
pop
data16
jmp
sub
mov
xor
jnp
in
mov
or
ds
push
xchg
fdivr
nop
push
es
ins
lock
jmp
lock
xchg
mov
cmps
xchg
pop
add
xor
aaa
pop
inc
(bad)
xor
not
pop
test
mov
in
sbb
add
cmps
aam
and
movs
push
xchg
loop
das
into
xlat
pop
mov
sahf
and
jmp
stc
movs
jb
jl
repnz
fdivr
push
cmps
jmp
push
sahf
idiv
sub
std
leave
stc
gs
mov
movs
and
pop
test
call
lahf
mov
mov
inc
sub
or
dec
repz
inc
loope
rcr
dec
cmp
cmp
enter
(bad)
cli
sbb
je
out
jl
cmps
in
int
lea
jno
cld
push
and
mov
adc
push
rol
mov
push
pop
cdq
je
jb
mov
ror
sbb
mov
int3
adc
push
sub
inc
leave
movs
out
retf
in
mov
sti
mov
fsubr
hlt
mov
xor
shr
cmp
push
sbb
pop
push
lods
xchg
mov
push
pop
in
outs
push
inc
and
xlat
mov
or
mov
mov
gs
mov
shl
cld
push
stc
mov
lods
sbb
cmp
aaa
imul
lock
fld
lds
adc
arpl
xchg
retf
iret
addr16
mov
cli
daa
jp
adc
fsubp
mov
retf
mov
aaa
adc
push
or
push
add
shl
push
push
aaa
xor
adc
mov
icebp
inc
jp
mov
stos
mov
push
ja
mov
retf
mov
enter
mov
out
jl
pop
add
jo
sbb
jbe
cmc
sti
sbb
adc
cmp
sahf
jnp
les
fisubr
or
pop
stc
outs
mov
arpl
xchg
xchg
jg
in
mov
mov
jmp
pop
mov
mov
ret
dec
mov
nop
int
test
adc
sbb
dec
inc
aaa
push
test
sti
inc
mov
sbb
dec
int3
and
jmp
dec
sti
stos
and
push
cmps
cs
aas
icebp
(bad)
cmc
sbb
sar
mov
push
xor
imul
enter
ds
lock
jmp
and
adc
mov
jo
cmp
outs
inc
dec
(bad)
jae
and
xchg
mov
out
xchg
xor
dec
push
cld
cli
sbb
and
pop
jae
pop
and
cmps
add
xchg
sbb
cld
pop
vcvttsd2si
and
out
and
daa
loopne
enter
and
loopne
(bad)
or
fdivr
dec
loope
cdq
nop
in
mov
push
in
lods
inc
or
pop
cmp
js
mov
movzx
sti
test
or
cmp
inc
test
or
ins
loope
aad
fmul
aam
stos
adc
leave
and
mov
mov
jne
test
push
jmp
jp
sub
mov
ds
sti
jg
or
outs
adc
cld
xchg
cmp
cdq
inc
or
sti
(bad)
push
mov
xchg
lods
push
mov
push
cmps
push
jle
dec
daa
loopne
sbb
mov
adc
push
js
pop
xchg
(bad)
sbb
shr
dec
sbb
pop
jo
iret
mov
js
dec
and
cmps
sub
imul
repz
mov
daa
add
jge
xor
xchg
jnp
mov
xchg
ins
sbb
test
clc
pop
mov
cmp
in
push
inc
popf
adc
pop
cmp
test
mov
movs
pop
rcr
dec
mov
repz
adc
call
popaw
test
push
and
fmul
inc
push
scas
fnstenv
jne
pusha
cmp
je
mov
dec
(bad)
xchg
mov
dec
mov
adc
loopne
xor
loop
cmps
pushf
inc
dec
mov
cmp
sar
jnp
sbb
dec
xchg
in
shl
stos
outs
add
jge
and
neg
fwait
and
mov
jp
push
nop
or
add
add
push
mov
(bad)
int
push
(bad)
xor
dec
and
imul
xor
add
cmp
call
or
es
mov
jge
mov
push
xor
das
xor
sti
ficom
cs
lock
(bad)
loopne
jmp
ins
pop
and
inc
sti
ins
push
cmp
mov
push
popf
imul
loop
pop
sbb
in
addr16
mov
jnp
cmp
mov
dec
imul
aas
fld
in
rcr
add
sub
mov
push
cld
dec
jmp
pusha
add
mov
pop
pop
inc
cs
test
(bad)
or
scas
cmp
pop
sbb
inc
sub
retf
jae
add
stos
pushf
lea
adc
pushf
cwde
ror
out
sbb
lahf
(bad)
das
out
ret
outs
loope
sub
inc
jnp
pop
lock
push
push
stos
(bad)
mov
test
bound
and
push
jg
mov
sbb
mov
lds
push
pop
mov
fs
mov
aad
inc
add
pusha
or
in
ret
out
cli
xchg
adc
jbe
xchg
repz
inc
imul
adc
lods
in
(bad)
sub
push
mov
jle
or
rcr
mov
push
icebp
(bad)
pop
mov
adc
inc
bound
jmp
shr
imul
js
jmp
and
push
scas
dec
or
cmp
push
and
mov
inc
iret
stc
inc
push
std
(bad)
aas
add
cdq
mov
jnp
pop
out
xchg
gs
das
das
sbb
lock
cmp
or
adc
repnz
test
loope
shl
mov
mov
or
mov
ret
loop
fs
inc
bound
sbb
or
in
pop
outs
je
sbb
adc
pop
sbb
sub
(bad)
arpl
push
ss
jmp
mov
fwait
dec
mov
mul
fild
push
jnp
add
outs
lea
jno
(bad)
imul
iret
xlat
adc
stc
and
(bad)
int3
xor
pop
dec
lods
hlt
and
xchg
mov
fild
add
xchg
icebp
mov
inc
dec
sbb
popf
push
dec
sti
push
in
les
inc
push
out
ds
in
push
or
mov
(bad)
inc
jmp
bound
sub
cdq
stos
clc
inc
ja
push
pop
iret
sbb
div
cli
add
aaa
add
cdq
adc
cmp
push
es
loope
push
jl
dec
push
out
push
fist
mov
int
xchg
bound
push
xor
cmps
out
shl
call
xchg
pop
cs
scas
dec
dec
inc
mov
lods
push
mov
pop
xchg
popf
data16
inc
icebp
fcmovb
popf
push
retf
mov
jne
data16
or
hlt
inc
xchg
sbb
imul
xchg
pop
mov
add
xor
mov
push
pushw
pop
and
rol
dec
sub
sbb
clc
mov
add
mov
adc
sbb
aaa
cmp
push
ret
pushf
lock
sbb
jno
test
in
mov
jo
xchg
pop
rcl
in
je
fimul
add
in
jecxz
or
jns
pop
ror
and
xor
imul
popf
inc
(bad)
shr
call
and
push
arpl
pop
fcmovb
sub
fwait
(bad)
fild
shr
pop
not
mov
ror
jl
xchg
add
add
ins
push
add
shl
inc
fisttp
mov
push
fiadd
mov
das
cmp
out
mov
mov
dec
xchg
pop
lea
dec
dec
xchg
cli
cmc
and
xlat
mov
lods
int3
(bad)
mov
jmp
mov
jns
lods
retfw
xor
sub
add
push
mov
dec
xchg
sub
pop
daa
add
or
lea
lock
stos
mov
hlt
inc
fimul
int3
sbb
and
je
sbb
shl
add
test
add
sub
xchg
(bad)
fcmovnbe
adc
es
out
mov
jo
cdq
adc
movs
jae
jnp
mov
push
xchg
in
inc
scas
rol
add
pop
js
xlat
sbb
or
lahf
mov
cmp
jns
fld
sbb
mov
adc
adc
jl
fsub
loop
std
jbe
cmp
xchg
pop
cmp
add
xor
pop
movs
cs
bound
cmps
cli
xor
test
sahf
lea
sub
mov
and
sbb
enter
adc
xor
dec
sbb
pop
cmc
jb
push
add
push
stc
addr16
imul
sub
jl
jmp
aad
sub
in
ins
add
in
pop
ins
bound
cs
retf
dec
aad
cld
pop
je
jnp
je
mov
es
dec
(bad)
jb
xor
(bad)
std
scas
mov
cmc
push
(bad)
out
fs
sub
mov
dec
les
xchg
jae
mov
(bad)
loope
fbstp
xor
lahf
int
jae
pop
xchg
lds
push
jge
shl
xchg
xchg
nop
xchg
jle
dec
pop
dec
addr16
fst
cwde
fdivr
lods
gs
ins
sub
push
fild
sar
cmp
inc
scas
jmp
fstp
int3
ss
cmp
and
mov
and
jbe
add
imul
push
test
sbb
xchg
push
pop
and
(bad)
push
cmp
test
dec
int3
movs
cmp
scas
dec
imul
retf
sar
and
(bad)
cs
and
out
jb
test
mov
mov
sbb
sbb
out
retf
imul
push
popa
add
cs
sar
cmps
pusha
sub
jae
dec
dec
ret
mov
mov
mov
inc
push
and
fst
fcomp
inc
add
ja
cdq
xchg
xor
out
or
push
jl
je
popa
iret
jno
popa
test
ror
sub
dec
push
and
jle
lock
fs
sbb
xchg
cmp
cwde
pop
dec
xchg
pop
test
enter
cmp
pop
sbb
push
dec
(bad)
lods
jbe
mov
xor
fucomip
mov
fdiv
les
rcr
jnp
int3
adc
out
and
femms
sub
xor
jmp
je
sbb
int3
clc
cs
rcr
icebp
fcomp
mov
mov
jnp
mov
fdiv
stc
(bad)
std
arpl
mov
mov
loop
push
ds
cld
daa
push
mov
jmp
mov
add
retf
(bad)
mov
test
dec
sub
xchg
pop
mov
pop
and
inc
jnp
std
leave
ja
jbe
inc
xor
mov
in
mov
test
out
mov
add
movs
mov
outs
xchg
leave
stos
movs
stos
aaa
and
dec
mov
xchg
stc
or
stos
(bad)
or
(bad)
bound
and
jp
inc
icebp
out
add
add
or
sbb
(bad)
jle
push
fs
in
pop
and
cli
mov
int3
cwde
and
bound
adc
xor
(bad)
add
icebp
mov
imul
in
ja
dec
add
loop
cmps
push
cmp
loop
lahf
cmp
jle
jle
dec
or
mov
adc
popf
push
xchg
loop
mov
mov
sti
mov
jge
call
stos
jp
dec
and
and
mov
xor
jmp
mov
cmp
outs
sub
rcr
push
mov
int
shr
fsub
test
xchg
cmp
inc
push
popa
je
xor
and
jns
mov
loop
jnp
in
cli
xchg
or
int
shl
cdq
and
not
pop
repnz
push
scas
pushf
outs
jle
jecxz
or
cmps
xor
test
jmp
xor
pop
(bad)
mov
push
dec
pushf
jmp
shl
push
inc
and
xchg
or
dec
xlat
push
push
int
call
das
and
adc
lods
mov
loope
inc
push
icebp
test
jns
inc
pop
cmc
movs
or
lahf
retf
mov
add
movs
mov
mov
pop
or
cmp
ins
pop
neg
test
les
pop
dec
xor
add
mov
mov
jns
xchg
stos
sbb
mov
ins
fwait
int3
push
mov
push
ds
lock
scas
(bad)
adc
gs
xor
xchg
xor
retf
enter
dec
(bad)
push
out
out
jp
cmp
aad
mov
adc
fadd
dec
pop
daa
xor
lahf
push
cdq
mov
dec
xlat
sbb
pop
cld
xchg
lock
pop
cld
xor
das
lahf
test
mov
push
jae
add
fisub
fs
cmp
adc
in
push
bswap
add
hlt
in
jmp
xor
xchg
rcl
mov
pavgw
push
aas
pop
outs
xchg
jns
arpl
push
sub
(bad)
mov
jle
jbe
popa
vdivps
jo
dec
push
jbe
lds
outs
arpl
jbe
dec
jne
push
mul
loopne
push
rol
mov
in
or
sub
push
(bad)
in
jbe
jp
rcr
js
adc
push
into
push
mov
mov
lahf
sub
or
sub
mov
(bad)
and
arpl
hlt
push
mov
inc
lea
mov
bnd
leave
frstor
popa
mov
mov
repz
mov
imul
push
adc
sbb
pushf
ret
cmps
loopne
ja
dec
pop
ja
xor
dec
rcr
gs
jecxz
imul
aad
pop
rcl
mov
push
xor
jmp
or
add
mov
wrmsr
dec
int
jb
jecxz
cmp
cmp
jmp
arpl
lods
sbb
repz
leave
push
xchg
mov
or
test
cmp
movs
idiv
sub
jge
cmp
outs
sub
mov
pop
dec
cmp
inc
xchg
mov
call
ror
das
pop
mov
pusha
gs
pop
stos
mov
jle
js
inc
sbb
aaa
loope
addr16
mov
shl
cmp
cmp
jb
sbb
cld
fstp
jg
in
adc
lods
cli
fsub
dec
popf
push
pop
int3
(bad)
repnz
jno
pop
xchg
mov
rol
ror
loopne
ds
xchg
je
mov
sub
movs
hlt
pusha
sbb
sbb
push
fadd
jnp
cli
(bad)
es
in
call
imul
ret
mov
inc
sbb
inc
cmp
into
or
outs
dec
mov
mov
cmps
sbb
stos
or
cwde
test
dec
je
ret
sub
cmp
pop
sub
je
cmps
retf
jo
push
sbb
sbb
dec
jmp
mov
cmc
inc
mov
vcmpss
(bad)
jnp
scas
pushf
paddusw
repnz
rcl
out
mov
leave
jmp
loopne
popf
mov
test
push
add
stos
sub
sbb
sbb
loop
adc
xchg
add
fimul
mov
dec
mov
sub
and
xchg
add
and
add
leave
jmp
mov
nop
imul
and
adc
aaa
fisub
popf
mov
je
push
int3
(bad)
test
fidivr
imul
add
jo
(bad)
popa
ror
outs
and
jne
cmp
icebp
xor
push
dec
and
jb
js
push
add
shl
idiv
shr
and
cwde
mov
cmps
xchg
pop
out
cwde
mov
jmp
outs
and
push
mov
stc
sahf
push
fidiv
pop
adc
jl
out
in
adc
dec
cmp
add
(bad)
retf
in
aad
mov
push
imul
dec
add
test
cld
mov
add
mov
xor
xor
or
xchg
into
test
fwait
mul
cmc
lahf
jle
imul
in
mov
sti
push
jne
jns
sbb
xlat
and
mov
pusha
imul
nop
test
sub
loop
or
add
ret
call
push
push
xchg
push
imul
out
push
mov
pop
push
jl
or
adc
lea
inc
mov
pop
cmp
cmp
int3
aam
es
repz
xchg
xchg
cwde
and
jno
scas
xchg
mov
pop
inc
pop
xor
mov
shl
ffree
add
loope
popf
sub
sub
popf
loope
dec
cli
daa
loop
addr16
jecxz
pop
sub
out
jp
lea
or
js
xor
cwde
mov
icebp
xchg
std
mov
std
loope
pmovmskb
push
call
xchg
stc
push
and
push
sbb
push
dec
fld
jnp
inc
dec
lea
lahf
outs
test
aaa
sub
pop
push
ret
or
mov
jmp
mov
outs
ss
sbb
adc
or
pop
(bad)
xchg
das
xor
loopne
push
adc
mov
pusha
pusha
in
sub
jo
cmp
fiadd
jmp
test
ret
dec
addr16
xlat
mov
mov
push
jb
mov
pop
test
lods
inc
push
xchg
xchg
aas
mov
jb
sub
outs
outs
fwait
jecxz
pop
in
(bad)
scas
arpl
shr
pop
xlat
adc
pop
(bad)
loope
sbb
cmps
cmp
loopne
call
sbb
out
sub
cmp
test
int3
test
mov
lock
lds
or
imul
mov
inc
jnp
stc
jg
lahf
sbb
mov
mov
jl
in
ror
rol
or
sub
add
imul
mov
shl
xchg
clc
jge
cmp
cdq
mov
stc
call
sahf
(bad)
sti
shr
ds
setnp
aas
or
bound
movs
int
sbb
inc
arpl
or
pop
cwde
xor
jbe
sbb
dec
(bad)
cmp
mov
pop
das
hlt
aaa
push
pop
or
push
retf
(bad)
int3
inc
(bad)
retf
pop
fwait
push
xchg
mov
ja
xchg
repz
add
lods
imul
dec
loop
int3
js
jle
push
pusha
dec
or
leave
inc
cmp
pop
scas
popa
sub
mov
rcr
and
mov
movs
jle
xchg
mov
je
imul
xlat
out
nop
or
jns
push
retf
adc
cmps
daa
jle
out
or
ret
cmp
and
and
push
push
jns
dec
jbe
ret
mov
or
fidivr
mov
dec
gs
inc
cmp
xor
push
int
jbe
fmulp
out
test
stos
inc
or
test
lds
adc
cdq
mov
dec
mov
xchg
inc
pop
cli
test
cmp
push
lea
mov
jns
scas
push
mov
leave
push
mov
fst
popa
jmp
or
out
jge
fbld
movs
pop
int3
xor
fidiv
retfw
(bad)
retf
pop
dec
add
jbe
pop
mov
adc
arpl
(bad)
in
jne
xchg
addr16
int
xchg
icebp
push
outs
or
(bad)
pop
or
push
jge
pop
in
mov
dec
mov
gs
bound
xor
or
xchg
xor
sti
retf
cdq
mov
call
ins
inc
push
sub
jmp
jp
xor
ja
jle
sub
cmc
adc
int
dec
aas
pop
daa
xor
push
sbb
mov
or
push
inc
aam
inc
xchg
sub
xchg
addr16
and
xchg
and
mov
cmp
and
jecxz
fcmovnb
adc
lock
inc
in
cwde
popf
sub
enter
jb
cli
and
out
les
mov
mov
je
jmp
add
inc
push
mov
arpl
add
das
clc
movs
gs
jle
daa
xor
pop
lds
int3
lahf
dec
cld
call
push
dec
gs
rol
retf
push
adc
jne
dec
loopne
cmp
push
rcl
repz
sub
stos
pop
in
xchg
jge
lds
popw
test
adc
fwait
sti
add
xor
cmc
aad
inc
pop
idiv
sub
addr16
mov
iret
(bad)
fidiv
fdivr
call
es
cmp
add
arpl
jns
retf
push
and
fsubr
bound
or
mov
(bad)
out
in
xlat
push
mov
shl
push
mov
mov
fiadd
iret
mov
dec
gs
fidiv
and
xchg
ins
mov
mov
pop
mov
dec
call
push
in
scas
adc
popa
sub
pop
xor
int3
ret
jnp
fbld
add
fnstenv
pop
in
shl
or
repnz
xor
fcmovne
cmp
and
fidiv
and
ret
outs
sbb
cmps
loop
test
jo
xchg
mov
aas
mov
inc
push
adc
fnstcw
jmp
bound
jmp
js
bound
call
cmps
shr
jae
and
cs
mov
push
lods
outs
dec
mov
(bad)
cli
outs
xchg
dec
inc
fiadd
xlat
sbb
jns
push
data16
xchg
and
ret
test
mov
sub
leave
fxtract
jmp
shr
rcr
movs
cs
mov
jge
jmp
sub
add
in
pop
ret
es
retf
jge
fisub
sahf
out
repz
push
scas
xchg
dec
enter
lock
icebp
stos
(bad)
fld
(bad)
je
call
imul
jo
lods
pop
pop
dec
xor
call
test
xor
pop
pusha
or
js
jp
xchg
xchg
push
(bad)
pop
shl
pop
adc
mov
jge
xlat
sahf
test
jl
clc
aam
test
in
cdq
push
add
xchg
sub
gs
vrcpss
fidivr
fild
(bad)
jnp
mul
out
xchg
lds
push
out
stos
push
mov
cmp
into
bound
mov
mov
scas
cmp
xor
adc
retf
push
ins
fisubr
dec
popf
jmp
(bad)
and
push
imul
adc
sub
push
inc
retf
(bad)
rcl
fnstenv
rol
call
xchg
daa
sub
dec
call
pop
mov
pop
inc
adc
icebp
ror
cmc
fs
mov
pop
cwde
daa
sti
dec
mov
jl
cmp
(bad)
popf
fimul
cs
aaa
lods
retf
push
icebp
push
sbb
xchg
sub
jae
data16
push
das
inc
retf
push
and
pop
cwde
push
sbb
imul
pop
add
mov
mov
fist
(bad)
lods
call
loop
add
je
js
dec
aad
into
das
sti
xor
dec
mov
sub
js
imul
lahf
lea
aad
ficom
frstor
pop
mov
push
mov
push
xchg
fs
sbb
(bad)
push
cmps
movs
xlat
imul
outs
xchg
(bad)
jmp
repnz
sahf
jns
xchg
cmc
out
inc
adc
sub
scas
cmp
jnp
dec
or
cmc
sbb
test
sti
sbb
cmc
jge
test
inc
test
nop
and
aaa
adc
or
je
aaa
sub
pop
in
mov
inc
ret
jnp
clc
les
and
jmp
xchg
adc
sub
out
cmc
push
pop
jmp
xor
mov
repz
pop
jo
push
test
and
fild
mov
movntps
pop
loop
sub
push
mov
mov
bound
and
dec
aas
sahf
pop
sbb
fiadd
adc
mov
mov
(bad)
mov
push
xor
pop
sbb
movs
jmp
les
sbb
adc
enter
cld
adc
add
shr
jo
test
xchg
daa
jp
shr
(bad)
mov
or
mov
and
dec
jmp
movs
or
inc
xlat
pop
retf
les
pop
xchg
pop
cwde
or
and
es
ror
or
popa
test
mov
test
mov
(bad)
pop
jae
das
mov
jbe
or
mov
and
movs
ds
inc
sbb
retf
mov
fmul
jnp
mov
cmp
sbb
sbb
pop
popf
les
ror
stos
dec
cs
dec
cmp
mov
sbb
mov
add
adc
rcr
call
push
jle
(bad)
enter
sar
pop
push
xor
adc
or
mov
in
sbb
lods
(bad)
jmp
cdq
cmps
(bad)
push
inc
xchg
out
ficomp
cmc
std
push
cs
outs
das
outs
mov
xrelease
jg
mov
loope
mov
pop
test
or
jnp
xor
jne
and
loop
imul
icebp
cmp
sub
ror
mov
pop
push
adc
dec
rcl
sub
sbb
enter
fdivp
stos
sar
out
cbw
clc
xchg
fcomp
push
outs
das
jg
cwde
out
out
sub
push
jl
mov
lea
push
mov
clc
jnp
addr16
ja
out
dec
out
sub
icebp
xor
xchg
xlat
call
xor
dec
and
cmp
mov
or
fdivr
mov
and
and
xchg
pop
xchg
les
sub
adc
and
scas
sbb
jnp
mov
in
retf
xor
xchg
(bad)
dec
pop
ins
dec
jg
push
xor
xor
sti
dec
mov
push
xchg
inc
sets
cmps
lods
dec
dec
adc
pushf
dec
xor
sbb
fsub
(bad)
mov
cmp
mov
imul
pop
adc
cld
fwait
xchg
sbb
jmp
jp
les
cs
scas
push
inc
les
push
scas
adc
inc
loop
out
mov
add
retf
(bad)
shr
daa
arpl
mov
or
clc
loopne
aam
pop
out
jge
outs
movs
shl
pop
pusha
xor
lods
xchg
pop
iret
push
repz
les
xor
dec
or
fisubr
jo
xor
adc
(bad)
xchg
adc
stos
jp
out
(bad)
jo
ror
cmps
popa
pop
mov
cmp
sub
mov
mov
test
mov
inc
lock
jbe
push
mov
pop
adc
mov
sbb
ja
fidivr
mov
cmp
dec
sahf
fstp
stos
and
pop
cld
cli
test
mov
push
dec
(bad)
idiv
jo
push
ja
and
scas
int
clc
dec
in
mov
aas
cwde
lods
mov
das
sbb
push
popa
retf
ins
popf
ret
xchg
jg
out
or
push
sbb
mov
pop
jge
enter
jns
lea
popf
adc
sub
sub
ss
xchg
xlat
jp
inc
jg
bound
mov
les
test
addr16
test
cmps
rcl
mov
(bad)
(bad)
stos
pop
fwait
jge
pop
(bad)
mov
dec
cli
(bad)
mov
leave
mov
sar
loopne
push
mov
retf
mov
mov
das
mov
arpl
cmp
fs
dec
(bad)
or
mov
or
inc
mov
mov
push
xor
add
xor
or
fwait
movs
mov
(bad)
mov
lock
cmp
imul
fisub
loop
or
fwait
sbb
add
add
ror
add
sub
ficomp
or
push
lds
mov
pusha
es
mov
lock
int3
mov
sub
inc
fcom
mov
clc
scas
lods
por
pop
test
jle
sbb
mov
inc
ror
stc
movs
(bad)
stos
or
icebp
je
js
inc
nop
lods
and
fisubr
dec
aam
xor
sbb
mov
cmps
jge
(bad)
std
inc
outs
aaa
cmp
neg
mov
(bad)
jp
jecxz
add
mov
sbb
xchg
sti
aam
clc
movs
pusha
sub
mov
xor
loope
cld
cmp
dec
mov
ret
inc
mov
test
aad
push
jmp
scas
pusha
cmp
adc
mov
cmp
addr16
inc
push
sub
movs
mov
jno
js
pop
mov
lahf
shl
movs
mov
sahf
bound
les
mov
mov
mov
iret
sbb
out
and
call
and
push
mov
dec
cmps
push
sub
mov
pop
mov
sbb
push
repz
fcom
mov
ret
cld
or
fs
ficom
sbb
sbb
arpl
int
inc
cmc
mov
loope
sbb
imul
pop
mov
ret
jo
xor
pop
xor
fcomp
inc
enter
in
outs
push
pop
movs
fidiv
bound
pop
(bad)
sti
sub
jne
fstp
imul
mov
je
and
dec
iret
in
lahf
push
dec
adc
mov
aam
mov
ins
xchg
nop
push
add
test
sbb
mov
fwait
test
in
push
scas
adc
sbb
in
fld
les
cwde
jae
xchg
mov
cli
pop
call
call
cwde
jmp
gs
jae
sbb
cwde
add
inc
rcl
pop
out
cmp
das
pop
test
mov
xor
neg
xchg
pop
cmp
inc
mov
xchg
movups
imul
xchg
les
dec
sbb
xchg
pop
cmp
dec
rol
mov
sar
pusha
inc
xor
jb
mov
push
lea
xchg
(bad)
loope
xor
pop
jno
add
in
add
mov
sub
jle
pusha
ja
bound
stc
add
sbb
jo
and
das
loope
stc
push
lods
rol
stos
adc
shl
int
(bad)
outs
lahf
gs
rol
inc
mov
xor
mov
cmp
inc
loopne
std
ret
xor
adc
cli
pop
in
fbstp
int3
mov
sahf
test
int3
out
mov
mov
and
pop
mov
mov
scas
xchg
(bad)
pop
test
push
pop
ffreep
sbb
jae
cmp
daa
dec
or
mov
jns
into
inc
loopne
cmp
jb
ret
mov
pop
mov
call
into
sbb
pop
rcl
and
call
mov
pushf
daa
out
imul
jecxz
rol
sub
scas
iret
dec
scas
fisttp
inc
xor
fldcw
push
jne
mov
cmp
ret
ins
xor
outs
push
cwde
mov
loope
inc
pop
jb
dec
add
push
mov
and
push
jmp
out
jnp
or
(bad)
sbb
lds
movs
fist
and
sub
jno
xchg
rcl
rcl
clc
daa
add
sub
adc
retf
je
and
xchg
cdq
pop
mov
repnz
cmps
mov
mov
mov
jge
std
ds
rcr
or
js
mov
aad
mov
push
leave
mov
push
icebp
lahf
popa
jno
mov
fcom
rol
pop
stos
and
ret
dec
leave
(bad)
(bad)
jmp
in
popa
pusha
sub
or
push
pop
dec
xchg
sub
sub
mov
cmps
adc
loope
inc
enter
pop
mov
sub
cmp
pop
out
add
sahf
imul
test
inc
into
sbb
lods
mov
paddb
ja
fdiv
adc
loopne
adc
retf
jae
pop
and
jnp
movs
sahf
test
pop
dec
popf
inc
fcomp
test
add
icebp
sub
shr
(bad)
fstp
adc
(bad)
cmps
pushf
aas
divps
add
mov
lods
pop
push
sub
das
xchg
adc
fcom
out
jns
bnd
ja
mov
lahf
ficomp
imul
mov
imul
jecxz
push
mov
lods
mov
jo
mov
mov
push
daa
fisubr
enter
inc
push
mov
jecxz
mov
jbe
sub
add
jg
dec
lds
in
sub
adc
add
inc
sbb
call
mov
adc
test
ins
mov
jno
cmc
ins
pop
or
stc
movs
xor
nop
push
xchg
xchg
nop
scas
xchg
cld
pop
xchg
add
add
add
clc
mov
pop
(bad)
jmp
add
call
popa
and
scas
adc
shl
cmps
push
xor
fs
mov
sbb
(bad)
xchg
and
test
rol
sahf
iret
push
psrlq
test
or
out
cmp
loope
push
fldcw
jbe
pop
push
sbb
mov
sahf
test
pop
xchg
(bad)
aad
push
leave
mov
or
add
outs
xchg
hlt
jae
cmc
aad
retf
xchg
inc
movs
sti
fsubr
ret
xchg
js
xor
inc
push
ret
js
add
gs
test
and
inc
mov
cs
and
jmp
cmps
inc
movs
leave
pop
sti
(bad)
call
or
dec
(bad)
ins
(bad)
mov
jl
rol
loope
loope
movs
test
sub
test
ins
ds
cs
mov
pop
sbb
cmp
xlat
jo
cmps
mov
(bad)
pop
(bad)
mov
ds
inc
stc
int
cs
sbb
shl
(bad)
call
icebp
pop
arpl
sub
out
ja
inc
sar
push
mov
lea
lahf
pop
xor
ins
retf
icebp
pop
push
arpl
test
mov
push
inc
inc
sub
dec
dec
shr
inc
pusha
scas
dec
mov
shrd
add
sbb
rep
std
inc
or
dec
jg
mov
adc
cmps
pop
cmps
add
cmp
cmp
aaa
es
hlt
inc
fild
adc
cmp
inc
push
(bad)
jnp
mov
cs
inc
into
pop
xor
inc
rcl
shl
push
or
sahf
shl
test
dec
push
adc
pop
pushf
shr
data16
push
leave
out
mov
icebp
ins
stos
and
xchg
push
push
xor
ins
sub
cmp
mov
(bad)
into
arpl
mov
inc
sar
jns
test
stos
push
loope
ins
aad
jns
fild
in
and
js
iret
inc
xor
cwde
mov
xor
inc
stos
out
pop
aad
cmp
sbb
jmp
pop
btr
ja
rol
inc
mov
push
mov
out
in
(bad)
jecxz
cld
xor
mov
mov
in
xchg
call
iret
jge
les
inc
mov
lahf
mov
fwait
push
test
fnstsw
jo
cmps
sbb
div
(bad)
into
sti
fst
mov
lods
adc
ins
dec
fldenv
adc
test
xor
or
dec
clc
rcr
jnp
cmp
push
cs
shl
and
mov
in
shr
add
mov
add
sub
sbb
cdq
rol
neg
(bad)
lods
cmps
jae
dec
pop
cli
mov
rcr
mov
sbb
fdivrp
mov
adc
into
push
inc
xchg
not
mov
loop
push
dec
jp
ja
lods
cwde
test
xchg
jae
push
jb
or
stos
stos
and
xchg
aam
xor
scas
jl
rcr
shr
rol
outs
adc
pusha
cwde
push
scas
adc
movs
cmp
pop
add
mov
leave
mov
and
es
pop
cmp
pop
lea
imul
ins
aas
pop
inc
pop
in
int
cmp
sar
test
pop
or
pushf
xlat
pusha
push
or
in
xor
mov
mov
stc
mov
mov
xor
xchg
in
sub
icebp
pop
inc
dec
pop
inc
imul
imul
movs
xchg
in
pop
fistp
mov
out
jle
ja
dec
out
pop
sbb
push
pop
sub
jmp
dec
int3
(bad)
pop
imul
arpl
retf
jl
mov
push
dec
(bad)
mov
pop
xchg
rep
out
(bad)
mov
enter
jbe
cmps
xor
adc
mov
dec
popf
pop
adc
sub
xchg
call
cmc
into
jne
pop
int3
mov
sahf
or
dec
sbb
sbb
cwde
gs
les
popf
ss
jge
add
loop
mov
and
jnp
pop
call
in
or
adc
inc
jb
ror
aam
or
pushf
mov
mov
or
pop
loope
mov
loopne
idiv
add
div
pop
lods
movs
pop
retf
test
bound
inc
pop
pop
and
sub
aas
out
add
dec
inc
hlt
in
mov
out
cmps
inc
mov
repz
sbb
mov
enter
lea
std
jno
out
mov
jmp
out
es
dec
xor
or
and
inc
cmps
repz
popf
jae
arpl
dec
jmp
ret
push
dec
inc
push
xor
or
jno
pop
cmp
inc
or
jp
aas
sti
outs
dec
enter
push
jp
jecxz
push
xor
adc
xchg
push
push
mov
push
dec
push
aam
sbb
aad
ds
cld
adc
sub
adc
mov
cwde
sti
xchg
jmp
lock
rol
sti
sbb
call
outs
xchg
adc
mov
pop
js
cs
inc
xchg
push
(bad)
idiv
fstp
fadd
sub
aas
xchg
pop
mov
mov
(bad)
add
mov
push
mov
cmp
jle
repz
pushf
and
es
mov
mov
in
pop
pusha
ror
pushf
push
sub
fmul
repnz
mov
xor
loopne
cs
rcl
adc
sbb
mov
adc
mov
or
fdiv
in
rcl
dec
xlat
and
xor
pop
sub
inc
lock
out
std
rcr
lds
jb
loopne
ret
aaa
sbb
pop
pop
xchg
fsubr
repz
inc
mov
jge
data16
mov
or
cmp
je
pusha
fs
std
mov
stos
adc
hlt
test
out
lods
fnclex
loop
xor
xchg
dec
sub
and
cmp
ret
dec
fdivp
add
push
icebp
stos
adc
jp
test
fist
(bad)
cmp
std
dec
addr16
xor
and
push
test
stos
ins
and
sbb
data16
jae
cmp
sub
shl
mov
loopne
or
vshufps
cwde
shr
add
ins
push
cmc
ins
psrld
sbb
jnp
xchg
lods
mov
xchg
or
xchg
cwde
arpl
cld
xchg
push
data16
shl
popa
adc
ret
dec
rcr
test
(bad)
enter
cdq
jbe
mov
jge
pop
jmp
add
adc
jmp
adc
movs
(bad)
push
xchg
cmps
call
jmp
rol
inc
shl
sbb
add
cpuid
inc
add
jmp
mov
ss
and
jecxz
mov
jo
xor
aaa
retf
cmp
xchg
adc
in
leave
(bad)
(bad)
add
ret
pop
inc
xor
push
in
adc
sbb
cmps
xor
clc
rol
loopne
cs
inc
inc
jmp
in
fucom
adc
and
mov
cdq
xor
dec
and
ins
daa
in
cmc
sub
adc
jne
nop
pop
push
test
xchg
pop
xchg
mov
xor
(bad)
neg
sbb
xchg
add
(bad)
adc
pusha
mov
inc
add
mov
or
inc
xor
shl
loopne
cmp
jge
les
xchg
jnp
cmp
stc
out
fistp
sbb
rol
lods
mov
push
fcom
pusha
sub
dec
out
test
mov
lock
sbb
pop
xlat
cld
into
add
xor
in
push
hlt
cli
cwde
shl
adc
add
xchg
popa
cmp
stos
xchg
dec
push
adc
retf
xchg
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
adc
add
jle
add
adc
add
push
add
and
jb
outs
addr16
add
add
popa
add
adc
add
and
dec
inc
add
add
popa
add
lock
add
and
outs
bound
add
add
add
push
xchg
add
or
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
ins
add
add
mov
add
in
ret
add
add
add
add
add
add
push
add
add
push
add
push
add
add
add
push
add
ret
add
add
sub
push
add
push
add
add
add
add
add
add
push
leave
push
push
add
push
leave
push
push
add
add
add
orps
push
add
psllq
push
add
add
add
add
push
add
add
push
add
add
inc
ret
add
add
add
dec
ret
add
add
dec
push
add
add
pop
dec
push
add
add
add
dec
in
dec
push
add
dec
xor
add
dec
push
add
add
dec
push
add
add
add
add
mov
push
add
cdq
dec
ins
add
add
add
dec
ins
add
add
dec
ins
add
add
push
ret
add
add
push
ins
add
add
push
ret
add
add
ret
add
add
ret
add
add
cwde
push
loopne
push
add
add
add
add
add
add
adc
add
add
add
add
adc
push
add
add
sbb
add
add
sbb
or
add
sub
add
add
add
cmp
add
xor
add
daa
add
add
add
cmp
add
cmp
add
sub
add
add
add
ins
add
add
adc
inc
add
ins
add
add
add
adc
inc
inc
add
cmp
add
add
add
add
add
add
dec
add
cmp
add
dec
add
cmp
add
add
add
add
add
add
add
pop
dec
add
cmp
add
add
add
xor
mov
adc
add
xor
add
xor
mov
add
add
lods
dec
add
lods
add
add
add
dec
cmp
add
mov
adc
add
push
dec
cmp
add
mov
adc
inc
add
add
add
add
add
add
add
add
adc
add
add
nop
add
add
push
xchg
add
add
add
sbb
add
mov
add
add
push
nop
add
add
nop
add
add
push
nop
add
add
nop
add
add
pop
nop
add
add
rol
and
out
xlat
add
add
fild
and
fisub
nop
add
add
fild
and
(bad)
and
add
add
rol
add
into
and
add
add
jle
add
(bad)
and
add
add
jmp
add
mov
add
fild
and
nop
sub
add
add
add
add
add
jmp
add
sub
add
jecxz
inc
add
add
add
add
das
xchg
add
add
add
add
add
add
jle
add
cwde
aaa
mov
add
adc
jle
add
nop
cmp
add
in
cmp
add
add
add
inc
add
xor
xlat
dec
pop
add
pop
add
and
adc
pop
dec
add
push
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
add
call
add
add
add
and
add
add
add
add
adc
add
add
add
add
and
add
add
add
push
ins
add
add
add
add
adc
pop
js
add
jo
add
add
adc
or
xchg
add
nop
and
add
add
add
add
add
add
or
and
add
add
add
mov
and
add
add
add
or
and
adc
ja
xchg
add
add
and
adc
repz
and
adc
outs
or
and
adc
jmp
mov
add
je
add
add
adc
or
add
adc
loopne
rol
add
add
add
add
add
and
adc
fmul
add
add
and
adc
push
or
or
add
add
adc
int
mov
add
sub
add
add
adc
dec
push
mov
add
add
xchg
add
push
out
add
add
add
add
xchg
add
sbb
sub
xchg
add
rdtsc
add
add
add
add
xchg
add
add
add
add
add
aaa
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
adc
inc
add
add
xchg
add
jbe
add
add
add
add
adc
add
add
add
add
add
sbb
add
inc
add
add
add
pop
add
add
add
add
pop
mov
add
fmul
add
add
add
add
xchg
add
add
add
add
add
add
sbb
dec
add
add
add
sbb
add
add
add
add
add
add
dec
add
add
sbb
add
dec
add
add
sbb
add
dec
add
add
add
es
add
add
add
es
add
add
add
add
add
add
add
add
daa
add
add
push
push
add
add
add
sub
pop
add
add
add
sub
add
add
add
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
mov
add
add
sbb
add
arpl
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
cmp
push
add
cmp
add
aam
add
add
add
cmp
add
inc
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
aas
xchg
add
inc
ins
add
add
xchg
add
inc
pop
add
fs
add
add
xchg
cmp
add
add
add
adc
ds
adc
ins
add
add
xchg
add
inc
out
add
add
ins
add
add
xchg
add
add
add
add
xchg
add
inc
pop
add
dec
outs
add
add
xchg
cmp
add
add
add
add
add
add
add
add
pushf
outs
add
add
adc
mov
js
add
mov
add
add
rol
add
outs
add
add
adc
test
retf
add
clc
outs
add
add
adc
and
fiadd
add
adc
add
add
add
add
outs
add
add
adc
sbb
add
inc
outs
add
add
adc
mov
add
add
add
adc
scas
dec
and
add
cmp
add
add
add
dec
aas
add
sbb
add
add
adc
xlat
dec
pusha
add
or
add
add
adc
jmp
je
add
add
add
dec
pushf
add
or
add
add
add
dec
mov
jbe
add
add
add
dec
fld
add
call
add
add
dec
test
add
add
adc
and
add
add
adc
into
dec
daa
add
add
add
add
dec
xor
add
adc
inc
dec
inc
add
add
adc
dec
dec
arpl
add
add
add
jg
add
ins
jge
add
add
add
add
add
add
inc
cmps
add
add
adc
xlat
dec
mov
add
add
xchg
add
dec
sbb
add
add
xchg
cmp
add
adc
scas
dec
rol
add
add
add
adc
sub
add
loopne
add
add
adc
cmps
dec
int3
add
add
add
add
dec
js
add
and
adc
mov
add
add
add
adc
mov
add
add
add
adc
ror
add
in
add
add
adc
scas
dec
adc
test
add
add
add
xor
add
add
adc
rol
add
aam
add
add
adc
pop
dec
pusha
add
add
add
adc
rol
add
je
add
add
adc
pop
dec
fwait
add
add
add
adc
or
add
add
add
adc
dec
dec
mov
adc
mov
add
add
add
adc
mov
add
mov
add
add
add
dec
add
add
in
lea
add
add
add
dec
sbb
add
hlt
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
sbb
mov
adc
add
add
jnp
dec
add
cmp
add
add
add
inc
add
add
add
add
add
add
add
dec
cmp
inc
add
dec
pop
add
add
dec
jns
push
add
dec
xchg
add
add
add
dec
rol
xchg
add
out
add
sbb
mov
dec
and
add
add
cmp
add
pop
add
add
mov
add
jno
rol
add
add
cwde
dec
mov
add
dec
rol
add
add
dec
test
add
add
dec
sub
inc
add
mov
dec
jne
pop
add
ins
add
pop
dec
cmps
add
ret
add
rol
inc
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
push
add
add
add
add
add
push
add
add
add
sub
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
loop
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
ins
add
add
add
adc
add
add
add
add
add
add
imul
add
inc
add
add
add
add
add
add
add
lock
add
add
mov
add
add
add
add
add
add
add
xor
jl
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
str
add
add
add
add
add
adc
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
lds
mov
add
add
leave
add
leave
add
dec
add
add
retf
add
retf
add
dec
add
add
int
mov
add
add
rol
mov
add
add
fild
mov
add
add
dec
add
add
fld
mov
add
add
dec
add
add
fild
mov
add
add
in
mov
add
add
test
add
test
add
std
add
std
add
dec
add
add
inc
mov
add
add
add
ror
add
add
mov
add
add
dec
add
add
add
add
add
add
add
add
or
mov
add
add
or
add
add
add
cmp
xor
add
add
xor
fadd
push
add
add
enter
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
fadd
ins
add
add
cld
add
rol
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
str
adc
add
add
add
add
add
add
sub
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
and
add
add
add
add
bound
imul
bound
imul
jb
imul
gs
xor
push
gs
jne
arpl
cs
jae
jne
arpl
add
gs
sub
lods
loop
stos
loop
mov
or
stos
loop
mov
or
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
sub
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
or
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
mov
or
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
add
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
mov
or
(bad)
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
or
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
lods
loop
mov
sub
mov
sub
mov
sub
stos
loop
mov
or
je
add
jae
gs
add
outs
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
arpl
outs
jb
dec
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
gs
bound
dec
outs
outs
add
je
outs
fs
popa
jae
add
jbe
jb
outs
ins
outs
je
push
jns
add
jb
outs
add
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
jae
gs
cs
push
imul
outs
jb
dec
gs
outs
fs
outs
outs
add
gs
add
push
arpl
sub
loop
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
mov
or
stos
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
mov
or
mov
sub
mov
sub
mov
sub
add
push
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
mov
sub
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
scas
loop
scas
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
scas
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
gs
sub
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
lods
loop
mov
or
mov
or
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
or
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
mov
sub
sub
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
mov
or
loop
mov
or
mov
sub
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
lods
loop
mov
sub
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
scas
add
sub
scas
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
mov
or
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
sub
lods
loop
mov
sub
mov
or
mov
or
scas
loop
lods
loop
scas
loop
mov
sub
add
sub
loop
mov
sub
lods
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
mov
or
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
sub
stos
loop
mov
or
mov
sub
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
mov
sub
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
mov
sub
mov
sub
scas
add
sub
loop
stos
loop
lods
loop
mov
or
mov
sub
stos
loop
lods
loop
lods
loop
scas
loop
mov
or
loop
(bad)
loop
mov
sub
mov
sub
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
scas
add
sub
lods
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
add
sub
mov
or
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
mov
sub
(bad)
loop
mov
or
loop
(bad)
loop
scas
add
sub
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
mov
or
stos
loop
mov
sub
scas
loop
lods
loop
mov
sub
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
sub
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
lods
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
add
sub
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
mov
or
stos
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
scas
add
sub
mov
sub
mov
sub
stos
loop
stos
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
add
or
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
add
or
(bad)
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
mov
or
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
stos
loop
scas
loop
mov
or
mov
sub
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
sub
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
mov
sub
scas
loop
scas
add
sub
mov
or
(bad)
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
add
jb
popa
ins
add
jae
gs
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
or
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
add
outs
je
xor
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
loop
mov
sub
mov
or
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
inc
ins
outs
outs
gs
bound
inc
outs
arpl
imul
je
ins
cs
gs
add
sub
scas
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
add
gs
je
dec
outs
jae
popa
outs
arpl
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
or
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
sub
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
or
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
mov
or
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
scas
loop
(bad)
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
jo
inc
outs
ins
popa
imul
inc
jae
gs
bound
gs
ins
jbe
add
or
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
mov
or
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
or
(bad)
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
mov
sub
loop
scas
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
mov
or
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
add
ins
jne
push
jns
gs
sub
mov
sub
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
mov
or
mov
sub
loop
lods
loop
scas
add
sub
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
sub
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
mov
or
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
add
sub
(bad)
loop
mov
sub
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
add
sub
mov
or
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
mov
or
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
mov
or
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
scas
add
sub
mov
sub
scas
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
add
or
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
mov
sub
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
scas
loop
scas
add
sub
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
mov
or
stos
loop
mov
sub
scas
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
scas
add
sub
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
sub
mov
sub
mov
sub
mov
or
stos
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
stos
loop
(bad)
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
or
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
mov
sub
scas
add
sub
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
mov
or
lods
loop
stos
loop
mov
or
mov
sub
loop
scas
loop
mov
sub
stos
loop
mov
sub
or
loop
stos
loop
stos
loop
mov
or
scas
loop
mov
sub
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
add
or
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
or
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
sub
sub
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
or
stos
loop
lods
loop
mov
sub
mov
sub
stos
loop
stos
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
sub
mov
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
mov
sub
mov
sub
add
sub
lods
loop
lods
loop
mov
or
mov
or
scas
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
or
mov
sub
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
or
loop
mov
or
mov
sub
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
mov
sub
sub
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
mov
or
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
scas
add
sub
mov
sub
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
add
sub
mov
sub
mov
sub
scas
loop
mov
or
stos
loop
stos
loop
mov
or
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
or
scas
loop
mov
or
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
add
sub
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
mov
or
lods
loop
mov
sub
loop
lods
loop
mov
or
sub
mov
sub
scas
loop
lods
loop
mov
or
scas
loop
scas
loop
mov
sub
mov
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
add
sub
mov
sub
(bad)
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
sub
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
sub
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
mov
or
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
or
(bad)
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
or
(bad)
loop
lods
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
lods
loop
lods
loop
mov
sub
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
or
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
stos
loop
mov
or
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
or
scas
loop
lods
loop
mov
or
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
add
or
scas
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
mov
sub
add
sub
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
or
sub
(bad)
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
add
or
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
lods
loop
scas
add
sub
loop
mov
or
lods
loop
scas
loop
mov
or
loop
scas
loop
mov
sub
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
add
or
loop
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
or
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
loop
scas
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
mov
or
mov
or
lods
loop
lods
loop
scas
loop
stos
loop
scas
add
or
lods
loop
mov
or
scas
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
mov
or
lods
loop
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
add
sub
lods
loop
mov
sub
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
sub
scas
loop
stos
loop
stos
loop
mov
sub
scas
loop
mov
sub
mov
or
stos
loop
lods
loop
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
add
sub
stos
loop
stos
loop
mov
sub
scas
loop
mov
or
mov
sub
(bad)
loop
stos
loop
mov
or
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
stos
loop
mov
sub
sub
(bad)
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
add
sub
stos
loop
mov
or
mov
or
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
add
or
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
or
mov
sub
(bad)
loop
mov
sub
loop
mov
sub
mov
sub
scas
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
loop
scas
add
sub
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
mov
sub
mov
or
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
mov
or
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
mov
sub
mov
or
(bad)
loop
scas
add
or
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
or
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
add
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
scas
loop
lods
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
add
or
stos
loop
mov
sub
mov
sub
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
mov
or
stos
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
scas
add
sub
lods
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
add
or
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
mov
or
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
or
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
add
or
(bad)
loop
mov
or
stos
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
mov
or
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
mov
sub
loop
mov
sub
scas
add
or
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
scas
add
or
mov
or
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
mov
or
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
loop
(bad)
loop
lods
loop
stos
loop
scas
add
sub
loop
scas
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
mov
or
scas
loop
mov
sub
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
loop
mov
or
lods
loop
scas
add
or
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
or
loop
scas
loop
mov
sub
loop
scas
loop
mov
or
stos
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
or
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
add
sub
loop
mov
sub
scas
loop
stos
loop
scas
loop
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
scas
add
sub
(bad)
loop
(bad)
loop
stos
loop
stos
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
sub
mov
or
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
lods
loop
mov
or
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
add
or
scas
loop
lods
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
add
sub
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
mov
sub
lods
loop
mov
sub
mov
sub
mov
sub
loop
scas
loop
mov
sub
loop
scas
add
sub
lods
loop
stos
loop
mov
or
mov
or
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
or
mov
sub
or
scas
loop
stos
loop
mov
sub
loop
lods
loop
mov
or
mov
sub
loop
lods
loop
scas
loop
mov
sub
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
scas
loop
scas
loop
scas
add
or
stos
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
mov
or
loop
stos
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
sub
lods
loop
mov
sub
loop
mov
sub
mov
or
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
sub
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
sub
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
mov
or
mov
sub
lods
loop
mov
sub
sub
mov
sub
stos
loop
stos
loop
mov
sub
loop
stos
loop
mov
sub
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
or
scas
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
scas
add
sub
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
or
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
add
sub
(bad)
loop
(bad)
loop
scas
loop
stos
loop
mov
or
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
or
scas
loop
(bad)
loop
mov
sub
mov
sub
scas
loop
lods
loop
scas
loop
mov
or
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
mov
or
scas
loop
(bad)
loop
mov
sub
(bad)
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
scas
loop
mov
sub
lods
loop
stos
loop
mov
sub
scas
loop
scas
add
sub
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
scas
loop
mov
sub
mov
or
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
mov
sub
scas
add
sub
mov
or
mov
sub
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
scas
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
add
sub
scas
loop
stos
loop
scas
loop
mov
or
mov
or
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
mov
or
mov
or
scas
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
sub
sub
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
mov
or
scas
loop
stos
loop
scas
add
or
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
add
sub
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
scas
loop
mov
sub
stos
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
add
sub
stos
loop
mov
sub
scas
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
sub
mov
sub
sub
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
(bad)
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
mov
or
loop
stos
loop
mov
sub
mov
sub
or
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
add
sub
mov
sub
scas
loop
lods
loop
lods
loop
mov
or
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
add
or
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
mov
or
scas
loop
(bad)
loop
scas
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
mov
sub
lods
loop
mov
or
loop
scas
add
or
lods
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
mov
or
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
scas
add
sub
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
add
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
mov
or
(bad)
loop
(bad)
loop
scas
add
sub
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
add
push
loop
mov
sub
stos
loop
mov
sub
mov
sub
mov
sub
mov
sub
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
scas
loop
scas
add
sub
lods
loop
mov
sub
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
or
scas
loop
mov
sub
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
add
sub
(bad)
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
add
or
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
loop
lods
loop
lods
loop
mov
or
stos
loop
scas
loop
stos
loop
(bad)
loop
mov
or
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
scas
loop
(bad)
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
add
sub
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
scas
loop
mov
or
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
ins
gs
jb
outs
outs
add
or
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
sub
stos
loop
mov
or
scas
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
scas
add
sub
lods
loop
mov
or
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
add
sub
lods
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
mov
or
mov
sub
stos
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
sub
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
or
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
mov
or
mov
sub
sub
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
mov
or
mov
sub
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
add
je
popa
jb
ins
gs
jb
add
push
gs
fs
jns
add
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
outs
popa
add
dec
outs
jbe
imul
add
gs
arpl
gs
jns
add
inc
gs
ins
gs
outs
je
jns
add
gs
je
imul
add
je
add
js
push
jb
je
add
push
ins
gs
data16
je
push
push
inc
cmp
addr16
inc
jne
ins
dec
popa
ins
add
inc
gs
gs
outs
add
ja
inc
popa
imul
add
jne
addr16
push
jns
je
ins
cs
imul
imul
pop
dec
jae
je
popa
arpl
add
dec
outs
addr16
gs
dec
jae
ins
imul
pop
dec
outs
addr16
add
sub
stos
loop
mov
sub
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
add
or
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
push
inc
je
jb
bound
gs
sub
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
mov
or
loop
mov
or
stos
loop
scas
loop
stos
loop
scas
add
sub
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
mov
or
stos
loop
(bad)
loop
mov
or
scas
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
scas
add
sub
lods
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
mov
or
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
add
sub
loop
mov
sub
scas
loop
scas
loop
mov
sub
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
add
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
je
inc
outs
je
jns
outs
imul
jb
add
jb
je
arpl
inc
imul
jb
bound
arpl
jns
je
ins
cs
jne
je
ins
gs
outs
outs
jae
jb
imul
arpl
imul
pop
inc
jne
jb
outs
je
push
add
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
jo
inc
jno
popa
ins
imul
sub
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
sub
loop
scas
loop
lods
loop
mov
or
scas
loop
(bad)
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
add
xor
xor
inc
inc
xor
cmp
inc
inc
xor
inc
inc
inc
inc
xor
xor
inc
xor
xor
xor
cmp
xor
xor
inc
inc
cmp
inc
xor
xor
inc
xor
inc
cmp
cmp
xor
inc
arpl
popa
je
jb
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
outs
outs
jbe
jb
imul
outs
arpl
add
inc
jno
popa
ins
jae
jae
je
dec
jae
popa
arpl
jb
jne
add
popa
add
imul
gs
add
outs
ins
jo
jb
bound
addr16
dec
popa
ins
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
gs
sub
mov
or
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
mov
sub
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
mov
sub
loop
scas
loop
scas
add
sub
lods
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
mov
sub
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
or
mov
sub
lods
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
scas
add
cmp
inc
je
jb
bound
add
add
and
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
add
push
sbb
sub
push
adc
add
add
pop
add
add
adc
adc
adc
pop
adc
adc
adc
adc
add
add
add
add
sbb
add
adc
add
add
sbb
add
adc
adc
or
adc
push
or
add
xor
adc
add
add
push
add
push
add
sbb
add
sbb
and
sbb
add
sbb
add
add
add
xor
add
adc
adc
add
add
cmp
add
add
cmp
add
cmp
add
add
cmp
add
adc
add
add
or
add
add
cmp
pop
or
dec
sbb
or
or
adc
or
add
and
add
add
dec
push
add
sbb
pop
or
or
or
adc
sbb
or
or
sbb
or
add
adc
or
adc
add
add
add
sub
or
adc
adc
add
add
pop
push
adc
add
add
or
or
push
add
adc
or
sbb
pop
add
adc
adc
or
or
push
add
sbb
or
pop
or
pop
or
push
add
sbb
or
add
popa
add
add
add
imul
sbb
imul
add
add
add
or
adc
sbb
or
add
or
or
pop
add
or
add
sbb
adc
add
adc
pop
add
or
dec
or
push
or
or
or
add
add
or
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
or
and
add
dec
adc
pop
adc
sub
or
or
or
or
or
or
add
adc
dec
or
or
pop
or
or
or
or
add
or
push
adc
push
and
or
adc
add
sbb
add
or
add
add
adc
or
adc
or
add
add
and
add
dec
add
or
add
add
or
and
add
push
adc
add
sbb
adc
adc
or
add
adc
sub
adc
or
adc
pop
add
sbb
pop
add
sbb
sub
adc
or
adc
add
adc
add
add
sub
add
push
adc
pop
add
adc
pop
pop
or
or
sbb
and
sbb
adc
adc
add
add
or
or
or
or
or
and
or
adc
add
push
add
add
pop
or
jne
or
sbb
and
adc
add
add
push
add
pop
push
or
or
push
add
and
sbb
sbb
add
add
pop
pop
or
jns
or
or
adc
push
or
add
sub
add
add
or
pop
push
or
jns
or
and
adc
or
add
adc
push
add
add
push
or
or
sbb
and
push
sbb
adc
push
push
push
add
or
pop
push
or
or
or
or
or
add
or
or
or
or
or
or
and
add
adc
push
add
add
add
pop
push
or
or
add
add
add
or
or
sbb
or
or
add
adc
add
adc
push
add
add
or
add
push
push
add
add
push
or
add
xor
or
or
pop
or
and
or
sbb
and
adc
push
adc
add
push
add
or
or
or
or
or
adc
add
push
add
add
or
add
or
or
add
add
or
pop
push
or
or
sbb
adc
add
push
add
add
pop
pop
or
or
or
sbb
or
adc
add
push
add
or
add
add
add
adc
pop
or
or
sbb
adc
add
add
xor
adc
add
add
sbb
adc
add
push
add
add
or
or
sbb
adc
add
push
pop
or
adc
or
add
adc
add
add
or
pop
or
or
or
add
add
push
or
add
push
add
add
push
add
adc
adc
adc
add
push
add
pop
pop
or
or
or
or
add
adc
or
or
push
add
push
add
or
push
or
push
or
sbb
add
push
push
add
add
push
add
add
sbb
adc
add
push
add
add
or
pop
pop
or
or
or
add
add
adc
add
push
add
add
pop
and
or
adc
push
or
add
push
or
pop
or
and
add
adc
push
add
push
add
add
push
or
add
push
push
add
push
or
pop
or
and
add
push
push
add
push
add
adc
add
push
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
push
inc
ins
ins
dec
outs
jns
and
jne
gs
push
gs
imul
add
bound
imul
adc
jo
jb
addr16
and
xor
xor
add
sub
add
aaa
arpl
xor
xor
sub
sub
sub
bound
xor
popa
add
adc
add
xor
xor
xor
xor
add
push
add
adc
add
add
add
add
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
