sbb
add
jl
repnz
xchg
int
add
popa
mov
mov
mov
dec
cmps
call
imul
enter
lahf
test
jns
mul
fld
cmp
sbb
add
jg
or
out
cmps
jne
and
fisubr
fs
xchg
or
jae
mov
inc
cmps
sahf
xlat
cmc
sbb
repnz
xor
in
mov
cs
aaa
mov
cld
dec
inc
mov
inc
cmp
sub
cmp
outs
loop
inc
loopne
lods
adc
cmps
jge
mov
mov
mov
adc
mov
mov
call
lock
mov
stc
int3
add
pushf
pop
push
jmp
cmp
in
mov
lock
loop
adc
lahf
mov
leave
pop
test
out
xchg
push
add
and
push
jno
pop
test
js
jle
pop
cmps
or
dec
push
aad
in
movs
or
push
ror
mov
pop
push
sub
sbb
shr
hlt
jno
sub
cdq
movs
jmp
mov
in
lds
lods
das
and
xchg
jns
mov
push
fisttp
enter
add
fiadd
push
dec
mov
adc
mov
sub
xor
(bad)
push
ds
js
push
xchg
shl
shr
cmp
add
rol
test
(bad)
(bad)
mov
call
mov
popa
popa
and
popf
ja
ins
sbb
mov
fst
mov
pop
(bad)
jmp
jbe
sub
pop
xlat
jg
adc
aad
or
sub
outs
out
mov
mov
push
mov
bt
stos
push
test
cmp
pop
xchg
loop
and
sbb
and
dec
mov
xchg
aaa
adc
fdivp
inc
xchg
mov
sbb
bound
(bad)
jbe
inc
imul
jmp
(bad)
out
sti
add
sub
and
pop
lea
scas
sub
in
lock
push
ins
(bad)
mov
cmp
ins
ss
jp
inc
mov
sbb
add
mov
mov
sbb
inc
loope
inc
arpl
dec
mov
sub
dec
les
dec
xchg
imul
cwde
mov
repz
hlt
arpl
stos
inc
ret
mov
add
test
test
sbb
out
mov
sbb
mov
sbb
inc
call
mov
icebp
rol
push
sbb
in
or
xor
std
imul
fs
and
mov
fldenv
enter
in
stos
and
and
inc
popa
push
push
sub
rcl
mov
add
fsub
rcl
cmp
fcmovb
mov
mov
lods
mov
popf
(bad)
jge
jg
cmp
sub
into
mov
jne
mov
sub
push
mov
out
fmul
int
imul
xchg
push
xor
jns
cmp
icebp
cmp
int3
push
scas
cld
out
hlt
xchg
loopne
push
loop
js
xor
or
scas
xchg
sbb
xlat
test
mov
sar
ror
aam
jl
lods
xor
or
and
cs
loope
mov
sbb
mov
xchg
inc
xchg
fs
pop
mov
add
mov
sbb
mov
mov
push
aad
xor
out
jb
lods
scas
dec
push
push
mov
pop
xor
call
cli
enter
mov
sbb
adc
mov
sbb
test
jae
xchg
das
call
push
and
loopne
ins
push
cld
iret
clc
loop
add
(bad)
das
cmp
pop
gs
mov
sub
jge
xor
ds
add
adc
xchg
fcmovnbe
and
sti
out
xor
mov
pop
movs
jle
sub
xor
cmc
cmps
loop
test
sbb
in
xchg
xor
pop
dec
ror
test
movs
sar
mov
cmps
lods
sub
adc
dec
jb
movs
popf
(bad)
sahf
cmp
pop
das
and
add
or
test
add
mov
dec
dec
fisub
loope
ds
cs
adc
scas
fsubp
mov
bnd
push
aam
(bad)
aam
mov
mov
cmp
adc
movs
jmp
cmps
jmp
xlat
ret
pop
lock
sbb
sub
ret
shl
mov
fld
mov
add
mov
jp
ret
sbb
mov
rcl
popf
dec
mov
xor
jbe
jmp
mov
sub
sub
or
pop
cmp
popa
pop
adc
mov
mov
pop
(bad)
int3
sub
cmp
and
clc
adc
mov
sub
xchg
aam
test
mov
add
jb
mov
fidivr
cdq
pop
xchg
add
stos
test
div
push
movs
cmp
sub
mov
repz
push
mov
rol
mov
mov
lds
pop
in
repnz
por
rcl
add
dec
mov
or
mov
adc
popa
dec
cmc
inc
dec
add
imul
add
std
(bad)
in
mov
int3
push
inc
idiv
imul
(bad)
jbe
(bad)
sub
out
je
arpl
cs
out
ret
js
bswap
add
pop
cli
iret
push
pop
or
cmc
stos
hlt
sti
pop
jl
daa
adc
shl
inc
xchg
mov
out
mov
mov
lods
lahf
cmp
jge
nop
xchg
rcr
arpl
out
mov
retf
push
les
adc
ret
adc
cmp
jecxz
mov
mov
ins
mov
push
and
(bad)
repnz
(bad)
cmp
pusha
fs
cmps
hlt
arpl
int3
je
xor
push
movs
cmp
sbb
ss
jg
add
movs
icebp
add
jb
dec
(bad)
out
mov
movs
outs
lock
test
jbe
fist
shr
lea
(bad)
ret
lds
dec
(bad)
xchg
add
push
xchg
(bad)
bound
add
xchg
(bad)
lea
xor
cs
ins
mov
data16
stc
jae
cwde
(bad)
push
out
das
pop
and
(bad)
mov
mov
cmp
fcmovnu
add
and
mov
push
rcl
or
idiv
push
mov
adc
(bad)
loope
jmp
cmps
pop
pop
jb
outs
jg
pop
aad
push
or
inc
ja
add
xchg
pop
dec
icebp
jge
arpl
sbb
jb
and
nop
add
jg
fwait
jb
sti
imul
movs
mov
popf
push
xor
mov
cdq
retf
mov
test
inc
(bad)
pop
(bad)
fsubr
in
jb
jmp
rcr
cmps
sbb
sub
mov
jb
push
cld
aam
xor
aad
xchg
rcr
pop
pop
sti
dec
xchg
add
lea
pop
sub
popa
pop
jnp
jb
mov
iret
and
ficom
jmp
neg
scas
and
popaw
imul
jns
dec
inc
sub
(bad)
mov
fld
xchg
lea
mov
mov
fs
add
inc
pop
xor
and
mov
jecxz
mul
imul
jmp
xchg
push
jmp
and
ret
jge
popf
test
push
ret
int
and
test
cwde
sbb
sub
retf
sbb
dec
sbb
mov
vphaddwd
cwde
adc
xchg
mov
xor
push
adc
into
shl
mov
fldcw
das
mov
inc
adc
ss
mov
aas
out
cwde
adc
jb
cmp
call
jbe
addr16
sbb
int
push
cmp
push
dec
sub
dec
sbb
sub
pop
daa
call
and
ja
mov
pusha
movs
rcl
bound
(bad)
(bad)
pop
dec
push
xor
call
xchg
test
mov
pop
loope
aad
in
daa
cwd
sub
icebp
fimul
shl
stc
add
imul
mov
out
sub
push
xchg
cmps
lock
aas
rcl
sbb
aas
addr16
repz
dec
adc
jmp
pop
dec
(bad)
cmps
aaa
(bad)
cmp
inc
push
scas
xchg
jno
mov
mov
add
jno
fidivr
imul
rdmsr
adc
sub
clc
lock
sar
ror
mov
mov
cmp
cmps
mov
push
jno
add
clc
add
push
or
loop
or
sbb
jp
and
push
pop
dec
xchg
in
xchg
mov
popa
scas
(bad)
sbb
mov
stos
cmp
lods
lods
test
out
jbe
push
mov
inc
rsm
dec
adc
int
sbb
lods
or
sbb
fmul
push
stc
sbb
call
ins
repnz
leave
fdivr
loop
adc
push
aam
dec
sti
ficomp
outs
dec
jl
sbb
dec
(bad)
fisub
cmps
add
add
cmp
mov
xor
add
fcmovnu
cmc
and
(bad)
dec
dec
and
and
add
add
mov
jp
push
push
push
xchg
add
(bad)
adc
movs
and
inc
xchg
(bad)
or
jecxz
shr
push
mov
das
aam
sbb
(bad)
mov
mov
out
add
xchg
in
cmp
pop
push
test
popa
or
je
aaa
sbb
jp
out
loopne
sub
cmp
mov
or
xchg
pop
inc
xchg
rol
mov
inc
mov
jle
enter
stos
ja
popa
push
sub
add
pop
jae
inc
mov
ror
sbb
cs
popa
xchg
imul
clc
push
iret
cwde
lea
adc
cmps
xchg
add
mov
ret
aad
mov
pop
and
xor
xchg
aas
stos
mov
(bad)
inc
jecxz
icebp
(bad)
sub
clc
push
outs
jno
leave
mov
jbe
mov
fmul
xor
dec
sub
sub
out
shl
mov
fldenv
lods
mov
retf
test
int
jg
jne
adc
imul
popa
jecxz
les
vpmaddwd
mov
leave
test
mov
loop
sub
ins
es
es
dec
xor
lods
jno
mov
cmp
test
js
push
(bad)
xor
mov
(bad)
cmc
mov
fcom
cmp
jo
xchg
mov
jbe
loope
mov
jmp
jle
int
xor
ret
cmp
inc
retf
xor
ret
mov
xchg
cld
retf
call
add
xor
fldenv
test
in
xor
mov
call
cmp
out
sbb
or
pop
neg
inc
mov
gs
test
invd
lods
jae
repnz
xchg
push
fcmovnb
jae
arpl
push
and
push
cmp
not
mov
sahf
aas
imul
lds
inc
fisub
les
lds
fwait
int
lea
pop
mov
arpl
out
dec
cmp
sub
addr16
push
jg
cmp
mov
sbb
ins
xor
enter
cwde
pushf
mov
ror
jle
lock
addr16
xor
retf
mov
mov
(bad)
fld
ror
fs
rcr
pop
test
dec
int
(bad)
pop
pop
xchg
pushf
into
cmp
jmp
inc
or
inc
rcl
in
ins
jbe
loopne
arpl
cli
sar
lds
fdivr
aam
mov
popf
mov
jecxz
dec
das
gs
popf
pop
mov
je
push
dec
popf
out
push
add
xchg
adc
mov
and
push
sub
mov
sbb
(bad)
dec
xor
mov
xchg
out
(bad)
pop
cmp
cs
mov
pop
jl
cmp
aaa
out
or
(bad)
mov
sbb
xor
outs
pop
lea
xchg
test
or
cmps
xor
sub
ja
jns
jmp
test
pop
out
retf
(bad)
fwait
inc
adc
sti
sti
cmp
jmp
cmp
out
enter
mov
jg
sub
gs
or
mov
add
clc
cdq
call
jp
cmp
sub
ss
das
mov
stc
add
inc
push
jp
outs
imul
nop
push
or
in
loopne
add
(bad)
stos
sub
xor
xchg
jmp
ss
stos
mov
adc
test
mov
mov
jne
jg
stos
int3
call
xor
cs
test
ror
and
cmps
mov
adc
add
mov
or
xchg
movs
outs
jno
lea
pop
push
dec
xchg
popa
or
sti
jne
and
xor
push
mov
ret
test
jae
daa
call
cwde
leave
leave
xor
das
lea
adc
xchg
xchg
int3
neg
and
retf
fucomp
mov
pusha
pop
fidivr
inc
sub
xor
add
lea
retf
jle
sub
jae
push
add
das
out
xor
push
fsubr
mov
test
mov
popa
sbb
pop
jge
shr
add
xor
inc
lahf
sbb
inc
call
fidivr
addr16
jbe
popa
jecxz
push
aas
shl
lods
push
or
sub
push
cmp
adc
es
cmps
in
inc
pushf
xor
ds
nop
xor
pop
mov
xor
push
outs
fnstenv
jb
imul
push
jo
adc
(bad)
aaa
and
pop
fwait
xor
and
hlt
xchg
gs
(bad)
(bad)
mov
dec
int
rcl
mov
shl
pop
push
xchg
or
pop
inc
xchg
mov
popf
pop
aas
adc
mov
and
es
cmp
loope
retf
out
popa
outs
mov
je
outs
movs
jmp
adc
and
fwait
(bad)
mov
adc
mov
cmp
push
imul
div
in
sub
outs
call
xchg
inc
xchg
es
(bad)
pop
mov
jno
mov
xchg
sbb
(bad)
push
or
adc
push
pop
aaa
and
popf
xchg
xlat
enter
cmp
push
adc
in
dec
jmp
jne
in
pusha
cmp
mov
xchg
pop
jno
jbe
xchg
out
pop
pop
cmps
sub
or
jmp
fwait
out
push
cmp
pop
xlat
xlat
jmp
pop
ins
nop
outs
mov
sti
fisttp
xlat
fimul
push
adc
xor
or
loopne
add
xchg
and
push
test
push
add
aas
pop
cmp
jg
adc
add
push
sub
test
mov
ret
les
push
test
push
mov
xchg
mov
inc
arpl
push
ret
cwde
shr
mov
hlt
repz
xlat
pop
iret
popf
mov
daa
fwait
fs
jle
push
push
xor
test
push
cdq
es
xchg
fwait
lods
sbb
scas
xor
out
imul
sbb
or
in
fidivr
or
ins
mov
push
xlat
ror
jge
jmp
dec
push
out
sar
mov
js
arpl
fild
mov
xchg
xlat
cmp
xchg
int
ds
and
int3
pop
and
sbb
adc
sahf
(bad)
and
mov
dec
and
leave
or
(bad)
adc
(bad)
movs
test
ret
mov
test
push
aaa
ins
mov
retf
pop
sbb
push
out
mov
mov
ret
call
inc
int
(bad)
xor
sti
imul
movs
mov
dec
lahf
mov
xor
pop
sub
push
inc
out
in
jns
popf
stos
sbb
inc
jns
clc
mov
pop
and
std
loop
int3
mov
push
mov
cmp
call
fcom
mov
jb
imul
fdiv
add
pop
mov
fwait
lods
mov
es
xchg
scas
pusha
fidivr
popa
cmps
push
xor
ds
int3
lahf
sbb
sub
adc
jbe
arpl
shl
loopne
inc
inc
mov
sub
cmp
inc
ja
pop
jl
test
mov
scas
fbld
mov
popa
out
jb
pop
mov
jecxz
fadd
xor
sub
stos
test
and
mov
pop
(bad)
sub
in
pop
orps
out
ret
add
dec
aam
ss
(bad)
add
test
adc
cs
popf
(bad)
shr
inc
dec
or
fs
fdiv
mov
into
mov
pop
shr
inc
dec
push
mov
jle
pop
cmp
fistp
xor
jp
adc
es
mov
into
aad
sub
ror
mov
or
cmps
out
call
(bad)
pop
cmp
sub
jge
stc
prefetchwt1
or
shr
and
cmp
mov
aad
push
sbb
sti
lds
cmc
aad
je
cmp
jbe
pop
fild
push
sahf
lods
in
test
(bad)
and
adc
shr
test
sbb
shl
jl
dec
retf
or
fild
xchg
jns
cmp
lods
repnz
popf
fs
push
mov
imul
jnp
xor
pop
adc
bound
and
adc
and
out
mov
rol
and
popf
mov
int
xchg
movs
or
ret
jge
jl
loopne
xlat
xchg
xchg
icebp
popf
fbstp
icebp
or
lea
jmp
jmp
mov
ret
and
pop
xchg
mov
scas
repnz
mul
mov
shl
push
jne
fisttp
inc
and
lods
test
sbb
dec
inc
or
pop
repnz
pop
pop
inc
cmps
rcr
retf
aad
and
pop
rcr
rcl
cmp
adc
mov
sahf
stos
and
outs
cmp
dec
cdq
in
xchg
xchg
and
nop
cs
mov
push
mov
or
div
data16
fisttp
xor
sub
outs
lahf
jmp
out
stos
out
add
cwde
fcomp
jno
xchg
(bad)
cmp
push
jno
jnp
pop
jp
fsub
scas
cmp
outs
push
imul
les
out
and
jmp
stos
push
jle
push
inc
stos
mov
lock
mov
xchg
loopne
mov
test
xchg
test
mul
xchg
stos
mov
pop
into
das
add
sti
aad
and
stos
sbb
inc
dec
outs
xor
cmc
in
dec
scas
(bad)
sar
push
sub
in
and
cld
sub
xchg
cmp
std
imul
pusha
outs
addr16
loopne
and
inc
dec
(bad)
push
sub
cmp
or
xchg
stc
push
add
cmp
std
jbe
(bad)
push
cs
jbe
iret
cmps
(bad)
cdq
mov
mov
sub
and
ins
dec
stc
repnz
(bad)
addr16
jb
xchg
imul
xor
pop
mov
jnp
push
sbb
mov
into
inc
mov
cs
mov
sbb
mov
in
aaa
mov
inc
jecxz
adc
jmp
test
sub
mov
pop
cmp
push
das
mov
lds
mov
ja
fsubp
xchg
mov
hlt
bound
push
push
nop
sub
jecxz
sbb
imul
mov
fdivr
push
jmp
jmp
aad
xchg
dec
jne
inc
jp
pop
cld
retf
adc
cld
jns
ja
xchg
in
jo
xlat
push
cs
inc
xchg
adc
rcl
xor
stc
pop
das
aas
push
dec
outs
add
mov
das
ds
push
inc
cmps
fcomp
xchg
jmp
push
arpl
fidivr
jp
mov
loop
repnz
popa
stc
rcr
and
cmp
jbe
out
(bad)
sbb
cmp
push
orps
mov
jo
and
push
cmp
push
push
jbe
push
mov
inc
inc
sbb
fcmovbe
imul
adc
int3
outs
dec
shl
sbb
xor
stos
add
xchg
cmp
mov
inc
in
mov
add
fsubr
sbb
pop
push
or
jo
test
xchg
add
add
out
mov
loope
jle
gs
mov
inc
and
mov
inc
mov
adc
pop
xchg
xchg
aad
jecxz
jnp
sub
arpl
jb
or
fsub
sbb
add
mov
adc
add
push
inc
jbe
xor
rcr
adc
fadd
daa
add
mov
iret
ror
int3
jp
ffreep
ins
out
and
call
std
push
mov
dec
cmp
ss
jne
cmp
lods
stos
movs
jecxz
xchg
(bad)
pop
add
jbe
fsubp
sti
pop
int3
dec
pop
push
mov
push
pop
xchg
jge
adc
bound
sub
push
jnp
lock
and
dec
call
add
push
adc
mov
push
push
inc
call
ins
jge
mov
mov
hlt
fmulp
imul
and
mov
jnp
fcmove
push
mov
mov
sbb
movs
ret
inc
xor
adc
fmul
imul
or
pop
adc
jae
je
(bad)
icebp
div
shl
cmc
sti
and
popf
sub
neg
ret
mov
jp
cmps
pop
dec
int
xchg
jmp
jmp
fs
dec
div
loop
and
pop
jns
push
jge
add
mov
mov
sbb
and
and
dec
mov
aad
push
push
cmc
sub
cmps
sbb
bound
pop
ss
bound
add
mov
call
push
inc
loopne
jg
pop
gs
fldenv
dec
pushf
pushf
push
cli
mov
je
je
inc
mov
stos
xchg
loopne
xor
jge
cmp
mov
jmp
stos
fldcw
mov
pop
add
pop
bnd
xchg
dec
fidivr
mov
adc
fbstp
ret
jge
xchg
mov
xchg
test
pushf
loope
jl
shr
pop
mov
add
into
xchg
sbb
lods
test
xchg
add
mov
cmp
jnp
xor
and
pop
mov
pop
out
stos
cmp
jns
sbb
pop
stos
xrelease
hlt
pop
rcl
mov
bound
add
je
sub
push
dec
addr16
or
add
push
sub
jmp
(bad)
xor
pop
sti
jmp
out
mov
pop
push
pop
mov
xchg
jnp
adc
aas
loopne
outs
sub
loope
jp
sub
pop
clc
push
in
dec
xor
inc
in
push
out
js
or
fdivp
or
or
scas
add
xor
mov
dec
adc
aad
xor
pop
cmp
push
out
dec
pop
ins
pop
inc
jnp
popa
ins
push
cwde
xor
sub
inc
(bad)
or
push
sbb
iret
mov
mov
push
ss
cmps
repnz
fucomip
pop
(bad)
jmp
sbb
mov
xchg
jg
xchg
mov
cmp
popa
(bad)
adc
adc
cmc
cld
xor
and
ror
shl
test
jo
scas
shl
cld
sbb
fisubr
(bad)
jmp
jmp
sar
pop
or
fcomp
int3
jmp
cwde
mov
xor
rcr
cmps
pop
in
fbstp
dec
(bad)
(bad)
sub
cmps
mov
call
mov
dec
shl
in
adc
aas
dec
pop
loope
popa
aaa
sbb
mov
jecxz
cmp
lahf
das
dec
add
cli
scas
dec
mov
jne
xor
mov
fstp
pushw
mov
cli
aad
mov
sub
pusha
xchg
aad
cmp
dec
fxch
pop
mov
xchg
jl
ret
xchg
out
popf
stos
repz
and
test
xchg
pop
sbb
cmp
dec
sti
sbb
adc
sub
retf
scas
ror
dec
call
repnz
enter
cdq
jge
jmp
and
jge
(bad)
cwde
sub
xor
mov
add
aad
fsub
int3
lods
retf
pop
jecxz
dec
(bad)
loopne
add
sar
cwde
fild
stos
pop
jmp
cwde
xor
sub
js
rcr
movs
test
pop
adc
test
fisubr
jne
sub
fsubr
repz
dec
test
and
jne
jae
(bad)
retf
mov
stos
loop
shl
push
aam
and
nop
push
retf
jo
and
sahf
clc
lahf
lahf
cdq
cli
jbe
inc
icebp
jmp
ins
iret
jnp
rcl
mov
inc
inc
xchg
out
js
sbb
into
jmp
mov
std
jne
dec
jmp
sbb
lods
lods
aam
shl
inc
sahf
sub
jmp
cmp
cli
icebp
repz
out
test
pop
retf
stos
cmps
or
iret
stos
outs
xchg
xlat
cdq
(bad)
clc
imul
cmp
jae
(bad)
pop
mov
shr
mov
sub
inc
dec
into
fs
stos
push
sub
push
mov
pop
(bad)
shr
(bad)
fcom
pop
repnz
out
xor
or
mov
and
or
xchg
nop
mov
inc
fld
pop
ror
jnp
(bad)
jae
sub
gs
xchg
test
inc
fmul
sub
mov
aas
push
adc
mov
cs
and
inc
ret
adc
adc
sub
icebp
fcmovnu
ja
sbb
add
or
push
test
xchg
jae
scas
and
sar
dec
addr16
cmp
ret
(bad)
(bad)
xor
lods
aam
cmp
xor
mov
rcl
gs
add
icebp
adc
in
fsub
fs
and
dec
loope
fsub
inc
adc
jp
rcr
jge
xchg
and
aad
shl
push
and
sub
and
push
out
fisttp
ror
lea
adc
or
clc
adc
xchg
ds
xchg
add
dec
add
pop
je
cmc
jge
les
rcr
hlt
lock
outs
inc
shr
and
cmps
or
jmp
push
jae
xlat
cwde
cli
mov
js
in
mov
jp
or
int3
push
das
mov
sahf
dec
sub
sbb
jmp
mov
add
gs
mov
fs
jl
xchg
das
xchg
fnstsw
mov
jle
dec
mov
call
pop
sub
jmp
sub
(bad)
or
and
adc
daa
(bad)
sti
xchg
jmp
jl
popa
mov
aam
push
or
pop
cmp
lahf
pop
int
adc
xchg
mov
fwait
outs
mov
arpl
sbb
ja
ds
push
dec
pop
add
aas
inc
loopne
in
inc
xor
nop
pushf
pushf
or
jmp
sahf
mov
dec
xor
adc
call
sti
mov
out
sub
pop
and
lea
cmps
mov
je
jl
inc
xchg
add
mov
cmp
xchg
adc
sbb
int
daa
out
mov
(bad)
cmp
xor
das
dec
mov
sbb
inc
pop
call
jp
mov
pop
lods
mov
or
jmp
xlat
jp
mov
xor
jle
ret
mov
jecxz
push
enter
popf
pop
push
daa
add
sbb
in
sbb
xor
or
or
mov
jmp
or
fnstsw
xchg
rol
iret
mov
dec
mov
and
jnp
jg
push
in
xor
retf
push
inc
cmp
push
gs
mov
test
pop
mov
inc
pop
enter
sbb
mov
lods
ret
and
adc
xchg
iret
adc
popf
cmovg
and
inc
add
cmps
sahf
out
cmp
(bad)
ret
pop
xor
je
retf
mov
pop
cdq
ret
adc
fist
ret
popf
pusha
dec
xchg
add
test
dec
xlat
push
xor
pop
fstp
sti
stc
inc
dec
cmps
aad
add
mov
mov
mov
aad
scas
sub
cdq
lahf
(bad)
or
test
sbb
fs
imul
and
sbb
inc
jb
std
sub
test
push
push
scas
(bad)
arpl
cwde
mov
dec
outs
test
dec
mov
fst
push
cmp
outs
ja
jns
faddp
mov
and
jne
sub
mul
push
push
sub
mov
and
or
loopne
gs
pop
xchg
or
test
mov
or
push
mov
jg
fidiv
cmp
add
fmulp
mov
mov
js
call
and
stos
iret
lods
push
cmps
dec
xchg
mov
(bad)
out
aad
test
xor
mov
adc
bound
push
mov
or
mov
or
imul
sti
jecxz
dec
xor
lahf
inc
sbb
out
push
push
mov
std
cmc
clc
data16
mov
inc
add
jle
xlat
test
iret
xchg
mov
sbb
sbb
and
test
test
push
test
ror
mov
dec
mov
es
xchg
cmps
movs
jmp
inc
icebp
mov
dec
cmps
(bad)
mov
(bad)
fst
sahf
adc
and
push
loop
add
loop
jns
mov
not
pusha
shl
aad
xor
sub
fld
cmps
add
adc
adc
xchg
fdiv
sbb
push
loopne
cwde
jg
call
inc
outs
xchg
or
addr16
push
adc
fistp
mov
push
cmp
jp
push
fwait
sbb
mov
inc
ret
out
les
dec
fisubr
jbe
dec
xor
dec
pop
dec
pop
and
int
push
push
fisttp
icebp
and
scas
mov
into
mov
xor
(bad)
and
jne
add
out
add
pop
sahf
daa
cmp
mov
push
(bad)
int
inc
out
xor
xor
repz
idiv
or
mov
inc
lods
mov
mov
mov
(bad)
stos
adc
xchg
xchg
jmp
sub
call
push
pop
and
adc
movs
sub
push
dec
int
sbb
sbb
imul
pop
and
jmp
push
or
mov
mov
lods
in
jmp
ficom
xlat
sbb
xchg
int3
xor
pop
retf
jns
mov
jb
cmp
cmc
pop
int3
test
inc
fld
pop
popa
pop
pop
dec
pop
push
leave
push
jmp
jmp
cld
call
clc
mov
(bad)
xchg
stc
xlat
mov
sub
sub
mov
cmp
jmp
movs
movs
xor
(bad)
fsubp
push
iret
(bad)
icebp
push
setp
sub
add
xchg
stc
add
fnstsw
xchg
push
test
xchg
dec
test
xchg
hlt
xchg
mov
outs
mov
out
jmp
rcr
ficomp
push
push
cmps
aaa
push
pushf
popa
mov
nop
sbb
(bad)
mov
mov
sti
repnz
sub
xchg
jae
sub
int3
aaa
xor
push
inc
icebp
pop
lock
enter
or
call
ins
push
dec
imul
xor
cmp
inc
xor
sbb
cmp
xor
sbb
(bad)
shl
ja
cmp
ins
xor
stos
xchg
add
repnz
push
adc
test
retf
inc
inc
bound
mov
push
mov
pushf
scas
cmp
add
mov
add
popa
icebp
lahf
push
in
add
movs
mov
mov
xchg
cmp
xchg
daa
mov
iret
sub
add
(bad)
rcl
stos
lds
imul
lahf
cmp
cmp
clc
mov
(bad)
sub
push
cli
pop
cmp
addr16
jo
xchg
(bad)
xchg
mov
sub
daa
cmp
pushf
pop
dec
cmc
push
pop
push
fcmovu
sbb
dec
cmp
mov
mov
mov
jmp
rcl
mov
into
leave
enter
adc
mov
mov
in
jl
xchg
movs
adc
outs
lods
xlat
sbb
mov
jl
clc
add
nop
xlat
jp
daa
arpl
rep
jg
js
xchg
cmp
mov
inc
int
mov
(bad)
fsubr
sub
or
test
cmp
add
in
aas
and
inc
push
mov
mov
hlt
mov
in
clc
movhps
mov
(bad)
sub
dec
(bad)
das
loope
fsubr
dec
xor
es
push
(bad)
jae
icebp
shr
call
dec
sub
retf
dec
mov
push
out
popf
push
mov
push
lock
xor
ret
jno
jle
lds
test
pop
popa
in
sar
loopne
int
cli
push
jmp
add
pop
test
xchg
cmp
int3
and
idiv
and
or
push
xlat
xchg
and
add
addr16
jnp
sbb
push
and
icebp
mov
call
lock
addr16
stc
aaa
pop
ror
jp
lock
mov
stos
aaa
aad
(bad)
js
xchg
(bad)
pop
nop
adc
enter
daa
idiv
mov
pop
jnp
test
nop
stos
int
xor
pop
push
or
jb
pop
push
dec
(bad)
pop
sar
cmps
mov
jb
push
push
mov
sub
fisubr
dec
pop
cmp
sub
jg
cld
mov
js
jae
call
and
fwait
fs
cmp
ficomp
push
adc
fisubr
xor
add
dec
dec
pop
sub
popf
shl
mov
xchg
(bad)
or
int
js
sbb
scas
or
jl
ins
sub
into
mov
pop
aaa
call
mov
aad
std
pushf
cld
ffree
outs
inc
jb
sahf
inc
mov
jb
sti
(bad)
shl
xchg
sub
dec
jmp
push
ja
out
out
ss
xor
stos
movs
pop
sub
mov
mov
and
rol
jno
inc
add
dec
push
ret
cs
pop
mov
daa
adc
sti
in
mov
fild
mov
adc
inc
enter
sub
sbb
shl
es
in
xchg
push
and
fcomp
xor
in
(bad)
call
int
mov
mov
cli
xchg
test
push
pop
call
loop
js
iret
test
add
idiv
dec
(bad)
mov
pushf
pop
mov
inc
add
cmps
les
aas
out
outs
cdq
js
cmp
add
test
mov
sbb
sahf
xor
ss
pop
clc
popa
hlt
or
pushf
sub
(bad)
push
mov
adc
or
mov
mov
(bad)
fnstsw
iret
xchg
adc
out
fwait
(bad)
mul
dec
xchg
cmp
(bad)
stc
add
cdq
xor
inc
xor
mov
push
test
nop
sub
lds
(bad)
mov
inc
pop
int3
arpl
lods
out
lahf
retf
and
push
lahf
sahf
mov
lea
xor
inc
icebp
inc
jno
retf
lods
cmc
xor
mov
neg
and
in
(bad)
retf
popa
inc
ror
cmc
ret
shl
jb
sbb
outs
(bad)
mov
jne
fwait
sbb
bound
dec
pop
xchg
ss
leave
hlt
mov
xor
or
ins
jecxz
fistp
addr16
in
aad
int
dec
enter
sbb
jecxz
bound
ja
hlt
mov
add
cmc
fsubp
sub
mov
cs
fsubr
enter
rol
lods
dec
and
out
sti
pop
mov
cmp
mov
xchg
into
in
in
jb
jns
jle
adc
push
mov
xor
pop
xchg
mov
loop
xchg
pop
loope
loop
push
lock
adc
jle
cmc
imul
ja
cld
inc
jmp
sbb
ret
icebp
imul
and
mov
pop
mov
shr
add
push
data16
clc
in
mov
mov
jae
ins
popa
ss
mov
cmp
lods
jmp
dec
jecxz
int
pop
pusha
mov
call
push
ret
in
imul
push
jo
test
xchg
in
and
into
shr
ficom
stos
xor
xchg
sub
sbb
mov
(bad)
inc
mov
mov
test
mov
stos
mov
vpsubb
xchg
xchg
in
push
xchg
scas
pushf
jns
mov
add
test
pop
inc
dec
push
retf
push
out
push
and
dec
cmp
xchg
je
and
add
ror
aas
xor
jbe
shl
xor
mov
ss
xor
outs
sbb
int3
xchg
test
pop
sahf
ins
sub
xchg
push
jne
mov
in
mov
jmp
test
hlt
xor
push
jg
and
jmp
fild
xchg
or
add
fist
ror
sub
inc
addr16
xchg
sub
imul
repnz
sub
add
or
out
std
mov
mov
dec
pop
leave
add
or
push
jbe
jecxz
xchg
xchg
push
sub
je
sahf
repnz
inc
cmc
dec
mov
lods
(bad)
jb
cmp
pop
add
out
pextrw
retf
lods
adc
(bad)
mov
pop
shl
push
dec
jmp
loope
popf
mov
sbb
or
xchg
mov
rcr
gs
imul
mov
(bad)
out
ss
out
inc
mov
js
sub
call
dec
adc
fwait
sbb
rcl
push
dec
popa
fs
daa
pop
jne
addr16
cmp
adc
fisub
sub
jbe
mov
add
jnp
sti
test
jmp
call
test
mov
mov
push
cmp
loope
adc
cmp
mov
cmps
iret
das
test
ins
das
push
out
mov
mov
jl
push
inc
or
lock
mov
repnz
neg
add
dec
mov
xchg
sub
retf
ja
jp
cmps
enter
icebp
push
mov
ja
lahf
mov
fcomip
cs
cmp
fcom
leave
test
push
aad
loope
inc
into
add
push
pop
inc
adc
sar
nop
test
sar
jno
add
dec
call
cmp
push
xchg
maxps
mov
xchg
add
mov
pop
sahf
movs
xor
mov
out
push
pop
jp
jno
daa
imul
jb
jo
shl
mov
js
jne
push
sub
sbb
jb
xor
leave
lods
cmc
cdq
push
dec
imul
inc
push
xchg
mov
mov
shl
cs
jns
(bad)
cmp
ins
mov
(bad)
js
sbb
icebp
push
ja
jnp
enter
xchg
adc
in
test
shl
mov
mov
dec
addr16
das
xlat
test
outs
mov
jg
mov
cli
cdq
xchg
xchg
call
adc
push
mov
pusha
xor
fidiv
jecxz
and
fisub
test
push
mov
lods
(bad)
loopne
sbb
sbb
fmul
sub
jns
add
les
add
fst
xrelease
inc
sub
jecxz
inc
daa
sahf
cmps
sbb
and
(bad)
dec
mov
lahf
lds
inc
in
psubq
mov
xchg
push
(bad)
fcmovnb
push
add
(bad)
nop
jl
push
push
mov
fisub
(bad)
scas
std
and
cwde
sub
xchg
outs
inc
aam
push
rcpps
stc
pop
push
or
sub
mov
inc
cs
daa
pop
xchg
(bad)
jb
retf
sub
push
out
in
fst
push
jno
lahf
aaa
fs
push
lods
inc
call
push
mov
inc
xor
add
(bad)
fimul
cmp
js
or
(bad)
stc
adc
inc
inc
shr
sbb
not
jmp
cmp
xchg
nop
cld
jge
pop
pop
fidiv
mov
xchg
movs
gs
pop
addr16
xor
mov
call
dec
movs
dec
mov
in
out
mov
adc
jg
dec
pop
aad
pop
mov
mov
aas
mov
jp
cmps
movs
push
lea
cwde
or
fimul
imul
out
fild
mov
cmps
lds
jo
pop
and
call
xchg
sahf
imul
ins
cli
xchg
movs
cmp
pop
sub
inc
push
into
mov
adc
push
sahf
in
xchg
scas
jo
(bad)
cmp
stos
inc
jl
inc
mov
xchg
adc
mov
dec
mov
lahf
in
or
xchg
sub
ins
cmp
xchg
and
mov
xor
adc
xor
lahf
adc
push
push
mov
inc
sbb
adc
and
pop
sub
pop
xor
jl
aad
cmp
push
inc
adc
hlt
mov
ja
pop
sub
cld
retf
and
mov
and
mov
sbb
mov
popf
adc
idiv
cdq
pop
mov
push
ret
pushf
xor
repnz
jmp
mov
mov
mov
mul
(bad)
jecxz
add
stc
mov
dec
fpatan
shl
mov
mov
adc
mov
lea
dec
imul
mov
enter
dec
int
add
mov
mov
mov
iret
out
int3
and
cs
inc
pop
into
xor
dec
sub
imul
or
les
cmp
lds
ins
ins
mov
(bad)
sbb
fist
std
xor
outs
outs
jecxz
jns
into
inc
xor
lods
dec
mov
cli
daa
(bad)
rol
jecxz
pop
movs
sub
pop
out
jnp
clc
in
imul
sub
mov
jno
fld
push
aas
pop
pop
adc
adc
int
jge
rol
cmp
mov
ror
add
nop
ret
sub
fistp
push
ret
mov
jle
(bad)
hlt
clc
mov
dec
mov
sar
xor
cmps
sbb
dec
sbb
dec
jne
repz
push
mov
jp
je
and
jecxz
cli
js
out
ficom
cs
fstp
pop
and
daa
les
jle
or
sbb
jmp
push
jg
add
cmp
sar
call
neg
repnz
push
(bad)
test
and
xor
dec
adc
and
mov
rol
pop
push
xor
add
ret
test
and
out
imul
scas
mov
inc
mov
add
dec
push
jnp
hlt
adc
adc
mov
dec
test
dec
xchg
cmp
rcr
push
push
xchg
or
hlt
fsubrp
lahf
mov
fcom
je
fisub
fstp
int3
clc
retf
mov
enter
push
test
jnp
sub
lea
scas
adc
xor
and
sbb
lods
xor
ret
jmp
ds
out
push
test
js
movs
retf
jge
inc
pop
xchg
jns
add
scas
lahf
(bad)
jge
lea
or
movs
and
jmp
icebp
xchg
sbb
add
jne
dec
or
aas
jb
popf
outs
mov
xor
mov
aaa
push
sub
xchg
or
dec
jnp
neg
mov
mov
inc
lock
ret
int3
fs
fsubr
in
dec
inc
sub
outs
bound
or
repnz
dec
dec
fsub
add
aaa
shl
sbb
fisttp
sub
add
and
mov
jg
dec
enter
jne
call
pusha
jmp
arpl
es
cmp
adc
out
adc
in
fmul
(bad)
out
add
mov
aad
dec
pop
shl
stos
adc
adc
daa
sub
(bad)
mov
lds
(bad)
push
and
data16
xchg
adc
(bad)
fld
xchg
nop
sar
into
out
adc
test
jno
cmp
out
jne
sbb
in
scas
repz
sbb
scas
iret
ds
iret
ficomp
mov
mov
cld
movq
push
nop
pop
test
pop
stos
add
mov
stos
inc
neg
lock
jecxz
int3
out
push
into
dec
fadd
mov
div
gs
(bad)
(bad)
cld
cwde
popa
(bad)
outs
clc
lds
mov
jbe
fistp
mov
cmp
les
mov
lods
pop
push
cli
test
aas
and
popa
lds
xor
daa
cmp
cmps
jmp
inc
mov
mov
xlat
mov
mov
mov
inc
inc
das
(bad)
and
outs
xchg
sub
mov
(bad)
stos
loopne
ficom
cmps
out
or
and
cmps
clc
(bad)
int
das
scas
dec
fild
adc
pop
mov
ss
push
outs
pop
mov
xchg
aaa
stc
sub
adc
dec
push
std
or
test
fsubr
and
aam
xchg
add
dec
xchg
xchg
cmp
cmc
pop
mov
test
gs
cmp
cmp
cs
cli
shl
ds
pop
sar
outs
ds
int3
fst
cli
jecxz
cwde
add
dec
mov
test
inc
gs
sar
push
xor
scas
pusha
jg
loope
in
inc
int
test
push
lods
adc
pop
add
test
and
leave
adc
dec
(bad)
mov
cwde
pop
jge
cld
mov
cmps
adc
xor
ret
sbb
mov
push
out
xor
mov
(bad)
cmps
adc
xor
shr
jecxz
and
cmp
aas
lods
sub
inc
in
inc
add
or
pop
or
and
dec
(bad)
mov
jnp
loop
(bad)
aad
or
lock
fidivr
addr16
movs
aam
sub
or
cs
out
in
sti
mov
shl
lock
leave
mov
pop
adc
sub
jg
mov
xor
adc
fadd
mov
jle
add
in
push
out
mov
mov
test
dec
xchg
dec
ja
or
jno
inc
add
(bad)
popf
adc
cli
int
clc
lar
scas
hlt
int
dec
jb
movs
movs
mov
push
iret
mul
btr
outs
ds
jo
push
scas
mov
pop
inc
cmp
das
jnp
push
push
cmp
xor
and
cmp
jmp
or
adc
shl
cmp
scas
ror
bnd
cmp
push
(bad)
call
jns
and
cmp
test
xor
mov
xchg
jae
mov
repnz
mov
mov
test
mov
(bad)
in
pop
cld
data16
ds
dec
cmp
ret
lods
adc
push
pop
repnz
cmc
cmovne
dec
int
call
ds
daa
out
xchg
mov
and
push
xchg
fs
out
jne
stos
icebp
sub
mov
push
jbe
arpl
fild
jbe
sbb
sbb
mov
mov
movs
dec
sbb
mov
push
mov
push
cld
out
lods
pop
shl
pusha
cmp
outs
std
mov
cmp
hlt
or
je
adc
int3
push
rol
cs
inc
or
fcmovb
jmp
ins
mov
test
repz
daa
imul
xchg
jnp
dec
cs
imul
inc
sar
rcl
jae
cmp
icebp
cwde
ret
outs
call
cmps
sub
gs
ins
cli
in
or
xchg
adc
fbstp
or
mov
mov
ror
adc
add
sahf
inc
pop
retf
lea
bound
aad
push
iret
addr16
sbb
push
push
or
xlat
mov
xor
pop
and
push
add
pop
lods
sbb
mov
fild
ins
push
sub
lock
adc
jb
sbb
dec
fstp
add
add
or
je
jl
push
hlt
dec
jg
add
jmp
inc
outs
pop
loopne
xchg
inc
sbb
jmp
and
add
fisttp
push
adc
mov
pop
or
fs
xor
nop
int
idiv
inc
iret
pop
lea
mov
pop
jecxz
mov
mov
jmp
xchg
arpl
arpl
daa
enter
fadd
out
push
mov
dec
ja
dec
enter
xor
into
mov
and
fmul
imul
popf
adc
std
mov
add
into
gs
enter
daa
xchg
pop
or
mov
and
mov
rcr
stos
arpl
push
les
jbe
mov
or
pop
add
mov
loope
xchg
pop
cmp
mov
aad
push
adc
fdivr
mov
shr
and
sahf
fs
push
int
popa
inc
inc
call
into
xor
test
std
sar
mov
mov
retf
addr16
fstp
inc
xor
dec
xchg
(bad)
mov
inc
div
sbb
ss
in
mov
and
(bad)
xchg
push
jbe
iret
dec
jb
sbb
and
sub
test
xchg
shr
nop
dec
mov
hlt
jg
hlt
mov
ficom
xor
scas
pop
add
mov
push
hlt
icebp
jmp
mov
cmovl
out
call
outs
(bad)
cmc
inc
mov
sub
pop
xor
punpckhbw
dec
rol
ss
dec
in
pop
sbb
fcmovu
mov
ror
and
les
push
loope
and
mov
push
fcom
dec
push
inc
int3
stos
nop
pop
aad
xor
jbe
cmc
dec
mov
push
dec
stos
add
aam
add
push
(bad)
adc
mov
and
pushf
xor
out
add
and
mov
mov
into
test
mov
cmp
xor
inc
loop
lock
imul
push
inc
cmp
mov
(bad)
adc
xchg
movs
test
clc
lahf
mov
mov
pusha
es
das
lods
jae
bound
sbb
inc
push
data16
clc
sub
test
push
(bad)
and
das
jg
lock
out
stc
xor
(bad)
sahf
mov
fwait
pop
int3
sahf
cmp
adc
pusha
pop
ins
loope
(bad)
push
pusha
jns
ins
push
int
(bad)
dec
mov
add
dec
stos
popf
aaa
(bad)
aad
sub
outs
mov
mov
push
sbb
adc
cmp
cwde
jecxz
int
clc
jb
sti
or
pushf
inc
dec
dec
inc
pop
retf
inc
inc
pop
cmp
stos
dec
sbb
jmp
clc
xchg
lods
mov
mov
stos
xor
cwde
pop
or
jecxz
pop
jb
jmp
js
ror
mov
mov
mov
in
push
add
mov
div
cli
inc
(bad)
stos
and
into
rol
(bad)
jne
sub
xor
push
jns
cmp
mov
bound
jae
adc
scas
ret
cwde
cmp
and
mov
mov
call
jnp
sub
add
add
dec
cmp
stos
mov
(bad)
ror
inc
(bad)
aas
loop
push
mov
mov
sar
mov
in
(bad)
stc
sub
imul
ror
push
sti
cmp
add
cmp
pop
out
pop
mov
xchg
adc
imul
loop
mov
pop
jno
xchg
push
in
mov
hlt
inc
fs
add
(bad)
inc
cmps
dec
pop
shl
rcr
in
mov
and
cmps
xor
pop
pop
mov
mov
push
stos
add
dec
jmp
mov
jno
addr16
shr
cs
scas
cmps
cmc
sbb
mov
test
in
lds
ss
das
sar
aaa
imul
and
mov
sub
movs
inc
pop
lss
mov
xor
and
sub
xor
repz
sub
cmps
rcr
mov
in
pop
jbe
ins
mov
cmp
jno
adc
imul
cld
icebp
dec
es
enter
adc
cmp
push
sti
adc
jno
sti
cli
fcom
fwait
and
adc
dec
inc
fistp
cmc
cmp
rol
(bad)
pop
fistp
add
push
sub
cmps
jnp
xchg
rcl
pop
xchg
movs
out
mov
push
jo
adc
ss
shl
and
retf
push
mov
int3
lods
or
out
shl
mov
cmp
das
int
mov
or
pop
sub
and
xchg
aad
push
or
stc
aaa
jecxz
arpl
adc
int
push
mov
mov
aad
mov
mov
cmps
dec
(bad)
ficom
mov
sar
loope
clc
dec
push
inc
mov
mov
movs
mov
cmp
add
mov
pop
xchg
loopne
jge
mov
inc
(bad)
mov
dec
mov
std
or
mov
xchg
xchg
or
or
dec
mov
std
mov
sbb
jl
ret
adc
or
and
inc
jo
je
dec
(bad)
js
mov
adc
(bad)
test
aaa
inc
push
and
aad
jge
fwait
and
ja
adc
(bad)
push
inc
rol
inc
push
add
out
call
je
outs
jne
leave
sub
addr16
inc
or
and
sahf
ret
jl
adc
sbb
and
fwait
sub
push
xor
lea
imul
in
xchg
jle
pop
loope
push
nop
xchg
popf
mov
pop
ins
sub
push
lock
mov
scas
ins
mov
inc
adc
xchg
cmp
sub
iret
inc
cdq
jl
or
and
(bad)
xor
and
retf
dec
and
jo
cmp
dec
sub
push
(bad)
push
sub
into
ins
repz
mov
lods
lds
xchg
inc
pop
fld
cwde
mov
arpl
das
(bad)
xchg
cmps
and
jb
aas
sbb
inc
fcom
mov
cmc
test
push
xchg
retf
cmc
inc
leave
ins
or
mov
jp
inc
stos
cmp
fmul
xor
out
mov
rcr
or
fwait
dec
dec
js
es
push
ins
test
sar
push
pop
shl
cmp
inc
adc
push
mov
xchg
hlt
mov
sub
xchg
mov
mov
sbb
jmp
popa
push
jo
icebp
shr
mov
hlt
xor
cmp
fiadd
inc
inc
inc
test
icebp
scas
outs
mov
adc
(bad)
jp
pop
cmp
test
repz
pop
out
xchg
outs
inc
mov
jae
lahf
popf
xchg
add
mov
out
mov
xchg
loope
loope
loopne
arpl
push
out
in
push
nop
out
mov
cmp
cmp
jnp
rol
mov
dec
fst
push
loopne
inc
sub
xchg
sub
xchg
cmc
fldcw
add
ds
jle
imul
pop
fadd
push
xlat
test
sar
aam
outs
clc
push
gs
dec
xchg
test
fstp
cmps
sbb
cwde
out
jmp
outs
and
jl
adc
dec
dec
movs
aas
rol
jne
mov
ja
dec
xor
mov
xor
pop
cli
hlt
jae
shl
loope
mov
or
arpl
gs
pop
xlat
int3
pop
jmp
inc
mov
aad
lods
popa
fisubr
adc
outs
fidiv
aam
xchg
add
xchg
inc
loopne
rcl
mov
shl
xchg
nop
mov
(bad)
jmp
sbb
sahf
jecxz
adc
add
jns
push
dec
hlt
retf
(bad)
sahf
mov
aad
push
loope
mov
jmp
test
mov
add
sar
xlat
mov
adc
xchg
out
fidiv
xchg
mov
jmp
or
ret
add
mov
mov
pop
push
pop
push
cs
(bad)
(bad)
push
inc
push
test
fsubrp
xchg
mov
call
frstor
pusha
jo
cmps
pop
dec
les
sub
add
sahf
ds
sub
push
mov
mov
les
jg
push
(bad)
and
loop
imul
cmps
xor
in
cli
scas
adc
aam
xor
sub
jnp
push
cmc
jl
add
pop
clc
pop
dec
cmps
cdq
xchg
push
js
inc
inc
xchg
sub
or
ins
dec
pop
cmp
ins
stos
adc
js
jmp
sti
add
adc
(bad)
mov
fdivrp
cs
sbb
sub
jmp
ror
and
dec
and
or
scas
mov
push
push
jns
and
in
mov
loopne
fild
xor
push
adc
rol
jns
add
jp
sbb
js
cdq
in
adc
mov
xchg
stos
or
js
xchg
ja
loopne
adc
loopne
call
je
sub
(bad)
cli
into
ins
shl
adc
call
xchg
sti
sub
fisubr
add
cli
cmps
call
xor
loop
adc
xchg
jno
hlt
popa
icebp
out
jnp
out
movs
xor
pop
mov
sbb
sbb
ja
les
fmul
leave
repnz
fadd
and
pushf
mov
mov
jge
in
ss
fisub
shl
je
je
jecxz
imul
dec
(bad)
sbb
jne
xor
lds
push
jae
and
stc
adc
pop
pop
mov
jo
push
xchg
push
and
adc
das
xchg
lahf
add
push
add
sub
push
out
mov
(bad)
ficomp
ret
push
jmp
push
cmp
jecxz
arpl
scas
int
sbb
cli
je
or
pop
je
movs
pushf
js
or
push
jp
mov
pop
int3
ss
mov
test
sbb
stc
loope
adc
fisub
call
mov
jns
icebp
jg
push
sub
add
mov
jp
imul
jmp
xor
dec
scas
adc
mov
mov
pop
mov
inc
sub
mov
js
pop
pop
test
loopne
mov
mov
sub
sbb
xchg
retf
sbb
push
js
dec
inc
cmps
hlt
jle
je
inc
cs
inc
daa
lock
pop
sahf
repz
fiadd
jmp
xchg
lods
test
shl
lea
sbb
(bad)
mov
xchg
push
pop
or
fnsave
mov
bswap
mov
jbe
fcomi
outs
add
das
pushf
cdq
(bad)
xor
xor
popf
dec
es
sbb
or
push
lahf
xor
jecxz
ja
or
or
loope
int3
sti
ds
ret
cmps
daa
cmps
cmovns
fidiv
scas
jp
add
inc
pop
aad
pop
js
retf
sti
mov
sub
movs
adc
sbb
pop
xchg
jmp
movs
out
jae
xchg
test
jmp
cmp
stos
fld
(bad)
dec
mov
popa
push
xchg
cmps
inc
call
mov
sti
dec
ins
das
jb
stc
stos
xor
cmp
in
imul
test
int
adc
rcr
data16
loop
cmp
aas
add
mov
sti
cwde
into
gs
mov
sbb
popa
mov
inc
dec
popa
mov
inc
adc
hlt
jl
pop
xor
out
in
push
pop
mov
int
test
ins
pusha
jmp
mov
jl
in
aam
imul
movs
sbb
pop
dec
fisub
mov
pop
pop
mov
(bad)
hlt
adc
ror
fadd
sub
cmp
retf
adc
or
sbb
retf
lahf
sbb
arpl
dec
push
cmp
jmp
(bad)
movs
xchg
pop
rcl
leave
xchg
pushf
mov
xchg
mov
adc
pop
shld
int
xor
es
ja
test
jnp
ds
shr
into
or
xlat
push
mov
xchg
pop
cs
mov
mov
(bad)
jo
pop
or
and
test
pop
jnp
int3
in
push
cmps
cmp
mov
aam
cmp
popa
data16
stc
pop
push
scas
ret
in
mov
mov
mov
je
push
repz
pop
ret
lock
fs
imul
jae
sbb
jno
paddw
loopne
sub
sbb
or
ja
stos
(bad)
pusha
and
scas
movs
rcl
dec
add
call
add
shr
cld
push
clc
jmp
fwait
pop
mov
add
mov
sub
xor
ins
data16
cld
sub
mov
dec
int3
pop
pop
not
outs
xlat
stos
jge
cmp
mov
cmp
pop
lods
dec
lds
test
cs
fnop
sub
fcomp
(bad)
mov
movs
xchg
xor
mov
retf
(bad)
sbb
int3
enter
out
sahf
push
out
or
std
pop
sbb
mov
fs
es
sub
gs
ins
sub
adc
fsub
mov
jmp
add
ret
pop
sbb
xchg
repz
ret
jg
mov
jmp
mov
je
and
retf
std
and
inc
jmp
jmp
(bad)
xor
fwait
test
cmps
jecxz
xchg
lods
and
mov
push
adc
stos
inc
mov
push
neg
(bad)
mov
jle
xchg
call
and
lock
pushf
xor
call
aad
pop
push
and
std
sbb
inc
push
call
inc
scas
pop
sbb
out
mov
xchg
hlt
lods
jbe
lahf
ds
fwait
push
dec
gs
imul
and
in
push
in
inc
hlt
jae
lds
repnz
pop
loop
popf
pop
int3
outs
aam
test
mov
mov
into
adc
sub
ds
leave
adc
push
dec
pusha
mov
test
add
lods
pop
fnstcw
and
or
xor
test
pushf
dec
add
mov
dec
mov
(bad)
imul
(bad)
ins
popf
imul
jae
jno
cmp
sti
mov
(bad)
test
test
add
cdq
jmp
or
dec
imul
pop
cmp
xchg
jecxz
jecxz
test
xchg
jmp
retf
fdivr
es
jo
pop
(bad)
ja
aam
jl
jmp
movs
sub
jmp
xchg
sar
and
dec
xor
sbb
push
nop
pop
inc
fwait
jecxz
and
dec
sbb
xchg
adc
mov
cmps
test
xor
imul
iret
adc
pop
inc
add
inc
(bad)
imul
scas
dec
stos
dec
pop
sub
mov
xchg
dec
add
cs
mov
fwait
dec
pop
push
not
int
ret
clc
jmp
cmp
ins
movs
push
out
pushf
in
into
shl
sub
jns
icebp
or
dec
pop
test
ret
sub
aaa
mov
dec
ins
retf
dec
div
pushf
int3
sub
(bad)
fimul
cli
repz
aas
jp
fxch
cmp
mov
or
xlat
outs
add
icebp
loope
jge
cli
loope
mov
(bad)
int
pop
jbe
lods
shl
call
xchg
mov
add
push
bswap
imul
mov
retf
jno
add
sub
or
sub
mov
movs
(bad)
dec
mov
mov
jae
jae
inc
cmp
cmp
fcmovb
jmp
cmp
std
xor
xor
les
fldenv
imul
(bad)
loopne
add
mov
jns
stos
mov
jmp
xor
out
xor
fisttp
leave
imul
fbld
into
ins
mov
mov
mov
scas
fild
in
xchg
lods
fldcw
cmp
pop
cmps
adc
add
dec
lea
daa
call
mov
pusha
aam
dec
xchg
imul
adc
push
mov
xchg
(bad)
inc
pop
push
hlt
sub
ds
gs
call
fbld
sbb
pop
shr
push
js
cmp
dec
or
iret
push
sbb
cdq
or
mul
ror
js
mov
add
movs
mov
cdq
aas
ds
fnstsw
out
inc
mov
jo
retf
jge
and
pop
mov
mov
dec
or
push
mov
movs
fsub
cmps
and
leave
test
out
cmps
pusha
push
inc
sub
ret
jmp
cmc
int
leave
and
push
rcr
ins
test
push
outs
and
jmp
out
cdq
test
mov
mov
or
pop
stos
mov
mov
rcr
inc
lods
cmp
inc
std
loop
in
xor
xchg
xor
mov
jmp
mov
outs
xchg
inc
pusha
pop
xor
and
mov
xchg
jl
sbb
cs
mov
jge
xor
mov
mov
pop
call
imul
dec
es
loop
cmp
sub
std
adc
(bad)
in
xchg
or
(bad)
std
loope
mov
jnp
js
pusha
mov
out
inc
mov
or
inc
xchg
jg
fldcw
dec
outs
inc
or
pop
push
out
mov
mov
out
jnp
jns
lock
pop
xchg
sub
loop
(bad)
in
jmp
in
ja
jle
inc
add
loope
shr
test
and
leave
cmps
ins
in
lea
pop
or
mov
push
ret
adc
mov
div
call
pop
jle
(bad)
adc
iret
mov
mov
mov
push
(bad)
push
ins
rol
in
arpl
sti
je
or
pop
repz
iret
add
xor
inc
and
pop
enter
stos
xor
rcl
popf
adc
jle
fwait
xchg
pop
mov
dec
or
cmp
hlt
or
fidiv
and
add
sub
ss
xchg
adc
mov
rol
adc
dec
or
stc
(bad)
imul
jo
xchg
js
test
lods
out
xchg
sahf
loope
pop
jp
lods
add
push
lock
loop
lods
cmp
cwde
loopne
sbb
rcl
std
(bad)
adc
xchg
mov
ret
rol
mov
fist
sub
push
mov
ss
cmp
adc
enter
cmps
dec
push
es
add
imul
inc
or
and
mov
cld
into
test
loope
fwait
mov
(bad)
mov
fist
push
mov
push
out
xchg
arpl
sahf
xchg
xchg
mov
cmp
cmp
fisubr
xor
jns
sbb
in
popa
rcr
ja
pop
jbe
cmp
out
sbb
or
inc
or
ja
inc
ins
stc
(bad)
pop
sub
test
inc
scas
cdq
retf
cmps
inc
aaa
in
fdivr
in
xlat
call
ins
retf
xchg
fwait
mov
push
movs
je
sbb
xchg
dec
pop
mov
pop
xor
xlat
or
xchg
jne
mov
inc
inc
jb
jo
clc
pop
jle
jl
fnstsw
pop
and
repnz
sub
imul
jns
sub
and
ss
xchg
loop
mov
mov
add
sbb
push
aad
mov
pop
imul
push
jp
nop
xlat
adc
loopne
jo
out
lock
xchg
xchg
pop
jle
jae
mov
(bad)
mov
popa
je
pop
and
sub
inc
es
dec
rcr
mov
pop
das
outs
pop
adc
mov
cli
mov
lahf
mov
adc
xor
neg
mov
inc
into
outs
inc
loope
push
jmp
cmp
fdivr
shl
scas
sbb
fmul
push
and
mov
or
cmp
sbb
stc
xor
jb
dec
add
ficomp
aaa
je
(bad)
imul
(bad)
push
xor
fnstcw
jg
dec
(bad)
outs
aas
xchg
jnp
mov
stos
xchg
repz
(bad)
and
aam
clc
xor
pop
fmul
mov
xchg
xchg
sbb
dec
add
ins
inc
dec
ja
je
call
or
pusha
and
lahf
call
fadd
into
retf
imul
push
lock
outs
pusha
and
ins
mov
sbb
cmp
jle
mov
lods
int3
jo
add
xchg
pop
push
test
(bad)
out
iret
inc
daa
(bad)
fs
mov
call
scas
loop
cs
and
and
popa
sbb
and
mov
rol
rsm
sbb
push
shl
into
ret
(bad)
push
and
xchg
les
aaa
sub
out
cld
repz
adc
adc
pop
push
mov
jle
push
push
adc
pusha
mov
xchg
pop
in
js
sbb
cmps
fsubr
xchg
or
fldcw
in
fs
mov
dec
xor
enter
cmp
push
jo
pop
imul
sbb
mov
cdq
fs
xor
mov
inc
jmp
cmp
mov
ror
push
out
xor
fisub
mul
mov
scas
push
repz
mov
mov
mov
test
loop
pop
in
mov
jne
lock
sbb
out
sbb
jmp
and
mov
(bad)
cmps
adc
inc
jg
pop
sub
sbb
cmp
lahf
stc
std
sbb
call
out
adc
jae
fcmovb
pop
test
std
out
mov
fsubr
dec
mov
fsubrp
xchg
in
add
int3
jl
lea
cwde
sbb
jnp
xchg
shl
jmp
inc
add
cdq
adc
(bad)
mov
cwde
mov
sub
test
out
(bad)
ds
call
fnstenv
xchg
mov
xchg
xor
or
int
pop
movs
loop
outs
xchg
sbb
xor
push
xchg
ds
cmps
or
jg
mov
aaa
jg
push
adc
cmc
call
adc
and
je
dec
mov
jno
jns
mov
int
cdq
add
loopne
sbb
pop
dec
outs
mov
jp
fmulp
dec
cmp
(bad)
in
adc
dec
cs
and
pop
bound
movs
and
inc
ins
call
sub
adc
pop
xor
out
xchg
test
stc
iret
cmp
sti
mov
call
fbld
push
icebp
push
out
and
pop
inc
cmp
mov
cmc
loope
xor
sub
sbb
sti
mov
sub
jp
shr
ret
or
push
les
lock
int3
push
les
nop
sahf
sub
cs
pop
cmc
loop
sbb
sub
sbb
mov
ins
rol
jbe
imul
jp
out
cdq
adc
(bad)
shr
test
movs
jmp
push
inc
dec
hlt
sbb
popa
scas
lds
adc
add
out
cmc
fild
cwde
fs
sbb
xchg
daa
sbb
loopne
out
sub
ret
cmp
outs
retf
push
cmps
push
mov
movs
xor
add
pop
xor
push
jns
es
std
loope
jmp
test
popf
test
call
fcomp
scas
call
test
xchg
adc
mov
sub
mov
mov
or
(bad)
fild
and
test
jo
int3
adc
iret
sbb
sub
push
aaa
pop
loopne
arpl
inc
mov
bound
and
inc
mov
lods
jno
mov
dec
sub
inc
pop
xor
mov
fstp
jmp
mov
les
aas
cmc
mov
xchg
inc
and
push
dec
ret
push
into
fwait
cmp
sub
xchg
mov
pop
and
or
idiv
ficom
lahf
push
pusha
sub
sub
adc
xor
fbld
xor
outs
loopne
sbb
fnstcw
mov
mov
pop
dec
or
push
(bad)
loop
sbb
pop
test
mov
mov
pop
lahf
aad
nop
cmp
jae
imul
repnz
adc
mov
xchg
mov
inc
imul
enter
pop
aad
(bad)
dec
sahf
test
and
mov
neg
cmp
or
adc
mov
mov
xchg
rcr
test
fucomi
mov
xor
js
inc
sar
sti
pop
mov
loop
ret
jo
jle
test
sub
shr
outs
outs
inc
adc
mov
outs
loop
jno
cmp
xlat
mov
pop
in
mov
mov
adc
pop
sar
jno
retf
shl
and
jl
outs
popf
lods
stc
test
imul
cdq
movs
sub
push
into
mov
lahf
loope
les
inc
push
xchg
mov
xchg
(bad)
(bad)
ficom
and
cli
repz
jae
scas
add
mov
in
adc
add
dec
xchg
nop
push
ss
xchg
or
addr16
cmp
int3
push
repnz
call
cli
xchg
dec
fisub
lods
retf
adc
or
in
aam
pusha
in
es
cmp
inc
mov
inc
mov
jne
adc
mov
push
sbb
test
icebp
test
popf
data16
mov
hlt
repnz
imul
mov
cmp
retf
fisubr
movs
aas
mov
push
cwde
test
lock
out
xor
sbb
stos
add
jl
cmp
enter
fsub
nop
sub
aad
xchg
add
rol
movs
jno
popa
jge
mov
dec
std
or
push
nop
rcl
adc
nop
mov
cmc
cdq
ret
inc
mov
out
cmp
inc
sub
xchg
loopne
ss
push
push
pusha
inc
sbb
xchg
in
fld
and
mov
mov
xchg
dec
int
xor
xchg
ret
mov
pop
fwait
pushf
adc
mov
out
and
push
movs
mov
es
xor
lea
jp
cmp
repnz
inc
into
jnp
adc
or
int3
fisttp
(bad)
and
das
push
ror
inc
fild
loopne
test
sahf
adc
inc
dec
out
imul
sub
movs
les
icebp
in
jno
fidivr
ja
mov
pop
mul
or
inc
sahf
push
daa
mov
es
popa
pop
retf
pop
stos
pop
int3
mov
mov
and
mov
mov
jno
cmps
loope
test
jmp
push
std
pop
inc
mov
int3
jnp
push
stos
pop
mov
inc
mov
jl
out
mov
mov
mov
(bad)
xlat
retf
into
mov
ins
pusha
or
mov
xchg
push
inc
outs
std
push
retf
sub
enter
aaa
mov
dec
fstp
(bad)
and
in
and
nop
lock
mov
ds
pusha
pop
iret
add
mov
lahf
lock
xchg
js
call
jae
sub
pop
inc
jmp
retf
jle
(bad)
jb
icebp
mov
icebp
pcmpgtd
xchg
aas
xor
fbld
enter
out
mov
popf
add
push
out
jo
idiv
cmc
xor
jmp
aad
inc
mov
pop
cmp
sbb
xor
mov
je
test
adc
mov
in
pop
push
ret
mov
nop
push
sub
jmp
add
and
inc
mov
mov
fisttp
lahf
dec
sbb
pusha
mov
xchg
push
cmp
pop
sub
cmp
cmps
xchg
xor
or
popa
ja
pop
mov
aam
aas
je
not
aas
jns
cmps
pop
pop
mov
push
sbb
test
into
xchg
jno
adc
fld
data16
xchg
aas
stos
jno
mov
xor
enter
pop
es
push
sub
pusha
mov
jno
cmp
and
sub
xchg
jg
xchg
lds
inc
popa
add
inc
sbb
and
stos
stos
call
mov
lods
adc
dec
(bad)
or
in
test
mov
pop
in
jb
dec
movs
mov
or
inc
inc
cmps
sbb
gs
cld
addr16
pop
and
dec
ret
jge
and
adc
vaddss
fcomp
sub
sub
aas
test
fwait
rol
jnp
(bad)
mov
or
xchg
daa
hlt
ficom
xor
dec
pop
mov
iret
jg
mov
stos
pop
out
lahf
pop
lahf
outs
xor
jae
leave
mov
pop
rcl
aas
add
ror
or
sub
inc
test
out
pop
(bad)
adc
jnp
jl
lea
(bad)
aaa
sbb
lock
mov
sub
or
mov
jle
jge
pop
lea
xchg
lds
jo
ror
sub
mov
add
sar
mov
hlt
push
pusha
idiv
cdq
rcl
inc
dec
jmp
lahf
mov
mov
stos
xchg
jecxz
in
add
adc
mov
rcl
sti
out
pslld
pop
es
lahf
mov
inc
push
or
int
pop
sub
mov
pushf
stos
mov
sbb
jge
out
rol
and
movs
cld
repz
fist
js
mov
xor
ror
sbb
repz
cdq
cmp
mov
pop
lods
push
pop
aam
inc
ficomp
jae
dec
icebp
inc
sub
iret
pushf
inc
mov
adc
hlt
clc
outs
clc
mov
ja
push
pop
and
push
xor
inc
pop
sbb
jmp
sbb
fsub
out
pop
es
retf
cmps
inc
sbb
jmp
pop
xchg
xchg
lods
sub
push
add
repz
mov
mov
mov
xchg
mov
mov
ins
jecxz
mov
ja
fcmovnb
cwde
push
fidiv
sahf
mov
nop
js
mov
push
(bad)
ins
in
popf
bound
inc
cmps
lea
iret
sar
mov
int3
jo
std
test
int3
cmc
xor
fdivr
push
cmp
jo
hlt
sbb
adc
rcl
sub
not
cld
sub
mov
pop
mov
call
sbb
mov
cmp
mov
xchg
pop
and
sub
push
test
sbb
sub
xor
and
jae
gs
loopne
enter
cmps
push
sbb
enter
or
xchg
(bad)
push
jg
mov
(bad)
out
ins
cmps
std
nop
inc
mov
inc
push
cld
(bad)
(bad)
push
mov
adc
xchg
(bad)
fcmovbe
inc
push
div
movs
pop
out
mov
dec
mov
sbb
cmp
jge
or
dec
loop
imul
mov
sbb
aaa
add
scas
and
or
xchg
mov
xor
mov
dec
ins
fsincos
or
ret
mov
sbb
and
lock
rol
jo
cmps
retf
jmp
dec
arpl
je
xchg
shl
out
adc
movs
adc
xchg
dec
data16
mov
cs
or
test
and
lock
jecxz
mov
jnp
push
out
fimul
je
push
imul
and
add
je
pop
icebp
xchg
cli
mov
push
pop
add
xchg
movs
sbb
push
neg
add
test
daa
push
fiadd
in
retf
sub
inc
pop
ror
loop
test
popa
pusha
mov
ja
je
dec
and
aas
mov
addr16
mov
addr16
hlt
rol
imul
adc
(bad)
stos
mov
ret
es
and
test
push
data16
cmp
arpl
dec
add
xchg
lods
jae
adc
cli
dec
dec
loop
ret
sbb
clc
inc
pop
in
rcr
lahf
mov
xor
mov
(bad)
push
xor
pop
fst
out
sbb
or
jns
cmp
sahf
and
fld
add
jmp
inc
push
in
push
jp
scas
sub
retf
into
add
(bad)
push
mov
jb
sbb
into
cli
mov
fist
xor
ret
rcl
not
mov
repz
sbb
call
mov
push
es
push
call
mov
add
mov
and
(bad)
xchg
add
push
dec
fisub
mov
std
inc
scas
lds
pusha
movs
mov
jns
rcl
int3
sub
fld
xchg
repz
mov
pop
lock
aaa
icebp
mul
repz
mov
sbb
sbb
aas
inc
dec
mov
aad
or
call
pop
test
cmp
mov
mov
and
nop
sub
data16
das
repnz
test
jae
pop
shl
call
or
imul
xor
sub
dec
jecxz
popa
and
jl
out
fisub
or
jns
fs
loope
pop
sub
sub
sahf
pop
push
das
mov
xor
stos
cmp
xor
inc
popf
ficom
jp
lock
sub
xchg
pushf
bound
push
mov
lods
adc
adc
shl
or
hlt
mov
ins
cld
in
sbb
pop
sub
cwde
add
leave
fidiv
mov
jmp
call
cmp
lea
jno
out
pop
stos
popf
aaa
and
xchg
sub
lds
and
jb
das
push
mov
aam
out
and
xchg
retf
or
icebp
ins
out
xchg
sub
leave
xor
sbb
dec
jno
jne
jmp
cdq
scas
or
or
mov
xchg
shr
sub
das
je
mov
add
inc
ret
dec
not
aaa
fdivr
out
call
add
add
or
out
fs
add
jecxz
lahf
jno
mov
push
or
dec
fisubr
fwait
jp
xor
mov
or
adc
dec
stos
sub
push
lods
add
inc
adc
cmp
or
outs
cmp
and
sbb
mov
cmp
pop
xor
xchg
gs
es
ror
and
mov
push
ret
scas
ds
icebp
xor
ins
mov
xchg
popf
and
mov
push
dec
xchg
outs
in
jl
add
dec
mov
dec
pushf
ret
add
fs
fisub
repz
or
pop
xor
shl
or
dec
mov
add
nop
sub
sti
lods
std
es
cmc
test
mov
pop
fwait
cmc
int
(bad)
fist
sti
push
mov
xlat
(bad)
aaa
inc
std
(bad)
out
jg
rcr
fisttp
test
movs
out
fwait
adc
and
test
mov
and
ins
(bad)
retf
or
int
adc
pusha
(bad)
(bad)
pusha
fmul
push
outs
loope
jne
shr
pop
xor
(bad)
call
mov
adc
inc
inc
je
aam
and
sub
mov
in
push
sahf
sti
(bad)
cmp
pop
inc
nop
sub
in
cmc
inc
push
mov
(bad)
iret
mov
jo
aaa
imul
xchg
aaa
ficom
cmps
ss
scas
mov
js
daa
(bad)
jne
push
cwde
test
adc
push
and
xchg
arpl
dec
cmp
jns
mov
or
pop
mov
sti
push
arpl
mov
ins
ror
sbb
ins
or
push
sbb
fxtract
push
push
cld
cmc
adc
outs
enter
xor
cmp
adc
cmps
aas
div
sub
lods
adc
ins
sbb
adc
ficomp
gs
jmp
jmp
aas
jmp
sbb
and
and
cmp
push
pop
pusha
jp
adc
jl
imul
push
int
jo
and
sub
out
aaa
aas
dec
jb
inc
repz
retf
or
adc
js
int3
mov
xor
mov
(bad)
pop
mov
fstp
mov
lea
xchg
mov
fidivr
std
mov
or
test
pop
dec
mov
jp
dec
popf
std
cmp
or
sbb
clc
and
icebp
xchg
pop
(bad)
std
hlt
xchg
jg
and
ret
fbstp
out
iret
or
leave
cs
lock
xchg
ss
in
in
mov
pop
jge
shl
add
inc
or
sahf
mov
das
inc
mov
mov
mov
lds
dec
ret
fdivr
pusha
loope
popf
sub
xchg
jge
sbb
movs
(bad)
mov
add
mov
cwde
mov
jns
fidivr
iret
jge
loop
mov
mov
sub
inc
sbb
xchg
adc
pop
mov
inc
cmps
enter
xlat
jnp
iret
lods
xchg
movs
sub
cwde
daa
fcompp
dec
add
pop
sbb
outs
cs
push
and
loop
mov
aas
pop
daa
jae
test
push
nop
mov
pushf
test
daa
(bad)
ror
add
(bad)
and
adc
arpl
mov
sar
retf
imul
adc
xor
retf
addr16
cdq
test
movs
jae
fisttp
or
jmp
inc
xchg
push
call
jb
mov
inc
retf
dec
add
sahf
call
(bad)
sbb
mov
xor
scas
sahf
jg
inc
push
push
(bad)
in
sti
inc
or
adc
clc
xchg
je
stc
cmp
inc
add
push
test
adc
rcr
ret
fs
adc
mul
pop
cmps
pop
(bad)
mov
push
jo
loopne
inc
arpl
mov
out
inc
sub
xor
retf
std
lods
and
inc
jl
mov
inc
nop
cmp
sbb
mov
adc
cwde
retf
xchg
sub
cmp
gs
pop
leave
lods
aad
mov
or
push
or
fst
adc
jns
pop
retf
xor
stos
cmp
inc
push
int3
ret
add
(bad)
pop
je
dec
iret
inc
test
fisttp
mov
xchg
(bad)
in
push
sbb
and
mov
sub
mov
ins
test
mov
fstp
pop
fild
push
pop
push
ja
pop
xchg
mov
jl
pusha
xor
outs
daa
adc
dec
(bad)
das
int3
or
adc
cli
dec
retf
int
adc
cmps
test
(bad)
popf
call
sbb
ins
jno
inc
jg
cmp
in
jb
sbb
jl
mov
lods
daa
cmp
fist
pop
mov
lds
out
enter
or
cdq
lea
sbb
inc
jb
icebp
jb
imul
sub
loop
fmul
retf
xor
pop
xchg
sub
int3
ins
clc
sub
(bad)
push
cmp
movs
cmc
xchg
inc
(bad)
sub
outs
lods
xor
lea
in
sbb
and
in
int3
mov
aad
cmp
mov
data16
imul
in
loop
dec
jp
and
and
cmps
mov
jmp
dec
test
test
ds
push
mov
push
(bad)
leave
sbb
cmp
pop
rcl
pop
ins
inc
int
sar
jl
add
jae
dec
or
or
int
sub
sub
mov
sub
test
iret
sub
call
cmp
jle
and
popa
es
push
pop
les
sbb
jmp
rcr
add
xchg
test
cmps
xlat
jmp
jmp
and
xchg
loope
and
dec
or
fldenv
mov
dec
and
sbb
xor
sahf
push
sub
add
add
sub
mov
dec
mov
(bad)
add
imul
dec
xchg
add
xchg
mov
mov
scas
aad
cmp
or
pushf
ret
aam
fild
cwde
xchg
xor
inc
xchg
cmp
(bad)
ret
jno
jmp
sar
pop
push
lock
adc
mov
mov
ret
sbb
sbb
sahf
lds
push
and
jnp
ins
xor
pop
jl
add
push
xor
sbb
cli
retf
add
mov
mov
call
cwde
into
shl
jge
fstp
iret
cmp
mov
or
xchg
call
xchg
mov
xor
jne
and
xchg
sahf
mov
xchg
nop
or
shr
xor
cmps
cld
mov
xchg
xor
dec
je
lods
shl
pop
ja
inc
xchg
jecxz
inc
mov
xor
ja
popa
iret
xchg
xchg
addr16
mov
mov
movs
jbe
stos
aas
es
(bad)
mov
das
adc
inc
mov
ror
mov
push
xor
into
mov
mov
pop
dec
lods
cmps
inc
cwde
stc
stos
out
dec
stos
pop
mov
sbb
jnp
cld
jae
shr
sub
or
xchg
cmp
dec
adc
or
in
dec
(bad)
or
call
fwait
mov
mov
daa
cs
rol
mov
call
aad
push
sbb
test
stos
pop
rol
ror
dec
inc
dec
inc
or
mov
stos
cmps
add
inc
in
call
push
not
jnp
add
cmp
or
fcmovne
pop
inc
push
(bad)
mov
cmps
sbb
mov
out
enter
sti
push
aam
adc
sbb
and
adc
push
xchg
aad
lods
jae
sub
stc
adc
pushf
fldenv
fwait
pop
ret
test
mov
mov
mov
sub
mov
and
pop
jl
fucomip
sbb
mov
call
xchg
adc
push
jg
std
loop
cmp
cmp
out
sbb
fwait
outs
mov
lahf
int
ja
mov
imul
cwde
int3
cli
lods
in
jb
push
push
aaa
mov
test
jp
es
adc
and
xor
cmp
dec
sub
out
push
fisttp
inc
pop
out
jnp
sbb
jne
lds
or
mov
mov
jb
ja
push
cmc
inc
neg
sub
cmp
scas
jne
movs
jns
ja
(bad)
sar
fldenv
push
std
jae
fcom
aam
movs
jl
rcl
sub
(bad)
sti
mov
leave
jmp
imul
jecxz
aam
mov
fbld
and
sbb
xchg
cs
mov
ficom
aaa
dec
es
std
pop
jg
pushf
or
adc
sub
pop
je
jne
js
inc
lods
ud1
hlt
out
push
pop
lods
mov
pop
jge
mov
fisttp
mov
test
sub
dec
dec
and
inc
mov
(bad)
mov
in
mov
not
add
inc
sub
scas
mov
xor
cs
in
in
test
sbb
cld
into
bound
mov
add
sub
lea
aam
in
jl
jmp
scas
repz
(bad)
or
pusha
sbb
ret
adc
jns
mov
push
mov
push
jge
aad
push
cmp
xor
adc
cmp
pusha
and
cmp
jno
aam
xchg
jb
mov
cmp
ffree
jl
std
(bad)
fdivrp
pop
mov
pop
adc
dec
inc
cmp
dec
pop
sahf
gs
out
inc
inc
inc
sti
sbb
cmp
neg
cmp
movs
aas
add
jns
repz
lods
mov
push
int
bound
inc
gs
int
mov
and
stos
das
and
pop
mov
jmp
add
adc
hlt
mov
cmps
sub
(bad)
mov
fistp
sub
push
fmulp
or
dec
in
sbb
lods
enter
fld
into
pop
or
or
and
ins
ds
addr16
sub
pop
(bad)
fdiv
pop
ret
xchg
dec
cmp
les
and
sbb
or
dec
in
cmp
and
sti
popa
addr16
rcl
daa
xchg
rcl
adc
aas
sub
into
or
imul
pop
ror
xchg
push
jne
and
xchg
xchg
jo
add
clc
xlat
es
call
dec
loope
add
mov
sbb
sbb
mov
ret
add
adc
lods
sete
or
cdq
shl
add
out
ins
jle
xor
call
(bad)
or
(bad)
fs
adc
jmp
scas
hlt
ins
or
jmp
outs
stc
sbb
inc
leave
sub
gs
out
xchg
cmps
inc
jp
dec
inc
dec
dec
fcomp
add
dec
popf
lods
ja
outs
jno
popf
pop
mov
xchg
(bad)
xor
cmp
or
or
or
mov
dec
in
gs
cmp
cmp
shr
pop
mov
pusha
and
hlt
(bad)
mov
push
adc
and
jl
xchg
jae
mov
cmp
(bad)
cmp
xor
shr
aam
or
cmovae
or
(bad)
popf
imul
mov
push
lock
out
lods
jo
mov
mov
and
lock
pop
adc
pop
push
jg
in
aaa
jb
mov
xor
aam
sbb
sbb
jg
dec
mov
cwde
addr16
inc
xchg
push
xor
push
pusha
jne
(bad)
xchg
cwde
int
or
and
(bad)
dec
arpl
push
or
mov
dec
jnp
mov
arpl
xlat
pop
or
out
lds
xor
push
xchg
test
xchg
xor
outs
jnp
xchg
push
rcl
dec
imul
sahf
test
xchg
dec
jnp
mov
push
pop
sub
jle
cmp
out
xchg
push
mov
mov
pop
shr
mov
shl
loop
sahf
push
test
rcr
aam
inc
adc
popf
add
xor
loop
xchg
push
add
outs
loope
cmovno
mov
loope
ret
pop
add
add
or
(bad)
fs
xchg
test
ss
pop
xchg
lods
xor
sub
cdq
jno
(bad)
sbb
cmp
sbb
inc
mov
mov
arpl
xchg
(bad)
data16
dec
pop
push
and
cld
and
xchg
push
sti
jmp
sbb
mov
outs
(bad)
or
in
nop
retf
sahf
mov
out
xchg
retf
xor
mov
sbb
inc
jmp
popa
jge
or
call
jle
lock
aad
pop
xor
dec
sbb
pushf
mov
xlat
inc
nop
xor
lods
ficom
adc
mov
mov
popa
cmp
(bad)
int3
loope
mov
cmp
movs
in
jns
sub
dec
push
scas
cmp
je
cmp
mov
adc
mov
mul
or
add
dec
fwait
and
enter
inc
xchg
and
pop
xchg
stos
ror
push
sub
mov
pop
outs
ins
cmp
sahf
in
pop
test
cmp
rcl
add
ret
ja
mov
cdq
jg
mov
push
(bad)
mov
repz
inc
or
movs
(bad)
in
pop
and
fsubr
addr16
push
xlat
dec
xchg
inc
cdq
push
shl
xor
push
stc
mov
jle
add
dec
push
das
in
shl
stos
add
xlat
nop
sbb
pusha
jnp
(bad)
das
leave
xchg
push
stos
cdq
inc
mov
cmps
sbb
jge
or
aam
and
xchg
test
fild
loop
add
loope
inc
dec
inc
sahf
jae
and
imul
push
outs
out
in
bound
test
in
lea
pushf
sbb
mov
push
or
hlt
or
add
pop
adc
movs
sub
xor
loop
arpl
push
or
enter
dec
jae
out
cmp
lea
xor
fadd
popf
das
cmps
mov
imul
les
(bad)
xchg
xor
jp
ds
enter
fnstenv
clc
loopne
imul
sub
arpl
jne
xor
jp
push
jo
pushf
pop
sahf
inc
test
pop
sti
and
pop
sahf
lds
fdivr
test
jle
add
test
leave
call
mov
mov
cmp
call
inc
inc
or
push
imul
mov
outs
sub
push
adc
rcr
loope
in
loopne
cmp
mov
or
out
jecxz
in
sahf
cwde
std
je
ret
in
mov
shr
jmp
fwait
aad
loope
ret
arpl
rcr
neg
jo
xor
rcl
push
aad
dec
mov
cmp
adc
movs
adc
jns
into
mov
aam
mov
xchg
push
push
cmp
dec
out
jmp
sub
cld
(bad)
jnp
sar
xor
imul
mov
les
ja
hlt
xlat
ins
pop
mov
mov
cmp
popf
cmc
push
pop
int3
shl
add
pop
xor
push
clc
test
inc
and
ins
jae
xchg
xchg
jle
xlat
popa
jmp
stos
popa
adc
movs
rol
pop
dec
add
mov
or
pusha
jmp
popa
sbb
movs
in
inc
(bad)
imul
pop
in
lds
loop
sar
xchg
out
sub
jmp
int
mov
mov
mov
jecxz
xor
loope
dec
pop
mov
aaa
fwait
mov
jno
dec
(bad)
jl
inc
push
js
jo
push
test
sub
in
xchg
or
mov
repz
mov
or
or
mov
jb
mov
icebp
push
cmp
pop
add
jle
stos
sub
sub
cmp
retf
outs
pop
cmp
in
xchg
mov
pop
inc
lea
xor
retf
mov
cdq
movs
jnp
in
xor
pusha
leave
addr16
mov
add
mov
push
add
cmps
push
popa
pop
fld
push
xchg
gs
clc
in
add
and
lahf
adc
dec
in
ret
push
cmc
jo
push
out
fsub
arpl
cmps
mov
jp
stos
pop
cdq
jae
(bad)
mov
fdivr
loopne
fcom
adc
sub
dec
mov
iret
ret
pop
(bad)
repnz
sbb
adc
cmc
(bad)
imul
xchg
xchg
push
push
mov
add
mov
pop
jecxz
jg
loope
popf
sbb
aaa
outs
mov
push
adc
and
xor
mov
jnp
(bad)
mov
xchg
aam
int
cmp
add
dec
addr16
or
cld
stos
cmc
repnz
(bad)
ss
rol
call
icebp
jge
retf
movs
scas
in
aas
dec
retf
ror
lea
add
mov
mov
push
ja
cld
inc
mov
or
mov
pushf
mov
mov
nop
add
xchg
stos
xor
push
inc
bound
pusha
cmp
fstp
push
inc
xchg
jecxz
fnstenv
repnz
(bad)
push
cdq
shl
xlat
push
fdivrp
sub
add
ins
repnz
ins
clc
mov
and
cmps
movs
mov
retf
pop
sbb
push
ins
push
ffreep
out
loop
cmp
or
jno
ins
cmp
retf
out
sbb
aam
test
dec
add
loopne
push
adc
bound
sub
stc
pop
add
inc
aaa
maskmovq
neg
hlt
(bad)
repz
pop
mov
ficom
cwde
(bad)
fnsave
push
or
sahf
or
cmp
jns
sti
sbb
and
or
dec
xor
add
aaa
mov
sbb
test
repnz
loope
iret
xchg
xchg
jg
cmp
mov
aas
pusha
das
pop
fs
dec
nop
dec
and
pop
outs
je
inc
or
aam
int3
xor
jne
fdiv
cwde
or
cmp
sub
ds
aam
jns
push
sbb
mov
(bad)
loop
mov
inc
mov
ffreep
adc
jp
stc
mov
shl
mov
or
shl
mul
daa
xchg
jmp
add
push
and
dec
mov
adc
pop
cwde
xchg
out
gs
ins
jbe
xchg
rcr
ds
mov
pop
lds
adc
je
sub
lods
cmp
mov
xor
icebp
pop
ret
jecxz
stos
in
sbb
sub
adc
adc
pop
inc
ret
push
and
test
dec
sub
shl
jo
aaa
cdq
pop
push
inc
or
mov
gs
sbb
stc
and
sub
adc
xchg
mov
rcr
les
or
mov
mov
repnz
add
(bad)
sbb
mov
aas
and
out
mov
or
rcr
inc
xor
lods
add
add
scas
xor
imul
repnz
add
xor
inc
adc
repnz
add
fisubr
(bad)
jo
shl
jmp
ffree
sub
fcmovne
es
loop
push
dec
push
jl
(bad)
mov
push
push
xchg
fadd
xor
popf
and
push
cmc
popa
ret
push
cmc
fwait
and
jne
xor
adc
mov
fisttp
stc
aas
mov
mov
int3
pop
adc
ret
cmps
adc
sbb
inc
inc
sbb
sub
add
enter
test
push
mov
xchg
mov
lock
mov
pop
inc
ja
lods
sub
push
sti
cmp
push
push
popf
movs
xlat
lea
and
push
inc
inc
or
and
clc
rol
adc
movs
sbb
xchg
in
push
out
ins
fmul
stos
das
push
xchg
outs
jns
sub
pop
dec
jle
mov
sbb
jns
pop
push
pop
xchg
mov
push
dec
jecxz
or
mov
inc
int3
rol
pop
std
and
sub
jmp
add
pop
cmp
or
(bad)
(bad)
mov
adc
cmp
mov
xchg
xor
fiadd
jge
fiadd
mov
int
jb
xchg
je
lea
and
scas
adc
xchg
adc
sub
sbb
sub
dec
lods
and
or
sti
(bad)
fistp
push
xor
outs
add
sub
pusha
adc
and
cmp
lods
adc
xor
pop
sbb
inc
push
sahf
cld
out
and
mov
add
and
adc
sti
jg
pop
push
(bad)
(bad)
pop
xor
mov
xchg
movs
ins
jecxz
daa
or
jge
stc
cmp
jp
or
adc
xchg
jbe
aam
lea
mov
fcmove
jge
enter
js
dec
in
adc
call
add
xchg
pop
leave
jne
xchg
jmp
scas
dec
xchg
sub
xlat
cmp
hlt
and
loope
(bad)
arpl
jmp
or
in
retf
(bad)
loop
test
stc
push
sbb
jmp
jb
xor
sub
jmp
and
jno
or
les
retf
mov
fwait
popf
aad
ja
jecxz
(bad)
sbb
test
(bad)
sbb
(bad)
xchg
cmp
xchg
lods
cmp
sbb
out
jecxz
imul
pop
sub
in
mov
pop
xchg
xchg
imul
add
mov
adc
jo
ret
iret
outs
fs
imul
adc
cwde
or
(bad)
fwait
mov
sbb
cs
jmp
push
arpl
shr
je
arpl
add
sbb
or
neg
pop
pop
or
inc
pop
or
and
mov
sbb
add
lods
push
gs
inc
sbb
outs
es
out
cwde
push
mov
stc
sub
(bad)
out
clc
fcom
cli
sahf
nop
add
mov
hlt
in
dec
cmp
adc
je
cld
or
shld
enter
xchg
push
ret
lahf
rol
loope
fdiv
stos
fsub
outs
sbb
jecxz
inc
out
jge
mov
int
or
mov
jmp
xchg
mov
cs
ja
aaa
movs
mov
push
popf
add
xchg
pop
in
stos
xchg
je
and
gs
out
adc
retf
hlt
aas
push
out
es
push
in
pcmpeqb
sbb
mov
int3
mov
enter
fadd
xor
(bad)
int3
sti
ret
idiv
push
aaa
jne
sti
inc
xchg
mov
sbb
xchg
pop
sbb
jnp
fild
pop
pop
test
fwait
jmp
clc
fisttp
rcr
mov
lods
int3
mov
push
mov
xor
lahf
fst
cli
dec
int3
pushf
and
pop
cmp
sub
fbld
mov
mov
jno
fidivr
mov
mov
das
mov
adc
ret
or
inc
or
pop
adc
mov
mov
icebp
nop
adc
jg
xor
lds
cmps
test
pop
jg
mov
hlt
test
das
retf
retf
pusha
in
out
sub
aam
ffree
pop
cmp
jns
gs
pushf
test
ins
jns
daa
pop
sbb
or
fbld
into
cld
imul
jbe
mov
push
lods
jmp
xchg
mov
pop
loope
gs
inc
sbb
sbb
and
sub
mov
push
push
cmp
xchg
mov
adc
ror
xchg
add
jo
ins
adc
cmps
int3
and
xor
aas
and
mov
and
into
dec
jns
aad
ret
pop
ins
jmp
cmps
push
push
inc
jmp
xchg
sar
out
ss
icebp
xchg
xor
pop
dec
lahf
sti
in
mov
aam
aam
dec
arpl
pop
dec
fsub
and
fisttp
stc
mov
cmp
(bad)
pushf
jne
stc
aam
dec
fmul
ret
xchg
cmp
sbb
xor
and
mov
std
test
pop
push
mov
cwde
xor
add
add
xor
out
les
mov
pop
adc
push
pop
inc
test
push
or
pushf
dec
out
jnp
cmc
fcom
imul
xchg
mov
loop
pop
pop
jecxz
inc
mov
je
jp
(bad)
push
and
imul
xlat
pop
lods
pop
pusha
retf
or
hlt
or
push
push
(bad)
xor
outs
inc
hlt
out
sbb
sub
pop
int3
dec
cmps
mov
xchg
sbb
vmovdqa32
pop
dec
sbb
adc
icebp
out
xchg
sub
xchg
add
loopne
sub
test
or
mov
cmc
mov
xchg
add
sahf
sti
test
or
cli
retf
and
aam
fcmovbe
int
mov
fistp
stc
dec
or
and
mov
mov
xor
cmp
jbe
cmp
jmp
daa
shr
mov
sub
mov
(bad)
pop
es
mov
jmp
lods
fnstenv
sub
and
push
(bad)
push
xchg
adc
inc
sbb
into
shr
test
mov
mov
test
call
(bad)
div
es
sbb
test
jmp
and
(bad)
dec
inc
outs
push
xchg
cwde
mov
cmps
int3
sbb
lahf
sbb
test
movs
lods
cmp
les
jns
mov
cmp
xchg
popf
cmp
in
(bad)
sar
movs
(bad)
push
pop
pop
js
hlt
xor
inc
xor
or
xchg
stc
lods
cli
stc
mov
adc
test
inc
inc
push
dec
fisub
adc
je
inc
inc
and
pop
mov
fidiv
xor
sub
mov
inc
push
and
pop
sbb
and
xchg
pop
out
push
pop
fwait
(bad)
in
and
cmp
popa
popa
retf
les
js
bound
or
iret
dec
cs
stos
push
xchg
and
mov
std
lahf
sbb
dec
loop
jno
mov
je
pmuludq
cwde
sbb
sar
or
mov
(bad)
mov
xor
retf
and
push
push
or
and
js
and
(bad)
hlt
adc
cmps
(bad)
mov
imul
mov
imul
sbb
rcl
pop
cs
into
aas
sar
loope
stos
xchg
or
push
jbe
push
jnp
sbb
into
mov
mov
ins
inc
push
call
test
shl
cdq
lahf
mov
aas
inc
mov
adc
sbb
add
nop
test
pusha
(bad)
or
push
jne
dec
mov
lahf
mov
call
push
mov
lds
push
push
fiadd
pop
add
jmp
sub
dec
adc
xlat
add
cvtps2pi
popa
shl
jmp
jg
mov
push
outs
repz
mov
jmp
jl
fild
mov
jo
add
xchg
out
fnstsw
sub
sub
call
jnp
sub
xchg
and
xor
sti
cdq
repz
stc
cmp
jge
mov
test
shl
aam
jns
push
cwde
cmps
add
xchg
rol
xchg
out
sti
out
loop
(bad)
(bad)
sbb
pop
jnp
and
les
jns
and
mov
mov
sbb
jp
ret
scas
fninit
scas
scas
shl
dec
and
mov
test
or
mov
and
xor
mov
(bad)
clc
jno
or
push
mov
outs
loope
adc
loope
xlat
sbb
push
das
sub
jo
dec
dec
rcr
jns
mov
sub
jae
adc
mov
sub
mov
ss
xchg
shl
out
in
lock
sbb
(bad)
shl
pop
push
inc
mov
mov
xchg
fiadd
shr
dec
inc
out
out
push
sub
jl
test
ds
ins
sub
js
xchg
mov
jl
push
loop
mov
int
retf
add
loop
fcmovne
pop
mov
bound
push
mov
pop
imul
mov
call
mov
jo
test
test
xor
dec
xor
(bad)
xchg
xchg
and
mov
ret
(bad)
loopne
test
or
dec
xchg
nop
sbb
fdivrp
leave
pushf
lock
jmp
outs
mov
sub
rcl
mov
pop
shl
pushf
jl
inc
test
pop
mov
pop
pushf
jbe
dec
into
dec
push
push
mov
jb
inc
sub
cmp
sahf
sbb
cli
fld
lea
sub
aad
xchg
xlat
addr16
ins
xlat
xor
outs
and
mov
dec
dec
fsubp
add
ja
mov
xchg
leave
pop
clc
jbe
jne
cdq
inc
xlat
add
mov
ds
or
scas
hlt
pop
lods
sar
stos
cdq
mov
and
enter
imul
push
out
dec
aam
aad
jbe
outs
or
mov
jo
or
cmp
xchg
stc
(bad)
inc
outs
cdq
pop
or
or
nop
mov
or
pop
outs
push
cmp
dec
leave
cwde
xchg
iret
inc
adc
cmp
popa
xor
ja
pop
mov
(bad)
xor
jmp
mov
mov
outs
or
ja
push
out
inc
jb
push
test
inc
push
iret
sbb
sahf
cmp
hlt
add
mov
shl
addr16
dec
cmp
(bad)
jnp
mov
pushf
pop
fild
or
out
adc
xor
sub
mov
rcl
sbb
push
ds
scas
mov
sub
leave
mov
pop
repnz
add
and
or
ret
pushf
lods
mov
cmps
sbb
ret
out
and
test
add
bound
mov
push
cs
pusha
and
stos
pop
(bad)
mov
inc
inc
psadbw
push
xor
inc
hlt
mov
sbb
sahf
into
sbb
pop
inc
push
or
cmp
cmp
push
dec
cmps
dec
loop
lock
or
movs
imul
push
lods
and
push
ds
push
pop
jns
in
cmp
push
push
jbe
mov
xabort
ss
sub
outs
rep
mov
out
and
mov
mov
mov
adc
addr16
or
xor
je
hlt
mov
popf
xchg
out
(bad)
dec
inc
test
test
int
lds
sar
or
outs
adc
dec
sub
push
daa
dec
pushf
cli
scas
xchg
(bad)
jns
fiadd
inc
cli
cmp
mov
push
ja
and
pop
mov
mov
hlt
and
adc
sub
bound
popf
test
pop
xchg
leave
test
pop
ret
mov
or
xor
inc
push
jns
sub
mov
cmp
sbb
adc
es
lldt
pushf
jmp
data16
loope
push
pop
pop
fldenv
repnz
call
ror
mov
sbb
or
std
test
(bad)
dec
jne
xchg
pop
push
(bad)
mov
mov
push
xchg
das
mov
es
pop
out
ror
xor
test
scas
je
sti
and
jle
dec
fstp
jo
stc
cwde
ficom
mov
lds
mov
lea
lock
scas
xchg
adc
fwait
push
jmp
xchg
lock
aam
mov
mov
inc
push
pop
cwde
xchg
push
das
fcomp
hlt
(bad)
outs
cld
enter
cdq
inc
aam
cld
movs
adc
les
lods
imul
cmp
pushf
sub
xor
mov
sbb
pop
inc
test
sub
cmp
mov
das
sub
popf
pop
pop
inc
(bad)
sbb
jmp
jo
adc
sub
(bad)
idiv
lock
or
dec
(bad)
push
push
inc
xchg
sub
ja
inc
(bad)
push
jno
inc
jmp
imul
mov
cmp
cld
adc
cbw
mov
cmc
outs
mov
sub
scas
mov
dec
sub
push
aad
and
sub
shl
dec
push
or
cmps
and
mov
mov
(bad)
mov
enter
and
adc
sbb
mov
push
sbb
xor
lahf
pop
test
sub
xchg
les
imul
in
(bad)
xor
lods
dec
cld
sub
mov
dec
das
aad
loope
pop
imul
lea
shr
pop
add
sti
dec
mov
sbb
and
je
pop
aaa
(bad)
jae
pushf
je
mov
dec
push
ret
hlt
or
push
shl
scas
and
in
shl
(bad)
std
jnp
loope
cmps
in
xlat
dec
dec
push
adc
retf
pop
clc
ret
sar
xchg
movs
push
out
scas
add
and
pop
xor
or
fld
js
js
ins
xchg
sbb
adc
cmp
mov
cmps
into
dec
imul
pop
pop
sbb
mov
retf
sbb
push
inc
fwait
cdq
daa
xor
push
sti
or
mov
pop
push
(bad)
in
out
retf
idiv
pushf
or
sti
sbb
sbb
push
imul
out
xlat
out
ret
outs
lds
mov
cli
push
sbb
out
xor
repnz
and
mov
push
ret
clc
pop
cs
cmps
mov
cmp
daa
jno
add
dec
and
adc
shl
mov
and
pushf
jns
sti
aas
rol
out
add
not
jp
sahf
gs
inc
jg
aam
arpl
stos
push
jo
dec
test
jno
fdiv
sub
xlat
sar
pop
aam
movs
fs
leave
call
xlat
xor
je
jle
popa
push
in
inc
push
dec
fimul
or
fistp
fnstsw
sti
int3
mov
popa
mov
cmp
mov
sub
mov
mov
dec
rol
sahf
mov
and
push
push
adc
inc
cwde
mov
test
adc
lods
jo
popf
sub
push
or
xor
xor
popa
mov
int3
cli
call
(bad)
movs
inc
mov
mov
loope
jns
mov
and
out
mov
call
mov
jg
lea
ins
jne
lock
adc
pushf
push
xchg
les
xor
dec
xchg
jne
iret
mov
ret
movs
aam
xor
outs
pop
gs
mov
int
call
imul
mov
fst
dec
out
xchg
jmp
adc
xor
cwde
mov
lods
dec
or
sub
xchg
out
cmp
jg
or
adc
nop
push
sti
xor
mov
rcl
xchg
or
mov
sbb
arpl
loop
mov
inc
mov
ds
pop
and
push
push
xchg
dec
mov
fs
sbb
mov
sbb
cli
nop
mov
(bad)
or
out
test
cli
sbb
mov
jno
loopne
inc
and
aam
sub
loope
xchg
loope
mov
add
aas
sub
mov
fistp
push
xchg
cmp
sar
adc
sub
sbb
push
inc
loope
mov
scas
(bad)
and
pop
xor
lahf
sahf
cmp
stos
adc
jb
push
dec
outs
sub
pop
pop
or
sbb
(bad)
push
ss
add
(bad)
sar
retf
cwde
xor
mov
xchg
leave
inc
mov
mov
mov
sub
add
cmp
jl
and
movs
test
push
in
cmc
retf
fs
sahf
addr16
push
dec
inc
adc
and
cmc
mov
repz
fwait
dec
xor
and
addr16
dec
adc
pop
jb
stos
cld
cmp
mov
js
cdq
aam
sub
cmp
fldenv
cwde
xor
mov
mov
out
sbb
repz
mov
mov
test
mul
cmp
jge
test
jge
pop
jae
xchg
add
dec
push
sub
mov
sub
mov
lods
cmps
fnsave
jb
call
jle
shl
(bad)
cdq
call
pop
ficomp
(bad)
rcl
mov
push
inc
mov
jnp
and
push
cwde
jbe
(bad)
and
adc
push
(bad)
xchg
mov
jecxz
cmp
jo
jg
sub
xchg
sbb
pop
pop
and
ret
fcomp
lea
outs
push
xchg
adc
in
xor
pop
inc
in
add
sahf
xchg
cld
mov
pop
mov
cmp
dec
dec
xor
pop
scas
xchg
inc
ror
std
and
sub
push
or
sbb
sbb
inc
ficomp
inc
into
movs
jecxz
inc
aaa
xor
outs
push
pusha
or
retf
leave
shl
fmul
fsin
fbld
pop
dec
jo
(bad)
push
add
mov
outs
ss
push
iret
add
mov
dec
das
sbb
cmp
or
pop
lea
std
jo
mov
or
jmp
sbb
dec
in
ins
and
fnstcw
sar
add
pushf
hlt
ins
ins
sbb
cmps
fistp
or
mov
sti
js
(bad)
es
pop
ins
push
push
ins
fild
pop
mov
dec
fisttp
jne
cli
adc
inc
lods
ja
loop
cli
add
mov
test
ins
pop
dec
mov
repnz
pop
jmp
add
sahf
es
pop
push
arpl
mov
in
jmp
push
push
movs
es
mov
cmp
mov
fimul
rcr
cmc
xchg
fsub
pop
inc
xchg
rcr
or
ins
xlat
pop
lods
add
call
sbb
adc
imul
sub
xchg
(bad)
in
add
pop
cmp
xchg
std
mov
rcl
mov
das
mov
sbb
mov
push
rol
in
jmp
xor
dec
ret
clc
stos
sbb
jmp
stos
dec
movs
sub
rol
fdiv
rcr
jo
sbb
mov
loope
and
push
or
push
mov
pop
test
leave
xor
das
bnd
dec
xor
in
(bad)
adc
add
addr16
mov
sbb
dec
call
or
cmp
fbstp
(bad)
retf
lahf
jg
daa
sar
or
add
mov
push
dec
adc
dec
loop
dec
sub
repnz
(bad)
lock
push
add
movs
in
retf
push
cmp
dec
or
gs
dec
int
fdivr
in
or
stos
jmp
dec
mov
test
xlat
cmp
lods
mov
leave
cld
mov
pop
outs
cwde
pop
sbb
pop
cld
pop
fldenv
scas
and
scas
or
std
lahf
pop
fcom
jg
dec
scas
test
sbb
arpl
repz
pop
dec
push
jmp
cli
outs
add
pop
add
lahf
shl
pushf
xchg
dec
das
ficom
xchg
xchg
or
xor
mov
out
mov
pop
addr16
retf
inc
xchg
cmp
xchg
stc
das
sub
data16
nop
lock
pop
add
dec
or
call
bound
xchg
aaa
xchg
push
sbb
movs
inc
jl
adc
dec
(bad)
cmp
dec
mov
adc
sub
std
mov
jmp
clc
or
fstp
data16
dec
lock
jmp
mov
cs
jo
or
call
pop
cmp
aaa
ds
aas
cwde
xor
hlt
call
mov
xchg
cmp
mov
push
push
ds
jb
xor
fsub
pop
call
cmps
cmps
and
clc
sub
dec
mov
cmp
xor
int3
enter
jne
xlat
jae
xchg
stos
or
lods
ja
out
arpl
bound
sub
adc
imul
imul
pop
jecxz
lods
pop
(bad)
pop
add
stos
ficomp
xchg
arpl
add
fmul
stc
das
mov
push
sub
je
cmp
test
fwait
aas
mov
push
jg
int3
out
lea
add
loopne
adc
and
out
and
pcmpeqb
xchg
rcl
push
xchg
aam
xchg
loopne
mov
fs
addr16
adc
push
arpl
sbb
dec
stc
mov
ins
xchg
jmp
test
stos
fcom
scas
ins
ja
mov
mov
xor
xchg
xchg
sbb
xchg
pop
mov
ror
arpl
sti
jle
and
imul
sbb
retf
shl
rcl
mov
les
jb
push
push
cmp
mov
arpl
mov
fistp
fiadd
je
jmp
in
xchg
adc
mov
or
jne
dec
jmp
mov
bound
cdq
cld
inc
repz
stos
push
fsqrt
cmp
cmp
loop
pop
jae
lods
jecxz
add
fistp
jbe
outs
je
cmps
int
cmp
sub
neg
ror
stos
adc
add
cmps
nop
das
inc
or
int
dec
ins
jecxz
xchg
popa
fst
(bad)
fwait
repnz
fidiv
mul
jmp
test
jge
push
aas
out
sub
in
pop
jne
mov
mov
xchg
aas
inc
ins
mov
test
mov
out
sbb
int3
popa
test
mov
pushf
pop
xor
add
cli
sub
pushf
inc
retf
aad
mov
push
inc
jns
inc
cmps
mov
sub
add
cmp
lods
adc
leave
mov
mov
mov
inc
pop
jmp
sbb
mov
clc
adc
cmp
cld
mov
cs
ja
jp
(bad)
sub
push
or
inc
loope
jae
pop
movs
cdq
(bad)
sub
xor
jbe
and
and
sub
xor
push
cli
mov
not
cs
lods
popa
lea
daa
pusha
xor
cmps
loope
nop
pop
sbb
dec
xor
pop
rcl
(bad)
push
pop
pusha
push
xchg
inc
cmp
xchg
jmp
mov
pop
push
jne
pushf
add
loope
and
jge
rol
fs
iret
in
in
lahf
adc
jo
orps
push
sti
xchg
inc
and
test
sar
pop
sbb
jg
adc
sub
fnsave
adc
lods
mov
mov
mov
outs
daa
pop
and
div
dec
mov
enter
lahf
adc
adc
sti
out
xchg
jno
add
rcr
sbb
std
mov
sar
(bad)
out
sbb
mov
sbb
outs
mov
pop
gs
adc
jb
pop
mov
xchg
or
pop
sahf
mov
pop
jge
and
loope
mov
pop
pusha
xchg
cmc
sbb
cdq
mov
cmp
lock
pop
mov
outs
retf
stos
jecxz
clc
rol
icebp
(bad)
lods
les
or
cwde
shr
mov
sub
(bad)
fwait
adc
inc
dec
add
lods
je
ror
ror
jp
mov
push
fsub
cdq
sbb
cdq
loope
jp
push
xor
int3
sub
push
and
mov
ds
rcl
cmp
mov
adc
adc
lock
iret
xchg
pop
ss
fidiv
adc
adc
call
(bad)
dec
and
and
out
ins
shr
rcl
femms
mov
xchg
addr16
inc
inc
jl
scas
stc
das
push
xchg
jl
cs
mov
jle
cdq
push
bound
push
mov
in
push
xor
sbb
xor
shl
stos
out
mov
xor
xchg
rcl
mov
int3
xchg
mov
cwde
out
or
pop
data16
sbb
addr16
lods
das
pusha
inc
or
in
fcompp
jge
scas
in
or
push
or
push
xor
xchg
sar
mov
push
cmps
arpl
out
arpl
mov
adc
loopne
or
cmps
push
pop
adc
jecxz
retf
mov
scas
cmp
iret
sbb
jmp
cmp
mov
(bad)
stc
mov
add
inc
cmps
push
inc
and
jbe
jmp
jecxz
stos
bound
cmp
fwait
jmp
mov
in
lods
or
pop
stc
hlt
xchg
pop
cmp
es
mov
test
das
loopne
popa
int3
xchg
adc
inc
push
pushf
sbb
ror
cmp
jge
int
leave
sti
aad
mov
push
lds
add
sub
inc
dec
ins
adc
rol
inc
ja
add
pop
rcr
xchg
popa
mov
cmps
cmp
inc
in
test
mov
xor
jo
or
cs
jae
out
fisttp
inc
(bad)
xchg
ins
fwait
movs
add
xchg
nop
cmps
and
mov
pop
cmp
mov
or
leave
adc
push
mov
mov
call
sbb
enter
sub
sbb
mov
loop
pop
pushf
leave
clc
sub
jb
inc
fnstenv
shl
out
aas
and
push
iret
fist
test
push
dec
sahf
das
xor
in
mov
es
retf
out
leave
cmc
jnp
cld
dec
rcr
shrd
dec
xchg
sub
inc
mov
out
pop
les
outs
jmp
out
rcl
sbb
pop
fdivr
js
add
push
shl
pop
dec
xchg
enter
mov
out
jg
arpl
retf
jl
mov
(bad)
and
adc
push
repz
and
(bad)
arpl
inc
repz
ror
daa
mov
jmp
mov
repz
mov
mov
sub
aaa
lock
enter
xor
sahf
jb
jnp
push
cmps
pop
xchg
imul
cmp
retf
xor
mov
jle
dec
and
fwait
cmps
pop
iret
add
pushf
scas
mov
icebp
scas
cli
je
pop
div
mov
inc
int
sbb
rcl
ret
lds
mov
ja
mov
ss
cmp
lock
cwde
dec
mov
lea
mov
scas
jmp
ret
lea
jb
div
into
xchg
jp
retf
xchg
fld
aam
pop
push
adc
out
retf
inc
xor
xlat
jb
push
clc
cli
and
mov
aad
sbb
aad
sub
pop
call
scas
jo
cmp
rcr
cmp
jg
outs
bound
ins
aam
stos
jnp
in
adc
mov
repnz
ja
mov
cwde
cmp
jg
shr
(bad)
pusha
xchg
sub
in
stc
popf
in
xor
movs
inc
mov
out
test
xchg
je
inc
adc
(bad)
push
jg
mov
inc
mov
mov
xor
xor
xchg
inc
ror
dec
and
cmps
dec
jne
xchg
dec
xchg
mov
mov
and
pop
dec
sbb
push
(bad)
jecxz
mov
mov
jle
mov
xchg
push
push
mov
add
pop
into
cmp
jnp
aas
shl
push
cmp
pop
sar
xor
or
mov
xor
mov
push
jle
mov
adc
push
dec
(bad)
mov
pop
inc
shl
or
fist
xchg
je
test
push
or
sbb
es
push
dec
call
pop
jbe
retf
into
test
into
fiadd
mov
(bad)
mov
iret
sub
mov
and
mov
mov
pop
cld
popf
cmc
ss
and
aaa
jmp
sbb
jge
bound
stc
xlat
adc
pop
pop
ficomp
loope
fimul
movs
addr16
cmp
jcxz
pop
mov
repz
push
push
scas
xor
cmp
lahf
movs
leave
jmp
arpl
sar
xchg
aas
ret
sahf
cmp
inc
inc
cwde
jmp
dec
imul
dec
jecxz
out
xchg
xchg
adc
aas
pop
inc
std
dec
dec
pop
add
popf
out
sub
add
aam
jo
into
in
xor
adc
sbb
loope
int3
js
imul
sub
add
aam
mov
sub
je
inc
adc
in
les
shr
xor
sbb
cmp
cmp
push
xor
push
call
data16
sar
std
inc
jo
jle
mov
pop
add
ins
call
adc
shl
mov
adc
push
mov
push
adc
xor
xchg
ret
movs
inc
jl
jo
sub
test
iretw
push
sbb
movs
xchg
push
sbb
mov
xchg
ds
sbb
push
sub
pop
cmps
(bad)
gs
add
mov
jb
outs
cmp
add
mov
jge
adc
add
arpl
shl
mov
or
xor
adc
ds
loope
jl
sub
dec
ins
lods
ror
push
mov
fst
mov
jb
pop
cmp
pop
adc
pop
loop
xchg
movs
cld
xchg
movs
or
dec
fisttp
adc
pop
sbb
arpl
jns
pop
shl
sub
std
push
repz
out
(bad)
popf
jmp
add
pop
mov
pusha
push
mov
pop
cmps
push
xchg
mov
out
and
xor
adc
jne
bound
xor
sar
mov
mov
fld
dec
scas
fdivr
arpl
sbb
clc
sub
dec
out
xor
adc
sar
pusha
popf
scas
mov
dec
in
xor
xor
frstor
push
inc
in
add
jge
jecxz
(bad)
mov
mov
mov
mov
in
fld
xlat
loop
inc
inc
xchg
test
aaa
cmp
popa
mov
int3
push
retf
pop
dec
jp
add
adc
out
aad
into
test
mov
jo
jge
sub
or
fdivp
loopne
xchg
lock
xchg
push
outs
cld
sbb
not
cmp
jns
in
mov
adc
fmul
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
dec
add
cmp
add
js
add
test
add
call
add
add
add
add
add
add
add
add
add
add
add
dec
add
adc
add
add
add
add
add
add
add
add
add
add
push
test
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
or
add
xor
add
pop
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
push
je
add
add
add
add
add
add
add
add
clc
add
add
push
add
test
add
in
add
add
add
add
add
add
add
and
add
fsub
add
test
add
in
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
mov
add
call
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
in
add
add
add
add
or
add
add
push
add
add
add
js
add
mov
add
add
add
add
add
lock
add
add
sbb
add
inc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
aam
add
add
add
in
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
or
add
add
add
add
cmp
add
in
add
add
add
add
add
or
add
add
add
add
sub
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
add
or
add
in
add
add
add
add
add
or
add
cmp
add
add
in
add
add
add
add
add
or
add
cmp
add
add
in
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
or
add
add
add
add
cmp
add
in
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
or
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
cld
jmp
ffree
mov
fidivr
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
scas
mov
jmp
lods
cmp
stos
jg
in
cmps
jnp
out
movs
ja
out
mov
outs
push
mov
push
(bad)
dec
inc
add
inc
add
(bad)
cld
jmp
(bad)
cld
jmp
(bad)
cld
jmp
(bad)
cld
jmp
(bad)
sti
jmp
sti
jmp
(bad)
cli
call
fdivr
cli
out
(bad)
cli
out
(bad)
cli
in
(bad)
cli
in
(bad)
cli
jecxz
(bad)
cli
loop
(bad)
stc
loopne
(bad)
stc
loopne
(bad)
stc
fmulp
(bad)
stc
(bad)
(bad)
stc
fmul
(bad)
stc
fcmovne
push
pushf
inc
add
inc
add
(bad)
cld
out
in
sti
in
in
cld
in
in
sti
in
in
sti
in
jecxz
cld
jmp
(bad)
sti
jmp
(bad)
sti
jmp
(bad)
sti
jmp
sti
jmp
fdivr
cli
out
(bad)
cli
out
(bad)
cli
in
(bad)
cli
in
(bad)
stc
loop
(bad)
cli
loope
(bad)
cli
loopne
(bad)
stc
(bad)
(bad)
stc
fmulp
(bad)
stc
fmul
push
popf
inc
add
inc
add
(bad)
cld
out
out
cld
out
out
sti
out
out
cld
out
out
cld
out
out
cld
in
in
cld
in
in
cld
in
in
cld
in
jecxz
cld
jmp
(bad)
cld
jmp
sti
jmp
sti
out
(bad)
cli
out
(bad)
cli
in
(bad)
cli
in
(bad)
cli
loop
(bad)
stc
loope
(bad)
cli
loopne
(bad)
cli
(bad)
push
sahf
push
add
add
add
add
cld
icebp
jmp
icebp
jmp
lock
(bad)
std
out
call
(bad)
cld
out
out
cld
out
in
cld
in
in
cld
in
jecxz
cld
in
loope
shr
mov
shl
xchg
shl
(bad)
cli
jecxz
(bad)
cli
loope
(bad)
cli
loopne
push
mov
add
add
add
std
repz
(bad)
std
repz
(bad)
std
repz
(bad)
std
repnz
(bad)
std
repz
std
bnd
cld
repnz
icebp
jmp
(bad)
cld
out
out
cld
out
out
cld
in
in
cld
in
jecxz
cld
jmp
(bad)
sti
jmp
sti
call
fcos
cli
in
(bad)
cli
jecxz
(bad)
cli
loop
push
mov
add
add
add
std
cmc
out
(bad)
std
hlt
out
jmp
shr
loope
mov
(bad)
fidivr
pushf
(bad)
(bad)
xchg
(bad)
fnstenv
xchg
call
scas
xchg
call
lods
(bad)
call
stos
(bad)
call
test
mov
shl
xchg
sti
out
(bad)
cli
in
(bad)
cli
jecxz
(bad)
out
mov
add
add
add
(bad)
div
(bad)
std
div
(bad)
std
div
(bad)
std
div
(bad)
std
div
(bad)
(bad)
cmc
lock
std
cmc
lock
std
cmc
lock
std
hlt
out
(bad)
std
repz
(bad)
std
repz
(bad)
std
repnz
(bad)
cld
icebp
jmp
out
out
cld
out
in
cld
in
in
cld
jmp
(bad)
cld
jmp
sti
out
(bad)
cli
in
(bad)
in
movs
ja
add
add
add
add
std
clc
repz
std
div
jmp
lds
jmp
shr
loopne
mov
(bad)
fidivr
pushf
(bad)
fdiv
cwde
(bad)
fnstenv
xchg
call
scas
xchg
call
lods
(bad)
call
stos
(bad)
call
stos
mov
shr
loopne
sti
jmp
(bad)
in
cmps
jnp
add
add
add
add
(bad)
stc
cmc
(bad)
(bad)
stc
cmc
(bad)
(bad)
stc
cmc
(bad)
(bad)
clc
cmc
(bad)
(bad)
clc
cmc
(bad)
(bad)
clc
cmc
(bad)
(bad)
clc
cmc
(bad)
std
div
(bad)
(bad)
div
(bad)
(bad)
div
(bad)
std
div
(bad)
std
div
(bad)
std
cmc
lock
std
hlt
out
(bad)
std
repz
(bad)
cld
bnd
cld
icebp
jmp
(bad)
cld
out
in
sti
in
loop
sti
jmp
jmp
jg
add
add
add
add
add
add
(bad)
cli
idiv
(bad)
cli
idiv
call
(bad)
scas
jmp
lds
jmp
ret
loop
cmps
jmp
mov
mov
(bad)
fnstsw
call
mov
(bad)
fdiv
xchg
call
lods
(bad)
call
stos
mov
cld
out
in
cld
in
jecxz
sti
jmp
add
add
add
add
add
add
add
add
add
(bad)
(bad)
fcos
fcmovnu
aad
aad
into
call
retf
retf
(bad)
(bad)
dec
mov
into
retf
icebp
in
jmp
(bad)
std
clc
cmc
(bad)
(bad)
clc
cmc
(bad)
(bad)
clc
hlt
(bad)
(bad)
div
(bad)
std
div
(bad)
std
cmc
lock
std
hlt
in
(bad)
std
bnd
cld
icebp
jmp
(bad)
cld
in
in
cld
in
loop
call
add
inc
add
add
add
add
add
push
add
add
add
add
mov
scas
jmp
jl
call
nop
cmp
cmps
cdq
dec
mov
cdq
(bad)
mov
mov
mov
(bad)
fidivr
popf
(bad)
fdiv
cwde
(bad)
fnstenv
xchg
call
scas
xchg
(bad)
cld
icebp
jmp
(bad)
cld
in
in
out
mov
add
add
