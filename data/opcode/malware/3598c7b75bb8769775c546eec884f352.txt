jg
(bad)
call
in
mov
cmp
ja
movzx
lea
jmp
neg
mov
ret
lea
add
push
sbb
lods
sbb
add
add
or
fcom
add
int3
pop
in
lods
sar
add
xor
pop
push
or
aaa
xor
aas
cmp
aas
push
mov
push
mov
push
push
call
test
jne
pop
pop
dec
dec
(bad)
fst
pop
inc
call
je
cmp
dec
adc
mov
jmp
adc
add
dec
movzx
lea
jne
sbb
pop
pop
imul
fnsave
sar
neg
sbb
and
pop
xchg
int3
fistp
call
jne
mov
shr
call
push
push
push
cmc
or
inc
push
mov
lods
add
jg
sahf
(bad)
sbb
push
push
js
lea
or
push
rcl
test
jg
add
mov
call
ret
call
call
add
outs
icebp
in
(bad)
aas
push
push
or
shl
in
adc
push
push
push
and
pusha
xor
xor
push
lea
mov
jge
push
mov
mov
mov
add
in
(bad)
jne
cli
inc
pop
mov
inc
pop
jp
mov
xor
push
adc
push
cmp
pop
dec
cwde
mov
mov
mov
loopne
add
add
jae
pop
aaa
cld
fwait
inc
in
sar
fisttp
xchg
ret
div
mul
jnp
lock
mov
push
sbb
inc
pop
push
adc
in
pop
mov
fdivrp
add
xor
push
mov
mov
push
sbb
out
sbb
and
sub
jnp
out
xor
jo
lea
adc
mov
mov
push
inc
add
fstp
pop
push
adc
cmp
pop
mov
test
dec
xor
fisubr
push
sub
pop
je
sbb
jmp
push
aad
leave
int
das
aad
nop
dec
cmp
ret
in
and
mov
leave
push
ret
jbe
aad
in
and
mov
and
fs
xor
leave
pop
inc
or
inc
leave
jl
cwde
pusha
cdq
and
shr
add
xchg
sbb
add
cmp
jge
(bad)
shl
hlt
mov
mov
retf
or
push
push
mov
cli
cwde
cld
mov
xor
push
and
ret
push
and
pop
mov
mov
ret
pop
(bad)
and
cmp
jns
dec
leave
push
stc
mov
mov
ja
jge
or
or
dec
lea
(bad)
loopne
cmp
or
push
idiv
inc
sbb
or
scas
loopne
adc
ret
fdivr
sub
or
and
cmp
je
inc
and
or
or
xlat
mov
fwait
inc
cs
mov
scas
xchg
mov
adc
hlt
lock
pop
push
dec
ror
push
pop
jne
pop
pop
mov
jae
dec
cld
xor
cs
mov
in
call
int3
push
xor
cmp
jle
fs
mov
adc
mov
cmp
add
je
mov
xor
or
ja
mov
loope
add
rol
jl
cmp
repnz
or
in
pop
and
mov
je
push
mov
(bad)
fbstp
mov
cmp
jge
mov
mov
test
je
mov
cmp
pop
sbb
inc
sub
pop
pop
cmp
test
jnp
cmps
mov
popa
jnp
mov
jo
or
xchg
or
fistp
push
dec
dec
adc
inc
and
mov
fistp
add
test
inc
ret
inc
cmp
mov
sbb
lods
and
pop
mov
mov
cmp
or
xor
jl
sbb
test
daa
and
mov
cld
or
lock
cmp
je
lea
inc
clc
add
(bad)
mov
sub
enter
sbb
fnstenv
adc
cld
or
dec
or
sbb
dec
push
hlt
cmp
xchg
sbb
cmp
div
xchg
popa
mov
push
and
das
jge
call
cmp
ins
sar
inc
ins
pop
inc
enter
cdq
lahf
xor
cli
sub
and
push
and
mov
and
hlt
pop
mov
ds
ret
cmp
jo
imul
push
add
int
inc
push
je
nop
jle
xor
add
sub
mov
fbstp
cld
cmp
mov
inc
dec
ins
cmp
jg
dec
inc
sub
cli
clc
push
into
je
push
lea
or
test
mov
sub
inc
leave
js
fild
sbb
hlt
add
pop
cmp
xlat
cmp
push
bound
push
movs
push
jecxz
and
jg
mov
xor
leave
lea
mov
seto
push
neg
or
push
lock
mov
cwde
aas
add
sar
clc
adc
int3
enter
push
push
fwait
jle
mov
in
add
jmp
or
and
pop
fcom
mov
pop
jne
sub
shl
dec
or
jo
adc
pushf
push
dec
inc
nop
add
faddp
pop
std
pop
xor
ficomp
dec
adc
lods
xor
mov
xchg
sar
stos
maxps
aad
popa
or
lea
cmp
addr16
inc
lock
dec
lahf
adc
cmp
or
mov
push
fwait
jo
add
jne
(bad)
in
out
bound
push
mov
mov
mov
popf
mov
mov
aam
int3
add
push
add
xchg
scas
xor
dec
ret
mov
aas
arpl
add
cmp
mov
das
ds
xor
test
movzx
dec
push
ins
inc
shl
xor
iret
jb
pop
jmp
ss
das
mov
push
push
popa
push
inc
icebp
push
mov
adc
xor
cwde
adc
in
sbb
movs
pop
cmps
cmp
cwde
mov
add
popa
ins
add
add
dec
push
enter
xchg
sub
cmp
jl
mov
je
cmp
or
and
enter
pop
jge
push
add
mov
test
or
sub
or
leave
mov
hlt
mov
mov
lahf
push
inc
add
xor
je
jge
sti
retf
hlt
jmp
lahf
pop
inc
push
mov
mov
mov
inc
clc
sub
or
cmc
retf
xor
dec
and
push
jl
mov
clc
ficomp
arpl
sbb
inc
push
adc
scas
cmp
cdq
or
adc
call
mov
cmp
jg
mov
mov
adc
jp
xor
fidivr
mov
sbb
adc
call
push
sbb
push
outs
stos
cwde
xor
rol
xor
mov
jb
inc
push
push
rcl
inc
push
lods
fnstenv
jmp
push
cmps
cmp
jns
xlat
movs
xor
adc
dec
movs
jg
loopne
dec
pop
test
cmp
stc
pop
call
nop
cmp
rol
pop
xor
fcmovnu
inc
jg
push
fimul
cld
jbe
ins
mov
push
jne
ds
in
pop
clc
jmp
fcom
or
sub
shl
mov
icebp
dec
shr
cli
jg
push
clc
lea
add
push
cmp
or
jecxz
test
cld
mov
or
push
arpl
call
push
das
lea
aaa
or
sbb
fwait
jle
mov
hlt
aad
xlat
jle
mov
sar
cmp
sar
daa
je
aas
mov
jl
inc
jle
add
inc
jno
mov
idiv
not
adc
(bad)
jmp
mov
pop
hlt
sub
jmp
adc
xor
adc
enter
mov
vmread
fadd
ret
lea
add
push
lea
adc
push
push
js
sbb
pop
add
inc
or
or
fwait
les
cld
adc
or
jg
push
cld
shl
cs
lock
cmp
jge
mov
or
and
adc
push
inc
or
sbb
jo
pop
add
fimul
test
aad
neg
fsub
mov
int3
mov
and
push
mov
ret
pop
aas
mov
ja
jl
ins
mov
out
nop
adc
push
pop
arpl
mov
inc
aas
aas
push
or
inc
fdivr
cmp
adc
lock
in
dec
loopne
cwde
mov
int3
pop
push
cmp
add
xor
add
in
mov
jno
push
mov
lock
mov
cmp
dec
pop
leave
dec
in
rol
lahf
push
fisttp
or
in
test
or
pop
enter
mov
sti
shr
outs
cwde
pushf
xchg
sub
test
ror
lods
test
lock
inc
fcom
xchg
xor
ror
loop
daa
in
sub
and
push
add
int3
push
push
dec
xor
adc
outs
push
sbb
sbb
mov
jmp
jb
mov
dec
test
adc
inc
adc
add
push
inc
sub
inc
or
inc
push
and
mov
mov
mov
sbb
pop
push
and
push
and
jle
sahf
sbb
call
xchg
inc
in
mov
dec
pop
imul
les
sub
jle
cld
aad
mov
pop
and
jnp
mov
mov
lea
cli
dec
mov
inc
pop
inc
inc
or
push
and
jg
mov
sub
loopne
adc
inc
xor
(bad)
in
cmp
add
xchg
add
fmul
arpl
repnz
jl
out
jne
mov
inc
shl
loopne
cmp
add
addr16
popf
lea
cmc
cmps
fcomp
daa
add
and
or
xor
inc
fidiv
dec
das
jmp
cmp
jae
add
aaa
not
adc
sub
(bad)
sub
jnp
aas
mov
cmp
mov
retf
dec
(bad)
mov
test
mov
inc
adc
push
aaa
xchg
div
(bad)
test
or
and
sbb
or
es
pop
jb
mov
jns
xor
jle
sbb
push
or
lds
and
push
add
push
cmp
je
push
mov
in
in
push
or
xchg
test
clc
inc
imul
je
mov
sub
push
xor
inc
add
pop
cmp
dec
call
ins
lods
xor
and
adc
ret
xchg
fsub
and
push
add
push
pop
fcom
push
push
dec
mov
sub
mov
push
adc
xchg
and
call
(bad)
sbb
leave
lock
pop
fwait
hlt
int3
push
loop
ficom
add
nop
xlat
add
jl
(bad)
jl
xchg
data16
and
lock
and
mov
pop
pop
adc
add
sbb
pop
adc
aaa
loopne
pop
or
sbb
inc
in
jecxz
sbb
out
xor
mov
add
js
(bad)
(bad)
cmp
adc
xchg
push
xchg
sti
aad
js
call
pop
outs
nop
push
test
test
call
idiv
jbe
sbb
ror
or
test
push
jb
jo
js
test
mov
scas
jb
cwde
rcr
dec
movs
mov
lods
test
mov
scas
bnd
fmul
loopne
call
cs
lock
clc
hlt
xchg
retf
test
adc
sbb
sbb
retf
sub
sub
in
into
xchg
fdivr
sub
cmp
test
(bad)
cmp
add
adc
data16
outs
cmp
in
sbb
inc
ret
cmc
fucomi
xlat
mov
ret
mov
cmp
ret
mov
dec
mov
xchg
mov
fmul
fsub
lock
add
call
lock
cwde
popf
jne
mov
mov
cmp
and
enter
mov
sub
push
xor
pop
int3
outs
in
rcl
stos
aas
jae
ret
fsubr
xor
xchg
mul
add
push
jp
les
pop
cs
retf
enter
je
adc
or
shl
adc
rcr
or
mov
pusha
or
in
adc
and
xchg
retf
in
or
mov
int3
ja
jg
rol
sub
scas
jmp
or
aad
or
mov
add
mov
nop
xor
into
sbb
xchg
retf
neg
pop
call
or
loopne
or
sbb
lahf
push
adc
(bad)
adc
cld
and
inc
scas
cs
or
xchg
sub
sub
mov
adc
push
mov
adc
push
push
mov
add
push
pop
mov
or
or
test
or
in
or
jmp
or
ror
test
mov
mov
popa
(bad)
xor
daa
cwde
cmp
xchg
retf
outs
nop
daa
add
mov
xchg
retf
add
js
add
jo
push
sub
sub
add
ret
inc
ss
mov
adc
nop
xor
and
sbb
cmps
push
test
lea
nop
push
mov
add
out
mov
mov
adc
cmp
add
push
or
loopne
mov
fcomp
das
nop
fst
pop
loopne
call
test
jp
fld
mov
mov
fstp
and
or
lahf
inc
jmp
sbb
fmul
sbb
int3
lahf
dec
xchg
loope
adc
cmp
or
pop
or
es
in
cdq
div
or
and
inc
cs
or
or
add
cs
pop
push
clc
ds
lock
call
loope
mov
sbb
push
lock
dec
push
out
pop
dec
add
(bad)
imul
cld
mov
pop
mov
dec
mov
fwait
jnp
pop
inc
sub
dec
mov
cdq
xor
sub
cmp
stos
cmc
sti
or
pop
mov
dec
xchg
add
jmp
inc
shr
sti
das
js
push
push
sub
cmp
lock
cmc
and
xor
and
mov
ficomp
push
es
(bad)
dec
dec
add
jecxz
or
mov
pop
push
loope
movs
push
push
xchg
xor
das
dec
out
push
push
mov
mov
hlt
xor
mov
in
xor
fmul
rol
ret
loopne
ins
push
dec
outs
jns
imul
and
adc
loope
adc
shl
fcom
popa
rcl
inc
loopne
(bad)
enter
mov
fadd
test
push
(bad)
or
xor
lods
dec
dec
cmps
push
cs
mov
icebp
fld
adc
add
adc
pop
xor
das
add
in
dec
sub
mov
mov
dec
push
dec
add
push
push
pop
das
pop
push
ror
cmp
popf
popa
inc
loopne
retf
pop
test
jbe
push
sbb
punpcklwd
jl
and
adc
sar
inc
pusha
retf
or
mov
adc
(bad)
jge
test
movs
js
adc
ror
add
mov
xchg
mov
push
xor
inc
add
bound
cmp
dec
and
cmps
dec
out
mov
jb
add
and
mov
or
add
int
sti
rol
and
outs
sub
retf
dec
lods
mov
mov
js
int3
xor
stos
or
sar
mov
rcl
nop
sbb
xchg
dec
adc
jg
int
outs
or
pushf
sbb
add
sar
mov
adc
jg
imul
or
or
and
pop
cmp
mov
dec
dec
inc
dec
test
icebp
push
(bad)
je
mov
push
mov
mov
push
xchg
push
data16
enter
jle
inc
cld
ins
xor
mov
xor
mov
(bad)
cmps
js
mov
jle
jecxz
call
call
idiv
repnz
mov
imul
and
adc
adc
add
mov
pop
xor
jb
push
cld
inc
mov
push
popf
and
pop
mov
clc
pusha
push
out
cmp
punpckhwd
ret
add
pop
jge
add
shr
test
fidiv
sub
mov
xchg
and
sbb
xor
pop
pop
push
adc
dec
adc
rcl
sub
dec
sar
push
adc
shl
pusha
push
or
or
and
xor
cmp
rcr
or
pop
cmps
jns
cmps
ins
add
je
xor
js
xchg
xchg
out
or
ins
imul
test
inc
add
jmp
popw
addr16
sbb
push
inc
adc
and
setae
cmp
and
retf
sbb
cmc
rcr
push
sahf
mov
rol
test
xor
arpl
je
sbb
xchg
ss
push
das
add
cmp
je
leave
enter
js
xchg
mov
xor
test
leave
enter
shl
mov
shr
dec
fild
push
stos
inc
sbb
enter
fsub
inc
cmps
sbb
dec
and
ds
loopne
mov
dec
movs
or
or
jne
jmp
dec
push
mov
movzx
inc
pop
push
shr
ret
ret
out
push
adc
enter
mov
adc
(bad)
out
mov
cli
add
inc
pop
shl
or
sbb
inc
jnp
pop
inc
daa
and
push
or
jmp
pop
push
mov
cmp
mov
ret
enter
in
rcl
sbb
push
stos
sbb
pop
pop
(bad)
mov
sub
pushf
and
sub
and
ja
mov
js
movs
push
sub
push
mov
pop
scas
dec
mov
adc
jo
int
mov
icebp
adc
rcr
test
(bad)
imul
mov
test
setge
lea
loopne
jbe
jbe
add
add
mov
adc
add
add
xor
jne
add
bound
xor
js
cmp
lods
adc
adc
xchg
jl
nop
add
lea
hlt
test
push
js
fisub
js
test
scas
jmp
jmp
mov
gs
jo
or
(bad)
pop
js
and
or
mov
mov
fucomip
lods
pop
popf
pusha
jo
jbe
sahf
mov
imul
push
pushf
mov
add
or
sbb
scas
imul
push
xchg
xor
shl
push
jl
push
iret
sbb
push
add
aas
pusha
js
out
in
push
adc
dec
mov
or
pop
xor
xchg
adc
cmp
mov
js
(bad)
jno
sbb
xor
sub
mov
repnz
ret
and
or
jge
push
cmp
sbb
cmp
xchg
in
add
sbb
in
mov
in
cmp
lock
or
mov
call
dec
rcl
xor
dec
in
mov
pop
retf
in
push
lods
repnz
and
pop
cmps
es
or
sbb
nop
inc
and
aad
or
sub
dec
ret
and
mov
hlt
jno
adc
and
cmp
je
movs
or
sbb
inc
iret
dec
add
sbb
sub
scas
cmp
es
sahf
mov
sbb
pop
jo
pusha
and
sub
sbb
and
sar
xor
sbb
inc
jne
mov
mov
bound
inc
and
jno
xor
cdq
xor
retf
sbb
add
inc
and
in
inc
add
inc
xor
call
xor
addr16
pusha
push
jb
xor
push
test
add
add
and
sub
(bad)
jbe
repz
mov
inc
hlt
sub
dec
(bad)
loopne
inc
or
jo
adc
cmp
jl
pop
mov
es
jg
inc
inc
xchg
or
pop
mov
adc
inc
inc
fidivr
inc
inc
inc
inc
and
and
inc
inc
inc
inc
cmp
pop
inc
inc
inc
jo
js
movs
dec
data16
xchg
adc
or
pusha
adc
adc
mov
out
ficom
add
iret
cmp
std
sbb
loope
call
cmp
ror
ss
inc
iret
mov
jg
jmp
pop
adc
aas
jmp
sub
mov
mov
push
inc
add
ret
add
pop
xor
js
jg
push
xchg
ss
cmp
fdivr
addr16
adc
fisttp
jecxz
sub
adc
mov
rol
movs
push
call
add
mov
les
cmps
push
mov
jne
inc
mov
adc
aaa
pop
gs
mov
aam
(bad)
jge
or
gs
mov
sub
adc
push
aas
add
xchg
push
sbb
pop
push
pusha
adc
or
jge
in
dec
je
adc
or
or
push
push
jae
stos
xchg
arpl
loop
mov
jl
jne
pop
push
adc
aas
aaa
mov
lds
or
and
or
jge
push
fmul
cmp
je
sbb
adc
dec
mov
cmp
shl
inc
jl
xor
push
cmp
fiadd
movs
push
and
cmp
cmp
js
mov
fadd
rcl
dec
mov
stos
push
(bad)
pop
mov
clc
ds
inc
inc
inc
or
cwde
adc
mov
or
mov
mov
or
mov
jle
adc
cs
xor
je
or
call
test
repnz
and
add
add
je
push
cmp
movups
cmp
jnp
adc
mul
adc
dec
dec
pop
aaa
fs
js
or
add
sar
xchg
add
adc
sbb
pop
push
test
mov
es
pop
add
jno
inc
push
push
lea
mov
loopne
mov
pop
scas
dec
pop
jne
lods
test
(bad)
jg
ins
adc
pop
loop
mov
(bad)
mov
adc
or
cmp
mov
(bad)
lock
pusha
in
xchg
ret
je
mov
and
xor
pop
mov
outs
ss
mov
xchg
ret
add
imul
jmp
mov
aad
outs
or
cmp
pop
call
sub
or
or
mov
dec
call
pusha
(bad)
adc
adc
push
fcmovb
add
fwait
jmp
inc
stos
and
mov
cmp
dec
xchg
iret
test
mov
hlt
aas
add
mov
sbb
int
loope
pusha
or
aam
mov
sti
iret
xchg
adc
ror
dec
adc
les
inc
rol
mov
hlt
mov
sahf
sub
clc
mov
ja
sub
xlat
or
add
or
pop
sbb
push
jmp
rol
pop
scas
daa
and
mov
aas
js
mov
hlt
mov
cmp
aad
fistp
sbb
cmp
jle
add
imul
scas
outs
(bad)
jp
fsubr
(bad)
sub
inc
cmp
or
pop
push
adc
inc
leave
push
lea
add
push
push
add
mov
push
push
push
sbb
push
aas
dec
bound
fstp
xchg
cmp
pop
call
pop
mov
mov
mov
sbb
out
xchg
dec
push
inc
inc
scas
or
add
int3
outs
cmp
mov
les
pop
fimul
retf
xchg
sbb
or
out
int3
les
mov
pop
cld
sub
mov
mov
inc
ret
inc
hlt
test
cmp
mov
out
popa
cld
cld
xchg
xor
je
mov
and
push
test
jne
dec
xchg
pusha
(bad)
inc
sbb
movs
adc
je
add
jne
jb
into
in
fcmovbe
imul
mov
jecxz
sub
mov
imul
mov
test
cmp
mov
je
adc
shl
lock
mov
jo
mov
and
call
push
fmul
mov
shr
ror
test
jbe
fadd
sub
ins
dec
rcr
cmp
scas
jecxz
xchg
ficom
ja
mov
mov
cmp
adc
rcl
push
iret
cmp
jae
push
fwait
nop
mov
mov
or
mov
xor
push
pop
jle
aam
jns
mov
test
sub
or
pop
inc
pop
in
and
cmps
enter
push
loope
je
arpl
sti
jo
jg
jo
adc
jbe
int3
jo
mov
fbstp
jg
cmp
inc
inc
ja
(bad)
stos
mov
xor
aas
mov
xor
pop
icebp
pop
fdiv
and
hlt
jg
push
test
push
push
sub
sub
sub
call
pop
pop
clc
jnp
js
fnstenv
push
dec
adc
pop
shr
add
push
mov
push
div
inc
add
jecxz
loop
cmp
mov
sbb
arpl
loop
dec
jg
inc
add
and
xor
push
adc
lock
imul
xchg
cmps
or
pop
arpl
(bad)
or
pop
mov
sub
lea
sub
push
dec
or
push
retf
mov
aas
pushf
dec
(bad)
xlat
cmp
(bad)
js
mov
and
pushf
xchg
jnp
push
jo
mov
aas
push
mov
push
push
inc
mov
mov
ror
pusha
int
loopne
sbb
mov
xor
add
subps
jmp
mov
rol
mov
into
cmp
sub
std
add
cmp
jle
in
stc
ret
aam
daa
loop
add
push
fld
adc
jmp
dec
lock
or
cli
mov
jne
cmp
out
inc
mov
push
jno
movs
adc
jns
jns
sub
call
mov
jg
ret
xchg
pop
cwde
mov
aaa
mov
mov
in
mov
cwde
push
lea
jl
jo
push
jne
jae
xor
cwde
push
fsubr
ins
cld
or
dec
test
add
pop
mov
fdivr
dec
inc
lods
mov
hlt
push
push
mov
pop
sub
loopne
inc
leave
inc
lods
inc
lods
push
push
pop
ror
nop
pop
mov
push
mov
pop
add
jb
int
cs
inc
push
repnz
xchg
imul
dec
xchg
and
adc
xchg
add
scas
and
enter
ret
test
mov
fild
lss
push
xor
push
push
inc
adc
sbb
jecxz
ret
pusha
inc
jecxz
pop
dec
jecxz
stos
sub
pop
adc
xchg
sar
sbb
inc
cmp
sbb
sahf
pop
clc
mov
or
push
push
test
retf
aad
loop
pop
add
pop
ret
std
cs
push
push
mov
jns
add
or
je
xchg
push
outs
out
push
push
addr16
jmp
aam
push
and
mov
mov
jnp
sbb
lea
inc
(bad)
cmp
adc
(bad)
fwait
inc
dec
cld
clc
mov
push
adc
inc
xchg
jecxz
xchg
rcl
push
jae
mov
sbb
lea
push
movs
inc
pop
pusha
mov
addr16
pop
ins
xchg
lahf
movs
jbe
pop
dec
imul
push
jno
mov
pop
rol
mov
movs
add
inc
stc
ret
push
push
es
add
dec
mov
scas
or
sub
add
xchg
test
cli
mov
dec
push
fistp
push
pusha
in
xchg
xlat
ins
and
cmc
adc
dec
xchg
lods
cmps
scas
and
clc
ret
pop
add
ins
dec
cld
or
mov
or
sahf
shl
adc
fwait
mov
or
iret
add
cmps
or
sbb
push
adc
loope
nop/reserved
mov
jle
rcr
mov
sbb
mov
push
mov
nop
addr16
aaa
mov
int
fnstcw
lea
es
call
es
dec
int
push
cmc
adc
adc
sbb
pop
sbb
shr
push
cdq
into
sub
adc
call
fwait
lahf
or
out
pop
inc
mov
pusha
int3
ret
call
push
pop
and
inc
dec
movs
adc
or
mov
adc
pusha
mov
add
inc
test
push
inc
mov
jo
shl
and
pop
adc
clc
sub
or
ins
xor
or
pusha
and
and
xchg
mov
mov
ins
mov
push
jo
test
inc
jl
test
je
js
je
inc
adc
(bad)
cmp
test
retf
jae
sbb
pushf
mov
movs
(bad)
cld
lods
mov
pop
sahf
retf
mov
call
out
enter
fmul
in
pop
fsub
mov
xchg
in
lock
pushf
cld
xchg
addr16
add
add
or
repnz
cs
adc
sbb
cmp
dec
in
sub
sub
in
mov
add
mov
push
pop
mov
mul
clc
xchg
pop
inc
pusha
fimul
adc
stos
loopne
icebp
(bad)
loop
cmp
cwde
sbb
shl
repnz
aam
adc
push
mov
arpl
pop
aaa
xor
adc
outs
repnz
adc
adc
sub
lock
push
pop
pusha
pop
push
push
jns
je
xor
jb
pop
mov
xchg
test
mov
retf
mov
mov
jns
(bad)
enter
pop
sahf
rcr
fsub
pop
sub
lock
retf
mov
adc
sub
adc
(bad)
clc
adc
retf
pop
sbb
int3
sub
cs
sub
xor
cmp
sahf
retf
movs
inc
inc
dec
adc
jb
push
pop
pop
ins
fs
pop
sub
jo
int
jae
mov
add
jmp
push
or
sub
mov
pop
mov
dec
outs
jle
xchg
retf
mov
xor
js
iret
test
xchg
retf
sub
jae
pop
mov
mov
mov
xor
aam
(bad)
jge
enter
jno
or
inc
loop
idiv
fcom
xor
cmp
push
std
push
push
push
mov
xor
pop
mov
mov
(bad)
pop
dec
icebp
or
xchg
inc
ss
cmp
cmp
xchg
push
ror
mov
add
or
or
mov
push
ins
mov
mov
jo
test
xor
outs
push
ins
or
retf
mov
adc
add
or
or
add
sahf
enter
out
xchg
jb
enter
or
pop
xchg
idiv
adc
push
jbe
or
add
enter
add
push
push
fs
(bad)
pop
sysenter
fs
adc
fs
or
adc
or
adc
push
push
aaa
daa
adc
pop
add
bnd
xor
sbb
sbb
sbb
cmp
adc
enter
pop
sbb
adc
sbb
push
int3
push
test
sbb
out
adc
test
pusha
pop
mov
xchg
jle
dec
lods
xchg
and
fsub
je
jbe
sub
add
mov
mov
bound
out
cs
dec
mov
imul
push
mov
mov
or
sbb
sahf
test
shrd
sub
ror
data16
push
cmp
adc
out
xlat
aad
push
aam
dec
sbb
or
pop
sub
stos
int3
aaa
cmps
jl
push
add
call
stos
sub
es
jg
repnz
or
daa
loop
and
mov
shl
sub
mov
xor
mov
sub
inc
xor
jg
sub
add
cmp
sub
xchg
lock
add
loop
or
sbb
mov
lods
add
mov
jmp
je
dec
in
repnz
push
(bad)
mov
mov
or
int3
inc
and
add
sub
pusha
cs
mov
das
push
xor
inc
or
lea
xor
pop
outs
lods
movs
ret
dec
out
or
mov
and
mov
test
mov
pop
retf
cwde
push
push
shl
out
ret
and
call
stos
mov
ror
xchg
les
inc
in
imul
out
add
out
jns
out
loope
outs
pop
loop
(bad)
mov
shl
cld
and
enter
les
leave
nop
cmp
sub
jb
aaa
mov
xor
(bad)
ss
push
xchg
repnz
je
xor
jmp
fs
mov
mov
pushf
inc
les
lods
repz
in
dec
sub
push
push
mov
xor
nop
xchg
mov
cld
test
cmp
jne
(bad)
je
sbb
sbb
jne
mov
mov
mov
add
inc
mov
jmp
xor
aam
test
je
mov
gs
std
xor
pop
sbb
dec
test
in
cmp
or
in
fdivr
cdq
add
xchg
inc
inc
aas
nop
test
inc
sahf
xchg
or
je
sbb
je
enter
mov
inc
or
push
adc
cmp
mov
icebp
mov
pop
and
test
call
inc
dec
enter
inc
inc
leave
adc
xchg
dec
inc
or
inc
mov
push
dec
loopne
push
(bad)
addr16
repnz
add
push
mov
jmp
jb
mov
inc
inc
dec
pop
repnz
push
dec
dec
lds
dec
cdq
dec
xor
dec
xor
xor
repnz
dec
or
popf
inc
push
cmp
neg
jp
in
leave
call
dec
inc
dec
call
cdq
push
push
cmps
xchg
test
dec
push
xchg
jmp
xor
jmp
mov
or
adc
mov
push
jo
dec
push
add
retf
int3
mov
or
test
mov
or
jle
xchg
jo
add
cmp
rol
(bad)
fdivr
inc
call
lea
dec
pop
mov
xor
mov
and
mov
push
(bad)
fnsave
adc
test
cmp
pop
test
push
movs
dec
mov
adc
fstp
enter
lods
mov
movs
pop
xor
adc
sub
mov
clc
push
outs
aad
or
frstor
add
adc
sub
dec
mov
rcl
adc
dec
ficom
or
xchg
xor
mov
arpl
mov
ret
nop
inc
pop
add
cmc
adc
lea
popa
sub
dec
fisubr
push
shl
add
test
inc
adc
div
sahf
sbb
or
mov
adc
and
sbb
inc
add
jl
test
nop
dec
adc
push
or
aas
sbb
ret
xchg
add
pushf
and
xchg
push
jb
sbb
mov
or
cmp
dec
and
je
xchg
mov
cmp
mov
inc
xor
add
mov
pop
loope
rcl
inc
movs
stc
add
sub
(bad)
mov
xchg
dec
and
lahf
adc
enter
adc
popa
jp
jge
pop
inc
fiadd
mov
dec
test
je
ret
sub
fnstsw
mov
shr
push
lea
jg
push
mov
sub
or
lea
xchg
enter
sub
push
sub
cmp
dec
cmp
dec
and
leave
sub
leave
inc
xor
and
adc
ret
add
push
pop
inc
sub
jecxz
in
retf
pop
sbb
pop
inc
pop
xchg
push
bound
push
inc
pushf
adc
xor
lds
adc
adc
and
mov
lock
sub
sbb
pop
imul
push
jl
nop
push
imul
icebp
push
xchg
es
iret
scas
add
nop
and
or
daa
mov
or
mov
add
xchg
inc
stos
ss
clc
push
es
cmp
leave
push
push
dec
leave
inc
xor
and
inc
daa
xchg
popf
push
push
mov
test
dec
inc
or
or
add
fld
lahf
(bad)
mov
sbb
inc
movs
adc
xor
popa
add
xchg
and
dec
cdq
and
imul
ret
out
rcl
dec
repz
cdq
dec
ficom
pop
sbb
test
sti
add
mov
repz
push
pop
arpl
adc
imul
imul
adc
inc
cmps
xchg
data16
cmp
call
test
and
mov
call
adc
lea
mov
clc
mov
or
adc
mov
and
adc
add
adc
add
popf
and
pop
test
push
dec
ins
movs
cdq
dec
call
call
test
aam
movs
cdq
add
pop
aad
test
mov
mov
push
push
dec
aas
lea
xor
mov
push
mov
icebp
cmp
inc
sbb
pop
inc
pop
inc
hlt
adc
pop
loopne
hlt
fs
push
inc
or
rcl
stc
push
inc
sbb
mov
enter
lahf
sbb
or
dec
dec
push
inc
div
lock
push
or
aaa
call
push
or
scas
lods
mov
adc
push
test
or
sti
hlt
pop
or
xor
xor
inc
cdq
test
add
(bad)
daa
mov
push
loop
or
mov
pusha
push
jmp
jo
mov
stc
adc
xchg
js
or
push
push
pushf
sub
push
or
push
jmp
mov
cmp
and
jge
cmp
add
jbe
retf
fisub
loopne
push
push
sub
lea
xor
add
pop
push
inc
push
jl
test
call
call
push
jg
push
ret
xor
jns
cmps
fnstsw
retf
(bad)
pop
pop
shr
int3
dec
push
cmp
sbb
or
add
ins
sbb
es
push
pusha
in
jle
push
call
xor
adc
pop
push
clc
ret
sbb
xor
sar
pusha
test
imul
push
jbe
mov
mov
cwde
xor
inc
jecxz
adc
add
mov
add
sbb
dec
sbb
cmp
dec
mov
mov
push
test
fmul
jmp
sub
mov
sbb
js
call
leave
mov
jg
jecxz
and
xor
les
jmp
shr
add
and
pushf
aas
mov
cld
sti
add
add
push
jbe
sahf
push
mov
or
pop
popf
add
sbb
mov
jo
or
rol
push
add
cdq
mov
sbb
leave
ror
sbb
and
leave
xor
sbb
ins
adc
sub
add
mov
jle
adc
sub
mov
cmps
add
div
add
cmc
mov
or
push
or
inc
repnz
jo
or
mov
mov
add
cmp
mov
inc
adc
sbb
add
pop
xor
sbb
add
mov
pop
inc
sbb
or
or
xchg
inc
sub
je
bound
stos
jae
imul
add
mov
mov
test
loopne
fdivr
fild
pusha
stc
mov
test
add
push
in
pop
pop
pushf
jle
lea
cmp
inc
inc
add
jo
dec
or
mov
test
cmps
movs
in
push
push
leave
rcr
push
rol
push
ins
in
add
lock
xchg
sub
xchg
or
push
scas
push
enter
clc
sub
es
dec
push
push
sbb
cmp
shl
add
dec
(bad)
stc
push
adc
xor
jl
aam
movs
jg
and
push
push
add
nop
mov
call
jg
add
test
and
sbb
push
rcl
or
xor
js
scas
cdq
mov
mov
stos
or
dec
adc
or
mov
js
ja
push
and
shr
adc
(bad)
mov
add
add
push
sub
les
sahf
add
push
sbb
push
popa
dec
adc
shl
or
push
push
push
fwait
jg
les
push
pop
pop
pop
test
shl
in
ins
sub
pop
xor
out
xor
ins
add
jne
std
push
xchg
sar
push
sub
xor
das
stc
inc
enter
adc
push
push
push
sub
stos
cmps
lea
add
call
and
iret
add
mov
add
jl
sub
jp
stc
dec
and
xor
shl
add
hlt
clc
mov
mov
push
add
scas
mov
cmp
cmp
xchg
mov
sbb
push
sbb
js
jl
dec
cmp
daa
sbb
sbb
xor
ins
retf
pop
jno
mov
das
mov
add
inc
test
fs
add
ror
test
push
xchg
mov
test
xchg
pop
aam
xchg
mov
loopne
mov
adc
aas
sar
adc
xlat
push
push
rol
xlat
xor
sub
mov
pop
sbb
cli
or
push
call
mov
mov
(bad)
pop
loopne
aam
xchg
jmp
mov
loopne
cmp
pop
loopne
scas
fdivr
in
in
push
leave
in
xor
pusha
in
push
mov
and
pop
aas
pop
ds
adc
mov
jne
test
sbb
dec
push
sbb
repnz
sbb
adc
mov
jle
or
or
ja
lock
not
mov
xor
ret
xchg
pop
fs
sbb
and
stc
jecxz
xor
sub
and
fs
pop
cmp
call
pop
loop
sub
(bad)
jl
cmp
jge
pop
mov
mov
jge
(bad)
shl
or
cwde
lock
shr
aad
sbb
out
les
out
sbb
mov
and
cli
es
or
rcl
push
jge
mov
aaa
or
out
jnp
mov
inc
int3
or
and
lahf
cwde
dec
push
sbb
sahf
scas
or
inc
popa
nop
pop
int3
add
xor
push
dec
push
sub
xor
xchg
inc
inc
push
jns
and
es
inc
mov
mov
retf
inc
adc
idiv
jmp
xor
jp
leave
shl
enter
cmp
adc
je
jg
dec
enter
add
add
int3
adc
add
jmp
daa
push
push
jl
mov
push
dec
sbb
jge
add
jns
test
dec
add
xor
adc
sbb
mov
hlt
mov
xor
test
xor
add
ja
sbb
push
mov
inc
aam
mov
sbb
pop
int3
or
aad
or
xor
jl
sub
cmps
jl
and
mov
or
and
and
or
sub
out
xor
cwde
sub
or
iret
out
or
or
inc
outs
push
ret
jo
leave
shr
sub
mov
sub
mov
(bad)
mov
int3
mov
imul
lahf
mov
mov
push
pop
inc
mov
mov
pusha
movs
bound
inc
xchg
fadd
sbb
into
mov
das
adc
xchg
push
adc
push
pop
sub
adc
inc
je
mov
clc
iret
mov
cmp
(bad)
imul
inc
call
aad
call
sbb
cs
sbb
or
push
xor
int3
loopne
mov
adc
and
or
dec
cmp
mov
jae
dec
pop
lods
fist
hlt
sub
or
scas
call
loope
leave
test
sub
jne
cmp
mov
adc
call
mov
aad
daa
jp
dec
lea
push
xchg
push
ja
inc
xor
int3
mov
paddw
inc
mov
jl
xor
rcl
mov
mov
adc
xchg
pop
loopne
nop
push
lea
inc
fucom
inc
dec
pop
ds
test
out
push
sub
js
add
adc
enter
sbb
xor
xor
pop
push
dec
add
add
jmp
add
enter
mov
ins
xchg
xor
adc
add
or
push
cmp
psrad
iret
mov
int
sub
sbb
sbb
sub
pusha
out
xor
ret
ja
inc
and
mov
push
shl
adc
push
pusha
bound
sbb
sete
mov
retf
sub
fs
push
push
inc
cs
or
jo
pop
or
xor
sbb
je
or
sbb
adc
fcom
rol
(bad)
mov
test
out
sub
or
dec
cmps
inc
jns
sbb
(bad)
or
xor
mov
xor
mov
add
and
test
cmp
cmp
loop
push
shl
sar
add
js
shr
and
ja
pop
and
cmp
xor
jb
and
in
add
add
mov
in
add
sub
test
sbb
add
inc
std
inc
sahf
push
cmp
sub
cs
pop
pop
xchg
push
movs
das
sbb
xor
adc
cs
cmp
enter
cmp
rol
inc
dec
xchg
in
nop
addr16
xor
push
or
loopne
out
into
sbb
xchg
dec
xchg
popa
add
imul
dec
push
inc
sbb
push
repnz
mov
fst
fstp
inc
shr
jecxz
bound
cmp
loop
mov
adc
mov
mov
mov
in
add
fs
loopne
jge
jno
inc
inc
or
fdiv
addr16
fadd
mov
sbb
jle
jae
mov
add
or
sub
retf
push
mov
arpl
add
popa
test
call
inc
mov
mov
add
mov
add
js
dec
sbb
xchg
je
or
int
push
xor
mov
pop
test
vorps
loop
loopne
dec
call
shl
mov
js
push
fdivr
jmp
sbb
pop
loopne
or
sbb
lods
inc
mov
sbb
add
mov
and
adc
xor
in
int
mov
bound
das
fcmovnu
mov
dec
xor
push
xor
xor
mov
cmp
test
add
dec
inc
popa
cmp
dec
fst
lods
push
or
mov
push
dec
pop
jb
lea
call
pop
fcom
bound
inc
sahf
mov
sar
fsub
mov
push
retf
adc
mov
push
sub
dec
mov
push
dec
push
mov
push
adc
enter
dec
(bad)
ficom
add
mov
push
repnz
or
fcom
enter
push
dec
shl
pop
enter
xchg
pop
pushf
push
movlhps
int3
add
dec
mov
adc
xchg
loope
jge
add
add
cdq
movs
sbb
enter
add
(bad)
xor
int3
fnstcw
sbb
pusha
cmc
sbb
and
addr16
fs
push
cmp
mov
jo
dec
pop
xchg
sbb
xor
add
push
dec
push
enter
push
dec
test
mov
imul
dec
jmp
shl
jns
aad
shl
mov
dec
cli
(bad)
call
add
call
(bad)
cmp
and
imul
imul
push
xlat
retf
push
jns
and
jge
mov
nop
repz
fcomp
mov
and
sub
xor
outs
stos
fmul
cmp
ret
dec
sti
ss
das
and
sub
mov
sbb
mov
mov
or
out
ins
mov
pop
lea
shl
inc
sbb
clc
mov
and
mov
adc
push
jecxz
pop
jb
and
aam
test
push
push
push
into
shl
popf
je
xchg
(bad)
adc
mov
xchg
fld
and
xchg
(bad)
sar
push
mov
sub
xor
fdiv
mov
ss
mov
add
repnz
mov
shl
cmp
jb
xlat
sbb
das
rcl
adc
cmp
les
and
sbb
cwde
xor
xor
sub
and
pop
js
pushf
push
or
cmp
in
bound
stos
fmul
mov
movs
or
call
aam
or
mov
imul
aas
sbb
pop
inc
inc
rcl
mov
xlat
and
mov
push
shl
inc
bound
jge
mov
inc
ret
sbb
call
xor
add
lea
dec
ficom
mov
push
cmp
xchg
into
cmp
lea
cmp
aaa
or
test
int3
scas
xor
and
shl
sbb
sub
jp
in
jo
fbstp
dec
fwait
pop
dec
cld
push
or
push
bound
or
call
sbb
pop
(bad)
sub
mov
push
xchg
nop
cmc
mov
je
(bad)
sbb
popa
mov
mov
cmc
mov
lea
push
and
push
cdq
in
xchg
test
sub
and
ret
pusha
mov
adc
or
push
in
push
scas
call
and
into
add
cld
out
call
xor
mov
jle
and
leave
push
push
push
js
dec
mov
jl
sbb
xchg
js
mov
scas
fadd
inc
mov
cmp
popa
mov
push
sub
push
mov
retf
or
xchg
push
adc
sbb
push
ret
je
aaa
test
xchg
fadd
ror
cmp
aam
fsub
ror
push
sbb
ins
cmp
mov
test
rcl
fcomp
fist
movs
pop
push
mov
les
hlt
pop
cmp
dec
shr
popa
mov
lahf
push
or
and
add
xchg
mov
and
cmp
dec
inc
and
aam
xchg
add
sbb
xchg
or
sbb
inc
push
and
or
enter
push
cmps
ror
cmp
xchg
xor
shl
je
repnz
xor
cld
movs
pusha
inc
push
push
or
mov
add
lea
xor
loopne
sbb
xchg
lahf
inc
xchg
mov
xchg
push
call
inc
pop
xor
arpl
xor
adc
cmp
and
inc
sbb
push
(bad)
jo
xor
je
mov
mov
mov
sub
(bad)
jp
cmp
sub
xchg
dec
jp
pop
shr
xchg
push
movs
jmp
push
in
or
ror
int3
sub
add
adc
jmp
dec
ss
inc
sbb
dec
add
sub
mov
jo
inc
mov
lock
push
enter
jge
pop
cmp
fsub
into
inc
jo
in
mov
adc
fisttp
jmp
ja
(bad)
jecxz
test
and
push
mov
mov
jecxz
pop
xchg
cmp
gs
add
lock
jecxz
mov
popa
cmp
and
fcomp
int3
data16
mov
jge
fiadd
pop
pop
xor
jmp
ins
popa
fild
xchg
data16
push
inc
inc
movs
mov
inc
aam
icebp
movs
repz
or
aad
xchg
stos
test
xor
cmp
sub
xor
sbb
adc
sti
add
or
xor
add
sbb
dec
out
pushf
and
in
jp
rcl
pop
loope
les
pushf
adc
adc
(bad)
pop
mov
iret
les
imul
stos
mov
ret
or
addr16
mov
xor
nop
call
aad
mov
or
push
jmp
pop
rcr
push
sub
mov
cmps
adc
adc
and
test
xor
in
jo
shr
ds
sahf
cmp
sub
dec
cmp
dec
pop
or
jl
xor
inc
fistp
pop
xchg
inc
or
xor
rcl
jne
jp
in
pop
(bad)
lea
xchg
cmp
test
mov
and
imul
lea
fild
(bad)
and
and
xor
outs
popa
fnsave
adc
jns
(bad)
mov
sar
cmp
fidivr
push
cmp
in
jmp
xchg
push
push
cmp
cmp
jecxz
dec
and
test
pop
sbb
inc
js
jo
xor
and
xor
push
pop
sbb
fdivp
icebp
or
fmul
xchg
jmp
rcl
inc
add
mov
cld
dec
hlt
push
inc
and
outs
lea
sub
adc
ror
jmp
mov
shr
fwait
add
pop
sbb
cld
ss
out
sbb
jbe
adc
pusha
mov
retf
sbb
je
(bad)
push
fsub
clc
scas
add
lds
cmp
or
mov
jecxz
and
mov
cmp
pop
and
add
or
js
adc
or
push
pushf
or
lea
mov
cmps
push
mov
cmp
add
mov
add
je
xor
popa
imul
aad
int3
inc
dec
pop
or
pop
sti
and
dec
xchg
test
les
fnstsw
mov
jae
add
and
shr
mov
push
adc
adc
or
pop
push
inc
fs
cwde
xchg
js
push
dec
mov
pop
pop
and
jns
sub
nop
mov
adc
pop
mov
sbb
sbb
sbb
dec
add
or
sub
and
fisttp
mov
ins
adc
mov
sub
sti
jnp
inc
push
jns
sub
cmp
nop
xchg
fsubr
and
or
sub
hlt
push
lock
popa
mov
push
adc
inc
pop
adc
ins
inc
jb
jns
arpl
adc
and
jno
and
in
shl
inc
mov
adc
xor
pop
mov
ror
jo
sbb
jle
mov
push
push
outs
aas
outs
cmp
pop
mov
or
xor
mov
arpl
data16
loope
or
int3
xor
push
retf
mov
loop
inc
into
jmp
xchg
or
inc
or
pop
and
xor
rol
pop
adc
sub
inc
xlat
and
scas
dec
adc
adc
lea
pop
clc
shl
scas
stos
mov
add
lds
(bad)
loop
ret
xchg
mov
movs
ret
imul
or
cmp
mov
sbb
and
lods
add
mov
inc
loop
inc
test
jg
inc
or
sbb
aad
dec
adc
inc
and
and
jb
sbb
sub
and
cmp
push
jb
cmp
xchg
sbb
inc
inc
dec
inc
leave
push
jb
push
push
jb
sbb
pop
pop
cmps
pushf
test
lods
lods
add
inc
dec
push
push
push
push
pop
popf
cmps
cmp
or
and
push
xor
mov
dec
and
test
sub
dec
rcl
mov
or
iret
fild
jns
rol
adc
pushf
cmp
adc
sbb
daa
iret
leave
jae
sbb
and
repnz
cmp
sub
sub
daa
iret
leave
sub
xor
leave
jae
pushf
cmp
cmp
pushf
cmp
iret
inc
inc
inc
inc
dec
iret
leave
jae
dec
dec
dec
push
push
repnz
cmp
push
push
pop
pop
or
leave
jae
pop
pusha
pusha
test
xor
mov
sbb
mov
mov
sub
sub
push
add
ret
adc
dec
mov
mov
repnz
(bad)
popa
mov
pop
(bad)
nop
push
mov
(bad)
outs
inc
shr
push
jle
adc
mov
mov
dec
pop
sbb
add
lock
mov
call
mov
mov
cmp
jne
adc
mov
adc
aaa
cmps
fcom
push
pop
add
test
sbb
and
inc
dec
pop
xor
inc
mov
inc
cmp
xchg
pop
cld
xchg
jmp
inc
hlt
or
das
xor
dec
hlt
mov
mov
lea
rcr
cdq
or
pcmpeqw
adc
sub
xchg
add
and
cwde
cmp
scas
mov
pop
or
inc
add
loopne
cmp
jl
and
pop
sar
cmps
dec
dec
in
add
adc
sbb
bound
gs
neg
pop
mov
add
inc
add
movs
mov
std
jno
pop
jo
mov
add
cld
cld
into
xchg
jl
ret
test
in
inc
int
xchg
call
arpl
and
mov
pop
adc
mov
push
pop
adc
pop
cmp
push
and
add
popa
rcl
push
out
test
add
push
loope
add
outs
dec
mov
or
push
mov
cmp
rol
pop
mov
sub
or
in
adc
cmp
loopne
mov
cs
outs
fsub
cmp
into
ins
iret
or
jbe
push
cld
pushf
add
leave
push
leave
(bad)
je
(bad)
inc
sub
or
ins
or
dec
xchg
cmp
mov
loopne
push
add
or
in
in
add
scas
or
mov
dec
xchg
cmp
cld
adc
xor
or
adc
mov
adc
add
xchg
cmps
sbb
inc
cmps
dec
push
(bad)
sbb
jle
xlat
pushf
mov
or
mov
mov
or
push
sbb
cld
stc
out
push
and
cli
push
or
or
mov
rcr
or
sub
add
inc
jno
iret
stc
(bad)
inc
and
retf
and
pop
add
push
test
dec
dec
cmp
add
xchg
adc
xor
jl
neg
jne
or
and
in
inc
or
addr16
xchg
hlt
aam
scas
jl
nop
adc
movzx
cld
stos
mov
or
add
enter
add
xchg
xchg
retf
pop
pop
or
or
or
mov
xchg
dec
pop
pop
mov
push
mov
movaps
ins
or
sub
rol
fidivr
cmc
lahf
shl
mov
inc
cmp
jge
mov
dec
sub
lea
jne
ja
mov
mov
inc
pushf
sub
mov
mov
sti
dec
and
repz
in
hlt
(bad)
(bad)
dec
adc
mov
shl
jmp
dec
xor
xchg
ror
push
dec
mov
mov
and
scas
fiadd
xor
and
mov
(bad)
sub
nop
fcmovnb
movs
adc
aad
cmp
mov
ret
mov
test
add
jb
clc
call
inc
pop
dec
(bad)
retf
arpl
add
popa
test
sbb
out
add
iret
and
sub
aaa
dec
mov
sub
shl
pop
es
push
push
mov
jecxz
jnp
adc
pop
pop
mov
dec
push
and
and
sub
push
repnz
sub
fs
pop
(bad)
pop
xor
cmp
mov
add
adc
sub
fdivr
push
and
add
adc
fisttp
cmp
jmp
inc
jbe
xorps
std
iret
sbb
or
shl
test
or
or
test
sbb
cmp
or
sub
sub
xchg
fbstp
aad
loopne
push
cmps
push
leave
push
sbb
add
cdq
or
movs
push
jecxz
mov
mov
jno
daa
shl
dec
sub
out
arpl
push
mov
add
xor
pop
outs
push
pop
push
push
(bad)
sahf
add
inc
mov
bound
cmp
loop
in
ficomp
mov
shr
pop
fwait
je
test
push
or
scas
xchg
call
repz
add
sbb
mov
data16
sub
push
aaa
or
adc
sbb
sub
adc
and
mov
sbb
and
pop
or
arpl
mov
pop
daa
pop
sbb
inc
dec
add
add
pop
pop
ret
pop
xchg
or
sub
in
shl
sub
inc
ss
or
or
outs
pop
sbb
pop
das
jle
jne
cmp
cwde
mov
repz
mov
xchg
ret
dec
or
enter
dec
cmc
xor
in
mov
sti
xlat
dec
sub
je
das
add
mul
adc
lock
mov
push
dec
and
pop
sbb
add
push
vpcmpgtw
mov
shl
scas
mov
xor
push
ret
cld
into
or
xchg
in
mov
mov
push
sbb
das
sub
sub
mov
movs
cmp
xor
retf
jecxz
ret
js
imul
(bad)
fs
clc
xor
inc
or
cmp
aas
push
jne
mov
lds
cmp
jns
ins
add
ins
fisub
in
or
mov
sbb
jo
out
sahf
pop
retf
je
and
(bad)
jge
adc
push
sub
xchg
jmp
jbe
es
push
cmp
mov
sbb
and
je
lock
or
fld
adc
sbb
cmp
or
aam
cmp
nop
fst
xor
nop
xchg
out
inc
or
xchg
xor
jns
and
or
rcl
xadd
add
adc
pop
shr
arpl
sbb
xchg
and
cmp
adc
sbb
and
or
xor
loope
jmp
lahf
sbb
xchg
imul
in
leave
push
sub
or
dec
adc
jae
cmp
mov
ins
les
xchg
cmps
xlat
es
xchg
inc
cmp
cmp
in
inc
pop
rol
or
jo
jge
addr16
pop
mov
jo
in
mov
repz
push
loop
sbb
mov
mov
push
dec
xor
cmp
or
push
leave
sub
ins
add
rcr
sub
pusha
and
into
sub
and
cdq
repnz
xor
dec
aaa
sbb
adc
cmp
lahf
or
mov
aaa
loope
jns
and
xor
cmp
aam
sbb
(bad)
cmp
pop
mov
or
xchg
lods
push
pop
shr
pop
(bad)
adc
adc
nop
push
xchg
loopne
ror
mov
lea
repz
push
push
je
cwde
push
inc
aaa
clc
imul
or
retf
fsub
jne
or
aam
loopne
pop
test
(bad)
dec
test
add
and
push
leave
mov
js
push
pop
add
fs
lea
push
push
dec
popa
inc
jb
xor
cmps
and
ds
push
push
add
or
jmp
add
or
scas
cmovne
push
lahf
add
mov
call
push
test
add
inc
and
repnz
in
aam
inc
cmp
xor
loopne
mov
push
adc
lds
cwde
popf
adc
push
sub
sub
adc
ins
xor
xchg
sub
dec
sbb
pop
sub
pop
fdivr
cs
das
ficom
adc
cmp
mov
cs
jmp
cld
ret
or
and
add
xor
add
sbb
xor
jecxz
and
xor
cwde
mov
aad
movsx
xor
mov
popf
sbb
push
or
in
stos
fstp
inc
and
add
leave
mov
and
inc
xchg
xchg
mov
xchg
push
loope
(bad)
sbb
or
loope
jp
and
adc
sub
xor
imul
push
xor
cmp
adc
xor
retf
mov
ds
xor
and
dec
imul
daa
xchg
outs
shl
out
add
add
add
inc
mov
test
adc
or
and
push
leave
xchg
add
in
cmp
lea
mov
dec
sbb
and
xchg
add
mov
pop
mov
lods
inc
lahf
sub
aam
repnz
lea
clc
pop
stos
imul
aad
call
lea
pusha
fdiv
leave
push
outs
mov
push
repnz
lock
nop
call
pop
sub
cli
cmp
jge
jg
cmp
ret
(bad)
jle
or
(bad)
nop
scas
push
jmp
push
mov
dec
out
jecxz
sbb
add
rol
push
in
pop
adc
or
push
mov
pop
add
cmp
test
loopne
mov
or
dec
xchg
popf
add
and
push
add
pop
nop
mov
pop
nop
push
nop
and
mov
das
mov
or
dec
sub
test
adc
inc
aad
xor
mov
int3
inc
das
add
sbb
fs
jmp
lds
mov
aam
js
bound
jle
out
add
mov
push
add
and
sti
dec
in
dec
sahf
add
sbb
inc
stos
jnp
mov
push
cld
mov
dec
add
adc
pop
bnd
cmps
cmp
pop
adc
ja
mov
push
or
hlt
cmp
in
push
(bad)
jo
push
inc
xchg
adc
or
pop
lahf
cmp
pushf
cld
and
test
add
inc
rol
sbb
xor
push
test
sbb
push
test
xor
loope
sbb
xor
inc
(bad)
pusha
mov
cmp
or
inc
sahf
dec
stos
cmp
outs
dec
aaa
mov
sbb
ins
pop
inc
dec
or
ret
call
in
dec
pusha
sbb
sbb
sub
adc
sub
arpl
inc
adc
mov
in
arpl
nop
sub
nop
pop
or
or
inc
mov
xchg
or
inc
leave
adc
mov
xchg
or
aad
push
jg
test
jmp
je
and
clc
xor
mov
mov
sbb
in
or
cmp
shl
lea
inc
or
add
pop
sub
push
lock
je
push
mov
inc
xlat
adc
mov
ja
(bad)
adc
adc
jne
lahf
push
movs
fsubr
adc
xor
push
push
mov
sbb
xchg
mov
aam
adc
inc
pop
js
sbb
dec
sub
sbb
rcl
xor
adc
mov
jo
(bad)
movups
sub
and
and
gs
cmp
sbb
xlat
call
lds
rcl
je
test
or
mul
mov
aaa
add
pushf
movs
inc
push
loope
icebp
lds
push
and
jmp
aas
xchg
inc
mov
rcr
adc
js
das
sbb
sbb
dec
rol
xchg
sar
test
inc
fsub
das
or
push
movs
stos
in
sub
popf
mov
jno
das
add
dec
in
fcom
xor
adc
mov
push
pop
test
fcom
test
pop
test
mov
xchg
mov
sahf
add
int3
sbb
stos
mov
and
push
push
mov
xlat
push
push
outs
pop
push
and
push
pop
adc
lds
add
pop
pop
xchg
clc
jnp
adc
sti
mov
sub
xchg
push
in
test
pop
mov
aam
push
add
lock
push
push
and
retf
push
adc
aaa
pop
xor
push
push
int
jl
cmp
mov
push
out
stos
and
les
push
daa
sub
test
sub
or
sub
sahf
je
inc
adc
stc
xor
dec
out
(bad)
cdq
movs
adc
and
pop
xor
push
mov
mov
sub
lidtd
pop
out
inc
sbb
sub
sbb
adc
inc
mov
jns
xor
push
and
iret
inc
add
test
inc
push
pop
add
lock
test
or
or
repz
inc
in
mov
sbb
clc
out
push
xor
add
dec
jne
xor
hlt
sub
mov
sub
cmp
add
mov
pop
xor
cmp
adc
mov
or
pusha
out
inc
shl
(bad)
test
xchg
sub
cmp
lds
shl
or
and
pop
pop
jne
iret
mov
and
test
ret
push
aas
pop
shr
das
in
iret
add
adc
xchg
xchg
push
push
pushf
or
and
ds
sbb
mov
sar
jb
sbb
outs
and
xor
xchg
mov
sbb
xor
xor
cmp
js
jg
xor
sub
inc
cld
inc
fs
test
int
test
cmp
push
push
inc
retf
inc
je
inc
je
inc
sub
add
daa
dec
int3
push
loopne
lea
pop
cwde
or
mov
stos
push
mov
xor
dec
adc
cwde
js
(bad)
clc
sbb
add
adc
pop
push
mov
lea
fist
mov
push
adc
cmp
push
push
sub
ja
lea
sub
popa
jnp
cmp
(bad)
adc
fnstenv
inc
je
cmp
inc
add
sar
std
mov
(bad)
add
xor
mov
or
bound
jns
push
mov
sub
add
mov
push
sub
or
sbb
dec
hlt
adc
hlt
hlt
add
or
push
rol
gs
dec
pop
dec
mov
dec
adc
clc
(bad)
lock
adc
mov
push
mov
sbb
lods
test
push
mov
xchg
add
add
arpl
xchg
or
out
mov
ins
add
shl
out
adc
pop
aad
adc
cmp
xchg
dec
sbb
add
sub
sbb
jo
mov
sbb
fsubr
push
fwait
sub
mov
sub
lods
mov
mov
inc
inc
(bad)
in
add
dec
sar
movs
xor
sbb
arpl
xchg
xchg
imul
push
cmps
sbb
popf
xor
push
loope
cmp
inc
pop
test
mov
xchg
or
retf
shr
and
test
inc
xchg
fwait
xor
push
jb
adc
pop
popa
dec
or
push
in
call
sbb
add
inc
cmp
pop
test
add
mov
test
outs
and
dec
and
and
xchg
add
mov
aad
(bad)
aad
cmp
fs
xchg
push
mov
ret
jg
jo
mov
pusha
xor
inc
inc
xchg
cs
dec
sub
push
add
cmp
call
cs
aas
ins
nop
push
cmp
ror
jl
jmp
jnp
pop
cmps
push
sbb
push
sub
mov
(bad)
jmp
jnp
sar
jne
xor
inc
cmp
and
dec
add
pusha
sub
pushf
aam
nop
mov
push
ins
sub
adc
and
push
outs
leave
bound
sub
mov
lods
cmp
mov
jae
pop
pop
ret
ins
jg
push
xchg
jp
xor
sbb
xor
(bad)
sbb
inc
out
mov
mov
hlt
push
push
cmp
xor
mov
or
sbb
sub
or
mov
sub
mov
sub
cdq
add
pop
(bad)
xchg
mov
mov
or
jl
dec
pop
mov
je
das
push
mov
vphaddubd
jge
or
test
rcl
push
mov
aaa
mov
fisttp
xor
sub
popa
inc
mov
mov
ret
mov
fsubr
cs
sbb
arpl
mov
xor
dec
cs
xchg
mov
lds
mov
push
dec
das
pusha
add
or
adc
inc
push
dec
sub
test
jmp
jnp
cli
push
pusha
rep
daa
pop
add
aas
ja
xchg
mov
inc
xor
mov
lahf
push
pop
add
add
pop
cmp
(bad)
nop
dec
jne
sbb
add
inc
scas
add
pop
and
mov
jbe
lods
mov
rcl
push
mov
inc
call
add
inc
in
(bad)
mov
push
shl
add
inc
xor
push
and
xor
and
xor
adc
cmp
aad
or
inc
les
(bad)
arpl
icebp
push
dec
dec
push
in
cmp
or
fisub
iret
xlat
adc
xor
test
and
xor
push
xor
pop
in
mov
adc
pop
(bad)
jmp
das
pop
loope
mov
shr
hlt
xor
mov
aaa
arpl
mov
add
test
mov
sbb
enter
(bad)
mov
xchg
xor
jmp
mov
faddp
sub
outs
leave
out
fldl2e
cmp
xor
push
inc
dec
pop
leave
cmp
(bad)
cmp
jmp
and
mov
and
push
js
ret
ret
popf
out
or
dec
cmps
adc
movs
add
sub
lahf
sub
cs
ds
dec
inc
mov
fs
mov
inc
xchg
loope
xchg
mov
pop
jne
ins
fmul
and
ret
scas
or
and
mov
push
dec
add
adc
push
and
mov
repnz
enter
ins
mov
and
loopne
cmps
dec
sar
xor
mov
mov
add
push
jmp
sbb
or
inc
aad
xchg
adc
pop
ins
fcom
sub
push
cmp
clc
cs
cld
and
sbb
adc
mov
dec
lods
cmp
enter
outs
push
push
or
mov
(bad)
fcom
cmp
mov
pushf
test
pop
imul
push
push
push
dec
imul
dec
mov
push
ret
add
push
mov
fwait
(bad)
addr16
iret
and
pusha
mov
sbb
sbb
js
add
add
int
xchg
xchg
retf
push
xchg
jb
and
(bad)
push
and
or
mov
and
mov
(bad)
int
fisub
int3
add
sbb
movs
call
mov
mov
int3
test
or
mov
inc
rcr
lea
cs
ret
or
es
xchg
shr
add
and
cmc
movs
cmp
stos
mov
into
push
dec
and
jp
outs
icebp
adc
add
js
sbb
dec
push
cmps
sub
jae
xchg
(bad)
jl
sbb
mov
mov
arpl
mov
shl
cmp
lods
js
rol
mov
inc
mov
jmp
cmp
scas
or
retf
fbstp
fwait
pusha
push
dec
mov
add
xor
aam
adc
mov
push
and
adc
push
push
jb
inc
les
lods
imul
xchg
jl
jae
mov
mov
push
call
push
sub
inc
mov
cwde
dec
mov
sbb
inc
cmp
stos
mov
cmp
pop
mov
push
xlat
xor
jbe
mov
mov
(bad)
jmp
pop
add
mov
shr
inc
movs
(bad)
cmp
cmp
pushf
pop
cmp
adc
sub
push
push
dec
cmp
ret
push
sub
inc
in
les
push
or
outs
dec
test
push
dec
aas
push
sub
or
mov
mov
mov
add
jge
dec
rcr
nop
jge
pop
push
push
adc
cmp
sub
push
ss
mov
or
jl
mov
test
clc
and
lock
in
or
call
std
shl
mov
ret
ror
sbb
or
push
dec
mov
repz
xchg
inc
sbb
mov
or
push
je
jo
enter
inc
xor
icebp
fstp
xchg
jg
mov
ins
mov
jp
jmp
aad
iret
shl
in
rcl
or
push
jmp
push
lods
push
push
outs
mov
inc
int
adc
mov
xchg
push
pop
dec
jno
retf
enter
and
jns
xchg
push
dec
push
add
aas
sub
sar
jg
scas
add
les
sub
loope
imul
cmp
and
push
cdq
pop
mov
or
jns
pusha
inc
sbb
mov
push
xor
cs
sbb
dec
rep
fmul
call
jbe
mov
pop
pop
push
shl
dec
adc
mov
(bad)
aam
or
lea
(bad)
add
jl
add
inc
gs
loope
mov
push
dec
or
push
or
fist
or
or
jo
mov
not
call
fmul
in
and
js
cdq
nop
stos
and
mov
cmps
movs
jl
das
add
fsubr
mov
or
push
ror
dec
push
dec
sahf
fldcw
adc
test
adc
push
rcr
das
pop
pusha
sub
arpl
mov
sbb
leave
dec
sbb
mov
xor
adc
imul
mov
data16
data16
ret
mov
jmp
jl
aad
adc
mov
mov
push
cmp
js
pop
ret
xor
aad
xchg
push
sti
mov
int
or
popf
test
mov
mov
xchg
pushf
adc
movs
xor
jecxz
adc
dec
jae
jle
sbb
push
stos
into
push
test
xor
movs
or
inc
movs
pop
mov
adc
pushf
cmps
xchg
push
dec
aaa
or
mov
ins
rol
jne
adc
test
cmp
pusha
daa
in
and
aam
inc
aam
inc
lahf
push
sahf
ror
or
repnz
or
or
or
adc
and
push
cli
dec
call
lock
movups
xchg
sbb
mov
lahf
add
jnp
and
lea
sbb
sbb
pop
push
inc
push
or
xchg
xor
xchg
xor
jns
loope
js
fst
push
aaa
xor
sbb
sbb
in
push
sbb
adc
cmp
and
adc
xchg
add
gs
(bad)
push
sub
loopne
jg
inc
push
cmp
sbb
adc
inc
sbb
adc
fdiv
call
jmp
lea
mov
mov
sbb
adc
xor
pusha
push
inc
retf
add
push
adc
adc
and
mov
jmp
movs
dec
cmp
jbe
fisubr
dec
hlt
push
or
sbb
je
mov
inc
cmp
and
arpl
not
mov
jp
add
adc
jge
and
jl
test
sbb
dec
sbb
icebp
xchg
cmp
sbb
in
pop
add
into
xor
dec
and
push
movs
xor
rcr
pop
push
dec
xor
inc
dec
sbb
pusha
and
mov
outs
xor
push
ret
mov
arpl
leave
inc
xor
push
sub
sub
pop
mov
push
add
push
mov
and
test
popa
retf
and
sbb
xor
or
in
aad
pop
inc
nop
pushf
nop
stos
inc
pop
lea
nop
or
sbb
sub
sbb
push
pop
xor
pusha
add
inc
and
sub
push
js
dec
adc
sbb
(bad)
nop
(bad)
cmp
inc
sub
es
xor
daa
scas
test
inc
push
les
jno
out
add
nop
fs
test
mov
push
jb
jb
add
xchg
movs
rcl
push
or
push
mov
xchg
sub
in
jo
pop
(bad)
xor
or
popf
add
mul
mov
(bad)
call
xchg
cmp
jne
bound
pop
dec
jb
test
(bad)
(bad)
popf
jg
movs
scas
jmp
sbb
mov
mov
into
leave
jmp
push
fnsave
xor
add
xchg
dec
and
or
add
call
sbb
inc
dec
push
push
hlt
mov
inc
add
retf
ret
dec
add
push
pop
sbb
xor
(bad)
xor
pop
test
add
xor
test
sub
ret
mov
(bad)
xchg
inc
push
mov
add
rcl
pop
and
rcr
xchg
das
inc
cs
and
or
mov
and
mov
inc
aad
inc
and
xor
retf
push
add
adc
push
dec
sbb
jo
lahf
cmp
inc
xchg
mov
xor
mov
and
cmp
mov
sub
xor
or
test
push
jnp
dec
adc
fs
leave
inc
jb
jp
add
cli
mov
leave
sbb
sahf
mov
or
push
les
or
repnz
test
dec
add
cmps
jg
and
pusha
lahf
add
addr16
xchg
add
cmp
ins
push
adc
jne
fwait
(bad)
cmps
pusha
adc
test
ins
xor
fsubr
jmp
mov
stc
jne
or
add
repz
mov
pushf
push
loopne
sub
shl
nop
and
push
inc
add
rol
add
sbb
push
(bad)
rol
imul
or
jl
(bad)
addr16
push
inc
imul
sbb
add
xchg
or
outs
test
sbb
mov
add
sub
add
cmp
xlat
daa
push
push
pusha
inc
test
cwde
(bad)
cmp
sub
jno
sbb
push
sbb
push
inc
push
xor
inc
pop
frstor
ds
cmp
push
std
push
cmp
adc
mov
push
jmp
mov
retf
add
jae
xchg
adc
cwde
push
add
and
push
enter
push
mov
pop
mov
add
enter
std
mov
push
sbb
xchg
or
int
js
add
add
jno
daa
jg
add
lods
retf
cmps
adc
and
stos
outs
(bad)
mov
retf
mov
xor
fst
sub
push
push
push
push
sub
mov
sub
js
mov
push
mov
and
shr
mov
inc
(bad)
sbb
js
loopne
xchg
add
add
and
aaa
jbe
mov
retf
and
dec
ins
inc
add
add
and
pop
add
pop
ins
repnz
inc
popa
adc
push
jb
inc
or
(bad)
pop
(bad)
inc
xchg
rcr
fdivr
push
adc
mov
adc
ins
dec
inc
cmp
retf
jp
lock
mov
out
cmp
xchg
mov
or
sbb
jo
and
sbb
mov
ret
xor
ins
cmp
sbb
(bad)
or
jne
jle
sub
fst
mul
xor
xor
add
movs
push
rcl
cmc
push
xchg
stos
ret
fild
dec
(bad)
xor
iret
push
call
fcomp
(bad)
dec
push
fistp
hlt
dec
mov
inc
sbb
sti
jl
not
cwde
mov
mov
mov
mov
sub
icebp
mov
pop
adc
push
cmp
data16
adc
cmp
jmp
xchg
in
cmc
sbb
mov
std
xor
xor
inc
and
ja
stc
adc
pushf
jne
and
pop
mov
mov
add
mov
jmp
jp
lahf
mov
aaa
add
lock
push
icebp
cmc
jmp
add
mov
fistp
mov
add
pop
dec
and
mov
dec
out
cmp
mov
add
xchg
(bad)
aad
loop
adc
sub
jecxz
xchg
mov
push
or
(bad)
xchg
imul
test
imul
in
(bad)
mov
int3
inc
jl
dec
xor
xchg
push
jb
adc
add
pop
jo
js
and
jle
sbb
add
arpl
and
push
cmp
jle
dec
mov
sti
iret
add
xor
sbb
stos
mov
test
xor
cmp
das
(bad)
js
les
push
pop
fdivr
or
mov
imul
fdivr
mov
(bad)
or
cmps
lds
fistp
sbb
sub
sub
cmp
fimul
adc
push
mov
add
push
xchg
mov
ja
aam
xchg
inc
dec
and
add
inc
test
leave
add
aas
gs
sbb
and
fldenv
sub
xor
data16
cmovp
and
clc
out
cwde
out
inc
stos
hlt
pushf
push
mov
sub
jmp
loope
add
mov
ins
cli
jmp
jl
cmp
bound
sub
or
push
or
xchg
dec
daa
push
and
add
add
mov
and
jmp
cdq
inc
and
dec
mov
mov
sbb
cli
cmp
in
stc
lea
loopne
sub
fnop
xchg
push
pop
and
and
rcr
push
adc
stos
bound
outs
dec
sub
jp
test
dec
add
add
pushf
jb
scas
sbb
sbb
sub
arpl
or
(bad)
out
xchg
in
in
xchg
add
daa
xchg
(bad)
iret
call
fdivr
xchg
cmp
loopne
sbb
and
dec
outs
imul
in
sbb
inc
call
stos
inc
xor
and
sbb
sbb
lods
lods
and
fchs
or
js
loope
push
cld
push
mov
shr
loopne
adc
mov
push
add
push
(bad)
(bad)
or
or
mov
push
inc
inc
aad
push
and
xchg
enter
pop
lock
cdq
push
test
fbstp
inc
enter
or
add
loopne
mov
sub
sbb
adc
sub
push
cmc
push
add
in
dec
xor
lea
sub
sbb
inc
sub
pop
(bad)
push
or
shr
and
jb
lods
and
push
or
test
dec
mov
add
xchg
inc
dec
retf
xchg
add
lock
into
cmps
daa
mov
data16
jge
jo
movs
pop
mov
test
push
shr
add
imul
jno
dec
gs
pop
or
push
and
or
fstp
xor
mov
mov
mov
jb
push
pop
jb
pop
sub
imul
mov
xchg
sub
or
dec
or
push
adc
or
add
(bad)
push
xor
inc
mov
push
leave
test
add
jo
lahf
add
inc
loope
push
and
repz
adc
mov
je
setle
scas
mov
sbb
outs
mov
mov
lea
push
retf
sbb
imul
cmps
and
pop
clc
test
dec
xor
add
mov
pop
add
aaa
mov
xor
imul
or
iret
push
sub
and
dec
jmp
nop
sti
ss
adc
das
ror
and
sbb
mov
mov
ror
or
cmp
xor
push
sub
enter
add
and
enter
or
pusha
add
or
femms
repnz
icebp
pop
lods
adc
fild
stos
or
in
xchg
and
add
fcmovnbe
dec
jns
add
add
pop
cmp
add
enter
dec
or
jns
inc
mov
jmp
inc
fs
bound
jmp
inc
pushf
or
sbb
add
mov
out
jle
sub
or
sbb
jo
aas
cmp
push
and
mov
mov
cmp
jne
and
movs
jne
jnp
pusha
mov
mov
(bad)
inc
out
shl
dec
push
test
popa
fnstcw
or
inc
pushw
jl
in
xor
xor
daa
mov
dec
outs
mov
sub
mov
sbb
dec
(bad)
aam
loopne
repz
add
jae
mov
xchg
xor
cdq
dec
call
(bad)
enter
jge
pop
sbb
js
aaa
jns
mov
pushf
ins
mov
in
mov
jae
out
adc
inc
(bad)
stc
push
push
in
xor
add
ror
loopne
aaa
add
ret
xchg
xor
mov
stos
dec
cmp
or
ret
ins
or
or
or
jp
or
push
out
and
movs
mov
movs
mov
xor
cwde
and
or
sbb
push
sub
sbb
fnstenv
dec
push
mov
xchg
ins
add
popa
sub
push
sbb
pushf
push
mov
test
inc
rol
fadd
pusha
add
mov
fnstenv
enter
gs
sbb
rcl
dec
mov
call
mov
inc
test
imul
add
shr
jne
test
je
mov
mov
aam
lea
or
add
cmps
hlt
cmp
push
pop
xchg
dec
aad
bound
cmps
lods
mov
push
push
(bad)
xor
jne
cmp
fadd
and
pop
fwait
jnp
xchg
inc
pinsrw
(bad)
inc
pop
fld
movs
add
xchg
shl
push
add
sub
add
cmp
push
push
lock
add
adc
xor
cmp
(bad)
sar
int3
push
pop
add
xchg
inc
nop
adc
arpl
rcr
cmp
add
xor
cdq
dec
xor
sti
in
mov
add
out
and
cwde
and
ror
in
push
ss
retf
push
fmul
int3
adc
es
sbb
test
mov
sub
test
push
aaa
lea
(bad)
jg
enter
sbb
loop
and
sub
dec
xor
push
xor
xchg
dec
call
add
push
mov
sub
xchg
test
cmp
sbb
js
pop
dec
push
test
dec
add
or
(bad)
aam
pop
dec
sub
jae
(bad)
or
add
mov
outs
pop
test
push
ja
adc
cdq
jns
sub
clc
or
sar
add
out
(bad)
xchg
hlt
cmp
sbb
xchg
push
jo
push
jmp
xor
sbb
xor
test
mov
daa
mov
loop
sbb
jbe
adc
xchg
clc
inc
push
or
add
dec
loope
add
push
jnp
sbb
mov
aaa
sub
mov
push
add
push
and
add
dec
or
fild
ffree
jnp
shr
jle
mov
or
mov
test
nop
mov
out
and
inc
repnz
push
inc
mov
add
aad
mov
cwde
test
pop
bound
pop
push
(bad)
out
or
jecxz
fwait
sbb
adc
and
movs
mov
xor
mov
sbb
jge
inc
cmp
ret
retf
cli
xchg
pusha
dec
stc
scas
add
pushf
push
(bad)
xchg
inc
fisttp
or
pop
loop
(bad)
or
pushf
sbb
push
push
pusha
sti
push
loopne
cdq
pop
adc
sub
xlat
xor
pop
ret
cmp
test
(bad)
xor
sbb
jo
data16
popf
lods
aaa
jno
or
adc
and
mov
push
ror
out
or
lods
xchg
lsl
xor
adc
cmp
mov
pushf
std
mov
add
out
popa
loop
inc
dec
or
add
std
push
pop
mov
and
or
add
pusha
std
mov
or
sbb
xor
test
mov
fs
mov
adc
call
ret
mov
imul
adc
push
dec
push
pop
push
xor
fwait
dec
adc
jb
pusha
imul
xor
sub
sbb
push
sub
retf
fstp
loope
sub
outs
xor
inc
xchg
mov
adc
or
inc
push
dec
fsubrp
inc
(bad)
cld
sub
or
jge
push
xchg
adc
push
jo
dec
jmp
jae
jg
loope
pop
pop
mov
jmp
cmp
imul
je
mov
enter
or
push
cmp
mov
mov
adc
lea
shl
xlat
pop
cmp
(bad)
loopne
mul
and
jae
cmp
adc
dec
in
js
sbb
sbb
imul
fwait
add
dec
push
or
push
test
dec
test
adc
adc
sbb
inc
cmp
ds
popa
pop
pusha
call
mov
sahf
xlat
push
jno
push
inc
inc
push
xor
push
frstor
mov
lods
push
or
jge
in
cmp
pop
adc
mov
adc
hlt
pop
add
mov
popf
clc
add
mov
add
pcmpeqd
test
add
mov
xchg
sar
into
test
pop
stos
std
and
cmp
dec
mov
add
pop
(bad)
mov
cmp
add
mov
int
imul
mov
pop
mov
mov
mov
adc
jo
jl
and
xchg
nop
loope
push
cmc
sbb
je
(bad)
cmp
jae
xor
fldcw
pop
sti
jbe
adc
test
adc
mov
mov
lds
push
repnz
adc
add
je
lds
popa
add
sbb
add
pop
xchg
rcr
mov
adc
mov
add
dec
mov
mov
push
loope
ret
test
jne
rcl
cmp
mov
mov
push
jo
dec
inc
fnstcw
sub
add
add
xor
pop
and
or
mov
xchg
lds
pop
inc
push
in
inc
test
dec
setae
cmp
xchg
dec
and
sub
das
push
push
push
fiadd
dec
sbb
jns
adc
inc
ins
xchg
out
push
sti
add
xor
pop
adc
and
das
and
pusha
cli
xor
aaa
xchg
mov
sub
add
inc
xor
popf
mov
cli
je
cmp
and
add
dec
ret
push
pop
inc
adc
and
ss
imul
mov
lods
dec
movs
mov
jb
jge
sbb
add
cmp
jl
add
mov
or
pusha
or
jo
pop
pop
dec
das
(bad)
mov
cmp
adc
add
adc
(bad)
in
retf
sbb
jl
or
xchg
sbb
or
pop
lea
ret
sub
push
mov
sti
popf
inc
mov
mov
mov
lea
mov
jge
mov
movs
in
std
fs
lea
xor
ins
daa
dec
xchg
xor
sbb
in
mov
mov
ret
jl
ret
movs
jae
cmps
cmp
inc
sub
pop
lahf
(bad)
inc
and
retf
inc
stos
push
imul
jne
in
lods
sbb
dec
and
dec
inc
fmul
xchg
push
lods
add
mov
jb
dec
add
(bad)
jecxz
adc
mov
push
movs
push
mov
imul
inc
dec
mov
adc
jne
ins
mov
xor
nop
movs
adc
fdiv
dec
and
nop
stc
cld
fisttp
and
cmps
pop
push
dec
dec
ret
and
push
pop
in
aam
daa
test
(bad)
stos
bound
add
sbb
adc
in
pop
sti
inc
dec
addr16
mov
ja
lock
jo
jg
xor
mov
inc
(bad)
jmp
mov
js
sbb
ret
mov
inc
ficom
mov
mov
mov
xlat
mov
xchg
jo
int
js
xchg
ss
add
xor
retf
add
dec
mov
push
push
pop
loopne
dec
sbb
pusha
xor
ins
aad
or
sbb
inc
push
sbb
or
shl
ror
(bad)
mov
mov
repnz
pop
jmp
cld
cdq
ficomp
xor
jle
mov
lea
xor
adc
test
xchg
ins
or
fs
and
les
clc
call
outs
hlt
mov
push
lock
sbb
and
mov
inc
sahf
and
jge
jle
xor
aad
cmp
ja
loopne
add
jl
xchg
adc
cmp
add
xor
cmp
cmp
sbb
outs
dec
xlat
sub
xor
and
sbb
mov
inc
repz
sub
add
lock
(bad)
cmp
in
jmp
cs
xchg
xor
(bad)
mov
dec
jo
pop
or
or
pop
adc
jmp
enter
out
or
in
(bad)
sub
push
add
or
ds
add
and
xor
mov
lea
adc
add
or
push
fidiv
jno
inc
dec
pop
pop
lea
xchg
lea
aam
jae
jbe
je
js
fmul
push
in
cmp
pop
test
or
push
adc
jle
add
pop
cli
push
cmp
push
nop
mov
jmp
pop
cdq
pusha
or
repnz
adc
mov
cwde
add
mov
mov
push
inc
aaa
rcl
cmp
adc
test
jne
test
push
test
test
movs
cdq
dec
fimul
dec
je
push
mov
call
es
sbb
and
lods
or
xchg
add
adc
adc
lock
into
adc
mov
mov
add
add
jnp
test
dec
popa
daa
lods
dec
nop
push
cwde
cmp
in
jle
fild
rol
mov
mov
jo
mov
lock
mov
adc
rcr
mov
movs
pop
std
mov
fs
in
cli
ss
out
add
cmp
clc
out
xchg
out
mov
add
cmc
inc
mov
(bad)
(bad)
std
int
rcl
clc
add
push
movs
rcl
fmul
sbb
aad
lods
or
sti
test
xor
sbb
out
mov
fistp
xchg
dec
push
(bad)
xchg
pop
outs
mov
mov
sbb
push
push
in
mov
lea
test
mov
add
sub
push
inc
mov
sbb
sub
push
cli
lds
add
call
jmp
dec
(bad)
stc
nop
pop
mov
ret
lock
prefetchw
or
sahf
jnp
xor
loopne
push
sub
add
xchg
clc
loope
addr16
in
ror
imul
pop
sub
and
shl
lock
retf
inc
je
cmp
lds
add
js
test
iret
dec
outs
pop
and
mov
sbb
or
adc
cmp
imul
push
mov
xchg
(bad)
rep
cmp
xor
sub
mov
movs
mov
lock
das
xor
or
and
nop
lods
dec
test
int
loop
ins
test
ret
sbb
cmp
add
dec
sbb
je
shr
push
test
mov
into
add
inc
add
movs
hlt
mov
ret
pop
dec
pop
retf
dec
enter
adc
popa
add
xor
add
pop
pop
xor
inc
jl
add
daa
xor
loope
fdiv
and
data16
sub
pop
pop
push
mov
les
jne
je
sub
adc
dec
cmp
jp
jo
test
adc
pusha
jp
dec
outs
int3
movs
push
adc
push
je
dec
and
and
and
jb
jo
clc
pop
sbb
xor
out
pusha
fisttp
ds
push
test
pop
sbb
sub
data16
pop
add
cs
mov
mov
nop
or
iret
mov
or
adc
xor
test
and
xchg
or
sub
push
sub
gs
fadd
popa
cmc
shl
cmp
push
add
cmp
ins
mov
fmul
outs
inc
hlt
ss
das
or
adc
inc
test
test
or
jl
ret
xchg
add
sub
push
add
(bad)
inc
sbb
jae
mov
cmp
mov
cmc
and
test
push
dec
sub
add
retf
inc
pusha
push
test
jnp
pushf
cwde
sub
mov
movs
push
sub
lods
sub
movs
sub
cmp
pop
sub
adc
push
mov
ja
lea
(bad)
loopne
rcl
hlt
push
inc
push
mov
cmps
add
add
xchg
aad
xchg
or
fld
cmp
cs
inc
mov
push
mov
aad
add
sub
clc
loopne
repnz
fmul
mov
(bad)
jmp
push
les
jmp
cmp
push
in
(bad)
sbb
adc
lea
sub
mov
or
cmp
ret
inc
or
inc
push
cmp
dec
in
lock
inc
xor
add
dec
mov
fld
mov
pop
pop
and
repnz
push
and
xor
xor
push
mov
push
mov
adc
add
je
loop
jo
iret
test
aam
adc
dec
or
fmul
iret
push
xor
push
and
fcomp
pop
outs
xchg
outs
imul
in
rcl
dec
add
jge
inc
ret
jo
inc
pop
sub
dec
movs
adc
scas
mov
xor
add
push
dec
arpl
and
jne
mov
and
pop
sar
mov
mov
and
cli
in
fs
leave
adc
aaa
cmp
enter
or
je
sbb
fs
aaa
push
je
test
sysenter
cmp
cs
xchg
fst
jmp
aam
nop
dec
mov
inc
jae
jmp
mov
adc
sbb
pop
sub
(bad)
in
aaa
sbb
push
xor
loop
mov
pop
into
jg
ja
sbb
push
cdq
push
cmp
cmp
adc
mov
mov
push
lds
cmp
push
mov
mov
fs
fadd
add
cmp
scas
fistp
mov
inc
movs
mov
push
gs
mov
fistp
jge
pop
inc
or
pop
mov
mov
test
sbb
and
in
mov
add
test
adc
jge
add
mov
jle
jo
ds
test
popa
and
test
pop
popa
loopne
nop
add
adc
push
pop
push
pop
and
(bad)
push
add
lds
xchg
mov
cs
lea
xor
mov
shl
mov
mov
mov
mov
jge
jge
jne
mov
mov
sub
test
dec
loopne
jb
add
sub
or
(bad)
js
mov
and
inc
fld
inc
mov
and
mov
cmp
sbb
and
or
lods
loopne
popf
mov
jns
into
fbstp
arpl
dec
push
dec
cmp
dec
inc
cmp
in
and
dec
dec
fld
add
cmps
les
aam
aam
leave
dec
jg
pop
push
lea
xor
jbe
frstor
dec
dec
jb
or
fs
adc
sbb
movs
stos
push
test
push
jp
movs
xor
sbb
or
sub
cmps
push
lea
push
jb
cmp
and
pop
add
inc
push
pusha
rcr
pop
dec
push
inc
push
pop
pop
push
sub
and
(bad)
mov
pop
jmp
pop
out
pusha
loopne
fsub
pop
xchg
push
push
pop
cmc
in
daa
jne
stos
lods
mov
xchg
push
dec
xchg
enter
xor
or
cld
sbb
cmps
(bad)
jnp
adc
scas
adc
inc
test
sti
cwde
loopne
ror
mov
xadd
stos
dec
push
add
out
and
lea
mov
daa
xchg
call
pushf
jmp
adc
pop
fs
dec
mov
add
pop
xor
sub
mov
rol
jmp
and
lock
loopne
sbb
leavew
dec
cmp
jmp
sbb
push
push
cmp
gs
popa
adc
jne
mov
pop
nop
jno
pop
adc
push
mov
push
mov
sbb
dec
je
push
dec
xlat
int3
push
xchg
add
and
and
fs
movs
mov
sbb
loop
pusha
add
in
loop
test
jl
add
movs
ins
xchg
or
stos
bound
das
movs
xchg
test
test
sub
stos
lock
push
xchg
js
inc
dec
add
(bad)
retf
aad
mov
xor
daa
push
loopne
imul
pop
xlat
sar
fdivr
push
mov
jbe
inc
cmps
in
push
pop
mov
aaa
lea
jbe
cdq
add
rol
pop
lods
xchg
sub
lods
imul
mov
retf
sbb
cmps
aas
cmp
repz
or
das
mov
je
std
lods
rcr
jp
int3
call
mov
xor
loope
cdq
outs
dec
ret
sub
add
adc
jp
mov
rcr
js
gs
xchg
add
popf
jp
and
jo
scas
dec
stos
inc
push
mov
call
arpl
xor
rdpmc
nop
lock
or
push
arpl
add
pop
jae
add
mov
push
jno
jl
cdq
add
jge
sbb
rcr
hlt
mov
dec
in
jle
mov
jmp
retf
shr
mov
inc
cld
pop
cmp
sub
lea
sub
push
lods
jnp
cdq
adc
add
dec
rol
add
sbb
jnp
add
inc
jne
cld
pusha
or
adc
call
or
jo
jbe
ja
addr16
adc
fidiv
jmp
mov
push
jo
mov
cmp
or
sub
add
add
jb
fist
xor
data16
push
rol
push
fmul
inc
push
mov
ja
aaa
test
das
xlat
inc
test
ins
cmp
mov
mov
js
lock
cmp
fadd
mov
jge
pushf
push
cmp
or
adc
(bad)
or
iret
mov
lods
mov
lea
push
xor
mov
shld
(bad)
into
shl
scas
xchg
add
test
test
sbb
adc
ins
dec
push
adc
adc
jmp
lea
sbb
and
cmp
fwait
je
jno
std
pop
cmp
sub
orps
rcr
add
pop
add
int
shl
or
outs
and
mov
push
cli
xchg
xor
pop
add
and
mov
xor
add
mov
sbb
int3
push
pushf
test
out
bound
sbb
rcl
push
xchg
or
inc
loopne
push
and
int3
cwde
imul
(bad)
sub
fs
mov
inc
add
loopne
pop
cmp
mov
loope
jne
cwde
lea
adc
shl
ins
and
push
pop
loopne
jecxz
repz
jg
sbb
fmul
cmp
pop
fs
inc
enter
fwait
dec
push
loopne
mov
leave
adc
nop
sti
pushf
add
mov
in
outs
push
push
push
data16
sbb
jecxz
pushf
mov
scas
loope
xchg
(bad)
mov
or
jns
push
add
xchg
mov
push
push
mov
jo
mov
mov
cmp
outs
cld
ja
inc
sub
mov
add
or
aad
dec
sbb
pop
dec
push
call
adc
sbb
ret
loopne
pusha
add
lods
adc
sub
fnstsw
adc
(bad)
or
mov
mov
fistp
mov
sbb
(bad)
mov
and
int3
sub
movs
xlat
ficom
push
xor
push
nop
and
mov
or
jl
cmps
es
clc
inc
cmps
fist
test
movs
cli
cmp
xor
test
pusha
cli
js
push
xchg
and
lods
push
jmp
bound
xor
rcr
test
add
inc
push
ror
leave
inc
sbb
jns
pop
push
push
mov
dec
data16
cmp
jo
jns
pop
js
mov
loopne
dec
mov
add
add
mov
xor
movs
xor
xor
mov
add
mov
or
sub
cmp
(bad)
nop
ss
xor
ret
dec
test
xchg
adc
cmp
dec
add
(bad)
mov
or
jge
mov
cmp
mov
(bad)
lock
aam
jno
imul
test
adc
movs
push
or
pop
pop
shr
int3
loope
xchg
sbb
loope
add
movs
(bad)
mov
aad
push
mov
loopne
mov
sbb
xor
and
lahf
lods
cmp
add
adc
test
or
and
push
retf
retf
out
xchg
stc
mov
sbb
in
mov
or
sub
imul
or
adc
lods
sbb
ret
lods
jns
and
retf
ror
loopne
add
inc
adc
push
push
xchg
mov
push
das
int
pop
pusha
mov
retf
mov
movs
bound
into
mov
mov
inc
ins
aad
dec
adc
add
xchg
inc
mov
mov
push
repz
(bad)
(bad)
test
test
xchg
popa
aam
ret
stos
adc
sub
popa
dec
push
or
dec
pop
inc
ret
test
sub
adc
inc
pop
push
xchg
jo
dec
push
fsubr
dec
adc
sub
xchg
test
inc
pop
and
fadd
mov
jo
dec
mov
daa
add
mov
int3
add
aam
pop
adc
xchg
push
sub
xchg
xor
call
hlt
xchg
mov
leave
pop
leave
inc
jge
dec
mov
lahf
pop
pushf
sbb
and
arpl
movs
adc
inc
leave
inc
sbb
inc
lahf
push
pushf
sbb
or
dec
pop
cmp
xchg
xchg
popf
mov
dec
xor
(bad)
xchg
jns
cmp
xchg
aam
mov
jge
arpl
cmps
mov
jle
aas
dec
inc
and
jl
jne
jbe
push
sbb
inc
push
fsub
cmp
sub
sub
adc
lock
fisttp
je
pop
xchg
xor
pop
or
leave
leave
sbb
or
and
fnstcw
out
or
push
push
popf
sub
cdq
or
stos
nop
out
clc
or
leave
or
inc
add
or
jl
in
push
push
sub
push
nop
dec
push
or
inc
push
imul
retf
das
pusha
jnp
adc
mov
ret
aas
and
mov
mov
inc
rcr
fnstenv
hlt
sub
aaa
hlt
adc
mov
fild
in
movs
iret
add
add
mov
dec
scas
pop
and
loop
dec
ds
or
add
imul
ror
ret
adc
adc
mov
mov
sbb
push
add
arpl
shr
adc
mov
mov
mov
cmp
bound
mov
push
pop
adc
inc
mov
mov
adc
pop
jne
add
movs
xor
xor
push
xor
les
movs
loopne
or
sbb
dec
cmp
inc
pop
xchg
and
mov
adc
pop
out
imul
add
sbb
push
adc
test
mov
xchg
or
test
adc
int3
test
pop
sub
rcr
xchg
push
pop
cmp
inc
add
cmp
sub
dec
enter
push
pop
xor
std
stos
mov
movs
mov
adc
add
xor
jns
nop
add
and
push
push
sbb
jl
or
and
and
out
aam
je
sbb
and
iret
adc
lahf
je
mov
cmp
test
jnp
mov
mov
lds
popa
add
cwde
push
lods
rcr
dec
retf
cmp
add
xor
inc
mov
xlat
add
mov
cs
xor
aam
nop
and
nop
out
add
and
mov
push
dec
and
hlt
and
and
and
dec
xor
add
pop
sbb
fnstsw
mov
shl
xchg
or
lods
add
inc
rcl
add
pop
mov
in
sub
or
push
jo
add
cmp
mov
stc
and
adc
adc
cmp
rcl
push
mov
(bad)
adc
js
xor
mov
cmp
sbb
(bad)
aam
mov
adc
in
sub
jne
add
fmul
enter
movs
movs
mov
push
sbb
dec
popa
dec
cmps
nop
sub
xchg
in
retf
sub
jbe
pop
adc
sbb
cs
leave
adc
add
lods
push
movs
xchg
cwde
push
dec
or
jo
and
not
dec
je
adc
adc
inc
popf
and
and
sbb
movs
xchg
jno
sub
repz
jecxz
xchg
or
(bad)
imul
xor
or
test
mov
add
xchg
or
adc
lock
sub
or
shr
mov
mov
push
add
hlt
adc
leave
rol
inc
cmp
aam
js
dec
push
test
jl
or
aas
xor
or
jbe
dec
xchg
lock
enter
div
lods
cdq
push
fdivrp
(bad)
jo
and
xor
and
or
push
js
and
mov
or
ror
cmp
xor
add
pop
xor
pusha
push
mov
mov
xchg
sub
add
jle
mov
dec
pop
stos
popf
inc
mov
(bad)
enter
dec
dec
sahf
and
adc
inc
enter
xchg
dec
imul
lea
push
or
enter
shl
imul
jns
or
xchg
fidiv
lods
fsubr
movs
inc
sar
jne
dec
lea
mov
inc
mov
cwde
jne
cmp
or
mov
xchg
add
cmp
adc
push
loopne
cmp
mov
imul
inc
ds
loope
push
nop
and
call
push
inc
nop
cdq
mov
inc
adc
pop
inc
add
jns
outs
rcr
sub
in
xchg
or
cmp
and
jnp
dec
repnz
inc
inc
cmps
lds
dec
sahf
mov
es
push
dec
dec
leave
add
shr
or
or
sub
shl
push
icebp
xchg
or
xor
dec
loopne
daa
mov
dec
xchg
add
outs
mov
es
pop
push
jb
sub
test
nop
add
jmp
cmp
and
add
inc
test
loop
test
inc
(bad)
or
ins
push
push
xor
xchg
pop
xor
aas
xchg
jno
xchg
mov
mov
pop
mov
add
fs
add
daa
(bad)
aad
sbb
mov
mov
xchg
daa
pop
push
or
mov
and
rcr
test
mov
xor
sub
retf
xor
mov
sbb
test
push
daa
mov
jne
cmp
sub
in
xor
mov
fs
enter
and
inc
bound
arpl
cmps
fs
jecxz
xchg
mov
lods
push
cmp
push
test
test
xlat
inc
xchg
or
cmp
sbb
push
mov
aaa
push
or
bound
popa
pusha
test
mov
xor
nop
cmps
nop
sub
mov
mov
movs
callw
gs
add
mov
push
dec
push
mov
dec
enter
xchg
xchg
imul
cmp
push
mov
or
or
jmp
push
xchg
imul
fs
pushf
ins
stos
xchg
xor
dec
push
movs
inc
or
push
pop
xchg
rcr
jb
test
outs
in
and
or
cmps
outs
cld
xor
adc
dec
xchg
push
mov
inc
(bad)
pop
cmp
sub
mov
and
int3
push
push
bound
nop
pop
jo
mov
enter
jno
out
sub
jb
retf
nop
dec
adc
jb
nop
jae
je
enter
in
inc
data16
ret
sub
jbe
jo
test
dec
leave
in
xchg
push
js
test
xchg
(bad)
loopne
mov
imul
or
test
cs
mov
iret
mov
mov
lods
jle
push
and
shl
jg
js
adc
sbb
addr16
fbstp
add
test
add
sbb
push
mov
add
xor
or
mov
push
mov
add
dec
(bad)
xor
push
ror
push
mov
dec
xchg
mov
xchg
sub
xor
shl
add
mov
xchg
popf
daa
inc
(bad)
push
int3
sbb
add
and
adc
call
xor
add
dec
xor
xor
test
inc
mov
nop
sub
and
(bad)
adc
pusha
add
xchg
or
ja
fsubr
and
(bad)
push
int
leave
cmp
loope
mov
add
cmp
repnz
pop
enter
call
or
shl
cmp
stos
in
leave
pusha
call
repnz
mov
dec
sub
(bad)
shl
add
dec
xor
mov
push
test
mov
or
in
mov
dec
fadd
xchg
jnp
inc
and
or
dec
jne
xor
xchg
dec
jae
fs
mov
xor
das
xchg
lock
mov
jg
mov
inc
dec
and
mov
fist
rdpmc
fild
shl
or
je
push
or
fcomp
leave
xor
xor
push
cli
rcl
mov
push
inc
add
jmp
ds
xor
xchg
mov
pusha
sar
dec
adc
push
in
add
call
push
or
outs
mov
ret
pusha
loopne
mov
dec
movs
lods
aad
outs
push
push
aad
jne
repnz
dec
lock
and
ins
aaa
xor
stos
stc
mov
sbb
repz
pusha
cmp
adc
sub
pop
pop
xchg
stos
mov
pop
aaa
inc
pop
les
push
add
stc
sahf
push
movs
and
jge
fidiv
test
imul
xor
(bad)
int
pop
push
mov
call
inc
sub
aas
in
fsubr
cmp
pop
inc
bound
adc
mov
sub
push
ds
mov
and
inc
or
ret
imul
fcom
inc
sbb
popa
loopne
mov
in
or
push
ud2
rcr
add
jne
pop
adc
push
stc
test
xor
pusha
cmps
adc
cwde
icebp
xchg
mov
push
ins
xor
jmp
and
cmp
sub
cmps
out
inc
lods
call
sbb
mov
jmp
pusha
xor
pop
les
jb
fidiv
hlt
dec
rcr
jne
mov
adc
loope
ja
mov
mov
adc
add
pop
mov
xor
and
jle
lods
jb
loop
jg
xor
inc
sbb
and
mov
mov
lea
pop
mov
cmp
nop
add
bound
mov
in
ss
ins
je
and
je
sub
mov
call
ret
and
shl
add
cmp
rol
fild
and
xor
aas
cmp
push
push
mov
cmp
clc
shl
rcr
or
adc
mov
test
jo
jb
push
sub
icebp
jmp
adc
push
ror
jle
sub
imul
sahf
and
nop
add
aad
in
and
xor
lahf
iret
test
test
or
xchg
add
inc
or
mov
inc
or
and
cmps
fs
into
or
and
shl
or
(bad)
sbb
sub
frstor
pop
nop
stos
shl
mov
cmp
sbb
pop
enter
sub
or
xchg
cmp
inc
push
mov
push
and
sbb
adc
aaa
lods
adc
es
pop
sbb
loope
or
fs
sbb
xchg
pop
call
mov
or
pop
pop
rol
pop
adc
test
ins
cld
push
mov
loop
repz
inc
and
sbb
mov
cmp
and
xor
push
les
add
mov
and
xor
test
mov
adc
int3
or
and
mov
adc
xchg
push
dec
add
movs
rcr
add
inc
daa
pop
cdq
pusha
dec
mov
loopne
imul
ret
inc
shr
cmp
adc
mov
shl
mov
sub
cdq
retf
xchg
push
nop
cmp
cmp
sub
in
jo
adc
xchg
mov
lock
rol
dec
mov
sub
int
stos
or
ja
sub
shl
stc
jo
sbb
xchg
push
(bad)
faddp
mov
sbb
or
add
and
sbb
fs
dec
in
xchg
add
push
gs
jo
cmp
lods
adc
jmp
dec
pusha
dec
add
inc
sbb
cmp
xchg
or
fs
add
pop
test
mov
cmps
or
jo
jb
dec
bound
jecxz
jl
les
pop
js
mov
popf
outs
mov
ja
mov
push
add
pop
pop
push
call
inc
pop
mov
pop
pop
add
dec
cmp
stos
and
mov
cwde
push
push
adc
and
cmps
iret
js
sbb
mov
or
(bad)
cld
jmp
pop
push
sbb
clc
push
mov
add
cmp
or
lods
push
out
bound
(bad)
call
test
leave
adc
push
enter
(bad)
(bad)
sbb
push
test
(bad)
jns
test
push
shl
pop
or
sbb
or
pop
push
pop
pop
mov
dec
push
inc
nop
add
mov
sub
jae
fs
js
cmp
sbb
inc
sub
jo
sbb
inc
or
adc
jo
xchg
mov
add
mov
xchg
push
rol
pusha
xchg
inc
sub
pop
lock
icebp
ins
sub
sbb
jl
add
jno
test
add
and
jo
retf
shl
sar
cmps
mov
jo
cmp
rcl
push
out
mov
push
inc
fs
cmp
xchg
dec
mov
sub
lea
repz
and
or
add
and
pop
hlt
jl
(bad)
mov
xchg
movs
xchg
cmp
push
cdq
mov
inc
pop
mov
js
or
dec
cdq
nop
or
mov
push
add
mov
push
dec
movs
sbb
adc
sub
xchg
dec
mov
in
fdivr
sbb
sbb
leave
repz
cmp
xchg
and
mov
add
cmp
push
adc
inc
or
push
cmp
xor
test
lea
mov
in
es
pushf
xchg
in
or
scas
dec
into
xor
push
bound
pop
xchg
push
dec
sub
xchg
and
test
sbb
pop
sbb
jbe
pop
and
mov
ins
xchg
inc
sbb
push
add
fcmovnbe
push
fldcw
stos
jp
fiadd
mov
and
test
in
icebp
mov
or
and
and
sbb
leave
xor
add
out
int
push
pushf
or
or
mov
icebp
inc
out
add
frstor
sbb
add
mov
ret
add
xchg
rol
push
mov
pop
push
shr
push
push
and
jae
repnz
sbb
adc
mov
xor
shl
out
jno
mov
shr
test
mov
cmp
mov
mov
add
add
dec
pop
aam
enter
xchg
jg
retf
push
nop
cmp
add
xor
add
mov
sbb
fnsave
ins
clc
pop
and
and
out
sbb
xor
and
clc
xor
ror
or
and
adc
cmp
push
inc
pop
rcl
xor
aam
xor
xchg
popf
and
sbb
sbb
or
cmp
pop
sub
add
xor
cmp
or
xchg
in
and
sar
daa
(bad)
mov
push
add
pop
daa
pop
xor
sbb
sub
retf
dec
or
lock
(bad)
sub
sbb
adc
fidivr
and
sub
sub
lahf
xor
dec
pop
inc
add
sub
sbb
jb
xor
scas
mov
mov
jle
mov
sti
pop
mov
pusha
pop
or
or
jmp
(bad)
pop
adc
jmp
shl
mov
sub
adc
sub
pop
ret
adc
clc
jno
mov
sahf
pop
(bad)
stos
test
dec
sbb
add
adc
in
lods
ss
ds
sub
and
and
test
adc
rol
and
add
add
inc
add
pop
add
pop
sar
mov
sbb
add
inc
xchg
mov
cmovnp
inc
fs
fwait
pushf
dec
pop
in
das
adc
xchg
pushf
and
loope
test
dec
mov
mov
das
fld
(bad)
adc
mov
or
push
xor
push
popf
jns
jl
and
sub
jmp
pop
sbb
mov
cs
and
movs
in
mov
jecxz
adc
sar
and
aaa
add
mov
add
aam
popa
mov
test
mov
dec
xor
adc
cmp
mov
dec
adc
outs
arpl
inc
cmp
mov
imul
adc
sub
mov
pop
cdq
pop
mov
mov
scas
add
daa
cmc
mov
les
xor
ret
out
add
mov
pop
sbb
sbb
test
sub
cmp
and
or
mov
and
jno
jb
or
and
and
push
or
sub
and
gs
xchg
ss
in
or
or
dec
xchg
push
and
(bad)
xlat
or
sub
push
pop
sbb
inc
or
mov
mov
mov
out
push
xor
xchg
and
push
xchg
dec
or
in
(bad)
fcom
stos
mov
clts
sbb
mov
aaa
test
pop
dec
inc
jl
test
sub
inc
push
int3
mov
and
mov
rol
xchg
lock
sbb
add
pop
or
fild
loopne
push
fcmovu
xchg
das
pusha
cmp
inc
pop
fadd
adc
adc
lea
ror
ret
fild
push
sub
or
ins
sbb
movs
mov
cld
push
dec
xchg
push
fild
stc
popa
push
outs
in
aam
jo
adc
cmc
in
inc
fnsave
fdivp
fstp
sbb
jge
jne
add
inc
xor
loopne
inc
fisubr
or
xor
icebp
add
and
fnstcw
adc
sub
jmp
inc
push
or
add
mov
lods
push
cmp
pop
xor
stos
stc
sbb
xor
pop
or
jmp
cmp
jne
inc
add
mov
int
(bad)
movs
shr
cmp
dec
mov
mov
add
rol
or
push
fcomp
add
lea
sti
push
jae
bts
rol
fsubr
fstp
in
push
fld
loope
sub
clc
fsub
je
das
dec
popa
inc
push
fld
sbb
rcr
fist
mov
pop
fxch
jbe
fld
or
fisub
fstp
lods
sbb
mov
adc
inc
mov
mov
sbb
retf
loope
(bad)
dec
jmp
dec
arpl
mov
dec
and
cmp
add
jne
rcr
jbe
and
mov
mov
xor
ins
loopne
jmp
repz
mov
add
mov
popa
shl
xor
pop
and
cmp
or
jb
loopne
add
adc
dec
or
nop
imul
add
dec
ret
xor
and
popa
inc
(bad)
(bad)
imul
mov
mov
movs
push
mov
pop
inc
add
mov
xor
sbb
rol
(bad)
in
inc
sub
inc
sti
mov
pop
add
mov
jmp
ss
es
in
pop
mov
mov
mov
mov
mov
repnz
pop
add
sub
dec
sub
lock
jl
ds
test
or
cmps
or
jae
cmp
cwde
mov
jle
and
mov
(bad)
dec
lahf
test
add
cmp
sbb
xor
dec
mov
lds
adc
dec
pop
push
pop
add
push
hlt
(bad)
(bad)
icebp
cmp
or
push
mov
jecxz
mov
and
fist
or
call
pop
cmp
or
push
mov
sbb
cli
add
cli
pusha
add
or
in
dec
retf
xor
mov
xchg
inc
or
xchg
inc
outs
shr
and
or
and
cld
ja
pushf
adc
out
int
push
pop
or
add
mov
and
sar
into
cdq
pop
cmp
sub
push
test
hlt
(bad)
mov
xor
sub
cs
cs
sbb
xor
aas
pop
ret
cmp
int3
in
dec
xor
xchg
xchg
push
popa
sbb
retf
adc
inc
lods
xchg
mov
movs
cdq
dec
push
pop
sbb
pusha
pop
and
mov
shr
aaa
adc
enter
mov
jecxz
les
lea
push
loope
sbb
mov
inc
stc
push
shl
mov
inc
iret
xchg
repnz
(bad)
jle
dec
mov
ret
or
lds
loop
cs
(bad)
ins
jnp
add
push
ins
sub
shl
lds
xlat
daa
and
pop
lea
and
adc
and
mov
inc
(bad)
addr16
fdivr
std
aam
cmp
loope
inc
dec
jne
jbe
movs
fidivr
sub
ds
mov
cmp
xchg
cmps
dec
push
out
iret
xchg
dec
rol
das
daa
(bad)
ret
pop
xor
or
pause
push
mov
adc
js
inc
xchg
cmp
int
mov
lds
mov
les
pusha
setb
mov
mov
aas
fmul
popf
or
adc
push
stos
cmc
aad
inc
cmp
mov
mov
xor
aaa
inc
sbb
mov
or
lds
les
(bad)
je
dec
or
mov
imul
pop
pop
jge
mov
pop
cmps
popa
dec
adc
sub
adc
(bad)
inc
lock
jns
test
adc
jb
int3
call
movs
int3
sbb
cmp
cmp
and
ds
mov
xor
jge
fdiv
in
inc
lock
nop
jl
sbb
in
xchg
or
stos
mov
push
call
fs
or
sub
inc
push
adc
xchg
aaa
sbb
mov
or
rol
adc
sbb
adc
fs
fs
add
ins
ffreep
(bad)
and
lea
sub
dec
inc
xchg
repnz
lods
push
ror
xor
sbb
sbb
or
loopne
push
sub
(bad)
mov
pop
mov
dec
or
jle
and
fldenv
or
and
push
jp
inc
ins
stos
sbb
sbb
mov
push
lods
in
sub
jbe
dec
inc
lahf
and
adc
add
lahf
adc
cmp
and
and
jl
mov
out
inc
jo
or
push
and
jle
or
xor
mov
dec
adc
scas
dec
pusha
ror
xor
mov
test
pop
pushf
clc
and
push
xadd
xchg
dec
and
adc
inc
shr
adc
mov
rcr
pop
jl
gs
rol
sbb
aam
(bad)
sbb
xlat
adc
shl
lods
(bad)
and
and
add
push
mov
pop
push
pop
dec
jno
icebp
adc
iret
dec
and
add
mov
jecxz
pusha
aas
ins
sub
mul
add
cwde
(bad)
pusha
adc
jecxz
in
push
inc
ss
add
jne
add
pop
mov
inc
call
xchg
int3
mov
fcmovnb
inc
jmp
cmp
pushf
or
adc
dec
cmp
push
mov
jl
adc
cmp
sbb
xchg
xchg
pop
jp
push
rol
dec
adc
inc
imul
hlt
mov
xlat
lea
adc
outs
jmp
enter
sub
or
sbb
icebp
cmp
ins
xor
or
push
mov
adc
gs
pop
jne
pop
xchg
fcomp
ss
xor
xchg
mov
(bad)
push
test
inc
push
mov
push
aas
mov
lds
std
add
push
push
lds
inc
sbb
popa
push
mov
sbb
ror
test
inc
inc
adc
push
inc
sbb
mov
or
jmp
pop
jge
cld
push
cmp
mov
push
mov
fild
push
addr16
fs
arpl
ret
inc
(bad)
lock
(bad)
cwde
pop
(bad)
mov
or
xchg
std
js
sbb
sbb
push
inc
jns
mov
cmp
in
repnz
add
and
bnd
clc
cmp
pusha
add
cmps
cmp
fsub
and
das
cmp
push
xchg
popa
jno
fdiv
pop
lds
xchg
xchg
xchg
or
pop
(bad)
aam
push
pop
es
mov
enter
mov
mov
js
push
fs
xchg
sub
sub
mov
fs
scas
nop
test
nop
nop
xchg
pop
xchg
pushf
adc
add
xor
test
xchg
movs
push
and
xor
mov
mov
in
xor
or
aaa
popa
xor
repnz
jmp
adc
and
cmp
mov
xchg
cmp
cmp
cmp
je
sub
and
jb
and
cwde
cmp
(bad)
cmp
pop
adc
mov
in
xor
push
push
mov
pop
(bad)
aas
aaa
xor
test
popa
daa
inc
xor
mov
add
add
fs
xchg
test
inc
jmp
inc
addr16
loopne
(bad)
xchg
fadd
mov
leave
test
les
or
test
rcr
inc
add
ret
add
push
push
das
mov
nop
inc
fisubr
imul
push
loope
push
inc
loopne
push
cmp
mov
mov
inc
xchg
pop
popf
int
xchg
nop
jno
pop
add
sbb
out
add
cmp
cmps
enter
dec
add
test
scas
pusha
mov
mov
call
jnp
push
xchg
mov
rol
stc
repnz
mov
in
sbb
out
sbb
leave
movs
dec
sbb
dec
stos
cli
mov
(bad)
in
enter
adc
cmp
shl
dec
mov
in
stos
or
xor
push
mov
inc
aam
test
inc
and
nop
push
adc
cmps
jecxz
setg
dec
fs
das
leave
jb
imul
lea
push
sub
push
rcl
test
(bad)
pop
xchg
mov
sbb
and
inc
dec
in
mov
push
sbb
cdq
add
mov
and
push
movs
in
cmp
dec
cmps
in
movs
push
enter
mov
dec
mov
xor
leave
pop
mov
adc
xchg
pusha
push
inc
pop
lahf
test
jecxz
xor
dec
jns
sub
mov
xor
sub
and
sbb
pop
xor
setg
or
lea
pop
inc
xchg
inc
in
inc
xchg
rcr
into
or
push
push
inc
pop
pusha
push
sub
stos
pop
retf
sbb
stos
in
add
fs
fwait
in
loope
jg
cmc
popa
push
push
push
arpl
popa
xlat
lock
daa
jmp
cmp
in
icebp
xchg
xchg
xchg
push
nop
popa
in
mov
popa
pusha
xlat
pop
bound
push
jmp
mov
or
push
jo
int3
gs
loop
xor
pop
js
fnsave
xor
sbb
loop
mov
xor
cli
lods
adc
rcl
pop
imul
ret
ins
add
dec
inc
jnp
sbb
pushf
or
jmp
in
mov
add
sti
fdiv
sub
sub
nop
dec
dec
js
inc
fst
lock
push
in
mov
pop
dec
and
jl
fs
into
add
rcl
pop
test
jp
test
or
and
or
cs
lods
gs
pop
mov
mov
push
inc
add
cmp
sti
fild
sub
add
add
movs
jns
sub
add
adc
movs
jns
sbb
push
movs
jns
movs
sbb
pop
and
movs
jns
and
and
jns
movs
jns
sub
or
or
movs
jns
xor
xor
movs
jns
cmp
push
rol
cmp
inc
nop
iret
test
cmp
inc
inc
adc
test
inc
adc
xor
test
dec
iret
test
dec
adc
adc
iret
test
push
adc
test
pop
int
xor
pop
pop
pusha
and
sub
inc
add
add
or
rcl
push
mov
mov
adc
add
and
cmp
pop
or
jl
mov
sub
nop
mov
or
(bad)
repnz
pop
push
or
mov
lods
test
push
fs
or
jbe
fisttp
in
jmp
xchg
mov
xchg
dec
xchg
xchg
gs
mov
add
retf
ins
xchg
dec
pop
pop
or
pop
inc
and
or
or
add
mov
or
gs
ds
mov
and
mov
sub
js
or
dec
mov
add
push
xor
xor
lahf
push
inc
scas
pop
les
cmp
mov
mov
add
and
out
xchg
and
mov
jb
loop
adc
adc
das
movs
test
fs
or
add
aaa
or
cld
ins
jmp
push
fmul
mov
fucomip
ss
mov
xor
ret
clc
cmp
jg
jns
stc
and
mov
jbe
inc
inc
pop
dec
clc
add
test
fsub
test
mov
loopne
mov
jge
mov
pop
sbb
mov
add
outs
mov
or
jo
and
popf
push
scas
cmp
mov
and
fst
leave
test
into
dec
mov
fadd
enter
push
dec
jb
mov
es
movs
add
and
xchg
mov
cmp
push
push
xchg
dec
div
push
mov
inc
cmp
xor
xchg
retf
inc
jb
sub
sub
jg
popa
jb
adc
push
add
div
add
(bad)
cmp
inc
out
xchg
das
fst
sbb
pop
jne
aam
pushf
mov
cs
xor
add
adc
xor
adc
or
icebp
mov
cmp
jg
in
ror
dec
in
out
xor
pop
mov
sub
mov
lea
jbe
mov
jp
jl
pop
aaa
inc
mov
push
std
aas
pop
stos
pop
aam
or
mov
pop
jno
rcl
cmps
fdiv
inc
mov
push
lea
and
sbb
push
popa
xchg
lods
adc
xchg
xchg
pushf
sub
mov
and
movs
mov
sub
out
pushf
cmp
cmp
or
push
imul
je
add
xor
add
xchg
xlat
and
sub
add
sbb
and
push
push
sbb
pop
mov
xchg
sub
lods
int3
adc
jle
je
test
inc
je
lds
ror
push
and
(bad)
pop
push
push
fdivr
arpl
jns
adc
test
and
fstp
sbb
xor
js
shl
and
push
mov
js
pop
dec
push
sbb
sahf
pop
mov
and
inc
ja
lock
arpl
jb
dec
cwde
arpl
cmp
jns
sub
push
add
ins
and
adc
and
je
mov
test
or
push
adc
pop
or
adc
sbb
xchg
xchg
test
ret
lods
imul
xlat
in
and
push
inc
jb
dec
dec
and
stos
pop
mov
cmovo
in
cmp
jp
stc
push
mov
pop
test
dec
mov
or
xor
jecxz
repz
sar
jmp
adc
adc
aas
push
test
and
call
and
clc
push
(bad)
jno
call
not
or
jne
and
outs
add
push
into
add
ret
out
ss
adc
imul
and
jne
ret
sub
leave
arpl
add
outs
jg
call
pop
push
xchg
inc
sbb
daa
ret
pusha
push
dec
add
or
lahf
ret
test
or
sbb
xor
mov
test
cmp
push
or
loope
sub
mov
or
xor
adc
add
ret
ror
or
fiadd
ja
lock
cmp
mov
loopne
xchg
jns
or
or
cmps
or
xor
adc
xchg
or
ret
jg
nop
add
or
push
adc
add
sbb
or
or
mov
pop
cmp
adc
or
add
dec
leave
and
xor
ret
outs
push
nop
fstp
mov
pop
ins
pop
hlt
mov
inc
push
push
xor
mov
or
add
push
jl
push
push
add
xchg
adc
or
ss
pusha
ror
mov
mov
add
dec
add
aaa
je
nop
xchg
or
or
cmp
ins
xlat
pop
repz
jne
pop
pop
scas
rol
xor
add
ret
push
push
rol
mov
pop
push
push
and
sahf
or
adc
mov
jno
enter
jnp
push
in
cmp
add
inc
inc
pop
sbb
adc
adc
adc
cmp
and
add
mov
inc
and
retf
and
rol
sbb
neg
push
push
add
or
adc
add
outs
test
out
adc
sbb
test
ror
fcomp
inc
push
sbb
mov
add
jo
sbb
pop
(bad)
popa
xor
sbb
cmp
push
pop
xchg
mov
xor
push
es
sub
outs
lahf
or
inc
pushf
add
mov
les
pop
movs
fadd
or
xchg
push
inc
add
inc
and
cmp
je
fimul
xchg
int
idiv
cmp
jo
xchg
and
lea
push
jmp
and
or
cmp
jne
jo
inc
push
ss
mov
outs
jb
add
adc
sub
(bad)
mov
jns
xor
jne
mov
cmp
push
mov
adc
aas
sbb
jmp
dec
add
fstp
dec
or
sub
inc
in
dec
and
test
push
lea
xor
inc
cmp
lahf
mov
out
nop
cmps
sub
adc
je
les
inc
aam
sbb
inc
fsub
xor
jle
adc
nop
adc
add
pop
xor
pop
mov
jmp
jle
pop
icebp
rol
jl
jg
jae
jne
ja
das
push
push
dec
push
cmp
add
cmp
mov
push
pop
ds
jle
sbb
dec
into
hlt
jae
or
adc
adc
dec
ror
mov
pop
xor
pop
or
into
adc
outs
xchg
lods
mov
into
cdq
mov
or
sub
sbb
jo
mov
dec
dec
dec
call
mov
push
xor
push
sbb
cmp
clc
jbe
add
adc
mov
fs
push
mov
mov
aas
pop
test
and
pop
adc
pop
jo
cmp
mulps
sti
add
dec
stc
jne
mov
adc
pop
test
mov
in
cs
mov
js
xchg
ins
fwait
xchg
iret
(bad)
push
je
bound
push
(bad)
je
and
mov
adc
std
xor
js
adc
ss
pop
addr16
leave
adc
paddusb
lods
ins
mov
mov
imul
mov
xor
adc
mov
mov
lds
push
and
out
aas
ins
mov
shl
mov
xchg
and
lea
push
dec
add
adc
jo
aas
push
mov
mov
mov
fcmove
inc
push
and
inc
or
or
jle
(bad)
je
jnp
xchg
add
or
inc
pop
push
add
dec
out
inc
add
mov
xchg
sbb
add
cmp
adc
inc
in
fidiv
or
rcl
shr
or
and
mov
(bad)
mov
adc
fistp
cmc
ret
aas
cmp
int3
cmps
sti
sbb
or
shl
or
jmp
mov
in
les
mov
adc
mov
test
inc
aaa
je
push
lahf
push
xor
pop
mov
sub
(bad)
jecxz
and
fisttp
and
sbb
add
cmp
cmp
lods
add
aas
mov
inc
xchg
sbb
es
aas
cmp
ins
adc
rol
mov
lea
dec
pop
add
(bad)
jno
pop
sub
cmp
clc
hlt
rol
jno
dec
inc
xchg
fs
xor
pop
dec
cmps
jmp
mov
cmp
call
loop
lea
cmp
enter
mov
jne
xor
mov
xor
sahf
mov
pop
scas
push
pop
lock
jo
push
push
int3
push
push
push
adc
mov
test
js
loope
cs
sub
imul
mov
enter
mov
push
notrack
or
ret
pop
retf
add
lahf
gs
inc
ja
push
adc
or
xchg
dec
js
sbb
push
inc
popf
mov
push
add
inc
mov
jbe
jmp
xchg
add
adc
pop
pushf
test
arpl
fcomp
mov
clc
xchg
dec
and
inc
or
js
clc
dec
add
inc
pop
cmps
test
add
dec
popa
xchg
pop
ror
pop
xchg
dec
mov
xor
in
sbb
ss
add
or
call
shl
mov
xor
cmps
push
xchg
lahf
jecxz
inc
mov
jbe
push
or
rcr
loopne
enter
dec
or
loopne
ror
pop
jg
adc
sbb
inc
sbb
icebp
rep
nop
aaa
add
lds
push
nop
ret
cmp
or
cdq
pop
out
push
inc
inc
or
adc
mov
test
outs
or
fisub
mov
sub
aad
cmc
ret
aas
movs
fwait
inc
cmp
add
mov
adc
cwde
push
sbb
lock
aam
call
inc
or
dec
inc
adc
rcr
jle
sbb
loope
pop
fwait
loopne
add
xchg
dec
adc
les
cli
mov
or
jmp
inc
sbb
dec
mov
sub
push
and
push
cmps
sub
es
cs
scas
rcr
call
stos
je
int3
loopne
and
ror
sbb
add
mov
pop
xchg
enter
and
clc
adc
or
stc
push
retf
pop
push
adc
pop
mov
mov
add
lock
inc
mov
ret
mov
pop
cmp
jbe
or
jne
neg
add
cmp
jb
stc
mov
cs
(bad)
hlt
sbb
adc
push
cld
pop
mov
cmp
je
jnp
test
stos
push
inc
cmp
push
push
pop
pop
lods
nop
cmp
into
dec
daa
test
stos
test
inc
xor
push
push
mov
popf
jp
scas
imul
adc
popa
cmp
retf
test
lock
aas
inc
cld
lock
icebp
out
scas
or
and
mov
dec
popf
jl
adc
aad
push
add
or
bound
inc
das
in
pop
inc
and
jge
fld
sbb
adc
add
xchg
lock
repz
mov
ret
xchg
xchg
je
in
inc
mov
movs
js
lods
repnz
cmp
inc
jle
fcom
add
mov
push
inc
add
test
test
clc
or
mov
mov
inc
clc
jge
and
adc
test
push
push
sbb
inc
mov
push
push
enter
mov
(bad)
rol
int3
push
dec
cmps
mov
push
pcmpgtd
cwde
ucomiss
jne
push
mov
jp
iret
jno
add
sub
cmp
in
mov
push
mov
test
add
imul
dec
out
push
jle
lods
std
xlat
loopne
push
pushf
fucom
daa
xchg
std
or
push
jae
sbb
nop
or
push
dec
mov
lods
xor
push
mov
sahf
aaa
gs
pop
mov
xor
push
add
int
int
pop
push
sub
push
test
xchg
aad
mov
vmwrite
pop
mov
lods
mov
adc
test
adc
imul
lods
jns
mov
call
out
cli
adc
fstp
out
xor
pop
loopne
dec
dec
push
mov
pop
xor
or
mov
gs
adc
shl
jb
adc
push
test
xchg
retf
in
test
mov
fs
adc
inc
cmp
repnz
xchg
mov
std
add
inc
retf
mov
out
and
pop
and
sbb
in
out
mov
inc
inc
lods
movs
or
repnz
and
hlt
call
push
sbb
xor
xor
adc
or
nop
sub
sub
scas
or
inc
mov
setp
pop
or
paddb
imul
pop
jecxz
enter
fcomi
or
xchg
or
add
and
and
and
nop
pop
sbb
mov
movs
fnstsw
or
add
movs
xor
ror
cwde
jo
sub
inc
pop
sbb
add
es
xor
jae
movs
xchg
out
xor
cdq
xchg
and
and
dec
stos
push
inc
mov
mov
inc
scas
inc
and
pusha
cmps
xchg
inc
sbb
mov
mov
imul
and
and
inc
jmp
sub
pop
mov
jb
mov
push
sbb
add
js
cmps
jnp
adc
jo
inc
dec
jo
enter
adc
mov
push
sub
inc
je
mov
cmp
fsub
sbb
xchg
mov
sub
xchg
and
add
dec
mov
cwde
call
test
and
xchg
leave
pop
nop
sub
movs
pop
sub
cs
jmp
(bad)
(bad)
jmp
pop
mov
movs
add
cmps
cmp
pop
retf
cmc
pop
dec
mov
in
mov
ret
lahf
imul
mov
repnz
retf
std
xor
cs
mov
and
push
push
cwde
push
inc
retf
orps
and
pop
sub
push
inc
daa
cdq
sub
sub
pop
sbb
or
enter
pop
scas
mov
xor
xor
ds
add
sti
out
push
cmp
sbb
sub
sbb
call
add
loopne
jp
add
or
ins
jl
sbb
call
dec
jp
es
lods
mov
xor
shl
mov
aad
or
test
xchg
xchg
xor
push
retf
cwde
jecxz
lea
mov
into
retf
cmp
hlt
jl
(bad)
dec
sub
(bad)
push
and
inc
mov
fst
in
int3
das
jmp
jb
nop
add
iret
push
cs
js
enter
xchg
or
mov
xor
xchg
pop
mov
cwde
test
or
jl
mov
and
mov
pop
inc
sub
add
adc
fadd
sub
dec
pop
loopne
fdivr
xchg
pop
or
sub
sub
pop
arpl
jg
cmps
jne
lods
int3
add
aam
mov
(bad)
or
dec
mov
shl
pusha
int3
jmp
int
xor
jmp
in
add
int3
in
lahf
push
and
lds
(bad)
jmp
sbb
or
or
and
or
or
fdivr
aad
mov
mov
push
or
or
mov
icebp
shl
lods
shr
jne
jg
cmp
je
test
mov
jmp
push
jmp
int3
loopne
push
mov
or
dec
push
xchg
jo
loop
push
dec
pop
adc
pop
push
inc
clc
jg
inc
ret
mov
adc
pop
gs
xor
repnz
imul
pop
fdiv
shl
adc
sbb
push
or
inc
xor
dec
mov
pusha
mov
pop
cmp
cli
loopne
mov
add
xchg
outs
sub
and
add
jg
pop
push
xchg
mov
add
or
pop
popa
ret
sub
pop
cmp
rcl
cmp
pop
cdq
call
pop
sbb
movs
stos
and
adc
add
lods
inc
arpl
test
shl
call
push
push
inc
test
dec
rcr
or
pop
or
push
cwde
ins
loope
mov
fs
xchg
mov
inc
mov
call
and
push
add
mov
pop
push
test
sub
jae
or
aam
mov
dec
aam
cmps
push
adc
call
js
test
jmp
enter
jl
xchg
(bad)
mov
mov
xchg
xchg
test
cmps
mov
(bad)
in
fiadd
movs
xor
out
push
out
jmp
xor
xchg
push
jmpw
bound
pushf
arpl
add
(bad)
dec
fisttp
cmp
inc
pop
xor
cs
mov
mov
in
xlat
je
dec
loope
stos
sbb
dec
ins
mov
mov
or
loopne
mov
push
adc
jecxz
adc
add
std
lock
dec
clc
inc
clc
mov
cmp
jl
mov
mov
jmp
push
mov
inc
jb
cmp
jo
mov
out
mov
aas
cmps
and
xor
punpckhbw
cmp
in
pop
add
retf
or
sar
xchg
push
in
sar
mov
cmp
mov
and
neg
clc
cmp
sti
cld
adc
mov
cmps
addr16
pop
push
xor
mov
inc
inc
stos
mov
outs
cmp
add
int3
ins
xchg
out
pandn
enter
xor
adc
push
pavgw
xchg
or
inc
call
fsubrp
push
sahf
ror
dec
jns
je
in
add
xchg
xchg
mov
adc
mov
adc
shl
nop
arpl
or
(bad)
adc
fst
loopne
pop
push
mov
test
mov
lods
xchg
scas
push
sbb
nop
jb
add
movs
rcl
jnp
add
xchg
int
arpl
fistp
jecxz
xchg
jae
jno
(bad)
mov
push
jecxz
or
cmp
mov
imul
push
adc
jnp
aaa
lods
cdq
test
jmp
pop
rcr
mov
sub
(bad)
sbb
add
pushf
and
and
add
cmp
sbb
jle
mov
jle
imul
rcr
push
cwde
push
pop
sbb
cwde
push
add
xlat
clc
enter
sbb
mov
mov
pop
pop
cs
sbb
je
loopne
repnz
push
popf
test
adc
cmp
and
mov
push
and
lods
lods
add
xor
lods
pop
add
stos
cmp
fcomp
or
adc
loopne
or
and
test
idiv
inc
pop
mov
mov
cmp
sbb
and
nop
popa
and
xor
sar
jo
and
nop
inc
or
xchg
push
push
nop
pop
and
ds
nop
inc
push
inc
in
and
add
or
hlt
fs
cwde
dec
ret
mov
outs
ds
enter
inc
push
inc
push
iret
repz
push
push
cmp
pushf
add
push
pop
ds
and
add
scas
repnz
adc
xchg
sub
adc
ins
cmp
fs
and
(bad)
icebp
jb
or
je
push
fs
movs
movs
movs
movs
jns
fs
je
fsub
and
sub
push
pop
enter
dec
mov
or
mov
hlt
push
push
ret
inc
sbb
mov
sub
nop
inc
or
add
lods
enter
lods
lods
movs
mov
int3
dec
mov
cmp
xor
and
ficom
and
js
dec
add
sub
mov
imul
test
push
push
dec
add
int
mov
loopne
lock
aam
mov
jns
and
add
push
cmp
xor
xchg
fdivr
mov
and
leave
mov
mov
mov
iret
outs
in
mov
sbb
in
dec
xchg
test
push
pop
push
mov
pop
xor
enter
pop
inc
inc
fsubr
mov
sbb
mov
xor
add
or
jmp
shr
xor
and
xor
mov
mov
ss
pop
mov
push
retf
fdiv
or
cmc
jmp
xor
in
out
add
mov
aas
nop
jl
xchg
cmp
fcom
inc
dec
aad
xor
mov
or
mov
int3
sbb
push
shl
mov
aaa
and
stc
cld
(bad)
jmp
sub
pop
or
mov
les
imul
mov
xchg
test
and
jno
push
scas
test
test
push
push
adc
pusha
sub
inc
data16
jge
adc
nop
jl
inc
jecxz
push
mov
pusha
popa
int
ret
mov
push
adc
xchg
push
inc
ins
fsub
pop
mov
mov
jno
cs
jb
int3
cmp
cmp
and
enter
xchg
adc
push
aas
ds
enter
mov
pop
push
push
sbb
repnz
push
add
popf
add
aam
imul
pop
mov
mov
push
sbb
(bad)
mov
leave
pop
leave
and
(bad)
(bad)
xor
out
div
popa
and
add
(bad)
sub
inc
xchg
add
call
adc
popf
add
add
mov
call
jae
jo
pusha
mov
or
sub
jo
ret
rcr
enter
call
retf
(bad)
push
test
cdq
cmp
jb
inc
imul
lods
ficomp
test
cmp
outs
fmul
and
jb
add
or
push
push
aad
shl
mov
pusha
xor
cmp
jmp
add
es
and
jecxz
aad
mov
arpl
pop
retf
popf
add
bound
sub
push
add
test
in
lock
mov
icebp
in
pop
sbb
inc
js
cmps
sbb
sub
cmp
push
jmp
aaa
mov
or
dec
enter
push
mov
je
mov
das
and
or
mov
push
lock
or
mov
cmp
popf
movs
fld
sar
jg
or
imul
fsub
or
or
in
xchg
fmul
ret
or
out
mov
cmp
fadd
imul
or
adc
fimul
loopne
fs
push
sbb
cmovs
cvtps2pi
adc
push
sbb
in
xor
mov
or
sar
adc
(bad)
xchg
je
or
inc
xlat
push
or
xchg
mov
ret
inc
shl
add
call
fmul
fsubr
fdivr
add
test
retf
sub
push
cdq
push
push
adc
push
call
or
dec
sbb
and
neg
clc
adc
add
sbb
inc
test
lods
std
pop
call
lods
add
cmp
rcl
sbb
ds
pusha
fsubr
pop
fsubr
call
sbb
or
inc
dec
add
fwait
retf
jp
sbb
jb
add
mov
add
mov
pop
mov
mov
and
xchg
inc
push
sub
push
out
add
add
popf
test
in
dec
inc
jp
jmp
aam
inc
push
cwde
xchg
dec
or
inc
sub
js
add
scas
mov
inc
test
xchg
xor
xchg
jge
sbb
cmc
dec
push
jge
clc
imul
jg
arpl
mov
dec
mov
sti
fmul
cld
and
pusha
ret
jne
xlat
pop
xor
sbb
in
nop
call
aad
add
call
popa
add
ret
mov
mov
mov
jns
push
aas
js
and
mov
in
xchg
inc
adc
pop
inc
iret
inc
mov
jmp
jecxz
jno
push
popf
mov
(bad)
push
shl
sbb
xchg
rol
add
rol
sbb
mov
aam
inc
test
mov
jge
stos
pushf
stos
sub
cmc
cmp
jne
out
mov
mov
mov
adc
add
call
push
nop
xchg
sbb
inc
sbb
pop
pop
imul
test
repz
mov
nop
loope
or
test
and
test
mov
jl
mov
adc
mov
push
ins
pop
in
sbb
lock
fisttp
and
and
cld
icebp
push
mov
imul
and
test
pop
dec
or
outs
xchg
ja
or
xchg
movsx
in
and
push
add
cmps
(bad)
push
nop
outs
xor
hlt
and
and
sbb
mov
sbb
mov
add
sbb
mov
and
mov
gs
sub
xor
sbb
pop
push
cmp
pop
add
mov
push
mov
mov
sti
add
or
push
test
enter
sub
push
fs
(bad)
movs
add
jle
outs
pop
pop
xchg
xor
cmp
add
pop
outs
loopne
sbb
xor
mov
je
js
mov
adc
push
test
lods
push
inc
sub
lods
je
mov
inc
in
inc
pusha
jo
std
push
and
pop
shl
cmp
dec
cmp
xor
jb
sub
add
fadd
jne
xchg
add
jb
jmp
push
ret
jnp
xchg
test
retf
adc
push
jp
shl
add
fwait
outs
mov
addr16
ins
shr
jo
outs
mov
jae
enter
js
jns
inc
inc
call
inc
inc
inc
inc
jp
dec
dec
dec
sbb
dec
dec
mov
dec
call
push
push
push
or
push
pop
pop
pop
call
cmp
jge
pop
pop
rcl
out
adc
mov
jae
inc
add
loop
adc
movsx
cmp
add
aad
fiadd
es
enter
test
mov
or
ja
retf
or
lods
nop
jae
or
nop
push
aaa
jae
push
aad
repnz
or
mov
inc
cmp
jb
mov
nop
push
pop
inc
call
imul
popa
in
and
push
adc
adc
cs
jp
movs
xor
fld
or
sub
pop
imul
push
test
push
push
cmp
lea
and
and
or
xchg
mov
xchg
mov
cld
add
mov
push
mov
mov
push
sbb
fisttp
xor
sti
xchg
xchg
push
jmp
cld
mov
adc
cmps
dec
xor
jo
retf
and
push
hlt
push
pop
jne
lea
xchg
inc
inc
rcl
add
xchg
and
sub
inc
cs
or
mov
add
xchg
(bad)
out
push
adc
je
in
call
inc
nop
int3
add
sbb
mov
adc
and
dec
js
ja
sub
or
es
es
xchg
adc
jne
sub
or
test
inc
test
scas
enter
pop
pop
dec
xor
(bad)
mov
idiv
pop
fcom
cmp
in
jo
lock
fstp
sbb
sub
push
sbb
add
adc
push
xchg
sti
fs
add
or
add
retf
sub
jmp
ret
jle
sub
int3
sub
rcl
test
mov
add
pop
and
outs
mov
jnp
xor
adc
xchg
jp
mov
ret
mov
or
and
adc
hlt
cmc
add
int
adc
push
cmp
fsub
leave
sbb
test
push
lods
or
push
dec
push
arpl
call
dec
iret
xchg
or
inc
std
push
(bad)
enter
nop
push
leave
shr
inc
push
xchg
mov
std
add
pop
or
xchg
int
and
lods
push
add
cmp
add
test
jne
or
xor
mov
dec
sub
or
xchg
pop
stc
inc
sub
pop
pop
ret
mov
jge
dec
adc
dec
mov
mov
pop
adc
pop
je
jge
out
or
ja
dec
push
add
adc
or
jo
dec
out
push
mov
rcl
xor
xor
les
and
inc
call
(bad)
sbb
clc
pop
mov
jb
popf
shl
add
hlt
add
nop
aaa
or
push
in
mov
lock
add
inc
xchg
add
mov
xchg
jae
push
sub
add
push
popf
jmp
xchg
or
and
or
sbb
push
xchg
jne
jmp
call
jmp
and
or
sbb
adc
(bad)
mov
dec
jo
push
sti
ret
das
outs
push
ins
fild
cmp
pop
test
mov
jns
repnz
mov
adc
mov
das
es
push
repz
pop
fimul
ficomp
mov
inc
or
pop
push
push
and
or
mov
xor
adc
pop
lahf
shl
pop
jne
dec
ret
std
inc
jg
pop
stos
adc
push
(bad)
cld
into
(bad)
es
xchg
push
push
test
in
mov
sbb
movs
lods
dec
gs
sub
cld
outs
test
inc
adc
or
sub
lds
add
and
pop
push
inc
and
adc
ins
(bad)
sbb
add
adc
xor
sub
or
dec
sbb
dec
sar
adc
inc
ret
sahf
pop
ins
cmp
jmp
arpl
sub
add
push
sub
and
daa
clc
sub
aaa
ja
cmove
xchg
mov
sbb
loopne
pop
mov
pusha
cmp
sub
std
sub
add
jne
sbb
xchg
jge
nop
cmp
rcr
les
sbb
and
aad
add
and
loope
les
(bad)
ss
or
imul
test
call
das
ss
or
mov
lea
cmp
pusha
push
and
sub
adc
pushf
(bad)
fld
adc
movs
jnp
push
jb
pop
sbb
dec
push
popa
test
mov
mov
mov
iret
dec
cwde
je
sbb
sub
jecxz
inc
das
add
shl
push
bound
jle
je
jg
dec
or
cmp
lock
mov
lahf
rcr
fiadd
gs
add
xchg
push
jge
inc
push
jne
int3
pop
cmps
mov
mov
pushf
int
enter
fadd
mov
sub
std
lea
stos
or
or
cmp
mov
fstp
fldenv
adc
dec
adc
adc
fisub
xchg
loop
sub
mov
repz
xor
dec
inc
adc
bound
jo
lds
xor
mov
(bad)
pop
imul
pop
push
sub
stc
clc
or
lods
fnsave
jmp
push
data16
mov
jbe
cwde
sbb
or
aam
sbb
jns
or
adc
jns
adc
fs
push
or
das
sbb
daa
iret
mov
xchg
(bad)
add
mov
les
push
xor
cld
ret
pop
push
xor
xchg
mov
test
add
xchg
dec
or
cs
bound
sub
xchg
adc
sbb
sbb
pop
scas
pop
push
push
ds
push
or
rcl
lahf
adc
lods
mov
inc
into
and
sar
imul
inc
jae
cmp
pusha
sub
inc
inc
jo
push
lds
inc
loopne
cmps
sub
or
scas
nop
data16
sbb
mov
fsubr
sbb
movs
das
aaa
and
inc
adc
imul
loope
jmp
pop
add
fwait
nop
dec
xchg
push
adc
push
test
pop
add
add
test
sbb
pop
lods
xchg
add
popa
or
and
and
and
add
lea
xchg
inc
outs
sub
gs
cmp
(bad)
stos
movs
mov
popa
adc
add
test
sub
pushf
push
or
jne
pop
add
les
inc
add
push
inc
xor
sbb
push
sub
or
push
cwde
push
shl
jmp
xor
sub
dec
test
add
mov
fwait
pusha
lock
add
lods
in
inc
ret
push
xor
aaa
test
add
ror
dec
or
and
xchg
add
dec
in
sub
sbb
nop
push
and
cmps
mov
mov
jne
cmp
mov
cmp
or
jb
fld
cmp
aaa
mov
mov
cmp
cld
imul
ror
pop
ror
xchg
shl
mov
js
pop
aas
mov
aaa
pop
hlt
adc
jecxz
loopne
ror
and
mov
and
adc
xor
xor
cmps
ss
test
fs
je
xor
test
jecxz
xchg
movs
xchg
mov
xor
adc
mov
repnz
jecxz
adc
mov
inc
mov
sub
mov
cmp
add
popf
in
add
mov
push
mov
jge
add
or
retf
sbb
call
pop
lock
lods
add
add
add
call
int
int3
lds
inc
js
arpl
cmps
sub
inc
in
stos
es
mov
adc
and
push
scas
mov
in
jae
jb
xor
or
and
xor
cmp
sbb
pop
rcr
sbb
aam
add
inc
aad
xchg
das
lahf
add
jecxz
mov
mov
add
sahf
add
or
jno
adc
les
outs
lock
adc
xor
xchg
icebp
popa
and
vrcpss
ins
or
xchg
pop
enter
dec
loopne
sahf
pop
loopne
mov
call
add
mov
or
cmp
in
and
test
cmp
nop
push
jne
dec
inc
add
std
or
xchg
and
sbb
add
prefetcht0
popa
sbb
aam
jmp
sbb
and
sub
mov
xlat
xchg
push
fs
inc
cmp
sub
test
aaa
and
dec
or
adc
xor
mov
inc
or
add
mov
outs
push
movs
sub
push
pop
leave
mov
lods
scas
mov
cwde
mov
and
lahf
mov
pop
pop
add
add
and
lock
ja
call
(bad)
imul
lds
aam
(bad)
inc
lock
mov
inc
(bad)
adc
call
cwde
pop
in
jno
cmps
test
add
add
inc
pop
xor
pop
test
jg
or
or
popa
retf
jne
movs
mov
pop
aam
fadd
stc
fcom
push
or
mov
in
xor
add
push
push
movs
loopne
fcom
pop
popa
pop
push
rol
pop
push
aas
test
add
jns
das
ins
imul
cmp
ret
sub
shr
add
push
js
cmc
in
push
push
jo
enter
add
sub
cmp
jg
or
push
jmp
icebp
mov
hlt
push
cmp
and
push
add
dec
mov
push
pop
push
es
(bad)
dec
and
add
mov
jge
mov
test
and
movs
pop
shr
pop
sbb
ds
sbb
push
mov
mov
add
inc
jmp
sub
es
add
shl
fmul
push
rcl
pmaxsw
add
ds
lock
mov
enter
jecxz
cmps
or
int3
pop
add
adc
ja
inc
mov
push
and
adc
enter
shl
mov
inc
mov
das
xchg
push
adc
jg
push
pop
add
mov
test
xor
mov
iret
(bad)
dec
xchg
pop
dec
shr
lock
pop
jg
loopne
mov
aas
pop
adc
adc
jge
adc
mov
movsx
dec
fdivr
add
lock
inc
add
shr
in
adc
rcl
call
test
xchg
add
cld
cwde
ret
inc
dec
rol
loope
and
mov
cmp
jae
push
jg
or
clc
cmp
push
dec
std
push
inc
sar
lea
xor
cwde
sbb
add
and
adc
cld
sbb
into
xchg
cmps
and
inc
ss
lock
add
mov
cmp
test
push
retf
test
inc
push
cmp
gs
int
dec
hlt
mov
dec
inc
stos
mov
mov
lods
pop
adc
repnz
sahf
or
aam
cmp
jo
(bad)
adc
test
cmp
add
out
das
jg
bound
scas
or
(bad)
pop
mov
ror
ss
lods
mov
(bad)
popa
loope
jl
cdq
test
mov
sub
jo
push
push
mov
cmp
dec
add
jb
mov
or
pusha
ret
rcl
mov
ins
mov
inc
add
loop
jl
jne
add
sub
sub
pop
dec
clc
mov
sahf
inc
ror
pop
nop
pusha
adc
add
pop
mov
sar
xchg
adc
(bad)
(bad)
sbb
je
cmp
xor
adc
inc
dec
cld
mov
sub
or
jge
mov
out
sub
lea
or
inc
(bad)
js
mov
in
mov
ja
push
xor
in
js
pusha
and
jns
mov
sbb
mov
fadd
nop
mov
cmp
jne
cs
mov
add
mov
in
add
dec
push
in
pop
rcr
add
sub
jne
or
add
jno
repz
repz
push
add
or
add
mov
sar
fiadd
jnp
leave
xchg
add
pusha
mov
add
add
adc
inc
push
or
dec
loopne
push
dec
adc
push
and
adc
rcpps
in
popa
cmps
push
push
(bad)
pop
push
ja
out
aaa
icebp
mov
adc
cmp
je
int3
push
cmps
pusha
sahf
es
mul
mov
(bad)
lock
sub
inc
mov
aas
ins
mov
repnz
dec
mov
add
jno
xor
call
mov
or
sbb
mov
jb
or
jbe
mov
ds
retf
add
cmp
les
int3
inc
add
movs
push
outs
add
ins
dec
sbb
push
xchg
jo
mov
push
inc
adc
mov
sbb
test
dec
ror
mov
adc
int3
adc
mov
xor
lahf
adc
sbb
dec
shl
pop
or
or
adc
inc
lods
shl
and
ss
mov
or
nop
xor
bound
mov
lea
in
lds
mov
inc
xor
or
aas
xor
and
xchg
fs
imul
(bad)
in
cmp
sbb
push
sub
adc
nop
out
and
dec
nop
cwde
jno
sub
xchg
mov
jecxz
push
mov
mov
cmp
mov
push
jae
pop
mov
ret
fdiv
pop
es
inc
cmp
inc
int
dec
cld
jge
sub
not
inc
and
or
cmc
ret
add
into
fistp
cmp
cmp
xor
not
mov
push
retf
loope
repnz
add
mov
xor
jmp
pop
cwde
sub
into
dec
cwde
daa
push
inc
xchg
push
adc
mov
sub
xor
mov
mov
test
mov
les
cmp
jne
push
xor
sbb
addr16
mov
mov
sbb
sbb
lea
add
xchg
loope
aam
ror
sub
cmp
xor
mov
sub
mov
and
cmp
ins
mov
outs
fisttp
mov
cwde
mov
push
es
sub
ss
or
std
ror
and
push
lea
pop
push
push
push
cwde
and
pop
cs
cmp
inc
dec
jo
mov
bound
dec
mov
sub
int3
js
cmc
data16
adc
jg
adc
and
adc
add
add
cmp
sub
dec
and
pop
or
dec
jmp
jns
dec
loopne
retf
add
mov
mov
outs
add
bound
dec
add
sbb
pop
adc
aam
add
pop
js
jg
or
or
mov
inc
or
or
dec
sbb
adc
sub
sub
xchg
(bad)
clc
mov
ins
mov
xchg
int3
outs
cli
inc
jle
mov
leave
mov
imul
and
aas
add
xor
xor
xor
cmc
mov
mov
fbld
add
xor
xor
lods
ror
call
sbb
cmps
imul
sub
pusha
sub
in
fsub
cmp
sti
add
hlt
mov
or
mov
nop
loopne
adc
cmp
lock
cmovno
add
dec
mov
out
adc
jmp
add
dec
dec
adc
fimul
fstp
rol
mov
jg
pop
sbb
sub
xchg
jmp
jnp
cdq
rol
pop
scas
pop
dec
loopne
int
or
add
nop
push
adc
add
mov
inc
push
es
aas
mov
daa
pop
sbb
lock
dec
jge
xchg
fimul
test
pop
sub
mov
jmp
sub
jb
sbb
jmp
(bad)
inc
jl
pop
push
call
jl
add
fdiv
pop
dec
jecxz
cmp
inc
pop
adc
sub
mov
mov
(bad)
jno
sub
jno
dec
stc
imul
adc
test
and
pop
ret
add
jnp
cmp
(bad)
mov
in
add
mov
xchg
and
jo
mov
test
ret
nop
jb
xor
aaa
dec
xlat
test
enter
mov
out
adc
push
pop
xor
push
mov
or
cli
add
fwait
or
(bad)
ret
pop
stc
pop
popf
sub
cwde
sti
mov
retf
pushf
cmp
loop
fcom
or
sub
stc
push
test
sahf
(bad)
mov
push
sti
sub
adc
mov
(bad)
aad
loope
xchg
dec
or
mov
mov
or
or
cmps
xchg
or
push
shr
push
jp
xchg
lods
aaa
call
stos
test
retf
add
in
les
je
pop
sbb
clc
(bad)
icebp
dec
sahf
cld
mov
(bad)
jmp
fdiv
repnz
dec
xor
pop
jmp
in
call
into
fsubr
je
mov
add
imul
lock
inc
stos
js
sub
or
mov
jmp
jo
push
repnz
ss
enter
js
ins
and
test
pop
or
fidivr
pop
pop
pop
dec
es
cmp
inc
mov
or
test
inc
fisttp
ss
inc
push
lea
jle
imul
(bad)
mov
mov
out
mov
adc
push
pop
mov
push
sbb
xchg
sbb
dec
ins
add
mov
mov
fmul
shr
in
sbb
xor
icebp
sub
mov
int
out
int3
inc
mov
mov
shl
dec
pop
push
adc
fimul
dec
push
arpl
shl
fild
sub
pushf
shl
jbe
xor
dec
jmp
(bad)
xor
mov
enter
sbb
jne
jb
push
mov
data16
ror
sbb
ret
or
inc
inc
movs
xor
xchg
ss
push
push
rcr
push
test
mov
retf
in
call
(bad)
cmp
and
dec
xor
xchg
dec
xor
inc
cmp
sub
and
push
pusha
dec
and
jo
ficomp
push
sbb
lock
push
adc
out
xor
inc
adc
and
lea
sahf
cs
xchg
pop
inc
fwait
popa
dec
aad
push
cli
inc
pop
and
pop
mov
mov
jge
test
(bad)
js
fisub
mov
jne
sub
js
and
dec
mov
out
imul
cmp
seto
pushf
stc
push
lock
loope
fild
add
fisttp
jne
jno
add
lods
inc
inc
or
jbe
jo
sub
push
push
inc
ret
js
add
push
into
stc
shr
sti
mov
loopne
sbb
lea
bound
sub
enter
aas
xchg
cmps
xor
cmp
push
sbb
or
xor
sub
inc
pop
dec
fadd
lock
sbb
push
out
and
pop
leave
leave
dec
push
fcom
sub
fcmovbe
push
and
daa
push
mov
and
daa
call
sbb
adc
add
and
push
or
push
nop
xchg
push
dec
sub
cmp
sub
out
sub
dec
mov
lock
or
dec
scas
cmp
nop
xchg
cmp
push
test
add
push
add
dec
pop
dec
xor
mov
adc
leave
and
sbb
sbb
and
dec
adc
xchg
jno
sub
ret
push
fisubr
ret
rol
dec
das
xor
xchg
xchg
mov
ret
into
leave
ins
xchg
sbb
imul
cdq
jecxz
mov
xor
es
or
test
aaa
push
cmp
dec
xor
cmp
xor
jecxz
inc
ret
imul
cmp
call
xchg
xchg
out
cmp
cmp
and
push
arpl
(bad)
aas
ja
push
mov
loopne
mov
lea
push
mov
mov
jb
cmp
in
rol
pop
sub
scas
lock
cwde
mov
imul
or
add
inc
jmp
sub
xor
das
push
shr
xchg
jne
jmp
mov
push
(bad)
and
add
inc
fcomp
sbb
jns
ins
cs
cmp
push
push
sbb
sbb
and
cmp
push
test
cmp
adc
push
leave
inc
lea
(bad)
jmp
jae
adc
jo
xchg
stos
les
lods
and
xor
inc
sbb
bound
dec
shl
ja
movs
aam
sbb
out
adc
xchg
push
and
test
cmp
or
mov
inc
iret
and
sub
test
push
sub
and
je
sub
fs
or
dec
push
fldcw
hlt
call
and
enter
call
xor
gs
xchg
fwait
loopne
cwde
loopne
inc
and
add
dec
pushf
mov
push
jmp
daa
cdq
movs
ja
mov
mov
jo
cli
xchg
sub
mov
sti
jno
nop
adc
inc
mov
mul
shr
sub
cli
mov
lods
vpunpckhwd
jg
add
mov
sub
dec
push
inc
push
pop
sti
sub
adc
aaa
or
ds
or
push
mov
pop
jle
push
mov
push
pushf
adc
push
sub
cmp
rcl
and
pop
add
cs
(bad)
xor
inc
add
sub
jae
cmps
je
cs
adc
pop
outs
pop
mov
imul
mov
push
pop
imul
or
nop
push
xchg
jmp
mov
inc
pop
ret
jb
sti
ins
je
loop
add
in
jo
cmp
ins
mov
or
and
sar
jmp
jmp
cmp
je
or
and
fadd
adc
inc
cmp
out
aas
xor
cmp
je
push
imul
arpl
push
mov
lea
inc
leave
mov
repz
aam
(bad)
in
add
xchg
mov
fsubr
js
js
sar
mov
and
cmp
xor
sub
(bad)
out
sbb
gs
jmp
in
fmul
mov
es
cmp
jl
sub
mov
add
ret
and
mov
dec
or
std
adc
shl
arpl
jo
leave
push
sbb
push
cmp
xor
sbb
es
push
je
mov
and
inc
push
mov
and
and
mov
into
ins
cmp
sub
xchg
sbb
pop
fist
inc
inc
mov
mov
psllw
shl
js
lea
cdq
inc
hlt
loope
(bad)
pop
add
ds
hlt
push
ret
cmp
add
sbb
pusha
mov
cli
dec
adc
pop
mov
push
or
mov
popa
in
retf
add
test
or
jae
sbb
bsr
lods
pop
mov
and
ror
ja
hlt
into
pop
push
ret
or
xor
push
ret
adc
or
cmp
push
push
lea
cmp
ja
daa
inc
ret
movs
pop
jne
ss
stc
jmp
pop
lea
xchg
xchg
or
aaa
sbb
push
push
add
js
adc
add
xchg
push
leave
cmp
sti
pop
sti
add
dec
sub
sti
ret
fwait
push
push
mov
dec
cwde
call
loope
pop
imul
add
xor
shl
xchg
mov
adc
jb
test
and
outs
cmp
or
rcl
mov
or
sub
mov
aaa
mov
es
or
jbe
ret
inc
leave
mov
js
(bad)
xor
clc
mov
push
ins
loop
push
in
or
adc
sahf
pop
adc
inc
pop
dec
cld
sbb
push
inc
cmp
or
out
fmul
sbb
jo
xor
mov
mov
leave
jne
mov
adc
jno
pop
adc
cmps
dec
cmp
sub
dec
loope
rcl
adc
mov
cmp
xchg
and
pushf
dec
cli
push
ja
cmp
loop
mov
pop
hlt
xchg
enter
sbb
mov
jbe
loopne
mov
test
cld
push
(bad)
or
mov
lock
ret
(bad)
push
in
xchg
add
sar
ret
push
bound
push
outs
pop
fadd
test
jmp
sbb
xor
push
cmp
add
enter
clc
pop
or
xchg
jo
cmp
(bad)
inc
xor
jne
cmp
mov
or
addr16
scas
mov
scas
into
pop
and
pop
idiv
(bad)
mov
les
and
push
mov
cmp
pop
or
add
pop
push
addr16
cmp
jno
dec
mov
cmp
mov
cmp
add
mov
shl
add
ss
jnp
inc
or
xor
push
adc
scas
and
imul
jg
sbb
mov
adc
pop
add
shl
dec
or
in
push
add
pop
fdivr
push
mov
movs
push
sub
fsin
push
into
fild
push
mov
or
xchg
ret
stos
clc
dec
push
dec
fild
dec
jg
jb
mov
mov
pop
cmp
jg
jl
loop
add
mov
imul
xchg
push
pop
sub
and
mov
sti
fadd
je
adc
sbb
sub
push
add
(bad)
stos
ret
sbb
dec
xor
aam
dec
or
clc
mov
movhps
mov
mov
adc
push
or
push
adc
cmp
(bad)
jl
rol
sbb
push
(bad)
mov
stos
mov
movs
mov
jnp
nop
sub
pop
or
adc
int3
shr
xor
int
leave
shl
dec
xor
inc
pushf
sub
dec
dec
mov
scas
or
aam
or
les
mov
push
adc
loop
adc
adc
or
pop
push
sub
adc
mov
mov
mov
or
add
int3
add
sbb
cld
aaa
add
push
mov
mov
sub
add
sbb
mov
jne
test
data16
add
sbb
cwde
push
inc
aam
add
(bad)
data16
call
scas
push
push
xchg
mov
push
enter
add
sbb
mov
sti
lods
mov
push
dec
add
adc
add
dec
sub
sub
xor
mov
outs
inc
and
dec
adc
mov
xor
jbe
cmc
xchg
inc
mov
xor
adc
dec
or
enter
xchg
push
scas
xlat
jns
out
adc
adc
or
retf
cmp
or
and
jno
cmp
inc
mov
dec
xor
inc
rol
inc
cmp
lea
pop
lods
in
and
sbb
mov
mov
dec
adc
jne
mov
mov
js
test
and
push
cmp
sbb
rcl
mov
mov
cmp
jl
movs
add
add
jae
loope
out
or
mov
xor
dec
and
jg
clc
lods
and
jb
dec
in
add
add
xchg
push
pop
push
push
jbe
lock
add
ja
or
jno
push
(bad)
cmps
add
jns
xor
ss
ins
jne
xor
mov
enter
lock
or
adc
add
cmp
jae
sbb
sub
mov
mov
cmp
cmp
pop
ror
push
inc
pop
push
dec
inc
push
leave
outs
das
sub
movsx
lock
pusha
leave
sbb
mov
pop
shr
adc
test
rol
mov
lea
ret
in
les
lea
and
div
cmc
cdq
push
push
rcl
inc
adc
fst
mov
jg
out
mov
add
dec
jne
sub
je
pusha
add
xchg
sbb
adc
lods
dec
loop
scas
dec
lock
gs
popa
jnp
movs
adc
cmp
jne
jbe
add
adc
in
in
jae
push
add
lock
ins
js
adc
inc
rcr
rol
cs
xor
repnz
es
mov
adc
cs
test
xor
enter
(bad)
pop
xchg
in
sub
sub
sub
je
push
dec
mov
xchg
jbe
dec
lea
mov
and
and
add
das
inc
pop
movq
pop
xor
adc
inc
ss
lds
push
hlt
fcomp
adc
pop
cld
mov
sub
pop
dec
test
add
adc
in
ror
jl
cmp
ret
push
sbb
arpl
clc
or
xlat
pusha
and
cdq
pop
mov
pop
lahf
ror
add
daa
or
dec
add
int
test
add
cmp
jae
xor
xchg
and
push
std
test
idiv
cmp
nop
pop
add
xor
mov
mov
sub
xchg
dec
add
retf
mov
mov
nop
shl
dec
mov
ins
mov
mov
lahf
div
pop
xor
sub
mov
xchg
jb
cmp
xor
hlt
dec
xchg
and
jae
push
inc
mov
add
test
sbb
shr
pop
adc
dec
mov
push
loope
sbb
sub
mov
call
retf
arpl
xor
adc
inc
aaa
outs
enter
inc
enter
rcr
lods
les
aam
int3
lods
enter
jmp
les
shr
sbb
cmp
jb
jmp
and
jle
or
repnz
cmp
jne
push
and
push
lock
rcr
mov
push
cmps
pop
test
imul
aam
push
xor
jne
sub
in
sbb
inc
push
stos
adc
jg
pop
jne
pop
bound
fwait
jb
test
add
xchg
cwde
ret
lahf
mov
mov
push
dec
push
inc
jne
xchg
adc
adc
cli
add
add
inc
jne
popf
popa
adc
mov
and
das
jl
(bad)
iret
cli
fsub
add
jns
les
in
pusha
xchg
xor
test
loope
pusha
inc
std
ss
cs
dec
imul
out
adc
mov
jmp
add
(bad)
adc
in
test
ss
sub
pop
mov
pop
dec
inc
pop
add
bound
xor
and
cmp
dec
mov
lods
jle
sbb
xor
je
push
je
out
push
mov
push
push
or
and
sub
sbb
pop
mov
pop
cmp
mov
adc
pop
in
xor
mov
pop
ins
mov
lock
or
imul
out
push
lods
mov
xor
shl
in
lods
je
fst
mov
pop
xchg
pusha
je
pop
and
ins
cmp
dec
inc
inc
sub
adc
enter
or
and
pop
sahf
cmp
inc
add
fdiv
pop
(bad)
jp
clc
aas
ret
cld
fadd
inc
add
jecxz
dec
jno
push
popa
mov
add
jl
imul
int
pop
adc
imul
mov
inc
mov
test
add
pop
mov
push
stos
mov
mov
adc
test
sub
add
data16
or
ret
mov
pop
or
sbb
sub
cmp
ja
mov
xor
push
in
jg
fidiv
stos
sbb
retf
iret
jae
push
push
aad
cs
jmp
sub
sub
mov
jmp
ss
inc
or
rol
pop
in
pushf
sti
cmp
dec
shr
sbb
movsx
push
data16
cmp
add
movs
mov
adc
lahf
or
test
add
mov
icebp
shl
sub
dec
dec
mov
cmp
jae
movs
cmp
dec
pusha
cmp
push
fdivp
cli
call
mov
add
push
or
loopne
add
add
nop
xchg
push
mov
test
data16
inc
jmp
cmp
push
xor
mov
test
aas
and
inc
pop
add
inc
mov
jne
stos
push
sbb
cmp
inc
mov
push
xchg
scas
enter
push
inc
or
int
mov
mov
pop
jb
or
clc
clc
test
pop
push
je
shl
xchg
icebp
adc
sar
test
mov
mov
add
push
shr
and
sbb
shl
xor
xor
mov
push
and
sbb
dec
xchg
push
sub
sub
mov
add
push
dec
push
retf
iret
ret
jg
xor
in
dec
jo
mov
int
or
jo
cld
push
adc
cmps
imul
adc
mov
mov
sbb
adc
xor
ja
inc
pop
and
lea
lea
adc
add
mov
jp
push
pop
dec
dec
mov
ins
(bad)
cmp
lahf
test
and
test
punpckhdq
cmp
jecxz
mov
sub
dec
mov
dec
adc
(bad)
shl
mov
adc
ins
sar
mov
call
adc
inc
add
xor
jmp
dec
mov
mov
fisub
and
jns
dec
add
pop
sti
cmp
and
xor
jmp
and
sti
fild
stos
pusha
rol
add
mov
ret
mov
ret
scas
mov
dec
cmps
dec
push
push
xor
ror
hlt
inc
sub
sub
xor
cmps
ret
add
mov
movs
mov
and
pop
and
dec
dec
cmp
jne
mov
inc
mov
cmp
push
pop
stos
test
mov
mov
sub
mov
mov
ins
ret
imul
cmp
pop
bound
mov
js
add
pop
sbb
jo
rcl
mov
ret
adc
in
clc
xlat
and
push
mov
jbe
rol
cmp
fadd
pop
pop
add
sbb
loopne
jmp
test
mov
ins
pop
shl
das
sar
js
adc
inc
dec
adc
enter
nop
add
pop
fisub
shl
push
pop
sbb
lahf
(bad)
jmp
mov
push
push
jne
lock
retf
mov
mov
neg
iret
sub
aas
dec
or
aaa
sbb
sti
inc
adc
mov
mov
xor
dec
push
enter
mov
dec
ret
pushf
mov
movs
pop
cmps
test
fimul
adc
dec
int3
mul
lahf
mov
or
pop
rcr
outs
or
pop
mov
inc
cmp
scas
cmp
je
xor
adc
xor
mov
xchg
add
(bad)
cmp
xor
jno
test
test
push
(bad)
cmp
inc
and
pop
hlt
stos
cs
pop
shr
mov
xor
pop
pop
dec
add
cmp
xor
xchg
jl
fistp
mov
or
sets
pop
or
add
mov
shl
loope
in
jg
daa
mov
mov
out
retf
shr
shr
cmp
jbe
fbld
dec
inc
cmp
xor
cmp
aam
jbe
jbe
sbb
ror
(bad)
jbe
inc
sub
sbb
sbb
aad
cmc
jmp
pop
push
icebp
imul
call
pop
outs
jg
mov
pop
or
sbb
add
sahf
inc
or
mov
popa
inc
xor
jmp
adc
pop
cmp
leave
push
push
sbb
gs
movs
daa
add
pop
rol
adc
neg
ror
cmps
dec
(bad)
sti
into
fisub
adc
jmp
cwde
xor
pop
add
push
ss
or
add
lahf
inc
enter
xchg
adc
dec
fdivr
push
push
mov
add
in
mov
dec
or
or
je
inc
retf
pop
retf
pop
fistp
and
xchg
or
stc
inc
mov
hlt
push
jle
inc
and
fild
sbb
inc
cwde
mov
push
scas
call
dec
push
jl
stos
and
dec
mov
inc
in
aaa
xchg
jne
div
mov
or
test
lahf
sub
push
xor
and
mov
lods
sbb
js
add
push
sbb
adc
stos
arpl
icebp
xchg
gs
dec
ret
or
test
ret
jl
push
movs
jbe
sbb
inc
mov
cmp
jnp
sbb
jne
aaa
mov
push
jg
push
icebp
jne
add
rcr
icebp
(bad)
leave
enter
mov
pop
mov
and
xchg
test
add
test
bound
or
js
cmp
js
jmp
pop
jp
mov
cmp
retf
dec
cmps
push
aaa
push
int3
push
xchg
mov
stos
rcr
sub
and
sbb
add
push
jo
mov
int
mov
fild
sbb
xor
add
sbb
sbb
ins
ret
jmp
mov
sub
test
mov
mov
jg
test
mov
enter
or
popa
out
jb
aam
jg
adc
or
lods
or
mov
test
mov
scas
aas
jecxz
pop
outs
lea
aas
sbb
cdq
retf
aad
push
iret
sub
popf
add
adc
test
clc
pop
ins
mov
jae
add
leave
inc
mov
push
sub
ss
enter
push
test
ret
mov
sub
xchg
adc
push
in
or
je
mov
cli
pop
clc
sub
sub
and
cmp
adc
rcr
clc
sar
out
or
sbb
inc
in
ficom
cs
cmp
inc
adc
push
jl
das
adc
add
mov
(bad)
xchg
es
pop
xchg
pop
pop
clc
jge
add
data16
ffree
push
inc
cmc
mov
fdiv
inc
and
mov
add
push
or
sub
xchg
out
xor
pop
mov
inc
repnz
sbb
or
test
xor
cmp
test
inc
(bad)
pop
mov
mov
mov
test
(bad)
data16
fcom
sbb
js
push
sbb
dec
xor
and
sbb
sti
fld
lea
xor
jae
push
push
or
inc
mov
pop
mov
sub
push
adc
mov
retf
pop
and
dec
sub
lods
ret
dec
inc
push
fsub
lds
icebp
xchg
(bad)
adc
adc
push
inc
or
inc
(bad)
and
push
je
lahf
fwait
sbb
lea
sub
xor
jmp
(bad)
and
sbb
imul
mov
adc
inc
pop
sti
or
shr
into
gs
rcr
and
cmp
add
add
pop
mov
and
add
adc
nop
out
xor
add
mov
(bad)
mov
test
mov
sub
movs
fwait
sbb
push
ss
(bad)
cmp
stc
pop
std
add
ret
test
(bad)
fadd
mov
dec
dec
ss
sbb
xchg
lahf
out
sub
lea
(bad)
movs
or
jmp
dec
mov
add
int
test
pop
push
sbb
ss
push
mov
or
sbb
dec
scas
xor
pop
and
rol
pop
pop
push
or
jns
push
cmc
push
mov
add
and
in
jb
dec
sbb
sub
cwde
mov
pop
sub
pop
stos
out
test
fisttp
ret
or
push
push
pop
sbb
es
fsub
fiadd
or
or
imul
test
pop
and
inc
push
inc
in
les
and
in
in
push
mov
adc
in
in
leave
test
fcom
iret
and
call
and
call
call
pop
xor
aam
and
jb
or
xchg
sbb
in
or
test
or
cwde
in
stos
arpl
stos
mov
xor
or
pop
pop
ja
cmp
(bad)
fnstcw
int3
out
je
add
js
xchg
and
inc
push
pop
or
xor
ror
jmp
mov
xor
cmp
jo
int
or
cmp
aas
sbb
xor
mov
push
inc
mov
cmps
adc
cdq
pop
jnp
popa
and
sub
add
and
cmp
mov
sbb
retf
jp
in
inc
mov
mov
push
fdivrp
nop
(bad)
xchg
cmps
test
or
mov
jle
movs
mov
movs
test
xor
xchg
lods
mov
inc
add
mov
or
(bad)
in
add
scas
add
jecxz
cli
jns
pushf
mov
shr
in
lds
imul
cmp
scas
inc
push
les
mov
sbb
je
and
test
movs
test
mov
int3
shl
in
and
dec
hlt
clc
sbb
or
xchg
retf
and
xor
inc
dec
pop
cs
jo
dec
sub
xchg
retf
test
mov
in
aam
call
clc
cld
sbb
adc
push
cs
cmp
dec
pop
pusha
in
retf
je
mov
cwde
pushf
lods
cs
(bad)
aam
sub
dec
in
lahf
cld
sbb
sbb
adc
mov
cmp
cs
fs
dec
sub
in
retf
mov
dec
mov
enter
pop
push
fsubr
lock
jne
add
adc
sub
cmp
dec
in
retf
fs
js
mov
mov
dec
sub
ja
retf
hlt
push
add
jb
in
or
sbb
pop
push
mov
push
xchg
push
cs
icebp
or
cmp
sbb
mov
push
sar
aam
adc
add
sub
test
xor
loope
aam
mov
inc
cmps
push
add
retf
mov
ret
add
xchg
pusha
add
data16
add
and
xchg
mov
dec
es
push
gs
jg
adc
cmp
shl
mov
pop
add
movs
ret
test
dec
push
mov
cmp
jae
mov
mov
stc
pop
je
or
lock
mov
sub
aas
adc
(bad)
in
ins
mov
pop
(bad)
mov
cmp
xchg
pop
mov
add
pusha
jmp
push
push
adc
repnz
(bad)
mov
out
pop
cmp
(bad)
jmp
push
nop
add
ja
mov
mov
sub
push
test
add
shl
xor
in
add
lea
ja
inc
fs
sbb
pop
and
nop
hlt
neg
out
neg
sbb
and
rol
adc
or
sub
bound
push
std
jmp
inc
push
cmp
les
or
push
sbb
xchg
mov
or
add
jg
fadd
icebp
leave
adc
sbb
add
dec
dec
std
pop
sub
mov
leave
aad
mov
into
inc
push
inc
leave
push
mov
add
ret
or
add
or
movs
add
and
loopne
jae
leave
dec
mov
mov
jo
lds
adc
push
mov
or
jns
pushf
dec
push
or
mov
mov
pop
xchg
pop
add
jb
pop
pop
cmp
pop
add
mov
test
push
mov
push
adc
xor
cmps
ss
sub
push
jle
pop
mov
and
or
mov
scas
add
adc
inc
add
cmp
push
xchg
add
sar
jb
enter
stc
(bad)
in
mov
mov
icebp
inc
mov
je
mov
cmp
jl
fsubr
or
add
test
cld
leave
add
and
pop
push
fdivr
psubusw
shl
out
and
adc
clc
inc
mov
jne
xor
pop
xor
pop
(bad)
xchg
xor
xor
ins
xchg
mov
dec
call
pop
mov
test
or
int
lods
dec
pop
pop
(bad)
jge
or
jle
pop
inc
cmp
mov
inc
mov
mov
adc
sub
pop
pop
ja
movs
nop
inc
nop
dec
loope
and
mov
aas
mov
or
xchg
adc
test
sahf
mov
call
int3
movs
mov
rol
mov
nop
adc
mov
leave
rol
and
push
sbb
std
ror
jnp
push
add
and
mov
imul
jne
push
imul
push
fwait
jle
rol
jmp
add
push
imul
add
shr
dec
cmps
jnp
add
mov
mov
jecxz
xchg
add
and
mov
xchg
push
xchg
pop
es
cwde
std
mov
std
cwde
std
add
dec
std
cdq
outs
ins
popa
add
adc
dec
mov
jns
mov
inc
mov
cwde
adc
in
or
sbb
test
dec
pop
and
push
add
scas
jae
xchg
cmp
and
clc
adc
inc
fwait
popa
clc
inc
push
mov
repz
scas
mov
push
xchg
or
nop
nop
inc
or
push
lds
lods
sbb
sub
sbb
sbb
loopne
mov
call
test
jo
nop
std
inc
push
cmp
lahf
pop
test
jae
mov
sar
arpl
fild
mov
add
fdivr
push
pop
outs
repnz
movs
sub
inc
sbb
jb
inc
add
loopne
dec
inc
nop
jg
and
push
loopne
inc
add
push
icebp
enter
retf
enter
int3
sti
add
sbb
push
cmp
jo
lea
sub
dec
inc
int3
dec
pop
mov
and
mov
mov
addr16
je
sub
sub
cmp
ja
dec
iretw
dec
(bad)
pop
or
mov
mov
jle
cmp
xor
pop
enter
mov
xor
les
je
adc
push
adc
pop
test
aam
daa
add
add
add
push
inc
inc
xchg
pop
or
or
enter
mov
inc
sbb
jbe
and
mov
in
lock
call
xor
outs
je
xor
inc
and
jmp
mov
mov
fidiv
adc
push
push
outs
test
mov
mov
ins
xchg
sbb
mov
sbb
push
mov
mov
dec
rol
add
ret
dec
rcl
push
or
add
push
lds
test
cmp
test
sub
or
mov
mov
cmp
or
lods
pop
sbb
mov
daa
mov
inc
jo
in
pop
imul
dec
cwde
or
fadd
add
xchg
lea
dec
sub
or
mov
shl
fwait
mov
jne
mov
inc
cld
push
and
add
or
loope
dec
add
xchg
fistp
faddp
mov
mov
mov
push
cmp
add
int
dec
push
push
add
in
movs
cmps
adc
mov
scas
add
and
sbb
fiadd
ins
jmp
cmp
mov
add
and
or
push
retf
retf
push
adc
leave
adc
adc
and
repnz
stos
mov
adc
call
sbb
mov
mov
ins
mov
aas
fisttp
ret
cmp
dec
xlat
or
je
lods
shr
add
cmps
push
push
lods
xor
adc
popa
add
mov
push
dec
adc
lahf
push
xlat
adc
imul
popa
popf
daa
jmp
cmp
xor
js
dec
push
cli
mov
mov
cld
add
ret
je
jae
jmp
(bad)
hlt
add
xchg
test
dec
pop
xchg
sbb
sbb
dec
push
inc
pop
adc
jl
int
cwde
mov
ins
xor
and
mov
dec
jb
loopne
movs
add
xchg
cmp
pushf
add
dec
rcl
add
movs
or
xor
add
jg
test
enter
pop
sbb
movs
mov
pop
push
mov
mov
or
sbb
or
push
and
adc
sub
sub
in
xor
push
mov
dec
or
mov
jl
call
inc
jo
test
sbb
jge
sub
add
loope
lock
fdivr
inc
es
push
fcom
daa
sbb
cmp
(bad)
fisub
add
fs
mov
mov
xor
mov
and
or
je
arpl
mov
push
push
not
in
cwde
call
mov
xchg
lea
xchg
jne
jmp
mov
add
or
cmp
sbb
das
gs
push
mov
cmp
adc
add
dec
gs
pop
addr16
mov
sub
xchg
fld
pop
inc
test
inc
sbb
add
mov
daa
ror
push
inc
add
xor
out
popa
pop
call
mov
shr
mov
pop
sbb
add
movs
or
or
cwde
push
mov
mov
jmp
loope
inc
mov
jb
or
add
movs
push
je
iret
jo
cmp
mov
jo
push
test
or
xchg
or
sbb
pop
sbb
and
jle
cmp
retf
not
cmc
sbb
test
sbb
dec
or
arpl
aaa
adc
jmp
and
xor
dec
fcomp
jg
cld
dec
mov
test
jb
lea
clc
sbb
push
mov
stos
(bad)
enter
sub
rol
and
add
daa
inc
xchg
xchg
push
or
es
popf
rol
adc
outs
arpl
and
(bad)
retf
pop
rcr
mul
in
leave
add
or
sbb
add
add
and
ret
jae
repnz
add
test
mov
add
out
shr
xchg
rol
jns
sub
test
push
inc
xchg
add
fsubr
adc
add
hlt
cmp
retf
mov
ins
pusha
(bad)
add
push
adc
sub
fdivrp
inc
mov
cld
add
cmp
cmc
sbb
inc
inc
imul
neg
icebp
jbe
mov
test
shl
enter
cld
mov
sub
in
dec
and
fs
lahf
push
xchg
stos
inc
leave
adc
call
lock
mov
frstor
mov
sub
loopne
mov
xor
inc
sub
loopne
mov
ret
repz
push
stos
add
sbb
mov
and
pop
xchg
dec
aas
pop
xor
iret
pop
add
mov
jb
lea
daa
jmp
add
hlt
ds
rol
add
enter
aas
pop
test
add
or
repnz
push
or
hlt
in
sub
lock
dec
mov
loop
ret
adc
mov
cmp
pop
xchg
retf
pop
push
mov
add
stos
cmp
xchg
ret
mov
and
lahf
mov
(bad)
cmp
or
add
sbb
add
repz
inc
xchg
xor
cmp
and
sbb
leave
imul
and
lahf
ret
daa
jl
push
rcl
loop
std
pop
ud0
jo
jo
(bad)
push
jle
and
jno
outs
ret
xchg
xchg
mov
and
outs
push
mov
jb
gs
and
sub
inc
jp
ja
sub
sar
cmp
mov
jne
mov
mov
and
nop
aad
in
jecxz
adc
les
popf
push
jmp
sbb
les
inc
dec
xchg
push
push
add
xchg
or
add
sbb
rol
mov
sub
sar
cmp
cmp
and
or
(bad)
inc
sar
ret
push
mov
shr
xchg
icebp
add
(bad)
cmp
pop
jae
add
lahf
sub
add
cmp
nop
shr
mov
pop
ret
pop
cmp
test
test
or
cs
or
inc
push
add
xor
lods
inc
lds
sbb
lods
ss
clc
je
jmp
sub
mov
and
mov
sub
inc
sar
not
xor
sub
and
fstp
dec
adc
icebp
pop
aam
(bad)
lahf
mov
mov
sub
push
loopne
adc
leave
jg
adc
adc
(bad)
sub
sbb
ret
push
jae
push
int
lock
sub
dec
mov
jle
or
mov
lea
ret
and
shr
test
and
pop
jmp
mov
cmp
call
xor
test
and
fwait
pop
jo
in
adc
xor
inc
repnz
iret
sub
dec
cmp
pop
iret
mov
push
dec
aas
sub
or
scas
xchg
dec
mov
inc
sahf
shl
push
sbb
(bad)
or
cs
mov
sar
cmps
xchg
xor
add
add
xor
add
fsubp
and
add
add
or
stos
push
inc
lods
push
mov
mov
xlat
fld
push
mov
jge
pushf
or
xchg
or
adc
popa
or
movs
pop
pop
inc
push
adc
add
fsub
xlat
test
xlat
movs
cmp
sbb
or
in
add
cs
sahf
mov
rcl
leave
popa
ins
mov
sbb
fisubr
jp
cs
mov
packsswb
jo
sbb
xor
sub
mov
div
sbb
or
adc
add
add
adc
arpl
add
adc
ja
mov
pushf
inc
mov
jne
sbb
sbb
and
mov
sub
cmp
inc
add
jno
push
mov
push
cmp
add
sub
stos
or
jne
cwde
adc
in
mov
inc
retf
inc
mov
push
int
fdiv
in
push
fidivr
cli
sbb
dec
(bad)
cmp
mov
rcr
ins
aaa
repnz
imul
adc
adc
or
ins
and
mov
in
mov
loopne
xchg
or
pop
in
xor
mov
add
add
xchg
aaa
dec
inc
or
pop
mov
add
sub
add
test
pop
mov
cdq
mov
mov
add
inc
es
aas
rcl
push
or
lea
add
add
mov
retf
addr16
fimul
sbb
or
cmp
jns
push
movs
mov
dec
test
xchg
lods
pop
mov
sbb
push
jg
rcl
outs
mov
mov
mov
pushf
push
fwait
fs
dec
inc
cwde
mov
mov
mov
jo
mov
shr
xchg
and
add
jg
push
lea
push
mov
popa
call
ins
mov
ins
pop
(bad)
cmp
mov
xchg
pop
mov
or
outs
hlt
out
les
mov
or
lahf
xchg
adc
pushf
test
add
retf
inc
test
int
or
neg
xchg
mov
or
or
lods
push
inc
push
or
shl
mov
and
and
cmp
sub
xchg
lods
xchg
cmp
push
(bad)
shr
mov
rdtsc
(bad)
ins
loope
ds
pop
mov
cmp
sbb
lods
mov
(bad)
jb
jb
xor
dec
jae
je
ja
enter
jbe
mov
sub
in
test
dec
lods
mov
leave
push
ret
xor
dec
push
sbb
cmp
hlt
push
push
mov
mov
sti
cmp
mov
xchg
pop
cwde
repz
mov
adc
add
mov
test
test
adc
popa
fisttp
stc
add
xor
sbb
or
and
pusha
or
ret
pop
sbb
je
out
adc
and
shr
loopne
dec
scas
cwde
movs
out
jecxz
inc
sub
pop
and
pop
fwait
inc
inc
int3
std
in
xor
movs
mov
inc
int3
ret
loopne
sbb
inc
test
or
or
jecxz
(bad)
xor
test
movs
xor
push
loop
aam
jmp
jb
xor
or
and
out
lods
push
mov
mov
sbb
neg
pop
std
lahf
adc
dec
pushf
shl
movs
test
push
sub
sbb
cmp
xchg
mov
adc
push
ror
mov
and
int
rcr
inc
mov
test
ret
pandn
or
push
fdivr
sub
push
test
push
and
pop
and
add
mov
fs
inc
daa
mov
jl
add
shl
ds
xor
shl
rcr
and
push
pop
push
je
sub
cwde
(bad)
mov
test
sar
or
enter
and
add
cld
rcl
cmp
mov
loopne
dec
ret
push
movs
push
pop
jecxz
xchg
adc
(bad)
sti
push
(bad)
mov
rol
cli
add
retf
scas
mov
add
push
jnp
ins
std
(bad)
xchg
sub
ret
clc
add
or
clc
sar
iret
ja
mov
cmp
call
push
movs
aaa
ret
imul
jbe
jbe
in
jnp
pop
shl
and
or
mov
les
cmp
fmul
mov
out
mov
aam
sbb
sub
mov
jne
xor
ret
cmp
add
mov
lods
lods
add
dec
lea
push
leave
gs
add
ffreep
sar
sbb
movs
ficom
xor
mov
cmp
jne
xchg
and
test
lods
push
aam
cdq
enter
xchg
mov
cmp
sub
or
dec
add
test
lahf
push
aam
adc
inc
push
or
add
xchg
sub
pop
repz
push
adc
add
xor
dec
pop
xor
mov
add
pusha
xchg
pop
pop
test
and
sbb
xor
pusha
cwde
mov
(bad)
fstp
add
push
cs
ror
retf
pop
xor
jp
inc
hlt
inc
lock
dec
mov
sbb
push
aad
add
sub
pop
call
and
add
pop
pusha
(bad)
hlt
add
cli
cmp
movs
inc
dec
pusha
inc
or
test
inc
inc
jo
xor
or
test
fisub
adc
or
movs
ins
pop
sub
push
push
push
shl
mov
cs
(bad)
out
sub
retf
sbb
repnz
mov
pop
or
add
add
out
inc
mov
sbb
sbb
outs
jmp
mov
sub
xchg
repnz
xor
mov
sub
cmp
pop
clc
outs
jmp
cmp
pop
ins
jge
enter
add
cmp
xor
and
add
sbb
dec
inc
pop
int
test
or
add
or
jmp
ins
adc
add
sub
push
jo
mov
dec
mov
cmp
and
shl
cmp
add
out
je
jo
mul
pop
xchg
mov
pop
add
mov
ins
add
pop
sub
push
xchg
pop
mov
fucom
retf
les
(bad)
mov
or
add
pop
pushf
jb
shr
in
jl
and
inc
dec
dec
dec
add
add
or
nop
sub
inc
inc
loope
dec
or
pop
sbb
stos
or
leave
jp
push
or
fcomp
imul
sar
add
sbb
push
jmp
lds
cwde
inc
and
mov
push
or
cdq
mov
ja
test
inc
movs
mov
shr
pop
int
in
push
es
and
mov
jb
sub
(bad)
or
out
xchg
setg
mov
repnz
sbb
xor
clc
mov
sub
or
mov
mov
pusha
jecxz
mov
add
sub
push
pop
or
add
mov
test
and
test
test
mov
add
test
cld
adc
or
and
xchg
jg
je
and
pop
aaa
repz
inc
mov
push
mov
lods
retf
mov
imul
ins
cmps
or
mov
sbb
add
mov
push
pop
shl
inc
push
cmp
jb
sub
out
add
out
mov
loopne
fld
test
add
sar
push
fist
push
push
cmp
pop
jg
ins
int
jmp
pop
pop
dec
daa
pop
adc
push
inc
push
push
icebp
xchg
adc
xor
push
(bad)
adc
bound
popa
mov
xor
mov
inc
rcr
ret
ins
xor
mov
and
inc
and
or
leave
pop
push
xchg
sbb
test
and
dec
mov
add
push
and
push
mov
pop
fisttp
adc
or
pop
add
ret
or
stos
inc
or
movs
dec
lods
hlt
movs
test
pop
in
mov
jg
or
gs
or
and
arpl
add
cmps
popa
enter
sub
cmp
xlat
xor
or
bound
add
pop
in
or
mov
js
imul
mov
or
(bad)
in
es
lds
sbb
ret
or
adc
or
cwde
shl
enter
popf
cmc
xchg
xor
push
call
outs
outs
mov
mov
push
sahf
xlat
inc
or
test
(bad)
enter
xor
sahf
popa
shl
popf
test
mov
adc
dec
sbb
pop
push
mov
push
sbb
rcl
jae
pop
dec
and
mov
ret
clc
push
pop
adc
pop
add
int3
add
sahf
add
or
in
jb
mov
aam
add
(bad)
shr
les
aad
rol
or
test
push
sub
xchg
jo
pusha
mov
cmp
mov
xchg
push
rcl
shl
ror
mov
pop
fbstp
xor
aam
jne
push
repz
push
and
jecxz
popf
jo
jmp
loope
add
mov
push
sbb
test
pop
aas
loopne
mov
inc
cmps
std
xchg
mov
xlat
mov
or
int
lods
mov
mov
dec
call
lea
ror
jg
xchg
out
lods
test
lock
or
inc
or
pop
pop
add
pusha
dec
call
pusha
out
jp
gs
xor
scas
call
test
lea
neg
xor
es
leave
mov
inc
mov
hlt
test
stos
mov
adc
mov
pop
and
sub
sbb
inc
push
test
mov
sahf
pop
test
and
add
test
mul
jge
cli
in
and
sbb
out
pushf
rol
mov
fsub
je
loopne
sub
inc
or
(bad)
je
or
repnz
pop
lock
and
xor
lock
mov
pop
add
dec
or
inc
sub
xchg
adc
aas
in
pop
or
inc
cs
or
adc
and
inc
or
and
inc
mov
scas
cmp
inc
add
xor
dec
ror
adc
inc
rcl
or
jnp
dec
pop
stos
sbb
sbb
enter
pop
mov
pop
push
add
adc
jl
je
dec
test
push
push
les
sbb
fidivr
mov
push
adc
add
adc
call
mov
or
data16
ins
cwde
push
xchg
out
in
mov
loope
sub
add
test
cmp
inc
std
and
outs
dec
pop
push
jle
movs
fistp
adc
xchg
add
adc
sub
sbb
mov
icebp
push
mov
cmp
and
test
pusha
lock
xor
cmp
jne
ret
push
dec
daa
call
adc
lock
sbb
enter
mov
gs
sub
add
(bad)
jbe
imul
push
jg
out
inc
inc
inc
aaa
mov
imul
inc
xchg
sub
add
rol
inc
cdq
clc
pop
sbb
movs
jns
test
adc
push
sar
xor
push
or
add
out
or
xchg
pop
pop
mov
jp
push
jmp
in
jno
dec
jb
or
pop
mov
xor
je
int3
push
sbb
xor
mov
leave
push
push
or
push
cmps
add
cwde
mov
mov
adc
xchg
or
push
lock
dec
mov
sbb
push
pop
mov
lock
bound
sbb
fs
lea
mov
aaa
retf
push
test
lds
ja
sub
push
and
sbb
inc
fidiv
pop
sub
pop
pop
xchg
or
nop
fadd
jns
add
dec
sbb
test
push
inc
sahf
pop
mov
loopne
xor
mov
push
aaa
xchg
mov
and
mov
cmp
dec
pusha
pop
inc
add
or
cmp
retf
adc
ror
je
dec
leave
add
das
inc
lahf
add
mov
nop
and
out
add
and
or
pusha
cmp
cmp
in
test
add
mov
das
nop
sub
dec
imul
cs
xor
gs
dec
nop
cmp
xchg
or
and
pop
add
add
dec
movs
lock
push
clc
inc
out
(bad)
xchg
and
jo
push
rcr
test
fidiv
dec
jns
lea
leave
dec
mov
mov
mov
js
cmp
and
pop
shr
outs
cmp
add
cwde
ret
mov
pop
fbstp
adc
pop
jl
jb
add
adc
pusha
cmc
jne
mov
xchg
stos
ja
xor
push
repnz
mov
xchg
outs
pop
mov
test
mov
popf
dec
push
sub
mov
inc
sub
out
call
mov
xchg
xchg
xchg
cmps
add
or
cwde
sbb
in
(bad)
inc
inc
sub
popf
or
inc
cmps
fwait
imul
push
enter
sub
adc
add
loope
push
inc
pushf
sub
(bad)
in
add
pushf
std
pushf
std
nop
sbb
and
movs
add
popa
adc
xchg
cwde
cwde
push
pusha
jl
add
mov
je
popf
je
sub
cmp
int3
icebp
ror
lock
sbb
jmp
pop
push
dec
imul
(bad)
mov
les
ja
mov
push
pop
dec
cmp
cmp
mov
rcr
dec
sbb
(bad)
movs
sub
adc
sbb
pop
cmp
fwait
jmp
lock
push
sti
movs
movs
scas
inc
jl
sbb
xchg
inc
push
movs
cwde
dec
xor
add
inc
jne
js
push
inc
test
pop
sub
repz
and
inc
movs
int
adc
xor
sbb
cwde
push
stos
in
inc
ret
jo
imul
add
dec
xchg
jbe
loopne
mov
out
mov
popf
sbb
arpl
add
jbe
mov
xchg
ins
or
inc
dec
daa
inc
pop
mov
ror
(bad)
(bad)
daa
cmp
jg
inc
or
sbb
adc
or
mov
lock
mov
sbb
fld
push
adc
and
inc
leave
push
adc
es
imul
stos
or
dec
push
or
xchg
xor
xchg
inc
repnz
rcl
push
js
cs
sbb
pop
or
or
fs
or
loope
and
jbe
push
cs
mov
fs
mov
push
call
pop
or
in
add
mov
push
arpl
xor
sbb
aas
adc
xor
ret
dec
add
jne
loope
(bad)
fadd
push
ins
lea
adc
popf
mov
mov
aam
mov
mov
push
mov
pop
mov
inc
pop
lock
cmps
xor
cli
add
pop
sbb
and
jns
mov
sub
mov
inc
pop
dec
push
imul
adc
mov
cmps
fcomp
std
lahf
ud0
and
fs
mov
add
in
ret
es
test
aas
cwde
sub
scas
nop
arpl
mov
add
jl
xlat
xor
mov
add
gs
(bad)
nop
jo
test
jo
int3
aad
and
fs
pop
xor
cwde
cwde
movs
xchg
dec
xchg
iret
cwde
ret
cmp
sbb
leave
jmp
cmp
pop
and
jo
xchg
dec
add
pushf
dec
xchg
push
cs
je
or
jle
test
inc
push
inc
outs
sub
mov
iret
ror
mov
inc
xor
pop
sahf
xchg
out
push
test
push
jb
cdq
sbb
test
inc
and
add
ret
add
adc
inc
test
pop
add
xchg
sub
push
xor
push
stos
and
cmp
add
push
imul
xchg
test
repnz
add
jbe
movs
and
dec
add
xor
dec
movs
xchg
dec
push
in
je
nop
sub
cmp
cmp
sub
xchg
push
or
cmc
adc
push
jo
xor
xor
jl
dec
inc
xlat
cmp
pop
(bad)
shl
ficomp
xor
push
aaa
lock
jbe
add
add
xchg
mov
aas
pop
scas
adc
xchg
fstp
lahf
add
adc
mov
mov
sub
jmp
imul
pop
fs
push
add
mov
add
adc
and
pop
popf
sbb
cmp
stc
pop
and
adc
nop
pusha
imul
or
mov
jo
ret
movs
(bad)
cld
jno
sar
push
cmps
icebp
movs
xchg
jmp
pop
or
scas
test
add
xor
push
push
test
sub
test
push
sbb
adc
adc
in
pop
add
adc
pop
rol
call
popf
mov
push
xchg
pushf
push
out
add
and
cmps
je
jae
test
xor
pop
(bad)
adc
sbb
sbb
nop
scas
int
mov
pop
or
pop
(bad)
retf
pop
xor
adc
mov
add
pop
jmp
jecxz
iret
call
adc
call
adc
test
mov
add
rol
fdiv
push
movs
mov
(bad)
adc
and
cdq
loope
dec
movs
popf
popf
nop
js
test
dec
sub
sub
jo
test
sbb
and
jo
je
mov
sub
test
lahf
push
mov
sbb
cmc
pop
jmp
hlt
jne
xor
test
add
add
lahf
or
xor
add
mov
dec
and
jnp
pop
add
dec
sub
and
lea
repnz
(bad)
dec
inc
push
cmp
add
dec
push
loopne
cmps
inc
es
add
or
jns
int3
sub
retf
push
test
jp
shl
and
adc
movs
push
pop
vsqrtps
jg
stos
push
ror
jnp
and
ds
das
out
or
add
and
or
inc
push
mov
xchg
xchg
add
pop
pop
and
push
inc
popf
sub
add
add
out
retf
std
js
movs
sbb
bound
add
cmps
pop
(bad)
or
stos
dec
call
push
std
ret
lods
ins
mov
iret
aaa
add
push
adc
cmp
mov
push
jo
in
scas
gs
dec
dec
stos
add
stos
add
inc
daa
jb
iret
xor
pop
add
and
pop
pushf
int3
dec
leave
adc
inc
jo
add
and
jb
pop
cmps
dec
add
rol
imul
add
fbld
adc
inc
sahf
pop
int
xchg
and
fs
popa
or
js
aaa
and
add
adc
dec
inc
div
cmp
mov
mov
inc
add
cwde
rcr
ss
jbe
or
je
sar
lock
sbb
inc
clc
cmp
jne
add
test
cmp
add
xchg
jle
ret
cmp
pop
mov
mov
or
sbb
clc
inc
mov
loop
sahf
fstp
data16
cmp
add
mov
test
add
add
inc
inc
fidivr
pop
inc
add
xor
jge
push
outs
adc
push
out
fs
jns
and
enter
mov
or
sub
pop
daa
sbb
mov
cmp
jmp
push
adc
sti
cmp
je
pop
push
adc
sti
jmp
mov
sbb
xchg
add
(bad)
pop
adc
cmp
(bad)
call
jbe
cmp
jne
mov
mov
jbe
push
cmp
mov
add
pop
fld
outs
jb
cmp
push
loopne
fild
mov
bound
mov
add
jb
jo
or
sub
and
addr16
mov
or
sub
mov
mov
or
pop
fwait
push
jp
cwde
add
push
imul
ins
xor
or
(bad)
push
mov
cmp
jg
or
sbb
cmp
adc
jle
or
sbb
or
or
dec
mov
adc
ds
jp
ja
out
aaa
ja
xchg
in
ret
push
sbb
ins
sub
xchg
les
adc
pop
test
hlt
mov
mov
iret
and
add
cdq
fld
test
sub
xchg
lock
push
push
dec
ret
inc
fimul
adc
or
mov
pop
fwait
movs
xchg
add
adc
fwait
inc
add
clc
pop
out
and
add
ds
mov
hlt
push
movs
mov
pop
(bad)
adc
sub
push
xchg
sbb
sub
xchg
dec
data16
(bad)
sbb
invd
sub
clc
je
pop
add
sub
dec
pop
stc
pusha
add
pop
xor
push
push
xchg
loop
cmp
xor
fcom
jle
bound
int
sub
imul
pop
xchg
sub
sbb
xchg
ret
dec
in
xor
adc
dec
clc
push
lsl
jne
or
sahf
xchg
or
add
push
and
outs
out
shr
shr
iret
and
and
out
add
add
ins
inc
and
pop
cmps
icebp
push
jnp
sar
dec
adc
icebp
fnsave
pop
and
jecxz
call
mov
push
jo
dec
jmp
int
pop
loope
frstor
sar
jno
jne
(bad)
(bad)
pop
jecxz
test
ins
pop
sub
inc
aas
mov
pop
jb
add
and
pop
pop
cmp
or
pop
and
inc
je
sub
sub
lods
sar
add
mov
(bad)
popa
inc
call
add
pusha
inc
mov
pop
clc
sbb
inc
jnp
xor
cmp
jo
adc
pop
call
adc
shl
int3
mov
mov
pop
pop
dec
cmp
jb
cmp
xchg
fcom
dec
fbld
bound
fisttp
inc
cmp
scas
pop
imul
push
mov
pop
popf
pop
push
repz
nop
adc
pop
ins
xchg
into
mov
jae
push
or
push
push
ins
pop
xor
mov
ins
hlt
sub
iret
xchg
ins
hlt
movs
out
addr16
jb
and
stos
hlt
lods
loop
xor
cdq
and
add
jo
ins
inc
fdivr
das
movs
cmp
push
push
jmp
mov
xor
mov
(bad)
mov
jne
call
(bad)
mov
add
jno
jo
cmc
fisttp
mov
add
add
jmp
adc
add
sub
mov
or
enter
divps
xor
pop
add
mov
call
fdiv
and
jmp
push
mov
inc
cdq
cwde
pop
add
ret
ret
add
add
add
sub
rcl
push
dec
xchg
xlat
inc
jns
mov
dec
add
push
cmp
ja
pop
hlt
add
adc
jno
lea
or
sub
sub
ins
inc
rol
adc
in
ret
xor
(bad)
dec
lock
push
jmp
push
adc
pop
fimul
shl
push
push
sahf
clc
mov
add
clc
xchg
or
in
cld
pop
mov
mov
push
imul
xchg
xchg
scas
xor
sub
inc
cmp
add
outs
arpl
sub
in
or
push
or
xchg
fs
adc
or
mov
add
xor
sahf
mov
cmp
hlt
and
dec
add
sub
inc
popf
dec
stos
push
cmp
and
fst
inc
pop
dec
xor
and
add
push
cmps
add
push
lock
imul
int3
leave
data16
inc
add
mov
add
cmp
mov
and
mov
(bad)
pop
(bad)
inc
test
push
push
sbb
shl
mov
repnz
push
xor
mov
pop
dec
sbb
mov
movs
mov
xor
mov
push
dec
imul
cld
movs
into
aam
and
jle
fimul
push
push
xchg
xchg
sub
xor
mov
dec
mov
or
repz
xor
int3
fild
jle
mov
sbb
or
shl
shl
ret
cmp
xchg
(bad)
xor
cmp
pop
enter
mov
mov
jb
xor
xor
push
xchg
dec
mov
xor
or
and
push
or
dec
cdq
sbb
retf
bound
push
and
sub
push
cmps
and
push
mov
in
aam
lods
jmp
xchg
test
cmp
push
and
lahf
(bad)
cmp
sbb
push
ror
or
pop
jne
push
sti
mov
sbb
or
and
sub
pop
add
call
cmp
adc
aas
lds
stos
ins
add
mov
add
(bad)
or
jle
dec
mov
push
ins
sbb
pop
dec
mov
shl
pop
(bad)
popf
loopne
(bad)
dec
lahf
ret
test
nop
add
cmp
xor
ror
sbb
xchg
inc
pcmpeqb
dec
out
or
lea
inc
add
repz
das
xor
in
and
cld
repz
hlt
push
rcl
inc
(bad)
push
clc
xor
sub
jmp
xor
add
or
ret
in
add
retf
lds
cmp
cmp
cld
aaa
lds
clc
mov
lea
in
imul
pop
cmp
adc
fsubr
retf
mov
and
adc
pop
daa
popa
jne
or
add
mov
clc
lods
sbb
mov
fsubr
mov
lods
loope
sar
das
sub
cmp
loop
xchg
inc
mov
aam
(bad)
adc
dec
mov
mov
push
lock
jns
add
enter
outs
xor
inc
leave
ins
inc
mov
sub
sbb
hlt
push
push
adc
or
and
dec
or
mov
ret
sub
push
or
and
adc
sub
lods
pop
jno
adc
pop
adc
cmp
add
add
cmp
dec
mov
inc
call
add
lock
sub
inc
dec
test
cmp
sub
mov
add
fist
push
pop
cmp
int3
loopne
shr
inc
mov
or
push
cld
add
and
dec
or
and
lods
pop
cs
mov
sbb
aaa
add
xchg
jp
or
xor
mov
data16
add
and
or
inc
out
call
pop
dec
sbb
mov
or
out
adc
stos
mov
and
jg
add
adc
jp
add
inc
cmp
xchg
jecxz
out
dec
jl
add
mov
hlt
sbb
jno
retf
sbb
(bad)
push
and
inc
xchg
or
mov
out
adc
xchg
mov
add
fwait
les
and
add
mov
xchg
fld
lea
pinsrw
and
gs
jmp
xor
aad
xchg
adc
xor
dec
sub
and
push
dec
xor
and
sbb
repnz
adc
emms
movs
pop
lea
sub
add
enter
adc
pop
adc
jne
adc
sub
dec
adc
push
imul
retf
add
and
mov
add
sub
push
and
or
pusha
mov
sub
fsub
jnp
inc
or
jp
sub
push
div
fs
or
push
or
bnd
push
push
inc
dec
push
push
push
clc
dec
pop
or
pop
mov
add
in
cli
stc
sub
lahf
or
and
inc
xchg
cmp
jge
jns
pusha
inc
test
icebp
xchg
add
pop
add
add
imul
pusha
hlt
mov
dec
int3
lea
inc
js
sbb
adc
xor
stos
stos
and
dec
repnz
push
mov
mov
add
pop
or
and
or
inc
and
or
or
and
sub
pusha
adc
fisub
ja
dec
xchg
test
in
jo
les
or
or
sahf
rcl
hlt
frstor
adc
inc
int3
xchg
add
pushf
dec
jle
xor
mov
test
add
push
retf
add
icebp
adc
into
push
pop
jno
or
xchg
mov
mov
or
mov
loopne
les
cmc
nop
xor
or
xor
add
or
pop
mov
shl
lahf
or
push
test
jo
fimul
push
cmp
adc
clc
in
xchg
test
int3
add
or
aaa
xor
xchg
and
push
push
daa
inc
xchg
lods
in
sbb
sub
mov
add
int3
sbb
push
adc
aam
test
aas
dec
push
fcmovb
push
enter
inc
mov
xchg
inc
mov
adc
add
inc
xor
dec
out
int
retf
jl
push
test
mov
xor
mov
imul
pop
or
xchg
je
dec
mov
aas
and
sub
xchg
xchg
and
pop
shr
scas
daa
mov
sub
mov
sbb
out
dec
fisub
sub
mov
iret
inc
sub
cmp
xor
push
mov
sbb
xor
or
test
adc
shr
cmc
or
and
rcr
or
repnz
and
xor
lods
jecxz
xor
or
and
cmp
loopne
mov
push
add
add
lea
adc
fcomp
and
sbb
sbb
jecxz
cld
test
retw
push
xor
loop
add
mov
enter
xor
add
cld
sbb
call
inc
call
xor
cmp
out
adc
push
inc
adc
mov
lds
inc
dec
mov
fnsave
lock
popa
and
inc
in
fnsave
mov
adc
or
and
adc
jns
cmps
jne
stos
jl
sti
dec
or
out
cld
jb
int3
inc
lds
stc
inc
dec
add
mov
popa
arpl
xchg
adc
xchg
cmp
xchg
cmp
xor
lahf
ins
arpl
fmul
js
and
xchg
add
mov
in
cmps
and
dec
mov
push
repz
neg
lea
int3
push
and
jne
or
aad
arpl
sbb
cmp
sub
mov
inc
mov
std
stos
or
not
lods
jb
add
jns
lds
das
pop
dec
pop
(bad)
clc
dec
and
and
push
jmp
push
push
push
aam
push
xor
sti
push
adc
and
sbb
mov
fisttp
sahf
push
arpl
push
push
imul
fwait
dec
and
inc
icebp
or
push
stos
sbb
test
adc
cmp
cmp
xor
adc
les
pop
mov
aaa
sbb
cmp
fiadd
in
inc
ds
fs
inc
addr16
sub
xchg
xchg
pop
cdq
pop
punpckhbw
rcr
nop
and
jbe
jne
pop
(bad)
xlat
inc
leave
stos
push
sub
adc
cmp
and
repnz
push
in
repnz
jb
cmp
and
inc
mov
sbb
cmp
nop
add
dec
mov
dec
mov
add
add
cmp
inc
and
or
sbb
enter
mov
inc
clc
xor
sbb
cmp
aas
into
dec
ror
lock
jne
in
inc
cmp
fild
jnp
add
sbb
ret
stos
add
test
mov
test
dec
loop
mov
dec
sti
pop
and
or
dec
add
inc
es
hlt
mov
shl
loopne
rcl
xlat
test
push
es
scas
xchg
ja
dec
dec
and
cmp
sub
test
or
or
or
sbb
scas
mov
push
cdq
sbb
add
in
in
sub
cmp
or
and
fst
adc
jb
xchg
sbb
sub
enter
clc
sub
xchg
cmps
jo
cs
aam
test
cs
mov
sub
add
and
cmp
leave
xor
cmp
push
leave
jae
inc
push
add
or
jmp
dec
add
inc
dec
add
sbb
push
pop
int3
add
dec
inc
or
add
or
or
data16
sbb
jb
sbb
push
cmp
xchg
mov
sbb
mov
cmp
sbb
dec
les
mov
mov
stos
add
add
inc
scas
xchg
add
clc
adc
fidiv
pushf
daa
inc
sahf
or
sub
inc
das
dec
jecxz
das
push
push
adc
pop
xor
(bad)
nop
or
or
jp
jmp
pop
scas
xchg
(bad)
jmp
rcr
js
mov
loope
xchg
mov
add
and
mov
add
repnz
sbb
xchg
or
xchg
add
sub
inc
cmp
add
fild
ret
push
fadd
jno
rol
and
or
pop
sub
pop
or
sbb
push
stos
sbb
es
dec
pop
add
sbb
jmp
push
add
push
xor
push
stos
sti
imul
adc
xchg
push
pop
dec
je
pop
xor
mov
xchg
or
mov
fst
retf
(bad)
je
push
rcr
sub
loope
pop
adc
add
not
push
mov
inc
pop
daa
push
add
inc
push
add
jmp
xchg
imul
movs
sahf
outs
mov
add
push
pop
add
sar
js
xor
in
push
inc
mov
mov
nop
add
or
cmps
adc
jbe
push
pop
push
push
dec
ja
mov
sbb
xor
push
mov
mov
loope
inc
mov
les
push
add
lock
pop
call
cmp
test
add
add
cli
enter
ret
mov
dec
cmp
cmps
inc
cld
jae
(bad)
sub
add
push
jno
mov
xor
adc
push
sbb
adc
shl
aam
shr
repnz
pop
fsub
rol
popf
xchg
popf
fsubr
call
fdivr
lea
pop
ror
or
push
add
mov
sbb
sbb
les
adc
add
pusha
push
add
xor
(bad)
les
(bad)
lock
push
pop
dec
and
sub
add
sbb
(bad)
xchg
xlat
int3
push
dec
popf
pop
pop
and
or
imul
mov
push
icebp
test
jno
mov
dec
add
xchg
adc
js
mov
sar
jae
popf
fwait
sbb
and
sub
lock
sub
xor
mov
dec
or
ds
mov
pop
cmp
dec
sub
pop
adc
dec
add
adc
sub
test
test
push
xor
inc
cmp
jl
xor
aaa
cmp
cmp
cmp
add
inc
and
jo
rol
mov
or
jg
push
cli
add
sbb
fs
movs
lea
xchg
add
and
adc
cmp
cmp
aad
push
leave
pop
jmp
add
mov
arpl
or
xchg
je
(bad)
push
mov
mov
bound
mov
mov
inc
or
cwde
sbb
jb
add
pop
gs
add
sbb
cmp
or
mov
mov
pop
mov
and
sub
push
xor
inc
sbb
push
adc
sub
add
pop
inc
inc
cld
(bad)
fsubr
jbe
dec
repnz
sahf
cmovb
fsubr
push
push
add
imul
adc
cmp
pusha
mov
jge
mov
add
xchg
add
or
add
dec
jne
add
inc
call
or
nop
out
rol
or
jne
pop
sbb
and
add
lods
xchg
fisttp
shl
lock
rcl
mov
in
sti
add
shl
les
adc
xchg
fmul
adc
in
dec
cs
(bad)
fsubr
adc
rol
scas
inc
sbb
push
popa
ins
mov
push
pop
call
frstor
cdq
push
push
sti
aam
push
lock
hlt
inc
lock
inc
js
popa
inc
enter
mov
push
inc
adc
mov
sbb
dec
fmul
fsub
jo
push
in
push
mov
enter
and
pop
jb
sbb
xor
enter
sbb
and
inc
cmps
fcomp
and
clc
in
push
cdq
int3
and
(bad)
mov
sbb
mul
inc
inc
or
or
inc
int3
repnz
cmp
and
pop
call
lock
mov
daa
add
aam
addr16
inc
xchg
sub
xor
sbb
fld
and
sbb
sub
cwde
ret
push
dec
shl
sub
xchg
dec
in
inc
sub
sub
loopne
add
(bad)
mov
sub
push
xor
sbb
dec
sub
fdiv
inc
icebp
push
sub
inc
adc
loopne
mov
add
add
test
jne
(bad)
dec
sub
xchg
sbb
fcomp
push
and
je
or
ins
mov
mov
(bad)
gs
arpl
mov
fld
lods
mov
dec
pop
pop
cmp
jecxz
sub
add
mov
dec
popf
jecxz
jmp
cs
int
mov
adc
xor
sbb
and
xor
xchg
jl
add
xor
push
xor
imul
add
and
xor
loope
mov
jl
ins
xor
xor
and
cld
mov
or
mov
xor
and
data16
jmp
daa
dec
fiadd
test
mov
xor
xchg
mov
mov
push
sahf
enter
add
nop
pop
bound
test
adc
mov
enter
cmp
and
push
xor
cmp
dec
and
cmp
cmps
dec
xchg
sub
mov
and
das
xchg
cmp
add
xor
mov
or
shl
lahf
add
sbb
lock
adc
adc
mov
pop
les
gs
add
jno
push
rol
inc
or
pop
inc
sub
inc
enter
or
jns
xchg
in
js
aaa
or
fwait
js
in
cmp
adc
retf
shl
adc
cmp
add
mov
cmps
pop
movs
mov
ror
int
ins
or
dec
inc
and
fnstsw
dec
aas
gs
loop
xor
in
and
shl
xor
fldcw
inc
push
nop
add
sub
cmp
sbb
(bad)
ror
outs
loopne
xchg
and
sbb
nop
dec
popf
lock
jmp
push
scas
adc
shl
rol
lock
xor
inc
adc
rcr
in
adc
add
sub
aas
in
rcl
rcr
inc
push
push
xor
pop
xor
(bad)
mov
dec
stc
push
sbb
xchg
adc
sbb
rcl
ins
sbb
fs
sbb
sbb
mov
rol
xchg
repz
xor
leave
push
call
push
and
add
pusha
add
imul
add
pushf
lds
and
cdq
add
pop
xchg
jl
and
dec
adc
ret
leave
xchg
shr
xchg
rcr
es
and
out
mov
pusha
fcom
pop
sbb
rcl
pusha
nop
and
jbe
test
clc
(bad)
aas
dec
push
iret
lods
sbb
xchg
adc
dec
out
stos
dec
call
sahf
and
sbb
push
pop
rol
jl
ret
push
cwde
inc
add
sub
dec
and
dec
in
pop
mov
adc
arpl
fiadd
add
xchg
mov
xlat
or
mov
adc
sbb
cli
adc
lds
rcl
mov
and
test
sbb
dec
sub
push
loopne
in
cmp
cwde
xor
inc
lods
sub
dec
or
push
das
imul
pop
or
push
sub
scas
(bad)
fs
leave
or
sbb
jns
out
inc
inc
xchg
jne
ds
je
mov
and
dec
test
sub
in
mov
mov
mov
shl
mov
inc
xor
cmp
add
cwde
jge
xor
push
cmps
xor
aam
mov
xchg
jmp
popa
adc
cmp
pop
push
push
cmps
cs
mov
add
pop
mov
mov
loop
nop
sub
je
xor
pop
push
sahf
cmp
pop
pop
mov
and
push
imul
inc
or
or
lea
lahf
jo
and
adc
push
mov
mov
cmp
cmp
or
lods
inc
push
fmul
ror
and
fidiv
dec
pop
shl
aad
sub
mov
dec
jmp
inc
push
pop
push
and
sub
inc
mov
arpl
xor
inc
cmp
pop
lahf
jb
xchg
xchg
or
sub
cmp
sub
jg
or
loope
inc
xor
out
inc
or
mov
jle
sub
sbb
or
dec
mov
stos
call
enter
jo
jne
pop
xor
xor
push
mov
add
mov
cmp
mov
xlat
(bad)
adc
mov
jle
fcomp
or
xchg
lock
daa
cmp
std
and
push
out
mov
or
adc
mov
lods
jmp
fstp
sbb
inc
ror
lahf
fadd
inc
adc
inc
and
pop
mov
add
push
add
cmp
pop
and
adc
adc
outs
dec
mov
ror
sbb
jns
inc
pop
movs
mov
jbe
add
push
pop
cmp
arpl
xchg
push
dec
shr
add
push
leave
and
push
cmp
js
or
pushf
jge
popa
ret
xchg
jecxz
jb
xor
add
push
pushf
xor
add
cmc
xchg
xchg
ins
not
mov
dec
mov
jo
xor
xor
adc
hlt
mov
xchg
lea
jne
xchg
sbb
mov
(bad)
leave
inc
cmp
push
cmp
mov
inc
or
jb
adc
enter
cli
js
xchg
or
cli
pop
in
xor
js
shr
fwait
or
cli
js
adc
cdq
nop
cli
js
mov
popa
xlat
imul
rol
xchg
adc
push
stos
cmp
cs
or
in
sub
or
pop
mov
pop
(bad)
rcl
mov
add
ror
inc
sub
bound
add
jle
add
ins
jae
push
jno
ficomp
cmp
mov
mov
or
add
movs
pop
pop
adc
mov
pop
ins
adc
in
outs
adc
adc
jp
mov
dec
scas
cmp
retf
js
mov
ret
mov
and
pop
cs
push
and
push
std
xor
lock
daa
movs
mov
shl
jnp
lea
call
and
jae
sub
inc
pop
out
mov
xchg
mov
mov
pusha
shl
inc
mov
jnp
adc
fcomp
js
sub
nop
retf
and
xor
mov
inc
es
sahf
imul
enter
into
fild
sbb
xor
xor
pop
test
adc
sahf
retf
pop
push
push
fadd
enter
pop
jl
cmp
push
cmp
pop
mov
add
adc
fld
xchg
mov
dec
adc
dec
std
ror
push
fwait
daa
inc
sub
mov
and
and
mov
mov
add
push
mov
jl
xor
jbe
cmp
or
dec
(bad)
jg
sub
sar
mov
popf
mov
adc
or
je
and
cmp
adc
enter
sbb
mov
or
pop
sbb
fs
cmps
sbb
mov
cdq
xor
adc
dec
pop
cmp
pop
inc
and
jb
sbb
sbb
sbb
sub
pop
or
push
scas
nop
cmps
add
mov
cdq
sub
inc
and
enter
add
jb
in
pop
sub
and
and
add
nop
dec
sub
push
in
sbb
pop
sub
or
test
xchg
sbb
cs
sbb
es
test
cdq
sub
arpl
enter
dec
test
or
sub
lea
icebp
js
dec
or
xor
fcom
(bad)
and
jge
fist
cdq
xchg
nop
stos
push
jmp
int
xor
inc
sub
adc
adc
and
sub
sub
and
and
sub
and
and
xor
or
dec
sbb
pop
adc
and
xor
jb
or
xor
jb
jb
cmp
or
fimul
(bad)
repnz
jg
jl
mov
sbb
xchg
push
scas
push
inc
jo
xchg
jl
rcl
mov
xor
out
hlt
psubusb
push
xor
daa
inc
and
xor
jnp
sbb
xchg
mov
or
pusha
add
sbb
push
add
and
dec
cmps
mov
xor
ss
mov
xor
aam
and
cmp
sbb
push
and
inc
aaa
int
and
pop
push
enter
test
xor
enter
sub
xor
pop
cmp
add
sub
cmp
and
sar
and
adc
mov
cld
(bad)
push
cmp
add
or
mov
inc
leave
hlt
mov
nop
cmp
lods
sbb
pop
ret
cmp
ds
push
mov
pop
xchg
push
jnp
sahf
or
mov
call
adc
cwde
pop
pop
push
aas
sbb
lock
ss
or
outs
les
ret
lea
clc
aam
popa
adc
cmps
push
jl
dec
dec
push
int
data16
adc
mov
fdivr
mov
mov
xor
test
mov
fwait
xor
fld
fwait
add
in
loope
jae
(bad)
mov
mov
mov
mul
sbb
inc
mov
inc
xchg
ins
xor
pushf
sbb
mov
aaa
inc
lds
sub
inc
dec
mov
test
inc
data16
aad
and
push
mov
nop
fstp
jo
mov
xor
and
inc
sub
imul
pop
xor
dec
fisttp
enter
inc
leave
add
push
pop
jl
cmp
je
lea
add
push
push
les
sbb
add
fisttp
mov
push
push
push
js
test
(bad)
and
test
fcom
mov
call
(bad)
adc
adc
imul
mov
(bad)
sbb
mov
jns
push
or
sbb
mov
and
(bad)
dec
pop
xchg
retf
ins
dec
arpl
pusha
push
sub
xchg
retf
(bad)
sbb
push
jo
call
xchg
xor
mov
jl
or
ret
cmp
dec
xchg
mov
inc
(bad)
push
repnz
adc
adc
je
and
push
or
in
pushf
mov
sub
leave
jae
mov
and
push
enter
call
adc
add
in
inc
adc
test
mov
sub
and
inc
fldenv
add
cwde
xor
mov
fld
jl
xchg
outs
adc
cmp
jbe
inc
jne
mov
dec
call
jnp
nop
pushw
test
cmp
mov
mov
movs
aas
and
fld
test
(bad)
loopne
mov
inc
sbb
or
add
push
push
sbb
mov
lahf
gs
push
inc
push
dec
xor
cmp
sbb
dec
shl
(bad)
int3
imul
xor
pop
ins
xchg
sub
mov
push
mov
or
mov
xchg
xchg
sbb
xor
sbb
inc
cdq
mov
xchg
add
xchg
fbstp
xor
jl
add
in
pop
fsubr
mov
icebp
mov
xor
sbb
dec
jg
lock
ss
and
mov
lock
mov
lods
adc
adc
dec
sub
ds
pushf
sbb
add
xchg
nop
xchg
sub
add
and
and
in
sbb
add
add
adc
js
cdq
in
push
inc
inc
inc
ret
inc
cmp
dec
cmp
lock
inc
mov
mov
adc
iret
jg
push
js
and
inc
dec
icebp
sub
mov
rcr
mov
add
sbb
adc
push
loop
icebp
and
cmp
inc
and
pop
mov
inc
js
mov
in
push
sti
or
xchg
push
or
dec
jp
(bad)
bound
cmp
je
loop
dec
mov
(bad)
repz
push
dec
mov
mov
cli
add
mov
cmp
std
cwde
inc
pop
xchg
jne
jae
ins
sub
mov
retf
xor
fild
ror
sbb
inc
fld
sbb
lock
ss
pop
loope
lds
mul
dec
xchg
add
in
daa
lods
pop
imul
push
dec
ret
and
add
lahf
mov
jl
push
lock
inc
mov
cmp
sub
call
jbe
adc
cmp
rcl
clc
xor
jo
push
push
jp
push
popa
pop
or
sub
sar
sub
(bad)
test
stos
or
xor
sbb
mov
mov
mov
push
rol
lea
es
jge
es
rcl
xor
push
ror
adc
js
push
ret
sub
xor
dec
pop
add
push
push
fld
add
push
pop
adc
xor
sbb
and
inc
jne
adc
clc
nop
and
or
cmp
pop
call
lock
lods
mov
fist
pop
inc
adc
xchg
ins
push
repnz
and
je
inc
jge
aad
mov
jae
dec
cdq
dec
inc
sbb
loopne
retf
xchg
add
push
inc
sbb
xchg
xchg
movs
xor
cwde
dec
imul
lods
dec
(bad)
es
pop
xlat
xchg
xchg
out
sub
adc
xchg
or
aas
push
ja
adc
inc
int
outs
fist
adc
test
in
adc
pop
adc
js
add
push
pop
js
or
lahf
push
adc
push
jp
inc
rcr
xchg
mov
xor
lea
dec
leave
and
jg
push
jb
aas
dec
add
or
clc
xchg
xor
pop
inc
scas
push
fild
rcl
dec
pop
and
lahf
jg
or
push
mov
push
movs
jp
and
in
aaa
pop
push
pusha
add
adc
push
mov
ret
rol
mov
(bad)
rol
add
movs
pusha
mov
das
or
jae
jecxz
call
dec
adc
loop
pop
ror
mov
or
or
loope
or
add
hlt
test
iret
iret
push
iret
int
xchg
add
push
popa
imul
adc
xor
in
call
mov
add
jg
or
lock
mov
adc
add
mov
push
mov
push
fwait
in
and
test
movs
add
inc
adc
sbb
sub
pusha
push
cdq
fidiv
add
scas
xchg
add
jns
sbb
jb
cmp
in
retf
dec
add
cld
sar
ins
sti
add
push
jge
adc
test
xor
pop
or
js
inc
xor
push
cmps
push
test
scas
add
(bad)
and
xor
add
inc
add
add
push
mov
mov
xchg
xor
(bad)
mov
cmps
add
inc
xchg
and
xchg
inc
push
enter
xchg
mov
and
leave
or
loope
jl
xchg
sub
xchg
or
add
xchg
call
add
call
stc
add
adc
movs
test
fsubr
mov
push
add
fcom
add
and
xchg
pop
push
jge
or
push
dec
inc
add
clc
sub
adc
or
sub
xchg
mov
push
lds
loopne
test
add
or
and
movs
inc
cli
xor
add
scas
jo
mul
xchg
inc
add
push
movs
test
xor
pop
pop
xchg
test
std
in
in
es
inc
shl
mov
scas
call
or
push
mov
push
loopne
push
dec
cmp
fcomp
fcomi
ret
dec
adc
sub
es
xlat
xchg
sub
or
pop
fisubr
sub
mov
les
inc
mov
add
aas
mov
movs
xchg
add
pusha
xchg
retf
push
mov
loopne
mov
pushf
and
std
lahf
lods
ud0
jl
push
xor
and
or
cmp
ins
loopne
mov
test
inc
push
stos
lahf
and
or
push
std
fmul
in
xchg
fdivr
in
in
and
pop
fcom
aam
or
adc
loopne
or
fdiv
or
aam
sti
or
inc
leave
mov
nop
sub
add
sbb
sub
cmp
push
inc
or
loopne
ret
aam
adc
mov
mov
adc
rcl
push
hlt
fstp
pop
add
mov
jge
or
cmps
inc
sbb
in
int
adc
sbb
xor
pop
xor
shl
sub
call
aam
mov
lea
movs
push
xchg
sbb
bound
cmp
or
push
cs
add
retf
mov
inc
repnz
inc
fcom
or
xchg
xor
or
cmp
test
aaa
stc
sbb
adc
or
push
cmp
nop
test
dec
clc
and
or
mov
invd
sbb
mov
adc
movs
sbb
adc
or
inc
xchg
and
and
adc
sbb
jmp
jmp
mov
add
mov
into
add
gs
sub
pop
inc
sbb
call
stos
mov
pop
mov
dec
stos
add
pop
inc
mov
inc
pop
jns
inc
sahf
or
or
or
sbb
adc
fmulp
push
xor
cwde
push
pop
push
ret
rdpmc
in
nop
pop
scas
call
and
shl
stos
pop
xchg
or
mov
add
mov
push
add
push
xor
outs
pop
pop
loopne
pop
jle
loopne
dec
in
jne
jns
push
or
mov
aaa
mov
cmp
(bad)
push
pusha
or
cmp
xor
mov
stos
sbb
outs
daa
test
add
inc
fcom
xor
or
cmps
(bad)
sbb
mov
push
push
push
lea
push
and
dec
adc
or
xor
ins
adc
or
dec
xor
or
mov
xchg
dec
xchg
inc
or
and
mov
mov
add
dec
sahf
sbb
(bad)
mov
jge
push
cmps
inc
adc
js
and
jno
adc
mov
sbb
adc
sbb
mov
fld
cdq
stos
sbb
aaa
or
and
adc
cdq
scas
push
xchg
pop
xchg
sbb
add
(bad)
imul
lea
lock
and
fcmovnbe
add
ja
fidiv
mov
cmp
shl
jb
test
lea
sbb
jg
retf
mov
or
xor
jmp
xchg
add
and
call
repnz
pushf
enter
lock
xor
lock
rcl
test
adc
in
in
inc
enter
mov
dec
or
fdiv
push
jb
in
nop
or
adc
lea
aam
mov
pop
enter
or
rol
ret
xor
inc
add
xor
sbb
movs
add
or
(bad)
cmp
scas
adc
sbb
pusha
inc
xor
dec
push
xchg
(bad)
mov
sub
and
shl
add
repnz
aas
mov
add
mov
add
mov
xchg
dec
and
adc
dec
and
adc
dec
dec
and
mov
stos
add
mov
push
cmp
jns
push
sub
sub
shl
fcmovne
jge
cmps
sub
and
mov
(bad)
enter
and
enter
inc
inc
mov
mov
push
and
xor
xor
cs
loope
xor
or
(bad)
enter
(bad)
(bad)
fadd
sub
push
in
fcomp
pop
jnp
imul
aam
(bad)
or
sbb
mov
imul
pop
fsub
cdq
dec
(bad)
cdq
nop
dec
leave
rcr
dec
aam
pop
push
nop
add
or
iret
pop
shr
enter
or
and
adc
call
or
mov
dec
repz
sbb
lock
sbb
ret
aam
xor
xor
movd
or
push
jge
(bad)
lock
jb
jle
sub
inc
sar
mov
or
ins
pop
pop
adc
mov
jmp
ror
adc
js
add
adc
cmp
mov
sub
mov
sbb
lods
push
jo
pusha
add
add
jne
scas
sbb
push
call
and
inc
in
lea
fmul
mov
xchg
sbb
and
inc
jb
les
shl
lds
sbb
lahf
xchg
jmp
pop
stos
adc
lods
cmps
test
mov
dec
mov
inc
loope
jmp
and
ret
dec
sbb
loope
or
add
jno
add
or
or
add
mov
sub
xor
call
shl
or
ret
imul
sub
ret
add
push
push
pop
int3
(bad)
lea
fwait
mov
dec
das
cmp
mov
pop
and
and
or
or
dec
lods
retf
rol
adc
add
stos
or
ins
dec
outs
inc
xor
add
loopne
ins
mov
or
and
push
ins
or
xchg
test
adc
jae
ins
xchg
out
call
test
push
repnz
leave
push
mov
inc
lea
xor
nop
or
mov
fadd
int
mov
adc
in
cmp
mov
xor
test
fcmovnu
adc
push
mov
pop
imul
retf
push
popf
cmp
jg
fs
cmps
nop
sbb
rol
mov
sbb
push
push
mov
in
das
sbb
jno
sbb
popf
pop
and
add
fcomp
sbb
xor
pop
jle
add
inc
pop
and
mov
mov
mov
and
movs
stc
aas
adc
push
les
add
cmp
pop
mov
leave
pushf
enter
inc
and
push
enter
(bad)
sti
pop
jne
mov
xor
mov
adc
dec
add
bound
xchg
mov
les
cdq
in
lods
push
leave
add
or
pop
and
lods
stos
push
inc
adc
adc
mov
or
les
mov
test
dec
adc
ins
and
mov
and
adc
add
aam
test
adc
aam
sbb
adc
mov
inc
pushf
out
pop
das
and
popf
out
adc
push
sbb
sbb
jo
pop
sbb
stos
cmps
scas
dec
push
sbb
out
or
lods
sbb
out
scas
push
dec
lods
dec
push
sbb
and
jb
aas
inc
aam
or
mov
or
fisttp
test
mov
enter
sbb
fcom
push
enter
aam
fs
pusha
movs
or
xor
in
xchg
and
adc
mov
or
or
movs
add
add
dec
xchg
push
lods
adc
movnti
adc
jb
es
mov
leave
push
adc
add
xchg
jge
data16
or
sub
inc
mov
jmp
add
(bad)
and
mov
add
add
in
retf
mov
cmps
mov
adc
sbb
in
inc
lods
inc
inc
movs
test
pop
loopne
nop
adc
cmps
and
pop
add
add
aam
mov
mov
ins
add
pop
repnz
nop
cmp
xchg
test
movs
aaa
cmp
mov
sbb
mov
inc
je
push
add
cmp
jne
popf
in
mov
fist
push
adc
dec
mov
push
hlt
push
pop
add
xchg
mov
leave
add
adc
rol
jmp
sub
sbb
dec
mov
nop
in
push
enter
enter
dec
sub
push
lods
imul
or
je
iret
add
push
test
leave
xchg
aam
das
add
jecxz
adc
cwde
sub
lock
sbb
mov
pop
jne
jp
adc
(bad)
and
mov
cdq
mov
les
or
or
jne
call
inc
pop
dec
dec
and
or
mov
push
inc
jns
frstor
int
jnp
pop
ret
sbb
stos
mov
(bad)
rcl
adc
ins
inc
mov
mov
xor
adc
(bad)
jge
xor
add
(bad)
adc
cmp
mov
mov
test
test
and
push
push
adc
xor
jl
push
mov
xor
mov
mov
push
pop
ret
and
dec
jne
mov
ds
mov
dec
ficomp
xchg
add
pop
mov
push
sub
or
mov
inc
inc
adc
repnz
jl
sbb
push
ins
or
rol
je
bound
or
aas
sbb
popa
rol
sbb
stos
arpl
adc
sbb
in
(bad)
(bad)
fcomp
add
stc
cs
cmp
aam
fnsave
in
or
inc
jo
or
cmps
nop
pop
or
xor
dec
pushf
push
push
or
in
daa
cmp
or
cmp
or
sub
je
rol
push
mov
cld
xchg
pop
cmp
seto
call
and
call
enter
nop
sub
ret
mov
call
pop
(bad)
cmp
nop
add
or
jmp
or
cmp
inc
dec
jb
or
dec
or
add
or
cmps
or
mov
inc
mov
and
or
mov
mov
sub
aam
and
push
inc
aas
sbb
add
fxch
jae
inc
add
fcom
or
jo
sub
dec
inc
test
pop
and
in
sub
pop
dec
add
movs
fsubr
sbb
sbb
stos
rcl
xlat
in
xchg
push
xchg
mov
sbb
push
adc
sub
and
push
mov
scas
cmps
(bad)
jl
sbb
or
cmp
ins
adc
xor
lds
mov
push
sub
imul
out
add
outs
adc
mov
fst
nop
cmp
xor
add
or
fst
add
add
jae
add
jnp
xor
add
pop
push
add
or
push
rep
and
aas
mov
cmp
or
xor
adc
sbb
jo
or
and
adc
push
ret
mov
iret
add
dec
adc
sbb
jb
or
adc
nop
dec
dec
adc
inc
adc
es
adc
mov
imul
push
or
add
mov
inc
outs
mov
sub
ret
jnp
mov
test
add
cmp
mov
mov
sbb
and
(bad)
jno
sti
xchg
mov
fs
inc
xlat
mov
test
lods
fld
movs
div
mov
jmp
or
sbb
jg
ret
xor
jle
hlt
and
mov
or
test
pop
(bad)
sbb
dec
sub
inc
xchg
movs
fcom
push
cs
pusha
mov
push
pop
dec
adc
gs
sub
jl
in
or
mov
or
aas
or
jle
cmp
sbb
fidivr
sub
hlt
int3
sbb
ret
inc
sar
adc
mov
adc
mov
stos
call
mov
xor
ds
push
adc
stos
or
inc
add
add
hlt
mov
test
xor
adc
and
repnz
pop
sub
add
or
movs
loope
push
dec
arpl
je
in
and
xchg
jne
or
test
xor
dec
push
cmp
push
mov
dec
dec
push
xchg
add
enter
cmp
mov
push
pop
xor
inc
(bad)
jmp
pop
dec
cmp
ret
or
jb
or
mov
shr
inc
les
in
nop
fisttp
mov
jo
or
add
cmps
imul
loopne
pop
add
out
xchg
cli
jne
mov
and
test
add
(bad)
mov
stc
jmp
shr
add
ins
jmp
dec
or
or
push
cmp
xor
and
retf
fsub
enter
and
sbb
and
xchg
(bad)
fcom
dec
dec
int3
xlat
sahf
mov
sub
push
sub
inc
dec
pop
ins
add
dec
into
add
sbb
(bad)
(bad)
pop
repnz
mov
daa
sub
inc
push
push
add
pusha
daa
retf
mov
or
rol
push
call
ret
rol
adc
xchg
jecxz
inc
pop
mov
aaa
mov
sub
movs
push
rcl
loop
sub
jge
push
mov
mov
mov
out
mov
int3
inc
aam
aam
je
test
(bad)
fmul
dec
mov
mov
mov
aam
mov
xchg
sub
out
(bad)
fld
and
pushf
sub
push
pop
aam
lods
gs
push
sub
(bad)
add
lds
les
fmul
push
mov
add
mov
int
xor
fcmovne
rol
push
mov
out
inc
push
fsubr
and
mov
mov
xor
or
push
pop
mov
sbb
jg
jge
push
adc
in
repnz
or
pavgb
mov
adc
add
loopne
or
in
and
rcl
add
sbb
jo
shr
xchg
and
xchg
inc
mov
das
add
ror
popf
add
inc
pop
add
sti
lock
shr
mov
jmp
leave
retf
and
mov
or
inc
xor
sbb
add
xor
pop
fs
es
inc
aaa
daa
ins
(bad)
add
imul
repz
in
repz
sbb
or
pop
mov
jae
call
(bad)
pushf
and
or
add
sbb
jp
jle
sub
ins
add
cmps
sbb
sub
jo
mov
jmp
push
jne
or
xlat
mov
sbb
in
in
inc
popa
add
inc
or
aad
rol
dec
push
inc
push
lea
shl
push
lea
inc
mov
cs
adc
test
xor
jle
lock
jge
je
dec
mov
jne
jle
ds
loop
rol
or
add
mov
inc
xlat
repnz
js
sub
inc
and
or
inc
mov
sbb
pushf
cli
cmp
add
sbb
lea
push
and
jne
push
sub
jmp
adc
jns
pop
iret
popf
adc
sub
sub
lea
and
add
add
test
push
and
ins
mov
movs
les
xchg
movs
adc
mov
and
or
add
jle
mov
adc
dec
jecxz
or
push
test
fild
fadd
pop
push
fwait
pop
jne
inc
test
pushf
pop
mov
out
xor
push
mov
mov
sbb
mov
mov
add
dec
sbb
(bad)
jno
pop
sub
mov
and
pop
xchg
leave
dec
rol
es
popf
cmp
in
or
or
cs
sbb
jmp
(bad)
sub
mov
clc
ficomp
dec
and
push
repz
mov
aam
nop
out
inc
xor
xor
mov
rcr
cwde
push
dec
mov
xchg
adc
and
adc
pop
dec
arpl
mov
popaw
mov
push
inc
xor
inc
mov
ret
jno
or
in
add
sar
retf
into
push
jnp
or
inc
fst
add
inc
(bad)
push
lock
mov
in
push
fistp
sbb
pop
jno
cmp
cmp
or
inc
ret
subps
add
pusha
test
push
retf
pop
add
adc
nop
nop
cmp
lahf
xor
inc
inc
fbstp
dec
add
adc
jno
push
and
cdq
or
dec
pop
and
dec
push
rcl
test
or
rol
and
adc
jle
retf
sub
call
pop
push
adc
retf
test
enter
xor
lods
movzx
xchg
inc
sbb
add
add
xchg
add
and
push
add
ds
push
jg
mov
jmp
ja
daa
push
push
ret
jns
push
sub
adc
je
mov
adc
inc
mov
push
dec
stc
dec
cmps
or
and
jno
xor
inc
adc
cvtdq2ps
leave
adc
dec
lods
sub
jle
adc
jl
adc
cmps
mov
xchg
mov
xchg
or
mov
leave
adc
add
inc
add
mov
xor
mov
mov
stos
xor
add
or
sbb
dec
movs
test
loope
sub
add
sbb
add
leave
nop
sub
xor
test
inc
leave
push
movs
mov
sub
sbb
cmp
dec
cmp
push
inc
sbb
push
pusha
js
leave
jae
sbb
retf
into
ficomp
enter
pop
jno
sbb
es
add
xchg
mov
push
into
leave
in
dec
add
push
push
fdiv
mov
add
push
(bad)
sub
lods
or
or
adc
ret
add
add
push
jle
icebp
cmp
pop
dec
push
dec
movs
pop
and
out
adc
loopne
mov
mov
dec
ja
gs
inc
push
sub
add
and
cmc
cmps
sbb
sbb
fmul
jle
ins
jmp
add
add
or
push
add
jo
inc
(bad)
call
push
push
add
mov
ret
call
push
or
sbb
xor
add
mov
mov
or
(bad)
test
cmp
pusha
sub
dec
jg
js
out
sub
add
je
push
mov
and
and
jge
mov
pop
mov
add
aas
imul
sub
add
cwde
push
push
fist
xor
dec
leave
sub
(bad)
test
inc
and
jb
and
ins
jo
push
sub
test
adc
adc
mov
jae
cs
adc
adc
inc
mov
inc
push
sar
sbb
push
js
cmp
adc
pop
mov
cmp
mov
mov
push
pop
jge
and
ret
and
add
xchg
cmps
in
aam
xor
push
sub
inc
fld
ss
or
icebp
cmp
clc
cmp
lock
nop
retf
jg
adc
dec
xchg
push
retf
jmp
or
xlat
in
es
xchg
(bad)
std
dec
cmp
stos
adc
and
sar
inc
inc
xor
lods
pop
sbb
xor
inc
(bad)
cmp
stc
cdq
outs
arpl
ret
popa
xor
add
gs
ss
mov
stos
sub
or
movs
xor
(bad)
xlat
add
out
jge
inc
add
jno
or
inc
ds
sub
or
aam
sbb
inc
aam
adc
xchg
and
cs
push
jg
sahf
cmps
adc
and
mov
push
sbb
push
dec
or
ror
inc
leave
push
add
mov
mov
loop
pop
push
sar
lea
and
push
dec
loope
xchg
add
xor
(bad)
nop
aad
mov
mov
nop
loopne
and
or
mov
sar
das
enter
leave
in
add
test
lock
lahf
push
leave
inc
pop
jne
mov
xor
mov
retf
fldcw
cmp
push
std
cmp
test
test
lods
or
xor
loop
pop
imul
sub
das
daa
inc
cmp
lock
sub
in
or
dec
xchg
sbb
dec
daa
das
imul
call
mov
mov
jb
les
sbb
inc
retf
xor
and
mov
xchg
xchg
ficom
xor
ss
dec
and
jmp
lock
mov
pop
and
inc
sbb
dec
adc
sub
mov
adc
lods
callw
push
shl
ret
and
xchg
jns
xor
inc
pop
push
mov
call
xchg
pop
mov
mov
leave
add
stos
cmp
ret
leave
sbb
bnd
stos
shl
shl
xchg
add
or
push
nop
ret
test
out
sbb
test
aas
loopne
push
scas
nop
sub
and
inc
stos
int3
push
sub
xchg
popf
sahf
mov
lock
add
push
retf
(bad)
sub
lahf
ins
loopne
push
inc
jecxz
ja
adc
cs
pop
ins
xor
sbb
stc
add
dec
push
inc
ffreep
enter
inc
jnp
or
push
and
inc
or
clc
pop
mov
xor
cwde
iret
sub
adc
cli
cmp
cmp
rol
loope
les
dec
mov
sub
retf
or
sbb
cmp
fwait
xchg
push
loopne
sub
fcmovbe
or
inc
adc
aam
imul
mov
sbb
cmp
imul
cmp
adc
or
adc
push
in
add
xor
cmp
fs
and
inc
mov
pop
xchg
add
inc
jg
xor
dec
lea
fneni(8087
nop
or
cld
pushf
(bad)
fdivr
inc
(bad)
jne
inc
sbb
and
sub
jo
jl
fwait
pop
inc
ror
int3
inc
pop
pop
add
cmc
and
dec
fs
movs
cdq
push
jl
or
call
sub
push
push
mov
movs
loopne
dec
test
ror
lock
jb
dec
mov
ror
push
push
int
or
and
adc
adc
movs
cdq
dec
call
call
jmp
push
xor
jno
popa
jo
pop
and
sbb
in
xchg
push
sar
xor
scas
or
xor
and
push
dec
xchg
lock
or
in
mov
sbb
sub
mov
or
into
call
xor
fisubr
pusha
jle
push
jp
cmp
push
fcmove
cmp
cmps
and
ins
dec
sbb
sbb
fdiv
and
(bad)
push
les
xchg
das
mov
sub
mov
and
push
mov
and
and
add
es
test
cmp
fs
cmp
fcmovb
cli
js
shl
ret
inc
sub
pop
sbb
pop
fiadd
dec
ror
pop
leave
js
xchg
push
ss
xor
inc
jmp
push
mov
fsubr
mov
fidivr
adc
test
retf
mov
mov
push
sahf
sbb
push
push
xchg
test
push
and
adc
mov
mov
xchg
xchg
ss
cs
or
add
mov
iret
pop
push
das
mov
(bad)
dec
xor
movs
or
stc
mov
mov
adc
inc
jb
pop
les
mov
es
mov
pop
sub
xlat
adc
xchg
mov
and
jb
cdq
push
fld
scas
lods
dec
inc
cmps
dec
mov
jns
fmul
or
fadd
sub
and
mov
and
or
and
movs
and
mov
and
inc
sub
sbb
call
xor
(bad)
and
xchg
mov
push
adc
mov
sti
nop
push
inc
sahf
sub
add
push
push
push
lea
adc
mov
retf
(bad)
dec
shl
jns
cdq
inc
and
xor
add
test
mov
mov
xor
push
and
add
xchg
ret
fisttp
sub
sbb
sub
movs
syscall
das
inc
sub
or
or
in
cmp
lock
and
and
xchg
dec
dec
inc
inc
ds
xor
cmp
dec
mov
push
sbb
lahf
in
inc
es
and
loopne
or
sbb
or
loopne
cmp
mov
lea
and
mov
sub
mov
pop
adc
inc
outs
fnsave
push
push
dec
jns
cvttps2pi
jmp
adc
push
fnsave
ss
or
push
call
xchg
dec
jl
dec
add
ret
add
dec
sbb
inc
scas
add
mov
lock
and
add
inc
add
fidivr
pop
dec
fild
popa
rol
mov
mov
or
mov
adc
adc
pop
cmp
and
xchg
hlt
pop
retf
push
add
or
gs
pusha
sbb
(bad)
mov
cmp
add
xchg
cmp
push
and
mov
sub
pop
push
add
dec
sub
enter
add
jb
push
pop
add
movs
pushf
add
sub
or
cmp
add
and
xchg
sbb
and
sub
shr
push
push
inc
imul
pop
(bad)
addr16
rcr
dec
adc
mov
pop
pusha
outs
es
mov
and
lahf
dec
in
inc
add
dec
pop
sahf
add
retf
sbb
cmp
mov
call
pusha
daa
dec
arpl
ror
ret
add
mov
retf
fwait
xchg
mov
inc
es
dec
sub
adc
cmp
mov
add
and
mov
aaa
mov
dec
jae
dec
or
add
push
and
add
je
(bad)
sbb
sbb
mov
sub
add
or
in
jnp
mov
aaa
sub
fild
stc
call
test
and
call
ja
fwait
lea
dec
in
xchg
cmps
push
icebp
sub
(bad)
popf
and
leave
mov
fisttp
adc
lea
mov
jmp
and
inc
xchg
add
cmp
in
ror
(bad)
aam
inc
or
test
push
push
jmp
pop
out
or
shl
mov
push
cmps
add
bound
fsubr
sub
mov
aaa
test
int
add
test
xor
pop
xor
xor
(bad)
mov
daa
or
retf
aad
fs
pop
mov
xor
adc
inc
and
jle
add
inc
xor
or
dec
add
xor
rol
add
int3
icebp
ret
push
and
xchg
out
cld
or
or
push
les
jbe
es
push
xor
sub
xchg
(bad)
(bad)
sbb
push
mov
(bad)
inc
pop
loopne
add
pop
xor
sbb
cmp
mov
add
mov
mov
add
inc
loopne
inc
in
mov
pop
xchg
pusha
inc
sahf
pop
push
or
ror
fsubr
or
inc
mov
pusha
add
push
xor
push
pop
pusha
and
or
push
bound
and
stos
in
xchg
inc
lods
fmul
xlat
xchg
sar
add
mov
je
sti
cs
inc
jno
imul
leave
mov
stc
in
and
inc
mov
or
or
mov
in
inc
xor
or
repnz
xchg
push
aam
nop
retf
(bad)
pop
rcl
dec
aam
and
xchg
cmp
push
rcl
push
and
adc
xor
adc
aad
movnti
dec
or
push
xor
(bad)
push
add
jle
out
inc
ins
adc
push
sbb
push
in
sub
fcom
fadd
test
sbb
leave
(bad)
rcl
stos
bound
cmps
xchg
test
sub
loop
add
jg
and
ret
mov
add
lods
pop
mov
sbb
rcr
mov
lea
add
test
jmp
je
and
adc
and
test
scas
loopne
ja
add
or
into
push
stos
mov
ins
call
adc
imul
in
mov
xchg
add
cmp
test
mov
and
inc
call
push
and
inc
in
xor
sbb
or
xor
add
mov
xchg
sub
cwde
sbb
bnd
and
sahf
clc
test
xlat
nop
sbb
nop
xchg
stos
sub
xor
adc
push
sub
xor
(bad)
aaa
in
adc
imul
dec
pop
sbb
dec
dec
mov
lock
mov
lock
dec
mov
lock
gs
inc
in
push
or
sub
cmp
cmp
mov
sbb
bound
dec
test
mov
pop
loopne
adc
inc
jecxz
popa
nop
add
aas
aam
movs
nop
pop
in
push
add
fs
sub
add
xor
mov
adc
push
mov
adc
sub
pop
or
shr
dec
mov
into
and
inc
mov
jae
sub
xor
xchg
sbb
xor
inc
mov
add
mov
mov
sbb
repz
lock
dec
or
xor
jp
cmp
fcomp
in
add
and
or
dec
add
cld
xor
mov
push
and
pop
mov
rcl
push
retf
pop
mov
xor
rcl
push
lahf
push
sbb
aaa
in
ret
out
xchg
mov
test
nop
lock
push
lahf
push
xor
sbb
sub
mul
movs
dec
xor
rol
cdq
fs
adc
test
call
je
movs
ret
fadd
xchg
dec
pop
adc
scas
test
lods
adc
adc
sub
mov
or
mov
cmp
mov
push
pushf
inc
add
pop
push
push
push
lea
cmp
sbb
cmp
cdq
push
js
or
sub
and
cmp
pop
scas
lods
adc
nop
rcl
jb
xor
pop
mov
cmps
mul
cmp
push
mov
test
enter
loopne
ds
push
push
gs
sbb
push
mov
jae
mov
pop
jo
pop
dec
adc
mov
in
xchg
adc
xchg
mov
mov
pop
mov
int3
je
ret
jnp
pushf
and
add
mov
mov
sar
cmp
pop
xchg
dec
test
aas
pop
push
sbb
cld
xor
sub
ret
inc
sub
jne
movs
loopne
daa
pop
push
push
daa
jae
inc
or
test
(bad)
inc
arpl
cld
jo
push
add
add
enter
jae
pusha
add
les
stc
test
mov
call
add
dec
fild
sbb
cmp
and
pop
mov
sbb
add
loop
out
inc
jecxz
ja
pushf
dec
mov
mov
push
sub
add
add
pop
inc
leave
pushf
inc
add
or
icebp
pushf
movnti
sbb
push
call
int3
push
pushf
or
dec
inc
add
pop
push
xchg
sbb
adc
lahf
xor
dec
sbb
add
sub
and
or
push
inc
xor
sbb
mov
imul
adc
js
leave
fdiv
adc
mov
test
(bad)
push
push
and
iret
and
and
and
adc
add
mov
cmp
je
jne
jns
movs
dec
adc
xor
lods
mov
and
pop
lods
jmp
(bad)
dec
cwde
sbb
xchg
xchg
adc
xchg
xchg
cwde
and
lea
call
pop
in
sbb
jb
inc
ror
rol
add
add
sbb
add
idiv
xlat
pop
rol
cdq
in
add
mov
ffreep
(bad)
mov
rcl
mov
push
enter
mov
xchg
add
add
xchg
stos
mov
lahf
add
movs
inc
xchg
sbb
movs
pop
add
fs
adc
xor
sbb
add
test
lock
(bad)
xor
dec
imul
or
mov
jg
mov
cmp
inc
cwde
inc
ror
mov
sub
sahf
movs
xchg
das
ins
add
not
gs
push
add
pop
add
jbe
and
dec
pop
cs
fwait
inc
sub
fcmovu
movs
mov
movs
cmp
sub
mov
stc
push
add
fs
mov
mov
push
fdiv
or
mov
push
push
imul
mov
lea
sub
and
pusha
push
imul
js
int
ss
push
or
out
pop
int3
sub
add
xor
into
fadd
into
adc
mov
or
movs
jne
add
inc
call
add
dec
sub
xchg
popa
inc
jmp
mov
arpl
pop
pop
push
sub
imul
mov
sbb
adc
xchg
mov
mov
test
or
add
popf
cmp
sbb
and
sub
fist
arpl
cmp
test
mov
mov
add
hlt
repnz
or
hlt
or
or
jmp
adc
mov
outs
xchg
cmp
mov
pavgw
push
ins
sbb
mov
rcl
imul
xor
mov
xor
lea
rol
jmp
cmp
or
cmp
pusha
mov
movs
adc
dec
or
or
dec
xor
sahf
les
jno
adc
dec
mul
test
push
sub
sahf
test
ins
popa
int3
cmp
mov
or
cmp
aad
push
dec
shl
xor
daa
lods
test
mov
or
and
sub
xchg
mov
dec
movd
mov
sbb
test
stos
in
hlt
sbb
adc
hlt
popa
xchg
inc
ds
and
and
inc
sbb
fs
sub
or
nop
sub
push
push
pushf
adc
or
push
mov
pop
sbb
sub
mov
test
mov
mov
jmp
in
add
or
rcr
inc
xor
(bad)
aam
mov
xchg
cmp
je
outs
sbb
inc
jns
or
retf
and
test
fst
hlt
dec
inc
or
xchg
push
mov
xchg
in
repnz
jmp
push
lea
push
lea
and
imul
or
xchg
je
add
inc
add
inc
push
or
cmp
or
dec
hlt
pop
sub
and
mov
dec
retf
xchg
cmp
push
adc
cmp
and
add
add
push
push
dec
mov
mov
xchg
inc
or
sub
or
repz
stos
jecxz
ins
aas
xor
and
and
out
es
push
or
jbe
and
jg
mov
shr
xor
shl
lahf
add
fcomp
pop
cmp
hlt
int3
xor
adc
gs
fisttp
jmp
dec
aam
adc
retf
push
jmp
dec
push
inc
add
push
adc
jno
test
das
test
(bad)
aas
push
dec
clc
or
xchg
jmp
adc
jno
je
or
xlat
cmp
mov
sub
cwde
inc
add
inc
dec
pop
sti
not
and
popa
inc
sbb
leave
daa
xchg
push
and
inc
sbb
and
jmp
adc
jo
adc
in
and
cmp
push
rcr
add
push
xor
xchg
push
jp
push
cmp
jnp
adc
lahf
pop
(bad)
sbb
repz
or
add
ss
mov
pop
adc
lds
xor
mov
or
xchg
dec
jl
pusha
shr
or
jmp
popf
add
sbb
and
pop
or
in
or
push
xor
mov
movs
add
aad
fild
or
cmp
fbstp
pop
sub
cli
sahf
sbb
std
outs
cmp
push
jne
push
gs
pop
push
add
pop
add
inc
jne
lea
call
lock
mov
mov
inc
xchg
or
cmp
std
add
stos
dec
scas
jp
or
mov
icebp
pop
mov
(bad)
xor
add
rcl
push
iret
mov
jbe
push
sbb
jmp
or
test
inc
adc
rol
jnp
enter
sar
sbb
ror
scas
mov
jg
ficomp
mov
loopne
add
or
xchg
call
add
cmp
lahf
adc
imul
jmp
xchg
or
mov
pop
and
daa
jbe
sub
movzx
cdq
ins
stos
dec
push
push
inc
lock
pop
loopne
push
sub
bound
push
add
pop
ret
pop
mov
cmp
(bad)
sub
aam
jp
je
test
jne
sbb
sbb
inc
or
mov
fiadd
dec
xchg
add
and
sti
imul
jno
rcr
cmp
fcomp
mov
ret
mov
mov
and
mov
push
fstp
adc
(bad)
sbb
push
cs
adc
xchg
add
push
arpl
xor
pop
or
pushf
dec
rcr
aaa
xor
lahf
loopne
clc
mov
inc
je
in
or
or
mov
and
mov
test
mov
jno
or
or
cmp
data16
or
add
mov
xchg
mov
fs
and
in
stc
sub
add
push
pop
cmp
inc
lock
ficom
test
inc
xlat
add
(bad)
and
sub
inc
fwait
pop
ret
push
or
sar
mov
cmp
add
jg
mov
aas
xor
test
mov
scas
mov
xor
add
adc
or
jge
xor
js
inc
scas
or
or
(bad)
test
inc
mov
or
iret
add
xchg
scas
enter
lea
jb
(bad)
xchg
lods
cs
shld
add
mov
and
sahf
ja
lea
push
out
ret
dec
shl
add
jmp
inc
loopne
stos
test
or
mov
xchg
cs
mov
jne
or
popa
push
dec
(bad)
mov
fdiv
inc
sbb
movs
dec
ret
inc
pusha
or
push
push
or
sbb
add
xor
std
js
xor
pop
sbb
or
mov
add
pop
add
lea
pop
lods
push
add
add
or
pop
js
rcl
or
push
adc
pop
or
xchg
or
or
inc
xchg
or
dec
add
maxps
xor
adc
add
xor
loopne
adc
mov
sar
repz
dec
mov
adc
sahf
add
jns
jl
(bad)
mov
adc
jge
sbb
sbb
pop
mov
nop
mov
sbb
imul
mov
ins
push
cwde
adc
jo
and
add
sbb
int3
stc
dec
aad
and
je
xor
cmp
movs
sub
pop
sbb
dec
stos
jle
xor
sbb
push
rol
or
mov
scas
cs
add
and
imul
push
push
or
repz
mov
in
xlat
sub
xor
pop
dec
cmc
leave
dec
add
cmc
cmp
stos
lds
mov
mov
and
mov
test
and
or
ds
movs
fisub
add
inc
sub
add
imul
adc
adc
xor
leave
cmp
jmp
pusha
aam
imul
hlt
dec
push
dec
add
ins
inc
mov
adc
inc
sahf
lea
ins
ror
mov
stos
call
push
push
aas
add
sub
aas
dec
jo
cmp
loopne
pop
test
mov
jl
or
stos
add
test
adc
mov
gs
or
mov
mov
arpl
fcom
inc
je
fsubr
jne
leave
mov
add
xor
mov
and
repnz
js
or
in
mov
dec
call
rol
or
pop
push
nop
pop
int
or
mov
jmp
pop
aam
add
or
jp
xchg
inc
call
cld
int3
and
inc
or
or
adc
push
ror
dec
outs
psubusb
loopne
jo
pop
dec
in
lods
les
sar
int
ss
sub
mov
enter
push
es
xor
sahf
sub
std
leave
mov
cwde
and
ror
push
ins
pop
dec
enter
pop
mov
adc
cmp
and
icebp
or
dec
or
adc
sbb
adc
imul
adc
pop
mov
push
sub
cmp
cmp
shl
add
repz
mov
jns
fdivr
in
lock
cld
or
sar
sub
or
rol
pusha
fdiv
ins
adc
xlat
and
call
cmps
add
pusha
aas
(bad)
nop
out
sti
outs
jo
dec
mov
cmp
add
in
mov
nop
push
sbb
jb
mov
mov
cli
add
adc
pop
adc
add
jp
mov
add
cmp
clc
das
sahf
push
mov
mov
lock
xchg
pop
xor
js
push
adc
add
fmulp
in
mov
clc
in
add
sub
or
xchg
jno
dec
mov
popf
or
push
xchg
add
imul
jne
inc
push
adc
pop
push
xchg
sub
leave
add
jo
lock
or
add
add
nop
and
sub
mov
stc
sbb
lods
pop
movs
xchg
outs
fucomp
sbb
push
test
mov
sbb
ins
pop
mov
adc
add
mov
inc
dec
call
inc
xor
pushf
inc
call
mov
pop
and
sti
sub
xchg
push
xor
add
loopne
add
or
sbb
or
sbb
or
enter
ins
(bad)
sbb
xor
xor
cmp
ja
pop
sub
adc
jnp
mov
int
mov
cmp
mov
sbb
push
inc
loop
adc
int
mov
add
adc
es
scas
leave
(bad)
sar
inc
mov
ins
repnz
dec
xchg
fld
fs
add
mov
inc
lea
xchg
jo
rcr
das
shr
adc
push
jns
jbe
ror
dec
pop
les
ss
lahf
mov
xchg
add
sub
jcxz
add
xchg
jecxz
pop
popa
pop
inc
push
imul
jg
fmul
dec
call
add
imul
add
inc
mov
xchg
and
cmps
aas
push
scas
add
mov
push
int
cs
test
and
dec
and
sub
sbb
inc
loopne
test
cld
mov
gs
push
add
and
pusha
out
es
sub
sbb
sbb
jl
sbb
or
add
jg
pop
inc
aam
jns
loopne
loope
je
inc
push
loope
mov
test
dec
cs
mov
loop
pop
sbb
leave
and
loopne
mov
ror
cmp
enter
in
sbb
and
popa
fcmove
and
add
jl
sbb
(bad)
loope
mov
xchg
inc
ja
jne
add
and
inc
repnz
cmp
inc
pusha
jnp
xor
push
push
ret
cmp
and
lock
cmp
ds
sub
adc
shl
lock
add
rol
pop
js
jg
js
(bad)
aam
iret
adc
sbb
inc
call
dec
and
lea
bound
mov
gs
cdq
sub
lock
nop
xchg
pop
aam
sub
mov
out
sub
mov
dec
movs
jmp
stc
or
sub
fsubr
sub
(bad)
cs
inc
or
dec
outs
xchg
sub
movs
les
aam
rcl
sub
fs
jmp
neg
int3
jmp
dec
dec
add
xor
mov
ror
dec
jae
div
out
int3
mov
call
mov
mov
je
push
dec
jmp
push
dec
dec
lock
jg
add
retf
xor
dec
push
nop
inc
in
or
jl
stos
lock
jno
lock
push
cmc
hlt
ja
je
aad
jle
out
push
or
in
out
cmp
out
inc
jb
lea
xor
mov
(bad)
in
mov
fidivr
xchg
nop
mov
jmp
pushf
out
inc
retf
push
out
les
popa
daa
inc
pop
push
movs
inc
cmp
les
mov
inc
ret
sub
(bad)
mov
in
inc
inc
out
inc
jmp
dec
cmp
xchg
pushf
aas
movs
cmp
push
jmp
cmp
int
ror
imul
jmp
hlt
shl
jl
xchg
in
mov
jmp
pusha
mov
jbe
je
mov
lds
jmp
xchg
aas
dec
scas
ins
clc
nop
lea
cmp
gs
push
and
imul
test
push
jb
call
sar
jmp
retf
dec
dec
pushf
dec
repnz
xchg
and
jmp
dec
xchg
add
ret
movs
jmp
dec
push
dec
ror
pop
sbb
fist
inc
jmp
dec
pushf
jmp
sub
dec
dec
inc
push
xor
mov
xchg
jmp
out
clc
cmp
jmp
sub
ret
or
push
pop
dec
js
jne
out
cli
mov
retf
lea
jb
push
or
jmp
push
dec
sub
push
xor
lds
rcr
mov
cmp
out
cli
shr
out
cmp
add
push
push
sub
push
and
add
leave
inc
cmp
add
sbb
mov
fdivr
fadd
pusha
call
or
lods
inc
xchg
rcl
test
xor
fcom
add
jne
mov
mov
xor
leave
pop
and
push
add
pop
sbb
push
inc
inc
mov
inc
cmp
push
or
sbb
loop
(bad)
mov
leave
add
fstp
pop
inc
sti
push
into
stos
pop
sub
hlt
pop
xchg
jne
call
pop
jb
jl
sti
enter
cld
and
mov
je
cmps
sbb
adc
mov
xchg
mov
fs
jl
and
data16
addr16
and
sahf
test
fs
arpl
add
cmps
xchg
bound
cld
in
inc
rcr
(bad)
(bad)
cmp
jecxz
xchg
sub
add
stos
cmps
pop
out
in
in
sub
jno
nop
jmp
xor
jecxz
xor
in
les
pusha
xchg
or
and
imul
and
xchg
or
fadd
fdivr
jmp
lods
shr
in
pop
ins
push
mov
aam
pop
or
pusha
sub
sbb
out
or
std
int3
xchg
sbb
sbb
outs
push
jo
or
and
loopne
cmp
in
test
or
push
add
leave
add
jmp
(bad)
in
icebp
and
mov
sub
out
aad
mov
mov
clc
cmp
mov
or
xchg
mov
jmp
mov
push
jb
push
jmp
adc
add
mov
inc
enter
jne
mov
clc
rcl
std
cmp
push
mov
(bad)
in
xchg
xchg
adc
mov
adc
ja
lahf
mov
imul
lods
cmp
cdq
jns
out
xor
jp
cs
cmovs
lods
in
jnp
leave
mov
dec
jmp
pop
inc
mov
int
sar
sbb
jle
fild
jg
sub
dec
cmps
pop
jmp
sub
inc
xchg
fwait
test
jp
jmp
jns
ins
mov
ja
jmp
dec
jae
jbe
jne
pop
and
cs
sbb
lock
add
loope
cmp
dec
out
inc
mov
or
mov
scas
sub
pop
mov
pop
test
xor
sbb
enter
mov
dec
loope
and
sbb
mov
xchg
in
mov
jne
and
inc
rol
test
test
xchg
xor
adc
test
jo
xchg
test
xchg
nop
fdivr
call
xor
retf
sub
mov
jmp
mov
test
lea
js
push
jne
bound
test
push
repnz
mov
mov
mov
add
and
jl
pop
rcr
add
mov
cwde
fs
mov
jmp
lds
pop
push
add
jmp
adc
xchg
sub
cmps
inc
mov
xchg
xchg
add
cdq
dec
xchg
sub
xor
(bad)
dec
and
adc
xchg
pushf
call
in
out
dec
cmp
test
jle
mov
fdiv
js
mov
adc
xchg
enter
push
ret
jg
ret
and
push
enter
adc
es
stc
push
ja
xor
add
enter
movs
shl
fmul
mov
gs
fadd
and
inc
ins
cdq
and
call
sbb
xchg
pop
sub
adc
sub
fwait
adc
inc
push
popf
push
add
push
xor
les
leave
push
repnz
lea
sub
adc
in
pop
mov
mov
push
cmp
test
imul
inc
sbb
push
jbe
mov
cmp
mov
mov
leave
cmp
ror
xchg
test
adc
loope
mov
push
inc
popf
ja
push
sub
je
bound
sahf
into
sbb
lahf
repnz
sbb
not
xor
addr16
or
add
mov
mov
adc
sub
push
dec
xchg
ins
push
mov
xchg
lahf
xchg
dec
sahf
sbb
xchg
test
dec
inc
pushf
or
das
loope
sub
test
sub
push
por
cs
and
movs
dec
fadd
ja
fsubr
jp
in
out
sbb
or
test
loopne
xor
addr16
or
enter
mov
push
stos
push
cmp
stos
sub
cld
test
xor
sub
dec
cmps
or
cmps
aam
cmps
xchg
sub
dec
jmp
jae
and
movs
dec
sahf
sbb
jbe
movs
jbe
inc
cs
mov
push
leave
enter
in
lods
cld
jmp
inc
scas
sbb
push
pop
jbe
div
mov
pop
pop
daa
push
sbb
pop
test
fs
ds
mov
jmp
mov
cmp
mov
scas
and
scas
cld
jmp
lods
cmp
stos
and
sbb
(bad)
ja
xchg
retf
retf
dec
in
in
mov
in
jmp
call
mov
ins
dec
dec
sahf
cmp
mov
adc
mov
cdq
in
and
sub
movs
cmp
cld
in
mov
iret
push
mov
mov
test
cmp
mov
loope
sub
fs
movs
fwait
clc
and
and
iret
in
and
push
sahf
xchg
lock
sub
fdiv
or
adc
cmps
inc
mov
mov
lods
add
jno
xchg
and
cmp
retf
and
fidivr
sub
pop
xor
out
add
sbb
cmps
and
imul
mov
or
test
sbb
lds
xchg
mov
das
call
jecxz
ds
dec
sub
sub
add
push
cwde
xor
and
mov
out
adc
mov
push
pop
push
imul
imul
pushf
test
rcl
xor
jmp
in
vcmpsd
int3
ret
push
(bad)
dec
js
mov
fadd
cs
pop
cmp
and
dec
js
in
push
sahf
in
fsub
sbb
push
je
add
sbb
enter
jmp
cdq
nop
push
in
aas
and
enter
call
(bad)
fsub
jmp
(bad)
aam
loop
adc
test
mov
imul
fs
or
dec
mov
lods
or
cmps
jbe
(bad)
jmp
dec
fnstcw
(bad)
frstor
mov
in
and
push
pop
xchg
ror
sub
xor
stos
push
jns
mov
jmp
lock
retf
retf
nop
call
jmp
push
aad
xchg
xor
inc
fwait
shr
xor
fs
add
and
push
cmp
pushf
mov
jmp
nop
(bad)
xlat
out
cmc
mov
jb
aam
jmp
push
xor
lds
sub
dec
sub
sbb
adc
add
enter
fadd
and
pop
ror
test
sbb
fsubr
add
cmp
cmp
xchg
sub
push
scas
adc
add
xchg
test
pop
push
fcom
(bad)
mov
cmps
repnz
ins
imul
pop
lea
nop
sub
fdivr
xchg
sar
data16
mov
ss
iret
aam
push
ror
and
mov
ins
jl
rcl
js
inc
dec
sbb
cs
in
mov
fidivr
ret
mov
fnstenv
sbb
leave
loopne
push
fsubp
imul
jl
cld
jmp
mov
dec
mov
fldcw
fcomp
cdq
loop
lods
ret
and
jecxz
jnp
pushf
in
in
in
loop
retf
push
mov
xor
push
mov
iret
dec
dec
and
or
fdivr
test
popf
fdivr
and
sub
ins
push
mov
int
adc
imul
pop
xchg
adc
xchg
or
sbb
jmp
add
jo
inc
scas
dec
jle
nop
sbb
xchg
fild
hlt
(bad)
rcl
jo
add
add
mov
fdiv
cmps
ins
je
add
cmp
stos
pop
inc
sbb
and
pop
push
test
add
loopne
nop
adc
movs
sbb
sar
enter
jp
jmp
or
push
sbb
sub
bnd
ror
dec
repnz
retf
add
pushf
jmp
xor
jmp
fist
jmp
mov
mov
in
into
movs
out
pusha
xchg
push
or
fs
out
pop
dec
enter
mov
jmp
test
xchg
mov
dec
mov
out
retf
xor
push
xor
and
cmp
jmp
test
repnz
test
(bad)
leave
int3
nop
out
inc
stc
adc
dec
adc
sub
movs
bnd
jne
shr
pushf
fidiv
jmp
dec
fld
out
xor
xor
mul
or
pop
xchg
add
adc
add
stc
mov
sub
mov
and
sti
push
cld
and
popf
cli
sub
xchg
xor
stc
xor
clc
int3
sbb
fnstcw
test
iret
mov
mov
std
nop
sub
(bad)
lods
mov
mov
in
inc
xchg
call
push
cwde
mov
loope
add
cld
jmp
cmp
loopne
addr16
add
retf
or
add
mov
mov
push
and
pop
mov
push
hlt
adc
and
cmp
fsub
dec
adc
fisubr
add
inc
or
jmp
add
je
jno
xor
add
mov
pusha
loope
enter
push
mov
ins
jmp
hlt
js
or
pop
adc
cmp
inc
xor
hlt
test
inc
cmp
ins
sbb
fucomp
sbb
or
or
ret
js
imul
xchg
add
or
or
jo
nop
in
outs
pop
ja
scas
mov
push
das
lock
inc
enter
es
and
xor
xchg
out
fcom
popf
mov
or
dec
push
mov
dec
ss
and
add
push
loopne
dec
xor
cmp
pop
test
xchg
mov
adc
jb
adc
adc
ret
or
out
shl
adc
mov
mov
adc
push
or
out
xchg
pop
pop
enter
sbb
in
out
sbb
xchg
xchg
cwde
out
sbb
in
sbb
popf
lock
sbb
mov
movs
cdq
dec
sbb
sbb
call
test
push
sar
jge
call
pop
mov
inc
pusha
out
(bad)
push
cdq
xchg
pop
push
xor
arpl
or
jb
mov
fst
and
and
and
push
adc
sbb
jb
inc
and
loopne
and
and
les
sbb
and
and
and
sub
and
enter
sub
es
sub
and
cmp
imul
add
mov
sub
xor
sub
sbb
xor
or
xchg
mov
and
xchg
sbb
clc
or
test
lock
pop
leave
push
mov
aas
lea
dec
rcr
or
pop
loope
mov
rcl
or
and
dec
call
stos
xchg
cwde
out
rcl
retf
dec
das
out
mov
add
adc
xchg
adc
mov
inc
dec
jl
add
movs
test
test
in
repz
imul
in
dec
rol
push
xchg
pop
dec
ss
in
test
mov
call
mov
dec
loopne
pop
mov
and
adc
nop
jne
outs
dec
loope
or
push
adc
or
in
and
mov
xchg
iret
sub
mov
mov
cmovno
ss
sub
mov
cmps
and
data16
movs
mov
imul
test
inc
sbb
dec
pop
xchg
pop
xchg
mov
call
pop
push
add
dec
push
jnp
(bad)
fwait
add
push
stc
mov
mov
pop
cmp
or
jne
push
push
mov
jmp
pop
xor
lahf
out
or
sub
xchg
cmp
call
mov
fisub
fisubr
daa
(bad)
jmp
push
ror
or
inc
loopne
push
mov
in
jnp
mov
add
add
aaa
adc
push
test
(bad)
mov
pop
and
add
enter
aam
xor
aam
mov
add
in
inc
lods
and
in
sbb
nop
inc
loope
movs
fstp
pop
add
std
(bad)
and
inc
cmp
cwde
ss
xor
inc
mov
inc
dec
dec
cmp
or
jo
mov
inc
jo
ror
push
cmps
cmp
mov
sub
sub
push
inc
cdq
sbb
stos
dec
ins
cmps
fisubr
lock
dec
jae
and
xor
data16
or
mov
or
aam
loop
jl
fwait
xchg
xchg
mov
jle
sub
dec
fwait
mov
lea
out
popa
bound
inc
and
jb
out
dec
and
aad
dec
push
mov
add
pop
pop
sbb
jae
push
ror
stos
pop
push
mov
and
rcl
xchg
cld
enter
add
nop
dec
dec
add
cmc
and
sub
sub
dec
in
dec
outs
push
adc
popa
mov
sbb
or
out
inc
icebp
add
sbb
push
daa
daa
xchg
fcomp
inc
pop
push
mov
pusha
in
add
xchg
inc
and
and
jp
push
mov
mov
push
dec
push
xchg
dec
xor
push
dec
ss
dec
cmp
out
call
inc
mov
add
inc
mov
push
shrd
sub
or
sbb
clc
xchg
mov
add
data16
dec
das
sbb
in
mov
pop
adc
push
pop
movs
dec
and
or
nop
sub
sub
lods
or
sub
adc
repz
lock
pop
pop
mov
mov
fcomp
inc
ret
jo
test
jne
and
mov
mov
in
cmp
add
pop
das
scas
xor
adc
add
push
and
in
add
push
jns
adc
loopne
arpl
dec
adc
fsubr
shr
mov
sub
in
mov
xchg
or
js
jno
mov
mov
jnp
add
add
sub
and
int
mov
fs
or
fld
mov
add
imul
add
enter
mov
daa
daa
xchg
cmp
ins
xchg
or
call
test
push
add
inc
mov
js
into
dec
cmp
dec
sbb
test
xor
jo
cdq
inc
sub
jo
ror
inc
push
dec
xchg
inc
dec
jno
sbb
sbb
cld
out
dec
or
and
jb
jae
dec
inc
dec
cld
out
pop
je
and
jne
xlat
jbe
ins
sub
int
ror
jb
bound
and
in
pop
inc
nop
push
dec
xor
and
ja
mov
xor
arpl
mov
xor
mov
dec
xor
and
mov
cmp
jns
jp
out
sbb
push
fsub
pop
xchg
pop
jle
mov
add
cmp
jmp
sub
mov
adc
and
cmp
fs
push
rol
sbb
pop
mov
enter
add
add
into
mov
pop
mov
jno
and
jmp
pop
sub
mov
push
sub
jl
das
jns
add
jne
mov
test
xor
push
or
sbb
xchg
jno
or
push
mov
cmp
sub
xor
test
inc
jmp
in
add
mov
outs
add
xchg
or
add
test
mov
lods
shl
and
sbb
aad
mov
in
jmp
ror
jmp
inc
xchg
lods
mov
xchg
fsubr
xchg
test
jmp
sub
jbe
push
shl
lock
or
xchg
fst
nop
xchg
clc
jmp
dec
push
cmovs
movs
or
shr
adc
or
jmp
clc
rcl
and
and
out
pop
pusha
push
lods
jle
push
adc
add
lock
lock
test
dec
jo
mov
call
(bad)
xchg
sbb
icebp
movs
xchg
stos
add
adc
and
cmc
bound
inc
mov
jmp
cdq
add
jbe
mov
aam
mov
dec
push
mov
push
add
adc
retf
mov
ja
pop
add
mov
cmps
dec
or
xor
cdq
push
cwde
jo
xchg
dec
add
xor
and
clc
inc
or
call
jmp
loopne
cmp
inc
cmps
fwait
call
or
lock
enter
xor
mov
fnsave
add
xor
add
in
and
mov
or
movs
mov
into
xor
arpl
mov
enter
cwde
jmp
cmp
outs
ss
sahf
mov
sub
mov
push
push
mov
inc
xchg
jmp
add
rcl
add
shl
sub
nop
mov
xor
fwait
shl
xor
std
pop
sbb
rol
push
dec
inc
adc
shl
rcl
and
lock
cdq
dec
ficom
int3
cmovp
ins
call
pop
test
push
hlt
xchg
dec
call
push
and
adc
add
push
lea
or
or
sar
mov
gs
push
pusha
push
push
in
call
add
sbb
sbb
and
test
call
jb
inc
cmp
pusha
shr
test
mov
mov
push
and
add
mov
and
movs
inc
or
xor
mov
jmp
ror
push
lahf
push
xchg
mov
dec
dec
jmp
xor
add
pushf
(bad)
leave
mov
lock
ficom
xor
xchg
push
push
xchg
daa
stc
leave
add
mov
xor
call
xchg
retf
adc
sbb
mov
mov
(bad)
and
push
mov
push
div
cmps
pop
and
cmp
test
or
mov
add
mov
test
and
ret
add
test
sbb
enter
stos
stos
pop
enter
jmp
jmp
jmp
and
mov
adc
rol
xor
mov
jmp
and
mov
dec
call
sub
and
scas
outs
pop
jnp
mov
jno
jle
mov
pop
pop
dec
push
xchg
shl
loopne
xor
pop
repnz
mov
nop
dec
sahf
aaa
add
shr
(bad)
jnp
mov
mov
mov
or
sbb
fsub
imul
imul
mov
push
cwde
xchg
mov
mov
sub
push
mov
push
or
test
push
gs
jmp
or
mov
mov
pop
jb
clc
mov
rcl
in
dec
push
mov
sub
pop
dec
mov
mov
push
aad
pop
sti
scas
gs
fadd
and
adc
add
mov
test
cdq
sub
rol
shl
es
add
movs
or
pminsw
sahf
int3
into
sub
mov
fiadd
mov
mov
lods
xchg
arpl
xchg
retf
rol
fisttp
push
mov
mov
mov
jne
mov
jg
shr
mov
jmp
(bad)
cmps
pusha
adc
mov
xchg
(bad)
cld
stos
add
jmp
mov
ret
cld
pop
jmp
cld
out
lds
push
dec
jae
popa
push
or
push
mov
jb
xor
(bad)
dec
inc
cdq
xchg
out
jg
xor
xor
add
enter
inc
jb
xor
and
les
jmp
movs
sub
adc
mov
adc
push
dec
xlat
rcr
cmps
movs
inc
sbb
retf
sbb
dec
xor
and
arpl
imul
out
xor
int
dec
xchg
xor
xor
dec
jne
ret
les
fistp
retf
test
push
and
xchg
pop
push
mov
rcl
iret
repnz
shr
lods
xchg
jmp
ret
sbb
jmp
sbb
sbb
and
dec
sbb
popf
retf
retf
test
push
and
int
and
jne
imul
call
popa
dec
add
ins
xchg
popa
adc
jmp
xchg
in
dec
dec
aam
int3
adc
cmp
jb
dec
mov
aad
out
push
(bad)
fadd
bound
dec
cmps
sub
loopne
ds
xchg
sub
fsubr
sub
jmp
enter
add
rcr
sbb
lea
dec
ror
cmps
rcr
xchg
sbb
xor
ror
push
js
mov
pop
mov
dec
shr
test
pop
push
add
mov
push
mov
and
push
mov
xor
mov
xchg
jnp
inc
jmp
add
jg
inc
jb
xor
and
and
dec
jl
(bad)
popa
loope
pop
sub
mov
pop
add
xor
mov
fisttp
nop
mov
leave
loope
cmp
sub
inc
inc
loop
and
adc
adc
enter
jecxz
mov
in
and
in
mov
into
or
dec
sub
leave
in
out
dec
sbb
jmp
aam
dec
jecxz
jne
push
xor
pop
js
pusha
push
test
lea
or
ficom
idiv
mov
sbb
push
jmp
aas
dec
sbb
add
or
sbb
int
loop
sub
or
ins
dec
add
adc
movs
test
clc
and
enter
adc
mov
leave
leave
enter
add
retf
aad
fcom
add
push
fs
sub
and
xchg
adc
push
leave
push
lahf
mov
sub
lods
movs
xor
xor
mov
mov
idiv
sub
mov
imul
xchg
cmp
add
xchg
inc
add
pusha
rcr
fdivr
pop
je
inc
inc
or
mov
loope
push
xchg
push
loope
fstp
ds
xchg
xchg
and
mov
cmp
mov
pop
dec
push
and
hlt
mov
or
xchg
ret
jne
xchg
mov
push
mov
es
ret
inc
and
retf
inc
shr
sbb
int3
add
inc
shr
push
stc
mov
gs
push
sar
lods
adc
jbe
imul
xor
repz
mov
push
or
pop
repnz
enter
add
jo
xchg
xor
xchg
push
push
adc
rcr
inc
and
lods
add
and
push
pop
sbb
iret
sbb
sar
or
call
sbb
sbb
outs
xchg
outs
rcr
and
and
es
mov
stc
or
pusha
pop
push
lods
inc
sbb
call
int
or
mov
add
adc
pop
sub
adc
cmps
xor
popa
xor
ds
arpl
mov
jae
inc
loopne
dec
or
xor
pusha
lods
imul
push
push
sbb
add
push
nop
arpl
cwde
test
adc
cwde
sbb
pushf
xchg
icebp
add
inc
shl
push
jne
mov
test
adc
inc
fwait
out
scas
stos
add
popf
pop
sub
adc
inc
adc
dec
movs
mov
xor
adc
in
lea
mov
xchg
adc
push
inc
or
enter
xchg
mov
xor
jb
rcl
push
repnz
in
jns
push
xor
inc
repnz
xchg
jmp
pop
sbb
call
adc
add
sbb
adc
sti
mov
or
sbb
adc
and
add
pusha
cwde
and
add
movs
hlt
test
xor
xchg
sbb
sbb
mov
call
xchg
sbb
(bad)
and
dec
in
movs
js
test
jl
push
and
xor
pusha
sub
mov
and
push
test
xchg
pushf
add
in
test
xchg
push
scas
and
add
mov
push
daa
imul
sub
mov
dec
push
clc
sub
ds
imul
adc
mov
movs
fdiv
leave
stos
fs
sahf
jl
js
aam
dec
push
jo
xchg
xor
jb
push
dec
mov
xor
mov
hlt
add
scas
dec
sub
and
repnz
xchg
sbb
daa
and
cmp
ja
dec
jb
nop
mov
mov
das
xor
xor
xor
ja
jge
fwait
xor
xor
xor
dec
mov
mov
lea
sub
xor
loopne
add
mov
mov
in
adc
stos
jmp
sbb
sub
xor
adc
(bad)
rcl
xor
push
mov
pop
mov
adc
aaa
mov
enter
mov
ins
cmp
sbb
cmp
jns
rcl
push
in
pop
mov
dec
mov
cmps
jge
div
ror
fist
shr
sbb
cmp
sbb
sbb
cmp
sbb
sbb
cmp
test
ss
push
int3
cwde
xchg
call
jb
xchg
sub
jb
add
xchg
push
movs
inc
leave
inc
enter
and
add
inc
xchg
test
ret
outs
and
xchg
xlat
cdq
ins
inc
mov
je
clc
cmovbe
and
movs
jae
gs
inc
in
mov
and
fs
fisttp
shl
xchg
mov
mov
inc
xchg
push
pop
xor
lods
lahf
mov
adc
test
popf
push
es
dec
push
pop
xchg
jnp
mov
ja
pop
inc
or
or
inc
mov
mov
das
jmp
xchg
int3
lea
push
cmp
mov
lea
jno
ja
sbb
and
push
jno
ins
xchg
dec
push
push
xchg
add
and
mov
and
rol
push
dec
cmp
ret
xor
jmp
push
inc
inc
mov
ror
adc
mov
mov
push
mov
shr
cmp
dec
push
(bad)
mov
push
add
call
xor
and
ins
data16
jbe
cli
jmp
jg
hlt
jg
jl
cmp
jae
push
cs
push
test
push
jp
mov
mov
(bad)
hlt
das
jo
xchg
mov
inc
stos
shr
dec
mov
inc
in
xchg
adc
mov
inc
or
push
adc
xchg
(bad)
xchg
pop
inc
push
xor
inc
pop
stos
movs
adc
xchg
(bad)
dec
(bad)
mov
xchg
(bad)
fbld
mov
dec
pop
ins
adc
inc
push
add
lock
adc
xor
pop
push
sbb
call
lock
mov
iret
movs
imul
data16
push
test
push
mov
mov
test
inc
push
int
ret
mov
arpl
movs
in
in
cmc
pusha
xchg
add
test
mov
jbe
or
pusha
dec
add
in
adc
push
cmp
xchg
push
jp
lds
ins
call
jo
add
fcom
dec
int
lock
push
sub
or
loopne
and
push
pop
rol
enter
cmp
push
xchg
in
mov
pop
retf
mov
(bad)
retf
push
add
rcl
pop
jp
and
inc
out
lock
das
and
xor
dec
pop
cmps
push
adc
inc
jns
inc
gs
jo
call
ficom
je
push
push
add
js
call
test
mov
inc
sbb
dec
ja
cmp
test
inc
xchg
sbb
sub
enter
push
xor
mov
cs
call
push
cmp
xor
scas
or
sbb
out
cmps
add
mov
fmul
add
imul
dec
fcomp
ins
(bad)
or
retf
int
ss
cmp
dec
jl
mov
out
push
dec
jns
iret
inc
xor
mov
sub
icebp
jg
lea
test
add
shr
inc
push
pop
inc
sbb
ror
mov
movs
mov
comiss
jmp
iret
push
shr
scas
(bad)
rcr
in
and
add
mov
shl
lds
adc
add
sbb
xor
mov
push
xchg
or
add
int3
or
les
loopne
test
or
lock
out
inc
xor
or
and
fdiv
iret
or
in
lock
daa
dec
jl
hlt
push
lock
xchg
and
add
sub
xor
int3
lea
or
push
adc
mov
cmc
sub
inc
dec
cmp
dec
adc
hlt
push
push
jno
les
or
adc
xor
scas
jo
pop
retf
jbe
fs
mov
nop
sub
adc
or
adc
pop
sbb
test
push
call
les
dec
xor
popa
sbb
sub
and
jg
das
in
aaa
add
inc
ins
add
fwait
dec
add
dec
es
xchg
es
jl
in
push
or
or
pop
add
scas
sahf
fstp
mov
xor
or
and
lock
addr16
and
in
lea
add
(bad)
fnstenv
inc
inc
cld
add
shl
pop
mov
js
rcl
cwde
pop
xor
sub
or
pop
push
lods
xchg
mov
ins
fcomp
adc
mov
adc
xor
xchg
mov
pop
sub
adc
aas
adc
mov
add
xchg
push
(bad)
cdq
and
leave
(bad)
xor
sub
jo
xor
xchg
pop
jmp
test
xor
mov
aam
jo
mov
push
les
adc
jno
sub
add
scas
mov
cmc
in
cmp
test
dec
add
adc
loope
xchg
(bad)
fcmovbe
sbb
xor
add
cmp
xchg
mov
adc
dec
adc
ja
test
adc
and
add
stc
sbb
jmp
sub
push
or
and
hlt
dec
xchg
aaa
mov
call
mov
loopne
jae
sbb
movs
repnz
push
aas
aam
sbb
push
jne
mov
mov
(bad)
add
mov
shr
sbb
jecxz
xor
and
lahf
xor
fimul
add
push
les
shl
or
ins
pop
cmp
or
xchg
pop
jne
or
repnz
mov
hlt
mov
adc
push
shr
rcr
push
pop
ror
jnp
push
sbb
cld
dec
mov
mov
cdq
in
mov
stos
mov
mov
xor
mov
mov
adc
jmp
mov
ins
adc
movs
or
(bad)
xchg
push
mov
leave
push
xor
push
sbb
push
and
leave
ret
test
arpl
pop
cdq
jo
xchg
inc
or
fild
(bad)
retf
adc
sub
xor
xor
hlt
sub
adc
push
jmp
add
or
xchg
inc
dec
lods
scas
jns
ja
leave
mov
je
xor
dec
outs
inc
or
sbb
xchg
and
xchg
push
aas
pop
and
dec
pop
or
arpl
add
push
mov
xchg
or
out
dec
xchg
and
mov
mov
cmp
push
and
les
gs
sbb
hlt
aas
test
hlt
mov
inc
call
sbb
dec
push
push
es
xor
dec
enter
je
push
pop
sub
jmp
(bad)
ss
sub
pop
neg
xor
add
call
and
loopne
jb
sub
sub
jns
dec
push
inc
das
scas
fiadd
retf
dec
push
pop
push
jb
dec
dec
xor
xor
adc
inc
or
sbb
aam
aam
in
mov
add
mov
mov
mov
sub
jecxz
repnz
inc
sub
add
call
dec
daa
and
add
lods
stos
cmps
out
push
inc
cmp
and
dec
push
mov
sbb
add
and
sbb
sbb
test
jo
xchg
dec
rol
call
movs
nop
pop
adc
push
inc
push
mov
jo
jbe
aam
in
stos
mov
lds
or
xchg
mov
push
pushf
cwde
xor
outs
add
dec
cmp
mov
adc
and
inc
and
(bad)
lods
xchg
je
sbb
and
or
mov
xor
xchg
rcr
pop
adc
mov
dec
pop
xchg
mul
dec
push
call
dec
adc
and
and
jne
xchg
cmp
ds
inc
call
mov
imul
or
inc
inc
and
inc
adc
and
cmp
test
popf
rcl
push
xchg
dec
lods
xchg
sub
dec
inc
push
cmps
sub
add
loop
inc
test
push
jbe
ret
inc
sub
mov
inc
push
ror
add
adc
enter
adc
test
dec
mov
push
sub
mov
out
stos
sbb
test
inc
cwde
dec
cmps
xchg
inc
inc
inc
mov
lods
nop
jb
inc
call
mov
mov
mov
or
lods
jne
xchg
xor
adc
ret
cli
adc
push
sbb
daa
rcl
mov
push
sahf
sbb
test
pop
mov
and
add
daa
data16
movs
add
dec
sub
inc
and
mov
dec
dec
lock
or
push
sahf
fcomi
pushf
push
int3
push
arpl
sbb
sbb
lods
es
loopne
inc
in
push
leave
sub
sub
add
push
int3
int3
rcl
push
push
cdq
stos
cmp
xchg
test
rcl
dec
sbb
stos
mov
dec
ss
ss
enter
cmp
dec
add
es
mov
push
popf
jbe
push
movs
dec
pop
inc
dec
push
sbb
jbe
dec
push
inc
pop
jno
pushf
mov
pop
mov
xchg
test
in
pop
int
pop
sbb
pop
sbb
imul
pop
les
inc
test
mov
mov
sub
aad
clc
xor
cmps
mov
jo
movs
adc
popa
and
jmp
sbb
arpl
retf
jo
fs
and
lods
lock
inc
aam
addr16
nop
inc
cdq
loopne
pushf
jo
popa
scas
fwait
push
scas
mov
test
jno
push
sub
xchg
mov
mov
mov
dec
mov
call
retf
test
and
sub
or
pop
pop
aam
mov
movs
add
jne
push
pop
add
jne
leave
pop
xor
shr
es
add
mov
sub
xor
pop
int
cs
mov
test
daa
pop
mov
xchg
je
jle
jb
repnz
push
fild
nop
rcl
fist
(bad)
xchg
stc
xchg
mov
outs
jmp
lock
mov
xchg
adc
or
daa
sbb
pop
or
mov
fadd
sub
add
jne
ret
push
or
inc
je
inc
enter
cld
pop
and
daa
pop
jmp
je
movs
or
push
or
addr16
add
nop
add
jle
ss
scas
sbb
fbld
in
jge
push
push
mov
and
out
out
nop
test
jns
add
ds
lods
dec
push
push
test
and
jge
or
add
or
or
or
xchg
push
inc
ret
aam
pop
clc
popf
(bad)
lods
pop
xor
push
mov
push
popa
inc
mov
or
xchg
and
and
lods
and
in
nop
sbb
(bad)
and
push
ret
adc
sub
add
stc
and
int3
loopne
xor
mov
dec
ins
adc
xor
or
xchg
in
inc
sub
adc
sub
add
mov
or
jmp
rol
add
in
test
xor
pop
and
push
pop
(bad)
nop
or
cmp
pusha
shl
pop
xlat
adc
mov
pop
adc
retf
jnp
push
sub
and
mov
test
data16
adc
dec
adc
pop
push
mov
mov
mov
enter
outs
sbb
adc
sbb
repnz
push
xor
(bad)
or
call
icebp
sbb
ret
add
dec
aam
cmp
push
add
nop
rcl
shl
xor
fild
jmp
sbb
add
sbb
push
inc
call
or
jns
adc
and
and
push
push
sbb
xor
sbb
mov
aam
xchg
sbb
ret
mov
sbb
add
sbb
fs
ret
sub
push
mov
push
aad
pop
jl
and
push
leave
cli
cmps
dec
fldenv
push
mov
mov
sbb
jo
sbb
ret
adc
scas
cmp
or
cdq
nop
addr16
loopne
in
push
pushf
in
mov
int
pop
(bad)
and
and
and
push
xor
and
cmps
sub
push
lods
call
xchg
jl
push
ins
mov
mov
inc
jg
mov
repz
xchg
int
lock
push
outs
ficomp
jnp
loop
movs
cwde
jbe
dec
call
in
dec
mov
leave
adc
jnp
mov
iret
shr
imul
push
jmp
push
push
mov
add
movs
cwde
xchg
sbb
sar
mov
loope
daa
out
add
retf
outs
mov
mov
jle
mov
imul
movs
inc
inc
or
mov
rol
fnstsw
or
popa
xchg
mov
outs
pop
add
inc
daa
xor
push
dec
sub
add
add
sahf
add
aam
rol
xor
jg
push
inc
cmp
mov
fbld
or
pop
sub
mov
dec
add
adc
sub
jg
add
push
or
or
lahf
sbb
ror
lock
enter
dec
test
std
pop
mov
call
enter
or
test
push
jb
int
in
push
or
imul
pop
or
std
cmp
jno
sbb
inc
dec
jmp
dec
xchg
in
pop
fadd
inc
aaa
pop
dec
or
xor
ins
inc
loop
cmp
call
mov
das
add
jne
push
bound
adc
in
or
ret
jge
das
ret
ja
push
cmps
rcr
xchg
push
cmp
fsubr
add
add
add
sbb
jae
nop
fwait
cmp
arpl
xchg
xchg
push
xchg
jp
adc
dec
mov
dec
jne
push
dec
sub
push
fmul
adc
dec
movs
push
test
das
call
stos
pop
dec
pop
inc
pop
cwde
outs
inc
fiadd
test
or
(bad)
inc
sub
movs
in
movs
pop
sbb
call
pop
repz
adc
inc
jb
and
adc
push
inc
push
popf
jo
xchg
inc
pop
hlt
cmp
mov
and
inc
sbb
sbb
(bad)
int
ror
sbb
and
mov
loop
push
mov
push
mov
into
dec
cdq
pop
mov
mov
lock
adc
imul
test
dec
pop
aas
fnstcw
sar
mov
fcom
xor
pop
xchg
push
jne
jmp
mov
add
aam
imul
mov
sub
cmps
adc
xchg
adc
add
test
cdq
cmps
or
push
leave
push
dec
movs
cmp
js
sub
sub
sub
sbb
cmp
push
jns
sbb
ja
add
sbb
mov
sbb
sbb
les
cmps
call
fbld
push
pusha
dec
push
mov
add
outs
mov
adc
pop
push
nop
add
push
jns
and
jo
jbe
push
jbe
sub
sub
movs
repnz
cmp
in
push
sbb
mov
or
xchg
retf
sub
adc
cmps
fmul
or
sub
add
inc
pop
in
inc
data16
add
xchg
dec
pop
enter
inc
xlat
mov
sub
jns
add
mov
push
call
nop
add
in
add
inc
sahf
push
push
add
pop
enter
inc
fcom
aam
xchg
and
add
mov
(bad)
rcl
cvtpi2ps
sbb
dec
gs
mov
lods
and
add
(bad)
movs
xor
les
xor
push
std
movs
add
adc
es
pop
xor
lds
push
jb
or
rcl
or
push
and
inc
pop
(bad)
xor
push
jb
or
add
enter
adc
dec
push
ins
(bad)
adc
push
sbb
or
nop
mov
mov
dec
add
add
xlat
add
push
or
or
jb
push
stos
ret
inc
arpl
pop
sbb
add
enter
add
push
or
pusha
inc
lock
sahf
adc
lods
pop
adc
or
in
push
es
shl
or
loope
fwait
mov
rcl
dec
sub
mov
add
cmp
and
cwde
cmp
adc
ins
pop
ja
push
push
push
push
add
(bad)
sbb
push
pop
sbb
cmps
sbb
pusha
stos
add
sbb
dec
push
dec
pop
sub
aam
and
popa
push
mov
mov
dec
call
das
and
add
mov
test
pop
push
sub
and
jg
jg
mov
aam
sbb
outs
sub
dec
aam
leave
fnsave
mov
add
or
pop
xchg
mov
lea
inc
lods
dec
in
push
push
push
lds
pop
push
retf
aam
push
add
mov
scas
push
pop
test
hlt
pop
lods
int
add
add
or
add
imul
rcl
add
sub
xchg
pop
mov
push
test
mov
cmp
jno
push
or
in
in
or
add
imul
dec
jl
in
stos
and
stos
sub
adc
adc
xor
or
push
push
cwde
add
and
nop
pop
push
inc
or
xor
sbb
or
and
or
enter
or
pushf
inc
test
inc
cmp
cli
xchg
int3
std
daa
setae
adc
shl
in
lock
pop
dec
test
jmp
add
lods
or
xchg
adc
xchg
std
sar
(bad)
std
push
mov
enter
inc
fsub
dec
inc
xchg
pop
inc
dec
push
in
les
jle
in
int3
sbb
sbb
cmovne
loopne
add
dec
xor
das
sbb
cmps
add
mov
push
sbb
sar
std
cmp
xchg
add
aam
add
push
xor
ror
pusha
sub
add
sbb
sub
jmp
adc
or
mov
out
push
(bad)
or
or
movs
nop
sbb
mov
jo
inc
ins
(bad)
and
dec
loopne
pop
movs
addr16
lds
int
or
into
mov
mov
xchg
pop
xchg
(bad)
call
gs
or
pop
add
movs
popa
dec
pop
add
rol
fsubr
mov
pop
xor
mov
adc
inc
movs
and
ds
add
(bad)
jbe
mov
jg
fimul
sub
cmp
jbe
mov
mov
push
sti
jne
pop
jg
rcl
add
sub
mov
dec
xor
xor
dec
popa
movs
and
mov
pusha
jmp
test
leave
pop
out
imul
push
clc
sub
ret
push
pop
sub
jno
pusha
mov
js
mov
push
xor
push
pop
push
pushf
xor
adc
add
mov
clc
(bad)
mov
test
inc
cmp
push
jp
push
retf
mov
fisttp
lahf
sahf
ficom
jecxz
clc
pop
dec
inc
sbb
shl
cmp
mov
cmc
jmp
push
call
or
xor
jp
add
mov
add
mov
mov
jns
ins
js
les
add
add
aad
sub
mov
inc
pusha
jp
call
movs
cld
mov
jae
sub
jmp
and
push
mov
js
pusha
aam
and
fadd
pop
sti
or
mov
cmp
and
or
mov
(bad)
push
mov
dec
jecxz
or
or
ins
or
push
mov
mov
mov
push
movzx
inc
adc
xor
je
push
xchg
cmp
add
fwait
cmp
cmp
shl
retf
sub
xor
push
xor
shl
cmps
sub
cs
mov
in
or
mov
scas
rcl
mov
push
or
or
mov
icebp
and
jae
movs
push
and
jae
jp
fwait
lea
sub
sbb
movs
iret
shr
sub
mov
test
fistp
sbb
(bad)
and
jb
pushf
rcl
add
stos
and
movs
mov
test
fadd
shr
enter
fstp
dec
adc
add
push
inc
test
je
loopne
fcom
xchg
pushf
cmp
dec
ficom
cdq
mov
sahf
inc
inc
jne
inc
or
add
sbb
or
dec
loop
mov
adc
cmp
shl
sub
retf
push
nop
pop
jbe
add
cmp
push
and
clc
mov
movlps
sbb
or
jb
mov
ret
push
jb
lahf
repz
mov
or
jb
pusha
test
adc
mov
idiv
mov
mov
jl
xor
mov
pop
adc
ja
aam
dec
xor
in
adc
ret
xchg
(bad)
cmp
sub
shr
xor
inc
xchg
jae
mov
jbe
test
inc
or
in
push
or
mov
sbb
dec
test
adc
add
jge
jmp
sbb
sub
mov
xor
mov
cmp
adc
ror
bound
loopne
add
or
inc
leave
or
or
addr16
push
push
mov
call
icebp
test
js
and
clc
inc
dec
pop
shl
add
sub
pusha
imul
xchg
enter
add
fs
dec
(bad)
loopne
xor
xor
and
xchg
or
pop
push
cmp
xchg
rcr
arpl
cmp
jmp
cmp
push
jmp
std
jmp
cmp
jbe
mov
fldcw
sub
test
ja
das
or
mov
cs
jae
stc
pushf
push
rcr
add
jne
push
or
pop
stos
sti
pop
push
daa
push
or
xlat
push
ins
ss
data16
mov
je
xor
repz
das
nop
cmps
mov
adc
cmp
xchg
or
jne
dec
add
dec
adc
xchg
and
dec
test
movs
inc
fsub
loopne
cmp
sbb
and
mov
fwait
dec
ss
inc
xor
xchg
and
daa
clc
and
jle
mov
call
and
mov
push
ins
addr16
and
fdivr
and
xor
and
adc
dec
and
mov
pop
lahf
push
adc
or
ret
push
sub
mov
pusha
sbb
cdq
lock
retf
fisttp
mov
xchg
xor
xor
jns
ror
or
mov
cmps
or
retf
shr
push
retf
sbb
dec
sub
cwde
push
sub
sbb
xor
jae
cmp
rcl
repz
push
hlt
mov
adc
cmp
pop
xor
iret
or
add
(bad)
fs
and
cmp
lods
jecxz
add
shl
shr
sub
lods
add
xchg
mov
add
lock
ror
push
js
movs
(bad)
cld
push
cmp
into
mov
add
hlt
ret
inc
cs
jmp
and
fisttp
rcl
xchg
rol
mov
push
imul
ja
daa
add
jp
pop
leave
jae
aas
dec
adc
ficomp
and
ret
jne
bnd
hlt
pusha
arpl
xchg
dec
mov
mov
or
add
pop
sbb
mov
and
(bad)
ins
in
push
adc
add
mov
cli
jne
imul
lock
loopne
adc
mov
and
jmp
adc
push
or
inc
dec
xor
outs
xchg
xor
loopne
mov
ror
movs
push
mov
outs
cmp
jne
push
scas
shl
push
jo
cwde
push
retf
dec
pop
mov
push
call
mov
jbe
shl
push
add
push
in
ins
ret
mov
add
push
retf
and
lock
xchg
add
add
ficomp
sbb
xchg
rol
pop
add
push
and
push
fwait
mov
pop
into
pusha
sbb
jns
push
mov
pop
mov
pop
ror
test
or
push
cmp
push
xor
das
push
cmp
push
lods
or
add
cs
cmp
push
shr
test
or
mov
add
test
or
fld
inc
pop
cmp
add
loopne
outs
xchg
popf
dec
push
or
sbb
sbb
fdiv
mov
in
and
sar
pop
push
or
mov
add
adc
cdq
xor
cmp
jb
test
push
les
in
inc
inc
ret
mov
adc
ss
add
mov
cmp
mov
shr
loop
or
push
cld
hlt
jae
and
mov
jae
out
add
outs
cmp
push
mov
bound
enter
dec
sbb
add
movs
pop
sub
out
jae
xchg
xchg
mov
sub
inc
sti
adc
cmp
adc
pop
dec
dec
repnz
adc
xchg
sub
or
add
loopne
les
push
and
int3
or
add
and
and
adc
clc
pop
mov
dec
cmp
xchg
rcr
pop
dec
rcl
xchg
rol
cmp
lods
add
mov
ficom
add
adc
push
mov
add
or
mov
mov
cwde
fldenv
add
ret
sar
jb
sahf
enter
add
mov
mov
call
push
outs
sub
cld
inc
mov
sti
sbb
inc
ins
push
add
mov
pop
or
cmp
add
push
pusha
and
int
ds
xchg
mov
pop
push
imul
fisubr
rcl
mov
xor
cmp
or
cmp
adc
add
outs
cmp
add
jge
jl
pusha
rol
and
(bad)
pop
popa
inc
(bad)
add
push
adc
dec
cmp
mov
xchg
cmps
lds
icebp
dec
faddp
rol
jo
call
cmp
xor
jbe
stc
add
jl
ror
jge
fild
jnp
cld
sub
and
sahf
lods
into
js
inc
fsub
imul
std
imul
jmp
dec
test
cmp
pop
imul
sub
das
iret
inc
push
sbb
jne
out
cmp
mov
or
pop
mov
sbb
shl
or
pop
daa
sub
cmp
lds
mov
test
test
std
jne
pop
or
retf
push
xor
inc
sbb
inc
or
inc
fsubrp
lods
popa
and
and
add
cmps
pop
cmp
add
push
enter
or
or
pop
or
jnp
sbb
(bad)
outs
fdivr
dec
xor
dec
dec
imul
push
push
inc
test
push
fnstcw
das
add
ss
push
aaa
push
jle
jnp
fwait
int
cmp
cli
aas
dec
jecxz
out
ins
cmp
mov
popa
lds
jle
add
jbe
dec
push
ins
sub
xor
(bad)
ins
xor
jno
push
fadd
sbb
sub
push
add
xchg
bound
outs
sbb
inc
dec
sub
push
fstp
cmps
push
xor
xchg
sbb
push
mov
inc
addr16
and
mov
into
push
sbb
mov
pusha
cs
jecxz
mov
rcl
jbe
popf
sub
mov
popa
add
imul
cmps
aam
gs
mov
inc
ret
mov
not
sub
outs
dec
retf
(bad)
mov
pop
loop
fisub
fdiv
in
cmp
lea
dec
pcmpeqd
loope
sbb
adc
(bad)
mov
les
add
xor
pop
aas
(bad)
jbe
(bad)
mov
mov
mov
pop
sub
lock
mov
sub
push
into
jb
lea
mov
pop
or
adc
clc
mov
xlat
add
mov
pop
inc
xor
add
jle
jmp
and
xor
push
hlt
je
test
mov
popf
cmp
lea
mov
test
pop
jb
jl
loope
test
lods
mov
neg
cmp
xor
adc
or
data16
jo
pop
cdq
cmp
add
mul
mov
enter
mov
sbb
stc
nop
add
lock
arpl
inc
jb
add
jmp
lea
cmp
out
inc
sti
retf
xor
data16
lds
mov
xchg
and
pop
adc
mov
shr
sar
sar
rol
sub
inc
arpl
mov
xchg
jbe
test
loopne
sub
mov
or
sub
and
loope
sar
aas
add
cwde
pop
adc
dec
jb
(bad)
cmp
pop
mov
loop
pop
xchg
rol
jo
ret
jl
or
ret
pop
das
lea
xchg
(bad)
nop
dec
mov
push
add
mov
pop
jns
mov
shr
adc
push
jle
dec
fdivp
sub
mov
dec
push
xchg
adc
ds
mov
mov
shl
mov
pop
cmp
mov
mov
sub
cdq
dec
popa
adc
mov
fcmovnb
jb
fisttp
or
mov
or
jae
movs
std
jo
and
add
outs
inc
adc
sbb
loopne
std
or
xor
push
loop
int3
xor
sbb
push
inc
mov
jae
mov
or
xor
cmp
hlt
pop
push
add
ret
pop
jno
xchg
outs
dec
movs
test
jbe
retf
dec
clc
shr
adc
clc
mov
gs
and
cli
loope
cmp
sub
pop
dec
inc
jne
xchg
pop
or
shl
jmp
cmp
ins
test
mov
aad
xlat
and
enter
js
add
sub
or
add
and
push
mov
jne
lea
scas
adc
mov
push
push
or
sbb
push
jg
rol
inc
sub
and
mov
cmps
les
enter
je
push
cmp
cmps
xor
sub
mov
dec
sub
push
ror
sbb
jbe
sub
sub
mov
shl
push
cmp
jl
sbb
jae
int
mov
loopne
add
sti
pop
(bad)
(bad)
mov
push
and
mov
add
cmp
leave
ja
mov
repnz
xor
pop
sbb
ltr
int3
popa
inc
push
jbe
inc
sti
jne
mov
cmp
aam
xchg
ret
icebp
push
jmp
push
push
or
addr16
fbstp
dec
sbb
rcl
add
mov
jp
push
movs
imul
xor
hlt
mov
push
sub
xlat
dec
hlt
cld
inc
outs
mov
je
je
adc
es
test
xor
pop
test
pop
inc
ror
repnz
jb
je
and
add
ins
cmp
retf
out
push
sbb
shl
adc
or
fwait
sti
lods
(bad)
add
add
pop
test
pusha
je
and
pop
sub
shr
je
mov
sbb
mov
pop
out
sbb
jecxz
and
or
jb
xchg
adc
(bad)
lea
cmp
dec
add
adc
lods
mov
test
iret
xchg
xchg
out
test
adc
(bad)
add
iret
mov
rcr
and
sbb
push
nop
cmovle
inc
jecxz
movs
out
pop
mov
push
push
xchg
mov
or
pop
hlt
sub
data16
retf
adc
mov
es
cmp
sub
sub
add
(bad)
cli
jp
sub
and
shl
pop
mov
nop
mov
mov
inc
mov
mov
mov
dec
jne
jmp
add
or
mov
ret
add
cmp
add
sub
mov
push
sahf
jbe
nop
push
jmp
ds
or
mov
or
inc
mov
clc
sub
jp
sbb
or
or
sbb
pop
xchg
push
retf
fadd
jno
js
mov
fnstenv
loopne
sub
(bad)
jecxz
js
and
cmp
(bad)
mov
shl
ret
push
and
or
ret
jnp
or
xchg
mov
add
cmp
daa
pusha
mov
push
fcmovbe
xor
movs
push
aad
push
add
es
sub
mov
add
xor
movs
test
jbe
xor
imul
cli
pusha
retf
call
out
add
pushf
cmp
clc
and
and
call
mov
sbb
sub
add
pop
enter
push
jb
sbb
pop
pop
add
cmp
or
dec
pop
fdiv
sbb
xor
and
in
pop
out
mov
(bad)
and
enter
popf
pop
out
inc
aam
and
and
test
jbe
out
mov
or
mov
dec
sbb
shl
gs
mov
add
mov
and
lds
fiadd
mov
push
or
xchg
out
xor
fdivr
xor
shr
sbb
fidiv
aaa
aaa
rol
push
push
imul
jmp
xchg
pop
loop
call
fadd
mov
mov
push
add
mov
jb
aaa
sub
jne
inc
call
ret
cmp
call
or
sbb
test
push
sub
neg
shl
add
fistp
push
push
or
add
lar
daa
daa
daa
add
daa
pop
or
or
daa
daa
daa
or
daa
clts
rol
xchg
stos
mov
push
add
inc
xor
xchg
add
mul
fs
punpcklbw
and
cli
sbb
push
call
loopne
pop
or
pop
pop
jg
xchg
add
imul
mov
aas
pop
loope
mov
test
jp
mov
std
leave
cmp
je
mov
inc
out
add
bound
push
and
or
dec
sub
dec
pop
sbb
jb
into
ins
cld
repnz
pop
ret
pop
ret
inc
or
mov
or
jge
jp
das
cmp
fsqrt
inc
sub
adc
jbe
sar
aas
pushf
xor
pop
(bad)
and
add
push
xchg
mov
jg
add
mov
lea
mov
cmp
jne
mov
or
sbb
and
pop
add
rcl
and
pusha
dec
and
pop
fadd
xor
sbb
mov
outs
adc
sbb
jp
fiadd
cmp
jmp
jge
inc
adc
xchg
add
movs
mov
xor
cmps
jp
mov
push
mov
push
enter
xor
adc
pop
and
ffreep
lahf
sub
dec
sub
cld
dec
push
dec
in
imul
test
lods
out
cmp
mov
aas
leave
push
loop
hlt
add
pop
cwde
or
push
push
cwde
push
add
ins
lods
mov
and
or
mov
pop
sub
mov
cmp
je
das
sbb
pop
cli
mov
sahf
ret
xchg
cmp
add
push
push
imul
dec
jbe
jbe
dec
adc
mov
pop
push
lds
inc
(bad)
mov
test
xchg
rcr
push
cmp
aam
cld
retf
and
add
pushf
push
sub
adc
sub
mov
js
or
(bad)
sahf
inc
cmp
in
cmp
xor
jnp
add
push
test
xchg
jno
popa
or
pop
or
inc
pop
and
sbb
and
xchg
lea
xchg
je
shl
mov
test
shr
mov
ficom
adc
dec
push
add
mov
iret
add
add
add
sub
in
and
dec
inc
adc
cmp
xchg
inc
fsub
xchg
cmps
add
push
cdq
sbb
shl
sub
adc
int3
out
pusha
out
sub
add
mov
sub
inc
lea
push
mov
inc
adc
xlat
add
loopne
fild
rol
sbb
pop
ror
sub
es
or
add
outs
test
fist
ss
out
(bad)
in
push
push
push
push
cmp
mov
std
sub
test
mov
mov
add
add
inc
jge
push
mov
ret
sbb
jae
std
xchg
adc
xchg
mov
imul
mov
push
dec
cwde
fs
pushf
(bad)
mov
fs
movs
xchg
sbb
pop
je
ja
scas
add
mov
lar
scas
test
and
add
movs
mov
mov
loop
xchg
je
cmps
pop
movs
sub
ss
jle
sub
push
cwde
lea
mov
push
cmp
sbb
js
inc
push
movs
call
inc
ins
pop
aas
push
test
fsub
(bad)
cmp
jecxz
inc
cld
cmp
clc
jmp
scas
test
add
enter
adc
clc
nop
push
add
jge
inc
pushf
jmp
aam
fisttp
inc
pop
mov
pop
jne
xor
adc
iret
ja
je
cmp
mov
push
and
xor
push
add
add
dec
cmp
push
sub
mov
shl
xor
fst
pop
xchg
add
jmp
(bad)
mov
sub
xlat
pop
mov
sti
or
sbb
sbb
cmp
mov
inc
add
xor
test
not
cmp
sub
push
or
sub
fsubr
fadd
sub
sbb
ror
in
and
add
loop
cs
fbstp
push
push
sti
adc
inc
(bad)
out
inc
ret
and
gs
out
dec
mov
jmp
test
or
sub
call
inc
fadd
ret
sub
sbb
cmp
ja
add
jbe
or
mov
or
add
enter
jl
add
es
inc
nop/reserved
aas
sbb
push
sbb
sub
stc
ret
push
call
xchg
adc
push
lahf
pop
loopne
add
add
(bad)
rep
std
dec
add
jg
adc
xor
cmp
mul
out
div
cmp
push
or
add
je
push
or
add
jns
jmp
add
in
add
nop
mov
push
hlt
sbb
(bad)
mov
xchg
and
dec
mov
pop
xor
push
movs
call
pop
and
xchg
cmp
shl
pop
mov
out
cmp
mov
push
adc
(bad)
(bad)
jg
lds
push
outs
sbb
sbb
inc
mov
mov
push
pop
je
cmps
clc
fcmovnb
inc
adc
jg
movs
sub
lock
retf
jge
mov
cmc
pop
jecxz
cs
jnp
xchg
std
loopne
adc
fist
ss
mov
cmp
ds
jno
xchg
loope
jb
retf
adc
sub
cs
mov
shl
xchg
cdq
cmp
and
mov
retf
fistp
pop
cmp
jl
xchg
rol
scas
jle
dec
push
mov
lea
mov
sbb
cmp
jb
adc
xor
xchg
and
jne
adc
icebp
sbb
xor
mov
movs
in
sub
add
das
mov
inc
sub
test
sub
fidivr
rep
inc
loop
xchg
mov
int3
xchg
sub
adc
inc
call
pop
add
cmp
push
pop
fdiv
js
out
sub
xchg
jnp
push
push
dec
sbb
mov
mov
add
or
adc
rcl
add
cld
mov
sbb
dec
call
imul
test
adc
stos
xchg
lods
test
mov
inc
push
cdq
sub
ins
mov
cld
pop
jne
mov
sbb
push
inc
push
sbb
test
jg
mov
xchg
rcr
or
sub
add
in
mov
cmp
mov
sbb
sar
aaa
cmp
add
sub
imul
enter
pop
dec
xchg
int3
dec
sub
and
push
es
fdiv
fcomp
sub
or
adc
pop
adc
push
push
and
dec
sbb
loope
xor
xchg
xor
mov
adc
sub
push
inc
or
aas
loopne
aas
push
sbb
inc
sbb
cmp
mov
push
xor
dec
adc
xchg
mov
push
outs
adc
sbb
sub
adc
(bad)
mov
xchg
sti
push
pop
cmp
mov
pop
loopne
mov
pop
inc
test
fisttp
clc
sbb
pop
retf
inc
or
inc
js
or
lahf
jnp
iret
pop
fdiv
mov
cmp
mov
jmp
push
or
rol
pop
add
ret
adc
hlt
mov
enter
mov
jmp
pop
mov
dec
pop
mov
and
add
xchg
inc
push
mov
ret
push
hlt
mov
jmp
cmp
pop
inc
xchg
push
push
lea
and
mov
mov
pop
xor
clc
xor
sub
lock
mov
mov
stos
adc
in
mov
je
test
cmps
jle
inc
and
push
inc
inc
popa
xor
rol
adc
or
arpl
call
xchg
aas
push
lock
mov
or
pop
dec
in
aaa
add
test
sbb
inc
add
mov
enter
daa
or
cld
push
js
inc
sbb
mov
mov
(bad)
or
shl
push
xor
jne
out
mov
push
sbb
or
sti
adc
rcr
jg
mov
or
cdq
ins
cmp
dec
inc
sti
in
inc
mov
adc
cmps
or
jg
aas
inc
leave
sub
dec
mov
sub
adc
mov
nop
cwde
xor
mov
shr
lods
add
push
sbb
push
xor
shr
or
shl
jle
sbb
and
xchg
jp
add
sub
ja
loop
adc
mov
addr16
inc
mov
xchg
fmul
push
add
xor
xor
test
je
dec
cmp
xchg
jmp
cmp
mov
aad
cmps
sbb
enter
lea
cmp
pop
push
js
xor
cmps
je
addr16
and
nop
sbb
lods
jg
push
mov
mov
call
dec
lods
inc
jne
sar
not
push
mov
dec
sub
ins
and
fist
imul
mov
adc
cmp
test
jl
xchg
div
add
jmp
rol
push
push
rcl
adc
pop
fisttp
mov
adc
jle
punpckhbw
ss
mov
adc
jno
push
push
fld
sbb
imul
fnstsw
dec
push
cmp
and
adc
mov
jo
push
mov
test
push
ds
loope
inc
add
sub
cmp
mov
mov
aam
push
add
xor
jp
mov
add
mov
inc
repnz
cmp
jmp
(bad)
cmps
pop
lock
mov
sub
sub
sub
mov
bound
xchg
push
test
add
movs
gs
aam
jo
inc
cmp
div
add
fisttp
mov
nop
aad
js
adc
jb
mov
pushf
xlat
dec
sti
pop
and
dec
lods
sub
add
adc
sbb
sbb
mov
jmp
push
or
dec
add
jmp
cs
sbb
in
lea
dec
sub
sbb
jge
sahf
pop
push
fs
xor
lods
mov
mov
inc
je
mov
mov
ret
dec
adc
jbe
mov
and
mov
test
lods
movs
adc
lods
adc
lods
imul
cs
jg
jno
test
push
stos
jo
push
add
or
adc
cmc
inc
shl
divps
inc
push
imul
cmovg
jae
push
push
adc
leave
or
mov
sbb
mov
pop
fs
clc
and
jmp
(bad)
data16
test
mov
out
dec
enter
jmp
nop
mov
sub
dec
cmp
xor
mov
push
scas
loope
jb
adc
or
shl
adc
or
neg
not
popa
aam
js
pop
adc
ins
cwde
test
inc
movs
or
pop
fstp
fisttp
mov
inc
inc
push
ficomp
shl
push
inc
push
adc
icebp
hlt
mov
test
jbe
int3
push
xlat
lahf
test
pop
es
mov
push
add
push
xor
mov
lods
fnstcw
pop
adc
sbb
in
sub
sbb
repnz
cld
pop
add
adc
or
lods
iret
mov
cmp
mov
jnp
mov
ret
(bad)
jge
jmp
sub
rcl
mov
sbb
mov
push
cmp
jne
mov
xor
push
push
pop
cmps
add
in
imul
in
pop
cs
and
sub
pusha
mov
push
adc
and
or
inc
sbb
mov
xor
jb
scas
and
mov
add
cld
int
enter
lea
add
and
mov
push
popa
outs
sbb
mov
inc
sbb
jmp
mov
mov
and
pop
sub
or
pusha
iret
gs
fcomp
push
cmp
cld
mov
or
sbb
add
add
out
add
popa
xchg
dec
or
xchg
pop
gs
add
push
rol
mov
loopne
pop
adc
cmp
sub
and
cld
or
call
loope
mov
push
jo
call
or
bound
cmp
leave
ret
cmp
sub
and
(bad)
add
loop
fsubr
pop
sub
rol
pop
add
idiv
jmp
sub
and
adc
jp
cld
push
jo
sbb
test
stos
mov
cmp
and
es
add
out
mov
not
and
mov
loope
add
jecxz
mov
xchg
pop
je
or
je
in
mov
add
shr
mov
jbe
sbb
mov
fcomip
out
sahf
sub
jmp
mov
mov
push
js
enter
sbb
or
int
xchg
add
cmp
xchg
test
bnd
aad
adc
movs
jae
fiadd
mov
xchg
fild
xchg
les
test
inc
aas
sahf
int3
scas
in
xchg
movs
add
pop
mov
pop
or
adc
jg
dec
fidivr
dec
ds
test
sub
mov
sahf
adc
mov
sbb
inc
add
add
push
inc
sbb
pop
fwait
push
mov
jne
adc
push
aaa
add
pop
js
lds
mov
inc
add
aaa
add
or
neg
mov
adc
add
loop
lods
stos
les
xchg
scas
(bad)
add
or
adc
adc
sbb
inc
mov
xchg
adc
clc
das
inc
ins
sbb
add
mov
pop
ins
imul
stos
xchg
data16
xor
adc
xchg
retf
push
jnp
stos
adc
mov
add
retf
dec
adc
cmp
sub
nop
mov
push
pusha
push
add
xor
dec
push
jecxz
add
push
out
les
and
mov
fisubr
mov
cmp
add
ret
push
ror
add
das
sub
sar
lea
push
aaa
popa
sbb
push
movs
enter
push
xor
push
pushw
pop
mov
add
mov
test
xor
adc
adc
xor
fbstp
leave
cmp
out
adc
push
call
pop
mov
cdq
mov
ret
cmp
(bad)
ins
sbb
repnz
mov
add
inc
pop
push
ror
cwde
lds
pavgw
adc
and
push
mov
ret
push
push
mov
add
ret
jbe
inc
lods
js
jl
push
test
js
jge
mov
cdq
rcr
es
scas
and
ror
add
mov
jg
mov
add
mov
push
js
lea
push
popa
jl
aaa
lea
adc
or
or
pop
sbb
inc
imul
loopne
sub
cli
daa
sbb
jnp
add
or
adc
jo
push
add
jae
push
dec
push
test
lods
pop
ret
or
cmps
arpl
fsubr
ret
sub
enter
push
ffreep
mul
les
mov
loop
mov
lea
inc
mov
add
pushf
cmp
scas
mov
push
dec
add
rol
in
push
fnsave
jo
and
inc
mov
shr
test
inc
into
rol
dec
ret
loop
retf
pop
retf
sbb
js
(bad)
movs
sub
and
(bad)
imul
rol
mov
outs
movs
xchg
cmp
in
xchg
in
push
ss
sub
mov
pop
js
and
jne
mov
stc
sub
mov
mov
adc
mov
jnp
popa
pushf
sbb
(bad)
xchg
je
push
mov
and
iret
dec
dec
movs
stc
push
xor
rol
cmp
out
mov
mov
jmp
lods
je
mov
pop
add
add
mov
lahf
adc
sti
int3
cwde
add
(bad)
js
iret
aas
mov
xor
fwait
or
stos
add
sbb
or
enter
mov
inc
ret
push
enter
mov
cmp
or
adc
sub
leave
sbb
sbb
int3
adc
inc
add
ret
push
rcr
push
pop
les
jo
adc
mov
mov
rol
and
pop
xchg
arpl
push
cs
pop
enter
(bad)
adc
pop
pop
dec
pushf
push
or
cmp
mov
pcmpgtb
fld
mov
and
add
clc
or
inc
fsub
retf
loopne
inc
test
or
sub
mov
push
enter
jne
mov
push
test
xchg
daa
(bad)
test
add
int3
mul
lahf
add
xor
test
jb
and
movs
add
cdq
dec
mov
aas
push
and
mov
cmp
xchg
(bad)
test
or
sbb
jo
in
mov
mov
not
div
cmp
xchg
div
and
movs
test
test
fcomp
(bad)
outs
xchg
or
popf
retf
inc
jae
adc
push
test
inc
add
enter
dec
dec
and
jno
add
add
les
popf
cdq
movzx
cmp
cmp
jge
nop
add
addr16
adc
cmp
add
xchg
and
dec
pop
push
inc
pop
push
jo
add
sub
fist
ficom
adc
xor
push
sub
sub
imul
lods
pusha
xchg
push
push
ss
sub
jg
sahf
test
dec
dec
repz
push
dec
mov
jbe
test
inc
xchg
push
std
cmc
lock
fldenv
xor
push
loope
dec
push
sub
dec
shl
add
les
lock
cmp
imul
jb
sbb
mov
inc
ins
in
push
popa
cmp
xchg
pop
arpl
adc
lods
aas
jns
sbb
or
in
(bad)
ds
pop
in
movs
and
mov
sub
mov
or
xchg
xor
pushf
mov
mov
xchg
xchg
dec
dec
or
or
les
popa
push
dec
in
or
push
and
add
adc
aam
pusha
jmp
sub
push
fmulp
and
lds
jb
jnp
popa
adc
jb
sahf
dec
cmp
dec
mov
sub
in
pop
in
ffreep
pop
push
cmp
sbb
jmp
rcl
test
dec
in
leave
dec
movs
mov
adc
dec
sub
sbb
dec
enter
and
xchg
aam
pop
aam
fsubr
int3
loopne
in
cmp
dec
call
lods
xchg
dec
lock
mov
(bad)
cmc
mov
ret
and
dec
ja
das
es
sub
xchg
fcmovne
enter
sub
je
push
daa
daa
sub
dec
rol
movs
pop
jl
jbe
jb
add
mov
jecxz
jae
sub
xor
sub
sbb
mov
(bad)
sbb
cdq
(bad)
hlt
xor
xchg
mov
retf
int3
add
xor
jnp
adc
nop
mov
ret
push
adc
jl
and
dec
fs
push
ins
sbb
fs
mov
xchg
hlt
sti
lock
daa
daa
daa
daa
fcom
enter
daa
daa
mov
inc
pop
daa
cwde
lds
mov
and
push
xchg
dec
push
dec
inc
and
dec
xor
xor
xchg
dec
xor
and
adc
push
cmp
and
clc
(bad)
lock
fs
dec
call
inc
sar
inc
imul
cld
data16
inc
retf
sbb
popa
and
sub
sub
sbb
push
fdiv
and
pop
test
movs
and
jge
data16
jnp
(bad)
add
stos
mov
rcl
nop
mov
mov
lock
fucomp
int3
or
mov
les
inc
add
add
xor
les
lods
pop
stos
enter
nop
cmp
inc
aad
test
mov
imul
and
fild
or
add
adc
gs
cmp
fcmovnb
mov
out
mov
push
adc
cmp
or
es
aam
inc
mov
adc
xchg
push
add
mov
call
push
mov
ror
iret
cs
lods
adc
or
aaa
aad
sub
loope
adc
or
push
or
sub
fisttp
nop
int
cmp
pop
push
sbb
cmps
cmp
push
addr16
call
push
ins
mov
or
xchg
(bad)
push
daa
ins
ret
hlt
add
enter
call
retf
call
or
aad
(bad)
mov
sub
or
jmp
push
or
aaa
push
inc
xor
adc
in
pop
je
rcl
xchg
(bad)
imul
das
dec
jb
inc
xor
dec
inc
jo
xor
arpl
pop
mov
sbb
adc
cld
xchg
sbb
pop
push
aam
adc
gs
inc
mov
inc
mov
xor
dec
es
cwde
dec
movs
nop
adc
addr16
xchg
scas
and
jae
stos
ins
loop
retf
cmp
or
sub
aaa
lods
mov
add
retf
bound
les
xor
or
mov
sub
pusha
push
pop
xchg
push
les
pushf
adc
xchg
mov
add
(bad)
or
sbb
(bad)
xlat
add
xchg
push
pop
mov
pop
pop
es
adc
inc
inc
mov
leave
dec
imul
adc
sub
cmp
inc
add
ret
sar
ret
adc
inc
leave
arpl
mov
ins
add
xchg
and
push
mov
adc
(bad)
and
popa
ins
cmps
cdq
retf
add
imul
sbb
adc
xor
pop
xchg
or
retf
jge
lea
push
inc
add
push
cdq
mov
das
call
push
lea
cmp
push
ins
bound
xor
or
sbb
push
test
sub
stos
xchg
sub
xor
xor
jp
push
mov
mov
lds
mov
test
mov
clc
pusha
pop
mov
and
jecxz
ss
jmp
ret
dec
scas
popa
sub
lea
stos
and
ret
dec
or
nop
icebp
pop
and
arpl
dec
and
inc
pop
setbe
jnp
add
iret
push
and
push
in
push
lahf
dec
in
push
(bad)
mov
sbb
or
push
push
pop
test
mov
mov
(bad)
fadd
pop
(bad)
iret
sbb
push
mov
shl
or
cdq
sub
in
in
pop
in
sahf
stos
movs
mov
pop
jb
dec
mov
push
test
rcl
in
and
mov
add
and
sahf
cmp
scas
in
and
jo
cdq
das
sbb
aad
cs
sbb
mov
int3
add
and
cs
enter
movs
add
xor
aam
add
int3
ins
test
adc
jecxz
fdivr
or
imul
mov
dec
loop
inc
pop
inc
aam
push
inc
imul
das
scas
jmp
cmp
adc
jl
jae
xor
scas
or
add
enter
cpuid
ss
push
outs
push
xor
std
jmp
ins
jns
push
jno
dec
cs
and
or
test
cmp
stos
mov
loop
jns
xbegin
adc
cmp
adc
or
aaa
movs
mov
or
mov
inc
or
outs
daa
rol
xor
mov
cmp
pop
xor
and
and
hlt
inc
cs
and
fimul
jo
add
nop
out
cmp
cmp
movs
(bad)
or
mov
movs
adc
adc
cwde
cmp
mov
mov
es
into
mov
pop
add
adc
mov
xor
gs
cmp
aas
js
inc
push
sbb
sti
iret
jge
jg
ins
xchg
pusha
je
inc
daa
inc
enter
mov
inc
pop
adc
inc
and
leave
and
push
ret
mov
push
ds
xchg
inc
sahf
rcr
daa
inc
int
test
and
jmp
xchg
mov
ins
dec
aam
fst
pop
adc
aam
stos
push
retf
inc
es
mov
mov
cmps
mov
dec
mov
inc
aas
cmps
lods
mov
mov
(bad)
ror
stos
push
jmp
dec
add
test
pop
xor
cwde
jne
loopne
iret
pop
jl
push
mov
pop
add
inc
es
adc
sub
push
and
nop
cmp
inc
or
add
or
sub
cmp
add
and
push
ret
inc
push
pop
xor
sahf
xlat
ret
sub
xor
call
pop
sar
mov
sub
fcomi
jns
in
pop
jne
adc
adc
and
repz
cs
inc
push
inc
and
jne
dec
or
iret
xchg
out
jne
or
jne
or
jne
adc
lods
push
sar
pop
push
mov
sbb
mov
nop
and
xchg
and
jbe
mov
jecxz
push
imul
mov
mov
callw
into
add
sahf
enter
rol
add
enter
sub
jmp
test
xchg
cld
(bad)
fdiv
ficom
sub
and
sbb
jae
or
or
movs
aas
fld
fisttp
fstp
xchg
mul
ret
jnp
xchg
dec
pushf
fld
mov
pop
jnp
fsub
fsubrp
sahf
fstp
add
add
sbb
fsubr
cmp
sti
xchg
out
fst
pop
dec
inc
je
fcomp
mov
cmp
sbb
mov
and
test
push
in
push
adc
rol
ins
push
dec
jmp
sbb
or
call
ret
sub
inc
mov
inc
xor
scas
ret
push
adc
imul
in
add
sub
sub
add
leave
inc
sub
mov
jecxz
mov
dec
shr
and
mov
sub
retf
push
fld
pop
popa
add
rol
mov
and
inc
xlat
test
and
fs
xchg
adc
pop
push
test
mov
movs
retf
or
out
cmp
outs
cwde
inc
sub
jne
js
inc
mov
jg
sti
je
push
inc
mov
or
das
add
inc
pop
mov
xlat
ror
or
inc
push
test
sub
pop
and
or
xor
sub
iret
add
dec
sub
xor
xor
sub
push
adc
cmp
sub
in
jno
test
nop
imul
push
add
pop
add
cwde
movs
add
inc
es
inc
push
addr16
rol
push
and
rol
or
push
loop
and
out
dec
jecxz
in
iret
or
into
pop
push
mov
setne
add
enter
xchg
mov
inc
xor
ror
cmps
mov
jnp
dec
pusha
in
mov
push
iret
pusha
fmul
mov
sbb
sbb
push
push
push
rcl
inc
pop
mov
mov
pop
lea
int
sbb
ret
or
ins
or
dec
mov
arpl
fbld
ret
hlt
iret
sub
mov
cmp
pop
cmp
shr
fstp
sahf
adc
int3
adc
mov
ficomp
jo
pop
adc
xchg
call
or
adc
inc
xchg
sbb
int
push
mov
inc
add
jg
lea
mov
push
fild
es
mov
cmps
add
test
and
jb
and
outs
sbb
pop
enter
pushf
xchg
add
sub
jmp
clc
and
mov
fisttp
test
movs
das
mov
ret
in
inc
or
jmp
push
sbb
cmp
shr
xor
test
mov
fild
push
cld
inc
and
xchg
sar
mov
jmp
cmp
in
xor
fadd
jae
pop
sbb
adc
cmp
mov
and
push
enter
jb
and
daa
add
(bad)
adc
and
fld1
adc
ret
mov
in
push
test
out
mov
test
cmp
outs
mov
popa
xlat
(bad)
fist
out
movs
dec
fs
jb
jo
call
push
test
mov
movs
scas
push
bound
sub
xchg
dec
inc
push
stos
mov
mov
adc
mov
sbb
mov
mov
xchg
add
pop
push
xchg
rol
sahf
mov
inc
(bad)
mov
push
or
hlt
cdq
ret
rol
add
adc
ret
(bad)
mov
add
push
and
and
push
xor
jno
sub
and
mov
or
into
and
dec
and
xor
mov
mov
pop
lock
int
mov
add
inc
and
xchg
loopne
dec
and
push
stos
pushf
push
dec
fs
fiadd
cmp
jp
sbb
sbb
pop
mov
push
cmp
mov
lock
out
or
inc
and
and
(bad)
jge
retf
mov
push
or
adc
inc
jbe
push
mov
inc
movs
test
lods
pop
xchg
sub
adc
inc
or
inc
aas
or
inc
adc
cs
lock
stos
lods
test
in
mov
inc
add
cmps
sbb
add
pop
xor
and
push
cmp
ret
mov
or
mov
cmp
aam
pop
or
pop
add
ja
fwait
mov
add
dec
xor
cmp
inc
xchg
cwde
and
add
inc
inc
mov
xchg
ror
or
push
lods
enter
idiv
mov
sub
scas
add
and
dec
fisubr
xor
push
cmp
push
sub
xchg
shl
sbb
adc
jl
das
add
inc
mov
scas
in
add
or
mov
aam
jmp
sbb
(bad)
int3
or
mov
push
(bad)
js
push
nop
dec
adc
push
mov
and
cmp
pop
mov
push
adc
adc
aas
leave
adc
add
or
cmp
retf
outs
in
hlt
out
add
ja
aam
fisttp
xchg
add
adc
inc
jnp
adc
popf
mov
adc
into
hlt
mov
test
dec
and
push
test
push
jge
dec
add
daa
test
mov
mov
add
dec
cmp
push
and
jnp
adc
and
xor
test
rol
pop
nop
popf
mov
mov
xor
enter
xor
push
in
sub
mov
mov
cmp
mov
add
fidiv
dec
inc
ins
int3
inc
pusha
ins
test
sub
sbb
lock
add
inc
sar
mov
ja
stc
or
push
in
test
lock
and
outs
mov
fstp
fsubr
ret
enter
jg
jmp
push
push
push
nop
add
mov
dec
movs
mov
cmp
mov
xor
pusha
mov
in
test
dec
inc
aam
adc
ret
xor
xchg
cmp
mov
adc
inc
inc
pop
push
ins
push
sbb
cwde
je
push
gs
or
mov
adc
arpl
pop
push
out
inc
xchg
mov
dec
pop
fistp
xor
mov
push
stos
push
jmp
cmp
or
in
shl
and
add
pop
xlat
lock
push
dec
or
inc
mov
lods
out
xchg
inc
clc
aaa
add
xor
test
pop
push
jbe
sbb
shr
ret
loope
pavgb
nop
adc
fmul
and
mov
scas
popa
mov
push
outs
cwde
pop
push
inc
dec
and
push
push
loope
jp
xor
xor
mov
adc
or
or
adc
ror
sbb
jne
mov
mov
or
push
popa
jp
mov
out
mov
pop
push
add
stc
and
add
push
adc
mov
push
cld
adc
mov
lods
or
sar
test
and
(bad)
je
jmp
jb
jo
jno
inc
pop
inc
mov
and
inc
and
pusha
lea
lahf
adc
xor
xchg
adc
jge
ret
movs
ret
mov
out
test
pop
imul
loope
push
push
cmp
xchg
mov
mov
cli
push
sbb
pop
xor
(bad)
jno
imul
sahf
jmp
dec
dec
push
loopne
clc
cmp
or
aas
sbb
cli
repnz
enter
outs
out
sbb
mov
pop
mov
push
retf
add
mov
sub
cld
jle
mov
pop
retf
jle
es
leave
retf
mov
or
int3
dec
or
cmc
hlt
add
jb
mov
movs
jb
push
fdiv
mov
push
add
lock
ror
addr16
or
push
mov
fcom
jg
mov
jo
pop
push
lods
cmp
sbb
and
sub
adc
mov
push
popa
mov
popa
movs
test
mov
ficomp
fisubr
cmp
pop
ror
push
sub
sahf
add
cmps
movs
push
pop
add
ror
(bad)
add
xor
and
xchg
mov
cs
inc
pop
pop
out
scas
mov
push
push
xchg
adc
mov
jge
adc
out
jo
sub
push
and
and
gs
ins
mov
add
retf
xchg
mov
ret
adc
push
add
hlt
enter
sbb
retf
mov
mov
sbb
mov
sbb
cmp
loop
sub
push
and
fstp
push
mov
sbb
in
data16
mov
ds
in
rcl
dec
shr
int3
call
push
inc
lods
cmp
push
and
cli
and
xchg
fcmovne
push
xor
call
clc
and
cmp
pop
outs
(bad)
jmp
or
outs
pop
push
xor
cmps
xor
int3
add
fadd
iret
push
push
daa
add
sbb
inc
sbb
mov
jmp
inc
and
daa
ror
xchg
iret
ds
jmp
xlat
mov
popa
sbb
xlat
xchg
push
cmp
pop
or
aaa
mov
xor
sub
mov
pop
cli
loope
bound
mov
ret
mov
xchg
xor
add
push
retf
push
jne
mov
push
or
ficom
adc
push
adc
inc
cmp
(bad)
push
add
mov
mov
loope
inc
sti
in
dec
dec
push
xor
xor
dec
ins
adc
imul
test
mov
ror
jmp
xchg
retf
stos
and
pop
mov
lahf
adc
add
mov
add
and
inc
mov
inc
jnp
ja
adc
adc
sbb
sbb
daa
push
push
sbb
clc
sbb
(bad)
mov
lock
sub
out
jmp
test
jno
push
div
(bad)
mov
pop
jnp
sbb
jecxz
iret
pop
jo
in
and
pop
and
push
fsubr
push
clc
add
adc
or
add
jo
rcl
add
push
fild
aaa
popa
sbb
add
neg
and
push
mov
push
scas
pop
or
icebp
push
repz
test
fcom
ins
nop
and
jge
mov
mov
loopne
not
fistp
push
mov
bound
lock
xor
sbb
rol
push
and
inc
and
loopne
dec
ss
mov
mov
mov
jl
pop
cmps
jne
retf
adc
clc
mov
jmp
adc
mov
adc
inc
jnp
stc
mov
(bad)
push
repz
call
lock
xchg
add
addr16
sbb
rcr
ja
in
cmp
sbb
jne
adc
popa
cmp
mov
sub
cld
jne
jg
pop
(bad)
pop
sub
xlat
dec
aad
pop
cmps
mov
in
xchg
sub
mov
js
xor
mov
xchg
ror
jmp
rol
and
add
test
add
icebp
inc
mov
dec
push
push
pop
jno
or
add
test
ss
pusha
sbb
jo
xor
cmp
aas
or
sbb
repz
mov
jbe
xor
test
mov
or
mov
(bad)
popf
into
xor
(bad)
and
dec
shl
xor
popa
mov
cdq
mov
mov
lahf
add
cmp
test
fbld
push
push
mov
adc
nop
bnd
fwait
and
add
xor
in
or
mov
and
data16
jl
fild
add
xor
rcl
cmps
xor
xor
dec
push
dec
rol
stc
stc
sbb
push
mov
xchg
push
ret
inc
(bad)
lods
lods
pop
test
call
call
mov
js
jle
push
xchg
retf
rcr
inc
push
push
push
addr16
rcl
cwde
fstp
add
fcom
fadd
les
jae
jbe
push
lods
jl
mov
and
or
int3
xchg
push
add
es
(bad)
pusha
ds
push
rcl
push
pop
lods
add
mov
fcomip
scas
out
dec
jg
push
int
je
pop
mov
add
push
push
jns
loop
adc
fwait
inc
pop
add
adc
jne
mov
jge
push
mov
jbe
je
push
cmp
or
jge
data16
test
retf
add
fs
cmc
aas
cs
cmp
xchg
pop
scas
jp
pusha
inc
dec
cmc
inc
dec
(bad)
into
fdiv
cmp
je
push
push
mov
lock
or
push
imul
ror
push
(bad)
icebp
mov
push
jno
or
and
xor
add
stc
push
push
jns
rol
mov
cmc
xchg
ds
fs
sub
lock
sub
out
push
dec
cmps
fs
adc
adc
push
add
test
pop
pushf
dec
sti
pop
dec
sbb
adc
lahf
add
fnsave
jnp
enter
mov
cmp
aad
jne
shr
mov
add
inc
enter
mov
cmp
adc
xor
jp
cld
enter
add
jne
push
push
pusha
xor
xchg
imul
inc
call
scas
sbb
mov
mov
lds
scas
or
mov
push
dec
xchg
inc
mov
push
or
jne
push
mov
add
inc
je
add
ret
dec
iret
push
out
(bad)
ficom
fdivr
cmp
int3
jmp
mov
jmp
rcl
mov
sbb
pop
aaa
(bad)
leave
push
rcl
shr
fcomp
test
movs
imul
ss
add
je
inc
jnp
and
mov
xchg
xchg
je
fadd
jge
ret
add
or
push
pop
jb
cmp
popa
loope
cmps
inc
mov
sbb
dec
imul
ds
pop
xchg
lock
dec
jb
xor
push
and
add
lds
inc
adc
in
add
sbb
dec
repnz
xor
dec
call
xor
aas
sbb
xchg
dec
push
pop
push
mov
lods
sti
adc
inc
jg
imul
int
mov
enter
shl
cmp
mov
sbb
sbb
test
pop
mov
(bad)
icebp
or
outs
adc
or
or
or
es
sahf
or
(bad)
jne
and
mov
jge
or
mov
movs
stos
mov
jns
mov
mov
push
dec
inc
add
mov
mov
mov
arpl
repnz
sub
retf
add
mov
dec
jl
mov
sahf
jge
inc
stos
sar
test
inc
fstp
add
push
adc
shl
ror
jl
dec
inc
mov
push
cmc
(bad)
jg
mov
sar
xchg
or
test
loop
test
dec
or
sbb
(bad)
ins
ins
inc
or
pop
adc
mov
and
cmps
pop
or
cmp
sti
sub
movs
adc
adc
jecxz
xchg
or
daa
push
xor
sbb
test
les
in
inc
(bad)
mov
or
mov
out
sub
pop
movs
push
nop
shr
rcl
add
xchg
push
or
cmp
add
or
mov
std
cmp
jnp
add
cs
in
fbstp
rcr
sbb
adc
(bad)
push
adc
inc
sub
push
dec
lods
adc
adc
mov
pop
fdivr
cmp
sub
or
test
ins
and
or
sbb
fs
lock
or
or
loopne
loopne
and
mov
outs
inc
cmp
fnstenvw
add
(bad)
pop
inc
xchg
sbb
inc
push
push
mov
pusha
test
adc
or
ret
inc
dec
inc
dec
mov
ss
into
mov
push
or
jmp
add
push
nop
mov
or
sub
ja
add
sub
mov
pop
jno
sbb
push
psllw
sbb
inc
jl
dec
adc
and
jl
fisttp
nop
stos
add
jecxz
xlat
rep
lock
or
out
adc
push
adc
and
inc
addr16
adc
bnd
int
leave
pop
mov
sub
push
in
mov
sub
inc
sysenter
nop
lods
add
aam
ud1
jne
dec
push
adc
pop
mov
call
(bad)
add
mov
sbb
sbb
xor
cmps
push
xchg
sbb
and
add
repz
sub
dec
lds
mov
pop
lea
popa
test
div
mov
jne
push
movs
shr
dec
push
fcmovne
cmps
mov
or
adc
cld
push
mov
rol
sub
add
and
sbb
cmp
jp
adc
test
cmp
mov
sub
add
add
jmp
push
pop
push
sbb
push
cmc
pop
movs
xor
push
add
ds
dec
mov
ins
mov
loop
and
sbb
adc
pop
sar
pusha
repnz
leave
mov
inc
mov
jg
add
xor
pop
push
ret
fs
push
pop
mov
and
in
inc
mov
add
pop
jle
test
mov
mov
movzx
push
fiadd
sub
mov
xchg
mov
add
ja
cmp
xchg
inc
jmp
in
sbb
pop
ret
jge
popa
mov
div
js
push
cmp
in
adc
jle
movs
std
and
xor
mov
jmp
nop
mov
add
and
clc
push
dec
ret
sub
jl
movs
hlt
ret
add
dec
push
pop
adc
xchg
retf
sub
or
mov
js
jae
ret
fs
arpl
push
dec
mov
xor
sbb
jns
int
adc
stc
aaa
inc
outs
add
mov
lahf
lock
cdq
pop
add
mov
popa
mov
xchg
sti
cmp
and
push
ret
pushf
icebp
adc
mov
dec
jmp
jns
icebp
inc
leave
and
pop
movs
add
xor
sub
sub
mov
jnp
aas
jns
add
not
add
jl
xor
cmps
sbb
dec
add
add
mov
add
mov
inc
sbb
jo
adc
cmp
pusha
inc
mov
movs
push
add
add
js
add
ins
dec
pop
xchg
sbb
ins
out
push
push
adc
inc
test
or
xchg
and
or
sbb
jb
dec
in
(bad)
push
cmp
movs
adc
adc
test
pusha
xchg
push
mov
adc
lock
dec
movs
or
push
adc
dec
in
jns
fild
push
in
ret
lods
cmp
sub
jb
push
cmp
jno
or
shl
add
data16
movs
sbb
popf
or
add
push
jbe
(bad)
enter
sbb
xchg
push
push
sub
xor
xor
pop
nop
std
adc
popf
or
cmp
mov
inc
sub
add
mov
push
add
ret
add
outs
imul
push
jnp
sub
icebp
push
push
pop
cmps
and
xchg
loopne
push
call
cmp
sahf
jnp
mov
cmp
addr16
test
dec
mov
adc
jno
retf
xchg
adc
ins
imul
mov
mov
push
or
and
mov
pop
dec
jo
sbb
mov
and
sbb
test
xchg
and
pop
jb
and
enter
test
int3
daa
adc
jb
repnz
enter
call
sbb
sub
in
and
mov
push
cmp
jmp
movs
jne
sbb
lea
(bad)
pop
lea
or
push
jns
rol
adc
cmp
jmp
xlat
or
out
mov
pop
xor
or
aam
cmp
sbb
or
repnz
or
loopne
or
fs
movs
mov
rcl
and
xor
dec
out
fsub
into
and
lahf
mov
shl
popf
and
cmovns
mov
scas
cmp
inc
dec
and
lods
sub
push
ds
lds
gs
push
dec
sar
pop
ins
xor
call
dec
jae
cwde
pusha
cmp
cmp
cmp
sbb
ds
jae
or
rcl
imul
push
mov
and
ss
adc
call
ds
inc
and
and
in
push
xor
or
mov
mov
pop
test
dec
leave
enter
sbb
sahf
jl
xchg
xor
xor
inc
sti
pop
inc
add
cs
in
pop
pop
pop
pop
in
pop
inc
and
dec
sbb
inc
jg
and
int
inc
inc
fldenv
repz
sub
lods
in
cmc
out
fcom
pop
repz
xor
xchg
dec
jo
and
out
fs
xchg
dec
inc
fs
and
xchg
out
inc
push
pop
sbb
idiv
repnz
push
sbb
dec
lea
bound
xor
adc
out
dec
adc
jbe
and
stos
adc
push
test
cmp
push
pop
pop
sar
dec
or
push
loop
je
mov
test
mov
xlat
inc
cdq
xchg
add
stos
sub
test
outs
add
aam
inc
add
mov
pop
fs
dec
mov
pop
enter
pop
pop
idiv
nop
out
sub
cdq
and
push
fiadd
xor
or
dec
sahf
or
fcomp
bound
sub
loope
push
and
dec
add
cwde
inc
hlt
sub
adc
or
outs
and
push
mov
lock
into
push
pop
cmp
icebp
push
sub
xchg
xor
inc
in
cmp
push
push
add
nop
loopne
lea
bound
loopne
mov
sbb
cmp
xor
or
xchg
jne
push
mov
fwait
push
mov
stos
pop
cmp
icebp
jmp
push
push
mov
fistp
inc
cmp
unpcklps
adc
jg
cmp
add
jb
mov
and
jns
(bad)
xor
shr
into
scas
arpl
mov
jecxz
pop
hlt
xor
repnz
stc
mov
int3
jb
mov
pop
mov
pop
jecxz
pop
cs
movs
jae
ins
rol
adc
jns
loop
je
mov
and
xchg
add
cmovs
scas
loope
or
or
add
xor
xchg
inc
shr
dec
inc
push
mov
sbb
push
and
push
les
inc
repnz
enter
leave
jl
int3
and
and
jge
push
nop
mov
in
and
cmp
jg
and
mov
adc
pop
leave
add
and
and
xor
mov
sbb
xor
and
fsubr
test
lock
add
cmovs
test
sbb
mov
xor
xchg
hlt
mov
repnz
fiadd
repnz
add
adc
nop
mov
and
(bad)
inc
adc
hlt
std
push
pop
pop
pop
and
sub
cwde
(bad)
pushf
inc
and
test
dec
jae
inc
mov
test
shl
imul
jns
dec
lea
or
jb
and
sub
sub
movs
icebp
mov
out
add
repnz
push
xchg
(bad)
cld
out
sub
xchg
leave
enter
out
test
fs
out
test
xchg
dec
es
xchg
in
lods
shr
and
jnp
test
je
cmp
pop
push
mov
je
mov
dec
adc
and
or
ret
jo
int3
sbb
mov
and
and
pop
ret
and
enter
loopne
mov
les
xchg
les
pushf
lods
xchg
inc
mov
or
sbb
cdq
pop
mov
cs
adc
and
xor
lea
imul
jp
inc
sbb
movs
pop
imul
enter
mov
xor
pop
inc
mov
pushf
or
fadd
cmp
inc
aam
and
adc
or
pusha
add
jl
lods
sub
arpl
inc
es
loopne
lds
xchg
mov
add
pop
je
inc
adc
add
mov
call
adc
adc
push
jecxz
push
dec
and
xchg
inc
popf
inc
lock
pop
xor
sahf
dec
or
add
fwait
jge
in
loopne
and
fs
inc
cmps
fs
shl
shl
mov
lock
inc
cmc
mov
stc
shl
add
movs
shl
sbb
cmp
pushf
movs
cmp
xchg
xchg
sub
cmps
cmp
sbb
cmps
dec
inc
cmps
fs
nop
adc
aam
rol
out
repz
xor
enter
rcl
lods
xor
sbb
xchg
inc
push
cld
scas
mov
loopne
mov
sbb
mov
in
push
call
pop
cmp
mov
pop
sbb
dec
aad
stc
sub
and
sub
enter
xchg
mov
lock
and
dec
mov
mov
clc
mov
mov
je
leave
mov
cld
sub
lock
mov
call
hlt
mov
push
sar
add
rcr
ror
xchg
sbb
out
add
sbb
ret
inc
inc
push
and
and
les
dec
icebp
jns
jns
or
add
fadd
lds
xchg
and
mov
ins
or
dec
push
mov
and
pop
pop
push
mov
rol
mov
xchg
mov
add
inc
mov
loopne
sbb
mov
adc
xchg
les
xor
cs
mov
fcomp
retf
aaa
or
jo
add
lahf
in
add
not
lea
mov
push
int3
add
enter
les
repnz
xor
xchg
push
leave
enter
lods
push
add
leave
xchg
fdiv
jl
push
jb
sbb
mov
xor
int3
sbb
mov
or
ret
stc
ror
mov
inc
xor
repz
sbb
mov
clc
cdq
dec
inc
out
leave
dec
sbb
xor
cli
popa
cmc
inc
add
pop
and
test
pop
or
inc
(bad)
nop
pop
adc
faddp
sbb
xlat
mov
or
(bad)
mov
ret
sub
dec
imul
retf
push
inc
loopne
or
and
and
clc
mov
xor
fdiv
ret
stos
pop
add
nop
mov
dec
push
rcl
mov
xlat
or
jnp
and
push
push
mov
push
mov
adc
add
imul
mulps
sub
lock
xchg
xchg
dec
push
fnstenv
in
loop
loopne
adc
dec
imul
xchg
mov
push
ins
sbb
xor
fs
inc
sbb
and
cld
mov
outs
and
(bad)
fmul
jl
(bad)
cmp
add
cli
cmp
inc
call
ret
xor
inc
or
(bad)
enter
fcmovb
mov
adc
add
fistp
adc
and
loopne
and
mov
adc
fisttp
inc
dec
xor
loop
adc
stc
jecxz
inc
sbb
leave
and
das
sbb
xchg
out
adc
fsubr
add
and
mov
and
fmul
push
or
xchg
mov
sbb
leave
xor
cmps
push
ins
and
xchg
xchg
mov
push
out
lock
xchg
or
and
cld
sbb
push
sbb
call
xchg
inc
jmp
jns
lea
xor
jmp
sbb
or
xchg
test
sub
sbb
cs
jmp
dec
mov
enter
jb
push
sub
jb
xor
xchg
leave
add
enter
pop
and
adc
out
fisttp
push
xchg
mov
dec
push
jg
icebp
xor
add
dec
loopne
bnd
ins
aam
cmp
jb
repz
mov
mov
add
int
aad
test
je
out
jmp
jo
add
cmc
mov
push
enter
sbb
push
fmul
not
jmp
bound
mov
fmul
inc
maskmovq
or
loope
jns
lock
sub
sbb
clc
xor
push
add
int3
out
lds
pop
mov
pusha
sub
(bad)
cli
jns
ror
fcom
nop
inc
push
inc
aad
(bad)
adc
mov
mov
enter
xor
std
clc
aam
xchg
pop
xor
clc
aam
test
shl
jb
enter
ret
mov
scas
xchg
enter
loop
add
push
or
push
fcomp
xor
fadd
in
les
clc
push
retf
add
(bad)
push
leave
and
add
sbb
jo
jno
popa
fcomp
mov
inc
push
inc
jo
fs
scas
int3
loopne
sbb
dec
push
int3
loopne
cmp
les
sbb
mov
mov
jmp
into
aaa
and
lea
jmp
jl
jmp
cmp
inc
jnp
xchg
mov
test
adc
es
xchg
icebp
or
enter
or
loop
mul
test
sbb
ret
es
test
xchg
add
lods
in
and
jno
inc
mov
sbb
shr
push
iret
or
lock
jnp
test
add
std
jp
adc
cld
lock
xchg
add
xchg
mov
icebp
adc
ficom
enter
cld
lock
dec
cs
mov
nop
pop
push
add
adc
or
xor
adc
std
movs
adc
push
xor
cmp
xchg
add
pushf
push
push
add
or
sbb
add
sbb
sbb
mov
sbb
aaa
sub
and
adc
and
add
or
xchg
dec
or
out
test
test
xor
and
inc
sbb
push
pop
cld
lock
adc
fs
sti
arpl
pop
and
leave
push
sar
xor
(bad)
scas
fs
push
stos
add
pop
inc
or
add
adc
adc
fldenv
cli
or
pop
or
je
push
int
cmp
dec
mov
xor
ficomp
xor
xchg
lock
inc
or
mov
ins
mov
data16
and
out
leave
ror
and
add
dec
and
xor
xor
inc
mov
adc
pop
xor
inc
xchg
xor
push
jp
lock
mov
inc
xchg
push
es
or
imul
data16
sub
sub
lock
dec
dec
es
pop
and
push
and
or
add
leave
pushf
mov
in
mov
sub
and
pop
cs
data16
or
ins
and
arpl
push
or
push
test
das
out
lods
sbb
mov
pop
mov
dec
add
adc
hlt
lock
or
and
mov
jg
xchg
cwde
dec
and
xor
mov
scas
dec
loope
lds
push
gs
cs
sub
mov
cmp
sbb
mov
mov
sub
xchg
push
add
mov
jnp
rcl
pop
dec
shl
loopne
or
sbb
add
inc
push
xor
mov
outs
ror
call
xor
lock
jnp
inc
sub
xchg
fist
pushf
and
or
icebp
ss
xchg
xchg
aaa
ss
dec
pop
ss
xor
repnz
cmp
sub
enter
adc
add
rcr
(bad)
cmps
xor
push
mov
aad
dec
mov
inc
dec
sub
inc
mov
pop
mov
pop
mov
aam
imul
into
retf
add
jne
das
scas
xor
mov
out
mov
popf
in
or
retf
adc
scas
add
jg
jnp
sbb
mov
movs
arpl
es
icebp
and
push
jne
lahf
in
pop
inc
mov
xchg
add
or
pop
(bad)
sub
ror
je
inc
loop
jecxz
jl
imul
test
push
inc
sbb
pushf
xor
cmp
das
pop
pusha
out
jge
pop
(bad)
imul
cmp
call
retf
push
enter
out
xchg
nop
add
cs
mov
popf
mov
xor
test
sbb
dec
push
fs
and
xchg
(bad)
(bad)
pushf
sbb
movs
dec
and
cdq
dec
call
call
mov
enter
pinsrw
aam
dec
adc
dec
loopne
inc
xor
iret
mov
shl
or
sub
ret
cmp
aam
pop
ss
add
cmp
inc
push
cmp
xor
fidiv
xchg
mov
hlt
push
inc
push
and
out
and
dec
adc
adc
in
inc
inc
mov
test
xor
mov
imul
cmps
cmp
jmp
jmp
pop
movs
dec
mov
and
dec
call
test
cmp
nop
fs
pop
xor
xlat
or
xchg
pop
fcom
dec
jmp
add
and
mov
fs
inc
repnz
pop
ret
xor
jae
repnz
inc
and
inc
in
mov
xor
inc
push
adc
mov
ficom
cmp
repnz
pop
fst
repnz
(bad)
adc
mov
iret
add
aaa
popa
(bad)
std
shr
inc
xchg
dec
or
in
clc
test
xchg
sbb
dec
aaa
push
xchg
dec
dec
or
and
sbb
or
xchg
and
push
push
mov
daa
sub
push
mov
popa
dec
push
pop
sbb
mov
(bad)
popa
jae
and
add
adc
(bad)
xchg
and
pop
adc
sub
push
call
repnz
inc
or
dec
inc
and
(bad)
xchg
and
sahf
mov
dec
das
xchg
xchg
push
sub
dec
mov
cmp
rol
push
push
fdivr
jl
push
xchg
es
mov
mov
gs
std
dec
mov
adc
inc
push
cli
push
push
xor
nop
out
xor
inc
aam
lea
push
adc
mov
inc
sub
adc
repnz
jne
retf
out
and
push
dec
loopne
inc
scas
nop
adc
sbb
imul
mov
loopne
add
sbb
mov
push
cmp
push
add
xchg
stos
push
inc
movs
int3
popa
aam
js
sbb
mov
mov
adc
pop
ret
sub
sbb
sbb
aad
call
in
leave
js
js
js
shr
add
xchg
xchg
push
shr
lock
sbb
sbb
in
sbb
test
call
or
push
and
imul
xchg
adc
xor
sub
pop
mov
outs
out
and
enter
add
and
cdq
fisub
pop
fsub
call
repnz
(bad)
and
and
push
repnz
fsubr
dec
mov
in
out
enter
mov
cwde
jmp
nop
out
jae
sbb
dec
add
fs
push
adc
(bad)
ja
add
cmp
dec
imul
test
add
pop
sub
xchg
add
xor
xor
call
xchg
pop
adc
mov
sbb
or
add
out
sub
out
sub
mov
cmp
xchg
or
dec
int
inc
ror
jno
adc
into
xor
push
clc
sbb
cmp
dec
pusha
pop
ss
loopne
cs
ss
hlt
push
xchg
outs
leave
push
mov
icebp
pop
push
xchg
mov
pushf
dec
jb
aam
xor
cmps
popf
ss
fdiv
add
pushf
jl
mov
lea
jae
retf
cmps
xor
leave
add
pop
mov
dec
or
adc
adc
cld
out
in
scas
xchg
push
leave
pushf
lock
js
mov
pop
and
jne
cli
pop
int3
adc
jno
(bad)
out
scas
xchg
aad
push
(bad)
icebp
mov
adc
pop
and
in
mov
rol
jmp
stos
xchg
mov
sbb
not
stos
in
repnz
inc
or
sbb
push
stos
fiadd
sbb
cmp
cmp
inc
leave
outs
mov
sub
sbb
in
repnz
in
mov
and
inc
enter
xchg
icebp
inc
jl
cmp
inc
pop
and
jo
jl
inc
mov
and
jns
leave
push
pushf
inc
xchg
out
cmps
xchg
out
inc
xchg
inc
pop
mov
adc
push
sub
enter
aas
xor
xchg
adc
ins
inc
ja
or
mov
mov
push
mov
mov
imul
adc
mov
ins
repnz
fs
lock
outs
dec
xchg
mov
xchg
cmps
pushf
(bad)
pushf
dec
xchg
adc
xchg
ins
cmp
and
popa
dec
adc
push
pop
ret
cmps
xchg
mov
fmul
jmp
js
adc
lahf
or
icebp
cmp
jl
repnz
(bad)
cld
adc
xor
cmps
aas
adc
and
xchg
sbb
adc
or
idiv
inc
push
pop
icebp
pop
jne
jb
sbb
mov
push
inc
or
mov
lock
test
imul
push
push
jmp
mov
popa
nop
test
push
test
mov
sub
add
ja
xchg
add
shr
call
jb
clc
sub
push
inc
lock
sub
xor
ret
mov
cmp
xchg
pop
lea
jns
out
pop
inc
cmp
enter
lea
lock
inc
pop
push
test
xor
cmps
and
xor
inc
aaa
push
sbb
nop
inc
push
sbb
outs
pusha
add
and
pusha
add
add
test
pop
daa
xor
adc
pop
or
xor
cmp
push
ret
rcr
and
add
push
push
push
mov
movs
xor
pop
and
jmp
in
test
bound
push
mov
add
adc
movs
mov
ficom
ins
out
arpl
and
enter
and
adc
test
ret
dec
leave
enter
gs
push
jl
inc
arpl
adc
xchg
mov
sbb
cs
bnd
les
sub
stos
mov
test
mov
in
xor
sub
or
push
jno
jl
add
lods
inc
rol
ficom
push
add
int3
(bad)
clc
popa
xchg
inc
shl
lock
cdq
xchg
imul
dec
xor
rcl
icebp
or
and
and
or
icebp
lods
and
rol
adc
clc
sti
sar
dec
push
adc
outs
mov
cmp
fs
jo
clc
dec
inc
inc
call
mov
inc
movs
xchg
jne
fdiv
retf
xchg
inc
jo
lock
and
lock
ret
jne
out
popa
in
inc
jne
in
ja
or
in
jns
in
lock
jne
mov
stos
in
sbb
fdiv
push
mov
mov
jno
and
dec
sbb
out
popf
mov
fs
add
adc
call
or
lea
push
(bad)
xchg
retf
jns
push
xchg
lods
fstp
xchg
pusha
xor
or
xor
sub
mov
and
or
adc
movs
test
jg
add
daa
dec
mov
setne
imul
lock
push
or
rol
enter
in
shl
sub
dec
push
sub
adc
add
movs
repnz
pop
lahf
xchg
pop
xchg
pop
lea
dec
rcl
lock
xchg
js
push
rol
adc
mov
dec
pop
test
mov
and
popa
shl
jns
sub
dec
xchg
add
mov
dec
mov
jl
enter
call
shr
enter
clc
mov
push
cmps
cmp
mov
mov
and
lods
out
push
sbb
clc
icebp
mov
icebp
jl
push
jb
jae
stc
inc
sub
in
xchg
sbb
test
imul
imul
pushf
push
and
xor
dec
inc
xchg
lea
lea
cdq
xchg
and
nop
sub
(bad)
nop
(bad)
(bad)
xchg
add
sar
fcom
jnp
je
xchg
mov
test
push
push
sub
ret
adc
rcl
pop
stos
mov
popf
sbb
fst
pop
xchg
xchg
shr
mov
xchg
stos
xor
scas
mov
shl
adc
dec
cmp
inc
cwde
mov
ins
and
mov
adc
or
and
add
xchg
inc
cwde
push
add
or
add
movs
loope
je
adc
and
fcom
add
and
pop
and
mov
icebp
push
cdq
sub
jae
int
jg
mov
xchg
mov
test
xchg
xchg
and
add
fld
outs
popf
or
mov
adc
cld
xchg
popf
mov
into
push
xor
or
sbb
sub
cdq
xor
jno
pop
gs
jne
nop
icebp
lahf
mov
xor
push
mov
sub
mov
mov
or
adc
sbb
adc
test
stc
sub
dec
movs
clc
rol
inc
imul
cmps
je
adc
lods
push
icebp
cmps
das
mov
icebp
test
icebp
in
dec
cs
sbb
mov
ss
arpl
leave
test
test
jne
push
add
cmps
sub
cmps
xchg
movs
movs
inc
mov
dec
and
imul
je
nop
pop
mov
and
aaa
dec
sbb
shr
scas
or
lods
pop
adc
cwde
push
rcr
pop
fcom
sbb
xor
mov
sbb
fbld
(bad)
pop
and
sub
xchg
lock
mov
fs
clc
lock
cmp
nop
stos
inc
mov
mov
ret
xlat
mov
in
icebp
add
in
retf
mov
in
or
outs
mov
mov
sub
call
(bad)
lock
lock
xor
xor
and
jecxz
sbb
lock
mov
add
mov
lock
nop
cmp
mov
(bad)
xchg
mov
lock
outs
cmp
or
test
add
cmps
mov
add
push
rcl
rol
jmp
jns
xor
sub
xor
out
pop
sbb
jb
and
add
enter
mov
nop
popa
xor
pop
and
lock
jne
mov
jno
sbb
pop
ret
jo
add
gs
pushw
lds
ret
add
sbb
push
(bad)
adc
jb
xor
inc
mov
daa
push
cmp
lea
pop
retf
add
and
push
mov
fnstcw
lea
lock
inc
call
into
cmps
in
inc
cmp
inc
loopne
inc
dec
ror
inc
imul
pop
adc
lods
test
xor
ror
aaa
and
and
int
arpl
nop
pop
sbb
repnz
and
aam
retf
popf
adc
shl
add
ja
xor
push
mov
scas
cmp
sub
cdq
xchg
xchg
or
xlat
or
adc
xlat
or
inc
cmps
fcmovu
mov
push
mov
fadd
test
rcl
xor
sub
aad
das
cmp
pop
dec
or
repnz
leave
aam
(bad)
fsubr
add
or
jmp
xor
push
mov
add
retf
pop
mov
adc
push
and
add
ins
repnz
sbb
repnz
fld
test
sbb
scas
fisttp
xchg
sets
dec
call
push
mov
add
sbb
pusha
cmp
xchg
shrd
jb
dec
adc
jp
inc
(bad)
stc
xor
inc
or
(bad)
xor
movs
mov
push
retf
xor
mov
mov
jl
dec
loop
imul
cmp
inc
jecxz
ins
(bad)
loopne
xor
ror
in
in
or
sub
lea
mov
push
shl
and
xchg
in
fsub
xchg
cmp
call
sub
movs
sbb
xchg
dec
xor
movs
ins
xchg
inc
test
and
fs
xchg
push
adc
lds
pop
in
pop
jmp
xchg
xor
sub
or
dec
pop
jne
inc
push
xchg
sbb
out
xchg
and
movs
ins
adc
inc
push
sub
cmp
enter
push
das
in
pop
lock
vmovmskps
adc
sub
enter
fwait
inc
icebp
retf
test
push
les
push
push
cmp
dec
(bad)
out
or
pop
out
pop
in
add
aas
sbb
add
enter
xor
add
repnz
test
xchg
int
sub
and
movs
je
xor
int
pop
xchg
inc
inc
out
and
sbb
imul
in
sbb
pop
das
inc
out
jb
and
pop
xchg
jbe
mov
mov
sbb
cmc
mov
shr
push
cmp
mov
idiv
sbb
bound
sti
xchg
cld
xchg
dec
push
and
std
add
cmp
and
fcmovb
xchg
(bad)
shl
dec
test
push
sbb
push
or
popa
push
push
add
pusha
mov
mov
out
inc
aam
jne
jmp
add
push
loop
mov
adc
sbb
and
loopne
mov
cmp
add
gs
ror
lea
lea
adc
add
stc
es
bound
hlt
out
dec
sbb
and
repz
ds
movs
mov
push
mov
rcl
sbb
inc
sbb
popa
add
mov
push
outs
loope
out
sbb
xchg
adc
leave
mov
sub
sbb
out
pop
repnz
mov
cmp
ret
or
cmps
sub
inc
and
add
push
leave
cmp
xor
sbb
call
add
cmps
hlt
mov
xor
add
aaa
loopne
cmp
lea
dec
das
pop
mov
in
adc
add
test
pop
adc
xor
push
inc
mov
push
movs
xor
mov
and
pop
and
push
sub
xchg
daa
mov
sbb
cmp
mov
cmp
test
sbb
sbb
dec
dec
jg
(bad)
push
xor
adc
ret
pusha
or
push
xor
jge
and
popa
loop
pushf
stos
and
jno
and
adc
mov
xchg
sub
and
inc
jecxz
adc
call
fild
test
fyl2x
fdivrp
int
add
mov
dec
or
sahf
pop
mov
call
add
mov
test
add
stc
repz
leave
rcl
xchg
inc
pop
pop
pop
or
jb
je
into
or
add
xchg
hlt
xchg
push
push
push
in
fsub
push
test
popa
mov
or
sbb
push
xor
sbb
ins
sbb
push
daa
dec
scas
lock
movs
sub
iret
xchg
int3
es
cmp
push
aad
dec
dec
adc
or
cmp
jns
add
push
shl
push
mov
mov
daa
int3
and
xchg
(bad)
es
fcmovbe
sbb
inc
sub
sahf
add
int3
sub
lock
sub
cmp
pop
push
cld
retf
add
push
mov
sub
push
sti
push
sub
mov
add
ins
mov
inc
jb
push
popf
or
cmp
fwait
cmp
xchg
push
ds
jmp
(bad)
cmp
setns
or
mov
add
icebp
fs
cld
xlat
xchg
idiv
cmp
jg
nop
add
dec
scas
push
push
pop
dec
aas
xchg
dec
xchg
lods
mov
xchg
mov
loopne
or
xor
mov
jo
cmp
pop
ds
push
lock
cs
sbb
pop
jae
push
inc
cmp
and
jnp
mov
outs
sbb
sub
xchg
pusha
fs
dec
je
mov
in
mov
mov
fcom
in
lock
xlat
mov
adc
xchg
retf
sub
cmp
jb
in
dec
pop
pusha
test
jo
mov
xchg
push
cs
pushf
lods
mov
and
aam
dec
in
fsubr
in
sub
or
and
sub
test
inc
push
dec
sub
push
retf
add
pop
and
xchg
fadd
sbb
jb
call
stc
pop
int3
sub
and
dec
sub
jb
in
inc
sbb
xor
movs
fs
js
xchg
push
cs
and
xchg
ror
retf
mov
jb
hlt
in
add
daa
test
or
retf
dec
and
jb
in
dec
dec
pusha
jo
push
mov
cwde
xchg
push
cs
and
aam
dec
in
retf
cld
lock
adc
xchg
push
cmp
dec
cmp
and
je
dec
in
pop
mov
push
mov
les
fdivr
sub
sbb
dec
in
in
sub
add
adc
sub
js
retf
dec
mov
dec
in
push
push
mov
push
add
sub
xchg
retf
sub
inc
call
push
clc
push
push
mov
cmp
aaa
pop
mov
lds
cmp
sbb
add
push
dec
mov
test
jl
mov
adc
lea
(bad)
test
jnp
in
ret
rol
shl
test
pop
enter
cmp
mov
or
fld
les
test
cmps
daa
add
push
stos
out
cmp
mov
add
or
xlat
mov
lods
jl
adc
sti
add
add
pop
or
das
push
cmps
add
mov
shl
sub
xor
and
dec
push
inc
inc
jae
cs
add
or
mov
fnstsw
ins
sbb
pusha
pop
inc
jo
ja
sub
jmp
in
cmp
outs
or
test
sbb
add
and
cmp
xor
popfw
scas
add
cmp
popa
inc
cmps
cwde
xor
xchg
mov
inc
xor
xor
popf
pop
mov
pop
in
mov
xor
adc
retf
jge
and
or
arpl
jno
rol
sub
and
cmp
push
cmp
dec
jg
fstp
adc
rcl
sbb
leave
cmp
sbb
inc
scas
sub
adc
lds
push
sbb
jl
push
jmp
loop
mov
popa
je
adc
inc
inc
sbb
sti
add
xchg
mov
ds
int
mov
jne
push
popa
push
push
and
xchg
xlat
jmp
sub
or
(bad)
mov
call
dec
sbb
arpl
mov
dec
mov
je
push
sbb
in
pop
and
pop
dec
and
pop
out
adc
enter
in
mov
inc
pop
push
dec
nop
push
arpl
in
cdq
pop
xor
das
xchg
xchg
cmp
push
sbb
sub
inc
mov
mov
jge
jp
and
enter
dec
cmp
xchg
jns
cmp
lea
jo
push
mov
push
mov
xor
mov
mov
add
push
dec
jmp
cld
(bad)
(bad)
shl
(bad)
enter
cmp
lea
push
test
rol
inc
aam
add
xchg
pop
mov
outs
sbb
xchg
push
inc
xor
xlat
sbb
adc
lods
jno
add
add
dec
xchg
mov
je
inc
inc
imul
je
inc
adc
or
cmc
jecxz
or
push
rcr
data16
mov
push
movs
push
inc
sbb
imul
out
or
sti
push
dec
dec
mov
call
push
pop
test
push
or
add
(bad)
and
push
jge
ret
cmp
arpl
sbb
retf
pop
cli
lock
jne
(bad)
dec
or
inc
sub
loope
leave
add
cmp
mov
dec
adc
aas
push
xor
xor
add
push
clc
inc
mov
cmc
inc
sub
pop
movs
adc
enter
mov
mov
lock
sbb
jb
xchg
push
repnz
and
mov
sub
leave
je
pop
push
stos
jmp
cmp
add
and
dec
fimul
inc
cli
dec
pop
and
add
add
add
pop
and
aad
fs
and
dec
cmp
mov
push
mov
pop
mov
pop
mov
and
leave
and
mov
push
lahf
mov
pop
(bad)
push
jnp
ss
cdq
push
xor
jo
pop
jg
xchg
add
mov
sub
nop
xor
pop
dec
xchg
aas
push
push
push
sbb
push
lods
mov
jo
nop
add
xchg
adc
add
mov
and
xor
and
sbb
adc
pop
push
movs
push
inc
cmp
mov
mov
adc
or
mov
cmovp
dec
repnz
add
out
mov
add
test
lea
je
lods
push
push
adc
test
adc
adc
leave
sub
dec
jb
adc
frstor
rcl
jmp
aaa
or
imul
je
mov
pop
clc
lods
rcr
jo
in
jb
adc
fs
mov
sbb
adc
dec
out
mov
stc
push
mov
adc
test
dec
mov
add
aaa
dec
scas
and
rol
movs
xchg
lahf
mov
dec
pop
mov
dec
jle
xlat
cmp
xor
sbb
movs
inc
pop
lods
mov
xor
adc
mov
sbb
lea
or
cld
sub
es
jnp
sbb
repnz
jo
sbb
jb
inc
sti
sbb
sbb
xor
jae
add
mov
sub
dec
outs
pusha
(bad)
mov
or
nop
dec
in
nop
test
mov
(bad)
enter
in
add
sbb
dec
push
(bad)
jb
pop
push
(bad)
test
sbb
mov
scas
dec
outs
mov
jo
mov
xchg
mov
xor
ror
fs
push
ins
xor
jb
js
jmp
add
and
ins
xor
mov
mov
aam
loopne
and
es
push
inc
push
cmp
sbb
stc
add
mov
movs
jb
add
outs
mov
(bad)
sbb
and
js
or
and
scas
xor
xor
sub
xchg
push
cdq
add
mov
scas
and
add
test
test
fs
imul
imul
push
leave
mov
mov
push
xlat
add
es
imul
dec
push
inc
je
mov
inc
ds
in
sub
mov
sbb
mov
push
push
xor
cld
sbb
jmp
push
call
xor
call
movs
add
push
inc
shl
cdq
lods
std
mov
repz
lea
call
mov
outs
in
sar
mov
xor
cmp
adc
mov
mov
mov
sub
dec
push
nop
out
add
call
sbb
inc
mov
mov
lods
adc
sub
jl
std
js
lock
dec
jno
stc
inc
add
fs
popf
dec
leave
and
mov
mov
or
js
mov
sar
and
aam
xor
pop
mov
loopne
xor
push
adc
dec
add
mov
cmp
clc
push
test
and
xor
push
and
add
mov
add
fsub
and
adc
push
shl
shl
inc
add
add
loope
shl
aad
jo
inc
ret
mov
and
or
xor
sbb
loop
cmps
inc
sar
mov
mov
dec
daa
add
mov
pop
pop
test
mov
cmp
loope
adc
int
(bad)
aad
add
fistp
jno
std
mov
std
std
movs
std
daa
movs
adc
fcomip
xchg
aam
leave
push
mul
add
mov
arpl
rcl
sub
sbb
pop
aas
adc
add
mov
in
adc
ins
(bad)
in
je
retf
popa
sbb
add
sub
clc
frstor
add
iret
jne
xchg
and
mov
stos
mov
sbb
push
add
pop
dec
ror
stos
sub
cmp
(bad)
pop
pop
adc
cmp
add
mov
fistp
mov
nop
jle
les
je
dec
retf
lahf
inc
mov
pop
jmp
pop
add
xor
push
rcr
cld
pushf
retf
jo
out
push
scas
and
push
mov
pop
or
lock
shr
ins
aas
jb
jo
adc
in
fstp
dec
mov
push
adc
adc
sub
and
inc
adc
mov
dec
pop
daa
mov
ror
es
fs
jmp
and
(bad)
js
mov
and
repnz
xlat
sub
inc
or
pop
push
or
mov
sbb
or
and
adc
(bad)
ss
inc
mov
sub
movs
add
aaa
popf
shl
aam
mov
adc
je
push
mov
(bad)
aas
add
and
lahf
xchg
xchg
dec
sbb
jecxz
jne
xchg
movs
push
cmp
add
add
mov
retf
aam
cmp
mov
sbb
je
pop
add
or
dec
push
mov
sub
xor
out
mov
pop
test
mov
lods
adc
lea
call
pusha
stc
lea
push
pop
sub
gs
cwde
int3
push
dec
daa
dec
js
adc
mov
push
imul
popa
pop
xlat
movs
dec
mov
sub
jne
push
jmp
inc
push
fmul
adc
pusha
cmp
gs
sbb
and
jecxz
xor
inc
xor
adc
sbb
sbb
loopne
lea
push
push
push
es
or
rcr
pop
push
mov
mov
inc
loopne
aaa
mov
aas
ins
sub
clc
and
push
je
and
or
aaa
push
je
ret
mov
hlt
push
stos
adc
aam
inc
repnz
pop
dec
push
or
sub
mov
mov
add
inc
fiadd
add
add
cmp
jbe
mov
dec
add
sbb
add
lock
push
ficom
add
inc
test
pop
cmp
jb
cmp
xchg
sahf
je
loopne
pop
sub
dec
add
cmc
mov
out
or
add
jne
push
sbb
xchg
je
shl
jmp
inc
push
push
add
icebp
inc
jbe
cli
xor
scas
mov
and
and
xor
rcl
jb
add
sub
movs
add
pushf
fs
pop
imul
mov
add
cmp
jl
push
push
jo
and
cmps
mov
sbb
cmps
add
push
sub
and
or
pusha
xchg
mov
add
adc
out
xchg
jne
lea
imul
pop
add
gs
dec
push
test
dec
je
test
je
test
sbb
jbe
pop
inc
imul
ins
or
pop
mov
adc
pushf
mov
mov
xor
ins
pop
push
add
ret
xor
lock
fwait
loopne
movs
push
call
movs
ror
sub
not
cmp
repnz
jo
add
push
push
loop
aaa
lds
mov
ss
mov
xchg
pop
sbb
push
imul
xlat
xchg
xchg
add
inc
jmp
jge
jne
loopne
gs
adc
push
retf
jmp
dec
sar
rcl
sbb
inc
shr
mov
jmp
dec
mov
lea
test
mov
ret
add
hlt
cmp
shl
imul
cdq
imul
cmp
inc
mov
rol
fisttp
cmp
in
test
je
push
test
sub
rol
cmp
retf
push
je
stos
cmps
push
mov
(bad)
jne
pop
retf
clc
mov
ins
jmp
clc
and
inc
xchg
jne
icebp
sub
push
push
scas
fs
and
int3
adc
add
imul
jae
add
movs
mov
pop
mov
fucomi
dec
or
xor
das
sbb
lds
sbb
inc
add
shl
sub
pop
mov
scas
cld
leave
ret
fs
rep
sahf
int
ret
push
addr16
scas
mov
int
jns
scas
shl
(bad)
pop
pushf
(bad)
lock
js
push
inc
pop
xlat
and
ret
cmp
jge
(bad)
mov
ffreep
inc
sbb
push
push
xchg
cdq
sbb
cmp
mov
inc
or
stos
dec
cmp
sub
loopne
adc
mov
xor
gs
mov
sbb
mov
xchg
div
shl
enter
jmp
adc
push
cmp
in
sbb
leave
dec
sub
xor
enter
add
sub
adc
jo
lock
pop
pop
fs
fcmove
cmp
jno
movs
add
ret
cmp
popf
sub
or
pusha
pusha
jmp
pop
jnp
loop
mov
call
add
push
dec
jbe
push
sub
lea
ret
cdq
icebp
xchg
push
cs
inc
or
sub
ja
jne
jae
jmp
ret
dec
test
xor
inc
inc
icebp
dec
xchg
pusha
shl
ds
das
dec
fcmovnu
and
dec
add
push
and
add
gs
das
pop
push
add
mov
pop
ins
pusha
test
add
adc
or
je
lds
pushf
mov
push
mov
xor
stos
add
cmp
sbb
and
mov
jne
jno
add
jle
mov
(bad)
fbstp
ret
sbb
icebp
cmp
jne
cmp
jb
dec
or
in
mov
cmp
xchg
dec
mov
or
in
leave
push
dec
outs
clc
mov
or
cmp
add
push
sub
xor
nop
shl
push
xchg
mov
pop
add
adc
sub
out
xchg
movs
pop
dec
fadd
xor
not
push
pop
mov
push
mov
pushf
adc
lds
inc
lea
aad
outs
jg
jle
jle
mov
test
pop
jg
test
cmp
push
xchg
ss
dec
arpl
stos
inc
mov
outs
or
push
sar
and
in
rcr
mov
push
and
imul
add
xor
adc
adc
sub
ins
push
imul
push
sub
jmp
or
nop
xchg
aaa
shr
jp
dec
icebp
sbb
and
add
in
test
push
push
add
addr16
and
pop
imul
xchg
add
nop
cmp
jb
mov
mov
jecxz
dec
sar
jg
cmp
cs
ret
sbb
jg
arpl
jnp
test
or
in
loope
call
xchg
or
and
and
(bad)
movs
inc
sbb
lds
cmc
cmps
and
arpl
hlt
and
sbb
mov
add
adc
lds
inc
rcl
add
mov
ds
add
pop
ror
shl
mov
mov
dec
shl
inc
es
movs
or
test
inc
xchg
sbb
mov
sbb
enter
sbb
nop
and
int3
jbe
xor
stc
shl
sbb
jb
fdiv
push
aam
and
inc
fadd
pushf
mov
adc
push
jb
adc
fcom
cmp
stos
jae
adc
add
test
or
inc
enter
jb
dec
test
adc
pop
int3
(bad)
pop
and
int3
in
pop
scas
ret
push
push
inc
pop
push
(bad)
xchg
popa
lahf
clc
cwde
in
adc
pop
ja
push
inc
xor
add
ret
push
mov
inc
sub
bound
adc
push
push
jno
xor
sbb
pop
js
aad
retf
add
les
pop
push
sbb
sub
aam
and
push
jmp
arpl
pop
mov
es
pop
mov
dec
sub
or
xor
or
cmp
cdq
rol
inc
push
stc
mov
cdq
inc
sbb
popa
leave
inc
repz
and
push
or
xor
and
dec
adc
jne
cmps
xchg
retf
pop
and
jo
xchg
inc
mov
adc
je
sub
or
adc
sub
inc
sub
call
dec
dec
or
pop
hlt
or
shl
fdivr
pop
adc
sbb
add
hlt
push
out
dec
or
sub
push
mov
inc
pop
hlt
push
sub
fs
dec
xor
mov
and
sbb
leave
aam
mov
cmp
cmp
jbe
sbb
psubq
xor
jp
lock
xor
add
dec
mov
add
je
cmp
ret
cmp
sub
enter
hlt
sbb
or
mov
ret
hlt
and
push
dec
mov
add
cmc
loopne
dec
xlat
mov
jne
xor
aam
sub
cmp
dec
and
push
enter
and
mov
and
gs
pop
fnstenv
and
cmp
dec
ficomp
xchg
test
je
adc
push
retf
add
add
push
push
and
or
fidivr
add
clc
daa
adc
dec
enter
movs
int3
ret
jb
dec
popf
and
xchg
daa
add
bound
pusha
or
lods
adc
inc
adc
jmp
xchg
ja
and
shl
(bad)
sub
mov
sbb
pop
sbb
xor
or
sti
mov
arpl
cmp
scas
xor
scas
inc
pop
sbb
cmp
test
or
test
frstor
and
shl
sub
aaa
dec
shl
fs
or
mov
dec
dec
push
mov
push
inc
jae
xchg
sub
add
iret
dec
push
or
sbb
mov
push
sub
(bad)
lods
arpl
movs
xor
mov
xchg
hlt
dec
mov
out
sub
mov
js
pop
add
xor
or
sbb
cli
push
push
sbb
fwait
mov
dec
or
mov
fldenv
rcl
xchg
add
fwait
rol
sbb
push
shl
jle
push
push
int
and
adc
ficom
push
nop
add
jbe
je
mov
push
mov
std
addr16
cld
push
aam
stos
repnz
lods
and
ficomp
add
js
pop
je
nop
mov
push
aad
je
pop
jl
fsubr
ja
mov
add
xor
popf
inc
lock
mov
inc
and
mov
sti
jle
jl
pop
sub
mov
stc
xor
clc
sar
pop
add
sub
pop
fst
jb
jmp
loopne
pop
(bad)
dec
jo
cmova
aaa
test
mov
jl
adc
add
je
or
out
cmp
sub
or
cmp
sahf
xor
les
out
pop
or
xchg
mov
pop
pop
sbb
mov
or
movs
add
aam
ja
pop
out
aad
les
mov
in
add
sbb
add
push
jmp
and
mov
mov
xchg
inc
sub
push
in
mov
pop
jno
xor
cmp
add
bound
mov
fcom
cwde
sbb
cmps
inc
cmp
cmp
adc
mov
dec
dec
stos
mov
xor
ja
(bad)
bound
jbe
cmp
jbe
retf
lods
fist
pop
idiv
add
push
fist
cdq
adc
sbb
cli
add
push
test
outs
push
in
movs
mov
add
cmp
sbb
mov
sbb
aaa
es
mov
cmc
pop
cmp
pop
and
dec
ret
dec
and
pop
aad
xchg
and
cmps
gs
js
cs
add
mov
addps
adc
add
jp
imul
pop
adc
jne
push
cmp
loope
push
les
push
and
ret
mov
push
cmp
test
jl
mov
add
repz
adc
and
xchg
jmp
sub
jge
add
pop
adc
push
sahf
sub
push
ins
or
push
mov
add
rol
leave
inc
enter
xchg
add
dec
cmovl
loope
les
xor
and
mov
aam
ret
(bad)
repnz
xor
and
adc
aad
movs
or
loopne
retf
dec
inc
mov
gs
cmp
dec
cmp
sbb
and
sub
bound
push
mov
push
outs
sbb
imul
adc
popf
cli
pop
or
call
cmp
jne
sub
leave
loopne
push
cmp
aas
rcl
mov
add
or
mov
jmp
dec
mov
add
add
or
call
adc
mov
pop
inc
loopne
call
jle
je
jmp
sbb
rol
pop
stos
retf
inc
add
adc
rol
mov
dec
hlt
not
pop
lods
push
popa
sub
add
add
sub
mov
xchg
add
fcom
aas
int
cmp
in
push
and
xchg
loop
into
(bad)
fcom
dec
or
jmp
mov
cmp
adc
lahf
retf
inc
ret
jmp
retf
mov
icebp
movs
xor
dec
scas
fdivr
mov
or
addr16
retf
mov
adc
mov
inc
pop
enter
test
ret
imul
aas
dec
dec
jmp
push
sbb
push
jle
push
xchg
cs
and
cmps
int3
or
pop
add
fst
xchg
mov
rol
hlt
clc
cwde
and
pusha
mov
xchg
(bad)
fmul
adc
std
ss
movs
sub
cmp
std
movs
add
test
cmps
mov
enter
(bad)
cmps
rcr
pushf
or
in
jmp
and
mov
push
push
lock
mov
pushf
jmp
add
scas
and
jl
lods
xor
cld
fmul
jge
mov
push
sub
sub
push
pushf
cmps
sbb
stc
int3
push
loopne
cmps
cmps
test
mov
inc
sub
sub
cmp
rcr
lods
mov
add
retf
cmp
jge
cmc
aas
adc
or
(bad)
cmp
jle
sbb
xchg
es
enter
imul
fnstenv
out
inc
push
ror
stos
pushf
call
or
sti
adc
inc
add
mov
icebp
mov
je
jp
shr
icebp
sbb
xlat
add
jbe
and
dec
pop
jo
cmp
arpl
aaa
push
sbb
jmp
push
fld
repnz
pop
pop
cmp
adc
xchg
push
sahf
into
jge
mov
dec
ss
je
or
jne
jb
adc
push
push
ins
add
cwde
cs
push
daa
js
out
cs
lods
adc
(bad)
nop
stos
mov
rcl
push
lods
aam
cmp
movs
div
jge
mov
loop
jl
xor
push
or
cmps
or
inc
clc
ds
jmp
push
dec
popa
ins
xchg
sbb
mul
out
adc
add
pusha
xchg
adc
dec
xchg
imul
dec
cmp
push
jno
mov
push
nop
xchg
sbb
sbb
adc
rol
fild
xor
retw
out
call
sbb
lahf
push
pusha
or
mov
adc
loopne
mov
std
and
and
inc
or
js
cmps
out
mov
inc
adc
ret
jb
or
sbb
gs
mov
repnz
or
mov
jne
jbe
xor
(bad)
ja
add
jno
cmp
aaa
adc
or
xor
adc
dec
add
test
cmp
cmps
cmp
fldenv
add
mov
xlat
inc
xchg
ror
adc
call
test
add
fstp
xchg
xor
jb
in
inc
jb
rcl
imul
jno
cli
gs
add
jge
fdivr
fnstenv
bound
mov
mov
lea
ds
inc
jo
mov
fdivr
ror
pusha
inc
jo
call
imul
dec
std
inc
push
sbb
or
(bad)
shl
outs
fdiv
aad
sbb
in
inc
test
jmp
lahf
hlt
jmp
push
scas
jg
fmul
sbb
daa
or
mov
cmp
pop
aas
add
imul
ins
lds
push
das
inc
std
cdq
lock
out
add
inc
adc
shr
pushf
push
shr
call
xor
in
sbb
sbb
imul
test
rcr
outs
sbb
ins
inc
popa
jge
sub
pop
call
mov
inc
adc
jl
dec
cs
adc
cli
mov
pop
jl
and
pusha
popf
movs
aad
fcmovnb
jle
not
add
sbb
xchg
cmc
and
mov
add
and
dec
pop
cmp
cmc
inc
xchg
xchg
xor
lahf
cdq
xor
adc
xor
ja
pop
sbb
shl
shl
mov
or
xchg
pop
and
sbb
and
fs
mov
ret
rcl
push
mov
inc
push
shl
push
pushf
sbb
movntq
out
test
je
jne
cmp
cmp
adc
outs
add
jecxz
loope
and
or
push
(bad)
sbb
pop
and
lods
rol
xor
ss
cld
jmp
loopne
xchg
jmp
mov
cs
mov
lods
leave
in
xor
mov
sub
popf
aaa
or
jns
inc
and
jle
pop
les
mov
je
sti
sub
add
into
pusha
sub
or
fsubr
xor
aaa
pop
push
push
mov
les
xor
dec
push
dec
and
inc
pop
xchg
jp
add
sub
sbb
data16
mov
adc
(bad)
movzx
inc
dec
pop
jmp
inc
push
in
int3
int3
ror
enter
pop
enter
repnz
int3
les
mov
les
push
pop
add
xor
cwde
and
jno
(bad)
adc
pop
mov
add
push
retf
fs
and
sub
clc
cmp
sbb
test
pop
aad
adc
add
sti
retf
enter
mov
loopne
loopne
mov
jno
mov
fadd
pop
mov
gs
fadd
jmp
fadd
pop
sbb
mov
cmps
call
or
aam
pop
push
nop
push
and
sbb
xlat
leave
push
sbb
jp
and
push
out
xchg
mov
push
adc
inc
adc
xchg
test
dec
push
and
or
dec
outs
in
in
and
xchg
dec
imul
sbb
add
jne
dec
jecxz
mov
pop
lock
push
(bad)
fild
mov
and
mov
inc
push
and
and
sub
je
ins
fcom
lods
sbb
mov
xchg
not
fmul
and
inc
fdivr
jle
imul
inc
add
in
das
int3
sub
ja
and
neg
xor
sbb
or
call
cmp
lock
add
loopne
or
mov
pop
bound
add
icebp
dec
inc
pusha
inc
ror
add
dec
cmp
push
push
js
pop
adc
ds
push
mov
sub
lock
mov
imul
or
xchg
(bad)
rcl
pop
and
push
cmps
loop
push
cmp
pop
jge
(bad)
mov
dec
scas
push
pusha
or
sub
fdiv
test
dec
push
jmp
jo
jns
pushf
fcom
push
nop
sub
dec
inc
das
ins
hlt
adc
fsubr
jno
arpl
push
jmp
icebp
cmps
cmp
not
pop
mov
test
mov
sbb
push
push
leave
xor
adc
loope
xor
push
(bad)
xor
fisubr
test
rcr
lock
xor
jo
add
inc
adc
or
sub
dec
or
sbb
jmp
cwde
fdiv
fimul
stos
sar
inc
std
push
dec
and
mov
and
jb
or
push
push
cmps
(bad)
mov
push
mov
xchg
mov
rol
jge
je
push
retf
jne
rol
cmp
js
imul
push
(bad)
adc
jmp
adc
fdivr
or
cmp
js
xor
xor
hlt
or
dec
loopne
or
or
dec
call
or
div
push
loop
push
aad
into
mov
jp
call
retf
sub
rol
cmp
mov
aaa
jmp
push
or
aam
les
xchg
loop
shr
les
mov
mov
or
pop
add
mov
push
loope
jb
dec
push
jp
cmp
dec
push
stos
dec
pop
outs
leave
push
js
out
inc
pop
lods
cmp
add
push
(bad)
(bad)
sub
adc
mov
adc
inc
inc
loope
push
(bad)
mov
mov
xor
or
add
xor
xor
sar
aas
jmp
ds
clc
and
test
xchg
push
jns
jmp
add
js
pusha
dec
cld
add
popf
lock
pop
mov
pop
not
out
shl
sti
sub
popa
es
or
pop
adc
punpckhwd
outs
sub
jge
stos
xchg
fnstcw
and
enter
push
sbb
adc
rcr
cmp
cmp
and
push
ror
addr16
push
mov
add
or
cmp
sub
sbb
jge
and
xor
sbb
dec
out
mov
rol
ja
popa
lea
push
imul
sbb
test
push
(bad)
or
xor
mov
push
pop
call
adc
mov
mov
and
mov
js
add
push
mov
clc
push
lods
and
shl
add
xchg
rol
push
test
pusha
ret
stos
push
fldenv
js
xor
adc
push
jne
or
loope
jg
jne
(bad)
in
les
dec
cs
mov
ds
add
lock
inc
jbe
add
or
pop
cld
test
icebp
in
jg
xor
xlat
test
xor
arpl
mov
and
mov
cmp
inc
sbb
sub
and
cmp
and
xchg
mov
aam
ret
inc
pop
pop
lea
lea
rep
fisubr
loopne
stos
fiadd
lods
add
and
dec
pop
mov
sbb
pop
mov
or
mov
mov
imul
loopne
call
xchg
push
mov
out
sbb
adc
push
sbb
repz
push
cmp
mov
out
jmp
mov
push
jne
mov
cmp
or
shr
fwait
add
jle
int3
lea
inc
xor
pop
lea
js
lock
sub
and
and
aas
sub
data16
jo
dec
or
xchg
test
push
cmp
or
add
outs
mov
and
fdiv
retf
sysenter
push
je
enter
inc
or
sbb
pop
mov
imul
sub
and
cmp
inc
pop
push
jmp
popa
shl
inc
scas
push
and
add
add
add
or
pusha
jne
mov
je
sbb
cmp
or
jo
xchg
mov
aam
rol
iret
sbb
mov
stos
add
inc
fadd
loop
add
add
sub
add
push
push
iret
mov
clc
cmp
bound
mov
or
scas
dec
inc
adc
sub
cmc
(bad)
jmp
ins
jo
sbb
push
ins
or
cli
sub
fiadd
repz
and
(bad)
dec
in
jecxz
call
sbb
push
sub
and
mov
clc
mov
sbb
adc
(bad)
test
xchg
sub
fwait
jmp
test
mov
daa
scas
adc
loopne
sbb
pop
dec
cmp
push
cmp
je
dec
push
and
cs
daa
rol
pop
adc
clc
scas
or
mov
add
add
push
into
jle
icebp
push
clc
loope
or
mov
push
pushf
mov
sub
mov
sti
daa
nop
rol
shl
pop
cs
lock
sub
push
push
push
jae
pusha
test
cld
daa
pop
and
push
push
and
push
cld
ret
rcl
push
add
add
cs
idiv
xchg
push
push
aad
push
cmp
push
call
or
or
sub
pop
jcxz
push
push
push
xor
iret
inc
xor
mov
jmp
or
test
out
je
pop
je
or
or
test
aad
out
xchg
fldcw
jbe
imul
retf
dec
jp
cmp
pop
jmp
push
fild
cwde
sub
sub
cmp
pop
jno
mov
add
clc
nop
xchg
mov
and
or
and
and
int
jmp
sbb
bound
adc
dec
cmp
sub
inc
leave
inc
sub
leave
inc
leave
inc
xor
adc
sub
lods
or
imul
push
ins
xor
adc
push
sbb
sbb
dec
inc
pop
dec
dec
jo
sbb
push
adc
sub
push
in
cmp
dec
or
sub
or
xor
int
out
sbb
or
movs
rcl
and
or
sbb
pop
or
jle
dec
fmul
or
or
cmc
adc
push
dec
sbb
int
loopne
fisub
sar
xor
rol
or
or
add
and
and
pop
mov
aaa
(bad)
fisubr
dec
sbb
sbb
inc
mov
adc
fisttp
push
and
or
ret
push
fisub
dec
push
ja
loope
stos
push
push
mov
or
das
jg
dec
movs
add
sub
mov
(bad)
mov
not
jmp
mov
push
push
mov
xor
or
stos
les
adc
cmp
inc
sub
mov
inc
pop
adc
pop
cmp
call
xorps
jle
cmp
les
leave
add
or
fwait
or
gs
in
data16
fidivr
cmp
inc
loopne
rcl
push
sbb
xchg
push
clc
pop
stos
ss
sbb
push
cmp
xor
mov
adc
sti
leave
push
clc
das
add
sti
mov
les
fdivr
inc
push
push
inc
dec
cld
dec
inc
popf
cwde
jno
cs
cmp
pop
cbw
push
les
outs
rcl
mov
loope
out
test
mov
lods
push
leave
sahf
and
test
mov
xchg
je
push
test
or
popa
pop
adc
out
fisttp
push
test
out
add
push
(bad)
rcr
dec
add
jmp
add
js
bound
cmc
adc
in
adc
xchg
mov
cmc
push
or
cmp
push
mov
add
or
mov
lock
(bad)
enter
hlt
rcr
sbb
loope
xor
shr
shl
je
or
sub
xor
rol
ins
mov
sbb
pop
lods
xor
jbe
shl
outs
cmp
push
cmp
push
mov
cli
out
mov
xlat
sub
pop
sbb
or
ret
xor
or
pop
mov
(bad)
mul
vandps
or
dec
inc
mov
outs
mov
jns
mov
loopne
add
adc
sbb
sti
bound
arpl
sbb
lahf
shr
xor
cdq
movs
movs
mov
ja
xchg
mov
pop
mov
xchg
call
call
push
or
clc
adc
daa
push
mov
xlat
add
das
dec
mov
adc
and
jne
push
or
fs
or
xchg
cmp
jge
or
pop
cwde
mov
int3
add
sbb
sub
cmp
neg
test
mov
inc
js
xor
test
or
ins
pop
test
add
(bad)
jne
loope
jo
and
rcl
inc
adc
add
mov
push
out
push
push
fldpi
movs
xor
stos
pusha
fidivr
push
sbb
fild
fcmove
shr
shr
and
mov
or
sub
mov
ret
pop
daa
and
jno
mov
in
inc
or
ror
lds
and
jmp
inc
mov
inc
pop
pushf
adc
dec
and
sbb
out
nop
cwde
adc
or
jo
or
mov
xchg
call
ins
and
adc
or
adc
daa
push
mov
push
dec
push
cmp
dec
pop
stos
neg
sbb
jge
dec
cld
jg
icebp
mov
fimul
cmp
je
je
and
test
out
jmp
stos
arpl
and
add
pop
dec
in
(bad)
push
jne
cmp
adc
or
dec
push
fdivr
cmc
cmp
push
je
and
lock
mov
je
push
imul
push
pop
dec
or
mov
inc
push
jo
mov
in
sbb
add
jb
jle
ss
or
mov
add
lods
popf
mov
sub
adc
bound
mov
jbe
dec
fadd
in
inc
jmp
jmp
(bad)
cld
sub
push
ins
(bad)
xchg
pusha
adc
jae
retf
inc
in
cmps
mov
hlt
push
push
pop
inc
rol
mov
in
fisttp
fsubr
inc
push
aad
(bad)
mov
push
fcom
mov
inc
or
stos
js
or
inc
(bad)
lock
mov
int3
inc
push
sub
or
push
fisub
aas
or
inc
test
or
call
mov
cmps
sbb
int3
fdivr
outs
xchg
int3
jb
ret
push
or
jmp
push
cmps
adc
dec
adc
mov
je
pop
sar
(bad)
and
mov
adc
pop
ins
rol
push
sub
ja
jo
test
ins
mov
sbb
lock
idiv
lea
test
fild
cmp
jne
push
pop
jmp
push
jmp
cli
jecxz
adc
push
push
(bad)
and
push
mov
inc
cmp
shl
neg
cmp
or
cmp
xor
adc
mov
push
jbe
sub
nop
nop
and
cld
push
xchg
rol
rol
mov
and
js
jge
mov
or
rcl
jp
xchg
int3
fadd
stc
add
push
ret
les
mov
and
fucomi
aaa
lods
or
xor
and
adc
pop
mov
add
lds
jnp
push
cmp
inc
retf
je
daa
icebp
adc
loopne
sub
jnp
mov
xor
aad
mov
sub
ins
ins
jne
in
cwde
repnz
push
jecxz
dec
js
loop
aaa
pusha
xchg
mov
add
cmp
sub
test
(bad)
jecxz
mov
mov
movs
xor
rcl
or
clc
or
shl
call
dec
in
loopne
fsubr
mov
add
xchg
xchg
dec
inc
repz
xor
out
(bad)
test
sub
push
sbb
dec
push
stos
xchg
add
hlt
sbb
add
mov
js
xor
hlt
pop
jne
add
shr
cli
adc
xchg
and
out
sub
add
aad
add
out
fdivr
lods
add
push
pop
ret
or
or
sbb
retf
inc
ins
ret
sub
out
add
xchg
loopne
push
or
inc
push
sbb
inc
test
ret
add
jb
jbe
lods
je
stos
cmp
ss
nop
hlt
add
xor
dec
cmc
test
in
sar
imul
sub
add
test
ss
mov
sub
push
mov
mov
bound
or
call
push
imul
pop
sub
(bad)
in
fadd
push
push
inc
cld
mov
xchg
mov
dec
cmp
imul
or
iret
xchg
div
push
add
add
lea
sub
add
loopne
stos
adc
adc
xchg
lods
add
and
or
sub
in
dec
in
loop
and
add
add
mov
arpl
or
mov
jbe
movs
xchg
mov
pop
add
pop
adc
gs
add
push
jb
daa
mov
mov
push
add
out
das
jmp
cmp
mov
push
repnz
ds
mov
cs
push
test
pop
rcr
mov
scas
sbb
sahf
sbb
cdq
pusha
ja
mov
or
mov
push
mov
shl
sbb
adc
xchg
mov
push
fild
ret
adc
xor
pop
ins
xchg
sbb
and
or
in
scas
xchg
mov
dec
sbb
shl
xchg
clc
push
mov
repnz
push
scas
xchg
mov
(bad)
das
dec
mov
jmp
push
jmp
das
inc
push
push
shr
add
call
add
pop
sub
(bad)
mov
sbb
fistp
cmp
push
test
mov
xchg
fsubr
retf
loopne
jno
xchg
dec
mov
retf
into
or
js
sbb
add
adc
scas
sar
add
fld
push
dec
jnp
popf
sub
iret
adc
mov
cwde
(bad)
jmp
sbb
ficomp
jge
xchg
(bad)
cmp
dec
bound
and
fcom
pop
pop
sub
adc
arpl
ss
hlt
repz
push
pushf
sub
mov
push
lock
loop
jmp
sti
(bad)
jae
jecxz
test
leave
in
es
sub
inc
jnp
ja
mov
retf
push
sbb
push
mov
push
lods
adc
pop
inc
xchg
(bad)
dec
lods
repz
cwde
call
sub
sbb
inc
add
shl
(bad)
mov
cmp
cmp
ret
outs
push
(bad)
push
inc
aad
or
mov
xchg
add
bound
push
mov
jl
inc
and
sbb
das
stos
ret
shr
outs
mov
fld
std
pop
adc
mov
std
add
inc
gs
inc
test
iret
jae
imul
push
cmp
mov
fnstcw
adc
cmp
stc
cs
popa
ins
imul
push
xchg
(bad)
aas
inc
test
cmp
clc
sti
adc
sbb
in
in
push
adc
push
cmp
cmp
sahf
sbb
adc
mov
in
aas
push
cwde
mov
lock
adc
scas
jo
out
push
cli
out
cmp
push
adc
inc
dec
pusha
dec
test
xchg
fbstp
ja
push
ret
lods
inc
out
xchg
and
mov
imul
sub
rcl
sbb
push
add
sub
sbb
jmp
sbb
xchg
inc
aad
loope
rol
pop
iret
in
or
outs
(bad)
pop
adc
ret
je
mov
jb
outs
adc
jbe
or
je
dec
jne
ss
(bad)
adc
push
or
imul
clc
clc
ret
shr
push
jecxz
sbb
sbb
cmp
or
ins
test
gs
loope
cli
mov
jmp
cmp
adc
in
jmp
jo
push
jg
add
jmp
ss
sub
dec
cli
push
ja
mov
adc
push
(bad)
adc
mov
popa
cmp
pop
jne
mov
or
call
daa
sahf
mov
or
dec
or
or
pop
addr16
xchg
xor
adc
xor
shl
sbb
adc
inc
pop
stc
and
or
pop
mov
stos
ret
jp
loopne
sbb
ret
xchg
mov
or
add
mov
dec
out
push
imul
mov
pop
call
rcr
and
push
and
xchg
daa
adc
adc
sbb
movs
pop
xchg
mov
loope
ja
xchg
ret
push
sbb
mov
test
xor
cmp
dec
ror
aas
or
push
add
pop
mov
ins
or
adc
aaa
ret
push
add
xchg
out
mov
add
ins
pusha
sbb
shl
sahf
jbe
imul
mov
(bad)
pop
dec
inc
sub
or
sbb
pop
jmp
xor
out
xchg
cmp
cmp
mov
mov
out
adc
push
pop
ds
dec
inc
ret
ror
stos
xchg
add
shr
push
test
add
mov
cld
mov
inc
jecxz
into
pop
mov
test
or
sbb
pusha
or
adc
xor
adc
imul
lea
push
push
xor
cmp
out
in
pop
xchg
pop
xor
xchg
cmp
push
fnsave
sbb
or
adc
push
cmps
push
inc
leave
inc
mov
mov
inc
arpl
lock
xor
ud2
cmp
xchg
and
retf
mov
jo
mov
adc
and
retf
movs
push
jae
fcomp
pop
pop
xor
add
dec
add
mov
xor
lock
push
fst
mov
adc
dec
mov
mov
cmp
(bad)
jle
ins
push
adc
fiadd
push
and
xor
shr
jl
outs
sbb
cmp
daa
ret
hlt
outs
adc
sub
js
sti
pop
jle
adc
push
(bad)
pop
test
pop
push
push
sub
(bad)
jmp
push
in
and
pop
adc
pop
jle
sar
jmp
(bad)
nop
mov
mov
movs
imul
aam
test
jl
call
sub
pop
and
adc
xchg
sar
or
imul
mov
loopne
in
aas
jo
inc
jnp
jne
push
arpl
and
xchg
push
mov
pop
dec
sub
jo
or
sti
xchg
mov
inc
dec
and
push
data16
pop
push
data16
and
into
loop
xor
dec
pop
dec
and
mov
xor
sti
shl
xchg
adc
mov
sti
jl
mov
push
pop
add
data16
(bad)
stos
cld
mov
xchg
jo
call
les
or
cmp
jmp
mov
inc
xchg
or
or
lock
fadd
lock
xor
push
por
jl
mov
shl
sbb
jp
cmp
outs
or
das
mov
sbb
sbb
popf
or
test
mov
jecxz
adc
imul
fs
dec
pop
hlt
pop
sub
lock
movs
jno
dec
xor
ss
movs
fadd
mov
loope
add
xchg
or
sbb
sub
mov
inc
sbb
shl
data16
shl
xchg
push
icebp
loope
adc
add
push
jle
push
lea
push
or
mov
mov
adc
mov
pop
add
or
icebp
cmps
mov
lods
mov
and
mov
and
cmp
push
cmp
adc
adc
retf
cmp
int3
add
inc
and
rol
sub
add
push
mov
pusha
mov
data16
xchg
dec
add
or
inc
add
adc
movs
cmp
add
repz
lds
mov
inc
loop
mov
or
and
sbb
cld
inc
push
stc
das
leave
adc
je
push
movs
dec
dec
mov
mov
stos
mov
dec
clc
xor
out
leave
in
adc
and
out
xchg
xchg
push
add
and
lods
add
pop
enter
adc
pop
xor
clc
fild
test
add
cmp
add
xlat
imul
add
adc
or
es
inc
sbb
add
inc
ret
push
mov
mov
loop
and
int
(bad)
rcr
add
loope
and
push
aam
mov
dec
cmp
add
sbb
sbb
fild
xor
inc
lock
xor
movs
stos
xchg
push
fldenv
xor
pushf
mov
push
mov
nop
jmp
ss
inc
adc
popa
xchg
loopne
retf
jae
rcl
lds
loopne
inc
sub
rcl
clc
sbb
or
imul
adc
xor
add
stos
cmp
jb
jecxz
inc
enter
mov
mov
push
js
out
mov
adc
scas
sbb
jp
(bad)
adc
(bad)
out
pusha
mov
push
add
or
mov
lds
pop
lods
xchg
xchg
fisttp
daa
fwait
sbb
xlat
xor
xchg
jecxz
repz
xchg
rcl
addr16
lock
ret
fsubr
and
outs
jns
push
pop
xor
ret
ins
gs
das
les
push
add
dec
(bad)
in
ret
push
jmp
xchg
mov
inc
jne
js
and
loope
inc
push
sbb
es
xchg
es
loopne
pop
jbe
aas
les
leave
dec
or
imul
and
push
lock
outs
retf
and
mov
inc
jbe
jge
jbe
add
(bad)
cwde
frstor
gs
loopne
push
xor
jge
test
dec
push
loopne
test
pop
cmps
fadd
xchg
cmp
fwait
out
jne
cmp
sahf
pusha
inc
or
(bad)
xlat
xor
in
mov
jbe
push
nop
test
or
sbb
add
inc
les
jge
sub
icebp
adc
test
push
and
popa
push
xlat
ins
retf
retf
or
test
(bad)
call
enter
rol
bound
jo
inc
adc
jo
jle
pop
push
aas
in
ins
dec
or
nop
je
pop
adc
push
adc
sub
jbe
out
and
mov
mov
inc
shl
mov
inc
inc
enter
dec
inc
xlat
push
retf
jns
pop
dec
jne
jmp
ret
test
pop
and
inc
pop
ss
mov
fst
push
xchg
ror
push
xchg
retf
js
mov
push
or
jg
push
scas
push
xlat
and
pop
stos
inc
add
and
mov
xor
cmc
cmp
or
mov
inc
cmps
push
pop
sbb
add
(bad)
mov
repz
ins
mov
jnp
ficomp
test
repz
fs
movs
push
lahf
daa
sbb
daa
div
lock
mov
cmp
or
enter
es
inc
les
inc
or
repz
les
rcl
jnp
pop
imul
sub
pop
mov
jns
add
hlt
ins
cdq
ss
or
pop
pop
pop
xor
push
xchg
jno
cmp
mov
adc
jnp
out
ud0
add
repnz
and
sub
sbb
arpl
jl
shr
or
lea
js
mov
add
and
pop
test
dec
retf
dec
pop
and
les
add
add
or
sbb
div
mov
dec
sbb
loope
dec
add
jmp
cmp
sub
fld
or
fstp
cmps
inc
sbb
sub
fisubr
sub
lds
push
std
cmp
pop
jne
cmp
mov
jl
into
mov
or
mov
ss
adc
sbb
pop
sub
push
enter
imul
lods
popa
and
aas
je
sbb
mov
xchg
fwait
push
imul
out
or
jb
mov
ja
xor
out
popa
out
fcomip
div
inc
inc
jae
lea
mov
inc
or
xchg
xor
data16
xor
scas
push
dec
pop
add
lea
ror
shl
les
jmp
leave
inc
mov
pushf
xchg
and
mov
aaa
mov
cmp
jbe
push
mov
data16
fld
inc
mov
adc
adc
jle
push
add
jns
aam
lea
shl
sub
sti
enter
stc
mov
lea
xchg
push
jp
xchg
add
push
mov
mov
push
out
push
icebp
xchg
jmp
push
es
in
imul
or
jae
ja
pop
push
inc
or
push
aam
xor
jmp
out
(bad)
jp
daa
sub
inc
adc
push
xor
mov
in
mov
jb
jmp
(bad)
pushf
hlt
sti
clc
loope
pop
sub
dec
adc
xlat
aam
(bad)
imul
loope
push
mov
iret
mov
jne
fild
adc
add
adc
jg
jge
push
ret
xor
push
mov
cli
push
clc
sub
xchg
push
push
loope
or
add
leave
movs
pop
rol
data16
mov
cmp
jno
fisub
in
mov
fidivr
(bad)
and
pushf
out
mov
add
sbb
pusha
sbb
cmp
add
add
out
mov
cmps
adc
mov
jp
xor
and
and
sbb
sti
movs
push
pop
or
or
dec
or
jne
jmp
sar
dec
(bad)
push
(bad)
dec
rcl
sub
loopne
jnp
hlt
(bad)
push
or
push
or
dec
jns
sbb
addr16
popa
pop
icebp
push
pop
mov
push
inc
std
mov
pop
xchg
inc
shl
dec
cs
and
cli
cmp
out
(bad)
mov
dec
cmp
nop
loope
pop
push
sti
and
jne
xor
movs
cdq
pop
push
pop
pop
dec
pop
jns
cli
jo
leave
sub
cmp
jo
sti
inc
fsubr
dec
inc
inc
dec
call
retf
push
mov
mov
pusha
in
fwait
clc
adc
xor
sub
sub
pop
sub
push
add
inc
sub
js
dec
mov
sbb
lds
enter
repnz
dec
fs
xlat
jo
sub
js
xchg
cwde
pop
cli
sbb
push
cmp
fld
adc
imul
shl
lea
mov
sub
aam
mov
jmp
add
test
sub
imul
sbb
inc
out
or
pop
xor
xor
pushf
cdq
daa
cmc
push
pop
je
or
loopne
pop
jmp
sub
sbb
dec
js
push
add
les
inc
or
mov
inc
sar
ss
in
pop
pop
add
(bad)
call
cmp
imul
imul
imul
mov
mov
ror
mov
test
mov
xchg
retf
in
mov
jb
pop
cs
rcl
fsubr
xchg
retf
in
loopne
call
pop
lock
clc
cld
cs
dec
in
add
or
in
mov
and
retf
and
sub
xor
in
mov
mov
dec
push
push
pop
xchg
retf
in
pop
pusha
fs
cs
js
and
shl
test
(bad)
pop
xor
jne
mov
mov
add
adc
add
pop
shr
xchg
jp
and
popf
fadd
test
test
add
dec
loopne
test
les
sub
push
movs
push
mov
xchg
dec
mul
rol
adc
popa
add
nop
pop
or
pop
dec
ss
jnp
adc
dec
fisttp
xor
shl
cmp
inc
xor
sbb
mov
js
add
mov
add
ins
sbb
sbb
mov
xor
mov
mov
dec
add
xor
mov
xor
push
xchg
or
xchg
push
ins
and
add
xor
sbb
xchg
sub
add
xor
sbb
xor
call
push
adc
loope
cmp
sbb
lea
and
xchg
or
add
cmp
sbb
dec
std
dec
aad
push
outs
cmp
outs
add
mov
add
(bad)
pop
pop
dec
js
mov
pop
add
ret
push
shr
ds
fs
das
retf
and
xchg
push
and
jbe
(bad)
cmp
jle
(bad)
fld
icebp
call
jl
jmp
es
mov
fst
bound
sbb
fld
add
and
sbb
inc
lds
mov
cmc
mov
and
and
vmaskmovdqu
leave
mul
jbe
sub
jmp
mov
and
add
pop
adc
adc
inc
pavgb
mov
stos
add
js
mov
je
and
inc
pand
lods
push
and
mov
je
into
adc
rol
jle
ror
add
or
movs
mov
jmp
sti
cmp
sub
fstp
fwait
clc
jmp
loop
hlt
jle
cs
in
mov
jl
jmp
clc
jmp
test
jle
dec
mov
jno
push
mov
and
or
pusha
sbb
test
pop
add
nop
pop
mov
sbb
xor
sti
or
mov
adc
nop
rcl
jbe
add
or
xor
lds
push
retf
retf
xor
call
and
mov
sbb
lahf
cwde
mov
stos
mov
ret
xchg
nop
pop
sub
xor
mov
pusha
pop
inc
dec
mov
hlt
int3
fstp
adc
fidivr
movs
aas
or
add
repnz
sbb
jp
pop
adc
xchg
adc
hlt
jmp
mov
fistp
enter
sub
pop
push
dec
mov
mov
push
(bad)
(bad)
sahf
push
int3
add
mov
jge
or
hlt
push
mov
mov
adc
inc
push
push
xor
aas
xor
jmp
aaa
or
xor
xchg
stos
and
shl
xchg
pop
push
test
jne
push
push
mov
sub
sbb
ds
pop
outs
inc
jg
lds
pop
mov
cmps
imul
adc
jno
cmp
stos
cmp
pop
inc
pop
xor
rcl
pop
(bad)
adc
ins
dec
dec
mov
push
les
mov
cmp
and
or
rol
add
and
in
and
sti
mov
sar
push
imul
xchg
xchg
loopne
fisubr
cmp
cmp
ret
sub
mov
mov
adc
loope
adc
jmp
jge
add
jecxz
add
adc
sti
push
dec
sub
and
cmp
sbb
or
adc
in
rol
pop
push
mov
mov
leave
xor
inc
je
mov
(bad)
sbb
int3
sahf
pop
fdiv
ret
and
pushf
or
hlt
je
cmp
cmp
in
push
sbb
cmp
adc
push
push
cmps
mov
nop
int3
loopne
push
test
and
inc
cld
push
mov
push
cmp
inc
in
loopne
push
mov
mov
jl
adc
loop
rcl
cld
or
inc
jo
or
push
jo
cmp
outs
inc
js
retf
mov
xor
add
clc
or
aaa
jl
adc
sbb
xchg
adc
add
adc
ss
pop
push
imul
inc
mov
pop
xor
or
push
push
js
xchg
ror
dec
fmul
add
in
xor
(bad)
rol
adc
or
adc
and
dec
xchg
jbe
outs
adc
bound
add
fwait
movs
in
das
add
loopne
add
call
push
add
into
and
test
pushf
cmp
mov
in
movs
xor
sar
ins
sub
mov
bound
pop
inc
int3
psubq
movs
aaa
mov
xchg
test
sub
jmp
and
jmp
ss
inc
or
jno
add
loopne
ret
xor
sbb
movs
out
xor
test
stos
adc
pop
cvttps2pi
sahf
push
push
xlat
xchg
test
push
sub
push
add
sbb
cmp
lock
mov
or
lock
xchg
add
int3
jo
pop
lods
dec
adc
nop
lods
mov
test
xor
int
and
and
test
mov
test
mov
mov
xchg
add
(bad)
push
inc
lea
jbe
movs
jecxz
xchg
sbb
dec
pusha
sbb
ins
jb
mov
sub
jge
push
push
(bad)
mov
(bad)
pop
cmps
mov
cmp
mov
xchg
mov
cmp
mov
add
pop
jl
mov
sub
enter
xor
test
jl
sti
jge
inc
jl
icebp
xchg
dec
add
and
loope
dec
sub
daa
inc
aas
push
cdq
jne
jo
test
hlt
ja
push
movs
inc
or
fsubr
add
jmp
mov
jg
mov
cmp
rol
gs
retf
or
(bad)
and
dec
in
sbb
mov
les
jge
push
pop
or
sub
push
sahf
cmp
push
push
pop
add
fsub
ds
sbb
jne
adc
and
enter
popf
add
inc
fwait
pushf
add
mov
push
cs
adc
jle
rol
push
das
fcomp
cmp
inc
adc
xchg
inc
div
outs
or
push
push
push
test
jne
jmp
movs
sti
mov
ds
imul
in
cmp
iret
sti
(bad)
cmp
sti
push
enter
push
nop
cmp
les
pop
cmp
mov
or
nop
rol
call
inc
les
add
in
cli
cmp
je
sbb
adc
idiv
and
sahf
lea
sar
push
mov
lods
cmc
ficom
icebp
add
imul
pop
in
dec
inc
inc
push
jnp
int3
ins
mov
mov
sbb
aam
mov
stos
pop
and
xor
ja
sub
mov
lods
mov
cmp
sar
lea
movs
rcr
or
push
call
xlat
lea
fcom
mov
test
test
imul
shl
sbb
cmp
or
loope
mov
xchg
ret
adc
mov
pop
mov
cs
retf
movs
sbb
push
jo
in
mov
cld
mov
retf
gs
sbb
jg
sbb
fimul
dec
push
repnz
int3
aaa
and
add
out
xlat
mov
jno
inc
test
or
push
js
leave
dec
mov
and
cwde
or
jmp
mov
mov
test
inc
imul
inc
cmps
adc
add
xor
mov
and
push
push
movs
or
pusha
idiv
mov
outs
clc
and
ins
leave
and
in
inc
pusha
ret
call
in
add
arpl
jne
leave
inc
mov
inc
in
mov
sub
inc
xchg
push
cmp
shl
shr
rcr
and
fist
arpl
cmp
mov
or
idiv
add
enter
dec
jmp
call
adc
jbe
xchg
xchg
sub
cdq
jbe
adc
add
rcl
cmp
in
fcomp
push
sbb
add
xchg
mov
les
push
leave
mov
data16
std
jge
push
iret
and
jle
sbb
pop
adc
or
push
je
cmovle
pop
cmp
pop
sbb
dec
inc
pop
sbb
test
push
pop
adc
push
js
adc
push
add
inc
ficomp
test
pop
add
mov
pop
ret
push
adc
rcr
xchg
mov
push
lea
mov
cmp
push
cli
ins
pop
popa
xchg
inc
jmp
inc
or
daa
cmps
adc
sub
mov
rcr
cmp
repnz
mov
dec
aam
or
xor
mov
out
cmps
add
or
pop
cmp
sbb
lods
test
mov
or
lock
mul
cmp
inc
dec
xchg
adc
xor
push
dec
ror
or
sbb
mov
cwde
gs
pushf
lods
shr
arpl
pop
sub
xchg
adc
call
popf
in
or
je
xor
and
xchg
ss
fimul
pusha
cmp
enter
mov
dec
sbb
imul
xor
test
and
mov
dec
mov
sub
mov
in
fwait
add
xor
popa
cmp
inc
mov
popa
or
sbb
sub
jb
adc
dec
dec
xchg
add
dec
jnp
dec
jnp
push
inc
add
inc
mov
dec
xor
inc
or
jecxz
mov
sbb
inc
shl
aad
and
outs
psllw
adc
scas
dec
add
inc
data16
cmp
jnp
inc
cmp
(bad)
mov
xchg
xor
adc
pusha
(bad)
in
fisttp
lea
mov
dec
cmp
jle
sbb
rcr
push
sub
mov
mov
or
or
mov
xchg
sub
movs
shl
mov
in
rcr
add
add
ins
push
sbb
mov
popa
cmp
mov
mov
mov
(bad)
pusha
push
call
push
fnsave
sub
push
and
fmul
mov
repnz
sub
cmp
nop
out
add
push
daa
mov
add
pop
adc
fst
or
jge
(bad)
xlat
push
lods
cmps
inc
call
mov
xchg
shr
sub
ret
aaa
push
dec
test
and
pop
call
popf
out
dec
adc
xchg
push
or
dec
movs
jge
mov
mov
in
iret
cmp
sbb
sbb
mov
mov
pop
push
inc
into
or
pop
(bad)
push
or
inc
and
jp
lea
inc
movs
cli
fwait
iret
(bad)
addr16
test
inc
pop
loop
lahf
or
repz
sub
inc
std
jo
in
jno
sar
enter
and
dec
fistp
sbb
enter
push
sub
scas
ret
and
aam
push
dec
push
jge
test
and
sar
add
js
sbb
(bad)
mov
mov
pop
adc
adc
adc
inc
fsub
aam
or
push
dec
mov
dec
in
mov
ins
nop
xchg
test
sbb
cmp
xchg
mov
xor
cmp
pop
cmps
movs
pushf
cwde
cmp
test
in
ss
mov
add
pop
aas
fcomi
mov
and
pop
sbb
xor
mov
or
in
inc
mov
inc
ss
mov
push
cwde
shr
ret
adc
push
aas
xchg
sbb
xchg
mov
sub
adc
and
dec
add
inc
pushf
cdq
mov
loopne
mov
push
jne
out
cdq
or
outs
enter
add
mov
push
cmp
jne
mov
call
add
sbb
mov
test
inc
mov
mov
pop
sub
adc
sub
xchg
pop
push
hlt
mov
jp
dec
nop
adc
pop
ins
add
inc
jae
jnp
clc
push
mov
mov
jmp
inc
xchg
mov
cld
jmp
stc
rcl
out
dec
or
shl
xchg
std
test
jmp
mov
sub
cdq
pop
push
adc
inc
(bad)
or
cmp
xchg
add
xor
push
rol
mov
or
test
push
add
push
xlat
push
mov
fcom
mov
popa
popf
sub
sub
and
adc
imul
hlt
ins
or
mov
das
jne
mov
push
inc
jbe
push
pop
mov
pushf
pandn
fwait
out
jl
movs
dec
add
push
dec
jmp
std
adc
test
mov
sbb
push
icebp
xor
push
std
push
ja
es
push
les
mov
or
mov
rcr
sub
sbb
add
jne
mov
add
imul
push
mov
sbb
clc
mov
test
or
scas
std
push
dec
loopne
jle
adc
loopne
inc
jmp
leave
adc
pop
jmp
inc
leave
adc
ror
in
les
(bad)
dec
lock
enter
xor
out
xor
leave
push
fs
ret
add
es
and
outs
jmp
add
sbb
icebp
or
fmul
in
push
inc
or
js
add
mov
cmp
pop
mov
mov
push
mov
ja
scas
mov
loopne
adc
iret
bswap
fsub
jne
retf
lods
jle
mov
daa
mov
outs
and
leave
mov
cs
pop
adc
xor
aas
mov
inc
cwde
and
pop
sbb
ins
xor
je
and
sub
popf
(bad)
repz
push
sbb
add
ret
gs
cmp
nop
xchg
sbb
and
xor
cmp
fiadd
cmp
scas
ret
retf
unpckhps
ins
call
jne
adc
pushf
lods
cmps
adc
std
mov
ficom
pop
or
push
std
jne
mov
push
call
es
add
or
dec
xor
push
xor
jnp
mov
inc
push
je
and
cmp
adc
das
inc
pop
inc
ret
sub
jmp
sbb
jnp
sbb
(bad)
xchg
inc
bswap
adc
or
add
add
add
movs
repnz
xchg
test
shl
popa
or
repz
pop
lahf
add
inc
fbld
mov
xchg
cmp
mov
adc
(bad)
movs
jg
iret
aam
fistp
lds
push
frstor
ret
or
pop
push
leave
fisubr
ds
sub
js
ror
xor
push
mov
cmp
pop
jg
lock
imul
mov
push
add
pop
pusha
mov
fdiv
and
xor
add
and
inc
ins
xor
dec
aad
sti
dec
arpl
adc
les
dec
add
nop
push
or
mov
pop
cmp
pop
add
pop
inc
cwde
push
push
add
adc
sbb
call
enter
inc
fadd
enter
xchg
loopne
pop
popf
cmp
push
call
or
adc
fs
sbb
shufps
(bad)
sbb
pop
xchg
and
sub
call
xor
(bad)
fld
cmp
imul
test
xor
jne
inc
loope
pop
loopne
and
push
or
inc
clc
mov
add
fcomp
es
xor
inc
bound
(bad)
out
loopne
shl
inc
adc
lods
pop
sub
jl
sbb
ja
push
push
push
popa
mov
pop
xchg
dec
adc
cmp
or
rol
es
add
pusha
pop
or
xchg
pusha
(bad)
ss
loop
ret
pop
mov
and
adc
sbb
cs
xor
pop
jno
push
inc
lahf
dec
add
or
push
mov
loope
push
push
es
lock
int
or
or
inc
push
sbb
(bad)
loop
and
loope
lods
rdmsr
and
ss
push
shl
or
test
or
jmp
hlt
pop
and
cmp
jle
cmp
js
pop
cmp
and
push
pop
inc
lea
pusha
jmp
sar
pop
xor
dec
fdivrp
sub
dec
fldenv
cmp
jle
push
pop
jo
pop
xchg
(bad)
imul
adc
xchg
mov
scas
(bad)
adc
call
cmp
push
xchg
lock
out
add
mov
not
pop
and
fnstcw
add
cmp
add
push
dec
jne
lods
push
add
dec
add
rcr
cmp
dec
into
adc
jecxz
sub
push
mov
mov
push
aam
and
push
mov
push
inc
or
fs
ret
cmp
or
push
icebp
sub
cmp
mov
push
adc
jbe
cmp
xor
leave
push
inc
or
mov
mov
or
clc
cmps
lea
lds
inc
ret
inc
fs
inc
or
rol
fsubr
repz
cld
aas
dec
and
xchg
push
ret
call
imul
not
and
out
or
add
fsubr
dec
push
add
cmp
test
jne
xchg
scas
loop
inc
loop
imul
movs
and
cmp
imul
mov
pop
cmp
sbb
loopne
sbb
push
sub
push
inc
or
add
icebp
ins
or
lock
add
out
nop
inc
clc
adc
xor
and
mov
sbb
loopne
pushf
jb
fsubr
cld
mov
xchg
ror
call
or
xchg
xchg
js
adc
pop
and
sub
or
push
movs
fs
adc
jge
inc
inc
in
xor
loopne
ins
mov
mov
and
inc
inc
mov
cs
dec
or
popf
push
das
rcl
je
inc
movs
sbb
push
or
mov
aaa
xor
sbb
movups
enter
push
daa
dec
and
pop
adc
out
mov
inc
push
(bad)
sub
aad
sub
ins
xchg
(bad)
daa
push
ins
mov
mov
xchg
or
dec
pop
adc
arpl
in
test
sahf
popa
sub
inc
inc
ja
cdq
and
or
lock
pop
test
and
call
fst
shl
les
push
xchg
dec
je
sub
je
jmp
ret
lods
cmp
jg
cmp
jne
inc
xchg
arpl
xchg
iret
or
jnp
mov
hlt
adc
sbb
ins
mov
shl
movs
lea
push
adc
pop
push
js
sar
and
shr
jg
into
nop
xchg
dec
loop
sub
pop
rol
sbb
sub
movs
xchg
and
jns
scas
in
loopne
inc
mov
in
jmp
add
xor
lock
cld
sbb
pushf
(bad)
jge
sub
test
call
inc
rol
xchg
dec
adc
pop
xchg
aam
pushw
(bad)
call
pop
mov
ret
in
aas
fst
mov
xor
mov
pop
adc
inc
scas
mov
out
dec
xor
mov
jne
fnstsw
mov
push
mov
test
arpl
sbb
push
mov
ret
inc
xor
add
xor
dec
cmp
xor
lock
inc
hlt
adc
or
out
jmp
and
add
arpl
(bad)
push
cmp
or
mov
and
movs
push
mov
call
mov
cs
push
aaa
fbld
pop
dec
aam
add
pop
mov
clc
jne
dec
popf
call
cmp
enter
jecxz
ret
fdivr
ret
inc
inc
cmp
pop
mov
or
xchg
sbb
ins
sbb
js
push
adc
mov
mov
(bad)
sub
or
scas
xor
arpl
jo
xor
cwde
enter
ja
sbb
push
(bad)
sub
call
mov
xor
push
jge
add
ficomp
ret
xchg
into
in
loop
xor
fsubr
pushf
test
jl
add
loope
push
mov
lds
pushf
shl
mov
mov
mov
adc
and
in
adc
fldlg2
sbb
mov
repz
(bad)
dec
jno
inc
pushf
inc
es
mov
es
inc
cmp
retf
je
sbb
dec
dec
rcl
jle
pop
dec
push
out
popa
iret
cmp
mov
pop
inc
cwde
jl
shr
inc
mov
add
sub
repnz
inc
mov
or
inc
add
je
xchg
call
inc
cs
add
idiv
jle
movs
pop
rol
int3
add
movs
mov
movs
lods
push
mov
pop
mov
mov
fmul
es
popa
ins
test
or
sub
popa
sub
bound
add
stos
neg
or
adc
out
push
sbb
mov
and
mov
in
sub
mov
fsubr
cmp
cmp
sbb
test
pop
push
sbb
inc
cmp
je
push
int
lods
push
mov
adc
cs
xchg
pop
sub
and
add
outs
loopne
lds
mov
icebp
adc
in
inc
clc
add
sbb
fidiv
ins
or
push
test
pop
mov
(bad)
lea
fs
mov
sub
adc
cmp
jae
mov
or
mov
inc
and
cdq
pop
mov
mov
or
xchg
inc
or
nop
mov
movs
test
out
ficomp
inc
sub
in
add
or
mov
mov
pop
push
mov
push
dec
dec
pusha
retf
jmp
inc
inc
retf
dec
xor
fisubr
mov
and
nop
nop
mov
inc
mov
cs
cmp
or
aaa
sbb
sub
sbb
ret
sbb
add
adc
data16
cdq
dec
rol
call
mov
cmp
inc
pop
adc
sub
outs
leave
leave
dec
cmp
aad
inc
retf
ins
adc
xchg
pop
cmps
dec
jmp
cld
pop
loopne
push
sub
fs
add
add
lods
add
lahf
push
cmp
sbb
(bad)
inc
jb
pop
add
ret
jmp
or
push
and
arpl
cmp
stos
lea
push
test
pop
cmp
pop
jp
jno
or
and
push
das
and
or
shl
ds
daa
(bad)
xchg
adc
fmul
je
inc
daa
sbb
mov
lods
fstp
add
fsubr
imul
outs
sbb
(bad)
adc
jl
jg
sbb
jl
jl
cmp
fsubr
out
push
sub
in
in
jmp
out
enter
call
push
push
adc
into
rcl
test
jne
aaa
pop
mov
bound
inc
jl
mov
loopne
dec
ja
pop
mov
adc
ins
popa
push
jge
lods
sub
popa
and
hlt
sbb
pop
daa
ficom
or
lea
or
scas
jne
and
imul
sbb
mov
push
and
arpl
ror
in
aam
add
cmp
pusha
aaa
xchg
aam
push
mov
push
adc
call
dec
mov
enter
dec
pop
lock
dec
ins
dec
jmp
popf
je
lea
mov
fstp
je
mov
add
xchg
push
mov
(bad)
xlat
popf
int3
adc
sar
and
adc
ss
or
add
imul
scas
gs
mov
push
xchg
mov
and
je
xchg
ins
jmp
pop
push
inc
fsubr
dec
loop
inc
mov
add
jecxz
into
adc
sub
pop
enter
sahf
cmp
adc
dec
ins
and
add
cmp
push
cmp
push
push
(bad)
(bad)
mov
out
cdq
jns
jae
push
add
pop
jo
sbb
nop
daa
lock
clc
push
call
rcr
pop
pusha
add
lods
arpl
loope
loope
out
cdq
arpl
mov
or
cmp
or
xor
mov
sub
sub
push
ja
and
or
sub
(bad)
div
cmp
je
mov
adc
mov
jne
inc
push
xor
inc
sbb
gs
add
daa
cmp
test
add
jno
add
adc
and
cld
cwde
mov
push
dec
jne
shr
xchg
data16
in
scas
or
push
fnstcw
clc
or
dec
add
nop
inc
xor
push
mov
jecxz
push
adc
nop
aaa
jmp
add
iret
ret
loopne
movs
cmp
je
push
outs
sbb
lock
jno
jmp
jmp
mov
pop
sbb
push
adc
inc
je
cmp
mov
jmp
push
int
adc
cmp
or
sbb
jns
fdivr
inc
jno
sti
dec
jne
adc
movs
push
sub
mov
cmp
push
sti
not
pop
sar
mov
sahf
inc
enter
enter
fbstp
sub
sbb
cwde
retf
add
dec
or
(bad)
test
enter
cmp
mov
add
pop
mov
mov
retf
leave
daa
dec
clc
imul
fcmovb
xchg
rcl
push
add
add
in
xchg
xlat
bound
sub
loopne
into
repnz
inc
loopne
pop
push
adc
aaa
mov
push
cmp
adc
inc
jo
cmps
or
sahf
jae
shl
addr16
or
inc
outs
dec
dec
jmp
xchg
pop
fwait
loopne
leave
mov
adc
or
pop
push
push
loopne
call
aam
(bad)
cmp
mov
dec
add
mov
(bad)
leave
push
lahf
aaa
jmp
sub
out
cmp
into
push
dec
jmp
cmp
xchg
jmp
inc
inc
xchg
(bad)
shl
fld
add
cmp
aas
adc
lea
cmp
jl
jle
hlt
cmp
jg
jmp
adc
jl
cmp
jg
mov
dec
shl
add
mov
ins
(bad)
and
mov
sbb
jnp
mov
dec
adc
(bad)
loopne
push
add
xchg
and
mov
cmp
daa
and
call
inc
aas
hlt
mov
fbstp
in
or
js
hlt
ja
or
sbb
fmul
push
ret
cdq
lods
enter
mov
push
fdivr
adc
rol
fadd
dec
mov
cmps
loopne
mov
sub
jo
in
lea
out
mov
aam
jbe
push
fisubr
or
mov
cmp
stos
adc
stc
stos
adc
test
xchg
ds
lahf
shr
loope
adc
sub
aaa
shr
and
outs
mov
add
lock
push
inc
sbb
in
lock
aam
jl
cmp
and
dec
dec
sub
or
dec
leave
mov
lods
add
test
xchg
ss
push
cmp
inc
push
xchg
mov
test
mov
add
dec
add
pop
test
shr
jp
and
add
fucomi
loopne
inc
mov
dec
xchg
cmp
cs
or
call
ins
outs
pop
rol
push
mov
mov
outs
lea
pop
cwde
and
aaa
mov
or
mul
sub
adc
test
stc
mov
jne
adc
add
call
adc
inc
push
adc
cld
or
add
or
push
pushf
inc
outs
aaa
ror
or
pushf
push
jo
rcl
jno
loopne
jnp
cmp
adc
dec
xor
test
aaa
xchg
sbb
push
(bad)
shl
mov
sbb
push
mov
and
jae
xor
test
mov
sub
mov
cmp
pop
xlat
ja
mov
and
jmp
lds
stos
sbb
div
and
outs
ret
pop
jge
xor
jo
adc
adc
call
ds
lds
sub
jp
or
sbb
dec
add
shr
adc
jle
mov
inc
popf
shl
add
dec
cdq
cwde
ins
xchg
push
mov
loop
cmp
cmc
sub
dec
adc
pop
lea
or
cmc
xor
adc
sbb
aam
xchg
sbb
retfw
aaa
mov
test
and
je
add
mov
mov
jbe
sub
xchg
call
jne
jbe
jae
push
lods
inc
sub
(bad)
sbb
(bad)
div
dec
imul
xchg
or
dec
adc
rcl
not
sar
adc
je
mov
mov
cmp
jp
ret
mov
jne
dec
imul
push
js
repnz
imul
mov
lahf
xor
or
dec
sub
push
dec
xchg
mov
jmp
out
mov
ds
rcl
pusha
and
jbe
jg
mov
pop
scas
lods
aad
sub
ins
nop
mov
movs
push
ficomp
and
jl
rol
jne
or
sbb
and
inc
sar
fdivr
pop
add
inc
mov
push
mov
or
push
dec
in
mov
push
fdivr
(bad)
jne
fld
gs
inc
or
ja
add
out
sub
loopne
inc
inc
pop
retf
ret
aas
xor
cmp
cmp
adc
outs
jno
jno
clc
push
dec
or
jge
je
nop
int3
lea
jmp
mov
adc
arpl
pop
push
jmp
mov
sbb
dec
loopne
into
data16
adc
test
rcl
addr16
in
xchg
je
lea
ficom
cmp
ror
nop
and
loopne
pop
rcl
in
mov
sbb
or
mov
out
push
or
ror
or
int
sub
leave
push
jnp
xor
dec
mov
push
add
lea
adc
es
stos
push
or
mov
add
and
arpl
cs
pop
jo
adc
retf
or
fsubr
mov
inc
test
test
ret
imul
cld
pop
jae
adc
pop
shl
test
ret
cdq
xor
ss
test
pop
xor
retf
shl
out
mov
mov
or
jle
cmovno
inc
call
xor
shl
fidiv
test
scas
sbb
mov
sbb
dec
rcl
jmp
rcl
or
or
push
pop
pop
mov
push
sbb
or
(bad)
pop
pusha
clc
and
or
lock
data16
mov
das
or
jl
nop
(bad)
hlt
pop
xchg
pusha
or
or
cmps
pop
arpl
push
inc
dec
aam
inc
mov
pop
xchg
movs
sbb
xchg
pop
shr
cmp
inc
xchg
retf
clc
sbb
inc
inc
arpl
or
hlt
jle
lock
aaa
mov
cld
clc
cs
push
retf
sbb
fbstp
hlt
add
sub
add
lock
xchg
sbb
jnp
loope
ficom
jg
sbb
adc
mov
jecxz
xchg
fidiv
mov
add
pop
ret
sub
mov
lock
sbb
movs
and
inc
pop
jg
(bad)
cmps
inc
cmp
cmp
ja
jecxz
jmp
jl
mul
cmp
inc
and
or
inc
les
jne
jl
sub
pop
popa
pop
xchg
or
jmp
add
sub
sub
mov
ds
pop
cli
or
xor
in
or
pushf
ret
loope
dec
outs
cmp
pop
pinsrw
gs
mov
fcomp
push
and
mov
push
add
add
mov
xor
cdq
push
dec
add
es
or
in
sbb
adc
or
sti
test
add
pusha
push
shl
in
in
push
adc
sbb
mov
sbb
int
loope
xor
mov
mov
push
adc
scas
pop
mov
jmp
add
adc
(bad)
cdq
mov
adc
fdiv
jo
sti
(bad)
jmp
mov
pop
imul
or
or
pop
lods
in
cmp
jbe
inc
lock
lahf
xchg
adc
cmp
adc
movs
bound
cld
jg
mov
or
out
and
push
add
data16
push
aaa
push
in
pop
or
int
push
xor
cmp
xor
ficomp
sub
mul
mov
ret
popf
cmp
test
add
jne
jno
pop
loop
jmp
cmc
ret
ret
adc
adc
mov
xchg
cdq
add
pusha
(bad)
sbb
push
call
mov
sub
push
sub
mov
leave
jle
pop
sbb
lods
mov
lea
mov
jo
ja
cmp
fwait
test
push
popa
imul
enter
add
push
int3
inc
mov
jmp
push
pop
cli
(bad)
mov
dec
out
jmp
push
enter
imul
inc
pop
lods
jmp
dec
jne
pop
pop
sub
mov
push
stos
not
shl
pop
sbb
cmp
mov
mov
xor
ss
and
aad
sbb
(bad)
jmp
mov
and
leave
test
mov
cmps
retf
pop
iret
push
aam
add
add
leave
sbb
push
jp
or
cmp
jo
sub
addr16
fidiv
or
cmp
mov
test
dec
inc
or
inc
pop
(bad)
icebp
jno
jge
xlat
sub
adc
mov
pop
push
dec
sahf
(bad)
sbb
cmp
sub
clc
and
sbb
or
inc
mov
ins
test
push
push
add
loopne
(bad)
imul
or
data16
push
in
js
loop
in
out
jp
rol
fwait
inc
rol
sbb
sbb
mov
push
inc
pusha
xor
push
inc
push
test
fisubr
dec
or
ret
or
lea
mov
mov
mov
rcl
rcl
popa
rcl
dec
mov
hlt
push
sub
push
or
jecxz
push
popa
fwait
nop
cli
push
xor
fld
pop
mov
push
pushf
add
leave
mov
sub
xchg
mov
call
or
pop
test
or
sub
cmp
jbe
jmp
push
push
push
ret
pop
int
dec
xchg
add
xchg
adc
sbb
inc
movs
dec
call
out
pop
sub
add
lea
inc
pop
fmul
shl
jno
sbb
movs
cmps
inc
pushf
or
inc
cmp
fisubr
inc
mov
sub
push
js
mov
ds
push
clc
add
and
xor
xor
xchg
ret
push
mov
outs
icebp
push
repz
dec
movs
pop
xor
hlt
mov
sub
es
add
xchg
add
push
sbb
lods
inc
(bad)
add
jns
call
xor
mov
test
push
add
or
push
cmps
push
arpl
in
cmc
xor
int3
add
mov
inc
pushf
mov
dec
push
test
push
and
xor
push
rcl
pushf
mov
adc
dec
mov
inc
xor
dec
rol
loopne
loope
inc
or
inc
loopne
in
mov
mov
sbb
aad
jp
mov
int3
scas
dec
in
push
(bad)
ss
mov
sub
shl
and
adc
or
sub
movs
rcr
or
cs
mov
mov
ins
pop
add
mov
stc
ds
pop
cmps
(bad)
jb
dec
es
xor
mov
cmp
mov
mov
and
and
cmp
js
cmp
add
leave
leave
mov
pop
and
or
mov
inc
sbb
sar
addr16
xor
test
call
adc
inc
and
pop
push
and
lea
ja
pop
inc
es
loop
fdiv
or
add
add
ret
xor
adc
and
xchg
sbb
pop
retf
lahf
jecxz
ficom
push
or
lea
lock
add
pusha
add
pushf
loope
xor
enter
enter
sbb
out
add
add
repnz
or
test
jno
pop
xor
adc
nop
xor
xchg
pop
ror
push
or
stos
nop
add
loopne
adc
push
enter
mov
pop
cmp
mov
cmp
test
shr
cmp
cld
mov
jl
mov
mov
out
mov
add
das
add
daa
or
mov
add
adc
test
xor
outs
mov
pop
pop
movs
loopne
jecxz
in
mov
xchg
inc
pop
lods
movs
daa
loope
cld
add
add
sbb
add
ret
gs
movs
dec
jo
xor
hlt
push
js
int3
in
cs
dec
ret
xor
fcom
ins
pusha
(bad)
pop
(bad)
pushf
les
stos
test
je
jns
xor
push
xor
cmp
xchg
inc
sub
(bad)
test
push
and
jo
cmp
add
mov
stos
je
mov
inc
mov
sub
and
mov
xor
pop
sbb
adc
sub
jo
outs
sar
adc
ins
xchg
lods
xchg
ins
je
jo
push
push
imul
jne
and
sbb
lock
js
retf
dec
push
xor
enter
and
sbb
lds
inc
ret
out
push
ret
sbb
push
dec
pop
je
daa
inc
out
loopne
dec
in
xrelease
and
fwait
jae
fmul
add
push
xchg
mov
pop
cs
dec
test
sbb
jp
mov
and
ds
sbb
mov
cli
mov
je
inc
xchg
sbb
push
in
pop
xchg
add
call
dec
test
bound
inc
push
inc
adc
adc
inc
dec
mov
mov
out
mov
loop
fs
inc
mov
ja
cmp
sbb
loopne
jle
js
(bad)
mov
add
inc
add
aaa
pop
jecxz
imul
jge
imul
sub
shl
test
xor
mov
nop
das
test
mov
xor
sbb
stos
int3
mov
pop
pop
dec
adc
mov
mov
popf
xor
mov
or
loop
shr
or
ret
jne
push
and
movs
jo
cmp
and
xchg
cmp
push
cmp
ret
ret
adc
sti
add
adc
in
popa
inc
and
jo
xchg
mov
mov
add
pop
imul
ja
xor
mov
jmp
pop
push
and
pop
jo
jmp
and
xor
movs
cmp
ror
sub
push
je
dec
dec
sub
mov
xor
mov
inc
mov
je
jg
test
mov
sbb
popa
cmp
cmps
mov
je
push
mov
fild
jnp
add
mov
sbb
or
ja
out
and
pop
int
and
jns
les
mov
mov
fnsave
js
dec
push
mov
rep
adc
dec
and
or
cwde
mov
mov
adc
and
(bad)
or
inc
lds
cs
in
sub
mov
push
rol
loopne
(bad)
mov
mov
and
pop
adc
pop
push
aaa
clc
(bad)
hlt
sbb
push
into
and
retf
scas
or
lock
adc
stos
adc
xor
mov
or
dec
stos
repnz
xor
push
xor
iret
and
push
jmp
ret
mov
or
or
dec
jmp
push
or
push
or
sbb
loope
cs
pop
pop
pop
mov
enter
cmp
ret
sbb
inc
cld
and
adc
mov
ja
int
frstor
jg
mov
nop
pop
xor
sub
pop
and
push
xchg
dec
and
int3
add
pop
and
xchg
mov
xor
es
jne
lods
pop
adc
inc
sahf
jne
add
push
push
ss
test
jae
xchg
inc
ret
push
adc
sbb
dec
jmp
ss
or
or
fucomi
fidiv
mov
rcl
cmp
push
push
icebp
dec
or
loop
cs
sbb
rcl
clc
loope
cmps
jmp
mov
add
mov
mov
push
push
sub
or
nop
jl
add
mov
xlat
sbb
adc
xchg
rol
xor
popa
inc
sti
mov
hlt
ja
clc
pop
sub
push
or
mov
xchg
outs
je
mov
out
in
adc
loopne
or
push
push
adc
push
hlt
adc
xlat
jmp
stos
movs
enter
jae
pop
aas
shl
dec
mov
mov
adc
je
push
jbe
adc
rol
sbb
mov
adc
sbb
outs
fisttp
inc
xchg
cmp
test
or
push
push
cmps
and
fcmovnb
inc
xchg
es
sbb
ret
cwde
pop
xor
stos
push
jecxz
cdq
push
xchg
adc
adc
sub
push
push
adc
sbb
push
sbb
ja
or
sbb
cs
sbb
inc
push
aam
popf
enter
clc
loope
jmp
je
js
mov
mov
mov
and
mov
pushf
icebp
and
push
mov
push
sar
and
mov
ss
cmp
xchg
jnp
xchg
mov
inc
push
xchg
inc
popf
jb
inc
add
sbb
xchg
inc
cmp
pop
sbb
shr
mov
daa
dec
mov
(bad)
aad
mov
shr
jb
add
add
enter
test
xchg
clc
ret
dec
mov
loop
xor
and
fldenv
retf
test
inc
fdivr
daa
push
xchg
mov
cwde
inc
pop
jmp
jbe
mov
add
loop
cmp
icebp
dec
clc
sbb
dec
push
inc
ror
fiadd
xor
repz
inc
sar
xor
sti
add
or
add
les
(bad)
cmp
and
sti
fdiv
xor
ffree
add
xchg
jl
ret
add
push
test
mov
mov
rcr
jno
xchg
jns
and
pop
add
stc
push
xor
push
ret
imul
adc
push
lods
mov
xchg
aas
push
and
add
inc
or
ret
and
ror
mov
mov
imul
test
clc
and
jecxz
in
add
push
punpcklwd
and
mov
or
inc
jmp
test
xchg
dec
loopne
push
mov
xchg
or
shl
mov
xlat
in
cmp
push
and
(bad)
call
pop
adc
rcr
mov
mov
call
in
push
je
jo
add
pusha
lods
inc
(bad)
hlt
push
push
push
pop
xchg
pop
push
jo
daa
jp
adc
aam
cdq
cmp
(bad)
pushf
pop
clc
dec
push
xchg
hlt
add
gs
cmp
add
xlat
mov
ds
and
or
or
push
dec
das
je
popa
mov
mov
mov
inc
add
mov
inc
jge
jg
mov
mov
popa
jo
inc
add
inc
ja
xchg
mov
xor
retf
push
imul
enter
test
in
add
rol
or
sbb
add
pop
or
sub
addr16
add
rol
or
or
mov
aad
lea
xlat
ror
pop
jp
lds
inc
inc
and
cmp
push
pop
add
mov
loopne
pop
cmps
mov
repnz
or
push
pusha
add
mov
mov
add
adc
xchg
cli
mov
mov
hlt
sbb
mov
mov
pushf
and
pop
pop
inc
push
test
(bad)
loopne
in
push
call
fwait
and
fild
jl
dec
or
ret
shl
sub
mov
inc
or
sub
pop
push
push
pusha
jg
inc
aaa
or
mov
or
in
dec
pusha
inc
pop
adc
cmp
and
xchg
inc
clc
adc
pop
dec
int
mov
or
test
imul
cs
dec
pushf
xor
xor
fimul
mov
mov
test
popa
dec
push
sub
and
punpckhdq
clc
or
fsubr
fsub
pop
jo
mov
push
mov
shl
xchg
cmp
cmp
sub
push
xchg
pop
push
js
xchg
fisub
daa
push
call
and
mov
in
pop
sbb
jno
popf
repz
xchg
int
pop
xchg
and
and
fdivr
popa
pop
cmp
push
js
ss
jno
movs
test
fisub
jmp
jbe
adc
and
xchg
(bad)
mov
jbe
push
mov
icebp
adc
sbb
mov
cmc
je
push
das
mov
pop
je
test
push
pop
cmp
add
pop
push
in
dec
mov
fiadd
xor
xchg
mov
pop
movs
add
jecxz
and
rcr
pop
shl
cmp
sbb
or
adc
dec
lods
popa
cmp
or
(bad)
or
mov
js
call
mov
or
push
and
push
sub
mov
pop
pusha
cmc
jecxz
dec
mov
les
scas
jne
push
push
test
mov
addr16
pop
xchg
push
or
adc
or
ret
pop
popf
stc
or
sbb
jne
(bad)
xor
xchg
(bad)
lahf
pop
js
or
mov
mov
cmps
adc
ret
mov
add
pop
push
push
mov
push
xor
jnp
and
adc
jge
ins
inc
cmps
ins
aam
or
xor
ret
lea
sub
fcom
sub
or
mov
adc
in
call
sub
in
sbb
popf
imul
push
pop
push
jmp
inc
push
enter
cmp
arpl
push
cmps
pop
les
jae
stos
cmps
or
dec
mov
mov
pop
mov
mov
int
adc
add
adc
gs
mov
xor
shl
fcmovbe
out
jg
sub
sbb
inc
les
add
stos
add
xor
cmp
mov
xchg
retf
sbb
adc
and
test
add
aad
inc
lods
jecxz
rcl
xor
xlat
adc
inc
mov
inc
rcl
es
enter
or
ins
sub
out
xor
pop
aam
arpl
and
sub
pop
or
je
shr
jg
ficom
add
or
xor
in
and
out
push
sbb
bound
adc
adc
xor
and
jbe
es
xchg
or
(bad)
fld
out
sub
pop
lea
cmps
sbb
push
lods
fs
dec
cmp
adc
nop
add
sbb
mov
dec
adc
or
push
cmps
test
arpl
push
ltr
stos
push
push
call
sahf
dec
add
fadd
and
mov
sub
test
push
add
add
inc
inc
repnz
mov
mov
mov
adc
or
mov
dec
adc
cmp
in
loop
rcl
in
sub
ret
imul
pop
pop
adc
jmp
dec
sbb
mov
jmp
push
mov
and
bnd
std
bound
dec
cmp
xchg
pushf
add
fstp
lea
ins
aam
or
add
and
inc
cmp
add
xchg
(bad)
in
mov
dec
cwde
js
dec
or
cmc
add
into
nop
adc
mov
pop
adc
or
or
push
lahf
cmp
adc
pop
lods
jle
(bad)
ja
mov
je
cmp
jge
das
mov
adc
cmp
sbb
adc
nop
loopne
jmp
sbb
shl
movs
lea
pushf
push
pop
(bad)
daa
test
icebp
push
icebp
jb
adc
dec
or
or
sbb
mov
mov
adc
cmp
outs
pushf
(bad)
xor
adc
add
or
xor
mov
imul
sar
aam
push
push
jnp
dec
aas
inc
cmp
test
and
and
popa
jne
jb
frstor
or
fcom
add
xchg
and
add
bound
aam
shl
dec
mov
test
add
cmp
sbb
sahf
icebp
sub
mov
fsubr
rcr
jmp
mov
and
daa
fstp
outs
scas
sub
add
loop
cmps
fisubr
mov
add
or
and
mov
push
and
cmp
or
ins
push
inc
xchg
les
(bad)
in
sub
xchg
sub
test
jns
and
int3
lock
mov
or
adc
dec
test
test
scas
xchg
(bad)
cmp
ds
(bad)
pusha
arpl
pop
movs
xor
inc
loopne
sub
mov
pop
push
push
mov
dec
in
enter
sti
ficom
loopne
add
push
imul
into
add
fcom
or
fdivr
sub
jae
dec
call
(bad)
or
xor
les
lea
mov
sti
dec
call
add
and
hlt
jne
imul
add
dec
call
daa
(bad)
ror
inc
mov
xor
adc
addr16
add
cmp
in
movs
xlat
xlat
test
test
pusha
or
test
and
jnp
pushf
cwde
sbb
or
mov
push
fdivp
in
sub
add
cmps
data16
pusha
cmps
mov
mov
add
mov
mov
jbe
sbb
jbe
cdq
data16
mov
aas
add
cmp
mov
xchg
cmp
aas
inc
cmps
jle
stos
std
call
add
pusha
popa
or
das
inc
cmp
jl
ins
push
icebp
clc
adc
cmp
inc
addr16
jb
mov
mov
xchg
popa
mov
hlt
add
pushf
pop
rcl
test
push
(bad)
push
mov
mov
pusha
outs
push
ror
or
sbb
aas
mov
ret
and
cmp
and
repnz
xor
rcl
lods
sbb
imul
mov
add
and
add
out
push
call
and
adc
inc
mov
ss
(bad)
ds
or
and
test
xchg
sbb
and
cmp
sub
and
and
xor
mov
fsubr
sub
lods
scas
(bad)
lock
xchg
xbegin
sbb
jmp
(bad)
pop
lods
repz
cld
push
cmovge
jl
xlat
sub
in
and
add
jae
push
clc
add
cdq
clc
dec
add
pop
clc
(bad)
hlt
sub
inc
mov
sub
push
or
push
mov
cmp
cmp
and
add
addr16
popf
lods
nop
mov
movs
push
cmp
push
stos
or
mov
mov
rcl
sahf
mov
fcmovnb
add
rcl
or
xchg
in
sub
jmp
iret
mov
inc
or
add
adc
cld
push
pop
mov
movs
dec
adc
sub
sbb
bound
push
je
mov
repz
lock
cli
enter
ret
adc
and
lock
push
jno
lods
push
cs
xchg
and
xor
mov
lods
lea
mov
dec
cwde
in
sar
xchg
pop
pop
pop
add
mov
and
push
shl
jmp
cdq
test
xor
adc
div
cmp
ds
add
mov
lods
push
sti
pop
xchg
outs
dec
popf
dec
dec
mov
or
pop
ror
sbb
inc
sbb
cmp
jmp
mov
pop
push
pop
xchg
mov
je
mov
popf
call
sbb
test
and
pop
cmps
lock
add
test
or
push
sub
aaa
ins
mov
jno
jb
or
les
and
and
inc
loope
ret
aaa
adc
and
int3
lods
(bad)
loope
or
or
test
and
inc
adc
pop
push
shl
sub
daa
push
or
in
pop
mov
cmps
mov
and
mov
sti
or
adc
add
scas
mov
xchg
inc
leave
sar
dec
or
cmp
or
fistp
inc
sub
pop
lea
dec
movs
movs
inc
pop
daa
loop
add
dec
pop
push
and
sub
xchg
cmp
jb
lea
movs
adc
or
scas
jmp
xor
and
and
gs
push
std
and
push
retf
and
rol
and
push
push
rcr
push
shl
ret
fadd
ja
mov
or
cmp
push
repz
inc
xchg
adc
sub
outs
mov
daa
call
ds
xor
movs
iret
ins
sub
in
movs
ficom
sub
mov
sbb
mov
sbb
or
xchg
pop
mov
jmp
dec
sub
jns
cmp
or
adc
push
dec
jnp
sbb
jns
icebp
dec
dec
test
mov
push
pop
stos
and
rcl
lock
loope
mov
push
repnz
aaa
add
cmp
mov
inc
mov
adc
mov
pop
sub
pop
pop
jmp
sub
aad
adc
or
cld
dec
sub
jno
repnz
or
push
push
adc
mov
pop
inc
xor
dec
cmp
push
dec
or
sub
les
push
ret
mov
add
xor
hlt
pusha
xchg
retf
js
push
icebp
(bad)
push
ret
jmp
cmp
jae
inc
or
inc
adc
xor
xor
or
push
stos
push
test
sub
cmp
jl
popa
dec
or
pop
pop
adc
and
data16
fs
or
(bad)
repz
sbb
cs
sar
sbb
dec
jle
cmp
popa
add
push
sbb
jnp
pop
clc
fdivr
mov
sub
adc
xor
sbb
and
gs
push
jg
and
lods
loope
mov
push
(bad)
adc
dec
clc
jl
fisub
pop
jae
retf
je
push
add
dec
push
das
clc
dec
sub
sbb
pop
push
lods
test
sbb
in
mov
adc
adc
sbb
call
mov
imul
sbb
retf
sbb
xor
add
aaa
daa
add
jl
cmc
imul
ins
push
mov
jb
lock
je
adc
movs
jge
popa
imul
add
mov
xchg
mov
push
and
sbb
push
pop
and
aad
adc
push
sbb
test
sub
jmp
fidivr
loopne
ret
repz
stos
push
cli
xchg
nop
xor
mov
inc
xor
popa
movs
mov
or
sbb
scas
leave
xor
push
loopne
or
sub
lods
fcomp
dec
(bad)
or
sbb
fcom
and
or
(bad)
dec
test
les
retf
daa
jmp
add
dec
pop
retw
and
and
lock
movs
pop
lods
or
adc
cmps
ds
xchg
jge
(bad)
fimul
jae
sub
xchg
es
and
idiv
mov
fs
xor
fdivr
jo
mov
and
add
into
aam
xor
pop
aam
jmp
and
fcomp
les
outs
xor
sbb
push
repnz
or
sbb
loopne
xchg
or
int3
enter
push
sub
add
pop
call
(bad)
pop
sbb
push
sbb
fs
add
js
in
inc
add
mov
adc
retf
push
lods
pop
mov
push
fs
lock
add
test
inc
out
sahf
cmp
fiadd
dec
cmp
push
push
cmp
or
call
daa
xor
pop
push
mov
or
and
mov
inc
sbb
xor
cdq
dec
(bad)
mov
sbb
enter
xor
pushf
dec
xor
rol
dec
adc
add
push
jo
arpl
xor
or
aam
sbb
mov
add
or
inc
scas
icebp
sahf
adc
(bad)
and
shl
adc
sub
xor
adc
pop
call
pop
push
ret
jmp
aas
ret
loope
or
mov
aas
(bad)
add
int
mov
sbb
loop
nop
add
xchg
xchg
ins
lods
mov
out
jg
aam
mov
and
test
iret
clc
inc
xchg
sbb
jo
sub
pop
cmp
arpl
ins
sbb
mov
cdq
inc
mov
loope
in
ja
or
stos
xor
xchg
movs
mov
or
dec
mov
clc
add
xchg
or
pop
adc
mov
popa
nop
movs
adc
inc
ss
cmp
inc
ins
sub
outs
cdq
dec
sbb
sub
arpl
adc
lea
sbb
push
lods
shl
inc
cmp
retf
aam
jmp
mov
sbb
pop
jge
push
xchg
arpl
scas
popa
mov
or
pop
into
in
lea
or
mov
add
stos
mov
add
call
clc
pop
dec
adc
aas
sub
sbb
jae
add
pop
stos
test
fstp
rcl
test
sbb
mov
push
add
jl
dec
mov
popa
js
rol
or
lds
movs
jns
adc
adc
jmp
adc
test
js
jmp
leave
and
push
sbb
xchg
mov
mov
push
add
dec
adc
add
sahf
hlt
and
adc
and
(bad)
mov
sub
ds
cmp
pop
xor
sbb
add
inc
sub
hlt
add
iret
out
nop
jbe
xchg
dec
fdivr
xor
and
push
and
add
mov
add
jno
lock
movs
ds
and
jecxz
je
je
or
push
and
or
add
pop
mov
or
mov
daa
sbb
lahf
adc
inc
mov
add
jmp
jp
cmc
mov
add
or
cmp
je
push
ss
sub
test
push
stc
in
adc
scas
mov
add
dec
fild
cmp
pop
and
lahf
or
sub
loope
cli
mov
add
mov
adc
dec
sahf
inc
adc
adc
shl
xor
dec
addr16
adc
jg
adc
push
sub
lds
pushf
and
push
(bad)
jnp
mov
jmp
je
mov
ss
bnd
sbb
sbb
push
mov
lods
pop
icebp
sub
push
dec
mov
push
(bad)
out
push
daa
sbb
sbb
cdq
pop
bound
inc
inc
jecxz
(bad)
jmp
mov
dec
shr
and
push
sub
stos
jne
dec
iret
sbb
push
jo
xchg
nop
sbb
test
retf
mov
sbb
push
sbb
sbb
call
mov
shl
push
push
jo
ret
sub
or
add
mov
mov
cdq
adc
or
dec
inc
loopne
pop
mov
sbb
shl
cmp
in
adc
lods
jmp
mov
div
rcr
jo
adc
stos
or
sub
push
daa
lock
lods
lea
cli
shl
xchg
xor
sbb
lods
push
js
cmc
push
xchg
mov
pop
jp
rol
xchg
inc
mov
sbb
stos
pmuludq
mov
test
cmp
adc
fwait
mov
shr
jmp
lea
aam
or
add
in
inc
mov
loope
inc
enter
nop
and
and
or
leave
pop
cmp
into
ret
and
sbb
push
aam
and
xor
rcl
(bad)
rol
xchg
adc
inc
enter
pop
arpl
inc
in
loope
shl
mov
xor
xchg
retf
add
repnz
xor
adc
shr
and
jns
and
sbb
mov
pop
pop
add
jns
jmp
add
lea
dec
sub
jns
rcl
jae
mov
push
jg
inc
xor
cmp
mov
stc
loop
cwde
xor
jl
or
inc
and
bound
scas
add
cmp
loopne
pop
aaa
push
add
shr
(bad)
leave
sbb
or
mov
inc
adc
jne
or
push
sbb
cmp
popf
jns
pushf
fsub
pop
cmp
aaa
aas
xor
adc
pop
(bad)
repnz
lock
push
and
inc
push
test
push
push
clc
add
pop
lock
add
dec
sub
test
mov
pop
or
loope
ret
pop
sbb
mov
mov
stc
push
iret
or
push
pop
cmp
and
les
aad
imul
out
loopne
and
movs
or
es
mov
neg
jmp
cmp
mov
js
test
jo
ret
sub
inc
ds
dec
xchg
adc
cmp
loope
jno
movs
mov
test
and
push
mov
imul
call
pop
sbb
push
push
xor
mov
les
adc
mov
ja
pop
mov
mov
mov
add
inc
jecxz
(bad)
enter
adc
sub
fcom
cdq
ret
push
clc
add
rcl
scas
or
push
in
test
sbb
adc
fistp
scas
rol
adc
pop
inc
loop
sub
add
enter
cmp
repz
lock
mov
cmp
(bad)
sbb
in
(bad)
xchg
fsubr
fmulp
dec
push
pop
ret
fmul
fmul
push
mov
and
mov
push
and
or
add
mov
(bad)
cli
xor
out
bound
or
inc
shl
pusha
in
jp
add
(bad)
cmp
in
fmul
add
imul
cmp
add
call
stc
cmp
pop
xor
push
jns
dec
loopne
enter
fdiv
and
int3
cmp
push
add
cmp
inc
addr16
mov
nop
adc
sbb
xchg
xchg
lods
retf
loopne
sub
push
rol
dec
repz
mul
sub
addr16
push
sub
xor
and
(bad)
and
xchg
xchg
fimul
mov
and
or
ret
ret
pop
lea
dec
sbb
(bad)
dec
lds
sbb
xor
into
movs
add
cmp
inc
test
sbb
test
mov
pushf
jbe
sbb
or
fdiv
dec
push
sbb
mov
and
test
and
jbe
enter
or
cmp
xor
add
xchg
jp
stos
sub
adc
(bad)
jbe
dec
sub
push
retf
jle
push
or
and
outs
test
jp
call
loop
mov
mov
in
mov
lea
pushf
jge
data16
lods
popf
daa
sub
pop
shl
xchg
sub
mov
add
clc
cmps
loopne
add
dec
xor
mov
jae
fldenv
fsub
cmp
jecxz
dec
lea
mov
mov
adc
aam
sub
push
outs
lods
push
leave
(bad)
mov
ins
or
pop
jno
jl
leave
xchg
out
sub
nop
push
fcomp
push
and
pop
shl
mov
dec
outs
call
inc
add
sub
dec
jne
cdq
movs
add
push
add
dec
or
add
cmp
jge
pop
sub
lea
or
adc
mov
js
je
icebp
pop
add
or
xchg
xor
inc
adc
jb
arpl
pop
xor
sbb
icebp
sub
push
mov
and
mov
lds
adc
push
test
mov
cmp
loope
repnz
lahf
cs
push
or
xchg
adc
pop
push
(bad)
(bad)
pop
or
and
jae
push
push
nop
and
aaa
lahf
sti
jp
inc
test
add
push
movs
xor
mov
mov
aam
je
sub
mov
inc
loopne
or
fsubr
loopne
jge
inc
lea
sbb
xchg
ja
xchg
sbb
mov
ja
adc
fidivr
pop
ja
ins
adc
test
cmp
jle
push
(bad)
push
xchg
xchg
faddp
or
ret
lea
fmul
dec
or
jo
or
add
and
das
adc
push
push
pop
sti
shl
xor
cmp
inc
push
movs
sbb
or
mov
test
xchg
or
repnz
push
or
dec
cmp
loope
dec
inc
mov
int3
and
movs
push
sub
push
test
leave
pusha
stos
mov
inc
adc
and
data16
or
sar
sub
(bad)
test
aam
retf
enter
rcl
call
push
xchg
test
loopne
sbb
adc
and
mov
mov
push
or
inc
adc
fs
adc
test
das
xor
push
ss
sti
fs
pushf
popf
arpl
bound
pusha
jmp
lods
movs
imul
or
(bad)
xchg
out
and
sbb
add
push
mov
test
std
loope
xchg
out
out
add
inc
or
call
out
sbb
jb
adc
ficom
rcr
push
add
xchg
pop
cmp
pop
pop
and
(bad)
stos
clc
pop
or
into
push
lods
out
cwde
cmp
pop
xchg
and
fdiv
add
push
adc
mov
push
call
movs
mov
test
or
or
iret
jbe
inc
sub
jno
and
xlat
inc
in
and
pop
jmp
mov
sbb
jno
push
xchg
mov
paddq
jmp
push
sub
scas
fsub
or
or
ja
pushf
add
push
push
adc
or
inc
push
mov
in
inc
add
pop
sbb
lods
add
test
inc
out
inc
or
lock
adc
pop
pop
add
inc
sbb
sbb
ds
(bad)
and
ret
mov
xchg
add
inc
cmps
and
pop
jg
dec
push
push
rcr
(bad)
loopne
loopne
push
dec
xor
cmp
hlt
ror
fcom
dec
xor
or
cmp
and
scas
das
adc
add
cmps
shl
cs
sub
mov
rol
out
cmp
jl
jno
jns
outs
sub
and
add
pop
stc
aaa
pop
push
pop
inc
xchg
pop
push
push
xor
(bad)
adc
cs
jbe
and
mov
jmp
sbb
sbb
arpl
xor
mov
cmp
ja
stos
in
adc
mov
add
imul
mov
call
cmp
in
mov
jge
(bad)
es
hlt
sub
pop
pop
xchg
push
and
push
xchg
xor
mov
ror
mov
push
add
pop
jmp
fstp
mov
sub
mov
cmp
sub
enter
inc
adc
les
(bad)
sbb
xor
xlat
ins
icebp
lahf
test
(bad)
std
or
cmp
push
or
rcr
and
adc
neg
rol
inc
push
sub
ss
dec
popf
pusha
imul
cmps
scas
adc
ret
inc
adc
bound
lods
repnz
dec
mov
inc
in
lahf
add
or
adc
jne
xchg
sub
sub
pop
call
ss
push
inc
movs
sbb
xor
adc
push
lock
fdiv
or
test
lods
rcr
push
cdq
pop
clc
xchg
icebp
out
push
push
xchg
mov
jmp
mov
nop
pop
pop
fcmovu
in
stos
lods
lods
add
imul
xor
ror
sbb
sub
je
jo
stc
push
gs
dec
cmp
jb
sub
and
cli
rol
mov
mov
jne
mov
or
inc
test
push
call
sbb
dec
mov
adc
shl
sbb
xchg
sbb
movs
mov
push
inc
mov
push
shr
push
push
cwde
jb
mov
sub
(bad)
rcl
out
add
stos
mov
rcl
ror
out
push
dec
mov
cmp
mov
push
add
and
ret
push
imul
inc
lea
test
rcr
sbb
mov
jp
xchg
mov
fcomp
mov
mov
adc
mov
push
fidiv
inc
pop
and
mov
push
ret
add
jp
test
push
fidiv
jo
sub
outs
mov
push
xchg
xchg
and
call
push
sbb
mov
je
jmp
outs
lea
mov
(bad)
sbb
ret
push
(bad)
adc
into
pop
cwde
xor
mov
iret
lahf
aaa
fdivr
addr16
xchg
cmp
ja
cmp
cmp
mov
mov
jns
jmp
sub
pop
push
push
jp
xchg
add
dec
xlat
hlt
push
cmp
push
test
lahf
mov
iret
jp
sub
add
push
jmp
add
(bad)
movups
dec
xor
in
mov
(bad)
cmp
inc
lock
inc
jb
xchg
test
rcr
or
mov
inc
dec
call
test
add
mov
push
call
mov
and
repz
ret
sub
into
shl
bound
adc
ror
test
pop
push
jne
add
jne
adc
sbb
setle
aaa
jb
lock
cmc
xlat
movs
and
fcmovnbe
lods
mov
jl
lahf
cmp
dec
fcmove
dec
xchg
shr
aaa
mov
shl
jecxz
cmp
pop
and
popa
and
or
inc
dec
inc
and
sub
test
(bad)
kmovw
cmp
push
mov
add
push
push
(bad)
jo
sbb
cs
dec
sub
daa
test
mov
or
not
ror
and
push
loopne
sbb
cmc
enter
push
ror
out
sub
(bad)
fs
sbb
sbb
shr
fcmovnbe
pop
mov
or
or
(bad)
jns
add
pop
leave
xlat
movs
fcomp
xchg
mov
sub
jecxz
mov
or
jmp
mov
or
not
dec
sbb
jbe
xor
movs
int3
jmp
fcomp
fs
adc
shr
rol
pop
pop
xor
arpl
fstp
icebp
add
sub
and
pop
pop
in
jge
and
in
mov
push
retf
add
pop
push
mov
xor
jno
daa
jno
sub
ret
cld
(bad)
fst
movs
lods
adc
and
jno
inc
ret
pop
push
enterw
cmc
gs
sbb
and
sub
pop
cmps
rcr
or
push
adc
adc
movs
movs
ficom
push
pusha
bound
mov
inc
mov
repz
ss
out
js
and
jae
mov
ins
mov
mul
mov
mov
cmp
cmp
mov
and
or
es
adc
xor
push
inc
xor
push
xchg
pop
iret
retf
ins
jl
aas
mov
jmp
rep
mov
jl
xchg
in
cs
inc
dec
pop
xchg
ds
xchg
lea
mov
dec
and
add
add
inc
scas
aad
push
mov
inc
mov
or
xlat
neg
inc
jo
sahf
cmp
jne
test
pushf
add
or
mov
(bad)
pop
ja
retf
inc
push
cmp
(bad)
mov
mov
ins
add
jo
jne
xchg
sub
pop
jmp
aaa
dec
sbb
popa
add
mov
or
xchg
adc
or
cli
xchg
inc
inc
jl
mov
xchg
enter
sbb
rcr
aaa
mov
stc
sbb
and
ds
call
xchg
or
or
retf
daa
dec
inc
or
jbe
push
or
or
and
mov
ins
sbb
xchg
movs
addr16
sub
out
call
sbb
jge
and
jae
test
cs
or
jmp
or
cmp
cwde
jp
push
stos
sub
push
mov
sub
or
sbb
dec
push
jle
ss
(bad)
rol
sub
adc
jl
adc
jnp
cmp
sbb
jbe
jbe
push
xor
inc
adc
adc
fild
rcl
xor
pop
add
push
ret
cwde
int
or
das
nop
inc
adc
sbb
cwde
xor
dec
and
test
popf
sub
push
(bad)
fadd
mov
mov
in
dec
add
or
dec
jo
cmp
dec
hlt
ret
pop
and
jno
cmp
or
es
mov
test
dec
enter
pop
fnstcw
adc
imul
xor
sub
sbb
test
sbb
dec
and
sbb
lock
mov
dec
pop
cmp
outs
sub
dec
ins
push
and
fadd
lea
ret
sbb
lods
test
jno
xchg
mov
pop
push
outs
pusha
movs
jmp
or
mov
outs
add
je
dec
push
pop
frstor
je
or
push
sub
movs
xsha1
cmps
dec
stos
push
add
ror
or
jo
inc
movq
jge
sbb
out
out
stc
shr
push
pop
add
add
push
(bad)
fdiv
jmp
push
add
mov
push
test
loopne
in
or
lea
adc
(bad)
dec
pop
jle
fist
fs
movs
pop
or
aam
sbb
mov
sub
mov
push
add
lock
ins
xchg
sbb
dec
pop
fiadd
fistp
jmp
or
or
push
ja
mov
inc
mov
cmp
int3
cmc
(bad)
fsubr
dec
and
pop
ins
cli
mov
mov
xchg
retf
adc
cmp
pop
lds
test
inc
jb
fadd
sub
or
or
iret
popf
stos
xchg
xchg
es
retf
add
out
jmp
xor
nop
adc
inc
cmps
enter
inc
pop
add
jo
mov
ss
ins
jne
cmps
jne
ins
push
push
inc
ror
test
pop
push
pop
dec
mov
je
jnp
sbb
push
or
jnp
or
inc
push
jnp
cmp
test
pop
sbb
push
cmp
push
pop
jle
(bad)
adc
mov
pop
cs
ja
sub
push
mov
arpl
push
dec
cdq
push
xor
or
mov
jecxz
cmps
in
jmp
and
inc
cmp
dec
xchg
adc
scas
and
inc
stc
push
jp
inc
xor
or
cmp
dec
ror
test
add
das
push
pop
js
cwde
jno
push
adc
and
pop
xor
add
mov
add
sbb
push
jb
adc
sbb
and
or
adc
outs
leave
enter
mov
dec
push
out
add
(bad)
les
mov
in
push
out
out
add
test
mov
fldenv
and
arpl
repnz
std
xchg
inc
je
das
stc
lea
add
jle
mul
std
and
lea
push
lods
push
push
inc
inc
loopne
fild
add
cmp
nop
aad
add
mov
into
adc
fimul
pop
and
test
clc
lea
xor
popf
xor
les
loop
push
test
inc
es
cmp
int
test
(bad)
and
ret
jns
pusha
push
dec
movs
inc
sti
int
jne
jle
(bad)
in
inc
popa
ins
in
adc
push
nop
repnz
xchg
outs
cwde
ret
aam
cmp
sbb
xchg
in
xor
out
xor
push
adc
sub
add
sub
mov
push
adc
and
js
lahf
lock
push
call
jb
lock
adc
jmp
arpl
adc
dec
or
adc
add
push
ss
das
add
sub
in
jmp
add
xchg
xchg
sahf
add
leave
shl
lock
or
and
nop
xchg
retf
add
dec
add
cmp
dec
jae
loopne
out
dec
icebp
sub
inc
sub
push
xchg
ja
xor
es
mov
sbb
xchg
adc
cmps
retf
or
jb
addr16
cld
xor
sub
push
das
and
push
imul
mov
sahf
call
mov
cld
mov
jmp
dec
and
sbb
in
cs
lods
cdq
imul
or
jno
lock
sbb
dec
int3
aam
or
pop
test
pushf
pop
cs
mov
sbb
push
dec
xchg
push
or
add
xchg
or
outs
cmp
jge
repnz
bnd
dec
xor
sub
adc
sub
push
pusha
mov
lahf
xchg
mov
push
addr16
cmp
and
jb
mov
ins
mov
shl
adc
jecxz
test
dec
push
sub
lods
mov
popf
mov
adc
add
fdiv
rcr
scas
push
or
and
js
bnd
cmp
cmp
or
nop
in
in
popf
rol
adc
pop
mov
out
loope
push
or
inc
or
jge
and
popa
loopne
push
mov
mov
push
sub
add
jmp
test
add
push
xor
push
xor
out
movs
test
adc
int3
outs
sbb
rol
xor
pop
inc
cmp
adc
adc
in
push
movs
in
sar
jno
in
sub
push
movs
push
hlt
push
fs
cdq
xchg
push
lods
sub
dec
inc
xchg
pop
dec
sbb
fdiv
cwde
push
mov
adc
xchg
and
(bad)
popa
fsubr
test
sub
sbb
jl
pop
sbb
loope
add
jns
xchg
mov
ror
dec
mov
push
pop
add
push
mov
call
push
push
ret
push
les
and
out
mov
cmp
jp
mov
nop
ins
lods
(bad)
mov
sbb
mov
test
pop
fist
push
jmp
sbb
xor
mov
mov
and
inc
fldenv
cmp
dec
retf
iret
mov
jo
dec
movs
push
lock
xchg
add
call
adc
int3
pop
xchg
loopne
ror
inc
add
pusha
bound
fs
or
sbb
fmul
push
xor
lock
add
out
retf
repz
or
pop
sub
mov
das
ss
or
xor
dec
jl
ss
in
loopne
imul
inc
inc
aam
mov
adc
je
test
nop
adc
adc
dec
and
jns
and
sub
and
inc
push
sbb
outs
pop
or
push
shl
sahf
inc
(bad)
ins
js
in
(bad)
loopne
sar
iret
aaa
add
dec
sbb
popf
xchg
push
stos
sub
test
inc
jne
int3
jo
cli
cmp
je
fwait
mov
in
movs
fadd
or
or
sbb
adc
dec
cmp
adc
in
adc
cmovnp
sbb
pop
sub
pop
dec
out
inc
add
dec
mov
jg
addr16
and
add
push
fwait
or
cmp
add
pop
(bad)
leave
(bad)
dec
ins
mov
and
add
push
repz
pop
fstp
arpl
loopne
and
repnz
loope
mov
push
daa
xchg
mov
mov
fwait
cmp
or
ds
add
xor
and
push
dec
sbb
add
test
loopne
push
lock
mov
fisttp
dec
pop
and
or
pop
and
in
add
cdq
jne
les
sub
adc
jmp
add
adc
sub
cmps
mov
and
ins
loopne
dec
jo
pop
movs
ins
jne
ror
inc
nop
mov
xchg
mov
fld
cmp
cmp
shl
and
popf
daa
jo
sbb
imul
pop
out
or
inc
pop
push
cmp
xchg
cmp
enter
push
jbe
xor
fnsave
inc
out
repnz
ins
fild
je
jecxz
pop
loopne
fs
push
push
add
out
fst
push
inc
push
add
xchg
add
xchg
hlt
and
xor
or
ins
not
xor
ds
push
scas
shl
call
and
and
add
adc
or
shl
mov
sub
lock
mov
dec
cmc
dec
or
hlt
add
push
pop
pop
fst
sub
pop
add
inc
or
or
mov
daa
clc
cmp
lds
mov
dec
cmp
xchg
mov
or
fdiv
or
inc
jo
push
lea
jmp
add
pusha
cmp
(bad)
pop
adc
xor
add
enter
mov
push
dec
jecxz
and
sub
push
pushf
fcmovbe
jl
cmp
int3
test
imul
or
push
push
adc
adc
test
push
imul
rcr
sub
dec
push
cmp
mov
inc
dec
dec
idiv
push
mov
add
je
inc
jne
xor
test
add
pusha
addr16
xchg
mov
xchg
xor
xchg
jmp
dec
icebp
jne
xor
cmp
int3
inc
fst
sbb
sbb
(bad)
jmp
lea
mov
shl
add
push
mov
daa
hlt
shl
jmp
gs
aaa
add
and
push
sbb
into
pop
jge
jbe
clc
pop
cmc
jge
lods
enter
jno
lock
cmp
add
mov
and
mov
loopne
cld
or
mov
fs
call
sbb
popa
jne
pop
iret
sar
std
or
retf
shr
ret
pusha
cmp
cmp
inc
xchg
push
popa
scas
icebp
add
lock
cmp
jmp
out
rcl
and
pop
lea
int
into
scas
int
inc
push
test
mov
shl
jle
mov
push
cs
rcr
push
add
mov
loope
fnstenv
and
aaa
stos
xchg
add
ja
add
ret
pop
add
jo
mov
fs
enter
ja
or
sbb
or
or
adc
jmp
jle
call
sub
mul
mov
jmp
inc
out
mov
inc
js
dec
add
lds
sub
loopne
jp
push
sub
push
cmp
jne
loop
dec
sub
jns
in
out
push
push
sbb
aam
or
test
push
ss
cmp
in
sub
jo
fcom
add
cmps
pusha
loop
and
adc
aas
repnz
shl
es
ret
aaa
mov
(bad)
adc
mov
push
and
or
sub
or
rcr
lds
mov
cli
jbe
adc
adc
jecxz
dec
lahf
stc
call
adc
pop
xchg
(bad)
xchg
cld
mov
cmc
jbe
xor
dec
push
ret
and
pusha
or
jnp
(bad)
push
mov
or
out
push
je
push
and
je
test
es
mov
pop
lods
rep
sub
cmp
and
ss
jne
sbb
ja
xlat
push
into
adc
adc
jmp
push
jo
in
aas
je
mov
push
sbb
cld
jp
pop
pop
pop
jmp
and
mov
and
xchg
clc
adc
push
mov
sub
sbb
mov
inc
mov
or
clc
ret
or
and
sub
add
arpl
dec
inc
pop
lods
bound
and
das
sahf
dec
ror
pop
jns
int3
in
mov
sub
inc
inc
lods
not
adc
daa
test
icebp
aas
data16
jne
pop
dec
stos
adc
mov
rcr
dec
sbb
pop
xor
in
mov
cdq
pusha
add
lock
jnp
jl
mov
loopne
into
and
adc
or
(bad)
out
add
iret
imul
xchg
mov
out
scas
push
fsubp
(bad)
mov
pop
addr16
cmp
adc
jnp
add
pop
add
push
add
icebp
or
das
and
fld
mov
bound
xor
xor
arpl
cmp
pop
pop
addr16
test
or
pop
pop
pop
xchg
jecxz
inc
retf
xor
push
cmp
ror
add
unpcklps
fsubr
fld
sbb
inc
fisub
imul
fwait
pop
fdivrp
add
pop
sbb
jg
adc
adc
addr16
cmps
push
mov
bound
sub
scas
pop
xchg
mov
xor
inc
ficomp
sbb
mov
cmp
add
or
xchg
pop
and
adc
pop
jge
ins
inc
enter
mov
inc
adc
nop
xchg
sub
add
xor
jmp
test
sar
cmp
sbb
adc
imul
xor
mov
iret
inc
in
push
loop
cs
mov
outs
jl
daa
cdq
inc
push
inc
inc
inc
fucomip
xchg
pop
les
jmp
les
stc
and
mul
pop
cs
shl
fcom
jne
mov
xor
mov
adc
jl
xchg
loopne
stc
adc
push
add
mov
pop
ins
pop
sbb
jmp
mov
int
jp
mov
aas
mov
xchg
in
jmp
adc
xor
adc
mov
jno
cld
pcmpgtd
mov
clc
dec
jne
push
mov
xchg
add
mov
pushf
sub
xchg
and
movnti
pop
sbb
mov
loope
xor
xchg
mov
inc
dec
cmps
cmp
add
sbb
mov
cmp
mov
dec
or
and
push
aaa
shl
lods
outs
jge
lea
loopne
stc
pop
sub
or
inc
pop
cwde
push
cmp
je
cmovbe
es
jb
in
imul
cld
pop
js
push
out
or
adc
push
out
mov
cmps
imul
pushf
adc
bound
ret
cmp
pop
rol
lods
xlat
mov
sub
inc
or
mov
xchg
call
or
push
mov
pop
add
cdq
popa
jne
sbb
adc
push
ss
inc
mov
xchg
imul
mov
lods
mov
repnz
mov
xor
(bad)
ja
ja
pop
inc
jle
cmp
or
or
push
(bad)
shl
or
mov
adc
inc
and
push
push
shr
adc
pop
loope
xchg
xor
adc
inc
aaa
lods
mov
scas
mov
push
in
or
jo
inc
popa
pushf
ja
xor
inc
rol
or
rcl
add
push
mov
mov
(bad)
popa
ror
mov
sub
fwait
jno
mov
and
call
pop
pop
pushf
add
inc
sbb
cdq
js
mov
stos
mov
lock
inc
(bad)
dec
push
addr16
add
or
scas
xchg
push
or
sub
xchg
clc
fwait
aam
and
int3
sar
int3
or
add
inc
sub
mov
pop
inc
dec
pop
test
sbb
lods
add
push
add
pop
add
mov
or
in
or
ret
dec
pop
pop
sbb
aas
pop
sub
int
sbb
xor
dec
jl
sub
lods
inc
or
xor
push
xchg
shr
popa
push
pop
adc
add
cmp
xchg
je
push
xchg
std
mov
loop
mov
sbb
test
imul
not
cli
pop
hlt
push
out
or
or
dec
cmp
jb
add
retf
push
inc
(bad)
mov
add
xchg
std
push
fcomp
sub
sbb
sar
lods
sub
loopne
nop
xor
dec
and
inc
cmp
rcl
mov
imul
das
push
mov
sub
pop
cmp
jne
mul
and
call
je
cmp
jbe
inc
and
iret
sar
add
ret
add
sub
push
sahf
xor
inc
push
imul
lods
pop
xor
mov
addr16
adc
mov
lock
(bad)
pop
add
test
or
and
and
push
clc
cmp
dec
ja
clc
aam
mov
xor
or
adc
or
mov
mov
rcr
int3
fsub
stos
hlt
jbe
or
push
icebp
test
pop
sub
push
mov
cli
and
sub
(bad)
je
dec
je
dec
jne
mov
push
pop
inc
jmp
xchg
ins
jo
and
or
int
mov
xor
sub
fcmovbe
push
std
add
es
mov
fild
or
aaa
adc
not
pop
add
cmps
rcl
out
in
test
jnp
dec
and
sbb
in
jmp
xchg
pop
lahf
inc
aaa
xchg
out
add
push
or
adc
add
or
ja
inc
jp
push
push
xor
pop
inc
pop
int
mov
int3
lock
xchg
js
jnp
(bad)
jecxz
or
adc
xchg
jmp
or
jne
xchg
push
jecxz
loope
mov
push
xchg
cmps
in
inc
jg
inc
ss
rcl
stos
jne
lock
mov
or
or
call
xchg
xchg
fst
and
sbb
shr
aas
mov
push
xchg
sbb
js
mov
loope
cmp
pop
cmps
push
sbb
fdiv
mov
adc
xchg
push
sti
scas
push
cmps
and
(bad)
xchg
lods
inc
pop
js
mov
jmp
xor
shl
mov
add
xchg
push
inc
pop
sbb
push
jge
and
loopne
fld
pop
xchg
dec
add
xor
popa
xchg
retf
add
xor
or
jl
add
sub
std
lea
mov
or
push
push
dec
sbb
cmc
shr
paddq
xor
gs
or
xchg
dec
cwde
mov
add
adc
lods
push
xor
mov
pop
inc
jne
dec
push
push
push
jecxz
dec
xor
dec
test
dec
add
hlt
xor
cmp
or
rcr
daa
or
mov
or
popf
rol
dec
ret
cmp
jge
adc
std
dec
xor
jge
inc
fiadd
(bad)
jnp
push
jne
mov
mov
push
ja
add
cmp
jl
sbb
push
dec
adc
int3
rol
or
ret
adc
iret
shr
ret
mov
xor
inc
dec
jle
mov
jmp
rcl
xor
mov
es
sbb
movs
sbb
xor
icebp
call
call
fisttp
ds
add
cdq
or
or
adc
stc
call
stc
xchg
jmp
sub
jmp
adc
(bad)
(bad)
push
sbb
xchg
hlt
stc
push
jne
dec
sbb
scas
and
push
push
push
data16
sub
es
or
or
and
int3
dec
inc
es
sbb
and
mov
pop
add
and
inc
cmp
js
sub
or
adc
into
mov
cmp
aas
mov
add
cmp
adc
sbb
cmps
mov
inc
adc
inc
sub
pop
and
test
sbb
jmp
push
or
test
add
cmp
cmp
mov
cmps
mov
or
pop
xchg
adc
push
or
loop
sub
call
push
das
lods
int3
hlt
mov
pop
ins
test
xchg
cmps
enter
mov
mov
xchg
loope
mov
(bad)
xchg
dec
dec
shl
or
adc
or
xchg
out
enter
std
pusha
les
icebp
pop
add
mov
mov
fcmovb
das
add
cmp
rol
push
adc
loope
movs
inc
(bad)
push
sub
call
scas
xchg
or
enter
addr16
inc
mov
dec
mov
adc
xchg
fcmovnu
sbb
leave
and
dec
les
repz
pop
stc
into
or
mov
test
push
test
add
push
(bad)
leave
xor
mov
add
adc
or
js
(bad)
aam
and
mov
jne
leave
je
add
mov
push
xor
mov
cmp
les
nop
add
push
cdq
or
xchg
out
imul
mov
stos
sub
jl
pop
pop
sub
cmp
test
jnp
cmp
mov
jbe
add
aas
adc
push
push
inc
or
cld
adc
jmp
xchg
xchg
ret
cmp
cmp
fstp
jne
int
mov
xor
jne
fadd
outs
jmp
imul
push
cmp
push
jmp
pusha
icebp
xchg
popa
cmp
or
sub
cwde
mov
movs
mov
add
fistp
sub
push
sar
inc
xchg
mov
stos
sub
popf
sbb
sar
push
jmp
div
sar
or
xor
jle
add
xchg
popf
cmp
push
jae
push
dec
xchg
call
loope
pop
gs
cmps
add
push
out
(bad)
repz
xor
shr
dec
hlt
push
push
adc
adc
leave
push
cmp
ins
cmp
shl
sub
or
sub
inc
pop
adc
push
jne
pop
mov
xor
sbb
jge
cmp
inc
in
popa
push
inc
les
mov
in
rcl
in
cli
and
sub
cwde
test
not
sub
stc
imul
push
retf
pop
xchg
mov
push
mov
dec
es
and
out
shl
or
add
cmp
xchg
mov
xchg
jne
popa
jmp
push
ret
push
popw
movs
adc
int3
mov
mov
sub
daa
xlat
push
sub
sbb
dec
fdivr
or
inc
cld
out
fisttp
pusha
pop
fistp
or
xor
or
inc
stos
or
push
push
add
inc
push
ins
or
loopne
or
and
adc
sbb
cmp
fadd
or
rol
jl
pop
sub
stc
and
rcr
sub
adc
loopne
ret
mov
xchg
mov
push
xchg
adc
dec
inc
pop
xchg
in
dec
mov
es
pop
lods
or
rol
or
dec
gs
imul
push
rcr
and
push
adc
or
mov
jmp
mov
sub
cmp
fisttp
sbb
mov
jg
nop
pop
inc
aaa
or
int3
loopne
shl
(bad)
retf
or
xor
sbb
mov
pop
test
int
adc
push
test
bound
rcl
ja
sub
dec
adc
jmp
cli
jnp
nop
adc
sub
pop
in
or
and
pop
and
ficomp
cdq
xchg
jmp
mov
jne
test
test
je
cli
pop
mov
jecxz
jb
push
push
push
inc
lods
dec
(bad)
stc
ja
xchg
sub
lds
in
inc
add
pushf
adc
dec
cmp
inc
fistp
sub
rol
mov
cmp
loopne
or
dec
xor
ret
and
mov
shr
mov
sub
imul
clc
inc
loopne
adc
push
push
pop
mov
std
pop
jns
jmp
push
mov
sar
and
mov
mov
inc
sahf
mov
mov
rcr
push
sub
stos
sub
mov
push
icebp
dec
add
idiv
mov
repz
enter
scas
je
aam
mov
stos
sub
xor
push
pushf
mov
xlat
sar
test
cmps
dec
jl
addr16
and
mov
xor
mov
push
gs
sbb
mov
stos
sti
or
fcomp
pushf
and
cmp
fwait
inc
mov
xor
repnz
dec
mov
and
adc
mov
adc
rol
sbb
dec
or
sbb
xchg
js
xor
call
adc
mov
bound
pop
push
cmp
arpl
push
or
xor
scas
mov
adc
pop
fmul
push
push
sbb
test
pop
lods
sbb
(bad)
call
test
popa
es
retf
xchg
and
jg
push
xchg
adc
or
inc
sub
push
and
xchg
fcomp
add
ret
xor
fmul
mov
xchg
adc
sbb
push
and
mov
or
add
mov
and
loopne
ins
es
test
js
mov
sbb
cs
cmp
jl
sub
jo
rcr
add
sbb
test
adc
xor
loope
in
adc
push
push
cmp
or
mov
dec
inc
fiadd
xchg
jbe
push
dec
popa
imul
dec
mov
sub
ins
cmp
xor
fisttp
fld
mov
adc
push
sahf
data16
je
popa
adc
pop
shl
or
add
pop
imul
and
sub
or
xor
je
lods
call
xchg
dec
push
and
pop
pop
mov
jns
and
pop
pop
inc
add
stc
jl
shr
shl
lods
mov
fbld
push
xlat
movs
cmp
mov
cmp
ja
je
push
ror
jno
mov
mov
inc
imul
ins
add
inc
inc
sbb
jmp
xchg
cmp
push
adc
(bad)
enter
jg
and
mov
repz
aam
icebp
pop
ds
not
sbb
je
or
or
dec
or
pop
inc
out
fimul
mov
add
push
mov
ja
je
add
je
call
std
mov
rol
or
sub
add
ins
or
and
jo
xchg
mov
cs
dec
inc
pop
push
or
push
lock
ror
or
jbe
jle
push
jmp
imul
ins
shl
das
in
test
or
int
or
mov
iret
out
(bad)
cli
add
jmp
push
push
fstp
scas
rol
add
xchg
daa
push
push
test
dec
ror
pop
ja
jge
ret
shl
dec
je
aam
ja
je
pop
ins
hlt
pop
out
out
push
push
push
or
(bad)
pop
mov
push
jmp
cmp
xchg
dec
pushf
(bad)
adc
cmp
scas
and
mov
jnp
cmc
je
sub
or
pop
jne
lock
call
jne
push
sub
push
mov
xchg
pop
or
sub
jg
jecxz
lahf
inc
and
xchg
movs
ja
or
fiadd
mov
rcl
ins
and
pop
mov
test
aaa
pop
pop
aad
(bad)
in
bound
and
hlt
cmc
(bad)
mov
pop
lock
lock
push
xchg
scas
div
sub
test
xor
mov
or
test
dec
bound
adc
sbb
pop
into
shl
add
xor
hlt
cmc
jne
push
push
lock
sbb
xchg
dec
or
adc
fcom
pop
cmp
test
push
test
dec
or
shr
(bad)
in
push
add
add
scas
jl
and
out
jo
inc
lock
test
xchg
add
pop
push
int
or
add
mov
lock
ss
out
xor
leave
je
retf
outs
cs
ret
or
in
out
dec
xchg
xchg
cld
xor
pop
add
cs
adc
imul
mov
add
fcomp
out
dec
sbb
xchg
in
dec
cli
inc
jp
dec
push
pop
je
push
push
cmp
jbe
and
sub
mov
jle
push
add
icebp
dec
test
out
(bad)
mov
push
je
push
push
test
cmp
add
imul
movs
mov
out
xlat
push
adc
je
adc
cmps
lea
push
mov
cmc
pop
imul
cdq
stos
pusha
cmp
push
cmc
pop
inc
pop
sbb
outs
mov
mov
pop
into
mov
nop
xor
push
jo
add
mov
loope
sbb
push
call
push
pop
inc
or
sbb
cmp
loope
add
adc
xchg
cmp
xchg
fmul
daa
popf
cmp
pop
mov
pop
sbb
ret
jnp
retf
xchg
rcl
retf
in
(bad)
jo
sbb
test
sbb
and
adc
fimul
or
xor
arpl
and
es
div
push
mov
arpl
(bad)
jne
pop
mov
jmp
add
ficomp
push
dec
or
dec
mov
icebp
bound
lods
xchg
inc
repnz
pop
adc
das
adc
sub
push
sti
loop
jmp
fst
pop
pop
mov
adc
pop
fsub
add
push
in
cmp
push
and
je
into
mov
xor
jmp
adc
jo
ins
mov
jbe
dec
pop
repz
aaa
and
jne
sbb
sbb
in
inc
or
or
in
movs
loopne
addr16
jo
loopne
into
je
ins
cmps
push
mov
addr16
xchg
fs
arpl
adc
pop
dec
adc
jmp
and
pop
lea
je
jo
xchg
call
xlat
rcr
cmp
cmp
stc
imul
or
in
sub
inc
inc
push
adc
mov
shr
cdq
dec
in
mov
and
cmp
sbb
inc
sbb
in
sbb
sar
xchg
fs
and
popf
ins
inc
sti
ins
retf
pop
inc
mov
out
mov
(bad)
jmp
leave
push
pushf
fmul
add
sbb
xor
adc
xchg
das
(bad)
inc
inc
jne
or
mov
xor
pop
das
lahf
cli
cmp
and
mov
inc
push
adc
out
dec
jnp
stos
mov
ret
mov
xchg
cmp
mov
mov
lods
jne
(bad)
push
adc
sbb
inc
xlat
push
push
lods
adc
hlt
and
icebp
mov
in
ss
cld
sub
xchg
movs
cmp
les
stos
mov
mov
and
ror
sub
in
add
ror
out
movs
stos
and
or
xchg
dec
in
mov
pop
or
fs
in
fcomp
shl
add
inc
jnp
add
enter
sub
les
arpl
dec
xchg
in
pop
inc
es
daa
pusha
mov
ins
loope
jb
sbb
push
dec
ret
pusha
rcr
inc
gs
into
pusha
dec
push
movs
cs
cmp
push
inc
in
xor
lahf
mov
repz
enter
mov
(bad)
mov
push
or
mov
in
mov
push
xchg
mov
in
mov
inc
cs
sbb
push
inc
push
not
add
aam
push
pop
lahf
sbb
popf
adc
aam
xor
aas
aad
adc
or
imul
shr
mov
dec
fwait
inc
xchg
push
dec
cmp
fiadd
add
sub
cmp
stc
shl
push
sbb
jbe
rcr
sub
nop
pop
enter
hlt
sbb
sbb
sbb
pop
or
mov
and
mov
mov
sbb
dec
sbb
add
daa
dec
or
lock
pop
sbb
repnz
xchg
pop
movs
sbb
dec
xor
pop
pop
and
sbb
ret
adc
pop
daa
leave
add
ja
push
and
rol
inc
and
and
xor
xchg
and
lahf
dec
sahf
stos
iret
or
iret
or
push
add
push
add
xor
retf
push
enter
test
or
iret
mov
arpl
in
xor
xchg
mov
xor
sbb
adc
mov
test
in
lods
into
pop
mov
adc
xchg
and
mov
push
and
adc
pushf
sub
arpl
(bad)
xchg
jns
adc
dec
xchg
sub
mov
loop
mov
sbb
mov
outs
inc
add
pushf
inc
mov
add
imul
pop
mov
pop
ucomiss
call
lock
push
sar
add
rcr
inc
jo
mov
add
xchg
push
add
cmc
cmp
outs
popa
add
lds
add
outs
or
scas
or
ss
leave
and
shr
jae
(bad)
sub
addr16
add
cmp
or
mov
aas
call
ret
addr16
add
push
add
test
movs
jb
push
push
mov
aam
jmp
nop
push
push
add
pop
ins
call
dec
pop
xchg
jg
or
cmp
push
sub
sbb
pop
(bad)
sbb
and
cmp
xor
aaa
outs
mov
call
or
mov
sub
iret
sub
or
retf
fwait
jmp
xor
and
mov
mov
xchg
inc
push
cmp
add
fcmovbe
sbb
dec
mov
pop
jo
popa
sub
add
std
inc
push
mov
sbb
pop
inc
push
or
or
dec
dec
and
xchg
push
jne
push
mov
and
dec
or
push
test
enter
push
das
pop
mov
(bad)
cs
(bad)
ins
push
push
cmps
inc
sbb
sub
add
jmp
shl
pushf
pop
and
mov
dec
or
pop
ret
shld
push
mov
and
push
add
cmps
push
sbb
xor
into
jmp
adc
mov
sub
pop
ins
cs
push
sbb
or
push
je
xor
inc
jns
mov
mov
ror
push
pop
aas
inc
cmp
fst
mov
add
jo
arpl
inc
pop
and
adc
inc
sbb
in
jg
imul
dec
and
add
sbb
repz
jb
jmp
mov
mov
sub
in
mov
push
js
les
dec
sbb
das
push
jmp
or
bound
pop
hlt
cmp
and
jmp
stc
sub
popf
inc
cmp
xchg
daa
lock
(bad)
push
jmp
lea
jmp
adc
dec
mov
cmp
inc
or
jnp
dec
and
push
hlt
sub
xchg
sub
pop
mov
or
sbb
mov
adc
scas
push
neg
inc
jecxz
xchg
and
push
sub
(bad)
clc
in
sub
test
cmp
cli
dec
inc
inc
or
test
jge
test
add
rol
and
(bad)
pop
test
jae
ret
hlt
ss
inc
pusha
pusha
jmp
add
or
(bad)
in
or
xor
add
and
lea
cld
xchg
shr
jp
add
fsubr
sbb
sbb
pushf
loope
inc
cmp
pop
shr
xlat
or
inc
or
and
xor
cmp
fisttp
retf
cmp
pop
or
sub
cmp
lea
loop
ret
xor
cmp
stos
adc
loop
add
arpl
and
xor
retf
ret
xor
lock
add
dec
push
xchg
loopne
push
mov
cwde
xor
push
shr
mov
in
adc
shr
cmp
push
mov
lods
not
pusha
lea
push
(bad)
cld
and
icebp
daa
or
sar
ja
arpl
inc
iret
pushf
cmp
fidiv
adc
cmp
addr16
cmp
movs
jno
lods
jecxz
push
sbb
mov
ror
mov
(bad)
dec
aad
and
mov
mov
pop
and
pop
pop
pop
fwait
dec
mov
mov
sbb
lock
xor
push
and
ja
lock
jmp
(bad)
lock
inc
and
push
xchg
icebp
dec
fisttp
pop
pop
jmp
sub
adc
imul
je
(bad)
imul
fsubr
jns
lea
gs
daa
pop
shl
jge
xor
retf
leave
test
inc
xor
push
add
sub
mov
and
inc
mov
xchg
sub
push
pop
das
adc
dec
test
ja
aas
popf
jge
push
hlt
std
das
or
push
hlt
clc
add
lahf
inc
movs
test
dec
adc
mov
inc
sbb
ja
arpl
jmp
mov
test
out
not
mov
call
mov
(bad)
jnp
jmp
jle
or
nop
and
cwde
pop
push
xchg
xor
loopne
shl
call
shr
lds
cld
add
and
jo
push
push
xchg
add
mov
mov
(bad)
xchg
fnstenv
inc
ss
cmps
xor
xor
loopne
inc
je
push
push
lock
sbb
test
lea
mov
test
cmp
shl
lock
xchg
push
add
push
cmp
lds
es
inc
clc
mov
cmp
sbb
test
ins
in
loope
pop
fwait
les
stos
stc
mov
dec
add
ret
cli
std
fldenv
inc
adc
push
adc
sub
push
mov
mov
jmp
cmp
add
push
aas
rol
cmp
mov
xlat
mov
push
mov
inc
fsub
cmp
hlt
jae
sub
cmp
lea
mov
out
adc
cmp
sbb
retf
jo
inc
and
mov
xchg
dec
push
clc
or
leave
xor
mov
and
or
outs
adc
out
xchg
and
adc
lea
push
inc
adc
fimul
les
les
sub
test
push
icebp
xchg
mov
neg
inc
add
add
inc
mov
dec
mov
adc
hlt
fadd
sbb
xor
cmps
and
outs
adc
sub
and
sti
sbb
cmp
sbb
push
add
cmps
fsub
push
iret
push
and
aas
fs
and
scas
adc
inc
rcl
cmps
mov
pop
mul
mov
push
push
mov
into
jno
or
jbe
sbb
dec
movs
xor
push
ror
frstpm(287
pop
mov
jmp
test
sbb
add
jle
cmp
popa
popf
adc
std
jle
jne
test
mov
jo
mov
or
dec
push
push
test
mov
dec
mov
sbb
dec
sub
mov
adc
xor
stos
push
in
xchg
mov
jl
xchg
popa
adc
stos
sub
data16
xchg
mov
sbb
sbb
sub
mov
scas
or
sbb
aaa
test
sub
add
mov
stc
add
test
nop
push
jmp
ror
mov
loope
mov
mov
fcmovbe
arpl
adc
mov
mov
or
out
adc
inc
push
push
add
stos
or
out
xor
dec
sbb
test
and
aas
outs
test
mov
mov
(bad)
or
cmp
inc
inc
ret
pop
hlt
or
mov
js
lea
retf
fcomp
mov
out
imul
cs
mov
inc
and
and
pop
sbb
out
ror
les
pop
rcl
fadd
pop
pop
mov
retf
(bad)
xor
xchg
xchg
sti
xor
pop
inc
and
inc
xor
or
adc
outs
arpl
(bad)
shl
cmp
retf
add
adc
mov
pushf
sub
sub
inc
jp
or
adc
pushf
add
sub
jno
pop
test
sbb
mov
add
adc
hlt
ins
popf
stos
jo
push
push
dec
add
or
mov
inc
fninit
jl
lock
outs
stc
mov
or
xchg
xchg
mov
adc
inc
push
and
cmp
dec
push
jne
or
mov
mov
add
xor
jo
je
push
or
push
adc
xor
movs
pop
add
cmp
mov
or
gs
sub
jl
(bad)
pop
inc
add
lds
out
sbb
out
movs
sbb
test
stc
push
mov
ss
jbe
add
push
wrmsr
add
pop
in
ffreep
pusha
sub
jno
fwait
(bad)
div
or
add
inc
out
xor
jmp
mov
cmc
fmul
mov
pop
mov
hlt
mov
mov
adc
mov
or
adc
pop
or
sub
dec
in
mov
bound
mov
mov
mov
lahf
cmp
out
aas
sub
inc
sbb
mov
rcr
sub
xchg
xor
mov
clc
add
nop
pop
xchg
or
popa
push
iret
mov
xor
rol
or
and
xchg
dec
or
cld
fild
mov
cmps
mov
not
test
xchg
jno
xor
pop
adc
movs
sti
and
and
test
jmp
push
and
push
mov
inc
pop
dec
pop
inc
inc
xor
stos
and
and
dec
jl
call
mov
add
inc
or
add
push
int3
or
mov
jb
xchg
inc
add
es
mov
leave
shl
push
xor
jnp
test
or
mov
xor
(bad)
in
mov
test
jns
xchg
mov
cmp
xor
push
add
stos
(bad)
int3
popf
cwde
es
les
adc
sbb
sbb
adc
rcr
inc
addr16
out
ret
add
inc
mov
cmp
cs
pusha
aas
inc
dec
cmp
xor
je
sub
jmp
hlt
sub
fcom
sbb
or
(bad)
adc
jmp
dec
and
in
dec
movs
add
test
js
daa
or
xchg
cmp
pop
pop
lahf
add
test
test
sub
shl
adc
mov
cmp
pop
(bad)
out
adc
adc
lahf
popa
imul
ja
and
jbe
in
adc
mov
outs
not
(bad)
jmp
cdq
pcmpgtb
push
add
push
mov
lea
mov
push
pushf
pushf
dec
mov
push
xchg
inc
sbb
mov
data16
movs
cmps
pop
pop
loope
mov
jmp
adc
aaa
inc
retf
pcmpgtb
std
imul
dec
push
data16
out
fld
scas
dec
mov
and
adc
jnp
jno
push
mov
or
fnstcw
(bad)
pop
es
push
pusha
cdq
push
push
test
mov
rol
scas
sbb
lock
mov
or
mov
sbb
sbb
jne
adc
nop
xchg
and
push
adc
aad
test
push
lods
push
(bad)
into
add
call
aam
ret
xchg
fs
or
fs
gs
shr
push
scas
or
mov
daa
dec
fs
call
fild
xor
pop
mov
jge
adc
test
call
iret
test
pop
cdq
sbb
sub
push
sbb
sub
and
dec
cmp
cmps
cmp
(bad)
sbb
jge
mov
ret
test
fistp
pop
and
scas
pop
test
mov
xchg
iret
lea
paddd
ror
mov
cmp
psubsw
inc
cmp
and
push
push
xchg
sub
mov
add
mov
push
push
inc
aas
stc
jnp
push
rcr
cli
xlat
mov
lea
mov
daa
je
out
fst
add
or
and
dec
push
or
sub
test
mov
xor
adc
adc
retf
mov
push
adc
movs
mov
adc
in
ret
inc
and
jae
cmp
pusha
adc
xchg
add
push
adc
lock
jge
sar
or
lahf
jb
xchg
jb
arpl
add
mov
(bad)
mov
add
mov
pop
jb
cmovle
sub
sbb
add
lods
jecxz
pop
or
addr16
or
aad
xchg
dec
cmp
leave
mov
jo
inc
lds
fs
sbb
lea
pop
ja
dec
jle
cmp
xchg
inc
xor
xchg
mov
or
rol
sub
rcl
cmp
jbe
mov
mov
cmp
fcmovb
mov
ret
xor
push
dec
xchg
data16
pop
pop
push
ins
push
stos
gs
dec
imul
mov
inc
into
movnti
mov
adc
sub
jmp
fsubr
fmul
cmp
cmp
add
pop
je
scas
add
mov
fist
sub
lods
push
aas
je
cmp
daa
ins
push
mov
inc
jno
mov
adc
popf
mov
aaa
or
xchg
or
sbb
sbb
push
inc
aaa
mov
sahf
ret
sbb
add
cmp
adc
into
adc
xlat
and
mov
dec
sbb
ja
adc
adc
xor
mov
adc
mov
enter
xchg
cmp
sub
add
js
lods
outs
out
cmp
clc
jmp
cmp
adc
js
cli
sub
js
icebp
jb
adc
mov
adc
loop
pop
pop
cmp
adc
and
sub
sbb
cmp
push
adc
shufps
xchg
mov
xor
movs
jo
inc
xlat
xor
fistp
das
fld
jge
push
fwait
push
ins
xor
push
sbb
mov
add
in
jnp
(bad)
and
mov
or
xor
loopne
adc
sar
pop
hlt
jae
sub
int3
add
add
cmp
and
jb
retf
inc
sbb
fdiv
xchg
sub
inc
push
int
(bad)
int
lahf
jns
cs
pop
int3
shl
xor
dec
and
cmp
icebp
or
push
loopne
inc
arpl
pop
cmp
mov
mov
pop
inc
popf
(bad)
jmp
pop
add
pop
xor
cmp
sbb
das
out
nop
add
pop
in
sbb
aad
mov
sbb
iret
mov
shl
mov
ficomp
lods
and
(bad)
imul
jg
cld
add
adc
pushf
cmps
adc
sbb
aas
lock
test
sub
lea
push
clc
pop
call
adc
and
and
xor
pop
push
jg
imul
inc
mov
add
sub
mov
fsubr
test
dec
cmp
xchg
inc
or
call
adc
sub
push
and
add
gs
add
jmp
cmp
scas
or
or
mov
popa
mov
adc
jecxz
cmp
push
push
inc
(bad)
jmp
mov
push
loop
aas
nop
xor
dec
mov
in
(bad)
es
bound
and
pop
stos
(bad)
pop
sbb
mov
or
jae
adc
js
shl
cmpxchg
push
mov
lock
clc
call
push
xor
add
lods
or
jmp
jmp
push
push
mov
nop
or
add
pop
mov
jnp
(bad)
sar
lods
adc
push
cmps
pop
or
daa
mov
mov
sbb
mov
mov
adc
je
pop
sbb
enter
pop
jb
xor
push
ss
(bad)
and
and
mov
inc
jmp
adc
inc
and
or
inc
lea
fs
inc
sbb
hlt
cmp
ja
sbb
mov
shl
sbb
or
dec
lods
addr16
or
mov
fdivp
pop
call
(bad)
fisub
ds
push
mov
or
clc
jne
adc
push
rcl
mov
dec
adc
xchg
push
inc
add
xor
xchg
or
jbe
mov
adc
rcl
add
ret
xor
fisttp
dec
dec
adc
adc
push
sub
mov
std
cmp
je
push
jmp
lock
out
(bad)
and
xor
mov
aam
out
mov
push
imul
pop
mov
mov
int
wrmsr
test
push
cdq
imul
jae
dec
push
loope
push
add
repz
push
push
mov
in
jo
imul
pop
dec
and
xor
bound
call
push
push
adc
ja
ja
pop
cld
pop
push
mov
inc
mov
sbb
js
pushf
imul
mov
bound
push
ret
sbb
mov
and
test
in
pusha
adc
loopne
sbb
add
sub
es
or
retf
rol
sbb
add
mov
or
outs
push
mov
pop
xor
jnp
dec
aam
cmps
mov
dec
ret
pop
dec
and
stos
mov
cmp
push
ret
inc
popf
cmp
fbld
jmp
(bad)
push
scas
xchg
cmp
data16
jmp
pusha
sub
mov
cli
adc
push
dec
push
je
cli
pop
dec
jne
cmp
sbb
and
mov
push
adc
pop
jmp
jne
and
pop
inc
cld
out
sbb
jecxz
add
sbb
lock
sub
std
and
mov
test
jmp
and
xchg
mov
cmp
ins
mov
add
retf
enter
mov
pop
sar
or
test
je
sbb
or
movs
adc
pushf
fwait
adc
mov
and
dec
mov
sbb
retf
push
retf
adc
push
nop
sbb
ins
aas
mov
dec
sar
inc
adc
in
mov
sub
retf
adc
outs
inc
pop
pop
sbb
in
cld
cmp
dec
cmp
mov
xchg
mov
mov
and
inc
test
mov
sbb
rcl
inc
(bad)
ds
inc
rol
mov
lds
inc
popa
test
and
inc
xor
add
or
adc
pusha
shl
push
sub
sub
mov
enter
bound
xchg
pop
in
sub
or
enter
fs
es
rol
mov
sbb
cmp
sbb
stos
in
in
xchg
stc
mov
call
shr
jmp
add
sub
mov
add
sub
inc
rcr
add
push
cmp
mov
loope
fwait
scas
movs
xor
inc
cmps
fcomp
or
lahf
ficom
(bad)
(bad)
mov
add
lea
push
lea
lods
xchg
add
inc
mov
pop
sbb
add
push
imul
mov
mov
xchg
mov
xor
movs
nop
cmp
sbb
inc
push
xchg
sub
adc
xor
sbb
mov
jle
js
hlt
inc
sbb
clc
push
cmp
inc
mov
push
scas
out
sbb
cmp
add
bound
out
sub
jmp
xchg
dec
pop
mov
test
jns
and
or
and
and
inc
loopne
leave
test
or
xlat
pop
push
test
es
jbe
fistp
fild
test
mov
or
add
retf
ret
je
sub
cmc
inc
inc
push
xchg
add
sub
and
stc
or
push
pop
mov
jmp
in
push
scas
shl
outs
sbb
mov
into
adc
and
cmp
stos
dec
cwde
inc
aad
sub
nop
fs
int
and
add
push
adc
pop
mov
cmp
icebp
dec
into
and
les
loop
add
push
dec
inc
jae
scas
pop
lock
lea
push
mov
stc
or
dec
arpl
or
pop
ret
sbb
adc
jno
add
push
mov
rcr
leave
les
sar
cs
loopne
cvtps2pd
scas
icebp
jle
xor
mov
or
pop
pop
mov
cmc
mov
fucomi
inc
inc
das
loope
jle
sub
data16
jne
xlat
out
mov
sub
cmp
jb
sub
mov
cmp
inc
popa
xlat
and
fstp
es
pusha
mov
test
jmp
sub
leave
mov
dec
rol
sti
mov
mov
sub
sub
and
xor
and
and
mov
adc
je
pop
in
std
add
test
xchg
or
add
cmp
and
jne
div
adc
cmp
add
xor
loopne
test
add
shl
(bad)
out
pop
sar
xor
sbb
push
pop
push
rcr
xchg
cs
clc
jmp
and
(bad)
cmovl
cmc
push
xchg
cdq
add
js
adc
fs
arpl
xchg
mov
idiv
inc
les
cmp
fimul
clc
xchg
loope
cwde
cmp
stos
imul
daa
push
mov
adc
xor
call
sub
xchg
lods
inc
pop
or
sbb
pop
push
inc
or
mov
jno
out
mov
sub
test
xchg
add
sbb
fisub
or
bnd
push
sbb
adc
inc
or
cwde
dec
pusha
sbb
lea
sub
loopne
not
or
test
add
xor
inc
mov
mov
xor
pop
dec
adc
ss
push
xchg
or
je
mov
leave
push
nop
adc
das
adc
add
pop
sbb
push
xchg
paddq
into
or
or
jnp
clc
cmp
(bad)
(bad)
icebp
mov
das
jmp
ret
mov
dec
or
sub
xchg
imul
xchg
add
or
cmps
mov
fldcw
movs
imul
xchg
xlat
outs
sub
and
js
xchg
inc
sub
push
xchg
adc
add
mov
jg
jmp
cmp
dec
aad
lock
and
and
jo
push
pop
add
out
movzx
pop
adc
cdq
mov
outs
adc
mov
dec
push
or
sbb
dec
out
push
pop
xor
jl
inc
jg
pop
cli
adc
adc
movzx
jbe
inc
(bad)
push
pusha
lahf
pop
call
ja
cmps
push
outs
sub
sbb
daa
sbb
or
dec
es
(bad)
and
imul
sub
inc
jnp
add
sbb
jmp
icebp
add
pop
les
or
push
inc
imul
push
and
xchg
jbe
push
pop
jmp
lahf
pop
cmc
call
or
pusha
int3
inc
loop
push
in
retf
sahf
mov
and
stos
jae
mov
loope
or
in
push
sbb
inc
jg
xchg
push
mov
push
mov
add
push
popf
lods
mov
movs
and
push
xor
lea
not
and
lock
or
cli
ret
sbb
add
or
mov
fstp
adc
mov
and
mov
adc
mov
adc
mov
sahf
jle
shl
cmp
xor
in
lock
xchg
scas
movs
je
add
mov
inc
mov
repz
in
jns
mov
(bad)
pushf
pop
push
pop
push
push
rol
xor
ds
lock
mov
test
add
(bad)
shl
mov
jle
call
dec
jne
mov
or
rcr
add
sbb
sbb
push
imul
das
enter
sub
push
or
enter
push
ret
or
dec
lea
das
sub
inc
mov
inc
imul
sahf
and
imul
jge
cmp
test
outs
add
inc
call
(bad)
inc
mov
jo
fsubr
bound
imul
sub
std
cmp
mov
popa
or
adc
adc
xchg
add
fmul
retf
sbb
fisub
test
sub
mov
sbb
retf
popa
cwde
pop
dec
iret
mov
pushf
sub
jle
add
fdiv
sub
dec
ret
push
in
nop
movs
loope
dec
pop
add
pop
popf
dec
ja
push
pop
add
ror
mov
add
sbb
and
inc
in
and
sub
push
push
and
pushf
lahf
ror
mov
cmp
sub
sar
mul
xor
mov
push
push
lea
push
or
in
daa
lock
push
xchg
int3
div
sub
mov
cmp
jecxz
xchg
xor
push
cmp
imul
(bad)
popf
mov
out
jmp
outs
mov
in
sti
pop
or
push
dec
or
dec
popa
enter
xor
cmps
pop
mov
mov
popa
loopne
jmp
mov
arpl
lds
or
dec
dec
(bad)
dec
shl
fcom
fst
nop
xchg
(bad)
jl
mov
mov
jge
pop
fbld
ud2
inc
sbb
add
xor
or
mov
mov
fldenv
movq
shr
retf
xchg
jecxz
(bad)
loop
shl
add
pop
pusha
pop
dec
mov
mov
outs
in
ins
and
sbb
fistp
sub
ret
in
cwde
add
xchg
call
xor
mov
popf
cvttps2pi
jle
in
jl
je
fiadd
jo
jmp
loop
jo
and
mov
aaa
mov
lea
mov
inc
xor
push
sub
jb
pop
test
mov
or
xor
mov
lods
xchg
add
fnstsw
sar
jle
rcr
sub
sti
cmps
add
in
adc
push
dec
test
fs
add
add
dec
sbb
adc
xor
sbb
ds
out
enter
inc
or
mov
imul
xchg
in
sub
loopne
mov
lods
jecxz
mov
push
push
xlat
shl
inc
out
inc
scas
sub
dec
ins
adc
push
les
dec
pop
xchg
fiadd
xchg
popa
ret
call
push
lods
xchg
mov
jmp
adc
xor
sub
cmps
push
and
or
mov
mov
mov
das
jmp
aaa
sbb
adc
mov
mov
je
ret
ret
mov
add
pop
sbb
push
sub
mov
sbb
sti
sub
pop
out
inc
loop
lea
push
inc
fild
jle
cmp
jge
fild
adc
and
cmp
jge
lods
inc
cwde
in
mov
in
or
jno
pop
sbb
mov
jae
jmp
add
cmp
mov
inc
aam
and
or
jb
pop
pop
push
jle
sbb
cli
xor
pusha
daa
adc
fistp
or
xchg
pop
add
daa
xchg
and
or
dec
outs
mov
mov
adc
mov
inc
enter
sbb
push
iret
adc
push
adc
sub
jmp
push
fbstp
(bad)
adc
dec
jmp
or
xor
aam
pop
xor
add
dec
or
sub
loope
adc
lds
jle
and
xor
add
mov
(bad)
mov
xchg
lock
es
mov
test
add
inc
adc
ins
pushf
or
lods
cmp
inc
inc
push
or
adc
les
stos
call
sar
out
jmp
mov
and
mov
push
jno
imul
and
sub
jne
dec
jecxz
sub
xor
add
sar
ins
xor
add
pusha
jl
lods
fbld
pop
cmp
mov
or
and
add
sbb
pop
rcl
xor
mov
test
dec
lock
out
je
push
sbb
push
or
adc
xchg
xchg
push
jae
push
jne
inc
in
jno
cmp
mov
or
mov
sbb
ss
popf
push
sub
push
sbb
stc
enter
jne
mov
and
jmp
adc
popa
jecxz
inc
shr
lea
in
jnp
test
pop
mov
jp
inc
pushf
inc
or
(bad)
repnz
cmp
test
sub
mov
mov
pop
aad
cmp
sbb
sub
pop
or
and
loop
ja
test
sbb
ficom
sbb
dec
adc
or
sti
jmp
add
cmp
sbb
xor
mov
stos
js
ret
in
mov
push
pop
push
or
add
sub
nop
mov
xor
outs
lahf
cld
loop
adc
push
(bad)
jo
popa
pusha
adc
call
or
inc
pop
push
loopne
cdq
ds
popa
test
cmp
(bad)
cwde
aaa
or
push
xor
cmp
out
add
les
lea
retf
add
adc
mov
xor
and
push
jno
scas
push
and
adc
add
sbb
sbb
clc
fwait
pusha
pop
sub
jnp
jmp
xor
ds
sub
inc
out
and
das
add
ins
out
pop
sbb
adc
sahf
adc
in
adc
mov
retf
mov
add
retf
mov
sbb
out
jmp
lods
gs
je
adc
sbb
cmp
adc
add
pop
mov
cmps
movs
mov
sbb
loope
rcl
in
jns
xor
and
cld
mov
aad
test
adc
fdivr
loope
cmps
loope
rol
aad
adc
gs
push
mov
push
and
or
inc
pop
or
jbe
sub
jmp
jne
sti
test
loope
fisttp
cmps
imul
cld
jo
sbb
xchg
and
or
inc
out
add
call
push
pop
mov
pmulhuw
ret
sbb
adc
mov
fsqrt
push
inc
retf
cmp
push
inc
jmp
ja
add
sbb
mov
cmp
imul
add
add
mov
add
sbb
dec
add
movs
xchg
into
cmp
pop
aas
push
inc
mov
cmp
jmp
xchg
inc
retf
cmps
mov
jne
or
(bad)
and
call
mov
mov
mov
jp
les
std
sbb
scas
xor
into
add
jo
sub
add
test
test
mov
sub
lds
jae
sub
xchg
xor
sbb
dec
pusha
sbb
sbb
cmp
fst
push
mov
popf
or
push
sbb
int3
sahf
pop
hlt
mov
inc
mov
mov
or
je
xchg
popa
inc
rcl
gs
adc
add
les
pop
sbb
add
(bad)
jg
scas
jo
clc
shl
adc
mov
xor
cmp
cli
xchg
jb
push
push
push
add
jo
aam
iret
dec
sahf
sub
sar
dec
mov
add
popf
add
call
mov
or
ins
add
xor
shl
sti
inc
shl
push
jns
add
ins
push
jb
sti
add
faddp
mov
mov
xchg
into
add
call
inc
cmp
pop
imul
add
lods
push
aaa
fld
pusha
cmp
push
pop
sahf
shr
push
repz
sub
add
scas
movs
or
cmps
movs
cs
popw
or
popa
sub
enter
or
mov
adc
cmp
adc
aas
pushf
and
xor
bound
int3
ret
seto
and
xchg
in
xchg
in
fcom
add
xchg
or
adc
adc
in
inc
fs
add
cmc
pop
push
mov
jp
jge
and
in
mul
nop
mov
mov
test
add
daa
add
or
cwde
or
sbb
ss
int3
sbb
popf
or
or
inc
cmp
jo
and
or
sub
clc
jo
enter
lods
ins
int3
stos
mov
jmp
nop
mov
loopne
mov
sub
add
xor
in
add
or
jns
add
xchg
in
and
xchg
inc
ret
lods
out
inc
idiv
xchg
int3
inc
jnp
lock
movs
jle
nop
inc
sbb
add
push
cmp
lea
inc
in
outs
adc
push
xchg
xor
fsubr
inc
or
xchg
xor
pop
add
nop
push
mov
jle
fsub
jmp
aam
dec
or
arpl
mov
cmc
fdiv
jmp
push
sbb
dec
pop
mov
xor
jne
mov
xor
add
int3
pop
popa
sbb
push
inc
mov
pop
shl
nop
adc
cmp
rcl
mov
les
or
dec
test
inc
and
mov
fiadd
stos
push
outs
inc
test
pop
mov
imul
inc
repz
mov
sub
aad
push
enter
adc
sahf
push
sbb
int
sub
pop
mov
add
xor
ficom
test
adc
sbb
mov
xchg
sbb
or
sub
arpl
mov
dec
sub
out
mov
push
test
add
push
ins
repnz
mov
push
cmp
add
xchg
jbe
nop
dec
dec
and
push
sbb
xchg
xchg
xchg
sbb
icebp
es
popa
pop
jne
lea
gs
popa
(bad)
movs
and
out
dec
cmp
inc
cmp
mov
adc
retf
add
or
pushf
movs
frstor
mov
jecxz
inc
sub
pop
adc
loope
and
sbb
movs
cli
ret
pop
add
fsubr
dec
xor
lds
lock
xor
inc
sub
hlt
pop
rcr
imul
fstp
ss
pusha
mov
dec
(bad)
jmp
pop
sti
enter
les
or
and
mov
adc
adc
sar
xor
push
xchg
cmp
xor
aaa
dec
lods
inc
or
test
or
or
push
mov
frstor
dec
xchg
or
inc
(bad)
cmps
adc
push
pop
out
inc
push
imul
dec
or
fld
je
xor
pop
dec
sbb
ror
es
xchg
popa
repz
rdmsr
cmp
inc
pop
push
pop
sti
adc
pop
pop
push
add
ret
mov
aad
or
add
nop
inc
and
mov
(bad)
and
xchg
fsub
lods
sbb
fldenv
sbb
shl
pop
or
rol
and
push
je
addr16
movs
or
and
retf
pop
sbb
inc
sbb
outs
and
xor
sbb
push
aad
fild
or
cwde
add
loopne
jne
cmc
push
jle
sub
jb
add
ss
loope
add
add
pop
sub
fnsave
or
je
sub
rol
cmp
cmps
into
inc
rcr
repz
mov
xchg
ins
ja
sub
(bad)
jb
or
scas
jne
and
mov
or
ret
in
outs
jb
dec
mov
mov
clc
mov
fdiv
xchg
push
jl
lea
dec
sub
push
mov
lea
xchg
dec
cmp
xchg
not
pop
mov
and
ret
pop
adc
sub
test
mov
sub
cdq
call
sub
fimul
dec
cmps
ror
sub
mov
sbb
test
jmp
and
xchg
pop
ins
mov
xor
push
and
lea
push
cmps
cmp
sub
add
sub
ins
pop
fnstenv
fadd
(bad)
mov
cmp
js
cmp
xchg
sub
push
push
jmp
mov
mov
iret
fcom
add
sub
and
shl
rol
sbb
push
(bad)
cld
loop
(bad)
dec
or
inc
ds
test
fwait
es
ficom
ror
neg
cmp
lock
sub
push
not
push
sub
jae
xor
or
mov
mov
dec
sub
cmp
sub
mov
mov
inc
popf
mov
or
sub
into
sub
add
aam
mov
sbb
test
add
bound
rol
ins
stos
sbb
push
mov
cmps
or
cmp
in
jbe
cdq
add
add
add
add
lods
out
add
push
and
(bad)
jae
movzx
loope
push
adc
or
inc
push
sub
jbe
xchg
and
jb
pop
pushf
xor
push
dec
loopne
fisttp
jmp
ss
mov
xchg
(bad)
pushf
aaa
pop
sahf
and
add
mov
add
sbb
xor
xor
adc
mov
arpl
(bad)
cmp
out
adc
cmp
jae
push
xor
fiadd
(bad)
cmp
sub
cmps
int3
ror
push
sti
jmp
sbb
and
clc
push
dec
jmp
mov
pop
add
add
popa
retf
pop
mov
jmp
xchg
xor
pop
jp
sbb
push
mov
or
pop
rol
lock
rol
inc
(bad)
jle
ror
push
and
push
das
nop
and
mov
shr
popf
jne
add
mov
(bad)
retf
aas
pop
adc
icebp
and
cmp
mov
mov
jg
pop
fistp
fdiv
pop
sbb
aam
es
sub
sub
(bad)
int3
xor
mov
inc
fdivr
sbb
add
fcmovnbe
pop
pop
sbb
mov
push
pop
add
sub
mov
xor
jecxz
out
push
fldcw
sbb
ja
push
ja
and
cld
icebp
shl
cmp
aaa
into
pop
ror
jo
jnp
add
jl
push
pop
daa
sbb
js
ror
sar
movs
and
xchg
clc
pop
aaa
cwde
inc
add
and
aaa
or
hlt
pop
sbb
and
adc
js
mov
leave
sub
outs
xor
jb
adc
push
inc
sbb
adc
lods
adc
mov
(bad)
not
xchg
enter
push
rcr
dec
inc
push
cs
push
cli
cmp
xor
cmp
in
or
add
mov
sub
popf
xchg
or
inc
add
push
arpl
cmps
or
aam
inc
and
es
and
mov
and
retf
and
adc
sub
add
pop
add
adc
iret
sahf
xor
xor
loop
(bad)
dec
sub
pop
sub
jge
and
in
aaa
xor
jle
add
push
pop
push
or
verr
pop
add
jmp
stos
and
mov
mov
nop
ins
das
and
fs
or
mov
adc
jne
add
jmp
out
mov
jmp
adc
pop
jmp
and
sbb
lea
test
cmp
jge
fcom
push
or
add
stos
rcr
or
dec
cmp
fadd
push
cmp
das
inc
(bad)
pop
in
xchg
pop
xchg
mov
and
push
dec
cmp
mov
xor
and
sbb
out
or
or
movs
adc
lods
inc
adc
xchg
data16
cwde
jo
adc
mov
cwde
jo
dec
xor
icebp
xor
or
pushf
xchg
sub
cld
or
jns
push
js
jle
sbb
js
adc
adc
jmp
adc
jb
jne
mov
ins
mov
popf
je
nop
punpckhdq
fcom
or
popa
es
js
or
dec
jae
add
lahf
call
gs
add
push
cmp
pop
rol
push
push
and
ja
movs
push
jmp
pop
jmp
add
pop
mov
or
rcr
(bad)
(bad)
jnp
and
or
mov
add
or
xor
adc
inc
adc
std
lods
shl
and
xchg
xor
ins
xchg
pop
leave
jmp
add
fldcw
sbb
sbb
jns
out
or
adc
adc
hlt
jns
hlt
sbb
sbb
sbb
sahf
mov
nop
xor
or
movs
fcomp
push
mov
iret
mov
lock
je
cdq
sub
sub
jp
enter
pop
jmp
jo
sub
jo
jno
iret
mov
mov
pop
adc
cmp
adc
inc
jb
mov
and
or
add
or
and
jl
mov
pop
pushf
(bad)
lea
xchg
lea
mul
add
adc
les
mov
enter
test
bound
int3
adc
cs
sub
push
les
cwde
pop
fstp
and
fs
sub
push
push
xchg
dec
sbb
lahf
(bad)
in
(bad)
mov
sbb
loop
mov
push
fs
ret
ret
movs
or
cwde
mov
lods
ins
loopne
push
push
or
cmps
adc
xchg
leave
pop
(bad)
jge
pop
inc
mov
imul
clc
stc
cwde
out
jns
sbb
out
aaa
add
jae
add
add
mov
movs
cs
outs
add
in
pop
pop
hlt
jne
xchg
mov
movs
fcmovb
loope
or
or
scas
jmp
inc
data16
cdq
fcmovnb
xor
aad
ret
test
mov
cwde
loopne
dec
or
sub
pop
mov
loope
adc
sbb
shr
scas
loope
or
and
fisttp
cdq
loope
cmp
cmp
and
and
or
mov
or
add
hlt
mov
lahf
scas
adc
mov
mov
jmp
cmp
xchg
cmps
mov
sub
inc
daa
js
lock
in
fcom
loopne
in
loopne
in
push
lods
jmp
mov
sbb
mov
sub
in
lock
sbb
push
adc
out
lea
mov
and
push
fwait
ret
or
add
loope
xor
sbb
xor
dec
nop
adc
adc
jle
dec
jne
pop
das
add
cld
test
(bad)
push
sbb
cdq
adc
add
pop
add
retf
jge
sub
add
retf
pusha
add
or
adc
loope
cmp
sahf
jp
inc
mov
push
jmp
imul
fs
mov
scas
pop
clc
sbb
or
adc
icebp
nop
aam
mov
fwait
add
mov
pop
dec
in
mov
dec
pop
pusha
and
pusha
push
xchg
les
or
sbb
and
aam
jecxz
stc
iret
add
arpl
stos
push
shl
shr
test
push
add
inc
mov
and
mov
inc
rcl
ds
cmc
je
sub
push
sub
mov
call
inc
aas
push
xor
adc
(bad)
arpl
pop
(bad)
test
adc
int
ror
gs
push
cmp
daa
gs
dec
mov
out
sahf
sbb
sbb
push
xchg
outs
and
out
std
jg
ficomp
sub
xchg
cmps
pusha
(bad)
xor
mov
bound
xor
inc
dec
cmp
push
pop
add
rcl
idiv
inc
xor
retf
adc
jge
or
xor
push
std
pop
add
jmp
aaa
or
push
into
push
jnp
add
pushf
stos
or
cmp
adc
rcr
repnz
int
push
xchg
inc
es
or
push
fwait
rcr
xchg
shl
lds
jno
loopne
adc
rcl
mov
cmp
ds
jg
hlt
push
mov
sbb
sub
jl
add
jo
add
adc
adc
xor
mov
pop
imul
loopne
in
add
add
mov
das
pushf
lock
(bad)
call
push
inc
sahf
mov
mov
movs
cmp
je
test
cmp
dec
pop
jl
repz
clc
add
lds
je
fld
push
hlt
pop
pushf
gs
fbld
in
xchg
adc
cld
or
sub
cmp
pop
sub
add
cmp
push
adc
mov
ja
ja
stos
rcr
shr
and
test
repnz
pop
mov
mov
jle
(bad)
sub
mov
jge
jl
test
icebp
loopne
inc
movs
add
or
sub
ins
xchg
popw
lea
inc
xchg
xlat
adc
push
nop
jno
adc
fisttp
xchg
leave
push
or
fdivr
push
cmp
push
adc
sti
bound
or
cmp
lahf
es
xor
fidivr
add
cmp
scas
ds
aam
dec
inc
push
xor
popf
or
popf
jmp
sub
dec
ror
pop
pop
lds
(bad)
adc
fstp
push
sahf
cwde
fild
inc
rol
adc
push
cmps
pop
jne
jbe
leave
cmps
adc
xchg
push
mov
sbb
or
mov
adc
js
or
sub
add
sbb
mov
xor
jae
or
fld
add
add
mov
aas
lods
ror
push
inc
loopne
retf
or
sbb
pop
lds
je
inc
or
inc
mov
cmp
aam
adc
outs
cdq
mov
call
test
(bad)
xchg
repnz
int3
out
xchg
cmp
aas
mov
mov
push
jl
fucom
add
add
push
sub
ds
sahf
cmp
fisttp
gs
call
imul
ins
leave
call
add
lods
jo
push
sub
jno
test
daa
mov
ror
push
push
mov
clc
sbb
xchg
mov
and
pop
or
mov
jno
add
ret
and
xchg
in
sub
mov
xor
pushf
aad
popa
lods
xchg
test
push
out
hlt
mov
shr
inc
shl
push
and
and
mov
sbb
adc
pop
push
or
dec
shl
repz
dec
xchg
inc
pop
std
push
and
cmp
sbb
or
sub
dec
add
clc
push
jae
push
cmp
xlat
cs
add
jmp
jo
sbb
mov
xchg
packssdw
dec
push
inc
push
nop
fwait
les
pop
enter
pop
sbb
repz
call
cmp
pushw
push
and
xchg
push
rcr
push
jmp
sbb
pop
test
mov
mov
loop
(bad)
or
pop
push
inc
pop
jo
sbb
outs
mov
adc
push
out
iret
jge
mov
mov
sbb
push
cmps
mov
scas
cmp
fcomp
sar
pop
mov
push
mov
mov
adc
pop
adc
dec
(bad)
scas
or
out
dec
scas
hlt
ret
pusha
dec
ret
loop
or
mov
push
push
imul
scas
das
int3
inc
mov
inc
xor
cmp
pop
movs
cli
fnstsw
jo
jae
jecxz
inc
pushf
xor
in
outs
jmp
push
cmp
(bad)
push
sub
sub
push
add
push
fild
mov
outs
ins
mov
add
sahf
js
dec
rcl
push
inc
cmps
pop
enter
cmp
cdq
leave
pop
xchg
test
adc
fmul
and
dec
push
outs
fdiv
leave
mov
lods
ss
pop
int3
jne
pop
adc
rcr
cld
shr
xchg
dec
in
enter
xor
mov
or
jb
fld
ret
xor
das
xchg
mov
inc
pop
and
sahf
loopne
data16
add
in
enter
add
(bad)
add
push
arpl
loopne
push
add
inc
add
shl
adc
imul
xlat
and
retf
fimul
mov
push
add
rol
inc
out
aaa
div
cmp
pop
jb
or
pop
arpl
fiadd
add
jmp
push
shl
pusha
push
enter
mov
stos
ret
and
push
stos
dec
cmp
pop
sbb
xchg
fdiv
add
nop
sub
cmps
rcl
jg
adc
fisttp
ja
cld
push
push
dec
push
inc
pusha
or
jne
test
sar
mov
fwait
cmp
add
mov
rcr
rol
add
pop
cmp
enter
or
movs
xchg
mov
hlt
mov
pop
test
cld
jp
stos
ss
dec
sbb
add
push
adc
test
xchg
xor
pop
or
mov
ds
movs
fldenv
xchg
pusha
add
add
mov
aas
gs
ret
dec
stos
xor
xchg
retw
gs
fsubr
pop
jmp
adc
retf
sbb
in
fmul
ss
and
dec
(bad)
sub
ins
stos
jmp
mov
push
mov
jecxz
add
add
movs
sub
call
call
adc
mov
ss
mov
push
not
mov
rol
test
or
fs
cmp
pop
pop
dec
cmp
lock
push
push
mov
mov
jnp
ror
or
inc
push
clc
mov
pop
ror
and
jnp
or
rcr
dec
sbb
xchg
movs
lock
add
pop
sub
adc
sahf
jmp
loop
aam
in
loope
sbb
mov
sbb
xchg
sub
(bad)
nop
mov
dec
and
mov
adc
rcl
mov
adc
ret
jno
or
inc
mov
add
xor
and
push
nop
xlat
rol
and
and
xchg
daa
or
add
aam
pop
mov
mov
movs
adc
and
xchg
jns
pop
inc
push
cmc
int
lods
data16
gs
adc
sbb
stos
or
je
sub
cmc
push
add
fisttp
outs
popa
add
push
inc
sbb
gs
push
jae
dec
(bad)
loope
pusha
sahf
mov
cdq
cmp
or
or
retf
sahf
imul
(bad)
imul
shr
push
pop
mov
clc
test
jbe
sub
outs
test
pop
jecxz
inc
jo
ud1
out
retf
dec
jp
loope
pop
add
movs
arpl
jl
loope
lahf
gs
adc
cwde
jl
push
mov
mov
in
icebp
sub
pop
jb
pop
cmp
and
imul
and
in
xchg
adc
and
sbb
or
ins
or
ret
pusha
sub
lds
cmp
ror
shl
js
pop
sbb
call
cmp
jle
mov
lods
cmps
sub
or
jno
test
inc
fs
pusha
xor
mov
dec
sub
cmp
mov
cmp
or
stos
mov
movs
pop
popf
add
es
imul
call
sbb
mov
repnz
(bad)
push
aam
ds
jmp
dec
push
xchg
jo
add
mov
lods
nop/reserved
pop
lea
aaa
pop
dec
cmp
or
cs
cmps
push
out
mov
mov
pop
add
xchg
sahf
add
adc
mov
push
add
xor
jmp
lods
ret
lea
inc
cli
jb
jmp
cmp
add
and
mov
jge
lea
mov
cs
mov
ja
mov
shr
fcom
retf
fld
loopne
sbb
dec
in
scas
dec
mov
adc
xor
dec
xchg
icebp
cmp
popa
add
pop
xchg
aam
xchg
xchg
(bad)
jnp
das
jmp
rcl
inc
sub
adc
mov
or
mov
dec
jmp
scas
push
sbb
lods
dec
sbb
stc
call
pop
out
sahf
out
pushf
mov
mov
stos
enter
hlt
jmp
lods
and
popf
aam
or
and
mov
lods
and
mov
cmp
push
shl
dec
xchg
sub
pop
popa
or
and
push
mov
or
inc
sub
mov
div
xchg
loopne
mov
ror
push
inc
cmp
mov
add
cmps
pop
and
arpl
shl
in
cs
loop
mov
into
cmp
sub
les
out
dec
call
inc
dec
bound
(bad)
dec
pop
and
cmps
adc
popa
sbb
call
mov
div
fcom
mov
add
gs
mov
dec
lock
mov
mov
push
add
push
test
xchg
outs
cmp
inc
imul
fcomi
retf
int
inc
je
test
mov
adc
dec
cdq
pop
add
inc
sbb
jp
or
shl
fdivr
lea
lods
not
iret
cmp
jne
inc
mov
inc
pop
daa
std
or
(bad)
in
adc
xlat
fwait
pop
inc
popf
sbb
adc
xchg
cdq
xchg
scas
shl
imul
pop
lock
mov
mov
add
add
jecxz
stos
sbb
add
pop
retf
mov
daa
inc
adc
test
mov
cmp
popa
mov
popa
or
mov
xor
xor
or
xor
std
je
inc
dec
mov
or
sub
inc
mov
bound
push
and
pop
sub
lods
enter
sub
jle
jmp
scas
dec
ins
cmp
pop
push
adc
and
and
aaa
lods
add
add
call
pop
sbb
push
test
icebp
mov
adc
push
int
mov
pusha
fwait
jbe
pop
shr
test
hlt
inc
push
rcr
mov
fs
loopne
jp
mov
xor
ror
scas
xchg
dec
push
jae
fcomp
fcmovnu
xor
pop
retf
(bad)
push
ret
add
xchg
and
shl
out
sbb
pop
imul
and
mov
sub
psubusw
sbb
ja
rcl
shl
xchg
sub
add
pop
rcl
ror
pop
push
(bad)
sub
and
setno
imul
dec
dec
cs
rol
sub
add
add
fwait
xchg
mov
imul
mov
adc
jmp
out
dec
mov
dec
add
cmps
lea
mov
movs
aam
inc
lock
or
mov
mov
pop
jmp
jne
mov
aas
sahf
lahf
or
dec
movs
jg
movs
sub
lock
pop
add
inc
and
pop
loopne
jmp
movs
outs
sbb
jge
stc
div
mov
inc
mov
jbe
push
rol
stos
ss
call
cmp
je
clc
in
push
test
rol
bound
mov
push
xor
cdq
jecxz
add
xor
xchg
stc
movs
rcl
outs
popa
mov
ins
(bad)
test
les
mov
rol
call
sub
daa
ss
call
or
sub
sti
movs
movs
lods
jo
add
add
add
cmp
push
loope
xor
and
dec
(bad)
es
add
std
jmp
sti
push
add
sti
dec
mov
fmul
aam
push
inc
mov
cdq
loopne
fidiv
sti
loop
dec
cdq
nop
fdiv
push
pop
push
fcom
jbe
mov
aaa
pop
or
adc
add
pop
jbe
inc
shl
add
or
or
xchg
sub
iret
fiadd
xor
mov
ins
imul
push
addr16
bound
out
jge
aad
gs
inc
push
pop
pushf
pushf
neg
imul
imul
dec
ins
sbb
or
mov
or
push
mov
das
jne
inc
ror
imul
das
push
xchg
lock
in
mov
xor
loop
pusha
out
add
inc
addr16
scas
add
sbb
sub
loope
call
pop
push
call
add
in
push
inc
imul
fwait
add
or
call
cmp
mov
(bad)
or
add
dec
ja
mov
gs
dec
loope
jmp
add
sub
les
add
mov
pop
xchg
ret
cmp
cmps
or
bound
inc
ret
retf
les
in
loope
mov
popf
mov
push
fwait
adc
les
out
pop
xchg
test
les
xor
shl
ja
xor
xchg
out
test
add
dec
inc
sbb
mov
loope
test
dec
and
or
dec
sub
jecxz
aam
push
(bad)
loope
inc
stos
add
in
cmc
dec
cmp
lea
add
inc
sbb
stos
stos
xchg
sbb
jl
in
je
sti
jnp
pop
push
loopne
cdq
xor
xchg
dec
pushf
xlat
jge
add
fsub
and
push
pop
pop
mov
bound
adc
mov
or
and
xchg
out
lock
stos
mov
js
xor
jmp
xchg
test
les
xor
xor
adc
inc
pop
or
xlat
ret
xor
and
add
fidivr
push
push
xchg
add
in
jns
xor
inc
stos
mov
sub
xor
mov
pop
xor
jle
mov
lods
and
lock
lahf
mov
ret
icebp
je
retf
cmp
dec
dec
loopne
sbb
ins
jecxz
inc
pop
or
popf
cmp
add
push
leave
push
add
xchg
dec
in
xor
pop
add
in
pop
push
in
and
lods
mov
mov
(bad)
push
jge
add
pop
sahf
out
jns
call
shl
lock
out
in
dec
add
rcr
and
dec
sub
push
cmp
add
dec
pop
les
mov
add
cmp
add
lds
aas
push
adc
sbb
cdq
dec
add
ins
jb
jb
ja
in
xchg
add
lock
mov
inc
outs
sbb
push
jnp
ins
xor
jnp
and
jno
push
movs
daa
add
sbb
mov
push
aas
inc
pop
dec
test
out
mov
mov
dec
pop
loopne
sub
xchg
sti
daa
add
or
test
je
push
xor
mov
add
dec
jne
xor
or
jle
popf
lods
pusha
fwait
mov
sub
mov
jno
xor
popa
add
stc
push
or
fadd
test
daa
jo
sbb
shl
shl
mov
jmp
loopne
add
test
dec
(bad)
fwait
xor
dec
sub
sbb
adc
leave
xchg
call
popf
xchg
fwait
bound
idiv
int3
inc
push
(bad)
xchg
add
(bad)
mov
test
mov
sbb
push
push
sub
mov
mov
mov
inc
cmp
sub
mov
push
arpl
je
or
aaa
push
adc
call
ins
mov
xchg
fstp
test
mov
xchg
mov
fld
nop
sub
push
pop
lea
xchg
dec
fadd
test
push
enter
xor
movs
fld
jle
push
bound
dec
pop
jnp
pushf
and
(bad)
int3
(bad)
push
mov
data16
pusha
lods
sbb
mov
sbb
sbb
xchg
(bad)
sbb
or
or
push
sbb
mov
fs
add
or
fadd
xor
leave
sub
inc
mov
xchg
pop
mov
mov
dec
movs
fs
adc
cmp
sbb
sub
push
sbb
jmp
jnp
dec
or
mov
inc
push
cmp
cld
ret
xor
xchg
ins
(bad)
adc
adc
popf
sti
retf
or
sub
ja
pop
xor
out
(bad)
sbb
push
cmps
loopne
push
xor
in
int3
ficomp
cmp
jmp
iret
cli
cmc
sub
int3
pop
int
aas
sbb
inc
push
je
addr16
mov
xchg
sbb
sbb
and
push
lahf
daa
xchg
or
loope
enter
lock
add
sahf
inc
inc
(bad)
scas
mov
and
push
mov
ins
nop
xlat
and
xor
arpl
jns
loope
jo
outs
(bad)
imul
jae
scas
loopne
cmps
sbb
inc
push
imul
cmp
add
leave
xor
inc
outs
arpl
mov
jb
sbb
inc
call
cmp
std
lods
adc
dec
test
cmp
outs
arpl
aad
cmp
xchg
retf
sbb
jb
loopne
dec
retf
inc
call
pop
call
in
xchg
(bad)
sub
sbb
inc
repz
mov
rcl
or
mov
lahf
retf
mov
sub
push
ret
inc
push
inc
adc
sbb
or
enter
dec
mov
adc
add
inc
fwait
sbb
or
mov
jmp
mov
hlt
push
icebp
or
adc
ss
xchg
frstor
mov
or
inc
sbb
push
imul
inc
xchg
jnp
and
mov
jne
pop
lods
inc
push
int3
pop
enter
add
adc
leave
xor
inc
imul
ins
hlt
shl
loope
clc
ins
fs
push
add
add
mov
add
imul
pop
push
js
mov
sbb
rcl
ret
pop
mov
ret
cmps
mov
pop
push
add
xor
mov
not
mov
es
inc
imul
xor
pop
adc
inc
add
sbb
or
xchg
push
or
jp
adc
cmp
mov
adc
sub
pop
nop
aaa
es
sub
rcr
aas
cmps
add
push
cmp
int
(bad)
mov
pop
and
enter
sub
and
shl
or
cmps
mov
sbb
or
pop
cld
aas
call
push
xor
xchg
movs
aad
cmps
out
pop
add
and
not
test
dec
sub
mov
cmps
std
std
mov
inc
and
aas
add
sbb
sub
add
pop
or
and
nop
push
enter
and
cmp
mov
cli
fsubr
cmp
mov
cs
inc
pop
ins
mov
aas
adc
test
adc
push
js
fstp
add
rcl
ror
fs
pop
or
sub
push
add
cmps
outs
je
add
mov
in
jmp
fxch
aam
imul
fild
xor
sub
iret
push
inc
push
retf
push
fstp
or
add
fcmovnbe
and
mov
pop
in
cmp
int
inc
shl
cmc
or
enter
adc
xchg
rcr
push
stos
xlat
(bad)
or
or
int3
xor
sbb
xchg
daa
in
scas
dec
dec
xchg
sbb
adc
sub
into
test
arpl
mov
sub
imul
in
push
rol
push
sub
test
ret
shr
push
hlt
jmp
shl
add
dec
ret
push
mov
daa
mov
mov
fnsave
xchg
daa
test
push
and
and
mov
or
imul
mov
or
mov
ds
not
and
shl
ins
pop
(bad)
(bad)
mov
inc
loope
add
add
pushf
sub
ins
out
arpl
mov
outs
and
clc
rcpps
adc
ror
add
mov
pop
jmp
push
add
adc
fsub
sbb
lds
cli
shl
mov
xor
jg
mov
cmps
retf
lea
jle
call
out
loopne
cmp
push
ins
hlt
xchg
loope
mov
xor
lock
adc
push
cmps
push
jmp
cmp
stos
adc
mov
and
push
and
push
and
js
xchg
js
fistp
and
sub
or
(bad)
nop
mov
mov
dec
add
lea
add
or
inc
and
and
pop
add
add
adc
inc
fimul
pop
or
call
pop
adc
push
out
push
mov
sub
jmp
pop
inc
ins
push
(bad)
and
cmp
jbe
add
dec
sbb
sub
xchg
inc
cmp
cmp
and
or
mov
outs
xor
mov
sub
cld
test
fdiv
sbb
or
in
jo
and
jp
and
inc
mov
mov
setne
leave
ds
mov
sub
loope
fiadd
ror
and
inc
jae
in
cmp
or
mov
xor
jmp
push
cmp
cwde
imul
jbe
lods
cmp
xlat
xchg
test
push
push
pop
mov
or
fs
jbe
pop
lods
inc
lods
add
mov
add
cdq
xor
jp
xchg
mov
dec
and
jecxz
sub
fcomp
cmp
test
ret
shl
in
frstor
add
dec
xchg
shl
push
jl
loopne
ror
inc
dec
adc
dec
mov
mov
das
popa
loopne
jecxz
inc
adc
loopne
sub
or
fldenv
mov
movsx
push
inc
dec
fwait
shr
inc
pop
movups
sub
test
fnstsw
sbb
xchg
ret
mov
push
mov
xlat
jecxz
sub
inc
add
popf
and
sbb
push
sbb
xchg
inc
fidivr
rol
jle
jmp
inc
ja
inc
cmp
lahf
dec
adc
mov
test
add
xchg
test
add
jo
(bad)
pop
xchg
test
jae
adc
cmp
mov
add
mov
inc
in
inc
jp
inc
inc
inc
jle
sbb
pop
xchg
icebp
or
addr16
cwde
cdq
cld
jno
call
sbb
in
or
js
mov
lea
add
fs
xor
push
sbb
sub
add
popa
test
sub
jne
ret
sub
sub
and
cmp
jl
mov
sbb
cmps
dec
mov
stc
popa
ret
je
fiadd
add
or
fs
inc
mov
cmp
inc
rcl
push
addr16
pop
pop
lds
push
jmp
fmul
add
cdq
inc
inc
jl
in
ins
or
and
(bad)
pop
adc
and
dec
cmc
pop
jl
jnp
shr
loope
xchg
pop
jmp
push
mov
popa
in
push
test
pop
sbb
js
cmp
popa
fst
popa
mov
xchg
add
adc
mov
lock
aam
repnz
popa
std
xchg
add
mov
mov
or
or
in
xor
into
mov
paddb
pusha
mov
addr16
call
outs
fwait
and
push
xor
mov
sbb
add
xchg
inc
cmp
icebp
add
or
les
fild
sub
mov
sbb
push
xor
test
adc
add
ret
hlt
cmp
outs
xchg
adc
mov
pop
xor
xor
xchg
jo
jge
cmps
mov
movs
enter
sahf
jb
movs
(bad)
jg
or
dec
in
rol
loope
enter
xor
sub
out
or
in
lea
and
(bad)
pop
jmp
xor
lock
xlat
dec
cmp
pop
push
ds
push
iret
add
in
call
in
sbb
dec
sub
push
inc
test
test
push
dec
push
inc
mov
idiv
mov
lea
in
es
or
mov
mov
pop
and
outs
ret
sbb
push
cmps
pop
push
mov
sahf
shr
icebp
add
push
adc
sub
dec
mov
pop
mov
or
nop
icebp
push
add
add
movs
lods
mov
pusha
fadd
sub
sbb
test
in
and
call
lahf
scas
fsubrp
mov
or
and
lock
adc
push
sub
sub
adc
push
ds
push
mov
mov
dec
pop
xor
movs
loope
or
or
jmp
popf
cmps
cmp
xchg
jo
mov
push
pusha
add
bound
adc
push
js
sub
dec
pop
xor
add
call
push
fcom
mov
xor
loopne
sbb
ror
out
(bad)
xor
aam
aam
push
pusha
pusha
push
sub
in
mov
and
dec
or
sub
adc
bound
xor
pop
movs
push
push
movs
cwde
sbb
and
call
jecxz
inc
repz
ins
jne
or
mul
ins
and
jl
sbb
test
push
fstp
inc
mov
scas
or
movs
(bad)
xor
sbb
out
add
rol
pop
inc
adc
sbb
and
rep
jp
sbb
test
es
test
cmp
adc
or
enter
or
cdq
repnz
fisubr
movs
mov
fst
pop
add
push
loope
mov
fisttp
ins
mov
adc
mov
and
or
xor
(bad)
sbb
mov
inc
push
and
mov
lock
jbe
fiadd
das
test
add
fwait
push
mov
jmp
mov
and
ss
dec
shl
aas
inc
loope
fldcw
or
jmp
sub
and
int3
scas
push
or
out
xor
and
fsub
lock
fcmovu
and
dec
push
cmp
fimul
push
inc
cmps
hlt
cmp
jle
mov
sub
mov
push
clc
and
add
ds
jle
mov
add
jo
ficom
sub
stos
sub
and
add
inc
jmp
xor
pop
clc
aaa
cmp
lods
cmps
cmp
jno
out
or
add
pop
push
adc
mov
sub
jns
test
cmp
dec
sub
fcmovbe
xchg
sub
loopne
xor
mov
xor
cmp
mov
mov
sub
sub
push
or
retf
cld
stos
or
lods
push
fcomp
xchg
rol
sub
in
je
and
sub
xor
popa
inc
mov
push
adc
dec
or
pop
pmulhuw
inc
add
loop
cs
jns
pop
inc
add
sub
xchg
mov
pop
add
jecxz
loop
inc
fdivr
push
mov
adc
push
adc
xor
push
adc
jno
jmp
ret
xchg
xchg
and
sub
shl
or
jae
cmp
je
or
push
and
iret
test
adc
add
and
fs
addr16
test
pandn
inc
cld
imul
cmp
scas
je
neg
pusha
mov
inc
xchg
xor
ss
inc
sub
mov
mov
or
push
mov
sub
ret
push
aaa
push
pop
(bad)
dec
in
les
test
pop
push
mov
es
dec
cmps
jbe
jge
push
aam
aas
pop
push
xchg
dec
push
jmp
lods
ss
popf
inc
mov
adc
(bad)
push
mov
jns
je
inc
or
popa
push
xchg
imul
jp
push
inc
xchg
rcr
js
dec
pop
out
xchg
push
mov
rcl
not
xor
add
cmp
or
call
cmp
lock
sub
mov
sub
call
in
cmp
mov
pushf
or
test
mov
(bad)
sar
xor
dec
js
cmp
jne
and
or
xchg
popf
mov
jno
jmp
cmp
mov
adc
adc
or
push
push
ja
and
lods
clc
push
mov
xor
fcmove
add
ret
pusha
or
ds
add
xor
xor
je
and
mov
push
or
and
pushf
push
sahf
fs
imul
stos
adc
or
sbb
jmp
jns
rcl
xor
add
cmp
adc
(bad)
adc
or
sub
sub
call
xchg
add
stos
adc
mov
pop
dec
pop
mov
out
xchg
push
or
xor
repnz
push
sbb
pusha
fisttp
xor
aam
push
ret
sbb
mov
mov
outs
lods
xchg
loope
pop
sub
mov
mov
out
fs
mov
cmc
out
ret
mov
jle
in
jl
dec
cmp
sbb
push
pop
mov
pusha
mov
inc
adc
data16
ror
sbb
mov
lods
movs
jb
add
xchg
dec
in
sub
push
add
add
fwait
push
call
aaa
test
loopne
ins
loopne
repnz
loope
lahf
adc
cmp
imul
out
in
add
mov
sbb
inc
cmp
clc
dec
and
or
push
add
ins
pop
shl
jo
cmp
sbb
mov
cld
leave
movs
add
xchg
fisub
xlat
je
add
nop
mov
gs
pop
aam
sub
inc
inc
mov
inc
push
or
fs
pusha
adc
mov
dec
shr
outs
mov
test
dec
and
call
in
ret
jmp
inc
sahf
aas
movzx
jbe
adc
fimul
test
pop
xchg
add
dec
and
dec
xor
xor
inc
retf
add
pop
xchg
je
or
adc
mov
(bad)
fs
popf
jo
push
adc
inc
mov
xchg
push
ds
push
mov
xchg
mov
jns
mov
mov
or
xchg
and
xchg
push
cmp
sbb
dec
inc
(bad)
xor
xchg
ret
lea
cld
ret
add
add
in
ja
stos
popf
push
rcl
and
pop
sbb
inc
ret
inc
mov
jmp
inc
or
pop
loope
push
lea
inc
dec
push
lds
dec
inc
loopne
call
test
das
inc
pusha
xchg
stos
add
clc
mov
add
jbe
pop
adc
bound
fwait
mov
pop
ror
sbb
iret
leave
xadd
sub
mov
sub
or
pop
add
xchg
sbb
jns
std
ret
fist
icebp
xor
mov
or
inc
cmp
xor
dec
pop
sub
xchg
mov
int
push
mov
inc
or
test
icebp
sbb
mov
or
sar
push
sar
push
into
iret
jnp
in
push
test
clc
push
mov
cmp
mov
inc
or
or
(bad)
movs
mov
add
pop
xchg
nop
jmp
jb
inc
fadd
test
rol
jo
inc
cld
frstor
imul
dec
ret
adc
in
call
sub
jns
aad
lock
add
mov
outs
in
push
mov
adc
jp
inc
xchg
adc
cmps
or
dec
inc
ret
call
fdivr
adc
ss
adc
pop
jne
pop
xor
sub
inc
daa
movs
dec
push
mov
ds
adc
pop
xor
sbb
adc
add
pop
sbb
sbb
push
imul
(bad)
and
xor
and
mov
pushw
sbb
dec
mov
mov
or
movs
dec
fwait
inc
mov
hlt
(bad)
pop
mov
inc
sub
sbb
dec
cmp
fld
xchg
add
inc
loope
nop
add
(bad)
jle
pop
xor
sbb
sub
mov
jae
jns
mov
dec
jmp
pop
retf
movs
ret
add
lods
leave
ret
inc
push
xor
mov
hlt
cwde
cmp
mov
rol
xchg
jne
mov
push
mov
push
add
add
fnstcw
popa
xchg
xchg
aam
hlt
jo
sbb
mov
lea
xchg
cmp
jg
je
sbb
push
adc
cmps
jmp
ja
inc
(bad)
out
imul
jg
fcmove
cmp
iret
cmovnp
in
sbb
in
or
in
add
pop
shr
lock
push
mov
pop
jg
shr
scas
cwde
popa
or
and
pop
ret
jae
cwde
dec
xor
rcl
shl
sbb
adc
xor
adc
sar
or
mov
push
je
mov
out
enter
loope
call
jno
arpl
rcl
fcomp
add
inc
push
xor
add
sti
hlt
test
sbb
fdiv
or
popf
fs
push
and
and
inc
test
adc
sub
ret
xor
ret
sub
out
adc
rcl
xchg
jne
adc
xor
lods
loopne
inc
pushf
inc
jo
lea
and
dec
(bad)
dec
add
ret
hlt
mov
pop
pop
aas
sbb
sahf
popa
pop
movs
fldenv
jmp
pop
dec
mov
int
mov
mov
inc
jge
cld
inc
nop
es
(bad)
sub
jge
and
sbb
jo
add
test
dec
adc
and
push
dec
inc
xchg
shl
cdq
cmp
cld
and
cmp
inc
mov
push
fstp
mov
cmp
int3
and
outs
ins
add
pop
je
loope
add
cmp
add
inc
stos
call
test
push
push
pop
or
fistp
daa
clc
test
test
loopne
sub
lods
hlt
add
sbb
lods
and
jl
pop
daa
hlt
xchg
ror
push
movs
mov
xlat
shl
loope
mov
or
fwait
pusha
pop
ss
adc
int3
sbb
fadd
arpl
movs
add
jo
stos
jmp
xor
scas
mov
mov
pop
and
inc
adc
mov
sub
adc
or
les
xor
js
mov
add
mov
mov
sub
xor
xchg
dec
in
push
mov
cmp
dec
and
leave
xor
dec
or
in
fidiv
jb
jmp
push
dec
loopne
leave
mov
dec
clc
and
jge
xchg
dec
jnp
les
cmp
lock
call
js
sub
or
pop
dec
or
sub
adc
shl
in
sub
xor
and
adc
push
lea
div
or
push
jg
test
add
sbb
fcom
jmp
clc
or
inc
sbb
rol
adc
dec
arpl
mov
dec
add
clc
popa
push
or
jbe
add
xor
jmp
mov
jp
xchg
inc
push
dec
jp
push
push
sbb
or
mov
or
xchg
mov
xor
rol
retf
jg
mov
les
pop
xchg
bound
ja
sbb
push
jnp
mov
push
cmp
jbe
xor
push
xchg
bound
pop
scas
rcr
push
pop
nop
adc
(bad)
ret
inc
ret
inc
lea
sub
fistp
imul
rcr
je
ficom
adc
push
jo
lods
add
ror
sub
push
cmp
and
ret
push
adc
xlat
pop
or
(bad)
(bad)
mov
es
dec
and
shr
dec
sbb
mov
test
jl
sahf
push
sbb
inc
push
es
push
inc
and
dec
and
add
pop
mov
sub
and
mov
sbb
or
sar
add
in
(bad)
sbb
adc
je
xchg
cmp
mov
les
icebp
dec
ret
retf
or
cmps
sbb
push
(bad)
aas
and
xchg
ret
xchg
add
xchg
aad
jae
out
mov
ret
jle
dec
and
call
(bad)
or
and
inc
cmp
cmp
fisttp
xor
fs
das
cmp
cmps
int3
inc
sub
loope
jmp
ss
or
mov
and
or
cmp
lock
pop
pop
in
add
fdivr
sbb
mov
das
call
sbb
mov
mov
adc
mov
dec
mov
clc
mov
and
adc
inc
leave
inc
imul
sbb
in
xor
clc
or
cmp
out
push
xchg
xor
pop
(bad)
or
xchg
outs
push
ins
ret
xor
sub
or
imul
push
push
jbe
in
dec
xor
push
pop
fdiv
clc
dec
push
in
sar
add
in
rol
inc
stc
or
shl
sbb
sub
or
(bad)
and
mov
mov
je
cld
das
nop
mov
not
and
push
sbb
push
repnz
add
pusha
add
push
popf
jb
pop
add
pop
or
in
call
cmp
fsub
inc
xchg
pop
mov
add
xlat
sbb
dec
(bad)
mov
or
clc
std
or
and
fild
shufps
mov
and
in
xor
shr
movs
push
jno
fs
sub
pusha
dec
sub
bound
sub
mov
call
int3
fcom
pop
cmps
cmp
inc
icebp
loop
push
cli
jl
cli
test
inc
sub
jae
mov
add
adc
mov
sub
les
push
or
jle
sbb
adc
or
mov
pop
pushf
mov
xor
xchg
lods
cmp
(bad)
fldcw
mov
xchg
stos
inc
inc
lahf
and
shl
rcl
sti
push
ins
adc
movs
adc
imul
stos
or
push
jge
fisubr
lods
fldcw
fcom
int
nop
jne
scas
jo
(bad)
dec
(bad)
dec
ins
cmp
cmp
adc
jb
(bad)
pop
add
clc
ins
into
sti
jmp
xor
xor
cwde
jle
cmp
cmp
iret
je
sar
or
arpl
push
mov
enter
fs
dec
adc
or
pop
cvtpi2ps
mov
sbb
push
sbb
iret
xor
or
mov
arpl
daa
sub
xor
cmp
hlt
sbb
jne
xchg
pop
jnp
push
inc
and
push
jmp
imul
adc
ret
add
xchg
push
add
pop
sub
xor
or
loop
jg
add
pop
(bad)
aaa
in
ins
add
push
and
pop
fstp
jmp
pop
fnstsw
mov
enter
adc
sbb
cld
fstp
or
cmps
sub
pop
jb
push
sbb
out
mov
outs
inc
retf
fcmovnbe
xor
add
test
mov
and
or
sahf
icebp
loopne
pop
icebp
jmp
mov
xor
movs
sub
pusha
and
sub
sahf
xchg
aas
xchg
sbb
mov
or
or
and
mov
pusha
mov
inc
cdq
repnz
push
lahf
xor
adc
aam
jmp
pop
xor
inc
call
jo
jmp
mov
in
inc
les
(bad)
sbb
adc
clc
add
cmps
mov
nop
or
push
xor
add
dec
test
and
test
mov
mov
jo
popa
(bad)
enter
jns
lea
out
repz
adc
sub
(bad)
int
mov
dec
push
add
jmp
fdivrp
ret
outs
ficomp
scas
ds
jmp
pop
jmp
imul
push
mov
mov
pop
and
jmp
xchg
cs
or
pop
dec
ins
or
dec
loope
or
lahf
xor
ins
lahf
xor
or
test
arpl
inc
or
or
sbb
or
or
int3
popa
xor
ret
and
dec
adc
test
or
bound
(bad)
test
and
jmp
mov
push
or
add
sbb
mov
sbb
ret
mov
or
ja
lea
fidiv
inc
pusha
push
out
imul
in
outs
jb
fild
mov
repnz
enter
jnp
add
nop
inc
push
pop
adc
push
xchg
mov
push
imul
dec
jno
test
and
mov
mov
inc
(bad)
mov
add
mov
rcl
js
jo
jb
inc
dec
inc
test
xor
mov
fwait
test
push
mov
and
div
or
pop
xchg
jo
add
aam
add
cli
dec
shr
(bad)
pop
sbb
push
or
xor
push
adc
shr
movs
adc
and
push
sub
sub
adc
es
sub
cmps
add
jne
mov
or
add
rcl
push
mov
adc
loopne
xor
std
aaa
push
adc
leave
xor
sub
adc
out
mov
push
fcmovnb
outs
adc
dec
pusha
inc
loope
call
or
leave
rcl
xchg
add
sub
mov
enter
sub
not
lods
xchg
dec
leave
push
mov
imul
adc
mov
push
jno
or
imul
cmp
sbb
jmp
cmp
mov
or
sbb
in
pop
fs
dec
and
add
jae
jecxz
(bad)
jne
inc
pop
mov
dec
sub
fwait
imul
xchg
xor
sbb
imul
bound
cdq
shl
in
jle
dec
sbb
inc
and
inc
adc
xchg
sbb
xchg
push
mul
ss
(bad)
loopne
sub
mov
push
retf
inc
adc
cld
out
and
push
push
mov
ret
and
mov
mov
aaa
push
mov
pop
ins
pop
cmp
jmp
inc
adc
and
or
test
sub
jo
jmp
out
and
or
test
xor
jb
cmps
adc
push
add
add
loopne
push
cmp
xor
mov
pop
sub
jl
sbb
and
enter
rol
mov
adc
pop
inc
inc
mov
jnp
lea
daa
mov
movs
sub
aam
mov
dec
add
add
push
pop
xor
ret
mov
enter
add
(bad)
push
push
and
das
cmp
push
je
sub
push
aaa
push
add
icebp
icebp
into
sub
sub
cmp
mov
stos
sub
push
or
jne
lods
and
in
add
jnp
(bad)
or
jns
hlt
mov
popf
push
or
or
enter
pop
jmp
sbb
nop
mov
mov
mov
add
jp
and
std
xor
add
rcl
fdivr
fcomp
(bad)
shl
pop
jo
jmp
sub
dec
sbb
(bad)
je
cmp
push
in
cmp
fs
sbb
push
fistp
push
mov
bound
mov
jecxz
push
cmp
push
adc
cmp
and
inc
fisttp
or
aam
push
push
cs
adc
sahf
cs
or
jmp
and
add
adc
xchg
mov
push
xor
loopne
xchg
retf
mov
enter
inc
inc
rcr
xlat
xor
sbb
jmp
inc
push
adc
or
ds
aas
test
jmp
push
push
mov
inc
jo
pop
fisttp
mov
and
pushf
mov
mov
ins
cmps
push
cs
aam
ror
fadd
imul
pop
mov
adc
and
jle
cwde
mov
adc
mov
inc
sbb
mov
xor
add
sbb
dec
mov
les
inc
xchg
movs
mov
fiadd
sti
inc
jb
pop
push
ins
mov
sub
in
(bad)
(bad)
cwde
inc
xor
scas
in
jnp
mov
xchg
stc
xor
xor
cmp
jns
mov
xor
into
sbb
and
out
sbb
adc
xor
enter
inc
push
bound
cmps
hlt
shr
adc
daa
mov
or
rcr
dec
popa
push
retf
rol
push
jle
lock
repnz
mov
push
push
dec
pop
and
retf
xchg
(bad)
cld
into
ror
mov
add
push
or
sbb
pushf
sbb
rcr
xor
jb
pop
mov
jmp
pop
sahf
shl
and
sbb
add
daa
popa
stos
aas
push
xor
cmp
dec
adc
adc
fsubr
sbb
dec
retf
es
fnstcw
xor
and
int3
clc
and
adc
mov
ins
adc
adc
js
mov
jne
imul
sub
jne
push
mov
aaa
pop
and
cmp
fisttp
xchg
sbb
mov
xchg
sbb
sbb
pop
mov
jp
and
test
adc
jne
scas
shr
scas
fcom
dec
xchg
push
sar
ficomp
mov
pushf
push
inc
lods
popa
(bad)
cs
sar
adc
inc
inc
pop
jl
mov
rol
or
or
cmc
sar
mov
(bad)
mov
and
fild
jae
scas
add
lods
or
xor
lock
fistp
mov
pusha
ret
add
mov
ins
cmps
loopne
pop
outs
in
ins
jl
pop
mov
adc
in
add
call
xchg
ss
pop
or
in
pop
int3
push
dec
loopne
bnd
add
inc
jmp
jl
inc
push
push
push
stc
stc
arpl
inc
xor
add
dec
push
dec
jge
pop
jle
sub
sbb
pop
cli
jae
cmp
cwde
je
lods
xlat
and
lea
dec
rol
inc
or
or
pop
in
test
push
inc
add
push
sub
pusha
and
int
mov
sbb
imul
push
scas
fstp
cmc
iret
repnz
or
jecxz
mov
mov
and
and
jne
or
push
fs
dec
adc
pop
push
(bad)
jo
fidivr
add
or
inc
add
inc
or
add
into
fwait
adc
jmp
loopne
mov
push
adc
pop
add
xchg
imul
test
pop
mov
test
jns
adc
ret
retf
sbb
inc
inc
push
sub
xor
fs
sub
stos
sbb
or
dec
or
ja
cmps
xor
dec
ss
or
je
ds
mov
call
imul
mov
add
and
pop
mov
add
push
shl
push
adc
jecxz
push
cwde
aas
loope
mov
shl
adc
xchg
lds
add
mov
in
add
cld
movs
adc
pop
cmp
push
jo
cmp
xor
add
call
xor
push
cmp
or
js
add
xor
pop
fcomp
jno
add
les
js
mov
movs
pop
pop
outs
push
xlat
sbb
aam
jp
clc
daa
dec
jp
jmp
popa
jmp
mov
push
dec
jnp
in
inc
sbb
and
dec
dec
push
or
mov
adc
xchg
pushf
iret
stos
shr
push
dec
int3
xor
mov
push
mov
sbb
inc
or
pop
movs
ret
out
mov
add
scas
shl
xor
jne
iret
adc
cmp
dec
jle
xchg
loope
mov
cmp
dec
xor
inc
imul
xchg
and
hlt
mov
lods
and
xchg
loopne
adc
out
mov
mov
adc
jmp
xchg
jo
add
call
xchg
ficomp
jbe
sbb
pop
or
adc
mov
add
sbb
push
xor
sub
not
(bad)
test
pop
nop
test
test
fiadd
mov
add
je
ds
inc
movs
or
or
cmp
jle
adc
dec
mov
enter
add
das
sar
sbb
jl
sbb
popa
inc
jo
jmp
mov
or
adc
dec
sbb
jge
dec
adc
mov
and
ficom
inc
test
jne
inc
lock
xchg
add
push
leave
pop
and
scas
dec
add
ror
outs
dec
mov
pop
sti
add
fsubr
fwait
mov
cmp
cmps
push
inc
inc
xor
push
jae
jbe
or
jo
icebp
(bad)
loop
lea
sub
jmp
or
movs
mov
(bad)
nop
xchg
xchg
adc
dec
cmp
pop
movs
mov
std
mov
(bad)
adc
cmp
test
or
xchg
stc
xchg
or
push
hlt
inc
push
or
or
add
adc
jae
jo
dec
fild
ins
jmp
push
lock
or
adc
xchg
or
scas
aad
and
xchg
std
nop
push
pop
leave
xor
xor
and
scas
dec
mov
ret
js
dec
fdiv
xchg
pusha
add
repz
arpl
add
ins
pop
std
jg
lea
sbb
or
pop
mov
mov
sti
fidiv
adc
xchg
push
mov
mov
pop
dec
mov
sub
adc
jge
add
mov
pop
dec
sar
cmp
push
lock
inc
mov
pop
(bad)
fdivr
aam
push
pushf
mov
js
xor
mov
sub
sbb
dec
sub
xchg
adc
bound
in
test
je
ds
sub
call
in
xchg
sub
push
sbb
dec
lods
sbb
sub
push
push
stos
rcl
int3
int3
dec
pushf
test
pop
rol
add
(bad)
sub
retf
(bad)
sbb
push
sub
clc
cmps
ret
adc
jo
ror
dec
fadd
aam
out
push
aad
(bad)
and
cmps
sub
xchg
sub
fld
and
fsubr
xor
sbb
mov
sbb
test
ins
mov
test
pop
(bad)
sub
jnp
icebp
pop
jae
stos
aam
cmp
pop
pusha
jns
add
pop
js
loop
or
push
adc
adc
fcmovb
jle
leave
jbe
rol
into
out
add
xor
pop
cmp
dec
pop
dec
fmulp
frstor
shl
imul
push
ret
xor
and
rcl
adc
lock
and
inc
(bad)
jae
add
mov
cmps
test
sbb
inc
mov
xor
mov
pop
push
scas
add
push
clc
test
jns
pop
or
pop
cmp
push
mov
pusha
fadd
in
sub
xor
call
out
fidivr
mov
mov
popf
mov
cwde
movs
xchg
pop
pop
mov
add
add
pop
pop
add
mov
mov
pop
add
add
cmps
es
test
loopne
mov
cmp
aas
ins
push
add
in
or
test
push
cmp
push
dec
mov
fild
and
push
sub
jnp
mov
dec
mov
pop
xor
(bad)
sub
movs
bound
mov
add
shl
loopne
fidivr
sbb
xor
inc
ror
and
add
inc
je
ja
dec
rcr
add
aam
movs
movs
mov
pop
ficomp
sub
sub
inc
push
jbe
jnp
call
jge
sbb
or
sbb
rcr
add
push
push
rcr
dec
outs
and
fst
adc
popa
sbb
or
js
add
mov
test
xchg
fnstenv
dec
mov
lea
loop
jnp
jne
pop
jmp
leave
sbb
add
push
mov
sub
adc
pop
int
xor
jo
and
movs
push
loopne
ins
push
les
ret
pop
outs
stos
jb
fcom
jbe
or
jb
push
out
jl
push
xor
clc
into
retf
and
out
jne
xor
movs
mov
dec
sub
ins
xor
mov
sbb
jmp
loopne
inc
movs
out
xor
pop
mov
pop
sub
jnp
pop
daa
nop
ret
(bad)
sub
jmp
push
mov
sub
sub
or
dec
shr
lock
push
push
mov
or
adc
test
mov
xor
push
sub
xchg
(bad)
repnz
ss
inc
inc
push
(bad)
or
pop
(bad)
lea
nop
cmp
loopne
(bad)
push
dec
les
cmp
test
out
jmp
sbb
je
pop
pop
cmp
inc
inc
icebp
inc
inc
and
ficomp
push
push
sbb
fist
sub
add
xor
or
fcom
sub
push
push
or
and
icebp
or
cdq
rcr
lods
or
jge
arpl
inc
add
inc
shl
pushw
test
lea
gs
cmp
je
and
fmul
add
std
xchg
xchg
popa
jo
mov
push
cmp
or
int
cmc
gs
mov
pop
ret
shr
mov
lods
pusha
prefetch
in
jbe
test
adc
add
in
xchg
add
pop
lea
leave
shl
jp
fistp
xor
adc
cdq
and
jno
enter
push
dec
mov
push
jg
jbe
in
add
aam
out
lds
pop
je
stos
sub
and
push
inc
cmp
sbb
adc
push
call
aad
pop
pop
or
and
daa
out
add
psubsw
jmp
shr
inc
jmp
sub
add
ror
xor
jp
ret
mov
dec
(bad)
inc
mov
add
and
mov
push
pop
add
cmp
add
jp
or
add
add
push
jns
das
add
add
pop
sbb
pop
push
sub
repnz
sbb
xor
jbe
movs
fld
sbb
xor
daa
adc
gs
mov
hlt
sbb
pop
cli
or
sub
push
pop
call
adc
and
jmp
je
adc
retf
push
sub
outs
nop
dec
pop
sbb
ret
pop
je
jbe
lahf
retf
mov
push
or
and
or
adc
mov
jae
push
adc
pop
adc
in
xchg
cmp
pushf
scas
dec
sar
push
dec
add
or
xchg
push
and
add
(bad)
mov
jne
mov
jb
push
xor
inc
aam
imul
clc
int3
in
jb
adc
repz
aam
lahf
shr
les
shl
fsub
add
mov
dec
inc
mov
fisub
cs
pushf
pshufw
pop
into
and
out
sub
adc
inc
push
sub
pop
cmp
mov
and
adc
pop
mov
jns
xor
outs
pop
pop
xchg
adc
pop
pop
(bad)
dec
jae
xchg
push
add
jnp
pop
and
movs
and
test
sbb
call
test
sub
and
ret
adc
cmp
and
in
test
mov
xchg
or
cmp
mov
inc
or
cmp
jne
loope
pop
mov
push
cmp
inc
cmp
lea
call
inc
add
pop
add
fnstenv
cmp
test
imul
and
pop
mov
test
es
test
xor
outs
mov
pushf
push
cli
mov
mov
rcl
cmp
sub
adc
and
adc
add
xor
mov
pop
fdiv
inc
pop
ficom
cmp
mov
daa
stos
push
sub
je
or
clc
or
jle
mov
lods
inc
mov
jl
jb
aam
add
adc
push
cmp
xchg
lods
mov
enter
cmp
jle
movs
xor
pop
adc
dec
or
sub
push
xchg
cmp
jl
dec
sub
sbb
adc
lock
cmp
add
clc
xchg
add
dec
or
jmp
inc
pushf
xor
add
push
out
shl
pop
sbb
add
inc
into
push
ins
bndldx
cli
sub
out
inc
push
cld
mov
and
retf
cmovl
and
and
stos
js
jb
(bad)
sub
and
jbe
out
mov
shl
in
mov
and
lock
leave
and
imul
fld
mov
push
and
adc
je
ror
inc
mov
fdivr
les
push
and
fdivr
call
arpl
add
cwde
mov
or
mov
add
push
test
and
dec
mov
fst
mov
xchg
jae
pusha
pop
push
or
(bad)
retf
or
or
add
inc
addr16
jb
xlat
mov
jmp
sbb
jo
cli
push
(bad)
fadd
push
lea
cmp
adc
xor
in
sbb
loopne
jl
cmp
push
or
add
adc
stos
add
hlt
push
shl
jo
sbb
and
js
or
shr
shl
adc
sbb
mov
and
sbb
jb
or
xchg
adc
pop
adc
movs
mul
add
stos
mov
and
sbb
dec
call
push
inc
mov
and
ins
loope
jb
hlt
jb
xchg
add
arpl
adc
call
outs
(bad)
shl
call
test
test
shl
sub
sub
inc
or
pop
shl
add
cmps
push
push
test
xchg
push
fcom
and
jp
mul
sbb
push
or
sbb
xchg
add
add
xchg
sub
nop
aas
ds
movs
pop
aaa
mov
dec
fsub
cmp
sbb
or
ins
outs
jo
shr
cmp
pusha
dec
and
add
imul
dec
dec
in
add
fnsave
movs
shl
ret
or
stos
adc
fsub
xchg
test
fwait
call
and
mov
sub
scas
mov
xchg
mov
lea
loope
leave
inc
(bad)
cli
dec
and
xchg
add
gs
adc
or
cmp
(bad)
push
jbe
clc
sbb
cld
lea
and
xor
pushf
rol
sub
adc
or
push
xor
push
nop
rol
push
or
lods
xchg
adc
call
jnp
mov
pop
retf
scas
add
sti
or
dec
adc
mov
aam
test
jecxz
add
add
cmp
rol
push
adc
xchg
lea
dec
adc
sub
xor
push
shl
push
adc
cli
and
pop
dec
jne
push
dec
movs
mov
rcr
push
sahf
retf
(bad)
adc
das
or
(bad)
mov
pop
not
and
xor
adc
or
mov
push
mov
and
sar
aam
ret
daa
pop
mov
inc
fdivr
mov
push
bound
call
adc
out
arpl
fistp
rol
mov
jb
jne
jp
lock
setb
retf
pop
xchg
leave
test
sbb
push
rol
xor
xchg
shl
push
jb
xchg
js
cwde
inc
or
sbb
pushf
inc
adc
or
lea
rcl
push
xor
sbb
out
inc
adc
jle
add
xchg
mov
fld
jp
sub
inc
mov
cmp
or
cmp
push
in
lods
loopne
mov
jl
fstp
icebp
pop
fidivr
add
std
push
xor
xor
in
retf
and
cmp
add
and
je
jne
xor
add
inc
sbb
jbe
inc
push
mov
aaa
inc
adc
pop
push
test
ss
out
leave
movs
cmps
pusha
cmp
mov
lahf
cmp
xchg
inc
ror
loopne
pop
repnz
or
sbb
pop
ret
dec
mov
aad
mov
push
jnp
les
aad
adc
and
jns
rcr
sahf
idiv
ins
xchg
add
and
push
adc
sbb
adc
mov
out
inc
mov
jno
or
adc
xchg
retf
sbb
mov
xchg
push
jl
jmp
add
add
and
add
movs
pop
mov
mov
mov
ss
xor
sbb
add
dec
jae
push
pop
enter
in
mov
enter
xor
push
out
dec
add
sbb
and
push
pop
and
imul
mov
mov
inc
and
mov
adc
xor
sub
mov
js
mov
xor
add
aas
xor
imul
ins
inc
retf
dec
jecxz
inc
dec
adc
jl
xchg
imul
xor
pop
loope
imul
xor
or
dec
test
in
jo
cmps
mov
jl
test
adc
xchg
mov
daa
rol
(bad)
daa
jo
mov
inc
push
adc
sbb
push
and
sub
sbb
retf
test
adc
and
or
sub
push
sub
mov
adc
aas
test
or
inc
pop
lods
add
into
sub
adc
push
(bad)
sub
dec
cmp
test
outs
in
and
inc
push
sbb
scas
stos
xor
cdq
aad
mov
mov
mov
jmp
xor
mov
cmp
fstp
icebp
pop
cmp
dec
add
ror
clc
xor
mov
ss
mov
add
and
add
inc
add
add
ret
mov
push
cmp
(bad)
int3
or
mov
pop
(bad)
outs
adc
ja
and
leave
sub
icebp
dec
jmp
mov
adc
sub
mov
lods
not
mov
in
pop
mov
idiv
adc
loope
xor
add
inc
jmp
xchg
popa
sub
fdivr
pop
in
sbb
add
ss
adc
test
sahf
jbe
shr
test
es
push
(bad)
cmp
add
pop
cld
and
push
push
leave
call
in
jmp
lea
dec
dec
xchg
repnz
jmp
xchg
add
aam
dec
shr
repz
je
adc
fwait
scas
or
icebp
add
add
out
(bad)
aam
mov
nop
xor
xor
inc
es
pusha
addr16
push
adc
sub
xor
pop
mov
xor
push
add
mov
pcmpeqb
push
push
(bad)
xor
or
test
pop
push
mov
or
or
and
fsubp
out
add
sub
xchg
cmp
adc
jp
add
sbb
sbb
cmp
add
add
sbb
or
das
test
(bad)
fsubr
lods
mov
inc
inc
xchg
nop
lock
leave
sub
adc
xchg
push
push
inc
inc
in
sbb
adc
pusha
adc
adc
cmp
cmp
mov
inc
mov
dec
repz
push
xchg
jmp
or
fld
push
loopne
je
adc
fdivr
add
mov
jno
dec
ret
dec
rcr
iret
xlat
dec
test
adc
jmp
adc
repz
adc
ds
jl
dec
jnp
push
add
das
sub
call
adc
ret
inc
in
mov
and
xlat
repnz
pop
xchg
mov
dec
push
sbb
xchg
push
push
bound
or
sub
fidivr
push
add
add
iret
xchg
or
sbb
lea
daa
fdiv
jb
or
or
add
shr
sub
loopne
add
sbb
sub
cli
aad
inc
clc
je
mov
in
xchg
pop
ret
int
and
mov
cmp
or
loopne
out
jb
pusha
cmps
clc
xor
jne
push
sub
push
test
sub
ret
jbe
sbb
mov
imul
add
fcmovbe
pop
push
add
push
dec
test
or
or
xor
call
ins
jl
stc
add
inc
(bad)
lds
xchg
or
mov
adc
xchg
adc
aam
fild
in
mov
aad
(bad)
call
pop
shl
cmps
sbb
cld
test
bound
jecxz
jo
fidiv
mov
aam
ja
or
nop
cmp
je
shl
push
mov
jge
xor
cmp
push
push
sbb
clc
mov
aam
push
into
pop
pop
add
push
jmp
push
add
and
aad
push
ret
lock
mov
je
mov
stc
jl
push
push
fcom
fxch
fdiv
push
or
fdiv
sub
mov
popa
and
adc
pop
pop
or
mov
lods
ins
ret
xor
xlat
push
dec
retf
adc
rol
mov
ins
push
dec
cmp
xor
add
jle
mov
fs
cli
adc
pop
pop
shl
push
daa
mov
push
(bad)
jne
lods
and
and
out
push
add
add
(bad)
mov
add
push
push
push
out
in
inc
jl
loop
imul
cmp
stc
call
mov
aam
jge
shr
(bad)
mov
daa
mov
add
add
mov
or
call
repz
nop
mov
jecxz
mov
add
dec
push
je
pop
add
jmp
(bad)
jecxz
add
ret
sub
es
movs
add
fidivr
out
xlat
je
cmp
out
mov
cli
or
jo
jmp
sbb
int3
aaa
inc
je
sbb
xor
dec
outs
xchg
loopne
cmp
fdivr
sbb
add
mov
adc
test
mov
pop
aad
or
(bad)
and
mov
(bad)
lahf
ss
xchg
or
cmp
sub
xchg
hlt
mov
mov
pop
movs
sub
pop
adc
jnp
or
popa
outs
and
dec
sbb
inc
test
hlt
push
cmp
dec
jnp
mov
jo
int3
sahf
lods
ror
rol
adc
(bad)
fcom
fsub
gs
call
pop
test
mov
in
push
adc
cmp
xchg
test
and
seta
pop
mov
movs
nop
xor
outs
cmp
or
push
xchg
mov
sbb
hlt
sar
sub
mov
sahf
or
sbb
imul
adc
ret
mov
les
add
sbb
dec
aaa
cmp
and
inc
(bad)
xlat
cwd
push
gs
add
fidivr
ds
and
cmps
pop
add
mov
mov
test
cmp
mov
loop
jne
movs
and
ror
sub
xor
sbb
and
arpl
inc
repz
les
mov
add
add
aaa
xor
inc
daa
test
adc
push
popf
lds
ror
ror
mov
out
hlt
adc
cmp
or
xchg
pushf
sbb
enter
jb
sbb
pop
or
and
adc
push
and
ds
inc
nop
dec
cli
or
popf
push
inc
bndstx
fcmove
mov
cmps
push
aaa
jmp
xchg
sub
xor
sahf
inc
es
sqrtps
and
cmps
add
ficomp
rol
inc
ins
retf
sbb
js
ins
mov
fbld
iret
add
or
xchg
jp
adc
jae
xor
pop
cmp
add
jmp
jb
jns
add
push
cmp
jnp
(bad)
loopne
enter
or
data16
test
cs
popa
jns
sbb
add
push
sbb
or
jo
ficomp
enter
xlat
mov
jns
push
cld
jmp
and
inc
sbb
adc
adc
sub
idiv
aam
dec
xchg
inc
mov
cmp
sahf
adc
fs
adc
cwde
inc
cmp
mov
mov
sub
pop
shl
pop
push
mov
cmps
lahf
push
mov
xchg
xchg
fsub
inc
cmp
fstp
ret
cs
loop
jle
dec
push
movs
sub
cmp
(bad)
and
add
dec
add
test
sub
cmp
xchg
inc
in
or
dec
call
pop
ror
ja
jb
dec
je
shl
xor
or
lea
dec
xchg
add
rol
push
xor
ret
shl
mov
test
inc
js
das
(bad)
loope
xchg
pop
int3
mov
add
mov
mov
(bad)
cld
aam
xor
pop
lock
cmps
jo
mov
dec
mov
push
pop
mov
rcl
lea
cmp
je
or
and
jecxz
mov
in
xchg
cmp
inc
ja
sub
lods
enter
and
jmp
mov
ror
adc
sbb
push
shl
mov
in
pop
cli
lods
imul
dec
cmp
ret
mov
adc
das
sub
(bad)
jmp
xchg
aam
add
push
iret
and
xchg
add
call
mov
push
push
dec
(bad)
out
inc
dec
add
nop
shr
pop
in
xor
mov
jb
sbb
imul
ret
mov
je
out
loopne
pop
fistp
ins
je
jne
push
stos
cld
xor
ror
nop
pop
pop
push
inc
adc
add
sbb
dec
lods
xchg
inc
mov
js
inc
pop
sbb
inc
mov
add
xchg
movs
fstp
xor
addr16
test
or
or
push
pop
or
and
cmp
jae
(bad)
push
aaa
xchg
sub
xchg
mov
jb
bound
in
jns
add
push
jb
or
fstp
push
fxch
pop
fldcw
jle
inc
or
or
dec
rcr
(bad)
jle
mov
or
je
adc
xor
add
sbb
leave
leave
add
or
pop
and
clc
(bad)
in
es
and
je
shl
bound
mov
pop
push
fisub
das
in
jmp
push
stos
fcom
xchg
add
xchg
jl
in
call
sbb
fmul
or
imul
(bad)
cmps
and
or
adc
imul
ins
jmp
xor
outs
movs
jmp
stos
ins
xchg
getsec
push
or
test
xchg
sahf
cmp
dec
test
jbe
cdq
xor
push
pop
xchg
movsx
and
inc
mov
or
xchg
inc
inc
xchg
je
test
je
lds
sub
push
push
adc
push
in
adc
(bad)
out
call
out
inc
fimul
sbb
push
push
push
shl
repnz
jecxz
fsubr
cmp
inc
xor
in
mov
int
rcr
data16
xchg
xchg
outs
mov
les
scas
(bad)
aas
xchg
iret
xchg
ins
(bad)
cmp
jbe
dec
fdiv
shl
push
(bad)
jne
fchs
(bad)
dec
dec
call
test
test
mov
jno
lock
inc
cmps
repz
nop
sbb
enter
ret
xchg
(bad)
leave
dec
cmps
lahf
push
fsub
icebp
fcmovnb
inc
jmp
fwait
cmp
push
push
mov
sub
popa
push
out
mov
add
adc
add
cmp
loopne
sub
jo
push
(bad)
pop
cli
sub
mov
sub
pop
xchg
imul
das
enter
cdq
xchg
mov
inc
mov
xchg
mov
inc
ja
je
inc
xor
or
mov
push
push
inc
ja
mov
jbe
in
gs
cmps
inc
fs
inc
movs
lock
sbb
mov
add
sub
add
add
or
xor
cmp
xchg
aaa
and
and
add
or
adc
push
stos
add
sub
xor
or
pop
stos
dec
stos
push
pop
or
lds
outs
jecxz
push
sub
rol
mov
cmps
or
or
adc
inc
daa
pop
inc
mov
inc
push
into
xchg
scas
movs
jnp
push
adc
xchg
(bad)
out
jbe
mov
mov
aam
sahf
and
mov
mov
and
sbb
xor
shl
xor
add
or
dec
push
push
mov
ret
jmp
jo
retf
or
mov
cmps
icebp
adc
rcl
je
sar
sahf
pushf
aaa
and
repnz
mov
mov
dec
enter
inc
call
je
outs
xchg
shl
movups
xor
or
xchg
cmps
imul
inc
or
lock
or
add
add
xchg
xor
call
sar
inc
enter
lahf
or
sbb
adc
sbb
sbb
aad
ds
jb
pop
enter
fst
add
cmps
(bad)
mov
jecxz
sahf
fwait
ins
add
push
adc
data16
jne
aam
lock
inc
enter
push
stos
js
jmp
jmp
lea
fst
retf
(bad)
aaa
or
ins
adc
inc
mov
or
pusha
loopne
xor
dec
dec
inc
jbe
jns
movs
pop
test
mov
push
push
and
cmp
push
in
add
in
xlat
and
ins
sar
and
fimul
sub
js
push
push
sbb
(bad)
in
or
or
je
mov
push
xor
pop
rol
fbld
add
rol
data16
sub
retf
or
push
repz
fidiv
cli
(bad)
pop
adc
shl
or
jo
sbb
pop
xchg
mov
cmp
pop
je
push
pusha
sub
and
shl
or
pop
fdiv
movs
sbb
sbb
adc
push
xchg
cwde
(bad)
fwait
ror
pop
mov
push
inc
arpl
sbb
ret
js
push
mov
enter
sub
stos
mov
sti
es
xor
and
adc
and
mov
cmp
shl
or
push
stc
movs
icebp
sub
data16
sub
or
push
repnz
mov
mov
inc
je
adc
or
pop
inc
xchg
add
mov
sbb
inc
or
and
inc
dec
mov
lds
add
test
movs
or
inc
inc
aaa
std
xor
jo
push
repz
ror
push
xchg
sar
cwde
dec
int
add
cmc
jge
imul
icebp
addr16
or
stos
adc
and
aad
sbb
add
ss
(bad)
icebp
push
inc
xchg
aad
jecxz
or
jmp
add
sahf
mov
test
out
adc
cmp
dec
shl
loopne
sub
jnp
mov
rol
rcr
push
mov
add
add
add
(bad)
push
nop
cmc
xchg
jl
sbb
sbb
and
jmp
inc
pop
test
mov
and
push
sub
push
or
jmp
(bad)
adc
ins
test
test
pop
mov
jmp
imul
jae
xchg
ret
in
push
xchg
adc
and
sub
sbb
outs
add
push
or
mov
cwde
mov
push
pop
adc
mov
dec
add
dec
xchg
mov
and
push
and
pop
xchg
adc
or
add
test
sbb
pop
push
cwde
and
in
adc
jp
into
or
idiv
in
mov
les
daa
adc
ror
sbb
or
cmp
(bad)
xor
cmc
xchg
shl
sti
push
adc
sbb
shr
sahf
ret
mov
and
ss
test
imul
mov
pop
xchg
cmp
or
lock
pop
es
mov
scas
add
dec
pop
add
cmp
push
ss
mov
je
xor
pop
loopne
add
out
nop
lods
data16
(bad)
imul
icebp
je
adc
jne
es
jmp
sti
pop
ss
adc
jb
adc
fcom
fcmovb
push
push
sub
les
sub
ds
cmp
(bad)
or
(bad)
or
pop
inc
or
ror
and
mov
stos
mov
ja
(bad)
imul
mov
mov
push
and
(bad)
adc
clc
xchg
mov
cmp
rol
or
cmp
and
pop
scas
adc
xor
and
sahf
jl
data16
gs
clc
hlt
add
movs
add
and
cmp
lock
add
enter
jl
or
jmp
ss
movs
jns
(bad)
sbb
lds
add
jo
nop
or
add
and
xchg
and
mov
cmp
mov
cld
repnz
pop
aaa
or
sbb
or
add
pop
sahf
jmp
jo
sbb
xor
jp
ins
or
pop
inc
adc
or
lahf
add
or
xchg
adc
or
jl
bswap
push
call
pop
add
into
jo
xor
sub
test
inc
push
sbb
jne
xor
dec
dec
(bad)
jmp
sub
mov
jg
mov
or
das
add
test
sbb
or
sub
sbb
jne
adc
add
dec
xchg
sub
pop
cmp
xchg
jge
rcl
call
or
call
ret
xchg
jo
adc
pop
push
adc
lds
(bad)
adc
les
or
xchg
sbb
neg
iret
in
les
mov
xlat
adc
int
pop
dec
xor
pusha
(bad)
inc
adc
test
sbb
call
or
push
addr16
adc
test
cwde
lock
js
aad
sbb
adc
mov
sbb
cmp
js
rcr
xor
jne
jg
jp
cmps
movs
inc
xor
call
loop
lea
lock
lock
lea
dec
stc
imul
adc
imul
lds
add
mov
jne
(bad)
sbb
push
pop
jmp
mov
and
aam
(bad)
sbb
fsubr
div
loop
lea
jp
popf
cmp
dec
inc
loope
inc
loopne
cmps
cmp
pop
push
sbb
or
adc
test
fisttp
inc
and
or
and
ret
jge
or
push
adc
xor
les
fsub
es
add
sar
dec
gs
cmc
jo
pushf
dec
push
test
cdq
cdq
nop
sti
add
dec
pop
inc
push
mov
(bad)
pop
adc
sbb
dec
inc
loop
inc
js
aad
inc
sub
cmp
adc
or
cmps
ja
push
or
pop
cld
(bad)
ins
fnstsw
shl
sbb
and
dec
push
pop
adc
add
or
fnstcw
mov
fst
mov
sub
sbb
pop
mov
lds
push
sbb
mov
sahf
inc
and
push
and
mov
sbb
pop
or
test
fimul
enter
mov
sbb
xor
jne
lods
add
push
lods
daa
sub
loopne
lock
call
adc
fimul
pusha
rcr
dec
push
data16
push
sbb
and
mov
jb
fwait
add
aad
clc
jbe
mov
out
sbb
jb
add
jne
sbb
and
and
xor
jnp
add
imul
push
shl
sub
add
sbb
inc
mov
or
lahf
add
sbb
and
ins
outs
rol
into
inc
push
sub
add
push
out
dec
shl
ror
inc
mov
and
ja
jle
and
dec
adc
jmp
aas
clc
mov
scas
and
add
jmp
aad
or
or
push
push
add
push
mov
push
jl
(bad)
xor
mov
loope
sub
adc
push
inc
and
lods
xchg
adc
and
dec
mov
dec
call
add
dec
ds
cmp
sbb
mov
push
or
ret
or
adc
adc
sbb
mov
lock
add
dec
cmp
cmp
dec
cmp
bound
cmp
sbb
xor
mov
push
cmp
push
fmul
in
pop
mov
clc
mov
jo
inc
cmp
cmps
mov
jmp
add
push
mov
sub
xor
add
or
jmp
xchg
test
mov
imul
add
sbb
or
stos
inc
xchg
fsub
ficom
push
pop
mov
sub
sub
adc
or
adc
pusha
jg
and
and
ret
gs
push
push
mov
or
pop
into
xlat
loope
adc
ins
inc
add
mov
ins
cmp
pop
pop
adc
mov
jmp
ja
ret
mov
lea
and
jecxz
cmps
mov
int
dec
or
data16
sub
or
xchg
push
mov
adc
mov
add
cmp
pop
xor
or
inc
lahf
ret
loopne
shl
sub
or
imul
dec
push
cmps
push
sbb
push
pop
or
in
push
movs
test
or
pop
jae
ret
retf
adc
fisttp
dec
imul
out
scas
lods
dec
cmps
xor
pop
cli
ins
aaa
cmps
or
aaa
mov
(bad)
and
mov
jp
sbb
dec
fs
cmp
sub
or
jmp
inc
sbb
shl
and
inc
lods
inc
or
(bad)
mov
jl
push
pop
pop
out
sub
lock
lea
and
je
add
sbb
out
(bad)
out
pop
(bad)
fisttp
push
or
je
lock
add
retf
cmp
or
jbe
fld
inc
mov
sub
das
push
int3
jp
in
push
mov
aam
sub
pop
add
add
mov
and
cmp
adc
jo
add
ss
sub
sbb
(bad)
adc
icebp
add
adc
(bad)
mov
dec
loope
mov
mov
data16
pop
mov
lea
xchg
adc
mov
movzx
leave
mov
imul
inc
sbb
pop
fstp
fimul
(bad)
add
clc
and
sub
loope
and
xor
inc
mov
pop
je
or
shr
xor
add
cmp
pop
aam
sub
(bad)
mov
das
lods
mov
inc
call
jp
add
out
in
ret
or
or
jl
jmp
shl
imul
imul
add
mov
dec
xor
loope
sub
cmp
add
or
test
mov
dec
push
sbb
dec
popa
add
xchg
call
aam
shl
sbb
shl
pop
sbb
mov
(bad)
stos
cs
div
adc
bound
fwait
add
cdq
or
lock
jecxz
mov
inc
test
mov
je
mov
inc
int3
adc
jmp
cmp
add
jae
pop
popf
cmc
call
add
rcl
inc
sbb
xchg
adc
lahf
fstp
or
mov
dec
iret
fbstp
lea
adc
pusha
sti
or
shr
neg
jnp
(bad)
aaa
mov
pop
mov
mov
mov
test
and
xor
and
xor
in
dec
dec
cmps
cdq
not
loopne
adc
mov
sar
(bad)
aam
xor
ret
pop
push
sbb
movs
xor
sub
push
call
and
push
ss
inc
adc
jmp
adc
push
data16
push
xor
movs
mov
jmp
or
dec
cmp
lahf
fwait
out
shl
retf
push
mov
cmp
xor
xor
shl
pop
xor
sbb
loope
push
cdq
pop
test
and
or
and
or
adc
sub
sbb
movs
popf
xchg
xlat
mov
or
dec
inc
aas
out
(bad)
pop
inc
and
pop
lahf
nop
pop
adc
or
shr
sub
fisub
iret
nop
mov
or
or
push
out
jnp
mov
adc
mov
sbb
inc
xor
in
adc
push
mov
and
dec
mov
fnsave
(bad)
gs
btc
or
mov
jl
mov
lahf
or
or
pushf
and
xor
les
xor
rcl
lods
pop
push
je
repz
int3
or
fcomp
push
pop
xor
rcl
push
add
(bad)
aam
or
loopne
bound
xor
fcomp
push
dec
push
call
sub
cwde
popf
in
dec
pusha
cdq
in
stc
lahf
mul
add
pop
jbe
fwait
test
push
(bad)
jge
aad
cmp
loop
adc
pop
pushf
inc
clc
xchg
sbb
sbb
pop
aaa
and
or
lock
or
outs
cmp
and
xlat
or
lahf
push
pop
add
push
pop
les
or
fucompp
inc
jnp
add
inc
or
inc
xchg
mov
push
pop
pop
xchg
adc
sahf
inc
jl
or
bound
sbb
push
xor
ja
lods
pop
ja
ins
es
sbb
out
mov
jno
adc
lea
xor
add
mov
popa
or
lahf
and
or
aad
mov
adc
movs
fadd
or
jle
pusha
push
or
sbb
pushf
sub
adc
cld
lods
mov
lods
test
outs
or
retf
pop
pop
mov
dec
push
mov
push
cmp
fisttp
push
mov
pop
adc
sbb
stos
or
mov
sbb
cdq
out
mov
movs
mov
call
add
or
rcl
mov
jo
sub
bound
aam
(bad)
cmps
clc
ins
xchg
pcmpgtb
add
xor
add
in
add
pusha
or
in
mov
test
out
movs
mov
pop
and
or
clc
ss
and
lock
add
sbb
push
sbb
aas
push
fadd
fxch
mov
mov
mov
test
lods
mov
gs
ja
push
and
and
gs
inc
movs
fisubr
out
hlt
loopne
leave
fadd
iret
xchg
sti
sbb
jl
pop
stc
in
faddp
mov
rol
inc
loopne
jnp
std
inc
in
aas
outs
or
add
loopne
daa
fisub
adc
das
and
mov
cmp
es
call
fucomp
fld
xchg
push
pop
es
xor
adc
jp
add
test
jge
dec
call
ja
sub
sbb
push
mov
add
inc
repnz
aaa
movs
mov
mov
add
xchg
scas
mov
fstp
or
mov
or
stos
mov
mov
hlt
add
mul
cmp
jnp
cmp
das
and
xchg
add
add
and
or
adc
xchg
int
or
xchg
pop
outs
push
(bad)
sbb
dec
sti
mov
push
sbb
inc
jmp
js
push
sub
(bad)
and
sub
xor
cmps
mov
std
je
mov
retf
test
push
mov
mov
mov
mov
loope
nop
xor
or
sub
or
(bad)
adc
lods
jecxz
aaa
in
sub
push
mov
cmps
push
dec
out
or
retf
sbb
pop
ins
ror
pop
xchg
(bad)
cmp
add
loopne
jecxz
call
push
enter
stos
adc
add
ja
add
xchg
push
call
lock
test
xchg
dec
cmps
dec
push
push
add
(bad)
fild
lock
enter
out
jno
fsubr
inc
and
daa
adc
mul
js
cmp
cmp
push
lock
ret
adc
mov
push
(bad)
rcl
push
pop
pop
and
push
dec
mov
cmpps
sbb
jl
and
or
fild
cmp
ret
mov
add
rcl
add
add
mov
or
jecxz
mov
jg
mov
adc
gs
ja
push
cmp
retf
sbb
mov
daa
repz
cmp
ins
add
mov
pop
or
cmp
pop
push
je
or
jb
add
add
xchg
and
ret
xor
(bad)
xchg
and
fidivr
in
or
sahf
dec
aad
cmps
mov
ror
sbb
adc
sub
sahf
add
je
jle
pop
push
push
es
xor
mov
add
jecxz
lahf
or
sbb
inc
loop
call
mov
xor
sub
xor
es
xchg
or
xor
mov
sar
mov
sub
and
jne
sub
fstp
fisubr
pop
dec
adc
xor
jns
cmp
movs
add
cmp
enter
pusha
in
or
imul
inc
cmp
addr16
dec
jo
(bad)
adc
pop
mov
aad
push
jle
test
and
das
dec
jge
pop
pop
loopne
nop
mov
aad
ins
cwde
paddusb
xor
or
repnz
imul
push
mov
cmc
push
add
outs
(bad)
clc
daa
test
inc
pop
lea
add
pop
add
les
add
jnp
xchg
xor
cmp
out
inc
ret
add
mov
jecxz
sbb
add
and
add
sbb
jne
fadd
mov
mov
jp
fwait
xchg
lock
jo
mov
sub
adc
and
cwde
sub
faddp
mov
push
push
dec
push
loope
mov
enter
dec
mov
jae
xchg
xor
inc
mov
ret
sar
push
mov
fdivr
jno
push
inc
fdiv
jmp
mov
mov
push
neg
pop
xchg
add
inc
xor
add
or
sbb
iret
iret
xchg
mov
sub
gs
(bad)
push
inc
lea
xor
sahf
cmps
jo
push
fs
fldcw
dec
inc
nop
inc
(bad)
and
jae
add
xchg
mov
or
pop
fwait
cmp
aaa
sbb
and
in
in
xor
xor
lea
stos
and
and
es
push
(bad)
imul
cs
aam
adc
je
sub
movs
and
int3
aaa
push
jae
les
add
stos
iret
cld
sub
and
adc
dec
pop
rcr
out
adc
sub
add
add
push
adc
pop
inc
int
ins
xor
sbb
ja
inc
add
jp
push
and
(bad)
(bad)
dec
js
out
add
ret
pop
mov
add
fiadd
aas
cwde
pop
loop
jno
sub
or
ja
ins
cmps
je
or
adc
add
jmp
cmps
sbb
stc
push
push
xchg
xor
mov
ds
sub
sti
pop
adc
or
jmp
aaa
adc
pop
aad
mov
add
shr
js
pop
push
mov
pop
das
add
jnp
pop
xor
test
test
dec
out
add
sbb
sbb
jg
xor
sbb
movs
adc
add
mov
pushf
clc
add
pop
add
xchg
add
xor
shl
cmp
lods
call
div
inc
and
lock
sbb
push
cmp
pop
dec
ret
sahf
pop
adc
daa
sub
xchg
ss
pop
lods
test
mov
cmp
enter
adc
adc
sbb
jmp
xchg
bound
js
loop
clc
mov
daa
test
jne
std
jnp
cmp
mov
or
int
mov
add
or
pop
push
les
xor
jmp
xchg
fmulp
add
adc
push
je
add
loope
sti
adc
aam
adc
test
nop
jle
jmp
adc
cmp
push
push
xchg
sub
dec
pop
test
sub
push
test
ins
and
xchg
outs
jp
adc
xor
int3
inc
fxch
xor
or
adc
inc
aas
jb
xchg
hlt
fs
add
aam
sbb
addr16
push
add
loope
imul
sbb
push
rcr
sub
and
sbb
bound
or
mov
pusha
or
retf
jp
ficomp
fmul
rcl
enter
out
ror
jle
mov
sbb
mov
adc
add
sbb
int3
and
jb
shl
mov
mov
pop
add
sbb
jge
and
ins
cmp
mov
adc
icebp
and
jo
je
jecxz
jo
pop
xor
add
dec
rcl
inc
fadd
ret
sbb
cmps
push
xchg
je
and
add
sbb
add
xchg
in
mov
(bad)
adc
add
or
stc
adc
pushf
ror
clc
leave
aam
inc
outs
imul
psubusb
xor
loop
inc
movs
call
dec
mov
xor
outs
cli
cli
hlt
push
mov
adc
in
mov
xchg
push
clc
add
push
push
adc
dec
lea
repz
mov
xchg
adc
adc
inc
pop
jne
mov
mov
jmp
cwde
popa
add
popa
xor
cld
add
aaa
ins
jmp
mov
jmp
or
mov
mov
push
call
sahf
inc
push
jb
mov
jmp
fld
pushf
rcr
xchg
jbe
push
out
sub
fstp
nop
inc
sub
leave
fimul
push
call
mov
jl
fmulp
fistp
sahf
mov
xchg
fcomp
call
shr
les
stc
or
jmp
adc
pop
sbb
or
push
push
push
in
test
cmp
ss
ins
shr
leave
sub
dec
loop
xor
pop
mov
and
mov
iret
das
mov
repnz
cwde
out
or
cmp
xlat
inc
and
add
add
xchg
mov
jl
aas
inc
mov
adc
aam
adc
imul
test
ja
out
sti
pop
mov
add
sbb
mov
cmp
sbb
loope
push
(bad)
sar
cmp
push
inc
je
cmp
cmc
push
test
xlat
lock
leave
xchg
in
cmp
fcomp
call
scas
enter
mov
clc
jns
mov
ret
sti
jo
jae
or
sub
or
je
and
pop
ret
and
icebp
and
pop
xchg
and
movs
xchg
sahf
retf
out
and
cmp
ffreep
clc
push
lea
or
jmp
mov
mov
data16
jno
sub
(bad)
cmp
jmp
and
ins
or
and
retf
xchg
adc
shl
jbe
js
xor
sub
and
pop
cmp
mov
and
push
leave
or
xchg
dec
or
js
or
out
(bad)
push
scas
mov
rol
ffree
adc
jp
mov
add
add
mov
xor
imul
add
xchg
add
cmc
and
into
les
arpl
mov
and
retf
sub
inc
sub
pusha
pop
sub
in
jne
(bad)
out
and
fwait
cdq
pop
or
pop
lock
or
push
sub
fs
sahf
call
push
adc
bound
and
call
cmp
xchg
(bad)
pop
out
or
add
fldpi
fadd
(bad)
in
call
push
mov
xor
das
lahf
cmp
outs
push
cdq
icebp
lea
or
(bad)
cmp
and
ins
je
push
cmp
inc
fwait
sbb
(bad)
add
lea
test
xchg
add
or
clc
daa
mov
xor
fcomp
mov
mov
addr16
or
sbb
rol
ror
add
dec
hlt
add
inc
mov
loopne
inc
adc
js
int
stos
xor
not
mov
addr16
push
call
lock
test
xchg
stc
je
xchg
popf
sar
or
or
jno
push
test
inc
ss
sahf
sbb
rcr
neg
leave
push
push
push
add
data16
jo
das
inc
popa
xchg
jmp
mov
(bad)
leave
in
push
lock
neg
add
lods
aad
and
fisttp
mov
xchg
xchg
imul
pop
cmp
fwait
cmp
mov
or
loopne
and
fisubr
loope
popa
cmp
rcl
push
retf
repz
sahf
mov
inc
adc
ror
sti
clc
add
pop
and
dec
inc
rcr
lods
xchg
hlt
mov
add
jmp
and
loopne
fsubr
sar
mov
add
inc
mov
fldcw
into
push
cmp
cmps
(bad)
jb
mov
or
sbb
sbb
mov
adc
jo
pop
and
imul
cmp
loope
push
push
and
ins
adc
int3
adc
mov
shr
bswap
dec
dec
je
mov
sub
inc
shl
dec
adc
fiadd
lock
ss
nop
fdivr
jl
outs
jns
inc
push
adc
fiadd
ins
dec
loopne
inc
enter
mov
push
retf
(bad)
or
add
inc
in
das
add
test
add
push
mov
nop
or
pop
xchg
push
dec
cmps
dec
je
adc
fmul
cmps
and
mov
pop
inc
pop
jns
inc
cmp
popf
push
cdq
or
in
jmp
test
add
mov
or
xchg
xchg
popf
add
lock
adc
lods
movs
add
(bad)
enter
je
push
xor
inc
mov
cmp
pop
push
call
mov
fbstp
loop
mov
sbb
add
and
add
xor
xor
dec
jmp
out
retf
ins
mov
aaa
(bad)
push
and
or
mov
mov
ins
loop
mov
rol
add
stos
add
cmp
add
mov
add
lods
adc
lahf
and
iret
jl
and
xor
nop
jge
fs
mov
push
jp
arpl
dec
pop
ins
mov
call
mov
xadd
fld1
loop
xor
xor
fcomp
adc
ror
xor
inc
aam
add
pop
cmp
ss
sub
sub
push
inc
add
stc
shl
xor
jne
ins
push
mov
loopne
call
mov
sub
or
add
cmp
mov
and
pusha
clc
or
dec
pop
cmc
and
lea
xor
cli
cs
pop
dec
iret
cdq
dec
(bad)
and
adc
popa
mov
pop
pop
push
pop
test
adc
fs
push
mov
mov
fucomp
mov
je
inc
mov
mov
jmp
retf
xor
out
dec
xchg
nop
xchg
test
fcom
popf
inc
add
popf
xchg
pusha
pop
jmp
jge
push
lock
xor
out
aaa
fisttp
fmul
cmp
in
and
mov
adc
fld
in
frstor
push
mov
sbb
inc
fsub
pushf
stos
mov
mov
ja
jle
mov
xchg
sbb
pop
push
inc
xor
mov
mov
push
or
movs
mov
sbb
or
xchg
test
jo
sub
int3
xor
clc
sbb
sub
mov
xchg
or
lahf
scas
loope
lock
add
or
pushf
xchg
pop
les
mov
adc
mov
neg
add
inc
test
inc
adc
leave
sbb
add
dec
sbb
or
pusha
jp
ja
(bad)
mov
xor
sar
int
call
call
outs
xor
pop
test
and
add
add
inc
sub
push
jno
test
push
cmps
push
loopne
push
dec
xchg
shr
or
xchg
xchg
fwait
jge
pop
pop
sbb
pop
cmp
cmp
mov
add
das
and
xor
push
sbb
adc
push
test
dec
xor
jg
push
or
jns
cmps
popf
xlat
adc
icebp
jmp
cmp
xor
aaa
mov
push
inc
movs
jge
cmp
jne
push
pop
daa
dec
adc
and
test
xchg
xor
gs
mov
fadd
out
xchg
pop
arpl
jge
cmp
pop
shr
mov
dec
in
xchg
adc
cs
into
into
sbb
xlat
or
add
jmp
dec
sbb
pop
clc
pop
or
push
mov
lds
adc
push
sti
pop
(bad)
jl
or
xor
and
movaps
xor
jle
mov
jbe
sub
imul
clc
add
or
aas
mov
fstp
je
mov
popf
ret
pop
dec
ror
lea
xor
dec
mov
xor
(bad)
loope
pop
push
dec
inc
mov
aaa
je
or
sbb
adc
add
pop
push
xchg
popf
shl
sub
movs
mov
jno
sbb
in
mov
jge
push
lock
dec
sbb
pop
cmp
sub
pop
mov
push
add
xlat
jge
jl
stos
in
loope
rcr
and
adc
push
pop
add
ss
arpl
or
es
popa
sbb
jmp
pusha
lea
data16
or
(bad)
jl
push
xchg
lods
add
fwait
xor
adc
push
xchg
out
test
add
sbb
shl
mov
pop
cmp
xor
mov
or
adc
test
push
test
cmps
xor
js
or
cmp
ins
pop
hlt
pop
push
and
push
ins
and
mov
xchg
ins
push
ret
shr
push
lea
xor
push
jns
daa
js
mov
pop
or
xor
daa
arpl
lods
add
pop
dec
inc
mov
xchg
sbb
sub
xchg
test
das
adc
ret
leave
into
jne
cs
and
jmp
add
or
ror
call
mov
dec
cmp
jle
mov
stos
popf
out
sti
repz
push
call
stos
adc
test
lahf
mov
xchg
ret
das
lods
sub
mov
mov
loope
cmp
mov
jb
or
ja
add
dec
ret
xchg
lock
mov
jecxz
mov
in
inc
lods
popa
pop
dec
dec
sar
cwde
xchg
cwde
movs
je
cmp
shl
call
dec
jo
loop
xchg
add
jne
(bad)
mov
shl
fs
add
movs
scas
mov
pop
ficom
jae
ffree
adc
lea
popa
xor
and
(bad)
xchg
adc
nop
cmp
or
sub
shr
or
adc
mov
xor
lods
in
fild
add
sub
movs
xor
mov
(bad)
adc
(bad)
and
pusha
or
mov
bound
xor
add
fadd
imul
pushf
add
mov
jb
pop
jae
adc
ret
jnp
jecxz
pop
pop
jne
(bad)
sti
mov
sahf
add
sbb
aam
aad
cmp
or
stos
add
mov
nop
rcr
inc
ffreep
adc
xchg
test
mov
mov
inc
mov
add
call
mov
cmp
dec
add
mov
clc
or
pusha
cmp
in
mov
push
pop
jp
cs
retf
imul
inc
add
stos
outs
stos
xchg
and
out
pop
xchg
dec
sub
cmp
scas
lods
adc
sbb
jle
pop
rcl
add
inc
es
ror
or
cmc
inc
add
into
pusha
addr16
ror
aam
fwait
adc
mov
adc
lea
xor
pop
mov
push
mov
xor
loopne
adc
adc
push
push
les
sub
mov
add
cmp
inc
mov
mov
dec
sti
add
push
jo
add
dec
mov
inc
mov
mov
ret
pop
mov
nop
fcom
movs
mov
test
inc
rol
cmp
loope
and
rcr
jae
add
or
addr16
sub
fucomip
xor
add
cdq
push
outs
in
adc
adc
jae
inc
inc
pop
xchg
mov
popw
sbb
in
mov
sbb
or
dec
adc
jle
sbb
lock
mov
push
xchg
pop
mov
test
pop
pusha
or
push
cmp
dec
test
dec
in
cli
adc
push
add
and
loope
les
rcl
jge
xor
mov
adc
mov
jp
add
xlat
and
mov
stos
fdiv
jle
lock
or
xchg
xor
lods
sub
shl
daa
add
cmp
repnz
add
and
xchg
jmp
or
cmps
(bad)
or
das
mov
jmp
imul
add
sbb
sbb
mov
xor
add
mov
mov
jp
inc
cmp
jb
inc
inc
jmp
mov
loop
test
ficom
cmp
jg
clc
mov
inc
cld
jne
cmp
xor
aam
bnd
ret
and
push
sub
mov
adc
cmp
xor
jmp
out
mov
fisttp
push
jbe
jg
rcr
mov
inc
(bad)
ror
sub
xchg
jle
ins
sbb
jle
mov
mov
adc
pop
sub
(bad)
xlat
sbb
adc
retf
les
jle
je
jl
cli
sar
scas
gs
dec
or
lock
push
js
ins
inc
(bad)
push
fdiv
inc
adc
cmp
aas
sub
mov
stc
cmp
pop
jle
arpl
fisttp
push
or
jmp
addr16
push
adc
or
push
jno
out
jmp
xor
push
in
mov
xor
dec
add
and
cmp
std
xor
jle
adc
int3
sbb
jbe
push
fcomp
xchg
push
cs
mov
jl
push
dec
lock
sub
repz
or
leave
pop
jae
and
loope
cmp
loopne
or
and
dec
sbb
int
mov
sbb
xchg
shr
nop
pop
cwde
aas
adc
int3
sub
popf
mov
adc
add
add
fistp
lods
test
add
or
dec
into
jge
adc
rol
prefetchw
push
sub
bound
or
rcr
test
xor
push
movs
push
and
int3
jp
imul
popf
ret
push
or
xchg
dec
clc
sar
jae
dec
mov
inc
pop
push
ret
mov
mov
mov
xor
cmc
xor
add
add
fst
xor
mov
cli
imul
rcr
pop
aas
or
cmp
push
es
gs
mov
push
add
or
fiadd
(bad)
pop
neg
push
leave
xor
pop
in
push
push
and
add
leave
pop
test
inc
loopne
jg
gs
jmp
inc
push
(bad)
ror
or
dec
aam
sahf
loope
cmp
xchg
dec
js
fldenv
js
jns
pop
bound
pop
push
sbb
pop
nop
inc
mov
mov
bound
cmp
pusha
outs
and
imul
push
fs
out
and
xchg
sub
(bad)
cmps
push
xlat
jne
push
les
mov
cs
mov
pop
add
push
cmp
mov
xchg
sbb
movs
push
inc
xor
pop
test
push
imul
rep
cmp
je
mov
mov
in
call
jge
push
push
add
push
adc
and
push
les
dec
inc
div
cdq
test
pop
sbb
mov
loopne
fdiv
mov
add
add
ret
sbb
inc
pop
fsub
int3
retf
js
rol
popf
push
mov
cdq
stc
pop
lock
push
xor
sub
adc
pusha
sub
gs
cli
(bad)
jns
ret
lock
sbb
inc
pusha
shl
sbb
sub
push
lods
sub
dec
leave
push
add
mov
jo
and
scas
push
bswap
add
inc
add
cmps
call
push
jge
rcr
inc
cmps
push
fst
dec
cwde
mov
sub
ins
add
ret
and
rol
mov
mov
cdq
enter
adc
xchg
fld
aas
cmp
mov
and
enter
inc
push
cmc
mov
xor
add
or
rcl
cmps
das
dec
xor
add
push
dec
push
mov
data16
test
jg
push
test
and
lds
nop
sub
inc
mov
fist
rol
adc
shr
or
sub
cld
add
dec
inc
pop
sbb
cwde
jmp
jo
mov
inc
rol
inc
stos
push
arpl
pusha
dec
add
or
push
and
enter
lods
cmp
in
inc
add
imul
push
cwde
inc
jg
shl
add
cmps
inc
mov
lock
imul
mov
es
push
push
(bad)
fisttp
(bad)
loopne
or
loopne
pusha
lock
sub
xchg
jo
add
mov
rcl
mov
lahf
push
inc
dec
test
push
push
dec
xchg
jp
add
and
sbb
jle
pusha
fild
jbe
or
cdq
push
sub
pop
rcl
outs
adc
pop
(bad)
cmp
add
mov
(bad)
push
mov
imul
orps
add
loopne
jle
dec
xchg
adc
add
in
inc
imul
pop
push
mov
mov
cmp
fsub
add
scas
dec
and
pop
adc
(bad)
push
ins
cmp
adc
ss
dec
ficomp
int
aam
into
pushf
mov
mov
stos
hlt
daa
jne
fimul
xor
adc
dec
xchg
pushf
retf
jmp
pop
add
or
fldenv
inc
push
xor
add
xchg
mov
adc
je
sbb
mov
dec
push
xor
test
int3
movs
push
aas
dec
jge
pop
or
rol
shr
add
mov
jp
add
sbb
xor
mov
das
or
inc
(bad)
xor
test
ret
inc
mov
rcr
pusha
or
pop
add
add
cmc
shl
xchg
mov
pop
je
add
dec
call
dec
cmps
or
xor
das
inc
sbb
sbb
daa
cmps
lahf
mov
adc
stos
cmc
nop
inc
das
pop
fst
mov
call
sbb
test
js
popf
add
shl
fdivp
sbb
xchg
adc
cmps
sbb
sub
rcr
add
or
cmp
rol
pminub
sahf
cmp
inc
and
ss
mov
mov
or
ds
jne
push
mov
adc
adc
mov
add
test
pop
cmp
dec
sahf
jmp
xor
jmp
daa
mov
in
mov
ss
push
adc
adc
xor
dec
add
sub
jmp
jmp
xchg
ror
sbb
push
push
adc
push
test
cwde
adc
outs
scas
xrelease
xor
repz
ret
test
out
or
push
daa
pop
popa
retf
jl
ror
add
add
dec
rcl
add
sahf
adc
cs
push
and
test
je
fcomp
out
ffreep
jge
(bad)
mov
mov
push
shl
ror
nop
cmp
shl
jle
cmp
movs
loope
ins
call
aam
in
retf
ror
inc
pop
xlat
repnz
push
cmp
adc
sub
inc
mov
ffreep
out
fstp
xor
sub
por
jg
(bad)
fdivp
pop
or
jmp
aas
pop
mov
push
mov
dec
js
stos
cs
clc
dec
push
cdq
xor
or
repz
adc
test
add
rcl
lods
fdiv
pop
bound
push
arpl
add
push
lahf
shl
or
fimul
cmp
enter
mov
adc
add
clc
dec
push
mov
push
jnp
inc
fdiv
add
dec
ins
jne
or
push
lods
js
ins
xlat
sbb
xor
xlat
cli
cmp
add
and
ret
(bad)
cmp
dec
mov
and
pusha
mov
imul
fwait
mov
pop
jb
inc
cmp
add
into
jmp
push
dec
gs
iret
loopne
add
add
dec
lods
aad
cs
cs
test
mov
fisttp
adc
jns
les
jmp
cmp
not
pop
adc
je
(bad)
in
or
jg
sahf
or
mul
mov
mov
push
sbb
dec
mov
cmp
sub
or
cmp
push
or
mov
cmp
jne
ins
pop
sbb
int
cmp
in
imul
test
bndstx
in
sub
or
je
or
ret
mov
aam
nop
rol
pusha
sbb
or
addr16
mov
test
pop
pop
jb
xchg
rol
push
rcl
push
pop
dec
inc
call
sub
add
cmp
add
push
popa
pop
mov
adc
or
outs
push
inc
lds
add
lahf
ret
imul
jge
cmp
xchg
push
sub
dec
jmp
inc
imul
sub
test
xchg
shl
and
mov
pushf
test
mov
into
add
dec
rcl
scas
mov
scas
sub
dec
mov
sahf
ins
or
shl
clc
dec
inc
mov
test
je
inc
mov
adc
cld
push
dec
mov
push
movs
jmp
xor
cmp
adc
pop
dec
jmp
and
idiv
in
jmp
add
cmps
sub
pushf
push
jb
mov
xor
mov
rol
adc
add
ret
cmp
(bad)
mov
pop
and
pusha
add
pop
arpl
sbb
or
dec
lods
iret
movs
push
or
test
mov
repz
push
adc
pop
pop
rcr
cmp
gs
or
jns
mov
add
mov
mov
mov
shl
push
or
sub
mov
xchg
and
or
in
fwait
or
adc
inc
mov
test
sbb
xor
dec
add
and
inc
mov
xor
ins
add
out
adc
adc
jecxz
test
rcl
dec
les
ins
lods
mov
xchg
push
inc
dec
push
rol
dec
cmp
imul
das
push
push
mov
neg
les
dec
inc
jmp
push
(bad)
or
mov
out
cmp
dec
sbb
inc
(bad)
ret
call
fistp
(bad)
mov
dec
cmp
rcr
add
sbb
xchg
or
push
sbb
mov
add
cmp
push
sub
dec
sbb
je
or
dec
push
sbb
adc
out
sbb
jg
lea
add
cwde
sub
push
push
adc
add
pop
sbb
adc
or
sbb
mov
pop
cmc
pusha
rcr
je
(bad)
je
mov
sub
mov
mov
adc
dec
sub
and
mov
sti
lods
fadd
aam
add
jmp
mov
xchg
rcl
adc
retf
dec
or
mov
mov
adc
xchg
or
jo
pop
sbb
ficom
out
push
push
loop
imul
dec
dec
in
inc
and
mov
sub
mov
push
sar
jno
xor
nop
retf
push
xchg
aas
retf
ror
lods
fdiv
inc
inc
movs
add
push
jle
jecxz
cmp
rcr
enter
es
shl
sti
mov
fcom
add
or
repz
pushf
leave
push
test
mov
sbb
mov
xchg
or
fucompp
cs
push
fsubp
ins
jl
cwde
push
fsubr
sbb
faddp
ret
inc
jbe
push
adc
sbb
mov
pop
and
and
shr
adc
sub
cdq
or
mov
cmp
mov
or
loopne
push
inc
mov
shr
pusha
or
pop
dec
mov
add
sar
das
and
loopne
push
xor
addr16
or
push
push
outs
(bad)
sbb
ss
push
pop
push
xchg
sbb
sub
bound
ins
rcl
adc
cmp
xor
sbb
pop
fiadd
inc
aaa
xor
sub
cmp
xlat
mov
daa
push
adc
jp
push
lahf
dec
mov
and
imul
push
adc
pop
stc
sub
add
inc
add
fist
icebp
or
arpl
jnp
adc
jb
xor
inc
sbb
and
push
cmp
cmp
mov
or
test
fsubr
adc
in
fwait
ret
add
enter
mov
xor
repnz
add
inc
xchg
mov
jg
add
into
aaa
jae
mov
adc
ja
icebp
clc
jle
push
jne
movs
inc
jne
int3
loopne
dec
repnz
rcr
dec
sub
sbb
ja
cmps
das
sub
mov
or
fild
cmp
and
jl
(bad)
sub
les
and
test
mov
sahf
jno
scas
pop
xchg
lea
adc
xchg
or
mov
jmp
mov
push
data16
xor
jmp
gs
cmp
fdivr
add
pusha
loope
sar
pop
cwde
aad
mov
mov
test
rcl
enter
lock
add
inc
cmp
dec
cwde
test
mov
push
arpl
cmp
daa
sahf
test
test
in
pop
and
dec
mov
cmp
adc
inc
loope
cmp
xor
push
out
fadd
add
inc
push
dec
loop
mov
pushf
loope
jb
loopne
or
inc
mov
mov
fdiv
sub
cdq
popa
xchg
adc
fdivr
adc
mov
vmovlpd
movs
jbe
adc
mov
add
or
es
mov
mov
inc
xor
mov
xor
jne
sbb
pusha
xchg
(bad)
jns
inc
or
inc
call
test
dec
enter
xor
mov
lods
aad
cmp
sub
rol
or
sar
jmp
sbb
loope
cmps
sub
inc
fmul
popa
xor
fidiv
or
mov
hlt
fst
imul
push
inc
adc
test
test
rcr
add
push
add
shl
je
xor
pop
inc
mov
movs
and
test
push
and
mov
adc
xchg
pop
aad
(bad)
lock
pop
xor
cs
sbb
(bad)
arpl
pop
test
and
adc
mov
mov
out
(bad)
sbb
add
adc
test
adc
cwde
jp
mov
shr
dec
lds
scas
lock
jp
jae
scas
outs
jmp
test
adc
xchg
popa
stos
mov
jo
leave
fstp
add
cmps
or
(bad)
push
js
xchg
(bad)
je
jmp
and
je
mov
loop
xor
fsub
and
adc
loopne
sbb
jl
test
sbb
push
dec
xor
shl
cmp
sub
gs
(bad)
daa
jb
jns
imul
gs
stos
or
mov
das
mov
int
push
loop
sar
pop
pop
and
sbb
mov
or
pusha
jp
sub
pop
mov
pop
and
jb
add
xchg
lods
cmp
xchg
inc
mov
add
mov
jo
push
call
push
xor
add
or
cld
sub
outs
sub
dec
push
jmp
es
sbb
loope
out
jo
sar
daa
add
push
mov
push
(bad)
cmp
inc
push
adc
cmps
repnz
mov
sar
push
mov
ret
cmps
inc
or
je
add
sub
pop
aaa
pop
and
js
fisttp
daa
push
sbb
sub
mov
xchg
adc
rcl
jp
cmp
jmp
int
jno
out
ss
xchg
rcl
push
lock
mov
jne
repnz
sbb
add
aaa
push
dec
push
xchg
cmp
mov
pop
fdiv
jl
je
inc
add
enter
adc
cmp
sub
movs
adc
xchg
fiadd
daa
retf
inc
mov
add
daa
push
scas
shl
mov
or
inc
adc
sbb
stos
sbb
(bad)
mov
jp
mov
mov
mov
clc
call
je
test
jl
and
vpmacsdqh
or
push
xchg
mov
fdivr
outs
dec
sbb
or
shl
les
mov
into
pushf
(bad)
sbb
xlat
mov
and
mov
sbb
stos
mov
in
lock
sub
adc
movs
dec
pusha
pop
adc
push
adc
xchg
mov
or
inc
test
xor
jecxz
sbb
push
ins
jnp
mov
div
push
dec
inc
(bad)
adc
cmp
mov
scas
mov
aad
shr
out
das
mov
fcmovnu
sub
pop
pop
das
retf
jge
popf
xor
or
nop
nop
add
js
nop
dec
bswap
add
dec
into
cmc
rcl
lahf
add
mov
sbb
aam
push
jne
cmp
js
stos
lock
addr16
jle
mov
test
fdiv
movs
pusha
xor
jne
jge
addr16
(bad)
fdiv
or
in
xor
xchg
in
push
push
test
add
popf
or
or
jle
je
pop
add
into
fs
(bad)
xchg
push
das
in
jmp
test
dec
jnp
scas
fld
bswap
aad
add
mov
xchg
(bad)
(bad)
mov
addr16
dec
test
dec
retf
mov
das
mov
jmp
dec
pop
sbb
clc
cmp
aaa
adc
jbe
push
fadd
cld
push
rcr
and
push
inc
jnp
cdq
or
inc
ss
inc
add
test
cmp
adc
sbb
test
cmp
or
fld
sbb
enter
popaw
sub
xchg
or
or
mov
aam
mov
mov
adc
imul
or
test
test
daa
sbb
in
mov
data16
dec
xor
(bad)
pop
sub
pop
push
add
fidivr
push
les
adc
js
or
retf
sbb
ins
fstp
cmp
xlat
sub
fild
fist
pop
push
add
push
shl
inc
mov
mov
mov
clc
(bad)
push
adc
popa
test
icebp
movs
push
sub
mov
cmp
adc
test
mov
xchg
sbb
cmp
sbb
leave
or
and
xchg
mov
jns
dec
les
mov
dec
and
daa
test
sbb
fcmovnb
or
icebp
inc
sbb
(bad)
icebp
imul
sti
neg
ror
or
or
cld
or
mov
xlat
sub
mov
mov
outs
xor
(bad)
add
ror
jmp
gs
lock
out
es
mov
cmps
or
push
or
cmp
jnp
(bad)
push
pop
mov
jp
cwde
sbb
push
adc
adc
movs
rcl
icebp
push
test
test
loope
push
cmp
add
add
sahf
dec
(bad)
push
or
add
cld
jmp
add
mov
(bad)
add
sbb
cmps
mov
xor
xchg
sub
dec
mov
xchg
sub
cmp
in
inc
fs
fiadd
fmulp
add
out
je
pop
mov
add
push
mov
dec
ret
pop
cmp
out
mov
dec
rcl
xchg
test
adc
push
add
js
push
pusha
les
cmp
xchg
inc
imul
push
out
mov
sar
sbb
inc
push
xor
mov
cmps
mov
xchg
pop
push
pop
mov
sub
pop
push
jbe
jge
sbb
icebp
sub
pop
jge
add
icebp
sbb
pusha
gs
inc
push
nop
cmp
push
retf
or
pop
scas
add
aaa
xchg
int
and
dec
into
pop
push
lds
or
shl
rol
add
movs
lock
mov
mov
mov
cmp
cmps
retf
lods
pop
lods
or
mov
xchg
or
jl
and
and
ret
push
inc
lahf
dec
or
add
arpl
retf
xor
aas
enter
rol
push
sti
mov
xor
jae
xor
mov
cwde
or
push
fadd
xchg
mov
mov
clc
lods
sub
cmp
mov
push
cmc
add
daa
push
out
ret
loope
sub
dec
mov
or
je
dec
jne
and
or
enter
ins
add
ss
cdq
es
jnp
(bad)
les
rcl
push
jmp
push
and
movs
(bad)
mov
or
cmp
xchg
inc
jne
out
cwde
add
mov
push
mov
sbb
add
xor
add
rol
adc
adc
mov
xor
or
sub
sar
iret
push
pop
jge
sbb
dec
cmp
mov
lea
inc
add
jp
aaa
lock
adc
loope
ror
test
push
sub
movs
or
mov
mov
test
or
loopne
mov
lods
and
aam
push
sub
cwde
inc
test
pop
(bad)
lods
cli
inc
ins
add
pop
out
add
or
test
sub
sbb
cdq
xchg
cli
rcl
movs
mov
test
and
(bad)
sbb
arpl
mov
mov
xchg
outs
retf
lahf
sbb
push
mov
cmp
popa
and
jecxz
xchg
xor
add
xor
or
push
and
mov
push
add
js
lahf
pop
pop
jmp
shr
add
and
sbb
adc
(bad)
adc
ss
outs
aad
ret
pushf
iret
outs
movs
test
inc
sbb
mov
mov
mov
cmp
pop
push
add
imul
and
jle
pop
or
cmp
mov
inc
add
adc
(bad)
pop
in
mov
je
cmp
push
jge
scas
rcl
sbb
mov
push
adc
xchg
jno
mov
xchg
cmp
cmc
mov
mov
movs
and
pop
cmp
sub
jne
mov
cld
mov
adc
xchg
push
dec
sbb
and
jb
xchg
push
xor
push
pusha
adc
adc
cmp
fcom
inc
ins
inc
mov
and
pop
push
out
push
dec
mov
inc
or
cli
sbb
add
push
pop
add
daa
mov
push
cmps
mov
inc
add
retf
mov
xor
sbb
push
adc
pop
sub
adc
sbb
or
xor
inc
and
xchg
jb
push
cmp
rcr
vphsubdq
adc
and
(bad)
add
leave
dec
or
and
mov
jecxz
scas
push
pop
or
sub
pop
mov
les
popa
sub
data16
sub
push
push
or
add
dec
sbb
xchg
and
inc
inc
inc
dec
and
dec
test
cmps
dec
or
add
clc
pop
and
dec
and
sbb
pop
sub
stos
fwait
pop
arpl
imul
and
jmp
iret
xor
inc
jne
xchg
jg
hlt
test
pop
sub
jnp
xchg
sub
add
cdq
xor
nop
and
pop
enter
mov
and
cmp
in
push
pop
adc
pop
xchg
xchg
pop
cs
sbb
or
mov
pop
sbb
sbb
lock
and
pop
add
fldcw
add
cmps
mov
iret
inc
adc
mov
push
pop
aad
ds
adc
sub
jne
dec
sbb
dec
loopne
ds
jnp
sbb
cmp
jmp
push
mov
inc
out
xor
push
push
sbb
xchg
inc
dec
inc
pusha
cmp
dec
jb
in
jo
or
add
inc
add
cmp
push
(bad)
push
add
in
nop
out
or
aam
inc
mov
icebp
push
test
sub
int3
dec
(bad)
jbe
mov
repz
icebp
pop
xchg
jno
mov
adc
and
bound
lds
leave
mov
or
lods
fcos
mov
mov
mov
push
and
shr
mov
inc
movs
sbb
cmp
sub
push
mov
in
leave
popa
daa
addps
pop
or
add
cmp
push
or
jge
inc
adc
or
pop
iret
pop
or
and
sbb
sub
dec
push
xlat
jmp
mov
cmp
jbe
adc
add
push
push
int3
and
mov
retf
cs
sub
cs
add
cmp
ins
or
adc
jg
pop
shr
ror
imul
mov
clc
xor
sub
lods
mov
push
push
mov
int3
adc
gs
push
test
cmp
cmc
jns
xchg
sbb
and
jbe
mov
in
popf
pop
loope
pop
adc
repz
inc
xchg
movs
mov
push
lea
shl
xlat
iret
mov
sub
pusha
cmp
icebp
cwde
ss
cmp
or
sub
or
add
or
adc
add
xlat
es
mov
adc
cmp
add
push
adc
or
repnz
cmp
cmp
imul
or
aad
ja
je
shr
inc
shl
push
or
loope
push
js
dec
xchg
sti
and
fistp
inc
shl
je
int3
rcr
lock
xchg
push
cdq
pop
int3
mov
aas
js
or
sub
add
lahf
mov
xor
les
add
mov
and
sub
sets
and
loop
mov
cld
ror
adc
lea
mov
and
gs
jge
stos
movs
sub
pop
inc
inc
mov
adc
int3
into
pop
leave
repnz
cmp
cmps
jnp
sbb
pop
popa
shl
ret
xchg
retf
add
bound
cmps
inc
push
or
iret
adc
mov
xor
or
dec
xchg
aas
in
loopne
xchg
mov
in
xchg
adc
fcmovnbe
inc
xchg
mov
sbb
mov
cmp
outs
or
push
out
mov
add
loop
test
push
pop
mov
jg
mov
and
xor
lock
lahf
loopne
sbb
sub
add
jle
ja
pop
test
shl
or
mov
call
adc
push
or
cmp
xor
leave
mov
gs
cdq
fcmovbe
sahf
mov
fs
mov
or
xor
push
xor
mov
(bad)
pop
add
in
or
fisttp
loope
dec
je
and
test
sahf
cmp
test
fwait
jge
xor
shl
jmp
enter
or
cmp
dec
adc
push
lock
mov
and
aas
pop
(bad)
sub
mov
movs
loop
jo
fwait
push
sbb
imul
not
jge
xchg
je
xchg
imul
add
xchg
es
inc
mov
add
push
addr16
sub
mov
lock
mov
jl
adc
dec
jg
lock
xchg
mov
les
jl
xor
shr
mov
mov
ja
adc
push
add
in
nop
lods
push
inc
and
cld
push
sbb
test
and
sbb
inc
mov
xchg
mov
test
inc
jnp
fmul
add
push
push
lea
inc
pop
cld
(bad)
pop
das
dec
fisubr
cmc
or
nop
jnp
or
pop
xchg
mov
pushf
adc
push
sbb
shld
or
mov
inc
push
fcom
(bad)
cli
movs
pop
test
cmp
push
imul
push
mov
jb
xor
(bad)
push
push
or
pop
sub
loop
out
push
nop
ror
and
add
pop
sub
mov
gs
inc
rcl
mov
pop
xor
inc
push
imul
out
push
jns
in
adc
loope
shr
xor
sub
push
adc
mov
in
and
lods
mov
jno
jmp
out
xor
cmps
loope
or
jmp
fild
test
adc
std
jmp
neg
mov
jae
call
push
dec
cli
xchg
add
xor
sbb
test
jge
loope
jno
imul
xchg
push
xchg
mov
and
je
dec
mov
adc
outs
jmp
mov
mov
mov
mov
and
les
or
and
rcr
xchg
cmp
jg
add
fmul
lahf
ret
inc
or
rcl
sbb
push
sub
mov
jno
out
dec
mov
test
push
sub
inc
movs
stc
mov
ud0
stos
push
je
ret
sub
xchg
pop
popw
push
pushf
xlat
mov
fstp
push
outs
mov
int3
push
dec
xor
repz
enter
ins
inc
push
sub
(bad)
and
sbb
sbb
push
and
ret
test
shl
enter
lock
cmps
cli
inc
rcl
mov
mov
cmp
je
es
mov
mov
jbe
or
jo
fisttp
sub
and
loop
test
sbb
int3
ins
and
js
push
enter
retf
popa
cdq
and
jge
push
es
jg
sub
ins
(bad)
lahf
add
stc
mov
je
fcomp
loopne
lods
cwde
xchg
pushf
jg
test
add
xor
jne
jmp
xor
cli
imul
into
cmp
jg
jmp
pop
push
popf
xor
push
mov
cmps
push
or
mov
adc
cdq
mov
add
out
and
adc
cmp
cwde
movs
rol
dec
js
jmp
dec
adc
add
xchg
adc
inc
cmp
inc
xor
test
or
add
dec
inc
loope
cmp
add
movs
push
jae
xchg
jecxz
call
scas
and
and
jecxz
pusha
stos
add
sbb
addr16
add
mov
retf
cwde
inc
xchg
mov
movs
jge
inc
push
mov
add
cdq
rcl
jle
add
mov
(bad)
nop
jne
mov
adc
sbb
test
jecxz
fdivr
(bad)
aad
xor
cli
mov
sar
or
loope
popa
push
loop
pop
push
jae
mov
sub
jmp
jmp
cmp
int
push
mov
repnz
jmp
sub
and
ret
pop
popa
or
pop
mov
cmp
sub
adc
pusha
or
rcr
push
dec
mov
test
and
dec
sub
test
fldcw
or
inc
mov
pop
dec
dec
or
aaa
ret
je
adc
mov
ret
mov
ror
data16
test
aas
ret
mov
sahf
stos
les
cld
or
(bad)
adc
mov
daa
add
mov
and
or
and
fadd
push
mov
adc
push
out
push
test
or
out
out
xchg
ret
sahf
lock
cs
popa
test
push
movs
and
out
mov
mov
pop
js
dec
sbb
nop
aas
loopne
sbb
into
mov
sub
xchg
clc
sub
adc
outs
hlt
pop
add
lods
(bad)
sub
enter
push
fdivr
push
sub
add
add
add
fsub
cmp
mov
mov
mov
or
jb
(bad)
push
adc
imul
lahf
sub
mov
mov
inc
fs
mov
adc
cmp
mov
jnp
mov
adc
sar
ret
mov
fist
mov
int
ins
test
dec
adc
les
pushf
add
mov
add
adc
xchg
cmc
pop
and
loopne
and
mov
jne
cwde
xchg
daa
adc
ret
sbb
and
or
dec
cmp
cmps
mov
xchg
pop
ins
or
repnz
sar
sub
aam
je
xor
loopne
add
or
push
add
inc
inc
cmps
rol
sub
stc
rol
ss
cmp
lods
and
and
add
out
inc
cwde
push
imul
pop
(bad)
push
and
pop
and
cmp
dec
add
or
lea
sbb
clc
inc
(bad)
inc
push
mov
dec
cmp
xchg
bound
add
inc
(bad)
xchg
inc
xor
fstp
add
pop
dec
fist
mov
dec
ret
dec
sub
pop
retf
js
dec
(bad)
test
sbb
clc
nop
push
aas
sub
sbb
imul
sbb
(bad)
jmp
mov
and
push
adc
and
cmp
outs
adc
mov
js
(bad)
outs
pop
call
lea
xchg
pop
pop
pusha
div
mov
add
stc
dec
call
or
inc
or
ret
stos
sbb
retf
(bad)
push
xchg
push
push
iret
call
and
aas
sub
sub
mov
ret
pop
movs
cwde
test
adc
or
jmp
pop
movnti
arpl
and
movs
test
mov
aam
mov
add
popf
test
imul
lock
jmp
adc
adc
push
es
add
add
push
lods
push
add
and
add
and
lock
fcmove
pop
stc
push
in
and
mov
sbb
push
fcomp
push
cmp
push
test
sub
and
nop
inc
(bad)
push
cmp
sub
sub
push
push
ins
xchg
cmp
and
inc
or
xchg
or
mov
(bad)
and
mov
pop
mov
mov
or
fdiv
inc
mov
pop
lods
arpl
test
sub
or
cmp
ins
mov
push
sub
sub
cld
adc
mov
inc
cmps
and
xchg
pop
mov
xchg
jb
adc
pop
aam
ret
retf
mov
pop
enter
or
rcl
or
lds
(bad)
(bad)
pop
retf
jl
push
lock
pop
rol
ds
jo
jns
pop
je
aas
push
iret
pop
or
pop
shl
pop
push
lock
sub
cmps
loop
push
(bad)
call
je
mov
xor
inc
lock
cmp
pop
dec
push
lock
in
(bad)
test
fsub
add
add
in
and
jb
and
dec
(bad)
aam
add
ret
nop
test
nop
aam
xchg
mov
cmp
sub
pop
popa
push
or
imul
sub
mov
inc
cld
mov
dec
dec
cmps
sahf
adc
dec
xchg
dec
jb
and
add
add
pop
xchg
in
or
popf
push
add
add
test
fsub
mov
sub
or
shl
movs
mov
pop
mov
or
sub
or
dec
lods
mov
lods
pop
dec
push
mov
mov
inc
sub
movs
fcomp
mov
mov
xchg
adc
in
ror
pop
mov
sbb
jmp
xchg
dec
pop
cwde
sbb
push
bound
jae
mov
lods
add
fcomp
xor
hlt
push
pop
pop
clc
push
movs
jns
xchg
je
hlt
sbb
popf
nop
dec
pop
push
inc
mov
adc
dec
jo
ins
pop
outs
cmp
fdivr
mov
aam
mov
data16
(bad)
pop
fild
xor
fs
test
fsub
mov
mov
pop
mov
push
pop
sub
add
ds
pusha
mov
add
cmp
lock
xlat
cmps
ror
adc
cmps
push
xor
iret
dec
push
push
pusha
les
inc
outs
push
popf
adc
adc
aam
out
or
pop
sub
and
mov
push
adc
dec
push
jge
js
push
or
inc
add
aas
test
and
xchg
test
es
sbb
cs
xchg
xchg
loope
cdq
and
pop
sbb
push
add
daa
xchg
daa
loopne
add
cs
daa
clc
or
push
adc
ret
push
or
lock
sbb
pushf
pop
cs
out
mov
mov
in
jae
mov
push
cwde
enter
bound
shr
cmp
and
bound
sbb
pop
mov
pop
sbb
or
retf
in
mov
push
jle
ret
sar
fsubr
jmp
movs
sub
mov
add
mov
inc
or
xchg
retf
movs
cdq
js
jl
test
xchg
push
jae
mov
xor
fnstenv
fist
adc
and
mov
pop
enter
stos
inc
mov
call
dec
not
cwde
sub
or
stc
push
jmp
ret
mov
mov
add
nop
fimul
pop
test
or
pop
mov
dec
or
jl
or
or
je
cmp
icebp
jo
mov
mov
rol
inc
or
repz
push
pop
pushf
mov
push
or
xchg
idiv
sub
fs
or
mov
in
dec
(bad)
test
xchg
sbb
jbe
xor
adc
pop
inc
push
dec
and
adc
jmp
into
mov
and
dec
pop
sbb
add
scas
jp
out
fadd
pop
ret
out
push
and
add
push
sbb
mov
push
sbb
out
fwait
clc
jmp
popa
or
mov
add
dec
adc
inc
sub
(bad)
xchg
cmp
adc
xchg
pop
jae
shl
inc
adc
add
or
imul
push
xchg
ret
jne
adc
pop
sbb
pop
jp
dec
hlt
sahf
cmp
je
cmps
lock
cdq
test
jle
inc
clc
dec
sbb
cmpps
jo
add
mov
movs
loop
xchg
push
popf
test
sahf
in
add
push
call
jle
xchg
sub
shl
mov
les
stos
push
mov
test
fwait
sbb
adc
pop
mov
cli
jg
cdq
ds
fcom
dec
or
adc
mov
gs
fistp
xchg
sbb
fadd
add
sub
fcmovnbe
jmp
add
stc
gs
movs
shr
fisubr
js
rol
in
popa
adc
pusha
push
cdq
xchg
sbb
inc
or
fiadd
xchg
inc
cmps
sbb
fisttp
mov
in
shl
outs
mov
sbb
in
or
nop
arpl
sub
mov
outs
ret
cs
test
or
cmps
xchg
dec
cdq
or
(bad)
and
pop
push
adc
mov
push
(bad)
fdivr
popa
pop
jge
pop
and
cmc
mov
xchg
or
pop
stos
xor
into
mov
fs
lods
jge
push
adc
es
sbb
int3
lock
lds
pop
mov
(bad)
inc
sub
retf
jb
iret
pop
inc
mov
js
test
push
test
movs
sub
jnp
jle
sar
dec
ror
add
call
leave
mov
mov
sbb
pusha
sbb
adc
sbb
xchg
sbb
xchg
mov
pop
xchg
jmp
jnp
mov
rol
inc
cli
push
cmps
cmp
jno
dec
push
sbb
adc
jmp
sahf
and
push
inc
dec
adc
es
js
fcomp
sbb
movs
aaa
icebp
xchg
test
push
imul
dec
xchg
mov
jmp
out
mov
dec
add
pop
mov
xchg
push
ret
and
(bad)
jae
push
mov
and
(bad)
or
call
xchg
(bad)
call
or
out
jne
inc
push
or
scas
aaa
cmp
xchg
das
cmp
loope
xchg
hlt
mov
nop
je
fcmovnbe
and
lahf
test
push
imul
push
push
or
adc
mov
lahf
rcr
shl
jl
mov
iret
add
dec
rol
mov
in
out
adc
sbb
loope
push
in
pop
or
rcr
call
mov
mov
sbb
add
mov
imul
shr
or
push
jmp
cmp
sbb
aaa
add
fcomp
cs
inc
loop
and
or
add
icebp
or
dec
jmp
cmp
call
adc
push
imul
fild
or
and
cmp
cmp
and
or
and
pop
inc
mov
or
and
hlt
adc
sbb
mov
pxor
jmp
xor
add
test
mov
pusha
cmp
or
or
push
test
or
ret
xchg
push
sub
adc
shl
mov
xchg
and
inc
sub
add
adc
add
or
inc
loopne
fcom
and
test
sbb
mov
jmp
rol
adc
jp
aas
xchg
jecxz
int3
test
(bad)
fisttp
cmp
jo
cs
mov
add
mov
xchg
ss
sbb
add
movs
cmp
jb
inc
adc
gs
adc
mov
or
jmp
out
sub
or
dec
inc
jne
mov
mov
shr
sbb
inc
pushf
dec
imul
push
out
push
cmps
mov
pushf
and
xor
mov
stos
pop
pop
sub
push
test
push
sub
mov
lahf
add
or
mov
jp
mov
fs
mov
push
dec
mov
bound
stos
mov
rcl
xor
add
mov
push
cwde
imul
sbb
xor
pop
inc
or
dec
push
jno
add
cmps
rcr
adc
aaa
shr
sbb
in
in
or
out
ins
ror
aaa
(bad)
and
es
ja
sub
mov
or
retf
add
inc
and
(bad)
rcr
push
dec
test
cvtpi2ps
add
xlat
mov
or
mov
daa
inc
ficom
xor
retf
sub
cs
fiadd
pop
cmp
jne
xor
outs
push
retf
jecxz
push
lahf
sbb
sbb
adc
es
repz
jne
jecxz
je
push
or
daa
sub
sub
jo
(bad)
lods
lods
pop
mov
and
mov
inc
cmp
mov
fs
icebp
or
dec
cmp
cs
push
icebp
xchg
adc
push
fld
sub
push
mov
adc
sub
sbb
lods
das
and
fs
fwait
jne
daa
push
test
mov
mov
add
loope
sbb
fist
mov
push
sbb
sub
mov
dec
jne
rol
ss
test
ret
test
and
mov
jp
sub
js
push
cmp
sub
adc
movs
aaa
jo
xchg
push
mov
mov
ins
retf
or
and
add
(bad)
ds
(bad)
in
nop
and
je
es
mov
cwde
mov
dec
daa
test
in
inc
lock
and
sbb
mov
ret
xchg
enter
and
push
mov
xchg
hlt
jno
iret
xchg
sbb
jmp
adc
sbb
sbb
sub
mov
mov
fcos
mov
or
test
xchg
mov
add
push
or
push
hlt
ret
and
nop
xor
clc
jne
and
ss
jecxz
or
scas
push
sbb
push
jo
and
sub
and
ss
imul
sub
sub
outs
and
(bad)
std
add
in
add
mov
(bad)
popa
or
dec
cmp
out
or
cmp
sub
jmp
xor
or
sub
or
ds
ja
add
(bad)
jns
mov
nop
dec
nop
pop
into
aam
ins
sbb
rcl
fmul
(bad)
xchg
test
xor
out
test
jnp
pop
cmp
sbb
or
dec
and
xchg
sbb
push
aas
add
pop
pop
push
ss
and
cmps
pop
xor
mov
inc
mov
cmp
sbb
and
cmp
mov
xchg
xor
les
lea
pusha
lock
loopne
or
dec
xor
je
push
or
or
cmovns
dec
pop
loope
sti
(bad)
mov
pop
xor
lock
dec
or
inc
push
inc
mov
sub
adc
popf
add
add
pop
add
cli
xchg
es
mov
mov
cmp
stos
mov
dec
dec
sub
xor
dec
loopne
pop
mov
push
add
pop
test
les
xchg
js
pop
inc
add
add
add
inc
and
call
inc
es
lods
sar
add
or
push
adc
sbb
ror
jno
add
iret
or
ins
mov
mov
inc
sub
mov
cmp
sbb
pop
inc
pop
stos
xor
sbb
ins
pop
adc
push
jl
mov
in
pop
leave
push
sbb
push
shl
(bad)
repz
mov
out
or
mov
sub
sbb
adc
push
xchg
lods
arpl
arpl
cmp
and
sbb
(bad)
test
je
mov
test
sbb
mov
mov
dec
pop
sbb
dec
and
push
or
ja
scas
sbb
jbe
popa
jmp
pop
push
mov
call
ds
call
sub
pop
cmc
adc
cld
test
xchg
out
jg
add
loope
call
jno
mov
mov
shl
sub
xchg
movzx
or
jl
and
sub
xchg
pushf
mov
sub
repz
inc
mov
ds
cmps
mov
mov
and
pop
test
dec
jo
daa
push
sub
sar
xor
inc
inc
xchg
push
sbb
into
jle
shl
mov
inc
push
adc
add
mov
mov
dec
(bad)
push
push
mov
shr
add
out
pop
or
or
lods
gs
and
clc
mov
inc
add
add
daa
icebp
mov
test
addr16
lods
adc
sub
jns
jg
dec
xor
pusha
inc
(bad)
jae
or
movs
adc
js
or
movlps
jo
jno
add
jne
jg
je
cmp
jno
push
outs
popa
inc
repz
outs
xchg
jno
fmul
push
xchg
dec
xor
test
sub
or
cs
xlat
shr
movs
ret
dec
sub
movs
adc
fcomp
cld
inc
jecxz
xchg
not
jge
cmp
jp
(bad)
dec
adc
(bad)
in
push
and
add
mov
aam
inc
retf
xchg
pop
add
mov
nop
or
adc
xchg
mov
push
fcom
dec
lods
jb
fsub
xor
add
stos
mov
adc
ja
dec
sub
xchg
aam
es
lock
adc
das
cmp
(bad)
push
mov
es
lods
lock
test
call
and
adc
shl
jge
enter
xchg
xor
maskmovq
test
or
daa
imul
jne
movs
mov
push
push
or
sbb
push
cmp
mov
push
loopne
dec
mov
repnz
push
cmp
cmp
fmul
fmul
les
inc
mov
packsswb
ss
push
inc
push
call
ror
clc
push
pusha
in
lock
rcl
pop
cs
and
stc
ins
ror
jne
arpl
rol
xchg
pop
dec
or
pop
mov
add
pop
mov
or
repz
je
fwait
push
cmps
(bad)
adc
mov
cmps
lahf
or
push
push
in
bt
les
out
adc
pop
jg
jge
call
stc
push
sbb
cmpxchg
outs
fsub
rol
jmp
push
retf
movs
call
mov
push
mov
mov
not
pop
rcl
push
mov
add
adc
mov
jnp
daa
loope
mov
sub
adc
mov
cmp
sbb
push
cmp
and
mov
call
pusha
adc
mov
inc
dec
add
pop
sub
adc
jno
add
loopne
into
dec
adc
call
aad
jns
jmp
mov
nop
(bad)
cdq
nop
out
(bad)
in
icebp
adc
inc
and
fild
mov
fsub
jecxz
cmp
out
ins
push
inc
repz
pusha
dec
and
daa
loopne
sbb
add
add
bound
jmp
sub
push
dec
in
aad
hlt
mov
setg
imul
retf
push
mov
mov
test
outs
mov
cmp
ins
mov
fiadd
xchg
pop
pop
fld
add
pop
cwde
outs
ret
dec
mov
iret
leave
adc
in
jecxz
and
dec
add
push
xor
add
ret
or
fadd
xchg
sbb
in
pusha
or
popa
mov
stos
xchg
inc
dec
movs
cmps
mov
cwde
or
inc
push
sub
cmp
mov
and
jmp
(bad)
gs
cdq
push
iret
adc
xor
jmp
mov
imul
fiadd
movs
pop
sbb
sti
not
or
cmp
mov
sbb
(bad)
jp
mov
push
inc
dec
pop
ss
movs
inc
dec
dec
dec
ss
or
inc
mov
xor
sub
inc
hlt
ss
xor
sub
and
mov
add
ss
inc
jb
cmps
pop
imul
mov
mov
das
fxch
xchg
test
fdiv
lea
dec
popa
cs
pop
in
xor
or
iret
(bad)
cmp
les
pop
std
and
(bad)
adc
pop
mov
jmp
fild
shr
les
out
push
cmp
repnz
adc
xor
mov
(bad)
cmc
mov
inc
loopne
jmp
sub
mov
xor
mov
cmc
sahf
ror
push
into
add
add
mov
or
daa
test
lahf
ret
aas
jg
push
pop
retf
sbb
(bad)
xor
jo
push
jne
mov
pop
adc
xor
add
cmp
and
pop
enter
or
jge
je
push
push
rcl
dec
jbe
sysexit
sub
hlt
sub
lock
pusha
push
lea
mov
movs
pop
cdq
push
pusha
and
mov
or
and
add
pop
jmp
jne
mov
push
cmp
repnz
push
bound
dec
repz
cld
dec
ret
lods
pop
inc
pop
pop
cmp
adc
dec
mov
or
inc
push
push
retf
or
ss
or
dec
popf
cmp
arpl
pop
dec
xchg
push
pop
xchg
or
cmp
daa
cmp
push
mov
adc
je
cmp
sbb
bound
mov
push
or
push
mov
aam
pop
and
add
adc
mov
or
inc
push
or
or
js
xlat
xor
test
dec
in
in
add
dec
into
and
inc
push
push
adc
push
jle
mov
jl
xchg
and
clc
push
mov
dec
fwait
and
mov
push
lock
and
add
in
cmp
loope
shr
inc
xor
sub
mov
inc
pop
add
ror
mov
inc
and
push
bound
or
call
aas
xchg
ret
movs
inc
sahf
inc
push
sbb
adc
adc
dec
pop
clc
out
mov
call
popa
lea
in
aad
aad
xchg
sbb
pop
pop
pop
ror
add
loopne
jae
or
sub
mov
fbld
mov
jle
mov
aas
test
sub
scas
xchg
xchg
movs
xchg
(bad)
adc
cmp
jge
adc
add
xor
push
movs
adc
mov
adc
in
mov
xchg
pop
rcr
mov
jl
adc
and
fdivr
mov
pop
lock
and
(bad)
mov
dec
push
lods
cmps
movs
cmps
popf
push
imul
xor
pop
retf
xchg
mov
add
cmp
mov
dec
mov
daa
cmp
adc
adc
and
xlat
or
mov
(bad)
lea
add
mov
sahf
jns
mov
inc
das
call
mov
adc
mov
sub
or
cmp
dec
fst
rol
xchg
in
add
or
mov
je
push
cmp
and
or
adc
retf
dec
adc
aam
lea
and
jno
dec
mov
sub
xchg
xchg
push
mov
std
push
mov
sub
push
adc
rcl
test
cmps
icebp
add
cmp
xchg
adc
call
je
shl
xor
ucomiss
jmp
mov
lock
lods
call
pop
mov
popa
or
push
inc
cmp
mov
add
sub
sub
adc
push
addr16
mov
adc
add
aad
dec
mov
loope
repz
nop
push
setle
add
sub
jg
dec
and
add
inc
mov
lea
inc
cmp
dec
sub
ds
icebp
mov
sbb
sbb
repnz
jne
mov
mov
mov
fwait
repnz
mov
cmp
and
xor
(bad)
mov
repnz
fmul
rol
sub
pop
jno
add
fistp
ret
xchg
test
cmps
and
sbb
push
aad
push
xor
dec
pusha
inc
aam
or
mov
xchg
imul
fcom
cmp
mov
sub
fdivr
loop
mov
jnp
ins
iret
mov
cmp
out
outs
jmp
add
or
or
and
add
cmps
xchg
and
dec
push
pusha
add
jb
sub
ret
nop
mov
pop
cld
clc
push
mov
mov
pop
inc
popf
in
inc
sub
jg
arpl
mov
loope
mov
mov
mov
push
fwait
push
push
cmp
jo
mov
mov
inc
mov
sbb
jmp
cmc
scas
cli
iret
mov
xchg
in
pusha
getsec
loop
mov
mov
jmp
cmp
mov
je
add
and
les
clc
pop
sbb
mov
ss
cwde
jl
cs
test
loop
sub
push
sub
add
mov
ins
jle
sub
pop
xchg
retf
add
enter
sbb
jg
inc
les
(bad)
cmp
bound
jb
aad
push
jecxz
es
(bad)
sbb
fadd
xor
(bad)
daa
dec
in
loop
push
sbb
fs
movs
icebp
xchg
or
out
and
cmps
fmul
adc
add
dec
mov
xchg
ins
(bad)
ins
sbb
retf
(bad)
mov
push
int3
int3
and
or
add
ror
mov
jge
push
push
jl
and
sub
dec
pop
jo
push
repz
xor
in
push
or
and
xor
(bad)
mov
jae
ficom
xchg
push
mov
out
popf
call
adc
push
jle
popa
push
mov
sbb
or
inc
push
jne
push
mov
loopne
test
inc
ror
clc
xor
cmp
or
add
or
inc
push
jo
mov
ds
inc
adc
xchg
and
ror
cmp
adc
ds
xchg
jo
retf
movs
pop
jge
cmp
movs
test
int3
mov
sub
adc
xlat
push
or
sbb
adc
retf
inc
bound
jecxz
cmps
xchg
inc
pop
cmp
popa
sbb
pop
fdiv
mov
fisttp
ror
sub
adc
test
(bad)
les
imul
mov
outs
or
dec
cmp
push
pusha
ror
inc
inc
add
push
hlt
and
test
or
or
sub
sub
rol
popa
xor
inc
repnz
inc
xlat
cmp
nop
sub
lods
or
loope
sub
ins
pop
or
inc
movs
pop
hlt
test
push
add
adc
push
push
sbb
push
pop
adc
lahf
daa
adc
ins
pop
int3
pop
arpl
adc
stc
and
into
mov
cmp
nop
mov
mov
or
js
fadd
inc
pop
mov
sub
js
add
dec
or
jne
fist
pop
and
arpl
icebp
mov
pusha
xor
addr16
aad
sbb
or
dec
test
xor
mov
sub
in
into
cmp
jle
hlt
inc
xchg
(bad)
push
dec
daa
cmp
jle
test
adc
xchg
push
inc
push
hlt
cmp
add
mov
jbe
mov
or
jbe
adc
xor
sbb
mov
mov
mov
add
mov
sbb
popf
push
push
mov
or
adc
sub
push
inc
pop
sbb
fs
icebp
jmp
xor
cmps
mov
add
mov
mov
cmp
jbe
sub
dec
lahf
inc
jne
in
xchg
cmp
xor
push
adc
cwde
je
mov
push
clc
shl
or
ja
and
mov
jmp
pop
retf
push
hlt
inc
mov
aad
xor
add
jmp
scas
or
push
dec
bound
(bad)
cmp
xor
mov
jbe
add
gs
and
or
push
mov
lods
retf
stos
inc
shl
in
add
fsubrp
clc
adc
ins
in
hlt
fxch
in
push
xchg
ret
mov
ret
in
and
ret
mov
mov
cmp
adc
cmp
jne
mov
add
retf
sbb
mov
int3
jnp
call
imul
mov
adc
mov
inc
not
ret
loope
(bad)
int
mov
and
push
cmp
adc
inc
pop
dec
jo
add
cs
cmp
adc
sbb
sbb
or
nop
clc
jge
rcl
jnp
cmp
sbb
jb
aaa
add
call
rcl
mov
lods
cmp
or
xchg
add
lahf
aaa
xchg
pop
adc
or
xchg
fucomp
dec
xor
jmp
in
dec
jle
and
adc
sbb
aas
enter
xchg
daa
adc
jecxz
sbb
shl
push
cmp
and
adc
pusha
inc
xchg
and
mov
xor
cld
lea
sub
cwde
pop
push
sbb
je
jp
mov
inc
cld
dec
adc
sbb
mov
pop
adc
imul
pusha
mov
fcomp
or
sub
cmc
cmp
outs
mov
mov
pop
add
pop
dec
les
or
or
and
add
scas
xor
jp
jmp
cmc
in
jle
cmps
push
loope
into
jae
jae
sub
(bad)
in
sub
stc
cmp
sahf
clc
push
xchg
pop
jp
push
das
sbb
jne
pop
and
mov
xchg
sub
cs
push
or
and
push
xor
pop
push
push
mov
mov
pop
bound
xchg
inc
mov
or
or
mov
and
xor
lahf
and
loopne
cli
cmp
push
add
sbb
pop
mov
pushf
imul
fld
pop
mov
push
test
shr
std
adc
adc
add
and
dec
push
dec
nop
test
adc
inc
xor
sar
(bad)
daa
sbb
and
pop
into
push
mov
jl
add
xor
dec
outs
fld
or
sbb
jecxz
or
push
leave
lods
mov
loop
mov
cs
js
mov
push
add
and
test
push
rcl
add
jl
adc
les
pop
stc
or
leave
leave
inc
and
xor
pop
inc
ins
push
sub
(bad)
ss
jge
mov
xor
dec
int3
push
dec
(bad)
div
or
addr16
cmp
hlt
je
cmp
cmp
test
das
repz
or
push
movs
add
inc
cdq
jo
xor
iret
mov
sub
adc
jg
lods
push
cdq
test
mov
sub
adc
rcl
xchg
mov
inc
aas
add
cmp
inc
in
cmp
retf
out
xlat
shl
mov
imul
push
dec
adc
inc
leave
neg
xchg
pop
stos
movs
bound
sbb
cmps
lods
outs
add
sub
cmp
dec
ror
push
or
les
int3
push
mov
push
pop
ret
sbb
xor
hlt
inc
pop
adc
push
jno
mov
jno
jge
aaa
movs
push
jo
es
jp
mov
xchg
scas
add
call
(bad)
cmp
mov
cs
je
add
dec
adc
(bad)
and
and
mov
and
dec
jnp
jmp
cs
lds
and
les
les
mov
jne
cmp
jbe
shl
mov
or
ror
push
sti
mov
adc
xor
loopne
sbb
inc
aad
cmp
movs
fmul
mov
inc
js
loop
xor
pop
add
les
pushf
shr
rcl
ins
cdq
cdq
mov
xchg
jg
mov
and
pop
out
xchg
xor
or
ror
aam
and
call
xor
movs
mov
shl
push
repz
adc
pop
or
test
sbb
mov
mov
pop
dec
test
push
push
nop
test
lea
in
js
add
or
mov
xlat
std
cmp
add
movs
add
inc
lods
mov
xchg
jno
cdq
mov
mov
push
mov
sahf
xchg
fld
rol
sub
test
sub
or
pusha
fmul
ror
cwde
popw
add
repnz
stc
je
stos
gs
push
sar
sahf
ins
movs
sar
fidivr
(bad)
fistp
(bad)
cwde
daa
xchg
xor
and
in
mov
dec
jge
scas
ret
push
adc
pop
pop
jmp
ret
mov
inc
jo
inc
es
jl
movs
popf
inc
lods
outs
cwde
cmc
dec
sub
outs
adc
inc
call
mov
cmp
pop
cmps
mov
cmp
mov
pop
cs
gs
add
sbb
mov
retf
mov
pushf
or
lods
sbb
ins
fidivr
push
inc
scas
dec
mov
adc
add
ficomp
push
nop
popf
data16
jge
cdq
or
test
push
test
(bad)
repnz
xchg
inc
popa
sbb
inc
ins
pusha
mov
jo
lods
mov
inc
add
xchg
nop
lock
repz
sbb
and
cmp
adc
cs
mov
inc
pop
adc
jno
jo
(bad)
mov
xchg
cli
mov
call
test
jle
mov
jno
xchg
push
jl
sbb
jle
cmp
fucomp
jo
push
sub
or
inc
(bad)
pop
clc
push
pop
sub
pop
outs
adc
xor
sbb
jne
nop
push
adc
jecxz
ffree
mov
popf
fucomp
(bad)
push
adc
or
jo
in
or
push
push
inc
ficomp
in
loop
sub
dec
loopne
adc
in
aaa
mov
adc
inc
jo
(bad)
(bad)
ror
jnp
push
psrad
and
xchg
dec
mov
xor
sub
lea
sub
loopne
out
in
rol
mov
mov
sbb
inc
enter
inc
shl
and
push
and
rcr
test
and
or
mov
in
adc
fist
fimul
mov
jae
jmp
movntps
adc
hlt
jmp
pop
add
shrd
xor
mov
(bad)
mov
lods
clc
and
cmp
fcomi
xchg
jbe
push
mov
sbb
imul
xor
mov
dec
sub
int3
push
rol
les
popf
hlt
pop
mov
push
pusha
xor
lds
loope
and
enter
daa
in
lea
arpl
mov
xchg
cld
aad
push
adc
mov
in
dec
sar
dec
inc
ja
push
sub
adc
enter
push
ins
jmp
cmp
outs
sub
push
or
mov
and
xor
sub
rcl
xchg
sub
mov
shl
fmul
inc
and
xor
and
adc
sub
push
lea
mov
mov
mov
rol
inc
jecxz
add
out
push
sbb
pop
push
pmuludq
push
sbb
mov
enter
mov
clc
mov
(bad)
pop
lock
sub
push
mov
mov
or
enter
jle
pop
jae
xor
or
shr
(bad)
xor
jb
push
aam
adc
and
push
dec
adc
sub
aaa
dec
add
add
call
mov
jmp
sub
xor
in
pop
dec
inc
enter
pop
aas
lods
mov
dec
sbb
dec
add
jne
loop
sub
add
add
int3
stos
push
add
add
or
and
jne
cmps
loopne
pop
movs
popa
sub
xchg
aaa
ret
js
das
pop
push
lea
adc
and
fmul
and
push
sbb
jne
jmp
iret
xor
xchg
ja
sbb
and
cmp
xchg
les
cmp
push
dec
sub
in
jae
lods
inc
jge
jne
cs
push
data16
clc
pop
test
ret
repnz
xchg
jbe
cdq
cs
adc
and
adc
mov
push
inc
jo
cs
clc
and
lds
lods
inc
push
xchg
inc
or
adc
cmps
fsubr
adc
lock
ret
or
add
and
sbb
pusha
retf
movs
and
mov
mov
int3
test
dec
xor
mov
daa
rol
or
adc
fild
aaa
dec
loope
sbb
sar
add
sub
jae
sbb
or
add
and
or
sub
add
mov
test
dec
dec
pop
cmps
push
clc
lods
sbb
add
ds
cmp
push
fist
jmp
popa
inc
loope
fwait
imul
daa
and
add
add
mov
not
and
pop
adc
cs
popf
es
adc
inc
retf
clc
test
xor
xchg
cs
add
mov
je
cmp
push
inc
sub
sbb
add
add
push
ret
pop
and
mov
vmaskmovdqu
icebp
div
sub
or
mov
lods
jo
inc
imul
rcr
adc
sub
dec
push
loope
sub
push
cmp
test
int
addr16
pop
nop
push
mov
dec
inc
mov
ss
das
mov
push
push
add
mov
sahf
cmp
mov
inc
xchg
jns
inc
mov
pop
add
add
jo
inc
sbb
push
fnstcw
je
adc
lea
outs
and
inc
or
sbb
xchg
lods
or
and
int
movs
and
test
and
shl
cwde
test
push
jge
fsub
test
add
pusha
push
add
or
push
mov
xchg
or
lea
repnz
sub
or
mov
es
or
jbe
movs
push
pop
and
or
xchg
imul
xchg
cmp
ins
jno
ds
(bad)
popf
(bad)
lds
and
mov
mov
icebp
pop
mov
dec
ins
cli
or
push
pop
repnz
xor
es
xchg
hlt
xchg
mov
xchg
cwde
lea
in
pop
fcomip
mov
jl
enter
inc
push
test
xchg
hlt
xchg
push
das
mov
pop
icebp
mov
nop
or
fst
push
pop
sbb
les
jle
mov
lock
dec
inc
add
outs
sub
sbb
add
jno
les
cs
(bad)
call
and
push
add
dec
sub
adc
sbb
xor
out
push
and
push
push
xchg
je
les
and
sub
test
bswap
push
jbe
xchg
adc
push
mov
mov
(bad)
mov
getsec
sbb
shl
ja
loopne
retf
jno
or
add
jmp
aam
add
into
hlt
and
lods
add
and
(bad)
(bad)
fwait
jmp
sub
or
or
pop
inc
sbb
fnstenv
adc
mov
xor
jg
or
daa
test
and
(bad)
push
xor
pop
pop
jns
and
mov
mov
lea
sahf
out
stos
mov
mov
loope
push
jne
adc
test
leave
push
cdq
dec
push
pop
mov
scas
sub
dec
jecxz
cld
movs
and
xor
pop
es
daa
inc
test
je
lods
leave
pop
lock
pop
xor
push
or
and
sbb
push
(bad)
loopne
movs
or
pop
dec
push
pushw
pop
or
repz
add
and
loope
or
sub
sub
cld
mov
movs
sahf
fistp
popa
stos
nop
dec
addr16
xlat
mov
or
into
mov
test
adc
mov
cwde
pushf
jnp
gs
retf
cmp
int
ret
repnz
xchg
fdiv
fsubr
or
sahf
mov
loop
mov
hlt
cmp
and
jne
adc
pushf
dec
dec
jge
dec
pop
jmp
movs
or
and
shr
xchg
clc
and
or
sahf
test
loop
popf
cmp
sub
clc
retf
xchg
sahf
loop
fnstcw
rcr
icebp
popa
push
push
adc
dec
sub
mov
loop
push
inc
push
mov
retf
jle
or
or
pop
sbb
jne
mov
(bad)
(bad)
fwait
sti
xchg
mov
xchg
iret
jle
bound
mov
jo
dec
aam
mov
fsubp
adc
(bad)
je
or
loopne
sub
push
sbb
mov
inc
aam
dec
add
shr
push
pop
sbb
mov
sbb
sbb
add
and
movs
jns
stos
ds
pop
es
ss
dec
cs
lods
jl
not
sbb
into
push
push
popa
and
and
jg
clc
xor
lds
push
sahf
add
xchg
jmp
cwde
test
das
xchg
sub
sub
xchg
stos
lock
xor
or
mov
(bad)
pop
mov
jb
cmp
aad
rol
cdq
adc
nop
call
inc
and
xchg
das
sub
adc
loope
xor
sbb
or
test
pop
or
mov
dec
push
push
sbb
or
icebp
pop
or
popa
cld
and
test
adc
adc
outs
or
out
or
pop
(bad)
mov
and
out
jle
in
xchg
shr
cmp
je
dec
jne
mov
push
pop
cs
add
clc
jmp
retf
sar
hlt
in
jmp
in
test
add
xchg
ret
xchg
cmp
xchg
out
adc
cld
push
dec
push
dec
(bad)
cs
sbb
mov
(bad)
fidiv
mov
fsubr
mov
cmp
dec
or
lahf
sbb
fbstp
mov
xchg
or
jmp
clc
retf
or
shl
pop
ins
mov
inc
cmp
sbb
push
popa
popf
rol
add
adc
jg
fmul
push
cmp
dec
clc
mov
dec
pop
inc
mov
push
popf
sbb
dec
sbb
pop
dec
sbb
adc
jae
sub
adc
dec
push
add
xchg
mov
pop
push
push
dec
mov
sbb
xchg
or
sbb
jne
jmp
cmp
inc
ret
add
dec
mov
or
xchg
lods
sbb
out
fwait
dec
cmp
fmul
add
test
push
out
sub
adc
or
nop
or
or
push
stos
add
inc
cwde
imul
fdivr
test
popa
imul
inc
imul
iret
jns
pop
enter
push
stos
pop
shr
imul
outs
loope
mov
adc
add
aaa
pop
add
jbe
pop
popa
mov
jmp
pop
sub
xor
call
push
int
push
shr
and
lods
push
or
sbb
xor
aad
mov
jl
icebp
inc
and
hlt
mov
outs
mov
repz
push
xlat
outs
inc
cwde
jnp
xchg
test
fisubr
in
pop
xchg
mov
loop
xor
push
fild
cmp
adc
scas
inc
fdivrp
fdivr
sbb
dec
add
push
aam
add
dec
call
mov
or
jl
add
not
jle
(bad)
sub
adc
mov
or
sbb
int3
xor
push
fmul
xchg
sub
sub
or
jge
retf
jge
fdivr
adc
inc
xor
arpl
loop
jle
push
aas
shl
sbb
jecxz
xor
and
mov
push
push
add
and
outs
or
rcl
popf
outs
jp
sbb
or
sub
dec
inc
pop
shl
xchg
ret
add
adc
(bad)
std
cmps
xor
pop
test
or
dec
jne
add
xor
adc
inc
js
lods
sub
cli
ret
sbb
mov
mov
jmp
xor
sub
push
sbb
push
mov
test
ret
test
ja
bound
push
xor
mov
sub
pop
sbb
jb
mov
ja
cmp
je
mov
or
jg
sbb
je
mov
adc
je
test
jecxz
xor
xchg
fiadd
(bad)
icebp
add
jecxz
push
pop
je
push
push
jnp
nop
ds
or
loop
xchg
nop
ins
push
es
dec
aam
mul
mov
jb
push
iret
inc
and
cwde
cld
cs
fucomp
or
fist
daa
jne
push
jle
sbb
rcr
stc
mov
or
sbb
and
paddsb
mov
ja
pop
out
mov
sti
pop
imul
or
or
push
add
popf
add
or
add
fimul
mov
adc
outs
outs
pusha
pop
scas
push
icebp
cdq
outs
pop
call
jge
sub
cmc
sub
and
repnz
mov
push
hlt
in
push
inc
mov
sbb
xchg
aaa
aaa
dec
xadd
ret
jnp
cwde
dec
push
mov
dec
test
(bad)
sbb
xchg
fwait
or
push
mov
mov
loopne
add
fistp
jmp
or
xchg
sbb
icebp
inc
add
loopne
ret
and
push
add
mov
enter
outs
pusha
je
idiv
mov
add
pop
cmp
ret
mov
into
test
ret
pushf
ret
aam
inc
inc
adc
mov
ins
xchg
jo
mov
and
fwait
mov
xchg
push
pusha
clc
jle
imul
(bad)
aas
xchg
pop
add
pop
call
mov
(bad)
adc
xchg
clc
push
xchg
lods
sub
test
mov
ret
adc
cmp
mov
cmc
and
aaa
jo
xor
lahf
scas
and
pushf
outs
jl
mov
cmc
mov
xchg
jmp
sbb
xchg
je
jl
or
les
aam
js
bound
mov
push
call
cmp
adc
call
aam
ror
and
(bad)
jecxz
pop
xchg
lahf
lahf
add
mov
mov
dec
add
jmp
xlat
fimul
icebp
xor
and
xchg
adc
inc
es
neg
xchg
mov
mov
jmp
add
cld
out
jb
cmp
das
inc
sbb
adc
stos
popf
clc
ds
dec
fnstcw
loopne
push
test
sub
shr
cmp
cmp
add
daa
fisubr
hlt
iret
lods
repnz
xor
cmp
xchg
aam
xchg
mov
jbe
or
and
nop
jbe
cmp
(bad)
pop
adc
push
loopne
mov
mov
push
stos
mov
cdq
push
and
dec
aad
pop
adc
ret
or
test
push
inc
adc
jo
xor
mov
mov
cld
push
lea
jge
xor
jmp
push
cld
jbe
push
pop
jno
jae
sbb
in
jb
clc
test
scas
push
loopne
jl
test
sub
bound
mov
and
int
ds
xor
mov
std
or
loop
pop
pop
pop
xchg
xchg
dec
dec
rol
xor
inc
mov
add
mov
out
cmp
mov
push
xchg
push
jno
adc
lock
loopne
pop
xchg
out
inc
sub
sbb
jmp
call
adc
inc
cmp
rcl
rcl
sbb
mov
lea
cmp
cld
clc
mov
jbe
pop
mov
or
arpl
icebp
sbb
pop
sbb
setns
fiadd
cmp
mov
xor
inc
loopne
jp
data16
sbb
adc
add
adc
dec
lahf
int
xchg
xchg
inc
(bad)
fcmove
xchg
loope
test
jnp
cdq
rcr
pop
add
jbe
add
lds
inc
inc
ret
adc
(bad)
xor
cld
jg
sub
popa
adc
push
mul
inc
sub
enter
cld
fnsetpm(287
ret
sar
push
arpl
cld
or
(bad)
cmp
sub
jo
and
add
xchg
dec
jmp
mov
lock
cmp
bound
pop
pop
or
das
jg
or
or
push
pop
in
test
iret
jno
enter
cmp
xor
cmc
das
outs
imul
adc
inc
mov
mov
xchg
pop
push
inc
jnp
in
ins
xchg
int3
fmul
push
inc
add
cs
inc
mov
call
or
ja
push
nop
fcmovnbe
ja
cwde
test
dec
bound
add
sbb
add
cmp
add
mov
push
and
dec
movs
dec
mov
sbb
mov
jno
cwde
daa
jnp
mov
ins
dec
cmp
push
adc
inc
xchg
push
das
fisubr
movs
adc
inc
cmp
pop
and
loopne
test
sub
dec
sbb
add
mov
enter
(bad)
and
call
dec
movs
call
jns
popa
clc
fimul
sub
shr
ins
adc
push
pop
outs
mov
pop
cmp
fsub
pop
fsubr
xor
repnz
sub
call
add
add
adc
push
or
push
cmovge
dec
inc
xchg
jo
sbb
fwait
dec
ret
cmp
dec
fs
popf
xor
adc
enter
addr16
jae
das
ja
xor
xor
dec
jbe
sbb
je
or
push
imul
xchg
mov
xor
int3
push
loopne
mov
jl
or
fcomp
xor
icebp
sub
hlt
int3
iret
push
bound
mov
sub
push
lods
test
dec
loop
mov
sbb
pop
add
sbb
pop
push
es
mov
push
mov
test
push
(bad)
enter
cld
add
xchg
jno
mov
movs
(bad)
les
add
xor
mov
cdq
int3
mov
ret
adc
enter
cwde
rcr
stos
mov
dec
and
add
ret
sar
adc
add
inc
das
dec
(bad)
adc
sbb
out
fdiv
jo
or
shl
sub
lds
adc
jp
lock
loopne
leave
addr16
lahf
scas
dec
clc
sbb
mov
les
sub
mov
push
mov
xchg
daa
pop
jns
add
add
scas
shl
cld
jo
push
jns
(bad)
cmp
mov
sub
or
adc
xchg
rcr
loopne
and
mov
sub
mov
xchg
retf
in
enter
retf
movs
sbb
jecxz
or
in
pop
das
xchg
call
nop
and
cwde
inc
jae
lods
or
mov
dec
add
lods
inc
test
mov
sub
in
jo
hlt
or
or
dec
sbb
sbb
mov
mov
adc
int
std
push
and
loop
(bad)
sbb
pop
push
fisub
xchg
shl
fbld
rcl
lods
mov
adc
cmp
icebp
jae
movs
data16
mov
sbb
push
cmc
imul
and
xchg
mov
enter
and
sub
daa
mov
(bad)
icebp
push
fs
push
scas
call
xchg
or
mov
test
jo
adc
add
lock
ret
and
dec
je
sbb
mov
sub
xor
push
push
add
add
mov
aam
push
test
dec
add
popf
lods
push
jnp
mov
add
xor
cli
mov
xchg
mov
test
(bad)
mov
mov
pop
mov
cmp
(bad)
jns
int3
fisubr
loope
ret
arpl
xchg
jo
push
cwde
test
jo
push
inc
cmp
test
mov
add
pop
nop
jo
cmp
leave
or
mov
pop
std
inc
push
adc
aam
pop
ret
add
mov
adc
xchg
sbb
aaa
xchg
adc
add
inc
lock
xor
add
mov
pop
push
add
cmp
comiss
mov
lds
int
sub
cmps
xchg
push
push
inc
add
sub
add
jne
push
mov
outs
movs
(bad)
jbe
mov
das
mov
movs
popa
xor
cmc
add
(bad)
sbb
push
push
shl
test
test
inc
icebp
mov
loope
test
cmp
add
sbb
loop
jae
xor
loopne
gs
inc
cs
aad
jg
fst
mov
rol
cdq
test
jecxz
cwde
xor
or
lods
pop
daa
cwde
and
pop
inc
ret
mov
cmp
inc
add
inc
scas
mov
push
loope
xor
mov
js
add
rcl
inc
push
fldenv
jo
pop
sub
ret
xchg
clc
js
dec
add
repz
pop
add
fistp
cmc
cmp
mov
sbb
stos
xor
int
retf
push
push
push
ret
adc
sub
popa
xor
mov
inc
pop
adc
call
mov
inc
cmps
mov
and
inc
cmp
icebp
add
or
pushf
lahf
add
call
or
int3
push
add
push
or
dec
add
nop
jbe
jne
jp
iret
(bad)
adc
mov
or
or
inc
jmp
leave
idiv
adc
sbb
adc
push
xor
adc
xchg
sub
clc
xor
cmp
sbb
dec
cmp
sbb
out
cs
iret
in
cmps
sahf
adc
call
sbb
lsl
ret
sub
(bad)
cmp
je
ja
mov
loope
(bad)
and
or
rol
or
lahf
xor
sbb
cvtps2pd
cmp
ins
adc
sahf
jo
std
sbb
aad
lock
iret
xchg
shl
neg
int3
adc
test
mov
mov
sub
and
push
dec
xor
ins
push
in
push
outs
sar
xchg
push
hlt
mov
call
imul
mov
jo
push
es
into
dec
fisttp
pop
rol
retf
sub
pop
push
pop
retf
xchg
je
push
rcl
test
mov
push
or
xchg
xor
pop
cdq
aas
nop
ss
loope
sub
adc
add
xor
call
and
adc
push
xor
jo
nop
retf
in
adc
adc
ret
rol
jge
ret
dec
inc
mov
nop
pop
jo
stos
test
ins
adc
cs
inc
mov
sbb
retf
xchg
pop
push
sbb
ror
cmps
movs
mov
jmp
gs
imul
push
popf
call
iret
test
or
xor
(bad)
lahf
les
ret
(bad)
jne
sub
loope
int3
jnp
cmp
add
push
bound
xor
push
daa
lods
and
ins
and
push
call
imul
call
push
pop
push
fstp
push
inc
dec
sbb
adc
test
cmp
mov
add
fs
out
xchg
xchg
inc
mov
dec
or
daa
leave
mov
vphaddwd
cmp
jmp
in
and
aam
mov
sahf
call
adc
out
hlt
or
or
sbb
or
out
add
cmp
xor
cmp
jmp
cmp
out
xor
mov
sti
mov
int3
and
or
adc
mov
ret
or
lea
push
nop
pop
sbb
mov
mov
ins
pushf
or
mov
inc
or
pop
mov
out
cmp
dec
jmp
or
jnp
out
mov
xor
inc
imul
cmp
je
cmps
push
dec
(bad)
xor
inc
cld
shl
push
adc
or
push
out
add
mov
adc
push
add
sbb
test
sbb
lds
push
push
inc
iret
adc
jp
push
test
and
fcom
ja
sbb
cmp
inc
test
and
xor
call
test
and
sbb
adc
jle
and
outs
sub
fcom
push
fadd
call
mov
pop
and
push
aam
cmp
ins
loope
ss
je
sar
out
pop
int3
sbb
add
imul
mov
je
lods
scas
pop
xor
dec
or
adc
inc
xor
xor
fmul
add
mov
cmps
push
sub
inc
jge
test
inc
jo
add
push
inc
or
lock
adc
and
xor
inc
lods
mov
scas
imul
cmp
pop
dec
jmp
movs
cs
out
xchg
xchg
test
loop
push
retf
jbe
mov
mov
cmp
retf
pusha
pop
fnstenv
int3
pop
pop
mov
test
xor
xchg
jmp
shl
and
les
rcl
mov
jmp
xor
or
add
push
imul
mov
cmp
inc
mov
pop
fsub
shr
nop
xchg
inc
mov
ins
jge
dec
popf
adc
xchg
jge
cmp
jecxz
test
xor
lahf
call
sub
shl
cmp
dec
cmp
leave
mov
xor
or
xor
push
fidivr
movs
push
or
clc
push
ins
in
std
or
pushw
push
mov
jb
sub
in
xor
inc
mov
cmp
std
call
inc
push
inc
cmp
(bad)
mov
(bad)
sbb
and
aaa
pop
or
(bad)
cmps
xor
retf
lods
add
push
add
fmul
jae
leave
das
ins
pop
clc
cmp
mov
jno
inc
mov
xchg
cdq
add
ror
pop
adc
mov
push
xchg
clc
shl
sbb
shl
scas
jl
sbb
shl
push
push
xchg
and
hlt
mov
pop
aaa
movs
sub
test
dec
or
xor
add
ds
repnz
stos
sub
push
or
dec
or
loopne
popfw
push
loop
ja
cmp
and
sbb
sbb
push
mov
push
daa
icebp
inc
rcl
dec
cmps
outs
mov
or
ret
and
clc
fs
mov
mov
push
add
push
retf
mov
jne
aaa
mov
add
cld
mov
adc
mov
sti
shl
mov
sub
or
sub
lods
adc
inc
and
scas
push
sar
int
add
fstp
fwait
call
push
dec
outs
lods
test
inc
in
ror
push
xchg
mov
xor
dec
ret
mov
mov
ret
into
or
inc
loope
add
pop
sbb
adc
add
mov
jg
push
add
adc
test
push
mov
jbe
mov
or
cmp
xor
out
mov
fld
cmp
push
cmp
stos
mov
sub
shl
and
mov
lds
daa
icebp
es
sbb
ins
sub
test
(bad)
adc
stos
mov
nop
(bad)
(bad)
movs
push
xchg
leave
popf
test
add
adc
xchg
cmp
sahf
xor
lods
adc
pop
fs
pusha
jge
sub
xchg
xor
xchg
add
pop
lods
jno
push
or
mov
sbb
jecxz
or
add
(bad)
repz
popa
inc
dec
popf
fld
jbe
ja
in
push
aam
imul
mov
or
jbe
push
add
mov
sbb
popa
push
sbb
ss
int
test
mov
and
sub
add
test
or
pop
sbb
lds
jecxz
adc
mov
cmp
and
or
mov
and
movs
xchg
xor
fadd
mov
bound
adc
pop
or
test
xchg
and
out
mov
sbb
and
add
or
xchg
or
mov
enter
push
sub
pop
sub
leave
test
push
mov
dec
fisttp
inc
mov
jns
je
aam
cmp
and
xchg
cmp
sbb
hlt
mov
dec
inc
pop
or
inc
call
es
pop
mov
add
mov
push
adc
rcl
push
bound
add
pop
arpl
je
scas
add
xlat
fsubr
and
das
xlat
psllq
inc
icebp
pop
lea
add
and
dec
test
dec
sbb
in
pop
loope
jp
pop
movs
(bad)
sbb
push
das
jne
scas
sysenter
aas
fs
cli
jo
int
push
cmp
neg
loop
inc
sbb
ret
jae
and
add
movs
jo
mov
inc
and
mov
sbb
sub
or
adc
inc
cmc
int3
mov
xor
js
outs
movs
mov
lea
cmp
icebp
push
or
inc
jmp
and
stc
adc
std
mov
mov
(bad)
and
push
mov
and
movs
push
sbb
shr
xor
dec
or
sbb
aaa
mov
jmp
pop
jb
pop
mov
sbb
add
mov
pop
jmp
add
dec
add
mov
rcr
popa
add
mov
mov
adc
jo
mov
pop
loop
movs
mov
pop
sar
cmps
popa
lahf
inc
ins
ins
push
and
stc
mov
dec
loop
retf
call
mov
jmp
push
es
and
rcr
das
rcl
lea
das
lods
cmps
sbb
lock
sub
lods
xchg
sbb
add
mov
sub
in
mov
lods
push
xor
cmp
mov
sbb
stos
inc
cmp
(bad)
test
xor
out
les
je
sub
pop
aam
mov
push
push
in
movs
js
cmp
and
sub
sub
or
add
add
or
jb
push
add
jne
adc
mov
aas
mov
inc
(bad)
sub
add
fnstsw
cdq
les
push
cmp
dec
not
cmp
or
xchg
xor
xchg
xlat
sbb
sub
imul
mov
jl
xchg
test
(bad)
mov
sbb
xor
fcmove
(bad)
aam
clc
jno
and
nop
inc
cld
es
mov
mov
test
or
frstor
and
ds
mov
xlat
or
movs
inc
cmp
sbb
xchg
xor
cmps
inc
cmp
lahf
mov
retf
sbb
xchg
pop
or
pop
inc
jl
or
sbb
lgs
push
cmp
iret
mov
dec
and
and
or
inc
aad
push
(bad)
jo
sub
cmps
mov
or
mov
test
fbld
mov
mov
ror
push
call
xlat
sub
push
jne
jnp
out
mov
add
inc
cmps
retf
inc
mov
adc
cmps
or
lods
dec
(bad)
mov
pusha
fwait
xor
add
sub
enter
xchg
or
push
aaa
inc
mov
xor
add
scas
push
sbb
lock
imul
ds
cmp
dec
fwait
mov
test
inc
nop
sub
mov
push
mov
nop
xor
out
add
pusha
dec
or
add
mov
clc
and
jne
scas
and
(bad)
in
xchg
push
mov
je
or
dec
sahf
mov
or
sbb
pop
jbe
(bad)
pop
jmp
in
mov
aas
movs
cmps
lock
jl
pop
icebp
cmp
(bad)
rol
les
add
xchg
jge
icebp
or
mov
push
mov
movs
in
and
cli
mov
push
ret
adc
push
add
mov
dec
rcr
push
mov
push
push
jnp
add
cmps
cmp
fild
push
push
mov
mov
mov
dec
pop
in
push
mov
div
or
jo
in
icebp
js
ss
or
seto
outs
and
cmp
mov
adc
ret
jl
ja
call
push
retf
push
pop
xchg
pop
mov
sbb
xchg
pop
inc
sti
adc
jb
cmps
lods
repz
ja
or
iret
and
pop
bsr
xchg
pop
dec
inc
pop
sbb
sub
and
mov
hlt
into
mov
push
sub
add
mov
jg
push
retf
sbb
shl
test
mov
mov
push
dec
repz
xchg
clc
jg
push
lods
cmp
jmp
cmp
add
and
outs
rcr
not
jne
test
je
push
sub
add
push
stos
push
stc
adc
in
add
lods
mov
mov
mov
and
xlat
cmps
mov
add
pop
retf
les
dec
lahf
sbb
jmp
in
aas
jne
ftst
jne
es
in
test
mov
arpl
test
mov
lods
push
rol
js
push
mov
inc
movs
rcl
out
shr
and
pushf
leave
push
adc
js
mov
out
jle
lods
repnz
lods
mov
int3
dec
bound
call
ror
pop
lock
cmp
dec
and
inc
js
in
mov
cwde
xchg
sbb
and
xchg
mov
cdq
fmul
xchg
dec
jo
neg
xchg
or
test
cmp
loopne
pop
mov
dec
mov
(bad)
dec
xchg
call
and
fdivr
add
enter
xor
adc
ror
push
and
mov
mov
lea
cdq
and
sub
push
or
xchg
sbb
jae
mov
inc
or
inc
add
xchg
add
jo
adc
inc
hlt
adc
ror
(bad)
enter
pop
arpl
sar
rol
mov
add
dec
or
add
movs
jo
dec
mov
fmul
push
aas
ds
ss
mov
loopne
add
lods
mov
jo
or
adc
loopne
in
cmp
xor
push
push
inc
ins
inc
sbb
enter
shr
or
and
mov
scas
(bad)
push
es
dec
cmp
push
add
rcl
mov
adc
or
cmp
shl
test
xor
and
sbb
movs
xchg
push
push
inc
sar
jmp
cmp
cmp
cwde
pop
adc
ins
repnz
mov
jbe
aas
sub
and
inc
fwait
or
inc
xchg
or
pop
jo
dec
repz
inc
ss
mov
mov
xor
mov
sbb
xchg
jge
dec
and
je
sub
ja
add
lahf
call
cmc
xchg
adc
repz
clc
pop
or
or
je
jmp
xchg
mov
xchg
enter
jo
pop
jno
pop
or
ins
or
in
push
dec
js
mov
mov
daa
loop
mov
and
shr
clc
es
xchg
repz
in
xor
adc
mov
rcl
adc
nop
mov
cmps
sbb
pop
xor
add
mov
and
jb
jo
jne
imul
popf
push
and
or
xor
pushf
mov
cmp
or
jmp
jo
adc
mov
jne
inc
scas
es
cmps
aaa
es
pop
fmulp
add
fs
ins
cmp
or
fwait
ret
push
dec
(bad)
pop
adc
pop
dec
enter
xchg
cmps
mov
inc
push
pop
add
jmp
jbe
cmp
sar
call
and
js
es
mov
dec
sbb
je
and
inc
mov
add
sub
xor
push
add
jnp
jns
cdq
pop
mov
movs
add
sar
jnp
sar
push
pop
add
jb
xor
shr
xchg
jmp
aam
je
cmp
popa
jmp
pop
fmul
aam
add
mov
shr
(bad)
cmp
mov
pop
cmps
xor
hlt
loope
jp
lahf
inc
cli
cmp
ss
popf
inc
daa
pop
dec
sbb
ja
stc
ins
xchg
adc
add
mov
test
xchg
lock
cdq
adc
and
and
push
inc
adc
mov
fcomp
add
ror
or
dec
jmp
shl
dec
push
jne
pop
or
inc
sbb
xlat
inc
test
fidiv
ss
cmc
mov
push
or
mov
mov
out
sub
mov
mov
sub
and
arpl
es
add
out
xchg
xchg
mov
into
inc
cmp
fadd
mov
mov
mov
sbb
jge
xor
in
inc
cwde
dec
pop
outs
mov
js
add
cmps
xchg
bound
add
dec
pushf
nop
cmp
or
and
imul
mov
xor
aam
cwde
or
mov
add
ss
fidiv
test
ret
mov
push
sbb
cdq
and
xchg
and
test
dec
rcr
retf
jmp
inc
or
jge
and
adc
mov
pop
shr
push
sbb
mov
or
xchg
sahf
jo
or
inc
mov
mov
fdivr
xchg
xor
jmp
out
retf
in
dec
add
in
shl
nop
push
lods
sbb
xor
dec
jg
icebp
push
add
call
mov
(bad)
out
push
add
inc
xacquire
push
ss
pop
les
push
push
scas
mov
add
(bad)
fiadd
push
jp
(bad)
fadd
call
sub
and
adc
je
stc
lock
dec
sti
je
push
xor
mov
nop
jmp
xor
push
inc
mov
cmc
push
mov
loopne
mov
adc
mov
add
jne
mov
push
add
test
inc
mov
nop
lds
fimul
or
pop
push
or
jmp
cmp
sbb
jb
xor
outs
sbb
add
adc
cmp
cdq
xor
or
inc
loopne
pop
ret
dec
push
ret
lds
xor
cmp
imul
(bad)
xor
hlt
mov
push
sbb
mov
sahf
mov
push
lods
fist
movs
pusha
jo
popf
mov
mov
mov
int
jmp
fstp
xor
outs
loope
mov
pop
imul
out
arpl
cmp
test
into
mov
jo
ins
ffreep
xor
inc
push
mov
add
bound
jg
call
xor
pop
and
add
pop
rol
(bad)
out
(bad)
sub
(bad)
mov
sahf
out
pop
xor
aaa
(bad)
in
cmp
mov
xor
xor
jp
or
enter
cmp
iret
push
cmp
cmp
mov
xchg
jl
cs
inc
shl
test
in
popf
add
sbb
(bad)
mov
mov
jmp
jne
pop
aad
cmp
pop
into
adc
xor
cdq
cmc
aaa
push
ins
or
or
hlt
push
into
sbb
push
cmovs
add
dec
les
test
push
sbb
jo
xchg
mov
push
call
shl
retf
js
jp
sbb
sti
sbb
inc
mov
add
aam
sub
push
int
push
popa
dec
mov
push
test
jo
mov
test
inc
cdq
imul
test
shr
mov
xchg
lods
push
sbb
jns
fldenv
sbb
add
push
(bad)
mov
pushf
not
movs
out
or
cwde
rol
fwait
mov
pusha
or
rcr
lea
test
js
mov
movs
add
xlat
mov
cmps
sahf
xor
movs
test
cmps
inc
inc
xor
sbb
stc
xchg
inc
mov
ins
mov
hlt
fbld
pop
fcomp
jbe
mul
adc
js
add
dec
fwait
pop
dec
pop
inc
push
xchg
xor
cdq
pop
cmp
popa
or
es
cmp
push
cmp
js
and
inc
or
adc
adc
je
jecxz
pop
fldcw
adc
inc
rcl
or
leave
inc
mov
call
in
and
jle
inc
adc
xchg
and
and
mov
shl
push
nop
sub
push
fsubr
push
mov
sbb
or
add
add
jae
add
rol
jl
mov
sbb
outs
adc
mov
mov
xor
test
pusha
adc
sbb
adc
aad
and
xchg
and
or
and
outs
xor
bound
pop
mov
jo
xchg
shl
loope
sub
or
inc
or
dec
adc
add
sub
mov
add
adc
fdivr
add
inc
xor
xor
nop
adc
cmp
js
xchg
les
adc
pop
adc
bnd
jbe
ds
mov
sbb
mov
fld
dec
(bad)
nop
mov
retf
shl
aad
lock
mov
imul
icebp
add
pop
fild
xchg
(bad)
push
cld
adc
dec
cmp
imul
mov
xchg
jb
fisttp
int3
jl
inc
dec
xor
and
pop
push
xor
mov
xor
sub
pop
adc
movs
or
aam
push
cs
xchg
icebp
popa
and
fiadd
inc
mov
and
jg
push
inc
cmps
iret
nop
data16
xchg
jp
sbb
mov
adc
fiadd
dec
push
mov
leave
push
outs
aam
adc
adc
dec
sub
pop
out
or
jno
aam
hlt
xor
jecxz
iret
mov
div
ds
mov
pop
clc
xor
jbe
inc
sbb
sub
or
add
pop
cmp
push
push
mov
lahf
in
push
nop
cmc
mov
dec
call
add
push
mov
xlat
test
enter
push
xchg
fsubr
cmp
xchg
or
ret
add
add
mov
aas
leave
push
jl
sbb
outs
lea
xchg
clc
xor
rol
jmp
aaa
ins
or
sbb
fs
jbe
inc
adc
pop
push
in
dec
mov
or
push
sub
cmps
cmp
imul
(bad)
push
sub
add
aaa
ins
sub
cmp
inc
jle
or
push
add
dec
inc
ds
push
xor
inc
mov
add
mov
jae
xchg
inc
jl
nop
pop
dec
mov
popf
pop
xor
mov
repz
add
or
inc
add
daa
dec
jmp
mov
mov
xchg
push
ret
inc
mov
outs
fwait
int
jns
xchg
not
sub
test
inc
call
mov
sbb
add
fld
dec
sbb
mov
fs
adc
daa
push
cs
xchg
imul
add
xor
and
jmp
ss
popf
mov
int3
shl
sbb
repnz
xchg
pop
add
mov
and
repz
or
ins
mov
dec
shl
imul
cmp
(bad)
and
sub
push
mov
lods
dec
mov
or
xor
jne
xchg
je
mov
pop
nop
xor
pop
cmps
and
shr
pop
xor
mov
pop
daa
lods
pusha
daa
push
add
fistp
dec
jmp
cmp
or
in
xor
loopne
es
mov
daa
push
(bad)
lea
fidivr
mov
mov
mov
sar
add
mov
ret
shl
dec
cmp
dec
mov
mov
pop
jl
rcr
int
mov
pop
gs
stc
lods
inc
xor
movs
das
sbb
shl
loopne
or
push
loopne
(bad)
dec
xlat
push
xchg
jnp
sub
les
dec
inc
movs
repz
pushf
cmp
xchg
int
aam
call
or
jo
test
dec
jmp
or
push
retf
cmc
or
arpl
retf
pop
push
pop
inc
add
dec
adc
cmp
(bad)
movs
sub
and
mov
std
fisttp
mov
call
adc
in
xor
pop
test
adc
inc
jmp
sbb
adc
add
scas
cmp
je
push
mov
xchg
push
sar
data16
dec
lods
leave
push
jmp
(bad)
mov
scas
xchg
loop
(bad)
fdivr
mov
adc
js
adc
mov
lds
jo
add
dec
jmp
test
mov
outs
add
pop
dec
test
pop
dec
push
hlt
cmp
pop
jge
push
mov
xor
jo
out
mov
ret
pop
mov
cdq
push
jnp
aas
cld
adc
push
lea
inc
mov
in
je
xchg
cmps
push
mov
push
or
sub
dec
add
mov
inc
push
xlat
pop
shr
fs
mov
add
retf
arpl
jle
adc
sub
push
mov
cmp
lods
mov
xchg
or
sbb
cdq
add
mov
sbb
lods
aaa
xor
push
sti
add
add
mov
add
adc
add
inc
sub
push
nop
jnp
in
test
lahf
add
mov
mov
xor
sub
add
das
mov
or
dec
or
xor
stos
or
dec
lahf
data16
cvtps2pi
pop
mov
mov
pop
pop
add
mov
fmul
retf
mov
xchg
aaa
leave
push
cmp
push
neg
test
xchg
inc
pushf
arpl
mov
xchg
mov
or
cld
outs
movs
enter
call
xor
mov
cli
or
and
mov
jnp
xchg
mov
test
sbb
xor
and
js
or
or
mov
movntq
out
ret
inc
inc
pop
xchg
pop
inc
adc
inc
(bad)
fs
xor
out
push
test
jmp
retf
jne
mov
pushf
pushf
xor
ret
aas
fmul
adc
es
jle
xor
xchg
rcl
sub
fwait
ss
mov
xor
push
call
cmp
ds
aaa
adc
shl
and
dec
cwde
ins
enter
jns
call
iret
and
xor
adc
mov
xchg
mov
ja
jecxz
jp
adc
out
sub
mov
add
test
(bad)
popf
or
popa
xor
mov
mov
cmp
clc
lds
outs
adc
sti
sub
mov
cmp
push
std
cmp
test
and
(bad)
cmp
rcl
add
mov
mov
cld
lock
push
pop
mov
addr16
(bad)
cs
cmp
push
ret
pop
sub
mov
loopne
sbb
or
ror
jmp
mov
lea
or
sub
xor
mov
and
leave
arpl
push
cld
test
dec
cmp
daa
cmp
xchg
adc
data16
test
jne
sar
retf
clc
pop
ins
jg
push
dec
sub
jecxz
push
cmp
adc
pop
dec
xchg
jmp
lock
pushf
mov
iret
pushf
inc
nop
je
inc
inc
data16
lods
add
push
xchg
idiv
xchg
test
(bad)
push
movs
mov
pop
mov
cmps
jmp
in
dec
fs
pop
pop
add
inc
mov
push
dec
sbb
xchg
cmp
jo
adc
pop
mov
cld
out
mov
jecxz
cld
dec
mov
(bad)
mov
sub
xchg
jl
pop
mov
fld
xor
sub
sbb
ror
pop
mov
rcl
ins
enter
add
clc
sub
or
jnp
push
das
pop
xchg
mov
mov
add
jne
or
mov
sbb
mov
or
ror
push
inc
shl
push
jl
xor
sbb
add
push
mov
adc
mov
push
xchg
outs
ins
or
xor
cmp
sar
aad
nop
pop
xor
add
mov
cs
push
jb
daa
mov
test
inc
mov
loope
or
inc
pop
fcom
call
fiadd
and
adc
pop
popa
cmp
sub
xor
and
test
xchg
pop
stos
and
adc
mov
lock
xor
or
pop
jecxz
or
pop
pop
dec
lods
pop
inc
cdq
mov
in
and
push
add
in
push
and
rol
pusha
das
icebp
xor
mov
adc
adc
xor
aas
test
out
xchg
xor
and
sbb
adc
jecxz
nop
icebp
pusha
mov
or
xchg
jmp
inc
test
lock
cmp
shr
adc
jecxz
stc
mov
test
add
add
adc
cli
add
inc
pop
or
ret
sbb
adc
loop
and
jl
add
mov
lods
daa
fs
lahf
sub
inc
inc
adc
inc
xchg
sar
dec
imul
add
or
push
sub
mov
push
dec
jns
jmp
xchg
repnz
mov
dec
or
pop
mov
shl
push
adc
sub
push
fabs
pop
cs
and
push
inc
inc
aas
dec
leave
adc
mov
jb
inc
and
add
movs
and
adc
sub
mov
mov
xor
mov
push
push
ret
jle
add
pop
xor
pop
jne
or
dec
in
sbb
mov
add
scas
adc
out
push
arpl
or
add
shl
jne
or
das
inc
call
push
push
cmps
repnz
popa
je
push
aaa
imul
lea
dec
cmp
mov
enter
iret
jl
les
shr
call
jne
xor
ror
cwde
sub
sub
and
push
dec
ss
add
adc
aam
mov
jl
pop
lea
retf
gs
call
or
adc
xor
aam
fidiv
xor
cmpxchg
sub
ins
cmp
adc
(bad)
jmp
rcr
pusha
sbb
cmps
stos
xor
scas
mov
pop
add
or
test
jge
(bad)
sub
imul
call
pop
test
icebp
sub
or
or
push
sub
js
inc
dec
mov
and
retf
call
sub
dec
shl
or
jecxz
adc
adc
push
sti
stc
jmp
adc
dec
imul
inc
inc
movs
fnstcw
pop
inc
cmps
in
mov
mov
push
xchg
pop
pushf
lea
bound
and
(bad)
ret
ja
adc
mov
push
sbb
sub
push
adc
icebp
xor
stos
pop
adc
mov
xchg
(bad)
scas
mov
cmp
mov
lea
hlt
scas
dec
dec
sbb
push
ds
fst
push
xchg
jb
push
arpl
push
and
cmp
outs
sbb
rol
add
push
jo
or
or
bound
mov
dec
les
adc
std
xchg
add
es
and
and
add
test
sub
xchg
mov
js
jnp
cmp
int3
jae
int3
add
jae
shr
add
jno
mov
ret
push
xchg
(bad)
dec
stos
pop
aaa
mov
call
lods
dec
dec
xchg
inc
add
jae
mov
pop
add
hlt
nop
xchg
push
inc
sbb
icebp
mov
out
pop
lods
and
add
cmp
jmp
in
lea
jo
inc
and
adc
push
or
movs
sbb
in
adc
outs
mov
ja
jbe
xchg
xor
or
xchg
jge
and
dec
js
pop
lds
ret
push
xor
(bad)
fldenv
cs
movs
mov
movs
jo
sbb
push
movs
jge
add
add
xor
inc
mov
ins
xor
out
daa
dec
push
pop
xchg
dec
or
adc
inc
je
or
add
fsubr
xor
and
push
adc
dec
ja
fistp
and
add
push
jmp
cwde
cmc
ja
les
outs
mov
xchg
shr
fimul
xor
loopne
scas
inc
movs
test
data16
sub
add
lock
popa
inc
pop
mov
imul
fimul
mov
jmp
push
and
inc
or
add
mov
or
inc
cld
aaa
(bad)
jle
xor
push
sahf
sub
test
sub
sbb
pop
adc
inc
or
(bad)
int
mov
ins
jmp
ins
push
pop
mov
and
sbb
mov
add
jle
adc
mov
fidiv
cmp
xor
data16
or
or
fs
add
loopne
aam
sahf
dec
loope
scas
or
call
pop
jnp
cmp
ror
mov
inc
popa
sbb
fdivr
icebp
pop
xchg
fs
dec
adc
jp
mov
jbe
cmp
or
sbb
icebp
pop
test
and
pop
aad
das
inc
push
pop
push
jl
imul
pushf
cmps
ss
push
ret
push
adc
ins
and
(bad)
sbb
cmp
jg
loope
mov
clc
imul
push
jmp
xor
nop
add
mov
test
add
or
and
mov
test
rol
popf
lahf
fimul
rol
jmp
push
or
daa
mov
in
sbb
mov
or
ja
mov
dec
enter
int3
mov
lds
pop
lock
loop
mov
pusha
icebp
outs
jo
leave
or
aam
aam
and
push
push
test
or
or
cli
cmp
push
dec
jbe
push
jge
loopne
nop
add
call
dec
call
mov
sti
xchg
rcr
(bad)
in
pop
call
add
add
enter
sbb
pop
inc
add
pop
add
fadd
add
or
xchg
ds
lods
mov
mov
xchg
hlt
pop
push
adc
xchg
bnd
cmp
loope
pop
sub
dec
ins
adc
nop
inc
push
fs
pop
or
push
xor
and
mov
mov
gs
push
dec
fstp
inc
loope
push
mov
dec
mov
pop
ficomp
pop
in
add
test
mul
in
cmp
mov
mov
push
and
push
add
ja
mov
mov
cli
inc
mov
push
pop
mov
push
xchg
add
loope
xor
adc
mov
ss
jmp
xor
ins
pop
adc
sbb
not
iret
mov
or
sub
sbb
lods
or
test
adc
add
sub
push
mov
jl
imul
adc
push
inc
ins
jp
je
mov
sub
and
push
fbld
xchg
dec
cs
or
les
popa
fcom
jle
inc
pushf
fnstsw
pop
aam
mov
dec
setge
stc
push
mov
sbb
mov
sar
sbb
aad
lfs
jp
jmp
imul
xor
xor
sub
pop
dec
and
cmp
add
inc
dec
and
cld
dec
je
jp
outs
gs
jle
test
pop
add
popf
sbb
cmp
jl
in
rcl
sbb
or
and
mov
xchg
cli
push
add
movs
sub
jbe
jl
movs
adc
sub
test
jmp
aaa
sub
adc
pop
adc
sahf
ins
sar
push
mov
xchg
neg
loop
ss
push
pop
xor
add
outs
call
outs
ss
mov
xor
xor
lea
loopne
push
sub
push
jne
cmc
xchg
adc
aad
jmp
jns
cmp
inc
or
and
imul
sbb
xor
push
pop
rol
dec
test
and
imul
push
inc
and
inc
cmp
sub
mov
or
dec
cmp
add
add
inc
out
pop
xor
xchg
into
mov
sub
les
mov
pop
mov
pusha
cmps
jo
or
mov
je
xchg
inc
lods
sbb
in
mov
pavgb
inc
fldcw
push
fdiv
scas
mov
dec
pushf
stc
mov
lea
and
push
push
aas
jmp
adc
xchg
add
mov
push
mov
ret
dec
loopne
gs
lahf
xchg
pusha
(bad)
sbb
add
and
fstp
sub
call
xchg
jecxz
call
and
or
fistp
sub
cmc
ret
adc
sub
adc
mov
mov
scas
dec
sahf
es
xchg
push
push
inc
loopne
cli
xor
adc
add
cld
add
adc
inc
mov
jmp
jne
add
add
sbb
out
and
loop
shl
and
mov
and
(bad)
mov
dec
in
js
mov
pop
or
add
or
sub
cmp
ret
xor
mov
mov
push
call
xor
inc
data16
adc
add
and
stos
pop
cmp
call
inc
lods
or
(bad)
sbb
in
loope
repz
in
in
ins
pop
jo
push
inc
aaa
test
pusha
dec
sbb
inc
push
xor
lock
cmp
xor
sub
les
mov
mov
ja
add
inc
out
mov
add
and
pop
mov
push
xor
inc
mov
daa
cmp
cld
ret
or
sar
sbb
push
inc
sub
cwde
inc
xor
sub
and
ret
in
pop
dec
inc
fdivr
sar
mov
leave
xchg
xor
out
rcl
mov
adc
and
(bad)
fisub
inc
mov
push
and
dec
inc
enter
pushf
dec
xchg
shl
jp
adc
es
adc
cdq
or
cs
fwait
adc
fsubr
and
xchg
imul
dec
cmp
xchg
xor
xchg
sub
inc
xor
lods
stc
xchg
or
pop
mov
es
iret
(bad)
push
arpl
cmps
jecxz
ret
mov
test
or
mov
js
shl
std
(bad)
push
mov
adc
cmp
out
or
cmp
(bad)
xor
jmp
mov
pushf
pop
mov
mov
lock
fbstp
aam
inc
dec
mov
ins
xor
jmp
lea
(bad)
and
pop
test
(bad)
fcomp
pop
js
jl
cmp
mov
push
and
(bad)
xchg
adc
xchg
lock
cwde
xchg
push
leave
xadd
pop
xlat
and
mov
adc
aaa
call
in
mov
enter
ds
test
loope
inc
repz
sti
xchg
mov
inc
mov
add
push
mov
inc
test
or
pop
xchg
mov
inc
dec
mov
sbb
mov
push
push
leave
mov
mov
repz
ins
sbb
sbb
fcomp
call
adc
icebp
add
mov
adc
ss
or
je
loop
mov
pop
or
adc
xchg
mov
mov
inc
xor
and
or
pushf
std
sub
xor
push
push
ret
popf
adc
addps
mov
mov
cs
xchg
cmps
lods
xor
xor
movs
push
dec
mov
imul
fcom
(bad)
in
add
cmp
or
fwait
add
imul
add
sbb
outs
add
fnstcw
pop
mov
cld
lea
push
pop
fiadd
and
push
xor
loopne
pop
xchg
push
sbb
inc
or
sub
daa
je
adc
or
ret
adc
pop
movs
popf
outs
jns
cmp
inc
rol
cs
movups
cmps
jo
jmp
daa
inc
cld
inc
pop
push
push
movs
xor
pop
test
and
dec
dec
dec
jle
fcom
push
dec
xchg
fadd
push
in
adc
inc
pop
mov
or
mov
xlat
pop
add
inc
outs
xchg
lock
call
jnp
fsub
aas
push
adc
imul
jecxz
mov
push
enter
xor
add
jns
pop
lock
fadd
dec
mov
jno
mov
pop
pop
adc
push
push
inc
movs
leave
ror
pop
popf
shr
or
cmp
aaa
dec
adc
imul
cld
cmp
ds
outs
je
add
push
int
pop
mov
add
in
dec
in
cmp
sbb
mul
sub
and
mov
inc
jle
jecxz
jo
xor
test
dec
adc
inc
xlat
jae
mov
ins
sbb
xchg
icebp
inc
cld
jbe
ret
mov
sub
inc
add
sub
xchg
xchg
pop
add
cmc
es
and
in
xchg
in
cmp
pop
sbb
mov
lods
lock
and
inc
rcr
addr16
js
not
pop
xor
dec
jnp
(bad)
xchg
icebp
inc
iret
add
(bad)
ficomp
dec
jae
pop
loopne
bound
pop
retf
popf
or
mov
movs
stos
adc
and
sub
xor
push
pop
inc
xchg
add
pusha
test
adc
jb
push
sbb
or
sbb
mov
mov
sub
push
cmps
xlat
std
push
cmovb
or
sub
lods
or
xor
cmp
mov
and
mov
jae
ret
loopne
add
and
loop
mov
shr
mov
inc
lock
(bad)
mov
cmp
push
cs
arpl
lea
push
push
cmp
xchg
add
inc
repz
mov
jmp
xchg
push
adc
fmul
movs
(bad)
sub
shr
jle
mov
sub
ds
inc
and
push
push
sub
cmp
popa
inc
pop
xor
dec
imul
movs
cld
or
popa
mul
mov
rdpmc
add
(bad)
and
jae
pop
dec
xor
mov
xor
add
adc
and
in
popf
fistp
push
(bad)
(bad)
std
adc
leave
enter
out
test
or
xor
outs
and
outs
mov
push
ins
lock
inc
shl
cmp
and
inc
dec
add
xchg
jbe
add
mov
xchg
ja
push
add
ins
loope
xchg
rcl
fwait
mov
lock
and
jo
ret
lods
pop
shr
add
or
mov
lock
add
add
jmp
add
push
cld
xchg
push
jo
test
sub
adc
push
jle
xchg
mov
add
add
push
inc
jecxz
inc
fiadd
push
es
test
add
addr16
(bad)
cmp
push
push
cmp
or
jo
gs
sbb
mov
inc
sub
add
push
and
and
ss
pcmpgtw
fwait
xchg
jne
dec
into
push
cdq
(bad)
xchg
repz
lods
imul
push
mov
jle
push
pop
and
clc
ror
sub
(bad)
pop
fwait
(bad)
xchg
and
or
mov
sub
test
enter
test
add
pop
pop
pop
xchg
fldcw
dec
lea
add
sbb
jl
cmp
add
inc
add
hlt
and
push
or
imul
adc
or
mov
inc
mov
add
inc
and
adc
adc
mov
bound
push
xchg
and
push
add
mov
in
ja
mov
mov
sub
mov
shr
add
inc
sbb
add
add
mov
and
xchg
in
push
cmp
in
movs
add
push
aaa
add
ins
test
inc
sbb
push
lods
mov
stos
pop
mov
add
icebp
jb
sub
xchg
push
jl
retf
inc
ret
lahf
cmps
or
sbb
and
jb
add
jno
ss
cdq
retf
mov
pop
icebp
fwait
xchg
inc
cmp
mov
sbb
xor
inc
push
sbb
cs
xor
ins
movs
fild
clc
adc
xchg
mov
mov
(bad)
std
add
fmul
ret
push
icebp
mov
cmp
mov
or
js
or
mov
sti
dec
mov
loop
adc
fs
cmps
mov
call
sub
pushf
ins
outs
js
mov
xor
mov
sub
xchg
push
xchg
add
or
mov
ret
push
push
fistp
jecxz
push
dec
push
sbb
ds
dec
jnp
sbb
sub
xor
call
xchg
adc
cmp
inc
add
int
mov
mov
shl
int3
je
or
pop
rcr
push
or
aas
lods
retf
leave
in
push
pushf
out
push
pusha
sub
aam
das
int3
rcr
push
pop
dec
dec
in
fsub
sub
ret
test
lahf
test
dec
adc
sbb
loopne
sbb
in
aaa
mov
cs
sub
es
push
xchg
add
sub
adc
mov
and
aaa
loopne
lahf
fdivr
pop
fdiv
jnp
mov
stc
nop
jae
in
push
dec
push
mov
lock
inc
imul
or
pusha
or
xor
mov
shr
loopne
fild
sbb
fdiv
lea
adc
ror
jnp
pop
aaa
or
jae
adc
enter
arpl
and
push
and
dec
cld
push
add
(bad)
jnp
inc
sbb
shl
or
(bad)
in
xlat
mov
int3
jbe
(bad)
int3
or
xchg
pop
mov
inc
int3
or
ins
addr16
pushf
dec
shl
shl
popa
or
cs
add
adc
ret
(bad)
aam
inc
hlt
dec
mov
jge
sub
pop
inc
cmp
dec
outs
and
or
cmp
dec
or
aaa
movs
in
xchg
test
inc
lds
jb
sub
scas
mov
popa
pop
retf
add
mov
sub
aaa
adc
test
je
push
sbb
xchg
fcomp
mov
adc
mov
mov
and
cmp
jae
xchg
sti
mov
jmp
jne
ins
or
xor
nop
jo
test
aas
sub
add
mov
cmp
mov
fwait
xor
nop
pushf
jle
xor
dec
(bad)
rcl
rcr
sub
mov
retf
mov
add
inc
jle
sub
jge
sub
push
add
movs
mov
shr
ret
pop
add
xor
in
movs
aam
fmul
lock
jg
test
ret
in
or
push
sahf
test
pusha
not
mov
sbb
mov
test
inc
mov
in
adc
add
or
fld
mov
push
add
dec
xchg
pop
or
dec
(bad)
imul
nop
clc
sar
push
xchg
add
mov
or
pop
jo
adc
pop
and
jle
ret
add
lods
jno
cmp
(bad)
sbb
or
add
inc
popa
loope
adc
icebp
int
hlt
js
and
and
clc
ficomp
sbb
and
xchg
je
xor
push
ds
add
jae
jae
js
adc
xor
ins
jmp
and
add
(bad)
in
pmulhuw
add
cmp
cmps
dec
jb
xor
leave
jo
sbb
cmp
adc
test
mov
xlat
movs
mov
lea
adc
(bad)
or
sub
pop
fwait
inc
stc
inc
and
adc
xchg
push
mov
pusha
xor
push
pop
(bad)
and
or
inc
rol
je
add
push
or
jecxz
add
jo
mov
dec
add
or
addr16
sar
jnp
jo
test
and
or
dec
mov
sbb
mov
adc
and
xor
push
adc
add
call
frstor
lea
in
or
ins
xor
je
add
popa
je
add
mov
sbb
adc
mov
inc
jle
sbb
sbb
or
fidiv
mov
push
or
loop
nop
shl
rcl
mov
loopne
ret
sub
or
mov
mov
outs
xchg
or
dec
sub
setne
xor
mov
mov
push
xor
mov
lock
cli
call
fiadd
mov
ret
movs
add
daa
sbb
and
test
pop
adc
cmp
jmp
sbb
ja
out
(bad)
sub
ja
(bad)
push
lahf
lahf
popa
ror
adc
ds
xor
pop
push
or
mov
cmp
xor
push
and
fstp
jmp
fnsave
movs
cmps
or
in
push
adc
mov
push
add
jne
sbb
push
pop
test
push
cli
loop
les
jle
push
(bad)
pop
add
sbb
adc
push
iret
jg
add
dec
pop
xor
pop
mov
mov
loop
push
ret
push
stos
jns
dec
sahf
mov
ret
pop
mov
ja
retf
mov
call
test
push
add
mov
mov
pop
(bad)
xchg
cli
mov
inc
(bad)
fsub
sbb
adc
gs
mov
dec
movs
mov
inc
and
je
pushf
push
cmp
push
cdq
cmc
pop
cmc
inc
adc
jmp
mov
jl
xchg
add
js
push
and
jmp
xor
(bad)
mov
mov
add
and
sbb
adc
jbe
pop
(bad)
gs
inc
(bad)
aas
inc
pop
ja
shl
mov
add
fcmovnu
fild
xchg
mov
inc
sbb
aaa
lea
push
push
sbb
adc
push
fwait
add
ds
cwde
dec
shl
mov
mov
push
sbb
frstor
xlat
adc
es
fadd
data16
scas
mov
retf
es
mov
xor
and
push
clc
in
inc
add
scas
cwde
hlt
sahf
and
sbb
fwait
(bad)
ja
sbb
fld
adc
push
int3
(bad)
fstp
fld
push
mov
mov
dec
adc
or
jge
pusha
loopne
cmp
mov
xor
jb
stc
scas
test
aaa
aas
sbb
and
sub
or
dec
in
add
xchg
pushf
outs
jb
scas
dec
and
mov
push
leave
and
shr
or
ror
fadd
jl
xchg
dec
pop
leave
add
adc
xchg
mov
or
push
jbe
or
and
imul
(bad)
fldcw
pop
fisttp
fisttp
or
loopne
sar
sbb
dec
inc
lea
mov
jns
push
inc
sbb
xor
and
das
fwait
push
sub
inc
rcr
cmp
adc
js
ss
jmp
imul
mov
or
mov
les
mov
out
fcmove
repz
sar
ficom
in
ins
xchg
mov
fdiv
pop
(bad)
lock
rol
dec
dec
ror
popa
in
mov
mov
xchg
sbb
dec
cmp
mov
or
scas
mov
sub
ins
xchg
aaa
nop
xlat
dec
adc
adc
cmc
jmp
xchg
mov
dec
and
sub
inc
inc
jg
and
pop
sub
and
aas
add
ficom
(bad)
das
popa
sub
mov
adc
or
mov
push
sbb
inc
adc
(bad)
sub
daa
pop
pop
push
outs
fcom
sbb
ror
add
cmp
pushf
cld
pop
dec
lea
lock
jbe
push
dec
iret
call
xor
and
add
lock
(bad)
push
rol
and
sbb
(bad)
fsub
push
jne
rcl
xor
and
test
in
push
and
mov
test
cmp
dec
sub
add
push
push
mov
add
jo
leave
retf
movs
push
inc
xchg
push
(bad)
arpl
ret
std
cmps
test
call
adc
cld
push
xor
ret
aaa
mov
inc
push
mov
in
mov
dec
iret
and
inc
mov
inc
or
int
jo
daa
in
pop
xchg
ins
pop
enter
mov
sub
dec
xor
cli
sbb
or
jb
sub
xchg
xor
inc
lods
xchg
test
cdq
test
dec
push
sahf
iret
cli
in
xadd
dec
ja
add
dec
mov
inc
add
enter
cmp
je
or
(bad)
enter
adc
add
(bad)
jp
call
ja
sub
mov
imul
or
mov
cmp
pusha
adc
jecxz
in
cdq
sub
or
jo
sar
nop
out
adc
call
inc
dec
dec
out
in
mov
push
sar
stos
pop
and
arpl
add
lock
cmp
adc
pop
xchg
push
or
das
or
out
and
or
or
and
and
push
js
xchg
shl
out
(bad)
cmp
cmp
test
les
and
inc
popa
jnp
test
or
or
mov
sub
dec
cmp
sub
xor
adc
cmp
(bad)
mov
loop
loope
and
(bad)
jp
js
mov
es
mov
(bad)
add
cmp
pop
aaa
or
sub
adc
jo
jge
adc
and
xor
xor
cld
cmp
les
daa
cmp
mov
push
js
out
mov
mov
push
shl
or
xor
enter
mov
loopne
lea
ret
rol
pop
dec
add
(bad)
shl
cmp
cld
pop
pop
sbb
fbld
push
fbstp
add
push
adc
mov
xor
in
test
push
cdq
mov
pushf
fstp
add
cmps
add
test
pop
sbb
rol
jg
cmp
or
(bad)
adc
inc
push
adc
in
and
rcr
aam
cmc
lea
mov
arpl
mov
ret
and
pop
loope
push
add
adc
push
in
or
clc
nop
or
sub
push
pusha
sti
jno
adc
jge
sbb
push
ins
(bad)
call
jge
add
mov
mov
nop
in
call
mov
jmp
in
and
ret
or
inc
dec
lods
dec
sub
cmp
add
mov
and
ret
pop
fcom
mov
push
rcl
cwde
iret
add
pop
in
xchg
and
push
jle
sar
mov
jnp
add
or
int
or
jge
cli
pop
jmp
xchg
mov
inc
outs
ja
mov
shl
jno
sbb
lods
or
shl
mov
xchg
movs
cwde
ins
popa
mov
dec
dec
je
mov
aaa
and
pop
add
loopne
ins
lock
adc
push
jecxz
loopne
inc
loop
inc
mov
add
xor
and
or
(bad)
add
mov
add
(bad)
cli
in
or
mov
xor
push
ret
shl
in
add
sbb
ror
push
push
adc
sbb
dec
mov
jmp
mov
push
push
and
push
shl
rcl
inc
mov
add
push
add
add
jge
shl
and
fiadd
dec
inc
js
xor
rcr
mov
lods
jne
add
adc
movs
fwait
add
loop
not
dec
or
fsub
jb
mov
shr
aas
stos
or
data16
ins
push
cmp
xchg
or
xor
popa
dec
mov
push
sbb
cwde
sbb
xor
mov
sbb
sub
shr
mov
cmp
mov
push
sub
add
(bad)
push
fsub
mov
out
jge
(bad)
adc
dec
enter
inc
mov
cmp
cmps
xchg
add
add
push
pusha
push
push
mov
push
push
fld
fstp
jmp
fstp
fnstsw
adc
xor
sbb
or
inc
ss
fmul
sub
es
add
mov
(bad)
or
mov
dec
sub
pop
mov
js
in
mov
sbb
jecxz
fdivp
mov
push
in
push
test
sbb
and
das
pop
dec
push
pop
fiadd
jecxz
xchg
pushf
dec
pop
jg
pop
in
dec
mov
jbe
pop
xchg
push
out
cmp
(bad)
out
into
out
push
mov
das
pushf
popf
mov
std
adc
out
bound
mov
inc
jl
gs
xchg
mov
mov
dec
xor
int
dec
adc
adc
xor
mov
adc
xor
int
sbb
xor
and
and
add
shl
or
sbb
push
mov
mov
mov
daa
adc
les
hlt
mov
adc
nop
imul
mov
or
cmp
repz
xchg
enter
jo
loopne
jnp
stos
jmp
fs
push
sub
or
add
mov
shr
add
jbe
test
js
and
pop
add
repz
xchg
or
pusha
add
mov
mov
push
mov
dec
add
sub
jmp
daa
mov
add
xchg
inc
push
pop
cmp
ins
dec
inc
push
ins
ins
test
sbb
jp
xor
sub
les
outs
fistp
repnz
call
lods
pop
mov
movs
pop
test
(bad)
out
xor
mov
(bad)
imul
mov
iret
call
push
popa
or
imul
clc
pop
(bad)
sub
cmp
cmp
sub
inc
push
ss
aam
clc
inc
jmp
fidiv
int
or
add
fcom
mov
inc
adc
push
(bad)
lds
jle
sbb
push
push
and
push
xchg
pusha
add
test
pop
add
jecxz
(bad)
dec
rcr
mov
dec
add
pop
lea
or
pop
sti
mov
ror
adc
mov
in
push
lea
stc
iret
ror
sbb
retf
outs
movs
xor
js
int
test
push
(bad)
and
(bad)
or
cmps
push
ror
clc
sub
pop
mov
mov
sti
je
arpl
cs
jo
sbb
sbb
in
push
add
push
cmps
je
push
stos
xor
popf
ja
mov
and
add
dec
pushf
mov
aas
push
ret
je
mov
sub
add
mov
(bad)
jo
xor
retf
push
add
push
cld
sub
enter
or
adc
and
ds
(bad)
adc
pop
add
cdq
and
xor
je
push
pop
adc
jle
test
and
pop
rcl
aas
mov
and
mov
xchg
mov
or
add
fwait
add
jg
test
mov
xor
jns
mov
add
mov
add
jns
addps
jo
inc
or
sub
test
mov
add
mov
imul
sub
or
and
push
cld
pusha
xor
add
cmp
adc
(bad)
loopne
add
inc
add
call
data16
jne
pop
inc
push
mov
push
push
sbb
xchg
push
push
cmp
or
jecxz
mov
dec
mov
lea
popa
rcl
xchg
mov
dec
add
mov
nop
aad
mov
xchg
int3
or
dec
inc
add
mov
bound
jne
sbb
test
pop
push
lea
int
xor
sbb
sti
xchg
mov
sub
and
sub
pop
push
xchg
fadd
lock
xchg
xor
hlt
push
and
push
dec
and
stc
jge
pop
or
fstp
ins
sbb
cld
(bad)
ins
dec
cmp
inc
cmp
xor
push
es
sub
or
mov
movs
pop
cmc
push
inc
mov
cmps
jge
adc
add
inc
pop
dec
movs
mov
xchg
and
cld
and
test
sub
inc
sar
icebp
fld
add
fsub
mov
mov
pop
and
fst
rcl
sbb
lds
inc
in
sub
imul
inc
xor
xchg
mov
xchg
jle
xor
gs
out
mov
sbb
or
or
sub
adc
sbb
je
sbb
jns
stc
or
in
push
mov
call
sbb
sbb
div
or
adc
dec
adc
xor
aam
push
mov
and
sub
fcomp
outs
je
test
test
sub
sbb
inc
test
add
push
pop
dec
mov
sub
scas
xchg
ffreep
mov
ds
popf
(bad)
inc
jmp
push
rcl
cmc
mov
(bad)
ja
call
scas
pop
sub
inc
mov
ror
dec
add
push
repz
test
push
dec
jl
in
pop
pop
cdq
and
mov
pop
ins
adc
je
(bad)
movs
rcl
fmul
daa
(bad)
pop
jg
mov
add
cmp
xchg
adc
sub
pop
mov
xchg
sahf
inc
xor
jno
or
add
stc
sub
lahf
sbb
sub
mov
push
sub
(bad)
retf
mov
sub
inc
add
loopne
test
sub
xor
pushf
das
pop
dec
mov
adc
push
push
mov
or
mov
dec
lods
retf
rcl
and
xor
dec
shl
push
adc
xchg
rol
jo
fsub
adc
jne
mov
and
adc
in
or
ja
pop
in
adc
and
adc
xor
pop
(bad)
push
jbe
jnp
push
or
pusha
push
xchg
leave
hlt
add
scas
or
loope
add
aad
lock
rcl
loope
add
lea
add
outs
hlt
jae
jns
push
push
clc
test
cs
sbb
add
fisubr
dec
or
add
sbb
or
add
push
das
or
adc
fcom
rcl
push
ret
sbb
mov
jae
push
adc
fmul
add
iret
push
adc
push
sub
mov
call
(bad)
push
sbb
sub
iret
jnp
sbb
jmp
jo
das
sbb
dec
jle
call
adc
jmp
and
out
inc
or
sub
sub
pop
add
rol
enter
sbb
and
add
jl
je
mov
pop
add
inc
mov
sbb
sub
or
mov
sub
dec
pop
(bad)
aad
paddsw
add
repz
je
arpl
out
push
sbb
retf
les
rcr
push
push
rcr
mov
shl
(bad)
rol
add
sbb
and
fsub
add
sub
hlt
add
sub
repz
loope
push
or
mov
mov
add
lock
pusha
in
rol
inc
push
add
adc
movs
test
mov
push
inc
stos
cmps
push
das
mov
cmp
sbb
pop
mov
bound
pop
push
add
lods
xor
inc
lock
retf
xor
sub
into
push
or
scas
cmp
and
dec
clc
cmp
cs
push
push
jbe
cmp
xor
das
sbb
lods
movs
icebp
fiadd
dec
dec
aam
popf
out
jle
jmp
mov
rcr
mov
js
push
adc
out
or
out
repz
mov
jmp
jmp
push
jecxz
or
sub
xchg
and
bound
or
(bad)
mov
add
in
dec
or
or
sbb
sbb
cmp
push
div
(bad)
bswap
push
inc
je
mov
push
or
arpl
push
sub
mov
add
repnz
rcr
jmp
xor
add
push
add
mov
and
pop
lock
rcr
inc
and
inc
sub
loope
loopne
add
mov
test
sti
inc
xor
mov
mov
or
and
daa
cmp
test
(bad)
jae
mov
test
addr16
jns
js
add
mov
hlt
imul
push
sbb
sar
shl
fmulp
(bad)
jno
aaa
mov
daa
repnz
adc
pusha
or
dec
push
cmp
add
or
test
push
out
mov
xor
push
dec
or
add
lea
or
or
ja
add
xor
sub
push
adc
fcom
or
push
push
push
adc
(bad)
sub
pop
and
or
clc
clc
loopne
shl
outs
mov
and
sbb
sub
add
jnp
mov
cmp
inc
pushf
and
sub
xor
rol
push
jo
mov
(bad)
and
pop
pop
jecxz
sub
lea
retf
loopne
mov
inc
and
repnz
imul
addr16
dec
imul
jmp
ins
fimul
ins
inc
mov
dec
das
fcom
jp
outs
ret
mov
jge
dec
mov
mov
or
xchg
clc
add
push
and
mov
(bad)
movs
mov
add
push
add
or
test
(bad)
sar
jo
adc
lods
cmp
(bad)
xchg
icebp
or
mov
bound
inc
sbb
inc
fild
or
sar
xor
mov
enter
adc
or
mul
xor
and
sub
jo
or
adc
dec
ins
not
imul
(bad)
lea
xchg
jne
add
imul
pop
or
js
fnstsw
sub
dec
adc
test
add
sub
mov
fcmovnbe
ror
stos
sti
enter
in
enter
or
js
and
cmp
ins
fs
jecxz
add
and
xor
inc
sbb
xchg
push
or
or
xor
nop
pop
cmp
(bad)
jae
cmp
das
jbe
or
je
bound
imul
rol
mov
xchg
fcmovbe
inc
rol
xor
push
push
dec
push
imul
jae
stos
and
jne
adc
cli
jmp
xor
cmp
push
cli
movs
or
pop
cmp
mov
sub
jae
rol
cmp
pop
sub
add
js
dec
jmp
retf
xchg
clc
and
dec
jno
(bad)
and
add
test
cmp
mov
pop
or
add
jle
js
push
cmp
or
cs
inc
push
add
das
xor
je
adc
sbb
pop
and
ss
cmc
push
mov
adc
or
add
jl
inc
in
mov
imul
inc
push
int
in
stos
outs
inc
cmp
xlat
dec
jle
les
pusha
aaa
movs
push
jb
and
pop
ret
inc
out
mov
and
add
adc
add
adc
push
dec
xchg
(bad)
jmp
dec
cs
adc
or
inc
fcom
nop
inc
xchg
dec
sub
xchg
test
add
inc
xor
pusha
adc
loope
cmp
aam
xchg
mov
cmp
cwde
in
adc
cmp
and
jmp
dec
xchg
pop
(bad)
inc
push
cdq
mov
rol
and
sbb
xchg
cmp
push
mov
mov
jnp
movs
out
iret
cmp
out
push
inc
imul
cld
lods
and
cmc
clc
lock
adc
xor
pop
sbb
xor
pushf
adc
or
stc
popa
pop
mov
mov
xor
fstp
xchg
mov
js
fsubr
fiadd
mov
and
or
inc
movs
lods
popa
jns
or
push
dec
or
push
in
call
inc
test
pusha
xchg
cmp
adc
mov
fidivr
sub
adc
inc
inc
pop
(bad)
movs
popa
lods
gs
jae
push
sbb
icebp
aad
dec
adc
xchg
fmul
adc
push
mov
mov
sub
and
cmp
push
stc
cwde
inc
mov
sbb
jp
xor
hlt
or
imul
(bad)
rcr
fsubr
in
cdq
shr
pushf
xor
xor
arpl
shl
add
jmp
push
mov
xor
popa
cmp
mov
mov
cmp
neg
pop
aam
sbb
sub
dec
cmp
or
sub
dec
add
adc
nop
xchg
and
jo
addr16
jmp
jo
dec
jo
test
jno
push
and
inc
fsubr
test
test
imul
adc
xor
cld
mov
dec
cld
retf
les
popa
inc
fs
aad
add
leave
jne
(bad)
jns
mov
cmp
fnstcw
stos
adc
cwde
leave
xor
xor
pusha
jnp
add
xor
ja
push
pushf
jle
and
rcl
(bad)
push
and
sti
cmp
je
lods
popa
push
cmp
sub
cmp
inc
sbb
fisubr
cmp
xor
push
push
push
and
jnp
xor
xchg
pop
inc
inc
xchg
aam
or
pop
ficom
jge
dec
adc
dec
(bad)
jle
mov
dec
mov
mov
jecxz
popa
push
jae
xlat
movs
jo
imul
pop
and
call
or
je
xchg
je
jl
adc
add
xor
cs
lahf
movs
inc
xchg
pushf
add
and
adc
cwde
push
lea
inc
and
mov
sbb
int3
mov
inc
adc
dec
add
adc
test
sbb
inc
mov
mov
xchg
jb
xor
xchg
add
popa
inc
out
inc
es
(bad)
xchg
push
enter
mov
xchg
xor
jnp
clc
or
je
inc
push
sub
add
cmp
fwait
call
test
push
sub
in
xchg
push
mov
pop
jmp
aam
int3
pusha
mov
jl
inc
inc
adc
shl
lods
test
test
cs
or
popf
xchg
push
push
je
push
pop
out
dec
and
cmp
out
inc
add
pop
jmp
ror
imul
or
call
cmps
inc
or
inc
lods
mov
mov
fstp
bound
sti
adc
mov
out
loopne
clc
dec
inc
movs
dec
sbb
jbe
add
add
or
fisub
pushw
sbb
and
les
mov
addr16
pop
in
imul
mov
pop
out
and
jne
cmp
adc
add
outs
xchg
ffree
icebp
adc
adc
movs
or
jmp
pmulhuw
push
ds
or
xchg
sbb
jle
sub
int3
enter
and
imul
mov
into
shr
sub
pop
dec
jo
fmul
pop
dec
mov
cmp
jle
dec
or
jg
mov
jne
xor
setg
inc
in
ins
add
in
cmps
cs
push
clc
add
mov
mov
jmp
ret
pop
pop
xchg
and
sbb
add
ret
pop
pop
pop
pop
pop
es
jp
hlt
(bad)
or
and
(bad)
ja
test
push
fmul
sbb
or
rol
out
jmp
add
add
mov
call
and
inc
sti
not
adc
mov
push
add
cdq
scas
pop
adc
daa
test
adc
ret
jne
fstp
fidivr
pop
ret
push
adc
rcr
fsub
hlt
fmul
fiadd
shl
shl
(bad)
out
pusha
mov
jle
fsubr
shr
fcom
mov
fild
fstp
fldenv
leave
sub
jb
and
loopne
pop
lds
cwde
fsubr
dec
mov
into
pop
shl
xor
xchg
rol
fadd
sbb
shr
and
pop
sti
inc
xchg
push
and
retf
inc
clc
push
mov
fmul
leave
test
and
jo
xchg
iret
xor
sbb
(bad)
adc
xor
mov
cmp
inc
mov
fisttp
retf
fld
sub
inc
mov
in
fmulp
fidiv
lds
and
faddp
fxch
mov
retf
xchg
loope
fadd
lock
fdivrp
adc
int
fistp
out
loope
fdivr
fldenv
adc
fmul
push
fnstenv
mov
xchg
push
fxch
retf
pop
loopne
lods
mov
fsubr
fdivp
loopne
test
add
or
and
sbb
add
jbe
out
push
out
ds
or
test
dec
shl
sbb
xor
xor
sub
cmps
mov
pop
push
ficom
call
xor
mov
dec
push
mov
nop
mov
imul
add
arpl
sbb
call
mov
loopne
pop
pop
mov
das
fwait
push
test
(bad)
xchg
or
mov
cmp
inc
mov
int3
int3
arpl
sub
add
push
imul
push
push
or
cmc
xor
adc
mul
xor
sub
push
inc
les
les
leave
jb
test
hlt
inc
mov
xor
imul
xchg
push
push
push
mov
xlat
stos
pop
sbb
xor
ins
inc
push
fstp
mov
addr16
dec
jl
or
sub
aaa
enter
mov
daa
and
sbb
sbb
jmp
pusha
or
cmp
cwde
je
inc
cmps
add
jmp
cmp
or
xor
or
sbb
call
in
cli
div
and
shl
or
sub
dec
adc
push
out
mov
cmp
xor
sub
cmps
xor
popa
or
pop
imul
inc
inc
mov
jmp
mov
hlt
inc
outs
pop
xor
jg
fld
repz
mov
daa
push
in
sbb
cmps
sbb
sbb
cmc
mul
movups
cli
test
jns
mov
and
ds
fsub
fdiv
fadd
sbb
pop
es
stos
hlt
xchg
inc
ins
mov
sbb
or
enter
and
loopne
fbstp
test
inc
hlt
sbb
dec
rcl
(bad)
shl
or
sub
inc
(bad)
in
push
mov
div
sbb
push
adc
inc
movs
test
dec
cmp
imul
push
(bad)
jnp
imul
bnd
fild
cdq
adc
pop
add
xor
mov
push
std
push
and
or
mov
xchg
test
lock
addps
or
push
lods
adc
jmp
je
(bad)
jle
lea
mov
cmp
ja
or
jno
(bad)
ja
std
ja
sub
cmp
jl
jmp
sub
inc
lea
push
movs
pusha
inc
add
push
div
mov
and
mov
cdq
mov
idiv
mov
das
out
mov
xor
(bad)
div
or
sub
sti
jne
mov
mov
arpl
jmp
cmp
out
mov
pop
adc
rcr
rol
popf
push
fs
sbb
mov
and
mov
inc
xor
or
push
(bad)
test
push
and
xor
or
xor
xchg
push
push
xor
outs
sub
sub
xor
jp
pop
sbb
mov
pop
add
dec
jmp
xor
push
dec
or
movs
mov
sub
push
nop
add
and
cld
push
xor
shl
arpl
add
mov
loope
push
mov
dec
(bad)
mov
(bad)
nop
mov
add
ficomp
enter
xchg
inc
fst
push
pop
pop
mov
sbb
outs
and
dec
push
sbb
push
inc
sub
inc
add
pop
fst
pop
fsub
mov
mov
jge
jle
sbb
jne
dec
adc
mov
mov
jbe
lods
inc
clc
and
movs
loopne
or
and
cmp
jl
and
fsub
ficomp
xor
sub
or
add
cmp
xor
adc
mov
jecxz
push
or
out
sub
ins
sub
sbb
(bad)
aam
jne
cmp
fs
clc
xchg
inc
cmp
xor
cmp
gs
xchg
push
and
int
add
push
ret
sub
in
xchg
push
fsubr
add
dec
mov
popf
and
or
fld
mov
jl
cmp
std
add
pop
imul
imul
hlt
fadd
and
adc
or
pusha
out
ret
dec
and
hlt
dec
push
lock
sbb
cmp
int
rcl
test
mov
(bad)
or
add
js
xor
or
sbb
mov
and
aam
inc
or
adc
add
mov
lahf
xor
sbb
cmp
fnstsw
aam
fstp
jp
jbe
fidiv
push
rol
adc
inc
lahf
mov
jb
(bad)
cmps
or
ret
add
(bad)
lea
lahf
add
loope
out
ja
outs
dec
js
retf
lods
loopne
adc
iret
inc
adc
popa
test
and
cmp
pop
mov
adc
fcomp
ds
fisubr
inc
pop
enter
and
bound
sbb
lea
sub
mov
mov
into
(bad)
clc
and
shl
add
inc
push
sbb
loop
push
call
xchg
mov
popa
cmp
or
xrelease
sub
adc
in
cmp
add
(bad)
hlt
cmp
mov
add
dec
movs
cmc
push
call
and
push
jbe
adc
fnstenv
cmp
mov
jb
test
jnp
sar
loope
test
fidiv
adc
or
cli
mov
sar
push
xor
mov
and
pop
push
cmps
into
xor
sub
dec
daa
in
stos
es
stc
les
ficom
xlat
xor
push
ret
and
xchg
mov
lods
into
cmp
mov
pop
rol
dec
add
nop
loopne
movs
ds
lods
pop
int
inc
movs
push
sar
add
aaa
popa
fwait
mov
adc
imul
add
shl
mov
jb
stos
and
dec
mul
xor
xchg
sbb
arpl
or
test
mov
gs
cmp
jle
push
lock
arpl
inc
movs
mov
cmp
mov
mov
jne
jp
inc
add
mov
adc
xchg
mov
adc
and
adc
cmp
push
(bad)
jmp
xor
pop
dec
jo
push
lahf
ins
fst
sub
mov
loopne
mov
nop
xchg
cmps
inc
lock
sub
sbb
pop
mov
mov
or
sbb
jne
call
xor
add
mov
ins
mov
popa
(bad)
in
loope
pop
sub
push
cmc
mov
push
inc
or
std
xlat
fdiv
mov
mov
sbb
and
das
inc
xchg
imul
loope
xchg
sti
xchg
jno
dec
push
hlt
das
inc
mov
jle
mov
adc
and
in
jecxz
inc
mov
movs
dec
pop
retf
mov
mov
mov
shl
loopne
pop
fs
rcr
les
int3
mov
fnstcw
je
mov
sub
ins
popf
ret
jae
test
inc
pop
dec
sbb
jo
sub
adc
mov
push
in
sbb
and
imul
cmp
adc
pusha
mov
mov
rcr
jecxz
test
push
ror
jecxz
out
je
pop
sub
inc
mov
adc
cwde
or
or
dec
movs
push
pusha
lods
fsubp
add
dec
mov
sbb
jl
or
cmp
into
loope
ja
xchg
movs
cwde
dec
lea
cmps
mov
out
mov
jb
mov
push
scas
xchg
mov
inc
imul
ja
aas
mov
push
push
jge
jg
lock
in
rcr
int3
pop
mov
pusha
and
sub
ror
push
pushf
sub
xor
push
loopne
jl
loopne
inc
cmp
inc
inc
mov
aas
mov
mov
inc
push
sub
xchg
adc
push
cmp
or
mov
inc
sub
rcl
add
add
adc
jno
sub
(bad)
mov
sub
sub
shl
test
or
mov
test
adc
add
or
cmp
mov
xchg
push
in
ret
lea
or
xchg
sub
jne
and
or
mov
jmp
or
add
sub
and
jmp
nop
pop
sub
push
cdq
retf
add
daa
sti
jmp
xchg
dec
cmp
inc
iret
popf
dec
pop
ins
daa
xchg
test
push
ret
clc
mov
pop
pop
adc
cwde
jne
jo
sub
cs
mov
xor
dec
adc
sbb
and
jae
dec
mov
repz
dec
xlat
je
and
xor
stc
lods
mov
std
add
loopne
popf
int
mov
dec
pop
add
or
adc
or
or
adc
jbe
add
fdiv
fld
jne
or
mov
adc
or
sbb
(bad)
icebp
lahf
jno
inc
bound
add
xchg
loope
add
sahf
fidivr
mov
mov
mov
adc
push
cmp
cdq
or
retf
jle
pop
test
xor
inc
and
cmp
xor
cdq
imul
pop
fisttp
jne
mov
(bad)
and
sbb
lock
sbb
and
out
retf
xchg
sbb
xchg
dec
(bad)
loop
mov
cmp
call
scas
cmps
aad
in
inc
pop
sahf
and
inc
sub
and
call
and
xchg
xchg
mov
or
inc
cmc
sub
cmp
and
jecxz
push
test
cmp
mov
or
movs
dec
in
in
add
popf
shl
cmps
jg
pop
push
int
pop
sub
jbe
pop
loopne
mov
pop
xchg
cmp
cmp
adc
and
jne
dec
or
add
mov
sar
neg
cmps
popf
test
push
or
mov
xchg
sahf
ss
adc
nop
in
mov
cwde
dec
pop
and
daa
ins
xchg
push
add
mov
out
rol
xchg
jmp
outs
adc
mov
mov
popf
add
sbb
ins
inc
shl
mov
nop
popa
rol
inc
push
ss
xchg
mov
in
(bad)
jmp
add
test
and
xchg
add
push
movs
push
and
lods
scas
xor
sbb
or
movs
inc
test
push
mov
add
ins
call
push
mov
sete
(bad)
sbb
push
mov
push
inc
mov
push
fmul
sbb
and
mov
test
mov
popf
jmp
test
frndint
test
and
sahf
sub
jbe
ffree
adc
mov
or
sub
xchg
xchg
xor
nop
js
jae
je
jge
mov
js
into
inc
and
(bad)
gs
cmp
fidiv
(bad)
out
inc
ror
jbe
cmp
loopne
mov
mov
mov
dec
sbb
adc
pusha
ins
cmps
cmps
pop
sub
sti
add
ret
add
sbb
arpl
inc
pop
(bad)
clc
or
jle
sahf
or
inc
pop
dec
sub
loope
loop
xchg
sti
int3
repz
imul
inc
call
rcl
inc
jo
inc
jne
fimul
popa
pop
nop
sbb
adc
ins
(bad)
dec
sub
les
dec
xor
call
sbb
sbb
(bad)
mov
sti
push
and
jnp
mov
mov
add
inc
dec
push
repz
inc
popf
jns
xor
cs
mov
sub
sbb
inc
call
and
xchg
xchg
pop
jl
call
inc
test
rol
pop
movs
xchg
and
arpl
dec
mov
and
jl
cli
icebp
sub
push
(bad)
jb
jne
mov
xchg
mov
jne
dec
mov
ja
and
push
xor
nop
and
add
ins
or
in
(bad)
xchg
mov
adc
mov
inc
dec
fstp
xor
movs
outs
fstp
(bad)
into
and
or
ret
fwait
shl
and
imul
sbb
jo
fld
mov
dec
xlat
adc
xor
and
fdivr
pop
add
pushf
pop
xor
ret
dec
dec
mov
dec
lods
out
push
into
test
add
inc
cmps
cmp
mov
or
sbb
xor
test
cmc
or
jae
outs
repz
fxch
jmp
seto
idiv
fcom
pop
push
fstp
fld
jmp
in
test
sbb
pusha
fs
and
shr
pushf
aad
int3
fstp
xchg
push
fwait
cmp
and
jmp
or
add
xor
mov
inc
sbb
aas
adc
daa
pusha
in
push
mov
xor
mov
mov
mov
repnz
out
loop
mov
je
sbb
cs
aam
adc
push
arpl
loop
sbb
aad
fidivr
xchg
xchg
cmp
or
push
nop
(bad)
fsubr
push
or
jo
sbb
dec
adc
test
push
add
es
jb
push
ins
test
and
mov
add
fidivr
hlt
mov
pop
sub
add
mov
xchg
rcr
int3
imul
add
pushf
sbb
push
test
lea
rol
dec
cld
sbb
inc
xchg
sbb
enter
(bad)
sub
ret
inc
jb
cmp
add
add
sub
and
nop
cmp
cs
cmp
lahf
sbb
xchg
outs
test
movs
mov
add
push
sti
test
repz
cli
push
push
mov
dec
push
pop
test
retf
mov
sbb
add
ss
xchg
push
(bad)
jmp
add
add
rcr
retf
inc
aam
inc
or
mov
loopne
aad
xor
leave
or
add
jns
sbb
aas
cmp
sub
mov
inc
or
or
xchg
(bad)
or
mov
rol
fistp
push
adc
push
mov
sbb
sub
add
mov
lea
out
mov
shr
scas
adc
(bad)
cwde
js
jg
add
push
inc
loop
xor
cs
rcl
adc
and
(bad)
fdivr
arpl
lods
mov
mov
pop
mov
test
xor
adc
sub
in
pop
or
aaa
jmp
add
push
stos
adc
jbe
jne
fsubr
or
and
ins
inc
sbb
fwait
xor
mov
pop
pop
pop
push
cdq
dec
js
sbb
std
and
aam
jnp
pusha
push
les
hlt
adc
inc
sub
push
inc
je
ins
stc
add
push
sbb
or
or
iret
repz
or
fcmovbe
cwde
dec
rcl
mov
push
cmps
xor
das
inc
sub
add
xor
popa
jo
or
cdq
pop
iret
inc
push
in
popa
imul
add
shr
sbb
cmps
xchg
mov
rol
imul
or
and
jp
jp
mov
pop
das
sar
cmps
add
dec
shr
push
dec
push
jl
push
pop
mov
dec
push
clc
inc
mov
mov
ret
clc
cmp
pop
jge
ret
es
xchg
mov
pop
dec
or
imul
into
xor
sub
les
mov
dec
(bad)
retf
add
sbb
and
or
inc
mul
rcr
sub
add
adc
pushf
ror
cmp
loope
add
int3
mov
call
pop
dec
and
hlt
push
mov
adc
mov
fs
rol
jl
mov
pop
mov
push
add
sub
mov
cmp
je
xchg
push
(bad)
fimul
andps
movs
pop
adc
adc
adc
popf
add
cmps
jle
adc
mov
push
movs
pop
dec
or
or
adc
in
jb
popf
jne
push
xchg
movs
test
dec
push
loop
cmp
xor
(bad)
and
sbb
je
cdq
or
lods
sar
sub
xchg
xor
js
inc
add
or
popf
ror
xor
cmp
je
inc
imul
fwait
add
xchg
and
pop
mul
add
cmove
jg
popf
add
jmp
test
push
adc
pop
lea
por
mov
pop
mov
call
sahf
adc
mov
and
push
or
popf
add
nop
addr16
fadd
or
dec
dec
mov
dec
inc
aad
arpl
add
hlt
or
mov
cwde
pop
mov
movs
imul
add
push
rcl
stc
lods
inc
pop
pop
add
jle
mov
jns
jb
lea
mov
and
loopne
shl
icebp
out
jle
sbb
fadd
or
jmp
mov
(bad)
sbb
or
jmp
or
les
div
rcl
add
sbb
or
xchg
out
test
sbb
mov
or
out
outs
inc
inc
inc
iret
push
pop
pop
js
jo
ret
cmp
pop
pop
push
and
sub
add
mov
sub
movs
cmp
sbb
push
sbb
lock
outs
push
pop
aam
sub
das
fld
or
cmps
call
lods
fucomp
cld
adc
sbb
popa
pop
or
or
fstp
mov
rcl
dec
add
mov
xor
dec
shl
push
push
pusha
push
push
aaa
dec
pusha
fs
mov
mov
imul
adc
imul
scas
xor
movs
add
mov
ret
addr16
ss
leave
sub
sbb
test
call
fsubr
loop
call
movs
les
loopne
push
fnstenv
pop
mov
inc
mov
repnz
movs
ja
xchg
dec
pop
xchg
pop
cmp
lds
ss
ins
xor
push
mov
jle
or
mov
lock
sub
arpl
and
and
fcmovbe
shr
or
mov
movs
add
add
mov
xlat
loopne
adc
test
mov
mov
retf
dec
xchg
inc
pop
inc
inc
and
outs
push
pop
lahf
xlat
or
fstp
fs
imul
mov
call
test
je
inc
adc
dec
int3
(bad)
enter
lods
add
jae
or
xor
(bad)
les
cmps
and
add
add
add
or
jg
jb
push
mov
dec
dec
push
pop
cs
retf
push
pop
pop
fs
sbb
les
dec
or
pop
cs
adc
clc
(bad)
lods
add
or
in
mov
jnp
nop
retf
add
test
fwait
pop
(bad)
popf
(bad)
mov
mov
je
add
adc
sub
xchg
fidiv
dec
js
dec
or
mov
js
cs
inc
test
imul
or
mov
dec
push
sub
cs
pop
xchg
or
and
rcl
cmp
jle
sub
push
cmp
test
or
push
rcr
into
test
int
adc
adc
inc
and
dec
mov
(bad)
shl
cld
call
xchg
add
add
inc
pop
scas
dec
cmps
add
les
pop
aam
xor
retf
and
lock
scas
and
das
nop
jne
push
jp
or
pop
xchg
inc
in
sahf
movs
and
sub
push
mov
fwait
ins
in
sbb
into
pop
call
pop
mov
popf
xchg
fadd
popf
inc
outs
jecxz
fwait
mov
stos
sar
jbe
call
mov
popa
add
adc
lock
ret
cmp
jbe
pop
xchg
adc
rol
ret
call
dec
dec
jp
bound
js
adc
out
adc
rcl
(bad)
int3
add
(bad)
mov
xchg
sbb
daa
enter
(bad)
in
and
outs
inc
fadd
fstp
cmp
in
jo
lahf
cmps
jge
and
mov
sbb
mov
sti
es
or
inc
fld
fcomp
sbb
jmp
push
mov
mov
fstp
sub
add
jl
sub
adc
adc
push
mov
fldcw
and
test
and
xchg
in
or
inc
inc
inc
xor
jns
xor
test
mov
and
inc
dec
pop
mov
std
add
outs
stc
cmp
arpl
add
and
mov
jg
or
add
jbe
(bad)
std
repnz
dec
push
fsubr
xchg
sbb
in
int3
sar
nop
mov
aam
dec
mov
push
pop
ror
push
test
sbb
add
cmp
inc
and
dec
xor
cmps
dec
xchg
call
loope
add
add
clc
ins
les
sbb
adc
adc
imul
adc
add
sahf
mov
scas
add
or
and
out
xchg
test
inc
rol
mov
cmps
mov
in
test
loope
sar
adc
in
sbb
aas
mov
std
sbb
int3
in
fidiv
mov
int
out
in
push
and
fcmovbe
std
(bad)
test
and
or
dec
push
pop
cmps
pop
ds
(bad)
or
rep
pop
mov
fisttp
mov
inc
mov
push
push
or
enter
mov
out
lea
fstp
sub
mov
add
mov
mov
pop
ror
out
add
retf
push
loope
sub
pop
xor
lods
sub
aad
cmp
xor
iret
and
adc
or
sbb
dec
adc
jnp
jae
push
into
cmp
std
or
iret
test
mov
loop
sub
lea
jmp
ror
dec
inc
retf
nop
xor
rcr
add
imul
stos
in
js
pushf
int3
jae
sub
pushf
xor
loope
icebp
aam
push
mov
mov
call
ffree
lock
jmp
cmp
pop
shr
adc
bound
push
fst
cld
cmp
in
test
js
push
dec
jmp
mov
dec
stos
ror
imul
fld
test
push
or
lods
arpl
les
test
mov
outs
inc
adc
push
pop
jae
adc
lods
cmp
pushf
or
ja
sub
bound
sbb
push
add
inc
sub
iret
inc
aaa
or
jmp
xlat
popf
and
push
adc
loope
mov
xchg
mov
int3
fisttp
pop
bound
xchg
add
sub
push
add
sub
daa
jo
iret
push
pop
das
mov
adc
add
dec
sbb
push
mov
jmp
push
lahf
mov
lock
mov
or
mov
aas
add
push
rcr
ins
pop
xchg
leave
ins
ret
push
pop
aam
sub
lods
push
cwde
ss
int
mov
pop
sbb
add
jp
dec
pusha
fidiv
pop
lea
and
xchg
hlt
lods
inc
outs
push
in
inc
or
(bad)
fisttp
hlt
iret
in
jmp
pop
inc
sbb
inc
pop
adc
stc
pop
shr
les
mov
push
and
aam
lea
mov
test
push
xchg
in
mov
xchg
sbb
dec
pop
in
je
scas
xchg
ret
xor
into
pop
and
sbb
xchg
dec
jb
leave
hlt
and
das
sahf
and
sub
movs
lock
mov
cmp
add
es
retf
ss
shl
cld
or
xchg
je
imul
mov
add
and
es
sub
adc
sub
in
mov
and
sub
movs
and
sbb
add
mov
imul
lock
je
jne
sub
add
and
jmp
mov
push
push
ja
out
aam
stc
mov
or
add
cmps
inc
cmp
push
repz
xor
repnz
ud2
jmp
popf
mov
call
pop
mov
repnz
fisub
shl
loop
inc
cmps
xchg
add
fstp
add
inc
push
inc
sbb
add
or
test
mov
aad
in
mov
call
adc
sahf
das
sti
not
sbb
fs
fcmovnb
xor
mov
repz
push
add
xor
sbb
jo
loop
dec
dec
es
(bad)
push
xor
jecxz
into
bound
in
and
mov
and
data16
shr
rol
dec
loop
cmp
loop
jo
xchg
jae
pusha
enter
outs
pusha
mov
test
sbb
adc
int3
jmp
and
ror
mov
xor
pop
xor
clc
adc
loope
cmp
dec
cld
cs
lea
(bad)
jnp
outs
sub
test
pop
dec
dec
stc
add
vmovntpd
mov
das
sub
not
push
loop
pop
sbb
test
inc
push
cmp
mov
push
cs
push
or
call
sub
inc
adc
adc
sub
rcl
mov
pushw
dec
mov
mov
and
lods
or
sub
fld
or
xchg
mov
and
xchg
sbb
mov
iret
mov
mov
vprotq
lea
add
sub
add
push
mov
aas
movs
jne
mov
mov
push
ins
arpl
repnz
jae
ror
dec
xor
mov
push
xor
and
sbb
fiadd
cmp
sub
push
sbb
pop
pop
mov
icebp
adc
or
cld
fwait
mov
dec
fstp
add
imul
adc
add
test
sub
stc
add
lods
sub
add
(bad)
cmp
cmp
add
cmp
or
pop
or
cmp
lock
aam
pop
mov
xor
fidiv
dec
jmp
inc
cmp
pop
out
je
leave
mov
mov
test
pop
sbb
adc
pop
add
(bad)
or
loope
dec
daa
cmp
pop
call
or
movs
push
ficomp
mov
addr16
mov
repnz
mov
dec
mov
(bad)
fidivr
popa
mov
test
jno
push
nop
xor
ds
xchg
arpl
dec
addr16
push
in
add
xchg
xchg
in
fsubr
int3
or
mov
sub
cmc
out
fiadd
jnp
pop
js
adc
js
sbb
inc
(bad)
inc
stos
or
fmul
dec
pop
and
nop
(bad)
sbb
mov
mov
aam
in
scas
mov
cmp
push
ret
xchg
movs
inc
jbe
imul
fs
mov
movs
mov
push
xchg
jmp
popf
enter
sbb
nop
add
les
pop
jp
add
out
les
icebp
test
xor
fcom
icebp
jo
xor
and
pushf
and
add
test
or
out
sub
push
mov
jle
les
and
xchg
(bad)
sar
push
fwait
xor
mov
shl
mov
mov
jmp
(bad)
das
add
cmp
mov
sub
inc
inc
outs
add
icebp
adc
sar
push
or
cmp
ins
cli
add
jp
xchg
add
les
sbb
js
out
sahf
xchg
dec
and
retf
imul
add
les
mul
pop
je
or
cmovbe
mov
es
and
bound
hlt
outs
mov
jbe
cmp
mov
sbb
les
in
cmp
mov
sub
popf
cmp
sbb
cmp
js
je
or
jmp
nop
xchg
cmp
inc
nop
mov
jecxz
pop
mov
mov
mov
inc
or
les
mov
es
mov
or
bound
cmp
jno
in
mov
or
xor
mov
and
test
inc
(bad)
jmp
pop
push
jns
xchg
lods
push
cwde
sub
or
outs
sahf
les
call
cmp
mov
ret
push
jp
sbb
push
cmp
cmp
loope
or
int3
je
and
or
ret
mov
add
add
jmp
push
fs
add
or
and
imul
cmp
add
mov
adc
jl
sbb
mov
mov
mov
sub
and
mov
ficom
bound
dec
inc
and
jo
pop
mov
cmp
inc
sub
mov
dec
mov
xchg
test
in
mov
mov
icebp
int3
sbb
and
cmp
and
and
int3
push
push
movs
jecxz
jo
and
je
push
pop
mov
or
popa
ss
inc
loop
aam
mov
pop
jb
imul
test
call
iret
ins
inc
ret
dec
pop
adc
jnp
out
dec
mov
(bad)
xchg
sbb
adc
xor
inc
cmp
fcomp
test
adc
fld
ret
or
mov
jae
(bad)
(bad)
les
lds
mov
and
mov
cmovp
mov
and
push
cmps
outs
daa
loope
xor
jmp
les
jl
push
add
and
cmp
inc
daa
add
and
test
rcl
rcl
or
inc
daa
cmp
cli
out
cwde
and
inc
or
test
popa
add
push
inc
aas
repnz
xchg
xchg
enter
leave
or
sbb
sbb
pop
jecxz
jge
pusha
shl
dec
movs
mov
jp
lods
xchg
xor
push
xchg
cmp
cmp
std
movs
push
imul
je
push
pushf
popa
call
dec
add
fwait
(bad)
push
mov
adc
push
pop
cmp
xor
pop
cwde
arpl
push
sbb
adc
xor
push
jae
pop
push
or
sbb
mov
cmp
add
ror
rcl
push
or
jmp
in
clc
jmp
add
rol
cmp
and
inc
ja
mov
pop
je
pop
mov
fdivr
icebp
lods
sahf
and
jp
test
cmp
call
pop
mov
leave
mov
inc
lods
or
mov
test
mov
ret
or
sbb
inc
stos
add
jne
je
inc
add
jo
pop
and
in
nop
rol
fs
add
cmp
and
loope
cld
sub
and
or
int
push
jae
std
push
nop
adc
mov
loopne
mov
cmp
sti
sub
fs
fwait
add
pusha
push
jmp
rdpmc
inc
out
mov
jp
mov
jecxz
push
test
push
add
jl
adc
mov
cmp
sbb
out
cmp
and
sub
mov
jl
inc
and
fldenv
je
ins
push
int3
mov
mov
push
and
pop
adc
les
stos
jne
and
mov
leave
pop
and
xor
inc
jge
loop
outs
jb
imul
jne
sbb
shl
sub
sub
dec
sub
and
push
mov
enter
jo
sbb
adc
lds
fcom
and
push
sub
popa
jne
sbb
add
push
(bad)
xchg
lods
mov
and
call
lock
dec
mov
sub
clc
stos
xor
or
les
add
mov
pop
xor
mov
xor
aaa
clc
lock
(bad)
mov
int3
sub
aaa
outs
adc
or
xor
sub
stos
aam
jae
pushf
sbb
xchg
pop
inc
fdiv
xchg
loopne
dec
push
push
mov
inc
loopne
push
push
inc
jnp
jl
xor
mov
mov
ins
out
push
or
data16
xor
jne
sub
xchg
dec
push
and
sbb
sub
cwde
push
adc
jmp
cdq
inc
ins
push
jne
mov
xor
push
hlt
je
sbb
xlat
push
retf
gs
out
test
dec
mov
test
loopne
int
mul
call
mov
arpl
push
out
xchg
adc
rcl
mov
push
and
cmp
jnp
push
and
clc
push
pushf
retf
inc
lea
test
inc
jbe
daa
mov
aaa
sub
add
outs
add
cmps
push
push
mov
inc
nop
jmp
les
adc
nop
popf
out
inc
and
imul
mov
push
cld
mov
aas
int
xchg
xchg
aam
cmp
enter
and
lahf
sbb
(bad)
mov
lods
fnstcw
les
cmp
imul
pop
jmp
lahf
retf
(bad)
dec
sub
push
pop
xchg
sbb
aam
repz
test
push
mov
cmp
ficomp
dec
adc
sub
xchg
add
fisttp
xchg
rcr
add
push
sbb
sub
xchg
rdtsc
push
xor
or
je
inc
stos
cmc
xlat
add
mov
mov
pop
sbb
cmp
out
nop
or
mov
and
mov
sbb
pop
add
inc
xchg
inc
pop
lods
add
sbb
lock
cmc
inc
xor
aam
push
arpl
cli
js
xchg
mov
std
cmp
push
and
fadd
pop
xor
sbb
xor
fdiv
loop
push
push
clc
push
xchg
ins
pop
mov
loopne
adc
sub
pop
stc
or
and
aaa
push
fadd
gs
fistp
add
inc
aas
xchg
lea
fstp
xchg
cli
jmp
add
sbb
push
imul
inc
mov
or
pop
int3
push
fs
jmp
pushf
std
or
mov
lar
(bad)
xor
dec
enter
dec
js
adc
shl
mov
or
je
test
or
xor
xor
pusha
mov
aam
or
and
sub
mov
mov
fs
push
aaa
xchg
pop
jmp
lea
mov
xor
dec
xchg
aam
mov
and
test
and
jbe
mov
inc
aam
fiadd
add
not
lea
adc
pop
stc
call
xchg
lahf
(bad)
xchg
sub
pop
push
jbe
sub
mov
sub
push
out
and
jnp
jp
inc
jl
or
inc
sbb
scas
popa
xor
pop
test
and
stos
enter
mov
ds
fisttp
jmp
das
sub
and
mov
lea
pop
inc
pop
(bad)
cmp
fld
mov
jo
ja
popa
es
cmp
cmps
fcom
les
repz
fisubr
and
dec
ror
inc
int3
pop
popf
ss
mov
cmp
adc
push
das
gs
xor
inc
mov
push
(bad)
sbb
mov
rcl
out
test
(bad)
les
sbb
xor
data16
pop
cmp
inc
stc
lds
fs
pop
jne
iret
inc
cmps
inc
aad
jle
and
pop
pop
test
cmp
adc
xor
adc
xor
push
and
xlat
mov
xor
loopne
js
dec
cmc
ret
test
ins
mov
and
mov
pop
mov
mov
(bad)
cmps
(bad)
pop
inc
add
fidivr
jne
js
mov
dec
pop
mov
pop
lea
cmp
push
cmps
add
sub
dec
or
ins
mov
pop
in
xor
or
sbb
cwde
sub
pop
or
sbb
jg
mov
cld
lock
mov
jle
repnz
mov
dec
add
mov
and
jp
mov
ja
and
shl
fisubr
push
and
js
test
inc
dec
xor
push
inc
lods
sub
jge
mov
sub
test
pusha
dec
dec
dec
xor
pop
imul
jb
icebp
pop
mov
cmp
mov
(bad)
pushf
mov
pop
enter
dec
leave
pop
and
inc
xchg
mov
call
(bad)
adc
jno
cmp
out
out
popa
jmp
or
sar
cmp
mov
push
lods
push
xchg
and
and
or
or
sahf
xlat
loopne
push
mov
cdq
in
out
mov
cmp
mov
adc
push
imul
nop
add
ret
(bad)
jmp
mov
popf
popa
ror
loope
dec
or
test
sub
and
push
call
ret
jne
dec
aam
jge
sbb
adc
in
inc
xor
(bad)
je
imul
fwait
test
add
jl
mov
int3
jl
push
mov
mov
ror
pop
xor
rol
push
jmp
jge
dec
inc
arpl
clc
icebp
test
mov
test
jmp
or
push
adc
adc
js
mov
mov
mov
add
call
or
jmp
aam
add
or
es
jl
mov
popf
div
jle
test
cmp
pusha
inc
mov
mul
cmp
dec
daa
fstp
xchg
adc
lock
xor
sub
and
rcl
ja
call
rol
(bad)
jmp
sti
push
mov
test
adc
fcom
push
xchg
das
xor
addr16
adc
ret
popa
scas
add
or
int
pusha
and
push
push
lock
push
pop
inc
xor
push
cmp
ins
pop
or
pop
push
push
pop
dec
xor
in
movs
add
dec
push
push
xor
scas
adc
popa
add
lahf
ret
adc
xchg
das
push
ret
inc
add
lds
mov
inc
shl
or
das
sbb
sar
popf
mov
sbb
xor
lods
shr
or
test
es
lea
icebp
mov
mov
push
es
push
sub
dec
mov
in
xor
jno
mov
xchg
lea
xor
ja
jne
pop
push
push
ja
test
into
mov
loopne
push
fwait
sbb
inc
jbe
inc
loopne
xchg
outs
jnp
add
sar
adc
xor
cmp
mov
or
mov
mov
fisttp
js
sub
sahf
(bad)
movs
popf
outs
inc
lahf
nop
in
push
xchg
addr16
push
retf
popa
xor
cmps
xchg
adc
scas
jnp
test
(bad)
ror
cmp
ret
mov
add
fcom
xor
jmp
pushf
sub
aaa
push
js
mov
push
fcomp
in
push
push
lea
lea
in
addr16
pop
imul
mov
mov
movs
enter
das
jg
(bad)
xor
jns
shr
mov
push
mov
ror
jmp
xchg
je
ret
ins
mov
ret
test
enter
inc
cmp
adc
add
xor
and
daa
mov
mov
arpl
cmp
and
cs
cmp
cmc
inc
mov
imul
adc
pop
sbb
sbb
nop
adc
cmp
xor
push
cmp
ret
lods
add
nop
loop
mov
jmp
loop
jo
les
jecxz
ins
mov
jbe
mov
movs
and
pop
and
aam
sub
popf
cmp
push
pushw
pop
or
mov
clc
dec
dec
xor
xor
push
pop
clc
(bad)
les
add
sub
mov
cmp
lods
push
loope
add
xchg
popa
inc
arpl
aaa
imul
shl
pop
ins
pushf
push
sub
loopne
adc
or
(bad)
pop
pop
adc
add
and
add
fidiv
xchg
xchg
gs
inc
mov
mov
pop
ins
jns
lock
push
add
or
out
vmovd
bound
stos
and
je
mov
int3
push
lea
and
add
aam
mov
repnz
jecxz
(bad)
mov
(bad)
mov
daa
and
jmp
cmp
push
push
lahf
inc
int
push
fnop
loopne
shl
(bad)
or
pop
xor
sbb
add
add
jb
push
mov
and
xchg
stos
iret
ucomiss
sbb
movs
jne
cmp
popa
sbb
ins
mov
sbb
and
xchg
out
out
ins
scas
sub
lock
cmps
sbb
inc
nop
mov
adc
lods
enter
cmp
adc
inc
lods
pop
pushf
inc
xchg
outs
mov
fcomp
(bad)
push
mov
repnz
mov
shl
sub
sub
sbb
adc
xor
adc
push
mov
sub
xor
imul
leave
ss
sbb
lods
and
rcl
pop
sahf
add
xor
imul
je
mov
daa
add
inc
or
dec
call
rcl
popa
jle
mov
mov
hlt
adc
iret
dec
sbb
rcr
push
les
pusha
sub
add
out
shl
or
xor
nop
pop
cmp
sub
ret
inc
mov
sbb
cld
cmp
fistp
lock
push
jne
and
and
das
push
repnz
and
sbb
adc
into
sti
add
pop
aad
push
xor
and
xchg
sub
push
push
xchg
and
enter
sbb
xor
cmp
jo
push
inc
push
dec
or
pop
enter
cmc
loopne
and
xor
loopne
nop
mov
loopne
and
cmp
jo
call
in
in
dec
test
dec
shl
or
call
or
loopne
jb
xor
fmul
in
jb
or
or
cmp
ret
jbe
inc
cmc
sub
sbb
adc
mov
inc
pop
or
inc
lock
sub
sub
adc
xchg
mov
cmp
sbb
fsub
mov
shl
add
fwait
cmps
jge
icebp
add
sub
ret
mov
and
cmps
imul
jnp
or
adc
adc
imul
and
and
sub
mov
lods
dec
add
pushf
shl
push
pushf
aam
sub
push
jge
aaa
test
xor
jae
enter
add
dec
sbb
and
or
cdq
adc
push
outs
dec
and
aas
inc
(bad)
pop
push
inc
inc
adc
mov
sbb
xchg
inc
jmp
sbb
sbb
add
inc
fistp
retf
cdq
push
call
pop
sti
into
pop
cmp
push
dec
adc
ret
or
mov
not
mov
or
sub
mov
xchg
retf
pop
mov
sub
sub
and
retf
xchg
mov
cmp
dec
(bad)
rol
and
sub
clc
fmul
cmps
fisub
ss
add
int3
add
adc
add
ret
fcomp
xor
jmp
lods
mov
sub
ins
das
dec
cmp
pop
enter
popa
loope
jle
sbb
or
cmp
cmp
adc
adc
xor
adc
lock
push
into
adc
movs
daa
movs
mov
jecxz
loope
push
sbb
push
xor
ret
or
dec
add
(bad)
sub
mov
push
test
repnz
pusha
js
cs
cmc
xchg
or
adc
push
sub
mov
lods
dec
or
call
dec
add
push
and
lahf
ss
shr
lock
test
(bad)
imul
clc
bound
or
in
movs
aad
or
xchg
jo
es
sub
inc
or
loop
xchg
enter
std
add
and
cmp
sub
(bad)
in
mov
push
and
fisttp
dec
inc
shl
loope
pop
test
mov
(bad)
jne
push
scas
jmp
sqrtps
mov
(bad)
je
dec
and
mov
(bad)
add
push
hlt
add
sahf
push
or
add
imul
mov
ret
sbb
(bad)
jno
xchg
das
in
xchg
cmp
ss
lock
sub
or
add
in
push
xchg
push
and
in
push
adc
(bad)
push
(bad)
(bad)
mov
sub
or
cmp
push
test
pusha
std
dec
mov
jae
add
adc
std
sbb
xchg
fdivr
sbb
test
or
cmp
mov
fnstcw
lock
and
xchg
sti
adc
push
in
xlat
add
sbb
jbe
jbe
or
or
ret
sbb
pusha
jge
add
(bad)
fild
push
call
jo
dec
mov
jno
dec
sub
iret
push
pop
loop
add
jmp
mov
pop
mov
fld
int
push
jbe
das
imul
aaa
sub
push
adc
pop
mov
movmskps
mov
xchg
jns
pop
mov
jo
push
and
(bad)
sbb
xor
imul
pop
and
sub
add
test
push
mov
dec
adc
fsubr
pusha
test
inc
aad
push
xchg
aam
push
cmp
sub
inc
std
jge
jo
dec
(bad)
out
jmp
jmp
fs
adc
fcom
push
adc
test
adc
push
xchg
jo
mov
dec
dec
pop
sub
dec
push
pop
add
retf
movs
loopne
cmps
add
ins
je
popf
sub
test
add
xchg
retf
inc
sti
sub
jmp
mov
mov
sub
jecxz
or
sub
ja
cmps
pop
pop
or
sbb
dec
and
push
push
outs
xchg
in
or
push
jl
lahf
jge
or
iret
and
dec
xor
(bad)
cs
add
jmp
dec
sbb
jbe
cdq
pop
pop
mov
pop
mov
sbb
jmp
ins
fisub
ins
retf
ja
into
adc
(bad)
push
dec
xchg
lock
rol
push
dec
sbb
(bad)
sub
fcom
or
adc
mov
and
or
jae
rcr
pop
test
jne
mov
and
sub
push
jge
xor
imul
pop
or
push
push
adc
inc
jmp
nop
ret
cmp
sub
cmp
and
jmp
mov
inc
fwait
test
jge
push
js
dec
xchg
test
xor
dec
aaa
test
or
sti
xor
mov
adc
inc
sub
rcl
cmp
push
aaa
enter
and
xor
push
gs
in
int3
adc
aas
inc
add
mov
sub
xchg
push
and
movs
mov
mov
or
xor
mov
dec
sbb
loopne
loopne
adc
je
leave
and
sub
adc
push
ins
sahf
call
mov
dec
loopne
call
jmp
cwde
rol
push
repz
int
lods
call
cwde
inc
dec
add
addr16
add
mov
dec
jl
and
mov
fs
or
loope
fwait
fwait
dec
dec
ror
fsubr
out
and
inc
nop
or
mov
(bad)
outs
adc
sbb
mov
and
imul
jmp
jmp
leave
push
retf
in
pop
or
fsubr
add
cmps
mov
dec
sbb
add
test
paddusb
mov
in
inc
enter
ins
ins
mov
add
dec
js
push
test
pusha
mov
adc
jne
push
inc
setnp
add
adc
dec
inc
adc
sbb
and
imul
inc
pop
and
xchg
pop
adc
pop
sbb
les
cmp
(bad)
lds
jb
pop
push
leave
add
fnstenv
(bad)
or
adc
and
jl
sub
sbb
xor
push
xchg
(bad)
push
push
push
xchg
inc
inc
dec
mov
or
sbb
daa
js
jecxz
imul
rol
leave
and
push
sar
adc
test
adc
test
sbb
dec
sbb
jno
pusha
adc
cmps
lea
or
push
jp
xor
paddusb
movs
mov
(bad)
sahf
xor
cdq
js
dec
sti
xchg
cmp
push
mov
mov
mov
enter
test
cmp
add
sub
push
sub
js
adc
mov
or
push
jo
jecxz
(bad)
pusha
in
call
adc
or
rcl
neg
pop
pop
adc
test
(bad)
push
stos
push
test
retf
mov
addr16
push
dec
inc
ret
jecxz
shl
add
sbb
sub
scas
add
fsub
cmp
xchg
jne
inc
jmp
and
ins
in
gs
inc
adc
add
mov
popa
mov
test
inc
pop
xor
mov
jae
dec
jecxz
or
xchg
xor
xchg
sbb
push
cwde
les
adc
and
(bad)
adc
xor
adc
jmp
xor
(bad)
int
xchg
adc
mov
or
add
and
mov
mov
cmp
cmp
(bad)
(bad)
(bad)
push
cmp
cmp
enter
xchg
jecxz
and
or
push
fsub
shl
(bad)
fsub
and
add
and
fcom
rcr
xchg
and
inc
jbe
cs
mov
sub
fsubr
push
or
gs
test
or
cmp
cmps
(bad)
xor
icebp
mov
and
pop
gs
inc
sbb
sbb
adc
sbb
jmp
sub
xchg
xchg
jnp
retf
lahf
xor
je
std
xchg
jbe
call
inc
sbb
clc
inc
or
movs
and
adc
jmp
mov
movs
mov
imul
adc
mov
test
ss
sbb
push
push
xchg
fld
or
test
push
xchg
int3
pop
xchg
scas
repnz
sar
inc
adc
unpckhps
mov
fsub
jne
dec
jne
xchg
or
aaa
pop
xor
pop
cwde
sub
inc
mov
stos
movs
ret
test
arpl
test
rol
int3
or
enter
push
shl
xchg
dec
repnz
push
icebp
cs
xchg
and
int3
leave
cmp
scas
jge
inc
jae
jl
popa
loopne
imul
xor
dec
push
inc
enter
inc
cld
sub
mov
jecxz
leave
add
add
gs
enter
pop
mov
mov
int3
mov
popa
mov
out
jno
mov
fiadd
sbb
(bad)
dec
ss
push
lock
jg
push
pop
xor
mov
cmc
dec
rol
and
and
imul
aad
and
movs
sbb
scas
pop
pop
fst
push
dec
imul
xor
dec
outs
fwait
cmps
push
adc
dec
cs
jbe
mov
mov
xor
pop
popa
mov
out
sbb
out
mov
mov
dec
shl
sbb
data16
sar
add
popf
div
and
push
outs
neg
sbb
dec
pusha
add
add
and
inc
clc
and
jno
jmp
fmul
push
mov
adc
xor
les
call
lock
xor
add
adc
sub
call
xchg
lahf
or
push
push
es
loopne
jmp
(bad)
arpl
imul
push
xchg
leave
add
das
push
push
in
jb
jae
adc
in
adc
adc
sub
out
leave
add
pop
retf
call
adc
retf
lock
lea
gs
je
sbb
retf
and
int
xchg
pop
inc
push
inc
adc
add
add
clc
mov
icebp
mov
adc
cdq
and
daa
add
or
or
jecxz
rcl
xor
or
or
sub
int3
push
pop
aas
cmc
pop
xchg
sbb
fisub
vpcmpgtw
hlt
inc
mov
ret
cdq
fs
mov
push
push
adc
adc
fs
dec
sbb
xchg
dec
es
and
sub
es
xor
es
fs
cmp
inc
dec
pop
or
inc
xadd
and
call
add
inc
add
add
retf
jecxz
xor
or
push
sbb
jo
js
push
dec
pop
cmp
dec
add
(bad)
add
in
xchg
pusha
adc
or
daa
dec
mov
pop
lods
adc
add
and
in
test
sbb
push
pop
scas
xchg
or
adc
pop
or
arpl
jns
push
dec
dec
pusha
mov
sub
retf
dec
lods
add
add
aad
test
add
sbb
call
or
cmp
add
cmp
xchg
cmp
inc
dec
push
push
sbb
mov
mov
lock
mov
dec
xor
shl
add
and
or
pop
rcr
mov
cmps
into
setne
xchg
hlt
xchg
lahf
jne
hlt
and
and
or
sub
adc
repnz
shr
add
dec
popa
inc
pop
add
pop
mov
mov
add
das
push
js
xchg
jle
call
cli
or
or
rol
or
adc
xchg
shl
sub
push
push
sub
test
inc
jmp
push
push
mov
mov
sbb
xor
aas
adc
shl
fist
test
test
imul
cli
and
sbb
jne
jp
out
test
not
aas
ror
xchg
inc
ss
xor
xlat
rol
stc
mov
shl
dec
mov
in
ror
je
push
pop
cmp
push
pushf
pop
and
sbb
push
cld
scas
or
out
inc
dec
daa
and
sbb
xchg
push
in
cld
aam
adc
dec
inc
xchg
mov
dec
add
mov
inc
sahf
jae
push
das
xchg
dec
clc
addr16
push
gs
sbb
sub
pop
pop
sub
push
addr16
and
fld
std
or
inc
ja
add
or
cmps
push
and
call
ins
sbb
hlt
xchg
mov
mov
and
push
dec
ss
push
sub
int
add
fdiv
mov
sub
inc
fst
cmps
retf
mov
or
mov
push
call
cld
mov
mov
xor
push
shl
mov
dec
add
or
rcl
inc
dec
bound
cdq
pop
inc
int
mov
lock
or
inc
outs
sbb
cmps
in
cmp
ja
ins
push
xor
lods
add
xchg
sbb
fadd
js
pop
xchg
adc
dec
jo
jne
push
(bad)
rcl
push
sub
push
mov
pop
daa
loopne
inc
xchg
jne
mov
xor
adc
cmp
inc
adc
mov
mov
sbb
ins
jecxz
add
add
and
sbb
out
adc
jbe
jle
dec
dec
jge
add
out
adc
sub
mov
mov
and
push
and
inc
scas
xchg
pop
or
and
rcr
add
adc
in
xor
or
adc
push
pop
add
xchg
xchg
inc
mov
call
and
adc
jl
out
(bad)
shl
jae
dec
sub
push
add
call
sbb
daa
jmp
push
push
jb
or
push
pop
jg
sbb
push
push
sub
mov
push
sub
jp
inc
repz
lods
push
or
xchg
pushf
sbb
retf
mov
leave
adc
gs
retf
dec
or
add
push
inc
scas
test
lds
(bad)
fidivr
or
test
mov
push
push
jae
dec
pop
jne
inc
(bad)
ror
mov
xchg
lahf
aam
add
rcl
cmp
(bad)
test
cld
leave
cmp
je
inc
dec
and
test
stc
sbb
mov
sar
add
int
inc
jmp
mov
cmc
pusha
dec
aaa
mov
adc
sub
stc
jb
adc
ret
pop
add
inc
adc
push
test
(bad)
lds
or
sbb
jmp
fist
adc
icebp
imul
mov
call
fs
es
xor
and
pushf
adc
sbb
xor
cs
pop
ins
fild
add
sbb
jns
cmp
adc
jo
stos
cmp
pop
jo
sub
pop
mov
mov
mov
jns
or
add
inc
stc
xor
popa
ret
inc
cmp
rcr
mov
cmps
in
jno
pop
jmp
push
add
jns
jns
add
xchg
adc
shr
adc
and
retf
outs
cmp
adc
dec
mov
mov
adc
xor
add
ret
ins
sub
sbb
push
sub
xor
sahf
and
inc
push
sub
or
and
cmp
and
inc
lahf
pusha
lds
mov
cld
sub
icebp
mov
push
test
fs
mov
sub
pop
jmp
inc
pushf
outs
movs
sub
add
sbb
mov
cwde
and
jle
add
mov
call
in
and
mov
loope
adc
or
adc
jae
xchg
push
inc
inc
push
pop
mov
and
or
clc
fiadd
push
ins
push
push
push
enter
pop
enter
or
and
dec
jns
fwait
add
xor
adc
iret
mov
add
loope
shl
movs
sar
adc
sar
xor
xor
add
pop
test
xchg
pop
xor
les
add
mov
sub
xchg
gs
dec
inc
mov
cmp
out
fsub
pop
ret
xor
lock
dec
lods
cmps
lea
mov
shr
cmp
(bad)
lea
add
jno
push
mov
sub
push
push
push
or
pop
icebp
test
(bad)
push
out
add
jle
inc
dec
(bad)
adc
or
ins
add
repz
push
sbb
and
loopne
push
test
or
or
or
ds
xchg
outs
push
add
test
vmwrite
lds
loopne
jp
es
and
sbb
push
pop
pop
adc
inc
sbb
inc
dec
ret
fldenv
test
push
cli
mov
lock
sbb
xchg
mov
shl
fmul
nop
mov
push
cs
pop
into
cs
xor
xchg
outs
dec
loope
ins
das
adc
sub
dec
mov
retf
sub
gs
or
adc
sub
add
leave
(bad)
and
test
lahf
or
or
and
call
leave
add
sub
or
sbb
outs
popa
push
sub
fisub
cmp
js
push
lea
jmp
sub
dec
or
ret
sub
aas
xor
cmp
jo
call
dec
pop
fmul
cmc
out
dec
rcr
out
loopne
dec
sub
add
ins
fucomip
je
dec
test
sbb
(bad)
and
(bad)
mov
dec
(bad)
cmp
cmp
(bad)
inc
ss
test
rol
(bad)
cli
(bad)
adc
add
push
shl
int
pop
fwait
stc
fsub
xor
adc
mov
push
(bad)
pop
xchg
push
adc
les
push
js
pop
adc
and
nop
sbb
adc
retf
sbb
push
mov
sti
adc
dec
aas
add
sub
int3
sbb
out
xchg
or
pushf
pop
and
ret
and
and
mov
sar
out
add
push
push
dec
ins
data16
ins
mov
sub
lahf
out
mov
dec
mov
stos
retf
mov
jge
ret
push
mov
sti
cmp
dec
adc
add
(bad)
and
xor
add
cmp
xor
dec
fst
pop
cmp
int3
shl
(bad)
repnz
push
loope
push
sbb
xor
xor
sbb
adc
cmp
sub
cmc
jo
pusha
(bad)
fstp
pop
inc
es
out
pop
fs
or
mov
jne
jbe
mov
movs
sub
outs
loope
xchg
pop
ret
popa
sub
cmp
mov
cmp
sub
pusha
je
jb
sub
in
or
mov
(bad)
sub
inc
mov
int
int
jne
(bad)
(bad)
mov
aas
shl
jmp
xor
jmp
mov
cmp
hlt
xor
jbe
xchg
leave
mov
sub
je
dec
mov
jo
mov
adc
xor
sbb
adc
jne
leave
dec
sbb
in
sbb
out
dec
adc
add
xor
hlt
mov
jg
push
push
lock
mov
icebp
icebp
jne
xchg
fld
cmp
add
adc
pop
ret
or
mov
mov
sub
pushf
mov
adc
sub
(bad)
or
rcr
(bad)
adc
inc
inc
and
or
or
mov
dec
lea
test
jp
xchg
je
ins
mov
dec
xchg
mov
ret
inc
jne
into
rcr
cmp
push
aaa
mov
retf
mov
mov
mov
addr16
mov
push
add
nop
ss
inc
or
adc
adc
or
fcomp
inc
xor
ins
das
sbb
pop
and
repnz
jle
and
fs
data16
sub
sub
dec
inc
xchg
xor
and
fs
hlt
cmp
inc
xor
call
xor
and
inc
rol
push
and
inc
loop
and
retf
call
add
push
outs
cmc
cmps
pop
xor
inc
xor
or
rol
daa
jecxz
or
add
and
sbb
mov
test
(bad)
pop
add
xor
outs
loop
adc
add
shl
add
adc
mov
inc
hlt
imul
call
push
jo
or
dec
inc
(bad)
inc
add
or
xor
and
movs
sub
fsubr
push
jae
lods
shl
jmp
je
fsub
add
mov
xor
add
shl
jmp
sbb
jmp
cld
add
and
outs
mov
arpl
arpl
add
inc
inc
adc
lock
lock
mov
test
xor
into
sbb
push
daa
push
mov
jg
push
ror
gs
movs
into
mov
and
add
push
xor
push
xor
jge
add
sar
xchg
ficomp
and
adc
in
or
sbb
ror
hlt
gs
mov
push
lds
out
nop
mov
dec
imul
push
or
dec
dec
adc
ins
mov
mov
jmp
push
mov
xchg
(bad)
stc
or
pop
adc
nop
or
jmp
push
push
adc
aam
push
xchg
add
xchg
aam
and
movs
xchg
pop
outs
xchg
xchg
das
or
sbb
sbb
inc
add
xchg
clc
std
sub
dec
movs
addr16
dec
adc
imul
rol
lock
sbb
inc
fwait
mov
mov
rcl
mov
sbb
or
xchg
icebp
dec
or
or
(bad)
mov
imul
adc
mov
daa
mov
imul
push
sbb
fdivr
mov
test
dec
inc
inc
not
mov
dec
and
xor
or
fsubr
push
mov
mov
data16
setl
cmp
xchg
retf
retf
in
push
fsub
pop
inc
and
test
mov
mov
movs
lahf
jmp
rol
aaa
inc
and
bound
add
jo
adc
push
add
stos
push
test
cmp
push
or
mov
stc
dec
inc
jb
cld
mov
mov
cmps
adc
and
rcr
or
into
movs
jge
sub
or
xchg
push
ins
pop
call
jo
or
add
push
mov
test
lods
or
in
mov
out
rol
cmp
cs
add
sbb
sub
xchg
or
loopne
add
imul
pop
enter
stos
pop
inc
rol
loop
adc
xchg
jle
rol
push
adc
xchg
and
add
repz
mov
push
push
push
dec
fadd
pushf
adc
daa
outs
sbb
pop
adc
xchg
jns
xor
add
sbb
loopne
das
jl
mov
lods
jl
xor
add
inc
sub
xchg
dec
div
xchg
dec
pop
push
cmp
jecxz
int3
sbb
sbb
pop
aam
and
mov
push
or
outs
or
sub
aad
push
mov
push
sbb
add
aas
arpl
mov
adc
aam
fwait
cmc
add
aaa
shr
push
or
outs
inc
adc
push
test
sub
xchg
cmc
je
add
xchg
or
scas
call
mov
push
mov
jno
push
and
clc
xor
or
test
or
test
push
inc
loopne
adc
sti
and
inc
pop
and
call
pusha
inc
sub
xchg
cld
sub
sbb
lds
and
inc
add
mov
jecxz
mov
or
sub
ss
push
sbb
sbb
sub
xor
test
movs
jo
dec
pop
not
and
push
xor
add
sub
and
inc
jno
adc
pop
or
mov
jle
clc
pop
push
es
(bad)
in
sbb
adc
(bad)
cmp
mov
adc
aad
ud1
into
lea
mov
call
pop
fisubr
cmp
push
mov
inc
inc
xchg
jge
dec
mov
aam
mov
or
sub
xor
cmp
sub
loopne
xchg
and
inc
pop
add
fisttp
xlat
call
mov
arpl
sub
retf
and
sahf
ins
mov
je
mov
popa
mov
(bad)
or
mov
test
xchg
inc
xor
test
mov
lods
aas
push
aam
sub
push
stos
out
pop
pop
outs
stos
adc
sub
mov
cli
retf
dec
nop
adc
sub
retf
fbld
push
scas
ins
retf
adc
or
add
mov
je
dec
ret
inc
out
test
push
lock
sbb
mov
hlt
pop
test
gs
cmp
neg
ret
in
js
add
test
fist
movs
lea
jmp
(bad)
call
loopne
push
add
add
or
(bad)
cmp
inc
loopne
out
inc
ins
xchg
rcl
push
shl
inc
cmp
xchg
(bad)
mov
inc
ins
ins
add
jo
clc
dec
loop
xor
push
aam
rol
leave
mov
test
xadd
push
test
fsub
cmp
es
xor
xor
mov
push
dec
rol
int3
cmps
call
adc
call
mov
ss
sbb
cmp
sbb
cmps
rcr
jnp
sbb
xor
movs
adc
push
cmps
add
je
or
adc
fldpi
or
sbb
sub
xor
or
cmp
push
rcl
mov
push
cmps
bound
ss
or
dec
and
lock
add
xor
xor
enter
adc
imul
ss
(bad)
dec
dec
test
xor
dec
fmul
rcl
jne
lds
jl
sub
lock
jl
jo
iret
das
xor
inc
inc
and
add
add
push
pop
add
popa
cld
push
or
cmp
jle
cmp
lods
lods
(bad)
icebp
or
and
jno
sbb
imul
and
clc
gs
les
fnsave
mov
push
adc
cmps
out
(bad)
dec
mov
in
in
call
loope
add
xor
mov
dec
jmp
fadd
cmp
inc
or
and
push
push
push
push
jno
sub
pusha
inc
pop
bound
mov
imul
xor
cmp
and
movs
adc
ret
or
nop
sub
cmps
loope
jmp
inc
sub
adc
jecxz
inc
adc
and
xor
sbb
jmp
adc
adc
sbb
xchg
clc
hlt
ret
sbb
lahf
pop
sub
mov
(bad)
pop
test
je
jno
cmp
je
mov
test
lock
pop
in
mov
loope
mov
lods
mov
call
xor
fadd
add
adc
dec
and
mov
dec
gs
dec
push
retf
jp
not
jle
push
push
push
js
push
xchg
push
jmp
adc
jmp
aam
sub
ror
repnz
and
ret
fsub
sub
mov
call
jmp
aas
cmp
add
in
mov
(bad)
adc
fisub
add
xchg
push
inc
pop
inc
mov
sub
outs
add
pop
cmp
jge
mov
jo
dec
push
ins
loop
pusha
sbb
jbe
adc
push
xchg
icebp
gs
cdq
mov
dec
data16
sbb
mov
push
or
adc
call
push
add
call
xchg
inc
xchg
ret
push
out
bound
mov
mov
idiv
test
pusha
das
cmp
std
push
out
add
push
cs
aam
cmc
sar
sbb
dec
stc
sahf
inc
stc
in
scas
inc
rol
test
hlt
in
push
lods
xor
movs
add
add
jns
lea
mov
adc
lea
add
sub
push
adc
xor
gs
dec
jl
lahf
test
mov
sub
loop
xchg
jno
jge
sbb
jb
inc
push
or
add
or
jmp
xor
lods
retf
push
out
repz
and
jecxz
fmul
mov
inc
mov
xchg
sbb
xor
push
lahf
lods
adc
cmps
push
xor
add
pop
adc
mov
ds
dec
sbb
sbb
inc
mov
inc
pop
adc
or
and
jmp
push
dec
push
idiv
jmp
xchg
pop
push
movs
dec
loopne
outs
pop
mov
mov
jge
cmps
and
rcr
adc
cmps
repz
shl
pop
push
mov
mov
aad
shl
pop
in
xor
xorps
xor
mov
and
mov
and
mov
ret
push
add
ror
push
nop
and
lea
mov
push
cmp
and
inc
jo
push
xor
cmp
shl
and
push
or
lea
add
repz
adc
xchg
inc
adc
and
movs
(bad)
cli
and
add
or
call
(bad)
push
aam
je
aas
sub
cmp
sub
fdivr
adc
(bad)
repz
pusha
rcr
aaa
lods
sub
adc
sbb
cwde
jl
rol
ss
add
and
idiv
scas
popa
mov
retf
push
sub
jmp
ret
fstp
ins
push
inc
and
pop
in
or
and
jbe
add
inc
xchg
enter
pop
and
call
sar
or
fwait
pop
xor
int
add
and
or
mov
xchg
out
fcomp
mov
inc
xchg
out
adc
cs
push
stos
cmp
or
and
and
cmp
cwde
out
and
cmp
adc
inc
sbb
and
push
push
and
xor
dec
pop
ret
(bad)
adc
pop
in
xor
fbld
or
mov
adc
lods
cmp
fldcw
stc
ins
cmp
push
push
add
push
pop
aad
mov
or
not
push
xor
xchg
out
or
or
mov
pop
and
mov
out
add
pop
inc
ror
aaa
sbb
movs
fisub
je
sub
push
jge
xchg
inc
test
iret
nop
adc
and
cmovp
test
add
jge
dec
test
(bad)
aam
sbb
jge
push
cmps
shl
int3
pusha
in
and
jge
imul
mov
xchg
push
js
clc
fadd
or
lock
clc
movs
cli
inc
xchg
fimul
add
clc
scas
mov
sub
inc
sub
adc
and
cmp
add
dec
clc
cld
push
pop
test
cmp
bound
pusha
clc
or
loopne
and
in
dec
and
sub
ficomp
sub
jo
popa
inc
outs
sbb
xchg
pop
out
and
mov
imul
jb
fisubr
pop
or
js
test
jne
xchg
mov
dec
push
add
dec
or
jp
push
fsubr
pop
mov
sub
mov
cli
jmp
jl
xor
pop
sar
xor
sti
adc
sub
cdq
mov
loopne
enter
add
das
int
push
in
lds
loop
mov
pop
arpl
ins
(bad)
mov
add
outs
push
or
mov
add
mov
gs
outs
or
inc
pusha
cmps
push
sbb
xchg
(bad)
sqrtps
and
sub
adc
rcr
push
or
dec
lfs
mov
sub
dec
and
dec
push
xor
jb
outs
test
std
adc
jne
push
mov
jg
xchg
pop
sbb
lea
dec
mov
retf
mov
inc
mov
js
dec
jnp
and
fldcw
xor
outs
fist
dec
push
test
pop
fst
xor
inc
imul
js
add
jl
mov
adc
jne
dec
inc
lea
lea
mov
or
cmp
lock
pop
jge
mov
pop
and
sbb
adc
push
das
jge
and
mov
loope
xor
push
test
mov
or
dec
pushf
push
(bad)
mov
mov
jmp
sub
fcom
and
(bad)
pop
inc
or
sbb
es
shl
add
js
popa
dec
(bad)
push
mov
xor
inc
jp
inc
popa
stos
cmc
iret
adc
push
add
dec
pop
sub
jb
jno
mov
pop
iret
adc
xchg
dec
mov
or
sub
add
sbb
call
sbb
cmp
test
add
or
ss
cmp
ret
push
or
add
loop
shl
and
data16
test
sahf
and
or
shl
xchg
cmp
shl
out
cmp
movs
and
and
das
lea
xchg
jbe
mov
add
cmp
mov
pop
sahf
ror
mov
jge
(bad)
cld
lock
sub
dec
enter
call
jle
pop
sub
rol
jb
arpl
shr
test
(bad)
inc
jle
ret
cmps
(bad)
add
retf
jl
push
mov
xor
mov
inc
js
les
ret
add
jo
or
xchg
(bad)
or
or
add
test
pushf
mov
push
or
add
and
fmul
xchg
xchg
xchg
out
add
adc
sbb
pusha
or
call
jmp
test
cmp
into
cmps
adc
or
and
jb
enter
push
xor
add
mov
loopne
mov
mov
loop
test
pop
mov
xchg
(bad)
dec
pop
imul
mov
or
mov
jge
(bad)
and
jle
jne
aas
aaa
adc
into
push
or
ror
pop
adc
dec
mov
sbb
dec
adc
jge
pop
lock
mov
sbb
mov
shl
add
xor
push
inc
test
or
sbb
add
inc
adc
add
adc
rcl
add
mov
or
(bad)
pop
jge
clc
xor
lea
rol
loope
cmp
pop
cmp
outs
cli
retf
cmp
cmp
mov
lods
cmp
outs
or
cs
mov
mov
push
in
jmp
mov
js
xchg
inc
cmp
loopne
mov
xor
dec
pop
mov
mov
pop
add
inc
jecxz
lods
xchg
test
adc
jmp
cmp
jp
xchg
(bad)
out
stos
push
push
add
sub
or
sbb
mov
aaa
xchg
mov
dec
pusha
mov
mov
dec
push
dec
movs
pop
ins
rcl
int3
and
fisubr
movs
sbb
xor
push
xchg
es
adc
mov
mov
or
push
push
dec
loopne
test
jne
sub
and
jmp
stos
in
adc
add
bound
xor
inc
cmp
xlat
adc
cdq
test
inc
mov
sub
mov
inc
push
lock
and
call
lock
imul
daa
jp
das
sub
das
or
or
mov
sbb
push
or
xor
fcmovnb
cdq
sub
cwde
fstp
or
pop
fwait
or
add
les
inc
shr
sub
fwait
push
fld
test
mov
popf
mov
add
and
cwde
adc
add
and
mov
xor
mov
mov
dec
push
nop
add
dec
pop
rcl
dec
cmp
cwde
les
int
or
or
sub
pop
scas
push
retf
or
xor
and
jle
push
rcr
and
arpl
and
and
xor
push
test
xor
scas
jne
push
xchg
nop
push
mov
adc
mov
mov
ret
xchg
dec
fsubr
(bad)
popf
adc
mov
mov
adc
rcl
xchg
movs
mov
jle
das
imul
sub
adc
adc
push
sbb
mov
cld
mov
add
add
xchg
pop
sub
repnz
stc
adc
daa
sbb
(bad)
adc
call
adc
xchg
cmp
inc
mov
dec
inc
das
sub
adc
(bad)
rol
inc
call
(bad)
imul
mov
xor
add
dec
mov
add
mov
xor
fidiv
sub
sbb
shl
rcl
push
push
adc
inc
cmp
inc
inc
jae
jb
mov
lods
(bad)
xor
adc
nop
cmp
or
cdq
daa
inc
mov
loope
add
jecxz
sbb
je
xchg
imul
xchg
bound
inc
gs
out
clc
clc
sub
add
sub
push
push
data16
daa
and
xor
push
ins
mov
sar
jge
push
into
and
or
hlt
add
hlt
jns
push
cmp
(bad)
aam
rol
sbb
jno
js
pop
or
or
or
or
xor
push
iret
dec
push
cmp
shr
cli
test
jmp
outs
fist
(bad)
pop
push
inc
add
add
cmp
in
(bad)
and
push
gs
loop
shr
and
mov
cld
and
or
and
or
jle
rcl
in
jp
dec
jmp
mov
or
outs
iret
pushf
push
and
ins
and
pop
or
jl
dec
and
cs
or
gs
std
lea
cmp
mov
or
pop
or
add
inc
and
lock
xchg
xor
jmp
in
sbb
add
push
inc
clc
and
sub
xchg
aam
fsub
mov
ja
adc
or
push
add
ins
mov
jne
push
adc
cmps
jmp
sbb
xchg
rol
imul
rol
addr16
mov
mov
or
shl
adc
cdq
add
das
or
xor
scas
push
(bad)
hlt
add
es
mov
add
lods
int3
pop
and
int3
mov
aaa
or
mov
call
add
cmps
ror
add
jecxz
add
pop
icebp
scas
(bad)
leave
bound
push
les
call
mov
cmp
mov
add
sbb
sar
addr16
es
mov
call
das
jmp
mov
ja
dec
ret
icebp
fidiv
hlt
call
sbb
cmp
or
jne
nop
inc
mov
cmp
jecxz
xor
xor
or
mov
jmp
inc
add
mov
popf
fsubp
add
pop
push
dec
inc
add
or
push
sbb
mov
ja
sub
repnz
mov
(bad)
push
xor
xchg
and
xor
fiadd
cmp
xchg
sbb
rcr
push
loopne
sti
pop
gs
dec
adc
iret
sbb
inc
push
out
pop
retf
iret
push
movs
call
rcl
mov
push
mov
sub
enter
cmp
mov
or
pop
pop
leave
fldenv
mov
sbb
lock
pusha
mov
and
fdiv
in
sti
xchg
(bad)
fld
clc
dec
push
pop
sbb
inc
or
jno
inc
outs
inc
pop
pop
add
or
into
popf
jae
inc
pop
and
retf
sbb
test
movs
nop
adc
dec
loopne
or
jne
or
test
mov
test
out
lods
enter
icebp
mov
int3
push
and
test
stos
inc
aam
dec
adc
add
(bad)
dec
cdq
scas
push
and
dec
mov
mov
add
mov
mov
loope
or
adc
jb
fisttp
ins
add
test
push
(bad)
cmp
test
test
jbe
ss
sbb
push
psubusw
shl
ds
and
push
xchg
pop
push
mov
mov
sbb
pop
dec
adc
rol
xor
push
out
ret
pushf
mov
ins
sbb
mov
push
nop
add
and
and
out
pop
inc
dec
jge
outs
jmp
sbb
adc
inc
pusha
fmul
inc
enter
call
ins
cmp
fcom
sbb
ja
mov
adc
inc
and
dec
pop
mov
or
mov
fs
cdq
dec
in
cli
cwde
jge
sbb
add
test
imul
push
add
mov
and
ror
mov
bound
sbb
fs
ret
add
cmp
cmp
loope
adc
push
xor
adc
and
xchg
aam
test
sbb
jl
cdq
test
gs
add
add
dec
test
mov
test
mov
pushf
or
mov
sbb
jge
sar
sub
fmul
ja
inc
or
jae
sti
and
xchg
sti
inc
xchg
xlat
push
arpl
call
sub
ins
mov
sub
xor
jne
or
call
push
mov
and
mov
pop
jg
call
sub
mov
push
ror
jle
xchg
push
cmp
pop
mov
aam
adc
loope
fsub
std
xor
inc
mov
sub
add
mov
mov
icebp
inc
cmp
adc
cmps
rcr
mov
ins
and
sub
dec
sbb
xlat
and
push
inc
pop
and
dec
clc
pop
je
mov
add
mov
or
mov
xor
pop
pop
stos
nop
not
mov
popa
lods
xchg
jae
hlt
(bad)
iret
push
xchg
xor
lea
xchg
(bad)
ret
addr16
adc
xor
sbb
mov
inc
add
or
mov
lahf
(bad)
sbb
mov
in
adc
test
test
(bad)
repnz
lods
imul
xchg
test
cli
xor
cmp
or
mov
xchg
sub
xor
add
adc
mov
(bad)
mov
inc
push
adc
loop
call
cmp
mov
push
(bad)
adc
in
or
xor
das
sbb
les
adc
add
lea
ret
inc
sub
mov
dec
dec
jg
xchg
ror
imul
in
mov
sbb
movs
dec
test
or
ins
mov
push
and
fs
xor
sbb
adc
in
add
push
sar
gs
cmp
stc
xchg
sub
arpl
push
sahf
xor
cmc
sub
dec
fs
rcl
add
fist
mov
call
sbb
sbb
stc
and
fstp
xchg
sti
call
fmul
clc
xor
arpl
or
icebp
xor
inc
cmp
xchg
cmp
scas
fld
cwde
adc
pop
pop
ror
sbb
xor
sbb
int
push
xchg
inc
loop
mov
dec
mov
cwde
les
loopne
pusha
or
push
push
scas
test
sar
pminub
jne
mov
sbb
pop
es
and
push
pop
jmp
or
xor
cmp
add
mov
in
inc
je
aas
ds
sub
add
fwait
xor
outs
adc
mov
mov
jl
add
dec
cmps
push
cmp
mov
lea
inc
push
sbb
pushf
xor
mov
push
and
cdq
inc
sub
fimul
fwait
adc
add
add
outs
sub
popa
arpl
sub
addr16
cwde
mov
in
xor
mov
dec
cmp
fadd
cmp
pop
xor
cmp
pop
xchg
add
push
and
jmp
and
cmp
inc
pusha
div
fs
pop
cdq
out
adc
sbb
jo
or
les
jl
movs
or
cmp
xchg
jbe
xor
rcr
cmp
je
add
std
jp
dec
pusha
retf
push
(bad)
mov
outs
mov
lock
dec
rol
push
push
int
jp
scas
xchg
lods
cmps
inc
sub
pusha
mov
sub
jno
sbb
aaa
mov
popf
dec
xchg
fldcw
sub
add
ret
adc
in
ja
ins
xor
scas
add
popa
or
add
je
sbb
add
mov
outs
and
test
in
and
jne
inc
add
and
xchg
mov
jae
popf
xchg
fmulp
inc
sub
xchg
cmps
cmp
xchg
add
rcl
dec
push
into
retf
ret
mov
outs
inc
pushf
and
retf
push
sbb
cdq
adc
js
mov
pop
shr
and
lock
adc
adc
jns
mov
nop
xor
pusha
imul
bound
or
dec
or
cmp
or
cmp
and
mov
leave
cmp
push
inc
adc
and
jne
push
ins
inc
pusha
xor
or
mov
push
data16
jne
scas
sbb
pop
push
push
cmp
push
popa
inc
mov
jecxz
and
or
iret
(bad)
cwde
jb
movs
mov
sub
dec
retf
xor
mov
fs
adc
jp
jmp
dec
pop
xchg
es
xchg
mul
add
dec
inc
push
imul
pop
fist
sub
shl
adc
in
loopne
add
mov
les
adc
rol
in
add
jmp
pop
rol
mov
push
xor
lods
jmp
dec
in
ds
mov
fcmovbe
dec
adc
cdq
rcl
sbb
jp
adc
repnz
or
push
jmp
movs
aaa
sbb
add
aam
adc
cld
push
cmp
mov
mov
adc
or
add
inc
aas
inc
in
dec
add
mov
loop
test
xchg
jp
cld
(bad)
popf
cwde
dec
add
xor
rol
mov
cdq
(bad)
xchg
add
aad
add
cmp
and
dec
rol
int3
test
xchg
inc
adc
fild
fldcw
cmp
jne
mov
nop
or
data16
inc
xor
icebp
fsubr
mov
rol
dec
rcl
mov
enter
popa
and
mov
call
cld
iret
je
pop
addr16
nop
or
push
in
clc
cmp
sub
mov
cli
or
repnz
jb
jecxz
push
mov
add
inc
add
mov
stc
popa
inc
and
jmp
enter
repnz
and
push
xor
add
inc
push
outs
les
lock
push
gs
adc
jmp
ret
ds
call
test
je
cmp
hlt
inc
push
mov
mov
push
push
lods
cmp
xchg
cmps
les
repnz
sbb
clc
cmp
pusha
iret
push
js
sub
aas
sub
scas
aam
mov
in
and
arpl
push
gs
adc
adc
sub
or
stc
cmp
je
pushf
pop
add
shr
and
fcom
mov
in
dec
xchg
push
dec
mov
inc
cmps
lods
add
lock
jge
cmp
xchg
es
cwde
push
mov
jne
sbb
hlt
cmp
jp
push
inc
push
mov
add
xchg
out
or
mov
ins
adc
pop
mov
pop
aaa
and
sbb
cmps
or
mov
cmp
les
mov
xchg
or
frstor
in
repz
cmps
dec
leave
mov
shl
movzx
test
nop
movs
rcl
add
mov
fdivr
jmp
cmp
rol
cdq
pop
adc
mov
xchg
jbe
out
cwde
gs
jp
rcl
add
test
js
pop
je
add
ret
fwait
inc
sar
adc
dec
push
or
push
(bad)
into
cs
pusha
popf
add
xchg
mov
push
adc
shr
lea
test
add
fist
popa
shl
je
ds
jecxz
jmp
test
pusha
in
xchg
jno
in
rol
pop
ret
jmp
jp
pop
inc
les
push
or
cmp
push
or
mov
cmps
dec
add
out
push
movs
push
add
mov
push
xchg
xchg
dec
jbe
into
cmp
dec
dec
fmul
pop
push
loopne
jb
fcom
inc
or
in
pop
shr
call
jo
les
adc
jmp
not
sbb
mov
add
test
mov
jmp
cwde
sbb
cmp
fnsave
jae
imul
mov
mov
mov
stos
pop
and
cmp
adc
aam
cmp
add
or
enter
adc
xchg
and
jle
js
and
lods
ror
add
adc
rcl
es
add
cli
cmp
or
adc
or
inc
inc
mov
in
push
jnp
sub
and
ret
mov
sub
or
lods
das
cmp
std
add
(bad)
loope
add
adc
jge
fdiv
push
lods
pop
lods
xchg
ins
xchg
jo
je
test
ret
je
xchg
mov
iret
jne
inc
iret
sub
lock
push
inc
(bad)
mov
adc
sbb
lods
xlat
movs
les
shl
add
ficomp
xor
ins
mov
dec
popf
jmp
mov
iret
xor
mov
mov
push
push
sbb
in
sub
mov
aad
push
mov
cmp
mov
hlt
out
in
das
sbb
mov
pushf
push
dec
cmps
cmp
adc
dec
adc
inc
or
test
or
mov
(bad)
cdq
or
(bad)
xor
jnp
and
xchg
jecxz
pusha
sub
jmp
loopne
jge
lahf
push
dec
xchg
sbb
adc
dec
dec
js
add
sbb
rcl
clc
jne
pop
adc
int
cmp
pusha
pop
adc
loop
push
pop
ret
cs
pop
and
pop
jo
dec
add
ins
sub
xor
mov
cmp
sbb
ret
adc
pop
fldenv
xchg
inc
adc
jmp
mov
rcl
test
movs
jp
loope
test
add
movs
call
idiv
mov
pop
xor
and
add
or
mov
cmp
dec
xchg
inc
sbb
ja
sar
add
sbb
adc
iret
ret
jl
cmp
or
add
mov
outs
cmps
sbb
inc
sbb
and
data16
je
gs
jmp
aaa
or
mov
add
dec
test
aaa
sub
stos
cmp
push
ins
mov
mov
pop
inc
dec
mov
popf
xor
in
adc
dec
sub
inc
stos
div
pop
pop
xchg
cs
dec
xchg
jbe
stos
inc
mov
scas
add
ds
xor
sbb
adc
js
retf
xor
sub
jmp
ror
loope
push
adc
les
(bad)
movs
mov
mov
lods
sti
or
movs
xor
jne
cdq
cs
xor
mov
mov
adc
or
jno
jmp
add
and
ins
xchg
neg
jl
js
(bad)
jl
outs
sbb
jne
in
cmp
add
or
and
and
lods
loop
rcr
push
out
pusha
mov
test
jge
and
rol
xchg
push
pop
iret
add
je
push
lock
push
mov
dec
in
gs
xchg
mov
stc
scas
retf
jo
js
call
mov
mov
xchg
rol
push
cwde
dec
add
fs
adc
aas
push
mov
push
lods
sbb
movs
jne
add
lahf
add
xor
test
add
jmp
mov
enter
sti
and
fadd
mov
in
lods
and
xchg
xchg
fdiv
imul
fist
pop
jo
fmul
dec
dec
test
sbb
pop
ret
popa
test
adc
mov
out
mov
lods
jo
sbb
dec
movs
ins
sbb
inc
inc
fild
xor
mov
xor
retf
push
pusha
jne
retf
mov
mov
add
dec
sub
lea
inc
in
cwde
xor
ror
das
xor
xor
out
adc
and
pop
mov
test
fidiv
pushf
sub
jl
add
stos
dec
xchg
or
and
sahf
fcom
rol
dec
xchg
pop
pop
push
adc
(bad)
out
rcl
pusha
cwde
add
add
and
pop
ss
pop
sbb
ret
sub
and
jmp
add
lock
or
sbb
enter
sub
adc
idiv
cdq
and
add
push
sbb
loopne
xchg
js
and
add
and
mov
xor
mov
rcr
xor
daa
clc
jno
loop
add
imul
imul
jge
cmp
(bad)
stc
jg
lock
dec
test
push
jnp
add
jae
xchg
xchg
sbb
in
or
mov
add
test
dec
outs
xor
or
mov
dec
addr16
mov
pop
mov
xor
sahf
and
jo
out
add
mov
js
loopne
stc
mov
and
daa
pop
call
xchg
push
(bad)
repz
in
and
lea
sbb
int
inc
mov
shl
ins
cmp
dec
fwait
aam
jne
push
sti
and
adc
xor
mov
cmp
inc
test
popa
xor
mov
movs
cmp
and
add
push
mov
mov
fs
pop
js
daa
fisub
add
shl
xchg
adc
test
mov
stos
push
push
daa
cmc
add
mov
add
add
inc
imul
and
fucomp
sbb
inc
sub
cmp
(bad)
sbb
test
adc
push
js
pop
adc
inc
iret
dec
jmp
call
push
add
mov
jne
jne
xchg
and
mov
adc
sbb
push
xor
js
enter
pop
fcmovbe
outs
xchg
ja
jb
loope
inc
gs
movs
das
sbb
push
imul
sub
push
inc
aas
in
or
inc
sub
nop
xchg
mov
pop
add
adc
and
sub
retf
sbb
ret
xor
adc
push
je
push
cs
pop
lods
jbe
or
sbb
sub
cld
xlat
pushf
and
cwde
jle
pop
out
sub
and
add
and
add
sub
push
in
adc
xchg
sbb
add
and
push
xchg
mov
adc
pusha
inc
inc
pop
lods
pop
popa
lea
inc
cmp
push
ja
inc
(bad)
sbb
call
or
pushf
sahf
add
sub
mov
adc
add
or
sub
add
cmp
aad
sub
xor
fwait
mov
adc
sub
xor
sbb
call
out
jo
out
fldenv
pop
adc
xchg
push
dec
adc
adc
xchg
or
lock
dec
jnp
jmp
sub
mov
nop
jae
jno
or
dec
fisub
push
sub
and
push
add
push
cmp
jl
popa
jns
iret
adc
ret
push
mov
rcl
jge
mov
aad
push
mov
xor
daa
xchg
data16
je
inc
(bad)
jno
ins
mov
(bad)
enter
aad
sub
adc
sub
cmovbe
xor
cmp
les
ds
sub
mov
sbb
shl
dec
inc
mov
sbb
sbb
adc
pop
inc
popa
or
aas
pop
pushf
jp
leave
les
mov
inc
loop
(bad)
inc
cwde
inc
ret
cmp
xchg
addps
fsub
push
jmp
js
dec
mov
add
jl
pop
push
adc
adc
inc
dec
add
inc
clc
cdq
shl
dec
sbb
dec
mov
or
or
test
aam
fwait
mov
adc
sbb
test
jno
xchg
mov
or
and
add
cli
jno
push
inc
sbb
or
and
inc
rcl
jb
add
push
sub
or
and
add
jmp
adc
rol
data16
dec
pop
push
or
or
test
mov
(bad)
xchg
add
addr16
inc
push
sbb
pop
or
cmp
and
jo
adc
lock
test
and
div
sbb
cld
jmp
push
call
xchg
or
or
fild
mov
jge
sbb
add
add
or
mov
mov
jmp
adc
cmp
out
out
jmp
in
pop
mov
add
mov
les
test
cld
cdq
fwait
xchg
push
add
sahf
sub
sahf
xor
cmp
xor
sahf
lea
push
push
push
stos
lods
pop
cs
pop
mov
fcmovu
cmp
pusha
sub
daa
push
push
xor
mov
xor
mov
xchg
add
in
dec
and
or
fisub
call
pop
push
sbb
test
neg
or
mov
push
mov
daa
inc
sub
fsub
pop
sar
inc
inc
push
and
cmp
dec
neg
jne
or
push
in
scas
xchg
and
or
fild
push
shl
les
add
xchg
test
dec
lods
bound
and
or
(bad)
xchg
mov
cmp
inc
movs
loope
sub
or
push
add
mov
jo
xchg
out
and
mov
jmp
jae
adc
pop
inc
or
(bad)
call
movs
or
stc
push
enter
adc
push
pop
xchg
jo
cld
push
mov
aaa
mov
das
mov
dec
dec
ins
mov
sub
xchg
mov
push
add
inc
cmps
jo
jecxz
push
lods
or
aad
add
xor
mov
test
loopne
add
ret
cmp
inc
or
jg
add
xchg
fcomp
nop
sub
retf
movs
sahf
pop
and
mov
ins
in
pusha
nop
mov
dec
sub
adc
outs
mov
sbb
and
clc
sub
mov
mov
lock
xchg
ret
fimul
mov
adc
pop
adc
add
pop
jmp
fisttp
enter
enter
fsubr
cmp
mov
jg
and
jl
pushf
rcl
pop
xlat
(bad)
mov
sbb
push
enter
add
and
addr16
cmp
push
repz
dec
adc
mov
jne
add
or
push
xchg
rcl
fld
cli
xchg
xchg
dec
imul
sub
adc
ins
dec
and
sti
add
mov
test
dec
cmp
jmp
add
enter
das
jno
sbb
fiadd
add
pop
lds
in
push
mov
adc
lods
cdq
sub
mov
inc
sub
cdq
es
mov
push
inc
mov
sub
pop
aad
(bad)
mov
pop
push
popf
inc
and
mov
push
mov
popa
inc
test
cmp
xchg
out
push
push
jne
cmp
pusha
jmp
mov
inc
mov
ret
and
outs
sar
add
mov
add
sub
xchg
mov
mov
in
in
adc
mov
xor
jns
cmc
sub
xchg
test
or
lds
mov
jecxz
retf
ja
pop
dec
add
or
adc
push
mov
inc
sub
cdq
or
outs
jp
mov
or
jnp
pusha
add
ror
test
mov
repnz
jle
loope
or
push
lds
pop
popa
add
mov
cmp
xchg
nop
mov
or
dec
jae
iret
or
or
or
pop
pop
jle
lea
push
je
dec
ins
lea
sub
jge
cmp
xor
sbb
and
pop
add
mov
loop
jne
inc
inc
jge
das
loopne
mov
aaa
sub
mov
dec
dec
or
pop
bound
sub
dec
lods
sbb
adc
push
jne
inc
enter
gs
add
inc
sub
ret
jne
movs
sbb
out
sbb
push
stos
adc
das
xor
leave
dec
cmp
push
repz
mov
pushf
sar
mov
test
mov
iret
movs
pcmpeqw
and
test
and
loope
push
mov
retf
xchg
and
cmp
call
sub
jo
mov
adc
add
push
sbb
and
jmp
mov
dec
fwait
das
sar
sub
and
out
out
xor
mov
test
jle
jno
or
adc
jl
pop
xor
rcr
mov
adc
pop
cmp
stos
test
cwde
test
pop
cdq
repz
and
add
xor
jmp
xchg
ror
jp
jne
je
rcl
add
jae
and
sbb
test
shl
inc
pusha
inc
gs
xchg
adc
in
adc
pop
es
hlt
add
mov
jne
push
js
test
push
add
pop
sub
xor
call
iret
fidiv
push
outs
and
push
jg
loope
cmp
mov
cld
dec
je
(bad)
pop
outs
cdq
sbb
xor
adc
inc
push
aas
pop
mov
les
jnp
add
add
sub
jo
mov
xlat
lock
sbb
ret
add
in
adc
xchg
enter
(bad)
int
cmovs
leave
shr
inc
or
or
pop
xor
push
je
test
and
out
stc
sbb
or
lock
out
mov
mov
cmp
iret
and
inc
pushf
mov
and
jne
and
cmp
jmp
add
adc
jo
not
loop
add
adc
xchg
push
xor
dec
out
xchg
or
clc
mov
cmp
movs
ja
inc
enter
pushf
mov
inc
popa
mov
movs
iret
jns
xor
cmp
add
sub
loop
inc
and
xor
sbb
push
pop
mov
xor
mov
sbb
outs
mov
dec
test
pop
je
xor
xlat
adc
sbb
rol
dec
lods
inc
push
xchg
dec
ret
jmp
dec
retf
adc
pop
lds
popa
mov
add
mov
jae
push
sbb
(bad)
int3
neg
jns
fdivr
mov
add
or
mov
lods
jne
sbb
cmp
sbb
push
or
jae
je
dec
nop
mov
int3
outs
call
push
push
jae
xor
cwde
out
and
enter
or
xchg
xchg
mov
inc
mov
rcl
and
push
int3
jne
xchg
test
dec
loopne
mov
pop
sbb
pushf
loopne
fwait
stos
sbb
sbb
mov
data16
or
inc
mov
(bad)
int
cmp
sbb
push
sbb
adc
fist
loop
adc
int3
add
push
jo
test
and
jbe
fadd
add
cmp
add
mov
sar
add
imul
inc
jne
enter
lock
aaa
outs
or
inc
jo
and
and
add
(bad)
retf
and
push
adc
add
cmp
mov
adc
ins
sbb
jle
push
or
pusha
pushf
add
in
nop
pop
daa
das
call
in
sub
inc
add
and
xchg
mov
dec
cmp
mov
outs
add
rcr
adc
sub
outs
loop
xchg
lods
cli
push
adc
dec
lock
cmps
xor
xchg
(bad)
lds
push
hlt
xor
push
mov
sub
xor
ret
daa
test
into
pop
(bad)
lods
add
daa
jne
push
xchg
lea
dec
in
pop
mov
pop
push
mov
shl
or
xor
and
xor
out
in
add
jno
xor
xor
sub
adc
sbb
ror
and
ror
fwait
sbb
xor
add
aas
sub
mov
inc
or
pushf
data16
loopne
add
sbb
push
adc
gs
sahf
test
bound
cmp
add
test
and
and
call
int3
inc
hlt
dec
xchg
call
pop
(bad)
mov
mov
fucomip
and
jnp
lds
rcl
fstp
sub
ins
imul
jge
inc
jne
sti
sub
fcmovbe
push
xchg
movs
rol
or
xor
adc
dec
stos
pop
mov
xchg
hlt
add
inc
arpl
sub
or
add
rep
in
jmp
or
mov
in
retf
add
inc
fcom
dec
or
test
(bad)
fsubr
or
xor
adc
push
aad
pop
dec
jb
addr16
jns
mov
add
mov
call
xchg
dec
mov
sahf
push
push
dec
push
in
pop
loopne
inc
mov
xchg
mov
mov
out
mov
adc
or
mov
test
mov
jne
in
js
mov
or
sub
movs
adc
setl
lahf
xor
add
pop
push
xchg
repnz
test
add
rcr
add
cmp
outs
or
clc
pop
inc
daa
adc
mov
loope
ret
push
rcr
sbb
cmp
add
rol
dec
movs
enter
adc
shl
mov
or
or
or
dec
gs
shl
dec
adc
retf
stos
stos
xor
cmp
test
pop
test
mov
fdiv
cwde
adc
sbb
cmp
ret
or
xchg
dec
mov
sub
adc
ins
xor
les
lods
dec
sbb
mov
adc
mov
sar
jmp
add
not
cmp
icebp
adc
jno
pop
lds
xchg
test
ja
call
sbb
iret
jo
add
je
jne
mov
ss
cwde
aas
adc
mov
add
or
mov
add
cmps
jmp
push
jno
inc
mov
inc
icebp
sbb
mov
imul
test
pop
jmp
inc
inc
add
fnsave
push
push
cmp
cmp
outs
cmp
push
mov
push
dec
and
push
push
push
adc
repz
cdq
push
adc
mov
or
in
jne
dec
mov
dec
loop
clc
sti
icebp
pop
inc
add
rcl
jp
ja
adc
dec
rcl
mov
inc
aam
sahf
sbb
popa
movs
xchg
movs
mov
or
and
rcr
inc
mov
ja
cmp
icebp
mov
xchg
and
mov
fs
cmp
dec
mov
cld
test
stc
cmp
add
ins
sub
movs
les
pusha
movs
rcr
sbb
clc
mov
or
sub
lock
pop
shl
pop
push
pusha
pusha
add
sub
jle
sbb
mov
dec
sub
sar
rol
pop
rcr
xor
sub
pop
sbb
adc
xor
ja
sub
les
call
repz
std
nop
lahf
sahf
cmc
pop
jmp
pop
adc
add
pop
jmp
call
je
lds
mov
jl
test
js
call
mov
pop
jmp
xor
inc
sti
loopne
loope
outs
and
or
add
(bad)
push
mov
and
(bad)
pop
(bad)
daa
or
push
inc
and
nop
sub
dec
dec
add
xor
imul
ror
push
rol
add
psubusw
daa
int3
hlt
iret
mov
xchg
sbb
mov
ror
shl
adc
sub
gs
popa
and
pop
and
test
ja
ror
int3
test
mov
std
jmp
adc
sub
loope
pop
mov
xor
cmc
jbe
movs
mov
mov
inc
mov
cmp
and
jno
sbb
cmp
adc
sub
add
dec
adc
sbb
cmp
and
cs
dec
lock
sbb
jae
mov
das
push
xor
or
cmp
jbe
and
cmps
mov
push
and
push
stos
xchg
rol
inc
push
push
sub
test
lea
mov
cmp
and
add
mov
or
cmp
(bad)
icebp
sub
sbb
sbb
and
mov
sbb
mov
mov
inc
aaa
enter
pushw
dec
retf
sub
cli
loop
leave
jmp
jns
mov
enter
sub
sbb
push
mov
clc
jle
loopne
fisttp
xor
push
aad
jmp
fstp
fcmovnu
mov
pop
jnp
stos
add
ficomp
push
ret
add
in
sub
cmp
bound
popa
popa
pop
xchg
iret
ins
inc
es
lock
loopne
mov
or
out
retf
xor
sbb
iret
mov
xor
cmc
lock
sbb
aad
add
push
and
adc
xchg
out
mov
push
mov
push
(bad)
jle
fs
ins
nop
scas
xor
mov
inc
dec
mov
cwde
add
add
ins
xor
push
mov
push
push
leave
dec
sbb
outs
push
lds
stos
aad
icebp
das
push
and
adc
fsubr
cmp
imul
inc
adc
gs
into
mov
and
call
out
jmp
mov
jne
ins
or
dec
pop
add
cli
sub
es
call
mov
ret
(bad)
cmp
mov
xchg
xchg
xchg
fwait
and
or
mov
outs
call
repnz
mov
pop
and
inc
and
or
xor
jne
bound
mov
inc
lods
cmp
add
add
(bad)
push
inc
aad
sub
hlt
xchg
ror
pop
and
or
jge
adc
repnz
adc
xor
inc
adc
fistp
sub
lods
cwde
fwait
test
retf
loopne
call
(bad)
mov
mov
je
ins
push
jp
retf
arpl
xchg
xchg
inc
inc
test
dec
mul
and
xchg
xchg
dec
and
inc
sbb
inc
mov
call
rcl
xchg
rcl
cwde
sbb
jge
adc
sbb
xchg
cdq
or
outs
or
enter
jb
mov
cdq
inc
xchg
cmp
add
jae
repnz
xchg
xor
stc
push
push
xlat
ins
push
sub
push
push
lock
push
mov
sbb
sub
cs
cmps
dec
xchg
iret
push
inc
xor
add
mov
inc
adc
jmp
(bad)
or
dec
pop
jb
call
lea
test
mov
push
xchg
sti
sahf
fisub
fs
call
xchg
jbe
aaa
cwde
and
cdq
in
rol
xchg
jne
push
ror
jle
cli
scas
mov
push
inc
cmp
and
mov
and
adc
loope
xor
inc
sbb
add
sub
hlt
mov
mov
ret
iret
add
mov
jle
repz
adc
inc
test
mov
and
test
add
add
movs
out
mov
push
ins
inc
mov
mov
les
sub
xchg
imul
pop
js
fsubr
push
xchg
jo
pop
stos
inc
loopne
sbb
and
and
and
popf
or
jae
and
loopne
inc
or
lods
popf
ret
sbb
add
ret
sub
push
lahf
and
and
and
sbb
sbb
rol
mov
xchg
das
(bad)
loopne
lea
inc
rcr
mov
scas
aam
xchg
adc
shr
mov
push
and
sbb
ret
adc
ins
loopne
fimul
ret
dec
inc
sub
pushf
jle
push
not
sbb
lea
fmul
retf
pop
xlat
movs
jbe
add
or
or
mov
cmc
push
push
cmp
xchg
int3
push
jecxz
adc
xchg
jns
push
or
jmp
lock
jmp
sub
sub
sub
pop
mov
or
or
mov
imul
je
sbb
or
mov
adc
push
test
ret
adc
sbb
mov
daa
nop
ret
inc
loop
push
push
push
cs
gs
arpl
pop
bound
mov
iret
pusha
hlt
xor
inc
xchg
mov
mov
(bad)
sar
inc
(bad)
and
mov
mov
in
ds
call
push
and
movs
push
xor
(bad)
pop
ret
pop
sub
nop
jne
and
lods
add
sti
or
add
shr
cmp
sbb
stos
mov
pop
cld
lods
xchg
sti
and
dec
or
jmp
sub
mov
fwait
or
dec
jp
xor
retf
es
jo
or
cs
js
inc
(bad)
jnp
sub
rcr
xchg
loopne
sbb
shr
dec
lock
inc
jne
add
test
jbe
sbb
adc
(bad)
ret
inc
xor
in
or
jo
cmp
inc
xor
out
mov
jecxz
mov
xchg
ret
mov
adc
rcl
and
xchg
icebp
imul
cmp
popa
add
ror
sub
mov
dec
jnp
mov
fs
lock
inc
hlt
ins
push
fild
enter
and
aas
and
mov
es
push
js
mov
sbb
mov
adc
add
mov
and
inc
or
jno
xor
pop
push
sbb
mov
stos
xchg
ss
add
fisttp
add
xor
pop
adc
xchg
mov
adc
loopne
retf
stc
and
add
jl
lock
fcom
add
and
test
add
je
cld
(bad)
push
xchg
stos
add
(bad)
add
js
push
(bad)
fwait
data16
mov
data16
adc
add
mov
and
dec
dec
out
sub
push
test
ror
add
add
add
iret
mov
push
or
retf
mov
jp
pop
mov
mov
mov
or
cmps
cmc
les
xchg
call
outs
mov
add
lock
push
ins
adc
cmp
je
ret
add
fdivr
add
jecxz
shl
lock
test
push
push
cdq
dec
(bad)
sbb
push
inc
inc
lods
xor
hlt
loopne
pop
cmp
jge
das
hlt
mov
xchg
jne
ds
or
jne
retf
cmp
push
adc
aas
push
mov
dec
movs
push
sbb
adc
or
mov
cmp
and
pop
rcr
inc
mov
popa
push
cmp
jne
in
nop
or
mov
jb
cmp
pusha
repnz
push
xor
or
scas
or
mov
mov
jnp
pop
jo
test
imul
add
cmp
loope
shl
mov
sbb
pusha
dec
mov
out
inc
hlt
push
shr
push
imul
jge
popf
sub
popa
mov
push
push
fnstsw
xchg
jge
popf
pop
jmp
ins
lock
mov
or
or
cmp
jecxz
aam
dec
cmp
mov
sub
aas
repnz
adc
mov
adc
fdiv
loopne
adc
xchg
mov
mov
int
inc
les
xchg
push
test
mov
imul
or
sti
or
inc
out
or
push
mov
imul
and
xor
add
mov
jecxz
cdq
push
and
and
in
cmp
xor
mov
jno
jns
xor
retf
cmps
stos
adc
push
test
enter
pushf
sub
jmp
or
push
aaa
popa
cld
test
outs
add
je
cmp
jg
xor
adc
jae
cmc
sahf
dec
jnp
adc
adc
cdq
jmp
mov
sbb
or
jb
pop
sub
cs
xchg
mov
int
push
imul
repnz
sbb
push
pop
loope
add
sub
xor
repz
push
das
push
push
cmp
aas
xor
ficom
xchg
out
and
pusha
push
jns
sub
add
mov
clc
adc
xor
mov
(bad)
in
ss
out
aas
in
enter
add
and
ins
cmp
mov
jbe
mov
js
mov
jno
xor
sar
sbb
mov
mov
dec
push
jmp
in
or
movs
mov
cs
xchg
cmp
sub
push
paddsb
ret
std
xchg
xchg
mov
mov
pop
imul
mov
frstpm(287
mov
aam
jmp
es
inc
mov
aas
loope
cmp
lods
daa
mov
xor
stos
mov
test
stc
xor
adc
jo
inc
sub
and
sub
retf
mov
lock
loope
pusha
cmp
sub
gs
sbb
mov
enter
js
xchg
es
ror
mov
ins
add
sahf
outs
xchg
mov
repz
sub
mov
popa
mov
mov
cdq
sub
sbb
adc
shr
push
xchg
add
fnstcw
jne
xchg
pop
ret
imul
adc
(bad)
test
mov
and
add
jl
sub
aad
and
leave
mov
shl
sbb
mov
add
movs
or
push
xchg
mov
cdq
dec
repnz
lds
dec
and
fild
or
test
jmp
add
jl
mov
sbb
test
cwde
jl
cdq
add
in
iret
add
pop
push
mov
and
pop
test
arpl
cli
cmps
mov
popf
es
js
mov
rep
push
inc
iret
cmp
popa
jecxz
adc
xchg
mov
loope
or
cmp
lahf
ins
nop
dec
daa
shl
fdiv
cmp
das
push
push
cmp
or
lods
mov
outs
lock
xlat
ins
movs
ds
xor
in
rol
pushf
sub
xor
pminub
or
add
cmp
test
js
inc
loope
inc
inc
add
lods
push
in
leave
push
(bad)
cld
test
imul
call
fnstcw
xlat
adc
sbb
inc
jnp
daa
jo
(bad)
das
ret
adc
push
daa
mov
jecxz
xchg
mov
xchg
loope
pop
bound
mov
mov
add
in
loope
std
push
xor
jmp
cmp
cmps
cmp
hlt
ret
cdq
xchg
std
mov
imul
and
xlat
pusha
add
sub
sub
inc
stos
inc
mov
or
loop
mov
dec
out
pop
in
mov
pop
pop
and
pop
adc
mov
dec
dec
xor
test
mov
ss
and
retf
jl
jne
push
je
jo
cli
push
adc
clc
aad
sub
sbb
adc
aam
jge
mov
leave
push
push
not
adc
popa
hlt
pushf
dec
and
push
mov
adc
scas
je
push
div
aad
test
retf
fstp
je
ror
jmp
adc
or
pop
dec
dec
pop
fadd
pop
les
imul
xchg
sbb
or
jne
sub
lds
push
jb
mov
inc
out
adc
mov
loope
xchg
das
inc
lods
icebp
or
pushf
ror
shl
push
push
test
add
or
call
rol
cmc
and
je
lods
outs
cmp
(bad)
iret
mov
pop
adc
lock
loopne
test
enter
leave
mov
sahf
shl
mov
push
jp
(bad)
and
retf
in
ins
retf
xor
arpl
cmps
mov
inc
scas
xor
test
loop
sbb
push
push
push
lock
mov
fwait
or
lea
add
dec
movs
xchg
clc
movs
mov
push
outs
sbb
or
cwde
dec
add
jnp
test
dec
dec
add
mov
inc
jecxz
adc
rcr
pop
scas
xlat
add
dec
cmp
test
test
pop
add
mov
dec
mov
mov
pop
jl
retf
mov
inc
push
adc
pop
adc
add
stos
add
or
test
add
mov
sbb
jns
adc
ja
cwde
dec
mov
rep
(bad)
loope
jg
dec
mov
pop
cs
retf
test
lods
(bad)
(bad)
retf
in
mov
clc
sbb
xchg
mov
mov
test
hlt
add
fadd
aam
jle
dec
pop
cwde
js
je
cmp
aas
sar
ins
sbb
cmp
and
gs
cmp
push
push
mov
add
xor
cli
loopne
ficom
pop
push
add
lahf
shl
cwde
ret
lds
and
add
xchg
shl
fcomp
sti
pop
(bad)
jmp
inc
or
dec
in
jecxz
xlat
push
fistp
imul
adc
and
add
cld
push
or
jns
pop
push
stos
xchg
and
aas
ds
or
adc
push
shl
loopne
xchg
je
mov
loopne
mov
or
jecxz
in
ret
dec
imul
sbb
adc
sbb
cs
xchg
cmp
fwait
ins
cmps
fisttp
lock
xchg
sbb
cmp
add
or
pop
mov
inc
pop
enter
dec
je
push
mov
inc
not
xchg
inc
mov
icebp
pop
(bad)
mov
call
movs
push
push
adc
cmp
je
cmp
jl
fild
pop
hlt
mov
adc
and
sub
sub
adc
enter
push
adc
aaa
aad
icebp
ja
ins
pop
add
in
jmp
das
jo
xchg
and
inc
retf
mov
cmp
aam
ins
mov
and
inc
mov
mov
mov
mov
jg
fs
pop
lods
xor
inc
and
xchg
hlt
inc
mov
add
fadd
jns
jmp
cmp
mov
sbb
push
cmp
xchg
push
push
lods
xor
das
xchg
and
jbe
add
sub
lea
test
push
imul
mov
test
and
sbb
and
mov
mov
jmp
xor
js
push
xor
mov
je
jo
jmp
mov
sub
adc
ror
or
in
shl
outs
push
push
add
or
ins
je
fs
sbb
add
xor
mov
jl
dec
jns
add
imul
lods
dec
fxch
dec
adc
and
mul
dec
(bad)
cs
sub
xor
sub
push
out
jge
or
or
mov
pop
mov
add
inc
jne
mov
and
test
and
add
push
push
aam
mov
mov
aam
scas
and
jmp
int3
not
and
jne
leave
pop
mov
inc
out
sbb
push
(bad)
addr16
mov
push
xchg
and
push
cmp
cvtdq2ps
sub
mov
sbb
jae
jo
dec
lock
adc
or
push
aaa
hlt
adc
sub
ins
add
fisttp
aaa
jg
jno
add
jbe
mul
sub
push
push
loope
daa
mov
pop
cmp
sbb
sub
xor
in
and
movs
and
pop
fisttp
and
dec
xchg
test
aas
test
and
movs
movs
ss
pop
and
jmp
xchg
movs
cmp
cdq
dec
(bad)
jmp
or
or
arpl
movs
xor
add
xchg
in
popf
or
aam
inc
adc
fs
push
lods
int
adc
xor
aam
ins
not
adc
out
or
ss
je
rol
test
ror
rcr
push
dec
jae
xor
stos
aam
test
fs
add
sbb
ins
lahf
es
cmp
hlt
add
sub
ins
scas
inc
sub
out
pop
hlt
pop
repnz
cmp
cli
call
dec
cmp
or
sar
loop
inc
jecxz
mov
sar
cmp
push
pusha
push
dec
pop
cmp
ins
aaa
movs
sahf
fistp
addr16
pushf
movs
ja
mov
pop
imul
fstp
ret
xor
int
cmp
pop
pop
xchg
ret
shr
add
adc
outs
imul
stc
dec
sub
pop
and
add
mov
add
adc
xlat
add
dec
sub
mov
jo
mov
pop
sub
repnz
xor
cli
inc
pop
mov
fdiv
push
rol
xor
xlat
dec
add
and
sbb
add
mov
ret
push
or
mov
fdivr
mov
xor
cmp
or
jge
fisubr
or
add
or
add
test
push
test
sub
loop
clc
mov
pusha
mov
add
mov
adc
add
loop
cmc
mov
je
imul
push
jno
jno
(bad)
push
xor
dec
or
push
lea
sbb
daa
fcomp
xchg
or
retf
mov
push
ins
loope
not
sbb
sub
rcr
js
jne
mov
pusha
(bad)
in
xor
dec
sbb
mov
push
fs
push
adc
mov
or
je
in
call
inc
mov
xchg
les
adc
bound
xor
or
sub
out
test
adc
loope
and
inc
mov
stc
popa
daa
mov
das
cmp
pop
xchg
push
sub
inc
rcl
or
sbb
cwde
jge
push
xchg
fnstenv
(bad)
adc
xchg
imul
xchg
sti
xor
daa
not
mov
cmp
repz
xchg
inc
cmp
sbb
js
and
push
push
mov
nop
mov
aas
jb
sar
cmc
ins
add
inc
into
jb
or
loopne
ins
into
retf
adc
add
ret
add
add
call
mov
fist
jb
jno
inc
int3
pusha
adc
xchg
cs
push
inc
mov
adc
cmp
(bad)
mov
pop
int3
cs
mov
lods
push
xchg
je
adc
add
ss
movs
jmp
sbb
sub
nop
inc
dec
ins
fadd
call
dec
cmp
int3
mov
(bad)
lock
dec
mov
shl
clc
jmp
jg
xor
sub
cmp
and
adc
push
mov
test
cld
and
pushf
loopne
jae
test
call
jae
inc
and
pop
or
jmp
scas
sbb
inc
call
dec
lock
inc
(bad)
fimul
or
xor
loopne
(bad)
mov
push
iret
dec
sbb
add
mov
test
nop
inc
pusha
cmps
push
test
ror
outs
ds
gs
aam
test
or
xchg
fwait
loopne
sub
or
jo
add
mov
imul
xchg
lods
lea
xor
daa
movs
test
dec
cmp
lea
ins
out
adc
movs
gs
jmp
mov
cmp
cs
std
or
inc
mov
xor
and
and
lock
out
dec
sbb
inc
xor
push
cmc
ins
sbb
and
rol
pop
fwait
xchg
(bad)
mov
push
xor
xchg
and
add
add
das
dec
(bad)
out
dec
or
cmp
js
into
or
sbb
adc
jns
adc
test
xchg
xchg
les
imul
jno
jno
ja
push
inc
cmp
add
sub
jns
mov
sub
int3
xlat
push
ins
pop
(bad)
in
test
out
icebp
jnp
sbb
pop
cli
ret
movs
sub
(bad)
sti
retf
mov
test
mov
jmp
lock
leave
jmp
aas
add
pop
dec
adc
cs
add
into
mov
dec
cmp
and
inc
push
ja
test
cli
pop
or
daa
pop
push
xor
mov
inc
adc
push
xchg
inc
(bad)
shld
xchg
and
add
das
test
js
pop
inc
sub
or
jb
push
push
xchg
adc
shl
sub
dec
add
mov
xor
and
xor
mov
or
out
xchg
pop
shl
xor
or
xchg
push
ss
fimul
imul
fild
pop
add
sub
es
pop
inc
push
or
add
cmp
stc
and
inc
add
push
sub
outs
pop
or
jg
fdivr
push
in
scas
adc
fs
outs
inc
push
sbb
push
jp
jge
pop
push
dec
add
and
pop
cwde
dec
mov
test
(bad)
bound
push
mov
fnstsw
mov
pop
mov
jg
mov
mov
jo
and
or
inc
and
das
es
sub
jge
cmp
int3
dec
inc
pop
adc
adc
test
imul
lods
push
jl
cmps
cmp
xchg
xchg
mov
in
or
xor
push
arpl
daa
mov
aad
js
cmp
xchg
mov
push
int3
add
dec
imul
fisttp
cmp
les
test
jge
mov
jae
xor
dec
xor
sub
fstp
lods
ror
pop
aas
inc
fcomp
push
rcr
mov
cmp
cmp
pop
hlt
out
adc
dec
aam
inc
pop
sub
loope
inc
dec
inc
xchg
mov
xor
or
adc
push
pop
or
adc
test
jo
test
loopne
and
mov
dec
sub
into
test
jne
mov
pop
jae
add
mov
or
jne
(bad)
jnp
xor
push
xor
xor
or
fstp
call
push
cmp
or
sbb
in
jge
fidivr
cmp
cmps
dec
imul
ret
inc
js
or
add
ins
lock
jecxz
fsubr
jmp
pop
or
mov
xor
retf
dec
mov
inc
popa
and
adc
add
sbb
inc
pusha
xor
cmp
movups
lock
mov
nop
push
iret
add
mov
sti
pop
(bad)
sar
daa
clc
mov
xchg
aaa
pop
adc
or
mov
or
mov
push
mov
add
and
clc
mov
mov
cmp
fs
pop
iret
mov
ret
xor
fld1
add
mov
cmp
lea
push
fidivr
push
cmp
push
scas
mov
push
sbb
ds
movlps
jb
xor
add
loopne
sti
dec
adc
aaa
shl
pusha
mov
jb
cmp
sub
and
dec
dec
add
sub
xor
adc
fdivr
pusha
dec
add
and
scas
addr16
xchg
in
mov
mov
inc
jmp
adc
sar
seta
push
add
imul
test
mov
shl
pop
test
test
and
aam
or
je
sub
inc
sbb
fdiv
and
push
add
mov
daa
pop
jo
cli
int
sbb
push
xlat
push
in
xchg
idiv
xchg
adc
pop
add
fild
stc
jp
mov
jbe
add
mov
ror
mov
imul
sub
pop
shl
lods
es
ins
cmp
ja
sbb
cdq
xor
pop
daa
jns
pusha
loope
cwde
nop
mov
ret
push
dec
out
fcomp
dec
inc
pop
inc
push
cmp
push
inc
daa
or
iret
rcl
cwde
jmp
pop
pop
xor
inc
jge
pusha
fs
test
dec
add
dec
add
rcr
mov
fsubr
jne
mov
push
test
ret
pop
add
or
aad
data16
add
sub
and
add
aam
or
jp
sub
js
stc
inc
push
mov
adc
fisubr
cmp
neg
adc
in
pop
add
lock
and
mov
pop
xor
call
or
cmc
xchg
and
push
add
adc
xchg
(bad)
sub
cmp
inc
fmul
sbb
sub
or
cs
sub
sub
adc
mov
sbb
in
mov
nop
or
repz
or
mov
or
push
pop
xchg
mov
in
stos
xor
mov
or
fimul
cmp
add
in
sbb
dec
adc
xchg
cmp
push
mov
out
dec
xlat
ins
dec
pop
mov
es
sub
xor
push
pushf
aad
jle
nop
pop
xor
inc
inc
push
dec
std
inc
add
mov
add
xor
cmp
ja
cs
adc
add
adc
cmp
xchg
adc
shrd
cmp
or
jle
sbb
inc
jne
adc
sub
cli
xchg
dec
mov
sbb
inc
mov
cmp
jg
push
mov
dec
je
daa
movs
pop
dec
mov
cmp
je
(bad)
loopne
lock
inc
jno
rol
cdq
test
add
push
inc
jo
dec
add
mov
and
pop
sub
popa
mov
xchg
inc
mov
sbb
mov
dec
xlat
and
je
repnz
mov
xor
ds
or
mov
add
push
(bad)
and
hlt
mov
or
xor
inc
push
dec
outs
or
mov
in
pusha
sbb
ds
inc
pop
inc
mov
add
cdq
mov
mov
push
cdq
xchg
mov
sub
xchg
mov
loop
mov
ins
or
cli
inc
je
and
aas
xor
rcr
test
xchg
dec
mov
or
dec
push
push
push
inc
jne
loope
xchg
sbb
icebp
dec
loopne
xor
aam
dec
lea
shl
shr
jne
inc
stos
and
mov
cmps
loopne
lea
xchg
inc
add
in
call
mov
lea
cmp
(bad)
sub
sbb
test
adc
inc
sub
sub
pop
ret
push
xchg
sbb
hlt
sbb
jle
or
push
mov
in
or
and
fsub
sub
sub
xchg
aaa
push
or
jecxz
in
add
cs
movs
sub
not
dec
mov
sub
ds
pop
mov
adc
sub
fs
int
test
push
sbb
add
fnstcw
pop
inc
dec
inc
aam
ret
xchg
test
adc
mov
add
pusha
mov
xchg
fwait
pop
push
cld
ins
pushf
ret
aas
dec
inc
ins
(bad)
mov
mov
dec
or
ins
out
jb
fcomp
xor
leave
enter
cdq
loopne
sub
ror
push
int3
loope
sbb
and
inc
mov
mov
mov
call
ss
or
push
sbb
enter
mov
(bad)
fisttp
push
and
loopne
mov
or
pop
addr16
daa
pop
ins
ins
sar
pop
inc
mov
cdq
(bad)
sub
inc
lea
and
xor
or
cmp
push
xor
xor
clc
inc
inc
mov
out
and
or
or
xchg
push
push
call
int
jb
push
loopne
dec
std
invd
push
xchg
dec
mov
adc
jae
pop
in
jmp
inc
add
add
pop
sub
lock
scas
push
clc
add
mov
mov
push
jne
or
mov
mov
addr16
inc
push
es
jl
jne
clc
adc
sbb
(bad)
mov
inc
rol
dec
mov
adc
adc
mov
fbstp
or
ret
mov
adc
pop
in
or
neg
ja
and
push
or
sbb
(bad)
rol
dec
sti
mov
loope
cwde
rol
push
pop
sbb
cs
js
jmp
xchg
movs
sub
add
jne
inc
sti
mov
jmp
pop
dec
push
inc
and
cmp
inc
sub
ficom
add
mov
or
test
or
inc
lock
pop
popa
es
mov
push
in
ja
cmc
jge
dec
(bad)
pop
pop
and
or
adc
sub
popa
pop
call
sbb
adc
sbb
xor
xor
mov
jmp
(bad)
xchg
cdq
add
shl
add
cld
and
pop
ins
push
and
and
sub
sub
dec
into
in
lods
add
icebp
mov
dec
jne
or
inc
mov
adc
les
push
mov
and
inc
out
pop
push
cmc
push
nop
pop
shr
inc
adc
dec
add
cwde
add
inc
(bad)
ret
and
and
ret
xchg
sahf
test
inc
(bad)
cli
xchg
jmp
ss
sub
rcr
(bad)
cmc
push
pop
add
add
jecxz
daa
sub
sbb
adc
imul
cmp
adc
les
sub
xchg
sti
and
std
push
jnp
test
dec
or
pop
hlt
js
fwait
inc
inc
adc
and
ss
push
mov
lods
inc
or
push
stc
inc
add
das
call
add
or
ins
cmps
rcr
mov
test
lods
add
ss
mov
(bad)
repz
popf
dec
dec
lods
test
add
je
push
dec
add
sub
add
mov
fnstcw
stc
inc
or
movs
loop
ret
push
cmp
jb
sub
imul
fldenv
das
push
jp
jecxz
dec
aad
in
cmc
pushf
arpl
cdq
sub
sbb
sahf
xor
jg
inc
scas
mov
push
movs
(bad)
sub
fsubr
lods
leave
xor
repz
cmp
scas
mov
cmps
xchg
pop
cmp
lea
loopne
or
mov
dec
rol
jge
jge
les
int
push
jno
xlat
push
mov
or
push
fsub
lods
xor
call
dec
(bad)
(bad)
sahf
adc
and
or
mov
mov
outs
jno
lds
div
outs
push
mov
mul
mov
mov
retf
sbb
xchg
ja
retf
(bad)
inc
rol
jmp
jno
fisubr
xor
sub
push
add
or
pop
sub
adc
push
pop
add
mov
outs
(bad)
mov
jo
jl
pop
adc
mov
mov
mov
les
pop
lds
movs
dec
or
inc
pop
add
lea
push
or
stos
(bad)
adc
lahf
pop
xor
cmp
fidivr
jge
add
adc
xchg
outs
xchg
sbb
inc
add
adc
ja
je
pop
dec
cmp
cmc
dec
mul
cmp
movs
jge
xor
jecxz
outs
ja
inc
and
push
dec
or
or
out
adc
adc
fcom
push
rcr
retf
enter
jl
dec
jnp
jne
add
add
or
push
ja
sbb
push
into
(bad)
xchg
xchg
push
das
pop
add
adc
add
aas
and
add
inc
jbe
iret
xchg
(bad)
leave
jbe
jbe
pop
bound
xchg
sti
fisub
push
stos
aad
clc
push
jecxz
inc
pushf
scas
clc
mov
xor
jb
repnz
cmp
test
cmp
xchg
js
inc
stc
or
out
push
and
addr16
push
test
pop
aad
xchg
push
jo
jne
aas
push
test
pop
lock
daa
out
xchg
adc
movs
push
rcl
sub
cwde
or
jne
adc
adc
pop
add
and
pop
pop
mov
mov
inc
mov
xchg
jo
add
and
lea
dec
mov
inc
repz
xchg
sbb
loopne
enter
jno
push
or
sbb
ror
pusha
jmp
aas
sbb
add
lahf
loope
(bad)
lea
dec
jp
ror
mov
mov
sub
or
inc
inc
fdivr
mov
xchg
add
scas
and
pop
movs
ins
cmp
call
mov
je
pop
xchg
push
adc
adc
icebp
stos
add
lock
pop
inc
fdiv
movs
xchg
mov
and
dec
stos
adc
in
shl
test
mov
add
or
sbb
pop
leave
(bad)
imul
sub
and
mov
xchg
or
push
data16
add
jne
mov
xor
call
cwde
gs
repnz
mov
sbb
and
and
push
sbb
arpl
ror
jnp
pop
inc
js
pop
ret
push
mov
clc
inc
jno
push
inc
cs
popa
fld
adc
loope
outs
dec
pop
jg
push
rcl
test
sub
aaa
jmp
jo
pop
mov
adc
xor
(bad)
push
adc
aas
inc
jne
push
enter
loopne
(bad)
clc
jmp
ret
retf
add
or
call
and
(bad)
scas
js
add
or
adc
inc
ret
and
movs
shl
mov
add
or
adc
retf
bound
sub
bound
mov
or
cmp
ret
sub
inc
pushf
pop
dec
xchg
cmp
je
std
dec
and
dec
add
xor
fild
or
or
clc
cmps
push
adc
ret
add
sub
outs
aam
mov
das
sbb
sbb
or
mov
sub
pop
push
pop
stos
and
(bad)
fbstp
out
mov
nop
push
popa
cmps
cwde
outs
sub
ds
call
sbb
js
pop
jbe
xor
or
dec
and
into
popa
mov
fsubr
inc
dec
sub
push
es
mov
xchg
cmp
adc
stos
leave
mov
test
lods
adc
repnz
les
in
xchg
sbb
nop
loope
push
mov
mov
jmp
push
out
cdq
inc
test
sub
mov
push
or
push
push
jb
push
cmp
or
and
or
repnz
std
cs
mov
mov
dec
pop
push
sub
call
pop
add
jle
mov
dec
or
jns
inc
mov
push
addr16
aam
xchg
inc
int3
enter
stc
inc
add
fmul
push
cmp
ins
lahf
xchg
inc
push
inc
mov
inc
push
xor
sbb
inc
sbb
test
mov
add
pop
test
cmc
les
push
mov
fs
or
cmc
cdq
add
or
adc
cmps
test
test
shr
inc
and
fs
mov
mov
and
adc
mov
sbb
sub
or
push
sub
shl
call
ficomp
call
inc
nop
(bad)
lea
adc
xchg
les
and
jno
pusha
dec
(bad)
ins
inc
cmps
xor
mov
dec
iret
fsub
push
mov
out
or
cmc
add
lods
add
sub
jecxz
sbb
fidiv
push
fadd
clc
add
push
rcl
mov
inc
nop
into
add
retf
call
adc
push
std
dec
lods
ins
sbb
fmul
lods
ins
imul
and
loope
mov
pop
mov
mov
pop
or
mov
dec
inc
pop
mov
sub
xor
cli
and
fwait
lea
add
inc
or
imul
mov
push
add
mov
popw
mov
dec
popa
mov
and
and
xchg
dec
mov
and
retf
sbb
pusha
cmc
mov
fmul
ins
cdq
inc
add
dec
div
push
sbb
add
jg
imul
or
frstor
push
sbb
inc
daa
push
add
adc
or
nop
and
imul
sub
dec
mov
neg
js
test
cmp
or
xor
or
cdq
or
cmp
xchg
nop
dec
leave
push
retf
push
adc
loopne
sbb
cmp
xor
mov
test
sbb
into
js
(bad)
stos
add
add
push
cmp
add
jmp
mov
mov
inc
cmps
jo
arpl
jae
jo
sbb
clc
mov
pop
rol
add
dec
push
mov
cmp
pushf
xlat
add
idiv
mul
xor
fstp
int
pop
mov
shl
pop
push
mov
dec
cmps
xchg
retf
xor
sub
cmp
pop
test
mov
pop
xor
(bad)
mov
inc
sbb
sbb
dec
add
imul
jnp
mov
push
ficomp
scas
xor
in
out
or
enter
out
mov
lock
inc
cmp
inc
jg
retf
(bad)
pop
hlt
push
xor
or
cs
adc
enter
add
div
pusha
ins
loopne
dec
xchg
cmp
mov
inc
jl
dec
push
test
in
out
ret
sub
imul
stc
pusha
cwde
push
add
nop
and
retf
imul
or
fisubr
dec
jmp
sbb
xor
imul
adc
adc
and
lea
adc
jne
jg
cwde
bound
sub
push
or
or
neg
sbb
rcl
jnp
leave
push
or
mov
pusha
add
sbb
ror
jne
push
mov
xor
and
push
out
xchg
pusha
add
mov
or
shl
jmp
push
inc
lea
dec
push
xchg
je
aas
stos
sti
rcl
je
aas
xor
push
sub
or
enter
fwait
scas
add
add
add
lahf
in
pushf
mov
mov
mov
sbb
sbb
xchg
in
cmp
rcl
paddq
into
mov
xchg
and
add
pop
loopne
pop
xor
cmp
adc
mov
mov
add
mov
push
and
add
mov
popa
cmp
jmp
mov
mov
test
dec
dec
mov
inc
out
and
les
js
or
or
add
cmp
neg
jne
lea
sbb
add
ja
lock
in
add
or
or
dec
push
es
retf
pop
xchg
arpl
adc
sbb
jo
xor
xchg
push
jmp
xchg
and
out
dec
movs
add
jne
dec
inc
inc
push
js
or
cmps
mov
add
mov
dec
or
inc
add
mov
das
adc
and
movs
add
ins
pop
test
xchg
xor
or
adc
aad
ins
cmp
dec
and
bswap
and
ja
add
inc
fldenv
ror
repz
(bad)
pop
pusha
test
jo
add
push
inc
inc
sub
xchg
dec
mov
or
dec
sbb
and
jmp
and
mov
sub
imul
mov
xchg
(bad)
jle
inc
cmps
lea
add
or
cmp
mov
shr
rol
jno
pusha
add
mov
sub
xchg
xor
xor
sub
iret
cmp
jno
ret
xchg
dec
mov
add
cdq
or
mov
sub
add
sub
dec
cmp
popa
push
cmp
sahf
push
adc
pop
add
mov
push
xor
push
xchg
or
adc
clc
mov
jmp
xor
push
and
adc
push
retf
mov
jge
push
jno
adc
loopne
or
jmp
loop
push
js
shl
xchg
mul
jne
pop
jae
add
xor
aad
movs
imul
or
xor
fs
adc
mov
and
popa
pusha
mov
sub
jbe
loope
mov
push
xor
inc
sub
or
and
add
rol
stos
mov
xchg
ret
ret
push
and
xlat
nop
shl
bound
scas
(bad)
pop
mov
call
sbb
enter
fisttp
mov
fmul
enter
dec
les
lea
and
pop
cmp
or
push
test
xchg
in
inc
ret
xchg
add
shr
sub
rdmsr
adc
je
shl
push
(bad)
adc
jo
dec
push
hlt
mov
loopne
aam
push
push
das
xchg
jae
and
loopne
jecxz
mov
adc
xor
in
add
inc
in
sub
imul
dec
adc
pushf
cmp
mov
sub
and
lahf
dec
dec
sbb
inc
sbb
test
inc
mov
cld
push
sub
out
cmp
les
je
adc
nop
inc
mov
cdq
leave
int3
xor
rcl
(bad)
fs
test
arpl
adc
mov
mov
scas
add
mov
jmp
(bad)
sbb
outs
dec
movs
imul
mov
add
std
ret
je
ret
add
pusha
push
enter
or
test
xchg
inc
mov
(bad)
and
xor
or
push
outs
and
xor
icebp
or
add
sbb
pop
push
loope
push
inc
add
leave
movs
inc
and
gs
dec
xor
movs
xor
test
pop
cmp
add
sbb
adc
push
sbb
push
jno
dec
adc
sbb
add
mov
rol
out
adc
(bad)
push
pop
(bad)
cmp
pushf
lods
rcl
ja
push
add
arpl
(bad)
xor
adc
iret
int
sub
arpl
adc
inc
inc
sub
xchg
xchg
movs
push
jp
cmp
loopne
jbe
or
cmp
daa
or
jmp
stos
mov
imul
push
mov
pop
adc
inc
shl
xor
mov
push
adc
dec
xor
add
adc
xchg
fs
sbb
lds
enter
imul
mov
adc
call
and
and
rcr
aaa
dec
adc
sub
mov
push
sbb
pop
inc
sbb
lock
push
cmps
das
adc
sbb
pusha
sub
test
lea
enter
add
mov
jmp
call
fisttp
mov
js
or
xchg
push
repz
popa
or
and
mov
popa
in
jge
mov
inc
je
mov
sbb
mov
pusha
inc
pop
jo
out
jl
je
sbb
adc
ds
dec
add
add
into
inc
push
sub
or
mov
jnp
cdq
jl
je
xor
add
sub
dec
sbb
test
mov
pop
inc
and
scas
shl
sub
je
ins
loope
inc
sub
mov
fnstsw
dec
sbb
out
rcr
push
lds
xor
mov
rcl
jns
aad
ret
popf
(bad)
or
es
pop
mov
je
jmp
push
jp
sbb
dec
ror
sti
jne
jge
pop
adc
inc
ins
ret
cdq
cmps
lods
jbe
ret
aas
sbb
rcr
ja
aam
push
mov
add
cmp
jge
sub
mov
pop
or
or
dec
add
jnp
inc
fsub
add
inc
pop
xchg
ret
push
test
fneni(8087
adc
xor
daa
ror
or
sbb
sbb
in
push
mov
mov
fs
fdivr
lds
pop
mov
pop
add
cmp
jae
cli
sbb
cmp
or
xchg
xlat
pop
outs
inc
bswap
xor
rcl
add
bound
cmps
mov
add
sbb
jno
push
pop
jae
cmc
adc
push
call
mov
dec
sub
dec
mov
adc
icebp
push
and
xchg
mov
call
sbb
mov
pop
adc
ins
mov
push
push
(bad)
fdiv
das
dec
add
inc
mov
movs
xchg
dec
lods
sar
mov
cmp
stos
fld
and
and
cmp
dec
je
and
add
jne
xchg
and
add
jno
inc
and
and
and
sub
add
pop
test
sbb
and
cmp
das
imul
push
cmp
mov
jp
sub
mov
mov
mov
mov
int3
dec
pcmpgtb
pushf
int3
xor
data16
xchg
mov
xchg
add
movs
int
jnp
in
cmp
int3
and
cmp
cmp
jge
jo
rcl
shr
sub
stos
add
sub
fidivr
ins
xchg
jne
pop
sub
mov
cmps
add
sbb
out
inc
(bad)
dec
fstp
retf
jmp
aas
and
js
or
fild
mov
add
mov
fdiv
push
mov
inc
pop
sub
loopne
cmp
fstp
aad
leave
xor
cmp
enter
cmp
xchg
lds
or
jno
jmp
arpl
and
out
ud1
outs
adc
sub
jle
cmp
(bad)
xchg
(bad)
cmc
add
fisttp
shl
jno
mov
mov
add
or
mov
enter
adc
pop
pushf
mov
add
inc
adc
cwde
lds
outs
dec
or
inc
add
inc
jg
dec
or
or
ins
add
adc
pop
in
popa
add
jbe
shr
or
pop
movs
and
loop
mov
push
push
sub
and
add
add
xchg
sub
rcl
xchg
and
jo
ret
sbb
test
pop
lods
sub
add
xchg
cmc
mov
pop
add
or
addr16
test
gs
push
add
dec
inc
lahf
or
xchg
call
lods
addr16
test
push
add
mov
and
hlt
push
sub
sbb
daa
mov
sbb
add
sbb
xor
pop
add
sbb
aad
lods
jne
rol
loop
xor
enter
dec
test
es
rcl
add
adc
shl
sbb
test
or
push
lods
pop
mov
dec
jecxz
adc
stc
mov
mov
xchg
psadbw
inc
xchg
cs
push
adc
(bad)
xor
icebp
add
xlat
push
(bad)
ror
dec
nop
xor
mov
xor
mov
mov
push
lock
(bad)
mov
cmps
js
fisttp
xchg
mov
dec
cmp
or
ret
or
pop
cld
loope
mov
mov
and
movs
and
aam
push
inc
and
fwait
sahf
iret
push
movs
push
(bad)
popa
std
stos
mov
fs
or
adc
sub
cmp
or
mov
pop
pop
mov
pusha
xor
cmp
mov
mov
pop
ds
adc
aaa
pusha
cmps
adc
push
adc
or
sbb
shr
or
cmp
ficom
aam
sub
pusha
adc
loop
sub
jmp
sbb
rcr
in
or
or
add
and
js
inc
movs
add
add
cmp
mov
or
jae
and
call
stos
test
xor
enter
push
popa
mov
rcl
call
and
js
jecxz
or
loopne
shl
fsub
imul
ins
mov
loop
sub
add
sbb
push
or
je
add
xchg
imul
in
dec
add
lea
jno
adc
add
xor
adc
test
and
cmps
dec
push
jo
fisttp
out
push
cs
es
dec
in
xchg
xor
in
mov
cmp
lods
lods
ss
push
shr
jmp
jle
das
(bad)
xlat
mov
out
fsubr
leave
in
(bad)
xchg
adc
push
jge
xchg
add
cld
add
out
dec
sub
int3
add
sbb
and
retf
inc
mov
std
fld
and
add
and
enter
enter
mov
xor
xor
adc
pop
pop
xadd
nop
stos
and
sub
adc
outs
sahf
xor
push
loop
(bad)
cmp
in
and
lock
add
xchg
test
mov
icebp
adc
mov
sub
add
sar
sbb
in
(bad)
xor
imul
jno
fmul
and
cmps
cmp
xor
push
adc
sub
pop
mov
shl
jns
pop
push
pop
jo
ss
inc
jl
push
cs
fst
xchg
push
push
add
xlat
adc
jns
(bad)
adc
and
inc
and
(bad)
or
push
pop
mov
gs
cli
outs
pop
xor
cmp
loopne
sbb
mov
and
stos
jo
pop
add
int3
retf
jo
sub
sub
cmps
adc
adc
das
push
ret
sbb
lock
lea
push
mov
xor
loop
lea
jbe
ins
sub
sbb
push
xor
adc
inc
xor
pop
xchg
fnstcw
lahf
pop
adc
dec
in
cld
jno
retf
add
mov
cld
xor
sub
pushf
clc
pop
dec
pop
xchg
cmp
xchg
jne
push
push
xchg
pusha
inc
ret
or
test
and
test
xchg
pusha
push
outs
in
inc
jb
(bad)
jmp
les
and
sbb
inc
(bad)
sub
outs
and
ss
push
dec
js
leave
ret
add
gs
xor
test
sub
adc
lock
jmp
or
fimul
mov
js
sbb
add
add
or
sbb
leave
int
or
adc
sub
jae
xor
retf
and
(bad)
aas
sub
xlat
sbb
lods
lahf
jbe
cmp
add
push
pop
sbb
inc
stc
and
cmps
lods
xor
sub
and
and
cwde
inc
stos
push
lock
cwde
sub
aaa
mov
sbb
cmps
adc
and
movs
sbb
outs
stc
inc
mov
repz
add
sub
sbb
or
mov
retf
ja
mov
(bad)
and
push
add
cmps
(bad)
in
xchg
sub
lods
imul
inc
aas
je
mov
sub
cmc
cwde
xchg
fdiv
add
mov
dec
stc
jo
(bad)
add
aam
push
(bad)
daa
add
adc
test
sub
push
add
xchg
call
dec
popa
adc
dec
push
mov
cmp
push
cmp
clc
rol
adc
xchg
jle
(bad)
pop
or
mov
js
cwde
add
dec
or
sar
mov
icebp
sbb
xor
into
das
sbb
mov
cdq
js
or
pusha
addps
add
mov
shr
jecxz
mov
jb
sbb
sub
add
add
jp
cmp
test
xchg
xchg
sub
sar
dec
pop
adc
mov
bound
cmp
jne
add
clc
jne
leave
jmp
dec
loope
(bad)
jmp
test
mov
or
jl
add
cdq
add
jo
mov
and
daa
xchg
popf
xor
into
retf
and
or
jb
inc
dec
loop
adc
xor
lock
sbb
shl
popf
ins
inc
shl
inc
inc
fisub
ja
cmp
and
jae
mov
hlt
or
inc
ret
stos
lock
inc
imul
rol
xor
adc
mov
cwde
add
mov
and
or
pop
adc
les
mov
inc
sub
cdq
or
and
retf
sahf
lock
lahf
lds
adc
push
jecxz
movs
sbb
inc
mov
pop
mov
test
stc
(bad)
nop
sub
in
imul
or
inc
adc
or
inc
stos
or
inc
mov
add
inc
fwait
jno
mov
and
adc
jo
rol
or
mov
loop
add
movs
rcr
cmp
mov
sbb
in
inc
push
xlat
test
pop
dec
inc
dec
adc
inc
jg
push
or
fistp
cli
pop
add
inc
mov
test
adc
and
push
pop
xor
and
push
and
cmp
adc
push
inc
setbe
outs
dec
adc
cld
cs
add
mov
add
movs
adc
sub
ja
enter
sub
inc
cmp
movs
call
mov
loope
xor
cwde
mov
call
sub
test
xor
xchg
jmp
test
sti
dec
xchg
adc
dec
and
xor
sbb
or
adc
add
and
push
push
adc
ds
and
imul
icebp
nop
xchg
inc
nop
icebp
(bad)
out
fdivr
push
leave
sub
sub
and
sub
add
cmp
push
push
and
movs
arpl
movs
and
pop
sti
push
jb
xchg
lds
xchg
cwde
push
lods
lea
mov
mov
div
dec
scas
inc
imul
imul
sub
outs
xor
dec
movs
sub
adc
xor
std
mov
out
cmp
cmp
in
xlat
sub
mov
push
inc
cmp
or
xchg
adc
sbb
scas
mov
jmp
and
aad
hlt
mov
adc
dec
push
adc
jo
sub
jmp
inc
clc
movaps
cmps
loope
sub
and
outs
leave
or
cmps
or
and
sub
aas
cmp
mov
cmps
dec
add
mov
add
fmul
pop
test
sahf
inc
xchg
iret
stc
(bad)
and
sub
mov
and
pop
mov
xchg
sub
loopne
push
jecxz
jne
add
and
adc
mov
pop
lods
dec
pop
and
and
inc
push
jge
sub
test
test
cmp
ins
cmp
push
mov
xor
push
mov
mov
int
cld
xchg
cmp
sahf
jge
ss
jecxz
ret
xchg
adc
xchg
xchg
push
aam
ins
js
div
jne
repnz
add
sub
add
inc
push
mov
lock
popa
and
shr
sbb
and
aas
inc
call
hlt
out
dec
mov
adc
(bad)
mov
mov
adc
cwde
mov
fisub
mov
sub
sbb
mov
in
adc
sub
or
lds
mov
jg
ret
and
inc
stos
sbb
jmp
cmp
adc
xchg
jp
dec
mov
jmp
lds
sub
outs
and
out
dec
cmp
aaa
push
push
lds
scas
mov
add
sub
shr
adc
dec
add
push
adc
ror
fistp
mov
fcom
dec
les
inc
mov
mov
std
sub
dec
cmp
jmp
cmps
and
nop
pushf
cmp
push
mov
push
test
pop
cmp
mov
mov
test
add
add
lock
rol
mov
xor
pop
push
fld
out
adc
cmps
mov
daa
movs
pop
rcr
retf
or
shl
outs
mov
repnz
cmp
sub
add
add
and
and
lahf
and
jns
sbb
add
adc
and
push
rcr
lock
cmp
adc
mov
dec
ficom
add
sbb
dec
and
cmp
dec
add
in
inc
and
and
scas
pop
ror
xchg
sbb
lea
add
pop
jb
dec
add
fs
dec
dec
dec
jne
ds
inc
ret
mov
enter
addr16
push
add
dec
lock
mov
mov
add
mov
mov
push
cmp
xlat
test
xor
mov
jns
cmp
add
sub
mov
add
pop
inc
loope
les
sub
push
sbb
dec
js
push
xor
(bad)
xchg
mov
mov
xor
push
add
sub
sti
shl
jmp
addr16
sbb
mov
and
xchg
sub
call
mov
jmp
sub
or
pop
repnz
add
push
into
jne
or
mov
(bad)
bound
or
fcomip
xchg
push
push
jl
cmp
inc
dec
es
inc
sahf
inc
ss
mov
jns
(bad)
cmp
xor
or
cdq
pop
pop
popf
mov
test
call
mov
test
mov
mov
cld
mov
or
ins
enter
add
nop
inc
mov
add
sahf
and
inc
jne
mov
push
mov
push
mov
outs
sti
out
dec
clc
and
pop
and
cld
in
dec
push
call
xor
mov
inc
xchg
sub
and
jb
pop
dec
imul
dec
mov
add
and
lods
add
dec
hlt
popf
mov
dec
aam
cdq
in
int
ret
inc
adc
inc
mov
dec
dec
inc
xor
push
packssdw
imul
xor
jmp
jne
or
dec
inc
(bad)
pop
aas
mov
push
jmp
popf
pop
pushf
push
add
jb
mov
and
dec
add
push
pop
leave
inc
mov
inc
sub
push
mov
cmp
test
adc
ins
xor
data16
mov
sub
mov
adc
std
stos
push
adc
out
test
lock
mov
mov
or
mov
(bad)
out
sub
dec
add
cmp
add
and
add
daa
inc
dec
add
adc
sahf
and
es
or
adc
mov
and
daa
push
scas
mov
and
test
push
dec
loop
pop
push
xchg
inc
lods
xor
cs
cmps
jle
loop
mov
shl
dec
pop
mov
sbb
popa
push
pushf
mov
hlt
inc
loope
dec
push
push
jae
repnz
mov
sbb
dec
push
cmp
ja
and
adc
pop
xor
test
sub
xor
fsub
push
xchg
push
pushf
xchg
mov
adc
and
mov
inc
sub
(bad)
test
enter
cmp
add
ror
aam
mov
mov
mov
fwait
push
fdivr
mov
fsubr
xchg
sub
cmp
xchg
push
loope
push
call
xor
test
jmp
dec
pop
jbe
jp
push
dec
dec
jmp
jae
(bad)
and
dec
pop
dec
cmp
xchg
loop
push
and
rcr
lds
sbb
ja
(bad)
sbb
inc
enter
pop
enter
mov
pop
je
cmp
or
add
ins
jb
cmp
or
or
hlt
add
and
pop
and
cli
cmp
or
fadd
jmp
xchg
sbb
add
popa
sub
add
push
lds
fisttp
(bad)
jmp
or
xchg
cmp
push
(bad)
adc
movs
fldcw
add
add
dec
adc
or
test
pop
movs
imul
fs
adc
loope
jg
aad
inc
and
shl
pop
xor
jo
mov
add
xor
jnp
add
push
ret
cmp
mov
mov
sub
or
or
dec
jp
pop
jo
or
jno
std
jle
loop
fadd
mov
and
ret
cdq
int
add
push
mov
rcl
xchg
cmps
jp
loopne
sub
sbb
mov
add
or
enter
dec
sub
xchg
sbb
mov
mov
push
cmp
repz
and
add
dec
xor
inc
jge
or
jnp
and
inc
or
xabort
add
push
movs
mov
add
aas
push
adc
xor
iret
add
movs
imul
sub
or
mov
or
mov
nop
adc
cmp
push
sub
xchg
add
daa
dec
jl
mov
and
push
mov
cmp
inc
fwait
ins
sahf
jno
pop
push
repnz
fwait
push
push
sahf
add
cwde
mov
mov
jl
es
sahf
push
push
push
pop
pop
and
jo
xor
(bad)
ficomp
add
mov
or
pop
xor
into
and
ret
and
xlat
cmp
push
enter
add
nop
cmps
ficom
or
in
or
cmc
mov
add
popf
dec
adc
enter
sahf
xor
xor
cmp
mov
dec
je
mov
cmc
push
sbb
shl
inc
pop
inc
fdiv
and
and
sbb
lods
ror
es
lock
cmp
ror
cmp
sub
pop
adc
cmp
sub
stc
xlat
imul
mov
sub
add
cmps
(bad)
and
pop
jp
retf
push
xchg
pop
inc
dec
and
iret
adc
ins
mov
pusha
and
sbb
sbb
jne
cmp
lahf
push
rol
sar
into
push
cli
add
repnz
pop
mov
cmp
mov
sbb
jmp
and
cmps
add
outs
mov
fld
sub
enter
jge
iret
dec
repz
leave
test
sbb
std
mov
xor
jno
retf
add
or
imul
mov
cmp
and
addr16
outs
add
sub
xor
or
sti
jge
push
sub
repnz
lea
cdq
aad
push
cmp
adc
lahf
sub
ret
fbstp
outs
push
fwait
lea
hlt
leave
push
cmp
(bad)
idiv
mov
jmp
or
clc
jo
adc
test
sbb
out
pop
rcpps
das
push
cmp
sbb
add
push
push
icebp
xchg
and
cmp
push
(bad)
loopne
mov
mov
out
xchg
or
popa
adc
fabs
cmp
and
mov
sub
cmp
jecxz
sbb
dec
mov
and
lahf
retf
shl
push
jnp
jge
push
test
push
adc
sbb
inc
inc
pop
push
or
and
das
int3
sub
call
fmul
nop
sbb
push
lods
sub
pusha
jecxz
cmp
mul
pop
in
ret
push
dec
adc
and
icebp
adc
cmp
and
(bad)
cmp
mov
(bad)
call
in
adc
push
push
fwait
(bad)
xchg
push
pop
loopne
or
inc
loop
push
(bad)
jae
mov
mov
test
dec
push
sub
xchg
jne
xchg
jne
pop
fcomp
push
adc
shr
or
lock
mov
adc
imul
rcr
mov
dec
dec
jo
das
test
fmul
inc
cmp
mov
xor
sub
lock
or
mov
xchg
mov
add
or
pusha
dec
pop
inc
aad
push
or
jne
pop
ficom
pop
or
push
sub
pop
(bad)
loopne
cmp
jae
or
icebp
add
ins
xor
int3
(bad)
and
xchg
sti
stos
jmp
mov
inc
push
dec
shl
ins
shl
jmp
fwait
and
add
mov
add
push
dec
stos
push
or
(bad)
or
outs
adc
xor
popf
repnz
cmp
and
inc
mov
xchg
add
das
sbb
inc
lahf
mov
call
or
dec
jecxz
and
dec
outs
shl
and
ret
fs
fadd
inc
shr
es
bound
inc
call
mov
ss
inc
xor
pop
and
rol
(bad)
lods
pop
jae
call
lea
mov
push
and
xor
sub
push
cmps
and
sbb
adc
ss
sbb
loope
repnz
(bad)
mul
loope
jle
sbb
xor
xor
sbb
and
xor
add
ss
push
jo
dec
aas
add
pop
jecxz
push
aad
inc
pop
or
test
into
sbb
fcom
and
pop
inc
inc
pop
retf
std
add
inc
add
lahf
lods
test
adc
add
and
or
or
lds
xor
dec
sub
addr16
mov
push
adc
pop
xor
icebp
lock
mov
xchg
xchg
ret
push
jmp
(bad)
fiadd
outs
ss
pop
or
push
stos
jne
jle
sbb
add
popa
sahf
mov
push
add
dec
push
adc
and
push
sub
mov
retf
sub
sbb
jbe
lods
pop
not
sub
shl
or
dec
and
rcl
or
bound
push
pop
lea
or
pop
test
push
and
sbb
fwait
mov
push
aas
dec
and
xchg
sub
in
jne
hlt
or
push
inc
daa
lods
adc
xor
loop
add
stos
or
cmps
pop
xlat
ins
sub
and
rcr
adc
scas
add
hlt
js
pop
pop
adc
jno
fmul
push
iret
fbstp
add
add
inc
add
push
cmc
add
mov
or
sub
jle
aaa
ja
mov
pop
pop
sub
pusha
lea
fs
mov
jge
icebp
jno
nop
push
dec
push
jmp
sbb
movs
pop
aad
push
test
in
mov
je
test
adc
(bad)
xchg
mov
mov
adc
dec
dec
pop
lea
fadd
add
retf
pop
aad
push
stos
pop
movs
pop
xchg
add
(bad)
jbe
jno
test
dec
jnp
push
or
mov
add
adc
pusha
mov
xor
or
adc
lods
(bad)
cmps
xchg
cmc
xchg
test
mov
sbb
cmp
mov
or
inc
add
inc
stos
icebp
(bad)
movs
jbe
leave
or
mov
or
sbb
add
or
inc
jl
inc
and
jo
sbb
mov
loope
ins
xor
adc
jp
xor
loope
dec
xor
dec
call
xor
xor
sbb
fnstenv
in
int3
mov
mov
nop
rol
inc
lods
sbb
aam
jle
push
jmp
pop
fadd
je
pusha
js
mov
jg
int3
fst
mov
xchg
or
das
aad
and
mov
inc
ror
mov
ficomp
sbb
sbb
adc
or
pop
inc
inc
mov
xor
dec
inc
sub
sbb
in
sahf
push
shl
jnp
mov
adc
add
daa
push
inc
xor
dec
xor
push
cmp
or
into
jo
mov
ins
pusha
shl
mov
mov
jno
or
mov
push
sub
cmps
push
add
lock
mov
add
xor
ins
adc
sub
inc
add
mov
cmps
pop
inc
loop
push
push
and
xchg
fs
fst
add
xchg
jo
int3
js
inc
cmp
xchg
inc
jns
add
retf
inc
add
clc
dec
aaa
movs
push
xchg
pop
push
cmp
jne
ins
std
xor
sub
sbb
pop
push
push
adc
cmp
jns
out
add
int3
ss
sub
mov
rcl
mov
and
adc
mov
mov
push
mov
sub
lods
push
arpl
loopne
push
jne
outs
and
cmp
push
int3
cmp
fadd
push
xor
sub
cmp
cwde
test
repz
inc
push
dec
lods
les
pop
adc
pop
inc
push
leave
and
push
xchg
adc
or
dec
and
dec
add
cmc
rol
addr16
test
adc
cmp
frstor
mov
dec
xor
or
add
rol
mov
mov
push
push
fwait
mov
push
jb
xchg
xchg
cmp
fs
add
lahf
mov
push
je
inc
push
jmp
imul
pop
mov
xor
xchg
cmp
mov
mov
gs
hlt
lock
clc
or
add
or
(bad)
test
add
or
mov
cs
arpl
dec
and
imul
ins
mov
addr16
je
push
cmp
pop
int
xchg
push
cmp
push
adc
add
sub
push
stos
inc
rcl
(bad)
hlt
mov
push
jg
push
pop
fs
push
jbe
add
das
mov
(bad)
sub
rcr
call
xchg
cs
dec
mov
das
jb
(bad)
push
add
adc
or
lahf
das
cmp
pusha
(bad)
jmp
push
(bad)
arpl
inc
pop
or
and
pop
inc
and
lahf
daa
inc
and
adc
jo
or
loope
mov
cmps
movs
lea
popa
and
and
add
pop
or
mov
or
ins
or
inc
imul
lahf
(bad)
call
or
rol
in
push
ja
cmp
das
in
add
push
enter
jns
cld
pop
aam
or
pop
add
enter
fst
sub
mov
movs
int3
test
cs
retf
in
aam
fdiv
mov
pushf
xor
in
loopne
or
or
sub
jge
push
inc
add
add
push
xchg
add
bound
je
rol
and
shr
and
lds
sub
and
mov
mov
jl
lock
sbb
pop
(bad)
adc
addr16
inc
pop
or
cld
or
mov
inc
pop
cmp
add
xchg
or
imul
cmp
or
push
and
sub
sub
inc
(bad)
mov
push
sbb
jo
add
test
nop
repz
leave
pusha
mov
mov
movs
pop
sbb
test
inc
std
gs
sub
dec
mov
add
je
stos
cmp
in
imul
push
imul
and
add
pop
sub
pop
je
outs
in
int
shr
sub
add
or
loop
sub
mov
inc
jle
push
fwait
and
lock
jecxz
jno
jo
or
pop
(bad)
xchg
leave
jnp
sbb
mov
or
std
add
pop
leave
and
loop
jecxz
lods
push
and
in
and
lock
in
aas
mov
nop
push
cmp
aam
sbb
mov
movs
sar
fiadd
fnsave
adc
adc
jge
push
adc
xor
push
in
add
call
push
push
sbb
or
inc
dec
xor
or
jns
rol
je
pop
jp
add
adc
aas
push
mov
inc
je
inc
add
or
enter
retf
dec
or
add
loopne
cmp
movntq
sahf
sti
pop
sub
outs
sbb
sbb
mov
dec
add
xchg
mov
shl
rcl
adc
imul
iret
shl
int3
add
fstp
cld
ss
or
xchg
sub
push
adc
movs
iret
ins
mov
ins
or
dec
lods
fcmovnb
mov
push
int
mov
pop
lock
ror
arpl
xchg
call
iret
or
loope
inc
es
test
in
add
(bad)
in
inc
retf
jmp
pop
push
adc
cmps
lds
xor
and
jne
adc
mov
add
aaa
jno
cdq
and
and
cmp
pop
xor
lock
pop
pop
aam
shl
daa
mov
dec
xchg
mov
mov
push
or
in
jns
outs
mov
xor
test
and
inc
add
pop
push
loop
rol
pop
pop
clc
xchg
jmp
adc
fcomp
and
mov
pop
adc
pop
xchg
lods
movs
pop
call
dec
adc
(bad)
cmps
mov
sub
sbb
gs
sub
sub
std
push
test
pop
mov
xor
sub
add
jle
and
xchg
scas
and
sbb
xchg
aad
push
retf
js
pop
xor
sbb
and
mov
sub
or
or
(bad)
mov
xor
aas
xchg
sbb
and
push
mov
push
movs
je
pusha
test
scas
rcr
repnz
add
clc
mov
xchg
pushf
pop
xor
jne
out
loopne
ins
adc
xor
pop
cmp
fisubr
jp
adc
jmp
jl
in
popa
cmp
outs
ss
jge
clc
xchg
jo
jmp
ja
xchg
(bad)
mov
lahf
dec
in
adc
sbb
or
int
enter
mov
test
or
sbb
cmps
inc
bound
mov
mov
push
mov
xor
push
push
jmp
add
dec
dec
retf
xchg
fcom
adc
and
pop
nop
cmps
and
dec
es
add
jmp
pop
ds
xchg
and
xchg
adc
inc
sbb
xchg
sbb
adc
mov
dec
adc
sahf
mov
sub
sbb
cmp
enter
inc
cmp
or
out
out
hlt
stos
mov
mov
in
in
jmp
shr
dec
sbb
push
in
jmp
sbb
inc
and
or
mov
push
sbb
fxch
lahf
and
jns
lock
repnz
pop
or
adc
jmp
(bad)
xchg
aas
push
sahf
jmp
aas
ret
mov
ds
adc
nop
sbb
ror
fcmovnb
push
pop
and
div
ds
ret
mov
inc
ret
jbe
or
dec
xchg
xor
jg
imul
daa
jne
in
inc
nop
sbb
ds
push
cmp
cmp
push
or
sbb
xor
jne
or
sbb
inc
sub
or
inc
les
enter
fwait
test
jl
popf
push
push
push
jl
icebp
mov
cmp
mov
das
fidiv
cmps
cmps
jmp
xor
sub
jmp
xor
pusha
jmp
das
daa
cmp
push
test
and
mov
ficomp
sub
loop
out
push
push
push
dec
inc
daa
(bad)
sbb
sbb
adc
cdq
mov
fimul
or
nop
xor
jo
pop
sbb
lods
pop
or
das
xor
cdq
in
push
add
test
inc
js
lods
add
aaa
jb
cwde
push
adc
xor
cmp
lock
and
and
into
rol
mov
sub
and
lods
mov
mov
add
inc
sbb
test
lahf
sbb
cwde
or
inc
add
add
adc
(bad)
mov
sbb
movs
sub
adc
add
sbb
xor
mov
mov
cld
dec
je
sub
fld
ds
mov
out
mov
adc
push
mov
mov
std
inc
jmp
or
jae
and
or
pop
sahf
mov
jno
jl
sbb
add
stos
mov
and
pushf
and
out
mov
in
jb
pop
push
imul
or
out
dec
ins
ins
ror
add
pop
pop
cmp
pop
fcom
or
mov
lahf
xor
sub
xchg
in
xor
or
rcl
and
inc
leave
add
push
xchg
fst
sub
cmp
add
jae
add
pop
sbb
inc
or
push
popa
dec
icebp
xor
stos
mov
js
sbb
(bad)
aam
xchg
dec
aam
cdq
popa
js
cmp
dec
ins
push
xchg
add
mov
adc
shl
lock
jg
je
mov
push
ins
iret
sub
pop
pop
fsubr
ins
push
and
and
xchg
mov
data16
loop
fsubr
fld
push
or
pusha
sbb
and
test
or
cmp
adc
add
in
adc
aad
add
inc
push
imul
sub
mov
push
rol
mov
cmp
dec
not
push
movs
dec
adc
sub
aad
fisttp
in
div
mov
movs
ins
cmp
out
cmps
add
imul
xchg
inc
outs
pop
imul
add
add
outs
jno
iret
jae
xchg
fmul
rcl
or
pop
cwde
imul
lds
sti
adc
mov
push
inc
push
xchg
mov
movs
dec
pop
cmp
sahf
and
add
jmp
dec
push
push
shr
xchg
dec
mov
inc
imul
jmp
fimul
push
xor
add
push
bsr
or
out
call
sbb
in
xor
je
adc
sbb
rol
or
inc
int3
dec
or
mov
dec
jecxz
push
leave
mov
inc
pusha
or
or
mov
shr
dec
or
adc
or
push
push
repz
xor
pusha
adc
sbb
js
stos
add
inc
add
mov
cmp
adc
(bad)
or
or
daa
jmp
(bad)
cwde
or
or
mov
popa
xor
inc
call
fidivr
aam
jmp
sub
mov
push
cmp
cli
sub
push
push
push
ror
adc
or
sbb
pop
adc
cmps
inc
xor
xor
mov
push
cli
rcl
lods
repz
jb
and
loop
push
and
stos
sbb
ins
push
jge
xchg
adc
cmps
sbb
or
push
jl
inc
(bad)
cmp
add
or
shl
js
popf
xor
sbb
mov
adc
cmp
mov
jno
push
xchg
sar
adc
loop
and
mov
test
sbb
fld
add
mov
fcomp
(bad)
inc
pushf
ins
cli
arpl
or
sahf
inc
dec
push
xor
or
sbb
fist
shr
push
and
enter
dec
lock
jmp
retf
add
sbb
movs
adc
gs
sub
imul
loop
and
pop
mov
jp
and
pop
lds
in
and
ret
rol
movs
sub
(bad)
add
mov
mov
pop
mov
fcomp
xchg
xchg
dec
test
sbb
cmp
ret
add
xor
push
sub
xchg
and
push
mov
dec
mov
and
fdiv
dec
movs
push
call
loop
loope
sbb
inc
push
jne
call
(bad)
xor
adc
fidiv
or
ret
sub
in
dec
jle
ror
(bad)
pop
sub
dec
mov
sahf
cs
push
pop
call
or
mov
out
gs
sbb
sub
adc
dec
ins
mov
dec
xor
loope
sbb
push
dec
add
sbb
add
push
sbb
mov
jae
cli
inc
jmp
sar
jmp
dec
mov
jne
jo
xor
mov
fst
rcl
add
or
sar
rol
ret
neg
sbb
xor
enter
push
xor
and
aad
retf
rcr
xchg
mov
mov
inc
test
mov
cmp
in
inc
pop
ins
push
adc
in
ins
xchg
xchg
pushf
dec
imul
mov
aaa
mov
stc
repz
jae
push
pop
gs
bound
or
jne
pop
inc
jmp
(bad)
mov
sbb
ins
mov
jmp
das
ss
push
fld
aad
adc
xor
test
inc
sub
pop
in
push
pop
pop
cdq
test
inc
inc
or
mov
retf
jmp
inc
outs
and
mov
xchg
mov
call
retf
cs
cmp
arpl
lods
pusha
lods
sbb
xchg
xor
out
daa
inc
mov
mov
lock
add
ins
adc
es
or
adc
cmp
inc
test
js
arpl
and
and
inc
lahf
or
xchg
mov
movs
mov
(bad)
arpl
(bad)
jmp
pop
leave
sub
add
and
das
movs
add
lahf
adc
call
xchg
mov
cmp
push
mov
in
or
in
in
pop
inc
cmp
push
cmps
dec
dec
enter
sbb
adc
lds
repz
pop
or
mov
pop
fnstenv
sub
lahf
scas
cs
or
dec
daa
aad
sub
pop
adc
or
sahf
xchg
ret
cmc
mov
xchg
push
sub
inc
cmps
lods
lea
or
loope
push
adc
push
cs
sbb
mov
mov
and
in
mov
adc
and
add
lds
fnstcw
jo
sbb
jmp
test
dec
adc
add
dec
fiadd
outs
and
sbb
dec
jno
sub
mov
jne
shl
iret
adc
imul
mov
push
sbb
push
pop
sub
sbb
loope
jnp
and
and
jnp
add
(bad)
fld
sub
or
leave
gs
into
loopne
add
sub
xor
and
push
sub
jne
sbb
enter
je
cmp
pop
or
leave
dec
fwait
jge
add
retf
test
or
scas
cmp
jl
mov
or
mov
dec
mov
sub
cmp
je
push
das
mov
jbe
jle
fst
fsubr
wbinvd
push
pop
pop
mov
popf
adc
pop
pop
dec
xor
inc
mov
aad
pop
sub
sub
pop
xor
sar
inc
xor
xchg
pop
cmc
rol
or
add
dec
fnstenv
or
cli
mov
add
add
sbb
fld
or
sbb
not
je
mov
popa
push
cmp
mov
dec
arpl
or
test
adc
repz
stc
push
dec
inc
cmp
push
and
lock
push
and
adc
mov
push
sbb
lods
popa
nop
popa
add
pop
xchg
leave
push
push
xchg
sbb
sub
out
adc
call
xor
and
cmp
retf
inc
mov
js
xlat
js
enter
mov
mov
jmp
jo
xchg
xor
mov
aas
movs
add
dec
sub
cld
ret
js
test
cmp
adc
or
aad
sub
mov
scas
or
and
fdivr
dec
call
sub
and
out
jecxz
inc
loope
push
in
(bad)
jge
or
or
mov
add
sub
xchg
cmp
mov
mov
pop
xor
or
stos
xchg
test
test
ret
enter
fst
mov
or
or
adc
js
mov
mov
iret
cmp
add
add
cmp
add
ffree
je
mov
or
dec
adc
push
cmps
sub
jg
or
jmp
jno
shl
pop
pop
sbb
mov
jg
jo
jmp
adc
retf
mov
fwait
dec
std
les
sbb
test
mov
or
jg
les
and
add
and
add
fist
dec
xchg
addr16
rcr
mov
cld
fimul
mov
je
outs
inc
or
pop
xor
sbb
xchg
mov
xchg
ins
sbb
lds
cmp
icebp
cdq
push
iret
lds
test
pop
dec
pop
cmp
ss
jne
xlat
jne
mov
scas
xchg
and
stc
mov
mov
add
test
jne
in
and
pop
pop
push
push
es
(bad)
push
sub
push
mov
addr16
add
pop
or
push
nop
retf
pop
dec
int3
cmp
xor
sub
add
call
dec
lahf
arpl
add
adc
xor
and
ret
ret
inc
adc
mov
push
cmp
hlt
xor
sub
adc
inc
push
xchg
sbb
add
adc
ds
push
push
xor
jge
jbe
xor
mov
mov
popa
sub
or
xor
inc
addr16
sbb
or
or
jns
jmp
jb
or
sub
cmp
add
push
push
or
movs
and
xchg
add
and
repz
retf
push
add
xchg
les
mov
dec
xchg
enter
out
pop
enter
pop
int
add
and
add
pop
(bad)
xor
mov
inc
divps
adc
inc
scas
xchg
cmp
fs
sbb
adc
xchg
lock
mov
or
iret
cmp
add
rol
push
cwde
push
mov
popa
push
inc
or
outs
cmp
pop
xchg
or
adc
and
and
dec
cmp
or
adc
arpl
xor
push
aaa
mov
mov
cmp
cmp
in
push
clc
mov
enter
retf
(bad)
dec
dec
call
xchg
nop
fcomp
ror
mov
fstp
adc
pop
dec
sub
jmp
shl
pop
out
sar
sbb
sbb
loop
add
inc
adc
cwde
mov
xchg
bound
add
jo
mov
dec
cmp
pop
out
dec
shr
sbb
mov
cmp
sahf
ins
ret
mov
arpl
pop
add
pop
daa
push
sub
in
push
sbb
inc
and
pop
push
pop
lods
jmp
lds
add
jmp
inc
xchg
stos
xor
dec
jne
add
dec
push
xchg
ss
cmp
popf
push
push
out
hlt
inc
popa
fbstp
jno
mov
(bad)
mov
fbstp
adc
mov
mov
lahf
pop
fsubr
arpl
mov
pop
and
jnp
(bad)
and
aaa
inc
ret
mov
fs
stos
je
xchg
dec
push
add
shr
and
jg
cld
dec
sbb
and
fs
outs
adc
push
hlt
pop
cmp
cmp
push
xchg
out
ja
xor
and
pop
push
push
mov
add
adc
mov
in
sbb
adc
rcr
xor
xor
cs
and
pop
mov
out
call
or
xlat
mov
adc
add
fsubr
and
sub
sub
mov
sbb
inc
aas
movs
dec
lods
xchg
rol
sub
cmps
push
sbb
lock
jp
push
out
jmp
ins
dec
in
loope
scas
je
mov
push
sahf
out
xlat
push
and
je
push
or
stc
out
or
adc
add
call
jne
movzx
clc
hlt
mov
test
add
loopne
jne
in
push
mov
jno
cmp
jne
outs
inc
pop
mov
pop
and
xchg
popa
cli
push
xchg
cli
daa
cmp
push
lldt
dec
repz
adc
jb
ror
sbb
sti
adc
hlt
lock
xor
xor
xor
div
adc
or
push
add
inc
mov
arpl
mov
mov
std
sub
das
and
sub
inc
retf
adc
(bad)
aam
push
aaa
add
lea
aaa
aam
push
push
mov
add
enter
cmp
dec
and
ja
movs
leave
jnp
movs
xchg
lods
nop
repnz
mov
(bad)
stos
rol
int
add
stc
adc
push
push
inc
xor
sub
sub
rol
inc
mov
loopne
sbb
xor
sar
xor
mov
outs
add
fldenv
mov
add
ret
push
popa
adc
iret
sbb
enter
jmp
adc
pop
or
xor
pop
jae
sub
inc
mov
repnz
mov
lahf
sbb
rcl
adc
out
call
push
test
jecxz
adc
sub
push
test
jae
movs
jle
sub
mov
and
dec
pop
rcl
popf
jo
push
dec
(bad)
mov
mov
add
hlt
je
pop
sub
mov
aad
iret
and
in
fild
inc
and
xchg
loopne
inc
adc
call
dec
inc
mov
sub
xchg
hlt
sbb
ins
test
rcl
cwde
mov
or
or
push
adc
xor
mov
in
and
mov
sub
add
fbstp
push
or
test
or
add
fs
add
sahf
jns
adc
call
add
sbb
int3
adc
or
call
cmp
jae
das
sub
inc
dec
scas
test
mov
and
movs
xchg
and
js
inc
adc
sub
arpl
pop
jmp
les
fs
cmp
rcl
and
cld
adc
je
mov
and
sub
or
sbb
ss
sub
push
jb
adc
add
ins
pop
mov
ror
rol
fstp
push
sub
pop
clc
bound
mov
add
xor
dec
or
pop
movlhps
or
dec
add
nop
(bad)
retf
int3
fadd
pop
jge
ins
sbb
cmp
les
fnstcw
dec
movs
xchg
clc
mov
xor
clc
fmul
jo
fs
pusha
cmp
cld
adc
mov
jo
or
mov
mov
adc
sub
dec
dec
push
mov
rcl
(bad)
fdivr
lock
sub
popa
pop
xchg
add
movs
cs
je
pop
ins
adc
popa
push
xor
mov
daa
int3
fimul
add
adc
(bad)
dec
fild
or
pusha
add
pop
dec
cmp
and
sbb
in
loope
add
int3
retf
jmp
push
push
popa
pop
(bad)
in
ins
arpl
call
mov
and
inc
loopne
rol
jle
xor
xchg
fs
dec
ret
fwait
(bad)
fstp
mov
jns
ficomp
pop
ret
or
or
jmp
and
in
not
loopne
lea
into
or
adc
call
sbb
pop
bnd
push
fwait
cmps
jae
push
push
cdq
sub
xlat
daa
inc
pushf
sub
adc
and
add
shr
or
or
inc
or
jo
add
push
mov
push
lea
loope
add
dec
and
mov
mov
fwait
pop
add
add
sub
gs
icebp
imul
(bad)
inc
mov
adc
jmp
jl
sub
add
and
sbb
pop
retf
push
sbb
(bad)
xor
in
into
add
sub
inc
pusha
dec
icebp
lea
cmp
leave
cmp
fmul
rcl
mov
cld
aaa
arpl
(bad)
jmp
jp
xor
stc
xchg
or
cli
or
mov
inc
sbb
ficom
mov
movs
mov
into
push
sbb
loop
call
sub
std
mov
scas
pop
mov
jbe
push
hlt
add
sar
rcr
loope
jmp
pop
pop
call
popa
xor
out
js
pop
cld
pop
ret
div
and
xchg
and
dec
int
and
ror
xchg
cmps
lods
pop
inc
add
nop
jns
xchg
inc
mov
mov
cmp
sbb
or
cmps
in
je
xchg
inc
clc
mov
imul
arpl
(bad)
mov
jmp
mov
outs
jne
or
or
cli
les
dec
sbb
pop
lods
jae
ins
sbb
inc
loop
aam
mov
inc
sbb
mov
pusha
or
xchg
xchg
dec
inc
add
and
ret
leave
jge
rcl
add
test
jno
sbb
dec
pop
pop
or
jno
pop
xor
cld
mov
xchg
add
mov
xor
push
mov
push
jo
sahf
xchg
mov
jecxz
les
das
pop
adc
push
pushf
dec
ds
adc
mov
or
mov
mov
and
dec
adc
xor
loop
and
mov
js
sbb
push
inc
xor
jge
push
mov
dec
xor
xchg
ss
push
fidiv
mov
xor
fld
mov
fnstsw
imul
push
shl
shl
loop
sub
and
sar
ds
imul
add
add
addr16
mov
mov
and
add
mov
cwde
sahf
es
(bad)
shr
leave
addr16
cli
fs
and
out
push
and
add
ins
adc
fs
lock
jmp
or
je
and
and
mov
fimul
mov
bound
imul
push
pop
into
mov
and
bound
es
sub
or
pusha
and
jle
push
adc
inc
add
and
movs
add
or
mov
adc
sub
js
lock
fsubr
sbb
push
out
push
sbb
add
push
cdq
mov
shr
and
pop
daa
sbb
cwde
xchg
rcr
jp
dec
sbb
adc
mov
(bad)
mov
sbb
inc
add
nop
loopne
jo
sar
outs
je
jp
add
ins
adc
mov
sbb
iret
adc
fidivr
loope
push
adc
pop
adc
or
pop
pop
inc
inc
xor
jne
icebp
jbe
and
test
jno
add
cmp
sub
or
int3
ja
push
jae
inc
xor
push
xchg
inc
add
mov
cli
and
pop
push
jmp
inc
add
mov
jo
and
xor
sbb
or
xor
adc
int3
cmps
enter
mov
ret
test
mov
push
shl
push
add
dec
cmp
or
xor
test
pop
jmp
pop
fcmovbe
rol
sub
mov
dec
cmp
add
xor
fst
aam
adc
pop
push
or
cmp
push
inc
push
imul
repnz
mov
sub
mov
sub
ja
scas
add
sbb
adc
bnd
imul
(bad)
fisubr
inc
popf
xor
add
enter
sar
pop
aam
xchg
adc
lods
in
ins
call
adc
aam
aam
cwde
cmps
inc
xor
dec
les
shl
cmp
dec
mov
mov
adc
jecxz
sub
xor
xor
call
je
adc
sti
aaa
aam
cmp
cmp
int
pop
pop
in
jbe
push
jmp
cmp
hlt
(bad)
pop
adc
xor
retf
xor
mov
sbb
dec
pop
pop
fwait
retf
es
adc
dec
xchg
xchg
fs
jnp
sub
fwait
cmp
cli
push
sbb
aaa
inc
outs
retf
adc
enter
je
push
push
outs
rol
sub
add
(bad)
rol
sbb
sub
mov
movs
push
jnp
popf
push
jb
adc
cmp
bswap
sbb
jmp
push
das
jmp
aas
nop
and
lock
inc
ds
add
das
fdivr
cmp
cmp
jmp
dec
loopne
xchg
push
or
or
je
and
pop
test
push
gs
adc
in
ud1
out
adc
mov
stos
std
xor
es
stc
inc
jne
adc
icebp
add
daa
inc
inc
jp
push
pop
stos
shr
loop
test
cmp
xchg
rcl
mov
hlt
add
and
and
sub
repnz
sub
mov
jo
call
sbb
retf
sar
int3
add
ret
cmp
add
push
mov
adc
xchg
lock
xchg
xchg
call
fucomip
or
add
loopne
adc
pop
push
stos
and
loope
or
lea
or
pop
es
xor
shr
inc
fsub
stos
ficomp
xor
sub
mov
(bad)
jbe
adc
xor
(bad)
xor
jb
and
rol
mov
push
das
jbe
jne
cmp
sbb
add
jle
and
or
inc
in
sbb
push
push
adc
aaa
and
xor
mov
shr
add
push
imul
pusha
mov
aam
mov
add
and
dec
adc
aam
dec
or
inc
int3
or
mov
pop
pushf
loop
lock
and
sub
sbb
inc
cmps
add
xchg
icebp
jno
lea
push
push
mov
pop
call
sbb
or
or
test
pop
xor
add
jg
xor
push
ss
dec
mov
jae
sbb
push
add
fs
inc
nop
cmp
and
push
icebp
fld
cmps
leave
adc
push
sub
inc
pop
pusha
jne
xlat
add
add
dec
cwde
add
fmul
in
sar
add
push
xor
mov
or
pop
dec
(bad)
xchg
ud1
jnp
out
ds
mov
mov
jns
dec
rol
push
or
and
push
imul
cli
inc
nop
inc
push
popf
mov
sub
jne
xor
test
leave
pop
xor
outs
out
sub
shufpd
shl
je
jb
mov
sub
retf
mov
mul
mov
push
lea
mov
ds
fild
pop
mov
sub
scas
repz
(bad)
push
fiadd
icebp
pop
adc
push
ffree
jae
push
and
or
loopne
jo
rol
and
dec
inc
shl
inc
addr16
cmp
cmp
ret
mov
adc
add
jbe
clc
and
jge
rol
and
retf
movs
in
mov
and
cmp
push
pop
cmp
shl
and
pop
xor
ins
jae
shr
adc
push
or
dec
adc
and
adc
das
jb
cmp
pop
popa
mov
mov
sub
jnp
div
cmp
adc
and
icebp
add
adc
sbb
leave
into
push
sub
shl
dec
out
or
and
add
xchg
cmp
cwde
inc
out
rol
in
jle
mov
mov
outs
add
add
pop
jmp
dec
or
je
dec
push
cmps
jecxz
imul
jmp
mov
xchg
cld
add
int3
shl
inc
jo
fwait
les
adc
mov
ss
adc
pusha
aad
mul
clc
out
push
sub
and
xlat
sbb
and
in
or
jnp
mov
mov
or
mov
xchg
cmp
adc
add
fldcw
mov
dec
mov
mov
add
add
scas
inc
cmp
or
cmp
rcl
nop
outs
or
or
mov
mov
(bad)
or
add
or
sub
inc
sbb
loop
daa
outs
xchg
jl
mov
imul
add
pop
out
xor
mov
push
movs
mov
add
pusha
xchg
xor
jge
cdq
or
ret
aam
xor
in
mov
xchg
dec
pop
mov
xor
adc
nop
mov
sub
mov
ret
aaa
fucomi
enter
xlat
(bad)
sub
jnp
push
sar
adc
cdq
pop
push
aaa
test
lock
in
stc
out
arpl
and
sub
sbb
add
int3
sub
sbb
mov
mov
test
push
sub
in
push
fisubr
add
ficom
add
int3
loopne
and
fcmovne
xor
daa
or
movs
(bad)
push
pop
enter
xchg
xor
sub
add
adc
(bad)
lods
test
jmp
les
arpl
ja
icebp
test
add
adc
cli
sar
inc
pop
es
jle
mov
sub
sbb
jecxz
xor
jno
popa
cmp
imul
lahf
push
xchg
pop
inc
push
mov
test
adc
sbb
clc
jge
sbb
cld
pop
ds
xlat
sub
nop
movs
mov
std
xor
mov
push
jmp
jno
icebp
retf
sub
rcl
mov
sub
push
push
leave
sbb
pop
lock
pop
stos
fnstenv
adc
push
leave
rcr
inc
xor
sti
aam
mov
cmps
push
push
mov
retw
pop
xor
rcr
inc
js
and
retf
pop
ret
xor
xor
xchg
ins
dec
and
imul
adc
dec
pop
adc
jb
std
call
add
cmp
dec
sub
clc
loope
aas
jb
sbb
imul
add
mov
rol
cmp
jbe
push
std
leave
dec
stc
xchg
xchg
ficomp
lods
aas
adc
push
test
mov
cmps
fadd
xchg
rol
setns
pop
ds
and
adc
push
or
sbb
std
cdq
enter
imul
test
comiss
or
shl
rol
inc
scas
or
push
cmp
ins
mov
mov
jp
loope
cmp
xchg
fmul
cmps
push
nop
xor
mov
stc
mov
pop
sahf
shl
jo
in
jbe
mov
in
popa
push
fst
jmp
mov
(bad)
and
jns
retf
mov
add
sbb
dec
imul
shl
pop
xor
sub
or
push
dec
inc
and
xchg
adc
movs
or
stos
pop
xchg
fsub
cmp
sbb
retf
sbb
jle
push
sub
fld
rcl
lods
rol
adc
ins
popf
repnz
add
jo
sub
cmp
test
xor
sub
mov
push
fcmovne
imul
imul
fiadd
or
cmp
add
out
and
mov
add
std
mov
ror
(bad)
and
movs
adc
xor
loopne
mov
shl
sbb
push
add
das
sub
jo
push
push
pop
pop
adc
xor
xor
mov
mov
int
or
pop
sbb
jl
jnp
mov
or
cld
sbb
test
out
and
das
and
mov
inc
pop
pop
lea
dec
add
add
or
jmp
call
jmp
call
push
adc
or
mov
(bad)
into
dec
jnp
hlt
cwde
rcl
adc
xchg
push
inc
inc
push
out
xchg
daa
sbb
push
mov
sub
int3
call
(bad)
out
fadd
loop
xchg
fistp
and
mov
(bad)
push
cmp
das
pop
cmc
push
jmp
gs
inc
in
xor
push
in
xor
pusha
movs
push
jne
and
push
and
popa
aad
es
psrlw
add
add
test
icebp
mov
xchg
inc
lods
and
outs
iret
dec
ror
add
and
daa
push
push
jb
pusha
int
and
enter
ret
cmps
(bad)
mov
cs
(bad)
int
or
fs
xchg
mov
mov
loope
push
push
fld
hlt
xor
add
mov
push
pop
loope
xchg
idiv
mov
and
sub
cmp
jge
rol
scas
or
cmp
adc
(bad)
shl
push
es
push
sbb
push
and
xor
pusha
cld
mov
out
and
xchg
cmp
stos
popa
mov
in
dec
adc
adc
sub
xor
inc
sbb
movs
or
add
pop
add
xchg
nop
sbb
and
mov
cmp
adc
scas
popa
pop
push
mov
ret
jmp
sbb
xor
push
scas
add
push
xchg
test
jbe
jne
sbb
jb
push
fbld
jno
ds
movs
or
and
or
or
and
call
cmp
call
rol
shl
mov
hlt
xor
ins
sub
xchg
dec
loopne
sub
mov
pop
cmps
push
inc
or
cmp
sub
xlat
mov
shl
or
dec
lods
test
(bad)
add
ja
add
cmps
test
and
into
cli
mov
inc
add
rol
add
dec
mov
rcr
add
xor
ja
pop
jmp
ss
xor
outs
loopne
mov
dec
ret
pop
les
xchg
xor
inc
test
aaa
test
cmp
clc
lea
stos
jge
inc
dec
xchg
fdivr
dec
mov
push
push
sbb
pop
pop
test
pop
mov
or
push
stos
gs
mov
or
nop
(bad)
aaa
lods
pusha
call
test
mov
xor
add
xor
push
lea
mov
and
in
dec
jnp
iret
in
jb
movs
add
dec
sbb
imul
sbb
jmp
in
inc
leave
pop
push
cmp
cdq
add
adc
nop
in
xchg
test
pop
inc
mov
jne
jmp
lea
pop
xlat
or
lods
retf
in
in
in
lock
fs
sub
sub
ins
pushf
dec
hlt
clc
mov
and
mov
or
dec
and
je
mov
mov
jl
data16
sar
test
shl
dec
movs
test
call
cld
xor
or
xchg
enter
dec
imul
sub
pop
jl
nop
jne
xchg
jb
push
test
push
adc
int
hlt
sub
and
xchg
enter
lock
mov
adc
sub
icebp
xchg
jns
xchg
and
out
push
cmp
jno
es
inc
sbb
cdq
aaa
lods
outs
pop
in
sbb
mov
mov
mov
cmp
dec
add
mov
or
jge
cdq
shl
dec
sub
add
pop
pop
push
cmps
and
mov
fwait
add
jb
enter
pop
xchg
mov
or
pop
mov
clc
test
or
or
dec
sbb
addr16
add
adc
test
pop
mov
movs
shl
movs
mov
test
and
adc
ja
retf
mov
inc
add
pop
rol
nop
mov
sbb
mov
xchg
xchg
xor
pop
or
jp
add
add
xchg
or
and
enter
in
fsub
jl
and
loopne
cmp
cmps
sahf
lods
add
mov
xor
and
popa
add
xchg
sbb
addr16
lods
jno
in
xchg
(bad)
adc
ror
push
ss
cmp
icebp
je
sub
mov
inc
lock
xchg
cmp
call
scas
and
in
add
imul
shr
pop
or
les
add
and
and
mov
mov
mov
xchg
je
fs
and
push
mov
dec
retf
pop
cwde
adc
call
add
jo
shl
sub
movs
cmp
sub
push
jae
push
cmps
int3
and
mov
inc
sbb
repz
test
jae
mov
(bad)
jmp
or
movhps
sbb
cwde
add
pop
pop
and
iret
mov
push
push
xchg
cmps
or
jb
inc
add
lock
in
sbb
ret
adc
push
dec
inc
aas
push
leave
in
pop
cmp
dec
xchg
dec
out
test
dec
jmp
icebp
outs
lods
and
clc
push
xor
or
add
mov
stos
rcl
add
and
pop
inc
push
mov
je
xchg
and
into
mov
imul
mov
in
loopne
mov
lock
or
imul
sbb
xchg
and
xor
or
and
inc
rcl
mov
cmp
xlat
sub
or
dec
sub
and
shl
in
fstp
mov
mov
aas
and
cmp
loop
shr
and
pop
repnz
cmp
or
xor
push
(bad)
cmp
push
int3
push
lahf
adc
data16
jne
mov
les
inc
retf
adc
inc
fwait
retf
adc
inc
hlt
push
scas
sbb
inc
mov
cmps
jno
push
jnp
mov
jne
test
imul
lods
sbb
sub
or
xor
outs
pop
stc
and
pop
movs
popa
jl
fcomp
icebp
cmp
mov
mov
xchg
add
xchg
mov
inc
jl
xchg
test
pop
test
mov
movs
push
adc
sbb
xor
lods
clc
outs
movs
pop
dec
mov
or
pop
scas
rcl
inc
(bad)
cmp
dec
fld
sbb
sbb
pop
enter
mov
ret
(bad)
dec
push
out
and
mov
(bad)
adc
and
push
inc
les
jno
and
aam
xor
xor
call
inc
mov
stc
fcom
xor
mov
add
test
xor
pop
xchg
pop
push
movs
jl
xchg
test
movs
idiv
test
int3
inc
mov
dec
sbb
mov
add
or
sahf
icebp
loope
add
jbe
mov
test
pop
mov
leave
and
jbe
mov
cmp
inc
call
push
cmp
repz
popf
add
inc
and
and
xchg
out
ja
(bad)
xor
pop
pop
test
push
stc
inc
jne
ror
or
xlat
mov
push
dec
in
shl
xor
(bad)
jo
iret
call
lods
test
adc
lods
mov
fsub
pop
sub
scas
ins
xor
mov
fwait
ins
rcl
and
xchg
adc
sub
mov
or
and
bswap
popa
pop
add
cli
mov
loopne
dec
push
aas
jne
retf
fisttp
nop
clc
clc
inc
jge
pop
and
jne
shl
in
mov
and
inc
ins
jl
js
out
jmp
or
jbe
sub
inc
mov
xchg
loopne
push
and
cdq
push
mov
add
mov
ja
mov
daa
in
lock
imul
ds
dec
mov
push
leave
push
sub
mov
push
cmp
xor
in
ins
jno
lock
cwde
movs
ins
and
movs
dec
or
push
push
test
shl
inc
jp
ss
mov
test
retf
pop
stos
movs
out
push
cmps
xor
mov
dec
(bad)
movs
fwait
cmp
push
das
movs
mov
in
mov
jge
inc
add
pop
outs
mov
daa
or
xor
dec
sbb
je
or
cdq
mov
and
add
jmp
pop
or
and
in
jb
add
jo
adc
add
jo
fld
dec
mov
mov
push
pop
nop
mov
jne
add
push
xor
sbb
aam
adc
test
aad
inc
rol
push
dec
(bad)
or
idiv
jl
or
jle
cmp
popa
shl
loopne
sub
xor
mov
inc
sar
stos
jne
and
outs
and
fldcw
inc
add
mov
mov
pop
cwde
lea
push
retf
and
fs
cmp
jge
jne
inc
pop
gs
xchg
das
lock
xlat
ins
enter
scas
sub
aam
adc
jae
rcl
int3
add
inc
adc
ror
scas
lea
sbb
mov
cmc
xchg
mov
jne
mov
mov
and
dec
(bad)
test
jmp
adc
sub
sbb
retf
into
cdq
shl
cmc
sbb
call
xchg
mov
or
dec
cmp
bound
add
add
push
xchg
mov
xlat
mov
add
mov
jl
xor
pop
jb
and
and
mov
into
dec
lods
inc
and
xchg
sub
push
jno
pop
jne
test
jge
jae
xor
pop
mov
pop
pop
ror
sbb
stos
outs
popa
test
or
fdivr
lea
mov
mov
fs
test
lods
add
pop
mov
adc
mov
push
xchg
or
or
cmp
pop
mov
or
retf
loopne
ror
data16
push
fwait
and
push
shl
leave
add
sub
xchg
popa
lahf
test
and
pop
out
add
mov
sbb
pop
mov
pop
dec
or
push
mov
xchg
sub
hlt
popa
bound
sub
adc
jp
push
adc
push
ds
and
and
adc
and
scas
xor
cmp
lods
pusha
or
pop
add
cmps
adc
and
add
add
mov
and
push
les
inc
in
and
pop
adc
rcr
push
cld
pop
mov
repz
js
xchg
dec
dec
or
bound
dec
mov
nop
mov
lods
xchg
add
ficom
cmp
mov
cmps
std
mov
sbb
call
pop
test
(bad)
fsubr
xchg
jne
iret
sar
int3
add
stos
xchg
nop
lock
movs
mov
inc
pop
inc
mov
aam
call
inc
fcomp
xchg
mov
add
pop
popf
lods
push
cmp
push
sbb
pop
in
push
in
sahf
push
lea
pop
cmp
jp
dec
lods
aas
pop
pop
xchg
test
xor
orps
aas
lea
loope
adc
and
jno
xor
xor
jl
push
cmp
push
fild
lock
mov
jecxz
and
mov
sub
dec
ret
mov
add
fcmovbe
cwde
pusha
ret
pop
sbb
cli
pop
ret
or
inc
nop
adc
jae
test
mov
lock
jo
add
pop
nop
retf
push
in
ins
add
ret
push
gs
inc
dec
xchg
push
sar
bound
mov
ins
fs
stos
lock
adc
ds
shr
sub
push
or
clc
push
nop
and
add
adc
jge
out
lock
add
por
pusha
push
xor
push
jbe
push
repz
(bad)
adc
xor
lock
arpl
jno
jae
sahf
pop
push
xor
inc
jns
sub
cwde
pop
shl
mov
jae
mov
in
call
lds
cmc
cwde
out
lds
xor
int3
(bad)
bound
jmp
push
sbb
adc
pop
loopne
push
adc
pop
es
aaa
push
push
pop
dec
and
push
xor
cdq
cmp
test
loopne
mov
dec
gs
or
jnp
xchg
(bad)
mov
xchg
dec
sahf
js
vmread
fyl2xp1
lods
inc
jns
lock
mov
and
pop
sub
jae
inc
mov
lds
adc
mov
mov
iret
pop
mov
push
arpl
mov
aas
adc
jns
push
add
clc
fadd
inc
pop
dec
rcl
mov
dec
(bad)
mov
sub
pop
int3
or
in
call
fmul
pop
adc
add
mov
add
pop
cmp
xchg
mov
inc
pop
retf
add
xchg
jo
jne
push
cmp
inc
cmp
pop
pop
test
and
pop
lds
sbb
es
jae
loop
or
cmp
scas
out
and
adc
mov
adc
mov
add
inc
cmp
fist
je
cmp
fucomp
inc
add
or
cmps
dec
ins
ret
jmp
loop
sti
dec
mov
jb
jmp
push
test
aam
sub
adc
or
xchg
adc
push
dec
mov
mov
sub
adc
cdq
movs
mov
xchg
and
setbe
dec
mov
inc
cli
lahf
test
xor
xor
(bad)
pop
call
and
mov
mov
jnp
adc
mov
int
push
inc
inc
rcr
jae
das
push
jl
in
js
loope
lods
aam
adc
adc
in
popa
cmp
pop
add
lahf
add
inc
xchg
ss
cmp
push
or
daa
std
ins
push
inc
inc
adc
fmul
sub
mov
or
or
pop
outs
rcl
lock
adc
cmp
nop
clc
inc
sbb
xor
and
xchg
or
inc
jg
sbb
adc
in
mov
mov
mov
nop
sbb
shr
push
jne
and
call
addr16
cmp
or
jmp
jbe
sub
and
jmp
sub
arpl
push
popf
(bad)
mov
adc
(bad)
mov
icebp
test
mov
or
add
sbb
mov
mov
int
stos
and
or
dec
jmp
repz
add
sbb
fwait
xchg
and
or
dec
sbb
cmp
repz
rcr
enter
jl
push
scas
pop
pop
xchg
xor
nop
adc
add
jle
push
test
adc
in
push
sbb
stc
dec
fadd
aaa
movs
push
icebp
push
pop
jb
fld
in
xchg
into
loop
xor
inc
loopne
mov
int
push
adc
data16
xor
loope
leave
cmp
and
push
cmps
retf
add
rcr
or
xchg
adc
int3
pop
push
mov
mov
lods
movs
lods
add
xchg
xor
dec
sub
add
(bad)
outs
or
sbb
push
push
adc
cmp
push
or
push
pop
xor
scas
mov
ins
lock
cdq
jns
test
cmp
jp
out
mov
pop
xchg
(bad)
cld
mov
cli
mov
and
fwait
and
imul
push
jae
sbb
imul
pop
enter
add
jge
mov
xor
mov
dec
inc
imul
cmp
dec
ins
pop
adc
lock
mov
ret
push
pop
adc
pop
xchg
or
and
lea
fdivr
xor
add
popf
adc
outs
jge
scas
adc
push
mov
xchg
pushf
cmp
dec
and
stos
ss
loop
sbb
or
clc
cmp
jge
ror
adc
sub
jne
data16
test
je
or
js
mov
daa
daa
add
je
inc
mov
call
ins
add
icebp
xchg
xchg
test
mov
or
add
imul
inc
ja
fcom
fbstp
fdiv
imul
mov
retf
or
and
inc
ds
rol
or
jp
je
je
pop
or
or
in
jo
or
sub
rol
sbb
dec
bound
mov
mov
test
dec
and
sub
les
mov
sub
out
mov
inc
aam
or
mov
sbb
push
movs
movs
movs
lds
add
jns
inc
sahf
xchg
call
adc
push
or
pop
mov
mov
sbb
es
push
cmp
or
pop
inc
push
arpl
es
dec
or
jns
add
shr
dec
add
jmp
or
rcr
or
es
ins
inc
add
push
iret
fmulp
repnz
das
sti
loope
fs
pop
xor
outs
and
push
push
lods
jmp
add
sub
or
out
inc
sub
rol
sub
dec
xor
push
and
sub
fstp
push
test
add
dec
sub
outs
mov
or
lods
inc
adc
js
sub
pop
add
xchg
out
sbb
add
aaa
xchg
adc
cs
pop
mov
pop
ret
fisttp
retf
or
loopne
jae
inc
add
aad
mov
test
pop
or
jne
aad
fadd
push
xchg
lods
les
les
sub
(bad)
call
aam
lea
rcr
js
sub
js
add
jne
enter
and
add
pop
mov
add
sbb
sbb
cmps
ror
dec
sub
xchg
or
push
cdq
movs
retf
js
adc
iret
iret
add
shr
daa
inc
cmp
sbb
dec
jp
repz
add
jge
hlt
xor
and
daa
pop
push
mov
aam
xor
xor
retf
adc
stos
xor
push
sbb
fwait
daa
pop
pop
je
popf
adc
and
add
dec
movs
push
add
std
sar
add
dec
leave
test
or
push
add
bound
icebp
mov
jmp
(bad)
adc
sar
adc
(bad)
icebp
imul
mov
adc
mov
pop
push
imul
pushf
push
out
stos
pop
mov
xchg
add
xor
movs
rcl
rcr
cmps
fstp
mov
loopne
loope
mov
mov
add
inc
dec
xor
(bad)
push
xor
bound
push
movs
jmp
frstor
push
push
mov
je
xor
jb
mov
xchg
xchg
mov
jmp
(bad)
mov
xchg
xor
bound
and
mov
(bad)
nop
adc
xchg
adc
movs
jmp
fild
cdq
push
std
std
xor
adc
inc
mov
add
dec
jmp
scas
and
add
dec
jmp
xor
fld
shl
jo
retf
inc
gs
in
mov
push
nop
dec
lock
jmp
and
ds
in
adc
mov
dec
and
adc
ja
inc
or
stos
or
and
mov
cmp
or
adc
int
dec
push
pop
arpl
add
mov
or
hlt
push
xor
jp
lahf
dec
push
xchg
ror
add
and
gs
mov
sub
sub
bound
movs
or
adc
xor
test
xchg
aad
push
push
call
gs
add
rcl
(bad)
push
pop
int3
repz
add
mov
sbb
data16
div
pop
(bad)
push
and
adc
add
rcl
mov
sti
add
ins
popa
mov
push
aaa
pop
js
aam
out
(bad)
call
sbb
add
retf
stos
ror
lea
cmp
inc
cmc
es
shr
xchg
xchg
adc
sbb
dec
mov
xchg
cmp
pusha
cld
mov
mov
and
aaa
shl
addr16
push
push
push
inc
xlat
loop
jg
sbb
sub
fnstenv
enter
sar
xor
push
mov
sub
pop
movs
sbb
add
ror
and
mov
fcomp
enter
or
xlat
imul
les
inc
fs
clc
mov
add
xor
xor
ret
shr
mov
lock
lea
je
push
sub
mov
add
jle
add
push
push
rcl
adc
test
jl
stc
push
pop
xor
je
inc
dec
enter
adc
inc
jae
(bad)
hlt
jp
sub
dec
sbb
popf
sbb
jl
clc
sbb
jmp
pop
add
sbb
fadd
sbb
sub
mov
sub
jecxz
and
or
imul
and
adc
or
cdq
popa
sub
add
mov
mov
repz
dec
xchg
mov
mov
dec
xor
xor
cwde
cwde
outs
xchg
inc
pop
in
xor
push
xor
rsqrtps
or
shl
sub
xchg
dec
fld
lea
push
mov
sbb
and
pop
or
jmp
pop
shr
(bad)
in
push
push
test
xchg
lock
movs
xor
xor
push
add
ja
pop
mov
faddp
test
adc
push
pop
in
xchg
xor
popf
les
xchg
dec
sbb
dec
jae
pop
dec
lods
mov
push
sbb
adc
xchg
mov
jns
pop
shl
add
ror
in
dec
adc
inc
cmp
inc
inc
clc
test
mov
xchg
aas
adc
jg
(bad)
xor
inc
data16
adc
pop
and
sub
pop
dec
and
dec
add
xor
xchg
retf
in
gs
imul
and
push
push
fild
inc
push
xchg
pop
mov
lods
add
push
lea
mov
enter
ins
push
push
mov
ret
enter
sub
iret
ret
mov
and
stos
ds
test
jne
outs
fisubr
es
sbb
bound
jl
and
sub
ins
or
sub
jge
mov
mov
imul
imul
push
ds
lahf
data16
or
ret
and
cld
xchg
lods
or
pop
push
and
sbb
ins
rol
rol
leave
mov
push
sub
sar
cmp
adc
sbb
fidiv
jo
daa
cmp
js
sbb
inc
sub
xchg
jmp
clc
adc
lods
xchg
jge
pop
xchg
sbb
lea
pop
dec
mov
lea
or
mov
xor
retf
addr16
xor
push
imul
adc
jne
or
mov
sub
arpl
adc
les
inc
add
add
cdq
ja
inc
call
add
std
cmp
adc
xchg
inc
scas
sbb
inc
sub
adc
jb
retf
and
add
or
sub
adc
push
dec
sbb
jp
(bad)
adc
lods
pop
fld
lock
adc
push
je
mov
push
sub
imul
add
ins
inc
push
push
pop
mov
and
stos
or
jo
adc
and
add
aam
mov
mov
inc
sbb
inc
or
add
xor
add
inc
stos
and
and
push
xchg
push
push
xor
aaa
call
xchg
daa
loopne
jp
in
std
mov
or
imul
inc
sar
add
push
add
dec
pop
sbb
loopne
not
shl
lods
mov
push
or
push
or
push
ret
popf
add
jp
inc
out
push
adc
out
xorps
push
jmp
into
sbb
stos
daa
lock
sbb
sbb
lock
jge
loope
mov
cld
scas
cmp
dec
std
or
adc
mov
je
out
cmps
cmp
test
inc
test
std
mov
test
adc
push
add
sub
ret
cmp
cmp
jmp
mov
inc
or
xchg
int3
push
push
mov
xor
and
jnp
daa
dec
in
(bad)
jmp
pop
repnz
mov
mov
add
pushf
test
mov
pop
adc
xor
lock
pop
adc
inc
call
movs
adc
outs
aaa
lods
lock
inc
and
mov
sub
xchg
xchg
pop
xchg
dec
lock
cmp
add
js
add
or
cdq
(bad)
pop
add
inc
add
cli
fcmovb
jne
cdq
xor
mov
jo
xchg
jg
dec
push
sub
pop
add
mov
outs
pop
shl
xor
sbb
mov
sub
mov
dec
shr
sub
rol
outs
inc
mov
mov
inc
retf
mov
repz
sub
ret
mov
sbb
test
sub
add
and
out
push
scas
and
(bad)
arpl
pop
rcl
add
adc
push
fs
repz
push
add
aas
cli
fimul
sbb
imul
mov
dec
or
mov
test
lock
and
fild
ins
add
cmps
add
ss
mov
cmp
jmp
rol
pop
mov
mov
and
adc
cdq
inc
sbb
mov
arpl
into
add
test
test
fstp
test
imul
add
push
or
adc
popa
add
or
jb
out
or
sub
cmp
xchg
dec
nop
je
xchg
dec
(bad)
push
cmps
sub
adc
stos
mov
pop
loopne
add
or
push
or
xchg
sub
inc
imul
dec
mov
ret
test
add
or
or
push
dec
adc
jb
pop
das
cdq
pushf
in
cmp
jne
movs
and
in
add
loopne
xchg
inc
adc
add
push
and
push
repnz
sub
daa
xor
xchg
dec
pop
mov
add
add
popa
pop
adc
add
push
add
or
push
or
inc
fwait
jae
mov
push
cmps
mov
ja
mov
fild
sbb
or
or
test
aam
(bad)
adc
imul
lods
cmps
xchg
mov
sbb
cmps
mov
jge
sbb
mov
mov
add
sub
in
push
leave
les
test
jg
jnp
fsub
cmp
dec
sub
inc
xor
push
push
inc
dec
sar
inc
dec
cmp
jl
test
outs
or
mov
loopne
push
add
xchg
fstp
jae
daa
cdq
push
or
cmp
test
mov
and
ret
ror
adc
outs
push
xchg
adc
ret
gs
xor
jae
jno
loope
aad
sub
and
inc
jg
mov
je
push
sbb
push
and
sub
pop
inc
in
xchg
inc
test
sbb
mov
mov
add
cmp
enter
sahf
sahf
add
bound
aaa
cld
js
push
mov
or
rol
xor
retf
add
stc
push
push
push
add
test
pop
pop
out
bound
add
lods
adc
push
cdq
add
ret
jb
push
cld
dec
xor
scas
std
mov
adc
lods
or
jmp
cmps
mov
lods
pop
xor
mov
mov
mov
sub
cmps
xchg
pop
pop
mov
mov
mov
cdq
fiadd
adc
or
ja
arpl
aaa
ds
adc
sub
add
and
cmp
inc
pop
jae
sar
lods
push
and
cld
loope
retf
(bad)
mov
add
or
push
dec
ins
xchg
bound
movaps
jp
ja
dec
rcpps
fadd
cmp
rol
and
mov
push
inc
mov
adc
cdq
add
cmps
or
(bad)
in
sahf
fwait
popf
cmp
jne
std
bound
mov
pusha
push
fs
jb
push
cdq
push
jno
arpl
adc
add
les
repnz
imul
out
jp
mov
pop
rdmsr
adc
cmp
inc
out
dec
lds
and
sub
ja
pop
or
into
xchg
pop
ret
cmp
cmp
test
int
add
jmp
pop
aam
call
clc
dec
inc
xchg
xchg
add
or
mov
add
fcomp
cmps
mov
sbb
pop
sti
sub
ins
push
sbb
lea
cmp
or
jmp
xchg
and
push
in
mov
push
iret
sbb
or
psadbw
ss
cmp
jne
cs
sbb
out
add
fld
cmp
mov
cli
fiadd
jge
retf
xor
inc
jmp
test
and
ja
loope
mov
or
inc
push
sub
xchg
add
mov
call
loopne
arpl
fisub
xchg
add
cmp
jmp
jns
or
and
xor
mov
int3
mov
movs
lock
xchg
mov
daa
mov
or
cmps
or
and
jo
xchg
mov
js
mov
stos
sbb
sbb
data16
les
lods
adc
fimul
stos
ret
push
(bad)
enter
mov
mov
cmc
adc
sbb
mov
add
bound
mov
imul
xchg
sbb
add
(bad)
xchg
nop
fild
mov
lea
pop
sbb
or
mov
ret
js
dec
fmul
push
in
xor
add
(bad)
push
ret
jae
sbb
rcr
pusha
or
push
cmp
add
dec
into
add
test
fwait
add
pop
push
xor
xor
xor
sbb
mov
cmp
cld
test
adc
adc
mov
and
adc
push
mov
xor
ret
xchg
pop
(bad)
and
movs
into
ret
xor
or
mov
xor
xlat
add
ins
adc
gs
lock
add
sbb
jno
pop
jno
enter
jmp
(bad)
push
dec
shr
enter
jbe
popa
sahf
push
inc
push
and
mov
cmp
xchg
and
mov
push
out
lods
retf
sbb
pushf
jo
cmp
and
(bad)
mov
popf
mov
mov
push
or
dec
mov
aam
xchg
in
jb
push
xor
cmps
or
inc
sbb
lock
push
xchg
jle
add
add
xchg
cmp
mov
adc
adc
ja
cmp
inc
in
hlt
rol
jp
fcom
inc
pop
push
xor
aad
lds
or
aaa
xor
jg
xchg
push
mov
adc
inc
dec
mov
and
jmp
jb
cli
call
test
inc
sbb
pusha
push
es
in
push
pop
pop
add
xchg
out
sub
push
sub
jmp
pop
xchg
inc
les
(bad)
jne
js
push
mov
fwait
stc
je
loopne
mov
das
mov
jle
jmp
cmc
add
pop
push
fimul
and
(bad)
cs
dec
inc
stos
sbb
ds
or
test
or
fs
dec
mov
ficomp
inc
popa
adc
and
mov
dec
jno
inc
xchg
and
test
xchg
add
xchg
hlt
je
adc
push
mov
ror
rcr
mov
mov
fnstsw
loope
(bad)
sbb
xchg
pop
xor
adc
loopne
adc
cmp
imul
xchg
and
cli
(bad)
pop
pop
push
pop
or
sbb
outs
jle
or
lock
pop
sbb
ret
add
xor
and
jne
pop
mov
xchg
pop
cli
sub
or
inc
rol
ins
add
test
leave
push
and
xor
xchg
push
enter
mov
mul
add
xchg
pop
ins
xchg
xchg
or
inc
inc
jo
or
adc
mov
sbb
(bad)
xor
cmp
mov
add
or
push
push
(bad)
mov
mov
fwait
and
fist
cmp
push
sub
mov
lods
sbb
mov
sub
les
push
mov
inc
popf
sub
rcr
retf
sub
test
push
lods
push
fld
or
sbb
imul
adc
or
mov
std
bound
scas
sbb
test
in
cmp
jns
mov
or
xor
push
xor
sub
movs
daa
hlt
dec
mov
adc
xor
push
or
sbb
call
sub
push
inc
add
dec
ret
sub
sbb
or
int
or
shl
mov
cmps
jae
or
ret
sub
lods
jmp
xor
ss
push
shl
sub
ret
or
mov
mov
sbb
sub
pop
ret
sbb
sub
(bad)
popf
lock
loop
xor
jmp
push
mov
mov
add
rcr
test
jp
mov
and
ret
out
cmps
xchg
push
sbb
out
pop
cmp
rol
bound
iret
jmp
mov
fsubr
adc
bound
push
loopne
fsubr
fdivr
or
jge
jne
adc
imul
int3
hlt
mov
cmp
pop
mov
push
bound
call
and
cmp
inc
add
dec
pop
and
aad
shr
(bad)
retf
in
or
push
rcl
mov
dec
push
push
sar
dec
test
adc
push
dec
into
lods
sub
pop
and
mov
imul
retf
dec
call
bound
cmp
jne
neg
cld
jmp
adc
pop
adc
cmp
add
xor
in
or
nop
or
cld
test
dec
loopne
(bad)
dec
adc
gs
pusha
je
imul
dec
shl
lock
rcl
and
sub
dec
sub
ss
fmul
sbb
pop
add
mov
mov
xchg
mov
pop
ret
xchg
add
movs
adc
jmp
adc
ins
dec
sbb
xchg
out
or
dec
jbe
inc
sbb
sahf
pop
xchg
cmp
adc
mov
jno
push
imul
aas
retf
lock
(bad)
sti
ror
rcl
cmc
sub
jne
mov
jmp
mov
mov
rol
cmp
push
loope
mov
movs
mov
(bad)
jg
pop
cmps
adc
jne
mov
sbb
inc
sub
mov
xor
imul
jl
push
pop
and
jne
jl
push
inc
or
(bad)
push
sbb
or
jmp
adc
ror
shl
jmp
mov
mov
adc
xor
dec
mov
ret
aam
lods
inc
push
lods
xchg
movs
ret
ds
mov
mov
into
mov
icebp
(bad)
cdq
fwait
call
outs
adc
sbb
mov
jo
xor
les
in
adc
test
shl
lock
xchg
fcomp
xor
add
sbb
add
mov
push
in
int3
dec
fcom
daa
mov
push
sub
mov
add
pop
sbb
push
(bad)
jl
les
add
sub
(bad)
jne
cmp
es
fadd
jle
lds
rol
adc
test
adc
out
or
pop
shl
push
sar
into
xor
adc
push
xlat
and
or
jp
push
fmulp
or
add
cdq
neg
stos
adc
or
adc
fcom
add
adc
or
gs
je
xor
or
je
pop
sub
xchg
adc
shr
or
or
mov
ror
test
loopne
jmp
cwde
ror
add
xchg
push
pop
pop
lods
mov
cmps
ret
and
cs
xchg
aad
in
sbb
test
in
or
xor
push
push
push
dec
not
push
out
and
inc
or
mov
addr16
cmp
call
and
jae
push
fidiv
push
mov
xchg
fs
dec
add
inc
add
sbb
lods
inc
add
mov
push
jo
imul
inc
jne
imul
pop
or
pop
dec
mov
cmp
push
and
pop
xchg
sbb
or
pop
adc
push
(bad)
stos
stos
push
ret
or
or
dec
call
jg
add
adc
int3
sbb
mov
pop
or
push
jp
cmp
shr
sbb
daa
rol
jbe
imul
lahf
(bad)
push
fdivr
or
imul
sub
fsub
pusha
shr
leave
adc
add
cmp
adc
adc
jns
mov
pop
ror
inc
pop
pop
push
fdivr
inc
es
push
inc
int
dec
(bad)
out
cmp
sete
lea
les
pop
or
add
adc
xchg
push
les
mov
xchg
inc
sub
dec
loope
iret
push
movs
pop
xchg
pop
xor
mov
mov
jle
jb
sub
jae
push
and
sub
js
mov
jo
pop
pop
or
ins
jne
jge
push
and
into
and
cmp
lock
es
push
sbb
mov
xchg
jne
xchg
test
and
dec
push
call
or
mov
mov
sub
adc
cmp
je
or
add
inc
ins
arpl
loop
ret
fbld
adc
push
and
lea
inc
lock
jne
clc
movs
add
push
hlt
jl
inc
sbb
arpl
jo
fbstp
push
jmp
mov
clc
sub
adc
xchg
or
jge
jmp
outs
test
icebp
push
iret
mov
and
in
lods
pop
inc
xor
ins
add
jecxz
dec
fucomip
enter
out
push
shl
sti
(bad)
mov
loop
lea
inc
push
push
lods
nop
call
adc
test
add
mov
lods
mov
push
js
add
xchg
inc
or
aam
test
ds
ror
or
cmp
push
test
adc
mov
leave
mov
inc
sub
test
dec
je
fst
pop
xchg
fwait
adc
jnp
add
cmc
pop
movs
add
(bad)
cwde
ss
push
push
mov
nop
dec
and
push
dec
mov
xor
das
aad
sub
imul
stos
pop
cmp
push
xchg
push
pop
mov
cmp
imul
push
sbb
adc
pop
xchg
xchg
sbb
fwait
push
push
cmp
int
push
add
inc
int3
inc
and
jp
jle
push
std
push
jmp
mov
imul
add
inc
xor
int3
inc
lock
xor
push
ret
sub
inc
push
dec
call
adc
movs
mov
fs
fcom
jg
fstp
(bad)
add
push
push
sahf
inc
(bad)
xor
pop
inc
add
add
mov
or
mov
add
rep
add
mov
or
dec
add
and
out
adc
sti
jmp
and
stos
popf
in
adc
fild
push
jmp
out
fist
in
push
mov
add
out
fsub
jbe
push
stos
xchg
jns
movs
add
sub
jg
fidiv
sub
mov
sbb
add
and
push
fnop
add
dec
jmp
(bad)
hlt
cmp
dec
dec
imul
hlt
jle
add
mov
cmp
in
xor
ins
pop
mov
adc
cmp
fsubr
jle
add
add
and
or
(bad)
mov
sbb
pop
xor
add
leave
mov
xor
pop
icebp
inc
adc
add
pop
jp
jmp
and
cs
mov
int3
fadd
sbb
fild
or
xchg
int3
xor
cmp
adc
inc
mov
pop
fwait
mov
ss
jmp
inc
sub
sub
test
imul
sbb
or
sub
xchg
add
jecxz
push
mov
inc
frstor
inc
imul
push
xlat
push
ror
cmps
int
sbb
cwd
repz
push
lods
sub
jbe
loope
lods
stos
sub
or
ret
add
sbb
dec
add
push
aam
cmp
pop
rcl
pusha
nop
imul
xchg
mov
xor
sbb
mov
scas
cs
mov
inc
add
xor
scas
cmp
rol
scas
dec
push
les
sbb
rcl
pop
sbb
(bad)
dec
mov
aaa
or
xor
ret
add
repnz
lods
in
fadd
and
(bad)
or
push
rol
mov
mov
push
ss
push
inc
cwde
ret
push
cli
mov
ins
outs
pop
pop
push
add
and
lock
adc
es
or
pusha
xchg
xor
inc
lock
and
pop
adc
stos
xor
fild
xchg
dec
push
cmp
mov
rol
inc
add
pop
test
xor
jbe
sub
shl
add
enter
adc
sub
aam
xor
cmp
push
test
and
imul
pop
jmp
out
inc
popa
sbb
push
ds
inc
sbb
xor
adc
into
shl
je
es
mov
jns
push
mov
push
inc
add
xor
sub
aas
or
sub
adc
inc
fistp
lahf
ja
jle
lea
ins
aad
cmps
push
inc
push
push
jae
clc
inc
pop
inc
or
xchg
push
sahf
or
pop
adc
push
ins
mov
push
push
xchg
xchg
jle
inc
xchg
test
mov
dec
sbb
cmp
inc
icebp
test
je
bound
fdiv
push
nop
inc
xor
mov
sbb
in
enter
out
mov
lock
jo
daa
popf
fpatan
fdiv
inc
retf
in
adc
adc
cmc
pop
popa
pop
pop
sub
scas
cmp
adc
ret
dec
ficom
sar
or
dec
not
leave
pop
adc
mov
cmp
and
push
movs
add
and
add
mov
cmp
adc
in
dec
pop
xor
pop
add
clc
adc
ds
inc
aad
jo
in
sar
cmp
outs
and
xor
jmp
dec
sar
push
clc
test
(bad)
or
les
sbb
inc
sub
inc
test
dec
jo
cld
sub
adc
int3
test
fs
xchg
jl
test
mov
add
cli
fisttp
xchg
movs
dec
cmp
add
sub
ins
test
in
fist
icebp
jle
add
add
jne
adc
pop
adc
adc
in
xor
pop
inc
mov
push
ins
xor
mov
loopne
enter
in
add
add
pusha
xor
aas
and
inc
call
mov
cwde
je
and
jb
xchg
aaa
mov
dec
or
push
in
jmp
mov
cmp
push
popa
int3
sub
xchg
cmc
mov
add
test
dec
add
pand
and
call
int3
cmp
add
nop
xchg
adc
sbb
je
rcr
ret
mov
lods
inc
fadd
or
cld
pop
mov
inc
xchg
or
xchg
mov
jl
loop
cmp
adc
add
sub
test
cmp
out
xchg
and
js
dec
test
mov
daa
(bad)
mov
mov
pop
sbb
out
mov
mov
lds
test
mov
or
(bad)
push
add
gs
popf
cmp
mov
f2xm1
(bad)
lods
add
and
pop
adc
out
mov
ss
add
(bad)
nop
popf
and
in
cmp
xor
add
push
retf
or
jb
inc
neg
cmps
add
fstp
inc
or
or
popa
lods
mov
sar
inc
test
push
jg
js
adc
xor
mov
popa
push
sub
retf
sub
pusha
mov
pop
ds
int3
imul
lock
jge
mov
sbb
add
mov
addr16
outs
movs
dec
and
xchg
mov
ins
add
cwde
dec
call
xor
push
loope
in
pop
xchg
js
mov
(bad)
call
fsubr
jg
in
sub
push
mov
jge
mov
xor
or
lods
xchg
pop
in
mov
aaa
mov
and
inc
xor
or
and
pop
xor
dec
call
addr16
dec
mov
or
push
inc
shr
lods
movs
jns
inc
sbb
call
and
in
mov
ret
mov
add
pop
mov
sahf
repnz
xchg
sub
add
inc
pusha
or
test
mov
dec
sbb
jne
push
xor
mov
loop
fs
in
lods
popf
ret
retf
jg
ret
or
jo
mov
test
mov
cmp
mov
ins
lea
adc
imul
sbb
test
out
xchg
loop
ret
lock
push
add
shl
cmc
ror
cmp
pusha
cwde
(bad)
call
aam
daa
push
xlat
bound
adc
shl
jne
xchg
pop
jae
enter
loopne
mul
sar
mov
jp
and
sar
in
(bad)
cld
push
loopne
pop
push
xchg
lock
push
mov
mov
into
push
test
cwde
inc
adc
adc
test
xor
movs
add
inc
test
xchg
add
sbb
xchg
jns
mov
mov
outs
push
push
xor
jle
hlt
daa
int
add
cs
lock
mov
ds
push
or
clc
jle
push
push
push
mov
ins
outs
add
or
adc
push
out
jns
and
sbb
pop
adc
mov
mul
retf
pop
ja
xchg
and
add
adc
dec
adc
or
add
jle
cmp
sar
push
je
pop
fidiv
push
pusha
mov
xchg
mov
sahf
lea
inc
pop
jmp
(bad)
or
stos
adc
mov
adc
or
sbb
shl
cmp
sub
mov
mov
ins
adc
addr16
call
cmp
dec
mov
jl
(bad)
push
stos
mov
retf
lea
(bad)
jo
stos
xor
out
xor
xchg
cmp
inc
mov
sub
neg
inc
sub
pop
add
push
mov
scas
int
pshufw
(bad)
sub
(bad)
fldenv
push
test
or
test
jo
mov
nop
sub
jnp
mov
call
arpl
in
(bad)
es
mov
push
movs
add
cmp
mov
test
lods
adc
or
jle
retf
adc
cmp
push
xor
sub
fidiv
clc
dec
jne
sbb
fmul
cwde
retf
loopne
into
lahf
xor
retf
mov
lea
ins
ret
mov
stc
xor
sbb
addr16
pop
mov
(bad)
imul
add
mov
jl
or
jae
pop
add
pcmpgtb
push
mov
lods
aaa
enter
inc
push
add
mov
mov
and
clc
ja
inc
mov
push
mov
mov
xor
jg
mov
fidiv
inc
push
mov
fs
mov
inc
test
push
mov
imul
push
icebp
mov
lahf
(bad)
mov
jle
jmp
xchg
add
mov
and
jmp
xchg
cmp
push
std
push
jne
sub
xchg
jl
jl
ss
arpl
mov
jge
mov
dec
pop
movs
in
loop
xor
adc
sbb
adc
add
enter
movs
sbb
inc
iret
sub
dec
dec
dec
mov
add
iret
push
fs
sbb
and
outs
and
jae
cmps
push
mov
adc
or
cmp
mov
xor
and
pop
fwait
sbb
mov
jmp
adc
test
scas
pop
ret
dec
clc
add
xchg
imul
push
jmp
iret
xlat
cmp
or
or
and
jecxz
mov
lods
repnz
inc
test
cmp
shr
vorpd
sub
fisttp
push
xor
xchg
mov
sbb
or
xor
mov
out
add
push
mov
push
mov
aaa
xor
add
cmovno
mov
imul
sar
inc
jmp
leave
das
sub
xor
shl
inc
adc
xchg
push
pop
jmp
jb
sub
retf
btc
push
jecxz
mov
mov
adc
xor
out
mov
or
pop
pop
outs
add
int3
js
dec
jmp
sbb
sbb
push
stc
mov
sbb
add
std
pop
and
push
lods
retf
pop
mov
pop
scas
icebp
push
pop
mov
sbb
or
cmp
dec
and
mov
test
jne
imul
jmp
inc
jne
add
call
inc
mov
add
dec
mov
jne
call
mov
push
clts
imul
cmp
aam
inc
inc
inc
xchg
cmc
adc
loope
sub
leave
cmp
adc
mov
or
rol
push
sbb
and
bound
dec
int3
mov
or
push
rcr
pop
js
xor
adc
xor
nop
or
jl
or
xor
pop
(bad)
cdq
pop
(bad)
outs
imul
sub
push
inc
inc
adc
aam
arpl
adc
test
ret
jnp
pop
stos
mov
out
add
xchg
mov
push
mov
and
push
dec
inc
jmp
sub
ret
scas
jmp
or
cmp
pusha
pusha
pop
sub
adc
sub
ret
push
dec
leave
movs
mov
test
xchg
dec
in
ret
dec
dec
cli
cmp
icebp
aam
push
popa
mov
mov
sbb
add
pop
in
(bad)
push
rol
or
sar
ret
enter
cmp
inc
and
add
xor
cli
popa
adc
sbb
clc
mov
jb
loop
ror
inc
adc
into
(bad)
adc
and
add
fst
pop
adc
inc
add
cdq
cdq
lea
div
test
mov
aam
dec
xchg
fcmovnb
inc
and
sub
mov
jbe
push
push
mov
pusha
gs
jp
movs
xchg
sub
lea
jbe
pop
rcl
mov
and
fcmovb
lds
push
pop
or
push
add
or
add
push
(bad)
pushf
sahf
jge
push
xor
iret
add
xor
cmc
lods
adc
dec
mov
out
push
ret
pop
inc
mov
popa
loopne
sbb
push
cmp
push
sbb
retf
setg
ds
cmp
inc
call
call
gs
lods
mov
cmc
inc
jmp
mov
mov
in
stos
sub
pusha
xor
add
xchg
cmp
push
add
jmp
fdiv
push
(bad)
cli
or
ffree
add
repnz
fild
cmps
dec
add
ret
jns
or
imul
sub
pop
xor
xor
aam
add
inc
adc
jp
(bad)
jmp
sub
pushf
mov
shl
inc
pop
in
in
mov
movq
sub
push
paddsb
push
dec
ja
cmp
popa
push
cwde
dec
pusha
and
sub
adc
or
add
xor
adc
scas
sub
mov
cmp
or
add
in
rcl
and
push
adc
or
push
add
ins
lods
jg
xor
out
pop
mov
pop
or
imul
pop
ret
leave
sub
fdiv
mov
test
ror
call
mov
popa
nop
adc
clc
aas
(bad)
ror
add
mov
dec
(bad)
int
fnstcw
add
lahf
jb
sbb
cmps
js
sub
ror
xor
ret
sbb
and
icebp
xor
jecxz
mov
retf
fnop
inc
or
inc
jne
pop
or
jle
and
adc
ret
cs
adc
xor
inc
push
imul
pusha
mov
jmp
push
push
cdq
jbe
ins
ja
sub
(bad)
neg
sbb
xchg
xchg
push
push
aaa
and
fmul
pop
or
mov
fidivr
les
iret
fmul
sub
jns
mov
adc
call
mov
xchg
retf
xor
mov
rcr
sub
add
or
fmul
or
(bad)
xchg
clc
popa
and
inc
push
sbb
ins
arpl
inc
dec
adc
jne
push
sbb
dec
or
jp
pop
leave
sub
pusha
push
or
sbb
inc
sub
jecxz
loope
(bad)
mov
pop
mov
or
sbb
adc
xor
jne
sub
xor
inc
pop
mov
or
add
fwait
icebp
or
test
cld
mov
pop
cmp
xor
punpckhdq
or
(bad)
mov
iret
lea
adc
sbb
push
retf
sub
cdq
call
shr
jg
push
sbb
cmp
xor
add
adc
sbb
dec
(bad)
xor
hlt
dec
aaa
mov
push
call
cmp
and
add
in
dec
in
sbb
(bad)
mov
mov
lea
mov
add
scas
push
sbb
and
fdiv
addr16
mov
xchg
push
xor
add
outs
dec
and
mov
int3
inc
add
nop
sub
cmp
popa
dec
push
or
push
sahf
pop
popa
aas
sub
mov
jp
lea
and
ins
mov
nop
adc
jno
and
mov
cmp
push
into
pop
aam
dec
ror
shl
fild
ror
adc
iret
cmp
push
add
sar
repnz
clc
add
rcl
js
rcr
movs
xor
push
cmp
and
and
pop
add
and
pop
clc
fadd
popa
int
xchg
pop
cmp
shr
popa
dec
rol
(bad)
outs
add
dec
jp
std
mov
jle
push
pop
cmc
xor
or
push
push
xchg
mov
and
ins
sbb
imul
fdiv
and
and
test
in
cli
popa
enter
mov
adc
data16
xor
add
test
nop
push
dec
mov
dec
enter
aad
inc
jmp
inc
neg
or
aam
inc
inc
pop
xchg
(bad)
call
add
push
mov
sub
or
mov
xor
sbb
test
adc
mov
sub
and
sub
adc
outs
jg
movs
mov
xlat
pop
adc
sbb
fist
fisub
in
(bad)
mov
lock
dec
cmp
xor
pop
xor
test
nop
sahf
test
test
xor
jne
retf
inc
ret
rcr
int3
push
fistp
cmp
out
mov
fmul
jge
or
add
gs
and
adc
add
push
lea
cmp
jle
jle
imul
push
cmp
adc
les
pop
jne
cs
pusha
jnp
cmp
jl
pop
aas
add
add
ja
xor
clc
out
or
shl
jae
sahf
xor
test
pop
lea
jmp
push
ins
or
push
lahf
je
inc
fild
cmp
jmp
cmp
dec
mov
adc
out
add
mov
rep
push
add
jo
(bad)
fucomip
and
mov
push
or
les
mov
or
dec
inc
idiv
add
pop
ret
shr
adc
je
shr
pusha
dec
sbb
shr
push
push
scas
push
add
dec
scas
ret
add
or
sub
cmp
nop
ds
mov
enter
aad
ficomp
enter
rol
add
imul
scas
push
ss
ficomp
inc
mov
je
(bad)
and
add
and
push
ret
xchg
sbb
add
pop
xchg
out
cmp
push
inc
push
lahf
mov
mov
mov
jno
sbb
xchg
sbb
clc
or
xchg
int3
adc
or
or
jle
fcom
cmp
inc
mov
pop
push
jno
or
dec
outs
push
inc
arpl
adc
inc
adc
in
icebp
sub
fwait
add
sub
mov
rcl
add
jo
lea
fcom
or
and
test
daa
punpckldq
pusha
dec
xor
add
or
shl
nop
sbb
sub
call
add
jns
cmp
shl
shl
outs
and
jne
mov
jle
dec
shl
sub
ja
dec
and
jo
mov
adc
jo
fs
cmp
jno
or
or
xor
mov
adc
shl
sbb
dec
fistp
int
cmps
cmp
dec
arpl
dec
pop
add
(bad)
sbb
hlt
mov
retf
push
jecxz
xchg
sub
inc
push
sbb
clc
lock
lods
mov
dec
inc
push
ja
imul
sbb
leave
jo
jno
hlt
inc
imul
es
push
jo
movs
frstor
mov
ins
adc
sub
adc
jge
loopne
push
push
mov
jns
test
mov
or
and
push
adc
mov
popa
mov
pop
push
pop
add
ret
test
mov
out
dec
pop
xchg
movs
imul
pop
lock
ss
mov
aas
jecxz
xlat
jmp
enter
push
or
out
push
ret
adc
xor
dec
xor
add
lahf
je
ja
dec
add
mov
add
xor
sbb
add
movs
in
pop
mov
jo
aam
pop
movs
ja
and
cmp
mov
inc
sub
shl
add
test
adc
mov
cmp
shr
jge
jns
sbb
sti
jge
repz
inc
mov
mov
loop
dec
mov
inc
mov
test
js
cmp
dec
outs
add
cmp
dec
inc
sub
sbb
inc
cmp
leave
dec
loope
adc
jmp
punpckhbw
lds
addr16
sub
or
mov
ins
jnp
lods
jge
(bad)
sbb
xchg
fimul
test
daa
cmp
adc
cmovp
xchg
dec
adc
push
das
in
inc
repnz
adc
and
and
push
pop
adc
ret
mov
jno
cli
rol
cmp
add
pushf
add
add
clc
and
les
jb
or
cmp
mov
jb
pushf
mov
pop
lods
mov
mov
mov
add
push
adc
hlt
repnz
ficom
fcomp
add
pushf
adc
add
loope
mov
pop
not
sbb
sahf
daa
aad
add
mov
sub
adc
sbb
jb
leave
in
sbb
repnz
loopne
into
cmp
sbb
mov
add
or
retf
in
mov
push
pop
inc
pop
xchg
shl
adc
lods
jo
pop
imul
shl
push
shr
dec
cmp
call
sub
xor
aaa
cmp
jb
pop
inc
inc
dec
ins
sub
daa
rcl
ds
adc
dec
add
adc
pop
add
xchg
cmp
fiadd
pop
xor
repz
lea
mov
pop
or
mov
push
push
jle
in
add
iret
or
sbb
add
fimul
jge
xor
xlat
push
clc
mov
int
dec
cmp
cli
ret
stc
icebp
fsub
xor
jmp
jl
add
lea
leave
inc
jp
dec
pop
stc
inc
xor
xor
and
or
loopne
xchg
xchg
add
gs
or
adc
push
lea
inc
outs
mov
loopne
add
push
xor
adc
ja
add
mov
fwait
sub
imul
mov
jp
dec
sbb
cmc
(bad)
in
push
jo
push
mov
add
mov
push
in
imul
gs
cmp
pop
ins
scas
cmp
mov
and
nop
inc
ficom
fdivr
repnz
clc
pop
xchg
mov
sub
add
fcmovbe
fsub
mov
mov
xor
scas
mov
test
(bad)
or
dec
mov
test
je
imul
into
adc
add
adc
and
push
movs
cmp
xchg
xchg
lock
sub
xchg
jecxz
fsub
mov
add
dec
add
out
sbb
push
pop
xchg
mov
inc
cmps
jbe
sub
sahf
jbe
pop
cdq
test
aas
int
je
mov
dec
dec
test
cld
or
js
sbb
and
dec
ds
enter
mov
push
outs
cmp
jge
jo
mov
rcl
ficom
clc
jb
cmp
imul
aad
cmp
push
inc
add
test
das
and
mov
pusha
in
and
jmp
add
mov
(bad)
loopne
and
lea
fnstsw
jmp
sbb
push
cdq
rcl
inc
mov
sub
pop
add
adc
pusha
sub
mov
cmp
dec
(bad)
push
outs
jb
int
lods
stos
cmps
add
aad
leave
add
inc
repnz
add
data16
(bad)
cmp
adc
mov
retf
inc
mov
in
pop
inc
cmp
nop
mov
sub
ins
pushf
jo
inc
and
push
xchg
xor
sub
test
dec
or
fist
test
adc
ret
dec
or
jecxz
add
inc
ficom
pop
call
mov
or
sbb
inc
add
mov
mov
adc
pop
xor
or
inc
daa
pop
mov
pop
add
or
call
inc
add
or
mov
dec
ret
cmp
mov
ret
inc
int
int3
clc
push
jb
mov
fwait
mov
or
dec
sbb
sub
and
sti
dec
pop
sub
add
adc
xor
push
into
dec
sbb
or
mov
dec
dec
inc
fiadd
rcl
xchg
ins
jecxz
in
in
lea
sar
jge
ret
jmp
mov
ins
cmp
sub
in
jb
shr
and
or
aam
clc
lock
data16
mov
or
add
sub
out
lea
mov
cs
mov
jp
jge
sub
je
movs
pop
sub
sar
test
out
lods
push
cld
adc
pop
rcr
imul
jle
cs
shl
stc
jbe
jae
cmp
mul
cwde
or
and
mov
vprotb
dec
aaa
jl
stc
fisub
and
(bad)
fs
or
cwde
in
inc
sub
jecxz
test
inc
fst
push
dec
sbb
push
aaa
or
xor
test
jecxz
test
pop
clc
loop
loopne
push
aas
cmp
jo
mov
shl
pop
jo
and
fcmovnb
add
xor
mov
test
mov
cwde
sti
in
mov
push
movs
not
jne
xchg
sbb
sub
test
mov
sub
mov
jb
nop
retf
dec
retf
sbb
and
sbb
xchg
push
jmp
add
cmp
push
sbb
ins
jb
push
jno
rcr
jecxz
pop
cmp
aaa
xchg
cmp
jmp
dec
(bad)
fs
loopne
es
movs
or
test
fsubr
or
dec
jg
cmp
push
iret
out
inc
mov
and
xor
sub
xchg
xchg
clc
and
cs
movs
ficom
xchg
rcr
push
mov
sub
movs
and
in
ret
add
add
xchg
xor
mov
sub
call
push
mov
sub
call
lea
repnz
sub
mov
mov
out
inc
stos
mov
xchg
cmps
add
push
mov
or
mov
cmp
imul
xchg
or
sahf
test
mov
pop
sub
in
push
pop
sub
pop
mov
adc
dec
loope
mov
lock
inc
daa
mov
pop
jmp
ret
jle
xchg
add
push
div
xchg
xchg
sbb
hlt
mov
movs
sub
push
sub
mov
js
add
dec
jmp
mov
lea
rol
and
rol
add
jmp
arpl
or
cmc
push
fild
(bad)
dec
sub
add
xchg
pushf
enter
add
lds
rcl
cld
lods
ja
jp
pop
inc
xchg
add
push
loopne
adc
or
sbb
jg
adc
ja
push
cli
push
push
cmc
xchg
ins
mov
xor
jmp
push
push
into
sub
push
or
adc
jbe
std
in
pop
xchg
sar
sub
add
movs
daa
cmc
add
es
aas
or
cmp
pusha
rcl
imul
pusha
jae
jge
jl
adc
outs
rol
call
and
movs
xor
push
sar
into
mov
inc
in
or
mov
js
dec
or
add
(bad)
mov
and
stc
and
mov
jle
adc
push
out
jle
mov
dec
ret
xor
mov
mov
jne
inc
mov
inc
add
mov
push
shl
add
aad
xchg
or
pop
or
jp
adc
lds
pop
dec
xchg
xor
das
mov
mov
loop
xchg
mov
int
stc
ja
lahf
xor
loope
add
push
mov
xor
dec
or
pop
xor
cld
push
adc
push
inc
xchg
cmp
pop
adc
adc
fimul
call
sub
loope
retf
aam
(bad)
imul
add
or
add
inc
add
push
adc
mov
into
xchg
adc
adc
dec
push
retf
fild
mov
dec
or
dec
sbb
dec
mov
test
push
adc
and
ja
stos
push
mov
push
mov
xchg
hlt
outs
push
add
adc
pop
push
cmp
test
sub
sub
icebp
push
imul
xor
scas
fild
add
adc
inc
cmp
fisub
mov
gs
scas
scas
loop
ins
xor
push
push
or
or
cmp
xchg
jnp
adc
mov
jge
mov
mov
stos
mov
and
mov
jo
mov
inc
mov
mov
mov
add
sbb
dec
cmp
sahf
sahf
aam
mov
sahf
cli
xchg
iret
and
pop
gs
fmul
add
mov
movs
push
sar
push
inc
(bad)
cmps
xchg
push
rol
sti
ss
inc
(bad)
sbb
dec
mov
add
scas
dec
sar
int
sbb
shr
add
push
cmp
nop
add
loopne
jb
ret
or
push
int3
aad
test
or
mov
loope
(bad)
pop
aas
adc
jno
in
movs
mov
push
inc
les
daa
ret
cmp
enter
pop
(bad)
fwait
sbb
inc
pop
jo
cdq
dec
xchg
fnstsw
les
jp
or
shr
adc
push
sar
or
sbb
sub
pushf
and
or
ins
push
inc
rol
dec
mov
inc
xchg
and
fwait
cmp
pusha
or
jnp
sbb
dec
push
cmp
retf
movs
and
push
sbb
icebp
jno
lea
fmul
push
lea
in
test
cmps
xchg
mov
sub
push
sub
popa
cmovo
sbb
mov
sbb
lods
test
dec
int
mov
lahf
mov
xchg
shl
arpl
sub
push
mov
jg
nop
loop
mov
or
inc
lods
in
add
inc
push
leave
and
movs
fisttp
rcr
sbb
(bad)
adc
jmp
aaa
and
cmp
xchg
and
ja
cwde
xor
sub
movs
dec
fsub
add
push
cmp
sahf
push
lds
push
inc
inc
jo
and
push
scas
add
adc
and
ror
mov
adc
or
jle
adc
pop
fs
sub
jecxz
enter
mov
sub
jp
ins
dec
jle
addr16
ins
shr
push
inc
or
sbb
xchg
xlat
pop
or
push
adc
mov
(bad)
data16
(bad)
lock
push
push
cmp
das
dec
and
jle
aad
ins
mov
out
xor
outs
dec
je
mov
pop
add
dec
and
ror
stos
pusha
jge
push
or
out
mov
aad
cmp
out
mov
and
sbb
arpl
or
imul
sub
ins
jne
add
sbb
push
add
mov
repnz
fwait
nop
push
and
mul
push
mov
(bad)
and
pop
hlt
add
push
jns
lock
jp
push
mov
lods
ret
sub
mov
sub
or
add
pop
cwde
jge
movs
cmp
dec
xchg
or
push
or
mov
adc
shl
fild
fs
inc
push
and
push
xor
push
je
jo
(bad)
cdq
repz
xor
nop
lock
stos
in
xchg
mov
pop
cmp
sub
pop
add
ins
js
add
fld
sub
add
into
mul
imul
sbb
in
push
vpmacsdql
push
movs
jmp
mov
mov
mov
mov
sub
pop
xchg
aas
cmp
out
mov
sbb
mov
jae
(bad)
call
pop
(bad)
scas
stc
clc
cmp
pop
and
xor
xor
cli
sub
jb
xchg
test
adc
pop
lea
mov
xor
mov
mov
mov
(bad)
sub
daa
je
or
inc
bound
xchg
mov
dec
adc
push
rol
lea
icebp
cmps
adc
xor
and
shl
sub
addr16
and
or
test
js
sub
add
xor
inc
out
sub
(bad)
cmp
xchg
hlt
gs
popf
add
add
or
push
jle
or
mov
mov
inc
jp
jbe
xchg
add
(bad)
dec
jmp
sbb
outs
and
mov
sar
fstp
loope
jle
xchg
push
dec
mov
sub
(bad)
or
imul
dec
(bad)
dec
xor
shl
sub
adc
push
sbb
imul
sbb
(bad)
jne
push
sbb
mov
jg
push
clts
retf
add
add
push
sub
cdq
sub
push
sbb
lock
push
push
or
jbe
mov
(bad)
pop
mov
sub
mov
mov
aaa
jle
int3
jb
jl
in
popa
pop
fmul
mov
inc
add
test
mov
mul
add
bound
iret
dec
aas
push
jmp
movs
sbb
xor
add
imul
sub
push
imul
add
mov
cmp
sub
xchg
add
cmp
or
and
ror
xor
mov
out
mov
cmp
inc
(bad)
sub
sbb
inc
test
fwait
aam
adc
dec
ret
dec
pop
lea
clc
in
mov
xchg
adc
or
(bad)
(bad)
jnp
add
or
imul
imul
stc
inc
daa
(bad)
push
retf
loopne
and
sbb
xor
xor
bound
in
arpl
or
clc
jmp
mov
(bad)
jmp
icebp
fadd
loopne
inc
adc
add
int3
mov
call
pop
xchg
mov
dec
adc
fcomp
adc
ret
adc
int3
pop
aad
mov
inc
mov
mov
sahf
push
sbb
fdiv
or
push
inc
cmc
inc
mov
jo
dec
push
cdq
add
or
cld
push
mov
sub
data16
inc
pop
shl
out
arpl
(bad)
jg
sbb
jle
xor
add
sbb
sub
xlat
push
movs
jo
lea
adc
(bad)
into
test
pop
and
pop
fist
or
sub
push
pop
sbb
nop
mov
ret
inc
xchg
in
shl
push
test
inc
in
adc
inc
lods
push
push
leave
nop
jge
push
mov
add
and
mov
leave
rcl
repnz
add
mov
dec
or
jmp
push
add
xor
mov
mov
dec
stc
sbb
cmp
cmp
dec
ins
dec
xor
and
sbb
shr
test
xchg
add
add
sbb
or
mov
out
adc
inc
cmp
add
ret
jno
pop
cmp
sbb
adc
dec
aas
fwait
push
push
sti
jo
jne
pop
push
ficomp
pop
cmp
cs
inc
dec
mov
cmp
mov
test
and
adc
push
inc
fisttp
xor
call
mov
shr
mov
pop
push
xchg
mov
add
mov
pop
mov
adc
cli
and
ins
iret
jge
or
add
mov
jle
dec
or
or
pop
dec
jge
mov
push
xchg
cli
mov
pop
mov
jb
(bad)
mov
add
in
xchg
(bad)
outs
mov
popf
cmp
pop
add
imul
dec
jne
push
sub
cmp
xor
pop
nop
sub
mov
iret
retf
in
add
xor
dec
(bad)
jle
pop
inc
(bad)
gs
jl
add
pop
pop
movs
cwde
loop
ret
sbb
push
movs
rcl
xor
in
push
or
and
adc
adc
push
jo
add
enter
(bad)
es
in
jo
loop
xchg
pushf
arpl
pusha
push
add
adc
fadd
inc
mov
mov
les
adc
xchg
ins
popa
aad
inc
sbb
lods
(bad)
pop
jmp
sub
inc
sbb
test
mov
dec
xor
inc
movs
add
jbe
sahf
mov
cli
mov
adc
push
mov
jo
js
push
pop
addr16
dec
jnp
xchg
nop
adc
daa
cli
test
add
mov
addr16
cmp
cmps
adc
icebp
and
xchg
add
xor
mov
ss
cmp
or
mov
ins
loop
adc
push
js
test
mul
(bad)
mov
dec
rol
mov
or
jl
mov
or
dec
push
clc
and
xor
je
pushf
stos
pop
xchg
in
shr
pop
sbb
or
and
xchg
cld
pop
fcom
mov
inc
or
sbb
or
add
inc
lods
lea
mov
push
fs
inc
add
add
ror
out
add
sbb
clc
jg
sub
jmp
int3
dec
and
imul
adc
dec
xchg
jge
cmp
inc
dec
(bad)
sbb
or
jmp
or
(bad)
xchg
rcl
cs
dec
sub
dec
cmp
pop
pop
pop
and
jno
nop
jb
jae
xor
(bad)
fdivr
imul
in
aad
repz
and
ds
adc
outs
adc
aad
jno
xchg
ss
or
stos
jne
xchg
mov
adc
adc
pop
dec
add
push
add
sub
neg
(bad)
aad
rcr
mov
and
cmp
xor
aam
rcr
xchg
sahf
hlt
aam
inc
pop
pop
(bad)
leave
ror
jle
mov
or
test
cmp
add
add
fimul
push
dec
mov
push
mov
rcl
fistp
sub
add
int3
dec
bound
jns
int3
inc
add
ret
jne
xor
fsub
ret
push
sub
xchg
push
mov
jbe
inc
push
mov
outs
popa
ins
rcl
fld
and
add
mov
dec
xor
adc
jmp
and
adc
test
mov
mov
xchg
push
dec
xchg
aad
or
jae
xchg
es
mov
add
jmp
jecxz
lea
or
cmp
and
or
ins
js
shl
adc
int
fild
push
imul
gs
pop
push
ds
pushf
dec
adc
jae
push
xchg
call
call
inc
inc
fnstcw
jmp
cwde
push
sub
call
push
outs
cwde
xor
and
add
(bad)
mov
mov
fcom
mov
aas
ret
aam
inc
imul
push
mov
aas
sub
fs
lods
loope
aas
jmp
pop
sti
jge
test
cld
test
pop
jnp
xchg
xor
mov
leave
dec
imul
aaa
inc
push
jge
xor
add
sub
xlat
mov
xlat
dec
push
jno
clc
add
mov
xor
in
sti
hlt
push
add
std
cs
adc
xor
dec
pop
retf
stos
push
lods
mov
sbb
inc
add
or
fst
test
jg
imul
mov
inc
test
mov
and
or
sbb
sub
rcl
xor
(bad)
inc
adc
cwde
pop
movs
xor
shr
call
add
push
icebp
pop
push
or
or
xchg
loopne
mov
es
loope
cmps
pusha
into
xor
adc
cmp
push
pop
xchg
add
test
pop
loop
xor
jb
pushf
mov
adc
adc
cmps
adc
push
out
shl
lea
mov
mov
pop
sbb
mov
push
or
xor
sbb
jg
aam
pop
ds
daa
je
mov
call
adc
cmp
pop
adc
ret
pop
add
push
fcom
xor
xchg
lock
ret
sub
or
add
inc
mov
mov
dec
mov
adc
mov
(bad)
mov
dec
jnp
sub
push
pusha
or
mov
pop
jmp
(bad)
rcl
dec
inc
movs
adc
sub
in
jae
or
pop
cmp
sub
add
adc
fldcw
ret
xchg
add
aam
js
add
add
leave
xor
inc
push
sub
mov
xor
inc
lods
out
pop
mov
scas
cli
mov
mov
aas
push
cwde
add
or
cmps
jo
jp
mov
ins
mov
adc
test
cli
pop
es
movs
jne
cmp
test
push
test
adc
cwde
mov
xchg
enter
sub
cdq
sbb
scas
or
mov
xor
nop
sbb
mov
cmp
(bad)
dec
test
jle
adc
jl
and
xor
or
fbld
ja
jl
mov
pusha
nop
or
xor
add
retf
sub
or
mov
jb
or
aam
and
mov
jle
loope
int3
or
dec
sbb
jmp
jle
xor
adc
mov
stos
or
jge
or
or
mov
and
xor
inc
nop
mov
adc
aaa
sub
adc
repnz
and
shr
cli
pushf
sub
call
stos
mov
lea
fstp
jle
shl
push
adc
cdq
xor
clc
dec
xchg
scas
mov
stc
add
shl
or
aad
pop
dec
jne
dec
pop
data16
adc
pop
clc
push
jle
clc
add
fld
adc
adc
mov
sub
aas
dec
sub
mov
mov
cdq
pop
div
enter
inc
ret
jo
clc
xchg
pop
movs
sub
pop
mov
inc
icebp
jmp
jmp
push
mov
adc
cli
mov
ds
push
sti
xchg
outs
xor
add
mov
test
pushf
dec
xor
dec
pushf
inc
add
ret
hlt
pusha
jno
add
and
enter
call
push
sbb
xor
mov
cli
add
shl
or
mov
or
test
dec
js
sub
inc
add
adc
pmulhw
js
xchg
loope
sar
dec
bound
mov
push
rcr
and
ret
add
push
mov
test
pushf
mov
test
repnz
jp
shr
pop
jmp
jp
or
test
xchg
sub
cmps
gs
push
aad
shr
sub
shl
mov
sbb
adc
lea
or
add
xchg
sub
mov
test
add
jl
or
xlat
cmp
xor
mov
sbb
and
cwde
inc
inc
xchg
mov
and
sbb
cmp
sbb
add
imul
cmps
imul
nop
ins
or
inc
out
adc
and
sbb
lea
ffreep
nop
push
sbb
adc
xor
inc
xlat
imul
mov
mov
movs
mov
or
rol
or
mov
sbb
mov
cmps
add
dec
push
push
xor
pop
xor
push
(bad)
cmp
mov
xor
outs
mov
and
js
test
or
and
cmp
jo
dec
out
push
cld
test
xor
loope
lock
mov
inc
jno
aad
lock
mov
scas
repnz
push
inc
ds
daa
push
(bad)
unpckhps
push
or
mov
inc
inc
sub
xchg
push
add
xor
lods
xchg
xchg
daa
xchg
enter
(bad)
adc
out
in
test
rcl
mov
test
pop
aaa
js
push
add
xchg
inc
xchg
add
push
xor
push
push
sbb
mov
mov
add
sub
in
and
add
add
adc
push
push
mov
or
push
push
push
movs
or
mov
sbb
xchg
sub
sbb
adc
push
(bad)
inc
push
inc
sbb
int3
sbb
sbb
jmp
in
and
and
cmps
add
rcr
xor
cmc
gs
inc
punpckhbw
out
mov
push
sub
aas
mov
lds
mov
fiadd
je
bound
inc
mov
xchg
pop
popa
pop
sub
jg
test
push
adc
push
pop
xchg
mov
xor
xchg
test
jmp
mov
les
or
xor
cmp
nop
cs
dec
pop
int3
cmp
aaa
inc
inc
mov
push
gs
add
xchg
or
bound
adc
aaa
jno
jp
and
and
lods
adc
fldenv
rol
or
sub
lea
pop
mov
and
xor
(bad)
mov
repz
mov
ret
jno
test
xchg
and
sbb
and
shr
xor
push
fimul
out
test
mul
test
sbb
mov
xchg
mov
jne
xor
mov
loope
loope
in
push
mov
inc
leave
pop
xchg
dec
adc
sbb
adc
fwait
(bad)
int3
cs
sbb
add
or
xor
xor
fcomp
gs
retf
arpl
and
push
(bad)
fstp
dec
push
xchg
mov
and
ss
(bad)
enter
jg
int3
es
test
das
or
rol
pop
push
add
mov
push
pop
xlat
les
test
test
fild
movs
jne
repnz
sbb
aam
fsub
mov
jae
fadd
mov
pop
and
inc
mov
xchg
je
mov
push
cmps
xor
jne
inc
sbb
popa
add
push
push
loope
imul
pop
sub
shl
lock
cmp
push
push
lahf
dec
mov
pop
in
in
rcl
jne
pop
loopne
mov
dec
ficomp
pop
adc
sub
mov
cmp
lahf
mov
fs
call
stos
xor
mov
cdq
adc
ror
cdq
test
in
add
and
and
aaa
fadd
retf
ja
cmp
push
jmp
mov
imul
push
cmp
mov
inc
cmp
fisttp
or
dec
push
inc
push
dec
push
fdecstp
mov
dec
cdq
inc
test
int
push
xchg
call
loopne
sbb
arpl
push
sub
push
out
movs
jl
push
add
cli
mov
pop
inc
mov
or
(bad)
jbe
push
pop
in
lock
call
fistp
sub
es
add
arpl
mov
aaa
push
jnp
adc
sub
xchg
mov
sbb
inc
ins
sub
adc
adc
rcl
popa
sbb
out
sub
adc
add
(bad)
jmp
pop
rcl
pop
(bad)
push
jnp
push
das
push
xlat
cmp
add
loop
dec
add
loopne
leave
shr
mov
or
or
leave
es
test
add
cmp
pop
jge
outs
add
jecxz
push
xor
lea
les
mov
adc
frstor
movs
idiv
sub
add
jle
stos
jle
jnp
inc
mov
pop
enter
inc
xchg
adc
ret
and
inc
push
arpl
rcl
xchg
dec
loopne
cmp
xchg
shr
les
fstp
loop
stos
push
dec
gs
imul
lea
add
repnz
cdq
sub
hlt
sub
clc
inc
iret
lea
dec
add
popa
movs
mov
adc
push
sub
mov
mov
pop
or
imul
jo
cwde
movs
pop
mov
aam
adc
sbb
ins
pop
lea
cmc
sbb
pop
pop
clc
cld
mov
push
clc
mov
and
inc
mov
pop
mov
push
and
or
pop
and
and
fisttp
dec
inc
add
addr16
sbb
push
lods
lahf
mov
jmp
sub
dec
jns
bound
aam
adc
pop
cmp
stc
pop
scas
stc
mov
out
mov
add
xor
cmp
out
jb
inc
not
xor
push
iret
ret
or
pop
mov
inc
dec
xor
(bad)
out
push
mov
jle
xchg
outs
mov
inc
inc
imul
jne
enter
adc
or
jle
ret
mov
popa
cmps
adc
rol
push
rcr
movs
jge
push
pop
mov
jmp
es
add
idiv
or
mov
fdivr
add
sub
imul
imul
and
je
xchg
arpl
push
mov
daa
mov
(bad)
arpl
imul
jns
add
(bad)
xor
mov
inc
pop
daa
or
adc
gs
clc
xor
or
ret
or
push
push
in
pop
sub
bound
shr
ins
dec
(bad)
fstp
mov
push
dec
jo
sbb
call
loope
in
or
cld
movs
mov
sbb
retf
div
push
push
and
lea
setbe
sbb
pusha
je
jbe
mov
and
jae
or
cmps
or
in
imul
add
punpckhwd
call
jge
cmp
sub
mov
fsub
pop
int3
shl
cwde
and
fdivr
test
(bad)
pop
add
lds
xchg
jmp
sti
aam
pop
rcl
mov
jmp
bswap
push
xor
xchg
xchg
sub
(bad)
int
cmp
enter
push
pop
sub
cmp
inc
mov
hlt
fidivr
and
mov
and
sub
ret
mov
test
mov
retf
mov
cmp
jo
das
lods
enter
jle
movs
add
or
push
ins
mov
mov
ins
fwait
or
cmps
or
add
add
or
fst
sub
or
cmc
daa
loopne
mov
ret
addr16
bound
inc
xor
add
push
sbb
cmp
or
idiv
mov
inc
js
jmp
pop
push
push
cmp
les
popa
pop
sub
sbb
stos
add
push
adc
inc
ret
outs
mov
int
adc
addr16
xor
in
fdiv
sub
push
push
cmp
ins
js
cmp
sub
cmps
inc
pusha
sub
push
cdq
add
ret
ret
inc
or
dec
in
dec
inc
sub
in
retf
or
and
rcr
pushf
add
div
and
pop
inc
sbb
xor
xor
fs
call
jmp
mov
or
push
retf
pop
addr16
test
or
mov
push
retf
pusha
das
in
or
push
int3
call
adc
cdq
mov
inc
dec
pop
rcl
popa
fwait
sub
and
xchg
sbb
retf
or
push
repnz
mov
dec
imul
mov
jb
inc
push
xchg
or
call
outs
jmp
lods
cmp
cld
add
jmp
and
xor
inc
aas
fadd
xchg
jno
fadd
jno
inc
or
popa
test
mov
clc
imul
add
adc
xchg
mov
add
xor
loope
add
and
add
imul
add
imul
and
dec
sar
lea
fcom
pusha
fldenv
adc
adc
and
sub
push
or
cli
push
rcl
fsub
add
push
in
ss
lea
rcl
jae
(bad)
adc
inc
(bad)
nop
aam
loopne
jne
push
adc
test
add
sbb
retf
cmps
xor
ins
imul
adc
mov
inc
je
add
fldpi
fld
pop
dec
add
cs
dec
mov
jo
push
xor
cs
inc
cmp
jns
inc
fiadd
and
xor
add
ss
test
lock
lods
or
jo
mov
jne
popa
dec
jb
push
push
aaa
iret
ja
push
in
clc
push
pop
xor
jl
jo
adc
loope
ss
call
push
add
cld
push
enter
jno
test
mov
dec
pusha
inc
dec
xor
xor
ja
into
movs
mov
jmp
inc
add
aad
xchg
xor
int
push
aad
aaa
fwait
push
add
mov
add
je
dec
and
xor
or
hlt
lea
sbb
adc
jecxz
xor
sbb
sbb
and
push
or
icebp
cmps
ret
push
dec
pusha
sbb
movups
leave
push
sub
call
push
push
pusha
lods
xchg
and
mov
mov
jl
push
out
or
push
or
add
xchg
jmp
or
icebp
adc
add
cli
in
push
lahf
lock
clc
cmp
pop
inc
ret
std
jne
push
jl
mov
pushf
lds
xor
mov
add
xor
loopne
sar
push
pop
rcl
xchg
cmp
test
(bad)
jl
lods
xchg
sbb
and
or
adc
xor
adc
add
adc
cmp
push
je
cmp
sub
fadd
hlt
lods
int
cmp
ret
or
and
or
adc
xchg
adc
and
xor
cmp
mov
test
dec
jl
or
jge
sbb
dec
dec
or
cmp
xor
or
xlat
adc
or
xchg
daa
mov
and
ret
or
cmps
dec
loop
ficomp
adc
jne
ja
pop
or
mov
sub
jns
out
ins
inc
xchg
and
sbb
mov
push
mov
in
push
popa
push
cmp
lock
xor
mov
or
mov
rol
test
outs
adc
pusha
movs
and
mov
adc
adc
mov
lea
fdiv
ins
test
sbb
pop
sub
inc
enter
xor
sub
rol
outs
add
mov
(bad)
icebp
pop
(bad)
or
xor
hlt
mov
(bad)
cmc
adc
sub
xchg
xchg
or
sbb
movs
add
mov
(bad)
mov
jae
test
mov
call
xor
das
push
xor
shl
cmp
aaa
das
pusha
in
and
in
mov
push
cmp
adc
mov
xchg
or
xchg
fist
xor
and
inc
xchg
adc
inc
adc
pop
mov
sbb
ret
nop
xor
push
adc
or
pop
stc
pop
add
xchg
mov
inc
cmp
cmp
mov
jmp
stc
stos
or
and
es
mov
xchg
cmp
inc
js
mov
jg
jo
xor
add
pusha
xor
push
push
rcr
and
das
test
mov
nop
loopne
xchg
inc
jne
test
ret
sub
inc
inc
jl
dec
fistp
and
or
lock
dec
sub
jle
stos
mov
(bad)
sar
(bad)
jle
movs
ds
ror
inc
add
xchg
mov
loop
mov
cdq
jecxz
mov
xchg
cmp
mov
xchg
lds
loope
sar
or
and
dec
scas
cmp
rol
push
aad
fisubr
lds
sbb
dec
cdq
aad
retf
add
bound
jmp
fist
push
cmps
test
or
daa
in
in
fstp
cmps
xor
sbb
adc
inc
xor
mov
xchg
mov
jmp
imul
dec
pushf
dec
fisttp
or
test
inc
push
(bad)
and
in
pop
sub
and
cmps
mov
std
inc
jbe
cmps
jmp
ins
es
rcr
ror
sbb
(bad)
and
mov
es
loope
adc
lods
dec
push
gs
pop
cmps
loope
leave
xchg
jne
adc
mov
mov
sub
inc
lods
movups
push
sbb
fmul
mov
xor
pop
mov
sar
mov
pusha
stos
push
js
fadd
inc
ret
xor
sbb
scas
lods
jno
shl
xor
and
das
call
daa
stos
sub
dec
scas
cmc
ins
div
mov
mov
dec
lods
xchg
pop
inc
add
push
nop
add
loop
or
movs
mov
pop
mov
inc
test
sub
sub
pop
pop
and
dec
adc
push
(bad)
dec
mov
cmp
ret
add
pop
sub
and
cld
inc
sub
inc
int3
add
xor
test
mov
mov
loopne
push
pop
dec
daa
imul
inc
and
jns
cmp
xor
movs
cdq
js
or
movs
or
add
repnz
push
or
test
xor
push
sub
sbb
loope
rcr
adc
in
shl
clc
sbb
cs
ss
xchg
cmp
cli
push
lea
xor
in
xchg
or
in
dec
mov
sbb
sbb
add
xchg
je
adc
rcr
gs
mov
iret
sahf
push
mov
bound
mov
aaa
in
in
xor
add
sbb
fs
inc
scas
push
pop
add
add
xchg
mov
inc
sub
mov
mov
push
lea
xor
jg
pop
dec
and
sahf
add
xor
and
cdq
add
sbb
add
shl
test
mov
mov
loopne
sbb
sbb
arpl
sub
nop
dec
cmp
push
xchg
push
mov
fst
and
sbb
cwde
sbb
loope
mov
sub
mov
call
sub
sbb
int3
xchg
push
ins
pop
pop
add
inc
sub
cmp
adc
stos
pop
test
outs
or
sub
jmp
inc
xor
add
aam
and
mov
xchg
cld
jb
xchg
xor
cli
mov
lea
dec
outs
mov
xchg
jecxz
fstp
repnz
js
mov
push
and
test
cld
es
pop
cmp
or
inc
das
sub
lds
mov
ret
and
fstp
xchg
rcl
rcl
push
mov
mov
add
aaa
adc
rcr
mov
push
inc
rol
or
cld
adc
mov
cmp
(bad)
jg
pop
mov
push
mov
dec
sub
inc
add
aad
sbb
(bad)
push
(bad)
pop
push
sbb
fimul
mov
fcom
js
push
dec
push
pop
add
add
sub
jb
ret
mov
ja
aam
mov
add
in
shl
ss
jbe
push
jno
add
addr16
sbb
dec
adc
das
fdiv
pop
jo
clc
and
out
jne
jb
jo
leave
mov
(bad)
pusha
cmp
xor
push
popa
cmp
std
and
pop
cmp
dec
shl
in
or
sub
in
or
mov
adc
xchg
movs
cmp
ret
dec
pop
inc
(bad)
mov
push
pop
mov
add
dec
scas
mov
stc
add
add
stos
call
neg
addr16
adc
hlt
or
cmp
iret
daa
pop
stos
xchg
outs
or
and
xor
xor
cmp
dec
cmp
mov
and
cdq
mov
(bad)
xchg
xor
outs
iret
and
sbb
dec
ss
fist
push
push
pop
pop
xchg
mov
add
sbb
enter
pop
jl
les
sub
adc
fcomp
enter
pushf
jmp
push
push
retf
pushf
cmp
bound
mov
and
or
mov
jle
ret
mov
push
push
test
and
or
enter
push
cmps
ds
mov
adc
stos
xchg
fadd
dec
stc
adc
or
xchg
adc
push
fwait
or
and
in
into
or
idiv
inc
dec
loop
out
popa
push
in
pop
push
pop
pop
cmp
xchg
rcl
aam
mov
and
jo
sbb
mov
daa
sbb
pop
ror
mov
and
jae
lahf
les
jmp
test
dec
jecxz
add
jmp
lock
jl
sub
xor
xchg
jmp
add
mov
or
loopne
mov
jbe
mov
add
cmp
xlat
test
into
push
xchg
and
sbb
inc
fisttp
pop
inc
jp
push
dec
or
mov
scas
mov
push
mov
push
sar
pop
jg
and
nop
not
sbb
mov
cmp
test
adc
pop
or
mov
mov
jg
sbb
add
ins
adc
je
(bad)
ret
sbb
xor
and
gs
mov
sub
push
xor
fidiv
nop
and
ss
repz
and
sbb
fstp
popa
xor
popa
pusha
inc
mov
mov
aaa
add
call
add
xchg
(bad)
(bad)
(bad)
xor
and
scas
push
dec
push
sub
and
clc
xor
jge
mov
inc
and
loopne
movs
or
retf
stc
mov
xor
or
push
push
in
xor
cmp
push
sbb
test
and
pop
rcr
jae
shl
sub
sbb
fs
push
mov
lods
push
(bad)
jmp
nop
test
es
dec
rcl
xchg
cwde
mov
fs
xchg
sbb
sahf
mov
arpl
xchg
push
dec
call
je
xor
inc
cmp
clc
mov
mov
and
sub
xchg
popf
adc
mov
sahf
iret
fwait
adc
mov
push
push
ja
addr16
dec
and
shl
mov
mov
xchg
jge
mov
sbb
adc
or
test
cmove
jg
and
dec
popa
and
adc
inc
leave
xor
inc
pop
jo
inc
and
imul
test
or
or
pop
nop
daa
mul
add
xor
es
fidiv
call
xlat
pop
jo
movs
je
pusha
data16
mov
or
cdq
pop
sbb
mov
js
xchg
dec
sub
push
push
cdq
(bad)
adc
xor
or
jnp
sbb
stos
inc
je
and
(bad)
push
mov
xor
cmp
iret
xor
and
pushf
xchg
aam
cmp
pop
lods
push
dec
sbb
inc
lods
push
call
ds
push
cmp
jl
pop
xlat
nop
mov
hlt
sti
xchg
lods
adc
dec
jge
std
and
icebp
mov
inc
jle
push
dec
rcl
cmps
push
pop
mov
sbb
inc
xor
adc
sub
and
out
inc
hlt
test
xor
or
xchg
inc
js
cmp
int3
nop
jns
mov
push
icebp
sub
loopne
inc
adc
aas
xchg
movs
mov
xchg
and
or
inc
sbb
add
fcmovu
jmp
dec
inc
mov
add
fiadd
jnp
retf
rcr
add
into
add
xchg
mov
cli
mov
cmp
mov
dec
and
shl
sbb
adc
sar
mov
ds
call
mov
mov
retf
dec
clc
mov
fsub
ss
retf
js
(bad)
fxch
aam
imul
movs
push
test
mov
and
mov
pop
push
movs
inc
iret
in
sbb
mov
mov
push
(bad)
add
xchg
popa
sti
enter
mov
sbb
repnz
mov
jl
into
pop
add
jp
ror
pop
clc
cwde
je
pop
leave
add
mov
push
inc
retf
in
sbb
imul
xchg
xchg
jmp
sbb
sbb
pushf
xchg
inc
mov
pop
mov
movs
std
or
pop
jae
push
dec
xchg
xor
shl
lock
mov
pop
adc
or
adc
mov
js
xor
test
data16
test
push
inc
(bad)
cmp
repz
aaa
aam
daa
cmp
inc
mov
lahf
imul
into
push
fcom
aaa
xchg
in
dec
sbb
pop
add
fwait
mov
sahf
das
push
ja
xchg
mov
sti
fsubr
xchg
cmp
xor
mov
popf
mov
xor
add
cld
addr16
sub
push
sub
es
pop
and
xchg
xchg
psrlq
sbb
push
jae
aam
push
xchg
mov
sbb
mov
or
add
mov
xor
inc
jmp
jge
add
lds
mov
mov
nop
or
ins
cmp
jp
push
xor
in
add
movs
cdq
mov
into
sbb
and
cmps
and
dec
lods
mov
sbb
popf
xchg
mov
sub
jmp
jns
and
mov
or
cmp
not
xchg
add
push
or
(bad)
rcl
test
je
jo
push
cmps
inc
mov
test
inc
dec
xor
ret
mov
aad
repz
test
pop
xor
add
mov
push
movs
test
cmp
pop
movs
je
fwait
jecxz
mov
pop
push
mov
adc
sbb
ins
je
test
jg
xor
add
aam
iret
or
repnz
pop
(bad)
xlat
cmc
das
fadd
sbb
push
leave
mov
movs
xor
inc
ds
sar
inc
call
xchg
fisub
sub
jno
scas
scas
mov
xchg
out
nop
jne
xor
in
pusha
mov
mov
mov
aam
test
lock
nop
shl
sbb
mov
push
hlt
sbb
out
sbb
sbb
(bad)
ror
mov
das
shl
imul
adc
or
ds
mov
pop
aam
sbb
daa
cmp
adc
jmp
popf
jge
and
std
fld
add
fnstenv
aas
push
cmovne
lods
pop
mov
test
(bad)
repnz
cli
pusha
mov
xchg
pop
jge
test
test
adc
movs
xor
loope
sar
mov
daa
cmps
ss
inc
test
add
sub
pop
je
push
ror
jb
test
mov
xchg
fmul
lock
mov
xor
push
in
xchg
dec
mov
sub
jmp
mov
popa
and
cmp
mov
xchg
and
xchg
mov
pop
mov
push
lods
pop
cmc
cdq
pop
mov
pop
pop
fidivr
nop
shl
test
cmps
icebp
or
cmps
movs
dec
push
sahf
push
loop
sar
jle
push
sbb
in
push
loopne
xchg
cld
movs
sub
xor
pop
aas
lea
push
cmp
push
call
add
cs
cs
xor
adc
movs
aaa
retf
ins
xor
or
shl
inc
repnz
or
cmp
ds
mov
loopne
fst
scas
push
push
push
cmps
aad
daa
add
push
out
jb
mov
sbb
xor
inc
inc
mov
xor
pop
inc
sbb
or
cmp
mov
cmp
xor
out
loope
or
dec
cdq
inc
add
(bad)
test
int
or
cmp
retf
push
test
push
xchg
(bad)
cmp
jmp
or
sub
pop
es
cmp
jge
sar
pop
xor
sbb
dec
adc
sbb
sbb
mov
jmp
and
xorps
mov
cwde
xchg
jns
xchg
add
jmp
cmp
add
sbb
inc
ins
sbb
rol
pop
nop
push
pop
test
mov
adc
mov
into
test
aam
aam
fdivr
add
adc
jmp
sbb
pop
in
push
sbb
into
mov
cmp
pushf
shl
mov
movs
ret
add
xor
cmp
idiv
jge
jmp
repnz
ret
iret
rol
inc
or
mov
ins
xchg
jp
sbb
rol
inc
mov
jno
jmp
jge
mov
fimul
retf
or
repz
mov
pop
(bad)
data16
xchg
inc
and
sar
jp
cmc
ss
sahf
lock
adc
sub
dec
nop
push
jl
cmp
dec
sar
xor
xchg
sahf
jno
daa
cmp
and
pop
lea
inc
cmp
(bad)
jmp
lea
add
adc
test
cmp
test
pop
(bad)
adc
jne
mov
loopne
icebp
push
cmp
icebp
cmpps
cdq
shl
push
xchg
shl
loopne
sbb
push
call
inc
and
push
push
or
and
mov
lock
adc
jmp
shl
pop
mov
add
in
enter
cmc
inc
es
or
inc
retf
inc
mov
stos
or
test
inc
push
out
pop
rol
cdq
sbb
dec
add
adc
cmp
or
pop
dec
ret
adc
sub
dec
ret
cmovge
cmc
inc
fdiv
xor
imul
push
xchg
mov
xor
popa
loop
add
scas
mov
mov
movs
push
dec
mov
pop
sbb
add
dec
sbb
or
cwde
jnp
test
jb
mov
cmp
xchg
add
mov
in
fs
pop
fnstenv
rcl
pop
sub
nop
ss
int3
mov
xor
xor
jbe
or
nop
daa
nop
outs
inc
xor
xchg
add
and
cwde
pop
push
hlt
iret
mov
movs
jns
lahf
sbb
mov
movs
inc
xor
icebp
jmp
xchg
cmc
loopne
or
pop
sub
add
sar
icebp
push
jns
daa
cld
mov
adc
xor
nop
cwde
dec
add
inc
shl
les
or
mov
xchg
add
cmp
into
xor
pop
js
mov
ret
xor
sbb
ins
neg
add
mov
mov
stc
or
rcr
loope
test
push
inc
mov
rcr
jnp
movs
mov
inc
mov
cmp
jmp
hlt
push
(bad)
lock
and
pop
dec
or
xor
repnz
push
dec
xchg
xor
push
add
ja
les
jle
scas
and
pop
pop
xchg
call
aaa
pop
add
cmp
jmp
repnz
add
loope
mov
jne
mov
pop
fmul
sbb
add
sub
sbb
in
adc
shl
bound
rol
les
jb
dec
test
test
jo
push
sbb
shr
jle
cmp
dec
call
xchg
cmp
cmps
and
dec
enter
retf
xchg
in
lods
add
mov
add
dec
sbb
dec
xchg
inc
lods
dec
sbb
xor
mov
ror
sbb
push
xchg
adc
pusha
cwde
dec
cmp
cmp
test
xor
pop
cdq
jge
cld
or
adc
add
jge
fs
shl
push
push
xchg
and
sahf
jle
ror
ret
xor
cwde
pop
jecxz
adc
mov
loopne
in
mov
movs
into
add
adc
adc
adc
add
enter
ss
sub
or
jns
mov
xor
add
(bad)
loopne
in
cwde
clc
inc
mov
and
pop
adc
pop
sar
sub
adc
sub
fldcw
sar
xor
cmp
cwde
add
add
inc
imul
lea
movs
push
mov
add
and
and
mov
dec
fild
xchg
pop
ret
xchg
mov
push
iret
pop
iret
sbb
fcom
nop
pop
or
cmp
loope
gs
sbb
adc
repz
in
adc
shl
mov
or
push
add
imul
xchg
loope
rep
inc
scas
nop
push
sti
or
pop
or
and
loopne
mov
rcr
pop
movs
shr
dec
popa
enter
dec
shr
xor
cmps
test
xor
cdq
sbb
mov
sub
xor
adc
fsub
cmp
push
jge
ret
call
ss
cmp
or
fwait
mov
movs
jb
or
sbb
adc
in
jle
push
and
jns
or
inc
jne
mov
adc
add
xchg
cmps
inc
mov
popf
and
add
sub
enter
sub
jmp
test
xor
add
mov
mov
mov
jnp
retf
shl
shr
lock
add
or
leave
jno
(bad)
add
ret
inc
cmps
mov
leave
cmp
leave
leave
or
push
and
xor
cwde
test
sbb
cli
ss
xchg
adc
inc
dec
jecxz
sub
mov
mov
dec
minps
jo
enter
add
dec
add
leave
daa
cmp
or
pop
mov
mov
sub
pop
xchg
add
pushf
xchg
ds
movs
push
mov
xor
stos
jge
sbb
sub
jnp
sahf
sbb
sbb
nop
xchg
bound
add
jg
call
addr16
popa
jp
scas
pop
mov
add
and
adc
fild
lea
fdivr
or
fadd
out
jne
cmp
add
xchg
div
loope
or
mov
leave
inc
sbb
sar
sub
sbb
inc
bound
and
dec
rdmsr
bound
add
jle
jns
les
mov
cmps
inc
inc
pop
xchg
or
pop
push
fld
ins
in
dec
mov
xor
mov
add
add
mov
pop
rcl
jmp
cdq
pop
or
pop
jecxz
ficomp
mov
cmp
cmp
ret
mov
mov
iret
pusha
add
mov
pcmpgtd
cmp
sub
aam
hlt
rol
cmp
xchg
add
sbb
imul
add
dec
adc
dec
pop
mov
lahf
shr
and
adc
jle
cmp
mov
and
sub
cmc
and
scas
dec
and
enter
jmp
call
dec
mov
cld
test
cmp
dec
xlat
xor
mov
cwde
inc
loopne
xchg
push
sub
cmps
xchg
neg
aam
add
cld
add
adc
call
(bad)
loopne
cld
inc
xor
mov
loopne
dec
cmp
sbb
sahf
je
cmp
jne
mov
cmp
enter
sbb
pop
fcom
dec
pop
dec
fadd
bound
push
jns
aaa
sbb
lea
xchg
fwait
pusha
pusha
jne
fdivr
(bad)
test
or
inc
mov
add
or
mov
xor
and
test
mov
enter
jge
mov
mov
fsub
nop
mov
xchg
mov
fsubr
loopne
test
xor
call
push
adc
adc
xchg
mov
jl
and
xor
sub
test
call
aam
js
out
jbe
test
and
mov
mov
add
fs
push
and
bound
inc
mov
(bad)
push
jbe
adc
push
jl
mov
test
lock
imul
sbb
or
sbb
shl
pop
out
pop
and
cmp
pop
dec
add
push
je
pop
jb
daa
aam
pop
aam
mov
outs
or
into
test
cmps
dec
pop
or
into
and
xor
mov
sbb
sub
loop
push
lods
cdq
je
inc
mov
push
jb
and
sub
sbb
dec
ret
je
ds
push
mov
ins
sub
in
xlat
or
ss
push
(bad)
xor
or
mov
inc
repnz
aam
mov
push
jbe
inc
sbb
stos
xchg
pusha
mov
jnp
dec
popa
add
ficom
ins
pop
push
sub
les
rcr
scas
and
das
fcmovnb
test
adc
sbb
iret
xchg
add
jne
xchg
xchg
sub
stos
std
push
adc
test
cs
lock
and
dec
std
jo
inc
sub
(bad)
call
mov
ins
inc
add
xor
inc
mov
add
ss
int
jmp
dec
adc
fsub
sbb
push
add
inc
inc
in
xor
and
data16
jb
sbb
mov
test
pushf
cwde
push
and
sahf
add
xor
ds
gs
sub
sbb
aas
push
and
pop
xchg
push
cdq
inc
sub
push
es
sbb
nop
and
movs
mov
test
addr16
or
add
inc
ds
sbb
test
loope
push
jecxz
jne
jl
and
movs
inc
(bad)
mov
cmp
sbb
dec
dec
jmp
jbe
sub
mov
mov
dec
or
push
or
pop
mov
cmovo
xchg
outs
popa
pop
add
in
push
cmps
aam
mov
xchg
fild
inc
pop
aaa
push
sbb
dec
bound
and
pop
adc
(bad)
div
call
or
mov
push
inc
mov
scas
sbb
mov
shr
adc
adc
loope
mov
jae
push
push
pusha
mov
cmp
fcom
add
push
neg
inc
and
inc
call
sbb
sar
adc
jns
iret
mov
inc
sar
sbb
(bad)
mov
mov
push
xor
inc
jmp
xor
push
or
test
or
or
ins
push
mov
call
add
cmp
je
ins
test
adc
jle
push
sub
in
pusha
push
pop
(bad)
push
add
shr
push
push
fmulp
or
push
adc
xchg
add
add
pop
push
add
push
dec
setp
jnp
clc
(bad)
dec
mov
push
mov
retf
retf
rcl
sbb
stos
cmp
popf
mov
add
retf
push
xor
not
inc
jp
jne
or
sub
inc
mov
cwde
or
fnstcw
mov
pop
enter
imul
inc
add
popa
call
icebp
rcl
xor
pop
aas
cdq
dec
sub
xor
cmp
in
mov
or
shl
mov
jne
std
and
scas
xor
sbb
nop
imul
or
jne
scas
and
inc
dec
push
retf
push
xchg
sbb
and
jge
push
imul
popf
nop
lods
cmp
and
pusha
mov
fwait
sbb
push
xchg
call
and
bound
sbb
cmp
enter
stc
clc
xchg
enter
les
and
std
scas
dec
test
mov
aaa
adc
xor
cmp
fild
add
sub
xor
fwait
lods
ja
sbb
jmp
cld
out
xor
out
push
cld
push
push
add
sub
inc
dec
jmp
xchg
dec
lock
push
ins
ja
pop
mov
inc
sub
inc
add
xor
repnz
sbb
and
mov
xchg
add
aaa
lods
dec
adc
pusha
popa
mov
ja
adc
adc
cmp
or
ds
ret
push
jnp
inc
and
fadd
sbb
enter
and
and
adc
adc
repnz
add
or
cmp
test
mov
pop
add
lods
push
cmp
fsubr
add
push
push
in
in
pushf
sbb
call
jo
jg
mov
inc
push
dec
ret
shl
stos
sub
jne
mov
and
mov
and
push
or
xor
jl
mov
jmp
xlat
aam
add
adc
push
cmp
in
retf
pop
les
mov
test
pop
fwait
lock
or
or
or
jb
and
dec
in
mov
ret
adc
ss
je
popa
test
call
push
cmps
inc
cmp
in
ret
ret
aam
pusha
sbb
repnz
xor
add
xor
jbe
loopne
inc
mov
rcl
ins
mov
and
mov
sub
add
pop
add
add
mov
adc
add
ins
and
pop
or
and
jb
adc
mov
and
sbb
pushf
nop
lahf
xlat
inc
and
push
sbb
lods
mov
test
pop
mov
sbb
jns
jno
retf
outs
sbb
adc
xlat
xor
pop
rcl
fstp
bound
ja
cmc
and
sbb
popa
pusha
cmp
mov
adc
pop
xor
xchg
adc
leave
aad
in
sbb
movs
push
adc
sub
dec
cmps
lea
loop
xchg
das
dec
sub
loop
jns
(bad)
lea
aas
mov
lea
adc
xor
sbb
sbb
call
mov
xchg
call
dec
cli
add
test
in
xor
pop
stc
pop
loopne
push
outs
call
or
ja
pushf
int3
test
popa
adc
push
dec
popa
call
xor
jno
mov
iret
jns
call
cmp
sub
rcr
sbb
es
jg
mov
add
(bad)
and
scas
mov
and
xor
inc
cmp
lock
and
inc
adc
or
cmp
lock
add
or
jo
jne
(bad)
fwait
inc
and
jge
add
add
iret
cmps
mov
shr
ins
fdivr
(bad)
or
sbb
adc
das
add
mov
jmp
add
mov
jmp
xor
adc
inc
call
mov
adc
inc
jne
and
inc
cwde
test
aam
jnp
in
adc
pushf
dec
inc
mov
dec
add
(bad)
xor
int3
call
xor
sub
adc
inc
out
(bad)
out
mov
add
out
xchg
inc
mov
xor
gs
cmp
dec
jnp
sub
outs
inc
loop
cmp
cmp
jmp
fstp
sub
fist
xchg
mov
mov
vmwrite
jne
test
pop
inc
js
adc
add
(bad)
cmp
xor
adc
mov
push
fld
int
enter
shr
xor
loopne
stc
adc
stos
inc
sub
loope
adc
xlat
add
xchg
stos
adc
inc
retf
gs
xchg
out
or
pop
xchg
sub
shr
jo
pop
stos
adc
jl
mov
add
nop
dec
push
je
lock
dec
mov
(bad)
or
push
jecxz
fs
inc
mov
lods
test
add
ficom
add
push
(bad)
lods
fcom
jo
retf
add
addr16
mov
and
mov
and
loopne
pop
mov
fwait
jl
popf
mov
mov
push
mov
repnz
push
cmp
add
and
xchg
sub
sbb
xchg
dec
lods
inc
rcl
int3
sysret
dec
inc
retf
clc
(bad)
leave
test
mov
and
push
add
dec
leave
popa
inc
dec
test
bound
jle
jnp
push
inc
cmp
enter
jecxz
test
sbb
cmp
sbb
mov
sub
pop
push
movs
sub
or
cmp
add
mov
hlt
nop
and
sub
shl
lea
mov
sbb
nop
pop
dec
pop
cwde
add
push
shl
fadd
dec
dec
and
fsub
test
aas
cmp
push
jmp
push
inc
repz
loopne
dec
popa
xor
fld
cmps
fs
int3
xor
rcr
mov
add
mov
into
jecxz
je
cvtps2pi
loope
les
sbb
cmp
mov
and
fcom
add
push
fs
dec
push
push
and
movs
(bad)
mov
adc
movs
loopne
dec
cwde
push
push
xchg
xor
jo
inc
push
add
jb
lds
sub
mov
(bad)
in
int
imul
fs
jecxz
scas
sar
dec
lock
xchg
push
mov
xlat
ja
cmp
jl
pusha
xchg
and
xchg
(bad)
adc
push
aam
dec
mov
mov
cmp
pusha
aam
mov
stos
inc
or
add
jmp
push
jne
jecxz
sbb
add
push
jo
inc
ror
and
jecxz
cmp
popa
aad
scas
mov
aam
mov
push
inc
idiv
add
adc
lds
xor
dec
mov
ret
cdq
in
sub
inc
into
(bad)
xor
or
xor
adc
xchg
cmc
in
add
retf
jo
gs
dec
js
iret
mov
pop
xchg
fst
stc
repz
jo
xchg
ins
ja
out
adc
mov
push
fidivr
mov
sbb
cmp
jnp
xor
xor
shl
inc
jg
shr
fs
xchg
jg
jmp
jb
test
push
or
in
mov
ins
mov
mov
and
sub
sub
sub
test
stc
adc
push
outs
mov
loope
mov
pop
xchg
pop
or
sti
mov
nop
add
sti
mov
inc
ja
and
jae
pop
nop
sub
or
adc
cwde
adc
adc
xchg
or
mov
popa
adc
test
lock
mov
sbb
push
fst
and
call
pushf
adc
mov
or
(bad)
or
mov
mov
pop
ds
dec
mov
je
push
les
dec
adc
mov
adc
out
ins
icebp
bound
lods
and
in
daa
jne
cld
arpl
push
lock
test
sub
ret
jno
jg
jno
rol
bound
test
inc
test
cmps
xor
out
popa
pop
inc
dec
(bad)
cmp
pop
cmp
hlt
loopne
leave
sub
and
mov
ins
mov
in
mov
or
inc
pop
je
adc
repnz
add
push
add
add
std
xchg
ret
cld
push
or
sub
push
xor
or
add
std
(bad)
or
or
or
and
jmp
jle
jbe
sbb
(bad)
sbb
inc
pop
adc
and
mov
push
cmp
jb
sbb
and
jp
add
add
imul
dec
sub
fidivr
jecxz
adc
inc
mov
cmp
sub
push
les
push
adc
ins
dec
in
fcom
or
xchg
ficomp
dec
adc
arpl
add
dec
or
retf
enter
cli
nop
test
es
(bad)
aaa
push
or
add
jg
or
sub
mov
cmp
cmps
sub
pop
aam
nop
jno
adc
and
adc
xchg
push
xor
xor
sub
loope
and
mov
xchg
push
xor
cmp
add
rcr
fld
popa
inc
aaa
mov
mov
push
xor
mov
sahf
push
movs
or
xchg
or
mov
push
xlat
mov
mov
add
pop
push
xor
adc
jns
push
mov
push
neg
popf
fstp
mov
jp
jno
mov
adc
jp
add
fistp
inc
lea
cmp
loopne
movs
jmp
clc
aad
xor
data16
fstp
sbb
popa
test
mov
add
lods
jle
popa
ins
int3
add
pop
dec
adc
fmul
adc
sbb
enter
unpcklps
dec
push
nop
jecxz
jle
cmp
mov
adc
call
xor
push
idiv
jno
ss
fist
sub
mov
retf
mov
or
sbb
je
cmp
mov
lods
dec
inc
or
adc
and
add
js
mov
into
dec
in
mov
(bad)
pushf
(bad)
sti
jg
add
test
dec
dec
xor
push
ja
cmp
add
adc
xchg
es
inc
pop
aaa
rol
arpl
(bad)
add
adc
dec
test
push
or
push
mov
loope
or
lea
jmp
cmp
add
inc
outs
sbb
dec
and
inc
sub
adc
es
sbb
push
stos
add
out
and
fld
pop
repz
enter
push
jo
fadd
xchg
push
imul
adc
lods
pop
cmps
add
dec
loopne
inc
mov
(bad)
adc
mov
scas
lods
dec
or
ss
popa
or
xor
jb
cs
loopne
pusha
dec
jo
or
fwait
and
xchg
mov
and
outs
or
xor
or
lds
dec
(bad)
cmps
mov
imul
push
jbe
and
jns
data16
or
lahf
rcr
inc
add
adc
xchg
xor
dec
sahf
adc
push
and
pop
movs
jne
shr
sub
xlat
fs
inc
pop
push
adc
cmp
push
in
inc
cdq
push
scas
icebp
mov
push
test
adc
add
stos
inc
adc
ja
or
lock
sub
adc
sbb
jns
mov
pusha
test
gs
push
movs
lds
xlat
add
enter
add
mov
cwde
loop
inc
addr16
jmp
xor
xor
adc
and
(bad)
int3
ret
pop
cmp
dec
pop
jle
inc
push
jge
xchg
shr
add
mov
adc
pusha
sbb
xor
push
icebp
sub
push
in
inc
rol
arpl
push
jmp
mov
mov
iret
jmp
js
sub
add
pop
fld
pop
adc
xchg
add
jae
pop
inc
enter
push
fadd
xchg
movs
in
mov
jl
dec
adc
xor
inc
leave
into
and
push
pop
inc
jp
cmps
cmps
jmp
clc
jae
dec
(bad)
outs
sub
stos
call
pop
fisttp
daa
mov
pop
cdq
rcr
in
lock
mov
rcl
jae
dec
mov
sbb
push
push
sub
(bad)
mov
arpl
or
or
js
arpl
mov
inc
fucomip
add
adc
push
jle
xchg
in
test
mov
adc
test
push
clc
ds
add
xor
mov
loope
add
and
nop
mov
imul
push
mov
push
mov
cmp
or
(bad)
mov
inc
inc
xor
add
mov
jmp
mov
sbb
in
cmp
es
xor
nop
fcom
ins
dec
arpl
push
cmp
adc
dec
lods
adc
pop
xor
cmp
inc
jns
ja
sti
or
cmp
jmp
and
cmp
imul
dec
cmp
sti
mov
mov
les
adc
adc
(bad)
ret
arpl
xchg
std
mov
push
jb
loopne
das
and
and
je
mov
pop
cmp
mov
inc
sub
call
sbb
pop
jecxz
sbb
pop
or
int3
ins
imul
test
add
xchg
adc
jmp
push
jg
and
xchg
jbe
adc
sti
loopne
loopne
and
add
cs
push
add
jne
(bad)
imul
mov
push
not
jo
jno
aas
sbb
(bad)
add
mov
or
or
dec
push
cmp
and
or
rcl
inc
loopne
cmp
popa
cmp
data16
push
fsubr
sbb
xor
loopne
xchg
lods
add
loope
fdiv
test
push
lea
mov
es
out
fadd
call
xor
dec
ss
ja
and
jo
out
sbb
inc
push
pop
push
mov
xchg
add
mov
xchg
inc
add
sbb
sbb
test
jge
jmp
mov
xor
test
sub
mov
dec
outs
movs
jmp
nop
mov
and
fild
lahf
push
sub
mov
lods
inc
add
hlt
cdq
test
cmps
push
lods
test
sbb
outs
and
or
cmp
in
les
loop
int
cmp
cmp
jb
cdq
data16
mov
std
add
dec
lods
jecxz
xchg
or
push
and
mov
cmps
or
aam
add
jle
sub
fisubr
bound
mov
sbb
push
movs
sbb
repz
cdq
test
iret
leave
pop
pop
loop
aad
add
stos
or
and
aaa
sbb
or
pop
xor
rcr
and
inc
add
cdq
hlt
loop
mov
dec
sbb
xor
add
sub
sub
push
sub
dec
cwde
call
adc
mov
lock
sar
pop
push
push
push
sbb
pop
enter
add
(bad)
lods
or
inc
add
xor
ret
push
call
adc
jg
jp
or
int
ins
movs
pop
dec
es
movs
pop
mov
ss
and
pop
test
xchg
loop
mov
ins
push
pop
push
mov
push
cmp
jbe
lods
adc
xchg
cmp
sahf
cmp
adc
lahf
aaa
pop
ins
lods
bound
stos
xchg
and
xchg
mov
sar
sbb
add
jmp
add
mov
fistp
cmp
sbb
mov
mov
lock
imul
xor
and
das
test
add
or
pop
or
jecxz
scas
lock
jo
loope
add
inc
jmp
xor
cmp
push
test
div
cdq
cmp
cdq
sahf
push
lahf
sub
sbb
push
adc
ret
popa
inc
mov
jnp
ja
mov
mov
push
sub
adc
mov
cmp
xor
jbe
xchg
pop
fistp
outs
inc
and
int
pop
xor
orps
ss
add
sbb
or
add
mov
imul
dec
movs
lock
xlat
or
dec
and
mov
pop
mov
mov
push
enter
sar
(bad)
cwde
add
xchg
les
mov
pop
sbb
or
mov
cmp
je
inc
scas
cmp
and
fist
push
ret
ins
push
sbb
jo
je
add
out
mov
jae
daa
sbb
or
add
rcl
cs
xor
sub
or
iret
imul
jb
rcr
mov
out
ret
xlat
movzx
pusha
outs
call
test
mov
sbb
jb
sti
int
test
les
push
ror
dec
clc
pop
push
inc
inc
nop
inc
shl
shr
or
mov
xchg
xchg
push
pop
push
repnz
xchg
push
inc
push
and
retf
addr16
lahf
mov
or
arpl
jno
or
sub
xor
out
mov
cmp
jmp
push
outs
(bad)
repz
test
mov
sbb
xchg
mov
inc
and
adc
into
mov
in
popa
push
mov
xchg
add
mov
adc
ret
hlt
and
in
sub
jnp
ror
js
int3
jmp
std
retf
add
ret
sub
cmp
mov
lds
mov
dec
popf
hlt
aad
in
(bad)
(bad)
in
push
and
outs
adc
aaa
pop
rol
jno
sbb
inc
inc
pop
xor
fisttp
push
jge
push
call
dec
fs
ins
pop
or
xchg
mov
inc
inc
adc
ja
push
dec
jmp
ret
mov
or
test
adc
or
sub
sub
out
in
into
mov
cmc
mul
mov
outs
stos
imul
cmp
popf
enter
or
call
adc
and
inc
shl
rol
cmp
ret
push
mov
loop
test
push
ins
pop
imul
lahf
ror
or
sub
dec
or
xor
fnstenv
mov
push
loopne
adc
outs
movs
cdq
aam
pop
inc
and
adc
daa
nop
add
dec
xchg
inc
inc
shr
fst
cmc
movs
jge
(bad)
jg
add
popa
int3
fsub
and
pop
(bad)
sub
cmc
push
mov
or
pop
mov
pushf
push
sub
mov
mov
stos
xchg
ss
push
jmp
popa
sbb
xlat
adc
xchg
cmp
jmp
dec
pop
(bad)
fcom
xchg
rcr
sub
int3
aam
or
ror
(bad)
pop
add
mov
add
stc
add
(bad)
sub
add
loopne
clc
or
in
xor
sub
pop
mov
push
dec
sbb
push
fchs
or
adc
mov
cmp
push
dec
adc
push
je
inc
sar
mov
adc
ror
push
pop
push
mov
(bad)
fst
xchg
out
dec
push
std
push
adc
mov
push
dec
lahf
nop
fs
or
add
add
dec
adc
sub
mov
sbb
dec
loopne
(bad)
out
push
jp
xchg
dec
adc
sbb
sub
hlt
dec
ret
dec
stc
or
sbb
mov
push
popa
push
cdq
and
imul
(bad)
push
dec
sub
cmp
adc
or
(bad)
add
outs
adc
jl
xor
imul
out
dec
mov
icebp
mov
pop
jnp
cs
(bad)
stc
fcmovnbe
ss
in
cld
pop
fdivr
inc
jecxz
or
sti
ins
adc
repz
mov
xor
mov
ja
and
push
jne
jne
rcl
inc
xor
je
pop
mov
adc
movs
jns
or
icebp
in
adc
nop
push
or
xor
push
(bad)
test
adc
inc
imul
xchg
add
dec
enter
inc
ret
inc
mov
push
and
sub
cmp
ins
xchg
fstp
jmp
adc
jne
retf
je
push
mov
add
add
add
xchg
mov
into
dec
in
sahf
add
repnz
push
cmp
pop
popa
inc
add
pop
aad
add
push
adc
mov
adc
xor
inc
inc
or
cmps
ret
and
dec
icebp
pop
add
or
mov
shl
je
sbb
sub
mov
pusha
lods
add
lahf
fsub
pop
sbb
mov
push
pusha
add
xor
div
ret
test
shl
ror
ss
jo
sbb
sbb
test
sub
mov
dec
push
nop
push
sbb
sbb
in
(bad)
cmp
jo
je
xchg
adc
mov
test
cmp
jne
cmp
jne
jne
loop
test
test
int3
stos
test
or
sub
loopne
inc
test
test
and
mov
mov
pop
lods
imul
cld
shl
mov
sti
call
mov
cmp
or
pop
push
adc
cmp
lods
add
mov
or
inc
or
shl
xor
add
nop
adc
adc
or
add
inc
rcl
hlt
pop
mov
sub
sub
adc
xor
mov
inc
pop
cmp
jne
or
or
js
add
xor
jg
int
push
pop
bound
test
add
jne
mov
pop
cmp
mov
adc
and
(bad)
mov
jo
or
ds
cld
inc
ja
dec
call
inc
iret
jne
je
movs
test
push
add
push
imul
pop
cmp
wrmsr
mov
dec
movs
test
adc
or
sbb
sub
sub
sub
xchg
push
imul
in
and
mov
(bad)
jo
mov
pusha
js
pop
movs
inc
jae
add
or
ret
push
in
loopne
call
movs
inc
jno
sahf
push
and
mov
fsub
pop
xor
xchg
xor
call
(bad)
mov
inc
sbb
shr
cmp
je
sbb
movs
pop
dec
outs
cmp
jecxz
and
(bad)
inc
cmp
xchg
push
sbb
sbb
pop
push
mov
inc
lea
repnz
aad
and
loope
and
rol
sub
add
dec
ret
xor
push
ret
mov
stc
ss
xchg
call
pop
cs
shl
clc
add
stos
and
movs
or
fs
dec
add
add
and
addr16
sbb
mov
xchg
add
cmc
mov
mov
and
lods
push
sub
xchg
add
retf
sbb
fwait
(bad)
fsub
outs
mov
(bad)
in
xor
sbb
dec
adc
movs
cmp
aam
dec
dec
pop
or
jl
ins
cmp
sbb
adc
xor
inc
(bad)
outs
dec
sub
inc
jmp
sub
push
shl
pop
jo
xor
cmp
inc
js
mov
add
pusha
xchg
movs
fsubr
xlat
pop
push
sbb
cli
sub
call
mov
inc
sub
jnp
fsubr
ins
pop
cmp
fwait
out
xchg
pop
test
hlt
or
push
fs
in
mov
lock
nop
dec
inc
or
ss
xor
adc
or
pop
clc
xor
fxch
daa
shr
pop
adc
xchg
test
in
fsub
mov
dec
mov
loopne
pop
aas
or
in
add
jl
add
pop
call
imul
fnstcw
push
mov
pop
out
in
push
mov
ins
sbb
add
xor
rcl
sub
jle
mov
push
(bad)
ret
push
or
bound
popf
dec
pop
jge
aaa
lods
push
and
shl
sub
add
ss
jnp
adc
cli
das
add
adc
cwde
push
dec
sar
or
pop
and
ret
iret
dec
in
nop
jo
int3
sti
loop
out
pop
push
inc
aas
xor
retf
or
push
sbb
cs
test
dec
(bad)
and
retf
add
in
xor
inc
add
mov
hlt
pop
repnz
shl
cdq
jb
xchg
mov
mov
lods
imul
cmps
or
shl
mov
(bad)
pop
sub
in
stc
add
lods
and
lods
adc
mov
add
imul
sub
and
sub
adc
mov
push
adc
xlat
fldcw
jae
imul
pmullw
mov
outs
pop
mov
xchg
ror
out
add
mov
inc
call
cmps
sar
movs
pushf
jo
add
fs
fadd
sub
sub
dec
inc
jecxz
sbb
jmp
pop
cdq
mov
sbb
dec
xchg
sahf
pushf
sbb
cmp
sbb
(bad)
mov
xor
dec
pop
pop
psubw
cmp
jne
cmp
popf
add
adc
or
adc
and
dec
or
in
stc
mov
sbb
mov
jmp
add
cmp
js
call
nop
ror
sbb
imul
fs
leave
cmp
push
xchg
arpl
cmps
sbb
repnz
in
adc
cwde
or
pop
sub
xlat
xchg
xchg
adc
lock
nop
xor
xchg
and
jp
mov
or
call
sbb
leave
hlt
push
call
call
or
ins
or
push
xor
test
inc
dec
jo
cmc
pop
add
mov
xchg
nop
mov
dec
push
jge
jmp
scas
retf
pushf
add
pop
imul
rol
(bad)
adc
inc
nop
int
jp
adc
jmp
mov
push
cmp
shl
add
loop
mov
mov
mov
mov
aaa
idiv
xchg
das
and
pop
aad
jle
lods
xchg
fimul
and
mov
mov
dec
mov
clc
jb
add
add
jns
in
push
mov
test
adc
popa
inc
pop
jne
jnp
xchg
add
sbb
mov
mov
movs
xchg
dec
and
inc
out
inc
jle
or
mov
mov
cwde
add
and
cmps
aaa
test
dec
xchg
add
repnz
lahf
popf
fwait
cmp
pop
jmp
test
sbb
adc
out
push
gs
push
and
xchg
and
gs
xchg
add
aas
jo
or
cs
add
test
xchg
sbb
sbb
and
ins
jmp
jmp
jmp
mov
fistp
jne
push
ficom
and
sub
fs
cli
xchg
in
add
push
call
cmc
test
fs
sbb
imul
pop
loope
jo
or
pop
in
(bad)
cmp
and
push
mov
(bad)
push
and
(bad)
push
add
aad
(bad)
inc
add
push
mov
ja
test
dec
test
mov
add
pop
jb
stc
add
leave
adc
or
or
add
test
xor
add
mov
mov
enter
and
rdtsc
dec
enter
jmp
loope
push
jb
jp
fs
sbb
jmp
add
xor
sub
cld
jbe
enter
mov
mov
mov
adc
jecxz
or
pop
test
push
xlat
inc
in
push
fisttp
or
loop
cmp
outs
pusha
out
in
(bad)
in
mov
xchg
adc
loop
movs
sbb
inc
and
(bad)
loopne
outs
in
adc
jae
adc
(bad)
jb
daa
lea
add
push
iret
push
stc
fs
mov
adc
stos
cdq
add
push
dec
div
ja
sub
pop
pop
adc
call
setno
int3
sbb
jns
sbb
fld
fs
inc
sub
ds
int
ins
repnz
hlt
cmp
or
add
cmp
xchg
add
push
or
or
sub
and
add
dec
ficom
dec
mov
cmp
adc
movs
fist
add
push
dec
push
push
push
call
lock
rol
movs
and
or
or
pop
out
dec
ret
sub
pop
icebp
rcr
mov
daa
iret
cmc
adc
push
out
adc
or
dec
pop
movs
dec
shl
ins
fnstenv
mov
mov
imul
sbb
push
shl
adc
dec
repz
mov
pop
mov
or
nop
push
push
sub
xor
rcr
dec
enter
xchg
out
loopne
icebp
xlat
and
jb
adc
push
xchg
lahf
rcl
cwde
xchg
push
or
inc
popf
mov
add
scas
push
dec
pop
jnp
push
xchg
cmc
mov
jmp
ss
and
enter
ins
test
inc
or
lock
movs
push
mov
shl
test
sbb
ret
jmp
or
xchg
call
fs
loopne
pop
pop
scas
sub
cmc
push
ror
mov
pusha
ror
fs
or
ret
adc
and
adc
and
cwde
stc
add
imul
or
adc
cmp
push
cmp
jne
inc
mov
cmp
int3
add
daa
add
sbb
cmp
sub
adc
push
lock
mov
and
lock
js
cmc
mov
add
push
jns
push
adc
add
jmp
popf
cmp
pop
sbb
in
mov
push
cmp
imul
sbb
mov
je
xchg
pop
adc
push
or
push
dec
jmp
cmp
(bad)
dec
and
add
out
imul
add
add
retf
or
fcomp
jbe
xor
jge
pop
xor
or
add
pushf
xchg
add
test
sbb
push
(bad)
fiadd
cmp
arpl
xor
loopne
or
xchg
sti
repz
call
or
xor
mov
jge
lahf
div
test
xchg
bound
loopne
and
mov
fwait
sar
enter
in
dec
push
xor
cmps
fisubr
lea
stos
mov
ror
clc
push
sbb
lods
mov
daa
jecxz
ins
add
jo
or
test
pop
scas
xor
les
in
adc
mov
arpl
xlat
inc
mov
xor
in
out
and
mov
and
push
fist
pop
and
pushf
fcomp
inc
pop
inc
int
(bad)
nop
(bad)
and
xor
inc
js
mov
adc
out
dec
xor
dec
mov
lea
fild
xor
push
pop
fimul
pop
adc
adc
cwde
cmp
xor
sub
add
fwait
xchg
leave
mov
js
cmp
in
xor
(bad)
xchg
add
add
xor
sbb
fnsave
and
jg
jmp
push
adc
sub
mov
xchg
cld
sbb
cdq
add
xchg
pop
add
sbb
retf
stos
inc
mov
arpl
xor
test
xchg
dec
dec
or
or
xchg
loopne
fcomp
ror
push
repz
sbb
or
movs
and
dec
mov
dec
inc
je
cmp
mov
add
push
bound
mov
adc
aam
mov
add
sub
mov
ja
lahf
add
push
movs
and
cmp
push
adc
and
mov
pop
nop
(bad)
mov
inc
ins
ins
adc
jne
sbb
xor
test
repnz
nop
add
and
ror
sbb
pop
repz
inc
add
mov
xor
imul
sti
sbb
jbe
data16
ror
pop
fimul
ss
lea
test
push
pop
mov
mov
aam
imul
jmp
cmps
sub
add
loope
cmc
push
push
test
pop
jp
fst
adc
je
cwde
inc
imul
fcomp
mov
or
sub
ja
mov
adc
(bad)
fwait
jle
dec
sbb
pusha
add
int
retf
push
popa
sub
test
xchg
pop
repnz
mov
test
jle
or
sahf
jle
test
fwait
shl
in
pop
dec
lods
daa
pop
fbld
rol
or
gs
xchg
cmps
push
mov
or
stc
aam
or
lea
leave
push
es
ins
retf
fnstcw
and
cmp
or
enter
push
mov
mov
dec
cld
pop
cli
jne
push
mov
jmp
les
cld
cmp
in
leave
xchg
cmps
inc
and
aaa
sbb
loop
mov
inc
mov
cmp
add
por
and
gs
pop
mov
mov
cdq
sub
sbb
mov
push
jmp
(bad)
mov
mov
adc
add
jne
jmp
mov
sbb
add
pop
cmp
dec
movs
pop
pop
inc
cli
cmp
jmp
push
inc
fstp
ins
(bad)
jmp
pop
cmc
popf
dec
imul
pop
ret
cmp
inc
jns
and
(bad)
push
clc
or
out
and
fild
mov
pop
outs
mov
jl
and
icebp
push
das
inc
push
fwait
aam
xchg
adc
mov
pop
xchg
mov
lock
push
mov
add
outs
inc
add
cmps
xor
and
xchg
mov
sub
jecxz
and
pop
mov
mov
cmp
mov
or
push
lds
xchg
inc
fnstcw
ficom
inc
pushf
fs
adc
or
into
mov
jns
push
inc
loopne
mov
mov
clc
fdivr
or
push
mov
arpl
mov
cli
in
fisub
adc
ret
inc
test
mov
cli
out
(bad)
xchg
nop
add
pop
inc
mov
nop
out
arpl
nop
dec
inc
dec
inc
dec
push
xchg
jno
inc
or
or
stc
pop
or
inc
test
(bad)
loopne
pop
inc
nop
xor
or
or
dec
mov
jle
jl
(bad)
sub
cmp
mov
mov
(bad)
mov
dec
and
adc
imul
mov
mov
mov
pop
inc
inc
mov
into
mov
cmp
lods
xor
sahf
lods
and
push
(bad)
cmp
xor
add
xchg
xor
mov
enter
xchg
inc
dec
(bad)
push
fcom
ret
js
jne
and
ret
push
sub
movs
pop
push
call
dec
and
push
in
inc
xchg
mov
sub
ins
sub
into
add
das
(bad)
ror
or
rcr
and
mov
dec
(bad)
xchg
push
pop
cmp
call
in
hlt
cmps
adc
mov
jecxz
ds
mov
ret
out
es
cdq
les
push
push
ret
push
adc
imul
fst
and
(bad)
xrstors
mov
push
je
pusha
add
inc
inc
fimul
inc
push
inc
gs
dec
sub
fiadd
push
inc
les
or
add
ss
rol
ror
aam
movs
mov
ss
rcr
(bad)
in
push
ds
clc
rcl
jne
cmp
iret
sub
loop
cli
and
js
mov
jg
mov
inc
and
mov
popa
inc
xor
popf
mov
(bad)
popa
aam
or
sub
in
and
ror
or
xor
push
(bad)
sub
pusha
dec
pop
dec
xchg
or
mov
and
jmp
adc
mov
push
clc
enter
bsr
cs
pop
pop
inc
inc
sbb
or
dec
inc
ins
xor
xor
sub
jge
pop
mov
in
pop
dec
push
adc
retf
rcl
jbe
dec
jle
jo
cmps
dec
fnstenv
push
cmp
and
cdq
pop
and
movs
cwde
into
or
sbb
jl
popa
cmc
bound
add
add
adc
and
push
inc
xor
scas
xchg
inc
cmp
or
jno
(bad)
mov
js
dec
fs
adc
jno
jnp
mov
test
adc
and
mov
sbb
sbb
jecxz
or
mov
push
pop
adc
jns
or
(bad)
es
jbe
pop
pusha
adc
jmp
dec
add
mov
add
add
or
outs
lahf
es
mov
xchg
pop
mov
fisttp
cmps
js
sub
mov
adc
add
add
xlat
sub
adc
das
or
stos
bswap
ins
in
ret
pop
pop
clc
cmp
cld
pop
mov
or
js
jo
pop
or
sub
add
test
push
cmp
test
push
inc
or
je
pushf
shl
fnstenv
mov
jmp
mov
adc
dec
sbb
mov
jno
mov
cmp
std
xor
dec
es
mov
scas
lock
addr16
inc
imul
test
adc
ror
pop
sub
add
push
sbb
xor
cmp
mov
mov
aas
xor
inc
sar
and
xor
lods
test
xlat
inc
cmps
ud1
and
jo
xchg
xor
loopne
sub
or
mov
inc
in
sub
sub
jnp
add
xchg
inc
or
adc
inc
test
call
dec
mov
je
inc
test
xor
dec
repnz
fsub
lock
jmp
aaa
aam
cmps
clc
lea
mov
mov
cmp
add
inc
stos
push
push
mov
pop
addr16
xchg
sbb
cmp
loop
or
sar
mov
adc
push
test
je
inc
fbld
mov
jmp
cmp
add
sub
jl
xchg
addr16
sub
dec
outs
jno
add
xor
movups
fwait
sub
push
and
jecxz
out
or
and
dec
dec
dec
je
jo
mov
add
dec
mov
xor
es
sbb
in
jle
pop
and
outs
rsm
scas
rcl
loopne
es
pop
dec
ret
mov
add
jae
pop
cmp
dec
idiv
dec
mov
sbb
(bad)
fild
cdq
sub
mov
(bad)
mov
add
add
ret
sbb
dec
dec
jnp
and
sbb
loope
sbb
mov
xor
jae
and
mov
jl
jno
inc
and
mov
icebp
jo
in
in
jmp
popa
push
or
pop
jg
adc
mov
mov
sub
movups
ret
xor
jns
add
mov
sbb
mov
pop
mov
cmp
mov
cld
and
xor
out
push
(bad)
jmp
lock
and
ja
mov
or
push
sub
cmp
pop
xor
mov
sbb
cmp
neg
dec
jb
push
stos
iret
stos
movs
movs
dec
xor
test
bound
repz
add
arpl
and
test
or
mov
stc
push
fiadd
add
add
mov
push
repz
inc
and
(bad)
ja
movs
retf
cmp
mov
push
push
adc
aam
out
sbb
add
pop
adc
mov
adc
or
pushf
mov
pop
mov
mov
sub
pop
das
mov
out
mov
sbb
push
adc
or
inc
push
retf
add
push
fs
mov
shl
mov
jge
adc
(bad)
cmp
and
loopne
xchg
push
ja
in
ror
enter
cmp
or
push
or
xchg
sbb
add
repz
add
jo
call
sbb
add
pop
out
push
call
xlat
cmps
fdivr
add
aaa
adc
push
adc
add
xchg
mov
ror
sbb
mov
xor
lock
and
xchg
jge
add
mov
or
inc
dec
popf
retf
push
cmp
test
pop
(bad)
dec
enter
xor
imul
retf
shl
adc
adc
pop
dec
aam
fsubr
xor
sbb
mov
cmp
sub
xchg
inc
mov
sar
clc
xchg
add
and
sbb
push
cmp
adc
shl
test
out
cmps
sbb
mov
xor
push
sub
add
xchg
nop
(bad)
ins
jmp
or
push
xchg
dec
cmp
jo
ror
pusha
cmp
cmp
inc
jl
fistp
xchg
mov
adc
sub
sbb
push
mov
sub
call
mov
inc
or
sbb
inc
dec
movs
lods
outs
cmp
loopne
cs
retf
in
lock
adc
add
or
int3
or
out
nop
das
enter
inc
push
cmp
adc
mov
mov
ret
rcr
je
sahf
add
sub
lods
enter
fild
nop
movs
adc
inc
add
cwde
mov
push
addr16
push
mov
or
xchg
pop
mov
or
cmp
xor
sbb
add
pusha
ja
xchg
adc
mov
sar
add
or
aad
les
cmp
add
fwait
add
sbb
xor
xchg
pop
ins
mov
push
in
sub
push
mov
and
mov
pop
mov
push
sbb
adc
adc
sbb
sbb
dec
(bad)
pop
or
or
dec
cmp
add
or
sbb
div
(bad)
jmp
sbb
sbb
cmps
fistp
cs
pop
inc
push
nop
fmul
cmps
and
inc
mov
fsub
fiadd
xchg
in
cdq
call
sbb
jmp
xchg
lods
cmp
cmps
fadd
add
pop
pop
mov
lea
repnz
pop
scas
xor
loope
sbb
adc
mov
or
sub
mov
add
test
xchg
adc
enter
push
daa
push
jo
sub
(bad)
in
inc
add
dec
or
js
push
sbb
sbb
and
fisubr
jle
inc
or
sbb
jl
jbe
add
mov
mov
popf
sbb
jmp
xlat
inc
adc
mov
add
and
loopne
(bad)
mov
adc
push
daa
sub
add
adc
adc
ins
or
test
nop
or
adc
fstp
sahf
ret
push
bound
sub
xchg
not
shl
xchg
int
test
jae
outs
in
popa
ror
test
lock
cmp
fs
mov
popa
or
push
dec
inc
jge
xlat
jecxz
clc
push
test
jne
pop
xchg
adc
dec
or
adc
pop
add
fs
inc
test
mov
scas
add
jns
mov
push
push
push
and
dec
lds
push
sbb
jg
pushf
(bad)
in
or
es
pop
dec
add
xor
mov
loope
mov
cmp
js
pop
fisttp
mov
push
adc
sbb
cmp
xor
lds
inc
imul
fucom
add
pop
imul
repz
add
jnp
jecxz
mov
movs
jne
adc
dec
and
adc
dec
push
stc
outs
fwait
add
iret
push
inc
xchg
mov
ret
shr
clc
or
inc
gs
or
daa
retf
clc
(bad)
test
push
fimul
or
mov
xchg
mov
(bad)
xchg
rcl
inc
or
inc
adc
test
fistp
fsub
sbb
mov
xchg
fistp
cmc
or
jne
mov
stos
and
xor
jo
jo
mov
loopne
test
sti
lods
sti
test
fild
xchg
sbb
push
lods
hlt
cwde
rol
adc
fadd
test
push
xor
scas
inc
push
(bad)
cwde
ds
les
xchg
enter
pop
and
or
jmp
add
adc
adc
mov
add
cmc
lds
or
rcl
(bad)
mov
mov
test
or
fadd
and
and
icebp
jle
bound
adc
in
fwait
xor
jno
jnp
sbb
test
adc
sbb
es
xchg
test
test
aaa
adc
dec
adc
sub
add
jge
xor
das
gs
pop
and
rcr
cwde
(bad)
(bad)
sbb
xor
sub
shr
mov
xlat
and
pop
jge
ins
or
ja
bound
sub
xchg
xchg
call
sub
sub
inc
sbb
retf
(bad)
js
(bad)
sub
sbb
fs
mov
jne
(bad)
leave
push
popa
and
mov
push
retf
jle
es
ins
push
add
js
and
add
mov
or
pushf
gs
clc
enter
(bad)
popa
std
mov
pop
ins
ret
push
or
and
cs
sahf
int
adc
xor
inc
push
das
xor
jne
or
out
ins
inc
sub
push
test
push
dec
cdq
adc
adc
sbb
in
mov
fiadd
sbb
arpl
fsub
div
test
in
push
inc
(bad)
cmp
mov
fadd
jmp
and
mov
iret
add
aam
clc
lea
push
arpl
inc
lahf
mov
or
lock
retf
sbb
sbb
mov
aas
nop
jns
add
jge
jge
sub
sub
xchg
pusha
sbb
pop
popa
mov
and
mov
stos
or
jl
mov
(bad)
jl
jo
inc
outs
mov
sbb
popa
test
jl
mov
sbb
xor
dec
or
test
inc
popf
lock
adc
or
add
xor
mov
pop
lock
jle
enter
push
sbb
add
call
sbb
xchg
sbb
xor
loope
sub
sub
add
mov
pop
push
or
test
sar
mov
sbb
addr16
jg
dec
add
xor
sbb
or
or
pop
sbb
mov
and
adc
inc
dec
or
inc
mov
or
test
push
sub
xor
ins
fsubr
shl
mov
inc
xchg
fbld
xor
jmp
mov
adc
or
jnp
adc
sub
paddsb
and
inc
aam
rol
jbe
cmp
scas
stos
dec
push
or
or
ret
ror
enter
nop
jg
sti
mov
push
push
add
cmp
cmp
or
and
mov
push
dec
xor
adc
jne
data16
movs
bound
xchg
adc
adc
mov
xchg
rol
call
gs
add
(bad)
in
fdivr
aam
xchg
adc
fcom
and
out
and
jl
out
add
cmp
test
push
add
xchg
data16
xchg
lods
sbb
ds
fsub
cmps
dec
cli
add
inc
inc
cld
mov
dec
sbb
add
mov
ret
rol
ficomp
jno
jns
jge
push
add
dec
mov
push
push
push
push
xchg
sbb
sar
test
add
fld
loopne
fdiv
adc
mov
fsubr
mov
cmp
inc
cmp
sbb
pop
mov
leave
adc
or
test
pop
and
rcr
jno
mov
fdivr
pusha
inc
xchg
or
mov
xchg
jb
out
push
or
sbb
sbb
sbb
leave
out
movs
out
repz
mov
cs
ficom
pop
or
test
cdq
inc
call
push
add
mov
aam
and
aam
aas
jne
shr
test
jne
push
xchg
sbb
call
cs
mov
aad
das
adc
stos
xor
inc
shl
inc
xor
les
mov
jne
rol
fiadd
test
cwde
lock
jnp
(bad)
aaa
and
(bad)
ror
mov
pusha
pop
mov
bound
jno
sbb
sub
fcos
sbb
stos
cmp
mov
xor
rcl
fmulp
push
(bad)
mov
aas
xor
push
mov
sti
dec
cs
mov
pusha
bound
xchg
lea
adc
out
sub
mov
lea
inc
(bad)
daa
pop
sub
jnp
lea
mov
adc
mov
xchg
xchg
cdq
and
pop
and
jmp
lds
push
mov
sbb
xor
or
not
sub
xchg
and
pop
arpl
and
je
adc
lea
and
test
psllw
sub
sub
pop
popa
mov
push
sti
jmp
xchg
out
xor
dec
adc
or
adc
or
adc
or
push
add
add
and
sub
xor
scas
and
add
mov
add
popa
or
xchg
sbb
call
call
mov
push
movs
leave
inc
lods
sbb
jne
sti
movs
cmp
adc
rcl
test
sbb
adc
cmps
add
push
punpckhdq
adc
jne
push
pusha
pop
and
sub
push
imul
lock
std
push
call
dec
fst
xor
int3
jg
or
mov
call
sub
mov
dec
or
adc
clc
out
ror
jo
retf
add
mov
lds
add
jo
push
cmps
dec
jo
aam
pop
adc
xor
cwde
xor
loopne
or
sar
ja
push
nop
jae
xchg
dec
push
div
mov
sbb
xor
or
adc
cmps
aaa
and
dec
aad
push
sub
push
ret
icebp
or
or
pusha
cmp
fadd
and
add
xor
pop
add
push
jecxz
ret
das
dec
xor
jl
pusha
(bad)
ins
or
jle
jne
paddd
inc
pusha
jmp
cmp
mov
cmp
pop
push
(bad)
fs
in
xchg
rcl
imul
dec
push
push
add
sub
stos
clc
(bad)
(bad)
or
(bad)
push
or
retf
mov
xor
js
add
fadd
adc
xchg
data16
jl
sub
add
dec
inc
fimul
aaa
fbstp
cmp
or
mov
push
xchg
movs
inc
leave
and
and
(bad)
push
test
push
test
xor
and
inc
or
enter
push
push
xor
and
sbb
mov
add
adc
pop
adc
adc
lods
or
inc
cmp
and
out
sub
into
push
push
push
mov
push
ja
mov
adc
inc
or
mov
dec
inc
add
xor
push
push
adc
add
(bad)
or
sbb
mov
add
xor
or
push
fadd
hlt
setno
pop
out
pushf
cmp
movs
pop
fcmovb
xlat
ins
inc
nop
aad
dec
mov
outs
inc
or
add
js
ror
sbb
mov
in
clc
gs
pop
mov
call
aaa
dec
das
or
add
push
adc
sbb
test
push
pop
mov
jge
daa
je
retf
setb
pop
xrelease
cmp
push
leave
or
movs
sub
mov
or
adc
dec
mov
js
sub
nop
cmp
adc
cmp
int
jmp
outs
add
mov
adc
das
add
xchg
(bad)
out
int3
cmc
fs
inc
sub
ret
add
add
mov
lea
aaa
xor
mov
pop
adc
call
or
add
push
or
rol
movs
movs
jmp
sub
enter
xor
sub
scas
push
xchg
push
pusha
repnz
cmp
sub
pop
and
jge
add
sub
adc
cmps
mov
push
mov
mov
stos
jge
xor
fs
jne
imul
jbe
ret
(bad)
sahf
and
mov
xchg
mov
and
xor
push
mov
lock
mov
or
fadd
push
icebp
push
pop
inc
add
ror
mov
mov
adc
movs
outs
les
fistp
inc
pop
enter
adc
pusha
xor
mov
leave
add
adc
pushf
sub
mov
add
adc
adc
dec
xor
or
lods
out
mov
nop
inc
and
mov
and
push
jne
and
mov
or
mov
and
shl
(bad)
or
jmp
sbb
repnz
fistp
xor
inc
adc
xor
rcr
nop
loopne
loope
xor
sub
mov
loope
mov
ins
xor
sbb
or
iret
push
nop
idiv
and
lock
rcr
mov
jl
adc
dec
jb
or
fs
inc
add
push
add
sbb
shr
cs
in
mov
fsubr
rcl
out
jbe
or
sar
pop
push
nop
nop
arpl
mov
jbe
in
fcmovb
dec
sub
add
push
mov
shl
and
outs
aad
movs
cmp
sub
stos
fwait
push
inc
pop
in
push
cmp
sub
pop
add
push
add
sar
dec
rcr
jno
retf
inc
rcl
mov
sub
sti
sub
mov
push
dec
jnp
add
mov
mov
mov
sahf
mov
ss
push
cmp
adc
push
pop
sbb
mov
rcl
sbb
xor
inc
jecxz
gs
push
sub
adc
xchg
mov
ins
pusha
push
lahf
mov
scas
out
adc
mov
sub
cdq
in
cld
or
sbb
xor
xchg
das
movs
adc
and
test
push
and
int
adc
add
and
movs
mov
movs
and
stc
dec
xor
cmps
inc
test
cmp
lods
test
mov
lea
sbb
mov
ror
loopne
xchg
xor
ret
sub
cmp
mov
xor
out
fwait
mov
dec
iretw
test
xchg
dec
bnd
xor
xor
mov
mov
pop
fisub
xor
lods
sar
fisttp
jbe
add
sbb
dec
test
mov
pop
loopne
xor
cmp
add
add
outs
out
pop
scas
ret
movs
and
and
ret
xchg
or
dec
rol
adc
out
bound
push
inc
pop
sbb
adc
or
sub
inc
sbb
test
cmps
loopne
call
jb
push
das
ja
mov
ins
cmovb
das
push
shr
movs
pop
fcomp
or
add
push
cli
fild
sbb
push
mov
stc
ror
mov
mov
jne
add
push
nop
aaa
fwait
and
mov
movs
lock
movs
rol
cli
ret
dec
hlt
and
cmp
push
mov
jno
pop
inc
mov
ins
push
fsubr
inc
jns
or
xor
xchg
(bad)
push
ins
inc
scas
jmp
jecxz
enter
call
sbb
mov
pop
adc
cld
jnp
inc
mov
in
hlt
push
int3
ins
mov
ret
sub
push
cmp
les
or
out
ret
add
sbb
adc
inc
fcomp
enter
or
retf
loopne
in
movs
push
xor
aad
loopne
test
jle
lods
shl
mov
add
or
lods
xchg
and
adc
pop
call
jo
dec
sub
(bad)
lahf
popf
jns
pop
and
test
sbb
and
mov
or
arpl
rol
lods
movs
rol
jb
aas
xor
xlat
or
sub
push
inc
sar
data16
int
in
or
sti
leave
xor
add
test
lds
in
push
and
add
sbb
or
out
xchg
add
inc
test
add
add
call
xor
les
and
idiv
cmps
mov
push
fs
(bad)
repnz
push
icebp
add
push
jp
sbb
addr16
pop
fbstp
adc
push
xor
mov
sub
cmp
xchg
adc
dec
dec
mov
mov
xor
mov
sbb
test
pushf
mov
js
cmp
inc
aam
dec
jb
xchg
push
pop
cmp
mov
xchg
sbb
ds
out
mov
or
sbb
add
mov
outs
push
jo
xor
dec
adc
inc
cmp
je
nop
jle
xchg
sub
adc
push
div
dec
pusha
cli
and
and
int3
push
mov
or
test
sti
test
pop
push
shl
jne
jo
pop
test
pop
jbe
sbb
sbb
lea
fcom
xor
ins
movs
(bad)
das
mov
mov
cs
(bad)
inc
xchg
xor
xchg
cmp
dec
push
cmp
pop
inc
(bad)
mov
imul
mov
adc
fist
xor
pushf
adc
mov
sub
lds
add
push
movs
aaa
pop
xor
(bad)
xchg
(bad)
clc
or
repz
cmps
repz
ja
jns
jno
mov
jmp
dec
mov
mov
test
fcmovnbe
dec
push
lods
daa
or
shr
cmp
popa
popa
add
test
fisttp
movs
jg
ds
sbb
mov
loop
mov
cmps
sar
xor
jno
dec
pop
mov
mov
mov
pop
mov
out
das
jecxz
mov
pop
xor
sbb
retf
mov
test
into
outs
lock
fbstp
push
jo
sub
push
nop
fucomi
dec
call
push
pop
push
mov
add
add
clc
gs
rcl
scas
sub
xor
in
call
jmp
lods
inc
add
out
xchg
sbb
jo
push
add
push
nop
ss
iret
xchg
dec
sbb
or
and
jb
inc
rcr
retf
adc
movs
sub
pop
and
nop
sub
call
lock
and
stc
fmul
push
mov
adc
mov
xchg
dec
add
das
cmp
and
inc
sub
addr16
stc
movs
jns
push
push
sub
add
jo
sbb
loope
movs
add
jmp
mov
or
je
push
(bad)
sbb
lea
xor
add
out
ja
inc
jbe
lods
jns
inc
and
hlt
or
rol
push
push
adc
dec
or
xor
push
and
mov
xor
out
xor
dec
fcomp
push
hlt
pop
adc
xor
add
adc
mov
pop
inc
scas
clc
sub
jmp
pop
and
cmp
push
xor
and
leave
lock
imul
mov
(bad)
mov
sub
cmp
pop
sti
test
mov
or
dec
xor
push
bnd
xor
xchg
dec
stos
test
add
adc
aaa
es
rol
mov
pushf
stc
js
fs
mov
adc
or
or
sub
call
add
test
dec
pusha
and
sub
mov
or
and
add
(bad)
jge
jnp
pop
sub
sub
add
and
add
outs
xor
push
adc
shl
or
mov
retf
push
push
xor
inc
loop
or
shl
ins
add
push
mov
adc
rcr
bt
and
cmp
and
int3
sbb
pop
cmps
push
adc
movs
movs
fimul
xchg
add
ja
data16
sbb
js
push
lock
out
movs
xchg
int
push
mov
mov
cmp
and
ret
jne
mov
out
jo
int3
mov
inc
xchg
sbb
pop
and
sub
rol
fsubrp
adc
cli
pop
mov
or
mov
inc
ss
and
lods
adc
shl
ret
lods
or
add
shl
(bad)
lock
adc
xor
inc
mov
xchg
fadd
addr16
or
dec
pop
out
hlt
pop
and
add
pop
push
cli
inc
adc
push
and
inc
push
imul
pop
jmp
push
or
(bad)
mov
jle
mov
retf
int
push
shl
or
mov
push
lock
add
push
add
or
add
add
inc
inc
outs
or
shl
enter
xor
dec
iret
mov
pop
call
xchg
mov
dec
pop
ins
mov
or
mov
stc
test
mov
xor
inc
test
pusha
ret
std
push
call
cwde
and
lock
dec
(bad)
dec
sub
and
in
or
pop
push
or
xor
push
sub
and
inc
and
fmul
sbb
fadd
mov
mov
cmp
add
jae
jle
inc
add
(bad)
jbe
push
gs
(bad)
sar
sub
mov
sub
xchg
add
pop
push
push
cwde
imul
push
dec
sbb
push
inc
add
cs
sbb
add
adc
xor
cmp
pop
in
xor
je
add
or
lea
and
and
imul
pop
(bad)
sbb
xor
and
dec
pop
popf
push
call
hlt
fsub
add
ins
adc
cld
xor
imul
in
call
mov
xor
sbb
xor
bound
retf
dec
jnp
adc
fs
sub
mov
and
adc
and
in
and
xchg
pop
call
add
xor
test
sub
(bad)
popa
call
and
aam
cmp
push
pop
movs
leave
dec
push
sub
inc
push
fdiv
adc
sub
add
adc
leave
mov
std
lock
jne
(bad)
pop
add
and
or
in
jb
add
and
jmp
test
or
jno
xor
shr
out
into
add
adc
add
xchg
scas
sbb
mov
add
mov
sub
in
and
cmp
daa
mov
aam
mov
ds
out
shl
adc
dec
cmc
xchg
js
scas
rol
add
loop
sub
sbb
sub
xchg
lea
sub
aaa
and
jmp
aaa
sub
mov
cmp
sbb
sbb
push
gs
loop
inc
mov
push
pop
add
loopne
enter
mov
sahf
dec
sub
lds
add
enter
rcr
icebp
aaa
outs
mov
in
sbb
xchg
clc
es
adc
mov
jae
das
adc
fbld
loope
jnp
push
bound
push
pop
sets
mov
data16
cmps
inc
ror
cmp
cmp
sbb
ins
lods
inc
or
lods
xor
mov
je
cmp
test
mov
adc
repnz
mov
add
sbb
les
fwait
int3
jg
add
jl
xor
cmp
jnp
pop
add
(bad)
push
ret
fwait
in
outs
or
or
and
xor
or
movs
add
cwde
rcr
push
push
sti
lock
sbb
jo
jg
rol
mov
mov
dec
les
repnz
sub
jne
shl
mov
test
shr
mov
push
xor
dec
(bad)
jnp
inc
in
or
and
mov
jns
mov
leave
cmp
sub
add
sti
cmp
sub
(bad)
and
xchg
xchg
jg
pop
push
neg
jmp
(bad)
rol
out
mov
iret
and
sub
add
stos
or
inc
(bad)
pop
sbb
push
push
add
adc
aaa
leave
pop
call
iret
mov
test
pop
cmp
and
test
mov
lahf
add
lock
retf
cmps
(bad)
les
and
(bad)
sar
xchg
or
pusha
ror
aas
jge
add
pusha
cmp
in
in
mov
pusha
lods
mov
sbb
lock
movs
and
call
sbb
loope
adc
inc
rol
dec
add
scas
sbb
cwde
jne
adc
or
add
inc
nop
fcmovnbe
adc
sub
js
add
and
cwde
pop
lea
and
adc
dec
in
lea
addr16
out
mov
inc
sub
xchg
add
scas
cmc
jmp
pop
or
in
push
add
cmp
and
ret
push
add
sbb
retf
adc
sub
sbb
sbb
inc
mov
dec
jmp
in
mov
dec
adc
test
sbb
in
mov
rcr
add
idiv
xor
js
or
pop
mov
cmps
sbb
mov
mov
push
stc
ror
sar
pop
xor
xchg
push
dec
add
ret
into
and
bound
push
and
sti
test
mov
sbb
inc
test
xor
jmp
pop
inc
mov
xor
call
xor
jmp
dec
enter
test
inc
cs
inc
call
adc
pusha
inc
inc
inc
push
mov
mov
sub
aas
call
dec
jns
push
push
dec
test
js
nop
movs
add
xor
add
and
pop
xchg
add
pusha
movlps
cmp
and
dec
xor
xor
xchg
or
pop
aaa
lds
ror
fistp
dec
inc
mov
(bad)
dec
mov
mov
mov
or
lods
pop
fs
and
adc
sahf
sbb
(bad)
jl
nop
and
xchg
xchg
or
adc
and
adc
cmps
jae
jp
sbb
adc
inc
popa
inc
test
inc
bound
ficom
popf
dec
sub
xor
sbb
in
dec
mov
and
fwait
imul
(bad)
adc
dec
in
in
sti
sub
inc
mov
cli
adc
sbb
adc
jl
push
call
and
ins
push
or
dec
retf
jge
aad
inc
add
mov
popa
pop
sbb
adc
sbb
jle
jne
movs
sbb
movs
lahf
mov
jnp
sub
outs
adc
or
inc
cdq
fsub
or
movs
or
pusha
add
test
frstor
mov
loope
dec
sub
cmp
(bad)
and
inc
xchg
bound
xor
adc
cmp
jne
mov
or
idiv
jmp
adc
push
push
ret
jle
cmovae
inc
test
rol
mov
int
sub
or
je
add
inc
sbb
jbe
shr
xor
jne
loope
inc
cwde
cli
lods
mov
ficom
ja
xor
into
lods
push
and
je
ret
fisub
jge
add
jg
mov
rol
adc
sub
or
or
sbb
rcl
adc
jnp
mov
push
leave
jo
or
lock
push
add
add
mov
push
push
ret
fld
add
inc
int3
jmp
pusha
push
rol
push
add
dec
dec
fsubr
test
inc
push
aam
mov
dec
loope
inc
jecxz
test
das
add
test
pop
xlat
or
inc
pop
mov
lahf
rol
dec
mov
and
mov
mov
pop
cwde
je
pop
inc
inc
push
cmovs
mov
loope
mov
adc
inc
stc
dec
jno
inc
inc
adc
sub
xor
mov
sub
sbb
add
mov
jbe
call
imul
mov
mov
dec
out
lods
and
adc
mov
jo
sub
cmp
out
push
inc
add
lea
xchg
cld
push
and
test
cmp
jne
xchg
lea
pusha
or
popa
pop
add
adc
sbb
adc
cwde
add
mov
dec
and
mov
dec
or
in
retf
dec
add
mov
js
xchg
inc
test
pop
js
adc
loop
dec
mov
cmps
je
fcmovb
pop
push
sbb
and
mov
imul
dec
and
cmp
add
mov
dec
arpl
or
dec
add
mov
dec
dec
stos
push
sub
xchg
jo
std
xor
mov
fwait
bound
pop
and
rcl
mov
daa
addr16
mov
xchg
mov
adc
ins
push
jo
jl
call
daa
dec
xchg
cmp
ds
shl
add
fs
sbb
and
or
push
pusha
fdivr
rol
dec
mov
mov
adc
sub
daa
push
imul
pusha
ins
add
inc
loopne
sbb
test
mov
fwait
popa
pop
imul
or
loopne
inc
rol
xchg
int3
push
inc
cdq
add
ins
bound
mov
or
push
mov
or
inc
sbb
jecxz
aad
stos
pop
cmps
jne
mov
mov
ror
ror
out
sti
cmps
dec
jmp
xor
or
mov
jmp
inc
enter
cmp
inc
inc
push
push
fist
dec
jmp
xchg
or
sbb
xor
or
pusha
sbb
dec
add
pushf
xchg
pop
lea
or
sub
push
lds
xchg
dec
(bad)
hlt
cmp
test
pop
fcomp
mov
jne
add
adc
popa
sbb
lods
test
adc
adc
cdq
(bad)
xor
jmp
ja
dec
mov
shl
inc
js
adc
push
sbb
and
cmp
adc
retf
adc
add
fadd
sub
cmp
jmp
pop
add
jg
and
mov
xchg
mov
fadd
inc
imul
mov
adc
pop
dec
add
or
fdivr
mov
shl
pop
xchg
lahf
mov
dec
js
ds
cmp
pop
sub
mov
aad
lock
inc
push
aaa
movs
or
js
dec
dec
movs
pop
movs
and
xchg
fist
push
(bad)
mov
add
push
and
pop
push
xchg
mov
push
or
lea
adc
push
mov
rol
mov
icebp
adc
arpl
sub
call
xchg
dec
inc
ror
adc
cmps
leave
nop
dec
cmps
sbb
(bad)
fidivr
mov
into
xchg
test
add
mov
xor
xchg
ja
and
fsub
test
and
cmp
mov
inc
or
inc
xor
jmp
or
adc
iret
or
inc
and
mov
int
rcl
pop
inc
adc
push
dec
cmps
scas
push
mov
nop
add
xchg
pushf
pushf
movs
aam
xchg
ret
jnp
pop
sbb
inc
lods
lods
xchg
add
adc
loop
stos
test
jge
dec
mov
in
pop
add
dec
lahf
pop
ret
clc
push
dec
mov
xor
push
(bad)
dec
push
lea
jno
inc
ficom
lock
xchg
sbb
xchg
into
lahf
ds
cmovl
inc
ss
mov
and
ret
mov
push
cld
pop
fcom
and
cmp
outs
cwde
pop
adc
loope
mov
pop
lea
dec
mov
pop
or
inc
xchg
and
lea
mov
sub
push
rol
pop
push
ins
retf
add
adc
fisub
pop
or
or
sbb
sbb
fmul
rcr
sub
and
sbb
mov
lea
arpl
dec
daa
inc
or
(bad)
xchg
push
(bad)
cmp
jne
or
je
jg
add
push
retf
push
ss
add
mov
add
js
inc
call
push
pop
shl
(bad)
cmps
retf
fndisi(8087
dec
es
or
sbb
(bad)
fcomp
and
lock
mov
add
je
add
pop
sub
xor
xchg
xor
cmp
or
and
into
mov
lods
enter
inc
call
add
aaa
pop
shl
or
lock
add
rcl
(bad)
pop
xor
or
mov
or
fcmovnb
mov
sbb
lea
xchg
scas
je
adc
push
xchg
mov
sbb
dec
addr16
movs
not
inc
xor
inc
xchg
dec
inc
xchg
sub
and
add
push
and
sub
inc
xor
pop
inc
shl
sbb
push
add
imul
xor
add
add
shl
jp
inc
xor
das
mov
mov
lods
pop
or
adc
mov
lods
adc
inc
mov
loopne
lea
and
inc
and
pushf
mov
rol
ror
xchg
inc
push
call
add
jns
les
div
sar
adc
mov
xor
sahf
adc
inc
cmp
mov
adc
mov
inc
das
mov
jne
bound
pop
cwde
in
loopne
sbb
dec
mov
push
sub
pop
inc
loopne
mov
pop
or
xchg
xor
dec
dec
sbb
push
jle
jle
ret
cdq
aaa
adc
sub
and
dec
jne
mov
mov
rcl
ins
sub
pop
pop
dec
sbb
mov
xchg
adc
sub
jmp
gs
xor
scas
push
popa
pop
mov
mov
in
sbb
inc
add
or
push
dec
inc
daa
psraw
add
push
wrmsr
xchg
test
pop
push
dec
add
sub
jge
mov
inc
mov
mov
push
dec
push
pop
rol
jg
(bad)
in
sbb
push
ror
or
bound
dec
adc
adc
and
sbb
sub
sbb
and
imul
sbb
loopne
mov
xchg
addr16
cmc
clc
adc
add
cmp
or
jp
push
adc
cwde
xor
inc
ds
push
mov
xor
push
jo
call
test
sbb
mov
leave
dec
cmps
dec
ss
and
sar
mov
push
cmps
rcl
leave
lock
ror
aad
movs
mov
sub
ret
xor
addr16
cmp
mov
add
dec
dec
xchg
mov
call
inc
adc
push
push
inc
lea
adc
aaa
popa
test
inc
outs
add
add
mov
cmp
lods
adc
mov
pusha
jmp
sub
push
sbb
inc
ss
jmp
call
(bad)
rcr
or
jp
call
mov
fadd
mov
loope
inc
mov
or
ins
inc
push
mov
es
mov
xchg
push
push
sub
addr16
jmp
pop
aas
enter
das
int
jmp
add
aas
in
nop
add
mov
xchg
fst
gs
mov
xchg
adc
xchg
cwde
push
and
xchg
dec
test
test
mov
xor
and
and
enter
xchg
dec
and
cwde
cwde
pop
enter
cwde
cwde
or
dec
cwde
and
cmp
sbb
cmp
icebp
jne
and
adc
pusha
sbb
test
je
cmp
test
xor
inc
jo
add
and
cmp
add
inc
pop
sub
pop
icebp
movs
push
div
push
mov
adc
sub
pop
scas
cmps
mov
mov
or
mov
sbb
adc
inc
sub
test
fmul
in
inc
jecxz
add
adc
cwde
cwde
repnz
xchg
mov
aaa
div
adc
fs
xor
leave
inc
xchg
xchg
nop
add
dec
push
adc
jl
pop
or
inc
xchg
lea
popa
shl
dec
push
jmp
pop
test
ret
shr
out
fbstp
xor
add
nop
xchg
adc
sub
inc
nop
test
xchg
test
sbb
jp
inc
mov
inc
add
jp
and
test
or
or
daa
pop
stos
inc
or
dec
pusha
cmp
gs
and
push
mov
cmp
jle
mov
pop
test
fs
aam
stos
or
push
or
mov
push
es
push
inc
js
inc
cmp
fcomp
or
and
pop
add
adc
sbb
add
inc
dec
xchg
int3
pop
dec
pop
push
pop
adc
repnz
test
pusha
into
data16
mov
dec
or
aaa
in
mov
and
movzx
inc
or
xchg
inc
fs
test
cwde
sar
test
and
cmp
inc
inc
pop
idiv
or
inc
gs
shr
ja
pop
cdq
nop
inc
leave
mov
lods
sub
cmp
adc
(bad)
pop
add
fmul
popf
xor
jne
shr
pusha
imul
ja
inc
sub
adc
enter
add
mov
add
jae
inc
sbb
outs
push
and
mov
in
push
lock
or
out
cmp
or
lock
ds
scas
fst
ins
ror
mul
add
jge
mov
or
mov
adc
fild
mov
pop
cli
(bad)
loop
in
inc
mov
add
cdq
and
dec
jmp
xor
pop
push
adc
jp
jne
push
cli
dec
idiv
movs
sar
loope
out
out
or
pop
scas
into
add
std
aaa
imul
sbb
rol
jo
ds
and
in
bound
fisubr
or
sbb
or
fdivr
dec
fld
dec
inc
fist
or
fisub
sub
mov
xchg
cmp
xchg
add
jecxz
mov
push
or
sbb
xchg
cwde
(bad)
xchg
mov
and
mov
push
shl
mov
pop
xor
mov
fcom
fcom
test
mov
mov
gs
add
adc
mov
sahf
xor
jmp
dec
imul
xchg
movs
les
sbb
jo
push
push
in
add
fiadd
xor
movs
pop
sbb
in
jp
test
leave
jmp
push
lock
jns
call
(bad)
lods
pusha
imul
retf
mov
sbb
or
movs
or
movs
sbb
je
(bad)
test
push
sbb
inc
push
call
test
cmp
scas
in
inc
adc
shr
jl
fmul
pop
mov
mov
push
das
movs
pop
ret
xor
pusha
pusha
or
shr
outs
pusha
pop
fs
jmp
das
or
or
fst
fstp
pusha
sub
xor
push
cld
bound
repz
add
or
add
fsub
out
es
dec
pusha
inc
add
xchg
add
inc
test
or
push
xor
fild
popf
add
pop
mov
bound
mov
cmp
pop
rcr
stc
push
or
sbb
clc
ss
aaa
sub
repz
and
out
jp
ins
jmp
rcr
fxch
in
mov
push
jae
inc
mov
fidivr
sbb
fcom
inc
ret
adc
or
push
frstor
mov
or
add
loopne
sbb
test
js
pop
sub
dec
sbb
loop
pop
xor
mov
fld
fdivp
fst
retw
fsub
cmp
in
rcr
ss
xchg
mov
pop
xchg
inc
xchg
stos
icebp
call
icebp
pop
fsubrp
pushf
fisttp
push
lock
fmulp
das
leave
push
fdiv
outs
out
xchg
fstp
fld
xchg
imul
push
cmp
retf
and
mov
jae
retf
inc
mov
addr16
xchg
cmp
aam
stc
and
outs
jmp
rcr
test
push
test
inc
std
dec
scas
(bad)
imul
fist
jno
or
aam
ret
inc
mov
jmp
in
rol
nop
jo
aam
pop
pop
push
mov
fstp
rol
add
add
sbb
les
push
enter
cmp
lock
hlt
xor
fadd
nop
int3
pop
das
clc
nop
mov
xlat
out
push
fdiv
push
cmc
cmp
or
lock
pop
hlt
pop
or
push
test
int
pop
cmp
cmp
aam
aam
dec
jmp
push
loope
or
pop
adc
movs
or
popa
jo
mov
or
jle
add
pop
add
ficom
adc
clc
mov
mov
data16
shr
mov
jmp
je
or
push
cmp
jb
dec
sub
fmul
sahf
xchg
xchg
mov
outs
out
pop
fmul
dec
imul
or
les
pop
pop
pop
and
mov
popa
imul
inc
add
add
push
das
aad
inc
arpl
lds
dec
jge
dec
sbb
mov
inc
cmp
je
clc
sbb
sbb
inc
adc
xchg
inc
(bad)
jle
dec
loopne
push
inc
or
(bad)
aam
jae
inc
lods
jp
outs
inc
jno
leave
outs
xor
dec
dec
cmps
dec
js
je
mov
(bad)
loop
int
adc
cwde
pusha
cmp
xor
inc
inc
shl
and
in
push
aam
or
test
lods
sbb
adc
int
xor
sub
lock
jge
call
or
aam
fs
hlt
sbb
icebp
icebp
cli
(bad)
add
not
or
in
jmp
pop
(bad)
or
cmp
jbe
push
mov
mov
or
sub
inc
pusha
pusha
iret
dec
jbe
repnz
rcl
xor
imul
jle
sub
loop
mov
lock
movs
enter
cmp
or
push
cmp
cmp
sbb
arpl
movs
loope
out
inc
add
jp
ficom
inc
imul
and
mov
clc
jo
ret
push
mov
xor
mov
rol
loop
adc
in
push
dec
mov
jmp
mov
mov
jne
fwait
outs
sti
inc
adc
push
imul
dec
fcmovnb
adc
outs
call
mov
mov
or
adc
ds
dec
sub
mov
sub
push
push
icebp
pop
add
xor
push
and
sub
push
inc
jo
push
sar
lods
add
fbstp
adc
ret
dec
mov
and
sbb
sbb
push
add
inc
sub
imul
or
inc
sub
sub
sub
xchg
cmp
jo
dec
ror
xor
cs
mov
push
mov
or
or
pop
inc
inc
arpl
shr
shl
cld
sub
pop
jmp
push
(bad)
sub
adc
leave
xor
or
pop
and
sub
ror
sbb
push
push
lock
ret
add
lods
call
xor
fs
out
mov
(bad)
and
adc
cmc
mov
add
inc
jnp
push
imul
jno
out
push
outs
test
xor
cmp
jns
imul
das
jmp
push
push
test
jle
in
add
imul
adc
xchg
test
loopne
and
inc
mov
sbb
or
mov
mov
neg
es
stos
push
jp
add
mov
jae
mov
das
mov
outs
sbb
mov
push
mov
jb
cli
(bad)
mov
or
(bad)
sbb
jp
and
sbb
retf
inc
push
loopne
xchg
xlat
and
scas
in
out
aad
sar
adc
jl
ror
in
ret
pushf
test
jb
push
and
pop
and
loop
and
sbb
adc
sub
mov
int
in
retf
inc
mov
inc
jnp
ror
in
push
cmp
mov
or
jae
js
sub
pop
and
jne
pushf
cmps
je
(bad)
jae
dec
cmps
(bad)
push
test
push
(bad)
sub
lahf
sub
out
ror
ror
pop
ret
ror
inc
and
fscale
xor
fldcw
xchg
out
fcom
xlat
add
sub
jmp
xor
mov
mov
sbb
cmp
xor
or
ins
fcomp
jo
imul
push
in
in
pop
imul
xchg
and
and
rcl
dec
push
cld
xchg
adc
sbb
aam
and
rol
cmp
xor
lahf
call
test
mov
sub
lock
dec
jno
and
mov
mov
add
adc
and
xchg
or
and
mov
mov
inc
sar
cdq
dec
rcr
pop
pushf
lea
xor
aam
dec
xor
ds
sub
push
xchg
leave
adc
leave
hlt
jl
xchg
dec
ret
adc
sbb
enter
aad
lods
leave
lods
inc
fcomp
xor
dec
mov
mov
lods
out
int3
mov
imul
imul
jb
pop
mov
jmp
jmp
or
sbb
ret
xchg
int3
add
dec
lahf
cdq
int3
sar
mov
xor
std
(bad)
neg
lea
or
in
rol
dec
push
and
push
movs
mov
mov
dec
rcl
movs
add
mov
ss
dec
mov
adc
jmp
xchg
mov
mov
sub
ret
mov
push
jle
push
dec
stos
fadd
call
pop
jne
fisttp
lds
jle
enter
sahf
xchg
sbb
in
add
mov
lods
xchg
mov
cwde
sub
add
mov
cmp
out
sbb
mov
or
dec
add
adc
pusha
mov
add
inc
cmps
call
cwde
push
outs
mov
mov
dec
xchg
nop
adc
xchg
sub
dec
add
sub
mov
sahf
mov
push
pop
or
movs
or
add
inc
mov
lds
pop
retf
pop
out
mov
xor
aad
jns
cmp
mov
push
push
add
call
sbb
scas
or
sub
int3
add
repz
enter
sub
mov
ror
sar
xor
push
pop
loopne
mov
mov
sbb
loope
adc
cmps
add
and
movs
test
aam
daa
inc
fldz
push
push
mov
add
sahf
int3
jnp
or
stc
sub
add
mov
(bad)
add
jb
inc
pushf
jno
jb
loopne
cmp
repz
add
test
cdq
loopne
retf
and
or
fsub
ret
push
add
sbb
mov
mov
cmp
enter
pushf
call
call
push
jmp
cli
push
adc
shl
push
(bad)
out
add
jmp
or
sub
js
jle
mov
or
pop
push
movs
je
mov
add
paddusw
push
adc
or
xor
or
sbb
add
lahf
and
sub
mov
add
xchg
lods
add
and
jb
pop
je
dec
jmp
stos
cmps
shr
adc
add
rcl
mov
push
popa
call
adc
(bad)
cmp
or
sti
add
shr
int3
data16
ret
cmp
data16
dec
(bad)
sub
pop
pop
int3
shl
inc
push
add
xor
clc
aam
inc
add
ins
ss
loop
or
loopne
fcom
pop
dec
jae
and
add
sar
sar
mov
adc
cld
adc
leave
xor
or
lock
xchg
je
xor
sub
dec
cmc
mov
inc
add
pop
stos
cld
inc
cwde
cli
adc
js
shr
and
dec
push
cwde
out
inc
lsl
add
pop
hlt
push
inc
dec
mov
pop
push
daa
leave
mov
(bad)
rol
pop
loopne
aam
lea
shl
je
ins
mov
or
outs
pop
add
es
jle
cld
sub
jne
adc
nop
shl
or
pop
xchg
sbb
inc
xchg
jge
jo
je
mov
dec
adc
jbe
xchg
mov
push
jae
xor
in
mov
xor
ror
jno
sbb
imul
test
xchg
ins
jmp
add
ror
ds
int3
cmp
inc
xor
movs
add
inc
sbb
and
(bad)
sub
sbb
pop
mov
loop
sbb
(bad)
gs
push
rcl
xchg
push
cmp
fwait
cwde
call
mov
iret
shl
lods
xlat
call
shl
fcomp
lea
loop
cdq
jecxz
movs
stos
and
push
ins
fld
(bad)
out
ret
jo
adc
adc
mov
popa
cli
fidiv
(bad)
jmp
pop
pop
sub
adc
add
loop
inc
cmp
or
cmp
dec
adc
add
or
outs
test
mov
pop
push
outs
or
jo
jb
pop
movs
adc
js
sub
push
bound
dec
pop
xchg
loope
(bad)
mov
cmp
(bad)
sbb
scas
nop
fstp
add
out
mov
test
fdiv
xor
xor
imul
mov
push
pop
sub
jle
or
sub
loop
inc
imul
push
mov
push
int3
int3
or
rep
pop
iret
push
into
into
fsubr
mov
dec
add
and
les
rol
in
les
sub
xchg
js
cmp
je
mov
int3
shl
mov
loopne
test
das
pop
pop
fdiv
inc
sbb
or
mov
adc
pusha
stos
fs
cmp
addr16
inc
add
fcomp
cld
(bad)
sub
jnp
pop
addr16
add
and
inc
and
loopne
test
ja
pcmpeqw
push
loopne
jo
cdq
popa
rol
sub
xchg
xor
pushf
loopne
push
test
cli
and
cmp
(bad)
cmc
jns
or
pop
(bad)
jne
daa
cmp
xchg
add
jmp
mov
movs
xchg
call
mov
out
jmp
sbb
push
xchg
ins
mov
adc
test
ins
or
pop
pop
sub
xchg
sub
sub
call
or
dec
push
ins
dec
dec
inc
or
or
pop
dec
sub
je
xor
inc
lods
xor
jp
jo
mov
sbb
pop
dec
sub
add
ret
je
mov
inc
shr
sub
sar
push
call
aaa
hlt
fsub
or
mov
in
stos
dec
add
neg
(bad)
xlat
std
add
call
push
inc
push
dec
movups
sub
ret
loope
adc
call
add
data16
repz
xchg
out
cdq
xchg
lds
dec
sub
xor
rcl
leave
mov
loopne
je
gs
mov
mov
inc
lea
mov
cwde
push
cmc
sbb
or
mov
rol
push
(bad)
mov
cmp
ror
mov
add
adc
arpl
loopne
push
loope
push
test
fcomp
nop
inc
es
outs
jo
mov
cmp
xor
adc
(bad)
in
int3
cmp
enter
inc
enter
inc
ins
or
cmp
pop
push
enter
aad
fcom
xor
push
out
xchg
sbb
pop
dec
inc
xor
(bad)
or
(bad)
pop
xchg
mov
sub
ins
dec
addr16
and
retf
jl
fld
lods
enter
aaa
(bad)
enter
test
pop
fild
jl
add
xor
imul
inc
jg
sbb
and
jl
fmul
jge
stc
mov
int3
jl
mov
adc
movs
add
jp
push
inc
rcr
nop
lods
xor
test
cmps
add
mov
retf
rcl
cmp
dec
jge
xor
(bad)
add
ss
add
or
fdiv
sub
sub
and
push
xchg
inc
je
and
inc
retf
outs
and
cwde
mov
ficomp
jmp
call
jg
xchg
cmps
aam
add
ret
fsubp
rcl
mov
mov
add
xor
call
jno
xor
and
push
pop
add
adc
mov
adc
lds
adc
push
ins
dec
or
imul
icebp
dec
stos
add
lods
call
push
pusha
or
fcomp
das
call
std
and
jno
pop
add
scas
mov
rol
mov
fnstcw
cmp
xor
inc
inc
mov
fiadd
push
push
mov
pop
pushf
in
test
icebp
pushf
cmp
sbb
dec
pushf
loope
xor
gs
jne
imul
push
repnz
push
cs
mov
or
sbb
imul
(bad)
aam
ffreep
sbb
cmp
call
mov
lea
or
push
and
adc
pop
push
mov
js
ret
sub
dec
enter
adc
dec
push
or
ret
push
les
add
add
xor
mov
aaa
and
add
push
mov
sub
shr
bnd
cmp
inc
jge
sub
dec
add
inc
xor
outs
xchg
adc
movs
aam
ficom
mov
or
adc
repnz
inc
lock
fs
mov
shl
add
repnz
int3
data16
cmp
mov
enter
pop
aam
popa
hlt
imul
(bad)
jmp
inc
push
push
pop
pop
lock
mov
shl
or
adc
ins
inc
adc
icebp
adc
je
mov
cmp
cmp
xchg
jbe
test
mov
cmp
je
push
test
test
push
jns
nop
pushf
cmc
or
ja
shl
mov
iret
rcr
push
pop
xchg
sbb
ins
test
fst
ret
and
pop
jp
(bad)
sub
fucomip
nop
adc
jge
cmp
mov
sbb
mov
fldcw
retf
in
out
push
int3
and
movs
adc
sar
dec
xchg
outs
pop
rcl
or
mov
pusha
fmul
fldz
lea
fnstenv
test
fld
dec
pop
(bad)
fiadd
fs
fld
sbb
mov
pusha
mov
push
add
cmp
xchg
fxch
push
push
jmp
pop
test
les
nop
or
xchg
mov
fiadd
cmc
pop
ficomp
sub
jp
test
sti
pop
add
mov
sbb
test
add
fadd
jne
enter
jl
pop
add
xor
ficomp
xor
jl
jne
shr
ret
sbb
push
sub
pop
xchg
and
stos
add
ins
mov
cmp
cli
popf
mov
adc
sahf
xor
or
(bad)
jg
mov
lock
dec
push
inc
je
sbb
retf
imul
pop
or
fdivr
push
retf
lea
mov
fild
sub
inc
mov
rep
neg
pop
or
call
fild
mov
das
and
or
in
fmul
cmp
and
cs
or
xchg
or
test
cmp
push
mov
xchg
xchg
cmps
and
shl
leave
and
lock
fsub
pop
dec
arpl
(bad)
imul
sub
int3
pusha
ins
or
lods
inc
lods
mov
push
sbb
jl
add
mov
mov
clc
and
enter
pop
mov
je
dec
bound
fiadd
movs
xor
inc
in
xor
clc
mov
rcr
in
sub
and
and
sbb
sbb
pushf
adc
inc
adc
and
push
jo
sbb
cmp
mov
rcl
das
mov
sub
leave
sbb
in
xchg
mov
sub
mov
lock
push
pop
pop
movs
(bad)
mov
xor
jmp
adc
pop
lahf
fs
adc
cmp
enter
xchg
popa
jno
sub
sbb
aas
or
or
sbb
dec
sbb
pusha
and
shl
push
add
out
push
lock
shl
rcl
and
retf
mov
mov
add
xor
ds
and
aam
adc
stos
push
inc
cdq
lods
loop
push
cmp
or
xchg
pop
jmp
adc
in
xchg
xchg
xlat
adc
fs
xor
loop
xor
adc
lods
inc
mov
and
dec
pusha
lock
inc
ins
gs
xor
dec
imul
inc
sbb
push
mov
push
xchg
fstp
push
inc
pop
aam
fmul
popf
adc
dec
cmp
inc
ss
in
call
(bad)
add
xchg
inc
sar
mov
sub
fmul
push
sub
add
mov
and
shr
dec
xchg
les
(bad)
cmp
xlat
add
push
lods
(bad)
cmp
xchg
loope
rol
aam
jne
xchg
inc
push
in
fadd
or
loopne
add
xor
mov
mov
inc
retf
pop
xchg
push
or
inc
xchg
stos
adc
pop
or
jecxz
jo
xlat
fsub
adc
test
and
adc
rep
lea
mov
jmp
ret
pop
sub
sub
cwde
dec
test
lds
add
inc
mov
jl
xor
or
iret
and
dec
call
add
mov
nop
sar
aad
pop
mov
jno
sub
or
sub
sbb
add
mov
(bad)
popa
iret
jg
cmp
shr
cmp
inc
sahf
jo
push
and
pop
in
repnz
dec
loopne
jo
(bad)
(bad)
push
or
inc
add
neg
sbb
and
test
mov
(bad)
jmp
retf
daa
and
call
push
add
imul
mov
mov
mov
mov
sar
rcr
ror
ds
mov
data16
test
jg
sub
add
push
push
pop
add
pusha
xchg
and
pop
lea
in
push
cmp
push
mov
push
and
fs
jbe
sbb
push
mov
mov
mov
rol
push
adc
mov
js
or
push
mov
pop
mov
add
or
or
pop
test
imul
add
add
ror
shr
inc
pop
adc
loop
or
xor
mov
les
add
push
inc
mov
mov
xor
pop
ret
jmp
stc
mov
mov
cvtpi2ps
pop
out
add
jl
dec
inc
outs
fcom
mov
call
mov
and
mov
dec
inc
je
jge
(bad)
sub
adc
clc
cdq
push
mov
sar
cs
clc
xchg
dec
cs
jg
mov
jnp
retf
mov
adc
push
(bad)
pop
sub
rcl
enter
fld
sub
inc
(bad)
mov
rcl
jbe
outs
aam
cmp
dec
fisttp
sti
data16
fisub
fdiv
pop
xor
dec
jmp
push
outs
sbb
push
cmc
mov
lods
cmp
and
mov
pop
test
jmp
mov
jle
inc
sub
icebp
je
xchg
jmp
and
out
dec
(bad)
xchg
out
or
jmp
leave
stos
lods
lods
jbe
and
in
gs
or
adc
sub
inc
inc
sbb
or
cmps
test
jmp
lahf
aam
and
xchg
dec
sub
js
repnz
mov
xchg
out
and
pusha
repnz
(bad)
inc
nop
jl
dec
add
jno
movs
out
add
mov
mov
sub
mul
xor
xor
cs
sub
cmp
cmp
repnz
inc
add
loope
test
inc
stos
sub
xor
add
dec
inc
das
jl
cmp
ins
push
sbb
mov
fwait
inc
std
push
xchg
sub
and
and
and
mov
leave
push
call
fs
xchg
mov
ret
xchg
jnp
mov
add
sbb
adc
ja
je
adc
ins
cmps
and
cmp
adc
movs
pop
inc
adc
dec
sbb
adc
movs
clc
push
pop
jns
shl
ret
sub
xchg
je
arpl
ins
in
adc
sbb
arpl
xor
dec
pop
adc
add
add
or
push
jb
(bad)
(bad)
mov
ror
lock
push
fist
iret
sahf
into
jnp
jo
dec
in
jp
add
adc
retf
lahf
cs
mov
jl
push
push
mov
je
inc
sbb
in
dec
pushf
pop
dec
and
cmps
movs
and
push
pop
mov
adc
test
xchg
test
jge
in
push
sbb
mov
xchg
aad
xchg
test
je
push
ret
pop
and
scas
pop
mov
mov
push
xor
ret
inc
not
ins
sbb
jo
cs
pop
comiss
add
lods
int
inc
pop
dec
mov
in
pop
cmps
loopne
inc
in
inc
cmp
push
cmp
leave
sub
sub
xor
lods
ins
mov
push
fisttp
pop
jle
aam
pop
push
iret
imul
and
and
js
add
inc
fldcw
cdq
nop
xchg
cli
adc
or
pop
sbb
push
or
inc
or
add
lock
fwait
jecxz
and
push
pop
cmp
fs
ds
bound
or
and
hlt
loopne
push
cmc
imul
jg
dec
sbb
leave
inc
mov
cmp
test
adc
fdivr
xchg
lahf
push
dec
pop
xor
sbb
fdiv
or
cmps
int
inc
cmps
xchg
lods
(bad)
(bad)
inc
(bad)
in
push
movs
fwait
pop
jg
inc
or
(bad)
enter
add
fdivr
inc
xchg
add
sbb
xor
jl
ret
pop
ret
xor
xchg
sar
jl
push
loope
adc
pusha
(bad)
mov
das
pop
mov
ret
dec
push
add
add
pop
push
out
in
dec
xchg
aaa
loopne
inc
cmp
add
or
das
or
or
xor
add
add
or
ret
(bad)
rol
and
dec
mov
cdq
cwde
or
mov
adc
mov
and
icebp
es
mov
add
mov
jae
scas
loopne
push
mov
test
or
pop
and
es
test
ret
cli
pop
and
xchg
and
in
jmp
sbb
js
in
push
mov
into
nop
mov
ins
and
clc
(bad)
jns
inc
sub
pop
mov
jb
mov
lea
cmp
sub
(bad)
mov
mov
sub
pop
add
xchg
fcomp
pushf
daa
jno
sbb
mov
or
or
add
popa
sub
cmp
add
mov
enter
pop
jae
sub
xor
or
fisttp
pop
pop
loope
dec
cmp
ficom
jno
jb
pop
mov
dec
pop
inc
sub
out
xor
icebp
adc
(bad)
enter
test
leave
into
(bad)
add
xor
inc
xchg
and
lahf
ficomp
push
mov
lock
into
cmc
pop
xlat
push
push
jae
jns
dec
dec
fs
and
xchg
push
inc
adc
pop
in
fadd
popf
cld
sub
mov
add
inc
adc
or
and
cmp
adc
(bad)
loopne
xchg
mov
retf
add
repnz
stos
push
into
pop
xor
and
rcr
and
push
lock
loope
mov
sub
rcl
sbb
std
lock
fdivr
lahf
into
jle
sbb
ds
pop
xor
mov
and
mov
les
adc
adc
mov
sbb
aad
lods
dec
or
hlt
mov
add
lea
cmp
xchg
in
mov
in
mov
sbb
push
push
jle
push
push
push
and
mov
push
xor
cmp
sahf
and
pop
movs
dec
loopne
inc
cmp
sar
fs
call
loop
xchg
sbb
and
das
dec
cmp
pusha
adc
mov
and
fild
mul
add
fistp
enter
jl
push
pop
inc
lock
lock
sbb
cmp
test
jge
adc
aam
add
inc
call
jnp
inc
enter
test
in
mov
sbb
add
pusha
sub
int3
sbb
pop
ror
inc
push
pusha
dec
add
pushf
fbld
icebp
lock
inc
(bad)
cmp
push
and
xor
repz
mov
fld
dec
or
dec
movs
sub
sbb
mov
adc
and
sbb
adc
sbb
and
shr
adc
cwde
in
lods
shr
add
aad
mov
xchg
(bad)
and
cmc
fnsave
and
or
push
lds
cli
loopne
adc
xor
rol
jmp
pop
cmp
stos
out
adc
mov
add
or
add
sub
aam
mov
and
pop
movs
jmp
cmps
pop
enter
xlat
pop
adc
and
fmul
nop
pop
leave
(bad)
fldenv
nop
or
(bad)
dec
fiadd
xchg
ins
or
sbb
add
mov
dec
jmp
push
ja
dec
cmps
ins
push
shl
enter
cld
daa
push
and
repz
sbb
inc
mov
mov
outs
jne
in
jecxz
ins
xchg
mov
jne
push
adc
and
pushf
sub
fadd
ret
test
cld
add
inc
(bad)
mov
jmp
rcr
test
and
sbb
jmp
jle
and
adc
adc
adc
push
xchg
push
in
loope
jns
dec
add
xchg
push
sbb
push
mov
xchg
push
je
pop
push
dec
cmp
dec
ficom
sbb
in
add
je
nop
xor
test
sar
sub
jne
js
add
rcr
aam
pop
cmp
ret
in
or
cmp
dec
xor
es
ss
pop
adc
das
push
lods
cmp
add
inc
loope
inc
cmp
js
mov
sbb
add
retf
jmp
cmp
mov
push
outs
sbb
adc
loop
(bad)
adc
nop
mov
stos
adc
and
(bad)
ss
mov
aam
popa
mov
sub
lea
je
inc
push
nop
repnz
pop
test
sub
mov
mov
stos
jg
pop
les
jo
cmp
and
je
out
mov
sbb
sub
push
inc
icebp
adc
(bad)
scas
add
mov
lea
mov
mov
aaa
int3
sub
cmp
inc
or
pop
dec
mov
mov
pushaw
or
mov
(bad)
pop
in
xlat
push
mov
cmp
push
cmp
sub
xchg
cmp
pusha
or
stos
sbb
pop
das
mov
mov
mov
push
and
push
pop
pop
ins
cmp
pushf
es
jmp
sub
pop
cld
inc
clc
frstor
cmc
or
loop
pop
mov
pop
xchg
mov
xchg
pop
in
and
inc
mov
aad
sbb
jmp
add
xor
pop
cmp
out
jmp
inc
pushf
push
les
in
cli
in
pop
in
mov
ret
icebp
pop
cwde
dec
dec
arpl
fs
mov
xor
lods
lods
fadd
rol
fiadd
xchg
mov
pop
mov
mov
add
and
xor
add
or
pop
ret
aas
jp
fucom
je
sbb
jecxz
dec
mov
test
xor
adc
xchg
cmps
and
fsubr
ret
mov
or
jae
test
rcl
enter
dec
push
xchg
push
lods
pop
nop
lea
push
xchg
(bad)
ins
jne
inc
and
sub
inc
mov
sbb
pop
es
cmp
jge
jno
and
sar
inc
cmp
jl
sub
sub
sbb
ret
inc
dec
inc
and
(bad)
call
cmp
ja
sub
js
adc
xor
inc
cmovae
push
ss
dec
neg
add
aas
adc
mov
fbld
add
fisttp
mov
sbb
pop
xchg
enter
popf
cwde
xchg
add
pop
push
add
dec
and
lock
retf
clc
clc
or
and
lock
pop
or
xchg
adc
test
(bad)
dec
and
xchg
scas
push
(bad)
sbb
aad
add
ins
mov
jns
sub
das
inc
pop
push
or
ficom
fcom
in
adc
sbb
cmp
sub
and
dec
loop
add
or
mov
mov
test
mov
mov
jg
adc
sub
shl
adc
sar
and
adc
dec
ret
or
mov
jo
call
push
fwait
push
sbb
ret
adc
clc
movs
and
sbb
sub
rol
push
test
push
imul
repz
xor
in
imul
dec
jb
sahf
push
jbe
push
push
xchg
cdq
popa
push
and
push
sub
cmp
push
xlat
aam
inc
push
repz
xchg
ret
pusha
lahf
fisubr
arpl
or
mov
or
dec
push
mov
call
mov
in
nop
mov
mov
icebp
mov
xchg
popa
jecxz
dec
mov
sub
nop
loop
ffree
xchg
mov
inc
retf
js
xor
jecxz
mov
push
xor
daa
pcmpgtw
cld
and
mov
sbb
jmp
loope
add
add
mov
dec
add
sbb
or
rcl
jno
lods
adc
mov
test
sub
jb
or
add
sub
xor
and
fst
sar
out
dec
sub
xor
sub
jnp
dec
push
cmp
xchg
mov
into
movs
daa
pusha
or
cmp
dec
ss
sub
jmp
jecxz
dec
jmp
mov
loop
fsubr
or
mov
push
sbb
(bad)
push
movs
adc
sbb
jne
sbb
sete
pop
ja
ds
jge
adc
sbb
dec
pop
test
mov
aam
outs
and
pop
rol
add
jno
sub
pop
(bad)
mov
inc
cmc
adc
xor
pop
daa
and
cwde
push
cld
gs
add
imul
jno
adc
adc
xchg
mov
add
jg
push
inc
dec
jne
jne
mov
rcr
pop
dec
mov
push
jle
adc
in
out
loopne
adc
hlt
mov
aam
stc
aaa
inc
call
pop
dec
add
sub
je
sub
pop
stos
out
rcr
aaa
push
and
add
ficom
jg
cmps
adc
or
and
mul
adc
or
push
mov
or
mov
xor
adc
inc
call
ds
data16
inc
push
dec
pop
and
(bad)
arpl
jle
inc
dec
jb
jp
rcl
xor
pop
sub
iret
pop
push
mov
xchg
ret
fldln2
jge
cdq
push
push
and
inc
pop
ins
dec
adc
scas
inc
lods
push
stos
sub
and
gs
shl
loop
test
xor
into
(bad)
jb
nop
add
xchg
ret
sbb
mov
les
pop
in
ds
pop
mov
fcom
xchg
in
pop
pop
cmps
pop
cmp
adc
and
add
rcl
mov
mov
jg
dec
es
dec
xor
rcl
and
and
js
jne
add
setae
add
sub
xor
je
arpl
loope
movs
cmp
fcmovbe
test
(bad)
cmp
test
jmp
dec
pushf
popa
mov
mov
(bad)
cmps
mov
push
cmp
push
mov
lods
push
adc
xchg
and
and
sub
jge
arpl
push
jae
mov
inc
push
dec
ret
aad
movs
hlt
sbb
add
and
pop
add
in
adc
adc
mov
and
mov
lods
inc
(bad)
hlt
ja
in
call
or
sub
ins
add
retf
xor
hlt
jmp
rol
arpl
mov
pop
daa
int
cmp
jbe
ret
(bad)
and
rep
sub
bound
dec
push
pop
dec
xchg
push
aaa
movs
adc
mov
add
movs
rcr
call
sbb
retf
adc
add
adc
mov
jmp
popf
cmps
jb
rcr
pop
jmp
inc
pop
adc
and
add
(bad)
popf
add
and
cmp
test
daa
cmp
les
add
fwait
inc
add
inc
xchg
mov
ret
ret
adc
shl
adc
jns
xchg
or
sub
push
or
sub
jp
or
mov
mov
xor
cs
icebp
lea
jl
or
adc
mov
mov
or
push
adc
cmp
lock
jmp
dec
ret
push
and
and
dec
pop
fs
cmp
in
sar
or
cmps
enter
add
xchg
stos
or
fcmovnu
add
inc
dec
xchg
call
ja
or
xchg
test
add
jnp
adc
mov
pusha
sbb
mov
dec
adc
or
inc
jecxz
jbe
retf
inc
pop
enter
push
mov
sbb
push
icebp
inc
sub
and
aam
or
pop
in
mov
or
pop
sbb
jge
cmp
or
add
or
movs
ret
mov
xchg
movs
mov
or
aam
aam
cmp
xor
daa
je
mov
test
sbb
mov
popf
and
and
lods
repz
pop
jecxz
or
dec
mov
and
stos
xchg
lods
imul
dec
cmp
mov
test
sub
std
iret
fsub
dec
or
xlat
daa
mov
dec
inc
jl
inc
lods
xchg
push
ret
xor
inc
ret
push
fwait
push
and
mov
add
sbb
sub
sbb
je
dec
jmp
enter
add
test
push
rol
pop
xchg
and
mov
ins
push
retf
pop
pop
jmp
aaa
xchg
jbe
(bad)
jl
or
fcmovnu
out
and
push
or
sub
sbb
dec
or
ja
ds
icebp
(bad)
and
sub
add
push
mov
popa
shl
lea
xchg
and
and
and
jmp
dec
daa
pop
sbb
xlat
pop
adc
mov
lahf
xor
and
f2xm1
mov
dec
xchg
mov
pop
scas
arpl
sbb
mov
or
add
inc
in
or
sbb
xor
pop
inc
push
mov
add
and
jbe
dec
je
dec
xchg
and
bound
or
sub
fs
push
mov
and
test
test
sub
les
dec
xor
cs
repnz
enter
rcl
sub
iret
mov
and
(bad)
mov
jne
test
in
dec
adc
xor
add
mov
ret
or
dec
fsubr
jbe
and
pop
scas
push
scas
fisub
pop
js
clc
push
add
inc
xor
je
or
add
mov
pop
fidivr
pop
clc
jl
sub
adc
push
js
fcmove
iret
pop
pusha
sbb
inc
push
add
inc
test
xor
dec
mov
call
mov
inc
nop
xor
xchg
jo
push
dec
ret
mov
pop
jp
mov
adc
and
xor
inc
dec
jmp
inc
cmp
sti
dec
div
or
xchg
adc
(bad)
aaa
push
add
pop
std
mov
xor
mov
xor
push
jl
dec
add
arpl
add
add
cmovg
mov
jo
cmp
lock
jo
jo
and
cmp
repz
inc
sub
jne
sub
xor
sbb
(bad)
int3
xor
icebp
cli
pop
hlt
ds
mov
(bad)
xchg
add
add
mov
fwait
call
imul
add
lock
inc
ins
pusha
loope
call
xor
repnz
jae
neg
dec
jmp
adc
xor
call
push
pop
movs
idiv
sbb
pop
or
jo
imul
push
add
outs
push
cmp
xchg
pop
ss
data16
or
sub
push
inc
repz
mov
cmp
jle
mov
(bad)
xchg
cmps
mov
or
xor
fimul
add
mov
ret
popa
in
add
mov
cmc
push
popa
xor
dec
dec
cmp
mov
loope
dec
add
xchg
jnp
sub
and
jmp
push
or
fcomp
mov
and
pop
adc
shl
sbb
or
test
ins
xchg
push
add
cld
pop
xchg
dec
pop
test
hlt
jne
or
retf
adc
ss
mov
mov
and
mov
sbb
sbb
xchg
loop
jbe
pop
push
jae
rcl
ja
adc
mov
push
add
dec
dec
push
cmp
add
and
jmp
dec
inc
push
mov
inc
push
cmp
je
ins
fidiv
jne
dec
sbb
push
and
add
or
and
mov
btr
jge
scas
gs
or
pop
adc
je
xor
add
inc
test
push
repnz
dec
test
dec
push
xor
test
test
mov
sub
pusha
fnstenv
mov
dec
push
movs
inc
add
fldenv
lock
add
cmps
icebp
push
jmp
daa
push
pop
movups
and
loope
xchg
inc
xchg
mov
or
push
ret
pop
mov
sbb
cmps
inc
or
and
sbb
mov
test
test
cli
aam
adc
daa
add
ud0
ficomp
aas
push
push
jae
or
cmc
push
pop
jp
mov
lahf
adc
pop
cmp
aam
mov
xchg
call
outs
call
mov
shld
sub
jae
pop
and
mov
outs
mov
pusha
xor
adc
sub
fwait
adc
lea
inc
fdivr
je
jno
inc
call
jmp
cmps
sbb
add
movs
inc
push
je
mov
mov
mov
lds
inc
adc
loop
repz
lock
inc
cmps
or
lods
xor
test
mov
push
and
rcl
push
push
sbb
mov
mov
(bad)
ret
pop
add
sbb
sub
inc
fs
retf
sbb
popf
fnstcw
mov
ins
movs
seto
adc
push
mov
add
xor
mov
or
inc
fcomp
add
adc
xchg
call
add
dec
test
(bad)
and
test
(bad)
xor
adc
adc
sbb
imul
div
cmp
test
arpl
push
and
ss
sbb
jp
repz
cld
mov
dec
xchg
pop
xchg
or
fisub
dec
add
std
or
cmp
leave
in
call
push
ret
jno
pop
and
jle
sub
adc
lods
inc
push
popf
adc
inc
and
bswap
test
test
ret
mov
pop
and
je
push
add
jnp
ret
hlt
mov
xor
adc
ret
jnp
sbb
and
lods
push
mov
pusha
enter
push
std
cmps
xor
and
lahf
lock
addr16
retf
(bad)
dec
cmp
lods
stos
jb
push
pop
enter
push
imul
and
sub
dec
sbb
sub
movs
xor
inc
jecxz
add
mov
mov
test
and
sbb
jle
or
pop
push
ror
push
js
add
sti
cs
add
cmp
xchg
adc
mov
cmps
mov
pop
nop
mov
mov
adc
ss
sbb
ficom
add
sbb
outs
inc
js
cdq
ins
mov
xor
dec
mov
sub
jmp
(bad)
out
adc
sub
hlt
je
pop
lock
imul
push
or
je
sub
enter
sar
or
je
in
push
fadd
les
and
test
xchg
sbb
xor
cwde
ret
mov
dec
in
call
mov
push
test
nop
adc
xchg
sbb
and
cmp
mov
add
sub
cmps
add
mov
stos
test
mov
ficom
shl
push
stos
push
adc
add
pusha
cmp
or
adc
mov
adc
sub
mov
int3
add
retf
xor
retf
xor
adc
mov
push
mov
and
add
sub
dec
dec
xchg
fstp
inc
movs
mov
imul
lds
adc
add
push
mov
pop
jae
mul
cmp
lahf
mul
or
jnp
popa
sar
jmp
mov
call
adc
movs
popf
retf
mov
rcl
inc
pop
mov
test
push
addr16
and
and
and
call
aam
adc
inc
or
pop
add
out
sbb
(bad)
pushf
and
add
popw
mov
ret
sub
mov
or
jmp
xor
pop
ret
sbb
push
push
mov
inc
je
ror
sub
pop
call
adc
cs
push
test
ret
ins
adc
sub
inc
int3
push
add
mov
adc
icebp
add
and
aad
mov
pop
pop
fsub
loope
aas
ins
sub
iret
sbb
adc
xchg
and
sbb
test
and
xchg
sbb
(bad)
mov
cmp
aaa
and
sbb
ret
mul
push
adc
dec
mov
sar
push
ret
dec
pop
pop
dec
jae
int3
or
and
(bad)
or
aad
inc
sub
in
int3
adc
push
das
fist
jae
sub
add
and
pusha
inc
mov
lahf
sbb
push
cmp
imul
add
repnz
int
or
push
or
add
fcom
loope
fs
aam
call
lea
ja
outs
fs
pop
jno
xchg
jno
xchg
jne
rcl
xor
push
popa
mov
sub
ret
cmp
ins
(bad)
daa
xchg
jae
arpl
inc
and
fisubr
fiadd
ret
jp
xor
(bad)
mov
in
in
lods
(bad)
xchg
ins
xor
cwde
pop
or
mov
sub
pop
or
inc
dec
sar
shl
pop
jo
outs
sbb
jne
pop
int3
jne
retf
ja
iret
push
pop
jmp
add
lods
inc
jbe
sbb
fistp
scas
xchg
cmp
adc
cmp
sbb
data16
add
pop
jl
int
or
add
call
inc
jg
je
mov
cmp
push
sbb
and
sbb
mov
test
adc
icebp
lods
dec
mov
cmp
sub
pop
ds
popa
pushf
sti
push
push
mov
inc
push
inc
adc
aam
push
xchg
add
or
outs
add
fcompp
push
cmp
fstp
cmps
xchg
sub
sbb
dec
pop
fwait
pop
jl
imul
jmp
rcl
lods
arpl
cmp
gs
outs
add
jmp
scas
pop
sahf
mov
scas
mov
repz
popa
call
sub
ret
ja
sub
push
mov
xor
fmul
pusha
cmp
jne
lea
test
xlat
ja
or
jecxz
add
pusha
sub
iret
mov
mov
adc
jns
dec
dec
mov
movs
push
fld
es
fdiv
sar
das
out
jo
test
xor
mov
add
adc
sbb
ret
xor
cmp
test
xor
in
div
sub
or
inc
and
cli
inc
and
push
and
cdq
cmp
idiv
dec
imul
inc
ja
or
aad
add
push
or
add
or
mov
mov
push
pusha
mov
pop
fs
fstp
push
nop
push
call
cmp
fs
or
sub
imul
or
jle
push
rcl
push
daa
ror
push
xchg
adc
mov
or
lods
mov
jmp
cmp
imul
and
in
jmp
adc
in
rol
cmc
xchg
scas
xor
imul
je
mov
xor
ds
push
stc
or
jns
xor
lock
aam
cmp
movs
test
xor
xchg
push
add
mov
push
ins
push
iret
lock
inc
push
xor
out
sbb
mov
mov
lahf
je
ins
and
mov
add
mov
mov
enter
xchg
out
and
lds
mov
fwait
xor
jmp
fild
outs
pop
sub
pop
aaa
lods
dec
sbb
mov
add
fisttp
or
xor
cmps
std
push
sar
fcom
xor
adc
sub
push
lahf
mov
mov
mov
fsub
cmp
jge
ret
adc
xor
jo
test
mov
jge
addr16
(bad)
xor
js
mov
xor
lds
mov
call
push
cmova
push
ficom
cmp
sbb
push
adc
and
enter
adc
cmps
mov
dec
jmp
xor
ret
xchg
ret
adc
ret
and
add
fwait
loope
jmp
adc
dec
xchg
add
inc
test
jle
xchg
fcmovne
xchg
jbe
stos
xor
add
rcl
pop
sub
or
and
push
dec
sub
pusha
xchg
add
call
add
adc
loope
mov
sbb
test
push
push
mov
dec
dec
ins
mov
mov
or
dec
dec
push
adc
ds
test
outs
push
shl
cmp
or
pop
ror
inc
loop
test
add
leave
imul
jne
sub
(bad)
cli
xchg
hlt
push
rol
mov
test
dec
cmp
adc
lock
jnp
icebp
rcl
mov
sub
les
mov
or
ror
mov
icebp
imul
pop
es
ror
dec
mov
push
xchg
add
fmulp
push
jmp
cdq
pushf
dec
add
inc
or
pop
pop
retf
pop
aaa
or
mov
ja
stos
hlt
fst
and
mov
xchg
cmp
bound
pop
test
inc
lds
pop
or
xchg
xchg
dec
sbb
xor
push
stc
fsub
jne
add
clc
sub
mov
loope
addr16
mov
shl
call
ret
fcomp
es
dec
and
dec
sbb
jge
cmps
push
sbb
add
or
sub
and
aaa
mov
sub
mov
inc
adc
add
not
adc
ror
mov
rol
xchg
lods
sbb
ror
div
pop
dec
repnz
dec
mov
add
sbb
fidiv
hlt
and
ins
jo
jmp
sbb
and
rcl
pop
bound
shr
sub
pshufw
ret
add
xchg
icebp
repnz
jg
jg
mov
cmps
stos
ror
dec
xchg
jmp
jp
xor
rol
cmp
mov
test
leave
rcr
repz
gs
pop
aaa
outs
mov
rcl
adc
je
inc
ret
pop
push
push
add
mov
add
adc
mov
scas
sub
push
xor
sbb
or
dec
pop
lods
adc
pop
fs
sub
retf
dec
mov
aas
jno
icebp
js
cmp
loopne
dec
add
add
retf
xchg
sbb
not
daa
mov
frstor
lahf
push
mov
rcl
scas
sub
fdiv
cld
out
je
and
sub
push
mov
xor
cmp
push
or
ins
adc
sbb
aam
ret
pop
fiadd
push
add
pop
inc
push
inc
push
jne
xor
fnstcw
push
nop
jne
cli
shr
call
shl
pusha
xor
adc
xchg
or
(bad)
gs
jg
or
adc
push
xor
(bad)
pop
sub
mov
and
movs
pop
push
mov
xor
sbb
or
cdq
aam
inc
pop
and
jb
repnz
push
pop
les
(bad)
add
lea
cwde
lea
add
jle
mov
adc
push
xchg
in
and
ins
adc
ins
add
dec
sub
test
mov
mov
cmp
das
xor
xchg
lahf
sub
pop
not
(bad)
jecxz
xor
ror
sub
sbb
push
or
push
imul
xchg
cmp
cli
add
lahf
and
add
push
xchg
and
pop
ins
mov
push
fdivr
je
and
dec
sbb
fld
dec
or
add
mov
cmps
add
add
push
cmp
(bad)
pop
adc
mov
xchg
or
and
ror
stos
add
loop
adc
fs
dec
sbb
inc
push
aaa
mov
push
jb
mov
outs
adc
xchg
xchg
lods
sbb
dec
add
cmps
mov
sahf
sub
and
mov
(bad)
in
test
mov
cwde
je
xor
lods
xchg
and
or
push
mov
pop
rcr
scas
cmp
add
sbb
adc
dec
into
and
pop
pushf
ins
sbb
mov
jnp
inc
mov
nop
and
les
sub
pop
mov
pop
or
sbb
popa
dec
adc
rcr
sbb
inc
dec
dec
daa
adc
xchg
xchg
sbb
(bad)
and
leave
pop
dec
jne
add
mov
adc
rcl
push
jmp
dec
xchg
lods
sbb
cmps
outs
push
jns
pop
repnz
sub
(bad)
retf
sahf
ror
and
inc
ja
stos
retf
pop
js
test
aaa
adc
imul
push
sub
sbb
adc
jne
inc
adc
mov
jno
sub
sbb
add
push
div
fs
test
ret
int
push
int3
popa
adc
frstor
add
add
pusha
adc
fsub
fs
cmovp
fdiv
lea
sbb
fisttp
movs
je
mov
test
loope
retf
lahf
adc
jnp
daa
sbb
cmp
into
xchg
in
sbb
(bad)
outs
push
cmp
out
pop
retf
test
dec
cmp
add
(bad)
inc
jecxz
stos
and
sbb
mov
(bad)
sub
jae
push
lahf
call
cwde
adc
arpl
out
jmp
inc
es
push
sahf
or
cmc
sub
loopne
arpl
cmp
sub
(bad)
xlat
push
add
xor
(bad)
fcom
test
adc
sub
jl
or
jge
es
inc
pop
and
lds
and
fwait
and
dec
mov
repz
jo
or
xor
mov
inc
add
mov
jne
mov
ror
add
sbb
and
js
inc
ud2
adc
and
add
or
add
sbb
and
cs
loope
inc
sub
and
mov
cmp
mov
shl
faddp
jg
dec
ss
jmp
inc
or
and
inc
add
das
jmp
int
inc
jle
xor
cmc
ins
jae
add
cli
xchg
add
and
sbb
popa
nop
add
(bad)
ret
pop
je
mov
xor
(bad)
adc
or
pop
add
loope
leave
xor
pushf
xor
mov
rol
data16
movs
cmp
mov
push
cmp
pushfw
int3
aam
or
pushf
movs
pop
sub
sub
les
push
add
mov
jno
jo
imul
push
add
mov
clc
movs
int3
adc
das
inc
sbb
pop
jne
adc
rcl
sbb
sbb
(bad)
(bad)
pop
push
ins
js
or
push
and
xor
(bad)
push
pop
call
dec
xchg
test
push
js
fwait
inc
sbb
test
fnsave
sub
clc
pop
lods
shl
movs
adc
hlt
std
or
enter
mov
jns
mov
lds
add
xor
movs
ins
popa
or
pop
cmps
cmp
and
jns
or
fcmovnb
and
lock
jmp
stos
in
ror
cmp
loop
repz
adc
push
sar
xor
out
test
dec
dec
lar
and
into
lods
(bad)
adc
test
mov
ret
pop
jnp
sub
cmp
inc
jle
sbb
push
int
enterw
mov
inc
es
inc
loope
fadd
inc
cmc
cmp
leave
dec
mov
mov
push
xchg
dec
cwde
test
ret
into
inc
ins
sub
or
into
js
dec
add
sbb
jmp
in
cdq
sbb
push
daa
mov
repz
inc
mov
dec
sti
and
push
inc
pop
jnp
sbb
or
jg
adc
push
fidiv
add
int3
adc
push
adc
js
fistp
adc
mov
loop
jmp
mov
sbb
or
les
mov
push
sbb
and
sub
adc
and
add
test
jmp
adc
mov
leave
shl
inc
sub
mov
and
push
mov
xor
sub
cmp
or
rcr
mov
cmp
mov
pop
push
loope
dec
or
inc
movs
xchg
ret
das
dec
cmp
or
or
push
popa
enter
fadd
inc
out
inc
push
and
or
sbb
sar
in
pusha
pusha
push
push
or
mov
stos
test
idiv
xor
push
adc
es
or
dec
sub
test
cwde
adc
(bad)
fldz
test
jno
adc
push
push
sub
pop
xchg
or
lahf
outs
ins
mov
outs
mov
ins
ins
add
cs
inc
movs
aam
adc
or
xor
add
stos
test
cld
mov
xchg
dec
add
aad
sbb
mov
movs
jo
sbb
ror
dec
or
push
imul
xor
sub
test
cmp
fs
cmp
fs
rol
les
jl
sahf
addr16
pop
sbb
pop
out
or
jno
rcr
dec
loop
pop
or
push
or
outs
xchg
cmp
push
ins
dec
bswap
ss
and
pop
jb
add
add
nop
or
mov
jecxz
aas
xchg
mov
icebp
dec
fs
and
sub
call
inc
xor
mov
scas
or
add
dec
add
or
jo
and
inc
imul
sbb
pop
shr
push
cmp
cmp
cmp
icebp
fldenv
adc
jmp
mov
push
jl
dec
xchg
lea
push
scas
in
call
jne
test
in
imul
add
test
cmp
add
repz
adc
mov
inc
push
pop
xor
stc
add
nop
add
sbb
push
shr
mov
sbb
xchg
xor
sub
(bad)
shl
jmp
cmp
or
push
or
shl
or
jle
ja
xchg
adc
fmul
add
xchg
retf
fsub
call
jmp
add
jns
add
or
jmp
jp
stos
add
leave
mov
or
pop
fdivr
cmp
cmps
xchg
xchg
inc
pop
and
fs
jno
and
retf
retf
xor
jecxz
mov
inc
loope
cmc
push
cmp
je
push
jo
push
sub
sbb
pop
pop
sub
popa
add
(bad)
xchg
es
mov
xchg
fdiv
dec
sub
and
pop
fld
ja
adc
pop
xchg
jge
mov
jne
iret
shr
push
add
push
inc
cmp
pop
add
and
xor
inc
aaa
push
pop
xchg
add
mov
adc
add
pop
sub
jmp
push
(bad)
pusha
add
add
into
pop
push
out
push
imul
jno
(bad)
mov
repnz
or
gs
push
leave
call
fcom
and
inc
shr
fdivr
aaa
dec
mov
dec
adc
test
mov
adc
js
(bad)
fist
push
pop
mov
pop
movs
mov
pop
mov
sbb
popf
sub
cwde
cmp
xor
and
clc
pusha
inc
or
pop
mov
adc
or
push
sub
arpl
pushf
call
inc
pop
int3
out
inc
and
mov
pusha
scas
mov
or
push
movs
inc
shl
xchg
sub
push
dec
sub
add
es
dec
shl
xchg
dec
push
dec
xchg
sub
ret
xchg
and
push
loope
add
fwait
adc
call
dec
rcl
aas
cmp
ss
fidivr
(bad)
fidivr
dec
dec
mov
mov
mov
and
lea
clc
or
sub
xchg
add
call
add
add
add
xor
push
dec
dec
or
xchg
rol
in
loopne
clc
and
push
pop
dec
push
test
fs
fld
dec
ror
add
sbb
add
xchg
mov
cwde
ret
mov
push
fisttp
loop
sbb
cmp
push
mov
xor
xchg
and
dec
push
in
mov
mov
int
int
loopne
js
mov
inc
cmps
jmp
shl
mov
mov
mov
mov
aaa
lea
xchg
sub
jo
fs
add
push
cld
and
sub
(bad)
in
test
lods
sub
jo
mov
mov
push
test
xchg
dec
pop
inc
add
test
jbe
push
push
or
imul
sub
ss
xchg
sbb
cs
push
push
pushf
fadd
in
push
push
pop
rcl
push
adc
dec
fistp
or
add
push
lock
cmp
aad
fdiv
(bad)
jmp
cdq
int3
ffreep
sbb
(bad)
ss
mov
jmp
inc
enter
and
jle
int3
cmp
aad
cmp
xchg
pusha
jmp
out
mov
retf
add
jl
js
das
lods
mov
in
retf
push
loope
aaa
xor
sub
xchg
mov
movs
test
or
adc
dec
pop
and
test
dec
movs
dec
push
mov
pop
mov
sbb
fist
push
sbb
mov
cmp
pop
nop
bnd
sbb
scas
mov
lea
test
sbb
or
sahf
pop
push
xlat
pop
pop
pop
daa
adc
jmp
xor
pop
xchg
sbb
adc
push
adc
adc
mov
popf
cmp
in
mov
in
mov
int
xchg
push
push
and
dec
out
movs
xchg
cmps
push
test
retf
sbb
icebp
nop
out
cwde
pushf
jle
push
in
pop
pop
dec
cmps
stc
aad
add
jae
add
or
jmp
fist
cwde
push
popf
mov
jmp
push
add
xor
rcl
rcr
sti
mov
push
dec
or
ins
pop
call
push
xor
daa
add
adc
mov
push
arpl
aad
push
sbb
repz
and
movs
ins
sbb
enter
inc
inc
sar
or
dec
pop
outs
or
(bad)
enter
in
jbe
inc
movs
imul
test
jg
dec
clwb
bound
push
pop
sub
or
xchg
shl
and
(bad)
mov
push
and
jo
inc
hlt
xor
shl
sub
imul
add
pop
push
and
ins
mov
xor
add
jmp
adc
sub
inc
add
sub
inc
xor
jns
sbb
(bad)
sbb
retf
jo
cwde
or
fadd
pop
shr
or
xor
enter
mov
push
icebp
sbb
push
push
push
fcomp
mov
pushf
adc
sar
add
pop
movs
adc
rcl
xchg
mov
mov
sub
imul
push
iret
and
pop
jge
xchg
and
or
ins
and
add
add
xchg
mov
sub
xor
aad
sub
mov
daa
jb
int3
ss
dec
movs
mov
add
add
ja
(bad)
adc
mov
lea
or
cs
imul
dec
add
nop
push
sbb
adc
push
lds
adc
jle
xchg
pop
(bad)
mov
mov
popa
sub
inc
cmp
mov
add
jnp
ds
add
push
cmp
sbb
in
push
mov
adc
aad
adc
sbb
outs
movs
outs
retf
pop
sub
nop
mov
add
(bad)
icebp
xchg
sbb
repz
add
jno
inc
repz
dec
(bad)
pushf
mov
mov
(bad)
outs
lea
push
push
dec
push
sbb
lods
clc
nop
add
jmp
and
inc
loop
scas
cmp
aam
dec
and
sbb
adc
jge
je
dec
lods
push
or
mov
inc
mov
sbb
xchg
aad
mov
in
mov
scas
mov
jmp
and
das
pop
sbb
ret
sti
cmps
dec
add
and
sub
jb
jno
es
jne
(bad)
mov
ins
icebp
(bad)
rol
xchg
jmp
push
jo
inc
fcom
inc
pushf
or
pop
mov
test
and
and
mov
jge
add
loope
imul
aas
sbb
or
add
pop
adc
add
xor
je
call
mov
(bad)
call
inc
or
movs
aam
sub
pop
xchg
popf
ins
test
xor
jnp
cvtps2pd
loope
stc
mov
adc
es
hlt
je
and
sbb
push
out
inc
xchg
out
xchg
and
test
pushf
push
mov
inc
or
outs
mov
dec
inc
je
pop
jne
gs
xor
outs
sub
sbb
dec
sub
std
outs
sahf
inc
jmp
popa
es
repz
pusha
pop
dec
jae
and
add
mov
fsubrp
fcomp
pop
xlat
mov
nop
bound
in
xchg
jecxz
and
adc
jb
js
fist
rol
sub
xor
lahf
xor
cmp
in
out
imul
je
test
dec
leave
xchg
loope
je
jae
sbb
jg
mov
nop
loop
xor
lock
test
inc
sbb
jb
or
cmps
pop
shl
test
add
js
imul
movs
mov
clc
jmp
jns
cmp
sti
mov
scas
mov
push
popa
clc
adc
arpl
fsubr
shl
js
pop
mov
xor
cmp
aad
add
push
xchg
test
add
adc
sbb
xor
pop
popf
mov
loope
rcl
test
push
loopne
dec
inc
xchg
adc
pop
and
push
or
fiadd
(bad)
repnz
call
and
jbe
fwait
call
sub
repz
push
push
jmp
adc
dec
pop
in
call
mov
jne
push
and
ja
scas
adc
ss
es
or
jmp
xor
aam
mov
or
pop
dec
pop
xchg
cwde
lods
push
mov
xchg
mov
or
or
cwde
jne
movs
mov
sub
arpl
or
adc
add
fcmovbe
add
pop
dec
xchg
mov
xor
jmp
xchg
aam
leave
aaa
adc
inc
fsub
pop
and
arpl
push
or
out
add
adc
cmp
fs
dec
cmps
jo
cmp
xor
dec
jmp
movs
std
rcl
or
test
push
shl
add
push
xor
retf
fcmovbe
cmp
jnp
fisttp
jns
rcl
loopne
pop
add
sbb
movs
xor
int
or
push
movs
adc
inc
mov
leave
sar
adc
xlat
push
cmp
jmp
inc
pop
dec
add
push
adc
and
sub
add
mov
fdiv
push
loop
mov
icebp
adc
adc
jbe
jb
and
pop
adc
aaa
ret
not
add
outs
addr16
test
aaa
add
and
(bad)
sbb
mov
addr16
sub
or
xchg
sbb
rol
movs
fs
cwde
xchg
ds
lock
and
inc
sub
jne
xchg
mov
pop
push
xor
test
mov
shr
scas
mov
mov
lahf
inc
xchg
mov
in
inc
jnp
add
xchg
mov
pushf
js
mov
xchg
stc
cmps
test
popa
adc
iret
xor
xchg
inc
ds
pop
mov
pushf
sbb
jne
mov
cmp
add
pop
push
or
addr16
lods
mov
push
mov
pop
jb
dec
dec
cmp
data16
pushf
inc
mov
or
sbb
or
ins
jecxz
mov
daa
sbb
mov
push
jno
or
jae
mov
and
add
add
cwde
sahf
mov
add
test
xor
push
mov
(bad)
fisttp
cmp
push
and
mov
push
sub
imul
jno
inc
das
stos
fs
pop
push
add
inc
and
jmp
xchg
movs
cdq
or
xor
or
push
pop
mov
jo
mov
push
or
push
push
and
sbb
dec
xchg
pop
or
push
push
shr
mov
in
add
xor
or
dec
jl
sub
and
push
dec
xchg
out
inc
and
push
xor
cmp
xor
sub
dec
lods
fistp
hlt
not
mov
jo
xor
inc
mov
dec
jae
sbb
mov
jmp
add
push
scas
imul
push
or
retw
test
sub
push
mov
cmc
enter
cmp
imul
fisttp
and
mov
popf
cmp
mov
mov
(bad)
shr
dec
push
dec
pop
js
rcl
push
ss
inc
cmps
push
cs
add
or
les
adc
push
je
add
sub
sub
ret
fadd
jl
idiv
ja
dec
fcmovbe
mov
sahf
aas
call
aad
dec
add
inc
cmp
cmp
jge
or
add
adc
xor
ins
fs
push
scas
and
and
cmp
mov
js
add
pushf
dec
jne
sub
adc
adc
pop
lahf
movs
nop
push
imul
mov
jbe
cmp
and
add
adc
mov
push
pop
dec
pop
add
mov
test
call
fwait
nop
or
pusha
add
ror
inc
and
les
repz
rol
xor
mov
adc
fdiv
xor
or
or
jne
xor
mov
and
lock
add
or
adc
add
mov
adc
ror
int
aaa
jbe
lds
shl
push
sbb
adc
push
cmp
int3
movs
mov
or
xlat
pop
adc
inc
sbb
aad
dec
inc
js
or
xor
gs
or
xchg
cdq
mov
int
loope
and
retf
sbb
in
mov
(bad)
aam
and
rcl
daa
inc
or
jmp
inc
push
lsl
xchg
and
cmp
dec
rol
into
out
mov
iret
push
push
mov
jge
and
lods
outs
cmp
ror
cli
jle
loopne
std
xlat
cmp
mov
add
push
test
xor
es
sbb
mov
mov
fst
ins
pop
adc
outs
mov
adc
dec
jmp
cmp
lods
or
xor
push
and
xor
jo
sub
adc
sub
clc
cmc
push
jo
cld
and
retf
shl
cld
fidiv
xor
mov
push
movs
(bad)
enter
(bad)
into
pop
cmp
ficom
sbb
cmp
xor
xchg
imul
int
and
ja
cmp
(bad)
or
xor
or
cld
mov
xchg
call
jno
inc
sar
leave
inc
popf
add
xor
pusha
std
cmp
fisubr
pop
xor
das
xor
sbb
or
dec
or
aas
mov
xchg
fwait
pusha
adc
gs
call
lock
adc
and
xlat
cmp
xchg
push
js
daa
in
push
dec
leave
aam
mov
inc
xchg
addr16
or
inc
cmp
seto
sub
push
jns
dec
ret
xchg
fwait
ins
jecxz
or
add
cmp
or
adc
sbb
mov
mov
and
rcr
mov
xchg
inc
and
cwde
mov
xchg
add
cmp
push
and
or
or
push
add
add
dec
repnz
inc
inc
mov
jnp
push
push
xor
fisubr
aas
cmp
ins
test
push
imul
rcr
sbb
xchg
inc
rcr
ss
cmp
sub
rol
retf
rcr
call
stos
cdq
movnti
mov
and
mov
push
xchg
lods
pop
mov
mov
mov
call
cmps
add
xor
inc
push
ret
bound
xchg
adc
arpl
xchg
adc
fisttp
cmp
add
or
daa
push
dec
loope
pop
imul
sbb
(bad)
jne
sahf
leave
push
jo
jle
dec
mov
cs
shr
or
jmp
dec
push
je
adc
mul
or
jmp
mov
push
ins
xchg
add
jmp
push
sbb
jl
and
add
pop
mov
inc
call
adc
imul
xor
pop
adc
inc
pop
adc
sub
push
mov
inc
adc
ret
aas
push
xchg
add
ror
cmps
inc
ficomp
pop
pop
mov
mov
add
rcr
cmp
and
aam
and
add
inc
sub
sbb
sar
jno
lods
mov
mov
movs
sub
mov
jo
ficomp
mov
sub
pop
push
aad
sub
inc
sbb
jg
hlt
sub
xor
push
ss
mov
jmp
arpl
sbb
daa
adc
xor
inc
ret
cmp
add
xchg
xor
pop
inc
sbb
sub
rcl
pop
push
xlat
jl
(bad)
and
dec
fsub
inc
pop
js
dec
pushf
or
xlat
or
in
int3
rcl
fadd
mov
dec
aam
shl
aaa
daa
(bad)
jb
or
sub
movs
mov
adc
push
pusha
or
mov
ds
mov
sbb
sbb
adc
mov
xchg
adc
xchg
add
add
sbb
xchg
dec
push
call
jl
in
add
test
adc
popa
retf
mov
and
mov
or
jo
retf
rol
mov
jle
push
cmp
bound
outs
jecxz
push
popf
idiv
es
ins
mov
mov
ins
das
inc
or
lea
call
mov
xor
or
sbb
shr
pop
adc
out
mov
dec
mov
mov
movs
inc
xor
cwde
shr
push
cmp
push
shr
sbb
or
test
cmp
jecxz
rcl
idiv
or
(bad)
(bad)
cmc
cs
ficom
rol
or
gs
push
mov
mov
cmp
(bad)
jae
dec
push
mov
gs
push
mov
push
pop
rcl
test
ss
mov
scas
sub
sbb
jne
inc
adc
xor
shl
push
xchg
inc
and
push
xor
cmp
mov
jbe
dec
inc
pop
push
fisttp
pop
cmp
pushf
outs
dec
pop
ins
mov
push
or
push
push
cmp
dec
jge
cmp
push
mov
push
mul
sbb
ins
or
gs
sub
out
bound
lahf
mov
xchg
dec
je
iret
xor
mov
je
call
call
adc
das
mov
mov
sub
adc
ret
dec
lods
ds
add
int
push
imul
and
pop
add
xor
es
dec
pop
fiadd
sbb
jmp
rol
lods
push
inc
inc
and
inc
adc
cs
inc
mov
ret
ss
imul
push
or
mov
jge
adc
mov
jbe
out
push
test
push
inc
cmp
jecxz
adc
cli
icebp
adc
cwde
adc
aas
push
daa
xchg
xchg
or
dec
adc
lock
pop
adc
jge
and
mov
in
and
lock
popf
(bad)
push
inc
dec
ret
retf
cli
pop
push
pop
pop
mov
call
jp
xor
xchg
adc
sub
push
pop
xchg
(bad)
pusha
or
movs
or
in
add
pop
push
inc
mov
dec
outs
sub
cmc
test
mov
cmp
add
pusha
or
jp
es
inc
lods
mov
jmp
xor
and
cmp
mov
(bad)
stc
sbb
jmp
outs
or
mov
sbb
arpl
std
add
inc
fsub
test
or
sbb
adc
or
inc
sbb
sbb
xlat
or
mov
xchg
push
pop
jae
mov
dec
xor
push
dec
rcr
ja
aaa
adc
jno
scas
or
scas
imul
xor
jne
rol
and
push
out
and
nop
ror
add
in
popf
sub
adc
sbb
cmp
jecxz
mov
(bad)
mov
jmp
retf
inc
xchg
mov
push
loope
pop
retf
jle
or
jne
adc
and
push
(bad)
jo
xor
js
inc
xchg
sahf
push
push
leave
mov
cmp
push
js
ret
pop
or
jmp
cwde
inc
pushf
add
add
inc
jecxz
mov
loopne
cld
jmp
retf
je
rcr
out
sbb
jle
lea
push
xchg
fwait
pop
push
lock
add
or
movs
push
es
les
xchg
and
sub
pop
cdq
jge
push
xchg
iret
scas
add
mov
ja
adc
xchg
daa
cmp
mov
retf
sbb
clc
mov
or
adc
jge
mov
rol
xchg
arpl
dec
jne
adc
test
add
add
pop
std
xchg
sbb
fadd
rol
push
icebp
hlt
lea
std
push
ror
cmp
ret
cmp
jge
daa
cmp
cmps
inc
popf
cwde
jnp
xor
dec
hlt
pop
cmp
or
add
pop
or
push
push
jo
stos
je
stc
imul
xchg
inc
dec
sbb
or
push
divps
cmp
mov
xor
jg
popa
inc
dec
mov
mov
and
addr16
mov
jl
sbb
imul
ja
and
pushf
into
cdq
loope
shl
cdq
push
cwde
and
add
cvtdq2ps
adc
lds
sub
stc
enter
mov
ror
cmp
xor
rol
(bad)
add
mov
add
sbb
lea
jbe
stc
in
idiv
sub
pop
mov
fiadd
dec
aam
cmp
xor
and
cmp
clc
sbb
add
lods
push
pop
lods
adc
enter
cmp
sub
js
pop
lods
add
mov
lahf
leave
adc
add
shl
sub
cmp
add
cmps
mov
fld
push
push
mov
and
cs
or
leave
push
sub
cmp
inc
cmp
retf
add
adc
inc
inc
dec
outs
pop
inc
hlt
ss
aas
lahf
jmp
xchg
adc
outs
dec
adc
movs
sbb
xor
push
mov
ret
cmp
adc
add
je
dec
add
fiadd
jo
cmp
in
add
adc
jae
push
or
adc
inc
dec
add
xchg
or
mov
lahf
lahf
lea
sbb
mov
inc
cli
and
push
jns
xor
pusha
jmp
mov
or
test
jle
out
add
push
call
inc
pop
jne
cmp
enter
dec
repz
int
imul
push
add
inc
out
inc
push
sub
lods
sub
pop
or
push
pop
or
lods
sub
mov
sub
pop
sbb
sbb
pop
pop
iret
adc
sbb
push
test
rcr
jo
add
push
fistp
(bad)
jg
pusha
cmp
jbe
mov
mov
sahf
and
fs
cmp
int3
sub
lods
push
jno
add
aad
adc
(bad)
sub
popf
pop
int
test
add
xor
mov
ja
pop
dec
or
nop
xchg
test
xchg
mov
fsubr
enter
ror
test
lods
rcl
mov
(bad)
cmp
rcl
es
cmp
and
mov
sub
sub
movs
movs
xchg
push
(bad)
into
in
fwait
nop
dec
movs
in
call
add
mov
dec
xchg
or
xchg
rol
or
and
and
and
xchg
retf
in
sub
xor
cmp
sub
sub
iret
out
mov
js
inc
int3
cmc
jmp
cwde
xchg
cs
ror
push
push
sbb
and
dec
in
inc
mov
dec
cmp
adc
jmp
cmps
inc
xchg
ror
add
xor
pop
jge
sub
cmp
out
ret
mov
shr
xor
leave
xchg
xor
inc
mov
xchg
mov
sub
daa
and
loop
push
dec
xor
jl
test
and
add
js
mov
mov
sub
int
dec
cld
imul
fwait
inc
shl
adc
mov
mov
mov
xor
out
adc
push
push
pop
cdq
lock
cmp
cli
or
imul
adc
(bad)
test
mov
out
mov
add
fidivr
enter
inc
inc
sbb
and
imul
jne
mov
sub
retf
mov
or
cmp
add
fldcw
mov
shr
jno
mov
retf
mov
fadd
aaa
jo
aaa
ret
or
mov
pop
rcl
add
shl
push
lods
stos
add
pop
pop
add
xor
jmp
pop
jb
mov
mov
inc
sbb
push
(bad)
add
(bad)
aad
jmp
inc
pop
sub
sub
and
fisttp
pushf
rol
or
cmp
sub
movs
mov
cmp
pop
cmp
seto
shrd
and
into
add
or
aaa
sub
add
push
add
ss
sbb
test
repnz
and
or
inc
imul
cmp
pusha
and
dec
push
push
test
out
dec
dec
add
sar
or
add
push
xchg
leave
call
and
dec
pop
lds
sbb
(bad)
or
mov
test
push
xor
inc
test
stos
les
mov
shl
sub
sub
enter
push
mov
rol
push
or
movlhps
inc
or
mov
mov
adc
jae
sbb
call
add
jno
cmp
push
jg
mov
aaa
fs
fwait
jo
sbb
clc
and
or
lea
add
mov
js
push
push
sub
push
push
pop
cmp
push
xchg
inc
imul
inc
dec
add
add
or
aas
out
dec
adc
xor
adc
jmp
lods
or
arpl
push
push
pop
icebp
xchg
cmc
repz
and
pop
(bad)
push
add
test
shl
aaa
test
in
cdq
mov
cmps
add
and
xchg
pusha
test
pop
in
pop
pusha
lea
add
repnz
sahf
jo
mov
add
sbb
jne
inc
mov
int3
mov
mov
xor
lea
or
push
or
or
jmp
rol
gs
push
in
xor
mov
test
sbb
xchg
cmp
push
jle
out
mov
or
ins
or
inc
inc
lea
ret
dec
inc
cmp
inc
xor
sub
and
mov
or
pop
push
mov
adc
jle
mov
in
retf
lahf
rcl
cwde
or
movs
pop
(bad)
jmp
mov
xlat
mov
movs
sbb
or
retf
xor
xchg
je
rol
or
add
rol
mov
(bad)
(bad)
ror
pop
add
daa
adc
inc
je
ret
rcpps
dec
not
inc
and
pusha
imul
rol
jb
xchg
(bad)
stc
test
xchg
dec
mov
pop
nop
push
push
push
shl
jmp
and
movs
(bad)
adc
shr
adc
ret
out
and
add
push
sbb
mov
popf
add
xchg
sub
add
sub
adc
aaa
push
sub
mov
inc
xchg
inc
push
push
or
femms
sbb
test
adc
push
dec
je
mov
mov
popa
jecxz
xchg
push
mov
cmp
lock
pop
pop
(bad)
mov
lock
in
xchg
ins
and
test
ret
xor
adc
fwait
call
xchg
aad
xchg
hlt
sbb
pop
(bad)
bound
xor
inc
xchg
jle
sbb
add
jmp
outs
adc
add
xchg
aas
mov
out
cmp
xchg
and
pusha
xchg
jmp
movs
fisttp
ret
test
jg
add
imul
popa
lds
cwde
dec
call
add
xchg
cmp
push
pop
and
inc
push
xchg
rcr
add
or
test
rol
xor
mov
cmp
inc
push
adc
jae
or
and
xchg
addr16
cmp
enter
call
lods
mov
add
lods
lods
mov
cmp
sub
add
jle
cmp
or
loope
mov
mov
rcl
rol
sbb
sbb
and
fimul
int3
and
test
aad
push
dec
push
ins
xor
cmp
xchg
ss
push
mov
ja
cs
and
push
pop
and
mov
sar
xor
xchg
sbb
rcl
push
inc
push
mov
push
dec
push
mov
scas
xchg
cmp
mov
or
inc
test
sub
(bad)
push
sub
rol
dec
push
mov
stos
push
ins
cdq
inc
mov
xchg
mov
rcl
mov
add
stos
xchg
pusha
ja
jne
push
sub
bound
aam
sti
and
fisttp
inc
pusha
imul
stos
dec
mov
and
xchg
xor
mov
pop
mov
xchg
shl
ret
dec
imul
test
push
cmp
hlt
arpl
(bad)
jo
inc
add
retf
dec
pop
int
gs
into
neg
test
xor
(bad)
dec
or
mov
pop
test
pop
mov
ja
mov
das
cmp
fiadd
or
and
xchg
loopne
aas
je
adc
pop
dec
xor
inc
lods
mov
nop
int
jmp
add
sub
push
adc
retf
popa
es
add
stc
inc
jbe
add
stos
or
push
(bad)
push
ins
inc
cmps
mov
xchg
sub
pop
xchg
jb
sbb
fsub
fsub
fisttp
xor
cli
push
int
ss
cmps
test
push
xor
popa
sbb
mov
push
ins
or
adc
lock
(bad)
add
push
and
sahf
gs
xchg
or
lea
xor
jle
xchg
outs
cmp
fcomp
shr
sahf
sub
aam
dec
jg
mov
jp
push
pop
cmp
cld
inc
jmp
das
call
cmps
movs
and
adc
jle
lahf
add
ret
in
imul
inc
and
fstp
mov
xor
pusha
mov
lahf
dec
xchg
sub
jl
je
cmp
jl
cmps
and
mov
mov
adc
gs
sbb
pop
cdq
pop
aaa
icebp
xchg
mov
retf
or
mov
xor
icebp
sahf
or
mov
cwde
mov
sub
into
push
sbb
sbb
test
or
push
into
cmp
adc
push
les
int3
adc
out
mov
xchg
mov
jecxz
cmp
sub
cmp
push
cmps
sahf
ja
dec
xor
add
add
mov
inc
xor
dec
retf
adc
in
push
add
(bad)
in
(bad)
and
sbb
cmp
push
push
test
sub
data16
adc
shl
ja
mov
mov
fsub
pusha
sub
movs
daa
cdq
outs
ja
push
add
add
xor
cmp
pop
lock
test
xchg
dec
sbb
push
pushf
sbb
cmp
je
fwait
shr
nop
adc
or
dec
aam
pushf
jbe
ins
ss
mov
js
jge
jbe
je
mov
(bad)
mov
push
xchg
retf
pop
leave
loope
adc
pusha
adc
mov
ret
test
push
fs
mov
scas
jmp
or
jne
sub
and
push
fsubr
sbb
outs
mov
dec
sar
mov
and
movs
pop
scas
sub
cmp
add
fwait
push
inc
inc
push
in
push
add
mov
adc
repnz
or
jo
inc
aas
cmps
cmp
sbb
pop
jnp
repz
xor
jne
or
cmp
rol
inc
fcomp
push
and
lea
and
push
xor
cmps
mov
fcomp
mov
push
stos
sahf
popa
cmp
mov
mov
sub
jge
or
call
cmp
or
sub
pop
mov
call
mov
pop
lea
ret
dec
jb
push
adc
mov
test
test
mul
ror
mov
jae
lods
sub
inc
xor
add
and
test
sbb
xor
push
fmulp
jne
pusha
rcl
fidivr
or
adc
add
add
and
sub
mov
(bad)
push
mov
push
pushf
jg
inc
pop
pop
push
jne
dec
loope
sub
sar
mov
leave
ss
mov
fmul
aam
outs
inc
in
mov
loop
ds
add
push
std
or
pop
lods
cmp
movs
in
cmp
and
ror
add
scas
test
pop
mov
push
stos
dec
cmp
or
adc
lea
(bad)
or
jp
add
cs
clc
enter
movs
pop
cmps
add
dec
or
dec
rcl
daa
dec
inc
cmp
mov
and
jae
sub
es
mov
sub
sahf
pop
inc
test
or
pop
(bad)
cmp
jmp
mov
cwde
jmp
gs
dec
sbb
xchg
aam
clc
pop
sub
in
stos
inc
cmp
mov
pusha
dec
jecxz
and
data16
ret
aam
sar
xor
pop
dec
add
test
xchg
data16
sub
inc
(bad)
cld
mov
cld
aas
cmp
je
sti
mov
sbb
lea
call
xor
popa
and
daa
or
push
sub
inc
add
mov
sbb
dec
sub
dec
and
xchg
sub
sub
mov
add
xor
sbb
add
inc
push
adc
jmp
push
stos
mov
bound
bound
inc
arpl
pop
cmp
in
add
lock
loopne
sub
add
test
and
inc
sbb
cmp
(bad)
jmp
mov
loopne
aam
sti
rcr
mov
pop
and
sub
and
adc
data16
cwde
inc
neg
add
mov
and
mov
sar
out
adc
rol
bound
or
dec
repnz
mov
or
shr
mov
fisubr
bnd
xchg
sub
and
out
sbb
(bad)
jne
int
cmp
loop
or
add
test
mov
cld
sub
sbb
mov
outs
aas
rcl
test
rol
inc
es
movs
mov
xlat
fsub
jo
mov
int
dec
imul
fadd
ins
mov
jb
xlat
retf
mov
xor
jo
sbb
rol
inc
mov
inc
inc
adc
sub
sub
xor
add
rcr
mul
inc
or
mov
adc
jmp
push
cld
(bad)
outs
adc
jno
push
mov
push
mov
add
push
pop
mov
(bad)
mov
or
xchg
mov
fsubp
jb
xchg
jl
je
inc
dec
out
cli
push
js
rol
add
or
inc
(bad)
add
and
mov
push
inc
mov
sbb
or
and
ss
lock
jo
jne
sub
add
pop
into
test
cs
ror
and
adc
jbe
out
push
mov
push
adc
js
xchg
mov
xchg
sti
pop
add
mov
or
cmp
cli
outs
jae
mov
xbegin
mov
dec
xlat
shl
cmps
arpl
clc
ins
add
add
leave
push
ficomp
and
or
pop
or
and
je
push
dec
dec
lahf
inc
push
adc
xchg
xor
cmc
sbb
hlt
(bad)
xchg
fadd
mov
leave
pop
mov
mov
xchg
mov
out
icebp
push
outs
pop
cvtpi2ps
or
cmp
xchg
fbstp
mov
pop
adc
retf
jecxz
xor
(bad)
test
dec
mov
gs
cmp
loopne
adc
inc
and
pop
inc
shl
push
aad
mov
aam
dec
dec
pop
adc
xor
movs
xchg
jno
pop
sbb
pop
in
icebp
pusha
inc
mov
iret
xchg
das
loop
dec
in
dec
add
je
jge
je
sub
in
mov
xor
xor
clc
mov
jne
popa
adc
push
or
cld
addr16
ror
popf
cmps
mov
mov
adc
jo
sbb
fs
das
ret
push
and
inc
lea
push
jp
loopne
ins
inc
fs
hlt
das
lea
xor
sbb
xchg
xchg
mov
add
call
cmp
jne
test
and
fadd
sub
mov
push
retf
inc
inc
sub
fcom
push
leave
push
scas
(bad)
push
lds
sub
aaa
add
dec
cmps
sbb
in
sub
mov
movs
test
inc
jmp
sar
sub
mov
jo
in
jmp
jge
add
jno
cmp
jge
not
sub
cmps
cld
movs
push
loopne
and
dec
pop
push
fimul
inc
inc
and
or
inc
push
add
inc
add
dec
mov
push
mov
pop
xchg
xchg
ss
mov
jo
pop
dec
sbb
ret
nop
pusha
adc
adc
test
shr
int
cmp
add
xor
or
cmp
xchg
add
pop
lea
sbb
nop
add
sbb
aaa
leave
sahf
jmp
pusha
pusha
or
nop
bound
cmp
adc
mov
add
push
fsubr
hlt
fadd
or
lock
inc
inc
add
jbe
test
iret
sbb
add
add
cmp
jp
mov
shr
lock
add
outs
add
cmp
scas
fcom
sbb
loope
test
cmp
mov
in
movs
mov
mov
add
add
sub
inc
mov
add
xchg
push
arpl
pop
mov
(bad)
leave
sub
fild
sub
adc
fsubr
dec
mov
push
add
(bad)
adc
fs
fwait
push
or
mov
inc
rol
and
ret
sub
(bad)
test
xchg
stos
sub
repnz
and
cmp
dec
dec
es
cmp
fdivr
add
mov
xchg
call
scas
mov
dec
cdq
and
and
add
xor
sahf
icebp
inc
jmp
das
pop
adc
push
sub
stc
nop
loopne
and
xor
sbb
push
cmps
adc
or
daa
mov
sub
pusha
nop
pusha
retf
jbe
cmp
xor
pop
inc
mov
sbb
sub
add
add
in
mov
sar
fcomp
retf
pop
inc
or
dec
push
push
or
fnstsw
push
add
mov
popf
xchg
jmp
pusha
fsub
jp
sub
jmp
fld
jne
imul
sbb
pop
fdivr
retf
dec
cmp
repz
adc
gs
or
xchg
pop
xchg
stc
(bad)
and
lea
sbb
jne
dec
sbb
push
adc
mov
pop
lea
enter
jb
cdq
jmp
or
add
ficom
ins
sbb
push
popf
xor
out
xor
imul
and
push
les
sahf
jo
std
repz
add
adc
jo
pop
cld
cmp
cdq
push
je
imul
pop
es
adc
mov
ja
imul
retf
pusha
mov
pop
sbb
daa
mov
popf
xor
std
int
int
xor
add
add
scas
xchg
add
push
fs
push
out
imul
sub
sbb
xor
fst
ret
out
xor
cmps
jnp
leave
hlt
push
add
pop
push
mov
and
or
or
adc
fistp
push
add
fstp
add
cli
sub
shr
mov
jmp
cmp
dec
or
xor
fnsave
pop
xor
in
mov
xor
in
push
jl
push
imul
popa
loope
or
add
dec
and
cmp
pop
inc
adc
or
cdq
cld
and
adc
fadd
fadd
cmp
jbe
clc
push
xchg
ds
mov
xchg
stos
jmp
push
push
ret
rol
adc
pop
push
and
inc
dec
push
addr16
pop
xchg
inc
dec
daa
sbb
out
inc
imul
mov
cwde
ret
mov
mov
(bad)
fimul
out
mov
and
mov
(bad)
adc
mov
inc
adc
dec
inc
xchg
adc
mov
jmp
aaa
fwait
jmp
jns
and
mov
sub
mov
adc
cs
out
and
push
ins
sbb
xor
and
push
ins
adc
xchg
mov
js
adc
repz
mov
bound
mov
adc
clc
jmp
add
jg
shl
cmp
in
dec
lods
dec
(bad)
push
aaa
jecxz
jmp
adc
mov
cmp
lods
test
dec
xor
xor
aam
inc
aam
shr
test
sar
add
cmp
mov
rol
and
movs
mov
mov
pop
rol
inc
push
retf
inc
inc
in
mov
lods
and
adc
mov
adc
imul
test
addr16
xchg
sbb
mov
dec
jnp
adc
adc
or
mov
(bad)
shr
adc
mov
jnp
cdq
mov
sbb
lea
and
(bad)
aad
add
push
push
mov
adc
inc
test
add
addr16
xchg
js
xor
jnp
cmp
sub
pop
add
push
les
clc
push
push
ror
mov
stos
pop
inc
and
add
push
out
and
inc
or
cmp
test
add
dec
push
dec
sub
lods
cmps
pop
push
cmps
in
arpl
sub
or
(bad)
pop
mov
push
or
cmps
and
add
mov
mov
fild
jb
xchg
aaa
pop
or
push
dec
mov
cmp
or
and
add
xchg
xchg
mov
or
jmp
gs
aam
push
ins
leave
mov
test
add
es
gs
or
or
sbb
dec
mov
push
ins
or
push
lea
inc
adc
add
mov
inc
inc
lods
ins
mov
sub
ret
loope
in
les
pop
imul
in
mov
sbb
inc
mov
sbb
sub
ret
je
mov
xchg
movs
sbb
cmp
and
dec
push
xlat
mov
pusha
inc
popa
jecxz
sahf
xchg
xor
(bad)
js
cmp
add
sbb
lock
lahf
(bad)
mov
sbb
pop
pop
jne
sbb
outs
dec
psubw
sbb
pop
loopne
(bad)
push
hlt
mov
ja
enter
shl
rol
fnsave
and
cmps
add
rol
pop
pop
test
jge
xchg
push
jne
mov
sar
xor
sub
inc
push
adc
lahf
adc
in
mov
add
sub
cld
inc
push
and
loope
jl
test
sbb
rcr
fwait
adc
adc
or
and
(bad)
call
xchg
retf
in
nop
or
push
mov
ins
ins
cs
retf
in
jo
je
les
push
pusha
xchg
or
cmps
pop
or
lahf
mov
cmps
mov
aam
sbb
outs
sub
jnp
sbb
push
inc
push
cmp
sbb
lods
mov
xchg
mov
ret
add
adc
add
xor
dec
inc
sbb
push
fild
fcom
mov
imul
dec
mov
push
xchg
sub
add
mov
xor
add
outs
push
adc
or
fidiv
mov
xor
nop
jb
(bad)
adc
and
cmp
and
cmp
jbe
jb
inc
movs
adc
adc
imul
test
lods
pop
imul
xchg
add
push
add
int3
push
outs
ds
xchg
push
int3
ret
mov
xor
je
bound
and
or
(bad)
and
jmp
cwde
test
outs
pop
call
jo
and
xchg
aaa
mov
sub
cs
lock
sub
mov
sbb
xor
inc
rol
movs
dec
shl
or
sbb
pop
ins
or
pop
je
int
enter
jmp
popa
and
or
push
pop
mov
shl
and
scas
ja
jg
pop
sub
xor
or
test
cmp
push
xor
mov
imul
gs
push
mov
and
dec
and
dec
sub
lods
and
cmp
add
push
sbb
adc
mov
mov
inc
inc
cmp
push
dec
inc
xor
and
or
cmp
sbb
push
inc
sbb
in
sbb
enter
in
or
pop
and
test
push
icebp
ret
adc
lea
mov
gs
or
inc
push
or
sbb
pop
jns
cmp
jae
pop
mov
and
ret
(bad)
sbb
add
icebp
xor
aaa
jne
add
sbb
shr
push
xchg
xchg
lahf
aam
ret
test
mov
mov
sar
or
add
or
jae
sbb
ficom
or
fcmovnbe
sbb
add
add
mov
sbb
cmc
dec
adc
sbb
shl
outs
and
mov
scas
cld
push
and
sub
fnstcw
dec
push
mov
mov
aam
xchg
pop
rcr
rcl
mov
pop
xlat
dec
add
popa
call
add
sti
daa
xchg
mov
cmp
(bad)
out
mov
push
or
aas
or
jp
mov
or
jbe
dec
dec
push
mov
adc
daa
test
cdq
push
hlt
sbb
dec
or
xor
push
jl
fistp
jmp
sbb
cmp
jge
jmp
cmp
(bad)
add
adc
aas
mov
mov
cdq
clc
mov
adc
add
sub
and
into
cmp
and
fst
or
sar
cli
cwde
jle
jo
and
add
push
push
cld
adc
sti
ds
or
add
mov
mov
in
mov
bound
call
push
mov
lea
jb
int
ins
jmp
aas
jne
sbb
inc
imul
jg
retf
add
mov
loope
mov
adc
and
sub
aam
and
jmp
sub
aam
call
dec
mov
adc
sbb
and
jg
hlt
rcr
push
movs
pop
sbb
xor
lods
mov
push
aaa
mov
mov
add
add
or
push
mov
cmp
pop
or
or
mov
inc
xor
mov
lea
jne
push
dec
push
add
movs
inc
rol
hlt
sbb
cmp
loope
inc
ss
jg
bound
and
and
pusha
loope
jae
or
mov
push
inc
xchg
add
sbb
leave
pop
rcr
ficom
push
gs
pop
mov
sub
pusha
add
sub
sbb
pop
stos
jge
mov
and
add
adc
mov
jle
xor
pop
in
add
push
dec
sbb
push
push
adc
test
dec
sub
lods
fstp
outs
mov
rcl
add
or
mov
adc
retf
dec
add
xchg
mov
neg
cmp
jbe
sub
mov
fisttp
sub
push
jae
out
add
mov
add
cdq
or
adc
jmp
dec
and
outs
inc
sbb
ret
ror
jge
pop
xor
test
dec
(bad)
dec
lds
popa
inc
jge
jne
call
mov
aaa
mov
xor
inc
shl
retf
jmp
pop
jno
or
sub
adc
mov
mov
sub
push
jge
popa
jo
cmps
and
cmc
jbe
push
mov
enter
mov
shr
push
pop
push
or
cmp
test
aam
loopne
xchg
or
lods
fs
out
loope
xchg
shl
push
dec
sub
mov
jl
push
retf
clc
fwait
push
dec
pop
or
cmp
push
push
adc
add
mov
mov
inc
ret
or
fmul
sub
inc
adc
xchg
xchg
add
adc
mov
mov
jne
popf
inc
cdq
adc
mov
daa
scas
int
sub
lss
test
je
sbb
je
xchg
popf
dec
add
or
cmp
mov
inc
imul
xor
push
cwde
sahf
xchg
or
mov
out
inc
mov
test
mov
aam
add
fmul
cmps
xor
mov
xchg
fcomip
hlt
and
xor
and
test
xchg
cmp
cmp
and
fs
pop
imul
xor
rcl
push
add
test
add
mov
sub
ja
cs
inc
push
mov
pop
jo
das
add
jne
or
jne
outs
sbb
cmp
mov
fnsave
jmp
cmp
and
mov
push
mov
jae
es
es
stos
inc
sub
js
je
add
mov
mov
dec
lea
or
ret
pop
pop
adc
inc
xchg
pop
add
enter
or
mov
mov
cmps
aam
sub
fidivr
push
push
pusha
adc
mov
loope
das
sub
iret
rcl
pop
pop
js
and
loopne
or
push
nop
dec
addr16
test
into
lahf
or
push
jmp
adc
push
dec
shl
fs
jmp
pop
mov
inc
jo
adc
jmp
push
dec
dec
movs
cmp
xor
adc
push
std
rol
cmp
push
shld
cmp
jp
inc
or
out
mul
out
or
jl
mov
push
lds
xchg
out
stc
inc
into
add
int
add
leave
mov
sub
add
test
adc
mov
jl
mov
add
adc
add
popa
xchg
dec
sub
and
xor
inc
mov
or
mov
xchg
cwde
sbb
and
xchg
jo
adc
jno
dec
(bad)
pop
cmp
test
cwde
and
jl
idiv
cmp
int3
das
xchg
push
enter
mov
push
pop
push
pop
jns
sub
fs
pusha
or
sbb
adc
inc
mov
rol
mov
jnp
mov
jo
out
outs
xchg
and
pop
hlt
fmul
popa
dec
add
sbb
shr
in
push
xchg
and
loopne
int
je
add
or
ret
sbb
ret
dec
xchg
clc
mov
dec
pusha
and
dec
mov
test
pop
cwde
ror
mov
mov
and
add
neg
jmp
xlat
push
cmp
iret
pop
push
loope
clc
add
add
dec
or
sub
or
cmp
mov
push
scas
lea
ret
test
mov
cmp
mov
and
ins
adc
ds
dec
push
jge
mov
xchg
jg
fidiv
fucomp
call
ss
jbe
jge
inc
(bad)
sub
or
sbb
test
push
popf
and
add
and
mov
(bad)
cwde
sbb
movs
je
lods
leave
les
out
pmaddwd
mov
or
pop
xchg
addr16
sbb
mov
add
leave
add
nop
add
ret
add
stos
xchg
mov
arpl
ficom
loope
fidiv
jg
xor
loope
out
push
pop
mov
or
pop
leave
aad
cmp
inc
rcr
stc
lahf
movs
xor
xchg
xor
sbb
je
push
sub
arpl
js
fbstp
xchg
adc
scas
repz
clc
in
xor
hlt
xchg
or
or
adc
popf
adc
(bad)
jle
inc
or
cld
hlt
mov
mov
xor
pushf
add
or
pop
pop
jmp
int3
arpl
xor
xchg
ds
and
inc
xchg
mov
repz
sbb
jmp
je
add
dec
loopne
dec
mov
js
das
adc
fisttp
cmp
dec
cld
fwait
nop
adc
cmp
hlt
(bad)
ror
or
jo
dec
add
mov
xor
push
pop
sbb
or
mov
mov
je
je
(bad)
aad
sbb
jbe
dec
xor
jae
dec
mov
fild
push
arpl
add
imul
popa
ins
or
dec
adc
jl
add
loope
ins
mov
dec
lea
xor
pop
pop
dec
fcom
or
movs
in
mov
sub
mov
cwde
sbb
jb
dec
inc
ret
punpckhbw
lock
add
(bad)
loopne
pop
cmp
fisttp
in
mov
movs
int3
push
loopne
mov
jge
push
test
lea
lods
(bad)
pop
mov
xchg
dec
mov
or
test
dec
adc
and
loopne
je
pushf
adc
popf
ss
sub
sbb
pusha
xchg
adc
or
mov
mov
sbb
shr
dec
xchg
sub
cmp
pop
or
fmul
mov
inc
pop
xchg
pop
pop
push
mov
je
call
les
add
push
imul
mov
sbb
imul
xor
(bad)
sbb
sbb
pusha
adc
xchg
cmps
inc
or
cmps
imul
jle
push
and
xor
adc
cli
imul
pop
jno
or
loope
jg
xchg
jmp
fsub
fadd
xlat
add
add
jmp
ss
loop
mov
mov
scas
and
pop
clc
or
fldenv
dec
lea
imul
cmp
push
rcl
push
call
push
adc
test
xchg
xchg
cmp
dec
sbb
cs
mov
xchg
sbb
and
inc
xor
int
into
cmp
xlat
xor
xor
pop
jne
xlat
inc
add
cmps
or
rcl
lock
jecxz
dec
enter
adc
sbb
popa
dec
je
and
xchg
cmp
adc
fcmove
dec
pop
and
loop
add
adc
and
popf
sub
test
jecxz
mov
ds
rcl
add
je
dec
xor
cmp
ret
add
inc
cwde
xor
xor
xchg
scas
inc
mov
lea
pop
dec
sbb
xor
sbb
inc
jno
je
sbb
lock
and
dec
mov
aaa
inc
add
lea
adc
dec
test
push
jg
adc
retf
in
je
out
cwde
cmc
dec
enter
mov
sbb
push
xchg
add
mov
cmp
push
jl
pop
cmp
jle
popf
sub
pop
das
sub
movlps
sar
jns
push
aaa
dec
pop
ja
out
test
sbb
ins
inc
icebp
fcom
sbb
lea
sub
sub
mov
rcl
rcr
aas
loop
(bad)
push
jmp
push
or
push
mul
inc
loopne
or
dec
test
and
push
mov
sub
enter
add
cmp
movs
push
fs
mov
jb
adc
sub
jno
in
dec
jmp
fs
pop
lods
cmp
add
rcr
pop
mov
imul
dec
add
leave
push
pop
cmp
xor
dec
cdq
(bad)
mov
loop
or
mul
lock
inc
adc
or
jge
ror
and
sub
pop
(bad)
movs
rcr
test
xor
or
or
xchg
xor
aam
mov
popf
jne
inc
fcom
(bad)
loope
addr16
enter
inc
inc
pop
js
ror
lock
int3
and
enter
les
mov
test
js
stos
aam
call
xor
cmp
hlt
cwde
aam
sub
xchg
shl
hlt
mov
outs
add
xor
sahf
inc
loopne
add
jns
dec
or
inc
sbb
cmp
call
push
push
inc
rcl
aam
sbb
outs
push
xchg
and
ret
xor
xor
pop
(bad)
cmps
mov
inc
adc
cmp
or
pusha
lods
(bad)
push
es
sub
or
mov
cli
mov
add
push
enter
sbb
push
es
mov
mov
and
fcomp
data16
dec
and
mov
and
int3
xchg
ret
push
fcomp
sbb
or
lock
add
pop
lods
add
in
in
lods
into
cmp
xchg
xchg
inc
push
mov
icebp
js
dec
inc
pop
pusha
xchg
pop
or
stos
inc
mov
pop
xchg
inc
xor
leave
add
cmps
or
aad
jne
push
fs
fist
sub
add
mov
inc
xor
mov
cmp
and
mov
cs
mov
mov
add
adc
xchg
mov
jmp
lods
leave
mov
dec
jnp
lock
sub
push
lea
lods
push
and
add
adc
or
adc
(bad)
jmp
repz
cmp
mov
and
sbb
movs
sbb
or
adc
and
in
movs
daa
sbb
adc
sbb
jns
adc
lods
jae
cmps
loop
or
add
not
sub
push
mov
test
dec
inc
xchg
out
movs
dec
(bad)
dec
pusha
adc
movs
sar
cs
adc
or
nop
adc
xchg
out
xchg
or
lahf
fstp
and
lock
push
ret
out
sbb
lods
and
fcom
push
mov
xor
or
mov
inc
xchg
lods
xchg
xchg
movs
adc
lods
xor
test
add
mov
adc
xor
inc
push
lods
push
push
adc
mov
pop
lock
test
aaa
xlat
sbb
cdq
outs
add
sbb
and
call
pop
or
xadd
and
lock
xchg
mov
and
sub
cs
nop
js
or
mov
xchg
bound
adc
gs
or
push
gs
mov
dec
or
sub
jmp
xor
loopne
add
push
rcl
mov
aam
cmp
or
mov
xchg
ficomp
retf
and
fistp
pop
adc
xor
movs
fistp
lea
dec
cmc
push
sti
adc
clc
mov
or
dec
fcomp
fdivr
leave
pop
rol
sahf
mov
inc
and
mov
mov
mov
rol
or
sbb
iret
outs
lods
cmp
and
fdivr
adc
ror
and
js
mov
inc
es
mov
or
or
push
std
xchg
push
js
lock
enter
and
pop
loopne
mov
sar
or
or
ins
je
adc
cmp
lods
dec
add
mov
jmp
xor
or
inc
js
enter
fs
je
sbb
push
jbe
sbb
adc
sub
movs
or
test
add
or
ins
sub
inc
imul
ror
inc
sub
and
sbb
xor
dec
dec
mov
push
mov
add
mov
fwait
stc
xor
mov
retf
mov
inc
sbb
or
mov
(bad)
push
mov
mov
cmp
inc
push
(bad)
loopne
cwde
pop
xor
aas
mov
sub
add
xor
push
or
or
xor
add
and
ret
and
lock
add
xor
call
or
mov
and
xor
inc
inc
pop
dec
fcom
push
add
sub
repnz
or
es
test
add
sub
cmp
push
mov
sbb
jg
and
inc
push
(bad)
mov
cmp
push
lods
adc
sub
ins
loopne
iret
popa
or
push
xchg
xor
cdq
outs
ret
pop
sub
jno
pushf
push
jmp
push
jmp
cmp
jns
dec
test
ja
xchg
xchg
push
sub
sbb
push
rcl
sbb
inc
scas
fcom
lock
dec
inc
imul
add
retf
rcl
pop
clc
sub
add
add
or
fs
mov
js
call
add
sbb
lods
dec
inc
add
push
ja
adc
xor
jg
dec
sbb
dec
xchg
icebp
fdivr
in
push
dec
dec
sub
ficom
xor
and
mov
push
jge
sbb
or
(bad)
and
les
or
add
ins
xchg
mov
ret
or
int
sbb
jmp
(bad)
and
shl
in
in
dec
jae
sub
add
push
cmc
aam
sbb
ds
pop
mov
mov
inc
mov
loope
mov
test
dec
dec
adc
inc
sbb
and
jno
lods
nop
push
adc
dec
movs
push
je
mov
jmp
xchg
mov
daa
sub
dec
retf
mov
inc
sti
or
movmskps
sbb
and
add
(bad)
cwde
mov
add
lea
sbb
shr
add
and
ins
push
(bad)
int3
add
les
aaa
jge
imul
add
retf
push
cdq
outs
bound
jp
or
aad
(bad)
cmp
push
or
sbb
add
dec
(bad)
lods
dec
inc
or
jns
xchg
cdq
out
ins
mov
test
repnz
sbb
push
inc
pop
mov
mov
dec
add
sbb
push
test
popf
pop
lods
jae
test
adc
mov
ins
jo
shr
adc
dec
adc
xor
add
or
test
mov
sub
push
sbb
sub
iret
inc
repnz
push
das
xlat
test
and
jo
fwait
cmp
jmp
inc
sub
mov
add
(bad)
sub
dec
sub
xor
sbb
or
or
add
shl
push
hlt
push
and
jecxz
push
clc
add
xor
cmp
push
and
movs
sar
pop
int3
or
int
loopne
ret
repnz
gs
push
sbb
mov
sahf
mov
cmp
pop
imul
(bad)
sub
inc
ret
rcl
inc
or
pop
add
ret
jecxz
inc
loopne
sub
pop
jge
xchg
dec
movs
rol
add
add
adc
push
mov
push
and
sti
inc
sbb
aaa
popa
rcr
push
adc
xchg
xchg
and
jp
push
adc
js
push
es
pop
xchg
push
push
dec
inc
fchs
sbb
test
popf
mov
sbb
dec
popa
fnsave
es
sbb
add
fwait
inc
or
popf
adc
imul
fs
out
pop
inc
pop
aam
jne
mov
push
and
adc
sub
cmps
clc
jle
cmp
sbb
fs
add
jmp
fisub
retf
push
xchg
fstp
sbb
pop
mov
add
pop
push
add
mov
add
dec
and
push
mov
push
adc
or
daa
sbb
and
push
xlat
mov
cmovns
pop
shl
lods
or
test
imul
inc
mov
push
pop
add
test
adc
mov
sbb
mov
push
enter
aad
test
push
add
dec
out
and
test
inc
js
sti
xchg
adc
popa
jecxz
popa
xchg
adc
adc
ins
bound
adc
ja
in
lea
xor
cmp
call
mov
enter
mov
sar
dec
or
or
outs
js
sbb
lahf
clc
mov
or
sub
push
dec
add
inc
pop
or
pop
test
xor
and
jle
mov
rcr
cmp
cmp
mov
mov
addr16
mov
cdq
add
idiv
and
and
xchg
data16
sahf
inc
mov
dec
jge
xor
xor
and
push
into
cmp
sbb
mov
cs
add
mov
dec
xor
popf
imul
push
xor
adc
leave
enter
pop
(bad)
ss
(bad)
repz
xor
jp
ins
clc
cmp
jge
popa
test
jg
pop
pop
adc
sub
jno
mov
add
loope
sbb
outs
and
and
xor
cwde
(bad)
mov
mov
popa
loope
fstp
aad
add
mov
mov
xchg
xor
jo
movs
inc
inc
inc
dec
jnp
sbb
or
nop
xchg
add
cmps
rol
daa
push
daa
aad
xor
xchg
shl
icebp
jl
jmp
and
in
movs
sub
add
mov
inc
xchg
jnp
inc
dec
adc
pop
push
cmp
cs
outs
cli
adc
or
push
jno
adc
dec
mov
dec
test
in
pop
icebp
dec
pop
les
std
lock
ret
in
add
and
mov
and
xchg
nop
mov
sbb
or
inc
call
test
inc
lock
or
daa
js
(bad)
xchg
or
mov
sub
or
dec
mov
imul
fs
dec
lea
inc
add
add
mov
das
push
ja
add
mov
hlt
imul
jno
jno
icebp
push
aaa
add
out
mov
xor
sub
je
add
jle
xor
mov
cdq
clc
jle
and
cld
pusha
popf
mov
ja
add
jg
mov
sbb
mov
xor
xchg
(bad)
shl
test
pusha
cmc
popa
test
sub
fist
add
add
imul
mov
dec
loopne
inc
test
adc
and
inc
cs
inc
fst
js
les
sub
sbb
icebp
cmp
loopne
push
push
sub
push
ret
scas
mov
or
or
mov
xor
adc
xchg
lods
dec
xor
sti
xchg
outs
add
pop
ret
test
hlt
or
jbe
mov
mov
jae
scas
inc
jl
sbb
push
or
and
rcl
and
lea
sub
ss
and
arpl
bndldx
pop
and
fld1
xor
adc
dec
add
pop
cmp
dec
lds
sbb
leave
push
js
inc
dec
dec
fld
add
ins
jne
xchg
and
dec
pop
and
mov
es
test
mov
retf
jb
pop
dec
cmp
fidiv
pop
jne
sti
dec
add
mov
pop
or
push
pop
test
and
jae
rcr
xor
adc
shl
dec
mov
imul
movlps
cmp
movs
jp
adc
xchg
aam
xchg
push
ins
sub
or
clc
rep
ror
push
ret
and
xor
add
fnstcw
pop
pop
adc
xor
lods
mov
jl
mov
mov
add
mov
jne
and
in
or
mov
int
push
sub
lahf
push
add
ja
add
add
sub
loop
and
push
inc
adc
shl
or
sub
xor
mov
add
stos
jmp
and
movs
push
fmul
xchg
inc
jmp
add
mov
xchg
lods
or
mov
xor
push
pop
loopne
xchg
or
pop
inc
adc
ret
add
or
cld
rcr
xor
mov
xchg
dec
and
adc
test
and
and
mov
pop
mov
and
rcr
sub
and
pop
or
dec
dec
inc
ror
or
popa
xor
loopne
xor
pop
bound
pop
xchg
ja
mov
and
jne
outs
pop
or
out
in
je
rcl
fist
and
inc
imul
ret
xlat
fstp
leave
lea
sub
dec
or
icebp
mov
call
push
fbld
pop
inc
ss
hlt
sbb
add
mov
xlat
add
xor
in
ficom
dec
mov
aaa
or
and
popf
cmp
push
lea
push
xchg
pop
push
cs
sbb
jbe
stos
(bad)
mov
add
ss
jl
dec
(bad)
xchg
cdq
xor
mov
push
fwait
addr16
dec
popa
dec
popf
mov
retf
add
push
mov
sahf
fistp
mov
add
lahf
push
test
fldcw
jg
and
arpl
fidiv
fisttp
test
mov
jp
stc
inc
fild
pushf
dec
sub
ins
or
push
or
pop
daa
sti
div
fidiv
rcl
dec
out
pop
sbb
jmp
mov
sbb
add
sbb
mov
lock
in
jno
pop
mov
inc
pop
arpl
jno
sub
sbb
movs
sbb
arpl
fist
out
int
aam
mov
cmp
mov
enter
fadd
pushf
push
adc
or
xor
sbb
ss
push
mov
loope
lds
es
and
fimul
and
pop
push
movs
push
adc
popa
add
fadd
push
inc
sahf
je
loopne
pop
retf
inc
or
imul
xchg
and
adc
pusha
popa
pusha
xchg
add
popa
retf
loopne
pushf
or
mov
dec
fcom
push
push
sub
add
ins
mov
js
and
lods
rcr
sahf
and
inc
or
jnp
lea
movs
in
sub
adc
aaa
cwde
or
loope
stos
and
sub
pop
xchg
jl
popa
or
add
mov
mov
cmp
add
adc
or
inc
(bad)
push
shr
fbstp
xor
ins
adc
imul
pop
test
add
jg
push
sub
or
add
inc
adc
mov
sub
mov
sbb
(bad)
or
stc
lock
adc
xor
or
ret
cmp
pop
aaa
sub
in
and
sti
pop
add
add
repnz
add
movs
imul
rol
dec
mov
data16
xor
addr16
mov
shr
aas
setae
or
rcl
lods
xor
add
mov
jle
mov
iret
imul
push
rol
cmp
jg
ds
jo
cmp
std
add
jp
lea
xchg
ins
jo
inc
stos
push
cmp
repnz
mov
and
xchg
sbb
jmp
and
jo
jl
xchg
(bad)
jl
jmp
imul
adc
mov
cvtpi2ps
mov
push
mov
das
int3
dec
add
add
fwait
retf
pop
pushf
test
mov
pop
mov
cmps
adc
daa
cmc
pop
cwde
pop
mov
jge
enter
nop
pop
test
cmps
or
data16
rol
pop
or
mov
push
inc
ret
sbb
test
push
test
mov
dec
mov
dec
adc
inc
rcl
sbb
pusha
jl
mov
adc
jbe
rol
fidiv
dec
arpl
inc
push
add
jl
sbb
mov
dec
pushf
sub
xchg
aam
movs
adc
aam
jg
call
xchg
inc
or
outs
and
fdivp
xor
jbe
add
test
inc
or
mov
pop
mov
lods
jp
inc
dec
mov
mov
mov
hlt
sar
retf
inc
cmp
ret
test
inc
popa
dec
add
ss
(bad)
sar
add
hlt
jle
pop
fdiv
push
cmp
pusha
mov
xor
pop
fld
(bad)
and
iret
push
add
inc
mov
ja
loop
jnp
push
dec
jo
dec
cmp
shr
dec
js
pop
or
cmp
lods
xchg
stos
cwde
enter
(bad)
push
pop
pop
daa
add
mov
ror
xchg
jl
mov
adc
xchg
jge
retf
add
repnz
movs
adc
jl
pushf
pop
ret
lods
hlt
in
lea
push
add
adc
cmp
jg
js
push
mov
inc
lods
adc
retf
mov
pop
fmul
les
loopne
lock
not
dec
jns
pop
mov
push
mov
lods
das
push
pop
addr16
es
mov
add
test
add
test
sar
(bad)
sahf
imul
fs
mov
mov
and
loope
push
inc
jo
sbb
lods
gs
into
dec
and
clc
mov
cs
cmp
rcr
retf
in
les
adc
push
dec
xor
add
in
aam
shl
imul
nop
ror
adc
cmp
mov
mov
xor
call
cmp
jg
(bad)
add
dec
cwde
mov
or
lods
arpl
mov
pop
mov
mov
daa
and
call
and
scas
cmp
mov
push
or
add
lock
xchg
nop
aam
test
mov
sbb
or
mov
or
sbb
push
mov
jle
xchg
pop
out
sbb
pop
inc
jo
(bad)
push
movs
or
inc
sbb
mov
mov
inc
pop
ficomp
sub
loop
jmp
ss
test
popa
test
push
fiadd
push
pop
push
mov
or
add
push
jb
sbb
dec
pop
add
or
xchg
inc
pop
add
and
mov
mov
xchg
in
lahf
jb
jnp
jle
jb
push
add
inc
loope
stos
mov
bound
addr16
inc
inc
jl
iret
fwait
jo
dec
rcr
aas
aaa
pop
mov
lods
jo
mov
xchg
xor
ror
retf
mov
and
add
xor
push
inc
lea
mov
jg
lea
dec
or
add
sbb
pop
jecxz
cmp
inc
movs
add
pop
mov
fs
loopne
jne
test
(bad)
shl
jl
jbe
adc
loopne
cdq
jnp
cmp
or
jle
fisubr
lock
adc
pop
jecxz
or
push
rcl
je
lea
push
test
enter
push
cmc
mov
dec
and
sar
adc
xor
int3
mov
aaa
das
or
aad
cmps
cmps
fnstsw
sahf
and
cmp
pop
add
mov
ss
cmp
add
and
rol
daa
inc
rol
fst
add
add
push
dec
cmp
test
leave
jae
cmp
lahf
clc
push
and
sti
add
or
inc
daa
jne
sub
and
adc
push
add
jge
stc
pop
fbstp
jecxz
and
push
iret
inc
popa
nop
pop
and
imul
jl
mov
(bad)
pushw
test
cwde
cli
jb
or
test
xor
add
lock
sub
out
adc
bound
pop
inc
cmps
jl
xchg
inc
data16
mov
loopne
cdq
fisubr
inc
cdq
stos
aas
les
sub
and
loope
leave
pop
inc
bound
popa
leave
leave
repz
push
dec
sub
retf
sbb
inc
nop
enter
xchg
xor
dec
jns
mov
push
neg
test
and
sbb
call
out
pop
ret
inc
push
retf
jnp
in
sbb
in
daa
dec
xor
(bad)
xor
push
pop
and
fld
inc
pop
sub
jle
or
outs
sub
push
jae
pop
mov
sub
xchg
mov
dec
call
ja
sbb
dec
nop
and
and
jne
xchg
test
or
rol
inc
je
(bad)
popa
mov
popf
fldcw
add
ret
dec
lock
sub
lods
iret
push
mov
sub
mov
inc
and
and
daa
jmp
lea
mov
add
or
sbb
lods
add
push
rcr
in
loope
dec
jecxz
jle
std
movs
test
pushf
ror
or
xor
sbb
enter
mov
cmc
retf
push
adc
sub
int3
test
fwait
and
mov
sub
sbb
xor
xor
movs
inc
dec
or
lds
lock
call
pop
xchg
and
push
movs
or
lahf
push
sub
mov
mov
adc
and
pop
sbb
or
xor
xlat
add
pusha
leave
push
inc
ror
mov
sbb
sbb
add
cmp
xchg
and
push
bound
adc
mov
adc
ret
loopne
jne
dec
add
push
js
(bad)
test
sbb
sbb
movs
sub
loopne
sub
mov
(bad)
fbstp
and
cmps
add
jo
xor
retf
mov
mov
add
ret
xchg
xor
sbb
adc
adc
repz
sub
dec
sbb
jle
sub
fiadd
ror
in
add
dec
mov
add
(bad)
mov
push
or
lods
out
jmp
mov
jecxz
add
fwait
and
lock
ins
lds
sar
add
and
int3
dec
stc
jmp
adc
mov
loope
pop
xchg
add
inc
or
pop
movs
mov
div
add
add
jnp
idiv
push
ret
cmp
in
mov
cmp
cdq
nop
dec
adc
sbb
inc
loopne
xor
and
out
and
cmp
inc
js
add
loopne
or
cmc
add
pop
(bad)
cld
adc
fdiv
sub
or
inc
mov
test
xor
dec
adc
loope
fmul
mov
push
add
or
int
lea
fucomip
popa
or
or
inc
ret
add
popf
push
mov
mov
sub
xchg
les
ret
sbb
xchg
retf
add
arpl
mov
daa
pop
add
jge
dec
es
lea
inc
call
adc
add
inc
loope
pop
or
adc
mov
ret
push
je
add
rcl
xor
jp
mov
inc
lods
frstor
pusha
outs
nop
mov
rcl
aam
cmc
ins
call
cld
ror
adc
cmc
nop
sti
lds
or
sbb
sbb
push
out
and
int3
or
les
mov
imul
add
mov
lahf
jmp
int3
jnp
and
push
je
inc
aad
cmc
and
mov
jmp
test
xchg
adc
adc
inc
mov
aaa
into
out
psrld
arpl
mov
aam
pop
add
aaa
add
std
or
sub
xchg
lea
jle
bound
push
adc
jnp
jne
push
or
pusha
adc
jmp
bound
or
jne
mov
xor
ror
int
out
jle
test
nop
ror
mov
xchg
(bad)
push
or
mov
push
lods
dec
mov
sbb
jmp
mul
mov
push
icebp
sbb
xchg
xchg
mov
or
jne
push
xor
push
adc
sbb
popa
icebp
inc
jnp
xor
cmp
xor
dec
add
add
dec
icebp
xor
add
or
movs
xchg
add
test
jge
loopne
mov
mov
loop
pop
rcr
xchg
addr16
pusha
(bad)
nop
sbb
out
rcl
adc
cdq
or
cmp
jle
bound
add
test
and
or
jle
jb
cmp
add
jge
rol
cmp
add
pop
mov
imul
gs
inc
loopne
fisttp
dec
adc
jl
dec
xchg
add
add
push
(bad)
mov
and
add
dec
or
inc
rol
rol
ds
es
add
call
dec
test
cdq
fisttp
rol
cmp
sbb
mov
aad
and
add
retf
das
add
add
push
mov
cmps
popa
mov
subps
sbb
shl
adc
push
popf
sub
test
adc
adc
xor
cmp
lahf
push
sub
or
or
xor
movs
xchg
test
jae
push
cmp
jge
dec
inc
xchg
cmp
out
sub
or
cs
and
sub
fisub
lea
mov
adc
mov
mov
es
mov
mov
inc
sbb
sbb
push
pushf
std
out
shl
pop
adc
cmp
sbb
mov
xor
rcr
jmp
scas
add
unpckhps
xlat
inc
cmp
js
movs
mov
pop
das
out
adc
test
scas
xor
dec
cmp
jno
sti
ret
cmp
pusha
cmp
add
lock
inc
sbb
pop
or
adc
lea
outs
dec
mov
clc
mov
adc
lea
push
inc
sar
cmp
adc
push
lock
jo
jge
mov
mov
push
mov
xor
jmp
inc
cmps
mov
mov
jb
cld
and
add
popf
shl
enter
or
add
mov
xchg
xchg
pusha
shl
enter
xchg
add
imul
sar
jns
out
adc
pop
cmp
xor
mov
jg
xor
add
or
push
mov
push
add
in
stc
clc
push
ror
lea
xor
and
aas
cmp
add
test
out
push
shl
nop
dec
sbb
into
stc
or
xor
pop
das
lea
addr16
pop
clc
mov
xor
and
cmp
add
pop
repz
jmp
or
pop
pop
fwait
test
sub
(bad)
(bad)
cli
mov
bound
fsub
inc
cmp
outs
cmps
cmps
xor
jmp
add
adc
mov
imul
add
add
enter
mov
sbb
and
or
push
adc
pop
loopne
mov
push
jne
add
add
ret
adc
fldenv
ja
or
pop
adc
lds
inc
mov
fdiv
sbb
int3
test
retf
mov
shl
ror
ret
pusha
mov
mov
pushf
cmp
pusha
sbb
clc
adc
and
cmp
stos
mov
dec
sbb
add
jecxz
or
ror
lods
or
jno
sub
mov
lock
ucomiss
mov
and
or
cmp
sbb
mov
xor
lods
inc
jmp
xchg
lock
lods
stos
add
inc
push
inc
test
rol
adc
add
aaa
xor
dec
xrelease
mov
pop
mov
and
fstp
mov
cmp
cmc
ss
sbb
jmp
dec
sub
and
mov
sub
(bad)
push
cdq
mov
cmp
dec
clc
mov
pop
adc
and
jmp
adc
jo
sbb
shufps
or
pop
jle
dec
jge
cmps
(bad)
into
stos
jmp
jle
mov
xor
add
movs
pusha
je
adc
adc
xchg
or
inc
dec
xlat
in
popf
jo
call
aaa
shr
cmp
cmp
scas
data16
adc
ret
or
cwde
jg
xchg
loop
lods
sub
pop
sahf
fmul
(bad)
jae
mov
movs
ret
in
or
fwait
xor
ret
and
dec
mov
in
call
daa
mov
and
daa
pop
push
(bad)
mov
dec
push
je
cmp
sbb
or
popa
adc
adc
jbe
sub
mov
mov
or
out
dec
jae
rcr
daa
xchg
test
inc
pop
out
out
dec
cmp
repnz
sub
shl
lods
das
adc
arpl
mov
sub
(bad)
fiadd
loope
mov
jl
hlt
mov
adc
jo
fmul
add
jne
cmp
or
aas
pop
rcl
jecxz
fadd
out
jge
mov
int
inc
ret
in
add
je
adc
jmp
loope
mov
cwde
xchg
int
je
icebp
xor
lods
fstp
xor
add
mov
mov
into
jle
adc
and
fs
jl
out
push
xor
xchg
xchg
mov
adc
rol
mov
and
jg
sbb
mov
test
inc
mov
jl
add
inc
ins
sub
push
pop
push
loope
cmp
ss
gs
dec
pop
stc
add
retf
pop
pop
aad
imul
sub
xor
cwde
test
ret
ret
imul
shl
and
inc
sub
dec
mov
rol
jl
mov
stc
cs
mov
jmp
inc
je
stos
cmps
cmp
dec
arpl
xchg
(bad)
xor
movs
xchg
ins
pop
add
imul
or
dec
or
push
imul
push
push
loope
jle
rcr
int3
or
xor
dec
daa
retf
jno
stc
push
add
dec
loope
test
xor
jmp
or
push
test
cdq
in
iret
dec
test
movs
adc
jns
out
stc
xor
add
rol
push
inc
push
js
xchg
je
(bad)
adc
jle
ret
pop
ins
or
jp
push
or
jp
pop
add
inc
arpl
xchg
hlt
cmp
(bad)
outs
pop
pop
cmp
test
into
mov
mov
pop
mov
call
sar
mov
cmp
jle
test
sar
iret
jb
push
sar
xor
jmp
daa
sbb
dec
mov
out
xor
pusha
ins
mov
movhps
enter
add
dec
push
jmp
cmp
add
adc
repz
nop
dec
xchg
fs
or
jmp
cmp
xor
cs
lock
adc
je
and
loopne
pop
mov
sub
add
and
jp
inc
mov
adc
rcl
jl
and
out
adc
add
icebp
mov
inc
clc
or
sbb
and
cmp
cmps
shl
push
or
pop
pop
push
stos
test
or
ror
cs
into
mov
or
adc
xlat
mov
cmp
sub
cmp
jecxz
cmc
nop
adc
mov
sbb
jbe
inc
cmp
push
dec
inc
jge
inc
scas
or
sbb
mov
xchg
xchg
sbb
js
mov
or
jne
aas
lock
imul
lea
xchg
into
scas
mov
dec
test
(bad)
ds
loop
pop
sbb
jnp
aad
add
pusha
dec
xor
cmp
ret
jbe
xchg
je
shr
jnp
mov
icebp
mov
mov
enter
xor
pop
cwde
mov
pop
add
and
push
xor
xchg
mov
add
jmp
mov
imul
push
or
daa
inc
clc
cdq
xchg
push
cmp
pop
ror
sub
inc
dec
jl
sbb
or
dec
test
mov
cmp
imul
jmp
test
add
adc
into
or
adc
fidiv
sub
pop
xchg
jb
inc
jmp
pushf
out
mov
inc
call
and
je
es
ss
or
push
dec
mov
dec
xor
pushf
jbe
(bad)
fmulp
fst
cmps
inc
inc
jbe
pop
lods
inc
push
inc
and
pop
cmp
ss
mov
and
inc
mov
push
dec
mov
ss
sub
push
xlat
rcl
cmp
and
push
jne
push
addr16
jmp
sub
retf
loope
adc
xor
sbb
or
inc
fdiv
mov
add
adc
pushf
push
dec
loopne
dec
add
mov
ins
add
fisub
pop
or
jle
jg
adc
or
aam
xchg
push
test
xor
dec
or
push
out
and
xor
add
dec
sbb
xlat
inc
add
dec
popf
mov
or
inc
add
adc
(bad)
cmp
icebp
aas
jl
cmp
jecxz
push
jle
ret
or
sbb
mov
cmp
jae
or
sbb
in
imul
fcomi
ret
dec
and
push
xor
or
xchg
mov
in
fdivr
popf
dec
test
add
popa
pop
pusha
gs
ret
push
add
mov
adc
pop
cld
add
dec
sbb
(bad)
add
add
pop
jae
pop
mov
and
inc
adc
push
xchg
jne
out
mov
ret
psubusb
mov
(bad)
and
push
scas
sbb
xor
js
inc
xor
adc
inc
(bad)
jp
inc
pusha
jecxz
(bad)
xor
jl
cmp
mov
dec
mov
xchg
sbb
fadd
daa
sar
adc
ds
neg
push
popa
test
std
ins
or
xchg
shl
xchg
adc
daa
sub
icebp
cmp
xor
(bad)
xchg
and
mov
popf
aad
out
cmp
arpl
fdivrp
mov
pop
enter
jnp
sub
lahf
lds
cmp
cwde
xchg
push
sbb
shr
xlat
inc
into
into
pop
or
mov
movs
inc
pop
call
mov
mov
jb
sbb
mov
dec
shr
test
mov
popf
pop
jne
inc
jno
jmp
dec
jne
fs
mov
loopne
xchg
pop
daa
mov
aam
imul
adc
inc
or
jl
vpmacssdd
xchg
pop
shr
sub
mov
inc
cmp
jmp
or
and
push
xchg
dec
adc
jecxz
xor
stos
push
jne
add
jne
nop
fs
mov
push
mov
mov
inc
jmp
test
imul
add
jmp
or
push
adc
aaa
mov
gs
dec
xor
adc
sub
mov
adc
sar
les
fadd
jl
adc
cmp
inc
jmp
js
test
pushf
xchg
cmp
fwait
xchg
mov
inc
and
ins
xchg
mov
mov
mov
jl
or
sti
cmps
dec
and
je
or
dec
inc
mov
sti
aam
and
adc
xor
adc
push
das
add
sbb
mov
and
hlt
adc
inc
ret
in
adc
cs
int3
adc
leave
aas
out
cmp
int
xchg
jl
pop
add
int
mov
pop
adc
pop
push
daa
inc
add
or
adc
ins
add
adc
(bad)
enter
add
je
imul
test
sub
jno
sub
inc
les
mov
adc
cmp
and
sbb
xor
pop
or
xchg
mov
inc
das
pop
ins
sub
lods
mov
loope
xor
mov
mov
add
and
dec
popa
mov
sar
add
mov
shl
ret
cmp
sbb
lods
pop
mov
cdq
mov
lea
mov
mov
or
push
lea
or
les
add
inc
les
rcl
stos
(bad)
into
les
clc
add
imul
jmp
fsubr
inc
int
nop
inc
cmp
mov
and
inc
inc
mul
add
adc
pusha
jo
(bad)
or
inc
jl
fadd
mov
mov
daa
add
add
inc
adc
in
xor
pop
jno
mov
(bad)
test
adc
sbb
push
or
imul
adc
stc
push
(bad)
frstor
pop
jmp
mov
add
sar
gs
rcl
push
push
inc
js
push
push
or
sub
pop
pop
add
ror
pop
jmp
data16
push
and
ds
and
and
jbe
and
xor
rol
push
mov
adc
cmp
xor
out
ja
or
cmp
je
lahf
push
pop
sub
xor
sbb
mov
sub
jo
je
repz
pop
add
dec
cmc
push
jge
and
cmps
mov
add
add
fistp
test
add
push
or
das
dec
nop
xchg
or
rcl
adc
neg
push
mov
leave
xchg
je
dec
push
ss
pushf
mov
xor
test
mov
movs
mov
or
pop
push
sti
adc
scas
loopne
and
jb
add
mov
shr
js
push
dec
call
cmp
and
fcomp
mov
xchg
push
jo
je
add
ins
loop
(bad)
bound
imul
loope
sub
mov
cwde
out
es
not
clc
lods
push
add
mov
add
fstp
jne
add
sar
push
ret
xor
inc
cld
dec
mov
push
adc
hlt
loop
out
mov
test
test
mov
jb
scas
mov
mov
dec
sub
mov
loop
out
(bad)
sbb
sub
mov
push
test
cwde
pushf
push
xor
sbb
dec
or
fstp
or
sub
and
adc
sbb
xor
mov
inc
inc
or
push
dec
xchg
push
add
dec
icebp
or
pushf
ror
push
add
inc
cmp
pusha
je
out
in
adc
movs
mov
ret
xchg
dec
jp
jge
jne
movs
mov
and
jo
lods
jmp
jno
jmp
xchg
rcr
mov
push
add
sub
ret
mov
(bad)
mov
add
mov
add
jge
test
call
lods
add
aam
sbb
inc
and
cmps
inc
cmp
int3
(bad)
inc
dec
cmp
dec
add
mov
xchg
lods
mov
mov
push
xchg
(bad)
sti
and
xchg
ret
sub
sti
jne
cmp
xchg
lock
ss
jp
xchg
lods
push
call
test
ss
sar
icebp
cwde
cmp
js
mov
inc
imul
imul
jl
xor
das
dec
rol
jl
sub
mov
sbb
xor
adc
mov
xchg
ror
add
mov
mov
mov
push
fldcw
ror
add
mov
cmc
push
clc
out
xor
cwde
lock
(bad)
sti
retf
mov
mov
inc
cmp
in
lods
icebp
lods
test
test
jno
push
jbe
lahf
sbb
or
rcl
jno
mov
rcr
mov
sbb
add
cmp
jle
mov
cmp
outs
add
cmp
mov
inc
xchg
pop
pop
sbb
aad
xor
jo
icebp
xchg
je
push
sub
add
daa
mov
jne
mov
aam
adc
dec
cmp
push
and
sar
push
push
pop
nop
jp
imul
or
pop
out
push
das
pop
shl
shl
dec
mov
xchg
push
push
leave
inc
mov
xchg
repz
cli
inc
add
cmp
cli
jp
push
xor
dec
movs
jns
sub
xchg
pop
push
dec
(bad)
jge
sub
mov
sub
inc
add
mov
test
xchg
pop
shr
ret
or
add
retf
and
dec
enter
stc
mov
inc
in
test
push
sbb
fucom
ror
call
jo
sbb
mov
mov
mov
stos
enter
(bad)
xor
js
shr
or
test
rcl
call
movs
xchg
imul
in
pop
cdq
pop
jo
outs
add
rcr
jo
mov
(bad)
fisubr
push
pop
je
in
inc
rol
mov
pop
bound
mov
das
jno
add
adc
and
js
or
lds
jo
es
add
adc
push
dec
(bad)
adc
test
push
fadd
lods
xor
pop
pop
add
sti
mov
inc
mov
aam
rol
push
cmp
and
int3
mov
jmp
sbb
push
cmp
cmp
in
jo
sbb
add
inc
imul
adc
add
mov
dec
xor
sub
fcomp
adc
add
fcmovnu
fiadd
xchg
mov
sbb
lods
les
xchg
aam
cmp
ja
je
or
mov
adc
je
and
adc
sbb
call
xlat
push
mov
sub
stc
add
(bad)
int3
mov
adc
sub
mov
or
add
stc
into
in
pop
sbb
pop
retf
inc
or
ror
xchg
and
cmp
arpl
add
mov
cmp
retf
leave
clc
mov
inc
mov
inc
add
cmp
jecxz
push
xor
jae
outs
xchg
(bad)
push
nop
push
hlt
dec
cmp
inc
js
inc
or
movs
imul
inc
nop
push
retf
enter
jp
add
pop
jo
mov
loopne
and
loopne
adc
pop
int3
aas
imul
pop
sar
fidiv
loopne
push
sbb
lods
mov
sub
cmps
sahf
or
loop
jno
jne
xor
pop
mov
movs
movs
adc
fld
push
rol
add
or
cmp
and
stc
add
shr
lods
shr
aas
dec
mov
fild
sub
cmp
not
lds
sbb
xor
and
adc
or
push
adc
lea
sub
outs
sub
es
movs
and
loope
in
push
(bad)
cmp
pushf
jl
movs
iret
(bad)
push
xor
push
cmps
cmp
inc
jp
add
inc
loopne
add
mov
xor
mov
outs
adc
pop
pop
loope
retf
mov
and
in
pop
popa
cmp
test
cmp
psubusw
pop
dec
test
adc
dec
pop
add
sbb
add
nop
xchg
mov
fs
sbb
pop
inc
pop
adc
mov
cli
push
adc
(bad)
cmp
aaa
pop
mov
dec
mov
adc
pop
dec
add
add
icebp
and
adc
pop
data16
data16
scas
leave
cmp
and
das
add
je
or
out
mov
push
adc
pop
sbb
test
and
cmp
fs
ja
jb
inc
dec
test
or
ins
ja
and
push
cmp
dec
add
xlat
bound
dec
cmp
hlt
mov
mov
cmp
inc
xor
xor
sbb
xor
inc
rol
mov
adc
nop
fs
push
stos
or
rol
push
(bad)
pop
add
les
mov
xchg
cli
sub
nop
sbb
fstp
mov
dec
sbb
and
ja
mov
rol
icebp
call
xlat
jae
cmp
fdivr
cmp
pop
mov
jge
mov
sbb
movs
or
pop
jnp
push
(bad)
movs
test
inc
or
retf
daa
out
loopne
jmp
mov
(bad)
xchg
add
mov
and
or
adc
ror
sbb
and
xchg
ja
xor
add
inc
cs
jne
push
or
jns
(bad)
and
ror
mov
mov
mov
dec
or
mov
mov
mov
or
shl
push
pop
add
pushf
or
xchg
push
test
inc
mov
sbb
gs
adc
inc
inc
inc
xchg
loop
sbb
or
xor
adc
sbb
lds
movs
or
jp
mov
call
(bad)
stos
sub
fidivr
push
jne
in
ret
or
cmps
xchg
cmp
mov
jmp
sbb
add
or
push
cmp
mov
push
sub
sub
push
pop
or
pop
sub
inc
pop
test
or
sub
add
cmp
adc
les
inc
mov
adc
mov
inc
or
jns
dec
push
jle
inc
movs
inc
lods
adc
push
aaa
inc
neg
xlat
out
xor
mov
xor
gs
adc
pop
xor
or
mov
push
jnp
add
push
sub
test
sbb
add
jo
dec
cmp
pushf
cld
enter
or
inc
jg
aaa
je
sbb
gs
lea
mov
cmp
or
je
icebp
xor
inc
add
sub
movs
mov
movs
jae
add
fcomp
inc
cmp
xor
pop
ret
(bad)
into
xor
sbb
inc
popf
dec
nop
inc
push
pop
pop
ss
add
pop
dec
adc
fbld
popa
sbb
enter
movs
movups
push
pop
xchg
lods
sbb
cmp
retf
sbb
ror
adc
fiadd
push
cmp
pusha
add
fsub
xor
shr
mov
pop
sub
jb
add
jno
xchg
repnz
or
add
xchg
pop
ins
push
push
or
dec
adc
inc
in
dec
or
pop
push
sbb
xchg
loope
dec
mov
push
in
es
test
pop
movs
pop
mov
je
mov
xchg
enter
add
push
mov
ret
xor
pop
xor
or
test
adc
inc
ja
fs
or
lock
and
add
adc
shl
adc
jmp
inc
loope
out
lds
aad
cdq
cwde
sbb
out
mov
cwde
leave
pop
aad
jmp
ds
mov
mov
adc
inc
imul
mov
imul
cmp
ja
add
cmp
and
retf
xchg
sub
or
mov
mov
fsub
inc
inc
add
or
push
out
inc
dec
aas
add
sahf
sub
je
cmps
mov
sahf
ret
loop
mov
sbb
movs
cmovb
and
xor
ins
cmp
mov
lods
pop
fcom
mov
mov
add
push
sbb
adc
loop
xor
jne
adc
mov
sub
icebp
inc
fnstenv
and
rcr
test
cwde
jmp
pop
out
xor
ins
hlt
fbld
in
add
ret
add
adc
inc
movs
cmp
inc
add
sub
ds
add
mov
mov
mov
and
sub
enter
test
fisubr
sbb
pop
or
add
leave
sub
pop
mov
lea
pop
cmp
adc
sub
jns
mov
inc
xchg
inc
adc
gs
ret
test
lock
or
jmp
loopne
push
adc
inc
jl
loopne
loopne
or
sbb
mov
sbb
lock
jnp
(bad)
rol
and
sub
mov
jo
retf
lds
js
pop
(bad)
push
cmc
lods
ret
dec
sbb
arpl
mov
inc
addr16
xchg
jae
clc
mov
popa
das
mov
inc
mov
rcl
cmps
fwait
jp
dec
hlt
mov
sbb
pop
push
test
test
cmps
sbb
sbb
add
dec
and
inc
lds
add
mov
or
cli
mov
mov
or
ss
pop
pop
pcmpgtw
inc
rol
push
adc
xchg
mov
outs
fcmovnb
sub
aaa
add
cwde
popf
jae
mov
push
and
lea
repz
push
dec
dec
ins
or
jae
pop
sbb
mov
pop
mov
fcomp
inc
and
imul
loope
cmp
test
jo
popf
adc
add
inc
(bad)
fist
add
xor
xchg
stos
shufps
loopne
mov
bswap
pop
push
jnp
cmp
push
fld
sbb
adc
test
rcl
das
sub
cmp
scas
mov
fsubr
pop
nop
adc
xlat
pop
mov
jb
and
in
mov
push
pop
mov
mov
add
mov
loopne
and
(bad)
xor
pop
fld
jno
fs
or
cmps
or
jo
inc
push
dec
and
in
and
or
mov
retf
aam
in
rcr
inc
push
or
cwde
in
ret
test
sbb
out
push
mov
or
xchg
sub
sbb
jbe
les
xor
imul
push
cmp
arpl
ins
dec
sub
das
sbb
push
inc
loopne
sbb
lea
mov
jmp
icebp
and
(bad)
ret
mov
stos
mov
or
cmp
adc
nop
add
inc
or
jne
inc
pushf
sbb
repnz
mov
shr
mov
add
cmp
das
adc
bound
add
push
xchg
push
inc
add
cdq
test
inc
movntps
ds
ja
pop
cmp
inc
mov
inc
or
lods
push
inc
push
fisub
dec
fild
inc
mov
add
push
pop
jmp
arpl
push
mov
mov
add
loop
popa
add
cdq
lock
cs
imul
rcr
xchg
ror
dec
test
or
adc
rcl
or
and
or
je
and
add
adc
stos
dec
and
stc
cmps
je
or
sbb
cmp
push
imul
inc
iret
cdq
push
(bad)
clc
rol
xor
lods
popf
lock
pop
sub
jmp
sub
inc
pop
or
jmp
lea
bound
add
sub
jle
or
xchg
cs
out
dec
sub
jnp
mov
mov
shl
push
aas
xchg
aam
xchg
xor
add
lock
adc
out
shr
lea
add
add
mov
dec
jmp
es
mov
mov
test
add
push
out
inc
jmp
fadd
cmc
dec
shl
les
mov
cld
adc
push
or
inc
cmc
add
or
ins
xchg
push
mov
lods
mov
sbb
sbb
fcmovbe
push
add
mov
fsubr
adc
pop
mov
xchg
or
int3
jns
inc
or
add
push
add
mov
and
pop
fst
mov
fwait
push
add
fldcw
jae
mov
outs
jp
in
jl
xor
xchg
leave
add
int3
xor
and
pushf
dec
push
data16
fsubr
pusha
xor
fidiv
popf
movs
frstor
ror
mov
imul
or
pop
mov
add
cmp
dec
sub
cmp
push
push
mov
xlat
pop
sub
sbb
int
add
xchg
retf
cs
cmp
add
aaa
xchg
xchg
aas
mov
call
stos
jne
addr16
jne
push
les
bound
mov
add
stos
adc
cmp
test
add
hlt
push
das
stc
add
push
inc
xor
or
aaa
test
pop
fs
push
shl
dec
bound
shr
add
shl
xor
retf
adc
and
sub
adc
push
imul
shl
xlat
cmp
inc
and
inc
aas
mov
xor
pop
push
in
ret
or
adc
xor
sub
xchg
adc
sub
dec
sub
and
in
repnz
adc
pushf
and
inc
fs
add
lea
and
mov
jbe
and
add
or
pop
jo
into
mov
ins
mov
or
inc
scas
outs
stc
push
sub
cmp
je
adc
adc
push
or
or
ins
lods
xchg
sub
aam
rcr
lahf
mov
push
mov
iret
push
in
fistp
sbb
sub
outs
inc
push
add
and
pop
mov
popf
jne
jb
inc
adc
mov
xor
mov
add
cmp
js
mov
jle
add
jnp
ffreep
pop
mov
repz
repz
and
inc
push
adc
sbb
cmc
icebp
or
movs
sahf
lods
fcom
(bad)
or
add
fcom
clc
xor
call
and
xlat
(bad)
les
ins
and
add
add
jmp
and
fld
(bad)
popa
push
push
or
jne
rcl
retf
inc
(bad)
enter
shr
in
xchg
loopne
xlat
and
add
in
cmp
scas
push
mov
cmp
sub
xor
add
sbb
rcr
(bad)
pop
mov
repz
mov
in
pop
adc
dec
or
sub
xor
push
sbb
lds
add
pop
js
xor
adc
daa
pushf
mov
push
fisub
push
xlat
push
sub
fucomip
xchg
gs
inc
push
push
or
cli
pop
es
sbb
or
rcr
outs
cs
arpl
lahf
popa
jmp
push
imul
mov
sbb
lea
add
fcom
add
pop
and
aaa
inc
inc
sbb
push
xchg
(bad)
cmp
sub
cmps
adc
test
cwde
dec
pop
push
je
lods
imul
scas
aam
fsub
jp
mov
je
push
jmp
in
push
adc
push
mov
dec
sub
jne
js
add
addr16
mov
or
rcl
call
adc
xor
into
stos
ss
ret
xor
inc
pushf
push
dec
inc
lea
jo
adc
push
sbb
repz
or
add
and
push
ret
add
imul
rcr
adc
mov
push
jb
retf
call
xor
dec
mov
ss
test
mov
out
js
mov
in
addr16
imul
cmp
push
pop
mov
arpl
pop
inc
xchg
fldcw
xchg
out
shl
xlat
in
nop
xlat
and
sar
push
test
or
sbb
cmp
fbld
xlat
outs
push
das
test
jne
jp
sub
outs
lods
adc
clc
and
pusha
popa
mov
xlat
pusha
dec
lods
adc
jmp
cmps
inc
and
cmps
push
ins
mov
dec
mov
pop
add
mov
add
inc
push
cmp
adc
jge
sbb
retf
je
xor
rol
push
sbb
pop
push
lods
cmp
pusha
imul
add
test
adc
push
jge
icebp
sub
idiv
nop
push
sbb
inc
dec
test
arpl
adc
js
lock
ins
mov
pop
ins
adc
leave
enter
add
dec
stos
popa
and
mov
fs
xlat
mov
sbb
mov
push
test
cmp
push
fld
sub
pop
jae
sbb
and
and
test
mov
jo
jae
mov
mov
and
xchg
mov
bound
cmp
js
sub
jno
push
mov
adc
dec
sbb
jo
fs
push
adc
mov
rol
cmps
loope
inc
lods
ds
mov
pop
sbb
stos
adc
cmp
inc
dec
mov
jle
pop
ins
jmp
sar
ins
pop
loopne
pop
(bad)
fimul
mov
push
ror
das
daa
jno
lea
pop
adc
adc
push
loope
sbb
xor
add
push
dec
xor
sub
not
test
fld
add
rol
icebp
test
clc
imul
sar
dec
ins
xor
xor
inc
adc
mov
or
add
push
cmp
adc
push
and
dec
ret
push
dec
jne
pusha
xor
and
xchg
imul
aam
or
dec
pop
jl
push
mov
mov
in
push
adc
imul
inc
push
sti
adc
iret
in
xlat
scas
dec
push
ins
mov
inc
fucomi
inc
sbb
mov
imul
aaa
rcl
push
dec
loopne
lods
int3
cld
aam
mov
xor
enter
mov
sub
sahf
test
imul
xor
push
cmp
xlat
dec
(bad)
mov
add
mov
or
nop
and
inc
popf
or
mov
mov
jbe
push
adc
inc
pushf
in
das
in
inc
add
xor
or
mov
dec
jmp
add
je
xchg
and
cdq
imul
rcl
js
clc
push
cmc
and
inc
clc
sub
sbb
pop
mov
sub
jbe
icebp
add
xchg
retf
push
sar
and
mov
cmp
outs
hlt
jmp
push
pusha
jb
and
in
les
sbb
add
sahf
repnz
jl
adc
lock
mov
xor
adc
mov
sbb
and
sub
ss
mov
rcl
inc
pop
es
inc
or
clc
or
or
mov
imul
fadd
int
es
inc
xor
adc
mov
(bad)
leave
push
adc
dec
push
rcr
add
adc
pop
mov
mov
jbe
mov
push
inc
push
sub
adc
and
lea
ins
dec
ins
pushf
add
jmp
push
pop
pop
je
add
add
xor
aam
stos
push
hlt
or
fadd
push
loopne
lea
in
sub
push
push
mov
or
xchg
xor
dec
add
(bad)
or
xchg
cmps
and
mov
call
aas
xor
clc
sbb
inc
sub
add
out
cmp
daa
sbb
mov
push
outs
cmp
movs
add
add
sub
pop
in
iret
sub
movs
xchg
or
mov
or
mov
add
cld
cmps
leave
adc
cwde
sbb
push
and
aaa
ins
sub
lahf
pop
pop
sub
mov
mov
and
pop
mov
cmp
pop
cmp
add
aaa
mov
mov
jg
dec
mov
jl
pop
or
add
arpl
xchg
test
mov
mov
daa
sub
sti
ins
or
rol
add
aad
cdq
xor
or
repnz
or
movs
mov
lods
mov
xchg
push
into
add
or
or
ja
lahf
mov
icebp
push
mov
cwde
outs
cmp
cmps
test
ret
cwde
xlat
cmps
aam
xlat
pop
fs
enter
mov
jno
or
inc
test
or
sbb
and
sbb
mov
add
cs
or
shl
sub
add
dec
dec
sbb
cld
mov
test
xor
icebp
popf
stc
ret
sbb
xchg
inc
adc
and
(bad)
aaa
(bad)
jmp
xor
out
imul
aad
pop
imul
pop
or
add
pushf
popa
jge
xchg
ja
push
test
jl
xor
pop
enter
es
push
push
inc
test
aas
mov
ror
and
cmp
shl
call
rcr
sbb
xor
xor
jp
int3
mov
jbe
es
int
enter
pusha
mov
test
movq
or
pusha
loopne
rcl
xor
inc
leave
mov
jge
ret
adc
add
pop
enter
add
sub
and
pop
push
jns
or
repnz
jo
fwait
daa
arpl
push
in
jo
outs
mov
sub
sbb
das
dec
popf
and
pop
jge
push
mov
test
inc
inc
jl
sahf
and
add
sub
daa
add
xchg
dec
scas
aam
call
mov
add
and
push
and
sahf
fsub
and
iret
sub
and
fdiv
push
fcom
nop
cwde
or
cmps
mov
jb
sub
push
or
push
fldenv
in
push
ins
in
or
sub
inc
pop
and
add
jne
mov
and
pop
fisttp
jmp
ins
cmp
lock
mov
fimul
dec
imul
cmps
lea
in
call
mov
mov
daa
xor
cmp
fcmovu
xchg
test
push
cld
jbe
mov
imul
int3
jg
inc
stos
push
sub
ja
sahf
jo
leave
dec
mov
add
inc
pusha
sub
push
sub
sar
inc
add
inc
add
(bad)
out
test
jmp
adc
or
jl
adc
sbb
mov
dec
inc
int3
loop
and
pop
test
inc
(bad)
mov
movs
and
xor
mov
sbb
dec
adc
push
std
mov
pop
scas
and
mov
mov
mov
jle
lock
dec
pusha
loopne
or
or
jl
in
adc
and
out
adc
loopne
mov
inc
jp
arpl
jle
cmp
or
(bad)
ins
push
mov
loop
push
cmp
jnp
sar
jae
xchg
in
leave
ja
jle
xor
lea
push
sbb
cmp
inc
je
inc
dec
ret
icebp
jne
jmp
mov
sub
shr
or
nop
ror
sub
add
sub
and
or
ins
cdq
ret
pop
imul
adc
jmp
call
clc
and
xor
fwait
dec
mov
ret
mov
arpl
ret
jecxz
jmp
mov
mov
fidiv
loope
(bad)
retf
jge
inc
adc
adc
aas
test
push
inc
dec
(bad)
cmc
jmp
xchg
and
gs
jno
sbb
repnz
inc
leave
or
enter
add
mov
dec
or
je
and
aaa
sub
xchg
cld
inc
or
sbb
clc
mov
jno
add
cld
fisubr
jge
in
jnp
lods
adc
pop
add
sar
mov
rcr
jp
mov
hlt
cmp
fs
leave
mov
pop
ss
(bad)
cmps
lea
adc
(bad)
and
scas
bound
out
fld
xchg
or
cld
add
adc
add
add
or
test
jo
cmp
mov
adc
shl
dec
xchg
push
mov
pushf
mov
or
shl
ins
(bad)
or
je
sahf
call
or
mov
adc
sbb
add
sbb
mov
ret
cwde
neg
lea
cmp
mov
or
mov
out
jbe
dec
pop
data16
or
xchg
mov
dec
xchg
test
and
sar
imul
or
lods
in
rol
mov
add
mov
inc
jbe
jne
mov
enter
inc
mov
xchg
and
dec
adc
stos
pop
pop
xor
or
adc
add
adc
sbb
lahf
cs
xor
add
xor
mov
pop
bound
sub
inc
adc
pop
push
cmp
ins
or
fimul
lods
and
and
inc
sub
mov
mov
movs
pop
xchg
rol
cmovnp
pop
sbb
fst
outs
movs
rol
sar
jne
push
mov
fwait
push
sub
stos
mov
adc
mov
hlt
scas
dec
push
lock
out
sub
xor
stos
jne
(bad)
das
push
inc
xchg
addr16
test
mov
loopne
add
dec
adc
out
clc
sub
test
in
jl
sub
dec
aam
sbb
mov
inc
js
fmul
xor
fadd
test
xor
jns
xor
add
movs
ins
push
xchg
or
xor
test
gs
repnz
add
ja
ins
jb
jge
push
jl
sub
push
dec
jl
inc
add
sub
stos
pop
fidivr
sbb
mov
mov
sar
add
fwait
rcr
add
add
xor
popa
jo
js
dec
xor
mov
cmp
inc
movs
dec
sbb
clc
push
push
cmp
sbb
lock
adc
call
(bad)
pop
dec
push
and
(bad)
xor
(bad)
ins
xor
sub
xor
in
and
repz
sahf
js
dec
push
dec
cmp
jl
fdiv
or
inc
add
jnp
aam
sbb
and
adc
shl
inc
pop
out
push
pop
loope
and
out
(bad)
popf
inc
test
xor
ins
mov
xor
dec
and
dec
mov
lahf
mov
jmp
and
sub
adc
test
in
(bad)
push
and
mov
add
cmp
push
in
enter
mov
es
cmp
shr
jmp
inc
movs
xor
dec
fdiv
xor
jno
xor
mov
loop
jo
cmc
pop
and
add
rcr
test
dec
sbb
nop
dec
sub
cli
pop
mov
push
out
mov
in
add
mov
and
add
cmps
in
mov
mov
les
mov
jbe
dec
je
cmp
jecxz
stc
or
cmp
jge
popa
xor
pop
add
inc
pop
loopne
aam
test
leave
cli
repnz
in
inc
mov
cs
push
mov
adc
mov
dec
mov
dec
sbb
shl
dec
test
xor
mov
sbb
pusha
add
js
adc
loop
fcomi
or
cmp
jg
out
mov
ja
mov
bound
mov
lods
mov
inc
inc
movs
not
push
inc
inc
sbb
clc
xor
sbb
add
sub
inc
lahf
mov
xchg
sub
nop
cmp
div
inc
in
xchg
mov
mov
mov
dec
mov
mov
in
mov
in
add
sbb
xchg
jge
inc
xor
xor
mov
test
xor
fwait
jbe
jo
mov
mov
jbe
popa
dec
inc
adc
jns
out
dec
and
outs
leave
push
adc
mov
rol
mov
inc
jmp
pop
and
cmps
cmp
add
push
pushf
jae
dec
mov
shr
jle
jp
aaa
cmp
mov
inc
cmp
jmp
jl
jl
mov
data16
inc
jp
sbb
je
push
add
pop
sub
sub
jns
sbb
(bad)
mov
stos
sbb
aad
inc
add
adc
lea
jo
push
jecxz
das
imul
xchg
fmul
rcr
push
rol
popa
inc
jnp
imul
pop
add
xor
pushf
fist
mov
in
call
mov
rcr
lea
and
xchg
rcr
xchg
not
mov
sbb
inc
data16
sbb
add
out
cmp
xchg
push
xchg
inc
repnz
mov
push
add
add
inc
dec
add
pop
dec
ins
pop
or
cwde
inc
xor
xor
sbb
or
cmp
pop
(bad)
mov
pop
dec
fmul
mov
arpl
lea
lea
pop
or
add
imul
xchg
jl
sbb
adc
pop
mov
imul
rol
pop
clc
add
add
add
cmp
push
lock
xchg
fsub
clc
mul
adc
imul
(bad)
jecxz
sub
push
mov
stos
xor
and
sbb
push
sub
gs
inc
ret
xchg
pop
loope
jae
cmp
sbb
pop
fist
pop
dec
mov
dec
jmp
add
push
fld
sar
clc
pusha
sbb
iret
add
in
xchg
adc
sbb
mov
add
cwde
or
loopne
nop
jne
in
pop
shl
sar
mov
xor
adc
and
dec
or
cdq
jmp
add
sbb
sar
iret
fdiv
add
fbstp
ins
xchg
cmp
xor
xchg
add
enter
and
sbb
cmc
call
adc
xchg
mov
pop
fbld
es
jecxz
pop
push
inc
sub
hlt
push
jle
or
cmp
stc
jg
data16
rol
jne
adc
mov
ja
lods
dec
cmp
jge
movzx
ja
lods
mov
sub
in
(bad)
and
mov
mov
sbb
pusha
inc
aas
adc
cmp
sar
test
icebp
and
jge
mov
mov
inc
repz
mov
jmp
xchg
pop
and
jge
pop
sbb
int3
rcl
mov
stos
sbb
sbb
mov
add
inc
or
dec
and
pop
sub
mov
pushf
not
iret
xor
in
pop
add
aad
cmp
mov
mov
inc
jbe
push
push
cmp
ins
and
mov
dec
pop
addr16
add
fwait
sub
inc
or
sbb
test
inc
push
or
cs
dec
adc
adc
in
es
cmp
and
into
cmp
lock
xor
mov
and
fdivr
fistp
inc
xor
pop
add
test
test
cwde
adc
mov
push
dec
mov
mov
and
mov
mov
xchg
fcom
add
mov
or
pushf
pop
mul
imul
lock
mov
sbb
idiv
shl
fmul
in
movs
popf
retf
fcom
inc
loopne
xor
in
jae
cs
call
jmp
cmp
mov
arpl
pop
cs
int3
or
sbb
test
aam
pop
push
js
cmp
mov
adc
sub
iretw
sub
adc
xchg
adc
add
out
inc
push
push
adc
test
out
add
dec
scas
test
gs
daa
dec
loopne
rcr
sbb
add
or
and
sub
and
cld
and
sbb
inc
jae
mov
dec
add
push
imul
push
sub
sbb
nop
adc
enter
inc
adc
fadd
loopne
jne
and
or
add
or
xchg
fs
jmp
mov
jne
pop
sar
mov
jns
push
xor
(bad)
sub
add
retf
adc
ror
push
aam
imul
and
jo
fdivrp
inc
pop
jecxz
(bad)
cmps
pop
add
mov
mov
xor
sub
daa
xor
or
les
or
xchg
enter
mov
shl
sbb
inc
push
in
sub
cwde
retf
dec
and
dec
add
pop
mov
push
push
cld
xchg
div
push
add
dec
je
dec
push
cmp
cmp
popf
mov
fld
test
cmc
aas
xchg
sbb
and
out
inc
pop
or
and
adc
ret
xor
mov
add
rol
xor
push
cmps
cmp
and
xor
jp
fild
andps
push
lods
push
add
add
or
push
or
cmc
into
fisubr
xchg
add
sub
or
add
push
mov
cs
fucomp
retf
lods
adc
fiadd
push
sub
es
mov
xchg
xchg
(bad)
aam
shl
xchg
adc
aam
or
(bad)
sub
lds
add
add
cmp
xor
add
jbe
push
and
cmc
test
sub
sbb
xor
pop
add
aas
fs
jb
and
movs
(bad)
xor
sbb
es
cmp
popa
cmp
movs
test
pop
gs
or
cmp
dec
and
pop
dec
pop
stos
cmp
pop
add
jecxz
pop
add
mov
cmp
aas
and
or
xchg
lock
jecxz
rep
add
fistp
(bad)
mov
ins
lahf
jmp
call
xchg
cmps
cmc
dec
xor
dec
inc
pushf
xchg
pop
sub
xor
xchg
call
mov
add
mov
jae
adc
add
shl
arpl
int
fiadd
cmp
xor
add
icebp
cmp
add
pop
inc
mov
mov
popf
inc
adc
popa
adc
pop
lock
mov
fadd
lods
xor
adc
jne
lods
aad
int
and
retf
inc
and
or
inc
inc
xchg
sub
xor
adc
mov
add
xor
sub
push
sbb
mov
or
or
push
loopne
sub
or
push
fistp
and
mov
xor
inc
test
cmp
push
or
leave
leave
xchg
shl
xchg
xor
addr16
bound
cld
push
mov
pop
js
xor
sahf
aaa
cmps
rcr
and
sub
sub
or
push
adc
scas
push
sbb
sahf
loope
(bad)
push
pop
push
sbb
out
jns
inc
loopne
sub
(bad)
inc
cwde
dec
add
adc
stos
jnp
aad
cmp
stc
pushf
inc
inc
or
shr
pop
jp
and
push
xchg
mov
pop
push
push
add
sbb
cmp
(bad)
rcl
lods
or
add
or
or
fmul
add
shl
jno
jmp
mov
jmp
cdq
pop
adc
es
or
outs
cdq
mov
or
mov
lea
or
inc
mov
jns
mov
and
int3
xor
or
xchg
popa
adc
daa
or
in
dec
inc
xchg
mov
adc
push
ds
(bad)
(bad)
mov
and
test
out
ret
jmp
sbb
sbb
pushf
mov
or
and
data16
mov
xor
in
and
(bad)
(bad)
sti
mov
and
push
push
daa
add
add
movs
pop
or
sub
add
cmp
add
cmp
or
mov
imul
cs
push
add
cmps
ins
mov
sti
push
daa
neg
cmp
mov
(bad)
or
jno
outs
bnd
add
adc
pushf
dec
scas
adc
and
aaa
jbe
les
inc
push
jl
pop
lahf
xor
adc
and
lds
jp
push
xchg
push
jne
loopne
pop
mov
xor
sbb
push
mov
mov
loope
pop
inc
daa
cmp
ss
cmp
pop
mov
push
cmp
add
dec
fistp
movs
mov
pop
ret
adc
ins
or
in
shr
or
pop
fs
xchg
sbb
pop
or
mov
icebp
add
and
jg
or
xchg
es
adc
pop
and
lahf
inc
dec
js
icebp
lea
push
mov
push
sbb
sbb
pop
add
ins
jmp
shl
xor
add
mov
and
xchg
and
xor
push
shl
popa
leave
pusha
push
mov
sbb
lds
lea
cmps
loopne
mov
and
and
les
push
xchg
fcom
pop
stos
inc
icebp
loope
dec
xchg
jne
mov
inc
dec
shr
mov
xchg
dec
repz
enter
shl
test
enter
jo
or
pop
and
add
loopne
shl
pop
mov
push
daa
leave
retf
fs
mov
inc
pusha
push
or
aaa
mov
stos
jge
(bad)
xchg
xchg
clc
int3
add
mov
or
or
fs
or
push
js
fwait
and
sbb
inc
jmp
add
sub
outs
push
push
inc
mov
es
push
int3
not
cli
popa
sbb
mov
push
cmps
inc
dec
push
mov
sub
cmp
les
add
shr
add
pusha
push
ins
test
push
pop
or
push
add
clc
das
inc
inc
jge
clc
(bad)
adc
inc
inc
gs
shr
xor
push
push
sbb
sub
sub
faddp
fnstenv
or
xor
dec
dec
dec
retf
add
rcl
mov
mov
pop
call
push
in
jbe
or
or
stos
movs
lods
out
pushf
jmp
sbb
mov
push
or
dec
shrd
fcomp
jmp
or
or
and
mov
sub
fsub
adc
imul
mov
and
cmp
mov
mov
iret
push
push
rcl
jecxz
shl
pop
push
push
adc
adc
dec
pop
jnp
push
and
dec
jno
out
je
push
adc
arpl
or
inc
test
sahf
and
(bad)
or
push
inc
jmp
jb
int3
mov
mov
lods
jno
push
jne
aaa
outs
xor
and
ds
aas
cmp
test
or
push
iret
mov
(bad)
repz
clc
fistp
sub
imul
xchg
js
outs
jmp
jns
es
rcl
outs
mov
add
or
jno
int
and
push
cdq
ret
xor
and
ret
or
stc
wbinvd
aad
call
sbb
jae
adc
rcr
retf
mov
push
call
sub
fcmovbe
mov
(bad)
or
inc
dec
mov
fs
inc
cmp
pop
dec
jmp
mov
ins
inc
sub
mov
add
cmp
sub
loope
xor
push
dec
adc
add
sbb
mov
mov
mov
sahf
loop
sbb
adc
pushf
jb
dec
mov
sub
xor
mov
pop
test
sub
adc
or
mov
push
add
or
jbe
fwait
inc
pop
pop
pop
mov
fs
mov
push
or
push
or
retf
ret
mov
je
loope
adc
add
and
xchg
mov
cmp
stos
sbb
mov
jns
and
mov
xor
dec
inc
xlat
jnp
in
ror
dec
dec
rcl
movs
inc
cmp
cmps
and
mov
dec
xchg
dec
lods
inc
push
rcr
adc
jnp
inc
fimul
cmp
aaa
pusha
dec
add
cmovnp
pop
cwde
ficom
jmp
lea
enter
xchg
mov
rol
cmp
sbb
fwait
jmp
inc
bound
pop
cli
(bad)
adc
and
and
in
push
nop
jno
(bad)
dec
and
inc
out
cmp
icebp
cmp
imul
pop
sbb
jne
push
push
push
and
test
fadd
(bad)
cwde
mov
push
and
sub
push
mov
mov
or
gs
jge
push
sbb
jmp
pop
push
sbb
sub
mov
dec
inc
xor
test
rcr
scas
sbb
inc
adc
loopne
enter
stos
push
adc
inc
and
dec
lea
xor
es
jns
push
inc
jne
jae
mov
mov
shl
imul
jns
adc
mov
fmul
and
jecxz
movs
(bad)
sub
push
mov
sub
movs
mov
xor
xor
xchg
add
call
aam
retf
add
cmps
lahf
add
loopne
sbb
les
inc
mov
or
movs
cmps
add
pop
lds
pop
rol
jns
push
push
xchg
ret
ret
imul
inc
ret
push
jno
push
sbb
xor
ror
add
adc
les
dec
aad
jo
imul
dec
xchg
cmps
popf
lds
cmp
push
aaa
adc
sahf
or
push
rcl
adc
pushf
je
mov
ins
sbb
inc
xchg
push
mov
inc
jnp
mov
ret
imul
adc
inc
test
push
shl
pushf
enter
sbb
loope
in
and
test
(bad)
or
test
sub
xor
je
test
hlt
and
add
cli
push
mul
inc
cs
inc
mov
add
pop
add
push
push
sti
adc
add
push
movs
fbstp
(bad)
pusha
and
repnz
mov
shr
xor
mov
xchg
pop
push
push
add
addr16
loop
inc
xlat
mov
div
rcr
pop
outs
add
pusha
push
push
xchg
cwde
icebp
dec
sbb
sub
jbe
sbb
push
sub
push
push
xchg
retf
ins
lods
lea
jne
mov
je
inc
xchg
test
push
sbb
dec
retf
sbb
push
jbe
mov
push
rcl
jg
sub
mov
dec
xor
sub
push
jno
xchg
mov
and
or
jae
ds
jo
mov
sbb
rcr
jb
jae
imul
lock
xchg
xor
mov
mov
dec
sub
mov
movs
pop
sbb
mov
mov
std
repz
xchg
adc
pop
or
xchg
and
sub
out
or
frstor
inc
in
and
dec
push
pop
xor
dec
lock
in
call
sbb
cs
adc
mov
pop
and
mov
lods
pop
daa
or
xor
sbb
ss
loop
xchg
rol
inc
imul
adc
es
aam
dec
cmp
mov
mov
add
fsubr
popf
popf
push
jae
sbb
pop
dec
add
dec
ja
cmp
dec
(bad)
call
cmps
xchg
inc
enter
inc
rcl
aaa
je
fadd
(bad)
push
adc
inc
and
(bad)
outs
pop
mov
les
sbb
popa
enter
mov
inc
call
scas
dec
aam
cmp
mov
(bad)
aaa
int
sub
jne
loopne
and
lea
push
(bad)
push
push
push
pop
xor
xchg
in
fld
leave
pop
out
sbb
sub
cmp
lock
add
das
mov
adc
pop
or
stc
ret
es
arpl
mov
xchg
mov
or
pop
xchg
(bad)
xchg
imul
dec
push
cmp
sbb
outs
or
sbb
aaa
sahf
mov
dec
lods
fnstenv
fisub
retf
pop
jne
ret
push
xchg
pop
or
lea
dec
cmp
xor
fwait
lock
adc
dec
sbb
mov
add
bound
xchg
push
popf
dec
shr
or
and
movs
imul
adc
xor
jo
mov
jge
jo
jo
mov
es
stc
(bad)
sub
std
and
sbb
sbb
ret
mov
dec
push
sub
mov
mov
and
loope
repnz
mov
add
aam
std
sbb
adc
mov
test
stos
loopne
sub
arpl
adc
jb
sbb
adc
cdq
dec
mov
xchg
mov
fist
sub
mov
xor
jno
add
cmp
sub
fldenv
sub
scas
in
push
movs
dec
push
and
mov
cld
inc
shr
das
push
ss
cmp
int
pop
jno
mov
je
fwait
aam
and
mov
xchg
ret
mov
cmp
push
(bad)
and
jbe
inc
and
push
mov
fwait
jno
push
fmul
cmp
sti
push
sbb
ja
enter
add
mov
shl
fs
nop
movs
sbb
popa
(bad)
adc
push
in
ss
test
icebp
aam
sub
mov
xor
aam
and
inc
jle
pop
push
shr
and
jne
call
movs
icebp
sbb
adc
push
jne
jg
push
pop
test
sub
mov
and
add
adc
call
adc
je
ret
or
xchg
or
lods
add
xor
and
icebp
xchg
xor
cmp
sbb
or
or
jbe
mov
loope
xor
fwait
push
adc
add
mov
or
aam
sub
xor
cmp
mov
fist
sub
and
jb
or
in
or
loop
mov
test
clc
inc
push
inc
mov
popa
lock
push
add
add
dec
cmp
push
rcl
test
es
pop
sub
adc
(bad)
sub
scas
push
jnp
and
or
sti
adc
mul
xor
daa
bound
add
out
xor
mov
inc
add
pushf
push
das
adc
dec
push
and
cmp
inc
push
(bad)
ror
dec
add
add
pop
push
add
adc
adc
retf
jnp
movs
add
fcomp
and
push
jno
jbe
mov
fidiv
push
mov
rol
les
lea
mov
add
fild
imul
jae
jle
mov
mov
push
enter
in
out
in
add
scas
mov
lea
lods
std
shr
mov
adc
pushf
jmp
add
ret
adc
outs
or
jg
vphaddwd
cwde
les
arpl
add
mov
jle
add
dec
js
mov
aas
aaa
js
sbb
std
and
aas
leave
push
inc
mov
cdq
add
dec
jne
std
test
(bad)
xor
arpl
je
add
pusha
xchg
xchg
call
cmps
mov
mov
les
xor
shl
mov
dec
or
pop
es
and
nop
sub
aam
movups
fneni(8087
popf
imul
mov
(bad)
bound
ins
jmp
mov
movs
sub
push
call
cmps
ins
std
sar
sub
or
add
gs
push
sub
inc
aad
push
and
inc
mov
and
pop
mov
push
ja
rcl
mov
inc
jl
pop
ror
jmp
jns
ror
pop
inc
mov
repnz
call
push
cdq
xchg
dec
out
pop
or
xchg
cs
mov
retf
imul
mov
mov
add
ins
sub
xchg
push
call
inc
rcl
(bad)
sbb
and
dec
and
or
xchg
jne
lea
rcr
add
or
sub
call
pushf
cmp
repz
add
sub
js
jns
daa
add
add
clc
mov
inc
cmp
jmp
nop
inc
adc
je
cmp
rol
stc
mov
aas
jecxz
mov
cmp
sbb
clc
movs
gs
and
xchg
ret
push
mov
sub
adc
adc
xor
mov
or
cwde
and
xor
inc
clc
xchg
jno
popf
or
add
mov
in
imul
sbb
(bad)
nop
adc
dec
jno
sbb
(bad)
sbb
out
add
lahf
es
or
sbb
popf
or
mov
and
and
adc
pop
daa
mov
or
push
cwde
dec
cwde
lea
mov
loopne
les
add
or
and
cmp
jg
ror
pop
add
mov
shr
fild
pop
inc
bound
fwait
add
push
ds
retf
pop
lds
and
mov
addr16
fild
fst
mov
jne
mov
pop
sbb
add
(bad)
mov
pop
data16
loopne
mov
inc
int3
mov
leave
(bad)
adc
push
dec
leave
dec
cmps
fmul
fwait
push
push
shl
sub
retf
sbb
les
out
inc
add
xchg
or
fs
sbb
jp
ror
or
add
sbb
shl
loop
sbb
mov
test
xor
or
xchg
add
add
pop
push
lock
int3
(bad)
std
mov
or
jmp
xor
pop
fcomp
fcomp
out
(bad)
shl
enter
inc
add
mov
test
jnp
adc
mov
std
aaa
cwde
mov
dec
fadd
sub
adc
inc
add
or
cmp
lods
test
push
in
dec
lahf
popa
pop
jo
add
ficomp
push
bound
rol
test
fcomi
imul
sub
dec
push
rcr
ret
movs
call
add
movs
mov
dec
js
pop
test
push
adc
cmp
push
and
adc
push
push
jl
push
add
mov
add
mov
cmp
inc
adc
sahf
add
pop
pusha
into
pop
push
add
fs
mov
sbb
inc
out
pop
test
xlat
imul
xchg
lods
sbb
ret
dec
(bad)
bound
mov
push
enter
out
jo
sbb
je
sub
or
xchg
ins
jmp
mov
sub
fidivr
jecxz
mov
or
cmp
push
test
inc
sub
xor
add
xchg
mov
push
sub
cwde
call
scas
lea
mov
and
and
push
ucomiss
icebp
xchg
mov
leave
pop
cld
jl
push
xor
and
test
test
dec
lods
adc
and
jb
jge
frstpm(287
fnstsw
inc
cmps
nop
push
adc
and
(bad)
fs
enter
es
pop
or
in
sahf
push
adc
arpl
ins
mov
mov
adc
cs
adc
push
into
sub
xor
adc
ret
adc
sub
xchg
inc
rcl
je
or
cld
add
mov
add
pop
add
push
fadd
xor
lahf
add
or
retf
repnz
mov
mov
icebp
or
loop
sub
mov
test
jecxz
cmps
xor
ins
sub
fs
adc
mul
nop
mov
mov
adc
or
loope
addr16
cmp
popa
push
sbb
and
or
dec
sbb
das
mov
cmc
inc
sbb
ret
or
in
ror
pusha
add
pop
mov
loopne
dec
or
jge
cs
sbb
ror
push
or
and
push
add
lock
sbb
cmp
mov
xor
cmp
dec
scas
pop
add
cmovl
sar
aam
pop
xchg
xor
or
and
in
push
icebp
fiadd
movs
push
add
mov
dec
jmp
adc
inc
(bad)
sub
inc
or
add
push
jno
sbb
mov
enter
adc
add
cmps
pop
enter
cdq
sbb
xchg
push
in
sub
jne
or
adc
leave
mov
inc
push
or
adc
ja
outs
inc
cs
lea
cmp
xchg
sub
stos
ja
push
das
jmp
xor
mov
into
dec
inc
mov
jo
add
in
out
jae
pop
stos
jns
js
and
cwde
adc
dec
movs
sub
push
xlat
sahf
jns
inc
or
sub
mov
loopne
push
dec
js
and
lock
shld
ja
jp
mov
out
mov
sub
add
add
or
add
inc
dec
fsubr
xchg
dec
and
jge
inc
call
jo
loop
xor
or
test
xchg
cli
or
push
mov
dec
or
inc
mov
add
and
add
shl
cmp
call
cwde
vpavgb
call
pop
dec
iret
lods
das
and
sbb
xor
lds
xor
lock
push
addr16
jnp
push
cmps
mov
in
push
dec
imul
and
pushf
inc
sbb
neg
jb
and
dec
sub
xor
or
sbb
sub
ret
ret
xchg
mov
mov
dec
inc
dec
nop
mov
in
sub
lock
and
cmps
lods
mov
fmul
cmp
dec
push
sub
and
out
xchg
and
ror
clc
mov
pop
push
jle
jle
in
movs
adc
pushf
add
inc
retf
lds
inc
cmp
cmp
lahf
jo
xchg
stos
push
loopne
push
es
cmp
mov
sar
inc
inc
outs
pop
jbe
pop
push
xchg
(bad)
out
mov
(bad)
popa
adc
xor
mov
adc
ja
jl
and
lods
test
in
js
arpl
lods
xchg
sahf
jmp
cwde
pop
xchg
cmc
call
dec
sub
js
jge
push
dec
nop
or
pop
mov
test
cs
pusha
or
aad
sub
add
jns
or
sub
sbb
inc
push
sbb
push
(bad)
pop
es
add
push
mov
pop
jae
mov
and
test
jno
mov
and
gs
je
and
aad
or
adc
mov
test
add
push
dec
js
pop
add
mov
aam
les
les
mov
aaa
add
mov
ins
clc
daa
jmp
jnp
std
pop
push
cmp
cmc
mov
in
movs
pop
mov
push
or
push
call
cmp
or
aad
es
hlt
xchg
test
cmp
mov
mov
popf
ins
xchg
cmp
sbb
icebp
dec
add
jae
add
shl
ss
fidivr
cdq
mov
xchg
enter
les
adc
pop
ror
push
nop
pop
std
adc
ins
adc
ror
xor
mov
push
jo
inc
mov
mov
cmp
(bad)
imul
and
or
and
inc
or
pushf
fsub
pop
js
retf
mov
mov
nop
popa
inc
in
add
outs
push
xchg
xor
clc
popa
aad
adc
add
pop
or
fs
stc
pop
fcomp
add
mov
fbstp
mov
loopne
cmps
sub
dec
cwde
add
push
iret
xchg
ss
shl
out
sbb
push
gs
mov
xor
test
mov
xor
bound
xor
xchg
and
add
push
cmp
lds
outs
imul
cmps
adc
mov
inc
sub
sub
sbb
rol
sbb
pop
jmp
loope
test
inc
por
nop
dec
pushf
sahf
cmp
jg
and
scas
test
loopne
fist
mov
xchg
pop
loop
push
ja
lock
pop
icebp
adc
pushf
pusha
jns
outs
add
or
and
sbb
out
mov
pop
rcr
xor
push
in
lods
es
call
and
rcl
sub
lock
adc
fwait
pop
retf
rol
inc
es
sbb
mov
jle
test
dec
add
push
and
cmp
dec
push
xchg
push
lods
pop
movs
in
mov
(bad)
xor
je
loope
imul
xor
mov
add
mov
je
xor
cmc
test
movs
sub
lock
cs
pop
je
mov
adc
adc
xchg
pop
push
push
fadd
mov
add
aad
sub
in
xor
sbb
cld
dec
push
or
les
loopne
add
xor
add
mov
jg
inc
movs
adc
int3
in
ja
dec
xor
jg
(bad)
sub
sbb
cmp
dec
mov
neg
sbb
cmp
nop
leave
sub
icebp
in
push
cmps
jo
push
test
dec
cmp
test
rcl
rcl
jge
cdq
pushf
add
rol
jo
or
push
xchg
pop
out
add
push
xchg
xchg
mov
jmp
imul
and
in
sbb
jo
add
push
or
or
scas
push
sbb
mov
and
mov
or
xor
xchg
adc
div
cli
icebp
pusha
jmp
in
push
pop
repnz
pop
repz
cmp
rol
stc
cwde
mov
sbb
add
loopne
or
call
add
or
adc
jmp
out
cmp
das
lea
shl
add
fwait
xchg
mov
xor
push
shr
jg
dec
stos
cmp
sub
xor
sbb
or
inc
or
imul
leave
(bad)
cmp
adc
pop
rcl
push
mov
pop
into
js
lea
push
outs
nop
das
outs
gs
or
mov
xchg
es
mov
sbb
mov
ins
in
pop
loope
inc
nop
into
mov
mov
ins
imul
sbb
jbe
inc
lahf
stos
or
fsubr
(bad)
or
cwde
sub
ja
pop
fcmovnb
adc
cmp
add
aas
add
aaa
aad
je
jb
mov
inc
sbb
and
add
mov
mov
mov
inc
std
arpl
push
inc
push
add
pusha
and
xchg
xchg
inc
xor
div
lds
sbb
imul
retf
mov
jle
retf
xor
xchg
add
push
pop
loope
arpl
add
test
and
sub
scas
(bad)
dec
jae
(bad)
push
movs
daa
test
xor
adc
ins
pop
pop
mul
cmc
icebp
movs
lods
lods
dec
sub
cmp
(bad)
sbb
adc
sahf
stos
add
jmp
push
aam
and
add
call
xchg
(bad)
and
inc
mov
imul
add
xchg
hlt
xchg
daa
sar
mov
xchg
push
out
addr16
ins
cmp
push
inc
sbb
test
and
outs
push
ret
inc
xchg
or
retf
mov
pop
adc
sar
enter
add
mov
inc
xor
cmps
cdq
dec
inc
je
(bad)
xor
sbb
mov
nop
retf
daa
and
adc
pop
push
cld
fnsave
add
in
inc
mov
test
call
loopne
mov
sbb
mov
(bad)
nop
icebp
push
cwde
pushf
lock
add
xor
pop
xchg
test
enter
xor
mov
(bad)
sub
or
sbb
cs
ins
add
pushf
pop
inc
cs
data16
push
adc
dec
cmp
shl
pop
outs
pop
inc
push
fidiv
loop
pop
mov
jns
pushf
sbb
adc
stos
in
add
inc
xchg
xchg
out
and
or
xor
sbb
dec
jge
sub
and
sbb
jg
loop
sbb
scas
test
or
or
or
int3
push
arpl
push
dec
jnp
leave
cmps
push
pop
push
pop
push
pop
cmp
or
push
sub
ficom
bound
adc
mov
mov
add
xor
xor
inc
and
add
fwait
mov
or
add
in
xor
or
fld
jg
cmp
je
sub
js
test
mul
imul
les
fiadd
cs
xchg
cmc
leave
adc
or
push
outs
sub
nop
push
jb
or
push
jmp
repz
pop
fwait
or
adc
inc
pop
pop
cmps
xchg
mov
adc
pusha
loop
call
fwait
test
pop
loop
popf
dec
bound
popa
and
and
push
and
and
inc
mul
pop
retf
inc
loop
jb
push
xchg
ror
jge
loop
and
mov
lods
cmp
mov
xor
adc
mov
push
mov
cdq
pushf
add
(bad)
sbb
stos
xchg
add
mov
add
dec
jp
jle
or
pop
rol
add
xor
xchg
daa
iret
add
add
sub
jne
adc
xlat
xor
dec
int
dec
sbb
sbb
mov
scas
jo
add
add
dec
mov
mov
cmp
xchg
mov
out
test
add
cmps
imul
dec
je
add
inc
and
xor
mov
mov
dec
jae
pop
retf
xor
cwde
ret
pop
add
and
in
imul
cmp
imul
dec
pop
ja
jmp
sub
jp
std
xchg
and
push
jg
push
pop
cmp
dec
je
icebp
loopne
in
scas
sbb
mov
adc
inc
bound
js
(bad)
jle
add
and
mov
(bad)
loopne
add
xchg
push
in
xchg
mov
cmps
push
imul
test
pop
sub
or
rcl
jmp
fidiv
sub
nop
mov
test
xchg
push
(bad)
dec
and
cmp
cli
dec
dec
pop
call
xchg
loopne
shl
add
xor
mov
cwde
jmp
push
adc
arpl
dec
mov
pop
xchg
mov
inc
xor
or
and
add
shl
xor
fistp
push
test
das
pop
sub
test
stc
and
pusha
retf
push
pop
sub
pusha
loopne
mov
test
or
addr16
cmp
jne
mov
mov
add
fcomp
inc
mov
pop
lds
push
dec
inc
push
sbb
bound
push
(bad)
adc
shr
fsub
push
push
jmp
mov
data16
xchg
mov
add
push
sbb
inc
sbb
jp
mov
leave
mov
add
sub
xor
mov
fcomp
ret
sbb
ret
pop
mov
cmp
comiss
sbb
inc
mov
iret
inc
mov
and
adc
stos
scas
shl
mov
xchg
adc
adc
mov
mov
retf
sbb
adc
push
mov
stc
ins
or
mov
imul
mov
dec
add
cli
clc
cmp
cmp
adc
adc
ja
and
and
sbb
test
inc
fld
dec
sbb
sbb
sbb
in
sbb
nop
in
sub
inc
or
fcmovnb
jns
mov
dec
jge
sbb
rcr
or
es
inc
dec
inc
and
mov
loop
sub
and
sub
js
mov
cli
cmp
mov
adc
and
sbb
ror
scas
pop
pop
arpl
mov
xor
shl
sbb
xchg
jae
sbb
inc
and
xor
(bad)
fmul
(bad)
mov
jno
add
and
jnp
and
ja
cmp
call
mov
and
inc
or
(bad)
adc
mov
addr16
push
or
push
push
push
sar
lock
lahf
mov
shr
js
sbb
dec
cmp
xor
jg
cmp
xor
loope
sbb
add
jmp
jo
add
in
popa
rcr
cwde
pop
add
add
cwde
and
imul
cmp
jno
mov
mov
stos
lods
adc
push
xchg
mov
and
aad
adc
or
inc
scas
out
mov
mov
pop
and
xchg
mov
cwde
sub
sub
lock
inc
inc
add
sbb
cmps
pop
adc
ret
add
cmp
and
add
or
movs
movs
stos
ins
jp
sar
repz
mov
xor
cmp
ret
fs
test
mov
aas
cmp
mov
leave
mov
imul
push
inc
rcl
sbb
rol
jne
xchg
push
sub
sbb
test
pop
popa
adc
popa
adc
sbb
bound
mov
aaa
adc
adc
adc
cmps
out
movzx
int
push
pop
add
push
push
xor
inc
js
jmp
lods
or
mov
xchg
jp
shl
and
sbb
jmp
sti
xor
je
or
das
jbe
adc
adc
cmp
(bad)
or
xchg
or
out
fwait
dec
ror
mov
sub
fsubr
movs
jmp
popa
inc
add
in
and
add
xchg
add
cmp
xchg
jb
fs
lock
mov
mov
(bad)
inc
and
outs
fwait
clc
dec
imul
xor
jle
cmp
adc
cmp
out
adc
mov
dec
xchg
loope
mov
sbb
arpl
inc
xor
popa
sbb
adc
nop
jne
dec
jl
sub
jne
pop
push
push
popf
pop
mov
cmp
outs
xchg
lahf
and
push
or
fld
adc
mov
xchg
xchg
pop
add
or
mov
ja
push
clc
mov
test
leave
mov
idiv
ret
ror
outs
dec
mov
cmp
retf
or
and
stos
adc
xlat
jp
sahf
lahf
jg
nop
mov
rcl
rol
mov
leave
pop
data16
imul
int
scas
or
addr16
rcr
sbb
cwde
lea
and
les
or
sub
and
mov
dec
or
jb
in
mov
divps
cmp
add
test
xchg
or
and
out
push
loop
sar
ret
adc
fbld
pop
les
bswap
push
sahf
ja
push
mov
jne
mov
out
retf
or
adc
ret
mov
xchg
jp
push
loopne
mov
and
xor
pop
fs
fld
inc
jo
jno
push
pop
cdq
les
fwait
xchg
jge
inc
mov
popa
pop
adc
in
or
and
push
enter
adc
push
imul
jbe
add
mov
xchg
xchg
mov
sbb
mov
rcr
jo
push
adc
lods
mov
js
les
cmp
push
mov
inc
fmul
(bad)
fstp
int3
or
(bad)
pop
mov
test
in
or
mov
xchg
or
pop
inc
ins
sbb
cmp
aaa
test
call
push
imul
or
adc
mov
rol
add
leave
cdq
pop
loop
shr
retf
pushf
data16
or
mov
add
mov
call
inc
jp
dec
jne
dec
jmp
push
mov
push
imul
test
push
call
inc
cmps
daa
int
and
test
mov
xchg
fsubr
xor
cmp
and
in
mov
jecxz
test
imul
or
lahf
pop
les
test
je
sub
ja
repz
xor
and
imul
popa
arpl
mov
outs
xor
inc
jl
add
clc
lods
fild
add
je
and
ror
add
popa
and
(bad)
(bad)
ins
sbb
or
pop
jmp
sbb
retf
adc
retf
jbe
xor
mov
adc
jecxz
sub
aam
pop
je
es
sub
adc
daa
lods
and
popa
cmc
sub
pop
jae
cwde
imul
sub
cmp
jecxz
in
popa
xchg
mov
and
fs
addr16
test
inc
call
dec
mov
(bad)
in
xchg
clc
and
pop
les
fs
pushf
jl
aaa
jecxz
lahf
shrd
mov
adc
cmp
(bad)
and
mov
in
lods
pop
mov
xchg
das
inc
jns
inc
pop
dec
xchg
sub
jbe
clc
xchg
xor
adc
sbb
daa
adc
cwde
stc
ins
cwde
or
jne
inc
enter
gs
(bad)
rol
xlat
loope
cmps
loopne
lods
xor
cmp
daa
out
mov
and
out
jne
inc
pop
rol
dec
inc
stos
lods
push
sahf
pop
dec
pop
(bad)
test
mov
sbb
or
mov
dec
in
gs
pop
sbb
sub
cmp
jle
fwait
mov
les
rcl
enter
stc
push
dec
push
ror
and
sub
jl
pusha
pop
pop
out
mov
adc
push
pusha
arpl
and
(bad)
enter
movd
mov
pop
pop
jp
or
out
xor
pop
jns
jmp
add
mov
repnz
aam
ror
adc
and
inc
sar
dec
retf
mov
jb
sbb
bound
dec
mov
mov
jne
lea
and
pop
ror
inc
clc
shl
xchg
jp
mov
add
movs
add
sbb
gs
cmp
mov
or
cs
out
sbb
or
or
lar
out
xor
(bad)
ds
adc
pop
add
or
inc
adc
jne
xor
pusha
fdivr
cmp
push
clc
std
stc
push
adc
jo
lea
cmp
add
push
fwait
sub
dec
loopne
nop
jne
scas
sub
xor
push
mov
or
adc
and
xor
xchg
adc
pop
jns
jno
and
out
out
sbb
or
dec
(bad)
cld
adc
aad
adc
ret
mov
aaa
fwait
ret
shl
test
adc
inc
std
sub
ins
ret
inc
adc
adc
add
pusha
inc
and
dec
xchg
push
or
popf
sub
and
inc
adc
xchg
aad
or
test
pushf
or
cmp
adc
inc
adc
popa
sub
sbb
add
cmps
out
lods
ret
lea
inc
mov
sti
sbb
shr
pop
outs
push
and
das
aad
loopne
xchg
adc
retf
pusha
adc
mul
cmp
or
sbb
inc
add
mov
dec
jne
mov
and
sub
jmp
push
stos
iret
cld
mov
aaa
in
jno
adc
sub
mov
shl
mov
enter
push
pop
mov
push
push
(bad)
sahf
add
jmp
and
sub
adc
xchg
or
cmp
inc
icebp
jmp
retf
jnp
pop
(bad)
mov
(bad)
cdq
retf
retf
pop
inc
mov
addr16
push
stos
ret
fcmovbe
mov
xchg
or
ds
inc
je
test
in
mov
bound
mov
cdq
lea
jecxz
out
push
call
addr16
pop
adc
xchg
and
push
ror
mov
seta
push
jo
std
sbb
sub
and
add
xchg
add
cld
and
ficom
xchg
or
dec
push
test
hlt
xchg
adc
mov
hlt
loopne
mov
cld
sbb
xor
jne
cmc
dec
fadd
sub
dec
cmp
mov
mov
dec
adc
dec
cmp
cs
dec
dec
aad
mov
dec
dec
sahf
lock
into
cmp
xlat
hlt
sbb
dec
je
jmp
icebp
(bad)
fidivr
adc
mov
pop
lods
pop
cmp
fiadd
lock
or
jne
jnp
or
jmp
or
or
test
mov
mov
movs
dec
fwait
jne
mov
sbb
cdq
push
mov
ret
and
repz
les
inc
sub
mov
daa
xchg
call
pop
adc
call
ja
jno
and
xchg
repnz
xchg
test
call
maskmovq
neg
inc
sub
loopne
outs
std
pop
or
in
in
cmp
push
pop
push
mov
gs
mov
cdq
add
iret
push
and
mov
out
jo
push
mov
push
xor
rol
and
sub
xchg
test
loopne
sub
add
cwde
sub
cmp
in
adc
pop
push
or
and
cmps
or
adc
cmp
cld
call
jmp
addr16
or
xchg
sbb
xchg
loope
ds
mov
push
cmps
lock
mov
or
jmp
ja
or
jmp
in
(bad)
in
and
pop
sbb
jg
fcomi
sub
cmp
add
inc
add
inc
pop
xchg
adc
ss
call
pop
xchg
leave
test
jl
popa
aas
js
mov
add
out
pusha
or
adc
jmp
add
inc
fidivr
cwde
pop
jmp
or
cmp
mov
dec
push
daa
pusha
aas
dec
mov
cdq
push
mov
mov
add
iret
xchg
add
enter
or
outs
or
mov
int3
rol
scas
(bad)
mov
or
rol
je
inc
adc
add
add
mov
int
sbb
fsubr
fs
xchg
daa
push
jne
push
sub
or
mov
mov
push
adc
mov
add
push
and
cmps
jge
mov
cmc
pop
add
add
and
push
jns
mov
and
jle
call
dec
mov
mov
or
and
arpl
sub
add
jmp
jmp
pusha
mov
add
dec
jp
inc
enter
xchg
hlt
xor
stos
sbb
sub
mov
cs
sahf
jl
pop
test
add
sub
xor
test
je
test
sti
(bad)
cmp
loopne
add
leave
xor
sbb
retf
sub
ret
aam
sbb
mov
dec
pop
call
arpl
ret
fbstp
pop
jne
mov
scas
sbb
(bad)
push
adc
add
xchg
(bad)
jecxz
or
and
(bad)
(bad)
jmp
xor
(bad)
cli
and
xor
push
retf
mov
adc
pop
ja
in
jl
add
or
push
dec
jmp
fiadd
pop
ss
or
ffree
push
dec
xor
sbb
dec
adc
mov
cmc
mov
and
or
sub
sbb
mov
iret
cwde
inc
pusha
fmul
sbb
cmp
sub
mov
cdq
and
mov
xchg
call
push
add
inc
adc
jle
mov
adc
mov
and
and
mov
call
mov
xchg
xor
add
fiadd
jmp
adc
rcr
aam
and
aad
je
mov
sti
jne
push
lahf
xchg
imul
in
test
xor
sub
inc
xchg
test
xor
dec
jo
push
jecxz
sbb
in
in
loope
adc
cmps
mov
mov
dec
popa
bound
icebp
cmp
icebp
movs
or
imul
mov
repnz
js
or
add
les
data16
jmp
(bad)
ficom
sbb
das
clc
fimul
(bad)
dec
jo
sub
xor
adc
pop
pop
cmp
rol
call
nop
fcmovbe
push
add
imul
ss
push
imul
sbb
add
je
test
xchg
push
sub
and
mov
jne
pop
movsx
add
push
dec
call
mov
mov
js
adc
ins
test
adc
sub
or
pusha
mov
and
or
sbb
push
or
repz
xchg
cmc
inc
and
fmul
adc
shl
sub
ins
popa
push
adc
or
sub
push
dec
std
fldenv
add
dec
adc
cdq
sar
es
popa
in
sbb
rcl
xor
cmps
int
adc
pusha
cmp
clc
mov
push
xchg
fsub
retf
sbb
sub
in
mov
pushf
add
push
cmp
gs
(bad)
or
aad
movs
or
push
(bad)
cmp
and
fdiv
scas
imul
sbb
dec
adc
test
iret
push
scas
mov
mov
cmp
fiadd
mov
mov
inc
mul
pushf
sub
pusha
mul
sub
pop
into
inc
sub
inc
shl
add
test
fmul
es
add
adc
test
or
pop
pop
and
cmp
adc
fcom
(bad)
loopne
xchg
xchg
jmp
or
pop
xchg
add
es
jne
xchg
push
add
add
jmp
pushf
sahf
mov
push
or
sahf
inc
pop
or
or
sub
inc
add
call
pop
push
dec
(bad)
es
mov
mov
aam
jno
pusha
adc
adc
(bad)
retf
jmp
xchg
or
je
les
movs
sbb
inc
clc
xor
jle
bound
push
inc
data16
test
mov
test
jb
mov
(bad)
out
out
ins
mov
sbb
mov
mov
mov
mov
inc
mov
xchg
add
mov
inc
jecxz
(bad)
repz
add
inc
and
or
xor
add
add
stos
push
push
pop
or
nop
mov
test
and
add
lea
daa
dec
add
nop
mov
push
dec
adc
mov
inc
inc
cs
lods
xor
inc
pop
lahf
xor
rol
test
enter
test
push
mov
mov
inc
enter
mov
aad
test
sub
repnz
xor
int3
clc
adc
ror
or
mov
mov
sbb
stos
int3
add
mov
daa
push
es
ret
add
cmp
xchg
or
adc
add
jno
mov
cmps
fs
enter
or
jp
inc
xor
jle
inc
or
jo
mov
mov
mov
cmps
ror
aam
inc
(bad)
call
dec
lahf
push
sbb
lea
and
adc
ds
je
or
jmp
das
add
and
add
shl
mov
rcr
or
cmp
push
adc
pusha
pusha
sbb
(bad)
push
adc
pop
add
sub
mov
shl
add
nop
mov
cmp
mov
or
push
iret
add
mov
out
jl
or
test
xor
mov
push
cmp
clc
mov
or
or
jo
dec
cmp
inc
lahf
mov
mov
cdq
jl
adc
pop
cmps
sub
dec
xor
das
fdivr
ror
in
mov
xor
out
imul
xchg
inc
mov
pop
push
pop
push
or
imul
nop
pushf
inc
sub
fcomp
jp
je
xchg
dec
je
jo
xchg
or
xchg
data16
mov
push
mov
(bad)
fwait
rcr
(bad)
and
repz
dec
les
mov
hlt
mov
rcr
(bad)
or
fisubr
shr
and
jg
stc
add
cmp
std
mov
push
mov
ins
sbb
int3
mov
push
aas
and
dec
sub
rol
push
ins
shr
mov
ja
lea
push
or
cmp
int3
adc
mov
mov
xchg
push
or
lock
sbb
std
pop
pop
xchg
sbb
sbb
add
inc
adc
pusha
sbb
aad
fs
sbb
adc
xchg
(bad)
leave
aam
lds
sbb
pop
dec
xchg
mov
and
or
call
sub
shl
repz
pop
push
pop
add
lock
push
push
lods
adc
adc
enter
or
pop
pop
add
dec
mov
sub
jmp
dec
nop
shl
mov
or
jmp
push
dec
outs
fs
xchg
les
sub
add
cld
and
add
sub
push
retf
xchg
inc
lock
adc
les
in
add
fisubr
push
xor
and
cmp
mov
rcl
ins
xlat
das
sbb
cdq
adc
aam
cmps
sub
push
scas
push
ins
sub
idiv
cmp
inc
int
pop
cmp
or
xor
push
call
jecxz
xlat
sub
test
jle
dec
sbb
mov
xchg
mov
(bad)
dec
xor
fnstenv
sub
sub
push
(bad)
shl
(bad)
jo
pop
in
and
mov
int
out
std
jle
jo
imul
mov
outs
inc
loope
icebp
cs
jmp
pop
mov
pop
jmp
adc
push
call
push
test
jge
nop
and
hlt
inc
int3
stc
adc
dec
xor
mov
sub
add
retf
imul
rol
lock
mov
sub
xor
cdq
out
jle
push
dec
add
nop
sbb
mov
repnz
add
iret
jne
xor
mov
or
aaa
lock
pusha
push
pusha
inc
sbb
popa
data16
call
lds
jae
or
push
inc
and
retf
inc
jp
add
mov
and
jbe
je
or
int
in
pusha
out
lds
sbb
aad
dec
fisttp
or
dec
inc
ss
mov
iret
xor
jnp
sub
adc
pop
aaa
test
cmps
loope
add
xor
xor
cmps
sbb
sub
dec
(bad)
scas
adc
ins
imul
inc
mov
mov
movs
mov
mov
jb
dec
jno
sbb
cmp
ins
stos
cmps
jo
or
or
iret
sbb
lock
mov
stos
add
sub
or
or
test
push
fcomp
push
adc
es
rcr
pop
sbb
shl
pusha
nop
mov
adc
jnp
call
ss
fiadd
mov
lock
inc
call
add
xchg
hlt
xchg
or
or
paddq
nop
push
imul
xor
repnz
pop
push
pop
or
add
sar
fdivr
jne
add
and
pop
mov
add
inc
or
dec
push
popf
inc
rol
jns
or
xchg
nop
popa
dec
and
pop
punpckhbw
mov
cmp
ins
xor
xor
jns
or
push
xchg
into
mov
sbb
retf
pminsw
es
test
shr
mov
mov
sub
rcr
sub
pop
fst
xor
jne
not
ds
jne
cs
jne
fcom
jo
xor
nop
and
adc
cmp
xchg
ret
pop
sbb
cli
or
mov
or
dec
xchg
mov
ins
std
xchg
adc
mov
pushf
cwde
push
mov
shl
ja
or
jno
mov
xchg
fsub
mov
fsub
or
or
bound
xchg
imul
push
adc
int
push
jl
call
jb
pop
cs
mov
cs
retf
in
in
call
dec
pop
mov
das
retf
mov
out
dec
test
arpl
push
or
pusha
and
mov
outs
jne
enter
pop
sub
xor
fild
xchg
jp
ds
test
jnp
enter
mov
mov
aam
pusha
popa
outs
retf
fs
dec
fistp
or
cdq
fsub
add
sbb
inc
push
mov
dec
enter
xor
mov
xchg
or
mov
ret
dec
xchg
std
or
sbb
enter
popa
jl
add
push
pop
sbb
lock
xchg
xchg
lods
imul
push
or
stc
test
push
sbb
add
push
mov
xchg
sub
fcomp
rol
stc
test
call
add
mov
add
xchg
ins
push
or
ins
add
cmp
add
push
js
jo
stos
ins
imul
adc
mov
imul
hlt
dec
mov
js
in
(bad)
sub
dec
jge
and
add
push
cmp
xchg
push
pop
jo
xor
popa
and
jno
loopne
xor
or
add
jne
or
dec
inc
jae
ins
mov
xor
xchg
shl
push
leave
dec
loope
mov
jmp
and
mov
imul
jge
test
mov
js
inc
adc
es
mov
or
cmp
fbstp
in
test
inc
jb
or
xchg
adc
mov
sbb
rol
inc
dec
loopne
push
dec
imul
xor
dec
inc
jmp
mov
test
add
cmps
xchg
or
sub
jmp
loopne
in
or
imul
add
sbb
pop
imul
mov
mov
cwde
adc
xchg
push
xchg
xor
cmp
add
push
pop
shl
(bad)
fsub
inc
bound
inc
pop
sbb
lock
int
test
add
fchs
dec
aam
imul
push
inc
sbb
sahf
ret
movs
aam
adc
ficom
rol
inc
lock
xor
psubsw
add
jge
clc
inc
dec
jp
mov
jae
add
mov
xchg
xor
fimul
jmp
pusha
lea
jno
pusha
and
dec
mov
(bad)
aam
dec
repnz
ror
sbb
movs
call
or
cmp
vmovaps
enter
adc
sub
sahf
cmps
fcom
(bad)
mov
inc
es
ins
rcl
(bad)
jg
mov
sar
push
ror
ins
mov
or
mov
sub
pop
enter
js
adc
and
icebp
cli
aam
je
in
pop
adc
pop
mov
sbb
xor
cmp
mov
sbb
mov
or
and
add
sbb
test
inc
bound
jle
hlt
dec
xor
or
rcr
add
jl
popa
pop
pusha
adc
or
mov
fs
outs
out
or
in
nop
mul
sbb
and
loopne
or
cwde
dec
add
pop
sub
dec
test
fcmovb
xchg
pop
xlat
jl
xor
add
mov
mov
and
retf
std
nop
dec
ins
fucomp
test
or
dec
dec
jo
(bad)
mov
cs
mov
and
pop
sub
pop
loop
fwait
xor
mov
icebp
or
fwait
pop
dec
sub
sahf
nop
dec
dec
pop
and
sahf
sahf
cmps
jge
nop
ret
sub
dec
or
and
rcr
fidiv
add
sbb
loopne
dec
sub
adc
mov
dec
popf
in
dec
scas
push
stos
dec
adc
call
ins
xchg
jle
jl
inc
adc
and
movs
inc
faddp
mov
iret
adc
mov
scas
ins
add
jl
mov
daa
xchg
inc
stos
or
dec
stc
cmps
mov
test
fdivr
xchg
jmp
sahf
push
push
aaa
mov
add
stos
leave
jl
pushf
test
cmc
xchg
and
int3
xchg
imul
outs
mov
repnz
fwait
or
mov
cmp
push
jns
mov
adc
xor
push
xor
dec
mov
fs
or
push
pop
and
dec
dec
aas
add
push
xlat
(bad)
and
pop
mov
adc
retf
mov
add
bound
daa
fwait
sar
hlt
cmp
std
push
add
inc
add
cmp
xor
sbb
cmp
add
inc
add
dec
loop
push
loopne
icebp
dec
cs
popa
inc
jle
nop
retf
and
xchg
mov
icebp
add
and
nop
sbb
ja
and
call
cmps
add
mov
jnp
and
mov
and
add
xchg
jno
mov
xchg
add
cmps
aaa
adc
leave
lea
pop
or
mov
call
push
int
in
adc
and
fld
scas
jmp
push
inc
or
enter
sbb
lods
cwde
dec
fcomp
rcr
and
fwait
rcl
push
outs
pop
rcl
pop
movs
pop
ins
scas
clc
mov
and
ror
gs
inc
mov
add
push
cmc
sbb
or
jo
adc
and
jb
adc
lods
mov
movs
jmp
daa
nop
les
outs
add
test
adc
scas
push
push
add
mov
mov
mov
fs
or
jbe
mov
mov
jno
xor
mov
or
push
mov
xchg
or
push
jo
lock
and
mov
sbb
pop
push
jnp
push
xor
mov
and
ret
int3
mov
test
aad
sub
into
push
pusha
addr16
or
ret
push
or
add
jle
push
ss
push
inc
push
mov
repz
iret
je
inc
scas
mov
movs
pop
add
push
in
sbb
mov
in
imul
imul
add
mov
sub
push
pop
push
or
test
lock
in
xlat
xchg
add
dec
jl
or
mov
sar
pop
adc
and
dec
add
inc
push
adc
retf
test
push
sti
sbb
add
imul
dec
int
push
fisub
sub
add
cmps
mov
lea
cvtdq2ps
pop
cdq
test
fisttp
xchg
ss
aam
imul
fstp
movs
jmp
push
inc
sub
add
fist
aaa
mov
lods
push
inc
add
push
mov
mov
jge
and
mov
push
popa
xchg
xor
and
inc
adc
retf
enter
pop
sbb
sar
push
push
push
pop
gs
lods
jle
sbb
xchg
dec
rcl
and
dec
(bad)
xor
mov
int
cmps
add
inc
cmps
ret
pusha
inc
jbe
push
data16
push
mov
dec
xor
push
dec
call
or
push
lock
sahf
sub
sti
mov
(bad)
ins
xor
xor
daa
xor
ins
je
push
pusha
sbb
adc
dec
es
rcl
rol
mov
imul
call
adc
push
xlat
stos
loope
jg
jge
dec
xor
push
or
cmp
or
and
and
inc
pop
imul
das
push
xchg
xor
or
es
ins
cmps
or
dec
xchg
and
inc
jo
jmp
mov
rcl
mov
jl
mov
sub
mov
bound
push
sub
xor
xor
sbb
in
test
adc
lea
daa
arpl
dec
add
icebp
or
iret
shl
inc
retf
inc
push
dec
(bad)
dec
je
pop
loopne
leave
mov
test
push
add
mov
jg
xor
mov
rol
rol
add
mov
pop
mov
nop
mov
adc
or
sub
arpl
or
not
and
fadd
mov
in
pushf
add
push
xor
or
cmp
je
popa
je
imul
pop
sbb
xor
xor
add
add
push
es
inc
inc
push
mov
(bad)
jo
add
and
pop
mov
leave
nop
and
sub
dec
inc
ficomp
mov
adc
add
add
or
jb
pop
adc
sbb
sbb
pop
out
pop
and
sub
adc
adc
ins
cmp
jbe
xchg
inc
in
sub
dec
xchg
and
add
add
mov
pop
jmp
mov
add
xchg
or
mov
or
fcmovb
and
fmul
fsub
mov
xchg
cld
jg
ror
or
rcr
shr
imul
or
and
clc
push
adc
pop
cdq
xchg
adc
cmp
cmps
les
enter
dec
fdiv
sti
xor
cmp
mov
inc
mov
xor
in
adc
sar
lea
rol
mov
es
jl
es
mov
jbe
ret
sub
xor
cmc
and
pop
dec
cmp
dec
dec
mov
jmp
cdq
mov
sbb
nop
push
(bad)
in
movs
xor
out
popa
push
adc
adc
lea
or
add
push
shr
push
sbb
xchg
push
repz
push
fld
dec
and
add
imul
fwait
add
jmp
xor
mov
repnz
pop
push
idiv
inc
add
je
push
push
push
or
dec
push
jg
pop
lods
pop
xor
cmp
cmp
rep
dec
imul
adc
jbe
push
or
lock
inc
push
leave
jmp
and
dec
fcmovu
mov
cmp
daa
jmp
ss
xchg
push
in
ror
sbb
xor
ror
imul
ins
jmp
push
jae
or
loopne
rcr
sbb
pop
adc
test
jmp
sbb
ins
ror
clc
xor
xchg
push
ror
call
gs
cmp
cdq
xchg
mov
push
adc
jecxz
mov
dec
aam
nop
xchg
fsub
les
sbb
adc
add
shl
leave
xchg
adc
mov
pop
sub
push
push
xchg
or
jnp
dec
das
adc
call
sub
jge
out
dec
mov
xor
jno
int3
jg
lea
pop
or
and
popf
push
test
and
aaa
(bad)
pop
adc
int3
adc
inc
dec
cmp
and
repnz
push
movs
rol
xor
inc
pop
and
mov
movs
jo
xchg
pop
pop
pop
jmp
ja
add
adc
sbb
arpl
push
push
or
pop
sub
xor
mul
add
cmps
mov
fist
jno
mov
in
retf
(bad)
and
ins
xor
inc
xchg
aam
adc
inc
cmps
or
mov
hlt
in
sti
jmp
ins
dec
cmp
(bad)
adc
xchg
ins
mov
popa
std
gs
pop
sub
mov
jb
scas
add
pop
fldenv
sbb
pusha
in
and
cmps
sbb
fs
sbb
and
sbb
test
adc
(bad)
lods
ins
test
jnp
mov
sbb
sbb
add
add
lds
lods
lea
les
sub
mov
ror
lock
mov
lock
hlt
cwde
push
mov
pop
pop
ins
cmp
dec
rcr
pop
lock
xchg
call
ret
mov
pop
adc
inc
dec
add
fcomp
mov
push
mov
pop
and
les
sbb
push
adc
sbb
mov
push
inc
imul
pop
xor
adc
xchg
test
xor
and
dec
pop
je
lea
das
adc
and
das
push
fcom
daa
sbb
sbb
push
sub
jo
add
inc
add
inc
sub
xchg
adc
mov
ret
add
lds
xchg
cld
sbb
adc
pop
fcmovnbe
inc
cmp
enter
sub
mov
add
cwde
fadd
jmp
pop
mov
loopne
js
add
adc
or
xchg
les
xchg
imul
cdq
repnz
sahf
add
pushf
or
jo
dec
popa
inc
ja
inc
xchg
mov
add
add
outs
add
add
fcom
test
jo
or
nop
shl
adc
sub
and
lea
or
add
daa
add
retf
xor
add
in
add
pop
or
sub
push
adc
ins
jmp
movs
mov
add
mov
imul
stc
adc
mov
adc
clc
and
sbb
jp
cmp
lods
ja
ror
xor
pop
cs
inc
mov
jb
sub
cmp
or
sub
retf
arpl
(bad)
adc
push
push
jns
js
cmp
sub
jmp
fidivr
icebp
bound
push
mov
dec
jecxz
add
xchg
xor
mov
iret
xor
data16
outs
add
jmp
(bad)
xchg
les
(bad)
rol
cld
imul
sub
sub
jmp
test
mov
mov
nop/reserved
test
outs
pusha
inc
ret
js
popf
mov
stos
(bad)
mov
test
add
add
aam
adc
in
and
popa
or
cmp
push
adc
xchg
xor
add
mov
mov
push
and
mov
leave
pop
test
and
std
dec
xor
es
shl
jmp
neg
sbb
push
sub
mov
jge
pop
mov
in
mov
inc
and
bound
and
push
fldenv
ret
aad
dec
and
mov
add
in
or
imul
mov
or
inc
push
retf
movs
ret
int
std
nop
daa
adc
inc
dec
sub
dec
adc
ins
push
or
(bad)
sub
or
ins
loope
out
call
dec
repz
mov
add
add
fcmovnbe
mov
test
inc
fist
iret
out
sbb
cmp
inc
das
mov
xor
push
mov
lahf
mov
mov
pusha
imul
dec
ja
(bad)
movs
or
push
xor
dec
add
inc
(bad)
push
pop
rcl
out
rcl
sbb
pop
mov
mov
retf
or
pop
not
lock
es
or
in
cmp
cmp
aas
push
test
xchg
jl
add
mov
xor
aas
and
cmps
or
loopne
cmp
xchg
xchg
and
fadd
mov
or
inc
jecxz
lahf
adc
sub
sub
rol
and
xchg
dec
adc
push
add
or
xchg
push
jp
pop
fild
sti
sub
in
xchg
movsx
ret
and
or
sbb
adc
mov
test
ss
xchg
fild
cld
adc
dec
or
sub
cmp
jmp
adc
icebp
xchg
mov
or
sbb
mov
or
adc
jbe
xor
cmp
aam
inc
jns
xor
test
mov
mov
rol
mov
aad
and
imul
or
sbb
or
push
and
(bad)
out
les
xor
rol
and
in
or
mov
jo
push
test
inc
cmp
lods
push
mov
sub
ins
inc
sub
inc
and
push
adc
xchg
xor
xor
vmread
dec
and
xchg
jae
retf
add
cmp
mov
mov
rcl
out
or
pop
push
cmp
xor
mov
outs
or
jno
aad
test
mov
test
ss
je
push
jmp
fistp
ja
adc
je
mov
jns
(bad)
mov
repz
cmp
out
(bad)
cmp
sub
outs
adc
sub
add
pop
daa
and
xchg
jg
sbb
sbb
es
retf
std
sbb
inc
aad
xor
pop
test
(bad)
test
cmp
bound
inc
loopne
fs
and
push
icebp
add
xchg
add
dec
jo
sub
call
test
data16
test
push
adc
pop
ss
pop
pop
fcomp
inc
jb
shr
inc
ins
loope
daa
(bad)
in
jbe
add
cmps
cmps
test
lods
xchg
and
mov
adc
outs
xor
add
(bad)
push
inc
test
pop
test
inc
fcom
in
inc
dec
mov
sub
push
(bad)
add
mov
xchg
push
loope
fdivr
out
ins
leave
movs
dec
int
lahf
jmp
popf
mov
mov
cmp
xchg
stos
jne
jle
pop
add
cmp
sub
push
loopne
push
and
rcr
das
xchg
mov
cmp
inc
mov
in
mov
push
and
(bad)
(bad)
mov
sbb
mov
ins
dec
push
or
pop
mov
repz
test
sbb
pop
in
and
adc
std
(bad)
and
adc
rol
inc
mov
pop
cmp
pop
pop
sub
imul
jne
in
xor
inc
and
repz
in
adc
mov
sub
or
call
xor
sub
push
ja
lods
ins
arpl
sub
or
jp
sbb
sub
sub
add
push
and
sub
push
jno
and
and
ret
call
and
dec
cmp
cdq
mov
inc
in
sub
imul
sub
ins
clc
adc
je
adc
loopne
lea
cmpxchg
int
inc
push
cdq
mov
rol
lock
imul
shr
repnz
pop
inc
ja
inc
add
bound
stos
leave
push
sub
sub
mov
or
mov
xor
outs
aas
push
out
cld
sbb
outs
sub
scas
xchg
test
enter
unpckhps
nop
mov
pop
pop
xor
mov
mov
cmp
mov
jle
and
push
sti
std
fnstenv
sub
aad
(bad)
xchg
call
xor
dec
fild
dec
xor
mov
add
js
adc
lods
xchg
push
(bad)
adc
add
jbe
inc
cs
push
pop
and
or
inc
jo
mov
push
adc
test
dec
pop
out
push
fucomip
inc
or
sbb
ins
xchg
fild
sub
fstp
mov
mov
ror
dec
call
test
mov
push
ficom
xor
and
int
je
rol
out
cmp
pushf
sbb
jle
or
sbb
adc
inc
and
xor
sar
(bad)
cmc
in
push
mov
jge
call
mov
cdq
add
inc
pusha
adc
push
add
or
xor
mov
test
adc
cmp
test
or
add
enter
int
sbb
pop
push
mov
push
dec
cmp
fcmovne
mov
pmullw
fdiv
adc
and
mov
pop
les
cmp
mov
xchg
and
add
and
sbb
pusha
and
jmp
jne
or
xchg
daa
ret
test
sub
adc
sbb
test
sti
push
into
push
sbb
sub
dec
cld
and
ret
push
js
add
test
ror
adc
sub
pop
popa
add
ins
es
add
pop
or
adc
or
clc
sbb
jae
lahf
dec
inc
ficom
test
dec
push
into
mov
add
jmp
mov
inc
je
dec
pusha
xor
in
jl
mov
push
xor
xchg
ja
pop
sbb
mov
ins
pushw
add
pusha
or
push
adc
je
scas
sbb
rcl
scas
popa
(bad)
xchg
(bad)
fistp
shr
and
pop
pusha
xchg
add
add
or
mov
jo
mov
(bad)
arpl
jns
(bad)
push
xchg
cmp
add
cli
jno
cmp
test
gs
mov
cmp
cmp
pop
mov
je
sub
push
push
lock
shr
mov
test
or
cwde
imul
sbb
mov
xchg
nop
les
adc
hlt
mov
inc
mov
lock
cld
cmps
and
add
adc
mov
mov
jle
fnsave
mov
call
gs
xor
add
imul
mov
and
cmp
pop
rcl
pop
cmp
leave
dec
outs
lods
retf
or
xchg
mov
inc
sub
fmul
sub
iret
or
sbb
adc
test
jne
sbb
pusha
sbb
inc
push
sub
mov
sbb
scas
inc
xchg
call
out
sbb
sbb
lods
hlt
hlt
xchg
shl
inc
outs
push
out
dec
adc
dec
sub
sbb
mov
fmul
push
test
into
inc
adc
and
pop
outs
sbb
sbb
popf
daa
scas
xor
aam
or
movs
dec
sbb
add
int
aas
adc
push
add
mov
or
pop
es
pop
lea
push
and
jne
mov
and
lods
loopne
xor
pusha
push
imul
das
sbb
adc
cmps
repnz
xchg
ret
(bad)
and
ret
push
inc
dec
inc
ret
outs
pushf
rep
pop
icebp
add
push
pop
mov
xor
sub
push
adc
in
adc
mov
pushf
sbb
retf
ret
add
and
ret
hlt
mov
or
adc
cmp
(bad)
shl
xor
and
xor
inc
dec
test
ret
pop
push
push
or
add
or
cwde
pop
xor
pop
add
add
sub
jnp
add
(bad)
dec
mov
popa
sbb
push
cmp
daa
mov
jl
adc
sbb
cwde
lea
and
mov
dec
test
sub
je
jg
adc
mov
or
clc
xor
cld
das
dec
mov
or
or
test
dec
mov
xor
ds
lock
rcr
scas
aas
add
mov
clc
mov
pop
or
clc
sbb
jns
popa
jae
mov
das
inc
mov
sbb
xchg
xor
add
or
scas
xchg
xchg
nop
xchg
aam
pop
(bad)
and
cmp
pop
test
or
adc
imul
mov
mov
in
(bad)
rcl
inc
or
ss
sub
adc
sbb
and
mov
shr
imul
pop
xor
add
mov
inc
ds
jecxz
(bad)
sub
lods
inc
dec
sti
add
dec
jb
leave
sbb
xchg
les
dec
mov
mov
or
test
xchg
test
push
mov
dec
es
and
adc
dec
fdivr
inc
mul
dec
popf
nop
push
and
jmp
pop
lahf
jae
movs
push
mov
mov
and
fbstp
sub
in
fst
xchg
jne
or
repz
aam
sub
lahf
push
push
loopne
pop
inc
adc
imul
jbe
jl
je
jle
push
and
fs
mov
or
push
add
mov
lock
test
je
and
mov
jp
mov
add
inc
mov
lods
or
sar
lea
xchg
repnz
add
or
fmul
dec
loopne
adc
adc
adc
and
pop
das
ret
jb
jns
les
out
push
push
jne
addr16
push
ret
mov
inc
jo
fwait
aam
jo
mov
stc
ret
mov
jl
iret
lea
dec
dec
loopne
js
daa
movs
jge
(bad)
fsub
(bad)
sbb
mov
and
and
pop
fld
sbb
pop
inc
and
dec
loopne
pop
sub
and
retf
sub
and
ret
fcom
mov
push
(bad)
addr16
inc
pop
or
push
or
scas
loope
xchg
dec
je
pop
popa
xchg
xor
adc
cmp
dec
jns
jge
dec
imul
add
lods
mov
jae
sbb
inc
sbb
or
out
lods
adc
push
add
push
cmp
inc
retf
cmp
out
xor
enter
cmp
push
or
fiadd
int3
mov
or
xor
inc
sbb
test
je
and
aam
jecxz
loope
loopne
pop
or
sbb
inc
or
in
xor
xchg
xchg
icebp
rcr
mov
es
and
mov
repnz
jbe
add
push
jmp
cmp
ret
or
(bad)
call
int3
and
addr16
pop
rcl
mov
movs
mov
and
sub
cmps
cmp
fadd
dec
add
jne
pop
pop
mov
mov
cmp
mov
xchg
stos
call
xor
cmp
push
mov
mov
xchg
cld
and
cld
cs
add
xor
dec
dec
jecxz
and
sbb
imul
inc
and
shl
and
mov
xor
xchg
xchg
fild
in
sbb
popa
bound
jno
or
imul
push
aas
movs
and
sub
and
loope
dec
arpl
jle
std
(bad)
inc
adc
push
adc
cmp
cmp
test
mov
add
test
add
or
mov
xlat
jp
push
pushf
adc
and
movs
pop
test
and
or
out
adc
ret
movzx
fisttp
ss
xchg
and
mov
movs
jge
jno
adc
pop
ror
mov
inc
adc
pop
xchg
mov
cmp
or
push
movs
jb
loopne
add
stc
lea
add
(bad)
movs
je
push
add
adc
push
xor
pop
sub
in
push
and
test
push
mov
dec
aam
popa
imul
adc
mov
mov
sub
push
pusha
sub
call
(bad)
xchg
cwde
and
push
push
push
or
(bad)
push
sbb
sub
mov
push
pop
dec
cmp
adc
adc
mov
lahf
in
jecxz
xchg
and
xor
mov
jns
adc
enter
ds
(bad)
adc
js
push
test
ror
test
aam
push
fst
in
xor
mov
or
push
xchg
sub
out
sbb
cmp
mov
popa
les
inc
pop
mov
add
adc
lock
lods
shl
push
dec
ret
outs
sbb
cwde
adc
sbb
xor
es
mov
lods
shl
add
xchg
arpl
xchg
popa
out
cmp
or
mov
call
(bad)
push
adc
push
add
nop
pop
add
test
sub
setbe
sbb
adc
push
adc
pop
daa
pop
out
adc
adc
leave
shl
mov
xor
pop
mov
cwde
and
jge
add
jecxz
fs
call
xor
and
test
rcl
rcl
add
mov
cmp
add
or
add
popa
int
push
jno
retf
pop
lds
mov
data16
sub
mov
inc
lea
inc
nop
mov
adc
into
cmp
mov
pop
shl
(bad)
cwde
icebp
sub
lds
xor
es
mov
mov
dec
lods
fadd
add
rcl
adc
sbb
mov
mov
xor
sbb
adc
xor
push
leave
stc
shl
add
pop
or
mov
addr16
cmp
xchg
xor
jmp
add
add
cmp
jns
or
xor
sbb
lods
mov
mov
or
jo
mulps
xor
cmps
dec
js
mov
push
pusha
cmp
and
pop
je
mov
push
aam
jecxz
mov
mov
adc
pop
ror
jae
rcr
outs
xchg
data16
outs
icebp
dec
sbb
imul
inc
inc
add
jecxz
dec
xor
push
mov
adc
js
inc
mov
or
sub
rep
call
adc
dec
jmp
aad
imul
pop
xchg
sar
movs
push
popf
mov
push
add
retf
sbb
add
lds
xor
add
pop
xchg
ja
cmp
lods
popf
test
add
mov
es
dec
fcom
popa
test
mov
and
push
mov
push
lock
lock
and
cmp
inc
sbb
push
mov
pop
inc
ds
movs
cmp
dec
cmp
dec
dec
out
test
add
sbb
sti
add
fcomi
add
js
pop
bound
xor
push
dec
jmp
fsub
sbb
push
or
cmp
cmc
imul
jmp
push
imul
sbb
cmp
push
pop
push
inc
inc
xor
adc
pop
sbb
out
or
and
xchg
(bad)
inc
(bad)
ret
cwde
add
and
or
and
mov
mov
pop
daa
mov
push
in
mov
or
mov
or
fsub
dec
loope
sbb
mov
cli
jmp
ret
or
sbb
lahf
and
cmp
xchg
jb
lahf
shl
xlat
cmps
lock
icebp
jno
(bad)
outs
fcom
or
mov
xor
or
cmp
pop
pop
shr
and
inc
cdq
fs
push
dec
add
aad
scas
lock
and
mov
jns
pop
sahf
test
mov
movs
add
dec
rcr
lock
stos
pop
loop
cmp
sub
aas
lock
outs
dec
pop
xchg
call
jns
loopne
ins
inc
call
lahf
aad
inc
call
rol
sbb
das
jne
inc
add
dec
loope
push
and
aam
add
nop
mov
mov
sbb
in
push
add
sub
jne
adc
pop
sbb
add
ins
loopne
lods
sub
or
aam
dec
or
movups
jg
and
cmp
adc
rcr
pop
sub
push
ss
push
xchg
sub
inc
lahf
test
ss
rol
aaa
jo
cwde
outs
shl
inc
ret
pusha
jo
pop
sbb
mov
imul
mov
jno
mov
push
jne
inc
inc
inc
outs
pop
and
ret
hlt
les
and
adc
ret
mov
add
stc
je
pop
movs
retf
mov
push
add
loop
sbb
mov
in
out
movs
mov
cmp
dec
je
lock
rol
lods
(bad)
mov
mov
and
or
iret
stos
jbe
das
mov
xchg
or
nop
push
pop
push
adc
test
sbb
pop
mov
int3
adc
or
out
adc
ret
mov
pusha
pop
xor
or
and
shl
fst
or
inc
pop
or
push
xchg
and
cld
iret
mov
and
dec
pop
sbb
movs
xchg
adc
mov
lahf
adc
mov
bound
ds
sbb
adc
or
fistp
or
dec
dec
mov
nop
repnz
(bad)
mov
push
pop
xor
adc
or
inc
jmp
and
(bad)
addr16
xor
in
js
jbe
sub
inc
or
pop
adc
mov
adc
sbb
(bad)
sbb
and
dec
cmc
add
or
fadd
repnz
nop
fist
loope
loopne
dec
mov
xor
(bad)
xor
jmp
push
aam
mov
vmresume
push
mov
sbb
fcomp
div
dec
dec
sbb
dec
and
xchg
add
push
inc
jne
sbb
add
into
sub
imul
mov
ins
xchg
inc
sub
sbb
add
mov
rcr
sub
inc
or
sub
mov
test
pop
pop
call
sub
and
pminsw
mov
xchg
shr
in
(bad)
or
mov
mov
mov
fwait
dec
or
and
adc
adc
push
fldenv
xchg
dec
and
ss
fld
daa
and
test
add
add
lea
bound
add
push
aas
inc
xor
or
pop
and
push
repnz
inc
cmp
test
test
ss
xor
nop
push
push
dec
jno
and
das
mov
rcl
rcr
lods
fucomp
pop
xchg
mov
aam
mov
adc
adc
cmp
adc
fst
cmp
push
and
sbb
fild
and
movs
sbb
(bad)
and
sub
lods
call
and
push
xchg
sub
int3
xchg
ror
scas
add
dec
push
add
pavgb
mov
adc
fmul
and
push
sbb
xor
iret
or
fwait
ret
push
in
fadd
push
jmp
cmp
xchg
int3
sub
xor
push
fs
addr16
push
fmul
sbb
jp
daa
pop
push
pop
add
popf
push
mov
push
or
and
loopne
call
or
jns
lahf
add
lahf
xor
pop
hlt
test
jmp
dec
xchg
test
mov
adc
js
int3
call
push
mov
adc
adc
sar
cwde
xchg
mov
and
push
iret
xchg
mov
loopne
mov
xor
inc
pop
adc
fdiv
sub
mov
and
mov
cld
aad
add
sub
mov
pusha
and
in
das
rol
inc
xchg
lds
inc
fist
imul
or
data16
dec
loop
or
cmp
pop
push
enter
and
inc
lods
xchg
xchg
adc
inc
mov
inc
cmp
fsubr
adc
in
shl
add
jg
jno
bound
inc
add
push
add
cmp
nop
push
pop
inc
mov
jb
pop
pop
pop
movs
arpl
into
sbb
push
push
cmps
push
cs
mov
das
cmp
lock
xor
ret
mov
and
xchg
sub
pusha
test
cs
add
je
out
xchg
inc
pop
cwde
mov
test
mov
mov
pusha
loopne
xor
xor
xor
call
sub
stos
jl
xor
mov
xor
and
and
(bad)
ins
sbb
dec
mov
outs
(bad)
adc
lar
or
jbe
dec
loope
sub
ret
mov
jmp
or
out
or
addr16
dec
push
shl
popa
rcr
movs
xchg
arpl
mov
js
test
jbe
ss
xlat
inc
ret
dec
jb
mov
add
push
jmp
pusha
xor
test
test
or
daa
add
dec
psubsw
lock
jno
test
mov
or
movs
loopne
push
or
loopne
sbb
popa
fsubr
or
push
sub
ins
je
or
mov
mov
inc
add
mov
movs
push
loope
pop
sub
push
mov
xor
pop
rol
mov
or
or
mov
adc
push
push
pop
add
xor
xchg
adc
aaa
ss
dec
sub
and
push
xchg
and
sahf
sbb
and
push
in
aam
and
sbb
push
outs
ret
sbb
(bad)
clc
cdq
inc
push
fcom
push
dec
cmp
jl
mov
sbb
lea
push
dec
dec
retf
sahf
xchg
inc
mov
push
lods
or
push
push
xchg
sbb
adc
inc
call
xchg
xchg
data16
push
jnp
dec
xchg
aas
xchg
sub
and
xor
sub
adc
rcr
push
mov
out
lock
or
push
pushf
xor
hlt
jle
popa
mov
or
mov
sbb
mov
mov
pop
arpl
ret
adc
and
mov
popa
pop
js
or
je
sub
mov
cs
push
mov
xor
retf
add
mov
or
mov
xchg
data16
and
loope
(bad)
in
ret
lea
ret
mov
push
or
sbb
inc
ret
retf
push
and
std
mov
mov
xchg
add
ror
xor
cld
and
rcr
arpl
cli
(bad)
xchg
pop
mov
inc
add
inc
inc
inc
add
push
mov
push
xchg
rol
shufps
loop
add
(bad)
div
nop
cmps
movs
xor
test
rcl
xor
sbb
jl
add
sub
rol
push
(bad)
and
xor
adc
ror
mov
inc
data16
pop
fs
fs
cmp
add
dec
shl
and
dec
add
xor
xor
popf
xor
xor
dec
mov
int3
je
jno
lahf
mov
dec
mov
dec
imul
adc
sbb
loopne
mov
inc
mov
add
xchg
scas
ret
mov
neg
and
mov
jmp
push
ret
int3
or
sub
int
or
rcr
and
mov
cmc
sbb
xchg
shl
or
add
xchg
rol
add
mov
push
cmp
mov
xor
lods
cmp
gs
stos
add
es
xor
shr
inc
sahf
dec
mov
push
cmps
inc
sahf
mov
cmp
and
imul
adc
mov
or
jle
pop
and
dec
rcr
outs
fstp
cmps
xchg
test
pushf
or
and
shl
mov
pop
sbb
dec
and
in
rcr
push
push
push
int3
(bad)
dec
je
loopne
push
out
jmp
inc
test
sub
or
sub
pop
xor
sbb
dec
pop
sar
dec
mov
ins
adc
pop
add
aaa
mov
gs
add
add
inc
lods
out
or
pop
add
cmp
pop
xor
cmp
dec
jmp
push
in
mov
loop
rcl
(bad)
cmp
call
mov
pop
pop
push
adc
shl
test
sub
push
xchg
pop
mov
mov
test
sub
add
test
sbb
push
dec
jle
xor
mov
lock
pop
movs
xchg
mov
test
repnz
lods
into
or
mov
or
push
and
shl
pushf
adc
int
sbb
add
mov
inc
mov
xchg
mov
aas
sar
xor
or
cdq
ret
rol
cs
out
movs
or
sbb
push
rol
sub
in
stos
ret
jno
or
add
mov
int
test
mov
test
or
jb
push
daa
in
shl
int3
test
cwde
cwde
mov
mov
fisub
mov
or
sub
and
dec
movs
std
add
imul
jmp
mov
cmps
fnstenv
je
mov
or
cmp
add
inc
cmps
jo
dec
push
and
cmp
jmp
add
cwde
sub
sub
inc
add
xchg
mov
add
rcl
js
add
ret
xor
test
mov
inc
pop
ins
push
in
push
enter
mov
test
(bad)
sub
sub
pusha
add
mov
xor
sbb
loop
sub
push
sbb
jnp
adc
or
add
in
xor
and
dec
mov
push
arpl
pop
dec
out
pop
add
ja
and
lea
xchg
add
bswap
and
push
and
rcr
scas
jo
jl
lea
enter
cmp
lods
or
sar
push
rol
sbb
add
in
xchg
mov
in
cmp
mov
jmp
add
dec
sub
jmp
and
in
fcom
xchg
das
inc
add
adc
xor
pop
mov
sahf
mov
mov
add
push
pop
rcl
or
shl
or
pusha
sahf
popa
test
jp
ins
xor
fs
daa
cmp
ja
ret
push
fstp
shl
and
(bad)
out
jmp
mov
push
mov
sub
scas
adc
lods
popf
mov
add
push
sbb
xchg
test
and
mov
lock
add
fidiv
sahf
je
sub
or
push
std
scas
ins
sbb
fild
cmp
sbb
xchg
push
scas
sub
ret
inc
pop
or
or
push
nop
mov
jmp
jae
pop
sub
cmp
je
mov
sub
or
push
add
and
test
mov
and
sub
nop
mov
mov
mov
and
and
and
inc
inc
ret
mov
aaa
hlt
es
lods
dec
idiv
aam
lds
imul
push
or
adc
sub
mov
add
adc
or
aaa
fidiv
sub
pop
sahf
xor
rol
js
add
test
sub
pop
push
lods
inc
movs
jno
arpl
loop
cwde
add
dec
aaa
inc
push
je
or
sbb
cmp
das
jne
ror
(bad)
pop
(bad)
adc
mov
xchg
adc
jo
ret
add
sbb
mov
clc
test
inc
xchg
adc
mov
movs
jo
sub
dec
xor
jmp
jae
push
dec
shl
clc
mov
loop
adc
add
xor
test
add
movs
jle
mov
sbb
push
adc
loope
jne
aam
loope
push
pop
nop
(bad)
push
sti
or
jmp
cmp
adc
pusha
loop
add
ja
movs
dec
xor
or
retf
push
or
mov
ret
dec
lods
mov
dec
test
stos
inc
(bad)
xchg
add
mov
jle
push
loope
push
pop
ret
ret
mov
pop
mov
jge
mov
ret
push
sub
xchg
sub
lahf
push
pusha
mov
fiadd
cmp
pop
jne
mov
inc
adc
push
movs
mov
retf
pop
xchg
push
stos
test
scas
push
jae
ins
pop
cmp
push
sbb
adc
jge
inc
mov
test
aad
les
or
fwait
push
inc
add
shl
jge
or
lock
inc
out
cwde
and
mov
ret
jmp
and
push
ins
xchg
enter
movs
mov
add
push
int3
enter
inc
dec
and
jmp
pushf
test
push
pop
repz
sub
add
sbb
add
mov
adc
adc
push
call
xchg
adc
or
and
pusha
inc
mov
dec
cmp
dec
xor
and
and
dec
or
das
aad
(bad)
dec
pop
mov
not
xchg
jbe
jb
adc
jl
cld
xor
repz
sbb
and
push
pop
cmp
test
fist
push
call
inc
sbb
pop
and
push
adc
dec
shl
inc
in
lahf
push
or
mov
pop
sub
jmp
or
rol
retf
cmps
xor
and
sar
mov
pushf
out
xor
dec
dec
push
sbb
xchg
push
mov
movs
and
and
hlt
mov
adc
jo
inc
pushf
push
and
sbb
jae
test
pushf
les
movs
or
inc
and
adc
stos
retf
add
add
idiv
call
xor
fild
push
adc
rol
mov
mov
jmp
adc
nop
xchg
sbb
push
add
xchg
mov
jg
pop
add
inc
sub
or
push
pusha
nop
sub
xchg
movs
ret
push
or
add
test
jnp
add
mov
lahf
ret
dec
adc
sub
sub
fisubr
stos
xor
add
test
out
add
mov
pop
adc
mov
jl
pop
sub
inc
test
or
ins
lods
push
and
shr
mov
pop
dec
lods
gs
pop
cmp
fld
pop
or
rcr
jae
mov
or
outs
fcomp
paddq
add
(bad)
xor
ror
push
das
mov
cmp
dec
cmp
jge
xchg
rol
mov
push
push
dec
jle
pop
jl
jecxz
add
mov
inc
and
in
push
stos
add
adc
dec
ret
mov
or
fldenv
or
push
aad
and
push
sub
sub
aas
test
push
adc
pop
shl
out
fadd
pop
xor
mov
and
test
jmp
dec
ins
hlt
(bad)
jmp
push
push
and
or
movs
fdiv
mov
xor
nop
xor
or
rol
retf
call
inc
retf
outs
call
sbb
bound
bound
retf
sbb
xchg
xor
mov
cmps
nop
push
cmp
mov
sub
loope
(bad)
mov
inc
shl
lahf
jl
mov
out
cmp
mov
loopne
sbb
sub
test
pop
loop
add
mov
xor
test
add
jo
cmps
jnp
loopne
dec
(bad)
push
cmp
pop
sbb
dec
dec
sbb
cs
lock
out
mov
inc
jg
ja
add
jbe
(bad)
push
adc
sub
pop
xor
(bad)
pop
daa
jmp
or
and
add
inc
arpl
mov
adc
repz
mov
pop
sbb
add
or
and
ins
sbb
sub
es
lds
sub
retf
les
pop
push
(bad)
loop
xor
sub
mov
rcr
mov
dec
push
dec
push
cmp
add
fidiv
shl
imul
icebp
ja
test
iret
mov
(bad)
mov
add
loopne
cmp
add
inc
xchg
lods
or
add
pop
ins
lahf
cdq
jl
mov
pop
imul
sbb
(bad)
(bad)
pop
sbb
xchg
add
add
push
shl
push
inc
add
cmp
adc
shl
xor
sub
or
adc
jp
push
mov
or
inc
mov
dec
loope
popa
cwde
loopne
mov
outs
sub
aas
push
ror
rdmsr
enter
retf
ins
gs
inc
ret
adc
(bad)
mov
popa
ds
outs
push
xor
adc
inc
add
movs
ds
mov
xor
and
mov
or
ins
test
add
imul
inc
cmp
add
inc
mov
xchg
lods
pop
and
xor
pop
mov
setl
and
push
xchg
adc
(bad)
or
dec
fidivr
add
test
mov
xchg
call
dec
xor
imul
mov
fcomp
nop
push
xchg
cmp
lock
scas
test
ds
mov
paddusb
xchg
pop
pushf
sbb
xchg
xor
sbb
xchg
iret
ss
call
mov
jl
ins
aam
or
jnp
xchg
jge
call
push
sub
inc
and
pop
in
test
adc
add
loopne
dec
out
jnp
es
mov
pop
jmp
fst
push
stc
push
or
daa
cmp
jl
cmp
(bad)
pop
pusha
ins
push
stc
and
inc
xor
cmp
add
aam
rol
adc
ins
nop
sahf
jbe
mov
xor
cmps
jns
jecxz
pop
cmp
fld
test
inc
mov
pop
fnstenv
cmp
test
ss
and
and
ret
not
pop
dec
pop
adc
or
cdq
push
fwait
jne
adc
and
jne
(bad)
mov
lods
adc
add
fiadd
push
jle
gs
sub
dec
jae
or
js
xchg
push
add
lock
or
dec
sub
clc
xchg
loop
xchg
bound
and
lahf
add
fild
xor
and
ins
push
cmps
icebp
popf
or
or
(bad)
add
jae
jne
jle
and
int
leave
cmpxchg
rol
ret
push
daa
shl
xor
mov
add
aad
mov
pop
and
sub
add
or
sub
(bad)
lds
(bad)
adc
ret
push
sahf
sub
cmps
jae
orps
or
cmp
and
sub
dec
sub
and
or
inc
pusha
inc
mov
fidiv
sbb
int3
mov
sbb
je
inc
cs
cmovbe
pop
mov
imul
or
add
sub
test
or
call
mov
repnz
das
out
sub
pop
ret
pop
ficom
cmp
lods
mov
call
enter
dec
and
and
or
ins
(bad)
je
cmp
jl
cmp
call
xchg
or
rcl
cmp
inc
nop
mov
dec
mov
mov
das
push
outs
adc
sahf
scas
xor
cwde
jae
and
mov
cmp
mov
jecxz
fmul
fcom
cmp
xor
push
ficomp
xor
add
add
or
fwait
sbb
add
call
fisubr
adc
arpl
dec
and
mov
mov
stos
push
xchg
xchg
add
xchg
mov
sub
mov
ret
cmp
inc
inc
push
bound
or
sbb
or
fs
add
cmps
mov
mov
dec
and
or
xchg
push
mov
push
out
adc
mov
loopne
sub
les
add
adc
jo
mov
xor
es
ins
jp
xor
dec
and
ret
fimul
or
push
inc
ret
or
bound
aam
shr
or
daa
ret
retf
push
je
and
push
add
sbb
fstp
sbb
or
jl
mov
add
cs
cmp
jne
inc
jmp
loopne
jg
mov
and
xor
outs
jle
sti
movs
xchg
daa
jne
sbb
cmps
sbb
mov
int3
push
jmp
cmp
xor
gs
fbld
push
dec
fisub
mov
mov
call
xor
fiadd
inc
jge
lea
icebp
outs
sub
dec
add
pop
jne
sub
ins
or
or
sbb
std
cmp
mov
mov
(bad)
(bad)
dec
or
mov
(bad)
jno
pop
cld
push
cld
xor
jmp
sbb
or
cmp
jmp
sub
push
int
ret
or
add
and
cmc
(bad)
jg
and
pop
cmp
mov
fnstenv
push
pop
or
popa
mov
mov
cdq
jne
ja
pop
sbb
fldcw
mov
in
(bad)
fstp
or
ret
cmps
push
fmul
mov
dec
adc
leave
mov
jbe
rol
jns
add
call
in
sub
popa
cmp
mov
sbb
push
loopne
mov
mov
add
popf
popf
sub
xor
dec
dec
ins
xor
pop
mov
fdiv
mov
mov
nop
add
pop
jnp
test
pop
sar
jmp
fisub
add
or
dec
add
inc
cld
inc
je
push
fwait
sub
push
or
inc
lock
or
jne
add
fwait
dec
add
sub
(bad)
mov
mov
sbb
mov
sti
int3
sub
mov
or
addr16
cmp
jno
pop
xor
pop
push
sbb
ins
mov
inc
cmp
popf
inc
sbb
add
popa
push
das
pop
or
test
cmp
pop
ficom
xchg
retf
xor
lahf
or
and
stc
adc
stos
jmp
clc
add
mov
daa
mov
sub
(bad)
and
add
cdq
cmp
int
inc
dec
pop
out
repz
and
cmp
int3
ret
xchg
xor
push
cmp
gs
add
push
pop
inc
or
out
dec
fldenv
jg
xor
lea
inc
inc
inc
sub
inc
rol
or
and
icebp
push
out
pop
aaa
sbb
cmp
xchg
mov
inc
rol
cmp
(bad)
mov
mov
lods
jl
shl
mov
cdq
push
mov
add
mov
pop
xchg
daa
jns
fsub
push
dec
xor
push
cmp
jns
popa
les
sbb
and
pusha
xor
lock
ret
xchg
(bad)
jmp
not
lea
repnz
int
imul
fcom
sbb
push
nop
mov
xor
mov
aaa
movs
mov
inc
adc
js
xchg
rcl
pushf
daa
inc
out
or
pop
les
jb
add
js
adc
fild
push
nop
mov
jne
xor
or
scas
pop
cli
sub
add
and
cmps
test
xchg
sub
add
test
loopne
(bad)
sbb
sub
int3
or
adc
inc
inc
jl
sbb
adc
cwde
cli
pop
fcomip
push
xor
mov
add
sbb
pusha
repnz
inc
stc
xor
popf
add
les
js
das
jg
xchg
sbb
jle
xchg
ins
inc
jnp
and
sbb
xchg
dec
sub
ins
bound
in
pushf
add
xlat
jno
shl
sbb
hlt
xchg
inc
mov
and
in
cli
ins
sub
cmp
xor
clc
cmp
or
mov
cmps
adc
push
and
ret
sbb
pop
push
call
inc
aam
aad
lods
and
or
and
sti
and
mov
sub
pop
es
add
cmp
call
fcomp
out
cs
icebp
mov
das
xchg
(bad)
stc
adc
jo
(bad)
call
xchg
dec
or
or
push
dec
adc
cmp
adc
or
or
jl
test
add
push
(bad)
xchg
cmc
inc
inc
fld
sbb
add
pusha
movs
or
loopne
push
xor
cmp
or
stos
jmp
cmp
push
loopne
ror
and
mov
sbb
ror
or
pop
add
adc
dec
inc
or
icebp
adc
xchg
adc
pop
aam
jo
add
dec
ja
add
mov
add
add
inc
sti
sbb
(bad)
je
std
and
mov
push
nop
ret
adc
and
fidivr
pop
mov
adc
push
xchg
cld
pusha
pop
dec
movs
rol
add
pop
das
dec
mov
push
out
dec
icebp
nop
enter
test
enter
lahf
mov
or
bound
adc
rcl
inc
push
std
adc
and
jne
inc
and
outs
jnp
mov
ss
push
jnp
pop
mov
pusha
and
pop
enter
jp
add
in
bound
retf
push
add
nop
faddp
es
inc
sub
leave
add
xchg
(bad)
fadd
scas
push
inc
das
stos
jo
es
or
or
push
cmp
and
and
addr16
pop
out
pop
xchg
inc
dec
ins
adc
mov
and
bound
adc
pop
adc
or
and
adc
ret
test
cmp
inc
pop
dec
test
sar
pop
inc
xchg
shl
nop
or
leave
jno
adc
sbb
sub
xchg
push
jnp
jp
mov
mov
int3
sbb
js
fbld
sbb
xchg
fld
add
adc
push
loope
mov
add
add
mov
dec
adc
push
push
repz
rol
cli
imul
cdq
pop
xchg
mov
push
aam
call
jns
push
mov
xor
cdq
call
arpl
ffreep
add
xor
(bad)
xor
movs
mov
popa
mov
push
gs
mov
stos
cld
jl
ret
sub
sub
in
mov
dec
jnp
xchg
inc
inc
dec
push
sbb
pop
xchg
push
lds
ja
lods
ins
adc
adc
cmp
fs
and
test
jmp
test
add
push
cmp
push
pop
icebp
adc
cmp
movs
(bad)
in
sbb
and
lods
shl
push
mov
bound
nop
sbb
jae
call
add
fadd
bound
lea
pop
aaa
imul
add
addr16
mov
adc
mov
inc
add
or
add
sub
adc
and
add
sub
dec
push
sti
mov
adc
shr
adc
in
movs
imul
cmp
and
loopne
xchg
aaa
fmul
mov
mov
xor
pop
test
pop
ret
and
xor
add
mov
sub
sar
adc
test
xchg
ret
mov
xchg
add
sbb
xchg
iret
lea
cmp
test
lods
sub
clc
and
test
or
stos
outs
rcr
add
mov
inc
ds
pop
shl
push
hlt
pushf
fidiv
adc
push
jge
int
or
sbb
inc
outs
add
jne
rcl
pop
retf
inc
jno
xchg
les
test
mov
or
cmps
cmp
lds
loope
scas
out
or
mov
push
xchg
fwait
retf
push
mov
inc
dec
cmp
dec
jge
gs
cmp
inc
outs
rcl
inc
cwde
jp
call
fs
enter
popa
aad
push
out
xor
cdq
push
lock
add
cmp
dec
fs
aaa
mov
inc
xchg
push
sub
add
mov
mov
fwait
add
(bad)
lods
sbb
adc
dec
mov
cmp
add
movs
and
(bad)
aaa
or
lock
test
mov
rol
clc
test
scas
aad
add
icebp
adc
mov
dec
or
push
les
sti
add
imul
jno
add
jmp
mov
enter
rcr
xor
add
jo
xor
gs
push
(bad)
in
and
push
inc
adc
movs
imul
aaa
push
sub
ror
fs
dec
sub
jne
sbb
sub
or
add
adc
inc
arpl
and
xor
or
add
rcl
cs
les
sbb
or
cmp
jmp
dec
inc
dec
adc
(bad)
rcl
test
mov
inc
add
ret
dec
loope
fadd
sbb
mov
loope
lds
push
add
pusha
and
push
cmps
push
push
adc
pop
push
repz
outs
(bad)
mov
push
mov
adc
mov
adc
js
push
ror
bound
push
dec
sbb
outs
bound
push
sub
inc
gs
adc
pop
inc
push
xor
lods
inc
inc
and
js
xor
xchg
fs
mov
adc
cmp
cmp
add
(bad)
cmps
rol
(bad)
out
ss
sub
push
popa
or
or
jb
mov
retf
(bad)
imul
aam
add
add
and
sbb
rcl
push
add
sub
lods
pop
xchg
mov
xchg
sbb
sub
add
xor
sub
pusha
inc
sub
mov
call
sub
push
cmovo
adc
sbb
push
movs
xchg
mov
and
mov
or
daa
mov
mov
pop
xchg
movs
test
push
mov
addr16
mov
fcom
xchg
ret
push
or
adc
mov
xor
out
sbb
adc
jg
scas
ror
rol
push
xchg
rcl
xchg
mov
jo
lds
lahf
scas
push
imul
fsubr
mov
xchg
clc
lods
add
imul
and
das
pop
or
nop
test
das
iret
xor
cmp
test
inc
mov
cmp
ss
ret
and
cmps
sub
xor
mov
mov
or
or
sbb
dec
sbb
mov
mov
cwde
mov
sub
push
aaa
shl
xchg
xor
mov
push
mov
mov
dec
das
ror
data16
or
push
add
lock
xor
cwde
xchg
add
fstp
jns
jo
sub
hlt
das
add
in
inc
lods
jl
movs
scas
(bad)
pop
adc
jl
loopne
adc
pushf
sbb
loopne
imul
jo
imul
pop
push
and
ret
stc
icebp
es
or
popf
add
test
or
push
pop
jmp
mov
aaa
inc
pusha
xchg
movs
loope
xchg
cmps
popf
dec
adc
(bad)
or
xor
mov
xchg
test
mov
and
inc
loopne
mov
repz
fs
and
(bad)
adc
jne
pop
adc
xor
sahf
and
inc
adc
sub
(bad)
cmp
jo
lea
sub
push
add
inc
loope
xchg
mov
and
inc
repnz
(bad)
mov
pushf
nop
xchg
cmps
add
push
scas
or
cmps
and
lea
add
cmps
inc
pop
lahf
test
icebp
lea
lock
add
ror
xor
call
mov
mov
loopne
lods
inc
outs
ret
mov
sbb
mov
sbb
sbb
and
xor
mov
aad
mov
adc
push
mov
ret
jg
sub
ret
cmp
shr
mov
in
test
mov
mov
and
add
loope
sub
mov
cld
add
sti
in
rcl
lea
add
and
and
(bad)
mov
push
mov
mov
mov
pushf
and
adc
neg
lods
aaa
push
add
xor
dec
lea
and
pop
mov
loope
and
bound
pop
sbb
and
xchg
shl
sbb
aaa
mov
push
ret
pop
shl
dec
add
sahf
adc
or
daa
retf
or
or
lock
ja
setnp
or
ret
or
pop
push
int3
js
inc
shl
jl
push
rol
mov
sbb
push
lea
add
mov
ja
xchg
sub
cmp
aad
push
hlt
call
push
sub
push
das
push
push
inc
cmp
out
xor
push
adc
dec
hlt
in
loop
mov
sub
jmp
xor
jo
adc
aas
jae
push
mov
inc
(bad)
out
pop
adc
and
and
(bad)
(bad)
rol
and
adc
mov
adc
mov
je
sub
xor
(bad)
outs
adc
repnz
xor
or
jmp
add
cmp
jle
xchg
dec
pop
popa
adc
lock
add
push
loopne
hlt
call
mov
sahf
and
inc
rcr
fisubr
adc
test
add
dec
ror
add
cmps
or
movs
or
mov
mov
cmp
push
fs
and
cmp
and
push
sub
cmp
iret
jmp
nop
sbb
push
cmps
call
xchg
out
out
add
push
mov
or
aas
mov
sbb
shr
or
add
test
or
sbb
sbb
pop
inc
adc
or
push
adc
inc
and
out
mov
add
scas
imul
mov
adc
push
je
adc
adc
test
dec
and
adc
dec
or
sub
mov
adc
fadd
movs
mov
std
mov
and
sbb
sbb
mov
gs
lea
xlat
or
add
cmp
push
cmps
cmp
pop
mov
pop
ror
movs
pusha
scas
movs
cmp
je
retf
dec
push
cmp
fmul
movs
adc
ins
sar
adc
shr
daa
jg
imul
dec
xchg
adc
sub
sti
test
cmps
test
push
dec
test
xchg
pop
sbb
jmp
jno
test
inc
jge
jbe
lods
lds
inc
add
and
gs
aad
retf
mov
add
loopne
mov
and
xchg
mov
test
mov
inc
xor
sub
push
sub
hlt
add
add
les
aam
jne
dec
rcl
je
push
addr16
pusha
xchg
popf
cmps
fnstsw
or
mov
sbb
push
lods
xchg
add
arpl
push
xchg
mov
cmp
sar
adc
add
jmp
dec
dec
jecxz
and
dec
ret
inc
fisttp
add
inc
in
fdivr
rcr
rol
(bad)
bound
add
cmp
sub
imul
nop
popf
xchg
push
fadd
push
fdivr
test
or
(bad)
sub
mov
jne
or
push
sub
mul
mov
or
loop
and
popa
xchg
mov
add
in
jo
add
pop
jnp
sbb
cmps
je
(bad)
leave
sbb
sbb
cmp
mov
and
mov
pop
aaa
mov
loope
aam
fnsave
fwait
int3
in
mov
mov
dec
push
mov
dec
cmp
pop
mov
mov
adc
mov
add
cs
or
push
xchg
loop
adc
mov
cs
mov
push
cmp
or
rol
pop
fbstp
mov
or
lock
adc
add
out
das
cwde
pop
and
shl
sub
or
add
fbld
dec
inc
cmp
or
push
or
aas
dec
add
and
dec
push
nop
test
into
dec
xchg
fnstcw
jne
xor
xor
sbb
or
popf
push
or
shl
loopne
add
inc
and
pop
adc
xchg
sub
and
add
push
les
sub
ins
lods
push
or
cmp
xchg
add
cmp
jl
sub
or
sub
xchg
jb
cdq
lods
in
xchg
rcr
push
inc
gs
cmc
or
and
pop
dec
repz
pushf
cmp
xchg
lds
push
or
or
adc
add
xchg
xchg
(bad)
xchg
mov
leave
push
sub
add
xor
sti
jne
inc
and
mov
dec
sub
inc
scas
ja
sub
mov
lods
and
ja
sahf
or
mov
ret
gs
lods
mov
jg
pusha
mov
and
call
push
mov
jecxz
mov
mov
fucomi
pop
push
(bad)
add
shl
in
mov
jge
movs
dec
jge
rcr
test
icebp
mov
cmps
inc
lods
test
icebp
and
dec
mov
jne
jno
inc
or
mov
add
xchg
mov
sbb
(bad)
imul
dec
nop
add
or
cdq
pop
pop
dec
cwde
push
add
xchg
jnp
cwde
loopne
jns
mov
jge
and
inc
xchg
or
pusha
jecxz
inc
sar
ror
cmp
mov
mov
and
mov
out
push
lods
and
scas
mov
movs
or
les
adc
push
xor
mov
sti
call
add
cmp
imul
jne
push
arpl
hlt
add
push
imul
fs
retf
pushf
ret
add
xor
loop
sub
cmp
movs
pop
add
add
nop
push
inc
sub
mov
gs
pushf
pusha
int3
shr
push
pop
adc
or
sub
mov
xor
daa
stc
lock
push
push
cmp
sub
push
inc
cli
and
cmp
outs
movs
or
xor
cli
xchg
jo
cld
(bad)
int3
jle
or
loop
cmp
aaa
fs
jae
das
aam
std
vpaddw
repz
inc
shl
hlt
jg
shl
test
pop
lods
loopne
imul
in
mov
inc
rcl
cmp
cmp
out
les
adc
inc
mov
mov
inc
sbb
add
push
mov
dec
cs
cmp
add
ror
xchg
test
jne
jmp
xor
lahf
enter
jne
mov
cmps
jbe
aas
jae
xchg
mov
fbstp
pop
pop
sbb
pop
sub
and
sar
sbb
adc
rcl
mov
retf
fs
pop
xor
lahf
popf
jmp
in
or
inc
sar
adc
jbe
jns
rol
nop
cli
pop
hlt
inc
push
ret
loope
dec
mov
xor
xchg
or
into
add
out
dec
adc
inc
xchg
inc
mov
adc
ins
xchg
add
jne
add
cmps
fcom
pop
cmp
add
push
push
(bad)
cmps
mov
and
jb
cmp
cmps
int3
and
jae
push
arpl
inc
or
inc
and
push
loop
dec
loope
pop
mov
sub
imul
movs
rcl
repnz
inc
inc
ret
jmp
sub
xor
adc
cmps
comiss
lar
js
push
push
push
cmps
es
pusha
in
or
ins
push
mov
lock
adc
adc
je
int
scas
or
pop
mov
mov
adc
popa
movs
ret
push
or
jecxz
add
ins
pop
test
and
and
dec
pusha
or
shl
aam
jne
fwait
mov
xor
or
icebp
inc
mov
es
sub
or
movs
mov
jb
and
loop
sti
and
dec
dec
mov
sbb
test
lahf
jmp
push
add
sub
add
or
mov
retf
mov
retf
aam
push
fld
outs
rcl
ins
inc
aam
jge
push
aaa
call
in
dec
js
adc
cmp
mov
ret
pop
mov
in
pop
xor
mov
out
push
push
xchg
inc
or
ret
jmp
sub
add
xchg
add
(bad)
mov
jnp
xchg
iret
mov
stos
js
dec
pop
fs
adc
dec
sub
jmp
pop
adc
rol
add
sbb
fmul
fst
dec
push
mov
cmps
add
sub
inc
add
aas
dec
xor
inc
push
sbb
push
xor
or
in
adc
lods
push
cmp
fist
push
jmp
inc
dec
lds
cdq
arpl
lds
or
loope
sub
inc
inc
popa
and
push
xchg
es
fadd
xchg
sub
retf
retf
push
leave
xchg
ret
jmp
jmp
add
adc
cmp
adc
add
ja
inc
and
aaa
dec
sub
(bad)
push
jp
or
and
adc
(bad)
sbb
fs
adc
out
test
sub
retf
add
inc
lods
movs
lods
cmp
add
out
xlat
call
not
stos
push
inc
into
or
or
mov
sbb
mov
push
nop
add
sub
shr
lds
mov
cmp
test
add
push
das
aas
add
jmp
test
pop
test
es
test
sbb
dec
adc
inc
mov
aad
pop
push
cmp
sbb
push
and
or
mov
jmp
dec
pop
and
addr16
xor
movs
cld
data16
cmp
or
jmp
or
jbe
cmp
sbb
nop
retf
lods
shr
xchg
sahf
adc
sti
adc
loop
dec
dec
or
mov
les
push
cmp
add
lods
test
mov
icebp
jmp
adc
push
add
cdq
das
sbb
inc
inc
push
cmp
or
movs
mov
jno
adc
scas
retf
inc
in
data16
sti
mov
push
add
ja
jbe
cmp
cmps
jmp
jecxz
mov
or
mov
mov
dec
push
xor
adc
and
stos
mov
adc
ret
gs
jmp
and
jo
idiv
sub
hlt
and
sbb
add
cmp
sub
push
into
add
xor
enter
mov
add
pusha
jno
loope
loopne
dec
movs
les
cmp
and
push
cwde
fstp
retf
cmp
lds
(bad)
nop
sub
jecxz
jb
aaa
mov
mov
mov
or
icebp
sbb
inc
enter
shl
adc
ss
add
sub
jb
loopne
jle
xor
icebp
mov
pop
dec
adc
xor
adc
adc
mov
ss
pop
rcr
jne
xchg
or
cld
add
aas
fdivr
xchg
sbb
sahf
inc
mov
pop
out
(bad)
outs
fsub
mov
xchg
call
sbb
xor
inc
sub
test
mov
arpl
out
cwde
jnp
dec
jl
or
call
stos
jmp
mov
xor
adc
push
xor
xchg
shl
mov
inc
inc
or
popf
jo
ret
push
mov
mov
sar
sub
adc
and
enter
dec
push
inc
and
lds
jge
sub
in
xchg
ret
cmp
sub
dec
adc
aaa
or
sub
in
jbe
mov
sub
sub
in
sbb
jl
aaa
aaa
adc
adc
retf
jmp
dec
mov
sbb
rol
sbb
pop
push
adc
pop
addr16
or
add
and
pop
adc
and
or
pop
mov
pusha
xor
aam
lea
jbe
dec
xor
xchg
sub
jb
je
xor
rcl
mov
xchg
jmp
push
cmp
fnstenv
adc
push
mov
mov
adc
jne
and
or
outs
mov
xchg
inc
and
mov
test
cmps
jle
add
jnp
jp
add
jg
push
mov
xchg
mov
xor
in
ror
call
pop
add
pop
push
ja
sub
push
(bad)
mov
jnp
cdq
idiv
xor
loop
xchg
popa
push
or
pusha
pop
adc
add
mov
and
sub
mov
adc
inc
(bad)
push
add
cmp
sahf
push
xchg
repnz
(bad)
rcr
push
das
jge
das
jnp
in
shl
xchg
lds
pop
sbb
mov
pop
jge
lds
xor
dec
ins
xchg
xor
xor
mul
dec
pop
dec
sub
sti
test
or
add
mov
sbb
mov
dec
add
or
pop
(bad)
pop
fcom
mov
mov
lock
shl
or
mov
pop
js
cmp
and
mov
das
sub
jmp
call
rol
pop
dec
adc
pop
mov
or
add
pop
stos
mov
add
or
xor
sbb
je
sti
loopne
push
repnz
sbb
mov
pusha
imul
xor
sub
mov
rcl
jecxz
adc
adc
(bad)
jno
mov
lea
adc
gs
lea
pop
or
je
out
test
adc
xchg
or
jbe
dec
and
xchg
popa
xor
test
retf
push
mov
push
repnz
in
mov
icebp
push
ins
mov
cwde
mov
mov
or
cmps
jmp
sbb
mov
sbb
in
(bad)
leave
push
fadd
ret
sbb
xchg
mov
and
into
add
add
pop
push
add
adc
leave
test
xchg
jmp
sbb
arpl
add
push
fs
add
cmp
fnstsw
scas
es
adc
xor
(bad)
popf
adc
add
loope
mov
push
je
cmps
or
mov
sqrtps
stc
pop
add
aad
les
mov
inc
dec
rol
call
inc
enter
add
xchg
jmp
cmp
jg
dec
adc
xor
and
mov
mov
call
fsub
push
adc
mov
mov
mov
aam
add
int3
adc
pop
inc
push
xor
jbe
or
leave
js
add
call
mov
xchg
sub
add
push
fs
fwait
dec
rcr
ret
jno
aad
movs
mov
cwde
cmp
adc
pop
push
sbb
adc
fisubr
pop
aam
iret
xchg
adc
int3
sbb
pop
into
jne
inc
xor
jle
(bad)
sar
hlt
fs
aas
leave
hlt
cs
sub
and
std
fsubp
xchg
test
cdq
data16
clc
dec
dec
and
inc
xor
shr
push
push
fstp
adc
and
or
mov
mov
inc
push
jnp
in
scas
or
push
aad
in
jge
mov
jge
(bad)
ins
shl
jg
mov
ja
add
mov
mov
in
outs
add
nop
jnp
rcr
inc
aaa
fs
push
mov
enter
push
or
je
(bad)
sbb
int3
movs
mov
and
dec
cmp
xor
add
rol
cmp
mov
ffreep
or
jno
push
sub
je
mov
xchg
adc
into
xor
xchg
addr16
sub
add
adc
xchg
dec
jl
sahf
pop
or
shr
push
push
dec
sub
test
xor
mov
(bad)
inc
xchg
jl
jmp
xchg
cmp
enter
jne
(bad)
fdivr
test
push
sub
mov
repnz
add
jmp
and
inc
xchg
sub
adc
pop
pop
adc
add
(bad)
inc
xchg
test
push
adc
in
adc
dec
inc
ror
xor
add
cmp
aad
pop
mov
les
jns
js
push
jno
inc
pop
mov
or
clc
pop
adc
sbb
mov
or
loop
lods
xchg
inc
or
xor
fwait
bound
pop
push
loopne
xor
rol
xor
add
push
dec
movs
rcl
dec
inc
adc
cmp
movs
dec
pop
not
mov
jae
mov
fidivr
inc
popa
mov
inc
mov
cmp
aad
add
pop
adc
out
lods
hlt
aaa
pop
pop
cmp
mov
and
mov
add
test
jns
push
cdq
(bad)
ror
or
adc
or
sbb
jae
ss
xchg
cmp
mov
es
mov
adc
or
add
adc
test
cwde
fsubr
jno
pop
or
pusha
xor
jge
or
ror
rcl
jl
add
adc
fsubr
rol
adc
pop
sub
nop
in
out
cmp
push
pop
inc
and
adc
mov
pusha
add
scas
xchg
push
sub
cmp
cmp
adc
xchg
sahf
cmp
add
add
or
movs
mov
push
les
test
inc
dec
inc
sbb
lock
xchg
mov
push
call
je
add
push
imul
iret
sbb
mov
sbb
pop
jmp
cwde
call
mov
lea
mov
call
push
and
ffreep
push
(bad)
enter
jl
mov
sub
push
pop
xchg
sub
xchg
jo
pop
fs
mov
hlt
sub
sbb
test
inc
push
push
jbe
mov
mov
inc
add
mov
jge
(bad)
push
or
clc
add
add
jno
xor
inc
sahf
jmp
pop
enter
outs
jne
sbb
adc
enter
add
or
or
dec
cmp
push
mov
add
imul
mov
and
cmp
shl
cmove
std
mov
push
dec
cmp
lods
sub
aam
movs
outs
test
mov
or
xlat
popf
pavgw
sub
sub
adc
jne
mov
jno
mov
int
dec
sub
sub
cmp
fdiv
add
out
and
pop
sbb
enter
add
iret
icebp
xor
call
jle
das
adc
out
dec
mov
mov
jmp
stos
and
pusha
jmp
rol
inc
int3
imul
pop
push
rcl
push
push
cmps
jge
mov
and
aad
xor
pop
pop
js
ss
in
cmp
pop
push
rcl
sub
inc
jno
pop
fbld
in
cmp
adc
or
or
mov
leave
(bad)
and
arpl
push
les
sbb
in
xor
add
pusha
pop
mov
adc
mov
push
mov
(bad)
shl
inc
arpl
push
push
sub
push
cmp
jb
scas
mov
adc
daa
push
shl
and
or
xor
cmps
rcr
cmp
imul
dec
and
adc
cmp
(bad)
rol
mov
and
inc
sbb
test
adc
jmp
nop
dec
sbb
sar
xchg
call
sbb
mov
in
retf
adc
mov
sub
or
xor
mov
jmp
cwde
sbb
fdiv
add
sub
fdivrp
daa
adc
call
and
sbb
dec
adc
xor
movlps
push
ret
jge
sub
and
or
fsub
outs
or
mov
mov
inc
dec
add
gs
push
adc
dec
movs
sbb
or
dec
sub
cmp
popa
push
pop
adc
fwait
dec
retf
xor
push
adc
(bad)
outs
fisttp
mov
rcl
pop
cdq
push
ja
jae
and
pop
jmp
in
inc
mov
inc
xchg
aam
adc
test
jne
jb
inc
and
xor
or
nop
sar
pop
rcr
mov
and
push
ror
xchg
mov
push
jl
sbb
dec
push
les
hlt
mov
cmps
in
test
es
aaa
sbb
fs
jne
test
or
pop
not
xchg
mov
enter
sub
xor
sub
xor
sbb
ret
imul
leave
ret
jnp
add
nop
ins
sub
sub
inc
dec
sti
rol
movs
push
push
pop
popa
cwde
mov
jmp
daa
add
push
test
mov
daa
mov
out
call
rcl
neg
sub
jno
jmp
add
cmp
mov
je
(bad)
call
call
ret
fist
and
dec
add
mov
mov
je
inc
dec
ftst
ss
fcomp
xchg
dec
imul
or
test
stos
mov
xchg
fidiv
lds
mov
cmp
nop
fadd
push
push
mov
xchg
add
add
mov
adc
mov
cs
ja
hlt
add
sbb
xor
ja
div
fst
outs
inc
sbb
pop
or
rcl
and
es
sub
dec
fist
pusha
mov
fwait
aam
ins
popa
xor
sbb
sbb
sbb
sbb
or
movs
or
shl
or
and
mov
dec
lods
(bad)
mov
fwait
int
push
push
push
rol
adc
pop
rol
xor
call
mov
add
les
in
idiv
jns
add
inc
mov
js
(bad)
dec
or
out
push
sbb
jbe
push
cmp
mov
test
mov
or
test
add
fdivp
jmp
fwait
adc
jns
pop
dec
or
jmp
adc
ret
movs
mov
mov
sti
add
rcl
leave
sub
es
call
inc
mov
dec
pusha
cwde
imul
or
xor
mov
call
push
into
pop
inc
imul
inc
sbb
sbb
add
adc
pusha
add
sahf
add
adc
bound
sbb
ret
into
ficom
push
shl
inc
push
fisubr
add
inc
inc
(bad)
jo
(bad)
fnsave
clc
(bad)
ss
xchg
aas
mov
mov
sub
xchg
lock
fidiv
push
xor
fadd
cmp
and
sub
adc
cmp
mov
pop
scas
fst
call
sbb
mov
sbb
jmp
add
xor
rol
push
fadd
push
sbb
pop
mov
imul
xor
or
js
test
retf
or
scas
ja
ficom
sub
test
daa
add
mov
scas
mov
cwde
and
and
inc
sub
jne
or
xchg
add
push
pop
sub
mov
jp
jmp
sar
pusha
and
jmp
jno
cmp
rol
(bad)
cmps
or
or
das
les
lods
jmp
push
mov
sub
inc
mov
inc
ins
adc
jmp
ss
adc
ror
or
sub
xchg
and
inc
lds
jno
add
retf
inc
sub
scas
push
push
mov
sbb
push
das
push
bound
inc
push
inc
shl
stos
xor
mov
sbb
add
adc
xor
jmp
and
mov
dec
pop
sbb
fs
cmp
popa
inc
or
mov
rcr
push
rcr
push
pop
aaa
mov
fsub
mov
xchg
sub
inc
push
icebp
inc
ret
add
sbb
mov
sti
test
sbb
inc
loopne
das
pop
lea
pop
add
mov
inc
add
or
push
enter
xchg
jb
adc
jg
push
and
and
adc
inc
xor
add
movs
ret
and
sbb
or
jnp
jb
fmul
or
add
xchg
outs
fiadd
out
scas
xchg
pop
aam
mov
sub
in
je
gs
add
sub
mov
push
inc
push
xlat
add
adc
sub
jp
dec
jns
pushf
fsubr
mov
add
inc
xchg
aad
fcomip
out
jmp
push
mov
div
jb
daa
out
je
cwde
pop
enter
cmps
retf
rcl
pusha
or
fbstp
mov
and
test
das
add
jl
clc
sub
xchg
pop
pop
or
jns
xor
and
sub
lods
rcl
jnp
adc
jg
cdq
in
pop
xlat
enter
adc
ins
call
adc
sbb
jmp
adc
or
outs
and
xchg
and
pop
adc
add
movs
add
aad
or
enter
xchg
push
push
pusha
dec
fldenv
push
xchg
inc
repnz
dec
cmp
add
add
xchg
movs
sub
imul
(bad)
pop
outs
sub
mov
push
and
mov
xor
and
xchg
into
sbb
sub
xchg
sbb
xchg
rol
pop
add
push
xchg
in
or
mov
push
xchg
mov
clc
mov
xchg
mov
pop
jae
sub
das
and
or
inc
movs
push
jge
inc
pop
enter
add
rol
and
ret
xor
aaa
call
or
mov
xchg
sbb
sub
mov
ret
cmp
adc
fld
scas
push
cwde
rcl
add
adc
scas
into
pushf
cmps
cwde
movs
jecxz
cwde
or
xchg
mov
in
sbb
inc
ficom
add
aam
fild
push
lds
outs
xchg
mov
nop
jp
dec
sbb
and
cmc
adc
test
jno
adc
xor
inc
pusha
fmul
and
inc
xor
inc
push
mov
pop
add
push
push
and
imul
adc
sbb
aam
add
push
scas
or
test
push
jo
dec
ficomp
pop
add
xor
sub
or
jg
add
or
mov
push
movs
inc
inc
cs
inc
es
add
add
push
movs
stos
aaa
add
dec
jl
movs
loope
lahf
rcr
push
adc
or
inc
push
xchg
cs
mov
icebp
push
push
cmp
inc
sar
cmp
inc
cs
cmp
popa
xchg
mov
pop
iret
das
and
(bad)
js
push
xchg
dec
cmp
inc
add
mov
aaa
icebp
xchg
fdivr
test
ficomp
push
adc
test
mov
fmul
mov
dec
sub
js
inc
js
dec
f2xm1
jge
js
test
ror
or
sub
or
sub
sbb
and
sar
adc
(bad)
pop
int
push
add
xlat
add
or
jo
aaa
mov
adc
or
mov
in
sbb
dec
and
push
inc
jl
or
sar
mov
and
or
mov
nop
ret
mov
jmp
lea
leave
js
shl
xchg
(bad)
push
popf
sahf
call
jnp
add
out
xchg
add
push
mov
xchg
or
push
xchg
mov
xor
fsubr
pop
in
aaa
lods
or
sub
aad
fld
inc
or
or
push
int
push
inc
sub
sub
mov
pusha
push
imul
xor
and
or
pop
js
lods
pop
inc
add
int
sub
pop
xchg
add
jle
popa
push
das
fwait
inc
stos
xor
iret
loopne
fcmovb
and
add
add
fwait
dec
(bad)
in
in
push
cmp
xchg
sub
cmp
mov
pop
popf
mov
or
or
or
inc
adc
sbb
or
loopne
dec
icebp
jae
in
rcr
cld
push
dec
pusha
mov
or
int3
ret
jae
pop
inc
add
add
ins
pop
push
fimul
push
or
mov
lahf
add
ds
adc
xor
add
or
sti
xchg
push
stos
dec
jno
push
inc
mov
xchg
add
pusha
jecxz
mov
fadd
push
(bad)
mov
and
lock
mov
sub
cmp
pop
sub
xor
xor
pop
in
imul
les
xchg
mov
dec
sti
push
adc
nop
mov
aad
add
push
popf
add
add
push
mov
add
sub
mov
mov
jne
pusha
push
enter
push
mov
push
inc
ds
sbb
aam
xor
and
aam
popf
sub
xor
cmp
add
mov
pop
push
inc
xchg
js
and
inc
je
sbb
or
in
sub
jo
adc
or
je
add
aam
mov
inc
adc
(bad)
adc
xor
mov
mov
dec
popa
mov
(bad)
dec
push
mov
push
sbb
or
pand
ins
leave
pop
js
repz
adc
gs
mov
call
jecxz
outs
add
dec
in
mov
sbb
inc
and
into
xchg
aam
in
les
mov
xchg
movs
xchg
and
nop
push
dec
jp
jmp
out
sub
es
and
mov
icebp
sub
dec
fmul
push
xchg
adc
cmps
push
sbb
aam
dec
push
inc
add
das
and
xchg
add
inc
cmp
jo
ret
adc
ret
sub
int3
push
cmps
xor
shl
(bad)
retf
and
hlt
das
inc
push
jb
repnz
pop
and
mov
lods
outs
imul
jecxz
lods
call
push
ret
(bad)
repnz
xchg
add
push
sbb
in
pushw
mov
or
fcom
aam
add
pop
pop
bound
sub
and
aam
mov
xchg
sub
inc
mov
sub
or
das
ret
ror
pop
jle
dec
mov
daa
cmp
mov
test
ss
push
adc
or
pop
cmps
jo
imul
icebp
push
sub
push
sbb
jno
or
xchg
loopne
pop
add
mov
jecxz
add
div
mov
mov
inc
and
lea
and
enter
data16
or
ror
popa
push
loope
xor
sbb
jge
call
jno
sub
add
or
inc
xchg
pop
lock
sbb
sub
inc
retf
call
add
adc
sub
push
xor
(bad)
das
xchg
outs
sar
out
mov
or
push
cs
mov
pop
and
movs
jo
add
xchg
fs
add
push
cmps
dec
add
sub
dec
add
sbb
les
pop
into
jecxz
inc
sub
and
ins
push
cdq
mov
dec
pop
mov
sub
sub
icebp
adc
dec
dec
jo
cmp
inc
push
test
add
add
dec
sar
sbb
xlat
add
outs
in
add
mov
mov
and
hlt
jne
add
(bad)
arpl
test
inc
dec
retf
leave
mov
add
dec
push
pop
push
ret
dec
add
inc
in
icebp
push
add
add
mov
ins
test
(bad)
sbb
push
mov
inc
cmp
fbstp
jl
fwait
aad
xchg
jmp
loope
and
sbb
(bad)
pop
enter
lea
movs
jmp
pushf
adc
xor
push
je
aam
hlt
adc
sbb
push
cmp
leave
push
loopne
lea
adc
imul
and
or
sbb
jecxz
inc
imul
ret
pushf
ss
sbb
or
lods
arpl
dec
es
or
fdiv
xlat
add
cmp
fucomip
and
push
mov
or
sbb
fistp
add
mov
add
retf
adc
dec
mov
sub
and
imul
xlat
and
fwait
jg
sbb
adc
loopne
sbb
int3
aad
ret
xor
inc
pop
or
and
adc
test
xor
xchg
add
or
test
lea
sub
in
es
xor
push
sbb
mov
ret
sub
(bad)
mov
push
imul
push
fs
cld
cwde
sub
movs
(bad)
jl
in
fisubr
or
jns
push
shl
je
(bad)
sbb
call
add
or
or
dec
adc
(bad)
shl
push
cli
xchg
lods
adc
movs
test
dec
retf
leave
in
push
inc
call
fwait
xor
popf
ret
mov
add
dec
jbe
add
cdq
add
or
iret
push
add
mov
xlat
sub
sub
xchg
movs
imul
es
aaa
sbb
and
mov
into
cmp
jmp
test
call
push
dec
push
(bad)
nop
ficom
jno
out
ret
adc
mov
push
xchg
(bad)
mov
mov
test
push
jne
xor
sbb
sar
jmp
mov
add
jae
and
call
or
or
inc
aas
test
je
cmps
test
ror
mov
in
ret
pop
in
xlat
add
and
mov
or
cwde
pop
sbb
sbb
test
movs
lods
mov
shr
dec
mov
sbb
mov
mov
sbb
cmp
pop
pushf
sub
push
dec
hlt
adc
aas
pop
xor
push
adc
sbb
adc
stos
lods
add
test
test
or
mov
sbb
mov
adc
js
aam
add
and
adc
lahf
les
pop
mov
in
les
pop
test
cmp
stos
xchg
mov
jne
scas
movs
mov
xchg
sti
mov
cmp
(bad)
inc
jl
pop
or
add
ret
je
mov
adc
movs
movs
lods
fwait
rol
push
ret
and
dec
into
adc
mov
mov
stos
test
inc
scas
jmp
jg
push
ret
push
pop
(bad)
outs
push
push
push
add
cmp
push
mov
mov
pop
add
retf
mov
mov
jecxz
add
push
das
mov
mov
sub
ret
mov
push
mov
cdq
and
ds
mov
xchg
adc
icebp
or
cmp
aam
rol
dec
adc
pop
rcl
push
mov
xchg
jb
fcomp
bound
test
fmul
xor
jns
sub
jno
or
push
mov
jge
add
and
push
jo
ds
jo
inc
mov
push
ror
xor
or
xor
popa
xor
mov
push
inc
or
in
aaa
sbb
xchg
dec
fdiv
js
cmovge
add
adc
(bad)
and
or
sub
aas
cmc
sbb
add
ja
sbb
mov
and
sbb
pop
pusha
pop
gs
in
dec
test
aas
push
imul
xor
and
aad
push
icebp
retf
adc
mov
mov
mov
add
pop
cmp
mov
dec
pop
mov
jne
lods
popf
cs
push
mov
pop
mov
mov
nop
mov
(bad)
je
mov
sub
pop
mov
mov
out
dec
xchg
retf
mov
stos
or
add
mov
and
xor
repnz
fimul
dec
int3
add
push
push
stc
dec
and
cmps
mov
scas
inc
imul
adc
dec
mov
ret
push
xor
inc
dec
push
pop
xchg
fdiv
xchg
mov
jnp
add
inc
cmp
cmp
shl
imul
mov
inc
cwde
jno
and
rcl
loop
gs
fisubr
mov
sbb
aad
or
je
and
xchg
xchg
mov
fadd
xor
mov
cmp
rcl
xchg
mov
or
cmovne
call
add
inc
popa
push
mov
or
pop
(bad)
dec
loop
push
test
sbb
(bad)
and
sbb
movs
das
xor
dec
fimul
inc
xor
shr
mov
mov
push
mov
into
sti
cld
fld
mov
xchg
scas
hlt
aam
and
(bad)
cmc
xchg
das
loope
pop
pop
loop
leave
xor
dec
mov
movs
sub
fdivp
jecxz
xchg
loopne
jno
lods
mov
mov
pop
dec
mov
xchg
fdiv
mov
fsubr
test
pop
fmul
call
dec
or
cdq
test
leave
adc
shl
adc
mov
cmps
push
push
ja
pop
repnz
jns
mov
jae
ins
enter
add
and
mov
or
test
adc
inc
pusha
les
and
or
or
ja
inc
cmc
dec
xchg
mov
push
retf
push
mov
mov
add
movs
scas
jno
pop
mov
sbb
mov
mov
add
add
jo
retf
popa
adc
das
add
add
sub
jno
add
in
jge
ja
mov
push
xchg
mov
mov
xchg
nop
xchg
mov
pop
xor
adc
jne
jo
fcmovbe
dec
push
inc
movnti
adc
jbe
outs
xchg
mov
xchg
inc
inc
or
je
adc
outs
adc
adc
sbb
aam
lods
and
ins
sbb
or
inc
add
sbb
pop
jmp
(bad)
cmps
xor
ja
rcl
and
in
jns
or
or
mov
movs
xchg
xchg
ins
push
push
mov
test
jns
adc
xor
push
or
mov
or
push
jo
stc
jmp
or
mov
cmp
or
push
js
pop
add
and
xor
into
repnz
clc
popf
xchg
pop
rol
jae
add
(bad)
fldcw
mov
xor
push
dec
lds
pop
jge
push
push
sbb
test
pop
fld
mov
add
push
call
adc
inc
jl
push
and
jbe
and
adc
cmp
or
add
popf
mov
push
mov
xchg
add
cmp
or
ins
push
mov
out
push
test
not
movs
in
dec
inc
imul
mov
mov
outs
jg
nop
and
test
js
test
xchg
lock
je
std
(bad)
jl
mov
cmp
test
bound
dec
cmp
dec
gs
adc
adc
or
sahf
shr
xlat
cmps
sbb
dec
xor
xor
xor
aad
repnz
mov
xchg
into
add
fisub
arpl
mov
rcl
mov
xor
pop
test
xchg
mov
sbb
clc
ds
jno
sbb
bound
xchg
test
div
xor
pop
dec
xchg
push
add
popa
pop
je
push
jne
(bad)
shl
jnp
push
jno
adc
loope
lods
test
sbb
sbb
mov
movs
push
ret
je
adc
jle
mov
dec
push
inc
jbe
lock
popf
ret
in
in
sub
test
mov
push
in
mov
lock
pop
icebp
sub
inc
jl
test
or
cmp
fnstenv
adc
ins
popa
int3
outs
fbld
into
mov
lods
jne
clc
push
cmp
jb
sub
inc
dec
dec
mov
adc
and
fcomp
mov
ins
or
sub
push
loopne
fcom
adc
add
je
dec
ja
pop
popa
xchg
jo
xor
dec
sub
sub
and
hlt
ret
push
pop
sub
pushf
push
int3
pop
and
or
scas
sub
mov
les
test
mov
pop
add
xchg
imul
or
stos
mov
mov
sub
push
add
add
jmp
or
dec
pop
pop
nop
outs
jmp
add
dec
mov
jmp
xchg
imul
pop
repnz
lock
add
sbb
adc
add
js
cmp
push
add
add
test
mov
or
loopne
lods
push
aam
jle
sub
loope
xor
(bad)
rcl
and
rcr
dec
or
out
imul
add
sahf
mov
aam
inc
and
mov
jmp
jl
push
or
xchg
mov
inc
cmps
outs
or
mov
sbb
sbb
dec
push
cs
imul
inc
test
ret
add
xchg
push
dec
add
pop
and
gs
mov
push
jg
mov
fbstp
or
mov
sub
and
cmp
pop
push
add
shl
push
inc
js
sub
nop
adc
js
pusha
jne
stos
add
addr16
out
xchg
sar
or
dec
rol
pop
xor
ret
lea
inc
or
add
adc
pop
jmp
int
push
mov
xor
test
fs
and
xchg
lods
ins
mov
push
mov
iret
fcmovb
movs
call
dec
idiv
jmp
add
push
cmp
imul
loop
jo
lahf
cmc
push
pop
and
mov
cs
pop
add
mov
xlat
mov
mov
or
(bad)
(bad)
(bad)
xlat
and
xchg
ds
sti
add
retf
mov
cmp
je
les
js
pusha
or
popa
aas
outs
jmp
push
pop
inc
and
setnp
lock
jne
aam
pop
cwde
mov
leave
and
xor
push
push
daa
or
sbb
adc
inc
mov
pop
adc
sbb
fcom
inc
lods
mov
call
mov
ror
mov
cdq
mov
xchg
push
push
sub
retf
ret
ins
push
mov
inc
ret
enter
test
outs
mov
pop
int
mov
loopne
test
aam
mov
push
(bad)
aaa
xchg
inc
push
mov
test
pop
cmps
dec
inc
out
inc
pop
ret
les
retf
inc
add
push
test
xor
pop
add
or
fld
inc
(bad)
addr16
aam
gs
xchg
inc
sub
dec
sub
push
add
mov
jno
jae
pop
push
ret
mov
in
push
bound
adc
or
cmp
sbb
dec
cld
sbb
(bad)
and
lock
scas
adc
or
in
adc
push
shr
xor
mov
mov
or
or
jne
xor
xor
and
cmp
int3
popa
inc
inc
sbb
mov
mov
loop
dec
(bad)
mov
loopne
adc
cld
ror
adc
cmps
xor
loopne
push
cli
inc
add
mov
pop
fs
sti
adc
mov
ins
and
adc
adc
pop
shl
xchg
push
pop
sbb
ins
push
cmps
jnp
sbb
sbb
inc
xchg
hlt
fisttp
sbb
cmp
push
sbb
sbb
fnstsw
dec
pushf
push
push
adc
xchg
in
outs
xlat
or
gs
push
push
test
sahf
popa
fcomp
inc
adc
jbe
std
xor
cmp
pushf
xchg
sar
adc
fcomp
jmp
push
jmp
lock
add
cmp
mov
adc
movs
test
lock
shl
jl
and
sbb
pop
ret
test
call
adc
or
dec
mov
stos
xor
daa
call
jecxz
xor
aas
or
xor
jno
call
push
jns
push
adc
movs
je
xor
adc
lods
pop
jmp
aas
jns
mov
inc
mov
mov
xchg
loope
pop
setg
stos
add
std
call
inc
add
sbb
inc
cli
addr16
loope
gs
sbb
scas
gs
push
jge
pop
leave
add
(bad)
adc
sub
loop
cdq
clc
xor
ret
cs
mov
adc
and
(bad)
and
mov
xor
add
ret
push
jl
cmps
dec
and
mov
rcl
adc
aam
or
adc
cmps
or
into
in
or
adc
cwde
ret
mov
mov
ins
hlt
adc
stos
jbe
or
test
dec
loope
pop
and
and
mov
mov
lods
sti
xchg
pop
adc
push
and
push
mov
add
inc
mov
sbb
into
dec
mov
scas
and
adc
xchg
jmp
aaa
cli
cmps
xchg
mov
mov
lds
jb
xchg
add
adc
jo
(bad)
daa
jne
push
mov
scas
aam
pop
or
sbb
pop
jmp
icebp
sub
fs
add
sti
or
es
retf
add
cmp
out
retf
ror
push
popa
and
or
je
pop
adc
mov
push
fdiv
add
rcl
aad
push
movs
xor
or
and
sub
add
das
and
leave
and
add
add
push
or
lea
test
jecxz
add
jno
sbb
js
dec
mov
or
pop
cmc
push
lods
push
ror
sbb
cmp
and
rol
xor
pop
push
popa
repz
mov
dec
mov
fld
inc
sub
in
int3
nop
pushf
ins
xchg
jne
push
lea
jo
and
xor
icebp
pop
test
sub
clc
sub
ret
ins
add
rcr
outs
ins
push
push
sub
and
inc
fst
adc
or
cmps
mov
sbb
sub
cmp
adc
dec
cmp
cmc
push
push
mov
jp
inc
mov
and
pop
and
cld
dec
popa
(bad)
mov
(bad)
jo
sbb
dec
push
mov
aas
adc
adc
mov
pop
add
adc
mov
outs
outs
dec
aas
ss
lock
xor
pop
jns
jmp
inc
or
inc
enter
(bad)
push
pop
and
dec
push
add
ret
popa
fs
in
xchg
adc
adc
pop
mov
inc
dec
rol
mov
cmp
mov
daa
test
adc
pop
xor
dec
cdq
cmp
push
mov
leave
cdq
(bad)
xor
cwde
jo
je
push
cmp
fwait
and
clc
out
and
(bad)
popa
jo
mov
cmp
inc
call
pop
sub
dec
aas
inc
loop
js
and
sbb
aam
mov
ins
add
pop
sbb
cmp
daa
arpl
loopne
test
mov
xchg
call
add
add
push
cmc
add
gs
int
mov
and
push
movs
aas
dec
ss
cmp
imul
mov
shl
ret
(bad)
or
in
add
add
sbb
shl
adc
adc
scas
push
and
sbb
push
pop
mov
imul
sbb
mov
(bad)
push
sbb
xchg
ret
loope
mov
push
ror
adc
loope
(bad)
test
movs
fstp
xchg
sbb
sahf
xor
xchg
(bad)
pop
or
jmp
push
fadd
ins
push
push
or
pop
das
lea
je
dec
jne
xor
mov
std
adc
jl
fcom
push
add
mov
add
or
xchg
add
repnz
and
pop
adc
sub
and
inc
sbb
mov
scas
movs
and
add
pop
mov
mov
sub
gs
xor
les
xchg
fisttp
movs
test
sahf
jmp
arpl
inc
(bad)
jle
fidiv
sbb
sub
loope
fcmovnbe
ret
ror
jae
sub
cld
scas
cmp
or
jns
cs
xor
cs
add
leave
loopne
or
pop
sub
enter
mov
(bad)
xlat
cmp
jo
cmp
or
push
xor
mov
sbb
and
or
add
fidivr
and
outs
sbb
out
nop
push
sub
pop
xchg
nop
pushf
(bad)
sub
scas
sub
or
xor
pop
xor
push
add
jmp
sbb
xor
adc
outs
mov
cwde
loopne
stos
je
jb
dec
adc
sbb
mov
add
ror
scas
push
cli
es
add
mov
mov
pop
repnz
adc
ret
mov
sub
dec
cmp
xor
cmps
movs
(bad)
aaa
jb
cmps
fiadd
cdq
cmp
daa
mov
or
(bad)
iret
shl
and
sub
dec
or
cmp
xor
dec
and
imul
sahf
icebp
mov
pushf
ror
jne
sbb
xchg
cmp
inc
push
lea
mov
mov
sub
gs
inc
sbb
stos
or
pop
adc
sbb
lea
stc
sbb
mov
add
add
in
inc
dec
inc
add
inc
push
jns
push
sub
xor
add
mov
adc
push
test
push
add
mov
je
ss
cmp
dec
ret
leave
imul
pop
xor
xchg
into
pop
pop
rcl
sub
stos
fcmovnb
mov
(bad)
sbb
mov
popf
mov
repnz
sub
leave
(bad)
fild
and
push
test
jge
idiv
or
mov
pop
jmp
push
dec
or
data16
pop
mov
mov
ds
jp
fs
fadd
ss
mov
push
aad
mov
imul
push
sub
sub
dec
hlt
enter
push
or
fcomp
lock
push
pop
call
pop
xor
dec
adc
loopne
sbb
and
cwde
cmps
sahf
jle
pusha
(bad)
out
rol
rcr
jp
aam
stos
or
mov
aam
add
cmp
jmp
mov
imul
leave
mov
or
push
ror
push
das
xor
jo
and
mov
rcl
sub
adc
dec
and
xchg
jmp
xor
dec
aam
pop
fwait
sti
inc
cdq
push
sbb
mov
test
xcrypt-cfb
cmps
in
pop
or
sub
sub
dec
or
or
push
push
mov
xor
fcom
enter
test
jecxz
jl
push
push
mov
inc
popa
loopne
mov
aad
or
dec
mov
cmp
push
xor
call
dec
je
mov
push
mov
push
jns
add
add
sub
enter
fs
movs
mov
pop
stos
push
test
and
fnstsw
in
and
xchg
in
add
cmp
loopne
fistp
lock
sub
ror
lock
ret
fidivr
xchg
(bad)
ret
ror
xchg
call
call
push
push
imul
clc
xor
sub
nop
out
push
sub
push
enter
push
ror
and
sahf
in
push
fist
call
rol
sbb
mov
leave
movs
outs
xchg
and
sub
dec
or
sub
jns
imul
jmp
mov
mov
(bad)
jmp
or
inc
shl
add
movzx
pop
adc
sub
test
push
inc
rcr
inc
lahf
pop
adc
add
iret
xchg
dec
push
xchg
rol
pop
sbb
es
rcl
or
nop
mov
(bad)
sbb
or
jl
(bad)
pop
adc
ret
fidivr
ins
sbb
add
adc
add
mov
inc
and
js
leave
pop
xchg
jl
push
inc
push
jno
mov
sbb
dec
mov
ss
jp
or
sahf
mov
mov
or
les
fs
div
cs
ins
jl
jbe
sbb
mov
push
or
push
pusha
add
jecxz
ss
mov
xor
push
dec
fadd
xchg
sub
nop
sub
in
xor
jo
and
into
cmp
fistp
add
and
je
ss
dec
fwait
enter
hlt
mov
popa
adc
daa
and
enter
cmp
push
jne
mov
push
ins
xor
in
test
xchg
(bad)
pop
nop
fisttp
test
je
mov
lahf
xor
lods
mov
or
sub
iret
(bad)
aam
pusha
clc
adc
or
bound
mov
sbb
push
sbb
loop
(bad)
es
push
test
inc
or
js
mov
dec
and
xor
pop
nop
adc
jne
fs
aaa
shr
es
jl
or
cmp
cli
and
ss
inc
in
int3
jmp
adc
jl
or
mov
xchg
enter
fs
push
les
gs
cmp
push
sub
not
shl
dec
scas
add
or
xor
xor
scas
xchg
add
mov
pop
and
sbb
retf
cmp
dec
push
mov
xor
sahf
(bad)
jmp
out
adc
mov
push
inc
push
sub
xor
mov
adc
mov
sub
cmp
jbe
xchg
rcl
inc
or
in
nop
push
(bad)
push
mov
mov
je
mov
push
mov
push
xor
or
test
sar
sbb
cmp
test
mov
mov
lea
adc
inc
gs
xchg
sub
test
fs
cs
dec
(bad)
sbb
xchg
jge
pop
add
xchg
sbb
std
push
inc
add
jle
push
test
jp
mov
out
sub
and
dec
iret
lods
imul
int3
or
lea
push
out
add
xchg
retf
xchg
cmc
mov
cmp
push
push
jo
sbb
icebp
mov
js
cmps
sbb
xor
mov
add
pop
imul
sbb
cmp
fnsave
xchg
daa
pop
or
xchg
enter
test
inc
adc
sub
and
arpl
je
movs
out
sbb
pop
or
xchg
sbb
jo
sbb
or
nop
add
or
js
mov
mov
add
call
sbb
fdivr
aaa
sbb
push
lock
in
jmp
dec
sub
and
das
mov
int3
scas
dec
out
push
data16
mov
xchg
and
sub
int3
je
in
inc
jne
cmc
les
jae
xchg
push
mov
pop
push
push
dec
cmp
xchg
div
inc
cmp
xor
idiv
in
aas
pop
popa
rcl
or
sbb
push
nop
pop
push
in
psubd
sub
shl
or
inc
xor
ror
sbb
mov
sbb
sub
int3
or
xor
ror
loopne
leave
or
jo
mov
pop
sbb
addr16
and
add
inc
rol
sbb
mov
mov
fild
mov
adc
jbe
sbb
mov
mov
sbb
loope
ret
pop
ror
mov
movs
mov
push
dec
jne
mov
in
xchg
hlt
cmp
or
mov
add
jmp
sbb
cmp
add
ret
inc
mov
ss
das
xchg
cmp
and
loope
sub
test
mov
mov
scas
sub
inc
movs
sbb
add
or
jmp
mov
sar
jno
inc
popa
push
push
ret
fs
punpckhwd
dec
mov
or
adc
adc
sub
enter
(bad)
xor
pop
imul
test
cld
adc
inc
sbb
int
add
and
jmp
jbe
push
jge
xchg
and
push
jmp
push
and
push
cmp
inc
adc
shr
pop
call
push
inc
sbb
rcl
push
pop
adc
add
jcxz
lahf
enter
sub
cmp
jno
(bad)
push
add
push
lock
mov
mul
or
push
jo
xor
or
push
imul
stos
dec
push
movzx
imul
es
pop
cmp
push
movs
out
push
adc
and
fdiv
icebp
cdq
add
or
jne
push
fimul
repz
jg
imul
int3
ret
dec
loop
add
add
sbb
mov
add
fwait
les
je
xchg
add
mov
add
ds
ror
sbb
or
cmp
shl
inc
js
ror
dec
xchg
or
ffree
or
adc
aam
push
push
push
push
ret
and
ds
pavgw
and
in
mov
xchg
inc
dec
or
add
inc
cmp
ffreep
push
cwde
pop
pusha
cmp
test
in
aas
sahf
fst
rcl
and
sbb
movs
adc
or
data16
inc
dec
ror
sub
sub
push
xor
fdiv
inc
ret
ror
or
jmp
unpcklps
sbb
mov
xor
in
sub
and
pop
add
aad
js
dec
mov
add
inc
iret
enter
aaa
xor
aas
pushf
inc
inc
gs
jmp
bound
push
call
rol
(bad)
fcomip
fidiv
and
push
inc
push
iret
popf
push
sti
test
mov
outs
sbb
cmps
leave
sbb
enter
lahf
or
inc
jno
loopne
out
sbb
mov
jno
in
xchg
js
mov
cld
pop
inc
xchg
outs
add
int3
das
mov
shl
add
fmul
imul
mov
push
xchg
outs
and
mov
inc
jle
dec
inc
jmp
mov
dec
pop
mov
jle
adc
mov
push
(bad)
stc
xor
xor
xor
loope
nop
or
das
add
fwait
jne
adc
rol
hlt
adc
pop
sub
call
cmp
jns
mov
push
pop
add
imul
inc
sub
jg
adc
es
push
mov
lods
and
inc
push
dec
daa
sub
xchg
push
clc
or
and
rcr
or
fcos
(bad)
fild
sub
pop
mov
loop
xchg
sti
mov
push
push
cmc
pop
or
or
ins
mov
dec
cmp
jp
inc
xchg
or
ror
xor
mov
test
lea
mov
jno
or
out
pop
cmps
inc
imul
xor
pop
nop
and
adc
pop
imul
arpl
or
push
retf
xor
cmps
sbb
sub
gs
sbb
jge
lock
adc
xchg
or
imul
(bad)
and
add
xor
ret
out
cdq
dec
test
push
pushf
stos
pushf
pop
jmp
out
dec
xor
push
inc
std
sbb
sub
xor
in
adc
and
jecxz
les
push
sbb
pop
push
outs
loope
daa
xchg
pop
popf
enter
inc
or
mov
dec
in
sbb
call
add
nop
daa
daa
mov
pusha
ins
cmc
pop
rol
mov
hlt
jnp
stc
sbb
cmps
popa
xchg
push
push
dec
mov
dec
sbb
dec
nop
dec
mov
xor
mov
push
js
jb
out
xor
jae
xor
push
loopne
and
mov
add
jb
jg
or
dec
(bad)
repz
ins
ja
xchg
jb
xchg
xor
sbb
rol
mov
jmp
or
cdq
lds
pop
inc
and
test
pop
add
sbb
inc
pop
push
jns
push
jns
popf
clc
into
cmp
xor
jae
lahf
dec
mov
daa
jo
mov
jb
sub
xchg
js
pop
pop
and
sbb
pusha
movs
daa
dec
push
add
sbb
in
dec
xor
xlat
or
(bad)
in
hlt
lods
jl
mov
pop
and
and
and
add
dec
sbb
adc
cmp
shr
or
jns
xchg
test
adc
movs
arpl
xor
sub
stos
sbb
mov
mov
push
ret
dec
sub
jno
or
xor
inc
inc
pusha
push
add
test
nop
xchg
xor
sbb
ja
rol
push
add
adc
cld
clc
add
and
xchg
ins
inc
add
xchg
cmp
mov
seta
fisub
shl
and
adc
pop
pusha
mov
sub
addr16
lods
pop
test
(bad)
mov
mov
lahf
test
adc
jmp
or
mov
js
mov
pop
jle
ss
cdq
je
les
out
(bad)
fild
cmps
mov
push
and
add
cmps
mov
movs
add
mov
adc
retf
push
stos
mov
int
adc
mov
jae
add
sbb
inc
(bad)
lock
jno
xor
shl
xchg
fbstp
push
add
mov
cmp
in
inc
mov
test
push
pop
mov
mov
les
rcl
nop
call
in
and
sbb
stos
add
pop
mov
adc
and
fs
or
mov
add
call
dec
xor
sbb
dec
xchg
cmp
mov
and
aam
iret
icebp
or
and
jmp
xor
inc
add
adc
push
mov
gs
add
sbb
xor
lods
add
and
dec
and
jne
and
dec
or
mov
test
std
xor
pusha
mov
mov
sbb
mov
shl
and
adc
push
js
pusha
fistp
es
test
sahf
dec
pop
pop
pop
ret
nop
data16
lahf
je
jne
and
in
jo
out
stos
pop
(bad)
pop
push
push
lods
jne
and
push
mov
sub
xor
cdq
push
mul
je
push
pusha
stos
mov
inc
mov
repz
imul
mov
inc
call
mov
sar
loop
cmp
sub
repz
mov
shl
and
cmp
xchg
push
and
cmps
sar
adc
cmp
mov
adc
mov
pop
fld
mov
les
stc
jecxz
sub
or
imul
repz
xor
adc
sbb
sar
mov
or
add
xor
fidiv
inc
js
and
in
cmp
(bad)
out
jle
and
test
jb
or
ja
fild
xor
(bad)
sbb
mov
les
mov
jne
add
lods
sub
xchg
imul
addr16
mov
ss
add
cmovno
pop
adc
inc
test
sub
imul
cmp
cmp
rcr
std
mov
push
push
test
mov
movs
push
push
sar
or
mov
add
(bad)
in
pop
and
les
fadd
and
test
jb
ret
stos
mov
xchg
cmp
pop
mov
retf
icebp
dec
cmp
mov
data16
in
aaa
add
and
or
daa
cmp
je
rol
cmp
or
ins
frstor
xchg
inc
fwait
movs
sub
ror
and
push
imul
xor
in
push
pop
addr16
push
dec
cmp
fs
repz
or
adc
sub
imul
ret
cmc
cs
add
inc
dec
sar
and
push
mov
call
sbb
les
pop
sbb
cmp
loopne
adc
add
adc
sbb
cwde
push
mov
nop
dec
inc
xor
pop
ja
add
pop
movs
or
jno
sar
imul
adc
add
call
aas
jmp
cdq
call
adc
pop
mov
xchg
sbb
mov
inc
adc
mov
xchg
pop
sbb
daa
adc
add
ins
add
sbb
push
ret
cmc
jb
xchg
add
pusha
inc
and
mov
pusha
inc
repz
outs
inc
cmp
sub
sbb
xor
jge
mov
imul
rcr
push
pop
jle
sahf
sbb
ds
mov
or
(bad)
adc
lds
mov
scas
stc
add
nop
sub
nop
out
out
dec
test
pop
movs
mov
or
mov
fbld
inc
fld
ins
loopne
and
fisub
stos
xchg
jl
(bad)
cwde
push
push
mov
push
inc
jmp
test
test
test
push
ret
retf
loopne
push
push
jnp
or
mov
popa
push
xor
inc
cli
retf
cmc
mov
arpl
mov
mov
nop
pop
push
jns
out
add
js
pop
cs
mov
add
mov
add
and
lods
or
or
cmc
lock
cmp
jl
push
mov
repnz
sbb
test
(bad)
fisub
cdq
fwait
imul
sbb
test
enter
pop
lods
jle
sub
xor
sahf
dec
jnp
jg
adc
mov
push
jge
adc
xchg
add
and
xchg
lock
jo
xor
les
and
js
or
or
mov
jg
into
inc
jmp
aaa
leave
shr
mov
ret
cli
cmp
in
lahf
push
xchg
cwde
mov
push
dec
rcl
pop
inc
mov
inc
xor
pop
adc
xor
dec
cmp
adc
(bad)
inc
rcl
in
pop
sub
cmp
pop
xchg
jmp
adc
bound
push
or
sbb
sti
jno
test
push
xor
add
or
clc
add
cmp
and
inc
into
inc
pop
fdiv
or
jp
adc
jb
stos
aaa
or
outs
and
es
dec
pop
push
and
inc
imul
adc
repz
xchg
mov
test
sub
retf
and
cwde
push
sub
loope
sub
add
pop
inc
cs
jge
sbb
adc
xor
leave
jecxz
in
xchg
sbb
push
or
loopne
frstor
sbb
arpl
xchg
add
or
push
mov
pop
dec
sub
mov
dec
ja
(bad)
out
add
test
ins
push
dec
push
leave
xor
add
stos
dec
adc
adc
cs
cmps
push
pop
sub
lock
mov
push
stc
or
or
sub
call
add
inc
imul
xchg
xchg
dec
pop
dec
sub
ret
loopne
enter
adc
lds
add
scas
js
push
inc
sbb
push
(bad)
fsub
sbb
mov
mov
sub
cmp
inc
(bad)
jmp
nop
inc
stos
jp
pop
cmp
and
shr
pop
xlat
data16
and
push
daa
xor
inc
and
push
xor
(bad)
pusha
xor
call
add
out
pop
pop
add
sbb
dec
push
adc
js
rol
add
(bad)
adc
or
adc
cmps
bound
rcl
push
and
out
mov
cmp
adc
scas
dec
adc
fistp
lahf
adc
(bad)
sub
or
ins
or
movs
xor
mov
sub
retf
dec
pop
shl
loope
jno
xor
popf
idiv
and
and
repz
push
and
xchg
jne
mov
dec
push
lea
cwde
ds
sub
les
or
adc
pop
jbe
xor
inc
and
test
ds
and
mov
es
jp
mov
jmp
call
les
call
pop
push
ret
and
jmp
lea
or
mov
mov
and
inc
lea
ss
or
and
jne
xor
mov
push
mov
lahf
sub
mov
test
movs
popa
test
sub
cmp
mov
loopne
(bad)
adc
(bad)
lock
loopne
mov
adc
lods
shl
inc
sub
sub
jge
add
or
jne
xchg
inc
movs
outs
rol
shr
add
dec
dec
ins
jg
rol
and
lods
loopne
or
or
arpl
and
in
pop
lock
sbb
jb
push
js
and
loope
xlat
add
mov
xlat
adc
and
push
xchg
dec
adc
sbb
dec
es
stos
or
ret
jmp
sub
aad
push
repnz
add
sub
cmc
(bad)
cmp
add
and
ss
inc
jmp
xchg
xor
pop
and
(bad)
sbb
adc
add
sbb
neg
mov
pushf
add
fnop
stos
inc
pop
sbb
movs
mov
aad
push
push
fild
dec
push
mov
dec
or
xor
into
or
test
retf
add
and
push
mov
mov
js
mov
mov
xchg
adc
out
push
movs
inc
rcl
inc
push
mov
shr
mov
(bad)
nop
xor
push
sub
and
sub
(bad)
ss
mov
ins
bound
pminsw
in
shl
(bad)
xor
fsub
das
xor
push
cli
sub
mov
pop
inc
fdiv
rcl
sbb
or
popa
mov
je
xor
into
adc
mov
test
add
retf
aas
fild
add
imul
jo
popa
imul
mov
loopne
ja
cs
sbb
push
lods
xchg
dec
scas
add
call
or
dec
gs
cmp
add
loopne
sub
movs
loope
dec
push
pop
add
test
inc
ja
sbb
iret
xchg
sub
mov
xchg
jae
inc
mov
xor
ss
(bad)
jge
fldcw
sbb
add
aas
jmp
push
fwait
jb
leave
xchg
sbb
jbe
xchg
enter
push
ds
sbb
push
call
icebp
adc
jno
lock
inc
sbb
xor
lea
adc
mov
add
test
fdiv
or
popa
adc
pop
(bad)
push
push
and
add
jg
cmps
jo
cmp
out
or
mov
cmc
or
mov
xor
jno
and
or
mov
mov
outs
mov
cmp
push
dec
inc
fbstp
bound
stos
rol
cmp
add
movs
aas
sbb
adc
cmc
jecxz
xor
push
aam
loope
push
dec
sub
ins
xchg
fsubr
push
adc
jno
or
xchg
sbb
push
mov
clc
push
fsubr
mov
es
mov
pop
je
jge
mov
pop
jne
and
or
jns
mov
add
push
inc
loope
jle
cmc
ins
ror
add
and
push
jg
push
ret
imul
scas
sbb
jno
ss
push
sub
test
push
not
imul
daa
mov
lea
test
jb
add
pop
(bad)
sub
cdq
jbe
ins
cs
or
dec
add
daa
add
(bad)
movs
ja
or
add
sub
in
add
sbb
adc
xchg
mov
imul
std
mov
cmp
stc
add
or
movs
inc
xor
in
jb
add
add
mov
pop
pop
out
or
inc
stc
adc
push
enter
enter
add
pop
movs
add
ror
adc
jno
ins
xor
(bad)
aas
test
pop
(bad)
mov
add
or
ret
add
stc
mov
rol
inc
retf
clc
mov
rcr
cmc
in
jo
push
sbb
into
dec
sbb
ins
aad
test
and
xor
nop
data16
mov
xchg
mov
sub
rol
mov
adc
ins
sbb
dec
jns
sbb
loope
push
push
or
mov
jmp
clc
rcl
or
adc
dec
pusha
pop
adc
mov
mov
fnstenv
sub
mov
dec
mov
mov
add
jne
push
or
enter
push
mov
call
mov
add
push
pop
mul
inc
loopne
mov
and
sub
sbb
test
xchg
fadd
push
push
adc
cli
loopne
retf
jno
push
sbb
call
dec
pop
pop
sbb
jno
sbb
(bad)
mov
ins
leave
fcomp
ds
dec
push
xor
adc
push
mov
(bad)
les
pop
nop
ret
jne
cld
jmp
pop
dec
add
xor
cmp
xchg
xor
enter
add
movs
imul
sbb
mov
shl
push
fcmovu
adc
stos
xchg
fst
and
or
adc
es
test
mov
dec
or
sub
mov
scas
mov
adc
fwait
inc
xchg
sub
mov
mov
mov
xor
or
add
mov
mov
cmp
dec
mov
je
das
jmp
push
pop
xor
das
sahf
push
jns
test
inc
enter
sbb
retf
inc
aam
sub
gs
test
jl
hlt
and
push
mov
mov
(bad)
in
pop
jb
dec
sub
push
(bad)
mov
lock
push
jle
sahf
xor
add
push
nop
sar
(bad)
sub
retf
adc
dec
cwde
pop
scas
dec
loope
cs
mov
mov
or
push
cs
push
push
xchg
adc
cdq
clc
ret
(bad)
loopne
mov
(bad)
enter
jno
and
mov
adc
ja
sar
cmp
adc
mov
jae
adc
adc
mov
imul
fiadd
and
dec
repnz
push
inc
add
xlat
cs
push
add
inc
in
dec
in
das
fld
add
popa
pusha
push
jns
add
inc
xchg
retf
fmul
mov
xlat
sahf
and
mov
push
loope
shl
not
and
pop
enter
or
iret
xor
xchg
add
xor
ror
sti
inc
push
adc
or
pop
push
outs
add
xchg
call
add
push
add
leave
inc
in
push
or
ins
and
or
sbb
sub
or
mov
add
cld
sbb
cmp
enter
fldcw
dec
cdq
leave
and
ret
mov
mov
mov
and
jp
mov
retf
sub
push
pop
cmp
mov
sub
(bad)
cmps
ror
mov
fs
(bad)
or
xor
cmps
cmp
sbb
sbb
je
jecxz
mov
xor
jmp
xchg
push
jl
clc
test
cmp
push
and
(bad)
pop
adc
retf
push
xchg
push
je
jl
loope
lods
dec
mov
outs
dec
sbb
or
xchg
inc
add
add
sbb
out
push
dec
pop
push
loope
sub
sub
xchg
inc
xchg
cmp
sbb
inc
lock
add
stos
sub
xchg
icebp
push
and
(bad)
jecxz
mov
sub
outs
inc
sub
push
sub
add
xor
dec
lock
sbb
mov
cli
push
push
call
add
xor
add
cli
cmp
cmp
xchg
dec
dec
or
push
mov
enter
enter
jecxz
out
lods
nop
lock
setl
adc
adc
jae
inc
sub
sbb
add
mov
add
jp
jo
mov
pushf
and
xchg
enter
fisub
adc
jo
add
push
add
xchg
jp
mov
nop
inc
adc
clc
in
inc
cwde
cmp
pop
jmp
jo
jecxz
test
or
fld
pop
clc
lock
and
frstor
fstp
add
test
push
sub
retf
mov
and
jmp
add
popf
mov
push
cmp
cld
adc
mov
push
movs
(bad)
xchg
test
ds
pushf
inc
pusha
(bad)
dec
jne
lods
sbb
adc
sar
xor
push
jmp
loop
leave
sbb
xlat
fld
dec
aam
inc
fs
retf
or
add
mov
pop
mov
ret
sbb
hlt
outs
data16
data16
scas
push
popf
jbe
or
fs
push
loopne
jae
add
inc
inc
out
mov
or
int
enter
mov
mov
or
loopne
call
add
fcom
xor
and
retf
add
movs
in
add
lock
mov
mov
in
lock
popf
mov
sub
and
in
dec
data16
pop
or
sub
das
popa
lods
popf
fwait
mov
scas
fadd
and
inc
mov
mov
xchg
popf
mov
cs
cwde
(bad)
aam
mov
add
push
int
cli
mov
aas
dec
hlt
adc
or
push
movs
inc
cmps
push
add
pop
bound
movs
leave
or
mov
pop
jo
mov
fidivr
xchg
xchg
in
fidivr
sbb
inc
sbb
sub
cmp
or
or
fadd
retf
add
xor
jne
cld
xchg
test
es
aam
shr
mov
pop
push
(bad)
jns
fsub
jb
mov
loopne
lock
sub
pusha
test
sbb
ret
or
cmp
scas
cmp
add
sbb
jmp
imul
mov
inc
push
mov
dec
fdivr
sahf
in
add
xchg
addr16
xchg
add
add
(bad)
rcl
cmp
add
cwde
adc
sbb
adc
pop
jb
add
dec
enter
mov
dec
mov
cmp
retf
enter
jne
in
mov
ins
nop
in
(bad)
inc
and
push
push
push
repz
das
mov
inc
outs
nop
fimul
inc
xchg
call
aam
add
xchg
and
in
dec
add
add
mov
and
dec
imul
jns
scas
nop
test
mov
mov
ror
loope
xchg
adc
inc
add
test
std
shl
jp
lahf
pop
call
inc
cmp
inc
jo
push
mov
loop
cld
out
std
mov
mov
push
cmp
jne
mov
in
adc
test
jne
lea
xor
cmps
mov
mov
add
jae
dec
dec
fistp
data16
fisttp
ds
leave
inc
push
int3
ret
xchg
add
pop
ja
jmp
sub
xor
dec
pusha
add
add
mov
xor
sbb
add
push
test
add
xchg
adc
jmp
push
add
pop
icebp
xor
retf
adc
call
fisub
les
push
add
or
inc
lock
test
mov
mov
xor
dec
ret
enter
cld
jb
or
fimul
leave
push
push
and
scas
adc
or
add
xchg
fst
aas
enter
jmp
mov
test
cdq
adc
push
mov
push
lock
shl
dec
call
lock
iret
xchg
jl
mov
push
add
enter
mov
mov
test
or
mov
mov
mov
and
push
jl
rol
jecxz
in
mov
mov
jmp
pop
shl
retf
icebp
inc
jle
shl
mov
mov
mov
add
xchg
or
or
pop
xor
or
mov
xor
pop
pop
ja
scas
or
loopne
push
dec
xor
add
adc
fsubr
fsubr
xchg
or
cmp
in
in
loopne
call
dec
or
lods
jge
cmps
inc
or
ret
popa
and
sbb
mov
mov
pop
fcmovnb
add
and
or
cmp
pushf
mov
fsub
fcomp
mov
mov
pop
mov
fiadd
mov
xor
sub
adc
add
xchg
and
inc
call
pop
int3
mov
mov
dec
or
loope
sub
in
loope
xchg
(bad)
loopne
add
add
cmc
mov
and
or
push
pop
add
pop
pop
jno
pop
jne
rcl
dec
lods
inc
bound
dec
aaa
xchg
push
arpl
das
js
xchg
pop
jb
in
in
or
mov
inc
fwait
xor
dec
dec
mov
int3
mov
or
in
adc
xchg
dec
ror
das
mov
shr
ret
mov
pop
jno
aam
adc
push
add
aam
loopne
leave
and
xchg
rcr
mov
sbb
mov
or
jmp
or
movs
xor
cmp
ret
adc
je
adc
ret
mov
mov
icebp
outs
and
xor
mov
xlat
jmp
nop
inc
inc
push
mov
adc
inc
clc
adc
and
mov
push
adc
adc
sbb
sbb
xor
xchg
or
retf
and
lds
cmc
and
mov
jo
clc
pop
sub
jne
movs
scas
sub
je
nop
dec
dec
and
cmp
dec
xchg
mov
mov
and
xor
add
scas
jno
fiadd
pop
adc
cdq
cmps
inc
pop
xchg
call
or
xor
dec
ret
pop
popa
das
and
xchg
dec
das
test
sub
inc
push
pop
jmp
cmp
inc
cmp
cmp
fucomi
inc
and
pop
inc
xchg
cdq
test
outs
xchg
test
mov
mov
add
stos
pop
mov
aas
shl
into
loope
lods
mov
push
push
and
inc
pop
adc
jae
popf
je
rcr
jo
pop
mov
pop
cld
in
test
sub
test
add
in
jge
inc
jbe
pop
xchg
dec
fisubr
sbb
pop
xor
inc
rcl
(bad)
xchg
adc
pop
pop
shl
adc
mov
push
shl
dec
xcrypt-cbc
cmps
aam
xchg
loopne
sbb
inc
stos
pop
push
and
jle
clc
int3
aad
psllw
ret
add
test
mov
cwde
jp
adc
add
jecxz
bound
aam
pop
into
xchg
cmc
cmp
inc
mov
retf
stos
push
dec
adc
mov
xlat
xor
(bad)
cmp
sbb
inc
inc
ins
pop
xor
ins
cmpps
dec
jge
cwde
or
adc
mov
ja
add
cmp
(bad)
lods
cmp
gs
xchg
scas
call
ins
dec
and
or
sbb
cli
inc
xchg
or
repnz
adc
neg
cmp
mov
leave
mov
push
daa
int
or
arpl
jns
xor
(bad)
stos
fwait
nop
out
jo
outs
mov
push
dec
ror
std
add
sub
cmp
ss
push
jo
sub
jg
mov
mov
add
mov
leave
xchg
add
mov
cmovl
sbb
jp
xlat
nop
pusha
adc
dec
sub
or
je
and
and
in
and
pop
test
or
bound
add
xchg
rol
xchg
sbb
push
adc
or
jmp
mov
and
cmp
sbb
retf
icebp
mov
mov
dec
xchg
pushf
xor
xor
aas
and
inc
jno
sub
sbb
or
xor
xchg
jnp
mov
imul
xor
mov
sbb
retf
in
mov
xchg
push
jge
mov
pop
outs
fsub
sub
mov
test
pusha
nop
sub
adc
fiadd
movs
mov
sub
xchg
mov
sbb
xchg
push
or
xor
pop
pop
(bad)
loopne
jbe
or
push
sub
inc
cmp
jne
orps
into
mov
xor
adc
bts
cmc
stos
or
imul
cmp
and
mov
adc
mov
jge
ja
jne
daa
mov
mov
jmp
out
or
sbb
lods
push
adc
dec
leave
jmp
aaa
sub
xor
scas
sub
xor
and
mov
rcr
mov
jns
mov
adc
in
jb
cmp
push
les
cmp
ror
mov
jmp
movs
pop
xor
push
bound
pop
ins
or
push
cmps
xchg
and
sub
ficom
psrlq
add
hlt
add
or
(bad)
xchg
dec
and
jg
adc
outs
int3
lock
inc
lea
int3
jbe
push
enter
xor
or
jp
loopne
addr16
les
rcr
or
out
adc
or
adc
sub
adc
and
sub
sub
cs
xor
fs
adc
sub
ror
in
xchg
mov
push
and
nop
pop
cmp
shr
cdq
sbb
(bad)
ja
sbb
push
push
cdq
(bad)
jge
imul
or
imul
xor
not
sub
push
sbb
sub
xchg
mov
not
lods
push
mov
adc
add
mov
push
enter
(bad)
cmp
push
nop
push
push
or
shr
and
movs
dec
enter
lock
adc
fs
fcmovnb
xchg
mov
rol
sbb
daa
inc
inc
mov
push
add
dec
xchg
sub
loopne
sub
repnz
or
lea
movs
bound
pop
jnp
(bad)
xor
sbb
(bad)
outs
xor
push
jno
adc
repz
and
hlt
dec
push
and
jae
and
inc
sbb
adc
push
movs
ds
xlat
cmp
mov
fnstcw
cmp
test
jne
or
mov
or
ja
add
sbb
out
test
movs
adc
sub
rol
mov
or
sub
popf
adc
clc
jne
fdivr
cs
push
inc
call
(bad)
xchg
lahf
dec
pop
mov
adc
es
push
mov
icebp
cdq
repnz
mov
test
dec
test
or
cmp
pop
xchg
xor
add
adc
dec
pop
sub
popa
or
iret
push
pop
cmp
jne
popf
push
sub
dec
adc
or
lock
inc
xor
sub
inc
add
xchg
dec
cmp
adc
inc
sub
inc
xor
cmp
cli
and
cs
sub
movs
mov
xchg
or
aas
sbb
shr
lods
sub
ins
or
fcomp
rcr
jle
xchg
inc
pop
leave
mov
shr
imul
pop
jg
pop
pop
and
out
cs
in
test
inc
mul
sub
mov
test
add
pop
iret
in
outs
sbb
lods
mov
inc
or
sar
ret
and
scas
xor
mov
loope
out
popa
jns
push
daa
or
sar
pushf
ins
ins
mov
int3
push
push
rcr
jae
inc
jae
sbb
aas
loope
mov
cld
add
js
push
dec
scas
or
or
ror
lock
enter
imul
adc
cld
jmp
leave
sub
pushf
xor
pushf
ja
repnz
adc
sbb
sbb
and
add
cmp
or
popa
adc
mov
mov
inc
dec
sub
xor
add
lock
fstp
popa
or
sub
xor
cmp
mov
popa
test
add
in
movs
nop
pop
push
nop
jp
or
adc
add
mov
and
les
xor
and
in
sti
popf
adc
jle
cmp
push
push
xor
or
ror
out
loopne
mov
shr
adc
add
xor
sbb
mov
fwait
(bad)
rol
(bad)
lahf
xor
dec
fistp
or
fild
push
shl
or
loopne
sbb
mov
call
aas
out
call
xor
push
inc
pop
lea
cdq
sbb
les
jnp
in
jns
adc
sbb
adc
or
scas
adc
sbb
inc
push
xor
add
mov
sub
inc
inc
scas
pusha
nop
sbb
stc
adc
dec
sbb
rcl
clc
inc
popa
pop
add
dec
xchg
push
adc
and
mov
or
push
nop
imul
aaa
adc
retf
loop
sub
imul
(bad)
and
xor
sbb
push
pusha
pushf
aad
push
push
adc
jnp
pop
inc
mov
shr
and
cmp
xor
push
inc
ins
bound
push
add
xor
ins
pop
in
add
enter
or
cld
jge
mov
adc
jecxz
or
mov
clc
push
inc
sub
adc
adc
pop
sti
inc
je
jo
fwait
inc
dec
stos
loope
jecxz
test
xor
inc
shl
sub
jns
sbb
sbb
call
sub
in
cmp
xchg
ret
dec
sub
sub
aam
bound
push
adc
loope
adc
das
sub
dec
arpl
stos
pusha
dec
(bad)
sub
xchg
je
sbb
adc
shl
pop
repnz
jg
xor
mov
mov
xchg
fwait
jg
adc
add
push
add
or
adc
sub
lea
inc
lock
xchg
aaa
outs
aad
es
enter
adc
add
and
inc
pop
adc
add
adc
mov
ins
movs
and
movs
push
dec
rcl
sub
loope
fdivr
or
call
add
cmps
add
xor
(bad)
adc
mov
push
xchg
or
data16
loop
mov
and
add
pop
(bad)
or
jb
or
add
aam
cmp
xor
in
mov
pop
add
pushf
int
aad
add
mov
(bad)
jle
pusha
ins
or
aaa
pop
movzx
push
lds
cdq
loope
ss
mov
mov
mov
xor
xchg
out
push
sbb
dec
mov
cmp
mov
rcl
cmc
stc
or
cld
jmp
dec
fimul
dec
jge
ds
mov
adc
sbb
movs
fisttp
cs
adc
in
add
out
inc
ins
add
lods
cmps
push
sub
mov
mov
je
movsx
sub
ins
adc
ds
jbe
jmp
je
xchg
mov
and
iret
mov
jbe
xchg
fisub
cmp
mov
test
cmp
inc
dec
add
nop
xor
(bad)
add
sub
mov
cmp
adc
sbb
add
call
add
test
or
pop
cmps
xor
loope
das
adc
add
ins
sub
dec
test
or
int3
mov
pop
jmp
cmps
xchg
or
inc
add
add
dec
sub
or
fisub
and
test
pop
adc
cdq
mov
mov
mov
push
jo
push
dec
or
cmc
adc
adc
xor
jae
mov
adc
fcom
adc
(bad)
xchg
push
retf
addr16
loope
test
pop
mov
ret
mov
dec
cmp
cdq
xchg
nop
popf
mov
add
dec
sub
or
enter
sbb
mov
inc
dec
in
aad
adc
rcr
push
xchg
scas
adc
push
call
inc
sbb
retf
inc
mov
or
push
add
adc
(bad)
arpl
push
gs
cmp
mov
aam
and
cwde
fcom
dec
or
or
bound
adc
retf
pop
sub
or
(bad)
or
xchg
ja
push
lds
clc
and
or
in
add
sbb
or
mov
bound
sahf
(bad)
pop
mov
int
aam
retf
adc
jp
inc
push
movs
adc
sub
sub
imul
mov
cmovs
test
xor
stos
cmp
push
je
lahf
xor
or
jne
push
mov
ret
xor
call
retf
mov
push
or
retf
inc
mov
iret
jp
adc
cmps
fild
sbb
pop
test
jmp
push
adc
push
and
shufps
or
sbb
sub
loopne
shl
push
push
imul
shl
pop
mov
push
push
iret
and
lds
arpl
or
and
pop
scas
or
rcl
jmp
dec
cmp
je
pop
movs
mov
scas
or
mov
and
cwde
mov
add
xor
add
inc
push
adc
inc
pusha
sbb
and
or
scas
fdiv
mov
iret
push
push
cmp
add
pop
aam
xchg
mov
sub
push
adc
push
cs
xchg
mov
and
ds
sbb
sub
inc
(bad)
mov
push
sbb
imul
std
adc
sahf
dec
mov
js
cmps
xor
je
cmc
rcl
push
mov
test
mov
jae
ficom
jmp
inc
xlat
movs
cmc
ret
push
imul
or
aad
mov
lds
std
cs
push
jmp
jmp
mov
cs
hlt
mov
adc
xchg
gs
xchg
mov
mov
mov
pop
dec
inc
add
and
gs
jecxz
add
xlat
rcr
or
sbb
xor
add
xchg
add
fwait
push
popa
es
sub
cmp
inc
dec
cs
dec
sbb
jg
imul
js
mov
mov
int
sub
call
add
arpl
push
ror
inc
lods
and
adc
xor
cmps
jl
sbb
test
or
lock
push
mov
dec
pop
sub
movs
aam
rcl
mov
mov
inc
add
inc
jo
sbb
adc
cmp
dec
cmp
sub
mov
inc
fsubr
sub
mov
add
adc
add
or
(bad)
out
adc
cmp
jbe
xlat
xor
adc
es
push
sbb
add
push
pusha
in
call
xor
push
ja
xchg
xor
inc
jecxz
xchg
or
add
call
shl
mov
dec
adc
rol
mov
dec
sti
xor
adc
mov
add
or
and
mov
or
push
add
test
int
xor
xlat
les
adc
loopne
xchg
dec
outs
nop
mov
mov
jecxz
pusha
lds
cdq
add
push
mov
xor
pusha
(bad)
jbe
in
and
fs
call
adc
(bad)
fdiv
xor
push
push
les
sbb
adc
loop
dec
fdivr
or
inc
push
cmps
sbb
test
dec
es
rcl
mov
mov
and
add
cdq
add
mov
sub
rcl
stos
mov
mov
das
inc
mov
push
shl
rol
(bad)
push
inc
ret
push
pop
frstor
pop
jge
jecxz
add
sub
shr
xor
aam
ins
xchg
jecxz
ds
sub
cmps
(bad)
ins
adc
inc
cmps
add
dec
addr16
adc
add
ror
iret
pop
sub
mov
mov
and
adc
and
sbb
enter
and
adc
inc
loopne
mov
add
js
add
xor
inc
test
loop
cmp
daa
or
cmp
cdq
sbb
mov
out
dec
mov
fs
imul
lods
add
pop
int
les
xchg
jg
jb
sar
ins
jne
adc
jb
add
sbb
push
inc
call
jo
test
enter
and
cmc
xlat
int
inc
lea
push
pop
pop
and
cmp
pop
add
rol
(bad)
push
js
pop
or
jae
or
pop
xchg
imul
pushf
jne
gs
lock
fsubr
add
rol
inc
or
push
dec
and
sub
adc
mov
inc
push
push
xor
push
ss
mov
adc
dec
popa
outs
sub
inc
shr
test
push
sbb
xor
(bad)
push
lahf
jae
push
iret
jl
inc
in
test
dec
aas
add
dec
in
push
sar
ror
or
nop
pop
pop
dec
out
push
push
loop
retf
inc
pusha
add
sub
cld
push
call
out
pop
dec
repz
(bad)
sbb
xchg
adc
mov
and
cmp
ror
in
or
sub
add
xchg
dec
lock
test
or
or
sub
loopne
cmp
pop
or
xchg
xor
mov
mov
mov
push
ror
adc
enter
aaa
add
cwde
clc
push
and
dec
inc
or
push
push
mov
jne
lods
lea
dec
sub
adc
imul
pushf
(bad)
mov
push
xchg
or
inc
or
cmp
sbb
xchg
jae
in
test
pop
adc
ins
loope
pop
inc
push
pop
daa
ret
fnsave
nop
xchg
jne
mov
pop
mov
sub
jae
sbb
out
xor
mov
mov
lock
adc
fiadd
or
mov
dec
push
xchg
dec
shl
push
sbb
dec
aaa
ret
sub
movs
add
int3
sbb
xchg
sbb
jge
(bad)
or
adc
jmp
and
popf
aaa
push
push
daa
nop
sbb
and
inc
lods
cwde
push
shl
in
push
add
icebp
pop
inc
popa
movs
lds
add
outs
aaa
xor
inc
adc
xor
mov
adc
and
adc
sbb
fild
add
das
es
xor
jnp
push
ja
dec
mov
jo
mov
or
or
add
aas
cmp
or
mov
shl
sub
ror
push
test
fld
add
int
xor
adc
pushf
cwde
pop
leave
add
mov
and
in
test
cmps
fwait
add
mov
mov
add
inc
push
pop
push
pop
sbb
dec
inc
or
dec
mov
addr16
cmp
sub
add
inc
add
(bad)
bound
jae
xor
adc
imul
or
cs
xor
and
and
fnstenv
enter
mov
inc
jno
sub
pop
dec
mov
xchg
pop
sub
sbb
adc
neg
push
in
jae
xchg
jp
push
add
sbb
mov
(bad)
xor
jge
mov
retf
bound
inc
pop
or
xchg
pop
lea
ret
loop
cmp
mov
das
xor
cmps
add
fisubr
mov
lock
lea
add
push
mov
jmp
add
adc
inc
cmp
outs
and
mov
sub
lea
sbb
aaa
rcl
das
sahf
dec
or
inc
cmp
or
push
test
ret
stos
cmp
mov
push
sbb
pop
cmp
test
inc
xchg
lock
lea
test
mov
sub
xor
add
sti
mov
add
sahf
pop
call
add
cmps
hlt
adc
mov
and
mov
test
loopne
xchg
adc
add
inc
mov
push
shl
push
fwait
and
mov
test
pop
les
int3
add
jnp
cmp
add
inc
mov
in
xchg
xchg
les
cmp
add
mov
push
pop
add
std
mov
stos
add
add
mov
aad
add
inc
push
mov
jmp
fs
sbb
pop
xchg
gs
or
or
cli
inc
add
push
push
ret
inc
jo
mov
movs
loop
imul
inc
sbb
imul
cmps
mov
mov
cmp
adc
rcl
pop
or
dec
mov
adc
mov
mov
pop
cmp
push
test
mov
mov
ds
dec
sti
and
sahf
outs
cmp
adc
push
sbb
lock
add
cmp
scas
sbb
and
mov
xchg
adc
dec
sbb
in
pop
mov
and
sbb
loope
add
xor
pop
inc
sub
push
fs
sub
fwait
loopne
fldcw
inc
imul
mov
adc
cmp
lods
xchg
gs
shl
pop
xchg
xor
aam
push
jno
or
movs
sbb
sbb
adc
cmp
mov
js
mov
and
jge
ds
sbb
mov
pop
inc
or
clc
and
push
and
xor
std
mov
shl
popf
leave
mov
adc
add
sbb
cmps
out
and
iret
sbb
(bad)
nop
xchg
inc
push
test
ds
adc
push
adc
ins
cmp
test
dec
inc
je
and
cmps
fidiv
dec
xchg
sbb
add
add
push
outs
clc
leave
pop
or
out
fisubr
cld
sahf
test
jb
dec
or
inc
loopne
sbb
and
push
mov
je
xor
aaa
sar
cwde
cmp
add
pop
mov
xor
push
cwde
fsubr
dec
xor
dec
je
jge
lea
cwde
mov
pop
lea
lea
xchg
test
sub
and
dec
fisttp
mov
stc
push
pop
movs
sub
int
pushf
add
stos
imul
mov
pop
push
in
mov
retf
jge
mov
test
inc
scas
rol
dec
and
or
xchg
test
sbb
pop
add
hlt
add
scas
sub
mov
and
inc
inc
shl
mov
jmp
pop
pushf
fs
cvtpi2ps
aam
pop
gs
inc
(bad)
or
nop
sbb
lods
add
inc
mov
push
out
mov
lds
adc
or
dec
or
sbb
cmp
ja
jo
adc
push
or
push
dec
retf
pop
enter
(bad)
mov
ja
inc
stc
push
enter
popa
or
mov
inc
xchg
push
pop
jmp
cmpxchg
lea
and
shl
das
je
cdq
mov
mov
xchg
and
pop
and
dec
dec
lock
out
adc
adc
imul
sub
push
dec
and
fimul
pop
popf
push
add
push
sub
push
mov
mov
and
push
test
lds
sbb
pop
add
mov
sub
ret
sbb
inc
fimul
mov
test
add
clc
inc
mov
jne
mov
jae
jne
in
or
je
xchg
and
cs
cmp
test
mov
jp
jl
ins
dec
movs
outs
sub
je
push
adc
fwait
jge
jmp
and
lock
nop
loope
adc
sub
cs
popa
dec
stos
xchg
aaa
cld
inc
adc
and
movs
aaa
cmp
rcl
inc
add
inc
cwde
mov
xchg
aas
push
or
shl
leave
jmp
pop
inc
push
add
sub
pop
test
aam
jp
cmp
push
sub
jg
sti
js
xor
sbb
and
(bad)
enter
adc
daa
or
mov
inc
jno
mov
and
lahf
sub
xor
jl
mov
aaa
shl
loop
push
mov
jo
mov
retf
sbb
xchg
jbe
fcom
imul
and
fldcw
push
dec
pop
push
sar
hlt
cwde
or
jle
daa
add
or
adc
push
jecxz
dec
sbb
jmp
lods
or
scas
cmp
jo
inc
xlat
dec
lods
pusha
and
mov
mov
xor
cs
pop
pop
inc
pop
cdq
mov
jmp
add
or
and
addr16
rol
sub
jns
add
jg
sbb
xchg
sbb
push
test
outs
sbb
ret
push
arpl
jae
rcl
dec
pop
mov
fist
jnp
and
fcmovbe
or
ret
add
add
icebp
pop
daa
aad
dec
add
xor
pop
xor
cmp
inc
or
sti
ret
adc
or
cmp
or
jno
xchg
and
popa
push
xchg
ins
outs
dec
jne
xchg
jmp
iret
jecxz
nop
out
push
ror
pop
push
xor
(bad)
fst
fdiv
adc
dec
or
add
cmp
cwde
and
inc
sbb
push
rcr
or
xor
cmp
inc
das
movs
rol
(bad)
in
xor
and
ss
xchg
push
movs
and
and
xor
call
jb
xor
or
add
cmp
aaa
push
cdq
rol
lea
cmp
dec
inc
mov
xchg
add
adc
mov
popf
inc
mov
add
dec
or
mov
arpl
imul
cmp
inc
adc
outs
xchg
leave
rcr
add
mov
mov
inc
dec
inc
xchg
sbb
lods
push
inc
add
cwde
cmp
dec
push
pop
int3
in
dec
out
dec
dec
mov
dec
or
push
rcr
and
cmp
test
adc
pop
mov
sbb
or
sub
or
xchg
das
add
xlat
mov
sbb
jnp
or
inc
out
push
test
jl
pop
dec
and
mov
pop
sahf
push
sbb
push
imul
sub
or
push
adc
outs
xchg
and
sbb
test
bound
retf
pop
ss
or
cmp
test
sbb
or
push
pop
addr16
mov
mov
mov
jle
cdq
jl
push
push
mov
dec
enter
and
pusha
jbe
add
dec
jo
or
and
dec
inc
and
cmp
push
or
in
dec
add
cmp
stos
lea
push
sar
jbe
cmp
jge
mov
or
ins
fidivr
adc
push
push
xchg
push
push
mov
fs
es
add
inc
sub
inc
push
and
push
fnstcw
mov
jbe
dec
adc
add
dec
xor
mov
ss
add
sbb
or
jl
shl
mov
pop
xchg
inc
add
pop
inc
in
in
and
and
push
xchg
mov
dec
cs
movzx
push
push
adc
test
pop
dec
jg
sub
(bad)
ja
push
cs
mov
and
add
push
dec
dec
shr
dec
sub
loopne
mov
and
and
inc
inc
inc
and
and
fst
xchg
je
lea
call
fwait
adc
or
jge
and
pop
pop
inc
aaa
and
leave
les
inc
cld
imul
xor
jle
adc
jae
imul
adc
push
push
(bad)
xlat
or
sbb
push
push
popa
pop
cmp
sbb
arpl
lock
nop
mov
sub
xor
rcl
mov
ins
daa
jp
fcom
mov
xchg
pop
xchg
mov
xchg
mov
dec
and
call
dec
lods
fisttp
and
mov
popf
mov
pop
sub
or
je
loopne
scas
adc
xor
in
js
jbe
and
imul
scas
cmp
ins
mov
sbb
push
xchg
inc
fs
ins
loopne
rcr
imul
push
shl
push
fcom
or
xor
xor
jb
imul
ret
mov
(bad)
add
sbb
cmp
jo
cmps
mov
mov
in
test
ret
cmp
popa
ja
mov
ins
ret
sbb
push
push
mov
gs
dec
add
mov
jb
xor
pop
int3
test
push
inc
sub
adc
bound
movs
add
xchg
xchg
or
sbb
xchg
fnsave
and
js
push
adc
mov
mov
inc
repz
ret
dec
mov
jns
neg
movs
jg
add
push
xor
xchg
mov
xchg
inc
sbb
inc
sbb
lahf
sar
dec
inc
outs
sub
and
test
(bad)
mov
push
pop
add
push
(bad)
gs
adc
push
sbb
cmp
xor
sbb
or
int
hlt
js
inc
push
ins
adc
je
inc
int
push
ret
cmp
jmp
xchg
push
push
sbb
add
mov
push
mov
movs
jnp
fwait
cmp
sbb
add
jae
jmp
jge
retf
imul
(bad)
ins
popa
mov
adc
and
add
push
pop
arpl
mul
ror
(bad)
mov
mov
jo
inc
sub
and
mov
ja
setp
adc
dec
mov
fild
xor
fiadd
mov
sar
sbb
lds
push
sti
add
sub
pusha
int3
mov
loopne
daa
add
dec
push
mov
xor
and
xor
dec
cmp
test
rcr
stos
ins
imul
sbb
jg
cmp
push
or
dec
dec
push
push
add
inc
pop
shr
sbb
sub
in
push
xchg
xchg
mov
inc
pop
xor
hlt
cmp
nop
sbb
xchg
dec
dec
cmp
cmp
aas
add
adc
imul
test
mov
mov
xchg
add
lods
fisubr
bound
inc
bound
or
mov
icebp
aad
xchg
push
push
fisttp
and
add
push
lods
cwde
in
and
js
push
pusha
or
or
pop
sahf
cmovge
sbb
adc
out
mov
jnp
add
cs
xor
push
inc
mov
ror
loopne
imul
push
push
xor
push
lods
stos
out
push
and
mov
imul
mov
lea
mov
jne
lea
arpl
jo
ja
lods
dec
(bad)
xchg
sub
cmp
adc
lea
xor
and
(bad)
ins
inc
or
push
adc
jno
lea
sbb
cmps
push
jle
cmp
push
sub
xchg
sub
adc
sub
std
or
mov
scas
mov
fst
inc
and
ja
pop
add
sbb
leave
ret
fdivr
ins
cld
sbb
int
je
lea
cmp
adc
fmul
imul
jae
cmp
jnp
adc
mov
sbb
aam
push
loopne
xor
push
je
pop
xor
sbb
dec
pop
mov
mov
dec
add
mov
inc
or
xor
fwait
enter
mov
or
int
sbb
fnstcw
jmp
dec
add
iret
xor
xor
popf
ss
adc
mov
mov
sbb
dec
xor
cmp
sbb
out
cmp
sub
dec
or
push
enter
leave
addr16
and
add
or
adc
mov
dec
ror
std
nop
mov
push
or
sub
mov
and
adc
das
ins
or
lea
pcmpeqw
lods
in
xchg
sub
sbb
or
sbb
outs
xchg
mov
xor
pop
fld
jae
xchg
mov
je
test
imul
retf
sahf
and
cs
sub
cmps
inc
sub
retf
rcl
test
stc
xchg
jo
arpl
and
xchg
xor
das
jns
cmp
push
rcl
cmps
or
add
jge
mov
inc
or
add
popa
and
and
xor
adc
adc
in
jge
jecxz
and
push
mov
or
jbe
and
add
or
jne
lock
loope
mov
xchg
js
daa
jp
mov
and
or
push
pushf
movs
popa
aad
or
and
adc
sbb
pusha
mov
sbb
push
imul
adc
je
(bad)
mov
adc
sub
add
mov
aaa
adc
mov
and
add
jae
jo
mov
mov
inc
add
lds
loopne
adc
adc
fnsave
ds
dec
push
mov
fild
pushf
rcl
fnstenv
ins
in
push
add
push
sub
sbb
popf
sbb
and
and
(bad)
in
dec
inc
pop
cmp
cmp
(bad)
call
aas
add
in
jnp
clc
je
sbb
inc
fmul
xor
mov
xchg
mov
mov
and
push
scas
mov
jb
push
push
xor
pusha
and
outs
dec
lods
(bad)
adc
and
fidivr
cmp
(bad)
mov
loopne
cwde
lock
sbb
xor
icebp
in
mov
add
pop
pop
in
adc
xchg
sub
dec
fsub
lock
lea
mov
mov
xchg
ins
pop
dec
mov
popa
test
xor
cmp
mul
and
and
xchg
fdivr
sub
mov
push
xchg
add
add
and
push
mov
or
jmp
in
inc
or
retf
and
call
jbe
icebp
and
xchg
push
jp
mov
cmp
sbb
nop
mov
add
xchg
mov
inc
loop
cs
fsub
sub
std
add
mov
(bad)
shl
adc
mov
jp
cmc
add
mov
lds
or
popa
mov
sahf
cs
pop
cmp
pop
(bad)
nop
repz
call
mov
xchg
push
cmps
movs
adc
xlat
push
push
jmp
fist
dec
dec
int
mov
adc
jnp
lds
push
push
bound
cmp
and
outs
retf
retf
mov
pop
sbb
adc
loopne
xchg
mov
push
rcl
pop
pop
pop
cmps
cmp
and
xor
pop
test
lods
retf
in
xor
js
test
int3
pop
retf
psrlq
sub
xchg
jb
and
shl
mov
push
add
cwde
cmps
into
adc
push
fwait
shl
repnz
mov
add
jns
popa
stos
call
shl
imul
pop
push
push
push
or
push
fadd
add
lea
add
fwait
inc
rcl
mov
add
cmp
movs
mov
ss
lds
aaa
or
test
ret
dec
icebp
bound
fld
jo
sub
sub
xchg
aad
jns
mov
out
pop
mov
and
mov
xchg
es
dec
lea
call
pop
sub
add
add
sbb
push
xchg
dec
and
xchg
pop
imul
outs
push
dec
icebp
or
rol
sub
pop
inc
mov
movs
add
xor
push
cdq
dec
mov
inc
cdq
rcr
mov
dec
sub
add
add
mov
push
fcomp
out
dec
shl
lods
xlat
push
xchg
in
mov
sbb
ror
push
push
xchg
push
adc
inc
inc
cmps
add
and
icebp
inc
push
jbe
mov
loop
jmp
inc
nop
or
xor
and
call
sbb
je
cwde
xor
cmps
mov
popf
iret
xchg
xchg
push
leave
add
push
and
cmps
or
cmp
shl
cmps
mov
rcr
and
arpl
jl
add
add
mov
stos
mov
test
test
shl
test
jnp
aas
adc
inc
stos
mov
lea
mov
shl
test
enter
sbb
adc
adc
add
add
mov
or
popa
outs
sub
or
enter
xor
inc
add
out
adc
jno
sbb
es
mov
stos
push
xor
sub
icebp
xor
jge
dec
lock
test
push
mov
or
cmp
das
adc
in
int
add
ins
das
and
mov
push
sub
xor
fiadd
push
push
push
and
test
fwait
dec
lods
xor
inc
hlt
push
mov
cmp
cwde
js
adc
daa
mov
push
and
repnz
loopne
mov
inc
xor
and
fimul
mov
inc
mov
xor
jno
xchg
ret
adc
ud2
mov
outs
sbb
jne
ja
pusha
jns
xchg
popf
sub
hlt
add
outs
shr
cld
into
mov
test
sbb
mov
cld
(bad)
jb
sub
jmp
add
mov
ins
out
xlat
(bad)
mov
cmp
xchg
pushf
shl
(bad)
outs
mov
jmp
mov
xor
pop
fbld
loopne
mov
and
(bad)
fwait
adc
repnz
not
jns
sbb
cli
cmovbe
test
addr16
adc
das
add
sbb
adc
or
jg
dec
ret
sar
pop
push
add
fdiv
and
push
cwde
js
xor
in
dec
sbb
pushf
rol
sub
sbb
sbb
mov
push
jge
pop
and
jae
fwait
retf
inc
push
jne
cmp
test
ja
mov
lods
inc
xor
push
sahf
mov
mov
add
add
lods
xchg
add
dec
xor
ins
push
push
test
mov
or
push
nop
xor
mov
or
aas
jle
lea
nop
ins
(bad)
sub
push
ins
or
cdq
cmp
push
test
adc
mov
dec
fwait
xor
ss
or
mov
dec
out
js
ss
pop
jnp
sbb
and
xchg
add
add
or
imul
jae
sbb
jle
pop
and
enter
and
mov
in
xor
mov
jl
cmp
arpl
stos
add
mov
inc
jl
sbb
imul
inc
cmp
mov
xor
out
outs
mov
add
dec
mov
cmp
fld
inc
push
pop
mov
mov
arpl
imul
dec
js
cli
popa
xor
push
mov
test
jae
loope
rcl
pop
rcl
fiadd
dec
out
in
xchg
jmp
test
nop
loope
cmp
pop
fld
cli
pop
aam
mov
in
nop
push
mov
sub
es
retf
pop
mov
mov
push
jne
jge
inc
imul
push
cmps
loop
fs
and
inc
cmp
fcomp
and
sub
loopne
inc
mov
pop
sub
aaa
xor
or
mov
popf
xor
jne
mov
ins
push
cs
jne
jno
sbb
shl
call
inc
adc
mov
cmp
shr
or
mov
sub
push
adc
pop
add
jne
pop
jae
mov
imul
das
data16
adc
in
mov
std
push
inc
jmp
rcr
imul
sbb
ret
into
aas
and
push
lea
les
pop
js
sub
ins
adc
dec
repnz
push
scas
xchg
int
in
sbb
sub
movs
sbb
cmc
shl
shl
mov
pop
xchg
fs
(bad)
jbe
mov
test
xchg
dec
sub
pop
cdq
gs
sbb
(bad)
cmps
loopne
and
push
push
and
rol
or
xor
push
push
xor
cmp
cmp
sbb
xchg
push
out
pop
mov
js
pop
pop
xchg
xor
push
sbb
retf
and
lock
das
or
sbb
push
sub
jmp
adc
jmp
leave
xchg
hlt
cmp
add
jl
rcl
push
push
sbb
in
xchg
inc
xchg
neg
hlt
or
data16
pop
adc
or
aaa
add
or
retf
and
adc
mov
sbb
and
or
pusha
lea
inc
dec
mov
in
int3
into
pusha
nop
inc
fcom
ret
pop
add
call
in
fs
cmp
sub
sbb
call
add
mov
lea
in
fs
(bad)
loope
mov
hlt
push
inc
clc
inc
je
push
add
xchg
and
cwde
mov
sahf
adc
jb
sbb
jle
add
aad
jg
pop
jo
jo
dec
lods
cmp
arpl
fiadd
xor
inc
inc
push
jle
and
adc
mov
mov
enter
enter
dec
in
out
pop
or
add
add
sub
xchg
or
mov
nop
icebp
pop
xchg
ret
xchg
jb
retf
jne
mov
sbb
sub
adc
xor
jo
je
or
fld
sub
and
xor
fdivrp
push
dec
and
sbb
sub
sub
mov
mov
outs
inc
cdq
or
sub
cmp
sti
loopne
clc
jmp
in
pop
jmp
or
push
mov
pusha
xor
inc
or
add
or
inc
loop
in
mov
mov
aaa
sbb
jle
mov
movs
or
in
adc
lods
mov
pop
dec
fmul
rcr
push
je
adc
sub
test
pop
lods
adc
xchg
xor
test
push
cmp
mov
mov
pop
jle
mov
hlt
mov
push
jo
mov
nop
and
mov
xchg
xor
in
lods
rol
les
int3
cmps
je
inc
jbe
test
pop
ret
push
mov
or
push
in
pop
(bad)
loop
nop
fmul
shl
mov
sbb
cmp
push
push
push
cmp
pop
leave
lea
jge
xchg
nop
mov
or
bound
daa
ins
mov
cmc
shl
pop
aaa
add
add
and
mov
retf
js
or
ret
jg
inc
ror
jge
xor
jbe
jnp
push
sbb
dec
jo
mov
xchg
retf
jae
or
xchg
add
fmulp
push
add
pop
add
sbb
cmp
add
jmp
in
adc
jmp
mov
lods
and
push
sub
sub
lea
xchg
call
out
nop
jnp
cwde
pop
mov
mov
pop
pusha
cmp
popa
xchg
push
mov
je
cmp
imul
pop
cmp
xor
dec
pop
mov
mov
xor
fs
test
stc
pop
mov
and
adc
dec
push
mov
jmp
sbb
add
jne
call
jmp
out
(bad)
in
add
xor
add
in
mov
or
sub
outs
rol
and
sbb
sbb
lods
lock
dec
sub
outs
push
adc
pop
pusha
or
xchg
movs
mov
mov
ror
dec
aas
mov
sbb
jo
pop
ret
or
xor
shl
mov
sbb
xchg
sbb
mov
mov
(bad)
rcr
add
sub
add
enter
pop
add
lods
xchg
add
jmp
les
add
mov
lahf
lock
inc
outs
adc
cmp
aam
add
inc
jmp
or
sub
cmc
hlt
rcr
push
sub
jne
test
jno
fisubr
mov
(bad)
scas
ret
sbb
mov
mov
xchg
dec
xchg
mov
loopne
(bad)
not
mov
arpl
js
sbb
into
jge
jl
ins
popa
pop
stos
jmp
push
adc
ins
add
jecxz
add
ja
push
dec
or
inc
out
cmp
jge
push
es
mov
xor
ret
(bad)
call
clc
stc
or
adc
mov
push
cmp
gs
push
dec
mov
stos
mov
or
push
test
xchg
xor
add
xor
retf
mov
push
cmp
or
push
inc
dec
xchg
push
repz
dec
js
jno
clc
call
sub
or
dec
sub
leave
pop
repnz
nop
ret
adc
or
push
(bad)
dec
je
push
mov
sub
inc
rol
ja
sub
inc
test
jne
cmp
retf
cmp
sub
lea
movs
mov
dec
(bad)
leave
sub
cmp
add
or
inc
ror
loopne
xor
les
mov
xlat
mov
xor
lods
in
adc
ret
jp
push
rol
push
push
mov
movs
mov
cdq
rcl
sub
dec
mov
and
push
adc
mov
jno
arpl
je
pop
adc
aam
mov
push
push
adc
movs
cmps
fimul
push
inc
or
dec
daa
or
pop
push
cs
dec
sub
or
xchg
xor
ret
push
xchg
inc
aam
dec
pop
push
sub
ins
xchg
sti
jg
inc
add
je
dec
jmp
pop
cmp
adc
adc
rcr
fcom
adc
(bad)
cs
mov
enter
dec
xchg
xchg
adc
add
call
fwait
ins
jecxz
push
push
mov
push
iret
xor
out
nop
dec
rol
in
les
loopne
push
bswap
add
bound
fwait
jmp
inc
or
add
mov
xchg
xchg
sbb
inc
movs
mov
sti
rcl
js
add
lock
add
mov
loopne
lds
adc
shl
pop
push
cmp
fist
ret
cmps
sub
adc
data16
jmp
int3
sbb
jmp
adc
fisttp
pop
mov
and
xor
add
inc
lds
or
inc
cmp
aaa
pop
inc
and
add
and
sub
scas
ror
jmp
and
adc
dec
pop
pop
mov
adc
imul
inc
or
ret
pop
xor
lds
mov
or
test
jg
add
rol
adc
invd
inc
jne
or
pop
push
imul
and
mov
out
and
dec
xchg
aaa
(bad)
mov
jge
sub
or
jne
add
imul
inc
sub
jae
andps
mov
or
lea
or
adc
mov
sbb
loopne
and
fwait
stos
jg
pop
loope
lods
sub
sub
mov
cwde
add
test
xor
xor
add
sub
jp
jmp
adc
mov
std
ret
adc
mov
out
push
or
mov
xor
add
sbb
mov
adc
(bad)
add
xor
jl
jno
xor
mov
sahf
sbb
lea
and
or
lods
dec
jb
adc
mov
and
push
(bad)
lods
or
loopne
pop
daa
cmps
add
mov
out
inc
loop
or
dec
test
push
cmp
add
or
add
fistp
add
push
inc
nop
add
dec
clc
add
sub
pusha
pusha
or
daa
sub
pop
xchg
cmp
adc
shr
pop
addr16
and
jns
arpl
test
sub
nop
popf
add
dec
lahf
cmp
cmp
fiadd
sbb
test
stos
loopne
repnz
and
into
scas
aas
jo
mov
jmp
push
xchg
cmp
mov
mov
jp
adc
and
adc
loopne
adc
adc
add
sub
shr
mov
inc
cmp
add
sub
les
in
push
push
je
fist
loope
call
xchg
or
xor
popf
jmp
fild
cmp
stos
lock
mov
lahf
push
les
or
pop
fbstp
ss
nop
and
push
out
(bad)
aad
movlps
or
mov
jp
inc
cld
inc
ror
xchg
jnp
movs
lds
mov
xlat
pop
cwde
(bad)
cmp
rcl
dec
popf
les
and
movs
aam
popf
push
mov
cs
(bad)
pusha
shr
sub
xor
jle
nop
aaa
jne
(bad)
lods
cmps
jo
das
jecxz
enter
fld
ins
add
cdq
rcl
adc
mov
push
dec
mov
add
add
pop
pop
inc
add
jl
fisub
push
rol
sbb
push
or
fcmovnbe
mov
push
seta
cmovb
xchg
test
pop
ror
pop
jnp
scas
mov
sti
or
add
and
push
adc
or
clc
jo
test
mov
add
iret
jmp
inc
inc
and
scas
push
sub
adc
and
sti
push
mov
leave
dec
push
add
jmp
pop
loopne
sub
lds
and
mov
or
mov
and
or
inc
call
xchg
adc
aad
fild
mov
mov
imul
sub
shl
icebp
xor
data16
and
add
call
fbld
cmp
cmp
(bad)
out
rsqrtps
rol
retf
and
xchg
add
js
push
lods
mov
and
mov
mov
btr
fistp
xlat
(bad)
ficomp
dec
inc
loop
es
aaa
ffreep
adc
jmp
cmp
jl
sbb
adc
push
add
push
pushf
inc
sbb
jge
inc
push
or
xchg
idiv
imul
cwde
ins
loopne
int3
and
add
mov
push
mov
push
cmp
xor
mov
xchg
test
pop
xchg
add
pop
sbb
js
sub
dec
call
pop
shr
je
mov
mov
push
and
lds
das
out
pop
mov
and
jae
ins
ror
cmps
jne
rol
push
pusha
sub
mov
xchg
pop
pop
jl
mov
inc
iret
in
mov
adc
leave
dec
push
mov
jne
push
push
sub
sbb
sbb
mov
les
sub
jne
leave
pop
sub
jbe
push
ss
or
in
inc
adc
push
adc
sahf
or
add
stos
and
pop
adc
inc
movs
stos
push
outs
jge
fst
mov
jecxz
mov
adc
adc
jne
push
add
add
data16
or
xchg
inc
pop
das
dec
popa
xor
or
inc
or
dec
add
dec
ss
push
lea
pop
sbb
pop
pop
repz
push
push
sbb
or
pop
and
adc
test
adc
sbb
popf
out
shr
call
add
out
cmp
inc
cs
test
test
lods
ins
sar
mov
add
sub
push
add
imul
dec
in
or
aaa
jle
mov
sete
and
(bad)
jmp
xchg
fisub
movs
jo
jmp
jne
inc
aam
mov
fcomp
jmp
pop
sub
inc
xor
in
push
cmp
out
mov
fld
xor
or
xor
mov
das
push
push
xor
pop
and
inc
mov
push
mov
jle
sbb
int3
popa
dec
pop
and
adc
jl
push
mov
enter
push
adc
(bad)
push
int3
and
xchg
in
push
test
out
fistp
pop
jl
inc
mov
and
and
inc
fwait
mov
jae
or
call
ret
jae
push
mov
jmp
fld
push
pop
adc
add
pop
add
sub
pop
in
or
push
ficomp
ror
ret
and
add
mov
call
cmp
or
adc
xor
dec
cmp
or
jecxz
add
mov
and
and
sub
push
jae
aam
add
pop
pop
cwde
ins
xor
sub
daa
sbb
push
es
mov
add
mul
adc
mov
cld
imul
(bad)
popf
jbe
imul
add
adc
gs
adc
add
fdivr
jb
sub
sti
loop
sbb
cmps
jb
sub
les
out
add
ss
dec
add
push
stos
jmp
pop
mov
imul
outs
xor
dec
cmp
push
cmp
sub
add
in
inc
pop
or
test
stos
aam
sahf
es
add
sbb
mov
or
and
loopne
call
xor
pop
dec
push
inc
dec
sub
dec
popf
inc
mov
jg
jmp
lods
popa
add
dec
mov
rcr
lods
inc
push
(bad)
das
or
push
daa
or
aas
fisubr
push
adc
cdq
shr
nop
inc
cmp
mov
adc
icebp
lea
adc
mov
dec
cs
jnp
pop
jnp
(bad)
sti
mov
jmp
or
ins
or
adc
lods
jge
and
or
mov
(bad)
dec
adc
jp
sub
ja
push
add
in
sar
add
psubw
xchg
jl
(bad)
jg
daa
jnp
rcl
xor
and
mov
(bad)
hlt
jae
movs
mov
inc
push
xchg
add
or
xchg
xchg
rcl
adc
add
jle
adc
and
ins
pop
inc
push
and
daa
jo
add
add
jb
enter
js
sar
adc
mov
(bad)
lds
pusha
out
inc
add
mov
mov
cmp
sub
add
cmp
or
mov
xor
or
ror
xlat
scas
cmp
push
jmp
pushf
or
(bad)
(bad)
ss
scas
xor
mov
push
jb
add
cmp
scas
int
sub
xchg
add
push
adc
jl
add
fistp
sub
ret
nop
cmp
mov
mov
mov
pop
push
stc
or
loope
in
adc
push
or
cmp
pop
cmc
jne
retf
sub
add
push
pop
or
mov
and
inc
cdq
sbb
dec
xchg
loop
push
cli
add
(bad)
jae
mov
dec
jmp
loopne
adc
sbb
sbb
in
int3
adc
retf
out
std
jbe
in
or
xchg
in
push
push
add
mov
jmp
inc
inc
rcl
push
or
pop
or
pusha
add
dec
push
dec
mov
lock
add
and
jecxz
ficom
mov
call
(bad)
fmul
jmp
adc
and
fstp
retf
adc
loop
shl
jne
lods
rcl
or
jno
nop
adc
or
paddb
mov
push
adc
mov
stos
sub
xor
sbb
push
test
pusha
and
repz
pop
xchg
mov
ins
cdq
test
outs
push
push
icebp
jp
and
mov
movs
jne
aad
aam
shl
jmp
adc
ret
movs
je
daa
lock
adc
or
cmp
test
aam
dec
lock
jne
dec
add
and
ja
es
mov
and
je
test
es
dec
inc
sub
lahf
test
mov
sbb
cmps
adc
mov
push
dec
xor
stc
popa
ins
shr
add
inc
cmp
inc
mov
mov
test
sub
lea
inc
xchg
mov
ror
mov
arpl
arpl
mov
inc
(bad)
movs
push
dec
mov
sbb
aas
or
jno
dec
inc
add
rcl
adc
test
xchg
ret
jne
mov
dec
pop
mov
adc
or
dec
add
ja
inc
bound
pusha
sbb
xchg
cmc
adc
push
imul
fld
inc
dec
cmps
pop
xor
mov
lods
xor
push
pop
mov
mov
adc
jae
jne
jp
sbb
and
inc
or
idiv
iret
jmp
(bad)
xlat
jg
and
dec
sub
lea
adc
sbb
dec
push
test
sub
lock
lods
dec
sbb
lods
inc
hlt
(bad)
hlt
add
sub
push
mov
or
in
cmp
jge
not
mov
hlt
and
inc
mov
lock
or
pop
sbb
in
js
mov
push
sub
push
(bad)
push
mov
popf
ins
xor
mov
adc
dec
add
and
mov
push
cmp
dec
jb
inc
sbb
push
jnp
lds
dec
add
jmp
xor
adc
(bad)
ret
rcr
or
enter
add
or
add
inc
xlat
mov
lods
or
in
lds
dec
pop
dec
or
push
inc
mov
sbb
sbb
jb
js
in
lock
adc
inc
or
cmp
mov
and
out
cs
call
dec
nop
popa
test
jl
sbb
and
(bad)
jmp
test
inc
adc
div
cs
int3
gs
retf
pop
shr
imul
push
les
dec
outs
in
push
push
shl
cmp
ror
jbe
jae
sub
xor
cmp
je
jmp
add
idiv
xlat
adc
push
mov
mov
add
add
mov
scas
sbb
and
add
fsubr
(bad)
mov
rcr
push
push
pop
and
mov
adc
add
xor
dec
aad
sub
push
mov
imul
xor
add
lock
pop
pop
add
cs
xor
cmp
mov
retf
xchg
retf
push
adc
and
or
stos
pop
pusha
sbb
cmp
pop
xor
push
shl
popa
(bad)
ja
cmp
test
dec
cmp
and
sbb
in
aam
shl
mov
retf
mov
xor
pop
lods
lahf
dec
shr
sbb
loopne
pop
push
and
int3
sub
sub
dec
inc
cmp
pushf
xor
inc
cmp
popa
loop
scas
ret
inc
aaa
xor
sbb
sub
js
sub
mov
pop
shl
and
jp
imul
retf
dec
movs
push
fnstcw
das
dec
test
imul
pop
push
call
jge
xchg
jle
mov
cld
jb
adc
mov
sub
mov
xchg
icebp
ss
pusha
or
pop
jo
adc
ret
ret
fcom
mov
mov
clc
push
out
mov
or
or
xor
inc
in
push
sbb
or
mov
popf
iret
sti
mov
hlt
cmp
sbb
test
cmp
or
push
push
lea
sbb
or
or
pop
or
scas
cwde
push
push
mov
inc
stos
fbld
jae
mov
pusha
shl
movs
aad
pop
add
bound
cmp
test
inc
inc
pop
push
data16
push
dec
push
mov
cmp
fdivp
inc
adc
xor
aam
cs
loopne
add
int3
mov
add
cmp
add
add
mov
and
fst
cmps
rcr
int3
cmp
or
jns
adc
loop
add
pop
dec
add
mov
ins
sbb
ficom
inc
and
and
mov
push
push
cmp
scas
push
rol
pop
fistp
push
int3
ins
xor
xor
add
xor
xor
add
push
mov
arpl
(bad)
sub
daa
pop
pusha
fs
add
mov
adc
or
shr
or
aam
or
xchg
rcl
xchg
add
add
fmul
movs
in
xor
sti
add
pop
shr
pop
mov
lods
mov
fwait
mov
ds
mov
fnsave
add
cwde
test
push
mov
push
(bad)
pop
mov
movs
push
jl
in
inc
aam
mov
xor
int
push
push
retf
cmp
add
dec
xchg
and
nop
xchg
popa
push
sub
shl
imul
in
sub
pop
daa
scas
pop
in
dec
cmp
add
mov
rol
ror
inc
lock
mov
dec
cmp
push
data16
inc
xor
push
adc
test
pop
add
add
cmp
push
sub
or
sar
pusha
sub
lea
xchg
or
jl
in
dec
push
iret
mov
add
add
add
out
mov
push
call
and
sbb
adc
(bad)
cmp
mov
nop
pop
or
push
cmp
pop
repnz
adc
fdivr
push
cmp
mov
or
cwde
les
rcl
leave
cld
jmp
xchg
add
dec
mul
cld
cld
cmp
ja
mov
cs
or
push
adc
jl
adc
and
loopne
dec
jmp
and
mov
sbb
pop
and
pop
xchg
inc
xchg
adc
gs
(bad)
ss
jne
sbb
dec
aam
into
in
sub
push
int3
dec
and
xor
call
or
adc
movs
add
scas
xchg
test
test
cmp
push
fisttp
inc
dec
not
cmp
or
or
push
sub
mov
in
mov
fist
icebp
xchg
mov
dec
out
add
out
xor
sbb
(bad)
fcomp
aas
pop
ficomp
or
fcom
push
dec
jge
and
jg
push
fwait
les
fld
and
cdq
add
xor
push
test
cwde
pop
mov
dec
push
xor
dec
int3
rol
push
or
mov
sub
movs
or
call
add
mov
or
das
sbb
add
sub
into
pusha
inc
test
call
out
jne
sbb
mov
in
popa
pop
mov
aad
jo
icebp
mov
ins
push
outs
mov
cld
add
adc
push
call
leave
jne
dec
ror
stos
inc
mov
mov
mov
clc
fs
push
in
in
or
add
dec
dec
retf
add
ins
in
mov
add
iret
jo
rcr
in
push
and
dec
int
mov
les
dec
nop
push
jmp
push
imul
inc
dec
mov
cmp
xchg
jecxz
add
mov
lds
nop
jae
pop
pop
mov
inc
clc
mov
and
and
(bad)
aad
mov
es
pop
rol
adc
inc
loopne
das
pop
mov
(bad)
and
xor
cdq
push
pop
fist
pop
lock
add
movs
and
mov
sub
xchg
mov
xor
(bad)
adc
inc
or
sbb
rcr
sub
inc
dec
sbb
scas
mov
sub
xor
adc
push
popf
and
mov
call
inc
sbb
xchg
push
sub
jns
xor
bound
(bad)
sub
sbb
mov
cmc
inc
ror
pop
add
rol
xor
sub
jmp
test
xor
shr
mov
ins
pusha
mov
cli
mov
pop
ins
cmps
outs
xlat
ds
dec
cmp
xchg
outs
aam
cwde
and
xchg
loopne
outs
cmps
jp
push
mov
ss
shl
push
or
sub
in
sub
adc
or
and
rol
and
out
movs
ja
inc
jge
mov
in
mov
xchg
data16
and
xor
test
cmp
(bad)
add
out
mov
dec
cmc
jns
lea
arpl
jns
mov
adc
mov
popa
mov
rcl
push
mov
adc
jg
inc
cmp
xor
hlt
adc
inc
ds
aad
out
sbb
adc
push
mov
nop
or
jmp
scas
add
xchg
push
xchg
mov
inc
call
in
nop
data16
and
loopne
or
sub
cmp
mov
gs
pop
and
inc
jbe
jne
add
and
jge
and
mov
loopne
push
and
shl
lock
sub
mov
cmps
shr
sub
mov
xchg
adc
dec
sbb
sar
icebp
inc
test
(bad)
int
scas
or
mov
cld
xor
mov
mov
test
jo
add
aas
pop
cmc
mov
push
jae
(bad)
popa
loope
ins
mov
xchg
fsubr
clc
pop
sub
push
mov
int
inc
les
sbb
ds
dec
pop
(bad)
stos
jnp
add
push
ds
fisub
mov
mov
lods
out
call
pop
adc
push
cmp
push
adc
lods
stos
jmp
inc
mov
ss
rcl
cmp
push
sbb
sbb
push
push
pop
push
mov
dec
scas
pop
aam
sbb
rcl
adc
mov
neg
sbb
call
call
sbb
or
adc
inc
or
into
or
or
mov
popa
outs
imul
loope
jns
add
js
push
pop
enter
add
cmp
or
not
dec
fs
add
or
imul
jne
pop
cmps
adc
repnz
sub
outs
add
pop
and
leave
cwde
cwde
and
push
add
push
out
sbb
fadd
lods
adc
or
lock
ret
add
and
xor
sub
inc
dec
sbb
pushf
ins
dec
mov
mov
out
int
dec
jne
retf
mov
or
add
mov
mov
or
test
outs
stos
push
adc
or
push
aad
inc
cdq
cmp
aaa
mov
cs
aam
adc
inc
loopne
and
std
fwait
jne
add
push
enter
jp
sbb
mov
sbb
(bad)
int3
adc
out
dec
test
and
retf
movs
mov
jo
ret
cmp
and
push
sbb
add
sub
dec
xchg
ror
add
test
fst
dec
neg
add
cmp
xchg
or
sbb
ss
pop
jne
mov
adc
pusha
dec
adc
sub
fs
shl
mov
and
imul
xchg
adc
mul
add
fnstcw
test
mov
dec
sub
adc
ja
mov
in
loop
adc
or
addr16
xor
cmp
cmp
xchg
xor
adc
cmp
mov
or
popf
xchg
pop
dec
add
or
mov
adc
push
push
adc
les
adc
push
cs
dec
fnstsw
and
not
lds
or
movlps
ror
push
xor
push
call
sbb
adc
jge
add
(bad)
loope
outs
dec
inc
push
or
fbld
lea
dec
clc
cli
inc
pop
sbb
dec
movs
mov
or
and
or
inc
xor
fcmovnu
sbb
cwde
xor
icebp
sbb
test
das
push
jmp
sbb
rol
xchg
add
add
imul
or
rol
or
loopne
adc
mov
cmps
jne
nop
add
in
inc
or
xchg
shr
loopne
in
aaa
ficom
sub
or
jne
mov
sbb
push
jmp
js
jb
xor
lods
mov
push
out
push
or
or
xor
ret
rol
adc
jne
and
adc
adc
add
and
neg
cmp
inc
push
call
add
push
and
xor
add
add
dec
add
mov
sub
cmp
sub
scas
int
rol
or
xor
push
cmp
and
rol
mov
call
scas
or
cmp
add
out
loope
sbb
pop
jb
sub
inc
cld
imul
sbb
or
fs
dec
sbb
cmp
mov
in
push
(bad)
repnz
cdq
or
adc
test
jmp
mov
cwde
cld
push
gs
inc
ret
hlt
pop
mov
mov
fdiv
inc
sub
jno
push
loopne
jnp
loope
lock
in
fdiv
adc
add
mov
movs
loopne
mov
nop
xchg
addr16
or
dec
add
or
in
mov
clc
lock
test
and
aad
shl
sbb
hlt
pop
inc
int3
pop
gs
fs
push
sbb
loop
adc
movs
or
xor
int3
das
push
rol
mov
push
xor
sub
popa
in
add
push
and
push
test
mov
pop
inc
psadbw
jno
ins
adc
xchg
and
clc
adc
pop
sbb
cwde
cmp
xlat
imul
mov
lds
lar
or
loope
test
and
jo
mov
leave
pop
or
pusha
cmp
mov
push
mov
cmp
(bad)
mov
or
cmps
imul
add
je
cld
cld
jl
and
in
xor
fisubr
lock
and
fcom
loopne
jmp
out
xchg
ror
loopne
adc
or
cmp
repnz
repnz
ret
pop
mov
pop
rcl
add
loope
pop
sub
test
sbb
fdivp
push
xor
fist
xor
gs
cli
mov
push
adc
nop
hlt
inc
leave
adc
inc
add
or
enter
adc
loop
lods
push
popf
inc
or
mov
arpl
dec
pop
iret
add
inc
sbb
call
sub
and
add
cmps
jae
sbb
popa
(bad)
test
sub
sbb
shr
fidivr
cmp
push
nop
cwde
xor
stos
fnstsw
sub
sbb
push
sbb
xor
mov
lods
mov
nop
xchg
sbb
xchg
dec
and
je
enter
jmp
adc
add
add
sahf
sbb
adc
in
fcmovnb
imul
pop
mov
fist
push
add
or
test
adc
sub
cwde
test
or
dec
pop
or
mov
test
divps
mov
mov
push
adc
nop
inc
or
or
mov
push
pop
in
push
mov
inc
cmps
in
sub
retf
jle
jb
xchg
push
pop
inc
jnp
push
cmc
lock
jl
test
dec
cdq
not
popaw
push
fs
cmps
or
mov
and
fs
adc
sub
pop
and
push
jmp
(bad)
hlt
in
hlt
or
push
dec
in
in
dec
fadd
fidiv
in
fcom
out
sahf
cmp
test
nop
push
pop
mov
aam
adc
mov
cmp
jb
dec
ror
movs
mov
je
cmps
dec
mov
xor
cmp
fist
clc
pushf
xor
sbb
adc
sub
mov
mov
add
fldenv
mov
fsubr
mov
and
je
dec
loop
inc
shl
sub
xchg
jmp
out
mov
and
push
ret
jns
test
xchg
mov
sub
loopne
sbb
mov
push
add
mov
frstor
dec
lods
sahf
adc
adc
or
cs
mov
mov
outs
cmps
push
jo
ror
mov
imul
int3
add
mov
pop
mov
loopne
loopne
pop
enter
or
loopne
aaa
adc
mov
xchg
mov
adc
mov
imul
mov
movs
aam
stos
ret
sahf
add
pop
mov
mov
xchg
lock
jecxz
mov
mov
adc
int3
mov
pushf
jmp
add
add
pop
or
jp
pop
cli
inc
pop
js
aam
push
ret
call
fcomip
adc
push
iret
or
pop
jmp
cmp
mov
test
mov
mov
idiv
call
mov
nop
mov
add
xchg
sub
cs
cmps
test
aam
xor
imul
neg
leave
xchg
in
adc
fs
aam
sbb
or
int3
pop
cmp
js
stc
push
pop
pop
add
int3
push
pop
mov
arpl
add
and
and
movs
jne
rcl
dec
push
mov
pusha
cmp
stc
push
push
pusha
sbb
(bad)
inc
or
sbb
or
inc
pusha
adc
scas
les
retf
in
mov
cmc
in
cdq
in
iret
pop
ins
add
adc
xchg
add
ins
int3
dec
jle
or
fs
adc
dec
out
and
sahf
(bad)
dec
dec
ins
mov
mov
jl
out
cmp
inc
movs
adc
xchg
pop
les
xchg
sbb
or
cmp
cs
dec
inc
dec
jne
sub
hlt
and
jmp
and
hlt
in
xchg
pop
sub
or
or
lea
cmp
and
daa
or
jmp
fdivr
sbb
xor
ret
add
dec
cs
cmp
nop
cmp
mov
sub
mov
inc
cwde
in
(bad)
jp
or
push
scas
fnsave
arpl
js
pop
dec
inc
xchg
add
push
fnclex
cmp
pop
into
jae
adc
dec
or
pusha
add
pushf
retf
adc
rcr
and
adc
pop
pop
iret
xor
out
outs
mov
pushf
je
test
add
inc
cmp
test
adc
adc
push
fldcw
cmp
jge
cmp
inc
sqrtps
push
and
and
or
pop
sar
jmp
adc
mov
mov
cmp
icebp
clc
mov
call
pop
pop
cmc
jp
add
lock
add
or
and
push
adc
outs
dec
jmp
out
inc
jbe
xor
(bad)
xchg
push
mov
pusha
inc
loopne
push
or
xchg
xor
test
mov
add
jle
lahf
jno
add
clc
pop
inc
xor
xchg
aam
push
add
and
push
or
pop
ret
dec
or
mov
das
adc
lahf
sub
js
adc
sbb
sbb
sub
push
xchg
(bad)
scas
inc
fcomp
aas
test
popf
fcom
jmp
les
retf
shr
jne
icebp
adc
call
mov
in
inc
and
pop
adc
or
push
jecxz
fdiv
add
rol
mov
add
adc
inc
pushf
cmps
inc
(bad)
test
mov
lods
push
jmp
call
mov
call
pop
pop
mov
push
mov
pop
mov
sub
xchg
lds
adc
inc
push
mov
pusha
mov
fild
jge
into
or
clc
cmps
add
push
xor
push
push
dec
adc
fdivr
xor
xlat
test
mov
sub
inc
clc
xchg
or
xchg
test
sub
test
scas
jecxz
faddp
inc
dec
test
loopne
lds
xlat
mov
inc
dec
cs
enter
pop
jp
cmps
rcr
leave
dec
inc
mov
jns
xchg
retf
or
adc
in
add
ins
and
jns
pop
bound
sti
pop
idiv
fisubr
sbb
xchg
call
loopne
call
pushf
and
repz
fmul
in
in
xor
in
cmp
rcr
sbb
jge
leave
mov
push
pop
mov
mov
xchg
ret
mov
or
mov
mov
pop
lea
and
dec
pop
jp
or
in
or
popa
es
fiadd
dec
xchg
mov
jge
add
mov
and
sub
sbb
pop
pop
push
pushf
add
or
jbe
dec
invd
sbb
shl
or
push
push
imul
clc
mov
push
mov
stos
push
nop
lock
xor
pop
sbb
push
wbinvd
icebp
and
mov
and
not
test
lea
popf
dec
sbb
cmp
jmp
(bad)
pop
or
adc
jnp
out
inc
cmc
adc
pop
pop
out
mov
es
(bad)
aad
push
(bad)
pop
fadd
rcl
enter
sub
js
cdq
(bad)
pop
add
inc
xor
stos
cmp
and
mov
dec
add
xor
gs
sbb
nop
sbb
pusha
mov
xor
adc
inc
adc
adc
inc
or
push
sbb
or
push
sub
es
push
push
popa
(bad)
ins
add
fs
(bad)
add
test
jge
cmp
pop
rcr
rcl
push
hlt
in
test
les
(bad)
xor
daa
cmp
adc
or
loopne
xchg
data16
push
mov
fmul
or
mov
adc
popf
jp
and
and
pop
xor
sbb
test
or
ja
test
cld
popf
or
cmp
adc
push
dec
ret
adc
cmp
fbstp
sahf
sbb
adc
data16
cmps
mov
lock
movs
call
dec
jns
sahf
adc
mov
mov
dec
inc
sbb
mov
cmp
jne
je
push
shr
popf
pop
icebp
sbb
aaa
(bad)
in
add
dec
mov
and
ins
pop
dec
inc
push
rol
(bad)
mov
enter
inc
mov
mov
sub
pop
sbb
push
ret
pop
mov
cmp
(bad)
fisub
pop
add
or
add
or
pusha
mov
mov
clc
inc
sbb
adc
aas
pop
repnz
or
cmp
mov
sub
add
adc
inc
dec
adc
jmp
or
hlt
inc
idiv
frstor
retf
data16
adc
ret
(bad)
fs
push
mov
movs
jmp
push
jg
xchg
jle
clc
and
pusha
xor
push
retf
out
and
and
add
inc
mov
pop
and
dec
xchg
fsub
jne
pop
dec
or
mov
jmp
and
xchg
mov
mov
push
loopne
das
movs
push
cmp
ret
out
dec
fcom
push
sbb
jg
aad
sub
add
(bad)
call
xor
jmp
mov
ss
mov
xchg
jne
retf
push
pop
jmp
bound
xor
dec
xchg
popa
rcl
add
add
leave
pop
dec
fdiv
push
sahf
addr16
jl
add
clc
or
scas
aaa
test
mov
push
dec
enter
jo
bound
and
add
(bad)
dec
jno
xor
fsubr
ret
loope
lock
lods
add
push
adc
push
sub
sbb
add
xor
push
mov
push
mov
enter
sbb
mov
xchg
mov
pusha
ins
mov
nop
inc
outs
sub
je
call
ins
mov
pop
xor
daa
mov
and
pushf
cmp
in
or
int3
or
sbb
test
addr16
mov
enter
jne
and
push
mov
xchg
inc
or
in
cmp
lea
cmp
repnz
popa
js
aaa
jne
or
sub
js
and
xchg
test
or
lea
call
jmp
push
pop
add
mov
clc
enter
add
les
mov
and
push
adc
jmp
cmp
jl
and
push
aaa
jmp
xor
test
shl
push
adc
nop
loopne
xor
cmc
lods
scas
sub
xchg
dec
stos
jl
jl
mov
dec
inc
mov
mov
gs
stos
int3
dec
jnp
push
into
adc
lea
mov
inc
fisub
popa
mov
sbb
int
fisub
add
adc
push
jle
imul
sub
push
pop
popa
or
or
or
push
pop
ss
fimul
mov
adc
xchg
sti
mov
xor
xor
pop
sbb
loopne
es
jns
(bad)
fwait
add
popa
push
or
add
pop
aam
pusha
and
aam
sbb
push
ror
or
pop
data16
test
fadd
xor
dec
sti
or
or
addr16
add
(bad)
addr16
push
fist
and
mov
sbb
in
adc
pop
call
les
and
lods
mov
or
jb
inc
xor
adc
and
movs
xor
fiadd
add
sub
or
and
mov
test
cmp
mov
icebp
xlat
add
push
push
sbb
jmp
sub
mov
add
inc
in
adc
sub
adc
xchg
push
ins
or
repnz
xor
pushf
or
cs
add
(bad)
pop
pushf
adc
xor
dec
sti
jne
je
repz
(bad)
mov
push
sub
push
cmp
gs
test
dec
ds
jbe
sub
cmp
or
xchg
mov
ret
ss
adc
xchg
fnstcw
pop
adc
add
dec
pop
or
movs
adc
pop
pmulhw
mov
fcmovnb
push
push
pandn
adc
movs
xor
ficom
adc
or
xchg
pop
pusha
or
mov
mov
lahf
add
lods
mov
xchg
retf
inc
add
add
push
shr
sbb
js
adc
mov
xchg
jbe
rcr
push
adc
je
loopne
mov
pop
(bad)
mov
jecxz
repz
sbb
dec
mov
dec
adc
push
mov
xchg
jmp
adc
pop
or
mov
sub
pop
add
jmp
xchg
jmp
xor
cmp
add
or
lods
or
push
loopne
fidivr
or
int
pop
mov
retf
inc
loope
push
out
je
or
and
movs
mov
icebp
xor
dec
ror
jmp
dec
fimul
xchg
dec
inc
push
lsl
sti
xchg
dec
mov
or
adc
or
js
cmp
aas
popa
mov
ficom
cdq
enter
ret
sub
mov
mov
loope
aaa
add
mov
xchg
sub
push
shl
push
mov
jg
xor
movs
push
adc
shl
aam
add
call
shl
jle
push
jmp
clc
add
push
jo
pop
sub
add
pop
shl
add
dec
add
arpl
lods
cmc
test
pop
dec
outs
push
ror
and
lods
lock
push
cmp
mov
add
cs
jp
ror
jle
xchg
movs
mov
(bad)
fdiv
mov
mov
nop
dec
sub
and
mov
sub
dec
mov
jge
add
adc
test
push
pop
add
mov
icebp
push
out
pop
push
nop
cs
hlt
add
test
rcr
int3
rol
loopne
fmulp
inc
sahf
jp
add
adc
lods
(bad)
neg
sbb
or
mov
xchg
xchg
ror
call
pushf
cdq
inc
ds
xor
mov
xor
dec
jnp
(bad)
mov
jp
mov
pop
stos
and
ror
and
sti
sub
mov
lahf
push
sahf
test
pushf
push
les
dec
mov
pop
add
dec
sbb
mov
xchg
stc
and
fdiv
sub
movs
rcl
pop
jmp
push
push
lds
test
cmps
mov
rol
call
es
xchg
mov
xchg
lods
je
outs
fstp
sub
pop
popf
cmps
inc
cmps
xchg
pusha
inc
dec
dec
cmp
ds
jmp
jo
push
dec
je
imul
in
jo
fcom
int3
enter
popf
jno
test
xchg
and
lea
adc
dec
pop
or
in
call
fsub
mov
addr16
sbb
hlt
cmps
xchg
add
dec
hlt
mov
jmp
sti
pop
movs
sub
daa
pop
lods
pop
bound
sub
sub
dec
rcl
fs
pop
fs
xchg
xchg
jo
jmp
mov
sahf
loopne
and
cli
and
sub
fstp
jno
add
push
addr16
or
xor
inc
add
(bad)
fs
in
sbb
adc
adc
xor
leave
xor
adc
ins
outs
or
jg
test
popa
dec
das
sbb
cwde
add
scas
sbb
dec
mov
or
stos
mov
sub
pop
dec
jmp
inc
push
xor
dec
add
xchg
(bad)
sbb
sahf
dec
push
loopne
xchg
dec
mov
dec
xchg
inc
xchg
xor
sbb
mov
ja
xchg
in
sub
xchg
add
xchg
push
(bad)
xor
mov
je
push
xchg
(bad)
cdq
pop
retf
push
cwde
out
add
jge
int3
adc
shr
mov
inc
in
sbb
rcl
push
jb
adc
inc
cmp
jmp
push
or
shr
iret
or
push
daa
or
dec
mov
jbe
lock
mov
ins
adc
dec
loopne
sub
cmp
sub
add
jmp
test
rcr
int
dec
call
jae
pop
jnp
or
out
sbb
sub
xor
lock
xchg
cmp
test
sbb
mov
dec
pop
cmp
int
or
mov
adc
mov
jg
jge
sub
lods
rol
pop
inc
xchg
sbb
jo
xchg
and
inc
or
jbe
push
sub
(bad)
hlt
push
sbb
in
lds
and
(bad)
xor
push
mov
adc
(bad)
les
aas
adc
bound
jg
and
add
ret
pop
dec
jg
fcomp
dec
sub
ret
push
mov
and
fild
mov
dec
add
cmp
xor
in
ins
pusha
inc
add
cmp
xor
adc
or
or
or
mov
ret
pusha
clc
xchg
sbb
mul
add
or
ins
xor
and
ror
leave
pop
sbb
inc
repz
pop
adc
adc
push
jecxz
push
lea
loopne
add
out
dec
or
shr
or
pusha
inc
inc
pop
add
fisub
push
add
xchg
clc
push
sbb
or
dec
jmp
les
add
std
mov
mov
sub
push
stos
mov
pop
(bad)
idiv
xchg
(bad)
sub
int3
push
pop
dec
jl
sub
dec
fsub
pusha
sbb
sub
fistp
mov
and
js
mov
inc
and
xor
push
(bad)
xchg
and
in
es
jl
push
into
ror
add
add
push
scas
jl
(bad)
jmp
jnp
fisttp
push
push
fistp
es
ins
adc
shl
int
cmps
les
inc
adc
add
cmps
sar
xchg
lds
add
ret
nop
retf
mov
fadd
add
or
(bad)
repnz
sbb
inc
pop
ss
leave
sti
outs
adc
lea
shl
xor
mov
and
rol
add
cs
ds
ret
aam
push
and
mov
sub
mov
cmovbe
ss
dec
adc
gs
add
gs
sub
add
pop
mov
mov
pop
rcr
add
int
or
jne
fs
in
mov
add
pop
or
pop
shl
or
inc
ret
add
xchg
gs
xor
adc
xor
shl
ins
movntq
or
js
jl
loopne
or
xor
and
mov
nop
and
adc
inc
dec
inc
sbb
mov
in
and
xor
or
jno
and
call
sbb
xchg
or
mov
inc
movs
cmp
sbb
mov
in
xchg
adc
xor
sbb
adc
adc
pop
mov
add
sub
imul
(bad)
or
js
sub
sub
jnp
add
mov
inc
enter
or
pop
add
lea
xor
cmp
and
dec
std
jne
xor
pop
sub
lea
cmp
imul
jle
inc
arpl
or
push
mov
cdq
rcl
mov
aam
fcomp
int3
add
es
sub
dec
mov
lds
or
std
ins
pop
pop
and
stc
push
pop
lahf
and
pop
stos
ins
test
pop
ins
imul
sub
aaa
fs
push
ins
inc
jl
mov
pop
xor
lea
adc
cdq
(bad)
in
sahf
and
adc
adc
(bad)
pop
shld
or
movs
test
scas
mov
push
ret
out
sbb
add
loopne
mov
nop
mov
aam
adc
imul
and
jmp
out
into
pop
mov
add
cs
jbe
ret
or
in
mov
lock
xchg
retf
hlt
shr
or
push
pop
clc
cld
add
add
add
arpl
(bad)
jae
pop
arpl
adc
cs
sub
mov
mov
push
in
in
and
push
push
push
or
pop
inc
jmp
test
adc
sbb
add
mov
(bad)
(bad)
out
sar
mov
push
lods
clc
popf
inc
sbb
push
and
jge
pop
movs
and
inc
jo
mov
out
mov
push
adc
pop
loopne
fsub
or
mov
xchg
in
lock
add
pop
xchg
out
test
lea
mov
adc
add
mov
jbe
jb
cmp
popa
add
xchg
out
div
inc
dec
lahf
lods
adc
xchg
fimul
cmp
dec
mov
mov
cmp
jecxz
push
mov
inc
jmp
fimul
fisttp
jecxz
and
call
imul
inc
cmp
cdq
pusha
imul
ins
int3
and
cmp
jmp
lea
jle
dec
push
inc
dec
adc
scas
or
retf
cmp
ffree
jge
mov
pop
sub
ret
loopne
pop
mul
or
stc
sub
adc
cs
sbb
pop
js
movs
mov
or
ins
test
mov
stc
xchg
cld
add
dec
push
in
mov
xchg
push
and
lods
rcl
add
pushf
adc
add
push
dec
add
ret
or
repnz
inc
sbb
dec
add
or
mov
popa
adc
push
adc
inc
sbb
aas
inc
cwde
add
inc
mov
or
pop
ret
(bad)
xchg
push
and
xchg
popf
outs
loopne
arpl
and
pop
jecxz
aad
adc
pop
push
inc
push
bound
adc
push
ret
popa
sar
sbb
aam
push
sbb
es
es
and
mov
loopne
inc
xor
es
leave
xchg
outs
ins
ins
sbb
dec
inc
push
or
inc
sub
add
adc
sbb
xor
and
movs
lock
repz
or
nop
mov
cs
lock
loopne
and
cli
dec
pop
mov
dec
daa
mov
xchg
cdq
push
mov
fadd
pusha
out
cmp
jl
cmp
inc
mov
js
inc
inc
cmp
sbb
or
test
xchg
or
in
int3
rol
test
inc
xor
xor
neg
dec
sub
cmps
cmp
add
jge
xchg
test
dec
ss
and
or
mov
sbb
push
movs
mov
add
jl
xor
adc
loopne
sub
xor
mov
rol
not
ins
add
popa
and
add
or
inc
adc
inc
bound
mov
add
and
mov
cmp
mov
and
pusha
mov
jnp
dec
js
and
cs
sbb
mov
fimul
out
inc
popf
ret
shl
add
int3
xor
push
in
mov
sahf
mov
mov
push
cmp
sbb
adc
add
push
ror
mov
jmp
add
or
ds
hlt
dec
xchg
ins
pushf
and
inc
mov
repnz
inc
int3
pop
lods
ret
retf
sbb
sub
add
mov
daa
dec
icebp
jecxz
cmp
jmp
mov
fwait
int3
rcr
fsubr
movs
push
sbb
dec
pop
add
outs
ror
push
xchg
aas
and
sbb
pushf
cmps
inc
sub
fsub
retf
nop
add
fld
in
xor
neg
xor
jno
dec
mov
cs
lea
xor
jbe
outs
sti
push
or
sbb
es
xchg
mov
adc
pushf
cmp
and
dec
dec
test
ins
add
cmp
sub
pop
push
leave
push
sub
xchg
lahf
sub
push
bound
mov
xlat
imul
xchg
push
inc
xor
in
inc
aaa
jl
movs
rol
adc
xchg
jbe
add
sub
xor
inc
pop
(bad)
fstp
mov
pop
aas
sub
mov
and
xchg
arpl
gs
xchg
jecxz
loope
dec
fdiv
(bad)
bndstx
push
mov
inc
and
shl
outs
inc
mov
cmp
inc
push
test
ins
dec
dec
add
and
(bad)
adc
movs
xchg
icebp
call
or
lods
or
push
xor
sbb
dec
test
sbb
aad
push
xchg
ret
cwde
ret
(bad)
pop
and
in
cmp
and
popa
add
xor
add
lea
ja
xor
jae
movs
inc
popf
xchg
mov
mov
(bad)
sub
sbb
add
ja
loopne
sti
jo
and
pop
add
jno
shr
xchg
in
push
fsub
emms
fst
dec
sbb
ret
fisttp
fcmovnb
fistp
or
push
xor
push
mov
loop
cwde
aas
pusha
mov
jo
adc
popa
adc
dec
je
jns
aas
sbb
fs
or
gs
push
or
add
int3
push
or
dec
in
push
lahf
sbb
imul
icebp
sbb
test
lods
adc
dec
int
hlt
test
xchg
(bad)
sbb
movs
xor
mov
push
sub
sar
xadd
and
push
cmp
mov
xchg
jo
jb
sbb
es
inc
mov
cmp
mov
add
fs
and
in
pop
cmp
pop
ds
inc
mov
adc
sbb
js
add
or
cmc
or
cmp
or
adc
scas
inc
xchg
xor
mov
jno
mov
cmp
in
shr
adc
jge
adc
cmp
or
push
lea
js
enter
sahf
dec
loope
or
movs
or
adc
sahf
or
pop
mov
retf
and
inc
outs
adc
arpl
jnp
pop
mov
and
iret
cwde
ror
dec
loope
and
in
mov
dec
mov
or
add
lods
add
pop
add
sub
sbb
ret
ss
loop
sub
sub
lods
loopne
cmp
in
dec
dec
or
push
adc
xchg
and
cmp
out
mov
sub
dec
mov
inc
add
inc
jne
cmp
cmp
je
lock
dec
jno
test
loopne
inc
out
ins
xor
aam
mov
(bad)
nop
add
mov
lods
jecxz
push
fild
inc
jle
retf
mov
call
(bad)
hlt
dec
rcl
and
data16
or
call
adc
xchg
rol
mov
test
fxch
call
aaa
xor
mov
ja
sbb
sub
je
cmc
xor
(bad)
mov
sbb
dec
xor
dec
xchg
mov
rol
push
popf
mov
sti
ss
sub
jmp
adc
add
pop
mov
int3
mov
sbb
inc
call
fisttp
jns
add
sbb
xchg
or
inc
loopne
xchg
sub
cmp
sub
mov
push
mov
mov
sub
out
mov
sbb
xor
aam
in
or
cmps
sti
dec
lds
pop
ret
and
in
loopne
rcr
and
add
xchg
enter
or
xchg
xchg
jns
retf
(bad)
aad
addr16
xchg
sbb
inc
retf
push
pop
mov
dec
xchg
adc
adc
ins
sbb
jge
outs
div
xchg
pop
push
(bad)
in
mov
sbb
(bad)
nop
dec
call
dec
cmp
fild
leave
jp
mov
jnp
into
pop
ret
adc
and
mov
adc
and
or
ret
adc
outs
push
push
add
xchg
js
mov
sub
xor
and
mov
dec
ror
jmp
mov
repz
repz
push
icebp
jae
xor
adc
std
lods
cmp
sbb
rol
or
jbe
adc
daa
dec
jae
cmovae
mov
fdivr
lock
hlt
xchg
retf
in
rol
in
jb
pop
cs
enter
retf
in
cld
cld
loopne
or
add
test
push
sub
retf
(bad)
ror
inc
sub
pop
test
movs
cmp
pop
ss
dec
inc
loope
cmp
pop
pop
cs
nop
adc
popf
(bad)
jl
(bad)
stc
dec
add
inc
xchg
xchg
sub
in
fdivr
push
pop
leave
inc
inc
jl
in
inc
cld
fldcw
and
call
push
out
or
xor
xor
rcl
add
mov
xor
test
jle
and
or
cmps
mov
cwde
adc
inc
dec
adc
not
mov
hlt
sub
fldenv
sub
jnp
(bad)
jns
out
xchg
dec
ins
mov
pop
pop
xchg
push
xchg
(bad)
in
test
fist
fild
inc
je
call
shrd
sbb
push
pop
sub
xchg
push
shl
sbb
xor
sbb
and
dec
les
loop
popf
inc
test
push
jcxz
or
mov
cmp
int3
retf
jp
fucomp
sub
adc
cmp
inc
rol
mov
shl
add
sbb
push
xor
mov
mov
cmp
jmp
add
dec
ds
fmul
pop
mov
mov
ins
je
in
popf
add
mov
ss
fdiv
mov
xor
sub
cmovs
cmps
pop
das
aam
mov
stos
mov
das
or
xor
sub
fcom
sbb
mov
or
enter
mov
jle
jne
and
push
sahf
mov
push
push
sbb
adc
push
shl
inc
or
dec
gs
aas
add
sub
adc
sbb
inc
lds
lock
push
stos
dec
and
iret
xor
mov
(bad)
jp
inc
and
dec
jge
pop
cmps
add
dec
or
add
push
dec
inc
or
icebp
pop
add
lds
add
xor
(bad)
lock
inc
into
sub
xchg
call
cmp
and
sar
mov
retf
sahf
or
daa
fsub
adc
out
jmp
loop
jmp
jnp
xor
xchg
popa
test
jge
mul
mov
inc
sub
or
xor
cmp
sbb
call
test
scas
jge
mov
xor
fs
fs
ret
in
inc
jge
or
inc
inc
jl
pop
xor
cmp
push
or
cmp
(bad)
lahf
adc
add
xor
dec
pop
mov
pop
shl
imul
pop
add
or
call
stc
les
cmp
loope
xchg
test
(bad)
icebp
mov
or
imul
ror
movs
cs
out
mov
fld
inc
bnd
add
pop
movs
mov
add
xchg
add
icebp
and
aad
jmp
rol
xchg
pusha
jb
inc
mov
and
xchg
inc
aam
push
sub
mov
rcl
adc
hlt
sub
lods
ret
call
dec
inc
scas
push
pop
fimul
push
gs
jmp
icebp
nop
jbe
dec
and
(bad)
inc
gs
sbb
arpl
push
cmp
nop
sub
add
and
call
or
popa
mov
pop
test
jo
dec
test
aad
pop
xchg
lock
inc
jnp
sub
mul
add
inc
or
test
jge
adc
adc
and
push
mov
xchg
xor
xchg
dec
mov
xchg
loopne
dec
dec
push
sub
or
retf
pop
jns
dec
das
adc
mov
jge
or
and
jo
sub
sub
adc
mov
sti
jne
mov
adc
into
cmps
popf
mov
sbb
sub
je
lea
loopne
repnz
and
dec
mov
call
xchg
mov
push
loopne
loopne
sahf
add
jae
aas
jo
inc
sbb
sub
jbe
xchg
pushf
xchg
popa
dec
sub
shl
cli
test
aam
xchg
call
add
jne
add
or
mov
dec
or
jns
xor
add
sti
sbb
fmul
inc
adc
xchg
pop
pop
and
pop
js
mov
mov
mov
lock
dec
adc
and
mov
mov
pop
retf
adc
pop
sbb
mov
mov
push
pop
cmp
adc
cwde
dec
in
icebp
cmp
retf
jp
inc
add
js
test
inc
add
and
in
xchg
push
push
mov
sar
cld
call
shl
loope
cwde
push
lods
or
sub
inc
mov
adc
or
mov
jns
dec
and
pop
in
xor
das
xor
pop
mov
xchg
adc
push
sar
ret
or
dec
or
call
cli
clc
fadd
xor
adc
push
fs
stc
push
es
and
adc
inc
xor
dec
out
sub
rol
test
test
and
xchg
add
sbb
movs
or
ins
pop
scas
lds
inc
mov
push
mov
inc
ds
mov
ins
ss
js
dec
ret
pop
setl
shl
mov
sti
mov
xor
inc
gs
cmp
rcr
or
pop
xlat
or
xor
cmpxchg
jno
push
js
fbstp
lock
sub
inc
ficomp
iret
mov
push
jmp
daa
push
ins
and
cmp
xor
pop
cmps
(bad)
call
shl
fsub
sub
xor
(bad)
adc
push
stos
arpl
in
xor
sub
push
lea
sub
mov
retf
dec
int3
adc
in
js
ja
sbb
push
jmp
or
fwait
xchg
std
je
gs
mov
add
inc
and
call
sahf
xchg
push
dec
ficom
jg
sub
or
mov
inc
arpl
and
mov
or
or
hlt
je
inc
pop
sbb
cld
icebp
jge
sub
cmps
adc
fld
mov
mov
leave
movs
ror
sub
or
ja
ror
push
sbb
(bad)
push
cwde
fxch
inc
pop
cmp
scas
fs
sar
adc
add
(bad)
pusha
jg
or
mov
dec
push
je
clc
sub
xor
sbb
add
out
mov
dec
into
sub
pop
popa
push
jb
add
sub
mov
sub
cdq
test
pop
xchg
ret
rcl
or
or
inc
cmp
mov
add
xor
test
xchg
adc
push
or
lods
add
inc
xchg
pop
and
push
rcr
test
mov
fild
jmp
dec
les
cmp
sub
sbb
adc
stc
and
xor
sar
inc
pushf
loop
mov
add
or
inc
pop
dec
xor
mov
dec
and
add
inc
ins
push
fmul
aad
xor
les
outs
out
pop
sbb
pop
cwde
xchg
add
mov
add
dec
ins
nop
mov
pop
mov
fdiv
cmps
daa
inc
cmp
sub
inc
cmp
test
addr16
pop
push
dec
mov
repz
fisub
pop
pop
jne
(bad)
pusha
add
pop
adc
cmp
push
cmp
inc
je
test
sbb
dec
push
and
sub
enter
arpl
adc
pop
vphaddbw
push
leave
jp
rol
ins
mov
lea
cmp
sub
bound
icebp
sub
shr
in
sbb
pop
adc
mov
test
add
popa
push
arpl
fcmovbe
or
or
push
rol
and
sub
adc
dec
mov
dec
jmp
out
nop
xor
xor
jg
add
retf
shl
lea
sbb
jmp
test
les
(bad)
sub
pop
lock
sbb
push
retf
jo
aas
add
adc
ja
pushf
pop
cmps
add
cs
or
ret
push
cmp
fisub
js
add
push
inc
test
pusha
or
inc
scas
push
les
jo
adc
and
js
xchg
cmp
inc
fist
lods
inc
les
shl
or
mov
push
movs
repz
loope
or
xor
xor
mov
inc
test
shl
mov
push
cmp
fst
xor
inc
dec
or
adc
rol
nop
mov
ror
in
shl
inc
xor
rol
push
mov
mov
movs
xchg
mov
or
ret
xchg
mov
loopne
or
leave
push
push
rcl
mov
je
push
in
loopne
inc
jo
sub
xchg
dec
call
retf
add
jns
or
push
pop
mov
gs
adc
mov
push
pop
aad
fsub
dec
pop
xlat
add
add
inc
adc
sub
jg
in
call
dec
jecxz
popa
sub
add
jge
aam
fcmovnb
cmp
mov
enter
mov
imul
or
mov
or
neg
shl
test
scas
dec
test
and
nop
popa
sub
or
jmp
cli
xchg
dec
mov
add
add
pop
push
lock
cmp
lock
arpl
fwait
xchg
dec
std
or
add
push
and
jge
(bad)
jbe
sahf
ins
pop
pop
pop
inc
xchg
or
adc
je
mov
outs
jecxz
pop
sbb
sbb
sub
mov
icebp
or
mov
and
ret
xor
add
fs
dec
test
push
dec
je
ret
sub
jne
push
pop
jmp
cli
xchg
fs
sar
aas
(bad)
xchg
xchg
popf
sub
jmp
fmul
mov
aas
or
sahf
jmp
push
jae
xor
xor
adc
sub
adc
mov
xchg
jns
mov
cmp
out
mov
mov
push
retf
xor
mov
push
sub
mov
and
mov
jmp
pop
and
or
cmp
pop
clc
cmp
inc
pusha
push
and
out
inc
xor
lock
mov
mov
je
or
or
inc
leave
add
sar
sbb
mov
(bad)
popa
add
mov
ret
push
and
inc
mov
sti
sbb
sub
inc
jo
add
aam
sahf
add
mov
mov
mov
add
outs
sub
add
dec
call
push
out
enter
jmp
sbb
jne
fisubr
xor
sbb
adc
pushf
sbb
xchg
fist
cmp
and
cmp
lahf
and
test
inc
mov
and
push
or
or
inc
imul
mov
xchg
xor
push
mov
movs
ret
lea
movs
les
xor
(bad)
xchg
mov
sbb
mov
ins
sub
and
cmp
cli
pop
add
loopne
sbb
adc
add
dec
inc
jo
adc
xchg
add
mov
or
lahf
and
dec
or
add
xchg
lock
sbb
lahf
sti
dec
adc
popf
add
out
pusha
inc
adc
test
cmp
cmp
adc
or
std
mov
pop
ins
inc
adc
adc
std
xchg
or
scas
fucom
mov
and
add
push
movs
pop
fcmovb
stos
clc
pop
adc
jg
fucom
xor
inc
fadd
cmp
pop
push
adc
dec
sbb
cmp
les
dec
and
and
lods
push
ds
sahf
xor
and
pop
lock
adc
adc
shl
loope
push
repz
in
out
pop
repnz
add
sub
xor
js
sub
dec
mov
mov
xchg
loop
sub
pusha
mov
and
fcomp
je
inc
add
inc
(bad)
outs
or
test
adc
js
push
jg
lods
xor
aam
and
xchg
inc
nop
push
lea
mov
or
dec
push
jnp
sbb
popa
push
mov
jno
pop
mov
mov
or
pop
ror
fadd
(bad)
pushf
mov
push
outs
sbb
ret
in
not
sub
or
cmp
dec
mov
retf
add
xchg
or
adc
push
pop
inc
mov
les
or
repnz
add
nop
iret
ins
push
or
or
ins
or
fimul
scas
cmp
dec
nop
xchg
hlt
pop
ds
push
sahf
inc
add
jmp
xor
add
and
ret
sbb
xchg
pop
icebp
outs
cmp
and
dec
loope
jns
adc
rcl
inc
sbb
xchg
or
mov
mov
clc
push
mov
push
push
cmp
add
aad
add
push
shl
xchg
add
dec
js
cwde
fld
or
pop
dec
or
sub
in
jae
mov
inc
movs
mov
sbb
xchg
mov
test
enter
es
stos
cs
lock
add
lea
enter
movs
adc
in
xchg
fdiv
mov
or
lahf
and
pop
add
test
mov
mov
pop
aaa
and
or
retf
in
add
or
add
popa
sti
mov
push
dec
xchg
ret
mov
test
in
into
ins
push
cli
and
aaa
push
add
and
dec
sub
inc
sbb
nop
mov
(bad)
int3
or
push
fldcw
jb
shr
mov
push
add
into
or
pop
ror
dec
add
add
imul
pop
inc
push
push
mov
mov
(bad)
fbld
pop
or
shl
mov
not
dec
or
je
dec
mov
sub
movs
add
add
xlat
clc
dec
aam
es
in
sbb
or
cmp
icebp
mov
movs
xchg
xor
frstor
fbstp
clc
jmp
and
xchg
test
fwait
jl
div
hlt
cs
push
mov
jns
fistp
jne
hlt
hlt
mov
or
mov
clc
sbb
add
xchg
pop
dec
js
mov
loopne
inc
ins
popa
dec
push
xor
sbb
das
mov
pop
inc
dec
shl
xor
shl
sbb
sbb
and
add
sub
popf
adc
setne
xchg
and
inc
les
xor
or
adc
(bad)
push
cld
cmp
ja
imul
shl
sub
aas
dec
repnz
mov
sbb
leave
test
adc
sbb
or
or
sbb
stos
inc
or
mov
lods
retf
test
test
cs
jne
mov
ror
fcom
pop
xchg
push
mov
add
inc
in
ins
jecxz
cmp
pusha
push
dec
ja
lods
rol
push
inc
xchg
xchg
jmp
add
enter
jp
or
cmps
ins
or
xor
fadd
ret
fmulp
dec
and
push
out
pop
xchg
add
pop
sub
or
int3
lea
mov
or
jmp
and
jmp
or
fldcw
in
cvtps2pi
push
in
cs
outs
les
pop
push
dec
out
inc
jo
jae
adc
cmp
dec
cwde
aad
or
push
or
jl
sbb
mov
ficom
dec
fadd
cmp
call
push
mov
or
pop
in
loop
popa
lea
ret
sbb
dec
xchg
jns
lods
sbb
jl
push
fmul
cmps
and
dec
and
mov
push
frstor
mov
mov
aam
cmp
pushf
outs
or
mov
cmp
add
mov
cmps
or
pop
xchg
cmc
sub
push
out
add
mov
popa
or
js
inc
sub
cmp
data16
lea
dec
shl
cwde
aam
and
ret
mov
popa
or
ret
push
and
mov
shl
mov
je
rcl
sbb
aam
jns
jo
cmp
push
xchg
cmp
jo
fs
ins
inc
mov
lods
imul
dec
outs
or
and
les
cmp
popf
movs
pop
push
xor
stc
mov
dec
adc
xlat
and
inc
pop
add
ins
mov
xor
pop
sbb
adc
test
inc
(bad)
int3
pop
enter
mov
arpl
aam
jne
(bad)
xor
push
xchg
in
popa
or
mov
push
push
inc
(bad)
retf
mov
mov
js
lock
icebp
xor
dec
jmp
push
je
and
cmp
xor
fadd
and
push
mov
add
aam
ret
lea
mov
inc
and
imul
sbb
mov
int
mov
mov
mov
lea
lea
xchg
push
xchg
add
xchg
cs
popa
js
xor
pop
das
nop
xchg
gs
xchg
repz
adc
jo
das
adc
mov
iret
into
xchg
cmp
mov
push
mov
movs
lds
call
mov
dec
cmps
push
or
push
mov
xchg
add
ins
lods
inc
inc
fsubr
adc
xor
mov
cmp
mov
cld
mov
je
cmp
dec
mov
and
pop
cwde
test
adc
push
push
mov
adc
jp
jne
mov
sbb
adc
add
scas
dec
ficomp
xchg
push
call
fdiv
mov
mov
mov
jb
push
push
sbb
xchg
adc
adc
sbb
and
sbb
adc
add
or
mov
jmp
int3
stos
sub
sbb
mov
xchg
push
icebp
and
nop
xchg
mov
jb
jae
pusha
call
lods
inc
adc
nop
pop
ror
sbb
dec
jle
movs
mov
dec
mov
sub
jnp
sbb
xchg
sahf
and
pop
sub
aam
das
lahf
shr
mov
sbb
gs
inc
test
xchg
mov
mov
sbb
jge
jecxz
push
add
ja
gs
cmp
aas
add
jmp
fadd
or
jo
stc
clc
or
nop
or
psubb
inc
out
iret
scas
jecxz
cmp
dec
add
push
mov
mov
dec
sbb
push
cmp
xchg
sub
frstor
mov
test
push
adc
sub
in
retf
cmps
add
add
add
int3
int
cmp
add
leave
jp
and
push
sub
push
mov
mov
jl
cmp
call
out
adc
mov
das
dec
ret
hlt
xlat
mov
cmp
pop
pop
(bad)
push
push
lea
add
test
adc
ficom
pop
cmp
(bad)
and
loope
popa
pop
sub
xchg
leave
inc
aaa
lods
inc
and
xor
iret
das
les
cmp
lea
dec
inc
je
loop
mov
and
dec
lods
iret
pop
or
rcl
cmp
add
or
xorps
and
sbb
icebp
test
leave
xchg
lock
sbb
ffree
add
or
and
pop
push
xlat
mov
dec
or
inc
xor
sub
or
ins
push
mov
test
aas
xlat
cmp
mov
stc
add
add
inc
sbb
test
xor
mov
adc
mov
mov
adc
bound
sti
jnp
dec
or
call
mov
and
push
push
xchg
sbb
es
push
cmp
js
movs
push
xor
mov
loopne
mov
push
dec
hlt
lahf
aam
shl
fmul
ins
(bad)
popa
sbb
pop
les
or
lods
xor
or
add
xchg
jb
je
pop
mov
or
dec
nop
in
xchg
add
inc
sbb
aaa
jo
jnp
sub
or
dec
sub
in
inc
ins
daa
push
or
add
into
or
or
xchg
lock
ss
lods
ror
sbb
and
mov
hlt
rol
sbb
mov
add
add
and
inc
inc
push
arpl
inc
sbb
dec
add
je
in
cdq
jo
mov
push
and
xor
sbb
das
push
add
or
repnz
xor
(bad)
add
je
arpl
mov
ins
cmp
push
pop
repnz
fwait
retf
add
push
adc
pop
and
pusha
add
xor
popf
fcom
or
mov
jo
sub
inc
mov
ins
das
sub
mov
pop
movs
fiadd
adc
sbb
loopne
mov
dec
mov
xchg
jne
lods
xor
mov
xchg
add
push
ficom
mov
ins
inc
sub
pushf
lea
sbb
adc
mov
cmps
jmp
loope
sub
mov
test
or
cmp
pop
ds
inc
pusha
mov
cmps
or
inc
retf
push
push
pop
lock
movs
push
sar
fldenv
pop
imul
jb
mov
bswap
push
arpl
mov
arpl
lods
pop
imul
dec
fimul
or
cli
mov
ror
push
call
inc
or
nop
test
add
(bad)
dec
cld
call
out
dec
arpl
jp
mov
and
or
les
leave
repz
(bad)
jae
adc
fmul
es
push
imul
in
cmp
cmp
cs
adc
mov
out
or
add
xchg
xor
stc
dec
mov
rcl
daa
ret
add
cmp
xchg
push
stos
lods
sti
inc
fdivrp
sub
pop
cdq
icebp
in
mov
movs
mov
mov
into
push
xor
xchg
or
aaa
add
cmc
mov
ret
xchg
fisubr
cmps
xchg
inc
sbb
adc
out
mov
mov
lods
or
mov
or
and
nop
pop
push
add
and
mov
lods
and
or
aas
jp
fdiv
and
mov
popf
(bad)
nop
inc
es
icebp
jo
inc
cmps
add
push
loop
mov
push
push
lahf
push
(bad)
nop
add
add
or
cmp
fs
(bad)
js
int3
dec
cmps
mov
adc
sub
xor
das
dec
push
and
mov
inc
adc
int3
and
inc
pop
call
shl
inc
retf
push
std
out
pop
xor
jge
xchg
add
sub
mov
and
enter
push
scas
push
fidiv
push
xor
ret
sbb
mov
pop
shl
add
scas
pop
adc
test
and
dec
shr
out
sub
push
inc
in
adc
add
movs
xchg
xor
popa
push
in
xchg
push
js
ret
bswap
mov
adc
sbb
sub
and
(bad)
push
or
push
dec
rcr
sar
out
or
push
nop
movs
dec
test
imul
or
xor
cmps
xchg
ds
push
data16
adc
sahf
les
sbb
cdq
and
in
add
sub
out
mov
inc
into
jl
inc
addr16
imul
sub
add
in
push
sub
or
dec
(bad)
lods
add
dec
cld
mov
push
fmul
xchg
pop
add
adc
ret
and
xchg
push
xor
int
or
xor
mov
ds
dec
or
inc
setl
shl
pop
add
ss
(bad)
mov
enter
add
pusha
ret
sub
bound
mov
dec
cdq
enter
adc
sub
imul
xor
das
pop
sub
dec
pop
ret
inc
adc
sbb
fxtract
mov
stos
inc
lahf
push
mov
or
int3
enter
jb
sub
sbb
add
push
sbb
xor
test
sub
ins
inc
dec
call
cmp
es
cmp
xchg
dec
jnp
repnz
sahf
mov
dec
or
ss
xchg
les
push
sub
adc
inc
loope
aaa
iret
adc
enter
push
lods
cmp
iret
xor
push
pop
pusha
add
out
mov
mov
repz
retf
gs
adc
sbb
or
sub
cmp
inc
dec
scas
add
arpl
dec
loopne
inc
aam
imul
clc
bound
fcmove
push
or
pop
dec
cmp
test
inc
dec
dec
dec
or
popa
sbb
lods
xor
push
xor
fisttp
adc
xor
mov
adc
cmp
shr
add
loopne
es
mov
sbb
adc
fwait
and
mov
sub
jecxz
cmp
dec
jne
pop
push
test
inc
enter
adc
or
(bad)
xchg
cld
push
xor
das
jnp
cmc
aad
xchg
jno
cmc
inc
xchg
stos
scas
retf
and
and
fbld
fcomp
jns
pop
cmp
push
push
inc
xor
pop
or
(bad)
xor
nop
and
add
xor
pop
pop
adc
and
rol
xor
ret
push
ins
or
js
inc
loope
fstp
xchg
and
pmaddwd
add
nop
inc
xchg
mov
dec
and
xchg
inc
cmp
xchg
and
retf
sbb
sub
sbb
dec
push
mov
add
pop
xchg
jb
fidiv
cld
push
add
sbb
ins
xchg
pusha
mov
clc
push
cmps
add
clc
test
or
iret
aam
mov
clc
or
sbb
lahf
pop
mov
lods
mov
sub
inc
xchg
push
dec
push
jge
cmps
xor
test
aad
jo
les
xor
sbb
xor
cmp
ins
loopne
bound
or
adc
add
cmovo
dec
mov
inc
and
and
mov
or
lods
inc
call
inc
jmp
sbb
sub
das
lods
adc
clc
or
sub
and
inc
nop
mov
leave
loope
adc
or
inc
xor
ret
stc
pop
repnz
iret
xor
sub
and
xor
dec
add
nop
add
int
or
inc
inc
addr16
push
push
mov
inc
fcomp
or
addr16
xchg
or
inc
sahf
push
fcomp
and
sub
xor
push
lods
sbb
add
xor
push
lea
mov
push
and
push
and
sbb
dec
or
mov
pop
push
js
cmps
imul
sub
lock
and
sbb
mov
xor
xchg
shl
pop
popa
dec
jbe
fld
cmp
jmp
mov
fs
frstor
sub
push
out
in
(bad)
rcl
test
shl
jo
push
and
dec
adc
mov
adc
mov
lea
jge
jne
fadd
(bad)
inc
cli
ret
xchg
les
add
inc
or
push
push
add
and
xchg
push
mov
or
mov
in
xchg
fcomp
fldenv
mov
ret
adc
out
xor
popa
fisttp
shl
test
push
nop
pop
fld
ins
sub
push
es
push
sbb
ins
sbb
pusha
or
push
or
pop
popa
outs
inc
mov
jno
test
dec
aam
cmp
enter
retf
sahf
jmp
imul
test
test
fwait
hlt
cmp
clc
add
jns
clc
add
lods
jb
add
jl
xlat
add
or
mov
dec
aad
push
inc
lea
dec
xor
and
sub
(bad)
rol
pop
adc
mov
xor
mov
and
mov
dec
push
leave
jno
jb
femms
sbb
(bad)
cli
push
and
movs
mov
mov
jne
loop
enter
cmp
lock
push
mov
mov
repnz
mov
aam
jl
nop
xchg
mov
pop
xor
cmp
sbb
rol
bound
push
add
fcom
sbb
mov
pop
xor
xchg
retf
movs
jp
xor
and
adc
add
retf
mov
sub
js
sbb
leave
lea
dec
jmp
pop
jge
icebp
adc
dec
mov
fild
sbb
or
sbb
outs
leave
and
leave
and
in
add
dec
enter
add
mov
xor
rol
add
js
(bad)
push
inc
jecxz
adc
loopne
pop
cmp
push
imul
or
add
or
and
push
rol
or
inc
pop
sbb
pop
and
and
inc
xchg
jns
nop
dec
dec
and
add
cmps
in
push
fnstcw
and
and
ds
or
test
aad
mov
(bad)
mov
mov
or
cli
cmp
mov
nop
push
sub
dec
adc
sub
mov
adc
sar
ret
inc
lock
hlt
or
xchg
sub
lea
xor
mov
sbb
stc
jge
mov
adc
arpl
sahf
sub
jno
sub
jo
ins
mov
jle
pop
mov
call
jge
mov
push
stc
or
adc
add
add
inc
jo
mov
arpl
cmp
mov
jnp
or
pop
or
adc
cwde
or
xchg
iret
pop
inc
xchg
push
add
xchg
push
sub
mov
hlt
xchg
jmp
sbb
jns
push
sbb
push
in
enter
xchg
fldcw
lods
xor
sbb
fnstenv
stos
add
(bad)
enter
mov
push
or
je
sbb
rcr
scas
gs
or
fwait
test
fnstcw
popf
mov
and
rol
lods
lds
je
pop
add
shr
jg
mov
je
es
jmp
add
pop
fnstcw
lea
sbb
xor
pop
jb
dec
sar
push
gs
fnstenv
inc
push
sbb
les
imul
pop
fwait
sahf
fcom
retf
mov
shl
sbb
dec
jnp
retf
sub
(bad)
mov
inc
pop
mov
xchg
jbe
dec
xor
mov
stc
out
inc
xor
push
jge
xor
mov
dec
arpl
or
sbb
punpckhbw
push
mov
cdq
add
ins
cmps
or
jp
lds
dec
loopne
xchg
cdq
sub
inc
dec
mov
and
adc
push
ret
add
clc
jmp
jmp
mov
ins
inc
mov
neg
jmp
adc
fist
jp
jp
imul
jg
sub
dec
lea
sub
mov
xor
fwait
js
nop
dec
sar
and
and
mov
add
cli
xor
sbb
lock
or
jmp
popf
shl
xor
cmps
jle
and
sub
xchg
add
pop
inc
cmp
push
iret
rcl
xchg
sub
xor
sbb
xor
adc
pop
(bad)
cmps
push
js
jnp
pop
sbb
inc
push
xlat
jge
jg
pop
inc
ror
inc
pop
sbb
push
div
mov
mov
daa
cwde
mov
push
aam
movs
scas
dec
push
fcomp
cwde
je
fsubr
add
inc
fadd
pop
lods
mov
lea
inc
sub
push
movs
rol
add
fsub
in
sbb
rol
xchg
or
ins
sbb
(bad)
sub
and
enter
imul
cwde
push
ror
or
mov
dec
push
lahf
xchg
or
add
dec
push
jnp
cmps
mov
ret
fwait
add
cmp
sbb
stc
mov
inc
imul
test
inc
call
retf
mov
cmc
inc
and
xchg
movs
xor
scas
cmps
push
jo
lahf
es
push
xchg
push
mov
or
pop
pusha
push
int
mov
push
push
mov
jnp
push
je
sbb
(bad)
addr16
add
mov
add
dec
inc
aam
and
or
fst
pop
xor
add
mov
add
test
jo
ins
mov
js
or
retf
dec
test
add
dec
outs
xchg
arpl
add
push
sbb
rep
bound
xchg
push
in
nop
and
and
ins
inc
sub
mov
dec
movlhps
add
es
gs
dec
or
push
push
ja
popf
mov
xor
or
fdiv
test
div
mov
jge
dec
mov
aaa
adc
xor
pop
(bad)
cmp
jge
enter
movzx
cmp
jl
into
outs
pop
mov
cmp
arpl
jl
push
clc
stos
or
mov
neg
push
add
push
pusha
aad
dec
adc
hlt
out
fmul
cwde
xor
add
lock
or
leave
and
aam
sub
je
inc
cmp
inc
push
fisub
js
lahf
jmp
pusha
xor
pop
stos
add
or
cs
add
movaps
cmp
and
dec
mov
sub
ret
pop
jl
xchg
retf
and
mov
or
mov
dec
aaa
repnz
ficomp
cmp
inc
push
or
add
dec
test
fwait
xchg
add
add
and
mov
cmp
and
pop
aam
mov
adc
sub
in
push
sub
and
iret
cdq
mov
adc
mov
je
aas
jp
das
mov
xchg
dec
or
stos
call
mov
add
sbb
(bad)
pop
or
add
loope
dec
or
imul
les
and
push
imul
mov
xor
jecxz
push
iret
push
mov
or
cli
sbb
(bad)
ins
mov
pop
mov
or
lds
ret
inc
scas
cmp
cs
fstp
enter
aas
jg
cmp
jb
push
add
mov
call
sub
jnp
push
out
and
cmp
xor
fsub
dec
jecxz
sbb
add
inc
repnz
addr16
ss
or
cmp
mov
add
add
mov
or
and
cmp
push
pusha
and
stos
imul
jg
ror
jp
(bad)
popa
push
cmps
mov
sub
sbb
dec
inc
jne
xor
inc
call
xor
xor
cld
or
aam
sub
sbb
std
xchg
inc
jl
jnp
inc
sbb
jb
dec
xor
xchg
or
ja
retf
movs
mov
pop
pop
pop
mov
lea
push
sbb
into
call
dec
inc
es
js
fs
js
jl
jb
cs
fs
mov
push
sbb
and
xor
daa
ds
and
xchg
sub
mov
data16
cli
lods
xchg
dec
jl
sbb
inc
les
fidiv
xor
lock
ret
fstp
mov
daa
xchg
out
(bad)
fsub
push
adc
and
rol
ret
xchg
inc
add
jne
addr16
fdiv
push
cmp
xor
mov
es
mov
lea
clc
xchg
jo
icebp
sub
sbb
adc
arpl
imul
mov
mov
adc
and
or
push
js
jge
ud0
out
add
cmp
or
push
and
adc
(bad)
int
inc
or
mov
inc
and
pop
or
pop
xor
loope
mov
mov
movs
mov
ds
cmps
stos
push
push
pusha
mov
lods
adc
inc
pop
pop
inc
sbb
popa
xor
adc
mov
push
aas
push
sbb
or
inc
or
daa
loope
add
mov
mov
and
sbb
add
or
cmp
stc
xchg
mov
push
pop
sub
cmps
mov
fist
jae
inc
or
sti
and
sbb
xor
cmp
or
pop
adc
cmp
sub
mov
adc
sbb
arpl
jl
sbb
ins
popa
ja
xchg
das
jb
jmp
push
sub
or
mov
xchg
push
mov
xchg
mov
loopne
ffree
cmp
or
fucomip
mov
std
inc
(bad)
mov
inc
adc
mov
(bad)
dec
xchg
cli
inc
ss
and
push
xchg
push
add
arpl
inc
inc
sbb
imul
sbb
les
or
jno
daa
mov
sti
pop
cmp
je
mov
add
or
cmp
xchg
pop
adc
js
jge
and
push
xor
cdq
push
(bad)
mov
push
neg
dec
les
cmp
mov
fld
and
cdq
(bad)
push
adc
leave
mov
inc
pop
or
test
jnp
push
adc
jmp
mov
inc
inc
inc
add
push
xor
into
icebp
pop
push
adc
xor
or
sbb
push
pop
scas
inc
mov
lock
mov
sub
retf
stos
or
mov
mov
sub
sub
sbb
or
jb
add
std
add
cs
imul
inc
dec
xor
xchg
adc
in
adc
mov
(bad)
enter
test
mov
jne
sahf
fcmovbe
add
ror
xor
adc
push
movs
mov
sub
cmp
adc
add
ja
adc
xor
out
jmp
jbe
sbb
call
sbb
and
mov
or
mov
or
repnz
jne
rol
jg
js
lods
daa
mov
sub
adc
dec
call
push
push
or
mov
rcl
dec
jl
jmp
xchg
and
ret
add
sahf
sbb
mov
mov
adc
ret
add
scas
mov
pop
xor
icebp
aad
or
retf
lea
add
imul
pop
in
xchg
inc
sbb
pushf
mov
ret
adc
cmp
pop
stc
push
popf
lods
das
push
push
cmp
je
dec
icebp
inc
xchg
jp
jno
or
add
dec
xor
pop
and
push
(bad)
push
sar
ss
add
add
sub
xor
sbb
lock
jp
clc
sbb
loope
fwait
jbe
lock
lds
lock
inc
sbb
inc
retf
adc
add
pop
int
mov
xchg
or
retf
xor
int
es
push
mov
daa
js
jl
adc
out
sub
sub
sub
jae
xchg
xchg
push
or
sbb
in
or
or
push
sbb
cmp
push
out
aam
iret
jge
jmp
cmps
pop
in
xchg
xchg
mov
dec
push
push
cmp
jbe
mov
xlat
push
mov
cmc
fdivr
xchg
inc
xor
lods
jae
bswap
and
loope
sbb
into
adc
rcl
enter
test
mov
sbb
test
adc
inc
add
cmp
sub
cmp
popa
mov
pop
add
js
adc
je
add
lock
call
jge
aaa
inc
(bad)
xchg
pop
mov
nop
add
arpl
or
and
or
adc
ror
gs
xchg
sub
xor
idiv
pause
data16
dec
pushf
or
sbb
add
adc
cmp
push
add
mov
xchg
cmp
and
mov
lahf
shl
push
test
je
mov
cmc
test
inc
and
rcl
mov
mov
dec
in
jns
sub
into
pop
mov
lods
pop
das
mov
cdq
movs
mov
shl
movs
rol
test
cmp
fnsave
dec
in
lods
mov
cwde
mov
cmc
std
mov
in
fld
lea
gs
js
jmp
mov
dec
(bad)
and
cmp
jl
adc
cwde
inc
push
dec
mov
xor
pop
add
scas
sub
add
arpl
(bad)
jmp
or
sahf
aas
xchg
cwde
cmp
into
in
fdivrp
or
push
jo
xchg
pop
(bad)
mov
xchg
xor
jmp
ss
dec
pop
xchg
mov
jp
xor
ficom
jb
fnstenv
fsubr
outs
xor
push
sbb
add
pusha
mov
push
call
jmp
push
adc
ja
push
pop
push
mov
mov
ins
shl
adc
sub
ds
xchg
rcl
adc
jmp
sub
jl
sub
(bad)
daa
mov
xor
movs
iret
push
sub
jg
fcom
inc
inc
push
es
pop
dec
cmc
or
cwde
push
xor
and
jb
adc
adc
and
dec
xlat
lods
sbb
pusha
cs
add
mov
daa
aaa
or
neg
jo
lods
push
jg
push
test
or
iret
sub
es
repz
push
fcom
shr
hlt
inc
add
mov
jl
cmp
or
sar
xor
add
test
sahf
imul
(bad)
jne
movs
test
cmps
imul
adc
xor
addr16
rcl
push
pop
sbb
pop
mov
adc
iret
pushf
mov
cmp
sub
dec
or
mov
cmps
mov
repz
movs
and
push
addr16
xor
jo
mov
rcl
arpl
pop
aam
push
loop
cld
icebp
not
cwde
adc
push
movs
and
dec
or
dec
adc
(bad)
or
and
icebp
lea
add
or
jmp
shr
dec
inc
inc
push
jmp
aaa
push
pop
xor
sar
sbb
mov
push
scas
test
push
push
sbb
jmp
pop
push
inc
mov
xor
jle
inc
test
call
sbb
push
mov
add
nop
leave
sbb
out
jo
sbb
leave
pusha
nop
call
ret
mov
out
div
xchg
mov
dec
add
or
xchg
jne
cdq
push
and
cmp
cmp
test
inc
push
ja
cmp
loopne
fcmovb
ja
jb
or
inc
adc
xchg
push
and
mov
pusha
adc
adc
imul
or
popf
sbb
and
and
lock
jbe
sub
adc
push
or
mov
ja
es
dec
popf
dec
push
not
mov
jo
xchg
mov
stos
movs
mov
or
call
dec
add
repnz
movs
or
lods
aam
mov
dec
dec
add
ret
or
lods
jnp
and
jne
repnz
ret
jmp
mov
nop
mov
arpl
mov
inc
sbb
xchg
cmp
loopne
adc
in
outs
mov
jb
or
push
push
idiv
into
jb
loope
popf
mov
rcr
retf
mov
or
test
iret
xchg
mov
scas
or
sub
pop
into
or
xchg
fild
mov
sbb
inc
test
push
cmp
add
mov
push
mov
and
mov
mov
mov
dec
leave
sahf
and
xchg
push
jo
sbb
adc
xor
retf
rep
mov
mov
fnstenv
rcl
add
les
mov
add
or
gs
cmp
pop
sub
ins
shl
ds
pop
aas
daa
mov
xor
push
fwait
cmp
push
rol
inc
dec
xchg
mov
fisttp
add
xchg
pop
popa
cmp
mov
and
pop
dec
xor
and
pusha
sub
gs
push
fstp
and
pop
or
rol
and
xchg
inc
xchg
push
fsub
outs
push
loope
add
cmc
inc
sub
jge
adc
or
loope
or
js
pop
cmp
sbb
icebp
adc
and
mov
adc
(bad)
and
or
adc
mov
(bad)
and
dec
mov
and
push
push
test
mov
push
sbb
xchg
test
inc
dec
pop
mov
lahf
add
add
ficom
lahf
aaa
mov
rcl
sub
jmp
je
cli
and
pushf
push
imul
je
imul
ins
call
das
dec
push
inc
mov
sub
sti
add
push
adc
adc
stos
scas
pop
popa
add
iret
pop
(bad)
pop
add
aad
mov
dec
popf
test
arpl
sbb
jmp
fsub
sub
in
out
test
adc
sub
jle
xor
add
mov
dec
jp
rcr
pop
pop
pop
sub
aas
sub
test
ss
mov
daa
dec
xchg
lahf
push
lods
loopne
fimul
cmc
dec
or
std
xchg
inc
sub
mov
dec
les
or
add
pop
xor
xor
mov
xlat
push
xchg
jae
jmp
aas
adc
xor
ja
cmps
jmp
dec
pop
popa
retf
adc
xor
mov
push
inc
cli
out
sbb
popa
jne
in
fcom
xor
mov
outs
sub
test
sub
push
push
inc
(bad)
lods
adc
loope
(bad)
rcl
and
rcl
ret
pushw
mov
popa
(bad)
(bad)
jmp
xor
inc
fadd
add
sbb
gs
mov
movs
dec
xlat
xor
mov
lea
sbb
mov
dec
add
xor
adc
add
dec
add
sub
xchg
cmp
addr16
sub
push
mov
or
jl
jle
(bad)
js
mov
ja
sbb
dec
inc
enter
add
or
sub
add
lahf
or
aam
adc
pop
rcr
fisub
sbb
add
fs
push
sub
push
enter
outs
dec
jle
cmp
jl
add
add
cs
add
cmp
xor
rcl
pop
or
push
sbb
pop
je
(bad)
xchg
jno
movs
nop
add
inc
pop
pop
das
dec
mov
mov
xchg
mov
mov
cmps
imul
mov
and
jmp
adc
inc
add
sub
xlat
movs
lea
adc
adc
sub
js
sbb
and
or
xchg
inc
hlt
fs
das
ins
cmp
xchg
and
loope
in
inc
test
inc
in
test
add
clc
xchg
sub
mov
lods
sbb
xor
xchg
or
ins
sbb
adc
pop
jne
imul
mov
icebp
pop
or
jmp
aas
add
inc
into
push
cdq
xchg
adc
cmp
mov
mov
push
mul
pushf
adc
xor
or
lock
fs
or
xchg
cld
add
sti
aaa
push
jp
sub
cmp
cmc
lods
lds
or
adc
jne
and
outs
fld
repnz
ret
out
sbb
inc
push
stos
push
sbb
or
dec
and
adc
ja
push
add
xor
push
add
pop
movs
stc
jbe
add
dec
movups
cwde
add
jge
jbe
outs
push
repz
mov
pop
leave
or
popf
je
dec
inc
dec
push
loope
or
or
xchg
or
inc
(bad)
pop
aaa
movs
je
call
bound
push
pop
shr
(bad)
fiadd
jg
add
mov
or
or
sar
sub
mov
add
mov
or
jle
and
push
push
rol
dec
cmp
call
shl
or
mov
pop
js
sub
inc
into
ret
je
xor
fwait
push
cmp
push
mov
mov
rcr
fidivr
mov
cmp
mov
inc
adc
jnp
sub
jns
into
add
and
(bad)
mov
ins
and
je
mov
loop
icebp
and
bound
bound
pop
or
cmp
pop
xor
adc
jno
and
adc
cmp
mov
test
inc
pop
aaa
ins
add
fld
adc
sbb
lods
dec
mov
push
fwait
pop
cmc
adc
pop
xchg
push
push
call
and
aad
or
add
lock
inc
adc
imul
nop
sub
pusha
scas
cmps
addr16
mov
push
test
xor
addr16
push
mov
sbb
dec
inc
mov
xor
ss
inc
test
fs
xor
retf
adc
pushf
xor
jno
test
xor
dec
out
lods
cdq
mov
xor
fisub
push
loop
add
mov
pop
adc
into
cmp
aam
xor
out
mov
push
sub
mov
push
imul
mov
(bad)
cli
into
sub
(bad)
stos
jmp
and
pop
fwait
mov
pop
fsub
cmp
mov
dec
(bad)
push
loop
sub
or
mov
adc
fs
dec
stos
setns
push
ret
mov
js
fisubr
and
rcr
dec
jp
inc
scas
(bad)
pop
pop
fadd
or
adc
mov
add
(bad)
xor
jmp
mov
test
cs
popa
or
dec
mov
or
jns
sbb
(bad)
jmp
add
sbb
stos
int
inc
test
pop
push
(bad)
push
add
push
icebp
inc
xor
dec
lea
sbb
jmp
shr
aam
rol
hlt
mov
cmps
jmp
ins
clc
je
xchg
pushf
sub
inc
xchg
cs
lods
sbb
stos
cmps
and
(bad)
iret
or
dec
outs
sub
sbb
enter
and
pop
mov
retf
dec
push
or
jecxz
adc
cs
pusha
add
jbe
scas
and
jmp
add
femms
add
lods
push
sub
mov
nop
mov
imul
dec
dec
dec
jae
xor
dec
dec
dec
dec
mov
retf
cwde
shrd
movlps
or
shl
retf
pop
inc
js
pop
retf
adc
jecxz
xchg
lea
xor
dec
loope
cmp
mov
and
and
arpl
and
jne
and
xlat
(bad)
rol
inc
push
es
push
mov
clc
jle
push
dec
and
pop
xchg
(bad)
fmul
test
outs
popa
push
mov
ss
jle
(bad)
jmp
sbb
sub
xor
inc
leave
ret
xor
push
adc
or
in
test
pusha
sbb
cmp
inc
scas
out
mov
sahf
retf
ins
sub
sub
cmps
call
test
shr
or
jnp
movs
jnp
or
clc
lock
movs
lock
mov
fs
ins
pop
or
xchg
leave
and
mov
dec
clc
in
adc
in
push
xchg
mov
shr
arpl
mov
push
adc
int3
jg
dec
call
add
and
push
or
or
pop
mov
adc
push
dec
vpand
push
repz
adc
je
mov
or
add
mov
and
push
and
lods
pop
mov
arpl
inc
mov
add
fisttp
test
add
xor
add
jo
push
adc
xor
test
push
push
jge
add
add
out
aaa
mov
inc
outs
cs
pop
iret
cmc
and
in
pop
js
retf
jno
(bad)
ror
or
jnp
xchg
lea
pop
stc
ds
xchg
inc
push
or
das
imul
enter
neg
in
dec
sti
std
and
add
xchg
lock
lods
cmp
jne
add
cdq
adc
add
and
cmp
lods
sub
pop
add
fcomip
sti
pushf
mov
psubq
sbb
out
shl
loope
lock
inc
and
add
push
add
sbb
or
inc
xor
scas
dec
dec
test
cmp
mov
add
loopne
pop
mov
push
adc
int3
aas
inc
xchg
sub
sbb
adc
mov
push
mov
push
jle
test
test
xor
mov
(bad)
call
mov
jnp
add
mov
inc
mov
add
out
xchg
push
push
adc
push
or
pop
sbb
iret
ret
rol
inc
or
jge
fmul
or
adc
pop
(bad)
ins
and
out
popf
push
sar
or
pop
mov
and
ror
stos
pop
or
cmp
adc
sbb
sbb
movs
imul
or
int
xor
es
push
retf
push
dec
sbb
or
or
add
and
sbb
dec
je
add
fsubrp
mov
pop
pop
daa
adc
cmp
push
ds
shr
and
add
dec
add
pusha
adc
or
pushf
add
loop
pusha
and
cmp
in
daa
add
dec
xor
dec
cmp
adc
add
lock
mov
inc
cmp
sub
jo
sub
jl
mov
or
dec
cmps
ins
mov
or
xor
inc
mov
in
inc
ins
mov
out
and
mov
cld
adc
add
cli
sbb
xor
and
sub
mov
jnp
shl
and
xlat
into
push
adc
add
push
push
shr
mov
jl
sbb
adc
or
dec
add
add
push
inc
jl
mov
(bad)
xor
test
inc
fidivr
push
dec
jno
je
inc
inc
or
xor
pusha
mov
bound
clc
imul
outs
add
call
mov
imul
mov
(bad)
cmp
xchg
(bad)
pop
pop
lahf
sbb
lock
sub
inc
cmp
aaa
je
adc
sub
mov
mov
and
sbb
test
cmp
jae
sub
xchg
das
stos
mov
mov
add
dec
in
int
jns
inc
sub
not
mov
test
xchg
ds
jmp
push
loop
mov
pop
mov
jno
sbb
and
jne
(bad)
xchg
fldcw
in
in
sub
mov
dec
loopne
stos
inc
add
cdq
and
sub
cdq
test
add
loop
push
into
jo
ret
xor
cmp
mov
push
imul
lock
mov
callw
hlt
xchg
or
loope
dec
js
push
jo
mov
adc
push
call
retf
or
dec
sbb
inc
pushf
enter
sbb
or
cmp
mov
pop
pop
xor
mov
mov
nop
inc
ins
cmc
adc
mov
cmps
fldenv
pop
mov
je
add
add
pusha
inc
sbb
xchg
lods
(bad)
movs
ret
pop
nop
sbb
add
retf
or
int3
dec
sub
mov
les
pop
and
rcl
add
mov
sar
js
xchg
cmp
cmp
mov
call
rol
mov
test
or
mov
rol
ror
and
pushf
xchg
xchg
loopne
in
mov
mov
pop
adc
push
mov
cmp
jne
or
out
and
es
mov
jp
push
lock
sub
pusha
and
mov
lea
mov
movs
repnz
sub
movs
xor
(bad)
cmp
and
xchg
mov
push
jp
out
ins
fmul
retf
mov
mov
inc
adc
push
push
xchg
es
adc
pop
outs
adc
push
ret
and
push
imul
lods
in
adc
sar
addr16
lods
push
mov
cmp
popa
and
or
inc
imul
out
je
adc
mov
add
mov
loop
push
push
add
add
test
mov
(bad)
out
not
sahf
popa
lahf
sub
jnp
push
shl
and
pop
pop
inc
dec
pop
(bad)
mov
add
out
inc
xchg
sbb
jno
bound
cmc
adc
fs
jne
sub
jle
pop
mov
push
adc
mov
mov
push
in
add
cmp
add
or
je
les
call
sub
call
and
pop
movs
xor
or
rcr
dec
xchg
mov
xchg
push
test
pop
xor
adc
and
sbb
push
pusha
or
or
mov
inc
xchg
inc
arpl
outs
les
sar
inc
cs
std
pop
and
fsubr
pop
sbb
pop
sub
sub
push
pop
imul
out
mov
fwait
or
(bad)
push
sbb
mov
inc
jl
sbb
pavgw
mov
pop
sub
sub
push
or
add
jmp
in
xor
sub
add
daa
sar
mov
(bad)
jne
jmp
test
dec
lahf
ja
add
test
add
test
mov
imul
sbb
idiv
push
xor
mov
push
jne
add
test
ret
jle
pop
pop
jp
add
add
data16
out
xor
mov
popf
icebp
idiv
jecxz
cmp
dec
push
jg
pop
cmp
mov
stos
in
and
lds
leave
adc
shr
sar
push
fmul
xchg
xor
and
adc
inc
lods
test
and
push
(bad)
jmp
hlt
sbb
push
pop
inc
dec
sbb
dec
test
imul
and
pusha
mov
xor
add
or
and
dec
adc
pop
rol
cdq
dec
fisttp
cdq
(bad)
pusha
outs
inc
and
adc
mov
sub
enter
aaa
les
cld
test
pop
jmp
cld
lods
cs
test
inc
mov
dec
(bad)
dec
lahf
mov
mov
adc
adc
add
call
std
inc
jne
fiadd
sub
and
and
js
push
xchg
outs
outs
xor
jp
cmp
es
push
imul
add
push
pop
imul
sub
mov
inc
les
mov
dec
add
jb
push
lods
rol
sub
push
pop
push
std
cmp
xchg
sbb
mov
test
push
mov
adc
jmp
rcl
inc
test
and
pop
stos
inc
pop
dec
std
pop
nop
js
cmp
jne
and
xchg
xor
push
ss
mov
shl
or
sahf
and
and
adc
ret
(bad)
popf
(bad)
xor
ret
call
or
or
mov
fwait
inc
or
ror
jbe
dec
inc
or
ret
xor
jmp
fcomp
or
adc
in
ret
and
aas
sbb
mov
in
ret
call
mov
ror
pop
add
adc
add
addr16
adc
ret
or
and
mov
push
mov
add
mov
gs
leave
mov
sbb
add
add
add
mov
xor
xor
es
stos
or
hlt
daa
pop
dec
popa
or
movs
popf
add
pop
(bad)
cmp
adc
mov
les
(bad)
dec
sbb
or
sbb
and
or
push
adc
pop
push
jne
cmp
push
inc
shl
add
js
add
add
mov
push
hlt
push
aaa
dec
inc
add
shr
add
xchg
dec
xchg
or
or
dec
mov
adc
cmp
xchg
pushf
mov
fcmovnb
das
rol
or
add
sbb
add
push
jmp
jp
je
add
mov
push
add
imul
sub
repz
sar
pop
sub
in
(bad)
sbb
mov
or
add
xchg
add
inc
mov
inc
mov
and
mov
mov
push
dec
pop
jle
push
push
pop
jae
ins
adc
fdivr
shl
inc
mov
sub
or
or
xor
imul
xor
(bad)
call
dec
ret
sbb
inc
adc
mov
retf
cmp
sbb
cmp
imul
dec
sahf
mov
mov
mov
xchg
add
imul
or
(bad)
rcr
shl
adc
adc
xchg
ins
js
or
inc
cmp
inc
clc
dec
and
xchg
add
sub
adc
and
pop
je
cdq
sbb
stc
inc
cmp
mov
ja
add
adc
or
adc
fiadd
inc
mov
mov
addr16
(bad)
in
test
jne
or
xchg
adc
xor
mov
lods
and
and
and
pop
js
push
sbb
jp
ins
cmp
popf
lods
mov
add
jle
dec
mov
or
stc
test
int
or
shr
sbb
dec
in
add
and
rcl
and
add
or
and
cmp
loope
les
or
sar
mov
jae
mov
mov
aad
pop
arpl
adc
movs
rol
pop
push
mov
inc
adc
jp
movs
jnp
push
outs
push
nop
lea
inc
rcpps
inc
scas
dec
into
or
inc
adc
lods
pop
add
loopne
xchg
cmp
add
jg
js
and
sbb
mov
test
push
pop
jne
jbe
clc
adc
movs
adc
rol
mov
and
std
mov
es
or
shl
movs
and
outs
adc
imul
adc
dec
bound
in
mov
or
add
mov
popa
adc
xor
test
sub
jl
xchg
dec
fdiv
pop
xlat
pop
gs
ret
sub
xchg
sbb
lods
dec
and
retf
inc
push
mov
loope
adc
jns
mov
loope
push
jb
mov
xchg
adc
fldcw
adc
clc
ror
dec
add
bound
stos
push
and
imul
and
pop
xchg
pop
push
pop
dec
sub
push
or
jmp
inc
jmp
inc
or
cmps
jp
xchg
push
das
jmp
push
mov
or
xor
dec
push
(bad)
repz
mov
inc
mov
rol
xchg
push
(bad)
or
mov
sbb
or
or
xchg
cmp
ins
cmps
add
pop
adc
and
lock
je
in
sar
je
dec
adc
sahf
mov
and
dec
pusha
jnp
mov
xor
call
loopne
cmps
or
and
jge
imul
dec
out
in
test
out
(bad)
push
frstor
popa
mov
popf
add
inc
fnsave
fstp
add
data16
aaa
inc
pusha
in
push
mov
sbb
adc
and
bound
mov
sbb
shr
and
add
inc
cmp
pop
icebp
push
add
ins
out
inc
scas
adc
push
jns
jg
jb
mov
adc
repz
and
lock
push
adc
mov
lea
retf
push
imul
jo
or
push
call
and
sub
push
shl
sub
xchg
push
push
add
jecxz
push
fld
or
loopne
dec
lods
adc
mov
mov
shr
mov
enter
adc
pop
or
lods
movs
movs
add
pop
dec
sbb
pop
add
inc
out
rol
mov
stos
in
push
sub
sub
test
loopne
sub
mov
or
lock
pop
imul
popf
dec
and
movs
and
cmp
loope
pusha
shr
jnp
push
xor
adc
adc
inc
je
mov
test
pop
mov
aas
xchg
jo
sar
add
lea
push
push
adc
pop
inc
test
push
push
loop
pusha
push
sbb
xchg
xor
sub
push
sub
or
or
bound
mov
out
fdivr
push
ret
fdiv
mov
lods
push
js
stos
loopne
cmp
mov
data16
sbb
popf
cmps
push
inc
stc
inc
jp
retf
in
hlt
imul
push
out
scas
add
inc
jmp
xor
je
dec
je
jecxz
fild
ret
inc
jno
sbb
jmp
shl
or
cmove
cmp
aaa
dec
mov
popa
nop
cmc
xlat
les
push
call
xor
in
lock
dec
xchg
rcr
inc
inc
test
xchg
outs
rcr
dec
jle
mov
daa
pop
or
jg
xor
gs
inc
mov
sbb
retf
sbb
add
jmp
mov
and
das
mov
test
fs
mov
or
mov
push
pop
jl
cs
cmp
in
xchg
pop
push
(bad)
jle
push
arpl
js
scas
add
add
add
add
es
pop
xlat
cmp
add
cmp
push
shr
fist
jo
rcl
and
jl
in
xor
xlat
pop
push
lods
cwde
or
inc
mov
inc
adc
test
sbb
and
scas
and
ret
aaa
jo
(bad)
or
push
adc
cwde
rcr
add
adc
pop
push
icebp
popa
sbb
xor
inc
pusha
js
push
mov
cmp
lds
loope
inc
inc
mov
jns
or
daa
and
cld
mov
xor
push
xchg
test
cmp
push
jmp
dec
jmp
mov
and
xor
xor
sbb
test
test
cmp
push
pop
add
xor
or
adc
call
pop
sbb
lock
jl
and
retf
dec
movs
jne
jbe
outs
dec
mov
adc
retf
jno
push
mov
inc
xchg
adc
jmp
aaa
xor
cmp
xor
fiadd
cmp
gs
ins
cmps
retf
not
inc
mov
fcomp
xor
int
sub
lahf
js
inc
adc
mov
push
fcmovu
sub
imul
jmp
fs
rcl
ret
or
xor
ror
mov
daa
sbb
mov
sbb
cwde
xchg
xor
(bad)
sub
loopne
adc
add
or
add
push
inc
add
mov
ja
xor
nop
popa
test
xchg
add
mov
icebp
adc
test
cs
inc
and
adc
ja
mov
inc
inc
pop
pop
rol
fiadd
loopne
icebp
jno
add
fucomip
nop
mov
fdivr
and
mov
cli
and
js
push
and
sbb
cdq
or
jmp
lea
push
push
push
fwait
xor
shl
mov
mov
or
and
or
pop
loopne
mov
into
test
mov
test
shr
scas
adc
pop
lock
xor
and
aaa
adc
push
or
mov
push
cmp
test
dec
mov
loope
inc
push
jnp
xor
dec
pop
mov
or
push
xchg
icebp
popa
lahf
push
push
mov
dec
outs
and
sbb
xor
lods
pop
les
xchg
rol
pop
inc
dec
or
mov
retf
arpl
in
es
adc
jl
sub
hlt
mov
mov
icebp
aaa
ins
mov
ins
cmp
mov
xchg
adc
shl
fild
sbb
sbb
and
pop
mov
xor
push
test
gs
mov
(bad)
mov
cmps
in
xchg
adc
in
call
adc
or
test
inc
imul
adc
adc
test
enter
push
sbb
push
stc
pop
pop
shl
mov
jmp
nop
adc
pop
repnz
lods
push
(bad)
imul
mov
ins
or
xor
jmp
add
jne
leave
je
hlt
inc
mov
push
dec
call
loopne
pop
pop
mov
jl
leave
add
cmp
out
into
mov
sub
ins
(bad)
or
dec
ret
sbb
xchg
push
(bad)
xchg
xor
jae
push
mov
add
add
out
cmp
add
xchg
and
push
fs
push
bound
dec
std
xor
inc
pop
add
das
or
sub
jle
cmp
ins
adc
and
mov
imul
jmp
sar
out
imul
sbb
push
adc
shl
add
and
(bad)
mov
pop
fisttp
jo
dec
adc
dec
retf
pusha
lock
jmp
mov
xchg
mov
jge
iret
push
movzx
dec
adc
jecxz
mov
sbb
dec
int
inc
jmp
add
inc
jmp
or
add
adc
int3
dec
inc
cmp
jo
or
cli
pop
push
xchg
push
push
sbb
mov
mov
xchg
pop
or
test
push
jno
mov
mov
ret
or
or
push
mov
fisub
cdq
dec
(bad)
es
mov
ret
test
ret
je
pushf
push
or
pusha
loope
cmp
sub
add
or
adc
sbb
push
xchg
add
or
mov
push
mov
loop
nop
sbb
pop
fmul
pop
aam
add
aam
(bad)
shr
sub
and
xor
add
and
pop
out
push
sub
add
inc
add
and
add
cmp
sets
ror
and
cmp
out
xchg
add
pop
cdq
or
ds
push
xchg
xchg
cmc
in
push
inc
and
mov
and
ins
mov
aam
cmp
dec
bound
and
pop
movs
xor
clc
push
int
add
ja
dec
sbb
or
or
and
mov
test
and
outs
fidivr
inc
push
inc
or
or
add
or
and
lea
dec
sti
iret
add
push
fucompp
cmps
pop
fdivr
push
adc
shr
adc
dec
aam
and
je
cmp
fsub
pop
pop
in
loopne
fwait
cmp
(bad)
fmul
mov
dec
jmp
je
dec
jnp
sub
ret
mov
mov
inc
xor
aam
and
adc
cmovns
ins
add
and
pusha
nop
dec
mov
mov
jne
fadd
ror
mov
(bad)
(bad)
gs
cmp
cmp
pop
fmul
adc
push
scas
fmul
or
rol
(bad)
idiv
mov
jb
mov
inc
cmp
cdq
jbe
(bad)
mov
mov
inc
jnp
mov
mov
push
inc
clc
jp
pusha
mov
movs
add
xchg
add
js
(bad)
mov
movs
ror
jno
xchg
jo
mov
or
ret
pop
dec
pop
sub
mov
jg
out
sub
icebp
push
iret
sbb
les
lods
shl
add
mov
xor
dec
retf
lods
movs
xor
pop
add
repz
push
out
push
xor
add
inc
aam
pandn
push
cmp
xor
adc
mov
(bad)
int3
dec
es
pop
add
mov
cs
pop
scas
sahf
or
add
push
rcr
add
pop
lods
cmps
push
fld
pop
sbb
xor
sub
das
(bad)
or
and
xchg
jnp
xlat
or
dec
pusha
je
push
out
mov
lock
inc
mov
xor
cdq
fcmovne
es
adc
sub
cmp
ficomp
sbb
adc
test
jmp
sub
dec
mov
cmp
fld
or
or
test
add
adc
enter
and
jecxz
or
adc
xor
shl
mov
and
out
pop
test
test
push
sti
xor
iret
sub
dec
mov
scas
add
sbb
ins
(bad)
jge
out
sbb
mov
jge
pop
fwait
pushf
neg
jge
push
pop
call
push
mov
imul
test
sar
add
nop
inc
mov
xor
cli
xor
dec
addr16
mov
add
das
push
cmps
sbb
mov
xor
add
scas
data16
call
unpckhps
mov
adc
and
ss
xchg
xor
iret
dec
in
xor
adc
jmp
ins
cwde
mov
or
lods
(bad)
iret
adc
pushf
xchg
out
jno
leave
mov
ret
out
mov
int
out
pop
wrmsr
data16
jae
in
inc
adc
sbb
mov
pop
adc
jne
icebp
jne
icebp
cmovle
(bad)
leave
xor
dec
dec
arpl
daa
enter
fild
out
mov
inc
dec
xor
jbe
and
pop
inc
int
adc
rol
adc
dec
add
or
dec
add
jne
sub
fnstcw
fsub
je
or
cmps
pop
in
dec
or
dec
iret
(bad)
adc
mov
aam
(bad)
in
scas
or
scas
push
xchg
ret
in
inc
jb
stos
nop
mov
jl
js
xor
push
jp
or
fiadd
jns
xchg
jecxz
xchg
add
add
inc
inc
dec
enter
in
add
push
mov
or
xchg
xlat
out
test
in
iret
dec
aas
neg
aaa
xor
mov
gs
setl
add
push
xchg
add
iret
ret
loope
push
push
push
in
cld
nop
jo
and
inc
jbe
add
mov
and
adc
std
enter
add
call
ja
aas
in
mov
or
imul
cmp
call
or
lea
push
sub
ret
js
push
push
pushf
cmp
inc
add
adc
dec
retf
gs
add
js
push
cdq
xchg
sub
push
mov
or
pop
or
in
or
loopne
aaa
add
arpl
and
adc
arpl
bound
scas
pop
push
add
ds
jno
scas
icebp
ret
icebp
or
inc
fstp
rol
adc
ins
adc
and
ja
loopne
or
mov
inc
xchg
dec
shl
sub
addr16
test
out
push
aaa
loopne
mov
enter
test
test
xor
loopne
pop
and
outs
imul
das
push
loopne
push
adc
cmps
sub
cmc
mov
sub
push
inc
sbb
push
push
or
sub
inc
cmp
test
adc
xchg
inc
jno
mov
mov
cmp
repnz
sbb
dec
and
mov
or
adc
cmp
or
dec
adc
cs
sub
sub
or
fcmovb
jle
icebp
xchg
(bad)
sbb
and
mov
jle
push
cmp
sub
or
lock
or
lea
clc
std
or
cmp
dec
or
push
inc
popa
mov
or
mov
adc
xchg
xchg
in
not
or
adc
add
rcr
das
data16
xlat
dec
test
gs
cmp
pop
fdivr
clc
je
dec
cmp
add
mov
mov
dec
retf
dec
ins
loope
jp
imul
cli
lods
or
sar
test
or
push
shl
adc
call
and
repz
add
jmp
(bad)
or
lahf
aam
mov
test
mov
adc
sbb
(bad)
test
dec
push
data16
lods
pop
in
mov
hlt
push
sub
or
add
and
xchg
pcmpeqb
movs
mov
fwait
test
push
add
inc
jae
mov
cmp
push
(bad)
fnstenv
jne
mov
cwde
(bad)
mov
xchg
test
adc
imul
test
stc
or
mov
test
sub
sub
jp
mov
mov
mov
mov
push
jmp
cmps
mov
retf
stc
fcompp
in
jno
push
movs
sbb
push
or
data16
clc
inc
sub
adc
cld
add
cmp
cmp
adc
cli
leave
or
add
sti
jp
inc
sub
lods
add
inc
mov
sbb
ins
jo
mov
rol
rcl
ins
loopne
sbb
and
add
ret
and
imul
mov
pop
pop
jne
out
adc
jg
lds
pop
adc
enter
jo
pop
call
push
loop
add
rol
xchg
arpl
cmp
or
inc
loop
rcr
jle
mov
std
push
ret
sti
sub
fnsave
xor
adc
fdiv
sbb
adc
push
cli
adc
cs
inc
cmp
and
clc
js
scas
mov
fadd
jne
nop
xor
cs
mov
lods
dec
jge
adc
add
and
cmps
adc
shl
lds
inc
div
test
xchg
jne
test
inc
std
mov
bound
mov
shl
pop
ret
adc
mov
jl
jl
mov
rol
push
lea
aaa
sar
jnp
and
sbb
lods
lods
cmp
push
and
lea
or
pusha
int
imul
fs
loope
mov
cmp
iret
sar
cmp
es
and
pop
test
inc
mov
push
js
pushf
test
fwait
inc
rcl
clc
sbb
pop
sti
adc
dec
hlt
dec
dec
lea
pop
sbb
push
imul
sar
mov
rol
xor
adc
and
lds
imul
jg
push
mov
mov
test
test
push
pop
not
shr
adc
call
ret
ror
pop
imul
dec
adc
inc
or
retf
mov
dec
mov
rcl
and
and
cmp
outs
add
in
loopne
mov
xor
push
mov
loope
ss
pop
sbb
push
mov
lock
cmp
mov
imul
and
xchg
sbb
nop
movs
pop
push
inc
pop
push
inc
test
mov
fild
fs
pusha
sar
jl
push
outs
sbb
les
push
cdq
ins
sti
xor
cld
inc
or
lock
cmp
jecxz
rol
nop
rcl
jb
je
inc
js
fwait
and
aaa
cmp
mov
das
mov
cld
mul
(bad)
push
loope
inc
and
add
pop
sbb
xor
fld
pop
mov
out
aaa
sbb
inc
mov
out
cmp
or
xchg
xor
jecxz
into
push
test
jns
test
push
imul
push
xchg
rcl
fwait
pop
imul
mov
cdq
in
push
pop
push
pop
dec
mov
sbb
shl
jg
lods
(bad)
(bad)
popa
leave
arpl
repnz
mov
sbb
fdiv
and
in
jmp
mov
mov
jle
cmp
leave
enter
jb
dec
sub
and
adc
add
arpl
jp
xlat
dec
mov
jl
or
hlt
mov
dec
xor
push
xor
mov
or
or
push
inc
icebp
jno
push
cdq
jnp
mov
leave
add
mov
in
movs
mov
add
add
push
inc
fwait
sbb
lods
in
adc
jecxz
test
test
jo
neg
dec
push
sub
cmp
or
and
ins
cmp
sub
inc
dec
ins
mov
pop
dec
jle
push
xchg
jmp
jne
je
les
jge
fwait
dec
out
movs
lods
xor
int3
sbb
cdq
jle
add
(bad)
in
mov
add
or
inc
(bad)
add
pusha
aaa
test
xchg
shl
jl
sbb
retf
and
test
lods
fwait
sub
je
xchg
leave
push
push
push
div
cmp
test
addr16
or
or
punpckhbw
push
in
adc
sbb
scas
nop
lods
scas
pop
mov
cld
push
add
push
xlat
iret
push
mov
pusha
push
mov
add
loopne
add
test
xchg
or
gs
dec
dec
dec
and
es
add
push
and
mov
cdq
mov
int
mov
call
add
lods
xor
fs
push
push
mov
fsubr
mov
cmp
or
sub
ins
loop
xchg
push
test
add
jge
les
retf
jne
mov
jmp
movs
jmp
outs
xlat
add
cdq
mov
sbb
xor
adc
add
imul
icebp
xor
add
add
pusha
scas
in
in
cwde
loope
add
jae
push
rcl
pop
inc
mov
pushf
rol
xor
or
inc
es
push
int
push
lods
(bad)
out
xchg
adc
adc
mov
xchg
js
fcmovnu
ss
fld
jb
cmp
je
xor
push
test
jp
or
sbb
ror
arpl
xor
ret
imul
xchg
loopne
push
fadd
adc
xchg
and
into
test
pop
cmp
pop
mov
rcl
dec
(bad)
or
and
cmp
inc
inc
pusha
lds
in
and
nop
push
cwde
jl
or
fisub
adc
or
jg
sub
add
daa
inc
jp
xor
adc
pusha
push
retf
push
jg
test
sub
or
inc
inc
stos
mov
mov
dec
pop
das
xchg
retf
or
push
je
add
daa
cmp
ret
and
adc
adc
aad
mov
push
test
add
sub
xchg
or
mov
test
inc
jecxz
lea
ret
ror
mov
and
nop
cmp
aad
inc
or
sar
or
add
push
pusha
or
jnp
add
jecxz
sub
je
adc
cmps
or
jne
imul
scas
lahf
add
loope
sbb
stos
xor
stos
adc
inc
add
rol
fmul
and
sti
sbb
test
dec
inc
push
add
mov
mov
or
rep
xchg
sbb
dec
add
punpckhbw
and
fld
fld
push
push
pop
(bad)
neg
js
jno
cld
and
dec
pop
mov
scas
ins
enter
cli
jle
pop
sahf
push
fst
aad
xchg
push
lods
dec
lods
into
cmp
add
rcl
es
addr16
and
stos
rcl
inc
push
(bad)
cli
xor
hlt
ins
aaa
adc
outs
inc
(bad)
cmp
pop
push
loopne
add
add
sahf
add
clc
ret
mov
or
loope
movs
adc
out
push
mov
or
sub
and
imul
mov
pop
(bad)
pusha
inc
xchg
push
xchg
test
or
stc
jmp
scas
pusha
and
inc
or
adc
pop
add
fidiv
out
dec
not
sub
push
dec
cmpxchg
jns
repz
cli
sub
rcl
sbb
out
inc
adc
pop
add
mov
xchg
or
js
add
push
push
dec
ror
imul
pop
fdiv
push
pop
dec
mov
and
sbb
xchg
mov
mov
sub
aam
cmp
sbb
sar
cmp
enter
push
pop
mov
cmp
movs
inc
stos
fsubp
ret
inc
addr16
mov
mov
sbb
adc
cmps
dec
pushf
adc
inc
mov
ss
aam
push
add
dec
mov
add
pop
pushf
(bad)
or
or
in
repz
cmp
mov
and
push
mov
shr
inc
in
sub
add
fld
aaa
add
jmp
sub
and
or
dec
loopne
mov
inc
xchg
mov
(bad)
pop
mov
push
mov
pushw
push
inc
sar
mov
(bad)
pop
jo
xchg
lea
dec
mov
cmp
sbb
adc
xchg
fidivr
enter
icebp
sbb
dec
fmul
nop
cmp
sar
push
(bad)
retf
jnp
inc
(bad)
das
imul
in
cmp
(bad)
jp
rol
call
aas
pushf
dec
pop
js
ret
loope
mov
test
sub
dec
sub
add
call
sbb
pop
dec
iret
xor
inc
adc
adc
scas
leave
pop
inc
xchg
sbb
pop
aaa
or
aaa
xor
imul
adc
adc
mov
cwde
mov
and
and
push
add
mov
inc
add
int3
stos
movs
push
mov
push
xor
dec
mov
pop
push
and
loopne
retf
inc
xchg
dec
cmp
test
push
or
push
and
push
and
or
ins
push
add
pop
jne
sbb
call
cmp
or
jg
dec
sbb
adc
scas
add
push
jne
sub
mov
sti
push
sti
jmp
and
jne
daa
mov
adc
and
push
or
xchg
and
jmp
inc
xchg
mov
cmc
dec
xchg
fld
mov
ret
jp
mov
js
test
retf
scas
push
into
or
lock
lods
or
and
xchg
popf
mov
cmp
ss
jnp
push
jbe
imul
push
xchg
push
inc
push
jecxz
adc
cmc
inc
push
mov
daa
(bad)
push
mov
int3
fwait
loop
inc
add
sub
icebp
cmp
and
mov
jo
ins
add
and
cld
or
sub
fnstenv
fbstp
out
push
inc
mov
pop
cmp
pop
xchg
or
adc
mov
and
imul
(bad)
jnp
es
retf
pop
mov
fisub
bound
ret
ret
int3
sahf
int3
outs
push
jmp
retf
pop
add
mov
aad
popa
inc
loope
add
jmp
sbb
xchg
add
add
cmp
mov
adc
outs
push
loop
xchg
push
aad
ror
and
and
mov
sbb
fwait
sub
xchg
retf
stos
add
cmp
daa
in
add
jmp
xor
in
in
movs
mov
fadd
pop
inc
mov
and
jae
and
neg
jne
or
jmp
not
and
dec
ss
repz
mov
and
adc
retf
mov
mov
mov
adc
ins
div
jle
pop
test
jge
dec
test
or
adc
push
lock
pop
push
xlat
jmp
or
push
dec
sub
add
dec
pop
or
mov
xchg
add
shr
scas
or
enter
sbb
call
add
je
ror
and
out
xchg
inc
sbb
mov
add
adc
sbb
mov
jle
ret
or
mov
jmp
and
jmp
or
addr16
add
pop
test
jne
test
movzx
mov
cmp
cmp
push
inc
sbb
adc
or
inc
mov
ret
movs
imul
sub
pop
mov
(bad)
movs
push
(bad)
addr16
add
ds
pushf
mov
push
adc
pop
cdq
push
sbb
sbb
push
push
and
inc
or
xor
mov
cmp
aam
js
and
jge
add
jno
and
add
xchg
or
in
ret
arpl
cmps
xor
movs
test
clc
mov
adc
push
retf
into
mov
fmul
xchg
sub
jp
and
test
test
add
dec
xchg
add
fwait
shr
js
ficom
push
xor
test
or
fldcw
dec
mov
test
dec
mov
sbb
adc
cmps
adc
mov
(bad)
mov
sahf
inc
sbb
mov
sub
mov
aaa
push
mov
and
sub
and
cmp
or
std
mov
adc
sub
daa
pop
sbb
data16
cmc
sbb
sar
aas
scas
dec
(bad)
(bad)
cmp
mov
and
and
push
or
mov
ret
cld
test
call
in
adc
sub
add
xchg
out
inc
xchg
and
rol
add
sbb
mov
ror
movs
sub
jle
and
adc
frstor
sub
pop
sbb
mov
in
shl
push
add
adc
xchg
pop
mov
or
jle
int3
and
sbb
rcr
and
xor
loopne
sbb
out
pop
adc
dec
sub
add
retf
imul
inc
pop
ss
jmp
adc
dec
or
repnz
out
push
mov
mov
pusha
mov
dec
pushf
in
add
pop
cmp
add
ins
push
jle
xchg
push
icebp
xchg
and
sub
push
xchg
lods
mov
rcr
add
adc
xchg
leave
inc
mov
adc
sub
and
test
pusha
cmp
inc
inc
movs
dec
loop
jmp
add
cmp
and
retf
clc
mov
add
call
test
fadd
xchg
rol
adc
popa
fisubr
add
ins
and
pop
inc
dec
or
scas
js
sub
lea
daa
dec
sub
lods
xchg
pushf
je
cmps
inc
or
add
iret
sub
and
push
or
test
jg
sub
cmps
icebp
dec
dec
jmp
aam
clc
or
ja
jmp
jp
dec
jmp
mov
mov
test
iret
mov
sbb
in
cmp
jmp
inc
xchg
loopne
dec
sbb
imul
jmp
call
jo
fld
out
mov
ds
fadd
fnstenv
movs
mov
shl
retf
jp
and
or
push
repz
xchg
fs
das
jecxz
test
pop
mov
add
lock
push
push
xchg
push
and
or
sti
outs
push
or
stos
jge
ror
into
inc
push
cmp
mov
dec
inc
jbe
aaa
sbb
or
push
add
lock
dec
fdiv
test
fild
push
ret
pop
xchg
push
and
movs
pop
sahf
mov
push
adc
add
pop
cmp
adc
das
add
jmp
and
and
adc
xor
ret
xor
test
js
pop
xchg
mov
mov
xchg
dec
es
or
nop
mov
push
pop
scas
xchg
mov
cmp
cld
sub
push
and
xchg
mov
loope
dec
xlat
mov
mov
add
xchg
lods
mov
icebp
jmp
stc
add
jmp
xor
inc
jns
sub
sbb
add
outs
jmp
lock
and
jmp
adc
scas
sar
sahf
imul
es
cwde
and
dec
pop
das
sub
push
neg
push
ror
int
inc
push
xlat
in
imul
mov
mov
jo
les
or
rcl
les
dec
xchg
dec
sbb
ror
stos
and
sbb
rcr
outs
push
sahf
imul
in
enter
mov
into
fisttp
int
sbb
push
push
push
or
lods
daa
enter
pop
std
sub
sub
jecxz
push
sbb
das
fdivr
xor
sub
iret
mov
imul
inc
cmp
dec
sbb
outs
arpl
imul
adc
push
das
test
xor
pop
imul
and
or
pop
xchg
dec
adc
je
dec
xor
fild
push
adc
dec
add
sub
dec
dec
in
sub
jge
push
mov
stos
add
sar
in
clc
pop
sbb
lds
dec
loope
cdq
ret
mov
cmps
pushf
push
into
add
or
ret
jns
add
cmps
mov
mov
pop
dec
fadd
fs
mov
push
and
push
sbb
adc
or
and
cdq
mov
mov
or
loopne
mov
ss
push
out
imul
xor
pop
and
inc
fisubr
scas
aad
dec
repz
cwde
nop
lods
cmp
and
stos
xor
cdq
loope
pushf
sbb
push
sbb
jbe
adc
sbb
dec
jae
jo
jnp
hlt
lock
or
pop
cmp
cli
inc
or
inc
loop
cmp
hlt
pop
popa
retf
sbb
sahf
int
push
sbb
mov
inc
hlt
or
mov
lock
lods
xor
dec
mov
xor
mov
cmp
jmp
sub
cmp
fsub
and
es
repz
ret
xor
out
test
lea
ret
jecxz
add
and
push
imul
out
sub
or
inc
mov
push
sbb
inc
sub
leave
or
les
jge
mov
pop
imul
jge
mov
(bad)
bnd
aaa
xchg
repz
or
je
cmc
push
jno
xor
sub
and
push
add
or
sub
adc
repz
mov
jmp
test
ss
dec
cmp
or
fidivr
mov
jecxz
ins
adc
mov
add
or
cmps
(bad)
lock
pusha
fmul
ins
call
aam
in
and
pop
in
or
xchg
cli
jne
pop
mov
add
les
mov
fbld
adc
aaa
cmp
adc
xchg
jno
sub
shl
add
mov
fsubr
leave
cmp
add
lea
add
mov
rcr
add
in
leave
xor
sub
ins
lock
sbb
inc
add
sbb
clc
xor
cmp
jg
mov
adc
dec
sub
dec
adc
sbb
sbb
push
and
push
and
cdq
arpl
or
bound
mov
adc
add
dec
mov
sub
cmc
sti
(bad)
fdiv
xor
leave
or
lock
xchg
adc
inc
(bad)
shr
aaa
xor
popa
xor
add
mov
imul
fiadd
xchg
inc
mov
jl
fild
cmp
and
xor
mov
dec
rol
scas
add
and
push
sbb
jp
dec
dec
cmps
es
arpl
mov
cmps
add
add
(bad)
and
(bad)
jno
and
cmps
push
sub
mov
and
push
inc
xchg
mov
sub
cmps
mov
inc
or
add
cwde
je
mov
sub
sub
retf
les
in
inc
push
sbb
sub
aaa
inc
adc
stos
ret
push
and
mov
add
dec
pop
icebp
enterw
or
out
adc
and
je
push
xchg
mov
mov
pop
xchg
adc
pusha
push
xchg
xchg
ins
fstp
rol
cmps
stos
sahf
mov
popa
push
add
int
mov
sbb
mov
xchg
nop
cmc
fwait
pushw
and
mov
dec
adc
leave
add
es
rcl
add
adc
push
adc
xchg
add
test
xchg
push
xor
or
enter
fwait
mov
push
dec
sbb
mov
lea
cmps
mov
or
scas
xor
js
stos
and
cs
fldl2t
add
inc
adc
push
sar
iret
adc
or
add
inc
lahf
jge
sbb
icebp
(bad)
mov
dec
call
adc
mov
push
or
or
ffree
adc
and
fiadd
repnz
cmp
fadd
xor
iret
add
inc
mov
xor
or
xchg
push
push
jns
push
push
dec
inc
cwde
adc
int3
pop
les
lods
or
xchg
aad
or
and
imul
or
sahf
fisubr
sbb
lods
adc
or
test
leave
dec
fwait
mov
aad
mov
adc
push
or
pop
int
shl
mov
adc
push
pop
mov
xchg
adc
mov
and
dec
mov
cld
je
mov
cmc
nop
jmp
lock
ja
retf
and
add
xor
inc
and
je
test
je
test
lahf
mov
xchg
lea
cdq
xchg
and
shl
xchg
cmp
push
ins
dec
daa
mov
repz
movs
out
je
cmps
and
lods
or
cmp
in
repnz
and
retf
add
pop
clc
dec
or
stos
xor
cmp
retf
pop
mov
in
mov
lea
cmp
or
sub
inc
push
fadd
dec
xlat
in
cmp
in
movs
push
movs
out
dec
pusha
dec
push
clc
ins
dec
dec
js
push
dec
cwde
dec
cwde
sub
push
push
fs
loopne
jecxz
pop
sbb
movs
mov
in
ins
and
pushw
in
adc
mov
or
pop
loopne
loopne
test
loopne
add
sahf
dec
inc
cs
push
push
inc
neg
mov
and
ret
mov
les
bound
shl
sbb
(bad)
iret
push
pop
push
and
and
pop
out
mov
ins
stc
or
or
pusha
pop
mov
dec
call
stc
ret
jge
repz
pop
inc
sub
ret
push
xor
adc
pusha
dec
pop
adc
inc
or
inc
rol
lock
add
mov
les
out
shr
adc
pop
jo
xchg
retf
into
inc
fs
aad
sub
mov
je
ror
add
xchg
pusha
add
hlt
push
mov
ror
pop
xor
cwde
sub
pop
pop
int3
lods
clc
and
pop
xchg
hlt
fisubr
fimul
cdq
enter
adc
sub
adc
lock
es
jl
mov
mov
add
cmp
push
pop
xchg
and
mov
ret
and
int3
dec
pusha
sbb
or
or
cmps
jnp
dec
xor
mov
sbb
dec
jecxz
inc
add
in
mov
push
and
mov
dec
push
in
cdq
cmp
push
sub
sbb
ss
or
enter
test
test
aam
jne
movs
mov
add
mov
inc
call
sbb
push
mov
and
mov
dec
aad
xchg
pop
movs
clc
dec
fld
push
sub
adc
inc
xor
dec
xor
call
mov
ret
xor
adc
mov
inc
cmp
or
push
or
push
movs
mov
call
sub
cmp
ret
ficomp
sub
mov
jb
sub
adc
mov
jmp
or
gs
and
cmps
inc
and
inc
add
xor
dec
xchg
test
adc
or
cmp
sub
inc
sub
dec
mov
push
adc
cld
in
push
movs
dec
retf
add
push
cmp
push
push
mov
inc
lods
add
xchg
xor
mov
jmp
mov
xchg
int
sahf
mov
sub
aas
mov
das
fisttp
inc
adc
cmp
nop
pop
push
js
call
xor
in
in
in
pop
in
loopne
xchg
dec
jae
loopne
fcom
xchg
xchg
fcomp
adc
rcr
iret
bound
das
int3
or
sti
adc
scas
rcl
xchg
test
mov
jb
popf
nop
fmul
sub
outs
or
inc
add
rcr
hlt
fld
call
or
nop
cmc
xchg
mov
jno
rcl
ret
push
or
test
fdiv
cmp
mov
mov
and
jns
cmp
mov
adc
jns
sub
sbb
push
outs
shl
out
jno
pop
push
inc
adc
add
nop
nop
fisubr
stos
push
sub
sub
add
rol
push
inc
or
adc
lods
or
sbb
or
call
and
jnp
mov
inc
js
adc
jecxz
int
adc
inc
je
aas
sbb
inc
adc
push
sub
inc
push
adc
mov
push
jp
inc
cmp
push
mov
or
cmp
jg
lea
outs
adc
mov
test
xor
sub
sub
shl
mov
ret
xchg
gs
mov
cmp
adc
or
push
test
inc
call
call
xchg
fisttp
mov
ds
lock
jb
and
adc
adc
and
xor
pop
sub
scas
inc
cmp
loop
pop
jle
(bad)
mul
cmp
outs
iret
add
sub
inc
cmp
ret
pushf
push
jmp
sub
add
dec
imul
aas
cmp
mov
fcomp
cs
fiadd
xor
cmps
add
and
fdiv
mov
test
push
xor
sbb
adc
and
push
sar
(bad)
add
mov
ret
dec
sbb
aas
push
dec
sbb
xor
clc
xchg
ins
lods
test
fadd
nop
jg
fimul
xchg
or
mov
fld
int3
movsx
adc
sbb
push
mov
cmp
(bad)
neg
sbb
or
xor
sbb
mov
xchg
mov
add
test
cmc
ins
ror
call
and
jne
adc
mov
dec
cmp
mov
push
add
sub
mov
mov
cmp
pushf
or
int3
not
add
cmp
scas
jnp
mov
mov
test
arpl
mov
push
js
aaa
cwde
test
xchg
scas
fmul
xchg
inc
sub
test
cmps
or
fimul
pop
push
in
inc
fs
cmp
adc
inc
push
call
push
daa
mov
jl
dec
or
fimul
xor
ins
mov
(bad)
lock
(bad)
jle
sbb
mov
push
inc
scas
js
inc
sub
(bad)
lea
leave
scas
aaa
js
(bad)
daa
imul
fdiv
add
(bad)
hlt
clc
and
fld
mov
fmul
lods
or
xchg
inc
enter
cdq
lahf
dec
mov
xchg
js
cwde
adc
add
(bad)
sbb
enter
or
jg
lock
loop
xchg
cmp
inc
fdiv
mov
or
xor
or
cs
xor
mov
adc
xchg
push
ror
pop
retf
iret
dec
lods
add
xor
add
test
add
fcomp
xor
jne
inc
push
adc
das
sub
push
(bad)
pop
pop
(bad)
fld
pop
xor
or
fnsave
or
outs
xchg
outs
sub
push
fstp
cmp
fstp
fld
fwait
xchg
add
and
cmp
xor
mov
test
ins
sbb
std
sub
adc
neg
jle
cwde
stos
xchg
push
mov
push
fadd
pop
mov
add
stc
pop
pusha
mov
mov
or
or
loope
mov
mov
push
add
xchg
dec
push
or
push
das
push
add
or
add
bound
mov
or
jecxz
mov
jno
push
dec
dec
es
or
push
inc
xor
fdivrp
and
mov
cmp
or
fidivr
in
fiadd
test
popf
mov
xchg
sbb
pop
dec
xchg
adc
dec
push
inc
je
pop
sbb
pop
pop
pop
sar
(bad)
pop
out
cmps
push
add
inc
rcr
sbb
sbb
sub
fld
stos
jle
sbb
aaa
scas
mov
push
mov
popa
adc
xchg
inc
movs
sub
adc
sbb
and
push
(bad)
test
and
add
lock
xchg
add
fst
cmp
jmp
lock
dec
clc
dec
sbb
fimul
dec
sbb
jo
icebp
sbb
mov
nop
mov
mov
mov
enter
xchg
adc
sub
push
inc
add
push
push
or
pop
fisub
mov
pushf
sbb
add
fisttp
nop
or
add
or
adc
sbb
cmps
add
(bad)
arpl
jb
gs
(bad)
add
and
xor
je
inc
sbb
vmread
xchg
jmp
inc
pop
and
mov
out
add
in
cmp
sub
mov
sub
dec
rcl
jnp
out
push
lods
cmp
jnp
sbb
cmp
mov
mov
inc
or
rol
addr16
sub
or
fcom
sub
js
add
add
(bad)
mov
xchg
xchg
mov
cmp
outs
or
sub
inc
stc
mov
and
pushf
add
xlat
movs
mov
loope
adc
add
mov
jne
push
sti
popa
repz
adc
sub
cmp
add
sbb
mov
and
sbb
adc
mov
pop
fs
inc
sbb
cdq
(bad)
aam
int
dec
xchg
mov
cmp
sub
mov
add
imul
dec
loop
inc
push
or
inc
pop
adc
jmp
nop
add
push
push
shl
xchg
inc
adc
sub
xor
or
es
sbb
aaa
adc
test
jo
jae
xor
dec
xchg
syscall
sub
cmp
inc
dec
mov
pop
xor
ret
sub
add
cmp
or
push
sbb
push
mov
and
in
xor
pop
push
xor
jno
inc
nop
inc
rol
pop
cmps
sti
inc
dec
adc
fsub
sbb
jae
push
call
push
push
int
mov
or
in
arpl
inc
nop
mov
inc
in
test
xchg
inc
xchg
dec
sbb
pop
push
pop
in
dec
pop
lea
cdq
inc
dec
fisttp
nop
rcl
sub
push
test
test
dec
out
and
sbb
pop
imul
add
inc
ins
xor
lea
push
pop
test
or
push
fild
mov
pop
cmc
xchg
sbb
fwait
adc
nop
cwde
adc
inc
je
shr
sbb
(bad)
sahf
cmps
hlt
jnp
addr16
mov
pop
cmp
push
cli
cmps
xchg
outs
imul
lods
inc
jl
imul
mov
add
jbe
xchg
popf
popf
jle
neg
shr
jb
fs
mov
xor
push
cmp
sti
pop
call
xor
sub
push
dec
xchg
add
add
dec
dec
shr
push
adc
mov
pusha
pop
cmc
pushf
adc
in
inc
push
adc
inc
pavgb
add
sbb
in
and
inc
jge
sub
sub
mov
jno
sub
vmovupd
push
mov
push
sar
cmp
rcr
je
icebp
push
or
cwde
add
pop
dec
mov
inc
les
jno
fimul
dec
mov
mov
sbb
mov
inc
jecxz
xor
ss
aad
setle
(bad)
and
call
inc
cld
fstp
mov
sbb
repz
div
movs
enter
fstp
adc
or
sub
jne
loope
push
lea
push
jle
mov
dec
arpl
add
jp
mov
xor
add
ror
push
pusha
popa
xchg
mov
ins
fcom
push
mov
inc
sbb
add
inc
and
push
sbb
or
fwait
in
inc
or
sub
add
pop
sub
pop
mov
mov
mov
cmp
adc
adc
inc
aaa
xor
xor
aam
push
add
fsubrp
cmc
jae
sbb
jo
and
cmp
call
xchg
xchg
xor
rcl
pop
and
push
jbe
jnp
imul
cmps
test
ins
sub
dec
(bad)
int
shl
mov
ss
add
dec
mov
mov
inc
or
inc
or
retf
cmp
cs
push
mov
add
fadd
add
sub
pusha
ss
xor
jbe
imul
aaa
or
shr
mov
cmp
inc
ja
je
or
call
adc
push
pop
or
test
cmp
je
and
(bad)
sar
dec
dec
xchg
mov
movs
ss
les
div
xor
xor
ds
cmps
mov
lea
daa
rol
or
xchg
push
xchg
bound
icebp
out
push
xor
in
cmp
push
fadd
imul
or
or
lock
xchg
cmps
push
adc
clc
adc
cmps
sub
popf
mov
cdq
(bad)
adc
aaa
inc
sbb
lahf
movs
ins
xor
inc
hlt
sbb
dec
jmp
push
fbstp
cmp
out
or
add
outs
stos
sub
push
enter
hlt
outs
mov
pop
dec
jl
test
stc
sbb
fsubr
mov
xor
push
add
inc
jg
jmp
dec
or
sahf
push
vdivsd
dec
inc
cmp
add
add
(bad)
in
sbb
xchg
(bad)
stos
mov
fs
aad
pop
test
push
imul
cs
cmp
cmp
jo
ins
jecxz
sbb
stc
xchg
ja
or
pop
push
or
inc
xchg
loope
push
(bad)
stos
lea
loopne
cmp
ds
jmp
fisub
xchg
add
and
jo
leave
xor
test
test
sub
and
adc
adc
lea
pop
lock
xchg
nop
sbb
pop
pop
sub
dec
mov
test
mov
sub
shl
test
shl
sub
xor
neg
dec
xchg
and
std
adc
jae
adc
mov
and
adc
xor
pop
jmp
inc
xchg
add
aam
push
aad
jo
pop
sub
fmul
or
les
scas
in
fbld
jle
(bad)
jo
adc
pop
nop
out
cdq
cli
cvtps2pd
xor
push
xor
xor
ret
mov
and
es
fistp
cmps
cmp
mov
or
xor
and
repnz
fmul
mov
adc
popa
sbb
sub
inc
xchg
and
xchg
sbb
(bad)
mov
ins
nop
adc
leave
push
cmp
xor
jbe
sbb
dec
xor
inc
retf
push
mov
push
xor
aad
inc
or
push
mov
sub
jne
xor
xor
lds
push
xor
pop
test
into
mov
pop
dec
pop
push
or
fild
sub
adc
add
dec
dec
jns
aam
mov
or
out
adc
cmpps
sbb
add
in
and
push
jnp
push
push
inc
(bad)
sbb
hlt
mov
xor
adc
mov
sub
sbb
outs
lods
nop
jmp
retf
xchg
and
test
cmps
push
sbb
jne
lahf
or
(bad)
sub
imul
xor
stos
xchg
mov
frstor
jno
dec
sub
outs
xchg
test
dec
dec
xor
popf
cmp
xchg
pop
add
test
and
jo
xchg
push
and
and
mov
ds
push
adc
jns
jae
jo
sub
sbb
and
dec
enter
or
add
xor
inc
add
push
dec
xlat
test
lods
dec
nop
in
and
and
inc
pop
fisub
outs
cmps
inc
inc
mov
sub
dec
cs
sub
xor
cs
mov
in
add
or
or
cli
or
mov
push
mov
add
sbb
pop
dec
aas
mov
jne
add
xor
push
std
shl
jbe
sub
push
xor
push
push
nop
ror
addr16
add
bound
pop
cmp
push
out
dec
add
test
mov
jl
jbe
in
(bad)
mov
sub
or
dec
dec
push
jge
adc
push
call
or
retf
ror
lea
add
ins
test
inc
cmp
inc
mov
add
pop
test
mov
xor
cdq
gs
call
cmps
push
popa
or
xchg
leave
push
add
cs
popa
jg
jecxz
push
sar
call
(bad)
sub
mov
sbb
inc
push
sbb
push
stos
sahf
shl
bound
mov
push
icebp
mov
mov
std
xchg
(bad)
mov
leave
mov
in
add
xor
loope
or
cmp
or
push
rcr
out
add
xor
(bad)
jge
mov
inc
inc
aas
or
loopne
inc
enter
mov
xchg
add
xchg
fcomp
add
and
loopne
sahf
ret
mov
fisubr
mov
sub
jg
xchg
cwde
jne
or
ds
push
ins
jnp
adc
add
pop
cmps
fsub
sub
xor
add
pop
aad
test
fadd
and
mov
mov
nop
or
xchg
inc
jmp
sub
icebp
shl
add
jb
sahf
cmp
cmp
and
push
icebp
cmp
addr16
cs
mov
dec
repz
jo
lods
push
ret
adc
mov
loopne
inc
cmps
lds
cmp
pusha
pop
sbb
sub
data16
lds
rcl
push
mov
fisttp
pop
enter
or
sub
dec
inc
inc
sbb
sub
scas
pop
add
xchg
xor
ds
loope
push
mov
xor
push
scas
rol
sub
mov
push
cwde
nop
loopne
(bad)
lods
add
movs
or
add
add
add
push
aaa
push
pop
or
shl
sbb
inc
and
pop
push
add
shl
fld
enter
repz
lea
imul
jo
mov
add
jnp
inc
inc
pop
movs
push
leave
push
mov
mov
mov
inc
pop
mov
add
test
cmps
ret
pop
push
mov
add
and
cli
push
scas
and
or
add
adc
lahf
mov
jns
xor
(bad)
add
sbb
xor
leave
es
push
push
mov
mov
push
das
push
outs
and
push
xor
inc
aaa
sub
push
add
int
pusha
imul
xor
cli
leave
fild
jb
ret
mov
xor
push
push
and
ret
jmp
ins
in
cmp
call
or
pop
mul
add
mov
cmp
add
sbb
sub
out
inc
ret
aam
or
sbb
mov
sub
stos
push
cs
jnp
sub
outs
and
test
out
jmp
pop
sbb
mov
xchg
mov
(bad)
jo
daa
or
sbb
cli
and
mov
jle
dec
sbb
hlt
pop
inc
adc
cmp
xchg
les
popa
mov
and
and
mov
iret
mov
sbb
repz
cdq
pop
push
stos
push
bound
push
jo
mov
in
cld
mov
sub
push
test
sar
adc
pop
or
mov
pop
test
inc
out
push
out
pop
xor
jno
adc
xchg
in
adc
push
sbb
mov
retf
lahf
or
das
mov
add
dec
neg
or
inc
adc
ret
jle
sub
les
cmp
xor
es
je
push
sti
es
jb
jmp
or
loopne
sub
dec
or
or
adc
and
fsub
imul
popa
pop
sbb
(bad)
sahf
shr
sbb
xchg
retf
dec
popf
adc
xchg
loopne
lea
or
add
or
aas
jb
inc
or
sub
sbb
adc
clc
and
inc
adc
mov
mov
cmp
and
or
add
fcomp
iret
cmc
inc
adc
stos
ins
in
mov
mov
ins
push
cld
adc
adc
jg
jne
cdq
xor
retf
mov
call
pop
shrd
sar
inc
mov
or
xchg
inc
jl
inc
or
sub
inc
clc
data16
neg
cli
call
icebp
add
or
in
push
jg
jl
jae
dec
(bad)
aas
push
add
fild
xchg
aaa
icebp
pop
add
jmp
xchg
jo
ins
mov
adc
push
test
in
fcmovnu
push
jne
cmp
sub
dec
fcomi
cmp
inc
or
(bad)
push
jg
imul
(bad)
iret
or
ror
clc
pop
fidiv
jg
adc
push
mov
shl
jmp
test
sar
in
inc
cmp
add
pop
adc
adc
das
or
adc
ja
adc
and
inc
aas
mov
jecxz
add
xchg
add
mov
pop
xchg
sbb
sbb
push
lahf
and
mov
add
xchg
shr
gs
adc
dec
icebp
dec
and
es
(bad)
xlat
jbe
dec
push
leave
and
or
sub
inc
hlt
adc
cs
adc
hlt
mov
out
jns
jp
jnp
and
or
or
call
ficom
sahf
or
mov
xor
push
adc
inc
or
sub
add
(bad)
dec
imul
push
pop
cmp
test
adc
jnp
push
inc
out
pusha
or
fcom
add
sub
sub
xor
mov
fild
pop
mov
lock
xchg
pusha
les
sub
push
xlat
push
sub
add
mov
jecxz
mov
mov
int
inc
inc
ret
dec
adc
fld
or
pop
into
inc
outs
popf
sub
xchg
ret
or
mov
adc
jbe
cli
pop
sub
mov
retf
cmp
sub
add
jmp
cmp
mov
cmp
sbb
in
je
inc
or
add
lods
inc
adc
xchg
icebp
sub
adc
xor
loop
fdiv
jge
push
lahf
imul
or
mov
sbb
or
call
pop
cmp
sbb
rol
mov
pusha
(bad)
cmp
jmp
cmp
push
icebp
push
mov
or
cmp
mov
add
add
mov
mov
rcl
fistp
inc
xor
mov
test
push
dec
cmp
mov
jns
adc
add
dec
sub
add
dec
mov
mov
clc
loope
xor
pop
mov
pop
out
jo
cmp
pop
dec
sar
xor
pop
sbb
lahf
shl
sub
and
fsub
cmp
and
ror
push
jo
movs
inc
add
and
push
push
push
sbb
adc
mov
adc
fdiv
loopne
(bad)
xchg
(bad)
sub
sbb
rcl
shr
mov
mov
enter
jp
hlt
xchg
xor
popa
jno
push
pop
popf
lods
pop
add
ds
push
or
popa
pop
movs
sbb
jne
sub
ret
adc
dec
test
jne
dec
js
and
imul
je
pusha
push
mov
add
push
xor
or
inc
pop
and
add
xor
sar
cli
sub
daa
jne
pop
test
push
inc
jnp
leave
xor
sti
sub
sbb
mov
cmp
pop
ss
pop
mov
or
fld
mov
or
or
inc
xor
in
push
sti
(bad)
sub
je
jmp
push
jge
cmp
sbb
jmp
push
mov
sti
and
sbb
pop
and
std
cs
lea
cmp
ins
dec
mov
adc
push
push
dec
dec
inc
and
sbb
and
xor
cld
clc
aaa
mov
movs
jnp
icebp
rcl
mov
xchg
mov
rol
sbb
or
push
push
add
bound
enter
adc
std
xchg
mov
sbb
dec
call
jmp
jmp
adc
or
xchg
test
nop
and
mov
ror
dec
jno
mov
adc
lds
data16
shl
sahf
add
in
inc
inc
mov
popa
je
inc
adc
dec
mov
add
pop
mov
loopne
sub
test
addr16
cs
adc
push
inc
jmp
dec
dec
bound
clc
xchg
adc
inc
mov
inc
fs
enter
xor
adc
sub
pop
fadd
sub
les
loope
ins
and
sbb
ret
shl
xchg
mov
and
xor
jmp
jo
outs
cmp
push
xchg
mov
add
pop
popa
push
push
popf
mov
(bad)
mov
pop
or
sub
mov
jo
inc
shl
pop
mov
and
ja
cmp
popf
mov
iret
sahf
inc
push
das
inc
mov
dec
sahf
outs
or
jmp
pop
fistp
cmc
inc
dec
push
pop
dec
adc
adc
push
arpl
sbb
push
bound
mov
(bad)
leave
mov
es
jb
movs
test
mov
sbb
out
or
aaa
cmp
jl
xchg
std
adc
push
inc
push
or
jne
or
ret
pop
adc
push
xchg
(bad)
dec
sbb
or
inc
cld
jo
sbb
add
inc
test
push
adc
mov
push
in
test
xchg
or
lods
in
(bad)
or
lods
sbb
sbb
xor
lea
pop
inc
pop
cmp
test
movs
popf
push
push
add
test
push
sub
js
xor
jmp
imul
or
xor
imul
pushf
(bad)
jp
pop
retf
adc
pop
add
mov
xchg
mov
inc
(bad)
jbe
adc
mov
daa
test
ret
push
cdq
ins
fs
leave
loopne
sub
imul
(bad)
sbb
push
ror
xor
jecxz
jae
call
dec
and
loopne
pop
or
es
xor
movs
push
lds
pop
jae
jmp
xor
push
mov
pop
(bad)
inc
pop
loopne
add
fwait
and
mov
mov
add
and
adc
lahf
and
fldenv
xor
es
clc
jb
in
fadd
sub
push
adc
ds
and
fdivr
rol
jmp
(bad)
test
cmp
and
jne
mov
cdq
adc
xor
repz
test
adc
dec
je
sbb
aaa
xor
or
sahf
and
jae
or
adc
add
nop
mov
test
cmp
jg
(bad)
sbb
in
push
xor
dec
inc
lods
fsubr
sbb
inc
rcr
fild
sub
push
ret
lods
fwait
and
mov
les
movs
mov
sbb
add
jae
mov
js
pop
xchg
outs
jecxz
cmc
inc
fcom
or
and
push
ins
shl
(bad)
sub
jge
add
pop
cmp
push
jge
movs
pop
sbb
loopne
xchg
pop
add
es
cwde
and
push
push
(bad)
cmp
lods
dec
push
jo
dec
mov
pop
shr
mov
dec
sub
add
int
adc
xor
or
pop
jb
retf
in
in
lea
pop
adc
add
push
add
mov
ds
pop
je
inc
add
add
sub
push
sbb
sahf
jmp
push
cmp
inc
jmp
inc
jmp
cmp
movs
adc
inc
jb
push
aaa
and
sub
push
sbb
in
pop
inc
add
(bad)
adc
fidivr
sbb
aas
sti
cmp
pop
sbb
nop
cli
inc
xchg
mov
jge
mov
jnp
stos
into
bound
xchg
xor
imul
les
pushf
sub
push
mov
adc
cmp
and
inc
jno
pop
mov
mov
xchg
nop
mov
sub
mov
pusha
push
push
les
and
push
and
ret
add
nop
adc
sbb
cli
cwde
stos
jne
stc
add
sbb
push
mov
pop
cdq
adc
mov
sub
mov
sub
(bad)
nop
cwde
sbb
add
pop
push
sahf
(bad)
cmp
inc
pusha
cmp
dec
or
test
jno
or
add
sbb
push
push
int3
cli
cmp
popa
sub
dec
imul
dec
push
or
int3
jbe
mov
bound
cmps
adc
mov
je
mov
mov
fbld
push
push
cmp
mov
xchg
mov
mov
or
test
(bad)
retf
add
out
push
pop
sbb
push
sbb
add
fild
jmp
cmp
or
and
pop
loop
(bad)
adc
and
jmp
mov
gs
pop
xor
pop
lods
mov
cmps
inc
ins
sub
call
in
sahf
lar
or
enter
mov
lea
jo
xor
shl
mov
imul
cwde
and
and
ins
mov
mov
jmp
mov
sbb
movs
or
or
xchg
push
mov
outs
xor
adc
dec
pop
ror
push
mov
neg
pusha
inc
jmp
sbb
jo
nop
xchg
pusha
mov
es
stc
xchg
hlt
mov
push
clc
ja
lea
js
shr
lods
pop
cwde
pop
push
lock
sub
(bad)
push
adc
mov
mov
adc
mov
add
cmp
jmp
sub
das
mov
dec
dec
xchg
aas
inc
jb
adc
sbb
sub
cmps
dec
mov
ret
add
mov
add
ins
arpl
repz
sub
test
test
loope
adc
xor
inc
xor
sbb
add
add
cld
xchg
and
sub
xor
push
ins
mov
dec
add
clc
add
sub
and
inc
adc
int3
and
pop
inc
scas
scas
xor
arpl
and
add
es
mov
inc
inc
mov
jge
jnp
mov
and
outs
adc
xchg
aaa
mov
xor
add
aam
adc
sbb
movs
lods
sub
mov
add
jmp
xchg
loope
xchg
adc
jne
rol
jmp
(bad)
dec
imul
rcl
scas
jae
ds
xchg
icebp
xor
mov
sub
dec
pop
cs
into
add
pop
mov
add
in
sub
add
add
push
sub
sub
test
inc
adc
and
mov
je
mov
cmp
daa
inc
loope
fdiv
xor
in
inc
sub
push
push
(bad)
adc
pusha
pop
lds
js
mov
into
movs
push
std
push
sub
inc
adc
mov
or
bound
inc
js
ror
inc
push
push
js
sub
add
ror
(bad)
mov
sbb
pop
je
shl
and
mov
jg
push
cmps
cld
daa
addr16
push
ror
(bad)
dec
pop
data16
js
inc
fidivr
rol
pop
mov
pop
or
cs
and
daa
stc
fs
adc
not
loope
mov
or
(bad)
mov
js
fadd
mov
mov
test
hlt
ret
shr
sbb
xor
add
fisttp
jae
cmp
cs
scas
xor
cmc
loopne
add
and
mov
or
cld
dec
sub
ins
shr
inc
inc
dec
arpl
clc
add
and
stos
movs
adc
sub
pop
mov
das
jp
inc
xor
or
test
add
sbb
test
lock
retf
mov
mov
xchg
xchg
jae
sbb
(bad)
repnz
aas
test
hlt
or
inc
outs
jbe
jnp
(bad)
mulps
in
jo
add
adc
js
stos
jmp
ins
test
cld
cld
cmp
adc
cmp
inc
gs
inc
xchg
in
test
shr
or
push
inc
test
push
icebp
lea
mov
ds
mov
mov
pop
fsub
or
adc
aam
push
or
add
rol
mov
mov
mov
mov
in
inc
mov
aam
dec
pop
hlt
xor
jo
mov
cmps
pop
cs
jecxz
sbb
mov
in
and
or
dec
pop
or
repz
sbb
cld
inc
aas
add
lock
out
cmp
dec
ret
sbb
(bad)
(bad)
fmul
and
and
loop
je
cmp
jne
test
push
enter
mov
xor
cli
xor
iret
mov
sbb
dec
sub
xor
sub
icebp
pop
sbb
push
inc
jle
inc
je
push
mov
jo
or
sti
movzx
push
or
push
cs
sbb
or
dec
daa
dec
add
stos
adc
jmp
bnd
shl
or
cld
add
or
push
std
dec
adc
pusha
mov
aaa
pushf
mov
rcr
outs
in
xor
xchg
call
(bad)
xchg
or
mov
jne
inc
dec
test
arpl
loope
and
inc
cwde
adc
int3
jl
sbb
add
push
push
call
add
stc
or
daa
mov
push
mov
mov
push
dec
xchg
push
test
movs
test
jg
jne
inc
fimul
adc
push
jae
pop
nop
rcl
mov
push
add
pushf
cmp
lods
aaa
inc
out
xchg
(bad)
mov
ret
adc
sar
test
adc
jns
icebp
pop
jo
das
in
mov
add
inc
push
in
mov
iret
xor
inc
xchg
hlt
sbb
lea
jns
jle
or
dec
dec
xor
pop
jmp
push
cdq
cmp
sbb
iret
pop
hlt
add
es
or
aas
mov
mov
xor
pop
in
sbb
jbe
jnp
inc
xchg
clc
cdq
adc
loope
inc
cmp
cmps
mov
jge
adc
jns
adc
stos
mov
rol
(bad)
leave
je
or
xlat
inc
jne
mov
rcl
enter
jo
xchg
es
push
push
sbb
add
sub
jl
ret
(bad)
adc
xchg
ins
jo
inc
inc
jne
push
mov
pop
or
or
adc
frstor
pop
test
adc
enter
push
adc
les
icebp
push
inc
cmp
sar
jmp
sub
add
clc
sahf
test
daa
mov
xor
push
xchg
in
ror
cdq
scas
test
inc
mov
mov
xchg
add
push
test
out
test
imul
sbb
ins
nop
icebp
and
inc
jl
pop
fnstsw
out
add
push
push
and
xchg
(bad)
cs
push
dec
mov
dec
in
ret
push
and
cld
jl
(bad)
dec
pop
inc
adc
sbb
cmp
aam
push
mov
lea
fldenv
test
rol
or
loope
jmp
mov
lea
or
push
aaa
inc
add
(bad)
push
jbe
push
dec
adc
ficomp
(bad)
aad
popa
test
push
push
jl
lock
jecxz
pop
or
pop
pop
inc
in
inc
pop
jmp
push
clc
push
xchg
xor
add
dec
push
mov
jo
sahf
inc
sbb
xor
add
xor
jnp
inc
jns
and
pusha
test
fadd
int3
xchg
adc
js
xchg
mov
and
fucomi
daa
cwde
jp
inc
rol
je
or
sub
cmps
pop
jmp
ins
frstor
add
or
fabs
lods
arpl
push
xchg
push
push
jb
xchg
imul
sub
add
movs
mov
cmovg
test
je
mov
popf
add
aas
loopne
mov
jg
in
jmp
and
lock
loop
call
jg
add
adc
mov
add
das
clc
js
shr
clc
add
mov
ins
test
sahf
sub
test
test
inc
push
ins
popa
cs
mov
sbb
and
fadd
jl
and
repnz
in
test
xor
add
mov
mov
sub
pop
inc
cmp
xchg
rcr
fistp
loope
and
je
pop
xor
mov
sub
or
xchg
arpl
pop
cmps
adc
and
or
cmc
pusha
mov
out
xchg
loopne
jbe
pop
ins
mov
pushf
mov
cmp
mov
dec
adc
aad
jo
fldenv
push
add
jmp
shr
mov
icebp
add
push
xchg
and
cwde
xor
jo
cs
add
push
xchg
nop
cmp
imul
sbb
add
or
dec
pop
sbb
fild
add
jp
js
mov
ror
xor
dec
mov
xor
mov
arpl
test
fsubr
lea
or
cmp
xor
dec
or
and
loopne
loopne
sub
xor
add
(bad)
add
xor
loopne
enter
loopne
sbb
xchg
and
shl
lods
inc
rcr
push
out
cmps
pop
inc
pop
jno
imul
mov
ins
sub
inc
pop
jge
in
cmp
pop
pop
or
xor
hlt
and
lock
and
push
dec
jne
and
lock
inc
inc
clc
pop
lock
cdq
call
push
mov
sbb
sub
ins
add
push
cmp
mov
mov
inc
mov
mov
sbb
cmp
push
jbe
ret
inc
loop
adc
adc
push
mov
pop
sbb
ud1
enter
fst
adc
lahf
cmps
stc
push
hlt
xor
movs
jns
fsub
mov
inc
mov
mov
xor
adc
fcom
fiadd
rcr
mov
push
inc
es
or
push
les
pop
sub
hlt
push
push
push
sub
jb
mov
push
pop
sbb
inc
jmp
inc
sbb
sub
stos
fcom
dec
cmp
jb
add
dec
inc
and
pop
mov
les
cwde
jne
repz
sbb
sbb
jno
cmp
mov
bound
call
sbb
adc
push
loope
add
cmp
pop
mov
push
scas
and
pop
dec
sub
pushf
mov
push
push
mov
arpl
dec
jo
sbb
adc
pop
(bad)
call
jecxz
aas
dec
add
test
jne
dec
daa
push
pop
push
add
cmp
sbb
aas
or
call
inc
jo
jne
add
add
jmp
mov
cmc
inc
mov
xchg
retf
push
sbb
jl
mov
cwde
push
test
cmp
pusha
jo
dec
call
lea
xchg
sub
pop
add
imul
push
jne
sub
scas
adc
adc
mov
shl
and
lock
sub
sub
rol
mov
push
mov
data16
inc
push
push
xor
add
fistp
adc
push
pop
add
and
xchg
bound
add
int
enter
shr
xor
xchg
or
popa
pusha
pop
cmps
add
fistp
mov
pop
sbb
sbb
push
xchg
xor
test
rol
out
movs
loopne
add
rcl
je
ret
xchg
mov
mov
imul
xor
xor
adc
stos
adc
data16
mov
retf
in
mov
das
dec
sbb
fdiv
lahf
push
hlt
adc
add
sbb
mov
(bad)
out
mov
fistp
shl
pop
inc
js
retf
popf
adc
pop
js
retf
inc
mov
or
in
xor
dec
lods
or
dec
dec
mov
ins
loopne
or
in
or
xor
movs
scas
push
lods
xor
add
mov
mov
add
fisttp
js
sbb
ret
inc
inc
mov
sub
das
xor
inc
jl
call
pop
inc
cmps
into
pinsrw
arpl
sbb
xor
sti
lea
dec
std
sub
mov
inc
push
push
fdiv
loopne
pushf
mov
add
cmp
jb
fadd
dec
ins
daa
xor
sub
dec
aas
nop
ds
sar
or
fsubr
xor
imul
adc
inc
test
fcom
xlat
das
(bad)
into
dec
js
and
jmp
sbb
hlt
and
mul
push
jg
jp
sbb
adc
ret
loope
retf
or
push
pushf
fld
cld
loope
or
sub
push
loop
aam
and
sub
cs
enter
adc
das
mov
int3
xor
out
and
xchg
mov
sub
mov
ror
mov
dec
or
pop
movs
movs
push
popa
sub
mov
xchg
pop
xchg
pusha
jb
scas
inc
adc
out
mov
mov
mul
xchg
inc
sub
repnz
in
inc
in
mov
cmp
sub
js
jl
mov
dec
jmp
push
js
je
(bad)
fisub
js
xor
ret
add
stc
aas
add
push
ins
sbb
test
push
jae
fadd
movs
xor
push
cld
jp
or
jmp
jb
pop
nop
es
fsubr
(bad)
push
jbe
lock
inc
std
data16
inc
lock
sub
loope
mov
mov
mov
or
je
dec
and
pop
loopne
ret
in
nop
adc
jbe
inc
lahf
xor
nop
pop
or
sbb
push
lds
repz
ins
sbb
inc
ficom
mov
add
push
cmp
shr
mov
outs
sub
add
add
cmc
sub
mov
and
or
adc
ja
inc
jmp
mov
xchg
fadd
xchg
xchg
dec
sbb
and
ins
push
pop
sub
mov
mov
and
fadd
ja
test
sub
inc
lahf
scas
push
retf
adc
jne
mov
xchg
or
aam
xchg
xor
push
test
push
inc
push
jns
adc
mov
es
mov
xchg
sbb
sbb
mov
inc
mov
pop
imul
xchg
adc
adc
adc
ins
js
(bad)
sbb
inc
adc
and
out
mov
xchg
dec
je
dec
pusha
and
cmp
adc
cmp
es
movntps
sub
jne
push
adc
mov
fst
pop
and
test
loope
push
test
or
xor
add
xor
inc
das
inc
mov
sub
in
bound
mov
add
sub
add
clc
ds
dec
scas
not
or
ja
mov
pop
xchg
loopne
out
and
jns
and
cmp
jmp
inc
add
fisttp
or
add
fs
das
pop
push
xor
cmp
pop
ret
ror
les
push
jl
adc
fisttp
inc
or
fneni(8087
xchg
or
cmp
cs
pop
pushf
ret
and
pusha
shr
lods
mov
sub
je
test
push
add
out
add
nop
mov
or
adc
movs
outs
push
fbld
cmp
nop
dec
inc
aaa
aam
inc
push
xlat
push
mov
inc
neg
fdivrp
(bad)
mov
or
add
jmp
or
mov
inc
xor
in
(bad)
mov
mov
mov
sbb
push
inc
cmp
jb
xor
adc
sahf
or
aaa
imul
sbb
jecxz
jle
cwde
jae
or
jbe
rcl
push
mov
jecxz
leave
inc
ds
dec
push
mov
scas
pop
add
leave
sub
push
in
cld
mov
shl
sbb
rcl
push
push
pop
adc
or
sub
and
xor
push
call
sub
ins
pushf
xor
cdq
pop
pop
adc
xor
jne
push
test
xor
jmp
sbb
inc
ret
push
ficomp
scas
pop
add
adc
push
mov
push
cdq
pop
cmp
and
in
sahf
mov
jg
inc
mov
fwait
adc
inc
xchg
mov
popa
bound
mov
add
mov
mov
dec
inc
or
aaa
pop
push
ja
cmc
or
mov
lea
sahf
pusha
add
dec
setge
fnsave
dec
push
add
pop
add
scas
test
inc
pop
inc
cmp
sbb
movs
ffreep
adc
iret
sub
jecxz
call
cmp
sub
jno
dec
aaa
jle
cdq
das
mov
jbe
cwde
add
xor
loope
dec
push
call
loopne
add
sbb
pop
cmp
inc
in
lds
xor
push
xchg
lods
jae
inc
ins
loope
and
pop
cs
cld
stc
inc
in
push
or
fisttp
pop
adc
cmp
push
aas
cmc
ja
push
push
xchg
jne
add
push
adc
sub
shr
stos
ret
and
popa
fcomp
push
popf
mov
sub
push
inc
(bad)
mov
call
pusha
fld
or
loopne
sbb
hlt
sti
pop
sub
(bad)
push
sbb
adc
mul
test
xor
jle
ds
hlt
lock
dec
pop
aas
add
adc
jo
sbb
dec
gs
lods
iret
pop
js
or
inc
jmp
push
inc
inc
ins
and
mov
mov
cdq
in
iret
mov
mov
inc
or
inc
pop
bound
inc
xor
and
jne
mov
add
jnp
les
jl
je
js
mov
adc
sbb
mov
jno
stos
inc
and
js
sbb
call
hlt
or
loope
pop
lds
nop
(bad)
pusha
jl
mov
mov
in
hlt
adc
nop
nop
retf
sbb
add
cmp
mov
clc
adc
push
adc
in
push
sahf
xor
outs
and
mov
adc
lahf
jo
push
mov
test
div
add
and
imul
inc
ror
and
sub
je
push
fsub
or
and
sub
sbb
mov
push
inc
mov
mov
dec
pop
ds
or
or
adc
addr16
push
mov
mov
scas
inc
nop
repnz
pop
div
nop
sbb
inc
or
xchg
add
or
push
mov
int3
int3
fidivr
and
fstp
xor
jnp
and
cmp
push
or
lods
mov
dec
les
clc
shl
inc
pushf
push
adc
nop
push
mov
nop
test
lock
mov
out
gs
and
mov
dec
mov
adc
and
loop
sti
lahf
les
jmp
mov
mov
and
loopne
and
(bad)
out
jmp
stos
inc
das
lea
aam
cdq
movs
outs
pop
push
add
xchg
xchg
adc
pop
push
mov
push
call
adc
push
shl
mov
or
das
adc
xchg
mov
nop
loop
stos
cmps
sbb
loopne
xor
mov
fwait
mov
scas
test
fwait
and
jmp
pop
movs
mov
dec
pop
sbb
rol
cli
add
jmp
or
stos
jg
and
mov
inc
and
stos
je
jg
push
sbb
sar
pop
inc
ss
movs
push
loopne
lea
loope
pusha
cmp
dec
in
and
cli
js
int
fisubr
push
mov
mov
movzx
dec
push
mov
out
outs
mov
ror
inc
mov
mov
les
mov
ror
test
and
mov
pop
fld
sub
and
and
dec
pop
pop
sbb
clc
or
fs
(bad)
arpl
stos
inc
or
jmp
(bad)
xchg
and
sub
movs
mov
mov
inc
push
adc
cmp
push
add
test
jg
lea
cpuid
aam
or
mov
imul
mov
mov
mov
or
lods
adc
scas
(bad)
mov
jae
push
dec
add
add
xchg
nop
inc
add
or
xchg
mov
push
and
sahf
out
sbb
or
mov
cld
hlt
mov
(bad)
in
call
call
iret
repz
hlt
hlt
clc
clc
cld
cld
lock
das
add
add
out
push
ret
sbb
jmp
or
add
(bad)
or
mov
pusha
sbb
and
loop
mov
lea
jl
cld
pop
and
jle
daa
or
movs
fdiv
fldenv
inc
jno
shl
out
mov
inc
fcom
push
cmp
ins
pushw
jl
mov
add
sahf
inc
push
in
xchg
retf
push
add
sub
addr16
add
das
mov
(bad)
loop
pop
mov
nop
jns
out
push
cwde
mov
sahf
mov
rcl
sbb
sbb
jns
out
adc
adc
sahf
out
sahf
or
or
add
repz
inc
dec
inc
or
push
hlt
push
adc
(bad)
push
add
outs
dec
add
(bad)
js
sub
ja
clc
jo
les
sbb
loop
popf
mov
add
mov
push
in
mov
and
cmps
mov
dec
push
add
mov
pushf
test
scas
pop
clc
and
push
mov
jg
or
xor
lock
push
and
push
cmp
push
push
jnp
shr
cli
jbe
lock
int3
out
sbb
std
adc
dec
push
test
out
sahf
js
inc
jns
loopne
into
sahf
stc
sbb
add
add
gs
(bad)
pop
mov
mov
cmp
pop
test
(bad)
sub
pop
ins
addr16
or
loopne
and
and
aam
xchg
dec
cmc
pop
push
ins
adc
add
pop
pop
push
and
push
arpl
adc
cmp
into
and
rcr
imul
pop
jmp
shl
js
adc
add
clc
lds
bound
rol
jg
ret
sar
int
shl
and
lods
lds
sub
loope
push
cmp
sti
cmp
mov
test
retf
inc
adc
out
jecxz
pop
jns
gs
push
ja
ret
sub
fisub
inc
or
add
fwait
rcr
sub
sbb
pop
mov
mov
cmp
loopne
or
mov
ret
fwait
icebp
rcr
sbb
cmp
cmc
push
pop
inc
js
loope
jb
inc
int3
push
cmps
loop
and
and
dec
inc
out
push
enter
sub
sbb
lock
push
and
mov
enter
jmp
sbb
aam
enter
je
dec
ret
stc
and
jmp
push
punpckhwd
xchg
xor
adc
cmp
movs
jo
mov
dec
cld
cmp
sub
jo
test
test
push
imul
mov
mov
inc
mov
mov
xor
sbb
xor
sub
dec
rcl
push
(bad)
(bad)
or
ret
mov
out
jmp
sbb
in
call
or
cmp
inc
sbb
cmp
mov
jle
push
push
sbb
or
jb
int
outs
xor
std
pusha
xchg
dec
shl
jo
and
mov
pop
aad
pusha
mov
or
xor
inc
das
mov
mov
jno
or
mov
iret
je
dec
js
mov
mov
fwait
adc
adc
mov
xor
retf
pop
mov
and
out
xor
cmp
sbb
inc
stc
or
retf
ins
into
inc
mov
mov
sar
mov
dec
ret
or
push
add
sbb
aas
dec
fs
ds
jne
or
push
(bad)
es
and
out
iret
cli
popf
push
leave
mov
loop
jmp
and
or
fdivr
adc
(bad)
mov
sahf
cmp
daa
int
sub
or
add
jns
mov
xchg
sbb
mov
jnp
into
push
and
sub
movzx
inc
bound
outs
movs
jne
imul
shrd
test
sbb
call
mov
scas
daa
sahf
js
pop
and
mov
pop
add
lods
lahf
cli
sti
and
cdq
dec
es
jne
add
(bad)
fistp
es
jg
add
out
stos
and
(bad)
icebp
adc
jbe
and
or
dec
or
sbb
and
or
ffreep
mov
in
xor
ret
xor
cmp
jmp
xchg
adc
leave
into
xor
sub
adc
lods
movs
and
add
and
mov
pop
aad
pop
xchg
sub
or
test
retf
retf
inc
or
or
pop
jge
mov
push
add
call
xchg
and
xchg
lock
sbb
ss
cli
push
pop
sub
add
call
xlat
jnp
push
dec
hlt
or
jne
cmps
jb
pop
rol
sub
or
jge
mov
mov
or
push
lock
enter
adc
push
icebp
aaa
ins
adc
hlt
cmp
movsx
push
push
push
cmps
sub
or
shl
dec
sub
push
cmp
or
mov
loopne
ins
call
cmps
jmp
(bad)
enter
and
sbb
xchg
mov
es
(bad)
ss
adc
adc
mov
or
scas
scas
jbe
(bad)
addr16
inc
movs
adc
cmp
or
jmp
mov
and
mov
std
fiadd
fistp
mov
retf
jmp
dec
pop
dec
adc
or
push
sbb
shl
add
fwait
inc
xchg
popa
addr16
mov
fwait
or
cmc
bound
rcr
and
inc
shl
int3
add
mov
std
lea
pop
ret
xlat
loopne
xchg
or
cld
mov
sbb
fdivp
push
adc
ret
sbb
iret
mov
retf
je
loopne
sub
or
sti
mov
jecxz
push
adc
(bad)
jle
(bad)
aad
shl
retf
jmp
adc
iret
xor
outs
loope
add
xor
and
and
or
pop
inc
cld
cmp
je
test
add
fist
cmp
je
test
je
jb
add
jns
adc
xchg
pop
addr16
xor
inc
or
retf
or
sbb
ret
xchg
pop
sub
and
push
les
ret
cli
mov
(bad)
out
fisub
es
js
pop
push
scas
(bad)
xchg
das
jns
mov
pop
push
push
fbld
(bad)
js
cmp
test
xchg
push
adc
pop
xchg
or
jb
fisubr
in
add
xor
cwde
sub
sbb
pop
or
fdivp
imul
ret
sahf
es
xor
sbb
ret
loopne
dec
xor
adc
stc
sub
in
push
adc
push
pop
inc
push
in
push
bound
hlt
adc
jp
pop
cmp
inc
sbb
pop
cmp
or
ret
es
rol
xchg
push
mov
dec
fisttp
xor
dec
mov
out
cmp
push
or
aas
inc
sub
or
xor
mov
sti
xchg
rcr
out
frstor
jp
sbb
out
fstp
and
add
adc
adc
mov
inc
inc
and
repz
sub
push
pop
lock
(bad)
cmp
dec
ss
mov
mov
sbb
mov
fdivrp
mov
or
push
mov
pop
jmp
movs
push
data16
or
sub
xchg
popa
in
pop
sar
add
push
push
movs
jle
shl
dec
(bad)
dec
sub
jl
fidivr
jbe
mov
lods
add
push
add
or
pop
pushw
sub
jecxz
mov
mov
data16
test
mov
into
es
shl
lock
sub
or
clc
pop
cdq
mov
push
or
sub
push
js
ins
test
ret
pop
jne
mov
xchg
adc
mov
bound
push
dec
loopne
test
bound
jecxz
je
adc
arpl
and
mov
ret
dec
and
js
or
pop
mov
mov
mov
fstp
add
push
adc
sub
or
jmp
pop
nop
cs
add
xchg
mov
sbb
ror
out
or
retf
adc
jmp
mov
and
sbb
fld
fwait
fwait
jmp
push
and
clc
jg
test
scas
push
movq
sub
pop
movapd
push
clc
int
fld
shl
jle
xor
adc
(bad)
dec
inc
fwait
rcl
retf
sahf
in
fist
repz
or
jg
fld
or
dec
mov
xchg
ret
adc
(bad)
jnp
mov
jg
or
aam
adc
or
adc
jg
add
adc
pusha
xchg
int3
mov
fsubr
daa
js
sar
pop
ins
loopne
xor
pop
enter
and
ret
or
dec
sbb
or
cmp
pushf
dec
int3
and
add
add
jmp
xchg
dec
sti
inc
or
push
mov
fbstp
push
(bad)
sbb
(bad)
jg
jl
cmp
jb
fsub
add
enter
imul
retf
pop
mov
sahf
imul
cmp
dec
xor
hlt
arpl
cld
cwde
sar
push
cmp
push
inc
push
jbe
mov
push
sbb
push
mov
rcr
sar
(bad)
cmp
scas
jnp
sbb
sub
test
cdq
sub
sbb
push
arpl
dec
mov
pusha
jg
mov
mov
dec
and
popf
shl
cs
call
or
fnsave
sub
sbb
push
sbb
and
fisub
cmp
push
fs
fisubr
and
or
cmp
les
push
mov
xchg
sar
aaa
nop
fs
fcmovne
inc
add
add
sub
fisub
enter
data16
imul
sbb
sbb
sbb
sbb
in
les
add
and
shl
jo
or
retf
gs
sbb
fadd
dec
js
jg
jl
out
jo
cdq
stc
lea
dec
push
push
hlt
jbe
popf
mov
add
dec
shl
adc
or
fcmovne
scas
adc
or
inc
or
cmp
ffree
sbb
and
dec
rol
sub
pop
add
rcl
adc
add
or
mov
sbb
add
inc
jle
push
daa
jmp
int3
shl
and
and
add
jmp
pop
rcl
and
jns
or
jp
popf
enter
or
mov
jl
ss
ins
or
add
arpl
sbb
add
es
mov
add
aam
ja
loopne
js
xlat
pop
jmp
pushf
imul
or
ja
loopne
cld
jmp
pop
arpl
xchg
push
mov
sbb
xor
and
test
imul
(bad)
xlat
mov
mov
add
cmp
pusha
or
jae
bound
inc
les
xchg
cld
jo
out
mov
into
fs
pusha
mov
inc
inc
rcr
and
xor
jno
imul
out
dec
sub
jbe
push
mov
and
pusha
adc
js
or
mov
sub
xor
adc
out
adc
xchg
popa
mov
les
dec
loope
ror
lods
sbb
frstor
lock
inc
sbb
nop
nop
rol
lds
adc
push
inc
jno
adc
push
aam
or
push
aam
mov
cld
lock
push
mov
inc
popa
cwde
pusha
xchg
adc
call
std
data16
xor
jp
sbb
sbb
fsub
push
and
or
ret
repnz
test
js
sub
push
mov
ret
add
push
pop
sbb
xor
jo
arpl
imul
cmp
add
mov
jmp
add
mov
not
adc
dec
fisubr
movs
fild
jge
bnd
aas
mov
add
or
pushf
inc
cli
inc
cmc
loope
cmps
jge
adc
inc
mov
push
fistp
sbb
pop
or
dec
jbe
shl
or
aam
(bad)
stos
push
xlat
jo
sub
add
mov
ss
jmp
inc
push
mov
dec
jo
rcr
sub
pop
dec
add
mov
imul
icebp
add
fld
sbb
pop
jmp
and
sbb
cdq
aam
xchg
push
daa
enter
fadd
add
cmc
cdq
loope
sbb
clc
push
xlat
xor
outs
sbb
sbb
sub
and
pop
inc
ret
mov
sub
retf
add
(bad)
push
pop
add
mov
mov
and
inc
in
frstor
xchg
sub
mov
jmp
out
xchg
iret
inc
pusha
sbb
test
add
mov
sbb
add
sti
mov
scas
adc
push
enter
dec
cmps
imul
popa
cdq
call
bound
or
add
pushf
cmp
dec
push
into
movs
xlat
jo
dec
cli
add
xor
fld
ror
sbb
sahf
into
retf
cmp
xor
push
rep
mov
dec
xor
clc
xchg
jmp
cmps
and
sar
push
lea
loopne
sbb
and
jp
fs
xchg
xchg
test
inc
cdq
xor
das
imul
popa
push
sub
xchg
push
cmp
sub
fimul
jg
add
or
shl
xlat
jbe
lods
or
icebp
neg
adc
inc
inc
adc
pop
push
in
cmp
jo
sbb
mov
dec
xchg
xchg
cwde
mov
das
jp
xlat
and
adc
js
inc
jg
(bad)
cmps
into
xor
xchg
and
in
inc
mov
add
cwde
loopne
mov
pop
(bad)
lea
cmp
sbb
into
add
jle
pop
push
fsub
pushf
xchg
push
sbb
push
and
push
cs
push
add
and
mov
mov
pop
cmps
adc
sub
or
add
shl
ja
adc
sbb
adc
mov
jl
jnp
xchg
push
mov
sbb
in
adc
mov
idiv
pop
mov
outs
xor
int
test
les
ret
mov
xchg
repnz
movs
jo
cmp
loop
or
rcr
sbb
push
jne
sub
faddp
or
jbe
pushf
fsubr
je
enter
dec
cli
cwde
jle
shl
xchg
push
test
outs
mov
clc
dec
and
add
(bad)
pop
or
add
jnp
ins
lahf
fadd
pop
add
(bad)
inc
cld
jb
mov
les
stos
in
add
or
mov
int
imul
ret
adc
std
add
outs
mov
xchg
dec
push
cmc
mov
push
jmp
add
rol
fadd
xchg
aaa
adc
inc
push
dec
dec
les
(bad)
loopne
retf
push
leave
cmp
and
inc
sub
retf
or
add
fcmovnb
pop
(bad)
pop
retf
ror
mov
mov
sbb
and
push
movs
xor
and
enter
cmp
je
mov
xor
sub
nop
fist
pop
xchg
and
dec
mov
xor
jo
scas
mov
sub
cmp
sub
in
add
add
dec
fisub
or
scas
or
dec
fmulp
xchg
mov
in
in
push
push
push
gs
jns
pop
pop
inc
push
repnz
or
xchg
or
retf
sub
or
cld
add
dec
sahf
or
fisttp
call
add
inc
scas
in
or
or
or
push
or
mov
shrd
or
adc
pop
adc
mov
adc
sub
scas
in
add
adc
nop
xchg
stos
add
adc
xchg
adc
cmp
mov
in
sahf
xchg
fs
push
inc
pop
cs
addr16
pop
and
jns
out
rcr
sbb
mov
sbb
sbb
inc
scas
in
mov
test
sbb
je
push
sbb
sbb
ja
cdq
xchg
out
sbb
iret
fwait
xchg
push
inc
neg
pop
jle
retf
add
sub
sbb
(bad)
sti
adc
iret
cmp
xchg
pop
xor
and
push
fstp
mov
imul
push
in
push
in
imul
jnp
dec
ret
in
in
leave
repz
mov
pop
enter
aas
adc
call
adc
xor
mov
cmp
and
jmp
jmp
push
loope
jmp
in
xchg
push
sbb
in
sahf
xchg
sub
in
mov
out
in
in
xchg
out
or
xor
je
lock
xor
dec
icebp
icebp
push
repnz
repnz
cmp
repz
std
in
cdq
push
push
hlt
hlt
imul
neg
std
cmc
cmc
cmp
inc
div
mov
das
nop
xchg
sbb
gs
clc
mov
clc
or
sbb
stc
and
sahf
xchg
sub
add
sti
mov
cld
cld
cld
je
idiv
sbb
push
push
nop
shl
mov
xor
iret
fwait
xchg
std
sbb
(bad)
(bad)
loopne
xor
cmp
adc
or
add
jle
push
pushf
sar
ins
std
dec
ret
stos
test
adc
jecxz
xchg
push
shl
xchg
xor
sub
in
add
idiv
mov
dec
inc
in
aam
out
out
inc
scas
ss
scas
call
das
(bad)
sti
jo
imul
jmp
aad
aad
jmp
daa
in
cdq
leave
and
or
jmp
pusha
or
pop
ins
nop
out
out
xchg
mov
push
cdq
cmp
or
stos
or
sbb
and
push
cli
stc
daa
mov
imul
mov
das
test
scas
xchg
clc
cdq
jb
or
push
and
stc
sbb
xor
sti
sti
sti
and
or
cmp
pop
in
push
jmp
mov
mov
inc
add
out
dec
mov
and
stos
dec
clc
mov
inc
or
shl
jns
xor
cdq
and
and
and
or
out
xchg
mov
mul
loope
not
sub
nop
sahf
test
inc
mov
mov
pop
repnz
not
mul
hlt
imul
out
push
inc
test
repnz
not
mov
ins
repnz
adc
test
or
in
aad
mul
sub
div
nop
jo
sub
mov
xchg
cmp
cmp
sbb
or
sub
cmp
setb
push
loope
cmc
cli
hlt
mov
xlat
inc
data16
or
push
(bad)
data16
movs
jmp
adc
push
add
dec
ret
fiadd
loope
pop
and
loope
jp
(bad)
setb
pop
hlt
cmp
call
in
xchg
adc
repz
and
mov
repz
adc
or
test
xor
mov
push
and
(bad)
repz
or
daa
test
xor
mov
push
and
repnz
repnz
and
xor
icebp
mov
pop
pop
repnz
or
push
pop
repnz
xchg
icebp
cmc
cmc
mov
(bad)
icebp
mov
pusha
leave
mov
sub
in
or
leave
or
dec
icebp
xor
sub
(bad)
jne
or
adc
test
and
mov
sbb
and
inc
fbstp
inc
stos
jge
hlt
es
inc
cmp
cmp
ret
mov
add
mov
(bad)
mov
add
cs
inc
jne
stc
xor
iret
icebp
dec
add
movs
xchg
dec
add
fdiv
push
add
mov
and
jno
mov
ins
push
shr
sar
xlat
out
retf
test
out
sahf
movs
jbe
outs
sbb
out
out
ins
ss
fmul
out
xchg
addr16
sahf
push
pusha
push
shl
aad
out
sahf
int
fxch
xchg
push
jns
mov
add
rol
aam
enter
push
dec
push
add
rol
xchg
add
ins
dec
push
pop
add
or
fst
out
xor
cmp
and
jge
ret
adc
cmps
lock
adc
or
gs
movs
enter
pusha
imul
cmp
adc
das
sub
adc
add
shl
push
inc
cmp
in
inc
add
inc
gs
add
punpcklwd
pop
and
mov
or
mov
sbb
or
ficomp
rcl
lods
push
shr
dec
inc
adc
mov
call
(bad)
jae
xor
pop
outs
loopne
add
jb
mov
sub
mov
sub
or
jo
sar
pop
jmp
arpl
sub
pop
dec
cmp
test
inc
lods
outs
fsubr
adc
add
jmp
test
xchg
call
test
push
imul
aam
add
loope
add
jb
mov
push
in
sbb
push
ins
and
jp
and
test
jp
cmp
je
mov
sub
stos
test
pop
push
or
adc
int
outs
sbb
adc
jmp
inc
loopne
loopne
es
arpl
mov
sbb
loopne
sub
jmp
and
mov
xor
icebp
gs
dec
cmp
icebp
or
pop
push
fcmovu
pushf
or
sbb
jmp
jmp
addr16
xchg
push
bound
pop
xchg
fsubr
dec
sbb
fs
cmp
gs
fiadd
or
jl
and
add
fstp
add
and
movzx
push
pop
repz
and
ja
jne
sub
push
push
sub
and
mov
je
pop
(bad)
xor
adc
pop
repnz
and
adc
sub
adc
pop
push
adc
add
add
mov
or
fbld
push
pop
pushfw
ja
pop
jbe
lea
xchg
mov
adc
sbb
jp
pusha
xchg
hlt
and
add
pushf
jae
cmp
shl
jb
inc
or
clc
jbe
add
sbb
je
adc
test
jne
add
mov
ins
mov
xor
xchg
imul
cmps
ds
mov
(bad)
pop
fstp
pop
hlt
xchg
lods
test
jne
lock
sbb
xor
adc
adc
lods
fbstp
jbe
clc
dec
cmp
cmps
push
cmp
fsub
mov
pop
cmps
add
xlat
xor
loop
pop
cmp
ja
es
cmps
push
add
sti
fadd
int
add
xadd
fwait
jnp
aas
cmps
add
mov
mov
pop
pop
fsub
ss
xor
or
add
fwait
movs
or
push
cvtdq2ps
movs
dec
add
push
or
mov
test
arpl
mov
inc
(bad)
pop
push
aas
push
xchg
hlt
or
pop
dec
inc
repz
mov
dec
xor
mov
(bad)
mov
xor
inc
aam
cmps
cmp
(bad)
sub
mov
fs
sbb
or
gs
xor
sbb
fcom
sbb
pop
jmp
sbb
fmulp
adc
add
sar
enter
cs
test
add
imul
and
sub
sub
push
ins
pusha
push
jne
imul
int3
sub
sbb
pop
and
outs
inc
pusha
add
xchg
inc
xchg
shl
lods
in
mov
leave
inc
xlat
xor
ret
adc
call
xchg
and
adc
pop
mov
shr
push
push
mov
or
add
or
push
pop
push
jl
push
dec
jge
in
and
pop
mov
inc
push
mov
jge
pusha
es
dec
dec
scas
add
stos
scas
cmps
ins
inc
cmc
xor
(bad)
sbb
xor
push
(bad)
outs
fcmovb
add
sbb
rol
ficomp
clc
mov
sbb
add
cdq
shl
mov
xchg
pop
sahf
pop
pop
inc
or
adc
add
push
test
jmp
aad
cmps
rcl
aam
lods
and
or
inc
cdq
cmp
je
je
push
ret
push
(bad)
out
loopne
push
rcr
not
out
push
gs
jbe
or
lods
push
pop
sbb
out
add
xor
mov
ins
aaa
fmul
mov
sub
cmp
jb
jmp
nop
add
femms
xor
dec
xchg
xchg
jns
sub
fadd
sub
push
or
mov
jo
enter
cmps
test
mov
sub
mov
daa
cmp
sbb
or
jae
sub
std
gs
mov
sbb
pop
enter
(bad)
pusha
xor
shl
add
and
xor
dec
adc
fidiv
ins
xor
push
inc
loopne
pop
push
inc
xchg
xor
sbb
retf
call
xor
sbb
imul
pushf
push
nop
mov
sub
adc
push
in
add
enter
or
stc
ficomp
sub
dec
xchg
and
inc
cdq
inc
cmps
lock
mov
cdq
add
test
adc
retf
jge
or
cmp
jmp
add
cwde
iret
add
(bad)
xlat
add
sbb
lock
push
inc
retf
adc
cdq
push
shl
push
or
out
scas
ins
mov
jne
fs
pop
and
das
cld
das
sbb
fnstsw
test
add
fild
inc
ret
or
movs
movs
xchg
(bad)
jne
inc
mov
je
(bad)
and
sub
and
int
call
cdq
fnstsw
clc
int3
adc
push
sahf
imul
add
sbb
(bad)
les
sti
jbe
ror
mov
dec
loope
xlat
jg
inc
enter
jmp
arpl
sbb
(bad)
push
push
inc
mov
inc
dec
push
(bad)
cmp
mov
add
rcr
mov
es
sub
or
popa
int3
popa
sbb
outs
xchg
pop
mov
push
sbb
xchg
test
dec
imul
mov
mov
jg
ds
jg
jge
push
ss
sar
cmp
add
cmp
pop
mov
or
jne
rep
jmp
push
in
icebp
(bad)
push
push
loop
add
jecxz
pop
pop
aad
sar
dec
push
shl
adc
imul
add
pop
pop
mov
sbb
fdivr
push
adc
gs
hlt
mov
call
cmp
mov
shl
cmp
dec
sbb
retf
aam
push
push
adc
and
pop
mov
cmc
jmp
add
push
sti
repnz
mov
inc
out
jbe
jmp
or
jg
jle
sub
pop
outs
pop
sbb
or
add
pop
mov
inc
xor
push
call
or
push
add
push
jmp
or
mov
or
mov
inc
push
or
inc
or
inc
popa
xchg
or
sub
lods
data16
pop
inc
add
shl
cwde
push
lock
leave
not
rol
mov
xor
rcl
xchg
sbb
stos
cmp
xchg
pop
sbb
xchg
popa
xchg
inc
or
pop
fmul
cmp
add
inc
or
dec
push
(bad)
stc
call
mov
movs
pop
mov
adc
outs
fs
or
jp
or
pop
jae
(bad)
cmp
add
sbb
xchg
pop
(bad)
fimul
mov
mov
jmp
add
jge
sti
xor
lods
or
pop
or
pop
loopne
xor
sbb
enter
xchg
xchg
ret
pop
pop
or
inc
daa
pop
outs
movs
xchg
adc
es
mov
jmp
pop
or
aaa
int
or
cmps
je
sbb
inc
jmp
sbb
add
adc
dec
sbb
dec
shl
loopne
inc
cwde
loopne
pop
pop
jnp
xchg
or
inc
out
add
or
or
mul
jp
adc
es
fidiv
mov
ds
or
or
sbb
jmp
ds
cmps
pop
icebp
and
adc
arpl
mov
add
sti
stos
add
adc
ret
jmp
cmc
imul
and
inc
and
retf
sub
adc
cmp
xor
push
inc
movs
cmps
pop
test
mov
mov
push
sbb
aaa
pop
sbb
adc
sbb
push
cmp
ret
out
or
cmps
int3
cmp
mov
cmp
mov
add
mov
and
fcomp
enter
sbb
jmp
cmc
imul
jbe
test
cmp
jo
movs
push
(bad)
std
call
ror
inc
and
mov
lahf
mov
and
xlat
add
sub
scas
out
ror
in
xor
lock
push
(bad)
and
cmc
xchg
and
pop
(bad)
jmp
(bad)
je
jmp
inc
cmp
je
mov
cmp
xor
je
cmp
jne
xor
movs
push
(bad)
and
or
push
fs
fucomip
in
call
sbb
xchg
aad
or
je
aaa
movs
daa
sbb
pop
or
dec
and
jns
mov
lock
xor
iret
(bad)
mov
pop
sbb
retf
sbb
adc
cld
and
xchg
shr
test
and
cmp
xchg
or
jb
mov
cmc
and
shr
inc
jmp
push
dec
sub
movs
es
shr
icebp
push
inc
jmp
addr16
push
in
cmp
pop
(bad)
je
fbstp
push
mov
push
fst
nop
push
rol
leave
daa
pop
or
jge
push
xchg
or
daa
in
or
dec
inc
sbb
xor
push
loope
dec
or
sbb
jmp
mov
loop
sbb
xchg
aam
or
adc
and
push
jae
and
xchg
je
xchg
inc
shl
sbb
jmp
out
hlt
dec
jp
in
fimul
and
cmp
and
xchg
hlt
popa
icebp
add
add
sub
mov
sub
les
outs
cmp
jb
dec
daa
in
pusha
push
pop
mov
inc
and
jbe
mov
div
or
mov
adc
push
rcr
add
mov
push
mov
mov
nop
jno
mov
jnp
adc
jbe
add
fsubr
dec
jmp
jmp
leave
fld1
sub
mov
xchg
pushw
cmp
add
movs
sbb
xor
adc
cmp
pop
adc
add
xchg
jg
out
or
adc
ss
jle
adc
in
imul
push
data16
out
add
mov
dec
test
mov
lea
sbb
cmp
xchg
out
add
fldenv
jp
xor
push
daa
mov
out
mov
push
retf
mov
mov
sbb
or
fisttp
test
jg
mov
inc
push
mov
scas
or
jae
stc
dec
or
inc
push
shl
pop
push
test
pop
icebp
adc
sbb
xor
push
mov
and
mul
sbb
movs
cmps
or
cmp
jns
mov
loopne
xchg
sbb
shl
mov
fadd
inc
fnsave
push
inc
adc
add
mov
ret
ret
mov
hlt
shl
fcomp
jp
adc
adc
into
repnz
icebp
mov
jae
das
or
call
aad
push
fprem
loope
or
fmul
(bad)
jns
push
cmp
mov
hlt
mov
mov
ret
mov
inc
pop
mov
inc
xchg
rcr
or
test
add
adc
(bad)
xchg
loopne
dec
in
jb
xor
leave
xchg
push
xchg
je
or
fmul
cmp
add
cmp
jb
data16
lods
loopne
adc
test
js
dec
xchg
adc
daa
push
xchg
(bad)
(bad)
jmp
mov
mov
and
imul
push
outs
pop
rol
ds
mov
repz
jl
xor
dec
rol
movs
adc
pop
mov
push
add
jmp
cmp
in
xchg
and
lock
repz
pop
xlat
pop
mov
inc
arpl
imul
stos
dec
pop
mov
les
add
jmp
mov
movs
sbb
jmp
je
xchg
fstp
cli
or
hlt
add
movs
push
or
mov
push
sub
pop
repnz
icebp
xor
das
test
fwait
jmp
add
(bad)
push
or
push
test
dec
ss
arpl
call
ret
dec
pop
fwait
test
and
add
mov
adc
xchg
jmp
hlt
mov
mov
adc
or
jae
shld
shl
cmp
and
mov
loopne
shl
adc
cmp
mov
sub
loope
je
add
pusha
inc
aad
jl
loopne
nop
in
dec
sub
cmp
test
cmc
dec
xchg
adc
aaa
xchg
mov
and
imul
inc
mov
dec
push
mov
cmps
test
pop
iret
jnp
not
je
xchg
adc
test
pop
and
iret
repz
(bad)
int3
les
jg
(bad)
repz
(bad)
jmp
pop
jns
aam
clc
pushf
clc
dec
test
inc
pushf
nop
push
mov
pushf
test
sahf
aam
jg
pushf
sub
pushf
sahf
out
out
mov
push
push
pop
pusha
push
jns
adc
inc
or
iret
(bad)
fdivr
arpl
loop
pusha
jl
jmp
adc
(bad)
sbb
push
adc
jmp
or
jb
adc
xor
out
and
jne
sbb
and
xchg
imul
and
inc
sub
std
inc
xchg
icebp
cmp
clc
call
inc
ja
cmp
jne
cmps
je
add
cwde
addr16
jmp
adc
push
adc
or
jo
sbb
mov
jb
aaa
mov
add
mov
push
inc
mov
cld
jp
xchg
adc
pop
je
cs
cmc
add
dec
add
es
inc
jne
je
js
and
popa
sbb
jbe
ins
push
push
lods
dec
(bad)
iret
and
mov
cmp
je
push
inc
fsubr
pop
test
jbe
jns
ja
call
adc
push
repz
cmp
jbe
push
push
xchg
ins
out
out
mov
jmp
mov
sub
aas
test
push
dec
dec
retf
xchg
push
and
mov
sub
sbb
mov
xor
adc
xchg
inc
inc
push
sbb
and
test
sub
or
sub
jmp
icebp
cmp
pop
inc
outs
adc
push
sbb
ja
jmp
cld
adc
ss
push
dec
mov
fmul
pushw
enter
(bad)
sub
mov
add
pop
push
xchg
out
js
or
cmp
sub
je
add
fst
or
add
xor
sub
mov
push
pop
test
cmps
adc
movs
push
dec
jae
push
mov
sbb
jmp
sub
into
pop
and
adc
or
cmp
or
push
pop
jno
add
or
sub
dec
lds
loop
sti
sbb
add
das
dec
clc
sbb
xchg
and
and
cmp
jp
(bad)
xchg
rol
xor
xor
xchg
addr16
std
or
jmp
clc
movs
or
iret
jg
adc
loope
push
push
fldenv
loopne
or
sub
(bad)
jbe
pop
fdivr
ja
sub
add
mov
pop
cli
(bad)
jb
or
xchg
popa
sbb
inc
in
cdq
mov
xchg
adc
mov
inc
and
bound
xor
and
aad
inc
inc
adc
test
ds
mov
adc
mov
sub
jmp
mov
aam
dec
cmp
repz
adc
mov
scas
xor
cwde
mov
bound
push
mov
jmp
ja
adc
scas
sub
fld
xor
cvttsd2si
mov
adc
add
mov
fbstp
and
mov
push
and
fistp
fild
mov
mov
sbb
cmp
jmp
mov
adc
add
and
dec
adc
ror
cmp
fcomp
adc
test
jnp
mov
pop
mov
adc
enter
xor
mul
cmp
or
cmp
fcom
adc
add
pop
sbb
adc
mov
call
jge
inc
fidivr
(bad)
mov
mov
sbb
addr16
inc
sbb
cs
movs
jbe
mov
out
jle
add
adc
shr
inc
push
xor
fistp
rcr
shr
rcr
or
out
lock
enter
shl
cmp
add
add
cmp
add
mov
nop
fsub
add
ret
pop
add
or
add
xlat
lds
or
mov
lea
aam
cmp
cdq
or
cmp
or
lahf
fiadd
adc
or
mov
retf
test
and
sub
jmp
movs
das
xchg
stos
jmp
out
sub
sub
pop
movs
ror
lds
cmps
sub
sbb
dec
popf
inc
cld
or
jbe
imul
sub
(bad)
jae
jbe
dec
mov
call
nop
push
add
push
inc
gs
neg
test
add
ins
cli
(bad)
fst
add
out
lea
dec
test
push
fwait
jo
push
or
fchs
outs
cli
fldcw
(bad)
fstsw
sahf
jp
imul
test
inc
adc
fnsave
leave
fnstcw
jne
cmc
pop
push
fldcw
test
xchg
push
xchg
mov
repnz
int3
call
sub
(bad)
adc
jb
mov
ret
cmp
repnz
and
enter
rol
jb
xor
add
(bad)
adc
in
add
mov
lods
and
ins
nop
pop
pusha
mov
fldz
mov
add
pop
(bad)
rcl
push
(bad)
ins
mov
rol
pop
add
repnz
and
loopne
enter
add
add
leave
push
repnz
add
pop
add
and
movhps
popf
pop
add
cmp
cmp
retf
pop
loop
mov
push
pop
and
pop
mov
ja
movs
push
pop
adc
add
sbb
xor
inc
pop
add
into
or
or
dec
aaa
adc
pop
add
xor
mov
and
xor
or
and
movs
outs
pop
inc
bound
jmp
hlt
sub
sar
dec
call
(bad)
sbb
clc
popa
jae
mov
mov
call
sbb
outs
mov
cmp
bound
leave
push
test
pop
adc
mov
call
lock
adc
push
ret
daa
push
cmps
mov
xor
mov
xchg
adc
daa
movs
das
call
mov
mov
adc
jge
leave
sub
std
add
xor
dec
xchg
lea
xchg
(bad)
lds
pop
push
sub
add
mov
loope
clc
imul
or
jp
push
stc
push
xor
mov
fisttp
call
loopne
inc
dec
or
push
lds
outs
scas
inc
out
jmp
loop
nop
aas
add
ret
ja
psraw
mov
jle
adc
(bad)
in
dec
cmp
cli
lahf
jmp
mov
cmp
xor
jae
cmps
dec
add
pop
enter
and
popa
mov
test
mov
add
push
cmps
xor
das
and
in
fsqrt
(bad)
xchg
add
lock
lock
sub
and
dec
enter
and
adc
sbb
shl
adc
mov
popf
ins
cmp
add
and
loope
or
or
call
jmp
pusha
sbb
and
xor
adc
push
and
jmp
sbb
mov
imul
js
add
pop
cmp
je
cmp
ja
push
cmp
cmp
jecxz
call
add
imul
or
xchg
je
inc
cmp
mov
in
and
enter
add
dec
loope
push
or
aas
inc
pop
push
mov
sti
test
dec
test
neg
add
pop
mov
add
add
jle
add
ss
xchg
inc
pop
loope
dec
and
fmul
mov
outs
ret
jmp
sti
jecxz
mov
xor
je
mov
jge
pop
repz
sub
sub
lea
aad
inc
push
outs
and
sar
and
fst
xchg
rcr
sar
int3
loopne
push
stos
xchg
bound
ds
rcr
push
cmp
cmc
add
push
mov
pop
cmc
ds
mov
les
mov
cmp
and
outs
hlt
or
mov
je
loope
jmp
inc
cmp
mov
or
ret
sub
xor
cld
cmps
push
(bad)
sbb
cmc
push
in
cmp
push
or
bound
fadd
add
fisttp
mov
add
retf
add
inc
adc
aad
aad
out
or
mov
cli
add
push
test
and
fadd
les
push
mov
punpcklbw
leave
dec
add
test
or
and
dec
mov
jl
push
dec
xor
jnp
fs
gs
cmp
pop
sub
or
pop
cmp
mov
cmp
pop
cs
mov
ret
jb
push
cmp
adc
arpl
clc
adc
cs
rcl
mov
xor
retf
xor
daa
jge
ja
or
sub
jle
pushf
ror
lar
fstp
inc
or
mov
mov
xor
lock
pop
sbb
cmp
idiv
fsub
dec
(bad)
fmul
push
movs
adc
ja
clc
sbb
fld
xor
mov
add
gs
into
ins
dec
mov
dec
add
mov
jle
add
inc
push
and
imul
mov
pop
xchg
jl
xor
dec
pusha
pusha
adc
adc
xor
inc
sub
push
add
or
pusha
daa
lea
jo
jmp
inc
push
push
jmp
xchg
rcr
rol
adc
out
xchg
std
jbe
mov
xchg
je
or
jne
jbe
add
dec
push
push
dec
dec
sub
bound
sub
sar
add
shl
push
aas
movs
adc
call
pop
mov
pop
je
cmp
rcl
add
jg
push
xlat
inc
xor
and
dec
xchg
out
outs
lock
dec
rcl
jmp
pop
inc
sub
inc
jle
in
sbb
or
or
sbb
sbb
data16
push
adc
or
and
es
clc
add
ds
test
jo
icebp
jae
push
mov
adc
xchg
mov
push
test
lods
clc
mov
mov
pop
clc
int3
add
xor
dec
mov
pop
inc
add
xchg
loopne
or
inc
jae
lea
add
dec
jecxz
add
jb
imul
jb
sbb
xor
or
push
xchg
inc
ins
popa
and
pop
or
pop
loope
or
adc
dec
sub
aad
jl
adc
mov
je
mov
jne
(bad)
push
sub
lea
dec
push
fldcw
rcr
inc
sub
daa
loop
out
push
sbb
call
dec
lock
cli
sub
iret
pop
adc
lea
into
mov
and
clc
fidiv
lock
out
pop
lock
mov
adc
mov
xor
dec
fsubr
mov
xchg
pop
or
push
sti
add
and
out
aas
adc
cmp
(bad)
loopne
mov
mov
xchg
mov
sbb
fnstsw
mov
dec
pushf
imul
add
retf
fdiv
pusha
pop
or
add
cmp
or
ror
and
add
rol
sub
shl
rol
sahf
adc
jl
lock
jb
lods
cpuid
add
out
add
les
pushw
or
or
xchg
test
add
mov
mov
xchg
lea
nop
xchg
and
adc
dec
(bad)
div
inc
mov
repz
dec
push
or
jmp
adc
push
dec
sbb
or
cmc
adc
or
cmp
or
xor
ds
stos
pop
les
push
add
daa
je
push
mov
dec
mov
xchg
sar
jmp
mov
cs
(bad)
pop
xor
idiv
mov
mov
or
test
aam
jo
rol
ret
pop
sbb
mov
or
or
cmp
sub
mov
xor
add
adc
call
and
jmp
inc
ficomp
push
les
and
cmp
xor
jne
or
cli
cmps
mov
das
hlt
inc
data16
mov
and
mov
shr
aam
hlt
ficomp
or
cmc
jo
(bad)
sbb
inc
or
add
or
ins
adc
push
movs
or
or
jno
push
push
loop
push
fstp
fwait
or
mov
mov
cmp
dec
loope
xchg
pop
arpl
mov
push
mov
and
lock
adc
cmps
cs
dec
std
cmp
sahf
dec
and
jns
hlt
add
mov
xchg
mov
retf
xor
repnz
ror
sbb
or
sub
icebp
inc
pusha
xchg
dec
dec
les
inc
and
add
nop
xchg
sbb
nop
add
nop
cmp
inc
cwde
lds
cmp
cmp
pop
lds
mov
pop
je
enter
mov
jmp
push
dec
mov
push
div
dec
loope
lock
and
cmp
push
adc
and
mov
aas
or
aaa
mov
bound
test
and
je
dec
daa
push
popa
mov
mov
imul
loopne
jne
adc
xchg
aam
xlat
inc
pusha
inc
add
sbb
sub
push
mov
sbb
daa
in
sahf
push
ror
ins
push
mov
mov
les
fadd
jbe
test
inc
pop
out
daa
enter
fcomp
sar
dec
add
and
fst
fnsave
popf
test
adc
mov
inc
mov
cmp
mov
test
nop
xor
scas
sti
data16
sub
nop
popa
inc
pop
and
lock
in
pop
mov
mov
gs
in
nop
pop
pop
inc
fwait
push
shl
rcl
mov
add
xor
xlat
jae
clc
nop
push
push
cmps
mov
mov
dec
cwde
xor
inc
add
and
xchg
mov
(bad)
adc
jmp
dec
out
mov
sbb
or
test
cld
mov
jmp
sbb
mov
xor
xor
xadd
int3
leave
int3
or
push
int3
jp
fbstp
sbb
cmps
lock
jmp
test
push
rol
inc
pop
lock
push
sub
add
(bad)
pcmpgtb
or
push
jbe
mov
or
mov
mov
sahf
(bad)
std
les
xor
or
in
call
mov
or
mov
(bad)
add
in
fmul
add
pop
shl
mov
mov
and
mov
cmp
jno
or
mov
lods
inc
outs
cmovle
sbb
in
test
pop
je
and
les
adc
jo
xchg
mov
and
push
adc
jae
jno
js
es
hlt
pop
sub
or
push
dec
rol
push
xchg
xchg
xchg
add
sbb
pop
popa
cmc
mov
adc
arpl
dec
sbb
loopne
(bad)
fdiv
psubw
popf
aam
int3
jns
stc
ins
jle
clc
or
test
or
jns
movs
shr
and
test
(bad)
imul
call
in
push
pop
gs
or
cld
adc
pop
in
or
rcr
je
jno
adc
movs
aad
adc
(bad)
jmp
sub
push
fwait
je
pop
mov
ret
rcr
push
mov
add
js
add
loopne
mov
push
das
aam
ret
jo
ret
sub
ror
pop
or
push
je
mov
or
push
or
call
adc
and
pop
push
ror
mov
push
sub
mov
mov
inc
jns
add
dec
jne
lea
dec
inc
(bad)
jo
popa
cmp
js
cli
dec
inc
out
arpl
inc
cmp
sub
jl
pop
fidivr
in
hlt
mov
and
test
popf
out
ret
enter
enter
pop
pop
cmp
or
rol
pop
sbb
sbb
call
cld
ficom
push
push
ja
popf
dec
jae
sahf
pop
sub
js
call
add
jb
test
cmp
dec
and
mov
mov
std
iret
mov
or
mov
lods
jmp
and
jge
in
je
and
outs
inc
pop
dec
push
xchg
loope
jmp
lea
mov
dec
nop
sub
mov
cmp
fcomp
rcr
ja
enter
adc
lea
cli
jmp
or
loopne
jmp
mov
test
sub
inc
jle
xchg
lock
mov
pop
es
ins
ja
xchg
and
ret
xchg
mov
xor
sbb
sbb
push
popf
(bad)
and
pop
cs
mov
mov
sbb
mov
jmp
mov
sub
repnz
mov
ja
(bad)
(bad)
jne
aam
xadd
dec
js
inc
inc
outs
aaa
dec
jg
inc
std
jne
cwde
adc
jmp
sub
jne
cmps
jge
cmp
les
sub
add
leave
and
je
mov
sub
cmp
cs
icebp
fmul
pusha
mov
mul
retf
cmp
and
shl
lock
or
std
call
aad
cs
fisttp
sbb
push
ins
push
and
sub
inc
loop
scas
stos
mov
rol
jnp
ret
dec
cmp
xchg
out
ins
adc
aam
sub
clc
mov
imul
leave
inc
je
mov
rcr
ss
scas
inc
sbb
xor
jp
push
and
add
fs
adc
or
call
jbe
add
outs
popw
jo
inc
sbb
jge
add
jb
mov
in
push
push
push
sub
pop
xchg
lock
mov
xor
pop
lahf
or
dec
cli
lods
push
sub
dec
push
pop
and
aad
xor
jle
sbb
mov
es
xor
mov
outs
leave
or
inc
dec
jne
add
add
adc
stos
mov
jae
lds
adc
jnp
cmps
cmp
fwait
adc
adc
bound
mov
clc
sbb
aaa
add
cmp
fmul
cs
loop
shr
std
xchg
stc
inc
sub
cmps
dec
shl
and
popfw
inc
and
pop
ror
or
jno
rcr
mov
fmul
push
daa
and
adc
cmp
xor
push
add
scas
jo
pop
jge
pop
xor
add
stos
rcr
fld
sub
jns
push
or
adc
pop
push
imul
or
inc
xor
inc
or
in
(bad)
jae
xor
dec
sbb
mov
dec
mov
jmp
(bad)
mov
and
jmp
sub
sbb
daa
mov
jmp
push
and
imul
test
cmp
in
std
outs
mov
push
and
pop
push
int3
inc
(bad)
repz
cmp
add
mov
mov
lea
xchg
xchg
ins
push
cmp
lods
sbb
add
cmp
fs
xchg
and
cmp
add
push
arpl
or
mov
sbb
add
inc
pop
sub
mov
popa
outs
mov
mov
(bad)
lods
test
sub
rol
sbb
sub
xor
das
rcr
rol
bndstx
and
mov
cmp
add
imul
shr
aam
add
sbb
cwde
dec
fimul
or
sbb
(bad)
fucomp
aam
mov
lea
jg
pop
dec
psrlw
or
imul
cld
lock
jbe
inc
add
add
(bad)
or
mov
ret
inc
add
lahf
cmp
add
es
dec
cmp
sub
jo
sbb
xchg
xchg
lahf
loopne
or
add
test
mov
pop
es
or
mov
je
test
sbb
jo
or
mov
xor
add
popa
inc
shl
daa
add
xchg
out
push
inc
and
add
push
dec
mov
movs
popa
xor
cmp
push
pop
mov
sub
push
outs
xchg
nop
cmp
pop
movs
jne
and
mov
jmp
mov
adc
push
dec
in
add
mov
mov
pop
call
mov
xor
jmp
adc
cs
cmp
add
ds
pop
clc
push
hlt
adc
dec
movs
and
add
add
loop
lahf
push
xchg
js
popa
inc
sbb
push
lea
dec
sbb
or
mov
xchg
or
sub
ds
add
mov
daa
adc
mov
pop
or
je
lahf
sub
xor
jne
add
mov
mov
push
or
std
inc
inc
push
mov
sbb
xor
lahf
pop
aam
pushf
jl
cmp
shld
sbb
sbb
xchg
aam
lea
out
push
cmc
xor
jae
and
cmp
je
push
push
push
cmp
mov
jae
xor
arpl
xor
jne
adc
mov
jne
aaa
adc
imul
sbb
fld
dec
add
push
add
(bad)
lea
in
and
ja
sub
dec
push
dec
jbe
aaa
jbe
lea
push
ss
(bad)
ins
adc
imul
inc
sbb
nop
sub
push
push
lahf
cwde
inc
dec
inc
outs
sbb
nop
(bad)
cdq
and
mov
cmps
inc
in
push
int
push
test
hlt
mov
and
adc
and
ins
ss
dec
scas
clc
repnz
or
loop
push
jne
sub
or
jecxz
fadd
cwde
push
(bad)
jno
sbb
stos
inc
xchg
lahf
xor
loopne
cmp
div
in
pop
jnp
add
hlt
add
in
xchg
cld
ret
mov
aaa
je
jl
dec
jne
inc
add
mov
sbb
adc
rol
adc
push
dec
mov
push
add
jmp
dec
outs
xchg
imul
xchg
cmp
sbb
sub
xor
mov
add
push
dec
gs
mov
push
adc
or
push
add
add
mov
mov
enter
add
out
sub
movs
xor
or
xchg
xchg
pusha
jmp
lea
aam
repz
out
inc
jne
jne
mov
mov
daa
test
clc
xchg
rol
mov
inc
add
add
or
lahf
inc
cmp
ror
ret
call
xchg
dec
(bad)
jae
push
adc
dec
sbb
fisubr
pop
(bad)
(bad)
ins
push
stos
sub
cmp
(bad)
mov
test
sub
adc
or
adc
push
push
sub
jmp
sub
out
sub
push
in
daa
inc
push
jmp
sub
mov
xor
hlt
push
imul
shl
xchg
push
mov
xor
pop
and
cmp
and
cmc
stos
adc
jmp
mov
sub
in
es
enter
test
jecxz
push
aas
inc
pop
push
lds
in
test
(bad)
push
fst
adc
mov
jae
popa
sbb
loopne
jnp
dec
jmp
sub
mov
ins
(bad)
call
cli
xor
push
mov
push
fiadd
and
push
sub
iret
mov
add
mov
call
ja
popf
iret
push
mov
mov
ss
mov
cmp
scas
sbb
add
pop
leave
add
add
lods
fsub
inc
adc
inc
sbb
jo
xchg
gs
xor
pop
sbb
sub
inc
xchg
inc
dec
inc
shl
adc
mov
cs
icebp
mov
lea
clc
inc
sti
push
fldenv
inc
or
pushf
adc
inc
add
test
push
mov
addr16
(bad)
fwait
adc
xchg
pshufw
fwait
mov
jb
adc
push
aas
jmp
push
xor
sar
and
in
and
xor
and
adc
pop
dec
dec
out
add
lock
jmp
xchg
int3
dec
add
loope
pusha
and
nop
adc
xor
adc
(bad)
rcr
or
dec
xchg
jo
mov
cmp
mov
cld
add
jno
ret
jae
and
mov
ja
cdq
push
leave
or
or
cwde
xor
and
xor
sub
mov
loope
mov
add
(bad)
sub
adc
xor
pop
cmp
nop
lods
data16
jbe
hlt
adc
inc
adc
add
and
lds
xchg
add
icebp
dec
scas
xor
lahf
sti
add
icebp
cmp
gs
sub
fstp
or
push
jge
push
loopne
adc
retf
test
out
fidivr
cmp
or
(bad)
scas
pop
jle
inc
adc
lds
pop
jbe
test
clc
dec
cmc
jg
push
push
xchg
cmp
xchg
mov
push
sub
sbb
xor
mov
xor
cmp
xchg
lods
add
mov
cmp
test
and
jp
sub
mov
mov
pop
lea
inc
call
aaa
inc
mov
sub
pop
xchg
xchg
lss
mov
sti
add
mov
xchg
rol
sub
pop
push
mov
pop
pop
ss
jbe
outs
cmp
cmp
xor
or
js
and
lea
adc
js
aaa
mov
(bad)
imul
idiv
ins
inc
sti
movs
ss
imul
jmp
test
jno
into
xor
seto
cwde
stos
idiv
sub
pusha
call
mov
test
jne
xchg
push
fdivr
jge
lods
xchg
call
enter
inc
fmul
in
nop
ror
jle
outs
pusha
and
aam
sbb
mov
push
icebp
push
mov
dec
aaa
stos
xor
pop
popa
shl
jo
fdiv
dec
inc
mov
inc
pop
jo
jae
pop
jbe
leave
sub
sub
jl
and
repnz
jns
lahf
rol
xchg
or
rol
ins
and
xor
pop
inc
sahf
les
fwait
daa
xor
jecxz
loopne
jbe
sbb
(bad)
jecxz
fs
pop
cmp
pusha
pop
push
js
sbb
retf
or
clc
mov
sub
icebp
mov
push
pop
mov
shr
cmp
sbb
sbb
sbb
mov
adc
push
fbstp
cmp
jo
mov
xchg
pushf
js
adc
bound
dec
add
or
jno
aas
fsub
lds
les
add
and
dec
iret
fst
lods
and
add
les
or
cmp
add
or
and
add
sub
add
mov
xor
inc
fsubr
ret
nop
sbb
shl
add
ret
xchg
jnp
mov
je
mov
cmp
mov
push
add
cs
out
dec
add
mov
add
mov
mov
sbb
test
out
adc
fadd
jl
cmps
cmp
push
pop
xor
inc
movs
jecxz
inc
inc
push
dec
pop
inc
sbb
cld
test
iret
jo
dec
sub
inc
addr16
inc
add
dec
cmp
mov
or
jl
pop
inc
ret
(bad)
jae
in
push
aam
test
and
or
inc
sub
inc
mov
into
sbb
ss
xchg
cmp
jle
push
imul
jne
dec
jmp
jns
sub
rcl
(bad)
mov
pop
ret
fidivr
add
push
push
rcr
jmp
push
xchg
ret
mov
aaa
jl
or
or
in
ss
adc
je
test
jo
leave
sbb
push
or
in
mov
mov
aam
cmp
jno
and
popf
mov
inc
mov
adc
loopne
cli
xchg
inc
push
add
xor
xchg
call
in
or
xchg
loopne
imul
test
pop
add
cmp
icebp
sti
jl
loopne
pop
ja
mov
movsx
cld
dec
sar
sbb
sar
pop
lods
movs
sar
adc
and
sahf
scas
cld
or
lahf
cs
out
sub
rcr
scas
sar
retf
mov
ss
loope
or
and
retf
int
pushf
jb
in
jne
or
add
push
ds
in
(bad)
sbb
pop
lock
mov
or
sti
mov
ffreep
arpl
jns
adc
push
shl
push
or
retf
add
mov
ja
inc
cmps
jge
test
fs
push
sbb
test
stc
fidiv
push
je
ins
je
ja
aam
mov
xchg
shr
adc
ins
jle
sub
mov
pop
and
jbe
jne
js
add
mov
movs
push
add
dec
xor
ins
cmp
adc
outs
call
js
xchg
xchg
pop
pop
pcmpgtb
add
mov
test
shl
xchg
mov
ror
daa
or
fdiv
xor
inc
je
sti
ss
neg
or
add
mov
mov
outs
loope
adc
lea
jo
xor
adc
retf
in
and
arpl
cdq
test
xor
das
lock
ret
gs
add
loope
or
dec
and
in
movs
push
adc
mov
out
shl
in
mov
push
xor
mov
test
addr16
fst
leave
add
push
ins
cmp
xchg
lahf
jl
inc
cmp
int3
inc
or
test
loope
xor
pop
ror
dec
mov
add
or
cmp
popf
add
test
repnz
les
jg
or
mov
rcl
cld
cmp
sbb
inc
setp
inc
call
mov
xor
dec
mov
dec
nop
xchg
xor
(bad)
dec
inc
add
xchg
dec
xchg
out
cmp
clc
pushf
dec
in
sbb
mov
dec
(bad)
pop
sub
pusha
push
pop
jmp
inc
sti
not
addr16
and
outs
je
xchg
jo
arpl
fsubr
ss
xor
fidiv
shl
mov
mov
call
add
adc
repnz
xor
lds
les
or
mov
cmps
clc
add
pop
mov
push
add
mov
sar
jp
add
jne
mov
jmp
cmp
jle
popa
mov
sub
cmp
push
push
sbb
lock
pop
sub
ror
adc
and
ins
inc
shl
inc
cmp
mov
inc
cld
adc
(bad)
sbb
mov
sub
inc
sbb
je
test
xchg
xor
push
mov
and
sub
in
jne
popf
push
push
les
cmps
cmp
addr16
int
aas
jb
cmp
jne
xor
inc
call
ds
push
or
sbb
mov
cld
setl
gs
cld
or
mov
jbe
inc
mov
inc
daa
add
movs
rcr
mov
rcl
mov
sti
push
test
mov
push
into
xor
pop
out
or
inc
pop
mov
sbb
inc
cmp
or
mov
inc
cld
or
test
adc
test
ret
sbb
pop
mov
adc
rol
neg
loop
cmps
adc
and
outs
fst
cwde
scas
jecxz
or
sbb
test
mov
mov
mov
or
dec
sub
inc
and
lea
add
das
sbb
cwde
dec
popf
and
mov
cmp
sub
push
mov
retf
inc
mov
stc
cmp
dec
jmp
jecxz
fsubr
sub
sub
inc
cmp
movs
mov
imul
cmp
mov
(bad)
shl
mov
inc
jmp
test
xor
popa
loope
or
add
mov
aas
sar
ret
cld
jecxz
fwait
dec
mov
daa
mov
adc
sub
movs
inc
push
sub
and
mov
dec
xor
or
popa
inc
sub
push
push
ror
aas
dec
clc
test
sub
cmp
or
jg
loopne
pop
clc
xchg
dec
xlat
sub
xchg
mov
mov
adc
xor
call
adc
js
xchg
in
jle
(bad)
push
cmps
sub
out
inc
lods
ror
retf
xor
clc
mov
out
loope
push
jmp
jmp
loopne
dec
mov
xchg
jmp
mov
lds
mov
pushf
sub
je
push
nop
enter
outs
movs
and
fcomp
xchg
sub
std
(bad)
out
mov
movs
daa
pop
mov
mov
pop
(bad)
sbb
adc
in
out
rol
cmp
ror
cmc
fwait
dec
mov
data16
sahf
pop
cmp
push
cmp
cmp
adc
dec
outs
repz
and
sub
pop
rcl
jmp
mov
test
cli
add
push
pop
inc
stos
dec
push
ret
(bad)
lock
cmp
jg
xor
add
jmp
test
rol
push
mov
jmp
ds
(bad)
ins
mov
aas
aaa
pop
ret
pop
xor
iret
xor
test
adc
mov
ja
imul
clc
nop
dec
addr16
hlt
fstp
mov
mov
cmps
add
xchg
(bad)
mov
test
or
or
les
nop
(bad)
enter
pop
add
mov
xchg
cmp
jne
out
jns
cli
pop
ja
movzx
movzx
jb
xchg
les
push
mov
shl
ror
jmp
in
push
push
mov
and
sar
out
xlat
pusha
mov
scas
dec
and
push
and
jbe
jp
dec
and
push
xchg
imul
stos
sbb
mov
loop
adc
mov
in
mov
test
push
pop
inc
push
enter
pop
jecxz
inc
outs
scas
and
mov
hlt
inc
sahf
outs
lods
icebp
cmps
push
inc
mov
fistp
ins
jne
jbe
pop
ret
mov
and
outs
fdiv
cmp
ret
pop
inc
fimul
cmp
xor
lea
(bad)
cmp
jb
aaa
cs
sbb
aam
in
in
dec
add
push
mov
pop
xor
xor
mov
rol
leave
add
dec
(bad)
mov
(bad)
jge
and
lea
(bad)
call
clc
adc
cmps
repnz
rcl
inc
sbb
mov
jne
or
call
push
cs
int3
sbb
xchg
or
dec
jg
in
mov
and
dec
jns
jns
add
mov
xchg
das
sbb
xchg
js
(bad)
inc
in
push
frndint
cmps
xchg
xor
clc
mov
dec
dec
(bad)
in
jle
pop
je
add
xchg
call
mov
rcl
mov
dec
lahf
adc
popf
sahf
mov
xchg
pop
and
enter
test
dec
dec
mov
call
fcomp
lods
pop
es
and
dec
fadd
pusha
mov
repz
or
xchg
enter
xchg
cdq
xor
aam
in
xchg
pop
pop
inc
push
test
dec
mov
jb
jb
mov
aam
js
movs
in
test
dec
jb
in
lea
xor
rol
jmp
xchg
add
pop
inc
in
mov
or
cmc
or
cmovs
fucomp
cmps
sar
adc
add
dec
dec
push
inc
jle
idiv
fld
xor
outs
dec
and
xchg
cmps
jle
fcom
add
and
xor
or
daa
mov
and
mov
jmp
cli
jne
sub
cdq
push
pushf
or
sub
jns
(bad)
cmps
lea
stc
sub
cmp
daa
mov
loope
sub
call
or
in
and
jp
adc
stos
or
rcr
retf
cwde
push
xchg
xor
je
sub
or
and
lods
add
int3
jnp
push
inc
(bad)
lsl
jmp
push
pop
push
push
imul
rcr
iret
leave
repz
movs
push
adc
or
cmp
xchg
mov
jbe
dec
sub
sbb
adc
daa
xchg
sar
in
adc
ja
mov
iret
pop
mov
sub
call
(bad)
adc
add
loop
jle
adc
inc
test
sahf
adc
fs
test
inc
sbb
xchg
rol
fnstcw
push
movs
inc
pop
and
cvtpi2ps
sbb
cmc
xchg
leave
cdq
xor
push
mov
data16
or
xchg
dec
pop
push
pop
sub
cmp
mov
shl
or
rcl
push
mov
lock
cmp
(bad)
pop
outs
outs
and
jle
sahf
mov
js
(bad)
std
and
xchg
cmps
or
jne
cmp
data16
mov
stc
push
test
mov
mov
xchg
add
sti
mov
push
(bad)
cld
sbb
xchg
data16
add
ins
sbb
lods
jmp
pop
jl
dec
cmp
push
sbb
lahf
mov
jge
push
push
jmp
cmp
inc
pop
in
das
je
sub
xchg
cmc
adc
addr16
and
fild
inc
bound
pop
push
adc
or
xor
pop
jne
push
je
adc
adc
aas
int
and
jne
lea
dec
push
push
imul
mov
clc
and
xchg
les
iret
push
stc
push
mov
mov
cmp
adc
enter
xchg
xchg
les
inc
and
shl
pop
or
and
push
loop
add
cmp
sbb
data16
xchg
or
dec
jno
lods
aad
add
lock
lea
jle
pop
push
leave
cmp
je
or
sahf
add
aad
xor
push
into
sbb
adc
mov
cmp
lods
push
pop
push
sar
add
je
push
lock
test
mov
inc
cmp
fdiv
adc
sbb
aad
popa
sbb
add
or
sub
(bad)
jbe
(bad)
shr
ret
cmps
test
adc
and
mov
cs
xor
jmp
add
call
mov
sub
xchg
jne
lea
adc
scas
aaa
mov
pop
div
jl
daa
xor
xchg
mov
das
ja
sbb
add
es
cmp
pop
cmp
leave
jle
mov
push
sbb
jbe
rcr
dec
addr16
fst
push
add
and
push
xchg
xor
sub
mov
jo
pop
push
js
pusha
loopne
fld
movs
mov
mov
sub
xchg
or
and
imul
dec
dec
xchg
push
cmp
mov
or
arpl
out
rol
adc
push
xor
(bad)
shl
cmp
in
je
mov
sub
dec
inc
scas
xor
xor
jecxz
mov
xchg
inc
fisttp
and
xlat
sbb
cmp
addr16
pushf
sub
ss
jg
dec
adc
hlt
mov
jle
and
lock
or
in
imul
aaa
mov
pop
inc
pop
cmp
sub
sahf
push
mov
stc
jp
pop
loope
sub
aad
aaa
mov
add
dec
sub
inc
sub
sar
retf
(bad)
sbb
pop
add
sbb
push
inc
add
jle
adc
test
and
jno
pop
inc
lock
mov
mov
jge
or
int
clc
stc
or
jl
and
retf
push
mov
push
push
cmp
ret
ret
or
fwait
inc
mov
mov
fs
inc
push
pop
or
add
mov
in
jne
sub
adc
sub
add
dec
xchg
or
clc
ja
adc
(bad)
cmp
lea
pop
adc
sub
jg
mov
cmp
je
cmp
and
pop
pop
adc
inc
adc
pop
adc
add
mov
or
cmp
jnp
clc
push
mov
or
jl
or
(bad)
movsx
loope
ja
or
sbb
lock
sbb
jmp
cmp
sbb
cmc
fild
push
clc
mov
into
jbe
shl
in
adc
cmp
sbb
dec
or
mov
or
sbb
aaa
or
mov
sbb
sbb
(bad)
xor
pop
sub
xor
add
mov
cli
fs
mov
fsub
mov
adc
std
dec
jnp
or
pop
stc
xor
add
fs
add
test
fcmovnbe
pop
aas
add
loopne
arpl
mov
(bad)
cdq
jmp
push
in
mov
mov
(bad)
not
sbb
retf
jne
test
pop
mov
cmp
fld
stos
inc
jne
xchg
push
mov
add
adc
enter
outs
cmp
xor
(bad)
addr16
jmp
inc
sbb
in
mov
mov
add
pop
into
clc
xchg
add
in
inc
stc
adc
fld
jecxz
mov
and
or
inc
hlt
dec
lock
add
or
mov
add
jl
pop
lea
(bad)
dec
mov
popa
or
mov
push
shr
and
mov
test
push
pushf
mov
dec
cld
push
jae
pop
cdq
jp
fisubr
sahf
sub
sbb
mov
push
inc
jmp
push
mov
cs
stc
or
xchg
cmps
mov
fwait
shl
dec
iret
push
xor
add
ja
pop
dec
scas
rcl
sahf
mov
push
cmp
dec
add
je
pop
mov
adc
jnp
aad
dec
pop
into
jmp
fs
jp
add
movs
data16
jmp
mov
mov
popf
or
scas
cmp
and
mov
sti
cmp
jle
jle
sub
cmp
xchg
popf
sahf
loopne
nop
push
jmp
dec
push
jmp
cmp
xchg
jbe
push
mov
sub
gs
cmp
pop
lods
lock
cmp
jg
(bad)
int
jo
sbb
mov
ret
loopne
xchg
pop
dec
in
mov
out
(bad)
pop
jge
vpmacssdd
cmp
jbe
nop
add
jne
cmp
pop
xor
mul
aad
test
jmp
rcl
xchg
rol
pop
fxch
bound
ins
bound
leave
(bad)
fucom
mov
adc
inc
sub
cwde
adc
pop
pop
mov
cmp
pop
stc
sub
cmp
into
sub
scas
mov
lods
sub
mov
jg
stos
loopne
inc
sbb
ds
mov
cmp
test
and
pusha
dec
xchg
sbb
adc
loope
sub
add
test
add
sbb
fld
pop
enter
add
dec
pop
adc
mov
repnz
dec
mov
outs
sub
rol
jg
cmc
jecxz
call
push
inc
jmp
push
int3
sahf
popa
pop
xor
pop
sub
hlt
leave
and
mov
xor
sub
jecxz
shl
es
js
dec
adc
setp
gs
sbb
xlat
test
cmp
sub
push
(bad)
(bad)
sub
ss
jle
call
or
xor
retf
and
adc
inc
(bad)
shl
aam
mov
lods
add
cmp
xchg
shl
sbb
sbb
mov
or
add
push
mov
lahf
cmp
pop
mov
enter
in
or
pop
cdq
mov
fisub
shl
rol
mov
test
inc
inc
or
mov
adc
pop
mov
repz
mov
ja
into
ja
push
fist
aas
cdq
test
pop
inc
test
int3
in
push
cld
pusha
jecxz
enter
or
jmp
js
(bad)
jne
inc
or
and
adc
mov
xchg
jne
xchg
ficom
push
adc
add
add
pushf
xchg
sub
lea
xor
mov
jl
mov
test
in
push
loopne
sub
add
bnd
mov
dec
mov
mov
inc
cmp
outs
sbb
or
mov
mov
test
jg
add
or
xor
pop
js
mov
(bad)
fist
shr
mov
add
or
shr
rcl
push
or
push
inc
jmp
imul
bound
or
push
mov
das
adc
inc
cld
fadd
push
add
add
test
inc
jo
or
shr
mov
shr
or
mov
sahf
leave
push
pop
fmul
xor
jne
pop
sub
mov
mov
or
or
mov
or
(bad)
sub
cmps
imul
ficomp
add
imul
inc
jmp
out
gs
mov
fisubr
mov
mov
or
mov
mov
jbe
loopne
mov
loope
push
sti
sbb
popa
dec
pop
cmp
pusha
add
push
daa
mov
mov
into
jmp
lods
sti
inc
ret
push
dec
and
scas
add
popf
dec
lds
sbb
add
jne
push
retf
or
add
loopne
add
neg
popf
push
jns
add
adc
and
fadd
enter
or
enter
call
pop
daa
movs
push
xchg
add
mov
dec
fstp
push
pop
and
fnstcw
pop
push
xor
jns
call
sub
ss
mov
cli
loope
mov
je
repz
mov
movq
push
dec
adc
push
and
stc
fsubp
pop
xor
push
dec
and
push
jg
jnp
iret
imul
inc
or
jbe
jle
xor
push
loope
out
outs
jg
jg
jo
(bad)
xchg
not
jne
ret
xor
in
pusha
add
rol
inc
out
nop
cmps
fnstsw
add
mov
xor
mov
sub
mov
xor
or
inc
push
neg
jecxz
xor
mov
add
ret
mov
pusha
push
pop
in
test
dec
add
fs
jmp
add
mov
(bad)
in
push
push
ret
clc
adc
daa
mov
scas
jge
mov
(bad)
cmp
and
and
setnp
xchg
mov
call
sub
mov
inc
gs
cmp
xchg
(bad)
lea
icebp
shr
lds
aaa
sar
xor
dec
and
or
test
(bad)
sbb
or
and
shl
std
fs
pop
and
adc
nop
icebp
movs
or
push
mov
fbstp
xor
cdq
ror
sbb
cmp
push
add
dec
(bad)
push
pop
push
push
or
xor
jne
push
aas
out
push
nop
inc
xchg
mov
pop
in
or
mov
mov
cmp
xor
in
jle
popa
cmp
aaa
xchg
rcr
xor
xchg
test
and
jo
push
and
push
pop
imul
pop
das
imul
ds
movs
loope
gs
adc
mov
lea
xchg
push
add
cwde
inc
shr
xchg
ss
popa
xor
inc
arpl
dec
add
je
xchg
pusha
shl
pop
mov
xor
inc
hlt
jp
test
jecxz
xchg
mov
mov
push
xchg
hlt
sbb
add
xor
cmp
xchg
xchg
icebp
add
fisttp
out
(bad)
out
clc
mov
lock
push
jl
arpl
ret
xchg
fiadd
sti
mov
cmps
jo
sbb
sbb
out
cmp
shl
add
mov
add
sar
cdq
xor
jae
mov
gs
lea
(bad)
into
cwde
xchg
push
ret
mov
stc
sub
in
aas
xchg
xchg
add
mov
sbb
mov
adc
cs
push
loopne
movs
inc
add
dec
mov
xchg
sbb
sbb
hlt
mov
outs
mov
add
cmp
mov
cmps
xor
jl
sub
sub
popf
dec
pop
ss
not
sub
sub
push
pushf
cmp
inc
add
iret
or
jnp
loope
ret
scas
inc
push
jl
sbb
rol
inc
mov
push
sbb
(bad)
sub
push
jl
dec
lock
adc
add
loope
mov
sbb
push
fs
xchg
sbb
pop
loop
adc
lock
xchg
xchg
inc
add
inc
push
pop
and
xor
clc
add
adc
loope
adc
pop
inc
sbb
pop
mov
ror
imul
loopne
out
xchg
cmp
or
mov
sahf
pop
nop
es
pop
push
mov
or
xchg
pop
fsubr
dec
or
lea
fs
sub
pop
adc
add
adc
cmp
cwde
push
sbb
sbb
or
pusha
daa
or
ret
ret
in
test
and
cwde
js
shr
mov
jno
and
clc
out
jle
cwde
or
inc
mov
shl
mov
add
xchg
push
popf
inc
shr
js
mov
push
mov
dec
mov
inc
add
pop
mov
jmp
addr16
lahf
push
rcl
ror
inc
imul
pop
push
adc
sub
jmp
stc
xor
out
js
and
nop
(bad)
adc
dec
mov
dec
ret
dec
push
out
popw
add
push
repz
xor
jmp
inc
js
mov
inc
adc
xor
lea
std
pop
dec
or
pop
mov
or
mov
xchg
movs
aam
popa
sbb
or
dec
xchg
rol
add
ror
lock
mov
ret
xchg
jo
mov
push
add
pop
cdq
add
es
pop
imul
and
mov
sub
jno
xchg
xor
imul
fld
in
pop
mov
fbstp
cmp
xor
jae
add
and
clc
or
push
adc
(bad)
push
lea
adc
add
cmp
mov
mov
aas
or
cli
or
daa
adc
nop
nop
popa
retf
sbb
mov
inc
ret
cmp
inc
movups
or
imul
and
sbb
and
and
push
pop
in
hlt
inc
mov
je
dec
cmp
xor
int
push
add
and
mov
fiadd
out
sbb
mov
fidivr
mov
push
fs
das
fs
cmp
xor
push
hlt
mov
and
adc
dec
faddp
cmp
sub
push
mov
mov
into
test
add
inc
push
sbb
pop
out
stc
test
gs
mov
or
mov
sub
dec
(bad)
or
hlt
push
sub
cdq
jo
push
mov
test
lods
jnp
int
rcr
sub
out
in
fabs
cmp
jecxz
add
stos
xor
or
add
cmp
movs
stos
test
sbb
jbe
mov
int
cmps
push
test
ja
or
add
add
jo
cmp
jbe
inc
cmps
or
stos
mov
adc
aad
adc
rol
fadd
aas
sbb
mov
push
ficom
jmp
sub
inc
pop
cmp
loopne
adc
add
sub
sub
test
sbb
sbb
dec
cli
sbb
sub
push
jl
inc
inc
xor
mov
sbb
dec
xor
cmp
and
push
xchg
(bad)
cmps
jecxz
mov
std
add
(bad)
sub
adc
cmp
ret
jae
mov
cmp
jne
push
ins
std
add
mov
inc
inc
sbb
retf
xor
adc
pop
movs
lds
gs
xchg
and
out
sub
jne
jge
ror
pop
clc
and
les
or
cwde
jne
push
bound
movs
pop
jbe
jl
add
fs
pop
jns
loopne
add
adc
fiadd
into
jg
push
mov
stc
sbb
mov
pop
enterw
js
add
test
sbb
cmp
imul
nop
or
daa
(bad)
mov
jne
dec
jne
lea
push
lods
stc
cmp
add
push
add
shl
and
dec
jg
xor
or
dec
jmp
lods
xor
cmp
mov
mov
fcomp
test
shl
push
push
jo
retf
das
ror
leave
retf
mov
pop
and
or
xchg
jecxz
stos
xchg
aas
push
jae
inc
call
xchg
jne
xchg
ja
xor
xor
call
pop
in
mov
add
inc
or
fidivr
jno
xchg
or
push
jl
inc
je
xor
test
jnp
mov
mov
mov
or
jne
mov
mov
lock
and
(bad)
push
stos
mov
mov
loopne
sub
and
jmp
daa
test
pop
pop
loope
enter
push
mov
cmps
test
xchg
in
mov
xchg
ins
and
push
and
shl
xor
jno
xlat
or
cwde
xor
add
mov
dec
cmp
and
xor
rol
adc
jo
lods
xlat
mov
loop
(bad)
inc
cmp
and
movs
nop
icebp
inc
cmp
push
dec
das
out
popf
test
mov
adc
or
leave
xchg
mov
pop
popa
add
add
enter
xor
mov
jmp
sbb
movs
pop
mov
push
pop
nop
std
mov
and
cmp
repnz
sbb
test
sbb
pop
loopne
xchg
push
inc
dec
lea
adc
or
bound
lods
xor
scas
jmp
cmps
push
xchg
and
xor
div
(bad)
xchg
fiadd
xor
cmp
aad
pop
fwait
push
mov
sub
div
xchg
hlt
arpl
push
sbb
inc
inc
mov
or
int3
push
loop
push
mul
jo
cmp
call
or
pop
(bad)
xor
push
push
cmp
aaa
enter
and
adc
jecxz
lea
movs
xor
js
je
arpl
pop
sbb
rol
mov
add
dec
push
push
push
pop
add
imul
retf
and
es
dec
arpl
pusha
pop
ss
je
loope
push
pop
mov
loopne
aas
mov
outs
pop
add
sbb
dec
jmp
adc
mov
and
mov
lock
ds
pop
(bad)
out
pusha
xor
add
pop
pop
mov
test
and
dec
add
or
ror
or
add
popf
xor
shr
mov
jecxz
lea
je
cmc
xor
mov
mov
ins
jns
inc
xchg
adc
xchg
faddp
fld
aas
xor
aad
and
jb
add
add
add
lea
mov
mov
jb
int3
call
ffree
enter
std
cmp
js
lods
std
test
jno
sbb
lea
sbb
(bad)
mov
mov
jne
and
mov
jmp
xchg
sub
aas
fild
ret
loopne
mov
xchg
out
test
mov
cmp
push
les
dec
(bad)
shl
push
xor
cmp
mov
xchg
std
int3
or
inc
repz
rcl
pop
mov
sbb
movsx
xor
dec
dec
jbe
or
pusha
mov
or
add
sub
pop
cld
adc
mov
lea
mov
mov
cmp
nop
outs
push
xor
lods
es
mov
or
jl
mov
call
or
movs
pop
add
and
frstor
dec
aas
ins
jne
inc
sub
pop
mov
adc
and
jne
cmp
add
ja
cmp
inc
xor
push
cmp
movs
adc
push
imul
ficomp
pop
retf
stc
push
mov
and
scas
mov
mov
repnz
jecxz
mov
loopne
imul
mov
xor
inc
push
cwde
cmp
mov
call
mov
std
jle
push
lea
mov
std
dec
xor
cmc
push
inc
or
mov
in
push
dec
scas
lods
pushf
adc
pop
sub
dec
call
test
std
popf
mul
jle
cmp
dec
movs
xor
imul
test
xor
test
nop
imul
dec
cmp
xchg
add
(bad)
jns
or
mov
cwde
add
push
or
pop
jns
lods
sbb
hlt
std
loopne
test
fist
enter
pop
mov
add
movs
sub
jno
or
in
movs
xor
and
retf
xor
dec
adc
pop
xchg
xor
pop
rol
pop
push
dec
outs
xlat
or
repnz
adc
in
and
add
mov
(bad)
call
std
lock
dec
add
retf
inc
sahf
lods
lock
fdivr
fdivr
mov
leave
mov
int3
and
fs
lock
mov
sbb
sbb
shl
ja
out
jne
sub
popf
sbb
out
xchg
psrld
dec
mov
mov
mov
dec
push
jle
jmp
mov
lea
pop
mov
or
jl
inc
repnz
mov
inc
aam
std
movs
std
nop
jge
lock
std
int
sub
shl
lock
ror
jb
std
movs
std
cmp
dec
movs
std
adc
std
jg
xchg
inc
ds
sar
mov
add
test
pop
jae
jns
std
std
jo
inc
add
push
fs
push
mov
out
call
dec
push
push
sbb
xchg
ret
popf
fdivr
inc
inc
cmp
mov
std
lock
cmp
inc
sahf
lock
call
cmp
(bad)
std
daa
adc
jns
dec
sar
sbb
shr
retf
push
nop
dec
std
pushf
std
mov
daa
inc
repz
call
push
fsubrp
push
sar
icebp
or
outs
inc
xor
sbb
lods
jb
pushf
jmp
push
mov
jmp
dec
jl
inc
push
cmc
retf
inc
ror
std
sub
xchg
xchg
jle
std
xor
push
lods
inc
psubq
sbb
jmp
sub
sbb
add
lds
jg
int3
std
sbb
sub
test
jne
adc
jp
and
into
inc
idiv
mov
loop
pusha
cmc
jbe
mov
aam
cmp
inc
stos
push
sub
fmul
aas
add
pop
jmp
cdq
aam
dec
popf
sbb
or
enter
cmp
push
mov
jb
hlt
add
dec
enter
push
je
and
adc
test
mulps
sbb
ror
push
dec
sub
or
jl
push
scas
loopne
dec
ficom
xor
mov
mov
sbb
pop
push
pop
bound
out
lds
jl
mov
sbb
dec
pop
fnstcw
cmp
push
jnp
cmp
(bad)
bnd
ss
test
inc
xor
pop
sbb
and
xor
xlat
(bad)
push
mov
xor
xor
and
and
or
xchg
repnz
imul
cs
mul
repz
inc
pop
cmp
ss
ror
xor
push
adc
outs
sbb
xchg
cmp
xor
test
or
inc
aaa
sbb
and
cdq
adc
jne
pop
ret
sbb
pushf
pusha
div
fmul
push
cmps
ja
xor
nop
xchg
xchg
popf
mov
test
test
cld
lahf
mov
or
sub
popa
xchg
scas
and
arpl
mov
dec
mov
or
jp
je
mov
mov
jecxz
mov
je
mov
add
mov
cmps
mov
sbb
push
cmc
adc
add
dec
sbb
xchg
sbb
add
rcl
xor
ret
sub
add
aam
push
retf
jle
mov
cmp
fld
sub
pop
fwait
push
sbb
call
lock
or
mov
push
enter
in
jnp
into
in
push
js
cmp
mov
popa
inc
bound
fnstenv
pop
pop
jmp
das
pop
scas
sub
pop
ins
pop
sub
pop
fisubr
add
and
sbb
repnz
mov
icebp
push
jmp
out
pusha
xor
jmp
add
push
lahf
daa
ret
hlt
out
retw
xchg
ins
inc
add
xchg
mov
cmp
rcr
loop
and
or
or
je
fwait
xchg
data16
or
jmp
dec
xor
cs
jge
jo
sub
sahf
shr
jns
jmp
pusha
clc
inc
inc
sbb
dec
clc
fst
mov
lds
lds
or
lea
ins
adc
test
push
in
add
rol
(bad)
loop
hlt
mov
jnp
repz
or
push
pop
sbb
rcl
or
add
imul
xchg
sub
ss
int3
jne
inc
inc
cmp
jbe
mov
pop
inc
pop
sub
sbb
test
jle
push
sbb
and
inc
dec
add
je
push
xchg
or
inc
iret
sar
add
popa
lock
push
push
mov
xor
clc
pop
pop
lahf
arpl
lea
xchg
and
stc
xor
jne
push
push
test
fdiv
and
sbb
rol
sub
and
mov
xor
or
push
pop
test
pop
lea
xchg
iret
pushf
add
pop
fiadd
ss
in
mov
adc
xor
ret
cmp
out
xlat
sbb
add
pushf
(bad)
and
jo
fisubr
pusha
je
push
je
mov
dec
sub
int
fidiv
clc
or
sub
xchg
adc
mov
cmp
fsubr
mov
adc
leave
sbb
inc
add
or
pop
inc
push
outs
jge
cmc
mov
rol
inc
ss
pop
mov
cmp
data16
sbb
jp
ss
cmp
ret
jp
(bad)
sub
cmp
enter
mov
add
push
fld
aas
lock
push
cmps
add
in
out
push
xor
sbb
add
maskmovq
div
jno
ret
mov
mov
adc
outs
jo
sub
addr16
push
or
or
add
jge
xchg
dec
movs
fisttp
mov
adc
mov
inc
xor
(bad)
clc
aam
rcr
and
cdq
xchg
aaa
fnsave
mov
ds
mov
inc
out
sahf
xor
rcl
sbb
mov
push
dec
or
jl
adc
add
adc
out
test
ret
ss
cmp
imul
add
add
xor
mov
fnstsw
aas
sbb
xor
mov
movsx
sub
in
(bad)
jp
dec
je
(bad)
mov
dec
mov
mov
loope
mov
les
mov
and
(bad)
rol
add
dec
hlt
dec
push
or
push
out
idiv
movs
pop
lea
mov
add
and
mov
jbe
sbb
ficom
je
or
add
push
dec
ror
mov
mov
xor
push
test
adc
clc
lock
add
and
es
sub
xor
imul
add
inc
sbb
push
pop
inc
sbb
push
sbb
cmp
jmp
fist
into
add
inc
arpl
push
and
or
push
mov
cmp
or
and
jmp
cmc
fisttp
push
xchg
sbb
mov
adc
repnz
imul
imul
dec
and
and
leave
call
pusha
daa
dec
jns
mov
cmp
shl
mov
sbb
xchg
and
arpl
scas
ja
fucomp
test
add
ltr
call
jmp
jmp
(bad)
mov
jl
sub
inc
clc
cmc
jmp
cmc
aam
xchg
out
in
push
out
cld
smsw
add
inc
sbb
inc
adc
push
or
inc
test
mov
cmp
mov
or
(bad)
mov
sbb
push
sub
ds
(bad)
and
xor
push
push
push
jmp
pop
push
push
push
push
das
mov
or
fcomp
and
pand
jo
fidiv
fdiv
jp
dec
adc
push
sbb
pop
sahf
fnsave
pushf
jmp
dec
pusha
arpl
or
(bad)
aaa
jae
cli
imul
mov
or
clc
data16
call
push
pop
jnp
fcmovnu
sbb
call
push
fsub
dec
mov
mov
mov
aaa
leave
dec
push
cmp
jl
cmp
jg
push
jle
fst
nop
push
and
add
mov
repnz
jle
jge
call
xchg
push
add
int3
ret
pop
out
jne
xchg
dec
add
cdq
mov
fwait
scas
sbb
scas
es
jno
sbb
shrd
ret
sub
mov
sub
(bad)
out
mov
lods
retf
and
or
in
xchg
mov
in
or
xor
xchg
mov
mov
xchg
ins
repnz
sbb
adc
imul
nop
push
add
data16
xchg
mov
inc
mov
jl
int
xchg
inc
push
(bad)
push
jmp
xor
jl
jg
iret
mov
sub
ja
push
inc
xor
cli
jg
mov
(bad)
cld
lea
lea
stc
arpl
xor
mov
aad
and
(bad)
cmc
add
ins
test
(bad)
mov
aaa
rcr
(bad)
sbb
mov
push
out
add
fsub
hlt
jl
mov
inc
mov
sbb
sub
retf
shl
xchg
pop
mov
loope
mov
cmp
daa
ret
ja
add
outs
jmp
jns
sbb
jae
retf
popa
fld
cmp
push
inc
ret
cmp
adc
cdq
cs
int3
mov
imul
out
jne
mov
mov
inc
add
or
jl
fld
ret
and
sub
or
rcr
pushf
popa
mov
add
inc
loopne
pusha
clc
cmp
outs
test
jmp
std
push
mov
in
push
dec
inc
xchg
fs
fld
clc
jno
cwde
cli
out
mov
fs
sub
push
pop
sbb
leave
aam
pop
sbb
or
dec
push
cs
or
rol
pusha
ret
add
lods
test
enter
in
lods
je
pop
mov
jmp
sbb
ret
jns
jmp
add
push
pop
ror
enter
xchg
test
or
sahf
xlat
xor
adc
push
or
call
mov
fwait
(bad)
imul
iret
dec
pop
xor
and
dec
mov
pop
mov
and
add
inc
lea
sub
sahf
sub
xchg
test
sahf
inc
call
add
test
je
fisttp
sbb
in
movzx
jnp
or
inc
add
je
cmp
dec
dec
or
cmp
mov
data16
mov
mov
movs
cld
sbb
mov
mov
cli
das
sub
sbb
movsx
or
dec
xchg
imul
cmp
push
(bad)
jle
cmp
jl
push
nop
fcomp
loopne
pusha
adc
movs
cmp
fs
dec
leave
and
push
xor
out
mov
lock
pop
jns
jl
add
push
xchg
xor
rcr
imul
ret
cs
xchg
ss
and
dec
adc
mov
aam
dec
movs
push
and
and
inc
sbb
imul
sub
push
sbb
movs
cld
inc
nop
jg
mov
lods
mov
inc
int3
sbb
stos
iret
test
cmp
push
dec
in
cmp
leave
imul
enter
push
push
add
sbb
push
mov
push
or
add
add
movs
ja
rcr
cmp
push
das
adc
push
dec
cmp
movs
mov
push
lea
xor
xchg
adc
lods
sbb
ret
xor
loopne
and
push
push
cmp
aaa
retf
lods
lahf
xchg
cwde
dec
or
mov
jmp
sbb
sbb
jl
pop
pop
mov
xchg
dec
movs
ins
push
add
jle
sub
add
outs
mov
mov
imul
push
add
movs
cmp
xchg
push
cld
mov
sub
xor
push
sbb
push
mov
es
mov
mov
outs
retf
aaa
mov
ins
push
sbb
in
adc
mov
lods
pop
stc
outs
mov
dec
xor
pop
hlt
imul
cmp
dec
mov
lahf
add
inc
or
sbb
in
loopne
or
sbb
jg
adc
dec
ror
cld
rol
mov
pusha
in
aam
sbb
mov
cmp
jo
jo
add
and
outs
fsubr
xor
in
or
rcr
enter
cmp
push
mov
inc
push
pop
cmp
push
xchg
stos
xchg
and
adc
ret
les
rsm
or
add
daa
jns
xor
shr
xor
adc
mov
sub
adc
or
(bad)
inc
jb
and
or
jle
js
loopne
rcr
xchg
xchg
inc
mov
sbb
cmp
inc
loope
push
pop
pop
les
sub
repnz
xchg
in
fadd
jmp
(bad)
int
nop
pop
stos
cdq
aam
pop
mov
cmp
loopne
retf
push
jl
std
mov
fsubrp
pushf
cmp
and
cdq
mov
xchg
je
mov
cdq
neg
add
cmp
scas
xor
add
adc
pop
pop
or
movs
add
inc
jl
or
push
aad
(bad)
xor
xchg
scas
shl
mov
arpl
in
scas
and
cmovp
enter
dec
iret
push
pop
mov
sub
fsub
jne
mov
adc
test
pop
and
sbb
push
xchg
push
add
inc
dec
pop
in
retf
xor
clc
and
xor
and
scas
mov
rol
inc
cs
xor
cwde
fnsave
jbe
iret
lea
xchg
jns
pop
test
jo
loope
mov
mov
loope
dec
sbb
ja
sbb
loop
mov
outs
sbb
and
push
jne
pop
sbb
xchg
or
or
and
ja
stos
inc
jnp
xchg
add
jno
xor
mov
jae
loope
popa
jmp
cmp
jl
cmps
push
sbb
inc
or
loope
loop
hlt
mov
enter
jp
je
sar
pop
lock
jne
add
xchg
mov
or
pushf
mov
adc
fcmovb
add
jl
mov
retf
dec
leave
sub
sbb
add
dec
or
adc
movs
push
jl
mov
push
pop
(bad)
mov
jmp
mov
sbb
adc
or
xchg
add
pushf
and
aas
mov
ror
mov
mov
or
add
ins
mov
xor
and
or
rcl
and
aad
mov
and
shl
adc
cwde
push
test
push
xchg
xor
push
pop
jle
mov
ret
shl
push
les
(bad)
rol
jne
push
nop
pop
sbb
enter
shl
push
ins
(bad)
lds
arpl
ss
add
nop
xchg
add
jbe
js
xor
test
loopne
mov
mov
lods
nop
push
pop
inc
fdivr
mov
cmp
or
hlt
fsub
or
setb
jle
shr
lea
add
in
and
jbe
pusha
ret
ret
test
test
sbb
ret
sub
ds
mov
or
call
adc
xchg
xor
fadd
and
and
lock
(bad)
lock
ret
dec
pop
pop
out
rol
inc
push
popf
push
push
cmp
scas
gs
add
jg
addr16
bound
pop
scas
sbb
js
jno
push
popa
inc
and
inc
or
and
or
mov
push
cmps
out
mov
adc
clc
add
jbe
inc
dec
adc
pop
test
lods
sti
retf
ja
dec
sahf
dec
xchg
popa
and
scas
jle
(bad)
pop
lock
inc
hlt
pop
jmp
(bad)
mov
xlat
add
es
and
cmp
jb
test
cmp
test
aam
add
sub
jno
or
inc
jnp
cmps
sbb
je
cmp
cli
jns
jb
cmp
imul
push
push
or
or
dec
push
in
push
cwde
sub
outs
dec
retf
push
call
and
popf
movs
or
(bad)
cmp
or
mov
add
push
mov
test
or
pusha
rol
cmp
push
push
mov
pop
es
jmp
mov
dec
mov
cmp
push
inc
pop
pop
fstp
pop
cli
shl
sub
xchg
sbb
or
add
fadd
and
or
mov
push
ret
or
pop
stos
xor
mov
dec
pop
xchg
popa
push
les
popa
inc
sti
test
ss
pop
xlat
nop
and
adc
mov
cmp
(bad)
adc
packsswb
inc
xchg
push
out
mov
retf
jmp
pop
inc
push
cdq
inc
shr
inc
fwait
iretw
push
jne
arpl
in
dec
enter
gs
popa
xchg
test
sub
or
fwait
push
sbb
outs
retf
mov
addr16
ret
dec
pop
movs
jbe
dec
xor
jmp
clc
inc
leave
mov
pop
push
push
inc
aas
mov
push
push
or
outs
daa
add
test
rcl
gs
nop
cmp
shl
xchg
inc
inc
mov
jmp
sti
and
pxor
pushf
call
cdq
sar
loop
shr
(bad)
and
xchg
jg
inc
adc
sub
inc
push
pusha
in
call
mov
aaa
mov
retf
add
xor
xor
mov
je
xor
shr
mov
mov
sub
sbb
add
dec
ror
pop
pop
ret
movs
push
or
cli
pusha
sub
push
mov
bound
add
shr
adc
xor
add
xchg
out
jae
loopne
push
lds
add
mov
fs
cmps
xor
lahf
bound
and
cmps
lea
pop
sub
sbb
sub
cmp
xor
cli
adc
bnd
lea
lea
or
sub
sub
and
fcomp
jbe
fwait
inc
mov
mov
pop
mov
push
ins
pop
jmp
mov
adc
fiadd
jno
enter
sbb
xchg
and
inc
adc
movs
pushf
imul
and
ret
dec
dec
and
add
sub
cmp
test
jmp
push
jne
push
pop
or
pop
shl
cmp
test
cmp
xor
out
xchg
sub
push
sub
div
ins
push
cld
je
xchg
add
adc
dec
cli
out
test
iret
add
inc
cmp
rol
mov
es
ror
fldenv
add
inc
add
add
or
push
pusha
dec
sbb
jp
sbb
into
outs
sbb
mov
or
add
xor
inc
or
or
(bad)
jb
shr
enter
push
fs
enter
or
sbb
fs
adc
push
cmps
cld
push
cs
push
cmp
cmp
inc
inc
or
inc
and
enter
out
sbb
push
push
cs
nop
cmp
fs
adc
push
xchg
xor
dec
mov
add
test
push
cmp
mov
and
dec
xor
jne
cmp
fwait
mov
sub
push
mov
mov
inc
push
clc
fwait
in
mov
mov
ror
cmp
and
push
popf
leave
out
mov
mov
pop
sti
scas
not
cmp
ins
inc
cs
or
mov
jg
ss
cmp
je
or
out
mov
dec
cmp
add
dec
lock
mov
cmp
pop
xor
mov
inc
inc
mov
xlat
add
out
call
rol
mov
inc
add
inc
aad
adc
imul
xor
sub
dec
mov
xchg
push
sub
and
mov
jo
xchg
scas
pop
test
js
cmps
aad
add
pop
dec
jnp
imul
jno
cmps
dec
push
or
(bad)
je
rcr
mov
lahf
add
sbb
mov
sbb
ins
(bad)
(bad)
or
add
pop
fld
or
inc
pop
test
je
ret
push
pop
rol
fldenv
js
adc
dec
push
mov
push
(bad)
pop
cmp
inc
clc
add
sahf
popf
mov
or
bswap
aas
sub
mov
rol
adc
pop
mov
adc
or
fwait
(bad)
aad
or
push
cmp
add
es
or
aam
push
je
aas
and
cmp
mov
push
lea
push
sub
das
xchg
dec
or
push
adc
add
or
mov
mov
loope
push
xchg
add
and
mov
jmp
lea
cmp
sub
outs
or
mov
sbb
test
mov
mov
or
or
pop
sbb
bound
xchg
jmp
ins
fucomip
sbb
fsubr
add
jge
xchg
pop
fucomi
xchg
cmp
sahf
adc
or
inc
(bad)
dec
cmp
lea
and
ins
or
jmp
and
inc
mov
inc
call
pop
stos
pop
(bad)
and
push
fadd
push
and
xor
fcom
or
ins
dec
and
mov
in
xchg
scas
mov
add
lock
ud2
dec
shl
enter
inc
push
jnp
or
rcr
and
mov
jae
aam
or
cmp
add
push
ss
pop
pop
add
ret
lahf
jmp
sbb
enter
movs
aas
outs
ss
xchg
mov
sub
pop
inc
mov
xor
xor
test
add
mov
jb
stc
sub
jl
js
popa
xlat
outs
imul
shl
inc
fisubr
test
and
mov
xchg
inc
popf
fstp
lds
xchg
jecxz
aam
jg
adc
mov
ror
shl
add
xor
xor
test
add
sub
jnp
(bad)
(bad)
(bad)
pop
inc
xor
mov
call
pop
add
adc
ds
adc
cmps
or
test
or
lods
sub
pop
stc
xchg
hlt
stos
int3
or
jae
add
and
hlt
and
ss
out
movsx
and
and
jno
cmp
mov
add
in
xchg
cli
xor
ror
lods
enter
mov
dec
cmp
mov
scas
sbb
clc
sub
lea
data16
push
ss
and
xor
out
outs
mov
sub
pop
jmp
mov
inc
(bad)
sub
push
and
sbb
inc
sbb
add
(bad)
aad
fiadd
or
or
push
sbb
inc
(bad)
pop
sbb
out
es
shr
pop
sbb
js
jg
clc
fiadd
jb
xor
scas
jmp
mov
pop
out
sub
fimul
or
in
sub
push
shl
push
sbb
in
and
mov
mov
push
jg
mov
(bad)
adc
inc
dec
pop
or
ror
or
rol
add
ror
adc
test
jnp
mov
mov
inc
cs
rcr
(bad)
cld
clc
push
cmp
xlat
xor
add
sahf
std
add
mov
mov
jp
loopne
xor
ret
jg
push
jle
in
push
or
cmp
sbb
mov
and
push
inc
ret
bound
sahf
fwait
adc
fs
(bad)
adc
cs
xchg
inc
or
or
sub
retw
aaa
push
lods
ja
add
mov
push
mov
push
xor
adc
ins
mov
das
push
add
cmp
aad
fnstenv
inc
retf
jo
mov
sbb
cs
xchg
pop
or
adc
jne
nop
scas
jmp
cmp
mov
movs
xor
push
sbb
jmp
mov
js
mov
pop
std
out
inc
and
sub
push
dec
dec
and
leave
lock
adc
push
push
mov
mov
mov
jbe
sbb
xor
sub
adc
stc
mov
pusha
xchg
and
push
add
add
popf
jmp
xor
movs
add
pop
sahf
clc
gs
or
pop
data16
xor
mov
ins
outs
lahf
gs
popa
je
inc
je
repnz
mov
jge
xor
lods
inc
jmp
inc
pop
adc
popf
sub
push
test
mov
inc
sbb
cmc
mov
std
mov
das
and
mov
mov
add
jmp
jb
xchg
add
sub
add
adc
xchg
test
add
lea
sub
jecxz
stos
push
mov
push
push
pop
sar
inc
call
push
lock
lods
push
sahf
icebp
imul
or
jno
and
(bad)
jb
xlat
dec
std
sub
dec
or
add
or
mov
and
enter
or
jg
push
outs
dec
nop
inc
ret
xor
cmp
jne
lahf
clc
push
das
mov
mov
icebp
scas
rcr
mov
ja
sar
jle
(bad)
out
push
(bad)
imul
xchg
out
test
mov
push
pop
push
xor
xchg
sub
or
dec
and
mov
mov
sub
pop
xor
cmp
cdq
mov
mov
dec
loop
imul
mov
inc
inc
pusha
cs
shr
rol
inc
fs
and
lahf
nop
clc
popf
dec
mov
dec
add
fimul
mov
cli
push
pop
mov
jmp
shr
or
sbb
sub
cmp
pop
jmp
xor
sbb
push
pop
in
nop
pushf
dec
add
mov
or
inc
nop
inc
daa
cmp
arpl
(bad)
jne
out
and
pushw
in
xor
cmp
ja
ficom
cmp
stos
call
fadd
adc
in
retf
pusha
push
sbb
ret
push
aas
fcom
push
lock
jecxz
data16
and
or
sub
lea
daa
pop
nop
dec
push
cdq
mov
sbb
out
add
mov
cmp
or
popa
out
shl
arpl
leave
inc
xchg
xchg
das
push
push
enter
jb
pop
sbb
addr16
mov
rcl
ret
icebp
(bad)
(bad)
cmp
test
jg
(bad)
xor
push
push
push
nop
fidivr
mov
xor
(bad)
xor
mov
sbb
stc
cmp
mov
add
int3
inc
repnz
push
mov
mov
outs
shl
pop
fwait
jno
xor
and
xchg
lahf
push
xor
leave
je
push
popa
or
xor
and
jg
outs
es
mov
je
sub
sub
repz
fist
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
test
stos
adc
jg
or
or
jb
neg
mov
mov
push
jnp
mov
ret
xchg
add
in
pop
xor
je
sbb
xor
test
mov
imul
inc
inc
pushf
adc
adc
sbb
xchg
test
(bad)
popa
jne
pop
jp
cmc
pop
ret
or
lods
jg
ja
inc
jmp
shl
arpl
movs
lods
lods
sub
xchg
mov
and
cmc
sbb
jne
sbb
jmp
push
push
je
mov
jne
mov
pop
pop
into
xchg
jle
push
and
jmp
dec
adc
mov
lahf
mov
sub
inc
ins
or
dec
adc
xchg
cmp
movsx
sub
jl
call
sbb
fld
cmp
dec
xor
adc
inc
arpl
jmp
cmp
jl
clc
rcr
sbb
xor
std
add
(bad)
aas
ins
dec
xor
add
sar
or
pop
inc
push
dec
and
xchg
ss
mov
int3
adc
pop
pop
push
fsub
add
jp
mov
rcr
jmp
sub
sbb
and
shr
adc
add
mov
inc
jl
push
dec
sbb
ins
xchg
or
xchg
mov
ds
mov
mov
ins
push
push
sub
add
add
(bad)
je
mov
xchg
ins
sub
or
ins
(bad)
fadd
mov
sub
or
mov
and
jb
inc
push
and
mov
and
ucomiss
jmp
add
in
mov
add
add
xor
mov
mov
cmp
(bad)
fmul
inc
pop
jl
add
fs
xor
hlt
lea
mov
ret
repnz
add
or
mov
cwde
mov
add
and
gs
sahf
lods
fadd
pop
xchg
stc
enter
shr
add
lea
test
cmp
mov
call
sub
dec
cmp
jae
dec
retf
test
pushf
pop
les
mov
jmp
(bad)
jmp
call
push
jo
lock
push
test
imul
push
scas
test
cmp
aaa
dec
(bad)
mov
mov
jge
push
mov
dec
dec
xor
xor
pop
jne
jl
mov
add
and
dec
pusha
iret
and
test
cmp
js
lock
and
rol
mov
pop
inc
dec
dec
dec
mov
test
js
inc
pop
das
or
mov
out
ret
mov
rdmsr
adc
jb
(bad)
(bad)
fisttp
dec
push
or
mov
(bad)
mov
sbb
retf
adc
add
jae
inc
test
or
inc
mov
xor
sub
sbb
and
sbb
inc
sub
lods
and
mov
add
mov
movs
outs
into
and
adc
adc
dec
sbb
dec
adc
fmul
adc
xchg
sub
push
fxtract
aad
mov
mov
add
mov
mov
ret
sub
lea
dec
sub
bound
inc
test
cld
ret
pop
and
inc
shl
mov
ficomp
nop
stos
cmp
lahf
(bad)
or
aas
inc
mov
and
dec
add
inc
or
sub
mov
in
mov
hlt
add
cmp
rcl
adc
and
pushw
jmp
jae
pop
test
fs
dec
sbb
je
xchg
or
add
scas
cmp
push
pop
add
and
movs
ins
xor
sub
inc
rcl
inc
pop
(bad)
ins
pop
sub
lock
cli
pop
ins
movs
or
push
cmp
or
jmp
jmp
adc
sub
call
cs
inc
fcom
cs
cmp
push
(bad)
fistp
mov
xchg
push
adc
gs
pop
ss
mov
and
cmp
inc
fistp
nop
add
add
loope
sub
hlt
pop
hlt
inc
sbb
out
pop
push
clc
pop
add
pop
xor
lock
adc
mov
hlt
adc
push
xchg
arpl
inc
fild
enter
jl
or
and
fxch
cmps
push
sbb
adc
push
pop
push
clc
sbb
popa
sbb
arpl
js
cmp
or
stos
pusha
inc
shl
adc
dec
xchg
inc
pop
stos
sbb
in
add
mov
dec
je
xor
sbb
js
scas
push
inc
sub
and
lock
mov
add
movs
cs
mov
xor
adc
pop
xor
popf
add
cmps
lds
dec
add
movs
scas
mov
test
pop
jmp
rol
or
mov
add
jecxz
cmp
xchg
push
mov
sbb
xor
xchg
xchg
mov
xor
sub
or
and
jne
mov
cld
mov
sub
fisub
add
or
xlat
ret
fdivp
lds
cmc
mov
shl
inc
xchg
mov
inc
loope
rol
inc
js
sar
ret
xchg
ja
push
lods
aaa
iret
ret
lea
or
add
test
shl
outs
sbb
in
ins
rcr
ret
push
pop
mov
or
xchg
or
add
mul
cmp
je
mov
pusha
sub
sbb
mov
(bad)
push
clc
dec
pop
data16
push
adc
pop
adc
sbb
dec
sbb
(bad)
into
rcl
sbb
adc
dec
mov
xlat
cmp
popf
inc
shl
adc
fadd
ds
(bad)
pop
xor
int3
cmp
add
test
push
inc
in
mov
dec
fcomi
mov
jp
cmp
ret
or
push
xchg
push
mov
mov
inc
push
sbb
loop
pop
lea
push
outs
push
ins
fs
mul
test
movs
jp
and
jmp
and
adc
sub
int
add
mov
les
pushf
retf
in
sub
jp
xchg
xchg
xchg
cmps
or
das
aas
mov
aaa
daa
ss
js
ins
sub
xchg
rcr
jne
or
lock
test
imul
test
int3
dec
jne
sbb
jno
sti
sub
sti
inc
sbb
jne
add
(bad)
movs
cmp
mov
add
jmp
mov
add
lahf
sub
xor
xor
jmp
out
and
imul
je
js
dec
pop
jne
jmp
mov
fstp
outs
aam
je
or
ja
sbb
pop
sub
mov
ins
add
xchg
adc
aaa
cmp
dec
dec
adc
push
ins
(bad)
(bad)
sbb
cmp
les
inc
push
cs
inc
mov
inc
inc
mov
sub
push
inc
outs
xor
jle
add
inc
jne
ja
or
ds
xchg
jmp
push
sbb
arpl
je
mov
adc
dec
into
and
pop
lea
or
data16
lods
or
or
out
mov
jo
getsec
add
jne
xor
jmp
adc
mov
mov
(bad)
scas
sbb
pop
adc
add
ins
outs
jmp
dec
jbe
adc
push
pop
mov
dec
or
mov
push
addr16
or
and
nop
add
or
and
scas
push
std
and
push
pop
data16
inc
pop
add
js
js
out
ret
cmp
aam
or
scas
call
sub
and
addr16
cmp
or
out
push
imul
gs
sub
or
cdq
cmps
out
and
add
push
push
inc
cwde
clc
loopne
add
pop
adc
cmc
jbe
and
xchg
mov
daa
add
rol
out
ds
or
pop
push
test
sub
aas
mov
push
xor
(bad)
(bad)
cmp
push
nop
rol
cmp
sub
mov
ds
xor
adc
push
push
inc
mov
sbb
xor
in
enter
or
and
jne
adc
ret
gs
fwait
xchg
or
add
push
fadd
jno
mov
or
mov
jne
push
mov
mov
xor
adc
inc
xor
bound
loop
ins
adc
and
jnp
jo
or
push
cmp
outs
jbe
das
cdq
shufps
add
rcr
mov
or
add
adc
inc
or
pop
stc
lea
push
push
push
ret
xor
inc
fisub
(bad)
imul
jl
and
stos
dec
dec
jae
push
jle
add
fwait
dec
mov
(bad)
or
mov
test
or
fs
vmptrst
jo
icebp
jle
scas
add
cmp
adc
mov
fiadd
xor
bound
xchg
push
ror
ja
ret
mov
adc
aaa
and
or
jne
popf
push
xchg
add
xchg
cmp
in
pop
inc
shl
or
mov
mov
or
add
or
test
mov
add
add
mov
jo
mov
sub
sbb
movs
ret
pop
dec
xchg
test
xor
jbe
jmp
ss
imul
loope
add
es
aaa
in
mov
jbe
push
(bad)
repnz
dec
or
and
std
sub
xor
test
inc
mov
ret
add
adc
mov
test
fmul
ret
xchg
add
fimul
sub
xchg
mov
mov
call
lods
sbb
mov
sbb
jbe
mov
mov
scas
jo
rcr
daa
shr
(bad)
pop
(bad)
cli
adc
shl
mov
sub
sub
mov
test
shl
xor
add
mov
gs
or
shl
sbb
adc
jbe
jbe
inc
or
jne
inc
imul
cmp
repz
jecxz
sub
test
shl
daa
dec
(bad)
cli
out
mov
dec
test
pop
mov
shl
ret
fbstp
inc
rcr
pop
add
pop
or
push
ss
(bad)
fsubr
pop
mov
scas
dec
pop
pop
je
aam
std
ss
or
mov
sbb
outs
rol
fs
sbb
mov
ins
neg
shl
lahf
pop
adc
mov
in
sti
adc
add
or
call
sar
adc
pop
inc
not
mov
sbb
nop
sub
jne
adc
mov
add
sub
cmps
enter
xchg
setae
adc
push
cwde
adc
mov
add
dec
inc
add
cmp
jb
and
test
lea
inc
and
sbb
or
enter
dec
bound
ret
xchg
xor
and
mov
jo
jae
mov
cmp
mov
mov
xchg
(bad)
call
xlat
inc
mov
outs
loope
sbb
mov
ins
aam
jb
add
pop
or
leave
mov
int
inc
xchg
dec
in
bound
xor
jmp
push
mov
or
or
mov
adc
or
sbb
adc
pop
xchg
sub
or
addr16
add
loope
shr
xor
and
inc
push
cmp
xchg
mov
pop
lea
scas
jmp
adc
adc
xor
pop
popa
mov
sbb
shl
(bad)
xor
cmp
inc
leave
inc
das
aam
add
data16
lods
cwde
aam
mov
popa
mov
pop
or
and
test
or
movs
int
add
or
jmp
ins
daa
aaa
add
adc
jp
and
call
jnp
shl
cmp
inc
pop
sbb
push
out
add
push
xor
ins
and
xor
addr16
(bad)
dec
add
push
ret
test
mov
test
push
sbb
out
in
jne
pop
push
and
inc
mov
jo
ss
xor
and
mov
and
xor
imul
ss
sbb
and
movs
ss
add
popf
repnz
stc
arpl
loopne
sbb
mov
mov
es
lods
push
cmp
dec
int
and
enter
rcr
sar
int3
lods
ins
xor
adc
(bad)
xchg
(bad)
cld
stos
shl
ror
or
cs
inc
enter
enter
(bad)
mov
or
fst
stos
cli
sbb
test
add
test
fisttp
push
jmp
js
inc
(bad)
adc
fwait
jne
inc
ja
std
adc
jmp
sub
inc
xlat
xchg
inc
aam
lock
(bad)
(bad)
shl
es
mov
ror
pop
shl
sbb
ret
mov
sbb
test
adc
adc
int
pop
and
jno
dec
pop
xlat
out
ds
sub
fldenv
inc
xchg
pop
lods
lock
fisttp
inc
jb
and
mov
movlpd
rcr
or
jg
(bad)
sub
cmp
inc
test
jl
and
mulps
push
iret
mov
sahf
adc
pop
retf
fidivr
aaa
xor
adc
mov
jbe
add
adc
and
cmp
adc
loop
div
xchg
mov
out
push
jecxz
js
js
ins
fsub
loop
call
xlat
ret
xchg
pop
cld
cs
jns
imul
js
pop
sbb
ja
iret
pop
sar
repnz
pop
rcr
pop
es
and
neg
loopne
fadd
outs
pop
or
iret
fdiv
fdivp
sbb
jecxz
cmc
mov
in
neg
sti
sub
pop
repnz
push
int
out
xchg
jg
unpckhpd
cmp
adc
or
fstp
data16
std
and
pop
out
or
push
retf
pusha
dec
inc
jns
jnp
xchg
push
cmp
(bad)
dec
sbb
or
add
nop
ret
xchg
jp
add
sti
out
sub
or
and
mov
jmp
mov
dec
mov
or
adc
xchg
ins
sbb
loope
mul
popa
push
shl
sar
rol
mov
and
xlat
sbb
loop
pushf
and
fdiv
and
fxch
iret
iret
(bad)
mov
lods
icebp
in
std
rol
mov
mov
and
shl
add
les
or
cmc
js
fadd
adc
test
call
clc
mov
or
test
je
pop
pop
ret
sbb
addr16
sti
xchg
ret
mov
div
fs
pop
pop
faddp
test
and
imul
or
add
add
xchg
mov
mov
f2xm1
cmp
jp
cwde
je
std
fstp
test
cmc
and
mov
ss
fldcw
test
popf
mov
inc
shld
and
jbe
or
add
add
or
or
push
je
(bad)
sti
jg
mov
shld
shl
push
add
or
fld
mov
mov
bound
add
ret
imul
pop
add
add
pop
ret
ins
cmp
push
js
and
adc
retf
ins
ret
add
stos
push
push
mov
xlat
loop
mov
stos
jmp
daa
je
xlat
pop
mov
sub
je
inc
lods
sbb
pushf
fnstsw
sbb
add
jb
mov
(bad)
nop
cmc
cmp
jbe
arpl
repnz
jae
fadd
in
jmp
push
aam
xchg
sahf
in
xchg
ret
out
aas
(bad)
loopne
cmp
or
ins
lea
shl
ins
add
jae
dec
loopne
sbb
inc
and
mov
outs
jge
ins
or
xchg
mov
inc
xchg
pop
test
xchg
movs
sbb
inc
push
sbb
mov
pop
xor
dec
js
lea
mov
(bad)
inc
pop
sub
xchg
cmp
jmp
push
add
or
xchg
pop
fs
iret
cmps
adc
cs
jp
sub
sbb
jo
movs
(bad)
loopne
mov
pop
call
cmp
loope
test
loopne
ret
dec
imul
rcl
popa
jl
cmp
add
dec
shr
jno
sbb
inc
push
inc
ret
pop
xchg
cmp
and
lods
or
outs
(bad)
mov
dec
xor
push
dec
xchg
inc
jns
sub
inc
add
jae
sbb
push
and
movs
sbb
jns
lods
sti
and
push
dec
lods
or
sub
adc
ds
add
jmp
aaa
dec
and
cmpxchg
xor
and
jge
lea
inc
or
mov
add
inc
pop
adc
xor
int3
ffreep
xchg
repnz
ss
add
loop
scas
push
js
push
mov
mov
sahf
out
push
xor
mov
addr16
ret
mov
or
sbb
sub
inc
mov
inc
sub
jnp
or
into
lock
nop
push
jmp
iret
jle
jnp
inc
cmp
clc
push
mov
sub
pop
mov
mov
enter
inc
fsubr
repnz
or
xor
pop
and
(bad)
xor
jae
xlat
mov
push
jo
xlat
pop
imul
pop
(bad)
or
inc
sbb
loope
loope
adc
and
push
pop
mov
out
out
xchg
or
aad
sti
ins
and
fcomip
add
repz
xchg
mov
loop
adc
in
repz
add
je
or
fmul
faddp
sub
leave
or
adc
push
add
or
or
stc
inc
jmp
sbb
ret
mov
and
adc
or
(bad)
jb
jmp
mov
pop
dec
bound
pop
inc
xchg
adc
or
faddp
or
or
adc
sub
ret
or
out
add
xchg
cdq
rcr
jbe
sbb
ja
push
adc
sbb
cs
fst
ret
or
add
mov
loopne
(bad)
(bad)
call
shr
mov
cld
sub
or
jne
pusha
clc
in
push
mov
xor
fldl2e
pushf
imul
ror
idiv
mov
inc
jne
fscale
data16
fucomip
out
fdiv
dec
or
clc
sub
aad
loope
scas
cmp
loop
jle
or
fldln2
inc
in
shl
jne
push
ret
inc
pop
ins
pop
outs
popa
or
jne
pop
in
cmp
fidivr
inc
mov
mov
or
add
int
gs
xchg
xor
jmp
mov
pop
ja
or
pusha
and
rcpps
or
lea
cmp
fisttp
sbb
push
fcompp
mov
cmp
fisttp
ja
fcomp
loope
jbe
lock
fcomp
dec
test
push
xchg
lea
daa
fimul
or
adc
mov
mov
mov
mov
or
movs
jbe
inc
retf
add
fisubr
jmp
pop
movs
ins
test
mov
add
enter
fwait
ds
pop
dec
dec
dec
call
xor
das
add
jg
ins
xchg
ret
inc
sti
mov
sub
jnp
sbb
inc
sub
and
cmp
wrmsr
loop
stc
cwde
neg
cmps
cmp
daa
xchg
js
or
scas
(bad)
das
jne
mov
leave
mov
sbb
je
cmp
mov
aas
push
xor
test
jmp
push
add
test
mov
inc
dec
fldcw
pop
ret
pop
ss
and
dec
jl
sbb
enter
das
and
xor
test
add
lea
jl
inc
dec
lea
xor
mov
pop
enter
pop
add
test
mov
and
icebp
pusha
lea
es
mov
and
lea
mov
or
call
sbb
pop
mov
push
pop
mov
push
push
push
mov
loop
test
out
sbb
add
sahf
or
push
mov
sub
sbb
retf
add
test
mov
stos
shld
push
add
push
push
neg
ins
mov
test
jg
add
xchg
sar
add
fcom
repz
push
adc
dec
and
mov
xchg
mov
nop
pushf
imul
dec
nop
sub
mov
bound
push
sbb
sub
mov
add
mov
xchg
sbb
fisttp
or
nop
dec
or
sbb
pop
add
adc
push
mov
fistp
pop
add
and
test
and
pop
mov
or
or
nop
test
sbb
dec
xor
mov
xor
and
shr
in
and
add
jmp
lea
add
inc
test
repnz
dec
mov
adc
or
and
add
adc
test
dec
jmp
mov
lahf
dec
and
je
pop
je
or
xor
mov
jo
sub
jmp
xor
pop
leave
(bad)
mov
movs
(bad)
jmp
sbb
lock
in
shr
inc
and
mov
and
push
adc
jg
jecxz
sbb
je
mov
jmp
sbb
sub
add
mov
or
xchg
aaa
test
add
jge
std
jbe
fld
and
pop
adc
pusha
mov
pusha
loope
pop
add
dec
and
sub
xchg
jecxz
pop
fstp
shl
pusha
pusha
(bad)
xchg
movs
and
ins
push
int3
pop
hlt
xchg
test
push
jns
movs
jo
adc
sti
jle
sahf
retf
add
test
fisttp
push
or
addr16
mov
pop
or
and
push
test
shl
xor
push
mov
pop
test
dec
je
add
pop
inc
mov
popf
stos
jb
sbb
aaa
jnp
imul
ret
or
int
mov
inc
push
fstp
jmp
fisttp
fdivr
mov
add
pop
jge
call
xchg
adc
call
(bad)
lea
mul
test
fmul
or
push
xor
test
shr
cmp
adc
popf
inc
cmp
mov
addr16
sbb
dec
or
movhlps
fcomp
add
fcom
adc
sub
sub
jb
addr16
push
push
shr
pop
or
jmp
fldcw
inc
(bad)
test
into
adc
ds
mov
div
add
xor
neg
mov
or
cmp
push
mov
retf
jp
into
jle
adc
fs
cli
popa
bound
pop
cmp
retf
frstor
repz
in
dec
sub
push
test
inc
inc
and
add
repnz
bound
ror
dec
mov
inc
loopne
jge
test
jle
rcl
cli
shr
cmovs
(bad)
jmp
lock
loopne
sbb
mov
mov
push
push
rol
stos
mov
inc
mov
gs
std
jl
jg
mov
je
and
and
cmp
pop
(bad)
sub
(bad)
xchg
mov
dec
shr
push
add
pop
pop
hlt
xchg
fwait
push
sbb
pop
nop
adc
clc
das
adc
add
dec
mov
add
ret
mov
mov
adc
call
jmp
dec
jl
mov
je
pop
ret
test
pop
xor
adc
inc
and
sub
push
cli
jb
or
xchg
push
fisttp
popa
sbb
inc
aas
loop
or
out
retf
xor
fadd
jbe
das
in
push
jmp
jno
ret
dec
inc
movs
les
xor
mov
inc
adc
or
into
jl
and
or
push
xchg
ss
sub
sub
scas
adc
mov
daa
dec
push
mov
cmp
and
xchg
mov
imul
sub
call
mov
jae
in
out
and
(bad)
push
shr
das
adc
and
addr16
(bad)
aaa
arpl
clc
sub
jo
jne
dec
popf
adc
inc
adc
inc
test
mov
sbb
in
inc
sub
cdq
mov
sbb
bound
pop
test
sar
add
jb
and
cmp
(bad)
in
mov
leave
dec
add
or
ds
push
call
in
jmp
(bad)
push
mov
outs
push
and
pop
adc
xchg
sbb
or
bound
sub
pop
enter
test
xor
ror
jbe
adc
loop
test
push
push
stc
or
mov
leave
pop
scas
push
jmp
shl
xchg
dec
pop
xchg
loope
pushf
cmp
push
or
push
movs
lahf
xor
hlt
and
fldcw
or
or
push
stc
icebp
jmp
ror
scas
sbb
sub
push
push
push
shr
cmc
xchg
sbb
pusha
and
jb
rcl
int
fisttp
add
ins
mov
pop
sbb
loop
inc
fld
adc
ror
mov
xor
data16
sub
ins
mov
cmp
dec
ret
mov
pusha
fcmovnbe
fwait
and
jecxz
mov
ja
out
outs
fwait
sbb
ins
and
adc
jo
or
inc
mov
ret
xor
adc
lock
pop
imul
out
sbb
js
push
sub
jecxz
mov
mov
repnz
or
outs
les
add
mov
in
jmp
and
push
mov
hlt
cwde
xchg
jmp
adc
or
fsubr
dec
call
out
movs
xchg
ds
and
pop
repz
dec
or
loope
sub
dec
daa
mov
mov
leave
rcl
mov
add
adc
(bad)
mov
sahf
mov
cmp
xchg
adc
neg
jmp
jmp
hlt
enter
sub
jmp
loopne
loop
out
mov
scas
inc
push
icebp
add
shl
ror
mov
sbb
scas
xchg
push
pusha
push
cwde
xor
pop
push
mov
mov
pop
inc
ins
sub
sub
nop
jnp
ja
adc
adc
je
or
ds
xchg
je
call
push
je
lods
sti
adc
adc
mov
add
or
sub
jmp
push
fs
mov
ror
cmp
adc
and
mov
adc
inc
mov
inc
sub
xor
mov
in
cmp
push
popf
jbe
cmp
push
sbb
(bad)
es
sbb
shl
or
ins
cmp
or
mov
jnp
sti
mov
push
(bad)
xchg
jns
mov
adc
loop
push
adc
or
jle
cmp
imul
jmp
pop
rol
int3
push
or
lods
and
inc
fisubr
sbb
add
or
fucomip
push
add
sub
push
add
div
stos
imul
adc
inc
sub
jle
adc
jne
(bad)
fld
mov
add
hlt
jno
jle
mov
xor
cmp
push
adc
cmps
or
or
movs
sbb
dec
rcl
xor
movs
es
dec
call
sub
(bad)
and
push
xor
(bad)
sub
xchg
ss
es
pop
dec
cs
das
sbb
xor
shl
and
inc
xor
ror
inc
dec
dec
jae
int
dec
dec
push
inc
ror
dec
push
dec
pop
and
pop
dec
ror
jae
dec
fs
int
xor
push
dec
jae
jo
je
xor
sar
js
and
xchg
nop
out
pop
ds
aas
xchg
xor
inc
mov
stos
pop
inc
mov
in
xchg
inc
cwde
sub
sub
and
movs
xchg
mov
aaa
mov
or
cwde
movs
sbb
mov
stos
xchg
add
sub
or
xor
xor
mov
mov
xchg
ss
aaa
fsubr
fmul
gs
cs
sub
and
cs
jb
in
das
aam
retf
nop
pop
xor
inc
jl
jb
hlt
inc
clc
popa
inc
cmp
nop
cld
sub
cs
push
dec
add
mov
or
or
mov
adc
or
ja
sbb
sbb
shl
jb
and
and
sbb
cmp
cmp
mov
xchg
xor
cmp
retf
nop
pop
xchg
inc
push
jb
xchg
inc
inc
inc
dec
and
nop
jl
inc
dec
sub
xor
sub
sub
pop
xor
pop
add
das
pop
and
adc
push
push
or
dec
fwait
cmp
(bad)
adc
inc
std
test
pop
xchg
mov
(bad)
jno
or
adc
dec
dec
outs
mov
sbb
sub
dec
dec
dec
xor
cmp
cmps
xor
cmp
inc
and
in
in
inc
cmovs
jmp
pop
add
and
nop
xchg
xchg
xchg
jo
js
imul
adc
fs
dec
mov
xchg
cwde
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
xor
inc
add
leave
mov
push
gs
adc
xor
sbb
xchg
dec
xor
and
sub
dec
xor
and
cmp
xor
dec
cdq
fiadd
fs
dec
es
pop
pusha
les
add
sbb
inc
push
and
mov
lahf
inc
sub
mov
pminub
cli
dec
mov
inc
neg
adc
add
jmp
cld
faddp
xchg
cmp
cmovno
ficomp
adc
mov
fst
stos
sub
jno
xchg
fiadd
xor
stc
cmps
fwait
ror
cs
pop
or
repz
jbe
cmp
test
retf
les
adc
in
shl
or
xchg
cwde
and
das
xchg
fadd
stc
mov
push
cmps
and
add
fsub
add
sub
(bad)
sti
push
rep
ds
mov
or
fnsave
test
mov
ja
dec
dec
cld
sbb
xchg
mov
push
xchg
add
push
mov
mov
sub
push
push
push
mov
inc
fmul
daa
test
outs
sbb
sbb
rcl
sub
jle
daa
inc
pusha
adc
add
mov
add
movs
jmp
jp
jl
or
jg
sub
clc
jmp
cmp
jmp
and
mov
xor
cmp
ficomp
(bad)
jmp
inc
mov
in
popa
mov
or
movs
jmp
xor
add
mov
sub
xor
jns
outs
sbb
or
cli
popf
sbb
xchg
xor
mov
es
jmp
or
adc
mov
adc
sbb
mov
movs
and
xchg
pop
test
lods
in
and
fcmovnb
mov
enter
xchg
pop
cs
ror
push
sbb
nop
inc
push
sbb
sub
or
loopne
sbb
add
mov
cmps
call
cmp
or
mov
dec
mov
es
or
and
pop
imul
sbb
movs
push
dec
call
and
push
outs
dec
xor
xor
push
daa
and
push
sub
push
dec
sbb
cs
push
inc
ror
push
cmp
and
dec
fiadd
push
inc
pop
call
dec
push
mov
dec
and
sub
mov
jb
ins
sbb
and
stc
push
lock
adc
in
add
mov
dec
add
dec
add
dec
int
das
push
or
xor
mov
mov
cmp
add
mov
jbe
ret
enter
pop
xor
pop
mov
add
and
stos
xor
and
ins
push
jo
and
bound
push
std
xchg
jo
pusha
push
sub
loopne
jne
in
sub
popf
pop
adc
sbb
pop
(bad)
hlt
mov
or
out
xor
adc
ffreep
sub
or
and
je
mov
in
add
fmul
nop
adc
pop
fld
cmps
aam
jp
or
sar
inc
or
fmul
bound
mov
add
inc
push
movs
push
inc
(bad)
and
ja
sahf
cmp
nop
sub
dec
cmp
loopne
xor
inc
out
dec
lds
js
std
lods
(bad)
clc
or
ss
pop
or
cmp
add
cmp
or
call
bound
adc
xor
neg
sbb
ss
pop
pop
mov
mov
pusha
call
mov
push
movs
(bad)
or
push
push
push
jp
retf
xchg
jl
add
inc
pop
fmul
push
inc
adc
dec
les
lods
sub
pop
add
and
jle
add
push
in
out
add
daa
sar
xor
enter
xor
or
sub
dec
mov
stos
xchg
jge
test
ins
addr16
pop
ret
and
or
xor
loope
daa
in
in
sbb
or
xlat
sbb
fwait
(bad)
pop
or
push
inc
push
sbb
sbb
fiadd
mov
sbb
adc
sbb
pop
and
imul
rcl
(bad)
rcr
les
pop
jmp
jae
jmp
mov
in
std
dec
retf
leave
loopne
push
inc
jmp
bound
test
std
(bad)
test
das
out
rcl
int3
popf
rcr
fs
stos
mov
add
fs
shl
or
add
leave
inc
inc
das
inc
xchg
jl
(bad)
and
push
push
inc
jmp
icebp
inc
add
sub
and
add
mov
add
push
inc
test
pop
push
in
and
mov
fild
push
sar
sbb
add
ret
stos
add
jmp
outs
adc
jmp
cld
mov
xor
(bad)
mov
pushf
or
aam
dec
inc
and
xchg
inc
mov
add
ret
cmp
xchg
inc
pop
xor
ins
and
or
push
xor
dec
daa
ss
pop
xor
cmp
(bad)
and
fs
stos
cmp
jle
rol
pop
push
lea
push
sub
fs
cmps
pusha
cmp
or
cmp
pop
jne
out
popa
or
push
dec
(bad)
data16
adc
cmps
inc
fisubr
add
and
dec
(bad)
fist
cmp
push
int
retf
fadd
adc
xor
mov
inc
cli
jmp
cs
adc
jb
test
inc
cmp
ja
add
sbb
inc
xor
adc
test
push
xor
mov
inc
cmp
jl
stc
pop
jle
sub
adc
inc
(bad)
push
sbb
pushf
and
mov
mov
fs
fnsave
js
add
pop
loopne
pop
or
add
push
cmp
in
add
pop
ja
nop
dec
add
arpl
mov
pop
js
fadd
pop
ja
ret
xchg
cdq
imul
inc
outs
loope
add
jmp
call
or
mov
loopne
pop
xor
outs
jmp
popa
mov
pusha
cwde
sbb
mov
push
add
int
or
rcr
inc
adc
inc
sbb
sbb
sbb
inc
adc
or
mov
sbb
add
je
inc
(bad)
(bad)
imul
or
cmc
sbb
jle
jmp
test
loope
lahf
sbb
sub
push
push
fild
push
sbb
sbb
sbb
or
fist
and
fcom
cs
add
jnp
retf
sub
fs
lock
jge
enter
or
or
push
dec
adc
xor
xor
sbb
hlt
push
or
sbb
dec
cmp
ins
or
daa
sti
push
inc
cmp
enter
jne
aaa
xor
push
loop
outs
sbb
sbb
pusha
jne
and
rcr
test
jno
push
sub
sub
and
clc
retf
cmps
push
bound
sub
cmp
and
xchg
or
push
or
mov
mov
push
push
dec
shl
or
jp
sbb
test
sub
fdiv
or
jnp
pop
rol
add
and
sbb
ret
jb
mov
pop
mov
or
fcom
enter
pop
inc
inc
ret
int
sbb
dec
pop
xchg
adc
nop
test
mov
lea
hlt
mov
fmul
cli
adc
je
loopne
rcl
nop
sub
inc
jmp
jnp
xchg
xor
cmp
jl
pop
add
or
push
adc
adc
push
xchg
xor
in
cmp
aam
push
cmp
inc
and
jecxz
sbb
pusha
lock
cld
adc
sbb
stos
inc
(bad)
xor
add
lods
inc
sbb
pop
(bad)
div
add
xchg
lahf
lock
sub
retf
mov
lea
and
mov
sbb
push
mov
outs
sub
fmul
dec
add
or
add
xchg
add
inc
clc
xchg
hlt
push
or
cs
or
gs
sbb
push
aad
(bad)
imul
push
inc
retf
sbb
adc
jmp
add
or
or
pop
sbb
xchg
push
sbb
jne
jae
std
add
in
outs
test
mov
je
cmp
jne
mov
push
cmp
int
fdivr
jne
(bad)
es
jne
push
dec
ret
cmp
dec
les
cld
jb
cwde
xchg
fwait
and
jmp
sahf
lahf
out
adc
(bad)
jmp
std
std
jmp
cld
mov
enter
sub
push
adc
in
mov
xchg
clc
adc
adc
inc
cmp
jb
pop
pop
test
sub
add
inc
sub
adc
test
xchg
mov
mov
pop
xchg
sub
mov
push
fidiv
repnz
mov
inc
xor
inc
aad
adc
lods
adc
push
and
popa
sbb
jg
retf
push
dec
mov
mov
dec
popa
(bad)
retf
sub
pop
push
mov
mov
repnz
clc
pushf
and
push
push
dec
cwde
pop
or
movs
fs
sbb
inc
cmp
push
fstp
es
(bad)
jp
cmp
and
pop
jmp
je
mov
add
add
xor
ins
ret
sbb
into
push
or
sub
adc
aaa
popa
and
xor
jmp
ja
scas
loope
xchg
pop
push
dec
inc
add
push
dec
xchg
shr
cmp
mov
inc
and
int3
hlt
std
mov
repnz
aaa
sti
inc
dec
add
jp
mov
ret
dec
sbb
sbb
ret
xchg
movs
movs
sbb
sbb
xlat
push
mov
test
add
dec
jnp
mov
retf
cmp
or
pop
lods
mov
push
popa
push
sbb
jb
das
xchg
add
push
je
loopne
and
sbb
mov
pop
adc
push
cmp
sar
cmp
je
les
div
jne
fs
pop
inc
aaa
sub
ds
sbb
cmp
in
xlat
sub
jno
cmp
fs
and
int3
pop
cmp
inc
and
and
dec
push
sbb
test
movs
jo
xor
clc
pop
xchg
push
mov
jmp
mov
loope
jmp
test
push
and
leave
shr
inc
add
fwait
shl
sar
push
fld
stos
add
data16
inc
les
imul
push
loope
adc
mov
enter
stos
add
popa
jmp
mov
cmp
clc
adc
add
xor
xor
cmp
adc
rcl
sbb
cmp
aam
es
and
out
inc
ins
sbb
adc
cwde
add
or
pop
push
adc
bound
sar
fcmovnb
in
stos
cli
loop
cmp
push
dec
dec
scas
add
dec
add
inc
add
sub
add
xor
rol
cld
mov
add
adc
cmp
add
inc
pop
int3
pop
test
fldenv
and
cmp
add
mov
cld
ins
add
mov
sub
add
scas
push
inc
mov
fcomp
or
jl
mov
mov
dec
add
icebp
test
in
bound
(bad)
push
loopne
inc
inc
push
jmp
hlt
or
mov
rcr
cwde
sahf
push
das
mov
hlt
cli
adc
dec
mov
mov
loopne
push
or
pop
loop
jns
add
xor
fild
push
scas
ins
push
xchg
iret
movs
push
mov
jae
jbe
push
sub
fiadd
push
je
inc
xor
pop
daa
(bad)
fcomp
adc
fild
push
xor
loope
mov
cmp
sbb
popa
ins
sub
xor
xchg
sub
pop
and
pop
xchg
push
lock
mov
test
xchg
dec
call
or
shl
dec
daa
push
loope
sub
pop
push
in
add
and
mov
(bad)
adc
sub
mov
mov
ins
xchg
(bad)
adc
je
and
ins
mov
ret
imul
adc
inc
out
mov
imul
popf
xor
inc
loope
dec
lock
fs
or
cli
add
(bad)
jl
push
cmps
test
cmp
(bad)
shr
sbb
dec
adc
ret
gs
mov
xlat
shl
jg
les
push
cmps
inc
pop
and
aad
sub
sub
mov
je
pop
mov
(bad)
stos
cli
test
xchg
cs
add
test
in
sub
cmp
xchg
or
cmp
jns
fsubr
add
les
gs
pushf
mov
cmp
(bad)
shl
test
dec
fcom
and
and
mov
sbb
jge
mov
dec
das
test
test
dec
sbb
push
and
mov
adc
sub
sbb
gs
mov
lock
mov
inc
stos
push
syscall
sub
cli
int3
les
mov
leave
shl
mov
loop
lods
ret
inc
jbe
or
neg
mov
or
mov
cmp
(bad)
fcmovnb
std
pop
aaa
cmp
sar
(bad)
rol
dec
je
outs
push
popa
lea
nop
into
xchg
mov
jno
aaa
stc
jnp
aad
add
cdq
fdiv
popa
or
fdivr
imul
inc
add
jmp
and
(bad)
lea
int
cmp
retf
and
shr
in
es
or
aad
pusha
loopne
inc
adc
rcl
aas
(bad)
pop
pushf
adc
cmp
hlt
push
outs
dec
bound
sahf
adc
out
add
push
or
mov
icebp
jo
test
in
jbe
jmp
mov
add
cmp
push
imul
(bad)
shl
push
pushaw
test
pushf
fld
ret
push
clc
scas
add
out
mov
js
xor
std
cld
and
push
pop
pop
sbb
fimul
leave
add
iret
xchg
mov
dec
(bad)
jns
mov
test
sbb
sbb
rol
dec
xchg
inc
jmp
or
adc
(bad)
or
adc
mov
xchg
or
gs
sti
fucomi
dec
push
or
add
jle
push
sbb
pop
xchg
pop
push
add
aas
or
daa
sbb
inc
leave
pop
test
cmp
lods
hlt
xchg
daa
ret
fiadd
ins
lock
stos
push
mov
jne
gs
push
xchg
add
or
dec
lea
or
loope
xor
or
mov
xchg
inc
(bad)
mov
pop
cwde
shl
retf
loopne
push
aaa
fsubr
or
ds
rcr
dec
fadd
or
pop
repz
out
aaa
mov
shl
pushf
xchg
ss
dec
or
inc
adc
iret
push
bound
shl
mov
add
test
and
out
xchg
shl
or
sub
lea
ds
jb
inc
jae
add
mov
inc
jo
mov
jns
jo
pusha
pop
or
and
rol
loopne
inc
or
into
pusha
adc
inc
push
push
cmps
xor
xchg
lock
jge
inc
stos
inc
es
cmp
and
xchg
dec
outs
in
outs
dec
add
loop
or
xchg
cmp
out
pop
call
and
push
fdiv
xlat
pop
add
das
rcr
jecxz
lea
ds
push
or
shr
scas
xor
shl
mov
lods
arpl
shl
jl
xor
or
test
pop
stos
pop
sub
xchg
mov
pop
xchg
dec
jns
mov
pop
dec
lea
jno
push
dec
push
rcr
adc
pop
out
test
in
mov
xor
int3
loopne
push
out
or
inc
rcr
dec
xor
dec
cli
fsubr
rcl
leave
stos
jmp
mov
push
push
jb
stos
repnz
leave
push
cmp
mov
adc
loop
jns
cmp
and
cmc
hlt
push
aas
adc
xchg
iret
mov
fisttp
dec
mov
inc
movs
addr16
add
or
jl
jle
xor
jnp
inc
add
pop
aas
sbb
retf
or
or
daa
add
jg
or
aaa
rol
iret
and
dec
out
and
lea
mov
adc
lods
push
jge
inc
outs
add
cwde
dec
movs
ins
(bad)
lods
shl
test
and
(bad)
add
scas
dec
imul
int3
pop
cmc
push
xor
pop
add
jmp
and
jae
jne
mov
mov
add
and
cmp
adc
adc
and
(bad)
adc
mov
leave
add
adc
inc
sbb
mov
or
or
adc
or
inc
cmps
sbb
inc
cmp
adc
inc
cmp
inc
add
(bad)
fild
add
sub
lock
sbb
retf
ins
loope
fs
ds
rol
sar
inc
leave
shr
or
dec
lahf
sub
dec
sahf
push
adc
inc
mov
and
add
ror
jo
sar
movs
mov
ror
adc
adc
pop
adc
sahf
jle
ja
add
jl
in
sbb
cmp
lods
faddp
ror
dec
pop
add
or
movs
inc
add
fisttp
lods
paddusb
cmp
dec
mov
out
bound
mov
sub
enter
into
clc
clc
stos
push
xor
call
out
cmp
stc
push
out
mov
js
add
hlt
inc
nop
leave
mov
jo
fcom
jl
lea
or
and
xchg
jne
or
fstp
push
movs
mov
ror
icebp
sbb
ins
ret
jbe
shl
out
adc
loope
cmp
fcomp
mov
fdiv
add
jl
and
or
xor
inc
test
add
or
xchg
or
pop
inc
rol
shl
mov
or
dec
cmp
outs
sbb
xor
jo
fadd
and
inc
dec
das
dec
jns
ret
jne
rol
sub
loop
dec
jmp
push
add
adc
fimul
jmp
push
(bad)
int
add
inc
or
push
lds
rcl
call
(bad)
fstp
sub
ss
dec
rcl
sbb
aas
(bad)
cmp
push
ja
jmp
ror
and
cli
mov
iret
mov
inc
iret
cmp
dec
adc
inc
stos
ror
cmp
adc
sbb
xchg
xchg
loopne
jp
adc
test
push
mov
xor
xor
popf
add
inc
psubq
xchg
movs
outs
add
fwait
adc
in
dec
mov
adc
xchg
(bad)
xchg
cld
or
mov
and
movzx
push
push
test
and
sbb
dec
lea
cdq
ret
aas
mov
adc
dec
cld
adc
push
push
or
xor
sub
push
push
aam
mov
push
lea
xor
and
mov
jae
daa
jmp
and
or
cmp
or
retf
mov
push
stos
sub
pop
fdiv
rcl
pop
push
xor
jmp
ins
fwait
mov
hlt
mov
cmp
pop
jl
sub
js
push
or
add
mov
ror
ja
dec
adc
mov
or
ret
adc
or
shl
mov
mov
sub
mov
sbb
add
jmp
pop
enter
shr
lock
xchg
(bad)
nop
jmp
dec
sub
fdivr
fidiv
add
(bad)
mul
test
inc
push
and
sub
mov
pop
or
pop
push
out
mov
or
push
jecxz
push
xor
scas
stos
mov
sbb
pop
movs
gs
les
movs
add
mov
test
scas
or
fiadd
sbb
add
scas
cmp
xchg
nop
mov
jno
aam
push
xor
xor
frstor
call
pusha
int
or
cmp
pop
fst
add
(bad)
mov
push
mov
mov
ret
inc
movs
cmps
fidiv
std
add
or
dec
add
and
and
xor
add
or
or
add
mov
dec
and
mov
add
and
cmp
push
lock
or
and
inc
pusha
cmp
and
fdivr
shr
pop
jecxz
cmp
pop
aas
pop
add
push
push
push
jne
fcomp
inc
sbb
push
add
jo
mov
call
or
mov
inc
add
call
ss
jne
push
inc
movs
and
sub
sub
fbld
mov
cmp
lock
add
xor
sbb
stos
sub
sub
in
mov
push
adc
and
adc
or
sbb
add
sbb
test
leave
or
daa
ins
int3
xor
loopne
and
jmp
sub
cmp
jl
ss
call
je
(bad)
nop
popa
inc
adc
adc
sub
inc
ja
test
popf
lahf
sub
test
cmps
jo
and
ficom
ins
das
dec
xchg
or
rol
xchg
sbb
pop
out
adc
and
xchg
mov
mov
test
sbb
adc
pop
jno
adc
scas
ds
into
and
mov
dec
add
ss
shl
or
or
xchg
jmp
pop
fprem
xlat
mov
aas
push
rol
leave
add
jg
test
je
mov
iret
cmp
dec
pop
mov
mov
adc
cmp
xchg
mov
push
dec
das
retf
shl
mov
inc
mov
aaa
adc
inc
loop
and
pop
loopne
les
push
sub
into
and
ins
push
scas
mov
ret
push
ret
daa
inc
jmp
adc
jae
adc
inc
sub
sub
pop
sbb
and
push
adc
dec
in
sbb
and
pop
imul
pop
pop
rcl
adc
das
iret
push
jmp
push
shl
cmp
ret
inc
sub
enter
pop
shr
in
lock
je
aaa
lock
in
pop
pushf
push
add
xor
cmc
fimul
or
add
sbb
(bad)
dec
enter
pop
mov
dec
fdivr
aam
loope
sub
inc
push
dec
mov
dec
pusha
sub
sub
pop
sub
pop
or
and
add
cmps
fs
retf
call
inc
enter
sbb
lea
leave
mov
sub
in
sub
das
xor
and
es
sti
or
movs
(bad)
jp
stc
mov
cmp
in
sbb
sti
repz
out
hlt
adc
sbb
loope
popa
test
sbb
aaa
push
movs
and
sub
adc
imul
pop
or
dec
dec
cs
adc
add
test
or
and
out
mov
mov
test
mov
lahf
xchg
and
xchg
ret
retf
cmc
test
or
sbb
jne
into
or
rcr
add
cmp
jae
xor
bound
mov
inc
cld
sete
adc
push
dec
mov
adc
loopne
sbb
push
add
xor
pop
xor
xor
push
jae
mov
inc
pusha
sub
xlat
sbb
sbb
adc
mov
test
jo
jmp
ret
aad
sbb
loop
(bad)
and
dec
es
popf
inc
sbb
test
test
call
adc
sahf
hlt
fnstenv
aam
jbe
adc
sbb
push
bound
and
and
add
or
or
fnstcw
jo
mov
and
in
cvtdq2ps
cmp
sbb
sub
(bad)
or
movs
ror
cmp
push
adc
xor
mov
mov
test
fdivr
pop
hlt
mov
sub
es
pop
push
addr16
cmp
or
aas
push
sbb
ds
sbb
loopne
shl
push
push
mov
mov
cmp
movs
int3
shl
mov
arpl
jp
mov
cli
ret
dec
adc
pop
lahf
xor
add
out
leave
cmp
outs
push
dec
jle
mov
jns
retf
sub
inc
inc
ss
outs
jo
push
dec
sar
xchg
cmp
mov
mov
test
mov
sub
and
push
lods
(bad)
pop
rcr
jmp
mov
inc
jne
inc
sbb
sbb
int
ror
mov
out
call
sub
cmp
mov
std
call
push
add
dec
push
and
sub
xor
inc
jl
sub
test
jne
addr16
cmp
mov
push
aaa
inc
loopne
push
add
pusha
cmp
or
jmp
and
push
cmc
push
pop
xor
inc
add
test
ins
ret
inc
ret
jl
inc
sub
sbb
mov
hlt
lea
clc
jge
fwait
mov
(bad)
mov
dec
inc
or
scas
fild
ror
imul
sbb
mov
mov
add
cmp
nop
xor
and
sbb
stos
jne
jb
push
cmps
or
lea
xchg
xchg
xchg
xor
fwait
es
adc
inc
jmp
dec
or
out
cmp
add
add
adc
pop
or
xlat
sbb
cmp
int3
int
pop
popf
(bad)
stos
leave
add
push
inc
ror
inc
or
xor
mov
dec
push
xchg
je
dec
je
add
dec
xor
xor
inc
push
xchg
test
ja
and
adc
pop
gs
popa
push
inc
sbb
sub
xchg
adc
add
ret
sub
sub
out
popa
es
xchg
sub
mul
mov
fld
push
mov
pop
mov
leave
add
sbb
push
sub
(bad)
jmp
xor
les
fsub
mov
test
cmp
adc
or
add
pop
ret
push
pop
mov
xor
jne
mov
hlt
scas
mov
xor
or
pop
outs
jp
pop
jmp
xor
clc
xlat
pop
sbb
mov
jo
add
mov
and
fabs
test
mov
and
mov
mov
add
or
hlt
inc
in
jnp
mov
and
jbe
outs
xor
inc
cmp
aas
in
fcompp
es
es
mov
inc
xor
sahf
lods
addr16
fcomp
sub
fwait
add
outs
fcomp
sbb
jbe
je
lods
call
push
push
ret
mov
xor
adc
pop
pop
int3
push
inc
xor
or
test
and
sti
(bad)
test
push
aas
pop
jmp
lods
add
sahf
mov
test
add
dec
mov
pop
cwde
add
lea
inc
cmp
jg
js
ds
pop
sub
add
adc
or
rol
xor
and
push
push
adc
jmp
jns
mov
add
sub
push
and
push
scas
outs
xlat
sub
inc
loope
inc
xor
push
mov
inc
das
adc
(bad)
es
scas
add
or
xchg
add
sbb
inc
cmp
loopne
sub
pop
fidivr
or
hlt
rcl
dec
jmp
ret
xchg
clc
pop
xor
ret
call
push
movs
mov
inc
add
add
mov
fcom
push
xchg
mov
or
or
add
(bad)
sti
mov
icebp
inc
inc
cmp
jb
or
aas
aas
ret
lds
jo
jmp
and
sbb
pop
pop
push
cld
stos
test
scas
daa
(bad)
mov
mov
jns
and
add
in
cmovo
in
stc
fisttp
dec
dec
mov
dec
test
adc
rcl
sbb
dec
mov
dec
adc
ret
test
xor
loop
add
out
mov
in
ss
stos
mov
(bad)
stc
fdiv
idiv
fsubrp
ja
cmp
xor
(bad)
loop
loop
addr16
ret
push
pop
or
push
mov
push
lds
cmp
add
daa
and
sbb
adc
xchg
or
inc
repz
sbb
sbb
mov
inc
push
dec
std
sbb
rol
inc
xor
adc
and
loope
movs
sub
addr16
and
into
and
inc
(bad)
xchg
test
push
sbb
(bad)
jge
pop
dec
loopne
push
jecxz
jp
push
gs
mov
loop
jno
jo
pushf
mov
(bad)
xor
pop
rcl
xor
repz
sbb
or
jmp
jne
je
test
jle
add
(bad)
outs
inc
push
mov
out
je
mov
(bad)
push
or
or
or
cmp
jbe
sbb
out
jmp
push
repnz
movs
pushf
xchg
loopne
inc
inc
out
jo
cli
mov
fsubr
add
add
rcl
fs
add
pop
and
outs
jmp
leave
repz
push
mov
push
ins
sti
test
add
dec
test
and
and
pop
addr16
clc
outs
ss
fadd
adc
loopne
imul
jmp
mov
fiadd
mov
je
ins
in
and
adc
pusha
cmp
jecxz
sub
ror
enter
and
and
mov
mov
push
add
and
dec
dec
cmps
in
inc
dec
dec
(bad)
dec
add
xchg
js
fimul
or
inc
xchg
push
neg
ins
add
lock
cs
adc
addr16
mov
movs
(bad)
or
mov
sar
add
mov
cmp
je
push
dec
inc
push
mov
jecxz
pop
add
mov
dec
or
les
and
mov
and
inc
inc
adc
mov
bound
hlt
and
mov
imul
(bad)
lahf
mov
dec
retf
aaa
pop
in
add
adc
(bad)
scas
ret
jno
fst
inc
jecxz
fcmovb
ja
dec
xor
call
add
push
push
cmp
mov
cld
adc
je
cmp
mov
pop
push
fsub
pusha
xor
pop
push
sahf
mov
and
sbb
mov
je
in
and
or
es
add
div
sbb
xor
int3
ret
sti
push
lock
push
pop
retf
test
pop
dec
dec
adc
xchg
push
jno
mov
dec
lea
scas
enter
dec
enter
xchg
retf
lea
cwde
mov
or
lock
dec
mov
div
inc
jae
fmul
(bad)
loopne
jmp
dec
mov
push
ds
sbb
xchg
cmp
fstp
sbb
ja
scas
push
adc
mov
sbb
test
pop
leave
inc
ins
mov
test
lahf
xor
xor
or
adc
jle
in
mov
inc
out
push
xor
sbb
ret
push
cmp
push
std
adc
inc
imul
mov
mov
les
pop
cmp
or
cmp
or
mov
aaa
or
or
fmul
add
je
mov
or
sub
and
add
or
adc
out
push
mov
xchg
rol
mov
mov
aam
outs
or
jo
or
(bad)
neg
cwde
inc
add
mov
or
add
aaa
jg
(bad)
adc
dec
test
nop
lods
das
or
loopne
loopne
ss
or
mov
jb
loope
jo
std
pop
and
mov
pop
dec
inc
add
or
test
sub
shr
(bad)
or
push
jle
push
mov
mov
sub
and
sbb
and
mov
jg
push
add
inc
sar
sbb
(bad)
push
ret
imul
push
cwde
out
fisub
add
imul
stos
or
mov
mov
sbb
fdivr
adc
push
cmp
(bad)
mov
fstp
mov
call
cwde
xor
mov
sar
in
and
ror
pop
cwde
push
inc
pop
pop
mov
and
and
sbb
add
or
dec
mov
into
mov
dec
je
shl
in
mov
pop
loop
cmp
xchg
jp
(bad)
and
into
adc
xor
inc
inc
cmps
mov
into
jae
xchg
fs
or
popf
and
sbb
ds
test
shl
les
inc
inc
or
xchg
or
dec
sbb
push
adc
inc
add
add
nop
push
lea
mov
dec
nop
mov
nop
retf
dec
push
and
ins
in
xor
or
ret
movs
mov
add
nop
xchg
mov
jge
sbb
retf
cmps
imul
mov
call
cmp
bound
jmp
mov
add
mov
or
imul
(bad)
xor
mov
retf
(bad)
stos
cld
cmps
mov
clc
test
outs
aaa
retf
ret
pop
in
shr
loope
shr
in
pop
or
mov
or
dec
mov
sbb
mov
inc
lock
lock
xchg
repnz
add
push
push
cli
inc
cli
div
mov
and
mov
in
out
adc
call
(bad)
xchg
mov
out
mov
retf
test
mov
dec
rol
xor
jmp
jecxz
mov
jmp
add
mov
mov
mov
xlat
xor
mov
add
sub
jge
repnz
pushw
sbb
loop
dec
inc
sar
out
jge
mov
nop
or
and
inc
mov
pop
cmp
daa
adc
inc
mov
cmp
and
inc
shl
dec
pop
shl
push
cmc
sub
dec
push
jo
int
dec
sbb
inc
dec
ror
cmp
call
fsubr
(bad)
mov
or
imul
sbb
cmp
fld
stc
in
mov
test
shl
cli
mov
mov
xchg
add
mov
and
push
(bad)
adc
jg
or
jns
mov
(bad)
test
enter
mov
out
or
add
or
inc
lock
or
cmp
jne
movs
repnz
jne
ret
fnsetpm(287
nop
sahf
add
loopne
sub
or
push
pushf
pusha
mov
push
push
pop
and
sbb
and
sbb
popa
aas
and
neg
inc
add
inc
mov
pop
hlt
ss
dec
call
pop
outs
call
mov
inc
mov
dec
cdq
and
or
test
add
in
in
add
shr
pop
inc
rcr
pop
jne
adc
neg
hlt
jbe
or
jnp
(bad)
jmp
loopne
call
mov
fdiv
lea
loope
or
xor
and
inc
sub
out
inc
mov
dec
cmp
pop
add
dec
inc
sar
sub
daa
rcr
into
or
sbb
xchg
lea
or
rcr
dec
faddp
clc
lahf
rol
lock
lea
and
fist
mov
jae
add
xchg
popa
mov
aas
ja
jl
cmp
hlt
iret
in
or
mov
inc
cmp
in
retf
rcl
dec
ins
cli
shr
jge
sub
cmp
ins
shr
dec
cmp
add
and
icebp
cmp
inc
sub
or
xchg
(bad)
mov
mov
mov
jp
jne
dec
mov
sub
add
jb
int
pushf
adc
in
fadd
cwde
lds
add
push
mov
mov
sub
outs
add
sub
js
add
add
cmps
rcl
adc
pushf
ret
xchg
rcl
mov
jne
push
mov
inc
cld
pop
je
add
cmp
ror
aam
or
add
cmps
outs
nop
push
or
add
or
add
into
je
push
pop
scas
add
int
sbb
mov
or
and
xor
adc
or
jae
in
pusha
imul
mov
mov
inc
and
cmp
xor
into
inc
adc
dec
pusha
inc
add
sub
and
pop
pop
dec
mov
push
cmpps
adc
cvtpi2ps
inc
adc
dec
add
test
jl
mov
cld
mov
adc
retf
or
dec
movs
test
add
mov
sbb
adc
or
or
lock
mov
pop
cmc
mov
or
jmp
push
into
push
pop
loop
add
add
adc
iret
xor
mov
shl
and
mov
sbb
aaa
out
and
push
data16
mov
sub
outs
bound
fld
jo
loop
clc
mov
mov
test
sbb
or
not
inc
scas
cmp
out
or
mov
arpl
int
xchg
jno
jmp
sub
add
stmxcsr
push
bound
ret
(bad)
adc
sbb
add
or
lock
push
xchg
adc
hlt
mov
enter
sub
and
aas
sbb
jb
repnz
retf
into
into
into
sub
and
mov
pop
or
nop
shl
sahf
pop
mov
jo
not
and
or
mov
ja
xchg
add
adc
popa
cld
push
fs
pop
or
pushf
hlt
add
leave
lahf
pop
in
pushf
sbb
sahf
xchg
addr16
add
add
jle
and
repz
sbb
je
and
shl
in
jne
or
sub
js
pusha
sub
sbb
mov
ret
push
retf
cmp
ret
push
add
(bad)
pop
mov
shl
rcl
int
dec
xchg
sub
repnz
test
mov
(bad)
or
push
add
hlt
mov
adc
inc
sbb
xor
dec
push
sbb
mov
popf
xor
aaa
popf
loope
popf
push
scas
cmc
xchg
push
adc
imul
dec
inc
and
push
mov
jmp
pop
fmul
dec
adc
lods
dec
cmp
test
sub
xchg
sqrtps
(bad)
jg
ret
nop
sbb
nop
adc
add
xor
jmp
inc
dec
add
dec
sbb
mov
dec
add
dec
xor
inc
in
or
sub
adc
inc
(bad)
ins
sbb
sub
nop
aaa
dec
or
or
rcr
xchg
sbb
in
fwait
adc
mov
or
sbb
or
adc
dec
ret
cmps
mov
(bad)
ret
add
jns
(bad)
sbb
adc
push
loopne
inc
sub
inc
push
cmp
pop
aas
ror
lea
shl
mov
mov
mov
rol
fdiv
(bad)
repz
dec
add
dec
sub
mov
xchg
inc
or
fs
add
leave
sbb
dec
jmp
inc
dec
leave
js
sub
dec
or
or
int3
es
cmps
and
inc
jge
dec
movs
test
imul
mov
es
sub
sub
mov
test
test
push
imul
mov
pop
inc
mov
ss
add
inc
and
and
movs
je
or
push
mov
adc
dec
and
sbb
add
mov
sub
gs
in
fsub
dec
cwde
or
add
dec
mov
cld
clc
hlt
lock
retf
in
in
call
mov
ror
cs
retf
in
(bad)
shl
movs
mov
inc
and
sbb
and
xor
lods
jg
cli
pop
fwait
arpl
jmp
lea
or
sar
add
mov
fadd
xor
xchg
and
add
out
sbb
iret
les
ror
lds
pusha
jecxz
inc
pop
sub
sbb
pop
add
and
sub
aam
push
push
rol
xchg
push
cmp
int3
pop
xchg
int3
jmp
mov
inc
fwait
dec
and
clc
test
mov
iret
mov
mov
push
add
pusha
sub
fnsave
fist
mov
mov
add
popa
loope
xor
mov
stos
pop
fist
mov
xor
lds
mov
inc
pop
adc
pusha
lds
sbb
xchg
ror
ret
pop
sub
pushf
add
bound
or
rcl
push
rcl
add
add
ret
cmps
loope
outs
or
mov
and
in
jae
outs
push
mov
pusha
daa
dec
test
and
in
pop
adc
psrld
and
cld
dec
pop
pusha
jecxz
pop
stc
jg
movs
fwait
push
push
jae
jp
xchg
in
dec
jb
jo
cwde
lods
ret
add
add
jg
ret
gs
shl
gs
sbb
push
pop
xor
mov
les
aaa
sar
inc
sbb
or
dec
or
pusha
pop
add
adc
cdq
pop
jo
dec
jb
push
test
scas
jo
xor
aas
or
clc
or
or
mov
push
push
push
and
and
mov
leave
jo
inc
add
adc
int
inc
add
cmp
ret
mov
mov
and
pusha
pop
add
sub
add
dec
sub
push
adc
adc
daa
xchg
shr
loopne
push
dec
jb
pop
mov
adc
cmp
cmp
and
sar
rdpmc
jno
adc
adc
add
ret
cmp
in
add
inc
or
add
push
mov
pop
jmp
cmovs
adc
std
jmp
jnp
icebp
add
jle
and
inc
ret
add
inc
mov
cmp
imul
pop
xchg
arpl
or
adc
jnp
sbb
pop
(bad)
sub
and
cmp
jmp
mov
ror
or
pop
push
push
push
in
test
movs
add
pop
and
movs
push
and
daa
add
cmp
movs
cmps
pop
push
sbb
pusha
jbe
or
push
inc
cli
xchg
inc
mov
sbb
pop
push
sbb
adc
or
push
pusha
pop
jmp
sub
jmp
add
bound
lock
arpl
imul
cmp
and
imul
lods
sub
cmps
sub
lods
jbe
into
xor
pop
and
jbe
inc
sub
sahf
loopne
inc
jecxz
push
pop
push
dec
cli
aad
movs
mov
repnz
mov
and
dec
add
ins
sbb
inc
mov
or
movs
mov
ror
(bad)
test
mov
mov
and
mov
adc
add
aas
(bad)
adc
and
add
data16
push
mov
add
mov
(bad)
js
mov
dec
sbb
enter
lock
movhps
mov
dec
mov
adc
xor
les
ja
xor
mov
(bad)
mov
xor
pusha
sbb
cwde
or
push
xor
push
dec
loopne
fwait
push
push
pushf
pusha
call
adc
sahf
mov
pop
xor
jns
gs
xor
add
cmp
xor
bound
sar
rcr
add
inc
pop
arpl
pop
sar
mov
pusha
int3
add
pop
pop
mov
rol
add
cwde
aas
leave
adc
xchg
lods
lods
mov
dec
sub
fs
sbb
dec
xor
xor
xor
add
pop
sub
mov
sub
fbstp
add
sbb
jmp
into
imul
mov
mov
and
stc
mov
nop
xor
cdq
pop
clc
aam
lds
outs
push
jns
dec
push
call
imul
scas
enter
push
push
ret
sub
cmp
jmp
sahf
pusha
(bad)
popf
into
mov
popf
mov
mov
dec
cli
sub
add
ret
add
in
jno
aas
clc
cmp
mov
jb
add
les
push
mov
jl
pop
test
sbb
enter
xor
sub
or
cvtpi2ps
shl
pop
push
xor
add
inc
mov
mov
mov
push
xor
cmp
jmp
adc
sbb
adc
or
addr16
push
push
jae
lahf
add
xlat
or
or
popf
xchg
mov
push
add
and
push
cli
fld
push
add
enter
add
jl
dec
sar
lock
add
nop
aam
pop
lock
cmp
and
(bad)
rcr
bound
je
loop
outs
fs
sub
or
dec
add
(bad)
cmps
aaa
sar
ss
sbb
nop
(bad)
sbb
inc
cmps
out
push
bound
adc
adc
jle
lock
je
adc
jmp
outs
inc
out
push
call
adc
pop
and
jmp
adc
xchg
jo
loop
add
xchg
lahf
cmp
jae
xchg
adc
cli
mov
sar
call
sbb
push
aaa
pop
sar
or
push
clc
mov
inc
and
adc
inc
or
(bad)
add
pop
sub
aas
mov
pop
or
inc
or
cwde
pop
push
or
or
rol
mov
dec
jne
movs
jb
add
ret
jmp
cld
std
inc
pusha
inc
mov
jnp
mov
xchg
pop
fiadd
mov
pop
daa
adc
or
sbb
aad
mov
push
retf
pop
cs
int
add
jno
push
sub
xor
aad
jns
aas
fwait
mov
mov
xchg
and
jecxz
add
jno
mov
inc
aam
or
dec
popa
mov
mov
outs
sti
retf
pop
xchg
pop
mov
dec
lods
rol
push
fnstsw
or
mov
mov
fs
cdq
pusha
mov
and
pop
push
inc
sub
xor
jb
imul
out
add
xchg
push
push
repz
(bad)
sub
add
fs
les
and
lods
std
sub
mov
pop
ret
cdq
sub
sahf
dec
fadd
cwde
das
push
jl
cmp
mov
sub
out
pop
xchg
je
cmp
jl
adc
sub
dec
or
ss
sub
daa
pop
adc
xchg
call
pusha
mov
icebp
dec
sbb
out
mov
inc
mov
(bad)
fdivr
jbe
add
mov
jg
movs
xchg
(bad)
cmps
xchg
add
pop
or
fnstsw
sub
lock
je
fidiv
sbb
pop
rcr
mov
jbe
inc
pushf
sbb
dec
movs
add
cmp
push
or
call
mov
mov
and
xchg
stos
and
mov
mov
or
ret
fdiv
mov
push
ret
inc
cmp
mov
dec
lods
dec
push
sub
pop
mul
es
(bad)
jb
and
cmp
sbb
mov
inc
outs
add
add
or
xchg
sbb
jns
cmps
ins
ins
or
test
push
sbb
inc
push
add
pop
xchg
xchg
cmc
cli
push
je
inc
pusha
xchg
inc
jnp
adc
imul
mov
test
mov
int3
addr16
push
aam
xor
fisttp
jne
das
inc
sub
jne
mov
push
jecxz
int3
rol
stos
retf
jo
add
int
ret
fucomi
arpl
push
je
or
je
dec
push
ds
or
fstp
mov
inc
or
jmp
adc
dec
test
aaa
inc
xchg
mov
mov
sub
pop
adc
dec
add
jns
rcr
rcr
clc
and
pop
(bad)
fcomp
iret
mov
fs
das
xchg
loop
dec
sar
mov
imul
dec
cmp
adc
push
ins
and
fnstsw
or
add
push
cmp
pop
adc
and
rcl
sub
sbb
lods
and
xor
std
icebp
dec
or
xchg
js
or
lea
rcr
and
push
out
or
dec
add
les
outs
cmp
pop
sub
sbb
adc
or
lea
push
ja
xchg
movs
dec
fstp
or
pop
pusha
pusha
pop
cli
shl
xchg
cwde
push
adc
inc
loope
dec
dec
dec
in
das
pop
or
push
xor
push
adc
inc
dec
push
sbb
jp
out
inc
push
add
ret
inc
shr
pop
pop
in
mov
add
jp
dec
out
inc
push
push
js
and
push
(bad)
lods
add
hlt
icebp
loopne
cmp
cmp
sti
xchg
or
push
sub
or
movs
cmp
pop
add
scas
dec
in
add
dec
in
adc
xchg
cmp
test
icebp
(bad)
lods
and
sar
test
pusha
(bad)
cmp
cwde
add
jns
add
sub
push
adc
dec
jo
rcr
jne
inc
push
add
add
adc
or
jne
jmp
adc
cmp
sub
jp
dec
ror
jne
fwait
stos
adc
icebp
test
scas
pop
sti
pusha
or
sbb
xor
rol
in
add
or
inc
pop
and
or
push
add
or
adc
jo
ret
mov
cmp
and
push
je
xor
cmp
cmp
(bad)
lock
mov
call
cmp
cmovno
xor
add
stos
push
add
sub
jp
out
lods
test
idiv
jbe
or
sbb
mov
jmp
dec
inc
dec
js
(bad)
cmp
test
or
mov
shl
shl
push
lods
ins
mov
cmp
adc
pop
cmp
ss
add
and
leave
add
fiadd
add
cmp
add
mov
std
and
or
jg
rol
inc
add
push
mov
mov
xchg
cmp
ja
push
cmp
loopne
into
dec
jle
mov
(bad)
cmp
fcomp
jp
and
cdq
push
xor
mov
jns
mov
and
mov
inc
mov
test
mov
nop
imul
jns
push
inc
cmp
and
add
add
stos
gs
in
pop
add
mov
jle
or
and
movs
mov
or
jns
and
push
add
push
inc
loop
push
in
push
sahf
xor
shl
add
mov
xchg
es
dec
jno
inc
jns
or
or
outs
dec
jbe
hlt
ss
lods
test
sub
pop
push
pop
mov
loop
les
sub
push
out
mov
call
(bad)
mov
jge
and
xchg
(bad)
push
pop
lds
cs
push
and
xor
shl
xchg
add
in
jbe
push
jnp
jmp
push
lock
stos
out
mov
inc
mov
add
adc
jns
push
push
sti
and
sub
or
nop
or
stos
jp
xchg
cmp
jmp
jne
pop
test
mov
sbb
sar
pop
mov
ret
ds
xor
call
in
and
cmp
sbb
or
aaa
je
hlt
cli
dec
xchg
clc
cmp
jg
push
scas
push
adc
inc
ror
mov
lahf
jle
or
dec
inc
inc
dec
dec
cmp
dec
add
loope
and
or
cmp
mov
in
push
add
xlat
fwait
sbb
cs
xlat
cmps
jmp
or
test
xchg
and
loop
xchg
je
mov
aaa
mov
std
iret
xlat
shr
or
mov
fcmove
dec
add
push
mov
fcmovnb
adc
dec
retf
inc
sbb
sub
outs
pop
add
or
adc
jg
dec
mov
je
dec
xchg
mov
jb
ja
jmp
loopne
jle
add
pop
or
adc
add
add
cmp
test
cmps
push
jmp
push
and
push
or
cmp
or
sbb
cmps
dec
lea
int
push
ret
call
sbb
dec
inc
and
shl
icebp
ret
jmp
xchg
xchg
pop
mov
mov
dec
adc
jle
adc
ret
xchg
enter
add
mov
or
or
sub
rol
imul
les
and
gs
outs
xchg
xchg
ss
xchg
inc
aaa
(bad)
and
xchg
mov
inc
or
aas
xor
js
in
mov
adc
nop
xchg
or
daa
jne
fimul
dec
cmp
sbb
mov
push
or
add
fs
call
es
adc
ret
push
leave
mov
xor
push
add
mov
shl
pop
pop
clc
xchg
add
inc
jmp
loope
add
push
es
hlt
jmp
cmp
jg
jl
jae
push
add
adc
pop
sub
dec
pop
cdq
inc
add
nop
push
jp
xor
arpl
dec
(bad)
push
push
in
mov
dec
dec
call
dec
or
pop
test
cs
xor
mov
or
adc
mov
mov
adc
out
pop
or
sar
pop
dec
repz
loopne
add
es
push
call
mov
and
adc
mov
add
sub
popa
add
imul
mov
mov
(bad)
mov
add
shl
push
aam
cmp
mov
nop
pushf
(bad)
mov
fs
ror
sbb
les
fcomp
mov
pop
retf
and
sub
push
sub
mov
add
aad
rcr
cmp
xchg
dec
jb
loopne
fsubr
fwait
dec
add
lods
dec
clc
push
fcmovb
jb
sub
and
jae
mov
in
pcmpgtb
push
push
push
ficomp
fild
fs
out
fidiv
mov
in
fdivr
or
inc
test
gs
pop
jo
cld
pushf
dec
in
jmp
leave
data16
dec
mov
or
xor
adc
cwde
xchg
xor
inc
fdiv
fs
fwait
loopne
mov
(bad)
adc
inc
int3
or
xor
xchg
adc
(bad)
ins
rol
push
xchg
mov
ror
pop
lock
jmp
enter
call
sub
adc
shl
fnsave
pop
leave
sub
adc
pusha
or
leave
dec
dec
in
in
mov
cmp
mov
adc
pop
sub
xchg
jns
or
fidivr
loopne
cmp
xchg
pop
fs
or
mov
fisttp
nop
cmps
inc
add
cmps
jge
in
mov
mov
sbb
aam
mov
test
push
aam
mov
dec
lods
test
js
pop
jb
mov
mov
pop
jns
mov
or
or
dec
adc
leave
loopne
aam
push
fcom
add
pop
jb
add
mov
jo
imul
push
xchg
inc
or
loopne
outs
dec
xchg
clc
jnp
shl
inc
out
cmp
mov
jns
sub
aam
sar
pushf
je
xchg
ins
loopne
sbb
xlat
cmps
fcom
enter
loope
mov
push
cmp
loop
dec
in
call
xchg
pushf
lock
ret
rcl
je
pusha
pop
dec
inc
sahf
dec
cmp
mov
mov
dec
loop
fs
sbb
das
jecxz
jns
sub
retf
jecxz
xchg
fdiv
pushf
or
xor
(bad)
and
in
stos
enter
test
in
nop
inc
mov
cmp
cdq
add
push
aam
daa
daa
daa
in
fsub
jcxz
add
loopne
mov
xchg
in
aaa
push
inc
fucom
shl
or
es
sbb
lods
pop
or
mov
fmul
inc
data16
imul
sub
cld
adc
fsubr
in
je
mov
jl
rcr
cmps
mov
sbb
mov
mov
and
add
and
pop
mov
lock
inc
loope
mov
in
push
call
push
xchg
inc
lock
(bad)
lock
dec
sti
push
inc
cld
push
shl
loopne
and
xor
fcomp
call
shl
jb
loope
daa
shl
push
push
jo
and
mov
fsubr
inc
fdivr
test
(bad)
popf
out
or
xchg
add
pop
jmp
cmp
or
int3
inc
dec
jbe
mov
clc
cmps
xchg
imul
leave
and
xor
out
inc
push
in
repnz
xlat
movs
sbb
and
enter
pop
mov
dec
inc
inc
stos
into
or
gs
addr16
in
movs
sub
dec
push
pop
adc
jmp
stos
cmps
nop
mov
pop
shr
test
pop
enter
imul
leave
or
inc
dec
lods
pushf
ins
in
and
hlt
std
in
adc
js
pop
lock
dec
and
cmp
jp
cmp
sbb
and
bound
fsub
add
les
in
mov
dec
mov
rcr
inc
shl
mov
cmp
cmp
add
fldz
add
inc
pop
push
and
sub
mov
popf
popa
pusha
pop
leave
xchg
pop
pop
in
loopne
jl
(bad)
in
test
adc
push
adc
xchg
mov
xchg
out
inc
shl
xchg
dec
(bad)
call
or
xchg
fcomi
xor
in
inc
mov
jo
sub
inc
mov
rol
adc
std
sub
scas
in
in
in
call
jb
xor
jb
jns
fadd
adc
fsubr
daa
xchg
int3
mov
cmp
jno
mov
or
in
sub
test
movs
or
adc
retf
push
cmc
or
push
jp
fimul
mov
(bad)
repnz
xchg
leave
rcl
fmul
fidiv
aas
adc
in
dec
fwait
movs
mov
or
rcl
mov
or
mov
cmp
cmp
cwde
dec
popf
add
adc
pop
movsx
inc
mov
hlt
lods
jbe
dec
inc
dec
cmp
xchg
add
push
movs
loope
fmul
sar
push
or
cmc
add
or
je
sub
jbe
cmc
int
cwde
ja
dec
repnz
clc
adc
cmp
dec
pop
pop
pop
in
test
adc
or
adc
adc
inc
dec
mov
pop
mul
xor
inc
mov
call
test
dec
pop
or
call
pop
das
jae
push
enter
sub
mov
repz
test
mov
adc
ds
iret
cmp
inc
pop
mov
je
mov
mov
mov
and
in
in
in
push
sbb
mov
test
les
sbb
(bad)
mov
lock
xchg
stos
dec
dec
pop
xchg
stc
pop
push
bound
in
add
call
cmps
add
add
rcl
cmp
fdiv
push
push
cli
pop
jnp
rol
mov
add
jmp
or
sub
dec
cmp
in
cmp
and
lock
clc
adc
repnz
dec
xchg
cld
sti
and
movs
mov
jg
push
mov
and
sbb
aam
mov
inc
xor
loopne
xchg
ss
pop
loopne
fdivr
rol
sub
rol
dec
xchg
in
inc
scas
or
mov
sar
in
in
xor
pop
std
or
les
push
pop
lock
sbb
(bad)
jo
dec
or
jmp
xor
gs
and
adc
sbb
aam
lods
aas
and
leave
les
nop
xchg
lock
dec
sbb
mov
push
lahf
push
ret
test
dec
pop
add
shr
push
inc
pop
mov
push
or
cmp
sbb
xchg
dec
fcom
inc
mov
fnstenv
push
mov
lock
xlat
xor
push
xchg
daa
jbe
inc
pop
and
int3
enter
or
sbb
mov
add
ja
in
nop
adc
inc
push
pusha
pop
adc
in
and
sbb
gs
les
and
push
and
pop
add
cmp
jbe
inc
pop
sub
(bad)
and
movs
ins
leave
sbb
pop
push
sub
lock
xor
xchg
or
sub
(bad)
push
push
test
or
mov
add
sub
mov
xchg
aaa
mov
sbb
(bad)
movs
and
sub
or
cmp
and
xchg
push
fs
(bad)
daa
mov
jno
enter
or
and
and
lds
retf
mov
in
call
push
loopne
add
jne
fs
push
pop
(bad)
enter
pop
fisub
daa
xchg
mov
pushf
rol
xchg
enter
dec
and
rcl
xchg
inc
push
and
and
xchg
inc
es
fmul
inc
es
loopne
call
call
sub
mov
in
pop
and
add
retf
in
and
mov
or
push
int3
sbb
es
push
cmp
shl
xor
and
dec
push
mov
jge
inc
repnz
add
nop
mov
cwde
mov
loopne
pop
pop
add
sbb
inc
mov
or
mov
mov
nop
dec
mov
cwde
inc
dec
mov
adc
pop
enter
inc
xchg
or
jnp
std
gs
daa
push
or
mov
sbb
hlt
inc
or
fisttp
cmps
sbb
nop
test
jo
push
adc
test
movs
retw
cmp
adc
pop
enter
mov
mov
mov
mov
stos
dec
add
or
pop
or
and
inc
sbb
cmps
mov
mov
in
add
sbb
in
or
in
ins
or
xchg
sbb
cmp
in
or
or
sub
xchg
jecxz
mov
in
ja
and
sbb
or
lods
or
push
push
and
push
sbb
aam
ret
xchg
repz
inc
pop
ss
fstp
adc
add
(bad)
lock
outs
movs
add
jge
scas
mov
mov
imul
call
cmc
fdivr
xchg
mov
inc
or
fs
or
xchg
push
inc
test
cwde
jno
pop
jmp
leave
or
aam
icebp
and
movhps
xchg
sbb
loope
popa
push
jns
adc
in
add
add
in
adc
and
inc
add
mov
push
loopne
rol
add
mov
ja
retf
inc
add
push
repnz
or
dec
pushf
aam
and
repnz
pop
int3
lock
push
sbb
and
add
test
xchg
(bad)
daa
inc
ret
sbb
cmp
js
inc
es
(bad)
adc
loopne
or
add
dec
in
sbb
in
and
adc
jp
xor
xchg
sbb
cmps
test
xchg
pop
adc
pop
sbb
push
in
push
ret
push
mul
xor
add
adc
or
or
cmp
cmp
or
mov
or
das
dec
lds
out
mov
dec
dec
pop
nop
daa
adc
aad
add
sub
lock
jl
in
inc
or
push
loopne
call
popa
pop
xor
jae
addr16
add
add
or
fwait
out
adc
loopne
jae
add
movs
mov
adc
xor
mov
push
pop
adc
scas
jbe
nop
call
push
es
in
icebp
adc
pop
pusha
cdq
fs
dec
fs
es
push
fsubr
or
enter
push
push
jae
mov
inc
pop
or
in
dec
in
mov
rol
jmp
pop
lea
in
jge
pop
cmp
cmp
cmp
push
or
not
mov
or
int3
test
or
add
(bad)
loope
ror
ja
call
cmp
sbb
inc
pop
dec
pop
sbb
adc
test
pop
pop
mov
mov
pop
data16
in
mov
sub
mov
popa
imul
and
shl
inc
stc
mov
mov
xor
xor
mov
pop
pop
pop
and
xchg
fsub
nop
pop
clc
rcl
add
adc
cmp
mov
push
jno
push
or
sub
jne
cmp
xchg
hlt
(bad)
adc
in
cmp
popf
mov
xor
xchg
shl
loope
or
dec
add
ss
sbb
push
cmp
or
mov
adc
js
mov
mov
in
xchg
push
xor
cmps
xchg
stc
jb
rcr
cwde
sbb
or
aam
adc
lock
ja
xchg
xor
call
test
fs
test
ror
in
pop
sbb
xor
ror
pop
ror
shrd
shr
popa
in
sub
dec
mov
and
addr16
pop
mov
jo
inc
jo
add
jge
push
mov
jmp
xbegin
and
cmp
sbb
cmp
sbb
fcomp
test
dec
test
mov
fsubr
mov
mov
add
cmp
or
mov
fs
jo
jo
cdq
popa
push
dec
out
test
add
jmp
enter
mov
or
adc
rcr
push
nop
int3
inc
shr
dec
dec
enter
pusha
bound
mov
aam
xor
mov
pushf
sub
add
int3
bound
loope
ret
and
jo
in
pop
or
or
js
or
xor
(bad)
mov
xchg
jns
inc
hlt
lock
sub
movs
jle
and
push
pop
pop
sar
and
jmp
enter
(bad)
(bad)
ficom
xchg
xchg
in
imul
js
dec
inc
out
dec
and
stos
and
mov
sbb
and
pop
pop
or
push
movs
in
loopne
mov
adc
scas
int3
mov
inc
or
shl
lods
repz
push
cmp
xchg
mov
inc
add
hlt
(bad)
xchg
xlat
ror
cld
adc
inc
mov
xchg
call
xchg
sti
or
adc
fsub
lds
daa
call
test
cmps
pop
lds
fwait
es
and
fmul
add
mov
add
cmp
loopne
in
test
stos
xor
loopne
pop
and
mov
xchg
js
aad
dec
daa
sbb
dec
jae
nop
sbb
stc
cmp
ficom
xor
cwde
cmp
fcom
js
mov
sub
icebp
test
data16
pop
add
sub
fistp
je
js
sbb
sbb
inc
(bad)
cmps
cmp
push
jp
sub
stos
add
inc
xor
xor
loopne
sbb
adc
push
xlat
fsubr
je
xor
mov
inc
lock
jns
add
daa
leave
or
(bad)
push
leave
lods
push
pop
sub
add
cdq
mov
mov
sub
popf
add
int3
sub
and
js
adc
add
mov
dec
mov
push
sbb
out
retf
leave
cmp
fist
fs
sbb
push
je
and
js
pushf
add
rcl
pop
enter
or
xchg
sub
jno
fs
inc
add
push
sub
test
icebp
sub
pop
xor
icebp
add
retf
out
jl
sbb
add
das
shr
sub
loope
sbb
adc
in
loope
fsub
hlt
adc
or
loope
and
nop
lock
test
movs
fiadd
in
dec
and
mov
fcomp
stos
adc
dec
lods
les
movs
icebp
leave
or
jb
sub
pusha
imul
inc
test
dec
pop
or
inc
mov
or
sub
jne
push
sub
pop
pushf
mov
fcom
cs
retf
rol
pop
popa
lods
fild
mov
loope
cmp
cs
cs
dec
push
sbb
popf
jl
fwait
hlt
int3
leave
das
ins
jno
add
cmp
movs
pushf
sar
sub
xchg
in
inc
pushf
cmp
fsubr
rcl
in
jo
or
jg
hlt
inc
jb
sub
push
and
lea
xor
xlat
popf
pop
jno
rol
cdq
in
in
dec
mov
js
sbb
add
neg
sbb
fistp
inc
sbb
adc
push
out
mov
retf
sbb
push
add
xor
or
or
add
ror
sbb
jb
xor
call
push
xor
jae
shl
xor
in
add
test
cli
add
ins
sbb
xor
and
inc
cmp
jo
and
add
xor
loopne
dec
in
jge
arpl
adc
aam
les
mov
adc
xor
or
push
aaa
mov
imul
rol
test
inc
pop
xor
in
rcl
leave
cmp
jl
mov
xor
lds
aam
adc
pop
sbb
or
loopne
push
lds
in
(bad)
jecxz
cmp
xchg
sub
das
xor
jge
xchg
pop
push
or
xor
jge
mov
xor
inc
ror
leave
cdq
xor
(bad)
lea
cmp
in
adc
fsubr
push
nop
(bad)
xor
and
and
cld
pop
mov
inc
arpl
popa
cmp
imul
push
pop
std
sbb
xor
ret
pop
mov
jmp
and
sbb
add
leave
adc
popa
push
inc
loope
jmp
cmp
add
xlat
ss
pop
imul
rcl
sbb
hlt
adc
in
add
push
(bad)
in
xchg
and
je
aaa
mov
cmp
push
fadd
aaa
xchg
xchg
pop
rcl
pusha
dec
xor
sbb
dec
lods
sbb
mov
cdq
jbe
adc
push
xchg
inc
sbb
push
cmp
adc
aam
push
and
iret
or
sub
aam
mov
shl
pusha
adc
jns
loope
adc
in
jae
adc
inc
jmp
(bad)
clc
sub
sti
in
sbb
and
sub
cmp
addps
or
inc
mov
ret
or
inc
push
sti
cmovne
pop
adc
mov
shl
push
and
inc
adc
pop
ins
leave
shr
iret
std
add
push
bound
and
mov
fldenv
daa
add
push
or
or
or
leave
aaa
push
push
jo
dec
pop
jecxz
popa
lods
or
cmp
cs
mov
mov
dec
in
inc
sub
adc
cmp
cmc
cs
int3
je
sbb
repnz
or
aaa
and
ins
out
stc
push
jecxz
(bad)
sbb
bound
xchg
scas
(bad)
cmp
and
or
ror
mov
(bad)
cmp
out
jmp
sbb
inc
(bad)
mov
fadd
ret
or
shl
dec
out
jmp
fidiv
test
test
jmp
sbb
inc
sbb
or
add
pop
dec
pop
test
dec
stos
sub
sub
dec
js
push
dec
enter
ins
adc
adc
mov
shl
fldenv
pop
lds
fbld
in
xchg
mov
inc
or
add
sub
sbb
add
cmp
(bad)
push
mov
je
push
sub
xor
mov
(bad)
or
in
ret
imul
(bad)
in
mov
dec
rol
dec
js
add
and
cwde
dec
dec
adc
push
adc
inc
cmp
stc
or
mov
inc
ins
je
inc
sub
aas
ret
pop
ret
movs
movs
nop
and
sbb
aad
inc
or
icebp
ins
jmp
dec
adc
push
push
push
jmp
fs
jo
push
add
ins
shl
xor
call
jmp
xor
inc
jmp
fist
cwde
rcr
mov
ins
mov
inc
cmp
inc
jb
sbb
or
inc
sbb
pop
ror
(bad)
inc
inc
dec
sub
sbb
sub
sbb
mov
jle
(bad)
or
pop
jl
cmp
mov
cmp
adc
pop
inc
xor
or
hlt
add
ins
adc
add
mov
inc
je
shr
jns
pop
xlat
jg
mov
pop
xchg
xchg
test
mov
cmp
leave
enter
inc
and
movs
inc
push
jmp
sub
sub
cmc
(bad)
out
push
adc
mov
inc
pop
or
pusha
mov
sbb
add
jnp
test
test
fmul
inc
aam
mov
cmovno
nop
sub
inc
jmp
aam
adc
dec
or
enter
daa
xchg
dec
and
lods
push
leave
or
je
fiadd
mov
dec
test
call
in
lds
dec
adc
push
dec
dec
retf
push
fdivr
dec
enter
dec
lods
loopne
push
ins
cs
gs
stos
adc
xchg
sbb
aam
and
mov
sar
rcl
movs
aas
test
int3
inc
enter
xchg
and
fmul
fdiv
enter
test
pushf
fmul
dec
adc
call
pushf
push
inc
adc
js
sbb
daa
nop
movs
and
xchg
push
sahf
pop
dec
mov
loop
cmp
cwde
mov
int3
dec
pop
add
movs
dec
dec
inc
es
mov
sub
xchg
pop
stos
dec
adc
stos
loope
and
mov
mov
jb
test
sbb
add
js
jns
xchg
out
in
pusha
add
in
dec
add
inc
adc
fsubr
mov
adc
in
xor
cmp
ror
push
mov
mov
pop
repnz
inc
(bad)
fwait
std
jl
add
dec
fs
les
add
add
mov
test
jmp
mov
mov
sub
unpckhps
sets
movs
lods
cmc
xchg
(bad)
daa
test
xchg
push
in
mov
cdq
pop
je
test
aaa
adc
push
fimul
pop
enter
shl
add
and
sbb
fucomi
and
rcl
xchg
xor
add
sub
mov
ret
(bad)
add
retf
in
inc
imul
sbb
rcl
imul
mov
inc
fdivr
imul
cmps
and
ja
leave
and
psubusw
inc
or
loopne
cmc
pushf
mov
and
push
xchg
jno
shl
aaa
lods
(bad)
loopne
sub
loopne
nop
push
or
sbb
sub
cmp
lea
cmp
sbb
jo
push
dec
es
int3
and
in
jne
mov
sub
xor
push
mov
mov
movs
ins
rcr
xchg
dec
lea
pop
test
or
es
jg
jg
mov
enter
mov
ins
inc
in
ror
add
xchg
pop
bound
in
mov
sbb
push
aam
inc
mov
adc
xchg
adc
dec
cmps
mov
fcomp
dec
aam
xor
fdivr
mov
or
xchg
jns
jp
push
xchg
pop
dec
inc
push
enter
sar
hlt
sti
or
xchg
and
loopne
mov
in
and
nop
int3
and
movs
adc
and
ins
pop
add
dec
push
aaa
push
push
les
aam
mov
and
pop
or
movs
pusha
cdq
jge
or
lods
sub
pop
jmp
test
pop
jo
in
push
ror
popf
rol
mov
sub
adc
test
dec
sub
jmp
ins
adc
xor
push
leave
xchg
aam
xor
or
das
lea
pusha
adc
jnp
jge
sbb
js
pop
nop
mov
push
fdiv
dec
push
lock
adc
cmp
inc
add
in
repnz
add
in
lds
xor
pop
push
shl
push
pop
test
cs
enter
loopne
rcl
cld
push
(bad)
xor
mov
adc
adc
dec
pop
(bad)
inc
in
rol
adc
add
add
pop
cmp
dec
add
xchg
sbb
loopne
adc
mov
adc
in
add
push
xchg
es
push
pop
rol
int3
imul
or
aad
inc
mov
jbe
inc
fistp
add
lock
or
adc
pop
sbb
sbb
lar
lds
daa
loopne
popa
pop
cwde
xor
cwde
mov
stos
and
add
xor
leave
add
inc
(bad)
push
es
lods
pop
adc
imul
inc
mov
add
mov
dec
sbb
cmps
mov
mov
arpl
outs
pop
ror
inc
(bad)
stos
dec
mov
pop
leave
int3
add
mov
jb
push
je
lock
leave
add
in
call
ss
push
xchg
inc
xchg
movhps
in
adc
lods
push
imul
cmp
pusha
test
xchg
pusha
stos
shl
push
das
dec
pushf
pop
test
pusha
fdiv
jne
fwait
cmp
popa
adc
xor
xlat
xor
mov
sub
pusha
lahf
push
add
sbb
sbb
and
push
loop
inc
or
loop
sbb
pop
mov
adc
pop
mov
dec
add
inc
dec
test
stos
and
and
es
aam
adc
sub
enter
jo
xchg
test
xchg
mov
mov
arpl
mov
les
in
xchg
xchg
mov
mov
push
lds
call
pop
push
jo
shl
retf
rol
fcomp
fcom
je
fs
and
xor
push
pop
sbb
xchg
pusha
jmp
push
popa
dec
pop
adc
inc
mov
mov
mov
xor
adc
fs
out
enter
shl
inc
gs
push
xor
ds
mov
mov
scas
mov
pop
cmp
lock
inc
and
push
and
mov
fs
lock
mov
add
pop
dec
pop
cmp
pop
retf
rol
pop
xor
test
adc
jno
addr16
cmp
loop
push
addr16
test
mov
sub
sub
adc
fistp
out
call
call
and
call
mov
mov
mov
mov
cmp
cmps
adc
add
ins
add
lods
cmp
sub
call
adc
fsubr
in
imul
out
adc
ins
push
xchg
rol
nop
mov
outs
sbb
inc
nop
jno
mov
das
add
in
int
adc
xor
sub
mov
imul
ins
loope
mov
mov
sub
inc
imul
in
adc
aaa
fsubr
je
ret
add
add
sub
pop
adc
push
xor
pusha
les
scas
aad
cmp
mov
mov
xor
xor
stos
xchg
add
shl
pop
mov
xchg
push
enter
push
adc
es
push
pop
enter
add
lock
rol
inc
inc
xchg
outs
pusha
push
dec
xlat
es
aam
mov
mov
cmp
call
jb
leave
test
adc
pop
outs
adc
fild
popf
lods
pop
movs
leave
dec
pop
adc
retf
rol
ret
push
push
pop
movs
push
add
lock
jns
add
cld
add
push
lds
jns
or
rcl
cld
in
and
bound
in
stos
cdq
mov
add
inc
retf
jo
xor
aaa
cmps
mov
jno
cmp
jo
push
jno
aas
sbb
loop
ss
jae
pop
xchg
test
inc
xor
enter
push
fadd
imul
or
cdq
mov
xor
jg
jae
or
mov
sbb
add
jae
cmp
and
call
retf
fdiv
je
push
es
mov
pop
mov
sbb
mov
push
push
mov
jge
or
sbb
out
add
cmp
nop
xor
gs
xchg
cmps
push
pop
bound
shl
cdq
cmc
xor
add
xchg
outs
xor
loope
es
push
jmp
xchg
xchg
xchg
cmp
add
add
js
jbe
es
sahf
jecxz
inc
dec
loopne
std
adc
dec
and
ja
dec
ja
dec
leave
jmp
inc
xchg
pop
dec
dec
js
jo
(bad)
sub
loope
xor
jae
inc
out
in
mov
push
mov
retf
js
mov
xor
pop
mov
and
add
shl
mov
add
cmp
or
adc
xchg
add
jno
les
cmc
sbb
and
and
nop
add
add
sbb
mov
pusha
jnp
inc
dec
or
mov
and
add
fwait
jp
gs
dec
pop
les
add
xor
and
add
mov
inc
xor
popa
call
add
sbb
or
jbe
aam
pand
sbb
jb
cmp
in
pop
pop
adc
xor
sub
xor
and
pop
jb
inc
or
sub
js
or
xchg
push
and
rcr
inc
imul
sbb
or
mov
sub
inc
dec
fadd
pop
jl
mov
add
popa
sub
rol
adc
rcr
inc
jne
push
sbb
adc
fwait
popa
xor
jl
xchg
pop
and
sbb
jge
cwde
std
adc
movs
pushf
test
jno
lods
movs
loopne
mov
jecxz
int3
aam
jle
mov
and
loopne
and
and
fadd
pop
mov
adc
and
push
inc
popa
push
mov
xchg
dec
jmp
inc
shr
mov
mov
aam
mov
fs
or
push
jg
mov
pop
jo
jg
xor
fmul
and
test
iret
in
dec
push
lahf
jb
and
inc
cmps
mov
fdivr
ins
push
ins
loopne
pop
in
xchg
cmps
fisttp
or
add
mov
xchg
test
loopne
xor
in
mov
movlps
mov
xchg
or
adc
mov
inc
int
cmp
ret
add
shl
cli
(bad)
xor
sbb
in
and
fadd
pop
dec
mov
mov
repz
jae
push
jmp
dec
lods
add
lahf
aam
les
pop
fadd
push
enter
movs
add
xor
dec
pusha
pop
push
dec
aaa
popa
and
inc
rol
add
mov
pop
in
test
sbb
inc
xor
movs
mov
in
movs
call
sbb
fs
mov
cmp
loopne
inc
adc
test
enter
mov
xor
cmp
loop
sbb
repnz
xor
ret
cmp
shl
mov
mov
cmp
push
mov
test
fst
add
fsub
mov
xchg
imul
xor
sub
scas
xchg
out
adc
je
adc
cmp
cmps
fild
mov
enter
and
or
mov
ret
sbb
sbb
rcl
adc
int
stc
enter
and
sar
and
inc
jp
mov
loope
or
ins
pop
je
ret
push
rol
push
or
aad
mov
shl
data16
sub
shr
pushf
test
test
imul
ret
adc
fistp
mov
adc
ror
cmp
test
mov
adc
sbb
cmps
add
(bad)
ins
icebp
add
jno
mov
cmps
test
mov
dec
repz
ret
mov
mov
fild
pop
dec
or
js
mov
pop
add
mov
inc
ror
rcl
inc
inc
dec
jo
imul
sbb
(bad)
fiadd
inc
inc
scas
pop
shr
mov
jo
or
cmp
push
pushf
mov
fadd
dec
push
inc
pop
or
loopne
cdq
clc
lods
loope
dec
dec
test
push
adc
in
and
fsubr
push
in
adc
cmp
movs
shl
rol
test
lock
ror
pop
mov
push
adc
arpl
xchg
mov
or
rcl
and
pop
cmp
add
sar
inc
fadd
js
jo
or
je
js
adc
(bad)
enter
cmp
mov
xchg
pop
popa
push
inc
in
js
sbb
movs
cmp
in
mov
addr16
mov
push
jmp
sub
in
in
ror
jo
xor
sub
adc
or
movs
sahf
add
push
pop
add
dec
rol
ret
daa
or
lods
(bad)
jmp
xlat
mov
pusha
add
imul
mov
pop
cmp
out
in
push
xor
push
and
cmp
in
inc
pusha
mov
(bad)
pop
xchg
jo
fadd
in
loopne
xor
sub
sub
cmp
cmp
add
cdq
mov
inc
lea
rcr
pusha
sbb
and
mov
pushf
inc
xchg
mov
pushf
iret
ins
jmp
in
and
aam
aaa
sbb
dec
xchg
dec
ror
nop
sub
add
fcom
jge
pop
mov
pop
fadd
pop
xor
dec
push
fs
pop
aam
and
adc
cmp
and
dec
inc
repnz
in
or
add
lods
movs
stc
cmp
adc
adc
test
inc
(bad)
xchg
mov
mov
inc
push
cmc
pop
push
pop
int3
inc
popa
pushf
aas
inc
and
cmp
dec
xchg
hlt
mov
das
push
sbb
fst
cmp
add
add
sbb
shr
xchg
sbb
xor
xor
call
add
nop
outs
pusha
or
rcl
nop
cs
loope
fs
mov
rcl
pop
pop
rcl
dec
movs
lods
es
aam
push
adc
xchg
mov
mov
mov
inc
xor
mov
adc
ror
jo
cwde
int
inc
ret
ins
dec
rcr
mov
and
shr
jl
adc
push
push
adc
xchg
mov
xchg
xchg
in
xor
mov
shl
pop
outs
test
push
and
dec
cwde
and
push
adc
stc
xor
inc
sbb
cwde
fdiv
call
add
or
sti
dec
cmps
les
stos
out
pop
lods
movs
xor
push
inc
mov
mov
mov
add
enter
adc
pushf
cli
xchg
adc
xchg
cwde
nop
test
pop
ret
les
test
fistp
sub
xor
cli
mov
cdq
in
jmp
or
and
call
or
pop
repnz
(bad)
call
out
pusha
add
jg
push
sub
lock
add
enter
pusha
lea
inc
mov
xchg
rcl
or
in
lods
jb
and
and
add
in
push
sbb
and
inc
adc
arpl
xlat
or
sub
pop
push
jne
pushf
cwde
lahf
fsub
mov
and
push
aaa
jns
movs
out
mov
push
mov
movs
fsub
ret
repnz
movs
add
ins
cmps
jbe
xchg
adc
loop
mov
test
into
and
cmp
repnz
and
cmps
test
sahf
or
dec
lods
repz
sub
push
add
mov
test
loopne
jge
adc
adc
stos
or
jg
or
pop
leave
or
pop
push
xchg
and
mov
gs
leave
mov
pop
mov
mov
retf
jns
call
adc
dec
add
mov
xchg
cld
pop
cmp
and
xchg
fwait
mov
or
dec
test
fistp
in
arpl
ret
aam
mov
out
in
fist
loopne
add
fcmove
sbb
fwait
dec
xor
lods
mov
push
lods
dec
pop
and
and
sub
adc
enter
inc
cld
mov
ret
stos
out
mov
fbld
xlat
es
push
or
pop
rol
(bad)
add
inc
(bad)
int3
and
les
popf
cmp
xchg
xor
shl
pop
(bad)
call
push
dec
push
scas
sbb
xor
ret
call
in
aas
add
es
mov
call
in
mov
in
nop
sub
adc
or
arpl
xor
xchg
cld
scas
mov
lahf
adc
mov
jmp
jne
jne
add
jmp
sti
push
imul
fwait
jl
pusha
push
push
cmp
rcr
sbb
stos
movs
scas
hlt
call
sbb
cmp
sbb
dec
mov
mov
mov
dec
fisubr
loope
call
in
ret
or
sbb
lods
aas
add
lods
pop
adc
push
aad
cwde
mov
cmps
sub
rcl
pop
pop
ret
xor
mov
inc
xchg
or
pop
jg
lock
(bad)
mov
sub
push
or
adc
mov
mov
aas
jns
leave
mov
cmp
mov
in
lock
adc
(bad)
iret
and
add
add
mov
inc
not
fucomip
pop
mov
call
add
cmps
(bad)
ret
sub
mov
shr
mov
lahf
add
lahf
or
adc
sub
or
and
add
inc
jl
jg
mov
and
mov
mov
movs
popa
add
aas
mov
test
sub
pop
or
dec
xor
mov
jg
sub
dec
mov
sbb
retf
add
pop
jno
xchg
outs
adc
adc
and
dec
xchg
es
fs
cmp
inc
dec
test
dec
dec
push
stos
and
adc
retf
mov
pop
test
and
sti
push
ret
(bad)
xor
mov
adc
and
sbb
xchg
mov
mov
jns
in
pop
dec
pop
push
mov
push
test
mov
mov
sub
dec
sbb
and
nop
inc
push
cmp
sub
inc
push
cmp
xor
cmp
mov
pop
pop
stos
or
push
mov
mov
push
mov
push
xchg
(bad)
push
fmul
mov
in
pop
ins
jbe
and
mov
iret
sub
jl
in
data16
fistp
inc
cmp
and
dec
rcr
inc
fcmovb
mov
in
pushf
mov
push
mov
push
add
cmp
and
add
nop
pusha
fs
ins
jo
jo
scas
xor
fisttp
cmp
adc
add
sbb
in
retf
(bad)
enter
adc
arpl
fsub
pop
ret
sub
add
cmp
dec
add
nop
add
or
nop
push
pop
adc
jne
fucom
xchg
ret
sbb
neg
mov
(bad)
add
pop
rol
and
lods
mov
push
mov
mov
nop
mov
and
pop
mov
mov
push
call
xchg
shl
inc
sub
test
fst
sub
cmps
push
and
sub
out
call
and
in
das
imul
mov
pop
push
outs
mov
mov
std
retf
mov
xchg
jle
jg
and
or
and
mov
sbb
movs
sbb
and
retf
rcl
or
inc
push
push
add
dec
mov
jne
rcr
inc
inc
pop
jo
fsubp
pop
push
adc
in
add
shl
cdq
in
add
adc
loopne
dec
xor
call
xchg
xor
dec
adc
and
xor
and
inc
dec
xor
and
push
pop
pusha
jns
sub
jo
xchg
fld
dec
or
nop
(bad)
mov
pushf
pop
xor
enter
pushf
ror
aad
push
icebp
adc
leave
and
in
mov
cmps
push
je
adc
cmp
inc
push
fisttp
mov
and
mov
mov
movs
mov
add
movs
test
lds
movs
fld
or
jae
nop
int3
add
enter
adc
push
adc
sbb
test
add
mov
add
call
mov
arpl
sub
cs
in
(bad)
xchg
(bad)
cmp
test
and
add
or
scas
es
adc
lock
fsubr
(bad)
ins
popf
(bad)
dec
mov
scas
push
stc
lods
jg
pop
or
pavgb
out
sbb
cmp
sar
add
pop
popa
mov
in
mov
lock
cmp
enter
cdq
ss
jae
cmc
adc
es
xor
and
mov
dec
cwde
mov
xor
sbb
leave
push
cmp
xor
movs
pushf
popa
xor
dec
mov
nop
pop
leave
sar
les
adc
idiv
inc
pushf
adc
lods
or
xchg
inc
push
push
xchg
add
scas
stos
push
pop
retf
inc
fisub
jmp
test
add
pop
xor
dec
aam
mov
push
fmul
call
ret
fwait
aam
push
rcr
jbe
(bad)
jle
and
mov
lods
stos
or
push
fmul
jp
xor
addr16
add
fsub
cmp
or
loope
sbb
aam
xor
inc
ss
test
push
mov
jmp
mov
pop
adc
or
nop
ret
mov
adc
int
mov
in
dec
pop
mov
repnz
push
das
inc
les
dec
lahf
mov
add
ret
jns
test
push
adc
and
adc
mov
fs
adc
adc
push
in
sub
xor
das
and
test
sbb
iret
push
ror
pop
pop
or
iret
mov
call
sub
ret
push
or
push
adc
sub
pop
in
sub
adc
xchg
push
mov
ror
adc
cmps
jmp
jb
test
std
inc
xchg
inc
ret
inc
add
nop
data16
inc
mov
dec
xor
mov
adc
pop
add
and
push
xchg
pusha
sub
fs
dec
ins
jl
xchg
add
add
fs
xor
popf
sub
add
rcl
ds
data16
in
or
dec
scas
sbb
stos
xor
lahf
and
out
rcr
inc
call
or
sub
lahf
add
imul
rcr
mov
push
pop
loope
mov
xchg
shr
pop
xchg
pop
inc
mov
addr16
dec
inc
push
xchg
jl
loopne
ror
mov
pop
imul
lahf
aas
adc
jl
js
inc
or
pop
inc
lock
dec
rcl
in
rcl
and
sbb
stos
inc
mov
add
push
in
push
outs
or
adc
and
fs
sti
adc
mov
dec
dec
and
and
or
xchg
dec
es
int3
(bad)
aam
and
pop
enter
sbb
or
adc
mov
sbb
arpl
out
pusha
std
hlt
sub
fwait
inc
fisubr
or
in
rcl
dec
sub
and
les
push
mov
jo
pusha
inc
jbe
sbb
or
push
data16
test
mov
mov
sub
arpl
xchg
es
bound
fistp
stos
add
or
sbb
cmp
ret
and
cs
lahf
adc
adc
jg
mov
adc
call
or
enter
jl
mov
adc
aas
aam
add
les
lods
xor
jno
fmul
call
mov
jecxz
adc
jmp
(bad)
scas
fsubr
and
fild
invd
and
push
aas
(bad)
test
jmp
pop
lds
dec
or
mov
fadd
mov
ficomp
les
les
iret
in
add
sbb
scas
nop
or
pop
aam
and
adc
and
out
aas
push
or
dec
sbb
fld
das
comiss
movs
push
in
mov
pushf
cmp
outs
fcom
xchg
and
outs
sbb
rol
fild
arpl
pop
or
int3
adc
jne
icebp
or
ffreep
dec
rcl
leave
int3
sbb
pop
lods
int3
mov
and
test
fstp
sbb
jbe
in
pop
cmps
add
jo
sbb
sub
add
jl
call
movs
aad
or
pop
dec
pop
inc
test
push
cmp
mov
ror
sbb
mov
jb
mov
jb
ror
and
in
loopne
add
add
inc
cs
ins
sub
inc
sbb
push
pusha
enter
call
pop
fadd
pop
jl
not
push
lds
lock
push
inc
mov
pop
fsubr
loopne
cmp
pop
xor
loopne
aam
in
xchg
jne
or
rcl
or
fcomip
push
in
ret
es
mov
adc
mov
add
adc
popa
stos
or
lahf
inc
xor
fsub
aad
das
scas
pop
ret
xor
pop
test
adc
dec
aam
seta
loope
lock
sbb
inc
cmp
inc
inc
push
nop
dec
inc
aaa
cmp
xchg
movs
cdq
in
int3
movs
movs
nop
ret
mov
mov
ret
pop
or
nop
sbb
fstp
mov
in
jne
or
jbe
ins
and
wrmsr
or
add
imul
mov
sbb
das
add
jl
(bad)
out
push
pop
aaa
movsx
or
aam
les
pop
push
pop
xor
pop
loope
in
add
dec
or
bound
dec
fwait
in
cdq
push
imul
je
xchg
es
dec
js
push
and
or
add
mov
nop
xchg
shl
in
mov
cmovnp
and
in
pop
xchg
xchg
sub
inc
and
xor
shl
and
call
adc
xchg
mov
sbb
jo
fbstp
sub
jb
(bad)
mov
sub
or
ror
(bad)
icebp
mov
dec
cmp
test
pop
test
mov
adc
sbb
mov
xchg
sub
in
xchg
out
push
xor
lods
inc
sbb
mov
test
aad
mov
jg
add
or
mov
movs
and
call
mov
mov
sub
and
popa
jmp
and
cmp
fcom
rcl
mov
sbb
jmp
jle
pop
cmp
fcom
and
xchg
leave
ins
call
xor
mov
mov
ret
cmp
mov
pop
mov
enter
ds
fadd
sbb
jmp
pop
mov
mov
sub
xchg
jb
ret
fsubr
iret
lods
shr
enter
mov
jb
imul
in
add
ins
leave
imul
in
sbb
rcl
and
nop
and
mov
push
dec
leave
mov
mov
imul
test
mov
mov
mov
ret
push
xor
sbb
xchg
sbb
test
dec
or
fs
and
or
sbb
sub
pop
test
sbb
dec
fild
add
cmp
jl
ja
je
dec
int3
and
cmp
add
push
fisttp
xor
add
ins
ret
or
or
in
or
nop
and
out
sub
xchg
inc
mov
or
jbe
jns
adc
out
dec
dec
enter
cwde
pop
test
in
ins
mov
fs
pop
repnz
pop
xor
les
pop
les
stos
or
ins
mov
adc
scas
outs
push
xchg
mov
clc
pusha
enter
lock
loope
sub
dec
or
sbb
out
sbb
cld
add
sbb
mov
adc
adc
jns
ret
add
cld
icebp
test
sub
or
jo
loopne
scas
cmp
in
xchg
loopne
fsubr
outs
ret
xor
std
jno
mov
fs
test
in
or
test
dec
call
rcpps
jg
sub
sti
and
ds
call
dec
sub
hlt
pop
lahf
sub
and
mov
xchg
and
xchg
enter
or
fs
loopne
nop
fadd
cmps
and
or
nop
or
xor
nop
or
nop
inc
dec
mov
or
push
pop
sub
retf
das
in
popf
adc
in
in
jl
sub
or
les
ror
stos
push
pop
ins
call
movs
mov
jmp
or
jno
fiadd
test
mov
arpl
fsub
enter
les
imul
lods
stos
and
pop
neg
xor
and
dec
push
mov
pop
and
mov
adc
mov
mov
jo
mov
loope
cmp
int3
fld
and
push
push
mov
xor
outs
pusha
xor
es
push
add
sar
inc
inc
inc
cwde
pushf
movs
dec
pop
mov
pushf
test
ins
jne
outs
nop
jg
sub
mov
mov
xor
scas
lahf
mov
jno
(bad)
jl
je
xor
push
repz
push
test
dec
cmp
cmp
dec
mov
xor
loopne
lds
fcom
ss
inc
adc
in
mov
sti
push
sbb
add
mov
fdiv
jg
stos
ret
ror
mov
push
lahf
ror
or
mov
sbb
in
mov
adc
int
popf
push
movs
xchg
sbb
ffreep
lea
sbb
ret
jmp
call
ret
push
and
lock
shl
lds
hlt
in
jge
xor
mov
add
xadd
mov
das
mov
aas
(bad)
je
push
xchg
es
and
ins
sub
shr
adc
push
mov
sub
fstp
in
mov
call
and
adc
push
(bad)
cmp
enter
ins
cmp
fnstenv
das
mov
push
mov
pop
jg
rcl
shr
repnz
add
sub
pop
rcl
adc
nop
(bad)
das
cmps
fdiv
int3
outs
int3
das
lods
pushf
fsubr
or
mov
test
daa
daa
ja
fmul
mov
pop
push
pop
and
dec
ficomp
test
icebp
mov
popa
jg
jb
mov
rcl
mov
pop
fsubr
mov
jg
mov
jg
push
add
rol
adc
outs
add
and
mov
fild
popa
jb
lock
and
cmp
mov
or
call
pusha
dec
ror
sub
loopne
push
imul
mov
mov
inc
mov
lahf
cld
push
mov
and
cmp
pushf
adc
loopne
cs
xchg
mov
add
xchg
xchg
sbb
add
aas
enter
xchg
adc
repnz
xor
cmps
aam
push
pop
sbb
dec
inc
call
mov
push
xchg
jno
and
adc
add
mov
scas
or
iret
xor
pop
jo
add
xchg
pop
cwde
cmp
jb
rol
xor
add
inc
icebp
test
jmp
xor
mov
adc
adc
adc
cmp
in
(bad)
adc
or
imul
mov
repnz
imul
mov
int3
and
add
mov
cdq
and
repnz
add
call
jecxz
sub
adc
ret
mov
mov
aas
cwde
push
ins
and
xchg
or
or
pop
test
dec
xor
and
cmp
adc
mov
movs
mov
cdq
mov
or
add
fs
or
into
scas
int3
popf
inc
push
add
repnz
movs
aad
pop
sub
jecxz
fisubr
or
adc
xor
punpckhdq
fiadd
loopne
mov
in
sbb
sub
lods
in
stos
xchg
mov
js
inc
cs
imul
dec
(bad)
in
shl
sbb
or
add
and
mov
mov
pop
mov
(bad)
das
or
daa
xor
mov
sbb
jmp
mov
adc
adc
in
test
ror
movs
push
cmp
dec
adc
test
push
add
adc
xor
xor
ins
jo
fs
mov
sti
mov
inc
adc
xor
sub
cmp
dec
xor
and
dec
cmp
repnz
add
xor
in
call
and
dec
adc
and
dec
xor
or
loopne
pop
leave
push
loopne
mov
scas
jno
xor
pop
xor
inc
jo
outs
pusha
jecxz
xor
adc
sbb
cmps
xchg
or
lock
cmps
leave
adc
sahf
inc
inc
fiadd
movs
and
cdq
pusha
enter
mov
adc
inc
jns
mov
fadd
push
mov
popa
push
jo
push
test
add
jl
mov
pop
inc
jo
add
add
pop
cmp
nop
js
je
add
add
enter
stos
popa
test
mov
(bad)
frstor
icebp
shl
fmul
add
pop
(bad)
inc
and
adc
(bad)
mov
pushf
in
mov
sbb
in
cwde
mov
and
cwde
add
shl
test
fist
test
jo
dec
or
hlt
vphsubbw
push
repnz
(bad)
cmp
add
dec
pop
and
and
popa
movs
popa
mov
mov
or
and
dec
cmps
mov
push
push
ins
mov
test
push
xchg
mov
jl
ss
xchg
movs
lea
jg
add
or
js
adc
add
sbb
sub
push
enter
pop
xor
adc
sbb
push
pop
(bad)
ret
cmps
(bad)
popa
lea
pop
jae
inc
sub
sti
je
or
adc
pop
lods
lahf
ret
mov
xchg
adc
pop
dec
mov
mov
pop
out
nop
aad
lods
or
test
pop
dec
and
add
push
sub
loop
sub
and
adc
sub
mov
mov
and
xor
push
fs
xor
shl
or
shl
xor
or
sbb
enter
cs
cmp
sub
or
scas
movs
push
and
test
aad
mov
or
adc
push
movs
das
lahf
bound
inc
das
dec
mov
test
xor
xor
dec
loopne
push
mov
(bad)
arpl
(bad)
mov
iret
das
mov
fst
das
fbld
push
ret
and
mov
xchg
mov
(bad)
mov
in
ror
sbb
add
rol
mov
adc
push
inc
sub
inc
test
dec
jae
leave
stos
xchg
mov
dec
xor
unpckhps
xchg
cmp
pop
ins
je
dec
nop
inc
mov
jns
xor
pusha
pop
in
pusha
ins
mov
xchg
dec
js
pusha
push
cmp
js
push
mov
pop
lds
mov
pop
xor
inc
push
sbb
cld
cli
and
call
mov
ss
push
aam
xchg
add
push
inc
sbb
ret
add
jl
add
push
je
push
jl
pop
gs
shr
adc
xchg
movs
aam
inc
push
clc
cli
pop
inc
nop
xchg
lods
pop
jle
out
pusha
repnz
add
ficom
sbb
test
mov
inc
push
cmp
rcr
(bad)
loopne
cmp
retf
imul
jl
adc
cmp
sub
inc
dec
in
icebp
movs
lock
out
ins
xchg
dec
push
hlt
call
dec
xor
xor
mov
xor
and
or
lods
pop
test
leave
adc
mov
jmp
and
push
nop
out
mov
xchg
movs
je
les
xchg
imul
xchg
push
aam
es
fs
pushf
dec
fwait
fs
in
movs
sub
fs
imul
je
push
jl
popa
fcmovu
pushf
sub
xchg
ins
xchg
dec
cmp
lds
xor
and
fs
xchg
mov
xor
pop
pop
dec
xor
and
je
cdq
or
int3
sub
inc
dec
xor
add
and
dec
inc
push
aam
dec
es
dec
push
sbb
xchg
dec
xor
cmp
ins
or
jo
imul
cmp
mov
inc
add
mov
mov
es
and
cld
lsl
dec
adc
icebp
dec
push
mov
sbb
jb
imul
xor
jo
lods
xor
sub
int3
ins
mov
fsub
test
xchg
arpl
mov
xchg
dec
lods
fadd
adc
enter
sub
adc
inc
(bad)
adc
add
adc
pop
icebp
mov
cdq
ss
mov
cwde
fs
dec
nop
js
pusha
add
jmp
icebp
and
cmp
adc
leave
pusha
push
fs
and
xor
add
dec
sbb
lock
ret
adc
pushf
mov
fdiv
loopne
dec
xor
enter
dec
xor
and
rcr
dec
pop
xchg
dec
xor
js
or
pusha
push
xchg
pop
sub
cdq
fisub
adc
shl
sbb
repnz
in
rol
sub
add
or
dec
ins
push
enter
xchg
mov
cdq
lds
nop
mov
pusha
sub
mov
mov
or
and
stos
cdq
dec
and
xchg
dec
push
daa
sar
scas
imul
jge
mov
cdq
inc
and
enter
inc
mov
mov
sbb
sub
pusha
or
ins
push
in
pusha
add
jno
adc
scas
push
or
cmp
mov
pusha
or
sub
vaddss
dec
or
add
test
mov
movs
ins
pop
adc
pop
ins
adc
or
sub
sub
inc
mov
jbe
push
in
inc
int3
sub
ss
xor
sbb
mov
jbe
pop
inc
sub
push
add
inc
push
lock
ror
pop
in
cmp
enter
enter
add
sbb
call
mov
test
add
mov
sbb
call
jb
jns
cmp
enter
jo
push
pop
add
xchg
or
adc
lods
jbe
aaa
push
xchg
add
leave
dec
jl
cmp
or
leave
xchg
dec
or
sbb
add
rcr
or
xor
daa
cdq
scas
xor
test
(bad)
jo
pop
aaa
push
and
sbb
dec
mov
sbb
dec
push
fsub
inc
clc
fs
add
add
(bad)
push
cdq
or
(bad)
lock
jno
fild
dec
fs
lock
es
ja
pop
enter
sub
push
iret
ror
or
sbb
cmp
and
je
(bad)
outs
lods
pop
sbb
mov
pop
lods
outs
dec
and
mov
stos
or
xor
aam
sub
sub
scas
enter
inc
cmp
inc
mov
xor
sbb
mov
mov
movs
xor
adc
dec
fsub
cmp
push
mov
or
xor
xor
push
shr
inc
aas
pop
nop
inc
push
dec
mov
aas
push
sbb
(bad)
inc
ins
and
inc
call
(bad)
cdq
in
pusha
pop
ins
fdiv
fdivr
in
mov
fmul
aas
fild
test
cs
gs
sub
(bad)
mov
call
scas
xchg
mov
cs
or
rol
fmul
adc
mov
lods
or
sahf
and
test
and
pusha
loopne
jecxz
pusha
mov
int3
imul
sbb
lods
adc
xchg
dec
shl
jg
fidivr
mov
or
les
test
push
ins
or
xchg
or
mov
jne
movs
cmp
adc
ss
lea
xor
pop
sbb
in
out
xor
sub
jbe
ret
adc
push
subps
jne
xlat
test
popf
pop
lea
popa
mov
push
lahf
dec
push
imul
daa
cmp
jb
scas
mul
test
(bad)
dec
mov
add
out
stc
leave
and
jmp
jmp
les
push
fsubr
xchg
ins
lods
push
out
inc
enter
je
scas
dec
jmp
out
hlt
inc
dec
fwait
fs
push
pushf
jmp
mov
imul
inc
fs
in
rcl
inc
scas
xchg
jmp
cdq
pushf
push
jmp
movs
cmp
imul
stos
push
push
mov
xchg
xor
jmp
inc
pusha
call
dec
xor
and
sbb
sub
fs
movs
in
ins
xor
and
cmps
sub
cdq
sub
ins
xor
add
mov
or
sub
mov
jmp
es
ss
fcomp
dec
cmp
mov
test
ins
xchg
dec
push
mov
cmps
dec
xor
leave
mov
or
xor
xchg
dec
xor
repnz
jmp
jo
or
mov
adc
dec
fwait
fs
xchg
adc
ins
xor
leave
and
xor
jl
imul
inc
and
cdq
ss
ins
sub
je
(bad)
xchg
sbb
lds
cdq
popa
jne
shr
inc
jne
mov
inc
sti
rcl
mov
dec
mov
loope
add
sub
rcr
inc
xchg
dec
xor
lds
(bad)
ins
xchg
xchg
sbb
mov
jmp
nop
jmp
dec
mov
in
adc
rcl
sub
lods
popa
add
repz
inc
push
and
fdiv
cmc
jbe
and
fcmovnu
aam
in
inc
es
mov
sub
sbb
leave
mov
les
xchg
dec
aam
fsubr
movs
adc
and
ins
pop
sub
and
dec
xor
xchg
dec
pop
ret
lods
push
push
jl
dec
pop
(bad)
and
lea
mov
sbb
rcr
daa
cdq
add
dec
pushf
push
in
dec
xor
and
pop
movs
cmp
mov
sub
xchg
dec
es
cmp
push
inc
imul
lds
lods
imul
mov
mov
xchg
ins
and
jns
jl
cs
stos
or
ss
jmp
fs
arpl
mov
xchg
dec
es
rcr
test
lea
adc
sub
js
xchg
dec
es
mov
mov
fs
dec
push
cmp
fs
dec
adc
and
sub
add
and
cdq
or
in
shl
sahf
fsub
call
enter
cmps
dec
xor
adc
xchg
out
inc
mov
push
jo
in
and
fimul
pop
leave
and
lods
add
clc
repnz
sub
and
xchg
or
scas
fbld
xchg
sbb
adc
leave
push
pop
pusha
sbb
les
jae
xchg
dec
xor
or
call
lock
leave
mov
push
enter
and
dec
xor
mov
es
fisub
xor
dec
or
dec
cwde
push
xor
pop
sub
xor
ficom
pop
lods
in
cmps
lods
loop
mov
fwait
cmp
or
leave
and
pop
in
and
mov
or
in
xlat
sub
shr
adc
shr
push
fsubr
loopne
dec
xor
adc
shl
test
lds
lock
cmp
mov
pusha
mov
adc
sub
add
or
jmp
leave
and
pusha
inc
jmp
add
inc
dec
sub
leave
and
or
sbb
and
in
repnz
jmp
pop
add
dec
es
rcl
xchg
fmul
rol
xor
xchg
mov
sub
fs
dec
jo
xor
es
cld
out
push
xchg
dec
cmps
dec
pop
adc
cdq
xor
sub
popa
xchg
sbb
test
enter
jmp
ret
popf
test
rcl
lods
and
adc
imul
arpl
mov
adc
icebp
movs
sub
imul
pop
nop
jmp
add
and
nop
in
lds
es
loopne
adc
or
pop
xor
pop
aas
mov
xor
pop
or
push
dec
pop
repnz
xor
push
es
inc
enter
sbb
sub
shl
cmp
pop
pop
and
cld
aam
cdq
fisubr
lods
adc
shl
push
fsubr
cwde
adc
(bad)
fisttp
add
sbb
popf
or
cmp
fs
or
or
les
les
inc
shl
shr
or
rol
fadd
jbe
adc
leave
and
hlt
out
ins
xchg
dec
rol
clc
add
dec
cwde
or
imul
push
call
dec
lods
out
cld
test
sub
add
cmp
jmp
mov
cmp
(bad)
(bad)
adc
add
shl
aas
aam
mov
fdivr
dec
sub
stos
sbb
fidivr
leave
xor
xchg
pop
or
pop
adc
xchg
test
and
jo
je
or
push
rol
sti
shr
dec
add
test
fdivr
add
fs
sbb
fs
imul
test
inc
or
mov
in
cld
sub
sub
or
cld
aas
dec
scas
pushf
xchg
push
call
pusha
cwde
cld
and
(bad)
cld
addr16
or
mov
fidiv
and
or
sub
xlat
cdq
add
loopne
sub
adc
or
lds
dec
xor
cld
dec
push
or
xchg
jl
mov
test
dec
add
pop
sbb
mov
push
pop
mov
xchg
test
adc
ins
sar
sbb
dec
cmp
popf
call
push
ja
cmp
js
add
mov
cmp
mov
bound
adc
or
mov
fadd
lods
adc
cwde
movs
mov
pusha
inc
movs
adc
inc
inc
add
lods
fistp
mov
adc
push
or
add
push
push
inc
add
sub
xchg
arpl
sbb
mov
jg
xor
dec
xacquire
inc
popa
sbb
fcom
lock
xor
popf
cmp
je
ins
dec
push
xchg
jne
jnp
call
sbb
xchg
xchg
bound
test
or
daa
dec
mov
sub
inc
sahf
inc
xor
xor
pop
push
enter
push
cdq
pop
mov
ins
and
mov
jb
xor
inc
sbb
aad
pop
xor
push
mov
adc
adc
mov
xchg
mov
test
jo
and
push
mov
push
push
dec
and
or
and
jl
aas
and
xchg
test
push
stos
dec
adc
retf
stos
sbb
inc
pop
xchg
in
inc
mov
sub
push
rcl
out
cmp
mov
cmp
aad
inc
adc
mov
loop
cmp
jmp
and
pop
enter
dec
out
aam
mov
inc
push
pop
mov
paddd
dec
pop
mov
push
pusha
add
pop
or
xchg
push
pop
dec
jmp
test
popa
mov
dec
lahf
dec
mov
std
mov
inc
pop
xlat
mov
movs
lahf
jmp
aaa
push
xor
adc
xchg
cmp
and
mov
call
add
adc
inc
add
loopne
mov
enter
fstp
and
xlat
inc
pop
inc
ins
sub
pop
sbb
ins
dec
es
jbe
adc
or
dec
push
es
sbb
pusha
jecxz
mov
stos
mov
adc
and
sbb
sbb
or
inc
stc
out
or
retf
add
sbb
and
imul
push
add
sub
cmps
call
pop
in
and
sub
loopne
mov
or
adc
push
shl
(bad)
mov
or
das
inc
fwait
stos
mov
les
inc
adc
sbb
and
pop
mov
iret
pop
fisubr
aas
ins
aad
loop
das
cmovae
push
jg
mov
iret
mov
dec
lods
jg
or
dec
sar
inc
cmp
xor
bound
pop
stos
pusha
adc
adc
outs
adc
add
rcl
add
outs
iret
adc
(bad)
out
loopne
or
jo
outs
fdivr
popa
or
pop
mov
iret
in
add
test
xor
les
jbe
enter
mov
test
or
add
add
push
fbld
sub
iret
ss
xor
ins
or
jbe
scas
inc
mov
aad
pop
retf
sub
add
pop
push
fadd
bnd
push
pusha
loop
cmp
ins
cmp
jae
movs
fs
inc
xor
push
mov
add
inc
xchg
pop
xor
icebp
daa
inc
inc
sub
dec
and
add
inc
mov
scas
adc
or
pop
inc
add
inc
pop
and
xor
aad
setg
sub
jb
enter
adc
sbb
push
sub
test
xor
movs
(bad)
mov
xor
mov
in
push
fcomp
pop
sub
scas
pop
and
dec
or
icebp
inc
sub
mov
mov
pop
add
stos
add
dec
rcr
sub
sbb
mov
lds
test
movs
mov
jb
xchg
or
cmp
adc
and
xor
add
fiadd
cmp
jo
push
or
leave
adc
in
repnz
adc
mov
sbb
or
pop
repnz
or
sbb
and
jbe
ins
loopne
lds
or
lds
popa
mov
arpl
mov
mov
popf
fidiv
mov
inc
and
lods
push
mov
sbb
xchg
mov
inc
not
push
nop
fld
adc
adc
test
cwde
fistp
inc
nop
jecxz
fs
mov
cmp
arpl
and
inc
lock
add
xor
movaps
adc
mov
inc
add
sbb
inc
mov
cwde
xor
test
mov
repnz
lock
ins
pop
jne
les
ins
rcl
xchg
lock
sub
(bad)
nop
lock
jo
fs
les
sbb
popf
xor
xor
aas
in
sbb
xchg
pusha
shl
inc
jb
clc
nop
xor
mov
rol
inc
jb
pusha
les
test
ins
rcl
pop
inc
sub
cmp
and
inc
inc
es
add
push
nop
inc
push
or
or
pop
enter
adc
and
enter
pop
enter
mov
and
enter
in
add
das
adc
add
nop
add
jo
add
nop
sub
xor
add
shl
add
jb
add
xor
push
outs
mov
imul
lods
dec
mov
pushf
nop
inc
cmps
(bad)
jo
xor
mov
mov
cmp
lahf
mov
jg
push
nop
inc
fidivr
add
or
pop
enter
or
and
enter
pop
enter
nop
sbb
pop
enter
in
pop
enter
and
in
add
nop
add
nop
sub
in
xor
add
add
adc
add
cmp
jb
add
inc
mov
inc
shl
add
enter
dec
cmp
add
xor
ret
fild
mov
fstp
mov
fsub
shl
pop
aas
pusha
aas
sbb
sbb
jb
push
jb
mov
push
jb
sbb
je
adc
cmp
inc
and
bound
cmp
xor
or
push
adc
add
fdiv
imul
inc
sub
jbe
addr16
mov
loope
xchg
and
pop
repnz
mov
inc
mov
repnz
xor
or
cmp
not
add
movs
or
sbb
mov
lahf
jo
sbb
lock
and
aaa
xor
pop
and
scas
jne
scas
cmp
aas
fist
jmp
(bad)
(bad)
dec
cmp
repz
inc
jge
lods
cmp
ret
mov
out
arpl
push
cmp
rcr
mov
nop
xor
sbb
test
cmp
and
gs
retf
and
lock
lods
adc
xchg
pop
es
imul
and
and
adc
mov
cmps
cmps
fwait
xor
jno
pop
sub
psubb
adc
fwait
sub
xor
pushf
in
aas
inc
das
and
cmp
inc
push
cmp
dec
push
cmp
inc
inc
jo
inc
dec
jb
inc
adc
and
pop
jne
add
dec
aad
and
mov
and
push
jns
sub
retf
pushf
nop
inc
inc
sub
push
test
mov
dec
xlat
dec
xor
add
retf
call
or
call
ret
mov
cmp
popf
aam
xor
pusha
jecxz
dec
adc
fs
inc
jge
lock
inc
shr
xchg
adc
in
repnz
fidiv
push
pusha
xor
adc
loopne
mov
ds
push
jb
outs
loopne
dec
inc
ud1
dec
mov
mov
in
sub
pop
cmp
test
cwde
dec
cmp
push
sbb
enter
cmp
dec
or
loop
pusha
pushf
rcl
hlt
mov
cmp
mov
dec
movs
and
aaa
fldenv
push
mov
jb
out
cmp
sbb
dec
pop
and
pusha
lock
fs
push
dec
ins
mov
and
push
ret
imul
dec
in
sub
and
gs
retf
in
xor
jo
in
xor
aam
dec
cmp
in
fwait
sub
push
push
adc
sti
xor
retf
sbb
jbe
sbb
pusha
inc
xchg
nop
aam
fsubr
test
dec
dec
mov
jmp
adc
xchg
dec
sub
mov
dec
pop
retf
and
js
mov
mov
xchg
sbb
mov
leave
cmp
les
xchg
jo
stos
out
and
cmp
lods
fmul
xor
nop
mov
enter
dec
cmp
push
jo
in
xchg
sbb
push
or
xchg
lds
daa
cmp
mov
out
cmp
mov
xchg
jbe
cwde
xchg
nop
and
mov
dec
cmps
dec
lods
hlt
pop
mov
shl
dec
push
je
mov
pop
js
leave
gs
ficomp
call
pop
fbstp
xor
in
pop
cmp
nop
pop
(bad)
adc
adc
pop
dec
jmp
fwait
not
fs
loopne
frstor
ds
add
pop
xor
in
outs
leave
out
jo
xchg
jl
pushf
test
js
xchg
dec
movs
jl
je
and
test
sbb
and
shl
loopne
push
and
cmovne
(bad)
push
xchg
hlt
sti
loopne
cmp
lods
pusha
cmp
out
mov
mov
add
mov
test
stc
push
repnz
ins
into
je
bound
xor
movs
pop
repnz
fadd
cmp
scas
leave
and
and
cdq
mov
retf
stc
push
inc
aaa
adc
les
and
dec
push
aam
add
leave
loop
je
jns
test
mov
push
cmp
enter
(bad)
sbb
xchg
dec
mov
push
lds
pushf
pop
addr16
lock
or
test
repnz
xlat
scas
sbb
aad
mov
mov
(bad)
push
sub
enter
ins
fsubr
inc
xor
pusha
pop
mov
dec
mov
div
inc
fbld
frstor
cmp
sbb
into
xor
bnd
shr
cmp
sti
dec
jl
xchg
popa
xchg
sub
or
xor
mov
xor
xor
pop
xchg
cwde
popa
aaa
inc
lods
dec
pop
add
bound
sar
jb
jge
ins
sub
mov
pop
dec
mov
inc
clc
arpl
xor
jb
mov
pop
lock
cmp
cmp
adc
pop
xchg
enter
clc
test
enter
enter
enter
jb
or
lods
fild
ins
pop
add
and
and
or
and
and
adc
and
and
sbb
and
and
and
and
and
sub
and
and
xor
and
cmp
xchg
jbe
fisubr
(bad)
mov
pop
in
in
add
in
in
or
in
in
adc
in
in
sbb
in
in
and
in
in
sub
in
in
xor
in
in
cmp
in
in
inc
dec
in
in
dec
push
in
in
pop
push
in
in
pop
pusha
in
in
fs
ins
jo
and
and
mov
xor
jns
out
fidivr
xor
cmps
cmps
sub
jmp
neg
out
mov
rcl
sub
ja
xor
or
inc
and
or
mov
sbb
outs
mov
push
adc
mov
and
push
mov
jo
push
call
adc
cwde
adc
adc
inc
push
jb
inc
inc
push
inc
pusha
in
and
cmp
inc
add
mov
ja
(bad)
ins
xlat
stc
enter
out
shl
adc
stc
sub
daa
call
sbb
leave
add
push
inc
push
enter
jmp
and
in
lock
sub
and
jb
jo
(bad)
xlat
je
shr
cmp
inc
sahf
ins
adc
enter
inc
rcr
hlt
clc
push
in
push
dec
cmp
inc
dec
or
and
inc
shl
add
add
cwde
mov
imul
or
sbb
sbb
rcl
adc
fstp
lock
daa
jo
cmp
aam
sbb
and
pop
dec
add
inc
dec
dec
mov
vmwrite
retf
dec
adc
dec
rcl
sbb
fcomp
sbb
sbb
sbb
pusha
fs
ins
jo
and
inc
in
dec
push
ficomp
aam
popf
xchg
ret
adc
fiadd
adc
or
mov
das
pop
add
sbb
mov
call
sub
(bad)
pop
cmc
fild
out
fcom
or
mov
js
mov
xchg
sub
xchg
jo
push
enter
pusha
dec
bound
push
in
inc
add
or
ficom
xchg
jo
push
in
je
lahf
xor
inc
aas
push
mov
jle
loopne
mov
clc
repnz
xor
lock
ins
data16
jmp
mov
adc
gs
sahf
sub
les
mov
not
xchg
xchg
imul
call
jmp
jmp
or
or
clc
push
dec
add
mov
and
movs
call
add
inc
ret
or
xchg
int3
adc
aam
xor
inc
jae
in
push
adc
dec
dec
pop
stos
mov
jno
add
pop
xor
or
sbb
sahf
in
fldcw
fsubr
push
sub
rol
pop
iret
repz
pop
push
sbb
out
addr16
ror
push
sbb
out
sahf
out
jae
mov
int3
in
scas
pop
push
sub
jns
out
outs
test
ins
sahf
loop
push
or
push
cmp
repz
jb
xchg
movs
repz
repz
fsubr
cli
out
sahf
addr16
adc
ds
push
out
sahf
adc
iret
out
lock
adc
iret
repz
popa
ins
xchg
lods
mov
call
jns
add
outs
jns
out
jns
movs
ror
cmp
out
icebp
and
cmp
ds
outs
mov
cmp
ret
iret
fucomi
jns
addr16
and
pop
xor
jns
out
pop
imul
pushf
lods
enter
adc
iret
repz
dec
push
jo
fnstcw
repz
rcr
and
out
dec
arpl
sahf
out
sahf
xchg
lahf
mov
loope
cmp
rep
es
repz
repz
mov
shl
jns
iret
call
es
out
sahf
xor
jns
out
test
cmp
out
stc
sub
sbb
repz
inc
bound
repz
xlat
repnz
sub
jns
out
xor
jo
mov
sahf
out
mov
call
cmp
or
xor
pop
cmp
repz
mov
iret
repz
cld
sub
out
mov
adc
push
(bad)
cmp
jo
mov
lock
jns
out
push
push
push
push
push
out
sahf
out
push
pop
pop
pop
lahf
out
sahf
pop
pop
pop
pop
pop
sbb
jns
out
push
inc
pusha
and
loopne
add
sbb
sbb
repz
sbb
sbb
repz
repz
sbb
sbb
sbb
sbb
jns
out
sbb
sbb
out
xchg
inc
movs
aaa
add
add
(bad)
ss
int
ja
and
sbb
arpl
add
outs
jbe
jg
jmp
imul
gs
imul
push
jne
jo
jb
gs
pop
sti
mov
xor
gs
es
push
imul
ins
gs
sbb
dec
xchg
or
(bad)
jmp
ja
daa
sbb
aaa
sbb
in
cmp
ins
mov
push
cmp
fnstenv
push
xor
pop
mov
inc
rcl
iret
jnp
mov
push
cli
movs
je
lods
aaa
cmp
xor
add
add
fs
inc
sub
cld
mov
add
add
cmp
xor
jae
jne
das
inc
add
add
and
popa
adc
stc
(bad)
lods
dec
dec
dec
add
add
ins
add
dec
sbb
adc
imul
dec
shl
lahf
icebp
cs
push
dec
fs
dec
lahf
in
or
xor
xor
bound
movs
pushf
je
loopne
adc
pop
out
cs
popa
mov
pop
in
bound
push
stos
(bad)
cli
add
ds
ins
shl
jnp
fisubr
inc
inc
sbb
jb
jo
cwde
jbe
sahf
imul
into
rcr
push
inc
adc
mov
mov
inc
jo
push
jbe
mov
fmul
dec
jns
bound
mov
fstp
imul
ss
inc
sub
jae
mov
scas
push
arpl
pop
mov
bound
inc
mov
mov
jg
dec
popa
pop
pusha
rcr
fild
sti
lock
mov
push
push
imul
mov
add
sub
ins
sahf
out
push
pop
add
fstp
int
push
jp
mov
fnstcw
out
iret
dec
cdq
jmp
(bad)
loopne
and
sahf
ror
mov
push
cmp
neg
movs
out
push
cmc
push
aam
jno
std
inc
int
cli
ss
xor
xchg
(bad)
(bad)
xchg
loopne
xchg
cmp
adc
fwait
jno
popf
jge
mov
jmp
push
xor
or
or
cld
sub
pop
adc
outs
xchg
cld
mov
jg
fwait
enter
cs
test
test
out
push
cmp
fiadd
push
pop
or
xchg
mov
push
xchg
push
in
sbb
scas
retf
loope
retf
int
mov
leave
pop
push
or
push
or
pop
fbld
ins
mov
push
fsubr
out
int
push
fwait
out
sahf
jb
pushf
shl
or
repz
push
jp
(bad)
jns
addr16
xlat
add
cmp
jns
out
mov
repz
add
push
pop
fwait
int
and
add
fnstenv
and
add
retf
jo
mov
out
pop
in
lahf
inc
shl
push
fcom
push
or
mov
add
sbb
pop
push
sysret
xchg
sbb
push
sahf
adc
jmp
push
sub
outs
jb
imul
jne
push
clc
imul
sub
jno
pop
dec
xor
mov
call
(bad)
dec
dec
outs
imul
or
jb
ins
(bad)
mov
inc
js
das
dec
gs
outs
jb
popa
pop
lock
push
jae
aas
push
ins
outs
jae
aam
mov
jne
dec
popa
cli
ins
das
inc
pop
aas
adc
fiadd
icebp
aam
push
sti
aaa
adc
wbinvd
aas
adc
pushf
adc
out
inc
lahf
js
jne
ins
pop
rcr
je
idiv
ins
ins
dec
gs
jo
outs
push
or
(bad)
cs
xlat
ss
mov
mov
test
mov
jo
ins
sahf
neg
sbb
xor
sahf
idiv
push
and
push
(bad)
jo
jns
jg
add
std
ja
(bad)
sbb
fnstcw
pop
(bad)
sbb
sahf
out
fwait
in
or
and
mov
repnz
out
add
jmp
push
xor
dec
push
repnz
enter
int3
adc
add
sbb
imul
test
mov
sti
aaa
add
gs
sti
mov
push
or
outs
cmp
pop
xchg
jae
pop
ins
cmp
sbb
jp
jae
jo
fisubr
jl
jbe
ins
jp
outs
push
ins
(bad)
fs
out
or
cmp
ja
(bad)
fstp
adc
cmp
push
sahf
jns
das
and
enter
add
xor
pop
add
repnz
hlt
or
or
jae
retf
test
push
mov
mov
cs
mov
das
mov
add
pop
cmp
sbb
das
sub
(bad)
or
nop
adc
add
jbe
das
inc
jle
fadd
adc
sti
add
gs
sti
retf
adc
das
mov
pop
sbb
lock
daa
jg
sbb
sbb
(bad)
cmp
pop
cmps
outs
add
imul
cmp
in
punpckhwd
scas
sti
sti
cmp
add
popf
inc
add
int3
add
add
add
adc
out
aam
lahf
pop
jo
aas
es
into
or
or
ja
push
add
ins
add
pop
xchg
pop
(bad)
outs
add
jle
adc
addr16
out
mov
mov
cmc
and
arpl
inc
dec
bound
arpl
xor
jns
out
sub
and
add
sub
into
add
aas
sbb
dec
popa
jo
outs
jb
push
outs
cwde
imul
xlat
aaa
sbb
aam
sub
push
fwait
out
mov
push
sub
das
inc
xor
xor
lahf
ins
adc
rcr
aad
and
addr16
cmp
pop
bound
outs
cmps
mov
add
ds
out
jb
popa
jns
sub
dec
xor
xor
sbb
jg
(bad)
pop
adc
ja
inc
fwait
int
and
sar
ja
aaa
(bad)
mov
jns
gs
dec
jo
push
ficom
cli
out
inc
add
addr16
push
popa
fdiv
mov
dec
pop
inc
jo
lahf
or
mov
inc
mov
jb
jae
inc
stc
outs
lds
imul
inc
outs
call
fistp
inc
inc
ins
imul
dec
inc
push
jae
jb
push
gs
jne
push
adc
pop
in
inc
jp
mov
(bad)
adc
cmp
int3
adc
adc
aaa
shl
or
push
mov
and
sub
nop
mov
mov
shl
adc
in
adc
sub
adc
mov
push
dec
ja
inc
cmp
push
xor
call
hlt
push
ret
push
inc
mov
jl
add
mov
cmp
div
icebp
push
inc
cmp
imul
push
and
push
mov
xor
mov
xchg
sub
mov
mov
dec
cmp
clc
imul
jg
sub
pop
dec
ins
fs
or
popa
jb
div
lea
ds
and
jnp
pop
inc
outs
xor
dec
jp
add
scas
mov
fs
jl
cwde
cmc
xlat
jle
mov
sldt
pop
popa
hlt
and
dec
pop
fsubr
mov
mov
push
pop
and
pop
sub
jo
sbb
dec
retf
je
ss
push
jae
push
xchg
jbe
mov
addr16
mov
fild
scas
arpl
ins
in
mov
add
pop
cmp
ja
fnstsw
adc
pop
inc
das
jbe
xor
cmp
pop
adc
cmp
cmp
outs
outs
add
jb
inc
dec
repz
dec
ja
mov
aaa
es
scas
fs
push
aad
lea
inc
ss
test
adc
mov
push
loop
repnz
inc
ja
pop
pop
sahf
jo
out
out
push
mov
sahf
dec
push
call
pop
jbe
push
xlat
sub
fmul
bound
xlat
cmp
test
sub
mov
jbe
add
push
xchg
inc
sbb
repz
loopne
and
inc
inc
jae
adc
mov
imul
imul
dec
nop
sbb
das
push
dec
popa
mov
jmp
inc
sub
add
hlt
push
jne
stos
xchg
inc
movs
dec
out
mov
jne
fucomi
test
data16
imul
jbe
jns
mov
ins
ins
bound
imul
and
cmp
push
mov
dec
sti
stos
stos
mov
fbld
shr
gs
dec
outs
push
jb
addr16
shr
fdiv
dec
jmp
es
fs
or
jb
push
dec
dec
popa
outs
addr16
daa
fsub
test
out
adc
pop
or
in
(bad)
ins
adc
or
outs
and
or
xchg
xor
data16
pop
mov
push
nop
push
(bad)
(bad)
es
jnp
popa
or
(bad)
and
fwait
int
ins
jo
mov
dec
jb
cmp
in
scas
ds
(bad)
movs
push
jne
pop
arpl
imul
add
(bad)
push
jnp
inc
push
inc
inc
add
jns
out
mov
iret
idiv
outs
sub
loope
sub
jb
out
in
ins
pop
cmp
arpl
adc
fisub
ja
lds
jns
dec
push
outs
or
add
cmps
cmp
pop
and
xor
pop
ins
cmp
and
push
jecxz
push
test
sub
jae
adc
pop
push
cmps
adc
out
push
stos
pop
out
out
xchg
int
push
adc
fwait
ins
repz
cmp
adc
push
jg
test
sahf
in
sbb
jge
push
jle
pop
ss
fst
jmp
call
pop
jle
in
push
or
and
hlt
push
clc
mov
leave
cmp
out
imul
mov
(bad)
iret
jle
nop
push
pop
mov
mov
call
aam
pop
sub
add
imul
enter
mov
shl
adc
popa
unpckhps
and
popa
leave
inc
and
cdq
xor
push
sahf
les
js
stos
pushf
cs
sbb
mov
push
mov
sub
add
cmp
das
test
pop
das
in
das
and
inc
outs
cs
push
seto
cwde
sub
add
comiss
jnp
fist
test
xchg
sub
pusha
mov
fdivrp
mov
ins
ror
rcr
push
arpl
xchg
dec
cli
jbe
cmp
enter
add
pop
nop/reserved
jmp
add
dec
fist
outs
and
jecxz
fadd
icebp
push
xor
xor
ja
mov
pop
push
push
movs
xor
sbb
rol
mov
add
orps
push
mov
out
push
ss
int3
ret
push
cmp
jnp
push
inc
inc
and
pop
push
jp
test
sahf
int
int3
out
push
es
sahf
out
je
mov
into
cmc
cmp
out
mov
aas
sbb
add
mov
out
rcl
xchg
jmp
ss
add
push
add
div
out
ins
(bad)
scas
xbegin
repz
stc
pop
mov
neg
repz
cli
push
rol
sti
pop
fldcw
push
psadbw
lahf
cmp
int
mov
push
or
or
xor
xchg
mov
les
mov
dec
xor
pop
or
cld
lahf
test
sar
cmps
stos
fcmovne
adc
push
popa
xor
inc
dec
(bad)
ds
movs
popa
mov
movs
cmp
mov
push
add
rcl
and
adc
or
push
mov
(bad)
into
ins
out
or
sbb
cmp
mov
hlt
cmp
or
pop
jle
pop
lods
ss
jns
data16
test
push
repnz
jge
pusha
mov
cmp
or
daa
pop
sub
das
pop
fisubr
jb
pop
cdq
cwde
add
dec
add
and
inc
mov
ret
pusha
call
push
out
push
ss
or
jo
outs
arpl
popf
test
inc
test
mov
sbb
sbb
jle
xchg
inc
outs
jo
sub
inc
dec
sti
sahf
mov
sbb
dec
outs
mov
or
inc
stos
push
push
add
cmp
aaa
push
pop
fucomp
out
sbb
push
add
aaa
dec
push
push
daa
push
or
jae
push
pop
push
lock
out
cmp
sbb
adc
mov
pop
div
jb
dec
jns
das
jns
or
push
jae
mov
push
int3
adc
pushf
inc
mov
ss
sub
xor
scas
popa
push
shr
dec
push
pop
test
jle
push
cs
and
or
(bad)
mov
outs
jae
add
retf
data16
iret
rcr
mov
ins
mov
push
adc
inc
or
in
in
cmp
call
(bad)
sbb
push
pusha
mov
outs
or
add
movs
fistp
leave
sar
cld
mov
push
jmp
ror
mov
(bad)
fadd
into
aam
ins
inc
sahf
sbb
and
in
mov
push
or
sbb
push
sub
(bad)
enter
clc
pop
fsub
push
or
inc
mov
add
mov
dec
push
das
js
cwde
push
push
cs
arpl
dec
pop
ins
inc
popa
jb
imul
ins
bound
outs
js
push
sbb
out
jne
out
inc
xchg
mov
push
je
arpl
cwde
je
nop
mov
ss
test
or
test
aaa
aas
or
push
dec
dec
fistp
add
loope
aas
rcr
adc
jbe
jns
ins
scas
ja
inc
test
jb
adc
xchg
loop
retf
push
push
(bad)
cmp
out
inc
pop
inc
add
adc
call
inc
daa
pop
adc
lock
inc
push
dec
and
inc
(bad)
stc
bound
rcl
add
dec
xchg
pushf
sub
jl
sub
outs
bound
jmp
neg
hlt
pop
aas
rcr
sbb
push
scas
jmp
mov
inc
push
or
sbb
stc
test
sub
dec
outs
xchg
shl
push
out
fistp
pop
add
jbe
dec
xor
jns
mov
sbb
daa
ja
sub
ficom
outs
jne
xor
push
push
mov
push
pop
cmp
inc
add
sub
mov
jmp
jmp
outs
enter
add
sub
outs
cmps
inc
push
into
ret
cmps
mov
(bad)
ss
push
mov
outs
jle
popa
xchg
jle
push
imul
call
outs
jbe
pop
add
pop
mov
xlat
or
loopne
popw
inc
js
jo
rol
inc
xor
(bad)
push
sbb
or
je
pop
and
jg
stos
and
ficomp
f2xm1
pop
call
jae
fwait
sub
jns
mov
mov
push
push
imul
(bad)
adc
ret
repz
inc
mov
sbb
add
pop
and
mov
add
fwait
int
out
jl
cmp
cdq
add
unpckhps
cmp
cmp
push
sub
or
inc
sahf
test
jnp
scas
jns
pop
sub
data16
mov
adc
pop
int
push
mov
pop
mov
jb
fstp
pop
adc
loop
jmp
pop
or
scas
nop
adc
adc
je
imul
push
and
data16
xor
sbb
jno
sbb
and
pop
jb
jmp
xor
loopne
ss
pop
xchg
inc
mov
jne
inc
and
jo
ret
sub
sbb
fld
mov
daa
pop
pop
jmp
inc
push
push
push
and
ja
cmp
inc
dec
inc
call
arpl
push
inc
es
pop
ins
mov
sbb
mov
ret
nop
cmp
and
sub
jbe
xor
enter
and
or
and
lods
or
or
loope
cld
outs
lock
adc
sti
pop
push
pop
cmps
fist
(bad)
jo
xor
xchg
push
cmps
wbinvd
ss
xchg
cmp
and
xor
or
ins
loop
push
pop
jno
sbb
or
and
iret
les
adc
mov
adc
dec
inc
adc
(bad)
mov
sbb
mov
add
repz
dec
adc
ret
stos
mov
pushfw
xchg
ins
(bad)
aaa
and
pop
jae
jle
push
inc
gs
jb
jns
outs
popa
fs
adc
lock
inc
jmp
push
and
repz
push
ss
mov
add
sbb
mov
push
inc
daa
iret
rcr
xchg
(bad)
or
div
nop
and
sahf
mov
test
fdivr
and
pop
inc
outs
inc
inc
push
jb
(bad)
rcl
cmp
jle
add
add
jmp
cs
cmp
fmul
fdivp
mov
outs
push
add
ffreep
out
repz
mov
cmp
das
inc
sbb
pop
js
(bad)
adc
jge
inc
push
imul
pop
push
ins
mov
cld
nop
or
add
push
adc
and
nop
add
mov
ss
dec
loopne
dec
xor
jns
xchg
(bad)
pusha
pop
push
and
jl
sub
mov
pop
xor
daa
inc
and
ret
fprem1
ds
jle
sbb
or
or
or
mov
inc
mov
out
pop
rcr
dec
add
ins
push
es
lea
jg
pop
adc
push
shl
imul
loop
cmp
push
pop
sbb
ss
idiv
jbe
call
lock
ins
pop
pushf
dec
fdiv
jbe
mov
inc
mov
push
jno
mov
pop
data16
js
pop
and
clc
sbb
fbld
ds
pop
pop
repnz
das
and
pop
xor
mov
and
pop
popf
jne
inc
mov
lock
inc
ds
jbe
ja
add
in
pop
sbb
mov
in
cs
ret
adc
in
fucomip
sub
movs
xchg
imul
cmp
adc
dec
fstp
add
jle
or
pop
xor
push
lods
stc
ja
jl
ins
adc
das
push
stos
xor
mov
push
push
aas
in
xchg
pop
or
pop
push
xor
pop
and
add
jmp
mov
and
lods
inc
bound
das
mov
add
push
pop
inc
les
mov
inc
aas
sbb
ss
pop
mov
das
cmp
pop
not
or
add
pop
jnp
jns
add
das
pop
pop
jns
push
push
out
pop
or
dec
sahf
popa
das
add
add
push
push
inc
loope
les
dec
inc
out
push
jns
xchg
std
cs
ins
clc
xchg
outs
sahf
loopne
enter
push
xchg
call
js
test
dec
fsubr
xor
ret
push
inc
data16
push
call
jl
sub
popa
outs
lods
fs
scas
outs
arpl
cmps
ins
rcr
cmp
jne
adc
push
outs
or
xchg
mov
ins
fidivr
cmp
mov
mov
js
popa
mov
out
xchg
and
jge
stc
stos
(bad)
mov
or
dec
sbb
add
xchg
push
lock
inc
rcr
arpl
jbe
inc
sahf
test
cwde
lods
adc
ret
outs
cdq
cs
or
fwait
scas
(bad)
mov
sbb
mov
fwait
and
mov
int3
fs
in
scas
push
int
imul
dec
cmp
imul
push
mov
test
dec
xchg
mov
ret
push
aam
and
jno
scas
cmp
add
jmp
sub
add
(bad)
push
rcr
ss
mov
lods
test
mov
ins
fisttp
les
pop
mov
lods
outs
in
dec
inc
dec
outs
outs
ja
inc
outs
ins
fs
dec
ja
push
popa
je
pop
mov
mov
mov
arpl
imul
push
ficomp
dec
mov
mov
xor
fimul
aaa
addr16
jg
add
ret
mov
mov
fcomp
dec
push
test
call
jns
push
daa
das
fild
or
clts
daa
inc
cld
lea
pavgb
and
cmp
call
in
fadd
fadd
loop
push
jecxz
in
cmp
ror
fld
jp
fdivp
cmp
mov
fisubr
outs
dec
sti
out
sti
push
data16
or
adc
rcr
in
repz
push
lods
dec
mov
(bad)
mov
mov
retf
push
fcomp
sub
or
mov
push
push
outs
cli
ds
dec
adc
movs
xchg
js
sub
lods
inc
fist
daa
das
das
into
adc
mov
retf
and
mov
js
clc
rcr
jno
mov
aam
loopne
push
cld
jmp
test
rcl
xchg
call
cmp
les
pushf
pop
cmp
mov
cmp
repz
add
or
icebp
cmp
ss
xchg
push
sbb
into
scas
and
bound
sub
push
sub
xchg
adc
inc
imul
fwait
pop
and
jmp
cmp
sbb
push
test
lods
in
ja
push
pop
mov
mov
cld
sbb
inc
faddp
call
cmp
ja
push
push
xor
and
imul
push
ds
push
in
cmp
(bad)
je
push
pop
inc
jecxz
fimul
ds
or
jmp
lahf
cs
fist
or
push
add
in
ins
mov
push
ins
mov
push
ss
cmp
push
push
sahf
loop
dec
xchg
daa
jns
in
(bad)
push
and
pushf
and
mov
or
xor
fadd
jg
aas
iret
jnp
dec
pop
push
inc
dec
outs
nop
push
push
test
aaa
dec
pop
addr16
nop
es
adc
fucomip
push
mov
arpl
(bad)
push
mov
dec
adc
push
sahf
pop
in
push
adc
iret
adc
les
cmp
es
xor
jnp
inc
les
(bad)
push
pop
add
add
cld
mov
push
sub
and
lahf
test
popa
fst
mov
nop
sub
jo
pop
and
push
ret
outs
or
sahf
dec
cmp
push
push
sub
push
fisub
loope
je
(bad)
les
mov
push
into
xchg
cmps
push
mov
aam
dec
push
mov
xlat
and
jmp
pop
inc
push
jns
arpl
(bad)
jb
loope
ret
mov
cmp
and
push
into
pop
fcomp
lock
mov
and
cli
mov
push
outs
pop
xchg
pop
jns
dec
inc
ins
ins
lock
gs
pusha
int3
popa
stc
cs
mov
cs
push
pop
inc
sbb
xchg
sbb
pop
dec
jae
lods
clc
aam
aaa
inc
push
dec
jo
outs
adc
out
test
int
and
sbb
inc
or
outs
jne
loopne
fimul
imul
loopne
cmp
loop
mov
stos
jo
add
out
mov
add
pop
loopne
push
adc
ins
push
mov
movs
push
rcr
dec
(bad)
lds
das
jae
movs
test
outs
in
xchg
cmp
sahf
pusha
mov
into
test
lods
mov
clc
mov
ficomp
add
(bad)
lahf
sub
cmp
inc
imul
cli
test
push
outs
gs
inc
cmps
sbb
jbe
test
jle
retf
mov
jo
add
vmwrite
jb
inc
xchg
push
mov
add
scas
jns
nop
scas
or
mov
push
inc
stc
addr16
or
push
and
push
add
arpl
mov
dec
add
dec
push
rcl
or
out
jns
mov
push
cli
in
shl
cld
and
in
in
or
or
jae
push
add
add
dec
test
loopne
mov
sbb
push
leave
push
jmp
adc
adc
dec
repnz
pop
ror
mov
(bad)
ficom
mov
daa
and
in
loopne
xchg
mov
sub
shl
ss
fcomi
cs
rcr
push
stc
ds
sbb
in
pop
imul
(bad)
lahf
or
fwait
in
sbb
inc
lahf
es
(bad)
lock
imul
add
fwait
jbe
lods
dec
aad
into
or
fild
out
clc
or
stc
es
or
xchg
add
daa
fsubrp
ds
call
push
outs
in
lock
iret
jnp
sbb
mov
mov
and
mov
das
jle
sub
js
pop
fwait
int
loopne
cmp
sbb
push
test
in
fldcw
cmp
jb
push
and
mov
ins
or
pop
es
cs
fcomp
dec
iret
or
xchg
in
adc
scas
mov
pop
adc
ss
mov
cmps
adc
cmp
cmp
push
std
push
xchg
inc
fldcw
pop
xor
iret
je
(bad)
les
fwait
int
outs
or
rcr
fucom
mov
int
push
push
test
jo
outs
sbb
mov
mov
movs
int
dec
ja
ret
inc
jl
fidivr
data16
aaa
ja
jle
data16
fsub
pop
xlat
inc
test
ror
imul
mov
les
not
jo
adc
(bad)
push
xchg
into
push
sbb
shl
sahf
pop
adc
(bad)
stc
mov
pop
dec
repz
les
fld
inc
(bad)
and
jg
push
mov
and
xchg
or
nop
das
in
add
cmps
mov
ret
dec
fwait
loopne
das
test
mov
cmp
adc
lods
in
or
loop
jne
add
cwde
loopne
mov
das
ror
(bad)
xor
sti
pop
pop
cwde
cmc
add
popf
mov
shr
add
stc
jb
jl
lods
sub
add
add
str
nop
or
and
jmp
(bad)
imul
scas
and
mov
mov
test
and
xchg
and
inc
pop
cmp
shl
adc
jbe
adc
cdq
in
test
and
and
rcr
adc
ja
adc
aam
and
lods
sbb
and
(bad)
psubd
push
push
ds
stos
mov
iret
in
enter
mov
add
data16
or
add
sbb
leave
pop
scas
dec
dec
dec
sti
jne
inc
(bad)
cmp
std
push
das
adc
fwait
push
dec
inc
fstp
ud2
add
sub
(bad)
mov
movs
mov
cmps
push
push
scas
(bad)
mov
inc
or
inc
fcom
inc
jo
dec
inc
and
push
push
bound
aas
out
jle
aad
(bad)
push
xchg
mov
sub
add
xchg
and
mov
scas
push
push
push
inc
inc
dec
das
pop
cmps
mul
sbb
dec
cmps
pop
ret
fbstp
push
mov
dec
pop
das
dec
ret
mov
jnp
inc
push
adc
daa
jg
sub
outs
jo
mov
jg
pop
jo
hlt
push
sub
push
cmps
or
or
adc
pop
sub
xchg
clc
push
push
neg
dec
mov
inc
sbb
mov
stos
pop
jp
jg
mov
outs
pop
or
movs
les
cld
xchg
add
sbb
dec
inc
jb
or
dec
adc
in
mov
cs
in
xor
sub
scas
or
xor
mov
push
aas
mov
test
aas
repnz
sbb
pop
mov
and
aas
push
mov
push
es
adc
push
pop
ja
stos
int
and
dec
fidiv
or
add
jb
dec
lock
scas
inc
or
test
xor
dec
or
ja
nop
xor
push
pop
xor
cs
iret
or
adc
rdpmc
fwait
int
repz
daa
fisubr
dec
not
sub
xlat
pop
or
dec
inc
push
out
pusha
cli
inc
mov
pop
inc
inc
daa
mov
arpl
mov
ins
cmps
or
daa
mov
test
fwait
inc
js
jp
add
push
or
adc
out
and
and
cmp
repz
lods
sub
scas
or
aam
imul
push
jae
or
and
jmp
aad
ja
xchg
setle
repnz
or
push
push
and
das
dec
push
or
or
or
or
fist
lahf
push
ja
nop
push
ret
sahf
int
mov
loop
dec
cmps
and
or
jne
ja
lea
add
ins
mov
add
add
and
lock
sti
pop
xchg
mov
out
imul
rol
shl
mov
xchg
ret
inc
jg
inc
cmp
test
outs
add
outs
mov
das
adc
nop
adc
add
pop
inc
cli
sub
test
stos
dec
(bad)
cs
rol
jb
out
dec
add
test
push
mov
push
jae
xor
add
push
pop
sbb
fwait
aaa
aad
vmovddup
pop
xchg
push
aaa
mov
(bad)
push
fucomi
mov
mov
dec
ror
inc
outs
arpl
inc
pop
xchg
inc
push
inc
daa
mov
and
in
add
or
das
stos
xor
data16
ja
sar
stc
pop
dec
push
or
add
jmp
sti
cli
add
adc
in
or
mov
xchg
daa
or
xlat
ja
ins
repz
je
cmp
mov
push
push
clc
xlat
in
fstp
jle
cmp
pop
sti
pop
push
cwde
xor
adc
push
mov
jge
or
lods
pop
xchg
xchg
(bad)
cs
movzx
xor
pop
call
xchg
cwde
lods
dec
xchg
sahf
addr16
mov
iret
and
in
mov
in
xchg
sbb
dec
loop
mov
out
psubusb
enter
jnp
das
fwait
aas
int3
js
dec
mov
jo
inc
push
gs
mov
nop
mov
inc
mov
dec
xchg
retf
push
adc
cwde
movs
push
cmps
lea
and
dec
mov
(bad)
mov
loopne
das
xor
outs
div
(bad)
fild
inc
adc
xor
xchg
push
ds
imul
rcr
mov
lahf
jae
inc
scas
loopne
xchg
mov
mov
das
or
sbb
xchg
sub
pop
aas
push
das
or
add
push
inc
jp
dec
out
cs
mov
fild
imul
sub
push
xor
adc
cmps
addr16
dec
push
add
push
inc
aaa
pop
cmp
cli
aas
jns
in
jbe
pop
(bad)
xor
xor
enter
mov
sbb
sub
rol
shl
push
jae
scas
sub
push
fwait
into
mov
dec
xor
inc
rol
dec
pop
push
fcomp
aas
aad
dec
adc
mov
sbb
inc
cmps
gs
xchg
jg
inc
cmp
jle
lock
cmp
int
shr
xchg
ins
lds
iret
shl
pusha
push
dec
cmp
enter
(bad)
ret
adc
shl
test
clc
sub
ret
mov
xchg
push
inc
daa
add
cmovle
in
and
les
push
mov
inc
in
jns
repz
push
dec
sbb
sub
jecxz
fs
das
ret
rcl
pop
test
stos
stos
xchg
inc
push
pop
or
scas
lds
adc
sub
imul
out
push
push
adc
pop
pop
xor
fisttp
mov
mov
daa
jl
or
fnstenv
aas
push
mov
mov
pop
shrd
neg
pop
aaa
aas
outs
icebp
xor
outs
aaa
adc
mov
sbb
pop
enter
push
cmps
fmul
lods
icebp
xchg
add
dec
pushf
inc
add
adc
nop
xchg
(bad)
out
xor
int
mov
aad
aam
inc
(bad)
(bad)
(bad)
(bad)
mov
xor
pusha
and
mov
dec
scas
movs
scas
fs
sar
out
push
jne
xor
pushf
mov
xor
mov
test
movs
adc
popf
es
pop
sub
push
popa
jbe
(bad)
pop
and
sahf
out
cmove
fnstcw
mov
mov
mov
fnstcw
jnp
mov
inc
jnp
mov
out
mov
pop
cmps
mov
push
enter
mov
pop
or
xchg
out
vfpclasspd
pop
into
(bad)
(bad)
mov
push
clc
inc
jle
pushf
inc
test
in
pop
adc
push
ins
add
std
call
out
inc
mov
ret
jnp
inc
dec
mov
inc
imul
pop
pop
test
add
add
ins
mov
outs
ja
pop
les
ins
add
and
add
add
adc
cs
pop
mov
movs
jnp
out
aad
push
movs
push
into
ror
push
pop
push
bound
mov
pusha
sub
mul
out
or
outs
outs
or
(bad)
repz
cmp
push
sub
(bad)
lar
stc
push
mul
test
inc
push
icebp
sbb
(bad)
sbb
addr16
inc
jo
call
add
xchg
into
jmp
outs
add
adc
dec
add
arpl
sub
mov
pop
pop
dec
or
bound
mov
pop
adc
sub
inc
shr
(bad)
pop
pop
mov
pop
ficomp
fs
sub
dec
fdiv
(bad)
mov
mov
scas
out
cwde
outs
in
add
dec
pusha
aam
fs
sub
add
cmc
push
pop
icebp
push
sbb
lock
es
mov
hlt
test
das
sar
pop
inc
les
repz
jg
xor
push
(bad)
push
mov
loopne
pop
jmp
sbb
das
push
xor
and
push
and
push
mov
test
in
add
xchg
and
sub
push
mov
pusha
(bad)
lock
add
mov
ret
add
daa
leave
out
fbstp
movs
add
mov
fidivr
popa
adc
push
push
jmp
(bad)
jmp
outs
sahf
push
add
test
scas
repnz
adc
add
and
adc
add
add
or
jp
sub
push
inc
jle
das
repnz
push
scas
or
sub
or
leave
inc
adc
aad
ins
jle
out
pop
imul
mov
or
or
xchg
pop
push
(bad)
cmp
or
push
and
popa
push
xchg
ins
mov
ins
adc
push
das
or
pop
shl
ss
std
outs
inc
mov
inc
push
aas
loopne
psubb
mov
sbb
add
xchg
fcmovne
in
in
cmp
cmovs
xchg
fldcw
shr
xor
or
mov
stc
sbb
add
pcmpeqb
pop
outs
dec
push
out
push
add
aas
jle
jnp
scas
inc
loope
test
jg
mov
in
xor
or
dec
and
mov
push
arpl
enter
mov
inc
js
or
sub
inc
and
rcr
mov
aam
aam
xchg
mov
or
dec
scas
aam
cmp
test
ins
into
and
push
mov
(bad)
mov
jecxz
inc
inc
ins
loopne
ja
jno
and
inc
add
adc
xor
daa
pop
(bad)
fcmovu
push
dec
pop
xor
jno
jge
push
cmp
cmps
sub
mov
inc
add
or
jnp
les
push
scas
mov
es
fwait
mov
inc
daa
inc
dec
push
iret
xor
pop
pop
push
push
pop
xor
xchg
inc
ss
xchg
lods
cmp
lahf
or
mov
mov
ins
jb
mov
xchg
data16
int
fstp
xchg
icebp
jns
xor
fldcw
neg
scas
xchg
dec
js
jnp
mov
push
out
popa
xchg
jle
xchg
inc
(bad)
jae
jbe
push
je
xlat
xchg
in
jns
movs
cs
jnp
add
mov
fadd
fisubr
jl
fdivp
mov
pop
xchg
repz
push
pop
pop
lahf
iret
data16
into
pushf
aas
sub
fwait
in
fldcw
pop
xchg
pop
retf
push
ja
jg
inc
fiadd
cmp
xlat
(bad)
movs
xchg
jmp
ds
xchg
push
js
ins
into
sahf
sbb
jns
jp
fldcw
xor
xchg
push
fiadd
scas
int
jnp
mov
add
repz
bound
or
ss
out
pop
and
in
add
ja
movs
inc
cmps
pushf
ja
adc
and
aad
inc
popf
or
(bad)
leave
add
out
sub
inc
xchg
(bad)
mov
mov
out
es
in
fstp
push
sub
data16
(bad)
sahf
data16
fwait
stos
fist
push
test
lahf
je
fstp
in
ret
mov
push
jnp
imul
mov
outs
mov
push
xchg
or
xchg
fnstcw
push
xchg
fimul
push
loop
jnp
cmp
mov
(bad)
mov
jle
lock
out
aad
xor
push
imul
jl
into
pop
mov
mov
cmp
jnp
push
pop
fdivrp
stos
add
lock
fimul
mov
jmp
mov
or
shl
call
inc
jne
nop
popa
add
mov
ret
inc
ins
outs
cmc
daa
ja
rcl
and
add
imul
inc
jb
jns
ins
loopne
mov
into
neg
inc
push
psubsb
outs
(bad)
neg
sbb
inc
lods
test
jb
addr16
add
inc
sub
aad
mul
push
and
(bad)
dec
das
pop
inc
lahf
push
stos
mov
rcl
inc
loop
test
std
out
or
or
push
push
into
push
ret
(bad)
in
jae
mul
or
pop
outs
fnstsw
loope
push
(bad)
es
push
add
dec
cs
daa
and
dec
cld
push
out
daa
push
into
mov
iret
in
lahf
or
mov
mov
xabort
jecxz
mov
fsub
push
dec
(bad)
sub
loop
into
push
dec
push
fdecstp
adc
dec
(bad)
loop
mov
sar
outs
pushf
mov
(bad)
adc
sub
test
or
outs
push
add
xor
call
in
push
sbb
inc
xor
adc
outs
push
pop
push
or
jg
inc
repnz
or
inc
repnz
jnp
push
repnz
or
mov
pop
dec
push
jg
and
sbb
push
pop
in
shr
das
or
and
pop
push
sbb
lods
mov
fcom
call
outs
pop
xchg
fs
mov
mov
out
xor
mov
push
sub
push
xchg
sbb
jp
lods
or
lahf
fs
scas
pop
inc
xor
mov
popa
das
pop
popf
aad
sbb
dec
or
push
scas
adc
sub
dec
int
cmps
push
je
imul
arpl
inc
das
mov
dec
or
xor
das
push
inc
inc
and
ret
dec
jecxz
pop
jae
pop
push
sub
pop
inc
lock
fcmovnbe
push
dec
sub
retf
jmp
or
mov
fld
xchg
pop
or
fadd
mov
fld
jge
pop
enter
cmp
mov
jle
vmwrite
jns
adc
stos
in
iret
and
aaa
arpl
cdq
in
jnp
jns
sahf
inc
es
lea
inc
xor
push
add
jmp
into
ss
lea
and
ins
cmps
adc
ret
shr
fnstenv
bound
(bad)
inc
inc
jo
adc
mov
pushf
ss
addr16
dec
or
pop
test
jnp
adc
push
ss
jmp
cmp
or
inc
push
scas
cmp
mov
or
ins
out
fnstcw
dec
inc
(bad)
push
ss
lock
dec
xchg
pop
ss
imul
add
test
inc
xor
js
xchg
add
mov
add
and
mov
inc
ror
mov
xchg
fadd
ucomiss
ss
mov
xchg
cmp
or
adc
repnz
je
add
aas
dec
and
and
or
outs
enter
or
ret
enter
adc
mov
es
leave
sbb
ins
pop
(bad)
popf
add
aaa
push
mov
mov
jne
xchg
add
xchg
push
mov
loop
popw
mov
(bad)
jbe
sbb
stos
sar
das
ds
test
enter
loope
jo
push
imul
(bad)
repnz
or
(bad)
mov
jno
pop
das
fimul
stos
pop
add
das
popa
sub
sub
dec
in
pop
das
push
add
dec
push
popa
(bad)
call
add
pop
inc
push
aad
cmp
mov
mov
ficom
call
movs
or
cld
jp
rol
cmp
das
or
clc
and
addr16
xchg
iret
and
xor
cmp
push
mov
js
aas
sub
jl
and
add
push
mov
push
mov
jg
push
add
add
rcl
cmp
pop
push
mov
ror
sahf
xchg
mov
inc
jecxz
shl
pop
push
sub
xor
cmp
pop
jbe
xor
ins
out
cmp
mov
mov
push
ds
sahf
push
inc
ja
retf
jle
push
add
imul
mov
pop
stos
inc
jp
push
push
gs
int3
cmc
iret
dec
push
push
popa
adc
dec
push
inc
inc
ins
jle
jbe
pop
out
jmp
rcl
adc
mov
push
mov
inc
fisub
jbe
mov
jle
jge
and
(bad)
pop
or
pop
or
sub
xchg
xchg
sbb
retf
leave
es
sub
in
test
cli
aas
jmp
lea
add
push
mov
scas
ds
rcr
das
iret
mov
mov
mov
movs
or
shld
push
add
outs
mov
and
xor
add
or
xor
das
(bad)
mov
mov
cs
add
cs
mov
cdq
sbb
pop
test
add
outs
cs
add
inc
out
xchg
cmp
jp
pop
push
push
adc
add
mov
dec
shl
xor
popa
int3
mov
int3
sbb
xchg
les
cmps
into
nop
xchg
(bad)
fistp
out
lods
cs
movs
movs
xchg
cmp
jle
cmps
xor
mov
inc
push
and
in
xor
mov
enter
outs
rcl
(bad)
or
in
out
mov
add
cmps
ins
fstp
lods
dec
adc
movs
cmp
jmp
mov
aaa
adc
es
xchg
add
jle
sbb
clc
aas
mov
add
add
mov
fild
sub
scas
fild
in
repnz
cmps
mov
cmps
add
das
seto
enter
mov
add
and
mov
mov
(bad)
add
add
mov
sbb
sbb
stos
dec
cli
add
cmps
inc
fbld
add
cmps
inc
lods
cld
cmp
push
and
add
movs
push
lods
cld
ror
add
mov
dec
movs
pop
lahf
stos
sbb
das
ins
pop
sbb
fadd
xchg
aas
push
xor
cmps
pusha
mov
sbb
pmaddwd
sub
or
cmp
gs
mov
ror
addr16
add
ficom
jo
xor
add
leave
(bad)
nop
das
lock
mov
(bad)
nop
inc
and
mov
adc
mov
enter
mov
mov
bound
mov
retf
das
push
scas
push
enter
rol
cmp
pop
inc
pusha
lds
push
mov
lock
scas
cmp
pop
push
int
mov
rcr
sar
enter
scas
lock
or
lock
in
pop
add
sub
aas
adc
mov
sub
mov
idiv
(bad)
push
scas
add
mov
out
pop
dec
adc
mov
pop
mov
in
shl
leave
cdq
das
ret
nop
pop
sbb
ret
test
jo
pop
(bad)
cmp
add
cmp
(bad)
in
enter
repnz
ds
add
add
mov
jne
add
add
and
add
mov
mov
push
dec
mov
ret
cmp
and
ret
ins
ret
cmp
jns
cmp
ins
ret
cmp
jns
ins
pop
dec
xor
lds
cmp
add
or
or
pusha
iret
inc
jb
jo
in
push
or
(bad)
aad
mov
aaa
xchg
pop
mul
int3
inc
pop
mov
push
pop
or
in
stos
and
jbe
add
sub
iret
nop
inc
loopne
or
shr
cmp
xor
or
push
cmp
adc
adc
fimul
jne
js
sub
push
push
mov
in
out
or
add
int
inc
cmp
in
(bad)
jmp
add
scas
or
in
or
fs
or
fcom
fldenv
fnstcw
sbb
and
xchg
jmp
out
outs
lahf
ss
js
xchg
mov
push
adc
inc
(bad)
outs
push
xor
cmp
mov
in
cmp
dec
iret
sbb
mov
or
xor
inc
test
es
dec
iret
push
xchg
pop
adc
jae
popa
pop
js
das
xlat
or
push
dec
iret
pop
cs
das
es
push
lods
xchg
cmps
fild
mov
imul
pop
data16
add
or
(bad)
sbb
popf
mov
imul
sub
inc
ins
inc
movs
push
sub
call
inc
js
add
icebp
in
enter
sti
add
das
out
sbb
adc
scas
pop
std
adc
les
bound
inc
xor
test
aas
push
adc
jne
jbe
xlat
inc
inc
jae
ins
push
adc
aas
add
cwde
jmp
daa
out
fdiv
push
and
mov
mov
test
sub
sub
js
add
ja
add
mov
ret
xchg
ss
lea
inc
repz
jo
push
out
inc
loopne
jmp
sbb
push
ja
push
push
cmp
push
push
mov
push
test
mov
adc
jne
fwait
in
mov
push
push
rcl
fldcw
adc
jle
add
fcmovnu
data16
inc
scas
(bad)
push
jns
push
pop
in
pusha
jmp
movs
push
jmp
std
cmp
mov
fisub
push
pop
sub
repz
iret
imul
outs
call
xor
cmp
ins
push
outs
pop
push
push
std
jbe
ins
ss
js
mov
inc
outs
(bad)
ins
ss
int
mov
inc
mov
mov
ins
fwait
test
jbe
lahf
data16
add
imul
mov
pop
nop
movs
cdq
jo
imul
xchg
ds
add
rol
dec
push
pop
enter
add
inc
ins
add
pop
test
jl
mov
pop
popf
dec
scas
dec
aas
pop
popf
mov
ins
xor
dec
out
pop
sub
in
mov
movs
pop
push
popa
push
jg
mov
lock
sub
ss
inc
scas
pop
jns
jl
lock
retf
data16
pop
pmuludq
jo
aas
jp
pop
das
cmc
mov
cmc
test
xor
imul
loopne
fdivr
out
sub
fcom
push
push
ins
mov
adc
js
aas
imul
(bad)
adc
mov
je
bsf
mov
jno
mov
jo
ins
xlat
sub
lock
loopne
push
jmp
ds
cmp
sub
push
jbe
add
inc
inc
add
dec
sti
inc
or
pop
push
or
pop
push
dec
mov
leave
fistp
mov
std
add
push
cwde
dec
je
bound
mov
add
clc
movs
les
push
mov
sahf
ins
xchg
push
cs
arpl
push
mov
cmps
data16
and
popf
dec
push
nop
push
push
test
iret
mov
ficom
sahf
test
or
and
push
call
mov
push
imul
sysenter
cmp
push
ret
add
push
fld
mov
enter
sete
mov
or
xadd
push
rcr
xor
idiv
push
retf
fld
leave
push
mov
ret
iret
mov
sahf
int3
lods
push
mov
(bad)
fistp
mov
rcr
push
(bad)
mov
dec
jnp
mov
retf
outs
cmp
or
lahf
adc
add
lods
push
(bad)
cs
adc
stos
iret
mov
add
dec
leave
jns
add
(bad)
mov
lahf
xor
mov
pavgw
or
outs
adc
fstp
in
add
icebp
mov
in
and
mov
fdiv
repnz
inc
adc
call
inc
adc
mov
enter
int3
dec
sbb
scas
and
jmp
test
neg
mov
xor
xchg
in
xor
(bad)
pop
into
dec
pop
mov
(bad)
mov
cld
loop
in
(bad)
fcom
ins
dec
inc
aad
mov
(bad)
push
fcomp
add
push
std
inc
mov
fistp
aad
push
fdivr
inc
xchg
push
call
xor
fisttp
icebp
es
xchg
pop
mov
in
fnstenv
pop
ds
data16
push
sub
inc
push
or
sub
sahf
int
add
add
mov
ror
repz
int
in
xor
inc
push
adc
mov
pop
xchg
sar
push
lahf
push
jo
fld
push
pop
xchg
ds
out
aaa
rcl
add
push
(bad)
nop
out
fldcw
out
xor
jmp
adc
stc
in
sar
cmps
(bad)
aaa
cmp
cmovns
iret
mov
ret
mov
ss
xor
into
add
aas
push
inc
xchg
mov
push
push
mov
dec
jbe
fidivr
jnp
push
push
dec
push
pop
mov
je
fs
cmp
into
jnp
lgdtd
xlat
cs
cmp
sub
fild
xor
jl
outs
push
movs
push
or
push
hlt
aam
sahf
ins
mov
pop
push
and
or
rol
mov
sbb
ins
out
xchg
aaa
out
add
sbb
adc
add
sbb
sub
movhps
cmp
mov
out
fisttp
ret
dec
fisubr
mov
test
inc
push
push
call
and
jecxz
lahf
out
adc
adc
or
test
aad
outs
cmp
push
sub
fsub
add
lock
or
xor
jmp
xchg
push
inc
dec
bound
lahf
push
sbb
dec
bound
dec
fstp
mov
push
xor
cs
fdivr
push
push
outs
inc
mov
inc
xor
pop
movs
sub
push
cmp
in
gs
mov
stos
adc
loopne
and
cdq
mov
sbb
es
dec
dec
inc
ins
lods
add
jg
call
dec
(bad)
ins
add
sub
push
sub
inc
mov
push
(bad)
xlat
sbb
dec
loope
add
das
ins
xor
test
retf
mov
fiadd
lock
(bad)
inc
call
fisubr
push
push
scas
push
fiadd
cmp
faddp
xor
pop
pop
xchg
fwait
ret
push
mov
popa
add
test
push
arpl
ss
sbb
inc
stc
mov
neg
lods
dec
test
andps
inc
adc
bound
test
fidivr
popa
aaa
mov
aas
mov
pop
xor
mov
push
mov
js
push
xor
mov
iret
pop
mov
ret
inc
in
pop
mov
nop
repnz
cmovp
add
loope
repnz
and
inc
rcr
enter
cmovle
cs
jne
jge
test
xor
iret
inc
inc
adc
pop
ss
pop
lock
jne
push
xchg
lds
loop
test
mov
iret
pcmpgtd
(bad)
push
pminsw
pop
aam
and
inc
jmp
pop
dec
ret
lods
push
(bad)
out
dec
or
ja
shl
xor
inc
dec
iret
std
push
inc
scas
inc
xchg
and
daa
outs
or
fistp
cwde
xor
jnp
jae
jne
cld
jbe
clc
je
ins
imul
movs
jo
xchg
sbb
or
loopne
cmp
out
pcmpeqb
ins
test
dec
cmps
adc
add
and
mov
iret
iret
jbe
jno
aad
pop
pop
xor
popf
shl
dec
outs
call
sbb
adc
outs
pop
in
dec
push
adc
jmp
ins
pop
xchg
xchg
add
call
mov
in
adc
adc
push
cmc
and
inc
ins
jae
daa
pop
or
fs
push
jbe
ds
and
sahf
clc
xor
push
call
xchg
inc
sbb
(bad)
pop
sbb
and
jp
data16
jnp
aam
les
pushf
mov
lea
(bad)
ins
iret
mov
(bad)
sbb
mov
jns
cs
xchg
xor
xchg
jo
or
js
dec
outs
ds
and
fild
sahf
out
mov
stc
xchg
aaa
mov
add
fwait
(bad)
daa
mov
stos
test
loope
scas
jb
xchg
sti
out
inc
dec
xchg
mov
imul
fs
rcl
movs
dec
jle
aaa
sub
xor
daa
stos
add
test
icebp
ss
pop
xchg
push
push
mov
or
push
pusha
outs
ror
xor
stos
inc
jmp
mov
movs
add
push
xchg
jne
sub
je
jecxz
mov
dec
test
jle
pop
push
sahf
daa
adc
jb
sahf
ret
das
add
in
xcrypt-ecb
cmps
iret
push
jmp
loop
ficomp
xchg
mov
arpl
test
(bad)
push
mov
add
pop
js
cmp
or
lahf
inc
xor
outs
jne
cs
mov
sub
xlat
cmp
(bad)
pop
jae
jle
mov
lods
std
outs
ud1
hlt
xor
cs
push
pop
shrd
push
pop
(bad)
dec
stos
(bad)
ja
mov
scas
xchg
or
mov
rcr
cmp
aas
(bad)
sub
cld
arpl
pop
cmp
adc
(bad)
mov
dec
movs
xlat
and
inc
dec
jmp
push
mov
addr16
dec
mov
jle
out
push
push
lea
not
sbb
int
pop
aas
out
push
jb
aaa
je
adc
xchg
je
ret
xchg
add
jle
stc
pop
repnz
fsub
xadd
ds
aas
push
mov
sbb
(bad)
cmpps
fnstcw
mov
cmp
cmps
rol
test
mov
inc
and
push
aam
pusha
mov
es
inc
and
jne
mov
je
nop
pop
int
in
pop
pop
enter
nop
xchg
lea
add
jns
pinsrw
rcl
adc
out
popa
jnp
paddusw
(bad)
adc
cmove
lds
add
(bad)
paddusb
test
ss
xchg
outs
or
call
pand
add
fsub
sahf
adc
out
repnz
pavgw
mov
(bad)
adc
fcom
scas
push
int
into
icebp
in
jns
lahf
vmptrld
pmovmskb
xchg
mov
add
out
es
jle
js
addr16
jbe
fld
fild
sub
pop
mov
and
mov
fwait
in
adc
adc
ins
pop
arpl
in
in
or
data16
adc
inc
push
dec
sbb
not
loopne
dec
adc
push
daa
xchg
pop
cmp
xchg
cwde
fist
jmp
leave
dec
pop
mov
pop
cs
add
ins
xchg
fist
hlt
mov
outs
jne
jo
xchg
jge
push
sar
push
jle
fistp
pop
push
cli
sar
ror
jmp
js
test
test
pminub
push
(bad)
pop
(bad)
out
add
in
or
les
iret
inc
rcl
xchg
ds
xchg
psubw
into
mov
add
in
add
in
in
fistp
push
and
jne
fstp
aad
popf
push
repnz
icebp
test
out
jb
fld
pop
cli
imul
sbb
cmp
add
dec
dec
sahf
out
test
les
psllq
fst
add
cmc
mov
pop
inc
les
cli
iret
pop
and
dec
les
out
cmc
push
mov
pop
arpl
or
outs
inc
repnz
jb
idiv
not
jb
cmps
add
push
jno
adc
clc
fwait
sub
movs
test
push
dec
pop
loop
into
push
push
dec
and
cdq
dec
mov
aas
bound
repnz
cmp
ss
add
push
inc
ss
jnp
hlt
dec
or
pop
(bad)
ficom
inc
(bad)
jbe
push
mov
mov
or
stos
inc
push
ins
es
fistp
adc
jle
xchg
pop
adc
in
popa
ins
and
push
pop
push
pop
add
or
push
test
push
dec
stc
add
jmp
daa
aaa
and
add
jnp
add
aaa
xor
xchg
or
push
push
push
movs
sub
stos
dec
sub
or
add
adc
and
(bad)
out
arpl
rcr
fwait
xchg
pop
adc
neg
cmp
arpl
jecxz
dec
adc
xor
sub
cmp
ffreep
stos
rcr
outs
cmps
rol
ret
adc
adc
pusha
jge
push
repnz
add
dec
jp
dec
mov
in
ja
mov
sbb
jg
adc
push
add
add
out
sbb
push
adc
mov
mov
sahf
sbb
les
aas
imul
lock
test
push
push
gs
xchg
or
fdiv
mov
push
sbb
fwait
in
cmp
sub
push
xor
js
mov
ss
sbb
inc
jle
jns
xor
sbb
push
test
adc
or
(bad)
daa
(bad)
iret
div
mov
sbb
cmp
imul
push
push
cmp
xchg
imul
jns
jae
push
sub
push
pusha
push
outs
xor
sub
shl
pop
cmp
jnp
dec
out
out
push
(bad)
fcomi
test
(bad)
mov
xlat
adc
push
dec
mov
repz
aas
sub
xor
ja
addr16
push
and
ret
push
sbb
out
mov
out
in
or
ret
leave
das
pop
or
push
xor
lds
lods
xchg
push
sahf
mov
adc
mov
sbb
pop
pop
sub
xchg
sub
pop
ret
or
aaa
cmp
movq
and
or
ins
ins
jns
push
ins
sbb
ds
add
bound
lock
lock
jnp
test
cs
push
mov
movups
and
repnz
call
push
repnz
stc
ret
pop
aas
mov
add
test
sbb
or
mov
data16
ss
inc
enter
cmp
add
repnz
cmp
enter
cmp
cmp
cmp
cmp
repnz
fwait
adc
xchg
cmp
fisttp
xchg
cmp
sbb
cmp
xor
cmp
daa
dec
jle
pushf
aam
sbb
or
sbb
jle
(bad)
imul
ins
push
outs
cmp
jne
or
add
add
(bad)
adc
mov
cmp
das
fimul
stos
pop
add
das
inc
int3
add
pop
dec
test
sbb
das
ins
sbb
adc
dec
jmp
jp
push
(bad)
adc
xchg
pop
pop
outs
inc
xor
cmp
mov
jbe
mov
aad
inc
cmp
pop
pop
inc
inc
outs
and
mov
sbb
mov
enter
rcl
js
loopne
popa
add
jne
jbe
nop
cmp
ins
aas
adc
test
es
jnp
pusha
push
and
cwde
push
movs
push
test
bound
data16
cmp
sbb
call
popa
(bad)
xchg
mov
mov
inc
sub
and
dec
(bad)
sub
arpl
or
inc
jo
mov
test
ja
stos
lock
or
pop
sbb
shr
pop
rcr
mov
fistp
pop
cmp
rol
jge
pop
mov
movs
inc
shl
inc
repnz
adc
adc
cmp
inc
push
test
add
cmp
mov
outs
mov
mov
in
inc
pop
cmp
and
xor
out
jnp
out
xor
inc
fsubrp
cs
jge
lock
lock
ja
inc
loop
nop
dec
adc
mov
push
lea
push
sbb
xchg
scas
and
or
push
lock
adc
fcom
dec
je
cmp
movs
dec
jnp
xchg
mov
mov
retf
gs
adc
push
loop
rcl
inc
mov
(bad)
(bad)
mov
icebp
adc
dec
or
add
unpcklps
push
pop
cmp
daa
aaa
pop
inc
arpl
inc
out
push
adc
push
dec
push
pop
aaa
outs
push
or
aas
rol
shr
xchg
push
cmp
cmps
popa
mov
inc
ret
pop
sti
add
inc
jae
mov
fs
outs
outs
data16
xor
shl
xchg
adc
sahf
out
scas
add
push
pop
mov
iret
sar
push
or
les
daa
in
inc
test
idiv
add
adc
push
in
fnstcw
gs
repz
or
jl
sahf
out
or
jns
push
gs
cs
imul
jb
push
adc
inc
fistp
mov
mov
test
adc
dec
push
jge
(bad)
jns
xchg
js
mov
pop
les
cs
cmp
pop
jle
pop
fstp
push
loop
lahf
push
stos
out
fldcw
(bad)
stos
leave
sahf
repnz
ret
fwait
in
fldcw
inc
mov
test
ss
xchg
movs
arpl
fbstp
jl
aad
(bad)
scas
aam
test
xlat
and
sbb
les
jbe
cmps
dec
dec
mov
ja
test
jae
or
pop
dec
jne
cmp
pusha
inc
sbb
in
test
ins
(bad)
(bad)
pop
add
icebp
mov
pop
mov
adc
pop
adc
add
neg
repnz
adc
sbb
das
mov
inc
repnz
push
mov
inc
inc
dec
pop
aam
push
lods
clc
xchg
in
push
adc
ret
adc
dec
stc
and
xchg
cmp
adc
and
mov
int
sbb
(bad)
cmps
cld
mov
inc
ds
mov
scas
adc
push
out
add
setne
jle
push
push
push
sub
out
or
adc
scas
push
mov
lock
fwait
int
mov
xchg
and
fdivrp
sub
scas
adc
and
imul
ret
scas
std
add
adc
cwde
imul
scas
mov
pop
push
fdivrp
ins
setle
iret
add
add
sbb
dec
addr16
push
pop
jl
dec
xor
mov
inc
cmps
add
arpl
aas
ja
jb
xchg
ss
daa
lahf
push
mov
frstor
cmp
inc
push
mov
in
test
mov
cld
adc
sub
mov
jns
dec
fucom
push
pop
ins
(bad)
xor
mov
adc
pop
adc
jmp
push
out
xor
sahf
pop
lahf
or
push
cmp
lahf
pushf
nop
and
inc
dec
cld
inc
jbe
xchg
test
push
add
cmp
sbb
lods
jp
cmps
inc
das
lahf
into
mov
pop
push
lahf
adc
(bad)
(bad)
push
push
inc
add
adc
ss
cs
retf
iret
(bad)
lock
stos
cmps
out
inc
pop
inc
xor
xlat
mov
inc
lods
pop
cmp
sbb
push
fcomp
mov
stos
scas
(bad)
lock
dec
mov
iret
adc
push
pop
aad
scas
push
sahf
xor
cdq
in
pop
mov
add
rol
dec
lahf
adc
cdq
fs
mov
outs
cs
cmp
mov
fisttp
mov
and
xchg
outs
jno
inc
inc
mov
mov
js
mov
stc
data16
push
and
jne
adc
enter
adc
adc
out
repnz
push
cmc
add
pop
call
adc
mov
and
dec
sbb
daa
or
push
pop
test
push
mov
dec
dec
adc
inc
push
loopne
movups
loopne
mov
pop
add
dec
icebp
add
test
sbb
pop
inc
add
stc
add
repnz
add
pop
pop
out
push
add
push
pusha
pop
dec
cmp
das
sub
push
jb
mov
mov
nop
jle
(bad)
xor
inc
pop
pop
movs
adc
inc
or
dec
jo
mov
adc
in
jge
adc
stos
adc
enter
aas
out
fdivr
dec
mov
jne
xchg
icebp
push
jo
adc
out
icebp
inc
and
adc
adc
adc
jmp
mov
push
add
jnp
push
in
inc
adc
adc
out
adc
test
(bad)
adc
pop
jns
adc
push
(bad)
xchg
outs
adc
sbb
ret
add
movbe
jl
jg
in
add
add
ins
call
jb
dec
mov
jle
jp
sbb
or
add
sub
push
mov
ud0
imul
sti
scas
pop
inc
gs
jne
je
outs
mov
adc
popa
mov
xor
in
push
push
xor
loop
or
loopne
mov
inc
adc
pop
repnz
sbb
and
rcr
xchg
adc
fiadd
mov
xchg
xchg
test
adc
add
add
adc
cmp
or
bound
mov
xchg
sub
ins
daa
js
xchg
mov
mov
mov
mov
pop
lea
out
mov
dec
jnp
or
(bad)
sahf
xchg
leave
push
xchg
pop
sti
dec
fwait
int
xchg
pop
mov
sbb
int
xchg
mov
bound
inc
cmp
xchg
pmuludq
mov
push
sub
fisttp
and
adc
out
test
scas
adc
lds
mov
or
adc
jb
add
dec
out
inc
adc
xor
inc
repnz
adc
adc
adc
or
mov
pop
js
or
cmp
out
add
mov
adc
add
aas
jo
or
pop
adc
adc
pop
inc
inc
and
inc
mov
outs
mov
lock
jp
adc
dec
dec
cmp
(bad)
pop
xor
adc
push
fwait
in
test
push
ds
push
sub
fisub
push
add
push
int
mov
ins
cmp
into
push
ret
adc
push
push
jns
test
sti
push
outs
pop
pop
jno
mov
sbb
cmp
es
inc
mov
push
cmp
jbe
in
lods
push
pop
mov
pop
push
jb
mov
ins
ss
dec
lea
mov
sub
scas
out
iret
rcr
pop
jnp
out
fldcw
ja
(bad)
push
int3
push
out
inc
out
push
inc
scas
cmp
sub
push
daa
mov
out
sub
push
lds
inc
adc
inc
sbb
sbb
jo
fld
add
adc
int3
sar
je
dec
imul
call
lock
sub
dec
cs
das
loop
not
add
push
lea
jo
xchg
push
mov
outs
cmp
sbb
jmp
popa
arpl
pop
or
(bad)
ret
addr16
or
add
imul
ss
sub
scas
adc
pushf
enter
inc
jns
pop
adc
push
or
test
in
dec
adc
fist
mul
sar
or
push
dec
push
adc
inc
adc
data16
fs
and
repnz
pop
adc
call
or
test
outs
add
maskmovq
mul
in
adc
mov
adc
fild
jb
clc
int
sub
jo
pop
xchg
ficom
xchg
push
inc
adc
jmp
ficomp
push
xchg
push
fsub
cli
mov
ins
repz
sti
test
ret
or
sbb
inc
push
sub
mov
and
ins
mov
cmp
test
icebp
outs
adc
and
mov
push
mov
retf
xchg
fbstp
adc
cmp
(bad)
scas
xchg
sbb
inc
mov
out
mov
popa
fcmovnu
in
push
movs
xchg
push
sub
or
push
add
jo
or
sub
sub
and
push
adc
loop
push
pop
pop
mov
dec
adc
add
jns
in
push
dec
adc
rol
sub
xchg
scas
loop
adc
daa
rcl
pusha
fbstp
jnp
shr
push
xor
(bad)
xor
inc
in
add
add
int
and
nop
mov
inc
sbb
xchg
(bad)
adc
repnz
cmp
js
add
xchg
xchg
add
adc
popf
push
std
mov
jo
js
je
pusha
adc
lahf
and
clc
push
test
add
adc
jmp
adc
hlt
fbstp
lods
jne
out
jo
(bad)
in
mov
cmp
cmp
test
pop
adc
inc
and
inc
adc
mov
mov
inc
adc
dec
push
add
inc
test
aas
js
push
add
or
inc
and
dec
icebp
lahf
shl
add
inc
enter
dec
call
add
pop
sub
add
jb
fiadd
pop
push
fistp
sub
mov
push
int
stos
xchg
mov
pushf
jmp
inc
push
or
mov
mov
daa
mov
xlat
push
inc
adc
inc
push
mov
bound
adc
ins
mov
jle
adc
movs
adc
inc
shr
fiadd
push
pop
cmps
call
adc
cmp
jnp
inc
addr16
and
ficom
pop
enter
pop
add
test
add
sbb
loopne
or
pop
adc
adc
lods
dec
adc
adc
cs
and
neg
lods
sub
pop
adc
enter
push
adc
icebp
adc
outs
hlt
adc
loopne
stos
xchg
ror
rcl
je
adc
or
stos
pop
scas
or
add
mov
fisubr
cmp
cld
es
les
jae
xchg
xchg
scas
nop
aas
iret
sub
xchg
out
adc
and
jns
adc
mov
fs
into
jl
test
mov
mov
sar
jg
inc
add
add
sbb
push
loopne
lock
dec
adc
es
xor
rol
ds
outs
sub
mov
mov
pop
ins
es
mov
dec
call
out
adc
jle
test
add
adc
les
mov
repz
arpl
nop
(bad)
cs
das
rol
pop
and
jmp
ror
out
mov
dec
xchg
and
call
inc
mov
fsubr
pop
push
stos
cmp
adc
adc
adc
setne
adc
nop
cmp
and
aas
out
add
movlps
add
pushf
dec
add
scas
adc
stos
adc
adc
cmp
mov
mov
push
push
nop
pop
sbb
adc
push
adc
(bad)
push
mov
xor
push
jnp
sub
xchg
adc
mov
add
and
into
scas
xcrypt-ecb
cmps
or
pop
dec
mov
in
movs
pop
mov
adc
push
adc
adc
mov
adc
movs
push
sbb
push
(bad)
mov
lahf
or
sahf
inc
jle
mov
or
jp
xor
mov
sub
sbb
pop
mov
ret
push
repnz
or
and
or
xor
and
push
push
dec
repnz
sub
xchg
cmp
or
int3
xchg
inc
outs
pop
inc
das
dec
and
push
sbb
ins
and
mov
pop
das
(bad)
cmp
xor
pop
das
mov
das
ror
or
hlt
shl
outs
add
fwait
xor
in
and
cwde
fcom
retf
ffree
bound
push
enter
les
int
ja
hlt
mov
enter
sar
mov
sub
mov
add
data16
ret
mov
push
es
add
xor
movups
les
aas
dec
cmp
jns
jb
jb
sub
or
addr16
mov
pusha
(bad)
sub
loopne
push
push
dec
js
outs
ret
ret
sbb
out
mov
sub
shl
out
les
pusha
das
ret
nop
pop
nop
pop
adc
push
adc
cmp
pop
das
pop
jmp
ror
jg
push
add
xor
int
sub
add
fcom
out
pusha
dec
push
cmp
movs
aaa
dec
enter
adc
push
mov
lahf
and
add
adc
cmc
adc
rol
out
pushf
mov
cmps
mov
jg
in
rcl
lds
adc
adc
pop
adc
ja
jne
adc
je
fsubr
unpckhps
pop
(bad)
ins
scas
and
and
(bad)
ins
mov
cmps
push
sbb
aam
cmp
pop
nop
out
sbb
mov
mov
mov
xchg
pop
es
scas
lahf
test
pop
movs
mov
movs
push
push
rcr
leave
fsub
cmp
cmps
mov
or
sti
jg
or
cmp
cmp
iret
jecxz
retf
fmul
xor
push
retf
cmp
add
cmp
mov
aad
lea
daa
in
scas
cld
mov
out
or
in
inc
push
add
push
not
aam
jp
dec
push
adc
jno
cmc
(bad)
aam
scas
adc
ins
pop
or
lods
pop
(bad)
arpl
jae
cmp
jbe
das
aas
inc
repz
and
mov
inc
or
add
mov
jl
add
mov
xor
seto
fdiv
aam
and
dec
pop
leave
seto
xor
adc
in
ss
adc
pusha
pop
fidivr
mov
jmp
dec
ins
in
cmps
jo
add
mov
add
mov
or
test
ffreep
mov
jb
and
sbb
repnz
test
dec
cwde
mov
pusha
cld
lock
cwde
inc
cmp
mov
pop
lea
mov
lahf
xchg
fmul
mov
add
aaa
lahf
xor
sbb
enter
(bad)
das
inc
sbb
or
xor
sbb
das
leave
xor
mov
push
or
ficomp
pop
adc
sub
fidiv
out
push
mov
int
out
cdq
rol
xor
add
in
dec
fdiv
nop
jmp
cmps
inc
adc
sbb
fwait
ja
mov
loopne
pop
xor
imul
pop
fbld
fild
adc
mov
cmp
or
cmp
fistp
and
call
jne
mov
aas
(bad)
xor
cdq
inc
inc
push
cmps
out
push
xchg
xchg
enter
inc
leave
push
into
adc
out
push
test
and
pop
xor
mov
push
loope
xlat
sbb
dec
dec
push
pop
cs
inc
popa
rol
movs
xor
cld
xor
dec
inc
aaa
pop
mov
jl
inc
push
mov
xchg
adc
mov
dec
inc
or
lahf
mul
jmp
xor
dec
sbb
push
add
sti
or
xchg
(bad)
sbb
cwde
sub
bound
dec
adc
outs
fiadd
jae
into
stos
cwde
int3
adc
cmps
adc
sbb
mov
inc
imul
dec
push
dec
mov
dec
mov
call
jecxz
sbb
pop
sub
adc
mov
cmp
jns
cmp
adc
cmp
push
sbb
scas
in
fldcw
or
push
dec
or
into
jnp
push
pushf
pusha
push
xchg
not
dec
sbb
es
in
ds
fstp
cmp
lods
mov
mov
xchg
movlps
or
stos
out
cs
add
add
sub
add
out
adc
ins
push
add
dec
jg
jno
stc
inc
mov
inc
ret
mov
dec
lods
jnp
dec
daa
movs
xchg
pop
(bad)
nop
xor
adc
add
mov
mov
das
pop
pop
inc
test
dec
js
aam
pusha
inc
sub
jbe
scas
or
sbb
outs
jl
lahf
leave
seto
pusha
jo
(bad)
mov
pop
ins
xchg
adc
push
adc
push
test
mov
cmp
mov
cmp
nop
or
gs
clc
pop
xchg
adc
push
clc
inc
pop
stos
add
mov
xor
sub
sbb
lds
lahf
mov
add
jg
jl
push
mov
jae
loop
movs
adc
push
(bad)
xchg
scas
dec
shl
pop
mov
mov
mov
inc
imul
adc
popf
sbb
scas
lahf
scas
pop
in
pushf
jl
xchg
push
pop
cdq
mov
js
hlt
lahf
adc
retf
adc
push
cmp
popf
cmp
es
sbb
lahf
adc
scas
adc
adc
in
pop
mov
push
call
repz
es
mov
push
cwde
inc
adc
test
enter
adc
adc
push
scas
mov
jmp
(bad)
call
mov
pop
sub
jno
push
xchg
inc
sub
mov
outs
or
jg
jp
je
movs
call
cmps
int
add
outs
xchg
dec
adc
mov
icebp
adc
push
mov
shl
mov
pop
enter
cmp
cmc
nop
jb
daa
mov
xchg
push
mov
and
dec
loopne
adc
mov
and
adc
loope
mov
xchg
ins
das
fisttp
lahf
dec
push
jbe
stos
mov
add
stos
jge
call
inc
fisttp
imul
add
ins
in
add
push
inc
mov
sar
mov
ja
push
ins
das
inc
inc
sbb
in
mov
jae
jp
push
rcl
cmp
mov
scas
pop
pop
enter
ret
ret
inc
add
nop
add
or
push
daa
hlt
or
fs
(bad)
repz
int
js
mov
cs
mov
enter
add
adc
outs
mov
sub
inc
ds
dec
xor
and
inc
ds
adc
mov
add
push
aad
pop
aam
leave
inc
adc
inc
dec
xor
sub
push
mov
je
fldcw
dec
pusha
(bad)
fucomp
(bad)
add
add
fistp
call
iret
pop
hlt
sbb
pop
and
pop
and
xor
jno
movs
sbb
inc
ss
and
inc
mov
sahf
out
scas
loop
push
push
(bad)
cmc
loopne
cmp
inc
and
and
push
leave
shl
mov
into
rcr
jecxz
xor
and
stos
test
mov
aaa
mov
int3
aaa
(bad)
dec
aas
dec
shl
adc
dec
lahf
cmps
inc
sbb
ret
cmp
add
push
(bad)
aaa
pop
dec
push
sar
aaa
inc
jnp
xor
push
iret
cmp
in
and
jecxz
add
stc
add
out
fimul
mov
add
or
add
ret
(bad)
mov
in
dec
cs
add
dec
adc
gs
push
xchg
test
jecxz
outs
inc
push
inc
fidivr
out
push
or
cmp
dec
test
(bad)
out
clc
or
in
and
clc
add
in
pop
add
or
cmp
aas
ja
imul
aas
adc
or
add
jae
xchg
pop
sbb
add
inc
sub
lods
mov
adc
fsubr
fldcw
pusha
cli
leave
cld
test
and
stc
adc
lea
call
in
dec
ds
cmps
adc
inc
repnz
lds
adc
sub
dec
ret
fistp
mov
add
sti
jae
or
cmp
(bad)
dec
add
dec
shl
jecxz
std
xor
push
push
(bad)
and
in
xchg
cmp
push
jl
out
repnz
addr16
gs
push
repnz
out
dec
xor
inc
sahf
call
adc
add
in
sti
push
enter
mov
ficomp
repnz
or
das
(bad)
or
add
jg
add
mov
mov
xor
lahf
iret
jnp
mov
adc
mov
xchg
sbb
push
cmp
add
jae
adc
cmp
aas
adc
jge
add
add
adc
stos
add
xchg
add
adc
leave
inc
enter
push
adc
jmp
adc
mov
wbinvd
push
adc
scas
mov
push
outs
data16
xor
imul
push
dec
inc
jo
mov
aas
xchg
sbb
add
add
mov
jb
ret
into
shl
inc
inc
dec
gs
outs
popa
jb
cmp
jno
into
outs
add
in
es
xchg
jl
pop
mov
sbb
and
mov
inc
xchg
cmp
pop
mov
mov
fisubr
sar
and
xchg
sahf
popa
aas
fbld
sub
push
mov
pop
inc
pop
outs
push
or
inc
fimul
movs
add
inc
sahf
inc
fisubr
sbb
add
repnz
aaa
enter
out
add
(bad)
adc
repnz
add
cs
cmc
sbb
push
int
dec
loope
pop
or
shr
add
xor
sub
add
mov
cmps
outs
sub
push
and
adc
(bad)
movs
hlt
mov
sub
psubw
dec
or
fisubr
addr16
dec
sahf
or
repz
or
nop
adc
push
(bad)
setae
dec
cmp
adc
and
and
and
adc
jne
jb
xchg
cmp
adc
sub
fidivr
repnz
sub
loopne
sti
into
repnz
xor
xchg
loopne
pop
pop
add
xor
pop
xchg
sbb
and
add
nop
pop
nop
xchg
adc
sbb
fldcw
mov
sti
push
push
sbb
out
mov
retf
and
out
lods
push
ror
out
sbb
sahf
mov
jnp
call
push
cmp
xor
xor
pop
jnp
jno
inc
push
push
test
sub
not
push
(bad)
cs
dec
dec
adc
cmp
xor
add
retf
test
js
enter
xor
pusha
sbb
repnz
xlat
aas
cmp
pop
pop
dec
sahf
inc
push
xor
in
test
aaa
jae
xchg
cmp
sbb
sbb
and
sbb
pop
pop
shl
repnz
adc
inc
les
or
hlt
push
inc
out
inc
pop
sub
cmp
repnz
(bad)
clc
xor
and
das
stc
mov
(bad)
aas
cli
pop
cli
cmp
out
cmp
add
les
repnz
rol
push
je
xor
cli
int
sbb
jo
xlat
add
push
mov
inc
repz
mov
(bad)
inc
enter
inc
mov
repz
inc
push
test
fwait
neg
push
xchg
inc
pop
iret
push
js
pushw
cs
xchg
or
mov
pop
iret
pop
test
cmps
scas
lds
lds
fiadd
outs
movs
in
push
mov
and
jne
adc
cmp
pop
test
push
ss
cld
mov
mov
push
arpl
push
add
adc
into
or
test
inc
js
adc
rcr
cmp
iret
(bad)
fmul
das
icebp
push
mov
push
add
cs
lods
xadd
add
lahf
add
scas
inc
pop
pop
arpl
cwde
cs
push
js
ja
add
jne
push
bound
jge
retf
mov
push
mov
mov
test
and
and
push
dec
call
add
outs
mov
(bad)
push
cmp
jg
fld
mov
sbb
push
pop
mov
unpckhps
adc
sub
xchg
mov
adc
and
dec
repnz
leave
add
mov
repnz
cmp
jle
lea
ins
pop
das
jge
push
test
inc
jl
out
mov
jmp
pop
adc
mov
fst
inc
(bad)
sbb
pop
add
push
or
daa
jno
mov
xchg
jl
sub
lock
mov
add
add
sar
add
das
and
adc
add
int3
les
jp
mov
les
push
add
nop
in
mov
lods
dec
nop
xor
loop
and
xor
lods
push
cld
pop
pop
xor
xor
push
pop
mov
arpl
fmul
fsub
jbe
retf
adc
aas
fld
and
ror
mov
adc
or
mov
aaa
jmp
add
xlat
xchg
cdq
sub
imul
out
adc
fild
stos
sub
xor
push
sub
addr16
jne
jns
mov
pop
mov
outs
push
(bad)
in
cmp
ss
xlat
inc
jmp
cmove
call
sub
mov
cmps
push
add
xchg
fucomip
or
div
cs
movs
test
inc
mov
jg
push
repnz
adc
std
or
sbb
jo
clc
ds
inc
outs
adc
in
aas
out
mov
adc
clc
ins
and
push
outs
cmps
mov
scas
mov
jg
sub
out
mov
mov
add
enter
scas
repnz
sub
test
das
fs
rcr
enter
push
jb
inc
jle
popa
dec
repz
adc
mov
cmp
cs
ss
aad
ins
ss
not
fstp
sar
mov
int
mov
ret
cmp
mov
neg
push
dec
mov
jns
in
mov
loop
fldcw
cmps
dec
mov
xchg
shl
into
push
ss
adc
scas
mov
mov
aas
enter
mov
inc
add
mov
sbb
test
mov
dec
push
mov
pop
adc
js
inc
leave
add
jb
xlat
fisttp
and
adc
sar
nop
xchg
neg
mov
fucomip
cmps
add
or
ss
call
loope
data16
data16
in
clc
mov
ss
int
psubd
(bad)
xlat
lock
cmps
jmp
fcom
add
in
aad
push
mov
inc
xchg
sbb
adc
nop
xchg
and
sbb
push
pop
fidivr
push
iret
adc
adc
pop
(bad)
adc
les
rcr
bound
mov
and
jg
dec
lock
mov
out
push
loopne
aam
xor
scas
aas
push
jb
rol
push
sbb
push
leave
int
mov
sub
dec
repnz
ss
add
(bad)
xor
push
aas
aam
or
adc
unpckhps
add
mov
and
jae
fistp
das
scas
jmp
inc
push
es
adc
jle
mov
mov
and
or
popa
dec
enter
sahf
(bad)
das
adc
or
adc
lock
sbb
pushf
sub
pusha
sub
adc
xor
pop
out
sbb
retf
adc
rol
adc
xchg
pop
adc
aaa
and
leave
mov
repnz
lock
push
test
add
out
and
sub
popa
loop
or
or
icebp
cmp
add
and
adc
pop
xchg
mov
call
mov
mov
leave
mov
icebp
adc
data16
pop
inc
cmps
imul
popa
bound
dec
(bad)
je
add
jo
ja
pushf
jl
clts
test
dec
and
add
mov
adc
out
xor
cwde
sub
push
push
ss
lahf
add
or
lahf
dec
shl
push
or
int
je
fisttp
dec
push
jb
in
jae
cmp
ds
js
mov
cli
pop
(bad)
shl
repnz
lahf
adc
out
and
or
mov
bound
cmp
pop
jbe
sbb
adc
cmp
sub
adc
sbb
cmp
adc
xchg
pop
stc
sbb
jl
aas
mov
cmp
test
or
mov
jo
das
push
ins
js
rcr
push
stos
pop
pop
call
add
outs
fs
mov
push
push
outs
gs
pop
pop
jns
jge
outs
rol
scas
adc
stc
sub
push
sbb
in
(bad)
scas
ror
mov
mov
and
(bad)
push
scas
es
test
sub
mov
pop
ins
ss
stos
inc
out
pop
and
cmps
cmp
pop
push
ins
pop
popa
jb
add
pop
jmp
(bad)
fstp
fldcw
push
(bad)
fidivr
jnp
mov
push
outs
lahf
adc
fs
outs
pop
xchg
push
into
mov
fucomi
es
das
jle
push
push
and
mov
dec
and
leave
xchg
inc
and
lahf
pusha
arpl
gs
adc
mov
lahf
or
jg
mov
cmc
sbb
add
sahf
adc
or
pop
enter
or
adc
dec
bound
add
int
xor
xchg
inc
pop
cmp
popa
push
pop
(bad)
sbb
repz
mov
xchg
out
movaps
mov
push
nop
push
cmp
or
in
adc
add
xor
jl
mov
pop
jg
adc
outs
ret
jae
jno
das
pop
xchg
ror
add
lahf
adc
sbb
mov
mov
mov
daa
jbe
push
fist
pop
add
xchg
es
push
xchg
aas
push
pop
fs
dec
mov
mov
ds
jbe
imul
cld
ret
iret
adc
jb
adc
sub
push
dec
push
adc
mov
mov
mov
sar
or
jecxz
dec
inc
and
inc
out
dec
inc
push
daa
stos
rcl
movs
das
and
mov
ins
jns
sub
enter
nop
test
push
inc
jecxz
dec
mov
lods
add
add
jle
mov
arpl
adc
push
jbe
leave
add
lods
(bad)
iret
adc
add
(bad)
pop
or
and
repnz
mov
repz
mov
stos
fiadd
xor
stos
xor
fadd
jbe
adc
jbe
pusha
push
and
add
cld
cmp
xchg
test
sbb
aaa
xchg
out
or
mov
cmp
adc
loop
adc
sbb
nop
adc
push
out
inc
outs
xor
push
jecxz
inc
jle
cmp
lea
add
xor
inc
xchg
out
add
es
jns
xor
inc
sahf
inc
add
nop
adc
jns
xor
fst
es
pop
aas
pop
adc
cdq
lea
das
cmps
sbb
pop
das
mov
mov
mov
stos
fistp
out
es
pop
adc
or
push
jmp
jo
lods
scas
call
add
pop
pmulhuw
mov
outs
sbb
dec
das
(bad)
push
scas
mov
and
adc
outs
pop
test
adc
or
(bad)
mov
nop
sub
pop
cli
push
inc
or
mov
pop
enter
or
adc
ret
dec
add
push
loope
lods
push
sbb
sub
xlat
mov
outs
mov
daa
je
inc
aas
adc
jo
mov
fisubr
or
mov
xchg
loopne
hlt
mov
les
inc
pushf
or
push
or
pop
and
sbb
adc
loope
and
pop
push
aaa
mov
addr16
sub
aaa
lods
aam
or
nop
rcr
ins
inc
clc
out
mov
jo
pop
add
mov
data16
jecxz
mov
dec
sahf
dec
(bad)
ficom
outs
fidiv
ins
add
das
inc
add
mov
xchg
outs
inc
mov
jae
fwait
idiv
inc
cmp
xor
das
dec
ins
lea
dec
pinsrw
imul
mov
call
das
add
and
dec
xchg
xor
xchg
pop
mov
sbb
movs
push
cli
xor
rcl
icebp
test
mov
mov
test
loopne
pop
add
shr
daa
(bad)
test
dec
xchg
cs
mov
push
pop
add
push
pop
add
add
inc
sub
inc
outs
pop
dec
or
or
ja
mov
inc
inc
(bad)
push
lock
xchg
push
xlat
dec
xor
imul
push
inc
pop
imul
and
push
push
cmp
or
xchg
pop
push
push
push
sub
iret
dec
in
and
daa
push
das
outs
push
rcr
mov
aam
jge
sub
push
das
imul
cmps
dec
ins
aas
test
repz
cwde
loopne
mov
iret
mov
mov
retf
push
dec
jnp
jmp
loop
add
jno
add
xchg
pop
iret
dec
xor
loopne
mov
dec
mov
cmps
pop
xchg
pop
cmp
or
ja
mul
dec
sbb
fisubr
adc
(bad)
icebp
jmp
cs
int
lods
test
arpl
mov
popf
mov
jae
xchg
inc
jnp
aad
sbb
cmps
inc
push
pop
push
dec
mov
mov
lock
mov
push
inc
outs
sbb
ja
jae
pop
sbb
adc
inc
ror
jnp
add
imul
adc
ins
sbb
mov
add
outs
sbb
sbb
xchg
jmp
call
add
inc
push
mov
push
push
push
push
fiadd
repz
lods
or
pop
mov
outs
push
or
xchg
mov
fimul
cmp
imul
stos
adc
sahf
pop
inc
ret
(bad)
dec
ret
or
(bad)
fadd
sti
lahf
shl
mov
not
adc
imul
pusha
jo
fcomp
xchg
inc
sbb
sub
repnz
push
(bad)
rcl
ins
ja
sub
cmps
into
dec
(bad)
mov
xlat
js
xor
inc
jb
fs
sbb
cld
or
inc
sbb
push
loopne
ds
xchg
pop
sbb
shl
pop
ins
or
aaa
jge
sti
dec
iret
pop
sub
mov
inc
pop
test
add
xchg
push
mul
dec
arpl
xlat
mov
jae
jae
fbld
push
imul
push
ss
test
inc
fwait
inc
mov
dec
dec
pop
sub
push
add
mov
not
dec
or
mov
inc
iret
iret
mov
stos
push
aas
push
jmp
push
sbb
pop
adc
daa
in
pop
fiadd
push
xchg
inc
dec
pop
ins
sbb
dec
das
xor
mov
test
xchg
mov
lea
cmps
add
mov
dec
and
popa
xor
test
sbb
daa
addr16
ret
neg
into
mov
pop
repnz
dec
or
lahf
xchg
mov
sahf
arpl
add
jae
movs
ret
inc
push
sbb
nop
jg
mov
ror
(bad)
mov
xchg
adc
or
dec
(bad)
and
into
in
cs
adc
lea
inc
enter
sbb
mov
(bad)
xor
inc
in
add
cmp
pop
jge
jmp
add
mov
jb
das
sahf
test
rol
jg
push
xchg
xor
jbe
lahf
sub
xchg
push
movs
adc
(bad)
mov
dec
popf
jb
xor
and
add
sar
shl
scas
stc
add
add
xchg
dec
sar
xor
cmp
aam
shr
das
les
daa
fmul
xchg
mov
mov
dec
in
mov
jp
push
cmp
rcl
or
pop
mov
push
xlat
(bad)
push
(bad)
mov
scas
aad
nop
add
shl
shl
cs
out
add
loopne
inc
pop
(bad)
inc
and
adc
xlat
pop
hlt
adc
ins
sahf
call
cmp
mov
fadd
add
fstp
fist
inc
repnz
and
jg
aam
js
test
and
(bad)
mov
or
cmp
ficom
push
aas
retf
cmp
cmovo
push
loop
rcl
sbb
das
or
adc
sub
sub
jo
out
ja
inc
ds
and
cmp
dec
sbb
call
jge
or
mov
adc
dec
push
adc
pop
mov
ficomp
sub
mov
ins
xchg
into
jmp
adc
and
test
out
inc
loop
mov
repnz
adc
fmul
pop
cmp
adc
aaa
stc
or
mov
rcl
pcmpeqw
push
add
cmp
and
out
jns
cld
inc
adc
fcom
xchg
adc
xlat
add
dec
push
in
jecxz
adc
mov
adc
jb
push
(bad)
jae
(bad)
fst
lock
(bad)
es
inc
data16
test
mov
fsubp
in
in
fucomip
pop
push
add
and
mov
jle
bound
icebp
ds
or
das
sbb
push
js
sub
out
sbb
test
xchg
fsubr
add
inc
add
inc
sti
push
add
jge
fwait
(bad)
arpl
dec
dec
mov
in
das
cmp
or
adc
pusha
or
je
out
gs
mov
(bad)
add
sub
ficomp
dec
int3
sahf
cmps
push
repnz
das
mov
lea
fild
inc
ret
das
add
or
inc
and
and
dec
push
jo
cmp
push
or
push
and
adc
add
je
add
hlt
push
xor
xchg
sbb
bound
nop
push
ret
and
sbb
out
lods
popa
adc
xchg
push
push
adc
addr16
push
test
fist
sbb
push
jb
xchg
add
dec
enter
es
fucomip
ucomiss
add
pop
push
or
mov
(bad)
fnstsw
pusha
and
mov
add
sbb
test
push
sbb
xor
push
sysret
jmp
jl
and
and
ret
dec
adc
mov
inc
mov
dec
sbb
cs
nop
pop
and
ror
xor
jo
outs
add
jns
push
pop
mov
pop
(bad)
ins
cmp
add
adc
lahf
(bad)
fs
cmp
mov
and
add
mov
pop
push
add
rol
push
(bad)
bound
rcl
cmp
retf
pop
adc
push
adc
fidiv
push
addr16
ja
pop
mov
mov
dec
mov
pop
out
or
outs
dec
gs
idiv
xchg
inc
cmp
std
fst
lods
pop
push
push
push
jns
push
lahf
fwait
loope
mov
push
es
dec
xchg
mov
inc
test
jo
mov
cmp
movs
push
add
cmp
outs
push
sub
repnz
sub
rol
push
sub
lahf
push
push
sbb
into
addr16
mov
pushf
and
pop
or
or
and
stos
add
dec
or
mov
push
xchg
fs
cmp
inc
push
iret
js
leave
sbb
xor
inc
fcom
ja
push
loopne
ss
shr
xor
daa
push
(bad)
(bad)
pusha
pop
jo
sub
ja
mov
pop
inc
dec
push
cmp
in
xchg
inc
sbb
repnz
jnp
stos
dec
cs
mov
sub
aas
push
aas
(bad)
mov
add
fwait
pop
daa
inc
cmps
jns
aas
adc
push
lahf
mov
ja
adc
test
pop
inc
jg
dec
popf
nop
cmp
repnz
dec
icebp
push
das
jle
add
push
das
pusha
push
inc
adc
pop
fdivr
inc
xchg
dec
pop
mov
dec
adc
inc
sbb
call
cmp
mov
pusha
pop
jo
ss
or
ja
outs
adc
adc
and
adc
lods
mov
sahf
lahf
dec
xor
mov
cmp
xlat
nop
inc
and
dec
or
jo
test
ss
push
sub
push
push
cmps
scas
cmovne
add
dec
jle
dec
and
rol
pop
shr
add
add
push
push
out
das
dec
jns
cmp
pop
inc
inc
iret
xchg
mov
inc
inc
sbb
dec
add
repnz
cmps
dec
dec
dec
push
push
inc
(bad)
movs
repnz
dec
fld
add
in
nop
(bad)
push
shl
ror
pop
shr
fwait
push
repnz
adc
pushf
and
inc
sub
push
repnz
pop
mov
and
ret
das
dec
dec
mov
add
scas
das
pop
sbb
shr
push
rcr
scas
jns
inc
(bad)
pop
sbb
dec
rol
mov
dec
aaa
inc
push
push
pop
or
adc
enter
pop
aad
add
nop
cmp
pop
dec
push
pop
sub
pop
lods
push
sbb
push
leave
or
loope
add
xchg
sbb
sub
push
or
inc
sub
adc
ds
pop
aas
in
inc
adc
pop
adc
mov
add
push
pop
cmps
or
push
out
inc
in
and
xlat
add
xor
fs
fist
xor
pcmpgtb
scas
outs
stos
adc
aas
cs
mov
mov
mov
dec
dec
das
test
inc
or
add
add
iret
ins
mov
xchg
ds
add
fwait
xchg
pcmpgtw
add
enter
dec
pop
imul
pop
xor
(bad)
jb
mov
loopne
scas
dec
push
jne
and
add
push
jne
cmps
lock
push
jae
in
addr16
js
ret
sbb
or
lods
mulps
push
fidiv
das
sahf
lods
cmp
fwait
push
jp
jg
pop
cmp
and
push
jns
push
js
cmp
test
jge
dec
loope
sbb
mov
retf
adc
push
jns
retf
lods
mov
push
jl
xchg
pop
sbb
lods
sub
push
add
mov
push
and
sbb
nop
jp
sbb
add
ins
das
jbe
or
mov
fimul
mov
push
push
jnp
les
test
outs
jne
es
rcl
push
dec
loop
or
jg
mov
push
push
xchg
mov
dec
push
cmp
fdivp
mov
das
lods
test
xchg
pop
push
int3
push
mov
cdq
or
imul
xlat
add
and
loopne
ins
fs
das
test
push
push
inc
inc
test
fldenv
xor
(bad)
jmp
or
test
test
aam
push
ret
outs
jb
push
inc
repz
js
je
imul
addr16
es
push
ss
sub
inc
jne
popf
nop
and
gs
sbb
inc
loop
or
movq
jle
xor
sub
lahf
jb
mov
push
jge
mov
call
add
mov
xor
lods
test
push
in
jle
sbb
add
sub
inc
push
je
jo
cmp
jb
jne
and
stos
xor
dec
xchg
cmp
fcomip
daa
cmps
ins
push
push
call
ins
mov
push
mov
cmp
outs
clc
mov
aas
imul
adc
div
ins
xchg
or
repz
addr16
movs
mov
outs
jmp
jo
mov
mov
stos
and
out
sbb
imul
scas
cmp
cmps
push
fiadd
and
ja
pusha
sub
nop
jb
scas
dec
sub
push
mul
add
ins
call
jecxz
rol
rcr
jbe
(bad)
arpl
or
sar
inc
daa
pop
cs
cmp
test
xor
ds
xor
jnp
sbb
mov
test
arpl
or
fist
ins
and
(bad)
sbb
stos
pop
fbld
mov
inc
dec
push
das
jb
(bad)
icebp
loopne
ret
fidivr
cs
xor
or
(bad)
xor
or
push
daa
outs
and
lds
add
ficomp
lods
ss
cmp
jbe
push
aas
xchg
lahf
aaa
call
iret
sub
fbstp
enter
dec
fbstp
scas
jne
dec
jb
inc
mov
xchg
jne
pop
stos
nop
sub
mov
push
jae
pusha
vpand
adc
cmp
outs
loop
push
ja
(bad)
lahf
outs
aas
fs
jb
push
pop
scas
cmp
scas
ret
cmp
xchg
push
mov
sbb
push
pusha
xlat
(bad)
aaa
cmps
or
ins
retf
imul
jb
fs
imul
sar
mov
or
outs
inc
sub
das
jae
mov
pop
add
aas
add
(bad)
inc
pop
outs
jb
push
add
mov
cmp
jne
lea
scas
xor
pop
ror
cmp
pop
fidivr
sub
mov
cmps
inc
(bad)
sbb
aas
sbb
jb
enter
push
or
add
pop
mov
je
adc
add
jae
sbb
enter
sbb
sbb
mov
sbb
mov
mov
enter
dec
and
js
jns
stc
jb
sbb
add
in
jmp
add
das
mov
retf
sub
push
adc
call
clc
push
bound
cmp
ror
mov
dec
inc
fdiv
sahf
xlat
pop
ja
push
arpl
fidivr
ds
mov
lods
popf
and
push
fwait
cmp
or
or
push
add
cmp
pushf
xchg
lea
mov
and
in
xchg
pop
xchg
xchg
mov
(bad)
cs
mov
sahf
or
or
or
jg
ins
jae
jb
fcom
ins
jne
popa
sub
or
sahf
add
jl
add
mov
leave
repz
sbb
ins
(bad)
jae
add
les
add
and
cmps
ins
xchg
out
add
das
das
and
push
adc
call
sub
pop
fmul
jno
jbe
dec
jmp
jmp
je
inc
cmps
jne
loop
daa
fist
loopne
shr
icebp
icebp
not
inc
inc
jecxz
add
inc
pop
inc
ds
mov
imul
popa
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
ins
dec
mov
(bad)
fisttp
arpl
fcmovb
inc
pop
pop
add
loopne
pop
jae
push
fcmovnb
sub
rol
dec
jne
dec
xchg
ins
fcmovnu
dec
push
ds
neg
fdiv
mov
iret
mov
(bad)
jg
jg
(bad)
pusha
cmp
cmp
cmp
fs
dec
and
jns
mov
xlat
mov
push
das
das
adc
dec
push
inc
fsubr
arpl
bound
xchg
aam
dec
arpl
push
stos
sub
idiv
mov
jne
xchg
mov
inc
jo
imul
bound
inc
popa
outs
adc
into
mov
jae
mov
xchg
addr16
out
and
xor
jle
push
push
gs
sbb
fbstp
outs
and
jbe
jae
pop
dec
inc
aas
xchg
mov
push
dec
dec
inc
cmovle
dec
pop
mov
stc
aas
push
dec
dec
dec
inc
push
inc
push
pop
inc
push
pop
push
xchg
pop
(bad)
test
push
inc
inc
adc
xchg
ret
jl
(bad)
or
retf
jnp
sbb
mov
pop
sub
cmc
inc
sahf
and
fadd
pop
add
add
dec
and
or
or
adc
adc
push
(bad)
(bad)
(bad)
call
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
sbb
lock
cmp
cmp
cmp
ds
inc
inc
inc
sub
adc
fadd
xchg
(bad)
and
or
ret
test
add
mov
les
aam
adc
mov
ret
jp
xor
outs
adc
and
(bad)
aas
or
jns
jnp
jge
jg
pop
cs
shl
add
test
push
cmp
inc
sbb
xchg
jb
pop
clc
ss
mov
(bad)
shr
fs
jl
jmp
add
xchg
test
adc
mov
outs
push
adc
add
add
add
add
loope
(bad)
pop
and
push
pop
push
add
xor
push
(bad)
stc
mov
and
and
add
pusha
push
jo
jbe
out
or
sub
add
sbb
xchg
adc
call
loopne
mov
add
ds
rcr
push
rol
das
retf
jno
std
aas
inc
icebp
pusha
inc
mov
clc
ret
movs
add
xor
or
pushf
les
outs
imul
push
cmp
dec
push
gs
repnz
jo
xor
jae
or
xchg
inc
sbb
rcl
cs
ja
push
xor
lea
outs
jl
shr
je
(bad)
xor
push
pop
cmp
mov
movs
mov
add
xchg
mov
sub
xchg
popf
inc
shr
add
jmp
call
mov
inc
pop
mov
daa
ds
push
lods
xchg
mov
cld
cmps
imul
ins
bound
popf
xchg
jmp
mov
push
xchg
shl
xchg
imul
jl
mov
loop
fdivr
jns
cli
jae
cmp
repnz
(bad)
mov
cmp
fisub
mov
lds
stc
repnz
xchg
lds
cmp
loope
and
jl
jmp
mov
repz
in
pop
push
(bad)
out
cld
cdq
jns
retf
cmp
sahf
mov
mov
(bad)
aas
pop
ja
xchg
int3
xor
aas
inc
pop
adc
loope
or
(bad)
inc
jae
aas
mov
fwait
jmp
retf
loopne
dec
pushf
nop
jg
dec
popf
mov
mov
in
xor
pop
jne
inc
gs
mov
iret
imul
mov
clc
lods
jbe
mov
(bad)
push
inc
lahf
out
mov
xchg
(bad)
dec
aas
aad
pop
push
pop
sbb
test
pop
bound
stc
inc
aas
push
das
pop
pcmpgtw
shl
jge
mov
mov
inc
aas
invlpg
aas
mov
loopne
mov
mov
mov
jg
mov
loop
mov
mov
mov
jg
mov
inc
adc
inc
pop
mov
pop
enter
mov
enter
aas
rcl
push
pop
mov
fmul
mov
adc
jg
call
bound
ss
mov
xor
aas
jno
cs
mov
or
cmp
mov
mov
in
sbb
mov
sar
push
mov
inc
jg
(bad)
cmp
sbb
mov
inc
xlat
(bad)
inc
test
xor
adc
(bad)
jg
add
push
pusha
xor
add
pop
sbb
jg
pop
sbb
inc
mov
ret
(bad)
jg
adc
jg
push
test
push
jg
loope
mov
jle
repz
mov
movs
aas
sbb
pop
ins
rcl
(bad)
in
jg
mov
jecxz
(bad)
ds
cli
ds
ins
xor
inc
jg
es
in
cmp
pusha
sbb
nop
cmp
gs
out
jae
add
mov
arpl
dec
pusha
in
pop
out
add
cmp
push
mov
rol
push
leave
(bad)
aas
retf
dec
mov
add
(bad)
or
inc
(bad)
mov
adc
pop
ins
popf
add
aaa
or
push
pop
punpcklbw
mov
pop
stc
(bad)
xor
sub
inc
adc
inc
inc
xchg
cmp
sahf
mov
cmp
hlt
in
shl
or
aas
sub
es
dec
jnp
(bad)
(bad)
jmp
add
mov
xor
sub
aaa
(bad)
mov
xor
je
adc
enter
mul
enter
cld
jmp
sbb
ins
jnp
pop
cmps
call
pop
mov
pushf
das
jo
sar
(bad)
mov
shl
in
jecxz
mov
mov
ror
jnp
lock
lds
inc
dec
jmp
mov
push
bound
test
cmp
jb
push
adc
mov
(bad)
mov
pop
mov
imul
call
aam
ret
cmps
out
(bad)
inc
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
(bad)
(bad)
push
out
cwde
sub
cmp
jl
gs
imul
or
test
call
jb
aaa
mov
add
cmps
test
mov
mov
jne
sub
(bad)
cmp
mov
or
push
add
dec
clc
rcr
fisttp
mov
cmp
jge
int3
stc
dec
dec
cmp
cmps
jno
pop
mov
shl
xor
cmps
push
(bad)
mov
dec
lahf
test
xor
dec
cmps
fiadd
mov
idiv
out
jmp
or
add
adc
cmp
mov
or
add
cmp
(bad)
(bad)
sar
mov
xchg
nop
jbe
daa
sub
aad
mov
repz
fwait
int3
and
mov
pop
out
shl
popf
push
sub
add
xor
mov
inc
outs
or
loope
nop
cmp
push
dec
fnstsw
stos
xor
xor
outs
out
mov
cdq
test
outs
outs
shr
test
mov
and
fdiv
xchg
and
push
add
outs
xchg
mov
mov
push
xchg
xchg
sbb
mov
stos
or
jle
call
call
cmps
cmps
pop
mov
popa
sahf
enter
jmp
call
lahf
push
inc
lods
inc
mov
jae
mov
loope
gs
dec
(bad)
(bad)
jg
iret
ss
addr16
mov
adc
dec
cdq
mov
enter
xchg
int
outs
(bad)
cmp
xchg
inc
fldcw
jmp
(bad)
inc
outs
mov
pop
xor
cmp
ja
cdq
scas
icebp
cmp
push
pushf
mov
int
push
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
lahf
cmp
into
xchg
sub
scas
jno
aad
(bad)
nop
lock
cs
in
jnp
or
add
outs
mov
jl
pop
pop
and
push
mov
jae
test
cmp
std
jns
mov
sahf
xchg
retf
xchg
ja
mov
call
data16
(bad)
(bad)
jmp
mov
scas
add
mov
bnd
int
pop
(bad)
jmp
dec
xlat
push
ror
int3
mov
scas
xor
push
test
fwait
sbb
(bad)
(bad)
jmp
test
rcl
icebp
addr16
imul
nop
out
fsub
std
pop
icebp
fwait
mov
cdq
fbstp
or
jnp
pop
dec
sub
pop
cmp
push
mov
fcomp
pop
push
lods
xchg
rcl
pop
mov
sti
dec
out
xchg
xchg
dec
sbb
mov
jnp
xchg
cld
pop
ror
scas
add
cs
repz
(bad)
daa
outs
xchg
cmp
nop
movs
mov
and
cmp
pop
popa
out
sbb
(bad)
call
xor
outs
pop
jbe
ltr
mov
fcom
sahf
add
out
cmp
inc
(bad)
xlat
mov
or
or
fs
add
arpl
sti
fisttp
fsub
jno
or
aaa
loope
div
inc
or
sbb
xchg
std
aas
jae
out
(bad)
(bad)
movs
jge
push
pop
in
and
ss
fmul
out
dec
pop
push
aaa
mov
mov
lock
pop
outs
gs
popa
outs
push
add
bound
jns
push
xor
clc
mov
xor
data16
data16
loopne
lahf
mov
jns
outs
je
arpl
pop
mov
fs
sbb
je
cmp
pushf
xor
lods
ret
mov
imul
mov
jmp
jl
sbb
fdivr
pop
pop
fdivr
cmps
fnstsw
pop
fsub
inc
gs
pop
jo
adc
fiadd
xor
sub
mov
add
(bad)
pop
ss
popa
jae
inc
xor
push
rcr
cmps
adc
pop
lea
scas
inc
outs
stos
push
dec
xor
xchg
inc
mov
and
and
xchg
scas
dec
add
test
add
adc
add
add
add
or
rol
add
ins
add
in
add
add
add
push
mov
mov
add
inc
sbb
add
sub
adc
(bad)
(bad)
mov
add
mov
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
pushf
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
push
mov
rol
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
(bad)
(bad)
(bad)
call
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
test
stc
cli
sti
cld
std
push
xor
or
mov
push
or
sub
(bad)
fsub
js
xor
push
xchg
cs
fist
add
inc
xchg
or
xchg
add
and
and
shr
les
push
outs
jne
push
ficomp
dec
arpl
aaa
and
xchg
pop
and
popa
fs
mov
inc
outs
sub
mov
push
outs
jp
cmps
aam
push
gs
jp
ins
mov
xlat
into
dec
and
or
push
ins
daa
addr16
cmp
cs
or
in
arpl
cdq
inc
ds
or
adc
sub
ja
cwde
addr16
adc
pusha
jmp
jae
or
jbe
gs
ins
mov
mov
daa
jne
dec
popa
jns
popa
arpl
add
and
and
lea
sub
cmp
popa
pop
dec
mov
inc
ins
xchg
outs
mov
js
pop
lds
jne
jae
add
and
and
push
sbb
test
daa
arpl
push
jo
(bad)
mov
xor
cmps
bound
mov
and
mov
ins
cld
imul
daa
push
mov
bound
inc
pop
sub
outs
je
pusha
sbb
out
gs
or
jo
outs
imul
sbb
in
imul
jae
daa
mov
imul
jo
mov
(bad)
push
sub
or
push
jmp
cmp
jne
repnz
sub
lods
xor
jae
mov
ret
push
data16
popa
sub
call
(bad)
pop
sbb
(bad)
daa
nop
mov
mov
imul
add
xchg
fs
test
das
xor
sbb
jbe
push
cmp
mov
sbb
imul
sub
gs
outs
pop
xchg
or
xchg
pop
add
mov
shl
dec
daa
xlat
outs
icebp
xor
lods
daa
ins
sub
mov
test
add
jno
in
retf
dec
clts
mov
imul
inc
stos
or
mov
sub
std
pop
mov
arpl
and
jae
jmp
dec
push
punpckhbw
mov
inc
dec
dec
inc
xor
wrmsr
pop
sub
call
and
dec
push
adc
addr16
mov
aas
push
aam
pop
into
into
sub
(bad)
mov
push
call
mov
cmps
rcl
pop
dec
dec
dec
movs
test
sbb
imul
inc
scas
add
test
inc
aam
ror
sub
inc
mov
xchg
cmps
rol
dec
push
fsubrp
dec
pop
dec
dec
push
cmp
dec
push
movaps
imul
push
inc
call
xor
push
fadd
dec
push
imul
inc
test
push
call
test
inc
cmp
imul
dec
add
push
call
pop
shl
push
lods
pop
push
jns
test
push
inc
or
dec
scas
mov
push
mov
fst
fs
inc
lahf
pop
outs
mov
retf
das
push
inc
pop
inc
dec
cmp
xor
cs
ins
inc
lahf
sub
sbb
dec
jle
cmp
prefetcht0
add
lahf
hlt
push
push
dec
push
ficom
pop
fcomp
inc
ror
(bad)
daa
xchg
push
shl
jbe
jl
nop
jo
stos
test
pop
adc
dec
sub
adc
and
lock
push
dec
push
shl
ret
lahf
dec
and
mov
and
ror
je
daa
aaa
ins
popa
mov
and
jb
repnz
push
jo
add
cmps
and
daa
pop
and
fisub
adc
jo
mov
adc
pusha
ins
fisub
mov
or
rcl
mov
cmp
adc
jbe
stos
div
xor
or
jne
out
ins
inc
inc
jmp
pushf
push
rcl
lahf
fs
rol
sub
rcl
out
mov
pushw
inc
inc
in
add
xor
popa
dec
cmp
or
gs
rcl
and
lahf
xchg
add
mov
idiv
push
push
jae
(bad)
mov
dec
or
cmp
(bad)
into
outs
add
push
popa
ins
ins
jae
adc
cmp
pusha
adc
shl
loopne
adc
inc
push
push
retf
ret
ins
fcomi
inc
dec
push
jne
repnz
cmp
push
into
sub
push
lods
xchg
scas
dec
sbb
add
pusha
push
xor
call
and
dec
xchg
inc
mov
push
sbb
xor
pop
jne
fadd
mov
jg
sub
push
or
mov
je
outs
xchg
daa
xchg
mov
popw
call
jl
cmp
cmp
cmps
jnp
not
das
push
sub
cmps
fist
dec
jle
add
sub
xchg
cmp
sbb
data16
cmps
cmp
sub
sub
int3
loopne
push
mov
ror
push
cmp
rcl
lahf
xchg
pop
js
and
pop
jne
aam
fs
jb
mov
je
imul
push
gs
push
push
mov
pop
shl
addr16
push
or
sbb
je
imul
fs
jo
sub
dec
inc
jl
jmp
iret
rep
fisubr
clc
in
loopne
cmp
sar
sub
push
cwde
push
nop
pop
jl
iret
repz
repz
repz
push
cmp
pop
pop
push
push
dec
dec
cmp
repz
inc
cmp
xor
cmp
repz
and
iret
repz
sbb
adc
or
sahf
addr16
add
sahf
out
lock
rol
out
sahf
out
mov
rep
sahf
sub
stos
in
enter
iret
repz
inc
and
adc
repz
int3
shl
sahf
out
xchg
je
and
repz
test
shl
loope
mov
push
enter
sahf
mov
jne
add
aaa
mov
adc
add
add
mov
xor
adc
add
daa
cmp
inc
pop
cdq
jge
inc
test
push
and
int
imul
add
or
js
jo
add
or
mov
clc
push
outs
outs
je
repnz
mov
xor
push
dec
inc
dec
cmovns
add
(bad)
retf
aaa
inc
das
push
stc
adc
(bad)
jg
test
push
jnp
jg
jo
fist
xor
(bad)
(bad)
jge
inc
mov
test
sub
push
inc
adc
adc
xchg
dec
fwait
xor
add
add
add
std
push
ins
std
rcl
xchg
mov
mov
fmul
call
pusha
clc
sub
scas
div
loop
shl
jae
lea
jmp
pusha
arpl
pop
pop
xor
daa
or
add
inc
sub
bound
test
push
xor
out
jg
push
mov
int
lods
dec
ds
mov
push
jmp
mov
ins
push
fild
mov
sti
fwait
icebp
out
sbb
test
xchg
pop
mov
and
mov
push
push
cld
shl
mov
cmp
sbb
retf
rcr
push
inc
dec
mov
les
lahf
pop
enter
pop
adc
test
adc
enter
or
loopne
popa
push
or
scas
int
mov
leave
loop
aas
fist
xchg
push
mov
xor
test
and
fidiv
fld
(bad)
jg
pop
pop
in
add
out
enter
pop
add
dec
pop
pop
mov
jmp
fmul
in
mov
lods
outs
jle
aaa
push
inc
add
and
jg
dec
sbb
scas
sub
jb
cs
adc
loopne
mov
pop
push
add
xor
int3
cld
call
cld
push
and
pop
sbb
cmp
sub
adc
dec
mov
in
push
iret
(bad)
bound
pop
and
adc
add
add
xor
jge
test
xchg
popf
lds
movs
xchg
or
pop
fadd
mov
pop
add
dec
es
cdq
jg
and
fwait
ins
pop
or
and
pop
jb
mov
jb
pop
jb
daa
fs
jb
pop
adc
sbb
pop
push
jb
pop
jb
mov
jp
xchg
and
jb
test
and
jb
imul
int3
jl
dec
cmp
fadd
pop
mov
and
jb
test
jb
pop
jb
stos
addr16
jb
pop
data16
and
jb
pop
pop
jb
pop
jb
mov
pop
mov
jb
stos
mov
and
jb
scas
scas
pop
jb
pop
mov
mov
pop
jb
mov
jb
pop
jb
mov
pop
mov
jle
add
(bad)
jg
add
pop
ds
das
adc
pop
aad
movsx
mov
repz
daa
pop
das
mov
rcl
xchg
inc
(bad)
mov
or
cmp
rcl
cmp
(bad)
jp
retf
pop
mov
add
into
pop
adc
test
sbb
push
std
fwait
out
iret
pusha
sbb
retf
fistp
push
push
gs
push
inc
es
sbb
push
les
stc
ror
adc
mov
loopne
out
ins
and
lea
push
jae
push
jge
add
das
dec
cmp
add
mov
inc
lods
push
outs
imul
shl
mov
inc
push
xchg
imul
stos
and
sub
and
inc
mov
(bad)
hlt
add
inc
add
(bad)
jl
or
mov
repnz
bound
aam
mov
nop
repz
jae
mov
push
jb
ror
sar
in
ja
popa
sub
daa
daa
xchg
lock
xchg
cmps
imul
add
adc
and
ret
mov
pop
ja
inc
sub
push
push
push
cmp
adc
outs
jne
push
pusha
dec
jp
jo
and
and
(bad)
icebp
jo
dec
and
and
and
sub
jg
jae
jno
xchg
out
or
pop
jg
stos
fcomp
jle
jns
jne
dec
and
lea
enter
and
ins
loopne
fisubr
and
mov
int3
push
and
adc
les
jo
push
xchg
or
fimul
jle
outs
imul
xor
out
pop
je
push
mov
adc
inc
push
imul
fisubr
push
push
(bad)
ficomp
imul
and
repnz
or
and
xor
cld
sti
lods
sbb
pop
sti
outs
popa
jo
fiadd
popa
cmp
dec
nop
dec
jmp
pop
or
adc
and
out
jae
test
pop
xchg
push
jno
adc
sbb
jmp
xor
addr16
sbb
or
jle
add
jae
pop
fstp
(bad)
pop
pop
and
xor
inc
popa
not
add
xor
pop
mov
ja
dec
and
test
adc
push
arpl
popa
adc
in
sub
and
rol
sbb
inc
js
jo
pop
inc
and
daa
inc
mov
rol
xchg
jp
mov
fadd
and
add
mov
or
es
jne
pop
cmp
out
in
ret
sbb
aaa
mov
ret
inc
sub
dec
mov
cmps
call
packsswb
push
push
inc
sub
cmp
rdtsc
ss
das
push
dec
dec
inc
dec
cmp
arpl
dec
ds
cmp
lea
adc
not
out
dec
shl
dec
add
push
je
mov
cmp
or
daa
inc
es
push
retf
xor
out
dec
dec
push
test
cld
dec
sub
mov
aas
push
mov
shl
loop
or
iret
add
push
xor
or
add
push
lds
daa
fmul
fnstsw
pop
push
xchg
movs
mov
inc
aas
mov
pop
imul
cdq
add
xlat
add
add
inc
lods
mov
dec
and
jb
pop
inc
adc
push
ins
pop
sub
mov
nop
rcr
add
mov
outs
dec
dec
and
adc
dec
push
add
or
inc
cs
hlt
add
mov
loop
popf
jae
cmp
sub
aam
lea
aad
jne
mov
cs
pop
dec
inc
lahf
inc
aaa
leave
inc
xor
dec
pop
lods
xchg
add
gs
outs
or
xchg
add
fld
or
aaa
call
popa
ret
or
gs
jecxz
mov
stos
mov
push
aam
or
jmp
js
lods
xchg
adc
out
inc
ret
ret
xchg
sub
pop
jecxz
dec
pop
dec
aaa
push
test
ds
loope
jne
fs
or
pop
sub
fadd
push
outs
sub
(bad)
pop
outs
xor
push
test
sbb
mov
aaa
add
fidiv
fs
push
or
jae
or
ss
js
addr16
loope
daa
dec
jae
adc
add
outs
jae
fisubr
jo
mov
jb
iret
aam
(bad)
jge
adc
or
xchg
retf
in
pop
or
jb
pop
mov
outs
mov
movs
dec
mov
push
add
cmp
ret
sbb
data16
mov
dec
fcomp
and
jmp
sti
sbb
sub
sahf
lahf
mov
scas
(bad)
fcomp
cmps
imul
adc
inc
push
or
scas
jnp
sub
push
cmps
cmc
pop
xchg
dec
aaa
jae
add
add
cmp
loop
aaa
test
mov
pop
sub
sbb
jmp
aaa
pop
mov
push
mov
xchg
shl
pop
jmp
ins
xor
ja
pusha
test
add
fwait
jnp
inc
cmp
fild
push
scas
push
bound
xchg
data16
mov
xchg
pop
inc
outs
push
mov
jbe
dec
(bad)
in
fwait
pop
fs
jmp
test
mov
iret
jae
pop
sub
mov
add
push
imul
das
pop
xchg
mov
lods
arpl
aaa
data16
and
stos
ins
xchg
frstor
push
test
push
rol
or
imul
and
dec
push
mov
fcomp
sub
fmul
mov
mov
bound
push
jmp
push
xlat
dec
dec
pop
add
sub
outs
ret
scas
and
xchg
xchg
dec
adc
icebp
inc
les
pop
imul
push
push
jp
aas
repz
iret
stos
push
add
push
loopne
add
aaa
arpl
ins
sahf
dec
shr
xor
add
or
sub
push
scas
iret
and
mov
mov
ret
es
xor
add
pop
ror
mov
shr
imul
cmp
in
push
sub
mov
das
fs
jg
mov
bound
rcl
dec
repz
mov
out
add
fiadd
jg
pop
in
add
stos
push
add
pusha
add
repnz
lods
mov
push
jmp
mov
adc
cmp
adc
das
test
mov
pop
sar
inc
pusha
or
add
aas
shr
das
shl
pop
pop
daa
loopne
and
enter
sbb
ret
das
out
test
stos
inc
jmp
rcr
cmp
pop
outs
add
add
lods
cmps
or
outs
jecxz
in
adc
cmps
bound
cmps
jae
sbb
sub
repz
jl
mov
aaa
les
scas
fst
rol
inc
push
sar
add
push
mov
jb
jecxz
data16
arpl
jbe
add
mov
(bad)
xchg
mov
mov
(bad)
cmps
dec
(bad)
push
jno
aas
jo
js
pushf
ret
sbb
cs
mov
fbld
push
fadd
mov
inc
mov
retf
dec
loop
and
pop
mov
(bad)
mov
jae
mov
jbe
gs
arpl
sbb
(bad)
pop
fild
mov
jb
je
js
aaa
add
pop
test
inc
adc
and
inc
(bad)
xlat
pop
dec
xlat
mov
arpl
cmp
mov
add
jecxz
fistp
ss
xchg
dec
and
jmp
scas
xor
imul
sub
je
pop
lock
into
das
add
adc
dec
stos
sub
and
les
js
add
das
je
sbb
mov
das
xlat
fild
mov
ret
or
xchg
xor
arpl
inc
and
rcr
mov
jl
xor
or
mov
cmp
mov
pop
out
mov
or
inc
inc
mov
inc
fist
adc
out
ss
mov
xchg
xchg
cmp
mov
mov
ficomp
mov
sub
scas
js
mov
xchg
lahf
sbb
mov
sub
adc
call
movs
sub
(bad)
pop
pop
mov
ret
outs
jne
out
outs
addr16
ror
imul
mov
add
bound
or
test
inc
pop
inc
mov
and
xchg
pop
inc
jmp
cmp
and
xchg
aas
jle
aas
and
inc
mov
xor
test
cs
iret
and
rcl
add
cmp
jmp
or
mov
jo
pop
ds
xchg
shl
mov
cmps
sbb
cmps
retfw
inc
mov
inc
sbb
sbb
mov
pop
dec
inc
test
xlat
mov
mov
fstp
add
ins
mov
stos
ret
jecxz
pop
jnp
sahf
loopne
popa
scas
sti
pop
mov
push
rcl
fwait
push
mov
inc
inc
movs
vphaddwq
aas
pop
imul
xor
pop
shl
punpcklwd
cmps
and
sahf
fucomi
xchg
cmp
xor
xchg
ficom
das
outs
jae
ds
cmp
cmp
test
sub
mov
push
inc
push
aaa
test
adc
sbb
imul
push
fadd
call
iret
xor
and
sbb
in
rcr
iret
jo
movs
xchg
ja
mov
inc
lahf
cmp
adc
loop
jae
xchg
shl
lahf
xchg
(bad)
push
pop
test
sbb
dec
adc
inc
adc
fisubr
ja
stos
inc
jbe
(bad)
cmp
cmp
imul
cmp
pop
jmp
xor
sub
cmps
mov
jp
push
and
call
dec
or
fdivr
arpl
xor
jmp
out
xor
popf
cs
sbb
das
jbe
cmp
mov
lahf
add
int3
push
mov
push
mov
add
mov
shl
aas
inc
or
ss
scas
(bad)
mov
shl
inc
cs
mov
sub
imul
fdiv
dec
nop
mov
cmp
mov
sbb
push
imul
adc
pop
aaa
pop
push
pop
sbb
push
mov
(bad)
cmp
cmp
push
sub
adc
sbb
shr
push
mov
ja
aas
js
add
rcl
ja
outs
xor
shl
rol
js
xor
getsec
sub
mov
pusha
or
test
sbb
push
pop
dec
imul
mov
div
pop
retf
ja
pop
ss
aaa
xor
and
pop
push
shr
lods
(bad)
jae
adc
aam
addr16
pusha
pop
and
sti
xor
xor
or
out
dec
push
addr16
push
add
fisub
inc
xor
dec
push
aaa
dec
and
inc
dec
sbb
jecxz
xlat
aaa
push
xchg
adc
mov
call
push
push
je
fucomp
xor
fidiv
dec
dec
aaa
aas
mov
jns
ss
and
or
or
pop
pusha
mov
(bad)
jg
and
je
sub
movs
cmp
imul
test
jp
ins
and
ins
xchg
cmp
arpl
imul
ja
or
outs
js
cs
sbb
sub
push
dec
sub
inc
mov
mov
inc
cmp
lea
push
or
movsx
sbb
aad
loop
fwait
add
int
push
sub
push
bound
and
shr
jl
ret
rcl
mov
xor
outs
outs
push
xor
inc
lahf
jno
sbb
sbb
scas
or
xchg
cmp
(bad)
data16
push
xor
adc
pop
das
bound
mov
imul
sub
lahf
outs
arpl
fisttp
sbb
pop
xor
fucomi
or
push
xchg
mov
loope
ja
and
push
ret
or
hlt
les
jbe
inc
cmp
arpl
mov
(bad)
fcom
nop
sbb
or
add
add
call
pop
xchg
retf
and
stos
pop
and
cmp
push
das
cmp
jnp
xor
add
ret
mov
adc
imul
inc
or
sbb
rol
sar
ret
mov
xchg
ret
cmps
pop
inc
das
out
push
add
retf
xor
inc
fist
inc
daa
rol
and
fimul
push
push
cmp
push
add
sub
pop
add
sub
int
cmp
aas
pop
sbb
mov
cmp
pop
aas
inc
(bad)
ins
inc
mov
jp
pop
lods
pop
out
jbe
popw
push
(bad)
inc
pop
add
sbb
xor
rcl
push
pop
inc
jo
outs
mov
xor
aaa
xor
add
cmp
jo
jge
push
or
xor
inc
adc
xchg
imul
add
fidivr
cdq
mov
repz
sti
dec
and
and
dec
inc
push
fist
xor
pop
xor
daa
scas
cs
dec
clc
rcr
aaa
mov
add
ja
aaa
mov
xor
xchg
mov
(bad)
mov
mov
xchg
je
fsub
add
shr
(bad)
jae
xor
add
xchg
arpl
cmps
push
jmp
pop
pop
sub
pop
or
test
mov
push
ins
(bad)
loope
outs
push
arpl
xchg
ins
mov
loop
lahf
das
outs
call
mov
pop
outs
sysexit
jecxz
and
pop
mov
xor
inc
mov
arpl
aad
outs
push
aam
ins
int
dec
stos
mov
inc
repz
adc
xchg
adc
adc
push
fidiv
jno
mov
fwait
sahf
push
fsubr
daa
jmp
cmp
and
rol
pop
outs
out
xor
imul
pop
or
mov
or
inc
push
push
xchg
addr16
clc
jbe
das
repz
aas
xchg
stos
pop
inc
mov
mov
mov
xchg
pop
push
vpmaxub
pop
mov
gs
mov
aaa
rcr
mov
or
xor
stos
cmc
(bad)
call
xchg
add
pop
push
lock
sbb
and
pop
lds
sbb
and
mov
jno
addr16
and
add
or
jo
retf
daa
mov
mov
adc
repz
ds
cmp
adc
mov
addr16
daa
test
bound
dec
movs
cmp
bound
arpl
pop
cs
or
adc
pusha
neg
jmp
dec
(bad)
outs
adc
pop
push
ja
bound
pusha
adc
add
mov
cmp
fs
daa
movq
shl
(bad)
mov
shl
push
pop
mov
inc
inc
scas
ret
and
xchg
scas
mov
pop
sub
test
xor
out
jnp
mov
or
js
adc
dec
call
push
xor
xchg
add
mov
daa
push
cmp
neg
xor
es
inc
inc
aas
mov
pop
sahf
xor
mov
sub
xchg
cs
jne
outs
jmp
adc
or
mov
mov
jmp
jnp
adc
mov
call
and
and
(bad)
inc
aam
inc
js
sub
aad
(bad)
mov
mov
arpl
sti
cmp
mov
(bad)
sub
test
jg
sbb
jmp
xchg
neg
dec
push
adc
lea
mov
fisttp
push
adc
cdq
mov
mov
stos
pop
xchg
call
jmp
sbb
add
pop
cmps
pop
xor
outs
jbe
sbb
scas
mov
aaa
data16
xor
add
ins
arpl
ret
mov
xor
add
outs
push
adc
mov
xor
xchg
jg
push
cmc
jg
dec
imul
cmp
ds
ins
or
lea
and
jmp
sub
xchg
mov
inc
and
add
ja
jns
xchg
pop
add
and
movs
lock
mov
push
mov
adc
jns
inc
inc
loopne
cmp
dec
out
inc
inc
inc
add
rol
inc
shl
pusha
xor
cmps
pop
xchg
pushf
push
mov
ja
mov
and
inc
loop
shl
jae
imul
adc
bound
inc
addr16
sbb
cli
mov
mov
pcmpgtb
xchg
test
jmp
mov
push
pop
sub
mov
popf
xor
xchg
xor
adc
push
sbb
mov
jbe
rol
add
sbb
sub
xor
mov
ds
push
add
xor
scas
sub
arpl
ret
inc
addr16
sbb
arpl
mov
mov
fisttp
mov
cmp
adc
mov
addr16
dec
lds
dec
cmps
test
xor
add
mov
pop
sub
aaa
pop
fidivr
jp
sbb
addr16
(bad)
adc
aaa
mov
jg
xor
or
out
xor
pop
loop
jae
jmp
push
jae
sub
adc
inc
sub
push
das
sbb
call
jns
arpl
inc
dec
imul
dec
xor
mov
arpl
xor
inc
ja
add
and
push
push
mov
outs
nop
cmp
(bad)
mov
les
js
inc
add
xchg
cmp
outs
iret
jg
pop
aad
divps
mov
push
sub
push
and
and
lahf
(bad)
(bad)
loopne
pop
mov
mov
or
(bad)
ja
dec
adc
js
inc
(bad)
and
mov
lds
push
add
push
pop
shr
scas
cmp
push
push
pop
mov
xchg
inc
pop
mov
imul
out
sar
adc
and
push
fucomp
hlt
xlat
and
dec
pop
cmp
and
daa
inc
pop
mov
mov
lahf
pop
xchg
dec
sbb
jp
add
mov
jns
add
add
xchg
jb
mov
jo
clc
dec
pop
push
or
mov
add
rol
je
sub
mov
ret
movs
mov
sar
into
shl
push
add
push
scas
pop
mov
inc
dec
movs
pop
sub
movs
pop
es
sti
outs
outs
cmp
and
cmps
adc
sub
daa
(bad)
dec
sub
ja
mov
mov
inc
jecxz
outs
inc
imul
int
scas
fistp
das
(bad)
ffree
inc
mov
sar
mov
je
data16
and
mov
(bad)
jb
sbb
mov
pop
jns
jbe
mov
xchg
stos
(bad)
mov
arpl
mov
mov
bts
push
scas
daa
pop
add
sub
mov
and
mov
push
shr
adc
sbb
div
scas
add
mov
stos
jnp
ret
adc
mov
stos
add
sbb
and
scas
imul
imul
push
jecxz
(bad)
jbe
(bad)
and
loop
or
lds
inc
push
sub
and
add
outs
pop
shl
dec
and
imul
lods
fcmove
mov
and
inc
inc
push
sub
inc
aaa
pop
and
daa
mov
mov
add
jg
push
outs
push
dec
xlat
ficomp
inc
lahf
pop
dec
mov
or
pop
out
xor
add
xlat
iret
inc
adc
add
sub
cmp
scas
iret
push
pop
mov
mov
pop
mov
mov
lods
daa
pandn
pop
push
jo
inc
lahf
inc
inc
mov
ja
mov
dec
pop
push
mov
jge
mov
imul
mov
sbb
sbb
or
sti
dec
add
and
add
jae
inc
popa
fadd
pop
inc
sbb
(bad)
(bad)
and
dec
outs
(bad)
nop
pop
call
inc
mov
ret
xor
imul
icebp
test
inc
iret
rol
or
mov
das
adc
inc
call
test
inc
gs
adc
fwait
js
int
daa
inc
dec
jbe
push
popf
xor
div
sub
dec
pop
inc
add
add
xchg
movs
and
aaa
pop
adc
loope
movs
movs
das
daa
jg
sti
push
lods
dec
xlat
arpl
iret
js
dec
sbb
add
les
popa
out
ins
sub
push
ret
xor
sbb
xchg
pop
jae
push
pop
imul
add
mov
rol
pop
sbb
or
jae
xor
fidiv
jge
lahf
inc
xor
arpl
pushf
xor
lock
jmp
mov
jb
addr16
pop
(bad)
ds
fbstp
out
or
pop
(bad)
pop
pop
rcl
mov
adc
xor
push
dec
outs
xlat
js
pop
mov
cmp
sti
aas
rcr
push
push
das
pop
in
mov
xor
add
ret
bound
idiv
push
jno
xor
pop
ja
or
ds
pop
das
and
test
out
lods
leave
mov
mov
sbb
cvtdq2ps
push
es
and
and
dec
lea
push
dec
fsubr
sub
outs
scas
pop
stos
mov
dec
cs
cmps
mov
pop
aaa
aas
and
inc
adc
sub
sbb
pop
pop
movs
mov
mov
out
mov
xor
xor
pop
xor
add
add
and
xor
js
mov
pop
inc
pop
outs
stos
sub
pop
pop
mov
sbb
pop
out
outs
or
pop
add
dec
(bad)
push
push
pop
xchg
and
jbe
js
add
push
jmp
sub
dec
and
add
dec
cmps
push
jge
cmp
push
sbb
pop
and
xor
xor
push
cmp
push
mov
jo
shl
cmp
out
rcl
xor
adc
js
pop
ror
loope
lock
ror
jns
mov
dec
test
xchg
int
and
jo
sub
adc
cmp
xor
in
add
adc
das
data16
xchg
out
bound
pop
outs
dec
pop
mov
mov
sub
lock
mov
push
pop
hlt
mov
ret
imul
push
add
bound
outs
jne
lds
cmp
not
dec
cs
iret
je
add
or
and
cmps
pop
test
add
adc
xor
ret
push
jmp
ss
or
movs
pop
out
push
mov
leave
pop
jo
fistp
xor
jo
aas
xor
dec
and
call
fwait
iret
(bad)
fild
push
adc
jnp
pop
add
jg
adc
aas
pop
jns
imul
add
fldcw
sbb
and
add
sub
inc
adc
xor
mov
push
jmp
shl
jae
mov
leave
jae
xor
or
ja
neg
(bad)
in
jbe
jecxz
dec
cmps
add
add
das
popf
add
or
rcr
xchg
les
enter
clc
daa
mov
mov
add
call
ss
repz
push
sub
jmp
mov
imul
or
push
mov
mov
iret
mov
mov
mov
lock
jns
mul
repz
push
cmc
adc
mov
fs
das
mov
faddp
test
xor
mov
rol
and
mov
sub
ins
sbb
std
out
enter
push
and
jo
dec
dec
mov
add
and
or
aas
inc
add
(bad)
pop
sbb
icebp
sbb
imul
sbb
cmp
dec
lods
dec
jmp
add
mov
and
mov
and
xor
push
push
imul
mov
adc
sub
and
jg
mov
inc
test
jb
ret
xor
les
lds
leave
leave
aaa
(bad)
cmp
mov
dec
cs
leave
xor
in
xchg
dec
xor
xor
cmp
xor
into
ss
cmp
cmp
jb
adc
shl
dec
dec
scas
sbb
in
xchg
xchg
xor
xor
dec
cmp
in
xchg
dec
fnstenv
sub
mov
sbb
fdiv
fst
xor
xor
xor
xor
dec
cs
xor
xchg
ss
in
sub
mov
sbb
out
xor
xor
cmp
xor
xchg
dec
dec
cs
in
in
aaa
out
cmp
adc
out
(bad)
lock
scas
sbb
xor
in
xchg
dec
xor
xor
cmp
xor
div
idiv
mov
cmp
jb
adc
cli
xor
sti
daa
xor
in
xchg
xchg
xor
xor
dec
cmp
popf
mov
xchg
inc
or
movups
inc
add
add
push
repnz
and
or
nop
push
imul
arpl
movs
push
sub
pop
fisttp
jecxz
movs
test
outs
jns
pop
dec
sbb
adc
cs
rol
jmp
add
inc
jmp
out
inc
jmp
sub
mov
mov
push
out
or
out
push
sub
push
push
cmp
outs
cmps
mov
adc
cmp
jp
cwde
les
push
mov
pop
inc
addr16
mov
daa
jg
adc
movd
sbb
fwait
or
mov
fst
je
or
push
je
adc
and
fs
fcomip
mov
cmp
daa
fs
bound
cmp
inc
push
jb
mul
adc
fs
add
jb
cmp
mov
shl
and
daa
and
or
gs
ins
jo
jp
cmp
sbb
xor
out
adc
das
out
mov
invd
fisttp
mov
ss
pop
popa
and
push
jle
retf
ins
and
arpl
je
sbb
pop
enter
je
pop
or
mov
lods
loopne
cs
push
loopne
(bad)
push
out
imul
in
fcmovnbe
mov
mov
popa
out
mov
and
pop
sbb
popa
arpl
dec
add
add
inc
icebp
mov
out
fwait
sub
inc
adc
lahf
pop
xor
mov
and
cmp
push
or
cmps
jns
test
add
nop
cmp
push
mov
mov
xchg
and
push
xor
sahf
sbb
sub
push
movs
mov
inc
mov
ja
popa
adc
daa
mov
stc
jmp
arpl
fldcw
mov
push
inc
fnstcw
and
or
mov
addr16
gs
dec
stos
imul
lods
xchg
ret
push
fisttp
scas
pop
and
fiadd
mov
push
popa
loop
xor
sbb
xchg
(bad)
repz
push
mov
mov
push
adc
and
inc
inc
push
jo
lods
cmp
dec
push
gs
mov
fs
xor
lock
jne
stos
(bad)
or
mov
imul
pop
cs
sbb
out
loope
and
pop
sbb
mov
fdivr
inc
fisub
add
sbb
out
dec
sub
rcl
xor
in
cmp
adc
jge
mov
stos
stos
jmp
xor
mov
nop
push
add
in
cdq
test
das
push
jb
mov
add
(bad)
gs
popa
das
nop
je
scas
push
push
enter
rol
mov
adc
sbb
xor
push
dec
inc
push
dec
inc
pop
push
mov
pop
loope
jo
push
add
jns
push
xchg
adc
push
xor
or
and
inc
adc
and
push
nop
int
or
enter
and
ret
lds
sbb
fst
ss
(bad)
sbb
dec
jae
sub
dec
xlat
push
rcl
or
pop
and
add
hlt
adc
add
sbb
add
cmp
or
push
movs
cdq
int
add
adc
add
add
adc
mov
add
pop
xchg
xor
cmc
sbb
out
or
push
scas
add
add
dec
add
adc
aam
xchg
mov
inc
dec
nop
add
dec
loopne
cmp
dec
xchg
pop
add
xchg
add
sbb
aaa
add
inc
push
dec
cs
push
(bad)
je
mov
sub
jg
ins
cmp
mov
pop
pop
scas
cmp
dec
push
xchg
sub
scas
jne
mov
xchg
mov
dec
popa
stc
and
bound
inc
cdq
pop
jnp
mul
jo
test
pop
ret
pop
lock
(bad)
mov
add
add
repnz
inc
add
das
jmp
xchg
out
dec
rol
in
jmp
dec
das
clc
ins
pop
push
es
sti
cs
mov
jl
cmp
cs
shr
sbb
lds
popa
and
and
sbb
mov
adc
cmp
xchg
data16
mov
add
push
enter
jne
fs
xor
dec
adc
push
inc
push
dec
add
mov
nop
mov
cmc
pop
lea
mov
sub
iret
pop
in
inc
int3
inc
pop
lds
push
rol
sub
enter
pop
push
rol
xor
cwde
inc
loopne
jnp
rcr
xchg
push
lods
jnp
imul
iret
xor
inc
adc
push
mov
add
leave
dec
ja
add
fs
jp
nop
pop
xchg
(bad)
dec
xchg
pop
sti
adc
push
and
daa
xor
dec
cld
push
sbb
aas
not
adc
inc
jecxz
cmp
lods
repz
push
mov
cmp
inc
mov
push
dec
cs
or
test
dec
pop
push
loopne
dec
dec
mov
outs
inc
addr16
es
cld
mov
inc
adc
inc
add
scas
xor
xor
cmp
adc
pop
inc
mov
dec
dec
pop
xor
lods
das
dec
imul
mov
add
mov
sub
sub
and
cmp
push
ret
shr
out
test
adc
sbb
sbb
xchg
fimul
mov
data16
push
daa
add
xor
mov
test
pop
xor
push
and
push
pop
adc
aaa
iret
mov
cmp
cmp
mov
arpl
nop
repz
mov
neg
pop
xor
(bad)
dec
push
pop
aas
push
addr16
es
(bad)
retf
xor
pcmpeqd
scas
add
xor
(bad)
loopne
aaa
cmp
inc
inc
sbb
cmp
push
dec
add
leave
aaa
adc
add
aas
outs
out
pusha
mov
mov
xor
xor
jmp
jae
rcr
rcr
dec
and
les
or
push
pop
push
dec
or
(bad)
arpl
lods
outs
xor
addr16
hlt
push
into
xor
iret
nop
bound
sub
jmp
pop
loopne
or
and
ja
aaa
mov
and
xor
call
cmp
outs
add
mov
shl
and
add
rol
movs
or
xor
xor
sbb
push
pop
bound
sub
sub
cmp
pop
mov
push
push
sbb
jmp
xchg
push
xor
cmp
repz
add
(bad)
pop
aas
cmps
cmp
adc
pop
aaa
jbe
fld
ret
mov
out
mov
pop
sub
scas
iret
cmp
push
mov
das
and
in
xchg
pop
add
jo
gs
inc
call
inc
je
mov
mov
jae
pop
xor
cs
jbe
iret
dec
dec
jo
stos
aas
and
add
sbb
(bad)
mov
jge
inc
ja
dec
ins
add
ins
inc
mov
nop
cwde
or
(bad)
push
lahf
rcl
ins
jmp
aaa
das
sub
add
jg
cli
mov
ins
jecxz
pop
sbb
sub
outs
data16
pop
test
xor
add
stos
arpl
inc
stos
jo
icebp
mov
sub
xor
mov
mov
sbb
add
push
invd
movs
outs
pop
lock
push
into
cwde
inc
dec
cmp
dec
(bad)
imul
ins
add
lock
repnz
inc
add
push
mov
xor
or
dec
mov
push
bound
js
retf
ds
test
jbe
mov
sahf
mul
jns
jb
mov
js
sti
cmp
lods
sbb
or
or
pusha
xor
lahf
pop
test
mov
inc
cmp
das
pop
scas
xor
adc
add
das
(bad)
and
sub
sbb
inc
add
mov
mov
dec
popa
daa
pop
adc
das
xchg
inc
pop
xor
add
dec
ja
push
pop
jae
dec
mov
iret
inc
test
sub
and
mov
push
pusha
jo
arpl
dec
or
and
imul
jno
sbb
add
mov
mov
add
sub
push
cmp
dec
and
push
xchg
jo
push
xchg
cmps
pop
inc
fcom
add
pop
pop
das
sub
pop
outs
push
mov
jmp
ins
push
cmp
scas
fisubr
in
mov
jmp
mov
stos
pop
cs
sub
add
aam
jae
mul
stos
jmp
pop
add
dec
pop
dec
and
and
jo
mov
dec
jle
outs
ja
xor
rol
bound
and
fisubr
sbb
and
mov
adc
add
add
in
adc
adc
outs
add
das
add
(bad)
add
and
ror
add
pop
movs
push
push
pop
dec
in
dec
adc
pushf
cmp
arpl
dec
loop
ins
and
or
sub
popa
ins
sub
push
ins
or
mov
jo
repnz
sbb
cmp
and
xor
sub
es
jg
shl
std
arpl
popa
imul
cmp
adc
xchg
repz
loope
mov
aad
push
loopne
dec
mov
add
fwait
mov
in
outs
ins
jne
lods
sub
std
sub
xor
cmp
inc
sub
sub
adc
push
mov
mov
jns
or
dec
outs
nop
jg
sub
add
and
imul
xchg
lock
fwait
and
sbb
push
jae
popa
sub
jmp
dec
jl
add
push
(bad)
ss
jae
loope
mov
ss
cmp
jb
pop
xchg
xor
or
mov
xchg
ret
js
mov
inc
fs
aaa
sub
in
push
xor
and
(bad)
push
xlat
and
push
sbb
outs
or
daa
or
ins
inc
(bad)
data16
and
loope
movs
xchg
stc
scas
push
add
pop
and
sub
cmp
mov
inc
(bad)
out
add
sbb
test
gs
push
imul
int3
(bad)
int3
outs
push
fsubr
xchg
add
ret
cmp
addr16
xor
mov
popa
xor
cdq
push
and
cmp
out
das
and
adc
aas
inc
push
dec
push
push
and
inc
push
inc
inc
dec
rol
test
push
mov
dec
(bad)
and
dec
pop
sub
inc
setae
jmp
gs
aaa
or
cmp
ins
or
cmp
lods
fs
cs
addr16
sub
nop
cmps
xor
das
and
popa
mov
fnsave
or
jnp
arpl
and
cs
inc
inc
cmp
outs
adc
aas
addr16
push
(bad)
daa
std
stos
and
sar
inc
fistp
jg
or
or
xchg
in
or
outs
daa
adc
jns
push
sub
call
fistp
pop
popa
addr16
fld
das
imul
popa
mov
psubsb
imul
and
cmp
inc
and
mov
jge
pusha
inc
mov
xor
stc
ja
sub
aaa
cmp
sbb
push
dec
shl
xor
jnp
shr
or
and
aas
arpl
xor
xchg
sub
jle
and
sub
jnp
or
sub
xor
mov
or
jbe
sub
mov
bound
sbb
dec
sub
pop
js
pop
fld
xchg
xor
cmp
gs
add
mov
xchg
fcmovb
mov
and
inc
push
fwait
mov
sbb
add
mov
cmp
push
ins
xor
mov
bound
call
push
adc
add
fiadd
jae
jae
xlat
add
push
sub
jnp
and
and
lods
enter
push
xchg
cmp
bound
push
cmp
push
outs
fs
(bad)
push
pop
and
push
popa
or
ins
daa
jb
jmp
push
(bad)
cli
and
loop
je
rol
or
add
sub
pop
or
add
or
fwait
imul
mov
mov
outs
addr16
sub
mov
add
leave
mov
imul
and
sbb
push
lods
xchg
inc
jb
and
cmp
or
cmps
sub
and
fwait
pop
aas
xchg
lods
dec
loop
adc
and
add
daa
xchg
cmp
into
push
pop
mov
gs
add
or
gs
push
pop
mov
neg
jns
mov
and
mov
cmp
(bad)
mul
and
add
inc
sub
scas
loopne
sub
leave
add
sahf
inc
adc
test
mov
add
sbb
fsubr
les
pop
xor
rcl
jge
addr16
shl
or
inc
or
mov
dec
popf
add
adc
outs
inc
je
xlat
sbb
mov
push
xor
fwait
inc
arpl
mov
and
outs
js
neg
and
popa
and
ret
pop
mov
sbb
lock
and
inc
int3
inc
arpl
retf
les
das
and
mov
ftst
pop
(bad)
mov
add
inc
push
sub
or
les
inc
daa
sub
pop
sub
ja
cmp
out
sub
imul
(bad)
addps
popa
fs
mov
jnp
fs
inc
and
icebp
mov
xor
sbb
ror
enter
push
int3
icebp
jb
outs
mov
sbb
test
add
pop
cmc
adc
sub
sub
sub
pusha
sbb
stc
inc
and
or
add
cmp
push
adc
and
sbb
cwde
mov
add
sbb
loopne
add
cmc
xchg
mov
repz
push
(bad)
mov
repz
shr
push
jno
mov
xchg
stc
sub
inc
das
pop
mov
aaa
xlat
add
xchg
sub
push
arpl
mov
cmp
in
jmp
aam
fadd
test
push
sbb
and
cmps
cmp
dec
adc
xchg
fild
popa
inc
test
jo
popa
and
and
or
and
movs
addr16
fdiv
or
sub
mov
data16
shl
std
sub
call
xchg
sbb
mov
outs
lds
(bad)
cmp
adc
aad
jne
dec
test
mov
adc
mov
inc
lods
jmp
fimul
test
lds
pushf
cmp
in
mov
adc
outs
call
jo
cmp
iret
push
pop
aas
mov
fwait
ins
xchg
cmp
sahf
lods
scas
push
dec
inc
sub
add
and
imul
mov
jge
lods
pop
jge
test
idiv
push
sub
xor
mov
jl
push
popa
mov
add
push
gs
scas
push
inc
shl
xor
jge
jge
inc
push
arpl
(bad)
jg
cli
ins
gs
jbe
or
push
inc
inc
dec
push
dec
pop
mov
int3
test
mov
outs
ins
ja
and
lds
test
dec
dec
pop
add
sbb
sbb
dec
inc
inc
ins
es
add
mov
or
mov
jg
add
les
sub
push
adc
arpl
mov
mov
push
imul
out
xor
mov
and
dec
add
(bad)
sub
or
add
fisttp
inc
xor
ucomiss
bound
add
and
and
adc
outs
adc
dec
pop
loopne
dec
xor
xor
(bad)
fiadd
dec
inc
pop
add
or
xchg
fisubr
idiv
and
outs
and
or
cmp
xor
loope
out
or
jnp
jo
(bad)
sbb
popa
xor
shl
and
or
dec
xor
and
ins
dec
das
in
xor
dec
xor
mov
cs
jbe
jmp
(bad)
mov
or
sar
stos
add
or
pop
loope
xchg
jbe
das
ror
inc
shl
xor
bound
sub
les
and
mov
cmp
inc
imul
xchg
cdq
adc
mov
int3
fisub
imul
fwait
imul
(bad)
je
ja
je
push
and
push
push
inc
push
inc
pop
dec
inc
dec
or
out
add
xchg
jo
sbb
push
lds
dec
shl
and
or
(bad)
inc
fisttp
retf
loope
xor
and
jae
data16
sbb
add
dec
cdq
jnp
jae
in
neg
cmp
retf
and
push
rol
push
push
test
arpl
(bad)
fsub
popf
jbe
mov
xchg
mov
inc
mov
sbb
or
inc
test
add
or
inc
jmp
add
adc
mov
jg
imul
(bad)
and
adc
dec
jge
imul
cwde
add
push
(bad)
jne
jae
lods
xor
imul
mov
fbstp
dec
mov
pop
cmp
add
pop
inc
or
and
in
mov
aaa
ins
ror
inc
push
ins
aad
(bad)
fistp
mov
arpl
pop
pop
mov
add
pusha
add
pop
pop
aaa
xor
or
adc
pop
ja
dec
and
push
pop
sbb
mov
pop
add
xor
enter
cmp
cwde
pop
ins
sub
or
inc
imul
dec
jne
imul
iret
add
bound
xchg
push
add
outs
push
lds
push
push
push
lahf
sub
ins
sub
inc
add
inc
or
xchg
pop
or
test
and
and
mov
ret
retf
mov
push
add
mov
hlt
cdq
mov
bound
sub
sti
mov
mov
cmp
punpckhwd
adc
pop
dec
and
inc
enter
out
mov
retf
aas
xor
lahf
jg
add
xor
inc
test
adc
cwde
mov
adc
xchg
add
les
pop
stos
aas
push
mov
scas
jbe
push
push
setp
mov
push
data16
mov
cmps
aas
pop
pop
xor
mov
out
addr16
push
imul
pop
mov
xchg
aaa
dec
dec
cs
lahf
daa
pop
sti
or
stos
push
sets
mov
daa
or
dec
add
ret
xchg
mov
fwait
dec
dec
test
or
ds
jno
mov
push
rol
iret
sub
lods
ror
pop
arpl
push
and
xor
push
inc
or
outs
retf
xor
dec
lds
jno
cmps
pop
mov
aaa
pop
loop
jo
rcl
popa
jne
cwde
add
dec
dec
push
and
add
xchg
pop
add
or
ficomp
cmp
adc
pop
mov
popa
xchg
sub
sbb
add
mov
mov
dec
arpl
imul
(bad)
jecxz
xchg
fbstp
(bad)
mov
cmp
mov
stos
inc
xchg
sbb
push
out
sub
inc
add
pop
dec
ins
stos
cmp
sub
(bad)
or
lahf
lea
ret
sbb
and
mov
bound
mov
les
adc
pop
aam
push
mov
pop
xchg
dec
retf
jmp
or
inc
bound
pop
and
cmp
test
aam
daa
dec
adc
inc
sar
mov
mov
and
and
clc
mov
inc
jo
push
add
repz
or
pop
add
jno
jne
ds
test
adc
mov
sub
pop
add
adc
jno
jmp
push
pop
pop
add
lahf
shl
popaw
jae
and
stos
and
aas
mov
fistp
or
adc
movs
movs
push
stos
movq
sub
les
out
push
and
dec
xor
push
(bad)
sbb
pop
pop
das
mov
in
pop
mov
sub
push
cmp
push
(bad)
xchg
fist
test
inc
daa
adc
push
and
add
popf
push
cs
aas
mov
dec
dec
push
dec
mov
mov
pop
push
aas
mov
cmp
add
or
ins
mov
lods
and
cmp
arpl
in
pop
aas
daa
inc
cmps
push
push
and
sbb
test
cmp
addr16
xor
add
jae
lock
or
imul
mov
fidivr
sbb
retf
(bad)
fsubr
sbb
and
cmp
(bad)
xor
out
mov
lds
add
js
pop
dec
mov
cmps
pop
sti
jmp
or
bound
inc
or
sbb
wrmsr
adc
pop
push
push
or
mov
and
add
out
push
xor
bound
sub
stos
out
loop
jge
sti
push
jnp
daa
imul
imul
cmps
push
pop
fisub
adc
imul
popf
nop
or
inc
add
push
adc
xchg
arpl
inc
dec
add
add
inc
mov
adc
mov
or
and
inc
les
scas
sub
cmp
pop
sbb
xor
das
mov
xor
das
fadd
inc
bound
pop
xor
mov
jae
ins
aaa
and
es
or
arpl
pusha
mov
shl
sti
outs
test
arpl
or
arpl
pop
movs
ja
adc
fstp
xchg
pusha
or
rcpps
or
cmp
pop
pop
mov
push
or
push
xor
movs
and
and
shl
dec
nop
mov
add
fisttp
push
adc
push
mov
mov
test
pop
xchg
sub
adc
jae
inc
and
pop
jg
test
pop
es
and
inc
jnp
aad
add
sub
aaa
stos
add
scas
outs
mov
ja
mov
fbstp
out
outs
je
inc
adc
and
loopne
add
cmp
mov
iret
imul
add
arpl
and
inc
mov
push
jo
add
inc
or
or
pop
(bad)
add
stos
push
lods
(bad)
cmps
or
fild
adc
fistp
cmp
adc
mov
push
mov
sbb
sti
imul
outs
adc
int3
sti
sub
test
add
fistp
and
ins
sar
daa
rol
and
(bad)
test
push
ins
push
add
das
dec
inc
test
imul
ss
inc
and
xor
push
or
push
xchg
push
add
cmova
or
and
pop
push
(bad)
jmp
mov
mov
pop
out
xchg
mov
ins
ins
add
das
sub
push
adc
(bad)
mov
jno
bound
stos
sbb
sub
outs
fwait
add
xor
dec
cmp
mov
and
imul
cs
sub
les
adc
or
or
add
dec
js
adc
jecxz
xor
or
call
push
adc
pusha
adc
jg
mov
mov
ret
inc
shr
aad
sub
fbld
push
cmp
pop
es
addr16
inc
add
pop
add
jnp
adc
or
imul
inc
add
ret
les
les
mov
daa
inc
xchg
daa
sbb
inc
sub
push
ret
jmp
inc
les
daa
ret
xchg
add
inc
mov
push
inc
data16
daa
pandn
mov
and
mov
xor
test
pop
or
or
movs
mov
fs
retf
jo
pop
bound
gs
jno
or
ja
pop
inc
and
imul
ja
rcl
push
mov
mov
xchg
sbb
xor
jg
push
push
mov
add
mov
push
call
and
jmp
add
and
pop
cwde
dec
pusha
das
pop
jae
sbb
mov
jle
mov
jae
popa
xor
mov
pop
mov
jb
out
inc
inc
push
add
test
or
scas
imul
out
and
mov
mul
mov
xor
sub
and
and
cmc
fdiv
xlat
sub
ret
adc
pop
inc
add
adc
les
js
sbb
mov
je
data16
sub
dec
loopne
dec
das
and
push
stos
or
out
ja
jg
pop
(bad)
sar
xor
fnstsw
call
push
and
xlat
xor
test
cs
punpcklbw
shl
outs
mov
push
or
adc
lea
dec
jae
in
or
xchg
add
mov
pop
mov
jno
inc
popa
pop
push
dec
pusha
imul
sbb
mov
inc
push
jae
inc
shr
sbb
mov
arpl
jmp
adc
and
shld
jo
mov
pop
pushf
js
dec
sub
fisttp
jbe
adc
mov
inc
arpl
retf
fcomp
aad
push
sbb
sti
inc
or
sub
dec
pusha
adc
pop
sbb
(bad)
adc
pop
aad
pusha
rcl
shl
scas
cmp
mov
add
pop
push
cwde
cmps
outs
xor
jo
fsub
pop
hlt
push
lds
aaa
sti
push
inc
repnz
aad
(bad)
aaa
inc
pusha
and
pop
push
stos
xchg
(bad)
xchg
mov
mov
xor
rcl
add
add
sub
push
inc
xchg
pop
(bad)
mov
and
mov
sbb
xor
sbb
mov
xchg
mov
or
(bad)
sub
pop
ror
mov
xlat
lea
push
push
sbb
(bad)
aaa
mov
mov
pop
add
and
das
out
sbb
push
(bad)
dec
test
das
pop
shl
xor
out
ins
(bad)
dec
push
jg
daa
loopne
ss
jmp
mov
shl
mov
jmp
add
ret
pop
fist
sub
pop
lea
inc
(bad)
test
push
repz
dec
lahf
xor
pop
sub
mov
adc
stos
pop
retf
call
jo
pop
fisub
mov
add
add
pop
xor
add
mov
jecxz
in
add
cmp
imul
mov
inc
pop
cmps
push
scas
push
xor
cmp
push
cmp
outs
hlt
retf
test
adc
xlat
ins
xor
dec
jae
rcl
nop
shr
mov
int
ret
pop
ins
popa
inc
sub
mov
aaa
sub
ss
gs
sbb
push
fwait
out
iret
cmp
add
cmp
out
sahf
out
pop
nop
jg
iret
repz
inc
(bad)
(bad)
dec
cmp
repz
(bad)
push
cli
push
push
jp
jo
xor
xor
loopne
mov
cmp
inc
pop
dec
jmp
xor
pop
loope
pop
movups
mov
iret
push
jae
push
pop
das
jo
sahf
aaa
and
ds
or
dec
dec
dec
pusha
and
cmp
push
aas
sahf
ja
jb
sbb
dec
dec
dec
js
rcl
in
in
push
in
or
in
in
push
unpcklps
cmp
cmp
enter
cmp
cmp
cmp
inc
call
or
pop
sbb
daa
daa
daa
iret
push
push
jl
fdiv
rcl
jb
jb
mov
jb
jb
add
jb
jb
mov
jb
jb
or
jb
jb
movs
add
jb
pop
pop
sbb
jb
xchg
inc
jp
jb
jb
aam
push
jb
jb
mov
mov
jb
jb
add
daa
iret
rol
jbe
daa
daa
daa
daa
int3
pcmpgtd
daa
daa
daa
daa
lods
push
xchg
daa
daa
daa
in
or
daa
daa
daa
daa
pushf
arpl
dec
outs
daa
daa
fcomp
aas
outs
cmp
push
aas
mov
xor
cld
add
push
call
jb
push
popf
cmp
xor
daa
pop
jb
popa
and
add
jb
pop
sbb
jns
shl
jb
imul
jb
mov
push
test
add
pop
enter
xor
pushf
pushf
and
test
pop
enter
jge
leave
leave
test
leave
leave
mov
pushf
pop
enter
ret
enter
jae
(bad)
pushf
pushf
pushf
pop
arpl
cmps
add
inc
out
enter
sbb
pushf
cmp
imul
leave
leave
sub
enter
push
pop
jb
jb
ja
into
daa
daa
daa
pop
addr16
scas
pop
and
daa
daa
xchg
pop
jb
jb
pop
sahf
jg
and
daa
aas
fisubr
xchg
fucomi
in
mov
push
stos
ret
inc
inc
and
es
mov
cdq
mov
es
mov
jmp
cdq
(bad)
xchg
mov
lds
in
aad
and
mov
lods
and
es
mov
std
cdq
dec
es
ret
mov
jecxz
and
pop
and
fs
xor
and
leave
inc
fist
xchg
dec
mov
xor
cmps
out
xchg
dec
and
xlat
and
not
scas
adc
inc
xor
lahf
fbstp
xchg
dec
and
(bad)
(bad)
cmp
aaa
push
add
push
adc
cmps
repnz
adc
pop
stos
cmp
push
add
inc
pop
inc
jg
xor
aaa
add
pop
add
jns
retf
push
or
repnz
or
shl
enter
sbb
xor
push
popa
pusha
enter
add
xor
or
and
or
(bad)
fist
dec
add
mov
pushf
sti
mov
fist
add
add
imul
cmc
pusha
push
xor
xor
inc
mov
imul
fs
in
outs
mov
fst
or
or
jne
out
or
pop
push
sub
sbb
xchg
or
dec
xor
push
mov
out
ret
cmps
bound
mov
jecxz
add
pop
in
cs
add
out
cs
mov
mov
sahf
out
pop
out
jle
xor
and
jns
rol
(bad)
(bad)
rol
idiv
inc
dec
(bad)
mov
inc
pop
fild
sbb
data16
iret
or
pop
cmp
cmp
or
cmp
cmp
or
add
dec
jecxz
xchg
xor
ja
popa
push
out
mov
(bad)
(bad)
(bad)
inc
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
(bad)
(bad)
dec
mov
sub
mov
sbb
dec
jno
repz
test
(bad)
(bad)
(bad)
call
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
call
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
(bad)
(bad)
(bad)
cmp
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdivr
(bad)
(bad)
push
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
(bad)
(bad)
jmp
and
mov
cdq
xchg
mov
mov
or
or
and
or
(bad)
(bad)
jmp
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
push
mov
push
movs
in
lahf
xor
mov
js
stc
fmul
cwde
(bad)
(bad)
(bad)
dec
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
jmp
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
sbb
(bad)
(bad)
mov
bound
ficom
gs
aam
pop
popa
mov
into
pop
cmp
std
inc
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
(bad)
(bad)
(bad)
push
mov
sar
add
in
add
pop
dec
or
cmp
add
(bad)
(bad)
(bad)
jmp
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fcos
(bad)
(bad)
jmp
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
call
mov
cmp
jmp
fild
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
lods
mov
pop
jge
xchg
(bad)
(bad)
(bad)
dec
lock
add
inc
push
imul
xor
sbb
push
imul
(bad)
(bad)
(bad)
call
(bad)
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
call
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
(bad)
(bad)
(bad)
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
jmp
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
(bad)
mov
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
ret
(bad)
jmp
repnz
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
(bad)
ffreep
or
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
(bad)
(bad)
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
ja
(bad)
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
(bad)
call
sar
imul
push
js
or
push
add
mov
cmp
addr16
(bad)
jmp
dec
inc
imul
push
scas
fcomp
fldenv
(bad)
jg
out
lock
aaa
push
scas
mov
fidivr
mov
jmp
mov
mov
mov
push
cmps
mov
sar
(bad)
(bad)
(bad)
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
push
fild
sub
arpl
add
mov
cmp
fadd
aaa
movs
xor
cmp
das
cmp
xor
sub
or
mov
fs
dec
je
cmps
fnstenv
jae
ss
fiadd
ins
jae
push
dec
lods
mov
clc
or
(bad)
clc
bound
ret
push
add
out
inc
pop
mov
movs
inc
xchg
fcomp
pop
add
inc
(bad)
aas
ins
add
and
sbb
jg
dec
add
inc
dec
xlat
jo
pop
jne
jnp
leave
pop
mov
popa
ins
call
xlat
hlt
cmp
clc
xor
mov
xchg
add
add
push
fidivr
imul
cs
imul
mov
ins
inc
push
push
ja
mov
mov
ins
push
outs
fnstsw
gs
outs
leave
das
(bad)
jg
pop
js
push
jge
das
jmp
das
push
mov
inc
xchg
adc
sub
rol
pop
add
push
or
or
ret
pop
jae
test
neg
lea
or
xchg
push
mov
lds
aaa
shl
xlat
imul
cmp
ins
pop
sub
or
(bad)
push
int3
add
cmp
sbb
(bad)
ud0
or
push
test
jo
stos
lock
es
mov
aas
sbb
dec
pop
add
push
cdq
jg
mov
jne
frstor
fbstp
mov
inc
sub
stc
das
(bad)
push
xor
xchg
out
sahf
xor
xor
ins
jne
rcl
mov
xor
popf
xor
out
cmp
das
push
mov
out
das
out
das
iret
add
fucomi
das
dec
xor
sub
scas
sbb
push
push
enter
icebp
xchg
jl
mov
gs
mov
int3
cmp
mov
rcl
neg
rcl
and
loop
push
mov
mov
pusha
dec
mov
movs
popa
faddp
mov
pop
das
pusha
adc
lds
add
test
or
mov
push
cs
inc
ret
dec
leave
xor
sbb
sbb
repnz
ss
leave
xor
es
scas
loopne
in
mov
add
adc
push
scas
push
mov
add
or
into
adc
or
pop
mov
push
mov
dec
push
nop
mov
pop
xchg
mov
loopne
and
add
mov
adc
and
mov
lock
inc
push
push
mov
mov
dec
jo
add
lahf
inc
leave
xlat
sub
and
and
imul
add
and
ins
inc
repz
sbb
and
or
or
ds
(bad)
inc
fistp
std
or
adc
jnp
ja
and
lock
pop
add
sbb
pop
and
and
fisttp
mov
mov
fldcw
add
mov
cmp
mov
cmp
push
lods
sub
ins
(bad)
and
shl
push
adc
mov
jecxz
rcl
dec
jge
dec
add
retf
out
ss
pop
add
adc
jo
push
imul
cwde
inc
push
dec
lods
dec
(bad)
or
mov
pop
sub
or
jb
and
or
ss
jae
pop
test
adc
jo
add
xchg
mov
out
js
pusha
das
inc
inc
jb
mov
cmp
loopne
fs
inc
idiv
ja
aaa
add
mov
xor
int
mov
xchg
inc
cmp
xchg
imul
dec
fwait
sub
and
xchg
pop
sub
bound
sbb
adc
add
(bad)
(bad)
out
sub
mov
inc
inc
sub
shl
dec
add
mov
loope
add
daa
add
mov
cs
jnp
mov
pop
push
and
pushf
jo
popa
mov
ins
cmp
and
sbb
shr
or
pop
push
and
adc
xchg
xor
and
lea
add
popa
dec
ins
mov
inc
sbb
add
xor
adc
pusha
mov
cli
cwde
add
pop
jmp
adc
jmp
xor
push
in
pop
sub
pusha
xchg
test
clc
nop
mov
shl
jnp
sbb
sbb
inc
push
sbb
xor
and
sbb
mov
jecxz
sbb
xor
and
movs
pop
cmp
inc
xchg
out
push
add
popf
pop
jae
fistp
adc
sub
lock
outs
pop
and
popa
push
adc
es
adc
popf
mov
or
lahf
mov
mov
lods
dec
sbb
or
cmp
or
ss
or
int
mul
or
xor
sbb
hlt
add
or
sbb
push
adc
mov
sbb
daa
sub
push
push
or
ret
bound
mov
gs
xor
ss
add
(bad)
mov
fdiv
inc
les
and
xor
xchg
jge
pop
push
ds
adc
jno
iret
aad
or
sbb
cmp
ret
xor
inc
cwde
push
or
mov
inc
add
cmp
push
push
in
and
sub
or
push
push
dec
inc
push
cmps
sub
dec
push
push
dec
cmp
cmp
xor
stos
push
div
mov
cmp
push
and
xchg
sbb
xor
imul
cmc
sub
rcl
loopne
loopne
inc
xor
inc
adc
pop
mov
jb
push
lock
inc
or
lods
pushf
scas
add
les
(bad)
ficom
dec
inc
dec
dec
add
and
and
adc
xchg
retf
xchg
push
jo
inc
push
xchg
inc
inc
pop
push
mov
test
dec
dec
pop
mov
mov
mov
push
add
jne
sub
inc
add
stos
cmps
and
aad
popf
enter
fistp
aad
adc
pop
je
popf
add
mov
mov
adc
jo
and
add
or
cmp
hlt
stos
push
cmp
jne
ins
or
sub
mov
push
shr
add
dec
inc
stos
or
data16
sbb
data16
or
sbb
sub
retf
aam
aas
(bad)
loop
frstor
fist
push
pop
sbb
sub
jecxz
das
pusha
shl
loop
outs
inc
add
cmps
push
int
test
outs
adc
pusha
ror
or
inc
fwait
jmp
inc
pop
inc
shr
sub
add
sbb
add
adc
cmp
aas
push
xor
dec
dec
pushf
mov
mov
xor
xor
scas
and
adc
xor
and
xchg
pop
inc
ret
lahf
adc
rol
sub
push
mov
lea
dec
sub
les
stos
or
test
and
inc
inc
or
fwait
push
test
rol
xchg
and
inc
jno
in
inc
shr
cwde
in
jmp
adc
push
pop
popa
jnp
imul
test
shl
mov
int3
popf
cmps
mov
inc
pop
pop
ret
das
(bad)
dec
popa
retf
pop
mov
add
push
add
jne
inc
ss
ss
jnp
pop
lea
inc
jmp
adc
jmp
pop
push
lahf
inc
add
and
adc
adc
mov
shr
sub
xor
pop
loopne
adc
and
sub
push
push
sub
xlat
adc
push
mov
xchg
jge
pop
sbb
sbb
(bad)
jmp
jg
mov
ss
jo
pop
add
inc
daa
xchg
inc
mov
les
sub
inc
ror
mul
add
(bad)
cmp
lds
loopne
(bad)
js
sbb
push
xlat
inc
pop
or
xor
stos
ror
add
xlat
xchg
xor
scas
call
xor
inc
push
lea
lahf
(bad)
lods
shl
ins
jo
xchg
or
and
mov
lods
ja
jno
jmp
loop
stos
sub
adc
push
inc
or
add
jb
xor
cmp
xchg
int
(bad)
mov
nop
ins
arpl
inc
dec
sbb
cs
cmp
loope
repz
loop
in
inc
daa
inc
je
cmp
lahf
and
xor
loopne
bound
xchg
push
call
(bad)
and
push
push
push
je
mov
pop
push
int
xchg
data16
sti
mov
outs
push
add
cmps
mov
sbb
mov
push
jbe
add
imul
jo
jns
test
xchg
lds
(bad)
pop
jo
push
pusha
iret
sub
jae
inc
jo
ret
inc
leave
or
pusha
jo
inc
jnp
mov
mov
add
sbb
test
test
rcl
adc
mov
push
xor
add
arpl
push
add
fisttp
cmp
add
mov
sbb
lea
mov
jmp
xchg
pop
inc
imul
in
or
inc
stc
xlat
sbb
fidivr
cmps
test
bndstx
pop
arpl
add
xor
sub
cmp
mov
dec
inc
les
sub
call
mov
adc
and
inc
adc
and
adc
inc
add
mov
inc
inc
daa
mov
adc
mov
inc
add
xor
lods
jmp
and
jb
inc
inc
bound
add
xchg
dec
push
xchg
dec
adc
dec
push
dec
dec
add
test
adc
inc
adc
and
rol
xor
and
sti
hlt
and
adc
push
jmp
mov
lods
fist
add
(bad)
jo
dec
or
inc
push
mov
movs
(bad)
cs
cmp
and
fidiv
das
and
stos
adc
or
mov
cmp
push
aas
push
mov
xchg
cs
and
xchg
bound
iret
xlat
xchg
and
dec
pushw
inc
adc
xchg
retf
pusha
mov
fwait
in
sub
stos
cmp
fwait
mov
and
lahf
add
shl
push
arpl
daa
aaa
ret
xchg
xor
xlat
sbb
daa
mov
inc
jbe
stos
sub
iret
(bad)
cmc
out
mov
cdq
fsubr
enter
(bad)
daa
jle
movs
push
mov
nop
jo
push
imul
cmp
fwait
and
stos
(bad)
push
inc
and
push
pop
sub
or
cmp
pop
mov
add
ds
mov
pop
jae
mov
mov
sub
imul
push
inc
imul
jo
push
push
sbb
add
jo
or
adc
mov
or
ja
das
pop
movs
adc
call
xor
shl
mov
aam
add
add
fwait
mov
rol
fs
out
aam
imul
or
adc
sub
sub
dec
rcr
and
mov
rcr
outs
push
xchg
daa
cmp
jmp
rol
fistp
neg
xchg
mov
inc
retf
cmp
jnp
push
dec
aas
jge
outs
fidiv
dec
mov
mov
cmp
rcl
jb
popa
pop
push
push
add
out
push
mov
popa
stos
aas
jo
ins
inc
mov
fisttp
ret
jae
retf
lahf
pop
mov
js
pop
das
sbb
mov
outs
outs
(bad)
mov
dec
outs
daa
test
pop
ret
pop
dec
and
iret
mov
ja
inc
daa
movs
fs
xor
jg
or
push
pop
xchg
and
xor
adc
mov
pop
(bad)
aaa
out
mov
dec
dec
inc
and
mov
jae
push
xchg
imul
scas
loope
dec
je
and
push
ins
push
pop
jnp
push
xlat
out
xchg
sub
or
mov
adc
mov
jae
lods
not
xlat
mov
mov
pop
inc
call
pop
das
rcr
lahf
test
cmp
call
xchg
jo
addr16
dec
sub
pop
jae
stos
inc
movs
sub
repz
mov
dec
mov
adc
neg
ret
iret
movs
mov
ret
and
mov
add
shr
leave
(bad)
ss
adc
pop
add
sub
add
push
sub
aas
imul
mov
and
inc
rol
adc
mov
and
pop
outs
push
and
pop
scas
sub
pop
inc
arpl
das
xchg
and
sbb
mov
pop
mov
fwait
cwde
pusha
xlat
addr16
push
adc
or
fwait
or
dec
pop
ret
add
mov
push
sbb
pop
les
inc
or
add
bound
test
ret
add
lahf
stos
pop
adc
dec
and
jg
pusha
mov
daa
sbb
or
mov
pop
outs
pop
inc
add
mov
dec
jbe
push
mov
shl
mov
les
jg
popa
xor
stos
dec
mov
xor
add
lods
out
bound
pusha
add
imul
dec
inc
ror
xchg
arpl
out
movs
add
int3
push
hlt
add
out
mov
daa
arpl
mov
daa
cmp
jo
stc
ss
pop
dec
movs
pop
and
push
push
hlt
mov
cmps
pop
mov
nop
xchg
dec
cmps
iret
jae
add
sub
fst
inc
sub
jecxz
daa
stos
fdiv
sbb
lods
idiv
scas
pop
xor
scas
fist
sbb
ins
jecxz
mov
fidiv
and
outs
in
sbb
xor
call
mov
jmp
mov
pop
xchg
ja
iret
mov
popa
ja
adc
out
mov
aas
adc
idiv
mov
mov
pop
jb
mov
fdiv
pop
mov
pop
cmp
fstp
add
das
mov
xchg
mov
sub
mov
dec
push
out
popa
cs
pop
bound
daa
arpl
fst
and
outs
mov
pusha
xor
push
adc
inc
fwait
jb
push
rcr
inc
inc
inc
pop
in
bound
inc
test
xchg
dec
dec
jb
daa
movs
pop
dec
out
scas
in
push
dec
iret
dec
dec
(bad)
push
in
inc
dec
xchg
mul
fmul
jae
push
dec
scas
push
push
push
popa
mov
lds
sub
add
mov
popa
nop
sub
push
in
mov
arpl
pop
gs
or
(bad)
cs
scas
imul
mov
mov
cdq
out
outs
iret
outs
add
push
outs
outs
xchg
ficom
jne
mov
jne
mov
ret
jns
lods
and
outs
jns
add
and
push
jmp
push
pop
jge
dec
xchg
dec
inc
clts
in
ins
aas
sbb
inc
add
dec
pop
ficomp
dec
inc
inc
(bad)
adc
add
icebp
out
outs
test
das
inc
pop
push
or
mov
nop
xor
inc
push
xchg
inc
stc
jmp
mov
add
fs
call
add
inc
cmp
pop
push
outs
pop
jg
add
cmps
sbb
je
jne
pop
dec
or
inc
imul
push
pop
(bad)
dec
sbb
mov
gs
inc
bound
repz
push
outs
push
js
mov
fdiv
out
mov
nop
or
mov
in
inc
add
cmps
fsubr
add
add
ins
xor
sbb
xor
fdivr
mov
dec
sahf
or
jo
dec
enter
add
or
aaa
cmp
es
add
push
int3
aas
iret
test
mov
cld
fcomp
aaa
and
mov
adc
(bad)
jns
inc
es
push
inc
(bad)
or
daa
pusha
push
jl
add
dec
jnp
xchg
outs
into
jo
xchg
sbb
adc
pop
enter
mov
mov
adc
hlt
xor
inc
adc
jae
daa
fsubr
sub
cmp
iret
repz
mov
jo
enter
ss
sbb
mov
dec
and
xor
imul
stc
div
add
repnz
pop
outs
hlt
and
das
pop
inc
mov
in
popf
nop
inc
xor
xor
push
push
cmps
fadd
enter
fild
outs
sub
pop
mov
fisttp
mov
in
add
inc
or
pop
in
push
ss
inc
xor
ss
xchg
or
mov
enter
sbb
or
xchg
imul
ss
call
ja
cwde
js
xor
sub
leave
shr
mov
imul
sahf
fdivr
cdq
and
daa
in
xor
adc
sbb
sub
test
cmp
outs
add
pop
adc
adc
fld
adc
add
jo
fiadd
push
enter
pushf
pusha
or
lods
mov
in
aaa
add
adc
jmp
ss
aaa
cmp
and
xchg
cs
movs
outs
xchg
cld
js
pop
in
in
jp
lahf
inc
xchg
js
in
and
and
jns
mov
int
inc
cmp
cmp
in
jb
push
sub
inc
cmp
sahf
or
fs
ins
js
cs
dec
fs
fimul
cmp
repnz
mov
test
adc
pop
lods
clc
cmp
push
sbb
nop
mov
(bad)
out
int3
jbe
lahf
pop
push
int3
cmp
adc
test
test
pop
daa
in
pop
call
mov
adc
cmp
add
fiadd
aaa
cmp
push
dec
adc
ja
shl
lahf
cwde
test
cmp
nop
xlat
sahf
xchg
mov
ror
imul
hlt
fist
cmps
fstp
rcr
cmp
aad
or
xor
dec
cmps
fcom
mov
clc
call
xchg
cmp
es
or
pop
repnz
mov
enter
cmp
enter
cmp
xor
and
mov
cmp
nop
or
je
cmp
adc
nop
ins
dec
lods
aaa
pop
cmp
mov
ja
loopne
in
fdiv
fcomp
aas
(bad)
push
fimul
fstp
xor
inc
mov
(bad)
inc
push
outs
iret
test
xchg
cmp
mov
cmp
sahf
or
push
mov
jnp
cmps
inc
xchg
mov
mov
or
sbb
and
or
or
mov
and
adc
loopne
or
and
cs
fmul
mov
mov
nop
push
mov
mov
pop
dec
push
or
imul
and
pop
jecxz
enter
xor
add
lock
pop
js
mov
xor
mov
or
adc
out
(bad)
out
mov
or
movs
lds
add
ror
aas
loopne
in
xlat
outs
add
cmps
mov
lock
cmpxchg8b
dec
gs
xchg
out
adc
pusha
inc
jl
inc
mov
inc
cmp
pusha
mov
jns
xchg
call
dec
cmps
jbe
popf
nop
adc
inc
add
adc
outs
and
lfs
call
mov
push
jo
mov
jns
and
fadd
cs
pushf
cmps
(bad)
pop
enter
int3
fsubr
dec
(bad)
sar
pop
and
sub
out
mov
call
xor
out
push
inc
pusha
pushf
idiv
sbb
cmps
xchg
push
nop
adc
scas
mov
daa
mov
and
fild
clc
into
inc
add
bound
enter
mov
in
mov
push
push
lahf
mov
iret
test
inc
xor
test
lods
dec
xchg
xchg
push
lods
iret
test
test
scas
test
sbb
rcr
inc
in
xor
add
ja
ss
loopne
sub
and
inc
loopne
jecxz
mov
scas
cld
cmp
nop
push
fidiv
dec
mov
cmps
cmp
aam
clc
mov
and
sub
in
popf
nop
sub
push
dec
cmps
push
mov
inc
sub
and
inc
push
cwde
xchg
mov
add
fimul
fadd
call
pop
dec
add
jae
inc
sbb
push
cmp
adc
and
jo
ja
add
xlat
scas
pop
bound
mov
add
xchg
movs
pop
mov
mov
pop
ins
movs
(bad)
int3
in
fucomip
and
inc
or
add
in
call
mov
push
call
outs
xchg
mov
test
push
test
push
add
test
enter
call
and
fdivr
sub
push
jmp
dec
daa
push
cmps
cmp
out
dec
dec
sub
or
nop
push
xchg
inc
repz
(bad)
outs
ja
sar
pop
inc
pusha
(bad)
popf
mov
mov
add
mov
pop
dec
mov
ja
dec
ja
lods
jbe
js
adc
xchg
outs
xchg
aam
jns
in
mov
mov
test
movs
mov
xor
or
inc
mov
lock
pop
mov
sub
not
jnp
aas
mov
(bad)
out
js
fs
dec
test
lods
pop
lods
mov
inc
add
and
out
sahf
ins
hlt
push
dec
or
inc
pusha
mov
pop
ja
stos
pop
xchg
stos
out
mov
dec
cmps
lock
jo
mov
dec
push
cwde
mov
(bad)
or
cmp
sar
sub
sahf
loopne
or
and
enter
dec
sub
cmp
fild
ja
mov
imul
xlat
dec
js
test
and
push
repnz
(bad)
ror
and
sub
add
fidivr
dec
adc
sbb
ret
jns
in
add
sahf
pop
push
out
clc
cwde
test
add
int
cmp
ret
fs
dec
enter
add
fs
jo
pop
nop
outs
xor
dec
inc
push
leave
add
push
jo
ret
nop
dec
and
pop
jg
lods
add
scas
pushf
aas
jbe
out
mov
enter
or
xchg
les
cld
jns
out
test
push
and
cs
push
jle
push
ret
jmp
aaa
imul
lahf
into
mov
inc
mov
les
fsub
push
sbb
inc
pop
xor
and
cld
xor
scas
xchg
pusha
daa
inc
pop
push
call
outs
pushf
jl
ror
add
out
js
nop
lods
in
pop
adc
pop
xchg
es
fwait
lds
add
dec
or
nop
ss
lds
pop
mov
or
ja
in
imul
pop
data16
add
push
push
aas
iret
scas
loopne
cmp
or
and
mov
nop
mov
fild
add
rol
cmp
pushf
push
adc
push
and
setge
fiadd
ds
rsqrtps
and
or
nop
or
inc
(bad)
and
cmps
shufps
(bad)
jae
fsubr
xlat
pop
mov
int3
lahf
ins
sahf
ja
ss
sbb
sub
cmp
sahf
adc
lahf
ins
scas
push
sbb
mov
pushf
inc
push
je
test
add
sahf
or
mov
lock
lods
cmp
push
adc
lahf
add
push
pop
push
hlt
(bad)
pusha
rol
repnz
dec
cmps
pop
mov
mov
mov
pop
or
imul
ins
sahf
fsubr
push
or
sbb
and
or
or
cmps
scas
mov
pop
push
push
fs
cmp
scas
push
and
adc
aaa
shr
ss
mov
lahf
mov
in
or
call
and
fcom
jg
add
sbb
dec
ja
mov
mov
sahf
mov
test
add
test
enter
cwde
sahf
out
test
lock
daa
aam
push
sub
xchg
adc
out
les
push
cmp
inc
(bad)
outs
imul
xchg
pop
fistp
nop
test
je
mov
rcr
js
cs
rcl
pop
sbb
sub
daa
pop
or
es
js
aaa
repnz
pop
push
cmp
outs
push
mov
pop
ss
daa
xchg
ss
ror
or
pop
or
xchg
jb
jecxz
mov
dec
pop
lock
je
pop
jg
retf
test
pop
xchg
push
mov
inc
sub
es
push
pusha
add
or
enter
aas
cwde
pop
and
inc
lock
pop
xor
push
aas
cwde
cmp
mov
(bad)
mov
mov
pop
nop
push
pushf
xchg
fadd
cmp
xor
mov
out
inc
fsubr
pop
add
adc
out
inc
mov
call
push
push
jp
lock
lods
out
push
inc
ss
add
pop
retf
xor
imul
sbb
enter
(bad)
outs
and
dec
fmul
mov
pop
pop
or
and
mov
xchg
cmps
xchg
mov
test
add
vhaddpd
test
imul
out
inc
call
enter
in
and
lods
int3
add
inc
dec
jnp
pop
or
adc
int3
add
mov
outs
inc
xchg
daa
nop
dec
sahf
push
pusha
and
pop
enter
nop
mov
lods
pusha
nop
cmp
pop
jl
(bad)
pop
in
pop
pop
dec
mov
add
pop
add
push
out
inc
fcomp
and
pop
inc
push
push
jo
out
inc
js
call
and
enter
cmps
pushf
sahf
mov
pmulhuw
fdivr
add
nop
in
int
jmp
pop
popf
mov
or
inc
ds
out
push
adc
loope
jo
out
jo
dec
(bad)
dec
pop
push
mov
mov
mov
sahf
or
push
aam
pushf
pop
cld
pusha
or
int
xlat
test
lods
test
lods
push
pop
ja
sahf
aad
out
inc
jmp
push
jo
mov
add
int
jbe
clc
add
push
ret
add
(bad)
mov
daa
into
adc
fadd
fiadd
inc
iret
pop
cwde
or
xchg
call
mov
xor
cmp
fisubr
out
popa
dec
push
push
aas
mov
adc
into
les
adc
mov
inc
dec
pop
or
outs
outs
add
xchg
out
cwde
aam
in
ret
inc
cs
rcl
push
xor
(bad)
jmp
push
cmp
das
shl
iret
imul
jl
or
test
aas
(bad)
ins
jnp
in
cmp
add
(bad)
mov
sbb
mul
push
sbb
xor
mov
test
dec
xchg
pop
fs
inc
dec
and
movs
ins
ffree
test
mov
dec
and
fnstenv
pop
enter
mov
fldenv
call
in
xor
fs
push
not
enter
xchg
out
(bad)
icebp
mov
fs
sahf
mov
ror
add
push
enter
in
push
fstp
sbb
sub
cmp
and
xchg
movs
outs
pop
fisttp
mov
jl
mov
movs
fimul
push
aas
sar
cmps
shl
gs
jge
js
hlt
cmovg
lahf
test
sub
aam
enterw
jmp
push
inc
xchg
xor
loope
nop
pop
data16
jo
iret
jnp
push
data16
mov
aas
rcl
sbb
enter
scas
mov
in
rcr
adc
push
xor
mov
jg
loopne
or
je
nop
shr
pop
add
mov
(bad)
mov
rcl
or
dec
cmps
addr16
fstp
sar
sbb
mov
inc
scas
push
jb
(bad)
mov
jo
(bad)
cmp
push
test
(bad)
inc
adc
or
mov
fcomp
mov
call
pop
xchg
pop
adc
mov
ja
(bad)
mov
imul
daa
shl
xchg
outs
daa
shr
push
dec
jmp
bound
and
xchg
out
rol
push
cld
and
in
lock
enter
sub
cmp
dec
ins
dec
and
test
xchg
mov
js
push
push
pushf
pop
add
xor
pop
enter
in
int3
fdiv
bnd
out
scas
aam
imul
sub
mov
das
pop
scas
xor
dec
xchg
inc
jmp
mov
mov
enter
jo
pusha
pop
and
add
mov
inc
xchg
jl
lock
enter
and
sub
jl
mov
xchg
add
test
mov
ins
ins
push
test
iret
scas
jo
and
xchg
les
mov
ins
mov
(bad)
aad
mov
ins
add
sbb
cs
lea
hlt
cmps
js
(bad)
jle
cmps
pop
push
ins
mov
push
cmps
jle
push
add
fs
add
mov
ins
scas
mov
imul
ins
ins
dec
sbb
daa
aad
outs
xchg
jnp
fs
outs
and
xor
inc
xchg
or
sbb
sahf
shl
mov
mov
in
jo
les
iret
les
(bad)
mov
leave
jae
in
in
shl
(bad)
ror
mov
pusha
outs
outs
sub
xor
pop
sbb
fs
imul
push
and
add
fs
mov
cs
ror
test
or
cmps
stos
out
jo
push
and
aas
(bad)
les
dec
and
ins
xor
ins
pop
repnz
push
aas
xlat
adc
movs
mov
sub
(bad)
push
out
jmp
cmps
xor
inc
cmp
clc
push
jno
and
retf
cmp
xor
sub
iret
jno
pop
cmps
js
rcl
push
shl
jno
nop
scas
xchg
xchg
and
ja
iret
mov
rol
loopne
xchg
inc
mov
xlat
jbe
dec
and
jp
xor
cmps
scas
fidiv
fimul
push
push
mov
and
test
nop
or
push
aas
dec
lahf
cwde
ror
cmps
jb
into
adc
add
and
cmp
jae
shr
(bad)
push
cmps
add
enter
push
push
lods
xchg
mov
(bad)
jae
adc
jmp
jae
add
je
jbe
inc
es
pop
(bad)
(bad)
or
loope
daa
xchg
je
push
fs
enter
or
xor
cmp
nop
add
xchg
lods
pop
pop
shr
hlt
jnp
pop
shl
cwde
jne
jne
jecxz
nop
xchg
fstp
push
xlat
push
call
into
mov
jne
push
add
movs
cmps
test
push
or
in
test
fsub
nop
xlat
sahf
call
fcom
mov
inc
clc
push
jbe
jbe
leave
mov
clc
add
jecxz
pop
lahf
ficomp
pop
stos
push
iret
jnp
test
mov
int
addr16
(bad)
ss
mov
dec
and
mov
jae
mov
jp
in
adc
and
cmp
ficomp
cmps
pushf
fimul
js
test
nop
xlat
xchg
pushf
add
daa
mov
shl
adc
or
add
in
add
adc
sub
mov
inc
and
add
and
out
js
push
mov
outs
(bad)
js
fiadd
nop
sub
ror
inc
xor
dec
jns
xor
(bad)
jns
or
add
fisttp
xchg
push
dec
fistp
push
add
jbe
(bad)
push
lahf
mov
sub
popa
mov
cmp
shl
cld
add
or
sbb
mov
loop
enter
dec
pmulhuw
cmps
fucomi
js
jnp
(bad)
mov
sbb
repnz
and
rcl
enter
lock
lods
cmp
aas
(bad)
adc
adc
push
adc
(bad)
mov
outs
xchg
test
jns
in
xchg
mov
inc
test
mov
lock
add
adc
push
inc
pop
mov
fadd
jbe
adc
fs
das
mov
push
(bad)
sahf
or
test
les
inc
iret
test
dec
pop
jnp
in
jge
push
adc
xor
and
push
jge
test
add
test
jns
in
aam
cs
dec
sahf
call
enter
jle
jle
pop
add
cld
outs
daa
add
(bad)
jle
mov
sbb
dec
add
jo
shl
jae
loopne
dec
lahf
add
rol
jg
jg
push
cmp
and
pop
test
mov
test
jg
inc
ficom
pop
fiadd
jbe
add
scas
and
out
push
or
not
cmps
in
push
add
push
sub
mov
cmps
xchg
call
pop
xchg
sub
les
mov
sahf
or
mov
enter
pop
enter
pop
(bad)
mov
ss
sbb
ins
dec
and
out
inc
lods
xor
and
enter
add
pop
enter
int3
fadd
jo
pop
sar
xor
cmp
scas
sbb
pop
lahf
loopne
add
dec
sahf
ss
ja
and
into
test
add
or
out
jnp
dec
xor
cmp
adc
sbb
push
adc
dec
mov
pop
push
or
dec
out
inc
sub
movs
push
mov
mov
sbb
xchg
daa
mov
in
xor
pop
dec
test
push
add
in
jle
sbb
and
sub
test
mov
enter
xlat
cmp
push
mov
cmps
shl
pop
jnp
and
test
inc
xchg
fidiv
outs
xchg
les
jnp
mov
test
jecxz
enter
inc
sar
push
inc
adc
xchg
cmp
fwait
inc
out
or
xchg
inc
dec
shl
or
nop
out
xchg
xor
add
ja
jp
push
mov
xchg
push
in
sbb
outs
mov
js
mov
pop
xchg
add
mov
inc
icebp
outs
push
push
xchg
daa
nop
adc
fs
jb
and
pop
(bad)
aam
pop
leave
ja
scas
jae
fadd
fwait
or
pop
ffree
cmp
pop
jns
and
jecxz
add
in
test
and
cmp
loope
mov
push
call
inc
inc
add
inc
mov
cwde
sub
mov
pop
enter
fs
sbb
popf
adc
sbb
add
(bad)
inc
je
shr
dec
add
mov
mov
or
adc
cmp
add
lods
jg
iret
mov
inc
or
pop
push
call
lods
sbb
mov
mov
dec
add
push
mov
and
lods
jbe
(bad)
mov
(bad)
mov
sub
dec
cmps
in
sbb
invd
cmps
in
pop
mov
mov
mov
mov
mov
aam
inc
scas
or
in
and
or
add
cmp
cmp
fsubr
sbb
ss
ins
lahf
add
and
jl
add
rol
xlat
mov
xchg
rol
dec
fwait
sbb
in
lea
jg
js
mov
mov
inc
push
dec
aas
bound
xlat
addr16
cwde
push
lea
fistp
inc
add
jae
(bad)
aam
adc
pop
rol
out
mov
mov
out
jg
adc
sub
enter
push
test
mov
push
call
ins
in
popf
mov
push
int3
aas
(bad)
mov
xor
(bad)
jmp
loopne
(bad)
or
sbb
add
cld
pushf
outs
xor
pop
ins
(bad)
mov
nop
inc
out
jg
fimul
iret
(bad)
lods
push
les
fdiv
scas
pushf
mov
jmp
daa
movs
cdq
nop
nop
out
mov
das
lods
loopne
push
pop
ja
sahf
pop
ja
adc
add
shl
scas
mov
mov
call
es
xlat
xchg
mov
mov
adc
aam
xchg
or
xor
aam
cld
cmp
jnp
clc
jbe
lahf
pop
ins
lock
test
ja
inc
pop
mov
pusha
(bad)
mov
call
rol
fimul
(bad)
dec
(bad)
dec
adc
ja
ss
xchg
popa
in
inc
ins
call
outs
mov
iret
push
iret
fidiv
mov
lock
aaa
js
movs
cdq
test
call
sub
js
mov
cs
movs
shl
cld
nop
or
or
hlt
xchg
sub
xchg
cmp
sbb
jbe
mov
push
pop
lahf
(bad)
jmp
popf
or
mov
xor
pop
add
inc
nop
int
cmp
cld
xchg
sbb
mov
fimul
call
nop
xlat
xchg
nop
add
in
xchg
movs
mov
jb
pop
in
xchg
jmp
lock
pop
enter
or
and
push
mov
xchg
sub
xchg
cmp
pop
mov
push
mov
pop
leave
jmp
ins
push
dec
xchg
dec
(bad)
movs
jb
xchg
pop
setne
or
pop
xchg
xlat
out
test
add
sbb
nop
push
sbb
jmp
mov
je
or
or
lods
(bad)
sar
sub
dec
xchg
loopne
lock
ja
rcr
xchg
xor
or
jg
jns
jnp
xchg
jmp
ins
add
mov
inc
xchg
dec
jmp
jmp
enter
test
xchg
xor
ja
or
(bad)
(bad)
cwde
cwde
cwde
mov
nop
dec
jmp
xchg
jnp
call
cwde
add
mov
shr
or
and
mov
xlat
ss
mul
in
inc
in
ins
sets
into
cdq
adc
add
mov
or
es
push
or
inc
cmps
push
dec
loop
sahf
ja
fs
test
outs
dec
xchg
and
mov
and
and
inc
jle
adc
cmp
call
and
ins
div
mov
mov
je
or
mov
jecxz
or
rol
and
pop
dec
and
mov
add
adc
sbb
mov
pop
xor
add
push
scas
mov
jmp
daa
fwait
jo
sbb
(bad)
jbe
clc
sbb
mov
jno
add
in
sbb
inc
xor
aas
in
mov
jg
cmp
push
repnz
fdivr
pushf
dec
pusha
cmp
inc
dec
and
nop
nop
mov
mov
pop
leave
out
hlt
popf
or
in
jle
inc
lock
or
popf
dec
push
pusha
push
inc
xor
call
rcr
push
add
adc
or
hlt
mov
or
or
mov
mov
loopne
(bad)
ficomp
mov
outs
xchg
mov
cmp
sahf
xchg
test
add
test
fsubr
mov
call
int
xor
scas
loopne
nop
sub
hlt
out
xchg
inc
outs
xchg
out
and
js
xor
push
cwde
fist
xor
pop
push
add
push
cmp
inc
lahf
fadd
hlt
rcr
add
add
xor
sahf
mov
adc
inc
into
mov
inc
imul
add
pushf
cdq
pusha
ins
les
add
pop
adc
mov
fadd
cld
imul
lock
adc
xchg
paddsw
sub
cmp
dec
xchg
pop
repnz
add
or
jmp
fisubr
out
add
js
cmp
mov
and
lock
push
cmps
mov
mul
test
div
dec
fist
outs
xchg
jl
xor
mov
dec
mov
pop
add
pop
ins
jmp
dec
in
scas
ja
ja
jle
mov
cld
cmps
nop
mov
cmps
lock
push
pusha
adc
out
daa
dec
adc
jae
mov
dec
shl
nop
out
xchg
repz
test
mov
inc
mov
cs
int3
outs
movs
and
dec
sar
xor
dec
dec
ficom
xchg
call
mov
enter
call
jo
hlt
adc
movs
fbstp
rcr
inc
xchg
fsubr
movs
add
xor
movs
movs
add
or
daa
inc
bound
in
and
jo
imul
push
cwde
fistp
scas
in
nop
or
enter
cs
cmps
pop
out
cs
scas
enter
and
cmps
and
cmps
xor
push
sub
out
into
(bad)
ficomp
dec
(bad)
jmp
jne
xchg
pop
add
test
jno
daa
cmc
or
mov
int3
shl
mov
mov
mov
das
mov
dec
push
ins
xchg
lahf
(bad)
ja
add
pop
jmp
mov
scas
nop
out
es
xor
stos
jecxz
test
push
sbb
pop
scas
in
pop
enter
xchg
or
pop
pop
je
pop
out
dec
xor
fimul
mov
in
fiadd
add
add
cmp
adc
test
test
test
and
pop
mov
sub
mov
inc
mov
daa
test
push
leave
inc
data16
mov
clc
mov
lock
enter
sub
dec
and
outs
xchg
popf
sub
test
rol
xchg
mov
scas
mov
jp
stos
fadd
clc
scas
mov
add
mov
stos
cmp
push
mov
enter
stos
sub
sar
loopne
stos
xchg
push
lods
and
push
hlt
cmps
mov
mul
lods
pop
sbb
mov
xor
data16
mov
pop
mov
(bad)
mov
pop
jo
mov
jg
xchg
out
sahf
in
mov
daa
in
mov
call
nop
or
dec
inc
add
mov
xchg
push
inc
dec
leave
mov
ror
fcom
test
lods
test
mov
(bad)
arpl
or
cmp
mov
jmp
jo
push
pushf
inc
add
hlt
push
jo
inc
xchg
sbb
das
outs
xchg
or
leave
jae
test
push
test
cs
jo
and
in
scas
call
nop
int
dec
fcom
in
popf
scas
cmp
dec
lahf
nop
sub
mov
mov
scas
mov
nop
aas
(bad)
js
xor
call
rcl
jae
ror
mov
inc
dec
jnp
mov
push
sub
test
lock
lock
mov
push
js
dec
mov
ja
js
repz
mov
inc
pushf
nop
or
add
or
repnz
mov
adc
mov
jmp
data16
inc
cs
push
clc
mov
jae
test
es
adc
les
into
fmul
pop
pop
dec
add
test
or
sbb
mov
lahf
or
in
or
pop
or
inc
sahf
ins
jl
cs
nop
pop
push
lods
mov
int3
push
lods
popf
nop
out
push
sbb
inc
add
scas
call
dec
sbb
sbb
sahf
ja
inc
push
or
pop
pop
mov
sbb
stos
aad
and
lock
pushf
mov
lea
jbe
jne
jmp
je
ins
stos
or
pop
xchg
out
mov
xchg
enter
add
enter
fld
fdivp
push
mov
add
fcomp
xchg
add
adc
mov
push
ss
cmp
sub
xchg
adc
out
mov
fadd
repz
or
add
enter
fcom
mov
mov
jns
movs
mov
jbe
mov
pop
sub
or
inc
push
dec
pop
enter
add
test
pushf
nop
test
add
xchg
adc
jmp
mov
mov
add
clc
xor
daa
cwde
lahf
mov
mov
jno
stos
inc
or
add
and
mov
loopne
cmps
pop
add
adc
fsub
dec
sbb
enterw
push
loopne
sbb
(bad)
mov
and
ja
je
push
mov
sub
outs
imul
dec
sahf
test
push
cwde
pushf
mov
mov
imul
outs
cmp
cdq
in
clc
outs
je
add
test
pop
adc
mov
or
mov
and
clc
add
mov
or
push
sbb
icebp
jecxz
dec
mov
mov
sub
dec
lahf
ja
inc
cmp
xchg
inc
iret
cmp
cmps
mov
jge
add
inc
push
inc
aam
lahf
pop
add
or
mov
and
xor
inc
out
fs
add
inc
pop
ins
jo
push
add
xchg
test
je
mov
inc
jo
jg
enter
dec
pop
or
in
out
mov
(bad)
mov
fwait
or
xchg
push
mov
ja
jp
fistp
inc
fdiv
cmp
pop
inc
pop
loopne
xchg
and
dec
lock
in
shl
in
xchg
fadd
mov
or
mov
sub
addr16
pop
mov
push
cmps
mov
jo
jg
pop
jb
pop
repnz
add
jmp
pop
nop
and
daa
dec
adc
sub
aam
pop
enter
pop
movs
jns
sub
iret
mov
pop
sub
js
iret
ja
mov
pop
xchg
inc
(bad)
xchg
and
data16
lods
test
xlat
aaa
sub
mov
stos
or
inc
(bad)
mov
ins
xchg
loopne
pop
inc
push
and
fs
dec
cmp
xor
je
scas
lods
fmul
xchg
xlat
sbb
shr
repnz
pop
add
inc
ss
enter
shr
mov
jne
cmp
push
outs
jo
ins
or
pop
mov
ror
mov
iret
test
js
in
mov
js
aam
enter
xchg
shr
adc
aad
push
push
pop
xchg
adc
dec
fstp
mov
and
fld
inc
nop
push
lods
not
rol
add
ja
inc
sahf
sub
cmps
ret
push
adc
fcmovb
cmp
xchg
ret
sub
push
mov
scas
rol
push
sub
cmp
push
or
js
add
ret
pop
mov
sbb
pop
iret
test
mov
mov
clc
mov
cmp
push
xchg
pop
mov
daa
mov
outs
jae
cmp
xchg
cld
mov
pushf
or
fcomp
movs
aas
(bad)
mov
cmp
repnz
sbb
in
enter
dec
inc
add
pop
mov
jnp
les
push
js
lahf
sub
sub
(bad)
jmp
inc
xor
(bad)
pushf
test
outs
test
les
jg
add
test
mov
and
adc
or
scas
mov
loopne
mov
push
add
mov
mov
pusha
retf
push
add
mov
xor
sbb
jns
out
outs
xchg
mov
repz
sbb
or
out
call
cmp
repz
xor
repz
repz
cs
es
jle
add
cmp
mov
mov
jl
cmps
popa
stos
fld
call
mov
out
sahf
es
int3
lock
jns
add
out
push
jbe
in
setle
cmp
sar
mov
sahf
cmps
ss
xchg
int
mov
or
cmp
in
mov
dec
jl
sar
iret
repz
push
scas
shl
sub
push
test
cld
pop
movs
call
montmul
cmps
inc
cmp
out
push
add
iret
rep
nop
int3
out
test
jns
cmps
inc
outs
xchg
mov
jl
out
adc
leave
and
shl
jbe
xor
out
repnz
iret
xlat
cmp
iret
repz
inc
sbb
cmps
stc
cmp
das
scas
push
xor
push
inc
pop
lahf
out
sahf
jbe
lods
(bad)
jmp
xor
mov
jl
cmps
stc
sub
mov
call
sub
sahf
out
cmps
iret
clc
and
dec
ins
mov
out
call
mov
jns
ja
push
jnp
loope
mov
call
xlat
pop
mov
sub
iret
repz
push
cmp
call
push
retf
int
imul
mov
jns
iret
ror
rol
dec
repz
xchg
(bad)
ror
lahf
out
ds
ret
cli
xor
sar
pop
push
movs
out
les
jnp
shl
vmovntdq
inc
jnp
out
(bad)
bound
rcl
mov
jne
icebp
xor
cmps
stc
aaa
leave
ja
and
imul
clc
sub
sahf
out
mov
or
aas
out
repz
je
mov
stc
cmp
repz
bound
repz
cmps
inc
in
sbb
stc
cmp
test
(bad)
sub
push
iret
sar
les
shl
push
mov
push
shl
(bad)
ds
sar
sub
lea
cmp
out
ins
mov
iret
repz
sti
rcl
push
(bad)
push
push
test
lahf
out
ds
imul
push
test
adc
ss
ds
xchg
ficomp
fisub
sahf
out
jmp
cmp
repz
cld
repz
out
(bad)
scas
add
cmps
stc
cmp
cdq
retf
fild
repz
lea
loopne
popf
int
int
imul
or
ss
cmps
stc
cmp
dec
jecxz
pushf
retf
repz
dec
in
mov
stc
or
das
mov
imul
(bad)
call
out
sahf
jle
(bad)
jmp
cmp
fstp
jmp
push
push
xchg
stc
cmp
pop
xchg
fdiv
in
outs
iret
sar
ficomp
out
push
xchg
int
out
ds
xor
repz
repnz
clc
lock
ja
shl
jns
out
icebp
aaa
bound
lahf
jmp
pop
test
in
repz
xor
or
stos
cmc
out
out
fidivr
div
and
adc
cmp
xor
dec
or
jns
cmp
in
sti
push
mov
sbb
int
jns
out
and
inc
jne
sahf
out
movs
or
xor
repz
out
sbb
cmp
movs
cmp
gs
rcr
sub
jge
jns
out
loop
add
into
stc
cmp
repz
add
dec
outs
or
out
sahf
cmps
das
mov
cmp
push
add
push
out
ds
xor
movs
cmp
repz
sbb
ds
jns
out
in
pop
cmp
repz
out
and
inc
jp
out
call
aad
lahf
out
dec
or
or
mov
or
cmps
lahf
out
cmp
cmc
sbb
iret
repz
imul
out
push
mov
ds
shl
fimul
adc
sahf
out
xchg
int3
movlps
cmps
stc
cmp
jg
in
and
jns
imul
sahf
out
xor
xchg
add
int
jns
out
and
mov
or
aaa
pop
mov
xor
out
out
sbb
out
sahf
out
sbb
pop
mov
sbb
mov
and
out
call
cli
int
imul
or
(bad)
dec
repz
and
sahf
out
ds
and
cmps
in
jns
stc
push
xor
push
mov
sbb
dec
inc
push
lahf
out
sahf
sub
pop
and
dec
xor
out
das
pop
xchg
mov
repz
xor
jns
iret
out
sub
ins
popf
addr16
cmp
add
imul
sub
sbb
xor
out
push
ins
mov
imul
hlt
inc
sub
repz
out
fbld
sub
call
ret
iret
repz
out
das
pop
popf
fist
out
call
xor
iret
or
sub
jns
mov
sti
cmp
rep
xchg
int
adc
ds
repz
fimul
xor
push
mov
out
ds
repz
cwde
(bad)
sbb
outs
push
mov
cmps
stc
cmp
adc
out
idiv
and
mov
nop
mov
call
(bad)
retf
repz
ds
cmp
out
sahf
out
cmp
jb
jmp
mov
inc
ds
jns
jge
mov
push
ja
repz
out
sub
jle
cmp
ds
into
icebp
adc
push
mov
div
inc
push
dec
repz
js
(bad)
jns
out
inc
inc
push
cmp
or
pop
mov
sbb
push
mov
adc
jl
cmps
popa
test
cmps
stc
cmp
js
call
fidivr
mov
adc
push
jb
repz
out
add
pop
stos
out
sahf
out
dec
pop
xchg
mov
out
cmp
or
mov
xor
sti
cmp
pusha
dec
test
sbb
push
mov
adc
or
push
jo
repz
cwde
enter
imul
push
not
shl
xchg
iret
repz
mov
lock
sti
xor
pop
dec
pop
pushf
js
push
pop
push
xchg
jns
jns
or
push
loopne
pop
out
ds
push
shr
out
dec
js
push
push
call
gs
ret
sti
cmp
out
add
mov
sar
push
jmp
imul
jl
test
sbb
sbb
repz
mov
outs
dec
push
clc
stos
outs
(bad)
jl
out
push
clc
cmp
stos
xor
call
loopne
jae
ds
rcl
ret
jb
ja
out
rcl
pusha
jne
jmp
mov
lock
mov
out
es
(bad)
ss
out
jnp
call
sbb
push
test
iret
sar
ins
cmps
lock
push
and
fist
call
mov
repz
adc
ds
xchg
mov
jl
mov
xchg
xchg
ds
repz
fsub
fwait
call
pushf
push
sahf
retf
int
fnstcw
cmp
data16
movs
pusha
nop
push
movs
cmp
addr16
sahf
jp
sub
ds
dec
lods
int
repz
fdivr
push
scas
sbb
fwait
mov
mov
fstp
lahf
data16
inc
mov
jmp
ret
aam
int
cmp
fstp
jbe
loope
div
jg
int
push
repnz
sti
xor
in
xlat
add
add
jl
int
add
add
inc
or
imul
jb
cli
imul
neg
cs
add
repz
int
sbb
sbb
clc
rcr
pop
inc
and
and
and
add
repz
mov
fadd
(bad)
int
xlat
adc
(bad)
mov
mov
aaa
and
or
cwde
and
das
adc
dec
mov
and
push
xchg
daa
push
sbb
(bad)
daa
ror
pop
and
xchg
fdivr
pop
fnstenv
out
rcr
sbb
jo
stos
nop
movs
add
push
mov
call
aaa
in
mov
fwait
pop
dec
iret
push
inc
fist
or
test
in
inc
inc
mov
xchg
leave
xchg
mov
test
ins
nop
pushf
in
fnstenv
hlt
xchg
and
inc
ret
dec
sar
pop
mov
mov
cmp
lods
pop
daa
xchg
sub
test
in
push
ficom
int3
or
push
leave
or
fidivr
dec
daa
pushf
in
loopne
pop
mov
xchg
inc
mov
xchg
jmp
stc
and
test
add
sub
mov
jg
pop
(bad)
lods
loopne
add
scas
sub
mov
add
push
adc
in
xor
in
lods
sbb
jo
ins
ss
dec
mov
cmp
pop
test
dec
sbb
lock
les
fcomp
and
cmp
jecxz
dec
and
fdiv
xchg
mov
ins
push
adc
sbb
or
pushf
fsub
mov
in
fld
dec
or
jbe
addr16
enter
pop
sbb
(bad)
and
iret
jo
pop
xchg
or
ss
jl
mov
mov
sbb
push
pushf
iret
(bad)
fisub
push
adc
mov
mov
repz
xor
or
push
pop
das
inc
pop
push
pop
pop
ficomp
dec
cwde
fdiv
push
jb
pop
mov
xchg
adc
mov
lahf
add
mov
in
xchg
add
xchg
leave
leave
inc
jb
fsub
cmp
leave
leave
in
hlt
cld
xchg
daa
loopne
dec
sti
outs
scas
push
ja
sub
dec
dec
jb
sar
mov
push
and
call
push
mov
mov
add
add
ja
pop
loop
jmp
adc
scas
lds
jns
(bad)
fisttp
ins
ja
outs
loope
daa
pop
xchg
cld
loope
out
jg
mov
xor
pop
push
dec
mov
cmp
mov
sar
adc
adc
popa
or
push
lahf
clc
jg
sbb
xchg
dec
push
cmp
daa
or
mov
inc
mov
inc
call
push
dec
push
iret
mov
mov
test
in
mov
inc
xchg
inc
ficomp
push
in
pop
or
inc
mov
(bad)
cmp
mov
pandn
adc
mov
pavgw
or
daa
lock
je
enter
adc
movs
inc
mov
sub
aam
sar
dec
push
jns
into
in
les
xchg
cmp
repnz
mov
das
sbb
sub
pusha
addr16
das
movs
jnp
cmp
popf
jl
movs
scas
add
(bad)
in
mov
movs
rol
out
pop
fst
mov
dec
add
inc
mov
add
popa
add
mov
add
add
mov
movs
inc
inc
mov
out
sub
xchg
and
lea
sbb
and
sub
out
xlat
cs
outs
cmps
dec
jno
je
and
add
pushf
pushf
pushf
pushf
stos
mov
mov
add
push
and
and
daa
cmp
out
add
pop
pop
daa
pop
leave
add
rcl
mov
pop
add
pop
xor
add
and
dec
mov
(bad)
mov
push
xor
xchg
xor
mov
call
mov
scas
fisttp
(bad)
dec
xchg
jmp
aam
add
pop
call
cdq
xlat
daa
xchg
aas
push
push
mov
sar
pop
jg
dec
mov
or
mov
ja
pop
mov
and
push
movs
out
jge
bnd
push
or
pextrw
push
and
js
daa
cmp
(bad)
iret
jmp
add
push
movs
sbb
fimul
add
ja
in
mov
jmp
mov
add
mov
leave
imul
push
jmp
nop
sbb
push
or
adc
pop
sbb
setno
jbe
aaa
and
and
cs
je
push
mov
mov
mov
addr16
dec
dec
jb
lock
in
sub
xor
popf
xchg
xor
pusha
sbb
sahf
lods
jg
pop
add
or
lea
add
inc
fstp
leave
add
jmp
mov
into
stos
hlt
addr16
jb
jo
scas
fucomp
cmp
or
xchg
in
fs
nop
and
add
in
in
mov
call
cdq
in
push
je
dec
cs
clc
xchg
out
and
in
pop
mov
push
inc
mov
test
push
in
and
popf
out
or
arpl
fadd
imul
in
xlat
pushf
in
or
cmp
test
out
lods
xchg
inc
enter
add
shl
call
sbb
das
in
or
ret
aas
xor
xor
xchg
in
jno
inc
jb
cmp
adc
jb
dec
inc
outs
ss
xchg
mov
inc
lock
mov
hlt
cmp
sub
cmps
(bad)
xchg
lahf
icebp
and
leave
leave
inc
fcomi
push
leave
sub
movs
rcl
aaa
add
enter
xchg
cmp
mov
repnz
(bad)
cwde
mov
add
repnz
dec
push
rcr
push
mov
ss
pushf
pop
xlat
cwde
(bad)
icebp
in
repz
clc
sbb
xchg
aas
xchg
sub
add
fmul
dec
mov
repnz
repz
mov
repz
push
dec
xlat
mov
mov
ins
mov
xchg
cmps
xchg
push
mov
add
repz
ret
movs
adc
in
or
fild
and
daa
dec
jle
stos
inc
(bad)
scas
jp
sbb
mov
xor
jae
xchg
pop
push
inc
push
inc
jb
sbb
cld
test
and
mov
rcl
sub
mov
pushf
cmc
fs
je
test
mov
mov
cwde
add
push
int3
dec
dec
jb
aas
cwde
xor
mov
cwde
pop
data16
scas
pop
and
mov
mov
enter
or
test
cwde
fistp
adc
xchg
test
pusha
and
inc
dec
(bad)
push
dec
fadd
cmp
jl
or
dec
mul
cs
loopne
fmul
aaa
daa
neg
pop
pushf
dec
or
mov
adc
add
xor
xlat
mov
cdq
jle
push
idiv
shr
test
mov
leave
imul
call
adc
dec
or
inc
in
leave
leave
leave
call
in
jb
ja
test
xchg
jg
imul
aam
add
in
sbb
dec
cmps
out
fmul
fwait
and
push
mov
adc
push
inc
dec
jb
xchg
add
fwait
outs
cli
cmp
pop
jb
fistp
jb
loop
iret
add
xchg
adc
lods
pushf
or
inc
pop
ss
pushf
inc
sti
adc
inc
cmp
ins
in
fstp
add
in
mov
add
iret
enter
pop
add
or
pop
leave
cld
repnz
cli
popf
add
jb
add
popf
or
cmps
xchg
daa
and
sub
xor
sahf
dec
je
cld
push
cdq
cmp
xlat
jbe
add
mov
mov
mov
inc
lds
sahf
push
in
add
cld
out
fsubr
cmp
test
daa
sub
add
(bad)
sahf
pop
std
pusha
push
mov
xchg
push
fsubr
jbe
leave
mov
xchg
lods
in
stos
cmp
iret
frstor
scas
daa
dec
dec
jb
cmp
dec
pop
aaa
and
sbb
(bad)
leave
movs
mov
loopne
cmps
mov
cld
(bad)
dec
cmp
push
adc
pop
daa
pop
inc
add
or
mov
je
scas
dec
pop
jmp
cwde
outs
jbe
and
dec
jg
call
dec
pushf
movs
lods
fistp
add
loopne
fild
movntq
out
cmp
cwde
addr16
in
fisubr
fisubr
xchg
mov
sub
shr
je
mov
idiv
daa
daa
cmp
scas
add
dec
pop
jno
or
fdivr
mov
frstor
mov
xchg
and
adc
movs
pop
stos
loopne
aad
xchg
pop
stc
adc
push
fmul
add
add
daa
inc
daa
adc
test
cli
scas
outs
in
pusha
ins
(bad)
(bad)
cwde
add
adc
add
daa
js
sti
pop
mov
pushf
sub
add
adc
and
inc
xor
aaa
data16
(bad)
inc
sbb
(bad)
in
mov
xlat
sti
jmp
pop
ins
jb
jne
xlat
mov
inc
jb
inc
mov
and
leave
sub
pop
pop
sbb
or
ficom
mov
sahf
in
nop
jne
sub
inc
pop
out
add
sub
jmp
lods
(bad)
movs
iret
daa
outs
stos
mov
test
ins
adc
pop
outs
adc
push
cmp
sub
leave
mov
das
fild
xchg
scas
add
inc
sub
loopne
mov
sbb
push
mov
orps
push
xchg
pop
jb
push
jbe
setbe
call
adc
add
inc
cs
add
mul
and
add
or
mov
pminsw
aam
adc
ror
cmova
daa
cmp
cmp
pop
mov
xchg
neg
pop
nop
cmp
xchg
adc
call
add
mov
xlat
add
push
cmp
jle
int3
or
or
adc
xchg
and
xor
movs
mov
jb
sbb
xchg
pop
and
xchg
outs
shl
and
in
cs
xchg
pop
ror
jmp
adc
and
pushf
pop
leave
and
and
leave
and
mov
or
cmc
dec
inc
jb
mov
mov
mov
cs
cs
fbstp
and
pushf
dec
cmps
adc
xchg
pop
inc
mov
xor
mov
mov
mov
in
inc
jb
adc
or
adc
xor
add
sub
clc
add
fisttp
dec
out
jl
or
daa
nop
mov
addr16
test
in
leave
in
ins
add
ja
movq
xor
xchg
add
add
pusha
or
inc
add
add
dec
lock
aas
push
pop
das
or
mov
out
rol
add
rol
mov
shl
sbb
add
add
inc
mov
add
xchg
push
pop
pop
imul
or
mov
xchg
xchg
or
dec
pop
push
inc
int3
aam
xor
cmp
lock
stc
push
stos
or
sbb
sub
ss
enter
or
pusha
or
or
or
dec
daa
in
dec
ror
push
les
add
and
cmp
cmps
loopne
pop
iret
stos
pop
pop
(bad)
inc
cs
je
adc
scas
scas
les
in
add
rcl
fsubr
(bad)
push
mov
and
push
mov
dec
aad
in
jecxz
out
iret
adc
dec
jnp
or
sub
ja
push
push
add
mov
int3
jmp
pop
mov
add
adc
div
lods
jne
sbb
dec
inc
mov
xchg
jb
pop
mov
or
jo
cdq
mov
pop
mov
mov
sahf
pushf
pop
(bad)
int3
fiadd
psubsb
enter
test
add
jb
and
or
add
pushf
scas
gs
mov
(bad)
jl
ret
pop
mov
push
lock
xchg
add
scas
scas
je
mov
push
push
adc
jb
jae
pop
push
lahf
test
dec
cmp
sub
mov
(bad)
cmp
or
mov
addr16
pushf
cwde
jbe
fist
inc
leave
add
adc
mov
mov
scas
nop
daa
mov
jb
fsubr
clc
jb
cmp
pop
xor
dec
adc
scas
inc
add
pop
pushf
dec
mov
mov
pop
je
xchg
call
mov
aas
mov
fldcw
dec
xorps
das
jl
retf
enter
push
mov
popf
dec
inc
mov
mov
mov
add
cld
inc
mov
xchg
xor
push
cmp
enter
add
imul
mov
xchg
or
and
aas
mov
add
sub
push
aas
jecxz
add
pop
outs
in
mov
leave
push
call
mov
addr16
mov
xchg
and
pop
punpcklwd
and
imul
test
mov
dec
pop
sub
pusha
scas
mov
mov
mov
jb
and
sbb
(bad)
retf
push
add
movs
(bad)
out
imul
sbb
lahf
and
test
sbb
sahf
je
ja
pop
add
jo
daa
xor
ja
je
mov
rcl
out
add
int
jg
pop
in
mov
lock
mov
or
sbb
sub
or
enter
mov
dec
and
jo
mov
shl
in
xchg
or
mov
add
jae
mov
push
imul
mov
add
cmp
cdq
cmp
ja
add
inc
xor
mov
mov
mov
daa
cmp
loopne
fdivr
or
dec
scas
push
dec
sbb
cmp
out
mov
jmp
pop
pushf
push
enter
in
sbb
test
mov
dec
(bad)
enter
outs
sbb
das
iret
push
mov
xchg
and
mov
mov
dec
xchg
fcmovne
fstp
push
js
mov
test
out
ror
fsub
xchg
adc
push
cmps
mov
sbb
and
sub
xor
popf
pushf
fadd
dec
pop
gs
leave
inc
xor
mov
mov
fwait
pop
cmps
ja
pop
mov
add
push
add
pop
clc
iret
pop
fs
sub
add
pop
out
in
jmp
cmp
xchg
and
mov
fisub
jbe
outs
fisubr
and
mov
xchg
mov
in
mov
fdivr
push
push
add
xchg
adc
pop
mov
xchg
pop
jb
xchg
lea
popf
rcr
jne
fbld
or
lock
xchg
cmp
inc
xor
add
mov
cwde
jne
les
stos
lock
xlat
and
in
and
daa
(bad)
and
add
pushf
pop
fs
aaa
add
(bad)
in
push
mov
and
aad
pushf
dec
cs
mov
pop
and
pushf
inc
sub
pop
push
and
add
cmp
mov
and
test
cld
in
popf
in
and
push
out
pusha
and
mov
mov
lahf
addr16
inc
inc
imul
mov
jmp
ins
jge
cmps
push
jg
mov
xchg
repnz
pop
mov
stos
push
mov
sbb
jnp
or
or
mov
add
mov
pop
popa
cmp
pop
leave
dec
movs
jbe
add
daa
jge
add
sub
aaa
adc
out
(bad)
mov
mov
inc
test
addr16
inc
mov
movs
push
shr
cmp
inc
daa
ror
cmps
loope
jb
jl
test
daa
add
cmp
daa
inc
inc
sahf
pop
and
jmp
inc
inc
pushf
sub
das
int3
add
rcr
in
daa
mov
(bad)
call
or
and
xor
mov
loopne
push
ror
inc
push
sub
add
pushf
fsubr
jo
lock
cwde
mov
jo
mov
nop
call
mul
jns
clc
shr
idiv
mov
dec
mov
adc
and
in
jbe
cmp
xchg
cs
xchg
add
(bad)
out
xchg
mov
mov
sbb
mov
stc
sub
addr16
cmp
sbb
and
xchg
outs
xchg
mov
mov
cs
lahf
ret
test
inc
adc
mov
inc
test
mov
jb
int3
add
add
add
inc
mov
or
or
or
(bad)
jb
pop
les
push
xor
scas
loopne
or
pop
push
lds
enter
rol
loope
out
add
std
and
std
imul
pop
sub
out
sub
daa
and
lds
out
lds
jnp
call
inc
test
push
jo
jmp
push
jb
push
inc
leave
mov
sub
nop
xchg
xchg
mov
(bad)
stc
leave
inc
shr
(bad)
mov
mov
pop
in
xchg
div
dec
xchg
iret
jb
mov
xchg
mov
aaa
or
leave
enter
btr
mov
leave
enter
loope
(bad)
adc
dec
mov
sbb
sub
shld
mov
pop
add
mov
fs
test
mov
shl
retf
sub
dec
dec
shr
or
push
ins
mov
xchg
out
pop
push
lar
add
mov
xchg
test
mov
enter
rol
or
jnp
shr
ret
lea
retf
fisubr
inc
xor
sbb
push
inc
or
fbstp
test
jnp
inc
rcr
add
mov
add
or
cmp
cmp
xchg
mov
retf
(bad)
cmp
inc
ja
movs
cmp
retf
add
imul
mov
and
in
loopne
pop
(bad)
into
pop
sahf
fdiv
popa
pushf
xor
mov
sub
outs
push
dec
outs
in
not
push
xor
cmp
inc
xchg
xchg
xchg
add
fs
mov
or
push
mov
xchg
push
test
fisubr
pop
cmp
enter
jecxz
icebp
retf
inc
test
sysenter
lahf
xor
inc
int3
xor
jbe
dec
xor
lahf
xchg
pcmpgtb
dec
mov
add
and
(bad)
je
fwait
jb
pop
push
pop
add
xchg
mov
orps
cs
xchg
add
in
enter
jg
mov
xlat
leave
sbb
jb
aam
pandn
jmp
movs
or
cmp
xor
dec
push
add
daa
inc
mov
ins
add
ja
mov
daa
or
scas
rcl
call
jo
adc
iret
cs
xchg
out
iret
sbb
mov
dec
add
add
jo
test
mov
push
lock
aaa
add
mov
sbb
jnp
add
enter
in
and
jmp
push
sub
sbb
shl
ror
aas
add
pop
add
mov
mov
push
mov
ret
cmp
shl
add
add
pop
add
outs
xchg
lahf
cmps
scas
ja
mov
ins
rcl
adc
dec
add
mov
fsubr
cmp
mov
(bad)
call
xchg
or
rcl
rol
sbb
push
add
lahf
push
lods
in
sbb
(bad)
or
fsubrp
cli
ror
add
inc
mov
push
add
stos
xchg
test
imul
cmp
xchg
add
mov
fs
sar
pop
dec
xor
addr16
aam
inc
xor
fstp
das
ja
les
dec
shr
add
nop
and
dec
je
jg
cmps
aam
fisub
(bad)
jo
pop
leave
and
daa
cmp
cmp
fwait
jb
aad
push
push
add
in
xchg
add
jl
mov
cwde
outs
mov
and
mov
popf
popf
pushf
idiv
pop
(bad)
push
femms
out
sbb
sub
(bad)
xor
or
pop
and
add
fimul
pmulhw
das
ins
add
jne
daa
and
add
mov
or
mov
daa
xchg
pushf
xlat
sub
add
sbb
inc
add
imul
and
daa
daa
daa
mov
fxch
xchg
or
fsubr
(bad)
repnz
enter
jge
(bad)
in
push
ds
pusha
mov
mov
mov
daa
xchg
xchg
sub
ror
aas
adc
aas
xor
and
adc
outs
mov
pop
cdq
fsub
xchg
in
xchg
cmp
nop
pushf
aas
rcr
or
push
daa
fnstcw
pushf
pop
mov
pop
inc
sub
imul
pop
dec
mov
mov
fisub
mov
fimul
mov
lock
mov
(bad)
fcmovnu
xor
ds
pop
jb
jnp
packssdw
push
jbe
add
mov
or
jns
sbb
mov
(bad)
cld
mov
adc
adc
add
fist
mov
jle
btc
clc
dec
pop
push
xchg
pop
fild
dec
push
daa
lock
sbb
or
daa
lock
inc
je
in
fadd
pushf
pop
ins
jbe
pop
lock
je
or
cmp
mov
xchg
xchg
or
sub
call
mov
out
(bad)
dec
mov
inc
dec
enter
rol
adc
fadd
fmul
pop
mov
xchg
in
mov
in
fld
dec
cmp
je
fs
jb
mov
mov
adc
dec
add
fisttp
in
leave
leave
bndldx
xchg
mov
ja
and
mov
cpuid
mov
out
xchg
movs
jb
into
ja
add
fiadd
fimul
aam
jbe
shl
aas
pop
inc
jo
or
icebp
push
ins
movs
jnp
inc
inc
pop
xchg
rcl
add
fs
enter
aas
mov
in
inc
mov
addr16
mov
es
and
inc
sbb
dec
jnp
leave
dec
jns
mov
xchg
add
and
mov
mov
mov
fcomp
loopne
call
lock
xchg
dec
cmp
sbb
add
add
push
in
xchg
je
ins
pushf
movs
imul
dec
add
mov
paddb
xor
dec
ja
pop
leave
imul
ja
xor
cmps
and
dec
loope
rol
jo
scas
dec
movs
and
or
mov
pop
leave
and
adc
and
or
loop
mov
loop
mov
xchg
das
ins
push
xchg
xchg
mov
mov
pop
in
int3
addr16
xchg
mov
dec
add
fnstsw
ins
leave
dec
aaa
repnz
or
adc
push
xor
inc
add
jae
push
xchg
xchg
mov
addr16
leave
inc
jb
adc
xlat
in
inc
jb
std
in
repnz
in
test
dec
push
dec
mov
xchg
in
and
mov
jb
add
jle
mov
call
and
ffree
out
je
and
pushf
cmc
in
add
adc
pop
jb
enter
add
inc
mov
push
or
jae
or
(bad)
or
xchg
ins
setb
in
pandn
(bad)
fimul
out
jns
bound
cmps
mov
and
adc
aas
add
adc
jns
ror
adc
or
add
seto
push
dec
and
fcom
in
mov
iret
rcr
jae
sbb
aaa
inc
mov
cs
add
dec
and
pop
out
and
shr
(bad)
mov
lahf
fwait
xlat
dec
mov
push
mov
and
les
in
and
mov
add
push
cmp
vmwrite
out
push
cmp
or
sbb
jb
imul
mov
jmp
cmps
mov
push
sub
in
and
(bad)
cmp
in
sti
call
push
and
sbb
pop
xor
inc
or
ror
or
imul
push
xchg
xchg
jb
ds
inc
push
rcl
add
fsub
sar
lods
sbb
fadd
jmp
in
test
pop
mov
sbb
cmp
jg
outs
adc
int3
scas
and
enter
xchg
pop
test
adc
xor
fist
cs
in
sub
movd
or
push
psrlw
in
movs
out
mov
mov
ror
and
mul
mov
leave
dec
add
and
sub
ja
pushf
pop
leave
dec
ja
push
add
xchg
movs
mov
and
add
dec
aaa
mov
jmp
out
or
push
and
jmp
add
mov
push
pop
(bad)
push
mov
inc
jnp
pop
push
or
fbstp
xchg
popf
das
movs
add
dec
fucom
call
cdq
call
and
inc
mov
ficom
dec
cs
les
xchg
clc
out
and
leave
push
sub
in
jb
and
addr16
aas
mov
inc
bound
aad
leave
inc
popf
in
addr16
cmp
retf
sub
pushf
pavgb
out
add
push
push
push
pop
xchg
pop
and
nop
test
out
inc
sub
out
xchg
add
cmps
cmp
out
or
in
pop
sub
xor
inc
xor
push
jb
mov
out
mov
xchg
pop
hlt
(bad)
lock
mov
mov
mov
jbe
dec
mov
addr16
and
rcr
loopne
mov
cmp
ja
xchg
icebp
mov
daa
add
leave
or
push
icebp
pop
pop
pusha
push
dec
fisub
xchg
mov
mov
ret
mov
and
addr16
mov
and
adc
mov
and
pop
cmp
inc
sub
dec
cs
add
sahf
in
in
mov
add
sbb
mov
add
xchg
and
pop
inc
repz
inc
aad
pop
fcomip
push
cmovo
pop
push
push
(bad)
movlps
mov
lahf
pop
mov
jbe
jmp
pushf
test
push
nop
setns
cmp
and
mov
push
loopne
sub
dec
dec
hlt
push
pop
sbb
into
dec
pop
hlt
xor
in
pop
mov
inc
adc
adc
clc
daa
pop
or
cmp
push
test
inc
jb
sbb
ins
cmp
add
pop
hlt
cmc
pop
iret
leave
mov
cwde
cmc
sub
mov
push
dec
pop
add
leave
inc
jp
mov
leave
popf
pop
(bad)
mov
cmps
cmc
push
rol
fadd
and
and
or
adc
nop
adc
das
div
pusha
or
je
mov
pop
fbld
add
xchg
mov
lahf
pop
adc
and
pusha
je
fisttp
mov
xchg
pop
sbb
in
mov
or
xor
in
mov
mov
idiv
mov
aad
mov
jb
(bad)
clc
push
clc
adc
add
cmp
bound
jo
push
(bad)
bound
pop
mov
mov
mov
mov
cmp
add
push
dec
in
push
mov
xor
add
pusha
outs
add
jbe
xor
mov
xchg
mov
cmp
cmp
lods
mov
call
jns
stc
cli
push
add
adc
and
mov
(bad)
cli
sbb
xchg
jb
dec
pushf
movs
push
es
leave
rcr
cmps
cli
loope
cmp
sti
adc
xadd
pop
or
jns
lock
add
addr16
and
add
inc
add
mov
xchg
add
cmps
ja
xchg
fisttp
pop
fst
mov
dec
mov
gs
add
test
pop
adc
cmp
inc
pop
data16
div
adc
push
cld
xor
cmp
jecxz
dec
cld
data16
outs
outs
pop
add
xchg
addr16
ins
sub
mov
inc
adc
in
adc
cmp
std
adc
sahf
xchg
sub
mov
mov
repnz
dec
add
gs
add
xor
mov
in
out
pop
inc
add
inc
pop
adc
jne
dec
push
stc
(bad)
(bad)
sub
(bad)
pop
mov
punpckldq
js
and
cwde
lods
sbb
pop
mov
pusha
add
xchg
loopne
les
imul
sub
xchg
pop
xor
inc
dec
inc
in
in
out
outs
add
imul
add
in
adc
cmp
int3
repnz
cld
(bad)
adc
adc
repnz
jmp
push
cs
add
outs
jo
adc
js
cmp
popf
in
pop
push
jmp
and
inc
aas
sahf
fcomp
jns
loopne
pop
into
pop
(bad)
add
daa
ins
stc
cmp
dec
sbb
adc
push
es
retf
das
cs
in
mov
imul
add
sbb
xchg
adc
xor
and
bswap
dec
in
enter
fsub
outs
pop
cmc
ja
add
xchg
fisttp
xor
cmp
inc
pop
and
push
(bad)
cs
mov
iret
push
xchg
mov
(bad)
fsub
pop
sbb
adc
xchg
ss
push
aaa
add
pop
and
(bad)
jbe
pop
jb
pop
js
mov
dec
jo
(bad)
lahf
add
(bad)
leave
cmp
(bad)
fimul
pushf
add
and
jmp
pop
in
mov
mov
test
and
outs
or
xor
popf
pop
out
mul
xor
jb
inc
add
add
push
push
pop
pushf
inc
push
jo
mov
test
jo
pop
mov
sbb
jnp
add
int
fild
jmp
inc
mul
jl
add
add
enter
add
add
inc
mov
les
jb
pop
fsub
jno
xchg
and
sub
push
adc
sbb
push
pop
je
xor
mov
jnp
xchg
dec
push
add
pop
add
inc
mov
add
jno
jns
or
movs
out
push
js
in
enter
add
xor
jbe
lahf
sar
setl
push
fnstenv
cmps
in
jnp
add
faddp
jb
sub
and
cld
pop
add
daa
xchg
xchg
sub
or
jb
pop
daa
das
pop
push
cmp
jns
repnz
push
jae
loope
inc
test
and
lahf
jne
or
jns
xor
push
daa
loop
scas
jae
or
daa
loopne
mov
test
adc
push
pushf
dec
push
out
iret
out
test
leave
retf
xchg
pop
sbb
sbb
arpl
xor
and
push
or
pop
add
inc
shr
xor
fs
addr16
rcr
jne
mov
cmp
add
mov
mov
xor
lods
add
xchg
test
pop
leave
fld
push
mov
adc
xchg
dec
jb
pushf
jbe
lods
jbe
pop
add
pushf
pop
iret
retf
xchg
mov
xlat
add
in
repz
ins
in
add
pop
or
or
sbb
or
push
xchg
mov
pushf
dec
or
adc
imul
cs
dec
fdiv
pushf
in
mov
pop
or
and
aas
ja
fcom
or
adc
push
cld
dec
js
in
rol
(bad)
mov
push
out
inc
cmp
pop
popa
imul
test
ins
nop
xchg
les
bound
jbe
or
add
jo
mov
or
in
leave
shr
mov
dec
mov
lds
daa
sub
adc
pop
or
xor
daa
jns
jb
int3
push
or
cmp
push
pusha
add
outs
add
and
mov
cmp
enter
or
or
or
sbb
iret
or
push
adc
jp
jg
mov
daa
or
push
add
inc
mov
add
add
outs
mov
int
add
in
sbb
scas
xchg
fsubr
jnp
and
jb
scas
push
and
sub
cmp
enter
add
fs
jb
add
or
stos
or
pop
leave
mov
jmp
in
xchg
add
add
add
das
push
cmp
or
enter
or
or
mov
enter
daa
jl
xlat
dec
or
jmp
sbb
adc
xchg
loop
enter
adc
pop
test
cmps
out
jl
scas
mov
dec
jp
nop
add
sahf
add
test
adc
pop
add
cmp
mov
daa
xor
jo
shr
out
xchg
mov
loop
out
cld
dec
adc
adc
add
and
xchg
adc
inc
xchg
pop
in
mov
jnp
inc
mov
loopne
adc
inc
repnz
lahf
jle
adc
iret
xchg
je
lea
addr16
and
aaa
adc
push
or
push
add
xchg
mov
nop
dec
cmp
jns
add
jbe
mov
xchg
jg
push
daa
daa
mov
(bad)
icebp
loope
xchg
adc
imul
leave
and
cmp
loopne
cmps
arpl
push
mov
cdq
das
or
mov
add
mov
push
add
pushf
dec
adc
test
or
pop
out
push
push
pop
aam
mov
and
jns
or
sub
mov
movsx
leave
inc
(bad)
iret
add
fisttp
and
out
add
adc
inc
adc
cmp
pushf
inc
loopne
cs
xchg
pushf
ja
adc
in
sbb
push
add
pop
jb
mov
xchg
pop
jb
daa
int3
jo
pop
jb
clc
sub
push
mov
pop
leave
dec
sbb
xchg
adc
and
and
sub
mov
and
pop
test
popf
in
or
pop
test
mov
jo
in
in
(bad)
pmaxub
pop
and
mov
cs
inc
jb
xchg
pop
test
push
xor
xchg
fs
cs
add
ret
mov
fadd
out
hlt
xchg
push
mov
dec
pop
xchg
sbb
enter
add
dec
add
movs
sbb
pop
push
fsubr
xchg
(bad)
xchg
setg
test
xchg
popf
pushf
pushf
mov
faddp
add
sbb
iret
scas
pop
and
addr16
dec
jb
push
xchg
xchg
and
xchg
pop
ins
movs
rol
aam
or
adc
fdiv
inc
setp
add
add
dec
sbb
stc
dec
pop
sbb
mov
jb
dec
or
test
and
inc
mov
xchg
pushf
pop
(bad)
xchg
addr16
mov
sbb
push
sbb
sub
cs
xchg
outs
xchg
pop
jns
dec
dec
addr16
add
and
dec
cs
dec
leave
shl
cli
sbb
leave
mov
cmp
mov
addr16
popa
add
jb
dec
cwde
out
mov
mov
ja
mov
pop
push
or
adc
sbb
inc
push
pop
aam
push
je
lea
adc
and
pop
mov
and
push
cs
xchg
sub
push
xor
xchg
xchg
outs
in
add
add
popf
pushf
fsubr
ja
or
xchg
mov
imul
fs
and
pop
push
or
dec
cs
cwde
das
aaa
ror
sub
dec
mov
lea
xchg
mov
mov
and
mov
and
mov
cmps
jno
mov
mov
xchg
and
xor
add
push
add
ins
add
jp
mov
xchg
(bad)
mov
xchg
jle
sub
addr16
ror
pushf
dec
jb
inc
jb
jnp
daa
cmp
inc
test
and
mov
push
and
xchg
adc
add
and
add
ja
sub
daa
leave
dec
cs
call
mov
pop
lods
mov
bsr
leave
inc
cmp
nop
inc
fucomip
jb
mov
push
and
mov
xlat
fiadd
and
ss
leave
fsub
adc
leave
and
and
(bad)
in
adc
xchg
and
inc
mov
cmp
mov
ja
in
outs
test
test
setae
dec
dec
ficom
rcl
dec
dec
loopne
out
cs
outs
jb
push
mov
dec
cs
dec
fcom
xchg
push
leave
xchg
or
(bad)
xchg
outs
addr16
movsx
shr
stc
setb
jo
daa
add
pop
xchg
pushf
jb
movs
or
xchg
jbe
pop
xor
xchg
xsha256
cmps
push
shl
push
xchg
cmp
inc
mov
pusha
jmp
jmp
pop
mov
sbb
in
push
push
in
add
cmp
in
xchg
in
pop
push
mov
xchg
add
jb
add
pop
out
out
jmp
ins
sub
push
add
in
and
mov
(bad)
in
and
aas
adc
mov
xchg
mov
(bad)
fsub
add
and
sub
movs
mov
pop
cs
fcom
push
jo
pop
xchg
add
jg
leave
dec
ja
add
stos
push
ficom
es
jbe
add
xchg
mov
inc
add
cmp
or
leave
sub
pop
pop
in
and
scas
sub
or
pop
leave
and
adc
and
and
push
inc
scas
push
movs
les
mov
xor
dec
out
bound
add
in
sbb
lea
mov
cmp
(bad)
pop
cdq
jl
cmp
addr16
pop
(bad)
cdq
mov
call
inc
dec
pop
pop
add
ficomp
arpl
push
outs
jns
je
cmps
pop
fcos
call
push
je
xchg
cld
into
mov
jmp
and
cmp
xchg
sbb
call
frstor
imul
loopne
xchg
pushf
pop
scas
mov
adc
push
fsubr
fimul
jecxz
cs
enter
dec
fild
push
das
sbb
fistp
xchg
je
mov
pop
adc
xchg
call
addr16
ja
jb
sbb
and
sbb
xor
pop
adc
pushf
pop
push
pop
push
mov
dec
mov
mov
cmp
jp
adc
push
mov
push
xor
nop
gs
inc
jb
rcr
daa
popf
clc
mov
jmp
pop
bound
pop
stos
cmc
iret
inc
cmp
ja
daa
xchg
adc
lods
test
pop
fs
dec
and
rol
js
and
jnp
(bad)
push
cmps
fmul
jmp
and
ss
aas
in
add
(bad)
lock
fild
cmp
add
adc
popf
repz
hlt
mov
pop
add
pop
push
xchg
pop
loopne
sub
dec
sbb
arpl
sub
mov
pop
and
and
adc
push
dec
jle
ret
cs
mov
jbe
dec
and
shl
lock
and
fdivr
and
mov
jle
lds
dec
dec
addr16
imul
cmp
dec
ins
loopne
je
aas
adc
mov
jne
js
xchg
and
nop
xor
loope
xchg
mov
xchg
clc
adc
in
inc
xchg
cs
push
cli
iret
pop
mov
(bad)
push
fild
stos
mov
xlat
mov
in
mov
iret
es
call
mov
popf
mov
in
dec
enter
pushf
add
nop
fisttp
cmp
jle
lahf
or
mov
push
fnstenv
(bad)
mov
leave
mov
mov
ror
fldenv
in
out
adc
push
push
xor
push
mov
push
dec
out
daa
cmp
movs
movs
movs
mov
or
daa
call
gs
adc
or
and
push
mov
push
dec
in
fld
data16
xor
mov
xor
ja
inc
dec
cs
cwde
test
daa
scas
in
ror
mov
ret
cmps
(bad)
dec
and
inc
add
test
sbb
sti
dec
dec
lock
ja
loopne
shl
rol
push
cdq
sti
xchg
and
add
cmps
in
push
out
ret
mov
add
mov
xor
xchg
fld
shl
lock
adc
lock
test
mov
sub
cmps
sbb
outs
cli
mov
shr
push
scas
in
pop
push
sub
pop
push
stos
jmp
mov
movs
daa
push
ins
mov
add
push
iret
xor
enter
add
pop
adc
ucomiss
inc
mov
nop
pmullw
push
push
sub
mov
and
jmp
cld
and
dec
and
and
sub
or
mov
fs
nop
and
shl
outs
push
enter
(bad)
xchg
add
add
out
add
and
adc
dec
cs
xor
dec
cs
dec
pusha
mov
mov
mov
xor
in
mov
xor
lods
adc
pusha
lods
inc
nop
movs
xor
add
cmps
add
in
xchg
mov
lods
push
xor
add
mov
fist
add
pop
imul
pop
daa
mov
lods
add
cmove
xor
and
push
sbb
mov
jb
loopne
adc
and
pushf
adc
sbb
ss
iret
add
inc
xor
xlat
leave
leave
inc
mov
ret
das
cmps
xchg
sbb
ss
fld
enter
aaa
or
mov
ror
inc
aaa
aaa
xchg
push
leave
leave
leave
inc
or
sahf
cmps
scas
mov
dec
dec
fmul
in
lahf
mov
data16
mov
dec
mov
mov
push
dec
pop
leave
and
and
loopne
adc
out
(bad)
cmp
add
pop
mov
xor
iret
into
mov
loope
mov
push
pushf
jl
iret
sbb
push
pop
imul
nop
dec
cmp
cwde
cmps
mov
rcl
mov
mov
and
add
inc
mov
mov
add
pop
mov
daa
mov
xchg
repnz
add
js
push
daa
mov
cmp
popa
pop
sbb
retw
inc
jb
cwde
hlt
rcl
sub
dec
dec
mov
cmp
mov
mov
pushf
pushf
fdiv
xchg
mov
fwait
xchg
ror
fst
add
stc
add
shr
cmp
add
and
sbb
add
cmp
popf
in
jl
ds
mov
inc
mov
mov
dec
inc
mov
es
mov
adc
mov
pushf
mov
mov
scas
push
daa
mov
jns
ins
pushf
sar
lock
popf
dec
push
mov
xor
and
xchg
pop
and
push
js
inc
xor
lea
(bad)
leave
leave
mov
ret
iret
cmp
sbb
fnstcw
sbb
call
sub
psubusw
ds
arpl
and
sbb
add
test
xchg
push
call
mov
mov
or
or
out
repnz
adc
or
adc
push
adc
adc
xchg
and
adc
mov
movs
xlat
push
push
sbb
xchg
aas
aas
aas
aas
popf
arpl
inc
cmp
xchg
icebp
inc
enter
inc
adc
push
inc
mov
mov
mov
jnp
add
inc
dec
(bad)
push
dec
mov
in
aaa
je
aaa
inc
xchg
inc
mov
test
adc
jbe
xchg
loopne
pop
stc
ror
or
xor
inc
inc
inc
enter
push
pop
add
add
jb
jp
test
nop
or
mov
or
(bad)
push
shl
adc
and
dec
out
add
repnz
inc
inc
not
xchg
mov
leave
add
loopne
jg
popf
cwde
or
push
mov
xlat
xor
xchg
and
dec
scas
pop
rcl
mov
inc
and
sub
ja
mov
pusha
iret
clc
nop
sets
cmp
test
jae
rol
mul
inc
add
add
push
push
sub
cmp
dec
jb
enter
or
jae
inc
mov
or
xchg
and
adc
adc
adc
pop
enter
sbb
sub
cmp
sbb
jb
inc
sbb
sbb
inc
mov
mov
call
or
addr16
lods
mov
inc
clc
mov
inc
inc
push
or
adc
and
dec
add
sbb
and
xchg
mov
mov
pushf
sbb
push
jno
sbb
inc
dec
dec
into
setns
push
or
test
mov
mov
mov
push
lock
add
add
xchg
xchg
and
add
pop
jb
in
adc
sbb
and
pop
retf
jb
sub
push
xor
es
mov
popa
ror
cmova
cwde
adc
dec
nop
not
cwde
pop
mov
enter
enter
psubsw
cmp
in
add
pop
and
cmp
cmp
xor
inc
call
pop
mov
sbb
dec
dec
iret
shl
movs
inc
pop
shr
loopne
iret
call
sbb
cmp
ror
dec
xchg
xchg
xchg
and
dec
dec
jno
xchg
xchg
xchg
xchg
jl
xchg
dec
popf
dec
xchg
xchg
xchg
xchg
test
mov
mov
xchg
xchg
xchg
aam
fisttp
dec
cmc
dec
xchg
xchg
xchg
xchg
add
dec
push
dec
and
xchg
xchg
xchg
sub
aaa
dec
inc
dec
mov
mov
push
sbb
bound
push
enter
jb
jp
sbb
cmp
mov
xchg
and
and
stos
and
jb
enter
daa
fld
out
and
sbb
sub
sub
sub
jb
enter
cs
je
cmp
xor
xor
dec
mov
xchg
dec
jo
jnp
xchg
in
and
dec
xchg
ret
add
shl
loopne
add
lock
in
xchg
add
add
and
jb
dec
dec
push
and
sub
enter
or
or
sbb
dec
(bad)
adc
pusha
adc
adc
setae
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
add
je
jns
es
sub
dec
daa
daa
ins
xchg
mov
fisubr
mov
enter
in
xchg
and
pop
loopne
call
jb
or
or
or
or
adc
sbb
and
leave
leave
leave
leave
or
leave
leave
leave
or
pop
push
leave
leave
leave
leave
add
mov
or
dec
mov
mov
pop
dec
cmps
data16
jl
xchg
mov
aam
leave
dec
ja
mov
and
clc
dec
add
dec
xor
cmp
daa
mov
outs
cmovs
push
add
pop
pusha
in
jge
movsx
jo
test
or
mov
pop
nop
or
cwde
xchg
repnz
sbb
call
(bad)
dec
pop
dec
aaa
sbb
push
es
push
inc
add
enter
dec
mov
add
xchg
pop
pushf
nop
cwde
mov
scas
movzx
mov
mov
(bad)
or
fimul
push
lea
or
pop
add
pop
push
sbb
and
in
xchg
and
add
add
add
dec
add
add
mov
jb
push
or
ins
or
js
or
push
leave
leave
leave
leave
or
jb
enter
movs
pop
scas
sbb
inc
mov
sbb
sbb
sbb
daa
daa
daa
daa
pop
push
adc
and
and
and
and
push
pop
and
repnz
(bad)
mov
(bad)
add
jg
ror
push
or
xchg
fimul
jg
enter
lock
xchg
dec
dec
clc
pop
push
and
sub
cmps
sub
nop
cmps
leave
leave
inc
ror
int3
nop
cwde
leave
enter
push
test
mov
jb
leave
mov
rol
sbb
fadd
loopne
call
enter
or
in
leave
leave
adc
xor
aas
cmp
cmp
cmp
adc
adc
mov
bound
push
jb
jp
fs
and
fst
push
mov
out
sbb
fmul
push
out
or
repnz
add
push
xor
push
inc
add
movs
sbb
add
cmps
push
pusha
dec
dec
fisubr
mov
mov
(bad)
pop
into
add
popf
fmulp
or
add
push
and
inc
push
leave
cmp
daa
and
inc
lods
dec
inc
add
in
outs
vmwrite
xchg
int
daa
movs
scas
mov
push
push
js
add
adc
inc
mov
cdq
scas
push
cmps
inc
or
mov
fadd
adc
push
into
cmp
mov
and
push
push
add
sbb
xor
inc
add
add
xchg
and
jnp
mov
pushf
sbb
movs
or
and
mov
push
fucomp
adc
inc
repnz
daa
adc
jo
jl
leave
push
push
push
xor
cmp
pop
in
push
(bad)
iret
and
pusha
push
jno
sqrtps
iret
push
enter
rcr
mov
fcomip
add
pop
xchg
mov
add
shr
cmp
push
cmp
push
add
mov
and
add
dec
outs
fbstp
(bad)
or
xchg
and
or
or
jb
pop
add
push
push
sbb
and
dec
inc
sahf
mov
cmp
daa
and
jno
and
sbb
xor
leave
add
add
nop
cmp
pushf
loope
shr
xchg
or
call
inc
mov
push
sub
xor
add
dec
dec
push
pop
out
in
and
js
mov
in
in
sahf
test
xchg
xchg
push
in
loopne
xchg
inc
dec
neg
pop
adc
out
dec
jne
rol
pop
inc
push
dec
enter
push
pop
add
xor
leave
jo
push
add
and
bnd
lahf
cwde
or
retf
nop
pop
pop
adc
pop
in
jmp
cmps
shl
je
pop
cmp
pop
push
xchg
xchg
add
sbb
add
enter
mov
jo
pop
push
pop
adc
add
es
cmp
fidiv
xor
xchg
adc
dec
xchg
setge
mov
ss
(bad)
mov
in
xchg
daa
icebp
add
add
fs
dec
pop
push
or
and
imul
sub
pop
jbe
add
leave
dec
add
sub
push
sub
out
push
add
and
push
add
add
leave
enter
xchg
call
aad
and
adc
add
dec
inc
je
enter
sbb
cmp
mov
lock
pusha
and
aam
mov
cmovg
(bad)
in
dec
daa
add
pop
(bad)
enter
je
add
xchg
sbb
lds
pusha
push
push
mov
lods
inc
rcl
pop
pusha
(bad)
mov
and
imul
sbb
and
inc
mov
or
imul
popa
outs
push
outs
mov
pusha
push
add
xchg
daa
and
bound
inc
popa
mov
and
popa
popa
popa
loopne
jb
adc
xchg
xchg
and
add
mov
ret
mov
xchg
mov
sahf
pusha
mov
jo
jo
mov
xchg
xchg
and
or
xchg
xchg
ror
enter
ja
fld
arpl
movs
inc
pinsrw
jbe
fdivr
xchg
daa
fimul
mov
stos
pop
mov
mov
jmp
daa
mov
pslld
add
mov
xchg
or
outs
push
sbb
and
and
imul
or
pop
bound
push
or
xor
push
fsubr
addr16
lock
xchg
push
or
jb
jnp
das
sbb
and
das
sub
sbb
jns
or
dec
or
and
imul
outs
out
popa
gs
push
mov
nop
ja
in
in
jns
and
retf
jb
fcmovnbe
das
(bad)
gs
pusha
cmp
cdq
dec
data16
sub
dec
cmp
inc
mov
lods
jo
sahf
mov
add
dec
dec
dec
call
pop
rcr
in
jae
and
frstor
addr16
leave
mov
xor
sub
outs
mov
push
fmul
xchg
int3
dec
daa
addr16
dec
sbb
add
jl
jb
fadd
jmp
xchg
and
adc
and
xor
cmp
enter
or
push
sbb
or
mov
adc
adc
jns
xor
pop
adc
cmp
adc
fisttp
add
iret
xchg
setp
jb
lods
push
mov
mov
xchg
add
inc
or
lea
(bad)
in
cmp
call
push
in
fst
loop
jmp
push
cli
pop
imul
or
enter
adc
sbb
and
cmp
sub
inc
adc
adc
pop
adc
jb
enter
adc
inc
into
pop
aas
inc
sbb
dec
sbb
pop
jb
enter
sbb
sbb
sbb
jp
and
and
and
and
mov
mov
sub
and
sub
imul
sub
ins
xchg
mov
nop
cmp
fcom
inc
mov
or
push
add
enter
add
xor
xchg
xchg
fstp
inc
dec
push
or
fs
or
or
cdq
or
mov
mov
test
pop
int3
adc
(bad)
adc
stc
ins
push
push
push
pop
push
adc
daa
and
cs
xchg
daa
inc
push
dec
pop
push
and
jb
popa
and
and
inc
mov
daa
in
leave
enter
mov
mov
jb
sub
sub
retf
xchg
and
xor
xor
xor
jb
outs
or
adc
pop
adc
ss
and
xor
cmp
inc
cmp
in
dec
cmp
arpl
outs
cmp
jns
test
jb
movs
inc
scas
inc
mov
kxorb
dec
loopne
test
loope
sub
outs
push
and
inc
mov
add
add
add
xchg
and
or
mov
jb
or
or
mov
ror
adc
xor
fst
jmp
stc
jo
cmp
cmp
or
sbb
cmp
cmp
sub
cmp
cmp
cmp
pop
xchg
push
dec
in
and
jo
inc
mov
push
mov
xchg
add
add
and
int
mov
jb
push
jecxz
out
or
jbe
jns
or
mov
pmulhuw
in
cmp
pop
sbb
dec
loopne
mov
mov
cmps
mov
add
out
cmp
jns
jbe
jmp
neg
jb
add
inc
sahf
mov
and
sbb
xchg
mov
pop
jb
mov
mov
enter
mov
mov
ret
or
or
or
pop
push
cdq
cmp
jae
(bad)
adc
dec
sbb
es
adc
xchg
lods
out
jae
jae
jns
jns
jae
jae
jae
jae
xchg
dec
cmp
jae
jle
or
fs
stos
or
inc
mov
retf
push
fimul
loop
enter
jmp
jb
je
adc
or
xchg
and
and
sub
xor
inc
mov
sbb
push
inc
sbb
pop
leave
retf
push
out
je
push
in
and
les
push
cmp
enter
add
add
add
inc
mov
add
repnz
(bad)
cli
or
test
xchg
jne
jne
pop
push
add
push
cdq
xchg
jmp
lea
addr16
daa
mov
ror
fsub
call
out
in
adc
sbb
sub
dec
pushf
pop
and
pop
jo
xchg
push
dec
xchg
nop
das
jbe
jnp
jbe
push
lods
mov
jg
leave
in
fs
(bad)
repz
jg
or
ja
or
or
or
das
push
enter
and
mov
in
pop
push
data16
pop
jl
xchg
mov
xchg
xchg
in
leave
fst
or
jb
or
aam
and
daa
mov
enter
bndstx
push
add
add
add
cmps
push
in
or
dec
dec
or
dec
lods
mov
and
push
push
add
jbe
cmp
add
lock
sti
pop
inc
mov
push
mov
adc
sbb
daa
dec
inc
fidivr
xor
cmp
or
pop
pop
imul
in
xchg
and
mov
xchg
adc
mul
push
pop
mov
sbb
sbb
int3
xlat
sbb
in
and
(bad)
vmwrite
in
mov
jp
packssdw
or
or
das
loope
int3
popa
dec
popw
in
pop
jnp
leave
retf
add
pop
out
adc
dec
in
dec
add
daa
pop
or
enter
sets
add
gs
pop
xlat
mov
xor
outs
ja
mov
jl
out
fbstp
mov
jmp
daa
push
cmp
inc
jb
jb
dec
push
popa
ins
ja
jb
ja
mov
dec
or
sbb
int3
(bad)
jge
and
and
jge
sbb
mov
dec
cmp
mov
or
or
and
outs
jo
js
or
dec
nop
adc
jb
fs
adc
mov
inc
mov
pop
rcr
fcomp
loopne
test
out
imul
nop
out
push
xor
inc
dec
push
push
popa
inc
add
ror
or
cmp
retf
fsub
into
mov
add
and
rol
add
xchg
mov
or
or
or
or
push
or
and
(bad)
adc
in
adc
xchg
and
into
push
fcom
jmp
sbb
and
and
sbb
sbb
pop
jb
enter
and
xchg
jb
jb
nop
cwde
mov
jns
sub
cmp
rcr
loopne
inc
push
cmp
lock
add
mov
and
xor
aas
and
xor
enter
cmp
cmp
sbb
jnp
cmp
push
cmp
cmp
inc
mov
call
pop
stos
inc
ret
fadd
in
leave
enter
inc
hlt
cld
dec
bndstx
jb
add
dec
adc
sbb
inc
mov
and
sub
xor
cmp
dec
outs
daa
and
push
pop
test
ins
push
je
mov
test
stos
add
dec
cmp
and
add
movlps
and
sbb
add
inc
add
xchg
push
addr16
js
mov
inc
mov
call
or
fimul
out
je
cmp
adc
adc
adc
inc
sbb
cmc
in
mov
idiv
add
in
outs
push
test
js
adc
pop
sbb
inc
jl
jl
daa
cmc
or
daa
cmc
dec
add
pushf
scas
and
retf
add
es
mov
loop
pminsw
dec
inc
cmps
add
push
jns
scas
test
test
cmc
pop
inc
ss
test
dec
add
xchg
xchg
xchg
and
ins
ja
in
fld
cwde
or
scas
or
mov
or
(bad)
(bad)
(bad)
adc
adc
push
adc
adc
cmp
enter
push
cmp
inc
mov
sbb
imul
push
pop
sbb
sbb
mov
push
mov
add
pushf
pushf
add
retf
xchg
daa
and
hlt
or
or
jb
xchg
or
adc
sbb
and
mov
dec
sub
xor
cmp
daa
mov
inc
adc
dec
push
adc
enter
pop
ins
je
pop
jb
in
leave
jl
sbb
mov
sbb
pushf
push
cmps
pop
mov
and
and
aad
cmp
enter
es
daa
clc
sub
inc
mov
sub
sub
sub
in
fst
aaa
cs
das
mov
jb
xor
arpl
outs
xor
xchg
and
xor
xor
in
leave
mov
cmp
jb
fs
mov
outs
mov
inc
mov
aas
(bad)
inc
fiadd
retf
xchg
mov
out
inc
psadbw
cmp
in
push
inc
push
inc
pop
push
dec
push
dec
dec
inc
mov
pop
cs
ss
mov
and
inc
dec
dec
push
push
lahf
pop
jb
enter
push
outs
push
jbe
cdq
cmp
xchg
inc
mov
pop
cmps
pop
mov
mov
pop
(bad)
pop
iret
pop
ficomp
mov
loop
jmp
in
xchg
and
adc
data16
jb
sub
imul
inc
inc
(bad)
test
mov
mov
mov
jns
cmp
sti
or
sti
shl
push
or
leave
dec
aaa
jb
add
xchg
daa
daa
daa
pop
inc
dec
push
pop
and
mov
xchg
pusha
add
mov
and
daa
stos
mov
mov
enter
pop
ror
fisttp
xchg
retf
jecxz
or
pop
adc
sbb
jb
xor
cmp
inc
add
add
push
pop
pop
pusha
push
pshufw
or
dec
or
cmp
retf
rcr
add
repz
(bad)
int3
dec
sti
lea
or
or
add
xchg
xchg
and
or
repnz
adc
inc
add
adc
cmp
push
pop
add
push
imul
xchg
daa
and
add
sbb
jb
mov
xchg
sbb
sbb
sahf
mov
(bad)
push
outs
daa
and
and
fimul
out
ret
enter
daa
imul
(bad)
out
fld
sbb
jge
pop
push
inc
add
inc
sahf
mov
add
arpl
imul
xchg
daa
and
add
in
or
sbb
sbb
ret
jb
mov
nop
lock
add
or
adc
and
sbb
add
pop
fs
xchg
xor
add
dec
cmp
cmp
push
add
arpl
and
mov
jnp
add
xchg
adc
adc
in
add
dec
inc
mov
add
sbb
jecxz
sbb
pop
repz
and
push
in
fisttp
nop
and
sub
push
xor
call
inc
dec
add
rcpps
pop
arpl
daa
and
add
in
mov
sahf
mov
stos
add
add
retf
adc
in
xchg
jecxz
sbb
sbb
inc
mov
xchg
add
sbb
inc
fimul
aas
sub
xor
cmps
xchg
iret
and
add
lahf
xchg
push
jae
jnp
mov
cmp
fwait
pop
xchg
and
mov
in
enter
add
ror
sbb
xor
pavgw
add
adc
dec
pop
mov
adc
xchg
mov
xchg
push
sbb
das
sub
cmps
xchg
xchg
pop
call
add
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
repnz
push
retf
or
mov
jecxz
jmp
repz
outs
daa
mov
aas
fcom
or
das
sbb
and
fistp
add
ficomp
push
cvtdq2ps
scas
arpl
imul
dec
jae
(bad)
add
in
xchg
xchg
pop
xchg
fwait
add
fs
mov
mov
inc
sahf
mov
rol
fist
jecxz
push
cs
repz
inc
leave
iret
adc
mov
and
and
xchg
xchg
xchg
xchg
in
and
xchg
xchg
push
add
in
pop
and
je
sub
add
xchg
mov
das
xchg
xor
movs
sub
(bad)
cmp
cmp
add
neg
fs
dec
xchg
inc
xchg
push
and
dec
xchg
inc
push
cmp
inc
jb
enter
add
jno
inc
mov
jg
lea
fwait
or
and
or
sbb
jb
or
xchg
or
and
inc
sbb
pop
and
adc
or
in
xor
dec
xchg
pusha
(bad)
inc
jl
mov
mov
xchg
loopne
jmp
xchg
and
xchg
add
and
inc
add
push
pop
pop
dec
data16
inc
mov
or
enter
push
mov
mov
leave
adc
adc
adc
and
sahf
cmc
adc
or
push
leave
dec
adc
sbb
xchg
push
cwde
pusha
push
imul
add
mov
pop
xchg
mov
lods
mov
mov
or
or
cli
push
leave
enter
add
xor
in
adc
dec
adc
jne
jnp
jnp
push
pop
mov
dec
inc
mov
sbb
xchg
daa
daa
and
jecxz
and
ins
in
stc
and
sbb
xor
fs
sub
pop
sub
sub
and
jge
cs
sahf
leave
enter
test
repnz
xor
loopne
jmp
imul
cmp
xor
fwait
das
or
movhps
inc
mov
sub
inc
dec
inc
xchg
xchg
and
pop
inc
fs
outs
in
enter
jne
jnp
xor
dec
mov
(bad)
dec
lahf
sahf
mov
ror
dec
call
pop
into
paddd
or
pop
enter
sub
xor
cmp
dec
inc
push
pop
popa
pop
ins
pop
call
pop
lea
jb
jnp
push
mov
arpl
inc
mov
fs
fisub
daa
daa
daa
bound
mov
movs
add
pop
loopne
cwde
mov
sbb
sbb
cdq
outs
popf
popf
popf
popf
outs
pop
leave
aaa
mov
fs
js
sbb
dec
data16
mov
in
mov
ror
cmp
or
inc
ds
sahf
push
or
adc
fst
and
in
leave
enter
inc
or
ins
jbe
jb
dec
or
pop
gs
jne
shl
jne
pandn
mov
inc
sahf
mov
add
retf
add
push
enter
fninit
add
or
repnz
repz
add
mov
adc
sbb
and
add
and
adc
inc
das
dec
push
dec
push
and
lock
mov
add
lahf
push
mov
enter
nop
add
add
in
test
add
mov
repnz
or
push
inc
mov
fsub
or
adc
outs
and
dec
clc
push
add
pop
adc
das
or
mov
pop
push
dec
add
arpl
mov
sbb
test
(bad)
fmulp
into
mov
jmp
jbe
popf
int3
shld
pcmpeqd
cmp
(bad)
adc
adc
fsub
jle
adc
adc
pop
enter
push
sbb
sbb
sbb
jb
aas
sbb
push
sbb
inc
mov
jbe
and
mov
xchg
and
inc
mov
es
daa
into
sub
jb
enter
sub
sub
sub
mov
mov
sbb
es
enter
and
inc
xor
xor
xor
enter
jle
mov
xchg
cmp
jb
in
cmp
sar
inc
mov
aas
(bad)
inc
loope
dec
dec
mov
maskmovq
mul
cmp
fisttp
test
pop
dec
and
add
add
add
aam
fild
jmp
movs
add
push
in
in
and
inc
jb
xor
dec
adc
outs
inc
mov
jns
test
(bad)
pop
call
mov
dec
rcr
out
daa
daa
inc
dec
std
movs
or
push
daa
daa
daa
daa
sub
dec
daa
daa
daa
daa
push
pusha
imul
daa
daa
or
mov
jb
xor
ftst
out
mov
jb
cmps
add
and
es
cmp
dec
pop
inc
adc
cmps
sbb
rcl
add
pushf
add
add
and
or
or
scas
ror
dec
or
fimul
jnp
cmps
pop
push
or
mov
and
sub
ss
dec
dec
pop
push
or
sbb
jb
ins
or
jge
mov
xchg
push
sahf
pop
adc
jb
enter
adc
adc
cmp
adc
out
sbb
cmp
maskmovq
sbb
and
sbb
cmp
xchg
daa
mov
cmovo
push
adc
fs
pop
arpl
repnz
sub
xchg
sub
mov
cmp
pop
(bad)
ror
fdiv
das
inc
mov
xor
xor
in
enter
cmp
sub
mov
jb
cmp
cmp
inc
ds
dec
aas
push
inc
pop
inc
sbb
jb
push
jne
add
and
xchg
inc
mov
in
enter
dec
inc
inc
leave
leave
in
in
inc
dec
inc
inc
enter
inc
inc
aas
push
sbb
jb
retf
cmp
push
call
mov
pop
(bad)
pop
stos
push
stos
xchg
fst
push
push
pop
(bad)
jb
in
enter
popa
outs
inc
bound
sahf
mov
pop
bound
jb
daa
and
pop
jp
sub
fst
popf
ins
movs
lods
outs
(bad)
xchg
mov
jo
lds
sbb
jb
aad
loopne
jmp
div
addr16
mov
js
adc
sbb
in
xchg
jp
jnp
jl
jge
mov
dec
jle
jg
sub
xchg
xchg
and
jg
leave
leave
leave
leave
jg
jge
leave
leave
leave
leave
jnp
jns
leave
leave
leave
leave
ja
jne
in
leave
leave
jae
xchg
xchg
xchg
xchg
lahf
cmp
mov
fwait
ror
popf
shr
bswap
push
and
leave
leave
leave
leave
sub
cmp
enter
push
jg
or
or
and
pushf
cmp
mov
add
pushf
mov
xchg
daa
and
or
jmp
iret
lods
add
sub
imul
pusha
and
in
push
cmp
inc
add
in
xchg
add
pop
add
jns
push
add
cmp
mov
push
repnz
mov
xor
adc
or
enter
cli
add
scas
add
or
lea
jb
add
add
mov
xor
cmp
or
mov
ss
mov
daa
daa
and
jp
or
call
mov
sbb
scas
movs
repnz
scas
rcr
bndstx
xchg
test
inc
mov
sbb
and
add
je
cmp
or
mov
jb
jnp
xchg
xchg
sbb
popf
pushf
xcrypt-ctr
cmps
pop
mov
mov
enter
(bad)
dec
and
sbb
mov
cmp
pop
push
sub
add
mov
add
outs
pop
xchg
xchg
daa
and
or
fwait
or
cmp
jb
cmpxchg8b
adc
inc
mov
adc
adc
inc
pushf
pop
unpcklps
pop
sbb
sbb
sub
xor
daa
and
push
push
aas
popa
pop
ins
ja
in
xchg
push
and
and
xor
daa
les
xor
push
fisubr
in
sub
imul
in
in
mov
mov
in
in
mov
mov
in
in
mov
mov
mov
push
mov
inc
into
aas
rcl
fst
call
mov
paddd
push
cmp
sbb
sbb
mov
outs
ins
pop
sub
ja
and
sbb
ds
cwde
and
xchg
mov
push
in
enter
clc
mov
push
add
cmp
sbb
cmp
daa
and
inc
or
pop
enterw
jno
push
xchg
xor
fs
adc
cmp
leave
aam
pop
fist
mov
inc
mov
sbb
mov
sbb
or
push
sbb
sub
getsec
in
enter
and
jg
and
and
jns
mov
sub
movs
sub
inc
mov
sub
fsubr
out
repnz
xor
addr16
mov
xor
push
xor
jb
enter
ss
aaa
dec
cmp
sbb
push
cmp
imul
cmp
mov
and
aas
cmp
enter
inc
mov
sahf
mov
inc
ftst
inc
pop
out
addr16
(bad)
sahf
cli
dec
movzx
sbb
enter
pop
xor
jns
jb
inc
dec
dec
push
pop
gs
into
mov
jo
push
xchg
xchg
push
enter
pushf
push
cmps
pop
mov
sbb
jb
mov
pop
ficomp
and
jmp
mov
or
adc
fs
enter
dec
addr16
mov
repnz
pop
js
and
sahf
mov
movs
outs
imul
enter
jno
jb
jae
sbb
out
icebp
jbe
cld
ja
data16
mov
jns
sbb
mov
xor
jge
jle
xor
push
jg
sub
and
sbb
or
outs
daa
lods
movzx
jb
enter
mov
pop
out
lea
mov
pop
sbb
and
adc
jb
enter
xchg
pop
xchg
addr16
and
sbb
cdq
jge
mov
xchg
pushf
sahf
popf
test
fs
mov
mov
jb
movs
mul
cmps
xchg
mov
inc
pop
test
test
jb
enter
cwde
dec
lods
pop
scas
int3
sahf
mov
scas
outs
jp
pop
test
mov
mov
mov
fs
mov
mov
pop
jnp
repnz
mov
mov
adc
pop
pop
cwde
sub
and
inc
xor
les
in
xchg
lds
ins
(bad)
ja
repnz
mov
scas
int
mov
shl
shl
lock
sti
enter
mov
(bad)
pop
sbb
sbb
jb
daa
fdiv
fnstcw
into
sahf
mov
(bad)
imul
xchg
and
mov
xchg
loop
sbb
jb
jecxz
in
ror
and
int3
out
call
mov
in
clc
dec
mov
in
in
fs
sbb
and
aas
das
cmp
enter
movmskps
pop
pop
hlt
data16
mov
jb
idiv
clc
xchg
pushf
fmul
xchg
div
das
hlt
std
daa
and
popf
(bad)
test
mov
repnz
outs
dec
leave
sahf
add
pop
jb
ficom
push
or
jns
add
add
cmp
sahf
dec
pop
cvtps2pd
pushf
pushf
pushf
pushf
jnp
xchg
pushf
pushf
pushf
pushf
pushf
cmps
mov
enter
pushf
rcr
jmp
pushf
inc
or
fsubr
sub
inc
dec
daa
and
push
pop
bound
ins
js
addr16
outs
jae
and
daa
scas
(bad)
lds
das
shr
dec
outs
daa
and
out
icebp
cld
xchg
xchg
xchg
inc
rol
adc
sub
xor
dec
pop
mul
push
ss
aaa
push
cmp
in
xor
cmp
xor
lods
ds
mov
ret
xor
in
fcomp
jecxz
out
inc
stc
in
jbe
ret
nop
and
xor
inc
push
in
in
pop
addr16
in
in
mov
xor
mov
mov
in
in
jmp
ret
add
jb
or
and
cmp
pop
jns
jb
outs
jp
imul
fwait
imul
mov
in
in
fnsave
jb
(bad)
jb
jb
les
adc
sub
jb
xor
jb
jb
ins
ja
jb
jb
lea
jb
mov
jb
jb
lock
lds
cmp
cmp
adc
xor
cmp
cmp
cmp
cmp
jg
cmp
cmp
xchg
mov
cmp
ror
loop
sbb
cmp
clc
mov
pushf
pushf
pushf
pushf
sbb
cmp
pop
pushfw
pushf
pushf
pushf
jno
xchg
popf
test
mov
leave
aam
jmp
add
push
dec
dec
dec
dec
and
inc
dec
dec
dec
dec
dec
pop
arpl
xchg
xchg
daa
and
(bad)
(bad)
in
xchg
xchg
call
jb
jb
int3
rcr
out
cmp
repnz
enter
inc
mov
aam
aad
(bad)
aas
leave
enter
aad
retf
pusha
sbb
jb
imul
fadd
cmp
xchg
mov
cmp
ret
into
ftst
and
cli
leave
add
enter
jmp
xor
leave
leave
leave
cmp
push
pop
leave
leave
leave
leave
push
leave
leave
leave
xchg
lahf
stos
mov
leave
leave
leave
ror
loope
in
leave
in
test
in
sbb
cs
in
in
dec
pop
gs
repnz
jnp
xchg
pushf
push
add
dec
dec
dec
dec
enter
daa
inc
dec
dec
hlt
dec
or
and
ss
enter
cmovl
dec
bound
sbb
jb
ins
and
and
and
cmp
and
mov
sub
shr
pand
jl
jb
out
icebp
sub
das
sahf
int3
sahf
mov
sbb
xor
dec
xor
fst
jne
cmp
repnz
xchg
mov
xchg
dec
mov
aas
ret
daa
inc
inc
mov
in
pop
inc
int
sub
add
inc
push
dec
pop
push
bound
ins
or
xor
mov
push
add
cmpps
xchg
daa
retf
add
add
loop
pop
repnz
or
inc
mov
or
or
or
and
daa
daa
pop
add
enter
adc
xor
adc
mov
sbb
pop
jne
dec
inc
sahf
mov
sbb
daa
and
mov
xchg
xchg
daa
mov
leave
enter
fstp
in
in
ins
in
fcomi
paddw
add
mul
xor
xor
xor
inc
ss
dec
dec
inc
mov
ins
cmp
dec
scas
jne
cmp
enter
cwde
mov
in
leave
mov
inc
pop
inc
enter
sbb
rol
dec
loopne
pushf
dec
inc
jp
dec
mov
enter
add
add
add
jb
xor
inc
dec
aas
mov
repnz
or
bound
push
mov
and
or
or
mov
fst
adc
adc
jb
stos
adc
jb
in
retf
sbb
sbb
sbb
sbb
rol
push
xchg
daa
and
or
adc
enter
dec
sub
jbe
jb
inc
cmovge
pop
pusha
aas
sbb
jb
push
js
sub
nop
das
sets
mov
and
push
mov
mov
or
xor
push
ror
std
add
or
enter
adc
push
add
add
leave
leave
leave
xor
dec
push
or
repnz
pusha
imul
or
mov
xchg
cpuid
adc
adc
adc
cmp
cmp
adc
xchg
and
rol
sbb
enter
cmp
inc
sbb
jb
push
and
pop
and
jae
dec
inc
sahf
mov
and
xchg
and
stos
sub
cmp
retf
sub
sub
sub
cmp
add
or
enter
xor
xor
xor
inc
ss
aaa
pop
cmp
enter
jo
jnp
xchg
cmp
xchg
cmp
mov
xchg
and
mov
inc
mul
fisub
jmp
nop
cmp
aad
dec
adc
sub
and
ss
inc
dec
dec
and
in
leave
enter
ins
push
aas
js
xor
jb
push
mov
mov
scas
push
mov
and
inc
(bad)
pop
psllw
in
enter
pop
pop
adc
sbb
jb
bound
arpl
fs
gs
push
pop
addr16
xor
fs
imul
ins
lods
mov
ret
inc
sahf
int
fsub
jecxz
in
enter
stc
jne
xlat
add
emms
pop
sbb
jb
sbb
jns
jp
jnp
and
inc
jl
jge
jle
fs
addr16
cmp
dec
mov
jb
sbb
mov
and
xchg
aad
pavgb
in
xchg
mov
mov
mov
add
or
(bad)
and
and
xchg
inc
jne
xchg
fs
leave
pop
fs
pop
outs
xchg
jp
jb
bnd
call
inc
mov
popf
cmps
sahf
mov
mov
mov
fnstsw
imul
movs
psllq
cmps
xchg
and
adc
pop
test
in
xor
lods
outs
push
scas
inc
mov
popa
scas
ins
mov
mov
mov
xchg
daa
and
sbb
jb
scas
mov
mov
mov
inc
mov
mov
sti
mov
fiadd
mov
mov
jb
shl
cmp
and
push
lds
(bad)
imul
je
jg
mov
repnz
iret
mov
dec
loop
in
rcr
and
inc
clc
aam
add
push
(bad)
pop
in
fst
das
fnstcw
fimul
fist
pop
frstor
xchg
daa
and
fistp
mul
xchg
loop
jecxz
mov
jle
out
out
call
and
jmp
jb
in
or
pop
push
out
and
sub
dec
inc
mov
jmp
hlt
xchg
xchg
daa
and
idiv
in
fld
cli
movs
sti
jnp
jnp
mov
std
pop
(bad)
sar
cmova
add
add
add
add
fst
adc
xor
repnz
add
aas
dec
or
pusha
or
jbe
mov
addr16
or
adc
xchg
daa
mov
lods
adc
mov
enter
psubusw
in
out
sbb
mov
sbb
add
sbb
es
xor
in
leave
enter
and
and
sbb
jb
jae
jle
mov
xchg
inc
pop
sahf
cmp
inc
mov
shr
xchg
xchg
add
sub
add
fwait
loop
xor
loopne
jmp
dec
xor
add
xchg
and
xor
cmp
and
mov
prefetch
sbb
ds
xchg
daa
cmp
inc
dec
inc
mov
jb
inc
gs
jo
jnp
fst
add
cmp
enter
dec
mov
inc
mov
dec
fimul
push
hlt
jbe
retf
xchg
push
call
or
push
pop
mov
jb
push
sub
inc
and
sahf
dec
pop
pop
push
pop
bound
enter
js
or
cdq
pusha
movs
popa
scas
bound
mov
shl
(bad)
and
inc
icebp
cld
imul
in
xchg
mov
pop
sbb
dec
cmp
jb
outs
dec
push
jno
pop
jb
inc
mov
jae
je
jne
xchg
daa
mov
xchg
ja
mov
in
mov
ret
jge
sbb
jecxz
jg
sbb
mov
das
inc
test
iretw
dec
inc
pop
fs
loope
mov
jecxz
inc
dec
dec
out
stc
loop
mov
enter
pop
sbb
inc
mov
cmp
pop
xchg
repnz
xchg
jb
jge
add
jns
repnz
maxps
mov
outs
lahf
ins
fs
jp
push
test
jb
fwait
mov
outs
mov
sbb
shr
xchg
das
inc
mov
stos
(bad)
lods
in
lods
cmp
mov
adc
push
pop
scas
sub
inc
mov
mov
mov
mov
popa
xchg
and
ins
mov
ja
cmp
mov
mov
in
mov
iret
mov
jbe
in
lock
add
push
les
pop
sbb
daa
xor
xchg
and
cmp
in
enter
int
jg
sbb
xor
rcl
xchg
and
mov
rcl
(bad)
xchg
fcmovne
xchg
xlat
xlat
aam
das
fidivr
in
loop
in
fdivr
out
ror
cmp
jns
push
sbb
and
and
cmp
jecxz
in
in
sub
inc
push
out
and
jb
nop
push
call
daa
mov
ret
jb
enter
or
or
or
inc
mov
or
or
or
daa
daa
or
adc
cmp
enter
adc
adc
adc
inc
push
dec
pop
push
sbb
and
push
pop
out
inc
push
out
jmp
push
mov
stos
add
mov
mov
cmp
out
ficomp
loop
jmp
inc
push
call
sub
pop
add
jb
push
outs
pop
jp
or
nop
fwait
or
cmps
or
or
mov
adc
in
xchg
daa
jmp
jb
or
push
das
and
sub
sbb
jnp
sbb
inc
sbb
sbb
mov
pop
arpl
jns
test
dec
(bad)
and
call
and
and
es
enter
movntq
repnz
sub
or
adc
sub
into
sahf
mov
xor
push
xor
and
pusha
imul
outs
pop
mov
xchg
mov
xchg
lods
mov
xchg
mov
(bad)
in
out
inc
cli
sbb
add
sbb
inc
dec
inc
mov
inc
push
dec
and
inc
fsubr
dec
ja
pushf
jmp
por
out
mov
ds
add
dec
dec
jmp
jmp
jns
in
jmp
mov
sbb
pop
or
adc
sbb
dec
inc
sahf
and
sub
adc
xchg
push
inc
dec
sbb
push
sbb
jb
leave
pop
bound
push
jb
mov
jp
sbb
xchg
and
and
in
mov
mov
inc
mov
shr
fisubr
loop
jmp
cli
cs
add
or
enter
xor
xor
xor
(bad)
xor
cmps
in
push
push
pop
add
sbb
jae
add
xchg
push
int3
sahf
mov
or
rol
mov
or
iret
daa
push
leave
dec
push
dec
sub
out
cmp
in
push
cmp
push
shl
pop
iret
out
xor
pop
cs
test
nop
in
pop
pusha
iret
out
scas
mov
cmp
mov
rcl
(bad)
cmp
pop
repz
adc
out
or
mov
adc
pop
sub
aas
xor
inc
inc
dec
sbb
push
popa
sbb
pop
ins
add
and
cmp
lea
cwde
and
pushf
cmp
es
daa
fisubr
mov
xchg
and
sub
sti
(bad)
jb
enter
sub
int3
mov
xor
cmp
push
inc
sahf
int3
sahf
pop
xor
imul
and
cmp
jbe
jb
cmp
test
aas
aas
rcr
mov
add
add
add
sahf
int3
mov
add
das
aaa
push
(bad)
pop
xchg
xchg
and
add
pop
fs
enter
jno
jns
jns
repnz
int3
sahf
mov
adc
mov
pop
pop
leave
ror
fstp
xchg
and
loope
jmp
fs
stc
repnz
or
push
sbb
and
sub
dec
loopne
jb
xor
push
pop
add
jl
sbb
jb
xchg
push
popf
pop
mov
inc
leave
or
or
leave
leave
enter
or
enter
repz
sbb
repz
xchg
xchg
ins
push
dec
adc
enter
sbb
pop
pop
in
xchg
xchg
arpl
and
call
inc
dec
dec
sahf
mov
sub
xchg
xchg
and
sub
fsubr
sbb
sub
das
hlt
cmp
push
hlt
inc
leave
enter
dec
add
pop
xor
in
bound
push
jb
jp
div
(bad)
xchg
or
daa
push
leave
push
fadd
int
dec
sti
mov
pop
ds
jecxz
fdecstp
fcomip
add
or
push
pop
jb
enter
or
cmp
cmp
dec
pop
push
setae
jp
test
fst
adc
adc
mov
sbb
jb
mov
sbb
sbb
inc
sahf
mov
in
sbb
sbb
enter
pop
sbb
aas
fs
leave
das
cmp
das
inc
and
mov
repnz
es
outs
push
jbe
xchg
xchg
and
sub
in
xchg
sub
xor
ret
xor
jecxz
inc
mov
div
test
and
adc
sbb
and
ss
xchg
and
cmp
cmp
jb
inc
push
pop
inc
punpckhdq
inc
mov
inc
jne
add
in
xchg
and
dec
mov
jb
dec
mov
dec
enter
fisttp
push
repz
repnz
push
clc
add
pop
or
jb
jb
dec
dec
dec
jb
jb
dec
dec
dec
dec
mov
jb
adc
inc
sub
daa
and
bound
fs
dec
fs
xchg
gs
bound
sbb
jb
jb
(bad)
push
imul
cwde
ins
mov
addr16
daa
imul
leave
enter
jne
aam
pop
repnz
fsub
jns
hlt
jnp
push
jns
(bad)
jl
pop
stc
movd
outs
daa
and
and
getsec
or
and
inc
test
pop
xchg
jb
arpl
mov
inc
mov
mov
movs
mov
lea
mov
xchg
jb
fs
xchg
iret
xlat
cwde
pop
fistp
out
out
neg
inc
mov
lahf
pop
jnp
fs
pop
mov
movs
pop
mov
jb
movs
push
cmps
pop
cmps
arpl
imul
cmp
mov
scas
xchg
and
mov
shl
enter
loope
mov
in
in
scas
lods
lods
in
in
stos
stos
test
in
cmps
movs
movs
xor
in
(bad)
in
(bad)
sbb
psubq
or
pop
pop
add
cvtps2pi
cmp
into
push
sti
jo
sbb
jb
jp
add
add
mov
pop
pop
sub
or
ret
lock
mov
cld
add
and
mov
add
adc
add
fs
xchg
push
sub
xor
cmp
(bad)
in
inc
dec
dec
rsqrtps
pop
or
bound
(bad)
fcmovne
enter
adc
xchg
pcmpgtb
leave
enter
stos
pop
mov
push
repnz
and
push
rcr
into
push
fs
pop
pop
jo
std
inc
sahf
mov
std
sub
add
add
inc
dec
pop
rsqrtps
dec
adc
push
or
daa
push
leave
pop
mov
daa
daa
stos
mov
inc
dec
fidiv
std
ds
bnd
std
std
loop
jmp
mov
xchg
es
ins
push
sub
fidiv
(bad)
cs
fs
imul
test
mov
es
mov
leave
leave
leave
fucomp
repz
or
sub
inc
dec
dec
dec
adc
xchg
mov
and
push
das
pop
pop
and
xchg
arpl
jns
test
(bad)
jb
enter
and
cmp
jns
mov
inc
mov
sub
sub
and
xor
adc
fimul
sbb
or
and
inc
das
push
xor
aas
add
(bad)
enter
cmp
cmp
imul
imul
cs
xchg
out
push
retf
add
enter
lahf
scas
sbb
jb
loopne
pop
test
add
xchg
and
add
mov
sub
leave
in
leave
enter
inc
push
pop
dec
sahf
pushf
mov
bound
xchg
xchg
and
or
or
in
fst
xchg
adc
mov
mov
mov
retf
mov
scas
scas
cs
jmp
cli
push
lar
pop
or
adc
enter
sbb
and
sub
cmp
xor
dec
sub
dec
inc
mov
pop
pop
daa
es
daa
daa
daa
and
xchg
and
xor
push
in
fldcw
das
jb
jp
cmp
in
mov
xchg
cmp
inc
mov
add
xchg
in
add
inc
push
leave
dec
(bad)
fidivr
pop
xor
cmp
add
and
add
and
pop
inc
or
cmp
fs
or
pop
push
dec
inc
mov
push
jp
or
xchg
call
inc
mov
retf
xchg
mov
das
rcr
(bad)
sbb
in
leave
enter
cli
(bad)
add
cmp
ins
or
adc
sbb
and
inc
mov
and
and
dec
outs
daa
and
and
xchg
xchg
and
sub
in
fstp
punpckldq
push
jb
sub
outs
mov
and
mov
mov
ret
add
or
dec
inc
loop
lahf
repnz
dec
and
bound
add
pop
push
sub
xor
cmp
dec
inc
mov
add
push
pop
cmp
jge
jmp
push
jb
mov
pop
mov
and
cpuid
adc
in
adc
sahf
mov
push
retf
ficomp
daa
and
loop
sbb
cli
fs
xchg
sbb
pop
adc
repnz
and
and
and
and
inc
mov
and
sub
pop
sub
sub
in
leave
enter
sub
mov
sbb
xor
xor
daa
and
mov
mov
mov
mov
pop
rcr
cmp
loop
movs
(bad)
enter
pop
cmp
test
xchg
xchg
xchg
pop
pop
pop
push
push
push
jmp
pop
bound
push
or
in
jns
rcl
in
mov
add
jb
sbb
add
jmp
or
or
or
pop
and
fst
comiss
mov
fcmovne
dec
pop
packsswb
jns
xchg
daa
daa
test
xor
movs
sbb
jle
fcomp
out
repnz
xchg
inc
inc
std
or
and
and
jb
in
and
and
inc
mov
dec
sub
pusha
sub
and
jbe
jno
iret
mov
xchg
out
xor
gs
leave
lods
or
loopne
jb
in
call
cli
add
in
pop
data16
or
xchg
xchg
pop
fistp
or
or
pop
inc
mov
bound
push
jb
jp
xchg
and
or
enter
cpuid
or
fbstp
movs
xor
xchg
fst
lock
dec
pop
dec
and
and
sub
cmp
bndldx
ds
in
dec
pop
fs
pop
outs
pop
jp
cmp
jns
test
or
inc
mov
or
adc
dec
data16
rcr
fld
call
and
(bad)
push
(bad)
or
fs
jnp
push
pop
sbb
sub
xor
inc
sbb
dec
sbb
addr16
inc
mov
and
lea
enter
cwde
mov
in
leave
mov
sub
push
fs
in
lock
xor
cmp
sbb
sbb
jnp
xor
xor
cmp
inc
mov
pop
imul
dec
inc
jg
cmp
cmps
push
stos
cmp
or
push
movs
into
lock
femms
or
adc
dec
inc
mov
add
add
pop
xchg
daa
and
dec
or
or
leave
enter
lods
or
jnp
ret
into
adc
fst
in
jns
cmp
pop
cli
adc
add
jns
outs
pusha
packssdw
jbe
and
ins
imul
enter
add
add
mov
jb
xchg
or
into
sahf
int3
lahf
mov
or
retf
or
dec
loope
in
adc
push
in
fist
add
or
xchg
in
or
iret
and
adc
fldenv
comiss
cmp
aas
repnz
in
add
sahf
mov
jl
xchg
xchg
popf
or
dec
inc
into
das
test
mov
lahf
jb
in
enter
adc
mov
mov
mov
push
fisub
daa
daa
dec
ficom
sbb
test
xchg
sbb
sbb
adc
push
(bad)
jnp
jb
sbb
and
xor
into
sahf
mov
das
pop
and
inc
imul
enter
xchg
mov
sbb
jb
shr
xlat
xor
loop
xor
clc
xor
add
push
sbb
in
push
dec
ins
adc
or
sbb
and
cs
cmp
cmp
dec
pop
gs
inc
mov
jo
jnp
xchg
xchg
and
pushf
push
pop
cmps
lss
mul
mov
ficom
stc
jnp
jb
adc
adc
sbb
inc
mov
sbb
sbb
daa
and
inc
pop
dec
push
push
bound
daa
mov
jg
js
and
mov
xchg
daa
and
and
and
shl
test
outs
sub
adc
ins
popa
mov
add
or
jne
or
inc
sub
mov
mov
push
pop
sub
push
mov
adc
in
call
out
daa
push
add
sbb
aas
enter
mov
push
dec
enter
and
das
push
and
out
fidiv
jne
sahf
out
sahf
jae
jno
outs
outs
jns
out
ins
ins
imul
jne
out
addr16
push
test
cmp
repz
mov
adc
jns
out
inc
push
fs
jns
test
fdivr
push
adc
(bad)
shl
inc
pop
pop
pop
and
pop
add
test
lods
sti
in
jmp
inc
ins
fs
dec
aaa
inc
jg
push
das
pop
inc
inc
pop
pop
ret
ins
jle
inc
dec
push
pop
push
push
inc
add
push
sub
cmps
cs
adc
imul
jl
sub
aas
and
push
adc
loopne
(bad)
or
jbe
inc
mov
cmps
add
push
add
add
sbb
dec
xor
mov
test
inc
mov
ins
mov
add
inc
dec
imul
push
js
pop
rcl
pusha
adc
gs
icebp
xchg
pop
push
bound
pusha
aas
dec
ins
add
inc
js
push
addr16
je
aaa
mov
xchg
mov
pop
and
mulps
sbb
sub
push
inc
pusha
mov
pop
xor
dec
xor
pop
cmp
push
dec
push
inc
inc
inc
jecxz
cmp
sti
dec
inc
push
dec
inc
dec
dec
inc
fcmovnb
das
and
ins
ins
dec
mov
jns
push
ret
pop
shl
dec
jnp
mov
or
inc
ja
ins
cwde
mov
inc
addr16
jle
xlat
inc
inc
push
inc
push
mov
sub
hlt
adc
and
ss
xchg
test
aaa
nop
dec
dec
mov
pop
pop
aas
loope
test
and
xchg
xor
cmps
lods
scas
aad
inc
pop
movs
push
xor
daa
inc
mov
mov
das
or
lods
mov
jp
inc
aas
cmp
pop
or
test
fs
fldenv
aaa
sbb
jb
sbb
(bad)
add
add
or
inc
mov
in
or
or
add
and
dec
mov
add
push
pop
pop
mov
or
xchg
out
pop
movs
test
push
cmp
push
in
xor
or
push
or
mov
sub
inc
push
cwde
popa
outs
imul
jno
dec
add
inc
jle
adc
add
clc
push
fild
dec
outs
fcom
adc
mov
das
xchg
test
add
mov
add
movs
adc
push
cmp
aaa
inc
add
jo
add
ins
pop
and
or
mov
rol
push
xlat
push
nop
add
mov
jae
add
add
aam
stos
push
jns
jns
out
outs
add
jbe
outs
dec
ja
inc
xchg
or
jb
ja
xchg
xor
xor
lock
dec
dec
in
nop
push
cmp
xchg
add
adc
mov
rcl
data16
inc
push
push
out
test
stos
popa
sub
call
cmp
and
xor
mov
adc
add
aaa
fcmovu
outs
dec
dec
push
dec
push
dec
inc
pop
pop
mov
xor
dec
push
or
pop
aas
push
inc
cmp
and
jmp
aam
inc
test
pop
pop
js
xlat
inc
inc
sub
ja
mov
push
sbb
mov
or
nop
in
test
pop
jae
inc
cmp
(bad)
xor
inc
pop
iret
lods
push
xchg
or
dec
or
lock
push
inc
xor
inc
mov
xor
or
xchg
cwde
pop
cld
dec
inc
ins
vcmpss
cmp
xor
or
ins
push
inc
inc
ins
loopne
inc
mov
sub
and
add
popf
fild
dec
add
call
in
add
mov
imul
cmp
outs
outs
sbb
outs
mov
(bad)
stos
daa
lahf
pop
test
stc
pop
adc
lea
jb
pop
pop
adc
test
fldenv
arpl
cmp
and
gs
fimul
ds
aas
fld
fcmovnu
push
fld
jge
adc
dec
outs
push
(bad)
aas
push
(bad)
push
mov
(bad)
push
add
cmps
sbb
imul
xor
sub
std
sbb
les
lahf
or
pop
inc
mov
fild
or
push
lea
sub
pop
stos
jmp
pop
dec
mov
ja
push
inc
jl
sub
xor
add
pop
jo
test
sahf
xor
pop
push
in
imul
xchg
push
push
or
mov
outs
inc
pop
and
fimul
int
inc
inc
aas
mov
mov
push
mov
nop
lahf
mov
mov
add
add
pop
test
not
push
push
adc
pop
add
sbb
mov
ss
sub
mov
and
and
les
xchg
pushf
fistp
cmp
pop
sub
lods
addr16
sub
ss
dec
push
dec
(bad)
xor
inc
ret
xchg
mov
pop
xor
pop
cmps
aaa
ins
push
and
aas
jno
mov
(bad)
popa
das
movq
xorps
inc
lods
push
xor
sbb
test
enter
hlt
mov
std
mov
push
pop
push
aaa
xchg
and
xlat
ss
pop
or
pusha
js
sub
and
mov
stc
mov
sbb
stos
les
ins
xor
das
and
mov
ss
cmp
scas
xchg
adc
shr
aaa
inc
or
sub
outs
cs
(bad)
je
sub
pop
inc
dec
ret
and
out
mov
lds
sbb
test
push
repnz
jmp
je
add
sbb
push
pop
fisub
and
push
xor
mov
lahf
mov
pop
add
cmp
and
rol
xchg
push
dec
mov
add
aam
mov
xor
push
shr
cli
push
in
pop
mov
inc
push
(bad)
jmp
push
dec
dec
inc
inc
fsub
pop
daa
arpl
jmp
lahf
jg
test
or
mov
or
loopne
jb
gs
xor
pop
cdq
fnstenv
xor
repnz
push
or
sbb
cmps
das
dec
adc
inc
fs
push
sbb
inc
inc
sub
ja
sub
mov
pop
call
mov
pop
mov
loopne
dec
dec
fmul
test
outs
sahf
bound
jae
adc
mov
add
iret
push
je
push
dec
retf
add
ds
dec
inc
pop
in
pop
ins
aas
(bad)
fstp
jp
jmp
jg
out
(bad)
or
dec
pop
xchg
and
and
loopne
add
cld
out
add
add
cmps
pop
pop
and
leave
pusha
xchg
sbb
pusha
dec
(bad)
and
ror
xchg
ficom
cmp
sub
out
add
mov
ss
xchg
out
aas
adc
sub
mov
shl
adc
add
push
bound
sti
mov
nop
fwait
mov
or
ss
push
loope
add
out
pop
ss
or
add
adc
mov
stc
push
bound
das
sbb
loopne
dec
adc
sahf
sub
push
fild
jns
mov
fisttp
ins
seto
push
add
psllw
out
dec
call
div
pop
add
(bad)
aam
mov
sbb
push
dec
sub
push
data16
mov
mov
xor
xor
test
inc
mov
sbb
push
stos
lock
mov
in
dec
lods
popf
xor
in
pop
pop
pop
jp
or
add
jmp
sub
fild
mov
jecxz
adc
fs
ss
cmp
(bad)
dec
dec
dec
jne
mov
xor
xor
xchg
jb
cmps
jmp
sti
adc
sbb
mov
dec
ins
inc
add
push
test
neg
inc
scas
pop
sub
inc
je
jg
sub
sbb
iret
lds
push
(bad)
mov
dec
cmp
iret
cmp
push
ins
mov
ja
dec
dec
rol
jae
(bad)
aaa
dec
or
ds
push
repnz
into
sub
sub
lods
int
xchg
or
dec
adc
or
adc
add
test
add
popf
ins
push
out
jmp
mov
js
or
jecxz
push
dec
mov
sub
push
paddsw
daa
movs
push
call
push
push
or
xor
lock
nop
sbb
jo
dec
lock
inc
xchg
jg
scas
or
mov
lods
inc
dec
or
mov
(bad)
shr
stos
das
inc
inc
push
cmp
xor
fbld
xchg
push
mov
iret
add
xlat
mov
sub
stos
inc
pop
outs
arpl
push
or
mov
xchg
jbe
add
inc
add
enter
xchg
mov
adc
push
aas
add
pop
sub
push
fs
fs
adc
dec
dec
inc
dec
push
dec
dec
cmp
bnd
cmp
push
lods
add
int3
push
xor
mov
jo
out
bound
cmp
push
cmp
enter
in
push
bound
cmps
out
sbb
es
shr
sub
add
les
push
push
or
inc
cld
call
dec
inc
inc
pop
inc
dec
inc
dec
push
dec
push
sbb
cmp
jmp
add
pop
scas
je
loop
pop
daa
xchg
jecxz
clc
inc
sbb
cmp
repnz
add
push
(bad)
pop
add
xchg
and
aam
aas
(bad)
push
movs
dec
inc
xchg
add
sub
aas
xchg
fisub
stos
pop
mov
dec
das
popa
pop
ds
pop
clc
test
adc
xlat
mov
in
test
dec
add
cmps
(bad)
ja
jb
sub
lea
in
adc
push
sbb
cmp
add
add
fsubr
mov
push
pop
xor
pusha
and
mov
sub
pop
or
push
imul
aaa
mov
adc
ret
sub
mov
adc
pop
ins
ins
movs
sub
or
mov
sub
sub
or
out
mov
fstp
mov
pusha
iret
pop
xor
dec
fs
pop
xchg
daa
pop
cmp
adc
mov
push
xor
stc
lea
je
in
add
popa
and
xchg
dec
push
add
jo
mov
push
out
fiadd
mov
and
mov
adc
(bad)
out
and
loop
pop
push
(bad)
sbb
scas
int3
fstp
mov
jae
dec
adc
mov
mov
daa
fadd
nop
add
test
mov
ss
lock
fst
and
sbb
mov
push
pusha
test
xlat
stos
or
mov
bound
ret
pop
addr16
sub
iret
inc
outs
ud2
sub
pop
inc
out
fbld
push
fadd
inc
test
pop
adc
jecxz
cmps
lods
aad
dec
call
sbb
(bad)
div
imul
sub
inc
sub
xor
adc
and
lea
mov
xor
or
outs
inc
das
add
mov
cmp
sbb
imul
push
dec
jbe
cmp
sbb
fs
pop
aas
xchg
adc
jne
inc
outs
test
mov
imul
repz
sbb
add
lods
dec
xchg
ins
or
sub
xchg
push
cwde
cmp
and
in
out
call
add
fisub
inc
push
adc
stc
pop
outs
adc
mov
in
aas
adc
pusha
mov
mov
mov
(bad)
fnstcw
inc
sub
push
sahf
xchg
lea
cmp
jae
xchg
sub
jp
xchg
cmp
sbb
mov
lods
inc
xchg
scas
iret
fst
lock
push
and
mov
adc
bound
test
and
inc
sub
inc
imul
cmp
aam
pop
out
adc
ja
cmp
(bad)
(bad)
iret
mov
xchg
adc
dec
daa
sbb
push
inc
lahf
push
push
mov
es
aas
xor
aaa
cmp
and
cmps
lods
fsub
add
cwde
pusha
iret
dec
dec
faddp
(bad)
(bad)
movs
jbe
push
pop
js
cld
xlat
fcom
adc
jge
add
sub
js
sbb
ror
pop
jne
call
sub
mov
outs
push
xor
lea
and
ja
and
outs
dec
and
int3
loope
adc
or
daa
iret
test
dec
mov
and
mov
(bad)
repnz
inc
add
xchg
mov
push
inc
(bad)
sub
ds
test
les
sbb
inc
outs
data16
push
imul
imul
out
sahf
out
mov
sahf
loop
in
loope
inc
or
jns
loopne
xlat
xchg
and
add
and
jae
data16
dec
call
sbb
xchg
pusha
sub
dec
push
aaa
jns
dec
rol
adc
rcr
or
dec
or
mov
sub
aaa
stos
or
mov
outs
dec
dec
mov
outs
or
mov
mov
(bad)
xchg
sub
xor
addr16
aas
sbb
add
call
ror
pushf
test
jae
sahf
out
ficomp
dec
sub
or
cmp
rep
sub
shl
repz
inc
sub
cld
loopne
jns
out
shr
sahf
push
out
fidiv
es
push
fdiv
sahf
or
and
repz
lods
mov
cmp
repz
and
or
out
sahf
addr16
fadd
mov
sahf
out
sahf
xchg
test
sbb
ins
and
lock
fadd
mov
mul
mov
and
dec
and
test
shl
mov
and
or
push
sbb
push
xor
retf
jp
loope
mov
sub
in
jns
pusha
retf
push
mov
add
or
jnp
dec
sub
sub
jns
(bad)
sar
sub
cwde
mov
iret
aas
iret
pusha
dec
xor
sbb
mov
daa
jns
mov
or
iret
repz
call
mov
repz
fs
and
jns
out
sub
enter
add
out
xor
xor
bswap
mov
push
inc
inc
inc
add
push
loop
push
inc
adc
cmps
adc
fist
or
push
test
dec
push
or
adc
xchg
mov
jno
inc
retf
pop
mov
outs
push
aam
and
mov
dec
or
unpckhps
sti
lods
push
jl
(bad)
push
jno
dec
mov
lahf
adc
mov
sub
inc
daa
dec
das
aaa
add
outs
sub
mov
daa
inc
(bad)
addr16
xor
or
jno
mov
std
inc
(bad)
pushf
ror
mov
push
pop
push
lea
cdq
add
xchg
hlt
push
add
and
push
imul
pop
dec
movs
push
pop
push
cmps
lahf
mov
ja
inc
xchg
nop
daa
mov
inc
mov
jne
ret
push
jp
daa
ins
cwde
sub
push
mov
pop
arpl
ins
popf
cmp
and
popf
push
xor
pop
mov
xchg
clc
add
push
or
xchg
inc
add
mov
sbb
sar
sbb
jns
cmp
lgdtd
push
gs
sub
cwde
mov
push
(bad)
stc
jbe
add
add
cmp
outs
push
pop
mov
or
or
aaa
or
in
(bad)
sub
scas
adc
fcmovne
in
stos
adc
adc
and
xchg
inc
inc
push
addr16
das
push
jmp
mov
pop
imul
in
adc
push
push
pop
leave
in
jbe
and
cmp
daa
iret
jae
test
xchg
sub
daa
movs
fbld
daa
mov
aas
xlat
sbb
data16
dec
inc
les
mov
push
jne
jae
sbb
inc
lahf
sbb
pop
adc
sbb
xor
pop
add
or
adc
jb
inc
in
test
add
xor
xchg
and
in
adc
mov
adc
push
aad
add
(bad)
das
or
add
movs
add
pusha
cmp
cmps
fisttp
mov
repnz
mov
cmp
dec
inc
mov
(bad)
out
in
inc
mov
iret
mov
in
call
mov
push
add
ins
aas
and
push
xor
fcomp
loopne
jb
jle
loop
mov
jns
out
push
aam
int3
enter
sahf
out
mov
iret
repz
js
jo
cmp
rep
push
repz
pop
push
push
dec
inc
cmp
sub
push
sbb
cmp
mov
add
cld
lock
adc
iret
repz
mov
cmp
movs
pop
push
test
mov
cmp
mov
sahf
int
cmp
and
jns
hlt
jns
out
in
in
aam
out
jns
out
mov
pushf
daa
iret
repz
js
pusha
push
jns
out
push
dec
cmp
add
cmp
mov
in
in
enter
fcmovb
mov
adc
pop
in
push
cmp
cwde
popf
push
sahf
xor
mov
cmps
add
push
jge
es
cmp
and
fild
aad
pop
das
test
sub
jp
test
pop
sbb
inc
xor
xchg
pop
ret
sbb
je
pop
xor
das
cmp
test
push
push
push
std
push
inc
push
call
loopne
push
and
fwait
or
jbe
mov
and
ins
and
dec
iret
repz
push
das
push
cmp
pop
js
call
adc
xor
cmp
cmp
repz
mov
repnz
jge
out
add
dec
ins
add
in
movs
sub
add
adc
add
pop
into
ds
iret
sbb
push
enter
pop
sbb
xchg
mov
jb
jbe
test
mov
cmovl
cmp
cmp
cmp
aas
cwde
add
and
cmova
sbb
or
pop
mov
and
adc
js
in
xchg
sbb
push
mov
pop
and
push
and
mov
inc
aam
dec
fcomi
sbb
daa
or
(bad)
cs
xchg
push
jnp
jg
pop
test
adc
add
xchg
sbb
pop
pop
call
or
addr16
stc
cmp
jns
inc
or
jg
add
enter
xchg
add
or
in
repnz
ret
mov
adc
pop
stc
and
mov
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
cmp
(bad)
inc
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
(bad)
(bad)
fistp
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttp
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
(bad)
(bad)
(bad)
inc
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
(bad)
(bad)
(bad)
(bad)
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sbb
(bad)
fld
xchg
and
inc
mov
int
add
aas
jno
or
mov
(bad)
(bad)
(bad)
call
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
(bad)
(bad)
inc
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
(bad)
(bad)
(bad)
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
(bad)
(bad)
(bad)
fisub
xchg
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
(bad)
call
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
(bad)
(bad)
(bad)
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ins
adc
lods
cmp
mov
cmp
cmp
mov
(bad)
(bad)
call
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
(bad)
(bad)
(bad)
call
cmps
xchg
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
(bad)
(bad)
dec
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
aam
(bad)
gs
std
or
pop
ficomp
frstor
mov
add
and
in
retf
data16
std
cli
mov
dec
xchg
add
sbb
jo
sub
mov
cs
test
aas
sub
inc
add
jmp
pop
outs
pop
jb
outs
fsubr
lock
lahf
lds
push
pop
sar
xor
pop
pop
push
dec
or
push
adc
add
fdivp
mov
cwde
fmul
push
cld
test
dec
lock
bound
push
jbe
out
and
and
clc
sbb
sub
adc
xor
and
jo
push
cs
or
push
sub
shl
es
push
scas
inc
push
inc
or
ins
int3
fiadd
cmp
dec
stos
dec
mov
fsub
inc
dec
push
push
or
clc
inc
sbb
push
inc
inc
cs
iret
repz
mov
cmp
sahf
out
ss
pushf
jns
out
js
push
inc
xor
ins
sahf
out
sbb
mov
cmp
fadd
movs
nop
ins
push
sahf
out
fidivr
sbb
add
lock
shr
jl
cs
sub
ror
das
call
inc
inc
shld
sub
push
pop
outs
or
xor
xor
movs
add
aaa
sbb
sbb
repnz
jmp
sahf
in
into
adc
imul
stos
dec
xlat
es
daa
aad
jle
and
push
add
rol
es
xlat
aaa
add
daa
inc
bound
daa
and
arpl
dec
cmps
fidivr
xor
add
lods
and
sbb
push
xchg
das
addr16
cmps
pusha
sub
pop
(bad)
test
inc
add
cwde
jle
fild
outs
arpl
aaa
jmp
inc
pop
ud0
jg
lock
add
nop
inc
mov
push
xor
das
(bad)
mov
adc
pop
push
dec
pop
inc
(bad)
jmp
ret
sbb
jg
push
ret
int
(bad)
cli
arpl
dec
xor
je
inc
inc
mov
ds
test
push
xor
and
mov
fadd
pusha
mov
(bad)
sahf
je
mul
mov
fdiv
dec
jne
mov
sbb
pop
je
adc
sbb
cmp
mov
ins
add
push
out
in
lods
pop
push
mov
adc
out
add
inc
jg
push
inc
aam
jb
adc
xchg
in
aas
call
xchg
daa
push
jae
aas
push
push
stos
push
pop
ja
ror
arpl
adc
int3
das
push
or
adc
scas
add
imul
sbb
add
aaa
and
pusha
or
mul
cmps
ja
add
pop
aas
jle
std
add
dec
push
dec
inc
pop
sbb
inc
push
inc
mov
in
push
pop
jge
pop
aaa
push
ja
sbb
push
inc
pusha
xchg
aaa
fsubr
arpl
outs
xor
and
call
xor
cwde
push
inc
test
out
add
scas
push
xor
in
bound
add
xchg
outs
cmp
addr16
test
adc
push
jo
movs
add
push
ins
or
add
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
adc
push
dec
mov
popa
add
add
movs
xchg
test
cmps
into
nop
ss
sbb
adc
test
inc
and
rcr
push
xor
imul
xor
leave
cmps
outs
push
dec
jae
jb
dec
retf
dec
sbb
cmps
inc
sbb
adc
ins
sbb
cwde
pop
in
lea
movs
test
pop
ins
jae
inc
push
shr
pusha
inc
and
sub
add
les
aad
dec
push
test
les
mov
aas
stos
imul
mul
dec
iret
jbe
mov
adc
or
pop
inc
gs
cmc
mov
xchg
addr16
jb
push
outs
push
loop
(bad)
fidiv
or
shl
jne
jns
push
mov
outs
arpl
ins
ss
cmp
loope
fdecstp
push
dec
mov
adc
jbe
dec
outs
ins
cli
add
sbb
mov
cs
ins
sbb
fbld
inc
mov
sub
mov
sbb
push
sub
pop
push
sbb
mov
out
sbb
repz
sbb
dec
xlat
(bad)
ror
inc
(bad)
in
js
jl
rol
push
je
jo
pushw
ins
ja
das
sub
out
cld
je
jg
imul
add
loopne
jo
push
shr
mov
les
jbe
push
sti
mov
jno
cmp
xchg
xor
mov
inc
xchg
xchg
push
std
imul
js
imul
loopne
(bad)
(bad)
jg
ins
jae
sub
inc
jo
lods
push
sub
pop
call
and
movs
arpl
mov
jmp
popf
inc
mov
mov
sbb
popa
push
int
cmp
into
jae
(bad)
sbb
mov
sti
or
outs
and
ins
sub
jne
sbb
add
in
add
sub
and
imul
adc
retf
fistp
adc
loope
jmp
dec
add
icebp
inc
xchg
scas
or
mov
xchg
sub
loop
push
push
inc
std
push
outs
neg
inc
lea
push
popa
imul
xchg
inc
pop
std
push
popa
xchg
cdq
add
sub
xchg
cwde
and
sbb
adc
pop
ins
cmp
sbb
sbb
and
add
aaa
pop
jae
mov
out
ins
push
call
adc
and
push
pop
rol
sar
test
mov
imul
or
test
arpl
dec
jmp
jecxz
fs
pop
mov
adc
pop
adc
sbb
add
jle
xor
xchg
je
(bad)
sbb
xor
xchg
inc
fs
mov
pop
sub
sbb
and
mov
imul
cdq
mov
jg
movs
arpl
outs
dec
push
adc
test
mov
add
and
jae
rol
loop
sub
pop
mov
pop
popf
repz
cmps
add
call
cwde
cmp
adc
or
sub
rcr
xchg
js
push
and
sub
aam
adc
push
js
xchg
dec
mov
inc
jge
es
pop
test
dec
imul
pop
test
xor
mov
mov
mov
enter
loopne
pusha
cmp
inc
adc
mov
cmps
pop
or
lods
ret
jno
sub
dec
push
out
aas
jmp
pushf
push
xor
inc
mov
ja
dec
inc
es
adc
inc
push
inc
es
pop
adc
jae
pop
fadd
ins
push
jmp
and
cmp
cs
add
test
dec
stc
or
adc
and
in
dec
ret
fcmovu
push
popa
inc
jae
or
scas
and
sbb
(bad)
mov
cmps
movs
pusha
add
mov
xchg
sub
(bad)
pop
jns
sbb
popa
sahf
mov
mov
or
dec
popa
mov
test
cmove
inc
mov
adc
ret
jo
jecxz
jb
xchg
inc
test
stos
inc
bound
mov
popa
sti
pop
or
or
clc
jae
add
sbb
add
add
scas
(bad)
loopne
or
dec
inc
outs
cbw
shl
inc
imul
stc
js
inc
aam
bound
in
sub
mul
loope
xor
pop
(bad)
ja
mov
outs
je
cmps
push
pop
jns
je
dec
mov
or
fsubr
xchg
mov
sahf
add
shr
jae
mov
sub
in
and
(bad)
adc
and
scas
(bad)
adc
(bad)
mov
and
sbb
popa
pop
jns
sbb
pop
push
fcmovb
inc
ja
jns
adc
mov
leave
or
inc
pop
pop
add
fld
movs
sti
add
out
ja
sbb
xchg
pop
mov
inc
jnp
dec
cmp
fimul
loope
add
add
xor
test
mov
dec
or
aam
test
sub
or
icebp
mov
jge
retf
add
push
sahf
mov
push
mov
xor
add
mov
arpl
fnsave
push
xchg
cmps
cs
popf
sub
mov
mov
and
popa
push
adc
push
push
(bad)
ror
mov
arpl
sbb
xor
fs
xor
pop
sub
scas
scas
push
loope
jb
dec
data16
cmp
data16
push
das
push
pop
or
push
daa
push
xchg
add
inc
lea
or
cmp
push
scas
inc
inc
stos
and
test
xchg
js
dec
push
add
aam
or
mov
adc
test
cmp
sbb
cmp
(bad)
xor
out
inc
ins
adc
(bad)
in
bound
fs
pop
pusha
fdiv
dec
std
movs
or
inc
imul
and
lods
sbb
outs
xchg
cmps
xchg
xchg
push
xor
mov
dec
inc
cmp
dec
cmp
xor
push
popa
mov
mov
arpl
adc
ins
pusha
(bad)
xor
jns
enter
scas
mov
push
xchg
mov
sti
mov
out
call
mov
xor
dec
es
push
hlt
and
push
sbb
(bad)
out
mov
test
mov
xchg
adc
sbb
or
jo
js
js
rcl
push
pop
mov
jno
pop
adc
ret
add
mov
outs
inc
hlt
or
dec
ret
jmp
jno
mov
arpl
sbb
push
mov
inc
dec
inc
adc
ins
sub
jae
adc
inc
add
ins
jne
and
js
popf
cmp
push
mov
jmp
push
xor
pop
ja
retf
xor
adc
mov
push
push
push
adc
mov
push
adc
push
addr16
mov
test
adc
pop
inc
imul
mov
xlat
imul
inc
fidiv
mov
dec
push
clc
jae
mov
iret
mov
ror
push
aad
mov
push
sub
mov
push
inc
outs
or
daa
sbb
jo
retw
cmp
lods
ror
in
aas
add
mov
(bad)
jnp
loopne
imul
jnp
xor
push
imul
fisttp
xor
or
and
test
mov
dec
into
and
jnp
sti
dec
push
dec
inc
push
cmp
retf
adc
aaa
fadd
pop
sbb
outs
adc
cmp
push
push
mov
movs
and
pop
jmp
cmp
daa
mov
dec
add
xor
mov
and
(bad)
xor
outs
iret
inc
inc
cwde
fdiv
dec
mov
pop
ins
dec
daa
mov
push
ds
adc
mov
adc
add
dec
sub
ins
test
jbe
sbb
and
inc
lods
cwde
pop
retf
ss
popa
inc
jp
cmps
popf
shr
dec
dec
pushf
xor
inc
outs
pop
addr16
sub
adc
push
idiv
pop
xchg
repnz
mov
dec
xor
dec
jg
dec
outs
dec
inc
imul
add
daa
dec
xchg
sbb
test
inc
mov
pushf
sbb
jbe
sub
add
inc
imul
pop
or
push
in
stos
jae
fdivr
jl
sbb
sbb
sbb
sub
cmps
jae
fwait
es
retf
adc
cmp
sub
pop
repz
add
gs
sbb
lods
loopne
loope
dec
es
mov
and
test
or
and
jmp
jbe
cmp
push
jne
pop
sub
xor
outs
outs
scas
and
sbb
pop
sbb
add
(bad)
lahf
xor
xchg
ins
inc
mov
mov
popa
pop
cmps
and
in
sbb
dec
ror
dec
dec
mov
aaa
test
fwait
fs
movs
mov
dec
mov
movs
add
adc
(bad)
adc
sbb
xchg
or
or
shl
or
loop
dec
dec
add
cmp
cmc
jmp
aam
push
leave
pop
arpl
mov
pop
imul
inc
scas
and
scas
xor
jo
test
jg
fmul
adc
lods
jnp
sub
push
arpl
icebp
pop
gs
imul
cmps
jmp
push
je
xchg
push
jo
out
push
in
(bad)
jno
fwait
aaa
sub
inc
sub
fld
jae
mov
cld
inc
popa
aas
clc
aad
cmp
dec
or
lods
fadd
pop
sub
je
cmp
movs
cmp
mov
and
fnclex
daa
mov
out
push
push
push
popa
push
add
cmp
mov
rcl
xlat
fwait
je
add
inc
fld
inc
inc
sbb
loopne
in
mov
ins
fdivr
sub
movs
inc
adc
inc
stc
inc
ins
dec
test
push
inc
inc
or
std
mov
aas
mov
cmp
adc
jae
jp
fldenv
pushf
sbb
ins
push
sub
sbb
and
and
jecxz
cmp
push
push
adc
pop
cmps
les
or
inc
mov
inc
out
fs
add
call
and
mov
ss
nop
or
jae
xchg
and
popa
cmp
add
mov
ins
outs
jae
push
sbb
or
enter
xchg
sbb
aaa
ja
dec
xchg
and
xor
aas
out
ds
sbb
cmp
cmps
fdivr
or
aaa
or
push
ret
jge
sub
jns
pop
jnp
adc
fistp
adc
jp
test
enter
pop
mov
sbb
lods
addr16
ret
lock
scas
xor
push
dec
sub
sahf
adc
jg
xlat
sub
xlat
icebp
jp
hlt
jae
retf
inc
outs
lds
pop
out
and
and
jo
add
bound
cwde
adc
add
mov
xor
ret
popa
jae
retf
cmp
sbb
movs
es
pop
dec
imul
data16
pop
movs
fs
cs
push
and
and
sbb
shl
sbb
ret
and
jne
imul
pop
mov
mov
pop
lea
mov
shl
sbb
lds
mov
adc
ins
push
push
lods
lods
test
pop
aas
mov
sbb
pop
sbb
jmp
lds
mov
and
xchg
(bad)
cmp
push
hlt
inc
xchg
jno
popa
test
(bad)
sbb
push
lods
or
mov
scas
data16
cmp
push
and
in
fidiv
cmp
cmps
ds
retf
add
retf
jns
or
test
mov
scas
add
and
or
mov
xchg
pop
or
sub
jbe
inc
jne
aas
ret
add
add
push
inc
xor
sub
fadd
fimul
repz
and
sub
jne
imul
imul
fdivr
imul
jmp
mov
pop
or
adc
gs
jge
and
mov
mov
gs
pop
adc
jmp
or
mov
mov
lahf
jne
test
sbb
push
shl
fs
pusha
add
cwde
xchg
xor
mov
ret
dec
cmp
test
fmul
lds
retf
pop
cmp
add
push
ror
(bad)
xor
inc
inc
ins
std
stos
cmp
jb
xor
adc
or
aam
adc
sub
jno
sub
mov
inc
cdq
push
(bad)
xchg
cwde
inc
xchg
xchg
dec
ret
pop
ret
pop
stos
fsubr
or
and
inc
loope
(bad)
jmp
inc
stc
idiv
shl
ret
sub
ror
or
push
das
test
jnp
jno
imul
jb
mov
lea
sub
xchg
mov
pop
mov
mov
sbb
pop
mov
int
ins
lock
cmp
push
xor
inc
mov
mov
push
rol
gs
(bad)
push
ds
pop
xor
jo
cmc
xchg
sub
jg
pop
lock
outs
inc
fs
adc
gs
sbb
retf
adc
(bad)
adc
and
or
jp
sub
dec
add
pop
repnz
imul
and
pop
mov
or
loope
cdq
xor
push
(bad)
push
or
sub
push
adc
jmp
and
jnp
sbb
xchg
call
xchg
popa
dec
imul
inc
vcvttps2dq
mov
aad
test
sub
lea
mov
arpl
and
adc
push
adc
jae
pop
int3
ret
mov
lods
pusha
or
test
mov
mov
dec
pop
push
cwde
dec
push
inc
fadd
imul
xor
leave
das
mov
cwde
sub
pusha
cmp
mov
cmps
gs
inc
fs
push
imul
out
imul
dec
imul
lods
mov
mov
push
arpl
out
xor
or
popa
outs
sbb
cli
xor
sbb
lods
lea
and
jne
cmp
out
inc
push
mov
push
push
or
add
cmp
daa
sub
add
jns
or
in
mov
sub
out
in
loopne
das
inc
add
adc
adc
(bad)
dec
push
add
push
or
and
sub
and
sbb
dec
pop
pop
sbb
fwait
push
adc
and
dec
push
jp
(bad)
call
aas
out
jnp
mov
imul
adc
jnp
pop
call
push
add
add
adc
pop
and
add
push
adc
sbb
(bad)
(bad)
dec
(bad)
or
xor
or
and
sbb
push
add
mov
ins
or
out
fucomi
ficom
or
pop
add
add
mov
xor
and
pop
int
scas
cmp
bndstx
add
add
push
add
pop
push
sub
(bad)
xchg
add
sbb
inc
sub
in
(bad)
jg
push
sub
push
xchg
push
cmp
push
and
pop
and
sub
adc
or
(bad)
call
sbb
dec
mov
adc
push
and
clc
add
push
or
lods
pusha
inc
or
or
stos
adc
call
push
sti
cmp
add
or
adc
mov
pop
or
dec
push
pop
or
int3
or
pop
lock
pop
cmps
jnp
mov
and
xchg
adc
scas
(bad)
idiv
mov
pop
add
mov
loopne
ins
xchg
or
out
add
or
mov
popa
mov
or
sub
sub
add
sbb
sub
lock
lock
inc
xchg
add
outs
jbe
pop
jns
or
(bad)
sub
or
outs
fbstp
dec
sub
adc
(bad)
sub
adc
push
(bad)
(bad)
jg
mov
out
add
ror
mov
pop
add
push
sbb
mov
adc
sbb
xor
push
jne
or
dec
(bad)
(bad)
in
adc
push
dec
pop
sub
push
mov
inc
mov
inc
sbb
pop
icebp
sbb
pop
and
js
sbb
rcl
sbb
ja
ins
mov
dec
sub
lidtd
adc
fistp
call
scas
sub
es
cmps
xor
mov
adc
push
mov
mov
jo
aam
cmp
adc
adc
les
test
or
mov
mov
es
and
or
add
lock
adc
push
adc
(bad)
call
jno
sub
dec
outs
sbb
push
cmp
and
sub
sbb
in
cld
jg
push
je
or
push
add
adc
pop
adc
clc
(bad)
call
adc
push
and
adc
cmp
cmp
jo
lock
push
add
push
push
jae
adc
jge
fbstp
popa
add
cmp
cmps
add
mul
das
clc
test
and
mov
push
fucomp
mov
push
add
sub
and
adc
int
push
add
jge
push
clc
mov
push
adc
lds
sbb
retf
mov
xor
sbb
iret
(bad)
push
dec
inc
xor
sub
push
inc
ds
pop
paddd
push
push
mov
adc
ins
(bad)
jg
push
push
pop
add
ss
lock
add
add
in
(bad)
jmp
out
lock
add
lock
xor
inc
xor
pushf
sub
outs
js
ja
pusha
jmp
add
lock
out
adc
pop
add
es
lock
add
or
xor
loopne
push
xor
add
sub
(bad)
std
push
dec
mov
push
push
sub
lock
sub
add
loopne
add
push
push
and
xor
scas
mov
mov
daa
cmp
and
pop
or
mov
jg
ret
jg
(bad)
adc
sbb
mov
lock
add
and
push
ret
scas
jge
dec
pop
dec
push
mov
or
adc
jecxz
mov
lock
add
xor
outs
pop
xchg
(bad)
xchg
add
or
sbb
mov
cmps
cmp
and
mov
push
sbb
test
loop
or
cmp
and
cmp
jno
(bad)
dec
and
lds
cmps
jns
(bad)
jmp
ins
add
sub
xor
xor
lods
add
loope
inc
add
jmp
inc
lods
push
inc
push
sar
dec
arpl
fcmovnu
pop
jae
sbb
push
add
and
mov
mov
lock
and
xor
mov
lock
sub
or
push
dec
add
sbb
push
or
or
jle
dec
push
jns
pop
es
xor
sub
popf
movs
xchg
or
call
(bad)
sub
adc
jo
xor
or
inc
pop
xor
push
ins
inc
ja
out
adc
aam
(bad)
jmp
cmp
push
sub
jl
adc
scas
mov
fdivr
add
lods
jl
push
gs
cmps
mov
xchg
add
xchg
or
add
ficomp
sbb
adc
cmp
cmp
sar
into
add
jmp
sbb
test
jbe
or
jae
je
add
adc
movs
or
xor
add
mov
and
cmp
pop
push
pusha
push
fs
sbb
test
push
push
mov
test
icebp
inc
fisttp
pop
push
dec
adc
adc
sbb
rcr
push
push
in
inc
mov
test
call
or
adc
sbb
xchg
or
push
dec
or
and
test
and
int
loope
fcomp
mov
adc
pop
or
push
mov
dec
adc
or
ss
sbb
pop
push
and
jle
clc
jecxz
lock
sbb
push
outs
(bad)
in
jg
sbb
imul
adc
and
dec
test
loop
lock
add
inc
and
add
xchg
adc
jge
and
sbb
xor
or
adc
test
jle
call
mov
sbb
and
sbb
mov
xor
add
aad
inc
add
jmp
xchg
or
popa
lea
mov
cmp
xor
rcl
sbb
(bad)
cmpxchg
push
push
std
psrlw
ror
xchg
sub
call
jl
mov
xchg
or
adc
or
adc
xor
bound
xor
and
adc
adc
in
inc
push
push
push
ror
inc
xor
mov
add
ss
(bad)
fcmovnu
or
test
dec
adc
mov
push
xchg
and
or
pop
aas
in
mov
sbb
inc
add
inc
mov
jns
pop
or
sbb
loope
(bad)
pushf
dec
cs
inc
pop
loop
add
sbb
cmp
push
loop
add
dec
inc
pop
xor
inc
mov
add
add
(bad)
jnp
fistp
add
lock
push
or
add
add
inc
push
hlt
mov
mov
jp
xor
cmp
icebp
push
fisttp
cs
cmp
ds
ins
addr16
pop
cmp
add
push
sub
xor
add
push
mov
cmp
sub
and
add
adc
lock
add
add
cmp
cmp
ss
adc
bound
lock
jg
ss
cmp
add
inc
lock
imul
inc
lock
ds
push
add
aaa
sub
dec
jl
sub
test
(bad)
lock
add
add
in
inc
inc
inc
xor
dec
or
xor
lods
add
push
adc
add
lock
adc
out
mov
pop
jne
cmp
xor
push
dec
add
sbb
sbb
(bad)
jmp
sbb
es
xor
push
pop
xor
(bad)
sbb
mov
pop
pop
lock
clc
das
push
add
mov
adc
adc
lock
das
cli
adc
dec
push
sub
pop
add
(bad)
in
lock
push
sub
jg
push
cmp
pusha
pop
xor
adc
adc
push
mov
rol
lock
add
fisttp
fild
imul
in
mov
push
loope
les
inc
mov
imul
jg
rol
or
test
iret
or
adc
pop
inc
(bad)
test
adc
pop
pop
pop
adc
adc
inc
sbb
ins
mov
js
or
lock
daa
inc
clc
or
aas
fcomp
jo
rol
outs
pop
add
cmp
mov
fadd
add
shl
pushf
sub
std
andps
push
cmp
es
mov
cmc
into
adc
xor
adc
push
jnp
xor
adc
lock
sbb
push
leave
add
cmp
xor
ins
push
sbb
xor
cmps
(bad)
and
jo
push
std
mov
test
sub
or
and
and
or
or
jno
push
sub
call
and
cmp
mov
rcr
scas
cmp
sbb
mov
push
adc
into
push
add
or
mov
push
or
dec
aam
xor
jp
imul
lock
inc
das
enter
lock
add
mov
add
imul
mov
push
xor
ror
sub
cmp
xor
call
ret
daa
push
add
popf
les
std
jmp
push
add
adc
and
adc
lock
adc
scas
jg
xchg
xchg
and
fcomp
mov
pop
push
push
xlat
and
push
xchg
loop
jns
loope
sub
sub
xor
sub
call
and
push
push
fsubp
sar
cmp
iret
pop
jmp
cmp
sbb
adc
mov
clc
push
sahf
add
add
(bad)
mov
adc
add
push
adc
lock
sub
call
add
fidivr
adc
xchg
test
cmps
pop
sub
push
xor
pop
hlt
jg
and
inc
cmp
popa
and
mov
lock
ds
mov
je
push
imul
scas
add
push
add
push
fmul
pop
clc
adc
mov
and
xlat
jo
jg
out
idiv
add
jge
and
push
enter
push
stos
lock
scas
lds
mov
and
lock
jbe
jg
int
and
inc
and
mov
xchg
clc
dec
inc
adc
mov
adc
icebp
jmp
and
pop
adc
sbb
test
and
and
add
inc
mov
fmul
jns
adc
clc
(bad)
or
adc
xor
xor
in
jle
adc
sbb
sbb
sbb
add
repnz
je
sub
scas
push
add
nop
cld
call
fisub
or
sbb
jno
fisttp
scas
or
push
add
cld
inc
adc
cwde
or
adc
jle
xor
inc
rcr
push
mov
mov
sbb
daa
and
nop
and
adc
mov
mov
xchg
jg
retf
(bad)
(bad)
jle
movs
cs
mov
mov
pop
lahf
jmp
mov
inc
aas
mov
fild
mov
and
js
loope
xadd
test
push
mov
adc
dec
fadd
sub
add
std
stos
pop
push
sbb
inc
cs
sbb
pop
sbb
out
sar
sub
xor
mov
outs
pusha
or
mov
js
mov
and
lock
sbb
add
xor
lahf
sub
lods
pop
mov
push
(bad)
(bad)
hlt
inc
add
jmp
mov
xor
xor
and
pop
push
add
aas
aas
cmp
sbb
(bad)
pop
(bad)
and
jg
jnp
repnz
mov
es
sub
sub
adc
adc
pushf
adc
pushf
test
aaa
dec
shl
(bad)
lahf
in
push
push
lock
sbb
and
xor
add
dec
xor
into
sbb
adc
dec
xor
retf
sbb
or
or
push
cmp
adc
js
out
push
jmp
mov
add
int
imul
inc
sub
mov
adc
mov
xor
popf
add
adc
add
clc
dec
data16
(bad)
xchg
push
popa
and
dec
enter
adc
add
sub
and
hlt
or
adc
push
pop
add
pop
lock
pop
or
sahf
adc
jno
mov
outs
jmp
adc
adc
fs
pop
mov
test
pop
sbb
or
fcmovu
fidivr
inc
or
add
mov
mov
aas
sar
pop
jo
adc
mov
not
sub
movs
in
adc
sbb
inc
jb
pop
dec
xor
scas
and
or
add
pushw
mov
mov
push
fimul
pop
lds
jg
cmp
and
jne
pop
sub
jg
inc
sbb
push
push
sbb
fist
call
(bad)
adc
cmp
dec
mov
dec
lock
adc
fmul
jmp
idiv
and
xchg
xor
sbb
sbb
add
xchg
push
pop
jg
(bad)
cmp
ret
add
and
xor
push
adc
xor
cli
push
ss
lods
pushw
jg
xor
adc
das
xor
adc
mov
push
pop
movhps
jne
cmp
mov
lods
pop
add
push
or
and
fwait
mul
mov
inc
xor
pop
outs
mov
in
fwait
mov
add
add
lock
add
outs
mov
push
ficom
adc
lock
rcr
(bad)
das
dec
xor
ins
add
aad
mov
sub
sub
ss
std
xchg
mov
imul
or
mov
mov
mov
mov
xor
push
rcr
mov
bound
pop
adc
mov
xchg
out
pop
xor
cmps
jbe
pop
xchg
push
pop
push
inc
dec
mov
add
jp
dec
addr16
jns
cdq
push
and
inc
ss
inc
and
and
sub
in
jg
lods
cmp
dec
sbb
sub
push
push
add
sub
add
mov
add
adc
sbb
gs
inc
adc
sub
dec
adc
cwde
inc
push
pop
sub
imul
sbb
or
or
push
sbb
dec
imul
cs
or
arpl
mov
das
cdq
das
sub
mov
addr16
add
add
ins
adc
and
les
cmp
shr
add
das
std
imul
push
test
add
sbb
inc
sub
adc
outs
or
(bad)
jg
push
add
add
sbb
jle
or
or
sbb
outs
xlat
sbb
sbb
mov
jge
adc
cmp
cmp
pop
adc
add
dec
sbb
sbb
inc
sub
out
ret
push
and
movs
adc
packssdw
mov
add
jo
nop
mov
cmp
sub
sub
or
pop
lods
mov
sbb
add
and
call
daa
sbb
jne
dec
adc
mov
div
xor
hlt
sbb
outs
lock
bound
adc
sub
aad
nop
out
pop
push
lock
test
and
mov
add
mov
sub
in
(bad)
jmp
fs
push
es
pop
or
lock
pop
jg
nop
dec
(bad)
jg
and
inc
sub
add
inc
jge
sub
fld
stos
cwde
cmp
js
sub
sbb
and
xor
cli
mov
add
add
cmp
lock
xor
xlat
stos
and
add
adc
pop
xor
pop
push
mov
xor
icebp
dec
cld
mov
pop
add
popf
adc
or
cmps
cs
aaa
dec
adc
cs
mov
add
adc
fisub
adc
dec
sub
ret
call
ins
lea
lods
loopne
loop
fiadd
cmp
movs
and
mov
sbb
pop
cmp
fidivr
pop
push
nop
stos
inc
int
jmp
sub
cmp
movs
mov
push
adc
or
cmp
call
in
add
xor
or
mov
push
adc
push
mov
(bad)
dec
test
push
dec
pop
arpl
jb
sbb
sbb
sub
adc
sub
cmp
sbb
push
sub
xor
jl
inc
adc
add
inc
pop
shl
sti
loope
aaa
jnp
adc
sub
call
sbb
fst
pushf
aaa
adc
rol
shl
cmp
aaa
jmp
add
cmp
adc
(bad)
jmp
or
inc
jns
mov
pop
sbb
push
jmp
int
push
push
inc
call
(bad)
out
fild
add
pop
js
mov
jbe
jp
ss
jno
adc
cmps
scas
mov
push
and
test
jle
mov
xchg
dec
std
mov
push
mov
sbb
pop
aas
mov
mov
inc
push
jb
je
sbb
(bad)
dec
int
mov
dec
out
ret
sahf
es
dec
fucomi
mov
push
add
dec
mov
sbb
js
sbb
mov
push
push
xchg
outs
mov
jno
jg
enter
jno
ins
mov
in
sbb
inc
(bad)
mov
js
push
cmp
mov
sub
das
fstp
jo
aam
mov
pop
fcom
mov
mov
cmp
cmp
fmul
fsub
lock
mov
xchg
scas
add
and
enter
outs
xchg
js
push
xor
(bad)
xchg
add
mov
adc
cmp
xor
in
or
xchg
sbb
adc
dec
bound
sub
test
pop
and
in
and
or
add
cmp
adc
or
lock
test
fwait
mov
adc
adc
lock
stos
popa
push
mov
pop
push
shl
(bad)
pop
mov
xor
ficomp
xchg
std
cmp
inc
adc
mov
mov
jmp
sbb
adc
push
sub
push
push
pop
add
sahf
fcmovnu
lock
xor
iret
adc
dec
push
ss
aas
push
sbb
sub
int
dec
lock
push
es
(bad)
adc
sub
sbb
adc
sub
add
push
adc
fild
or
add
cmp
jb
inc
sti
(bad)
(bad)
xor
(bad)
add
or
inc
pop
sbb
adc
push
xor
adc
and
sbb
or
ds
nop
inc
inc
push
push
das
cli
fnstcw
dec
dec
or
movs
lock
or
or
adc
pop
xor
or
sbb
addr16
pop
pop
add
rcr
push
sub
adc
and
ror
sysret
cmp
(bad)
(bad)
jg
or
ss
fld
sbb
and
and
xor
in
pop
xor
and
jle
cmp
je
and
addr16
or
pop
and
or
pop
mov
pop
ror
add
push
or
add
mov
add
das
imul
or
push
mov
or
(bad)
adc
ja
and
adc
sbb
inc
test
(bad)
call
add
sub
sub
inc
push
or
pop
rcr
loope
call
pop
adc
push
or
pop
pop
cmp
dec
adc
push
or
cmp
call
adc
ins
daa
or
or
or
inc
lock
cmp
aaa
enter
es
adc
sbb
adc
and
pop
pop
xor
dec
sbb
int
pop
add
sbb
bound
jg
dec
dec
sub
das
push
sub
sbb
cs
xor
xor
pop
sbb
and
jg
fdivp
and
or
mov
daa
clc
not
add
and
leave
pop
cmp
outs
out
jp
and
or
or
lock
add
dec
or
xor
mov
(bad)
inc
dec
adc
adc
cmp
and
(bad)
call
fs
sbb
sbb
cs
inc
sbb
test
cmp
push
xchg
adc
pusha
mov
stc
jg
imul
xor
xor
das
adc
bndstx
or
or
sar
pop
push
adc
and
or
inc
add
outs
add
pop
cmp
xor
sbb
or
in
out
call
and
and
adc
or
lock
(bad)
fst
pop
xor
je
or
sbb
and
jb
(bad)
(bad)
jg
enter
xor
push
dec
push
and
shld
adc
xor
add
dec
sbb
popf
retf
push
call
or
adc
popa
and
push
mov
adc
xor
sbb
outs
push
std
and
adc
push
or
or
(bad)
(bad)
jmp
xchg
sbb
pop
movs
push
cmp
pusha
push
push
or
inc
(bad)
push
mov
adc
pop
sub
cmp
adc
dec
adc
push
sbb
outs
adc
pop
sub
push
push
or
jecxz
mov
dec
inc
or
ins
dec
sbb
mov
push
inc
and
pop
call
add
sbb
and
and
pop
or
cs
jge
lock
xor
push
fadd
movs
pop
adc
test
bound
sub
sub
push
sub
fs
(bad)
cmp
inc
mov
pop
pop
add
inc
xor
sahf
adc
ret
pusha
push
xchg
and
inc
icebp
das
add
sub
jmp
adc
outs
mov
dec
or
dec
dec
adc
cmp
adc
push
movsx
cs
or
inc
xor
push
push
inc
lock
inc
ins
push
das
lock
add
(bad)
mov
push
or
push
xor
call
push
dec
xor
bound
push
lock
mov
das
push
xor
mov
adc
sahf
pop
xchg
sub
inc
shr
push
adc
pop
daa
sar
jne
cmp
push
imul
inc
addr16
inc
xor
or
or
ja
mov
push
adc
cmp
push
dec
sbb
or
adc
das
cs
cli
or
add
das
outs
push
or
adc
bound
ss
rol
outs
sbb
push
cld
jmp
xchg
and
xor
xor
bound
inc
sbb
in
call
jg
mov
cmp
pop
sub
sub
inc
scas
js
xor
xor
pop
cmp
repnz
les
ss
std
push
and
aam
inc
sbb
pop
push
pop
push
pop
push
push
jl
jmp
pop
dec
xchg
xor
xchg
cli
adc
sub
and
std
pop
mov
ror
push
cs
and
inc
push
sbb
and
lahf
push
movs
pop
lods
and
and
pop
cmp
mov
sbb
lock
lock
ret
(bad)
call
adc
nop
pop
adc
fs
stos
(bad)
push
or
das
or
sub
sub
mov
pop
ret
sbb
sub
jl
xor
jg
(bad)
call
xchg
lock
add
(bad)
mov
sub
sbb
xor
(bad)
adc
and
and
fisub
or
or
or
ucomiss
or
or
stos
or
fisttp
or
sbb
sbb
call
or
loopne
jge
xchg
or
and
adc
pop
(bad)
js
xchg
jmp
mov
mov
cld
loope
mov
add
pop
mov
mov
or
call
int
lahf
sbb
cmp
xor
adc
aaa
loopne
adc
inc
dec
dec
push
adc
adc
mov
push
sub
inc
movups
and
add
adc
jno
cmp
or
aaa
ffreep
push
add
xchg
cmp
fs
mov
(bad)
cmp
or
dec
cdq
push
and
adc
sbb
adc
ss
sbb
xor
mov
lock
jg
cmp
loopne
call
pop
push
pushf
sbb
and
or
mov
in
xor
mov
sub
mov
inc
adc
mov
push
clc
xor
cmc
enter
adc
jmp
xor
cmp
pop
inc
push
jne
fcomp
js
sub
outs
(bad)
data16
pop
cmps
adc
pop
fisub
popf
push
sbb
xor
jmp
push
ins
sbb
inc
outs
popa
inc
pop
xchg
or
pop
xor
sub
inc
lea
jnp
sub
sbb
push
das
je
es
std
fcomip
in
sub
dec
and
test
jmp
daa
movs
push
jl
neg
sbb
lock
aam
adc
or
sub
sbb
push
pop
push
xor
sub
or
adc
xor
push
xor
data16
pusha
push
fstp
push
adc
adc
add
shr
xchg
mov
call
call
adc
js
pop
mov
daa
lock
dec
int
rcr
lock
push
sbb
pop
pop
clc
add
xor
xor
hlt
add
je
sub
mov
test
mov
or
cmp
xchg
adc
or
xor
dec
or
js
dec
lea
push
lods
and
adc
stos
sbb
daa
adc
push
mov
cs
and
push
push
or
add
push
ins
add
ds
sub
iret
fs
sub
add
ins
shl
loop
push
adc
lods
stos
ret
call
add
mov
push
lock
adc
sbb
dec
dec
sbb
jns
add
scas
cmc
mov
out
jno
gs
dec
fimul
xor
imul
add
sub
fld
sbb
xchg
jns
pop
jle
outs
fisubr
sub
dec
push
sub
jne
sbb
and
ud0
test
mov
xor
mov
cmp
adc
and
(bad)
(bad)
(bad)
inc
or
pop
pop
or
inc
arpl
sbb
push
adc
pop
(bad)
lock
add
push
scas
inc
fwait
mov
mov
fwait
(bad)
inc
push
dec
inc
sbb
jb
mov
adc
xchg
mov
xor
fild
mov
sub
sahf
sbb
cs
sbb
sub
cmc
bndldx
or
and
pop
jl
xor
in
inc
sbb
cmp
pop
add
and
jmp
jecxz
push
lods
shr
scas
ds
adc
and
push
imul
fwait
adc
and
or
inc
inc
dec
push
sub
sbb
das
or
sbb
(bad)
jp
loopne
jp
push
push
mov
ss
cdq
push
mov
xor
jne
and
mov
(bad)
push
mov
pop
and
retf
add
jo
and
ret
dec
jmp
clc
xchg
int3
dec
data16
xchg
pop
out
dec
or
sbb
sbb
jmp
or
sbb
inc
xchg
pop
pusha
pop
pop
add
test
daa
add
sar
neg
pop
addr16
pop
or
sysenter
inc
mov
cmp
int
cld
xor
xor
adc
pop
adc
mov
mov
fs
aaa
add
cmp
adc
and
faddp
push
lea
enter
test
call
and
sbb
scas
xor
(bad)
jg
adc
jo
(bad)
dec
je
and
cmp
dec
sbb
and
sub
ds
gs
pop
push
jg
je
bound
cmp
scas
or
ds
popa
and
inc
add
dec
add
dec
stos
sbb
pusha
or
mov
jmp
jle
push
or
pop
aas
xor
sbb
xor
inc
dec
push
enter
adc
or
enter
cmovnp
mov
push
cmp
jo
sub
or
adc
adc
push
add
xchg
neg
or
ins
in
or
idiv
add
test
and
sub
sahf
push
dec
xor
add
pop
cmp
xchg
dec
cmp
dec
push
stos
std
cmps
test
or
int3
jecxz
std
jg
dec
cmps
and
sbb
pop
sbb
and
cmp
popa
lock
mov
push
xchg
and
mov
mov
cmp
or
sbb
xor
loop
sbb
movs
cmp
push
ror
or
jle
sbb
and
sub
hlt
shl
push
mov
adc
stos
pusha
xchg
cs
cmp
add
add
test
sub
inc
pop
jle
fcomip
stos
and
and
push
dec
or
and
dec
test
push
(bad)
adc
arpl
xor
pop
(bad)
inc
sub
or
adc
pop
xchg
adc
pop
dec
push
or
push
call
cli
sub
adc
add
inc
inc
imul
add
inc
push
jnp
xchg
int3
stos
xor
jg
sub
ins
sbb
jae
dec
push
stos
(bad)
rol
es
outs
or
inc
pop
add
dec
sbb
sbb
push
or
(bad)
push
sub
push
cmp
push
or
pop
push
or
daa
cmp
adc
pop
sbb
or
and
push
ss
add
cmps
data16
daa
xor
pop
or
adc
mov
xchg
sar
(bad)
(bad)
call
cmp
push
push
adc
aas
jnp
arpl
push
sub
or
adc
outs
pusha
sbb
test
and
sub
push
or
or
or
cmp
sub
popf
aas
dec
aaa
and
push
and
cmp
add
mov
adc
sbb
loopne
mov
inc
pop
pop
ins
pop
dec
sbb
inc
push
xor
and
call
and
xor
push
and
cmp
dec
cs
add
or
push
movs
and
adc
push
xchg
sub
push
adc
mov
call
inc
sbb
adc
fs
inc
sbb
in
push
jg
add
push
pushf
lock
xor
adc
push
adc
sub
dec
adc
call
inc
add
sub
pop
dec
mov
add
mov
xchg
add
dec
or
pop
out
pop
inc
call
pusha
(bad)
xor
push
inc
popa
int3
adc
dec
or
(bad)
sub
data16
xchg
sbb
or
cmp
das
adc
mov
inc
inc
das
sub
sbb
push
ins
adc
or
sbb
sbb
xchg
jmp
adc
sbb
adc
jg
mov
cmp
imul
lock
add
fwait
sti
cmp
lods
and
pop
dec
daa
or
ds
pop
dec
adc
sbb
mov
or
inc
and
sub
cmp
cmp
ds
js
sub
movs
aaa
pusha
adc
and
sub
loopne
jmp
push
sub
push
das
cs
jg
fwait
and
es
sub
xor
cmp
xchg
or
xor
fisubr
push
push
push
and
ds
mov
adc
test
or
and
test
inc
push
es
and
popa
push
ja
dec
ror
and
adc
or
jp
mov
inc
sti
(bad)
push
or
or
sbb
mov
adc
sub
push
or
mov
or
xchg
xor
inc
ficomp
or
les
or
(bad)
mov
cmps
xor
push
mov
or
and
push
or
lock
add
add
loope
and
adc
pop
cs
(bad)
mov
adc
xchg
mov
jmp
push
repnz
push
dec
push
dec
sbb
stos
sbb
retf
xchg
dec
or
or
push
push
xchg
sub
inc
adc
sub
pop
push
dec
sub
adc
call
sub
or
sbb
popf
and
or
je
stos
scas
clc
adc
sub
jne
pop
adc
call
call
adc
sub
jnp
sub
or
dec
or
sbb
add
inc
cmp
or
or
sbb
inc
aas
sub
outs
cli
pop
jno
clc
aaa
xor
adc
pop
cs
push
enter
xor
outs
imul
das
inc
inc
and
ds
dec
aaa
sbb
(bad)
in
mov
push
cmp
sbb
and
xsavec
scas
mov
and
and
and
loop
pop
mov
ud2
push
cs
cmp
xor
jg
(bad)
clc
and
daa
dec
mov
lock
jle
adc
(bad)
call
ss
push
adc
and
inc
adc
and
lock
aaa
push
sub
sbb
movhps
push
and
cld
(bad)
inc
dec
and
push
inc
sbb
dec
or
push
inc
push
and
add
and
dec
js
test
sub
pop
aam
dec
add
dec
loopne
pushf
adc
das
xchg
push
(bad)
fild
sub
jo
xchg
push
pop
test
cmp
icebp
hlt
add
adc
ss
dec
movs
out
cli
push
xchg
or
add
push
pusha
mov
push
lods
lods
jo
push
inc
dec
mov
cmp
sub
stos
mov
sub
inc
mov
mov
dec
pop
test
cmp
(bad)
call
adc
retf
pop
cmp
push
sub
ds
jae
mov
ret
mov
inc
sub
sbb
addr16
cdq
clc
xor
pop
add
and
fimul
xchg
sub
lock
push
adc
pop
mov
adc
test
push
cmp
or
test
pop
and
outs
cli
(bad)
fistp
or
sbb
sbb
sbb
adc
inc
sbb
push
push
sub
addr16
mov
retf
jae
jg
cmp
push
push
pop
test
lock
add
mov
xor
sbb
mov
js
aad
cs
and
or
push
and
aaa
push
push
mov
sbb
and
and
mov
inc
xor
ret
push
cmp
pop
or
cmp
adc
and
jge
dec
dec
dec
or
sbb
cmp
or
sbb
or
push
inc
(bad)
cld
aaa
and
out
or
push
mov
adc
ins
fsub
sbb
(bad)
or
imul
xor
mov
hlt
push
mov
add
push
add
push
jno
inc
push
inc
clc
adc
xor
cs
sub
(bad)
mov
dec
pop
adc
push
and
sbb
sub
aaa
or
and
push
push
dec
pop
sub
pop
icebp
ss
sub
pop
ss
mov
adc
pop
xchg
pop
aaa
jl
in
ins
and
xor
xor
sbb
shr
jle
imul
pop
push
add
push
push
inc
cmp
mov
ret
adc
jmp
adc
pop
pop
int3
inc
sar
fcmovne
inc
add
add
dec
scas
or
mov
sub
and
or
movups
sub
sbb
inc
sub
bound
push
xor
sbb
bound
(bad)
(bad)
jg
push
sub
dec
cmp
push
and
adc
cmp
xor
fcomip
call
jle
ins
and
or
push
adc
and
inc
adc
sub
pop
push
sbb
das
clc
sbb
inc
adc
sub
pushf
xor
jns
ins
out
cli
jg
jnp
sub
sbb
bound
pop
push
dec
daa
mov
sbb
sub
pop
dec
cmp
sub
xor
rcl
out
mov
retf
adc
and
cmp
sub
pop
adc
das
xor
(bad)
inc
or
adc
sbb
jge
sbb
adc
inc
inc
inc
dec
push
call
dec
adc
adc
aaa
xor
pop
pop
adc
mov
daa
jae
cmp
sub
stc
sbb
jmp
adc
xor
pop
adc
adc
add
adc
push
adc
push
loop
ins
cmp
pop
xchg
push
minps
hlt
push
adc
mov
adc
sbb
dec
jmp
sbb
adc
and
and
data16
mov
dec
outs
or
and
ins
or
jo
rcr
cmps
and
fbstp
sub
add
adc
push
call
push
xor
or
xor
and
sbb
or
and
push
lods
push
pop
scas
adc
inc
cmp
scas
mov
and
adc
pop
add
ds
push
adc
fidiv
mov
add
add
adc
es
sbb
sbb
adc
adc
jmp
lock
and
fmul
or
sub
sbb
bound
or
fisubr
out
adc
xor
outs
or
or
test
add
inc
retf
dec
push
push
sti
adc
sbb
adc
adc
cmp
push
ss
add
inc
das
and
lock
mov
sbb
sbb
push
adc
or
and
bound
sbb
sbb
jg
hlt
es
adc
sbb
sbb
sbb
adc
or
sbb
or
jb
push
xor
sbb
adc
adc
adc
push
sbb
outs
mov
jno
and
adc
cld
jl
or
push
sbb
or
fs
inc
ss
push
ficom
pop
adc
push
adc
mov
stos
loope
adc
sbb
pop
dec
pop
pop
mov
sub
mov
and
or
(bad)
jg
jo
sbb
call
adc
push
xor
pop
cmps
jg
mul
inc
or
mov
push
and
jecxz
and
inc
adc
push
lock
sbb
and
arpl
(bad)
inc
adc
jmp
fs
sbb
adc
mov
adc
adc
jl
cmp
dec
sbb
or
sub
and
mov
dec
add
adc
or
nop
in
mov
push
push
scas
or
mov
pop
pusha
adc
pop
inc
inc
or
push
shr
fdivr
pop
xchg
pop
pop
jne
sub
xor
mov
mov
sub
sbb
jecxz
mov
sub
cmp
cdq
or
and
push
and
mov
push
retf
push
daa
pop
ror
adc
or
hlt
sub
push
jb
mov
push
push
(bad)
scas
jmp
sbb
sbb
mov
mov
fisubr
mov
jae
cmp
or
movs
mov
ja
aam
mov
pop
lock
inc
(bad)
mov
data16
push
pop
adc
lds
lock
cmp
and
hlt
cwde
loopne
(bad)
jmp
hlt
add
sub
and
sbb
mov
xor
sub
adc
push
(bad)
(bad)
call
or
cmp
pop
xchg
pop
pop
pop
pop
pop
push
test
jo
dec
and
xor
dec
cmp
push
pop
das
nop
bound
cmp
adc
std
call
mov
and
pop
cvtps2pi
sub
or
sub
popa
or
inc
adc
xor
or
outs
adc
and
ins
cmp
pop
push
popa
inc
push
adc
(bad)
push
pop
mov
push
mov
sbb
mov
call
sbb
and
dec
push
adc
or
rcr
sub
lods
mov
xor
add
shufps
test
daa
or
sar
pop
sbb
fcmovnu
mov
mov
pop
pusha
sbb
and
push
mov
push
sbb
inc
bound
cld
outs
call
cmps
pop
jb
or
cmp
es
and
inc
push
mov
adc
push
arpl
or
dec
inc
inc
or
push
loopne
and
push
xlat
cs
jbe
dec
cwde
sbb
xchg
out
test
adc
xlat
dec
sbb
arpl
das
sub
bound
or
xor
inc
lds
or
or
inc
push
sbb
les
dec
mov
fnstenv
aam
inc
cmc
push
data16
sbb
ret
out
push
(bad)
sbb
jae
push
mov
adc
or
bound
mov
dec
lock
adc
add
rcr
push
add
sbb
push
push
hlt
adc
imul
sbb
and
and
adc
aaa
adc
adc
mov
pop
pop
inc
arpl
rcr
aas
adc
push
sbb
sub
daa
popf
clc
fisttp
inc
sbb
jns
cmp
ficom
fcomip
adc
gs
adc
inc
pop
add
xor
push
push
nop
dec
or
ds
xor
inc
fild
sbb
dec
dec
sbb
and
and
xor
adc
cmp
mov
cmp
jnp
and
ficomp
adc
es
mul
cld
rcl
and
and
jnp
sar
sbb
loopne
lock
call
sbb
sbb
inc
and
mov
aaa
pop
lock
pop
ret
mov
adc
add
pop
add
mov
adc
ins
add
jg
add
or
adc
or
jl
adc
jmp
rcr
push
inc
fcom
je
adc
cpuid
adc
pop
(bad)
pop
rcr
mov
xor
adc
mov
add
nop
(bad)
stc
jbe
pusha
xchg
sbb
jns
or
scas
call
or
adc
sub
ret
sar
fisubr
or
jb
mov
adc
sub
ret
fcomp
xchg
pop
sysret
dec
adc
xor
ja
pop
xchg
(bad)
(bad)
out
clc
or
or
jbe
push
push
and
sub
xor
adc
cs
fs
and
sbb
push
adc
push
sub
push
push
cs
dec
jno
mov
or
jb
out
inc
pop
dec
int
inc
or
and
es
adc
aas
mov
or
cmp
push
das
dec
xchg
pop
dec
mov
adc
outs
mov
adc
add
or
sub
inc
(bad)
lods
push
pushf
and
dec
sbb
or
and
add
adc
fbstp
dec
or
sbb
cmp
lock
add
fisttp
sub
inc
or
jmp
call
das
or
cs
xor
pusha
or
sbb
or
ds
aaa
adc
arpl
or
mov
add
sbb
or
push
ds
outs
push
pop
test
das
rcl
pop
ins
and
inc
cmp
mov
push
lea
test
js
xor
push
call
and
xor
ficom
push
add
push
or
aad
or
mov
pop
je
data16
inc
push
cmp
and
(bad)
das
xor
and
in
or
bound
inc
ss
jb
hlt
pop
icebp
sbb
ja
jb
and
sub
daa
sbb
dec
pop
mov
loop
sub
mov
and
push
push
sbb
fucomi
jmp
and
xor
ins
push
push
cmp
and
adc
and
sbb
inc
and
in
call
adc
ss
push
adc
push
movaps
and
sub
sbb
sub
inc
adc
push
sbb
jp
mov
cmp
mov
sbb
and
enter
lahf
lock
add
test
loopne
ds
rol
jno
pop
and
or
nop
mov
pop
leave
and
mov
xor
and
sub
push
sub
(bad)
out
nop
sbb
dec
pop
test
and
adc
sub
cmp
pop
cmp
aaa
pop
sbb
sahf
cmp
sbb
sar
sub
ins
or
cmp
and
sbb
lods
inc
and
cmovnp
mov
in
push
outs
pop
lock
mov
es
mov
push
or
sub
jle
shr
or
aas
xchg
push
dec
cmp
sub
cmp
or
ficomp
ds
ret
or
aaa
sbb
mov
and
or
fidiv
inc
and
xor
aaa
push
(bad)
call
sbb
and
ret
pop
sbb
popa
dec
sub
mov
loopne
dec
sbb
inc
push
dec
cmp
pusha
dec
pop
cvtps2pi
dec
adc
lods
xor
fmul
adc
adc
and
sbb
ds
push
jmp
mov
push
mul
icebp
pop
call
cmp
and
or
push
pop
push
xor
xor
cs
cs
das
jo
or
pop
push
adc
xor
sub
aas
fs
and
jp
sbb
and
sub
shl
sub
inc
sbb
sbb
lock
add
push
movq
sbb
stos
push
dec
adc
(bad)
(bad)
inc
ds
mov
lock
add
vmread
outs
xor
dec
sub
xor
push
inc
or
mov
aam
inc
mov
lock
(bad)
dec
sbb
adc
cwde
outs
popa
jp
dec
dec
xor
sbb
mov
es
sbb
stos
je
out
pop
cmp
and
and
es
cmp
pop
inc
push
adc
mov
lock
(bad)
sbb
aaa
adc
and
adc
cwde
add
fild
push
sbb
or
aaa
call
sub
push
sahf
ins
or
cmps
cwde
xor
test
push
cmp
adc
(bad)
xor
outs
sbb
mov
push
adc
adc
scas
dec
and
es
or
rcl
adc
rcl
adc
cmp
adc
cmp
cdq
clc
sub
shl
or
sub
pop
push
sub
xchg
adc
xor
pusha
mov
(bad)
pop
or
and
or
push
or
hlt
mov
es
adc
and
or
lock
or
sbb
push
adc
in
clc
inc
dec
cmp
ret
mov
dec
in
sbb
add
or
(bad)
(bad)
jg
cli
sbb
movs
rcr
call
and
dec
push
sub
scas
clc
mov
pop
and
or
sbb
fsub
sub
test
(bad)
jmp
jne
bound
push
stos
cmp
inc
sub
dec
mov
dec
push
xor
(bad)
xor
adc
stos
scas
push
js
sbb
ja
ret
push
test
sbb
cs
mov
xor
inc
movs
xchg
adc
cld
dec
sbb
jmp
clc
and
and
xor
dec
cmp
xor
sub
mul
sbb
movhps
sub
sbb
inc
or
ss
mov
push
add
push
and
lock
lock
adc
pusha
jg
push
push
push
adc
sbb
dec
dec
cmp
inc
and
fisttp
push
inc
adc
adc
aaa
test
jg
or
pop
cmp
cmp
pop
into
sbb
sbb
mov
fild
inc
mov
or
and
and
adc
jo
push
dec
ss
adc
sbb
jmp
xor
or
adc
scas
dec
add
lock
pushw
call
test
cld
or
add
xchg
test
push
(bad)
jg
adc
and
or
xchg
add
(bad)
fnstenv
and
sbb
cmp
inc
or
aaa
test
mov
xchg
adc
sbb
mov
mov
cmp
cmp
pusha
test
ds
push
(bad)
and
adc
loopne
and
adc
cmp
xor
mov
adc
push
jo
and
mov
pop
dec
and
sub
jle
mov
adc
aaa
loope
add
call
(bad)
in
stos
cmc
dec
mov
or
jecxz
aam
cdq
add
pop
sbb
or
dec
outs
aaa
unpckhps
jae
sbb
and
jmp
cmp
push
pop
or
or
adc
or
test
mov
adc
adc
pop
and
sbb
or
or
or
pop
push
or
inc
(bad)
dec
inc
dec
adc
push
or
or
or
mov
sub
sub
and
xor
clc
push
jl
pop
and
push
mov
pop
sub
sbb
xor
push
pop
sar
and
inc
sbb
mov
fs
es
jmp
shr
and
push
dec
jno
dec
test
jne
aad
or
sub
pop
mov
adc
out
pop
pop
imul
(bad)
call
js
add
dec
push
push
(bad)
and
inc
xor
retf
clc
cmp
lods
adc
inc
fsub
mov
push
push
sub
push
inc
cmp
sbb
jecxz
pop
in
cmp
pop
cmps
push
xor
mov
adc
inc
js
and
inc
cmp
xor
sub
sub
pop
inc
das
adc
sub
imul
fs
sub
mov
or
or
adc
push
xor
push
push
es
ins
lods
or
lock
pop
std
fwait
icebp
cmp
pop
mov
sub
pop
adc
cmp
(bad)
jmp
ss
sbb
inc
and
popf
and
pop
es
and
pop
add
pop
or
aaa
shl
jbe
dec
adc
jo
pop
push
lea
lods
shl
adc
inc
dec
pushf
sbb
dec
add
or
adc
lock
jmp
adc
jns
push
push
and
xor
push
mov
lock
cdq
pop
mov
lock
retf
push
adc
mov
aaa
dec
je
add
lea
movs
sub
in
sub
or
ret
and
or
sbb
or
sbb
cmp
dec
cs
adc
inc
push
and
mov
aaa
call
pop
mov
or
push
or
dec
xor
out
mov
pop
mov
es
push
jl
sbb
jno
jo
add
cmp
or
inc
adc
sbb
xchg
dec
adc
or
pop
fcomp
data16
sub
movs
jp
stos
push
xor
test
fwait
movs
adc
rol
pop
jl
sbb
gs
cld
sub
adc
cdq
arpl
ins
(bad)
aaa
fmul
push
or
dec
fild
in
data16
fbld
push
fcom
adc
or
cmc
(bad)
mov
push
sbb
cmp
push
pop
dec
dec
bound
loop
mov
cmp
jns
jae
dec
mov
pop
or
or
mov
inc
and
mov
add
clc
inc
inc
mov
and
sbb
pop
xor
xor
adc
cmp
gs
sub
or
mov
jbe
pop
or
and
or
and
or
(bad)
pop
add
dec
pop
jb
aas
sub
sub
sbb
es
pop
bound
or
pop
mov
or
xor
cli
je
pop
das
ins
sbb
sbb
inc
pop
enter
add
sahf
pushf
adc
dec
popf
and
xor
inc
or
xor
inc
push
sub
xor
or
adc
or
into
(bad)
adc
jg
push
and
sub
retf
mov
or
test
or
je
inc
pop
xchg
xor
xor
shl
jmp
or
pop
sbb
clc
sbb
cmp
ret
or
mov
xor
sbb
idiv
or
pop
popa
cmovl
ins
pop
sbb
push
xchg
pushf
push
sbb
jp
fidiv
and
mov
push
or
mov
or
or
outs
inc
pop
mov
and
dec
and
sub
push
aaa
dec
or
movs
lock
es
gs
dec
or
add
mov
clc
push
sbb
jp
cmp
sub
das
sar
inc
sbb
aaa
sbb
mov
inc
iret
pop
adc
(bad)
pop
icebp
jmp
daa
adc
push
dec
popa
aaa
sbb
pop
out
push
mov
sbb
ins
or
(bad)
inc
sub
sbb
push
sbb
cmps
sbb
pop
xor
and
movs
xor
cld
stos
fisub
ins
js
jg
pop
adc
adc
(bad)
aaa
xchg
adc
pop
jle
inc
inc
rcl
add
mov
mov
or
fdivr
sub
dec
adc
sub
fs
xor
mov
adc
or
or
or
call
and
push
or
jns
xchg
or
mov
movs
loopne
(bad)
mov
xor
cmp
and
inc
inc
sbb
cmp
das
cs
and
cmp
mov
push
pop
pop
mov
pop
dec
inc
and
dec
fsub
push
es
sahf
(bad)
cmp
(bad)
mov
aaa
and
loope
mov
xor
cld
inc
adc
loop
inc
jne
adc
ds
ds
dec
dec
jle
sbb
or
pusha
and
sbb
movs
adc
ret
or
cmps
(bad)
and
out
test
add
es
sub
push
pop
or
es
rol
xchg
sbb
mov
push
adc
or
inc
and
neg
lods
pusha
sub
add
push
or
sub
sub
and
and
push
push
shr
mov
pop
or
loop
mov
dec
daa
push
push
or
xor
or
or
jl
adc
fist
xor
jnp
jno
sub
push
xor
sbb
lock
test
jno
daa
mov
sar
mov
pusha
sbb
popa
sub
mov
cld
jg
mov
sub
pop
mov
pop
inc
(bad)
dec
inc
orps
aam
sbb
loopne
dec
or
xor
hlt
push
pop
or
and
pop
adc
and
mov
nop
xchg
shr
push
daa
sub
pop
inc
pop
test
sbb
fisub
push
shl
pop
and
dec
adc
pop
xor
and
jecxz
or
lock
jae
stos
fs
das
sbb
cmp
loope
daa
adc
inc
adc
adc
js
ds
dec
pop
adc
mov
sub
adc
or
sbb
xor
ficomp
sbb
jle
or
test
ds
push
push
cld
push
xor
pop
or
push
or
cmp
add
push
mov
pop
mov
lock
pusha
cmp
call
mov
mov
cmp
pop
adc
(bad)
mov
dec
dec
cmp
cdq
or
popf
or
clc
or
out
xchg
pop
cli
sbb
mov
adc
pop
dec
loopne
(bad)
adc
dec
cwde
push
test
int
(bad)
add
jo
jno
cli
and
push
jb
mov
sub
push
add
dec
and
jmp
sub
xor
xor
adc
mov
add
cmp
inc
and
push
xlat
push
cli
out
jle
cmp
inc
sub
pop
mov
push
mov
into
adc
adc
(bad)
scas
call
push
or
inc
xor
call
sbb
aaa
inc
pop
or
mov
xor
clc
movs
inc
cmp
pop
jp
inc
adc
sbb
inc
xor
push
adc
(bad)
call
(bad)
xor
and
inc
sub
aas
xor
arpl
(bad)
dec
cmp
sbb
xor
sub
sbb
sub
add
clc
jg
sbb
sbb
inc
inc
imul
sbb
push
(bad)
fldcw
xor
sbb
mov
and
nop
cld
or
pop
bound
or
inc
sbb
and
sbb
daa
sub
adc
sbb
or
add
cld
jge
xchg
pop
mov
lock
sbb
sar
jmp
inc
les
out
xor
sbb
mov
lahf
add
ficomp
aad
loop
xchg
xor
sbb
mov
inc
movs
jg
adc
lahf
or
fsub
inc
inc
xor
cmc
add
jnp
and
or
vmread
adc
adc
stos
lea
xor
movs
sbb
or
(bad)
(bad)
(bad)
jmp
or
sub
cmp
and
sub
or
add
cmp
dec
push
add
pop
je
sub
inc
adc
(bad)
jg
xor
adc
or
imul
pop
sub
pop
inc
sub
fcomip
xchg
or
and
nop
xor
aaa
adc
and
or
lock
ret
test
sbb
dec
push
sar
aas
mov
adc
arpl
dec
adc
dec
scas
xchg
adc
js
jne
sbb
jne
xchg
or
push
dec
and
ins
jae
or
ds
sub
sbb
adc
push
sbb
cli
push
pop
mov
push
(bad)
(bad)
(bad)
push
xchg
push
ins
lods
or
inc
sbb
jae
dec
adc
or
mov
add
pop
push
or
inc
aaa
sbb
xor
mov
pop
icebp
pop
pop
or
addr16
sub
xor
and
pop
and
push
or
lock
sub
xor
or
cmovge
sbb
sub
aas
adc
lea
cmp
(bad)
mov
adc
(bad)
movs
adc
adc
or
pop
(bad)
and
(bad)
(bad)
call
and
push
push
or
sbb
xlat
sbb
xor
pop
sbb
clc
stos
inc
lods
sbb
xor
inc
add
mov
mov
pop
ds
out
adc
push
sub
push
inc
adc
std
pop
inc
push
dec
adc
ds
inc
inc
call
jecxz
xor
aas
or
xor
sub
addr16
fs
loope
fistp
sbb
push
adc
sbb
adc
sbb
sub
dec
pop
or
xor
sub
inc
ret
adc
adc
daa
and
test
sbb
or
jg
sub
dec
or
adc
adc
int
push
inc
cld
out
mov
les
cmp
pop
cmp
push
sbb
and
adc
jne
xor
fadd
xor
js
push
add
inc
sub
daa
sbb
mov
xor
sub
stos
push
xor
jg
(bad)
jg
and
push
xor
adc
mov
push
or
jmp
imul
and
pop
push
inc
mov
or
pushw
or
pop
mov
dec
push
push
adc
(bad)
jmp
sub
or
shufps
imul
dec
cs
inc
cld
jg
or
or
imul
xor
cmp
mov
cwde
dec
jne
jl
hlt
sbb
cli
ret
mov
push
aas
sbb
push
or
dec
aaa
or
and
inc
cmp
mov
sub
and
mov
sub
aas
sbb
es
sbb
push
(bad)
int
in
or
and
pop
sbb
sbb
adc
rcr
adc
xor
push
aaa
jle
pop
push
es
jmp
(bad)
and
xor
inc
dec
aaa
xor
int3
xchg
push
sub
dec
pusha
jmp
movs
out
mov
cmp
inc
jns
popf
push
xor
test
or
xor
push
invd
push
dec
std
inc
sbb
push
les
lods
adc
or
mov
dec
xor
call
pop
pop
das
cmp
aas
adc
outs
lock
test
loope
jle
or
call
and
sub
xor
pusha
ins
and
shr
pop
adc
mov
int3
jp
or
lea
sub
fs
pop
test
inc
push
and
sbb
sub
or
sbb
pop
or
hlt
jg
and
push
jp
sbb
mov
adc
cmp
(bad)
mov
das
and
sbb
cmp
push
and
dec
cdq
dec
int
pop
sub
cmp
ret
pop
sub
int
lock
loope
adc
lock
mov
test
and
adc
xor
aaa
inc
pop
adc
cmp
or
(bad)
clc
jmp
sbb
cmp
fwait
jle
mov
ins
push
adc
push
xor
adc
adc
jle
loope
pop
popa
and
or
rol
jge
adc
sub
fs
idiv
out
clc
pop
mov
das
cwde
xor
jp
inc
jo
daa
xor
or
in
(bad)
call
xor
cmp
dec
or
dec
push
sbb
sub
cvtpi2ps
popa
xor
or
ss
or
pop
sbb
retf
push
cmp
adc
cmp
push
and
les
ss
cmp
sbb
push
push
cmp
or
dec
cwde
cmp
arpl
pop
mov
dec
aas
ss
push
push
inc
sub
(bad)
fwait
nop
arpl
das
pushf
cmp
push
fwait
ss
scas
(bad)
jmp
cmp
xchg
mov
or
pop
xchg
mov
inc
xor
aaa
inc
js
ss
push
inc
and
call
push
sub
add
cmp
std
jmp
xchg
sbb
add
push
retf
push
lods
call
sub
cmc
cmps
inc
cli
and
jne
loopne
xor
(bad)
popf
clc
pop
enter
cmp
cmp
cmp
sub
adc
xchg
inc
or
push
add
sbb
or
push
inc
ins
cwde
or
pop
and
ins
pmaxub
xor
dec
in
sbb
(bad)
and
or
cmp
sbb
sub
mov
and
mov
movs
call
push
leave
pop
pop
dec
add
aaa
xor
or
jns
seta
pop
cvtps2pi
pushf
sbb
cmps
push
(bad)
sbb
cmp
aad
jge
sbb
push
mov
inc
ret
and
or
or
adc
aad
dec
js
or
loop
mov
sub
push
daa
push
push
or
or
xor
xor
outs
sub
jno
dec
adc
sub
adc
sbb
xor
sub
pop
dec
push
mov
pop
adc
sbb
push
cmp
es
or
sub
cmp
cmps
mov
mov
scas
push
loop
mov
mov
xor
or
bound
es
mov
xor
je
push
(bad)
in
(bad)
(bad)
cmp
and
cmp
jb
or
push
and
cmp
or
add
jg
add
cmp
and
jb
sahf
and
pop
sbb
loopne
in
adc
jg
into
neg
sub
inc
jo
pushw
cmp
fsubr
mov
inc
sbb
or
loop
or
je
adc
out
js
test
cwde
sbb
cwde
ds
out
pop
outs
call
fist
or
std
outs
enter
bswap
or
lea
popa
xor
adc
inc
add
test
sbb
dec
push
js
imul
lds
mov
or
data16
jmp
arpl
or
push
or
(bad)
dec
dec
sub
push
arpl
and
sub
push
fwait
loope
call
rcpps
xor
mov
(bad)
js
pop
in
(bad)
dec
jae
aas
sbb
and
pop
or
push
sahf
mov
jo
mov
inc
pop
jae
or
push
in
adc
push
jp
push
cld
(bad)
push
pusha
pop
push
sbb
and
push
push
and
or
cmp
fs
xor
imul
or
pop
aam
pop
jmp
or
mov
imul
mov
push
or
mov
aas
cli
push
pop
sub
adc
adc
fisubr
(bad)
dec
xor
xor
or
xor
aas
pusha
adc
jmp
sub
(bad)
mov
or
sub
sbb
or
(bad)
(bad)
dec
push
push
je
adc
or
and
and
das
adc
ss
pop
mov
or
xor
enter
xor
clc
outs
cmps
dec
sbb
and
je
call
and
daa
mov
scas
(bad)
cmp
adc
inc
sub
sub
dec
push
adc
(bad)
inc
inc
sub
jge
pop
push
adc
or
xor
sbb
call
(bad)
adc
test
test
xchg
mov
addr16
out
clc
mov
test
cmp
push
inc
fimul
pop
and
mov
dec
ja
mov
pop
push
movups
fs
xor
mov
or
sbb
push
cli
inc
sub
mov
mov
cmp
pop
cmc
adc
shr
rsqrtps
fadd
jo
push
dec
test
mov
fst
adc
sbb
sbb
fadd
pop
push
call
cmp
pop
and
mov
push
xor
adc
and
adc
xor
or
addr16
mov
outs
dec
push
dec
adc
rcr
add
push
cmp
sub
adc
aaa
push
jl
loop
and
and
add
loop
cs
mov
(bad)
cmp
mov
pop
adc
sbb
jnp
or
add
aad
daa
pop
sbb
test
add
pop
dec
sbb
dec
adc
adc
dec
cmp
stos
pop
add
push
test
cmp
sub
or
add
(bad)
mov
mov
or
cmp
lock
cli
inc
or
or
into
and
and
cmp
dec
inc
mov
inc
adc
inc
push
aaa
sbb
sbb
pop
sbb
cs
push
cmovs
cld
xchg
and
cmp
or
les
jg
call
xor
sbb
pop
adc
xor
arpl
or
or
and
ja
or
mov
adc
into
dec
cld
pop
pop
push
or
and
lock
add
sbb
dec
ds
ss
popf
cmps
pop
(bad)
shr
xchg
and
dec
and
mov
cmp
ins
and
adc
nop
push
jmp
lods
mov
xor
and
ret
dec
fidiv
inc
inc
ret
out
daa
adc
js
pop
mov
pop
mov
aas
pop
adc
in
outs
inc
int
and
(bad)
aam
cld
xchg
(bad)
cmovge
ins
jbe
add
das
xlat
aam
stos
pusha
or
pushf
int
ret
inc
outs
lock
pop
ins
push
rol
cs
inc
adc
sbb
push
xor
cmp
das
xchg
scas
call
inc
adc
das
push
pop
lock
jmp
jae
xchg
or
and
rcl
pop
adc
(bad)
mov
imul
and
jb
sub
sub
pusha
add
frstor
daa
xchg
sbb
jo
sub
ret
jecxz
and
xor
ss
aaa
jbe
inc
jl
xor
jmp
mov
jl
cdq
nop
xor
dec
and
sar
inc
jle
and
jmp
adc
pop
pop
aad
sbb
mov
mov
test
mov
(bad)
jg
add
cmp
inc
adc
sbb
push
and
push
pop
das
pop
ins
jne
js
in
pop
sub
scas
mov
push
and
bound
add
xor
inc
or
and
and
push
jbe
or
(bad)
xor
sbb
ss
dec
jmp
(bad)
and
adc
adc
adc
pop
adc
es
or
inc
adc
or
mov
adc
add
xor
xor
(bad)
jmp
cmp
sbb
jnp
je
sub
jg
jb
sbb
cmp
pusha
cmp
retf
cmp
jb
sbb
and
jge
or
std
outs
lods
push
dec
dec
sub
add
cmp
or
sbb
or
popaw
(bad)
or
sar
aas
pusha
aaa
push
dec
or
adc
sbb
outs
and
and
jg
jmp
and
push
xor
or
pop
or
mov
dec
daa
jb
scas
or
pop
adc
xchg
or
pop
rol
jg
push
sbb
cmp
pop
dec
inc
adc
xor
(bad)
jg
test
or
inc
adc
and
sub
adc
adc
and
je
cs
push
sub
or
jb
inc
dec
loopne
cli
add
lock
ins
sbb
dec
loop
pop
das
dec
adc
iret
xor
or
mov
clc
gs
adc
inc
lock
pushf
ret
fst
std
pop
or
or
pop
pop
cmp
sbb
aas
dec
and
cmp
ja
push
mov
pop
push
and
or
cli
push
sub
mov
push
push
sbb
push
movs
add
js
adc
sub
inc
pop
xchg
inc
aam
add
sbb
imul
mov
sub
sub
ja
sahf
sub
inc
sbb
in
push
adc
nop
push
sbb
xchg
or
sbb
inc
lock
js
cmp
ins
or
push
xchg
mov
push
aas
cmp
dec
movs
dec
push
and
or
adc
cmp
cmc
sub
cmp
movs
adc
mov
adc
and
xor
sbb
inc
jnp
ins
ds
and
sub
adc
scas
cmp
xor
jle
pop
sbb
cmp
push
add
adc
out
and
push
adc
mov
dec
adc
inc
mov
mov
stos
or
pop
adc
pop
add
sbb
jmp
or
pusha
push
ret
sub
cld
pop
hlt
(bad)
jle
ss
sub
sub
xor
dec
jno
stos
pop
test
or
and
push
dec
or
and
dec
les
or
pop
mov
or
daa
or
jp
jge
cmp
adc
cmps
cli
cmps
xchg
sub
push
jae
or
mov
inc
es
sbb
dec
or
xor
adc
push
or
mov
adc
mov
pushf
les
dec
adc
sbb
sub
bound
or
loope
scas
(bad)
jmp
sbb
push
xor
popf
adc
sbb
data16
adc
pop
or
pop
lock
and
xchg
dec
push
or
sub
fmul
jp
daa
push
jp
test
dec
jo
or
mov
outs
cli
pop
rcl
pop
push
mov
adc
das
mov
push
adc
pop
push
sbb
adc
jge
inc
lahf
and
imul
or
in
xor
das
pop
push
jle
stos
(bad)
(bad)
push
pushf
or
pop
sbb
cmp
les
dec
dec
sbb
and
shr
or
inc
or
dec
adc
or
mov
inc
call
pop
icebp
inc
clc
and
ss
add
and
add
sub
xor
mov
adc
hlt
adc
inc
sbb
push
adc
inc
lods
in
es
nop
pop
adc
push
inc
pop
sub
sbb
cs
mov
loop
jo
xor
and
xor
pop
not
mov
sbb
sub
xor
movs
sbb
dec
push
outs
or
cmp
das
inc
daa
dec
sbb
push
sbb
mov
add
adc
(bad)
mov
jle
and
es
dec
leave
data16
xor
cmp
cmp
sub
inc
push
xor
call
or
adc
adc
adc
cs
adc
inc
aas
or
mov
ins
sbb
and
adc
push
and
xor
xor
outs
ins
clc
pop
mov
push
push
jge
push
cmp
or
push
pop
movs
inc
push
xor
mov
pop
mov
dec
mov
sub
and
and
and
cmp
jp
sub
sbb
or
add
imul
adc
pop
mov
je
sbb
jno
addr16
xor
inc
or
and
pop
cvtpi2ps
inc
add
jmp
adc
push
push
xor
outs
adc
dec
adc
rcl
xor
cs
dec
mov
xchg
es
and
pop
jno
sbb
mov
or
or
mov
add
or
(bad)
pop
push
or
mov
add
icebp
pmaxsw
mov
add
sbb
add
aam
das
sub
dec
push
pop
push
mov
jle
popa
(bad)
mov
and
xchg
out
cwde
add
sub
push
pop
lahf
jmp
add
or
sub
sub
sbb
xor
sbb
add
pop
(bad)
jmp
mov
and
enter
wbinvd
and
and
pusha
mov
and
and
pop
mov
lods
add
call
fcomip
(bad)
lods
dec
sbb
xor
idiv
call
lock
dec
xor
ss
push
pop
popa
sbb
sbb
add
add
xor
or
sbb
mov
mov
into
hlt
jne
adc
or
sbb
push
or
push
sahf
adc
aaa
adc
lock
add
xchg
or
popf
les
add
adc
mov
add
push
sub
sbb
sub
out
inc
or
cmp
xor
cmp
or
cmp
and
fdivp
xor
add
out
loopne
sbb
xchg
add
loopne
es
push
sbb
push
mov
cmp
inc
addr16
adc
scas
fdivr
in
adc
sbb
or
retf
add
imul
adc
neg
sub
cmp
adc
adc
loop
ror
test
inc
add
(bad)
cs
sahf
xor
adc
or
cmp
add
push
sbb
push
push
sub
inc
push
inc
or
sbb
and
adc
fld
and
and
pop
out
push
mov
int3
or
xor
mov
sub
inc
pop
xchg
jg
xchg
sbb
jp
or
or
push
push
mov
push
add
imul
mov
or
xchg
add
add
pop
aaa
xchg
sbb
and
ds
mov
pop
ins
fdecstp
inc
or
inc
or
fcomp
fmul
les
loopne
mov
xor
adc
cmp
jp
jmp
or
adc
dec
outs
pop
jne
shl
add
sub
adc
or
pusha
adc
dec
dec
push
ret
cs
mov
jg
xchg
xchg
push
and
or
adc
cmp
mov
pop
inc
push
push
jo
aaa
or
adc
fmul
pop
dec
fsub
pop
pop
jb
add
cmp
jmp
fimul
sbb
sbb
(bad)
(bad)
fiadd
and
in
pop
loope
jne
loop
and
or
inc
push
sub
and
pop
jmp
dec
pop
jle
mov
or
sbb
das
add
adc
pop
cmp
(bad)
mov
sub
mov
inc
add
mov
or
or
pop
push
mov
sbb
loopne
push
and
push
pop
pop
std
outs
(bad)
fild
cmp
xchg
pop
mov
xor
jg
in
shl
push
inc
pop
popf
xor
jp
and
or
rcl
or
sub
mov
cmp
dec
add
sub
lock
dec
and
in
inc
jmp
pop
sbb
cmps
jbe
mov
push
sub
add
or
outs
xchg
xchg
sbb
jo
or
pop
sbb
lea
outs
mov
push
add
or
dec
and
xor
or
and
cs
xor
scas
push
mov
adc
lock
or
push
gs
or
cmp
rcl
imul
clc
lock
dec
inc
cld
pop
add
or
mov
loope
cmps
dec
retf
outs
and
or
int3
js
out
scas
fwait
and
push
inc
test
shr
add
mov
shr
cs
cmp
push
popa
ds
jne
inc
add
sub
mov
mov
mov
ja
aad
mov
and
push
jo
dec
dec
mov
sbb
push
jge
cmp
mov
or
or
outs
mov
inc
or
push
adc
test
pop
dec
adc
or
arpl
or
loopne
shl
pop
imul
mov
sub
adc
dec
jae
je
je
adc
stos
jecxz
inc
xchg
add
sbb
mov
mov
ins
fdiv
ins
dec
shr
std
or
cdq
inc
and
dec
mov
mov
std
add
inc
outs
mov
and
and
add
sahf
adc
push
xchg
imul
cs
jle
adc
push
loop
(bad)
push
or
add
and
adc
ins
cmp
movs
lock
lock
add
dec
inc
dec
or
push
adc
lock
jle
cmc
and
jnp
sub
ret
mov
pop
inc
adc
adc
add
or
js
pop
cmp
push
or
gs
(bad)
cmps
or
or
push
call
es
test
mov
pop
fs
and
mov
xor
cs
cmp
and
xor
or
mov
ins
xlat
bound
inc
adc
mov
xor
or
xchg
(bad)
cli
pop
cmp
pop
outs
adc
ret
push
jge
fs
lock
dec
cli
dec
sbb
adc
(bad)
call
pop
pop
sbb
sbb
fdivr
scas
add
clc
add
adc
push
jg
dec
mov
inc
push
adc
sbb
inc
sbb
or
cmps
adc
sahf
lock
adc
push
adc
test
wbinvd
pusha
and
mov
push
add
es
cmp
adc
push
push
sbb
mov
push
mov
mov
(bad)
adc
rcr
and
jp
(bad)
xor
pop
arpl
imul
adc
push
or
and
and
daa
and
pop
icebp
add
and
jb
pop
pop
sub
mov
daa
or
add
sub
push
push
sbb
dec
xor
ds
sub
dec
dec
es
sbb
sub
pop
sub
and
and
sub
fld
out
in
cs
cs
and
mov
test
xor
in
push
dec
xor
and
xor
es
sub
aas
pusha
pop
jne
clc
in
add
and
sbb
data16
dec
push
jl
xor
and
sub
inc
cmp
mov
(bad)
es
inc
and
inc
sub
mov
fs
mov
inc
sub
in
popa
add
xor
aas
jl
add
fadd
pop
cmp
pop
push
dec
retf
in
fdiv
xor
jle
div
xor
pop
scas
xor
and
sub
or
xor
mov
xor
xor
addr16
cmp
inc
pop
ins
dec
ins
cmp
inc
mov
das
idiv
inc
ss
xor
pusha
mov
fnstenv
push
adc
sub
jbe
es
rcr
pop
xor
sar
jnp
push
sub
cs
xor
ss
mov
aam
dec
dec
sub
aas
and
ss
retf
xchg
pop
cdq
jle
ret
add
ja
xor
mov
test
or
inc
cmp
inc
xor
dec
xchg
mov
loope
and
sahf
xor
icebp
pop
sub
add
inc
cmp
fmul
fdivr
rol
inc
sub
sbb
adc
inc
xor
sub
lds
sub
fsubr
aas
push
aaa
push
xor
cmp
pop
fmul
xor
sub
or
rcl
pop
mov
or
sbb
cmp
and
xor
int
cmp
cmp
xor
ds
jae
mov
sub
dec
and
sbb
xchg
dec
cmp
or
cmp
dec
cmp
add
and
push
(bad)
inc
jo
sub
xor
imul
add
dec
pop
xchg
cmp
inc
xor
adc
pusha
(bad)
(bad)
xor
sbb
rcl
and
cmp
xor
cmp
add
jle
dec
dec
ds
ss
xchg
out
mov
push
enter
dec
and
xchg
aas
dec
dec
sub
push
cmp
sub
adc
pop
in
or
inc
dec
and
and
(bad)
mov
mov
dec
jl
cmp
push
cwde
ds
cmp
pop
sub
add
xor
xor
cmp
or
xor
outs
pop
push
dec
aaa
xor
inc
das
inc
dec
inc
and
pop
inc
cs
and
cmp
and
inc
inc
or
and
sbb
fiadd
mov
xor
inc
xor
pop
cdq
outs
adc
call
and
pop
iret
mov
dec
xor
(bad)
mov
das
xor
xor
xor
daa
jae
adc
cs
popa
or
pop
pop
mov
mov
dec
daa
loop
(bad)
push
xor
cmp
dec
push
push
pusha
pusha
pop
or
dec
imul
dec
mov
mov
sub
add
(bad)
push
cmp
add
pop
or
sub
add
adc
jg
lock
add
jbe
mov
inc
ret
xchg
mov
pop
js
fcomp
jle
push
xor
(bad)
jg
mov
test
lds
lock
add
or
mov
lock
add
lock
mov
arpl
shr
fld
mov
push
ret
lock
dec
icebp
add
mov
push
and
(bad)
or
std
push
call
bound
aam
and
mov
adc
adc
adc
shr
sbb
add
mov
push
add
xor
add
dec
cld
outs
ret
push
add
ror
outs
add
adc
mov
cmp
add
pop
fisubr
add
jp
retf
iretw
sub
or
dec
mov
mov
stc
ins
xor
dec
repz
and
adc
add
fimul
imul
cmp
loopne
add
and
mov
test
fisub
gs
rol
loope
adc
add
icebp
inc
mov
mov
sbb
cld
(bad)
pusha
cmp
add
add
mov
adc
and
add
in
pop
and
adc
fwait
sbb
out
push
add
push
pop
or
outs
push
and
add
jge
(bad)
pop
pop
mov
popf
cmp
dec
or
add
pop
movs
les
aam
pop
push
sbb
push
or
test
add
jo
out
in
push
inc
(bad)
in
inc
xchg
dec
add
inc
enter
mov
sbb
or
outs
and
sbb
jmp
sbb
or
inc
rcl
lea
dec
xor
inc
shl
dec
adc
mov
xor
mov
add
sahf
push
inc
add
std
cmp
sub
or
add
jns
adc
push
mov
sbb
(bad)
adc
mov
adc
xchg
sbb
pop
and
adc
mov
inc
mov
mov
add
sub
pop
clc
iret
add
adc
lods
and
adc
xor
pop
pop
sbb
add
mov
or
adc
loop
and
nop
lock
mov
inc
mov
and
and
je
add
push
pop
jo
sbb
push
jl
stos
out
mov
clc
jbe
add
add
add
cmp
cmp
icebp
mov
adc
pop
sar
enter
cmp
add
je
rol
mov
pusha
pop
inc
mov
or
push
adc
inc
add
xor
dec
mov
sbb
sbb
add
jno
add
inc
add
lock
adc
or
or
or
fst
mov
cmp
mov
pop
jns
cmps
and
jne
movs
inc
push
mov
xor
jno
test
push
sbb
adc
enter
retf
lock
add
xchg
xchg
sbb
movs
inc
inc
add
inc
mov
push
push
mov
inc
add
push
adc
jmp
adc
std
add
add
scas
mov
or
movs
dec
and
js
cs
movs
stos
bound
aad
mov
push
sub
mov
jne
add
adc
stos
test
or
push
inc
pusha
stos
push
and
je
sub
xor
pusha
repz
mov
stos
push
adc
das
adc
add
test
add
adc
or
xor
add
jmp
pop
or
pop
xor
pusha
xchg
jno
ret
mov
call
xor
add
push
inc
mov
rol
je
fcomp
push
or
cmp
jno
push
mov
movs
push
add
rcl
cmp
xchg
push
add
dec
sub
add
inc
sbb
or
mov
mov
dec
mov
call
les
or
sub
mov
out
inc
xor
jecxz
call
sbb
add
add
mov
xor
inc
pop
mov
and
mul
sbb
sbb
dec
sub
pop
push
push
jecxz
rol
adc
fimul
ret
retf
inc
cmc
stos
ficom
sbb
dec
xor
popa
adc
popa
cdq
inc
xchg
mov
mov
pop
mov
dec
adc
dec
sub
sbb
out
jp
adc
pop
add
cmp
xor
add
hlt
xor
mov
sub
and
mov
test
inc
adc
push
popa
ins
push
push
pop
jo
std
adc
test
test
(bad)
nop
imul
mov
ss
les
and
dec
adc
cmp
inc
ror
out
adc
nop
sub
movs
mov
int3
shl
test
pop
sub
add
xor
xor
sub
sbb
les
adc
into
rol
sub
and
cmp
or
add
sbb
outs
add
and
add
lds
and
ss
xor
add
or
iret
and
pusha
adc
mov
rol
not
ds
push
xor
adc
ins
ins
lods
in
lods
mov
(bad)
mov
adc
test
adc
cmp
or
push
or
sbb
or
adc
mov
repz
dec
add
lock
and
int3
add
and
and
sbb
or
sub
mov
sbb
inc
adc
aad
or
sub
imul
jg
push
push
mov
jge
sub
inc
xor
push
mov
push
shl
shr
jmp
adc
mov
mov
dec
mov
xchg
loope
adc
push
jno
inc
sub
mov
inc
loope
pusha
jg
and
add
or
movs
scas
push
cwde
add
in
mov
jp
cmp
or
jl
or
lock
xor
pop
adc
sub
xor
add
fadd
stc
lock
daa
lock
sbb
xor
and
fadd
push
in
dec
pop
test
adc
loopne
retf
mov
rol
push
add
jle
lods
add
and
or
lock
push
dec
push
loopne
imul
add
in
jl
add
cmp
cs
ja
pop
or
push
xor
push
lahf
jnp
push
stos
cs
cld
add
adc
sub
adc
sbb
neg
inc
ss
add
imul
mov
mov
pop
imul
push
or
pop
sbb
xor
sbb
xchg
mov
push
push
pop
sub
pop
mov
sbb
push
test
and
in
lods
mov
ficom
adc
aad
adc
and
cmps
popa
push
adc
and
(bad)
inc
or
sub
sub
adc
push
sub
stc
pop
lea
inc
push
pop
jnp
lahf
sub
push
(bad)
inc
mov
cmp
mov
push
call
jae
mov
xlat
test
popa
repz
push
mov
xchg
sub
ins
les
das
xor
cwde
gs
jmp
sub
pop
inc
adc
push
lgs
lods
adc
adc
rcl
mov
mov
sbb
imul
das
inc
and
lods
loope
fsubr
aad
adc
iret
or
cmp
fcmovbe
ret
pop
mov
sub
push
xchg
sub
xor
sbb
test
mov
adc
mov
mov
adc
sbb
bound
test
mov
pop
xor
lods
or
cmp
pop
movs
aad
dec
mov
and
add
or
push
add
mov
movs
mov
jae
loop
stos
lods
movzx
pop
mov
aaa
jns
shr
xor
jno
xor
ret
shr
jge
test
inc
dec
mov
stos
adc
cmp
(bad)
ins
push
lods
icebp
xlat
mov
jge
or
adc
and
or
clc
and
or
ss
or
sbb
loopne
in
int3
add
sbb
cmp
lods
(bad)
dec
bound
or
aaa
add
ja
pop
inc
push
add
mov
dec
sub
and
imul
stos
push
sbb
and
sub
lods
jge
shl
push
adc
or
jo
add
ror
adc
fdivr
stos
and
out
imul
xchg
movq
sbb
inc
or
imul
push
icebp
das
xchg
iret
test
xor
or
xchg
loope
jl
imul
sub
push
push
cdq
pop
push
or
or
cmps
std
(bad)
(bad)
push
mov
adc
cmp
or
(bad)
or
scas
iret
inc
sub
(bad)
sub
sbb
test
out
inc
add
test
arpl
sub
fadd
mov
adc
sbb
rcl
fcom
or
(bad)
sub
fidivr
pop
add
pop
push
or
jnp
jge
stos
fdecstp
xchg
shl
or
inc
pop
fild
call
mov
repz
jmp
mov
sbb
inc
pop
out
mov
(bad)
push
push
(bad)
pop
ret
adc
pcmpgtw
cwde
cs
das
push
adc
test
popa
sbb
mov
mov
mov
adc
ins
lods
push
lds
out
push
ins
mov
or
or
pusha
icebp
scas
xor
arpl
mov
ins
and
mov
pop
adc
scas
aad
push
mov
mov
add
xchg
mov
sbb
mov
xor
push
sar
add
xor
aad
ficomp
dec
test
push
sbb
scas
in
or
pop
push
fisubr
push
mov
and
add
jmp
adc
pop
aas
outs
pop
add
push
pop
xor
fimul
and
fimul
sub
pusha
xor
test
dec
ror
pop
dec
test
lds
sbb
sub
push
or
mov
call
(bad)
inc
(bad)
test
jg
adc
or
adc
or
adc
pusha
or
stos
jmp
mov
dec
mov
imul
stos
lods
ins
popa
imul
aas
test
pop
jmp
shl
adc
out
stos
add
ins
mov
xchg
lods
inc
pop
inc
inc
aam
call
mov
push
test
test
sub
and
mov
fisubr
in
add
mov
fstp
sbb
pop
add
push
mov
xor
cmp
sti
jno
imul
dec
pop
ss
add
test
cli
xor
or
add
xchg
xor
les
push
daa
pop
sub
inc
pop
mov
xchg
pop
inc
imul
sub
call
sbb
inc
mov
imul
gs
out
sbb
rcr
inc
pop
or
sub
mov
adc
xchg
sub
adc
stos
lods
sub
popf
stos
aad
adc
mov
movs
push
pop
pcmpeqb
(bad)
iret
jae
inc
test
or
pop
add
addr16
lea
enter
aad
cmp
mov
fwait
pop
push
xchg
jns
lods
adc
out
adc
cmp
pop
xchg
inc
pop
pop
mov
pusha
dec
xor
push
jns
add
push
mov
lds
mov
sbb
ins
jo
pop
mov
or
pop
stos
and
adc
xlat
aam
cmp
ss
mov
push
add
add
xlat
dec
add
sub
adc
and
push
push
mov
mov
inc
in
xor
mov
jge
test
jne
inc
adc
jmp
sbb
icebp
cmps
push
mov
add
push
dec
sub
adc
xor
pop
(bad)
not
inc
rcl
add
sub
movs
sub
push
mov
jno
stos
or
mov
or
test
mov
rol
sub
inc
mov
sub
xor
stos
mov
mov
inc
cld
dec
add
sbb
sub
and
sub
adc
sub
ins
fstp
sbb
inc
or
cmp
inc
sbb
xor
test
pop
in
pop
mul
sbb
sbb
sub
push
adc
dec
add
int3
fstp
jmp
xor
and
xchg
in
xor
sbb
mov
mov
xlat
sar
and
dec
pop
inc
pusha
jo
ins
sub
dec
inc
and
imul
lods
xor
bound
add
and
push
xor
aaa
fistp
pusha
sbb
jne
adc
xchg
and
and
fadd
inc
pop
inc
sub
xor
xchg
pop
add
into
outs
shr
sbb
dec
sbb
add
xor
mov
jbe
fldl2e
loope
in
adc
or
adc
outs
fnstcw
jns
(bad)
retf
popa
lock
add
xor
pop
cmp
sbb
adc
mov
mov
or
call
dec
sahf
pop
sbb
ds
mov
sbb
cmp
sbb
lahf
mov
adc
gs
sbb
push
sbb
adc
add
sbb
push
fadd
push
pushf
push
inc
xor
add
mov
cmp
add
dec
inc
add
xchg
loopne
jno
push
add
in
sub
dec
leave
aam
test
pop
mov
add
adc
fwait
add
add
aaa
and
push
jne
inc
mov
add
push
and
adc
xchg
or
add
jl
daa
or
adc
add
sub
mov
sub
jno
inc
mov
je
jecxz
add
xor
xor
inc
inc
and
test
mov
sub
outs
mov
add
loopne
add
or
or
sbb
and
daa
bound
gs
sbb
inc
js
mov
add
lldt
push
push
add
out
in
fist
and
and
cmp
push
xor
add
pop
cs
sub
sbb
sbb
aas
push
add
imul
cs
rol
bound
lahf
cmp
inc
cld
and
jb
add
movs
fs
sub
push
idiv
pusha
fild
sbb
inc
cs
dec
and
addr16
jmp
scas
and
sbb
aas
shr
jae
arpl
out
hlt
aaa
outs
mov
dec
gs
outs
arpl
xlat
add
fnstcw
fadd
push
and
retf
add
outs
stos
and
xchg
and
xchg
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
popa
add
add
